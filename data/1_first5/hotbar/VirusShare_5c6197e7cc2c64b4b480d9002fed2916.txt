divl
in
mov
mov
loopne
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
push
cmp
sub
aam
fwait
mov
repz
punpckhwd
add
mov
mov
in
or
push
push
outsb
iret
negl
inc
cld
add
pop
mov
add
incl
sti
inc
add
add
call
jle
add
sti
popf
mov
es
mov
mov
lock
add
in
out
fidivs
sbb
pop
inc
push
je
sbb
or
in
in
xlat
adc
cs
loop
inc
adc
fmuls
mov
adc
mov
imul
mov
or
in
mov
cwtl
in
push
lock
lahf
and
fldenv
add
jp
fsubrs
cwtl
aaa
cmp
push
mov
push
fucomip
ja
push
push
lods
punpckhdq
add
fdiv
fistpl
fisttpl
adc
add
test
je
repnz
pop
add
pop
mov
push
ss
push
sub
loopne
push
rolb
add
outsl
lock
push
call
cmp
aad
add
in
xchg
mov
xchg
dec
add
xchg
add
sub
in
push
call
lock
pop
sub
sahf
or
jo
call
xor
ss
loopne
jg
cld
lahf
js
in
push
push
mov
in
inc
push
or
inc
mov
pop
sbb
idiv
fsubl
leave
cmp
jge
mov
jmp
mov
iret
jnp
pop
and
push
inc
inc
dec
push
mov
push
and
and
idivb
cmp
adc
push
int3
push
pop
mov
aaa
jp
jp
jb
mov
xchg
or
out
imulb
rolb
and
inc
cmp
jae
jnp
pop
and
cmp
pop
stc
push
mov
add
lods
push
sbb
add
mov
push
mov
push
insl
xor
or
sahf
lock
adc
add
sbb
sbb
jle
push
movsl
lcall
or
and
stos
ss
sbb
jge
arpl
dec
lock
add
call
out
addl
jb
adc
xlat
flds
popf
sbb
pop
xchg
gs
mov
and
sbb
and
or
lahf
xor
sub
push
sbb
jo
push
aaa
js
mov
push
or
shlb
push
addb
xchg
push
sbb
subl
and
or
and
out
push
or
inc
pop
cmpl
and
std
jnp
pop
fwait
repz
push
fwait
je
bound
mov
adc
movsl
lods
mov
push
cwtl
mov
push
scas
aas
outsb
sbb
mov
int3
push
xchg
mov
xchg
jle
or
cmp
mov
push
push
sbb
idivl
push
xchg
loop
cmp
lahf
sub
mov
test
jne
data16
pop
inc
pop
dec
es
and
mov
outsb
push
shrb
push
movsb
sub
cmp
xchg
lret
sbb
sub
push
adc
pop
scas
inc
pmulhw
movsl
fldl
jmp
pushf
or
add
dec
push
push
push
nop
pop
and
cmp
push
xchg
es
adc
subb
fs
sbb
xchg
or
push
pop
mov
xlat
push
push
cltd
mov
push
sarl
inc
xchg
adc
in
inc
add
jmp
inc
cmp
mov
xor
leave
repz
push
mov
xor
cs
pop
pushf
fsub
inc
push
xchg
stos
test
add
pushf
inc
pop
and
push
push
push
cmp
jle
or
loopne
test
push
fcmovu
loope
and
push
pop
push
push
adc
mov
ret
fiaddl
jl
or
out
fwait
int
push
mov
pushf
ret
jle
push
xchg
or
xor
and
mov
lcall
xor
push
mov
ret
out
cltd
mov
push
mov
jl
or
out
icebp
stc
mov
mov
mov
pusha
rclb
mov
daa
pop
stos
pop
or
out
xchg
cmp
je
xor
mov
lea
outsl
push
mov
aaa
je
nop
stos
les
icebp
add
mov
js
jno
mov
mov
movsb
and
cmp
add
xorb
cmp
stos
mov
sbb
dec
je
inc
or
lret
push
insb
fistl
popa
jae
or
mov
lea
sbb
movsb
xchg
and
add
lret
out
into
enter
pop
cmc
adc
stos
pop
push
stc
or
ds
inc
or
ljmp
fistps
bound
xor
or
push
add
leave
ret
push
mov
sbb
hlt
test
pushf
fimull
ss
aad
xchg
and
push
cmpb
mov
lock
jg
cmp
jne
pop
mov
sub
rolb
lods
fisubrl
push
mov
sub
dec
pushl
pop
in
adc
adc
push
push
adc
adc
mov
test
lahf
mov
lds
decl
push
push
mov
cmp
das
out
sub
rolb
mov
push
std
lods
sub
call
mov
test
jne
fs
inc
cmp
jl
jmp
mov
add
pop
push
rcll
ret
push
pop
jmp
sub
xor
cli
jl
push
loope
js
mov
ret
mov
popa
aad
mov
mov
push
mov
sbb
pop
out
loopne
jne
or
sbb
mov
mov
mov
lret
gs
add
add
mov
push
andl
push
mov
sub
mov
cmp
jl
push
mov
and
adc
push
push
push
and
sbbb
pop
pop
ret
push
dec
adc
shll
or
repnz
dec
mov
outsl
bound
scas
stc
test
jne
pop
jo
rcr
arpl
dec
pop
push
cs
rcrl
sti
imul
xor
add
pop
or
jne
js
sub
pop
das
cli
adc
fmuls
iret
xchg
out
test
inc
or
orl
test
add
int
jno
sub
add
lea
push
mov
add
sbb
cmp
ja
add
jmp
mov
push
pusha
addr16
clc
adc
or
ret
icebp
cmp
fsubrs
idivb
cmp
je
or
std
adc
cwtl
call
dec
mov
jmp
xor
subb
mov
into
pusha
jo
pop
shlb
mov
jmp
xchg
loopne
out
in
adc
push
repnz
cld
cmp
mov
ja
lea
decb
pushl
data16
mov
cmp
jmp
jge
sbbw
andb
pop
pop
pop
lock
pop
rolb
loop
andl
inc
out
jo
dec
add
fsubl
add
add
out
insl
mov
cmpl
iret
test
mov
lock
imulb
insl
aam
cmp
push
push
dec
enter
xor
lods
mov
je
push
jno
and
ss
push
push
mov
cmp
push
outsl
les
pop
pop
movsl
mov
loopne
je
pop
push
call
mov
psubq
pop
das
icebp
inc
ds
and
out
inc
add
jae
roll
sub
push
ret
dec
adc
cmp
or
cld
pop
jl
dec
clc
mov
mov
je
cmpl
aaa
push
jl
mov
cmp
jne
push
push
jge
into
test
ret
nop
pop
pop
jmp
in
adc
pop
dec
pop
arpl
aas
ss
dec
dec
bound
leave
xor
mov
sub
inc
or
cs
jge
decl
popl
out
jl
lods
loope
adc
inc
clc
jg
inc
fimuls
movb
xor
mov
int3
cltd
ja
out
add
cltd
adc
jmp
inc
or
shlb
adc
ret
outsl
mull
sbb
ja
scas
movb
mov
sub
push
inc
pop
and
add
and
sbb
and
xchg
mov
jne
test
or
out
xlat
mov
push
push
call
subl
xor
into
cs
cmc
ljmp
push
fnsave
mov
ds
mov
xchg
shlb
adc
lods
xor
xchg
lods
pop
insl
stos
xchg
clc
jge
inc
or
push
dec
jns
push
inc
loop
scas
push
int3
test
mov
xchg
add
cmp
mov
xchg
mov
or
jle
push
daa
daa
jmp
mov
cmp
jge
mov
ret
ret
rol
mov
push
out
cmp
inc
mov
lea
cmp
frstor
mov
add
xor
jbe
inc
add
or
test
das
push
adc
adc
test
jmp
ljmp
pusha
fcomp
or
push
mov
bound
or
pop
pusha
push
roll
push
dec
fs
cmp
ret
ror
or
adc
jge
cmp
ss
mov
cmp
xor
cs
xlat
sahf
and
adc
loop
xor
add
enter
or
scas
leave
push
inc
add
or
cmp
ret
push
rolb
sub
inc
fldt
cltd
jmp
add
js
orl
cmp
dec
add
adc
scas
das
js
mov
pop
pop
jmp
test
je
sub
subb
adc
mov
outsb
je
in
call
out
pushl
movsl
popf
mov
ret
push
mov
mov
inc
ret
push
cmp
out
fidivs
test
shlb
flds
cld
cmc
imul
sub
sbb
je
or
cltd
lds
pop
iret
js
mov
dec
shlb
xchg
fldt
or
inc
add
mov
add
mov
push
push
pop
and
sbb
push
push
or
cmp
add
or
int
in
cli
jb
inc
and
pop
add
or
shrb
sbb
das
or
ret
add
sbb
xchg
adc
adc
jb
and
inc
adc
sbb
iret
fstpl
sub
sbb
test
sti
outsb
das
sbb
sbb
add
push
roll
or
jae
push
sub
xor
or
into
adc
pop
sbb
pop
iret
js
push
sbb
test
or
add
imul
pop
pop
test
dec
or
clc
add
cmp
ja
or
iret
divl
or
je
cmp
popf
addl
lds
pop
sbb
mov
hlt
mov
push
cltd
pop
idivl
push
adc
cmp
push
jge
push
rcrl
adcb
push
pop
mov
dec
sbb
data16
sub
add
jmp
jecxz
push
push
jbe
call
push
in
leave
cmp
pop
mov
out
aaa
std
fst
sub
dec
je
je
je
sub
icebp
xor
adcl
push
ss
call
mov
std
cmp
sahf
test
movsb
mov
push
xchg
inc
adc
int
jp
jecxz
aaa
cmp
pop
jne
addl
cmp
clc
rolb
push
or
insb
xor
add
add
mov
sarb
mov
or
enter
ja
push
xchg
adc
push
mov
cmp
cmp
pop
sbb
mov
mov
iret
xchg
mov
movsb
push
jg
clc
add
sub
jo
js
je
pushf
divb
mov
cmpb
adc
xchg
loopne
mov
sbb
adc
jmp
cmp
je
cmp
rol
imul
jmp
inc
sbb
mov
adc
adc
xor
dec
fstpl
jbe
cmp
jmp
sbb
dec
xchg
jmp
and
lds
data16
sbb
fcomi
mov
and
push
push
sub
jl
out
nop
fsub
or
jge
out
adc
push
push
cli
sbb
fs
stos
xlat
ljmp
js
loopne
cs
push
push
pusha
aaa
jo
lods
sub
sub
jnp
cs
or
clc
movb
xor
or
adc
sub
scas
add
sbb
dec
push
cld
pop
mov
and
push
pop
push
lea
push
add
or
push
lea
repz
sti
cmp
mov
pop
leave
aam
les
scas
pop
or
pop
repnz
jns,pt
add
adc
movl
subl
arpl
xchg
dec
xor
mov
ja
out
adc
jo
cmp
imul
sbb
push
cmpsl
lods
mov
mov
movl
mov
mov
test
addl
xor
add
pop
leave
sbb
int
dec
jmp
cltd
orl
mov
add
push
sub
cmp
sub
xchg
sbb
lret
sbb
dec
repz
mov
adc
mov
ret
adc
inc
push
push
stos
popf
aad
dec
lock
cs
aam
test
not
and
push
dec
mov
and
sub
jae
jecxz
xor
or
push
push
cmp
xchg
adc
nop
jnp
push
push
push
mov
inc
popf
iret
mov
aas
jns
mov
xor
loopne
mov
movsl
cmpsl
lods
and
sahf
or
add
bound
pop
pop
daa
lea
je
pop
mov
jo
adc
mov
int3
das
xchg
fucomip
and
cmpl
add
mov
sbb
addb
pop
push
push
cli
hlt
dec
lods
pusha
and
pusha
adc
outsb
xor
xchg
lods
insb
mov
push
ljmp
adc
clc
push
std
jmp
sub
mov
pushl
mov
mov
hlt
dec
adc
mov
dec
lea
idivb
popf
mov
negl
pop
cld
je
dec
pop
mov
sub
ret
ret
add
bound
in
std
out
imul
mov
shll
mov
cmp
inc
cmp
cmp
sbb
pop
pop
leave
fldcw
mov
mov
xlat
inc
mov
lock
ret
pop
sub
rclb
repz
mov
adc
sbb
pop
push
and
inc
sub
push
mov
sbb
mov
mov
inc
js
dec
mov
mov
neg
sbb
and
and
mov
add
adc
fs
push
pop
mov
inc
pushw
add
push
shll
mov
push
lahf
push
insb
mov
adc
jg
or
jb
lea
sbb
pusha
icebp
leave
and
test
aas
mov
or
adc
les
mov
mov
call
ja
xor
ljmp
nop
and
and
or
mov
cmpsb
push
sbb
lods
lock
push
mov
inc
mov
jmp
pushl
and
repnz
add
incl
push
popa
hlt
add
jo
mov
daa
sbb
xchg
in
loope
arpl
sub
jge
add
jge
lds
mov
ss
adc
xchg
sbb
fsubrp
adc
jmp
jg
jmp
mov
add
xchg
andl
pop
stos
ss
cmp
push
mov
lds
loopne
push
fsubl
push
andb
sub
out
pop
icebp
sahf
mov
js
push
push
sbb
in
pop
adc
jbe
add
hlt
movb
das
jo
lock
or
xlat
dec
fldz
enter
xor
cwtl
jo
movb
loope
push
loope
cld
aas
mov
sub
cmp
aaa
or
out
cmp
je
loopne
xchg
pop
fs
jmp
test
cmp
push
test
inc
pop
loopne
mov
mov
mov
push
mov
mov
sbb
dec
inc
test
jns
xchg
jle
or
cmp
lea
mov
push
outsb
pop
jbe
adc
jo
pop
pusha
cmp
mov
mov
push
jbe
sub
shlb
push
and
fmuls
add
hlt
jns
push
jp
push
enter
adc
loope
push
pop
insb
xor
rolb
fs
or
xor
cmp
or
mov
push
adc
pop
xor
cmp
or
scas
jo
cmpsb
dec
lock
pop
push
addr16
sbb
sub
test
xlat
call
xor
addb
adc
cmpl
mulb
and
inc
mov
or
lock
sbb
mov
ret
aaa
faddl
sub
inc
imul
inc
dec
fldl
fmull
fidivrl
push
cs
outsb
iret
xchg
rcl
add
dec
es
push
add
add
ret
rcrl
leave
lock
push
roll
sbb
push
fsubl
pop
or
push
fcoms
inc
pop
ds
or
dec
ds
lds
rorl
push
jae
sbb
shll
pushf
and
mov
push
push
popa
lods
arpl
or
bound
dec
push
add
mov
push
addl
sub
mov
test
rcl
lock
xchg
pop
dec
dec
lock
in
adc
inc
mov
or
loope
jno
add
add
subl
adc
nop
sub
sbb
in
inc
mov
nop
xchg
mov
addb
subb
xchg
push
std
dec
test
sbb
je
cmpb
mov
dec
sbb
cwtl
pop
shrl
lock
xchg
push
stc
sbb
pop
nop
push
cs
sub
push
push
cmp
or
ss
pop
cmp
dec
repz
dec
jmp
push
cmovb
nop
push
pop
mov
or
shlb
jo
jmp
mov
push
loopne
push
and
int3
add
int
add
int
frstor
sbb
test
imul
rolb
shlb
xor
loope
int
fsub
lods
pop
aaa
mov
leave
cmp
pop
adc
and
jnp
out
xchg
inc
mov
mov
add
mov
imul
push
or
jl
mov
cltd
mov
add
sar
push
fnstenv
push
rcll
daa
jl
dec
xchg
aaa
nop
popa
inc
cld
cmpsb
lock
call
mov
mov
out
push
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
mov
aas
mov
or
adc
pushl
aaa
dec
pop
cmp
push
jbe
adc
jmp
out
movsl
sbb
jge
cmpsl
int
mov
add
in
in
leave
mov
sbbl
pop
or
insl
rorl
negb
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
mov
lcall
inc
lcall
add
and
xor
test
mov
mov
jg
ds
mov
or
xchg
arpl
jge
lret
test
jle
cmp
lahf
xor
mov
add
xchg
subl
add
sti
int3
stos
loop
movl
cmp
iret
outsl
dec
jae
dec
sub
jge
jmp
mov
out
adc
mov
fildl
pusha
or
add
sti
and
xor
xor
mov
fdivrp
mov
dec
sub
mov
mov
pop
add
pop
add
ficoms
or
xchg
pop
jl
jmp
rolb
mov
addr16
cmpb
or
clc
fcmovbe
ret
enter
jmp
outsb
mov
mov
sahf
lods
jmp
mov
or
jl
dec
lcall
sbb
or
shrb
test
push
in
js
lea
push
or
jmp
push
adc
sbb
dec
push
and
cmc
add
pop
jge
into
adcl
xchg
fnstenv
push
inc
pop
and
jne
mov
sbb
xor
cmp
cld
jle
add
push
push
push
pop
sti
dec
push
movd
pop
aam
loopne
addr16
cmp
mov
inc
aam
mov
add
cmp
and
test
call
ja
cmp
xchg
fmulp
gs
mov
pop
or
mov
dec
push
jne
inc
in
and
jne
insl
test
cmp
xchg
adc
mov
pushf
loopne
mov
cmp
mov
sub
and
xchg
pop
xchg
mov
add
aaa
adc
xor
gs
push
lea
push
mov
push
out
rorb
push
pop
mov
push
jns
dec
adc
pop
push
mov
fidivrs
xchg
decb
dec
add
push
inc
xor
cmp
or
imul
aaa
roll
mov
pop
nop
dec
and
inc
adc
push
outsl
fsub
mov
inc
outsl
test
add
dec
in
and
push
jb
jnp
and
enter
ret
cld
cmp
ds
dec
push
fs
dec
mov
add
mov
pop
dec
sbb
js
cmp
movnti
mov
movd
mov
repz
lret
sbbb
xor
pop
mov
push
or
sbb
and
and
daa
xor
push
or
movl
sahf
or
push
xor
mov
loope
mov
pop
mov
pop
add
mov
add
push
mov
clc
pushf
sub
clc
setb
test
jne
mov
shl
sbb
dec
sub
sar
xor
and
adc
ds
push
lea
push
pop
adc
and
fwait
adc
mov
je
sub
pop
stos
cld
lahf
pop
xchg
jmp
mov
mov
push
or
push
nop
lock
hlt
mov
test
push
dec
and
pop
fs
arpl
mov
cltd
cmpsl
push
ss
shrl
add
pop
lcall
out
out
mov
into
loopne
cmp
imull
jo
inc
mov
or
adc
movsb
add
and
sub
sbb
insl
cs
call
imulb
push
add
mov
jge
inc
push
ljmp
int3
outsb
outsb
outsb
jmp
sub
clc
or
and
push
je
and
je
mov
mov
shr
hlt
pop
and
ret
les
subl
dec
std
scas
mov
leave
rolb
shlb
cmpsb
nop
addl
pop
dec
fwait
movl
pop
leave
push
ss
lea
mov
leave
xor
dec
inc
jl
rcrl
fcoms
ret
sbb
xchg
ja
popf
out
mov
pop
imul
int3
repz
iret
test
xchg
jl
push
dec
pop
cltd
sub
filds
push
in
decl
add
ret
test
xor
stos
test
add
xchg
icebp
into
xor
jne
push
int3
jp
sbb
orb
or
divb
ja
xor
push
pushf
arpl
out
in
xor
les
imul
rorl
inc
adc
cmpsb
pop
pop
add
pop
pop
lret
test
call
jae
push
js
add
in
pop
mov
testl
sbb
inc
or
enter
add
add
clc
sub
inc
pop
jl
sub
add
out
fadd
call
out
lock
sub
dec
or
fdivr
push
cmpsl
sub
dec
fs
jmp
push
mov
mov
jge
mov
arpl
call
ud1
enter
sub
xchg
dec
outsb
lea
cmp
shr
shl
clc
imul
imul
jbe
xor
ss
or
xor
pop
in
xor
rorb
xchg
mov
or
jg
mov
orb
jbe
les
outsb
repz
adc
mov
jb
pop
test
pusha
cmpsl
roll
add
stos
mov
adc
sbb
in
stos
add
stos
or
add
sbb
push
dec
aaa
xchg
or
and
pop
cmp
inc
sub
add
jecxz
call
incl
insl
push
jnp
enter
add
dec
cmp
dec
ficomps
cwtl
movsl
aas
lcall
popf
inc
ljmp
mov
decb
test
add
mov
negb
lock
dec
dec
lock
push
sub
sbb
mov
lea
stos
push
fs
cli
pop
call
cmp
outsb
sbbb
pushf
sbb
or
push
mov
ret
fcmovne
mov
stos
cmp
push
push
mov
adc
stc
inc
or
push
fs
push
pusha
xor
loopne
mov
daa
add
fwait
popa
psubd
fdivl
js
add
pop
or
inc
adc
loope
cmp
pop
cmpl
cmp
dec
pop
push
rcrb
fsubrp
adc
sbb
push
in
fbstp
arpl
push
int3
mov
cmp
call
test
sbb
arpl
mov
mov
aam
push
scas
adc
fdivrl
push
loopne
mov
mov
mov
fisubl
minps
push
cmp
pop
rcrl
fadds
adc
arpl
xchg
aam
js
rorl
daa
movsb
push
mov
cmpsb
mov
movl
dec
repz
add
add
roll
pop
pop
rorl
jb
aad
lods
or
ss
insb
in
dec
neg
std
call
bnd
xor
inc
and
leave
sub
popf
fsubrp
jo
xchg
push
and
jecxz
pop
clc
sub
outsl
push
pop
push
lods
enter
lahf
push
addl
add
jge
fidivl
rorl
mov
inc
add
rolb
cmpsl
pop
je
stc
mov
mov
sbb
mov
sbb
sbb
pop
mov
xchg
popf
ss
jp
filds
jne
pop
push
pop
adc
or
hlt
mov
push
rolb
inc
or
pop
loopne
add
jno
push
cld
mov
js
les
push
sub
loopne
dec
inc
or
stc
sbb
push
andl
lcall
loope
jmp
movsb
inc
adc
cmp
repnz
es
adc
pushf
or
push
in
sub
or
push
push
pusha
dec
sbb
push
lcall
push
loope
mov
pop
mov
fcmovnb
scas
ja
inc
mov
mov
inc
xchg
push
iret
scas
shrb
sbb
jbe
xchg
shlb
mov
out
adc
sbbb
lea
push
rcrb
sub
mov
sarb
es
adcb
je
and
or
ret
mov
pusha
std
popf
sub
and
je
pop
leave
sub
push
and
ret
and
lods
pop
arpl
xor
push
test
adc
test
cmp
push
cmpsb
and
je
je
push
add
push
add
and
das
xchg
xchg
push
push
test
rcrb
mov
movsb
add
nop
aaa
and
or
mov
jns
lods
lods
mov
inc
and
movsb
cmp
out
leave
aad
icebp
insb
adc
add
pop
aaa
or
adc
mov
add
add
decl
stc
loope
push
daa
sldt
sbb
cltd
fcoml
push
xchg
pop
pop
push
push
in
mov
or
push
xor
dec
pop
dec
mov
cld
repnz
aas
xchg
sahf
xchg
pop
mov
mov
call
dec
test
adc
push
push
cld
inc
add
cmpl
jg
add
sti
clc
push
sbb
adc
pop
push
sub
lods
shlb
pop
mov
inc
adc
push
xchg
xor
adc
add
pop
or
push
addl
add
add
pop
jne
leave
pushf
cld
adc
adc
pop
push
jb
or
insl
xor
xchg
sbb
test
outsl
lret
jg
sub
push
mov
daa
adc
in
dec
mov
push
outsl
adc
sbb
mov
js
jo
xor
dec
out
mov
adc
pop
lahf
xor
lcall
imul
mov
or
push
mov
int3
mov
push
fnstsw
loope
xor
cmp
push
dec
mov
inc
and
jmp
loope
idivb
jo
jle
sub
mov
out
movsb
inc
sahf
cmp
je
ja
lret
mov
rorb
pop
test
jmp
mov
mov
mov
lret
sub
rorb
lea
inc
movsl
jae
loop
pop
cmp
jg
and
fists
lds
jne
orl
and
xor
adc
jno
push
jnp
sub
outsl
outsl
testb
sbb
and
gs
sbb
mov
inc
bound
sbb
sub
test
std
pop
or
inc
sahf
addl
or
mov
xor
sbb
mov
xor
cli
inc
xor
cli
test
repz
cmpsl
cmp
std
insb
cmc
cmp
lret
dec
in
in
or
or
xlat
pop
and
add
arpl
push
lock
mov
add
std
sub
bnd
jbe
das
nop
or
cli
ja
pop
or
push
sub
or
inc
es
sbb
adc
sub
imul
sbb
dec
in
adc
out
daa
pop
repnz
push
nop
xor
daa
or
cmpsl
jb
inc
fbstp
inc
push
shrb
pop
inc
adc
js
mov
sbb
add
fwait
add
sbb
mov
xchg
sahf
push
pop
sbb
int
or
cmpsl
imul
sahf
or
addl
xorb
jg
push
mov
adc
daa
out
push
cmp
adc
xchg
cmp
jne
fildl
inc
fsts
fcoms
and
cmp
flds
add
test
cmp
test
jp
dec
push
cmp
adc
and
pop
push
movsb
jb
pop
cmp
inc
aam
cmp
pop
push
addl
sbb
adc
pop
cmp
and
push
inc
push
bswap
hlt
mov
gs
push
mov
shll
pop
test
push
adc
out
and
gs
and
pop
and
cmp
pushf
jmp
add
or
aad
pop
pop
push
pop
imul
add
adc
cmp
jecxz
lods
sbb
mov
ret
dec
data16
ljmp
sbb
insl
jnp
imul
mov
add
lea
andl
push
inc
cmpsb
adc
push
mov
mov
out
xor
movups
lcall
adc
out
jge
inc
adc
movsb
in
mov
xchg
mov
sbb
jmp
push
lret
mov
cltd
aas
call
cmpsb
xchg
push
jns
jb
inc
pusha
sub
dec
xor
sbb
leave
pop
pop
popa
inc
mov
cld
xchg
bound
mov
jbe
jne
push
in
outsl
shll
xchg
sub
mov
and
in
xchg
test
leave
and
sbb
jg
xchg
sbb
cmp
jne
push
sbb
xor
int3
add
out
cmp
test
jge
push
scas
push
ja
icebp
outsl
aas
jl
movl
push
and
push
orb
mov
push
pusha
fs
mov
test
mov
inc
add
ds
push
clc
lea
mov
fistpl
test
sbb
test
jg
inc
sbb
pop
dec
fwait
cmpsb
inc
js
pop
adc
xchg
push
dec
gs
shrb
leave
sti
popa
adc
loope
lds
add
lret
mov
inc
dec
clc
jge
daa
sbb
xor
rcll
cmp
movsb
push
aad
jns
mov
mov
mov
popl
testl
and
mov
pop
sbb
xchg
xor
push
mov
roll
add
push
movsb
xchg
in
lahf
mov
test
pop
out
add
sbb
pop
dec
stos
subb
cmp
xchg
jmp
adc
cmpsl
add
add
mov
out
mov
fsubrl
aad
sub
cwtl
fs
dec
xor
data16
ljmp
sbb
push
and
add
sbb
xor
adc
push
or
mov
repnz
add
ror
pop
and
pop
insl
dec
ljmp
inc
movl
push
pop
sub
bound
insl
test
jae
notl
cwtl
push
xchg
pop
addr16
dec
sub
sub
and
pusha
pop
lock
mov
jnp
mov
mov
mov
push
in
mov
mov
mov
add
repz
popa
jb
dec
adc
and
movsl
fmuls
xor
adc
loop
cmp
and
test
call
jns
testl
mov
jp
loopne
repnz
shrb
sbb
pop
sbb
add
fs
in
inc
clc
xchg
push
ljmp
hlt
setne
sti
mov
mov
inc
loopne
pop
repz
sti
aas
push
push
push
jo
pop
lods
adc
adc
or
loopne
hlt
jne
push
push
push
loope
shrl
push
popf
jmp
sbbl
getsec
int
mov
adc
push
mov
lock
mov
or
sti
gs
xor
xor
sub
adc
and
sub
jbe
and
add
inc
add
aas
popf
outsb
add
sete
jne
push
test
add
push
gs
jo
and
add
sbb
push
popf
push
sbb
pop
lahf
stos
sbb
dec
scas
push
sub
add
dec
push
mov
fwait
push
addl
mov
add
adc
push
push
add
cmp
out
add
or
adc
or
aad
rorl
push
je
xor
or
dec
or
sbb
and
sbbl
adc
imul
lcall
lret
pop
push
clc
mov
mov
lret
sbb
or
or
fwait
lret
jl
push
scas
inc
sbb
xchg
jp
inc
pop
inc
pop
add
ret
movsb
push
clc
inc
xchg
xchg
jmp
or
adc
subb
mov
mov
push
movsl
lock
fsubl
xchg
jbe
movsl
inc
xchg
out
ret
mov
xchg
mov
in
insb
bnd
into
mov
xor
in
push
add
mov
aad
outsb
push
sbb
inc
inc
cli
imul
scas
int3
iret
mov
mov
and
push
push
mov
das
xlat
lods
sahf
mov
mov
xor
add
mov
xchg
push
mov
jecxz
scas
test
mov
mov
mov
mov
pop
xchg
inc
stos
mov
sbb
sbb
xor
movsl
out
sub
or
push
dec
mov
das
rolb
push
xorb
push
mov
ret
mov
in
add
insb
and
mov
call
cmpsl
pop
sbb
or
sbb
enter
cwtl
add
rorl
jne
test
pop
lods
ja
xchg
aam
shlb
mov
pop
addb
rclb
repz
cmpsb
mov
add
test
xor
mov
push
ljmp
sbb
je
les
cmpsb
adc
mov
mov
jno
mov
inc
add
push
inc
add
adc
mov
test
dec
jp
repnz
adc
jno
sahf
sub
sub
add
jl
pop
pop
pop
sbb
add
jl
mov
mov
dec
lret
jmp
pop
loopne
jno
lds
jmp
sbb
push
add
lcall
nop
adc
aas
jl
mov
inc
aam
or
lock
lcall
cmp
je
cmp
je
lcall
lea
add
cmp
jae
push
mov
in
push
scas
rcrb
daa
sub
mov
fmull
add
add
fisttpll
mov
cmp
dec
hlt
jge
mov
jmp
mov
add
mov
outsb
sbb
fsubrs
add
xchg
mov
jmp
mov
ss
cmp
ljmp
pusha
pop
test
decl
ret
je
test
jl
mov
cmp
jg
sbb
insb
loope
shl
mov
add
pop
adc
push
jmp
mov
mov
hlt
mov
and
xchg
cmp
adc
lods
in
or
mov
sub
rcll
adcl
pop
or
js
push
fwait
mov
or
or
push
aas
cmp
push
nop
mov
inc
jb
pop
cmp
lock
pop
mov
adc
es
push
loope
xorb
out
sbb
ret
mov
js
mov
cmp
iret
call
aaa
mov
aad
push
test
sub
bound
pop
clc
pop
and
jo
sub
outsb
es
jge
cmpsb
cmp
push
sub
rolb
add
fdivr
cmp
push
addl
xor
popl
push
jnp
fsub
add
mov
and
mov
jo
dec
xchg
mov
dec
pcmpgtd
sahf
push
sti
adc
roll
push
rcl
push
jg
out
mov
enter
push
ds
inc
or
stc
dec
insb
aas
lock
push
pop
mov
or
push
out
fiadds
pop
add
and
xor
cmc
cli
push
jmp
popf
andl
andl
or
data16
repnz
add
movsb
xor
push
lea
jb
jle
lea
test
pushf
movsb
loop
jo
push
sub
mov
incl
insl
pop
sub
cvtps2pi
pop
mov
es
push
sbb
xor
ds
pcmpeqw
pop
cmp
and
pop
roll
shll
mov
or
adc
fsubrl
outsb
push
add
add
xchg
outsb
or
sub
push
hlt
inc
and
mov
pop
adc
inc
push
lods
push
push
jbe
mov
bound
fs
xchg
push
cltd
cli
adc
or
out
mov
test
fwait
xor
rorb
fadds
fimuls
or
test
add
in
sbbb
movsb
icebp
push
stos
test
pushl
jle
pushf
push
jmp
push
aad
jb
pop
rclb
dec
jne
adcl
mov
aam
sub
push
push
popf
scas
test
shl
mov
aam
add
adcb
in
inc
test
or
mov
mov
mov
je
push
mov
jmp
push
jae
sub
xlat
mov
add
add
lcall
push
jl
adc
in
in
add
push
sti
adc
sbb
mov
mov
push
sbb
movsl
jle
pushf
and
push
mov
xchg
cmp
dec
das
cmp
movsl
adc
add
mov
call
add
sbb
cmpsb
pop
leave
sbb
inc
cmp
insl
sub
sbb
or
sbb
hlt
shrb
push
aaa
nop
test
orb
nop
outsb
mov
test
mov
xorb
push
mov
popa
cli
lock
inc
cmp
xchg
sbb
xor
insl
push
int
jns
mov
call
dec
add
lock
adc
sub
out
inc
mov
mov
pop
mov
stos
jne
jne
mov
sbb
gs
or
sbb
stos
and
shlb
sub
add
adc
adc
lods
popf
mov
mov
mov
inc
fsubrp
jo
lahf
sub
or
rolb
leave
inc
imul
and
aad
out
or
mov
sub
in
loope
or
xchg
popa
inc
repz
roll
fucomi
mov
sbb
sub
add
sbb
lea
stos
cmp
and
and
sbb
sbb
lods
loopne
dec
add
ds
mov
push
nop
aas
sbb
mov
push
push
and
jmp
inc
xchg
rclb
mov
lock
or
pop
ja
sub
and
repnz
push
push
add
jecxz
add
pop
adc
jl
or
xchg
sub
push
or
adc
sub
mov
mov
je
movb
push
aaa
fstpl
mov
pop
jle
jmp
outsl
ds
out
xchg
pop
shr
add
and
xor
add
add
imul
out
add
add
in
and
out
add
pop
inc
popf
fistpll
add
jne
pop
jmp
push
adc
fdivl
push
test
rcll
pushf
cmp
movsb
loopne
cmp
daa
push
dec
adc
fs
and
or
pop
add
mov
add
add
lahf
pop
push
pop
pop
les
add
je
cmp
dec
sub
jns
pushf
movsl
aaa
mov
or
mov
cmp
dec
fadd
cmpsb
pop
leave
sbb
icebp
insb
jno
out
mov
mov
dec
pop
aam
data16
ss
in
push
add
dec
add
jne
bound
cmpsl
xchg
shr
in
jp
mov
loopne
lock
add
lret
sub
push
mov
sub
mov
push
cmp
mov
mov
mov
push
push
pmaddwd
inc
inc
dec
and
hlt
pop
add
call
in
pushf
mov
shrb
movsb
les
fcoml
movsl
fdiv
or
jmp
pop
and
stos
add
pop
inc
jecxz
add
pop
xor
pop
rolb
jmp
add
orl
jmp
mov
lahf
jbe
push
mov
lahf
add
push
add
add
and
bound
push
fsubl
add
adc
adc
ret
mov
aam
dec
out
cs
mov
sbbb
nop
or
or
cmp
push
xor
jl
add
jne
xor
push
push
movsl
inc
adc
cld
cld
adc
jge
push
lock
pop
inc
fiadds
addl
sar
mov
push
mov
push
or
push
xchg
fstpt
add
je
add
fiaddl
pop
xor
lret
cld
sub
mov
imul
jo
inc
in
cmpsl
fimuls
fcoml
xchg
adc
lock
call
fnsave
in
loop
pop
hlt
mov
jmp
rolb
sbb
outsl
pop
push
sub
sub
add
iret
push
push
add
push
xlat
jecxz
mov
ret
or
cmp
out
movb
sub
add
stos
cltd
mov
lods
hlt
addl
enter
dec
sbb
adc
pop
pop
pop
cli
or
push
mov
call
push
or
add
or
sbb
pop
xchg
dec
add
mov
mov
push
insb
into
add
sahf
call
fcoml
rolb
xor
xchg
add
push
mov
push
cmpsb
outsb
add
call
ret
cmc
lock
fbld
push
pop
push
mov
cmp
je
sbb
push
push
pusha
jge
sbb
movzwl
jnp
arpl
movsl
lcall
fstpl
inc
cmpb
gs
push
sub
pop
cmc
push
jmp
pop
sub
mov
jmp
aam
pop
cli
aam
in
jl
push
push
stc
fsubrl
popa
sub
jecxz
and
xchg
push
test
push
add
mov
ja,pn
test
and
inc
or
or
cld
decl
cmp
je
push
lea
push
stos
ss
sbb
sub
push
mov
orb
push
pop
or
adc
adcl
in
cwtl
adc
in
popa
loop
xlat
push
aas
push
adc
dec
enter
pop
shlb
add
inc
dec
in
or
clc
bound
clc
test
jl
add
hlt
push
in
inc
call
jbe
in
mov
neg
push
or
cmc
rolb
mov
or
push
loope
in
fisubl
jo
jl
push
push
je
sbb
mov
mull
test
xor
jbe
push
lock
in
push
push
cmp
je
fcmovbe
fimull
and
push
xchg
in
or
xor
fiadds
push
mov
fidivrl
inc
fdivrs
fnsave
push
aas
jns
pop
dec
sub
int3
sub
ljmp
jmp
dec
adc
sbb
push
rcr
inc
out
test
lds
clc
jns
negl
push
test
loopne
in
test
out
cli
aam
imul
xchg
sahf
into
gs
scas
in
decb
inc
inc
sbb
push
ss
sub
sahf
imul
xchg
mov
jae
jne
cmp
shlb
xchg
sbb
dec
cmpl
je
ret
pop
or
jae
inc
cmp
inc
mov
loope
adc
andl
ret
add
cmp
pop
cmp
inc
sbb
xor
in
dec
jmp
jns
add
and
jb
mov
push
ret
das
je
cmp
je
cmp
jne
add
cmpsb
mov
in
xchg
ja
cmc
je
and
mov
outsb
or
or
fcoml
outsl
outsb
pop
mov
cmp
xor
daa
clc
ret
adc
mov
pop
clc
pusha
ret
jns
xor
ds
or
test
mov
add
push
lea
cmp
push
mov
jne,pt
mov
push
xchg
out
jl
push
mov
mov
cmpsl
jp
ret
or
aad
mov
xor
lcall
jl
inc
sub
jge
and
mov
pop
movsl
dec
arpl
fdivl
leave
ret
add
cwtl
pop
add
xchg
leave
sbb
cli
aaa
adc
icebp
mov
jb
cmp
ja
xor
dec
mov
sbb
inc
aaa
popa
lcall
xchg
push
call
cs
je
add
push
sbb
and
push
mov
pushf
mov
add
sarl
push
pop
push
inc
adc
mov
dec
xchg
fs
dec
pop
mov
je,pt
jle
loopne
cmpl
in
xor
filds
sub
or
mov
cmp
gs
je
cmp
jne
mov
cmp
mov
loop
dec
inc
clc
fistps
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
divb
adc
mov
lock
faddl
loop
cmp
jbe
mov
lea
mov
dec
dec
inc
jmp
inc
add
or
xor
pop
mov
sub
or
sbb
and
clc
lahf
xchg
nop
pop
sarb
je
mov
lea
movsb
lods
sahf
clc
rcrl
lods
lock
and
data16
mov
xor
inc
cmpl
mov
jne
inc
cmp
jne
notb
cmp
insl
adc
je
or
cmpsb
movb
inc
jb
or
pop
loop
ja
fsubrs
enter
in
mov
cld
add
push
cmp
pop
frstor
xor
adc
lock
dec
jo
cmpsb
inc
xchg
popa
loop
jne
mov
clc
out
loopne
or
pop
movzwl
push
data16
mov
aaa
jb
lcall
pop
shl
add
fmull
aas
les
std
data16
inc
orl
dec
je
fs
jne
adcb
outsb
dec
lock
rorl
insb
mov
mov
or
test
incl
push
jae
mov
jmp
dec
shlb
cld
jbe
test
sub
lea
test
push
dec
call
mov
xor
jle
push
add
xchg
xor
stc
inc
jg
or
jge
outsb
outsb
pop
add
or
jle
es
outsl
outsb
sub
sub
and
pop
cmp
jl
pop
jle
sbb
inc
test
jbe
bswap
lahf
add
jbe
mov
test
dec
jo
adc
adc
je
test
jne
clc
pop
cld
and
jb
lcall
je
xor
aaa
cmp
jae
movb
inc
mov
push
sub
push
or
or
and
lds
inc
adc
mov
shlb
sbb
std
push
mov
inc
and
je
mov
testb
popf
mov
push
mov
cmp
add
jp
inc
adc
pop
cmp
dec
mov
dec
je
sub
mov
xchg
scas
add
jecxz
xlat
shrl
mov
jo
push
push
xor
in
push
adc
popf
insb
xor
icebp
rolb
icebp
or
mov
inc
jecxz
xor
jb
pusha
sub
cs
mov
xchg
cmpsl
ret
mov
push
mov
push
sub
mov
rorl
xor
movb
push
inc
lea
mov
push
pop
add
pop
incl
push
jb
sbbl
cmp
mov
test
mov
fstp
xchg
daa
loopne
inc
das
mov
or
xchg
lods
cmp
imul
ficompl
stos
dec
daa
shrl
stc
mov
add
inc
arpl
push
inc
and
lock
ret
mov
and
cmp
je
test
adc
loop
in
xchg
xor
fsts
sti
mov
ret
jp
or
jae
mov
dec
fildl
or
arpl
or
stc
and
ss
mov
hlt
add
inc
mov
aam
xor
pop
or
lods
mov
mov
popf
xchg
mov
pop
sbb
sbb
jl
add
cmp
add
test
data16
addb
pop
mov
or
mov
inc
inc
sahf
push
cmp
cld
xchg
mov
popa
hlt
sub
and
pop
xlat
inc
xchg
xchg
aaa
rolb
xchg
shrl
test
xor
mov
call
shlb
jno
jnp
inc
lcall
jb
cs
andl
sbb
pop
cmp
cwtl
and
add
sbb
fadds
mov
xchg
and
push
xchg
cltd
push
enter
mov
xchg
insl
mov
orl
mov
push
mov
movsl
sub
and
es
cmp
jmp
xchg
mov
lahf
jne
adcl
sbb
xor
xor
sti
mov
jbe
das
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
xor
jle
adc
mov
lods
dec
dec
add
add
setne
inc
fimull
mov
add
aam
rcll
xor
jmp
js
add
shr
pop
push
andl
lods
in
or
jne
mov
shlb
cwtl
cmp
and
jne
adc
push
push
fdivl
jne
sbb
je
lods
cmp
jnp
das
movl
cmp
das
bound
imul
mov
je
lea
insb
mov
add
xchg
push
adc
pop
and
push
mov
jb
fcomps
jmp
mov
sbb
je
cld
mov
cli
lds
lds
add
inc
insb
mov
adc
jge
pop
and
aaa
sbb
adc
and
jne
aaa
pop
push
cwtl
pop
push
nop
ret
dec
imul
adc
push
mov
mov
aam
fsubr
cmp
in
test
push
dec
sub
dec
push
add
inc
fsubp
inc
es
mov
push
call
xor
jbe
xorb
jp
sbb
or
jne
push
inc
pushl
jmp
ret
incl
aas
je
lea
cmpb
cmp
jne
push
fnstsw
les
aam
adc
repz
cmp
mov
mov
inc
jmp
fld1
orb
ret
pop
outsb
jmp
mov
jne
movsb
push
mov
xchg
sub
imul
jg
sbb
add
and
mov
add
jae
loop
add
mov
mov
or
loope
enter
ret
jo
ret
lahf
jbe
das
ret
cmpsl
mov
push
sbb
or
pop
sbb
cwtl
ret
pop
push
js
fnstsw
notb
js
insb
cmp
orl
adc
add
int
dec
subl
xchg
mov
test
mov
hlt
adc
sbb
mov
xor
test
pop
cs
xor
cmp
or
or
cwtl
mov
mov
repnz
mov
push
lret
push
cmp
ret
push
sbb
lock
rolb
push
clc
or
jmp
sbb
add
push
cmp
dec
lcall
sbb
jbe
cmp
inc
and
dec
rol
mov
xchg
push
sub
xor
lret
xor
cmp
add
jb
cmp
filds
add
cmpsb
push
sbb
pop
ret
xor
push
enter
push
mov
insb
ss
call
push
or
mov
testb
int
cwtl
adc
ds
add
add
push
push
lahf
jp
adc
and
testb
bound
in
arpl
xlat
sbb
push
cmp
mov
movsb
push
push
push
dec
aas
push
push
fsub
ret
sahf
insl
pusha
cwtl
insl
lods
mov
lea
pop
test
pop
bnd
push
pop
loop
and
cmp
xor
in
dec
add
sub
mov
out
or
add
pop
inc
dec
movl
lock
js
or
loopne
mov
lsl
and
aam
cmpsl
flds
cs
test
mov
stos
mov
fdivrs
cwtl
mov
or
pop
notl
pop
lcall
jge
clc
mov
sub
movsb
or
dec
xor
loope
jl,pt
push
push
loopne
in
jne
cmp
dec
xor
aaa
pop
cmpsb
sbb
xor
jnp
add
add
push
mov
sub
cmp
loopne
jp
pop
xor
cmpl
or
dec
jge
pop
adc
fucomi
ud0
add
mov
sub
mov
in
jg
jo
mov
in
ret
addr16
push
frstor
cmp
orb
pop
push
pop
jmp
xchg
je
in
inc
mov
loopne
insl
cmp
mov
setle
sbb
push
xchg
mov
pusha
enter
push
inc
inc
xor
xlat
fcmovu
in
in
lret
shrb
js
mov
into
sbb
push
negl
push
xchg
out
xchg
mov
test
orb
jmp
paddq
push
xchg
sarb
xchg
push
cmp
xor
mov
sbb
push
adc
js
pop
sbb
data16
idiv
push
adcl
adc
gs
in
xor
shlb
jae
cmp
or
bound
xchg
testb
or
cmp
push
or
inc
out
ret
movsl
pop
add
stos
or
cmp
cmpb
pushf
or
cmp
cmp
push
dec
rorb
sub
addr16
jae
addr16
addl
or
loopne
xchg
pop
outsl
test
mov
jl
xorl
outsb
push
jl
cld
or
or
in
out
cmp
cltd
inc
mov
lock
sahf
or
dec
scas
dec
cld
in
sbb
aaa
sub
add
sub
call
push
sub
pop
pop
sbb
sbb
fwait
je
pop
sbb
cmpl
jmp
dec
in
push
pop
mov
mov
int3
movl
lods
sarl
loopne
inc
xor
push
mov
lcall
sbb
xor
cmp
les
cmp
add
fsubl
jge
notb
das
inc
test
dec
clc
lods
out
sti
dec
dec
mov
cmp
loop
inc
pop
sbb
in
xchg
incb
cmp
push
decl
mov
mov
ja
dec
ja
mov
push
mov
push
or
adc
mov
adc
mov
mov
xchg
push
add
xor
xor
mov
push
mov
add
or
add
mov
mov
pop
faddl
and
xor
push
lea
lock
movsl
add
xchg
stos
push
popa
mov
pop
adc
int
or
or
movb
in
leave
rcrl
push
lock
dec
cmp
jecxz
dec
roll
imul
or
hlt
int
into
test
loopne
mov
dec
push
cmp
inc
jecxz,pn
out
testl
and
vsqrtps
aas
jo
les
or
dec
pop
and
jge
add
pop
arpl
lahf
jp
dec
push
pop
into
shrb
and
insb
lock
mov
xchg
sbb
pop
mov
loopne
ret
xor
dec
int3
push
and
aaa
or
imul
push
stos
xor
sbb
and
sarl
in
clc
xchg
dec
gs
shlb
lret
mov
inc
cwtl
push
push
sub
lock
ja
push
inc
add
fsubs
sub
add
jecxz
repz
jecxz
xor
dec
adc
or
fdivr
jb
mov
fdiv
add
aaa
je
lea
cmp
js
add
push
and
jmp
pop
dec
inc
push
insl
inc
push
mov
push
or
imull
ds
rorb
xchg
rolb
push
jecxz
pop
mov
mov
das
test
xor
inc
xchg
push
loop
pop
cmp
pop
pop
mov
or
lea
pop
adc
push
imul
jge
add
frstor
push
mov
nop
testl
push
inc
xor
xor
int
sub
clc
insb
call
pop
xor
int
sub
repnz
mull
pop
rcr
xor
enter
lcall
mov
minps
cltd
add
in
xor
pop
imul
adc
insb
and
add
and
pop
inc
or
or
push
and
mov
pop
neg
pop
mov
or
or
test
pop
add
dec
adc
mov
cmpsl
adc
and
and
and
or
or
sub
sub
xor
xor
mov
loopne
mov
repz
dec
popa
pusha
sub
push
clc
sahf
push
cmp
or
jmp
xchg
mov
cwtl
push
cld
data16
fisttpll
and
stos
sbb
ficompl
push
adc
xor
pop
inc
push
ja
sub
jo
or
jmp
push
pushl
adc
sub
lock
pop
jo
jns
jns
jle
pop
adc
filds
stos
xchg
jb
push
or
jns
shlb
pop
xchg
mov
in
adc
outsl
adc
adc
aas
xchg
add
push
push
fildl
adc
scas
adc
xor
notl
lar
cmc
jo
jo,pn
fisubl
add
add
push
mov
add
sarl
in
icebp
cmp
jne
and
xlat
mov
cmc
pop
dec
or
sbb
adc
jnp
add
loope
aad
add
or
push
fsubrs
sahf
rorl
push
push
xor
adc
inc
or
add
mov
mov
mov
jp
lea
rclb
fdivl
mov
lcall
or
dec
test
add
sub
movsb
repnz
sub
xor
and
sbb
popf
adc
std
dec
call
test
sub
adc
sbbb
shll
xchg
add
xchg
jge
add
adc
sub
adc
cmc
sahf
rcrb
pop
fld
inc
jle
jg
jmp
push
mov
cs
pop
loopne
mov
or
fwait
add
cmp
ret
shll
sbbb
mov
shll
testb
pop
add
adc
mov
jo
movb
mov
fs
adcl
xchg
int3
xchg
adc
or
sub
sbb
add
test
sbb
ret
dec
lret
mov
test
add
cs
push
sbb
lds
mov
rorb
sahf
push
decl
test
js
push
sbb
pop
push
dec
push
dec
or
jo
mov
ja
iret
xor
sbb
sbb
loope
scas
lcall
dec
xchg
adc
test
jmp
and
aad
or
sub
jne
pop
pop
xchg
push
into
xchg
cmp
sbb
pop
test
dec
aam
test
addb
aaa
mov
fstl
jle
call
loopne
or
or
or
push
and
jne
je
sbb
adc
xchg
jo
es
roll
jmp
jo
arpl
add
sub
pop
xor
sub
test
and
cmpsl
inc
jmp
enter
test
cmp
mov
je
xor
push
push
adc
lea
or
jno
mov
adc
push
shrl
das
push
mov
sbb
in
jecxz
cmpsl
inc
xor
adc
add
into
stos
push
add
add
inc
add
inc
lret
xchg
clc
add
sub
je
imul
cmp
in
mov
pop
cmpsl
cmpsl
lods
lods
xchg
push
add
lock
insl
nop
js
xor
movsb
and
into
shrl
insb
dec
pop
imul
xor
aas
mov
cmp
outsb
test
mov
scas
xlat
and
adc
mov
faddl
frndint
xchg
gs
jo
xor
xor
jg
add
add
mov
jmp
ret
push
test
pop
enter
test
xor
add
ljmp
cmp
mov
xchg
dec
xor
inc
xor
ss
or
loop
fxch
cmp
inc
or
addr16
and
and
jp
adc
sub
popa
jp
add
in
gs
add
popa
xor
loope
sub
push
fiaddl
push
push
popf
jo
inc
pop
xor
push
test
push
fildl
loopne
or
cmp
jne
push
sub
or
and
fimull
add
cmp
mov
imul
dec
mov
sbb
ret
dec
mov
mov
push
inc
sahf
jecxz
icebp
xor
aaa
dec
fdivs
sbb
daa
popf
xor
js
test
xchg
in
in
adc
cwtl
jecxz
xor
dec
pusha
mov
adc
inc
dec
fsubrs
inc
iret
or
pop
or
frstor
in
jge
pushf
inc
arpl
cld
pop
call
push
out
push
adc
jae
pop
or
in
cs
sahf
jecxz
cmova
scas
aam
adc
and
and
and
adc
mov
into
or
ret
in
loopne
sti
add
repnz
push
dec
push
mov
mov
ljmp
in
or
fmull
mov
dec
out
gs
mov
push
lret
sbb
xor
inc
int3
out
xchg
mov
inc
outsl
pop
movsb
adc
enter
dec
mov
sbb
packssdw
mov
stos
imul
xchg
lret
or
fcmovbe
adcl
or
daa
pop
xchg
int3
inc
mov
xlat
decl
push
or
sbb
dec
jns
or
jmp
sarl
sub
push
push
or
inc
aad
push
sub
push
pop
and
jne
inc
je
push
push
fwait
sbb
mov
mov
push
in
xor
daa
dec
push
dec
or
sub
aam
std
cmp
xor
or
fisttpll
push
xor
xchg
pop
and
mov
push
int3
iret
loopne
insb
or
push
pusha
and
mov
xor
mov
mov
mov
sbb
lret
loopne
jo
inc
push
add
out
lret
pop
int
push
pop
push
push
mov
pop
cmp
jbe
xor
xor
shll
add
aaa
sbb
out
fisubrs
adcb
cmp
or
pusha
add
sub
adc
loopne
fildll
jecxz
add
xorl
jae
or
mov
jo
cmp
out
add
push
call
xor
cld
test
and
pop
push
mov
push
fstpt
sub
xlat
xor
cmp
ret
mov
add
mov
fisubrl
cmp
aad
sti
sbb
ds
add
fsubr
lods
mov
add
or
push
jle
fildll
movsl
cmp
sahf
out
pop
add
add
loope
jle
jl
add
loop
sub
push
movl
push
rolb
jmp
push
fbld
mov
and
add
lock
add
ret
mov
push
xor
inc
add
and
fwait
add
and
push
xchg
sub
sbb
push
pop
psubusw
rclb
pushf
push
add
adc
clc
adc
pop
add
jge
adc
ret
fisubrs
scas
or
mov
jnp
jl
aam
and
dec
or
fs
sub
fwait
pushf
add
aas
add
mov
sbb
push
fstl
sub
jmp
shlb
push
clc
jl
inc
das
jl
dec
sti
push
dec
jmp
xlat
lods
add
movb
or
int
add
xchg
lcall
jns
pop
nop
add
into
jmp
sbb
push
sub
gs
sbb
out
ret
jecxz
lret
out
xchg
jge
movzbl
push
xor
sub
cmpsb
or
std
aaa
mov
je
fsubr
dec
push
xor
mov
inc
arpl
ficomps
shlb
add
and
xor
pop
xlat
pushf
arpl
lcall
and
mov
mov
cwtl
xor
stos
add
pop
iret
movsb
mov
add
push
add
adc
push
inc
push
xor
cmc
sub
mov
xchg
xchg
test
sbb
xchg
cmp
aaa
mov
sbb
dec
loope
xchg
bound
pop
ret
fadd
adc
mov
mov
fcomps
fnstsw
push
or
xchg
test
xor
fnstsw
movb
movl
xchg
push
push
mov
mov
mov
add
push
jge
iret
data16
jb
cmp
call
mov
inc
in
jge
cmp
jne
push
popa
push
jmp
mov
push
push
push
ret
mov
fldcw
sbb
or
aas
xchg
cmpb
fidivrl
rclb
push
push
cwtl
lea
lock
sbb
pop
ss
je
dec
clc
inc
push
xor
inc
cmp
mov
xchg
push
push
push
and
pusha
mov
dec
sarl
bound
fcmovbe
adc
test
cli
jo
ret
and
repz
mov
mov
cmc
cmpsb
add
mov
mov
mov
or
jecxz
cmpsb
inc
adc
jo
add
je
jbe
and
cs
dec
in
imul
sti
sub
and
add
add
dec
mov
pop
insb
je
mov
loope
dec
sbb
filds
cmp
cmp
jbe
cmp
jbe
mov
sbb
mov
mov
lock
xor
mov
ds
sub
push
sbb
fisttpl
mov
adc
mov
jno
int3
or
add
adc
and
pop
rclb
add
mov
enter
adc
repz
popl
lea
ja
lea
mov
imul
mov
pop
fdivr
xlat
cmp
adc
cld
jle
mov
sub
loopne
pop
jmp
cld
fadds
lods
fisttpl
xchg
cmpsb
jb
adc
ss
sub
pop
push
xchg
jmp
or
je
push
xlat
ret
add
lahf
aam
fwait
ret
das
pop
scas
mov
or
adc
and
stc
fdivrs
cmp
jnp
add
cli
inc
xchg
jne
mov
push
jl
je
loop
lret
orb
push
mov
jb
pusha
jle
and
leave
inc
cmp
cwtl
sbb
and
push
cmp
cltd
fistpl
mov
jp
pop
inc
fucomi
and
in
jae
mov
jl
loope,pn
sbb
bound
enter
ret
inc
popf
insb
loope
shrb
mov
cli
sub
outsl
add
mov
flds
jae
ljmp
and
sbb
imulb
add
push
adc
stos
sbb
adc
sbb
and
sub
mov
jb
mov
int3
mov
jg
fwait
mov
mov
lea
sarl
sbb
or
lret
mov
jmp
jmp
add
sub
insb
cld
pop
ret
mov
pop
pop
mov
je
aam
js
and
pop
pop
test
push
inc
dec
adc
jg
inc
lea
lea
sub
mov
out
sub
push
inc
popf
push
lea
xchg
and
xchg
repnz
adc
mov
xchg
insb
xor
shl
in
jl
sub
das
xchg
fnstenv
fdivrl
mov
les
stc
notb
jge
push
jmp
clc
mov
mov
sbb
push
int
adc
xchg
sbb
cld
cmp
push
adc
push
inc
out
movsl
xor
push
sbbl
push
sbb
insb
jb
dec
and
subb
cmp
cmp
dec
movsl
mov
dec
cmp
ja
cmpsl
or
mov
add
dec
sub
adc
jecxz
pop
cmp
jne
push
rcrl
imul
cmp
ljmp
cld
test
into
xorl
in
sub
pop
shlb
sahf
fs
pop
sbb
jp
leave
mov
mov
stos
outsl
loope
das
stos
or
iret
addb
jno
rorb
xor
fdiv
js
adc
mov
jnp
mov
or
cmp
popl
xor
jmp
mov
rclb
das
add
sub
xchg
faddl
xor
add
adc
sbb
adc
push
pop
orb
sbb
and
jmp
or
call
inc
lahf
cmpsl
mov
push
adc
jle
or
ss
addr16
pop
hlt
sub
ljmp
sub
popa
movsl
movsb
mov
clc
hlt
addr16
mov
xchg
jg
cmp
jle
jge
cmp
into
or
pop
add
and
testb
pop
icebp
outsl
shrb
sbb
ja
mov
or
or
das
add
insb
arpl
popa
sub
lock
popa
fnstcw
repnz
xor
ret
cs
add
adc
xor
sub
jp
into
cmp
sti
ss
pop
lock
hlt
push
jmp
mov
ds
jl
lods
cli
cmp
jge
ljmp
mov
fcmovb
imul
pop
dec
shll
xchg
popl
jge
fildl
mov
je
test
addr16
xorl
cmpsl
mov
out
adc
xchg
pop
cwtl
mov
movsb
aad
cwtl
adc
push
sub
mov
mov
inc
jle
mull
push
aas
les
sarl
insb
jmp
or
or
sahf
push
movsl
add
add
add
jo
push
cmp
push
mov
push
xchg
sbb
mov
add
rclb
or
mov
rcrb
push
push
cmpsl
sub
sarl
fiadds
pop
addr16
xlat
inc
leave
mul
popf
or
arpl
daa
stos
lds
push
call
xchg
cmp
cs
incl
pop
and
je
lods
cmp
jbe
movb
push
xor
je
sti
mov
mov
mov
repnz
inc
cmp
jb
jge
add
jle
xchg
or
mov
loopne
adc
loopne
mov
daa
lcall
insb
loope
push
sub
mov
popa
in
int
mov
test
mov
mov
jnp
mov
mov
adc
push
std
inc
ret
add
adc
cmp
jae
addl
or
scas
and
fcoms
mov
cmpsb
cmp
add
mov
rorb
jg
jno
stos
fiadds
push
mov
xchg
xchg
adc
jb
adc
dec
ja
cli
sub
test
scas
push
bound
push
mov
pop
daa
push
mov
daa
sub
sub
lock
xor
xchg
lds
inc
push
mov
ficoms
lea
mov
in
sbb
lds
les
mov
inc
stos
xchg
mov
or
sub
push
enter
shll
dec
out
shrl
mov
fwait
popa
in
xchg
mov
or
and
aaa
movsb
inc
adc
notl
add
lods
adc
lahf
sti
mov
xor
jg
inc
push
sbb
mov
jmp
test
inc
jne
jmp
mov
jmp
aaa
lret
pop
out
cs
popa
cmp
leave
scas
xchg
pop
pop
add
push
add
cli
push
int3
add
mov
jae
je
mov
add
add
stos
cmpl
sbb
out
jp
cmpsb
aam
push
movsl
fiaddl
cld
push
sub
adc
mov
xor
sub
pop
dec
mov
fmuls
add
clc
dec
inc
inc
pop
push
test
push
adc
outsl
imul
in
push
push
jne
add
inc
adc
mov
xor
mov
mov
cli
sahf
out
popl
out
mov
out
add
lea
cmp
ljmp
mov
xchg
and
ret
pop
mov
int
or
pushfw
or
add
dec
ja
iret
adc
add
jge
andb
fidivrs
ds
hlt
loop
and
out
rorl
pop
push
jnp
inc
mov
mov
mov
int3
ret
add
insl
adc
idiv
js
dec
mov
inc
cmp
mov
or
sbb
push
xor
les
lods
inc
cltd
mov
imul
outsl
jmp
cmp
jne
mov
cmp
call
loope
rcl
xor
add
mov
test
movl
jle
mov
imul
push
add
inc
mov
out
mov
xor
stos
jge
jne
andb
into
push
rcrl
pop
fists
mov
pop
mul
seto
or
neg
or
rcr
sbb
or
mov
test
adc
xor
sbb
add
jle
std
jno
or
rolb
adc
mov
aad
adc
inc
or
push
push
loopne
mov
outsb
inc
shll
adc
andl
or
sub
mov
dec
pop
pop
stc
lods
mov
sar
loopne
mov
push
je
mov
int3
push
mov
dec
jl
mov
dec
cmp
xorb
dec
pop
or
and
fstpt
out
addr16
fs
jmp
ret
into
jecxz
push
sbb
mov
dec
and
mov
mov
jne
add
jg
lcall
cmp
lods
mov
sbb
cmc
dec
je
dec
jp
pop
or
js
test
mov
mov
jne
int
jl
sub
std
dec
out
pop
mov
int3
pop
inc
scas
das
mov
sarb
mov
cwtl
lea
jmp
cmpl
inc
cmp
jbe
cli
dec
cli
mov
in
mov
sub
or
clc
orb
or
jmp
mov
jmp
sub
pop
and
sbb
adc
sbb
xchg
adc
fs
sti
leave
cli
push
in
xchg
scas
gs
push
push
add
test
push
insb
mov
adc
clts
pop
shrb
mov
or
xor
cli
in
add
mov
jae
adc
sarb
orl
xor
pusha
sub
jle
and
mov
mov
jns
add
and
in
push
loopne
movsb
cmp
fisttpll
dec
add
iret
xor
mov
loop
les
pop
add
dec
les
test
movsl
push
popa
test
jo
sbb
adc
cmp
mov
jge
les
into
sbb
pop
dec
insb
icebp
cwtl
rorb
aaa
aad
sub
dec
ret
test
cmp
jl
cld
sahf
jns
xor
sbb
ret
loopne
shlb
incw
push
je
cmp
push
jo
insl
jmp
xor
movsb
lock
and
jae
sbb
xchg
js
jbe
adc
lods
inc
pop
dec
xchg
enter
call
shlb
movsb
ja
push
or
pop
cmpl
fwait
xchg
push
sub
cmp
jbe
sarb
movsl
orb
pushf
lods
cld
orl
dec
sub
pcmpgtd
xor
xchg
sbbl
lock
shlb
or
push
and
mov
pop
add
adcb
dec
daa
test
pusha
dec
xor
xchg
hlt
adc
loope
gs
add
aad
or
pushf
movsl
xchg
mov
adc
lea
clc
lea
mov
rorb
inc
dec
lods
mov
pop
and
jg
cmp
es
mov
subl
pop
lret
or
fldcw
cs
cmpsb
mov
je
mov
dec
jge
pop
dec
jmp
cmp
jbe
fwait
movsl
loopne
pop
dec
inc
jns
dec
outsl
testb
jne
mov
push
test
cmp
adc
aaa
sub
lea
cmp
xor
shlb
es
test
add
xchg
xchg
sbb
xchg
mov
hlt
hlt
out
jb
jns
or
mov
mov
or
lock
pop
mov
fcmovb
insl
insb
add
add
and
inc
sbb
fsts
jne
push
js
fistl
or
cld
loopne
fnstenv
mov
push
lods
push
mov
orl
in
xor
mov
add
lock
sub
xchg
cld
clc
pushl
data16
loope
cmp
add
cmp
push
cmp
or
sub
orl
data16
mov
xor
rol
xchg
dec
testl
cmp
push
mov
jmp
hlt
mov
iret
je
pop
fiaddl
mov
into
or
pop
push
js
mov
xchg
add
and
xchg
or
adc
add
jo
inc
adc
pop
add
subl
push
adc
dec
cwtl
inc
jg
mov
inc
loopne
in
pushf
add
or
sub
or
xchg
add
mov
aam
mov
lea
sbb
aas
in
jbe
push
cmp
adc
jge
mov
in
cmpsl
jbe
push
movsb
dec
hlt
icebp
clc
and
xchg
shlb
lea
mov
cmp
lret
adc
aas
imul
in
pushf
loop
inc
jne
sub
das
push
jmp
pusha
ret
and
and
xchg
aad
in
push
push
sahf
xor
pushf
mov
dec
jnp
fstpt
adc
mov
mov
xor
inc
lock
mov
in
lods
push
cmpsl
dec
xlat
pop
add
adc
xchg
jo
bound
add
mov
stc
or
cmpsl
adc
loope
test
mov
inc
adc
sbb
sub
leave
outsl
mov
mov
sub
add
aam
or
jl
cwtl
push
sub
in
mov
pop
stos
jne
cmp
push
sbb
add
cmp
pop
push
push
test
mov
subl
pop
mov
adc
mov
imul
xchg
inc
insb
mov
movsl
imul
jbe
xor
or
cmp
je
pushf
cmc
jg
callw
pop
or
mov
in
aam
loopne
cmp
push
mov
int3
mov
or
mov
call
add
add
or
sti
dec
das
insb
flds
fsubs
push
insb
pop
rcr
inc
sbb
push
sbb
adc
data16
xorl
inc
dec
popf
push
mov
std
lock
xchg
pop
enter
rol
bound
inc
xor
sbb
loop
xor
xchg
aas
test
je
add
jo
sbb
pop
xchg
iret
in
inc
lods
dec
shll
or
adc
or
sub
sbb
xor
pop
dec
xor
inc
test
aas
inc
fwait
jb
push
mov
inc
mov
ret
cmp
xchg
and
and
and
test
roll
cmpb
push
mov
adc
sub
data16
addb
jl
jmp
hlt
fldl
aad
mov
cmp
cmpl
mov
pop
push
test
movsb
or
sbb
mov
loopne
push
sahf
xor
or
xchg
les
xor
xor
adc
inc
out
and
jmp
stos
lock
sbb
dec
popf
xchg
xchg
xchg
jp
add
fstpt
cmp
addr16
and
pushf
mov
mov
add
pusha
push
ljmp
mov
clc
and
jle,pn
pop
pop
mov
mov
or
jb
ret
or
pop
add
jl
clc
and
andl
hlt
inc
pushf
mov
push
pop
xchg
push
mov
jmp
mov
inc
add
je
clc
call
inc
xchg
ret
aaa
iret
fiaddl
aaa
push
mov
xor
pop
sbb
pop
ljmp
jmp
cmp
adc
push
push
cmp
pop
pop
in
test
add
add
adc
push
les
enter
sahf
rolb
jne
mov
rclb
clc
mov
sub
adc
jmp
xchg
int3
into
mov
push
sahf
xchg
dec
sbbb
add
in
cli
cmpsb
loopne
sbb
push
cli
out
rorb
je
mov
push
adcl
dec
movsb
add
sbb
lea
xchg
mov
ss
cmpsl
push
sbb
fsubr
xor
and
and
lret
or
cmp
adc
stos
cmp
in
in
jl
cmp
jmp
xor
sbb
or
cmp
ds
jle
enter
inc
jl
aam
ja
bound
sbb
or
jb
pop
clc
pusha
adc
jbe
xor
jno
pusha
rorl
repnz
mov
add
sbb
icebp
or
pop
add
repz
sbb
or
lcall
je
sti
sarl
push
push
or
test
test
mov
sti
xor
lea
iret
out
mov
movl
lea
popf
loopne
pop
scas
adc
pcmpeqw
dec
fsubl
shll
in
cmp
out
cmp
push
adc
outsl
xor
jo
push
fwait
sub
add
sub
pop
push
and
cli
popa
or
rorl
stc
mov
mov
loopne
cmp
int3
in
test
jnp
out
xchg
adc
xor
test
cltd
jmp
scas
popf
xor
push
test
inc
xchg
fs
fisttps
nop
loopne
faddp
lea
xchg
mov
jo
lcall
xchg
mov
jae
mov
sbb
push
dec
add
push
negl
and
adc
dec
xlat
mov
mov
ret
mov
roll
add
int3
push
out
andl
imulb
popf
xor
lahf
ds
mov
inc
dec
adc
push
lods
outsb
out
pop
cmp
pop
lea
cmp
das
jle
xchg
pop
push
jp
add
add
dec
shlb
shrw
mov
aam
inc
cmpsb
and
loope
js
imul
enter
xchg
rclb
addr16
mov
pop
sbb
movb
cmp
jae
mov
jo
loopne
adc
pop
and
adc
ljmp
ss
cmc
xchg
sarb
das
xor
mov
cmp
inc
mov
inc
inc
cmp
cwtl
loop
inc
mov
jg
aas
incb
mov
xor
adc
mov
or
add
fdivr
leave
js
pop
xor
or
jb
mov
add
jg
push
inc
or
xchg
jle
sub
and
dec
clc
cltd
sub
lea
mov
add
mov
adc
test
ja
or
cld
pop
sub
enter
pop
and
addl
fisttpl
xor
roll
cmp
add
add
add
aaa
push
repz
mov
sub
sub
xchg
mov
je
adc
jp
mov
cltd
add
adc
nop
imul
add
mov
sbb
xchg
adc
xor
add
lods
sub
lds
mov
int3
mov
xchg
add
add
mov
cld
fs
cwtl
sti
or
lret
cmp
movsl
sahf
add
sub
adc
adc
stos
pop
jmp
js
or
out
pop
pushl
jmp
add
loop
lods
mov
out
jns
xchg
push
push
xchg
push
lock
mov
fcoml
mov
punpckhdq
push
testl
push
out
push
add
pop
loop
mov
mov
fistpl
cmp
jne
cmpb
ret
push
jae
addb
push
sub
sbb
lahf
rclb
sbb
and
push
cwtl
sbb
xor
push
adc
or
or
enter
mov
xchg
jl
or
sbb
sbb
leave
push
shrb
cmp
push
cmp
jae
inc
jmp
push
or
sub
sti
decb
lea
movsl
ds
add
test
add
sbb
sub
popf
adc
mov
add
add
jns
into
or
int
inc
jne
and
pop
test
add
or
jmp
push
inc
loopne
jne
in
xor
test
in
lods
pushf
pusha
pop
insb
aaa
or
ret
jmp
outsb
addl
xchg
ret
mov
lds
push
or
add
fisubrl
sbb
or
pop
lret
inc
adc
imul
or
add
and
dec
sbb
and
ret
arpl
mov
push
repnz
jb
or
cmp
pop
jbe
inc
lods
std
pushl
mov
int
pop
cld
je
mov
fcomip
add
adc
ja
cmpb
add
cmpsb
pop
push
push
or
or
xor
sbb
sbbb
inc
out
push
adc
cmp
jb
inc
jno
shll
cmpb
fadds
cli
movlps
adc
jne
scas
jne
sub
push
inc
or
insb
jg
ds
es
jno
cwtl
lcall
xchg
adc
outsb
sti
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
aam
or
push
inc
pop
icebp
push
hlt
xchg
into
or
movsb
jle
or
jbe
xor
or
addr16
push
and
imul
ss
repnz
dec
push
les
add
pop
in
out
sub
xchg
push
or
xor
mov
or
sbb
fnsave
lods
fs
inc
cmp
scas
pop
xrelease
add
fldl
push
popa
cmp
pop
pop
lock
inc
push
lods
popa
sub
outsl
sub
inc
data16
mov
cmp
scas
add
add
pop
call
mov
jne
mov
push
fisubrl
mov
push
mov
dec
cmp
and
test
jge
sub
pop
sub
cmp
ja
fs
xchg
push
insl
mov
outsb
or
mov
shl
dec
cmp
lea
jl
cld
data16
sti
mov
mov
inc
sub
dec
jns
mov
loopne
inc
push
dec
xor
outsb
pop
adc
jle
jecxz
or
dec
mov
icebp
cmc
popa
rorb
cmpl
inc
adc
sub
fiaddl
insb
fildl
fimull
jb
or
dec
or
xor
loopne
sbb
adc
test
inc
xor
adc
xchg
dec
push
sub
xchg
daa
add
lock
sbb
pusha
loop
or
or
fiaddl
inc
and
mov
or
loop
in
adc
cmc
push
mov
push
mov
in
sub
rol
enter
inc
pop
insl
stos
add
shrb
pop
and
or
jne
adc
jmp
xorb
pop
jge
movsb
nop
push
inc
in
shl
adc
push
push
inc
aam
push
test
mov
or
cwtl
xor
test
dec
pop
cmpsb
movl
sbb
lahf
outsl
mov
or
adc
out
pop
addl
add
sub
and
fnstsw
push
mov
scas
jge
loopne
mov
xor
push
jg
or
cmp
sahf
aam
push
adc
test
or
push
js
jne
push
bound
lcall
or
and
xor
js
pop
push
cld
dec
data16
js
jle
or
mov
arpl
test
push
cmp
adc
aam
in
inc
sbb
test
mul
mov
fiadds
loopne
loop
leave
outsb
xor
shl
faddp
adc
jmp
adcb
sbb
popa
jecxz
pop
dec
mov
arpl
push
repnz
sbb
jp
push
in
xchg
mov
cmp
in
into
das
jp
add
cmpl
mov
xorb
dec
lock
push
add
call
adc
js
cs
in
inc
mov
jns
or
dec
pop
push
cs
adc
sbb
xor
mov
lcall
add
lea
in
dec
add
nop
push
sub
test
xchg
add
fldl
je
push
and
inc
push
add
rclb
inc
pop
punpckhbw
and
dec
dec
outsl
inc
sub
sbb
xor
dec
jns
and
in
or
adcb
mov
outsb
sub
xchg
inc
shrb
pusha
jo
push
ja
push
push
adc
jmp
xlat
icebp
adc
pop
cli
test
pushf
mov
push
fsubl
out
lea
mov
mov
jg
xor
out
push
add
xchg
and
cli
inc
mov
je
jle
pop
jg
loopne
sbb
mov
pop
clc
addl
mov
inc
flds
stos
pop
fwait
loope
push
bound
mov
lcall
mov
add
adc
fsubr
pop
popf
fisubrl
mov
loopne
mov
dec
pushl
xchg
rorb
arpl
jmp
add
sbb
dec
dec
leave
cmp
stos
ja
push
jnp
aam
ret
fbld
shlb
pop
push
mov
or
inc
add
hlt
call
ljmp
lcall
xor
xchg
sbb
xchg
add
add
stos
mov
movb
leave
cltd
sbb
add
jge
rorl
clc
add
xchg
je
jne
mov
inc
test
and
sub
in
add
jge
mov
jp
add
add
loopne
mov
stos
mov
or
push
add
or
xorb
test
pop
dec
xchg
lret
jl
test
mov
xchg
cmp
and
mov
or
out
dec
sub
push
sahf
mov
iret
into
or
lret
lret
or
xchg
cmpl
sub
and
xchg
rorl
mov
cwtl
je
cmpl
adc
adc
dec
jp
adc
and
sub
sbb
in
sbbb
sbb
movsb
in
and
or
push
cmp
adc
sbb
and
int
in
add
xchg
mov
jb
negl
push
mov
adc
call
jne
movsl
and
and
mov
adc
loopne
inc
leave
mov
jae
dec
jnp
dec
out
lds
sub
or
fidivl
sub
loope
pmaddwd
mov
jmp
test
test
cmp
les
adc
sub
daa
jae
mov
sub
sub
mov
push
test
add
mov
push
test
mov
xchg
test
inc
mov
push
inc
ss
mov
xor
pop
push
shlb
mov
and
pop
idivl
aam
mov
xchg
mov
or
pop
jp
dec
adc
mov
push
pop
mov
push
inc
sub
loopne
push
xchg
mov
add
test
mov
test
cwtl
lea
jmp
lret
sub
das
js
cmp
xor
ljmp
iret
je
xor
adc
lea
mov
hlt
data16
mov
pop
inc
xchg
add
stos
mov
fs
jno
add
mov
repz
lret
adc
imul
add
js
add
ds
cmp
xchg
jb
pop
xor
sbbl
push
jae
add
inc
mov
lea
shll
ljmp
je
add
ret
or
fldcw
ret
pop
ret
push
aas
push
push
shlb
or
cmovs
pop
cwtl
dec
jo
clc
cmp
lea
pop
ret
xor
push
in
and
mov
or
push
lock
and
xchg
ljmp
xchg
jnp
popf
mov
test
lock
push
mov
je
inc
test
out
mov
cmp
icebp
stos
shlb
push
sbb
pop
call
outsl
xor
icebp
sbb
aad
push
aaa
fisttpl
xor
and
add
loop
inc
or
and
unpckhps
push
mov
test
pusha
pop
jg
xor
fstpt
dec
data16
sbb
xchg
add
push
or
adc
jbe
mov
pop
rorb
inc
or
pop
testl
pop
push
cmpl
rorb
sbb
das
es
cmp
call
movsl
adc
repnz
mov
xchg
call
xchg
clc
imul
inc
add
js
sbb
or
mov
mov
dec
insl
cli
add
call
jne
jmp
fmul
scas
shr
or
in
mov
cli
fs
push
push
xchg
mov
je
ficoms
mov
enter
sbb
fmull
inc
sub
loopne
rcrb
lret
mov
cmp
jbe
into
leave
add
imul
filds
add
std
cmpxchg
adc
push
add
cmp
adc
mov
xor
stos
cmpb
je
nop
mov
and
mov
push
and
je
es
jne
add
movsl
in
sbbb
sbb
dec
sbb
test
in
jge
fnsave
stos
mov
mov
shll
imul
sbbl
roll
ljmp
ret
inc
dec
jae
das
arpl
add
cmp
xchg
rcr
dec
push
cmp
jb
mov
test
add
pop
cmp
sbbb
cwtl
aaa
sbb
inc
sarb
push
cmp
stos
add
ja
out
add
cmp
inc
add
rolb
mov
fiadds
mov
lea
jecxz
jmp
inc
pop
mov
mov
dec
daa
fs
rorb
notb
je
dec
outsb
xor
add
add
sbb
dec
add
outsb
loope
mov
add
add
jmp
mov
cs
mov
add
or
sub
fisttps
rclb
loope
lods
mov
and
add
inc
cmpsl
sbb
jp
lock
decl
adc
fmull
call
jns
or
pop
movl
mov
testl
push
pop
faddl
mov
insl
dec
lcall
nop
lahf
xor
and
sti
fsubrl
test
pop
push
repz
jne
pushf
fmull
lret
divl
mov
in
adc
add
inc
dec
add
mov
pop
jbe
or
test
ja
pop
or
movsl
loopne
push
addr16
sti
pop
inc
push
cs
jae
adc
in
push
adc
test
jae,pt
jp
or
ret
aas
aaa
and
mov
mov
push
jae
xlat
add
cmpl
hlt
jmp
xchg
les
mov
loopne
mov
mov
or
and
subl
cmp
push
mov
mov
ss
fsubl
xchg
popa
insl
jecxz
push
cmp
ret
cmp
popf
popf
sbb
jns
sahf
jge
xchg
push
push
jnp
cld
sahf
dec
rcrb
add
js
jo
xor
out
push
jb
mov
xchg
xchg
ret
or
push
fistl
sub
sbb
mov
movsb
cmpb
xchg
sqrtps
jl
gs
push
int
xlat
mov
int3
aas
rorb
pop
sbb
arpl
cwtl
rorb
jae
enter
and
in
adc
cli
jne
fwait
jg
scas
sub
sbb
inc
aaa
mov
push
sbb
loopne
and
pop
sbb
push
repnz
jno
sti
sub
xor
jb
jno
sub
sub
dec
fisubrl
fcompl
sub
je
and
fisubrs
add
mov
pop
jb
rcrl
in
cld
movsb
shlb
test
add
and
pop
and
and
insb
push
out
popf
imul
cmp
push
or
lret
push
xlat
sbb
add
daa
xchg
adc
sbb
cmp
push
sub
movsb
jb
pop
xor
xor
xchg
lret
cmp
cmp
push
dec
sub
inc
or
or
dec
push
comiss
jb
adc
push
pop
sti
sbb
or
cmp
adc
pop
mov
mov
sub
pop
int3
shlb
pop
rcr
mov
mov
mov
or
sahf
fsubrs
dec
xchg
ficomps
aam
push
movl
sti
movb
sbb
sahf
loopne
popa
push
aam
rol
push
scas
jo
xchg
aad
add
cmp
ret
inc
pop
or
inc
sbb
sbb
cld
lock
cmp
mov
sbb
xchg
xchg
or
enter
daa
mov
enter
shll
divl
jnp
fs
cmp
nop
dec
inc
inc
cmp
in
inc
cmp
in
inc
push
sub
and
adc
fadds
cmp
or
or
inc
jbe
popa
aad
clc
add
rorl
adc
cmp
push
xchg
mov
xchg
fldl
fistpll
popl
dec
push
sbb
cs
pop
loope
push
rcrl
es
jo
cs
push
push
loopne
mov
sub
add
add
hlt
xchg
fst
jne
push
inc
sbbb
stc
push
cld
pusha
ror
pop
sub
je
add
add
arpl
add
and
lea
loopne
pop
push
push
sbb
or
out
or
adc
and
or
in
push
xor
rorb
jb
sbb
add
inc
jge
loope
adc
pushl
inc
push
pushl
and
out
push
jno
add
push
orl
scas
mov
mov
sbb
fisttpll
mov
mov
pop
cli
decl
loopne
inc
or
jmp
lea
outsl
adc
scas
push
push
pop
jo
sbb
les
sub
add
daa
inc
or
mov
mov
or
enter
pop
add
push
leave
test
or
inc
test
jns
lock
fldln2
inc
mov
or
testl
xchg
or
movsb
repz
mov
lret
pusha
or
or
adc
loop
rol
outsl
inc
xchg
push
hlt
or
mov
cwtl
fwait
and
pop
cmp
jo
inc
dec
std
or
mov
clc
push
clc
xorb
out
orb
mov
daa
or
sbb
xchg
push
add
popa
pop
test
push
fcmovb
andl
cmp
pavgb
gs
add
add
pop
adc
sbb
dec
ja
mov
fwait
mov
mov
es
pop
clc
icebp
ret
inc
adc
or
pop
lods
sbb
js
xchg
push
fcoml
fwait
cld
add
pop
mov
xor
pop
addb
mov
sub
mov
push
xor
out
adc
dec
adc
push
add
xor
insl
push
inc
jnp
adc
dec
js
test
fmull
js
and
cmp
jg
sar
nop
jae
imul
jnp
int
cmp
mov
dec
inc
fnstenv
add
rclb
inc
adc
std
stc
lahf
cmp
push
das
lods
mov
and
shr
popa
fs
test
cwtl
add
pop
out
adc
pop
add
or
inc
ret
inc
orl
push
sub
and
xchg
addb
shl
fmull
pop
ja
nop
adc
addr16
outsl
add
push
cmp
jae
push
imul
jmp
add
sarb
or
cmpsl
push
sbbl
ret
or
pop
add
movsl
es
mov
lret
xor
iret
in
daa
test
sbb
lahf
mov
subb
push
insb
add
sbb
mov
xchg
lea
xchg
cmpsl
add
and
inc
pop
pop
cmp
adc
mov
popa
mov
sbb
and
sbb
and
xor
or
cmc
and
rclb
adc
inc
dec
lcall
pop
lea
inc
or
or
sub
xor
mov
cld
pop
fiadds
jb
inc
and
rcr
inc
dec
lea
lcall
sbb
pop
stc
addl
push
add
lahf
hlt
pusha
push
std
popa
or
icebp
and
or
loopne
mov
repz
add
xchg
pop
js
dec
out
adc
gs
adc
pusha
pusha
out
loope
xchg
outsb
push
cmp
jmp
xlat
xor
adc
cmpsb
xor
or
xchg
lock
imul
xor
addb
adc
sbb
ja
popa
jl
pop
test
and
mov
mov
xchg
aam
jp
push
push
mov
adcb
fldl
cmpsl
shrb
les
imul
and
sbb
hlt
inc
inc
mov
icebp
push
stos
icebp
lods
sub
xor
mov
jns
mov
sub
push
mov
rolb
pop
fldpi
add
std
or
sahf
arpl
dec
sub
jmp
cmc
cmpxchg
sti
xchg
cmpb
xchg
push
das
sub
jne
push
shlb
arpl
xchg
imul
jmp
leave
xchg
add
ss
ja
pavgb
aam
aam
pop
int3
or
adc
pop
in
mov
pop
shrl
push
mov
or
inc
dec
in
adc
das
mov
in
and
sbb
lret
sti
orb
shll
jg
push
sbb
adc
sti
mov
sti
pop
mov
enter
pusha
push
or
testl
inc
and
mov
xorb
xchg
add
xchg
test
rcrb
cwtl
dec
fmuls
xorb
lret
icebp
inc
repnz
dec
pop
push
cld
push
outsb
or
icebp
pop
orl
mov
enter
cmp
shr
test
push
jp
mov
or
sbb
nop
and
add
push
jae
cmc
mov
mov
push
and
or
mov
popf
shrb
jg
lret
add
fs
movsl
gs
jle
add
mov
dec
popl
xorl
add
add
push
clc
les
test
xor
inc
xor
nop
cmc
fdivrp
add
mov
cli
mov
test
inc
icebp
pusha
mov
push
das
popl
add
mov
jg
clc
and
stc
ret
adc
movsl
lods
es
ret
cmp
sbb
mov
mov
lods
je
xchg
jno
pop
or
testb
mov
inc
jp
mov
jb
jno
and
cld
inc
jb
shrb
or
or
inc
xor
cmp
xor
mov
cmp
or
mov
lcall
inc
or
mov
in
xchg
lock
or
pop
lock
pop
hlt
std
orl
mov
dec
ret
out
jmp
das
or
rcl
mov
into
mov
int3
insb
xor
jge
adc
inc
popa
stos
adcl
mov
or
gs
sbb
mov
sub
sbb
sub
rol
mov
ret
push
add
lods
add
popa
and
je
push
dec
sub
mov
sub
in
adc
dec
loopne
movsl
sbb
scas
push
push
les
pop
sarb
movsb
push
movsb
or
repnz
sub
xor
imul
and
mov
jl
roll
bound
in
cld
adc
in
out
dec
mov
out
mov
sbb
std
jne
es
repz
mov
iret
scas
and
fs
xchg
and
inc
or
or
jae
cmp
mov
add
lret
push
fmuls
jbe
popa
into
jnp
mov
or
sub
sub
in
mov
add
xor
jl
cmp
aas
jecxz
pushf
jp
push
push
loopne
cmpsl
test
test
xchg
cmp
adc
les
xor
sub
xor
es
rep
addr16
pop
mov
pop
mov
jne
aam
jl
imul
lea
mov
es
xor
add
dec
les
mov
rcll
dec
jp
or
mov
jmp
sub
pop
or
push
movsb
loopne
dec
clc
pusha
sub
xor
lcall
jo
popa
inc
jno
jnp
cmp
mov
or
lock
or
pushf
or
sarl
cltd
push
movb
xchg
jb
mov
cld
add
and
mov
add
les
push
sub
sub
cmp
cs
jmp
or
in
in
loope
mov
add
adc
sub
add
sbbb
loope
into
rol
cmpsl
dec
sbb
add
pop
sbb
or
fisubrl
xor
mov
lea
add
lds
fiadds
or
sbbl
mov
add
incl
push
xor
dec
push
je
dec
sbb
loope
jne
rorl
fnsave
adc
xchg
aaa
push
adc
inc
lahf
push
add
dec
adc
xlat
dec
jb
mov
lock
dec
push
roll
sub
shlb
inc
cmp
pop
fiadds
xchg
jbe
cwtl
int3
xor
lcall
sbb
jecxz
dec
dec
mov
roll
mov
add
pop
or
aaa
mov
mov
lcall
pop
clc
repz
add
jne
cmp
pusha
sub
pop
jge
inc
sub
scas
imul
sbb
add
push
add
mov
jnp
add
addr16
ja
push
xor
dec
xor
sub
test
aaa
inc
in
cmp
jb
inc
mov
xchg
cmp
in
stc
add
lret
push
lods
add
pop
jmp
flds
inc
ret
and
nop
or
int3
cmpsl
mov
call
mov
mulb
and
and
sub
sbb
daa
sbb
mov
adc
lret
sarb
pop
into
push
push
add
add
add
or
dec
lods
push
adc
cwtl
std
lock
loop
fsubl
inc
sub
sti
je
mov
shrb
inc
std
or
or
test
iret
call
push
rorl
cmp
inc
pop
and
push
xchg
vmread
fsubrl
icebp
cld
roll
cmp
daa
lock
pop
nop
add
and
sti
orb
dec
sub
xor
rol
adc
xor
cmp
push
imul
pop
add
pusha
push
gs
inc
fisubrs
pop
push
xor
sub
js
insb
lea
test
in
xchg
test
fs
and
pop
dec
fisubl
sbb
push
sub
inc
imul
sub
jb
xchg
push
inc
mov
lret
add
dec
or
mov
pop
loop
in
lcall
lea
mov
jmp
cmp
jae
add
lar
pop
addr16
out
lret
ja
and
lret
pusha
lock
andl
dec
jns
rorl
dec
bound
into
fistps
in
popa
leave
cmpb
dec
push
xor
je
fs
cmp
loop
push
adc
mov
sbb
cwtl
popa
rcrb
push
ds
and
insb
sbbl
or
adc
jne
push
adc
cs
cltd
dec
sbb
mov
and
cmc
pop
lret
inc
or
lahf
mov
lds
rcrb
or
push
xchg
mov
jmp
cltd
mov
jg
inc
dec
inc
push
cmp
jmp
add
insb
mov
xchg
push
nop
inc
inc
mov
fnstsw
sub
xorb
lea
jnp
sub
inc
dec
sbb
js
jne
or
test
add
int3
sub
dec
rolb
rolb
mov
mov
push
inc
sbb
aad
imull
test
insl
sbb
cmc
mov
xchg
mov
in
stc
inc
xor
and
pop
imul
xor
add
xor
sbb
sbb
pop
jmp
inc
cmp
inc
mov
loopne
add
pop
or
push
in
out
push
loopne
sti
push
xchg
add
add
jecxz
sahf
push
inc
stc
cmpb
jo
xchg
sbb
sbb
roll
add
cwtl
orb
jns
sbbl
inc
outsl
in
and
fdivrl
js
jne
mov
mov
jge
movsb
or
push
jle
add
cmp
rolb
enter
jmp
aam
into
clc
add
rcrl
sub
jae
lea
pop
sbb
xor
pop
andl
xor
sbb
std
imul
aad
and
enter
sbb
dec
scas
fmuls
mov
mov
dec
loopne
mov
inc
xchg
push
jae
iret
bound
jle
push
sub
repz
rorb
add
pop
jne
jb
lahf
sub
sub
jne
pop
test
pop
bound
ds
pushl
inc
push
lods
mov
test
bound
cmp
mov
mov
repnz
and
mov
or
aaa
add
test
or
adc
fcos
inc
test
sub
pop
adc
or
clc
test
push
sbb
je
mov
fisubs
add
pusha
pop
xor
movsb
test
stc
adc
xchg
in
in
or
ds
dec
cwtl
pop
adc
dec
inc
or
out
pop
pushf
push
cmp
mov
inc
cs
inc
inc
add
pushf
cmp
lcall
push
les
iret
clc
sldt
aam
pop
inc
fmuls
addb
pusha
test
lret
loopne
and
popa
sub
sub
rorl
test
or
mov
or
out
jo
pop
mov
inc
xchg
sbb
sahf
rorl
or
arpl
enter
push
jae
sbb
rorl
out
pop
nop
fsubr
stc
mov
sbb
in
sbb
push
dec
and
dec
sbb
imul
aaa
in
ja
mov
in
dec
lods
lods
push
adc
mov
add
inc
int3
sbb
mov
xor
mov
sub
cmp
icebp
dec
ds
add
sbb
loopne
fwait
es
jnp
sbb
or
out
repnz
jnp
pusha
dec
pop
ret
insb
dec
add
rorl
cmp
test
pop
cmp
push
mov
add
mov
sub
sub
icebp
dec
stc
pop
lea
test
pop
add
mov
sub
jp
ja
inc
and
mov
mov
ror
mov
adc
sbb
and
inc
mov
xchg
insl
dec
sbb
sub
pop
inc
cli
pop
push
paddusb
mov
repnz
mov
lret
dec
push
jne
cmovae
push
or
daa
dec
test
fldl
sub
sbb
and
mov
sbb
ret
add
les
sbb
xchg
pop
ds
push
les
ja
or
or
mov
sbb
xorb
nop
cmp
ja
or
xor
mov
or
mov
rolb
add
leave
jno
pop
add
mov
add
inc
aaa
inc
js
nop
mov
mov
stos
sahf
xchg
lret
xor
scas
das
mov
mov
sub
lret
inc
add
jecxz
roll
dec
pop
arpl
nop
mov
sbb
js
mov
popf
test
int
shlb
mov
test
lock
in
and
cmp
adc
push
mov
inc
adc
lret
inc
cmp
lret
or
les
nop
adc
sub
mov
or
xchg
or
fwait
aaa
jns
xchg
mov
xchg
sbb
mov
or
dec
es
addr16
sbb
jae
mov
pop
jno
push
add
or
jle
popa
sbb
sbb
pop
xlat
sbb
test
sbb
iret
stc
and
sbb
lret
push
shll
sbb
js
fcoml
push
in
inc
push
rcll
inc
pop
push
xor
fnstsw
jns
mov
and
mov
sub
add
dec
push
xlat
and
and
pusha
int
cld
aad
xchg
xor
nop
lea
xchg
pop
jmp
inc
fnstcw
in
xchg
inc
jne
mov
mov
sub
sbb
cmc
add
sbb
sbb
push
movsb
popf
or
and
aaa
mov
sarb
mov
dec
xchg
cmp
repnz
inc
add
rclb
lock
or
leave
pop
dec
rol
ja
ret
push
test
in
out
js
and
jge
dec
dec
js
ss
mov
in
jne
or
rcll
je
lds
add
fwait
add
jmp
xchg
push
mov
dec
sar
dec
int
xchg
mov
sub
xchg
add
js
jl
mov
and
mov
xor
pop
aaa
ficomps
cmpsl
or
scas
or
test
movsb
mov
jne
cmp
dec
push
inc
mov
daa
test
inc
push
dec
mov
and
into
sub
sti
xor
movsl
mov
lret
pop
js
lret
stos
push
fsts
clc
xchg
jno
sbb
pop
sbb
add
jl
push
stos
hlt
sbb
ss
push
mov
sbb
stos
dec
lret
ja
dec
and
sbb
mov
or
movsb
aad
jnp
xor
sbb
sbbb
mov
adc
jae
sub
inc
rorb
adc
push
lods
inc
shr
pop
or
test
or
and
cmp
lret
and
push
sahf
mov
cmp
in
sbb
rclb
sub
pushf
adc
int3
cltd
sahf
and
insl
loopne
call
inc
shlb
movsb
fwait
rcl
adc
inc
loope
gs
out
adc
iret
dec
mov
push
cwtl
insl
adcl
push
mov
mov
sbb
popa
insl
mov
arpl
out
sbb
mov
shll
inc
js
sbb
out
mov
or
loope
xchg
inc
sbb
sti
sub
and
lods
mov
jbe
pop
cwtl
adc
subb
jle
enter
push
mov
inc
out
pop
push
mov
adc
fs
sub
add
or
xor
xchg
jl
sbb
xor
imul
jge
push
cwtl
nop
adcb
scas
dec
sbb
cmp
mov
dec
mov
add
jns
lock
mov
add
xchg
lods
mov
mov
and
fcoms
and
sbb
shll
pop
imul
pop
jmp
mov
or
roll
push
pop
sub
inc
cmp
dec
arpl
xor
and
lock
jmp
popf
ljmp
test
fwait
popa
and
xchg
xchg
add
mov
fwait
sub
es
sbb
pop
xor
jne
pushf
mov
cmp
or
adc
xchg
orl
xor
leave
mov
cmp
les
mov
xor
xchg
xchg
adc
movsb
mov
sbb
lret
adcb
daa
insb
mov
add
stos
mov
inc
lcall
enter
xor
pop
sub
pop
jnp
pop
push
pusha
sub
add
mov
push
pop
mov
pop
sbb
mov
and
data16
push
hlt
test
and
rolb
mov
sbb
mov
add
iret
cmp
cmp
ret
fsubrs
rorl
jl
sahf
pop
xor
sub
xor
hlt
stc
cs
pop
test
sbb
inc
sub
sub
lea
movsl
sbb
adc
ror
sub
sub
jbe
sub
sbb
test
adcl
jp
dec
popf
in
int3
mov
pop
jno
out
cmp
aam
mov
movsl
test
xor
sbb
shl
dec
leave
and
push
sub
mov
out
cmpsb
popa
stos
push
mov
push
lods
or
jo
outsb
mov
cmp
rcrb
out
pop
fists
and
pop
rcll
jmp
aam
adc
sti
addr16
and
push
lret
orl
xor
lds
enter
subb
dec
pop
push
pop
xchg
cs
das
adc
fwait
cmp
add
push
cmp
xor
sahf
push
test
sub
push
nop
xchg
and
cmc
daa
pop
jb
mov
xor
xchg
dec
enter
add
push
pop
or
cmp
test
lds
jecxz
les
dec
cmp
popa
pop
xchg
mov
enter
add
jo
ds
and
inc
addr16
cs
fcmove
and
cmc
cmp
push
sub
les
add
movsl
arpl
or
lds
xchg
rcrl
mov
xchg
mov
jns
jo
xchg
adc
jb
sub
sub
shll
scas
ljmp
mov
add
mov
shr
jge
repz
cmp
je
xchg
test
xor
or
call
or
lods
mov
jne
inc
lea
xor
mov
mov
cwtl
mov
inc
sub
and
push
inc
js
sub
out
test
inc
cmp
and
in
cs
test
pop
add
fldenv
adc
repnz
jae
dec
and
push
xchg
xor
add
xchg
pop
nop
add
add
cmp
cmc
sahf
and
inc
push
push
add
mov
add
orl
les
ljmp
lret
inc
dec
cmp
scas
mov
mov
mov
pushl
xchg
cmpsb
dec
inc
push
out
inc
jge
push
mov
lods
cmc
test
mov
cli
outsb
and
loop
cmp
mov
test
jne
and
roll
jae
aaa
add
cmp
adcl
push
add
push
pushl
aaa
pushl
push
orl
call
lds
jge
mov
inc
push
lret
push
lods
or
and
push
sbb
pop
push
xchg
fwait
and
inc
dec
lods
inc
addl
mov
adc
xor
dec
xchg
adc
movsl
ficomps
es
mov
es
or
mov
adc
addr16
je
add
or
pop
sub
rclb
sbb
xchg
das
int
ja
and
pop
mov
or
push
and
jbe
or
add
int3
les
push
dec
ud0
or
ss
out
lock
adc
mov
push
xorl
adc
mov
pop
dec
outsl
jno
and
push
sub
add
neg
xchg
xchg
int
test
adc
push
cltd
loope
movsl
adc
adc
sbb
xor
lods
and
push
push
addr16
in
sbb
cmp
mov
sbb
dec
sbb
adc
mov
loop
mov
adc
xchg
or
dec
xchg
in
pop
sbb
cmpl
outsl
dec
xchg
sbb
and
enter
pop
repnz
lods
incl
or
mov
sbb
sti
and
add
mov
mov
js
mov
jb
pop
rcrb
lods
xchg
shl
jns
sub
nop
add
test
call
sbb
popf
movsl
add
xor
inc
sub
insb
jnp
xor
movl
cmp
inc
pop
or
adc
xor
pop
adc
mov
rorb
jecxz
fidivl
in
inc
pop
movsl
ja
push
mov
pushf
push
and
repnz
add
inc
std
mov
mov
xchg
xchg
lret
pop
icebp
dec
pop
pop
xor
sbb
loope
les
sbb
xor
jbe
pop
sub
inc
and
xor
or
mov
xor
add
rol
add
loope
sbb
jbe
mov
ss
pop
fs
xchg
xchg
sub
aaa
mov
cmp
std
cmp
sub
inc
lea
ret
xor
xchg
cmp
inc
daa
outsl
add
fdivrs
push
xor
lods
movsl
lret
mov
les
ds
and
sbb
cwtl
ficoms
cmp
test
jb
pop
sarb
xor
adc
xor
in
cmp
loope
lods
mov
jg
push
push
cmp
inc
in
xchg
lea
push
mov
dec
loopne
dec
push
push
in
push
inc
adc
jnp
lea
mov
fcomps
hlt
rorb
inc
and
and
xor
sub
and
xor
jb
lret
sub
mov
insl
add
scas
movsl
adc
push
inc
cmp
cmp
leave
enter
xor
inc
dec
rclb
ret
inc
rcll
lods
in
cmpsb
int
cmp
fnstcw
inc
pop
jb
dec
and
sub
adc
test
fldl2t
int
enter
scas
or
mov
lea
inc
push
push
lret
pop
imul
sbb
mov
inc
or
lret
in
inc
dec
andl
sub
cmp
faddl
inc
adc
inc
sub
mov
cmp
pop
inc
int3
sub
dec
gs
push
cmp
jp
jbe
xor
stos
test
xor
lea
jno
mov
mov
dec
or
cmp
cmp
fisubl
xor
daa
sbb
jmp
mov
cmpsb
push
sub
fs
es
nop
dec
sub
push
rol
or
pop
push
mov
mov
and
mov
push
clc
inc
enter
dec
pop
pop
mov
aas
mov
push
jecxz
je
jns
jle
movsl
scas
test
or
mov
jns
push
xchg
push
int
push
sbb
fisubl
mov
push
popa
test
js
outsb
rorl
or
sub
xor
xorl
das
mov
add
rcrb
outsl
pop
nop
add
je
dec
jmp
sbb
push
js
dec
xor
std
cwtl
in
icebp
push
lea
xchg
mov
in
loope
int3
int
in
test
test
mov
inc
mov
fists
xchg
mov
push
xor
and
test
jbe
imul
loope
push
adc
lods
adc
cltd
inc
lcall
sub
std
jle
dec
jo
inc
and
sbb
jecxz
mov
adc
pop
mov
cmpsb
das
mov
lahf
or
in
jl
cmp
and
pop
add
adc
jp
js
fcomp
cmpsb
dec
push
lods
fsts
xor
ss
mov
mov
or
xchg
pop
stos
call
sbb
mov
jae
ret
cmpl
outsb
movsb
pop
xor
dec
daa
iret
xorb
les
add
push
add
or
jo
and
aad
sbb
adc
fs
push
inc
jg
and
or
nop
in
and
inc
je
out
arpl
inc
mov
dec
pusha
mov
sbbb
pusha
pop
aaa
adc
xchg
pop
lds
mov
pop
iret
test
icebp
push
ret
mov
shl
add
jno
popf
in
sub
stos
add
push
cwtl
add
scas
in
inc
sub
in
je
and
sub
add
dec
add
add
js
and
stc
pusha
mov
mov
add
test
or
sub
and
rcll
or
adc
xor
out
test
push
sub
arpl
push
and
pusha
mov
jae
icebp
cmp
out
sbb
ljmp
jne
cmp
enter
lock
inc
cltd
pusha
cwtl
cmp
inc
call
mov
pop
xor
or
inc
mov
ds
clc
add
sarb
sbb
popf
mov
inc
mov
dec
jne
pusha
sbb
movsl
int3
cmpb
je
xchg
or
cmpsl
push
outsl
sub
shlb
js
adc
fdivl
fs
imul
movups
inc
add
movsl
mov
nopl
fwait
imul
and
pop
cmp
jle
inc
cmp
jae
add
mov
lcall
dec
inc
jb
cmc
mov
push
movb
jae
mov
test
sbb
rcrl
sub
insb
cld
out
add
fstps
dec
sbb
fstps
mov
mov
add
inc
add
and
and
clc
cmpsb
add
sub
lock
or
and
pop
insb
lods
push
ljmp
movsl
sti
or
sarb
mov
fs
lahf
xor
or
idiv
dec
cmp
jo
rorb
inc
insb
inc
dec
in
mov
sar
jo
inc
in
pop
mov
insb
sbb
push
add
je
xor
sbb
mov
loop
sbb
leave
js
push
push
testb
push
sbb
mov
dec
movsb
jmp
push
sbb
lea
fildl
and
add
mov
imul
or
push
sbb
fs
cld
sub
pop
add
and
jo
pusha
shrl
jp
subb
andl
ficoml
xchg
sbb
inc
or
mov
cs
xor
ljmp
push
cmp
cmp
pusha
andl
fldenv
pop
add
stos
inc
push
mov
bswap
out
sbb
mov
aas
add
test
sbb
lcall
jl
pop
push
mov
cmp
icebp
mov
pusha
int
cld
inc
inc
loopne
daa
jmp
adc
inc
stc
ret
mov
pop
add
movsl
out
loopne
xchg
mov
cs
repz
adc
das
shlb
sbb
jb
scas
adc
add
orb
mov
sub
xor
inc
lods
push
push
jno
jo
repz
call
pop
push
add
jecxz
sub
push
fcomi
aaa
rorb
xor
xchg
xchg
adc
and
jae
jl
cmp
fmuls
jne
or
mov
imul
scas
fdivrl
je
cmp
je
cmp
je
cmp
je
push
inc
push
xor
cmp
and
or
jns
jmp
hlt
jne
push
fidivrs
subb
pop
nop
xor
pop
lods
inc
mov
cmpsb
push
push
or
push
mov
lock
pop
ja
jbe
jle
mov
xchg
mov
add
faddl
faddl
cmpsl
mov
leave
aam
add
incb
pusha
nop
xchg
mov
int3
adc
pop
ror
outsl
adc
pop
xor
push
fwait
xchg
les
clc
or
je
mov
push
sbb
movsb
xchg
push
inc
rcr
outsb
xchg
scas
push
icebp
push
daa
add
loopne
rolb
pushf
and
jp
sbb
int3
add
push
and
inc
dec
loopne
insb
and
rolb
xchg
add
or
insl
mov
inc
mov
push
xor
push
mov
mov
add
hlt
incb
inc
je
mov
cmp
jb
xor
fdivrl
push
push
cld
and
cld
rcrb
lcall
or
add
mov
xchg
cmp
clc
mov
in
ret
and
js
loopne
jns
lock
rcrl
rcrl
add
pop
and
and
inc
jge
mov
call
adc
ja
pop
add
or
dec
cs
add
sar
mov
add
imul
push
push
test
pop
std
cwtl
je
jecxz
dec
mov
sub
sub
int
sub
hlt
dec
and
dec
sub
incb
push
cmp
fsts
sub
lods
xchg
add
shlb
and
in
test
insb
cmp
repnz
jno
jp
dec
out
jne
sbb
inc
pop
jns
dec
imul
aaa
add
sub
cld
pop
mov
or
cmp
inc
xchg
mov
aas
mov
loopne
mov
inc
xor
push
idivl
or
fistl
push
mov
pop
mov
sub
mov
mov
cmp
xchg
hlt
addr16
mov
sbb
push
lea
xor
call
xor
jle
je
push
sbb
adcb
or
stc
out
mov
ds
adc
lds
mov
add
mov
mov
push
dec
jo
push
add
call
je
add
inc
xor
cmp
fdivs
in
es
push
xchg
shld
stos
test
int3
or
mov
adc
test
jnp
out
xor
and
push
and
pop
rclb
cmpsl
xchg
push
dec
jne
or
xchg
call
jl
cmp
mov
loope
rol
add
in
or
lahf
js
dec
cwtl
pop
shll
stos
aad
mov
sbb
or
sub
movlps
add
movsb
or
dec
cmpl
fstp
inc
add
mov
je
loopne
in
adc
mov
lea
movsl
add
pop
andl
out
xchg
push
movsb
pop
sbb
adc
ret
pusha
xchg
dec
push
push
mov
push
and
dec
clc
mov
fsubrl
ss
dec
mov
sbb
ljmp
add
jo
xlat
movsb
mov
insl
mov
or
orl
mov
push
lahf
and
test
pop
dec
and
jne
cmp
jne
loopne
aas
subb
dec
jbe
test
and
lahf
movsl
cmp
rorl
ficoml
call
gs
or
inc
or
movsb
push
xchg
add
outsb
shrl
xchg
fsubl
jle
mov
call
jle
pushl
test
pop
jne
sbb
mov
mov
fimuls
adc
xchg
xchg
sahf
loop
pushl
mov
pop
sbb
jmp
or
test
mov
adc
lds
movb
add
dec
add
les
and
repnz
and
and
jbe
ffree
insl
ja
aad
adc
jno
and
je
or
mov
outsl
neg
lea
jb
cmp
rclb
cmp
cmp
push
fists
jne
pop
mov
and
or
je
pushf
jecxz
mov
push
fistpl
test
movsb
jecxz
subb
sub
add
cmpb
mov
jne
pop
push
or
cltd
pop
mov
add
push
dec
cmp
scas
ret
and
and
push
mov
push
push
popf
in
dec
xor
in
adc
sbb
or
adc
dec
fisubrl
push
jmp
push
lea
adc
mov
push
lret
es
jns
mov
lea
sbb
jmp
cltd
js
push
mov
mov
rcll
and
xchg
cmc
or
std
daa
mov
cmp
stos
add
idivb
mov
int
sub
dec
cmp
pop
jmp
je
js
fisttpll
pop
mov
mov
and
add
and
ds
int3
addl
nop
dec
push
jmp
jns
nop
loopne
cmp
xor
imulb
fs
jmp
push
add
cmp
popa
dec
and
leave
fwait
dec
gs
fwait
adc
ja
sbb
cltd
test
cmpsl
loope
enter
or
cli
xchg
mov
xchg
pop
movsl
mov
pop
xor
mov
sbb
sub
push
fdivs
cwtl
dec
dec
fadds
sub
ret
add
push
inc
push
adc
xchg
xchg
sahf
cs
adc
jbe
inc
inc
sbb
pop
push
nop
enter
and
push
adc
or
add
inc
adc
icebp
cmp
pop
adc
mov
inc
test
pcmpeqw
sbb
shrl
call
cmp
xchg
movsl
subl
sub
jno
es
xchg
adc
test
add
enter
loopne,pt
loopne
cmp
push
mov
xchg
flds
or
mov
mov
mov
scas
test
pop
mov
mov
lods
adc
shrb
lods
iret
dec
outsb
ljmp
js
adc
add
clc
xor
lods
inc
mov
push
mov
mov
add
jg
or
jb
pop
test
adc
lock
mov
fmull
lcall
cmp
inc
pop
loope
pushf
and
ret
sbb
push
pop
sbb
les
pop
jo
dec
or
push
adc
ret
adc
daa
call
jle
sub
inc
lock
mov
fstl
inc
or
mov
cmpsb
mov
mov
mov
cmpsl
clc
adc
loop
pop
mov
jns
and
sbb
push
pop
sbb
push
xor
lock
mov
rclb
xor
and
add
loopne
in
pushf
adc
jbe
mov
or
and
ret
int
add
fwait
jne
xchg
mov
add
mov
pop
movsl
adc
adc
lea
pusha
jne
cmp
jae
cmp
inc
pop
js
in
outsb
es
push
insb
daa
and
add
lock
pop
imul
imul
sbbb
push
and
jmp
std
or
rorl
aaa
pop
mov
sbb
pop
es
nop
add
mov
das
sbb
movsl
push
add
push
add
add
xor
push
stos
adc
cmp
dec
add
into
jne
dec
xchg
icebp
mov
or
xor
shrb
repz
dec
and
add
imul
or
inc
movsb
outsl
inc
rcrb
mov
xor
stc
clts
inc
aaa
sub
inc
je
mov
dec
jmp
mov
jl
push
or
push
sbbl
mov
mov
add
push
jmp
push
rcl
or
pop
cmp
adc
or
adc
dec
pop
je
or
and
or
add
and
cmp
cmpsl
add
mov
xor
push
pop
add
add
sqrtps
xorb
ja
inc
lea
mov
enter
add
jne
push
movsl
and
outsl
jmp
push
dec
pop
into
dec
mov
iret
aaa
lea
sub
dec
cmpsl
push
shlb
push
add
pop
popa
inc
adc
push
loop
cld
sbb
cs
cmpsl
cmp
and
or
sbb
mov
mov
adc
sub
mov
push
mov
xor
cmp
cwtl
lahf
lods
push
mov
jae
shll
sub
xchg
push
aam
in
stos
or
xor
dec
fadds
push
push
push
adc
push
sbb
add
sub
adc
pop
clc
pop
inc
pop
mov
scas
inc
pushf
pop
out
jne
sar
dec
popa
pop
dec
jg
cld
mov
add
add
jmp
dec
sub
mov
stos
idiv
cld
adc
fs
fidivs
xor
pusha
es
es
pushl
lods
in
rolb
dec
and
jno
mov
sbb
roll
cwtl
inc
and
shrl
xlat
and
add
adcb
push
jecxz
dec
sbb
pop
mov
push
add
xchg
push
insl
arpl
mov
insb
add
push
popa
ret
add
sbb
adc
sbb
cmp
adc
xor
jo
ja
sbb
pop
scas
jns
mov
xor
pop
loopne
inc
mov
dec
sub
mov
fwait
mov
dec
pop
adc
cmp
arpl
sub
and
adc
pop
mov
sub
pusha
sub
sarl
or
xor
into
cmpb
test
dec
adc
loop
mov
mov
inc
dec
xchg
out
or
dec
pop
push
stos
popa
pop
lea
jle
pop
loope
inc
dec
adc
or
xor
and
movsl
mov
mov
leave
adc
or
and
sub
push
fisubl
push
loopne
cs
ret
pop
aam
jne
mov
nop
jns
push
in
movb
mov
sbb
push
shrl
daa
pop
push
dec
stos
scas
xchg
pop
inc
cmpsb
fmull
add
mov
xchg
repz
out
push
cmpl
xchg
jecxz
stos
xchg
xchg
in
data16
hlt
scas
fldenv
xchg
data16
and
sbb
mov
cltd
adc
jmp
add
mov
hlt
pushf
xchg
sub
mov
rorl
xor
add
jg
je
jne
push
lea
and
jo
or
push
sbb
push
and
xor
negl
leave
xor
lret
stos
test
aam
sar
sbbl
lea
cmpb
inc
cmp
pop
pop
jne
push
add
adc
lock
movb
push
push
jbe
imul
pop
jl
pop
je
push
push
adc
push
clc
addl
mov
inc
fdivl
mov
ficoml
cmp
cltd
sbb
sahf
mov
int
sar
aam
cmp
push
test
insl
mov
ret
xor
add
hlt
insb
pop
push
push
decb
jne
cmp
or
cmpsl
push
sti
or
jnp
add
mov
out
popa
movsl
mov
test
hlt
sub
pusha
loope
adc
mov
dec
or
paddsw
jbe
adc
jmp
dec
jno
mov
repz
repnz
mov
jg
pop
fwait
xor
xchg
xchg
mov
ja
pop
add
jno
add
pop
mov
fwait
je
nop
xor
and
jmp
cmp
jne
xor
add
lock
lret
out
stos
push
mov
push
lods
into
jg
ss
cmovb
xchg
cmpsb
fwait
push
bnd
or
testb
leave
dec
inc
adc
lock
mov
sub
mov
shll
fistl
xor
dec
sub
fnstsw
es
cltd
sti
movsl
decb
testb
mov
xor
test
test
icebp
adc
or
fisttpl
inc
adc
lcall
push
add
push
or
loope
push
cmp
cmp
fcoms
push
fdivl
adc
pop
cmp
test
adc
shrb
arpl
pop
jecxz,pt
mov
xor
sbb
mov
inc
inc
inc
add
sub
call
mov
jmp
lods
std
xchg
mov
xor
mov
push
lea
iret
mov
mov
mov
and
out
or
xchg
rorl
xchg
xchg
and
loopne
and
push
addb
andl
mov
add
push
jo
enter
lods
mov
enter
or
add
sub
xor
lods
fsubl
xchg
js
test
or
jge
mov
lods
xchg
iret
cmpsb
push
shrb
in
jl
test
pop
or
mov
jge
jg
mov
push
cmpsl
dec
cmp
seto
cwtl
adc
push
push
hlt
test
fs
xchg
sbb
jmp
dec
fstl
cmp
js
dec
mov
scas
push
sub
jg
mov
sbb
cmp
xchg
fimuls
or
cmpsl
mov
out
xor
ss
movsb
cmp
mov
sbbl
or
inc
add
fdivrl
push
add
mov
or
enter
lret
mov
mov
add
push
call
and
dec
sbb
inc
cli
outsl
mov
cmpl
sbb
imul
jecxz
xchg
or
js
cmp
ss
and
add
cwtl
mov
or
clc
mov
jnp
adc
in
mov
cmp
mov
lret
cmpsl
int3
test
jle
jmp
mov
and
fisubrs
sub
mov
ljmp
repnz
xor
insl
and
adc
push
mov
lcall
cs
and
pop
in
in
and
push
jecxz
pusha
sub
leave
sbb
call
push
lock
mov
add
icebp
jb
test
and
pop
push
inc
inc
insb
mov
add
mov
dec
push
mov
sub
repz
in
pusha
pop
pop
out
ss
cmp
je
jmp
and
icebp
sub
popa
outsb
call
add
jle
mov
push
sbb
inc
xchg
mov
jb
dec
and
shlb
sbb
inc
adc
pop
jo
jp
sub
add
mov
push
push
inc
add
je
call
pop
and
or
adc
pop
jmp
in
ja
or
push
rcl
pop
dec
jmp
dec
cmp
mov
add
or
aam
hlt
and
push
outsb
inc
enter
mov
jle
pop
xorb
lods
pop
add
mov
data16
faddl
in
rclb
aas
mov
xor
ljmp
mov
sbb
jg
scas
xor
push
mov
int
shr
cld
push
inc
lock
xchg
out
sbbl
jnp
pushf
mov
inc
ljmp
cmp
stos
push
loopne
push
mov
dec
add
addr16
lcall
or
inc
mov
xor
subl
je
mov
loopne
mov
xor
sub
scas
add
or
lea
mov
jo
rorl
cwtl
call
xor
dec
jb
dec
call
add
sahf
mov
pop
add
push
hlt
cli
pop
or
insl
adc
fsubl
das
lock
lret
and
loop
inc
sbb
add
cmpl
and
das
loope
sub
xchg
rorl
decb
es
push
sub
push
mov
cmp
mov
dec
add
inc
or
mov
cwtl
xchg
cmpsb
pushf
sub
scas
lahf
or
add
sahf
sarb
xchg
icebp
arpl
mov
jbe
push
ss
pop
pop
test
adc
add
mov
fs
push
repz
loopne
push
les
push
adc
nop
add
or
pop
ret
rol
popf
data16
stos
sub
int3
fisttpll
or
push
rorl
add
inc
dec
shr
and
jbe
dec
ret
cmp
je
push
push
fdivs
pushl
push
aam
jne
notl
xchg
adc
push
xor
inc
loopne
cmp
add
decb
mov
push
pop
push
loopne
or
add
pop
mov
cmp
xchg
out
push
sbb
jge
mov
bound
add
mov
pop
inc
push
rclb
jne
or
jmp
cmp
pop
adc
push
pop
cmp
push
fadds
push
in
mov
sub
push
fcompl
loop
cld
jl
xchg
jo
push
mov
xchg
push
pusha
pop
or
jge
pop
shrd
sbb
adc
imulb
js
inc
mov
je
pop
cmp
and
or
jmp
adc
add
sbb
jne
andl
mov
mov
adc
xor
xchg
jbe
sbb
dec
dec
scas
faddl
xchg
adc
loope
mov
in
dec
jl
fstl
cmpsb
xchg
cs
mov
lods
fidivl
xor
push
mov
xchg
rol
mov
fdivs
ret
dec
js
mov
inc
push
or
push
pusha
add
push
add
test
je
cmp
jbe
mov
dec
or
lds
adc
sub
jp
adc
je
cmp
fimull
push
lea
aaa
dec
adc
shrb
lea
pop
inc
adc
andb
ret
stc
pushf
movsb
jg
jle
add
push
push
mov
test
lea
push
mov
xchg
cmp
xor
je
lock
jne
push
and
inc
lret
mov
mov
mov
mov
mov
lahf
cli
cmp
mov
scas
jb
push
adc
jae
pusha
dec
or
and
or
jo
inc
loop
insb
add
rorl
mov
sbb
aaa
push
inc
lahf
inc
les
push
mov
jge
lock
cmp
jg
mov
sahf
ja
sub
sbb
push
cltd
movsl
mov
dec
xchg
out
inc
faddl
cli
jg
push
cmp
sbb
lods
rcll
jmp
push
cwtl
sub
js
push
mov
push
shr
pop
sub
in
mov
xchg
pop
inc
pushf
or
pop
paddsb
xchg
sbb
outsb
lods
mov
sbb
dec
push
aad
adcl
sarb
inc
add
and
je
push
add
dec
adc
popf
mov
fisttpll
add
add
lock
sub
scas
add
adc
add
fstpl
ds
xchg
cmp
and
aam
insb
add
dec
es
pop
sub
stos
pusha
push
mov
ret
push
cmp
mov
mov
sub
or
pop
pusha
cmp
dec
and
dec
add
iret
push
xor
jmp
push
lock
adc
pop
dec
xchg
popf
jmp
mov
mov
push
add
push
jg
mov
inc
push
fidivrl
sbb
or
cmpsb
lods
adc
pop
imul
movb
negl
adc
push
mov
je
pop
xor
adc
insl
jne
add
push
stc
repnz
jae
arpl
push
xchg
out
push
je
inc
or
sti
repnz
insb
jne
or
cmp
push
push
in
sub
sub
inc
adc
cmp
push
and
and
mov
add
or
pop
mov
cmc
cs
mov
insb
add
pop
mov
sub
or
or
pop
dec
dec
imul
push
or
nop
popa
mov
movsl
cmp
mov
and
pop
xchg
aaa
dec
fadd
add
in
inc
cmpsb
paddusb
adc
sub
ja
ss
mov
and
push
or
jmp
addl
jl
inc
adc
and
xchg
je
test
adc
sub
inc
loopne
lods
outsb
lcall
sbb
push
loopne
xor
sub
fst
cmpb
xor
and
pop
rcll
push
test
jae
mov
mov
add
aad
sbb
scas
inc
adc
pop
and
or
dec
loopne
adc
add
hlt
loopne
pop
outsb
add
in
sub
jl
mov
push
pop
push
ljmp
dec
add
sti
xchg
inc
push
or
adc
rclb
shr
or
dec
cs
dec
add
pop
sub
sbb
or
sub
dec
mov
jbe
mov
and
adc
shll
add
cmp
pusha
xor
shll
push
test
js
mov
aas
xchg
fsubr
mov
mov
pop
xchg
sar
or
popfw
dec
cmpsl
cmp
imul
fwait
inc
mov
scas
sub
mov
add
rcrb
lods
pop
fcmovb
stos
gs
sahf
jbe
adc
fidivs
xor
es
pusha
mov
jmp
and
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
add
dec
notb
ret
addl
shlb
sbb
sbb
sbb
adc
ljmp
call
jne
cld
cmp
jne
push
sbb
lods
pop
push
xor
test
dec
pcmpeqw
sbb
adc
dec
add
je
xor
mov
add
sub
fildl
dec
adc
scas
mov
jae
jmp
cmp
sbb
push
jne
inc
rol
sbb
ror
test
or
xor
mov
in
pushf
cli
push
ja
mov
add
mov
jb
mov
add
push
lea
dec
dec
ror
jo
loope
or
xchg
sbb
jbe
mov
out
xor
fadds
add
cmp
push
shl
dec
mov
or
jp
add
add
push
rol
ljmp
mov
mov
outsb
nop
and
test
xchg
fistps
lea
add
push
sub
mov
jne
adc
add
and
notb
sub
out
test
addl
fdivrs
xor
adc
test
jb
je
sbb
or
or
or
stc
push
mov
and
frstor
out
add
loopne
fmul
iret
cmp
cltd
mov
push
stc
les
sbb
out
inc
xchg
out
fnop
movsl
sti
dec
sub
mov
stc
push
adc
or
pop
scas
mov
stc
xchg
clc
push
stc
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
fldcw
sub
sbb
lods
push
rorb
xor
je
movsl
mov
jno
inc
testb
or
adc
rclb
nop
iret
push
xchg
jns
jns
sbb
inc
mov
orl
clc
xchg
mov
movsl
cmp
dec
mov
jg
in
ljmp
insb
cmpsb
scas
or
jo
cwtl
ror
jecxz
xchg
sbb
std
or
imul
mov
sbb
pop
dec
or
pop
jnp
mov
es
dec
adc
call
arpl
inc
push
adc
cwtl
sub
mov
repz
aam
push
js
andb
je
enter
mov
mov
cmpsb
push
aad
push
or
xchg
add
mov
sbb
daa
stos
pusha
push
mov
xor
int
jo
addr16
lret
leave
and
inc
fcoml
or
movsl
push
jecxz
xor
or
jo
mov
neg
mov
and
adc
sub
sbb
lods
shr
cmp
nop
gs
je
inc
mov
sbb
pusha
insb
insb
push
push
les
arpl
dec
test
push
add
xchg
xchg
jo
mov
je
cmp
je
mulb
inc
or
cmp
insb
and
iret
je
xor
jl
je
xchg
push
push
lock
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
fcoml
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
adc
rorl
jmp
out
lods
in
jle
push
push
adc
stos
adc
sbb
ret
stc
sbb
rcr
xor
push
mov
ja
dec
ljmp
add
push
mov
mov
pusha
mov
cmpps
pop
mov
pop
mov
daa
mov
xor
or
push
leave
inc
dec
dec
popf
andl
push
mov
pop
jl
testb
ljmp
call
cmp
fildl
dec
xlat
test
and
sbb
insl
outsl
pop
das
and
adc
push
add
adc
jns
out
scas
sub
sub
adc
add
push
push
jge
pop
sbb
xchg
or
out
sbb
inc
mov
cs
mov
pop
popa
push
jno
adc
cli
aas
jne
inc
push
xor
loop
fdivl
jbe
mov
stos
or
xchg
mov
cwtl
jp
inc
fidivrs
inc
movsb
mov
test
sub
pop
loopne
je
in
xchg
sbb
add
pusha
aas
outsl
add
and
dec
push
lea
inc
cmp
push
pop
cwtl
push
or
add
lea
rolb
push
lret
push
or
rcrb
sbb
movzbl
adc
pushf
rorl
mov
or
and
outsb
adc
out
in
pop
pop
lods
or
test
lock
roll
mov
fs
dec
pop
push
in
dec
pop
cs
adc
and
adc
in
xchg
xchg
sbb
hlt
insb
pop
push
push
push
adc
ja
pop
filds
fwait
loop
inc
std
mov
mov
out
push
pop
cmp
je
push
rclb
sbb
xchg
rclb
dec
je
lods
out
inc
sbb
pop
loopne
enter
add
imul
sbb
hlt
and
sbb
jg
fucom
pop
adc
sbb
test
xchg
lcall
sbb
pusha
arpl
sbb
ljmp
loopne
xchg
adc
imul
nop
add
pop
xchg
pop
pop
or
push
into
jecxz
lock
addl
cmp
ds
aam
push
out
in
sbb
clc
aad
punpcklbw
push
test
movsb
and
lea
cltd
or
je
pop
sub
inc
adc
or
js
jecxz
loope
mov
movsb
jbe
push
cmp
lret
adc
jmp
dec
scas
add
out
daa
pusha
popa
sub
sbb
test
add
pop
fisttpll
scas
shlb
sub
mov
push
pavgb
jo
lret
addr16
pushf
cmp
sbb
inc
incl
cs
xchg
arpl
cmp
stc
push
add
mov
je
mov
cmp
sbb
adc
pop
sbb
push
out
jo
push
cli
loop
jns
push
pushf
sahf
cmp
push
movups
pop
xchg
popa
cwtl
bound
shrb
int3
mov
jae
mov
jmp
inc
test
jb
add
mov
enter
popf
push
stos
aaa
fiaddl
and
mov
xchg
push
aas
sbb
pop
or
test
jmp
cmpsl
daa
jae
mov
addr16
push
out
push
je
or
das
or
mov
add
adc
push
stos
sub
packsswb
push
ffreep
inc
imul
mov
movsb
cs
movsl
jno
clc
push
add
push
addr16
and
stc
sahf
mov
cmc
xor
mov
jp
jp
cmp
adc
and
repz
sub
pusha
pop
mov
addr16
adc
pop
stos
add
ret
push
cmp
sbb
imul
push
inc
inc
cmp
inc
nop
stos
or
punpckhbw
jmp
xor
mov
in
dec
xchg
push
pusha
add
push
or
pusha
sub
mov
jecxz
hlt
shlb
inc
ret
notb
sub
adc
and
loope,pn
test
inc
mov
call
or
xor
mov
pop
cmp
rdmsr
shrb
stc
dec
stos
pop
mov
jo
inc
mov
leave
or
call
add
lods
pop
inc
hlt
sub
shrb
dec
imul
pop
mov
je
loope
mov
add
push
lret
or
xor
mov
fcoml
mov
lea
push
mov
and
adc
inc
sub
fimuls
or
lcall
push
lret
mov
sub
int
push
and
int3
ficomps
cwtl
fbld
out
in
inc
or
ret
filds
cs
in
neg
sbb
xchg
or
mov
or
push
pop
xor
and
loope
mov
xchg
mov
cmpl
outsl
inc
int3
jp
add
aad
xor
add
and
packssdw
or
inc
xor
dec
inc
lcall
insb
xor
sahf
pop
inc
xchg
xor
lock
daa
inc
jne
lock
int
mov
jl
inc
push
jmp
add
fiaddl
lods
push
pop
mov
std
sub
cwtl
loop
lea
and
lahf
loopne
test
cmc
ss
push
test
test
cmp
fdivl
mov
xor
ret
mov
pop
pop
pop
xchg
imulb
xor
xchg
jl
xor
jge
adc
add
mov
jl
andl
mov
insl
cmp
dec
pop
sbb
and
or
cltd
add
lock
bound
inc
lret
mov
cmp
lds
push
dec
xor
pop
sahf
push
xchg
icebp
dec
cwtl
sbb
adc
sub
xor
es
cmp
dec
and
enter
stos
test
ret
inc
mov
push
or
mov
mov
push
ds
pushf
push
mov
inc
dec
cmp
sbb
xor
loope
out
jl
or
xchg
pusha
movsb
push
je
adc
push
in
mov
xor
jmp
add
movl
fdiv
jno
inc
adc
push
inc
push
inc
repnz
inc
push
add
jp
fcoms
test
addl
pop
pop
xchg
pop
dec
push
fbstp
mul
or
pop
pushf
push
or
sbb
lods
mov
mov
pusha
sub
in
jp
stc
pop
or
mov
cmp
cmp
cmp
cmc
mov
imul
ret
add
pop
testb
or
mov
dec
jl
xchg
sbbb
and
push
pusha
call
and
xor
xchg
pop
pop
add
inc
mov
xor
fsubl
dec
pop
cmp
mov
std
ss
mov
push
xor
dec
out
inc
jnp
scas
push
mov
ds
outsl
nop
sbb
enter
xor
add
fisttpll
mov
and
cmp
rorb
subb
in
fadds
inc
add
jb
lahf
aaa
add
aad
push
mov
or
jmp
aad
push
inc
mov
mov
test
pushf
pop
aas
je
push
je
sahf
xor
rol
jle
jge
filds
sbb
lods
cmp
jne
and
adc
sub
or
imul
cmp
cmpsb
push
nop
or
and
add
mov
enter
les
aam
cld
add
inc
xchg
mov
mov
ret
shlb
pushf
lcallw
inc
xlat
adc
aad
stos
adc
mov
mov
fcoms
adc
lock
inc
push
mov
or
pop
and
fimuls
stos
fildl
adcb
xchg
mov
sub
dec
repnz
popf
mov
lods
subl
push
pusha
lock
lea
push
mov
dec
mov
cltd
negl
push
xchg
mov
cltd
insl
dec
ret
sub
dec
clc
loop
stos
mov
mov
dec
cwtl
inc
bound
pop
loop
xor
enter
pop
add
or
inc
xlat
adc
aas
pushf
push
frstor
pop
xor
add
sub
push
xchg
push
in
or
cwtl
gs
push
in
sub
push
lods
and
xchg
outsl
push
addl
adc
imul
mov
je
push
std
dec
jnp
gs
push
jns
movsb
adc
jns
add
daa
add
or
inc
rcl
movsb
lds
or
sub
pusha
out
leave
or
adc
inc
lock
add
xchg
xor
cld
and
leave
sbb
test
push
push
and
dec
cmpsl
ret
ds
rclb
aaa
mov
inc
dec
pop
push
cli
adc
mov
add
cli
or
je
mov
jbe
ret
fildll
xor
cmp
push
sub
fdivrl
ret
mov
mov
push
push
push
or
in
jo
jae
into
sub
test
or
les
dec
insb
xor
lahf
ljmp
insb
mull
or
mov
loope
mov
pop
add
sbb
mov
aam
adc
loope
mov
xchg
sbb
cmp
cmc
add
dec
clc
or
in
xchg
jge
adc
sbb
add
sbb
cmp
cmp
pop
jp
sub
out
mov
or
mov
push
pop
int3
and
insb
mov
lea
pop
push
ret
es
push
mov
and
das
add
mov
rcl
sahf
push
pop
and
aas
jb
lods
jbe
call
mov
cmpl
iret
fiadds
push
cld
rol
push
jle
sar
inc
in
jge
movl
sub
add
test
mov
adc
cmp
shlb
inc
sahf
loope
xchg
mov
pusha
insb
std
mov
jg
mov
decb
adc
movsl
icebp
push
jbe
out
lret
aam
mov
ret
xchg
scas
movsl
sbb
rcrl
loop
mov
ljmp
push
push
je
push
lock
push
push
cmpsl
jl
pop
adc
inc
hlt
imul
xchg
jne
lcall
mov
mov
push
divb
je
lcall
mov
mov
and
dec
push
add
mov
or
push
sbb
xor
adc
xor
mov
and
sbb
mov
or
pop
xchg
cld
jecxz
adc
push
sbb
shr
scas
addl
insb
mov
adc
fdivrp
push
jne
sbb
cmpb
ud0
leave
adc
adc
inc
inc
add
pop
testb
movb
dec
imul
sbb
je
mov
sub
ss
fs
cmp
ss
movsb
add
or
adc
inc
inc
mov
cmp
rol
pop
loope
xchg
xor
mov
pop
mov
mov
clc
addr16
lds
jle
leave
orl
aaa
jbe
push
inc
orb
ss
sub
sbb
sbb
jmp
movl
pop
mov
sub
rclb
and
ss
out
xor
sbb
or
xorl
add
mov
loope
je
xor
lcall
push
iret
stos
mov
push
aas
mov
enter
vcmplesd
aad
shrb
leave
sub
cmp
sub
sbb
dec
cmp
dec
dec
mov
sbb
popf
dec
test
jmp
cmp
lea
bound
mov
inc
daa
in
imul
lds
mov
inc
push
call
and
adc
fsubs
or
mov
fs
nop
push
arpl
mov
add
pusha
or
adc
mov
loopne
inc
pusha
bound
xor
jg
testb
mov
mov
jecxz
mov
dec
fsubrl
pop
and
sub
pop
mov
lret
dec
in
loopne
pop
testl
lock
jmp
inc
and
popa
xchg
iret
sub
mov
or
mov
movsb
out
aaa
dec
or
cmc
cmpb
push
xchg
adc
inc
lret
and
sbb
sti
sub
jmp
or
popa
and
dec
mov
outsb
aam
test
arpl
mov
push
mov
add
in
pushf
xorl
ffreep
lock
js
add
or
lds
enter
jle
xor
or
sbb
xor
dec
lret
aad
and
mov
cmpsb
add
bound
or
imul
xchg
ret
inc
push
push
xchg
xor
push
push
data16
cld
jl
movl
pop
pop
push
push
or
push
pushf
fldenv
int
mov
xor
mov
insl
lea
sbb
dec
pusha
je
dec
or
push
inc
push
jg
add
mov
sbb
xor
cmpl
mov
push
shlb
pusha
and
addl
mov
push
xor
pop
lods
push
sub
lods
xlat
add
push
xchg
rcr
test
and
sub
lret
adc
adc
add
cmp
xchg
lds
xchg
xor
dec
jae
push
cmp
push
push
or
push
ret
stos
inc
inc
add
lahf
ss
add
mov
or
push
xor
loope
xor
pop
inc
adc
or
cmpsb
pop
dec
mov
pop
dec
pop
sbb
cmp
jbe
cld
push
xorl
dec
pop
add
xor
shl
add
ret
divb
push
xorb
imul
test
adcb
and
and
mov
add
stos
xchg
cmpsb
mov
out
ret
outsl
fadd
mov
mov
sti
dec
ja
je
or
je
or
sub
sub
mov
scas
cmp
add
insl
inc
hlt
xchg
push
ret
rorb
or
add
dec
test
sbb
lcall
cs
jl
jmp
cmp
adc
xor
cmpsb
rclb
flds
add
lds
sub
ret
pusha
xchg
jo
dec
pushf
jbe
call
fdivrs
adc
pop
cmp
mov
ret
and
mov
andb
sbb
rorl
std
jbe
inc
gs
add
je
or
push
add
jb
rorl
adc
dec
enter
mov
pusha
roll
nop
or
and
rolb
add
lret
add
sbb
clc
aaa
adc
imul
dec
je
sub
add
sub
push
fnstsw
ljmp
pop
pusha
data16
inc
nop
adc
in
mov
push
add
mov
in
cmpsb
jnp
daa
or
push
adc
xor
rorb
xor
sti
cmpsb
int3
and
lret
dec
aad
push
out
lcall
mov
adc
xor
movl
sbb
adc
push
lea
mov
enter
mov
movsl
adc
nop
aam
es
ss
punpcklwd
mov
xchg
xor
rol
push
mov
add
sbb
adc
fdivrl
notl
xor
mov
sbb
das
or
addr16
sub
mov
inc
push
inc
push
jo
test
in
inc
dec
xor
push
enter
dec
hlt
call
movsb
stos
add
sbb
loopne
sub
cmp
fcomp
repnz
iret
test
push
dec
or
fsubl
imul
rcll
xor
push
push
cmp
jne
getsec
push
cld
sti
in
mov
xchg
inc
lcall
mov
jmp
adcb
add
add
sub
mov
fwait
int
les
leave
and
pop
jecxz
adc
enter
xchg
and
ds
cmpsb
mov
leave
ret
imul
in
leave
add
repz
xor
lret
push
call
sahf
fistl
push
adc
inc
fisttpl
adc
fnstcw
and
dec
inc
jnp
inc
movsl
pop
xchg
push
ljmp
loopne
mov
ja
dec
shl
xchg
stos
cmp
in
jb
dec
popf
jmp
dec
xor
cmp
dec
fdivrl
push
repnz
inc
or
in
ret
sbb
fisttps
adcb
aas
imul
movsb
add
insl
push
movsb
jmp
push
fs
jl
xor
pop
xchg
and
mov
adc
sti
rorl
mov
adc
pusha
repz
lcall
push
xor
push
adc
mov
jns
das
xchg
fcmovu
cmp
loope
inc
jmp
add
mov
fisubs
pop
dec
fisubl
mov
sbb
sbb
push
push
gs
or
mov
push
jecxz
loopne
test
sbb
shr
mov
ret
out
jo
sbb
xchg
mov
or
adc
sbb
dec
js
dec
mov
shl
shl
test
cmp
sub
les
int3
lcall
pop
adc
mov
ret
xor
push
jp
fimuls
xor
push
jge
cmp
fwait
int
or
outsb
imul
movl
mov
add
mov
fmul
out
cmp
lahf
dec
in
pop
adc
lret
sub
inc
je
test
test
cwtl
mov
outsb
mov
fcoms
dec
ss
movsl
sub
in
daa
cmp
iret
cmpsb
push
push
and
rcll
add
add
fcomps
xor
inc
aam
popf
cld
cs
xchg
subb
inc
add
or
std
mov
adc
adc
push
sbb
adc
and
xchg
xor
lahf
das
or
add
mov
add
loop
mov
mov
mov
push
sub
add
push
mov
push
int
mov
jg
xor
xor
or
dec
sub
pop
cld
ljmp
inc
mov
clc
mov
sbb
incl
and
pop
decl
xchg
sbb
inc
or
xchg
xchg
inc
inc
push
mov
pushf
addr16
jno
rol
jecxz
and
sbb
into
pop
leave
push
or
lea
pop
ret
xor
adc
cmp
sbb
ja
neg
sbb
add
testb
push
mov
test
add
or
nopl
js
push
inc
cmpb
sbb
adc
iret
fsub
push
clc
or
orl
push
cmp
adc
push
pop
mov
shrb
jp
je,pt
mov
sarb
call
or
mov
call
scas
cmpb
gs
add
lahf
mov
inc
out
xchg
inc
call
mov
adc
inc
cmp
or
pop
jg
sub
lfs
sub
push
xchg
dec
and
cs
test
add
sbb
cmpl
je
push
sbb
adc
and
lock
imul
cmp
lcall
sbb
inc
adc
add
inc
das
fiadds
sub
lods
test
inc
adc
movsb
mov
push
xor
enter
loopne
addr16
jl
xlat
je
out
dec
pop
dec
ret
lock
sub
or
add
pop
js
outsb
sarb
sbb
xchg
out
mov
test
sbb
inc
cmpsb
sbb
push
fisubl
rcrb
jmp
inc
push
mov
in
ret
add
test
mov
cmp
sbb
pop
mov
pop
push
in
mov
pop
mov
in
add
cmp
jnp
xor
sbb
mov
and
sbb
jge
in
aaa
outsb
lcall
xor
adc
and
mov
cmp
test
xorb
adc
icebp
pop
lods
dec
aam
gs
sbb
cmp
mov
mov
mov
lea
inc
in
test
push
dec
in
testl
jge
sbb
inc
shl
dec
shlb
adc
aas
push
out
out
pop
fidivs
sbb
rcl
int
and
xchg
in
aaa
stos
pop
xor
rcrl
jne
jbe
or
inc
mov
lods
je
into
hlt
je
pop
loop
sbb
mov
sbb
push
or
sbb
pushw
cmpsb
rcrl
push
adcb
jnp
push
cmp
mov
push
fs
orl
cmp
push
cmp
push
cs
xchg
ljmp
push
rol
in
dec
bound
repz
fwait
add
in
sti
fildl
add
and
outsb
jg
dec
inc
dec
dec
dec
hlt
add
pop
je
or
push
add
test
cmp
cwtl
push
sbb
sub
shlb
push
test
push
mov
lret
fs
sbb
mov
mov
sbb
imul
mov
dec
and
add
inc
sahf
inc
sub
dec
fcom
add
xor
add
pop
and
hlt
movsl
cmc
mov
add
dec
push
add
hlt
adc
and
cltd
mov
movsl
adc
lea
fcoms
adc
push
nop
and
out
popa
rcr
push
pop
inc
fisttps
mov
push
sbb
mov
cmp
addr16
mov
or
dec
and
add
mov
repz
daa
push
pusha
xor
add
sbb
mov
fsubr
dec
or
je
dec
bnd
lods
into
imul
adc
add
inc
sbb
push
add
mov
xor
adc
sbb
enter
cmc
push
push
out
flds
and
xor
add
xchg
xchg
sub
jl
sbb
movsb
sbb
mov
sub
lea
aas
xor
push
jmp
jbe
push
jne
add
cmp
push
sub
repnz
push
adc
mov
pop
nop
nop
cmp
iret
sub
mov
push
push
jb
cmp
enter
mov
sbb
inc
dec
addb
and
mov
jns
pop
inc
fwait
leave
repz
xchg
in
push
xor
cltd
jl
mov
inc
hlt
les
mov
ret
add
nop
dec
dec
in
stc
cld
cmp
adc
or
ret
jl
scas
xchg
push
dec
jmp
push
sbb
fs
ds
jg
push
mov
js
mov
aad
insl
sti
mov
add
mov
push
lcall
jecxz
sub
int
ret
or
nop
enter
add
sub
jne
push
dec
xchg
inc
cmp
enter
dec
jo
mov
out
aam
or
sbbb
adc
push
and
movsb
sbbb
cmpb
adc
adc
and
scas
je
mov
xor
or
rol
cmpsl
or
nop
fidivl
xor
mov
add
mov
xchg
ds
mov
cmp
fists
sub
and
xor
rclb
mov
pop
adc
inc
xchg
ds
dec
xchg
in
daa
roll
sarb
jge
jl
push
push
in
pop
and
xor
or
push
inc
or
inc
or
add
aam
dec
push
mov
add
sub
pop
and
push
jl
cmp
incl
std
jnp
jae
mov
or
imull
shl
pop
cmp
jne
jbe
sbbb
adc
pop
dec
push
dec
xor
inc
mov
mov
add
mov
adc
rcrb
cld
or
jmp
push
sti
xor
loopne
pop
push
xor
jmp
in
mov
or
dec
sub
or
rcrb
movsb
or
lock
push
and
or
jmp
or
loopne
sbb
jge
adc
outsl
add
xchg
sysexit
aam
sbb
mov
fisubs
fisubl
das
jmp
nop
fiadds
push
or
push
cli
or
jle
jecxz
shr
mov
addr16
mov
pop
mov
jle
cwtl
clc
in
inc
popl
and
ja
push
inc
jecxz
lret
add
mov
lods
imul
dec
mov
leave
mov
gs
mov
cmpb
push
sub
cmp
inc
es
mov
lods
add
mov
nop
push
pop
ja
mov
dec
cmp
xor
gs
mov
test
adc
and
inc
es
imul
mov
xchg
xor
lock
jns
rorb
stos
add
test
test
inc
adc
rclb
and
adc
popa
pop
push
test
mov
push
cmp
jbe
roll
push
leave
push
xor
mov
xchg
in
lret
push
add
pop
push
xor
fwait
pusha
insl
and
outsb
xor
fadds
xor
lock
lock
push
add
add
movsb
inc
mov
cld
ljmp
push
inc
dec
roll
push
and
xchg
orl
loope
int
add
or
push
dec
stc
add
test
push
push
push
hlt
out
jae
cmp
jo
add
mov
cmp
out
or
lock
push
and
int
cmp
push
cltd
fistpl
leave
inc
sub
jbe
push
sub
test
xchg
sahf
add
lea
in
push
int
push
push
xorb
scas
and
out
dec
mov
scas
sbb
sub
lods
inc
scas
cmp
or
or
cmp
add
sbb
out
add
enter
push
movsl
add
cmp
mov
inc
dec
aaa
cmp
add
ja
push
inc
pop
add
dec
repnz
pop
orb
mov
pop
adc
ds
rorb
je
push
repnz
push
cmp
cli
les
or
mov
mov
inc
inc
adc
sub
lret
and
add
sbb
xor
sub
sub
pop
add
mov
jne
andl
out
loop
jo
ja
push
pop
push
mov
xchg
cs
dec
sbb
and
lock
sbb
out
inc
mov
into
movsl
or
or
add
sub
stos
jb
pop
push
orl
dec
leave
mov
push
sbb
rcrb
inc
mov
or
and
push
pop
add
loope
or
data16
dec
xor
arpl
ds
sbb
jno
adc
sub
xchg
inc
fldenv
out
mov
cmp
pop
push
adc
adc
lds
adc
cwtl
lock
ret
sysret
sbb
lcall
scas
push
push
xor
imul
int3
sbb
lea
inc
sbb
mov
sbb
or
push
pop
daa
lret
scas
test
mov
jo
add
push
fisubs
or
fcoml
in
rclb
pusha
xchg
mov
and
cmp
xchg
mov
pop
push
or
js
lock
test
mov
dec
faddl
mov
js
push
shrl
xor
and
shl
xchg
lds
adc
push
push
test
push
jo
pop
mov
xchg
inc
sbb
lcall
jp
jbe
pop
mov
andl
sub
push
sbbl
sbbb
sbb
popf
sbb
adc
daa
jns
dec
sbb
adc
xchg
adc
lahf
cmpb
lret
push
adc
or
test
sbb
loope
or
xor
fs
mov
xchg
cld
push
adc
add
lcall
lahf
jg
addl
inc
and
push
push
sub
add
aaa
andps
sbb
or
or
addl
adc
loope
xor
or
lock
addb
stos
mov
or
sbb
int3
ds
cltd
std
ja
js
imul
daa
in
pop
rolb
ljmp
cld
lock
call
stos
cld
sub
mov
mov
insb
movsb
inc
xchg
mov
shrb
inc
and
sbb
adc
inc
xor
push
push
xchg
lods
in
setle
inc
inc
cmp
jb
shrd
outsl
and
or
js
mov
mov
jmp
rorb
cwtl
or
cmp
movsb
dec
push
js
mov
add
mov
or
xor
icebp
neg
fs
mov
push
sbb
lods
sbb
mov
mov
xor
lcall
rcrl
and
sbbl
sbb
mov
inc
inc
inc
sbb
in
mov
inc
push
pop
xchg
sti
jl
test
xor
imul
dec
pusha
jg
shrb
or
sub
mov
sbb
enter
sbb
loopne
mov
adc
test
jle
dec
add
jmp
sbb
aas
mov
cmp
push
sbb
out
add
push
es
pop
push
shll
push
xor
testb
lahf
or
sahf
sub
inc
or
push
cli
test
mov
jo
xor
cmp
inc
aam
call
pop
addb
push
sub
cmp
or
add
jge,pt
sbb
add
lods
push
addb
movsl
push
or
cld
sub
repz
inc
add
decl
jo
es
jno
stos
xlat
pop
je
aaa
xor
push
lods
shlb
enter
xor
ljmp
xchg
rclb
push
cmc
jb
and
sub
icebp
pop
fsubrp
xor
or
adc
mov
xor
sti
add
pushf
cmc
imul
or
ss
movb
add
sbb
push
rorb
add
lret
aam
push
cmpsb
stc
loopne
mov
jo
arpl
sahf
aas
jno
sub
aas
bound
add
cltd
movsl
or
lods
mov
lea
ret
add
ret
je
sub
cmp
cmp
repnz
ficoms
sub
add
xor
test
adc
adc
pop
xchg
mov
stos
pop
jp
dec
sub
mov
fisttpll
cmp
sub
fildll
adc
sbb
pop
popa
mov
movsl
sar
rep
bound
imul
jmp
sub
outsl
add
pushl
insl
shlb
add
xor
loope
sbb
cmpl
fidivrl
and
jne
imul
shll
fildll
inc
push
push
mov
push
or
mov
inc
push
loopne
adc
push
insb
lahf
test
data16
inc
sub
popa
sub
ret
push
mov
stos
lock
inc
mov
sbb
xor
mov
jbe
inc
xchg
push
ret
ljmp
addr16
cmp
hlt
arpl
in
xor
test
and
xor
adc
sbb
mov
fs
pop
and
fcmovnbe
in
hlt
add
mov
ljmp
mov
ss
stos
jle
adc
xor
xchg
popa
pop
fistpll
faddl
and
mov
sub
cld
sub
inc
dec
pop
and
xor
xor
inc
repnz
inc
call
pop
mov
jp
aas
adc
clc
pop
test
cmp
mov
add
lret
loop
add
xchg
vmread
pop
adc
push
push
xchg
push
xchg
je
insl
call
stos
mov
xchg
adc
add
xchg
mov
mov
xchg
pusha
pusha
adc
sarb
mov
push
or
mov
mov
mov
inc
and
inc
clc
and
faddl
jo
ljmp
mov
fs
dec
adc
mov
push
fdivrl
lods
adc
mov
adc
arpl
and
add
mov
insl
es
sbb
js
dec
loopne
push
xor
sbb
and
sarb
mov
jne
aam
decb
pusha
orb
addb
push
jge
sbb
pop
mov
or
add
jno
inc
xor
pop
push
pop
mov
aad
jmp
jge
je
mov
and
andb
testl
xor
add
or
jo
mov
push
stos
out
push
icebp
cmp
ret
xor
ret
decl
pop
xorb
adc
or
stos
cmpb
xchg
cmp
jo
dec
mov
hlt
adc
or
in
dec
mov
jae
popa
test
pop
sahf
add
pop
adcb
mov
jle
xor
sbb
add
inc
sbb
adc
dec
dec
push
int3
adc
add
call
sub
es
test
into
andl
jle
testb
ss
setns
push
movsl
add
xchg
push
mov
mov
sbb
push
loope
insl
push
adc
sbb
add
shrl
or
aas
in
pop
cmp
cmp
dec
adc
push
ret
jmp
or
call
cmp
je
inc
adc
jg
dec
mov
sub
sar
cmp
jbe
hlt
push
incb
add
jmp
ret
add
fadd
lret
dec
inc
icebp
push
in
inc
ret
pop
sub
js
fnstsw
jecxz
fdivrl
xchg
push
repz
mov
inc
ljmp
sbb
les
pop
pop
and
add
inc
push
insl
pop
sarb
fiadds
roll
or
and
ja
lea
mov
rolb
xchg
fiaddl
aam
aaa
add
sub
mov
adc
jl
pop
pop
mov
mov
and
jne
pop
pusha
lea
notb
xor
add
cmp
testb
adc
pushf
and
pop
imul
add
shll
inc
or
or
xchg
iret
pop
js
jo
adc
pop
or
je
sbbl
mov
add
pop
aam
rcll
lds
and
xor
push
lret
shl
push
mov
and
or
jmp
dec
ss
cmc
push
in
push
arpl
dec
add
jne
sub
outsb
sar
ljmp
cmp
add
call
jae
jb
pushl
or
loopne
mov
pop
or
jmp
xor
jae
and
es
mov
loop
adc
add
dec
add
icebp
mov
mov
or
not
pop
lods
adc
les
out
insl
sub
mov
sub
cltd
in
sub
adc
dec
int
adc
inc
and
xor
test
pop
imul
mov
lods
shrl
stc
cmp
enter
pop
ret
xor
dec
and
cmp
repnz
push
clc
xchg
subl
mov
mov
or
leave
mov
dec
sub
arpl
cmp
add
ja
jbe
sub
daa
add
mov
fstpt
fisubl
or
add
sbb
adc
or
outsb
sub
fldt
sbb
or
push
sbb
sbb
cmp
mov
sbbb
and
daa
seto
mwait
push
dec
das
pushf
xchg
fistps
addb
or
push
sbb
shl
mov
outsl
jne
jl
in
push
xor
and
cwtl
add
mov
nop
pop
jecxz
test
push
adc
inc
push
nop
fwait
mov
push
out
push
outsl
lods
je
xchg
insb
xor
add
dec
sub
jae
mov
mov
out
lods
add
mov
add
fisubrs
inc
add
fs
add
in
andb
in
cmp
add
in
in
sub
cmpb
daa
inc
sbbb
sub
sbbb
mov
sbb
or
jmp
and
fsubrs
cmp
pop
push
sbb
inc
push
addr16
scas
and
sub
xor
or
xor
xor
sub
mov
mov
xchg
jmp
ret
mov
mov
jb
fadd
cmp
or
sub
pusha
push
xchg
lea
push
add
and
or
mov
adc
icebp
pop
ficoms
in
adc
stos
dec
jle
sbb
mov
fildl
or
adc
int3
clc
or
inc
adc
movsl
add
sbbb
sub
push
or
sahf
call
inc
popf
pop
adc
lea
add
out
or
add
lock
icebp
mov
pop
mov
xor
push
or
pop
pop
inc
mov
inc
and
leave
and
push
or
xchg
adc
push
and
and
push
inc
push
adc
into
xor
or
fisttpll
idivl
cld
push
dec
mov
mov
xchg
and
and
mov
lret
je
adc
push
lock
pinsrw
ss
orb
push
ficoml
or
push
pop
sti
xor
dec
sti
add
and
xchg
shlb
push
and
lock
sub
push
and
rcl
stc
test
or
add
rorb
add
and
add
push
inc
or
es
lods
shrb
das
pop
xlat
jnp
rorl
and
adc
movsb
mov
mov
lods
push
inc
repz
andb
rcll
sbb
stc
adc
ja
es
pop
shll
testb
mov
add
outsl
add
dec
pop
orb
cs
sbb
sbb
xchg
xchg
je
aam
mov
mov
sarl
sub
sti
loope
sbb
xor
and
mov
mov
mov
jg
in
sub
xor
push
mov
fdivs
mov
or
loop
cmp
add
jmp
cmc
pop
adc
lock
and
sbb
adc
clc
sbb
jno
push
jmp
icebp
lcall
into
ret
mov
out
push
add
push
inc
jle
bound
xchg
nop
sbb
and
iret
flds
inc
adc
jo
ror
arpl
add
call
lods
ds
sub
lods
rorl
jle
xorb
adcl
inc
insb
pusha
or
xchg
or
inc
fimuls
add
xchg
add
rcrl
dec
jp
out
cmp
jmp
add
subl
adc
mov
or
and
push
std
or
fbstp
enter
xchg
fsubrl
xor
or
mov
and
sbb
add
or
or
or
and
push
or
cmpsb
les
xchg
insb
invd
sub
pop
push
mov
mov
adc
push
mov
sbb
and
or
push
sub
orps
push
pop
test
xor
push
inc
push
inc
pushf
or
inc
call
fstpt
push
lock
out
inc
xchg
cmp
pop
push
push
aas
adc
test
lahf
stos
and
popl
cltd
lock
lcall
and
sub
adcb
or
mov
insl
movsl
and
lock
add
jmp
xchg
xlat
or
cmpl
sbb
mov
lcall
inc
push
push
mov
cmp
jl
cmp
jle
lcall
jp
or
pop
or
push
adc
cmpsb
pop
push
mov
cmpsb
cmp
pop
cmp
jge
mov
pop
and
cld
out
sbb
xor
je
cmp
je
fisubs
xchg
mov
int3
not
adc
mov
pop
movsl
sbb
inc
test
icebp
nop
sub
lock
ret
scas
fnstsw
dec
inc
add
mov
pop
out
add
jge
or
dec
mov
cmp
jl
es
js
icebp
mov
mov
jl
and
or
in
add
push
cmp
pushl
add
adc
ror
adc
mov
mov
mov
dec
lock
adc
push
lock
sarl
lods
popf
mov
or
loopne
pop
or
mov
mov
jmp
sbb
or
mov
jns
inc
sub
xor
sub
or
ss
loopne
mov
add
clc
add
mov
pusha
movsl
adc
push
cld
sub
push
pop
and
jl
pop
xor
pop
or
out
push
or
jbe
mov
xchg
addl
xor
add
sbb
or
aad
or
mov
lea
addb
or
xor
dec
cld
cmp
and
xor
adc
fcoml
inc
sub
in
es
jo
sub
or
pop
jl
pop
in
jmp
cmp
pushf
or
lret
mov
popf
xlat
inc
cmp
inc
das
adc
sub
sbb
inc
xchg
jnp
add
pop
adc
cmp
or
push
pop
pop
and
pusha
fs
or
idivl
js
and
cmp
lea
outsl
mov
mov
lea
sub
sub
xor
cmp
sub
icebp
dec
and
aad
push
out
inc
cmove
insl
xchg
push
mov
insb
adc
pusha
out
jne
jo
or
xchg
in
push
adc
push
roll
adc
stos
or
fstl
adc
sbb
add
add
sub
jno
push
inc
pop
test
fldl
mov
and
pop
mov
add
jne
mov
xchg
insb
push
xchg
ret
sbbb
inc
shr
push
sbb
aam
xchg
je
mov
sbb
cmp
and
outsl
fwait
sbb
jo
les
je
add
mov
xor
mov
and
or
pop
xchg
sbb
jle
loope
jl
por
inc
and
jb
pop
and
or
sbb
or
ds
pop
loopne
stc
js
xchg
inc
jl
ds
fucomi
mov
aam
xor
inc
dec
inc
sub
lret
inc
xor
push
cwtl
or
or
and
and
das
lods
mov
add
icebp
daa
inc
sub
test
or
or
push
fs
dec
jnp
and
mov
mov
mov
loopne
rcl
lea
ret
add
push
xchg
fcompl
bound
mov
mov
loope
dec
jle
cmpl
sbb
leave
or
push
mov
mov
clc
and
daa
je
mov
mov
cmp
and
mov
pop
push
pop
push
testb
aam
subl
ret
mov
std
inc
adc
inc
rcrb
inc
mov
and
sahf
or
mov
dec
loope
jle
dec
add
and
lret
sbb
push
jl
sbb
dec
add
mov
jne
push
repnz
and
mov
or
adc
add
orl
cmp
insb
addr16
xor
or
sub
test
and
inc
xor
mov
fsubrl
fs
mov
sbb
in
daa
add
mov
xorb
inc
dec
inc
sbb
cwtl
arpl
aad
nop
fisttpll
subb
mov
sbb
jge
xor
xor
adc
addl
jle
in
add
jle
fldl
push
push
cwtl
testl
sub
inc
xor
adc
add
aam
sbb
sub
lret
jb
sti
push
or
pop
push
push
mov
rorl
fmuls
sub
out
popa
pop
dec
je
push
cmp
jl
xchg
rcr
clc
push
hlt
jg
mov
movsl
push
and
adc
sbb
mov
pop
call
ds
push
aad
or
orps
stos
push
mov
xor
inc
pop
pop
or
sub
shrl
repz
or
sub
lea
mov
add
adc
mov
push
test
and
test
cmp
or
xor
jns
add
imul
clc
cli
push
adc
add
sub
dec
jns
mov
mov
add
data16
mov
or
aad
add
or
add
outsl
or
add
inc
push
inc
gs
push
ret
sbb
push
mov
dec
dec
sahf
stos
sub
popf
lret
pop
mov
xchg
ja
scas
roll
jns
add
sbb
add
or
fsubl
xor
lret
and
push
or
jmp
cmp
cmp
lods
jmp
popf
mov
jecxz
xchg
stos
inc
sub
rolb
push
addb
outsb
lret
mov
cmp
or
mov
add
lods
lret
sub
adc
and
push
push
mov
xchg
push
push
adc
imul
jmp
in
in
pop
pop
cmpb
cmp
pushl
adc
xchg
in
sbb
push
inc
aaa
test
sbb
mov
nop
rolb
divb
jecxz
ret
fsubl
sub
or
mov
add
dec
add
pop
rcrb
movl
test
nop
pop
mull
test
subb
aad
mov
stos
and
loopne,pt
push
fdivrs
roll
je
frstor
fwait
push
fstpl
dec
in
orb
push
cmp
insl
adc
adc
jne
push
divb
jns
sahf
lahf
or
jne
or
jne
or
add
cld
xchg
cmp
hlt
fldz
lret
andl
movb
push
adc
cmp
sahf
pop
dec
jb
mov
mov
mov
push
test
loope
test
and
out
mov
dec
mov
fstpt
lret
lea
fisttpll
inc
mov
mov
into
mov
mov
push
or
xchg
xor
fwait
dec
loop
adc
cmp
cmpsl
mov
fstps
add
dec
jg
add
and
jp
push
sub
adc
sbb
cmc
aam
inc
jo
fsubl
add
push
add
aam
mov
sbb
syscall
inc
mov
loopne
push
jmp
pmaxub
in
sbb
lock
sbb
pop
inc
sbb
sub
insl
add
jecxz
and
ja
dec
or
fmull
push
push
orb
cltd
push
mov
sbb
mov
orl
adc
push
nop
orb
xor
lods
dec
adc
mov
lock
ret
int
mov
testl
add
push
cmp
inc
mov
test
int3
cmc
push
push
dec
jo
ja
or
in
wrmsr
push
repnz
call
sub
or
scas
xchg
push
outsb
sub
inc
daa
jmp
xor
sub
push
pop
insl
inc
push
rcrb
pop
mov
sub
dec
insl
push
aad
cltd
testb
and
push
pop
dec
pop
push
sub
ja
leave
pop
leave
ljmp
imul
inc
test
int3
test
outsb
sbb
roll
les
ret
inc
lods
pop
into
pop
repnz
mov
or
add
push
and
jno
add
add
and
fnstsw
cmp
add
les
push
imul
movsl
lret
test
sub
fmull
int3
rclb
inc
xchg
or
dec
enter
imul
jno
cwtl
mov
cltd
nop
aaa
xor
loop
xor
push
mov
ss
paddusw
imul
cwtl
mov
add
inc
stos
enter
sbb
and
insl
rclb
imul
stos
add
cltd
mov
and
adc
pop
and
add
mov
adc
out
inc
xor
xor
sbb
jb
xor
push
adc
stos
leave
sbb
addl
add
and
ret
mov
or
mov
push
int
lods
mov
and
mov
bound
add
insb
lret
sbb
rcrb
shr
cmp
in
jmp
ljmp
stos
loope
repnz
add
xor
je
popa
cmp
mov
les
ss
mov
jl
and
cmc
int3
push
inc
xor
push
add
sbb
sub
imul
test
pop
mov
lar
add
add
psllq
dec
iret
pandn
aad
add
push
cli
js
fstl
sbb
mov
pop
fsubl
adc
je
adc
xchg
mov
sbb
xlat
rolb
and
sub
imul
mov
xchg
push
xor
push
addr16
add
xchg
fmull
jne
insl
test
push
and
pop
jnp
mov
lock
or
xchg
mov
push
and
add
call
pop
xor
xchg
dec
xor
sub
stos
mov
add
ret
fldl
pminub
mov
pop
out
shll
xor
or
add
aad
cwtl
or
in
mov
pop
loope
mov
inc
jmp
push
dec
ss
dec
stc
and
pop
test
xor
fsts
adc
add
push
mov
xchg
xchg
in
aam
add
mov
call
xor
or
icebp
push
dec
cmp
push
mov
adc
mov
cmp
jg
in
addl
lcall
data16
xor
lret
cltd
mov
inc
gs
fwait
or
int3
and
adcl
mov
lods
sbb
inc
addr16
dec
cmc
jecxz
lea
push
insl
loop
cmp
dec
in
sub
and
pop
sbb
xor
or
xor
loop
cltd
cli
mov
jae
adc
and
imul
sbb
or
std
scas
xchg
add
xchg
push
aad
cmp
test
addl
cmp
xor
sbb
push
jp
fs
outsb
pusha
mov
lea
outsb
push
pop
xor
or
pusha
fdivl
int
add
xor
aad
shrl
clc
jmp
adcb
scas
stc
dec
or
or
pushf
lds
imul
push
fdiv
clc
sbb
pop
push
mov
adc
enter
push
adc
out
push
shrl
xchg
mov
pop
xorl
das
push
in
jl
lds
push
mov
loope
mov
add
stc
and
test
push
shlb
or
push
add
test
sbb
xchg
pop
frstor
push
push
leave
movsl
sub
movsl
add
lods
adc
sti
popf
cltd
mov
and
mov
dec
pusha
jno
add
inc
and
inc
or
inc
rclb
movsl
or
dec
and
xor
dec
xchg
mov
pop
popf
negl
pop
das
adc
mov
and
shll
mov
movsb
push
push
push
test
ja
stos
push
cmpsb
push
add
cmp
popa
aaa
push
xor
add
sbb
popf
push
stos
or
cmp
inc
cmpsl
popf
repnz
repz
push
push
mov
loop
push
dec
cmp
pop
cmp
lock
lock
dec
pop
xor
pushf
xchg
jle
push
nop
lea
les
mov
insb
cmc
xor
movsb
shlb
nop
sbb
lock
shrb
mov
addl
sub
dec
xor
psrad
fwait
adc
shll
add
lods
andl
push
inc
repz
push
ret
add
or
jle
push
imul
sub
pop
shll
adc
fdivl
mov
push
mov
add
xchg
or
and
dec
and
sbb
test
js
fs
inc
insb
cmp
sbb
pop
sub
in
jmp
push
pop
bound
js
icebp
stos
and
lahf
inc
or
roll
add
xchg
test
sti
pushl
in
xchg
cmpsl
out
adc
adc
aam
add
sbb
and
xorl
and
testl
lahf
shll
sub
and
bound
orl
xlat
test
mov
and
popf
cmc
outsb
add
xchg
loope
add
clc
roll
dec
add
ret
dec
dec
dec
pop
and
jle
gs
aad
inc
inc
adc
lret
mov
push
adc
and
fistpll
test
rorb
addl
dec
pop
fmuls
fs
mov
lods
fwait
pop
mov
test
stos
leave
push
dec
or
es
mov
addr16
cmp
orl
lds
sub
jecxz
icebp
call
inc
sbb
mov
and
fsubs
pop
mov
pop
add
sub
add
rol
mov
adcb
aas
pop
imul
sub
aaa
and
jne
jno
inc
inc
rdpmc
pusha
push
mov
stc
push
sub
hlt
dec
sub
cmp
into
movsb
add
clc
lret
es
adc
and
add
xchg
sub
mov
or
lods
mov
test
add
rol
add
popa
pusha
les
jnp
sbb
scas
sbb
pop
mov
adc
or
cli
dec
and
sti
sahf
and
adc
xorb
push
inc
nop
ja
and
aas
add
inc
add
pop
pop
pusha
addr16
aas
inc
push
aas
cwtl
xchg
push
and
push
push
mov
push
stc
sub
cmp
leave
jmp
sbb
ret
mov
sub
xor
shld
push
lock
popa
inc
in
decl
inc
sub
jae
pushl
jecxz
jo
ret
cmp
leave
inc
les
lcall
outsl
add
test
push
pop
add
push
mov
test
xor
xor
pop
add
push
cmp
add
xchg
stos
fwait
repz
add
cmp
mov
dec
sub
imul
cmp
pusha
inc
push
or
mov
repnz
or
add
mov
dec
push
in
inc
mov
dec
nop
push
cmp
es
push
pushf
jmp
pop
xor
pusha
push
or
sbb
addb
jo
inc
loopne
test
or
adc
shrl
in
or
adc
xor
imul
xor
and
inc
or
or
xchg
shlb
add
sbb
pop
orl
push
test
mov
or
test
xchg
sbb
adc
jo
jmp
daa
outsb
popf
adc
inc
sbb
and
cltd
ror
pop
cmc
sbb
or
pop
or
push
add
mov
add
das
push
adc
in
pusha
pop
gs
cmp
add
jmp
or
and
and
imul
and
or
inc
je
sub
inc
or
insl
and
and
fldl
test
lea
negl
jbe
adc
inc
push
loope
cmpl
imul
add
and
xor
fwait
insb
test
and
addb
inc
push
xchg
push
popa
loop
push
pop
lods
and
pop
cli
cli
pop
sub
subb
insl
and
mov
insb
imul
enter
mov
dec
and
inc
stos
pusha
cmpsb
mov
test
or
lods
jb
mov
dec
test
mov
sbb
mov
or
outsl
sbb
movsb
push
enter
ret
jne
addr16
mov
cmp
sub
in
pop
sbb
xor
in
out
and
add
out
mov
or
arpl
xchg
leave
cld
jnp
dec
jp
ljmp
leave
addr16
cmp
mov
and
cmp
adc
adc
pop
rcrb
icebp
sub
je
loop
iret
loopne
add
adc
cld
add
jo
pop
mov
add
push
cmpsl
adcl
into
rclb
cmp
adc
or
pop
std
popl
jo
and
jmp
inc
loope
fsubrl
sbb
in
ljmp
push
inc
mov
lcall
aas
movsb
push
rcrl
dec
aas
mov
dec
cs
xor
mov
cmp
hlt
ss
xchg
lock
jno
dec
inc
insb
pop
jno
add
adc
mov
push
adc
inc
push
or
dec
mov
test
sub
xor
push
push
hlt
in
add
movsb
shrb
or
js
mov
inc
jecxz
mov
mov
xor
or
ja
push
mov
stc
std
push
push
cmp
xchg
and
in
cmp
or
adc
out
xlat
mov
fwait
sub
xor
push
movsl
pop
sub
mov
inc
mulb
test
and
push
pop
hlt
loope
push
xor
mov
or
sub
dec
cmp
xchg
repz
cmp
jae
insl
and
or
mov
add
jp
mov
push
aaa
adc
sbb
lret
mov
popa
add
mov
arpl
jo
inc
dec
loopne
inc
push
xor
cmpsb
outsl
adc
jbe
inc
cmp
cmp
ja
mov
test
sbb
ss
orl
lock
iret
sbb
jmp
imul
cli
xchg
add
mov
cmp
icebp
je
add
loope
cmc
sub
pop
cmp
lock
dec
and
push
pop
shrb
ljmp
std
xchg
inc
fldl
jmp
fldl
popa
and
sbb
add
cmpsb
pusha
loopne
les
adc
add
xor
imul
pop
ret
xor
add
arpl
sub
add
aas
test
mov
insb
and
neg
insl
clc
push
or
and
div
sarb
sbb
in
pop
sbb
pop
fsubrp
xchg
cmp
imul
into
mov
add
clc
cltd
idiv
and
jg
add
cs
stos
insb
and
xor
push
shlb
and
sbb
jg
subl
aaa
es
and
dec
sbb
jbe
sbb
xchg
es
inc
pusha
sbb
or
push
cmp
sub
pop
push
xor
imul
insl
sub
push
mov
insb
bound
sbb
or
int3
push
pop
imul
dec
sub
jge
jb
jb
sub
int
and
js,pt
movsl
push
add
push
out
lods
hlt
mov
xor
lahf
sub
fimuls
out
in
insb
nop
ja
or
or
lahf
cld
cmp
push
es
adc
or
sbb
xor
fimuls
push
mov
xchg
mov
negl
and
xor
int3
add
shl
frstor
ja
adc
in
adc
adc
xchg
adc
lock
xor
in
sub
sub
add
cmpl
push
mov
inc
xor
jl
nop
jns
xor
mov
lret
pop
push
jecxz
adc
mov
xchg
inc
fdivp
adc
adc
adc
jo
loopne
add
mov
or
dec
add
out
fmuls
xor
push
push
mov
xor
xchg
xor
in
sub
sub
mov
nop
icebp
lahf
mov
jns
xor
cli
adc
enter
les
push
sub
xor
and
cmpl
or
mov
in
xchg
arpl
sbb
push
enter
or
and
and
push
xchg
sub
ror
sbb
ss
sbb
sbbl
and
ss
push
je
add
test
cltd
shll
iret
xchg
mov
rcrb
ds
jmp
roll
loop
add
adc
es
dec
pop
push
out
sahf
jnp
popf
aad
idivl
sarl
sbb
cmp
iret
repz
outsb
jg
mov
mov
aam
testb
out
lcall
dec
sahf
out
insl
jle
mov
flds
mov
je
inc
cmp
cmp
cmp
dec
pop
cmpsl
xor
pop
pop
xchg
or
lods
jecxz
push
and
shll
and
and
setbe
mov
push
mov
adc
add
enter
int
in
in
push
pop
add
adc
push
mov
inc
inc
popf
addr16
sbbl
inc
cmp
sbb
cmpsb
cs
cmp
pop
push
xchg
xor
arpl
mov
stos
xchg
sarl
sbb
dec
push
inc
leave
mov
js
cmp
ret
xchg
xor
cmp
jb
sub
adc
clc
add
leave
stc
or
mov
mov
pop
cmp
sbb
cmp
arpl
push
orl
adc
mov
mov
add
bound
push
mov
sbb
es
xchg
lret
bound
dec
lds
popa
in
pusha
add
rcrb
lods
or
roll
push
xchg
stos
adc
jmp
and
or
stos
xor
xchg
and
sub
aad
add
mov
mov
jae
cmp
xor
inc
mov
cs
les
xor
mov
and
inc
loop
xchg
aam
push
daa
subl
ljmp
enter
aaa
ffreep
mov
pop
arpl
pop
push
mov
call
in
add
mov
inc
insb
mov
aaa
cld
or
pop
ss
je
xchg
add
and
test
popl
pop
vpcmpgtb
push
test
popf
int
or
add
sub
cmp
repnz
out
lock
arpl
sbb
mov
int3
adc
xchg
test
sub
xlat
sbb
or
xchg
push
enter
and
mov
in
or
fcoms
seto
sub
lea
and
pusha
push
or
cmp
add
cmp
cmp
or
add
push
sbb
loopne
adc
or
pop
aaa
push
push
stc
jmp
ret
mov
push
xor
pop
xor
push
add
xchg
and
andb
call
fdivs
push
in
adc
xchg
sbb
pusha
mov
add
inc
sti
outsb
fwait
add
or
outsb
or
pop
shl
xchg
adc
sbb
les
int
pop
push
cmp
adc
dec
lcall
jo
jge
add
leave
lock
stos
sbb
lds
andl
shll
xor
in
add
leave
shlb
pop
adc
leave
sbb
ret
xchg
adcb
adc
cmpsl
jo
popa
movl
push
sbb
adc
or
add
push
mov
adc
add
adc
or
stos
sub
inc
sub
icebp
inc
or
je
add
or
aaa
test
xchg
xor
mov
xchg
fldt
fildl
loopne
std
or
xor
mov
mov
push
ret
test
and
sbb
mov
nop
pop
push
xchg
fnstenv
and
add
stos
mov
scas
call
jecxz
and
fsubl
add
adc
jmp
stos
andb
push
add
fs
cmp
push
int
jl
sbb
sbb
iret
mov
add
sub
mov
dec
rcll
repz
pop
daa
std
push
or
nop
adc
mov
sub
mov
mov
cmp
leave
aam
leave
or
push
test
dec
push
arpl
ret
inc
sub
scas
or
test
and
test
jb
jge
cmp
cs
lret
mov
xchg
add
jae
mov
dec
push
add
jb
sbbb
inc
pop
push
leave
pop
and
push
or
or
fistpl
roll
xor
lods
lea
mov
sbbl
xor
fmuls
xchg
mov
inc
ret
sbbl
ret
movsb
sub
xchg
leave
dec
dec
add
and
xchg
or
lds
xchg
or
lods
mov
pop
inc
add
shrl
adc
inc
xor
xchg
sub
dec
add
stos
pusha
jo
add
or
mov
mov
mov
add
jge
fs
or
and
movsb
push
sbb
in
in
cmp
xor
sbb
es
add
add
rclb
and
ret
aaa
lods
incl
scas
xor
push
mov
cmpl
cmp
movsl
or
adc
mov
push
cmp
aad
sbb
pop
push
dec
inc
sub
adc
aam
cmp
sub
mov
jne
inc
and
adc
aaa
addb
or
pop
sub
ja
jge
lds
add
je
pop
add
cmp
out
inc
add
or
add
scas
decb
dec
or
dec
push
repnz
sub
or
mov
lods
push
ficoml
pop
adc
push
add
jo
shlb
int3
rolb
sub
out
je
data16
dec
ds
popf
sub
sbb
fs
push
push
mov
xor
push
cmp
add
mov
rcrl
jl
cmp
cmp
jbe
sub
xor
push
sub
jne
fldl
mov
or
or
sub
inc
add
mov
pop
jecxz
add
fidivs
push
or
and
jp
add
cmpsb
adcl
add
and
xchg
push
adc
dec
rol
sub
test
shlb
sub
sbb
pop
xor
sahf
movsl
xor
sbb
adc
push
int
push
xor
mov
pop
popl
stos
add
xor
jp
jl
stos
dec
xchg
lods
aas
call
or
cmp
adcb
lret
std
ret
stos
or
nop/reserved
adcb
pusha
and
shr
mov
xchg
pop
shrb
pop
loopne
xchg
xchg
cmc
xchg
movsb
push
push
pop
out
add
push
arpl
imul
xor
push
mov
xlat
jmp
loopne
sub
add
fistpl
adc
sbb
test
mov
sub
nop
jae
adc
xchg
cli
lock
iret
sub
pop
popf
fsubrl
je
push
and
cmp
arpl
inc
add
jno
xlat
add
int
sub
fwait
sbbb
add
imul
sbb
cltd
out
xor
sub
sbb
and
mov
add
movsb
dec
orb
pusha
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
ljmp
int
popa
jp
adc
cmp
cmp
je
mov
mov
adc
mov
inc
jmp
movb
mov
push
push
add
fs
cltd
idiv
push
mov
pop
pop
or
in
ljmp
adc
aas
aad
das
in
xchg
mov
cmp
cmp
insl
jnp
push
std
adc
mov
addb
sbb
mov
test
or
xchg
pop
ret
pop
lds
or
dec
call
sub
in
in
xchg
out
xchg
jl
hlt
incb
test
or
add
cmp
push
sub
in
dec
fsubl
daa
cmp
cmp
adc
nop
rolb
add
cmp
aaa
ds
push
jge
ljmp
hlt
mov
aas
out
and
cmc
sahf
pop
push
sub
jne
movsl
mov
xchg
shll
mov
dec
jle
addr16
jmp
or
mov
hlt
cwtl
jp
rol
scas
mov
mov
popf
sub
add
imul
cmp
mov
adc
adc
mov
jb
lcall
aam
movsb
out
push
psllw
xchg
movsl
xor
cli
lock
pushf
sub
in
adc
mov
rorl
js
and
in
push
ss
sub
or
scas
je
xchg
push
mov
jo
push
dec
cs
push
xlat
add
fdiv
jns
push
push
pusha
imul
ss
jbe
lret
inc
mov
repz
pop
push
push
divb
fs
cltd
les
sbb
xor
sbb
jae
mov
sbb
popf
loopne
jp
dec
out
push
out
sbb
pop
in
fsubr
nop
stc
pop
sbb
fsubrs
adc
ja
imul
aam
pop
jo
sbb
aam
cmp
int3
or
mov
aam
sarb
movsb
mov
pop
sbb
and
inc
loopne
sbb
test
and
nop
jle
data16
or
outsl
jno
and
in
mov
sbb
addb
and
pop
jb
dec
push
daa
dec
xor
add
push
test
xchg
mov
pop
mov
dec
dec
add
dec
jb
xchg
inc
mov
sbbl
mov
push
sbb
sbbb
inc
rcrl
js
mov
add
jo
dec
xor
mov
adc
fisubl
mov
push
je
mov
fucomp
and
mov
sbb
sub
enter
xchg
lret
pop
mov
sub
and
imul
mov
inc
dec
or
clc
xor
push
add
aam
lret
fldt
xor
inc
ret
cmp
xor
int3
jge
push
jne
add
in
and
mov
test
fldz
mov
fsubs
push
jecxz
inc
movsb
fmull
push
ret
add
xchg
xor
jecxz
add
xchg
mov
push
mov
mov
push
sbb
sbb
push
pop
cmp
sbbl
or
or
in
cld
stc
shl
dec
js
mov
push
push
test
in
sub
push
dec
add
shr
and
dec
mov
pushf
cmp
xchg
push
arpl
in
push
adc
and
lock
mov
push
insl
or
orl
mov
push
push
add
test
das
test
stos
xorl
dec
icebp
jle
xor
xor
decl
or
dec
mov
push
aad
call
mov
jmp
shr
push
xchg
popa
rcrb
inc
cmp
mov
mov
and
les
adc
movsb
jne
or
movsb
mov
add
add
jmp
jo
push
sbb
jae
jb
cwtl
inc
push
pop
sbb
sub
cs
andb
dec
or
cmp
pop
sbb
int
sub
fsubrs
sub
ds
js
push
into
ss
sub
dec
adc
fldenv
popa
loopne
insl
sbb
pop
enter
sub
sbb
shlb
mov
push
test
mov
adc
mov
cmp
scas
mov
dec
pop
push
push
das
mov
and
jmp
push
mov
sub
shlb
pop
imul
test
std
and
push
xchg
cmp
test
hlt
xor
push
fst
imul
push
sbb
sbb
push
je
jno
repz
fldenv
inc
mov
xchg
push
in
and
sub
push
mov
lock
add
inc
out
sub
pop
adc
dec
lcall
pop
inc
bound
adc
insl
lods
push
es
pop
aam
jb
lea
ret
rorb
add
xchg
clc
and
ja
bound
std
add
or
mov
das
jge
movsl
xor
adc
movsbl
and
addl
add
jg
mov
hlt
jmp
inc
inc
jmp
aam
adc
jae
add
cld
orl
movsl
pop
rolb
push
fistpl
jmp
or
imul
cmovle
aam
xchg
inc
int3
push
pop
pop
pop
pusha
xchg
inc
repnz
mov
cmpsl
mov
push
xchg
or
shlb
xchg
aas
mov
pop
lods
adc
and
or
sub
jno
fsubl
add
sub
clc
pop
or
cld
cmpb
cmc
sbb
call
mov
imul
sbb
movsl
stc
xor
jl
cli
or
xor
pop
adcl
out
es
add
insl
mov
and
and
imul
or
push
add
jne
test
push
mov
fadd
push
push
push
int3
xlat
jecxz
or
inc
subl
cmp
xor
sti
adc
mov
add
sub
inc
mov
loopne
xor
pop
mov
or
fcoms
int3
popa
adc
or
and
add
push
adc
mov
int3
adc
add
sub
rcl
paddsb
add
xor
xchg
jnp
jge
pop
pop
jb
rcrb
cmp
gs
adc
fistl
jl
push
outsb
fsubl
push
lds
dec
inc
pop
add
add
popa
or
mov
movsl
popf
xchg
dec
adc
push
mov
jp
xorps
fnsave
sbb
push
repnz
and
add
rcl
cmp
into
sbb
lcall
and
andb
pop
pushf
iret
xorl
xor
in
adc
cmpsl
push
cmp
and
rorb
adc
inc
cmp
pop
dec
jg
stos
in
add
in
adc
test
add
add
and
inc
cmp
lock
add
aam
cmpl
add
fldl
sub
inc
aad
push
stos
and
mov
xchg
jne
ja
mov
pop
test
jmp
daa
iret
push
outsl
mov
test
mov
adc
lods
jp
rorl
cmp
in
xchg
aam
cmp
push
cmp
mov
cmp
xor
ljmp
in
es
movsb
cld
mov
adc
pop
test
sbb
cmp
outsb
add
ret
loope
movups
sbb
imul
and
xchg
nop
pusha
add
add
jnp
in
inc
add
test
add
stc
jle
add
enter
jne
cmp
inc
push
movb
inc
test
test
ror
and
flds
lods
ss
sar
in
cmp
jne
ret
sub
addb
addr16
rorl
push
xlat
pop
insb
popa
leave
or
xchg
jno
sub
dec
cmp
xor
mov
mov
data16
and
adc
dec
dec
or
add
xchg
mov
or
mov
scas
pop
popa
loopne
test
mov
pusha
aaa
inc
or
jbe
add
jo
push
cs
jnp
jbe
rorb
in
in
mov
lods
loope
into
and
jo
adcl
mov
lock
loopne
sbb
in
pop
scas
nop
adc
push
lods
call
loopne
pop
push
add
ret
call
insb
fsts
movsb
roll
add
fcmovnb
xor
in
and
adc
sti
leave
inc
mov
xchg
lds
je
and
in
cmp
or
dec
lea
cmpsb
out
ret
movsb
dec
pop
cmp
sub
cmp
xchg
and
aaa
das
xchg
aam
xchg
push
dec
js
adcl
or
sub
push
pop
or
add
insl
fsubs
jnp
mov
sbb
fisttps
jle
and
mull
scas
test
pushf
sbb
push
ror
add
rclb
adc
cmp
mov
jo
or
adc
xor
push
loopne
sarl
push
xor
cltd
xor
and
icebp
sub
leave
out
add
fs
mov
lret
and
dec
jg
addr16
out
mov
push
push
push
push
pop
cmp
inc
dec
lea
test
or
or
mov
or
gs
fs
test
out
push
or
loop
and
test
fistpll
or
jne
lods
inc
or
adc
mov
and
cmc
addb
sbb
pop
xor
mov
test
sub
sbb
dec
rorb
sbb
pop
add
jmp
mov
jne
js
jecxz
xchg
aas
fisttpll
push
add
xchg
push
imul
sub
in
clc
push
hlt
inc
push
push
dec
mov
daa
push
stos
adc
jo
add
ret
mov
je
cmp
jne
mov
mov
or
ljmp
pop
xchg
xor
adc
rcrl
inc
adc
imul
cmpsl
insl
mov
loope
mov
fnstsw
mov
push
add
push
cltd
jb
cli
add
rcrl
sbb
mov
add
mov
sti
dec
pop
mov
cmp
test
cmp
in
pop
adc
sbb
push
cmc
dec
ret
or
jge
out
or
outsb
dec
gs
sub
xor
cmp
jno
push
out
jae
mov
call
rcrl
push
lods
decl
testb
stos
and
int3
adc
cs
mov
mov
jg
clc
imul
popa
jge
cmpsl
mov
mov
loope
mov
imul
jecxz
xorb
sub
sub
add
bound
xchg
push
fimull
loopne
xchg
jns
es
mov
push
pushf
stos
xchg
mov
movsb
push
scas
sbb
movsl
mov
ljmp
push
sbb
pusha
bound
mov
dec
imul
jp
rorl
fwait
xchg
adc
enter
jmp
pop
add
sbb
imul
pop
clc
aam
ficomps
data16
add
add
cwtl
mov
stos
sub
add
xchg
hlt
xor
add
loope
push
push
mov
dec
sub
out
cmp
insb
or
cmp
in
sbb
mov
movsl
inc
add
inc
je
jo
daa
cmp
push
rclb
xchg
and
jl
cmp
cmp
push
xor
or
add
fnstsw
add
test
dec
xor
std
mov
je
inc
jo
or
add
pusha
sub
int
push
sbb
and
ds
and
orb
add
inc
add
inc
or
inc
inc
pop
mov
sbb
sub
cmp
pop
or
test
cmp
shr
test
xchg
addl
loopne
pop
or
sbb
pop
rcrl
push
shll
fs
cmp
xor
xor
add
sub
dec
nop
orb
inc
dec
jmp
loopnew
inc
in
iret
movl
leave
or
sbb
ss
lock
pop
push
sbb
cmpb
imul
loope
pop
sbb
test
jmp
mov
jmp
add
push
fbstp
cmp
jle
gs
lea
dec
pop
daa
dec
jp
sub
add
and
nop
and
sbb
jecxz
add
pop
outsb
cmpsl
lods
xchg
xor
rcll
add
scas
sahf
adc
mov
or
add
dec
movsbl
ss
inc
cmp
js
jnp
xchg
pop
cltd
inc
mov
xchg
cltd
adc
and
mov
inc
repnz
mov
insl
lret
in
and
jo
lahf
into
les
or
or
cmpb
adc
mov
inc
out
dec
leave
subb
inc
pop
je
jg
sbb
add
jne
scas
xchg
mov
enter
or
add
xchg
test
shrb
sub
jmp
xor
pop
xchg
and
lds
inc
sub
pop
dec
xchg
cmovo
mov
sub
push
pushf
jmp
test
fisubrs
out
mov
mov
lds
fistpll
mov
in
jns
mov
roll
mov
ja
adc
enter
ret
adc
ret
xor
test
ja
sub
cmp
test
pop
aaa
dec
pop
sbb
sbb
xor
fsubs
sub
lods
add
push
push
push
imul
pusha
sbbb
push
call
ret
ja
cltd
cmp
add
and
sbb
dec
ja
sub
sub
ja
sbb
lea
addr16
add
sub
sbb
and
in
rcll
xorl
or
add
xchg
dec
js
fadds
and
or
adc
xor
push
cmp
push
sub
adc
into
jo
sbb
jno
pusha
sahf
xchg
push
pop
add
dec
daa
lret
je
push
jo
lods
loope
imul
xorb
lods
xchg
fldenv
dec
add
cmp
dec
inc
fadds
xor
inc
in
test
aaa
jmp
add
xchg
adc
ja
add
push
cmp
xchg
or
out
xor
add
and
sub
adc
dec
fs
stos
mov
push
das
shlb
and
or
lahf
adc
mov
fsubrp
cmp
sub
imull
cmp
xor
rorb
sub
or
loop
leave
and
and
adc
lds
push
pop
dec
std
and
pop
sub
pop
cmp
mov
and
icebp
imul
lock
and
add
stos
xor
push
xlat
es
and
mov
lds
cmp
test
or
jno
sub
test
ljmp
sbb
push
push
sub
int
mov
addb
jne
and
mov
xlat
sub
xchg
sub
test
lock
adc
pop
lret
in
sub
add
imul
xor
and
xor
cmp
data16
frstor
add
add
popf
sub
xchg
cmc
pusha
jg
push
loope
push
outsl
mov
popa
mov
call
lods
inc
test
inc
lahf
xchg
dec
dec
add
push
loopne
jo
cmp
inc
loope
xchg
imul
jp
popa
repnz
cmp
mov
add
lea
mov
loop
jnp
je
jge
add
or
jp
sti
and
add
sbb
adcl
stos
icebp
adc
test
pop
movsb
mov
add
jg
inc
mov
pusha
sahf
mov
repnz
imul
loop
sbb
add
add
je
cmp
add
jno
dec
dec
adc
pop
push
andl
push
call
cmpsb
test
dec
sub
jno
pop
ret
pop
or
into
dec
xchg
jne
mov
lock
add
xor
add
fidivl
popl
or
cwtl
sub
cmp
loopne
pusha
lock
fwait
lds
xchg
mov
dec
dec
and
or
das
add
xchg
mov
cmp
mov
rorb
pop
xor
and
insb
push
dec
in
leave
rolb
xchg
cmp
sarl
dec
or
aaa
incl
adc
fs
mov
push
mov
push
mov
inc
push
lock
test
inc
cmp
inc
jb
pop
pop
ret
sbb
nopl
mov
out
popa
add
sbb
cmpl
xor
pop
ret
ret
mov
scas
jp
adc
xchg
sbb
push
dec
dec
jae
fcmove
mov
cmpsl
pop
adc
push
add
adc
xchg
ja
or
jge
pop
or
jmp
mov
out
jne
scas
push
add
lea
into
lds
or
mov
push
sub
xchg
in
cmp
lock
mov
ds
or
ja
dec
imul
test
adc
cmpl
fdivrl
jbe
in
xchg
sbbb
test
jp
push
pop
cmpl
xor
or
imul
adc
cmp
jb
jmp
xchg
cmp
push
lret
and
xchg
cmpb
push
push
xor
dec
mov
inc
push
ljmp
test
mov
jecxz
in
ret
dec
pop
jb
out
adc
punpcklwd
push
jns
xor
pop
dec
inc
not
pop
mov
in
mov
iret
push
inc
xlat
xchg
push
test
rcrb
sbb
je
cmp
jl
or
popa
jmp
shlb
or
xchg
push
das
dec
add
cltd
std
test
xchg
js
mov
pusha
add
popa
leave
in
or
or
dec
sbb
and
mov
add
jno
dec
fmuls
mov
je
mov
ret
popf
pushf
adc
sbb
adc
ljmp
dec
std
cs
rclb
adc
adc
mov
xor
and
or
mov
test
or
ja
mov
xor
pop
test
ja
stc
xchg
or
xor
push
shlb
pop
call
push
cmp
or
and
pop
add
int3
push
fdivrs
or
inc
cmp
cmp
ss
add
loopne
pop
daa
out
jno
std
je
push
add
sub
ss
in
lods
dec
sar
add
dec
add
out
and
and
jl
jne
int3
shrb
adc
cmpl
pushf
and
sbb
clc
push
jb
mov
inc
sbb
adc
add
xchg
test
mov
xor
lret
test
mov
cmp
lea
mov
pop
out
sbb
xchg
xor
xchg
in
bound
and
jae
or
xchg
push
lret
dec
arpl
mov
sbb
iret
add
and
scas
cmpl
pushl
ret
jg
inc
jmp
popa
fwait
rol
or
push
jno
lea
sub
ret
test
std
mov
add
mov
mov
aad
sbb
or
mov
and
lea
mov
cmp
aam
adc
mov
arpl
cmc
incl
add
xchg
xchg
pop
fsubrl
adc
jo
adc
out
loop
ficoml
jl
sbb
or
or
push
mov
and
and
popf
add
sahf
inc
popa
test
adc
mov
mov
push
stos
push
add
sub
daa
icebp
popf
mov
push
sub
pop
sub
int
sub
leave
mov
add
mov
negl
sub
inc
adc
dec
cmp
arpl
outsl
lret
or
and
add
lret
call
adc
pop
insb
and
push
loope
add
lds
idivb
pushf
ret
push
cmp
jno
leave
dec
push
aaa
aaa
pop
mov
adc
test
xor
xor
dec
adc
and
and
jns
icebp
and
push
adc
or
lret
aas
dec
pop
insb
pushf
and
inc
jno
mov
cmp
js
push
push
mov
push
sbb
push
adc
pop
xor
imul
mov
xor
adc
inc
inc
enter
jge
mov
movsl
push
dec
push
int3
sub
loopne
add
mov
push
test
or
sub
loopne
fwait
rclb
out
push
push
inc
or
or
mov
jp
or
das
daa
mov
test
or
add
sbb
addb
xchg
or
dec
add
xchg
dec
stos
aam
out
decl
repz
xor
push
inc
add
inc
xor
mov
mov
ret
push
shll
mov
push
sbb
fisubl
pusha
pop
mov
add
std
mov
test
add
mov
xchg
jns
mov
xor
push
dec
or
jmp
mov
aaa
jge
stos
pusha
or
sbb
cld
imul
inc
add
test
or
in
in
jmp
dec
movsl
push
ljmp
pop
rol
in
jg
inc
movsl
inc
mov
frstor
push
xorl
mov
aad
sub
daa
dec
jne
ds
lcall
sbb
mov
roll
cmp
adc
mov
pop
jle
icebp
push
in
or
cmp
jbe
cmpl
incb
adc
jne
cmp
jbe
mov
push
test
arpl
jmp
and
sbb
call
mov
jae
or
xor
shll
inc
loope
incb
xchg
push
sbb
cli
lea
adc
jg
cmp
mov
mov
and
pusha
adc
pusha
add
in
jae
xchg
xlat
xchg
loopne
loope
push
in
imul
or
dec
xchg
lcall
mov
pop
xor
push
add
or
sbb
rorb
sub
mov
mov
dec
shll
lods
roll
push
cmp
mul
in
in
int3
add
add
bound
popl
ret
cli
inc
sbb
and
jne
or
and
pusha
mov
xchg
mov
and
push
mov
jge
add
and
add
loopne
mov
divb
mov
jne
xor
or
push
adc
lcall
add
sbb
mov
mov
or
adc
adc
daa
cwtl
pop
or
and
sbb
loopne
lock
push
aam
push
push
xor
add
movl
lock
or
add
mov
shr
in
sahf
iret
add
enter
gs
jmp
inc
divb
adc
andb
and
pushf
push
add
loopne
cmpsb
push
add
lods
xor
nop
or
dec
sub
sbb
mov
call
jnp
adc
out
les
fs
pop
scas
xchg
pop
push
push
sub
inc
imul
aaa
add
inc
and
push
roll
cmp
or
test
aam
shl
push
call
push
sbbl
pop
adc
lods
loope
pop
inc
cs
pop
fs
and
loopne
rep
rorb
cmp
ss
and
pop
add
dec
fmul
xor
push
mov
push
mov
outsl
out
mov
mov
sub
das
mov
test
adc
xchg
mov
cmp
adc
cli
mov
arpl
add
rcl
push
sub
movsb
insl
jmp
lea
mov
mov
cltd
jge
xor
test
cmp
lea
cmp
cmp
inc
jne
dec
imul
add
jmp
dec
ja
je
popa
jnp
adc
pop
dec
mov
js
jmp
or
or
sbb
pop
mov
ret
cli
mov
mov
add
sub
cmpsb
and
aam
sbb
push
test
add
daa
mov
jmp
mov
divl
in
add
cmp
aas
dec
orl
sub
test
es
fnsave
dec
cmp
or
test
dec
add
push
repnz
pop
insb
add
adc
xor
sbb
dec
mov
sbb
pop
jg
push
xchg
pushf
nop
aam
add
sub
stc
sub
pop
sbb
cmp
shrb
pop
jne
cmp
pop
xchg
xor
push
loopne
mov
repnz
push
lods
or
mov
lock
pop
arpl
in
ljmp
push
fidivrl
imulb
dec
insb
rclb
dec
sbb
sbb
inc
jecxz
xchg
cmp
jecxz
adc
mov
inc
pop
rcrl
inc
les
lret
jl
or
outsl
jno
add
push
cmp
sahf
test
xchg
cmpb
or
inc
sbb
imul
mov
not
outsl
cmpl
xor
jp
xor
jmp
dec
loop
dec
and
es
addb
jb
cmp
cmp
fldcw
loop
out
es
mov
or
cmp
xor
or
ljmp
lcall
adc
mov
repz
pop
and
mov
ret
scas
cld
and
and
mov
xchg
lock
cmp
add
ds
std
fimull
add
or
push
push
hlt
stos
pop
out
add
ret
orps
push
sbb
jl
inc
mov
push
sbb
mov
inc
sub
push
push
push
push
push
call
cmp
inc
push
xchg
adcb
and
shrb
dec
xor
adc
cmp
int
or
xchg
js
inc
dec
jae
adcb
daa
mov
or
sub
or
inc
loope
enter
outsl
push
rolb
lock
scas
clc
orb
sti
jecxz
loop
punpckhdq
repz
push
xor
pop
adc
les
mov
mov
in
lcall
push
adc
ljmp
pop
xchg
sub
cmp
fdivl
xlat
mov
mov
jns
sub
and
inc
mov
add
aad
xchg
mov
xor
popf
mov
movsl
mov
push
mov
mov
nop
pop
jecxz
rolb
inc
cmp
add
push
std
shr
push
push
and
jb
mov
add
mov
dec
mov
js
sub
add
push
mov
dec
test
mov
push
leave
jbe
sti
mov
insl
shl
push
aad
fmul
sarb
lret
pop
dec
cmp
xor
cli
popf
sarb
lock
movzwl
inc
mov
inc
es
lock
mov
mov
adc
xchg
fwait
cmp
mov
pop
jp
mov
cmp
aam
mov
loope
mov
lret
sub
push
add
or
mov
movsl
inc
add
ss
sbb
adc
cmp
adc
adc
push
ds
daa
in
add
add
mov
jmp
or
inc
cmp
outsb
adc
movb
mov
popf
hlt
or
cmp
outsb
subl
sbb
js
insb
inc
cmp
stc
sbb
int3
std
mov
sub
cmp
das
nop
xor
loopne
push
push
push
pop
mov
sti
rep
movsw
push
loope
add
cld
movsb
mov
push
shl
or
mov
shr
sti
out
jmp
mov
inc
mov
adc
movb
add
push
lea
pop
dec
inc
xor
jg
push
popa
pop
mov
push
ja
sub
cmp
sti
add
movsbl
xor
dec
bound
ss
push
repz
adc
and
push
cld
test
mul
je
push
push
and
jbe
jge
push
mov
in
mulb
mov
roll
pop
sbbl
fdivrs
outsl
mov
imul
add
mov
or
sbb
dec
or
lods
outsl
cmp
fs
push
and
mov
jl
adc
sbb
insl
jno
xor
xor
mov
sbb
sub
dec
adc
ss
mov
dec
inc
mov
push
inc
push
lods
sub
or
lock
test
rorb
ficompl
and
pop
and
add
or
repnz
mov
mov
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
and
add
adc
fimull
push
and
push
mov
mov
mov
pop
dec
mov
push
push
sahf
out
sahf
es
dec
jns
out
push
pop
pusha
gs
jns
out
je
jle
sahf
out
sahf
mov
jns
out
cmpsb
stos
mov
mov
mov
lahf
std
ja
fmuls
add
add
push
pop
or
and
or
or
test
decl
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
push
inc
rorl
ret
sub
in
and
or
mov
aas
pop
pop
rclb
scas
aam
sahf
in
sub
in
insb
test
inc
inc
scas
adc
inc
arpl
mov
ljmp
or
sub
push
in
push
cs
je
sbb
inc
pusha
daa
test
and
sub
repnz
daa
inc
cs
ja
aam
xchg
adc
sub
lods
jl
test
add
mov
push
push
fiadds
push
enter
dec
call
mov
sub
jmp
add
adc
out
out
xor
mov
add
add
mov
lret
test
vmulps
adc
pushf
out
xchg
repz
xor
xchg
sub
dec
mov
adc
add
cltd
xchg
js
sub
lock
jbe
xor
adc
add
adc
sbb
test
dec
rcl
push
push
pushl
add
and
movsl
shlw
xchg
not
aaa
scas
sub
pusha
push
sbbb
mov
test
and
andl
jne
pushw
jne
and
sti
push
push
push
pop
loopne
or
aaa
pop
js
inc
jmp
lock
cli
lea
inc
call
pop
mov
jne
and
mov
loop
pop
jne
jno
aas
sbb
insl
test
test
xchg
movw
inc
adc
xor
pop
sub
fsubr
add
adc
pop
loopne
dec
dec
sub
mov
push
call
xor
ficomps
or
je
dec
sahf
cltd
and
push
clc
sbb
je
xchg
clc
sbbl
xor
mov
lock
or
adc
out
popf
in
cmp
cmp
pop
or
addb
adc
mov
sahf
xor
loop
or
cmpl
xor
xchg
cmpsb
pop
outsl
push
xchg
mov
sub
push
fsubs
add
mov
xlat
rclb
stos
dec
andl
push
mov
mov
xchg
pushf
push
xchg
add
xchg
and
decl
popa
or
cltd
or
sbb
test
movsb
in
pop
ficompl
adcb
loope
or
int3
loopne
push
mov
addr16
push
adc
pop
test
xor
mov
shr
nop
push
push
mov
nop
sub
sub
das
lock
cmp
inc
sbb
in
jp
mov
push
cwtl
ret
sub
out
cli
adc
repz
push
mov
add
mov
sub
add
sub
mov
psraw
sub
and
mov
adc
adc
dec
ja
dec
test
and
sub
add
mov
iret
stos
push
leave
scas
jl
push
add
xchg
mov
pusha
mov
pop
push
stos
push
push
cmc
jecxz
out
lods
roll
add
ret
dec
cmp
fnstsw
sbb
lret
xor
xor
sub
mov
mov
xchg
inc
xor
mov
cmp
ret
pop
or
push
lds
sbb
add
xchg
push
loope
inc
inc
jecxz
cmc
push
out
test
daa
inc
xor
ss
lds
pop
mov
insl
movsb
mov
mov
xchg
bound
loopne
cmp
mov
pushf
sub
xchg
xchg
stos
faddl
adc
or
sbb
cmc
cmp
push
lds
dec
push
das
push
ret
or
enter
fsubl
sbb
adc
or
loopne
cmp
sbb
and
or
add
dec
insl
nop
mov
mov
mov
call
and
fwait
insl
sub
or
testl
les
cmp
and
add
addl
es
daa
loope
loopne
addr16
mov
inc
call
test
push
cmp
inc
rol
pop
jp
mov
fsubl
gs
lock
or
call
or
jo
and
cmp
loopne
push
jl
inc
int3
in
mov
sti
ret
cmp
xchg
push
and
outsl
ss
adc
push
mov
sbb
sbb
push
in
push
push
sbb
orl
lret
sub
add
xor
idivl
shl
inc
add
hlt
inc
jb
outsl
sbb
inc
cld
inc
push
mov
inc
pop
add
inc
lret
aas
or
adc
gs
outsb
xchg
adc
pop
sbb
mulps
fs
and
add
add
dec
sub
fdivs
dec
ja
lahf
xor
filds
pop
dec
aaa
dec
in
inc
inc
pop
inc
movsb
xor
dec
pop
dec
push
push
push
dec
push
cltd
pop
pop
pusha
decl
and
add
sub
push
test
test
and
or
or
pop
inc
incl
mov
sub
add
add
divl
lea
add
dec
pop
add
mov
cltd
test
sub
or
jbe
or
sbb
or
and
jl
sub
lea
cmp
mov
add
fldl
push
or
nop
out
mov
sbbl
mov
mov
pop
lds
jmp
lcall
inc
and
je
sti
adc
pop
adc
jnp
push
pop
jl
jmp
out
push
negl
xchg
and
sahf
push
out
mov
pop
sti
cmp
je
in
in
push
adc
and
and
or
sub
and
pop
out
add
sbb
push
in
sarl
push
nop
mov
fcomi
lock
das
sub
sbb
fcoml
js
push
les
sbb
push
fwait
ss
aas
sub
mov
sub
call
cmpsb
xchg
inc
cmp
lcall
cmp
add
cld
pop
mov
hlt
cmp
jl
cmp
jle
mov
sub
ret
and
and
add
add
test
xor
sbb
scas
xor
hlt
mov
inc
shr
mov
lock
sub
ds
inc
lea
jp
pop
mov
cld
inc
adcb
lret
and
js
add
pop
xchg
adc
inc
popa
add
inc
cmpsb
push
jg
xchg
and
pop
mov
push
bound
pusha
cmp
cmp
push
sbb
cmp
sub
in
orb
mov
cmp
or
add
pop
divl
sub
and
insb
dec
imul
or
scas
lret
lahf
cwtl
test
ret
adc
push
bound
sub
call
les
outsl
imul
orl
or
cmp
popa
inc
and
orb
movsl
or
cmp
arpl
mov
ret
inc
jmp
in
jge
sub
ljmp
orl
adc
and
push
out
pop
sbb
inc
lahf
ds
inc
lock
xor
jne
push
dec
and
pusha
lds
js
insb
outsb
scas
adcl
pusha
mov
add
xchg
mov
fisubl
cwtl
enter
inc
ret
xchg
cmpsb
xor
loopne
push
pop
mov
orb
outsl
insb
xor
aaa
mov
cltd
bound
call
jno
sub
add
jne
shlb
rclb
and
mov
sub
or
inc
or
insb
push
jmp
fs
sbb
sub
inc
fbstp
xlat
xchg
add
fldl
leave
test
xchg
or
jb
rcl
movsl
bound
adc
dec
xor
insl
xor
arpl
test
push
mov
and
push
add
ficompl
pusha
mov
push
push
sub
mov
jae
xchg
xchg
fdivl
scas
cltd
or
jl
sbb
cwtl
and
leave
jge
xchg
ja
sbb
lds
out
add
push
pop
adc
outsl
pop
js
push
xchg
jns
lret
ret
shrl
test
mov
push
test
push
cmpsl
adc
lea
pushl
push
ss
mov
mov
or
adc
and
adc
sbb
cmp
punpckhwd
jle
mov
fsubl
decl
mov
xlat
or
or
std
pop
sbb
sbb
adc
stc
ret
pop
add
add
or
pop
add
ja
add
testl
iret
leave
or
arpl
lret
out
fadds
inc
into
cmp
addb
or
inc
shll
add
dec
aam
into
popf
cmpsb
sub
jle
jmp
pop
jbe
rcr
or
inc
jle
mov
or
jbe
stc
daa
inc
mov
loopne
mov
popf
or
add
pop
push
push
cwtl
lods
addl
bound
lock
jmp
xor
xor
push
jg
mov
sbb
inc
add
rorb
pushf
frstor
lea
scas
or
add
lods
ret
mov
repnz
gs
lahf
shrb
gs
xor
stos
rorl
push
jle
inc
out
cmp
lock
in
arpl
sbb
pop
js
daa
js
push
push
dec
lds
inc
ret
dec
xlat
xor
ret
ret
dec
and
and
sahf
dec
xchg
imul
repnz
movsl
pushf
movsw
sub
push
or
jl
or
fdivl
pushl
cmp
jle
mov
aad
cvttps2pi
jmp
lret
lea
test
or
cmp
jae
and
call
mov
imul
xchg
push
add
out
adc
xor
clc
movsbl
stos
and
adc
mov
inc
cmp
jbe
pop
fsubrs
xor
lods
and
mov
and
mov
inc
mov
xchg
je
subl
pop
adc
pusha
mov
inc
add
push
inc
cmp
jae
inc
xor
mov
push
push
js
test
popf
test
add
jne
jns
mov
lods
sub
jmp
pop
nop
xchg
lret
roll
fwait
mov
test
in
dec
inc
add
ss
xchg
mov
adc
adcb
enter
mov
jp
rcrb
leave
bound
or
pop
cs
xchg
push
mov
xor
and
add
cs
push
stc
movsb
clc
imul
adc
roll
int3
add
es
jmp
adc
or
sbb
and
mov
fldz
fcomp
fnstsw
das
arpl
loop
fsubr
pop
faddp
icebp
fstpl
hlt
subl
in
mov
add
ss
mov
mov
mov
inc
push
mov
jns
nop
lret
pop
hlt
xlat
hlt
pop
hlt
stc
inc
jmp
cmp
inc
es
push
lea
jge
cmp
shll
shrb
sbb
push
dec
add
inc
fwait
push
icebp
in
pop
ljmp
jle
call
movl
fwait
or
lcall
add
cmp
push
inc
mov
dec
dec
fsubl
gs
sbb
mov
mov
pusha
or
add
stos
mov
adc
mov
mov
and
sbb
and
sti
pop
xor
inc
es
icebp
push
and
pop
push
fldl
cltd
adc
and
mov
jp
mov
aam
scas
pop
mov
stos
loopne
or
mov
ds
fimuls
enter
shlb
int3
loopne
shr
dec
pop
das
aam
jns
repz
sub
cld
inc
mov
imul
incl
cmc
mov
hlt
push
inc
pop
inc
xchg
addl
mov
leave
mov
sbb
stc
pop
test
test
imul
data16
cmpsb
sub
sub
mov
mov
stc
xchg
aam
int3
push
aam
add
mov
mov
and
pushf
and
jne
hlt
cmp
daa
fcmovnu
mov
xchg
movsb
jnp
rcll
add
cmp
inc
cwtl
push
xchg
push
popf
and
or
nop
mov
mov
dec
aaa
sub
xchg
jmp
lock
sbb
aas
push
push
popf
mov
jge
test
push
ss
fisubrs
sub
add
mov
push
cwtl
add
jb
insb
mov
jbe
add
popa
push
push
mov
push
insb
push
call
je
xlat
sbb
incl
jb
push
and
imul
pop
jb
adc
or
or
xchg
es
xor
ret
or
cmp
xchg
add
shll
fs
in
and
push
insb
or
cwtl
stc
push
or
sub
xchg
and
and
sbb
jo
jecxz
dec
sbb
mov
mov
jne
xchg
inc
jmp
lods
bound
mov
push
jae
sub
mov
jmp
inc
dec
xchg
testl
sbbl
lcall
xor
sbb
pusha
or
dec
aaa
xor
out
mov
stc
add
rdtsc
adc
mov
pop
movhps
and
ret
pusha
cwtl
pop
ret
out
xor
int3
adc
mov
test
pop
arpl
fsubs
iret
dec
test
mov
loope
adcl
pop
pop
daa
cmp
pop
xchg
clc
xchg
les
ret
jg
cmp
je
xor
push
jmp
sbb
xchg
stc
dec
dec
ret
push
aas
cmp
mov
pop
push
lds
shll
pop
repz
sub
aam
add
fsubs
xchg
mov
lods
xorb
movsl
jecxz
adc
pop
mov
lahf
mov
sub
sub
pop
xor
stos
push
jbe
ss
dec
push
dec
cmp
jb
mov
mov
jg
and
push
lea
outsb
popa
pop
jbe
xor
xor
test
xchg
push
jnp
push
push
inc
loope
or
inc
add
cmpsl
and
out
pop
mov
push
in
lods
fwait
cmp
rorb
push
mov
lods
inc
pushf
add
daa
inc
test
or
sbb
sahf
rorb
xchg
leave
xchg
call
stc
inc
ret
mov
cmp
dec
adc
in
and
add
and
in
xor
loope
cmp
loop
pop
dec
sbb
or
or
mov
xchg
or
mov
or
xchg
repz
or
jle
es
pop
push
push
dec
bnd
pop
push
ss
and
cmp
in
inc
shlb
aaa
sub
jbe
and
dec
pop
cmp
push
arpl
movsb
sahf
mov
sub
inc
test
and
lods
mov
lds
push
sub
sub
jb
test
sub
cmpl
dec
clc
and
add
dec
rclb
dec
movsb
dec
stos
cld
push
cmpsb
pop
mov
leave
test
fdivrl
xchg
or
and
dec
pop
dec
ltr
or
fistpl
push
and
imul
adc
bswap
nop
cmpsb
xor
sbb
js
insl
cmpb
xchg
pop
icebp
enter
cwtl
push
mov
mov
mov
adc
lock
dec
je
in
add
pop
popa
cmpsl
or
and
xchg
pop
add
sbb
xchg
lcall
iret
cltd
mov
xchg
shlb
test
xchg
mov
or
sub
fdivr
andb
insl
faddl
insb
and
dec
in
dec
pop
pusha
inc
sarl
push
pop
into
or
dec
nop
idivl
or
pop
or
icebp
and
cmp
call
lahf
mov
enter
lret
cmp
mov
clc
cmp
xor
push
inc
pushf
lods
sub
or
fs
cmp
dec
imul
jbe
cmpsl
push
jnp
or
sbb
mov
inc
mov
addl
icebp
sbb
cvtps2pd
rcrb
pusha
push
xor
xchg
mov
lock
jge
enter
push
inc
add
movsb
shrl
push
jle
into
aaa
movsl
addl
lods
dec
cmp
dec
and
mov
add
push
notb
and
adcl
inc
xor
xchg
pop
push
adc
or
or
cmp
adc
jne
addb
inc
pusha
add
dec
loope
jmp
push
xorb
cmpsl
adc
and
lcall
inc
sbb
popf
push
rol
xlat
aaa
mov
add
push
inc
stc
push
add
sbb
push
push
sub
ret
push
adc
jnp
cmovns
inc
add
push
mov
test
pushf
mov
cmc
scas
inc
xor
pop
push
test
pop
ja
or
sub
add
mov
lret
sbb
xor
mov
mov
xor
inc
xchg
mov
mov
js
and
add
sarl
fsubrl
scas
and
icebp
pop
jno
insb
push
sub
jne
cmpsl
dec
pop
loop
add
roll
repnz
cmp
xlat
mov
xor
xor
add
stc
inc
in
jb
jae
nop
les
inc
sti
test
mov
jae
mov
mov
push
or
xchg
push
in
das
addl
add
jne
sbb
fbstp
sbb
repnz
add
test
js
jmp
mov
loope
and
sahf
icebp
lret
lret
add
aas
push
int3
inc
pop
inc
or
adc
add
adc
mov
dec
mov
sub
nop
imul
inc
push
or
in
lea
test
ret
sbb
addr16
lahf
sub
bound
incl
in
and
inc
loope
push
push
inc
je
popf
js
das
repnz
mov
sub
icebp
jl
sarl
pop
xchg
call
mov
push
jnp
lods
mov
or
push
adc
add
sbb
pop
add
add
sub
inc
sub
xchg
pop
inc
or
adc
mov
imul
cmpsb
inc
imul
mov
and
mov
rcll
push
data16
sub
adc
push
cwtl
mov
xor
dec
adcl
inc
mov
add
rcll
adc
insb
mov
push
lret
mov
mov
imul
xor
inc
cmp
dec
push
mov
cmpsl
aam
scas
mov
inc
or
fiaddl
jns
add
outsl
mov
es
pop
jo
mov
inc
adc
out
mov
push
sub
add
inc
cmp
push
push
push
push
inc
or
add
loopne
test
push
clc
sub
mov
and
xorb
fsubrl
push
mov
cmp
mov
xor
js
stos
add
rol
xor
outsb
pop
xchg
cwtl
mov
add
es
adc
in
aaa
mov
cmp
sub
push
test
mov
dec
jl
mov
loopne
pop
aad
xchg
les
jmp
cmp
xchg
dec
fcompl
in
push
add
test
aad
cs
rcrl
out
xlat
stos
push
adc
mov
or
inc
mov
cwtl
add
outsl
fisttps
imul
mov
enter
or
add
lret
adc
sbb
inc
cmp
rol
jge
sub
arpl
insl
push
sub
or
mov
dec
inc
adc
mov
mov
push
push
andb
gs
lret
xchg
dec
xchg
dec
add
xchg
sbb
out
xchg
cmp
cmc
dec
popf
test
fcmovbe
add
and
adc
rcll
add
cmp
repz
push
sahf
mov
push
test
push
je
push
push
xor
sbb
popa
loopne
lods
dec
add
add
je
add
loop
call
jmp
jle
nop
cmp
push
lret
js
adc
pop
push
adc
jmp
mov
popf
mov
or
adc
cli
dec
ja
ds
into
dec
pop
sbb
and
sub
fs
adc
test
xchg
pop
aaa
dec
faddl
cmp
pop
dec
xlat
dec
fdivl
cmpsb
sahf
hlt
xchg
add
dec
lods
aas
and
je
ja
das
sub
test
add
pop
loopne
and
out
sbb
lock
incb
stos
mov
push
jl
mov
in
or
sub
sub
push
mov
adc
addl
xchg
rcrl
mov
cmp
xor
xor
sbb
fs
pop
rol
daa
add
mov
pop
dec
adc
adc
adc
add
ret
jns
add
sub
or
pusha
dec
inc
sub
das
and
add
add
xchg
adc
xor
movsl
push
sbb
push
dec
and
cmpsb
xlat
hlt
or
bound
or
sbb
sbbl
push
loopne
mov
incb
test
mov
dec
cmp
or
in
testl
nop
sub
jne
mov
xchg
sub
mov
sub
cmpsb
ss
mov
adc
xchg
int3
add
nop
test
test
push
pushf
data16
ss
popf
lods
pop
push
mov
jmp
or
mov
mov
mov
adc
or
fwait
sti
mov
pop
sbb
jl
test
js
mov
cmp
dec
pushf
fxam
jl
or
aaa
nop
add
mov
adc
pop
sub
jle
inc
les
or
hlt
dec
shrb
mov
inc
pushf
nop
mov
test
push
and
sbb
or
or
or
jle
movl
mov
adc
aaa
lea
test
ljmp
js
test
popf
inc
sbb
insb
movsb
cmp
shll
popf
adc
cmp
loopne
add
fistpll
mov
test
jnp
shll
sar
pop
cmpb
es
xchg
sarl
pop
sbb
movsl
pushf
and
and
add
jns
loop
ss
lcall
aaa
pop
mov
push
les
add
pusha
xchg
nop
lods
aaa
ret
dec
inc
call
xor
inc
rcrl
push
adc
subl
push
push
cmp
jg
mov
jbe
jne
rcrl
jne
fisttps
xchg
clc
pop
pop
or
inc
adc
mov
or
adc
sbb
cld
inc
jp
push
clc
or
repz
std
mov
fisubrl
push
jne
adc
inc
incl
pop
test
movzbl
and
mov
or
push
add
out
push
push
fsubrs
lea
sub
out
mov
subb
imul
xchg
movsl
mov
repz
enter
mov
mov
jbe
fiadds
mov
push
push
and
mov
jno
pop
inc
pop
cmp
rorb
and
ljmp
outsl
je
cmp
or
adc
mov
dec
jmp
sub
push
xchg
pusha
icebp
lock
adc
pop
or
xor
or
inc
xor
arpl
inc
dec
loope
push
nop
pop
fistps
inc
and
fsubs
push
sbb
jbe
test
add
push
and
faddl
aam
nop
dec
jg
mov
sbb
xchg
fistps
pusha
pop
scas
into
lret
xor
lahf
push
inc
jle
inc
xor
pop
sbb
bound
inc
lods
shll
inc
jne
adc
leave
pop
fisttps
adc
mov
xchg
xor
sub
mov
mov
inc
sbb
jl
outsl
jns
jnp
sbb
out
sbb
out
inc
or
and
cs
mov
lock
mov
mov
sbb
enter
sub
in
add
pop
mov
jns
or
ror
mov
cmpsb
push
fcomp
xor
or
push
push
sbb
das
push
adc
insl
ror
ret
inc
pop
push
sbb
ret
pop
xor
jne
cli
shl
fwait
add
ja
and
jne
adc
inc
push
cmp
adc
call
xchg
fdivs
or
add
xchg
adc
je
call
jecxz
pop
add
and
mov
mov
test
xor
xor
or
xchg
mov
pushf
inc
jp
pop
mov
sbb
xchg
jo
xor
ja
mov
add
aam
mov
movsb
pop
mov
test
out
mov
push
add
push
fisubrs
dec
rcl
push
dec
movsb
pop
testb
sbb
or
xchg
bound
rclb
adc
shrl
mov
or
jg
and
push
popf
adc
adc
push
sub
mov
pop
ja
out
xchg
dec
movaps
push
dec
in
aaa
rclb
pop
xchg
sbb
mov
mov
or
enter
push
pop
daa
mov
xor
inc
fiaddl
xchg
push
add
cmp
sub
ror
test
and
inc
or
imul
stc
adc
pushf
add
jecxz
jp
cltd
pop
es
sub
sub
je
iret
outsb
jle
pop
adc
fmuls
lds
cmp
jg
mov
insl
fwait
mov
add
push
add
jmp
lea
fdivrl
pop
cmpsl
mov
lock
es
xor
fisubs
out
movsb
jge
test
rclb
cmp
adc
adc
lcall
adc
ja
push
ret
cmp
leave
sti
imul
mov
bound
shll
inc
inc
jmp
inc
fs
rolb
sub
and
push
aad
mov
add
sbb
mov
mov
push
jmp
test
or
mov
and
bnd
outsl
or
sub
addl
cmpsl
je
shrl
mov
aaa
dec
mov
sbb
test
xchg
movsl
push
push
cmc
mov
mov
dec
lods
sarl
or
inc
ret
push
mov
add
and
jmp
pop
pop
in
mov
cli
add
sbb
subl
add
push
jmp
les
push
movsl
shll
mov
dec
mov
inc
subl
sub
mov
mov
sub
je
push
or
cmpsb
mov
sbb
mov
frstor
fdivl
push
loopne
mov
les
les
enter
movsl
sub
mov
and
or
cmp
das
insb
and
push
mov
or
lds
call
push
sub
push
sbb
push
dec
clc
or
je
fidivl
add
ret
inc
shll
test
sbbb
pop
or
mov
and
cmp
xchg
sub
jecxz
adc
inc
shl
loop
cltd
push
mov
rclb
mov
aaa
fdivrs
pop
push
sbb
call
inc
push
push
xchg
dec
aad
mov
inc
sub
or
and
lea
or
mov
les
nop
xchg
jge
lock
or
or
push
sub
leave
jecxz
or
dec
adc
leave
cmpsl
jo
xchg
subb
cltd
clc
lahf
je
xchg
mov
or
inc
fwait
mov
inc
repnz
inc
xor
cmp
test
mov
sbb
add
ret
sbb
or
les
push
loop
xor
in
shrb
je
push
xchg
cmp
xor
cmp
test
cltd
jns
pop
imul
or
jnp
adc
sub
push
push
fistpl
les
outsb
mov
dec
cmp
in
iret
lcall
ret
jne
jbe
imul
push
insb
inc
loop
adc
jle
pop
inc
sbb
lea
filds
add
int
sbbl
mov
inc
test
ja
push
clc
mov
std
cmp
dec
add
pop
jmp
das
rorb
push
inc
or
rorb
sub
xlat
push
shl
or
out
or
cmp
test
xor
jb
addb
movsb
push
not
loop
lret
test
in
nop
inc
push
movl
fmull
cmp
jbe
add
add
fmull
mov
or
inc
mov
and
or
inc
push
pop
cmp
xor
add
add
pop
inc
popf
xor
mov
cmc
pop
sub
mov
or
xchg
xchg
inc
pop
sbb
add
jge
push
rolb
addr16
lock
push
add
arpl
jl
pop
lods
fbstp
jge
cmp
and
iret
jne
leave
push
cli
fistl
add
jb
push
sbb
stos
dec
and
into
out
jl
cmp
cwtl
or
std
push
or
popa
push
mov
push
mov
ficoml
add
scas
push
inc
ret
out
adc
jp
stos
xchg
dec
push
cltd
sbb
loop
add
adc
mov
pop
pop
cmp
aas
ret
int
mov
or
mov
ret
mov
and
fimull
sbb
and
adc
jnp
dec
and
ljmp
dec
pop
push
test
push
sbb
dec
xor
dec
cmp
xor
sahf
and
movb
jnp
add
pop
insb
rorl
xlat
fwait
dec
shlb
adc
and
dec
inc
gs
sub
add
or
sbb
inc
pop
jns
lods
fidivrs
hlt
cmp
pop
fcoms
pop
pop
add
sbb
mov
dec
mov
inc
loope
adc
push
add
and
xchg
fists
ret
cwtl
push
push
repz
jmp
and
cmp
cmp
sub
jns
push
or
xchg
iret
inc
fidivrs
and
jmp
push
mov
xchg
push
xor
ret
xor
mov
sub
push
inc
mov
inc
arpl
sbb
js
cmp
add
add
adc
shll
or
or
ss
lret
add
or
push
repnz
push
mov
ss
inc
push
or
movsb
sub
xor
push
push
xchg
or
loopne
mov
mov
sbb
ret
pushf
inc
test
push
fmuls
and
pop
enter
leave
sub
into
xlat
fnstcw
push
push
mov
xchg
sub
xor
or
sti
and
dec
mov
ret
xor
daa
fdiv
fsubp
nop
das
mov
dec
cmp
mov
fsubrs
mov
push
les
fdivrp
or
movsl
subb
and
icebp
fildll
mov
mov
mov
dec
adc
cmp
sarl
mov
sub
inc
adc
inc
loope
pop
in
sub
cmp
push
push
bound
cli
sub
sbb
jb
mov
sbb
adc
push
mov
sub
add
add
and
xchg
and
lcall
sbb
das
in
push
je
je
push
shll
aam
aad
add
pushf
add
xlat
cmp
gs
int
inc
andb
mov
dec
fisttpl
xor
dec
sub
push
in
in
nop
daa
js
sub
push
cwtl
aaa
push
mov
sub
dec
dec
pop
sub
pop
mov
or
sbb
xchg
movsb
test
push
out
test
rcrb
rcrb
add
mov
inc
mov
mov
jne
mov
mov
jns
stc
adc
sbb
cwtl
les
mov
lcall
shrb
jge
add
scas
fs
ret
sbb
inc
xor
imul
loope
sahf
test
pop
or
ja
sbb
mov
cmp
inc
fistpl
lock
pop
mov
cmp
cmc
xor
and
not
add
sahf
fsubr
push
inc
add
and
dec
pop
push
cltd
mov
and
fstps
repnz
loope
sbb
mov
push
dec
call
pop
add
add
xchg
dec
in
pop
enter
ds
add
xor
loopne
loopne
push
and
sbb
fsubrl
add
or
push
cmp
mov
mov
push
add
fimull
das
rolb
or
push
fwait
sbb
lret
sub
xchg
cld
push
orb
or
subl
sbb
adc
pop
mov
cmp
pop
scas
ret
lret
fwait
pushf
das
dec
adc
imul
sub
ss
or
mov
adcb
jle
sub
sub
mov
add
xchg
arpl
sbb
push
mov
fldcw
xor
daa
in
sub
push
rolb
int
shrl
fadds
cmp
pop
push
pushl
push
and
cs
adcl
fcoms
jnp
mov
adc
jmp
mov
fwait
jo
xchg
scas
rsm
fstps
jmp
cli
ljmp
pop
dec
lock
popa
inc
repz
adc
mov
push
movsb
pusha
xchg
adc
loopne
mov
cmp
je
pop
mov
cwtl
jp
mov
in
dec
xchg
cmp
je
in
adcb
inc
mov
insl
hlt
notl
ja
dec
je
or
and
push
popa
cld
adc
gs
push
pop
xchg
jmp
adc
pop
add
cmp
adcb
mov
loope
push
in
pop
lahf
and
stc
dec
lods
vfixupimmsd
aam
xor
xchg
or
mov
dec
pop
dec
test
jne
push
jg
nop
sub
fsubl
fisubl
mov
in
cmpb
sub
lock
or
or
lahf
add
aaa
in
xchg
test
es
aad
xchg
loop
mov
xchg
dec
push
inc
add
add
adc
add
addl
pop
inc
xchg
jno
or
push
insl
add
and
cli
add
add
push
and
enter
ficoml
inc
clc
sub
push
mov
inc
push
push
in
cmpsl
sbb
jb
xorl
pop
xchg
inc
rorb
dec
push
es
shrl
clc
cwtl
ja
jne
xor
clc
push
lock
hlt
fdivrl
inc
pop
add
sub
push
das
jge
sub
mov
lret
inc
and
add
push
les
sub
mov
xor
pop
shr
pushf
push
sbb
xchg
push
and
push
ret
mov
in
and
lahf
adc
or
xor
dec
jo
or
xchg
or
insb
mov
jne
xchg
hlt
scas
push
push
inc
add
out
mov
out
adc
sub
ljmp
in
movsb
in
sub
movsl
and
or
add
mov
jmp
or
aam
push
adc
or
dec
or
dec
jl
adc
adc
pop
adc
mov
sub
mov
insb
insl
pusha
adc
je
mov
rolb
push
xor
push
clc
push
or
mov
push
push
adc
mov
jne
lcall
inc
pop
or
dec
fisubrs
loope
popf
pop
pop
imul
push
fnsave
adc
xor
jb
pop
push
and
fnsave
jnp
data16
inc
mov
cwtl
push
xchg
sub
push
nop
inc
adc
add
rcrl
or
test
imul
inc
cmp
or
call
mov
jmp
jns
sbb
xor
adc
cld
sub
jne
test
pop
imul
cwtl
add
add
push
data16
cmp
jne
cld
pop
popa
leave
cltd
add
or
add
or
push
add
jae
or
push
movb
dec
test
inc
add
xor
mov
and
sub
pop
nop
rol
iret
push
lret
ret
jge
and
pop
adc
cs
jge
cmp
add
add
mov
dec
jl
cmpsl
mov
int3
shrb
pop
fcmovnu
push
adc
mov
or
push
or
dec
sub
dec
lods
or
pop
rcrb
lret
or
and
mov
pop
cmp
push
fidivrs
mov
loope
push
fmuls
xchg
pop
out
jle
push
outsl
push
push
outsb
addb
cmp
in
mov
not
cmp
push
js
xchg
adc
sbb
push
mov
mov
mov
fimull
add
push
inc
popa
xchg
and
sti
or
cmpsb
push
in
addl
push
int
int
test
or
add
mov
xchg
push
sti
je
jl
add
or
push
scas
shrb
mov
or
adc
adc
cltd
push
xor
jmp
inc
lds
daa
js
mov
pop
push
jno
dec
xor
sbb
adc
adc
mull
movups
shll
mov
cmp
mov
push
int
sbb
xor
in
add
mov
push
das
push
push
cltd
nop
cmpsl
sbb
or
hlt
or
inc
imul
add
je
push
or
jo
cmp
add
push
or
cltd
or
negl
push
adc
mov
add
xor
popa
int3
cmp
dec
dec
add
xchg
inc
push
scas
fstps
shlb
enter
jno
jmp
adc
pop
pusha
inc
dec
cmp
xor
hlt
les
pushaw
aaa
ss
jge
adc
sub
and
cwtl
addr16
adc
and
addl
test
xor
aam
or
lods
inc
sbb
or
stc
fs
pusha
or
pushf
add
sub
adc
lahf
adc
shll
pop
xlat
add
push
add
in
push
sbb
imul
inc
int
out
mov
mov
mov
mov
mov
stos
mov
lret
push
ret
repnz
fldcw
push
hlt
dec
cmc
ret
imul
cs
stos
scas
xchg
mov
loope
imul
shrb
adc
mov
ret
or
cmpsl
pop
cmp
aam
or
and
add
clc
inc
mov
or
inc
or
add
loopne
dec
js
sbb
sub
mov
sub
xor
push
mov
jo
pop
lea
add
ret
push
in
xor
sbb
pusha
mov
rol
mov
ror
xor
shr
xor
idiv
ljmp
mov
rol
xor
shr
xor
add
add
add
mov
lahf
dec
orb
add
iret
or
mov
push
or
and
xor
add
mov
outsb
sub
push
inc
adc
inc
out
adcb
mov
xor
into
or
testl
rol
std
cli
and
and
xchg
push
aam
cltd
xchg
aaa
jo
cmp
mov
repnz
push
sub
dec
movsl
sarb
or
notb
not
ret
rcl
add
add
push
roll
add
xor
fmuls
add
rcl
scas
loopne
enter
xor
sub
inc
push
xor
ljmp
shll
push
rol
out
add
push
xor
pop
dec
fcomp
loopne
xor
jae
js
in
aam
lret
call
bound
cmp
jns
punpckldq
push
cmp
sbb
add
les
xor
adc
mov
xor
rol
jl
call
lcall
xor
dec
in
in
loopne
rorl
cmp
pop
cmp
pusha
and
in
xorl
xor
or
int3
aam
popa
mov
in
imul
and
out
iret
or
mov
into
add
and
and
shrb
pop
add
mov
mov
addb
push
ret
push
jo
ficoms
add
mov
mov
inc
fistps
repz
adc
push
loop
mov
sti
rcrl
add
add
pop
jbe
cmpsb
shlb
fisubl
pop
insb
add
and
add
gs
lcall
mov
in
sarb
int3
popl
lret
inc
mov
ret
fcoms
or
cli
stos
adcb
aam
aaa
cmp
shll
and
inc
in
and
call
fstps
add
push
or
push
cli
xor
xor
lcall
dec
inc
imul
sub
xchg
pop
lahf
jo
add
push
orb
push
xor
add
dec
lcall
push
xchg
pop
mov
push
add
or
adc
cmp
and
push
push
pop
add
dec
cmpb
xchg
or
mov
push
mov
push
add
xadd
or
inc
lcall
nop
pop
pop
sbb
imul
and
pusha
xchg
xchg
pop
mov
adcb
dec
jno
arpl
fs
adcl
lods
fs
cmpsb
imul
stc
cmp
stc
mov
adc
inc
dec
mov
sub
dec
testb
pop
fmuls
adc
adc
sbb
dec
pop
gs
or
and
add
or
movsl
and
cmp
sbb
push
dec
out
loope
add
aas
pop
add
sub
mov
cwtl
add
inc
filds
cs
xor
fimull
inc
aaa
sub
add
sub
ret
push
insb
nop
data16
pop
xor
add
test
enter
sbb
jmp
clc
mov
loop
xchg
rol
and
sbb
mov
jne
and
test
lock
jae
mov
sub
mov
mov
dec
adc
add
sub
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
lods
fsub
add
mov
idiv
les
jl
sub
mov
cmp
jbe
or
rolb
fs
ljmp
sbb
sub
jae
push
pop
fadds
push
adc
stos
or
mov
scas
cli
cmpsb
ljmp
inc
fs
pop
stos
call
ror
mov
notl
add
mov
push
leave
add
sub
pop
adc
sbb
in
mov
movsl
adc
inc
nop
ja
sbb
mov
dec
push
pusha
push
inc
add
cld
outsl
xchg
fmuls
add
sbb
xchg
into
inc
or
or
adc
add
fs
xchg
mov
xchg
inc
test
push
ja
sbb
pop
test
addr16
and
adc
ret
out
pusha
nop
push
jns
or
xchg
aaa
std
xchg
loope
cwtl
sbb
add
inc
stos
adc
push
push
lods
add
or
pusha
and
push
imul
popa
xchg
push
mov
xorl
mov
andl
jle
ret
cmp
or
addr16
add
dec
and
dec
xor
jns
push
dec
in
sbb
cwtl
loope
or
and
inc
sub
adc
test
icebp
rolb
jo
inc
push
sub
lock
jle
jmp
ficomps
ljmp
add
shll
push
xorb
xchg
inc
ds
inc
cmp
mov
ret
push
mov
or
cmp
and
and
sub
add
or
push
mov
and
fildll
mov
roll
rcr
adc
or
dec
imul
sbb
mov
rorl
jl
adc
adc
cmpsb
pop
xor
inc
cmpsl
add
mov
or
cmp
add
fcoms
test
push
push
adc
and
add
insl
push
jns
outsb
xchg
loopne
add
lock
or
dec
jle
es
cmpsb
xchg
add
pop
push
mov
sbb
xchg
enter
mov
push
ds
or
int
in
mov
in
ja
enter
and
add
test
push
xor
sub
xchg
mov
dec
std
fs
or
lods
es
pop
push
adc
jmp
xor
and
adc
popa
and
lahf
lods
sbb
cmp
scas
pop
cmp
push
dec
repz
push
and
xor
divl
and
add
test
sahf
lret
cmpsl
in
jno
and
mov
test
out
dec
add
or
dec
les
sbb
and
push
test
shlb
es
dec
cmpb
clc
mov
inc
loopne
enter
xor
push
es
lcall
testb
pop
mov
xor
dec
mov
and
insb
loopne
or
imul
pushf
loopne,pn
mov
fldl
mov
add
orl
sub
push
mov
pushl
or
repz
mov
sub
lret
mov
cmp
std
sti
testl
js
xor
push
dec
adc
xor
push
add
psubusw
cmc
xorps
enter
sbb
ds
add
mov
ret
test
rclb
fildll
and
or
fcoms
inc
jl
arpl
js
jno
pop
cmp
xchg
sub
subl
mov
mov
xorl
test
add
movsb
xor
mov
lods
mov
xchg
push
cwtl
inc
mov
dec
push
lret
in
dec
out
jge
xchg
inc
in
lcall
pop
hlt
out
dec
fisttps
inc
or
or
movsb
xorb
sgdtl
enter
cli
scas
test
filds
aad
push
mov
mov
sbb
or
fcmovnu
xor
adc
cmp
cmp
mov
pop
or
xchg
push
ss
in
xchg
cmp
adc
vmread
xor
dec
scas
push
mov
adc
sbb
movsl
add
mov
or
xor
dec
pop
cmp
inc
add
pushf
mov
andb
lahf
lock
jg
pusha
fsts
cli
xchg
je
outsl
leave
test
jbe
push
push
and
adc
push
and
push
mov
sarl
jb
jmp
jno
dec
cld
jbe
push
push
xor
mov
xor
jae
xor
imul
mov
stos
fidivl
sub
xchg
lahf
in
push
add
push
sbb
mov
xchg
mov
andl
je
lock
ljmp
or
ds
and
sbb
add
push
and
mov
js
pop
mov
mov
sbb
push
test
mov
cli
or
ss
sub
or
sti
mov
push
adcb
xorb
or
sbb
movsb
pop
pop
or
sbb
mov
adc
add
ss
sub
cmp
cli
aad
inc
lret
jbe
sub
add
pop
add
mov
movsb
push
push
push
adc
pop
jmp
add
fstl
ljmp
lret
mov
jno
sub
adc
subl
add
add
dec
stc
shll
or
mov
leave
xchg
add
dec
add
pop
mov
push
scas
xchg
jmp
add
jle
pop
pushl
pushf
dec
push
rcrl
insb
or
das
lret
add
and
shlb
std
sub
xchg
mov
push
xor
test
and
mov
or
lea
insl
add
rorb
adc
repz
pop
adc
mov
mov
in
and
add
xchg
das
mov
rorb
push
jbe
xor
dec
loopne
loope
pop
cmp
xchg
cs
pop
loope
add
cmp
sti
aas
inc
xchg
fimull
sub
sbb
and
dec
push
mov
push
dec
sub
inc
and
lea
out
adc
mov
bound
mov
adc
cmp
and
fistps
aaa
inc
daa
lods
lahf
subl
xchg
and
push
cmp
jb
mov
mov
sbb
clc
mov
adcb
inc
add
and
push
sbb
push
in
outsb
adc
jmp
rorl
mov
clc
add
sbb
xor
pop
lahf
aam
dec
cwtl
xchg
in
cmp
push
loop
addl
fsubs
popa
dec
lahf
mov
mov
xorb
dec
xchg
push
jge
sarl
inc
dec
xor
pop
ret
jmp
mov
mov
or
leave
mov
imul
or
and
jo
and
imul
cmpl
sub
pop
mov
mov
inc
cmp
mov
cli
cmpsl
jl
lea
dec
in
sub
mov
jbe
mov
adc
sbb
cld
fnsave
inc
dec
mov
jne
mov
xchg
or
fnstsw
incb
stc
imul
rorl
xchg
inc
jp
push
or
repnz
cmp
pop
push
dec
add
add
inc
shl
imul
sbb
adc
jg
mov
cmp
je
and
nopl
pop
dec
sbb
sbb
xor
inc
cmp
jl
pop
aam
mov
mov
lcall
dec
data16
xor
and
jns
sbb
adc
xor
test
push
ss
mov
sbb
jle
or
add
xor
xor
pop
ret
loop
inc
mov
pop
xor
fwait
push
push
jl
popa
adc
adc
mov
mov
idivl
test
inc
andb
lds
cmp
pop
sub
jb
les
dec
and
fiaddl
cmp
sbb
loope
jnp
cmp
inc
in
xchg
out
movntps
mov
decb
das
mov
lret
lods
in
inc
into
outsb
pop
jmp
inc
xor
mov
outsb
xchg
int3
insb
hlt
and
or
mov
pop
add
shl
and
add
mov
enter
inc
pop
clc
add
loopne
add
loope
shl
xor
mov
add
dec
icebp
fisubl
pop
adc
fbld
pop
psubd
sahf
jp
jge
mov
push
mov
iret
push
fidivrs
sub
lea
add
adc
push
and
mov
sub
sub
pop
dec
and
or
push
inc
pusha
out
mov
dec
ret
sub
push
or
inc
add
or
mov
xchg
lock
lock
jp
inc
and
sbb
add
jne
jmp
cmpsb
push
push
mov
sbb
and
adc
mov
std
std
sbb
test
mov
inc
sbb
and
je
mov
rcll
mov
add
or
adc
jle
push
sbb
roll
popa
stos
add
xchg
std
sbb
xor
dec
movb
sbb
xchg
lock
and
lahf
adc
mov
dec
mov
test
or
add
bound
pop
push
aaa
push
out
cwtl
rclb
mov
les
jo
jae
add
xchg
std
mov
aas
insl
xchg
or
pushf
dec
cs
shr
les
push
inc
sbb
push
mov
shll
jecxz
jo
and
mov
mov
dec
movsl
cvtps2pd
and
mov
add
adc
stos
andb
push
push
inc
adc
sub
inc
shlb
xor
jno
add
aaa
inc
adc
es
cltd
dec
sub
add
push
mov
shlb
adc
outsb
add
push
ss
mov
ljmp
xchg
jmp
push
js
add
call
das
pop
sub
cmovb
mov
mov
jg
aam
or
out
movsb
or
inc
cmp
fsubl
cmp
aam
push
dec
test
pop
push
ret
adc
pop
jbe
dec
stos
jno
jecxz
nop
imul
in
sbb
mov
outsl
dec
inc
jmp
sbb
push
mov
dec
stc
insl
sbbb
mov
loop
or
inc
cmp
roll
loopne
mov
xchg
push
jo
les
leave
xor
sub
in
adc
sbb
pop
movsb
std
sbb
mull
or
pop
pop
ret
shlb
mov
pop
jmp
rorb
nop
mov
jle
or
sarl
scas
in
or
and
adc
and
mov
ljmp
rclb
test
int3
pusha
dec
push
adc
dec
sbb
cmp
stc
movsb
nop
out
notl
pop
or
mov
add
sub
cmp
sbb
int
mov
cmp
dec
mov
stos
jecxz
test
pushf
out
mov
or
loope
or
inc
xor
push
and
lock
pop
dec
pop
inc
mov
sub
out
mov
adc
loopne
push
adc
test
ret
sbb
out
dec
and
push
mov
xor
js
sbb
lcall
mov
or
sbb
ret
xchg
mov
mov
test
inc
xor
inc
xchg
mov
or
lds
call
in
add
dec
loope
sub
lock
xor
sbb
mov
dec
push
rolb
in
push
das
aas
mov
xchg
mov
pop
mov
cmpl
outsb
lock
or
out
xchg
pop
jnp
in
je
mov
jne
push
pop
push
push
nop
loope
jne
adc
add
sub
pop
add
dec
mov
add
fcompl
xor
aad
sub
add
or
sbb
pusha
in
cmp
aaa
inc
add
or
movl
jne
sbb
cltd
les
push
pop
xor
push
mov
push
xchg
inc
add
add
and
dec
pop
jp
inc
push
ljmp
jecxz
sbb
out
cmp
jle
add
add
movsb
and
jno
movzwl
inc
cmp
in
les
icebp
insl
jmp
sbb
cmpsb
sbb
pop
cmp
xor
sub
or
push
insl
test
pop
push
inc
mov
mov
pop
jmp
jne
repz
sub
ret
arpl
xchg
or
pop
jb
insb
mov
or
mov
push
insb
inc
or
or
pop
or
dec
jo
jbe
call
cmp
add
or
lcall
inc
jo
jne
addl
into
or
push
cmpsb
and
xchg
xor
sub
add
and
mov
cmpsl
mov
iret
lods
mov
add
clc
call
xor
push
mov
push
xor
jge
cmp
mov
incl
stos
shlb
imul
dec
push
das
shrb
pop
cld
sub
aaa
data16
pop
cmp
mov
push
add
push
add
in
sub
cmp
xchg
jmp
sub
dec
jnp
sbb
sbb
push
adc
add
add
out
mov
jne
pop
sub
int
pop
mov
or
or
loop
ficoms
add
sub
loopne
sbbl
push
pop
mov
push
add
cmp
je
loop
jae
pop
mov
mov
jmp
jle
mov
out
jge
dec
ret
imul
adc
in
push
push
idiv
inc
outsb
jne
jg
add
pusha
adc
adc
hlt
cmp
inc
addr16
sub
insl
sub
add
les
and
stc
sbb
push
pop
test
mov
lret
jo
loope
push
push
mov
aam
or
leave
or
inc
mov
add
testb
cltd
jno,pn
fnstenv
push
push
add
push
push
sbb
mov
out
gs
mov
pop
subb
xor
and
andl
outsl
scas
rcrl
std
add
mov
ret
fistps
rorl
sbb
sbb
push
es
add
repnz
aaa
clc
test
add
cmp
leave
jmp
scas
or
lea
push
sbb
adc
cmpsb
mov
sbb
js
or
inc
bswap
push
adc
cmp
jne
data16
xchg
pop
pop
or
jnp
add
dec
xor
cmpl
push
dec
pop
mov
xor
pop
push
pop
push
xchg
iret
and
ficompl
nop
jb
std
roll
sub
cmp
jne
jne
ror
push
xchg
mov
adc
adc
or
inc
xor
xchg
sbb
pop
and
push
add
clc
mov
les
jae
scas
or
das
leave
add
clc
loopne
dec
push
xchg
dec
lret
pop
add
mov
mov
mov
cmp
ja
sbb
fwait
call
jno
xorl
hlt
loopne
xchg
push
adc
sub
popa
jl
push
mov
mov
out
mov
mov
popa
addb
mov
adc
call
mov
ja
adc
pop
fwait
add
inc
inc
or
mov
and
xlat
loopne
jle
adc
lcall
test
pop
mov
mov
xor
rcr
or
adc
inc
ret
or
adc
rcr
ljmp
mov
add
dec
and
mov
add
and
add
add
andl
loopne
ret
test
int3
jle
jbe
cld
jb
test
mov
pusha
xorl
scas
lcall
int
mov
pushf
fcmove
dec
adc
ret
inc
std
cld
test
adc
js
push
inc
pop
lret
leave
cmp
sbb
jne
bound
pusha
inc
mov
inc
push
push
mov
adc
push
mov
mov
sub
ret
add
adc
push
push
add
pop
push
mov
and
dec
out
add
pusha
decl
mov
sbbb
pusha
dec
adc
scas
adc
aaa
adc
cmp
in
mov
sarb
push
loopne
mov
es
cmp
insl
loopne
ljmp
and
and
pop
mov
fadds
pop
adc
sbb
or
es
push
fistl
nop
aad
xchg
hlt
sub
mov
adc
xchg
jne
addl
jp
xchg
dec
pop
in
and
mov
inc
subl
and
jecxz
mov
aam
adc
and
repz
cs
or
mov
loopne
lock
add
jbe
dec
mov
or
out
push
mov
loopne
add
cmp
lea
ret
dec
jo
sub
sub
inc
enter
loope
js
push
cmp
jmp
popa
sbb
test
push
xlat
aas
pop
cmp
adc
adc
and
in
jle
or
scas
test
dec
pop
add
loopne
sub
pop
fiaddl
or
xchg
push
ja
in
test
shr
icebp
movb
es
jmp
cmp
test
dec
lods
insb
add
js
clc
incb
and
mov
aad
mov
cmp
cmp
add
and
xor
adc
push
push
stos
pop
xor
cmpl
fisubrs
fistpll
fucomi
out
out
add
ja
adc
dec
push
jo,pt
add
jae
pop
adc
sbb
cmp
mov
scas
popa
pop
roll
shll
sub
or
sti
dec
xor
jmp
xchg
pop
mov
push
add
ja
divl
xor
ret
aaa
sahf
cmp
push
pop
xor
dec
push
xchg
adc
add
cmp
enter
pop
pop
ret
push
or
xor
sbb
and
lds
fldt
enter
adc
push
mov
and
icebp
xor
insb
cmp
sbb
adc
gs
sahf
mov
inc
push
out
jb
cmpsl
inc
rclb
outsl
jmp
xchg
push
add
in
push
push
aad
scas
pop
test
fwait
or
inc
push
je
lret
dec
add
sbb
jbe
shlb
and
mov
push
inc
js
adc
scas
ljmp
jbe
add
xor
or
sub
mov
inc
inc
inc
push
loope
lcall
pop
clc
cmpsl
push
sub
shll
lock
cmpsl
and
xlat
imul
sub
cmp
mov
pop
sbb
mov
xlat
mov
dec
add
orb
std
jle
cmp
push
bound
push
push
pop
hlt
pop
jle
mov
add
and
sub
push
outsl
jne
fisubrs
dec
add
popf
cmp
push
mov
int
jmp
push
cmp
xor
sub
adc
popa
insb
sbb
enter
mov
mov
sbb
cmp
pop
je
jmp
or
push
dec
inc
cmp
sub
out
add
or
add
push
inc
sbb
and
sub
xchg
cmp
jmp
mov
and
dec
nop
jecxz
clc
push
xor
icebp
mov
imul
inc
cmp
mov
sub
adc
aaa
and
mov
add
push
movl
pop
and
pop
add
sub
les
inc
mov
test
push
jae
push
push
jl,pt
rolb
pop
mov
or
sub
and
les
imul
mov
jmp
aas
dec
push
add
inc
insl
lcall
test
insb
test
add
aad
dec
hlt
push
pop
in
jl
gs
pushf
push
mov
mov
push
loope
mov
adc
cltd
mov
and
dec
add
sbb
sub
sbb
les
popa
test
mov
dec
cmp
sbb
push
push
call
cmp
fwait
sub
xchg
sub
mov
shll
lods
je
push
xor
pop
ja
rcll
lods
jmp
adc
jne
insl
les
xlat
fdivs
dec
sbb
scas
popa
shr
shll
outsb
sbb
jle
pop
out
sub
movl
xchg
xor
mov
mov
lea
aad
cld
or
fsubrl
lock
jle
rcrb
js
xor
fbld
adc
dec
add
shrb
jle
sub
mov
shll
jnp
fdivrs
aad
bound
and
or
scas
push
xchg
mov
ret
jne
fnstcw
mov
fisttpl
jg
jg
fs
test
jmp
repz
fisttps
jle
movapd
push
clc
fwait
xchg
shlb
jle
xor
cli
rcl
lret
cli
test
xor
int
insl
jl
and
lret
or
jg
loopne
out
popa
ds
ret
adc
jnp
mov
sbb
adc
ret
or
cmp
adc
add
jbe
outsb
xchg
repnz
roll
add
mov
mov
pusha
addsd
int
fsubrp
mov
fcmovb
sbb
sbb
inc
pop
fistl
dec
repnz
cmp
jmp
xchg
imul
jb
xchg
xor
add
nop
or
lds
push
mov
sbbl
xor
push
ret
aam
pop
jg
jle
xor
sbb
mov
inc
mov
jge
jge
jns
pushf
pop
pop
sbb
xor
adc
add
rorl
rolb
or
add
add
fmul
add
icebp
ja
cmp
jb
neg
mov
mov
subl
lock
xchg
sub
jne
pop
loopne
add
jle
cld
je
adc
and
je
rep
cwtl
cmp
mov
dec
ljmp
fxch
or
xchg
mov
and
outsb
or
das
lea
imul
cmp
dec
and
insl
inc
rolb
roll
or
inc
push
cmp
clc
jb
repz
pop
add
push
cmovs
mov
adc
test
idiv
adc
stc
or
rep
jmp
int3
pop
fsubs
mov
xchg
int
jbe
add
xor
adc
jns
stc
push
cwtl
xor
or
and
mov
pop
in
mov
or
imul
mov
int3
add
movsl
cmp
add
lret
lret
cmpsb
inc
add
add
xchg
mov
out
push
sahf
out
fsubp
push
fcom
enter
iret
repz
inc
mov
mov
call
iret
repz
lock
hlt
push
loop
iret
clc
clc
cld
mov
add
testb
add
add
fldenv
jmp
sbb
sub
inc
mov
rcrl
and
or
inc
and
and
fcompl
lea
jl
cld
or
xchg
scas
loopne
std
cld
out
mov
mov
xchg
daa
stc
out
in
xchg
xchg
sub
fadds
add
data16
fiaddl
jl
mov
or
sahf
inc
cs
push
add
dec
dec
addr16
add
sbb
add
push
sahf
mov
repz
jnp
pop
push
fs
je
cmp
mov
test
sbb
cmp
repz
adc
iret
repz
or
or
add
ficomps
or
push
jl
xor
push
add
pop
mov
daa
pop
xor
ja
add
add
out
and
jbe
test
cmp
nop
nop
es
ds
push
es
mov
mov
fistps
push
add
fcoml
mov
mov
add
push
sbb
cmp
cmp
sbb
xchg
push
pop
push
lea
repnz
das
or
mov
inc
inc
ret
mov
jmp
jp
je
addb
or
rorl
popf
clc
pop
jne
mov
pushl
cmp
xor
adc
pop
enter
and
dec
cmp
iret
cli
xchg
or
je,pn
cmpsl
or
mov
in
mov
push
sbb
in
outsl
bound
and
sar
push
hlt
enter
enter
sbb
loopne
jnp
sub
and
mov
fcomi
or
add
cmpb
in
outsl
jne
xchg
sbb
test
and
sbb
in
add
push
xchg
inc
mov
xor
mov
push
fistps
adc
inc
cmp
jne
inc
cmp
mov
xor
mov
sub
adc
mov
and
pop
mov
in
pop
and
or
and
cmp
and
lods
rorl
cmp
cmp
sub
or
lret
xchg
cmp
arpl
dec
adc
rcrb
push
add
push
push
lret
in
loope
dec
aam
adc
or
adc
loopne
or
xchg
andb
mov
add
and
inc
jae
pop
xorl
imul
adc
or
cmp
dec
add
sbb
mov
ja
loopne
sbb
ret
jno
shl
insl
imul
shlb
dec
leave
sbb
or
or
inc
pop
cmp
mov
mov
adc
ret
cmp
aam
and
or
jne
sbb
dec
xchg
jecxz
lock
or
mov
ficoms
test
lods
xlat
cmp
movl
fisttpl
mov
xchg
rclb
or
fwait
sbb
testb
inc
mov
sbb
pop
clc
mov
push
add
ret
hlt
mov
push
lcall
leave
inc
and
sub
nop
in
sub
xchg
sbb
adc
add
or
shl
mov
xchg
cmp
outsb
mov
add
or
dec
pop
mov
and
rolb
ja
cld
dec
jge
push
into
rorb
push
sub
xor
fmuls
into
clc
dec
cli
or
add
jmp
or
mov
inc
ds
add
movsb
cmp
insl
cmp
jb
cmp
jb
mov
in
mov
sbb
pop
mov
dec
dec
mov
inc
cmp
jb
lret
cmc
loop
ret
popa
adc
mov
and
inc
push
jmp
pop
outsl
push
lret
enter
mov
cmp
sbb
and
dec
mov
sub
xor
sub
jb
lea
add
arpl
fdivrl
je
cmp
jne
mov
push
cmp
jne
cmp
int
es
jne
call
mov
or
cmp
mov
inc
incl
dec
jmp
adc
sahf
out
stc
jmp
std
std
jmp
cld
cld
adc
jmp
fimuls
insb
sbb
inc
pop
scas
jb
push
inc
fistps
push
movb
shr
stc
cmp
movsb
sub
or
mov
aaa
jle
adc
pop
loope
popf
rorl
or
testb
push
or
dec
adc
cmp
adc
lcall
push
dec
scas
fidivl
stos
std
or
sbb
sbb
or
enter
push
xorb
rorl
adc
add
adc
or
test
loope
mov
mov
les
stos
shlb
data16
xchg
add
adc
and
call
cmp
jg
add
sahf
clc
test
mov
mov
dec
cs
jno
add
dec
arpl
f2xm1
les
popa
stos
and
sub
jp
xchg
dec
repz
mov
dec
pop
cmc
mulb
push
push
pop
div
or
les
cmp
cmp
mov
nop
push
mov
clc
js
cmp
js
xor
lods
pop
push
arpl
js
clc
pop
adc
push
mov
pop
clc
pop
shlb
enter
sub
sub
push
or
xchg
bound
jb
add
adc
mov
nop
or
mov
push
jno
loope
mov
xlat
nop
mov
push
mov
cs
outsl
adc
pusha
pop
add
lods
adc
cmc
mov
movl
add
mov
inc
sub
cmp
lock
xor
fwait
outsb
or
jl
or
lods
push
mov
outsl
dec
hlt
adc
cmpl
adc
loop
cmp
cmp
inc
fstl
jns
inc
rorb
cmp
jne
aam
incb
orl
jmp
adc
jne
sub
or
mov
add
cmp
sbb
insb
push
xor
orl
loopne
mov
pop
and
or
fbstp
jne
pop
jne
dec
add
add
lds
sbb
sbb
push
xor
or
test
fidivrl
clc
sub
jmp
fidivs
lret
sub
cmp
mov
ja
xor
cmp
jae
sbb
loopne
daa
movsb
call
and
or
pusha
addr16
or
je
xchg
aam
dec
lock
ret
mov
pop
cld
cwtl
adc
fcos
dec
insb
and
mov
sbb
inc
adcl
or
cmp
ret
pop
jne
jbe
inc
add
pop
in
mulb
adc
pop
dec
jge
and
pop
insl
add
into
mov
pop
jae
aas
das
in
rolb
sbb
imul
sbb
jp
cmp
pop
adc
jmp
push
mov
cmp
mov
or
push
sub
test
and
into
xchg
out
imul
jge
stos
mov
shr
enter
rcrb
or
sub
test
jo
shrd
or
add
imul
fcoms
mov
jne
idivb
and
jo
xchg
xor
adc
xor
ds
adc
adc
imul
xor
inc
adc
or
mov
test
aaa
outsb
mov
clc
dec
and
shll
inc
aaa
sbb
cmp
push
rcrl
cld
jb
push
loop
mov
sbb
adc
add
ds
mov
lret
add
mov
dec
jmp
jbe
leave
imul
xor
dec
push
les
sarl
push
es
push
jmp
xor
aam
scas
push
mov
shll
out
push
push
stos
lock
mov
out
push
dec
push
movsb
ret
roll
stos
and
adc
int3
decb
loopne
js
test
and
jmp
and
add
adc
or
pop
fisttpll
xor
inc
jbe
flds
shll
jae
fwait
or
adc
scas
dec
adc
inc
cmpsb
or
inc
xlat
sti
sbb
cld
push
lret
cmp
jae
sub
add
and
fists
orl
add
loopne
je
inc
cmp
jb
lea
push
adc
rorl
or
mov
adc
ret
sahf
cmp
pushf
mov
mov
in
mov
fidivrl
or
out
dec
cmp
daa
push
mov
inc
outsb
loope
lods
mov
gs
mov
ja
add
outsb
adc
ret
pop
or
test
mov
in
push
pop
nop
jbe
enter
mov
xchg
xchg
jo
inc
push
push
push
push
dec
stc
inc
pusha
pop
outsb
inc
mov
inc
push
lret
arpl
test
enter
cmp
push
or
fnstenv
add
xchg
pop
enter
pop
mov
testb
add
mov
stc
mov
add
nop
scas
push
ss
jge
or
dec
and
int
adc
mov
movb
mov
dec
push
sub
leave
sub
loop
add
xchg
push
clc
push
push
push
mov
loope
imull
imul
push
test
adc
or
dec
sub
sti
pop
aaa
sbb
pop
lahf
sbb
and
or
pop
rclb
sub
ss
sub
hlt
push
ja
ficomps
or
mov
add
inc
lret
dec
xor
insl
std
xor
fwait
jle
push
sbb
xchg
aad
lock
mov
or
push
adc
ret
ds
flds
cli
push
mov
test
jb
pop
sahf
and
inc
add
pcmpgtd
repnz
and
inc
rorl
in
xor
mov
mov
pop
push
pop
or
and
pop
daa
fldcw
adc
mov
cmp
add
adc
inc
mov
pop
xor
pop
xchg
out
mov
aaa
jecxz
cmp
push
je
push
adc
shlb
and
shrb
sub
add
cmp
ficomps
mov
mov
rcll
imul
pop
cld
fmuls
js
xor
fsubrl
pop
dec
push
loopne
out
add
dec
adc
les
or
in
sbb
ss
jp
and
lods
call
test
ja
dec
push
add
push
cmpsb
fsub
int
sbb
aam
lahf
push
lock
mov
call
cwtl
test
cmp
loope
pop
adc
in
mov
testb
xlat
adc
imul
sub
push
pop
sbb
dec
sbb
mov
jbe
fildll
jl
and
mov
call
out
dec
out
sbb
fistpl
int3
add
add
cmp
imul
inc
push
cmp
add
add
or
mov
adc
or
in
sbb
out
inc
xor
adc
cmp
inc
mov
add
jne
ficoml
sbb
rcrl
add
xchg
mov
lcall
out
sub
sbb
push
mov
mov
into
mov
dec
add
mov
sub
sub
dec
in
jne
jmp
pop
push
adc
cwtl
test
pop
mov
loope
adc
pop
cmp
fidivs
mov
jbe
mov
mov
sbb
jle
cld
mov
adc
mov
adc
add
pop
mov
adc
in
ljmp
jg
sbb
add
jp
ret
cmpsb
and
fldl2t
pop
in
push
mov
shll
jge
pop
gs
or
mov
mov
in
dec
loop
or
loopne
or
adc
inc
out
and
pop
push
addb
movl
or
ss
mov
cmpsl
add
mov
cmp
xchg
add
cmp
or
mov
orl
add
fiadds
int3
xchg
fldt
mov
mov
gs
loope
jae
sub
jmp
cmpsb
push
and
pop
add
push
mulb
and
dec
dec
or
cwtl
dec
sti
inc
cltd
and
and
fs
idiv
inc
mov
cmp
je
movzbl
add
sub
je
fidivrl
lahf
ret
lea
repz
imul
jo
pop
add
enter
add
daa
push
repnz
add
adc
jmp
add
aaa
inc
mov
jle
add
and
repnz
add
mov
push
push
inc
enter
pop
push
pop
jb
mov
or
or
xchg
add
or
in
cmp
or
cmp
sahf
xchg
pop
or
loop
inc
fisubs
lcall
add
cmpb
push
ja
adc
nopl
push
add
push
lcall
fwait
jb
sahf
xchg
sub
adc
in
repnz
ds
add
iret
adc
ret
sbb
out
rclb
lcall
adc
push
nop
adcl
push
push
pop
int
or
xor
sbb
add
sbb
inc
ficomps
inc
sbb
add
adcl
push
outsb
sub
sbb
je
inc
sbb
repz
sbb
xor
cmp
and
push
push
inc
push
pop
loop
add
add
add
sub
cmp
or
and
clc
dec
aam
add
cmp
xchg
fsubs
jle
aad
repz
pushf
in
push
in
jno
lret
lcall
rol
lea
in
dec
repnz
cmp
add
mov
ret
dec
sahf
out
push
jbe
aaa
add
call
imul
dec
cwtl
jmp
inc
jmp
mov
or
sbb
dec
push
jns
out
in
in
mov
cltd
mov
enter
sahf
out
out
and
and
jge
sbb
sbb
lock
addr16
xor
icebp
add
push
pslld
nop
out
out
std
repz
std
cmp
hlt
rorl
pusha
hlt
mov
in
fwait
mov
repnz
div
inc
enter
idivl
cmp
xor
std
clc
clc
clc
cltd
pop
enter
stc
inc
stc
lock
cmp
cld
cli
cli
iret
in
jb
sti
sbb
stos
cld
dec
fmulp
dec
cld
cld
je
cld
push
bsf
push
std
xor
repnz
xchg
sbb
adc
or
push
cmpsl
add
sub
add
sbb
lahf
loop
shrl
pop
cmpsb
push
mov
xorl
add
pop
std
sti
in
in
insl
push
in
icebp
inc
mov
stc
daa
xchg
sti
rolb
test
sbb
out
jns
xor
dec
sti
and
and
sbb
pop
jmp
jmp
and
in
add
xchg
pop
leave
mov
and
adc
out
out
mov
cltd
push
lock
and
das
cli
push
cli
xor
inc
add
jmp
cmp
xor
sar
leave
add
stc
lret
and
jns
lcall
mov
xor
add
stc
les
cmp
lret
sti
sti
cltd
cmpb
scas
mov
jb
or
jl
sbb
cmc
dec
dec
and
or
sub
mov
fnstsw
jne
icebp
mul
pop
shl
bound
and
test
mov
out
out
les
out
pop
repnz
mull
mull
sti
imul
ljmp
mul
inc
repnz
notb
mov
insb
out
in
pop
xchg
out
jno
notb
leave
and
in
rcll
cs
repnz
inc
pop
lret
mov
pop
xchg
cmc
and
pop
jns
lcall
jns
pop
out
fwait
and
jns
inc
clc
clc
jecxz
repnz
jmp
popa
cmp
xchg
cmpsb
cli
cli
jno
and
jne
adc
xchg
pop
push
hlt
sbb
das
pushw
data16
mov
cmpsl
xlat
hlt
idivl
jo
sti
cs
add
pop
lcall
loope
loope
xor
loope
repz
inc
repnz
push
cmp
mov
imul
dec
in
inc
repz
adc
andl
jb
pusha
leave
push
sbb
xchg
cmpsb
jmp
mov
mov
xchg
repnz
mov
jo
sbb
out
in
cmc
inc
xlat
mov
and
add
cmpl
mov
loope
sbb
rclb
js
divb
inc
repnz
pop
repnz
lea
cmc
cmc
jb
cmp
cmc
add
jecxz
dec
dec
pop
pop
ffree
lock
pop
add
popf
lock
stc
and
mov
and
lock
pop
xlat
and
js
and
and
test
ss
movsb
pop
imul
fiaddl
sub
out
ret
ljmp
push
add
iret
enter
add
add
jp
or
adcb
adc
adc
or
or
dec
add
sahf
mov
xchg
mov
adc
ss
nop
pop
in
jg
fisubs
loope
push
inc
add
pop
mov
ss
pop
jns
fstl
pop
leave
pop
out
sahf
ljmpw
pop
imul
sahf
push
stos
pop
lret
pop
das
fnstcw
bndstx
push
adcb
data16
pop
lods
pop
adc
std
pushf
out
fistps
push
mov
out
mov
push
mov
push
mov
push
add
sarb
movlhps
mov
subb
and
cld
sbb
loopne
pushf
jge
push
xchg
mov
mov
fistpl
pop
movsl
iret
xor
addb
xor
fs
fimuls
cmp
or
mov
movsb
and
fdivs
fbstp
cmp
cmp
mov
inc
xor
aam
add
insb
sub
bound
jge
add
xor
add
sub
xor
pop
int3
lea
jecxz
enter
or
push
sub
cli
adc
dec
sahf
jge
dec
into
pusha
add
adc
mov
mov
in
inc
je
lret
sbbl
rolb
js
cltd
sahf
test
lcall
mov
mov
xchg
adc
popf
test
mov
pop
dec
inc
jb
pop
and
and
dec
inc
subb
inc
inc
inc
inc
loopne
movsl
xor
cmp
mov
jmp
jb
lret
jp
aad
imul
sub
adc
shlb
iret
mov
std
xor
in
cmp
dec
andl
sub
sub
pop
or
and
xor
je
pop
rcrl
sub
in
add
sbb
pop
cmp
jno
jnp
enter
add
xor
orps
push
mov
cmove
cmp
pop
loop
dec
stos
adc
leave
shlb
jl
xor
das
mov
jmp
mov
add
dec
jne
jo
sub
les
in
cmc
add
or
in
inc
add
adc
adc
push
mov
stc
aad
ds
clc
lret
rol
jg
and
mov
mov
inc
inc
cmp
push
push
jmp
sbb
ja
ret
out
jns
mov
dec
mov
aas
mov
push
mov
pop
pop
push
mov
ret
cwtl
ja
stos
adc
mov
adc
add
mov
jl
sbb
sbb
rcrb
pop
or
clc
lods
add
cmpl
out
jne
jmp
stos
add
testb
mov
push
push
sahf
int
adcb
rorb
in
dec
or
hlt
mov
push
push
or
leave
adc
cmp
stos
and
pop
jo
push
outsl
adcb
in
sub
enter
or
add
aaa
sbb
mov
adc
mov
xchg
mov
incl
inc
decl
jne,pn
loop
test
xor
cmpb
icebp
decl
add
or
rolb
fistl
pusha
or
add
cld
ja
xchg
mov
mov
adc
adc
xchg
cmp
jae
dec
inc
push
jecxz
stos
xchg
pop
jae
pop
jbe
cmp
icebp
mov
dec
mov
push
sbb
pop
sub
adc
lcall
pop
jne
dec
xor
push
jg
mov
test
sbb
and
add
dec
push
fsts
test
je
or
mov
je
dec
je
push
push
dec
add
adc
cmp
movb
mov
mov
xor
pop
decb
stc
jle
dec
push
test
mov
inc
pop
stc
and
movsb
sbb
push
das
test
enter
in
xor
add
loopne
or
fs
lcall
test
push
pop
call
dec
dec
popa
lret
jl
sub
and
push
adc
fidivl
sarb
mov
stos
shrb
pop
mov
push
mov
jle
jmp
jge
daa
cmp
lahf
scas
sub
sub
insl
or
aas
lock
push
cltd
pop
idiv
sbb
ret
mov
btr
xchg
inc
out
cmp
pop
xchg
xchg
mov
or
mov
pushf
mov
cmpsl
mov
enter
add
push
adc
fs
inc
jmp
fs
insl
mov
sub
pop
adc
cs
je
insb
sub
subb
sbb
sbb
sbb
jecxz
dec
mov
and
sbb
or
add
in
and
jg
pop
loop
add
sti
insb
inc
pop
insb
in
cmpsb
pop
sub
push
nop
push
hlt
inc
leave
and
mov
or
mov
call
push
xor
push
pop
xchg
push
cmp
stos
pusha
cmp
mov
jl
je
sbb
or
jecxz
jl
fs
das
int3
mov
ud0
jno
mov
mov
test
int3
dec
jo
mov
je
dec
inc
ss
cmp
rorl
shlb
sub
cltd
sub
test
adc
jo
js
insb
lahf
pop
mov
or
sti
popf
sbb
pop
push
mov
fs
sbb
mov
adc
inc
outsb
cmp
pop
aas
clc
lcall
lcall
ficoml
jmp
push
pushf
sbb
xchg
and
and
jbe
ret
push
je
mov
add
push
push
push
movsb
xchg
rorl
movb
inc
cli
and
jge
add
popa
cmp
jne
push
hlt
mov
jbe
ret
pop
push
loopne
iret
repz
ja
inc
adc
or
out
call
add
lahf
push
bound
jmp
pushl
jbe
dec
ljmp
rol
xchg
rorb
dec
bndldx
fdivrp
push
pop
loopne
jo
fistps
mov
hlt
dec
js
loop
pop
add
dec
and
loop
adc
out
xchg
aad
mov
mov
add
push
inc
jg
inc
test
in
je
gs
xchg
lods
lret
pop
mov
orl
clc
mov
inc
inc
xchg
cmpsb
jg
cmp
je
xchg
mov
cli
orb
pop
cmp
adc
add
adc
lods
popa
fidivrl
dec
je
popa
mov
ficoms
les
inc
in
sbb
rolb
push
outsl
mov
cmp
mov
incl
fdivr
bound
pop
mov
push
inc
sbb
push
or
pop
cmp
mov
jnp
dec
push
pop
sbb
lods
mov
popa
inc
mov
or
pop
mov
sbb
jbe
push
add
dec
push
push
jo
jg
xchg
or
adc
cmp
jg
dec
pushw
nop
hlt
mov
addr16
negb
js
mov
lret
test
loopne
cmp
cmp
je
and
les
test
add
shll
loopne
or
lcall
pop
inc
mov
add
popa
rcll
lcall
out
push
add
fdivr
frstor
rorl
dec
movsb
jb
add
pop
inc
jns
pushf
cmp
push
js
inc
sbb
mov
adc
adc
clc
test
fiaddl
fcomps
jns
ror
add
sub
into
xlat
rcrl
mov
js
and
jmp
dec
mulb
pop
lcall
jmp
das
cmpsl
add
add
push
dec
sbb
movl
pop
and
pop
and
sub
push
stos
jno
sbb
clc
ret
imul
call
loope
or
and
in
dec
ret
out
sbb
mov
adc
adc
hlt
mov
movsb
ret
push
push
xchg
push
push
jns
and
stos
adc
lcall
jle
or
add
mov
push
inc
mov
or
cmc
xchg
add
fs
idivb
inc
push
jmp
cmp
pop
in
movsb
jo
inc
or
inc
inc
int3
jmp
pushf
ss
vphaddbw
andl
jge
mov
mov
or
xor
clc
and
pop
mov
pop
shr
es
rolb
scas
inc
jmp
aas
pop
push
imul
cmp
popa
push
inc
pop
adc
jns
daa
adc
es
jne
add
and
inc
in
add
adc
adc
pop
push
jmp
movsl
mov
adc
or
lahf
data16
call
loop
jmp
daa
rep
jo
xor
pop
lret
test
test
adc
hlt
add
jl
lods
add
loopne,pt
adc
add
sbb
out
sbb
push
outsb
add
mov
adc
gs
cld
jmp
pop
arpl
xchg
push
jno
sub
gs
fs
repnz
adc
iret
or
sub
push
sub
adc
inc
add
js
or
cmp
sarl
cld
adc
sti
add
sub
fsubl
pushf
ds
xlat
cld
dec
mov
xor
popa
inc
mov
add
jbe
jbe
xchg
out
es
adc
test
mov
push
or
add
dec
or
mov
adc
jecxz,pt
sub
jae
jno
pop
and
js
pop
aas
dec
js
rcrl
xor
movsl
dec
or
call
mov
and
lret
adc
jmp
jp
mov
mov
rcr
add
out
popf
sahf
enter
lret
sbb
or
shlb
push
adcb
std
ds
push
pop
jne
ret
sub
jmp
or
mov
test
adc
dec
lcall
std
data16
cmp
pop
out
and
insb
mov
add
loope
pop
gs
push
inc
js
cli
jp
fabs
stc
fs
add
push
xchg
pop
gs
sbb
cld
push
or
jl
sbb
imul
cmp
mov
ja
push
sub
sbb
es
out
lock
jecxz
mov
adc
or
xor
add
mov
js
or
dec
or
popa
cwtl
sbb
jge
mov
mov
fiaddl
xor
ja
lods
mov
fdivs
subl
out
mov
fstpt
add
xchg
push
sbb
push
sub
sub
shll
repnz
inc
jle
jmp
jg
adc
hlt
mov
lcall
xchg
cmp
mov
add
shll
cmp
mov
fistpl
ror
mov
cmpsb
lock
call
add
shl
hlt
fmuls
ss
cmpsb
inc
mov
xchg
icebp
mov
mov
sbb
sti
sbb
adc
iret
adc
mov
or
incl
sub
jle
push
push
mov
mov
sub
je
lret
test
lods
sub
inc
add
fadds
add
ffree
mov
mov
leave
cmp
mov
xchg
rolb
sbb
mov
jecxz
dec
imul
insb
push
lea
loopne
out
adc
in
xor
push
nop
test
loope
repnz
and
dec
add
jae
push
pop
xor
push
jbe
xchg
add
jecxz
mov
je
add
iret
xor
push
push
mov
rorb
mov
jge
push
lretw
sbb
pop
push
rorl
mov
pop
jae
sti
sbbb
add
insb
push
mov
dec
xchg
movups
call
dec
jl
cld
pop
xor
inc
and
jle
adc
xchg
and
cs
jmp
jo
leave
or
push
test
pop
jne
push
repz
stc
mov
and
repz
mov
mov
loopne
cwtl
mov
das
and
popa
sbb
pop
or
daa
lcall
movsb
adc
cmp
pop
test
or
lock
roll
mov
push
adc
loop
fsubrl
pop
sub
outsb
mov
or
xor
and
mov
push
or
add
lahf
xchg
sbb
dec
push
push
inc
out
lods
cmp
add
inc
scas
mov
in
pop
test
push
movl
cmp
xor
mov
dec
pusha
sarb
movsl
sub
mov
cli
adc
loope
push
adcl
jno
or
adc
add
jo
push
push
in
push
dec
test
icebp
pusha
sub
insb
pop
stc
and
outsl
or
add
xchg
ja
or
push
or
jmp
rcr
cmp
sub
cmp
aam
add
or
shl
or
sub
add
sub
ljmp
mov
inc
dec
jne
lea
adc
sub
es
ret
es
call
add
outsb
test
sti
mov
idiv
lret
hlt
mov
and
aas
or
pop
lea
jns
outsb
mov
ret
ja
sub
cli
xchg
or
je
and
orl
mov
fnstsw
int
cmp
cld
ficoml
ret
cmp
fsubs
fwait
sub
push
cmp
sbb
push
pop
inc
inc
cld
push
dec
and
add
fs
aas
inc
push
orb
mov
je
cmpsl
in
push
sub
nop
mov
testl
aad
jmp
mov
sarb
sbb
lahf
test
ja
mov
or
rorb
std
lahf
jbe
ja
lret
add
jmp
cmp
push
or
and
jmp
add
mov
shll
loopne
and
sub
mov
mov
insb
or
ja
cmp
or
into
pushf
mov
mov
or
faddl
mov
pop
jge
sbb
or
sbb
jno
push
popa
sahf
ret
mov
sbb
out
insb
push
hlt
ret
outsl
dec
es
mov
xor
stos
lods
mov
dec
shll
push
sub
aam
cmp
xchg
cmp
std
jne
das
sarl
add
jmp
sub
stos
aaa
je
or
cmp
iret
add
xchg
xor
xchg
add
push
pop
hlt
add
popa
or
fwait
push
in
mov
mov
adc
mov
mov
mov
add
xor
adc
std
fidivl
push
jmp
fs
movsb
pop
pop
jbe
shl
push
add
fsubl
push
out
dec
xchg
adc
sub
rolb
jnp
movsb
push
inc
jae
cmp
jbe
jmp
mov
test
push
imul
dec
cmp
leave
inc
push
call
imul
popa
popf
loop
push
mov
aaa
jmp
xor
in
dec
loopne
sub
cld
jmp
mov
mov
cmp
mov
lea
ljmp
or
incl
jg
adc
add
jb
mov
xor
inc
inc
mov
mov
std
fistpll
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
es
inc
insl
and
jo
jl
sbb
push
divb
pusha
or
push
mov
inc
cld
or
inc
dec
jne
and
movsb
mov
fdivp
pop
cltd
add
gs
jnp
test
xor
mull
jno
test
movsl
fldenv
dec
je
loopne
adc
add
adc
idivl
pop
push
clc
rorl
or
and
mov
fisubs
mov
pusha
insl
add
mov
add
push
scas
mov
push
xchg
jbe
inc
cmpsb
popf
adc
push
jo
inc
mov
or
call
cli
jo
insb
ljmp
xor
das
mov
andb
mov
or
dec
loop
pushf
insb
ret
or
dec
loopne
or
jnp
mov
call
or
mov
mov
add
mov
ss
push
out
arpl
subb
sbb
es
xchg
sbb
inc
and
add
push
sbb
addr16
mov
inc
mov
leave
cmpl
push
and
pop
movl
testl
outsl
cmp
adc
mov
es
pop
movsb
dec
lock
pop
lcall
pop
into
int3
adc
sbb
jno
rolb
call
inc
xchg
int3
mov
das
hlt
mov
rcrb
xlat
xor
mov
aam
pop
cmp
fldt
fistps
cld
ret
pushl
out
jle
stc
mov
push
or
push
cmpl
rolb
add
pop
cmp
dec
pusha
mov
rolb
sub
adc
dec
or
sbb
add
mov
stos
mov
and
push
sbb
loopne
lea
jnp
mov
mov
aaa
cmpl
push
pop
out
ja
ret
jo
and
and
pusha
jo,pt
xor
sbb
js
cwtl
jo
xchg
dec
xor
js
and
push
mov
lods
mov
insl
jne
adc
in
or
xor
sti
jae
pop
jbe
stos
in
sahf
push
mov
sbb
jo
les
es
push
push
adcl
sub
mov
rcll
inc
ret
push
and
mov
jne
pop
inc
jmp
and
scas
arpl
push
cmp
shlb
fsubr
daa
mov
hlt
lar
pop
push
jns,pn
mov
push
hlt
mov
ss
movsl
sbbb
push
dec
mov
int
mov
call
test
and
adc
mov
lea
cmp
push
mov
or
aas
push
incb
cs
aam
and
jge
mov
cmc
andb
pop
cmp
inc
or
lock
cwtl
and
sbb
push
xchg
lret
insb
inc
or
jns
cld
push
jo
sarb
or
inc
mov
mov
sbb
or
js
imul
insb
inc
in
cmp
in
jae
bound
and
mov
fcmovnu
cmp
inc
cmp
outsl
mov
dec
fildl
dec
jb
orl
dec
push
adc
scas
adc
pop
push
dec
sbb
popf
pop
sbb
add
jnp
cmp
or
xor
sarb
sub
imul
adc
push
pop
mov
clc
enter
cmp
sub
sbb
sbbl
enter
cmp
and
jle
pop
jns
imul
jmp
bound
xchg
cli
jmp
scas
sti
jbe
and
pop
cmp
je
jle
or
cmp
jp
jae
popf
insl
lods
ret
jg
jge
mov
lds
addl
lods
add
xchg
fucom
xchg
push
shll
jns
xchg
jle
mov
in
cmpl
jae
jb
xchg
es
adc
sub
test
mov
jno
xchg
dec
ja
mov
int
std
test
popa
out
mov
int
pushf
sub
inc
mov
xchg
push
cwtl
mov
or
fnstenv
or
jb
push
xchg
mov
rorl
xor
mov
pop
das
rorb
jne
cld
shll
jp
inc
sub
andl
insb
dec
lea
mov
das
mov
sub
mov
dec
mov
loopne
fdivl
fcomps
int3
repnz
data16
popf
enter
clc
rep
shrb
aam
inc
sbb
xchg
add
rcl
jbe
ss
dec
cld
adc
cmp
ljmp
inc
inc
or
xchg
mov
cmp
fcomps
xor
test
test
pop
xchg
jno
ret
nop
movsb
js
jmp
jge
or
jl
mov
adc
adc
pop
dec
lds
bts
jmp
repz
ret
fisubl
or
movb
js
mov
mov
dec
and
push
shl
iret
aas
push
call
push
enter
addb
outsb
sub
inc
push
popl
testl
sbb
push
add
mov
push
jmp
jno
clc
mov
in
nop
mov
clc
fimuls
nop
add
sub
push
nop
das
inc
dec
je
lock
lock
out
fstl
and
mov
iret
repz
int3
aam
nop
popa
add
lahf
or
pushf
inc
add
xchg
ret
dec
add
lahf
push
pop
or
test
push
mov
push
popa
dec
cmp
les
call
cmpsb
mov
fnstsw
js
mov
shl
test
add
adc
xchg
rorb
dec
and
test
or
neg
int
popl
or
inc
mov
pop
push
test
movsb
stos
test
orl
push
jo
adc
add
or
aam
xchg
clc
push
es
adc
pop
inc
inc
cmp
add
add
add
and
and
and
jno
mov
inc
ljmp
dec
and
sbb
cmp
hlt
mov
scas
push
hlt
call
mov
mov
daa
sbb
test
orb
call
aaa
dec
and
or
inc
or
push
push
jbe
je
push
rolb
dec
dec
adc
in
inc
jae
subl
pop
dec
jl
or
xor
sub
push
push
jge
add
or
lock
pusha
sub
movl
add
jmp
adc
and
add
aam
testl
cmp
test
xor
lock
adc
push
sub
dec
mov
and
xor
add
adc
mov
push
xchg
jl
xor
sub
loop
mov
in
lret
testl
shll
sub
pop
pop
je
movl
loopne
sub
push
mov
mul
shl
sbb
hlt
jecxz
movsb
fs
push
xchg
mov
scas
iret
aam
lock
and
es
xchg
push
push
push
and
pusha
sbb
aaa
push
sbb
or
daa
clc
les
push
xchg
adc
jno
movsb
arpl
outsb
cmp
mov
or
or
pop
sbbb
adc
addl
stos
leave
jb
push
or
mov
inc
nop
into
push
in
sbb
lea
inc
cmp
dec
push
cmc
sbb
ficompl
pop
ret
adc
inc
aad
imul
fs
rolb
mov
cmp
xor
or
push
inc
xchg
ss
add
ret
shlb
pop
sub
mov
shrb
push
mov
test
inc
inc
mov
push
pusha
movhlps
inc
or
test
xor
or
lock
subb
inc
add
mov
test
cmpsl
aas
rolb
mov
out
pop
jae
adc
jbe
push
inc
pop
arpl
sub
or
push
in
or
inc
outsl
fsubrl
stc
pop
cmp
push
adc
pop
divl
in
lds
test
xchg
inc
ds
and
pop
add
mov
jle
push
push
jne
aam
in
fcomps
xchg
dec
ljmp
jns
or
or
push
call
ss
pop
ds
add
add
add
rcrl
jp
mov
int3
xchg
aam
and
mov
add
ljmp
xchg
push
push
push
mov
sbb
inc
in
mov
jno
fsubs
mov
xor
push
in
sbb
outsb
repz
decl
adc
add
jbe
push
pop
rorl
nop
xchg
dec
xchg
xorb
out
stos
inc
push
insl
dec
mov
or
mov
xor
insb
cld
repnz
jmp
test
and
jns
mov
cmpl
jo
xor
pop
dec
or
notl
sahf
pop
adc
mov
rorb
popf
in
mov
clc
aam
fdivrl
fsubs
mov
adc
pop
sbb
sti
lods
cmp
lods
mov
mov
mov
cmpsl
or
xchg
stos
repnz
fbld
leave
test
in
or
call
add
or
xchg
push
dec
rolb
mov
lea
arpl
ja
mov
movsbl
jb
sbb
sar
pop
mov
movsb
rolb
test
repnz
xchg
out
cmp
aam
scas
sarl
lret
xor
mov
mov
or
popf
adc
pushf
pop
or
pop
add
cmpl
pusha
push
adc
cli
xchg
sub
push
jo
push
or
aam
fisubs
aas
mov
mov
fstl
ds
imul
lret
or
dec
imul
ja
movsl
mov
mov
cmp
leave
test
out
sbb
hlt
hlt
stc
pusha
outsb
outsb
stos
cmp
push
or
inc
insb
je
and
pushf
shl
subb
loope
insb
loopne
sub
adc
sbb
pop
and
push
xchg
ss
or
xor
mov
sbb
xor
and
jmp
sahf
fnstenv
or
imul
data16
cmc
jne
js
dec
ret
imul
add
cmpsl
mov
rcll
lret
sbb
pop
imul
jb
or
xlat
mov
push
sbb
jle
inc
je
pop
mov
ficomps
or
dec
xor
nop
mov
dec
push
mov
roll
lock
or
je
push
jae
shlb
test
fldt
loope
xchg
mov
aaa
jne
das
pop
push
scas
mov
add
push
mov
sub
xchg
or
test
mov
rcl
sub
in
sub
or
adcb
cmp
inc
inc
push
insl
cmp
addl
xchg
xor
negl
mov
test
push
les
push
add
ss
jae
jo
cmp
pushf
jg
mov
test
sti
push
jmp
mov
add
push
inc
pushl
andl
sbb
hlt
mov
sete
fs
mov
cmpsb
add
cmp
xor
add
lea
jae
cs
sbb
loope
test
sub
loop
push
push
mov
adc
jmp
push
outsb
je
test
xchg
pop
xor
jne
popa
aas
add
gs
test
shrb
ret
mov
stos
mov
add
movsb
or
sub
xchg
cmp
lds
cltd
adc
cmp
addb
pop
mov
adcb
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
or
adc
mov
pop
mov
cmp
xor
adc
sti
cmp
xlat
mov
adc
dec
sub
push
rclb
or
popa
test
lea
xchg
jbe
insl
stc
lcall
pop
rcrl
sbb
pop
jb
sub
nop
cmpb
jne
ds
aad
and
push
aad
jne
sub
outsb
mov
add
jae
addr16
movsl
rolb
cmpsl
decb
mov
adc
lock
push
pop
data16
test
dec
lahf
push
sub
lret
fists
jne
push
fldcw
inc
push
outsb
cmpsb
or
jmp
out
or
jle
aaa
int3
je
cltd
or
outsl
flds
sub
add
pop
pop
jl
jae
add
rolb
jecxz
inc
xor
lds
mov
cmpsb
jmp
jge
inc
sbb
dec
idiv
daa
mov
lret
pop
mov
or
jne
and
jnp
dec
testl
ret
or
push
inc
dec
ljmp
lock
lret
shll
xor
pop
push
push
nop
xchg
clc
sahf
add
mov
dec
jmp
jo
out
adc
xchg
sub
inc
cmp
push
stos
aas
je
pop
adc
push
into
cmpb
jmp
mov
movb
inc
jmp
mov
loope
or
fdivs
inc
mov
sub
push
lcall
sti
fisubrl
sbb
push
xor
add
sub
jecxz
rorb
sub
push
test
dec
and
mov
cltd
movsl
call
sub
pop
sarb
push
jp
xchg
mov
ja
leave
dec
fdivrl
lea
sub
int3
jns
mov
add
popa
pop
stos
mov
xor
push
fsubs
push
jne,pn
jno
push
add
push
aaa
cmp
insl
inc
jae
fistps
pop
xchg
nop
popa
jle
sbb
mov
popf
add
xlat
sub
pop
jg
dec
lea
dec
rorl
sti
push
and
cmp
add
add
das
or
jle
add
aas
adc
movsl
daa
pop
mov
mov
mov
addb
sub
movsb
cmp
inc
mov
adc
lret
sub
les
mov
rorl
fwait
xchg
lcall
test
push
stos
push
lock
ficomps
xor
adc
sub
flds
daa
test
sarb
xor
mov
insb
or
js
push
push
lea
xchg
sbb
mov
hlt
lret
cmpsb
fistpll
popa
daa
call
jl
mov
add
push
lcall
mov
push
mov
dec
pop
jo
cmp
add
push
rcll
mov
jecxz
or
jl
push
pop
xor
xlat
inc
dec
or
add
xchg
out
ret
out
xor
pop
cmpsl
pop
cmp
es
dec
fmuls
in
adcl
sub
pop
gs
xor
cmp
lods
jmp
push
ret
or
add
xor
adcl
or
fiadds
subb
sbb
inc
xor
int
lret
xchg
jns
or
push
xchg
sbbb
push
lea
sub
loopne
pop
adc
sub
pop
dec
cld
out
lds
or
adc
enter
cwtl
and
push
or
fdivl
fwait
push
ss
rclb
xchg
ret
sbb
test
loopne
sub
cld
shr
mov
imul
das
mov
inc
and
or
sbb
xor
xor
adc
inc
add
or
jne
sarl
dec
cmp
jbe
push
pop
push
cmp
mov
loopne
jne
rolb
mov
shr
lea
mov
shll
pop
mov
and
and
adc
aaa
push
push
pushf
mov
or
mov
push
or
cltd
outsb
xchg
cld
add
pop
and
push
or
dec
add
data16
jmp
add
jecxz
mov
idivb
jne
and
sti
add
mov
push
cmc
dec
pop
cmp
xor
mov
imul
and
mov
xchg
jno
jno
mov
sti
lock
not
and
adc
and
xor
sbb
pop
xor
push
jle
pop
dec
add
movaps
xor
add
ficoms
adc
mov
inc
mov
inc
cmpsb
rclb
pusha
mov
mov
inc
mov
mov
loope
mov
adc
call
clc
lock
mov
jmp
dec
adc
dec
push
mov
push
sbb
outsl
or
add
xor
sub
jmp
push
push
repz
cwtl
mov
stos
and
adc
shl
add
mov
fmuls
scas
jp
push
call
aas
gs
sbb
sti
or
sbb
cmp
add
decb
adc
out
and
jns
dec
xor
and
xchg
mov
push
push
mov
adcl
call
mov
jbe
call
adc
negl
loope
jge
jl
push
cmp
inc
jbe
insl
or
mov
in
push
insb
das
mov
lods
xor
inc
rol
adc
lock
data16
cmp
push
pop
sbb
add
pop
js
xor
adc
pop
push
stos
cmp
pop
inc
adc
adc
dec
xor
icebp
pushf
mov
out
xor
add
fucomi
fwait
orl
imul
test
addb
sbb
push
mov
mov
push
jno
mov
add
lret
lea
stc
mov
imul
fadd
inc
incb
pop
addb
dec
jne
or
or
out
pop
in
rclb
int
lcall
xchg
mov
stos
insb
ret
inc
sub
adcl
shr
mov
dec
clc
imul
out
adc
jp
push
or
adc
neg
fbld
sbb
call
jne
add
je
clc
add
dec
mov
cmp
push
sub
adc
cmpsl
mov
sub
fs
mov
sahf
push
shlb
inc
mov
lock
testb
jge
inc
jne
or
lds
not
and
xchg
or
int
xor
adc
sbb
or
shrb
mov
out
xchg
mov
jb
cld
mov
cmp
push
mov
pop
and
pushf
jle
jl
test
inc
cmp
add
insl
test
cmp
je
sbb
cmp
add
mov
int3
push
sub
pop
aam
out
pop
mov
movsb
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
push
add
push
jns
sub
pushf
sub
add
xchg
in
pop
push
sub
adc
pushf
sar
dec
mov
xor
fstpl
out
sub
sti
jbe
jg
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
lcall
inc
insb
xor
add
dec
push
adc
inc
mov
xchg
inc
or
jno
out
xor
dec
insb
pop
xor
sub
pop
jle
sar
dec
jp
movsb
adc
jo
addb
xor
or
cmp
dec
mov
xchg
push
fisttps
mov
test
fbstp
jmp
ja
ja
dec
fiadds
cmp
adc
add
loope
dec
lea
mov
inc
and
shll
mov
cmp
push
cmp
lods
cs
lret
lret
mov
push
rdmsr
cmp
inc
dec
mov
and
cmc
add
sub
insb
push
add
ret
lods
pop
and
inc
cmp
add
rcll
push
push
push
jge
sbb
out
adc
in
adc
lret
dec
subb
rorb
jbe
fstpt
and
and
or
or
adc
xor
mov
call
sbb
imul
fnstenv
jmp
jnp
add
xor
jmp
arpl
jo
ljmp
out
popa
frstor
pop
lcall
cmp
sbb
in
sbb
insb
clc
loope
in
cli
and
mov
dec
sbb
sbb
iret
jne
inc
jno
sbb
dec
push
cli
and
mov
out
fsts
dec
mov
and
jne
push
cld
mov
mov
push
pop
outsb
leave
inc
test
mov
push
pushf
mov
sub
icebp
mov
jno
sbb
mov
add
pushf
stos
push
popf
xchg
sbb
iret
push
push
icebp
test
inc
cmp
add
pop
mov
decb
jne
mov
in
hlt
xor
or
sub
dec
mov
cltd
sub
pop
pusha
dec
bound
dec
mov
and
lcall
jp
adc
mov
pop
mov
das
pop
xor
sbb
jge
jle
call
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
add
mov
call
aad
fiadds
shrl
js
aaa
test
lea
ds
jne
cmp
sbb
push
call
and
inc
add
shll
outsb
sub
mulb
sbb
loopne
pop
push
jecxz
or
or
addl
add
adc
adc
mov
inc
or
inc
lea
xchg
add
jle
push
xor
pop
or
or
dec
push
loope
sbb
sub
outsb
scas
jl
sub
and
movb
xor
shlb
cmp
push
je
push
orl
xchg
shrl
inc
inc
cmp
cmp
cwtl
mov
jle
out
cmp
push
mov
test
das
mov
inc
nop
rclb
add
orl
mov
push
push
call
cmp
xchg
mov
out
dec
dec
call
xchg
inc
add
inc
iret
adc
jmp
push
dec
mov
cmp
es
inc
push
add
std
outsb
xor
lahf
pushl
adcl
inc
add
ds
jne
push
adc
pop
mov
or
pop
adc
dec
or
movsl
push
rclb
rorl
inc
clc
cmc
or
inc
js
push
or
pop
rolb
xor
push
sbb
pop
jl
imul
and
fisttpl
push
add
xor
sbb
iret
mov
mov
rorb
lods
pop
add
int3
mov
call
lods
aam
hlt
inc
or
xchg
mov
sbb
and
xor
sbb
sarb
outsb
dec
adc
cmp
cmc
mov
push
jmp
movzwl
sub
in
int3
test
in
test
into
je
cmp
mov
decl
rorl
sbbb
xchg
imul
test
mov
adc
pop
fdivs
pop
lcall
inc
pop
pop
ja
andl
or
scas
pop
out
and
sub
or
jl
xchg
xchg
ret
or
sbb
pop
add
add
negb
xchg
arpl
out
or
mov
jge
and
jb
jb
pop
scas
and
daa
fiadds
mov
or
enter
sbb
pushf
sbb
pop
fistpll
insb
jne
jp
fidivl
pop
and
pop
nopl
jg
add
inc
fimuls
cmp
xor
mov
sbb
cmp
enter
push
dec
gs
inc
jmp
int3
sub
inc
lcall
adc
clc
xor
ret
jne
cmp
jns
in
nop
add
stos
or
cmpsl
cli
sub
nop
mov
add
sbb
push
jns
shl
test
dec
sbb
inc
sti
call
enter
xchg
lods
rclb
mov
lods
mov
xchg
xchg
xchg
fmulp
call
xchg
outsl
pop
xor
repz
or
repz
in
iret
out
add
mov
mov
stos
xchg
ret
xchg
and
icebp
andb
repz
xchg
xchg
lret
call
mov
mov
mov
push
hlt
xchg
repz
cltd
xchg
or
lods
in
cmp
or
lods
rclb
sbb
call
add
lods
pop
leave
orl
mov
orl
lds
in
nop
or
xchg
in
pop
push
cmp
test
test
test
mov
int3
test
xchg
jle
movsb
adc
pop
mov
ret
lcall
or
bound
adc
ret
test
sahf
out
or
or
pop
jecxz
aas
xchg
fists
push
repz
cmp
sbb
push
pop
lea
adc
add
lock
lret
mov
popa
ret
mov
xor
xchg
ret
sub
add
inc
or
fwait
in
sbb
rcll
xor
and
adc
std
or
mov
push
add
and
and
push
imul
cmp
push
ret
mov
inc
lods
inc
inc
faddl
xor
mov
xor
push
ret
mov
jnp
xchg
mov
sub
pop
mov
jecxz
js
mov
jmp
mov
ret
outsb
repz
sbb
add
imul
push
adc
adc
rcrl
add
hlt
jp
mov
aaa
inc
cld
push
push
test
je
add
aaa
lods
add
nop
cmp
cmp
adc
jnp
adc
mov
sub
and
aaa
dec
push
lret
xchg
icebp
ja
sbb
push
or
shll
enter
imul
push
cli
cmp
sub
rorb
test
mov
add
imul
adc
xchg
ret
ja
clc
add
push
push
and
adc
cmpsb
push
imul
je
pop
sbb
incl
push
pop
sub
sbb
movsb
insl
stos
icebp
dec
mov
movsl
nop
aam
xchg
je
push
or
pop
inc
fmul
insl
loopne
xor
out
fldl
xchg
bswap
pop
loopne
fldl
or
fldl
or
ja
aaa
jno
push
mov
std
loopne
jne
xor
add
mov
imul
pop
jmp
jo
int
fldt
mov
mov
sub
das
sub
xchg
dec
je
add
and
or
or
sti
fldenv
movsl
adc
adc
xchg
sahf
pop
pop
mov
test
cmp
and
sbb
ja
lods
outsl
movsl
sub
add
add
popf
int
fwait
add
add
pop
xor
test
push
jns
outsl
xchg
adc
lock
test
mov
lock
push
in
inc
adc
faddl
push
fdiv
faddl
fstl
push
shl
push
adc
aaa
jne
das
jnp
mov
and
inc
lock
repz
cmp
push
cld
add
iret
sarl
ret
and
cmp
cmp
inc
mov
mov
mov
sbb
sub
mov
negb
or
push
lock
and
fsts
call
ds
xchg
idivl
sbb
push
inc
addb
hlt
xchg
push
push
xchg
jmp
inc
faddl
insb
add
adc
and
push
jmp
test
fmull
jae
or
inc
jp
cmp
xchg
and
ret
and
push
push
adcl
dec
sbb
js
rcrb
adc
scas
jmp
shlb
ss
cs
lret
lret
test
pusha
mov
jb
add
clc
lret
roll
or
jne
std
pop
mov
or
mov
lock
cmp
ja
jb
or
push
add
lret
and
jne
dec
sbb
pop
sar
test
lea
testb
push
sub
ror
mov
inc
pop
jg
dec
mov
mov
idiv
mov
mov
sbb
shll
push
int
cmp
std
insb
or
ret
inc
pinsrw
mov
or
lock
std
jle
js
lods
sbb
fmuls
jb
nop
dec
or
int3
xor
lret
in
lock
sbb
mov
mov
cltd
mov
pop
add
scas
sbb
xor
pop
subb
sbb
cmpsl
iret
mov
cmp
inc
je
jmp
mov
or
xor
push
enter
test
ds
and
mov
mov
fsubl
out
mov
inc
dec
cmp
mov
dec
arpl
loop
imull
inc
sub
xchg
imul
pop
and
mov
sbb
divb
cmp
inc
xor
push
movsl
dec
inc
imul
sub
imul
push
outsl
lds
js
pushf
cmpsb
shlb
sbb
repnz
mov
fadd
push
leave
fldcw
fs
fadds
lea
mov
cmp
xor
in
rcll
push
push
sbb
xor
add
dec
daa
pushf
repnz
xorb
pop
out
or
sub
sbb
sbb
cmp
loope
popf
lods
push
sahf
iret
in
mov
pop
pop
pop
mov
mov
add
mov
dec
push
sub
cwtl
xchg
cltd
cmp
adc
mov
nop
mov
sub
movsb
mov
pop
mov
movb
mov
mov
out
add
dec
repnz
add
cld
xchg
hlt
std
std
add
mov
std
pop
jmp
pop
rcrb
movsb
enter
mov
sub
mov
sub
inc
mov
stos
inc
arpl
pusha
cmp
rorb
negl
pop
add
mov
insb
loope
ret
cmp
adc
sbb
std
mov
and
dec
mov
and
xchg
sbb
mov
or
lock
aaa
addr16
das
lock
fdivr
pop
sbb
adc
sub
lods
insb
lds
and
shr
mov
sub
shlb
and
push
and
sbb
mov
stc
cmp
es
mov
es
push
mov
in
cmp
std
push
popa
cmpsl
pop
out
fdivrs
sub
lds
mulb
sub
arpl
sub
nop
std
jge
cmp
lea
das
bound
mov
pop
fists
imul
rorl
gs
fimull
or
icebp
push
sub
xchg
sbb
je
std
mov
mov
mov
out
mov
mov
push
aad
test
pop
xor
lods
adc
mov
roll
adc
cmpsb
jb
inc
or
inc
adc
sub
f2xm1
cmp
cmp
mov
sbb
call
sbb
std
lock
xor
icebp
imul
test
jmp
std
mov
xor
inc
repz
daa
cmpsl
pop
pop
mov
icebp
cmpsl
ficoms
or
dec
sbb
mov
out
sub
test
sub
jmp
jmp
dec
bound
push
cmc
roll
cs
xchg
lret
pop
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
xchg
push
ds
addr16
test
lods
insb
in
enter
jns
out
jl
lock
dec
or
adcl
fbstp
into
dec
pop
push
pop
insl
mov
movsb
adc
add
sub
sub
inc
push
inc
lret
push
pusha
jp
jne
cmp
xchg
sbb
cmovge
or
fprem
jne
fdivr
das
or
pop
jno
push
rorl
je
inc
cmp
movsb
loop
std
std
sub
sub
loope
sub
enter
das
test
mov
xchg
jg
aam
and
nop
and
inc
add
iret
repz
push
push
mov
or
dec
dec
dec
call
inc
and
add
or
js
mov
or
mov
inc
or
aam
ss
pop
and
push
ss
adc
inc
out
dec
les
and
sub
fimuls
sub
es
or
leave
and
aas
mov
aad
jnp
mov
movsb
test
pop
in
mov
or
add
cmp
rorb
xchg
pop
push
mov
adc
sub
cmp
ja
mov
add
stc
outsb
leave
and
gs
or
lock
and
je
pop
pop
movsl
mov
cmc
jo
ret
xchg
ret
jns
xchg
int3
pop
xchg
xlat
lock
sbb
gs
and
dec
dec
push
cmpsb
in
inc
pop
lock
movsl
pop
add
fstpl
xor
movsl
mov
outsb
movsl
int
or
in
scas
movsl
call
lea
jl
jb
xchg
adc
aam
in
adc
and
int
int
aam
enter
les
out
xor
outsb
cmp
fs
xchg
mov
movsb
jb
ja
sbbl
xchg
push
cltd
mov
inc
and
cmc
cli
mov
test
lret
pop
dec
inc
es
cmpsl
inc
push
test
xchg
outsb
pop
mov
lret
mov
push
test
mov
loope
xor
mov
insl
and
pause
fwait
mov
jb
test
std
jmp
cmpsl
add
mov
mov
lret
and
mov
xor
inc
jb
stos
pushf
pop
repz
xchg
mov
or
outsl
xor
mov
or
mov
stos
mov
pop
lock
push
dec
mov
imul
mov
sub
adc
add
add
sbb
cltd
fs
movsb
bound
aas
dec
inc
jns
adc
adc
test
and
repnz
enter
jb
leave
push
pushf
pushf
nop
xchg
mov
nop
jb
add
mov
or
je
adc
dec
push
push
and
sgdtl
je
jmp
dec
ret
jmp
pop
js
inc
add
push
test
lcall
imul
xor
sub
orb
mov
cltd
nop
sbb
jg
adc
and
xchg
dec
xor
pusha
jo
xchg
mov
jle
xor
cmp
and
cli
sub
pop
inc
into
or
mov
loop
ljmp
insb
mov
js
inc
xor
sub
fistl
add
jg
dec
popf
adc
xchg
dec
rep
ss
neg
sub
pop
pop
mov
sub
sbbb
adc
adc
push
push
mov
mov
sbb
loopne
int
outsl
push
jb
out
push
dec
adc
push
and
icebp
dec
fisttps
push
pop
outsl
inc
or
jbe
push
test
sbb
ja
sbb
mov
ss
jae
or
movsb
loopne
xchg
enter
adc
fmuls
popa
dec
adc
test
and
dec
add
dec
call
mov
roll
lret
xorb
mov
sub
mov
add
sub
adc
sbb
cmpsb
clc
in
lock
rep
jge
mov
xor
in
inc
aaa
or
in
mov
and
or
insb
inc
jbe
test
iret
pop
jmp
pop
dec
dec
gs
jae
cmp
out
rolb
test
dec
xchg
sub
pop
pop
jbe
xor
loopne
loopne
les
mov
inc
nop
mov
add
jne
xchg
movb
or
add
pop
aam
xchg
jne
xchg
icebp
or
or
xor
adc
out
nop
lea
mov
cmp
push
add
jl
sti
call
mov
lock
mov
and
push
mov
fmuls
xor
dec
repz
daa
pop
mov
mov
test
mov
into
js
xorb
jl
mov
pop
adc
dec
and
cld
adc
mov
adc
jne
test
outsl
mov
test
je
divl
adc
int
cli
cmpsl
loop
ret
aaa
mov
sbb
and
mov
and
jne
lea
ljmp
lcall
mov
pushf
xchg
jle
sbb
fucomip
stos
ret
iret
bound
flds
into
sub
mov
jno
pop
rcr
push
inc
cs
add
xor
ljmp
fisttps
or
mov
aas
icebp
or
lock
push
orb
js
mov
push
pushl
lahf
jmp
insl
adc
push
inc
imul
iret
adc
or
into
daa
mov
ffreep
out
adc
push
sbb
xchg
testl
clc
inc
push
inc
dec
popa
lcall
or
icebp
sbb
ss
xor
ljmp
jp
sbb
dec
and
mov
and
mov
mov
pop
sarb
lcall
jp
pop
adc
or
jbe
mov
mull
or
cs
emms
out
data16
push
pop
push
push
inc
shr
rcrl
shr
rcr
or
jne
div
pop
dec
adc
inc
mul
jnp
ljmp
jb
cmp
or
cmp
or
xor
and
cmp
sub
neg
and
fmul
jle
inc
adc
fxch
cmp
inc
stos
lret
xchg
ficoml
inc
add
mov
inc
pop
pop
jmp
out
addb
mov
movb
stc
test
inc
stc
adc
pushf
and
inc
je
push
lahf
add
adc
or
jae
jp
sub
xor
in
add
add
sbb
or
clc
out
sub
inc
sbb
cmpsl
sbb
and
fimuls
adc
jecxz
mov
xor
ja
leave
popf
imul
push
mov
jp
mov
push
adc
lock
mov
dec
add
popl
imul
and
cmova
dec
sbb
sbb
mov
xchg
mov
inc
cmp
add
jle
jne
lea
jb
fcoml
cs
xchg
das
aas
pop
push
push
dec
pop
add
cmp
or
ret
cmc
jne
in
out
dec
adc
add
lea
xchg
adc
adc
xor
pusha
sahf
sbb
js
addb
pushf
and
daa
xor
adc
mov
loop
sbb
lods
bound
xorb
lcall
mov
pop
mov
cld
sbb
subb
mov
leave
mov
add
pop
push
jb
test
shlb
mov
mov
or
adcb
int
add
lret
jo
xor
movsl
movsb
and
mov
add
test
lcall
sbb
test
or
adc
add
push
ss
out
cmc
xor
imul
xchg
jge
in
dec
test
aas
sar
ficoml
idivl
sub
fstl
add
nop
inc
lock
xor
sbb
adc
xchg
add
push
pusha
dec
rorb
cmp
push
stos
lods
cmp
push
mov
cltd
mov
mov
mov
mov
sub
jle
pop
loopne
repz
gs
aam
mov
adc
add
out
les
movb
or
pop
ret
daa
or
mov
addb
daa
adc
test
pcmpeqb
mov
fdivrp
iret
lea
sub
or
add
mov
in
jecxz
push
adc
pop
add
loopne
xor
ret
icebp
call
mov
xor
jo
and
mov
and
add
jne
jno
cmp
int3
pop
inc
lock
mov
out
cmp
je
roll
mov
adc
faddl
aam
xchg
pop
addr16
and
and
outsb
or
cld
pop
inc
clc
and
aad
repnz
test
das
add
sbb
sbb
and
add
push
xor
mov
push
jno
push
add
or
rsqrtps
or
inc
lods
xchg
lret
hlt
icebp
repnz
pop
pop
hlt
xchg
add
mov
or
jbe
cmp
cmp
jb
inc
fistpll
sub
les
or
add
cmpl
and
xor
daa
dec
sbb
ret
jg
mov
sub
bound
inc
data16
pop
cmpb
push
dec
sbb
pop
es
dec
fimuls
push
pop
hlt
sub
mov
jo
jb
inc
sub
cmp
icebp
pushf
lahf
push
push
xchg
mov
sbb
imul
push
lock
mov
cs
push
mov
jo
push
jne
jmp
cs
push
sub
and
pop
push
adc
lret
pop
movsl
jno
pusha
xchg
pop
dec
inc
adc
adc
mov
notl
pusha
xor
dec
pusha
pushf
add
ja
push
pop
mov
test
pusha
lret
adc
shrb
push
or
andl
lods
dec
ret
xor
orl
inc
sbb
pop
or
scas
sub
mov
adc
cmp
sub
and
lea
cwtl
add
push
out
in
jp
inc
add
test
inc
cwtl
lock
xor
or
and
leave
and
inc
cmp
xor
subl
loop
adc
cmp
sti
jns
sbbl
pop
orl
inc
test
cmp
push
mov
push
cmp
lret
cmp
ljmp
inc
lock
lods
shr
leave
push
sbb
mov
pusha
sbb
jmp
dec
mov
lods
cltd
pop
push
xor
movsb
lock
or
push
cmp
icebp
imul
pusha
jo
mov
ret
cmp
mov
pop
add
cmp
or
into
aad
test
popf
sahf
push
test
sub
jg
out
addr16
mov
push
or
fdivrs
jne
fnstcw
sbb
pop
jne
fists
xor
pusha
sub
pop
mov
lods
daa
add
jbe
pop
xchg
adc
je
add
mov
clc
sub
sbb
jmp
mov
rclb
pop
dec
or
pushf
or
push
xchg
stos
fwait
rcrb
jge
mov
xchg
mov
cmp
les
sub
add
mov
mov
push
or
je
mov
test
mov
aam
inc
pusha
je
dec
sti
jne,pn
sbb
inc
mov
jb
sub
adc
ret
mov
and
mov
mov
pop
mov
sub
sbb
add
gs
mov
sbb
push
jo
push
sub
sbb
insb
rorb
das
repnz
aaa
xor
push
adc
jno
xchg
shll
adc
add
or
and
push
in
xchg
insb
in
das
insb
inc
xchg
lea
cmp
lds
sbbb
flds
popf
jecxz
int3
push
pop
jecxz
std
orl
stos
push
pop
and
cmp
bound
mov
push
cmp
adc
test
fwait
hlt
pop
push
jg
popf
out
inc
mov
pusha
pusha
or
aaa
dec
imul
jp
pop
inc
cmp
aaa
push
jmp
and
xor
imul
test
pop
rcrb
loope
rcll
add
cmc
xchg
inc
cmc
sbb
push
fildl
jmp
aam
rcll
sbb
or
cmp
push
adc
sbb
ljmp
fimuls
push
sub
adcl
mov
addb
xchg
mov
sbb
mov
dec
mov
xor
repz
fidivrs
adc
daa
or
adc
xor
sbb
ret
dec
add
cmp
in
inc
lods
or
out
mov
nop
jnp
xor
add
mov
push
add
adc
fdivs
adc
cld
mov
inc
xor
cmp
pop
dec
or
ret
mov
mov
pusha
inc
mov
adc
sub
fs
movb
mov
loop
xchg
add
out
gs
lea
or
ror
or
xchg
add
inc
fs
xor
or
sub
ficoml
repz
jmp
xor
push
inc
loop
addl
incl
mov
add
inc
pop
je
in
dec
push
pop
es
jb
je
and
and
orl
push
mov
jle
sti
shr
outsb
adc
xor
add
add
push
xor
sbb
add
inc
daa
stos
insb
fiaddl
cmp
cmp
leave
or
rolb
jp
shr
mov
inc
add
xor
inc
jne
int
pop
icebp
pop
add
adc
adc
sub
inc
and
or
fcmovb
ret
sbb
dec
xchg
push
insb
xor
inc
aaa
dec
sbb
mov
dec
sarb
add
jecxz
mov
or
add
loope
inc
stos
jecxz
aas
imul
inc
mov
inc
add
shl
sbb
push
movsl
lods
sbb
lock
xchg
jge
lahf
pop
adc
mov
mov
push
add
mov
mov
loope
jne
dec
icebp
lea
pop
and
add
or
or
lret
jl
sub
and
mov
lods
mov
cmp
inc
inc
or
jne
repnz
sub
push
sar
xchg
adcb
arpl
ss
pop
adc
pop
clc
dec
imul
jb
cld
gs
sbb
pusha
loopne
call
pop
sbb
dec
or
lock
add
adc
testl
ja
mov
pop
or
pop
cmpsb
inc
ljmp
xchg
and
push
imul
add
pop
push
dec
sub
add
add
call
dec
lea
fisttpl
or
or
or
push
and
imul
mov
outsl
add
jge
push
mov
dec
fs
push
and
pop
loop
out
mov
push
jl
sub
pop
pop
sbb
push
sub
push
fsub
pop
sbb
and
cld
adc
andb
and
push
cmp
daa
adc
push
fsubrs
dec
sar
sarb
jg
popf
cld
fadd
xor
adc
test
jle
dec
addb
out
push
push
mov
dec
dec
push
sbbb
or
call
mov
add
out
add
mov
addl
inc
out
inc
add
and
push
or
idiv
cmp
inc
or
inc
adcl
push
cli
mov
xor
ret
or
andb
mov
xchg
andl
call
sub
or
aas
push
ss
jge
aaa
xor
rorl
push
inc
idivb
add
shrl
aaa
and
movl
mov
mov
jmp
scas
pop
push
mov
je
adc
xor
adc
and
push
pop
dec
lcall
adc
movsb
push
sahf
or
mov
enter
xlat
cs
push
in
arpl
xor
lock
xchg
lret
daa
movsb
loope
lock
add
dec
mov
mov
dec
mov
or
adc
lock
or
jbe
not
push
rcrl
sub
add
enter
pop
mov
add
adc
jb
rcrl
pop
insl
cld
dec
add
ret
sub
in
inc
jmp
xchg
dec
cmp
xor
or
inc
push
fcmovbe
push
sub
pusha
xlat
jle
mov
push
scas
sbb
popa
push
mov
adc
clc
jae
setl
xchg
and
mov
dec
fdivrl
mov
add
ret
pushl
add
sti
dec
leave
add
push
push
jae
and
imul
jle
ja,pn
ret
mov
xchg
mov
je
in
cmp
ret
inc
inc
adc
jl
in
mov
pop
test
stc
cs
mov
xchg
cmp
jge
shlb
sbb
pop
je
cmpsb
xor
push
cmp
fnclex
stos
and
pop
adc
rcrl
push
ja
add
push
or
jno
add
sti
or
add
mov
and
mov
pusha
jb
js
push
or
add
jbe
add
push
fsts
call
and
or
cs
xor
add
mov
mov
sub
push
call
xor
iret
decl
sub
rorl
cwtl
push
mov
sarb
push
cmpb
and
push
cwtl
cmp
add
cmp
xor
or
mov
and
dec
mov
push
or
jo,pt
popf
jo
cmpl
inc
dec
jmp
imul
push
xor
dec
dec
pop
jns
popa
bound
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
sub
push
and
cmp
push
fwait
push
ret
inc
shrl
ds
int3
sbb
inc
call
ljmp
int
jmp
sub
adc
outsl
jo
stc
mov
push
hlt
fdivs
adc
mov
fcmove
inc
sbb
popa
jmp
fmuls
jmp
mov
mov
or
push
lds
aam
lret
enter
push
adc
mov
mov
push
shlb
mov
sub
sub
lock
cmp
inc
jmp
mov
test
push
cmp
js
cmp
imul
add
add
movsb
fldt
cmc
aas
sbb
stos
popa
cmp
xchg
push
push
lcall
and
jbe
push
mov
pop
adc
mov
mov
in
sbb
mov
xor
fsubrl
imul
sbb
jne
push
ja
mov
and
add
shr
orb
and
and
or
mov
xor
in
push
repnz
sbb
mov
push
xorb
and
lcall
sub
scas
inc
or
ficoml
clc
mov
testb
je
testb
je
into
or
add
sbb
jo
fcmovu
or
test
or
call
cmp
dec
dec
inc
loopne
popf
movsb
push
mov
sub
lods
jnp
andl
das
xor
mov
sbb
and
cmp
and
in
or
aas
jg
add
jge
xchg
sub
or
mov
mov
push
jo
xchg
cmp
jl
movsb
pop
adc
test
fimull
mov
fs
add
mov
jmp
add
add
dec
shrb
sbb
test
es
in
pxor
or
adc
shll
lock
jmp
sahf
sub
test
and
ret
das
cmp
mov
imul
push
and
and
psubusb
inc
sbb
cmp
xor
or
adc
arpl
andl
hlt
or
and
add
and
jg
pop
addl
aad
cmp
lea
lret
rclb
pop
sbb
repnz
das
add
push
jl
push
and
add
lret
loop
cmp
jo
sti
jg
or
pop
std
aas
add
xor
sub
call
sbb
xor
and
bound
jl
jecxz
push
push
adc
dec
out
mov
push
xor
sahf
lock
jg
xchg
adc
dec
lret
int3
inc
fs
pop
jl
mov
adc
ljmp
adc
or
cmp
aam
call
outsb
loopne
lock
jecxz
jg
pusha
jecxz
stos
xchg
fadds
mov
gs
add
xchg
cmp
and
mov
addr16
fcoml
sbb
aaa
mov
or
cmpsl
mov
clc
adcl
push
push
push
jmp
mov
cmp
push
pop
cmp
mov
dec
or
loopne
jns
inc
or
sbb
je
cltd
ret
fdivrl
push
mov
cmp
shlb
sbb
out
pop
xchg
fistl
adc
or
addr16
enter
out
and
sbb
rcr
mov
rcl
jb
addr16
cmpl
inc
call
movsl
and
jge
jne
fisubrs
mov
sbb
or
add
leave
sub
add
mov
mov
lret
std
pop
xor
push
or
dec
or
test
and
mov
xor
decb
cld
push
inc
mov
inc
jl
mov
mov
adc
je
inc
ret
and
add
mov
inc
jmp
lock
or
hlt
mov
and
dec
adc
loope
jg
add
add
cli
push
push
jl
push
jmp
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
bound
sbb
shl
add
shrb
inc
mov
xor
cltd
dec
arpl
push
sub
push
scas
sti
cmp
and
mov
sub
or
xor
adc
adc
pushf
cmp
repz
nop
inc
pop
inc
xorb
mov
sbb
mov
mov
push
or
sbb
arpl
loopne
cmp
cmpsl
cmpsb
push
fadd
mov
hlt
fcmovnu
sub
ret
add
aaa
adc
icebp
enter
unpckhps
inc
cs
repz
andb
mov
shrb
rorb
ss
jns
arpl
push
xor
test
mov
out
jb
adcb
pop
xor
sub
mov
xchg
test
insl
and
insb
rorb
lcall
or
jbe
jae
jb
addr16
pop
inc
cmp
jae
push
cmp
jl
mov
push
add
inc
fmull
xchg
xchg
sbb
bound
shl
cmpsl
sti
aaa
bound
jle
pop
lock
jne
clc
push
outsl
pusha
adc
or
cmc
sub
ljmp
add
sub
adc
push
hlt
push
inc
add
scas
aaa
add
mov
call
lret
xor
fisubl
adc
enter
mov
icebp
cmp
scas
mov
lret
insb
push
repz
add
pop
out
add
or
cmp
incl
sbb
adc
lods
mov
sub
jne
popa
inc
push
sbb
pop
out
xlat
mov
hlt
jne
jmp
frstpm(287
rolb
arpl
mov
adc
sbb
mov
lock
jecxz
loopne
dec
xchg
pop
jle
xchg
sarb
les
sbb
jmp
jecxz
loope
sub
add
stos
insb
mov
push
sbb
ret
imul
xor
jl
push
jecxz
push
popf
clc
dec
inc
js
inc
cmp
xchg
shlb
adc
jg
fstpl
ret
outsb
cmpl
lods
pusha
aam
hlt
adc
mov
jbe
add
push
loope
loope
sbb
decl
leave
mov
ret
dec
jg
adc
orl
call
lret
pop
hlt
xorb
xchg
loopne
in
mov
xlat
or
shlb
xor
addb
into
adc
mov
ljmp
and
negb
std
jb
ret
xchg
mov
test
out
or
push
sub
and
notl
jmp
sub
or
pop
orl
lock
mov
jo
mov
jnp
es
andb
sub
mov
push
pop
clc
cmp
cmc
imul
push
lea
imul
sub
mov
mov
and
sbb
pop
rol
decl
shll
testb
and
inc
add
les
test
add
add
mov
push
jmp
inc
loope
adc
sbbl
jecxz
test
cmpl
sub
pop
adc
mov
cwtl
pop
push
push
or
add
rorl
adc
inc
push
inc
rcrb
mov
call
and
pop
xorb
test
adc
adc
sbb
push
push
out
loop
adc
add
jl
xor
rcrb
jbe
mov
push
pop
jmp
jle
add
xchg
push
inc
pop
pop
and
xchg
cltd
pop
push
mov
mov
push
xor
lock
dec
or
mov
mov
and
and
dec
and
pop
sub
sbb
outsb
je
xchg
jg
in
xor
cli
adc
jbe
lea
lea
or
sub
int3
mov
mov
fcompl
jbe
sbb
popl
movsb
push
add
add
push
dec
je
jp
mov
movsl
je
movsb
mov
pop
icebp
cwtl
push
hlt
adc
adc
fcompp
pop
sti
push
mov
or
and
or
sbb
push
inc
dec
loopne
loop
mov
mov
shlb
call
pop
ret
ljmp
je
cmp
xor
sbb
sahf
shl
test
inc
or
aas
jnp
lcall
push
push
adc
or
in
mov
jns
inc
test
sbbl
lea
and
jb
jb
and
sub
jo
jb
xor
cmp
shlb
and
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
and
mov
mov
adc
mov
nop
xchg
cwtl
dec
xor
and
mov
xchg
test
sub
push
insl
call
and
mov
mov
and
sub
bound
push
mov
or
mov
imul
adc
or
imul
or
sbb
or
and
or
iret
enter
pop
inc
or
push
fcoms
jo
and
xchg
sbb
pop
dec
leave
push
xor
inc
ret
cmp
push
inc
int
shlb
mov
out
jbe
sbbb
pusha
lret
sbb
monitorx
insb
mov
and
cli
dec
lret
nop
pop
mov
mov
mov
jp
mov
fnstenv
fs
sbb
test
sbb
es
cmp
shlb
push
icebp
dec
jmp
add
dec
int3
inc
xchg
lret
call
pop
imul
add
sub
dec
js
push
pop
fadds
jne
cs
ds
in
or
and
inc
test
sub
rolb
fcomp
pop
pop
sbb
push
adc
jle
cmp
add
or
nop
fistpll
das
cmp
andb
fdivl
clc
inc
js
rol
add
mov
lods
outsb
xorb
mov
inc
lret
je
lea
push
jle
in
ret
or
popf
arpl
or
xchg
pop
int3
lcall
sbb
inc
add
inc
ret
cmp
int
fnstenv
pusha
negb
mov
pop
je
xor
test
push
dec
and
sbb
or
xlat
test
inc
andb
jge
pop
and
dec
pop
lods
or
addr16
daa
or
repz
sbb
jb
inc
cmpsb
add
int3
nop
cmp
add
add
shll
cltd
outsl
push
sarl
dec
pop
fwait
dec
cwtl
mov
and
xor
sbb
mov
cs
cmc
push
adc
push
inc
loopne
testb
xor
xorb
cmpsb
xlat
jmp
je
sahf
mov
jg
push
and
push
adc
xor
jo
jbe
mov
xor
fildl
fcoms
push
popf
mov
ja
fchs
and
addl
pop
jle
icebp
loop
mov
adc
and
lods
std
notb
jb
push
mov
push
sub
inc
insl
outsl
jmp
enter
push
pop
lea
add
mov
psubb
loope
addl
xlat
inc
xchg
or
pop
mov
test
add
xchg
mov
mov
mov
fcom
push
fsubrp
sbb
add
movsl
dec
jnp
push
xchg
xchg
mov
ja
dec
shrb
inc
out
sub
in
dec
in
pop
inc
aas
add
xor
ss
mov
sub
std
jne
add
or
aaa
jecxz
lock
sub
test
es
pop
cmpsl
push
lea
push
or
push
and
out
loope
sar
mov
add
sar
mov
or
or
sbb
ss
loope
testl
or
popa
or
push
adc
shrb
popf
lods
push
adc
add
mov
inc
sbb
xchg
inc
insb
push
dec
ljmp
add
push
inc
pushl
mov
and
cmp
rclb
fimuls
cmp
cmp
push
int
push
pop
addl
adc
inc
ss
inc
lret
mov
jbe
clc
or
or
or
mov
inc
ja
lods
mov
xor
ja
adc
push
hlt
mov
cmp
add
test
jmp
push
loope
push
mov
mov
shrb
enter
push
into
inc
cmpsl
mov
xchg
adc
dec
mov
popa
inc
call
jmp
mov
sbbb
dec
inc
lea
adc
nop
xchg
push
es
sbb
inc
loop
lods
lahf
mov
insb
jnp
dec
pop
or
int
pusha
fcoms
sbb
mov
add
dec
sub
jns
xor
sarl
cmp
test
or
push
jl
fs
cmpsb
int
push
test
push
or
push
add
jne
imul
scas
mov
or
cmp
cmp
jne
movzwl
and
popa
xchg
mov
icebp
shl
add
inc
int
pop
ficomps
push
jmp
sub
adc
xchg
dec
pusha
push
jl
add
sub
jae
pop
add
pop
cmp
lods
add
lcall
mov
sub
mov
addr16
rclb
pop
adc
push
jns
sysenter
sbb
dec
add
xchg
sbbb
cwtl
outsl
sbb
icebp
cmp
jmp
xchg
lods
fucomp
mov
andl
fidivrs
cmp
loop
pop
decl
or
inc
ret
popf
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
xchg
jne
sbb
sbb
fnstsw
sub
mov
dec
pushl
lock
stos
in
nop
lret
cmpb
inc
cmp
mov
inc
cmp
jae
inc
inc
lods
push
orl
shll
movsl
std
pop
mov
inc
inc
sbb
or
sahf
add
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
mov
cmp
add
test
mov
das
push
cmpsb
pop
lock
dec
cmp
or
sub
out
int3
out
mov
std
jno
add
xor
inc
jo
fisttpll
sub
xorl
test
jo
lret
jmp
or
and
lods
pop
rcrl
or
lea
jo
ja
mov
pushl
lods
adc
repnz
mov
dec
cmp
ljmp
sarb
inc
jne
negl
gs
xor
jnp
sbb
fbld
pop
add
cmp
mov
or
or
jae
mov
xor
test
cld
and
cwtl
ja
and
mov
and
or
leave
loope
ret
mov
loopne
xor
mov
roll
and
cs
cmpsb
xchg
sbb
sbb
cmp
clc
xor
test
lods
inc
push
push
orl
sbb
jmp
sbb
xor
dec
int
dec
adc
mov
unpckhps
pop
pop
or
add
mov
cwtl
cmp
or
adc
inc
fstpt
inc
bound
or
cmp
push
push
pop
insl
add
pop
add
mov
add
sbb
nop
adc
push
and
mov
xor
sbb
js
outsb
dec
repnz
and
or
pop
inc
inc
or
ret
cli
or
pop
sbb
inc
mov
push
lods
add
mov
hlt
into
jo
aam
add
inc
adcb
mov
xor
popa
dec
pop
mov
nop
dec
repnz
divb
into
sub
test
or
cld
or
or
jecxz
loope
jmp
notl
gs
pop
mov
lods
lret
pop
inc
out
push
gs
dec
loop
repz
pop
cmp
push
movl
pop
xor
dec
bound
fistl
adc
jge
addr16
pop
stos
push
add
inc
aaa
and
sub
test
lock
rclb
ss
popf
dec
pusha
lret
mov
fldenv
dec
and
adcb
push
cmp
ficomps
lods
pop
lods
pop
pop
nop
clc
scas
pusha
mov
cmp
pop
shll
add
rcrb
call
pop
and
add
sub
lcall
lock
push
add
jle
lret
inc
call
cmp
insl
sub
imul
inc
inc
jmp
cmp
shlb
test
mov
js
add
js
pop
sbb
push
add
sub
rorl
pusha
test
pop
mov
jns
add
add
sub
push
pop
adc
cli
je
cmp
jmp
sbb
jl
push
jp
test
sub
dec
mov
push
dec
test
inc
jmp
icebp
xor
jecxz
xchg
mov
loop
sub
and
scas
xchg
andb
ret
inc
dec
mov
pop
clc
scas
pop
jo
movsl
cmp
and
pop
add
scas
push
in
sbbb
push
gs
xchg
pop
adc
shlb
add
push
cmp
adc
out
loope
push
cmp
mov
sub
pop
stos
jne
push
sbb
mov
sub
sti
in
mov
mov
cmp
sti
pop
dec
inc
pop
rclb
loop
arpl
mov
cmp
pop
dec
mov
dec
pop
mov
loop
mov
mov
sbb
rorb
inc
dec
xchg
enter
sbb
xchg
inc
aad
inc
sbb
clc
mov
mov
cmp
add
mov
aaa
into
les
addb
in
mov
jbe
mov
popw
jbe
mov
mov
cmp
cld
cmp
cltd
cmp
xchg
xor
in
aas
repnz
das
adc
pop
sub
push
jmp
push
push
jle
xchg
mov
jl
sub
or
add
xchg
addb
stc
inc
xchg
sbb
mov
mov
in
push
inc
sub
xor
gs
add
xchg
popa
and
add
inc
orb
add
inc
stc
les
dec
or
ror
add
xor
pop
es
jmp
inc
sbb
pop
and
push
dec
adc
lcall
loop
movsb
hlt
push
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
sahf
and
and
or
clc
pop
testl
mov
adc
leave
das
add
dec
push
push
xor
inc
aas
test
or
inc
jmp
test
push
or
sbbb
inc
js
cmp
mov
xchg
in
rolb
dec
xchg
add
addr16
lret
xor
mov
adc
outsb
inc
pushf
nop
mov
shll
dec
and
adc
or
fcompl
in
shr
add
jmp
jno
xchg
add
sbb
sbb
imul
pslld
or
adc
hlt
add
mov
push
out
inc
lret
pop
js
push
sbb
or
push
sbb
sub
outsl
pushl
clc
incb
jmp
sbb
lock
ja
frstor
cld
mov
and
aaa
in
data16
out
jmp
xchg
rorl
jns
ljmp
loopne
out
inc
std
shll
sub
jge
je
jecxz
or
flds
and
cmp
aas
pusha
mov
pusha
loope
pop
orb
dec
and
sub
xchg
jecxz
pop
fstp
shll
pusha
pusha
adc
call
push
addr16
pop
arpl
adc
push
jns
outsl
es
adc
sti
add
add
out
test
fisttps
inc
sbb
loope
and
das
dec
or
sub
shrb
sti
xor
sub
adc
testl
out
and
sbb
xorb
pop
sbb
jmp
push
and
inc
add
outsb
testb
add
inc
mov
inc
jp
inc
push
fnstcw
or
pop
mov
sbb
push
addb
push
push
push
sbb
dec
mov
inc
xchg
cmp
mov
mov
out
mov
sub
clc
fadds
adcb
sbb
inc
adc
xor
les
xchg
add
jp
mov
inc
aam
xor
xor
xchg
dec
bound
stos
sub
add
les
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
int3
inc
push
sbb
adc
hlt
add
repz
rol
fdiv
jnp
jl
clc
ds
call
pop
in
xor
pop
loopne
pop
imul
fmull
lock
faddl
mov
mov
fs
add
bnd
enter
mov
cld
mov
push
out
dec
into
pop
icebp
dec
pop
clc
not
insl
in
mov
orl
bound
shl
push
pushf
or
push
push
sahf
jmp
mov
loope
pop
movsb
lods
adc
or
adc
bound
xchg
and
mov
cli
xor
mov
and
aam
out
or
jbe
or
jg
sub
add
and
pop
sub
pop
test
push
jmp
popa
jno
loope
inc
out
jne
mov
xchg
fcom
out
test
movzbl
sub
mov
sbb
mov
je
push
and
xorb
push
xor
add
or
test
das
adc
jg
sub
adc
or
and
pop
sub
push
orb
pop
sbb
or
out
mov
pop
adc
idivb
cld
add
mov
gs
dec
inc
and
flds
inc
or
inc
and
adc
xor
or
or
ss
push
imulb
scas
cmp
pop
decl
in
lcall
add
add
enter
addb
inc
sbb
or
sbb
and
sub
adc
js
xor
pop
out
xor
sbb
mov
mov
jnp
inc
lock
inc
adc
push
mov
mov
mov
jae
pop
std
mov
cs
mov
popa
xor
xchg
vcvtps2pd
pop
test
data16
cmc
mov
jbe
loopne
jp
loope
ret
sahf
push
scas
push
and
loopne
lock
xchg
pop
jne
pop
gs
and
xchg
sbb
inc
mov
xor
out
mov
sbb
insb
imul
push
clc
jecxz
fadds
into
mov
xchg
popa
cmpsl
mov
sub
cmpsb
scas
cwtl
sbb
test
outsl
jne
jne
dec
pop
or
mov
aad
icebp
sbb
gs
or
stos
inc
add
or
push
dec
aas
cmpb
mov
push
cmp
or
cld
push
xlat
sahf
and
sbb
sub
jae
imul
incl
sub
xchg
inc
ljmp
call
mov
ret
fnclex
and
dec
lock
add
and
ret
repnz
xchg
sbb
push
mov
das
adc
loopne
sub
fwait
sahf
in
cs
adc
sbb
or
and
jle
pushf
loopne
fdivp
jb
mov
sbbb
cmc
adc
ljmp
dec
xchg
cmc
shll
xchg
scas
push
mov
xchg
and
jle
or
and
mov
xchg
ret
repz
out
push
mov
pop
sub
add
xorl
xor
jmp
push
test
orb
sahf
lods
ret
shlb
push
pusha
and
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
jbe
rorl
push
jnp
add
and
jle
xchg
es
enter
imul
out
add
jo
dec
fwait
nop
push
add
gs
stos
mov
xchg
mov
fwait
xor
or
mov
xchg
cmpl
call
add
out
cmp
adc
enter
push
sub
pop
add
add
lret
add
add
add
pop
xor
pop
push
aam
sub
adc
lcall
cmpl
inc
inc
js
inc
int
repz
mov
xchg
or
mov
mov
loopne
and
dec
push
dec
push
ljmp
add
add
out
sub
push
push
add
rolb
jno
dec
mov
pop
test
jne
or
jl
mov
xchg
mov
stos
stos
js
rcrb
stos
pop
pop
or
out
aam
or
mov
mov
mov
cltd
and
add
add
pop
and
jns
dec
xchg
loopne
lea
pop
adc
filds
loopne
test
fstpt
mov
pop
inc
aam
loop
rolb
cli
orl
repz
outsl
out
ja
push
cltd
insb
pop
and
mov
out
mov
xor
sub
dec
jbe
dec
loop
lea
xor
repnz
je
xor
cmp
sbb
pop
lcall
cmp
or
jb
cmpsl
dec
fadd
incb
jae
dec
mov
xchg
push
pusha
mov
sarb
inc
add
and
dec
mov
or
loopne
out
and
mov
test
cs
fwait
add
mov
cmp
bndldx
stos
test
aam
xchg
dec
xor
cmp
mov
movb
test
dec
xchg
iret
inc
out
and
push
cld
not
in
fadds
sbb
iret
dec
sbb
test
out
push
or
loop
je
jne
shl
and
inc
mov
jl
inc
rol
test
out
mov
jl
dec
int
lock
fs
aam
mov
inc
jge
popa
pop
xor
mov
loop
add
hlt
test
lds
in
push
mov
test
lcall
pop
push
aaa
dec
add
cli
cmovg
bound
pop
dec
popa
sub
xor
pop
add
xor
inc
lock
addb
inc
mov
jecxz
inc
add
mov
cmp
jl
inc
pusha
or
cmp
and
or
mov
mov
lods
xchg
test
into
out
mov
and
add
fdivrl
and
loop
xorb
lods
cld
add
or
sbb
jge
cmovbe
and
pop
scas
dec
and
rcl
jecxz
sub
shlb
add
add
cli
or
stos
adc
fildl
add
test
and
adc
mov
pop
xchg
repnz
pop
sub
sub
adc
adc
adc
or
nop
sub
push
and
adc
stc
cld
test
or
adc
stc
and
sbb
in
sbb
enter
adc
mov
and
adc
sbb
out
leave
push
adc
loopne
pop
mov
or
xor
mov
shll
fs
xor
push
lods
mov
scas
push
outsb
sbb
in
jne
inc
inc
clc
xor
jmp
xor
or
xchg
add
add
mov
inc
mov
sub
cmp
ja
adc
test
push
dec
jmp
fs
fisubrl
jl
mov
rolb
pop
jmp
jle
sub
dec
ss
jp
adc
jmp
pop
adc
jmp
sar
mov
jmp
cmpsl
mov
mov
lods
mov
or
testb
das
mov
jle
adc
push
cld
or
xchg
xor
jmp
dec
push
xchg
jno
push
mov
in
jbe
push
lods
jle
shll
cmp
fs
pop
push
jmp
mov
movsb
jno
stos
mov
jae
mov
ret
insb
ss
xchg
dec
sbb
loopne
insl
cmp
pop
jge
pop
outsb
idivl
mov
jbe
nop
add
jne
fisubs
and
dec
jae
imul
sbb
pop
or
and
fiaddl
and
lock
adc
call
decb
faddp
out
push
sub
jle
pop
cmp
in
orl
cmp
scas
push
and
addl
std
xorb
jmp
and
jle
xchg
scas
call
mov
shll
test
adc
mov
fsts
pop
cmp
rcrb
xchg
scas
testl
and
rcr
hlt
pop
add
bound
call
jmp
cld
push
sbb
fdivrs
cli
and
sub
stc
std
add
rclb
xor
std
jecxz
add
mov
push
out
pushf
jmp
push
cwtl
pop
mov
xor
inc
mov
mov
hlt
pop
push
push
push
imul
inc
dec
incl
xchg
sbb
or
jge
neg
shll
mov
dec
adc
mov
lcall
test
cmp
cli
sahf
mov
sbb
lods
push
aam
ret
jge
mov
popf
fnstsw
add
sub
xor
jne
add
xchg
inc
adc
inc
xabort
jo
out
dec
test
add
xchg
cli
push
inc
mov
ljmp
rorl
test
add
mov
dec
mov
pop
cmpb
mov
add
mov
decl
mov
mov
ret
inc
mov
jne
and
shlb
and
not
sbb
ja
aad
rcrb
ja
mov
pop
mov
jl
pop
int
movb
testl
adc
jne
or
jne
das
fwait
pop
imull
into
jne
inc
or
cmp
mov
jae
cmp
jne
hlt
int3
add
adc
xchg
jne
mov
hlt
shrb
test
rcrl
mov
jbe
lea
cmpsb
cmp
mov
mov
movsb
push
scas
hlt
insl
add
sbb
cld
sbb
loope
jns
dec
lock
ja
xchg
push
inc
and
push
js
subl
shr
mov
pushf
sub
lock
stc
jg
add
mov
inc
sbb
adc
push
js
enter
fcoml
lods
add
or
shr
add
rcll
inc
lock
mov
jg
or
movsb
clc
lret
sub
mov
xor
add
notb
mov
int
fwait
adc
dec
fcom
insl
fadd
loopne
roll
mov
out
or
mov
sahf
dec
les
jne
insb
mov
dec
icebp
test
enter
fcoms
or
sbb
mov
adc
pop
add
fiaddl
sar
pop
add
push
adc
push
call
or
scas
fidivl
clc
fidivrl
jb
insb
pop
and
push
fmull
cs
dec
ja
xorb
popa
dec
add
cmp
test
mov
imul
push
push
into
jmp
scas
push
scas
sti
dec
arpl
add
push
les
arpl
add
lcall
sbb
das
out
sarl
sub
add
negb
repnz
sub
movups
jo
int3
and
ret
or
sub
test
call
xchg
xchg
add
push
push
mov
cmp
cmp
jl
cmpsl
push
jo
call
repz
jp
out
popf
xorb
lods
mov
testb
add
lahf
push
mov
inc
add
sti
test
hlt
xchg
jne
pop
jne
cmp
add
sub
or
mov
lcall
rorl
dec
pop
cmp
and
test
pop
push
xchg
imul
jg
adc
inc
cs
or
xchg
cmp
je
or
out
mov
jg
call
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
add
mov
add
add
mov
inc
negl
inc
insl
pusha
cs
outsb
fisttps
les
xchg
pusha
or
add
or
sub
lahf
xor
rolb
shl
xor
test
dec
xchg
out
mov
hlt
push
add
push
adc
xor
shlb
and
pusha
movsl
pop
inc
lar
testb
sub
orb
xchg
mov
and
mov
rorb
or
add
push
jmp
adc
adc
mov
push
push
pop
je
pop
clc
jmp
cmp
mov
pushl
or
aas
sub
movb
lea
jae
sarb
add
loopne
cmp
ficoml
leave
icebp
mov
es
add
add
lcall
lret
jmp
sub
add
sub
pop
xor
push
mov
dec
add
xor
pop
je
inc
out
adc
jns
call
es
xlat
movsb
fiaddl
xor
push
aam
daa
xchg
or
add
testb
stos
add
shrb
cli
inc
add
sub
test
xor
sub
add
xor
pop
and
push
push
orb
jmp
dec
pop
insb
push
shlb
sbbb
ja
push
ret
jbe
rcll
loope
clc
dec
add
jge
mov
rcll
fcoml
lahf
adc
push
xor
shlb
enter
xchg
add
mov
shlb
or
mov
push
enter
inc
das
or
add
push
mov
lea
jle
and
pushl
ret
xor
xchg
or
jge
adc
testl
in
arpl
call
xchg
or
mov
rorb
je
popa
neg
adc
pop
add
js
add
mov
lret
lret
out
xor
cltd
jp
lods
inc
add
test
or
sbb
lahf
fadd
jmp
gs
ss
add
nop
mov
enter
sbb
test
cmp
testb
xor
adc
mov
loopne
js
push
into
mov
sahf
mov
dec
inc
jo
call
xor
leave
and
add
mov
xchg
nop
and
popf
rolb
dec
and
mov
lds
adc
fistpl
sub
loopne
mov
aas
mov
jg
ret
daa
xor
shll
adc
sahf
mov
jmp
out
loope
outsl
scas
test
movb
adcl
into
mov
or
adc
xlat
or
sbb
or
xchg
cmp
cmpsb
lret
adc
mov
pushf
push
movswl
xor
jo
les
int3
sbb
mov
pavgb
add
mov
add
dec
shrd
push
jle
jle
loop
cmp
ss
jl
rcl
xor
xor
imul
stc
inc
add
dec
jmp
pop
into
in
xchg
clc
sub
xor
mov
shrb
inc
loopne
addb
add
adc
pop
mov
inc
add
adc
cmp
subl
and
mov
mov
or
xchg
lds
push
sub
or
jg
shl
fidivrl
rorl
sbb
inc
shll
mov
jns
add
jbe
add
and
sub
xlat
int
push
jg
lods
jb
jb
lods
cmp
dec
pop
add
jb
or
sbb
sarb
test
add
jae
stc
mov
or
sub
mov
push
scas
cmp
aam
adc
push
and
les
loop
call
mov
add
and
and
int3
xchg
cmp
xor
push
call
lock
inc
sub
add
inc
sarb
mov
jne
adc
jl
or
popa
push
mov
pop
xor
add
add
out
into
mov
es
xchg
adc
loopne
test
pop
dec
shrl
xor
pop
push
rolb
jne
cmp
dec
loop
push
cmp
inc
lret
jbe
rol
or
shlb
xor
lea
mov
stos
sub
icebp
adc
fldl
rcll
push
jmp
insl
cmp
add
cld
jl
hlt
outsb
call
or
js
or
mov
inc
rorb
shll
mov
sbb
scas
pop
ret
jge,pt
jle
inc
jle
gs
or
pop
aaa
lock
frstor
sbb
pop
cmp
inc
je
mov
insb
sbb
cmp
xor
ss
adc
and
cmp
sbb
or
lcall
mov
or
mov
enter
and
or
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
and
fs
and
push
mov
and
dec
rol
bound
stos
cmp
movl
sahf
xchg
arpl
pinsrw
cmp
dec
fldl
dec
jp
inc
push
inc
flds
push
data16
sbb
sbb
cmp
xor
fcomps
dec
inc
pop
inc
push
iret
push
sub
lds
cmp
jmp
ret
lret
insl
stos
xchg
sub
push
aaa
add
insb
cmp
pop
cmp
push
ficompl
xor
dec
cld
inc
insl
aaa
lea
push
and
cmpsl
push
dec
popa
lock
popf
xorl
mov
pop
orb
dec
dec
aaa
cli
fwait
add
repnz
mov
aaa
sub
ljmp
mov
lock
cmp
sub
jbe
sub
movsl
mov
imulb
mov
adc
add
pop
jmp
insl
sarl
sahf
movsl
xor
mov
cmpl
pop
lret
sub
mov
or
push
data16
mov
mov
lea
dec
mov
or
jp
pop
insb
cmp
push
call
sarl
cld
xor
aad
movsb
das
loop
or
dec
sub
je
mov
xor
adc
js
mov
cld
cmp
mov
testb
jo
xor
jl
or
int
lock
stos
into
or
or
add
rol
icebp
dec
add
xor
loop
arpl
nop
add
out
adc
or
xchg
sbb
cmp
inc
dec
push
jae
push
jmp
or
jmp
testb
je
push
ljmp
adc
push
enter
sbb
scas
ss
jae
xchg
adcb
shll
rcrl
sub
mov
mov
aaa
xor
mov
push
push
and
rcll
es
adc
stos
jo
add
sbb
lcall
arpl
inc
in
xor
pop
insl
cmp
cmpsl
mov
sbb
je
sbb
push
leave
push
imul
lea
mov
cwtl
adc
fs
pushf
loopne
xor
mov
dec
imul
push
sbb
and
jo
push
test
add
fmulp
mov
sbb
hlt
fsts
xor
rcrb
dec
push
mov
mov
icebp
add
ret
lea
xrelease
sbb
in
xlat
je
dec
sbb
inc
xlat
add
jge
notl
cmp
cmp
push
sbb
push
ret
lcall
iret
sbb
das
add
jle
or
dec
fiadds
arpl
and
xor
cmp
clc
pop
daa
sbb
inc
jmp
fbld
xchg
sbb
add
jo
arpl
cwtl
pop
jnp
je
sbb
xor
stc
inc
inc
test
data16
sub
sub
jecxz
mov
cmp
xchg
fmuls
ss
je
fidivs
mov
pop
mov
jmp
test
mov
mov
sbb
xor
fistps
sub
das
adc
divb
pop
testl
inc
repz
pop
xchg
inc
loopne
push
repnz
push
ret
inc
jnp
mov
sbb
lea
mov
adc
or
mov
inc
hlt
push
jne
cld
cltd
mov
sub
mov
dec
movsb
xchg
mov
jmp
lret
rcrb
cwtl
sbb
fistl
sysexit
or
ljmp
inc
jmp
test
adc
leave
jecxz
add
lds
fimuls
nop
adc
movzwl
nop
sub
movsl
sbb
sbb
jo
sbb
test
loope
pop
mov
lea
dec
inc
and
int
dec
xchg
scas
adc
sbb
xor
and
insb
mov
js
sbb
jo
arpl
push
lock
fldl
sub
add
xor
jmp
pushf
popa
inc
xor
sti
and
xor
push
cmp
inc
add
jno,pn
jge
adc
sbb
cmp
mov
push
in
mov
pop
add
andl
sub
inc
pusha
fildll
lret
adc
xchg
add
aas
and
shr
add
or
push
mov
jnp
shr
shr
int3
imul
lret
mov
add
add
or
bound
scas
push
add
shll
in
mov
popa
cld
stos
mov
cmp
test
mov
movsb
fildl
add
bound
push
xchg
mov
jp
clc
add
fiaddl
sub
pop
sub
lret
add
sbb
popf
dec
testl
cli
mov
or
or
mov
addl
adc
or
xor
mov
inc
adc
or
xchg
jb
enter
stc
out
decb
inc
jbe
pop
movb
lods
roll
shr
adc
add
mov
push
cli
and
mov
or
shl
andl
adc
aad
int3
xchg
cmc
sbb
adc
clc
stos
cmp
pop
pusha
imulb
or
test
adc
lret
test
je
je
mov
push
or
push
adc
and
dec
inc
cmp
fidivl
ret
js
hlt
sbb
sub
insb
in
add
and
push
negb
add
jnp
pop
call
cmpsl
push
mov
sub
jne
add
call
movsb
pop
ljmp
and
dec
and
and
xchg
cwtl
jp
cmc
mov
push
inc
ljmp
dec
ja
hlt
push
frstor
push
jle
mov
inc
in
mov
cmp
add
xchg
cmp
leave
inc
fstl
popa
xor
dec
cmp
lock
dec
fcos
xchg
jl
cmpb
jl
xor
cmpb
push
dec
loopne
idiv
insb
xor
inc
xchg
adc
pusha
and
push
rorl
adc
push
adc
shrb
push
mov
push
push
and
aam
iret
ds
inc
adc
lret
inc
and
aam
pop
or
pop
xchg
inc
cmp
sub
and
inc
das
push
inc
adc
add
call
jbe
dec
add
imull
stc
and
enter
cmp
loope
into
adc
xchg
stos
adc
add
rcrl
gs
add
je
movsl
inc
add
mov
pop
sahf
sub
add
pslld
mov
or
pop
push
mov
push
lods
push
icebp
adc
push
jge
rorb
push
inc
jb
hlt
aam
pop
jmp
push
in
xchg
mov
and
je
pusha
push
scas
pop
stos
lods
mov
in
pop
hlt
xchg
sub
inc
inc
div
fcomps
fiaddl
sbb
sbb
inc
inc
js
jns
sbb
adc
adc
xor
enter
fcoms
test
cltd
push
inc
and
fsts
fcomi
sbb
sbb
sbb
and
adc
repnz
fsubs
daa
pop
pop
pop
stos
popa
mov
jae
orb
sbb
ret
ret
adc
and
shr
test
stc
mov
sahf
mov
and
not
cld
lock
je
testb
or
add
iret
and
push
test
aaa
or
call
mov
and
pop
xchg
lcall
outsb
call
xchg
adc
ds
cmp
push
or
into
jbe
jns
sub
mov
aas
xchg
dec
adc
ret
test
sub
bound
mov
add
push
lret
dec
xor
iret
hlt
fs
das
bound
adc
sahf
jns
mov
push
pop
and
rcrb
cmp
jle
in
pusha
jne
gs
mov
sbb
mov
or
pop
dec
cmp
insl
ljmpw
ss
dec
pushl
push
jo
enter
jg
or
inc
jge
sbb
dec
xor
cmp
sub
mov
testb
sbb
push
sub
leave
je
imul
mov
mov
mov
mov
out
xor
adc
es
mov
je
les
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
shll
cltd
shll
leave
adc
mov
xor
idivl
pop
add
nop
jp
dec
add
dec
in
add
mov
cmp
fidivl
scas
ret
ja
clc
addb
mov
pusha
xor
pop
pop
jne
push
es
scas
sbb
das
test
xchg
ret
jmp
mulb
je
iret
push
pop
mov
mov
cmp
push
loopnew
mov
lret
sbb
in
mov
pop
dec
xchg
lea
bnd
cwtl
jne
enter
add
cltd
jnp
xor
pusha
adc
stos
xchg
mov
test
mov
mov
cmpb
ljmp
aam
add
outsb
xlat
mov
jno
cmp
push
lea
pop
inc
jp
inc
cltd
and
xor
xchg
cs
xchg
sub
xorl
push
xorb
sbb
in
or
bound
jae
adc
arpl
inc
test
add
mov
sbb
add
cmpsl
std
adc
movb
push
rcl
sarl
out
aam
xlat
fsubrs
mov
out
fstpt
mov
loope
xchg
fidivrs
movb
jmp
or
in
rorb
into
or
cmp
test
mov
mov
divb
add
mov
mov
add
scas
mov
add
sbb
mov
push
add
call
test
push
fs
call
cmp
jmp
into
cmp
das
or
push
sbb
push
fwait
and
adc
addl
sbb
fldcw
adc
scas
mov
scas
jmp
sbb
sbb
adc
decl
test
or
mov
inc
js
mov
xor
sbb
neg
jne
aam
loop
mov
aam
out
loop
sub
and
cwtl
pushf
sub
adc
or
test
adc
es
adc
sti
add
mov
pushf
sub
outsl
cld
sbb
mov
adc
loopne
adc
les
or
dec
movb
or
cmp
lcall
jl
lds
std
sbb
loope
into
and
lea
pop
sbb
subl
jae
xchg
andb
add
sub
mov
mov
pmulhuw
ljmp
mov
inc
or
jl
mov
and
push
shl
test
pop
pop
mov
rolb
push
mov
push
lea
bound
xchg
mov
add
dec
push
test
into
movsb
xchg
cmpsl
inc
ja
or
ret
movsb
imul
inc
repz
addl
add
int
mov
jge
jl
ret
imul
rorb
cld
stc
jle
jle
jne
inc
popf
orb
enter
pop
and
sar
loopne
clc
sbb
cmp
rorb
push
sub
out
mov
push
lret
and
dec
jae
movl
lods
cli
push
scas
shlb
dec
shrl
in
out
sarl
add
mov
or
dec
sub
mov
lods
lock
sahf
dec
lock
inc
sub
div
cli
cli
sub
cmp
inc
cli
div
loop
inc
add
imul
mov
cwtl
nop
loopne
mov
inc
jnp
sbb
adc
mov
xchg
nop
ret
push
xor
push
clc
addl
leave
popl
out
ljmp
jecxz
clc
mov
push
dec
data16
rolb
lock
jb
xor
push
imul
cmpsl
add
pop
mov
repnz
dec
pop
fdivrl
loop
out
cmp
xchg
mulb
jb
pop
ds
rolb
mov
repnz
add
push
into
or
repnz
pop
lea
jne
fdivrs
aam
jbe
mov
inc
inc
test
dec
ss
cwtl
mov
push
jle
push
repz
dec
pusha
and
xor
lret
inc
push
pop
call
movsb
repnz
cmp
cld
lea
fcmovu
mov
mov
sub
lods
lods
lahf
mov
and
rolb
adc
aas
sbb
div
mov
test
test
jge
or
sbb
cs
and
and
jmp
add
movsb
jne
sbb
gs
lods
pusha
inc
ljmp
out
dec
cmc
out
jge
add
sub
insb
lock
rcrb
adc
inc
add
ret
insb
jnp
inc
mov
push
add
push
nop
pop
xchg
xor
cmp
cmp
adc
dec
mov
out
adc
sub
adc
push
test
jne
adc
pop
add
or
andps
mov
out
daa
hlt
pop
sbb
neg
and
mov
insl
call
dec
pop
filds
loopnew
fcoms
sahf
in
inc
add
mov
xchg
cltd
ss
push
adc
addl
dec
lcall
add
push
std
cmpsl
repnz
mov
add
sub
clc
ds
sub
out
enter
sbbb
sbb
jbe
mov
mov
clc
js
add
enter
inc
push
mov
cmp
push
shrb
xchg
push
mov
and
dec
int3
negl
jnp
add
add
decb
lock
lock
inc
dec
call
in
jmp
nop
dec
mov
dec
cmp
jge
sub
add
cmp
movb
dec
cmp
fdivrs
mov
add
add
fadds
sub
pop
add
pop
and
xor
mov
jp
jne
loopne
roll
or
pushfw
xchg
data16
lret
or
push
sahf
inc
iret
xchg
adc
adc
dec
movsl
test
or
adc
jp
mov
and
ret
lcall
call
lret
ret
and
adc
sub
imul
or
push
or
jmp
mov
xchg
push
or
add
or
pop
pop
scas
xchg
sbb
cltd
add
adc
push
add
sbbl
ret
dec
lret
push
mov
xchg
adc
cmp
add
testl
lret
and
xchg
out
pop
cmp
xor
into
pusha
inc
jmp
and
rcrl
test
xor
mov
ret
mov
prefetchw
testl
xor
cmp
or
inc
push
pop
jae
or
or
dec
push
imul
inc
or
push
or
cmpsl
inc
jl
or
mov
shl
mov
pop
or
inc
mov
add
add
and
and
cmp
popf
and
and
jecxz
inc
jge
mov
ret
or
into
add
pop
jg
clc
and
push
pop
mov
mov
pusha
inc
mov
out
sbb
inc
stos
adc
and
add
xchg
cwtl
adc
xchg
push
add
jmp
loop
nop
test
stmxcsr
push
add
cmp
test
cltd
ss
or
add
or
add
jbe
jle
pusha
pmaxub
mov
xor
inc
jg
test
pushf
cmp
into
into
mov
pop
and
pop
sub
lock
pop
or
cwtl
dec
sub
pop
mov
ja
or
shlb
or
pop
add
pop
les
shlb
pop
lcall
add
leave
lahf
pop
test
ja
adc
add
add
or
jns
add
test
movsb
stc
and
sbb
je
and
sub
xor
sub
jmp
daa
daa
xchg
or
push
mov
cs
testb
push
scas
or
in
gs
dec
xchg
push
sbbb
pop
shll
inc
xchg
jo
push
lods
pop
fmul
cmp
mov
mov
test
push
dec
and
cmp
adc
sub
push
sahf
jle
xor
ficomps
ss
ficoms
adc
add
daa
or
and
std
sbb
enter
loop
xlat
shrb
arpl
push
jl
or
sub
mov
add
loop
dec
push
mov
inc
push
in
or
fisttpll
aam
xlat
mov
out
push
adc
cwtl
dec
out
dec
orb
scas
add
jmp
nop
movsl
push
and
or
lret
or
out
je
pop
pop
push
call
jle
lods
cmp
jbe
inc
inc
xor
mov
inc
fdivrs
jo
lds
popa
repz
into
mov
jo
jbe
adc
jmp
testb
push
jecxz
sbb
cmp
add
das
or
test
repz
mov
pop
dec
push
and
test
and
call
popf
mulb
test
arpl
xchg
in
or
pusha
test
sbb
mov
mov
adcb
cmpb
jle
mov
pushl
inc
repnz
test
push
xor
jne
sbb
pop
and
jge
pop
popf
push
fcoms
sub
loopne
pop
sbb
out
repnz
jge
sbb
xor
cwtl
push
inc
inc
sbbl
je
jge
dec
push
mov
fcoml
call
xor
xchg
dec
inc
sbb
xor
in
decl
rcl
incl
xchg
pop
jge
lea
rclb
mov
inc
fldcw
push
imul
xchg
loop
xchg
jl
and
call
cld
adc
push
xor
xchg
out
shll
cmpsb
nop
dec
push
arpl
push
nop
mov
or
add
mov
pop
popf
popf
fs
ss
add
imul
out
push
daa
jmp
push
push
xlat
inc
or
adc
sub
pop
mov
inc
cmpsb
lods
push
inc
mov
add
add
pop
jmp
xor
push
dec
xor
mov
inc
sub
or
pop
push
jne
push
inc
das
lods
pop
dec
cmp
movsb
nop
imul
xchg
push
fs
mov
xor
add
fisubrl
fdivrl
imul
inc
rcrb
sub
add
outsb
stos
popa
xchg
pop
mov
push
popa
ret
sbb
insl
xchg
pop
inc
add
inc
jle
mov
pop
xor
adc
and
test
mov
data16
mov
jmp
cmp
insl
mov
push
clc
inc
lock
lret
testb
sbb
xor
sahf
xor
mov
push
lock
jl
sub
ficomps
push
push
sarb
xor
roll
add
fadd
aad
js
gs
lods
in
inc
repnz
pop
nop
cmp
jge
scas
jae
fsubs
cmp
sub
loopne
jmp
dec
loop
subb
add
lcall
test
mov
push
sub
js
std
pop
subb
and
mov
inc
or
cld
sbb
add
push
xchg
push
sbb
jno
or
mov
pop
push
das
imul
push
sub
add
adc
les
movsb
gs
jb
loope
cmpsb
mov
and
push
adc
xchg
inc
out
inc
hlt
xor
or
sub
add
push
adc
push
mov
in
scas
pop
testb
push
and
jno
inc
inc
ds
push
mov
mov
shlb
xchg
cwtl
or
loopne
dec
cmp
xchg
sub
cmpl
pop
adc
add
mov
jmp
nop
and
sub
pushf
daa
data16
test
sub
inc
inc
adc
dec
inc
sbb
loopne
jg
data16
push
add
adc
mov
addb
aas
pop
popa
pop
or
lea
sbb
sbb
test
icebp
out
mov
xchg
add
and
cmpsb
jb
or
loope
and
test
sbbl
sub
out
adc
add
mov
adcl
mov
fbstp
add
fld
pop
xchg
fildll
sbb
in
jg
adc
jmp
fstps
icebp
ret
push
lahf
or
add
jmp
cmp
mov
das
fcomp
adc
test
adc
pop
sbb
bound
xchg
ja
and
in
fcmovbe
shrl
loope
dec
sarl
imul
xchg
or
gs
les
iret
mov
dec
jo
gs
or
incb
inc
push
cmp
gs
fcompl
cmp
lock
fs
in
insl
sbb
in
call
daa
adc
in
loopne
mov
xchg
sbb
ss
jg
jb
inc
es
cmp
push
or
pop
jns
xor
or
ds
leave
int
inc
dec
add
jnp
dec
lret
in
push
cltd
fmul
lock
pusha
sbb
bound
lock
adc
in
orb
dec
sbb
adc
adc
push
push
or
testb
add
adc
inc
push
cmp
cld
lahf
inc
add
in
mov
mov
adc
fs
shlb
mov
xchg
jl
sbb
jne
cmp
es
inc
inc
adc
imul
dec
jno
dec
add
lahf
push
std
cmp
lock
inc
xor
sbb
jbe
xor
fwait
cmp
fisubl
mov
fistpll
mov
icebp
andb
add
dec
or
mov
in
leave
or
and
cwtl
mov
push
mov
dec
add
xchg
sbb
test
movsb
cltd
sbb
les
ds
aad
mov
in
xchg
in
xor
jg
pop
mov
movups
ret
jo
arpl
inc
mov
cmpsb
mov
cld
add
and
test
mov
imul
add
lock
in
stos
or
add
sbbb
andl
andl
push
xor
or
jns
push
rolb
dec
push
int
imul
adcb
and
cmpsb
int3
dec
or
or
inc
aaa
clc
call
cmpsl
pop
cmpl
sub
es
xchg
fdivl
or
mov
aam
mov
call
shr
cmpl
int
cmp
test
inc
shrb
push
push
loopne
and
xchg
dec
es
push
xlat
sbb
adc
xchg
xor
leave
and
dec
cmp
inc
and
push
ss
insb
out
add
sbb
add
fisttps
cld
fsubl
jb
add
and
jb
int3
shr
aam
jns
add
or
and
push
pop
xlat
push
test
dec
pop
sti
in
in
outsl
cmp
mov
sbb
push
bound
adc
inc
orl
mov
xchg
je
sbb
inc
or
nop
xchg
loopne
push
insb
jecxz
adc
imul
data16
mov
es
movsl
push
nop
or
rsqrtps
mov
jmp
sbb
mov
movsl
aam
rcl
in
test
gs
int3
aad
or
jbe
daa
sub
fcmovnbe
pop
xchg
mov
pop
mov
add
push
test
jo
aam
mov
sbb
fs
cmpsb
sbb
sub
dec
jle
orl
fdivrs
ret
sub
jns
test
adc
rorb
lock
mov
add
mov
pmulhuw
jo
push
mov
mov
nop
dec
sub
or
push
jno
shlb
test
xor
mov
loopne
in
mov
in
mov
adc
dec
adc
mov
xchg
cli
inc
mov
inc
inc
outsl
fmuls
or
int3
out
xchg
out
shrb
enter
testl
shlb
sbb
rclb
dec
addl
pusha
inc
and
in
adc
add
jae
aam
or
mov
pop
pop
xor
push
add
daa
mov
test
lods
mov
daa
daa
daa
daa
mov
daa
daa
daa
enter
inc
test
and
push
pusha
lds
mov
sbb
xor
cmp
sbb
rorl
xchg
push
pop
mov
shl
lods
pop
test
fmuls
xor
nop
cmc
xchg
popa
pop
dec
scas
fsubs
or
pusha
push
cmc
call
xchg
mov
or
das
cmp
les
lock
sbb
or
xchg
pop
in
psrld
add
lea
push
cwtl
adc
unpcklps
inc
arpl
je
adc
rep
fs
xor
fmuls
mov
movsb
adc
jo
fists
enter
and
mov
test
stc
sub
add
test
leave
pop
cwtl
pop
ss
in
ret
mov
push
sbb
push
pop
push
push
imul
and
add
sbb
inc
sub
xor
repnz
pop
pusha
dec
jb
cmpsb
cltd
fs
cwtl
loop
js
sbb
cmpsb
adc
pop
aad
test
mov
jb
xchg
rcll
and
cmc
mov
push
mov
nop
jbe
xchg
test
mov
lock
inc
insb
shrl
dec
in
sbb
jo
xchg
aam
xchg
mov
fsubp
xor
jb
das
push
adc
nop
or
pop
xor
stc
sbb
pop
jo
jne
sahf
adc
adc
cld
add
je
je
sbb
mov
dec
or
adc
add
jno
xchg
cmp
push
movsb
lcall
or
cwtl
push
shlb
add
mov
enter
inc
xor
sbb
fistl
or
cmp
aam
xor
adc
push
fadds
xor
xchg
fcoms
pusha
push
lds
pop
add
adc
enter
or
and
cwtl
test
mov
subb
aaa
call
sbbb
lcall
sub
pop
pop
lcall
sbb
cmp
daa
inc
rol
inc
xlat
add
ret
add
sbb
cwtl
incb
push
sub
add
scas
add
xchg
jmp
jno
pushf
loopne
push
xor
pop
das
jg,pn
fdivrl
movsb
jl
shrb
add
pushf
es
or
and
inc
xor
sub
fsubl
xchg
sbb
out
nop
decb
popf
sbb
adc
std
cmpsl
in
fcoms
or
pop
in
push
hlt
lock
aam
mov
rorl
cmp
mov
in
mov
mov
adc
or
fsubl
xor
cmp
loopne
mov
push
adc
mov
inc
sub
nop
add
sti
pushf
lods
aad
push
xchg
xor
mov
nop
daa
push
outsl
enter
pushf
pushf
fsubl
mov
int3
enter
pushf
pushf
sarb
mov
cwtl
mov
pushf
sbb
fsubrs
pop
rolb
pop
dec
add
lcall
pop
enter
or
insl
push
test
lcall
or
or
and
mov
testb
mov
mov
cmp
ss
movsb
xchg
nop
mov
sbb
jb
xchg
mov
or
pop
lods
test
andl
test
xor
outsb
mov
adc
add
adc
int
inc
ret
adc
fcmovnu
shlb
mov
in
lcall
sub
xchg
shlb
call
sub
scas
cld
gs
add
mov
xorb
add
inc
mov
rcrb
mov
jb
xor
xchg
and
fdivr
and
sub
into
lock
test
xchg
fnstcw
inc
mov
cmp
daa
or
push
dec
movsl
mov
es
dec
fistpl
insb
movsb
sbb
dec
mov
sbb
in
call
jecxz
mov
push
pop
jne
ficoml
test
inc
push
cmp
es
loope
mov
and
mov
in
mov
add
and
jl
stos
dec
popa
cmpsl
xor
jmp
jnp
jmp
les
or
push
cmpsb
fcom
push
rorb
mov
add
std
gs
xor
test
adc
adc
sub
xor
sbb
adc
jecxz
add
stos
in
call
std
sbb
std
jns
enter
adc
mov
add
es
sti
insb
xchg
test
cwtl
dec
xor
and
movsb
test
add
pop
mov
and
push
dec
or
sti
and
or
fucomp
or
xor
xchg
rcll
repnz
movsb
stos
fdiv
pop
stos
addb
cmp
dec
inc
xor
rclb
mov
inc
aam
nop
push
mov
enter
std
xor
cmp
dec
adc
inc
aam
mov
pop
sarb
pop
xor
in
sbb
mov
fcoms
fmuls
push
xchg
mov
pop
mov
and
fsubrs
xor
jo
xor
jae
roll
jo
insl
or
fwait
in
adc
xchg
outsb
adc
dec
lds
cmpsb
in
lds
lock
lret
daa
cmp
add
outsl
mov
xor
adc
mov
xchg
stos
push
sarb
and
outsl
in
sub
movsl
xorb
repz
sub
fsubrs
lds
test
mov
jb
loop
push
mov
xchg
loope
test
push
rcr
xchg
dec
fwait
movsb
or
inc
hlt
mov
xor
shlb
dec
dec
jo
mov
fwait
mov
movsb
cmp
adc
fisubl
sbb
insb
adc
inc
xchg
pusha
out
loope
add
stc
pop
loopne
sub
mov
loope
push
xchg
mov
dec
cmc
outsl
mov
insl
pop
bndldx
test
in
mov
in
dec
sbb
les
xor
mov
sbb
int
fisubl
sbb
sub
jns
in
mov
ffreep
or
gs
lea
push
push
xchg
cmp
aam
pop
mov
dec
add
mov
shlb
or
test
xchg
add
jo
popa
aam
scas
cmp
rsqrtps
jge
add
loopne
push
fsubrs
and
push
adc
popa
mov
push
mov
xor
fcoms
test
rorb
lea
or
sbb
add
xchg
mov
fcoml
loopne
loopne
icebp
fildl
mov
push
pop
push
call
jbe
movsl
pand
gs
pusha
fsubs
sub
je
mov
push
and
jne
mov
lcall
xchg
and
add
cmp
sarb
mov
sti
inc
mov
pop
aad
mov
mov
repz
sbb
push
mov
inc
lods
fs
fildll
ss
movsl
int3
mov
loope
and
aad
or
cmp
pop
sbb
scas
lods
test
mov
iret
and
mov
or
in
enter
adcb
xorl
inc
dec
jge
pop
movsb
and
pop
filds
mov
push
enter
add
xor
lcall
in
out
or
sub
repnz
out
sbb
xlat
or
sbb
inc
test
inc
mov
addb
cmovns
adc
or
leave
add
adc
in
lret
add
sbb
cmp
nop
outsl
adc
sbbl
cmp
mov
aad
pusha
sbb
sbb
sub
and
cwtl
jo
pop
mov
and
inc
test
icebp
loop
add
mov
arpl
outsb
push
fsubr
rol
out
shrb
hlt
mov
fisubl
cmp
add
les
sbb
aaa
mov
adcb
in
pop
rorb
lock
pusha
shll
adc
mov
nop
or
or
nop
lea
je
mov
fs
xchg
pusha
scas
pop
je
test
xchg
push
nop
sbb
lods
fwait
or
in
dec
xor
xlat
push
addb
fwait
in
mov
nop
and
dec
cwtl
pusha
mov
and
push
jno
adc
in
enter
xchg
ret
sub
or
ret
shrb
aas
les
jo
cmp
cltd
inc
shl
inc
cmp
sub
int3
mov
loopne
jb
jns
pop
or
adc
and
mov
ret
cmp
cltd
js
mov
int
les
adc
dec
outsl
mov
call
and
imul
insl
adc
pushf
pusha
mov
adc
pushf
push
sbb
mov
dec
sbb
roll
xor
or
subb
and
loope
push
les
mov
lcall
dec
stos
push
insl
jmp
push
stc
xchg
fdivs
add
nop
or
fs
or
adc
popa
inc
push
cltd
and
adc
and
insl
mov
xor
in
jge
nop
mov
push
ret
inc
in
leave
xorb
add
or
orb
or
xor
rorb
adc
shlb
cmp
add
fists
and
mov
cmpsl
in
aam
add
sub
jo
std
xlat
cmpsb
pop
mov
inc
lcall
jns
es
in
xchg
push
add
lods
add
push
sbb
arpl
jno
or
sub
mov
sbb
adc
leave
push
pop
leave
insl
mov
les
mov
call
imul
fiaddl
shl
sbb
or
inc
mov
ficoml
rorl
test
test
mov
cmp
add
aam
pusha
lret
sub
dec
dec
fwait
jmp
adc
int3
in
pop
xor
in
or
pusha
push
ret
orb
test
or
popf
sub
shll
int
mov
addb
aad
loopne
xor
adc
into
push
pop
mov
stos
in
and
test
sbb
dec
mov
and
and
cmp
shrb
iret
lcall
call
sbb
adc
and
inc
shr
adc
dec
dec
fwait
mov
adc
es
mov
aam
in
in
xchg
dec
in
adc
or
or
add
insl
enter
push
pop
arpl
arpl
pop
in
or
shlb
dec
xor
add
fmuls
shll
fs
sub
sbb
sbb
stos
scas
icebp
xor
xchg
inc
mov
push
nop
dec
mov
divb
in
pusha
xchg
jl
jne
pop
movsb
imul
pop
insl
add
mov
adc
adc
push
shrb
mov
push
dec
pop
nop
mov
stos
dec
cmpsb
dec
jb
pushf
adc
xchg
xchg
js
fs
fs
dec
jo
mov
shll
je
nop
push
sbbb
and
inc
lods
adc
jo
shlb
pop
enter
mov
or
add
push
xor
cld
stc
and
xor
xchg
mov
jo
push
movsb
ficoml
cltd
cmp
je
jb
scas
test
fs
add
lds
jbe
push
insb
adc
mov
lds
enter
adc
lea
inc
mov
cmpsb
sbb
adc
aad
fdivs
fmul
mov
xor
fadds
pop
xor
bound
xorb
outsb
adc
dec
rcl
movsl
mov
fcoms
sub
fsubl
test
test
mov
and
add
dec
aam
ljmp
xor
test
sub
in
and
fsubs
inc
test
add
je
sub
fistl
push
sub
fcomps
lods
test
cmpb
stos
lea
sub
stos
inc
sbb
pop
adc
push
sub
imul
ret
cltd
sbbb
mov
push
xor
push
rcl
add
add
lcall
addr16
lock
push
fisubrl
push
fcom
ficoms
clc
inc
lock
xchg
cmp
hlt
xchg
push
dec
jl
imul
sbb
sub
adc
inc
inc
adc
sbbl
mov
pop
mov
push
shl
lea
hlt
cltd
loopne
adc
or
mov
int3
sbb
and
insb
xor
ss
mov
jne
mov
jo
xor
outsb
mov
inc
pop
sub
stc
and
or
pushf
or
and
mov
add
adc
enter
rorl
test
rorb
jns
fmull
mov
lahf
aam
push
leave
jl
jo
sbb
pop
in
mov
pop
adc
mov
sbb
pop
pusha
dec
cmp
push
cltd
subb
jnp
imul
imul
or
inc
test
adc
jl
inc
faddl
call
cmp
push
fcmove
ret
or
push
xor
mov
mov
loope
xor
enter
xchg
in
cld
movsl
pop
outsb
int3
in
test
add
mov
add
push
orb
push
dec
mov
call
jnp
xor
aam
mov
and
add
add
sti
mov
call
add
jnp
insb
mov
pusha
or
sti
lods
jb
test
stc
push
enter
or
repz
and
cmp
sub
and
adc
loope
or
cmp
mov
sbb
int3
popf
adc
push
and
iret
cwtl
lret
pop
shlb
sarb
pop
xchg
xor
and
fs
add
pop
adc
cmp
fs
push
insb
xchg
ja
or
scas
stc
xor
lods
out
adc
pop
sbb
add
fstps
push
adc
sub
repz
sbb
xor
add
pop
insl
push
add
sahf
mov
inc
insb
fwait
int
inc
push
mov
addr16
mov
out
inc
sbbb
push
inc
jmp
or
cmp
dec
mov
fistpl
or
jnp
mov
and
mov
or
and
shlb
xchg
sub
rcll
mov
mov
jns
mov
mov
dec
test
push
and
cmp
repz
or
clc
add
ja
xchg
stos
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
add
les
ficoms
cmp
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
decl
jp
xor
xor
sub
daa
adc
mov
rcll
xchg
mov
lcall
or
outsl
cmp
adc
push
lahf
out
or
pop
cmp
repz
mull
jno
decl
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
xchg
jb
gs
xor
cs
adc
popa
and
popa
xchg
divb
outsb
push
mov
mov
push
jnp
popa
rdpmc
add
pushl
sub
cmp
loop
mov
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
rcr
mov
add
gs
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
dec
push
inc
inc
gs
insl
loopne
in
into
and
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
mov
inc
jo
imul
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
scas
clc
sbb
dec
xor
jne
dec
js
push
jne
jae
cmp
ja
pop
dec
inc
mov
popa
das
jo
or
jb
inc
adc
xor
test
or
dec
push
dec
lcall
sub
pop
cmp
loop
inc
mov
addr16
jno
inc
pop
and
dec
ljmp
sub
sub
cmp
aad
loope
pop
pop
mov
fldenv
jl
jle
add
arpl
xchg
sbb
addr16
and
imul
js
pop
or
adc
clc
pusha
pop
pop
push
inc
insb
jae
stc
lcall
mov
inc
inc
or
pop
insb
mov
jo
insl
and
jb
jbe
mov
sbb
mov
dec
dec
inc
sbb
and
pop
mov
incb
push
xor
sbb
push
jo
imul
push
pop
mov
je,pn
adc
and
mov
in
je
sub
and
fs
add
imul
cs
push
insb
xorb
inc
popa
and
xor
scas
mov
sbb
xor
and
mov
push
xchg
int
aas
xor
or
scas
loopne
dec
mov
lcall
imul
dec
mov
and
or
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
xchg
mov
add
and
push
add
cmpb
fisubrl
imul
jb
loopne
outsl
data16
aaa
cmpb
mov
addb
das
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
insb
imul
out
xor
int3
or
xor
cmp
push
lcall
mov
or
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
or
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
fwait
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
jb
push
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
pushl
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
and
cmpsb
gs
popa
dec
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
xchg
xchg
jecxz
jae
imul
xchg
adc
add
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
fnstcw
pop
hlt
and
or
pusha
add
out
int3
mov
or
sub
add
div
in
sbb
addb
add
xchg
mov
add
orb
fildll
cmpb
push
and
sub
jb
lods
fnstcw
adc
push
jo
add
mov
inc
add
loop
push
stos
fwait
push
inc
inc
int3
js
jo
jmp
in
jge
rorb
sbb
in
lea
mov
nop
xchg
xchg
insb
add
clc
addb
test
dec
push
adc
test
dec
sub
ds
or
cmp
pop
pop
add
pushf
jo
adc
cs
jo
or
data16
or
je
nop
pop
test
out
push
subb
fimuls
decb
add
and
sub
fs
sub
scas
in
stc
dec
add
test
add
nop
dec
cs
mov
ja
add
xchg
add
add
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incb
movsb
inc
andl
push
xor
je
sarl
or
lods
sbb
pop
outsl
ja
jns
movsb
inc
cs
jae
jb
bound
jmp
stos
inc
ss
popa
jbe
movsb
sbb
mov
pop
mulb
pop
lea
dec
mov
outsl
js
mov
mov
push
mov
inc
cltd
sbb
mov
dec
mov
mov
in
dec
imul
pop
jns
inc
mov
imul
mov
jb
jns
daa
or
sub
nop
xchg
notb
mov
lods
sbb
lcall
push
or
cmp
outsb
pushw
xchg
or
mov
jbe
inc
add
pop
pusha
inc
mov
push
push
push
lahf
dec
add
dec
fs
and
push
dec
clc
pop
shlb
adcb
loopne
push
sbb
xor
lods
dec
lahf
jecxz
push
dec
lock
xchg
pop
pop
push
push
jae
cmp
mov
aas
cmp
call
movsl
jae
addr16
subl
jp
mov
mov
xchg
sbb
add
xchg
inc
pusha
mov
push
push
push
push
dec
testl
dec
movntq
mov
sub
push
fildll
dec
jge
sahf
push
sub
jae
push
inc
sbb
jo
or
sub
jg
je
stos
outsl
jae
inc
subl
dec
xor
mov
jg
sub
pop
fsubl
or
in
push
mov
das
je
outsl
xchg
jne
pop
daa
xchg
mov
popw
pop
cmp
push
jl
cmp
cmp
push
cmp
push
sub
es
data16
jle
sub
sub
addr16
cmp
cmp
sub
iret
jmp
xor
jmp
cmp
xchg
add
dec
inc
mov
cmpsl
jbe
pop
pop
cwtl
jb
sbb
fstpt
shl
push
jb
imul
push
or
shrb
add
sbb
and
cltd
jnp
lods
es
jo
sub
or
jl
lahf
sub
out
inc
inc
cld
push
hlt
push
call
sahf
rol
mov
lods
mov
add
inc
sti
push
aam
dec
sti
fdivp
cwtl
nop
mov
sbb
push
test
add
jo
jl
repz
lock
push
dec
mov
out
rorl
xor
push
push
mov
repz
data16
das
push
clc
push
dec
dec
push
inc
jnp
out
inc
push
dec
inc
inc
cmp
push
iret
repz
xor
sub
and
cmp
sbb
add
repz
lock
in
shrb
dec
sub
or
repz
test
pusha
inc
ds
repz
xor
sbb
std
jns
out
in
loopne
mov
sarl
insb
inc
sbb
cld
aam
repz
mov
pusha
xor
push
xchg
pop
sbb
lcallw
shlb
jns
push
ficoml
into
xor
data16
and
outsl
pop
in
iret
or
aas
sbb
jae
jb
xor
push
ljmp
scas
lock
sti
sub
add
sarb
insb
cmp
mov
inc
dec
jae
insb
inc
gs
divl
pop
inc
push
sbb
dec
inc
dec
xor
lock
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
mov
inc
push
das
adc
sub
adc
or
std
incl
popa
into
mov
mov
incl
jnp
inc
loop
mov
ds
pop
push
pop
in
stc
pop
clc
lret
sbb
jb
xchg
jge
arpl
enter
cmp
adc
dec
scas
jp
adc
fisubrs
mov
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
jne
xchg
scas
lods
sti
psraw
jb
xor
into
mov
pop
jmp
adc
es
mov
flds
sbb
push
scas
or
outsb
jbe
dec
add
and
xor
mov
inc
scas
inc
fstpl
push
sub
loop
push
iret
repz
push
inc
dec
push
dec
push
cs
idiv
call
mov
push
adc
adc
and
push
add
push
or
or
sub
and
pop
sub
dec
and
cmp
fcoml
adc
push
adc
dec
adc
sbb
xor
dec
adc
inc
fbstp
jb
jbe
xor
adc
or
pop
xchg
add
outsb
mull
inc
and
inc
adc
add
pop
or
sbb
adc
sub
push
aas
inc
and
add
xor
dec
sub
stos
and
lods
pop
dec
cmp
cmp
and
pop
cmp
sbb
cld
pop
cmp
aaa
sub
push
push
sbb
div
add
sub
pop
dec
add
pop
push
adc
sbb
fistpll
xor
dec
dec
das
xor
sub
cmp
add
dec
push
pop
pop
xor
mov
bound
or
das
das
push
add
xor
inc
adc
push
inc
add
pop
fnstenv
xchg
xor
push
pop
or
pop
jnp
adc
xor
cmp
sbb
or
or
es
inc
je
fidivs
inc
mov
sub
adc
dec
adc
cmp
xor
inc
xor
sub
addr16
popa
lret
sbb
inc
adc
dec
fisubrl
or
mov
dec
and
push
push
mov
and
dec
inc
inc
dec
int3
push
fadds
pop
cmp
cmp
inc
jle
out
call
xor
push
sbb
add
sub
mov
push
mov
adc
push
pop
xchg
push
in
inc
jb
push
xlat
add
clc
jae
cmpsb
cmp
cmpsb
xchg
dec
xor
aaa
inc
sub
jecxz
or
mov
push
and
sub
dec
in
add
in
in
sub
adc
mov
sbb
sbb
ja
or
and
cmp
jg
sub
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
mov
daa
inc
add
sub
repz
out
shr
leave
ds
lcall
outsb
outsb
jg
or
cmp
repz
pop
sub
ljmp
push
and
pop
divl
mov
scas
adc
dec
int
mov
pop
or
or
jae
iret
lock
push
and
outsb
sub
push
popa
push
popa
orb
test
out
bound
xor
rcr
loop
and
ds
ficomps
cmp
inc
ds
pop
jbe,pt
mov
out
leave
in
aas
and
cmp
repz
sbbb
or
and
insb
ds
sub
sub
add
sub
xor
pushf
dec
aaa
les
and
push
pusha
xor
es
cs
lods
inc
push
adc
adc
or
lods
ret
and
ss
js
stos
ret
aad
inc
jbe
mov
dec
pop
sti
sti
popf
pop
or
cmp
inc
or
or
sbb
div
mov
push
and
mov
in
mov
cmpsb
push
sbb
sbb
fdivrs
jmp
and
push
data16
aas
add
jb
or
push
inc
jno
or
or
ds
pop
and
and
fbstp
fld
lods
sub
inc
pusha
sub
or
add
jp
dec
dec
jno
add
or
mov
iret
adc
sub
mov
out
inc
ja
push
fstl
ss
jnp
push
dec
cld
xor
out
pop
jge
fsub
adc
add
js
jge
fs
or
hlt
outsb
scas
sbb
dec
pop
jo
sub
mov
daa
inc
xor
and
pop
mov
sbb
adc
adc
pusha
sub
insl
mov
and
dec
adc
and
in
gs
push
out
and
push
cmp
sbb
cs
pop
cmp
pop
cld
jbe
mov
iret
adc
pop
cltd
jne
fcmovb
jo
push
xor
cmp
sbb
and
pop
xlat
mov
cmpl
lods
inc
dec
and
push
and
or
mov
cmp
add
and
xchg
dec
pop
or
test
or
jle
and
push
push
inc
or
pop
scas
ss
rorl
testl
sbb
insl
and
fisubs
es
push
xchg
call
xor
adc
outsl
jle
in
or
aaa
push
mov
inc
xor
mov
orl
xchg
and
adc
test
push
push
sbb
lods
or
dec
dec
cmp
cmp
or
roll
pop
xor
mov
pop
adc
xor
fs
push
inc
je
cmp
dec
cmp
aas
add
and
mov
pop
cmp
inc
add
or
cmp
fwait
cmp
inc
xor
pop
inc
push
adc
cmpsl
add
pusha
sub
adc
cmp
cmp
add
xor
mov
or
inc
fiadds
inc
repnz
cmp
bound
inc
ficompl
and
add
fistl
pop
inc
stos
sub
push
sub
add
adc
insl
jp
add
add
dec
aaa
push
dec
push
dec
pop
mov
cmp
ja
xor
push
lods
push
daa
es
dec
int
rcll
push
movl
aad
push
lcall
or
daa
push
pop
adc
mov
js
idivl
cmp
pop
ja
call
push
adc
sbb
inc
mov
loop
jbe
push
dec
xor
pop
js
sub
nop
movsb
mov
ja,pt
or
int3
add
ss
jae
insl
popa
imul
fistpl
push
pop
outsl
jo
push
clc
in
pop
pop
data16
push
ja
pop
out
and
adc
push
cmp
cmp
mov
mov
aaa
imul
add
fnstsw
sbb
add
cmp
and
or
or
mov
or
iret
pop
adc
je
ja
or
sub
add
stos
decb
cmp
pop
inc
sub
push
mov
mov
dec
inc
sub
inc
shlb
out
cmp
push
pop
cmp
push
aas
cmp
hlt
pop
push
cmp
cmp
inc
in
scas
jo
add
xor
or
sub
scas
psubb
adc
pop
idivl
mov
rcrb
push
out
push
mov
xor
sbb
xchg
cli
pop
mov
add
mov
mov
loope
or
cmp
int
ret
push
ficoms
pop
mov
out
push
pushf
push
popf
add
adc
and
outsb
aaa
dec
movsl
test
sub
cmp
es
dec
and
jl
and
push
dec
es
aaa
mov
insb
pusha
aaa
add
outsb
sub
add
sub
sahf
fcmovnb
and
sti
add
push
dec
les
loop
jae
gs
push
jo
cld
idivl
imul
mov
dec
push
push
push
das
xor
xor
dec
sub
jae
cs
loop
stc
pop
sbb
or
mov
inc
das
fstl
xlat
aam
push
loop
les
dec
sub
and
cmp
xor
je
pcmpgtb
jae
push
rcl
hlt
dec
mov
sbbl
jb
outsl
imul
in
inc
sarl
into
imul
jl
js
jge
xchg
xchg
xchg
pop
pop
in
js
inc
add
sbb
loope
xor
or
pop
pop
cmp
inc
push
sbb
ficoml
mov
adc
cmp
dec
das
pop
sub
xchg
and
test
jle
jp
adc
sbb
in
call
mov
loopne
sub
and
dec
inc
xchg
ss
jle
aaa
push
loopne
mulb
into
adc
xor
fsubrl
sbb
inc
push
adc
insb
xor
ret
into
repnz
adc
fisubl
and
bound
xchg
enter
pop
push
fld
and
adc
push
mov
pusha
push
out
les
push
inc
sub
repz
jmp
repnz
push
mov
sbb
iret
inc
adc
rcll
mov
pop
push
push
pop
or
push
or
inc
sbb
mov
into
and
mov
es
adc
inc
push
lods
inc
adc
cmp
cmp
xchg
hlt
iret
inc
or
cmp
es
add
inc
aaa
test
xchg
dec
sbb
sbb
pop
push
push
push
pop
sub
add
push
das
aam
inc
push
cwtl
or
into
push
inc
sub
shlb
jbe
push
cmp
sub
aaa
sub
add
pop
loop
mov
nop
pop
dec
aaa
inc
hlt
cmp
mov
stc
mov
loope
loop
loop
fisubl
mov
push
mov
rcrb
cmp
cmp
adc
loop
pop
adc
sub
sbb
jo
add
mov
cmp
mov
inc
test
xor
adc
xor
or
cmp
xor
add
inc
jo
sub
cmpsl
lock
es
jnp
xor
fadds
aaa
add
cmp
mov
mov
das
dec
xor
push
push
pop
sbb
aad
xor
or
adc
popl
sarb
mov
pop
rcll
imul
jbe
or
or
loope
xchg
insb
fwait
jmp
pop
cmpsl
xor
adc
jmp
push
cmp
leave
mov
add
pop
push
add
out
jnp
daa
mov
jns
and
push
jnp
fwait
dec
sub
mov
inc
sbb
out
mov
mov
pop
mov
fs
fsts
jo
pusha
xchg
dec
and
pop
pop
and
xlat
pop
inc
add
pop
and
movaps
sbb
cli
dec
inc
addl
dec
xor
cmp
mov
or
mov
inc
lods
adc
jne
adc
dec
orb
mov
ss
setle
sbb
cmpsb
push
sbb
sub
lods
in
dec
and
add
test
ds
inc
mov
and
push
xchg
scas
shrl
lcall
or
xchg
sbb
dec
dec
pop
das
add
cmp
xor
adc
xor
pop
xor
dec
add
sbb
xor
mov
dec
xor
dec
sbb
sbb
cs
xor
add
sbb
xor
loope
js
rolb
mov
pop
fs
pop
push
dec
pop
sbb
or
sub
sbb
sti
adc
adc
pop
add
dec
xor
iret
inc
ss
inc
adc
decl
in
imul
adc
inc
cmpsl
mov
add
cmpsb
pop
dec
call
xchg
mov
sbb
int3
sbb
and
and
mov
sbb
js
popa
stos
das
adc
pop
push
adc
adc
push
cmp
cmpsb
addb
mov
push
push
rol
negl
pop
dec
cmp
hlt
xchg
adcb
enter
and
cmp
mov
cmp
dec
sub
mov
rcrl
fwait
mov
cmpsb
shlb
ss
add
addb
inc
mov
mov
dec
imul
rsm
popa
popa
inc
mov
sub
mov
dec
scas
add
xor
lds
xor
and
mov
push
cmp
pop
inc
pop
outsl
in
sarl
and
divl
and
sbb
adc
mov
cmp
jnp
dec
cltd
adc
loopne
inc
fists
add
push
push
cmp
mov
stc
js
push
xchg
frstor
int
xor
imul
and
xorl
mov
push
adc
xor
mov
fstps
popa
xchg
pop
subb
movsl
push
aaa
adc
push
jae
and
jns
pop
pop
int3
and
inc
push
fisubl
add
cmp
cmc
and
dec
sub
scas
dec
jp
xchg
insl
mov
mov
push
sbb
testb
movsl
sbb
adc
in
fs
adc
pop
pop
prefetchnta
dec
in
incl
inc
push
inc
xor
pop
cmp
dec
sbb
push
es
fs
pop
dec
dec
pop
out
jge
dec
jg
or
scas
aas
mov
push
inc
and
mov
jnp
jno
sbb
cmp
jae
shlb
inc
daa
jg
popf
loopne
daa
pop
and
sub
cs
jge
inc
sub
inc
or
pop
inc
mov
sbb
popf
add
imul
sbb
cltd
loope
pop
pop
mov
aam
add
cmp
cwtl
or
dec
leave
mov
adc
out
sbb
adc
xlat
push
sub
dec
adc
sbb
inc
es
and
or
shrb
inc
nop
push
flds
aaa
loope
fistl
inc
push
jge
sub
lock
add
mov
or
ljmp
je
jo
insb
gs
out
iret
aas
inc
ja
fs
imul
add
pop
push
push
cmp
fsubrs
jb
movsb
xor
mov
stc
cmp
subps
add
push
push
test
jne
data16
mov
push
rol
push
adc
int
pop
jge
push
pop
push
mov
pop
pop
jl
divl
dec
push
addr16
pusha
popf
data16
popa
xor
bound
je
roll
fsubs
push
xchg
adc
decl
mov
loop
dec
dec
jne
aaa
notl
pop
shlb
mov
mov
daa
sbb
pushl
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
roll
ss
adc
cli
mov
sub
sub
decl
sbb
mov
sbb
mov
ds
lahf
in
pop
enter
lods
sub
and
jle
jo
jmp
sti
fsubs
sbb
mov
js
lea
jecxz
dec
push
bound
sti
and
add
pop
adc
incb
push
and
xor
aaa
xor
cmp
insl
xchg
lods
rolb
pop
add
push
insb
inc
shll
lea
out
daa
out
fistpl
dec
imul
xchg
out
and
xchg
dec
dec
sahf
pop
sub
cmp
in
in
sub
sbb
dec
sahf
xchg
xor
cmp
and
jb
pushf
in
dec
fmul
add
jae
dec
mov
cmp
js
cmp
xchg
push
pop
ret
dec
pop
dec
pop
aam
dec
push
pop
jnp
clc
pop
fildll
dec
les
cmp
xor
xor
pop
icebp
sub
sub
xor
inc
xor
inc
pop
xor
fsubl
popa
add
jne
std
pop
mov
cmp
insb
push
outsb
add
rcl
test
das
js
add
es
xchg
add
mov
and
stc
dec
jp
xchg
shlb
push
jb
sti
out
sub
jo
aaa
bound
je
bound
mov
sub
das
rorb
inc
inc
rclb
es
fsubl
and
xchg
rorb
popa
jnp
es
inc
mov
das
pop
mov
das
and
mov
push
iret
out
push
and
pop
add
out
pusha
mov
pop
outsl
sbb
repnz
or
addr16
lret
daa
je
add
push
inc
xchg
xor
fildll
adc
sub
inc
cmp
adc
jg
int3
add
push
adcl
fadd
sbb
jb
mov
pop
out
add
and
inc
adc
push
adc
test
xor
cmp
sub
subl
pop
addb
cmpsl
pusha
nop
rorl
dec
shr
dec
adc
das
mov
cli
inc
notl
xor
dec
shrl
add
outsl
dec
leave
push
xor
fs
mov
pop
shlb
fnstenv
repz
fdivs
xchg
idivb
dec
shr
cwtl
push
lret
into
ds
jae
fsubl
int
xor
jl
sbb
push
fsubl
dec
cmp
ljmp
faddl
mov
mov
mov
insb
lahf
daa
inc
int3
ss
pop
add
fsubl
adc
fcomi
jns
leave
push
mov
imul
push
cld
cli
jns
xchg
out
mov
push
pop
arpl
pop
insb
pop
pop
mov
scas
test
nop
sarl
cmpsl
push
jl
imul
shlw
aam
jge
mov
enter
call
divl
push
dec
cs
push
lahf
cmpsl
stc
mov
xchg
xor
cmp
sbbb
loop
dec
ds
xlat
hlt
cltd
sahf
aaa
sti
mov
xchg
daa
lods
dec
jle
fimull
fcomi
push
shl
mov
cwtl
push
xor
repz
sbbl
dec
lcall
jns
mulb
ds
push
cmpsl
pushf
nop
idivl
iret
jnp
cwtl
mulb
aaa
aaa
sti
loope
out
push
fisttps
repz
sahf
pushf
push
cs
xor
fdivl
ss
xor
imul
mov
mov
dec
repz
loopne
popf
out
and
pop
sub
lcall
mov
mov
sahf
out
xchg
cmpsl
in
out
fst
xchg
mov
test
jns
aaa
scas
out
and
jl
imulb
push
mov
jp
in
out
sahf
out
xchg
sub
pushf
dec
repz
mov
dec
je
out
cmp
int3
sti
xchg
and
cmp
jo
scas
sarl
repz
and
popf
out
xlat
add
lock
les
jg
aad
pop
dec
sbb
scas
sub
pop
cs
adc
stc
add
adc
rcrb
push
push
mov
xor
adc
mov
bound
mov
scas
int
mov
mov
loop
and
push
pop
mov
jmp
add
idivb
cmpsl
std
pop
mov
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
add
sub
push
add
xor
subb
inc
mov
addr16
push
mov
push
jae
popa
pop
aas
cmp
inc
faddl
sub
or
cmpsb
or
pop
loope
addr16
push
jnp
cmp
dec
mov
jae
fisubl
mov
adc
mov
fdivrp
data16
dec
cmp
dec
popf
jbe
pop
je,pn
push
ljmp
cmpsb
dec
add
push
imul
push
inc
cmpsb
push
insb
pop
push
lods
adc
cs
pop
je
jns
inc
jnp
jo
fisttps
jp
das
push
jecxz
ficoms
loop
outsb
into
rcrb
jbe
iret
push
xchg
ret
dec
test
or
mov
ja
stos
add
data16
out
mov
bound
push
add
outsl
js
cmp
int3
outsl
sub
push
ds
xor
es
jle
out
out
jo
es
je
push
addr16
jo
jae
out
push
and
jno
outsl
and
aas
js
aas
adc
insl
cmp
or
sahf
lcall
push
or
cmp
xor
xor
mov
and
xor
push
dec
repz
jge
xor
cmp
ds
add
or
or
inc
pop
adc
sti
mov
or
and
cmp
dec
or
test
sbb
push
inc
and
push
inc
aas
dec
sub
rcrb
inc
popf
push
inc
xor
sbb
bound
jle
mov
out
or
push
mov
out
les
dec
cmp
adc
push
push
or
mov
push
negb
inc
mov
inc
add
sbb
push
mov
test
and
inc
pop
loopne
sarb
xor
les
xor
mov
mov
mov
addl
xor
push
push
ss
fdivs
orl
inc
cmpsl
aaa
push
jnp
jbe
mov
adc
fcomps
push
or
add
cmp
jb
or
xor
push
cs
jns
mov
pop
pop
sub
and
pop
xor
das
push
inc
jp
mov
int3
adc
ret
sub
pop
xor
das
xlat
rcr
dec
adc
cmp
and
add
jnp
daa
rcl
ret
and
popf
sbb
test
xor
ds
sbb
sub
pop
mov
sbb
cmc
jnp
pop
or
popf
xor
in
and
cmp
arpl
rol
lods
daa
and
add
push
fdivrs
mov
adc
push
jnp
xchg
loopne
das
das
mov
or
aaa
iret
and
es
mov
ret
and
daa
inc
mov
mov
popa
sub
sub
pop
icebp
push
push
das
dec
jbe
es
into
sub
mov
fidivrs
sahf
inc
adc
push
and
aaa
push
sbb
mov
inc
inc
xorb
pop
scas
sub
ficompl
cltd
daa
lahf
adc
sub
xchg
outsb
not
cmpsb
pusha
pop
es
int
lea
inc
mov
addr16
sti
pop
pop
jg
mov
inc
push
pop
fsubs
sbb
rcr
push
xchg
xchg
roll
and
cmp
in
push
mov
mov
aaa
pusha
xor
or
dec
adc
adc
jge
movsb
and
dec
loop
pop
addr16
or
mov
cmpsb
dec
sbb
jmp
js
or
movb
sub
mov
imul
sub
jmp
outsb
and
add
dec
xchg
insl
fnstsw
adc
cmpsl
jecxz
fsubrs
call
add
lahf
or
add
ss
stc
xor
lret
in
push
xor
daa
or
lret
and
add
push
les
and
cmp
das
loope
inc
sub
je
nop
lret
pop
dec
sbb
adc
sarb
daa
adcb
mov
arpl
in
mov
push
adc
mov
dec
jo
adc
es
hlt
jnp
or
sbb
inc
pop
adc
outsb
or
or
pop
sbb
inc
testb
mov
mov
adc
push
mov
mov
or
cmp
push
movsl
pop
sbb
dec
stos
pop
or
pushf
xor
cmp
adc
xchg
pop
xchg
or
inc
movsb
outsb
cmp
shl
sbb
push
fcomip
and
xchg
ret
or
int3
jg
push
or
add
push
push
fucomp
xchg
lret
dec
dec
dec
cmp
xchg
or
into
lock
dec
and
inc
jo
fs
add
cmp
cmpl
aas
lods
jle
or
lcall
and
xor
test
cmp
cmp
pop
aam
pop
pop
and
push
repnz
pop
mov
sub
inc
pop
push
lods
lods
pushf
in
inc
cmp
push
inc
dec
inc
aam
dec
adc
pusha
add
imul
cmp
fiaddl
mov
sbb
aad
and
in
adc
bound
cwtl
jb
mov
xchg
fs
push
ljmp
mov
push
push
push
sbb
xor
lcall
insb
inc
xchg
popf
dec
mov
inc
addb
sti
in
mov
adc
data16
pop
inc
hlt
test
pop
or
loop
jp
inc
xor
stos
xor
xor
insb
rorb
repnz
addb
xor
sbb
jb
mov
nop
and
dec
arpl
or
js
pop
pop
les
testl
icebp
jp
jns
std
add
adc
or
xor
dec
dec
cmp
sub
adc
dec
pop
cmp
mov
push
fisttpl
pop
pop
das
push
pop
sub
mov
insb
in
cli
mov
xchg
xor
shrb
inc
xchg
xor
in
cmp
xorps
mov
push
pop
sbb
and
stc
cmp
repz
stc
xor
cmpsl
dec
cltd
or
xchg
mov
add
add
pop
or
or
adc
adc
sbb
int
mov
and
sub
xor
inc
mov
mov
gs
mov
mov
popa
fldcw
xchg
sbb
sub
add
or
adc
data16
jl
add
add
int
push
dec
str
data16
or
and
das
incl
les
arpl
adc
pop
pop
cs
and
fimuls
test
lds
scas
push
xor
push
pop
iret
inc
xor
push
pop
jmp
movsl
mov
shrb
xchg
jo
cld
jl
imul
xor
xor
push
loopne
mov
sub
fcmovnu
out
dec
sub
mov
clc
push
push
add
inc
sbb
dec
repnz
pop
dec
add
sub
dec
cmp
push
inc
and
shlb
sbb
and
inc
or
push
pop
sbb
cmp
push
add
pushl
push
pop
and
adc
pop
or
pop
dec
and
push
adc
cmp
inc
inc
xor
dec
push
inc
pop
add
aaa
and
or
push
incl
push
lret
out
pop
aaa
pop
pop
pop
adc
leave
inc
dec
or
cmovge
adc
pop
inc
or
mov
or
aaa
dec
pop
adc
add
or
das
add
xor
and
cli
incl
pop
inc
sbb
inc
pop
mov
pop
pop
push
cmp
sub
adc
lods
add
andl
xchg
cmp
nop
add
sbb
arpl
push
popf
inc
add
add
dec
adcb
cmpsl
or
mov
inc
and
sub
sbb
dec
mov
imul
cmc
push
inc
cld
gs
inc
fistpll
rcl
inc
mov
lds
pop
sbb
jns
sahf
ss
and
push
sbb
or
aaa
xor
xor
pop
fisttps
shr
xchg
push
push
dec
in
push
outsl
inc
or
push
adc
pop
pop
add
xchg
mov
dec
add
dec
mov
dec
sub
push
lret
add
push
sbb
enter
inc
push
push
pavgw
inc
jb
add
push
outsb
fs
shrl
loope
pop
pop
pop
fcoml
int
call
push
dec
inc
dec
push
dec
incl
jae
sub
outsl
xor
fsubl
aas
aaa
sub
adc
inc
inc
push
push
and
pop
hlt
pop
aaa
icebp
xchg
push
or
pop
les
and
fidivs
testb
pop
ja
negb
pop
daa
push
xor
sub
add
push
and
lahf
icebp
scas
adc
clts
or
es
jnp
push
aaa
push
xor
inc
add
xor
xor
lret
in
xor
push
inc
add
inc
in
add
fldl
inc
inc
xor
das
aaa
inc
lcall
pop
inc
ss
test
cs
pop
cmpsl
decl
rcrb
and
cwtl
das
mov
inc
aaa
pushl
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
cmp
call
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
out
popf
rorl
mov
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
jmp
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
decl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
stos
decl
push
scas
addr16
cmp
dec
movsl
jg
push
mov
fwait
stos
flds
jg
int
sub
jns
sub
push
data16
outsl
push
or
popa
js
dec
insl
push
jmp
xor
push
inc
bound
jb
push
sub
out
xor
cmp
pop
or
jno
and
sub
xchg
and
dec
pop
inc
and
ljmp
sub
pop
arpl
jnp
outsb
dec
imul
dec
jbe
cs
push
ss
enter
add
xor
xlat
xchg
mov
or
sbb
cmp
xor
or
inc
sub
test
mov
inc
cmp
push
inc
push
push
and
add
xchg
fstpt
dec
fadd
arpl
imul
xchg
sarl
inc
add
cltd
js
mov
inc
pop
adc
mov
pop
cmp
xchg
mov
and
shrb
sub
sbb
and
jnp
adc
mov
adc
push
add
push
jp
test
outsl
inc
cmpsl
inc
mov
adc
mov
shrl
sbb
sahf
sbb
in
sbb
stos
push
ficomps
fcom
push
es
les
adcb
gs
and
sub
pop
push
test
sbb
pop
cmp
jge
inc
cmp
andb
push
daa
jbe
pop
mov
adc
jge
adc
orb
inc
shlb
adc
in
adc
fildl
push
cmp
xchg
adc
mov
inc
push
cmp
mov
or
or
adc
shll
icebp
adc
cmp
out
adcl
sub
int3
mov
adc
test
xchg
stos
into
adc
adc
ret
pop
test
xchg
in
in
dec
les
outsb
outsb
je
xor
inc
mov
xor
jae
popa
insl
gs
cmp
addr16
cmp
mov
add
push
xchg
sub
sbb
pushl
insl
loop
inc
push
sbb
and
lret
testb
mov
insb
dec
push
popa
je
xor
add
push
popf
insl
mov
or
aaa
push
push
push
pop
inc
adc
negb
add
or
andb
cmovns
inc
es
and
fimull
inc
andb
pop
or
mov
lret
pushf
pop
adc
pop
aad
bound
in
add
mov
mulb
test
adc
and
adc
mov
sbbb
dec
pop
insl
cwtl
xor
inc
lret
dec
inc
int
xor
stos
add
pop
jmp
addr16
arpl
or
lds
sbb
and
sub
and
push
and
adc
das
mov
sub
sub
lea
fadds
into
dec
popa
dec
sub
and
pop
ja
jb
pop
repz
or
loopne
lds
inc
jne
shlb
xor
xor
fistl
test
test
jno
or
leave
pop
mov
or
and
dec
call
pop
xor
pop
xor
sbb
sbb
add
das
sbb
call
insb
mov
std
aam
popa
cli
hlt
scas
fs
jo
test
or
xchg
push
outsl
imul
lods
push
lods
push
pop
add
movsl
movsb
sar
arpl
sub
mov
dec
push
cmp
push
aas
mov
in
add
push
iret
mov
das
sbb
into
adc
ret
ds
pop
xor
pop
loop
aas
pop
shll
ds
dec
cmp
push
sahf
and
inc
inc
adc
pop
inc
xor
movsl
push
dec
hlt
mov
cmp
xchg
dec
and
cli
jb
inc
outsl
sbb
ja
out
sub
or
scas
pop
inc
imul
and
push
adc
and
cmpl
adcb
in
das
jle
pop
pop
icebp
imul
pop
aas
inc
and
sbb
and
pop
mov
lock
or
test
sahf
adc
dec
pop
sbb
insl
das
dec
pop
movsl
repz
pop
fcmovnu
dec
pop
repz
cs
je
insb
mov
push
push
cmp
int3
xor
enter
rclb
maxps
pop
fimull
dec
push
jge
add
loopne
adc
sub
ret
mov
fisubl
and
xor
shlb
or
inc
and
inc
inc
lret
sub
testb
dec
cmp
add
and
out
jbe
test
cmp
gs
push
pop
pop
dec
filds
pop
shrb
fs
inc
notl
dec
jae
push
popa
insl
insl
vcmpps
data16
movzbl
imul
imul
dec
outsb
push
je
scas
pop
inc
loopne
mov
insb
pusha
std
jg
jecxz
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
dec
sub
push
mov
gs
dec
adc
je
inc
data16
pusha
rorl
daa
dec
jo
popf
loopne
dec
jb
jb
inc
sbb
aas
dec
mov
sub
xchg
orb
rclb
sbb
mov
inc
test
ror
pop
sub
add
adc
shrl
sbb
push
inc
pop
mull
xorl
nop
rolb
push
insb
sbb
adc
push
div
xor
or
or
add
pop
cmp
sarb
mov
pop
adc
mov
sbb
xor
jp
add
test
loop
add
adc
cli
add
sbb
cmp
add
lret
rolb
xlat
and
adc
psraw
cmp
or
mov
stos
test
dec
call
push
push
xchg
ja
sub
lret
sub
rcrb
fistps
test
sub
insl
adc
lods
or
stos
pop
sub
insb
inc
and
adc
push
sbb
sbb
pop
xor
mov
mov
sub
inc
sbb
pop
sbb
adcb
and
aad
jnp
xlat
outsl
or
std
and
add
and
movsb
test
hlt
ja
inc
mov
repz
add
ds
in
mov
dec
adc
xchg
dec
inc
xadd
sbb
inc
iret
add
ja
mov
inc
idivl
inc
adc
cmpb
dec
fcomi
mov
mov
jo
maxps
iret
adcb
add
mov
sbb
das
test
les
int3
insl
scas
sbb
aas
add
xorl
test
addr16
push
inc
movsb
or
daa
lret
jne
jnp
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
mov
insl
adc
outsl
pop
add
insl
mov
insb
adc
inc
aas
jg
mov
stc
jbe
outsl
nop
sbb
jb
push
jb
inc
cmp
and
and
and
push
push
jb
add
jge
notb
data16
loopne
sarl
push
les
out
ds
mov
aam
mov
sahf
dec
sub
pop
xor
cld
out
iret
mov
jo
pop
sahf
pop
repz
pop
pop
push
mov
imul
pop
enter
clc
cmp
shlb
sbb
and
mov
xchg
push
xchg
int3
icebp
adc
out
dec
inc
lahf
nop
mov
outsb
fsubs
mov
pop
dec
mov
aam
ss
add
or
add
cmp
add
add
push
sbb
inc
push
sub
testb
add
or
pop
jg
jg
pop
mov
mov
and
dec
pop
in
in
mov
mov
inc
aaa
adc
test
pop
das
dec
push
xchg
or
rcll
add
leave
mov
inc
adc
inc
jns
in
test
les
fildll
and
pop
adc
in
ss
add
dec
xchg
sub
inc
push
mov
pop
scas
or
popl
outsl
out
jb
and
xor
dec
lcall
imull
in
or
push
push
sbb
pop
mov
call
out
jb
inc
mov
xor
jae
inc
jb
pop
pop
ficoml
xor
pop
rcrb
scas
fs
and
pushf
fiaddl
test
aaa
lock
jns
movsb
fsts
sbb
mov
dec
pop
scas
in
insb
pop
jl
shll
xchg
aam
xlat
dec
xchg
cmp
add
pop
jg
jg
mov
pop
ja
sub
cmpb
nop
xchg
push
xor
pop
sbb
imul
je
sbbb
mov
popa
outsl
add
and
and
sub
leave
add
push
cwtl
sbb
and
push
lock
adc
andl
push
xor
outsl
out
sarb
pop
or
andb
test
xchg
and
push
mov
outsl
cmp
idiv
or
fisubs
push
jb
daa
add
mov
sub
dec
pop
iret
add
cmpsb
lahf
mov
outsl
xchg
mov
dec
popa
jg
push
fdivrs
mov
mov
lret
pop
push
mov
xor
sbb
inc
icebp
mov
sbb
cmp
ja
popa
testl
jmp
fdivrs
push
push
outsl
pop
pop
xor
jg
pop
enter
imul
sub
fsubs
push
or
ss
repz
push
push
mov
imulb
js
xchg
jo
movaps
jp
jae
or
adc
in
test
bound
xlat
or
pop
dec
enter
mov
loopne
jmp
xlat
or
jo
dec
mov
cmp
fs
arpl
loopne
lahf
pushf
and
push
arpl
arpl
testl
sub
add
enter
and
sub
push
sub
aaa
pusha
pop
leave
mov
add
xchg
and
pop
ja
add
xchg
outsl
loopne
and
and
fsubs
out
rcrb
pop
mov
cmp
lods
adc
add
mov
leave
jae
add
or
or
in
fsub
nop
sbb
and
and
jb
jge
push
push
push
sbb
outsl
add
jns
shlb
pop
adc
and
cmpsb
mov
mov
loopnew
les
inc
dec
and
add
cld
fwait
insb
pop
add
or
dec
cmpsl
push
xchg
pusha
and
add
addb
sahf
iret
daa
push
mov
aam
or
add
push
jb
add
mov
ret
add
adc
or
ds
sti
jl
push
pusha
inc
lock
out
xchg
and
ljmp
and
or
fs
push
pushf
and
or
push
lods
push
movsb
xchg
or
pop
or
call
hlt
add
sub
test
add
xchg
aaa
and
add
pop
add
jo
pop
jb
mov
fadds
in
out
mov
dec
scas
cwtl
add
sub
inc
out
push
addr16
pop
inc
lea
pop
or
aam
ss
inc
sub
or
sub
dec
scas
add
clc
es
test
push
sub
cmp
pop
and
insl
and
and
test
pop
sbb
xlat
mov
daa
xlat
pusha
dec
repz
jo
sbbb
clc
xor
pop
insb
push
xchg
imul
insb
inc
or
popf
cmp
mov
das
shrb
subb
jb
lds
pop
add
or
pop
dec
and
xor
cmp
pop
push
filds
mov
das
pop
jns
pop
in
mov
cwtl
mov
pop
add
das
jbe
imul
in
daa
jo
int
mov
sub
push
add
or
dec
dec
ret
iret
sarl
mull
jp
mov
sahf
cmpsl
stc
cmp
add
pop
inc
cmpb
mov
jl
cmp
rorl
lea
iret
fisubrs
test
int
jle
fidivs
jg
dec
repz
movsb
aam
pop
cmpb
ds
repz
stos
shl
sbb
pop
mov
sti
cmp
rcrl
scas
ficompl
test
iret
repz
loope
test
imul
stc
cmp
roll
mov
jns
cmpsl
xor
ljmp
push
xorl
shl
mov
out
ds
mov
flds
lcall
push
lea
mov
mov
push
push
popl
ret
nop
test
lahf
out
aas
xchg
addr16
jns
xchg
jl
out
sub
cmp
cltd
xchg
scas
and
xor
out
leave
adc
lcall
dec
cwtl
cmpsl
stc
cmp
xchg
mov
adc
sahf
pusha
nop
cld
negl
jl
xchg
loop
pushf
pop
test
lcall
lahf
iret
sarl
mov
mov
cmpsl
stc
cmp
cmp
frstor
mov
dec
jnp
out
insl
loopne
movsl
scas
cmpsb
push
js
sahf
out
cmp
stc
cmp
dec
repz
push
test
test
stc
cmp
add
pop
mov
jns
out
rorl
cmp
out
push
scas
jns
call
add
mov
sti
cmp
jl
repz
mov
push
add
lcall
mov
mov
ss
jns
in
pop
mov
or
sarl
mov
das
mov
imul
imul
lods
idivl
sarl
int
fmuls
ret
in
jns
out
ret
push
shlb
out
ds
cmpsb
jmp
iret
repz
fisttpll
arpl
insb
ds
adc
out
jl
sub
push
shrl
lahf
popf
pusha
shl
dec
aad
dec
loope
aas
fsubrs
cmc
jns
and
outsb
je
pop
pusha
jno
addr16
cmp
xchg
add
push
add
jp
sbb
mov
jp
push
jno
lods
cmp
vmwrite
xorl
xchg
jb
mov
in
pop
addr16
aam
mov
je
pop
negl
and
das
fs
dec
jne
shrb
out
pop
xor
int3
mov
xchg
pushf
jmp
and
es
cmp
mov
std
aaa
jae
add
mov
cmp
movsb
jae
insl
in
and
or
das
cmp
aaa
pop
jb
pop
data16
pop
enter
cltd
nop
dec
mov
adc
jns
pop
pop
jo
lds
loopne
fs
push
jg
mov
leave
jg,pn
orl
dec
rorb
dec
adc
sahf
push
fbstp
movsl
mov
aas
mov
adc
fidivl
mov
loop
jmp
rcr
adc
dec
and
ss
aas
mov
shl
repz
idivb
mov
or
mov
inc
mov
std
sbb
mov
decl
push
pop
inc
into
mov
inc
imull
mov
push
jbe
in
je
pop
xchg
sbb
or
fiaddl
mov
pop
push
dec
lret
add
iret
enter
push
pcmpgtb
mov
ja
ja
dec
dec
leave
mov
pop
fwait
xchg
pop
xor
sbb
insb
pop
add
and
mov
push
aas
in
dec
adc
push
push
push
mov
inc
pop
lret
pusha
jb
popf
dec
ja
aas
add
inc
bound
push
and
mov
sbb
pop
jle
or
inc
and
jns
outsl
dec
push
inc
psubsw
dec
xor
xchg
in
and
inc
jns
mov
pop
scas
pop
imul
out
pop
jb
mov
mov
jle
fiaddl
cmpsb
push
push
cmp
mov
leave
adc
pusha
jnp
push
add
sarb
xchg
in
and
filds
mov
adc
mov
jp
dec
ja
fcoml
mov
and
pop
aad
inc
jnp
jnp
daa
nop
and
jl
jl
sub
mov
cmp
addl
inc
jl
pop
jo
xlat
fdivrs
mov
mov
jnp
push
push
or
xchg
cmp
inc
mov
dec
jl
lret
mov
dec
inc
nop
jl
scas
mov
dec
lret
inc
dec
cs
divl
inc
jge
jge
mov
aam
mov
test
jl
enter
add
sbb
add
out
and
out
sahf
out
inc
pop
push
or
xchg
xlat
popf
pop
out
loopne
in
cmp
fidivs
jle
inc
mov
jge
ss
mov
adcb
loope
and
in
in
xchg
adc
in
sbb
sub
cltd
sbb
jle
push
and
leave
leave
leave
inc
arpl
jb
leave
leave
jnp
mov
leave
leave
inc
scas
mov
jb
leave
leave
into
int3
fwait
in
into
inc
stc
invlpg
or
repnz
mov
add
mov
xor
jg
pop
and
dec
push
add
lock
xchg
jg
repnz
out
add
leave
int3
hlt
adcb
xchg
inc
xor
adc
pop
addb
loopne
jp
inc
outsl
nop
mov
add
orl
push
push
cmp
leave
popa
push
add
jne
stc
jo
scas
jg
daa
xchg
xchg
xor
xor
jl
test
orb
push
mov
lock
inc
adc
insl
enter
add
daa
inc
xchg
dec
je
enter
addl
in
inc
push
cmpl
xchg
mov
adc
ds
dec
ja
pushf
sbb
or
daa
sub
and
sbb
jecxz
test
ret
sbbb
sbb
pop
pop
pop
pop
daa
xorb
cmp
pop
pop
pop
push
sbbb
push
or
or
mov
sahf
out
xchg
or
jns
out
mov
rcll
out
sahf
int3
adc
adc
adc
int
jns
adc
loopne
iret
repz
sbb
xorl
nop
push
push
add
cltd
dec
test
mov
outsb
fnstsw
add
xchg
jp
xchg
std
cmc
adcl
test
fisubl
ja
test
cmp
xchg
pop
xlat
out
pushf
in
mov
int3
sub
adc
scas
rolb
xchg
and
xchg
xchg
pop
xor
inc
repnz
push
add
cld
mov
test
and
test
test
xchg
cmp
test
and
push
inc
pop
ret
jo
shlb
aaa
inc
mov
lods
sti
subb
add
push
dec
rorb
daa
cmp
jo
aaa
jg
lods
mov
dec
and
test
jno
mov
add
pushf
mov
aas
add
out
inc
push
fadds
sbb
ljmp
sbb
xchg
mov
test
aam
repnz
mov
pushf
call
xchg
add
cmpsl
mov
mov
sbb
mov
push
lock
mov
inc
jb
cltd
push
pop
inc
repnz
test
mov
xchg
xchg
ja
imul
or
in
inc
and
mov
pop
inc
dec
addr16
mov
mov
mov
xor
or
iret
pushf
cmpsl
jl
pop
pop
xor
mov
mov
cmp
nop
js
push
vmwrite
pop
pop
pop
push
and
inc
mov
int3
pop
dec
mov
leave
leave
popl
mov
cmp
addb
jmp
lea
repnz
ret
mov
in
test
outsl
pop
xchg
xchg
das
icebp
mov
mov
jg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
shrb
xchg
mov
mov
pop
jb
jb
or
jb
or
or
jb
jb
push
add
jb
add
add
fnstcw
inc
mov
sbb
mov
xchg
xchg
test
inc
mov
jbe
roll
leave
shll
adc
out
sub
xchg
add
into
lock
mov
daa
mov
mov
aas
inc
cmovg
push
and
sahf
xchg
push
pop
or
xchg
cmp
mov
or
leave
out
adc
mov
rorl
mov
mov
lds
rcll
clc
in
sbb
inc
or
fwait
mul
adc
lea
push
cmp
jae
jae
and
xchg
mov
das
sub
cmovle
add
test
inc
outsl
add
push
aas
fstpt
cmp
mov
or
xchg
inc
fdivrl
sbb
neg
es
jns
das
adc
sbb
pop
imul
leave
xchg
and
xchg
repnz
int
push
add
xchg
xchg
fildl
out
ftst
push
dec
pushf
xchg
out
cli
das
mov
mov
xor
adc
dec
fcmovne
cmp
dec
push
dec
imul
aaa
jle
leave
enter
mov
fisubrs
rorb
sahf
out
lret
or
or
sahf
out
lds
ds
or
or
jb
xor
dec
xchg
and
pop
gs
jo
inc
mov
mov
iret
or
xchg
and
mov
mov
add
call
xchg
nop
sub
repnz
fildl
dec
pop
push
push
pop
outsl
daa
iret
jae
or
vmwrite
out
or
xchg
ljmp
out
xchg
out
mov
add
mov
pop
and
fwait
add
xchg
les
xchg
fisttpl
inc
cld
scas
sbb
xor
es
out
cmpsl
in
mov
pop
leave
in
push
xchg
iret
test
xchg
divb
cld
push
pop
xchg
pop
das
getsec
xchg
jmp
iret
enter
add
cmp
pop
mov
dec
leave
mov
mov
xchg
add
nop
fnstcw
scas
pop
adcb
mov
scas
mov
in
xchg
xchg
fcoms
daa
jmp
out
loopne
xchg
and
cmp
xchg
pop
sbb
fcmovne
sub
jg
ror
inc
xchg
dec
xchg
xchg
push
or
mov
and
iret
in
jbe
xchg
out
lahf
add
pop
and
xchg
xlat
fbld
jns
daa
out
add
repnz
or
xchg
in
mov
pop
addr16
insb
test
in
or
xchg
out
movsl
xchg
mov
in
in
mov
xchg
fcoml
out
cmc
testl
repnz
xchg
and
repnz
xchg
repnz
jo
jnp
mov
xchg
and
mov
lret
in
in
jmp
add
or
pop
xchg
pop
or
dec
inc
xchg
dec
xchg
jns
adc
sbb
imul
and
out
mov
xadd
dec
dec
cs
test
in
ficoml
lods
add
in
cmp
call
pop
xchg
bound
leave
repz
push
add
add
jmp
xchg
jp
and
mov
lods
xchg
push
jns
pop
pop
out
das
idivb
repnz
hlt
add
xchg
addr16
or
inc
popf
add
dec
popf
push
mov
sahf
test
leave
insl
stos
jmp
jg
leave
mov
fdivrp
push
add
jb
cmpsl
das
or
das
cmpsl
fwait
cmp
and
or
cmp
sahf
xor
iret
pshufw
push
pop
mov
pop
sahf
mov
push
add
jb
xlat
ffreep
ja
lds
repnz
addr16
xchg
mov
mov
pop
push
add
adc
jb
xchg
pop
mov
stos
push
add
das
outsb
repnz
jmp
cltd
inc
daa
cmp
in
cltd
das
hlt
cltd
rcrb
pop
lcall
repnz
lcall
repnz
lcall
in
repnz
lcall
pushf
pushf
fdivrl
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
sbb
cmp
repz
scas
push
mov
dec
sahf
outsb
repnz
sahf
out
dec
xlat
and
and
js
mov
mov
adc
daa
fstpl
push
outsl
aaa
mov
setnp
es
fwait
pop
pop
pop
and
or
mov
mov
xchg
add
fimull
rorb
fcmovne
cmpsl
push
xor
std
in
or
pushf
or
jb
pushf
sbb
pushf
xchg
jo
adc
pushf
mov
add
xchg
out
nop
inc
or
hlt
mov
and
out
jae
jle
or
dec
xchg
xchg
pop
cltd
xchg
fwait
dec
dec
ret
mov
les
daa
frstor
daa
iret
jae
add
sub
std
inc
aaa
or
lock
enter
popf
out
sub
xor
push
xchg
xchg
xchg
xchg
popf
pop
popf
push
jne
adcb
popf
xchg
popf
mov
xchg
xchg
popf
mov
ret
popf
fdivs
jecxz
call
cmp
sahf
push
out
fcompl
inc
dec
add
cmp
xchg
push
pop
sahf
xchg
fs
and
popl
xchg
xchg
sahf
popf
sahf
stos
sahf
mov
xchg
xchg
sahf
leave
sahf
pop
push
jg
sbb
repnz
icebp
cmpsb
out
mov
lahf
aas
sysret
loopne
enter
lahf
testl
push
xchg
cmpsb
repnz
decl
inc
add
inc
inc
ss
cmpsb
push
adc
cmpsb
dec
dec
mov
je
test
jne
ja
mov
cmp
ja
lret
outsb
xchg
xor
lahf
mov
pop
hlt
and
push
mov
insl
xchg
mov
cltd
push
mov
cmp
cmp
popa
imul
jno
add
pop
jo
pushf
stgi
leave
leave
leave
inc
vpmullw
leave
fcmovnu
xchg
or
dec
push
mov
popa
in
mov
insl
jp
cmpsl
push
mov
stc
je
insb
xchg
mov
jb
mov
cmp
leave
stos
mov
add
ret
cmp
lret
fimull
out
cmp
ljmp
cli
or
or
adc
adc
sbb
xor
and
frstpm(287
roll
shrd
popf
outsb
das
jbe
jle
movsb
test
inc
push
pop
loop
fsubp
test
stos
inc
jno
add
mov
xchg
das
inc
lahf
add
daa
push
leave
cmp
insl
mov
xchg
add
jle
mov
inc
mov
repnz
pop
mov
dec
ss
or
in
xchg
xlat
mov
add
mov
dec
xlat
fistps
pop
out
scas
outsb
repnz
testl
jb
mov
pushf
loope
fwait
pushf
push
inc
movsb
dec
movsb
fildl
mov
pop
movsb
pcmpgtw
add
lahf
xchg
outsb
daa
fisttps
lahf
sahf
test
push
xlat
aas
add
movsb
push
or
sarb
das
jge
add
jl
cmp
push
lods
mov
movsl
adc
push
iret
sbb
es
add
lar
inc
mov
pop
xor
pop
movsl
push
leave
cmp
movsl
mov
dec
leave
repz
test
mov
add
movsb
pop
lods
push
add
dec
sysret
mov
loopne
int3
pop
aam
fmull
or
outsl
xchg
or
cld
movsl
jne
pop
scas
add
or
mov
ss
lods
das
cmpsb
push
iret
repz
add
pop
add
inc
push
cmp
jo
ja
cs
mov
fwait
pop
mov
data16
jg
scas
lcall
and
mov
pop
xor
iret
daa
jmp
xchg
cmp
sti
inc
das
add
pop
scas
xor
scas
add
add
scas
adc
lcall
movsl
xchg
xchg
cmpsl
cmpsl
xor
inc
mov
scas
xchg
in
and
ja
je
jns
leave
leave
cwtl
mov
sahf
xchg
pop
aaa
lidtl
add
mov
or
or
das
cmp
sysret
or
shlb
shll
aaa
jns
das
sbb
pop
mov
pushf
out
push
dec
push
daa
insb
pop
insl
mov
push
push
test
inc
push
pop
and
rorl
pop
jno
repz
mov
test
test
push
add
xchg
push
cltd
out
and
in
test
sbb
mov
push
mov
add
mov
mov
das
int3
add
dec
aam
in
in
dec
push
adc
pop
and
iret
pop
cwtl
loopne
test
scas
adc
iret
jae
add
xor
iret
clc
test
cmp
cltd
invd
sbb
out
fs
pop
push
dec
pushl
dec
dec
sahf
add
xchg
push
push
test
mov
outsb
mov
jg
psrad
ljmp
pop
cli
iret
sbb
mov
push
xlat
sub
clts
jns
dec
popf
ja
lahf
or
jns
xor
dec
in
dec
sahf
adc
adc
fimuls
out
push
jb
jb
xor
or
add
out
mov
enter
pop
mov
ja
xchg
loopne
xchg
lock
push
dec
dec
clc
add
push
mov
jns
xchg
sbb
mov
cmp
or
lods
xchg
pop
or
dec
cmp
adc
push
stos
dec
sarl
pop
call
add
pop
xchg
or
jb
dec
or
jo
cmp
es
jbe
jb
jbe
xchg
in
xchg
pop
sahf
add
mov
or
mov
fwait
dec
and
push
out
jb
jmp
outsl
and
or
adc
sub
push
pushl
in
ja
pop
ja
in
and
lods
iret
pop
ucomiss
add
dec
dec
in
xchg
hlt
enter
popl
cltd
call
sub
outsl
insb
pop
push
divl
cmp
test
dec
mov
push
xchg
pop
and
or
add
ds
inc
aam
pop
hlt
mov
cmp
pop
add
lahf
xor
sub
jo
push
add
dec
mov
out
pop
mov
xchg
pop
sub
inc
leave
rep
xchg
scas
sqrtps
add
mov
scas
scas
jno
inc
jb
scas
sarb
lahf
add
mov
ror
fsubrs
fmuls
loopne
iret
in
mov
inc
jp
dec
mov
jb
dec
push
scas
es
es
fsubl
xchg
xchg
add
dec
ja
je
out
pop
push
add
add
fldl
imul
in
pushf
xchg
movsb
aas
mov
movsb
mov
fs
scas
movntq
cmpsl
or
pop
sidtl
sbb
cltd
loopne
and
mov
or
mov
enter
dec
cmpsl
push
pop
xchg
iret
leave
jmp
add
repz
lahf
xchg
xchg
leave
rolb
inc
loopne
mov
mov
rorl
out
mov
das
mov
repz
cmp
inc
push
add
add
repz
pop
add
dec
dec
mov
mov
or
xchg
sahf
xchg
out
pushf
add
jns
mov
jns
ja
push
or
or
adc
out
or
hlt
mov
repz
cld
mov
psubsb
comiss
mov
mov
xchg
cmp
leave
inc
bound
jb
fcmovne
repz
setnp
mov
push
push
stos
mov
or
push
ffreep
mov
mov
out
out
negb
mov
adc
pushf
pushf
pushf
pushf
xor
inc
pop
pushf
pushf
pushf
pushf
jae
movsl
mov
scas
sbb
push
pop
cs
jns
outsl
ja
xchg
leave
repz
mov
mov
jns
lret
dec
sbb
inc
mov
jmp
pop
mov
inc
fwait
mov
repnz
and
dec
mov
iret
sub
add
sahf
pushf
pushf
pop
xchg
popf
movsl
mov
jb
enter
mov
mov
mov
leave
out
in
or
rorb
in
xchg
mov
mov
mov
mov
mov
xor
inc
mov
mov
pop
leave
leave
inc
bnd
mov
leave
leave
leave
xchg
pushf
movsb
lods
pop
in
iret
mov
push
mov
or
out
int3
or
or
fisttpl
jns
or
in
iret
cltd
pop
mov
cld
mov
mov
rorb
adc
rorb
xchg
xchg
iret
out
mov
mov
insl
xchg
pop
push
scas
mov
lret
lret
add
pmaxsw
jns
lret
lret
lret
lret
test
pushf
mov
lret
lret
lret
cmpsl
mov
mov
mov
mov
lret
lret
lret
lret
mov
mov
mov
lret
lret
lret
ljmp
mov
scas
adc
iret
repz
push
push
inc
pop
dec
cmp
repz
push
and
cmp
repz
jp
repz
and
xchg
cmp
repz
mov
sahf
outsb
repnz
sub
ret
stc
mov
xor
sub
pop
psubw
fwait
jne
mov
push
adc
cmp
rorl
das
sbb
enter
pop
inc
mov
insl
in
mov
call
pop
fidivrs
in
jbe
cmp
ret
mov
leave
push
loop
mov
and
push
add
mov
ja
daa
mov
fildl
addr16
in
sbb
filds
in
fdivl
cmp
jns
aad
add
jmp
insl
mov
sarb
or
jns
xchg
fistl
pop
and
dec
aaa
ud2
inc
or
sahf
out
jbe
pop
fs
jl
in
dec
xchg
xchg
popf
in
dec
sahf
adc
mov
mov
leave
sbb
aam
jns
sahf
out
sbb
cmc
sbb
add
and
sub
mov
push
repnz
push
jb
mov
mov
mov
mov
pushf
pushf
pushf
mov
sub
iret
repz
pushf
outsl
emms
adc
xchg
daa
daa
daa
mov
setg
lcall
daa
daa
mov
daa
das
pop
aaa
aas
pop
cmp
daa
daa
jnp
mov
daa
iret
jae
test
dec
jnp
cmp
cmc
adc
jbe
cmp
and
pop
xor
dec
sahf
sub
inc
mov
nop
insb
pusha
jl
adc
loopne
daa
mov
outsl
in
mov
cmp
jae
das
roll
pop
and
ret
pop
mov
and
icebp
push
or
inc
dec
shll
push
inc
popf
cmp
repz
add
adc
sub
je
out
adc
lar
mov
inc
sbb
dec
push
mov
pop
inc
sbb
cmp
sbb
leave
sbb
enter
in
leave
ror
inc
cs
add
pop
js
xchg
aas
pushf
rcrb
fsubrp
and
leave
xlat
iret
xchg
add
jbe
jns
fbstp
es
mov
rcrl
rcll
mov
leave
leave
in
pop
pcmpgtw
xchg
xchg
xchg
mov
push
cwtl
mov
test
add
repnz
rol
loope
leave
inc
repz
add
test
leave
adc
lret
es
outsl
mov
ds
mov
xchg
adc
cmp
test
popf
pushf
pushf
pop
pushf
movsb
lods
mov
outsb
fnstsw
xlat
int3
push
xchg
out
in
fmull
enter
call
int3
insl
movl
cmp
xor
add
inc
add
mov
ret
pusha
cmpsl
insl
iret
in
in
jne
test
pop
and
mov
mov
rol
enter
repz
repz
in
sti
add
or
pop
adc
push
dec
sahf
add
sub
jb
push
mov
push
les
ss
pcmpgtd
push
in
jbe
mov
pop
xchg
mov
inc
cmp
xchg
decb
sahf
or
enter
mov
fsubrl
pop
fincstp
loope
add
jb
add
or
adc
leave
and
mov
outsb
daa
pop
inc
dec
xorps
leave
leave
inc
repnz
jp
in
jbe
rorl
cmpsl
es
dec
les
cmpsb
or
vunpckhps
pop
pop
ja
xchg
clc
mov
lahf
add
mov
pop
cmp
cmp
xchg
inc
dec
add
inc
jb
or
sarb
mov
shlb
leave
repz
mov
mov
and
add
in
add
ret
mov
lods
pop
movhlps
repnz
sbb
xor
inc
outsb
movd
mov
lahf
push
pop
push
repnz
add
xchg
das
aas
jmp
lahf
mov
ret
das
das
das
int
fadd
jecxz
out
das
das
das
das
stc
movl
das
das
das
das
and
enter
fldt
das
push
enter
sbb
sbb
sbb
in
in
sbb
push
adc
adc
addr16
out
cmp
jge
xchg
xor
xor
sahf
out
mov
out
sahf
out
loopne
jmp
iret
sarl
cmp
leave
cmp
jns
out
push
pop
cmp
sub
jns
xchg
out
cmp
dec
in
pop
aaa
cmovb
pop
inc
fs
in
outsl
inc
test
repz
nop
dec
fwait
dec
cmpsb
xchg
xchg
xchg
dec
aaa
jns
fisttpll
sqrtps
xchg
xchg
daa
daa
decb
lret
xor
fstps
lret
lret
fcom
enter
pop
lret
lret
mov
lret
push
aas
mov
ror
iret
xchg
lret
stos
lret
and
lret
lret
lret
lret
pop
call
lret
lret
pop
mov
lret
iret
or
in
lret
and
cs
cmp
iret
repz
adc
pop
cmp
repz
sbb
repz
repz
xchg
iret
repz
sbb
mov
ja
cmp
mov
dec
sahf
out
and
and
hlt
testl
mov
mov
and
sub
jns
cmovno
dec
das
xchg
out
sahf
push
xor
insl
jbe
cmp
js
xorl
setl
in
movsb
pop
scas
cmp
repz
cmp
rcrb
fstpt
out
testl
jecxz
jns
sbb
test
ds
rcl
enter
int
int
es
pop
lahf
cmp
out
push
scas
pop
mov
leave
leave
push
repnz
out
jns
ljmp
mov
add
iret
or
movsl
adc
xor
enter
es
into
dec
aaa
jb
push
into
pop
into
pusha
push
shrl
pop
out
jo
clts
leave
leave
leave
leave
js
mov
cwtl
into
dec
mov
pop
jo
ret
pop
lret
daa
daa
pop
pop
outsl
pop
fninit
jmp
loope
jns
add
xlat
and
aas
iret
pushf
int
int3
jg
aas
iret
ss
mov
inc
mov
iret
inc
iret
dec
iret
mov
fstpl
jno
jl
mov
mov
pop
xchg
mov
repnz
mov
lahf
mov
repnz
iret
push
or
ljmp
rorb
push
imul
adc
iret
repz
adc
out
daa
arpl
sbb
jns
sahf
out
sbb
rorb
sbb
lcall
mov
push
and
rep
daa
mov
paddusb
outsl
repnz
daa
cltd
jecxz
leave
std
or
das
adc
jg
dec
loopne
repnz
push
shll
shrl
add
jbe
mov
add
push
leave
out
sub
enter
daa
daa
shr
rorl
sbb
jb
rorb
rclb
push
pop
and
jmp
mov
sahf
sub
aaa
rolb
dec
sarb
mov
pop
pop
setle
sahf
ja
jns
sarb
test
adc
jns
lcall
repz
sbb
movhps
mov
fmull
out
in
pop
jg
and
std
push
and
repz
ds
adc
and
repz
adc
aas
mov
jns
sub
dec
roll
lcall
push
inc
add
sub
mov
fldt
inc
mov
sarl
mov
add
mov
loopne
push
add
ss
dec
or
fcompl
aam
mov
aam
rorb
aam
and
aam
xchg
paddb
xchg
aam
pushf
aam
mov
mov
mov
aam
xchg
aam
aam
enter
test
pop
push
aad
aad
out
cs
das
push
add
add
adc
fistpll
cmovbe
xor
nop
sahf
ja
jno
push
add
mov
sahf
xchg
outsb
repnz
in
dec
dec
mov
aad
aad
sahf
fldt
pop
fists
out
xchg
out
out
adc
decl
pop
mov
lahf
jg
pop
das
lret
vmread
scas
das
aaa
fs
jl
sbb
out
pop
push
movd
js
inc
into
vpshlb
lahf
push
push
sub
stos
mov
out
jbe
lret
das
psraw
or
popf
mov
or
mov
adc
out
sahf
inc
adc
and
xlat
sahf
ja
xchg
setl
push
cmpsl
sahf
out
dec
cmpsl
and
rorl
and
rcrl
and
fisubs
jmp
out
ljmp
or
adc
ja
push
and
cs
out
in
dec
push
xor
out
xor
punpckldq
mov
in
dec
cltd
aaa
movsb
scas
unpckhps
call
movsb
sub
adc
stos
roll
shlb
xchg
test
aas
shrb
mov
mov
and
cmp
dec
in
out
aas
push
push
push
pop
and
inc
aas
into
cmp
mov
aaa
sub
aaa
jbe
mov
add
movntq
out
sbb
jns
or
or
or
aaa
or
in
outsb
scas
adc
adc
adc
and
outsb
daa
xor
in
jbe
frstor
das
push
xorps
sbb
das
insl
push
and
jbe
in
in
push
pop
andb
jae
leave
in
cmpb
test
xchg
outsb
daa
daa
iret
sub
daa
mov
dec
mov
into
aas
xlat
sbb
les
mov
push
loop
add
jmp
push
push
xor
out
sahf
out
and
adc
iret
repz
cld
call
aam
iret
repz
int3
enter
jns
repz
lods
out
in
sahf
movsb
cwtl
nop
mov
repz
fs
push
inc
repz
repz
cmp
sbb
inc
ds
loope
add
push
push
inc
sbb
xor
adc
and
add
mov
sbb
std
add
inc
test
sbb
adc
cmp
daa
pop
lock
add
movsb
add
cmpsb
mov
pop
movsl
sbbl
ja
pop
shll
pmulhuw
jbe
inc
mov
inc
push
in
jmp
mov
mov
in
call
and
adc
push
ficompl
mov
xor
mov
fcomp
loopne
jb
jle
mulb
inc
mov
sub
dec
jnp
or
push
in
or
and
mov
dec
xchg
push
clc
jle
inc
mov
ja
aaa
push
pushl
xchg
mov
inc
mov
pop
das
aas
test
inc
dec
pop
add
repnz
dec
add
repz
mov
or
out
sahf
adc
adc
jns
inc
sbb
repz
repz
sbb
iret
sbb
push
sub
enter
lcall
jmp
jns
sarb
js
jns
mov
decl
cmp
jns
inc
lcall
mov
popf
or
icebp
xchg
push
rcrb
inc
xor
aaa
inc
sbb
jecxz
scas
adcb
pop
push
and
les
out
icebp
push
test
or
mov
adc
push
push
mov
pop
aas
pop
daa
push
lods
push
negl
fildll
and
mov
pop
in
push
jg
out
cs
jp
mov
add
rorl
out
add
rolb
int
bound
xchg
stc
adc
ja
or
xor
cmp
sbb
loopne
push
js
mov
jns
repz
lock
and
push
ds
lret
icebp
cld
lock
ds
cs
jns
add
lock
or
jns
jnp
or
adc
in
repz
out
enter
sbb
push
mov
test
repz
rep
and
cmp
and
ret
pop
clc
mov
and
mov
xor
mov
sbbb
es
xor
add
lods
jg
leave
sahf
out
jo
pop
cmp
pop
js
xor
out
mov
repz
xor
xor
repz
insl
add
inc
lcall
mov
jne
testl
insb
lods
scas
stos
and
cmp
add
inc
ds
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
incl
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmpb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
jmp
pop
cmp
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
and
imul
add
sti
aas
jno
or
mov
jg
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
and
loop
mov
xchg
test
aas
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
dec
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
fisttpl
scas
pop
pop
mov
adc
jb
cmp
inc
push
dec
jnp
fbstp
xor
ja
popa
push
out
mov
lcall
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
sar
call
mov
sub
mov
sbb
dec
jno
repz
incl
in
insl
push
mov
hlt
movl
imul
std
in
leave
gs
decl
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
stc
jmp
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
fdivs
jne
filds
or
shrl
push
fdivrp
call
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
lcall
and
or
adc
stos
sbb
data16
inc
fdivl
jno
incl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
or
mov
cmp
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
fisubl
cld
call
gs
aam
pop
popa
mov
into
pop
cmp
incb
loop
mov
dec
adc
ret
movsb
sti
hlt
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
lcall
pushl
jle
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
fcomip
decl
imul
andl
shrb
rclb
or
or
incl
inc
or
das
es
lds
or
decl
lock
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
pop
inc
ljmp
shrl
or
inc
mov
aaa
pusha
mov
fdivrp
dec
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
jl
je
pop
add
daa
iret
insb
fs
push
jns
js
mov
aad
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
mov
pop
adc
aas
push
mov
inc
lahf
movsl
adc
test
mov
fs
movl
dec
bound
rol
insl
bound
push
dec
ss
inc
dec
mov
je
push
fildll
adc
cmp
inc
jno
mov
aas
pop
inc
cmp
pop
bound
push
aaa
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
and
xor
popa
icebp
sub
insl
pop
insb
imul
es
imul
dec
movb
inc
or
push
inc
jp
jecxz
aam
and
sbb
shll
or
push
fildl
sbb
jbe
dec
in
or
pop
shll
mov
je
inc
inc
or
xor
push
or
push
pop
aaa
sbb
test
xor
insb
popa
jns
push
adc
insb
or
mov
stc
popa
xchg
cmp
ret
pop
add
aas
inc
add
inc
aam
push
aas
dec
mov
pop
add
cltd
and
arpl
insb
daa
int
sbb
inc
daa
pop
inc
aas
enter
jle
and
inc
xchg
shl
sbb
inc
pop
into
out
std
icebp
xchg
inc
inc
inc
add
ds
cmp
scas
add
pop
int
mov
aas
int
push
dec
cmp
inc
mov
insb
mov
sbb
mov
aam
ds
outsb
jne
andl
dec
jge
jnp
pop
aad
xor
xor
or
aad
arpl
add
addr16
pop
fwait
aaa
jbe
xchg
into
pop
jo
rcr
daa
popf
pop
inc
cmp
mov
adc
mov
inc
ret
add
addr16
xchg
and
pop
imul
mov
cmp
mov
inc
sbb
xlat
inc
add
push
mov
xchg
out
jb
sub
cmp
or
add
popa
dec
popa
jo
lahf
gs
lahf
push
outsl
outsl
test
mov
ret
xlat
aam
jno
lds
bound
sub
sub
in
nop
test
pop
cmp
test
push
arpl
cmp
mov
add
push
dec
sub
outsl
insb
jns
subl
das
inc
jb
push
fwait
sub
gs
pop
sahf
inc
outsl
arpl
insb
paddw
bound
cmpsb
jbe
lods
ja
inc
jbe
xor
jg
pop
daa
es
dec
xor
imul
les
das
xor
inc
shlb
ret
repz
movsb
sbb
and
and
push
and
dec
mov
cwtl
pop
inc
dec
and
cs
dec
cld
adc
inc
cwtl
sbb
inc
and
dec
sbb
sbb
cmp
or
sub
inc
dec
cmp
je
jns
arpl
mov
cmp
pop
pusha
in
pop
in
xchg
insb
insl
aaa
push
and
push
pop
lret
sub
and
mov
test
mov
mov
add
add
jae
add
cmova
and
inc
push
push
fimull
add
cmp
loopne
adc
dec
add
add
cmpsl
xorb
fistl
cmp
or
pop
pop
push
or
or
or
or
pop
rcr
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
data16
in
cmpsb
jbe
or
sarb
rolb
nop
add
add
add
adc
add
les
add
mov
jno
mov
or
add
jb
ljmp
mov
ds
xor
adc
pop
and
idiv
pushl
xor
inc
mov
adc
xor
cmpb
loopne
pop
mov
add
adc
aaa
and
add
fcoms
rclb
jne
adcb
addr16
pusha
add
pop
dec
add
sbb
andb
into
add
add
scas
cmp
adc
out
rolb
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
mov
add
xorl
scas
dec
mov
cmp
add
js
fbld
cli
sub
rcr
push
ret
xchg
and
sub
out
mov
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
or
inc
dec
xchg
mov
jg
loope
mov
cmp
adc
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
inc
mov
dec
or
adc
pop
inc
inc
xchg
add
stc
stos
pusha
add
std
or
add
lds
cld
cli
and
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
adc
dec
adc
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
fdivp
jmp
orb
int3
lcall
fs
scas
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
lea
dec
out
pop
jb
mov
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
adc
pop
jg
hlt
push
add
stc
loope
push
mov
sar
andl
aas
icebp
testb
mov
call
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
mov
or
push
inc
sbb
paddb
inc
mov
decl
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
sti
jmp
or
dec
fisttpll
out
aas
std
cli
pushl
push
idivl
cmp
sub
inc
scas
inc
mov
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
push
nop
jbe
fsubl
or
mov
mov
cmp
sti
punpckhbw
cmpsb
orb
mov
loopne
cmp
cmp
js
jmp
xchg
pop
clc
pop
hlt
mov
xor
movsb
add
lea
jg
call
cmc
jmp
std
xorb
jg
aad
adc
ret
das
pop
lcall
call
pop
shlb
out
sarb
sbbl
jno
or
sar
ljmp
les
cli
mov
mov
inc
arpl
stos
mov
lcall
pusha
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
lcall
cmpsl
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
das
clc
decl
add
ret
fcmovu
ds
cmpsl
scas
pushl
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
pushl
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
lcall
cmpb
add
jg
jle
jg
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
loopne
idiv
pop
cld
addl
adc
and
xor
mov
lahf
fmull
enter
jecxz
scas
sub
mov
pop
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
negb
push
inc
or
pop
jg
add
pop
jg
mov
aad
test
mov
idivb
movsb
mov
iret
push
jbe
push
inc
mov
icebp
pop
incb
jno
adc
push
inc
jecxz
cld
sti
fcomip
sbb
sarl
adc
loopne
sar
addl
mov
mov
imul
push
in
push
cmp
dec
push
in
aas
mov
inc
fildl
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
clc
call
jnp
rcrl
rolb
pop
inc
jb
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistps
lds
fidivrl
jg
decl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
cs
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outsl
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
decl
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
fwait
ljmp
sbb
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
decl
hlt
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
incl
pslld
pushf
imul
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
in
xor
or
pop
in
mov
inc
add
cltd
mov
or
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
xchg
fldenv
sbb
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
jno
cmp
sub
arpl
out
iret
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
jbe
pop
add
lahf
mov
jl
icebp
push
lahf
sti
inc
pop
imul
pushl
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
inc
aam
lcall
repnz
add
push
sti
pop
inc
leave
dec
lods
or
mov
push
mov
mov
int3
pop
iret
and
incl
add
pop
sub
and
fcmovbe
nop
xor
fxch
mov
xor
xchg
mov
scas
filds
pop
ja
or
subb
das
nop
or
scas
ljmp
xchg
cmp
xchg
mov
cmpsl
inc
das
inc
push
dec
cmp
jb
outsl
out
xor
push
ljmp
arpl
lods
jae
xor
sbb
adc
mov
jge
lcall
shl
das
dec
pop
shll
or
mov
mov
mov
into
shrl
shrb
jmp
fwait
cmp
pop
ja
jbe
fists
fldcw
jmp
nop
pop
insl
je
ds
call
fwait
ret
insb
mov
ja
push
ja
enter
outsb
repz
mulb
repz
pop
xor
jmp
jg
hlt
lcall
jbe
sbb
fsubl
orb
pop
lahf
push
pushf
mov
mov
xchg
jmp
in
dec
es
mov
mov
xchg
into
xlat
pop
cmc
cld
out
adcl
call
mov
andl
sub
sub
fs
leave
mov
pusha
sbb
das
andb
lea
jne
mov
stos
adc
movsl
cmp
scas
ficompl
insl
push
inc
js
cmp
cmp
jmp
lock
or
adc
mov
mov
xor
aaa
and
daa
mov
call
outsb
or
sub
cmp
pushl
jne
and
add
gs
or
pop
and
dec
xchg
mov
jecxz
test
dec
xchg
sub
or
hlt
mov
adc
sti
inc
out
jbe
lods
cli
lods
mov
xor
pop
pushl
cmp
je
fidivs
xchg
dec
jecxz
and
cmp
jge
cmpsb
popa
lret
lock
dec
mov
jg
adc
stos
nop
lea
icebp
stc
in
outsl
mov
pop
pop
mov
out
call
mov
into
cmpsl
push
sub
sarb
xor
rcll
js
ret
jns
sub
jo
icebp
xchg
dec
sti
push
cmp
div
sbb
adcb
mov
lahf
xchg
jne
xchg
andb
jg
xlat
pop
dec
js
call
test
arpl
inc
push
stos
xor
icebp
mov
movsb
mov
xor
fcomip
cld
push
push
mov
insb
or
sbb
adc
inc
and
bound
daa
sbb
jno
daa
stc
cs
sbb
pop
pop
mov
xor
cmp
scas
clc
std
inc
push
lret
int3
jg
stos
loope
push
push
or
inc
fistpll
mov
cmp
jmp
faddl
jle
push
testb
push
pop
push
mov
fs
fsubs
popf
xor
jg
ljmp
xlat
mov
lods
or
or
ja
mov
jb
ficoml
sub
pop
jnp
pushf
mov
fistl
jne
mov
xchg
jge
maxps
add
bound
pop
xchg
incl
xchg
or
hlt
mov
xadd
mov
pop
int3
sub
and
jg
dec
inc
push
or
lcall
add
mov
push
sub
jg
decl
push
stc
rolb
cs
lret
mov
mov
pop
test
mov
scas
lcall
jp
jl
pop
aaa
or
and
aaa
orl
notl
cmp
je
insb
leave
lcall
dec
stc
lock
in
hlt
xor
cmp
mov
fisubrl
fcmovnbe
into
lret
stos
jg
mov
sub
int3
pop
cmc
test
inc
dec
roll
xchg
stos
mov
jl
pushl
pop
repnz
lret
mov
inc
cs
repnz
ljmp
mov
mov
clc
mov
ret
fidivs
cmp
add
incl
pop
lock
es
push
xor
sbb
ss
xor
xorb
clc
push
clc
decl
jb
xchg
fstps
pop
aaa
lock
jmp
jnp
inc
stos
cmp
incl
xchg
add
cli
or
cmp
mov
adc
call
xchg
or
and
cmp
stos
aad
mov
xchg
cld
pusha
mov
pop
cmpsl
or
lret
movsb
jo
inc
inc
leave
mov
jne
ljmp
cmp
loope
popf
adc
xchg
sarb
fidivl
divb
cmp
out
shlb
hlt
inc
adc
lret
pop
mov
lret
jecxz
decl
xor
xlat
scas
enter
shlb
je
mov
ljmp
cmc
push
pop
xchg
or
mov
clc
fdivl
adc
jle
mov
or
mov
data16
ja
jge
xor
and
shlb
in
outsb
rcr
sub
dec
xchg
lods
call
dec
lcall
fmuls
shll
je
test
xor
pop
jp
fadd
lret
loopne
stc
mov
cli
js
push
lock
and
hlt
int
subl
loopne
pop
mull
dec
adc
cltd
incl
insl
mov
shl
pop
data16
adc
dec
mov
xor
or
xor
jns
push
push
jbe
test
dec
jno
data16
adc
test
ficomps
jmp
cmp
cld
cmp
xchg
fisubrl
xorl
dec
mov
adc
jmp
popl
mov
mov
ret
out
xchg
aas
push
pop
lcall
adc
cmp
lcall
and
insl
sbb
lods
movsl
jmp
sbb
pop
mov
lret
call
lods
jmp
loopne
jge
dec
or
in
rcl
dec
stc
mov
ja
adc
incl
dec
jge
or
xchg
lods
inc
cmp
mov
xor
fbld
sti
pushl
cmp
leave
push
fmuls
or
adc
or
iret
mov
aam
sub
outsl
test
cmp
add
jae
into
dec
or
push
repnz
ja
lock
xor
jne
mov
push
jg
call
sub
scas
in
fmull
popf
dec
inc
cmpsb
sub
test
call
or
ja
mov
push
xor
aaa
pop
inc
mov
pop
pop
scas
icebp
mov
mov
inc
int3
outsb
call
xchg
scas
sub
xor
sub
loopne
sub
add
cwtl
into
xor
push
decl
push
and
mov
and
rorl
add
mov
mov
ljmp
sub
repnz
and
pop
enter
ljmp
adc
incb
pop
mov
subb
jae
inc
push
xchg
xor
stos
mov
lods
loope
sbb
inc
insb
mov
dec
cli
adc
cmpsb
out
cli
mov
or
nop
cmpl
add
jmp
insb
out
in
jmp
lock
push
repz
cltd
imul
lods
int3
or
inc
pushl
dec
mov
adc
fdivrl
xchg
cmpsb
lret
lret
daa
sub
das
call
sbb
lea
in
sub
mov
pop
push
adc
jp
adc
jg
lcall
incl
mov
and
mov
in
jecxz
cmp
mov
push
outsl
es
mov
lock
outsb
cs
cmp
cmp
adc
lcall
lcall
mov
call
sbb
push
cs
push
or
jl
addr16
imul
aam
mov
sub
xor
cmp
fbstp
fiaddl
enterw
mov
stos
xor
dec
mov
cmc
cmpsl
or
mov
test
in
sub
lods
dec
lock
call
pop
mov
jbe
cmp
mov
pop
mov
sub
out
mov
xchg
es
decl
lcall
std
pusha
inc
es
negb
jno
xor
dec
mov
decl
out
or
xor
adc
add
xor
stos
or
incl
aad
mov
mov
and
ja
scas
aas
stos
xchg
std
pushl
push
mov
dec
mov
mov
push
push
js
mov
jg
stc
lahf
mov
pop
pop
jg
or
xchg
xor
sbb
cmp
leave
mov
cmpsb
adcl
sbb
dec
mov
and
mov
decl
setns
mov
mov
repz
push
mov
sub
out
lods
pushf
clc
rcll
call
mov
fdivr
jmp
call
clc
ss
jne
cwtl
lods
fstl
test
ret
pop
inc
adc
int
push
mov
pushl
xchg
dec
scas
mov
out
mov
push
shl
or
cmc
adc
mov
and
call
icebp
add
repz
lds
adcl
sub
insl
pop
cmp
push
das
dec
lcall
cmp
idivb
sbb
inc
xor
add
mov
adc
jle
mov
inc
xor
lcall
mov
xor
jb
mov
jno
mov
mov
in
fistpl
js
jmp
mov
loope
jmp
sub
sahf
idivl
les
mov
cmp
call
dec
or
xor
fdivrl
mov
lret
sti
add
sub
pop
jae
xchg
loopne
mov
test
xlat
lea
adc
jns
pushl
fidivrl
dec
or
add
sub
xchg
les
pop
outsl
notl
ljmp
stc
mov
mov
lds
sarb
into
aas
mov
insb
xchg
sub
and
ss
sub
cmp
test
pop
bound
jmp
mov
dec
xchg
mov
sbbb
push
mov
loop
inc
dec
lds
jp
scas
mov
lret
or
popa
push
or
mov
flds
fisttps
decl
dec
jle
pop
aas
fst
sub
cli
std
scas
clc
decl
neg
mov
cmpsb
or
xchg
nop
shlb
and
ljmp
outsb
test
mov
cmp
pop
jae
out
mov
ss
call
jno
mov
iret
daa
out
pop
les
and
aam
mov
xchg
jmp
add
test
dec
popf
add
add
in
lock
mov
jmp
pop
lret
dec
mov
gs
mov
ds
ficompl
outsl
lcall
decl
pop
cmpsl
mov
std
xor
sahf
and
dec
push
jb
popa
std
inc
push
push
ret
lea
sbb
clc
push
mov
add
sti
add
lret
pushl
mov
xor
push
shlb
pop
fwait
test
cmp
and
mov
lret
bound
inc
cmpsb
jnp
sub
iret
rorl
adc
push
leave
fcos
ljmp
push
xchg
cmp
test
je
loop
cwtl
pop
pushf
addr16
loopne
loopne
push
ss
or
fdivrp
ljmp
test
xchg
bound
lea
adc
jno
sahf
aaa
xchg
add
lock
pop
decl
dec
cld
cld
mov
jne
aas
xor
inc
divl
sbb
adc
ljmp
imul
aas
push
mov
adcb
scas
cmp
popf
jnp
scas
cli
decl
pop
push
xchg
xor
sub
lret
xchg
stos
dec
inc
lds
sarl
decl
negb
pop
sbbb
fbld
pop
mov
add
rcll
xlat
push
inc
jmp
icebp
mov
add
movsl
aas
in
xchg
jno
jge
dec
add
loop
jp
cwtl
push
sub
mov
and
jmp
xchg
imul
pop
call
in
ja
or
push
nop
add
sub
pop
xlat
mov
enter
js
xchg
mov
fstl
ds
push
je
repnz
cmp
outsb
xchg
pop
mov
dec
sbb
clc
lcall
mov
sete
push
rorl
ja
ljmp
test
xchg
inc
or
fs
ret
ror
push
sub
xchg
fwait
xchg
sub
imul
iretw
das
xchg
fdivs
xchg
ds
push
pusha
pop
inc
mov
std
fstl
dec
mov
jnp
incl
test
daa
pop
shll
in
mov
inc
sbb
ds
imul
cmp
pop
std
mov
aas
inc
nop
push
mov
into
mov
xchg
xor
ljmp
xor
rep
imul
add
subl
mov
nop
fs
push
mov
decl
das
adc
inc
jne,pt
jmp
lea
dec
xchg
aas
pop
loop
pop
int3
dec
push
push
ljmp
inc
xchg
aam
shll
shrb
inc
jno
adc
mov
pop
incl
xchg
add
insb
int
popa
or
pop
sub
inc
pop
shll
sar
xor
lcall
fsqrt
lahf
sarl
jle
pusha
mov
lods
hlt
imul
enter
int
pop
insb
loopne
cs
mov
adc
fsubrp
lcall
pop
shl
mov
adc
and
add
mov
jg
mov
mov
iret
jecxz
lcall
pushl
add
adc
sahf
gs
mov
push
mov
fdivr
call
dec
cmp
sub
lcall
nop
mov
in
mov
aad
nop
push
push
call
aad
pop
addr16
dec
xor
loopne
xor
in
test
call
jmp
addr16
jmp
xor
ret
mov
jnp
cwtl
jle
jbe
mov
adc
lock
lods
scas
ja
pushl
jecxz
es
mov
into
aad
sbbb
lcall
incb
call
sub
push
push
add
inc
mov
nopl
pushl
jge
movsb
in
sub
jge
lret
xchg
add
jle
enter
add
std
jns
int3
mov
inc
mov
sub
jns
jl
outsl
orb
push
jg
jb
jg
dec
aad
add
ljmp
gs
adc
add
push
xor
jae
daa
popf
add
scas
andb
stos
rorl
mov
cmp
mov
lock
fdivrp
lcall
int3
jno
sub
xchg
addl
gs
cmc
roll
pusha
cli
loop
or
call
call
loopew
sarl
sti
and
jo
jl
nop
jo
pop
js
icebp
push
cmp
call
sahf
pop
out
mov
cmp
mov
push
ss
jno
cmpsb
das
jmp
out
cltd
inc
pop
stos
fcoml
lods
insl
mov
mov
push
into
lcall
xor
jae
std
call
fwait
pop
sbb
inc
lahf
inc
test
sahf
dec
jmp
pop
cld
pop
jmp
lods
repz
jmp
mov
mov
insb
bound
aam
in
jg
mov
fcmove
hlt
jecxz
ret
ds
shll
test
mov
adc
jg
cltd
rcrl
sub
jl
mov
cmpsb
call
mov
arpl
pushf
jl
mov
jbe
add
jb
inc
push
clc
bound
das
xchg
ja
decl
sbb
inc
pop
in
enter
push
test
clc
mov
xor
mov
stc
inc
outsb
xchg
negb
fdivs
push
scas
lret
dec
mov
jg
mov
pop
cld
push
sub
push
daa
daa
mov
inc
push
dec
cmp
lcall
lock
mov
pop
scas
cld
pop
mov
sub
ss
dec
sbb
push
push
dec
adc
mov
lods
cli
cs
mov
repz
fidivl
outsl
popa
ror
pop
cwtl
adc
lahf
loopne
jl
cltd
mov
cltd
sbb
ja
jmp
xor
sbb
test
in
jae
mov
scas
jle
sbb
lcall
inc
cmp
push
xchg
push
test
test
int
das
clc
incl
or
clc
test
call
inc
sbb
loope
cmp
dec
jns
sti
nop
test
lahf
cmp
fcoms
sub
pop
pusha
cltd
pop
lock
dec
xor
into
dec
mov
and
push
jno
sar
outsl
clc
call
adc
mov
dec
jae
sbb
test
lret
enter
sbb
loope
std
jl
add
clc
mov
insb
xchg
push
adc
xor
ror
adc
push
insb
ljmp
inc
scas
lock
dec
into
int
pop
xor
xchg
mov
pop
jns
sub
jge
adc
push
loope
jmp
data16
dec
cltd
iret
gs
push
mov
bound
incl
pop
xchg
mov
sub
scas
dec
ret
lods
xor
stc
cltd
bound
or
fstl
testl
fldt
mov
sub
cmp
push
in
test
sub
mov
push
into
fcomip
ljmp
rorl
test
sarb
pop
inc
pop
mov
ljmp
adc
mov
ljmp
mov
cmp
pop
addr16
in
insl
adc
or
lcall
incb
pop
imul
add
inc
fisttpll
dec
inc
jo
cltd
daa
dec
cmc
pop
add
fdivrs
pop
adc
ret
adc
mov
push
andl
mov
sbb
mov
incl
pop
pop
add
rol
insl
mulb
pusha
das
mov
stc
mov
scas
clc
decl
sub
test
cmp
fisubrs
aaa
lods
out
cmc
lret
inc
jne
pushl
mov
adc
jbe
jmp
mov
into
jg
mov
incl
test
sub
mov
lock
mov
add
sub
jae
decl
pusha
daa
in
mov
jmp
inc
in
inc
xchg
rep
rcr
xchg
xor
pushl
pusha
test
out
jmp
jl
jge
xor
jns
inc
xchg
pop
jg
call
cmp
xchg
pop
rcrl
jmp
daa
adc
mov
mov
outsl
dec
pop
xlat
shlb
in
and
inc
call
clc
decl
xor
xchg
popa
inc
int
in
mov
enter
sbb
cmpsb
ret
xor
push
pop
lds
mov
cmp
repz
sti
cmpsl
insb
ja
ja
nop
inc
or
aaa
pop
ljmp
and
push
dec
push
mov
ljmp
jecxz
mov
pop
std
cs
jns
pushl
inc
aam
sbb
cli
or
in
push
inc
push
loope
push
or
jb
mov
gs
outsb
adc
push
lock
sub
push
cmp
push
xor
xchg
fimuls
test
arpl
mov
mov
jp
mov
fimuls
pop
lcall
jmp
sbb
and
mov
aam
jns
ljmp
and
sub
jb
ret
leave
mov
xchg
xorl
test
stc
mov
in
repnz
out
xor
jnp
mov
adc
push
sub
daa
popa
sbb
incl
loopne
sbb
adc
cmp
dec
mov
rolb
je
cmp
test
ljmp
push
adc
mov
sub
sub
cli
popa
adc
repnz
fldcw
test
repz
movsl
and
sbb
scas
cli
call
decl
dec
int3
cmpsb
jg
pushl
jo
xchg
aaa
xchg
xchg
test
pop
nop
cmp
xchg
adc
and
pop
fdivs
inc
push
setno
hlt
push
cli
pushl
std
adc
mov
gs
je
cmpl
jno
push
iret
enter
xchg
or
ljmp
dec
xor
insl
int3
out
int3
sbb
arpl
dec
fidivrl
push
aad
iret
scas
mov
jmp
or
mov
mov
sti
popl
std
lods
gs
cmp
lcall
decl
dec
sti
leave
std
pop
xchg
push
xorl
test
push
or
cmp
jbe
xchg
clc
sti
xchg
fucomip
jno
dec
cmpsb
hlt
imul
nop
inc
mov
das
inc
sub
xchg
scas
jb
add
jbe
bnd
sub
jb
frstpm(287
xchg
push
xchg
jmp
pop
sub
loope
fdivs
push
enter
mov
aas
insb
clc
inc
lock
lahf
scas
xchg
dec
push
bound
add
in
cli
push
pop
add
xchg
fadds
dec
lret
dec
inc
es
out
inc
sbbb
mov
lcall
mov
out
loopne
insl
or
xchg
jg
loopne
add
imul
ret
mov
mov
popa
mov
mov
pop
inc
xchg
outsl
sbb
daa
fildll
push
idiv
cmpsb
adc
xor
ficoml
leave
loope
lcall
icebp
sub
add
xor
jne
pop
out
pop
cwtl
sbbb
cmp
pushl
mov
xchg
repnz
mov
std
in
adc
xor
ret
mov
dec
lock
scas
pushl
fldl
mov
dec
cmp
into
xor
pushf
mov
mov
cmp
fisttpl
xchg
cwtl
sbb
cli
or
mov
xor
fbld
push
cltd
loop
and
xchg
ret
dec
cld
jge
fstpt
dec
jbe
xor
add
call
je
pop
jl
ja
scas
jae
pop
lret
sbb
incl
xchg
ljmp
mov
sbb
cmp
in
fidivrl
inc
or
jmp
dec
cld
jg
clc
push
mov
leave
fcoml
adc
jg
add
mov
inc
je
sbb
fcoms
insl
pop
pop
mov
mov
dec
jge
incl
mov
mov
and
push
xor
pop
jecxz
gs
loop
lcall
mov
cltd
std
std
arpl
push
out
adc
xor
test
jmp
lods
divb
cli
mov
lahf
pop
or
out
or
xchg
mov
push
mov
xchg
movsl
addr16
push
dec
leave
movsb
jp
fucomi
pop
jmp
add
jns
adc
cmp
xor
jo
clc
test
jb
fadds
in
ljmp
cld
and
aas
or
sti
dec
adc
into
dec
pop
dec
sub
in
lahf
add
roll
mov
cmp
negl
jg
mov
mov
and
push
cwtl
movsb
jl
and
push
fdiv
sub
pop
std
call
fstpt
cmp
push
xor
lock
aas
mov
xchg
inc
cld
call
pushf
ret
sbb
adc
cld
jg
roll
sar
clc
arpl
mov
movsl
clc
jo
sti
loopne
cmp
lods
lods
xor
stos
sar
jmp
out
jecxz,pt
call
test
stc
pop
notl
setle
nop
scas
movsl
xlat
adc
cmp
call
add
jle
cmpsb
mov
inc
add
push
dec
lds
push
push
pushf
cmp
into
inc
test
pop
inc
and
xorb
ret
xchg
pusha
mov
in
jecxz
xchg
and
and
push
mov
stos
mov
into
incl
out
adc
cltd
out
mov
into
push
ror
scas
cmc
xlat
les
mov
mov
dec
sbb
lcall
out
mov
aam
fmuls
mov
mov
outsb
lds
stc
jmp
inc
and
aad
test
lret
pusha
or
js
add
ljmp
popf
add
ss
mov
sbb
mov
das
dec
arpl
test
pop
hlt
lcall
push
ret
lods
add
pop
ret
ret
inc
lds
lahf
pop
xor
fwait
hlt
add
negb
ret
dec
cli
cmpsb
es
cmp
hlt
into
rorl
mov
cld
filds
xchg
mov
push
xchg
out
aam
mov
mov
and
pushl
sbb
push
jne
sbb
in
push
sbb
stc
stc
fwait
call
jp
neg
jg
incl
push
add
mov
or
jmp
sub
or
incl
dec
ret
lcall
sub
aad
cmpsl
mov
pushl
fildll
insb
in
mov
sub
lds
inc
mov
dec
decl
mov
mov
inc
sbb
xchg
jbe
mov
inc
mov
into
dec
js
loop
mov
test
or
addr16
decl
mov
inc
jle
pop
sub
mov
cltd
xor
dec
add
jae
jno
and
mov
mov
jae
jmp
iret
push
gs
xchg
push
sbb
sti
pop
in
icebp
das
cli
call
pop
repz
movsb
xchg
stos
cmp
cmpsl
popa
xchg
je
lcall
adc
cmp
decl
leave
push
xchg
jne
movsl
repnz
pop
dec
sub
push
insb
mov
incl
aas
shrl
mov
cmp
icebp
push
mov
lock
lcall
sbb
jbe
jle
add
mov
mov
test
cmp
scas
out
in
dec
test
push
std
dec
dec
sahf
jecxz
pop
pop
dec
cmp
cli
or
fidivs
xchg
std
add
push
push
fisttps
hlt
jo
cmpsb
push
xchg
loope
sbb
sti
fistpl
sbb
push
cmp
cmp
incl
mov
add
xchg
test
aad
jnp
dec
int3
cmp
ljmp
jb
push
or
pop
lds
cmpsb
in
dec
inc
mov
jnp
ljmp
loope
mov
cmp
dec
inc
lea
dec
pop
mov
fstp
icebp
out
cmpsl
lahf
stos
push
pusha
hlt
xchg
jl
out
push
cmp
pushl
cmpsl
imul
xor
sbb
xchg
sbb
outsb
outsb
lret
xchg
gs
fcmovnbe
push
mov
out
fadd
and
adc
lahf
fcoms
mov
and
dec
mov
jmp
icebp
decl
xor
movsl
push
movsb
scas
cmp
sub
mov
call
pusha
xor
sub
inc
push
enter
jmp
push
dec
repnz
enter
add
sub
or
test
pop
jb
decl
pop
std
lock
jnp
nop
es
hlt
adc
pushl
xor
dec
jb
fdivl
xor
int3
fimuls
adc
mov
push
xor
scas
jb
mov
jmp
push
fs
and
or
push
mov
mov
stos
cmp
shll
jle
data16
or
imulb
fstl
lcall
cmp
jl
aam
stc
or
cmpsl
jmp
movsb
inc
outsb
mov
add
sub
sub
pusha
and
sahf
jno
mov
iret
and
scas
or
inc
cmp
cmp
jmp
addb
test
push
mov
ljmp
dec
jmp
addr16
fcoms
jmp
pop
jp
and
les
push
cmp
repz
pop
pop
sar
sar
jae
popa
out
adc
test
add
xor
jle
mov
mov
cmp
mov
ljmp
iret
scas
rcr
or
shlb
pop
mov
jne
test
ljmp
repnz
push
or
inc
enter
mov
lcall
rol
xchg
sub
pop
jns
adc
cmp
lods
mov
call
stos
dec
and
mov
cmp
pop
scas
clc
ja
sub
das
add
scas
jns
ror
in
decl
sub
ret
adc
add
iret
jle
scas
push
aam
mov
mov
stos
pop
call
cld
jecxz
outsl
cwtl
inc
xchg
int3
ret
pop
pop
dec
int
push
push
lock
dec
add
jge
inc
loopne
xor
int
sub
mov
mov
mov
cmp
jmp
out
hlt
cld
repnz
dec
sub
dec
xor
scas
ret
out
fimuls
mov
xlat
pop
lods
pop
pop
cmpsb
mov
cmpsb
mov
inc
test
add
loopne
jl
popf
pop
imul
fwait
std
test
roll
fs
pop
ss
add
fnstcw
mov
jmp
das
lds
scas
sub
push
test
and
adcb
out
mov
decl
fstps
enter
iret
dec
inc
and
jnp
xor
rcr
aas
aas
cmc
inc
into
bsr
mov
arpl
shrb
inc
or
fwait
out
cli
push
lods
jae
pop
aas
loope
mov
mov
popf
xlat
adc
mov
insb
push
outsl
cs
ljmp
cli
call
pop
data16
out
dec
psubw
cli
in
aam
subb
incl
cld
jmp
int3
add
sub
xor
pop
cmpsb
mov
cmp
sub
add
fcompl
pop
inc
adc
or
aaa
pusha
sub
pop
cmpsb
push
jne
in
sub
repnz
lcall
adc
insl
sub
sbbl
mov
ret
fadds
out
add
pusha
mov
fisubrs
mov
cmc
push
fsubl
and
ret
rol
popf
loope
xchg
in
aaa
mov
pushl
xor
dec
fxch
mov
mov
out
call
adc
js
dec
cltd
cli
jle
dec
mov
mov
in
push
popf
cwtl
out
xor
roll
fcomip
cmp
rorl
inc
test
sub
dec
cmpsl
mov
lcall
pusha
or
cmp
icebp
inc
cld
xchg
push
dec
mov
cltd
pop
in
test
pushl
dec
push
mov
push
sbb
insb
mov
jo
repz
in
pushl
sbb
mov
insb
pop
int3
jge
and
out
xchg
sbb
insl
in
out
ds
xor
incl
repz
hlt
inc
xchg
mov
inc
test
mov
loopne
ljmp
add
xor
inc
jl
adc
out
ficompl
pop
jg
enter
lcall
int3
mov
add
imul
neg
daa
jecxz
jns
cmp
call
dec
or
adc
push
mov
scas
neg
inc
stc
ret
into
mov
pushl
jp
mov
xor
test
xchg
insl
cmpsb
mov
pop
mov
push
test
mov
outsb
test
jle
mov
cmp
xchg
pop
movsb
mov
cmpsl
inc
add
ljmp
in
call
or
pushf
push
or
hlt
push
pop
and
inc
fnstcw
decl
sarl
mov
sbbl
popf
xor
aad
sub
adc
ljmp
sti
push
dec
or
repnz
push
sub
or
mov
mov
jl
pop
decl
in
dec
xchg
cs
or
mov
mov
inc
inc
cmc
sbb
ss
test
fbld
clc
mov
pop
imul
iret
ja
imul
outsl
movsb
add
adc
fildl
xlat
insb
int
lds
push
ljmp
testb
jp
dec
pop
gs
out
sub
mov
pop
movsl
or
repz
add
or
call
repnz
ret
jl
or
lds
cmp
jge
mov
xchg
in
mov
call
pusha
jp
xchg
and
cld
mov
xchg
mov
data16
xchg
int3
call
pop
loop
enter
mov
shll
xlat
push
mov
cmp
sub
lcall
nop
jp
ljmp
jnp
iret
fisttpll
lret
xchg
cmp
fstpl
call
cld
pushl
inc
mov
dec
ljmp
outsl
stos
jp
clc
enter
enter
incl
cmp
jbe
enter
pop
into
push
add
mov
xchg
sbb
adc
dec
int3
sub
pop
cmp
xor
sar
mov
sub
arpl
xlat
sar
gs
sub
call
cs
xor
inc
jnp
cltd
sbb
xor
outsl
xchg
ret
lcall
push
outsl
xchg
xchg
mov
loop
inc
popa
ja
mov
decl
inc
out
adc
mov
enter
pop
in
mov
mov
or
rcll
cmp
mov
ss
insb
mov
call
jp
data16
mov
call
mov
roll
or
add
sbb
scas
add
in
mov
imull
fsubrp
cmpsl
cmpl
not
bound
jp
mov
push
xchg
sbb
mov
push
xchg
imul
loopne
lret
and
sbb
mov
ljmp
inc
imul
insb
out
out
push
imull
jne
lods
fimuls
gs
xchg
idiv
aas
xchg
cmp
fdivrs
data16
iret
sbb
fstpt
ficompl
mov
mull
inc
or
pushl
sbb
in
xor
in
jnp
pop
incl
cmp
and
pushl
and
lcall
xchg
inc
call
mov
inc
xchg
sbb
out
movsb
adc
popa
mov
jg
pushl
pop
jp,pt
clc
scas
cmp
mov
and
fwait
xor
data16
push
and
decl
fildll
test
fs
push
adc
in
push
out
popf
pop
and
je
call
cld
je
mov
scas
clc
stos
insb
sahf
icebp
shll
int
lahf
mov
decl
add
mov
shrl
adc
call
and
xchg
mov
movsl
or
ljmp
dec
sbb
mov
clc
and
sub
sti
inc
call
outsb
lret
inc
adcb
dec
fs
incl
jnp
shrl
lea
ds
mov
jbe
jl
push
shl
jmp
lea
sbb
lds
jg
mov
inc
mov
mov
lcall
rclb
stos
rolb
shrb
in
xchg
mov
inc
sub
call
push
gs
jae
push
pmullw
or
dec
leave
mov
adc
mov
sti
call
int3
and
test
outsb
mov
push
mov
mov
fwait
ja
jg
xor
icebp
out
mov
mov
sbb
ret
pusha
mov
or
test
jmp
decl
daa
inc
cli
xchg
pop
xor
push
out
mov
das
movsl
add
decl
mov
xor
cs
xlat
and
pushf
dec
fbld
inc
decl
jl
popf
push
roll
mov
movsb
sub
cltd
test
scas
mov
add
mov
popf
mov
das
or
or
mov
cli
scas
jge
cli
xchg
inc
daa
push
or
sub
mov
cmp
cmp
into
aad
adc
inc
scas
dec
cltd
lds
push
dec
fisubrs
and
cld
mov
pushl
xchg
adc
or
rorl
mov
shlb
mov
pushl
ss
aad
fmul
xor
jmp
loope
cmc
popf
mov
addr16
push
mov
je
inc
fisttps
js
push
cmp
and
push
call
mov
jg
divb
fcompl
loop
or
inc
clc
mov
ja
jmp
mov
adc
shrb
mov
cltd
mov
cmpb
call
or
test
test
and
sub
adc
mov
addb
jle
clc
ljmp
sbb
xchg
push
rolb
adc
pop
and
and
stos
outsb
incl
fs
shlb
xlat
mov
add
mov
loop
pop
inc
pop
scas
mov
jnp
incl
je
in
sbb
jae
sub
xor
xor
pop
xchg
push
jecxz
mov
aam
movsl
push
mov
inc
sub
adc
out
sbb
ficompl
push
inc
xchg
decl
sbb
fldt
outsl
loope
int3
aaa
jg
mov
mov
mov
mov
call
shlb
push
add
frstor
sbb
dec
mov
lods
jle
bound
add
cli
stc
mov
pop
hlt
ljmp
repnz
push
push
push
pop
lahf
pusha
push
xchg
pop
fwait
je
xor
decl
lock
sahf
stc
clc
and
mov
xchg
fs
cmp
fidivs
nop
lock
jmp
movsl
xchg
dec
mov
jge
sbb
inc
push
test
lcall
mov
push
xchg
lods
xchg
push
repz
pop
dec
sub
hlt
mov
test
clc
aam
and
idiv
ljmp
pushf
popf
aam
arpl
jg
push
and
fidivl
pop
arpl
add
sar
decl
imul
ret
fs
pop
jl
popa
outsl
loopne
mov
dec
mov
sub
test
incl
out
cmp
fucomi
pop
js
movsb
add
push
mov
and
cld
test
cmp
add
adc
ljmp
loop
push
mov
or
outsl
imul
xlat
inc
es
push
pop
jno
xor
xchg
stos
dec
ljmp
cmp
inc
dec
mov
fbld
xchg
pop
jecxz
repz
rorb
cltd
xor
dec
adc
repnz
sub
loopne
fnstenv
or
and
push
inc
stos
call
jmp
adc
cltd
rcr
lret
lret
mov
arpl
sub
pusha
loopne
add
cmp
push
aam
nop
pop
out
lret
popa
sbb
loop,pt
ljmp
addr16
pop
fisubrs
in
or
loopne
ljmp
xor
call
mov
mov
mov
fsubrs
out
or
ja
mov
mov
pushl
xor
stos
lret
pop
dec
in
pop
lds
jnp
lods
add
call
mov
push
data16
rcl
sbb
stos
pop
push
in
mov
push
cltd
std
pushf
pop
rcr
in
cli
incl
pushf
sarl
and
jmp
add
or
cmpsl
lods
dec
cmp
jno
js
bound
decl
push
mov
stos
ljmp
jecxz
xor
and
mov
decl
filds
mov
xchg
lahf
mov
push
sbb
inc
lret
in
pop
sub
decl
inc
mov
fstpt
fwait
rolb
cmp
add
mov
ds
incl
mov
lahf
scas
mov
sti
dec
push
lods
dec
cmp
jo
add
push
test
push
mov
add
mov
lret
mov
test
stos
cmp
mov
cli
jmp
je
out
cmp
mov
pop
and
sbb
ljmp
enter
push
sbb
out
repnz
clc
pop
mov
cltd
add
and
push
inc
test
popf
mov
and
ss
mov
movsb
xor
fists
jmp
andl
mov
fcmovnbe
jae
mov
es
xchg
sub
jno
scas
push
mov
incl
mov
cs
daa
lret
jecxz
inc
les
ds
decl
mov
in
ja
mov
sbb
xlat
mov
inc
rorl
add
adc
incl
imul
pop
mov
cmp
jo
cs
jae
sub
cs
fmull
mov
mov
adc
jo
xchg
dec
xchg
sub
ljmp
jmp
push
mov
lea
jle
push
aaa
insl
push
int3
cmpl
ja
stc
adc
jmp
mov
and
sahf
sahf
andb
adc
inc
push
stos
and
aam
inc
jle
xor
lcall
jnp
and
xchg
fisubs
out
or
xchg
sbb
mov
jmp
pop
fwait
insb
jmp
xor
in
test
in
test
stos
stos
push
ds
scas
lods
orb
inc
mov
clc
xchg
mov
and
jecxz
cmc
lods
or
mov
dec
pop
fldl
out
outsl
dec
pop
xchg
mov
push
pop
mov
mov
sub
sub
leave
pop
shrb
push
and
dec
or
add
cli
and
dec
sub
or
sbb
in
mov
popa
xorb
jmp
call
clc
pop
insl
aad
xchg
or
daa
lods
jnp
sbb
in
fisubl
test
into
ljmp
lds
jmp
push
rol
sub
add
cwtl
sbb
bound
dec
lea
jno
lret
enter
mov
decl
adc
jo
imul
mov
shrb
stos
ljmp
mov
jns
pop
movsb
ret
test
lcall
lcall
xchg
dec
cmp
jmp
iret
cmc
clc
cli
add
mov
or
mov
inc
out
jl
jl
fwait
js
dec
ja
shrb
movsb
jle
cli
cmp
pop
icebp
lcall
shll
sub
sbb
or
pop
rol
dec
outsl
shrb
jg
mov
inc
clc
mov
call
call
push
bound
mov
cmp
mov
stos
or
aam
aam
pushl
lahf
outsb
in
or
xchg
sbb
and
in
ljmp
mov
cmpb
test
orb
shl
sub
std
ljmp
ss
lahf
dec
scas
pusha
lahf
enter
in
mov
jle
mov
jmp
dec
cmp
pop
jae
loopne
into
sub
pop
mov
mov
repnz
xchg
adc
ret
pop
aam
adc
pop
shrb
xlat
testb
fst
ficompl
jle
push
shrl
push
jg
inc
decl
pop
rorl
push
movsb
repz
call
in
jbe
in
lcall
add
stos
ljmp
ret
cs
repnz
dec
lret
arpl
dec
and
sbb
pop
pushl
lret
lret
add
sbb
imul
rol
adcl
lret
rcl
jno
ljmp
sbb
jecxz
in
hlt
insb
mov
imul
in
jno
out
gs
pushl
test
ret
or
lcall
stos
ljmp
cmpsl
or
adc
push
stos
jo
imul
cmp
dec
xor
scas
sti
adc
cmpsb
test
pop
dec
rol
pushl
repnz
fisttpll
mov
sbb
testb
ret
and
add
xchg
rcl
decl
jns
rolb
sbbl
cli
mov
jnp
push
and
mov
xor
mov
adc
xor
in
add
cld
popf
in
xor
stc
dec
and
stos
test
into
sahf
xchg
xchg
fwait
or
sahf
in
jbe
push
pushf
cwtl
xchg
jnp
mov
call
sbb
jp
lret
jge
rorl
scas
mov
aam
es
lcall
std
pop
lahf
xchg
xchg
sahf
push
xor
push
cmp
pop
jecxz
cmpsb
addr16
xor
decl
jl
ljmp
xor
pop
or
stos
xchg
sahf
lea
jns
ljmp
pusha
dec
dec
in
and
insb
sub
mov
or
sub
mov
mov
add
clc
pop
ja
pop
xor
jbe
xchg
test
or
clc
inc
mov
cmp
mov
sbb
pushl
in
mov
mulb
data16
aaa
push
push
or
mov
cwtl
adc
mov
lcall
enter
in
mov
mov
sbb
aad
fld
rcl
mov
xchg
and
mov
sub
in
mov
iret
hlt
mov
outsb
bound
cwtl
pop
pushf
sbb
lahf
xchg
pushl
fucom
hlt
xor
cmp
cs
pushf
xor
insl
rclb
xchg
sub
rclb
dec
pop
out
mov
inc
fbld
jle
fsts
fs
gs
pop
hlt
es
ljmp
push
xchg
add
and
cmp
outsb
clc
arpl
cmp
cmp
and
jle
jl
lea
xor
mov
bound
and
movsl
shrl
jae
cmp
dec
cmp
sbb
js
outsl
jmp
push
jno
xchg
lahf
aaa
sahf
cmp
mov
jge
push
add
sub
and
fidivs
mov
data16
mov
mov
jg
in
push
or
ljmp
imul
lcall
jge
nop
sbb
dec
sar
fcomip
test
xor
iret
xchg
arpl
in
pop
dec
lea
ja
dec
jg
decl
lcall
ret
mov
cli
push
adc
call
scas
fcompl
jge
ja
sub
loope
sbb
xor
call
or
mov
scas
inc
mov
mov
adc
ljmp
dec
cmp
popf
repnz
xor
pop
mov
mov
in
outsb
scas
ror
test
mov
jmp
cmp
sub
xlat
lcall
push
sarl
xchg
push
negb
leave
out
sbb
mov
push
mov
je
push
sti
push
pop
adc
inc
push
fsubl
lcall
aas
orl
adc
push
ja
xlat
inc
negl
and
mov
pop
ljmp
bnd
lret
cs
nop
push
test
mov
ja
arpl
ds
cld
pusha
jae
push
xchg
mov
mov
or
or
cmp
inc
pop
jnp
xchg
jb
sub
andb
fs
pop
and
push
sbb
dec
mov
fadds
and
in
sbb
mov
lods
repz
push
int
ljmp
outsb
decl
out
cmp
adc
cmpsb
sti
jo
outsb
cmp
push
rolb
sahf
leave
decl
pusha
mov
xlat
push
sbb
outsl
xchg
dec
xor
xor
jbe
aaa
sub
inc
fucomip
cmp
bnd
call
inc
in
aad
rolb
push
mov
les
or
xchg
jns
xchg
dec
push
leave
sbb
jmp
and
dec
pop
ss
jnp
out
int
xchg
mov
jge
push
std
setle
notb
mov
fsubrs
jle
jns
sbb
rcr
pop
mov
jmp
dec
pop
test
fbld
add
mov
pop
xor
popf
jb
cmp
das
clc
ljmp
mov
or
and
inc
pop
cmp
subl
dec
push
xchg
jecxz
fdiv
add
jo
adc
and
or
fcoms
addr16
aad
ja
insl
or
pushl
push
xchg
jl
rclb
add
rcrb
and
xor
lret
call
ds
in
mov
xchg
lea
or
das
mov
data16
xor
call
push
add
out
rolb
mov
jge
ficoms
sbb
push
dec
jno
les
pushl
pop
cmc
clc
sbb
mov
sub
inc
popf
ljmp
cwtl
cs
rorl
sbb
mov
ljmp
sub
stos
inc
jmp
and
pop
sbb
lret
arpl
dec
call
and
or
in
pop
add
lea
mov
jmp
inc
mov
xchg
mov
push
in
jp
dec
dec
adc
int3
gs
push
mov
cmp
enter
push
popa
mov
jge
add
in
xor
incl
popf
cmpsb
xchg
sub
inc
inc
cmp
lret
adc
repz
inc
movsb
test
push
incl
mov
mov
push
xchg
insb
and
fcmovnu
scas
xor
jmp
pusha
mov
mov
dec
mov
jbe
adcl
cmc
dec
scas
aad
mov
ficoms
subb
jg
mov
addr16
push
cmpb
pop
cmp
das
cli
pop
sub
fistps
and
scas
inc
add
sbb
data16
pushl
and
cmpl
sbb
fucomp
out
cld
cli
addr16
sub
bound
ss
jle
adc
das
adc
adc
ret
or
lret
mov
mov
sbb
sahf
lods
call
addr16
push
mov
aad
inc
xchg
cli
stos
gs
inc
dec
push
inc
test
test
dec
jecxz
xorl
adc
push
nop
pop
jb
lcall
scas
lcall
decl
movsb
movsl
movsb
lock
adc
dec
pop
subb
adc
outsb
jge
aaa
ret
pushl
cld
je
jmp
ds
sub
stos
fucomp
lret
or
xchg
dec
repnz
ljmp
out
mov
mov
adc
in
xor
fsubs
add
adc
jmp
arpl
cmp
and
mov
jmp
xor
mov
jns
lahf
ja
call
lahf
roll
push
mov
loope
mov
cmp
pushl
into
enter
cmp
shrb
pop
js
sahf
addl
mov
mov
cmc
shlb
mov
gs
jno
aad
mov
call
cld
sahf
pop
rolb
shll
test
imul
jmp
mov
dec
fisubrl
inc
cmp
sbb
mov
nop
shll
mov
test
int3
pusha
xchg
xchg
mov
sbb
sbb
mov
and
adc
ficomps
fdivr
decl
mov
mov
pop
mov
mov
pop
jae
push
dec
sahf
addr16
and
xchg
dec
out
shl
into
mov
pop
xor
mov
jle
mov
out
gs
movsl
dec
mov
mov
pushl
stos
add
leave
outsb
jnp
and
rcrl
jmp
test
lcall
push
push
aas
jg
mov
mov
ja
insl
aaa
jge
lea
div
cmc
mov
rcr
mov
lahf
filds
cmpsb
rorl
call
fistpll
sbb
jmp
push
or
mov
dec
mov
lahf
sub
mov
clc
negl
push
mov
sub
outsl
std
cmp
addr16
dec
out
adc
pop
mov
and
je
mov
into
arpl
cmp
decl
sub
jge
mov
and
push
cltd
adc
andb
jb
jmp
in
jmp
frstor
loop
mov
adc
in
mov
out
cmp
sub
mov
cmpsb
sbb
mov
mov
xor
outsl
xor
cltd
xchg
insb
call
clc
call
icebp
sub
xorb
add
add
pop
addr16
fldl
mov
in
stc
ljmp
das
push
dec
test
dec
in
xchg
popa
call
or
fdivs
pop
cmc
call
adc
xchg
jp
cmc
lret
inc
imul
cld
ret
and
scas
cwtl
cld
pushl
insb
popf
sub
inc
inc
test
or
lcall
pushl
addl
es
sbb
fincstp
das
clc
insb
jns
cltd
mov
scas
or
es
dec
popa
stos
pop
xor
test
xor
repnz
xchg
stc
movsl
sub
ficompl
mov
out
add
pop
jg
rcrl
ret
nop
ljmp
add
daa
sub
push
lock
icebp
ljmp
cli
dec
sbb
or
loopne
test
sbbb
mov
jne
loopne
lret
pushl
push
push
jno
jl
aaa
mov
jmp
adc
sar
out
cli
lods
pop
and
ret
in
stos
push
fisttpll
sub
das
js
pop
and
mov
push
add
sbbl
inc
loop
add
add
lret
ja
dec
or
imul
push
and
negl
or
push
or
add
push
xor
jbe
sbb
lret
addb
inc
xlat
out
sbb
jae
bound
insl
jmp
je
aaa
and
jne
jnp
filds
jo
imul
or
scas
ds
add
orb
push
inc
das
sbbb
roll
cs
xchg
cmpl
push
insb
push
add
xchg
or
add
cmovl
mov
mov
daa
and
sub
pop
push
push
inc
fldt
ds
sbb
divl
gs
mov
jg
gs
outsl
outsl
insb
push
outsb
popa
add
clc
jo
push
test
testb
sbb
push
or
dec
or
mov
dec
jne
js
or
pushf
dec
scas
ret
xchg
sub
push
popa
adc
adc
scas
adc
inc
jns
push
incb
popa
jb
sbb
jecxz
mov
add
push
es
ljmp
dec
add
outsl
insl
insl
bound
into
inc
xchg
cmpsl
and
dec
xchg
jo
mov
pushf
push
or
add
lds
enter
and
dec
outsb
imul
insb
stos
ds
aaa
inc
movsb
sub
sub
out
adc
ja
mov
flds
sub
inc
sub
jae
cli
arpl
pop
sub
mov
inc
sub
sbb
cmp
xchg
add
mov
adc
lds
inc
insb
jne
flds
jne
xchg
dec
push
xor
outsl
inc
sbb
push
inc
divb
xorb
push
fildl
fs
inc
adc
insb
push
pop
push
mov
sarl
or
jne
subl
fiaddl
into
pusha
clc
movsl
subl
jns
mov
pop
add
faddl
xchg
adc
jbe
js
xchg
push
push
push
hlt
fs
mov
jecxz
std
mov
notl
dec
cmp
sbb
or
sbb
insb
shll
fldcw
mov
push
inc
or
dec
jle
dec
push
pop
pop
adc
sub
mov
or
push
sbb
xchg
test
cs
adc
shlb
adcb
jo
mov
stos
lock
sub
insl
and
fldl
push
sub
mov
adc
popa
inc
adc
mov
sub
adc
pop
or
outsl
data16
test
shlb
lret
mov
mov
popa
and
out
and
fwait
das
ljmp
jno
pushf
inc
or
pop
dec
inc
dec
repz
sbb
adc
or
pop
out
add
mov
dec
sbb
mov
jb
lahf
mov
repz
xchg
scas
dec
mov
lods
xor
js
sbb
mov
ret
stos
pop
push
adcb
and
rcrl
cmp
and
inc
popa
xchg
pushf
jnp
jo
jp
popa
insb
test
push
push
jg
and
mov
sbb
add
xorl
cmp
aam
pop
xchg
or
pop
test
or
dec
push
add
add
gs
and
jmp
insl
aaa
and
stos
mov
outsl
jns
inc
je
fisubs
adc
push
inc
inc
out
mov
and
sti
xlat
push
and
inc
mov
sbb
adc
or
rcr
xchg
jno
insl
cmp
cmp
sub
push
es
mov
add
xor
or
outsl
icebp
iret
loopne
xchg
stos
loope
xor
enter
cmp
or
push
xchg
or
inc
or
pop
add
test
pop
aaa
cmp
aam
adcb
inc
dec
xchg
add
and
pushf
pop
xchg
js
jne
inc
fmuls
addl
inc
cmc
push
fbld
jecxz
scas
insb
rolb
iret
dec
or
mov
add
sub
insb
test
mov
xor
outsl
sbb
xchg
inc
jg
mov
mov
sub
inc
adc
imul
scas
pop
sbb
pop
outsb
push
outsl
add
add
adc
sub
xchg
adc
sub
ss
rcl
or
gs
jne
xor
mov
stos
xchg
mov
outsb
or
inc
arpl
sti
mov
xchg
loop
js
cmp
dec
or
and
ret
arpl
jb
out
mov
aaa
push
pop
cmp
cwtl
add
pop
addl
loopne
add
push
divb
dec
shr
insl
sbb
cmp
pop
or
dec
push
fimuls
lret
add
xlat
sbb
sahf
and
push
outsl
xor
jb
test
test
fstpt
jmp
lods
jo
inc
inc
int
push
arpl
rorl
inc
imul
jge
sbb
mov
mov
mov
inc
insb
notl
out
outsb
inc
insb
jle
cmovnp
xchg
cmpsl
inc
mov
stos
fs
jmp
movsb
jae
xor
or
adc
nop
iret
mov
scas
jns
push
lds
pop
rol
inc
sahf
push
and
xor
sbb
cmp
jns
or
sbb
shll
mov
push
pop
xor
dec
adc
shlb
mov
jnp
imulb
push
push
adc
and
dec
in
lods
sbb
cmp
xor
scas
jnp
or
dec
outsb
dec
adc
jnp
ss
jg
jl
sar
pop
add
add
mov
cmpsb
imul
movsb
dec
xor
shll
movhps
push
xchg
mov
xor
addb
pop
adc
in
add
add
inc
rcrl
inc
jb
and
and
sub
or
push
push
cwtl
jge
dec
movsb
bound
or
dec
xor
out
inc
jb
push
push
std
push
jb
inc
jae
inc
leave
adc
daa
ss
jo
imul
jo
pop
insb
push
lcall
orl
rclb
cmc
add
les
xor
mov
or
adc
mov
lods
inc
or
sbb
and
sbb
in
sahf
lret
mov
xchg
jns
push
aad
daa
jb
fstpl
or
xor
push
xchg
dec
adc
loope
fbld
pop
fxch
int3
xor
mov
and
and
sbb
sbb
sbb
pop
sub
jl
xor
ja
adc
xor
push
pop
inc
movsl
addb
mov
xlat
shl
lods
push
mov
pop
xchg
int3
mov
or
int3
and
or
adc
mov
fs
dec
sub
xchg
jo
cwtl
dec
push
adc
sbb
or
mov
outsb
push
push
fdivl
pusha
or
lret
add
xor
mov
ja
popw
in
mov
inc
or
sub
xchg
lods
pop
and
dec
insl
jecxz
test
or
jnp
mov
and
or
sbb
inc
lds
adc
xchg
inc
and
push
jb
inc
and
sub
inc
rcl
fildl
scas
jp
enter
test
loop
xchg
ss
shrl
mov
test
loop
push
pusha
jno
stos
js
jecxz
add
das
sbb
add
sbb
cmp
test
and
int
cmp
pop
aad
xor
jns
scas
sub
push
push
cltd
nop
inc
push
fs
mov
fs
cmp
xor
push
dec
sbb
sub
pop
aad
ds
lahf
pusha
aam
out
cmpsl
aam
xchg
cmp
loopne
add
cmovno
repnz
fimuls
aam
popa
or
push
push
inc
out
push
mov
lock
add
sub
xchg
roll
ja
dec
xor
push
imul
mov
pop
loope
push
int3
add
dec
xchg
push
pop
mov
fstpl
add
jmp
jg
das
int
imul
sbb
adc
jp
push
int3
add
mov
add
ja
outsl
mov
loopne
mov
and
or
or
add
push
ficompl
mov
dec
add
adc
imul
add
push
cmp
or
mov
jnp
push
adcb
or
xchg
out
jae
loope
pusha
pop
inc
xor
add
lods
pop
dec
pop
add
cld
sahf
cs
sbb
add
xlat
add
ljmp
jb
popa
adc
sbb
negl
push
rclb
inc
int3
and
adc
sub
outsb
inc
fucomi
add
jb
push
fldcw
not
pusha
dec
jo
push
lahf
push
and
js
es
out
rcl
add
push
dec
xchg
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
add
add
add
push
add
add
subb
add
nop
add
addb
add
mov
add
add
add
adcb
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
add
add
add
or
add
arpl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
imul
add
add
add
add
add
add
or
add
add
add
jnp
add
add
add
add
add
add
or
add
add
int3
jge
add
add
add
add
add
add
movb
add
add
add
add
add
add
add
add
add
add
addb
add
add
aaa
add
in
add
add
add
add
add
add
add
rolb
addb
add
call
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
or
add
add
cmp
pop
add
add
add
add
add
add
jmp
add
js
add
add
add
add
add
add
add
or
add
lret
lods
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
adc
add
in
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
sub
pop
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
pop
pop
add
add
add
add
add
dec
add
inc
add
add
dec
add
add
pop
mov
add
adc
add
and
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
and
add
inc
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
rol
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
or
or
or
or
or
or
or
or
ljmp
or
or
or
or
or
or
or
or
or
or
or
ljmp
xor
or
or
or
or
or
or
mov
or
or
ljmp
pop
xor
lahf
inc
or
or
or
or
or
in
mov
or
ljmp
pop
xor
lahf
lahf
lahf
inc
or
or
or
or
or
mov
imul
or
out
out
pop
pop
mov
lahf
repnz
or
or
or
or
or
mov
imul
out
out
out
out
pop
mov
repnz
or
or
or
or
in
mov
imul
ljmp
or
repnz
out
out
inc
or
or
or
or
in
mov
imul
mov
or
or
in
in
in
out
out
inc
or
or
or
or
in
mov
imul
ljmp
or
or
lock
in
in
inc
or
or
or
or
in
mov
imul
repnz
lahf
pop
pop
or
out
idiv
lock
out
inc
or
or
or
or
in
decl
imul
ljmp
jae
out
testl
or
or
or
or
in
decl
in
imul
ljmp
mov
incl
or
or
or
or
in
decl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
or
or
in
decl
div
div
ljmp
mov
or
or
pop
out
in
or
or
decl
div
div
or
jmp
loope
mov
in
in
in
in
in
pop
pop
in
or
or
decl
div
div
or
in
in
in
in
jmp
in
or
or
in
in
in
in
or
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
or
or
ljmp
div
or
or
or
or
or
or
or
or
or
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
in
in
in
in
in
in
in
ljmp
incl
in
or
or
or
or
ljmp
in
incl
add
add
add
add
add
add
pop
in
or
or
or
or
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
or
or
or
or
or
decl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
or
or
or
or
or
in
in
in
in
in
or
add
pop
jp
xor
xor
dec
add
pop
in
or
or
or
or
or
or
or
or
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
or
or
or
or
or
or
or
or
incl
add
add
add
add
add
add
pop
in
or
or
or
or
or
or
or
or
incl
in
or
or
or
or
or
or
or
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
push
lret
push
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
nop
lret
push
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
rolb
add
add
add
xor
cmp
xor
xor
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jae
je
popa
add
add
jb
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
push
inc
inc
and
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
add
pop
add
pop
add
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
add
addb
add
sub
add
add
add
pop
add
add
add
pop
add
add
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
xor
cs
insb
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
push
inc
push
dec
cs
insb
add
inc
push
xor
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
xor
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
popa
je
insb
je
add
je
fs
jo
gs
dec
outsb
outsw
add
add
inc
jb
popa
je
inc
jne
add
push
jb
inc
jae
popa
jo
inc
add
inc
gs
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
test
add
add
add
xor
sub
add
add
orb
add
xor
xor
push
add
sbb
or
push
add
xorb
add
pop
xor
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
push
add
sbb
lock
or
scas
test
pop
repz
orb
xor
add
mov
add
gs
es
cs
pop
movaps
xor
dec
xchg
or
add
pop
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
cs
insb
popa
jae
and
and
bound
and
imul
gs
imul
outsl
outsb
and
je
outsl
jb
je
xor
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
push
push
gs
push
imul
jae
and
je
outsl
jb
xor
xor
push
add
or
xor
insl
jae
outsl
data16
and
and
je
jae
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
and
arpl
xor
xor
xor
push
add
add
daa
push
gs
push
imul
jae
and
and
fs
outsb
imul
.byte
