divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xorb
rcrb
dec
aaa
add
popa
xorb
push
add
nop
pop
inc
mov
mov
std
clc
or
pop
mov
int
mov
addb
add
add
cwtl
outsb
outsl
je
loopne
add
scas
cld
and
and
cs
sbb
mov
lods
loop
popa
incl
lea
in
lahf
jg
cld
bswap
mov
out
ud0
jmp
in
out
out
repnz
in
push
pusha
ljmp
lret
cli
add
mov
cld
push
imul
andb
dec
jg
or
rcl
mov
daa
loopne
add
or
xchg
ja
mov
sbb
insb
daa
aam
cmp
mov
adc
add
verr
add
sbb
mov
prefetch
pop
xor
push
test
xchg
add
mov
mov
jbe
adc
sub
push
mov
sbb
pusha
push
add
pop
add
cs
cld
cltd
add
and
and
add
and
jb
mov
sub
fidivs
nop
inc
fs
cs
mov
sub
mov
or
loopne
outsb
inc
rcrb
loope
jl
out
add
jb
out
iret
add
xor
dec
sbbb
or
xchg
push
inc
xlat
bswap
clc
add
aam
sbb
mov
inc
jmp
xor
inc
jg
ds
lea
add
mov
jecxz
adc
dec
jne
sahf
xchg
jno
popa
add
pop
inc
daa
sub
xchg
pop
movsb
imul
push
xchg
in
push
push
ds
push
push
xchg
enter
andb
fucomi
gs
push
call
xor
ja
jne
jmp
mov
xchg
sahf
ja
xchg
mov
pushf
stc
call
in
cmp
inc
into
int3
loope
addl
fbld
hlt
jmp
add
lds
in
mov
jl
les
or
icebp
xor
enter
push
in
or
clc
add
mov
add
daa
fdivrs
stos
fnstsw
mov
sbb
ret
lahf
imul
push
movzbl
or
rcll
test
sbb
call
sub
and
sub
mov
cmp
jbe
mov
repz
pop
dec
mov
push
sub
pop
mov
cmp
shlb
aad
sbb
sub
clc
test
inc
adcb
loopne
stc
cmc
ss
xor
cmpsl
and
call
mov
mov
and
sbbb
push
add
and
and
insb
jmp
clc
popf
rcrb
aam
divl
xor
push
inc
imul
add
adc
mov
popf
fimull
subl
push
addl
xor
inc
dec
and
jo
xchg
testb
push
inc
adc
or
lcall
test
mov
movsl
icebp
ret
mov
hlt
cld
add
and
lds
les
or
fs
push
xchg
in
pop
enter
push
ja
sub
fldt
or
mov
leave
rcr
and
push
jg
je
out
enter
pop
pop
add
out
or
pop
pop
cmpsb
hlt
push
outsl
xchg
sub
sub
jl
sahf
mov
test
je
cmp
push
xor
push
mov
pop
jo
scas
shrb
nop
sbb
cs
pop
cltd
test
loop
sahf
lea
mov
mov
push
nop
push
xchg
push
dec
or
pop
mov
popl
call
mov
mov
push
aam
je
inc
test
cld
sbb
movb
dec
adc
add
push
mov
adc
aam
lea
dec
out
or
lds
xchg
mov
clc
sub
lea
push
cmpsl
cmp
add
in
gs
je
shll
in
add
setb
and
or
sbb
movb
repnz
rcll
mov
aam
hlt
or
shrd
lock
movsl
mulb
inc
sbb
lcall
jp
shr
and
dec
jge
in
push
ss
dec
adc
xor
popf
mov
fcoml
and
adc
mov
add
xor
imul
pop
je
call
push
push
adcb
sub
push
mov
lahf
sub
adc
xor
cmpl
hlt
add
fcmovbe
inc
sub
sarl
add
jl
jno
adcb
ret
fisubs
stc
mov
mov
push
push
pushf
or
lds
scas
xchg
mov
pop
mov
push
or
inc
or
rclb
in
mov
xchg
sbb
test
adcl
rorb
call
roll
push
jnp
int
sbbb
jb
ret
ret
jl
subl
sub
loopne
call
add
cmc
mov
dec
shlb
mov
call
add
inc
enter
ljmp
and
fiadds
sti
scas
add
add
fbld
scas
push
adc
int3
lcall
jno
or
dec
xchg
xchg
push
sbb
jmp
jo
mov
xchg
sahf
or
xchg
dec
aad
push
call
call
in
push
jne
xchg
fs
lret
lea
movsl
dec
sub
xor
pop
mov
scas
in
je
or
je
sbb
hlt
jmp
cmp
int
add
push
dec
inc
nop
into
lock
pop
lods
mov
add
push
mov
call
hlt
lods
mov
sbb
lods
or
ja
pop
dec
adc
lahf
mov
xchg
xchg
clc
fdiv
xchg
xchg
sbb
dec
jb
out
loop
push
inc
into
pop
in
dec
push
inc
push
je
test
loopne
add
add
sbb
shll
sbb
sbb
mov
and
mov
push
or
in
shl
or
xchg
and
jmp
imul
jbe
push
inc
push
icebp
inc
psrlq
adc
clc
sbb
xchg
ret
repnz
sbb
add
ret
sub
arpl
mov
mul
fiaddl
push
jecxz
inc
movzbl
jecxz
sub
add
notl
test
bound
pop
je
add
fstps
aas
inc
pminub
rorb
mov
cmp
lds
and
push
rclb
pop
lahf
mov
movsl
test
popa
jecxz
mov
cs
ljmp
xchg
or
push
dec
inc
ret
push
mov
sub
das
cltd
and
loop
sbbb
adcl
pop
ss
lret
ret
or
push
push
mov
push
pop
lcall
roll
xor
ds
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
pop
push
shlb
pushf
test
cltd
stos
mov
xchg
mov
push
push
dec
fdiv
les
inc
pushf
sbb
push
out
xor
roll
pop
pusha
push
adcl
call
enter
sbb
or
cmp
sub
mov
andb
push
addl
adcl
push
and
sti
dec
add
dec
fcompl
jb
call
test
xchg
xor
test
idiv
mov
cmp
cmp
xchg
test
cmp
in
push
lea
mov
movsl
inc
jbe
adc
pop
cmp
push
push
rcl
and
dec
ret
xor
adc
mov
lea
sub
daa
rclb
add
xor
imul
push
faddl
ljmp
mulb
mov
xchg
fwait
hlt
fdivrp
xor
fdivr
mov
mov
mov
add
sbb
xor
cmpsb
lea
adc
cli
and
add
push
and
ds
sub
aas
xor
push
jge
cmp
or
mov
push
call
mov
mov
mov
add
mov
rorl
rol
push
adc
pop
mov
pop
out
push
rol
pop
lea
dec
repnz
enter
mov
dec
sub
mov
rep
rolb
add
push
inc
dec
pop
mov
mov
mov
ss
rcll
out
mov
and
adc
call
adc
add
dec
cli
mov
fisubrs
mov
pop
in
push
int3
mov
addl
aad
pop
into
enter
mov
imull
rolb
ret
xchg
pusha
inc
mov
lods
ljmp
outsl
push
jb
je
mov
cli
and
ljmp
pop
pop
stos
je
and
sbb
popa
pop
xor
nop
or
cmpl
push
fistl
sbb
rolb
popa
je
mov
add
mov
or
stos
add
or
or
leave
aam
ljmp
xchg
add
sub
mov
pushf
data16
fistpl
aad
imul
jnp
shll
rcl
fiaddl
mov
dec
mov
mov
jecxz
mov
adc
pop
cmpsb
movsl
addr16
xchg
jmp
sbb
in
popa
mov
repz
mov
jmp
sub
adc
insb
scas
enter
push
adc
push
push
or
insb
or
and
scas
dec
jno
add
adc
scas
xchg
sbb
cmp
shrl
push
jae
and
outsl
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
lcall
and
add
lret
pop
or
jmp
sbb
inc
inc
ficomps
imul
or
stc
divl
mov
loope
and
nop
incb
inc
leave
leave
int3
in
mov
in
in
enter
or
pop
jno
push
sub
imul
cmp
cmp
adc
mov
sbb
leave
sub
mov
adc
adc
lods
cmc
sbb
inc
rcr
in
mov
or
pop
mov
js
and
sub
stos
repnz
xchg
scas
cltd
je
mov
mov
mov
mov
cmp
mov
inc
xor
shl
aam
inc
xchg
repnz
push
mov
adc
mov
jge
fcomps
add
add
cmp
imul
xchg
adc
sub
cmpsl
adc
dec
data16
aas
push
fists
dec
mov
sbb
dec
xchg
hlt
adc
mov
jne
aaa
stos
add
lods
push
cmp
xor
jb
fidivrs
jae
inc
xor
nop
ds
mov
cmp
rolb
scas
call
xor
xor
shl
call
xor
fcomp
inc
test
inc
enter
ljmp
mov
or
les
mov
test
aad
enter
mov
push
mov
mov
loop
lea
ret
sbb
adc
jg
lea
jb
mov
pop
add
cwtl
add
mov
dec
adc
or
pushf
jbe
in
rorb
int3
sub
popa
add
cmp
cmp
in
add
jne
jl
icebp
andl
push
sbb
adc
movl
sub
add
mov
in
jne
inc
add
adc
pop
sbb
scas
jns
nop
mov
sbb
inc
lods
inc
pop
icebp
or
gs
mov
test
loop
jbe
push
add
add
out
enter
sbb
loop
adc
cld
mov
pop
dec
xchg
xorl
cmp
or
mov
lods
outsl
fsts
ja
mov
inc
xchg
or
push
popa
inc
dec
pop
and
incb
add
add
or
je
mov
push
test
jmp
add
call
adc
loop
cld
inc
pop
dec
test
fcoml
jmp
push
push
test
or
mov
fs
lods
pop
push
loopne
mov
adc
ljmp
sbb
scas
aad
add
push
cld
lcall
repz
mov
rorl
sbb
int
nop
add
lods
mov
or
mov
lret
and
add
mov
mov
jns
lods
mov
test
jbe
inc
jne
push
inc
sbb
nop
push
add
repz
sub
adc
mov
insl
add
push
call
cmp
push
loopne
xor
lea
and
pop
push
xchg
push
inc
add
adc
daa
or
hlt
repnz
xchg
cltd
push
pop
dec
inc
inc
xor
pop
fiaddl
rorb
or
roll
mov
pushw
or
jnp
ja
cs
ss
stos
std
std
stc
jp
xchg
push
xor
push
nop
cld
cmp
pop
pop
pushf
cli
outsb
ret
xor
adc
inc
rorl
cmp
call
sub
push
inc
inc
enter
mov
cmp
and
add
inc
movsb
xor
adc
lods
cmp
nop
dec
mov
jo
cld
inc
push
cs
faddl
xchg
pop
ja
pop
dec
adc
std
adc
int3
cmpsl
aas
nop
push
mov
and
mov
mov
stos
sbb
jbe
test
inc
mov
mov
js
add
mov
sub
fldenv
rorl
jecxz
dec
jo
push
mov
and
adc
sarb
mov
test
test
sub
lods
arpl
lock
pop
add
and
testl
add
dec
or
out
jnp
jmp
les
jl
ljmp
mov
sbb
add
add
int3
lods
or
sbb
outsb
je
stos
inc
push
push
add
pop
and
mov
pop
xchg
adc
cmp
call
out
push
ret
pusha
bound
cld
popf
mov
and
mov
xor
cwtl
inc
mulb
jecxz
push
mov
push
call
out
pop
ds
dec
mov
in
jbe
push
adc
rol
jmp
sbb
js
les
push
movsb
clc
push
or
enter
fsts
jbe
outsl
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
jnp
mov
or
movsb
imull
xchg
sbbl
sarb
rorl
mov
dec
enter
inc
or
ret
movb
add
icebp
cmp
filds
mov
push
outsb
insb
dec
inc
mov
test
sub
lods
orl
test
pushw
push
add
mov
cmp
xchg
mov
stos
mov
jl
or
jne
mov
jmp
or
shlw
xor
or
or
or
popf
cmc
adc
lahf
dec
xor
lods
dec
xchg
xor
popf
lock
xor
sub
inc
push
cmp
and
adcl
add
dec
jecxz
fiaddl
mov
add
call
push
mov
dec
xchg
or
call
shrb
dec
test
shll
cmpsl
imul
sbb
nop
add
call
enter
nop
popl
rorl
mov
out
aam
inc
mov
adc
push
mov
lea
mov
mov
stos
fldt
push
fucomip
cmp
je
cmp
jbe
rsm
sub
jne
mov
pusha
mov
add
nop
clc
push
and
std
cmp
test
test
or
sbb
pushf
cmpb
in
xchg
movsl
shrl
daa
xor
pushf
cli
adc
bound
shlb
jae
or
loop
lock
test
inc
jmp
addb
inc
cmp
loopne
stos
fwait
add
push
test
lock
jb
clc
mov
sbbb
adc
mov
adc
mov
sbb
jbe
ds
fidivrl
aaa
push
mov
hlt
adc
fsubr
jo
push
sbb
cmpb
cmp
in
mov
into
lea
lds
lods
sbb
scas
ss
inc
adc
dec
je
xchg
pop
add
and
cmp
push
cltd
je
mov
xchg
lcall
cs
pop
out
in
push
sub
xchg
loop
jg
popf
push
add
push
push
mov
push
lea
mov
outsb
test
xchg
mov
push
push
sbb
jne
data16
push
and
cmpsb
aam
in
pop
fdivl
inc
cmp
cwtl
popa
fsubrl
jecxz
pop
cli
call
fwait
mov
scas
loope
fcoms
mov
stc
and
adc
shll
loopne
pop
scas
dec
je
lcall
dec
push
push
push
sub
shll
add
or
mov
xor
push
mov
add
sete
pop
sbb
push
dec
inc
sahf
inc
or
fstps
imul
mulb
aaa
in
ret
mov
jmp
andl
sbb
xchg
adc
sbb
mov
lcall
jnp
add
mov
adc
mov
ss
popf
add
repz
and
cmp
push
or
ljmp
inc
inc
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
ss
rorb
push
dec
xor
loop
inc
adc
out
call
push
pop
mov
sbb
movsb
call
mov
jmp
push
imul
pop
addr16
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shll
pop
and
or
je
int3
jecxz
enter
decb
loop
aaa
mov
jmp
enter
nop
xor
add
cmc
sbb
jns
icebp
call
sbbl
sarb
inc
call
cld
test
fldenv
push
or
cmp
cmp
pop
xchg
out
xchg
add
sbb
movsb
sbb
cmc
movb
pop
jb
xchg
push
push
loope
js
negb
jge
daa
sub
or
fisttps
fxtract
jmp
jne
lahf
pop
xorb
movsb
inc
or
leave
sbb
outsb
mov
mov
or
push
xchg
add
pop
push
adc
add
ret
fdivrl
cmc
pop
mov
sbb
push
call
mov
and
in
movsb
jmp
js
repnz
cmp
in
mov
mov
dec
push
call
jmp
cmp
cld
sbb
sbb
icebp
mov
xchg
sub
rorb
ret
or
mov
push
stc
sub
fcompl
or
jne
out
push
mov
add
sbb
jo
or
cmp
pop
cwtl
or
mov
mov
pushf
or
cmp
test
ret
addr16
stos
push
cmp
je
inc
loopne
fs
jg
mov
inc
mov
mov
inc
mov
pop
in
pusha
ja
push
push
jg
push
dec
lea
pop
call
call
gs
jbe
test
aas
mov
inc
sbb
shll
and
and
nop
push
decl
or
push
jl
mov
cmp
fadds
dec
jne
movzbl
add
push
add
add
xor
movsb
nop
aaa
gs
mov
and
add
test
push
sbb
add
push
sbb
mov
movsl
sub
add
pop
xor
lods
and
adc
cli
sub
sbb
and
ja
fcmovu
pushl
xorb
inc
xor
inc
pop
sub
sbb
dec
jecxz
and
or
rorb
out
add
imul
push
imul
add
sti
loopne
dec
test
adc
or
call
push
mov
cwtl
push
dec
clc
xchg
fstl
call
inc
rolb
das
dec
push
push
sub
dec
aaa
movb
andb
xchg
je
clc
cmp
adc
inc
lds
dec
adc
cmp
inc
xchg
jge
aas
enter
add
shr
adc
mov
arpl
shl
xor
xchg
adc
pop
subl
call
sbb
inc
rcrl
rolb
shrl
add
push
add
add
push
xor
add
andl
nop
shll
pop
add
out
xor
sbb
adc
pushf
mov
imul
add
rol
stos
add
add
pop
adc
push
add
sbb
inc
add
xor
dec
push
sbb
daa
and
shr
push
sbb
and
adc
rorb
popf
jp
push
mov
adc
inc
shl
or
dec
add
iret
push
or
or
push
cli
mov
jp
jle
mov
divl
mov
pop
call
call
aas
sbb
popa
js
dec
aam
fnstenv
inc
adc
cmp
call
rcrl
js
dec
adc
inc
or
push
int3
pop
fs
hlt
insl
xchg
mov
out
fstpl
cmp
or
adc
add
sti
mov
je
call
clc
jb
ficompl
jmp
scas
inc
dec
mov
jb
cmp
and
push
pop
mov
sbb
xchg
rcrb
jno
rolb
addr16
loopne
lcall
into
cmp
xor
insb
fwait
mov
dec
dec
jmp
sub
inc
jmp
cwtl
xchg
dec
or
jge
sbb
inc
add
add
xchg
dec
or
cmp
mov
cmp
adc
cmp
lock
dec
test
dec
mov
push
mov
pop
arpl
fists
and
inc
fiadds
shrl
incb
pop
cmp
es
cmpsb
add
out
xchg
movsl
push
and
jne
fs
into
push
je
call
rclb
sbb
jae
push
es
inc
inc
lods
add
outsl
push
mov
insl
loop
pop
outsb
iret
dec
push
push
mov
call
mov
cmp
adc
fwait
xchg
int3
aam
and
das
js
sub
pusha
int3
xor
xchg
xchg
mov
jbe
push
imull
lcall
dec
mov
imul
fs
pop
ss
add
sub
mov
push
outsl
pop
movsb
xor
aaa
movl
arpl
movsl
adc
adc
es
inc
mov
inc
adc
add
mov
push
es
inc
xchg
pop
shlb
adc
loope
inc
aaa
add
sbb
pop
aaa
and
mov
pop
xor
xchg
or
pusha
inc
andl
xor
pusha
inc
sbb
sub
ja
ss
inc
lret
inc
xor
cmp
pusha
inc
lret
out
xchg
or
lret
call
dec
shrl
fsts
insb
dec
orl
out
xor
jp
inc
dec
out
sahf
int
fs
cs
pusha
nop
push
in
movsb
repz
les
mov
out
fidivrs
inc
or
push
sub
sahf
out
and
adc
add
xor
shl
cmp
roll
je
test
or
rcl
mov
out
adc
xor
adc
lock
jnp
mov
pop
nop
add
and
dec
pop
mov
aaa
sbb
out
or
out
fidivrs
push
mov
rcl
jns
enter
xchg
adc
inc
cld
or
movsb
repz
push
adc
push
or
pusha
out
mov
cmpsl
or
jmp
and
and
or
js
adc
mov
insb
sbb
mov
add
push
pop
jmp
cmp
je
mov
mov
sbb
repz
lahf
ret
fstpt
rcr
test
inc
xor
sahf
xchg
stos
insl
push
pop
add
out
dec
in
add
add
jbe
dec
dec
sbb
test
jo,pt
cmp
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttpll
in
mov
or
mov
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
notb
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
mov
sti
mov
xchg
addr16
sbb
mov
sbb
sbb
cmpsb
sbb
je
push
sbb
dec
sahf
push
mov
xor
sbb
pop
push
push
inc
negb
clc
jg
cmp
jne
add
add
sub
cmp
insl
pop
and
mov
xchg
push
iret
cmp
xchg
and
jg
pop
shrb
push
in
push
in
imul
adc
repnz
ret
sahf
dec
adc
in
in
cmp
repnz
out
out
or
repnz
sub
push
in
fsubr
je
call
iret
sbb
xchg
mov
cmp
dec
sahf
xchg
sub
pusha
in
jmp
jmp
add
or
in
out
repnz
in
xchg
aad
in
cmp
leave
xor
mov
out
sbbl
out
insl
nop
out
je
lock
scas
in
pop
dec
icebp
cmp
das
enter
jnp
or
iret
repz
std
hlt
push
jnp
aam
imul
xchg
stos
cmp
cmp
sahf
div
mov
lcall
std
clc
clc
inc
scas
addb
aas
stc
sahf
xchg
sub
and
cli
nop
addr16
add
sti
inc
outsb
sub
fdivrp
cld
cld
je
cld
in
ffreep
push
push
nop
shlb
mov
xor
insb
leave
repz
sbb
xor
inc
ret
lret
rcrl
sub
jb
cltd
xchg
push
or
xchg
or
fwait
or
sub
movsb
mov
xchg
jb
out
repnz
push
jp
in
sub
ret
mov
mov
aam
scas
ss
push
or
out
xchg
scas
and
test
call
push
movsl
sbb
or
dec
jmp
jmp
stos
xchg
stos
xchg
daa
in
cltd
rcll
cli
or
cli
out
out
mov
xchg
mov
nop
mov
movsb
mov
repz
and
repz
sbb
inc
cli
stc
push
dec
jo
imul
mov
xchg
dec
pop
push
clc
cltd
jb
daa
sbb
xor
aad
imul
repnz
fmulp
or
cmp
jmp
adc
cmp
jo
or
ljmp
and
scas
mov
loop
mov
shll
loope
jns
mov
xor
dec
adc
clc
or
push
out
fdiv
out
inc
repnz
negl
mov
jnp
ljmp
xchg
push
jmp
and
test
notl
notl
hlt
imul
daa
test
xor
xchg
into
testb
sub
or
insl
stos
or
repnz
leave
or
sub
add
xchg
pop
or
mov
out
div
testb
push
fst
xchg
mov
scas
in
cmp
sub
sbb
dec
push
popa
imul
mov
cmc
dec
adc
cli
hlt
or
rolb
lock
aad
jle
push
jo
adc
lods
or
insb
clc
sti
mov
loope
jb
out
loope
jp
repnz
cvtdq2ps
cmp
test
sbb
in
roll
inc
repnz
repz
in
repz
dec
push
jmp
inc
jb
repz
repz
pop
repnz
jae
in
mov
in
repnz
pop
repnz
repnz
imul
xchg
push
jno
scas
pop
adc
repnz
sbb
cld
icebp
cmc
cmc
sbb
push
mov
in
push
and
push
cwtl
icebp
out
inc
mov
jne
in
xor
icebp
in
xlat
xorl
jmp
inc
mov
out
lock
push
js
push
mov
test
jp
imul
fnsave
in
mov
push
sub
ffreep
push
inc
jp
dec
cmp
inc
cmp
push
sti
cmp
cmp
lods
enter
dec
add
mov
push
mov
mov
mov
stc
xor
jmp
inc
cmp
dec
add
xchg
mov
xor
sti
inc
cmc
jmp
adc
jg
dec
int3
dec
push
nop
push
repz
popa
jns
adc
aaa
or
lahf
out
push
add
ss
dec
repz
sub
push
jecxz
repz
cmp
shrl
jae
insb
sbb
data16
in
push
push
aad
in
xchg
gs
popf
idivl
dec
outsb
or
mov
sub
and
cli
dec
xor
addr16
sbb
inc
mov
sbb
lea
inc
cmp
and
lret
test
insb
cmp
fstpl
xchg
pop
les
xchg
lods
jle
mov
jg
in
push
dec
repz
push
xor
movsb
movsb
inc
jmp
or
or
sbb
movsb
loope
inc
jecxz
ficoms
cmp
sbb
aaa
sub
mov
out
cltd
dec
sub
lea
mov
mov
daa
ret
lahf
mov
hlt
test
roll
inc
jmp
pop
jmp
xchg
xchg
pop
add
mov
and
pop
cmp
es
and
mov
cmpsl
or
sub
dec
dec
pop
sbb
xchg
je
or
insb
leave
gs
xchg
jno
mov
stos
sub
jno
sbb
dec
dec
jo
adc
popf
adc
adc
dec
adc
pop
xor
insl
jo
stos
adc
and
or
adc
hlt
psubsw
aas
aas
cmp
sub
dec
inc
cmpsb
dec
int
jb
mov
shrb
js
add
es
push
pop
push
pop
adcb
je
inc
and
add
lock
add
xchg
xchg
pop
cmp
js
pop
xchg
and
and
scas
add
push
rorl
test
nop
mov
pop
or
and
or
fwait
cltd
sbb
inc
sub
xchg
and
lods
inc
mov
adc
push
add
or
movsb
add
or
cltd
xchg
adc
gs
xorb
shll
addr16
jp
popf
fnstenv
test
imul
xor
xchg
sub
iret
xor
loop
movsl
xchg
inc
iret
xor
lock
mov
fidivl
push
push
popf
mov
adc
loop
cmp
in
xlat
mov
and
inc
xor
iret
les
stc
push
inc
sub
xchg
lahf
push
xor
mov
int
and
stos
lcall
and
es
fidivrs
sbb
lret
fwait
dec
fbld
inc
mov
xor
mov
in
adc
ss
add
pop
inc
out
ds
mov
jmp
dec
add
dec
lahf
adc
cli
and
jb
lahf
in
hlt
and
aaa
pop
and
popa
xor
or
out
xchg
xchg
or
push
sbb
or
cmp
xor
or
lahf
xorb
lds
xor
inc
dec
lahf
test
sar
fmul
adc
dec
xor
jmp
inc
inc
dec
dec
lcall
dec
dec
dec
and
shld
push
xor
push
out
adc
xorb
sub
lahf
mov
mov
dec
sbbb
sbbb
in
xchg
and
xor
lahf
adc
enter
adc
inc
adc
lahf
daa
inc
mov
test
dec
inc
mov
in
inc
or
inc
push
ds
push
adc
cmp
inc
adc
pushf
mov
jg
push
jmp
fdivs
pop
jo
inc
out
fs
inc
add
add
or
cltd
inc
cmpsb
loopne
lret
push
gs
inc
sahf
push
stc
aaa
sahf
frstor
fcompl
dec
xor
or
pop
andl
mov
sbb
and
cmp
daa
jne
or
push
lea
push
push
mov
mov
cmpsb
mov
pop
cwtl
and
mov
loop
xchg
xor
sub
popf
push
push
cmp
push
xor
data16
pop
shll
mov
lods
mov
enter
pusha
xorl
arpl
enter
dec
mov
adc
or
in
add
jno
pop
mov
and
or
arpl
rcl
inc
xor
insl
or
cmpsl
xchg
and
cwtl
inc
call
cltd
imul
inc
addr16
aaa
cmc
pop
sbbl
nop
es
pop
jecxz
ret
lods
scas
sub
sub
cmp
jno
rorb
push
cli
or
jmp
and
or
xchg
ss
and
push
xor
add
xor
inc
xor
fmuls
lods
jo
sub
or
movb
mov
mov
dec
xorb
cmpsl
dec
pop
enter
add
add
mov
sub
or
jmp
mov
popf
out
fsubs
test
nop
jb
movsl
pop
xchg
and
jb
xor
pop
lret
loopne
movsb
sti
mov
not
jmp
add
loope
rcr
and
test
xor
dec
fisubrl
bound
pusha
push
cmp
in
aaa
popa
aas
shlb
shlb
jns
xchg
insb
scas
popa
je
sub
push
push
xchg
lods
movsb
cmp
inc
sbb
je
cmp
or
loope
movsb
sti
cmp
cmp
push
inc
mov
push
xchg
cmp
mov
cmp
outsb
mov
daa
dec
mov
ret
nop
cmp
shll
pop
cmp
or
xor
cmp
mov
mov
ss
and
xorb
inc
lea
or
mov
loop
mov
dec
xlat
inc
sbb
xor
inc
mov
cltd
xchg
push
loope
xchg
rcl
loopne
sub
xor
push
inc
xchg
push
push
rorb
adc
int3
xor
cmpsb
loop
rcll
rcl
or
jo
push
xor
repz
shlb
je
xchg
mov
shrl
lahf
call
cmpsb
mov
xchg
data16
cmp
sub
aad
sub
imul
pop
dec
in
xchg
out
popf
sub
in
loope
into
xchg
mov
cltd
sub
aas
sbb
mov
cltd
xchg
adc
int
mov
inc
pop
xchg
sub
push
pop
shl
lcall
xor
sub
add
or
sub
xor
jae
call
rcll
leave
loopne
mov
xor
test
jo
rcll
imul
imul
push
test
nop
sub
icebp
movsl
xlat
ss
sbb
fs
push
mov
jmp
adc
sarb
cmp
mov
dec
inc
es
xor
cmp
jnp
cltd
xchg
stos
sub
jo
jp
mov
or
sbb
fcomps
jb
dec
sub
or
cmp
push
xor
sub
push
pop
outsb
sbbl
mov
cmpsb
data16
sub
pop
cwtl
imul
adc
xor
xor
mov
xor
out
imul
cs
jo
jno
sbb
xor
xor
push
push
std
pop
movsl
test
fcomp
sub
sub
ds
xor
nop
pop
pop
sub
hlt
jp
rcl
sub
xor
ss
nop
push
lea
enter
sub
add
xor
rol
sub
add
xchg
lcall
jo
ljmp
popa
cs
or
in
into
mov
jbe
shrl
inc
inc
inc
je
sub
mov
das
sbb
xor
cld
aaa
xor
nop
sbb
jmp
fcmovnbe
sbb
jecxz
dec
inc
aaa
rclb
mov
pop
sub
rcl
test
imul
cmpsb
mov
dec
cltd
xchg
sub
cwtl
imul
sub
aad
rcl
jge
out
adc
and
cli
test
or
int
sbb
sub
add
int3
sbb
pop
lcall
cwtl
add
insb
or
fxch
xchg
or
int
jl
cmp
ss
xchg
ret
add
in
cmp
inc
pop
mov
in
call
ret
or
imul
cmp
shrb
push
xchg
jo
rcrb
mov
orl
mov
int
je
cs
mov
sti
lret
push
imul
cmpsb
mov
imul
jns
stos
cmp
pop
pop
sbb
xchg
cltd
xchg
shll
pop
dec
inc
push
mov
push
popa
bswap
sub
arpl
sub
lock
lock
out
dec
push
inc
pop
rclb
push
sub
mov
fisubrl
dec
imul
imul
cwtl
imul
adc
xor
xor
rorb
push
pushf
rorl
aad
inc
dec
mov
fsubl
xor
xor
xor
xor
xor
pop
dec
movsl
mov
xor
cmp
xchg
dec
lods
sub
call
adc
inc
xchg
pop
dec
push
popa
jo
sbb
imul
cmp
daa
adc
xchg
aaa
shrl
sub
pop
aas
mov
ds
mov
jge
aaa
imul
mov
aaa
pop
xor
daa
icebp
mov
repz
test
pop
jns
stos
loop
xchg
mov
rcl
or
sub
mov
sahf
cwtl
lcall
jnp
lds
dec
bt
inc
cs
mov
inc
push
cmp
addr16
jbe
lods
ret
pop
rcll
push
enter
add
imul
movl
ja
mov
imul
sub
enter
inc
pop
and
jb
pop
adc
xor
addb
hlt
out
push
xlat
add
sbbb
xchg
nop
ret
jnp
add
xlat
sub
lahf
jae
mov
imul
and
dec
dec
lock
sub
mov
lds
inc
pushf
or
lret
or
pop
lret
scas
push
xchg
dec
mov
lret
lret
sbb
push
sub
xchg
dec
orb
out
push
dec
je
add
js
dec
imull
dec
test
int3
xor
add
inc
dec
cmp
sbb
push
fisubrs
mov
adc
mov
push
jae
rcll
pop
popf
push
pop
in
cmp
or
push
movsl
push
leave
ret
pop
ljmp
mov
js
pop
ljmp
sub
push
sarb
jl
aam
in
push
loopne
or
stc
mov
dec
imul
scas
push
dec
ret
and
mov
pop
daa
inc
pop
test
outsb
xchg
pop
sub
mov
xchg
es
pusha
adc
cwtl
add
das
mov
shrl
inc
fiaddl
cmp
arpl
out
or
pushf
scas
outsb
inc
enter
insl
dec
cmpsl
jl
inc
add
ds
stc
push
notb
and
lcall
push
jl
sbb
movsl
push
popa
dec
or
sub
and
inc
push
push
ret
sbb
call
fistl
jge
push
xchg
fimuls
call
insl
dec
inc
jmp
and
inc
fistl
mov
addb
insl
dec
testl
xchg
inc
sub
cmp
push
inc
xchg
ret
testb
shrb
and
dec
or
inc
mov
dec
inc
dec
mov
shlb
roll
insl
dec
aaa
inc
sub
insl
dec
inc
pusha
push
sub
mov
mov
gs
lahf
xchg
test
movsb
ret
push
and
loopne
movsb
jmp
xor
movsb
repz
loopne
je
nop
loop
loopne
sbb
inc
jmp
mov
mov
rcrb
pop
inc
clc
insl
dec
jbe
cs
call
and
rcrl
xchg
sbb
xchg
pop
lahf
pop
dec
call
and
lea
adc
dec
mov
or
and
and
clts
or
add
mov
inc
outsb
add
push
dec
mov
mov
push
xchg
mov
or
call
pushf
iret
mov
dec
push
dec
inc
mov
enter
mov
xchg
sub
nop
adcl
mov
cmp
push
test
mov
and
mov
xor
dec
call
and
aaa
mov
and
andl
or
test
push
mov
xchg
push
ss
outsb
jae
lea
jle
jbe
dec
rcll
adc
add
cmp
jmp
call
movsb
add
incl
xor
cmc
out
jl
je
add
and
and
sub
jp
insl
sbb
pop
xchg
cmp
sbb
imul
jge
imul
test
mov
cmp
jmp
pusha
adc
xor
fcoml
push
jns
push
out
mov
pop
cmp
xor
in
and
cvtpi2ps
rep
out
call
in
clc
pop
and
dec
enter
push
inc
outsb
imul
xchg
inc
gs
adc
out
lret
mov
andl
mov
inc
pop
cmp
adc
rcrb
jne
mov
nop
inc
and
cmp
pop
mov
mov
inc
mov
hlt
sbb
push
inc
call
inc
outsl
inc
pop
inc
push
fcomp
xchg
ss
incl
add
fsubl
or
cmc
xor
or
jne
push
movb
adc
mov
cmp
add
cmp
inc
jmp
dec
jmp
xor
rorl
fimuls
inc
inc
lods
add
mov
inc
jmp
inc
inc
inc
pop
je
pop
es
inc
test
jg
add
or
and
mov
xchg
jmp
mov
cld
pop
mov
js
ret
je
inc
or
xchg
imul
add
pop
and
cmp
leave
or
andl
inc
add
xor
inc
jmp
sbb
add
adc
push
popa
pop
pop
sbb
and
fstps
xor
nopl
add
in
mov
mov
add
loop
pusha
popa
push
mov
js
shlb
loopne
mov
fsubl
pop
lock
roll
or
call
add
hlt
mov
cmp
shl
mov
rorl
ss
mov
pop
fisubrs
jge
push
push
dec
testl
mov
add
jne
dec
popf
cmpsl
aam
pop
enter
add
ja
cmp
push
add
clc
adc
pop
cwtl
loopne
push
add
ret
push
sar
inc
push
adc
xlat
dec
jp
sbb
cmp
xchg
sbb
pop
pop
push
hlt
dec
sub
fcomip
inc
adc
fistl
or
xlat
test
adc
xor
jmp
dec
and
movsb
sbb
sbb
cmp
mov
mov
xor
inc
and
jne
sbb
test
cmpsl
mov
sbb
and
sub
or
xchg
mov
stos
data16
sbb
in
ret
xchg
push
ja
push
cltd
nop
cmpl
out
xchg
or
das
dec
cli
or
xor
xorl
lock
add
add
xor
cs
push
add
cmp
mov
xchg
lret
mov
or
mov
sub
aaa
lret
and
add
cmp
iret
mov
mov
aad
aas
shrb
in
push
add
or
in
mov
dec
inc
aas
xchg
mov
popf
push
sbb
push
xlat
cmc
fisttps
xchg
adc
in
imul
ret
push
mov
add
fldt
imul
xor
sbb
dec
inc
sbb
shl
aas
mov
test
jno
or
les
daa
ja
add
inc
xchg
push
int3
in
mov
push
lea
nop
mov
fistpll
add
in
jge
xchg
insb
push
in
xchg
dec
jbe
pop
add
pop
test
ds
push
pop
xor
ds
xor
rol
xchg
ret
add
pop
insl
sbb
dec
adc
aaa
insl
lea
mov
and
jae
and
icebp
xor
adc
cmp
or
popf
divl
pop
push
mov
fldl
adc
push
and
adc
push
aas
adc
and
pop
rcll
dec
pop
and
inc
mov
nop
fisttpl
push
jg
add
imul
jg
cmp
movl
or
ljmp
jne
js
orb
or
and
dec
inc
pop
add
inc
jno
inc
add
aad
sub
mov
sbbl
jle
or
mov
and
adc
test
jno
jns
add
daa
pop
rclb
sub
daa
nop
movsb
repnz
cmp
sub
and
addl
mov
cltd
adcb
je
add
xor
adc
mov
mov
jmp
outsb
outsl
rcl
jns
aam
add
and
cmp
or
add
inc
push
ret
or
stos
add
and
loopne
or
cmpsb
cmpsl
xor
add
and
add
mov
or
xor
ja
fbstp
in
mov
ljmp
and
repnz
movsb
mov
jno
mov
and
xor
pop
jo
addr16
or
add
leave
popa
ret
ret
add
nop
loopne
jmp
push
add
jbe
sbb
or
leave
sbb
mov
enter
pushf
clc
add
inc
mov
inc
repnz
imul
adc
xchg
lea
add
xorl
sbb
add
fildl
jno
rcrl
sbb
loope
pop
pop
xor
add
outsb
xor
mov
mov
in
push
sbb
loopne
mov
daa
dec
pop
push
ret
aaa
and
insb
dec
movsl
jb
inc
inc
dec
or
xchg
sbb
xor
mov
in
shl
sbbl
pusha
cmp
adc
sbb
adc
and
xchg
lret
in
in
add
shlb
shrb
je
sbb
and
push
dec
sub
fiaddl
jo
test
pop
sbb
sbb
push
sub
adc
out
in
cmp
mov
daa
outsl
and
add
add
pop
stc
jbe
mov
lret
call
add
stos
add
add
jnp
push
add
xor
push
popf
fstpt
cwtl
or
jg
dec
mov
addb
scas
iret
jo
nop
push
test
inc
inc
stos
dec
sub
adc
mov
jne
cmp
icebp
sub
mov
mov
and
out
insb
push
dec
call
mov
mov
fisubl
unpckhps
outsb
hlt
out
sarb
lds
test
pop
loope
test
jbe
pop
sub
mov
mov
out
rcl
pop
inc
pop
fcomp
xchg
ja
hlt
xor
test
xchg
mov
ds
fcmovnbe
inc
lea
je
push
mov
or
mov
addr16
fst
sub
cwtl
daa
add
es
addr16
divl
add
cltd
sbb
add
mov
addr16
cwtl
shl
ds
adc
je
adc
rolb
clc
loope
ret
sub
call
add
cmp
sub
sub
or
jo
testl
loope
rorb
lods
roll
mov
or
cmpsl
push
and
push
adc
mov
mov
mov
xchg
sub
test
push
mov
mov
and
adc
mov
out
lods
pop
movsb
xchg
mov
push
jl
ss
inc
dec
imulb
pop
sbb
or
icebp
je
scas
roll
repnz
push
rcr
lea
and
pop
fcomps
push
fst
insl
dec
dec
movl
dec
dec
xchg
push
aas
sbbb
packuswb
insl
dec
dec
loopne
add
mov
fidivrs
dec
xor
mov
and
pop
insl
or
mov
aam
pop
insl
dec
push
call
jmp
dec
dec
hlt
push
jp
dec
xchg
and
jns
or
and
jns
dec
imul
test
add
and
and
adc
or
cmpps
jns
stos
cmp
adc
dec
idivb
or
mov
pushf
cs
stos
dec
call
pop
xor
lret
outsb
push
and
xchg
js
dec
push
test
call
mov
add
xchg
mov
test
cmp
int
or
push
and
inc
or
jns
jne
loope
movsb
ljmp
dec
jns
xor
push
xchg
nop
jns
pop
xchg
nop
dec
mov
pop
stos
or
call
mov
xchg
ss
mov
dec
call
push
xchg
nop
jns
lcall
int3
mov
push
and
jns
std
mov
idivb
jns
fadds
mov
push
xchg
rcrb
mov
jns,pt
mov
xchg
nop
xchg
cmp
xchg
rcrb
jns
inc
xor
adc
ret
push
and
movsb
xor
mov
sub
jb
jns
adc
xchg
jns
inc
testb
or
test
test
jns
push
test
dec
jl
out
add
mov
cmp
pop
adc
inc
inc
inc
jns
xchg
rol
push
jns
enter
inc
jno
test
jns
jp
stos
dec
jns
jb
sub
jns
ret
adc
sub
mov
jns
and
test
cmp
jbe
mov
xchg
sbb
fldenv
fldl
adc
sbb
pushf
or
call
jo
mov
jo
inc
dec
sub
lds
mov
adc
dec
in
sub
cmp
or
out
out
stos
jns
lds
inc
jns
push
sbb
sbb
sub
and
mov
jns
stos
dec
dec
inc
pusha
jns
xor
dec
rcll
adc
daa
dec
lret
push
and
jns
sub
jb
jns
cwtl
xchg
mov
mov
aaa
mov
aaa
cmp
add
push
aaa
call
stos
fs
scas
dec
xchg
add
or
push
pop
test
pop
stos
fs
xor
cmp
jecxz
sbb
pop
and
cmp
fs
sub
adcl
xchg
or
movsb
pop
cvtdq2ps
inc
idiv
cmp
pop
mov
dec
pop
push
leave
shr
cwtl
cmp
leave
rorb
xorl
mov
pop
loope
fnstcw
pop
or
jge
xchg
in
inc
xchg
or
fiaddl
pop
pushf
dec
xchg
pop
cmp
nop
mov
dec
or
call
pop
jae
xchg
and
das
mov
and
sbb
dec
cs
dec
adc
aas
das
fstpl
push
push
flds
or
fs
and
cmp
cs
add
xchg
lsl
hlt
dec
push
and
or
inc
push
das
pop
cmp
and
shlb
mov
dec
inc
das
sti
mov
xor
adc
cmc
and
divl
dec
inc
push
stos
das
inc
dec
adc
das
call
insl
mov
incl
dec
inc
das
shlb
inc
dec
das
and
cmp
dec
enter
inc
mov
or
push
sub
cmp
call
roll
neg
andb
out
jo
cld
andl
addb
dec
ss
push
pop
enter
pop
jae
and
jnp
fs
pop
sbbb
leave
jle
insb
dec
or
add
nop
mov
or
sbb
pop
mov
enter
mov
adc
and
repnz
sbb
enter
pop
movups
jmp
sbb
xchg
inc
adc
push
fs
pop
push
adc
dec
sub
push
mov
nop
sub
aam
xchg
mull
mov
sbb
adc
fcmovnb
mov
mov
loop
dec
push
xor
in
mov
repz
xchg
decb
fs
or
push
lock
add
dec
call
adc
sub
or
negl
push
mov
and
icebp
or
pop
rclb
cmp
push
fcoml
push
cwtl
rcrb
push
xor
cwtl
nop
jge
and
dec
xchg
test
mov
adc
sbb
push
bound
call
xchg
in
outsl
nop
adc
dec
push
mov
xor
or
sub
test
adc
or
mov
push
ret
sub
test
notl
int3
je
fnstenv
mov
xor
in
in
stos
sub
push
adcb
mov
je
cwtl
push
and
sbb
jmp
pop
ss
adc
sar
dec
aam
sub
outsb
push
or
inc
or
aas
xor
ja
mov
unpcklps
das
shlb
call
aas
aad
adc
and
adc
call
in
call
lret
xor
lock
call
cmp
loopne
call
adc
int
inc
call
mov
dec
call
push
call
repnz
call
pusha
call
lret
xchg
das
pop
push
jne
call
in
call
jl
push
movsl
fstl
xchg
std
inc
sbb
push
cs
dec
cmp
xor
nop
sbb
cwtl
add
lret
test
in
xchg
xchg
adc
dec
ret
les
pop
mov
shlb
xchg
cs
dec
ja
adc
in
mov
in
cs
dec
pop
call
in
mov
mov
es
sbb
xchg
lret
repz
adc
add
sub
gs
loope
jb
adc
sub
mov
lret
test
test
sub
xor
lret
xor
cmp
jo
pop
sub
push
inc
sbb
cmp
xor
movsl
cs
adc
in
mov
adc
xchg
pusha
divl
dec
or
std
push
and
mov
std
dec
lcall
jo
push
cwtl
sahf
je
mov
pushf
and
mov
inc
and
je
xor
inc
adc
js
adc
int
dec
jl
sbb
and
push
and
jb
mov
mov
daa
int
cli
cmp
pushf
xor
inc
test
dec
xor
inc
lods
mov
in
rorl
mov
inc
jb
mov
arpl
outsb
or
push
rorb
stos
arpl
inc
pop
je
addr16
xor
or
mov
xchg
je
add
jne
xor
add
lcall
mov
cmp
orl
es
pop
pop
mov
sub
adc
mov
test
adc
cmp
inc
stos
shlb
cs
test
mov
adc
es
movsb
mov
dec
push
xor
and
and
loopne
nop
aaa
sbb
fadds
mov
add
cmp
cmpsl
es
cmp
push
add
fnstenv
add
inc
cld
imul
xchg
dec
mov
inc
scas
sbb
xor
pusha
lahf
and
sbb
push
in
add
sbb
push
movsb
inc
shlb
xchg
xchg
push
shr
addb
pop
adc
adc
dec
mov
cmpsl
sarb
push
dec
sbb
sbb
inc
aad
or
sbb
mov
pop
xchg
rclb
mov
push
or
push
aad
rorb
add
sbb
cmp
xchg
inc
mov
mov
movsb
inc
test
stc
mov
inc
into
fldl
mov
cmp
dec
push
aam
pop
push
or
add
adc
aad
arpl
sbb
push
aad
push
add
cs
sbb
dec
mov
aad
sbb
mov
add
ret
mov
fldl
aad
and
fbld
fs
and
rorl
pusha
jmp
fs
ret
add
sub
or
jecxz
sbb
and
sbb
stos
cmpsl
sub
pop
aam
call
mov
and
sub
jnp
call
test
je
sbb
mov
mov
jg
sbb
cs
cli
push
push
mov
pop
lea
in
and
push
pop
mov
and
and
add
adc
dec
adcl
adc
lret
pushf
faddl
dec
adc
lret
sub
jbe
xor
mov
jo
push
call
jmp
cmpb
push
test
jmp
add
xor
roll
cmp
cltd
adc
mov
add
sub
dec
jmp
or
push
lods
adc
movsl
mov
adc
cs
cltd
rclb
sbb
jnp
repnz
jns
adc
push
cmp
adc
cmp
adc
add
jo
dec
imul
pop
adc
and
nop
in
inc
and
adc
or
lcall
mov
stos
rorl
and
and
push
inc
inc
cmp
sti
dec
inc
inc
mov
pushf
cmpb
pop
adc
inc
inc
cmpsl
shr
and
cmp
cmp
inc
and
cmpb
mov
push
pop
sbb
and
dec
js
jmp
je
cmp
leave
lods
adc
push
pop
inc
clc
negb
sub
push
ret
pop
push
inc
int
nop
je
adc
pop
push
push
inc
add
push
push
xor
ja
call
sahf
adc
sub
sub
pop
lea
push
adc
add
sub
inc
pop
or
or
push
test
sbbl
dec
sub
cmp
nop
adc
push
add
xor
lods
loopne
add
xor
inc
push
pop
mov
push
and
adcl
and
nop
in
adc
pop
add
pop
add
mov
push
add
jge
pop
mov
jmp
adc
lods
mov
negl
call
in
bound
mov
lea
lcall
mov
jmp
cmp
and
sub
mov
xor
aaa
pushf
push
mov
aaa
popf
push
je
add
aaa
call
cmpsb
sub
cmp
adc
pop
popa
pop
mov
xchg
pop
inc
cmp
fs
shrb
gs
push
fs
mov
pop
nop
dec
popf
aaa
imul
shr
dec
or
jbe
enter
mov
sbb
cmp
aam
mov
roll
jmp
arpl
lahf
push
xor
inc
retw
push
stc
push
cld
add
aaa
and
mov
bound
sub
mov
int
out
push
adc
push
iret
dec
push
mov
mov
dec
mov
iret
test
imul
mov
dec
jp
dec
ret
cmp
call
mov
cs
iret
mov
or
add
call
addr16
sbb
fisttpll
push
pop
shll
add
ret
sub
add
push
mov
mov
nop
inc
jle
push
push
stc
mov
fcompl
je
push
mov
adc
outsl
aaa
and
cmpsb
addr16
rcl
dec
addr16
xor
das
xor
or
and
movsl
lods
adc
xchg
ret
add
sbb
add
and
xlat
popf
push
adc
adc
scas
push
je
adcl
xchg
sbb
movsl
sbb
out
sahf
cmp
xor
dec
mov
pusha
loopne
pop
jmp
adc
pop
xchg
adc
mov
adc
sub
xor
push
adc
nop
mov
sbb
sbb
lods
roll
mov
xchg
cmpsl
cli
addr16
daa
xor
pop
in
sub
add
jecxz
adc
out
cmp
adc
add
xchg
mov
sahf
mov
push
mov
and
lret
rolb
xchg
je
test
movsb
xchg
xchg
mov
add
pop
call
inc
dec
xor
adc
gs
mov
xor
lret
and
sub
mov
cwtl
mov
out
cltd
daa
mov
or
sub
push
enter
repz
repz
pusha
inc
sub
gs
mov
sbb
loope
insb
xchg
push
lahf
pop
fdivl
and
and
sub
roll
dec
mov
and
imul
test
cmpsb
loopne
sbb
jmp
mov
mov
fistpl
mov
mov
or
mov
outsl
scas
or
arpl
cmp
popf
mov
mov
mov
push
mov
xchg
in
call
xchg
sub
mov
xor
out
pop
pop
fstl
cmp
or
movsl
xor
sub
xor
dec
mov
or
les
jb
add
cmp
jo
sub
fistpl
adc
pusha
inc
add
cmp
test
pusha
sub
mov
add
or
pusha
orb
sub
jo
add
jb
sub
mov
movsb
mov
sti
fwait
repz
adc
mov
jo
repnz
xlat
lcall
sbb
push
out
sub
cwtl
fdivrs
out
jb
lea
call
sbb
loop
adc
jb
insl
adc
rcr
or
push
ret
inc
adc
lods
mov
lock
mov
sbb
and
imul
sti
lcall
adc
xlat
ret
dec
inc
mov
rcl
icebp
in
adc
adc
or
movsb
mov
push
or
mov
mov
xchg
pop
mov
lret
xchg
cmp
movsb
shrl
and
stos
xchg
inc
xchg
cmp
cmp
cltd
mov
test
jecxz
cmpsb
dec
mov
sbb
inc
push
imul
sub
cmp
in
jo
mov
jmp
inc
xchg
jmp
cmp
mov
mov
push
mov
sbb
or
pusha
or
pop
int
jns
cmp
add
and
or
sbb
cmp
repz
scas
sahf
mov
cmp
repz
sub
out
lcall
repz
add
int3
cmp
cmp
inc
push
push
sub
out
fcomip
push
nop
movsb
push
push
xchg
jl
out
sahf
fs
inc
cmpb
out
sahf
out
push
iret
sarl
push
repnz
fmulp
mov
test
mov
ret
into
out
out
sbb
incb
add
es
loop
repz
sbb
sbb
lcall
pusha
sbb
sahf
out
mov
int
cld
or
and
iret
repz
pop
data16
nop
sahf
cmp
repz
mov
fsubrp
iret
repz
decb
ss
inc
push
shr
pusha
inc
sbb
jb
jle
sahf
out
int3
mov
daa
rol
loop
clc
out
pusha
idivb
cmp
aaa
je
fs
push
mov
repz
sub
daa
pop
cmp
mov
lahf
jae
jnp
lods
cli
jbe
push
cwtl
cmpsl
insl
mov
iret
mov
test
add
xor
xchg
push
jbe
push
sbb
les
orb
js
stos
add
xor
jne
lret
inc
pop
or
sub
scas
lea
pop
inc
or
outsb
xchg
inc
mov
pop
dec
jmp
outsl
add
ja
cmp
jno
mov
lahf
es
lds
mov
and
daa
xor
or
rcr
jae
jbe
jo
outsl
ss
fmuls
cmpsl
add
pop
mov
push
rol
out
mov
push
outsl
mov
sub
dec
cmp
or
das
push
mov
xor
mov
push
mov
jae
or
or
push
sub
dec
and
fadds
jbe
shlb
bound
or
and
mov
add
inc
sbb
inc
sub
mov
stos
outsl
in
mov
data16
add
faddl
sbb
cmp
fistpll
fidivl
adc
aas
ret
je
rsm
jecxz
xchg
arpl
push
dec
fwait
lret
sar
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
rorb
push
xchg
jb
inc
inc
push
jo
nop
popf
pop
insb
subl
cmc
es
xor
jae
pop
pop
sub
arpl
jae
pop
dec
jae
dec
loope
pop
inc
jne
outsb
je
arpl
dec
fadds
xor
je
mov
ss
inc
xor
sub
sub
sub
inc
decl
xor
xor
jge
xor
xor
inc
xor
pushl
xor
ss
xor
cmp
fdivl
cmp
xor
clc
rol
jnp
inc
xor
mov
add
mov
sets
push
xor
jne
test
lret
or
fildl
cmp
push
xor
or
rcr
push
push
and
inc
aaa
adc
xor
inc
pop
adc
jl
and
add
sbb
push
popa
xor
clc
push
inc
push
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outsl
test
dec
loopne
mov
xor
in
sbb
jl
scas
push
push
dec
pop
pop
lock
imul
push
call
push
fidivrs
add
xor
sub
out
in
xor
iret
cmp
in
mov
lods
ss
lea
lods
and
into
imul
mov
loopne
iret
adc
mov
jo
outsl
xor
ljmp
push
ss
fs
je
push
push
insl
int3
lret
and
inc
fldenv
add
sbb
in
adc
cmp
mov
cmp
fidivrs
and
inc
sub
jge
std
inc
arpl
insb
dec
mov
xchg
and
outsb
ret
icebp
xor
test
ss
xor
and
xor
sbb
cmp
add
push
sbbl
pop
add
add
push
jp
adc
mov
out
push
jl
jb
and
and
test
inc
push
imul
cli
pop
cmpsb
push
imul
mov
loopne
jns
scas
scas
xor
das
dec
fs
imul
push
cmpsb
test
ss
jo
cwtl
dec
fwait
jo
sbb
add
push
and
push
cwtl
jnp
dec
movsb
jmp
jp
jae
outsl
push
pop
arpl
inc
push
dec
push
push
push
add
ja
mov
je
outsb
outsl
aaa
pop
xchg
add
popa
imul
ljmp
dec
cmc
sbb
fdivl
outsb
pop
add
push
add
outsl
pop
adc
inc
adc
and
repnz
sbb
or
push
push
pop
rorb
mov
or
or
std
xchg
inc
aaa
and
xchg
pushf
add
sbb
and
adc
sub
addr16
adc
cmpsl
add
orb
enter
pop
mov
inc
cmpsl
fadds
out
or
orb
sarl
or
add
mov
xchg
add
jae
push
adc
xchg
adc
cmp
jae
push
sbb
sbb
sarl
sbb
call
jae
cwtl
push
das
push
pop
nop
cld
and
mov
mov
cli
js
jns
sahf
imul
stc
jp
push
cld
fsubs
mov
add
inc
mov
mov
aam
out
les
pop
aad
mov
and
test
arpl
push
les
aaa
push
adc
push
cmp
jbe
test
es
push
dec
sbb
add
adc
push
cld
or
jns
out
in
int3
les
movsb
xor
xchg
call
mov
repz
test
jns
repz
pusha
pop
mov
sahf
out
dec
dec
inc
inc
cmp
repz
cmp
xor
sub
repz
repz
sbb
adc
repz
adc
add
cld
sahf
out
lcall
jns
out
enter
jo
jl
out
xor
lock
int3
iret
repz
mov
insb
inc
sub
sahf
out
cmp
or
push
fcom
jns
out
les
lahf
out
add
add
cmp
jo
sbb
add
call
push
int3
push
mov
pop
dec
iret
inc
inc
gs
pop
pop
pop
mov
loop
and
mov
inc
xor
icebp
adc
sub
fnstsw
mov
inc
add
adc
inc
dec
or
and
cmp
pop
mov
js
stos
and
mov
fwait
pusha
adc
add
insl
push
sub
and
push
lock
roll
je
dec
aas
mov
xor
jo
and
mov
mov
mov
add
imul
mov
pushf
xor
adc
sbb
jbe
les
lcall
les
les
xchg
add
ljmp
js
shrb
mov
pushf
andb
rolb
pushl
fs
xor
adc
and
clc
jg
adc
push
inc
push
xor
xchg
cld
inc
inc
mov
or
add
mov
inc
cmp
pop
jne
pop
mov
add
shlb
adc
ret
jne
imul
xor
inc
pop
fidivs
arpl
imul
adc
mov
or
adc
sub
mov
xor
jne
cmp
into
fstpt
cs
push
push
push
insb
das
lods
and
inc
scas
pop
mov
add
insb
lods
cwtl
lahf
add
das
jae
add
cmp
add
addr16
and
mov
dec
enter
mov
enter
insb
pop
sarb
jg
es
dec
fcoms
aam
fisttpl
cmp
ret
paddsw
aas
int3
data16
out
adcb
jbe
add
popa
pop
and
xlat
jns
lds
fisttps
sub
cltd
ss
lcall
mov
push
inc
lret
les
mov
filds
or
push
popf
jl
jo
push
in
push
aas
sbb
sbb
lahf
jg
cmpsb
jg
dec
and
loop
xor
adc
or
mov
rorl
vmptrst
mov
aas
mov
cs
outsl
pinsrw
xchg
pushf
dec
fcmovnbe
mov
aas
xchg
out
jbe
in
packsswb
data16
push
push
aam
insb
adc
imull
loopne
dec
mov
dec
jecxz
adc
loopne
pop
jnp
xor
lock
enter
fcmovnu
imul
push
leave
xor
icebp
mov
popa
fs
dec
rolb
pop
or
cltd
xor
inc
je
dec
imul
and
cltd
sbb
rorb
cltd
sub
push
jb
push
lcall
xor
push
and
icebp
fistps
push
push
add
push
outsl
ja
xor
jmp
xor
sbb
push
add
out
add
dec
fsubrp
daa
movsb
and
pusha
in
xor
orb
cmpsb
cmc
into
or
lods
adc
lret
fucomip
cmc
pop
repnz
and
add
add
inc
cmp
push
dec
push
jb
insl
adc
adc
inc
add
adc
shrl
dec
pop
outsb
push
add
push
imul
mov
cli
add
jae
fcompl
add
ret
rcll
test
ficoms
mov
xor
ss
mov
out
das
mov
ficoml
push
sub
push
inc
out
mov
mov
add
add
and
dec
lock
add
mov
xchg
dec
mov
inc
push
mov
aam
scas
xor
das
push
mov
xchg
or
cmp
push
jo
jb
lret
lock
jns
imul
movsb
sbb
roll
push
push
lods
cmpsl
xor
jb
pop
adc
sbb
imulb
packuswb
cmp
adc
into
inc
imul
inc
pop
mov
inc
pusha
inc
and
or
cmpsl
and
inc
pop
sub
and
xchg
xchg
mov
xor
sbb
pop
add
pop
in
sub
cmp
inc
add
fisubl
add
fbld
jne
xchg
inc
or
lods
mov
addb
mov
addr16
movb
es
pop
push
xchg
and
dec
jmp
dec
jecxz
push
nop
pop
ds
call
inc
lahf
xor
mov
xor
dec
loope
adc
icebp
ss
popf
xor
inc
cs
das
xor
adc
jle
and
sub
adc
cmp
or
lahf
outsb
xor
add
and
add
mov
aas
das
pop
outsl
push
mov
or
ljmp
out
push
add
push
lcall
orb
mov
add
push
dec
dec
dec
lds
mov
pop
addr16
inc
jns
imul
xchg
xchg
fs
lds
inc
mov
ss
mov
and
push
outsl
cmp
cmp
dec
and
add
stos
loope
add
push
and
xchg
add
cmpsb
cmp
add
sbb
lock
jae
mov
rolb
sub
add
imul
rorb
xorb
arpl
subw
push
jbe
mov
dec
pop
or
and
lods
xchg
jnp
out
mov
jecxz
stos
enter
gs
push
xor
fadds
addb
mov
lea
add
jo
add
add
xchg
add
outsl
inc
dec
andl
inc
jo
sub
dec
xchg
ds
data16
dec
pusha
push
jo
jno
jnp
imul
loopne
arpl
scas
into
pop
or
fcmovbe
roll
in
xchg
inc
leave
xor
ljmp
dec
imul
add
jmp
pop
add
lret
xor
sbb
out
outsl
hlt
gs
ss
cmpsl
add
push
mov
loopne
loopne
imul
push
push
or
jns
insb
bound
inc
jae
adc
add
mov
divb
add
jecxz
outsl
xor
and
push
add
sub
or
rolb
xchg
mov
cmp
dec
jle
push
jae
das
sub
nop
xor
sbb
cmp
fbld
lret
fbld
insl
jge
jp
ficomps
mov
push
popa
xor
push
sbb
insl
inc
subb
aam
es
jg
jecxz
add
push
pop
in
jp
add
sbb
jae
loope
inc
fisttps
jge
mov
push
sbbb
or
test
repz
mov
and
ficoms
icebp
addb
cmp
pop
mov
jns
pop
dec
mov
incl
xlat
fadds
inc
dec
push
mov
inc
cmp
pop
xchg
js
inc
xor
sti
fsubrl
lods
add
ss
sbb
pusha
jmp
pop
cmp
mov
cmpb
or
adc
add
andl
andb
fs
and
push
and
mov
lcall
iret
repz
mov
or
sahf
out
ds
out
lock
out
enter
mov
repz
out
test
pop
mov
repz
nop
mov
jo
pusha
push
pop
push
out
sahf
out
cmp
and
adc
sahf
sbb
cld
in
lock
sub
fcomps
enter
cwtl
jns
out
mov
cmp
jns
out
sub
sbb
iret
sarl
add
in
hlt
in
in
iret
repz
int3
mov
cmp
int
xchg
push
mov
js
push
lahf
out
iret
inc
sub
and
or
jmp
xchg
cmpb
sbb
or
dec
cmpsl
sbb
xchg
mov
push
mov
mov
lcall
jne
shl
lock
jo
lock
push
nop
fimull
adc
aaa
cmp
and
orb
maskmovq
testl
lret
jbe
orl
inc
dec
pop
lds
fs
inc
dec
pop
inc
add
and
adc
pop
not
mov
and
or
sarb
pop
dec
mov
test
data16
inc
subl
leave
xor
addb
fstpt
mov
push
pop
jo
add
mov
cmp
mov
xchg
dec
inc
addl
push
rclb
or
jae
inc
push
lret
sub
jecxz
es
cmp
insl
jbe,pn
and
fbstp
add
scas
lahf
xor
xor
adcb
cld
or
je
das
mov
xor
jae
imul
in
add
xor
gs
imul
sbb
cmp
mov
sub
and
add
or
add
push
xor
jb
jne
xor
sti
loopne
jae
popaw
insb
into
mov
or
dec
jns
das
sti
add
sbb
aaa
push
sbb
inc
add
fstpt
pop
adc
fildl
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
incl
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
ljmp
xor
xor
xor
xor
dec
xor
xchg
shll
ljmp
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
pushl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
jmp
push
add
adc
and
dec
xor
xor
xor
js
popf
xor
xor
xor
xor
sar
pushl
push
xor
xor
xor
xor
xor
xor
out
sar
jge
xorl
xor
jge
mov
xor
xor
fidivl
cltd
clc
ljmp
xor
fnsave
out
xor
call
ss
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lea
cmp
pop
cmp
incl
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
nop
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
jmp
pop
cmp
cmp
jae
mov
pushf
cmp
cmp
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
pop
std
lcall
aas
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
decl
xor
xor
xor
xor
pop
xor
jo
xchg
xor
ljmp
xor
xor
xor
xor
mov
sbb
xor
aaa
ss
clc
loop
cmp
cmp
jmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fwait
adc
cmp
xchg
aas
inc
aas
pop
aas
ja
icebp
and
ret
push
or
cmp
pop
jg
pop
xor
push
xor
xor
xor
xor
xor
loopne
inc
lock
xor
ret
xor
xor
jg
lcall
hlt
xor
xor
xor
test
mov
mov
nop
xor
cwtl
xor
lock
clc
xor
cmp
fistpll
lods
cmp
cmp
cmp
cmp
cmp
cmp
inc
pop
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
cmp
xchg
adc
sbb
jmp
cmpb
ds
aas
jmp
outsl
clc
add
and
cmp
ss
ss
xchg
cmp
lcall
cmp
mov
mov
mov
cmp
es
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
pop
pop
lcall
xchg
xor
adc
add
jmp
mov
scas
xor
xor
jmp
shll
or
and
xor
xor
mov
xor
aas
cli
ljmp
shlb
ss
add
lcall
lods
decl
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
aaa
cld
ljmp
outsl
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
call
std
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
icebp
mov
cs
cmp
dec
cmp
popa
cmp
cmpb
cmp
cmp
cmp
cmp
or
cmp
cmp
push
cltd
sbb
cmp
cmp
cmp
bnd
adc
ljmp
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
pop
cmp
scas
clc
decl
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
out
cmp
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
xlat
aaa
dec
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
xor
mov
xor
scas
dec
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
sbb
xor
xor
scas
jno
xchg
xor
xor
xor
cmpsb
cli
pushl
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
call
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
cmp
cmp
mov
sbb
pop
fimull
nop
cmp
cmp
cmp
test
mov
xor
push
or
call
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
incl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
inc
add
lock
mov
pop
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
pop
pop
inc
xor
mov
xor
xor
push
pushl
push
ss
fiadds
aaa
ret
mov
jmp
repnz
or
cmp
call
cmp
jae
jge
mov
cmp
cmp
jbe
xchg
cmp
mov
cmp
mov
and
cmp
cmp
mov
ds
aas
jne
mov
or
pushl
jg
mov
fwait
xor
xor
dec
or
loope
clc
or
sub
aas
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
idiv
sbb
call
ss
in
and
cmp
cmp
cmp
inc
add
mov
sbb
sub
push
cmp
pop
push
imul
cmp
test
stos
sarb
mov
cmp
dec
cmp
cmp
mov
aam
fnstsw
jecxz
imul
mov
cmp
cmp
sub
push
cmp
sarb
inc
cmp
orb
call
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
loope
sar
or
lds
xor
aad
jg
out
cmp
or
xor
xor
xor
xor
xor
mov
cmc
pushl
inc
ss
lcall
ds
dec
aaa
pop
aaa
js
loopne
lock
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
lcall
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
icebp
push
out
pop
rclb
sub
jne
outsl
ret
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
stos
push
js
xor
xor
sbb
adc
loopne
call
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
test
in
ljmp
arpl
scas
xor
aaa
into
xor
lock
cmp
inc
xor
xor
lcall
decb
lods
xor
int3
sbb
mov
in
test
lods
xor
pushl
xor
xor
cmp
sub
sub
xor
cs
mov
cmp
cmp
cmp
xor
push
test
cmp
fidivs
cmp
cmp
adc
lahf
inc
test
mov
mov
enter
ret
mov
cmp
cmp
mov
cmp
inc
push
push
pop
inc
lock
dec
cld
push
add
or
jmp
stos
sbb
and
and
sub
sub
jecxz
jo
xor
cmp
inc
cmp
cmp
aas
lcall
push
cmp
loope
cld
jl
cmpb
push
mov
nop
xchg
cwtl
dec
clc
mov
mov
sub
xor
inc
mov
ret
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
hlt
sti
shl
loopne
clc
jbe
push
or
xor
mov
xor
xor
xor
inc
xor
xor
mov
nop
xor
xor
fsubl
cmp
mov
xor
ret
add
xor
pusha
xor
ds
fimuls
xor
ss
aas
std
decl
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aaa
sbb
and
and
std
jg
aaa
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
or
sar
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
jl
mov
aaa
cwtl
into
mov
dec
cld
call
loope
aaa
mov
mov
aaa
enter
shlb
aam
fdivs
fdivrl
in
out
aaa
hlt
push
loop
test
cld
aaa
hlt
add
or
adc
adc
js
sarb
out
mov
ret
fdivrl
js
rorb
clc
cmp
pop
call
incl
jl
cwtl
cmp
cmp
sub
cmp
cmp
stos
push
cld
in
cmp
cmp
push
cmp
filds
cwtl
cmp
movsb
cmp
mov
mov
mov
inc
clc
cmp
movsl
sbb
mov
push
push
sar
aas
push
add
movsb
fs
jg
in
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
iret
xchg
mov
aaa
stos
mov
push
lret
aaa
ljmp
or
push
aaa
mov
pop
push
shlb
push
imul
push
add
imul
addb
lret
add
jge
adc
mov
add
sbb
sub
test
out
and
or
push
pushw
negl
dec
add
xchg
out
das
and
dec
mov
cwtl
loopne
xorb
dec
adcb
adc
imul
das
adc
add
fs
cmp
pop
adc
sub
inc
jno
push
mov
daa
imul
mov
ret
jl
push
xor
and
xchg
sub
gs
xchg
pusha
pop
or
inc
or
xchg
ss
push
mov
inc
dec
fcmovb
dec
popa
adc
dec
fidivl
sbb
call
popf
add
inc
call
fildll
cmpl
idivb
push
sub
imul
je
jae
xor
inc
or
aaa
jle
cld
sbb
inc
add
jl
or
incl
jb
mov
cmpsb
xor
mov
add
sub
dec
adc
mov
sub
setbe
ret
incb
insl
das
leave
jbe
call
aaa
or
add
es
jmp
mov
mov
aas
dec
jge
je
mov
sub
filds
movsl
mov
lahf
jp
or
dec
std
push
mov
mov
fdivl
sbb
cmp
and
or
jmp
inc
loopne
pop
in
adc
es
add
adc
jbe
pop
push
inc
ret
les
pop
adc
add
sbb
fidivs
xchg
insl
arpl
pop
std
push
or
adc
sahf
cmpsb
lret
leave
xchg
into
or
mov
sarb
push
jno
inc
cmp
jne
idivb
or
std
adc
addl
jmp
outsb
and
push
cmp
call
outsl
sbb
inc
nop
ljmp
sbb
or
inc
jmp
or
adc
adc
fistps
aam
int
pop
push
add
dec
add
loope
outsb
dec
xor
pop
add
test
mov
pop
or
test
or
mov
dec
inc
loop
sbb
lret
adc
hlt
and
movsb
xor
loope
dec
cmp
xchg
mov
fldl
dec
clc
or
outsl
push
mov
repz
fildl
aas
lea
sbb
dec
ss
clc
fnsave
cmp
fcoms
xchg
mov
insl
dec
cmp
pop
ret
sub
xor
pop
pop
sub
ror
or
sahf
xorl
and
adcb
jb
adc
lea
push
fisubs
mov
fcmovb
js
jecxz
pop
add
xchg
or
push
mov
push
fisubl
pushf
nop
add
fimuls
and
mov
jecxz
and
add
inc
push
xor
add
sub
ret
xchg
test
adc
push
pop
rorb
push
and
adc
cmp
xchg
adc
adc
mov
lock
mov
mov
subl
pop
ja
or
pusha
or
mov
pop
push
cmpb
cmpb
or
pop
int3
loopne
and
pop
adc
xchg
or
leave
adc
sub
scas
mov
add
mov
add
sbb
cmp
cmp
or
fildl
rorb
sarb
xor
dec
rcrb
add
lds
stc
sbb
test
enter
push
rolb
cmp
inc
cmp
loopne
lods
sbb
test
repnz
add
sbb
adc
lea
verr
pop
out
cmp
cmp
jge
inc
rolb
jnp
mov
add
inc
lahf
jmp
jns
dec
inc
lret
sub
gs
add
test
xchg
jne
mov
jle
lret
pop
sbb
sub
and
sbb
xchg
loope
mov
outsb
push
push
mov
outsb
mov
lods
add
sbb
ret
adc
fiaddl
stos
imul
aas
pop
sbb
and
leave
jp
jnp
mov
call
inc
leave
jnp
and
mov
addb
cmp
sub
icebp
out
mov
xor
cmc
lds
mov
adc
push
inc
test
dec
sub
sbb
jbe
rol
jle
pop
cli
sbb
lahf
loopne
dec
sbb
inc
mov
std
pop
xor
loopne
mov
jl
dec
mov
divb
call
mov
repnz
scas
ret
call
call
nop
pop
sahf
jbe
jmp
push
push
mov
and
and
sub
negl
pop
call
and
cwtl
pop
adc
and
inc
push
lods
pop
movsb
fildl
sub
and
and
fimuls
or
sti
mov
mov
mov
push
mov
orl
and
gs
and
push
add
inc
add
mov
and
gs
fwait
stc
and
or
sbb
and
sbb
mov
push
gs
add
and
jg
gs
pop
sbb
mov
icebp
mov
fistps
adc
gs
adc
mov
or
gs
sub
inc
ficoml
or
das
das
das
add
adc
rclb
fimull
sub
out
fidivrl
add
inc
ficoml
add
mov
add
xor
fidivrl
add
mov
popf
notl
sbbb
and
dec
pop
pushf
das
insb
push
cmp
inc
scas
add
sahf
inc
mov
pop
leave
mov
and
pop
pop
ret
and
out
call
mov
add
daa
mov
sbb
fstpt
fisubl
aam
and
inc
int3
mov
and
test
movsb
and
out
push
fidivs
push
and
es
add
xchg
xchg
sbb
dec
lret
sbb
jb
jg
iret
repz
push
insb
fs
push
movsb
sub
cmp
inc
orl
mov
push
xchg
jns
test
mov
mov
sub
lret
fstps
jg
and
out
in
out
xor
pop
nop
inc
push
fs
mov
je
cmp
and
adc
push
addr16
out
fdivl
lock
lret
cmp
jae
push
or
and
sbb
mov
push
push
push
lods
add
xlat
push
inc
xchg
cltd
jle
mov
mov
xchg
mov
mov
and
jb
popa
hlt
and
addr16
xchg
mov
in
cltd
clc
adc
add
cmpsb
pusha
les
pop
push
mov
mov
pop
or
leave
repz
stos
sub
call
adc
push
ret
cmpsl
mov
sub
lcall
mov
daa
es
daa
pop
and
es
daa
or
add
daa
daa
imul
inc
lcall
xor
daa
daa
daa
daa
daa
test
add
sub
out
sub
sub
sub
and
sub
sub
shlb
sub
cmpsb
test
sub
addl
cmpsl
and
dec
testb
and
cmp
cmp
addl
aaa
adc
sbb
add
inc
stos
fcomi
subb
js
lods
andl
fldl
inc
sbb
mov
pop
cmc
push
int
xchg
push
jp
or
clc
fs
dec
enter
sbb
pop
add
nop
call
psubsb
cwtl
adc
inc
sub
jo
call
push
add
inc
sub
and
add
add
mov
sub
cs
addr16
dec
mov
sub
cwtl
push
nop
addr16
jle
push
nop
dec
bound
pop
inc
inc
mov
xchg
in
je
subb
data16
rolb
adc
cmp
addr16
addr16
dec
test
imul
push
shlb
sahf
xchg
test
xor
data16
popf
filds
mov
cmp
or
add
inc
inc
addr16
adc
adc
ret
call
xor
addr16
test
xchg
cltd
mov
inc
inc
mov
jp
inc
loopne
jmp
or
inc
mov
test
scas
pop
mov
in
loop
mov
addb
test
mov
push
adc
aas
jl
cltd
cwtl
pop
push
call
nop
add
ljmp
push
les
dec
add
cltd
mov
xor
enter
cltd
or
cwtl
mov
cltd
pop
xorb
nop
cltd
pop
sbb
push
adc
sbb
cltd
sbb
insb
aaa
or
sti
sbb
test
adc
cltd
outsl
and
push
adcb
xchg
and
addl
xchg
pop
cltd
faddl
and
aam
adc
push
pop
adc
inc
movsl
inc
or
mov
popf
pop
adc
mov
imul
xchg
push
xor
adc
jne
cs
jmp
outsb
adc
sbb
movsl
inc
fstl
or
gs
icebp
push
test
and
push
or
fidivrl
rorb
adc
sbb
aam
bound
adc
sub
lds
jo
inc
enter
mov
lds
cmc
cmp
les
xchg
adc
stos
aam
xchg
push
adc
sbbb
rcrb
jo
inc
movsl
inc
adc
mov
mov
jbe
cmp
in
fiadds
push
pop
adc
test
inc
pop
addr16
aam
push
pop
add
inc
ljmp
inc
pop
jb
sub
push
adc
inc
call
and
pop
ss
push
pop
adc
pop
adc
sbb
and
pop
jmp
pop
or
stos
mov
orb
imul
test
adcl
adc
popa
push
imul
das
push
xchg
adc
xchg
aad
or
xchg
pusha
dec
sub
mov
pushf
pop
adc
mov
mov
in
shlb
pop
inc
movsb
sub
fldl
xchg
fstpt
or
clc
mov
add
xor
sub
lea
inc
pop
mov
mov
pop
enter
nop
in
inc
mov
add
pop
xchg
or
pop
and
dec
aaa
mov
pop
push
xor
sbb
pop
mov
sbb
push
add
cmp
adc
sbb
pop
and
xor
sub
pop
push
add
xchg
xchg
aam
inc
mov
pop
add
mov
xor
shlb
pop
mov
inc
xor
movsl
hlt
pop
xchg
enter
cltd
sbb
xor
enter
cmp
inc
enter
pop
inc
dec
dec
popf
into
loop
inc
pop
cmp
sub
and
mov
fstpl
add
cld
pop
push
call
and
jg
pop
dec
adc
lods
jnp
fdivrs
fdivs
lds
out
inc
cmp
stos
loop
mov
adc
pop
dec
or
flds
call
fs
nop
xor
add
bt
jb
mov
jo
nop
rorb
movsl
addb
daa
xchg
sub
faddl
adcb
ss
jb
xorl
jno
rcll
cmp
xchg
fildl
imul
lods
inc
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
call
out
outsb
je
push
add
and
pop
sahf
lahf
xor
sub
xchg
and
and
xchg
cmp
aas
push
andb
cs
pusha
ss
mov
lret
repnz
ffree
loop
dec
shrl
lret
repnz
fdivl
mov
ss
adc
arpl
in
das
pop
cmpsb
xor
or
mov
add
pop
int3
pop
and
in
inc
fdivl
fdivl
pop
ss
adc
mov
jecxz
or
jo
pop
lret
mov
les
jns
jb
push
mov
dec
lock
out
pop
test
mov
mov
fcmovnu
mov
inc
push
or
sbb
pop
inc
dec
int3
xor
fimull
add
int
sbb
sahf
sub
popa
sbb
push
mov
loope
pushf
int
push
add
cwtl
popa
cmp
loopne
nop
loopne
and
loopne
pop
mov
iret
in
in
add
addr16
in
or
add
or
and
daa
rclb
sub
add
in
cwtl
adc
xchg
cmpsl
or
dec
daa
jnp
add
rolb
js
roll
stos
sbb
cltd
loopne
mov
shlb
and
cltd
dec
inc
xor
mov
push
dec
mov
xchg
push
js
cmp
jp
inc
mov
fcoml
outsl
adc
shrl
and
clc
adc
mov
push
stc
sub
mov
pop
and
push
inc
jmp
sbb
dec
adc
std
sbb
inc
popf
fisttpll
xchg
iret
and
cwtl
test
in
pushf
mov
mov
cmpsl
and
push
daa
cltd
inc
ljmp
jns
push
mov
fdivr
loope
nop
cmp
mov
sbb
lahf
mov
xchg
jmp
jle
mov
pop
leave
add
or
mov
repnz
add
add
mov
add
fdivl
gs
daa
inc
push
xor
or
subb
and
sub
inc
pushf
mov
aam
outsl
push
add
inc
adc
call
test
popa
mov
insb
xor
lods
pop
pop
sbb
jl
and
in
cmc
imul
jmp
add
pop
adc
sti
ret
call
imul
xchg
gs
jge
sbb
pop
push
inc
xchg
subl
or
mov
mov
mov
sbb
and
xchg
inc
push
mov
repnz
inc
inc
icebp
lret
push
inc
mov
push
inc
adc
and
mov
jl
gs
dec
jl
mov
add
inc
jno
xchg
sbb
add
in
sti
pop
lret
pop
pushf
inc
pop
adcb
adc
or
adc
add
or
outsl
adc
mov
sbb
add
ss
flds
mov
movsl
pop
filds
xchg
inc
sbb
add
sub
aam
addl
fiaddl
jno
jecxz
xchg
pop
fwait
cmp
push
fmuls
push
xor
es
mov
lahf
jmp
xor
adcl
hlt
xchg
pushf
mov
movsb
adc
adc
imul
xchg
push
mov
test
subb
pop
test
sbb
sub
sahf
dec
cmp
addb
test
lret
fnstcw
inc
repnz
cmp
cmp
fldcw
mov
sbb
lea
sub
test
or
mov
sbb
mov
fadd
push
add
es
push
add
push
add
ss
adc
dec
mov
sbb
add
xchg
movsl
xchg
dec
cmovle
mov
roll
das
je
xchg
movsl
sbb
push
inc
xchg
fidivrl
rcrb
xor
xor
xchg
imul
add
ljmp
mov
xchg
mov
aaa
xor
xchg
movsl
fwait
es
mov
xchg
dec
punpcklbw
clc
mov
es
or
jmp
icebp
push
xchg
call
mov
xlat
fs
data16
push
shlb
frstor
cmp
add
sbb
cltd
xchg
test
dec
xor
movsb
icebp
jnp
in
xchg
test
add
adc
or
jb
pop
cmpsb
test
test
shl
lret
int
enter
adc
inc
lea
adc
int
sbb
mov
aaa
mov
loope
push
adc
sbbb
repnz
leave
call
adc
push
int
add
xorb
cltd
mov
in
mov
xchg
int3
pop
insb
push
stos
adc
xor
int
mov
rcr
out
pushf
inc
mov
push
inc
pop
dec
pop
dec
cmp
outsb
dec
pop
inc
cmp
jb
jb
inc
fldl
push
rcr
aas
push
and
fistl
insb
push
lcall
pop
dec
fistl
inc
popf
in
inc
mov
aam
loopne
inc
or
inc
xchg
mov
or
and
imulb
call
and
cmp
inc
enter
push
and
outsb
inc
pop
ss
fnsetpm(287
cmp
loop
nop
fistl
and
jns
xorb
inc
insl
xor
and
inc
adc
push
dec
push
bound
xchg
or
sbbb
dec
fistpl
ret
or
fildl
shll
orl
fstpt
pop
fidivrl
inc
fstl
sub
mov
mov
fninit
cli
ficompl
jns
stos
cmp
scas
adc
daa
lods
stos
adc
ljmp
inc
and
enter
jp
xchg
jecxz
inc
sub
push
fistl
inc
pusha
push
xchg
mov
sbb
ficoms
or
mov
push
addl
xor
rorb
filds
push
loopne
aaa
fnstsw
mov
cmpsb
mov
fucomip
in
fs
xor
leave
roll
push
push
cli
lock
iret
loope
sub
inc
daa
xor
int3
push
dec
cmp
mov
mov
sub
and
or
add
in
mov
in
fdivrl
and
das
das
les
in
in
test
mov
in
mov
jno
in
in
imul
in
dec
mov
xor
and
cmp
inc
push
add
sbb
and
loope
mov
nop
add
mov
stos
mov
lahf
mov
cmpl
gs
push
jb
mov
and
cmp
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
cmpl
cmp
inc
push
pushf
mov
sbb
and
jnp
jo
gs
pop
mov
pop
cmp
inc
cmp
mov
or
mov
push
or
enter
mov
inc
mov
sbb
mov
xchg
data16
jp
in
mov
mov
imul
inc
adc
adc
movsb
sbb
xor
push
lcall
sbb
cmp
dec
cli
mov
in
sbb
cmp
xchg
xchg
cmp
cmp
mov
cmp
inc
inc
mov
movsb
inc
mov
dec
leave
xchg
out
jl
dec
dec
push
rclb
add
add
lock
inc
push
or
dec
aam
push
inc
dec
rolb
add
cwtl
adc
addr16
add
sbb
and
pop
adc
pop
rolb
xchg
cmp
and
stc
jb
test
mov
ljmp
orl
jmp
add
adc
push
fadd
cmp
push
inc
pop
mov
jp
inc
sti
testl
addl
ljmp
add
sbb
lcall
add
daa
push
sub
call
mov
adc
jbe
add
push
mov
pop
cwtl
xchg
repnz
xor
punpckhbw
cmp
pop
dec
pop
dec
add
shrb
leave
and
nop/reserved
push
arpl
push
rclb
sbbl
jmp
inc
pusha
lret
and
mov
les
xor
inc
cvtps2pi
add
imul
jbe
lret
cmp
sub
adc
sub
maxps
rorb
sbb
xor
sub
aad
unpcklps
jb
sub
add
lret
inc
psllq
and
or
sysexit
push
pop
jp
inc
bswap
dec
cmpsb
addl
aam
packuswb
bound
fwait
pop
fdivl
lock
cmpsb
loope
add
addb
cmp
jecxz
push
cs
outsb
and
push
xchg
int3
adcb
int3
dec
push
inc
sub
cmp
dec
pop
mov
scas
or
or
sub
xchg
out
sbb
or
lcall
or
aam
sbb
int3
push
inc
push
lret
fstl
xchg
test
sub
or
in
mov
pop
sub
gs
or
xchg
movsl
sbb
mov
xchg
popf
cmp
push
jno
movsl
sub
lcall
mov
movsl
or
pop
or
pop
mov
pop
sbb
fmull
jnp
pusha
and
js
cld
fcoml
xchg
shr
xchg
fnclex
mov
and
movsl
repz
lret
inc
loop
xchg
or
out
jo
dec
or
jns
add
adc
sbb
and
sbb
xchg
or
sub
sbb
pop
sbb
push
adc
out
test
or
pop
xchg
adc
dec
pop
mov
mov
mov
jae
add
push
xchg
or
aam
pop
add
js
gs
sbb
cmp
and
cmp
or
test
or
pop
mov
movsl
aad
push
lret
or
faddp
or
lods
or
movb
lret
and
lret
xor
shlb
cmp
insl
stos
mov
xor
lret
rcr
inc
movsl
sub
js
xchg
mov
fidivs
imul
aam
pop
sbb
rcrb
in
movsl
sub
inc
outsl
sub
or
sbb
push
lret
loopne
pextrw
adc
repnz
lock
xchg
xor
push
sbb
add
rcl
push
sub
stos
jg
add
lret
rorb
xchg
xor
subl
and
xor
or
push
xor
rclb
mov
or
dec
mov
je
cmc
or
fisttpll
or
pop
sarb
gs
or
inc
or
dec
ja
fxch
sub
scas
push
or
movsl
or
inc
cwtl
or
or
rorb
xchg
and
in
cmpsb
stos
or
mov
or
ret
dec
pop
or
sbb
push
lret
add
inc
add
xchg
out
cmp
movsl
xchg
fidivrs
mov
xchg
mov
or
popf
sub
sahf
or
ds
push
test
pop
ljmp
mov
inc
push
loop
cmpsl
cmpsl
sbb
mov
xchg
dec
sub
jne
gs
movsl
jp
or
loop
ficomps
push
add
or
or
or
gs
gs
test
ja
sub
mov
repnz
or
push
jno
adc
xchg
mov
adc
movsl
addl
shlb
add
push
or
mov
les
push
or
out
mov
or
dec
push
loope
in
add
inc
or
ret
add
and
or
jo
sub
stc
pop
cmp
inc
or
inc
xchg
sbb
and
pop
int
adc
cmp
aaa
xchg
out
rcr
xorb
cltd
test
lods
pop
das
cmpsb
fiaddl
jmp
adc
mov
pushf
sub
nop
mov
inc
das
xchg
rclb
movsl
das
jmp
mov
push
pop
ds
cld
mov
lods
in
xor
xchg
rclb
pop
xor
ja
cmpsl
mov
pop
push
xchg
xor
shlb
mov
testl
adc
ror
and
or
push
ja
inc
xchg
cmpsb
cli
sahf
arpl
movsl
fs
js
mov
cmpsl
cmp
cmpsb
push
test
cmp
push
cmpsl
push
sub
mov
int3
faddl
sbb
sahf
out
sub
inc
push
pop
out
sahf
out
adcb
sahf
enter
or
push
ds
sahf
out
pop
jb
mov
mov
out
push
stos
cmp
repz
and
cmp
cmp
repz
jbe
test
cmp
ds
into
call
sbb
repz
repz
dec
pop
insb
sbb
call
cmpsb
add
cmp
mov
push
adc
and
mov
lods
dec
mov
push
lea
imul
xlat
pop
les
sbb
push
push
mov
out
mov
cmc
fldcw
add
push
clc
mov
shrb
mov
push
pop
xor
sbbb
push
add
mov
sahf
out
push
mov
add
push
lcall
adc
out
pop
testl
sbb
sbb
repz
call
or
mov
ds
repz
dec
repz
cmpb
sbb
jns
iret
jp
cmp
or
leave
or
mov
and
mov
sbb
outsl
pop
adc
push
test
inc
add
jns
out
push
cmp
adc
repz
out
clc
xchg
in
loopne
iret
repz
fcom
int3
enter
iret
repz
mov
cmp
repz
iret
repz
mov
cmp
repz
jo
push
repz
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
adc
lcall
fmul
out
sahf
out
mov
sub
repz
add
pop
movsb
jl
cmp
repz
dec
inc
xor
jns
out
or
mov
shlb
mov
or
loope
cmp
int3
test
push
xor
cltd
ja
fwait
jg
push
add
lock
mov
push
mov
das
push
inc
adc
pop
mov
adc
rolb
inc
dec
add
inc
push
lret
aaa
xor
push
push
ret
into
add
add
and
xor
inc
adc
mov
or
inc
aaa
rclb
repnz
jbe
arpl
lea
jo
mov
insl
dec
sbb
add
and
sub
xchg
add
adc
stos
jne
mov
inc
add
inc
xor
iret
test
mov
fiaddl
jg
pop
cmpb
int
fnstenv
pop
shll
jbe
add
xor
add
fisubrl
cmpsb
mov
fimull
in
push
xchg
aas
pop
xor
daa
andb
nop
sub
les
inc
pop
dec
push
mov
rorl
cmp
push
pop
scas
inc
fisttps
jno
inc
sarb
fsts
sub
fldl
inc
jg
inc
ret
out
dec
jle
pop
xor
aas
or
int3
add
enter
cmpsl
aaa
jno
lcall
mov
cmp
mov
mov
orl
int
jne
fimuls
ret
imul
mov
push
loopne
repnz
xchg
mov
mov
pushf
add
cmp
test
aaa
xor
cmp
pop
stos
outsb
cs
and
sub
ds
outsl
gs
jns
mov
subps
mov
test
or
je
rclb
xchg
fsubl
mov
jbe
subb
sbb
scas
inc
and
inc
xor
stc
mov
jne
notb
imul
sbb
mov
push
outsl
and
mov
je
add
rcll
pop
adc
sbb
movsb
sub
jae
bound
push
and
sub
sbb
out
pusha
xchg
mov
outsb
inc
scas
push
fwait
dec
add
inc
ret
add
sub
mov
inc
mov
int
inc
adc
push
push
inc
jecxz
push
ja
aam
arpl
dec
add
adc
arpl
mov
daa
xlat
xor
xchg
xor
add
xchg
lahf
xchg
xor
rcrb
add
lea
inc
arpl
adc
add
lea
arpl
add
arpl
dec
sti
lds
inc
lahf
arpl
pop
dec
arpl
xor
and
movups
or
arpl
inc
arpl
push
lods
inc
inc
mov
push
cmp
xchg
mov
ja
mov
mov
outsl
xor
pop
int3
xor
daa
pop
adc
sarl
cltd
push
pop
inc
xchg
movsb
xchg
cmp
adc
jle
pushf
cwtl
xchg
repz
pause
mov
iret
push
inc
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
sbb
jl
adc
xchg
hlt
xchg
in
push
sahf
out
fsubp
push
enter
sahf
out
lods
test
mov
dec
outsl
je
insb
push
sub
jns
fs
push
dec
mov
fdivrp
sahf
out
and
add
in
xchg
push
enter
jns
mov
jns
out
nop
mov
iret
repz
pop
inc
cmp
lahf
out
and
adc
lock
loopne
cmp
repz
mov
leave
cmp
insb
pop
outsl
mov
adcb
and
shll
test
inc
xchg
lock
int
popf
mov
neg
mov
arpl
xor
or
add
repnz
add
pop
pop
mov
jbe
pop
clc
mov
neg
cmpsb
jg
cld
pop
enter
lock
jbe
outsb
stos
lcall
xchg
test
or
stos
inc
aas
outsb
sbb
inc
fistpll
xchg
adc
lods
xorl
and
add
xor
xor
push
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
jecxz
cmp
fwait
xor
adc
pop
ss
nop
ss
fcmovb
filds
int
ljmp
or
aaa
lcall
aas
mov
push
cmp
cmp
ja
xchg
or
mov
lret
cmp
cmp
aaa
fwait
clc
fidivrs
and
cmp
jecxz
jmp
jnp
cmpl
adc
xor
cmp
cmp
fisttps
ljmp
enter
aad
fdivr
decl
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
mov
push
data16
jbe
jnp
push
enter
aas
xchg
popf
aas
movsb
aas
mov
sarl
div
dec
cld
pop
jg
add
jl
xchg
cmpsb
mov
xor
mov
xor
arpl
inc
xor
mov
mov
ja
clc
pushf
xor
xor
jno
mov
scas
cmp
xchg
mov
cmp
xor
inc
rolb
mov
sbb
dec
lcall
sub
xor
xor
xor
xor
mov
call
xor
xor
xor
xor
dec
mov
nop
icebp
jg
ss
mov
ss
pushl
sbb
xchg
mov
arpl
push
add
sub
das
cmp
sbb
mov
add
pop
cmp
add
adc
mov
mov
cmp
cmp
cmp
cmp
cmp
jecxz
sbb
pop
cmp
sbb
outsl
cmp
loopne
jno
pop
xor
inc
fiadds
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
sar
subb
jle
test
call
call
push
mov
iret
cmp
cld
cmp
push
ds
ds
mov
sbb
or
xor
xor
xor
xor
clc
xchg
test
xchg
xor
push
xor
es
aaa
xor
xor
xor
xor
xor
inc
inc
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
xor
loope
ss
ss
or
mov
clc
ss
ss
aaa
or
sbb
mov
push
xor
aaa
addr16
add
or
adc
jle
andb
cmp
sbb
adc
pop
dec
xor
cmp
dec
sarl
fadds
in
jmp
repz
cmp
adc
sbb
and
es
cmp
cmp
ljmp
popa
xor
push
cmp
jns
jle
xchg
mov
popa
jl
mov
cmp
fcmovb
cmp
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
xchg
xor
mov
xor
aam
ds
pop
shrl
inc
xor
stos
dec
aas
outsb
inc
orl
aas
ret
aas
iret
dec
faddl
sbb
into
xor
adc
push
jp
xor
xor
jmp
ljmp
xor
xor
in
pop
xor
xor
popa
cld
ja
push
or
cmp
insb
mov
fwait
mov
ret
xor
xor
adc
push
icebp
push
jg
ss
ss
arpl
stos
add
ss
ss
mov
nop
xor
aaa
jne
jle
jl
adc
or
sbb
sub
mov
cmp
cmp
cmp
lcall
sarl
fnstcw
jmp
cmp
cmp
cmp
xor
mov
push
mov
outsb
push
icebp
pop
ret
fnstsw
fildll
mov
out
ds
or
cmp
loopne
pop
lret
mov
js
adc
fbstp
divb
data16
cld
call
cs
xor
xor
xor
xor
xchg
mov
sbb
xor
xor
xor
pushl
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
adc
adc
push
cmpsb
inc
and
xor
mov
int
inc
cmp
rol
cmp
lcall
divb
cmp
sbb
pop
bound
push
imul
int
xor
mov
lret
aas
lods
cmp
lock
sbb
mov
mov
cld
xor
jno
mov
clc
call
cli
cmp
cmp
dec
cmp
pop
cmp
jge
mov
xor
push
jg
xor
xor
xor
xchg
negb
mov
pop
dec
es
xor
dec
add
lds
aaa
arpl
pop
pusha
out
jecxz
das
jnp
adc
sbb
mov
jne
push
and
xorb
and
pop
je
call
jl
xor
popa
push
bound
lods
push
or
int3
ret
roll
cmp
rolb
cmp
push
int3
sbb
xor
xchg
andb
jecxz
xchg
insb
jb
arpl
xchg
shl
jl
mov
cmpsb
test
mov
add
ret
scas
mov
mov
call
mov
or
or
adc
adc
sbb
sbb
subb
jbe
xor
mov
sbb
pop
fst
adc
xor
push
pusha
xor
xor
test
out
es
loopne
dec
lret
mov
mov
nop
xor
cmp
pop
cli
xchg
mov
add
les
sarb
fdivs
fcomps
adc
xor
ss
loope
or
xlat
jbe
xor
push
ret
mov
cmp
push
xor
divb
cmp
outsb
jo
bound
sarb
loopne
mov
mov
mov
add
stos
fmull
icebp
jg
out
cwtl
out
shl
ljmp
sub
xor
das
mov
xor
xor
xor
xor
hlt
dec
adc
xor
xor
ficoml
pop
xor
xorb
xchg
sbb
push
ret
arpl
jb
xor
incl
cs
call
xor
enter
xor
inc
add
loop
std
cmp
push
adc
sub
xor
cs
hlt
das
aam
xor
xor
xor
xor
push
xor
pop
xor
pop
decl
push
mov
xor
xor
xor
xor
mov
mov
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
add
pop
into
shlb
int3
ficompl
push
or
mov
xor
movb
cmp
stos
sbb
fistpl
mov
push
sahf
sarb
subb
pop
jmp
push
xchg
jp
fdivr
add
inc
jge
xchg
xchg
sbb
pusha
mov
add
add
add
add
or
pop
pop
push
or
or
or
or
insl
sti
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
mov
clc
inc
add
add
adc
inc
xchg
add
sti
add
or
pop
inc
mov
jmp
add
jge
lcall
sub
add
push
adc
pop
and
xor
and
jmp
inc
mov
adc
xor
cmpb
inc
jb
xor
and
or
pop
sub
shlb
mov
or
jns
or
imul
adc
add
into
add
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
das
adc
or
mov
or
xor
adc
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
push
adc
sub
dec
jo
or
mov
add
add
lds
cld
cli
and
mov
ffreep
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
mov
pop
mov
stc
or
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
ja
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
lcall
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
roll
stc
xor
hlt
and
xchg
jmp
sbb
pop
hlt
xchg
add
dec
mov
andb
dec
in
push
mov
sub
pop
mov
jl
rorl
adc
sub
push
add
stc
loope
mov
jbe
sti
clc
sar
andl
aas
icebp
testb
mov
jmp
inc
gs
sub
jno
pop
sub
jg
scas
cld
jg
decl
cli
push
inc
sbb
paddb
inc
mov
dec
call
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
sti
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
in
testb
adc
loope
fisttpll
out
aas
std
cli
push
ljmp
int
push
idivl
cmp
sub
inc
scas
inc
mov
cmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
dec
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fidivrl
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
call
mov
push
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
dec
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
mov
nop
enter
ret
incl
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
out
in
jmp
jno
fidivrl
lock
adc
pop
cld
addl
adc
imulb
and
lahf
fmull
enter
jecxz
paddd
scas
sub
in
pop
mov
sub
mov
dec
fucomi
pop
decl
das
aas
mov
or
cld
inc
or
add
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
inc
ljmp
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
adc
neg
lods
loopne
and
clc
xorl
push
imul
dec
lock
std
push
in
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
and
bound
mov
xchg
lahf
or
push
rcrl
sti
or
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
fwait
call
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
xchg
jg
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
ljmp
cld
lds
fidivrl
jg
stos
pop
repz
jg
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
aas
mov
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
std
cmpsl
cmp
aas
test
bound
pop
outsl
xchg
inc
test
in
jge
decl
lock
lcall
fsubs
shl
dec
cs
dec
adc
lahf
mov
or
out
lcall
jg
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
sbb
lock
pop
jle
shr
out
sbb
aaa
clc
push
std
mov
and
or
out
sub
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
ss
mov
in
sbb
xchg
imul
loopne
adc
sbb
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
les
push
inc
xchg
scas
or
or
add
push
sti
pop
inc
add
inc
cs
push
nop
mov
pop
insl
inc
popf
test
and
add
test
scas
jbe
dec
adcl
or
push
or
test
inc
xchg
lcall
ss
sbb
lcall
xchg
movsl
ds
jae
pop
or
movsl
lds
enter
cmp
into
mov
jns
xchg
out
ljmp
bound
adc
xlat
cs
fwait
sub
inc
mov
mov
mov
outsb
xchg
jge
adc
insb
call
orb
xor
pop
xor
adc
mov
imul
cwtl
cmp
ljmp
clc
or
adc
xor
out
test
rolb
out
fisubs
inc
push
popa
sbb
ljmp
fcmovbe
test
inc
int
lahf
mov
mov
cmp
ret
jo
xlat
movsl
lock
and
in
and
out
xchg
cmp
sub
fdivrl
xchg
test
mov
push
out
pop
pushl
in
lahf
sbb
mov
jle
pop
mov
das
adc
enter
xor
mov
jbe
incl
leave
jp
sbb
adc
lods
movsl
xchg
mov
cli
out
jne
add
outsl
and
icebp
das
cmp
ljmp
push
out
in
inc
or
les
mov
mov
jno
dec
push
cmp
or
xchg
inc
jno
roll
jle
cmp
das
clc
lcall
jmp
sub
mov
add
lea
mov
test
ljmp
xor
add
loope
int3
mov
xor
negb
and
mov
ljmp
and
xchg
mov
xchg
int3
stos
jmp
mov
mov
inc
out
rcrb
cmp
adc
pop
xchg
mov
fmull
fldenv
ljmp
cwtl
mov
mov
ret
fimull
nop
push
mov
mov
jmp
jb
aas
pop
and
out
cmp
ficoml
test
fisubrl
ljmp
xchg
insl
push
fdivl
jp
adc
test
pop
pop
test
jmp
sub
push
bound
or
sbbl
mov
enter
cmp
dec
and
and
mov
sub
fistpl
sbb
sub
lcall
decl
cmp
pop
mov
shlb
cmp
cmp
sub
outsl
test
out
jmp
leave
mov
pop
adc
into
mov
adc
add
sub
negl
jle
inc
sti
jle
push
inc
dec
aad
cmp
and
xchg
cmpsb
das
mov
fs
std
mov
jmp
mov
call
mov
xchg
push
mov
pop
inc
sub
movsb
in
pusha
mov
fwait
scas
push
in
call
cmp
cmp
mov
mov
lret
jmp
popa
xorl
xchg
fadds
dec
mov
add
popa
adc
cmpsl
cmpsl
cs
lock
call
xchg
popf
xchg
mov
ja
dec
mov
in
mulb
mov
mov
push
inc
dec
push
xchg
fsubp
mov
xchg
cmc
inc
lea
sbb
dec
andb
pushl
lds
sub
jmp
lret
mov
fcmovnbe
lock
lcall
dec
add
cmp
sbb
or
aas
cmp
in
outsb
mov
incl
pop
ret
jnp
hlt
dec
aaa
arpl
xchg
inc
sbb
push
sub
aaa
pop
adc
fidivl
xchg
or
bound
lods
adc
dec
pop
and
push
dec
cmp
rcrl
push
xchg
sub
and
fcmovnbe
pushl
dec
xchg
dec
xchg
rol
mov
mov
sbb
push
je
push
or
test
pop
jg
push
std
dec
mov
loopne
ret
sahf
in
mov
daa
out
and
jp
inc
lods
cmp
push
jno
fnsave
push
dec
xor
das
ljmp
xchg
jmp
std
fidivs
xchg
jmp
sub
out
lret
dec
xor
mov
ja
cmpsl
jl
dec
fldl
dec
push
scas
es
cmp
push
inc
pushl
std
jg
outsl
sub
push
lds
cmc
pop
data16
jne
leave
out
cli
idiv
jo
in
loopne
insb
push
mov
push
sub
sbb
jg
jecxz
mov
cmp
notl
arpl
push
movsb
dec
fistpll
push
test
lcall
incb
shll
dec
mov
push
or
leave
add
pop
out
out
mov
adc
call
pop
das
add
sub
cmp
jns
mov
add
sub
pushl
insl
fs
jp
mov
xor
insb
sub
call
cmp
jg
xor
aaa
lcall
pop
adc
mov
sbb
mov
jmp
mov
cmp
into
int
add
decl
shlb
test
rcrb
leave
mov
cltd
cs
jecxz
es
adc
decl
push
dec
mov
sub
cmpsl
imul
xlat
fisttps
mov
repnz
lcall
sbb
andb
add
pop
cmp
push
movsb
scas
mov
or
jmp
loopne
and
inc
dec
cs
xchg
jb
cmpsl
push
out
dec
dec
out
push
popa
test
imul
idiv
xchg
into
jns
arpl
jmp
jae
stos
out
in
jle
adc
cs
ds
fucomip
gs
mov
add
pusha
insb
jae
outsb
jae
subl
popa
jnp
fcomip
lcall
gs
movsl
ja
fstpt
stos
jecxz
mov
mov
loope
and
decl
shll
sub
cmp
sbb
or
lret
xchg
rcrb
popa
and
lret
jecxz
pop
into
push
push
movsb
incl
mov
stos
inc
mov
dec
les
sbb
cmp
jp
aas
jnp
imul
mov
cs
popa
ss
xor
lahf
xchg
leave
push
cmp
mov
stos
fmuls
sbb
sbbb
ret
and
mov
adc
bound
shrb
lea
addr16
inc
cmp
adc
sbb
pushl
ljmp
int3
cltd
and
adcl
mov
add
repnz
pushl
push
and
outsl
jne
xor
in
gs
jl
outsl
call
scas
popf
test
or
ret
push
aaa
imul
adcb
xchg
sar
or
mov
jg
call
mov
push
test
inc
pop
insl
pop
mov
adc
rorb
in
sbb
clc
sub
incl
fs
mov
xchg
mov
jb
xchg
repz
add
rorl
cmpsb
lahf
inc
stc
pop
mov
ljmp
lahf
mov
lds
mov
xchg
jmp
xchg
cltd
stos
loopne
mov
pop
mov
incl
adc
rcrl
aam
mov
sahf
frstor
mov
cli
lcall
jns
mov
push
mov
and
icebp
ret
aad
ljmp
mov
imul
loop
icebp
jae
xchg
out
add
imul
ljmp
ljmp
ret
cltd
jbe
repnz
xor
cmp
add
in
adc
jg
aaa
fcomps
cmpsl
shrb
das
pop
inc
xor
push
and
adc
sar
jmp
add
mov
mov
push
pop
fstpl
ljmp
push
lods
test
push
or
inc
mov
clc
xor
add
inc
std
call
clc
pop
mov
push
testb
fdivrs
cs
dec
out
popf
xor
mov
jle
cmpb
ffree
cmp
xor
inc
sbb
adc
mov
cmp
jge
jns
or
jmp
and
jae
cltd
sub
jno
stos
dec
fcmovu
push
pop
fs
mov
int3
pop
xchg
mov
lcall
lret
push
loope
mov
push
out
stc
cmp
jnp
jp
sahf
cmpsb
adcb
stos
mov
fnstcw
popa
bound
loop
add
cmp
repz
les
imul
sti
sub
jg
daa
pop
jg
add
or
loope
fsubs
data16
incl
mov
in
int3
std
cld
pop
cmp
xchg
xchg
mov
cmp
and
jp
pop
iret
call
loopne
cmpsl
addr16
fcoms
enter
cmp
das
scas
add
dec
push
pushl
in
test
repnz
in
test
and
adc
mov
ljmp
ljmp
jb
pop
sub
shrl
mov
gs
data16
cli
aas
sub
fcoml
add
dec
int3
jno
pushw
cmpsb
xchg
gs
es
mov
lds
or
mov
mov
push
adc
and
jns
arpl
nop
insb
roll
decl
sarl
jg
iret
aaa
aas
insl
movsb
xchg
repnz
inc
int
jg
mov
mov
sbb
lods
in
setg
sub
add
cmc
jmp
leave
decb
call
aam
outsb
insl
inc
mov
daa
test
fadds
sub
clc
pop
bnd
ljmp
fdivl
mov
push
movsb
push
mov
or
imul
mov
jp
and
ds
scas
mov
dec
adc
cmp
lcall
fimull
loopne
movsl
stos
test
popa
dec
fildl
xor
rclb
inc
lcall
jns
jp
xchg
pushf
fbld
adc
inc
addl
fs
pushl
mov
inc
mov
lret
cmp
mov
xchg
cld
jae
ljmp
jae
scas
jle
adc
insl
jp
mov
cmp
shrl
mov
out
pop
fwait
mov
fdivp
mov
push
das
jge
in
jne
or
dec
or
pop
insb
decl
jns
hlt
sbb
cs
or
das
int3
add
cmpsb
sbb
or
lcall
pop
xor
jmp
add
and
dec
repnz
mov
sbbb
sbb
ja
call
push
movsl
mov
push
push
bound
push
xchg
mov
mov
pushl
std
ljmp
loope
and
add
jno
outsb
jbe
mov
push
repnz
xchg
xchg
and
mov
call
outsl
add
or
in
sbb
sar
dec
sub
ret
mov
idiv
call
sahf
mov
dec
int
stos
xlat
jno
jge
int3
mov
nop
scas
cli
ljmp
or
push
adc
movsb
or
pop
and
pop
mov
dec
fcomip
decl
mov
mov
sbb
out
mov
test
inc
test
cltd
jne
push
mov
clc
ror
movsl
in
or
jb
inc
adc
pop
ret
mov
push
and
call
icebp
ss
mov
cmpsl
dec
insb
or
pop
dec
xor
mov
imul
xor
inc
cmp
mov
push
nop
ljmp
dec
cmp
mov
hlt
popa
mov
std
ljmp
bound
mov
mov
mov
fs
test
pop
loopne
aaa
push
and
inc
or
lods
dec
or
adc
aaa
std
adc
fs
inc
cmp
adc
xchg
or
jecxz
test
sar
incl
in
dec
popf
daa
icebp
aam
mov
mov
mov
lds
fistl
decl
les
outsl
in
and
lock
and
adc
mov
pop
mov
je
shrb
test
mov
rorb
popa
jecxz
roll
push
dec
pop
mov
jl
out
xchg
pushl
subb
pushf
mov
xor
lea
jg
repz
inc
adc
mov
adc
jmp
cmp
cmp
mulb
jp
xor
adc
scas
popa
lds
push
das
je
mov
and
and
inc
mov
lods
insb
sub
fs
mov
jmp
test
xor
lds
mov
out
adc
stc
and
and
jl
and
pushl
aaa
fistpl
push
or
sahf
inc
sbb
push
jle
in
stos
popf
lods
pop
xchg
jg
lods
shr
and
cld
mov
les
insb
ljmp
dec
inc
sub
push
lahf
into
ss
jg
into
fiadds
stos
and
or
mov
loopne
adc
inc
inc
jno
testb
or
mov
xchg
cmp
fisttpll
push
scas
sarl
cmpsb
in
push
decl
insb
mov
cltd
mov
fcomip
and
addb
mov
push
xor
incl
jne
xor
jbe
arpl
inc
ja
jg
cmpsl
je
sub
sarl
ljmp
pop
lods
test
and
test
mov
inc
stos
movsb
movsl
test
in
pop
push
lahf
dec
xchg
test
xchg
adc
pop
movsb
into
cmp
and
mov
add
call
imul
js
push
mov
pop
dec
sub
fwait
outsl
dec
mov
rcrl
xor
mov
pop
push
pushl
cld
jne
xchg
cmc
roll
lcall
lea
xchg
adc
sbb
incl
add
in
add
jmp
ret
mov
push
jo
aad
inc
and
test
jmp
aas
xchg
jecxz
sti
shll
popa
aad
into
outsl
movsl
xor
decl
pop
nop
dec
mov
mov
ljmp
sub
js
rorb
mov
popa
pop
pop
insl
and
cmpsl
mov
mov
popa
int
pop
fldcw
push
dec
dec
fcomip
adc
pop
or
scas
pop
push
lock
incl
mov
inc
jle
repnz
mov
data16
stos
in
mov
jb
mov
xchg
lcall
sub
out
fimuls
inc
pop
rol
je
orb
into
fs
jmp
jg
dec
or
shl
push
cltd
scas
pop
dec
push
inc
mov
pusha
lret
jne
sub
ljmp
and
xchg
outsl
sub
add
xchg
arpl
cmp
jmp
xchg
add
mov
mov
and
ret
xchg
jb
neg
jbe
call
ljmp
add
adc
andl
xlat
or
jb
mov
xchg
in
pop
ja
add
mov
xlat
pushf
fldt
pop
sarb
sahf
shll
pop
mov
stos
call
pushl
mov
mov
imul
es
xor
xchg
xlat
sub
pushl
xor
lock
outsb
mov
ja
dec
ss
jb
inc
int
icebp
repz
push
dec
scas
xchg
inc
mov
cmp
jecxz
and
fists
lods
js
cld
fs
fadds
shl
decl
sub
scas
pop
push
or
insb
inc
push
imul
xor
add
fadds
or
jb
iret
andb
cmc
insb
imul
mov
cli
aaa
push
decl
lock
jns
xchg
iret
cs
xor
push
in
pop
xor
ljmp
cli
jg
sbb
inc
icebp
cltd
xchg
mov
in
in
fidivrl
es
mov
jmp
xor
jnp
and
push
aaa
in
cmp
test
arpl
fsub
leave
mov
aam
mov
incl
inc
mov
cmp
or
in
push
xor
jl
iret
inc
xor
xchg
xor
adc
inc
push
aas
aam
pop
pushf
jl
xor
add
notb
rorl
xchg
push
aas
push
inc
dec
lret
cld
decl
popf
out
sbb
xor
shlb
and
xlat
cwtl
clc
call
mov
addb
arpl
cmp
pcmpgtw
test
jmp
mov
scas
dec
mov
lahf
movsl
push
jp
mov
jge
push
stos
shr
call
inc
adc
push
in
sub
push
lret
cmp
insl
loope
arpl
pop
jl
test
dec
mov
jmp
jae
ljmp
iret
leave
cmp
add
or
shl
mov
jno
sbb
out
dec
and
imul
outsl
add
dec
call
mov
jno
cmp
test
movsl
sar
or
jl
push
fcomi
nop
mov
dec
inc
jg
fucomp
push
repz
pop
sub
adc
mov
jle
inc
push
add
and
ljmp
xor
cmp
mov
ja
jne
xchg
loopne
mov
or
mov
imull
sbb
pusha
add
mov
pop
and
push
std
jmp
fnstenv
mov
int3
cmpsb
inc
mov
lret
inc
mov
mov
push
mov
mov
jge
sub
shr
inc
into
pop
out
mov
inc
jle
fcomip
jmp
dec
mov
mov
push
scas
cmp
sbb
pop
imul
rol
call
fsub
mov
bound
sub
sti
xor
jl
test
mov
push
fbstp
push
packssdw
inc
dec
stos
cs
jmp
mov
dec
pusha
sbbb
sysenter
adc
push
dec
seto
jmp
cmc
das
cmp
mov
sub
ja
aad
aam
sub
daa
dec
in
pushf
and
pushf
push
mov
ljmp
in
std
int
sbb
and
jge
addb
mov
jns
mov
push
aaa
int
jg
xchg
lret
pop
lods
das
jo
lret
out
shr
mov
gs
mov
call
sbb
outsl
gs
pop
xlat
stos
xor
xchg
fldenv
or
stos
mov
pop
mov
lret
add
jge
dec
mov
inc
xchg
adc
add
clc
test
cmpsl
lods
rolb
cwtl
mov
cld
inc
inc
in
nop
stos
push
fstpt
xor
imul
cmpsl
jno
mov
ljmp
lret
das
aam
xor
push
mov
lcall
xchg
sbb
cmp
cmp
clc
sub
pop
inc
js
sahf
xlat
jno
dec
sahf
dec
loopne
sbb
decl
inc
roll
out
mov
cmp
ljmp
cmp
lds
sti
fadd
dec
mov
xchg
iret
cmp
lret
neg
sub
sub
test
int
mov
decl
lock
fsubl
mov
push
mov
pop
mov
mov
cmp
aad
adc
ret
in
lahf
aam
cmp
pushl
jle
add
dec
scas
out
sbb
or
jge
les
adc
clc
incl
mov
mov
repnz
jg
dec
push
lock
clc
call
mov
cmp
rcrb
lahf
fidivrs
int3
dec
inc
fs
inc
jno
inc
and
ljmp
mov
cmpsb
test
ret
cmp
xchg
enter
xchg
call
ds
xor
icebp
jae
lret
call
mov
mov
orb
xchg
jmp
sub
aad
cmpb
scas
jb
sub
sbb
xchg
mov
rolb
dec
xor
add
out
dec
add
xor
xlat
dec
sub
je
aas
fidivrl
jl
incl
insb
push
jb
mov
rolb
add
cld
mov
or
mov
inc
lcall
aam
mov
push
rcll
jno
mov
ret
pop
xor
ljmp
mov
xor
inc
movsb
mov
mov
decl
mov
fmul
pushf
sub
imul
or
or
add
movsb
mov
fsubr
ja
stc
mov
mov
mov
cli
shll
addr16
stos
push
aas
fildl
lahf
jbe
movsl
lcall
cmp
fucom
jae
cmp
daa
and
xor
dec
cli
outsl
jl
pushf
mov
int3
loopne
and
clc
loope
scas
in
xchg
pop
mov
iret
out
mov
loopne
in
cli
mov
call
lock
push
mov
jmp
or
ret
dec
daa
iret
clc
cmp
pop
adc
and
cmp
push
or
repz
enter
pop
out
sbb
sti
xorl
in
xor
nop
dec
out
outsl
lcall
les
mov
push
jae
out
fwait
xor
mov
mov
jle
xchg
fsub
pop
mov
lahf
lcall
mov
call
push
adc
adc
mov
dec
push
add
adc
jbe
pop
decl
sbb
enter
or
xor
pop
mov
cmp
sbb
test
into
gs
mov
and
mov
push
dec
xchg
imul
lcall
jo
mov
jmp
mov
arpl
fdivr
mov
rcrb
jl
mov
mov
mov
cli
mov
orb
ljmp
cmp
ret
sbb
fbstp
dec
pop
mov
ret
sub
enter
movsl
jb
dec
outsb
mov
out
mov
mov
cmp
inc
psrlw
iret
cltd
jae
mov
out
cltd
cmp
mov
incl
dec
pop
inc
loope
fcmovbe
das
arpl
out
and
mov
test
dec
pushl
mov
adc
mov
pop
xor
pusha
inc
mov
call
pop
les
pcmpgtw
xchg
repnz
inc
test
decl
data16
test
pop
hlt
lcall
cltd
stc
iret
and
aad
cs
adc
fisttpl
fwait
outsl
cli
cli
cmpsl
dec
or
stos
push
dec
ret
xor
adc
cmp
fs
and
cmp
inc
mov
or
in
arpl
xchg
add
inc
pop
arpl
add
xchg
stos
jecxz
cmp
out
jle
and
pop
sub
faddl
out
xchg
xor
pusha
aam
sub
pushf
dec
subb
mov
cmc
xor
or
cmp
and
mov
cmp
test
fnstenv
mul
test
add
pop
and
and
xchg
out
jb
sbb
sub
lods
mov
fisttpl
inc
ret
and
sub
rclb
jo
imul
xorl
out
incl
xor
mov
lret
gs
mov
inc
jno
in
adc
dec
out
sarb
add
mov
mov
mov
shrl
jge
call
jo
fistpl
add
push
pop
xchg
test
mov
in
mov
inc
xchg
add
stc
repz
lret
jno
jge
stc
fsubl
dec
insl
lcall
imul
lahf
add
jg
xor
dec
sub
jle
and
bnd
incl
push
push
jne
shll
pop
shl
and
aaa
dec
mov
gs
lcall
mov
cmpl
xchg
mov
pop
sarb
push
mov
jmp
lds
push
scas
or
mov
cmp
insl
mov
lcall
sbb
lock
popl
psrld
xchg
mov
stc
in
movsl
mov
adc
iret
lcall
xor
mov
mov
leave
pop
ror
xchg
fdivrp
ljmp
test
fsubp
imul
in
jo
aam
mul
lock
ljmp
pushf
cltd
je
ds
push
test
shl
arpl
aas
lds
rolb
pushf
into
ret
or
mov
popa
stos
pcmpeqd
fbstp
pop
cwtl
jmp
fbstp
jecxz
data16
lcall
in
lret
mov
jle
imull
movsl
fmul
call
enter
dec
mov
sub
roll
mov
inc
inc
or
pop
mov
test
je
fs
mov
xor
xor
mov
shl
xor
pushl
inc
sbb
inc
jg
mov
jmp
adc
cmpxchg
jg
pop
es
mov
and
imull
mov
mov
ljmp
out
stos
fadds
ret
aad
fisttps
outsl
or
das
xchg
jg
jg
lcall
int3
in
dec
cmp
jp
movsb
mov
dec
sti
xor
mov
mov
lea
sbb
mov
push
and
fdivl
addr16
mov
xchg
cmp
rol
aaa
mov
sahf
jns
push
cmp
and
sub
call
mov
clc
lcall
sbb
mov
cltd
fscale
sbb
jg
decl
scas
jmp
jbe
adc
adc
mov
out
fstpl
icebp
adc
incl
sar
mov
sub
mov
jge
sbb
sahf
stc
int3
push
pop
mov
xchg
adc
scas
incl
jmp
and
adc
mov
xchg
jmp
mov
incl
lds
cmp
lods
cmpl
cwtl
test
adc
mov
cmpsb
loope
in
jne
leave
loop
cmp
add
xchg
dec
push
in
call
lock
imull
fxch
dec
into
xor
push
dec
call
mov
out
decl
mov
mov
mov
stos
push
and
inc
xchg
call
lds
cltd
mov
xorl
adc
adc
ds
out
stc
inc
shrl
or
sub
fcompl
push
add
adc
outsl
cwtl
pop
in
mov
loop
xchg
fsts
call
xor
cmp
incl
inc
jb
leavew
push
shll
ds
hlt
add
push
lcall
push
stos
xchg
mov
or
repnz
mulb
out
cwtl
add
cmp
leave
jl
mov
bound
cmp
and
scas
adc
adc
hlt
sbbb
pop
imul
cmp
ljmp
adc
nop
mov
mov
mov
xchg
cmp
dec
inc
aad
nop
outsb
movsl
sar
pushl
jl
stos
out
cs
les
stos
jnp
jae
psubusb
outsl
decl
xchg
add
scas
out
mov
lahf
enter
nop
rol
xchg
xchg
mov
jp
mov
dec
popf
mov
stos
mov
jp
sub
hlt
pop
cmp
sbb
insb
inc
decl
pop
imul
fisubl
rcrl
mov
cmp
lea
call
faddl
insl
adc
dec
push
mov
sub
mov
add
stc
stc
sbb
pop
bound
fs
push
jmp
dec
lcall
in
push
flds
pop
jns
pop
lds
inc
and
decl
dec
mov
or
push
jecxz
sbb
jns
mov
mov
incl
adc
int3
mov
repz
outsl
cli
mov
cmp
mov
je
xchg
movsl
pop
aas
push
or
loop
shrb
dec
fnstcw
cmpsl
inc
pop
sti
sbb
out
cmp
jbe
decl
subb
push
xchg
mov
inc
pop
lahf
sbb
fistpll
pop
dec
ds
pushl
stos
mov
ds
fidivl
orb
pop
xor
mov
xchg
shlb
fcomip
mov
hlt
mov
dec
add
stc
sbb
hlt
ficomps
insl
pushl
mov
js
mov
push
pop
jecxz
jae
sub
aaa
pop
out
pusha
rol
cmc
jmp
call
rorl
xor
outsl
mov
cmp
rolb
loop
or
jnp
push
icebp
loop
decl
sub
mov
out
mov
mov
mov
push
pop
das
cmpsb
xchg
ret
lret
mov
lcall
add
iret
cwtl
aas
jbe
mov
ss
push
dec
rcll
iret
mov
adc
leave
pop
sbb
mov
jg
jbe
into
faddp
scas
repz
jmp
ja
std
into
cmp
xor
sbb
outsl
sub
mov
lret
cmp
adc
dec
adc
insl
mov
pop
cmp
std
hlt
mov
and
xchg
int3
mov
mov
mov
push
aaa
les
sub
inc
cmp
ja
dec
push
sbbl
xor
test
or
dec
test
cmpsb
jg
call
sub
cmpsl
sbb
mov
outsb
jno
push
imul
xlat
mov
xchg
cmp
aas
xor
pop
dec
and
mov
cli
insb
pop
out
xchg
lcall
cmp
cltd
push
data16
xchg
jle
dec
jns
mov
cmp
push
mov
rcl
jnp
pop
cmc
lcall
pushf
mov
and
mov
enter
out
icebp
in
fcmovnu
in
pop
rcrl
sahf
push
shl
mov
loop
ret
pop
pop
add
mov
inc
push
fidivrs
pop
std
shrb
xchg
movsb
or
lahf
xor
push
push
xchg
lcall
mov
cmpsl
les
aaa
sbbl
lret
arpl
cmpsb
incl
dec
dec
mov
mov
push
cs
movsb
mov
dec
add
sub
cmp
fistpl
jmp
jbe
mov
jmp
int
push
shl
mov
sbb
je
pop
cs
sbb
push
mov
decl
jae
jmp
adc
pop
or
jno
fwait
mov
fnstenv
jne
mov
jmp
mov
in
sub
ss
out
imul
sub
call
cli
adc
jns
in
mov
mov
add
out
ret
and
jns
adc
lock
jmp
mov
loopne
and
in
pop
mov
cs
data16
jg
jecxz
ljmp
ljmp
xor
or
popa
and
inc
mov
or
cld
stos
cmpsb
cltd
cwtl
xor
adc
inc
sti
push
push
cmpsl
das
sbb
fcomip
decl
mov
or
cmp
sbbb
hlt
in
fcomip
add
dec
inc
and
insb
jmp
xchg
jmp
adc
ds
pushl
pop
jl
xor
inc
push
mov
pop
push
or
push
push
loope
mov
call
adc
loop
mov
xchg
xor
cmp
mov
cmp
daa
pushf
lcall
jno
outsl
mov
into
xchg
push
xor
leave
push
test
clc
outsb
push
das
sbb
ljmp
ja
mov
int3
and
mov
mov
pop
aam
cld
xchg
scas
cwtl
decl
pusha
push
lock
rcrl
fs
int3
ret
sub
and
ljmp
push
rclb
xchg
sub
and
icebp
mov
sbb
roll
jmp
xor
jbe
test
ret
popf
icebp
stc
loope
sbb
mov
mov
movsl
lret
loope
pop
or
pop
cmp
pusha
push
cmpsl
cmp
inc
jns
jne
imull
enter
and
pushl
out
pop
popf
ja
xchg
cltd
and
outsb
scas
push
adcb
test
mov
enter
imul
xchg
dec
notl
jo
xchg
jno
shll
lcall
into
xor
jmp
sbb
push
cwtl
js
xchg
inc
pushl
sbb
add
test
out
inc
inc
dec
fwait
mov
pop
ljmp
lea
jmp
mov
lds
push
cmpsl
jge
cli
mov
cmp
std
inc
hlt
in
enter
lods
incl
jle
fidivl
mov
cli
adc
and
ljmp
add
adc
stos
in
xchg
mov
mov
fsincos
lahf
mov
call
loopne
push
xor
push
pushf
mov
xchg
fstps
jecxz
lcall
je
jb
mov
iret
leave
es
pop
adcl
push
std
inc
jmp
nop
ljmp
jmp
fwait
stc
push
pop
mov
fsubl
xor
lcall
shlb
jmp
shl
dec
push
sti
popa
dec
pusha
xor
movaps
and
lret
cmpsb
xlat
rorl
clc
ljmp
adc
add
out
xchg
dec
xorl
push
call
les
fisubrs
das
push
dec
sub
pushf
addr16
sbb
stos
les
inc
adc
call
movsl
pop
shrl
daa
jle
inc
and
pusha
movsl
ss
call
sbb
scas
orb
or
push
inc
jl
sbb
and
dec
xor
dec
push
push
std
pop
movsl
mov
xor
sub
mov
fldenv
int
aaa
std
xor
jg
pushl
and
jns
mov
inc
call
xor
mov
push
cs
inc
ret
ljmp
jb
dec
add
lea
mov
into
jle
cmpsl
sti
cmp
lret
out
lods
outsl
xchg
das
sar
jmp
int
lcall
xchg
mov
add
movsl
sbb
ljmp
stos
or
mov
clc
xor
iret
lret
sbb
fs
add
mov
lcall
jb
jmp
rcrl
xor
mov
push
outsl
imul
repnz
ljmp
add
fs
out
sub
sarb
lcall
mov
xorl
jmp
decl
nop
inc
ret
insb
or
aaa
mov
ficoml
pop
movsb
sub
data16
test
add
call
clc
inc
cmp
xchg
push
call
enter
and
jecxz
mov
decl
sub
rcll
out
push
adc
lock
fsubrp
mov
lods
mov
clc
ljmp
cli
dec
or
repnz
das
cli
sbb
movsb
cwtl
pushf
out
mov
jle
shr
sar
pushl
fucomi
les
sub
sar
inc
mov
fdivp
filds
push
xorl
popa
decl
loope
xchg
or
pop
add
int3
mov
xchg
negb
idiv
decl
std
ljmp
jnp
in
adc
xor
cmc
test
mov
incl
das
aad
lret
call
adc
xchg
cli
xorl
fcompl
loope
sbb
test
decl
repnz
xor
xchg
sub
out
hlt
add
pop
mov
xchg
addr16
decl
lock
mov
push
and
insl
jmp
push
sets
jl
std
in
inc
inc
xor
adcl
pop
popa
pop
inc
jp
fs
decl
lock
in
xchg
or
and
imul
mov
adc
decl
pop
rorb
ds
and
cmc
iret
lods
rcl
mov
and
sbb
push
and
mov
add
arpl
adc
rcr
insb
mov
pop
inc
fdivs
mov
test
ljmp
mov
mov
push
scas
fwait
mov
sarb
mov
pop
cmpsl
and
jnp
sbb
sub
loopne
push
incl
and
jnp
loop
cmp
pop
lret
inc
push
cs
test
mov
xor
call
inc
pop
mov
dec
and
xchg
jp
ljmp
sbb
mov
sub
fldcw
loope
xchg
mov
jns
mov
adc
mov
add
mov
add
dec
pop
xchg
pushl
sbb
enter
mov
in
subl
fs
fcomip
decl
push
adc
das
shlb
dec
ja
clc
stc
test
or
and
xchg
dec
adc
xor
stos
cmpxchg
sbb
mov
ja
lcall
mov
or
es
cs
psubsw
dec
adc
jecxz
into
pop
lods
insb
lock
in
in
daa
pop
mov
mov
jge
mov
sbb
int
xchg
iret
pop
inc
insl
addr16
decl
sub
and
je
cmpsb
or
lods
cmpsl
mov
outsl
clc
push
and
ljmp
dec
lods
ret
fucom
enter
dec
jo
mov
lahf
xor
jns
rclb
mov
incl
lods
test
mov
add
mov
movsl
movsb
test
hlt
lea
xor
test
ljmp
ret
push
inc
cmp
les
push
add
sub
cmpsl
jnp
leave
and
add
hlt
ljmp
mov
mov
mov
push
sbb
ljmp
filds
es
jmp
xchg
dec
shll
popf
aas
lfs
mov
iret
lcall
and
sub
push
mov
adc
lds
fisubs
stos
out
nop
fcomip
call
jg
clc
es
sub
mov
enter
lods
lret
pushl
cld
mov
in
in
rol
ret
mov
gs
dec
sub
ret
call
add
addr16
leave
xchg
cwtl
push
jecxz
fildll
ja
jp
int3
insl
dec
or
jmp
cwtl
xor
ljmp
jp
xor
mov
pop
sub
aam
cmp
sbb
adc
push
push
aam
and
ret
jle
push
sahf
push
sahf
arpl
push
shl
adc
inc
pop
cwtl
or
pop
loopne
or
bound
out
mov
lea
out
sub
aas
mov
or
hlt
aaa
es
mov
loope
decl
scas
mov
aas
in
xchg
pop
clc
fnstcw
cmpsb
jge
mov
loopne
push
mov
data16
fwait
mov
out
jne
mov
mov
insb
pop
insl
pusha
sbb
mov
fdivs
xor
shr
negl
lcall
jo
repnz
mov
dec
pop
mov
sbb
dec
xlat
rcr
dec
pop
dec
sub
jae
ss
es
sub
jns
call
std
lcall
loop
push
xchg
scas
push
rorb
outsb
fbstp
and
or
add
popf
or
jne
push
clc
dec
movsl
add
out
mov
xchg
mov
cmp
push
sub
push
jp
test
jmp
push
adc
jmp
test
incl
xchg
add
cli
ljmp
and
mov
nop
dec
and
inc
jno
pushl
or
enter
int3
neg
stc
jle
inc
ret
mov
decl
xlat
pushl
pop
repz
rorb
jp
or
mov
orb
outsl
aam
xor
std
decl
ret
ret
stos
push
jmp
fldcw
or
popf
aad
pushl
call
mov
inc
push
faddl
arpl
jp
pop
dec
in
cld
mov
fsubr
or
mov
sar
scas
ret
popa
js
fwait
mov
xchg
push
jge
call
in
nop
out
jmp
push
push
cwtl
add
xor
xor
jmp
sub
fbstp
out
insb
pop
les
mov
iret
cmpl
in
out
and
lock
ds
movsb
lock
fistpll
int
mov
jg
jns
mov
and
wrmsr
in
cwtl
imul
or
decl
out
mov
cmpsb
mov
data16
adc
shlb
jbe
dec
pop
mov
std
mov
gs
call
sbb
jg
hlt
cmp
sbb
ja
sub
jg
push
or
or
insb
sub
cmp
icebp
sbb
rcll
xor
lds
inc
imul
pop
mov
lcall
aaa
sbb
call
loope
push
push
leave
insl
cmp
out
roll
pop
insb
xchg
and
je
mov
adc
push
aad
fcomip
and
jg
adc
dec
mov
xor
sub
xorb
js
or
aas
xchg
push
adc
rolb
push
mov
push
js
mov
call
inc
bound
stc
inc
add
jecxz
cmp
and
mov
int3
xchg
shll
xchg
fwait
ljmp
push
jae
pushf
mov
outsl
xchg
addr16
jae
push
aas
hlt
insb
ret
cmpsb
shll
incl
cld
lods
or
pushf
pusha
in
in
jmp
jne
push
hlt
cld
lret
dec
adc
xchg
jmp
jno
shrl
js
fistl
inc
ljmp
in
int
andl
pushl
out
mov
lock
popa
cmp
stos
jl
mov
jno
pushl
sbb
enter
rcrl
cmpsb
aad
aas
imul
or
adc
or
jmp
pushf
jp
cmp
daa
push
and
cwtl
and
pop
push
xchg
sbb
lret
push
ficompl
ljmp
scas
repnz
inc
cwtl
adc
or
lcall
or
ljmp
and
add
cmpb
out
mov
in
stos
nop
je
cmp
sub
fcos
pop
cld
decl
stos
mov
jbe
cmp
out
inc
sbb
lds
test
ljmp
jle
sbb
xchg
or
push
hlt
and
adc
sbb
mov
lcall
lret
fdivrs
add
dec
scas
or
outsb
sub
push
enter
cmp
xchg
and
fwait
mov
xchg
shrl
mov
push
pop
fidivrs
inc
and
pushl
lret
inc
cmpsb
pop
sub
fxch
mov
xor
mov
std
push
rolb
sbb
leave
inc
lret
fs
pop
fld
or
pop
hlt
jmp
push
in
mov
shr
sti
add
or
ss
fldenv
jne
lea
dec
data16
lods
xor
fcompl
clc
cmp
push
sub
mov
cmp
mov
jbe
fcoms
fists
jp
dec
push
add
inc
nop
fstpt
dec
iret
ljmp
mov
aas
movsl
mov
loop,pt
test
int
sbb
mov
call
iret
aaa
cld
mov
test
inc
or
movsb
dec
xchg
lret
pop
pop
loopne
std
fdivl
xchg
test
lcall
fstps
jmp
mov
add
lods
out
sub
stc
aam
and
incl
sbb
pusha
xlat
mov
adc
in
js
add
jmp
mov
cmp
jo
mov
outsl
shll
mov
out
jb
test
sbb
pop
shl
push
and
pushl
imul
fisubs
ds
pop
sbb
and
cli
jae
stos
add
adc
or
insb
insb
inc
ljmp
ja
adcl
jmp
jmp
inc
cmpb
cmp
test
push
imul
add
loopne
incl
das
sbb
iret
pop
es
jmp
addr16
jno
loope
jg
jmp
mov
jl
nop
mov
adc
pop
hlt
andb
dec
or
popa
decl
shlb
mov
adc
cmp
movsb
jns
movq
sub
ja
rcrb
cli
pop
fmulp
mov
pop
notl
pop
xchg
ljmp
xchg
fsub
adc
loopne
scas
roll
xchg
cmpsb
ret
insb
idiv
lcall
loopne
dec
mov
es
fcoml
xchg
adc
cmpsb
xchg
lcall
popf
fcomip
lcall
adc
mov
scas
jno
mov
cmp
jl
pop
stc
pop
jp
ljmp
loop
jp
pop
pop
ret
scas
add
stos
xchg
sbb
adc
adc
incl
bound
loopne
mov
popa
mov
pop
cmpsl
push
or
imul
mov
cmp
lds
ljmp
mov
dec
insb
nop
dec
gs
sub
mov
ficoml
push
jecxz
sbb
add
xor
pop
flds
mov
lcall
loope
jmp
lods
inc
xchg
in
xor
cld
test
shl
xor
jg
lock
pop
cmpsb
mov
out
sarb
xchg
xchg
in
ja
dec
mov
ljmp
movsl
xchg
imul
inc
stc
inc
or
mov
push
pop
pushl
outsb
mov
mov
jg
sti
mov
sbb
push
pushf
jmp
push
xor
ja
cmp
push
mov
imul
shl
aad
pop
add
incl
cs
mov
ds
ret
mov
in
jae
mov
fstl
idivl
ljmp
mov
jnp
pop
cs
loop
lock
and
add
jb
or
inc
dec
fbstp
push
cwtl
mov
xlat
cmpsb
inc
leave
mov
lds
cs
cmpsb
mov
mov
push
jno
sar
jns
jae
leave
stos
cmpsb
pop
dec
test
dec
and
mov
jecxz
xchg
lcall
cmp
sbb
fs
dec
xchg
or
jp
push
imul
mov
cwtl
dec
xor
call
xlat
lahf
iret
shl
fwait
jno
mov
lds
pusha
xchg
adc
mov
cmp
dec
mov
roll
in
cmp
push
jae
fcomip
pushl
lea
xchg
lret
pop
mov
neg
push
call
cmp
call
into
int3
pop
into
gs
in
test
lahf
pop
pop
rcrb
sub
fcomps
xchg
inc
js
mov
loopne
pushl
int3
data16
xor
out
rolb
cwtl
ss
stos
or
push
mov
lret
adc
addb
inc
rcll
in
ja
lcall
nop
sarb
sahf
sub
sub
jno
dec
mov
and
mov
jmp
sub
pop
fldcw
mov
push
dec
push
sbb
mov
stos
lea
clflush
xor
iret
decl
mov
lret
add
sbb
out
push
or
xor
or
or
add
pushl
loope
and
pop
inc
push
or
add
adc
data16
jg
sbb
pop
cs
jb
ret
popf
pop
enter
inc
cmp
daa
push
cld
add
jmp
push
fs
lret
push
pop
repz
aam
sub
out
lahf
fs
and
add
incl
jae
sub
jae
pushf
push
cld
shll
out
in
cmpsl
pop
push
andl
fcomip
incl
test
push
xor
add
adc
in
sub
sub
fcomip
popf
sbb
ja
jbe
pop
mov
push
sbb
jmp
incl
pop
dec
aas
push
js
mov
pop
add
les
xor
mov
dec
ret
call
call
loop
mov
add
pop
and
fmull
fcoml
cmpsb
xchg
notl
push
std
push
inc
call
dec
pop
sbb
movsb
mov
jg
jmp
inc
dec
stos
and
add
arpl
insl
int
and
adc
adc
jmp
imul
movsl
jg
xchg
in
mov
andb
ror
mov
pop
lret
cmp
add
jnp
lcall
ds
jp
add
sub
ja
nop
dec
jmp
sbb
faddl
and
lock
gs
aam
out
push
pop
mov
outsb
jl
or
pop
and
pop
mov
mov
shl
jmp
cmp
int3
xchg
add
sbb
xchg
and
add
loope
sub
mov
call
inc
cs
cmp
rcll
mov
sbb
jne,pt
cli
mov
mov
bnd
call
mov
xchg
pusha
mov
rorl
fcomps
data16
mov
xlat
mov
push
push
imul
scas
mov
incl
xchg
aas
push
xchg
incl
push
movsb
data16
push
adcl
imul
jbe
imul
and
pop
sbb
inc
mov
stos
mov
pop
dec
dec
xor
pop
lods
sarb
push
lahf
leave
dec
movsl
mov
pextrw
mov
sbb
dec
iret
xor
decl
xchg
rolb
js
inc
nop
int3
cmp
sti
leave
adc
negl
ds
mov
mov
or
leave
mov
call
dec
pop
xchg
icebp
sub
sbb
mov
adc
cmpsl
or
jmp
mov
sbb
sub
in
xor
incl
jno
outsb
enter
inc
push
sti
das
xor
pop
arpl
ljmp
call
aam
in
inc
data16
push
pop
pop
mov
imul
sub
pop
loopne
into
xchg
or
mov
jmp
sub
and
arpl
inc
mov
push
adc
hlt
sbb
adc
add
decl
xor
add
fsubr
jbe,pt
arpl
adc
pushl
xchg
adc
jns
fsub
add
or
lcall
pop
mov
pop
xlat
es
or
mov
sbb
push
dec
fwait
clc
lcall
mov
add
add
icebp
incl
adc
sahf
sub
out
je
xor
sub
fiaddl
adc
push
jnp
cmp
inc
mov
ret
outsl
clc
ljmp
orb
cld
out
inc
daa
inc
out
cmp
stos
fwait
mov
sbb
push
in
mov
cmp
or
ret
and
addl
incl
xor
mov
fcompl
xor
xchg
popf
rolb
lcall
cmp
sub
mov
int3
jecxz
sub
shrb
adc
out
push
or
cltd
incl
into
out
mov
stos
inc
lds
dec
jbe
mov
pop
aam
shlb
popf
popa
fs
jg
lcall
rol
inc
adc
fcoml
xor
dec
xchg
mov
mov
fsts
push
or
xchg
mov
add
xor
mov
mov
and
sub
out
ret
repz
shr
cmpsb
es
mov
rcl
loop
or
out
adc
incb
cwtl
in
mov
pop
pusha
sbb
clc
enter
in
push
xorb
lcall
dec
push
mov
inc
lahf
inc
jl
movsl
jb
sahf
pushf
rclb
stos
ret
insb
dec
sub
ret
call
out
xor
jnp
adc
cld
adc
inc
push
sbb
jg
test
orb
dec
mov
enter
pop
pop
push
cmpb
jo
addb
insl
lods
pop
aas
loopne
pop
fdivl
inc
lahf
xchg
mov
stos
imul
icebp
xorl
mov
pusha
data16
out
inc
adc
in
es
lods
add
xchg
rcrl
ret
ss
fwait
lcall
inc
notb
push
filds
push
sub
outsb
cmp
pushl
in
mul
pop
push
pop
cwtl
shlb
and
jmp
clc
push
dec
xor
sbb
aas
mov
and
or
incl
push
mov
xchg
ficomps
fcomps
push
mov
sbb
xchg
inc
dec
push
sub
cmp
push
addb
clc
adc
jne
jo
fwait
fs
daa
cli
adc
imul
pushf
mov
loope
icebp
xor
push
sub
leave
jl
pop
arpl
sbb
mov
jecxz
dec
jge
mov
pop
fnstsw
test
in
xchg
call
and
test
cmp
add
nop
push
cwtl
mov
jmp
add
cli
lock
ljmp
hlt
std
arpl
push
icebp
dec
aas
sub
jmp
aaa
gs
mov
decl
pop
roll
push
mov
jmp
fldcw
add
fcoml
add
mov
or
mov
xchg
enter
sub
cs
pop
ds
int3
and
inc
lods
jmp
inc
fwait
scas
pop
or
ret
mov
sub
jl
movsl
or
stos
pop
add
dec
leave
push
lcall
jmp
lds
push
jnp
mov
xchg
sarl
mov
or
call
into
stc
stos
ds
iret
in
imul
call
adc
jl
dec
mov
jnp
repz
mov
jbe
jmp
push
sub
cmpps
out
sbb
mov
mov
jmp
adc
mov
cs
xchg
orb
jg
jno
push
imul
in
idivl
stos
out
lcall
add
xchg
bound
push
push
xor
dec
or
enter
mov
in
lret
dec
dec
dec
xor
or
jl
int
or
shll
push
dec
stos
adc
int3
xchg
pop
lcall
fdiv
xlat
push
mov
xor
pop
cmp
loop
mov
jp
lea
lea
fisubs
insb
fldl
mov
inc
aaa
cmpsl
inc
icebp
lds
adc
inc
push
add
pop
mov
add
mov
ljmp
push
mov
in
mov
sub
test
pop
stos
cmp
clc
call
mov
je
insl
ss
inc
shlb
cmp
jb
arpl
inc
xor
ljmp
imul
add
jp
cmp
jno
ret
les
pop
and
pop
lock
pushl
jbe
jl
mov
sahf
inc
rcrl
sub
out
rolb
decl
jl
and
insb
xor
mov
push
popa
mov
mov
mov
adc
rol
cmp
test
inc
mov
push
xchg
inc
incl
arpl
xor
sub
imul
rolb
sbb
arpl
mov
or
sub
aas
mov
fs
ljmp
push
repnz
sbb
adc
int3
jg
mov
pop
pop
fadds
stc
fsubl
inc
outsl
in
dec
ljmp
cmp
or
arpl
mov
mov
cld
jnp
xorb
dec
sub
sbb
scas
subl
add
decb
dec
cli
cli
jg
out
dec
stc
addr16
lods
or
dec
dec
out
imull
loope
and
sbb
jnp
ljmp
outsl
mov
pusha
fnstcw
leave
xchg
cld
icebp
add
mov
dec
pusha
lock
decl
leave
xlat
in
mov
ss
mov
pusha
or
mov
dec
je
pop
or
les
dec
in
pop
jecxz
stos
or
cs
or
loope
popf
mov
sub
call
cs
jae
add
fistps
pop
call
and
fcomip
or
jge
mov
loope
jne
in
dec
adcb
fstps
push
push
jl
lds
ljmp
aam
dec
lret
int
lock
mov
test
subb
dec
sbb
pushl
adc
inc
pop
mov
fstps
add
in
inc
jmp
in
lds
movsb
cmc
call
push
xlat
inc
mov
mov
inc
jg
decl
sub
sbb
jmp
rclb
popa
or
dec
xor
js
or
call
xor
inc
xchg
lret
jg
lods
cmpl
loop
lcall
popf
int
hlt
pop
pop
or
insl
jo
mov
lock
sub
push
inc
ret
jne
sbb
pushl
test
mov
fisttpl
add
sbb
je
neg
lcall
lahf
sti
adc
and
dec
push
add
pusha
push
mov
and
out
jmp
push
std
lcall
add
idivb
pop
mulb
ljmp
lcall
les
mov
push
sbb
cmp
inc
add
sub
aaa
dec
dec
fdivs
aaa
cmp
adc
jae
inc
push
mov
ljmp
cli
ljmp
divb
or
out
inc
sub
xchg
and
lret
push
jns
scas
adc
jno
int
dec
mov
dec
ljmp
faddp
cmp
push
xor
xchg
std
bound
pop
movsl
outsl
test
sub
popa
jg
call
and
rclb
mov
and
out
xchg
iret
lcall
aam
lcall
cmpsb
dec
js
icebp
push
lea
inc
stos
addr16
dec
repz
dec
mov
incl
and
mov
adc
leave
andl
lds
adc
cmp
and
int
inc
dec
push
xor
jns
mov
in
pop
jg
jb
mov
xchg
addr16
xchg
mov
pop
aaa
jp
adc
dec
pop
sbb
mov
jg
ljmp
std
push
in
xchg
por
mov
add
cmp
adc
fwait
add
xor
sub
decl
xchg
into
shlb
rcll
decl
lods
push
pop
sub
ficompl
icebp
cmp
pop
xchg
and
sbb
xchg
jp
mov
xlat
lret
pusha
mov
pop
out
cmp
loopne
ljmp
push
pushl
out
test
aam
mov
out
add
mov
cmp
aaa
call
aaa
xchg
mov
and
out
xchg
or
test
test
sbb
ljmp
aas
mov
cmp
lea
ss
outsb
ds
js
mov
push
and
outsl
pop
push
cwtl
and
or
sbb
dec
dec
mov
jno
fcoms
and
mov
inc
imul
or
out
jbe
loopne
call
jg
hlt
and
or
push
or
out
jg
mov
lcall
adc
ret
push
cli
pop
mov
jl
adc
aaa
dec
daa
dec
fcmovbe
fcoml
inc
in
es
xor
mov
sub
and
in
dec
pop
fwait
call
add
test
sub
adc
sti
mov
lret
cmc
xchg
cli
popa
in
ja
mov
cmp
into
dec
jecxz
jae
cli
mov
lahf
test
xor
xchg
ds
hlt
jg
outsl
lods
fs
stos
or
ljmp
cmpsl
cmp
lcall
inc
int3
data16
mov
pop
movsb
ljmp
fsubrs
cmp
popf
and
xchg
in
sarb
sub
cmp
pushl
add
xor
out
or
xor
fucomi
shlb
pop
xchg
enter
scas
push
jp
jecxz
lahf
nop
jmp
leave
lock
push
movsb
cmp
ss
imul
mov
leave
cmp
fwait
shll
sub
stos
movsl
push
push
push
cld
call
stos
sub
sub
xor
in
add
test
flds
in
push
push
pop
call
add
test
cltd
pop
cmpsb
adc
push
aaa
xor
jne
fldt
mov
jmp
pop
popa
mov
mov
or
data16
packsswb
pop
or
scas
jns
inc
push
xchg
dec
jnp
sbb
decl
cmp
call
sbb
dec
adc
cltd
dec
cwtl
xor
mov
pop
hlt
call
cmp
and
flds
sub
pushf
and
lock
pop
adc
aad
lcall
cmpsl
pusha
sub
adc
jecxz
lahf
clc
jmp
xchg
jp
cli
jg
pop
dec
xchg
add
cmc
pop
jg
mov
mov
das
jno
jp
mov
cmp
bound
outsb
sub
mov
mov
add
and
push
test
pop
daa
test
pop
xchg
dec
sub
mov
data16
push
bnd
sbb
push
and
push
test
adc
ljmp
jmp
fwait
stos
cmp
ret
add
xor
clc
test
jmp
adc
pop
mov
mov
pop
jl
imulb
outsl
shrl
mov
fwait
in
jmp
daa
push
insb
adc
mov
dec
add
mulb
aaa
and
dec
or
or
dec
adc
lock
cwtl
lcall
clc
cmpsb
inc
and
mov
adc
jle
dec
nop
lcall
out
xlat
pop
sub
xchg
pusha
pushl
xor
xchg
lahf
cmpsl
push
test
ret
xor
or
cmp
pop
lock
sub
std
mov
mov
xchg
leave
in
subl
jmp
ret
lret
pushf
push
xchg
sub
sub
ds
popa
fisttps
mov
pop
add
into
aaa
test
scas
movsb
pop
or
in
cld
clc
stc
call
jl
movsl
cld
sub
icebp
sti
cli
push
xchg
add
dec
dec
dec
cmc
sbb
mov
lcall
out
icebp
xchg
push
ret
push
inc
mov
enter
inc
ds
xchg
fsubrp
out
jne
incl
stc
fbstp
inc
pop
xchg
adc
les
mov
sti
mov
dec
std
idiv
pop
add
lcall
ret
mov
mov
clc
fbstp
rcrl
ss
cwtl
adc
dec
ja
addb
pop
movzwl
outsl
push
mov
fcomip
cmp
scas
sbb
pop
lret
jl
dec
pop
mov
cwtl
jg
rcrl
ljmp
mov
es
nop
jnp
pop
lret
sahf
add
int3
lock
into
movsl
decl
jae
and
addr16
dec
inc
cmpsl
xchg
in
mov
mov
cmpsb
sahf
cs
inc
call
out
push
jp
adc
ja
cltd
jecxz
mov
sbb
out
lods
nop
popa
clc
xchg
testl
and
dec
sbb
xlat
in
mov
mov
cmp
hlt
mov
cmpsl
scas
lods
loopne
mov
js
inc
mov
push
shl
lods
add
incl
mov
sbb
loop
aam
popf
dec
dec
mov
enter
mov
idiv
clc
jno
lcall
insb
int3
pop
mov
testb
test
cs
call
iret
rcll
push
out
mov
and
sub
sub
mov
loope
jmp
jp
sbb
imul
and
into
fcoml
mov
sbb
repnz
lcall
nop
mov
or
inc
ljmp
test
pop
jecxz
add
push
sub
popf
cld
mov
sub
pop
loopne
decl
in
cltd
jp
push
nop
mov
push
inc
loope
js
mov
fs
fisttpl
sub
jno
call
or
push
or
mov
xchg
xchg
mov
xchg
loop
mov
sub
jl
cmp
sbb
call
add
es
inc
rcll
mov
daa
movsl
fcomps
into
xchg
enter
sbb
incl
push
push
dec
inc
sub
test
mov
into
xchg
fstps
movsl
add
call
pop
jbe
repz
rclb
adc
jle
lods
sub
cwtl
sahf
sub
ljmp
or
add
repz
dec
out
push
mov
mov
sbb
dec
mov
xor
ljmp
jmp
pushf
mov
out
cld
mov
adc
mov
and
call
pop
ss
xchg
xor
sahf
fdivrl
pop
dec
or
jmp
sub
xchg
mov
dec
mov
or
pop
mov
out
scas
aam
cwtl
lret
fldcw
ljmp
mov
sahf
orb
clc
pop
inc
js
testb
rep
lcall
imul
pushl
test
insb
lds
icebp
mov
adc
fs
ret
in
jns
pop
xor
roll
and
into
icebp
cmc
mov
adc
mov
sbb
and
insl
gs
jno
push
ljmp
test
sbb
or
cmp
cmp
stc
push
jns,pn
jecxz
jns
stc
jl
jecxz
test
ljmp
cltd
lcall
inc
and
inc
scas
dec
int
cmp
adc
cli
mov
or
or
mov
out
mov
outsb
xchg
scas
aas
mov
or
xchg
out
xor
mov
xchg
movsl
jo
xchg
fisubrl
push
xor
mov
insb
popa
cwtl
loope
xchg
mov
push
imul
loop
pop
ret
test
push
xchg
cli
sub
stc
mov
push
jno
push
fldl
jp
bound
jns
das
insb
insl
fwait
dec
lret
fsubs
xchg
add
into
add
in
out
xor
lcall
push
cli
mov
ljmp
ss
outsb
fcmovnb
out
jge
scas
shl
std
dec
ja
push
push
std
aaa
cld
repz
cmp
mov
imul
xchg
pop
mov
pop
repz
cli
ss
out
mov
xor
lds
fildll
std
jmp
xor
or
mov
shll
mov
lods
xor
push
test
sti
sbb
pop
adc
adc
ss
lods
jae
rcl
mov
pushf
pop
add
cmp
mov
dec
cmp
sub
pop
xor
cld
fisubs
pop
in
int
sub
shr
jns
xor
outsl
pushl
jg
xchg
sub
enter
inc
xor
xor
xchg
icebp
push
or
in
sar
jmp
mov
xchg
push
aam
mov
sub
push
xchg
mov
lahf
inc
stos
cmc
scas
call
or
push
cld
sub
nop
adc
push
pop
pop
lcall
sub
adcb
sub
mov
or
jp
rorl
jno
mov
call
into
push
jp
test
int3
mov
cli
aad
dec
test
or
call
rorb
icebp
movsl
clc
int
in
or
cs
inc
jae
out
lret
pushf
jg
decl
pmuludq
add
jl
pop
pop
cli
inc
into
xor
mov
int3
call
sub
mov
inc
xchg
pop
mov
or
add
sbb
push
pushl
and
data16
cmp
lods
in
push
dec
out
cmp
jecxz
popf
sub
push
add
call
mov
arpl
jl
mov
icebp
mov
or
ret
jbe
push
mov
ljmp
cmc
xor
shll
pop
fucomi
mov
aaa
and
jg
or
xor
xor
cmp
xchg
lods
vcvtps2dq
or
push
cld
sbb
dec
cld
mov
and
pushl
rorl
mov
pop
or
dec
fnstenv
mov
mov
inc
dec
lret
add
push
xor
xchg
fdivr
sbb
mov
cmp
push
in
pop
jge
in
imul
filds
push
xor
cmp
mov
fsubrl
mov
in
jmp
fdiv
vmwrite
push
repz
sub
decb
ret
xlat
popa
jbe
cmp
jmp
mov
sub
lods
sub
test
lret
xor
pop
pop
mov
idiv
decl
add
hlt
sti
jb
sti
push
lods
sbb
adc
sbb
ljmp
aas
jmp
outsb
jne
sbb
or
shlb
dec
lcall
in
adc
pushl
sahf
push
dec
int3
jg
sbb
jno
popa
cmp
movsl
mov
jns
outsb
in
pop
push
ret
decl
mov
inc
scas
pop
sub
cld
ds
jb
sub
xchg
popf
sub
inc
lea
fiadds
mov
mov
ljmp
loopne
mov
push
lcall
jno
jle
test
dec
repz
dec
ljmp
cmp
pop
into
hlt
incb
mov
jno
not
jb
or
fwait
sbb
jecxz
mov
fimuls
sbb
sbbb
lcall
dec
std
sbb
outsl
xchg
fldt
fs
mov
out
hlt
add
incl
pop
jbe
rorb
push
or
lds
fnstsw
adc
inc
orl
jb
sbb
dec
sbb
mov
das
inc
xor
sbb
push
aad
popf
pop
mov
ljmp
loope
idivl
xchg
in
cmp
sub
lds
xchg
lcall
mov
adc
jge
jp
in
popf
or
sbb
ljmp
les
leave
rcll
loope
adc
das
test
outsl
negb
push
mov
xor
in
daa
ret
outsb
rolb
les
cmp
or
stc
jmp
pop
mov
inc
int
int
jb
jle
popf
lds
test
insb
clc
push
inc
sub
jmp
cmpsb
jle
es
push
clc
hlt
cmp
inc
andb
dec
push
jns
js
decl
xchg
sbb
fsubs
jns
inc
nop
pop
lahf
dec
into
dec
and
mov
jecxz
pushl
in
add
scas
or
into
pop
xchg
xor
cmp
stos
cmp
or
insb
xor
ljmp
call
jbe
and
test
add
jnp
icebp
inc
push
movsb
inc
adc
inc
arpl
aas
outsl
into
sbb
and
int3
inc
cmp
inc
push
leave
dec
cwtl
xchg
dec
push
out
pop
ljmp
aam
test
popl
fisubl
cmovbe
jg
pop
fsubl
ljmp
into
movsb
repnz
popa
mull
xchg
mov
lods
pop
lcall
pop
insb
push
xchg
cld
ljmp
jge
mov
push
shll
loopne
imul
mov
insb
jecxz
add
ljmp
mov
mov
cli
ljmp
movsb
aaa
fnstcw
dec
leave
scas
test
adc
mov
lcall
fs
cli
jbe
lahf
or
adc
es
lret
jecxz
out
dec
sbb
jge
jle
stos
mov
inc
mov
aas
out
ret
and
es
cmpsl
mov
movsb
mov
fdivrs
mov
mov
pop
rclb
push
movsb
inc
daa
ud0
insl
push
xchg
arpl
call
xor
push
inc
lds
data16
adc
mov
inc
sub
sar
mov
mov
pop
testl
jnp
call
mov
mov
mov
andl
out
bound
out
add
decl
jnp
iret
out
clc
call
imul
gs
fwait
xchg
push
aas
mov
ret
sub
inc
or
into
xchg
sub
cmpb
lock
js
les
int3
mov
out
rclb
cli
mov
mov
mov
mov
jle
nop
mov
push
pop
jnp
lcall
xlat
pop
adc
bound
sbb
call
orb
adc
push
jmp
movsl
inc
cmp
scas
inc
int
in
test
mov
loopne
jmp
inc
or
out
in
ret
fcomip
rclb
mov
ds
lock
cmp
jns
dec
ljmp
mov
imul
into
xor
sub
and
inc
xchg
xor
adc
dec
dec
sbb
jp
ljmp
iret
mov
ds
test
aad
pushf
xlat
andb
adc
leave
dec
jg
out
dec
aaa
jmp
loop
inc
sarb
sbb
fwait
into
push
sbb
jg
ret
fwait
dec
les
aad
shl
push
aad
cmpsb
dec
fdivrs
cmpsb
mov
shll
cmpsb
or
jbe
jp
sbb
push
or
lea
jb
add
call
std
dec
dec
lock
mov
add
int
movsl
fs
pop
int3
sbb
incl
sbb
mov
pop
mov
nop
in
scas
and
cltd
leave
xchg
inc
mov
cltd
fidivrs
in
popa
add
lock
daa
jns
push
sbb
fisubs
xchg
pusha
pop
outsb
cld
inc
sbb
adc
decl
inc
adc
ja
inc
mov
int
cmpsl
movsb
std
xchg
jl
pop
xor
out
dec
xlat
ljmp
cld
xchg
xchg
dec
push
movsb
fisubrs
test
std
inc
int3
xor
inc
inc
ljmp
outsb
mov
dec
cmpsb
or
hlt
dec
jno
and
mov
jbe
dec
iret
fwait
aad
ljmp
hlt
aaa
sub
and
dec
pop
sbb
aas
in
loop
mov
mov
mov
dec
sub
mov
xchg
mov
test
jo
inc
sub
pop
hlt
inc
clc
pop
add
inc
jecxz
nop
movsb
ss
cmc
nop
js
jp
cmp
cli
xchg
cmp
pop
push
or
fdivrp
jge
shrl
push
pop
jl
gs
sub
lods
std
and
jmp
push
mov
int3
scas
in
repz
sahf
dec
push
xor
xchg
xchg
xchg
cmp
jae
pop
or
mov
ljmp
movsl
in
push
push
xchg
jle
sub
out
iret
pusha
cmpsl
push
and
in
cwtl
jmp
fwait
mov
or
jmp
mov
mov
out
cmp
mov
cmp
dec
bswap
xor
mov
mov
xor
out
mov
cmp
cmp
stos
loopne
call
loope
xchg
or
mov
jns
adc
mov
fwait
jo
xchg
popa
inc
mov
mov
clc
sub
push
dec
add
mov
add
in
sub
xchg
jmp
jge
push
xchg
dec
dec
push
push
mov
pop
lcall
or
mov
cmp
and
lret
incl
ds
fdivs
mov
mov
mov
mov
std
lcall
dec
mov
subb
jb
repz
add
mov
rorl
pop
stos
push
out
clc
call
loopne
inc
sub
std
sahf
mov
mov
push
pop
incl
sbb
sbb
cmp
js
dec
call
xchg
lds
sbbl
sbb
shll
mov
int3
leave
mov
aad
cmpsl
ljmp
stos
add
arpl
push
push
push
xor
xor
fmulp
idivb
cmp
stos
test
call
adc
mov
out
aas
mov
adc
cwtl
test
sar
cmc
ljmp
movsb
ljmp
mov
xor
stos
inc
ror
jmp
addr16
sub
pushf
je
aaa
and
mov
dec
rorl
jg
and
dec
loopne
into
rorb
call
aam
xchg
inc
fsts
call
jnp
mov
lock
and
shrl
sbb
leave
sbb
mov
pop
xchg
sub
jmp
je
lcall
fwait
inc
lret
xchg
leave
push
or
and
mov
mov
xchg
xor
push
and
cmp
loop
fs
call
decl
and
fwait
std
add
insb
out
sbb
fsubl
loopne
movsb
xchg
jae
inc
fcos
incl
xchg
inc
mov
push
loope
daa
into
pusha
rcr
popa
leave
or
jmp
pop
dec
cld
mov
call
push
insl
add
bound
pop
xchg
in
movsb
xor
loop
adc
cmpsb
scas
mov
pop
lds
ja
incl
pushl
adc
mov
push
mov
repnz
or
aad
addr16
mov
cwtl
imul
jg
test
std
out
mov
sub
incl
loopne
sbb
sbb
inc
mov
idivb
xchg
test
and
adc
mov
mov
adc
repz
cmp
jo
movsl
lret
lds
mov
dec
or
mov
std
and
fdivrl
call
lds
out
jnp
int
xchg
jp
ret
mov
sbb
push
and
shrl
jmp
or
mov
adcl
test
std
lods
sbb
mov
decl
lock
mov
and
loop
repnz
xchg
int3
insl
addr16
out
clc
cmp
or
pop
add
test
xor
fisubrs
ljmp
jge
call
xor
inc
mov
lret
mov
out
imul
mov
sbb
sub
mov
inc
test
pop
push
aaa
cld
pushl
xchg
push
or
xor
push
lds
inc
neg
std
xor
insb
dec
jnp
jmp
imull
mov
sbb
xchg
ret
adc
sti
sub
enter
inc
out
imul
es
repz
and
add
das
fcomps
push
jmp
cmp
pop
or
add
in
in
pop
fidivl
jle
push
scas
movsl
test
push
add
scas
clc
stc
std
leave
and
lods
sub
out
mov
in
outsl
dec
xlat
xor
inc
xor
ljmp
or
adc
or
fsubrs
pop
cmp
stc
lods
mov
decl
dec
mov
mov
stos
push
call
xor
int3
faddl
fsubrl
iret
ret
push
outsl
mov
lret
jp
in
push
pusha
loope
inc
dec
roll
pop
pusha
inc
xchg
in
pop
mov
lcall
push
mov
mov
jmp
addr16
xor
es
decl
adc
jmp
cli
ficoml
bnd
prefetch
out
pop
dec
cmp
call
js
cmp
leave
aam
out
sub
lds
in
ficomps
divl
pop
cmp
xlat
sbb
adc
and
ja
or
cmp
nop
jecxz
cmp
hlt
add
leave
adc
stos
dec
pushl
icebp
jbe
mov
cmp
insb
cltd
cmc
ja
data16
cmc
jno
shlb
jmp
xchg
jae
repz
negl
fcoms
mov
cs
imul
or
aam
jg
push
lcall
in
scas
insb
jno
jl
mov
insb
daa
je
adc
cltd
xor
stos
decl
movsl
inc
lds
adc
sbb
xchg
add
adc
cmp
xlat
jecxz
mov
fidivl
in
in
cmpl
loopne
jae
pop
cli
test
call
jb
call
fimuls
movsb
adc
dec
outsl
lret
es
mov
mov
cli
sbb
jno
das
fimull
repnz
pop
push
xor
test
inc
arpl
fadd
mov
push
cmp
icebp
int
and
jmp
jg
pop
mov
push
dec
stos
add
and
lcall
mov
jns
arpl
sub
push
inc
stc
inc
sbb
xor
xor
push
popa
jge
lock
mov
add
pusha
jmp
in
adcb
mov
sti
movb
pop
test
pop
es
in
add
test
leave
lcall
adc
cmp
out
rcrb
push
pusha
dec
mov
movsb
mov
cmp
lds
jmp
js
lock
mov
out
cltd
xchg
mov
pop
sub
subb
jg
out
sbb
divb
ss
fistl
arpl
add
cmpsl
xor
xchg
xchg
and
lahf
sub
adc
adcl
xor
add
lcall
inc
out
add
and
push
xor
ret
push
jb
pop
das
test
jg
add
dec
cs
adc
and
bound
mov
xor
jmp
lods
add
inc
aad
add
push
jb
pop
mov
out
xchg
mov
insb
adc
push
outsl
cmp
xor
or
loopne
or
xchg
outsb
xchg
int
push
and
sbb
sahf
je
cmp
cmp
mov
ficoml
xchg
clc
popa
add
repnz
divl
orl
jg
enter
dec
jl
fistpll
sahf
arpl
gs
dec
test
lds
cmp
cmp
lahf
sbb
mov
dec
shll
adc
pop
xchg
jmp
push
xchg
pop
cmpsb
test
insb
fwait
push
andl
incl
mov
imul
outsb
out
cmp
jo
cmpb
and
decl
outsl
jle
inc
pop
lahf
dec
add
out
push
push
mov
movsb
inc
stc
testb
lret
outsl
or
cld
incl
gs
test
pop
push
pop
dec
cmc
int3
push
mov
adc
mov
jg
pop
jb
lahf
lds
outsl
mov
mov
scas
mov
mov
jmp
ljmp
xchg
lods
insl
addb
adc
mov
arpl
xchg
xchg
mov
jne
mov
lods
arpl
cmp
movb
inc
mov
add
test
outsl
test
rcrl
push
jp
cmp
hlt
mov
mov
xchg
fistpl
std
adc
repnz
mov
push
orl
mov
out
mov
xchg
push
inc
dec
xor
fisubs
data16
call
test
jns
mov
mov
je
insl
lret
mov
mov
pop
push
fsubl
incl
add
mov
add
push
shrl
sar
sbb
sub
das
repnz
push
lahf
and
sbb
loopne
jl
sub
aaa
nop
inc
cmpsb
lcall
cwtl
js
stos
in
clc
mov
pop
lds
dec
dec
inc
cmpsb
ror
mov
ljmp
in
push
jmp
pop
data16
dec
ret
xchg
or
in
ret
stos
call
xor
jbe
mov
mov
leave
fiaddl
stc
dec
sub
mov
jmp
movsb
cmp
mov
xor
aas
inc
fucompp
testl
incl
xchg
testb
hlt
adc
sar
out
cmp
sub
repz
ror
jg
fstpl
jns
push
cmp
jge
add
sahf
sub
pop
lock
jmp
fs
push
dec
xchg
outsl
jae
mov
fwait
add
stc
jno
xchg
xor
fisubrl
sbb
ret
jecxz
pop
sbb
aad
jmp
cwtl
ds
out
mov
and
sbb
pushf
push
jg
fstl
out
shrb
fcmovu
lahf
adc
dec
mov
mov
sahf
cmp
ljmp
mov
and
fcomps
jne
cld
lock
or
push
lahf
inc
mov
cs
das
adc
or
stos
cmc
ret
pop
popf
shrl
mov
jmp
decl
repz
mov
inc
and
push
cmpsb
fstp
sub
jp
in
shrl
cmp
call
in
cmp
sbb
out
insb
into
aaa
dec
jno
bound
dec
mov
aad
jae
mov
hlt
pop
imul
aaa
add
mov
dec
cmp
int3
js
jo
cmp
mov
mov
cs
pop
fidivl
adc
push
stc
ja
arpl
inc
loopne
sbb
pop
push
in
inc
jno
out
xor
lcall
outsl
js
mov
mov
mov
out
lcall
push
cmp
mov
inc
mov
scas
pop
shr
mov
in
mov
ja
cmp
out
mov
sbb
adc
xor
cmpb
decl
push
out
out
lahf
sub
push
push
cmp
test
mov
push
ljmp
fdivl
enter
push
enter
js
aad
or
loop
outsl
jmp
leave
pop
mov
repnz
fisttpll
and
lcall
je
mov
push
aam
jmp
jo
sub
into
cltd
pop
cltd
neg
xor
adc
adc
leave
pop
outsb
pop
add
jae
or
jmp
mov
mov
and
ja
push
jne
in
sbb
cmp
push
mov
jp
xchg
decl
inc
or
mov
lods
popf
out
jns
dec
mov
sbb
mov
and
jnp
scas
addl
lods
sbb
cli
fildll
inc
adc
jecxz
mov
cmp
mov
push
pop
cmpsl
test
pusha
cld
push
mov
lea
inc
dec
ret
mov
cmp
clc
mov
xor
push
jl
xchg
nop
xorb
pushl
adc
add
jg
add
or
push
dec
inc
sub
cli
add
lods
movsl
icebp
idiv
lcall
stos
lcall
push
mov
out
jmp
mov
fwait
call
enter
dec
cmpsb
and
ds
aad
shlb
cmp
mov
mov
repnz
jl
mov
mov
pop
sub
inc
mov
push
std
gs
rcll
cli
cmp
xlat
fcmovb
je
or
in
pop
test
ds
test
or
lcall
std
push
test
ss
addb
dec
cmpsl
aad
lods
mov
ljmp
xorl
xor
test
or
enter
sub
cli
pop
fnstsw
lea
movb
sahf
hlt
test
aas
xor
fisubl
test
or
xor
jmp
stos
lcall
cltd
loop
lahf
xor
mov
pop
test
fsubr
clc
xchg
pop
int
ss
mov
pop
leave
dec
testl
xor
nop
inc
sbb
scas
cli
mov
fmuls
fninit
mov
lods
dec
xor
stos
xor
fcomip
jmp
stos
sub
sub
inc
adc
cmp
ja
ljmp
mov
sbb
imul
ret
xlat
lods
jns
popa
scas
jno
xor
movzbl
jmp
pop
aaa
xor
inc
or
mov
lods
nop
fidivl
jg
out
pop
mov
repnz
mov
test
loopne
and
loope
adc
jns
incl
fdivs
sbb
and
les
in
sbb
hlt
arpl
lcall
lcall
imul
sbb
test
jne
lcall
or
mov
imulb
push
into
or
add
roll
mov
ljmp
pushf
in
xchg
mov
jge
decl
orb
decl
dec
cli
xchg
sub
dec
sub
popf
bnd
pop
inc
push
xchg
in
cmpsl
dec
mov
test
insl
jbe
decl
push
pop
mov
aas
clc
ss
pushl
push
loopne
std
pushf
mov
mov
xchg
lcall
dec
mov
jno
xchg
daa
cmp
mov
cmp
push
test
mov
and
push
xor
or
lea
out
imul
adc
adcb
cmp
ficomps
xchg
or
imul
rorl
fmull
jbe
fs
call
dec
pop
mov
xor
or
in
ds
scas
cmp
fbld
in
xlat
pushl
jbe
das
cwtl
mov
and
jmp
sbb
and
push
jp
dec
inc
clc
or
fcmovu
cmp
mov
test
cmc
aam
incl
popl
fisubl
movsb
sahf
aas
aaa
shrb
loopne
inc
mov
jg
scas
iret
leave
cmpsl
jp
dec
movsb
push
arpl
cmp
mov
push
cmpsl
sub
push
fcomip
push
ljmp
cmpsl
scas
icebp
pop
push
jg
or
or
outsb
pushl
scas
dec
ds
test
dec
ror
cs
jae
iret
dec
cmpl
push
std
popf
iret
and
lock
xor
ljmp
push
mov
decl
sbb
insl
cwtl
lahf
outsl
mov
pop
daa
sbb
movsl
dec
pop
add
pop
push
sti
arpl
iret
repnz
decl
lods
fldl
shl
mov
iret
out
cmp
xchg
mov
add
pushl
jle
lahf
movsl
pop
push
test
and
fmulp
fcoms
out
pop
mov
push
xchg
and
push
pop
jecxz
mov
les
ds
add
lock
inc
pop
mov
inc
mov
dec
sbb
lcall
out
mov
orb
test
stos
mov
or
mov
mov
aaa
xlat
fistpl
scas
loopne
js
call
add
fdivrp
jmp
pop
push
inc
hlt
pop
cltd
imul
insl
popf
mov
sbb
into
fidivs
xchg
fsubrs
ja
dec
dec
cmc
rolb
adc
daa
popf
icebp
cmp
incl
push
aas
or
ror
jne
aas
test
push
test
push
sub
inc
mov
rcr
test
and
jg
sbb
outsl
pop
cmp
pop
adc
lods
int
lea
mov
jmp
or
push
mov
xchg
xchg
cld
add
imul
add
adc
mov
pop
and
push
sub
sub
call
and
pop
xor
cmp
js
jmp
out
xor
dec
ret
dec
dec
push
cld
in
add
jb
test
xor
mov
shlb
stos
gs
cs
in
ljmp
mov
pop
loop
clc
pushl
jo
mov
dec
push
and
add
into
fcompl
add
dec
jnp
loop
mov
pop
test
add
ret
jno
repz
xchg
in
push
dec
lea
out
mov
or
ljmp
cmp
push
push
sbb
inc
pop
ja
gs
and
add
xchg
das
mov
popl
fistpll
out
xchg
push
dec
movb
xchg
jmp
sbb
pushl
xchg
sahf
jmp
dec
cmpsb
dec
movsb
push
push
lcall
mov
nop
push
popf
xchg
loopne
adc
fcomip
jae
int
adc
sbb
aam
mov
lea
push
scas
jle
dec
stos
lahf
cmp
add
ds
mov
jne
mov
cwtl
cmp
adc
sub
je
hlt
inc
inc
add
leave
jg
icebp
call
mov
rclb
push
icebp
xchg
xchg
scas
movsl
cmc
out
or
call
jl
sub
fsubl
out
xchg
sbbl
int
enter
xor
aaa
push
dec
push
incl
ret
inc
dec
mov
frstor
dec
cmp
pushf
jecxz
dec
in
sbb
dec
jl
mov
into
mov
loopne
aas
jp
pop
sbb
push
xchg
jmp
jmp
int
mov
fistpll
ret
jne
call
in
pop
insb
in
mov
pushf
mov
imul
hlt
pop
xchg
dec
scas
int3
dec
cmpl
shl
jns
cmpsb
popf
je
xchg
in
shll
inc
xor
int3
cmpsl
incl
lret
ja
push
mov
or
pop
mov
sti
xor
jmp
and
mov
cld
call
lock
in
lret
rolb
cmp
or
inc
rcrl
add
addl
mov
xchg
clc
push
call
jecxz
and
push
mov
popf
mov
rorl
imul
lds
call
pushl
push
popf
push
ja
xor
cmp
sub
pushf
mov
mov
call
lock
lea
jle
fcompl
jg
insl
jge
es
sbb
or
inc
jne
jl
mov
jmp
js
push
lcall
sub
jg
sbb
mov
mov
ljmp
adc
ds
push
mov
pushf
je
hlt
sarb
cmp
adc
mov
mov
scas
sub
add
and
xor
bound
lret
loopne
push
inc
cmp
shl
popa
lcall
and
mov
lock
pushl
mov
pop
pusha
test
mov
sarl
xchg
add
ja
fistpll
bound
dec
sub
pop
inc
xor
xor
push
pop
and
xchg
xor
inc
xchg
inc
decl
push
lcall
push
or
cwtl
outsl
jnp
jmp
mov
sbb
or
int3
fcoms
mov
or
or
xchg
mov
incl
and
sti
adc
or
mov
mov
in
insb
sarl
es
in
imul
xchg
incl
cld
jp
mov
cwtl
sbb
jnp
inc
clc
adc
scas
call
ds
icebp
xlat
dec
incl
jno
push
pop
mov
or
vshufpd
push
jp
addr16
repz
pop
leave
ret
addr16
sub
cli
decl
sti
or
add
lods
sub
jmp
fs
pop
out
std
cmc
jle
inc
xor
in
push
xchg
outsb
dec
stc
cli
mov
loop
decl
jl
inc
or
cmpsl
cmp
divl
cs
fdivr
mov
inc
push
fsubs
jbe
iret
insl
mov
xor
pushf
pop
xor
cli
incl
pop
cmp
push
mov
or
mov
fisubs
outsl
movsl
decl
nop
mov
test
push
movsb
sbb
sbbb
cld
or
push
scas
cli
cmp
jg
in
cmp
sbb
jae
in
add
lods
adc
sub
jmp
mov
lss
in
adc
xchg
cli
adc
leave
sbb
stc
or
xchg
mov
jg
rclb
xchg
jb
sbb
rclb
fwait
pop
popf
pop
inc
outsl
xor
stos
dec
mov
sahf
adc
outsb
imul
or
stc
scas
cmp
cmp
clc
inc
inc
jg
iret
mov
jnp
bound
mov
pop
jmp
and
rclb
call
pop
push
aad
adc
test
pop
and
lods
sbb
or
jle
and
jp
xor
fistps
imulb
js
rcrb
psllw
pop
cmp
dec
ds
mov
bound
es
adc
lcall
mov
jmp
mov
mov
arpl
jg
and
popa
adc
cmpsb
sbb
push
mov
dec
ljmp
cwtl
repz
cli
push
loopne
push
jo
inc
xchg
fldcw
cmpsl
pop
mov
sbb
or
icebp
mov
in
mov
and
mov
xchg
xchg
decl
xchg
mov
in
add
in
mov
int3
push
xor
xor
ss
ljmp
outsb
jo
popa
dec
mov
js
outsl
xor
push
xchg
pop
pop
shrb
incl
push
sub
mov
dec
mov
pop
jecxz
jmp
jo
jg
jo
sbb
fs
out
and
mov
out
jle
out
fs
clc
dec
mov
fs
mov
jbe
and
out
sub
out
inc
movsb
std
fcompl
fdivr
decl
or
jg
dec
fwait
dec
loop
inc
inc
sub
or
xor
push
incl
cmp
cli
test
mov
mov
subl
scas
inc
repnz
jecxz
rorb
not
or
in
pop
ret
hlt
xchg
push
xchg
loopne
inc
dec
lcall
pop
loope
sub
jg
insb
enter
movsb
push
or
push
lock
out
inc
cs
sub
cmpsl
lods
pop
mov
pusha
adc
call
fstpl
xchg
ret
mov
xor
cmpsb
dec
sub
out
adc
cld
lcall
insl
cmpsb
xor
outsb
aaa
cmp
scas
lea
fldcw
sar
call
mov
ret
xchg
imul
sbb
jl
adc
sub
add
fcomip
call
es
out
add
loop
pop
dec
jbe
mov
jl
sub
add
das
xchg
mov
addb
int
lcall
incl
dec
and
aam
movntq
cmp
repz
out
add
cmp
jge
in
les
jmp
mov
xor
mov
dec
push
mov
mov
pop
js
or
je
push
mov
incl
dec
xor
cmpsl
xchg
std
jmp
das
fists
test
cmp
lahf
repnz
push
or
fstpt
shl
jle
filds
lcall
loopne
lds
mov
cmpsb
push
fwait
jmp
lock
and
rcr
push
mov
adc
sbb
orb
mov
fisttpll
dec
pop
cmp
stc
jg
addr16
movsb
mov
mov
addr16
mov
jnp
cmp
sub
syscall
call
out
xchg
test
pop
lock
pusha
in
jae
dec
pushf
or
in
pop
pop
inc
jg
std
ds
lcall
xchg
sub
cmp
scas
je
dec
rolb
ret
and
pushf
mov
test
ljmp
cli
jp
rol
dec
sahf
js
andb
int
mov
ret
outsb
push
mov
mov
inc
fs
dec
sti
push
mov
sbb
mov
out
mov
loop
call
int3
mov
popa
sub
push
sbb
dec
mov
or
int3
push
lods
jecxz
or
adc
mov
out
pop
ret
xchg
dec
mov
adc
pop
sub
loop
and
pop
js
pop
pop
outsl
cmp
dec
aaa
test
push
lods
jmpw
jae
mov
call
add
add
xchg
in
dec
xor
lret
sbb
xor
into
mov
rorl
or
fistl
cmp
cs
rol
or
xor
jg
incl
sub
push
push
cmp
jno
rcrl
sbb
shlb
sbb
inc
and
subl
hlt
pop
push
or
mov
xchg
add
push
decl
xchg
inc
ret
mov
jae
mov
lret
mov
jmp
call
adc
jg
inc
pop
lret
in
adc
int3
mov
sbb
pushl
jle
insb
and
lods
mov
mov
mov
fisubs
sub
jmp
and
mov
or
pop
inc
push
or
scas
mov
mov
push
sub
xor
ljmp
mov
les
or
imul
in
mov
test
lcall
neg
addr16
sub
in
popf
daa
add
nop
insl
xchg
inc
xlat
jno
inc
mov
incl
ret
dec
add
arpl
sbb
sbb
adc
movsb
pushl
insb
insb
add
imul
sub
and
add
fs
xchg
dec
fdivrl
ljmp
loope
pushf
das
mov
leave
negb
test
out
out
fildl
dec
test
lcall
test
iret
cld
mov
mov
ret
and
aaa
xchg
decl
cmp
sbb
jnp
mov
ret
or
push
divb
cwtl
jmp
cld
jg
decl
adc
jle
sbb
dec
sub
jne
push
call
pusha
adc
xor
mov
push
andb
sbb
rorl
decl
test
enter
xchg
mov
cmp
xchg
sti
cmpb
ret
dec
inc
in
pop
xor
xchg
xchg
mov
sub
sbb
pop
movsl
aas
adc
stos
jnp
jbe
mov
lcall
adc
sbb
or
jbe
enter
mov
mov
in
cmp
js
jnp
pop
or
mov
dec
pop
call
and
cmp
subl
fcmovne
adc
mov
fisubl
fnstsw
hlt
jns
xchg
mov
outsw
clc
ljmp
pop
dec
fadds
mov
xor
hlt
cmp
xlat
push
std
ljmp
pop
sbb
mov
sbb
inc
cli
das
pop
xchg
out
popa
ret
std
pushl
jmp
loopne
sub
add
addr16
stc
aas
divl
xchg
pushl
cmp
mov
iret
push
pop
mov
test
pop
insl
insb
dec
jp
cmp
cld
test
sarb
je
jmp
mov
je
jle
popf
push
cmp
adcb
decl
decb
test
jnp
sub
aad
es
mov
xor
mov
jo
in
cmpsb
jle
pushf
and
sbb
shlb
inc
mov
lret
stos
push
cmpsl
cld
jnp
data16
aaa
sub
add
mov
pop
hlt
inc
mov
fabs
xor
fidivrs
into
adc
inc
inc
jle
decl
stc
xor
loope
scas
js
adc
push
fisttps
sub
int
dec
pop
rcr
and
inc
cmp
cmc
ljmp
adc
jecxz
push
pushf
andb
aam
std
incl
push
out
adc
pop
cmpsb
push
arpl
aad
or
sub
adc
jmp
pop
loope
adc
or
dec
jo
sbb
sbb
inc
sbb
shll
test
push
dec
mov
scas
fwait
dec
out
scas
pop
scas
ljmp
cmc
into
inc
mov
push
sbb
or
das
mov
out
dec
xchg
xor
nop
scas
fsubs
xchg
sub
mov
dec
xchg
mov
pop
cld
aaa
inc
dec
rol
mov
jno,pn
fs
ror
pop
fcmovbe
outsl
clc
lea
mov
jo
jmp
mov
adc
mov
in
mov
mov
arpl
add
jmp
mov
sub
js
xchg
data16
sub
xchg
pcmpeqb
inc
push
push
jmp
outsb
mov
and
repz
push
cmp
lds
jne
arpl
jae
jge
cmpsl
mov
jns
push
in
xchg
leave
cltd
imul
mov
ret
dec
inc
xlat
cmp
movsl
jmp
mov
inc
in
lods
outsl
sub
lahf
dec
adc
mov
jg
mov
sbb
and
inc
out
fstl
dec
adc
push
xlat
out
push
jne
jle
fwait
push
fdivr
jmp
cmpsb
pop
decb
mov
pop
mulb
lods
or
loope
repnz
add
cli
sub
negb
xchg
mov
fstl
ss
out
inc
and
sahf
fists
jg
call
jl
fdivl
pop
jae
out
xchg
or
jbe
ret
ds
ds
xor
sahf
xor
jmp
ffree
int
inc
mov
ss
mov
sbb
pop
cmpsb
and
add
scas
xchg
and
call
cli
ret
dec
fwait
inc
push
mov
out
mov
xor
xor
mov
decl
fs
dec
es
leave
jge
push
push
add
cld
imul
dec
clc
add
rolb
aaa
decl
cmp
test
rcrl
cmp
daa
jp
dec
xchg
lea
mov
jp
jg
lea
push
stc
sarl
pop
mov
mov
pushl
cwtl
fbstp
data16
pop
mov
push
jo
lcall
mov
xor
xchg
cmpsb
fisubs
push
xchg
in
mov
push
jge
aam
hlt
pop
cmp
sbb
gs
cmp
clc
ja
xchg
jecxz
sbb
addr16
addr16
adc
ljmp
jmp
stos
imul
pop
mov
lods
cmp
cmp
loopne
cmpsl
lahf
repnz
int
rcr
sbb
mov
inc
push
mov
aaa
push
pop
cli
mov
fisttps
daa
pop
ljmp
lcall
and
fildll
jl
mov
cs
push
sub
jle
and
inc
xorb
adc
mov
popf
adc
stos
adc
lahf
xchg
insb
dec
or
add
inc
jmp
outsb
xchg
pop
in
pop
in
out
push
mov
push
fldl
sbb
ja
fwait
int
cwtl
jle
and
push
lcall
push
xlat
sbb
out
xchg
lahf
dec
mov
add
inc
mov
lcall
ljmp
and
add
mov
loope
out
cmp
xchg
mov
dec
add
sub
push
pop
sbb
add
inc
push
ret
jmp
jb
iret
mov
popl
sbb
pop
mov
add
leave
push
cwtl
in
icebp
sub
jmp
jo
dec
imul
mov
outsb
push
ss
subb
jnp
ret
pushl
mov
into
por
jnp
out
cld
inc
ja
add
inc
cmp
sbbl
or
pop
notb
sbbb
stos
addr16
roll
adc
jg
lea
shr
ds
cwtl
clc
dec
add
dec
jg
pop
daa
insb
push
mov
jmp
pop
dec
lret
push
adc
das
adc
inc
pop
jbe
stos
jne
repz
lret
cmp
push
ljmp
fs
sbb
and
int
fcomip
fimuls
cmp
ret
cmc
jg
push
ficomps
cld
mov
outsb
xchg
stos
stc
xchg
lcall
xor
pop
fldl
bound
pop
mov
mov
iret
cmp
psllq
mov
pop
idivl
jbe
cltd
inc
icebp
or
sbb
in
int
cmc
lcall
mov
cltd
pop
push
pop
mov
dec
or
ja
out
and
insb
push
add
dec
mov
xchg
or
jmp
stc
mov
mov
lret
push
sub
inc
and
mov
push
ds
jmp
ret
fsubs
rcl
lods
xchg
inc
aas
jmp
leave
mov
ljmp
out
stos
jg
mov
mov
test
mov
xchg
pop
je
xor
call
mov
pushf
in
adc
cmpsb
test
pop
mov
gs
pop
jp
fldenv
mov
incl
mov
fisttps
sbb
imul
push
popf
push
sar
fisttps
pop
xchg
ret
sti
jp
dec
adc
lahf
cltd
popa
xor
mov
insb
push
sub
mov
test
sbb
addr16
push
pop
mov
clc
ljmp
insb
inc
or
fidivl
movsb
mov
cmp
sbb
or
cld
call
mov
pop
xor
fcom
push
jae
adc
or
or
sbb
sub
ljmp
mov
fildl
pusha
push
out
clc
lcall
push
je
in
lcall
xchg
aaa
jecxz
cmp
mov
add
stc
mov
stos
lds
bound
ljmp
sbb
sbb
sbb
icebp
pushf
std
xor
mov
ljmp
jmp
inc
in
repnz
aaa
test
in
xlat
loop
data16
testb
repz
mov
das
shrb
cmpsb
mov
cmp
cld
jecxz
xchg
fwait
test
push
test
cmpsl
repz
mov
loop
call
scas
xchg
sbb
gs
leave
jmp
sbb
aad
mov
out
cli
out
inc
xor
cwtl
xor
mov
out
fsubr
add
sahf
xchg
cli
pushl
std
stos
out
dec
push
ror
movsl
ret
lahf
dec
jbe
add
or
lcall
outsl
mov
or
add
ret
addl
negb
jbe
movb
call
cmp
vdivpd
and
call
cwtl
xchg
and
lret
xchg
mov
fdivr
jmp
les
push
std
bound
inc
jle
mov
js
dec
push
scas
lock
lock
lods
ljmp
jg
dec
sbb
sub
add
subb
push
imul
jl
clc
stc
dec
cmp
ds
shr
fimuls
call
lds
popf
push
stos
sbb
and
add
pusha
fnstsw
and
stc
dec
jno
mov
fcoml
stc
inc
ljmp
out
rolb
mov
std
scas
dec
or
mov
pop
loopne
inc
dec
ljmp
pushl
add
mov
and
imul
mov
adc
xor
incl
insb
or
arpl
xchg
dec
push
dec
lret
jp
out
scas
jmp
scas
adc
ljmp
mov
call
mov
lahf
popl
xor
loope
dec
rcl
imul
or
call
jne
icebp
jns
adcl
das
and
cmp
mov
or
mov
std
mov
popf
adc
cmc
pop
out
into
inc
lds
outsb
or
dec
and
decl
popa
shrl
add
hlt
xchg
fs
xchg
inc
test
pop
xor
jmp
or
mulb
cmpsb
cld
scas
mov
mov
xor
add
jae
pop
ficomps
sub
cmp
call
clc
pop
push
das
lds
adc
add
imul
add
pop
inc
sahf
push
or
cmp
inc
dec
jmp
fisubrl
inc
daa
push
push
xor
cld
xchg
hlt
sbb
shlb
adc
enter
loop
movsl
ret
push
rolb
ja
sti
add
jmp
stos
xor
decl
dec
pop
add
sub
add
and
rcrl
sbb
sub
incl
ret
mov
add
xchg
repnz
cmpsb
xchg
dec
inc
into
xor
test
lcall
call
dec
dec
dec
pop
push
ds
push
lret
cmp
mov
push
add
test
inc
ljmp
rcl
mov
mov
out
stos
aas
scas
lahf
or
fwait
scas
mov
mov
loopne
vsqrtps
aaa
dec
gs
aam
mov
mov
ret
push
leave
gs
fsubrp
jle
dec
mov
pushf
repz
and
and
jmp
add
dec
jne
addr16
arpl
jns
dec
cld
int3
fnstcw
push
sbb
xchg
jmp
xor
lea
sbb
aam
xor
rcrl
ja
call
insl
xchg
pop
call
mov
aaa
js
lret
les
shl
xor
mov
mov
fildll
sbb
clc
idivl
std
int3
mov
cmp
ror
add
rcll
pop
fidivs
mov
frstor
repz
incl
sti
push
adc
sbb
and
or
gs
out
mov
dec
fwait
movsl
decl
int
xor
out
ja
xchg
push
sti
not
or
pop
cltd
cmp
negb
cmp
decl
in
pop
lods
xlat
add
test
dec
xor
aas
in
test
xlat
inc
jbe
dec
sbb
aad
lret
xchg
mov
cmpsl
sub
mov
fsubl
test
das
cld
jecxz
lahf
xor
push
dec
cmp
into
movsb
lret
pop
xor
call
dec
adc
movsl
lods
subl
popa
jno
ja
xor
mov
adc
decl
sub
pop
xor
inc
mov
and
adc
ret
out
scas
call
mov
pop
insl
out
add
add
insb
pop
orb
mov
idivw
cmc
scas
sbb
test
imul
mov
hlt
ljmp
out
nop
mov
je
push
jo
repz
adc
in
mov
xchg
shll
mov
mov
push
ljmp
pop
repnz
cmc
imul
push
jae
mov
mov
das
fwait
push
mov
cmpsb
rolb
cmp
jl
cmp
adc
cltd
subb
divl
push
inc
fsubp
cld
fmulp
hlt
mov
mov
lahf
nop
dec
repnz
jno
push
add
and
daa
fs
xor
incl
loop
jg
rcll
sub
inc
jne
and
xchg
adc
and
mov
hlt
decl
repz
cmpsl
out
push
xor
test
ret
or
dec
dec
fisubs
lcall
repz
lret
inc
iret
xchg
sub
leave
movsb
sub
jb
sbb
retw
ja
ret
sahf
inc
in
push
mov
xchg
mov
ljmp
arpl
add
xor
push
xchg
jge
repz
cli
push
outsl
jp
ret
and
mov
ljmp
jb
and
fiadds
subl
pop
loop
jne
jmp
or
adc
add
repz
and
cmpl
cmpsl
clc
adc
in
cmpsb
jle
add
shl
mov
dec
pop
rol
adc
mov
lock
bound
sar
xchg
enter
jmp
nop
lahf
popf
cmpsl
pop
or
mov
les
imul
add
jmp
sbb
test
or
test
inc
or
daa
adc
decl
lahf
out
jmp
xchg
enter
sbbb
sbbb
fdivl
xlat
xor
call
pop
push
enter
xor
jecxz
inc
mov
sarb
dec
std
pushl
pop
push
mov
xor
and
out
push
and
in
and
push
mov
aaa
xchg
aam
idiv
cmpsl
or
inc
xchg
inc
scas
int3
cmpsb
dec
xchg
test
ds
negl
xchg
incb
add
pop
push
das
xor
mov
pop
pusha
pop
dec
ss
cmp
lock
decl
shrb
add
mov
jle
dec
test
and
divl
fdivr
jmp
xchg
cltd
xchg
dec
addr16
movsl
es
add
pusha
clc
add
push
cmp
jp
xchg
jmp
pop
mov
pop
or
shrl
cmp
shlb
xor
fdivl
stos
daa
decl
and
frstor
idivl
outsl
sub
lcall
xchg
jmp
incl
daa
mov
or
pop
lcall
cmp
imul
fidivrl
insl
fcoms
mov
mov
jmp
out
std
int
in
dec
stos
sub
bound
xchg
test
les
xchg
loope
cmp
hlt
inc
mov
lret
jmp
inc
test
adc
cmpsb
adc
pop
ficomps
inc
leave
xchg
fnstsw
or
inc
cmp
jmp
aas
inc
xor
decb
pop
pop
pushf
jne
dec
sbbl
das
sbb
push
xor
push
inc
int3
loopne
fiadds
mov
sub
xor
mov
mov
test
pop
fisubs
fdivrl
test
push
cltd
clc
movsb
lret
or
jmp
mov
and
mov
xchg
sbb
in
ret
clc
mov
pop
insl
and
mov
cwtl
sbb
int
icebp
sbb
add
push
push
add
push
fiaddl
mov
mov
pop
test
mov
inc
rcpps
shll
mov
je
push
lret
stos
ret
fwait
outsl
cli
push
add
add
dec
mov
mov
fisttps
adc
sahf
mov
mov
mov
push
pushl
cld
repz
ret
cltd
cwtl
sbb
inc
test
lcall
lret
cmpsl
cmp
lods
mov
lcall
lret
mov
jo
les
ljmp
lock
out
aas
lods
push
call
adc
in
cmp
mov
loope
clc
sbb
dec
push
xchg
outsl
movb
popl
push
les
cmp
ljmp
and
pop
and
push
addr16
notb
test
lods
clc
xchg
leave
in
inc
repnz
mov
insl
dec
mov
adc
test
dec
mov
js
jecxz
push
incl
in
cmp
mov
aam
push
out
mov
aad
int3
jno
dec
imul
mov
in
xorb
ret
cs
cmc
flds
arpl
aad
repz
add
call
es
repnz
scas
mov
add
fbld
mov
in
push
imul
add
fs
into
mov
push
adc
outsb
mov
cltd
inc
mov
push
call
stos
inc
sub
pop
cmp
mov
mov
mov
mov
add
lcall
mov
mov
dec
insl
out
testl
call
cmc
lahf
movsl
jo
ja
inc
dec
mov
ljmp
stos
aaa
dec
inc
dec
adc
fcomip
mov
mov
jo
cmp
adc
rorb
pushl
adc
lods
arpl
jae
dec
or
cmpsb
lods
mov
xlat
inc
sbb
xor
call
loopne
stc
adc
insl
dec
cld
mov
test
rcl
subb
rcrl
fists
addr16
inc
aad
in
imul
clc
daa
mov
out
scas
push
jg
fistps
pusha
sbb
in
add
cmp
rcll
pop
gs
jecxz
sub
filds
mov
mov
dec
lcall
mov
loopne
cmp
call
cmp
fidivrl
push
js
xchg
adc
jle
sub
mov
pop
add
scas
or
call
loop
jbe
jno
inc
jg
clc
call
lret
int
cltd
jl
aaa
add
dec
adc
sub
fisubl
lahf
pop
sub
mov
jnp
and
leave
incl
mov
roll
outsl
sbb
and
jb
cli
lods
shrb
pushf
add
or
mov
testb
add
pusha
loop
mov
pushl
call
jmp
rcl
fistl
cmp
popf
xor
call
sbb
out
hlt
das
cmp
scas
push
gs
outsb
inc
xor
cmp
adc
mov
mov
in
mov
or
pop
aad
mov
and
lcall
incl
smsw
cmp
adc
lods
sub
lock
mov
push
pop
inc
imul
daa
xor
sti
mov
xor
decb
mov
shr
andb
call
xor
adc
fistpl
and
add
bound
mov
xchg
aad
insl
ds
adc
scas
and
and
cmp
lret
sub
inc
xchg
sbb
ja
adc
sub
pop
sbb
into
xchg
mov
lcall
pop
push
dec
rcl
sub
arpl
add
jge
and
int
mov
ljmp
popa
cs
shll
xchg
cmpsl
inc
cmpsl
pop
cli
fs
sahf
jl
fwait
push
xor
lds
and
pushl
andb
nop
jae
mov
fisubl
int
mov
or
pushf
fsubs
ljmp
xchg
sbb
lock
push
pushf
dec
sbb
sti
dec
push
xchg
cmpsl
jg
addb
call
pop
out
jae
xor
jb
fs
cmp
pop
mov
jg
inc
popf
push
sub
mov
mov
pushf
imul
ljmp
cmp
jmp
jnp
pop
aas
int
popa
xor
imul
sbb
pop
insl
mov
icebp
stc
sbb
jg
mov
push
mov
push
pop
cld
xlat
es
xchg
inc
sub
int3
xchg
push
sub
lret
cmp
adc
pushl
enter
ret
adc
add
das
mov
xor
fiaddl
lret
iret
xor
data16
mov
cli
xlat
mov
jecxz
loopne
or
ljmp
lods
divl
pop
dec
notl
inc
mov
and
cmp
test
idiv
imul
adc
adc
lods
shlb
adc
push
mov
outsb
xchg
out
add
pop
lods
stos
xlat
push
jo
sar
sbbl
cltd
mov
dec
sbb
jb
into
add
enter
mov
cli
jno
mov
loopne
cmp
testb
dec
fucomp
int
sub
repz
mov
mov
jg
and
or
lea
insb
fidivl
sub
pushl
jg
or
dec
subb
cltd
jns
add
jecxz
push
cld
lcall
push
lods
stos
jg
cli
dec
into
stos
sahf
dec
daa
mov
pop
stos
je
stos
xchg
and
bswap
insl
push
int3
mov
push
movb
xor
loopne
push
dec
mov
ljmp
fwait
sub
add
shll
lcall
scas
mov
jmp
jmp
mov
sbb
out
out
out
or
push
inc
cli
decl
cli
cmpsl
xchg
sahf
mov
ss
jge
test
push
hlt
inc
and
xor
jg
aas
outsl
cmp
les
imul
sbb
sbb
cmp
lcall
pushf
lock
mov
out
testl
jl
repz
dec
sub
inc
push
fistpll
pop
sub
push
inc
std
jbe
xor
fsts
xor
jae
leave
xor
cli
std
iret
sbb
jmp
js
pop
adc
and
scas
sbb
push
fmull
pushl
repnz
mov
sub
dec
test
xchg
lds
fwait
xor
and
cld
jmp
outsb
and
lret
roll
mov
pop
sbb
sbb
leave
pop
or
imull
jg
imul
setae
sub
xchg
dec
roll
neg
sub
in
test
jmp
ja
clc
lahf
jg
pop
mov
out
sbb
fisttps
fxam
or
cmp
jne
call
adc
stos
or
dec
ret
dec
jl
mov
sahf
or
inc
push
arpl
stc
clc
or
adc
xchg
aad
and
icebp
or
xorl
jne
jmp
cmp
imul
mov
dec
jbe
add
dec
nop
lods
clc
fbld
pushl
push
jl
pop
mov
sbb
pop
lods
bound
sbb
cmp
test
popa
leave
call
mov
js
xchg
pop
push
or
gs
orl
push
cld
mov
dec
adc
dec
enter
cmp
pop
js
ss
mov
cmpsb
pop
mov
jne
jo
mov
adc
add
loopne
call
cmp
cmp
sbb
sbb
les
xor
jnp
adc
push
push
adc
loopne
or
pushl
jle
sbb
out
je
lahf
loop
xor
shlb
ret
jmp
mov
fs
mov
arpl
and
mulb
inc
mov
gs
scas
push
cld
call
imul
dec
mov
std
inc
dec
clc
and
mov
ljmp
insb
pusha
push
push
insl
shll
inc
rorb
cmp
nop
dec
and
jp
out
cmp
fs
fldt
jno
cmp
and
fisubrs
sbb
scas
mov
aad
movsb
fldl
dec
jg
push
lods
push
xchg
mov
adc
add
js
aam
mov
mov
mov
mov
push
inc
or
pop
jp
dec
negb
mov
adc
cltd
adc
xchg
mov
mov
xor
pusha
sti
in
test
jecxz
cmp
xor
cmpsb
rcl
bnd
jge
jne
decl
sbb
les
leave
sub
jg
lahf
push
iret
sbb
lds
ljmp
adc
scas
cwtl
sbb
add
subl
out
insb
inc
jg
inc
push
pushf
iret
fwait
fwait
push
out
ss
lcall
pusha
jl
leave
adc
mov
call
repnz
push
push
cmp
push
jle
sbb
xor
push
push
test
xchg
push
sub
es
incl
mov
push
mov
xor
lods
lcall
add
cmp
std
jl
mov
aad
cltd
add
das
test
jecxz
test
ljmp
lcall
or
lcall
adc
pop
jns
scas
leave
cmp
scas
jge
fwait
ljmp
jmp
jae
fisubrl
lret
push
xor
xor
inc
adc
jnp
sbb
lea
mov
es
clc
push
leave
and
pop
cld
fsubs
jo
int
ja
mov
push
lcall
stos
pop
jmp
enter
mov
xchg
ret
lea
shrb
dec
mov
cwtl
testb
movsb
incl
fdivrl
push
mov
lods
adc
dec
pushf
mov
jns
pusha
sub
hlt
lds
iret
mov
out
adc
pop
in
cli
enter
out
into
and
inc
add
lcall
leave
stos
sub
cmpsl
mov
ljmp
mov
jmp
push
int
or
call
rcrb
and
inc
xor
pop
das
clc
mov
inc
ret
pop
repz
inc
in
xlat
jecxz
out
inc
aad
ljmp
fcom
movsl
repz
jp
pop
notb
stc
sub
fdivrp
pop
loopne
sar
pushl
sti
adc
scas
sbb
xchg
mov
popf
ja
rol
add
mov
xchg
cmp
js
xchg
out
lcall
inc
push
jmp
adc
push
movq
rorl
out
jecxz
xchg
xlat
sti
loop
cld
mov
enter
cmp
faddl
mov
je
insl
and
incl
imul
movsl
test
ficomps
push
leave
into
or
pop
popf
xchg
pop
cld
das
sarb
adc
aaa
lock
int3
xchg
imul
out
jns
mov
mov
in
mov
loopne
or
in
push
test
cmp
incl
pop
orl
push
lods
adc
lods
fisttps
sub
mov
dec
jge
lcall
adc
outsl
movb
mov
stos
jmp
sbb
fs
mov
lcall
inc
sub
or
mov
jle
jecxz
test
cmp
lahf
push
sub
pushl
mov
mov
jae
add
jecxz
xchg
xchg
shll
int3
enter
cmp
repnz
orl
leave
stc
xor
pop
dec
out
jae
dec
add
xlat
das
sar
push
in
jae
lods
rcl
mov
mov
jecxz
jno
incl
lret
pop
xchg
cmp
xchg
cs
pusha
jae
enter
in
jmp
sar
cmp
leave
jne
mov
sub
mov
push
jp
roll
add
pop
clc
lcall
mov
repnz
push
xchg
enter
enter
mov
dec
sarb
bound
mov
sbb
roll
xchg
and
mov
popa
jmp
int3
lds
in
xchg
outsb
dec
mov
mov
fs
xor
adc
mov
cmpb
xchg
loopne
in
sbb
and
repnz
ss
jbe
and
jmp
push
xchg
jle
call
sahf
stc
jae
push
outsl
adc
sub
outsl
adc
sub
pop
add
incl
inc
int3
popa
call
push
addl
adc
ljmp
repz
out
adc
mov
push
clc
push
mov
xchg
jo
push
cld
dec
add
xor
mov
lods
insb
pop
xor
pop
cld
out
mov
insl
popf
push
out
bound
xor
addr16
outsb
pushf
mov
scas
decl
fsubs
ds
push
jbe
fistl
int3
stos
cmp
bound
stos
push
jmp
add
mov
xchg
mov
push
mov
pop
bound
sar
idiv
jmp
cmp
stos
push
hlt
popf
dec
fimull
cmc
mov
sub
dec
add
jmp
test
and
mov
imul
scas
sti
xor
inc
or
mov
pop
je
xchg
imulb
call
dec
neg
ret
movsb
jbe
push
addr16
imul
adc
lock
pop
ret
rorb
add
pushl
and
push
pop
mov
in
add
lcall
add
mov
aam
adc
cwtl
das
sub
jbe
push
sbb
and
jae
inc
jp
stos
lcall
xchg
add
xlat
cs
int3
jge
shrb
enter
mov
mov
jmp
mov
out
push
pop
dec
and
pop
push
sbb
jg
jecxz
add
or
xchg
lods
into
add
bound
out
jle
cmp
ljmp
lods
sbb
test
stos
push
das
add
test
xor
lcall
sbb
pusha
xor
mov
aaa
sub
imul
je
push
pop
dec
jno
jmp
int3
push
mov
adc
ds
and
repnz
cmpsb
iret
jg
inc
fldenv
dec
mov
add
mov
and
jg
cs
outsb
push
ja
lcall
jmp
sub
cmpsl
dec
sub
push
dec
fldl
jns
addr16
inc
push
push
or
sbb
popf
push
mov
jge
mov
lcall
decb
jo
xor
pop
pop
pop
sbb
movsl
pop
mov
call
add
inc
pop
xor
movsl
lcall
lahf
push
jl
aam
decl
clc
mov
mov
cmp
lret
lods
or
sub
mov
mov
mov
decl
mov
pop
mov
mov
insl
dec
aam
scas
dec
lret
sub
push
inc
jmp
popf
test
stos
cmp
or
les
cwtl
dec
lret
add
cmpsb
xchg
pop
mov
cld
adc
mov
dec
sbb
xchg
sub
testl
ljmp
push
mov
fisttps
sti
or
mov
push
sub
mov
lcall
mov
and
mov
cmp
test
outsl
jnp
repnz
mov
or
inc
mov
sub
ret
xor
push
mov
leave
adc
stos
dec
jmp
and
insl
sub
sub
mov
imul
sub
out
adcl
cmp
cmc
mov
jmp
dec
or
dec
mov
insl
sarl
gs
dec
in
arpl
and
stos
ljmp
ret
cmc
int3
lock
sbb
stos
test
lret
adc
push
jbe
pop
jg
xlat
mov
mov
in
lods
jmp
and
jae
mov
movsl
sbb
pop
push
cmp
sub
lcall
add
lret
in
mov
aam
loopne
out
or
xchg
sbb
pushl
pop
jmp
mov
cmp
cwtl
leave
fbstp
leavew
imul
aad
push
mov
push
or
decl
popf
mov
or
mov
jb
pusha
rol
test
fidivl
jne
mov
jmp
fucom
hlt
mov
push
stos
mov
xlat
enter
adcb
jecxz
pop
xor
ds
inc
shll
cld
lcall
push
jecxz
insl
jns
sbb
inc
cmpsl
mov
and
clc
decl
mov
xchg
lret
mov
mov
sub
enter
jle
add
cwtl
dec
pop
sub
pop
jne
fadds
dec
jge
sbb
pop
jg
sahf
stos
mov
cld
mov
mov
xor
leave
je
dec
pushw
xchg
xchg
dec
bound
dec
das
cli
pushl
es
lea
inc
jns
hlt
inc
dec
in
or
dec
adc
in
ljmp
in
cwtl
pop
inc
add
andb
and
mov
mov
mov
push
das
sar
clc
xchg
mov
movsb
pop
inc
icebp
and
fisubrl
lcall
sbb
push
ja
outsb
ficompl
loope
pop
out
xchg
movsb
cmpsb
int3
iret
rol
pop
inc
and
or
push
inc
sub
cmp
dec
frstor
add
pop
lock
cmp
jmp
pop
push
xor
and
jg
addr16
ljmp
ja
ss
andl
mov
mov
dec
mov
out
in
sub
jmp
dec
mov
aas
push
test
jle
or
jnp
and
das
das
ffree
addr16
dec
adc
jno
rcrl
ret
xor
jbe
xchg
fidivrs
ljmp
pop
adc
call
clc
ret
fsubrs
sahf
dec
and
call
inc
jno
ret
jp
xchg
mov
push
jnp
xchg
pushl
jmp
xchg
mov
stc
add
xorl
ja
xchg
xor
jmp
adc
js
insl
mov
fisttpl
jne
mov
sub
decl
sbb
shll
mov
sbb
mov
or
pop
and
fisttps
or
push
cld
jmp
or
inc
or
inc
jno
add
adc
push
mov
je
pusha
lods
nop
ja
cmc
cld
mov
lahf
shlb
scas
adc
idiv
jmp
add
mov
dec
and
push
xor
addr16
push
cltd
out
jns
push
adc
loop
fdivr
mov
xchg
adc
sub
sub
or
repnz
pushl
adc
push
imul
jb
dec
stos
sub
pop
mov
pop
adc
fistps
outsl
fwait
cli
xor
enter
and
pop
cmpsl
mov
rorl
addr16
pushl
rcrb
push
sbb
xchg
push
cmp
or
je
ljmp
or
adcb
jae
repnz
mov
push
sub
jg
pop
xor
call
or
pop
call
inc
scas
cs
outsb
mov
lcall
fildll
fs
stos
je
popf
movsl
xor
loopne
push
mov
popa
sub
push
ljmp
mov
mov
sub
in
stos
enter
in
lods
mov
xlat
ljmp
sar
push
mov
fcoms
movsb
lcall
das
or
ljmp
adc
imul
dec
cmpsl
rcr
jb
data16
sahf
adc
and
dec
add
cmp
pop
pop
loope
sbb
adc
cmc
dec
gs
ljmp
insb
or
inc
jns
mov
and
filds
int3
push
sti
jecxz
mov
fisubs
adc
sti
mov
push
aad
daa
push
hlt
jp
adc
mov
loopne
push
outsl
loope
insb
jle
repz
ljmp
mov
test
sub
test
dec
shlb
decl
imul
sahf
push
push
xchg
ret
test
daa
icebp
je
cmp
and
pushl
sub
mov
mov
lods
xor
mov
dec
xor
push
lcall
jmp
insl
ret
icebp
sar
incl
sbb
push
movsl
mov
xchg
test
pop
jecxz
inc
cli
ret
lea
pushl
pop
shrb
jae
sti
fsubl
daa
into
cmpsl
xor
loop
pushl
cmp
xchg
lret
lret
loope
popf
jnp
in
fimull
ret
sar
call
jnp
dec
scas
jae
lds
pop
mov
and
add
mov
je
pop
push
shrb
incl
pop
divb
pop
pop
ffree
loop
divb
stc
mov
insl
ja
mov
incl
push
nop
pop
repz
add
arpl
sbb
add
dec
fisubs
jae
jmp
lcall
cld
movsb
xor
stos
in
rol
out
mov
out
sbb
inc
xchg
int3
mov
pushl
mov
jno
cmp
dec
jae
adc
cld
pop
add
or
and
cmp
incl
ss
in
fsubp
mov
push
test
jbe
popa
cmp
ror
rol
and
movsl
mov
push
arpl
adc
mov
cmp
sarb
xlat
aas
mov
iret
outsb
push
outsb
sbb
pop
les
push
pop
dec
sbb
pop
cmpsb
lods
cmpsl
sub
inc
cmp
decl
xor
test
int3
sub
sub
mov
aam
xor
nop
jmp
dec
push
jp
fidivrs
pop
insb
js
mov
adc
fcoml
sub
add
punpckldq
ljmp
inc
inc
ja
mov
call
icebp
inc
loop
fimuls
sar
mov
aas
es
inc
jb
pop
dec
mov
push
iret
cmp
in
out
and
lret
cs
out
je
in
jo
arpl
in
xor
daa
sbb
loop
mov
scas
xchg
push
call
repnz
xor
call
js
loop
add
mov
mov
mov
cmp
jmp
jno
ljmp
push
in
jge
sbb
push
std
loopne
repnz
xchg
and
lods
dec
xor
incl
je
incb
jl
dec
fisttpll
add
sub
xchg
or
mov
sub
clc
ljmp
sbb
rorb
cmp
ljmp
icebp
movsb
clc
into
sahf
xchg
aam
or
mov
push
aas
cmp
cmp
mov
pushl
aad
enter
mov
outsl
adc
sbb
out
and
jmp
decl
pop
daa
inc
sub
lods
mov
fldt
fisttpl
stc
out
push
ljmp
pop
mov
xchg
add
push
xor
sub
mov
cmp
sub
out
das
std
jmp
aaa
lret
call
out
aam
in
out
and
xchg
fs
jecxz
jecxz
and
xchg
push
insb
pop
sbb
or
mov
cli
pop
adc
sbb
lea
push
daa
cld
pushl
into
rorl
mov
or
jo
divb
add
psadbw
arpl
fcom
mov
adc
cmpsl
pop
xorl
cs
ljmp
cmp
jmp
dec
jbe
fmul
sbb
inc
xchg
imul
hlt
mov
fs
cmp
ljmp
jmp
mov
test
fistl
dec
mov
pop
cmp
pop
sub
mov
decl
pop
add
cs
jo
popw
xchg
gs
aad
enter
sbb
fsubl
inc
xor
dec
cwtl
in
imul
push
dec
les
or
scas
call
sub
mov
loopne
mov
dec
pusha
in
pop
pop
es
pop
fs
in
pushf
das
sbb
ljmp
add
mov
aas
mov
pop
inc
scas
negb
push
lods
out
add
xor
jmp
inc
dec
dec
bnd
mov
push
xor
pop
cmp
sbb
dec
lods
jge
and
incl
popa
pushf
leave
jl
lea
sti
bound
jmp
arpl
mov
shlb
lcall
cld
inc
dec
mov
lea
shr
popa
jge
adc
fbld
jl
pop
inc
call
imul
push
shll
hlt
addl
adc
cltd
cmpsl
inc
sahf
filds
lcall
enter
inc
hlt
inc
sub
or
mov
mov
jnp
add
and
das
jge
popf
jo
inc
mov
mov
inc
in
inc
push
push
movsb
mov
fbstp
mov
cmp
cmp
gs
enter
popa
jo
sbb
sub
fcomip
lock
outsb
and
inc
pusha
jbe
scas
cmpsb
mov
icebp
add
scas
int3
sub
jmp
in
and
decl
or
xchg
ljmp
ds
jg
mov
and
shrb
in
mov
fwait
jae
repz
mov
pop
in
pop
cli
or
call
xchg
mov
xchg
mov
das
inc
cmpb
or
sub
pushl
shrl
jl
inc
pop
test
push
subl
cli
add
lcall
cmp
add
call
xchg
in
ds
inc
and
ds
inc
jns
jle
cmpsl
cmp
ljmp
shr
mov
outsb
inc
bound
adc
jge
popa
mov
mov
ljmp
jbe
out
and
cld
jns
dec
test
outsl
repz
icebp
jno
int3
add
decl
push
int3
pop
and
push
push
arpl
mov
ljmp
lock
mov
adc
inc
rorb
xor
mov
adc
sar
shlb
push
mov
lds
ljmp
dec
xchg
test
add
and
xchg
mov
add
clc
push
clc
fldenv
xor
mov
enter
lahf
lcall
loop
loope
xchg
xchg
das
xchg
leave
into
cmp
loope
inc
fwait
pop
enter
lds
out
xor
add
out
push
leave
and
movhps
xchg
call
popf
nop
icebp
pop
test
xchg
jo
xchg
inc
dec
mull
dec
loope
ljmp
mov
cltd
dec
jmp
mov
adc
mov
repz
inc
jg
mov
loope
ljmp
push
xor
mov
test
popf
jne
jl
push
or
pop
pushf
dec
std
mov
jmp
stos
movsl
and
or
jb
mov
dec
xor
xchg
dec
mov
xor
pxor
sbb
dec
push
shll
int3
stos
or
and
adc
jne
sub
sub
stos
cmp
call
adc
inc
pop
push
imull
rcll
fnstenv
xchg
and
sbb
jmp
jge
jmp
jl
leave
ljmp
sbb
inc
mull
sbb
fcoml
movswl
imul
pushf
scas
ss
pop
jnp
inc
lea
jmp
jmp
mov
xor
sub
or
lock
or
jne
jnp
add
mov
dec
push
xor
jbe
inc
xchg
push
fsub
push
cmp
ljmp
inc
hlt
lds
jecxz
aam
jmp
stc
cmpsb
push
std
incl
je
test
or
cmpl
add
addr16
lods
gs
cld
stos
mov
sub
xchg
loopne
jecxz
call
pop
int3
mov
aad
icebp
dec
or
mov
or
loop
fcom
and
xlat
push
xchg
xchg
lahf
push
std
in
shlb
repnz
jmp
cli
adc
push
push
xor
xor
into
dec
mov
push
dec
icebp
mov
lcall
push
popa
pop
int3
cli
mov
xor
nopl
decb
lds
mov
jmp
test
push
popf
or
inc
fbld
stos
pop
xor
push
and
jmp
test
ffreep
jmp
iret
fidivl
cmp
decl
testb
int
jno
lcall
xor
idivl
jnp
xorps
jae
jecxz
fimuls
inc
rcl
mov
dec
out
repnz
add
push
add
ljmp
fwait
dec
decb
int
daa
repnz
jge
mov
fldt
ds
nop
les
jecxz
js
jmp
jb
inc
push
cmp
sbb
push
or
xchg
je
sbb
mov
dec
push
pop
orb
cld
add
shll
add
call
xchg
adc
xchg
es
movsb
sahf
mov
mov
in
cmpsl
fnstsw
lcall
incl
or
rclb
mov
test
cmpsl
or
decl
jge
pop
push
das
sub
ja
popa
paddd
sbb
data16
xchg
ret
pop
out
or
cmp
cmp
fisttps
aad
rclb
push
addl
add
cwtl
or
adc
mov
outsl
adc
push
jl
imul
lret
movsb
adc
shll
jl
rorb
std
int3
inc
test
aam
xchg
dec
and
clc
mov
mov
push
push
jmp
pop
sub
jae
mov
fildll
loope
nop
xchg
jge
cld
mov
inc
xor
inc
jg
pushl
test
out
dec
pop
stos
insb
mov
fisttpl
dec
sbb
popf
cmpsl
mov
jb
les
mov
andl
inc
pop
or
stc
jmp
sbb
mov
jmpw
and
out
sub
add
pop
loope
sbbl
in
call
das
test
andb
std
sbb
insb
jo
push
popa
movb
xchg
inc
add
les
pop
iret
mov
ds
or
pushl
cld
decb
mov
js
pop
xor
fdivs
dec
push
add
lcall
mov
xchg
inc
mov
stos
jmp
lret
dec
mov
loopne
ret
and
mov
jnp
add
lcall
mov
sti
outsl
pop
xchg
test
cmpl
outsl
push
aaa
mov
mov
test
or
out
imul
jecxz
bound
repz
dec
push
cmp
mov
fwait
push
lods
fldl
pushl
sbb
lret
inc
out
cmp
jne
xor
rcl
jle
arpl
or
inc
pusha
add
pushl
adc
test
sahf
mov
sbb
mov
dec
xorl
jmp
pop
cmpsl
mov
test
pop
cmc
mov
js
js
movsb
int
mov
push
push
cmpsb
jae
fdiv
sbb
jp
pushl
pop
and
add
cmp
cmpsl
mov
mov
mov
xchg
push
adc
pop
std
lcall
mov
cli
lahf
mov
imulb
push
js
fistpl
xor
call
or
jne
ret
and
sbb
dec
pushf
decl
push
test
fisubl
jge
lcall
test
jg
mov
inc
cs
add
or
movsl
std
or
ljmp
pushw
daa
xor
add
cmpsb
bound
jno
add
shl
xchg
lahf
incl
mov
mov
mov
fisubrl
cmpsl
fdivrs
fistpl
in
sahf
jb
or
ret
pop
cmp
daa
or
push
push
add
or
pshufw
scas
nop
out
xor
adc
fnstcw
aas
jge
and
xchg
out
and
cmpsb
lock
sub
or
push
and
pushl
cli
add
push
scas
lock
nop
xor
test
inc
pop
cmpsl
dec
insb
sarl
incl
sub
pop
adc
push
loop
cmc
pop
push
jle
mov
lret
mov
push
jg
jp
int3
mov
nop
das
or
cmp
sub
fwait
leave
push
call
lret
and
pop
pop
aad
xchg
jmp
mov
lods
mov
or
dec
shlb
jmp
movsb
and
push
enter
push
xlat
adc
mov
repz
xchg
call
dec
stos
sti
push
jo
ljmp
mov
xchg
xchg
sub
shlb
lea
lcall
jnp
and
inc
dec
jge
jecxz
daa
in
fildll
test
inc
and
xchg
sbb
fcomip
pushl
or
xchg
xchg
xchg
popa
dec
add
mov
ljmp
rorb
add
les
enter
das
sub
lods
insb
pop
cli
lcall
aas
jo
lahf
adc
pop
ss
sub
test
mov
lods
mov
cmpb
lret
sub
cmp
inc
lods
std
push
jo
out
aad
pop
std
dec
mov
popw
nop
xchg
bound
add
sub
push
xor
js
pushl
rolb
pop
outsl
cmpsb
xchg
cltd
jle
fs
pop
aad
add
dec
nop
pop
mov
or
xor
add
loopne
je
mov
jnp
call
add
movsb
cmp
mov
jmp
cmp
incl
adc
aam
sbb
sbb
repnz
sub
mov
outsl
sub
or
dec
xchg
cmc
mov
push
xor
push
ficoml
inc
mov
jl
cmp
xchg
push
lods
adc
cmp
jp
cmpsl
leave
mull
sti
nop
aaa
lods
jnp
loop
and
decl
test
sub
ja
jns
lahf
in
dec
shr
insb
cmp
add
not
cmp
mov
jmp
std
xchg
push
push
lret
sbb
lock
incl
cmc
dec
in
arpl
ja
pop
lock
pushl
imul
lret
lcall
and
adc
out
test
ljmp
mov
xchg
das
ficomps
mov
lret
cmp
cmp
mov
sub
lds
xchg
pusha
and
sub
stos
pushl
je
xor
fisubrl
push
cmp
lcall
call
stc
or
out
mov
mov
loop
cwtl
leave
push
sub
out
clc
ret
sbb
and
push
xor
inc
mulb
clc
mov
lcall
push
dec
xor
lods
sbb
add
out
or
dec
mov
enter
xor
mov
pop
je
pushl
jns
lock
pusha
js
or
push
jnp
mov
dec
popa
lock
test
lock
std
incl
inc
inc
pushf
push
bound
mov
leave
out
jae
or
imul
lret
outsl
cmp
sub
and
adc
call
mov
sbb
push
lcall
ret
add
insl
inc
or
test
fldenv
xchg
mov
jp
dec
mulb
push
lahf
loopne
mov
jae
sti
les
in
std
out
stc
dec
stos
push
push
xchg
das
mov
push
cmp
aad
or
insl
sub
mov
cmpsb
jmp
cld
fcomip
jmp
pop
js
add
je
mov
movsb
ret
push
out
incl
mov
bound
movsl
jbe
enter
int
jne
sub
xchg
cmp
sti
lcall
dec
sub
cmp
mov
pushf
xor
mov
push
dec
push
pop
and
fsubrl
int
push
cld
ss
lcall
jmp
gs
clc
mov
xchg
cmp
pop
add
popf
adc
mov
cltd
out
xchg
loopne
dec
decl
jg
add
xor
in
cmc
ja
mov
icebp
cmpsl
push
push
sahf
and
into
mov
aad
lock
adc
pusha
ret
popf
mov
lcall
mov
adc
outsb
aam
mov
adc
lds
mov
lcall
sub
clc
paddq
adc
mov
test
outsl
mov
xchg
and
and
xchg
xchg
xor
dec
mov
testl
mov
dec
and
sbb
mov
lods
xchg
mov
mov
pop
dec
arpl
fdivr
dec
out
ds
xor
pop
jbe
xchg
adc
adc
pop
push
inc
mov
cs
push
rcr
popa
cmc
call
mov
mov
loope
aam
cmpsb
rcl
inc
test
lock
dec
or
fcomip
push
sahf
dec
xchg
andb
test
aas
push
pop
loopne
jae
sub
mov
pop
incl
lods
mov
push
pop
sarb
dec
int3
shl
ja
fnstenv
and
pop
decl
sbb
mov
insb
cmp
push
outsb
mov
dec
inc
mov
sar
incl
mov
xor
cld
xchg
out
aas
outsb
iret
sbb
jmp
jg
cmc
xchg
fdivl
cld
fsubrl
or
push
out
fisubrs
xchg
cld
jmp
xlat
sti
fcmovnbe
jge
dec
pop
mov
insl
stc
push
mov
test
jg
inc
lock
mov
mov
sub
iret
pop
inc
or
push
and
daa
in
inc
aam
repnz
inc
or
push
or
dec
test
int
or
cltd
insl
inc
cltd
and
sbb
repz
test
call
aas
sbb
rcll
scas
cmp
into
outsl
aad
mov
cmp
ficoml
jg
sti
inc
add
sub
sahf
pop
mov
out
addr16
jmp
dec
sbb
js
imul
cmp
or
inc
aaa
add
mov
cmp
pop
lret
mov
adc
test
lods
int3
adc
inc
jg
mov
xor
fcomip
sub
adc
sub
and
int
xor
mov
decl
mov
les
xchg
xchg
sbb
and
jge
enter
stc
adc
add
jg
xor
sbbb
das
dec
inc
mov
idivb
mov
cmp
test
jmp
and
sbb
sbb
sarl
mov
xor
mov
jge
fcomip
stos
inc
pop
cmp
cltd
pop
insb
out
pop
fcmovnu
mov
xchg
test
js
push
jmp
push
push
leave
fidivrl
fdivp
sbb
mov
bound
lret
shlb
nop
jecxz
sub
jmp
and
pop
sub
cwtl
mov
fcomip
sub
or
mov
add
aad
outsb
scas
add
scas
data16
cld
lcall
fadds
mov
pop
in
jmp
jns
fisubs
pop
scas
cs
mov
mov
jge
cltd
imul
test
decl
mov
insb
test
sub
adc
hlt
insl
jb
cld
dec
xor
pop
inc
idiv
jg
outsl
add
dec
test
push
loop
je
pop
cmp
mov
dec
push
dec
lods
fdivr
decl
or
shl
dec
cs
cmpsl
cmpsl
ja
outsl
cmp
enter
cld
pop
scas
lea
incl
mov
xchg
sahf
jp
jmp
mov
inc
hlt
cmpsb
push
cmp
repz
decl
int
roll
aad
pop
add
in
dec
mov
das
jae
add
dec
pop
sbb
jle
adc
jp
jp
push
sti
inc
mov
lret
jg
daa
mov
push
adc
adc
repnz
jno
mov
call
mov
inc
decl
dec
enter
push
imul
pop
fisubrs
and
in
test
incl
push
xor
xchg
lret
push
sar
lahf
push
data16
jns
add
ja
incl
mov
inc
xor
mov
fidivs
jmp
incl
pop
adc
out
lahf
ja
ja
stos
ret
je
xchg
pop
test
dec
sub
test
xchg
ljmp
fsubl
popf
pop
jecxz
pop
in
adc
test
pop
or
pop
cld
pushl
pop
out
and
in
hlt
aam
push
add
pop
jns
sbb
xchg
cmpsb
inc
inc
push
or
push
or
outsb
cmpsl
cmp
mov
sbb
and
adc
icebp
mov
call
in
sub
jmp
test
hlt
out
or
shrb
not
xchg
fs
stc
mov
dec
mov
cmpl
pushl
arpl
mov
push
push
insb
add
sub
mov
mov
or
push
in
xor
dec
push
sti
add
into
mov
inc
ljmp
ljmp
dec
nop
fsubrs
sub
xor
loopne
mov
dec
and
jae
sub
or
jle
call
xchg
popf
inc
xlat
sbb
push
dec
cmpsb
mov
mov
and
or
aad
sbb
aas
lahf
add
popa
pop
outsl
cmp
mov
dec
jne
jle
xchg
pop
shr
jmp
add
adc
call
lods
and
pop
jae
out
ret
in
mov
push
jecxz
sbb
shll
dec
dec
jb
ljmp
das
push
dec
popf
stos
ficoms
mov
loop
sbb
cmp
adc
shr
jae
test
and
push
or
test
cmp
in
mov
adc
stc
ja
call
std
dec
xchg
into
mov
or
lret
jg
xchg
sub
sub
cmp
jmp
shl
test
mov
jae
or
mov
sub
pop
ds
rcrl
nop
cmp
xchg
or
out
cli
push
sub
ds
insb
push
sarb
mov
mov
mov
lock
inc
sbb
sub
sbb
stos
rolb
xchg
dec
stos
adcb
inc
out
pop
pop
fnstsw
add
fstl
loop
push
push
in
mov
fisubrs
mov
add
movsl
jge
mov
mov
and
mov
pop
dec
push
std
pushl
clc
lea
adc
mov
ret
inc
arpl
je
fnstsw
aaa
add
push
sbb
jb
je
icebp
gs
incl
cmc
xchg
mov
dec
mov
mov
jno
into
pop
lods
rcl
sub
call
scas
addl
add
xchg
jecxz
pushf
inc
movsl
js
push
xlat
xchg
lods
jmp
jne
ss
cmp
mov
das
jp
movsb
sbb
stos
outsl
nop
cmp
cmpsl
retw
lods
sbb
enter
sbb
jmp
dec
ret
ffreep
dec
xor
hlt
mov
or
arpl
popa
push
jmp
inc
call
fwait
jmp
fbstp
fs
jno
in
test
gs
in
cmp
ljmp
inc
lock
rcll
mov
je
and
aas
or
outsl
insl
hlt
dec
sahf
pushl
int
dec
pop
adc
out
or
in
dec
test
mov
sar
push
xor
push
js
insl
pop
dec
mov
mov
cli
pop
pusha
lods
loopne
inc
sar
lcall
int3
sti
ret
lcall
add
lds
addr16
mov
inc
or
jne
ljmp
cmp
push
ja
jmp
loope
imul
leave
outsb
xchg
mov
sbb
push
and
daa
push
ljmp
jmp
sti
test
mov
in
add
add
rcrb
jmp
mov
aaa
stos
adc
into
notl
test
jecxz
sarb
movsb
incl
jl
xor
push
std
mov
nop
loopne
mov
cltd
aaa
push
pop
sub
fwait
inc
je
cmp
movsl
mov
push
testl
loopne
lea
movsl
mov
cmpsb
movsl
pop
mov
je
sti
incl
xchg
push
loopne
mov
sub
mov
xor
mov
dec
cli
outsl
mov
dec
lds
loope
sbb
aaa
xor
mov
or
adc
mov
sahf
xchg
into
jbe
decl
ljmp
and
out
mulb
xchg
loopne
in
in
subb
dec
push
int
sbbb
mov
push
into
fs
inc
mov
loopne
pop
movsl
incl
xor
or
pop
pusha
inc
cmpsb
int
iret
aad
pop
fs
xchg
hlt
mov
pop
aaa
jg
call
inc
pop
lcall
mov
sub
outsl
lret
std
aas
lcall
jl
gs
pushf
stos
mov
jle
ljmp
sbb
cmpsb
imul
or
ljmp
pop
out
push
insl
cmp
psubw
call
into
cltd
pop
hlt
xor
fadds
sbb
add
roll
pop
lcall
decl
stos
sbb
stc
aad
or
pop
xor
or
das
jne
insb
loope
add
imul
decl
out
xchg
dec
shlb
push
int3
shlb
ds
xlat
adc
loop
into
sub
inc
mov
push
nop
jae
xor
nop
popf
push
gs
cmp
arpl
clc
sbb
aaa
std
incl
loopne
ss
scas
add
punpckldq
fbstp
xor
faddl
add
lcall
jmp
daa
mov
pop
push
out
aad
cmp
jp
sub
dec
enter
inc
pop
out
add
movsb
sarb
ret
out
mov
popa
cld
lret
xchg
incl
inc
and
mov
int3
xor
lret
decl
mov
out
test
xchg
subl
sbb
popf
fidivl
adc
add
ljmp
or
lahf
mov
xchg
mov
push
mov
rorb
js
cwtl
imulb
nop
test
stos
out
aaa
xchg
pop
add
movsl
sbb
inc
cmp
mov
mov
inc
jno
cmpsb
or
sarl
and
mov
xchg
cmc
loop
lcall
pop
inc
mov
mov
inc
clc
sub
xor
sbb
cwtl
call
call
sbb
mov
sti
imul
xor
pop
int3
pcmpgtw
xchg
daa
pop
out
pushl
ret
scas
push
mov
push
stos
mov
xchg
or
arpl
xchg
push
and
mov
add
jmp
mov
mov
pop
push
jecxz
mov
push
jg
loopne
neg
inc
repz
sub
cmp
mov
mov
popa
push
dec
push
arpl
sbb
xlat
ljmp
cmp
mov
fisubs
jo
imul
aad
stos
mov
cmc
enter
das
clc
call
les
push
loope
das
lds
popf
scas
push
or
sti
inc
fsubp
divb
je
jne
ljmp
ljmp
pop
sti
sub
sbb
jno
outsb
adc
fwait
add
test
hlt
sbb
adc
mov
mov
mov
add
push
ljmp
push
hlt
mulb
ret
inc
sub
outsl
xchg
mov
sbb
imulb
call
mov
dec
and
inc
inc
or
jns
in
inc
inc
loop
test
call
std
mov
ds
mov
insl
push
movsl
ljmp
xchg
lcall
aam
sub
pshufw
leave
gs
xchg
pop
movsl
cs
push
dec
sbb
pop
inc
gs
pop
pusha
loopne
jo
jle,pt
dec
push
push
js
cmp
sar
iret
mov
out
in
pop
mov
sub
dec
dec
pusha
adc
cmp
xor
sbb
pmuludq
lcall
dec
scas
into
xlat
std
xor
mov
cli
lods
adc
sbb
push
decl
jo
mov
jmp
mov
js
sahf
jle
and
lea
jmp
xlat
arpl
xor
stc
sub
pop
sti
dec
shll
insb
mov
sbb
pop
cwtl
ljmp
sbbl
lods
mov
and
jmp
xchg
dec
add
adc
ljmp
repz
scas
xchg
movsl
out
or
jg
orl
lods
loop
cmp
pushl
cld
push
xchg
inc
cmc
fcmovu
imul
decb
call
out
fisubl
push
fwait
lcall
call
aaa
mov
xchg
push
fimull
sahf
pop
fcoms
jl
in
ss
mov
pop
js
shl
lcall
stos
das
pop
lahf
ja
pushf
adc
inc
test
add
sub
xchg
xchg
sub
int
lea
ret
adc
or
inc
out
xchg
ljmp
fistl
xor
sarb
lods
out
and
decl
mov
adc
mov
dec
jg
mov
sahf
icebp
cmp
mov
inc
lods
add
sbb
outsb
xchg
xchg
xchg
adc
mov
mov
mov
jnp
and
lods
mov
add
mov
popf
insb
arpl
jecxz
repz
sar
ljmp
pop
jp
or
inc
bound
repz
movsb
inc
mov
jg
pop
in
cli
mov
or
mov
add
imul
aaa
scas
sti
or
mov
lods
sub
sub
mov
xchg
out
testb
push
test
pushf
sub
jg
lcall
push
inc
cli
jo
pop
repz
scas
push
loopne
add
inc
sbb
xchg
add
stc
in
mov
bnd
pop
dec
dec
pop
pusha
cmc
shl
pusha
jmp
adcl
xchg
das
lret
aas
xchg
xor
mov
mov
repz
ficompl
dec
outsl
jg
adc
test
sti
or
icebp
push
in
cmpsb
pop
clc
lret
lcall
and
clc
lods
fidivrl
test
mov
rolb
xchg
dec
push
mov
mov
mov
fcoml
lahf
or
add
imul
out
js
dec
ret
mov
movsl
ret
push
aas
imul
xchg
out
ds
cmp
test
or
push
xchg
fwait
pushf
pop
pop
pop
cmp
decl
das
mov
or
and
cmp
lret
push
add
mov
dec
popa
dec
hlt
ljmp
clc
cltd
arpl
fwait
outsl
push
cli
into
xor
xchg
lods
pop
stc
fcmovnb
shll
sbb
lcall
pop
clc
aam
dec
and
inc
mov
fisttps
cmpsb
xor
cmp
iret
add
ljmp
xchg
ss
push
or
call
int
filds
push
in
lahf
push
sbb
xor
lea
xor
icebp
xor
pop
aad
clc
decl
inc
or
add
mov
ja
sar
je
pop
addr16
lcall
loop
or
xchg
mov
das
fcompl
rcrb
cmp
adc
jmp
pop
shll
mov
decl
lret
je
cmp
sub
incl
ljmp
cmp
shrb
mov
in
adc
jmp
incl
fsubrs
xchg
dec
push
outsl
push
sti
mov
mov
push
mov
and
stos
sarl
xchg
cmp
pusha
jno
fildl
push
mov
enter
dec
jecxz
mov
push
lock
call
sbb
cmp
roll
mov
push
add
pop
sub
mov
ds
add
jnp
mov
lcall
into
xchg
xchg
or
movsb
cmpsb
pop
adc
add
mov
mov
adc
decl
pop
lahf
or
insb
cltd
bound
inc
sarl
jno
inc
mov
stc
adc
movsb
sbb
inc
and
addb
mov
das
sub
in
sbb
inc
movsl
add
cmc
dec
pushf
inc
int
lcall
iret
js
gs
sbb
mov
and
push
mov
cmpsl
sub
das
sar
imul
les
nop
hlt
pop
mov
je
fnsave
incl
sub
iret
xlat
dec
das
fsubrs
jmp
fldl
jb
pop
daa
fldl
cs
jne
push
pop
mov
jmp
jae
or
jg
mov
xchg
mov
lahf
aad
cmp
call
adc
stos
or
mov
cli
cmp
stos
cmp
lahf
push
out
or
sbb
dec
xchg
adc
sarl
aaa
enter
ss
lret
test
add
mov
punpckhbw
and
mov
push
cld
mov
sub
pop
push
sbb
decl
push
mov
adc
ret
aas
push
dec
jb
cmp
mov
xchg
in
cmp
jbe
data16
cmpsb
std
jg
in
pusha
lods
mov
add
inc
dec
cmc
int3
mov
out
sbb
ret
mov
push
cmp
leave
and
push
out
popf
sub
int
dec
lock
mov
xchg
mov
fs
cwtl
mov
daa
cmp
mov
fwait
and
imul
sub
push
jno
cmp
sbb
dec
fcomip
aad
mov
mov
outsb
into
leave
or
inc
test
add
or
decl
out
pop
jl
lcall
ljmp
push
sbb
inc
inc
test
mov
or
pop
incl
std
call
std
aas
movsl
fcmove
gs
push
scas
and
lds
pop
cli
call
adc
clc
imul
cld
call
loope
movsb
les
cmpsl
inc
mov
xchg
divb
lcall
inc
mov
and
xor
adc
xchg
shll
xor
sti
push
cmc
into
pop
dec
lods
cmp
jmp
jmp
or
mov
or
pop
mov
stos
push
in
push
xor
mov
cmp
enter
ja
jg
sti
dec
jae
in
sub
test
rclb
and
ljmp
xchg
adc
dec
push
dec
loopne
inc
jno
push
and
push
or
ljmp
lahf
fdivl
inc
leave
ljmp
jnp
or
jmp
cmpsb
call
loopne
adc
push
imul
dec
lret
scas
sub
mov
or
outsb
sub
add
pushl
outsl
shrl
call
cmp
loopne
push
lock
push
inc
cmp
jb
out
cwtl
cmp
addr16
pushl
adc
leave
cmp
lcall
pop
and
lahf
cs
xchg
sub
sete
mov
lcall
lret
inc
mov
lods
pop
lret
dec
cmp
outsl
pop
dec
pop
cmp
lcall
push
jb
sub
mov
jmp
mov
sub
fimuls
pusha
sub
decl
dec
sahf
loopne
fucomi
and
cli
xchg
das
idivb
jg
mov
push
adc
xchg
das
test
cwtl
icebp
adc
clc
cs
arpl
dec
call
out
cli
push
hlt
push
insb
xchg
fcmovnu
mov
sbb
andl
jo
add
xor
incl
ljmp
adc
stc
mov
std
scas
mov
pop
push
ljmp
fwait
popf
imul
sti
jmp
and
jmp
arpl
sbb
mov
jg
dec
lret
aas
out
nop
jnp
sbb
les
nop
pop
add
shll
ret
mov
les
decl
loop
in
clc
rol
mov
inc
movsl
sub
inc
xchg
pop
insl
addr16
add
add
pop
and
rclb
fsubrl
xchg
mov
test
inc
mov
std
movsb
pop
jae
inc
push
inc
sub
fcmovnb
sub
flds
or
icebp
testl
and
jb
dec
dec
xlat
push
mov
push
adc
ljmp
outsb
add
loope
ljmp
xlat
xor
mov
or
jne
adc
shrl
test
pop
push
test
sub
lcall
xor
hlt
ljmp
sub
xchg
mov
mov
jge
mov
jg
dec
ret
push
dec
xchg
clc
mov
sbb
xchg
lock
xor
lcall
xor
dec
or
bound
leave
add
push
sar
inc
dec
pop
out
fisttpll
mov
push
pop
fcmovnb
roll
test
pop
ja
fnstsw
inc
jp
xor
sbb
sub
incb
cmpl
pop
jne
leave
jbe
sub
sub
push
movsb
mov
jne
lcall
scas
sti
inc
aas
movl
sub
fcoms
sub
cli
out
and
sbb
scas
lea
push
imul
rcll
sbb
xchg
cld
push
push
or
sbb
lcall
xchg
jno
xor
ss
jae
or
ds
jge
nop
sub
call
mov
mov
outsb
bound
dec
fidivrl
daa
arpl
xchg
and
mov
push
ja
pushl
sub
cmc
dec
ret
in
es
dec
sahf
jle
je
sbb
arpl
dec
and
out
clc
int3
imul
loope
out
and
adc
push
pop
stos
sbb
sbb
jmp
mov
mov
jne
mov
popa
or
push
out
adc
xor
jb
and
cld
xor
jmp
lahf
dec
adcb
push
out
mov
imul
gs
orb
pop
lods
lret
ret
dec
call
mov
jne
fnstsw
mov
mov
and
push
ss
js
jp
in
push
js
call
mov
xor
in
je
and
mov
shrl
mov
out
and
xor
xchg
js
and
cmp
int3
negl
mov
dec
dec
in
call
inc
cmpsl
test
mov
jb
cmc
xor
xor
jle
hlt
call
jmp
sub
jge
movswl
cmp
icebp
lcall
incl
adc
stc
incb
jl
push
xchg
pop
pop
sahf
cwtl
fbld
jmp
lret
dec
in
sub
sbb
into
fistpl
orl
xor
mov
and
xchg
and
js
adc
loopne
add
mul
or
or
pop
popf
stc
mov
xlat
mov
cli
jl
push
pop
cmc
scas
push
jae
adc
xor
mov
push
ljmp
pushl
jb
push
out
adc
shll
stos
rcrb
stc
xchg
cmp
incl
cld
ret
shrl
xchg
adc
push
dec
inc
pop
inc
mov
sbb
dec
call
pop
repnz
xor
in
rorl
movsl
dec
sub
dec
sbb
out
cli
incl
popa
mov
fwait
ret
popf
xor
xor
cmp
ljmp
aaa
and
lcall
jmp
mov
in
icebp
test
and
incl
cli
dec
outsl
stos
outsl
andl
sub
or
pop
mov
call
jb
pusha
or
push
jmp
mov
and
rcl
push
clc
cwtl
push
or
fdivl
xchg
repz
fwait
or
aaa
xchg
add
mov
sbb
sti
inc
mov
lcall
aaa
out
xlat
bound
pop
repz
fst
push
cltd
stos
xchg
incl
adc
lock
or
lods
mov
mov
pop
pop
pop
iret
aas
inc
in
es
mov
test
addr16
push
ret
pusha
xor
roll
mov
rcrl
sub
and
mov
in
int
mov
jns
mov
sti
mov
stc
sub
pop
xor
jmp
dec
test
arpl
dec
into
ret
jae
out
push
dec
jo
dec
addr16
out
call
ja
in
sub
out
loopne
stos
inc
nop
roll
dec
mov
mov
bound
mov
fsubl
cli
push
icebp
push
cmp
sbb
js
push
dec
sti
xor
aaa
jbe
in
lods
mov
jecxz
bound
jae
ljmp
mov
nopl
cltd
and
ficompl
and
mov
sti
xor
call
out
sub
mov
pushf
dec
jnp
lock
jne
dec
xchg
adc
call
and
adc
or
jne
hlt
int3
pushl
sbb
ja
jno
mov
inc
push
pop
aaa
ret
imul
push
dec
cmp
jmp
out
sub
push
xor
mov
adc
jbe
push
inc
jb
add
sub
push
cmpsb
pop
ja
cmp
clc
call
testl
mov
aad
xchg
add
stos
insb
ljmp
stos
mov
movsl
jne
aad
pusha
lea
and
jl
call
adc
loopne
daa
aad
in
cld
and
and
pop
lock
fistpl
push
xchg
and
lds
dec
loopne
incl
gs
inc
and
push
sbb
mov
or
pop
das
inc
aam
pop
subb
sub
call
mov
ds
adc
test
inc
inc
imul
pushf
sub
or
dec
mov
fiaddl
xchg
stc
test
in
daa
pop
sarb
push
mov
std
jecxz
repnz
idivb
jns
idiv
dec
jnp
in
lods
cmp
es
adc
or
ror
pop
out
cmpsl
mov
pusha
out
sbb
push
popa
lods
sbb
cmc
xchg
push
lahf
mov
adc
push
inc
fldpi
inc
jmp
cmpsb
add
fcmove
pushf
xchg
inc
cmp
or
dec
sbb
xchg
xorb
mov
dec
xor
push
rcr
sbb
add
and
inc
mov
inc
lret
jmp
fsubs
out
jno
pusha
dec
imul
dec
mov
jmp
cmc
imul
sarl
and
cmp
aaa
sub
mov
decl
in
icebp
pop
insb
mov
and
mov
sbb
xchg
call
jbe
push
out
iret
pushf
fldl
jge
mov
cld
sahf
lea
std
mov
sahf
lcall
call
xor
jae
inc
repz
insb
pop
sub
fistpl
addr16
dec
add
fiadds
mov
pushf
jno
jb
cmp
fadd
leave
dec
xor
cmp
ljmp
and
sbb
inc
mull
pushl
insl
pushf
adc
cmpsb
inc
mov
cld
pop
je
into
clc
xchg
cwtl
daa
movsb
icebp
in
jl
dec
sbb
ja
lds
push
int3
rorb
call
adc
push
inc
in
cld
popa
sbb
imulb
sbb
mov
mov
lcall
rcrb
daa
out
es
enter
pop
inc
inc
sub
pop
decl
jnp
mov
xor
push
pop
xor
mov
dec
in
test
sub
jae
ljmp
call
outsl
in
push
cmp
iret
sbb
adc
std
dec
loopne
mov
mov
in
es
sbb
ret
cmp
dec
lods
enter
fimull
cltd
xor
jmp
sar
push
ss
lods
mov
insl
popa
clc
sub
pop
pop
pop
fwait
mov
mov
inc
stos
or
dec
mov
mov
dec
lcall
iret
testb
add
lods
mov
dec
add
xor
push
inc
fstpt
dec
adc
dec
je
pop
mov
sbb
sbb
lea
ret
mov
fcoms
dec
cmpsb
xor
pushf
cld
int3
cmp
lret
test
sbb
jmp
clc
xor
jg
adc
cld
xchg
sbb
in
pop
pop
xchg
aaa
clc
mov
mov
js
cmc
movsb
push
mov
mov
add
in
xchg
pop
add
push
cltd
adc
sbb
cmp
movsb
dec
addr16
not
imulb
mov
mov
jmp
pop
and
dec
mov
ds
jle
cmp
cmp
int
mov
dec
inc
ss
or
dec
add
jmp
sub
cmp
jno
push
sbb
std
cmp
imul
xor
stos
mov
dec
test
mov
sub
pushl
jmp
out
lcall
sbb
inc
cmp
mov
mov
fistpl
jb
lcall
adc
sbb
mov
xchg
fwait
or
pushf
in
sarl
cmpsl
dec
pop
pop
mov
pushl
jb
mov
adcb
cmp
inc
add
cmp
movsb
cli
mov
lcall
ljmp
cmc
and
daa
lcall
data16
stos
out
ljmp
or
ds
ror
fcmovne
pop
imul
lahf
dec
dec
int
push
and
call
push
add
loop
lock
in
dec
fists
js
cli
jne
pop
es
or
outsb
mov
imul
mov
adc
dec
lahf
popf
cmp
push
and
cld
jmp
sub
jg
out
add
sbb
out
mov
and
adc
sub
jns
out
gs
fildll
cmp
scas
clc
push
mov
mov
fiadds
push
adc
mov
push
push
jge
xchg
mov
and
lret
clc
dec
jl
dec
lods
imul
add
jl
mov
mov
mov
jo
cmp
jb
or
stc
ss
ljmp
mov
push
mov
mov
fiadds
push
scas
pop
pop
add
pop
lock
jmp
sarl
cmp
clc
sbb
sub
out
lods
adc
or
loopne
movsb
fwait
jl
xchg
lea
loopne
stos
les
outsb
outsb
cli
in
dec
and
add
call
stc
inc
push
movsb
fiadds
ror
in
sahf
cmp
jl
push
pop
repz
jg
sub
std
ljmp
lods
and
push
cld
cs
or
out
js
sub
xor
repz
xchg
imul
jmp
cmc
or
orl
aam
rcr
stc
adc
stc
sub
subb
adc
popf
decl
ljmp
jno
je
dec
sub
mov
aam
stc
std
jmp
hlt
imulb
rcll
xor
pop
lods
or
or
aad
stos
out
pop
and
ljmp
decb
sti
in
rcr
xchg
loope
ret
jae
add
xchg
popf
call
push
lock
aad
iret
scas
imul
adc
lret
xor
ret
dec
out
call
dec
cmpl
dec
outsb
pushf
lods
add
cmp
or
pushl
pop
movsb
scas
mov
xchg
addb
xchg
stos
cmp
inc
and
cld
sti
incl
pop
or
mov
add
mov
mov
int3
pushl
test
in
add
dec
add
movsl
jns
or
in
sbb
pop
incl
out
cld
adcl
inc
ss
in
mov
push
jo
rcrb
stos
inc
sub
sbb
in
sub
jmp
lret
inc
mov
movsl
jl
ljmp
inc
int
push
aas
push
pop
insb
dec
sbb
nop
daa
or
sbb
incl
mov
pop
mov
pop
bound
push
or
in
aas
imul
es
ljmp
sbb
out
mov
ja
cltd
loope
mov
in
adc
imul
jl
incl
mov
repnz
mov
cli
cs
and
or
mov
adc
inc
jl
xor
lcall
lcall
les
lret
rolb
pusha
add
ret
adc
sbb
popf
outsb
ljmp
xchg
lods
inc
xor
pop
mov
fwait
loop
push
xor
cltd
sub
lcall
pop
sbb
arpl
mov
jmp
sbb
mov
sbb
ljmp
loopne
cmpl
outsl
or
sub
adc
inc
sbb
push
sti
sbb
ljmp
pushf
lods
or
loope
cmp
mov
pop
jo
aad
mov
das
decl
mov
arpl
mov
mov
xchg
xchg
add
fcoms
add
push
add
adc
jle
add
jnp
addr16
add
push
or
mov
lods
arpl
sarl
pop
fadd
cmp
into
ljmp
incl
cld
and
sbb
ret
inc
xchg
js
test
add
push
mov
insl
xchg
cmp
cmp
std
pop
out
mov
push
movsl
shrl
inc
adc
incl
daa
xor
andb
out
ret
in
and
adc
repz
stos
scas
lret
mov
push
mov
push
ficompl
imull
sar
adc
sub
aas
sbb
scas
sub
push
push
lock
push
dec
xchg
ljmp
xlat
jo
fcmovnbe
stc
repnz
int
ret
cmc
call
ja
lock
lret
stc
test
popa
add
sti
aam
ss
stc
popf
incl
or
mov
xchg
cltd
jnp
enter
dec
push
arpl
nop
lret
pop
sub
incl
sbb
xchg
pop
xor
pop
call
sub
and
aas
fstps
ljmp
pop
jmp
pusha
add
hlt
iret
inc
fs
xchg
call
xor
mov
sbb
sbb
fs
jl
pushw
adc
nop
into
in
xor
sbb
inc
jmp
or
movsb
add
icebp
mov
jmp
jb
sub
mov
aad
je
cld
call
test
dec
add
das
sbb
pop
cmp
cld
call
jo
xorb
repz
xchg
inc
shlb
lcall
push
aad
inc
mov
inc
imul
push
rcrb
push
fnsave
adc
insb
leave
xor
inc
aas
cmp
or
mov
std
jg
std
fwait
push
adc
xor
or
dec
popa
leave
aam
jg
pusha
push
cmp
pop
les
pop
xor
sbb
push
call
cmpsl
push
mov
popf
fistps
fimull
filds
pop
mov
incl
call
in
test
mov
loop
mov
push
jg
rcr
mov
call
cmpsb
jb
jns
out
sbb
cmp
mov
pop
xchg
pop
push
push
int3
and
in
clc
pop
cmc
enter
shl
dec
jbe
jne
adc
jp
inc
pop
imull
ljmp
lahf
jp
lahf
cmp
pop
aaa
pop
ljmp
inc
or
jae
mov
mov
sub
incl
mov
xchg
mov
in
inc
push
xchg
inc
mov
in
out
out
enter
lcall
ja
shl
pop
push
adc
insl
mov
ss
loope
loopne
mov
test
add
ret
push
sahf
clc
dec
lahf
jbe
cmp
into
test
push
mov
sub
xor
loopne
sub
push
adc
ljmp
pushl
das
inc
mov
aad
xor
fdivrs
sti
jl
cmp
stos
or
cs
es
xchg
addl
adc
popf
or
mov
in
pushl
jae
xchg
jne
and
sub
leave
or
cld
xor
mov
lcall
push
cld
lock
push
push
mov
cwtl
test
iret
pop
mov
sub
jecxz
jo
ret
cmp
jp
es
mov
jp
int3
add
inc
dec
sti
push
xchg
jb
mov
mov
call
pop
sub
adc
lret
push
adc
jae
cmp
loopne
mov
adcl
pushl
stos
daa
in
cmp
pop
and
and
es
mov
inc
push
ror
mov
ljmp
js
int
mov
adc
test
xor
jecxz
call
push
sar
jmp
mov
out
jecxz
ror
mov
mov
mov
loopne
fdivrp
jg
shlb
mov
lahf
push
sbb
pop
xor
push
fldt
mov
mov
mov
movsb
xchg
aaa
incl
es
leave
pop
lds
sbb
dec
cli
add
xchg
loope
mov
inc
pop
mov
clc
mov
ljmp
shll
lock
jo
mov
sub
dec
loope
jmp
cmp
dec
stc
pop
sbb
push
repz
aas
xchg
jg
inc
nop
cmp
leave
in
xor
insl
mulb
clc
push
xorl
enter
add
xor
lahf
movsb
xor
add
ret
pop
jne
icebp
push
pop
enter
add
ja
sbbb
push
enter
or
xchg
lea
xchg
mov
into
faddl
in
push
or
outsl
clc
incl
jp
rcll
push
dec
subb
cld
js
sub
insb
mov
out
jmp
notb
mov
mov
nop
loop
lea
ror
cmpsb
das
mov
lods
iret
and
std
jnp
bound
push
icebp
xchg
lock
mov
call
dec
les
scas
dec
int3
push
ljmp
scas
test
shrl
test
lret
rcr
sti
and
fsubs
pushl
outsb
jae
ja
push
push
sbb
xor
or
ljmp
mov
pushf
dec
ret
and
push
out
mov
xor
xchg
ret
inc
loope
clc
call
loop
aad
mov
sub
lds
pop
ss
cld
pushl
dec
mov
js
pop
sti
jo
fisttpll
xlat
add
pop
sub
call
and
sub
dec
add
lds
cmp
jp
rolb
fidivl
popl
mov
mov
lret
pop
ljmp
fnstenv
xchg
push
ret
inc
dec
dec
push
xor
sub
add
in
sbb
sbb
jns
or
push
shll
sbb
or
fcmovbe
cmp
mov
pop
out
dec
sub
cmpsl
dec
fnstcw
push
imul
lcall
insl
sahf
lret
push
sti
pop
nop
stos
das
call
cmp
mov
into
test
dec
pusha
mov
sub
jl
add
mov
jge
scas
loopne
mov
mov
mov
out
xchg
lcall
lcall
push
leave
or
outsl
mov
and
mov
mov
xchg
hlt
ljmp
fmuls
scas
mov
cmpsl
jmp
inc
jb
jbe
jg
mov
ret
cmp
nop
adc
mov
jge
jg
gs
outsl
push
add
decl
sbb
or
push
lock
xchg
cmp
negl
cmp
push
movsl
ljmp
clc
in
hlt
jecxz
mov
sbb
push
mov
jb
leave
fildl
add
std
or
mov
add
int
popf
pop
mov
and
mov
jp
xor
mov
daa
inc
xchg
mov
aam
pop
cmp
mov
adc
lcall
hlt
pop
icebp
sub
pop
ja
aam
mov
pop
cmpsl
jle
push
into
sbb
scas
cld
incl
push
in
hlt
jns
cmc
test
shll
jne
enter
and
jg
dec
ds
imul
pop
xchg
stos
jp
jmp
xchg
loope
adc
mov
jl
aas
mov
out
test
aam
or
mov
mov
hlt
xchg
sub
push
adc
aad
jecxz
or
mov
decl
jmp
enter
insl
fcompl
sub
mov
sub
ffree
sbb
lods
ds
mov
xchg
sub
stos
scas
js
aam
pusha
xchg
imul
das
cmc
xor
ret
xlat
fcoml
sbb
das
mov
ljmp
cmp
cmc
dec
push
jle
adc
push
mov
inc
push
ret
cs
jg,pt
fistl
add
sub
and
mov
into
xor
jb
cmp
mov
test
pop
fs
jg
dec
jmp
xor
and
and
jo
xchg
aam
and
cmp
mov
mov
mov
push
inc
cmp
sahf
inc
and
mov
iret
mov
ljmp
out
push
stos
in
outsb
int3
sti
fstl
and
scas
aam
rorl
push
add
jmp
push
push
mov
loop
lods
insl
inc
jecxz
push
inc
pop
aam
outsl
in
fcmove
stc
lret
call
jmp
pop
add
test
jmp
xor
xlat
jge
or
jle
popa
ja
in
cld
push
lcall
decl
mov
and
loop
mov
test
cmpsb
movl
call
jg
xchg
inc
lods
and
pop
mov
push
jb
push
cmc
inc
leave
lahf
shl
add
pushl
imul
sbb
xor
imul
icebp
cmp
push
sub
mov
cmp
mov
mov
jbe
adc
sub
loope
gs
out
inc
mov
sbb
sbb
hlt
add
jne
out
cmpsb
sbb
push
jns
out
pop
mov
pushw
pop
add
lds
popa
push
je
inc
aam
pushl
dec
loope
and
inc
loopne
mov
add
aaa
add
mov
into
test
push
xor
adc
lahf
idiv
sti
sbb
pop
enter
adc
adc
mov
cmp
mov
adc
and
and
lcall
sbb
cltd
mov
cmc
inc
xchg
rol
lock
shlb
push
insl
inc
sarb
jae
movb
xchg
outsl
adc
out
pop
mov
push
fcomip
scas
fmul
cmp
sahf
pushl
in
lret
sbb
jl
fildl
mov
pop
jbe
xlat
jb
mov
cld
pop
mov
mov
fimuls
aas
and
mov
fwait
mov
cli
cmpsl
aas
je
push
cltd
je
and
imul
enter
popf
xchg
adc
pop
xlat
jae
and
mov
or
ljmp
jns
clc
cmp
xor
jne
fisubrl
xlat
mov
jo
pop
jno
mov
enter
aas
pop
insl
adc
mov
inc
sbb
jle
push
add
xchg
call
loop
and
jge
jmp
jg
ret
xchg
xchg
mov
out
pop
pop
loopne
cmp
mov
adc
mov
mov
call
stos
imul
sbb
add
cmp
call
imul
imul
shrl
fildll
add
movsb
faddl
xor
lret
jmp
decb
in
pushf
dec
daa
lcall
pop
pop
cwtl
fsubl
xchg
movsl
cli
mov
lret
push
jg
cmp
popa
daa
mov
mov
movsb
clc
lea
shlb
cmp
inc
ret
or
adc
loop
incl
jns
adc
push
xchg
dec
call
pushf
into
pop
and
decl
adc
pop
inc
pusha
es
mov
sbb
mov
add
jae
mov
test
cmp
adc
and
adc
test
lcall
push
repnz
cmpsl
pop
outsb
pop
inc
fisubrl
mov
jp
mov
lods
add
decl
push
es
sub
sti
or
cmp
out
cmp
call
pop
mov
mov
rcrb
fsts
mov
lods
fisubrs
rcrl
flds
and
mov
movsl
sarl
pop
cmpsb
jmp
ficoml
popa
push
int3
idivl
xchg
js
push
mov
sub
fbld
arpl
dec
clc
decl
sub
pop
leave
bound
sub
sub
jmp
cli
into
nop
mov
dec
cmp
in
xchg
xchg
cmp
jmp
adc
sbb
pop
loope
xor
sbb
xchg
xchg
nop
jns
push
imul
pop
sub
ljmp
int
ljmp
dec
xor
dec
icebp
hlt
push
xchg
push
sahf
mov
ljmp
push
rcll
sub
ret
pop
das
cmp
stos
rorb
decl
rorl
jge
add
pop
sbb
mov
pop
mov
pop
scas
and
mov
movsb
xchg
arpl
jl
and
mov
and
mov
ficompl
outsl
std
mov
jne
loop
mov
pop
inc
ss
pushl
jne
add
rcrl
aad
cmpsl
popa
or
daa
mov
lahf
sti
inc
clc
incl
lar
pop
push
jae
xor
mov
mov
ss
add
aam
stos
insb
xchg
xor
call
hlt
push
sbb
adc
cmp
cmp
pop
cli
push
int3
shll
jbe
scas
fidivs
push
jecxz
repnz
sub
shlb
fsub
cltd
ljmp
repnz
and
cmpsl
movsl
push
sub
mov
mov
and
es
popf
add
pop
decl
inc
repz
mov
sub
push
sub
push
movsl
js
sub
je
in
xlat
imul
cmp
xor
ljmp
or
ljmp
lds
test
jecxz
mov
push
dec
lods
inc
sbb
hlt
cld
stos
jle
and
addb
add
jg
xchg
mov
cltd
xor
mov
xor
push
mov
data16
xchg
repz
pop
hlt
decl
xchg
lock
popf
cmp
arpl
jecxz
addb
out
jne
fsubs
or
jecxz
pop
bound
mov
add
lcall
push
mov
ljmp
jl
mov
jle
call
adc
stc
cli
das
ja
ss
jg
dec
jg
pop
mov
push
mov
repz
jecxz
incl
or
in
aam
imul
mov
and
pop
test
dec
cmpsl
sti
gs
inc
adc
movb
xorb
shll
pop
lret
popf
cmp
call
sub
xor
mov
push
add
dec
outsb
push
jmp
jne
mov
jl
ljmp
jecxz
in
daa
mov
xchg
cmp
sti
incl
mov
add
sbb
push
mov
fidivl
mov
cmp
lcall
and
andl
mov
loopne
xchg
xchg
add
add
xchg
mov
or
in
enter
jmp
call
movlps
inc
xchg
int
mov
and
and
jnp
call
pushl
pop
fwait
and
jge
pop
mov
adc
lret
cwtl
fdivrp
mov
addr16
or
shll
push
inc
dec
in
mov
dec
rorb
fwait
fs
push
ret
and
adc
jmp
jns
pop
cmp
jns
ds
xchg
xorb
xor
lods
orb
mov
and
test
test
mov
fdivr
pushl
mov
mov
enter
push
jl
movsb
into
mov
push
mov
cmpb
pushl
dec
add
xchg
dec
stc
mov
add
mov
jno
adc
xchg
push
ss
fldl
das
or
pusha
mov
push
cmp
push
push
ljmp
rol
jns
and
std
hlt
cmc
js
das
sub
insl
decl
js
scas
fistpl
roll
pop
outsb
push
and
mov
jae
jmp
jle
das
push
fcomps
fidivs
dec
dec
push
shrb
in
ljmp
xor
pusha
out
pop
add
cmpsb
test
enter
or
lods
jae
ret
mov
jmp
mov
cmpsl
mov
sbb
cwtl
jbe
pop
mov
jmp
adc
clc
push
cltd
dec
cs
lods
xchg
mov
pusha
cmpsb
lret
clc
es
and
decb
aam
ret
lock
or
out
lcall
aaa
dec
mov
cs
repnz
inc
popa
shl
jnp
stos
pop
inc
shlb
jmp
call
and
pop
push
jl
push
lock
pop
mov
out
loopne
cmpsl
pop
mov
je
dec
xchg
pop
inc
xchg
jecxz
insl
mov
loopne
movsb
pop
xchg
lret
mov
and
lcall
jmp
push
pushf
hlt
inc
sbb
rorl
fistpll
jmp
ret
sub
fcoml
les
ss
cltd
lret
inc
sbb
aam
mov
sub
sub
clc
incl
push
inc
mov
arpl
or
rol
cmp
adc
sbb
loopne
incl
shll
dec
push
push
insl
lock
iret
inc
mov
sub
incl
mov
add
pushf
aad
cmp
int
adc
decl
cmp
pop
mov
mov
or
cmc
pop
ds
in
flds
pushl
nop
and
dec
cld
cmp
mov
sti
test
pop
push
pop
push
inc
lret
adc
loope
cmc
sbb
pushf
mov
pop
loope
sbb
mov
test
mov
fsts
in
ljmp
data16
xchg
mov
add
xor
or
cld
jg
aaa
cmp
inc
fnstenv
negb
pop
not
icebp
rorl
les
jnp
out
mov
in
ret
sub
cmpsl
cmpsl
pop
dec
cs
leave
imul
push
jg
in
dec
fwait
insb
inc
xlat
pushl
xchg
aam
cmpsl
xchg
inc
sub
testb
sbb
xchg
arpl
inc
add
mov
push
dec
out
push
cmp
jg
xchg
in
mov
mov
xchg
movl
jno
adc
pusha
mov
sub
das
js
sbb
jae
lcall
cwtl
into
sahf
imul
sub
divb
cmp
popf
cmc
sbb
out
sahf
in
add
cwtl
cmp
mov
dec
pop
jle
cmp
xchg
jae
cvttps2pi
in
call
mov
in
sbb
xchg
popa
mov
jns
aaa
pusha
add
call
fdivl
xor
mov
imul
in
push
decl
pop
lret
fcompl
sbb
ret
arpl
sub
ljmp
fcomip
pushl
inc
std
xor
pop
push
orb
popf
aad
incl
pop
cmp
cmpsl
aad
test
cmp
mov
pop
dec
mov
repnz
cld
inc
insb
dec
jl
cmp
popa
dec
dec
push
mov
movsl
pop
aas
jg
es
test
or
xchg
and
cld
outsl
lds
call
dec
lahf
shl
dec
lcall
test
std
fs
int3
xchg
dec
jns
cli
ljmp
insb
data16
mov
in
or
ror
pop
dec
fsts
jge
pop
cmp
pusha
imul
decl
outsb
xor
aad
in
in
dec
inc
in
xchg
neg
pop
mov
sbb
ljmp
jb
stos
lcall
mov
fbld
cwtl
mov
jg
push
lret
lods
cli
push
mov
jp
xchg
push
bextr
xchg
aaa
mov
fbstp
sub
or
test
add
mov
std
jg
xor
sbb
out
lods
ret
rcll
jnp
test
lea
jb
sbb
push
subb
push
aaa
xor
dec
mov
sbb
shlb
out
cli
cwtl
in
xlat
lcall
call
adc
and
das
mov
push
xor
xlat
adc
in
xor
loopne
insb
xor
das
shlb
inc
jecxz
aad
das
shll
test
mov
pop
pop
std
jg
aaa
adc
cmp
aaa
daa
in
push
mov
js
jb
iret
addr16
call
cmp
das
icebp
jnp
stc
sbb
push
outsb
cmp
xchg
aad
leave
jecxz
mov
fcomip
xchg
and
pop
push
popf
je
test
fwait
daa
idiv
cmp
adc
jmp
add
outsb
gs
mov
push
cmp
sahf
out
addl
call
inc
fisubrl
stos
cwtl
sub
and
inc
jl
pop
cli
push
stc
push
aaa
inc
mov
std
jecxz
das
mov
fidivrl
mull
inc
sbb
inc
adc
decl
push
movsl
mull
popa
or
adc
jmp
mov
jmp
inc
or
push
mov
int3
mov
inc
mov
rolb
push
sbb
je
xor
mov
ljmp
inc
push
pop
sub
pop
into
insl
push
adc
fcmovu
mov
push
dec
mov
divl
scas
sahf
dec
in
insl
mov
lret
dec
or
cmp
pop
mov
mov
mov
pop
push
xor
lret
icebp
nop
scas
jg
out
into
jmp
fs
mov
mov
jnp
and
in
xchg
adc
int
jnp
pop
icebp
inc
mov
cmp
xchg
mov
inc
add
fwait
mov
imul
mov
fwait
decl
out
es
loopne
cmpl
cmc
call
ficoms
arpl
cltd
mov
mov
decl
popf
addr16
dec
dec
popa
mov
hlt
pusha
out
mov
ljmp
adcl
or
or
orb
lcall
scas
aaa
jnp
imul
xchg
sbb
fwait
rcll
mov
loopne
adc
incl
inc
inc
scas
hlt
dec
mov
aam
lahf
push
mov
outsl
sub
pop
cmp
lret
incl
stc
mov
xchg
loop
int
cmpsl
out
das
roll
xor
push
les
push
cmp
mov
pusha
repz
push
rcr
pushf
cwtl
ja
cmp
cmpsb
cmp
lcall
loop
out
test
add
fmuls
add
sarl
xor
cltd
mov
push
jge
ljmp
andb
pop
cmp
dec
xor
jno
andb
out
scas
loopne
jns
pop
mov
mov
data16
fisubl
aad
xchg
inc
dec
or
push
outsl
ds
lcall
or
cmpb
xchg
sub
dec
int
xlat
push
in
dec
lret
insb
xorb
dec
imul
sub
add
fwait
sbb
mov
or
repz
mov
adc
jl
imulb
jg
scas
sub
sub
sub
fstpl
fsubrs
push
aam
push
dec
shrl
bound
push
jmp
sub
and
cmp
cmp
xor
jg
jo
add
mov
xchg
adc
imul
mov
lods
fs
inc
lcall
dec
arpl
insl
inc
jbe
adc
dec
and
int
lcall
and
idivb
pop
cmp
push
add
bound
dec
jb
push
sti
jb
decl
dec
pop
ljmp
lret
iret
nop
jmp
in
xchg
popa
jmp
push
adc
pushl
add
es
sbb
sbb
xchg
mov
sbb
push
sbb
lcall
cmp
adc
add
push
loopne
pop
pop
push
test
push
or
outsl
jnp
rorb
loop
lahf
sbb
mov
ds
fmuls
xchg
xchg
lcall
mov
add
js
cmpsb
inc
mov
push
in
xchg
or
dec
dec
mov
mov
fdivs
adc
cmp
jns
mov
push
inc
and
les
je
mov
cmpsb
repz
rclb
mov
fiaddl
fbstp
loopne
decl
dec
jle
stos
inc
popa
cmp
xor
sub
shlb
adc
sub
clc
mov
and
orb
xchg
je
push
addr16
ljmp
lods
mov
adc
xchg
js
or
pop
fwait
dec
iret
or
mov
jg
mov
xor
and
or
jmp
fmul
test
push
fs
adc
xor
xor
sub
loopne
ror
pop
cmc
enter
call
mov
inc
sahf
loope
mov
pusha
imul
and
and
ljmp
push
adc
stos
in
push
insb
sbb
adc
js
mov
cli
jne
cltd
orl
decl
xor
cmp
dec
leave
push
xor
leave
mov
clc
mov
pusha
clc
fisubl
int
jp
mov
cld
pop
out
stos
xor
lcall
lret
adc
incl
ljmp
cli
lods
lret
subl
add
and
lods
mov
test
cwtl
pop
int3
fiadds
outsl
or
neg
rcrb
mov
sbb
sbbb
adc
int3
lahf
dec
sub
dec
rolb
in
imul
fadd
xor
lcall
mov
mov
pushf
and
js
pop
mov
mov
add
sub
and
iret
bound
lods
lahf
hlt
inc
add
push
call
push
pop
cmp
inc
int3
pushl
sub
sbb
fcmovnu
ret
insb
ret
xorl
mov
std
popa
out
mov
jb
adc
lock
xor
mov
je
pop
out
mov
inc
outsl
fldt
xchg
cmp
and
pop
stos
pop
xor
adc
mov
jbe
je
test
daa
push
mov
dec
adc
fwait
aaa
mov
pop
dec
or
mov
jmp
inc
aas
dec
out
movsl
pop
add
xor
lea
mov
stc
out
mov
std
pushl
pop
repnz
das
cmp
hlt
scas
cld
in
mov
and
mov
push
lods
out
cmpsb
mov
inc
xchg
lock
pusha
leave
aaa
jecxz
sbb
mov
sub
jge
andb
dec
nop
push
fdiv
rcrb
imul
add
xor
pop
sbb
icebp
cld
loope
call
scas
in
imul
mov
in
lret
in
jl
lahf
sar
mov
xchg
sub
sahf
dec
xchg
mov
mov
lods
lods
cmpsb
mov
pop
fdivrs
mov
mov
decl
fwait
or
in
imul
out
jp
adcb
repz
mov
andb
jo
imul
bnd
jmp
div
icebp
stos
jg
inc
mov
or
insl
adc
pusha
lcall
xlat
fmull
addr16
inc
add
adc
mov
sbb
hlt
jg
adc
outsb
test
mov
test
decl
lcall
xchg
dec
pop
sbb
aad
xchg
ljmp
inc
decl
pop
or
inc
fisubs
test
and
add
or
jmp
mov
jmp
jne
sahf
cmp
cwtl
sbb
inc
lods
jmp
out
int
loope
jge
mov
inc
cltd
sahf
add
pop
loop
shl
shlb
fs
sub
mov
roll
cmpl
mov
and
sti
xor
arpl
dec
push
stos
decl
je
inc
rcl
and
push
ljmp
mov
push
repz
stc
sbb
cmc
mov
jmp
ret
jb
and
cltd
add
sub
push
jg
inc
lahf
iret
jle
cmp
inc
in
ss
and
jmp
inc
in
sahf
sar
aas
pop
dec
mov
into
out
cmp
inc
loope
sub
xor
adc
jb
incl
dec
mov
mov
cltd
imulb
pusha
jae
and
shl
ljmp
jmp
fcmovnb
fnsave
addr16
jno
sub
jmp
scas
clc
decl
int
lods
ds
daa
test
cwtl
pop
mov
fs
mov
jmp
cmp
xor
mov
iret
cwtl
jno
sahf
mov
mov
mov
cwtl
insl
iret
push
dec
xchg
xchg
loopne
decl
add
inc
addr16
das
test
dec
aaa
push
xchg
lret
cmp
mov
jns
mov
lcall
pop
lods
mov
xor
sbb
sahf
jbe
or
lcall
pop
push
sbb
dec
movsl
addr16
sbb
dec
dec
sub
dec
ds
push
xor
inc
and
xchg
fdiv
cltd
sti
fdivrs
shr
inc
xchg
test
push
jg
sbb
pusha
xchg
xchg
xchg
push
aaa
adc
pusha
fisttpll
mov
dec
cs
push
ljmp
pop
clc
data16
pop
test
popf
test
sub
enter
test
lock
int3
dec
mov
mov
std
or
incl
xchg
dec
orb
dec
pop
adc
lock
and
aam
push
xor
sbb
cwtl
pop
mov
jmp
inc
xchg
push
cwtl
mov
jg
jg,pn
js
ret
sub
mov
into
cmp
sahf
in
xchg
fnstsw
lahf
outsb
mov
fdivrl
pushf
popf
stos
xlat
js
mov
and
push
xor
jp
cmp
push
enter
jg
cwtl
inc
popf
call
mov
rcrl
adc
mov
xor
jmp
lret
adc
lahf
pop
xchg
mov
fdivrl
dec
xchg
lods
scas
dec
test
mov
pop
sub
gs
lock
push
jl
out
sub
dec
fistpll
in
cmp
dec
push
jg
out
jle
pop
adc
mov
push
mov
jns
in
and
fs
ret
icebp
aaa
cmc
movsb
out
cmp
imul
push
xchg
sbb
cs
out
push
mov
add
fimuls
dec
xor
sahf
nop
sub
pushl
fnsave
cli
scas
icebp
inc
lcall
rorb
sub
jg
fcompl
sub
fisttps
cwtl
and
cmp
imul
and
xor
clc
ljmp
dec
outsb
cmp
pop
pop
add
pop
sar
pop
sub
cmpsb
fcmovnb
adc
sbb
addr16
lods
add
cs
ljmp
jno
xchg
js
push
frstor
jmp
dec
outsl
data16
mov
jecxz
push
pop
inc
out
into
sbb
mov
jecxz
mov
and
and
pushl
decl
shll
inc
pop
adc
pop
push
loop
insb
add
xchg
decl
lock
cli
aas
or
jbe
dec
orl
imul
pop
icebp
call
lods
mov
xorl
scas
push
or
xlat
sbb
ljmp
aaa
sub
mov
mov
call
das
movsb
in
lds
das
mov
push
mov
pop
push
cmp
mov
mov
ss
jge
in
add
inc
xchg
repnz
shr
or
out
idiv
xchg
push
idivb
mov
inc
mov
out
ret
sub
ret
cmpsl
addr16
jmp
cmp
cmpsb
push
inc
push
addr16
fwait
cmc
aas
or
mov
das
cli
decl
cld
in
sub
sahf
push
push
jmp
jns
mov
std
dec
mov
and
mov
xchg
sbb
and
loope
xor
repz
mov
mov
add
out
fiadds
jl
lcall
jnp
cmp
and
push
jmp
xchg
scas
aad
rcl
add
dec
in
add
xchg
cmpsb
mov
xchg
aam
aaa
mov
pop
pop
into
jp
push
adc
or
jecxz
ret
pushl
adc
repz
jno
lods
cmp
daa
out
sub
jo
mov
movsb
hlt
mov
jno
fldt
pop
push
and
lahf
hlt
mov
outsl
fdivr
mov
jp
test
daa
int3
jecxz
pop
test
lar
push
push
ret
aam
cmp
lods
pusha
dec
push
leave
aad
shlb
stc
rorb
xor
pushf
shrb
lret
outsb
rcr
test
ss
dec
inc
adc
mov
test
decl
jge
add
je
push
xor
mov
fisubl
scas
cmpsb
lds
add
add
mov
fstp
pop
std
inc
add
xor
fdivr
stos
fstpt
xor
jmp
in
dec
aad
enter
shl
test
loope
loopne
call
test
lcall
fcoms
dec
fs
pushl
push
jmp
sti
imul
loope
adc
add
dec
jnp
ja
xchg
and
cltd
cli
incl
les
mov
dec
fisubs
into
mov
mov
add
aad
push
ljmp
out
ljmp
xchg
incb
fwait
and
pop
jp
outsl
out
shlb
xchg
loope
lret
in
into
imul
ficoml
je
mov
cld
fnsave
dec
adc
xor
adc
add
ljmp
pop
jg
dec
mov
out
or
mov
cmp
adc
lods
adc
call
incl
imul
scas
lahf
pop
rorl
test
mov
jecxz
dec
inc
testb
push
pop
mov
pushf
sbb
mov
ss
cs
stos
xor
mov
pop
mov
daa
add
add
movb
adc
inc
outsb
in
testl
add
adc
jp,pt
div
jae
cli
shll
incl
sub
lret
push
ss
sti
xor
gs
push
sub
pop
mov
cmc
bound
scas
push
fnstsw
adc
jnp
mov
inc
adc
addb
xor
xlat
jnp
lret
insl
cmp
push
repz
fisttpl
inc
adc
jmp
xor
in
pop
xorb
jo
cmpsb
lods
mov
out
popf
mov
pushl
and
dec
loope
push
mov
pop
sub
das
xor
adc
stos
inc
daa
arpl
call
idivb
mov
pop
es
jmp
call
push
stc
xchg
or
int
fs
pushf
fwait
and
arpl
int3
data16
pushl
sbb
scas
push
testl
rcrl
dec
test
mov
incl
cmp
cmp
aam
mov
jo
or
mov
in
mov
fisubrs
imulb
sbb
dec
fldt
xchg
ret
je
gs
mov
push
cmp
loope
xorb
sar
pop
jb
and
stc
lods
mov
mov
fsubl
push
dec
test
ja
mov
sbb
call
idivl
jp
jg
gs
lds
lcall
mov
loop
ret
divb
fsubp
scas
cltd
pop
or
adc
into
scas
repnz
incl
jbe
cmpsb
in
pop
jle
test
or
ja
fcomps
push
rcll
out
jg
push
clc
imul
xor
jp
aas
or
sub
inc
add
lret
push
dec
add
enter
jmp
adc
push
sbb
movsl
push
ljmp
and
daa
lcall
sbb
mov
and
cmp
jns
or
inc
pop
and
popa
sub
sub
xor
sbb
scas
nop
xor
mov
ljmp
sbb
and
mov
mov
out
pop
hlt
loop
jmp
fsubl
push
mov
in
mov
call
xchg
fidivs
daa
sti
or
and
fisubl
lahf
add
in
std
mov
call
ss
loopne
testl
stos
std
mov
loopne
cmp
aad
mov
sbb
out
and
je
pop
imul
lcall
pop
sbb
fld
mov
dec
xor
out
lea
inc
in
jbe
mov
xchg
mov
cltd
cmc
out
mov
mov
rcl
mov
movsl
ror
or
pop
iret
pushl
ss
add
sub
test
sub
cmpsb
push
movsb
push
push
stc
daa
inc
aas
push
decl
decl
xchg
mov
inc
pop
mov
xorl
inc
cmp
mov
mov
mov
sti
mov
inc
out
repz
das
clc
jmp
sub
xor
push
and
int
loop
xchg
les
mov
shlb
decl
lret
sar
inc
sbb
cmpsl
push
stos
dec
fisubs
js
loop
inc
pop
lock
cmp
and
jmp
jne
xor
aad
lds
dec
scas
xor
jns
out
outsl
test
push
ret
mov
das
pop
push
sbb
das
lea
cmc
movsl
or
insb
movsl
or
add
inc
loopne
xchg
xchg
cwtl
sbb
xchg
jb
stc
jns
and
mov
push
dec
lret
lock
scas
jmp
mov
int3
pop
pop
inc
mov
mov
loopne
call
dec
sbb
dec
lock
cltd
jmp
sarb
es
mov
push
push
jg
dec
test
dec
pop
std
stc
icebp
dec
pop
xor
movsb
scas
imul
or
outsl
jl
repz
mov
dec
sbb
xchg
int
and
xchg
mov
in
mov
stos
push
les
daa
mov
add
sbb
sarl
cmp
ljmp
mov
mov
inc
sub
decl
mov
lods
cmp
out
xchg
pushl
and
xchg
mov
dec
daa
fmull
call
ret
inc
pop
stos
std
fwait
out
mov
ljmp
inc
or
mov
cld
into
mov
adc
pop
adc
aaa
into
or
adc
int
cmp
push
sbb
xchg
inc
cmp
ds
jle
call
xchg
outsl
pushf
sahf
push
add
inc
jne
call
test
mov
jbe
jmp
lea
out
sub
pop
xor
xchg
ret
push
add
subb
inc
mov
or
and
jg
ljmp
test
incl
mov
mov
jo,pn
jp,pt
mov
cs
clc
data16
std
ljmp
lods
in
jge
and
popa
and
mov
jno
mov
pop
jno
adc
js
daa
mov
or
rorb
leave
pushf
push
jg
inc
mov
imul
insb
ljmp
push
inc
test
jae
add
xchg
pop
pop
testb
and
pop
dec
sbb
or
adc
aad
push
jp
or
repnz
xchg
push
sbb
add
ficompl
pop
cmp
ljmp
xor
jecxz
push
sahf
insb
clc
mov
lods
jmp
cmpsl
pushf
fsubl
inc
sbb
push
insl
fisubrl
loop
inc
and
pop
jg
lcall
mov
cmp
pop
nopl
jl
lods
adc
mov
scas
mov
dec
int3
adc
mov
mov
incl
loopne
filds
cmp
in
push
xor
in
enter
sub
cli
jns
fs
mov
je
cmc
cmpsb
and
incl
stos
lock
mov
mov
adc
cltd
xchg
test
push
frstor
mov
lret
push
dec
or
xor
out
push
test
iret
xor
fdivrl
test
loopne
inc
mov
incl
or
loope
xchg
push
mov
int
dec
xchg
pop
fs
repz
inc
jns
lcall
dec
ss
pop
mov
ljmp
xchg
call
imul
mov
fsubrs
mov
jmp
push
std
sub
dec
outsb
fcomps
sbb
sbb
xor
sarl
adc
insl
sub
das
cs
pusha
fnsave
add
aaa
pusha
pop
incl
pop
js
sbb
sahf
bound
cwtl
mov
stos
scas
rol
leave
adc
dec
or
insb
mov
xor
cmpsb
jge
je
es
mov
mov
decl
ljmp
cltd
or
andl
daa
xchg
xchg
jno
aam
dec
cmp
call
lgs
dec
or
mov
mov
xchg
mov
mov
enter
pop
xor
ret
pop
cld
mov
mov
rolb
stos
subl
dec
jp
pushl
jge
ret
std
aas
lods
and
inc
jp
inc
xchg
push
sbb
popa
xor
xlat
incl
push
jl
outsb
mov
jg
pusha
notl
add
xlat
adc
add
out
adc
mov
adc
inc
iret
push
outsl
inc
inc
and
push
push
aad
xchg
fwait
mov
pushl
mov
jg
arpl
lcall
xor
leave
imul
and
pop
hlt
out
adc
adc
sti
dec
mov
mov
jnp
mov
sub
jno
add
push
cwtl
mov
out
shll
cmp
jmp
stos
test
scas
inc
subl
fildl
mov
mov
aas
pop
cmpsl
sbb
add
test
pop
mov
sbb
test
inc
mov
inc
adc
repnz
incl
addl
mov
mov
mov
out
test
mov
inc
mov
inc
mov
mov
pusha
mov
jno
daa
dec
insb
cli
xchg
scas
nop
scas
or
andl
jg
sub
pushf
mov
fcomp
and
xchg
movsl
push
and
ljmp
add
mov
push
mov
xlat
int
pop
fisttpl
mov
sti
dec
mov
lcall
xor
pop
repnz
pop
repz
sahf
ror
pop
lcall
add
sar
lcall
xor
xor
xchg
push
sub
jbe
xchg
adc
push
insl
jle
push
sbb
jb
mov
insl
dec
xor
and
sub
data16
add
int3
add
mov
sahf
and
mov
cmp
shrl
jmp
pop
sar
adc
jb
bswap
fidivrl
pop
cmp
push
add
push
nop
test
xchg
rolb
add
dec
or
shrl
imul
xchg
mov
fldenv
pop
mov
int
inc
cmp
pop
jge
xlat
cwtl
mov
push
insl
pop
jmp
cmp
subb
and
mov
shll
insb
mov
enter
clc
aaa
out
and
in
and
adc
leave
in
or
movsl
dec
mov
mov
inc
sub
iret
inc
out
stos
in
fadds
pop
lret
mov
ret
or
loop
std
decl
mov
outsb
pop
loopne
mov
sub
fdiv
rol
out
cli
filds
push
rclb
lea
add
cmp
cmp
adc
sub
add
test
mov
mov
mov
pop
add
pop
pop
jmp
xor
test
insl
imul
mov
pop
clc
sbb
mov
push
sub
fcomip
mov
les
aaa
fdivs
dec
shrl
mov
dec
adc
jmp
cmpsb
cmpsb
fsts
popa
cli
lahf
test
cwtl
push
inc
cmp
xchg
cmpsb
mov
out
mov
mov
test
mov
fnstsw
adc
mov
add
repz
cmp
dec
jle
pop
loop
popf
or
loop
ljmp
cli
pushl
push
div
adc
iret
lods
cwtl
xchg
jne
fsubp
out
insb
inc
repnz
xchg
mov
popa
ljmp
sti
pusha
in
call
push
sbb
cvtps2pd
repnz
mov
adc
es
sbb
shlb
mov
sbb
in
mov
dec
inc
mov
test
insb
dec
bound
push
gs
out
mov
cmpsb
add
sti
xor
and
sete
sbb
lcall
mov
xor
rorl
aam
adc
sahf
push
mov
outsb
cld
call
cld
nop
mov
adc
push
shr
mov
ljmp
pop
daa
ljmp
dec
dec
inc
xchg
inc
xchg
imul
xor
adc
in
mov
jl
pop
popf
fmul
nop
incl
mov
mov
out
into
into
or
cld
dec
lcall
cmp
incl
and
loop
dec
and
dec
adcl
je
or
add
jmp
jno
push
popf
lahf
and
adcb
dec
sbb
call
lds
fnstsw
cmp
mov
lahf
out
in
add
and
movsl
outsl
xor
sub
push
dec
and
mov
sub
and
jp
or
cmpsb
out
fmull
and
js
arpl
cli
mov
pushf
fildll
mov
out
mov
js
add
and
sub
cmp
std
jae
pop
mov
cmc
ljmp
rcrb
popf
pushf
add
int
adc
into
stc
fcoms
and
pop
lcall
adc
xor
arpl
stc
add
cli
incl
xchg
js
icebp
popa
icebp
mov
sarb
cmp
fsubrl
dec
and
cmpsb
push
sbb
mov
test
mov
push
sub
mov
js
push
out
ja
mov
incl
fmuls
movsb
lock
sbb
push
jae
das
inc
ja
sub
mov
out
xchg
adc
std
ljmp
jg
ds
sti
pushl
das
aad
inc
aas
repnz
aam
in
xchg
pop
repnz
cmp
mov
call
loopne
in
inc
push
mov
shll
pop
mov
mov
pop
adc
out
inc
in
scas
sub
jp
mov
mov
cmp
dec
js
jae
sti
out
adc
movb
pop
xchg
pop
jae
cs
loop
pushf
imul
pop
push
push
fcomi
insb
mov
mov
mov
push
push
enter
mov
pop
and
dec
mov
xor
pop
orb
scas
out
clc
call
dec
mov
stc
sub
sbb
inc
jo
cmp
out
add
lcall
subb
xor
and
dec
fidivrl
aam
or
push
lock
mov
sbb
or
repnz
fdivl
imul
aad
call
or
mov
out
mov
adc
xchg
das
insl
hlt
or
clc
std
lods
das
fidivrl
lret
ret
mov
scas
sahf
jb
cmp
in
mov
popa
mov
sbb
scas
ja
pop
add
sub
ss
add
inc
inc
scas
xchg
mov
iret
mov
shll
mov
jae
arpl
fistl
std
jbe
push
jl
out
add
mov
push
sub
and
ss
lcall
adcl
bound
mov
in
aad
or
fildll
push
std
or
and
cltd
outsb
xchg
mov
mov
jp
sbb
ja
pop
fs
sbb
mov
add
mov
loop
incl
test
adc
adc
stos
negl
rclb
shlb
adc
call
xchg
xchg
pop
jmp
jl
stos
jno
mov
lods
js
pop
jae
scas
cli
decl
fwait
test
sbb
xchg
jp
xor
shll
fidivrl
incb
hlt
out
inc
mov
movb
mov
lock
adc
inc
dec
push
cmp
dec
sarb
ja
and
insb
mov
add
cmp
ret
jg
jmp
sbb
jne
repz
jg
lcall
bound
sub
lret
dec
out
xor
lods
ss
push
cld
stos
je
dec
mov
ss
out
mov
testl
outsb
outsb
or
icebp
jp
scas
lods
push
call
jo
outsb
inc
sbb
cmp
stos
adc
pop
lds
jmp
xor
or
fldenv
inc
and
mov
push
popa
dec
xchg
or
xchg
push
mov
orb
lods
cmp
imul
push
add
incl
out
test
jns
sti
jp
push
dec
jo
cli
cld
push
add
xchg
jp
icebp
sbb
or
lods
jb
inc
adc
jmp
ffreep
dec
hlt
push
cs
or
push
and
fwait
lea
test
push
fmul
cmpl
push
dec
movsb
decl
or
push
nop
lret
les
dec
or
out
xor
cmpsb
js
aam
push
or
xchg
xlat
jno
cmp
incl
pop
rclb
xchg
add
xor
addl
lcall
fdivs
int3
out
and
mov
loop
popf
aas
and
mov
repz
icebp
clc
ljmp
les
ret
ja
cmp
out
ljmp
pop
or
sbb
pop
ret
dec
in
pop
push
in
cmp
out
dec
loop
in
mov
mov
out
jbe
fmulp
or
insb
lock
lods
mov
mov
sbb
xor
dec
cmpsb
sub
les
imul
lods
push
incl
xchg
mov
mulb
add
adc
and
hlt
es
cmp
pop
andb
dec
aaa
or
pop
xchg
push
cmp
es
fs
lcall
orl
insb
rolb
bound
in
inc
lret
inc
mov
movsb
mov
dec
push
or
push
jp
sub
dec
add
push
jb
js
leave
outsb
jg
lcall
test
sbb
les
mov
cmc
pusha
cld
add
cwtl
es
ja
sar
in
mov
icebp
mov
or
xor
call
out
push
sub
rclb
out
cmc
sbb
out
clc
ljmp
nop
je
test
leave
sub
add
cwtl
enter
or
decl
push
jne
add
ja
in
flds
pop
daa
mov
lock
decl
dec
lahf
sub
jle
mov
xor
sub
jnp
test
pushl
in
je
sbb
scas
pushf
mov
jo
jg
into
aas
mov
dec
jne
insl
movsl
jns
cmp
inc
into
mov
lahf
mov
out
imul
bound
aam
mov
push
imul
push
lds
dec
outsl
sbb
pushl
lock
bound
loope
add
mov
mov
push
das
adc
jg
jmp
iret
sub
notb
fwait
push
fwait
rclb
jbe
xor
int
cmpsl
ficoml
lds
loopne
xchg
pop
pop
push
inc
mov
cld
jmp
xchg
adc
cld
out
clc
sbb
pop
and
mov
fstps
mov
lret
pushl
sbb
push
lds
jg
test
xlat
push
aas
repnz
jge
mov
mov
pop
or
in
ljmp
cmp
add
sbb
push
mov
cmc
sbb
pop
cmc
sub
movsl
lds
inc
sub
std
or
inc
mov
ljmp
pop
mov
mov
sbbb
dec
cmc
adc
xchg
push
mov
out
mov
test
lea
jg
dec
push
js
decl
mov
sub
inc
jno
sub
addr16
enter
shlb
xchg
je
jle
icebp
into
call
in
push
sbb
and
mov
push
xor
cs
sbb
sub
ljmp
jo
sti
inc
pop
mov
mov
mov
push
or
daa
sbb
loopne,pt
test
call
lret
fstl
mov
sub
pop
lods
sbb
lcall
loop
sbb
rcll
nop
mov
dec
cwtl
jg
jecxz
fsts
lods
cwtl
sbb
inc
test
cmp
in
ljmp
jo
pop
sub
cmp
movl
popl
je
mov
adc
cwtl
cmp
pushl
std
push
or
push
cld
popf
sbb
mov
es
nop
dec
pop
stos
test
jnp
jmp
adc
jno
sub
cmpsl
aas
mov
movsb
sbb
inc
jb
jl
pushl
adc
movsl
cwtl
rclb
mov
mov
ret
sbb
xchg
or
inc
call
pop
cmpsl
scas
into
ss
repnz
lea
ljmp
mov
sbb
or
jne
mov
sub
test
jnp
dec
or
incl
sub
cmp
fmuls
insb
mov
and
mov
sahf
jecxz
lds
adc
mov
lret
mov
mov
pop
adc
decl
lods
fimuls
sbb
xor
mov
or
adc
xchg
stc
test
fs
lock
pushl
dec
icebp
sub
testb
push
test
ret
int
cmp
ljmp
pushl
std
mov
sbb
insl
mov
mov
out
aas
mov
bound
jg
test
pop
push
inc
add
mov
int
or
lret
cmpsl
cmp
jg
cmp
fwait
call
adc
jg
sbbl
lea
push
icebp
ljmp
mov
jmp
mov
rorb
cli
incl
push
pop
sub
inc
cli
or
inc
jns
xlat
daa
fwait
xchg
lea
mov
fcomip
xor
fstps
js
dec
mov
dec
test
inc
pop
lahf
in
cltd
scas
dec
sub
ljmp
fwait
sbb
mov
ds
out
xlat
sub
sub
popa
subb
in
clc
push
pop
or
outsl
pushl
xlat
fwait
dec
and
stc
ficompl
imul
lret
mov
js
pop
js
cmp
sub
or
or
sbb
nop
stos
mov
xchg
xor
cli
xor
sub
ljmp
mov
mov
imul
lods
and
jmp
inc
mov
jg
mov
inc
adc
lahf
push
xchg
mov
popf
fs
pushl
leave
inc
pusha
cs
push
imul
add
lods
push
pop
out
iret
incl
mov
dec
jecxz
sub
add
jnp
test
mov
icebp
sbb
call
cmpsb
enter
cmp
pop
jecxz
lods
inc
lds
jge
les
mov
out
push
jmp
push
lcall
mov
rcll
xchg
mov
icebp
pop
dec
pop
gs
je
xlat
ja
add
call
cld
insb
lds
pop
test
ss
cs
dec
call
ds
sub
in
out
ljmp
ljmp
mov
or
mov
sbb
ds
pushf
aam
and
mov
loop
jp
fwait
in
cmpsl
je
shll
cmp
jg
cmc
iret
stc
outsl
rorl
sbb
jge
stos
das
fisttps
dec
adc
mull
fidivl
fistl
cmp
inc
lcall
mov
jo
jnp
out
mov
sbb
mov
dec
jne
push
lret
jnp
cmpl
out
cmpsb
inc
xor
in
js
decl
movsb
scas
fstpl
xchg
pop
lods
pop
dec
mov
mov
jae,pn
xor
mov
inc
pop
inc
aam
xadd
je
adc
rdpmc
fwait
lods
cmp
sarb
dec
fldenv
jns
inc
pop
in
push
out
inc
push
pop
and
jle
filds
aaa
adc
lcall
jmp
and
sahf
jno
std
ljmp
call
inc
mov
sbb
call
sub
cwtl
jge
jmp
push
and
aaa
cld
ljmp
sahf
js
add
test
or
push
add
dec
daa
mov
inc
lcall
or
aad
es
mov
ljmp
inc
scas
shlb
fisttpl
sarl
sbb
mov
js
sub
aaa
adc
cmpsb
roll
inc
insl
xchg
scas
incl
out
inc
in
test
icebp
out
or
std
out
decl
jg
mov
or
push
hlt
mov
mov
mov
arpl
or
sbb
decl
add
stc
adc
or
or
mov
imul
mov
fmull
scas
leave
add
pop
sub
int
cmp
aam
push
lcall
dec
in
cli
dec
jge
xchg
cs
jbe
or
push
push
add
dec
inc
sub
push
mov
call
imul
dec
adc
xchg
jl
jbe
adc
xor
loop
mov
incb
pushl
test
pop
sbbl
jns
push
lods
flds
pavgb
int3
test
lock
pop
pop
mov
sub
out
mov
push
mov
or
rcrb
dec
js
push
xorl
stos
aas
pushf
lds
adc
cmp
ljmp
dec
and
test
pop
mov
hlt
jl
fidivrs
adc
xorb
cmp
leave
mov
add
mov
pop
cmpb
mov
xchg
xchg
push
inc
movsl
call
addr16
sbb
data16
lcall
jb
push
ja
xchg
pusha
xor
into
movsl
arpl
pcmpgtb
xor
xchg
inc
divps
int
fildll
iret
xchg
mov
movhps
arpl
cmp
adc
xchg
xchg
mov
fs
fsts
dec
cmpb
pop
add
hlt
test
insl
clc
js
in
jge
ss
xor
push
push
stc
xchg
jmp
loopne
add
inc
inc
inc
lcall
cld
add
xorl
pop
xchg
add
iret
inc
sbb
sub
xchg
dec
cmp
fcmove
mov
fdivs
inc
push
sar
xor
in
ljmp
jg
push
xor
mov
aad
jne
mov
in
jecxz
or
mov
ret
in
ret
out
xorl
ret
mov
cmp
ljmp
insl
xor
hlt
sbbb
flds
ljmp
call
ret
adc
jo
fwait
lret
adc
cmp
mov
pop
test
jle
sub
xchg
mov
adc
inc
sub
jne
fcomps
ja
stc
dec
xor
pop
js
bound
add
jmp
cmp
out
and
pop
scas
nop
lock
arpl
jne
xor
iret
sbb
mov
jle
popa
pop
test
sbb
rorl
popf
sbb
mov
cld
aam
jno
jnp
push
sub
jae
xchg
mov
xor
movsl
push
lahf
pop
jmp
fimull
pop
mov
sub
cmp
or
pop
mov
push
sub
cmc
dec
outsb
leave
std
fsqrt
filds
repz
pop
lea
mov
repnz
jle
push
outsl
cli
ljmp
cmp
xor
cltd
movhps
cmp
pop
xchg
leave
es
mov
call
andl
inc
xchg
mov
fst
sbb
bnd
adc
es
mov
jg
lods
repz
cs
int3
xchg
or
fnstsw
test
fadds
jg
cmp
ljmp
sbb
ljmp
stc
rcr
mov
insl
stc
cmp
incl
jae
xchg
inc
je
dec
out
in
shr
ds
in
cmpsl
popf
cmp
sub
cld
or
incl
dec
sbb
adc
lret
inc
push
int3
inc
int
lcall
jle
dec
ds
cs
push
dec
and
sbb
call
insb
int3
dec
push
aas
in
mov
les
out
or
bound
je
and
lea
cli
mov
and
inc
sub
aas
mov
ret
xchg
pushl
aaa
in
lds
incl
push
lcall
sbb
dec
xor
jnp
decl
pop
push
daa
fcoml
aaa
into
faddl
sbb
inc
test
aaa
in
fistpl
in
or
lcall
jecxz
xchg
sub
stos
test
jnp
and
mulb
mov
sar
ljmp
jbe
les
rcrl
idiv
push
ja
sbb
add
pop
jp
add
clc
fildll
std
fisttpl
pushf
mov
shr
xchg
inc
adc
mov
outsl
nop
dec
mov
in
mov
imul
loopne
adcl
lods
dec
popf
mov
or
clc
jmp
std
lret
cmp
pop
scas
mov
or
std
dec
ljmp
mov
pop
push
pushf
adc
loopne
push
aad
inc
mov
hlt
ljmp
sti
js
fcoml
cwtl
test
push
sbb
and
es
jbe
pop
imul
scas
pushl
js
cmp
xor
stc
or
sub
aam
xchg
adc
mov
scas
cmp
xchg
lahf
xchg
push
inc
shll
repnz
adc
mov
add
jo
insl
insl
dec
fcoms
cmp
jno
out
in
in
sar
push
mov
bound
pushf
sub
cmp
stos
dec
clc
dec
jb
jge
sti
jge
mov
call
das
jg
sti
or
fsubrl
lock
hlt
mov
ret
lods
push
and
jecxz
and
fldt
jle
pop
stc
scas
dec
lea
dec
or
outsb
sbb
push
bound
sub
pop
hlt
lret
scas
dec
out
lds
xchg
rcll
add
mov
mov
call
jmp
call
push
jbe
in
call
aas
jne
xor
jmp
decl
jp
leave
cltd
sbb
icebp
or
cmc
fs
hlt
sub
dec
imul
scas
inc
jns
dec
push
mov
insb
mov
loopne
xchg
jmp
or
icebp
incl
loopne
push
mov
clc
mov
call
mov
mov
addb
aas
mov
dec
push
adc
cs
out
clc
ljmp
inc
cltd
jno
into
iret
pop
ljmp
fs
adc
inc
xchg
ljmp
push
jecxz
gs
fdivrs
sub
push
xchg
outsl
cld
lcall
mov
jne
xchg
cmpsl
repz
mov
mov
inc
lods
add
out
mov
sarl
cmp
pushl
popa
jmp
cmp
rorb
pcmpgtw
jno
stos
out
mov
dec
outsb
fwait
ret
xchg
mov
rol
add
jl
shr
xchg
adc
sbb
mov
push
cld
test
jecxz
inc
dec
mov
add
or
jp
scas
inc
dec
pop
hlt
mov
mov
pushl
pop
mov
xor
shrb
subb
pop
mov
add
or
mov
add
or
cmpsl
repnz
arpl
subb
out
xor
fcoml
aad
push
mov
lcall
mov
dec
fsubrs
mov
jmp
adc
out
movsb
cmp
mov
jo
out
mov
jl
sub
pop
push
rcll
xchg
sti
out
push
adc
shll
std
imul
dec
push
add
icebp
inc
bndldx
jl
adc
jnp
cmp
and
push
cmpsb
cmpsl
pop
xchg
repz
jo
or
f2xm1
mov
sub
pop
push
adc
ja
jne
fidivs
inc
in
push
cwtl
jmp
ja
jmp
daa
push
pop
dec
push
sbb
xor
push
jl
adc
sub
jmp
rorl
push
lods
mov
push
std
xchg
mov
dec
dec
outsl
into
push
cld
mov
cli
aad
pop
pushl
pop
mov
mov
pop
cmp
push
js
xchg
movsb
xchg
int
mov
incl
mov
ret
cmp
xchg
inc
pop
dec
nop
pop
fsts
ret
jnp
loop
mov
dec
imul
mov
and
orb
dec
ds
jae
sar
mov
cld
lret
lods
aas
and
sbbb
add
nop
mov
loop
jmp
repnz
shlb
xor
push
iret
ret
outsb
out
int3
test
dec
push
cmp
in
inc
incl
movq
jb
push
cmpsl
fadds
lcall
and
dec
and
rclb
ljmp
into
and
pop
lds
frstor
mov
stos
outsb
stos
fldenv
int
incl
pop
xor
stc
xchg
sub
xor
shlb
pop
sbb
es
cmp
je
repnz
and
fsubr
arpl
cs
cli
xchg
mov
cmpsb
xchg
ret
int
or
and
pop
cmc
jmp
and
test
inc
or
mov
aam
movsb
aaa
add
mov
add
mov
sbb
mov
in
sub
dec
cmc
cwtl
jae,pt
ljmp
int
das
imul
shl
push
lock
or
mov
add
xor
push
aam
incl
jno
push
or
mov
es
in
and
fldenv
in
in
cli
mov
push
cmpsb
dec
jmp
test
ficoms
push
jbe
ljmp
mov
fdivl
adc
in
out
insl
dec
shlb
sub
jge
fstl
leave
jns
mov
inc
sbb
sbb
dec
ljmp
insb
lock
or
ret
xor
popl
stos
jp
scas
xchg
insb
mov
add
pushl
mov
popa
add
cltd
leave
mov
insb
in
aam
repnz
pushl
fsubr
fbld
mov
cwtl
aas
mov
out
pop
test
and
ljmp
adc
jp
cmpsb
sahf
out
gs
sti
incb
mov
jne
dec
es
decl
orb
push
je
fcoms
lcall
incl
sbb
mov
mov
xor
cwtl
pop
int3
ret
or
pushl
push
jne
test
outsl
hlt
sbb
pop
pop
sahf
out
mov
aaa
std
ja
sbb
lods
push
adc
lret
cmp
mov
fstps
adc
popf
andb
movsb
cmpsl
lea
pop
mov
outsl
cmp
lods
push
dec
cmpb
push
push
jmp
rorl
aas
cmp
out
jo
or
outsb
dec
dec
data16
xor
lds
mov
out
iret
std
or
loopne
or
mov
pop
push
pop
cmp
js
fcmovne
push
pop
orb
dec
movsl
cmpsb
mov
popa
fisttps
outsb
mov
data16
out
stc
fidivs
mov
sub
xchg
or
pop
loopne
loopne
jmp
les
sbb
mov
lcall
adc
jns
aad
movsl
lcall
andl
inc
in
dec
popf
ror
popf
decl
dec
xchg
push
cmp
mov
es
mov
dec
dec
and
ljmp
decb
inc
in
in
add
dec
push
sahf
rorb
or
mov
xor
ja
fildl
pop
or
cmp
dec
and
xor
xchg
sahf
inc
das
pop
hlt
ljmp
xchg
out
cmp
lcall
mov
ljmp
add
mov
cmp
nop
arpl
jmp
add
clc
cs
hlt
mov
scas
sub
mov
lahf
shll
icebp
mov
add
dec
lret
fsubs
xchg
addr16
out
cmp
out
pusha
stc
sbb
sub
rcrl
jo
pusha
pop
in
xchg
mov
and
xchg
add
ljmp
add
ret
and
outsl
imul
sub
rorb
adc
in
decl
bswap
call
sub
imul
popf
scas
push
jmp
cmp
rcrl
lea
or
std
mov
mov
pushl
cld
dec
test
pop
mov
jl
push
adc
jmp
insl
cmp
mov
push
in
fldl
fldl
xchg
dec
cmp
dec
out
dec
add
into
dec
fldl
push
sub
pushf
xchg
mov
lcall
adc
inc
outsb
adc
ret
or
and
cmp
mov
dec
mov
repnz
pop
push
or
push
sbb
push
jecxz
pop
lock
clc
loopne
js
pop
lretw
incl
mov
fwait
mov
test
arpl
sahf
add
dec
or
adc
popf
imulb
dec
adc
stos
xor
mov
or
arpl
sub
inc
adc
cli
jp
dec
push
call
pop
xor
pop
pop
mov
icebp
mov
sbb
fidivrs
push
loop
dec
ljmp
loop
in
mov
shrb
adc
fistpll
mov
imul
mov
pop
pop
or
xchg
jbe,pn
int3
jmp
and
lcall
ret
in
sub
stc
test
push
psubb
or
inc
mov
outsb
aas
add
jg
test
push
aas
aad
dec
mov
cltd
pop
addl
adc
mov
pop
fidivs
mov
sub
sbb
mov
jg
inc
aas
leave
scas
mov
inc
mov
fldl2t
jmp
aas
push
jmp
fidivrs
mov
call
dec
fmull
sub
je
sbb
push
les
cwtl
mov
jmp
dec
mov
incl
sar
repnz
xorl
mov
add
inc
ljmp
clc
jg
incl
xchg
cmp
enter
pop
mov
pop
push
cltd
int3
fsubl
not
ret
loopne
dec
out
lock
mov
lds
pop
push
lods
in
repz
inc
inc
test
xchg
neg
mov
pushf
push
enter
xchg
xchg
inc
pop
aas
rcrl
pusha
dec
dec
pop
decl
add
xor
fdivrl
leave
inc
dec
adc
jmp
mov
sub
mov
or
pop
cmp
cmpsl
push
inc
mov
lcall
and
pmaxsw
cmp
leave
ret
popf
mov
fists
inc
mov
push
push
fnstenv
lret
pop
mov
sbb
push
add
divl
cmp
jns
sub
in
push
iret
pop
sahf
sub
int
rcr
cmp
mov
jg
aas
leave
jae
push
scas
stos
dec
out
mov
sub
adc
pusha
xlat
xchg
les
decl
cwtl
pop
mov
sbb
daa
repz
xchg
iret
add
fdivp
add
clc
icebp
mov
clc
sti
or
mov
fisttpll
xchg
sub
test
scas
mov
xchg
sti
xchg
incl
dec
jnp
clc
or
adc
loopne
out
sub
mov
cmpsl
int
ss
cs
jg
in
or
jmp
bound
addr16
inc
pop
mov
repnz
jmp
popw
fsubrs
jo
fstps
leave
divb
aad
or
sahf
adc
jmp
jge
fcmovb
out
sub
and
cmp
mov
cltd
sub
and
xor
cmp
xor
push
sub
inc
and
mov
pop
pop
sbb
sbb
pop
call
mov
mov
std
outsl
and
call
lods
out
mov
jle
pop
pushl
adc
hlt
push
mov
xchg
push
sub
mov
mov
and
dec
loope
inc
pushf
out
rcll
popa
dec
insl
xlat
scas
mov
test
dec
mov
in
ds
and
push
jmp
jmp
into
and
in
into
test
insb
push
mov
shl
data16
shrl
movsl
incl
push
xor
int3
push
push
mov
jg
dec
sbb
xchg
dec
movb
notb
pushf
mov
call
fwait
ror
fldt
cmp
lods
loopne
add
movsb
sub
pop
dec
aam
adc
pop
imul
jo
addl
fistps
stc
shrl
stos
movsl
dec
stc
fs
push
mov
cwtl
adc
mov
jne
insl
pushl
push
out
mov
and
dec
std
jmp
add
rcll
clc
movsl
push
mov
mov
jae
in
jns
hlt
mov
or
fidivs
cwtl
dec
imul
and
cli
call
cmp
xchg
jg
insl
or
std
add
les
jmp
dec
jne
mov
xchg
and
test
add
scas
rcrb
je
cmp
incl
jo
ret
inc
or
adc
dec
hlt
add
movsb
loopne
shl
incl
pop
addl
ja
xchg
aad
cmc
xor
pop
adc
ljmp
push
mov
mov
imul
mov
incl
mov
js
ljmp
pop
sbb
or
mov
mov
das
jo
mov
decl
cwtl
jbe
popf
xor
push
lods
jl
xor
cld
mov
mov
fcompl
fldenv
ja
xchg
lods
jmp
fs
mov
cmc
add
sti
loopne
mov
jg
dec
mov
pop
addr16
push
ljmp
cmp
sub
jle
jno
jp
pop
pop
icebp
scas
cmp
arpl
lcall
movsl
test
lcall
test
insl
mov
add
add
pop
lret
jg
les
ljmp
clc
outsl
sbbb
push
loopne
icebp
lea
and
jg
cmp
mov
or
inc
ret
push
cmp
cltd
out
sbb
scas
mov
mov
cmpb
sbb
adc
push
sbb
das
out
mov
int3
lock
cmp
sysret
pushf
loop
and
mov
clc
scas
jle
pushl
rcrb
jl
movsl
adc
in
aas
hlt
sub
aas
addr16
repnz
lcall
dec
cmp
cmp
xor
leave
lcall
dec
mov
sbb
out
and
adc
mov
or
inc
lds
push
sub
jmp
jp
jg
dec
dec
clc
loope
sbb
imul
xor
or
or
push
sbb
push
dec
push
insl
push
std
jmp
push
sbbl
lods
fldl
adc
bound
dec
push
ljmp
cs
add
in
inc
cmpsb
or
loope
sub
fistl
push
mov
mov
lcall
xor
cmp
mov
xchg
je
sbb
adc
mov
nop
mov
sub
jae
das
clc
decl
lahf
mov
inc
addl
fnstcw
imul
rcr
mov
sub
out
push
adc
mov
mov
imul
cmp
push
subb
clc
jmp
jecxz,pn
jle
cmpsl
pop
test
ljmp
inc
dec
pop
sub
xor
fucom
mov
adc
jecxz
mov
mov
add
incl
jle
fnop
ds
push
sub
lock
std
jg
push
pop
aad
inc
jns
loope
movb
fwait
xorb
fsubrp
lcall
cld
mov
pop
stc
sbb
sub
or
fsts
sub
ljmp
pop
shl
jmp
sbb
in
cmc
imul
js
dec
adc
push
call
sub
pop
cmpsb
fdivrp
mov
ss
mull
nop
pop
xchg
push
mov
xchg
mov
test
aam
xlat
sbb
ja
jnp
es
cwtl
push
inc
ja
clc
jmp
jae
xchg
ljmp
sub
and
call
repnz
enter
and
and
pop
pop
sbb
rorb
xchg
sahf
es
shl
xchg
lret
cmp
jl
repnz
xchg
push
xlat
mov
sub
ficoms
bound
xchg
lcall
jle
mov
mov
out
adc
push
dec
shrb
jmp
scas
mov
xchg
out
push
pushf
out
pusha
outsb
lcall
iret
cmp
decl
imul
lea
xchg
xchg
jnp
or
lcall
jnp
jle
stc
cmp
and
or
push
daa
jle
xor
push
cs
mov
aaa
or
call
xchg
jl
jns
mov
mov
loopne
jae
ds
cmc
mov
incl
lret
jmp
nop
int3
dec
or
xor
cmp
mov
inc
ret
push
decl
push
divb
or
jge
xor
xchg
test
adc
repnz
les
call
pop
lret
mov
sub
insb
and
in
popa
fwait
add
push
adc
int
inc
in
adc
out
movsb
lods
pop
fsts
mov
out
mov
loopne
xlat
sbb
jmp
adc
inc
sbb
pop
imul
mov
stc
xchg
lods
inc
andb
jmp
aad
loope
mov
xchg
pop
mov
mov
lock
push
lds
inc
inc
into
push
mov
push
push
ds
push
pop
out
fcoml
pushf
xchg
push
ljmp
and
mov
ficomps
adc
lret
decl
sub
ret
hlt
mov
rcrl
xlat
jecxz
or
call
lea
jo
sti
push
xchg
call
ds
lmsw
and
subb
incl
pop
shlb
xchg
rolb
leave
jbe
test
repz
ljmp
in
in
dec
pushf
inc
sbb
mov
add
mov
js
xchg
push
sub
outsl
daa
jg
decl
or
inc
jl
mov
mov
addr16
aas
inc
dec
nop
adc
fwait
xor
push
hlt
xor
daa
mov
xlat
xchg
mov
fs
fcomip
decl
aaa
xor
dec
pusha
scas
stc
mov
xchg
imul
arpl
or
xchg
jb
inc
into
mov
jmp
adc
cmp
pop
pop
imul
mov
jg
add
addr16
das
cmp
xor
es
scas
out
sti
movsl
mov
incl
add
pushf
xchg
xlat
inc
cmp
jmp
lock
ljmp
std
addr16
or
loopne
add
sub
or
insl
sub
cmp
mov
incl
cmp
scas
sub
cld
lods
nop
add
xchg
daa
loopne
in
jno
xor
scas
cmp
mov
mov
lret
push
fnsave
mov
push
jle
int3
icebp
inc
popf
shll
pushl
cld
or
outsb
repnz
xor
test
dec
ja
jno
js
nop
les
sbb
cwtl
rorl
cmp
ss
xchg
icebp
es
push
mov
jmp
dec
pop
loope
fs
loopne
xor
xor
mov
mov
and
jmp
adc
das
in
mov
cmpsb
push
enter
fdivrl
ljmp
jmp
jnp
scas
sub
jne
faddl
add
adc
mov
into
sahf
push
xor
lock
movl
mov
filds
lahf
out
add
adc
add
xchg
lret
cmpsb
jne
jg
push
mov
xor
popf
jae
aam
adc
das
xchg
sub
and
addr16
incl
xchg
clc
sbb
and
lret
xor
push
add
into
fsubrl
or
call
movsb
jne
gs
lods
xchg
sbbb
and
push
fcmovnb
jne
jne
mov
pushl
movsb
hlt
mov
xchg
dec
add
fildl
cmc
jg
adc
orb
stc
loop
cwtl
out
add
cmp
movsb
mov
lcall
repnz
mov
in
ficomps
cmpsl
fidivrs
outsb
fcmove
aam
push
cmp
das
cli
jns
fldenv
aas
and
bound
jbe
aaa
dec
pop
adc
pop
jns
push
xor
in
enter
xor
dec
sub
nop
xchg
mov
addr16
enter
arpl
push
lds
or
push
xor
popa
into
cmp
pop
push
dec
mov
jp
pop
xchg
pop
loope
incl
sub
andb
and
sbb
mov
pop
pushf
insl
push
jno
mov
xchg
fisttpll
fsts
lret
pop
jnp
jg
push
ds
mov
sar
decl
mov
pop
icebp
lea
loopne
shll
xor
sar
pop
add
mov
sub
test
int3
es
sbb
ds
outsb
inc
pop
and
cmc
clc
int
jecxz
sahf
mov
mov
add
pop
std
scas
testb
aam
xchg
sub
jge
test
mov
mov
jmp
sub
push
cli
cmp
cmp
lds
dec
testl
mov
scas
dec
inc
mov
insb
adc
jmp
ljmp
xor
inc
rolb
ja
mov
fmuls
pop
pop
cmp
mov
push
dec
out
in
lcall
xor
adc
ljmp
ljmp
cwtl
imul
daa
rorb
in
xor
inc
jmp
cli
incl
das
sti
cmp
insl
and
fxch
adc
into
mov
push
mov
dec
loop
inc
inc
jae
ljmp
push
pop
subl
mov
xchg
clc
push
pop
inc
lret
int3
jae
adc
push
pushl
mov
fdivrs
add
in
int3
out
sub
icebp
adc
stos
add
dec
xor
loop
loopne
push
or
shrl
in
or
ljmp
or
rorl
orl
dec
stos
dec
sbb
dec
sbb
lret
decl
in
sub
and
jmp
incl
addr16
dec
pop
fwait
movsl
sub
jb
daa
inc
jg
add
and
js
xor
pushf
jns
jge
popa
fmull
test
sub
cmc
sbb
mov
or
pop
cld
jmp
daa
dec
rcrl
mov
and
push
aaa
dec
int3
out
pusha
in
xchg
mov
push
test
cmpsb
jmp
in
test
ss
bound
inc
mov
dec
jmp
outsl
cli
call
inc
in
ss
adcl
inc
insl
mul
pushl
movsl
pcmpgtb
aas
orb
mov
add
lods
es
stos
scas
mov
incl
scas
fidivrl
jno
enter
adcb
enter
call
mov
add
mov
aad
popa
xchg
mov
inc
mov
pushl
xorl
dec
movsb
sub
iret
icebp
testb
loopne
out
ja
inc
mov
mov
sti
shlb
loope
repnz
popa
mov
lcall
sub
rorb
jg
ror
fcoml
mov
mov
or
jmp
mov
jae
addr16
sbb
xor
pop
mov
cs
sahf
sbb
pushl
int3
clc
dec
mov
rcrb
and
repz
sub
or
iret
sub
lcall
push
in
sbb
shrl
std
mov
add
in
cmp
out
cmp
mov
decl
outsb
pop
movsl
or
mov
jo
stos
xchg
sbb
jp
or
pop
mov
push
xchg
mov
cli
or
xlat
cs
lcall
aas
mov
ds
std
fcomip
call
adc
add
mov
test
dec
dec
lods
jo
dec
lea
dec
into
xchg
sub
jg
out
cmp
lea
in
ds
cmp
cmp
or
ret
and
test
push
push
jnp
sbb
lcall
mov
inc
xor
fdivl
jmp
lcall
jmp
out
mov
aas
les
addb
jb
in
decl
mov
scas
lods
xor
popf
pushf
aad
out
inc
repz
out
cmp
cmp
nop
test
jmp
test
aaa
inc
scas
sarl
push
dec
mov
lsl
popa
cmp
xor
out
aam
add
daa
hlt
inc
les
pop
clc
shrl
sahf
loopne
xchg
loopne
xor
stos
frndint
filds
adc
jmp
jns
xchg
aaa
icebp
incb
int3
arpl
pop
js
cs
fldl
mov
pop
subb
and
push
in
das
mov
push
dec
sub
rorl
lock
mov
aas
jle
arpl
js
mov
ljmp
push
mov
adc
push
or
push
add
cmp
mov
shl
enter
cli
jg
cs
add
xchg
jecxz
mull
and
inc
test
add
cmp
repz
xchg
or
pop
sahf
dec
mov
hlt
pop
into
push
and
call
xchg
xor
icebp
mov
or
mov
lds
xchg
lret
in
aas
mov
int
pop
outsl
xor
mov
into
enter
add
addr16
cmpsl
adc
jmp
cmp
xor
mov
nop
push
mov
fcmovb
or
fisttpl
adc
inc
sbb
pop
lcall
xchg
adc
mov
and
push
jne
clc
jno
sub
push
fs
pushf
ss
cli
jmp
daa
jns
lods
dec
dec
push
inc
adc
and
jecxz
fiaddl
jmp
adc
sbb
jmp
sbb
mov
cmpsb
lahf
jle
fsts
cltd
jg
fildll
push
incb
fwait
insl
mov
pop
adc
call
mov
or
xlat
dec
cmpsl
mov
dec
popf
fistpl
dec
insl
xor
les
mov
inc
pop
je
pop
xor
test
mov
lcall
mov
in
jle
and
rolb
ret
les
adc
push
ljmp
xor
inc
sti
pop
push
mov
aaa
aam
jl
mov
rol
dec
cld
cmpsb
fcmovu
adc
incl
cli
adc
or
inc
scas
xchg
test
xchg
dec
popf
mov
cli
jae
aaa
dec
clc
lcall
cmp
pop
addl
std
lcall
sbb
enter
mov
mov
insb
icebp
push
cmp
jp
lea
clc
pop
dec
loopne
imul
aas
jne
mov
sub
ljmp
inc
pop
sub
mov
es
sub
sub
sub
fbld
data16
iret
call
xor
pop
cwtl
lods
inc
repz
int3
test
xchg
inc
xchg
push
incl
ret
lods
loopne
sbb
sbb
cmpl
cmpsl
aas
aam
ljmp
jbe
push
jp
mov
stos
test
inc
cmp
xchg
mov
mov
ljmp
test
adc
cmp
fbstp
mov
and
sbb
iret
push
decl
repz
cmp
repnz
inc
fdivl
lds
push
jns
decl
or
adc
inc
mov
stos
loopne
jp
add
mov
cmp
push
lcall
dec
pop
adc
idivb
dec
sub
and
test
insb
sbb
pop
outsl
decl
lock
and
pushl
or
fmull
movsl
clc
fdiv
inc
or
add
push
mov
pop
cld
and
jbe
xchg
das
data16
leave
fcomip
jne
lret
jle
in
mov
jge
sub
adc
push
mov
mov
inc
xchg
xchg
mov
adc
mov
mov
testl
mov
cld
jmp
int
hlt
or
mov
bsr
inc
movsb
jp
imul
icebp
outsb
jg
sub
cmpsl
clc
aam
movsb
add
out
inc
push
std
sbb
ljmp
js
pop
dec
sub
js
xor
out
jle
call
shl
ss
sub
xchg
adc
fistpl
pop
filds
fbld
mov
mov
testl
mov
inc
cwtl
xchg
ss
in
pushf
cwtl
fcomi
cmpsb
ja
sar
cmpl
lcall
test
mov
cmp
and
rcrb
inc
icebp
pop
pop
jnp
xor
pop
sub
xchg
cmp
cmpsb
call
sar
sub
loop
dec
daa
mov
pop
paddb
dec
stos
or
jnp
fsubs
stc
icebp
push
mov
pushf
and
cld
dec
fisttpl
push
call
xchg
adc
pop
xor
push
pop
jp
in
addb
mov
pushf
push
pushl
sbb
cmp
adc
iret
inc
mov
shlb
or
lea
jmp
mov
mov
mov
scas
aam
imul
fcmovnu
test
int
pop
in
mov
dec
cli
mov
cmp
movsb
mov
out
cld
and
jo
popa
fstpt
pop
cmp
outsb
out
shlb
test
mov
mov
ja
shrb
mov
mov
decl
mov
pop
sbb
adc
sbb
dec
adc
pushl
subl
cmp
xor
clc
sub
icebp
icebp
out
or
mov
incl
dec
and
lods
xor
sahf
mov
outsb
xor
and
mov
aas
sbb
ljmp
sub
mov
out
inc
sahf
inc
rorb
push
push
icebp
in
adc
jecxz
mov
mov
mulb
in
and
mov
mov
inc
mov
repnz
xlat
imul
push
lahf
outsl
sbb
mov
in
jmp
jae
arpl
bound
mov
neg
iret
ret
in
cmp
lea
lods
sarl
and
pushl
gs
addr16
outsl
loopne
pop
mov
jg
lcall
sbb
jg
xlat
sbb
jb
shl
pushl
dec
mov
repz
aam
push
cmp
adcb
int3
mov
pushl
or
sub
xor
lods
adcb
das
pop
mov
dec
xchg
clc
xchg
outsl
cli
mov
repnz
dec
sbb
dec
adc
or
decl
imul
jle
xchg
xchg
mov
mov
fnstcw
cmpsb
pop
call
mov
jle
addb
adc
cmpsb
and
inc
fcoms
and
punpcklwd
call
sbb
iret
nop
cmp
movsb
and
mov
ss
ljmp
inc
cli
rep
fcmove
call
orl
hlt
mov
xlat
xchg
jo
pop
or
jmp
in
push
iret
and
insl
mov
sysexit
sub
lock
inc
mov
jg
hlt
dec
sti
adc
lcall
iret
iret
pushf
leave
inc
dec
mov
or
jmp
dec
sbb
in
stc
cmp
xor
mov
sar
cmp
pushf
pop
mov
sarl
out
mov
cmc
les
rclb
hlt
std
pop
idivb
pop
or
or
hlt
jmp
test
nop
out
cmpl
cmp
stos
stc
stos
xchg
in
ljmp
and
and
shlb
hlt
pop
jbe
push
lcall
clc
jbe
shr
push
pop
inc
jnp
movsb
mov
inc
das
repnz
inc
jne
or
sbb
decl
aaa
pushl
xor
sahf
mov
mov
add
mov
or
xchg
inc
clc
in
inc
mov
cltd
sub
mov
test
jnp
or
cmp
pushf
push
sbb
push
mov
jne
enter
jmp
ljmp
ljmp
mov
js
push
ret
inc
sbb
xchg
ljmp
mov
jmp
and
sbb
es
sub
pop
adc
test
aam
sar
pushl
fimull
sbb
and
pop
inc
out
jmp
jns
or
and
sahf
sub
int
push
xchg
stc
xchg
push
outsb
popf
xor
adc
pop
pushf
inc
sbb
mov
xchg
rcr
jnp
fs
or
mov
call
out
jb
push
adc
sbbb
repz
mov
stos
inc
jnp
inc
jg
insb
inc
and
insl
outsl
add
and
and
hlt
decl
cld
pop
call
push
loopne
or
loope
ds
les
sarb
or
cmpsl
mov
xchg
push
fsubrl
bound
test
and
call
in
aaa
sbb
inc
add
arpl
xorb
push
popf
mov
movl
jecxz
sbb
inc
aas
cs
int
dec
fstps
in
cmp
incl
sbb
insb
jnp
add
mov
cmpb
fwait
xchg
sub
icebp
add
call
adc
push
cltd
xchg
mov
xchg
lods
jecxz
ja
sar
add
call
push
push
cltd
dec
push
into
pop
adc
addb
jbe
andl
ljmp
test
dec
test
push
in
jecxz
iret
add
jg
and
add
cld
decl
lock
ficoml
adc
or
cld
enter
pop
add
call
enter
loope
sarb
movsl
pop
fsubrl
sbb
add
pop
push
push
mov
mov
mov
and
inc
xlat
adc
shll
sbb
dec
mov
fisttps
call
dec
pop
mov
ss
lock
jno
cs
mov
push
ret
inc
incl
addl
jg
fcmove
or
js
cmp
scas
icebp
push
fcompl
daa
nop
sar
fucomi
mov
repz
sbb
mov
jp
test
sub
ljmp
push
idiv
cld
shrb
into
jne
xchg
int3
cltd
shll
jae
xchg
adc
pop
ljmp
or
cmpsb
leave
inc
fsubrl
test
stc
and
stc
ret
jmp
into
sahf
mov
pop
xchg
popa
push
pusha
ret
mov
in
outsb
lods
repnz
ljmp
fldcw
repnz
push
test
call
clc
rcrl
add
sbb
cmp
xor
stos
sbb
int3
negb
fisubs
or
in
sub
lcall
push
add
jmp
lods
scas
rcrl
punpcklbw
ret
pop
xchg
dec
sbb
outsl
mov
call
sar
mov
data16
xlat
into
mov
jb
cwtl
adc
mov
hlt
jno
cmpb
dec
pop
mov
push
ficomps
xchg
pushl
inc
shrb
pop
push
lods
inc
jae
scas
mov
daa
fistps
pushl
repz
inc
sbb
testb
cmpsb
mov
xor
repnz
and
inc
pushl
scas
ja
mov
mov
mov
mov
cmpsl
das
js
imul
sbb
mov
loop
xchg
push
push
xchg
fidivrl
int
sub
shl
dec
jmp
bound
outsb
push
js
in
or
mov
jno
stc
mov
std
fs
shlb
inc
cwtl
insb
ds
xchg
jbe
ss
mov
fstps
test
mov
rclb
call
mov
repnz
icebp
dec
int
aad
fcmovbe
sbb
lds
stc
jl
add
out
loope
pop
xchg
test
mov
add
jle
mov
jl
jge
cmp
cmp
jg
gs
das
ds
scas
imul
mov
jg
sub
out
xchg
pusha
push
sub
inc
stc
mov
and
jl
test
sub
mov
inc
loopne
push
pop
inc
test
out
xor
jno
test
outsl
cs
les
repz
jecxz
rcrl
mov
fcomip
ljmp
push
cld
mov
cmpsb
mov
jecxz
repnz
sbb
cmp
scas
ljmp
inc
cltd
inc
ss
orb
out
aam
movl
push
push
adc
mov
sbb
mov
sahf
test
shrw
sub
hlt
mov
incl
loop
lret
mov
mov
fucomp
lret
popa
cltd
sti
enter
or
pushl
ss
fdivrs
cmp
outsb
aam
mov
push
cmp
mov
daa
jne
xor
jg
cmp
inc
push
or
sbb
adc
lods
jmp
mov
movsl
in
cmp
push
pop
pop
push
and
nop
out
scas
fcomp
adc
inc
jp
icebp
cmp
and
cmpl
mov
or
add
movsl
ja
pop
adc
push
jge
pop
mov
push
jg
add
inc
inc
sbb
ret
xchg
out
stos
mov
sbb
ljmp
sbb
bound
adc
push
into
js
sti
lret
cli
mov
jmp
pushl
shll
sbb
lret
repz
test
sbb
repz
push
jnp
aas
dec
ljmp
decl
maskmovdqu
mull
aas
add
outsb
jl
cmpsb
fsts
and
aaa
push
add
jnp
incl
cld
ret
cmp
imul
mov
jg
enter
pop
ja
jmp
cmpsl
xchg
sub
sub
push
inc
inc
and
xchg
out
aaa
inc
shl
xlat
xchg
pop
lahf
push
cli
dec
push
popa
jg
pop
popf
in
fnstsw
ljmp
bound
adc
xchg
and
or
pusha
mov
insl
repnz
push
scas
push
lds
inc
pop
adc
stos
pop
enter
xor
cwtl
sub
cmp
das
bound
sub
cmpsl
or
jmp
fdivl
xchg
jno
insl
xorb
cli
jnp
divl
call
mov
in
call
decl
xchg
cwtl
or
rcrb
cmp
ret
push
negl
ja
leave
hlt
incl
andps
sahf
lahf
lahf
movsb
push
push
aad
stos
jb
int3
decl
js
cwtl
pop
mov
pop
push
xor
dec
xchg
ret
pop
add
push
xchg
add
push
in
aam
std
mov
loope
inc
add
scas
cltd
je
sahf
repz
incl
add
insb
shll
ja
adc
lret
js
in
cs
imul
nop
fsubrl
sti
inc
fwait
mov
add
ljmp
enter
cmpsl
aas
nop
repnz
mov
cmp
ljmp
cli
outsl
rolb
mov
movl
test
outsb
sbb
pop
movsb
lods
aad
push
rcrl
inc
or
movsb
mov
shrl
call
fwait
push
insl
xchg
fldz
iret
insl
pop
pop
xor
push
mov
mov
stos
sbb
jmp
dec
negl
repz
mov
pop
mov
sub
sbb
mov
js
leave
aad
fmuls
std
pop
ds
mov
lcall
sbb
inc
mov
outsl
subb
jo
stos
xchg
mov
ret
cwtl
mov
loopne
push
inc
rorb
cmp
jns
outsb
sbb
jg
out
push
mov
pop
pop
repnz
xor
cld
mov
inc
aam
and
ss
pop
mov
jo
dec
xchg
gs
xor
sub
add
in
dec
ds
fdivp
mov
jg
sahf
push
or
adc
sub
jno
mov
mov
push
sbb
sar
fisttps
lcall
loop
xchg
out
sub
ljmp
sub
das
fwait
mov
or
inc
push
mov
pushl
cs
add
es
add
fadd
xor
fcmovbe
pop
and
imul
addr16
decl
xor
or
bound
fadds
push
mov
jp
incl
fdivrp
jae
and
sbb
mov
sub
cmp
jle
pusha
mov
hlt
inc
shrb
push
int3
fsubrs
xchg
fcoml
rolb
mov
mov
and
incl
inc
fiadds
or
push
fcomip
add
jne
mov
pushf
testl
adc
xchg
das
mov
mov
fldt
cmp
mov
jne
mov
pop
out
jno
and
sbb
and
push
js
dec
cmp
jns
dec
leave
or
adc
movb
pop
add
push
decl
cmp
pop
loop
loope
daa
xchg
cld
xor
cld
call
fsubl
test
arpl
outsl
enter
lods
ljmp
sub
jle
call
testb
out
sbb
cli
pop
pusha
sbb
xorl
xchg
mov
jne
jne
xor
cmc
enter
es
out
add
sub
mov
push
cltd
cmp
incl
ja
jb
adc
mov
sbb
clc
bound
or
mov
stc
adc
xor
mov
dec
cld
mov
sub
or
data16
lahf
mov
sbb
filds
jo
popa
std
xchg
out
lahf
lcall
push
sbb
clc
mov
lcall
push
sti
stos
mov
sbb
mov
push
mov
sbb
sub
loopne
mov
cmp
inc
hlt
lcall
dec
fwait
push
xor
sub
inc
cli
int3
jo
inc
int
adc
aad
js
jl
dec
jmp
and
bnd
mov
hlt
and
pop
addr16
jbe
push
mov
and
pushl
jl
jnp
push
je
scas
shlb
sbb
cmp
push
daa
aaa
mov
cmp
call
imul
push
or
ljmp
out
sbb
jbe
sti
out
test
call
jno
push
jle
cmp
test
test
insl
gs
xorl
ret
dec
fnstcw
mov
daa
sub
adc
dec
push
jge
adc
and
sub
adc
out
add
jg
adc
test
orl
adc
dec
popf
add
call
dec
es
in
xchg
in
mov
decb
jns
enter
ret
add
incl
dec
and
shll
incl
into
mov
adc
mov
dec
push
jmp
lret
dec
stos
fld
and
ret
xchg
popf
mov
movsb
xchg
push
xchg
cmp
jmp
mov
dec
popf
dec
lds
jmp
jb
xchg
cwtl
cmp
stos
xlat
imul
cmpsl
mov
sub
xchg
lcall
andl
and
pop
lcall
fcomip
jg
dec
pop
test
dec
or
sub
dec
jns,pn
adc
das
leave
orl
push
push
dec
fisttps
insb
jp
loopne
pop
ret
andl
or
adc
repz
mov
out
cld
push
adc
or
cli
js
jns
and
xchg
aam
decl
in
push
xchg
ds
cld
add
add
scas
dec
dec
or
imull
incl
mov
mov
push
fcmovu
mov
pushf
jo
sti
adc
icebp
mov
ljmp
clc
or
es
loope
jbe
pushl
enter
fimull
cmpsl
push
jbe
je
bound
cmp
loop
es
ja
aad
mov
out
adc
stc
nop
mov
jg
mov
mov
std
cmpsl
lcall
jo
daa
mov
sbb
adc
jnp
cmpxchg
mov
loopne
mov
mov
call
jns
xlat
xor
sbb
repz
mov
mov
inc
pop
lock
jmp
xor
pop
xor
push
add
sub
lock
mov
jne
mov
pop
jnp
aaa
cmp
cs
and
mov
repz
pop
les
call
mov
and
sub
les
in
xchg
jl
sbbb
mov
xchg
and
pop
cmp
jno
push
popa
nop
int
cmp
ljmp
pop
or
movsb
push
loop
rcrb
pop
add
pop
cmc
int3
test
pop
pusha
les
pop
aam
sahf
ret
mov
out
jg
dec
jmp
or
mov
adc
add
sub
push
in
inc
sub
js
and
sbb
inc
mov
pushf
test
out
es
mov
mov
xchg
cs
dec
fmul
jb
and
or
stos
jmp
xchg
repz
pop
arpl
push
call
or
outsb
push
mov
ret
gs
rolb
push
mov
std
jg
bound
iret
fsubl
insl
scas
jmp
push
sbb
or
adc
add
push
cltd
pop
xchg
and
dec
xchg
sub
incl
nop
xor
scas
dec
pop
or
hlt
add
pop
mov
cmp
fdivr
incl
shll
ret
ficompl
push
push
mov
bound
mov
std
pushl
aaa
int3
aam
push
pusha
bound
pop
sbb
lret
jge
icebp
outsl
sbb
ljmp
push
push
in
cwtl
mov
xor
arpl
sbb
inc
sti
sbb
out
fimuls
add
std
dec
nop
push
cld
icebp
mov
dec
inc
and
fmuls
add
jmp
adc
jg
jmp
xchg
lahf
test
aam
jle
push
dec
loopne
jmp
pop
pop
add
pop
bound
stos
add
adc
xchg
dec
push
cmp
shr
jmp
mov
fwait
jne
adc
fldl
outsb
mov
out
xor
pushl
sbb
fcmovne
inc
out
jle
lret
in
push
inc
fcmove
shll
idivb
movsl
sbb
into
jecxz
incl
and
cmp
push
clc
xchg
add
sarl
xchg
and
and
call
call
and
xchg
xchg
jp
push
xor
mov
mov
xchg
jmp
cwtl
jge
cmp
lock
mov
jb
mov
js
scas
lret
cmp
icebp
ljmp
sbb
push
inc
fisubs
mov
sbb
into
jo
outsl
dec
lret
scas
inc
sub
xor
enter
add
call
pop
test
popa
push
mov
lahf
xorl
aaa
mov
dec
jmp
adc
pop
cmp
sub
pop
xchg
cmpsl
jnp
mov
test
sub
inc
ds
and
cld
incl
and
jns
arpl
out
push
ljmp
mov
cli
jb
pop
jno
cmp
hlt
shll
jmp
add
roll
ret
sbb
fsubr
sti
icebp
std
sub
push
adc
call
in
in
dec
pop
cwtl
and
aam
fistpll
jle
jmp
dec
mov
arpl
push
adc
rcll
push
icebp
mov
dec
adc
xchg
xor
sbb
incl
push
jae
jnp
fwait
push
das
xchg
or
sahf
cmp
push
inc
mov
xchg
adc
pop
lods
rol
add
lahf
or
mov
xchg
call
loopne
aaa
outsl
test
add
pop
jne
mov
sbb
lock
int3
push
push
mov
stc
rorb
jg
xor
jmp
lcall
test
sbb
mov
pop
xchg
pop
dec
or
lock
test
scas
xchg
mov
popf
pop
cmp
ret
pop
ud0
jmp
out
jp
xor
mov
dec
test
adc
push
cmc
inc
les
int3
pop
ret
rcr
pushl
jbe
out
jmp
push
sarb
sub
ret
pushl
xor
pop
xorl
imul
inc
or
call
rol
mov
loop
pop
add
push
std
jmp
mov
nop
inc
adc
push
dec
adc
test
in
je
cld
jg
imul
repz
incl
fstps
iret
mov
incl
arpl
mov
pop
ss
in
adc
int
sub
decl
add
sbb
fistl
dec
mov
jle
das
lret
pop
leave
pop
lahf
adc
pop
inc
ljmp
xor
sbb
mov
insb
loopne
lcall
or
jno
test
sub
ljmp
sub
xor
jnp
jo
push
scas
add
jp
movsl
pushf
rorb
adc
mov
cld
fildll
push
das
jle
mov
dec
inc
push
pop
lahf
sbb
lcall
lods
jo
add
addl
fs
sbb
arpl
jne
call
sar
incb
xchg
mov
mov
pop
mov
push
outsl
cld
icebp
pushl
mov
or
lret
test
je
in
lea
ud0
das
jbe
push
arpl
cmpsl
mov
ljmp
in
push
fisubs
mov
or
ljmp
into
push
jg
dec
out
mov
dec
jnp
outsb
inc
lret
fdivr
and
dec
out
jmp
ljmp
mov
hlt
mov
div
stc
movsl
stc
frstor
or
inc
push
shll
js
sub
dec
cmpsl
fistl
cmp
ljmp
cli
fistps
push
cmp
notl
test
call
xor
cld
mov
sahf
shlb
fsubl
leave
push
ljmp
insb
and
add
mov
jae
add
test
rclb
adc
sbbb
xchg
leave
xchg
decl
mov
inc
scas
or
sbb
and
inc
add
sbbb
cmp
jg
ljmp
mov
cmp
movsl
mov
clc
and
loop
js
push
cmp
push
sbb
inc
clc
and
sbb
lea
clc
lret
insl
add
pop
hlt
dec
shrl
mov
decl
aad
xchg
push
mov
fistpl
xchg
in
dec
inc
filds
jg
cmp
in
gs
add
jno
mov
shll
leave
mov
and
aam
push
scas
popa
pop
mov
xchg
ret
dec
jae
cltd
cmpb
fwait
pop
shll
ljmp
bnd
pop
int3
cmp
movsb
fs
fs
into
es
fstps
mov
sub
jg
nop
out
orb
test
lret
pop
sbb
in
xor
leave
sti
sbb
shll
ljmp
sarl
inc
dec
and
or
pop
push
pop
fldl
jmp
push
cmc
gs
fists
cmp
mov
ret
aas
aam
push
movsl
jnp
aam
dec
mov
cmp
clc
push
lock
pop
or
aad
add
mov
cmpsb
imul
jecxz
inc
sub
mov
decl
inc
push
stos
fnstcw
sub
mov
jmp
out
lret
jo
aad
jne
arpl
push
mov
adc
mov
stc
popf
xchg
loop
fdivr
cld
mov
popa
popa
pusha
scas
cmp
and
push
push
and
jmp
cwtl
decl
scas
stos
roll
repnz
cmp
scas
cmpsl
loopne
cltd
mulb
jl
ljmp
jp
sti
cltd
cmp
jno
std
xor
mov
xor
inc
notb
sub
inc
mov
test
pop
ret
xor
cli
jo
xchg
adcb
pusha
dec
das
dec
and
pop
inc
repz
pushf
mov
mov
push
in
loopne
push
lcall
mov
inc
test
clc
ljmp
jg
pushf
mov
fcmovne
push
pop
pop
mov
pop
shlb
xor
xor
mov
or
je
dec
in
mov
adc
addr16
adcl
lock
inc
xor
ljmp
push
pop
lahf
imul
inc
jae
fisttpl
sbb
and
jae
shr
aam
ljmp
fptan
idiv
test
pop
cmp
decl
shlb
sub
into
pop
cmp
test
ja
ja
push
imul
fwait
call
push
cwtl
inc
mov
frstor
inc
bound
and
adc
adc
mov
add
and
jnp
pop
jg
sbb
nop
and
fs
mov
add
ss
add
lea
ljmp
incb
mov
sti
imul
repnz
sub
sub
jg
pop
mov
cmp
sbb
inc
add
sub
adc
adc
aaa
mov
and
mov
cld
sub
outsb
movsl
outsb
ljmp
das
push
xor
xor
cmp
xor
adc
incl
lahf
fxam
rclb
jne
ret
or
pop
popa
jmp
mov
scas
cmp
hlt
pusha
jae
add
adc
cs
test
sar
sbb
xchg
push
lret
into
pop
pop
das
pop
jp
dec
cmc
fs
xchg
in
addr16
cmp
push
xor
mov
push
mov
jge
stc
std
data16
cli
push
cld
dec
dec
add
shlb
int3
shl
and
ljmp
call
sub
add
fstpl
dec
or
scas
and
sbb
outsl
sub
inc
stos
jmp
pop
or
inc
pop
pusha
popa
cmp
es
insl
imul
add
and
mov
jecxz
and
testb
push
jne
mov
rcr
xlat
cwtl
xchg
lcall
mov
jmp
popa
std
imul
fcom
aas
cmp
mov
call
or
addb
rcrl
xchg
out
jecxz
inc
pop
xchg
mov
ljmp
mov
test
test
add
and
push
mov
lahf
pushf
xor
decl
ds
enter
add
pushf
mov
or
lods
movsb
repnz
mov
rorb
out
cwtl
add
add
je
mov
push
int3
or
aas
ljmp
and
ss
ja
pop
lods
inc
pop
movsb
inc
mov
int
decl
pusha
push
cmp
in
mov
sarb
cmp
cmpsb
lcall
addb
sub
pusha
pop
ja
dec
cmc
test
push
mov
cmp
ljmp
mov
lahf
mov
mov
mov
dec
push
shr
mov
scas
dec
stc
jmp
ljmp
dec
inc
xchg
mov
imul
iret
ret
add
xchg
sbb
pop
sbb
mov
mov
loopne
push
xor
cwtl
dec
clc
lock
js
fsubrl
add
fcomip
pushf
out
pop
add
inc
jno
lret
pop
lods
sti
ja
std
out
xchg
push
adc
or
in
in
dec
lahf
add
jbe
fwait
jle
push
push
adc
mov
or
xchg
pop
hlt
stos
inc
push
push
or
push
mov
out
fidivs
decl
gs
fsts
fcomps
ds
orb
ss
mov
movsl
mov
mov
jl
push
push
testl
mov
inc
mov
add
cwtl
pusha
push
in
xchg
decl
fcomi
inc
mov
mov
in
adc
fsubrp
mov
xchg
orb
jge
adc
dec
or
out
xchg
mov
add
scas
push
sub
fxch
jno
push
xchg
and
xor
jg
call
ja
add
jp
sahf
dec
cltd
mov
stos
jb
jnp
shl
sub
aaa
sbb
xor
dec
xor
out
jo
notb
or
lcall
scas
mov
push
mov
pushl
imul
mov
dec
mov
ljmp
mov
test
sarb
shll
in
sub
inc
insl
and
jns
fcomip
ljmp
lahf
insl
repnz
add
push
or
stc
xchg
rcll
fnstcw
imul
pop
inc
sarb
sub
jge
inc
xchg
pop
push
push
push
dec
insl
call
mov
outsb
jbe
int3
xchg
cmp
sbb
lret
repz
fistl
sub
cmc
lret
decl
fldenv
lods
in
lds
xchg
add
xlat
pop
arpl
aaa
mov
xchg
xor
jg
test
adc
pop
mov
xor
add
decl
push
mov
mov
pop
dec
loop
fwait
adc
loope
lods
int3
and
inc
mov
adc
stos
mov
sbb
decl
inc
push
enter
cld
ret
push
cli
mov
jecxz
pusha
int3
dec
clc
stos
mov
push
jmp
std
adc
imul
xor
aad
test
icebp
jmp
cmc
loope
mov
outsb
pop
or
enter
and
pop
outsl
and
xchg
xor
cmp
inc
daa
adc
sbb
xor
movsb
push
adc
incl
outsb
pusha
jmp
mov
xchg
mull
jne
mov
inc
jno
jg
xor
fsubs
or
push
push
mov
repnz
fldt
pop
icebp
outsl
cmp
in
jp
movsb
sbb
int3
cmpl
adc
orb
gs
lock
scas
mov
lods
sahf
dec
cmpsl
cmpsl
loop
xchg
jge
dec
jle
into
sbb
arpl
call
xchg
ret
movsb
ja
cwtl
sub
push
push
dec
les
call
push
fs
out
mov
lds
fidivl
sti
xchg
mov
addb
ficomps
push
push
sti
gs
ljmp
cli
call
inc
sahf
js
mov
push
loopne
es
in
test
clc
push
fisttps
leave
int3
fs
mov
rolb
cmpsb
inc
push
adc
sti
jmp
push
add
sar
pushl
fsubr
loope
push
and
ss
pop
pop
add
imul
shrl
mov
push
and
sub
mov
aam
jns
popa
js
xchg
roll
ljmp
rdpmc
sub
lea
lahf
les
and
sub
call
push
stos
cmp
push
cmc
int
scas
pop
jbe
jle
mov
jnp
rcr
inc
push
loope
fisttpl
push
xor
lcall
pop
cmp
cwtl
lret
es
xchg
adc
push
fcomip
js
je
or
push
fisubl
notl
enter
out
inc
inc
and
call
xor
and
in
inc
jecxz
xor
and
mov
dec
int
or
lcall
sbb
cwtl
jne
sub
mov
and
mov
dec
ud0
pushl
arpl
xchg
jns
inc
addr16
out
aas
mov
stc
and
scas
inc
mull
fisttpll
fnstcw
das
movsl
mov
jg
dec
divl
imul
decl
mov
or
xchg
and
push
nop
mov
add
pop
lea
dec
push
or
sbb
andb
pop
out
outsb
mov
push
jns
add
jge
add
decl
and
cwtl
shlb
bound
call
aaa
pop
add
adc
out
es
jg
jne
fisttpl
rcrl
push
push
jbe
test
fisttps
idivb
idivl
dec
add
jg
mov
ja
and
mov
inc
pop
mov
shrl
andb
jo
cs
push
adc
ljmp
mov
decl
ret
in
jns
lea
inc
mov
insl
in
idiv
ljmp
and
test
pop
sub
push
mov
cmpsl
stos
and
nop
imul
decl
mov
es
push
xlat
pusha
mov
jne
xchg
dec
ja
cmp
loope
lahf
dec
aaa
std
decl
ret
daa
es
and
cli
fimuls
popw
dec
enter
decl
pop
jno
xlat
pop
insl
dec
and
lods
test
pop
out
and
sbb
insb
mov
pop
std
lcall
lods
imul
cmp
into
out
inc
lods
xor
xchg
sarl
fildl
in
mov
ljmp
or
incl
cmpsb
fwait
into
lock
scas
xorb
pop
xlat
mov
mov
jmp
xor
cmp
jne
mov
aaa
push
sub
out
or
inc
xchg
aad
insl
xchg
push
xchg
add
sub
sbb
ret
cmp
mov
test
push
fisttps
call
popf
or
pop
leave
push
inc
jp
adc
enter
aaa
outsb
lret
loope
jnp
loope
xchg
jmp
ret
test
hlt
lods
xchg
pushf
aas
or
xchg
mov
into
inc
inc
sub
incl
mov
jae
lret
jle
loope
cli
stos
shl
push
jecxz
mov
fcom
push
cmp
jmp
imul
adc
ror
or
push
pop
push
mov
ljmp
jg
mov
into
pop
ljmp
mov
insl
adc
int3
mov
into
in
out
fnsave
int
pop
testl
cmp
in
mov
mov
cltd
pop
mov
pushl
scas
repz
xor
fimull
mov
int
xor
add
aas
in
punpckldq
dec
jmp
mov
popa
cmp
mov
jp
test
xchg
jo
icebp
and
pusha
xor
mov
decl
loope
dec
add
push
insb
arpl
aaa
adc
call
mov
jecxz
cmp
fiadds
jmp
adc
cld
xchg
loope
push
insl
jns
scas
jns
rorb
mov
and
mov
je
lcall
adc
xchg
std
repnz
push
cmp
fs
cli
mov
jecxz
pop
inc
in
jmp
arpl
add
mov
call
enter
aaa
movsl
pop
fbstp
in
sbb
xchg
lcall
ljmp
sbb
sbb
jmp
add
jg
fcoms
call
popa
lret
cltd
ds
push
xchg
shl
sub
out
mov
sahf
cwtl
jge
or
imul
cmp
int
or
xchg
inc
test
loop
cmpsl
call
push
ss
out
stc
mov
ret
out
push
insl
gs
sahf
popa
nop
sbb
or
sub
jae
mov
hlt
incl
cli
ret
filds
lock
fmul
dec
pop
lea
mov
decl
std
inc
das
adc
sub
aad
arpl
fs
cli
call
lahf
mov
cmp
mov
pop
cmpsb
dec
adc
or
sbb
out
adc
lods
dec
fsubrs
arpl
aaa
pop
aas
imul
stc
push
cld
ljmp
mov
sbb
xor
test
insl
cmp
pop
bound
pushl
mov
xor
fsubrs
scas
ror
idivl
or
mov
add
roll
push
sub
mov
xchg
or
icebp
sti
jmp
add
scas
test
jle
mov
dec
inc
add
in
mov
shll
call
sbb
scas
push
jno
cltd
repz
add
push
add
je
iret
mov
test
inc
push
cwtl
or
imul
mov
jmp
mov
test
cmp
inc
mov
pop
adc
or
jb
hlt
cmp
in
jmp
and
nop
sub
gs
cmp
ljmp
ffreep
dec
mov
lods
pop
repz
dec
xor
nop
cld
clc
dec
sub
mov
filds
imul
outsl
in
xor
loope
out
adc
dec
pusha
aaa
mov
loopne
cmpl
sub
aad
dec
enter
mov
cmpsb
sub
mov
push
xor
cli
pop
popl
aam
push
and
in
aam
decl
cmc
adcl
mov
inc
insl
out
ss
cmp
inc
dec
xchg
int3
xchg
mov
push
lcall
and
addr16
pop
mov
ljmp
sbb
mov
adc
outsb
mov
stc
inc
sbb
mov
inc
sub
cmp
cld
sub
sub
pop
xchg
lcall
dec
fmuls
push
and
add
movsl
jo
xchg
fidivrl
cltd
mov
add
lea
push
mov
in
cmpsb
pop
adc
push
jmp
iret
xor
sub
ss
pushl
xchg
and
push
aad
pusha
or
mov
ds
daa
jbe
inc
adc
add
es
ds
dec
repz
sahf
out
clc
rcrl
repz
sub
in
imul
cmp
jg
or
outsb
or
std
lahf
mov
fld
push
jne
pop
xchg
sub
fistl
fwait
out
pop
loop
test
push
adc
ret
pop
jne,pt
mov
popf
pop
mov
jae
outsl
inc
adc
mov
jl
cmp
xchg
mov
xor
xlat
and
stos
mov
sub
mov
xlat
inc
mov
lods
ss
and
or
xchg
cmp
pop
xchg
mov
clc
incl
adc
outsl
dec
jecxz
dec
stos
adc
xor
push
adc
and
dec
push
mov
outsl
ds
mov
cmc
outsl
jmp
ret
pop
mov
mov
adc
fbld
mov
adc
fnstcw
xchg
sub
pop
imull
int3
ljmp
pop
lret
test
xchg
cmpb
inc
fisubrs
aam
fwait
and
pop
outsb
xchg
js
pushl
push
icebp
cmp
ret
mov
mov
mov
or
fisubrs
decl
lock
les
xchg
fsubl
pushw
les
dec
rcr
mov
mov
incl
stos
pop
nop
jl
in
ficompl
dec
outsb
cmp
xchg
cmp
es
shrb
shlb
inc
or
push
pushl
sbb
sbb
ss
cmpsl
aam
loop
cld
push
in
push
addr16
popf
idiv
jl
loopne
jg
xor
insl
insl
push
push
movsb
mov
ficomps
adc
incl
push
xor
ret
mov
loopne
fld
loopne
xchg
lcall
or
xor
and
jmp
lret
cs
pop
inc
jo
aaa
inc
add
dec
mov
pop
cmc
loop
rcrb
xor
fidivrl
out
test
aam
fidivl
or
test
and
mov
fimull
call
leave
pop
inc
fiadds
icebp
xchg
pop
xchg
adc
ficomps
imul
xlat
jg
inc
hlt
lds
inc
xor
js
push
loop
lret
mov
into
sub
jg
xor
jne
mov
cmp
dec
cmpb
ljmp
inc
pop
cmp
jb
call
cli
imul
je
incl
cld
fwait
and
push
cs
sarl
mov
cmp
and
imul
in
loopne
pop
add
jns
gs
inc
es
fidivrs
inc
sbb
jg
mov
js
insb
nop
push
push
mov
fistl
mov
ret
decl
int
push
mov
jno
enter
jecxz
jns,pt
int3
aam
inc
adcl
popf
cld
mov
push
inc
fadd
push
mov
out
jae
ljmp
das
cmp
cmp
into
divb
adc
ljmp
jne
dec
mov
xchg
ljmp
cmpsb
icebp
jb
in
les
xlat
movsb
or
or
cmc
jle
and
xor
dec
and
sub
aad
push
iret
and
add
std
jg
pop
push
add
in
pop
jle
das
aad
xchg
mov
decl
add
inc
and
push
sub
clc
mov
cltd
in
push
pushl
jne
jp
mov
xchg
inc
call
sarl
stos
push
ljmp
movl
out
xlat
mov
call
pop
sbb
pop
andl
notb
xchg
sbb
sbb
mov
decl
dec
jo
xchg
or
pop
out
cmp
shr
push
loope
cltd
dec
pop
dec
sbb
mov
fldcw
fs
pushl
adc
dec
sti
pop
push
add
test
jg
pop
mov
ljmp
ror
lcall
mov
mov
dec
sub
sbb
push
cltd
xchg
push
movsb
mov
add
lcall
es
loop
mov
sub
xor
fwait
pop
sbb
into
add
jmp
mov
dec
xchg
add
call
jge
loop
pop
mov
hlt
aas
mov
mov
mov
clc
push
sub
insb
mov
pop
cmp
sbb
pop
cmp
and
jg
outsl
pusha
adc
pop
test
push
cmp
scas
or
or
adc
loopne
lock
pop
lods
xor
in
lods
outsb
je
mov
push
mov
cmovs
ret
push
mov
sub
shl
dec
mov
and
pop
pushl
cmc
aas
jb
jecxz
scas
inc
sbb
je
fildll
cmp
icebp
xchg
shll
inc
lcall
ja
xor
sbb
test
push
shlb
jecxz
ljmp
sar
push
cltd
jns
pop
inc
sbb
mov
std
stos
mov
cmp
call
and
fcomps
mov
test
test
mov
jmp
rcr
inc
mov
dec
dec
scas
jmp
or
jnp
mov
ja
xor
or
or
cmp
mov
cmpsl
push
xchg
mov
aaa
outsl
pop
out
sbb
xor
fxch
jnp
in
xor
pop
jo
sub
popf
punpckhdq
ja
outsl
lret
push
out
imul
pop
lret
jecxz
add
and
rcll
sbb
jmp
shr
js
pop
stos
xchg
aam
pop
xchg
jae
iret
subl
data16
enter
mov
call
cmp
mov
xlat
scas
mov
fstps
sbb
adc
push
and
jmp
sub
dec
pop
inc
push
or
xchg
invlpg
ljmp
cli
xchg
jg
pushl
lock
pop
cmp
xchg
push
in
cltd
and
jne
lock
mov
out
xacquire
jnp
loopne
jmp
xlat
push
lea
pusha
daa
fwait
je
sbb
js
dec
cmp
cmpb
inc
mov
clc
dec
jp
or
insl
and
and
add
and
decl
js
je
adc
xchg
pop
xlat
lahf
dec
dec
mov
sbb
scas
aam
mov
jp
inc
test
in
lods
jnp
sti
out
dec
and
and
sbbb
es
movsl
lock
jmp
xlat
lea
mov
add
ret
mov
push
push
jge
daa
dec
ljmp
mov
cmp
roll
mov
sti
jo
shrb
in
es
jne
cmp
cwtl
xchg
jno
sbb
mov
xchg
and
scas
dec
hlt
mov
incl
popa
fnstenv
jp,pt
add
cmp
shl
lret
imul
inc
decl
cmp
or
xchg
mov
sub
jo
mov
lahf
lds
pop
sub
sub
push
xchg
cmc
and
pop
rcrl
pop
ds
push
mov
and
insl
aad
lods
std
in
js
fistl
sbb
push
mov
pop
push
movsl
ljmp
jae
cmp
sub
test
andl
aas
shld
inc
sbbl
inc
xlat
dec
repz
stc
or
fs
ror
mov
mov
cmc
xor
mov
cmp
pop
push
mov
cmp
or
push
mov
stos
fldenv
sub
cli
mov
pop
lock
sbbl
loopne
inc
mov
add
loopne
adc
in
mov
mov
imul
lea
jmp
push
test
mov
mov
sub
jne
cltd
leave
cmpb
scas
call
std
insb
add
mov
inc
xor
pop
jle
sub
decl
dec
sbbl
subb
out
flds
mov
cmp
sbb
pushl
xchg
sbb
mov
sti
mov
mov
call
aam
xchg
fidivl
or
aas
dec
nop
add
jo
int3
ljmp
cmc
mov
int3
lds
call
inc
push
push
adc
sub
idivb
mulb
enter
rorb
pop
fdivrp
fcomip
dec
cmp
out
rcll
dec
xlat
cmp
jnp
push
and
jge
out
pushf
dec
cmp
loopne
lea
pop
jb,pt
aad
aaa
es
pop
xchg
jnp
inc
push
sbb
ljmp
add
mov
pop
mov
fwait
jmp
add
imul
sahf
js
mov
and
mov
jns
mov
ljmp
xor
decb
lds
out
or
lods
scas
scas
ss
lea
dec
pop
inc
jl
into
lret
mov
push
rcrl
jns
push
cmp
push
pop
adc
jne
push
push
lods
repnz
xchg
mov
jmp
xor
fmuls
ficoml
aas
fcmovbe
out
xor
pop
jb
or
add
pop
and
dec
push
dec
cmpsb
into
mov
cmp
dec
incl
mov
aam
lret
stc
or
aas
dec
das
jmp
dec
pusha
cld
ljmp
or
xor
aad
jge
cmp
or
push
mov
call
xchg
std
adc
pop
adc
xor
inc
in
xchg
fwait
js
push
jmp
mov
mov
add
inc
jns
sbb
adc
jnp
lahf
push
out
jmp
ljmp
jmp
cmp
fisttps
lcall
adc
jmp
decl
jae
pop
fistps
jecxz
scas
imul
pop
daa
inc
shl
push
and
mov
out
test
cld
lcall
sbb
pop
repnz
cmp
out
icebp
repnz
push
xor
dec
push
decl
push
adc
sbb
jae
stc
add
or
cltd
iret
fidivrl
push
movl
incl
xchg
xor
mov
cmpsb
xor
add
imul
or
je
ljmp
aas
add
push
test
push
stc
sub
dec
outsl
mov
push
xor
cmc
lret
mov
push
xchg
ja
dec
ss
jne
mov
hlt
js
es
or
stos
push
lea
push
add
sahf
dec
ljmp
pusha
ljmp
lea
testl
lods
iret
ret
loop
jmp
jmp
xor
in
scas
cmp
inc
xchg
add
rcr
sub
pop
roll
xchg
mov
or
xchg
xchg
push
mov
fistpl
xor
decl
sub
jmp
and
xchg
pop
cwtl
sti
inc
pop
imul
enter
adc
decl
cmpsb
jae
mov
xor
pop
test
shlb
xchg
aam
cltd
scas
sti
push
cmp
add
cmc
mov
jmp
fwait
sub
cmp
sarl
xchg
filds
cwtl
shll
xchg
insw
movsl
jbe
test
mov
es
loopne
decl
push
test
fwait
xlat
mov
loop
gs
jp
push
jb
sbb
jecxz
mov
pushl
xor
aaa
jno
jae
test
mov
mov
inc
decl
call
sbb
mov
sub
dec
sbb
lcall
sub
mov
mov
in
scas
and
fiadds
incl
int
push
cmpsl
stos
lods
arpl
sti
enter
and
or
das
fs
xor
fimuls
movsl
iret
popa
lret
loope
rcl
push
push
jns
mov
call
xor
orl
push
out
jae
jno
call
adc
in
dec
add
call
cmpps
fidivs
pop
cs
sub
fcom
and
xor
jl
pop
mov
inc
movl
add
scas
sub
pop
cmpl
js
loope
add
mov
xor
adc
add
into
in
jecxz
xchg
fisubl
shrb
push
push
xchg
call
fisttpll
xchg
jno
add
dec
in
test
sti
arpl
call
sub
lds
add
cmp
add
pop
test
stc
jns
and
or
jp
ret
or
and
jge
mov
and
in
into
int3
pusha
jp
add
aam
or
adc
mov
cld
lcall
test
test
test
cmpsb
repz
ret
ljmp
xchg
cltd
push
jnp
xchg
xchg
es
std
sbb
mov
add
fwait
adc
push
call
js
aaa
and
sub
das
jo
add
jmp
or
mov
push
adc
push
andl
pushl
cmc
mov
cmp
cmp
shr
cltd
ja
loopne
mov
xchg
mov
aaa
ljmp
clc
mov
orb
sbb
jmp
outsb
sub
dec
sbb
repnz
sub
add
out
mov
mov
cli
xor
push
mov
aas
sahf
dec
pushf
push
addb
jno
sar
jmp
cmp
push
push
fcomi
dec
jno
test
dec
dec
adc
test
and
daa
addr16
subb
call
movsl
or
fdivrs
stc
loopne
data16
jg
stos
pop
cmpsb
or
xor
xchg
jno
call
push
imul
push
mov
mov
xor
xchg
jle
or
call
das
push
push
or
rclb
sahf
ds
out
mov
push
aas
add
push
sub
sbb
dec
nop
jle
mov
mov
fldl
mov
pop
mov
xor
and
ja
cmc
lret
or
mov
jge
mov
faddp
decl
lock
mov
rclb
mov
pop
jo
xchg
aas
imul
je
in
xlat
and
pushl
cmpl
out
xchg
lret
lcall
sahf
popl
or
pushl
cs
dec
addr16
es
mov
addr16
int3
loop
pop
xor
fwait
sub
jg
sbb
lods
cli
xchg
cmpl
jl
das
popa
sbb
incl
push
out
int
adc
lea
aam
movsl
push
jle
pop
call
sbb
ljmp
rcrl
mov
lret
jnp
mov
adc
pop
mov
add
unpckhps
scas
mov
push
decl
ja
and
adc
cmpb
and
ja
aad
cmc
sbb
daa
or
ljmp
imul
call
sbb
mov
outsl
sbbl
decl
rcll
or
addb
jne
inc
lods
aam
xor
fcmovnbe
lods
inc
call
ret
mov
mov
jecxz
fmuls
fwait
gs
call
idiv
inc
fisttpl
in
in
jg,pn
outsl
fdivrl
jnp
ljmp
cli
push
ss
push
xchg
xchg
xor
pop
mov
fstpt
enter
test
lahf
adc
or
push
pop
call
jmp
push
popa
mov
fs
mov
fbld
inc
mov
inc
adc
pop
pop
fisttpl
and
pop
popa
inc
lea
pushl
mov
push
push
std
xchg
pop
fimull
stos
iret
sub
sub
pop
pop
loope
adc
or
jb
cltd
cld
pop
test
add
aaa
addr16
inc
fnstcw
mov
call
push
jge
sti
cmp
loope
sub
mov
popf
mov
sbb
dec
and
cmpsl
dec
incl
cld
jge
lods
ja
scas
xor
xchg
icebp
nop
imul
xchg
fdivrs
lahf
decl
bound
dec
fidivrl
xor
lock
cmp
inc
cli
xchg
sbb
jae
ljmp
nop
repz
arpl
enter
mov
icebp
movsl
xor
es
inc
sub
push
push
mov
inc
or
lods
sti
and
int3
jle
das
cmp
jno
insb
out
cmp
xchg
lcall
mov
in
roll
inc
daa
inc
lea
mov
fldcw
lret
aas
xchg
pop
decl
inc
xor
stos
pop
in
xor
lcall
xchg
adc
lret
mov
gs
lock
push
pop
and
rcrl
ljmp
xchg
inc
ljmp
mov
add
xor
adc
addr16
stos
ret
mov
ja
cmpb
mov
or
xlat
add
pop
jge
xchg
sbb
mov
pushl
xchg
cmp
pop
inc
fildl
or
enter
cmp
ret
out
sbb
lret
mov
push
decl
jge
in
into
pushf
push
scas
adc
add
xchg
mov
push
lods
mov
xor
imul
sub
stc
xlat
pop
mov
int3
xchg
cli
loopne
pop
imul
xlat
cmpsl
mov
push
mov
jb
lods
cwtl
jg
mov
push
push
nop
test
hlt
push
and
pop
popa
bound
mov
lret
pop
fmull
lock
lcall
enter
js
les
inc
ror
data16
js
gs
lcall
or
mov
sbb
insb
das
es
loopne
and
sbb
jge
lcall
pop
mov
jmp
outsl
push
aas
sbb
and
cmp
lcall
scas
clc
movsl
push
fistl
mov
aas
add
cld
subb
in
pop
shll
daa
les
test
call
dec
mov
aaa
jnp
scas
call
dec
xor
pop
push
mulb
xchg
bound
pushl
les
xorl
stos
mov
xchg
dec
cld
push
inc
imul
adc
pop
lcall
out
inc
iret
push
ljmp
mov
and
fisttpl
idivl
adc
lock
loop
lods
dec
adc
xchg
cmpsb
cmp
out
xor
fdivrs
ljmp
dec
in
movsb
das
pop
outsl
xor
mov
push
sbb
test
rclb
std
jg
rcr
add
cld
andl
mov
sbb
dec
es
inc
movsb
addr16
xor
ficompl
fsubrs
and
ja
incl
push
adc
sbb
in
loop
mov
mov
or
incl
adc
dec
mov
add
incl
adc
xor
pop
push
roll
test
decl
cmp
shlb
xor
ja
cmp
xor
jg
pop
push
movsb
outsl
in
icebp
loope
ret
call
scas
loope
mov
sbb
cli
insl
inc
mov
push
inc
add
icebp
sub
xlat
ja
dec
pop
xor
or
call
push
and
lret
movl
xchg
dec
cld
pop
or
jo
ds
jg
or
mov
decl
in
xchg
jp
dec
push
sbb
fdivs
shl
mov
jbe
loop
nop
or
gs
loopne
and
sarb
sti
xor
mov
test
fdivr
call
jbe
cmp
xlat
fadds
mov
and
push
mov
sti
incl
xor
mov
inc
push
push
jp
mov
loop
cmp
lds
and
mov
vphsubdq
mov
daa
cmp
mov
adc
adc
ret
in
xlat
inc
out
adc
mov
push
sub
or
mov
scas
es
cld
mov
pop
cmp
fdivr
mov
adc
dec
push
and
push
xchg
mov
sub
sbb
jae
jne
decl
push
es
scas
jno
inc
iret
frstpm(287
and
test
xchg
in
mov
int
xchg
mov
push
es
jmp
pushl
mov
in
test
pop
lahf
mov
in
outsl
pop
aas
sub
mov
ljmp
xchg
cld
scas
mov
js
sbb
pop
or
sbb
xor
arpl
lock
pushl
clc
mov
xor
repz
add
xor
es
jno
xor
sbb
rorl
scas
pop
nop
aas
or
in
jbe
push
jmp
mov
insb
sbb
xchg
jg
ljmp
les
xchg
in
xor
jp
imul
repnz
fstl
aaa
idivb
sbb
xor
in
dec
push
sarb
jo
mov
outsb
clc
fs
xchg
jge
mov
ljmp
mov
cmpsl
inc
roll
stos
lock
pop
pop
fiaddl
pop
and
jmp
mov
mov
aas
jns
orl
push
cli
fwait
ja
ljmp
and
clc
decl
push
mov
dec
test
sub
or
lcall
popf
add
cmpsl
lock
shll
inc
and
xor
lcall
xchg
lock
cli
ret
push
je
subl
enter
pusha
test
jns
inc
sbb
mov
call
shll
xor
inc
fmul
loope
pusha
xchg
lock
stos
cmp
pushl
orl
sbb
fs
rcrl
fisubl
hlt
out
lds
jns
mov
rolb
scas
fidivrl
test
mov
xor
lcall
test
mov
cmp
dec
inc
arpl
hlt
les
std
pop
jg
call
jp
mov
sub
cld
add
lods
jge
xor
mov
add
loopne
out
aam
fistl
push
loop
adc
jl
fdivrl
loopne
jnp
push
cmpsb
jae
push
scas
movsb
fst
les
mov
jmp
jae
push
or
aas
xchg
pop
push
test
adc
push
push
mov
repnz
lcall
lahf
pushl
movsb
or
sarb
mov
addr16
lret
pushl
ds
ret
pavgb
push
and
and
add
mov
jg
call
adc
mov
and
push
sbb
or
pop
dec
mov
sahf
jl
xchg
xchg
das
add
cs
call
add
mov
xlat
pop
fst
mov
push
jno
call
outsb
stos
stc
jbe
or
inc
rorb
pop
sbb
loopne
push
jne
lret
insb
pop
mov
lcall
mov
cmp
fnsave
int
popl
lahf
arpl
in
cmp
jns
pop
out
cmp
ss
sub
mov
aam
jmp
lods
fistl
mov
adc
addr16
push
andl
mov
cmp
loopne
ljmp
lret
mov
subb
jb
cmc
jmp
xchg
clc
jmp
shrl
xchg
mov
out
xchg
sub
jp
cld
shl
mov
in
mov
inc
xor
fs
mov
idiv
jg
call
pop
gs
jae
cmp
xchg
pop
push
and
in
jmp
cmp
xchg
addr16
dec
xor
inc
fcoms
lcall
rclb
out
repnz
lahf
addr16
lock
xchg
jmp
xchg
xchg
decl
cmp
pop
outsl
sahf
cmp
sbb
push
iret
add
lcall
ret
mov
and
scas
inc
cmp
and
stos
fnstenv
sub
pushl
test
dec
loope
xor
and
dec
fwait
scas
xchg
clc
inc
push
cli
sar
lcall
pop
pop
dec
xor
mov
cmp
mov
in
add
subl
add
pop
into
fldcw
repz
jle
push
adc
mov
xchg
shll
adc
add
xchg
dec
mov
xchg
jmp
add
pop
pop
pushl
incl
adc
addr16
movsl
in
int3
enter
xlat
out
adc
or
pop
shll
loope
mov
lods
mov
lret
push
and
clc
aas
jb
dec
xchg
dec
and
add
aas
ret
js
pop
mov
jb
lods
fstp
ljmp
outsl
cltd
jmp
and
pop
out
pop
fimuls
mov
push
jno
ss
sbb
adc
arpl
add
jnp
cwtl
pop
enter
mov
jecxz
inc
dec
and
dec
add
daa
rol
call
aam
aas
out
loop
out
das
ja
mov
in
call
scas
inc
lahf
sub
sub
icebp
fimull
rcr
sbbl
add
in
outsb
std
jmp
xchg
mov
cmp
std
pop
cmp
test
test
ljmp
add
pop
sub
jae
sub
push
cld
jg
cli
lret
xchg
das
sub
mov
not
aad
das
inc
or
insl
cs
rcll
loopne
cmp
inc
sbb
mov
call
out
test
cmc
in
aaa
sub
outsl
sbb
jge
shll
in
sub
fcos
jge
jae
or
cmc
mov
pop
sahf
imul
std
imul
inc
push
in
dec
call
je
mov
or
pop
push
ficompl
lds
ds
pop
leave
mov
sar
sbb
mov
pop
pop
mov
mov
xor
dec
adc
ret
out
xor
mov
je
aaa
sbb
lods
ljmp
push
call
xor
inc
mov
rclb
mov
daa
in
icebp
xorl
in
xor
xchg
in
lcall
std
scas
and
pushf
inc
cli
cmp
loope
sub
inc
inc
out
cmc
dec
cltd
pusha
decl
dec
mov
gs
or
xchg
aad
in
pop
rcrl
pushl
mov
loopne
mov
xchg
insb
fcomps
sbb
addb
xchg
in
lcall
pop
stos
insl
dec
jo
pmuludq
ret
lods
loop
les
inc
xchg
add
aas
and
hlt
sub
jns
inc
pop
xor
pop
cmc
mov
jmp
xorb
sub
hlt
iret
loope
mov
js
pop
mov
mov
insb
jg
clc
gs
dec
mov
sar
negl
mov
mov
shlb
pusha
call
sub
jp
dec
cmc
mov
push
leave
inc
sub
mov
cld
push
inc
sarb
fcomip
outsb
lods
lock
jge
xor
test
jne
imul
cmpsl
jbe
adc
jge
xor
mov
int3
jmp
pop
fwait
add
into
push
dec
mov
loope
jp
hlt
cmpsb
and
jecxz
leave
daa
rcl
pop
inc
movsl
leave
in
dec
jg
fnstsw
test
xor
push
aaa
popa
xchg
decl
lcall
jp
mov
dec
in
and
xchg
jae
call
add
push
or
cwtl
cmp
rolb
into
add
xchg
sub
scas
xchg
in
cmp
jmp
mov
pop
push
in
jae
cld
pop
fbld
out
jbe
cmp
cld
or
in
mov
jnp
xchg
cli
push
mov
andb
lds
jg
jg
add
fcomps
cmp
loop
loope
push
pusha
sahf
mov
ja
pop
mov
and
nopl
ficompl
or
jp
pop
loopne
rcl
fisubs
jae
inc
add
add
fs
mov
sarb
call
or
mov
sbb
mov
lods
pushl
fidivs
xchg
or
mov
jnp,pn
ds
imul
notb
ljmp
pop
sub
mov
jb
hlt
mov
dec
lahf
adc
aaa
filds
add
cmpsb
jecxz
push
incl
jge
pop
call
movsl
jg
cmp
sbb
mov
push
fiadds
jmp
incl
lods
adc
movsl
repz
push
hlt
rcrl
mov
xchg
std
fnsave
lret
mov
push
test
push
cmpsb
jo
push
xlat
notb
mov
outsb
stc
mov
adc
les
mov
ljmp
pushf
loopne
push
adc
stos
jg
bound
mov
arpl
nop
dec
jle
inc
mov
pushl
ret
lret
adc
cs
dec
cs
mov
and
jg
dec
xchg
push
stc
pushf
sbb
aas
push
mov
cld
and
cmp
icebp
push
adc
xor
mov
incl
xchg
pop
pushf
xor
and
rorl
js
jmp
adc
push
jmp
ljmp
inc
aam
ds
jmp
popa
cld
jmp
pop
dec
inc
sbb
outsl
mov
repnz
lcall
repnz
jb
fmuls
xchg
outsl
mov
mov
lea
pop
jmp
inc
decl
jmp
cmp
and
mov
rcll
cmp
push
icebp
std
push
jb
mov
mov
out
push
ss
and
insb
scas
icebp
push
mov
jp
xlat
or
mov
pop
mov
xor
xchg
nop
push
out
jle
nop
sub
bound
ja
incl
adc
cwtl
sub
jp
sub
xlat
in
mov
stos
shll
push
sar
pushl
cs
inc
or
inc
js
movsb
imul
leave
fistl
xor
ljmp
mov
jecxz
jnp
cmpsb
enter
scas
ja
mov
mov
je
mov
clc
jg
inc
jmp
clc
cmp
shlb
cmpsl
push
pop
call
ret
mov
lock
out
je
pop
lret
xor
sub
dec
jbe
daa
jo
jbe
xchg
xchg
mov
into
lods
or
mov
std
jns
cmpsl
pop
push
xchg
int3
fsubrl
movsb
dec
mov
popa
dec
jp
cwtl
pop
popf
dec
pop
ja
pop
cs
jne
pop
dec
cmp
pop
xor
add
mov
lcall
inc
pushf
imul
mov
mov
adc
das
or
push
cmc
repnz
sbb
stc
pop
test
inc
dec
clc
stc
sbb
leave
mov
jns
sbb
fcoms
ljmp
gs
fwait
js
cwtl
mov
push
mov
xchg
cld
cmp
pop
push
jb
mov
gs
fcomip
dec
in
loopne
or
loopne
mov
mov
call
cld
fwait
fs
sbb
mov
fsts
push
ss
add
fdivp
lret
inc
mov
das
lock
push
sarl
out
enter
call
lahf
test
movsb
pop
cwtl
and
rcrl
add
fs
cmpps
mov
in
inc
dec
pop
pop
adc
push
xchg
mov
cmp
inc
ljmp
mov
mov
dec
bound
repnz
cmc
pop
sub
dec
cmp
roll
jecxz,pt
lods
mov
js
enter
xchg
shl
call
ret
xchg
popa
fs
mov
out
pushl
cmp
jecxz,pn
mov
push
lds
pop
aad
rcrl
jbe
xor
sarb
shrl
das
clc
in
cld
sti
std
mov
inc
cltd
add
stos
andb
sbb
inc
and
fs
loop
cmpsl
xchg
lret
pop
sbb
and
pop
loop
jg
sub
rol
jge
in
xor
test
call
shll
in
mov
andl
xchg
xchg
mov
ss
cs
jge
jge
test
sbb
lcall
xor
loope
insb
fstps
mov
mov
fists
mov
repz
push
icebp
imul
sahf
fisubrs
and
aad
fcompl
sarl
pop
pop
sbb
call
pop
test
sub
or
scas
xchg
inc
aam
lret
orb
out
ljmp
pop
and
cmp
ljmp
sub
out
and
js
dec
push
cld
cmp
adc
fdivl
cmc
dec
cmp
push
daa
inc
call
push
dec
mov
pop
loope
lret
adc
fs
cmp
pop
adc
call
sbb
rorb
loope
fs
xchg
inc
rcrl
andb
lahf
hlt
lods
repnz
lock
mov
ficomps
mov
icebp
mov
icebp
sub
out
mov
fs
iret
inc
jge
pushl
push
inc
pop
fs
jge
or
aam
int
add
mov
mov
lcall
pushf
cmp
ror
sahf
pop
outsb
jp
mov
add
enter
jmp
jmp
mov
test
jmp
and
add
test
aaa
mov
inc
dec
sbb
cld
in
outsl
scas
or
je
cli
ds
and
fisttpl
ja
loope
dec
jo
cmc
and
and
cltd
xchg
negb
aad
add
call
or
int
pop
push
in
cs
or
pop
or
incl
jo
inc
lret
mov
and
je
jl
addr16
inc
adc
pusha
dec
int3
movsb
enter
mulb
inc
cmpsl
or
ljmp
das
xorb
pop
mov
pop
or
movsb
jg
dec
add
xchg
jnp
mov
xor
outsl
rcr
test
jne
and
sub
mov
push
jmp
lock
and
adc
arpl
push
jnp
test
cmpsl
testl
xlat
sbb
gs
lods
push
loop
repz
lods
or
jg
mov
or
jg
mov
adc
xor
mov
loopne
mov
jbe
xchg
jns
data16
inc
jmp
pop
adc
in
stos
cmp
mov
data16
sub
xor
lcall
cmpsl
insl
push
jge
test
fstpl
popf
es
and
xor
push
jle
hlt
pop
xchg
xor
aaa
cld
inc
popf
inc
or
repz
aas
inc
inc
ljmp
sbb
dec
and
ljmp
pop
and
xchg
roll
ss
pop
cmp
mov
movsl
ja
pushf
or
inc
pop
add
decl
xchg
adc
dec
les
or
pop
aas
icebp
cmp
push
in
or
ljmp
fcomi
add
cmp
and
jae
mov
out
sahf
push
andb
add
sbb
and
ret
arpl
lahf
xor
adc
xchg
adc
mov
xchg
inc
xor
adc
push
lods
test
leave
shl
testl
inc
lcall
bound
into
loopne
dec
mov
xchg
je
les
cli
call
cmp
mov
mov
test
js
push
leave
jmp
mov
adc
insb
xor
and
cli
add
xchg
mov
lahf
sbbb
pop
mov
xchg
nop
sub
inc
mov
xchg
sub
sahf
repz
jae
cmp
pop
dec
cli
fucomi
mov
lea
adc
lret
push
jno
rcrl
mov
xchg
enter
out
mov
sbb
cmc
fadds
insb
pop
ljmp
ljmp
inc
addr16
adc
pop
imul
or
jg
out
pushf
rcll
inc
push
cmp
adcl
cmp
ficomps
ljmp
popf
or
mov
and
out
pop
rolb
movsl
sbb
mov
push
fimull
in
mov
int
imul
sti
out
pop
pop
mov
subb
fcomi
push
or
roll
std
lcall
mov
or
ret
mov
fdivrs
pop
adc
sub
aaa
jge
insb
mov
inc
lods
lock
aad
fcos
ja
lcall
jne
xchg
mov
lahf
push
scas
adc
shll
mov
cmp
int
aad
ljmp
pop
lods
repz
pop
inc
sbbl
inc
cmp
pushl
stc
jbe
scas
loop
inc
mov
lods
jno
inc
push
jle
jp
sbb
mov
add
sub
test
sbb
test
mov
sbb
insb
decl
mov
cmp
pop
or
and
xchg
enter
sub
jo
sbb
or
pop
mov
jmp
xchg
loopne
stos
and
out
sbb
xor
pop
fisubs
test
gs
cmp
mov
adc
and
ljmp
cli
sbb
push
sti
rorb
pop
mov
test
dec
mov
scas
push
in
push
imul
scas
mov
mov
sub
dec
iret
int3
es
insb
cmpl
cli
sahf
pop
sti
outsl
push
and
je
cmc
cmp
fs
lock
int3
dec
xor
test
insl
fcoml
push
ljmp
xor
test
pop
sbb
pusha
addr16
incl
xor
testl
test
xchg
fcmovb
dec
sub
jmp
iret
sub
out
push
int3
xor
or
or
sbb
adc
call
and
xorb
jae
adc
icebp
dec
sbb
pop
jns
mov
pop
inc
call
pusha
sbb
jmp
mov
add
ljmp
stos
rcl
test
aaa
out
jnp
dec
bound
dec
and
mov
push
outsl
in
fwait
rcrl
adc
insl
insb
sbb
jg
and
jge
in
xchg
xor
pop
ret
mov
jb
lcall
mov
mov
adc
pusha
cs
and
lret
mov
loop
lcall
inc
pop
rcrb
add
mov
push
xchg
js
cmp
mov
sub
pop
xchg
xchg
insb
and
decl
aas
sub
test
sub
lea
add
cld
sub
out
fsubl
inc
jns
push
repnz
ljmp
sub
ret
ret
xor
loopne
ret
sti
lods
cltd
lret
out
in
scas
cltd
and
call
adc
jg
fwait
push
mov
sti
cmpl
out
cmp
sub
in
fs
push
pushf
cmp
push
lods
adc
cmp
xchg
lock
ljmp
cmp
int
pop
sbb
jecxz
jp
mov
mov
xchg
mov
lcall
sar
testb
pop
add
shll
shlb
sti
decl
iret
outsb
cwtl
loope
and
inc
jl
jp
push
int3
jmp
pop
xchg
inc
inc
mov
xchg
stc
shr
inc
insb
repz
js
jmp
pushl
pop
mov
movsl
or
pop
hlt
mov
fidivrl
inc
xchg
shrl
jb
test
ljmp
cmp
push
mov
lods
mov
mov
jge
jl
lods
outsb
push
push
jle
cmp
cmp
jno
aas
sub
lock
jne
fisubs
scas
inc
lock
lcall
and
cmp
fistps
jg
test
int
mov
sahf
add
outsb
xchg
cwtl
add
cmpsb
data16
mov
cld
dec
movsb
sbbb
jge
jge
cmpsl
sbb
decl
sub
sarb
adc
jnp
mov
movsl
ss
xchg
ud0
decl
mov
fwait
mov
ljmp
test
mov
adc
js
in
push
repz
push
stos
mov
inc
or
xor
mov
mov
xor
adcb
jmp
iret
cld
data16
jg
clc
in
mov
in
stos
sti
bound
mov
mov
clc
int3
inc
lods
dec
aas
jmp
movb
popa
setp
fsubl
push
sbb
test
adc
jbe
push
jl
pop
pushl
scas
mov
mov
sub
push
add
lret
dec
fistps
imul
sti
clc
outsl
and
jg
daa
jnp
lahf
loopne
int
insl
xchg
jge
lods
mov
in
add
aas
xor
lcall
frstor
dec
sub
xchg
and
ljmp
cmp
adc
or
sbb
fiaddl
mov
testl
push
ja
sbb
mov
xor
and
scas
out
decl
movsl
add
lcall
imul
gs
sti
test
pop
cmp
jmp
cmp
xor
inc
jmp
mov
mov
mov
mov
lds
pop
clc
call
test
dec
mov
add
cmpsl
repnz
mov
or
mov
sub
imul
sub
adc
mov
and
jns
sbb
sub
add
mov
fs
orb
cli
or
cli
subb
mov
cltd
add
fadds
sub
fs
out
ja
dec
jnp
lea
mov
and
incl
or
add
mov
jo
mov
mov
incl
clc
pop
dec
push
xchg
mov
add
add
dec
orb
addb
mov
insl
test
stos
add
dec
and
sub
add
and
jg
icebp
dec
sbb
nopl
add
vpsubsw
pusha
or
imulb
pushl
mov
jnp
xchg
movsl
push
daa
add
xchg
xlat
mov
cld
dec
and
cmpsl
push
and
cs
push
movsb
push
cld
pop
mov
inc
add
and
push
test
and
in
std
in
push
xchg
imul
push
inc
pop
pop
add
push
dec
lods
push
mov
pop
sbb
add
imul
push
add
push
ds
les
push
jg
adc
fs
mov
insb
or
lret
imul
imul
imul
push
mov
flds
jbe
fsqrt
fdivs
cmpsl
fldcw
pop
stos
pop
stos
mov
and
jb
ss
add
jo
mov
fdivl
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
out
adc
ja
ret
je
fidivrs
mov
cs
mov
xorb
ljmp
pushl
in
movsb
push
add
mov
sbbl
push
mov
pushw
arpl
push
push
push
add
insb
pop
roll
jne
push
aam
push
ret
gs
or
mov
push
pop
dec
ficompl
pushf
addb
jbe
push
data16
jne
notl
inc
xchg
cs
xlat
cmp
out
shlb
lret
stos
aas
jmp
cmp
add
ja
push
push
xlat
jne
add
pop
jbe
fdivs
push
aad
push
xlat
ja
outsb
fiaddl
mov
or
jns
push
jp
jp
mov
or
push
fidivrl
sarl
ja
pop
mov
les
je
jmp
fisttpll
cs
ljmp
xchg
in
xchg
sub
rolb
cs
xchg
xor
xchg
push
setbe
fstpt
dec
fisttpl
push
sahf
in
jge
lcall
push
cmp
pushf
cmp
iret
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
pop
mov
mov
mov
sti
push
jecxz
push
imulb
jns
pop
lods
ss
out
push
hlt
clc
out
sahf
out
cli
sti
cld
std
mov
clc
lahf
incb
jecxz
arpl
inc
jae
add
xchg
fldcw
add
add
pop
data16
insb
add
pop
add
pop
addb
stos
nop
add
pop
xorl
push
mov
add
add
insb
mov
pop
or
test
test
adc
or
push
mov
aam
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
lock
and
mov
mov
pop
and
push
xor
pop
mov
and
shrl
pusha
fwait
and
sub
mov
popa
xchg
cld
test
mov
repnz
and
mov
add
sub
xchg
aas
sarb
cmp
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
ljmp
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jg
jg
jno,pt
add
pushl
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
dec
jmp
pushf
fwait
lcall
mov
mov
das
mov
push
dec
ja
jns
dec
push
bound
loope
insl
xchg
js
imul
mov
jno
jg
lea
sub
sbbb
jae
pop
pop
scas
push
lods
mov
aas
outsl
push
adc
xchg
pop
push
dec
add
jg
add
and
cmpsb
push
mov
xor
fldt
ja
push
ja
jb
cs
xor
mov
pop
sahf
ja
mov
pop
jbe
dec
sbb
and
mov
jg
xor
xchg
jo
push
inc
mov
cmp
mov
inc
in
outsl
add
ja
xchg
jae
xchg
jp
inc
cltd
lcall
mov
aaa
add
xchg
jno
lret
rep
pop
sti
push
bound
mov
mov
inc
sti
mov
xor
add
outsb
add
xchg
xchg
lahf
divb
test
push
dec
push
movsb
jae
pusha
shl
add
jb
shll
outsl
pop
xlat
pushf
push
rorb
add
fwait
imul
lcall
outsb
mov
pop
in
outsl
mov
add
ja
sahf
jbe
fistpl
imul
pusha
add
ds
push
sarb
fldcw
rorb
sub
add
js
mov
data16
into
mov
push
insb
pop
outsb
push
outsl
shl
sub
ds
push
ds
jno
add
jge
adc
jg
fiadds
call
jl
or
mov
add
adc
in
daa
out
push
es
bound
out
arpl
fisubrs
ret
push
iret
sahf
mov
xor
add
xchg
in
push
jle
movsb
add
jecxz
or
ss
fnstcw
aad
push
divb
fildl
xor
faddl
pop
cmpb
push
sbb
sbbl
test
test
sbb
pop
rolb
test
in
mov
push
xchg
nop
and
outsb
push
insb
push
out
xchg
in
xchg
lock
sub
sub
imul
outsb
out
xchg
das
push
xchg
mov
mov
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
cmpsb
scas
subb
jo
test
sahf
ficompl
shll
shrb
fmul
mov
lgs
int
mov
fwait
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
and
loopne
add
or
mov
push
cld
femms
or
or
or
enter
es
push
adc
push
add
add
pop
or
ds
add
mov
or
ds
fisubl
mov
mov
mov
in
jle
add
and
stos
mov
add
and
cs
mov
pusha
lods
imul
add
cmp
cmp
aas
jns
nop
addr16
cmp
cmp
xchg
out
cmp
mov
mov
sbb
inc
jbe
sub
inc
inc
jle
cmp
scas
xor
dec
mov
jnp
dec
jle
aas
adc
mov
dec
xor
dec
inc
test
fwait
inc
scas
add
fists
fidivl
mov
ds
lods
cld
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
es
sub
sub
add
add
add
in
ljmp
dec
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
orb
loope
imul
jg
pop
imul
nop
cltd
mov
mov
nop
test
lcall
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
mov
pusha
rol
imul
cpuid
add
push
addb
sti
add
adc
loopne
xchg
cld
lcall
jl
push
add
cmc
repz
dec
xor
mov
push
aas
add
mov
xchg
pop
cmp
test
add
mov
add
pusha
inc
add
mov
push
mov
fnstsw
repnz
sbbb
inc
add
gs
jecxz
pushf
add
mov
popf
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
ss
sar
scas
xchg
js
in
and
out
cmp
fstpt
sub
xchg
push
sub
nop
sub
fistl
out
xchg
xor
xchg
outsb
lcall
sahf
insl
es
jbe
negl
dec
ds
fst
es
push
lret
mov
xlat
push
std
into
and
out
fldcw
xchg
add
test
jg
jle
jge
sub
xor
push
xchg
orl
dec
dec
dec
call
dec
add
pop
add
push
dec
or
adc
div
mov
cmp
adc
dec
or
add
push
stc
pusha
jg
adc
add
or
pop
pop
cmovg
std
pop
repz
sbb
inc
adc
cmpsl
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
aaa
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
cs
lret
inc
in
bound
xor
add
sti
addb
mov
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
add
add
outsl
sub
inc
or
pop
inc
sbb
out
addb
outsl
mov
cmpsl
or
adc
jne
incl
outsl
dec
add
push
inc
xlat
sbb
push
fstpl
incl
add
iret
outsb
sysret
mov
es
data16
pop
in
fdivrs
stc
sysret
in
lock
mov
stc
hlt
jl
push
jg
mov
pop
roll
adc
add
aam
mov
aad
or
cli
mov
pusha
sbb
xchg
adc
push
pop
add
xor
jg
addr16
adc
cli
push
les
or
xchg
jg
sub
sti
jg
das
pop
pop
add
sti
mov
jle
adc
mov
insl
sar
pop
xchg
ret
jg
add
bound
xchg
call
les
dec
test
jg
in
push
push
cld
jg
and
bound
cmpsb
std
ja
add
or
out
roll
push
jg
dec
les
xchg
test
orl
data16
mov
inc
incb
or
pusha
mov
call
adc
xor
xor
push
incb
and
fidivrs
jg
inc
arpl
adc
sbb
add
loope
push
jbe
sbb
jno
sub
jmp
sbb
scas
incl
add
jmp
pop
xor
in
jle
lret
imul
adc
adc
add
sbb
lcall
popa
mov
add
mov
addr16
add
push
adc
lea
data16
mov
add
jg
and
cmpsb
incl
addb
mov
movb
sub
xor
jg
pop
push
pop
je
mov
insb
push
inc
cmpsb
ljmp
stos
lea
pop
add
daa
push
fcmovu
mov
aaa
pop
pop
add
jle
add
lock
stos
pop
inc
push
cmp
adc
mov
sbb
out
or
or
push
dec
xchg
push
bound
mov
scas
popf
add
mov
mov
in
mov
arpl
xor
test
pop
push
mov
insl
xlat
out
incl
push
dec
stos
test
jmp
test
ljmp
mov
sbb
jle
ljmp
dec
dec
mov
fnstenv
add
push
jne
test
jbe
out
or
push
push
jp
mov
into
mov
js
dec
jbe
pop
add
fnstsw
mov
dec
enter
push
outsb
test
mov
iret
out
cmp
test
fs
ljmp
ljmp
fisttpll
xor
ja
push
movsl
test
mov
dec
neg
xchg
mov
push
mov
inc
out
or
sahf
inc
out
fwait
adc
scas
cs
aas
in
fnstenv
popf
inc
push
pushf
cmp
xchg
nop
imul
jnp
fisttpl
xchg
xor
xchg
xor
sub
sub
nop
adc
out
mov
ss
cs
or
insl
sahf
mov
xor
push
xor
call
mov
inc
push
jg
pop
fnsave
xor
or
mov
sahf
movb
and
int3
nop
es
lcall
push
pop
mov
or
aad
cltd
push
xchg
movb
bound
pop
ja
divb
push
push
imul
pusha
add
add
or
sbb
mov
and
inc
inc
push
outsl
add
sub
stos
outsl
adc
add
mov
and
and
or
sub
push
adc
pop
scas
inc
sahf
out
orl
repz
mov
mov
xchg
inc
and
cmp
lock
cmp
xchg
cmp
cmp
icebp
mov
xor
in
add
mov
push
add
incl
push
inc
sbb
leave
shrl
dec
push
mov
adc
mov
push
push
sbb
xor
or
cli
push
mull
adc
sti
xchg
std
add
out
or
and
add
sub
incb
add
pop
xchg
iret
add
outsl
pop
lcall
or
mov
sub
mov
pop
das
pop
push
adc
callw
pop
pusha
lcall
punpcklwd
daa
std
out
jb
orl
out
lcall
or
mov
sti
ud0
cmp
mov
pop
arpl
ljmp
mov
decl
or
lcall
mov
ljmp
rorb
mov
dec
or
push
lcallw
sub
adc
decb
mov
xchg
jns
clts
add
mov
or
adc
pushw
call
incl
pop
push
inc
mov
ud0
adc
push
push
incb
sbb
verw
xchg
pushl
sub
aaa
push
jmp
xchg
adc
fdivrp
mov
sub
outsl
mov
or
push
std
add
jmp
incl
nop
mov
call
incl
rorl
pop
cmpsl
cld
fsubl
add
stc
lidtl
call
jg
xor
out
cli
testb
xchg
cmp
dec
ljmp
jmp
pushl
pop
fcmovbe
pop
pop
insb
in
insl
flds
push
pop
aaa
sbb
dec
cmp
mov
shll
roll
nop
jbe
or
ret
mov
call
adc
jmp
ljmp
iret
data16
push
inc
inc
pop
cmpsb
pop
inc
pop
mov
neg
pop
sahf
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
push
dec
out
dec
inc
cs
xchg
cmp
dec
mov
and
ss
shrb
shll
shrb
es
xchg
int
push
jb
imulb
cmpsb
xchg
and
iret
insl
pop
daa
es
je
outsl
pop
imul
push
push
push
push
and
inc
xor
push
lcall
test
movsl
pop
int
repnz
fbstp
popfw
cmp
aas
pushl
push
cwtl
xor
dec
inc
push
xchg
push
dec
outsl
mov
push
aaa
push
lcall
insl
xor
xchg
xchg
xchg
notb
sub
push
lcall
movsb
inc
test
jmp
add
mov
push
add
aaa
cmp
or
std
faddl
dec
fstpt
push
jnp
jp
in
cmpsb
jns
or
jl
or
jl
push
jge
cwtl
insl
sub
jg
es
jbe
adc
out
in
fidivrl
push
dec
push
dec
repnz
repnz
jae
pop
jmp
fucomi
fidivrl
push
mov
jnp
jge
hlt
in
add
mov
mov
negl
add
sub
push
sbbb
dec
mov
outsl
add
stos
lahf
push
adc
adc
mov
int
push
addb
jnp
lahf
dec
es
lahf
bound
in
orb
jg
and
int
inc
incl
sub
iret
out
mov
cli
dec
repz
jbe
clc
push
idiv
hlt
out
ret
push
push
jb
sub
jg
mov
icebp
popa
xchg
je
dec
pop
cld
adc
std
outsb
daa
jno
sub
jg
mov
icebp
mov
xorb
cmp
stc
fidivs
mov
and
jp
es
cwtl
addb
aaa
decb
jge
and
rcll
dec
in
sarb
push
sub
ja
hlt
or
orl
mov
icebp
notb
adc
push
push
dec
pop
fmuls
in
push
movsb
or
push
inc
push
int3
decl
sub
mov
fidivrl
arpl
clc
jbe
sbb
mov
push
pop
push
pop
shr
sbb
push
pop
or
and
dec
sbb
cli
jge
push
ds
lcall
push
jns
roll
dec
mov
push
mov
jmp
xchg
jmp
xor
push
xchg
mov
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
xchg
or
jns
fadds
mov
add
ja
inc
or
mulb
push
cmovno
pop
push
push
fstpt
rcll
jnp
test
add
push
pop
jnp
and
pop
movb
jb
and
adc
sbbb
xor
mov
mov
lahf
or
and
adc
call
adc
xor
shrl
push
pop
inc
mov
mov
test
pop
push
sbb
sarb
or
push
insl
out
es
and
push
sbb
push
mov
push
push
push
inc
xchg
and
test
push
add
add
or
jl
nop
mov
ds
push
add
adc
add
mov
or
dec
icebp
inc
push
gs
jo
xchg
js
mov
andb
dec
add
das
xchg
sbb
add
fsubrs
adc
dec
xchg
mov
push
mov
inc
aaa
xchg
adc
imul
inc
mov
insl
mov
inc
bound
inc
add
lock
inc
jmp
lahf
jo
das
sub
sbb
sti
inc
ret
add
imul
dec
movsb
cwtl
subb
push
xchg
aas
add
jno
pop
add
jno
adc
add
add
je
mov
add
xor
lea
xchg
sbb
jmp
and
mov
and
mov
insl
and
mov
jo
mov
popf
in
add
pop
push
popa
shlb
xor
sub
xlat
je
or
jae
add
add
or
add
inc
inc
pop
add
mov
mov
add
mov
clc
pop
pop
gs
test
jno
icebp
add
inc
inc
pop
xchg
sbb
inc
add
cmpsl
dec
and
aas
xchg
loop
mov
pop
lcall
lahf
push
and
inc
rcll
jno
outsl
shrb
ss
cmpl
xor
dec
push
outsl
loop
mov
push
pop
cs
loop
sub
cltd
sbbb
push
bound
mov
arpl
dec
insb
out
inc
imul
sbbl
inc
xor
icebp
je
push
addr16
xchg
or
push
pop
dec
and
or
inc
add
add
or
add
adc
cmp
movsb
push
and
cmp
arpl
push
add
pushf
add
add
cmc
popa
adcb
subl
pusha
sbb
aad
xlat
rcll
and
push
nop
jne
add
add
sbbl
shrb
je
push
fildl
fsts
adc
roll
or
sbb
stos
xor
adc
sub
adc
jbe
test
outsl
adc
xchg
xchg
push
xor
sub
sub
push
arpl
rorb
push
jb
dec
cwtl
push
xchg
mov
das
or
jo
and
loope
jecxz
je
bound
pop
xlat
fstpt
iret
mov
test
cmp
xchg
or
cltd
xchg
xchg
adc
icebp
and
pusha
popa
and
pop
test
cmp
lds
nop
lea
jo
and
adc
add
add
sbb
sub
sub
or
jo
dec
es
or
shlb
xchg
pop
push
scas
mov
push
mov
sub
imul
inc
fdivrl
push
pop
push
pop
xor
push
test
stos
mov
xchg
mov
mov
lahf
mov
bswap
je
jne
inc
mov
ret
inc
outsl
jae
sub
xchg
loop
outsl
mov
test
jmp
mov
mov
cld
sub
cltd
push
pop
fisubrs
mov
mov
loopne,pt
clc
inc
arpl
mov
das
push
pop
and
sub
aas
sub
xchg
pop
sub
imul
out
mov
jo
mov
xorb
nop
sti
andl
push
inc
mov
push
pop
imul
xchg
insb
insl
cmp
jne
arpl
jae
inc
movsl
add
fisttpl
push
inc
pop
push
push
cmpsl
cmp
imul
sbb
mov
pop
mov
cmp
jne
fs
inc
insb
push
popa
js
and
push
jb
or
fimuls
inc
xchg
or
fs
fucomi
jnp
push
lds
mov
insb
sahf
daa
xchg
push
push
and
push
push
pusha
mov
cld
sub
divl
insl
mov
fcompl
jo
add
dec
loop
mov
mov
or
push
or
push
jg
jns
lock
sbb
push
and
test
test
les
sub
std
addr16
mov
xor
mov
push
xor
arpl
push
divb
fmull
mov
push
outsb
inc
sbb
in
lods
flds
sbb
sbb
je
insl
dec
outsb
shlb
ja
dec
std
lea
push
jge
and
lods
or
xor
sub
push
push
js
add
pop
shll
lcall
or
movsb
lcall
sub
or
cmpsb
imul
cmpsb
imul
inc
mov
es
pop
add
inc
add
movsb
outsl
xchg
add
insl
add
mov
sbb
ret
pop
push
and
cmp
jo
sbb
test
popa
sub
test
mov
stos
daa
inc
lcall
push
push
cmp
dec
imul
jo
pop
pop
add
jmp
sbb
nop
or
addl
inc
sbb
adc
xchg
out
jb
insl
movl
inc
sbb
add
sub
push
jge
jl
mov
push
mov
adc
shll
andl
lods
dec
mov
add
or
sbb
push
mov
out
sahf
imul
pushf
xor
dec
pusha
es
cmp
imul
dec
sbb
ljmp
push
push
outsl
inc
inc
xor
rol
outsb
mov
lock
sub
imul
push
hlt
mov
dec
inc
mov
push
lock
fsubl
xlat
adc
or
mov
fdivs
dec
adc
test
push
dec
mov
xor
mov
movsb
enter
out
jecxz
xchg
sbb
jno
andl
inc
add
aaa
mov
outsb
jbe
stc
jno
bound
adc
shll
mov
popf
or
mov
outsb
xchg
dec
insl
dec
xorb
push
test
inc
sub
push
and
or
dec
cld
addr16
sbb
push
arpl
or
enter
push
pop
xor
adc
sub
jmp
cmp
inc
adc
sbb
mov
nop
fs
mov
inc
fdivrs
sbb
dec
and
inc
cmp
inc
cmp
mov
fs
out
xchg
jne
pop
push
cmp
sti
mov
push
cltd
xchg
scas
ret
insl
inc
sub
lods
xchg
sbb
mov
pop
lods
mov
call
lahf
mov
andb
cmc
jecxz
fisubrs
mov
and
push
inc
inc
cmp
out
add
sub
lods
pop
push
lret
push
or
xor
cmp
jbe
pop
dec
mov
out
inc
sub
xor
xchg
imul
shll
add
aaa
das
movsb
pop
inc
sub
sub
add
rcl
pop
jp
push
cmp
adc
movsl
dec
sub
dec
mov
add
mov
inc
push
daa
adc
cmpsb
adc
pop
adc
nop
repnz
insl
or
and
add
nop
mov
add
and
adc
push
xor
inc
outsl
mov
add
leave
int3
clc
add
or
pushf
add
inc
sbb
push
insl
cmp
xlat
addr16
cmp
pushf
push
inc
jnp
and
out
out
dec
or
mov
addr16
jp
shl
xor
and
or
dec
inc
add
cmp
and
jle
add
incl
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
