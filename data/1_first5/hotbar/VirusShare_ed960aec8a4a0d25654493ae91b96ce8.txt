std
insl
push
mov
mov
mov
dec
or
lea
push
call
int3
imul
jne
add
call
test
jne
pop
ret
push
push
sbb
lock
je
aas
mov
dec
adc
movb
fistpll
push
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
mov
pop
mov
call
push
mov
das
js
gs
add
sbb
daa
or
add
shrb
les
inc
rclb
addr16
push
sub
arpl
adc
mov
push
push
push
mov
push
into
pushf
or
xor
jmp
jmp
stos
adc
push
push
sahf
jp
push
jge
fldt
inc
mov
test
ds
jmp
pushl
jg
shlb
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
in
outsl
in
call
ljmp
cmpsl
push
mov
andl
mov
sti
add
adc
enter
add
cs
emms
inc
cld
add
and
pop
scas
fldl
push
inc
in
or
push
fcomi
std
cmpsl
push
in
loopne
movb
inc
xchg
mov
add
nop
idivb
sub
sbb
mov
cmpl
out
sub
add
mov
jmp
push
mov
lock
add
mov
hlt
sbb
pop
push
push
loope
mov
in
shll
loop
inc
adc
adc
jnp
xchg
xor
dec
sbb
int3
or
add
push
push
cwtl
in
add
and
xor
and
add
insl
js
clc
js
fsubrs
cmp
add
mov
mov
push
push
push
lods
push
sbb
add
fdiv
fistpl
fldt
clc
addl
inc
add
in
mov
icebp
test
je
pop
add
pop
mov
push
push
cs
lock
loopne
cmp
push
popl
add
push
cmp
push
xor
add
push
rcrl
dec
in
pusha
les
xchg
shlb
dec
add
sub
in
cmp
call
pop
fsubr
sub
sahf
or
xor
call
sbb
adc
or
js
in
push
push
pusha
repz
mov
in
inc
inc
mov
std
aas
ja
pop
sbb
mov
pop
jge
mov
jmp
push
or
cmp
inc
inc
dec
js
push
mov
push
and
loopne
jmp
push
add
mov
data16
clc
mov
int3
mov
inc
andb
in
cmc
clc
cmc
fnstcw
jbe
stos
imul
push
sub
inc
cmp
mov
cmp
mov
pusha
or
mov
add
sbb
add
mov
pop
add
cwtl
and
jo
sub
shl
xor
lds
jb
jne
into
xor
adc
add
jno
push
mov
xor
push
in
add
push
xor
push
ja
sbb
je
out
and
or
sbb
pop
push
and
fsubl
out
add
addl
pusha
lds
add
xor
js
push
mov
dec
inc
push
and
push
or
cmp
add
pop
and
fildll
xor
push
mov
inc
add
sbb
test
aad
sub
repz
pop
adc
or
add
or
cmp
and
add
fabs
inc
and
xchg
jbe
and
cmp
je
pop
out
push
or
inc
pop
cmpl
and
std
repz
scas
or
push
mov
jno
push
jnp
or
pop
cmp
push
pushf
mov
loopne
adc
sub
int3
push
jmp
jnp
mov
mov
mov
lcall
cmp
jmp
sbb
enter
prefetcht2
clc
popf
add
loop
or
jne
mov
cmp
xor
pop
divps
sbb
add
fidivs
add
xor
bound
xor
pop
dec
movsl
cmp
cmovg
dec
cvttps2pi
repz
test
je
adc
xchg
cmp
dec
mov
rcll
and
and
or
adc
push
and
rcl
sbb
push
adc
stc
xchg
push
enter
push
add
int
sbb
sarl
stos
mov
cmpsl
or
push
or
sbb
push
mov
repz
push
mov
push
mov
dec
mov
pop
lds
pop
mov
xchg
sbb
cs
inc
mov
lds
test
mov
hlt
ret
mov
adc
sub
out
je
mov
pusha
sbb
push
push
shl
cmpsb
filds
cmc
inc
je,pt
ret
testb
mov
add
cltd
pop
loop
or
notl
mov
fisttps
in
dec
pop
outsb
and
adc
or
push
mov
sub
cmpsl
cltd
fldenv
mov
shrb
or
out
js
mov
movsl
cltd
out
fimull
test
jl
or
les
add
mov
in
xor
mov
adc
repnz
or
inc
push
movsb
push
mov
hlt
clts
pushl
ret
dec
pop
mov
lea
lea
push
mov
aaa
je
mov
stos
enter
cmp
cli
mov
stos
daa
insl
lea
jno
and
mov
and
insb
mov
jle
das
add
jle
mov
cmp
or
cmp
cmp
lods
sbb
mov
fwait
and
xor
or
inc
insb
jge
mov
xchg
cmp
and
inc
and
xor
stos
pop
stos
into
mov
ds
or
push
add
iret
mov
sbb
gs
in
xor
data16
mov
test
sub
fcmove
fisubl
insl
lcall
aam
add
cltd
and
aas
push
ljmp
mov
push
lock
pop
add
cmp
jne
pop
mov
push
xchg
hlt
sub
insb
js
scas
cli
int
cmpb
je
sub
dec
pushl
pop
in
popl
daa
aam
insl
adc
in
xor
lcall
xlat
test
je
mov
lds
iret
sub
push
mov
cmp
xlat
push
sub
sbb
das
sub
lods
pusha
add
sub
call
mov
test
jne
jns
push
sbb
inc
cmp
jl
jmp
pop
inc
nop
pop
popa
sbb
ficoms
push
fdivrs
jmp
sub
add
js
mov
ret
pop
jno
dec
mov
icebp
mov
push
mov
adc
pop
pop
fimull
sbb
bound
and
aad
mov
cli
std
filds
or
jmp
sub
ss
andl
and
jge
jl
xor
mov
test
ljmp
adc
jg
dec
adc
adc
ret
push
push
mov
or
sbb
mov
mov
repnz
dec
ret
bound
outsl
jno
mov
stc
test
jne
pop
arpl
cld
pop
push
or
rcrl
xor
add
pop
or
jne
js
sub
pop
cmp
mov
jge
pop
std
mov
aad
out
test
inc
or
mov
cmp
add
sub
or
jl
pop
lea
push
mov
imul
cmp
ja
add
jmp
mov
push
sbb
dec
cmp
mov
and
leave
ret
xchg
lea
shl
cmp
push
add
divb
in
mov
or
std
add
push
hlt
dec
or
dec
hlt
mov
jmp
xor
addb
mov
or
stc
jne
fiadds
push
aaa
mov
jmp
xchg
in
add
adc
data16
repnz
inc
repz
push
ja
lea
decb
pushl
cmp
insb
push
jge
popaw
js
clc
sbb
arpl
adc
cmp
push
pop
xor
sarb
add
nop
test
je
or
cwtl
rcl
pop
mov
mov
push
mov
loope
mov
jle
cwtl
ss
cmp
cmpsl
xchg
sub
push
pop
adcl
push
popl
adc
xchg
pop
xchg
mov
loopne
sbb
test
ret
jle
movsl
or
sub
cmp
lahf
leave
add
add
addl
push
cmp
sti
jecxz
adc
adc
cmp
or
clc
nop
pop
add
mov
js
out
adc
in
std
outsl
clc
into
je
cmpl
pop
mov
cmp
jne
push
push
jge
into
jecxz
xchg
add
mov
jmp
inc
jg
xor
pushf
dec
adc
rorl
xor
xor
bound
inc
sub
inc
or
ss
jge
inc
or
xchg
jo
clc
pusha
jl
push
inc
clc
jg
inc
fimuls
movb
cmp
inc
xor
mov
int3
cltd
popf
stc
cmp
add
cltd
adc
test
inc
inc
or
shlb
adc
ret
out
inc
pop
lret
xchg
sbb
out
add
mov
je
pop
ret
das
dec
push
mov
cmp
mov
pop
xchg
cmpl
jnp
mov
adc
test
add
outsl
dec
push
push
call
outsl
sub
inc
xor
into
cs
jmp
pop
sbb
xchg
cli
pushf
mov
ds
mov
mov
jnp
inc
push
lods
mov
mov
pop
cmp
out
lods
jbe
cmpsb
lret
jge
inc
or
push
or
xchg
push
pop
lret
loop
add
push
pushf
push
clc
sub
mov
mov
jg
repnz
jle
push
daa
sub
and
push
xlat
fstpt
ret
ret
shlb
in
rcll
unpckhps
roll
cmp
mov
incb
add
xor
addl
add
add
or
add
push
inc
adc
scas
roll
scas
rcrl
outsb
enter
dec
jle
ficomps
dec
push
or
fcmovu
sbb
mov
push
das
pop
lods
stc
or
adc
cmp
mov
jge
sarb
jno
repz
xlat
xlat
popf
sbb
or
scas
adc
or
or
imul
loop
adc
or
push
roll
add
pop
sub
jmp
pop
mov
xchg
shrb
sub
mov
rorl
and
adc
xchg
sbb
add
sbb
pop
pop
jmp
shll
test
je
sub
imulb
pop
mov
pushf
jbe
les
cmp
ja
sti
divl
pushl
movsl
dec
sub
push
mov
inc
fwait
cmpsl
adc
inc
fcoms
movl
and
mov
adc
sbb
insb
mov
pop
dec
dec
and
push
loopne
pop
sbb
je
adc
pop
jnp
into
sub
js
mov
add
pop
xchg
fildl
sti
pop
or
mov
add
mov
or
inc
shll
sbb
mov
arpl
add
inc
imul
sbb
mov
imul
pop
add
or
sbb
in
xor
or
ret
add
add
inc
xlat
push
push
xchg
loop
dec
sub
inc
lcall
fwait
repz
or
push
and
pop
out
jbe
jbe
aas
sbb
das
sbb
icebp
test
sbbl
add
fcmovnbe
add
push
push
sub
or
les
loopne
ss
mov
push
pop
dec
dec
or
adc
mov
add
addb
adc
pop
mov
push
lods
dec
or
dec
add
sarb
loop
xchg
or
jl
sti
sbb
and
stc
adc
cmp
popf
cmpl
stc
jne
lds
pop
sbb
lret
mov
jg
shrl
pop
mul
jne
lock
mov
sub
sub
cld
cmp
push
sbb
roll
clc
push
pop
mov
sbbb
mov
adc
addr16
add
push
push
mov
push
push
lock
fnstsw
cmp
pop
and
add
push
int3
fisubrs
pop
dec
je
enter
sub
test
or
pushf
mov
dec
es
cld
dec
inc
shlb
sbb
jmp
sti
mov
imulb
sub
adc
int
jp
repz
icebp
fwait
outsb
je
fcmovnb
add
lock
add
push
mov
insb
xor
cmpps
add
mov
scas
adc
mov
lea
jb
lahf
call
add
mov
xchg
pusha
xchg
jns
sub
sbb
add
sar
lock
rolb
lods
push
xor
push
push
xchg
out
outsl
or
pop
pushl
js
xchg
data16
sarl
mov
pop
nop
out
call
inc
sbb
cld
fcmovnbe
adc
jmp
cmp
je
cmp
imul
fs
sbb
leave
adc
notl
sbb
mov
xor
dec
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
stos
jmp
and
jmp
mov
scas
sbb
iret
repz
push
js
cltd
mov
out
cmp
sti
push
sub
cmp
sub
ljmp
scas
mov
ss
pop
mov
cs
adc
push
pusha
aaa
outsl
sbb
add
and
in
or
iret
in
clc
movb
push
data16
or
adc
dec
in
add
sub
dec
push
dec
mov
jl
lea
push
lea
push
addl
lods
cmpl
dec
cmp
mov
inc
mov
fs
inc
les
das
rcrb
scas
pop
or
pop
xchg
andb
or
pop
pop
sbb
imull
mov
sbb
ja
push
sbb
popf
mov
idivb
testb
in
push
cmc
pushf
adc
jo
call
add
add
mov
jg
ljmp
cwtl
cmpsb
rcll
movl
lret
stos
popf
nop
push
test
mov
roll
sbb
lahf
sbb
lods
cltd
jmp
adc
cmpl
int3
inc
test
cwtl
add
gs
hlt
mov
sub
arpl
sbb
mov
in
adc
imul
ret
xor
sbb
adc
pop
ljmp
lock
dec
dec
rclb
mov
pop
xchg
not
and
push
mov
adc
pop
mov
mov
popa
mov
push
cmp
inc
pop
sbbb
nop
jnp
test
push
push
mov
icebp
xchg
aas
mov
push
push
and
nop
push
mov
dec
xchg
xchg
popf
xor
and
sahf
mov
add
pop
pop
daa
lea
ret
push
je
mov
jo
mov
push
jbe
lea
in
and
lock
cmpl
inc
xor
adc
movsl
bound
clc
dec
addb
bound
cmp
push
ljmp
sbb
incl
xor
mov
pushl
pop
mov
inc
adc
dec
adc
xchg
push
out
je
testb
dec
or
negl
pop
cld
int
imul
sub
pop
sub
cltd
sub
sar
add
bound
xchg
cmpsb
imul
cmp
shrl
push
mov
add
mov
inc
adc
dec
cmp
loopne
cmp
pop
leave
pop
sub
xchg
xor
sbb
push
pop
ret
add
rcrb
repz
mov
stos
rorl
xlat
sub
hlt
push
fists
or
and
inc
sub
mov
lock
xor
push
dec
fdivrl
adc
mov
pushl
mov
sbb
and
and
sbb
add
ud2
cmc
and
pop
andl
cmp
jbe
outsb
fwait
cmpsb
imul
dec
or
not
lahf
push
insb
nop
push
fs
add
adc
and
push
pushf
push
lea
decl
neg
sbb
and
test
aas
repnz
inc
push
adc
cltd
sbb
adc
clc
dec
mov
push
hlt
fisttps
push
add
movsb
dec
inc
add
push
sbb
mov
je
push
mov
push
js
filds
jmp
pushl
and
jp
scas
outsb
call
and
mov
daa
sbb
mov
pop
jmp
adc
aaa
cmp
cmpl
je
cmpl
call
dec
je
ds
push
ret
sbb
mov
pop
jmp
pop
jg
jmp
mov
ds
xchg
andl
push
pop
pusha
leave
bound
or
mov
js
popa
pop
ret
mov
push
movsb
mov
push
push
test
cld
sbb
jmp
push
hlt
movb
add
lock
pop
cltd
divl
out
bound
es
sbb
mov
loope
fcoml
aas
mov
and
dec
inc
mov
cmp
cs
inc
nop
fs
add
insl
cmp
test
push
test
inc
jge
gs
mov
and
popf
push
xlat
pop
addr16
adc
xor
push
mov
inc
test
and
pop
cmp
and
pop
lea
inc
dec
push
lahf
cs
cmp
pop
cmc
add
mov
sub
adc
cmp
mov
inc
gs
mov
push
sub
mov
add
and
push
sub
or
pop
shll
or
movl
shl
lret
add
jl
add
adcl
lret
xor
nop
inc
enter
push
cs
jo
sub
rcll
lea
lods
ds
je
add
push
cmpsb
dec
loope
sbb
or
popf
lods
sub
shll
inc
sahf
xchg
ja
addb
xor
mov
inc
cwtl
cmpl
pop
push
or
mov
out
lcall
aaa
or
sub
xor
pop
lcall
std
or
fldl
fmull
jo
push
cs
sub
pop
add
push
add
add
ret
or
sbb
leave
lock
scas
cmpb
mov
inc
add
lods
mov
es
pop
or
mov
xor
sub
pop
pushf
in
test
popa
rorb
sbb
mov
sbb
or
cmp
adc
jne
pushf
and
fidivrs
push
sub
or
arpl
dec
push
add
push
adcl
test
mov
sbb
cmpsb
loope
xlat
stos
fcoms
daa
sub
or
pop
add
es
out
rorl
js
ret
cmp
or
sbb
in
cmpsb
mov
enter
imul
inc
lds
ret
mov
fbstp
sbb
addb
cmp
pop
rorl
sbb
je
cmpb
mov
cmpsl
mov
pop
sar
adc
xchg
xchg
push
stc
or
das
enter
fadds
push
cmp
inc
popw
ss
pop
cmp
and
jmp
sub
and
nop
push
test
mov
pop
inc
shlb
pop
loope
sarb
push
loopne
push
loopne
int3
add
push
in
adc
mov
xor
lcall
sbb
push
mov
sbb
cmp
inc
into
mov
popa
sub
out
js
ds
dec
fdiv
pop
mov
cmp
mov
push
cmp
adc
fisubrl
cwtl
adc
mov
xchg
negl
movsb
jmp
fisttps
cltd
mov
add
sar
push
into
je
or
adc
jl
repnz
xor
dec
inc
cmp
lock
mov
idivl
adc
mov
out
mov
mov
idiv
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
mov
aas
mov
dec
test
jg
mov
aaa
aaa
dec
pop
cmp
push
jbe
adc
jmp
out
movsl
sbb
cmpsl
insb
cmpsl
int
mov
add
in
in
leave
mov
sbbl
dec
or
insl
rorl
negb
or
pop
pusha
push
ljmp
mov
mov
lcall
inc
lcall
add
and
xor
test
mov
mov
jg
ds
mov
or
xchg
arpl
jge
lret
test
jle
cmp
lahf
xor
xor
ja
sbb
bnd
cltd
push
fstpt
add
pop
inc
pop
xchg
imul
cmp
or
jmp
jge
jmp
dec
icebp
fstpl
sub
inc
hlt
pusha
or
mov
jge
faddl
nop
or
enter
or
ds
lock
mov
mov
test
sbb
mov
inc
fimuls
frstor
cmp
cmp
add
mov
sbb
mov
cmpb
mov
into
clc
fidivl
jmp
outsb
mov
sub
testb
out
xchg
pop
cmp
inc
jne
pop
add
jl
dec
mov
push
mov
mov
icebp
aad
mov
test
js
lea
jne
dec
dec
push
or
hlt
aam
mov
adc
and
sbb
mov
sbb
mov
pop
push
lahf
je
je
lcall
push
fs
fadds
and
subl
or
ljmp
push
push
pop
cmp
and
adc
jle
sbb
cld
sub
mov
add
arpl
clc
test
call
push
std
movsb
sbbb
cltd
xor
mov
xchg
aas
xchg
dec
push
xchg
pop
das
jne
mov
xchg
jo
push
rcll
add
cs
in
jmp
add
push
leave
pushf
pop
je
or
inc
pop
push
outsl
and
and
push
mov
jo
lods
mov
push
mov
push
or
pop
mov
push
sahf
and
les
pop
pop
mov
sti
scas
push
subl
dec
push
dec
add
push
fdivrs
sahf
mov
roll
xchg
push
adc
ret
push
shll
outsl
inc
outsl
mov
mov
dec
inc
add
xor
sbb
cld
mov
arpl
sbb
mov
add
and
push
xchg
lock
pop
pop
xchg
jl
add
mov
cmpl
movnti
aaa
jle
mov
mov
mov
pop
inc
adc
push
xor
xchg
dec
jb
gs
or
add
fbld
arpl
or
inc
or
mov
pusha
sub
jno
scas
shrb
add
pop
mov
add
mov
add
sbb
push
cmp
sub
clc
setb
test
jne
loope
loopne
mov
mov
dec
sub
sar
xor
and
loop
outsl
dec
adc
pop
add
rcll
fimuls
or
ret
push
aam
xchg
add
mov
mov
nop
lock
hlt
mov
mov
jbe
imul
mov
pop
mov
add
mulb
and
cmp
popf
xchg
adc
loop
cmp
hlt
or
sbb
mov
sbb
or
mov
sub
xchg
push
loope
es
ss
cli
cs
or
push
mov
test
or
pop
mov
int3
ljmp
or
je
testl
push
je
std
and
shr
hlt
pop
or
or
rolb
je
push
mov
push
push
mov
add
and
std
xor
inc
adc
movl
cld
push
add
inc
jl
jnp
add
mov
mov
stc
xchg
lock
and
sbb
imul
or
movsl
lea
or
rcrb
es
jnp
mov
int
ffree
add
adc
sbbb
and
gs
push
in
mov
pop
dec
jb
setne
testb
xchg
out
ja
add
pusha
lock
xor
xor
inc
jne
push
add
subl
mov
xor
ja
xor
call
pop
in
sub
imul
xor
imul
cmp
pop
frstor
iret
pop
mov
adc
xchg
jp
push
pusha
je
arpl
cmp
pop
and
lahf
test
adc
mov
or
rorb
and
es
push
sahf
sbb
repz
or
and
sbb
xchg
and
push
xchg
into
jge
fcom
dec
adc
xchg
call
jl
dec
int
mov
insl
icebp
xor
mov
inc
insl
call
dec
mov
jmp
xchg
ja
mov
decl
bound
lcall
jl
sbb
pop
popa
xor
dec
cmp
data16
cmp
or
pop
and
add
inc
dec
xlat
pop
push
jbe
or
push
xor
and
mov
sbb
inc
cltd
js
and
fsubl
xchg
add
orb
cmp
repz
adc
mov
rcll
dec
mov
mov
movsb
add
stos
pop
xchg
and
add
gs
or
or
stos
or
cmp
sbb
jo
mov
aaa
nop
or
xor
mov
mov
sub
add
sti
pop
ds
test
pop
cltd
orl
mov
scas
add
mov
adc
addr16
cmpsb
cs
popf
cmc
push
xchg
inc
bound
jg
mov
addb
xchg
mov
pop
js
movsb
sbb
inc
sub
inc
ss
push
sub
das
adc
xor
nop
shrl
ret
les
shll
push
dec
out
sbbb
inc
jbe
mov
push
sbbb
stc
movsl
loope
leave
mov
push
jno
cld
push
mov
add
or
push
fs
push
pusha
xor
enter
daa
add
mov
add
jo
pushl
fdivl
andb
inc
adc
jle
es
adc
jge
jl
addl
dec
adc
sbb
push
aaa
jl
fsubr
mov
fmuls
push
int3
mov
lock
push
mov
jmp
push
fisubs
roll
adc
fwait
sub
fdivl
adc
lock
mov
push
xchg
adcl
xchg
push
jmp
push
sarl
add
push
fadds
arpl
xchg
pop
adc
ror
dec
mov
sbb
aam
add
movl
sahf
cmpsb
adc
and
or
add
adcl
shrl
xchg
mulb
loope
sbb
or
insb
in
je
sbb
dec
neg
push
pop
bnd
xchg
mov
jle
movl
jo
lcall
sahf
push
or
sub
ficomps
cmpsl
add
dec
insl
pop
andl
lods
lahf
push
push
enter
add
pop
mov
push
enter
sbb
jnp
pop
push
mov
pop
sbbl
jl
inc
cmpsl
mov
mov
sbb
in
mov
repnz
mov
sbb
or
lahf
jne
mov
push
pop
add
mov
aas
jmp
out
aam
mov
push
xor
lock
push
mov
js
xlat
and
fsubrs
push
in
sub
dec
lret
loopne
stc
sbb
pushf
sbbb
push
lcall
sbb
xor
mov
das
mov
inc
adc
mov
shll
repnz
jne
add
adc
push
fs
data16
and
add
push
lcall
and
mov
in
adc
mov
loope
mov
mov
stos
cltd
shrb
shrb
mov
or
add
sbbb
lea
out
push
rclb
cwtl
sub
adc
mov
push
mov
adc
and
je
pop
mov
mov
or
loope
sbb
and
jb
sub
mov
int3
adcb
lods
jbe
add
pusha
push
lds
cmp
push
cmp
sub
mov
adc
loopne
adc
or
lret
das
test
dec
inc
cmp
inc
lret
fchs
loop
ja
and
or
in
cmpsb
in
cld
cmp
xor
lods
xchg
and
adc
add
sti
xlat
cmp
fnstcw
add
adc
push
bnd
add
sbb
push
add
xchg
cmp
adc
out
sub
daa
out
enter
add
repz
xor
push
and
sub
and
cmp
add
or
dec
xor
lods
pop
movsl
mov
out
xchg
cmp
dec
mov
xor
stos
sbb
leave
push
jp
or
sub
sub
vunpckhpd
cmp
sub
stc
pop
rcll
push
and
leave
sub
or
inc
and
add
jb
push
xchg
push
stos
xchg
loopne
outsb
or
test
jne
ds
sbb
ret
jb
sbb
sbb
xor
add
pop
cld
cwtl
adc
xor
or
fs
iret
rcrb
inc
mov
pop
stc
hlt
xor
add
test
fimull
cld
mov
jmp
xor
dec
int
xor
cmp
leave
popf
cmp
adc
ficoms
adc
out
insl
push
adc
mov
dec
xor
or
or
or
enter
in
dec
pop
lret
jg
sub
push
mov
sub
into
dec
dec
mov
xchg
outsl
sti
xchg
decb
jo
pop
jp
mov
push
xor
or
dec
jae
jmp
data16
push
cld
cmp
movsb
mov
pushf
movsb
sbb
out
ret
hlt
int3
mov
push
sbb
lahf
pop
ljmp
mov
xor
cmp
pmuludq
fmull
cs
pop
mov
pop
out
add
jle
cli
insl
jecxz
mov
mov
fdivr
sbb
jmp
mov
mov
push
cltd
add
lret
sub
mov
add
sarl
push
test
jns
fsubl
xchg
sbb
or
inc
fists
movsl
push
mov
push
ret
push
outsl
popa
jnp
imul
push
je
inc
push
mov
dec
mov
adc
cmp
inc
dec
push
mov
mov
push
cmp
fadds
les
sub
test
dec
gs
lock
mov
inc
pop
dec
movl
imul
inc
cs
xor
cli
add
cmp
stos
add
add
aam
lret
add
inc
or
or
cmpsl
jb
add
sti
xor
in
push
sub
mov
or
push
and
les
or
lret
sub
in
jle
sahf
lret
cltd
call
push
cmp
sbb
call
out
add
cmpsl
jb
and
or
nop
pusha
ffreep
and
test
xchg
jmp
inc
inc
xor
adc
ror
mov
sbb
add
sbb
insl
inc
cmpsl
rcll
mov
enter
int
sbb
mov
int3
cmpl
xorb
inc
mov
cmpl
jns
sub
jns
inc
adc
push
imul
push
adc
mov
leave
incb
pop
push
inc
sahf
out
add
inc
add
add
std
push
leave
and
pop
adc
dec
xchg
or
jl
jno
out
inc
xor
inc
push
xlat
or
dec
and
mov
daa
rorb
adc
daa
loopne
push
cmp
ss
pop
push
aam
mov
or
sbb
gs
adc
das
mov
push
enter
gs
push
test
mov
push
cmp
es
inc
insb
imul
or
push
jp
enter
dec
inc
sub
xor
push
jmp
sbb
iret
and
cmp
cmp
imul
push
sbb
testl
icebp
out
sahf
push
sub
jne
inc
push
lcall
mov
push
loop
mov
idivl
or
pushf
or
xchg
ljmp
test
sub
outsl
movsb
daa
imul
xchg
xchg
jno
fcomp
bound
jle
lods
xchg
jae
pushf
lret
sub
sbb
add
and
sbb
adc
pop
sub
lahf
dec
or
jecxz
and
fisubl
sbb
inc
jmp
pop
sti
lea
sbb
cmp
add
push
dec
push
ret
push
in
fisttpll
pop
push
push
mov
das
push
and
cmp
sbb
es
dec
jns
cwtl
movsb
out
pusha
sbb
int3
push
outsl
insl
mov
sbb
inc
add
daa
mov
mov
pop
mov
popa
xor
lea
fisttpl
imulb
cmpsl
push
mov
adc
cmpsl
cltd
push
js
dec
cmpsb
dec
sarl
pop
adc
xchg
push
dec
test
arpl
add
jb
test
mov
xor
icebp
dec
outsb
cld
ds
xor
call
cmp
add
cmpb
mov
jle
jl
cld
sbb
push
add
inc
push
add
dec
mov
push
rclb
pusha
add
imul
into
mov
pop
pop
out
add
ss
push
sti
sbb
mov
lcall
aam
clc
and
loope
sub
or
add
das
shr
bound
into
popa
aad
mov
add
or
cltd
data16
sti
cwtl
lret
pop
les
pop
push
and
imul
gs
pop
cmp
int
jl
add
enter
jle
pop
mov
sbb
fisttps
sahf
mov
lods
mov
pop
adc
lea
fmul
fucomi
add
adc
popf
xor
push
repz
test
mov
jg
sub
jmp
inc
adc
push
sbb
lods
dec
in
mov
or
mov
adc
sbb
mov
xor
inc
push
mov
shrb
stos
cmp
jmp
cmp
push
arpl
mov
ret
jne
add
pop
add
sub
dec
adc
sbb
rcrb
cmp
sbb
xor
sahf
push
scas
movsb
or
pop
test
sub
adc
data16
in
lret
sub
inc
mov
add
jl
pop
hlt
setne
je
loopne
pop
repz
jg
mov
push
push
jmp
mov
inc
or
pop
hlt
jne
push
push
push
sbb
lock
push
fucomi
dec
mov
inc
call
aaa
adc
push
inc
pop
mov
adc
pop
and
lea
daa
mov
and
and
les
sub
cmp
pop
pop
mov
and
add
mov
icebp
dec
cmpsl
sbb
and
xchg
jb
jne
push
in
sub
or
xlat
xchg
lock
std
add
push
sbb
add
orl
cmp
cwtl
xorl
mov
add
dec
push
mov
fwait
push
scas
addl
mov
add
mov
mov
push
add
and
loopne
inc
das
adc
or
add
adc
mov
push
je
xor
or
mov
push
ss
and
inc
loopne
pop
ja
or
xor
cmp
adc
int3
arpl
adc
jl
push
lcall
insl
xchg
push
subl
push
gs
pop
mov
shrl
and
dec
mov
fadds
push
das
add
in
push
mov
mov
out
sarl
fs
adcb
arpl
or
lods
mov
in
mov
stos
inc
data16
aad
or
inc
fnsave
mov
inc
sbb
adc
out
mov
repz
into
mov
and
xor
jo
idivb
sub
adc
into
and
es
inc
hlt
mov
mov
mov
mov
jle
jle
xor
add
and
test
lds
movzwl
xchg
xchg
or
aad
mov
pushf
mov
test
scas
sbb
xor
sub
inc
adc
rorl
rcrl
adc
pop
adc
leave
push
repnz
push
mov
push
insb
and
cli
add
or
cmpsb
cltd
push
mov
cli
inc
or
inc
push
inc
sub
loop
xor
jne
test
pop
lods
ja
cltd
ficoml
shlb
movsb
repz
pop
cmp
push
in
sbb
pop
in
loop
ja
stos
movsb
mov
xor
icebp
test
inc
sub
xor
mov
push
cs
adc
fnstsw
jbe
stos
xchg
aas
sbb
push
jno
mov
clc
out
lea
aas
push
inc
add
inc
shll
mov
add
pop
add
lds
sahf
sub
lds
push
int3
lock
xorl
daa
and
xchg
mov
sete
test
sbb
mov
test
push
adc
lds
cmp
je
jmp
cmp
ret
repnz
inc
jnp
mov
lret
ja
push
or
addr16
adc
mov
je
cmp
je
or
clc
cmp
sti
mov
fbstp
push
sub
sarb
pop
mov
daa
xor
push
add
sbb
push
push
in
add
mov
cli
aaa
xor
mov
cmp
jge
mov
stos
ret
fists
testl
or
xor
jnp
aas
jecxz
jecxz
jmp
les
ljmp
hlt
jp
dec
pusha
pop
inc
fildll
pavgw
leave
jl
mov
cmp
jg
loope
shr
push
sbb
sub
filds
push
jmp
mov
adc
lods
pop
mov
hlt
mov
cli
lea
sub
pop
or
adc
lods
jp
orb
sti
jbe
dec
sbb
xchg
rclb
add
loope
xchg
sub
push
les
jo
nop
mov
inc
sub
sub
repnz
ret
in
add
adcb
aam
je
sub
sbb
fnsave
ret
mov
pop
icebp
and
cmp
iret
pop
movsb
mov
xchg
push
clc
bound
ret
enter
clc
subb
jl
lock
mov
sbb
push
cmpsb
cmp
jo
loop
add
fdivs
mov
cli
cmp
mov
sbb
pop
or
mov
add
sub
divl
or
push
inc
hlt
jo
dec
push
cmp
sbb
data16
sahf
push
mov
push
ret
lods
sbb
sbb
mov
inc
pop
and
dec
adc
or
mov
in
mov
lret
push
pop
mov
push
mov
lcall
add
sbb
and
push
lods
stc
cli
or
push
dec
andl
andl
or
lock
movsb
jb
addr16
lea
cmpb
aas
or
mov
mov
or
adc
mov
push
push
pop
xor
insl
sub
sbb
mov
outsb
leave
sar
mov
mov
cmp
add
stos
cltd
xor
rcrl
cltd
pop
xchg
je
test
aaa
shrb
dec
add
outsb
ret
pop
test
cmp
cmpsl
mov
mov
sbbb
xchg
adc
arpl
jp
call
pop
adc
inc
push
or
cmpsb
cli
add
test
push
jmp
mov
scas
xchg
push
lods
lret
or
mov
dec
divb
ret
mov
cmp
pushf
inc
cli
insb
jg
pop
loope
add
push
cmp
xchg
mov
orb
xor
and
es
adc
in
sbb
dec
lock
adc
inc
mov
in
add
push
push
lcall
shrb
das
sub
xor
cld
inc
clc
or
in
or
push
adc
test
cmp
aas
add
je
jbe
push
ljmp
or
inc
sbb
popf
sbb
add
adc
sbb
push
pop
adc
adc
jne
insb
jmp
pop
scas
test
adc
loope
je
lret
push
sti
adc
repz
dec
mov
sub
mov
add
outsb
adc
daa
aam
mov
jnp
mov
dec
inc
jnp
xchg
xor
lock
push
mov
in
add
or
jns
dec
inc
and
das
insl
sub
sbb
pusha
test
fwait
xor
dec
mov
adc
push
adc
mov
and
out
ret
jne
mov
bt
dec
push
lock
cwtl
adc
mov
inc
mov
sub
insl
push
int
call
mov
cmp
dec
add
mov
jno
shlb
js
jp
add
dec
pop
cmp
lock
sbb
gs
movsl
call
sub
es
inc
jmp
stc
push
add
adc
adc
dec
inc
out
mov
cmp
and
jo
jb
sub
sbb
inc
pop
test
call
or
push
movsl
in
loope
push
xchg
adc
out
pop
pop
push
push
sbb
jmp
stc
into
popl
arpl
pop
test
pop
jne
sbb
dec
mov
pop
movsb
push
xor
push
pushf
cmp
in
dec
or
sub
jne
add
sub
mov
in
dec
cwtl
add
push
push
push
test
pop
jmp
loopne
subb
data16
loopne
push
jns
outsl
ja
sub
and
push
gs
add
pop
xchg
add
daa
or
and
lods
mov
or
lret
add
fs
push
or
push
inc
adc
push
mov
outsb
push
call
movb
dec
mov
mov
lret
pop
fldl
pop
jle
insl
add
adc
pop
ds
cmpsl
jl
dec
call
repnz
call
push
xor
lahf
add
mov
aam
pop
in
shll
and
sbb
push
jbe
jns
add
xlat
pop
jmp
push
or
lock
push
pop
jo
scas
cmp
add
mov
push
dec
adc
sbb
and
or
push
rorl
mov
addl
dec
orb
push
negl
and
jb
sti
je
inc
imul
pop
imul
movsl
lds
in
sbb
aas
mov
pop
leave
sbb
or
jecxz
insb
xchg
adcl
jae
mov
push
dec
mov
pop
mov
and
movsb
add
and
orl
mov
arpl
xchg
aam
test
sub
add
jns
or
shlb
mov
in
inc
addr16
sub
rcll
test
repnz
cmp
inc
push
cmp
xlat
daa
or
daa
dec
push
add
test
cmp
adc
sahf
jl
sbbb
sar
pushf
mov
shrb
dec
xchg
adc
movsb
or
or
pop
bsf
or
mov
add
pop
leave
pop
les
pop
shlb
or
or
in
sarl
dec
add
bound
jae
sahf
inc
enter
imul
pop
insb
and
es
dec
and
pop
pusha
jge
and
lahf
sbb
int
outsl
stc
mov
rorl
sbb
shrb
stos
dec
aam
dec
out
enter
test
push
and
or
adc
cmp
test
dec
push
add
in
mov
sub
jne
xor
push
push
inc
adc
in
movsb
sub
or
mov
mov
push
add
stos
addl
cli
clc
mov
sub
push
int
or
or
push
xchg
mov
push
add
fiaddl
aam
std
jg
pop
cld
sub
mov
imul
jo
fimuls
hlt
ret
jg
daa
mov
lock
call
loop
sbb
lods
pop
hlt
shr
mov
rolb
push
imull
icebp
add
add
push
push
add
push
xlat
xlat
sbb
test
or
ja
jp
mov
add
add
insl
lea
mov
jmp
test
jo
sbb
cmp
jb
fwait
mov
pop
pop
hlt
adc
jmp
mov
rorl
rcrb
add
jecxz
pop
adc
insl
movsl
add
into
pop
jmp
mov
cwtl
mov
cwtl
rcll
add
jl
or
pop
movsb
sub
mov
add
je
sub
or
sbb
mov
push
decl
add
push
or
and
push
mov
roll
mov
cmp
je
sbb
pop
add
push
push
insl
pusha
psubd
mov
sti
testb
cmpsl
push
fcmovne
pop
dec
xor
clc
mov
iret
jle
jbe
dec
mov
sbb
ljmp
mov
shrb
mov
push
cmc
pop
jl
push
push
ja,pt
popa
sub
repz
movsl
fprem
push
test
push
add
adc
mov
popl
adc
pop
inc
or
jg
mov
mov
cmp
je
push
lea
push
int
xor
arpl
cmp
sub
das
stos
cmpb
in
jno
mov
xor
adc
xchg
jb
mov
fcmovnb
inc
data16
xlat
push
aas
push
adc
nop
mov
sarb
lods
push
fwait
and
inc
sbb
or
out
add
jbe
xchg
push
clc
add
hlt
push
in
inc
in
push
mov
in
mov
mull
mov
ret
cld
jle
nop
sbb
loope
in
dec
mov
push
push
je
dec
inc
xorl
lock
push
push
inc
mull
test
ja
fidivl
loopne
inc
movsl
mov
push
push
cmp
je
and
fcoml
xchg
sbb
test
mov
add
fiadds
push
mov
dec
push
xor
fdivrs
fnsave
push
aas
xchg
cs
mov
int3
xor
and
cmp
aam
xor
icebp
add
adc
mov
pusha
data16
into
push
test
lock
lcall
pop
or
pop
ret
rorb
test
dec
add
in
pop
xor
dec
sbb
js
add
push
and
insl
xor
sarb
dec
int
aad
je
rclb
push
std
cmpl
je
ret
pop
or
and
push
or
adc
filds
adc
ret
add
jb
pop
push
ljmp
mov
sub
sbb
xor
dec
jnp
sub
and
fbstp
js
cld
ljmp
add
in
cmp
je
cmp
je
cmp
jne
mov
push
aas
add
cmpsb
mov
dec
add
or
je
xchg
push
mov
jno
andb
outsl
loopne
clc
dec
outsb
pop
mov
cmp
xor
adc
sub
sahf
pop
mov
pop
clc
and
cld
ret
jno
mov
add
jmp
enter
add
jno
cmp
jne
xchg
and
cmpb
sbb
lds
mov
mov
or
repnz
ret
xchg
jle
aaa
pusha
sub
cld
cwtl
insl
adc
sub
cld
add
adc
dec
jmp
sub
ret
cmp
pop
dec
adc
add
xlat
push
xor
or
cmp
jb
cmp
ja
loop
cmpsl
cmp
call
aaa
popa
aam
rclb
call
push
dec
je
add
push
sbb
daa
lock
add
mov
jle
push
pop
push
inc
mov
pop
pop
dec
mov
int
add
repnz
je
lock
jmp
jo
in
xor
mov
cmp
add
mov
cmp
gs
jp
lcall
cmp
jne
mov
sbb
add
push
iret
sti
lods
jmp
inc
repnz
mov
pop
dec
xor
push
adc
outsl
movsb
jne
jmp
testb
pushf
testl
ret
sbb
cli
cmp
jbe
sahf
push
ja
dec
lea
mov
cmp
xchg
mov
fs
dec
inc
jmp
inc
and
add
mov
cmp
or
mov
clc
lahf
loopne
insb
push
std
mov
lock
je
mov
lea
mov
sahf
clc
adc
or
enter
cs
in
inc
xor
inc
cmp
cld
pop
sahf
jne
cmp
notb
mov
pop
cmpb
insb
pop
daa
sub
adc
je
sub
fildl
in
ja
shrb
enter
addb
xchg
aas
mov
xor
pop
cld
add
push
cmp
push
subl
xor
cmpsb
inc
sub
popa
sub
lds
mov
cld
and
add
fs
sub
sub
jb
aaa
jb
dec
jae
push
cmp
jecxz
js
xchg
add
jmp
cwtl
aas
les
jle
pop
scas
inc
orl
xor
test
jne
shll
xor
push
push
sub
dec
or
push
fdivrs
add
pop
jae
mov
jmp
dec
shlb
xor
jbe
test
sub
cwtl
ret
mov
cld
sar
sub
add
jo
adc
lcall
stc
inc
jg
dec
add
cmp
aaa
or
jle
aaa
aaa
aaa
es
sub
sub
and
pop
cmp
jl
shrb
insl
pop
jle
pusha
add
test
iret
add
jbe
jp
jb
jbe
mov
mov
test
fwait
and
or
jl
jle
je,pn
test
jne
je
outsb
and
test
add
xchg
je
je
xor
cmp
jae
movb
inc
mov
push
sub
add
sbb
jne
add
sub
shlb
mov
push
mov
inc
and
je
jnp
dec
out
adc
xor
jmp
mov
add
subl
and
les
cmp
inc
popf
jnp
mov
add
push
movl
sub
mov
lock
pop
movsb
aas
and
and
insl
xchg
push
add
mov
inc
mov
add
mov
cli
ficompl
mov
sbb
leave
out
add
jo
bound
mov
xchg
sbb
hlt
push
sti
hlt
mov
mov
xor
pop
movb
push
inc
lea
call
push
pop
add
inc
push
jb
sbbl
add
cmpb
dec
movsb
add
xor
mov
or
xchg
rcrb
mov
pop
cwtl
xor
mov
jmp
lock
pop
jmp
daa
mov
add
inc
mov
push
push
xorl
pop
xor
mov
popf
push
push
ret
insl
and
cmp
cmp
divl
xchg
adc
pop
pop
in
into
add
fsts
sti
add
and
je
out
sbb
jbe
pop
mov
or
cmp
push
stc
and
pop
add
jo
ds
or
add
lods
movb
mov
push
aam
xor
pop
mov
leave
mov
mov
or
nop
jbe
ljmp
sbb
mov
xor
add
mov
inc
pushf
cmp
mov
adcl
sbb
je
push
cmp
lock
popa
scas
imul
pop
add
clc
hlt
inc
xchg
xchg
add
pop
adc
rcll
add
gs
pop
pop
mov
sub
xor
mov
or
daa
add
inc
out
jg
inc
fisttpl
lea
jb
inc
push
lret
dec
push
pushl
ret
je
insl
mov
rorl
pop
lock
std
rclb
pop
push
and
cs
sub
xchg
xor
push
mov
lahf
jne
jb
dec
into
addl
xchg
xchg
xor
pop
mov
cmpb
cmp
mov
xor
or
xchg
nop
mov
inc
xchg
and
inc
jbe
test
and
mov
call
jle
setne
xor
xchg
rorb
aam
shlb
clc
mov
cld
jecxz
sbbb
in
mov
xor
in
add
mov
push
in
bnd
add
arpl
push
rorb
mov
jg
out
and
jne
adc
push
push
fdivl
jne
jle
pop
insb
sbb
aas
jnp
das
movl
cmp
das
bound
in
add
jp
cmpl
xor
data16
enter
add
push
or
mov
jb
fcomps
std
loope,pn
inc
ret
cmp
je
jg
js
faddl
lds
add
insl
negb
inc
xchg
in
loope
jge
pop
and
aaa
addl
sbb
pop
call
cwtl
mov
roll
mov
adc
push
imul
jmp
jle
test
jo
push
fwait
push
xchg
and
dec
movsl
xchg
in
dec
fisubl
push
call
xor
jbe
or
sbb
jp
sbb
add
jae
jmp
clc
mov
cmp
je
lea
cmpb
cmp
jne
push
inc
mov
or
jne
push
loopne
inc
scas
xor
pop
cmp
mov
mov
inc
incl
andb
fcompp
xchg
push
jmp
test
movsb
push
jbe
mov
cltd
test
adc
pop
jge
cmp
cmp
sbbl
jo
and
sbb
push
shlb
jns
and
mov
or
ret
ljmp
jns
lahf
jmp
ret
push
lahf
loop
or
dec
popa
in
jecxz
int
adc
pop
sbb
js
ret
aad
ret
xor
cmp
orl
push
int
add
int
dec
sbb
add
movsl
jne
fwait
in
sub
test
mov
cmp
cmpsl
xor
pop
cs
imul
cmp
inc
mov
xchg
data16
mov
add
lods
xchg
add
cld
lret
push
push
push
sbb
mov
or
lock
push
incl
das
mov
popa
pop
pusha
adcl
xchg
movsb
sub
mov
mov
jbe
cmp
inc
and
cmp
xor
push
fadds
mov
sub
xor
jb
pop
xor
cmp
sub
cmp
inc
pusha
sub
sbb
pop
ret
inc
imul
loope
sbb
add
hlt
inc
test
data16
ret
mov
call
sbb
in
inc
mov
push
cwtl
push
pop
xor
xchg
test
jb
sub
sbb
out
rcrb
pop
sbb
mov
push
push
pop
cmpsb
loopne
sbb
push
push
popa
pop
aas
cmp
popf
jne
sbb
mov
mov
xchg
or
or
ret
adc
orl
sub
in
dec
bound
rorb
xchg
or
add
dec
movl
mov
push
push
add
mov
rcrb
push
inc
inc
out
ja
int
repnz
cld
test
mov
fiadds
test
or
or
fdivrs
pop
lcall
gs
movsb
mov
addr16
or
dec
xor
pop
or
push
loopne
cmc
out
jne
cld
faddl
mov
int
pop
imulb
fadds
cli
add
add
push
pushf
js
or
roll
mov
rclb
jnp
pop
cmp
adcb
pop
jle
adc
xchg
sar
xor
jmp
pushl
add
rolb
mov
jg
jo
mov
fiadds
addr16
push
frstor
xor
orb
pop
push
pop
jmp
je
hlt
and
mul
add
cmp
mov
femms
add
sub
insl
inc
pusha
enter
xorb
scas
aad
push
hlt
out
in
pop
add
jb
mov
fsubl
push
xchg
out
xchg
jns
mov
mov
or
and
xchg
xchg
int3
cmp
loopne
fidivl
sbb
push
adc
mov
push
shlb
call
add
call
pusha
daa
fsubs
push
outsb
jns
enter
or
movsb
std
fdivl
mov
push
ljmp
in
xchg
inc
cmp
movsb
or
add
and
lahf
adc
add
cmp
or
adc
stos
sub
adc
sub
pop
push
in
and
mov
dec
cmp
sbb
loopne
rcrl
or
lods
in
xorl
imul
and
xchg
push
shlb
mov
xchg
cmpsl
jnp
popa
adc
pop
or
adcl
cmp
inc
testb
cmpsl
jge
aaa
sub
mov
sub
call
pop
sbb
adc
or
mov
sbb
cmpl
and
and
push
pop
data16
add
mov
mov
or
mov
daa
adc
into
mov
add
int
cltd
or
adc
dec
sbb
push
push
imul
in
scas
nop
ds
or
mov
sahf
idiv
and
pusha
sub
add
insb
shlb
scas
sbb
or
mov
push
sub
js
pusha
mov
sub
add
fsubs
shr
push
mov
lods
stos
or
push
jo
add
mov
push
out
or
hlt
adc
bound
enter
xor
xchg
or
or
pop
and
mov
sti
lahf
pop
faddl
and
sub
stos
shrl
in
lock
movsl
add
mov
out
pop
les
in
inc
cmc
cwtl
scas
cmp
pop
ret
push
or
pusha
das
add
addr16
int
loopne
sub
lock
nop
int3
and
lea
testb
lcall
ja
cmpsb
cmp
mov
inc
adc
popa
dec
mov
loope
mov
sarb
and
and
das
adc
cmpsl
and
jnp
add
mov
sbb
out
xchg
data16
inc
push
or
dec
sbb
andl
xor
add
and
inc
pop
cmp
or
mov
shlb
orl
pop
push
xchg
outsl
sbb
imul
in
or
xchg
xchg
lret
sbb
lret
jle
and
or
xlat
xchg
sbb
sub
data16
ss
sub
fmull
or
xor
mov
imul
adc
cmp
mov
test
sub
mov
mov
add
mov
add
push
and
notb
pop
pushf
sbb
jmp
pop
pop
iret
push
mov
and
rorb
cmp
adc
push
ret
ret
loop
sub
xchg
add
xchg
cmp
dec
xchg
fdivl
and
pop
pop
mov
or
jp
sub
or
adc
push
jg
sub
hlt
sub
inc
ficomps
std
mov
mov
pop
push
test
jns
pop
pusha
push
lock
add
and
mov
mov
sub
sbb
int3
rcrb
pop
and
pop
cmp
push
adc
mov
push
add
ja
fcompl
fwait
mov
xchg
push
cmp
xor
adc
inc
adc
clc
or
sub
xor
dec
mov
pop
neg
add
or
sbb
dec
adc
movaps
dec
mov
inc
cmp
loope
stc
or
xchg
ret
mov
mov
fbld
out
or
xchg
sub
into
lock
add
xor
adc
push
pushf
pushf
inc
adc
or
andl
std
testl
lock
or
and
pop
or
sbb
mov
push
out
repnz
add
pushl
call
mov
nop
pop
xchg
pop
cmp
adc
idivl
test
jl
add
out
mov
enter
pop
adc
pop
arpl
lret
aam
adc
push
pop
or
test
and
mov
inc
aam
mull
push
rcll
dec
imull
fbstp
push
pop
pop
sbb
std
jno
adc
jns
lods
mov
rclb
dec
or
dec
enter
pop
iret
mov
es
aad
pop
dec
fs
pop
xchg
push
aad
adc
cwtl
ss
pop
dec
mov
add
xchg
adcb
and
mov
jmp
call
sub
add
and
dec
xchg
mov
sub
push
push
out
jo
add
or
dec
sbb
dec
sub
and
or
nop
lret
lea
popa
sub
push
js
jmp
xor
bound
jecxz,pt
clc
and
sbb
in
cmp
movb
dec
push
or
push
mov
push
outsb
jae
sbb
mov
and
and
insb
sub
mov
cld
mov
cmp
enter
or
in
sbb
jns
add
add
dec
gs
add
cmpb
pop
and
lret
pop
scas
aad
stos
inc
push
lock
das
daa
test
pop
xlat
adc
and
inc
or
aad
mov
lea
pop
push
pop
fs
add
test
jmp
mov
insb
jecxz
mov
iret
xor
fisubrs
ret
hlt
push
les
sar
sub
call
add
sbb
pop
hlt
rol
test
cmp
push
sub
shlb
pop
sbb
leave
and
pop
mov
push
push
inc
push
ljmp
add
test
sub
adc
push
rorl
or
roll
sbb
bound
add
xchg
out
aam
in
add
daa
cmp
std
icebp
sub
and
pop
cmpsl
test
enter
leave
cmp
jle
xchg
icebp
cmp
dec
sub
sub
mov
mov
add
jno
pusha
stos
pop
adc
in
xchg
pop
adc
fwait
jle
sti
lods
cmp
push
cmp
xchg
pushf
dec
les
inc
in
xor
in
sbb
add
sub
inc
in
add
test
sub
in
pushf
pop
xchg
hlt
mov
loop
add
jl
insb
cmpsl
or
add
push
lods
mov
xor
in
loop
mov
xor
nop
leave
or
jne
xchg
mov
ja,pn
rclb
ja
xlat
mov
enter
sbb
sbb
pxor
inc
mov
test
xchg
cmp
jne
mov
jmp
pop
in
pushf
outsl
mov
mov
sbb
es
popf
pop
popa
mov
fldenv
push
rorl
xchg
aas
sbb
imul
or
je
lcall
mov
imul
xor
out
or
test
nop
out
push
mov
push
xchg
arpl
pusha
rcrl
daa
aam
push
add
sub
idivl
fsubrs
hlt
push
or
mov
jp
lcall
jbe
mov
mov
mov
inc
xlat
nop
mov
cwtl
repnz
popa
xchg
or
mov
iret
add
dec
adc
dec
pop
cmp
aam
repnz
pop
adc
xor
data16
inc
popa
das
push
cmp
dec
aaa
fildll
and
aam
movsb
push
in
xchg
jne
and
cmp
adc
adc
and
or
sbb
jno
xor
add
fldenv
fdivs
les
mov
xor
sahf
adc
jl
mov
jge
pushf
sahf
jbe
mov
ret
jl
mov
adc
push
push
and
mov
and
inc
push
xchg
scas
aam
or
xchg
jns
outsb
test
pusha
adc
inc
push
aam
adc
dec
cmp
test
call
loopne
aam
repz
mov
adc
push
sub
sub
xor
push
das
xchg
push
mov
in
js
cmpsl
data16
xor
mov
iret
push
dec
xorb
inc
lods
add
inc
fldcw
shlb
psrld
sbb
enter
fdivr
mov
adc
cmp
jecxz
ficompl
push
push
pop
xor
sbb
mov
adc
addr16
or
fcmove
or
loopne
inc
mov
insb
decl
lea
mov
jecxz
adc
pop
add
push
push
or
pusha
jo
pop
rcl
or
movsl
xchg
imul
adc
jp
mov
xor
cmp
loopne
sbb
mov
xchg
push
imul
rclb
xor
or
xor
and
or
push
or
inc
rorb
adc
or
movsl
mov
mov
mov
push
sbb
in
das
scas
lret
mov
roll
mov
sub
sub
aaa
jne
pop
lcall
arpl
out
inc
fidivs
fistpl
sub
out
dec
or
pop
dec
xchg
add
repnz
and
repz
xchg
xchg
inc
rorl
add
lds
outsb
push
test
xchg
mov
enter
lods
or
add
rcr
cmp
pop
ds
divl
jae
pop
inc
add
sub
bnd
and
dec
int3
add
loope
sub
adc
mov
or
inc
movsb
mov
inc
jmp
sub
sbb
call
inc
add
pop
dec
pop
pop
js
cmp
inc
imul
push
int
xor
lods
mov
sub
sbb
cwtl
call
adc
imul
or
push
jle
and
pop
out
movsl
cmp
sahf
add
or
je
xor
xor
cld
inc
pop
inc
jl
add
fisubrl
popf
push
or
shlb
mov
js
jmp
cs
test
insb
out
mov
mov
ret
mov
cwtl
xor
push
add
fwait
call
adc
inc
fisubrl
lea
pop
test
sub
sbbb
js
or
cmp
imul
cmpsb
pop
daa
cmpl
nop
jl
sub
lret
pop
xchg
dec
subb
fdivrs
ljmp
movsl
lahf
bound
iret
mov
sbb
dec
sbb
push
in
insl
push
ljmp
addr16
adc
push
bound
or
test
iret
inc
push
and
mov
or
jbe
aad
fisubl
cmp
jns
iret
pusha
les
nop
cld
jmp
scas
sbb
inc
aaa
add
xchg
bnd
ja
jne
ret
adc
movzbl
push
ret
repnz
sti
xchg
jmp
push
je
xor
mov
or
cmp
push
pushf
fiadds
das
addl
hlt
jbe
cltd
stos
dec
hlt
fnstenv
je
sub
sbb
popf
aas
jp
push
jmp
outsb
insl
mov
mov
mov
xor
sub
mov
cmp
punpckhdq
ljmp
repz
push
lea
push
inc
push
lret
jmp
test
push
ja
psubusw
cmp
inc
or
cmp
adc
cmp
leave
sbb
pop
or
cmp
add
xor
or
addb
adc
cmc
sbb
lret
or
pop
cmp
mov
or
add
sar
add
or
add
fwait
into
shl
push
mov
push
mov
insb
sarb
jb
dec
pop
push
mov
cmc
sub
pop
cmp
push
add
xorb
or
inc
dec
int
push
mov
xchg
pop
and
outsb
mov
jo
xchg
sbb
or
cwtl
mov
cmpb
and
jmp
loope
inc
mov
test
cmp
jbe
fdivp
and
inc
cmp
push
push
sub
push
aad
sub
ror
popa
fucom
aas
mov
push
sbb
fcoms
push
sbb
add
xchg
cmpsb
adc
jnp,pn
and
jmp
mov
mov
push
cmp
add
sub
adc
or
adc
int
xchg
and
pop
scas
fs
sbb
mov
into
xlat
push
or
hlt
imul
lahf
jb
sbbl
add
lret
or
movsb
fwait
je
je
sub
dec
jecxz
decl
pushf
cmp
cmp
jbe
cmp
jbe
mov
sbb
mov
mov
push
mov
popl
mov
mov
enter
pop
inc
pop
add
out
add
and
xor
gs
mov
sub
inc
outsb
cld
adc
cmp
shlb
sbb
inc
mov
inc
jle
lahf
adc
inc
lea
popl
pop
dec
or
lea
sub
pop
add
mov
push
clc
dec
call
sarb
adc
push
scas
es
push
mov
add
inc
sbb
outsb
daa
dec
cmpsb
jl
adc
ss
movsb
int3
adc
bound
scas
inc
scas
sbb
jb
sbb
pop
push
xlat
or
in
push
mov
arpl
lds
mov
sub
stc
fdivrs
cmp
jnp
add
fsubr
psrlq
jne
mov
inc
icebp
or
jl
icebp
push
or
push
sbb
and
cmp
xlat
and
in
jb
cmp
test
cmp
jb
jmp
cwtl
sbb
and
push
mov
int3
in
sub
xor
adc
test
or
das
lock
mov
lods
xchg
mov
jb
mov
flds
leave
lcall
and
sbb
stos
test
imul
push
stos
push
adc
sbb
and
stc
lcall
mov
mov
adc
mov
fwait
mov
popl
mov
add
jmp
aad
sub
out
subb
mov
pop
sub
ret
imul
pusha
imul
mov
and
inc
mov
push
stos
mov
faddl
mov
in
push
sub
jg
lea
sub
xlat
jo
pop
sub
mov
loopne
cmp
jae
int
hlt
xchg
test
xor
ret
bound
aas
inc
sub
and
pop
lea
mov
sbb
fstps
cmp
sbb
mov
jge
out
dec
loopne
loop
sub
jl
inc
sti
jmp
test
imul
jle
cld
cmp
push
hlt
roll
adc
xchg
xor
add
call
lds
sbb
movsl
mov
add
cmp
ror
ret
das
movsl
mov
aaa
dec
arpl
nop
push
lahf
addr16
mov
add
cmp
xchg
mov
ficomps
pop
cmp
jne
shll
in
lock
pop
mov
push
add
jnp
xorl
js
jb
mov
pop
shlb
dec
movsb
and
push
jmp
mov
push
sub
mov
dec
cmpsb
fmull
push
jle
mov
rcrb
mov
out
push
mov
or
cmp
jne
js
testl
mov
loope
inc
das
jo
aam
incb
faddl
dec
aas
push
out
fsub
ret
inc
jp
mov
and
rorb
rclb
mov
out
insb
and
jmp
or
mov
into
mov
inc
pushf
sub
data16
and
in
es
push
int
mov
stc
push
lahf
cwtl
lods
out
pop
loopne
xor
xor
dec
push
fmull
mov
lcall
mov
xchg
jg
cmp
xor
cs
add
xor
add
testb
les
jmp
jbe
daa
pop
dec
fsubrl
push
je
sbbb
addb
pushf
xchg
jo
jnp
jne
negb
lahf
jb
mov
bnd
xor
out
test
cs
add
repz
adc
sbbb
pop
mov
ljmp
pop
lock
mov
gs
lods
mov
and
cmp
jge
jo
mov
test
or
mov
or
out
lea
inc
xor
and
rorb
add
xchg
cmc
rolb
fwait
je
test
mov
inc
push
jle
outsb
jnp
inc
cmpsl
rclb
adc
test
adc
sub
cli
js
sahf
lock
push
push
and
add
dec
pop
inc
xchg
or
idiv
idivb
mov
jle
push
push
push
aas
les
ja
inc
mov
sub
add
jge
pop
xchg
push
pusha
jle
fadds
or
mov
pop
push
mov
push
xchg
mov
mov
movl
and
aas
push
inc
pop
inc
add
pop
and
push
push
push
xchg
xchg
bound
and
pop
loope
movsb
mov
fsts
pop
sub
and
sub
mov
lea
scas
and
mov
dec
jecxz
adc
adc
push
or
movsb
insl
push
js
icebp
push
incl
loopne
je,pt
aas
cmp
shl
jle
jbe
adc
cs
cmpsb
adc
xchg
enter
add
ret
lods
rclb
cwtl
popa
outsb
sub
std
fwait
or
mov
cmp
jae
cmpl
or
xor
or
sarl
jge
jle
ds
sub
lods
xor
sub
add
testb
cld
js
jb
pop
cwtl
pop
jnp
mov
push
xor
rclb
sbb
into
push
mov
dec
xor
insb
or
sbb
fidivs
dec
pop
addl
movsb
push
andb
xor
addl
mov
stos
cmp
unpckhps
xor
add
xor
das
xchg
mov
sbb
pop
inc
sub
mov
mov
aam
addb
mov
push
cmp
adc
in
adc
sub
xchg
push
dec
push
enter
mov
and
pop
sbb
int3
aad
pop
pop
ret
in
daa
mov
or
inc
loop
cmp
add
push
test
mov
sti
mov
pop
push
jns
jge
fildll
and
sbb
jmp
jecxz
or
aaa
lret
mov
cs
scas
mov
mov
loope
pop
add
push
fnstcw
je
ficoms
or
lea
ja
adc
and
pusha
push
mov
stos
sbb
push
mov
mov
xor
push
xchg
movsl
loope
cld
push
inc
inc
push
lds
jnp
xor
sub
pop
or
xchg
cmp
and
push
push
outsl
xchg
push
adc
in
jg
and
push
orb
xchg
cmp
xchg
or
das
xor
xor
ljmp
jb
adc
jmp
jns
out
test
shl
xchg
cwtl
adc
movb
ss
dec
inc
mov
cmpsb
push
mov
mov
rorl
data16
ja
add
push
shr
mov
mov
sbb
xlat
jmp
cmp
hlt
jbe
sub
es
imul
xor
mov
rorb
inc
int3
in
out
jae
roll
fs
nop
jge
lahf
dec
inc
cmp
mov
pop
test
sub
cmp
and
inc
mov
fsubr
pop
pop
shll
mov
mov
xchg
adc
jl
mov
xlat
out
jo
xor
adc
jecxz
jle
fimuls
xchg
pop
push
repnz
mov
imul
push
add
inc
shl
icebp
jae
sbb
rcrb
dec
add
mov
and
inc
mov
js
add
sarl
in
and
adc
add
sub
or
sbb
les
dec
jne
pusha
push
inc
adc
ljmp
cmp
je
mov
xor
mov
bound
mov
jo
and
and
add
roll
adc
jo
sbb
fs
std
jl
jmp
ret
leave
and
xchg
rcrb
insb
dec
or
mov
mov
idivb
mov
jne
add
in
hlt
out
mov
sbb
or
xlat
hlt
push
xchg
dec
je
dec
jl
pop
or
cltd
incb
js
mov
lea
jne
int
orl
inc
cmpsl
rolb
pop
mov
es
out
int3
adc
outsl
clc
stc
mov
cmp
cwtl
lea
jmp
cmpl
inc
cmp
mov
repz
dec
orb
add
jnp
xor
je
clc
sub
mov
mov
shrb
mov
sub
sub
movsb
sbb
mov
adc
jo
jo
dec
outsl
pusha
push
xchg
scas
mov
push
adc
mov
scas
shr
dec
inc
nop
int
mov
iret
add
push
xor
aam
or
push
lock
imul
add
xor
pop
add
shl
int3
and
cs
pusha
sub
mov
jns
ja
mov
adc
add
jmp
in
inc
mov
pusha
jb
fisttps
rorl
add
into
jnp
inc
sahf
or
and
pop
add
test
dec
sbb
repnz
sbb
cmp
loopne
ret
sti
test
scas
pop
jge
add
xchg
mov
mov
mov
inc
hlt
rol
subl
ret
mov
dec
xchg
mov
push
fsub
negl
sbb
or
int
loopne
sar
or
enter
push
je
test
or
loopne
xor
sub
jmp
xor
test
pop
loopne
jae
push
dec
pop
sub
jbe
outsb
xchg
pop
pop
pop
dec
xchg
call
inc
inc
push
sub
scas
cmp
push
or
mov
fwait
sbb
push
sub
pop
add
or
mov
orl
lods
cld
push
sub
xchg
test
adc
sbbl
mov
and
aaa
mov
loopne
mov
loopne
cmp
cmpb
adc
and
mov
loop
push
push
call
pop
sbb
cwtl
sbb
lea
dec
xor
aad
adc
ja
jne
pop
ret
or
mov
push
imul
lock
adc
aam
and
xchg
gs
rorb
and
cmpsb
pop
inc
cmp
xor
pop
xor
sub
lock
lahf
sbb
fdivs
lret
or
mov
mov
jnp
cmp
movsb
push
push
pop
xor
arpl
add
outsl
dec
jmp
cmp
jbe
dec
dec
cmpsb
mov
dec
dec
dec
clc
jne
mov
mov
aaa
jnp
test
cmp
dec
or
sub
lea
cmp
push
push
sub
xor
stos
mov
add
es
adc
mov
sub
mov
jl
jbe
mov
hlt
jns
fdivs
jb
inc
pop
sub
mov
mov
add
add
fidivrl
cmp
jae
subl
pop
jl
fxtract
jne
push
js
clc
shl
fistl
cld
loopne
fnstenv
jns
add
mov
mov
bound
in
add
or
adc
lock
cld
clc
divb
ror
pushl
cmp
add
xor
mov
lods
pusha
sub
rolb
adc
data16
jbe
in
or
xor
rol
xchg
lahf
out
pop
fiadds
add
cmp
push
mov
jmp
hlt
mov
push
mov
aam
sub
or
ds
icebp
push
adc
push
orb
and
adc
pop
fldcw
daa
cwtl
adc
xchg
xor
push
inc
adc
hlt
and
push
adc
test
sbb
stos
or
jmp
lea
mov
mov
mov
xor
cmpsl
adc
push
xchg
add
mov
outsl
sub
rolb
lock
inc
and
push
cmp
adc
pop
test
jmp
adc
dec
loopne
dec
hlt
xchg
call
fdivs
mov
dec
or
clc
inc
cmp
jae
pop
sbb
loop
inc
mov
fidivl
das
push
jmp
into
rorb
in
xchg
pop
push
jmp
das
push
les
lock
add
clc
dec
jnp
fucomi
jo
dec
cli
adc
jo
cmp
pop
es
in
lods
push
cmpsl
or
add
xchg
sbb
popa
add
mov
pop
addb
and
ret
pop
mov
repnz
adc
test
cmpsl
fidivs
push
movzbl
mov
inc
mov
add
fcom
mov
ljmp
not
incb
jo
adc
mov
sbb
sbb
add
push
cli
adc
data16
push
push
mov
push
pusha
in
test
push
sahf
push
aam
mov
or
jle
mov
push
hlt
and
mov
adc
aam
mul
seto
aam
pop
in
mov
enter
pop
sub
mov
jae
fdivrs
pop
lea
cmp
mov
adc
push
push
lret
pop
cmp
test
push
or
ret
std
push
dec
or
lea
mov
mov
mov
jle
stos
decl
xor
xor
mov
fstps
mov
push
or
ret
data16
les
add
in
loop
testl
sbb
adc
call
dec
lcall
cmpsl
or
pop
shll
es
shlb
fists
mov
imul
mov
jl
movsb
xchg
pusha
pop
or
mov
jle
insl
faddl
aad
pop
inc
adcb
pop
jp
push
insb
mov
xor
mov
and
leave
loop
andb
hlt
fst
inc
mov
test
sarl
cmpb
fwait
pop
pop
je
mov
adc
cmpl
loopne
or
mov
xor
hlt
mov
stos
xchg
jmp
enter
in
xor
jo
cmp
inc
sbb
pop
xor
call
mov
sub
cmpsb
push
fsubs
cmp
add
shlb
fiaddl
xchg
gs
incl
inc
adc
push
sti
call
xchg
js
cmp
xchg
cmp
sti
xor
mov
fnstsw
wbinvd
inc
cmp
jae
cmp
je
negl
xor
xchg
cld
cmp
mov
push
sub
sbb
adc
cmpsb
out
jb
jle
mov
or
inc
cmpl
add
pop
add
add
push
mov
xchg
addb
je
xchg
push
sbb
lock
pop
aam
mov
mov
test
loopne
or
sbb
aaa
push
enter
test
sbb
push
add
fbstp
sahf
mov
shll
lock
aam
xor
outsl
dec
enter
add
icebp
mov
xchg
inc
mov
jbe
push
in
sub
add
dec
outsl
jmp
loopne
mov
push
subb
xchg
inc
push
lret
or
loopne
cmpsw
jp
push
xchg
nop
movsb
adc
arpl
lods
push
xor
mov
loopne
pop
inc
push
xchg
pop
cli
mov
xchg
pop
orl
add
fldt
dec
movsb
jecxz
adc
jge
cmp
jne
and
inc
push
jns
and
iret
pop
call
jne
pop
in
jns
in
in
jl
cmp
jmp
push
mov
cmp
mov
sahf
sahf
or
cmp
lock
enter
inc
jl
xor
bound
lret
call
aaa
xor
add
jge
jmp
clc
mov
add
pop
mov
addl
popf
pusha
shll
repz
lds
in
sbb
or
into
jo
addl
sbb
and
repnz
icebp
push
or
xchg
adc
lret
mov
fisttpl
les
popf
rorb
cmp
movl
in
and
sahf
or
sti
cs
dec
fsub
push
pushl
xchg
mov
lods
mov
cltd
inc
push
insl
mov
addl
push
jb
xchg
mov
rolb
xchg
push
mov
mov
sub
sarl
sbb
mov
fisubrl
push
int3
in
filds
jnp
xor
test
mov
pop
popf
xor
push
ret
outsl
adc
fldcw
inc
or
sti
add
jge
mov
movsl
cmp
cmp
jb
sbb
fcomps
dec
add
pop
lea
jbe
mov
xlat
sbb
mov
inc
jmp
jo
cmp
cmp
add
add
movsl
or
mov
xor
sub
cmp
xchg
out
lods
cmpsl
fnstcw
or
je
into
jo
inc
dec
adc
push
lods
outsb
pop
lea
loopne
fsts
das
push
cmpsl
fiadds
lds
jbe
mov
sbb
call
shrl
mov
out
ror
inc
cmpsb
and
imul
popf
xchg
sbb
xchg
pop
nop
jecxz
rclb
cmp
mov
push
cmp
inc
dec
int3
cmp
jae
sub
sub
xchg
loopne
adc
insb
push
cld
mov
cs
adc
ljmp
push
mov
fsts
cmc
xchg
shlb
fucomi
clc
push
inc
mov
adc
aad
cmp
fstpt
add
push
mov
cmp
sti
inc
incb
mov
xor
sub
pop
mov
or
push
das
jmp
fnstsw
jae
xor
jg,pt
push
add
xchg
rcll
idiv
jle
sub
gs
roll
int3
mov
daa
int3
mov
add
add
cld
jb,pn
cmp
cwtl
es
adc
cld
pop
insl
enter
outsl
push
sub
or
add
pop
stos
pop
inc
nop
add
add
xorl
dec
pusha
xor
test
jmp
lds
and
mov
outsl
xor
xchg
je
mov
test
js
sub
fiaddl
cmpl
adc
pop
or
imul
dec
repz
jmp
clc
jge
fimuls
xchg
or
mov
push
add
add
xchg
enter
test
add
dec
push
mov
dec
dec
sub
testl
mov
add
dec
push
pop
sbb
push
jmp
outsl
adc
lret
aam
jle
mov
push
add
nop
inc
mov
mov
xchg
push
call
dec
lret
ret
addb
push
push
and
fadd
push
push
mov
mov
or
adc
cmpb
mov
jb
push
jae
lea
push
sub
fistpl
sub
sbb
popa
mov
stos
jnp
loop
xor
push
dec
loop
ret
pushw
and
enter
or
mov
sbb
adc
roll
rorl
cmpsl
cmc
mov
test
push
sar
add
cmp
fnstenv
inc
jmp
pop
jecxz
aad
or
mov
gs
and
out
test
add
je
push
mov
pop
dec
xchg
out
sbb
sub
mov
movsb
cmpb
mov
dec
fstps
loope
int
xchg
jne
inc
sub
je
add
adc
out
dec
mov
and
add
dec
xor
sahf
shll
in
jb
xchg
lods
mov
or
shll
popf
add
sub
mov
mov
sbb
push
mov
cmp
out
addb
fsubrs
dec
pop
lea
add
in
pop
pop
leave
nop
push
cmpsl
icebp
dec
or
add
nop
call
xchg
add
std
arpl
lds
and
leave
or
or
cmp
lock
add
cwtl
movsl
ror
jbe
dec
in
push
cld
je
mov
push
cmpsb
sbb
adc
je
cli
add
cmpb
push
push
or
or
xor
sbb
cs
addb
xor
adc
cmp
jb
fsubrs
mov
push
fadds
add
data16
mov
add
cmp
sub
outsl
mov
or
add
es
push
add
dec
xor
push
push
stos
into
and
insl
ficoms
add
mov
jmp
mov
adc
shlb
aam
in
fisttpl
adc
ret
daa
subl
inc
pop
add
or
test
ss
fisttpl
xchg
mulb
cmp
or
adc
mov
cs
ljmp
popf
xchg
push
addr16
cmpsb
lods
mov
imul
add
enter
sbb
in
jno
mov
xor
inc
or
insl
sbb
or
jge
add
lds
sub
pop
adc
add
inc
sub
gs
aam
mov
xor
lahf
xor
jl
jecxz
adc
mov
cmc
fisttpl
loop
mov
cmp
stos
add
test
mov
iret
jne
mov
std
mov
or
push
dec
pop
sub
add
pop
dec
testl
mov
mov
fwait
adc
pop
mov
loop
mov
test
pop
cmc
inc
cld
push
mov
es
in
push
mov
int3
dec
adc
inc
pushf
rorb
push
test
in
add
int
pop
sbb
and
in
push
inc
rcrb
in
add
stos
inc
aam
push
inc
or
push
js
dec
sub
movb
jge
movl
stos
test
push
or
push
imul
js
inc
outsb
or
inc
dec
or
add
and
xor
ret
invd
mov
or
sub
sbb
test
aaa
adc
fwait
out
add
jge
xor
or
fucomip
push
jg
or
loopne
leave
jge
mov
adc
or
dec
mov
jb
and
lcall
sub
orl
sahf
pop
or
add
sbb
push
lret
push
lds
rcll
and
js
jle
arpl
mov
add
cmp
test
and
inc
sbb
dec
cmp
dec
sbb
das
movsl
and
int
in
pop
push
inc
test
sbb
in
adc
mov
in
inc
into
pop
inc
loopne
cmpsl
dec
pop
sub
aam
imul
repnz
xorl
add
jbe
cmp
mov
cltd
test
and
movb
push
mov
mov
roll
mov
cmc
add
adc
into
call
outsb
cmp
mov
sub
adc
nop
movsl
rclb
lock
repnz
cmp
xchg
or
lret
and
or
test
imul
test
adc
push
mov
fs
and
inc
push
push
mov
inc
add
dec
aam
adc
push
dec
scas
add
xor
dec
jns
or
mov
dec
add
pop
mov
cs
xchg
pop
sbb
xchg
out
js
mov
jle
adc
jns
clc
inc
jg
jmp
lea
cmp
add
xorb
imulb
cmpsb
or
imul
and
add
cmp
sub
ss
push
popa
add
std
adc
and
fcmovnbe
cmp
jp
mov
int
cmpsl
add
jge
sub
add
cli
sbb
sbb
aam
add
xlat
aam
fsubs
test
mov
or
jle
mov
orl
ljmp
bound
inc
mov
test
mov
xchg
adc
inc
rorb
inc
sbb
jb
pusha
and
dec
cltd
das
push
lea
sbb
in
sub
push
enter
test
push
nop
cmp
outsl
jge
or
xchg
add
in
fists
add
push
push
fmulp
sbb
popa
and
andb
xchg
cmp
ret
dec
lods
cltd
cmc
xor
dec
and
loopne
cmp
rolb
sahf
fwait
inc
jb
or
mov
sbb
inc
test
ret
mov
mov
mov
dec
popa
das
push
and
and
push
cltd
mov
shld
call
add
lret
adc
inc
insb
les
in
lock
dec
sti
fmuls
add
imul
bound
call
inc
push
das
and
jecxz
xor
and
and
je
hlt
pop
dec
call
dec
push
stc
or
and
xchg
and
lret
inc
mov
aam
sahf
mov
into
or
mov
adc
lret
cmp
fisubrl
lea
cmp
or
je
sbb
scas
ljmpw
or
dec
pop
mov
test
lock
sbb
sub
popa
ss
dec
dec
push
cmp
fisttpll
lock
xchg
push
aad
sahf
orps
sbb
dec
cli
adc
cmp
mov
inc
mov
lret
add
test
out
addr16
pop
add
cmpsb
push
call
bound
sub
lea
mov
ret
add
shr
inc
fiaddl
push
out
add
push
xor
mov
aaa
mov
cltd
in
pushf
sub
lcall
push
and
stos
and
and
jmp
fisubrl
mov
addb
xor
or
adc
cmp
push
daa
and
mov
movsb
rcll
push
push
fidivl
lret
jo
pop
shlb
test
aas
cmp
pop
lods
push
out
mov
fsts
ja
xchg
add
mov
dec
mov
lea
sub
pop
or
add
ficompl
call
scas
xchg
jo
pushf
lods
test
cmp
lods
cltd
ret
xchg
fcompl
or
pop
mov
jns
shrb
add
push
push
test
fmuls
arpl
add
movb
pop
in
cltd
rcr
sbb
mul
add
enter
inc
ret
das
dec
lea
inc
rcrb
and
movsl
dec
lds
fmuls
shrl
lods
lock
mov
inc
mov
xchg
and
or
test
add
xchg
mov
add
cmp
andl
push
cmpsl
jg
or
cmp
popa
shrl
sub
push
js
and
mov
cwtl
mov
ret
push
lea
mov
mov
imul
add
cmpsl
jecxz
xchg
aas
divb
in
ret
ret
or
repz
test
fs
push
pop
rcll
js
dec
shrb
inc
bound
je
xchg
roll
mov
js
push
movsl
inc
xchg
fists
push
adc
call
jge
ljmp
in
mov
dec
jp
cmpb
cmpsl
cli
dec
sarb
fldenv
movsl
xor
mov
add
cmp
out
fs
mov
adc
ret
cmpsb
mov
ds
mov
sbb
lock
in
popf
and
shlb
mov
mov
push
enter
push
mov
push
or
addr16
fimuls
or
ret
cmpl
test
mov
das
out
xor
mov
fmul
mov
dec
jp
cmp
bound
cmp
aas
jne
sbb
loopne
or
or
add
or
dec
cltd
hlt
xchg
or
outsl
jb
mov
or
xlat
testb
push
dec
mov
xchg
paddb
and
mul
adc
fistpl
daa
push
jmp
and
adc
dec
mov
bound
sbb
sarb
js
xchg
mov
mov
cs
push
dec
xchg
add
repnz
dec
lcall
stos
add
add
mov
sbb
cmp
mov
leave
add
sbb
mov
subb
lcall
xchg
xchg
xor
adc
fs
mov
insb
mov
sbbb
ret
xchg
js
mov
push
cmpb
cmp
jmp
jo
jge
adc
rcll
and
add
subb
in
repnz
ret
xor
fneni(8087
roll
bound
test
idivb
dec
mov
aad
insl
shll
ja
and
cs
add
mov
outsb
cmpsb
repz
inc
dec
std
jg
es
add
cmp
jne
adc
cmp
jb
mov
ss
pop
inc
shrb
and
add
popa
pusha
cmp
jo
cmp
dec
ret
jbe
push
push
mov
add
insb
es
add
rolb
rcrb
hlt
mov
jg
add
jg
mov
mov
push
inc
daa
or
cmp
cs
loop
shlb
outsb
add
sbb
mov
xchg
dec
add
inc
add
add
jmp
daa
test
pop
mov
pop
jo
pop
rolb
loope
add
data16
or
imul
sbb
mov
out
ret
jbe
ret
pusha
testb
aaa
ret
mov
call
movsb
xor
cmp
and
popa
test
fbstp
aam
sbb
and
dec
or
leave
push
test
test
hlt
cmpb
rol
jmp
jle
frstor
scas
popf
or
add
iret
cmp
mov
push
repz
rcll
or
lea
arpl
mov
mov
aaa
push
inc
jns
push
shlb
add
aaa
or
add
andb
rorb
mov
fisttpll
cmpb
push
push
addr16
and
mov
test
fdivrl
shll
sarl
jae
rorb
popf
push
push
adcb
cld
ja
mov
mov
cwtl
mov
add
dec
push
stc
add
cs
mov
pop
mov
rclb
daa
insb
in
test
jbe
jb
test
dec
leavew
sbb
and
fistl
inc
rcrb
mov
xor
addr16
dec
add
testl
popf
push
push
mov
xchg
push
push
jnp
cld
xor
push
mov
test
cwtl
sub
cwtl
add
mov
test
fs
push
in
fcmovnb
pop
sbb
fdivl
jo
mov
add
mov
shld
cwtl
xchg
aaa
push
int
loopne
push
fsub
int3
aas
dec
cmp
mov
push
inc
js
xchg
xor
jns
in
adc
inc
mov
pop
mov
out
lcall
pop
dec
push
in
loopne
push
jno
and
and
cs
repnz
sti
sub
cs
jb
push
dec
jno
sub
test
fisubrl
inc
in
mov
fsub
push
add
jae
mov
data16
xor
sub
add
pop
flds
jb
rcrl
in
cld
xchg
lcall
cmp
mov
fwait
or
rolb
shrl
push
fildll
fidivrl
fcoms
pusha
repnz
or
xchg
fildl
add
push
dec
sub
sbb
jb
cmp
lret
movsb
pop
xor
xor
daa
xchg
xchg
or
or
test
or
or
dec
push
fs
dec
in
adc
push
pop
stc
hlt
sahf
je
xor
adc
movsl
mov
in
popa
sub
jecxz
int3
nop
dec
cs
incb
mov
mov
or
sahf
fsubr
sub
fsubs
push
movl
push
inc
pusha
add
pop
mov
adc
xor
or
push
add
add
es
push
sub
push
test
mov
into
mov
xor
mov
sbb
nop
add
ror
enter
add
push
pop
pop
adc
test
loop
push
xor
sbb
xorb
dec
jnp
fs
enter
inc
inc
cmp
xchg
cmp
xchg
enter
sbb
enter
or
xchg
or
out
loop
cs
clc
add
fmull
mov
push
adc
push
dec
into
dec
cld
push
icebp
lret
xchg
add
inc
or
dec
push
or
cld
mov
call
lods
add
pop
loopne
and
add
ljmp
adc
cmc
and
enter
push
jo
add
dec
jne
xchg
push
mov
es
cld
loopne
loopne
pop
sub
les
add
insl
lock
and
inc
add
and
adc
shlb
incb
addr16
lods
loope
sbb
imul
xor
xchg
and
xchg
or
in
inc
sbb
aaa
imul
sbb
loopne
movsb
lock
ja
out
push
pushl
pop
insb
or
sbb
mov
xor
sub
loope
push
mov
sbb
nop
jge
add
dec
orl
jmp
add
inc
push
jmp
lea
xchg
adc
jl
xchg
rcrl
pop
jo
inc
loop
andb
xchg
add
shr
scas
sbb
inc
inc
and
and
mov
push
sbb
pop
add
daa
or
add
stos
and
jns
push
inc
sub
fimuls
addr16
mov
or
gs
push
add
jb
xchg
xchg
scas
aaa
stos
xchg
repz
mov
je
push
push
or
sbb
push
lods
push
leave
jbe
add
add
jmp
cmp
or
xchg
cmp
std
jno
scas
aad
mov
jne
lea
add
daa
or
lods
ss
mov
add
out
xchg
test
clc
ss
ljmp
xchg
jp
add
inc
push
add
sub
mov
inc
cli
sahf
sbb
pop
lock
loope
pop
icebp
and
lock
orb
dec
movsb
xchg
inc
cmp
pop
stos
push
push
movsl
aad
cld
aas
fcoml
and
add
lds
add
and
mov
sbb
cltd
cltd
pop
sbb
sub
or
icebp
or
out
push
cld
cld
and
shl
clc
sbb
or
popa
push
shll
dec
js
inc
sbb
cwtl
in
lds
cmp
jge
loop
icebp
std
outsb
jae
in
scas
mov
xor
test
pop
movsl
roll
insb
leave
xchg
sub
das
cli
popf
add
das
add
lods
mov
push
outsl
popa
popa
pusha
mov
jp
testl
jp
in
add
add
rclb
hlt
cs
mov
mov
jo
ret
pusha
adcb
xor
sub
adc
push
je
inc
call
jge
jae
push
imul
jmp
mov
add
test
push
repnz
mov
cs
mov
pop
add
xor
and
les
sub
inc
loopne
mov
repz
mov
fucomp
cmp
jae
push
insb
mov
shlb
les
inc
stos
xchg
popa
sbb
lahf
das
adc
pop
inc
test
sub
inc
mov
fildll
test
and
xchg
and
cmc
sbb
scas
jnp
out
or
fs
inc
dec
mov
or
pop
lea
inc
add
inc
stos
or
inc
adc
mov
imul
ret
adc
xor
popf
sub
dec
lea
mov
test
and
fcomp
ret
jmp
pop
shrb
adc
add
cmpsl
dec
and
sub
and
lea
ja
repz
clc
dec
add
xchg
out
sub
adc
clc
xor
out
and
xor
das
and
mov
adc
push
add
or
mov
or
mov
shl
jo
mov
pop
adc
jne
ja
ljmp
ret
mov
addl
dec
push
push
mov
cmpsb
lods
sub
jmp
lock
push
dec
rolb
clc
and
or
pusha
push
repz
imul
adc
push
push
mov
mov
rolb
pop
xor
lods
gs
iret
jnp
dec
cmp
add
xor
movsb
aas
js
xor
xchg
xor
or
xchg
nop
cmp
mov
adc
cmpl
pushl
iret
xchg
into
push
adc
daa
nop
push
mov
loope
adc
push
loop
adc
adc
xor
or
sub
adc
orb
lock
mov
push
or
inc
dec
push
mov
mov
pop
fisttps
ret
rcll
pusha
push
fcomp
cmp
sbb
mov
inc
and
fsubs
sbb
outsb
add
adc
aaa
sti
fdivrl
or
lock
insb
shrb
scas
into
dec
pop
push
xorb
inc
and
movsb
mov
inc
push
inc
out
mov
dec
outsl
mov
and
decl
loop
stc
inc
outsb
xchg
push
or
mov
add
pop
and
and
movsb
cmc
xor
dec
mov
sbb
pop
mov
xor
cmpsl
xorl
pop
adcl
adc
push
test
mov
fsubrl
push
cmp
fiadds
fmuls
push
jp
inc
fdiv
outsl
cmp
movsb
mov
icebp
add
add
loopne
mov
nop
addb
xlat
add
cmp
lods
sbb
nop
stos
mov
add
inc
inc
leave
inc
aam
mov
cld
dec
jge
repnz
ljmp
lock
lret
xchg
jmp
or
pop
add
xchg
mov
fs
andps
hlt
mov
push
and
xchg
fnstcw
ret
shr
xor
jmp
repnz
hlt
inc
ja
arpl
push
dec
xchg
mov
push
in
in
push
adc
mov
jo
or
add
cmp
leave
mov
pop
push
push
bound
js
std
jnp
out
sbb
mov
test
and
rolb
or
loope
test
test
sub
adc
into
jge
mov
fsubs
mov
in
add
adc
mov
xchg
roll
or
lock
mov
cld
pop
cmp
add
rol
mov
jle
push
xchg
push
push
add
jbe
xor
add
add
and
jne
rclb
xorl
sub
cs
xchg
pop
mov
sbbl
mov
add
add
orl
sbb
pusha
sbb
jae
ret
sbb
pop
jl
xchg
cmp
push
leave
fsubs
fsubrs
inc
sbb
jnp
and
xor
es
repz
repnz
push
icebp
mov
pop
enter
fs
inc
sub
sub
push
dec
sahf
iret
sbb
test
sub
iret
lds
and
andl
test
push
or
cmp
jns
pop
xor
dec
cmpsl
jbe
mov
shld
push
out
jecxz
push
and
fisubs
fiaddl
adc
stc
mov
shlb
push
rclb
mov
mov
xlat
repz
add
cmp
mov
stc
out
cmp
dec
cmp
sub
insb
or
cmp
popf
fistpl
lea
mov
adc
aas
mov
inc
jbe
mov
cmp
and
imul
xor
daa
jmp
inc
into
add
inc
fs
psrad
lock
es
add
sub
incb
or
sub
mov
mov
popa
add
imul
gs
jmp
shlb
push
and
pop
cmp
jmp
mov
lcall
mov
mov
sbb
push
cmp
and
xchg
popf
xlat
or
addb
daa
mov
inc
ss
aaa
out
add
stc
or
mov
hlt
inc
into
adc
jge,pn
push
jecxz
push
cmpsl
test
mov
add
fiaddl
push
cmp
mov
mov
aam
push
add
xchg
aas
mov
stos
add
mov
lahf
repz
adc
or
jmp
out
mov
add
adc
lock
xor
dec
push
orb
mov
sub
cmp
xor
adc
data16
and
outsl
lahf
in
fs
pusha
mov
dec
lock
mov
addb
fdivr
and
inc
cmp
pop
inc
outsl
and
lea
inc
daa
daa
int
push
xor
popa
or
icebp
sub
push
orl
jns
jp
sbb
and
sbb
bound
or
mov
aas
add
mov
cs
fs
mov
ret
sbb
shr
add
add
mov
lcall
xor
mov
xor
ja
push
shr
inc
aaa
lahf
mov
and
sub
jg
xor
xor
inc
or
inc
mov
loop
sbb
mov
jb
cli
add
inc
mov
sbb
seta
sub
and
sub
fcoml
push
mov
cmp
and
sbb
arpl
pop
xchg
test
es
movsl
mov
or
push
xchg
lret
leave
into
fs
or
mov
or
inc
mov
and
xor
les
mov
je
mov
jbe
rcll
inc
or
and
dec
inc
jl
mov
js
mov
cld
into
and
mov
xchg
adcb
fwait
push
add
cwtl
subl
dec
sub
adc
adc
add
cmpsb
imul
dec
imul
add
lret
fs
sbb
pushf
or
pop
je
adc
in
popa
outsl
jbe
test
aaa
fs
and
outsb
mov
fwait
and
and
sbb
jb
push
sub
inc
movb
dec
xor
nop
xchg
xor
cmp
inc
aaa
xchg
jmp
imul
scas
pop
rcll
ret
push
mov
mov
pop
xor
cmp
lcall
adc
add
mov
inc
in
jo
inc
rorb
and
add
lret
mov
js
sub
sti
cwtl
popa
leave
mov
sbbb
xor
in
je
fs
mov
enter
xor
xchg
imulb
cmp
mov
sbb
arpl
or
pop
and
adc
movups
test
jae
jne
push
fildll
shrl
pusha
ret
in
xor
dec
outsb
xchg
jb
mov
push
test
daa
xor
dec
repz
shlb
leave
mov
outsb
jnp
mov
push
ret
movsb
jne
lea
ljmp
jnp
lock
push
pop
movb
and
adc
mov
test
jge
dec
xchg
mov
test
shl
jne
pop
andb
sbb
imul
lcall
adc
pusha
push
int3
push
sbb
jae
cmp
or
fisubrs
shll
enter
xchg
mov
cmp
xor
cmp
loopne
hlt
dec
fwait
mov
shlb
add
inc
sbb
mov
faddl
jne
push
mov
or
xchg
inc
iret
hlt
in
push
adc
daa
cmp
mov
lock
outsb
mov
stc
into
cmpb
fcoml
ficoms
mov
popa
jo
xchg
mov
adc
cmpl
pop
cmpsl
inc
imul
imul
xchg
jne
mov
scas
jge
and
gs
cmp
iret
xor
add
jecxz
cwtl
inc
ss
sub
test
push
jmp
add
mov
repz
mov
insb
je
dec
rolb
mov
daa
and
xor
lret
pop
stos
outsb
popf
or
xor
sbb
out
push
psubsw
or
decl
xchg
jp
lods
outsb
xchg
enter
push
mov
pop
fwait
push
mov
pushf
push
or
push
mov
dec
add
out
mov
insb
clc
lds
bound
jle
push
inc
pop
cwtl
or
add
or
pop
jne
or
adc
sub
and
jne
cmpl
or
push
pushl
add
push
lods
test
or
mov
push
mov
sbb
mov
jl
and
lds
aas
aaa
and
lds
js
or
adc
add
repnz
inc
inc
pop
icebp
add
pop
adc
or
inc
mov
push
push
sbb
mov
adc
fisubs
cmp
pop
inc
sti
mov
testl
in
push
xchg
cmc
dec
cwtl
fiadds
or
adc
das
pushf
push
movsb
dec
cmp
cs
test
dec
mov
testb
je
sbbb
or
mov
or
cld
inc
fmuls
addb
adc
sub
mov
popa
sub
sbb
test
or
popa
adc
or
xor
add
sahf
sub
pop
hlt
movsb
adc
sahf
pop
pop
or
mov
std
int3
sbb
in
sbb
pop
or
jno
or
fsubr
mov
cmp
testl
enter
sbb
frstor
xor
push
cmp
inc
call
and
push
lods
push
xchg
call
in
and
inc
sub
mov
lods
xor
sub
cmp
hlt
outsb
xor
or
shr
adc
shrb
mov
xchg
dec
test
pop
hlt
adc
mov
or
ret
fs
outsl
inc
stc
jnp
insb
ss
dec
pop
dec
add
fimull
xor
mov
pop
cmp
push
stc
imul
pop
lea
and
insl
mov
sub
and
cld
xchg
lret
movsb
sbb
adc
sbb
pop
xchg
popa
cmpl
and
les
inc
mov
mov
adc
inc
into
psrld
sub
inc
out
pop
cmpb
inc
dec
and
test
addb
mull
or
xchg
fcoms
sbb
lock
cmpb
lcall
pushf
adc
nop
inc
dec
sub
or
dec
jmp
push
mov
loope
imul
and
push
or
cltd
pusha
imul
cmpsb
inc
lds
out
leave
fistl
cmp
sbb
filds
sbb
sbb
pop
add
adc
xor
js
sub
ss
mov
sub
sub
int3
add
inc
pop
in
addl
nop
inc
js
inc
std
test
test
xchg
cltd
push
jl
push
jp
dec
inc
jns
mov
mov
xchg
inc
ficoms
adc
xchg
sbb
xor
sub
les
and
inc
sub
adc
or
call
inc
sub
push
push
lret
or
and
lock
pop
inc
fsubp
in
sbb
mov
or
imul
out
mov
push
lcall
sbb
push
cmpsl
push
push
pop
sbb
add
mov
pop
sbb
sbb
sbb
pop
inc
mov
data16
clc
sub
stos
mov
sbb
sbb
stos
cmp
add
adc
sbb
rcrb
mov
sub
jns
sbb
dec
lods
andb
add
test
push
fsubl
xchg
xor
lea
test
pop
pop
lea
iret
mov
push
mov
movb
sbb
cmc
add
pusha
dec
sbb
lods
and
nop
jbe
adc
insl
and
rcl
rol
mov
dec
inc
addb
faddl
call
or
jae
sub
push
ja
sbb
push
push
stos
sub
jl
lock
lock
js
ss
loop
and
push
pop
out
sub
jo
adc
add
pop
test
add
fwait
xchg
in
or
pop
sub
jl
nop
add
add
sub
adc
xor
loope
fmulp
adc
sbb
sbb
movsb
mov
cmp
or
dec
push
inc
mov
mov
xor
mov
or
or
cmpsl
jae
xor
movsl
mov
outsb
lahf
out
js
lret
stos
push
insl
sbb
sub
ss
adc
xchg
lret
push
test
in
ss
pop
adc
fildll
pop
in
adc
or
adc
lcall
cmp
pop
stos
outsb
sub
push
arpl
popf
mov
and
test
push
popa
faddl
cmpl
add
or
xor
adc
or
jp
rorb
in
xchg
pop
enter
icebp
mov
shll
dec
ja
xchg
rclb
sub
in
popf
push
jns
adc
int3
cltd
insl
repnz
jae
adc
adc
pusha
inc
lock
fstl
inc
loope
mov
adc
push
jns
rclb
insl
enter
repnz
mov
mov
sbb
sbb
mov
sbb
sbb
icebp
mov
js
pop
shll
sbb
sub
out
sbb
pushf
or
sub
fwait
xchg
sbb
popf
divl
pushl
or
mov
jbe
cwtl
adc
subb
mov
insb
add
mov
push
jae
add
pop
ret
fs
pop
push
or
cmc
and
xor
and
xor
es
dec
insb
mov
jb
xchg
jo
jge
push
stos
add
cmp
cmp
or
cmp
add
bound
sub
jnp
stos
push
mov
add
pop
mov
loop
cmp
rorb
fsubrl
dec
push
mov
cld
adc
pop
dec
shrl
aas
outsl
pop
jmp
sbbb
adc
sbb
ja
push
inc
enter
cmp
inc
fistl
lea
andl
jmp
and
jbe
mov
sbb
xor
or
pop
push
pop
sbb
cmp
mov
es
cmp
shll
pop
decb
inc
push
xor
stos
les
inc
popf
push
or
adc
cmp
cmp
sub
push
and
inc
popa
shrb
fyl2xp1
adc
jo
and
movsb
mov
mov
mov
pop
sub
in
pop
sub
push
loope
mov
push
sub
sub
sbb
repz
std
mov
aas
sub
cmp
in
aad
mov
mov
jns
dec
jp
jne
sbb
mov
add
jg
xor
cmp
adc
jns
imul
xor
sub
adc
nop
sarb
dec
lea
das
xlat
sbb
pop
sub
sub
lea
fldenv
and
fs
sub
jbe
fsubrs
nop
cmpl
xor
popa
mov
pop
int3
mov
or
aam
out
xor
push
inc
addb
xor
pop
jp
and
shlb
dec
test
dec
test
sbb
mov
movsl
xor
cmpsl
lods
test
mov
fldl
mov
xor
jmp
sub
and
dec
clc
jl
mov
push
adc
and
mov
push
push
jo
push
or
popf
mov
sub
cmp
shrl
nop
push
aaa
sbb
mov
out
pop
adc
push
inc
sub
pop
cmp
xchg
pop
arpl
sub
jne
cmp
xor
lret
cmp
xor
mov
cmp
mov
and
ds
daa
pop
jb
scas
sbb
aas
xchg
dec
enter
dec
sbbb
outsl
or
sub
inc
pusha
jecxz
mov
repnz
rcrl
push
add
dec
leave
mov
sbb
jns
and
fcmovne
dec
lret
push
mov
cmp
cmpsl
fcoms
mov
les
dec
sahf
or
add
or
mov
xchg
adc
stos
push
ret
cmpsl
rep
outsl
leave
dec
sub
iret
cmp
adc
adc
xlat
xor
sbb
cwtl
sbb
push
sbb
add
cmp
lret
adc
and
xor
jmp
test
or
mov
and
std
mov
scas
jbe
cmp
fnsave
add
jae
jg
jl
js
jb
cmpsl
or
fstl
jge
jo
jo
aaa
sbb
push
and
mov
aad
dec
jns,pn
pop
inc
in
sub
movsl
cs
mov
or
lahf
jmp
adc
test
jnp
leave
and
inc
imull
xor
int
pop
mov
add
nop
add
into
mov
jnp
inc
mov
inc
push
add
jo
mov
add
repz
jne
xchg
lods
test
fiaddl
gs
das
rdpmc
icebp
xor
mov
mov
stos
pushl
push
dec
mov
inc
inc
push
push
xor
push
ljmp
xor
cmc
pop
adc
jb
loopne
roll
ret
mov
test
jne
and
roll
jmp
fs
adcl
push
add
push
pushl
aaa
pushl
aam
or
call
lds
dec
mov
hlt
push
jmp
mov
add
test
aam
xchg
mov
mov
jmp
test
in
add
call
cmpl
adc
adc
push
lret
and
jne
pop
adc
inc
mov
sarb
cmp
and
or
cs
or
pop
adc
pop
inc
or
or
pop
sub
sbb
cmp
lock
or
repnz
push
xchg
xchg
push
dec
or
sub
leave
scas
notl
pop
add
add
push
jae
add
xor
ud0
jbe
push
push
pushl
loopne
mov
rcll
out
push
add
bound
mov
pop
mov
lods
push
sub
imul
leave
not
nop
and
mov
ret
and
movsl
adc
pushf
mov
adc
roll
adc
inc
dec
shll
push
sub
dec
imul
movsb
test
lahf
xchg
ja
shr
adc
mov
inc
iret
sbbb
pop
sbb
decb
jns
loopne
sbb
sub
sbbb
inc
push
nop
call
lods
pop
lret
sbbb
inc
dec
insl
subl
sbb
sahf
out
add
mov
sub
nop
sub
outsl
push
mov
add
mov
pop
mov
cmp
incl
movsb
mov
fsubr
or
xchg
push
sbb
gs
adcb
pop
ret
lret
imul
inc
sub
push
xchg
cmp
rcll
pop
xlat
xchg
sub
movsb
les
in
inc
sub
test
mov
pop
movsl
ja
inc
in
or
divl
jmp
add
lods
push
movsl
paddw
and
inc
pop
inc
sub
sub
inc
jge
shll
push
adc
nop
cmp
add
and
rol
inc
xor
push
xor
nop
sub
xor
jo
lds
xor
xor
xor
adc
ss
movsb
pop
pop
sub
aaa
cmpsb
cmp
sbb
ss
fwait
loope
pop
call
ret
cmp
pop
add
cmp
mov
leave
fdivrs
sub
jecxz
les
add
add
jae
push
lea
cmp
inc
dec
jnp
jmp
nop
sbbl
cmp
xlat
or
adc
dec
and
imul
mov
out
add
insl
xor
dec
daa
cmc
repnz
dec
push
push
je
test
adc
add
mov
pusha
dec
cltd
movsb
jmp
ds
sub
jnp
mov
and
push
lods
aaa
test
or
jns
or
enter
cmp
rclb
ret
inc
adcl
jne
lea
test
fidivl
das
lret
xchg
leave
sub
xchg
push
sahf
outsl
sarl
mov
or
and
inc
and
data16
sub
add
jbe
sbb
test
fiadds
inc
fidivl
pop
xlat
mov
inc
cmp
jb
dec
andl
lock
jo
mov
pop
outsb
adc
enter
sub
push
mov
jecxz
pop
out
push
es
dec
loope
dec
sub
xor
mov
sbb
jnp
xor
rcrl
xchg
pop
mov
adcl
fiaddl
cmp
leave
or
lods
dec
out
dec
das
xor
into
addr16
sbb
or
inc
pop
mov
push
aas
jae
pop
push
fs
test
xchg
fwait
inc
lds
mov
inc
es
push
shll
or
lds
mov
js
jg
and
jle
jb
push
lret
push
movsw
jo
push
pop
movsl
sub
int
sbb
sub
in
iret
je
jns
jle
sub
ja
in
inc
insl
ljmp
push
or
push
mov
sub
push
cs
bound
mov
adc
in
outsb
rorl
jp
dec
push
push
mov
out
xorl
icebp
das
push
add
cld
rorl
mov
and
nop
add
push
lock
jmp
sbb
push
js
dec
xor
std
cwtl
in
icebp
push
lea
arpl
stc
aad
jg
loope
int3
int
in
test
aad
pop
test
call
mov
dec
push
xchg
mov
add
shlb
xchg
je
jno
test
jbe
push
push
inc
push
adc
sti
and
inc
stos
cs
aam
loopne
sub
cmpl
jne
sbbb
testb
jle
dec
cmpsl
lea
ds
cmp
jae
outsb
sti
cmp
clc
push
mov
inc
push
call
cmpb
incb
add
pop
test
jl
hlt
test
pop
and
pop
add
jmp
mov
push
fsubl
dec
push
lods
cmp
cmp
add
push
pop
mov
fucomp
dec
sbb
icebp
xchg
in
stos
jae
add
mov
add
movsb
shlb
fidivl
and
or
lock
pushf
pop
or
sbb
pop
inc
roll
push
out
push
jmp
adc
add
jns
and
inc
je
mov
cmp
push
dec
pusha
sbb
push
add
jmp
out
and
outsl
add
sbb
dec
inc
adc
js
cmp
xor
cltd
cmpsb
push
push
dec
ljmp
mov
sub
jl
pusha
or
je
and
sub
push
push
pop
mov
enter
data16
xorb
push
adcl
icebp
addl
push
cmp
sar
or
je
sub
xor
xor
push
add
inc
jo
loopne
and
in
rcll
push
stos
jae
and
xchg
xchg
shl
scas
jle
cmp
lds
popf
mov
or
lock
inc
xchg
or
es
xor
in
pop
add
nop
dec
push
jecxz
shlb
or
sub
bound
sarb
test
mov
cltd
test
and
mov
ret
lds
jb
cli
push
es
je
xlat
dec
or
add
jmp
clts
fisubrs
adc
fdivl
insb
aad
ljmp
insb
loop
addb
and
ficoml
xor
and
add
js
xchg
sub
sub
std
dec
cmp
mov
add
cmp
popa
in
in
inc
cmc
mov
repnz
push
rcll
jae
sbb
xor
pop
sub
add
cmpsb
add
jo
pop
addr16
sbb
xor
mov
sbb
add
sbb
adc
and
sub
lock
or
cmp
loope
push
test
popa
mov
or
jnp
add
aas
xor
cmp
out
mov
xlat
xchg
push
gs
insb
inc
nop
xchg
xchg
imul
add
jo
sbb
mov
sarl
cmpb
xor
cmp
add
movl
imul
dec
xlat
mov
dec
insb
sub
push
sbb
sti
nop
cmpsb
insb
jo
lea
cmc
add
jecxz
popf
mov
inc
insb
dec
mov
dec
leave
dec
sub
leave
and
dec
push
or
pop
add
sub
mov
add
fmull
dec
das
jbe
andl
in
adc
sbb
xchg
sbb
mov
jl
mov
dec
scas
enter
dec
xchg
test
mov
xor
hlt
and
mov
and
dec
scas
lea
loope
push
mov
ljmp
add
xchg
xchg
adcl
push
jmp
shll
mov
movsb
adc
add
fadds
mov
pop
jo
adc
mov
push
daa
add
pop
add
movsl
mov
and
iret
out
and
sbb
add
insl
mov
dec
add
mov
or
test
fisttps
xor
inc
and
movsb
push
sbb
call
call
xchg
jp
mov
or
ss
pushf
jle
in
dec
pop
push
pop
push
ds
dec
in
cmp
adc
mov
pop
addr16
cmp
jne
or
mov
mov
cmp
je
iret
sti
pushl
or
je
push
inc
cmp
mov
nop
xor
imul
shrb
stos
mov
cmp
push
mov
dec
mov
sub
lock
dec
jns
xchg
je
daa
cmp
addb
mov
pop
sbb
pop
sbbl
or
fildl
ja
enter
repnz
dec
fwait
je
test
mov
cmp
add
adc
dec
pusha
nop
xchg
int3
adc
inc
mov
ror
adc
xor
push
xchg
push
xchg
xchg
add
lea
pop
icebp
fs
outsl
push
icebp
add
cs
imul
test
xchg
xor
add
pushf
mov
xchg
mov
pushf
int3
cmp
jo
add
pop
push
mov
or
lret
shl
mov
orl
sbb
movsb
xchg
pop
cwtl
mov
push
hlt
sbb
push
pushf
cmp
jb
stos
dec
cld
hlt
les
push
xor
mov
rolb
and
mov
jmp
or
imul
and
inc
add
cmpl
clc
and
cs
and
jns
or
xchg
fcmovnu
int
dec
xchg
add
enter
sbb
add
sbb
mov
pop
and
or
xchg
clc
mov
pop
aam
mull
sbbl
push
aaa
push
leave
and
xchg
mov
pop
or
rcll
lea
pusha
or
sub
pop
xchg
push
or
nop
or
xchg
xchg
fsubrl
sub
and
leave
sub
sub
cs
hlt
das
xchg
xchg
sbb
mov
inc
mov
add
mov
inc
cmp
mov
and
inc
pop
insb
lods
xor
jle
je
add
pop
jne
hlt
movsb
out
mov
rclb
dec
pop
mov
test
lock
movb
inc
xchg
popa
addl
xor
in
pushl
loopne
pop
aam
pop
or
fwait
mov
push
mov
pop
mov
sub
mov
mov
xchg
sbb
adc
push
dec
ret
push
lea
xor
jg
ficoms
xor
sbb
je
push
push
adc
stc
ljmp
loop
adc
int
add
mov
add
mov
xchg
xchg
adc
jo
and
sbb
adc
jbe
ss
add
sbb
inc
xor
adc
cs
mov
mov
cmpsb
push
jne
test
test
inc
ret
lret
mov
fnstenv
xor
and
cmp
movsl
inc
dec
push
adc
xor
jne
and
jle
sub
jne
or
mov
add
mov
sarb
mov
imul
icebp
push
ret
in
jecxz
dec
push
pop
push
andl
adc
xchg
outsb
in
jae
mov
or
sub
je
mov
call
les
inc
dec
add
lret
xchg
cmpsl
aam
loopne
in
mov
adc
mov
lea
movsl
add
add
jo
push
adc
icebp
xchg
ja
or
xchg
push
mov
push
mov
jne
inc
loopne
gs
mov
sub
sub
fs
sbb
sar
movsb
push
ljmp
icebp
jo
pop
lea
or
pop
imul
std
pop
or
pop
fldl
push
lahf
and
pop
cli
ja
repnz
cmp
jne
add
test
xchg
test
add
or
call
mov
mov
inc
inc
movl
xchg
das
ret
mov
mov
dec
mov
push
call
into
ret
pusha
mov
jle
cmp
jle
pushl
jnp
xor
mov
adc
or
or
lret
or
pop
lcall
leave
adc
add
add
push
lds
mov
notl
mov
jecxz
add
inc
dec
add
mov
adcb
sbb
test
add
clc
or
jbe
mov
aad
adc
jno
and
jns
je
or
mov
xor
insb
xchg
xchg
ds
pop
cmp
adc
adcb
cmp
inc
jne
pop
add
jb
or
cmpsl
mov
add
aad
push
shl
sub
inc
test
lods
repz
and
enter
sub
addb
inc
sub
sub
and
sbb
lahf
mov
mov
push
mov
test
sub
add
cmp
adc
xor
mov
movsb
sahf
in
mov
js
dec
jb
inc
cmc
xlat
or
adc
jne
orb
or
in
lea
adc
rolb
pop
es
mov
mov
les
insb
xorb
cmpsb
fwait
nop
jbe
fistps
add
test
ret
push
sbb
inc
mov
xor
sub
dec
rclb
jnp
lea
cmpsb
sub
dec
pushf
mov
mov
inc
inc
pusha
pusha
jo
pop
xor
push
sbb
and
sbb
push
cli
sbb
sub
mov
jge
dec
push
incl
or
shrl
shlb
jmp
push
add
cmp
push
push
and
leave
nop
lret
rcll
shrl
call
rolb
cli
add
or
xor
sbb
push
sbb
je
inc
rorb
inc
dec
push
cmpsb
inc
ljmp
ret
add
cwtl
or
pop
or
lcall
mov
or
gs
push
dec
jl
push
xor
mov
aas
xchg
and
into
test
sub
dec
mov
paddq
das
add
adc
ret
call
adc
lahf
inc
ret
out
mov
add
adc
popf
adc
aaa
stc
sub
add
xchg
push
aaa
movzbl
cli
loopne
cmp
push
mov
rclb
or
adcb
dec
xor
fcmove
pop
sbb
pop
dec
mov
xchg
adc
or
adc
aaa
jne
gs
aas
sahf
pop
sbb
push
xchg
add
sub
add
cmpsl
mov
imul
mov
adcl
mov
mov
xorl
push
movzwl
es
fmull
push
jo
sbb
mov
pop
mov
setl
mov
push
dec
inc
sbb
jae
add
sbb
add
mov
pop
sbb
test
pop
jo
lods
popa
stos
ret
test
sbb
cmp
or
daa
cmp
sub
arpl
sub
push
push
fstl
and
popa
xchg
out
cmp
mov
jl
sub
xchg
loop
pop
mov
jns
insb
test
xor
lods
bound
jno
inc
stos
or
or
pop
adc
lods
jge
repz
loopne
in
cmp
dec
jbe
mov
or
int
add
ss
and
clc
add
daa
sbb
lea
shrb
jo
mov
mov
fisttpll
push
sbb
lss
lods
xor
ret
and
dec
sbb
push
push
and
jne
mov
or
sbb
ucomiss
rcrb
push
and
and
pop
xor
add
or
test
xor
rorb
lock
and
cmp
or
mov
jo
movsb
mov
jno
mov
xor
nop
das
hlt
pop
push
or
mull
lret
sbb
lret
shlb
cmp
dec
xor
or
stc
idiv
rorl
je
push
xchg
mov
and
inc
pop
pop
sbb
lret
xchg
and
inc
enter
or
mov
mov
cmp
fucomp
jae
jne
or
pop
jmp
pop
pop
cmp
es
add
jne
scas
popa
mov
stc
push
xchg
add
sbb
in
sbb
mov
mov
insl
xorl
mov
lret
ja
cmp
and
adc
in
push
xchg
test
jne
mov
push
inc
fwait
mov
dec
sbb
inc
sbb
outsb
push
or
add
jmp
out
cmp
pop
jne
or
and
leave
add
jl
scas
add
inc
sbb
push
fwait
out
test
pop
sbb
adc
je
and
pop
or
fidivl
push
and
pop
push
push
cmpsl
test
cltd
mov
dec
mov
fcomps
push
loopne
inc
push
test
lcall
xchg
inc
sub
scas
mov
fsubr
push
sbb
push
push
sub
lods
push
and
repnz
mov
push
cmp
jnp
push
sbb
sbb
dec
adc
xor
lods
lahf
push
xor
dec
pop
add
add
mov
test
mov
inc
test
popa
xchg
stos
sub
stc
and
fnstcw
jo
xor
add
adc
cwtl
test
in
std
mov
inc
stos
add
data16
loop
les
cld
incl
push
push
pop
popa
xor
imul
and
dec
sub
xor
inc
test
xchg
inc
divb
sub
push
fs
rcl
repnz
rcrb
inc
sbb
insb
ss
or
mov
adc
pusha
sbb
dec
dec
test
int
inc
fs
or
lock
mov
xor
or
loope
fistl
inc
xchg
add
add
and
adc
outsl
adc
xor
out
jne
pop
cmp
adc
icebp
or
lods
xchg
cmc
dec
sbb
jb
in
jns
aad
arpl
and
cmpsb
ja
add
add
jo
dec
sub
std
loopne
jb
mov
push
pop
nop
out
mov
arpl
sub
lcall
push
or
repz
pop
add
cmp
shrl
xor
add
inc
icebp
inc
push
dec
adc
jmp
and
mov
inc
mull
out
or
dec
mov
and
loope
inc
fwait
adc
add
andl
adc
cmpsb
fimull
fneni(8087
and
or
jb
jo
bound
or
push
loopne
aam
cmp
clc
xchg
xor
push
movb
js
sbbb
push
pop
roll
inc
sti
sbb
dec
lret
daa
add
aam
cmp
pop
out
sub
push
cmpl
xchg
cmpsb
icebp
xchg
aad
in
fimuls
fisubrl
and
sbb
in
lea
sbb
fs
adc
call
xchg
enter
and
shlb
mov
dec
aam
cmp
add
pop
or
je
jne
push
int
pop
xor
lock
xchg
es
add
push
mov
mov
push
and
xchg
sbb
pop
push
xor
pushf
rolb
inc
shl
cmpb
inc
cwtl
jne
jg
icebp
and
add
and
movb
push
sbb
sub
cmp
pop
faddl
je
outsl
and
fstpl
add
xor
rcr
cmp
sbb
imul
call
jb
aam
cmp
mov
ret
das
es
jge
rol
xor
pop
inc
jne
cmp
mov
jae
push
mov
cmp
push
or
or
add
jl
adc
pop
mov
test
test
pusha
popa
popa
shl
insl
test
cmp
rorb
enter
fadds
nop
aaa
mov
adc
movsl
aam
sub
les
mov
adc
cltd
xor
inc
jmp
test
and
jnp
leave
les
pop
or
outsb
repnz
inc
cmp
jb
pop
pop
dec
sbb
add
ret
inc
cwtl
add
add
mov
push
push
divl
stc
rolb
lcall
nop
xor
and
jmp
cmp
jne
xor
shrb
out
stos
push
dec
and
mov
xor
sahf
filds
or
clc
cmp
out
pop
adc
or
mov
test
pop
lods
or
mov
outsl
cmp
iret
shl
push
push
mov
pop
jnp
adc
push
icebp
pop
ret
xchg
and
sbb
mov
jmp
ja
lods
call
pusha
imul
cmp
jne
aad
cmpsb
push
add
mov
cwtl
mov
cmp
je
testl
bound
cs
mov
ret
inc
scas
pop
int3
dec
cmp
notb
xchg
arpl
add
fildl
xor
mov
mov
dec
sbb
sbbb
jbe
inc
cmp
add
test
je
mov
jg
test
cmp
pushf
jp
add
lea
sbb
jbe
jae
movsl
dec
push
shl
inc
add
inc
sbb
mov
mov
inc
sub
adc
jns
mov
push
neg
sbb
sub
add
xor
or
lret
inc
mov
incl
adc
andb
dec
or
xor
sub
inc
sbb
add
adcb
xchg
push
mov
push
cwtl
js
test
das
add
adc
adc
shlb
jmp
je
lret
inc
sub
arpl
mov
adc
or
jne
or
sbb
stos
dec
pop
push
adcb
push
cmp
jne
dec
dec
push
cli
push
pop
cli
ja
inc
mov
jl
cmp
adc
or
lods
dec
cmp
jno
cltd
mov
or
add
fsubr
aaa
mov
adc
add
cmp
sub
insb
mov
jmp
shrl
cwtl
aaa
fucom
xor
lea
imul
cmp
or
sbb
sbbb
bound
mov
cwtl
add
adc
lcall
xor
hlt
lcall
jb
pop
push
add
popa
call
popa
dec
inc
es
cltd
or
dec
fisubrl
jb
cmp
out
rcl
xorb
xchg
shlb
fadd
adcl
xchg
cmc
int3
xchg
imul
jl
or
mov
xor
xlat
sti
mov
xor
inc
ret
push
and
rcrl
int
fisubl
jo
repnz
aaa
xchg
and
popa
ljmp
sub
dec
xchg
sarb
mov
sahf
mov
rol
testb
fimuls
pop
cmp
or
mov
dec
jle
cmp
add
pop
mov
mov
cli
pop
mov
movzwl
test
je
test
add
mov
or
enter
fstpt
push
mov
sub
loop
inc
push
insb
sbb
dec
cli
addr16
push
cmpl
sbb
imul
jecxz
xchg
or
js
cmp
movb
stos
fistpl
cmpsb
and
rcrb
pop
mov
mov
xchg
loop
push
jbe
test
cmp
cltd
nop
mov
pop
sbb
cmp
adcb
jl
cmp
pop
dec
cmp
mov
dec
pop
jge
lret
fadd
dec
sbb
adc
sbb
stos
mov
sbb
and
and
stc
push
mov
sbb
sbb
push
or
jp
inc
js
je
mov
adc
jno
jb
fcom
fcmovnb
jecxz
loope
push
rcrb
lods
inc
add
pop
mov
push
push
add
sub
outsb
mov
out
jae
in
pusha
pop
pop
outsb
pop
cmp
je
jmp
pop
insl
enter
sub
testb
popa
outsb
lods
add
je
jge
jle
mov
in
inc
cli
adc
mov
imul
and
add
add
push
mov
or
pop
push
mov
sub
jne
in
arpl
adc
cmc
ret
or
call
icebp
mov
or
adcl
lds
mov
mov
sub
call
xchg
sbb
icebp
in
loopne
sbb
test
push
ljmp
testb
jl
push
xchg
add
pop
in
sub
add
pop
in
xchg
es
lock
push
lock
sti
cmp
cmp
xor
mov
mov
inc
mov
int3
addr16
lahf
jae
mov
inc
in
sub
push
mov
and
ljmp
add
mov
push
loopne
push
mov
mov
cmpl
test
inc
or
adc
dec
inc
mov
jl
subl
je
and
push
lock
push
xor
ljmp
cwtl
call
xor
aaa
leave
mov
sbb
mov
xor
lret
ja
aam
pop
popa
call
push
shl
and
repnz
inc
inc
cmc
ret
pusha
push
mov
adc
outsl
adc
mov
push
or
test
ljmp
push
sub
push
mov
dec
add
inc
test
dec
sti
or
mov
cwtl
nop
cmpsb
cwtl
mov
cwtl
cwtl
add
cli
leave
lock
popf
sarb
inc
add
mov
sub
mov
aad
pop
test
nop
sub
mov
adc
xchg
sbb
repnz
rcll
xor
add
adc
or
mov
lock
pop
ret
shl
pushf
outsb
xchg
popf
mov
fxch
fst
xchg
cmp
jnp
xlat
push
rorl
sbb
pusha
inc
dec
shr
sub
cmp
in
push
stos
rorl
push
fdivs
gs
cmp
jmp
push
aam
jne
call
pushf
xor
imull
jl
mov
lock
mov
adc
dec
or
or
ljmp
inc
sbb
xchg
xchg
out
push
idivb
mov
loopne
rcll
mov
test
pop
cmc
or
rolb
ljmp
cmp
popf
aad
movsb
xchg
ret
inc
enter
xor
mov
nop
cmp
popa
inc
mov
xor
insb
xor
mov
setb
or
push
mov
loopne
aad
test
sbb
adc
jle
add
jae
mov
je
cmpsl
daa
or
inc
pop
rcrl
add
jmp
int
je
movsl
addb
addl
xor
mov
xchg
mov
mov
hlt
add
jae
jbe
scas
adc
loopnew
pop
out
add
movsb
pop
je
sub
push
add
sahf
int
mov
push
xor
or
pusha
aad
in
mov
xor
mov
mov
fs
ret
inc
xor
xchg
ljmp
aam
push
sbb
inc
and
sub
add
loopne
xor
mov
push
jns
cmove
call
mov
cmp
out
inc
adc
jle
ror
out
push
lea
aaa
fildl
ffree
dec
sbb
adc
inc
adc
dec
sbbb
mov
sbb
int
push
push
sub
fisubrs
mov
xor
push
cmp
add
ljmp
nop
loopne
lock
xchg
mov
inc
pop
inc
sbb
mov
shll
icebp
jbe
fmull
mov
mov
fidivl
cmp
jb
push
adc
mov
mov
push
jl
or
shrb
xor
scas
insb
mov
loope
cmp
out
addr16
inc
push
mov
jecxz
inc
cld
sarl
lret
cmp
jg
rcrb
xor
inc
xor
push
loop
orb
pusha
cmp
cli
jg
push
cmp
sub
jmp
js
push
push
mov
mov
push
shr
in
aam
or
add
lods
or
loope
sub
fsubrp
enter
into
mov
sbb
push
icebp
aad
popa
mov
js
data16
daa
adc
push
in
or
push
push
add
cmpsl
cmp
sub
popf
jle
movsb
xorb
aaa
in
push
insb
lock
push
sub
xchg
repz
loopne
mul
shlb
mov
push
mov
xor
push
scas
jmp
xchg
aam
xchg
cmp
push
pusha
loope
gs
push
mov
mov
pop
iret
pop
and
xchg
lcall
insb
pop
imul
dec
pusha
in
por
lds
scas
add
jmp
jbe
frstor
fs
test
add
and
inc
fisubrl
or
ss
out
ror
adc
sbb
add
xor
movsl
call
fadd
add
cmp
xchg
push
mov
je
push
and
loop
add
mov
jae
arpl
push
in
push
push
je
inc
or
mov
or
and
jle
cmp
and
test
push
push
cmp
or
add
push
enter
mov
push
out
or
mov
xchg
imul
cmp
fstl
xor
or
cmp
je
or
push
add
rcll
sbb
cwtl
inc
pop
nop
dec
xchg
loopne
nop
adc
or
imul
lds
enter
iret
dec
push
mov
ss
pop
les
jb
cmp
cmp
push
add
rclb
orb
adc
fucom
nop
sub
sbb
push
out
inc
jecxz
sub
sbb
xor
and
or
fstpl
push
test
jae
xor
rcr
call
sbb
push
shr
stc
pop
and
or
dec
loopne
adc
or
dec
out
mov
mov
mov
outsb
or
jnp
and
add
cltd
jne
cmp
leave
das
or
cmp
push
insl
mov
sbb
adc
into
sub
mov
xor
jb
sbb
mov
dec
add
add
push
sbb
mov
test
mov
xchg
lcall
inc
and
add
cmp
imul
test
mov
mov
fsubr
mov
sub
enter
in
sub
int3
rcl
lcall
shlb
scas
sub
in
sbb
rcrb
jmp
cld
daa
pop
mov
xchg
int
adc
and
or
es
xor
test
pushl
add
sub
rorb
sbb
orb
jo
enter
push
orb
shll
dec
shl
push
pop
ret
addr16
xchg
pop
inc
xor
fwait
je
ret
stos
push
add
mov
fiadds
clc
adc
and
js
dec
jo
repnz
push
xor
ret
xchg
dec
pcmpeqw
or
adc
jne
or
jne
xor
mov
adc
bound
pop
mov
dec
popa
add
jbe
std
xchg
fbstp
lret
sbb
mov
jne
cs
sub
xchg
lret
or
add
add
cli
mov
ja
rcrl
inc
mov
jb
mov
or
jo
jmp
jnp
leave
lea
dec
dec
xchg
arpl
add
mov
ret
adc
int3
jne
pop
rcll
lahf
cmp
push
shl
sahf
ret
mov
or
shrb
pop
mov
inc
cld
das
mov
rol
ljmp
inc
ficompl
add
jl
orl
jmp
insl
nop
add
xor
testb
mov
inc
les
adc
pop
loop
outsb
add
notb
sub
out
test
lret
andl
fists
cmp
fnstcw
adc
mov
add
or
pop
mov
xchg
out
nop
out
add
jo
out
addr16
cmp
int3
fimuls
pop
in
stc
movsl
mov
inc
outsb
dec
testl
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
xchg
clc
push
stc
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
pusha
fldcw
jne
add
cmp
push
sub
mov
and
lods
sbb
mov
inc
testb
push
mov
ret
adc
shrb
xchg
lea
nop
push
mov
andb
mov
scas
mov
setne
or
mov
loop
in
scas
jo
jmp
or
jmp
lods
pop
cwtl
inc
sbb
or
cmpsl
inc
dec
mov
arpl
or
int3
mov
mov
add
push
add
or
or
adc
inc
movsl
jae
inc
cwtl
adc
sbb
sbb
outsl
sub
cmp
jp
arpl
icebp
mov
nop
and
addl
out
enter
xchg
pop
add
adc
push
pusha
push
rcll
or
pop
iret
int
jnp
push
and
out
mov
mov
adc
test
and
andb
int3
dec
push
or
mov
sbb
and
sbb
lods
flds
nop
gs
or
xorl
and
pusha
insb
insb
push
and
xor
loope
movsb
cmpsl
into
adc
movsb
popl
arpl
adc
icebp
and
xchg
addr16
and
pop
cmp
xchg
push
hlt
jo
imul
pop
bound
roll
mov
xor
out
lock
cmp
je
xor
cmpsb
loope
mov
sti
clc
adc
lds
xchg
inc
pop
xchg
jmp
lea
pop
fsubrl
dec
leave
add
xchg
push
subb
push
add
mov
mov
adc
lock
in
cld
lock
ret
clc
sahf
pop
cmpsl
addb
insl
testl
add
into
and
push
dec
pop
out
dec
xorl
movswl
jbe
add
add
add
push
mov
mov
in
daa
or
mov
mov
cs
add
or
add
inc
out
cltd
mov
mov
push
mov
pop
or
sub
and
fs
or
cmp
xlat
test
je
test
in
add
sbb
jp
dec
shll
mov
sub
jae
daa
pop
push
inc
sbbl
pop
leave
enter
xchg
xor
sbb
clc
fcomps
mov
jne
pop
out
sbb
adc
inc
mov
je,pn
adc
mov
ret
pop
jno
lods
lock
mov
shll
xchg
fsubl
cltd
pop
mov
xchg
stos
or
xchg
roll
mov
cwtl
fidivrs
lea
sub
pop
test
sub
pusha
lock
je
sbb
add
iret
in
push
cwtl
inc
cmp
dec
push
lea
xchg
add
aam
fildl
lea
inc
cmp
insl
lret
push
or
sbb
lcall
adc
pushf
mov
fcoms
adc
pinsrw
inc
lods
or
mov
in
roll
pop
lock
xor
or
lods
cmp
pop
arpl
mov
inc
nop
loopne
movb
pusha
imul
push
push
fsubs
fsub
into
inc
std
inc
cmp
cli
mov
mov
add
sbb
pop
cmp
je
push
push
or
test
jl
lret
sti
jle
xor
sbb
pop
loopne
or
xchg
shll
dec
mov
pop
ficompl
jge
sbb
mov
lret
adc
test
xchg
sahf
ljmp
dec
outsb
sbb
loopne
adc
jo
mov
add
xlat
hlt
push
mov
adc
nop
inc
andb
pop
add
orl
sbb
and
pop
fistl
fdivs
pop
into
jecxz
icebp
or
lock
adc
icebp
adc
lret
mov
into
sbb
shl
lret
ret
xchg
jl
verr
imul
sbb
cmp
cmp
popa
nop
rol
jecxz
lea
test
inc
mov
cmpsb
fsubr
outsl
pop
out
xchg
mov
lret
ss
test
or
clc
inc
popa
mov
rcrl
and
sub
ja
adc
push
or
xchg
and
in
mov
test
scas
push
shlb
inc
mov
xchg
mov
test
xlat
in
or
add
jge
jmp
cmp
das
cmp
es
out
jo
push
cli
imul
mov
lcall
popa
cwtl
bound
lods
push
mov
mov
mov
outsb
jmp
inc
cmp
mov
cmp
insl
aaa
fiaddl
and
push
pop
fsubs
cmp
mov
pop
or
test
cmp
cmpsl
daa
jae
cs
dec
imul
push
and
in
push
push
je
or
pusha
lahf
das
or
sub
add
adc
pop
cli
pop
ljmp
push
push
xchg
nop
ss
lcall
jecxz,pn
icebp
xor
push
mov
xchg
lds
xor
or
jp
outsb
xchg
xor
jp
lcall
jp
repz
sub
imul
add
movsl
movsb
push
jmp
cmpsb
lock
lds
std
and
mov
cmp
sbb
and
punpckhbw
and
xchg
jmp
imul
pop
push
or
test
inc
cli
sbb
loopne
xor
call
movsb
adc
mov
inc
pop
xchg
sub
jle
xchg
notb
mov
jae
addr16
and
lcall
call
dec
mov
and
popf
imul
inc
pop
cmp
rdmsr
shrb
stc
dec
stos
out
stos
push
sbb
jns
std
cmp
leave
dec
xor
call
xor
sub
aad
mov
shrb
pop
pushf
imul
mov
and
dec
cltd
or
xor
push
xor
push
or
jo
push
add
push
and
dec
xchg
mov
or
mov
mov
push
or
or
and
push
lret
jecxz
push
or
xchg
pop
cwtl
fbld
out
test
sub
fwait
add
pmulhuw
add
ficompl
rclb
es
and
cmp
inc
je
pushf
adc
lock
push
add
cmpl
outsl
inc
jb
push
xor
push
xor
cmp
and
sahf
adc
daa
nop
andl
lcall
insb
xor
sub
mov
xchg
data16
inc
dec
jg
andl
jne
loope
outsb
xorl
pop
push
sbb
jl
es
test
gs
mov
pop
outsl
mov
pop
jb
repnz
lea
sub
rcll
cmc
ss
push
push
cmp
roll
fsubl
dec
add
popa
imul
inc
mov
pop
xchg
idivb
push
and
add
add
mov
jl
andl
sub
mov
adc
sbb
and
sbbb
add
sbb
cwtl
scas
or
xor
mov
cmp
icebp
push
into
dec
xor
pop
sahf
push
mov
dec
outsb
mov
fstl
or
imul
lcall
xchg
dec
cmpsl
shr
addb
aas
test
xor
aad
xor
push
mov
iret
test
adc
dec
ja
jl
dec
mov
sbb
xor
mov
push
or
sbb
adc
xchg
sub
adc
push
in
jecxz
cmp
jmp
add
rorb
dec
adc
fdiv
inc
adc
push
inc
aam
cmp
adc
inc
push
add
sub
rolb
sbb
in
jmp
addl
pop
movsb
push
xchg
xchg
pop
fbstp
testb
push
orl
pop
mov
cs
pusha
sub
in
fisubrs
inc
or
mov
cmp
cmp
cmp
mov
imul
pop
testb
or
cmp
pop
mov
mov
add
jmp
xor
and
xor
xchg
xlat
roll
inc
xor
mov
orl
pop
mov
sbb
or
inc
mov
mov
mov
scas
push
mov
in
movsb
lahf
sbb
pop
add
test
nop
lret
aas
pop
jbe
xchg
mov
mov
and
cmp
mov
jo
add
inc
add
int3
lahf
aaa
add
mov
ret
sarl
sbb
out
out
xor
push
push
test
add
andb
jne
jbe
stos
pop
rol
filds
mov
cmpl
push
jne
out
dec
stos
pop
adc
or
test
mov
push
cmp
or
nop
push
mov
mov
xor
mov
enter
mov
cli
add
inc
xchg
and
inc
mov
or
into
lods
ret
rcr
jnp
mov
push
pushf
xchg
inc
xlat
adc
rcrl
test
pop
jo
sub
adc
mov
inc
inc
add
mov
sbb
sbb
mov
fildl
adc
pop
mov
mov
das
test
rol
sbb
popf
mov
repnz
jmp
nop
push
push
mov
lods
xchg
pop
mov
lods
dec
mov
cltd
testl
cwtl
inc
push
insl
xlat
xor
dec
add
test
subb
jmp
push
cmpsb
xchg
pop
add
addb
lock
jb
sbb
or
aas
pushf
xor
or
push
addr16
add
xchg
mov
cmp
add
push
or
inc
push
pop
enter
add
inc
push
test
loopne
ja
je
push
std
gs
push
push
psrad
inc
cmpsb
daa
dec
pop
js
add
jo
add
mov
outsl
push
dec
cmp
cli
andl
dec
inc
add
xchg
inc
bound
clc
dec
sub
sbb
mov
or
or
jmp
mov
aam
lods
shlb
scas
sub
jbe
data16
decb
inc
adc
mov
in
pushf
pushf
add
inc
je
fbstp
es
and
pop
clc
xor
or
cli
loope
push
in
ret
mov
mov
mov
pop
mov
or
jae
cmpsb
mov
das
add
or
sbb
cmp
orl
jbe
sub
lahf
ljmp
insb
notl
xchg
sbb
add
mov
hlt
dec
insb
add
pop
add
pop
scas
xor
add
or
lods
or
out
call
lahf
mov
adc
add
testl
jne
sbb
ficomps
cmp
pop
or
xor
lea
dec
push
ret
jb
shr
enter
cmp
add
loopne
in
lock
mov
subl
pop
and
aas
cli
mov
cwtl
pushl
mov
fdivs
mov
cmpl
push
and
push
or
aas
in
movb
inc
hlt
jg,pt
lahf
xlat
jge
movl
shr
inc
add
mov
loop
movlhps
dec
adc
jo
idivb
adc
jl
xchg
mov
xchg
sbb
stos
pusha
insb
std
mov
dec
rolb
adc
int
pop
xchg
roll
js
jb
sbb
clc
jge
test
cmp
push
inc
fiaddl
lret
inc
outsl
fs
out
je
push
hlt
repz
push
and
xchg
pop
adc
inc
hlt
mov
in
stos
mov
jp
mov
mov
leave
jmp
sbb
jnp
jge
stc
int
ds
je
mov
or
sub
repnz
lcall
ss
push
sbb
popa
shl
fwait
and
sub
rcrb
and
imul
rorl
pop
out
inc
adc
adc
ds
psrlw
sbb
jbe
scas
addl
insb
daa
test
test
mov
xor
mov
ja,pn
stos
mov
dec
sahf
and
testb
movb
iret
enter
imul
add
inc
movsl
test
xchg
sub
xor
fadds
jg
adc
add
adc
pop
sbb
cmp
mov
mov
mov
lea
dec
aad
mov
mov
pushf
inc
add
jns
jbe
cmp
js
popf
push
push
and
or
andb
sbb
dec
mov
adcl
sti
addb
ss
out
sub
pop
aas
adc
call
jo
dec
add
cmp
add
loope
adc
scas
xchg
cmp
clc
adc
xor
jb
stos
push
jbe
in
ficomps
adc
or
hlt
fs
xlat
adc
push
sub
in
test
push
xor
js
clc
outsl
xor
pushf
xchg
js
mov
sahf
push
imul
or
pop
mov
in
lea
dec
les
ss
push
popa
mov
push
pop
inc
or
adc
push
push
adc
jne
jge
push
lcall
or
pop
push
jo
mov
push
or
pop
or
or
mov
lea
push
cmp
push
mov
jne
idivl
mov
stos
pop
cmp
out
pop
adc
pushf
and
lods
push
jg
stos
adcb
testl
mov
aas
pop
andl
sahf
jo
inc
mov
cmp
arpl
inc
fisttpll
std
mov
or
push
xchg
sub
sbb
cmpsl
aaa
sbb
or
mov
xchg
sub
dec
insl
dec
mov
push
xor
jo
sbb
pushf
out
cmc
sbb
mov
mov
jno
sub
jge
sbb
cmp
testl
add
pop
inc
jbe
lds
mov
push
sbb
and
dec
rcr
jne
dec
lret
scas
adc
mov
nop
push
int
cmpsb
add
loope
adc
adc
ret
fisubl
or
push
jl
push
inc
mov
mov
dec
sbb
mov
hlt
and
jae
movsb
es
jl
movl
gs
push
push
insb
or
les
jo
cltd
shlb
in
dec
lea
adc
mov
push
loope
xor
bound
aas
fwait
mov
addb
ss
loop
clc
mov
repnz
mov
adc
push
jae
cmp
fidivrs
mov
push
add
adc
xchg
or
in
mov
and
into
fimull
lods
push
bound
push
idivb
mov
xor
xchg
shrb
sbb
or
aaa
adc
add
aaa
dec
lds
sti
sub
xor
inc
rorb
mov
sti
es
shrb
scas
dec
xchg
mov
pop
in
mov
ds
popf
out
dec
push
xor
xchg
mov
mov
push
push
xchg
insl
rolb
or
push
pop
dec
subl
lods
push
push
daa
adc
push
jno
in
sub
mov
add
mov
loopne
add
pusha
dec
inc
les
pop
or
mov
pop
mov
add
and
xor
pushf
rorl
or
cmpsb
jne
ret
outsl
lret
rclb
xchg
outsb
mov
or
sti
dec
ja
je
or
je
or
sub
sub
mov
scas
cmp
inc
in
sub
push
or
add
sahf
cwtl
js
jne
lcall
mov
clc
push
jmp
cmp
adc
imul
xor
lods
add
push
inc
out
add
or
inc
sbb
add
sbb
dec
mov
call
fdivrs
adc
mov
js
mov
mov
ret
and
insl
mov
test
dec
sti
in
xorb
or
add
je
and
ret
fmuls
rorl
daa
rclb
and
outsl
jo
test
test
rolb
lea
add
mov
bound
rolb
sahf
daa
cld
fwait
or
dec
je
sub
add
mov
in
movsb
xor
pop
add
add
xor
inc
nop
adc
add
inc
jbe
cmp
push
adc
stos
or
xchg
xchg
out
rorl
scas
aas
sbb
sbb
pop
test
or
add
jmp
int3
int3
ficoms
push
jmp
or
stos
daa
fs
or
lcall
jbe
imul
shl
dec
stos
cmpsb
js
dec
rclb
pusha
and
out
lea
fdivrl
notl
adcl
imul
das
lock
add
mov
inc
push
inc
push
cmp
add
pop
lcall
push
ret
call
dec
mov
loopne
push
dec
inc
push
loopne
inc
xor
aam
cmp
dec
popf
repnz
notb
or
add
enter
lcall
and
dec
sub
cmp
movb
in
roll
mul
mov
xchg
stos
insb
std
fdivrl
xchg
mov
and
scas
push
inc
adc
cltd
and
addb
jo
pop
or
fwait
out
les
jp
push
jp
ret
leave
nop
inc
es
fmul
xchg
mov
mov
ds
cmp
push
xor
ret
rorb
rol
push
lcall
fdivrs
repz
sbb
repz
lcall
adc
in
outsb
test
and
fisubl
xchg
add
movsl
pusha
je
adc
jge
loopne
xchg
mov
xor
arpl
nop
cmp
in
push
cmpsl
xor
aam
xchg
mov
aam
mov
xchg
or
fmull
push
fdivrs
push
cltd
or
in
sahf
xchg
clc
aaa
addl
aas
adc
adc
sarl
cmp
sub
or
and
inc
mov
dec
mov
sti
cmp
inc
rclb
xor
rclb
fwait
mov
and
sahf
pop
or
mov
adc
lahf
sbb
pop
stc
inc
mov
cmp
scas
lods
xchg
in
mov
pop
jnp
sub
fisubl
mov
sbb
test
adc
pusha
das
push
and
dec
popa
push
std
fistl
mov
shl
mov
ret
push
adc
xor
pop
ror
xchg
or
jmp
jle
sbb
sub
mov
mov
push
inc
push
inc
hlt
pushf
call
dec
push
int3
out
pop
inc
movsl
mov
lock
mov
xchg
xor
sarb
cwtl
sub
cs
inc
push
inc
ja
shrb
imul
movl
movsb
inc
mov
sub
push
jne
add
or
pushf
sub
loop
dec
in
sub
and
jmp
xorb
lods
shrl
aam
insl
fcoms
test
jo
pop
sub
push
cs
dec
xchg
sbb
cmpsl
je
and
jmp
jo
mov
loop
inc
and
cmpl
repnz
roll
dec
movl
or
cmp
pop
adc
adc
cmpsl
mov
and
add
sbb
or
scas
xor
cmp
or
mov
add
mov
orb
cwtl
icebp
xor
mov
add
call
or
push
arpl
call
xchg
pop
cld
dec
adc
daa
test
xchg
cmp
sbb
mov
dec
pop
incl
push
fdivr
and
sahf
inc
decl
pushf
and
mov
push
xchg
aas
inc
mov
mov
movsl
and
sbb
into
pop
lret
push
xchg
shlb
lods
push
aas
and
cmp
imul
adc
insb
cld
sbb
dec
or
sbb
pop
ja
neg
sbb
mov
cmpb
shll
stos
push
add
and
popa
sbb
jb
push
rolb
add
cmp
pop
adc
xor
jl
iret
shr
daa
test
jmp
lock
movsb
icebp
adc
call
add
mov
shrb
push
pop
mov
in
mov
sbb
ljmp
push
in
dec
xor
mov
das
loopne
hlt
xchg
sarb
outsl
incb
or
push
xor
repnz
xor
mov
icebp
cmp
xchg
or
mov
or
loopne
jg
sti
je
rorb
andl
mov
push
xor
add
cmpl
je
push
sbb
mov
and
lock
out
jbe
jae
in
xchg
mov
lods
dec
sbb
inc
sbb
xor
and
aaa
fistl
dec
mov
push
lods
test
sub
mov
movsb
lods
lahf
mov
or
call
loop
pop
js
data16
ret
je
xor
lock
mov
sbb
outsb
sarb
sbb
xchg
sahf
and
ret
push
mov
xor
in
mov
movsl
jmp
push
repz
cwtl
and
adc
or
and
push
fiadds
xor
add
jnp
imul
roll
and
adc
add
jge
sbb
mov
loope
sbb
lret
lock
push
shl
mov
les
rorl
aaa
lret
ficompl
sahf
jle
mov
ss
lahf
pusha
push
sbb
pop
sbb
in
add
mov
aaa
leave
mov
inc
mov
inc
add
push
orb
cltd
add
aam
test
cld
cli
stc
mov
or
and
loopne
or
or
jns
mov
out
pop
enter
fidivs
sbb
shll
in
aaa
stos
sbb
call
jns
mov
je
pusha
arpl
dec
and
das
cltd
movsl
rcl
imul
addr16
add
push
arpl
lods
aad
fs
push
adcb
jo
inc
data16
add
push
stc
fs
hlt
pushw
je
cmp
push
push
pop
test
mov
push
jne
pop
or
imul
bound
rdpmc
sub
rorb
and
add
mulb
mov
push
inc
dec
dec
dec
hlt
add
pop
je
or
test
cmp
cmc
lret
aaa
xchg
cmp
mov
mov
sub
adcl
lret
mov
jno
fdivs
mov
dec
dec
add
pop
mov
xchg
jbe
leave
incl
mov
dec
adc
rorb
fidivrs
dec
mov
or
mov
subb
pop
and
sbb
add
lcall
add
dec
push
add
sarl
outsl
hlt
adc
and
cltd
lock
adc
lea
push
add
rcrb
in
out
popa
mov
or
rcr
pop
push
mov
mov
pop
addb
test
test
addr16
pushf
lahf
sub
xchg
add
sub
mov
sbb
lods
test
mov
in
dec
or
je
dec
into
imul
and
jbe
pop
adc
lock
sbb
popa
iret
and
mov
adcl
push
inc
mov
push
mov
cld
lods
int3
xchg
movsb
scas
or
mov
enter
inc
xchg
iret
test
pop
mov
mov
sub
mov
jg
or
xchg
add
test
inc
mov
addr16
and
mov
and
push
push
sub
cmp
xchg
aas
adc
mulb
in
sbb
sub
imul
and
pop
loopne
adc
inc
scas
cmp
pop
or
jecxz
inc
ret
cmp
dec
jle
xor
and
ret
add
xchg
test
iret
xor
dec
mov
xor
sub
inc
je
nop
mov
ret
dec
lahf
xchg
flds
dec
xchg
test
adc
repz
in
jmp
push
cwtl
mov
and
pop
mov
xadd
mov
inc
imul
xor
add
push
out
lahf
out
mov
mov
push
mov
cs
jmp
enter
decb
call
xor
adcl
scas
add
out
mov
aam
or
add
test
add
xchg
add
and
cli
es
sarl
loopne
adc
test
rol
and
cwtl
inc
mov
or
lahf
xor
rclb
mov
push
shll
mov
je
and
addl
fbstp
insb
push
sbb
int3
lea
hlt
sbb
xchg
sbb
dec
or
mov
movsl
ret
sarb
jge
jl
imul
add
and
jb
add
push
inc
or
inc
or
add
les
push
and
add
rol
repnz
aaa
les
fbld
sar
jl
cmp
jae
mov
or
out
rorb
or
jne
jg
sub
dec
inc
loopne
xchg
or
rcr
jp
inc
pop
pop
outsb
mov
or
stc
cli
bswap
add
inc
jmp
push
pusha
xor
push
push
and
outsb
mov
xchg
arpl
rol
test
dec
cmpl
mov
jl
sub
xor
add
call
sahf
imul
leave
or
lods
jge
jge
loopne
sbbb
js
jo
pop
jmp
push
and
pcmpgtb
push
subb
and
mov
hlt
subb
fstps
test
xor
or
xor
insl
jecxz
sub
mov
iret
jae
mov
rcrb
push
pushf
stos
mov
clc
add
xor
ss
sub
sub
jecxz
xchg
lock
jb
or
sarl
xor
inc
jb
push
dec
push
fsubl
insb
lock
mov
clts
sub
adc
decl
lods
stos
jae
nop
mov
mov
dec
ja
cmpsl
jne
scas
loope
sub
push
pop
xchg
and
jnp
dec
in
jmp
adc
adc
and
ja
push
jb
sub
lods
adc
in
add
add
cmp
jge
pop
inc
arpl
xor
pop
mov
dec
in
enter
notb
adc
mov
fimuls
cli
add
shll
sbb
leave
push
xor
in
ret
test
push
orl
dec
imul
jecxz
mov
jo
push
lock
jge
dec
add
fmuls
nop
inc
dec
pop
repnz
out
dec
sbb
push
inc
dec
dec
test
dec
test
push
jns
fs
or
mov
add
dec
stc
add
push
xchg
inc
test
push
inc
push
cmp
jo
ds
cmp
jbe
mov
cmp
push
inc
lock
xor
push
push
and
push
pop
pop
or
leave
inc
nop
ficomps
test
je
sbb
xchg
jp
sbbl
sub
subb
lea
push
sub
pop
push
and
xchg
and
aam
add
test
add
call
push
push
push
inc
fdivrl
pop
enter
insl
dec
aaa
cmp
add
ja
push
dec
pop
add
es
inc
daa
inc
es
je
mov
pop
sbb
andb
stos
je
push
jns
add
push
pop
push
popf
or
bound
dec
idivl
adc
mov
jle
jmp
xchg
push
mov
and
add
sbb
sbb
inc
xchg
cli
mov
adc
mov
jne
and
pop
out
adc
sbb
dec
scas
test
movsb
add
or
aaa
ret
and
push
roll
or
push
enter
adc
insb
enter
icebp
inc
push
imul
popa
dec
lea
mov
movsb
dec
jmp
or
xor
push
adc
push
add
lds
pusha
jbe
lods
xor
xor
mov
ds
mov
mov
insb
insb
cmp
mov
mov
setb
adc
mull
dec
insb
adc
pop
testl
in
dec
lea
imul
mov
sbb
lods
xor
adc
dec
cmp
or
adc
scas
or
popa
xchg
cmp
jnp
leave
mov
bound
or
imul
jp
es
js
sbb
xor
push
mov
rclb
movsb
aaa
adc
sbb
xchg
xchg
add
xchg
in
dec
fmull
adc
cli
xchg
dec
and
mov
jbe
data16
pop
adc
out
jo
push
push
bound
lcall
xchg
sub
xor
sub
push
clc
loope
mov
les
enter
push
sbb
or
cld
pop
out
inc
jo
cmpl
sahf
les
jns
dec
ret
xchg
add
mov
ss
dec
dec
push
addr16
mov
cs
int
push
and
and
or
sbb
insl
lret
loop
test
xchg
sub
out
leave
in
xchg
push
push
adc
les
rcrb
adc
sbb
lock
xor
or
rolb
push
and
pop
or
sub
popa
add
dec
mov
xchg
lock
xor
pop
inc
and
sub
clc
adc
hlt
fmuls
ret
notl
out
mov
loopne
outsb
push
clc
rcll
pop
cli
inc
ljmp
cld
or
push
call
jl
mov
mov
add
inc
and
sbb
sub
lea
ret
push
xor
pop
push
cmp
xchg
mov
aaa
pop
leave
sub
test
sarb
dec
adc
lcall
lock
cwtl
mull
and
dec
push
push
xchg
ds
xchg
clc
xchg
push
fcoms
popa
mov
test
push
xor
fldt
mov
je
in
jp
inc
je
jbe
xlat
inc
mov
and
xchg
je
jecxz
mov
sbb
add
mov
xorl
insl
inc
inc
adc
imul
inc
fisttpl
cmp
xor
adc
jg
cmp
pop
push
mov
and
pushf
addb
or
stos
ds
orl
mov
mov
inc
or
mov
shr
not
xchg
test
aas
dec
xor
out
or
push
add
add
xor
mov
dec
push
scas
fs
mov
ret
fadds
jns
stc
pop
sbb
sub
xor
mov
sbb
cmp
inc
push
inc
push
dec
mov
test
movl
fmull
rol
add
sbb
add
js
push
aaa
roll
ret
movsl
sub
int3
push
test
mov
add
jno
lods
inc
movl
cmpb
push
lods
fimuls
cmp
inc
mov
pop
ljmp
mov
jae
adc
rclb
call
movsl
popa
and
dec
sub
jecxz,pn
jnp
pop
or
es
add
pop
xchg
add
scas
inc
insb
mov
mov
and
adc
mov
jp
subb
jmp
andb
into
adc
jnp
std
add
inc
call
sbb
lahf
int3
mov
imul
push
inc
inc
cmp
cltd
popa
inc
xchg
mov
je
ret
sbb
int3
je
jl
dec
xor
jo
add
pop
testb
adc
cmp
or
mov
dec
sbb
adc
adc
push
movsl
cmpsl
shlb
sbb
xor
jne
pop
cmp
arpl
sub
push
js
cmp
pop
dec
mov
rep
rcr
ret
cmpsb
inc
xor
or
adc
fcmovne
adc
jmp
sub
jae
cmpsl
adc
fsubp
shlb
add
sbb
sbb
arpl
jbe
jnp
and
jne
enter
aad
sub
push
push
mov
xor
push
mov
negb
jmp
push
loopne
adc
push
pop
data16
roll
sub
sub
sbb
adc
lock
sub
xor
or
pop
inc
inc
mov
xchg
testb
mov
sarb
movsb
jle
inc
xchg
pop
mov
daa
inc
or
cmp
jne
adc
inc
scas
sub
rolb
cmp
push
lock
andb
push
jge
mov
mov
pop
insl
jge
loopne
lret
sbb
add
rorl
jne
inc
sub
mov
addb
mov
push
hlt
insb
fwait
pusha
adc
loop
in
mov
jbe
and
jmp
xor
jl
inc
cwtl
adc
call
movl
cld
sub
cli
ds
aad
std
mov
repnz
ret
stos
pop
mov
inc
mov
pop
test
cmp
xchg
into
add
lret
jg
xor
loop
mov
mov
push
push
dec
pop
sar
cmp
call
orl
scas
sub
adc
mov
rolb
push
hlt
call
adc
add
loop
add
mov
push
cmp
fisttpll
push
mov
xchg
push
sub
xor
rolb
fsubl
movsb
adc
jno
incl
in
xchg
mov
jecxz
jae
rclb
mov
inc
xlat
mov
adc
push
push
and
add
jmp
add
mov
inc
cmp
inc
ljmp
subl
add
sarb
dec
jne
adc
push
inc
push
fdivr
mov
lods
add
xorl
clc
push
mov
roll
or
int3
sbb
push
mov
mov
jge
je
sbb
add
mov
mov
pop
cltd
out
mov
or
outsb
in
cmpsl
push
les
push
icebp
or
mov
jl
ret
push
adc
sub
adcl
loopne
movsl
or
mov
imul
jo
dec
mov
push
add
mov
sub
pop
leave
adc
shrl
pop
mov
jle
cmp
addl
pop
clc
adc
sbb
xchg
cmp
adc
add
push
add
lods
jge
shrb
es
mov
inc
and
movb
or
sbb
pop
pusha
leave
add
adc
test
mov
ds
cmpsb
adcb
jle
and
movsb
adc
pushf
push
cmp
add
cmc
test
push
adc
insl
xchg
shrl
pop
cmp
xor
sbb
dec
adc
inc
or
jg
add
pop
outsb
cmp
je
add
lea
jp
pop
inc
adc
out
adc
push
aas
inc
sar
cmp
jbe
or
add
inc
or
lret
dec
test
lock
inc
ret
pop
inc
aaa
lcall
cmp
faddl
nop
jp
outsl
repz
mov
add
mov
lods
nop
jp
popf
pop
lea
xor
shlb
fiadds
add
lock
jo
pop
push
lea
mov
fdivp
cmpsl
push
push
push
xchg
adc
lods
jb
pop
dec
outsl
enter
cmp
andl
pop
enter
scas
ret
pop
scas
jnp
in
mov
popf
push
pop
push
and
lea
imul
leave
repz
jae
dec
add
or
inc
hlt
pop
sbb
daa
fwait
ds
aas
enter
sub
xor
pop
iret
pop
adc
sbb
jle
pop
loop
pop
add
sbb
add
or
xor
or
call
xor
add
daa
adc
xor
jb
adc
add
push
mov
enter
and
dec
cmp
arpl
dec
add
incb
lea
cwtl
outsb
sar
add
pop
jbe
jp
cmp
sarl
add
cmp
jb
pushl
test
popf
sub
sbb
and
es
jae
adc
out
adc
inc
jmp
mov
sar
adc
xchg
add
dec
cmpsl
icebp
pop
dec
cli
mov
push
into
lret
adc
rorb
out
sahf
and
sbb
bound
dec
xor
fstpt
lods
xchg
lcall
mov
dec
jmp
lahf
or
mov
insb
lds
xchg
mov
ret
xor
cmp
add
sbb
loope
jb
subl
push
jmp
adc
daa
or
xchg
lret
cmp
sbb
or
mov
and
lret
leave
insl
stos
fsubl
add
mov
int
es
cltd
arpl
cmp
adc
or
mov
sub
fldt
ja
mov
aas
mov
cmp
cmc
call
lcall
dec
add
xchg
add
push
stc
std
icebp
add
or
sarl
pop
adc
xorl
jne
push
xor
adc
xchg
jnp
push
pusha
mov
out
daa
add
push
nop
test
or
nop
and
mov
mov
iret
shll
lcall
shll
out
dec
pop
pop
mov
fsubs
add
int3
push
add
nop
and
and
nop
add
loopne
cld
add
nop
add
aas
enter
and
add
sub
enter
enter
sub
sub
add
inc
cs
aas
xchg
or
das
jmp
push
scas
sbb
pop
push
sbbb
xor
mov
xor
or
xor
mov
mov
mov
ds
adc
shlb
mov
xor
stc
cmp
or
sub
pusha
push
fs
negl
cmpsl
or
mov
sbb
pop
adc
aas
add
xchg
mov
adcb
sbbl
inc
xchg
addl
rcll
adc
sbb
adc
dec
pop
adc
lea
xor
shl
mov
adc
adc
mov
mov
or
pop
pop
inc
cwtl
rolb
push
sub
mov
mov
mov
sbb
aaa
jne
movsb
adc
pop
dec
fs
fcoms
push
adc
iret
xor
or
mov
or
test
cld
jb
or
mov
pop
and
and
movsl
xchg
rcr
je
sbb
push
js
sahf
adc
add
cmpb
andl
sub
xchg
push
in
lock
ds
pop
sti
xor
xchg
lea
loopne
hlt
rcr
stos
imul
adc
sub
pop
fcomi
and
stc
test
or
add
pusha
add
mov
mov
push
loopne
mov
xor
jne
push
fwait
push
aam
adc
es
adc
sub
xchg
xchg
fwait
cmp
pop
test
leave
xor
or
push
rcrb
mov
cli
sub
xor
rcll
pusha
push
xor
pusha
and
popa
jle
ja
push
loopne
jne
and
mov
je
daa
add
aaa
add
inc
sbb
sbb
pushf
test
shll
xorb
sbb
les
les
lret
prefetch
xor
and
pop
sarb
bnd
or
inc
sub
dec
rcr
fcomps
adc
mov
dec
dec
dec
jmp
or
inc
cmc
orl
lock
test
jl
je
sbb
inc
pop
lock
cmp
inc
push
jl
adc
push
dec
cmp
jg
fcmovu
jecxz
push
neg
push
xor
mov
js
and
mov
fimuls
or
adc
push
addb
movsl
and
imul
lock
cmp
lods
push
test
lods
add
shrb
into
cmpsb
xchg
or
repz
push
or
pop
add
mov
les
mov
mov
adc
fdivs
or
fisttpl
add
cmp
jmp
xchg
push
lcall
xor
or
pop
dec
and
push
jnp
andb
or
iret
outsb
cmp
fistl
mov
push
mov
mov
or
pop
roll
or
push
inc
data16
sub
inc
inc
mov
in
call
and
push
mov
push
mov
push
jmp
pop
movsb
jb
outsb
test
js
mov
push
sbb
xor
bound
adc
fstpl
mov
pop
push
sbb
jae,pt
imul
xor
in
xlat
xchg
add
adc
jge
adc
ficoml
ds
and
imul
ret
mov
mov
inc
add
push
mov
xchg
nop
nop
dec
xor
std
jg
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
xchg
push
adc
cmp
mov
outsl
or
scas
mov
cmp
jge
mov
pop
and
repnz
negl
xor
je
cmp
je
lahf
inc
cld
js
pop
lahf
push
mov
push
mov
iret
and
cs
xor
jecxz
mov
fisubrs
testl
xor
loopne,pt
wbinvd
test
mov
aam
cmp
and
dec
into
hlt
mov
cmp
jl
add
mov
pop
add
push
jl
out
inc
or
lods
int
lcall
adc
push
cmp
xor
ror
dec
add
push
jge
add
adc
jg
pop
or
push
mov
jnp
mov
dec
pusha
and
orb
pop
cmp
aad
call
mov
not
pop
ds
movsb
and
shl
xchg
or
inc
rol
cmp
mov
xchg
push
ss
or
mov
rcrb
push
aam
in
clc
gs
mov
push
sbb
jo
sub
push
pop
popa
loopne
test
pop
bound
popa
jb
dec
mov
adc
aaa
push
or
or
cmp
mov
cmpsl
mov
jmp
sbb
xor
pusha
clc
loope
or
mov
mov
or
aad
jo
cli
cmp
inc
lods
mov
adc
loope
push
in
lahf
pusha
jo
rcll
lock
dec
push
adc
push
push
jb
icebp
or
pushf
out
shrl
push
sbb
xlat
inc
mov
enter
pop
lods
sbb
ret
bound
mov
out
dec
push
push
pop
pop
pusha
fs
push
and
cmp
dec
loopne
sub
jno
lock
insl
pop
adc
lea
sub
xchg
mov
repz
dec
jecxz
mov
sub
and
test
add
sub
inc
inc
lock
mov
jbe
jnp
jne
jo
or
mov
push
aad
adc
jle
fcmovu
push
jne
ds
sbb
add
inc
adc
jno
fstpl
sub
inc
pop
xchg
ret
cmp
sub
test
and
sub
sbb
and
scas
fnsave
nop
pop
rclb
ret
sbbb
mov
sarb
and
fldl
mov
sbb
push
push
or
outsl
mov
xchg
rol
mov
mov
sbb
mov
sub
xor
loopne,pt
dec
xor
adc
xchg
jbe
jmp
outsl
and
cmp
adc
jb
add
cmp
adc
lret
loopne
rcrb
xchg
sbb
jl
insl
jmp
arpl
jmp
sarb
push
push
fidivs
push
lods
fsub
mov
xor
dec
inc
adc
or
or
nop
jo
and
stos
imul
test
inc
inc
mov
push
fcomp
add
popa
data16
dec
mov
cmp
dec
mov
stos
xchg
xchg
fwait
mov
lahf
inc
rcrb
xor
xor
xchg
std
sbb
sub
pop
fsubrl
daa
add
inc
aam
mov
or
cld
mov
mov
clc
and
daa
je
cmp
jne
adc
and
lcall
xor
push
cs
lods
push
out
inc
leave
insl
sub
lock
inc
bnd
xor
daa
je
cmp
je
mov
jle
dec
add
and
js
aam
lds
mov
xchg
mov
insb
jbe
push
int
insl
inc
repnz
jmp
and
add
icebp
rol
je
and
and
sub
addr16
fdivl
xor
mov
add
jnp
add
lret
icebp
and
push
popa
jmp
imul
pop
push
mov
push
shll
mov
mov
adc
jecxz
sub
jnp
mov
add
lods
inc
mov
cmp
or
fldcw
test
test
sub
jge
inc
xor
roll
add
mov
mov
cmpsl
int
mov
sub
aaa
add
push
test
sub
inc
sbb
js
rcl
sbb
lret
lea
sti
push
inc
loop
or
pop
test
push
add
xchg
add
lret
inc
out
and
cmpsb
adc
inc
cmp
push
hlt
jg
mov
int
and
xchg
add
scas
pusha
pop
cwtl
jmp
jecxz
lock
mov
js
mov
jb
xchg
or
loope
xor
jle
cli
push
push
or
sahf
jg
sub
lea
mov
cs
ret
add
adc
mov
pop
jne
push
stos
or
add
jns
sbb
shrl
or
or
pop
mov
inc
adc
repnz
mov
mov
adc
movsb
add
movsb
dec
dec
loopne
add
add
or
add
addb
mov
pop
xchg
aam
imull
adc
xchg
pushf
dec
sahf
call
lret
pop
mov
inc
ja
mov
stc
add
leave
daa
orb
pop
int3
jecxz
sub
imul
inc
out
push
cwtl
fs
jmp
add
mov
arpl
add
xchg
call
inc
add
push
andb
outsb
lret
mov
jg
or
xchg
cmp
inc
or
lea
xchg
inc
dec
mov
sbb
cmc
and
or
mov
inc
push
push
adc
faddl
xchg
sub
shr
jmp
in
in
pop
outsl
add
enter
inc
cmp
decl
nop
mov
jae
mov
sub
jae
dec
sbb
push
inc
or
jae
es
nop
fdivp
divb
cmp
mov
daa
sub
or
sub
pop
es
inc
sub
xorb
aaa
push
cmp
adcb
adc
or
and
inc
xor
and
aad
mov
call
stos
rorb
mov
imul
pop
push
fstpl
dec
in
mov
push
bound
cmp
jns
adc
adc
jne
push
divb
sahf
lahf
out
or
jne
or
jne
or
add
js
push
cmpb
gs
lret
andl
add
cmp
dec
das
xchg
mov
sub
enter
mov
or
sarl
mov
fadd
or
lret
fsubrl
test
lea
fstl
jecxz
fdivs
into
or
mov
mov
xlat
rol
or
xlat
and
js
rorb
dec
jnp
add
mov
pop
and
es
enter
adc
test
movsl
xor
pop
iret
and
sbb
push
xor
movsl
xor
and
mov
jbe
fisttpll
add
aam
rolb
xchg
pop
mov
mov
les
pmaxub
or
lcall
subb
and
lock
orb
ds
pop
adc
mov
les
rorl
out
out
cmpsb
pop
fmull
or
or
imul
mov
add
mov
jbe
mov
or
mov
sub
sub
jecxz
add
and
xchg
sub
xchg
in
push
lcall
add
or
frstor
fwait
push
test
adc
push
jb
addr16
popa
dec
cmp
leave
mov
leave
add
adc
push
or
push
push
pop
inc
repnz
dec
pusha
dec
adc
and
xor
or
stos
pop
add
pop
pop
or
add
test
jnp
subb
push
nop
ja
add
mov
in
xchg
outsb
pop
int3
test
push
outsb
adc
xchg
sub
in
inc
les
out
cld
pushf
into
pop
repnz
mov
dec
mov
outsl
inc
xor
push
and
mov
xor
fnstsw
imul
inc
enter
mov
shrb
fldl
inc
jo
fmull
xor
and
dec
dec
push
sbb
dec
sbb
adc
inc
inc
jo
loopne
dec
pushf
xor
loope
leave
enter
in
call
mov
adc
in
inc
pop
dec
xor
mov
int3
jnp
dec
xor
rclb
mov
aad
jle
add
pusha
add
push
add
dec
xchg
push
xor
mov
pop
and
push
inc
lods
test
inc
or
ja
jo
outsl
addl
outsl
add
add
and
ret
loop
arpl
or
mov
push
int
push
and
push
mov
mov
dec
insb
prefetcht0
insl
lea
xor
scas
jp
cmp
in
out
and
daa
mov
xor
repnz
inc
xor
jno
sbb
int
xchg
je
pop
add
call
shl
jmp
jl
int
lea
push
inc
xor
addb
out
inc
mov
add
xchg
add
aad
test
rorl
add
add
add
cmp
cmp
int
dec
add
test
push
push
rclb
sub
pop
push
fsub
sarb
adc
xor
lds
in
jl
or
adc
or
xor
sub
add
fstpt
xchg
outsb
mov
cs
adc
ret
cmp
pop
xchg
test
ss
in
add
push
pop
js
loope
adc
cmpsl
ret
jb
daa
and
xchg
in
lret
iret
test
je
or
inc
add
pop
add
cmp
das
dec
aaa
pop
mov
movups
adc
sub
jp
pop
add
stos
push
out
add
jne
xor
pusha
xor
and
dec
push
push
xor
in
sbb
adc
mull
loope
mov
push
sbb
cld
inc
add
imul
mov
push
insl
int
adc
and
mov
xchg
loopne
rcrb
arpl
cwtl
mov
in
or
xor
jp
test
and
xchg
adc
cmp
shll
sub
in
add
pushf
dec
inc
add
add
andl
xchg
dec
les
mov
add
ret
add
add
inc
pusha
and
jg
xor
mov
insl
dec
push
dec
cmc
lea
push
insl
fmulp
pop
cmp
loope
sub
adc
fcomi
mov
cmp
inc
loope
mov
or
daa
add
ja
mov
jo
sarb
fs
and
cltd
les
shrb
adc
imul
push
jge
mov
xor
jo
dec
xchg
scas
stc
cwtl
outsl
imul
rcrb
dec
lock
inc
or
or
orl
xchg
cmpsb
aad
xor
cmpsb
adc
clc
sar
mov
stc
les
adc
lods
add
jne
pushf
shll
pop
into
imul
adc
std
stc
sbb
pop
adc
sbb
stc
sbb
or
push
sbb
push
adc
and
pusha
mov
pop
or
mov
push
or
ja
xchg
xchg
mov
fs
dec
lods
adc
mov
add
cmp
push
or
mov
jle
sub
aaa
test
loopne
sbb
inc
lods
inc
inc
iret
dec
jmp
das
mov
test
stos
inc
pop
test
out
sub
lahf
mov
add
add
test
or
xchg
dec
sub
movsl
or
adc
movsl
bound
push
sub
popa
mov
popf
testl
rclb
mov
xchg
add
shrl
inc
stos
xlat
xor
inc
pop
movsl
mov
pop
in
adc
add
jmp
adc
popf
mov
in
xchg
stos
in
loopne
cmp
adc
ficompl
enter
push
popf
pop
rorl
xchg
fcoms
aam
mov
fucomi
xchg
mov
clc
cmp
lock
lock
or
jo
pop
and
or
sub
cs
sub
in
mov
stos
xchg
mov
push
mov
enter
jo
cmp
add
scas
shll
shl
lods
subl
add
push
leave
mov
push
rolb
jle
push
pop
push
xor
nop
inc
mov
inc
inc
add
std
ss
xchg
push
pop
repnz
xchg
or
add
xchg
xchg
sbb
xchg
or
xchg
cmp
loop
popf
sub
or
shrb
pop
dec
inc
jbe
add
daa
mov
lahf
inc
or
mov
lock
push
mov
lea
icebp
sbbb
pushl
sahf
xchg
xchg
cmpsl
out
les
add
stos
push
and
cmp
add
scas
and
cmp
addr16
inc
call
mov
mov
jge
sub
mov
push
roll
sbb
shll
outsl
aam
pop
imul
push
filds
dec
add
ret
dec
dec
jp
daa
cmp
jne
mov
daa
push
push
xlat
mov
gs
push
adc
and
or
pop
cwtl
inc
mov
pop
lcall
sub
xor
fcompl
pop
out
int3
mov
popa
mov
push
push
adc
xor
popa
mov
xor
addr16
inc
pusha
add
mov
jo
add
dec
add
jecxz
icebp
call
inc
sbb
mov
inc
mov
movsl
leave
mov
add
dec
sub
add
xor
dec
aaa
movsl
mov
imul
in
sti
fisubrl
mov
test
mov
xchg
push
and
xor
inc
and
jmp
aaa
cld
cmp
or
rcrb
jg
dec
rcrb
adc
pop
xchg
mov
and
xchg
ljmp
sbb
cwtl
push
add
shlb
mov
mov
jo
cmp
xchg
pop
lods
push
scas
dec
adc
icebp
ficompl
inc
pop
std
lods
add
js
mov
sub
fucomip
mov
adc
jo
inc
inc
mov
sahf
pop
add
in
xor
sbb
add
jg
leave
pop
jns
push
add
push
sub
daa
push
jmp
mov
or
shrl
or
jmp
sbb
dec
inc
push
stos
adc
scas
popa
jmp
lock
add
mov
jo
or
add
clc
or
pushl
lcall
inc
xchg
sbb
mov
and
addb
nop
xchg
mov
adc
add
jl
dec
inc
outsl
lea
inc
icebp
imul
rolb
mov
arpl
cmp
mull
dec
sub
jo
rcll
test
js
mov
inc
push
or
shrb
lahf
add
in
stos
roll
loope
fwait
std
inc
mov
lret
nop
push
enter
fisttps
pushf
pop
xor
pop
jb
xor
pusha
lods
add
sbb
or
push
mov
jo
pop
mov
or
mov
adc
arpl
xchg
jb
xor
inc
movsb
rcll
mov
inc
shll
or
cmp
push
sub
and
ret
xor
dec
pusha
fldl
out
mov
pushf
pop
ja
icebp
xor
push
aam
mov
je
ds
sbb
push
xchg
add
and
in
fsubrs
and
adc
lret
loopne
push
les
pop
or
push
movl
xchg
bound
pop
gs
arpl
mov
and
add
mov
hlt
js
xchg
data16
andb
dec
loopne
lods
popa
and
mov
cmc
pop
mov
arpl
sub
neg
pop
lea
lcall
lock
addb
xor
and
cwtl
and
addr16
imul
and
insb
xchg
push
daa
iret
test
and
and
mov
dec
xchg
adc
outsl
inc
dec
shll
cltd
pop
scas
push
cli
or
sub
mov
fimull
dec
push
push
sbb
insb
imul
mov
bound
mov
push
pop
mov
rorl
mov
or
pop
jb
cmp
test
sub
mov
sbb
push
or
sub
xchg
dec
mov
in
outsb
call
adc
in
movsl
imul
inc
cmpsl
test
and
pop
sub
pop
mov
int
jmp
in
test
pop
and
sub
xchg
add
movsl
loope
cmp
dec
inc
adc
inc
pop
inc
pop
xchg
pop
loop
sub
add
pop
cmpsl
adc
sbb
jo
addb
mov
and
push
pop
pop
nop
add
into
rclb
cmp
add
add
xchg
or
pop
std
movl
jmp
push
loope
fsubrl
bound
in
ljmp
push
inc
mov
int3
jne
mov
dec
dec
and
pop
pop
inc
dec
xchg
fisttpl
and
or
mov
xlat
add
xorb
mov
mov
jno
test
jno
add
push
adc
mov
push
adc
inc
pop
adc
dec
adc
in
mov
pop
das
xor
lahf
push
hlt
arpl
orb
inc
pop
mov
js
xchg
lea
lea
loope
pop
addr16
js
push
mov
stc
xor
pop
adc
xchg
daa
sbb
std
push
push
js
sbb
cld
nop
cmc
xchg
adc
or
mov
add
es
cmp
or
push
pop
jge
fmuls
popa
or
shll
inc
call
nop
or
xor
cmp
cmp
mul
xchg
jne
lahf
xchg
adc
xor
xchg
repz
shll
mov
add
ficoml
inc
arpl
jno
outsb
jmp
jp
fisttpl
sbb
ret
das
movsl
or
inc
test
or
inc
jns
and
sbb
add
shlb
adc
xor
or
inc
mov
add
inc
mov
pop
lahf
lods
cs
icebp
lods
mov
and
movsb
fisubs
cmp
inc
mov
aas
pushf
or
push
or
orl
xor
icebp
nop
jp
dec
aam
sbb
xchg
in
or
pop
mov
dec
icebp
mov
sub
mov
les
pop
cmp
sub
pslld
std
dec
cmp
pusha
xchg
or
jl
xorl
xor
pop
xchg
dec
sbb
mov
sbb
xor
adc
test
xchg
push
adc
pop
and
test
lea
add
jo
adc
adc
push
dec
sub
ffree
aaa
jl
jo
or
sbb
add
push
sub
fnstsw
test
je
and
xchg
add
lret
xchg
push
adc
adc
add
dec
movsl
add
dec
aas
insl
add
and
fstpl
and
insl
clc
push
pop
cmp
fldz
out
sti
test
cmp
add
mov
clc
or
fsub
enter
pop
jmp
jmp
inc
xor
into
negl
addr16
xor
xchg
xchg
int
and
add
push
shlb
mov
fldenv
add
sarb
push
dec
je
add
inc
movl
jbe
sub
pop
push
push
iret
and
scas
or
mov
iret
out
sub
sbb
push
xor
mov
fcoms
mov
std
mov
pop
rorb
shrb
dec
add
aaa
jmp
push
lock
sbb
iret
ds
jb
rorl
sbb
rorl
sbb
push
enter
adc
sbb
fcompl
cmp
das
or
out
addr16
and
xor
adc
cld
add
out
decb
cmp
cwtl
mov
sub
xor
mov
push
or
sbb
outsb
or
fsubs
push
adc
jns
and
cmp
adc
in
imul
in
fscale
in
or
pop
jg
lahf
push
cltd
or
imull
test
outsb
in
les
sbb
and
and
or
and
pusha
cltd
adc
push
fstps
add
and
dec
add
ret
enter
out
fldcw
fwait
mov
fs
inc
cmp
sub
and
jge
cmp
mov
push
inc
push
push
push
dec
push
push
movsb
push
fnstcw
mov
inc
add
test
inc
add
jne
or
loopne
sbb
lret
lods
inc
std
fmuls
sbb
fistpll
sbb
leave
push
inc
jbe
jae
fisubrl
mov
push
cmpb
or
seto
add
je
dec
push
jb
lods
pop
xchg
sub
sbb
int3
sti
xor
fdivrl
sbb
push
js
add
rorb
xchg
jbe
and
fidivs
dec
sub
xor
aas
push
sub
pop
add
mov
jns
out
push
bound
sahf
out
sahf
xchg
mov
cmp
sarl
and
aas
dec
repz
repz
insb
jge
cwtl
iret
repz
cmpsl
mov
sahf
cmpsl
stc
cmp
or
sbb
out
dec
pop
insb
jnp
add
xchg
out
mov
and
inc
jbe
je
das
push
pop
lds
or
lcall
xor
adc
mov
inc
sub
icebp
xchg
in
or
sbb
or
xorl
test
push
fstp
bound
add
adc
and
add
jmp
add
push
lock
mov
das
fldl
hlt
fldcw
stos
add
mov
or
divl
fldt
lods
mov
adc
cld
mov
adc
inc
aaa
mov
cmp
xchg
in
test
adc
xchg
sbb
pusha
xchg
lret
leave
mov
test
add
push
xor
sarl
mov
cmpl
lds
jnp
cmpsl
iret
adc
adc
loop
sbb
sub
xchg
fs
mov
call
sbb
lods
push
mov
cmpsl
sub
dec
xchg
call
popa
xchg
inc
mov
ror
dec
push
roll
xchg
sub
call
add
movsl
jge
ret
and
add
mov
jns
dec
jl
sbb
push
add
in
mov
mov
enter
jno
orb
xchg
cmp
aas
jl
mov
aaa
out
sub
xor
jnp
sbb
mov
push
int3
xor
arpl
in
call
jbe
cs
add
call
pop
sbbb
push
mov
push
addr16
pop
lods
pop
mov
push
stc
mov
in
in
repnz
daa
push
call
add
push
sub
imul
bound
mov
in
adc
or
pusha
enter
inc
adcb
sbb
dec
popa
push
xorb
push
mov
pop
enter
add
mov
or
or
and
mov
and
or
or
popa
add
scas
in
js
or
add
push
adc
addl
in
ljmp
loopne
pusha
jne
lock
popa
test
stos
xchg
in
push
rcll
imul
add
cmp
sub
jge
sub
pop
xor
mov
mov
sbb
add
jmp
push
les
lea
jbe
cwtl
push
mov
inc
add
jb
and
sbb
les
adc
adc
test
stos
cmpsl
mov
dec
fldcw
fs
movl
leave
lock
or
jae
mov
mov
shr
adc
mov
and
xchg
shlb
adc
xor
jb
sub
cmpsl
jo
dec
ds
icebp
in
adc
sbb
adc
enter
mov
pushf
adc
or
push
int3
lock
pop
push
loope
mov
or
or
je
fimull
add
xlat
adc
mov
add
outsb
xor
sub
in
cmp
or
std
or
ret
or
xchg
add
inc
ret
pusha
sbb
fs
icebp
adc
xchg
xor
mov
cmpsl
rorl
add
stos
rorb
add
je
shll
scas
add
nop
or
pop
sbb
adc
int
add
in
cmp
rclb
gs
mov
sbb
pop
mov
pop
pop
mov
std
push
sub
dec
xchg
call
xchg
inc
leave
or
leave
mov
mov
in
push
inc
addr16
int3
adc
add
dec
or
call
jge
and
add
mov
icebp
sbb
iret
out
lock
push
leave
add
add
sub
sub
push
adcl
shlb
or
fistl
addb
adc
movsb
and
adc
mov
add
add
or
test
xchg
adc
loope
push
mov
xor
loopne
sub
sub
xchg
leave
in
sub
adc
add
push
mov
test
andl
mov
push
or
adcl
addl
inc
add
sub
sub
push
dec
mov
jno
sqrtps
sub
lods
pop
xchg
insb
rclb
dec
fcoms
cmp
mov
jecxz
add
dec
sbb
add
xor
xchg
outsb
mov
bound
xchg
add
and
inc
add
sbb
sub
add
into
dec
and
or
mov
sub
arpl
push
sbb
adc
push
push
jnp
push
flds
insb
ja
cmp
pop
mov
lret
dec
cmp
jg
nop
push
add
jbe
sub
pusha
inc
pop
mov
cmp
mov
mov
lret
lods
es
dec
lds
in
mov
and
and
addr16
mov
add
cmpb
add
popa
add
loopne
dec
into
in
cmp
pop
cmpsb
nop
inc
adc
sbb
mov
aam
fwait
dec
inc
adc
push
inc
mov
sub
xchg
mov
popf
mov
fisubs
cwtl
cltd
pop
adc
iret
sbb
and
inc
and
dec
pop
push
cmpsb
mov
add
mov
mov
adc
dec
push
sbb
fcoms
xchg
adc
jb
test
sbb
negb
add
and
mov
rorl
and
movsl
imul
mov
or
popf
sub
mov
or
add
jmp
insb
adc
push
push
jg
inc
cwtl
fildl
sbb
dec
xor
mov
jl
or
and
jp
add
test
stos
fnstcw
and
xchg
shl
sti
xchg
push
add
pop
shrb
push
pop
xor
dec
sbb
pop
mov
pop
jg
xchg
pop
gs
test
and
sub
popa
popa
pushf
ret
push
mov
or
testb
lcall
pop
jg
jae
cmp
jne
aas
jb
xchg
or
add
popfw
std
ja
cwtl
add
sbb
add
and
push
ja
rclb
jae
stc
movsb
sbbb
mov
mov
clc
pop
jbe
lea
jmp
or
sub
movl
fwait
sbb
aam
aam
loopne
push
add
loopne
mov
jmp
loopne
fildl
dec
js
pop
outsb
push
or
sbb
inc
xor
dec
popa
or
int
call
or
jge
es
mov
push
ss
fcompl
jne
push
mov
pop
mov
pushaw
dec
pop
adc
pop
xchg
jge
push
or
scas
mov
mov
shlb
push
mov
push
add
ss
rcr
bound
fcoml
mov
pop
pusha
jle
es
mov
incl
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
jp
adc
cmp
cmp
je
loope
sti
add
add
inc
jmp
movb
mov
pop
mov
pop
cltd
idiv
xor
fucomip
ljmp
clc
push
cmpxchg
xchg
fsubrs
dec
cmp
push
hlt
in
xlat
rcrl
cmp
mov
pop
jb
les
imul
aad
adc
orl
test
push
in
in
push
mov
hlt
incb
adc
sbb
popf
and
lret
cmp
mov
dec
mov
xchg
dec
fsubl
daa
cmp
cwtl
fsubl
inc
dec
lahf
push
push
or
or
mov
lcall
add
push
inc
sub
sbb
clc
movsb
bnd
pushf
pop
push
les
cmp
mov
push
dec
or
xchg
push
dec
inc
in
push
sbb
adc
shr
aad
cmc
xchg
loope
lret
pop
sbb
mov
push
cmp
xor
xchg
xchg
je
cmp
outsl
adc
sbb
sbb
mov
adc
test
sub
and
mov
repnz
out
push
repz
lcall
cli
mov
movsb
rcll
inc
jg
loop
and
push
or
mov
shlb
xchg
clc
mov
push
sub
dec
aam
or
adc
and
aad
mov
xor
pop
jns
push
fisubs
dec
dec
xchg
jge
nop
jbe
push
jns
les
repnz
jle
push
mov
add
cltd
les
lret
pop
sub
roll
popa
adc
sbb
sbb
jae
out
xor
lods
shll
in
fsubr
nop
enter
push
fsubrs
pop
push
out
xchg
fistpl
ja
dec
aam
stc
sbbb
ja
inc
dec
ficoms
and
pusha
xchg
dec
inc
lcall
insl
fs
xchg
or
push
rolb
add
xor
ljmp
xchg
xor
lret
in
mov
mov
sbb
jmp
jns
leave
enter
or
push
pop
lret
push
xchg
pop
sub
jo
add
jge
sub
push
test
mov
pusha
cwtl
dec
jo
xchg
sbb
pop
mov
mov
sbb
js
cmp
pushf
add
leave
and
lods
adc
dec
xor
cmp
js
aam
fucomp
je
sub
test
rorl
arpl
or
and
sbb
sub
int3
imul
add
sub
out
xor
idivb
clc
clc
push
cs
fadds
dec
and
scas
sub
rorl
int3
xorb
jge
push
popf
aam
adc
nop
xchg
pop
push
mov
in
jbe
fldz
adc
aas
mov
pop
movsb
movl
inc
lea
adc
inc
hlt
cmp
push
test
out
mov
push
clc
nop
cmp
adc
push
push
mov
test
cmp
mov
pop
data16
or
pusha
add
and
push
sbb
add
adc
xchg
fs
and
xorl
pushf
mov
jge
lahf
sbb
push
lret
dec
add
in
sbb
xchg
aam
push
das
popf
add
out
push
or
and
sbb
mov
or
lret
or
mull
mov
xor
push
pop
icebp
xchg
cs
int3
imul
mov
js
dec
hlt
mov
decb
jl
es
stos
jmp
adc
mov
sbb
jmp
push
repnz
rcrb
cmp
outsb
add
or
and
cmp
cmc
sub
push
aaa
mov
adc
iret
xor
jb
shrb
add
in
adcb
jo
sub
mov
push
dec
testl
push
ficoms
out
or
jnp
or
fstl
add
lret
inc
dec
jp
ljmp
or
sub
rcrb
ss
leave
sub
pop
lcall
imul
mov
in
orl
jmp
sub
push
imul
je
cmp
pusha
inc
push
sub
push
push
mov
call
mov
ds
xor
gs
mov
add
pop
fildl
push
lahf
ss
or
cmp
mov
sbb
fisttps
scas
movsb
jae
mov
test
mov
cwtl
leave
mov
icebp
and
and
add
arpl
dec
outsb
sti
inc
jnp
in
out
and
pop
pop
adc
dec
add
inc
pop
jno
hlt
arpl
mov
adc
mov
sbb
fdivr
jge
call
fsubrl
cmp
ja
dec
push
pop
lea
shlb
inc
or
mov
inc
sti
cli
movsbl
and
xor
or
push
mov
clc
add
adc
movl
jl
popa
or
push
dec
pop
test
shlb
add
pop
fiaddl
xlat
xchg
xchg
push
shl
or
xchg
push
sbb
loope
and
loopne
fadds
inc
sbb
movsl
xchg
mov
daa
mov
cli
add
sbb
in
pop
cmc
or
jb
dec
data16
aam
call
or
or
add
xchg
xor
mov
mov
cmc
xchg
rol
mov
inc
add
cli
fsubl
or
mov
mov
jmp
cmp
loopne
and
add
lret
jl
cmp
jl
neg
pop
mov
add
add
jle
test
add
adc
mov
test
aam
in
push
jae
or
movsl
xor
inc
xchg
fcomp
pop
lds
dec
in
push
adc
mov
inc
sub
add
in
faddl
and
cwtl
pusha
mov
pop
and
fildll
lock
and
or
push
je
jge
adc
jo
dec
aaa
clc
dec
rclb
xchg
jecxz
fcomp
cmp
repnz
sbb
add
inc
push
push
or
lret
xlat
jb
xor
test
scas
cli
jo
mov
adc
xchg
jp
mov
in
push
bound
add
loop
in
inc
mov
andb
xor
push
mov
dec
stos
add
lcall
sbb
pop
shll
in
adc
cmpsl
push
dec
adc
mov
xor
mov
sete
xchg
cmp
pushf
adc
add
clc
pusha
cli
pop
in
add
or
rcll
addb
push
std
addr16
push
pop
inc
data16
inc
popa
fsubrs
or
mov
movsl
push
push
add
aad
xchg
nop
mov
pop
sbb
call
bound
jo
jne
ja
push
jno
xor
pop
daa
sti
insb
cmc
push
sbb
xchg
cmp
dec
in
iret
adc
out
jp
rorl
cmp
sub
pop
pop
cmp
push
cmp
in
xchg
loope
cmp
xor
ljmp
in
es
sbb
sub
cmp
pop
or
dec
xchg
xor
test
xchg
add
loop
add
sbb
or
sbb
subb
add
addb
add
leave
or
mov
dec
or
in
xchg
or
dec
insb
lods
movsb
fldenv
cs
add
xor
into
jge
stos
or
int
jle
push
inc
mov
add
les
cmpsb
ss
cmp
in
mov
jne
dec
dec
pop
adc
push
aam
test
cmp
das
dec
dec
lods
add
dec
sub
adc
rolb
push
adc
sbb
loope
mov
mov
and
popa
xor
pusha
ret
xchg
mov
xchg
inc
and
pop
pusha
pop
xchg
xor
add
or
or
jmp
cld
inc
add
jo
inc
imul
adc
in
add
push
or
ret
ret
mov
nop
push
add
inc
or
aaa
pop
fists
imul
xlat
mov
adcb
call
cwtl
fsts
movsb
rorl
add
ret
ret
in
and
jecxz
jae
add
in
cmp
inc
in
fidivl
sbb
sbb
or
cltd
lock
or
ss
test
sub
nop
xchg
or
sub
inc
jp
imul
fadds
pop
or
sub
push
pop
test
adc
mov
popa
fsubs
sub
cmp
pop
movsl
lds
movsl
shll
sarb
shl
icebp
out
push
dec
xchg
cmp
xor
jbe
pop
popa
es
or
aam
push
fwait
adc
pushf
dec
and
adc
dec
enter
iret
mov
adcl
lahf
or
mov
and
xchg
adc
push
popf
xchg
add
and
push
mov
and
adc
mov
pushf
lods
lods
in
adc
ljmp
or
jecxz
add
push
jae
push
add
dec
repz
add
or
pop
es
cmpb
xchg
xchg
insb
or
repnz
addr16
adc
lret
jne
shr
mov
or
mov
nop
mov
mov
xchg
cmp
push
or
fldl
cmp
arpl
int
xor
cld
add
sub
push
aam
mov
pop
insl
or
xchg
cmpsb
sbb
daa
add
dec
cmp
push
mov
in
cmp
push
push
mov
daa
push
mov
sub
xor
test
and
cmp
divl
cld
mov
dec
cmp
mov
pusha
ljmp
movsb
push
shll
in
std
xchg
add
adc
pop
jae
cmp
mov
icebp
jne
mov
out
fimuls
addl
rolb
lret
pop
lock
shr
jae
xchg
inc
loop
imul
loop
sub
fistpll
add
push
lock
cmp
in
pop
adc
push
add
push
or
dec
xor
jno
in
dec
pop
jo
pop
call
lcall
sub
xor
cmp
jae
mov
xchg
fucomip
std
aad
popl
mov
pop
mov
add
jmp
lods
jg
imul
aas
xor
push
sbb
popa
sbb
adc
push
cli
push
fmull
inc
ss
out
xchg
icebp
inc
fsubs
cmp
loope
out
sub
cmp
and
hlt
or
sub
sub
test
fmull
shll
lock
mov
iret
fwait
push
ret
cmp
ret
shll
stos
sarb
dec
pop
cmp
movsl
push
sbb
rclb
mov
mov
outsl
mov
jnp,pt
inc
or
and
cmp
sub
in
jb
imul
dec
pop
cli
pop
rol
cmpsl
push
push
pop
adc
jb
leave
sub
add
xor
add
adc
aam
sub
add
pusha
dec
xor
and
cmp
pop
push
xlat
insb
dec
addr16
sub
xor
in
cmp
xor
in
addl
call
addr16
cmp
imul
xor
imul
mov
add
subb
rclb
push
mov
jo
or
add
stos
pop
cmp
movsl
cmp
or
mov
and
ds
xchg
push
xor
xlat
mov
sbb
dec
punpckhbw
xor
pop
pop
lcall
jno
lds
xor
or
mov
push
mov
les
xor
and
xor
inc
orb
int
imul
xor
xchg
jl
daa
fiaddl
imul
add
stos
fimull
push
jbe
cmp
sub
and
rcl
movl
in
sbb
in
dec
popa
add
repnz
pop
loopne
xor
scas
adc
pop
add
popf
cmp
mov
sar
jmp
fidivrl
adc
je
push
cltd
add
push
scas
je
sbb
clc
dec
arpl
rcrl
inc
and
movsb
or
sub
sar
fisttps
popf
sar
and
add
icebp
mov
jno
js
out
xchg
cmp
jno
stos
and
sbbb
mov
sahf
mov
sbb
inc
mov
mov
pop
adcl
sbb
adc
iret
in
push
in
push
and
shrb
sbb
push
or
mov
scas
push
mov
inc
bound
leave
test
push
jg
cmp
jo
jno
lods
add
outsb
mov
and
and
hlt
bound
or
mov
pop
or
scas
cmp
dec
outsb
xchg
pop
inc
sub
jb
icebp
cmp
inc
jmp
and
jae
push
nop
push
movsl
add
out
faddp
in
push
jp
adc
dec
shll
pop
push
push
shll
push
jns
fs
int
adc
xchg
jmp
ret
sti
pop
xchg
pop
lods
test
outsb
inc
jge
sbb
shlb
sbb
xor
sbb
call
stos
sub
cmp
add
push
popa
arpl
mov
clc
and
adc
push
mov
enter
pop
andl
cmp
add
sbb
dec
mov
test
add
mov
add
push
or
and
inc
sbb
lock
cmp
cmp
dec
push
or
movsl
js
rcrl
xor
mov
jno
mov
or
js
aad
adc
jb
sahf
loopne
xchg
push
sahf
dec
daa
jno
and
jo
loope
add
imul
xor
push
mov
movsl
lods
mov
rcll
and
cmp
lods
xchg
and
sbb
inc
ficomps
cmpsl
movsl
aaa
jmp
sub
push
loope
xchg
adc
mov
stos
push
cmp
xchg
loop
pop
ljmp
push
sub
fs
push
fstl
mov
sbb
popa
fsubp
sub
lods
mov
sub
push
sbb
sahf
and
fbld
les
fwait
popa
and
and
xor
and
mov
std
and
xor
sbb
test
jns
shr
inc
data16
fs
adc
jne
dec
and
mov
push
fwait
lcall
or
sub
fmull
addb
std
ret
sbb
in
aad
jmp
inc
push
decl
pushf
inc
mov
or
nopl
stos
push
in
daa
int
mov
jne
push
sbb
pop
add
xchg
sub
or
adc
jne
and
sub
inc
ret
or
jne
lret
movsl
test
pop
fldenv
add
test
icebp
sub
mov
sub
repnz
pop
jge
push
mov
add
outsl
ljmp
inc
bound
loopne
sbb
subb
fs
push
cmp
mov
add
xchg
mov
or
into
push
cmp
mov
or
dec
xchg
push
and
stos
cmc
inc
je
dec
add
dec
jmp
add
adc
addb
push
or
adc
mov
pop
icebp
or
movsb
inc
and
out
mov
mov
popa
pop
add
inc
ret
push
add
sbb
add
push
int3
or
add
inc
orb
mov
orl
push
xor
push
ret
and
mov
stc
push
pop
ret
cmp
dec
sub
or
in
data16
jle
xor
add
xor
call
fldl
lcall
lret
push
sbb
adc
aam
fwait
mov
sbb
jle
mov
add
jnp
in
mov
mov
loope
add
enter
xor
and
insb
imul
dec
addl
js
inc
or
sarl
ja
adc
incl
pop
add
adc
jbe
push
mov
xor
jl
std
insl
iret
or
repnz
cmp
inc
jb
pop
pop
das
sbb
ljmp
movsb
shr
push
ss
pop
push
or
pop
ret
push
or
add
rclb
mov
xchg
inc
scas
xchg
nop
or
ds
movsl
xchg
xchg
add
clc
mov
xchg
dec
ds
sbb
pop
ja
and
jg
sbb
bnd
xchg
push
mov
inc
jmp
mov
popa
test
into
outsb
sbb
imul
sbb
in
mov
dec
pop
bsf
push
stc
cwtl
or
ja
pop
das
push
mov
jmp
in
leave
xabort
mov
addr16
ja
in
mov
out
stos
push
cwtl
js
in
hlt
gs
pop
cmpl
xor
xchg
push
dec
sub
pop
pop
xchg
inc
cmp
inc
mov
jmp
sub
divl
mov
sarb
xor
pop
sub
ret
dec
mov
inc
push
ljmp
test
xorl
or
and
adc
cmpxchg
stos
mov
xor
pop
jae
inc
call
push
and
jbe
outsb
and
push
add
sbb
add
adc
and
pop
jl
or
loope
outsl
call
push
das
dec
test
mov
repnz
xchg
js
es
jbe
cmp
or
mov
cmpl
mov
imul
xorb
jl
mov
adc
insb
mov
sbb
pop
sub
pop
pushf
adc
popa
push
xchg
mov
lea
aad
decb
and
adc
sbb
shl
inc
push
inc
int
ret
andb
dec
push
leave
aam
xchg
add
xchg
adc
sbb
pop
fistps
sti
xor
xor
cmp
sbb
sub
aam
pop
push
push
jnp
xor
add
xchg
call
ret
inc
sbb
push
dec
add
xor
add
stos
xchg
jae
mov
fdivr
sbb
js
fmull
lcall
cmpl
pusha
popa
lods
mov
push
xchg
mov
std
cmc
or
cmpsl
popf
jo
shlb
fldl
lea
xchg
cwtl
loopne
fsubr
lock
ret
insl
adc
mov
add
pop
rclb
test
sbb
sti
repz
mov
cmp
lea
sarl
add
sbb
xchg
xor
xchg
in
bound
dec
jae
or
xchg
imul
dec
sarb
xor
mov
out
and
inc
add
fdivr
xor
xor
jg
pop
inc
jmp
popa
fwait
inc
lods
push
ret
xchg
push
popf
inc
mov
addr16
mov
cli
push
mov
loopne
pop
pop
lea
xor
sbb
imul
lea
mov
loop
sbb
push
les
insb
js
nop
cmc
incl
outsb
mov
and
fsubrl
shrb
and
dec
pop
shlb
add
faddl
ss
fnstcw
jl
or
dec
nop
or
stc
mov
adc
mov
mov
inc
mov
pushf
cmc
es
sahf
inc
popa
sub
mov
push
jge
xor
ret
mov
das
inc
sbb
movsb
int
scas
in
gs
in
loopne
arpl
imul
inc
sub
aaa
jmp
enter
ret
add
imul
addr16
addb
fildl
dec
out
dec
aam
lods
dec
shlb
hlt
call
or
enter
lret
call
push
mov
and
cmpsl
add
lds
loope
bnd
ret
push
sub
dec
push
xor
test
leave
cmp
xor
sub
aad
dec
adc
and
cmpsb
jns
icebp
and
arpl
mov
cmpsl
adc
dec
lahf
sbb
dec
pop
or
and
cltd
jb
jp
mov
push
add
jns
sbb
push
sbb
int3
and
adc
push
adc
dec
pushf
subl
and
pushl
imul
adc
fbld
loopne
mov
aam
adc
int3
sub
inc
cmp
mov
test
cmp
sub
mov
push
inc
and
and
pop
mov
jbe
popf
or
inc
inc
inc
jl
push
mov
add
sbb
loopne
popa
movsb
or
dec
add
aam
out
pushl
inc
and
or
les
je
mov
data16
adc
nop
sbb
adc
push
inc
not
xor
mov
fisubl
add
cmp
mov
or
popa
fmull
push
sbb
into
jns
mov
xor
dec
jg
push
dec
or
outsl
mov
insl
jge
stos
ret
inc
cmp
dec
movsb
orb
ret
xor
xchg
daa
add
out
in
in
jmp
cmpsb
push
test
dec
out
punpckhwd
push
xor
inc
pop
and
imul
inc
sub
cmp
mov
loopne
stos
or
cwtl
dec
add
xor
or
adc
je
jno
and
pop
mov
cmpsb
enter
lods
sbb
mov
mov
and
outsb
xchg
cmpsb
mov
es
sbb
xchg
andl
mov
sbb
add
lret
jo
sub
mov
je
js
add
or
sub
cmp
dec
dec
fimuls
mov
int3
add
bound
pop
dec
add
push
sub
es
dec
insl
inc
sbb
and
ret
add
cmp
and
push
and
jmp
jne
mov
lcall
jle
or
nop
jne
xor
andl
mov
add
imul
push
mov
arpl
adc
adc
xor
or
or
sbb
pop
adc
mov
push
shlb
rcll
sbb
repnz
lahf
or
mov
add
lock
aam
and
add
out
add
out
or
push
cmp
adcb
and
xor
cmp
push
push
ja
push
add
lcall
pop
mov
add
xor
jns
dec
mov
jae
cmp
sbb
stos
xor
cmp
aam
roll
iret
ret
push
int3
push
dec
sub
xor
push
add
in
jne
fiadds
inc
hlt
push
or
push
aam
or
ds
call
daa
mov
aaa
in
mov
aad
push
notb
stos
cwtl
push
pop
fs
or
adc
jecxz
movsl
popa
std
ss
and
inc
nop
lret
and
int3
xor
fdivrs
lea
xchg
xchg
sub
pop
fcom
dec
mov
jnp
adc
lods
test
mov
push
pop
test
cli
mov
and
add
add
mov
aam
jmp
push
popa
repz
fadds
sub
mov
add
sahf
insl
cmp
jae
push
add
and
js
scas
je
jo
mov
popa
jns
push
mov
out
mov
push
jmp
ja
je
pusha
movsl
loopne
pop
int3
jnp
xchg
xchg
jmp
or
or
sbb
pop
mov
sbb
jb
pop
push
rolb
mov
cmp
out
inc
sub
sbb
fcoml
push
add
bnd
dec
add
mov
in
dec
mov
dec
sti
jnp
xor
or
and
lods
sub
fs
xchg
out
mov
cld
insl
repz
test
imul
add
add
mov
pop
mov
call
leave
pusha
adc
jo
aam
and
cmp
jecxz
neg
pop
sbb
cmp
rcrb
sbb
in
inc
add
lods
adc
out
push
test
data16
in
mov
jo
repnz
push
jmp
mov
mov
popf
mov
ret
jnp
adc
ljmp
jmp
in
sahf
xor
dec
insb
rolb
sbb
adc
std
pop
sub
xor
clc
add
xor
in
adc
sarl
mov
pop
lds
add
ljmp
pop
les
jl
jne
inc
cwtl
cmovle
js
sbb
outsb
or
roll
sbb
mov
bound
sarl
mov
sub
xor
jp
pop
xor
jmp
fcoml
jo
dec
dec
mov
adc
cmp
and
out
hlt
add
es
xchg
dec
xor
jmp
subl
adc
ljmp
jmp
mov
sub
in
sbb
loopne
and
add
and
test
cmp
or
mov
aaa
mov
andb
fnstenv
enter
sub
adc
xchg
xchg
mov
lds
inc
adc
insl
push
push
cmp
sbb
cmp
iret
lret
pop
dec
clc
neg
push
sbb
push
adc
push
push
push
call
cmp
inc
push
jbe
adcb
test
push
or
cmpsb
mov
and
push
jmp
mov
mov
and
cmp
jae
mov
jmp
add
pop
insl
adc
or
inc
insl
loopne
lret
jge
push
pushf
rolb
ss
mov
xor
adc
icebp
cmp
inc
or
adc
inc
adcb
xor
out
scas
push
push
imull
sub
adcl
pop
add
mov
movsb
pop
add
das
xor
mov
add
cmpsb
push
movsl
mov
dec
adc
add
push
sub
lock
adc
mov
mov
test
sbb
cwtl
jns
popf
mov
push
loopne
fisubl
inc
pop
fdivrl
inc
mov
repnz
incb
fiadds
shr
push
push
and
mov
and
add
mov
push
fcmovbe
mov
push
push
vmread
xchg
enter
nop
mov
push
leave
jbe
sti
mov
insl
shl
push
aad
fmul
sarb
lret
pop
dec
sbb
sub
pop
sub
inc
loopne
fdivrs
adc
adc
in
pop
fdecstp
cmp
out
cmp
int3
mov
sub
adc
jb
cmp
ljmp
gs
in
mov
icebp
cmp
pop
mov
lret
sub
pusha
sub
jp
insl
xchg
pop
cld
push
push
push
repnz
fcoml
daa
add
add
add
cmp
insb
cmp
scas
inc
cmp
adc
and
shlb
mov
push
loop
hlt
or
cmp
test
inc
xor
js
insb
fimull
cmp
stc
xor
enter
std
pop
mov
sub
repnz
das
xor
lea
adc
loopne
mov
sti
rep
movsw
push
xchg
or
mov
xor
mov
mov
adc
ljmp
out
dec
mov
inc
mov
adc
push
movb
nop
xchg
cli
xor
ret
cld
jg
push
mov
pop
fdivrl
cmp
movsbl
xor
scas
xchg
cwtl
jge
mov
push
push
ja
aaa
sbb
and
jbe
push
cmp
je
push
push
sub
sarl
lods
lea
or
in
and
fwait
les
mov
dec
rolb
pop
mov
jne
pop
dec
outsl
sarl
mov
push
inc
add
mov
fistl
cmp
stos
dec
or
notb
jmp
and
dec
cmp
inc
add
jl
adc
sbb
jl
push
mov
in
int3
rol
inc
mov
pop
mov
inc
xorl
insb
sarl
cmp
push
push
lock
dec
lock
loope
or
ficompl
clc
das
mov
loop
mov
lock
inc
push
adc
jge
pop
or
jge
pop
mov
xor
cmp
cmp
add
push
cmp
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
pop
jmp
and
or
jmp
pop
push
cmp
fimull
push
cmp
pop
aaa
jns
mov
test
sbbl
cmp
jnp
mov
push
jae
xor
iret
repz
repz
mov
mov
iret
repz
fneni(8087
in
cmp
repz
sahf
out
xchg
or
jns
sbb
sub
xor
or
add
and
or
or
push
pop
idiv
call
adc
adc
sbb
sbb
push
pop
and
and
aas
insl
adc
push
xor
dec
jo
push
std
push
or
jge
mov
xor
inc
push
push
xor
or
pop
pop
add
push
or
mov
sbb
lock
popa
sbb
dec
or
je
neg
nop
roll
and
lods
roll
das
movsl
inc
repz
sbb
jbe
pop
push
dec
je
cmpsl
pop
int3
mov
pop
dec
dec
dec
inc
push
sub
fs
xchg
nop
or
sub
or
clc
add
inc
inc
pusha
aam
push
push
iret
dec
in
cmp
push
jmp
xchg
test
cltd
out
push
jae
push
dec
je
push
and
add
add
dec
sahf
popf
mov
pop
push
hlt
dec
mov
sub
lret
xor
ja
fnstsw
add
or
or
add
test
pop
mov
lret
jno
inc
stc
pop
pushf
rcrb
dec
xchg
and
adc
sbb
xchg
les
adc
dec
jne
jns
or
mov
push
mov
js
mov
lahf
std
adc
icebp
test
loopne
add
hlt
xor
mov
add
aaa
mov
sbb
mov
pushl
push
sub
cmpsb
or
movsb
add
push
xor
sub
xchg
dec
pop
test
mov
andl
push
fisubrs
push
jne
pop
or
push
push
push
pop
loopne
imul
fwait
or
test
nop
push
mov
jae
neg
jmp
mov
jne
sbb
jne
jno
mov
jp
aas
clc
add
popa
sbb
mov
inc
scas
xchg
mov
mov
ret
add
fmull
loopne
sti
mov
adc
jle
call
xor
cmpsb
push
add
je
dec
sahf
jnp
xchg
xchg
setg
push
clc
sbb
je
xchg
clc
sbbl
xor
mov
lock
or
adc
out
popf
movsl
ret
cmp
cmp
pop
or
or
int3
ficoml
inc
mov
hlt
mov
ficoms
loop
mov
loopne
loop
xor
rclb
jne
pop
lods
mov
push
dec
adc
lock
or
lods
rcrb
mov
inc
adc
test
push
popl
stc
dec
ds
out
pusha
sbb
push
push
sbb
add
mov
clc
sbbl
mov
jo
test
jl
out
bound
loope
mov
push
sub
mov
or
loop
sbb
adc
pop
add
test
pop
rcl
mov
xlat
ret
inc
mov
mov
insb
or
dec
rcll
jmp
movsb
mov
popl
rclb
lcall
add
data16
subb
jp
sub
aaa
leave
or
jae
xorb
imul
loopne
enter
imul
and
test
scas
xchg
or
lret
add
xor
xorl
shlb
and
adc
bound
xlat
scas
push
add
fs
imulb
faddl
lods
ret
stc
jno
push
pop
adcb
jne
sti
les
rcrb
loopne
push
enter
push
enter
mov
add
nop
flds
pop
repnz
mov
push
enter
xor
jno
add
add
push
les
lods
add
loopne
je
into
push
or
xchg
cld
call
jno
push
mov
adc
dec
ret
pusha
inc
sbb
cli
add
add
loopne
or
sbb
mov
comiss
and
cwtl
sbb
adc
lret
jae
les
push
enter
jns
or
testl
add
push
add
mov
dec
loope
mov
inc
inc
inc
test
mov
sbb
stos
push
sarb
pop
rclb
scas
out
pop
mov
xor
pop
push
push
push
addb
mov
push
outsl
cwtl
outsb
fsubrl
pop
bnd
adc
mov
test
lret
dec
pushf
nop
xor
mov
add
pop
cli
or
in
lahf
test
inc
mov
jno
xchg
sbb
push
sarl
pusha
daa
push
sub
xchg
jle
pop
daa
push
test
fldl
pop
lcall
shrl
add
pop
call
roll
rcl
mov
aaa
repz
dec
pushf
sub
add
xchg
test
pushf
and
add
rclb
push
lock
pop
add
xchg
or
mov
xchg
call
fsubrl
rol
adc
shll
jb
je
inc
lock
add
xchg
fidivl
xor
pop
mov
aaa
leave
xchg
repnz
inc
mov
daa
or
push
xchg
rclb
mov
mov
inc
movsl
or
or
dec
push
push
mov
add
nop
mov
xchg
subl
leave
or
jo
fisttpll
sbb
sub
jge
adc
dec
dec
inc
adc
mov
nop
inc
jl
inc
sarl
jo
in
cmp
xchg
or
fwait
inc
movsl
ss
scas
mov
in
xchg
inc
adc
das
sti
mov
enter
test
lock
js
or
dec
push
inc
pop
sub
mov
enter
sub
mov
mov
std
test
aas
sub
pushf
and
or
je
test
inc
cmp
jl
movsb
call
xor
adc
cmpsl
out
mov
sbb
pop
adc
shrb
xchg
mov
jge
in
or
add
mov
xchg
lock
push
sti
test
mov
xor
mov
subb
lea
out
pop
cmp
jne
cld
in
push
cmp
js
inc
push
scas
push
add
push
shlb
mov
sub
sub
clc
mov
mov
js
push
sbb
pop
jno
and
into
nop
cmp
stos
sub
stos
jmp
fs
fnstenv
push
pop
mov
mov
jmp
test
mov
out
dec
outsl
add
xor
sbb
sbb
inc
pop
adc
adc
push
mov
icebp
or
xchg
pusha
or
pop
jb
fdivrl
xor
nop
xchg
sbb
mov
push
push
sbb
or
fsubrl
mov
sbb
cvttps2pi
sub
adc
movsb
rcrb
leave
adc
and
mov
outsl
std
or
mov
sbb
cmp
jo
mov
movb
mov
inc
adc
dec
xor
movsl
test
lea
adc
jle
mov
addb
pushl
lds
pop
lea
lea
cmp
jae
push
mov
push
push
in
xchg
call
cltd
or
pusha
xlat
or
dec
or
add
loope
pop
movsb
jge
inc
cli
pop
dec
sub
movsbl
mov
inc
cmp
jbe
mov
xchg
sbb
sbb
nop
push
fcomps
pusha
cmp
inc
jns
sbb
jecxz
test
xor
shl
inc
add
inc
jbe
clc
adc
push
sbb
push
ja
push
enter
push
push
aaa
dec
hlt
clc
pop
cmp
cld
xchg
cmp
pop
add
or
lret
jo
adc
adc
adc
pop
sbb
mov
and
push
push
outsb
xchg
lret
subb
xchg
outsb
xchg
xor
cmp
movsb
xor
inc
dec
dec
jmp
push
xor
inc
imul
sbb
into
jo
push
rclb
jb
ljmp
mov
test
pop
jl
add
data16
ret
push
mov
jbe
or
pusha
nop
or
push
cmp
jl
sub
lea
cmp
xchg
cmp
je
dec
jecxz
add
push
xor
ja
or
sbbl
fisttpl
out
dec
fidivrs
mov
repnz
lods
sub
pop
pop
and
cmp
push
orb
pop
lea
pop
and
int3
jmp
out
push
add
xor
mov
clc
mov
sti
and
into
mov
and
and
lret
insb
jns
outsb
inc
mov
rcrl
mov
ret
sbb
sub
test
movsl
cltd
cltd
mov
cmp
pop
pop
das
sub
xchg
mov
dec
mov
les
sbb
push
fwait
dec
lds
xchg
xchg
das
cltd
sub
or
mov
adc
add
test
and
push
cmp
jge
inc
push
hlt
cmp
jl
mov
xlat
jle
ret
pop
lock
xor
inc
add
mov
aad
fwait
imul
xchg
sub
mov
jge
subl
pop
add
pop
xor
ds
push
adc
pop
dec
or
mov
adc
adc
or
js
add
pop
cmp
inc
pop
inc
pusha
loop
mov
popa
loope
jae
inc
int3
fistpll
cld
mov
cmp
mov
dec
add
adc
mov
inc
or
lret
mov
mov
jne
mov
and
sub
or
inc
mov
loopne
in
inc
sub
mov
push
add
mov
sub
daa
adc
xor
and
es
pop
cltd
jmp
mov
hlt
in
push
mov
scas
mov
push
add
cmp
jns
push
add
sbb
mov
sbb
jge
add
mov
mov
outsb
and
xorl
pop
mov
mov
mov
sub
xor
jne
push
out
roll
lahf
addb
scas
xor
fwait
popf
imul
mov
lods
inc
jno
or
mov
inc
add
push
sub
popf
jp
or
push
and
adc
call
jno
inc
xchg
inc
jne
mov
adc
js
cmp
and
xor
ss
sbb
or
orb
push
jmp
sbb
push
out
jnp
daa
or
jne
xlat
jmp
inc
jl
cmc
add
leave
test
mov
sub
pop
or
cs
push
mov
sub
mov
scas
mov
in
mov
movswl
lds
cmpb
pop
or
fists
or
outsb
nop
mov
loope
xchg
fdivl
adc
jecxz
fwait
test
sbb
sbb
add
scas
jo
push
add
push
push
bound
and
push
pop
xorb
outsl
cmpb
xchg
arpl
add
push
jne
pushf
mov
pop
lret
add
cmpsl
dec
lea
pushl
push
or
xor
imul
pop
les
icebp
outsl
popa
aad
push
ret
jnp
jb
inc
inc
inc
ret
push
mov
adc
lret
sbb
push
jle
mov
ja
pop
std
decl
mov
mov
push
inc
xor
aaa
pop
or
lahf
and
sbb
add
push
cs
cmp
inc
jmp
iret
je
loop
cltd
xchg
and
sbb
dec
imul
push
mov
cmc
into
sbbb
cmp
add
mov
sti
dec
sub
cmp
scas
jle
inc
dec
popf
scas
aam
jl
jbe
adc
inc
push
mov
dec
pop
ret
fiaddl
add
inc
pop
fwait
out
je
xor
inc
or
xorl
lods
push
stos
ret
push
test
pop
cmp
rorb
cs
adc
or
int3
sbb
dec
rclb
mov
inc
out
scas
push
cmp
push
mov
dec
stos
cmpl
lahf
rclb
inc
lahf
xor
shll
dec
movsl
jae
push
lock
adc
xchg
arpl
test
jmp
inc
cmp
imul
add
in
xchg
inc
inc
mov
sbb
sbb
add
or
pop
pop
push
pop
fsubrs
push
xchg
and
mov
or
cltd
pusha
or
jge
jo
das
in
sbb
xor
adc
pop
test
shrb
sub
push
dec
xor
loopne
pop
push
add
mov
pop
push
lods
pop
mov
push
nop
xor
mov
pop
sbb
fucomi
push
push
loope
subl
xchg
xor
sarl
int3
inc
sbb
xchg
mov
xorb
aad
lock
fwait
cs
xorl
pop
es
out
aad
jno
andl
push
aad
xchg
or
in
and
mov
iret
dec
lret
inc
movsb
pusha
stos
sbb
clc
push
mov
xor
es
sahf
or
mov
faddl
fstl
fldz
fcomp
fnstsw
addl
cld
fldl
fsubr
pop
faddp
cmp
push
ds
sub
push
testb
or
or
xchg
push
inc
aaa
xchg
clc
inc
or
push
out
cvttsd2si
inc
push
mov
pop
hlt
inc
pop
es
hlt
pop
hlt
dec
push
pop
cli
jl
cmp
jl
ret
push
lea
jge
jmp
loop
push
xchg
lods
pop
jne
dec
push
lock
sbb
es
xor
mov
sub
rcll
das
cmpsl
jbe
push
xchg
mov
hlt
sti
xor
pop
movl
sub
clc
jnp
rcr
mov
mov
cmp
dec
and
mov
mov
lea
loope
mov
ja
cmp
mov
xorl
and
sbb
jne
mov
test
fiadds
add
add
adc
and
add
pop
subb
mov
movl
ljmp
in
jp
mov
loope
dec
cmpsl
mov
mov
mov
sarl
fimuls
enter
aas
fsubrl
loopne
mov
imul
or
ret
add
sub
cli
test
or
push
std
ljmp
jle
adc
inc
pusha
add
subl
mov
leave
pop
test
or
jmp
rol
aas
fimuls
add
add
data16
popa
dec
arpl
xlat
jmp
and
pop
mulb
jbe
mov
pop
movsl
aam
xchg
insl
push
pop
rcr
jl
sbb
or
xchg
inc
jmp
mov
ja
push
xchg
sbb
cmp
rolb
cmpsl
movsl
and
or
inc
inc
cmp
xchg
jno
xchg
js
lcall
sub
add
dec
jle,pn
shlb
jge
sub
ss
ss
mov
les
pop
sub
sub
sti
xor
sub
cwtl
add
jae
fistpl
jo
add
aaa
add
popa
push
add
push
pop
popf
mov
pop
inc
xor
fdivrl
add
push
or
and
pop
jb
adc
lret
or
add
jno
sbb
lock
xor
and
xchg
add
sarl
in
inc
rcr
dec
loope
in
sub
and
pop
sub
inc
sub
or
and
sbb
sub
aaa
mov
sbb
and
xchg
and
lret
add
lods
cs
xor
push
jae
add
mov
add
or
cmp
imul
add
dec
or
and
or
or
insl
int
jo
stos
pusha
or
push
lods
xor
dec
adc
lock
test
push
pop
push
mov
sbbb
sub
mov
pop
mov
and
shrb
sbb
movsb
mov
adc
mov
in
adc
add
shrb
loope
and
rcrl
or
repz
sub
cmp
mov
sub
ja
push
ret
pop
out
je
loope
mov
xor
push
jmp
push
sbb
push
daa
hlt
icebp
add
fwait
mov
cmp
subb
sub
jo
fstpt
mov
ret
or
and
xor
mov
aam
add
fdivs
lods
add
lea
add
test
in
mov
sbb
js
sarl
cwtl
or
pusha
sub
mov
push
in
jb
add
and
scas
mov
ja
outsb
sub
pop
push
pop
jbe
push
xor
test
xchg
push
push
mov
mov
and
mov
push
cmp
arpl
jl
aam
arpl
push
push
outsl
test
pop
xor
aaa
inc
push
mov
lahf
or
and
aad
cltd
or
int
xor
add
or
or
and
sbb
inc
mov
push
xchg
ss
push
sbb
outsl
mov
test
push
xor
lea
push
sbb
or
and
add
add
mov
or
clc
dec
mov
in
jb
push
push
dec
xchg
jl
mov
add
inc
inc
shlb
xor
sqrtps
and
inc
or
or
int3
rcl
repz
lods
pop
vmovapd
push
push
out
sub
js
cmp
push
call
pop
out
jb
scas
lds
and
and
clts
jne
add
inc
test
or
mov
ret
push
inc
leave
test
adc
xchg
or
xchg
js
psubusb
loop
and
push
add
push
push
pop
mov
cmp
push
jmp
jl
add
test
rcrb
push
repnz
pop
shll
pusha
fs
lahf
push
mov
pop
and
in
gs
adcb
sub
je
push
add
daa
or
pop
and
pop
jmp
loope
test
aad
movsb
nop
test
stos
push
fistl
jb
fsubrs
xor
sti
adc
insb
xor
in
lods
sbb
jmp
or
pusha
xor
aam
mov
or
das
jns
call
pop
adc
and
call
add
incl
push
push
and
dec
cmp
xchg
mov
in
cmp
xor
push
sbb
mov
push
pusha
test
mov
inc
jbe
push
shlb
push
sbb
sub
push
inc
in
mov
loope
inc
lret
paddb
pusha
push
stos
add
mull
lock
jge
push
and
jg
and
dec
sbb
jno
mov
and
mov
add
lret
mov
push
inc
les
xchg
je
inc
push
pushf
xchg
adc
sub
mov
jmp
lcall
dec
lods
ret
or
push
xlat
das
cld
xor
sbb
inc
fs
xor
mov
push
cs
sbb
insl
loopne
sbb
push
or
pushf
and
repnz
test
sahf
add
iret
sbb
les
movsl
sub
test
xor
ret
push
adc
jnp
data16
dec
roll
hlt
push
pop
out
test
pushf
mov
lahf
push
xor
rorl
sbb
movhps
mov
sbb
xchg
xorb
pop
fwait
loopne
xchg
pop
lret
sbb
inc
negb
ficoms
sbb
and
js
adc
adcl
loopne
je
adc
mov
push
push
inc
push
push
mov
pop
das
loop
sbb
loopne
popf
movsl
roll
repnz
jmp
adc
sbb
xlat
mov
lds
xor
push
mov
pushl
adc
nop
inc
nop
and
scas
out
xchg
jae
and
lods
adc
add
add
in
movsl
add
jmp
pop
mov
add
das
sub
cmp
xor
nop
filds
jge
mov
jle
js
adcb
mov
loope
sub
add
in
lahf
mov
int
call
xor
cmp
sti
and
testl
jb
push
out
push
ficoms
in
lea
es
scas
pop
popf
les
and
jl
dec
mov
push
xchg
into
test
sub
mov
and
in
sub
sahf
iret
sub
mov
rclb
lea
inc
pop
push
lods
push
iret
mov
add
or
push
adc
and
fisubrs
add
add
sub
adc
jo
out
les
or
leave
add
test
cmp
mov
push
cmp
mov
xchg
or
sub
lsl
pusha
xchg
push
sub
lret
pop
loopne
pop
inc
or
push
or
push
call
sbb
cs
rcl
sub
ja
mov
cmpsl
test
adc
jnp
or
mov
add
mov
sarl
or
pop
jo
inc
stos
and
mov
jns
and
sub
mov
stos
cmp
jecxz
adc
xchg
sbb
cmp
push
xor
dec
cmp
pop
adc
sub
lret
jecxz
and
add
pusha
in
jo
shlb
nop
pop
mov
inc
in
clc
dec
inc
add
push
xchg
js
or
rcll
xor
xor
icebp
sub
jne
test
adc
adc
or
dec
or
sbb
sbb
fisubs
push
sub
into
jae
mov
lods
orl
and
aam
cwtl
mov
pop
push
in
dec
push
or
mov
fnsave
add
repz
sub
data16
inc
mov
add
fisttpl
jle
movsb
dec
mov
mov
mov
loope
enter
push
mov
sahf
adc
ret
push
dec
sub
push
stos
cmp
sub
add
push
shlb
arpl
ret
or
imul
mov
jne
call
imul
mov
insb
xorb
push
outsl
cld
xchg
and
hlt
mov
push
lahf
and
out
jle
into
push
xchg
cmp
inc
fisubs
xor
or
popf
faddl
nop
xchg
js
push
loopne
in
fs
push
push
sbb
push
je
push
cwtl
or
add
cmovne
lods
daa
in
andb
cmp
push
sub
insb
add
cli
sbb
mov
and
push
push
xor
or
lods
sub
dec
or
fsubl
mov
popf
inc
in
and
adcl
dec
sub
xchg
cmp
repz
xchg
mov
mov
fsubl
addb
pop
pop
dec
dec
iret
ret
mov
inc
je
std
inc
loope
sti
add
sub
push
je
dec
jo
push
mov
test
xchg
add
cmp
jge
fimull
ljmp
out
push
jl
mov
lods
pop
test
sub
pop
pop
test
sbb
xor
or
push
mov
push
push
inc
inc
fldl
lret
xlat
stc
add
or
ja
dec
jecxz
push
aas
or
cli
lcall
mov
and
mov
rcrb
or
or
add
aam
jmp
pop
mov
mov
enter
inc
dec
daa
lret
xor
inc
cmc
add
push
add
or
xchg
or
push
dec
inc
shlb
xlat
hlt
or
lds
mov
mov
hlt
dec
mov
aaa
incb
test
mov
mov
or
je
pop
fucomi
lahf
pop
and
jne
mov
inc
cmp
es
adc
mov
mov
pushf
jne
mov
lea
xor
cmpl
add
pushf
or
and
jno
or
test
jl
rcr
fidivl
jbe
dec
movsb
or
inc
or
cld
loopne
jo
inc
xchg
fwait
sub
mov
sub
mov
jl
adc
js
imul
mov
jl
or
dec
rolb
gs
inc
icebp
add
js
into
push
jns
or
push
mov
inc
pushf
nop
pusha
dec
or
sbb
sbb
mov
pusha
lods
xor
cld
cld
movl
pop
mov
mov
aaa
lea
dec
sarb
mov
mov
loopne
add
adc
dec
lods
xchg
fwait
in
shll
rcrb
xchg
mov
push
mov
gs
popf
adc
mov
or
add
lcall
das
xchg
adc
mov
test
sub
pushl
cmpb
jp
mov
mov
cmpsl
push
pop
sbb
enter
enter
and
jbe
sub
repnz
ja
jle
push
cwtl
std
in
lods
xchg
sub
les
es
nop
or
movsb
pushf
mov
gs
add
bts
adc
push
push
popf
sbb
or
jne
sti
dec
test
rcrl
jne
enter
jle
xchg
clc
xchg
jo
push
mov
movsl
xorb
int3
push
jge
mov
cld
cld
clc
or
movsl
ja
pop
mov
std
mov
push
sbb
xchg
loop
xor
ds
lock
out
nop
rolb
roll
or
lret
add
add
loop
push
lea
jnp
call
push
pop
jnp
adc
mov
imul
and
jbe
inc
ja
mov
lea
cmp
mov
jbe
popl
mov
vmwrite
jno
pop
inc
pop
cmp
sbb
mov
add
setg
lods
orl
pop
cltd
je
jmp
orb
push
mov
nopl
xchg
or
mov
jmp
adc
arpl
push
inc
js
push
sbb
add
mov
adc
push
nop
push
and
inc
and
stc
cmpsl
test
icebp
or
test
xlat
lret
sub
cmp
sbb
inc
loop
hlt
push
dec
cltd
lret
xchg
add
xchg
xor
xlat
xlat
lret
int
add
cmp
and
jle
lods
inc
sahf
cmp
fxch
sbb
ss
std
sbb
mov
subb
fisubl
mov
xchg
xor
xor
push
or
or
xchg
outsl
jns
mov
and
test
loopne
push
stos
inc
in
mov
adcb
hlt
pusha
dec
xor
sbb
mov
mov
push
nop
lods
jmp
out
inc
movsb
pop
mov
adcl
rorb
andb
roll
push
fdivrl
jns
push
dec
mov
imul
sbb
das
rolb
es
call
add
pop
mov
xor
test
repnz
fdivrs
push
mov
or
pushf
pop
pop
sbb
roll
or
add
mov
adc
cld
outsl
into
add
push
shlb
jecxz
ja
push
mov
mov
xor
leave
psraw
dec
xor
addr16
push
ret
pop
mov
les
pop
xor
and
and
mov
fidivrl
mov
or
pop
loop
lahf
sbb
mov
adcl
fs
dec
sahf
push
or
pop
dec
movsb
mov
jb
push
pop
and
add
call
cmp
iret
scas
in
fldcw
pop
mov
or
or
inc
or
xchg
xchg
imul
ja
push
lcall
fwait
or
or
lock
pop
and
lock
sbb
xor
mov
mov
dec
or
scas
in
push
mov
leave
lds
sub
add
cmp
aaa
xchg
add
jae
inc
fmuls
shll
push
mov
ret
cmovns
insb
push
das
sbb
inc
fcoml
sub
ret
lret
or
xchg
std
sub
mov
pusha
adc
int3
and
rcl
mov
rorl
mov
dec
cmp
or
push
add
cmp
pop
mov
scas
jo
cli
pop
mov
mov
pop
adc
movsl
pushl
push
dec
mov
mov
sbb
jb
push
mov
lods
ret
stos
test
cmp
sarb
ret
cmp
leave
incl
data16
bound
shll
inc
inc
jmp
inc
jb,pn
jns
pop
sub
pop
sub
push
xchg
inc
cmp
cmp
xor
sbb
mov
mov
cmp
sub
add
push
test
out
sub
add
sub
sub
mov
sub
and
or
mov
and
subl
dec
popf
stos
je
std
popf
xchg
push
int
test
push
or
dec
push
sub
or
aad
jbe
mov
insb
or
and
xor
adc
je
mov
push
mov
in
hlt
sbb
in
add
push
push
mov
xor
sub
mov
stos
je
mov
xchg
test
cmpsb
addb
test
dec
test
sub
loop
sub
xlat
jne
loopne
xchg
push
xchg
inc
push
movsb
fsubl
mov
add
adc
push
xor
mov
push
fdivrl
or
rol
pop
les
imul
xor
out
movsl
jnp
in
aam
add
inc
adc
insb
and
push
push
fisubs
jno
les
je
jl
add
sbb
push
dec
clc
aam
jbe
or
je
add
lret
je
pusha
ficompl
ret
sub
inc
scas
test
mov
nop
nop
dec
ss
popf
icebp
xchg
push
xor
xor
sahf
call
mov
ret
mov
aaa
xor
pop
pop
push
sbb
push
test
jns
inc
jb
push
adc
cltd
stos
sbb
adc
adc
dec
jnp
adc
and
push
xchg
jge
out
and
pop
js
or
and
xchg
lret
mov
jp
cmc
jmp
push
shlb
shrl
lahf
js
xchg
pop
inc
dec
lss
es
scas
inc
imul
mov
sub
test
gs
fldcw
dec
pop
cmp
jnp
mov
popf
adc
repnz
clc
push
dec
xorl
hlt
mov
push
test
xlat
xor
dec
lods
ret
sbb
shr
cmpsl
std
outsl
xor
scas
xchg
push
in
jnp
mov
arpl
mov
cmp
jl
in
mov
imul
push
sub
jle
fsubs
sub
insb
inc
mov
mov
sbb
std
sbb
mov
fcoml
push
aas
in
insb
pop
mov
enter
cmp
pop
addb
out
add
mov
jmp
dec
and
jne
roll
add
dec
pop
test
xor
shr
xor
outsl
fsubl
pop
adc
xchg
popa
dec
lock
not
loop
test
pop
decl
sbb
push
movl
call
sar
jbe
add
jmp
add
mov
or
fstl
mov
push
push
shlb
lock
push
jno
adc
test
xchg
xor
and
repz
sbb
or
je
ds
daa
mov
add
adc
ret
push
sbb
add
pop
and
subb
xchg
adc
cltd
js
sbb
andl
pop
push
inc
push
jl
pushf
xor
jo
push
xchg
mov
mov
addr16
mov
es
xchg
jmp
pop
iret
fildll
push
or
jb
push
mov
add
add
cmp
push
and
sti
push
movsb
in
test
test
push
adc
mov
fs
add
test
out
and
mov
fcomps
jmp
or
movsb
sub
adc
ror
sub
add
shr
aam
in
add
mov
orl
ja
or
and
shlb
mov
xchg
cmc
or
rolb
out
nop
mov
push
fmulp
cmp
sub
leave
jecxz
and
std
aam
pop
rolb
add
shlb
pop
adc
adc
sub
add
add
dec
dec
lods
dec
push
jp
fsubp
sbb
sbb
add
sbb
loope
push
mov
mov
push
push
add
push
or
and
xor
cmp
sahf
inc
push
jmp
and
orb
and
iret
out
sub
jns
add
fisubrl
aad
push
inc
dec
test
inc
xchg
push
in
cmp
pop
or
add
xor
xor
push
push
inc
cmpsb
inc
add
popa
or
add
cmp
lcall
push
or
xor
pop
adc
push
lods
fildll
or
mov
dec
and
fmul
outsl
add
mov
dec
or
or
ret
in
adc
xchg
add
test
dec
add
mov
rcr
adc
or
mov
mov
dec
mov
mov
push
xor
or
jo
cmp
push
ret
xorl
and
outsl
jb
and
sub
jp
cltd
xor
outsl
icebp
cmp
roll
xor
hlt
pop
outsl
adcb
clc
and
es
adc
lea
aaa
fisttps
xor
scas
cmp
sub
aam
or
outsl
push
pop
in
inc
sbb
cmp
js
sbb
push
xor
sbb
sbb
lcall
lock
mov
xchg
in
mov
sbb
jns
and
pop
and
in
stos
sub
xchg
and
fbld
xor
dec
adc
ret
test
pushaw
in
mov
insl
shlb
addl
repz
lcall
inc
sbb
sbb
insl
and
cmpsb
fbld
inc
orb
push
cltd
daa
shlb
lods
loopne
jl
test
mov
dec
mov
inc
lret
daa
xchg
nop
daa
insw
fs
add
push
cwtl
sub
jge
jle
pushf
pop
dec
les
ror
cs
sub
sub
insw
adc
mov
pop
cltd
in
push
in
test
sbb
gs
dec
sub
sub
push
push
mov
mov
imul
or
mov
mov
sub
ret
mov
xchg
adc
pop
mov
dec
push
enter
xor
ds
xor
pop
pop
jge
add
sbb
lcall
jne
jecxz
add
push
mov
pop
ret
add
addr16
push
add
pop
xchg
dec
lcall
cmp
icebp
mov
push
arpl
popa
xchg
add
sub
test
nop
test
inc
xchg
xchg
addr16
adc
lods
in
fwait
push
sub
push
mov
cmpsb
push
cli
cmp
and
add
add
sbb
xor
cmp
cmp
add
mov
loop
hlt
pop
push
mov
adc
add
push
test
sub
daa
push
fwait
sbb
mov
add
sub
jns
xorl
jo
xor
pop
mov
dec
je
sarb
int3
lret
push
pop
add
pushf
jle
ja
hlt
and
es
les
mov
insl
sub
or
push
add
imul
push
jmp
insl
adc
sbb
addr16
mov
and
mov
in
test
dec
jp
std
add
sbb
ret
jo
adc
dec
dec
mov
add
adc
cmpsl
or
mov
cs
fmulp
mov
shlb
jge
mov
adc
inc
pop
mov
adc
pop
mov
push
dec
jecxz
push
push
std
mov
push
loope
lods
cmpsb
shlb
pop
push
jb
aas
imul
add
mov
push
adc
rol
push
call
or
push
push
pusha
mov
sbb
js
mov
out
stos
sbb
xorl
imul
and
movsb
gs
jle
cmpsl
mov
test
jmp
andl
and
nop
shrb
xor
addr16
adc
nop
push
mov
sti
pop
int
mov
add
mov
movsb
stos
jno
push
mov
jne
push
and
adc
pop
sbb
es
push
fstpl
pop
in
and
inc
mov
call
inc
aaa
lds
movsl
ret
inc
call
test
xor
mov
and
adc
loop
inc
cmp
pop
pop
push
add
or
movsl
jecxz
adc
inc
loop
cltd
inc
js,pn
pop
outsl
mov
das
mov
cwtl
mov
or
push
nop
rorb
inc
cli
jbe
enter
mov
push
add
xor
jmp
mov
pusha
in
test
sbb
or
loop
adc
hlt
or
inc
xor
mov
or
movsl
and
or
orl
int
sub
push
xor
push
push
sub
inc
ret
sub
loop
push
add
push
mov
push
pushl
jmp
push
sbb
mov
push
adc
xor
inc
gs
pop
adc
adc
lea
imul
pushf
je
jp
jo
testl
and
add
out
mov
xchg
sub
sarb
in
inc
sub
cmp
and
negb
dec
add
repnz
imul
inc
aam
push
pushw
int3
popa
fildl
mov
inc
adc
mov
or
xor
cmp
and
and
and
shlb
dec
out
add
pop
icebp
mov
and
push
add
cwtl
test
or
inc
test
stos
data16
mov
inc
mov
push
fisubrs
cmp
sub
add
inc
xor
sarb
aad
cmp
cmp
sbb
and
mov
ret
jecxz
mov
inc
mov
cwtl
push
xchg
dec
pop
dec
movntps
push
mov
popa
and
in
or
inc
mull
push
aam
nop
cs
and
or
mov
xor
pop
scas
inc
ds
jmp
adc
cmp
adc
addl
addb
mov
dec
test
xchg
jecxz
dec
sbbl
add
repnz
dec
into
inc
pusha
pop
repz
adc
and
movsb
orb
mov
dec
push
movb
adc
and
add
lods
dec
sub
loopne
push
add
ds
mov
and
in
lock
push
aad
or
outsl
pop
cmp
add
pusha
jmp
sahf
sbb
xlat
aam
hlt
xchg
jl
cmpsl
int3
fisubl
shlb
test
cwtl
dec
push
or
jmp
inc
mov
jae
lds
imul
lods
jbe
negl
pop
pushf
popl
dec
or
ljmp
mov
call
xchg
ja
in
pop
sbb
imul
push
outsl
push
push
outsb
dec
dec
xchg
decb
adc
push
push
cmp
clc
sarb
imul
loopne
cltd
fcmove
add
in
push
hlt
fsubrs
add
mov
lods
add
das
sbb
push
mov
ss
lds
jl
push
cs
mov
xchg
shll
mov
xor
pop
adc
and
push
push
inc
push
push
hlt
clc
dec
popa
push
adc
push
sub
push
or
adc
daa
cltd
jmp
inc
mov
in
xor
dec
or
sub
mov
jl
adc
nop
pusha
sub
dec
adc
call
lcall
mov
cmp
inc
cmp
subl
adc
loopne
fildll
or
mov
or
int3
test
or
pushf
mov
lods
adc
dec
xor
outsl
aad
stos
shrb
xor
mov
xor
push
cmp
add
push
adc
push
stc
pushf
push
add
mov
push
adc
mov
add
xor
popa
int3
cmp
sub
dec
add
jecxz
inc
push
mov
push
rolb
repnz
adc
pop
pusha
inc
fs
dec
push
xor
hlt
les
popa
into
inc
arpl
cmp
jecxz
jge
adc
into
push
sbb
push
sub
int
adc
and
iret
arpl
add
add
negl
or
aam
fcoms
rorl
cs
jnp
adc
repnz
pop
jle
popa
and
jmp
orb
xlat
inc
loopne
push
lds
and
test
fwait
jno
sbb
cs
int
les
dec
dec
in
pop
mov
sbb
inc
mov
or
lock
jo
sub
loopne
arpl
dec
cmc
ret
imul
sbb
push
pop
xchg
mov
jae
shll
rol
dec
xor
add
enter
adc
sbb
mov
and
aam
pop
cmc
mov
into
mov
mov
or
or
or
or
insl
and
cmp
jo
daa
xor
insl
add
xor
jg
aaa
sub
jno
into
adc
xor
sub
jo
jge
fmuls
or
in
xor
add
inc
push
mov
ror
call
shr
xor
es
mov
rol
xor
shr
xor
add
push
adc
incb
js
add
mov
lcall
iret
or
jae
or
and
not
and
xor
add
add
aam
sub
add
adc
add
push
xor
into
or
testl
jge
xor
and
and
xchg
push
aam
dec
faddp
add
push
fs
dec
gs
repnz
and
fmull
pop
push
fisttps
fidivl
and
not
ret
rcl
add
add
push
ss
sub
out
xor
xchg
add
or
and
call
sbb
mov
ljmp
fcompl
rol
out
add
push
test
fcomp
loopne
int
movsb
in
push
pop
dec
rcl
call
inc
inc
in
lahf
push
cmp
popa
orl
data16
bound
pop
mov
sub
lock
mov
adcb
xlat
xor
cltd
call
lcall
and
xchg
add
in
loopne
add
leave
loopne
xor
dec
cmp
aam
bswap
rorl
xor
mov
div
push
in
push
xor
and
and
out
iret
or
out
into
add
and
xor
push
test
or
cltd
out
mov
push
mov
inc
jo
ret
push
jo
inc
inc
scas
add
adc
pusha
adc
dec
pusha
lcall
daa
stos
adc
push
loop
in
pop
jg
mov
add
add
pop
lcall
imul
ficompl
aas
lretw
push
clc
jp
push
and
add
add
aas
gs
fdivrs
inc
inc
lcall
xor
push
cmp
js
inc
add
pop
cld
mov
xchg
pushf
dec
sub
jo
cli
stos
orb
aam
aaa
cmp
dec
xorb
inc
sbbl
in
in
jl
imul
shr
rolb
inc
xor
pop
add
sub
pop
xor
shlb
rorb
add
sub
dec
inc
scas
nop
cmpsb
loopne
call
add
inc
add
inc
sbb
xor
dec
test
lcall
add
mov
cmpsb
pusha
inc
xor
add
orb
sahf
push
pop
xchg
or
mov
xor
rcrb
push
xor
adc
and
fwait
dec
add
or
imul
inc
push
pop
pop
or
inc
leave
gs
pusha
xchg
jb,pt
or
ds
adc
dec
add
pop
in
subl
fs
dec
dec
icebp
clc
mov
fnstcw
dec
mov
lock
dec
jb
lcall
adc
adc
aaa
insl
xchg
imul
and
add
xchg
xchg
lcall
fiaddl
dec
sub
cld
ja
out
pop
add
sub
mov
cmp
incl
mov
pop
cmc
pop
mov
lea
adc
pop
cld
sub
inc
mov
xchg
data16
inc
jmp
xor
xor
mov
push
adc
add
shl
push
call
loop
xchg
rol
and
loope
or
mov
adc
cmpsb
fisttpll
insl
in
pop
repnz
jae
mov
or
inc
fdivrl
sub
das
movsb
je
aas
lea
jmp
imulb
mov
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
sarb
adc
mov
jae
aad
xchg
sub
mov
cmp
and
in
aaa
jbe
or
fs
test
sub
data16
or
dec
mov
fadds
rep
or
fnstsw
ljmp
inc
fs
imull
outsl
pop
loopne
ror
mov
notl
ljmp
jb
jl
mov
inc
inc
pushf
inc
inc
stos
jecxz
push
sbb
dec
test
sbb
and
enter
push
fimull
sub
push
inc
add
imul
ja
add
xchg
out
sub
push
shlb
shlb
add
adc
fwait
inc
popa
inc
add
sub
nop
xchg
adc
adc
sub
sbb
and
jae
dec
and
push
rcll
mov
pushf
add
dec
pusha
and
pop
stos
or
jne
xchg
xchg
lock
jae
mov
andl
add
lret
pop
adc
inc
push
or
addr16
add
dec
add
xor
push
sub
mov
daa
and
jo
and
dec
in
icebp
cmp
nop
or
mov
xor
icebp
shrb
popa
test
adc
sbb
sub
or
and
jns
pusha
ljmp
lcall
and
push
cmpsb
pop
in
inc
cmpsl
mov
bound
movsb
dec
test
or
std
adc
sub
in
dec
shlb
and
in
dec
mov
xchg
and
or
adc
test
mov
pusha
push
mov
jl
sbb
pop
mov
lcall
add
mov
dec
inc
cmp
sub
cmp
add
test
push
insb
pop
mov
outsb
push
adc
and
add
xchg
in
dec
or
xchg
lock
cs
dec
add
add
jle
movsb
rol
addr16
sbb
sub
push
pop
sbb
push
call
ret
xor
and
in
testl
sti
pop
imul
mov
mov
testl
aaa
mov
adc
inc
sub
imul
sbb
dec
or
mov
lock
mov
jg
adc
shlb
jmp
xor
clc
enter
mov
lahf
push
xchg
mov
dec
ret
xorb
orb
push
cmp
or
and
sbb
dec
lahf
adc
lods
sub
and
or
xchg
jp
and
orb
andb
fs
stos
jae
push
dec
js
std
jb
test
in
jle
cmp
adcb
adc
mov
iret
fldt
mov
pop
cmp
push
pop
bound
cmpl
or
or
testb
imul
push
pop
mov
mov
and
insb
je
xchg
jp
jo
inc
xchg
rcrl
out
pop
inc
mov
frstor
js
inc
cmp
inc
ret
rorl
aam
xchg
pop
sbb
scas
pop
sar
mov
add
adc
lcall
mov
pop
add
sub
mov
in
mov
cld
std
sti
cmp
push
cmp
push
imul
cwtl
sbb
dec
cmp
xor
lds
inc
imul
lahf
add
mov
ret
dec
cmp
adc
sub
push
es
xor
aas
dec
fdivs
pop
cmp
data16
es
and
pop
xorl
adc
push
xchg
ret
inc
movsb
xor
mov
lods
cmp
pop
mov
xchg
push
sbb
dec
push
pop
fldcw
dec
out
jge
xchg
jbe
andl
jae
sbbb
dec
in
loope
ja
out
xor
repz
push
xor
imul
add
ret
mov
mov
push
push
xchg
outsb
adc
mov
xchg
push
cmp
or
xchg
icebp
divb
mov
or
dec
add
jb
sbb
sub
sbb
leave
mov
pop
xor
adc
pop
push
cmp
adc
punpcklbw
mov
add
mov
adc
sbb
sbb
lret
inc
xchg
push
inc
add
mov
jg
xor
add
cli
sub
adcl
nop
and
js
cli
push
jae
push
fsubp
push
mov
outsl
cmp
jmp
in
jbe
push
push
enter
arpl
es
mov
dec
repnz
cltd
or
xor
or
fidivl
mov
mov
mov
daa
push
add
push
in
sbb
ret
stos
adc
cmp
out
cmpl
jbe
shlb
xchg
shlb
mov
int3
sahf
lods
and
jne
roll
sub
mov
add
mov
pop
imul
outsl
push
psadbw
cmpl
inc
and
scas
or
xchg
ret
mov
hlt
and
jmp
sbb
or
sbb
movsb
out
dec
adc
and
call
push
or
jb
ss
mov
jle
sub
cmp
lret
add
inc
cli
jbe
sub
add
mov
sub
xchg
adc
in
bound
mov
mov
push
call
add
dec
mov
jle
push
adc
cmp
mov
jmp
ret
lret
inc
and
testl
xchg
dec
add
cmp
push
ja
pusha
cmpsb
pop
pop
pushl
rolb
daa
pushf
mov
lcall
xor
xchg
cwtl
adc
lcall
cmc
xchg
mov
xor
sub
clc
push
test
in
xor
and
sub
lea
insl
add
shrb
adc
repz
push
pop
adc
mov
test
inc
fwait
push
inc
or
mov
dec
mov
add
insl
cmpsl
jge
push
jbe
xor
dec
or
sub
pop
cmp
adc
sbb
rolb
les
mov
push
mov
xchg
lea
lds
add
pop
scas
bound
dec
pop
or
ret
sub
inc
rcrl
and
pop
aas
arpl
bound
stc
ja
incl
bound
ss
cmp
jb
mov
add
adcb
inc
mov
rclb
inc
add
xor
sahf
or
sub
lret
adc
ja
fcompl
push
or
jmp
or
loopne
pop
dec
cld
dec
pop
push
and
or
inc
cmc
mov
test
test
and
cmp
pusha
pop
imulb
ret
xlat
fcoms
test
adc
dec
mov
cmp
shrb
enter
mov
pop
insl
mov
sub
cmp
xor
pop
ret
int3
jb
or
lods
sbb
movsl
repnz
hlt
ror
xor
out
mov
inc
inc
jle
inc
add
fildl
add
push
js
xor
sub
or
adc
mov
ja
cmc
cs
mov
jl
inc
cmp
jnp
fisttpll
mov
sub
mov
lds
push
nop
popa
lahf
in
fisubrs
mov
mov
adc
mov
pop
sub
test
mov
int
pop
push
pop
test
dec
inc
das
add
addl
mov
xchg
mov
fidivrs
adc
xor
jae
mov
pop
nop
dec
add
add
lcall
movsl
mov
fnstcw
jge
je
in
lods
lds
push
or
pop
subb
and
xor
and
jo
push
inc
cmp
jl
pop
loopew
add
push
mov
sahf
jle
pop
or
jbe
aaa
ret
push
xor
xor
pop
jns
pop
inc
dec
add
pop
mov
inc
adc
pusha
mov
push
out
or
jle
rorb
pop
lock
ret
push
das
mov
jle
xlat
or
push
jl
pop
test
mov
enter
adc
leave
xor
push
adc
call
mov
arpl
out
cmovbe
adc
xchg
pusha
push
sbb
or
decl
lea
adc
loop
mov
add
sub
comiss
lods
inc
mov
push
pop
nop
add
mov
inc
xor
mov
xor
dec
and
mov
mov
push
dec
or
in
cld
outsl
in
out
cld
shl
and
add
mov
enter
shl
add
jg
sub
loop
xor
mov
mov
out
popf
adcb
mov
push
test
jmp
jp
jge
mov
mov
push
fidivrs
push
add
xor
lcall
xchg
add
sub
adc
loop
mov
fs
inc
sub
or
sub
jno
or
jge
add
push
lock
xor
inc
xchg
pop
jp
popa
add
mov
pop
out
sahf
enter
leave
shlb
and
sarl
lcall
xlat
mov
xchg
lock
jl
sbb
xor
add
rorl
out
pushf
lock
dec
or
adc
sbb
xchg
jle
sbb
cmp
stos
add
pop
mov
xchg
std
xor
es
cmp
push
rcrl
inc
js
add
sbb
sbb
adc
add
imul
or
sbb
sbb
imul
rcrb
mov
and
cltd
pop
and
jae
or
movsl
dec
or
or
and
adc
cmpsl
xchg
in
mov
ficoms
scas
mov
in
push
and
jo
lcall
xor
push
jmp
inc
dec
push
xor
push
shrl
push
mov
or
mov
add
xor
sub
inc
adc
dec
sub
ret
jl
adc
mov
jle
cltd
push
fcmovb
enter
pop
push
mov
jbe
stc
jmp
push
mov
es
jbe
mov
jmp
das
testl
cmp
adcl
or
mov
ljmp
add
sbb
lahf
or
aam
inc
ljmp
sub
pop
stos
add
push
dec
mov
push
push
sub
adc
lret
xchg
pop
in
add
sub
jb
cmp
mov
cmp
mov
push
push
fldt
or
ret
sbb
lds
xlat
lods
or
in
repnz
adc
push
inc
push
sub
rorb
clc
xchg
xor
xchg
sbbb
dec
adc
pushw
sbb
xchg
mov
or
mull
add
inc
xchg
pop
pop
ret
add
or
pop
andl
rorb
add
sarl
jecxz
sub
pusha
pusha
sbb
pop
shlb
bound
sub
fsubrl
cmpsb
xor
mov
adcb
push
push
adc
dec
xor
mov
mov
test
pop
xor
jae
or
or
fisttpll
sub
imul
inc
mov
or
shll
adc
sub
mov
into
repz
or
nop
repnz
or
xchg
sub
nop
jmp
test
aam
inc
loopne
mov
pop
jno
push
gs
outsb
test
jp
push
or
mov
aam
inc
mov
mull
adc
sbb
push
cli
insb
xor
jp
sub
adcb
jge
jmp
mov
or
sbb
loope
loope
mov
mov
inc
inc
xor
or
rcrb
inc
sbbl
and
sub
dec
and
repnz
js
mov
dec
pop
jp
shrl
add
sub
inc
pop
icebp
cmpl
ljmp
fsub
add
pop
push
out
shr
imul
pop
push
xchg
push
push
push
adc
or
mov
pop
cwtl
xchg
cmp
pop
mov
mov
popa
adc
fcompl
lcall
push
and
lods
test
add
push
shrb
adc
mov
xor
sub
hlt
mov
jbe
shrl
mov
jo
push
inc
inc
roll
sbb
add
sub
xchg
mov
pop
cld
mull
inc
dec
aas
jo
adc
pop
xor
cmp
jle
hlt
and
push
out
add
adc
mov
pop
mov
cmp
in
mov
rclb
jb
cmpsb
xor
adc
addl
sub
adc
sub
push
insl
loopne
mulb
push
pop
insb
stos
inc
fsub
push
jno
jmp
jne
or
jae
ret
add
pop
or
outsb
pop
fidivrl
dec
insb
mov
or
sub
insb
inc
sbb
js
cmpsl
nop
or
jo
add
test
add
or
cld
dec
or
sub
inc
jo
jne
andl
xlat
add
into
or
inc
add
out
pusha
cmpsl
dec
cwtl
insb
sbb
sub
mov
sbb
pop
daa
jl
loopne
add
call
cmp
rcrb
outsb
insb
rol
push
xor
sbb
sbbl
mov
add
je
push
insb
sub
or
mov
cli
hlt
aaa
sbb
adc
mov
cmp
cmp
cmp
fimuls
push
rol
add
sub
sbb
fnstsw
testb
pop
add
add
fldenv
sub
fsts
fs
adc
les
mov
xchg
add
cmp
sbb
push
pop
mov
push
add
cmp
sub
loopne
jae
dec
and
loopne
adc
icebp
jmp
call
mov
pushf
dec
ret
adcl
in
push
dec
or
sti
jne
jg
add
xchg
shll
dec
hlt
add
dec
push
inc
pop
push
notb
push
mov
jo
sub
and
dec
repz
and
je
push
loope
les
loop
test
or
or
inc
mov
sub
cmp
sahf
xor
or
jno
mov
mov
add
push
push
sbb
mov
cmpsb
inc
jmp
cmp
orb
push
cmpsb
iret
je
pop
xlat
pop
mov
jbe
scas
rcrl
std
add
mov
int
ds
or
testb
or
cmp
sbb
or
sbb
lahf
mov
add
cmp
mov
pop
jb
jmp
lea
push
sbb
add
adc
andb
push
add
xchg
leave
lret
into
jne
data16
jno
popa
sbbb
or
jo
stc
jmp
push
mov
jmp
push
dec
jb
cli
dec
pop
pop
xor
hlt
sub
call
or
adc
enter
or
out
sub
cmp
jne
push
popf
dec
pop
add
cmp
jge
jl
push
sbb
popf
lods
pop
cs
adc
out
add
mov
adc
jae
outsl
inc
xor
lock
dec
push
dec
dec
sbb
insb
rolb
mov
xchg
or
push
xor
imul
sbb
xor
sbb
cmp
ja
inc
inc
and
pusha
sub
test
test
push
mov
imul
mov
mov
mov
mov
jo
and
or
push
fistpl
loopne
adc
and
loopne
or
add
and
adc
sbb
ret
in
pop
inc
movsl
lods
int
xor
aad
rorb
das
popa
cmp
in
ret
int3
add
shrl
mov
add
das
stc
jge
mov
and
add
and
add
jle
rolb
add
add
scas
inc
cld
jb
test
mov
xorl
add
int
add
movsb
call
out
adc
std
cld
or
push
or
clc
push
add
jne
mov
and
push
mov
inc
cwtl
push
mov
ret
or
or
push
xor
add
mov
inc
or
push
cmpsl
and
cmp
push
adcb
or
and
test
pushf
adc
pop
cld
pusha
dec
adc
les
js
push
xor
ja
or
adc
in
les
mov
push
loopne
cmp
insl
inc
jnp
and
ljmp
lods
dec
mov
sbb
jne
add
add
and
adc
pusha
mov
fisttpl
sub
aad
xchg
movsb
dec
popa
push
popf
rcll
pop
add
cmp
pusha
sub
cwtl
push
jo
pop
scas
xor
dec
cld
mov
cs
cmp
pop
fiadds
nop
addb
loopne
sbb
jbe
dec
out
push
push
and
inc
mov
fistps
js
and
mov
lret
adc
adc
mov
stos
inc
enter
push
ss
pop
in
cmp
jmp
dec
cwtl
dec
sahf
cmc
test
and
aas
pop
cmp
pop
nop
and
and
and
ret
bound
pop
lds
adc
mov
pop
fiaddl
lock
inc
push
ja
in
jmp
add
push
lahf
push
push
and
icebp
sbb
scas
outsb
add
jl
clc
inc
fidivrl
out
inc
push
bound
pause
mov
int3
shlb
cmp
push
je
testb
push
popa
push
pusha
dec
sbb
pop
mov
push
mov
addb
mov
add
ja
sbb
dec
push
ds
jae
mov
or
adc
add
ja
or
js
mov
pop
dec
insb
adc
shrb
inc
lea
jle
je
sar
xor
push
into
mov
mov
push
xor
push
cli
lock
mov
pushw
insb
dec
push
inc
mov
dec
xchg
inc
mov
jg
xor
sbb
ret
push
or
cwtl
mov
add
enter
sbb
push
xchg
test
mov
aaa
and
insb
cmp
sbb
adc
gs
sahf
mov
inc
push
out
jb
cmpsl
inc
rclb
jae
rcll
push
push
aad
scas
pop
sub
lea
inc
push
je
pop
sbb
add
out
jbe
shlb
and
mov
push
inc
js
adc
scas
ljmp
jbe
add
je
dec
cmp
mov
pop
ljmp
loope
lcall
pop
clc
cmpsl
push
sub
shll
lock
cmpsl
and
xchg
add
mov
sbb
sub
mov
jle
adc
gs
testb
cld
cmp
push
sarb
mov
push
push
mov
add
and
inc
mov
fisubrs
dec
ja
add
add
in
push
sbb
jmp
push
dec
int
adc
xor
sbb
push
dec
adc
sub
lods
xor
and
sbb
in
jne
je
jmp
or
push
jmp
sub
or
pop
jns
add
xor
mov
inc
sbb
out
cmpxchg8b
into
add
cmp
and
jmp
fsubs
subb
inc
sbbb
xor
icebp
jnp
mov
bound
dec
mov
or
mov
push
test
mov
push
mov
rol
icebp
loopne
inc
pop
pop
and
and
sbb
bnd
pop
mov
dec
or
push
dec
add
pop
je
mov
push
js
or
and
adc
pop
loope
cmp
in
inc
pop
adc
dec
inc
mov
je
aas
dec
push
outsl
mov
jecxz
jnp
jmp
or
or
ss
sub
ss
jb
mov
ljmp
push
aaa
inc
or
mov
ret
push
push
sbb
push
mov
push
jmp
push
enter
and
adc
les
mov
scas
or
test
push
imul
mov
push
mov
add
push
cmp
lds
mov
cmp
insb
lods
sbb
mov
orl
test
jmp
adc
imul
jne
insl
xor
pusha
jne
test
jbe
cmp
mul
shll
and
add
shrb
dec
je
push
or
mov
adc
and
aaa
and
or
js
scas
jle
rcrb
js
inc
repz
orl
shrb
fwait
out
stc
jno
call
fdivrs
sbb
and
das
or
mov
scas
or
and
adc
psubusw
mov
and
clc
lock
fcomip
jg
fs
test
movd
movaps
outsl
xchg
enter
shlb
jle
xor
int
add
lret
je
sti
mov
push
mov
jl
and
lret
or
aaa
orb
inc
insl
lock
adc
jnp
mov
mov
out
sub
mov
add
adc
push
add
adc
add
ret
pop
add
mov
add
pop
sti
roll
jo
addps
int
add
dec
jns
ret
adc
dec
sbb
adc
cmp
or
jmp
xchg
dec
cwtl
movsb
popf
imul
subb
nop
or
jno
add
in
adc
xor
push
cmp
xchg
js
pop
incl
dec
adc
pop
call
sub
sahf
fldenv
fld
jge
mov
jge
dec
and
pop
pop
sbb
inc
insl
lods
pop
inc
mov
loope
or
loop
add
push
pop
and
clc
push
or
inc
stc
cmp
jb
neg
clc
cmpsb
mov
sub
mov
adcl
jle
aaa
sbb
or
rorl
jnp
xor
rep
mov
dec
ljmp
fld
inc
rcrb
lret
or
pop
test
adc
outsb
or
xor
xor
imul
xlat
lods
int
cmp
imul
xorb
add
push
mov
clc
jb
add
and
repz
push
pop
and
or
pop
pop
mov
test
jecxz
enter
or
rep
xor
jmp
int3
mov
in
add
pop
add
xor
lret
les
dec
fsubs
inc
xchg
lock
and
inc
pop
lcall
add
add
cmp
int3
lea
xchg
lret
dec
add
movl
pop
inc
add
add
stos
or
push
push
mov
js
push
mov
iret
repz
call
lock
repz
hlt
clc
clc
cld
testb
loop
lea
lock
fnstcw
add
and
int3
push
fsubr
and
mov
inc
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
or
push
mov
dec
adc
add
daa
stc
sub
cmp
in
pop
nop
fs
mov
mov
enter
mov
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
ljmp
mov
or
push
adc
out
sahf
sbb
sub
inc
cmp
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
pusha
or
js
cmp
mov
add
pop
stos
or
ja
dec
lods
sbb
psubsw
jp
and
adc
cltd
mov
enter
mov
add
pop
mov
fildll
jl
pop
lea
mov
mov
adc
sub
addl
cmp
xchg
add
xor
mov
cmp
mov
inc
inc
add
push
mov
jmp
jp
je
mov
dec
jmp
rorl
sahf
mov
push
and
xchg
imul
adc
adc
sub
scas
fidivrl
xlat
mov
cmp
xchg
rcr
je
cmpsl
mov
sub
arpl
int
es
or
popf
fcomp
mov
movups
add
sub
cmp
add
pop
rorb
inc
js
shrb
or
jne
xchg
jmp
push
xchg
ret
inc
and
cs
push
xchg
test
xor
mov
pop
insl
call
push
adc
decl
inc
cmp
jne
inc
cmp
xor
pusha
mov
popa
popa
and
inc
inc
inc
mov
push
push
adc
mov
adc
nop
in
roll
jmp
sub
daa
or
call
inc
inc
cmp
cmp
fldcw
jo
subb
iret
jae
cmpb
dec
adc
push
add
push
push
lret
or
dec
aam
adc
ficoms
cmp
xor
add
sub
pusha
inc
in
sub
mov
mov
jl
adc
inc
cs
and
xlat
inc
in
imul
cmp
into
lret
sbb
inc
sub
imul
adc
jnp
sarl
sub
add
ret
jno
shl
shlb
dec
leave
sbb
or
sub
dec
fisttpl
rolb
cmp
mov
mov
test
lahf
push
inc
push
rol
inc
inc
dec
adc
sarl
rcl
lret
jne
sbb
loope
clc
imul
push
sub
or
mov
xor
mov
lret
jbe
jne
jmp
dec
jae
jno
jg
seta
add
je
or
xchg
je
add
push
inc
add
adc
mov
out
ficoml
jle
sbb
push
hlt
daa
es
xor
push
leave
lret
or
adc
inc
xor
jne
pop
pushfw
or
sbb
cmp
ret
lds
test
mov
shll
inc
push
insb
ja
add
sub
inc
sbb
dec
pop
jecxz
jmp
pop
aam
dec
cmp
stc
and
sbb
test
movb
dec
jecxz
leave
xchg
fmuls
in
pusha
dec
cli
or
add
jmp
or
mov
inc
jl,pt
lock
in
jbe
movsb
cmp
jb
fildl
jb
into
jmp
pushf
call
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
das
fisubrs
jne
inc
ret
inc
push
jmp
jo
cmpsb
push
mov
enter
mov
cmp
pop
add
push
arpl
mov
cwtl
in
jg
dec
decl
cmp
jb
lea
cmp
mov
and
je
cmp
jne
mov
push
cmp
jne
xor
repz
jne
call
in
mov
es
ret
mov
adc
push
dec
jmp
adc
jmp
mov
stc
jns
std
jmp
cld
cld
ret
addr16
pmaxub
jecxz
pop
push
pop
scas
jb
push
or
mov
push
movb
shr
stc
orl
jb
mov
jle
stc
add
inc
jl
shl
ss
or
jp
push
adc
cmp
cmp
lock
jae
inc
aad
pop
enter
std
or
push
jb
inc
or
sub
xchg
push
addr16
orl
fiadds
or
adc
inc
pop
jb
or
pop
cmpsb
ret
mov
mov
mov
or
xor
or
add
cwtl
add
into
and
rclb
cltd
or
jg
add
mov
push
scas
add
jno
add
push
dec
arpl
js
in
push
popa
adc
pop
add
adc
push
and
gs
mov
ljmp
push
push
pop
div
jb
or
lcall
jecxz
lahf
pop
clc
mov
je
lock
or
lods
pop
sub
clc
pop
adc
push
mov
or
pop
addb
mov
xchg
push
imull
cmp
adc
gs
xor
adc
es
push
lods
mov
mov
xchg
dec
mov
lods
outsl
add
and
cwtl
xor
cwtl
cmc
cmp
movl
add
mov
dec
rcll
xchg
fwait
inc
xlat
pop
leave
cmp
mov
jl
or
lods
push
mov
outsl
dec
hlt
adc
cmpl
adc
loop
cmp
cmp
inc
fstl
jns
inc
rorb
cmp
jne
aam
incb
orl
jmp
adc
jne
sub
or
scas
jns
adc
cmp
inc
rcr
xor
orl
cs
mov
pop
and
or
fbstp
jne
pop
jne
dec
add
add
lds
sbb
sbb
push
xor
or
test
sub
clc
sub
jmp
fidivs
lret
sub
cmp
mov
ja
xor
cmp
jae
sbb
loopne
daa
movsb
push
and
mov
addr16
or
je
push
sbb
clc
lods
scas
mov
sbb
adc
fstps
add
inc
cmc
mov
cmp
test
jne
push
xorl
or
or
jne
jbe
rol
das
inc
mulb
mov
cmp
in
mov
add
lds
add
into
mov
lcall
shl
adc
sbb
mov
pop
aaa
xlat
jecxz
dec
jl
cmp
adcb
loop
add
add
sub
push
sub
xor
or
or
loopne
stc
pop
jbe
inc
lcall
stos
mov
shr
gs
sbb
sarb
rorb
pop
sub
test
jo
xchg
jno
jbe
push
cmp
lahf
and
and
push
mov
jne
divb
das
adc
lds
push
inc
rcrb
sbb
or
xchg
ds
sarb
jo
test
inc
mov
inc
inc
enterw
xchg
xor
xabort
and
adc
jo
shll
lahf
call
sbb
inc
or
sub
dec
cld
shl
xor
inc
mov
mov
and
rorb
pusha
mov
dec
jmp
jbe
xor
mov
ds
push
aas
push
xchg
fmul
xor
cmp
popa
adc
push
push
mov
roll
shll
stos
leave
jl
lret
push
loope
fidivl
sahf
pop
out
push
dec
push
movsb
ret
sbb
inc
lea
int3
decb
loopne
and
cmpsl
les
or
add
add
inc
dec
adc
pusha
ret
pop
frstor
cmp
in
arpl
inc
jbe
fldenv
or
jae
fwait
or
mov
scas
dec
adc
in
sbb
stos
or
inc
es
and
ret
lahf
adc
fidivs
sub
test
and
xchg
jae
lret
dec
xchg
add
loopne
sti
mov
inc
cmp
jb
lea
push
adc
cmp
add
sahf
dec
ss
fst
push
push
add
and
mov
andb
pushf
es
inc
or
dec
cmp
push
incb
push
mov
lods
mov
cvtdq2ps
gs
add
mov
cmp
mov
sbb
adc
popa
lock
mov
add
enter
or
js
mov
adc
mov
push
push
sub
xadd
pusha
pusha
cmp
daa
or
add
adc
loopne
insb
jl
inc
jae
or
adc
add
and
dec
pop
xchg
sbbl
and
icebp
add
mov
test
ret
daa
mov
fildl
ss
jge
or
dec
and
xor
adc
mov
movb
roll
es
sub
leave
sub
mov
pop
ja
add
xchg
push
clc
push
push
push
rolb
popa
icebp
jno
imul
push
movsl
push
sbb
or
adc
mov
rorl
fdivl
adc
ja
cmpl
loopne
cmp
push
movsb
mov
inc
test
adc
push
notb
pop
pop
adc
addr16
cltd
mov
rorb
xor
xchg
dec
rcl
insl
push
std
jle
push
repz
push
popf
ds
decl
ret
int3
push
pop
adc
push
adc
and
push
or
es
inc
mov
jb
pop
add
pslld
and
xchg
js
shll
std
xor
or
in
xor
add
loop
loop
pop
or
orl
xor
sub
mov
inc
push
sti
dec
mov
pusha
xor
inc
xchg
loop
popa
pop
je
push
shrb
shlb
adc
push
add
xorb
and
dec
out
mov
adc
push
mov
mov
jmp
xlat
mov
fldl
pop
cld
fmuls
js
push
loop
xor
cmp
out
add
mov
scas
xchg
sbb
xor
stos
and
sbb
ss
jp
and
insb
insl
call
test
mov
cmp
je
cmpsb
fcoml
lret
ret
movnti
mov
lock
xchg
xor
push
les
loope
mov
movsl
cmp
inc
in
imul
ret
fists
imul
jae
nop
add
pop
sbb
add
inc
or
xor
test
mov
mov
in
push
mov
fildll
push
out
inc
inc
and
add
xor
adc
es
ja
push
cmp
add
add
or
mov
cwtl
shlb
je
insb
cmp
sahf
push
xor
sub
add
stos
and
sub
pop
icebp
add
pop
sbb
sbb
rcrl
add
js
pop
cmpsl
xchg
mov
out
rcrb
add
jns
mov
dec
add
test
loope
mov
dec
ds
daa
xor
push
pop
push
inc
das
inc
cwtl
clc
imul
pop
dec
adc
push
sbb
mov
add
cmp
andl
je
daa
mov
sbb
ljmp
push
jbe
out
call
adc
testb
pop
adc
pop
inc
loope
ljmp
mov
inc
mov
and
loope
mov
sar
pop
in
jb
jge
pop
adc
adc
mov
mov
or
or
call
cs
ds
ret
hlt
pop
push
inc
out
test
addb
ss
rolb
push
lret
jp
cmpsl
fcomp
or
cmp
or
push
xlat
inc
test
mov
ret
xorl
jle
adc
pushf
jecxz
fmull
mov
sub
shl
jmp
mov
out
cmpsb
push
and
hlt
mov
inc
and
sbb
imul
int
dec
fistpll
lret
adc
push
push
pop
jle
pop
and
mov
mov
cmp
je
movzbl
add
sub
je
adc
ret
lea
repz
mov
insl
dec
cli
ss
pop
add
sahf
xchg
add
add
add
adc
mov
ds
add
mov
jno
je
lcall
flds
add
in
mov
inc
push
xchg
pop
push
pop
iret
movsl
test
or
or
mov
dec
or
and
enter
or
repnz
or
repnz
in
add
or
or
fsubp
add
add
sbb
cwtl
push
push
mov
push
rsqrtps
adc
pusha
adc
sub
adc
nop
xchg
out
repnz
adc
ret
jns
cmpsb
adc
adc
adc
and
cltd
adc
sbbb
push
push
push
cs
enter
xor
push
nop
ja
sbb
lcall
sbb
call
iret
sbb
sbb
test
sbb
sahf
ja
je
pop
sbb
add
jns
stos
jge
sbb
sahf
pusha
push
push
inc
ljmp
nop
out
pop
pop
jne
add
add
sub
cmp
inc
ret
dec
adc
mov
movl
xchg
adc
adc
lods
test
test
in
push
in
jno
repnz
sub
cmp
ret
adc
aad
jns
add
cmp
mov
add
add
jbe
add
or
aaa
call
adc
dec
dec
cwtl
jmp
iret
enter
or
test
jmp
jmp
incb
ss
push
in
in
in
cltd
jb
mov
inc
in
sahf
and
enter
jge
mov
out
pop
lock
sbb
nop
addr16
icebp
pslld
repnz
out
std
repz
nop
repz
std
hlt
hlt
in
cmp
hlt
fwait
mov
cmc
cmc
inc
jg
ret
enter
pop
idivl
xchg
inc
enter
clc
clc
sbb
pusha
cmp
adc
inc
cmp
pop
enter
cli
cli
jb
jb
iret
sti
sbb
enter
stos
cld
cld
cld
je
add
dec
fdivrp
push
bswap
xchg
mov
std
xor
sbb
ss
repnz
adc
ret
sub
sbb
push
add
lahf
dec
fsubrs
mov
shll
pop
cmpsb
pop
popa
es
xchg
pop
add
jecxz
std
sti
in
in
jns
in
icebp
mov
mov
bound
xchg
sti
out
out
jb
push
out
outsb
call
add
sub
jae
and
pop
jmp
add
dec
jmp
cltd
pop
leave
and
popf
in
rcll
fsubs
dec
out
out
out
cltd
push
and
mov
cli
inc
add
pop
push
cli
sbb
xchg
stc
repz
add
stc
push
scas
and
fstpl
lret
stc
div
imull
cmpb
xor
in
repnz
adc
out
clc
push
cmp
mov
lret
xchg
add
dec
sti
sti
cltd
mov
cld
inc
cld
cmpl
sbb
cmc
sbb
dec
and
jmp
mov
cwtl
or
loop
jns
push
loop
icebp
mul
repnz
pop
shl
scas
imull
mov
out
rolb
sbb
out
bound
jns
xor
sbb
pop
repnz
sbb
movsl
test
mov
shl
pop
mov
inc
mov
inc
xchg
negb
insb
out
out
jno
scas
in
inc
negb
xchg
pop
leave
and
add
sbb
repnz
lret
and
jno
cmc
pop
and
cmc
jae
lcall
div
out
jns
idivb
and
pop
add
clc
clc
shr
add
hlt
stc
popa
xchg
cmpsb
repnz
scas
in
pop
jno
hlt
pop
xchg
pop
leave
and
push
hlt
add
das
pushw
cmpsl
xlat
pop
andb
test
idivl
rolb
sti
lahf
xchg
mov
adc
ds
clc
test
cmc
pop
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
pop
xchg
xor
sbb
push
lock
test
ss
aam
rorb
fiaddl
sub
out
ret
sbb
inc
ds
add
nop
addr16
add
stos
mov
dec
add
push
or
test
adc
or
cmp
add
dec
add
jmp
das
mov
enter
ljmp
ljmp
mov
decb
pop
inc
add
pop
push
or
cs
jl
pop
push
insl
jns
lcall
data16
bound
outsb
dec
insb
ss
iret
pop
jnp
fistps
pop
lret
popa
jns
cmpsl
fldlg2
gs
xor
rcrl
lods
pusha
into
ds
sbb
jns
adc
ds
push
sbb
dec
or
gs
push
push
or
stos
popa
cld
andb
mov
push
lcall
lock
mov
sarb
jge
push
dec
loop
fistpl
push
add
pop
pop
xchg
fidivrl
and
pop
ret
cmp
push
or
lea
fdivs
fistps
fcmovnu
and
fdivrs
fmuls
and
add
inc
push
add
insb
sub
xor
push
xor
mov
inc
test
int
cmp
add
add
push
bound
lea
jecxz
inc
nop
popf
xchg
jo
jl
jo
or
je
bound
dec
into
xchg
ret
add
pop
mov
movl
xchg
and
js
xchg
sbb
cmp
adc
mov
imul
mov
adc
adc
cmp
inc
jb
mov
xor
and
and
inc
lcall
inc
dec
rorb
pop
pop
cmp
push
jo
lods
enter
xlat
mov
xchg
inc
push
inc
and
mov
shlb
iret
add
popa
cli
js
in
popa
pop
js
xchg
lret
push
cmp
dec
outsl
cmpsb
or
adc
cmp
or
repnz
je
pop
roll
sub
pop
mov
inc
inc
pop
cmp
enter
stos
testb
xor
orps
mov
or
rorl
push
xor
cmp
pop
jmp
ja
mov
or
sub
push
xor
pop
rorb
sbb
jmp
mov
add
xchg
int3
in
inc
mov
jo
sub
imul
shl
xorl
xchg
fnstenv
add
push
jl
out
stos
stc
aad
lret
mov
mov
shll
pushl
jne
mov
mov
inc
inc
cmp
notb
jmp
sbb
outsb
xchg
add
bound
push
mov
pop
pop
pop
popa
cwtl
and
and
scas
sbbb
pop
aam
pushf
pop
test
stc
and
sub
dec
test
adc
mov
xor
sub
ja
testb
adc
sub
movsl
mov
jo
pop
lret
clc
in
cmp
out
or
jge
popa
roll
shr
stos
add
testb
subb
out
add
outsl
jb
or
mov
loopne
push
dec
jne
cli
int3
ret
adc
and
dec
or
fists
je
stos
mov
inc
pop
add
aam
into
imul
or
inc
dec
dec
loop
repnz
out
xor
mov
dec
push
mov
mov
incl
inc
decl
ds
icebp
jne,pn
xor
repnz
push
push
sbb
xor
jecxz
add
or
push
pusha
or
or
sub
ja
push
aaa
dec
mov
mov
ljmp
imul
bnd
cmp
jae
dec
add
adc
mov
jae
pop
jbe
mov
dec
scas
and
dec
bnd
insb
push
pop
adc
adc
cmc
mov
movsb
pop
out
sbb
push
jg
fnstcw
mov
push
mov
or
add
test
sti
shlb
sbb
dec
dec
je
push
push
jne
lea
pop
rcrl
pop
insb
adc
fidivrs
sbb
mov
xor
pop
decb
jl
adc
push
out
rcrb
cmp
das
xor
inc
in
enter
push
and
add
push
cltd
mov
idiv
mov
xor
rclb
dec
cltd
cmpb
xchg
pop
test
in
cmp
fadds
adc
fimull
xorl
frstor
jmp
ror
pop
cmp
cmpsl
imul
ja
insl
or
aas
cld
addb
popa
push
push
cltd
pop
idiv
xchg
or
add
ret
insb
push
xchg
inc
out
cmp
popa
mov
sub
cmp
mov
stos
dec
inc
addr16
jno
imul
fs
push
mov
add
imul
mov
jmp
jl
mov
sbb
call
out
push
mov
or
je
insb
sub
sbb
clc
inc
sbb
sbb
sbb
ss
dec
mov
mov
inc
or
add
dec
test
pop
cmp
jno
in
ds
inc
sti
inc
loop
adc
pop
sub
fs
sub
jmp
fs
loop
add
jae
cmp
popf
push
pushf
pushf
push
mov
icebp
push
add
loope
push
jmp
enter
jge
pop
je
sbb
push
sbb
push
jl
fs
insl
gs
jmp
mov
inc
gs
mov
lock
call
je
dec
inc
add
jp
mull
dec
jne
mov
ret
icebp
jl
rclb
outsb
mov
lret
mov
push
pop
xchg
mov
or
call
push
test
xchg
adc
xchg
inc
fucomi
push
je
fnstenv
subl
inc
cmp
loopne
mov
stc
pop
push
adc
or
std
lcall
push
push
pushf
test
pop
cmp
adc
sbb
pop
sub
adc
adc
cmpb
mov
dec
sti
cmpl
xor
jge
add
mov
sub
push
clc
mov
add
cs
loopne
iret
mov
inc
adc
or
out
rcrl
mov
push
stos
out
fistps
lea
mov
mov
add
imul
dec
ljmp
movsb
orl
sub
out
or
push
pop
sbb
push
mov
dec
sbb
hlt
dec
js
loop
adc
lret
ljmp
mov
mov
add
test
imull
in
ret
dec
int3
clc
je
gs
push
add
outsl
jle
pop
mov
and
jne
fcmovbe
aas
clc
mov
inc
inc
cmp
je
xchg
mov
cli
xchg
lods
popf
dec
orb
adc
add
mov
fidivrl
dec
je
shll
push
sbb
mov
pushf
add
sbb
cmc
push
cld
call
adc
push
fdivr
gs
in
jl,pn
mov
push
inc
sbb
ljmp
cmp
pop
sbb
lods
mov
imul
bound
fmuls
sbb
or
xchg
dec
add
push
std
xchg
dec
xchg
push
sub
push
enter
addr16
test
loopne
xor
adc
test
incb
and
cmp
je
mov
rclw
adc
add
shll
lods
inc
or
adc
pop
push
pop
inc
xor
adc
popa
rcrl
or
push
dec
add
cli
frstor
in
dec
subb
or
push
repnz
xor
inc
sbb
mov
adc
shl
push
fiaddl
fcom
addr16
adc
add
shll
lea
jecxz
and
jmp
dec
or
cmpl
data16
jmp
das
popf
push
nop
cmovge
push
dec
sbb
sbb
or
xchg
aam
aas
pusha
in
in
orb
pop
and
mov
mov
stos
test
ret
movsb
push
mov
jns
xchg
call
mov
gs
fstl
out
or
in
or
pop
dec
clc
incb
push
stos
and
push
dec
sbb
cmp
je
push
stos
push
inc
push
aaa
push
pop
cmp
sub
sbb
mov
pop
or
mov
add
cltd
add
pushf
push
and
xor
add
jmp
cmp
pop
mov
call
and
inc
inc
xor
lcall
mov
inc
in
sbbl
jbe
or
jge
cltd
pop
mov
push
push
mov
in
and
xor
xor
pop
scas
call
es
inc
jmp
xchg
add
aas
pop
adc
push
jmp
cs
cmp
jg
mov
inc
dec
test
mov
rorb
stc
jne
inc
jb
sbb
in
inc
ljmp
dec
sahf
mov
pop
dec
jnp
aam
out
ja
add
push
adc
push
xchg
test
cwtl
fcoms
shlb
shrb
fistpl
pop
icebp
or
cld
dec
hlt
add
je
movl
sub
imull
outsb
or
mov
adc
gs
cld
jmp
pop
arpl
xchg
push
jno
sub
push
mov
sarl
or
dec
call
pop
arpl
js
inc
add
js
adc
cmp
sarl
cld
adc
adc
cmp
std
add
and
mov
idiv
pushf
jo
sbb
or
into
dec
mov
add
jbe
jbe
lods
and
adc
or
cmc
cmp
and
daa
cltd
adc
jo
push
jle
xorl
outsb
xor
sbb
mov
pusha
cmc
mov
xchg
pushf
xor
jg
cmpsb
imul
sbb
fsubrs
sbb
and
pop
and
mov
inc
arpl
push
lahf
fcomps
sahf
enter
xchg
xor
rclb
cmp
xor
adcb
pop
pop
enter
aam
pushf
enter
in
push
sub
jmp
push
cltd
fldt
or
inc
dec
lcall
std
data16
jb
les
insb
jl
sub
add
or
ret
lret
mov
adc
cmp
hlt
or
push
add
push
xchg
rep
pop
sbb
cld
xchg
xorb
arpl
imul
cmp
mov
ja
cmp
imul
test
pusha
pusha
stos
cmpsl
int3
loopne
rorb
imul
rclb
adc
fs
add
popa
or
inc
or
push
cmp
jge
cli
and
outsl
jno
mov
sbb
ja
pop
outsl
jmp
jbe
orl
add
dec
jle
sbb
cmpsb
sub
pop
js
lret
insb
mov
mov
inc
inc
sbb
jg
adc
imull
pop
push
mov
lcall
xchg
cmp
push
rorl
mov
push
pop
xor
shlb
shl
call
add
fadds
ss
inc
sbb
xor
popa
xchg
popa
mov
jge
inc
push
pop
sbb
sbb
fdivl
sbb
or
sub
push
fs
sti
and
push
inc
mov
fs
dec
test
sub
ret
enter
aam
aaa
gs
fadds
add
ffree
sbb
sub
adc
ret
in
rolb
sbb
mov
jecxz
dec
imul
push
lea
loopne
out
or
in
xor
push
nop
testb
call
mov
lock
ljmp
dec
sbb
push
xor
aad
test
sbb
jnp
pushl
aam
je
add
iret
xor
push
lods
pop
jae
dec
or
pop
jo
inc
sarb
fisttpll
mov
js
xor
repz
mov
movsb
pop
sti
sbbb
add
dec
xchg
sub
int3
xchg
pop
es
push
pop
adc
add
call
jg
push
les
into
addb
and
add
leave
cmp
inc
shlb
imul
sub
dec
cltd
adc
sub
movsl
in
mov
push
loop
mov
mov
call
icebp
dec
or
or
mov
rorl
add
and
pop
test
or
mov
or
lock
outsb
push
inc
push
adc
icebp
test
sub
mov
or
lret
adc
sub
lret
out
mov
sbb
out
lret
and
popl
repz
lods
cmp
add
inc
into
mov
jbe
test
push
movl
cmp
xor
pop
pop
mov
sarb
lahf
sbb
jb
enter
jo
sbb
fmul
adc
sub
fcmovb
xchg
mov
sub
dec
inc
test
loopne
cmp
cmp
leave
inc
push
inc
sub
movb
cld
sub
fs
or
imul
adc
or
ret
mov
jp
push
sbb
adc
outsl
hlt
roll
add
shl
or
add
pop
add
cmp
loopne
inc
pop
sub
mov
inc
jns
xchg
cli
dec
jne
lea
or
sbb
xchg
fldl
add
pop
test
pop
xchg
xor
insl
mov
jo
lock
mov
or
mov
jge
movb
popf
out
dec
xor
sub
cli
ja
sub
sbb
or
aas
push
push
mov
push
jae
sarb
cld
ficoml
xor
jne
push
insl
loopne
mov
std
push
cmp
lock
cld
lcall
add
int
out
das
adc
orb
mov
sub
xchg
lret
and
mov
adc
inc
nop
push
outsb
aad
jmp
mov
fucomp
xchg
hlt
mov
mov
cmc
fldl
pop
and
sbb
lret
push
imul
jmp
cmp
push
and
and
rolb
add
jb
inc
sbb
add
loopne
dec
mov
ja
mov
adc
hlt
jg
ret
add
push
scas
or
es
lock
jo
divb
inc
cld
sbb
clc
ret
add
jno
sub
into
mov
insb
push
cld
adc
mov
jmp
or
or
bound
sub
push
cmp
mov
cmpsb
push
cmp
movsb
repz
fcoms
dec
cmp
std
jne
fsubr
cmpsb
ret
fldt
stos
enter
and
inc
inc
add
push
xor
fwait
push
xor
or
mov
je
and
jl
pusha
mov
sti
and
xor
subl
std
fidivl
push
jmp
add
in
aam
push
add
loopne
fstl
jo
dec
stos
push
jne
loope
inc
rolb
jnp
gs
call
add
push
jmp
jne
mov
test
cmp
inc
pop
leave
inc
adc
imul
sub
mov
sub
inc
xor
sahf
into
sub
sbb
fs
sti
loopne
andb
cmp
sub
inc
inc
daa
add
outsb
incl
js
idivl
add
jb
mov
xor
inc
movsl
movsb
cmp
inc
dec
push
sbb
std
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
loope
loop
pop
ja,pt
jl
sbb
cs
jle
or
jo
mov
outsb
mov
or
jne
out
movsb
rolb
mov
hlt
mov
push
jnp
test
xor
pop
lock
bound
dec
pushf
mov
dec
loopne
adc
sbb
add
jae
pop
push
loop
adcl
mov
mov
sub
dec
sbb
call
ja
xchg
faddl
jo
and
cld
aas
xor
push
xchg
push
xchg
cmp
cmp
mov
xlat
cli
jo
insb
ljmp
sub
jl
or
mov
or
insb
or
frstor
push
loopne
or
pop
sti
sti
sub
jmp
xor
dec
sbb
mov
xor
movsb
jmp
aad
out
ss
push
out
arpl
adc
xchg
jno
es
push
pop
ljmp
xchg
out
nop
rol
inc
inc
and
int3
imul
pop
or
add
lret
test
leave
cmpl
and
pop
or
inc
lret
cltd
flds
lcall
sub
or
in
sbb
push
popf
mov
pop
pop
sbb
or
pop
int
jno
adc
inc
mov
int3
pop
and
sbb
mov
jno
inc
inc
sbb
sub
lods
or
sub
and
adc
push
mov
push
lock
stc
push
jne
add
pushl
out
jle
insl
xor
or
push
cmpl
lock
pushf
add
pop
cmp
adc
aaa
mov
movsb
rclb
dec
or
sbb
imul
xor
mov
ja
push
sbb
leave
rorb
jmp
aaa
cmpl
push
pop
mov
jo
xor
sub
pop
xorl
sub
es
sbb
or
je
push
mov
lock
jecxz
jp
sbb
push
add
sbb
adc
jbe
push
sub
lock
or
sub
or
loope
xor
ds
xchg
add
dec
jmp
adc
mov
jno
jo
sub
pop
mov
fldl
push
adc
xchg
mov
jmp
sbb
push
cmp
shrb
add
daa
mov
stc
mov
cs
cmp
xorb
add
xchg
jmp
or
add
loopne
or
mov
cmc
cld
mov
jb
cs
lret
outsl
pop
cmpsl
out
call
movsl
sbb
cwtl
cmp
adc
popl
icebp
lods
sub
push
push
push
mov
fucomp
xor
mov
les
addl
sbb
es
pop
sbbb
adc
add
inc
xchg
pop
mov
cmp
and
inc
xor
mov
ficomps
lret
insb
push
cld
push
lret
ret
xor
add
mov
repnz
mov
mov
shrd
xchg
xchg
or
movl
insb
add
jae
sub
insb
jg
fwait
push
pusha
xor
fnstcw
outsl
add
sbb
pop
sti
inc
sub
aas
sbb
mov
dec
push
add
sti
pop
xor
inc
mov
push
push
movsb
pushf
dec
stos
push
lret
xchg
pop
jns
inc
xchg
sbbb
dec
add
mov
rol
jns
xor
not
movsb
es
outsl
xchg
scas
sub
adc
pop
sub
xor
lea
stos
clc
pop
sbb
inc
push
in
xor
in
push
in
inc
dec
or
subps
xlat
andl
push
rcpps
push
dec
cmpb
nop
push
sbb
gs
std
cmc
and
pop
cmp
je
jle
inc
dec
clc
test
xor
inc
pop
insl
jg
loop
loope
jge
addl
bound
xchg
out
jb
cli
test
mov
divl
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
iret
ljmp
out
inc
lods
popf
jno,pt
int3
dec
ja
out
xor
dec
cmp
mov
xchg
push
xchg
push
scas
int
mov
sahf
or
pushf
loopne
mov
int
gs
mov
sub
or
pop
add
das
xorb
ja
test
mov
rorb
inc
sub
andl
mov
bound
sub
and
sub
sub
or
fcoml
aas
sub
mov
mov
clc
or
das
das
popf
enter
shrb
pushf
popl
mov
sarl
insl
ja
aaa
dec
cld
adc
sub
push
popl
push
adc
mov
jbe
cmp
addl
dec
mov
enter
or
pop
xchg
xchg
in
pop
and
sub
jmp
jge
sbb
rolb
iret
or
pop
add
add
mov
bts
jmp
mov
xor
xor
mov
test
mov
xchg
stc
pop
in
sub
xchg
cwtl
add
out
cmp
fs
mov
or
adc
repz
clc
out
lock
call
loopne
ror
xchg
push
mov
push
dec
shl
jmp
xchg
in
scas
mov
divl
and
call
rclb
mov
jns
mov
mov
out
out
fs
push
je
test
cmpsl
cwtl
mov
inc
rorb
push
fcoms
shll
cwtl
mov
aaa
cmpsb
mov
mov
cmp
pop
adc
pop
cs
push
test
and
iret
fimuls
cmp
js
mov
and
xchg
jle
cli
ret
add
dec
scas
test
loope
push
jne
test
notb
cmp
jge
inc
mov
pop
test
push
movsb
lret
test
dec
mov
jmp
pusha
lahf
xlat
add
sub
aam
les
addl
push
adc
loop
lds
and
inc
sbb
cmc
adc
and
xchg
bound
lock
idivl
aas
insl
adc
or
mov
hlt
mov
jne
hlt
call
adc
cltd
xor
or
inc
orb
cmp
mov
outsb
lret
or
enter
inc
or
je
jae
rcr
dec
dec
adc
pop
adc
pusha
leave
mov
jl
or
pop
xor
push
jge
inc
mov
imul
sbb
xor
vcvtss2sd
xchg
orw
and
or
push
adc
xor
and
push
or
adc
pusha
mov
mov
adc
push
ret
sbb
inc
sbb
out
cmp
clc
adc
pop
je
xchg
imul
lods
inc
dec
add
xor
push
sub
fisttps
or
cmp
sub
xchg
je
movl
js
or
js
mov
sbb
hlt
mov
add
add
aaa
mov
mov
inc
cmp
and
pop
xchg
add
loop
pop
xchg
adc
jno
adc
jno
xor
xchg
sbb
inc
sbb
mov
or
loope
dec
clc
add
mov
test
mov
xchg
daa
jmp
xchg
fmull
sub
sbb
mov
xchg
fiaddl
xchg
subb
stos
push
push
test
dec
push
push
das
jmp
inc
add
add
mov
xchg
enter
imul
shlb
pop
jno
xor
je
add
insb
pusha
movsl
push
ret
mov
inc
fmull
and
sbb
filds
pop
test
xor
clc
xchg
rolb
or
inc
pop
push
or
push
xor
jecxz
dec
fisubrl
mov
adc
sub
mov
cltd
adc
jbe
push
inc
mov
push
push
call
xchg
in
or
inc
out
adc
mov
mov
aaa
cmp
pop
divl
in
sbb
xchg
and
loop
ds
mov
inc
clc
dec
xchg
fdivrl
push
push
imulb
into
jne
xchg
xchg
pushf
and
jns
cmp
in
push
sbb
push
push
push
fwait
add
loopne
pusha
scas
sar
add
add
and
add
dec
push
cmp
push
jg
push
xchg
or
ret
shlb
and
push
pop
int3
or
push
lock
and
or
and
mov
test
sbb
mov
jo
mov
test
cmp
mov
add
decl
inc
add
adc
movsb
push
mov
pop
icebp
mov
nop
xchg
dec
pop
cmpl
pop
mov
mov
out
stos
push
sar
lcall
pop
shll
push
jmp
xchg
and
jle
jb
je
inc
jns
outsl
cmpl
aad
pop
add
mov
dec
mov
enter
or
sahf
mov
insb
fsubrl
icebp
xor
sti
in
mov
rorb
popf
in
mov
lret
aam
fadd
fdivs
sti
jmp
jne
sbb
sbb
mov
mov
xor
mov
imul
mov
mov
pop
pop
leave
test
in
or
xchg
inc
js
pop
js
push
dec
jecxz
xchg
shlb
imul
pop
ja
mov
bndldx
add
mov
cmovo
ja
out
sbb
sar
pushf
push
sbb
cmc
add
loope
repnz
cli
mov
imul
fdivr
fsubs
lret
lods
jecxz
call
je
or
out
je
sbb
scas
pushf
pop
cs
int3
pop
or
add
sub
sbb
pop
adc
sub
or
cld
adc
mov
aas
mov
mov
xorps
test
lea
rcrl
int3
adc
movsl
mov
mov
dec
jns
and
out
sbb
and
movsl
hlt
hlt
stc
cwtl
fldt
push
sbb
mov
test
adc
ds
loopne
sub
adc
sbb
pop
in
in
mov
and
pop
or
xor
mov
mov
jg
dec
xor
dec
enter
jg
jmp
addr16
or
adc
pop
outsl
data16
sbb
jne
js
jo
xchg
loope
xlat
je
loope
cmc
test
lock
repnz
sbb
fisubl
fs
rcr
xor
sbb
jle
inc
je
xlat
sub
or
fcmovb
and
rcll
cld
jmp
loop
and
inc
dec
nop
and
jae
xor
jl
shl
test
les
imul
xchg
stos
out
mov
adcl
pop
sbb
outsb
sbb
sub
xchg
or
test
mov
mov
mov
test
add
mov
cwtl
pop
push
cmp
in
mov
add
push
insl
cmp
shl
cltd
xchg
int3
negl
dec
add
jle
hlt
dec
lret
add
pushf
add
cmp
pushf
test
sub
bound
fildll
jmp
mov
pushl
test
push
fcmovb
sbb
les
pop
jno
mov
inc
mov
add
mov
shlw
cmp
inc
xchg
jecxz
mov
lcall
imul
test
movsl
sbb
pop
add
sub
lods
insb
cli
add
add
into
mov
adc
jmp
push
je
cmp
je
test
dec
sbb
enter
inc
pop
int3
add
xor
sub
mov
or
and
data16
dec
andl
clc
jo
cltd
sub
cmpb
push
add
jmp
pusha
into
ret
cwtl
dec
jne
mov
jne
mov
jmp
cmp
jle
insl
cmpl
incl
dec
or
push
scas
cwtl
mov
or
dec
pop
or
xchg
insb
movsb
mov
adc
sub
mov
lods
add
arpl
mov
mov
popf
test
imul
lea
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
stos
out
aas
cmpb
jne
and
push
icebp
popa
push
push
xchg
xchg
push
mov
mov
push
cmp
addr16
decb
test
dec
inc
daa
add
jg
mov
loope
xor
cli
xchg
xchg
enter
push
adc
inc
cmp
cmp
adc
inc
fbstp
mov
push
cmpsb
mov
cmpsb
jmp
out
or
je
dec
xor
push
cwtl
dec
fsubrs
or
je
or
jl
inc
mov
adc
sub
jecxz
nop
pop
js
aaa
cmc
fimull
jge
add
inc
sbb
dec
test
pop
mov
or
jne
and
ret
fnstcw
lea
or
pusha
mov
lods
cli
push
push
ja
mov
xor
xchg
cmpsl
clc
bswap
clc
sahf
add
mov
dec
jmp
pop
xchg
icebp
sbbb
movb
stos
lock
dec
aas
je
into
sbbb
xchg
mov
and
nop
push
clc
add
inc
jmp
mov
add
push
loope
or
mov
ret
inc
inc
test
sub
sar
roll
rorl
int3
clc
dec
fldl
sub
sub
push
test
xchg
mov
sbb
stos
mov
inc
push
aam
cltd
sub
sub
inc
pop
or
pop
shl
push
jp
out
pop
and
mov
mov
stos
aas
mov
or
dec
or
adc
push
jbe
jo
or
dec
sbbl
jne
add
mov
jno
aaa
cmp
mov
lock
push
lcall
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmpsb
pop
lret
push
cmp
sub
data16
push
and
or
sarl
je
mov
inc
adc
icebp
sti
and
movsl
daa
pop
mov
fiaddl
in
sub
movsb
cmp
adc
add
nop
shll
lret
push
nop
mov
sub
push
loop
add
mov
jns
sub
mov
ret
ss
push
rclb
mov
sbb
inc
adc
lret
adc
pop
call
cmp
int
idivb
insb
sbb
clc
dec
add
push
lea
cld
hlt
cmp
push
inc
loope
cmpb
out
lds
jl
test
cmp
xor
dec
or
pop
mov
push
push
push
pushf
rorb
test
add
push
rcll
insl
lcall
decb
push
pop
int
mov
imul
aas
popa
in
cmpsb
xor
xchg
loope
cmp
xor
pop
mov
call
mov
orl
push
sbb
test
int3
xor
cmp
jmp
clc
inc
int3
jmp
push
xor
les
add
scas
jmp
push
xchg
mov
clc
jo
jb
push
adc
imul
ljmp
jns
inc
pop
xchg
jecxz
or
sub
add
xchg
adc
push
sbb
push
mov
mov
adc
add
jmp
movsb
sub
add
jb
rclb
sbb
mov
out
add
jns
cld
rorl
ret
add
iret
imul
push
mov
inc
and
dec
or
sbb
push
daa
adc
es
mov
subl
ret
inc
push
or
jne
sar
dec
cmp
jbe
push
pop
sbb
push
mov
cmp
jne
lock
in
rolb
mov
shr
lea
not
and
decb
jne
test
scas
jp
and
adc
mov
add
push
pop
add
mov
or
push
or
cld
add
pop
rolb
and
push
or
mov
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
mov
fimuls
and
xor
pop
push
xor
jno
mov
fsts
out
not
and
roll
jne
sub
out
loopne
insl
insb
dec
loopne
mov
xor
push
jle
pop
dec
add
lret
movsb
mov
cmp
ret
adc
and
lods
movsb
ficoms
mov
or
inc
mov
loopne
sub
adc
mov
je
stos
add
rorl
add
jp
lret
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
sahf
ss
ja
xor
mov
push
cmp
pop
scas
mov
pushf
push
shll
sbb
incb
lsl
scas
fidivs
push
call
aas
gs
push
or
in
cmp
jle
mov
sub
dec
inc
adc
inc
dec
hlt
test
xor
and
push
mov
mov
and
adc
int
ds
movl
enter
mov
adc
test
sub
cmp
or
adc
cmpsl
adc
mov
insl
dec
shlb
inc
push
mov
ret
imul
je
sub
cwtl
outsl
push
aaa
ss
add
imul
stc
negb
jo
icebp
push
push
jae
aas
inc
adc
xor
inc
mov
or
push
push
cmp
int3
movsb
adc
fadds
adcb
fwait
orl
mov
lds
mov
xor
das
adc
xorb
add
rolb
mov
ret
imul
mov
incb
pop
mov
dec
loop
dec
jne
or
add
xor
lret
sbb
popa
mov
rorb
xchg
iret
rcll
xchg
jmp
insb
cmp
int3
in
fucom
adc
adc
mov
push
out
mov
cld
lock
call
jmp
add
je
clc
add
dec
jp
jo
daa
add
adc
add
fs
hlt
push
inc
fistps
inc
inc
mov
lock
fimuls
sbb
cli
clc
jne
or
lds
not
and
xorps
or
dec
or
fwait
adc
sbb
sub
sarb
mov
fsubrl
popa
add
cld
aam
cmp
scas
inc
sti
or
mov
and
pushf
jle
clc
cmp
ret
int3
inc
cmp
cmp
xor
add
pop
pop
push
cld
pop
stc
add
mov
int3
push
or
add
mov
imul
test
nop
es
add
das
movsb
add
nop
dec
or
sbb
add
push
jns
and
dec
pop
sub
add
xchg
sti
xchg
pop
adc
pushf
sar
dec
mov
jmp
fstpl
nop
adc
insb
lea
jbe
jg
mov
jle
mov
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
pop
pusha
test
adc
inc
insb
dec
inc
pusha
scas
xor
test
push
clc
mov
sub
js
xchg
jl,pt
bound
fisubrs
mov
mov
inc
dec
insb
pusha
push
cld
loop
xor
push
sar
dec
jp
mov
push
movsb
pop
adc
adc
xor
push
jl
cmp
dec
mov
out
je
fisttps
mov
dec
push
adc
sbb
adc
inc
jecxz
ficoms
add
loope
ret
ja
dec
lea
mov
test
mov
ret
adc
push
cmp
lods
sub
into
mov
test
cmp
lods
dec
inc
sub
lret
sbb
or
mov
insb
sub
lods
pop
and
inc
add
mov
push
push
push
jge
adc
out
adc
cwtl
dec
les
in
or
stos
pop
js
sub
fldcw
push
adc
and
decb
xlat
pusha
or
insb
sbb
adc
rcr
xchg
push
mov
cli
jae
fnstenv
jmp
jnp
add
shrl
aaa
arpl
adc
and
adcl
sub
jle
jle
jb
lcall
cmp
je
mov
fcmovnb
mov
in
cli
and
mov
mov
dec
pop
iret
jne
xor
pusha
inc
inc
jno
mov
adc
adcb
add
out
repz
lret
scas
dec
mov
and
jne
mov
loope
aaa
loopne
and
leave
inc
test
inc
push
stos
sbb
or
out
icebp
sbb
jle
in
add
aam
xor
dec
add
xchg
xchg
loopne
cmc
sbb
iret
push
inc
jge
mov
out
and
mov
sub
cld
push
decb
jne
lods
repnz
jmp
adc
sub
dec
mov
inc
pusha
dec
bound
dec
push
and
push
clc
into
xor
dec
test
xor
jp
cmpsl
movsl
call
push
fs
pop
xor
dec
xchg
fsubrs
cmp
mov
or
push
or
dec
cld
inc
out
add
push
fiaddl
or
push
mov
add
aaa
sub
or
sbb
incb
sarl
and
lods
test
lea
loop
ret
dec
jne
cmp
pop
xor
push
ds
or
add
sbb
scas
cmp
testb
imul
ja
cmp
pop
jb
or
xorl
add
mov
mov
jbe
or
inc
lea
cwtl
dec
mov
xchg
push
mov
roll
or
pop
sbb
cltd
aaa
iret
test
dec
mov
rolb
add
out
xchg
sbb
shlb
dec
mov
add
dec
mov
xchg
inc
inc
cmp
cmp
or
pop
lock
cmp
push
mov
mov
popa
pop
add
xor
pop
inc
repnz
cmp
add
pop
push
add
adc
or
sub
adc
add
xchg
inc
sbb
daa
movsb
sub
jmp
push
dec
jno
push
and
mov
sub
std
lahf
mov
adcl
clc
daa
push
divl
inc
push
lahf
pop
pop
jne
push
lods
rcll
pop
mov
std
arpl
push
mov
adc
test
mov
lret
cmp
pop
inc
pusha
test
inc
js
add
jmp
jno
push
hlt
or
pop
jl
xchg
xchg
mov
sub
lahf
mov
int3
push
sbb
imul
and
push
iret
xchg
adc
mov
or
xchg
add
int3
mov
call
lods
aam
hlt
adc
lret
aad
xchg
cmp
xchg
and
rol
mov
mov
outsb
push
std
insb
jge
jmp
movzwl
sub
jb
or
int3
test
pushf
mov
into
je
cmp
mov
decl
rorl
sbb
out
nop
test
xchg
imul
test
enter
pushf
loopne
pop
lcall
push
inc
pop
ja
or
je
movsb
mov
cmp
divl
xor
movb
fsts
jo
adc
fwait
xorl
imul
imul
mov
or
jne
cmp
sub
seto
leave
lea
mov
leave
sbb
scas
and
hlt
ficomps
mov
hlt
hlt
icebp
test
cmp
push
inc
pushf
or
mov
adc
sbb
jbe
sbb
adc
and
nopl
jg
add
sub
out
inc
cmp
xor
sbb
movb
notb
and
push
int
xor
jmp
int3
les
adc
and
int
push
mov
xor
sahf
aaa
ret
in
shll
lea
mov
xchg
sbb
call
test
subb
test
xor
sbb
sub
call
push
mov
leave
enter
adc
test
mov
dec
movsl
jb
mov
neg
sub
enter
insl
and
push
cmp
inc
dec
outsl
xchg
sbb
repz
jo
repz
inc
push
jns
repnz
fimuls
repz
mov
mov
stc
lock
adc
icebp
test
xor
repz
enter
shr
inc
enter
mov
sahf
pop
in
mov
push
hlt
xchg
repz
lods
test
shrb
xchg
mov
orb
call
push
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
stos
sarb
mov
mov
sysret
mov
add
cmc
or
xor
nop
out
sahf
push
and
mov
leave
jno
sarl
and
ss
xchg
adc
jne
cmp
pop
jl
pop
push
jg
xchg
movsb
cltd
and
lock
inc
js
lret
cmpsb
lock
ret
mov
daa
or
ret
lods
push
inc
js
stos
in
jbe
pusha
inc
or
fwait
shrl
mov
xor
xchg
and
rorb
in
or
inc
sbb
adc
pushf
or
or
orl
sbb
mov
cmp
ja
dec
jecxz
in
pop
dec
dec
adc
add
inc
daa
adc
push
adc
jmp
mov
ss
andl
testb
or
or
push
fsubs
push
adc
mov
inc
add
dec
ret
in
jne
fstpt
lods
sahf
add
hlt
stc
mov
cmp
ja
inc
cld
push
cs
mov
nop
jp
fstps
cmp
mov
adc
movsl
add
pop
pop
and
test
or
int3
pop
jg
pusha
jo
lret
sbb
push
or
shll
enter
sbb
and
movsl
pop
sbb
add
xor
dec
cmp
cmp
imul
cld
jno
lcall
cmp
sub
cmpsb
xor
int
push
adc
fcoml
scas
mov
je
push
insb
xchg
pop
sbb
add
cmpsb
sbb
push
pop
sub
sbb
dec
mov
add
jno
je
push
or
or
dec
es
inc
fdivrs
adc
imul
out
fldl
or
dec
pop
loopne
fldl
or
fldl
adc
ja
mov
xor
jbe
lcall
bnd
jmp
jo
push
dec
sub
fldt
mov
cmp
sub
xchg
dec
je
test
and
sbb
sti
inc
in
fnstenvs
lcall
sbbb
test
lahf
push
in
into
inc
loop
add
insl
test
sub
sbb
mov
mov
stc
fwait
add
and
adc
jno
mov
mov
add
pushf
cld
add
jns
mov
jmp
push
in
in
in
pop
push
call
aas
movsb
popa
fstl
push
shl
push
sub
jne
das
notb
lock
iret
repz
mov
mov
cmp
repz
cmp
iret
clc
add
andl
add
arpl
xchg
enter
sbbb
or
dec
inc
xchg
push
cmp
jg
add
push
es
mov
push
ds
xchg
jnp
mov
inc
jle
pushf
and
incb
and
jb
push
xchg
jmp
inc
faddl
or
mov
frstor
lods
sub
popa
push
jmp
push
and
cli
clc
push
fmull
jae
daa
push
int3
inc
jp
cmp
xchg
and
ret
and
push
push
adcl
sbb
outsb
cmp
mov
mov
mov
dec
jne
stos
test
dec
xchg
mov
dec
rol
js
inc
aad
add
adc
adc
sar
fwait
xchg
lret
lret
mov
mov
int3
pusha
mov
shl
les
and
std
movb
adc
inc
into
jne
sub
pop
xchg
pop
mov
repz
clc
orb
inc
pop
add
incb
dec
or
out
add
jg
xchg
dec
sbb
loopne
sar
lea
test
and
xor
inc
fxch
mov
int
adc
push
test
jle
xchg
out
test
inc
pop
cs
dec
pop
push
dec
inc
push
pusha
and
lods
std
push
or
or
mov
mov
mov
xchg
std
lods
and
andl
jb
pop
int3
shl
cwtl
pop
enter
enter
dec
dec
scas
push
inc
push
pop
or
add
sub
push
jp
xchg
imul
sub
cmp
fsubrl
in
mov
ljmp
mov
popa
sub
bound
dec
mov
and
mov
mov
or
inc
loop
cli
pop
lods
add
arpl
call
push
inc
sub
pop
cmpsb
in
adc
outsb
in
push
mov
cmp
jne
add
mov
xor
movsl
pop
orl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
push
cmp
mov
adc
leave
jae
mov
repz
mov
fwait
mov
in
inc
push
loopne
add
mov
bnd
cmp
call
popf
jo
jmp
dec
sahf
dec
add
js
jo
xchg
adc
xor
adc
dec
sti
push
inc
cmp
lea
popf
in
mov
jns
mov
loop
jge
les
add
ret
jne
xor
cwtl
xchg
mov
push
adc
ficoms
mov
adc
inc
push
sub
pop
xchg
enter
fcmovb
pop
sbb
jns
daa
mov
scas
sahf
add
out
lret
lods
cld
and
dec
pop
sub
notb
adc
enter
mov
mov
jnp
sub
jno
add
mov
pop
cli
bound
into
je
divl
pop
insb
in
lcall
pop
jb
ret
adc
dec
cmp
test
xor
add
lret
sbb
enter
lock
aaa
mov
lds
mov
mov
jns
std
adc
sbb
lds
mov
test
in
dec
mov
push
inc
test
and
mov
popf
cmp
sti
and
call
stc
call
rol
cmp
pop
out
in
std
push
mov
lds
rcr
xor
daa
arpl
sub
mov
inc
mov
cmp
nop
std
lds
das
bound
sub
mov
xchg
std
out
imul
mov
push
fisubrl
rorb
sarl
orl
sbb
ret
outsl
xchg
je
sub
pop
popa
jl
test
mov
xor
shrl
lods
mov
mov
movsl
sahf
aad
test
and
xchg
mov
xor
shll
mov
inc
cmpsb
inc
mov
cmpsb
inc
adc
popa
insb
dec
mov
cmp
sbb
dec
mov
push
mov
std
call
nop
std
xor
mov
adc
nop
test
xor
sub
frstor
cmp
push
popa
mov
decl
ds
cs
sbb
cmp
jns
push
test
sub
dec
imull
jmp
dec
ret
cmc
xchg
lret
rcrl
jmp
cs
std
xor
push
sub
jge
movsb
sbb
jmp
scas
adc
and
test
or
or
jmp
je
in
ss
test
enter
jl
in
mov
std
adcl
dec
cmpl
pop
push
int
je
lods
bound
inc
inc
into
dec
mov
movsb
adc
or
pop
add
mov
push
inc
lret
jne
cmp
adcl
xchg
sbb
repnz
lods
mov
jp
jne
fdivr
les
dec
pop
dec
or
and
movsb
ret
std
std
add
loope
sub
mov
sub
enter
das
mov
test
mov
sub
xor
inc
add
iret
push
popa
mov
or
push
pop
mov
testb
dec
dec
mov
add
xor
mov
and
or
jo
roll
push
inc
sbb
movsb
ror
adc
dec
rcrl
lea
out
inc
int
pop
es
mov
dec
test
add
add
mov
cmpb
fdivrs
xor
xchg
loopne
in
push
push
jecxz
mov
adc
imul
lret
and
repnz
adcb
in
sbbb
icebp
or
lock
pop
loope
cmp
or
cmc
xor
lret
cmp
outsb
jae
lock
xor
and
dec
dec
push
lock
sub
jbe
or
add
mov
or
je
pop
test
jl
in
aam
scas
movsl
call
add
call
mov
or
aam
bound
inc
enter
adc
test
jb
or
aam
aam
aam
enter
les
out
xor
outsb
mov
sub
adc
mov
movsb
jb
ja
sbbl
xchg
push
cltd
mov
inc
and
mov
mov
lods
test
rcrl
dec
inc
es
cmpsl
inc
push
test
push
outsb
pop
mov
rorl
pop
push
test
dec
cmc
loope
xor
mov
insl
and
pause
fwait
mov
jb
test
mov
cmpsl
add
mov
mov
rcrb
or
xchg
pop
pop
inc
jo
xor
inc
jb
adc
fisttpll
mov
mov
or
outsl
xor
mov
or
mov
adc
jp
aaa
inc
out
pop
push
or
dec
mov
imul
mov
sub
adc
add
add
sbb
cltd
fs
movsb
bound
aas
dec
inc
jns
adc
adc
test
and
repnz
enter
jb
leave
push
pushf
pushf
nop
xor
pushf
xchg
popf
push
and
or
dec
push
mov
pop
je
jmp
push
xor
dec
iret
sarl
pop
cmp
inc
add
fildl
imul
lcall
pop
adc
popf
xchg
and
add
mov
push
jmp
jg
jg
adc
and
adcb
jo
dec
and
mov
nop
pop
lods
adc
cltd
mov
cli
sub
or
das
jmp
or
and
or
cmp
test
lret
out
or
sub
push
or
add
test
adc
sahf
jmp
test
jmp
neg
pop
mov
cli
pop
movsl
jmp
push
push
add
and
add
pop
adc
sbb
inc
or
xlat
adc
fwait
lahf
out
pop
pusha
int
outsl
push
push
dec
adc
push
and
aas
xchg
lret
dec
push
pop
outsl
inc
repnz
jl
outsb
push
jbe
jle
sbb
lcall
int
fsubl
mov
hlt
xchg
sbb
inc
sahf
inc
xor
push
cmp
int3
lret
and
or
test
adc
adc
fsubl
pusha
into
and
call
mov
sub
adc
or
sahf
aaa
cmc
or
sub
mov
add
sub
adc
in
lock
rep
jge
xor
fcoms
add
xchg
ss
push
test
and
or
insb
inc
mov
ret
xlat
jmp
pop
dec
dec
gs
jae
cmp
out
shlb
in
cld
xchg
sub
pop
rclb
inc
loopne
loopne
or
push
pop
rorb
pop
rcrb
dec
jne
inc
adc
jl
icebp
jo
pop
sbb
pop
sarl
sbb
imul
dec
mov
icebp
test
aaa
pop
inc
stos
pusha
test
lea
jge
mov
mov
sub
adc
cmp
orl
test
and
push
mov
dec
xor
mov
sub
in
or
jb
xchg
jecxz
shrl
adc
data16
dec
xor
cs
lret
inc
or
jl
loope
gs
xor
or
shlb
and
outsl
mov
test
je
div
cli
cmpsl
cmc
xor
loop
ret
aaa
mov
sub
or
lahf
or
outsb
and
jne
lea
push
and
add
les
mov
push
mov
add
iret
and
stos
bound
sub
sbb
jno
into
orb
fldt
mov
cs
add
cmp
out
mov
and
call
fsubrs
pop
sub
sbb
jmp
in
inc
add
dec
and
pushl
test
cmp
gs
sbb
mov
add
mov
xchg
into
std
fisttps
cmp
xor
je
hlt
daa
int
or
clc
inc
push
inc
sbb
jae
testl
es
ss
fdivr
mov
test
lret
test
es
les
bound
cs
pop
pop
mov
iret
mov
jae
push
mov
or
fnsave
and
mov
push
xchg
mov
add
setl
pop
idiv
cmp
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
jg
int
dec
adc
inc
mul
pop
jb
cmp
or
fistl
jbe
dec
sub
sbb
and
adc
or
fcmovu
fcmovu
or
fxch
push
push
sub
add
inc
or
in
xorl
inc
and
mov
jmp
jge
inc
repz
clc
mov
movb
adc
inc
stc
adc
and
dec
arpl
daa
push
les
push
push
adc
addl
dec
cmp
sub
add
sbb
or
add
cmp
xchg
and
sbb
pusha
xchg
xor
stos
adc
sub
pop
jge
mov
fwait
inc
dec
sti
and
push
mov
dec
mov
loop
dec
cmp
mov
add
out
jp
or
iret
cmp
dec
test
dec
inc
xchg
xor
cmova
dec
sbb
test
dec
add
sbb
roll
jno
call
jne
lea
jb
or
pop
adc
sbb
lret
pop
aas
pusha
and
pop
aad
adc
jae
push
sub
test
popf
imul
pop
cmp
fs
xchg
adc
test
pusha
rclb
and
and
add
mov
and
mov
ljmp
pop
or
jl
mov
pop
mov
cld
sbb
orb
jl
sub
add
pop
push
push
dec
push
adc
aas
adc
add
adc
push
outsl
add
mov
mov
inc
xor
sti
mov
mov
flds
test
add
movsb
rorb
jb
in
or
stos
add
push
popa
mov
pop
xor
test
dec
clc
add
jge
mov
pop
sarl
sub
add
nop
adc
mov
subl
inc
lock
or
xchg
rolb
mov
xor
sub
inc
cmp
xor
push
aad
mov
cltd
mov
sahf
into
faddl
fwait
add
cmpsl
fldl
push
repnz
je
lea
pop
mov
fisubs
nop
nop
sbb
test
mov
ret
and
fs
add
add
je
mov
ficomps
mov
cld
iret
sahf
push
sub
xchg
jne
or
movsb
shl
push
adc
xchg
loopne
xor
inc
sbb
add
stc
xor
movsb
rcll
jo
and
xchg
pop
and
addl
jne
mov
add
mov
inc
rcl
test
ret
out
cmp
je
ss
sahf
mov
repnz
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
add
inc
sbb
pop
and
mov
and
and
std
sbb
jbe
or
push
rolb
push
fiaddl
fmull
insb
clc
and
xchg
dec
dec
nop
pushf
inc
lods
hlt
xchg
push
ds
icebp
repnz
rol
lahf
or
mov
sbb
jle
cmp
cmp
or
out
sub
inc
fistpll
xchg
dec
les
pop
and
or
add
cmpl
loop
xor
inc
dec
sbb
mov
pop
jne
addb
int
mov
jno
push
push
aam
dec
sbb
dec
fimuls
mov
mov
loopne
push
dec
jo
jb
inc
sub
icebp
mov
pushf
lahf
push
push
mov
mov
rol
sbb
dec
xor
lock
adc
xor
add
push
xor
pop
ja
sub
sub
adc
and
pop
add
cmp
dec
pop
dec
and
jle
pop
add
loop
testl
arpl
mov
ja
push
pop
mov
pushf
xorb
dec
sub
imul
or
fidivrl
inc
orl
test
cmp
xor
xor
pop
cli
mov
in
cmp
int
sub
and
pop
dec
pusha
cmpb
or
in
movsl
xlat
add
nop
test
inc
cwtl
lock
fsubl
int3
and
leave
and
lret
adc
xor
sbb
loop
sub
xor
fs
in
mov
sbbl
pop
orl
sbb
cmp
lea
xchg
push
scas
push
cmp
mov
jo
inc
lock
popf
sbb
sbb
push
sbb
int3
pusha
les
add
xchg
outsb
jae
sub
dec
or
dec
rcrl
push
or
add
cmp
icebp
imul
outsb
or
daa
and
mov
in
hlt
add
pop
push
adcb
cmp
pushf
nop
into
aad
inc
stos
inc
ret
dec
std
inc
jp
dec
loopne
or
divl
loope
lock
push
and
insb
sahf
or
fnstcw
mov
jge
aad
aad
andl
mov
mov
mov
rorl
lcall
pop
xchg
cld
dec
ss
lcall
sbb
jle
or
push
xchg
push
dec
mov
dec
pop
dec
or
outsb
sbb
xchg
aad
sbb
fidivrl
fwait
xor
cmovnp
push
shlb
in
add
mov
ret
adc
or
je
jge
pop
and
inc
pusha
jne,pn
cmp
rol
inc
mov
packssdw
fcoml
mov
cmp
jge
and
divl
pop
mov
mov
gs
mov
sbb
push
push
popa
cmp
dec
jmp
stos
insb
stc
and
repnz
add
and
pop
aaa
xor
adc
shlb
push
rorb
in
add
push
popa
arpl
xchg
dec
jo
jmp
mov
popfw
loope
test
inc
outsl
dec
cmpsb
pop
movsb
sub
or
jmp
jno
add
jne
inc
mov
bound
and
cmp
lret
sbb
and
cmp
jbe
insl
loopne
jb
scas
push
dec
add
and
xor
jnp
mov
and
testl
ja
inc
test
add
inc
nop
and
adc
imul
pusha
cmp
jmp
push
pop
inc
or
aam
cmc
sbb
dec
flds
pushf
and
mov
inc
outsl
call
inc
fisttps
push
out
push
mov
push
jmp
aad
mov
outsb
dec
adcl
popa
es
ljmp
xor
or
cmp
cs
ret
cmp
sub
add
enter
adc
mov
in
daa
imul
push
mov
add
and
or
dec
add
mov
orb
stc
and
out
mov
movl
call
mov
in
fdivs
cmc
xlat
cld
pusha
out
mov
inc
and
cmp
pop
mov
adc
dec
or
mov
push
jbe
xchg
addb
and
push
push
xchg
popa
xchg
inc
mov
movsb
mov
or
and
add
arpl
sbbb
jne
xchg
add
inc
inc
xchg
popa
jge
stos
ja
and
ss
jmp
push
faddp
stc
xor
add
or
mov
incl
rcl
loopne
xor
inc
pop
je
pop
es
xor
or
mov
aam
xchg
and
mov
push
shr
outsb
adc
add
test
mov
xchg
or
dec
or
cmp
js
and
inc
mov
mov
out
inc
mov
test
pop
jmp
xlat
cmp
arpl
sub
dec
loope
ljmp
cwtl
or
lods
push
mov
xchg
push
insb
inc
dec
mov
pop
fldenv
mov
and
push
outsb
pop
push
mov
or
jo
call
lea
mov
mov
adc
shl
setle
insb
mov
ss
stos
nop
push
fimull
pop
testl
jecxz
or
sbb
add
and
js
jo
jle
or
push
pusha
icebp
mov
rorb
inc
jb
push
inc
or
or
mov
aaa
sahf
and
cli
cmpsl
inc
ss
mov
insl
mov
cmp
dec
sbb
or
jne
repnz
cmp
push
sar
nop
or
adc
lods
hlt
popa
arpl
mov
dec
or
jp
and
dec
inc
add
daa
aad
mov
push
cmpl
pop
sbb
xchg
push
imul
lock
cmc
ret
or
jo
xor
mov
bound
int
js
sbb
ljmp
cmp
fildl
xor
sub
mov
lea
pushf
in
cli
aaa
pusha
xchg
push
pop
push
dec
loop
add
add
and
cmpps
or
lea
mov
mov
orb
or
or
push
aaa
test
fisubl
xor
inc
mov
outsl
add
jge
adc
dec
mov
push
into
pop
mov
add
pop
loop
out
and
jl
or
sbb
sbb
sbb
push
xchg
pop
aaa
clc
adc
and
lea
xchg
sub
pusha
and
and
push
cmp
daa
fcmovu
mov
add
sar
sarb
jg
or
adc
fcmovnb
adc
xchg
jle
add
push
push
mov
data16
or
xchg
push
jmp
mov
add
and
shl
add
inc
loopne
out
inc
add
push
or
int
idiv
rcrb
inc
or
inc
adcl
jp
mov
ret
xor
push
adcb
ss
jb
xchg
andl
testb
or
rorb
cwtl
adc
inc
mov
jge
sub
aas
push
aaa
xor
rcrl
push
mov
jne
test
loopne
cmp
or
je
and
in
mov
dec
movl
out
les
jl
mov
notb
cmpsb
rolb
test
stos
or
dec
out
mov
hlt
adc
shlb
pop
cmp
push
mov
inc
aam
xor
push
sahf
mov
push
shlb
cltd
xor
and
jg
je
dec
mov
or
adc
lock
fisttpl
push
shll
add
enter
push
jecxz
mov
and
jb
rcrl
icebp
mov
imul
cmpl
dec
pusha
adcb
pop
clc
in
mov
shll
pop
mov
popa
push
mov
push
add
jae
adc
adc
add
xchg
add
cmp
ret
add
jmp
pushl
add
jl
xor
push
jne
and
add
rcrl
mov
add
adc
jns
decb
adc
jl
jge
sbb
pop
test
push
stc
sub
xor
lahf
xchg
in
dec
add
sbb
adc
js
sub
mov
je
push
inc
mov
imul
ljmp
add
inc
xor
ficomps
or
int
xor
mov
add
xchg
icebp
push
and
andb
push
push
or
and
jb
loopne
inc
cmpsl
add
push
addr16
call
shrl
xor
and
xor
lock
fdivr
mov
push
jmp
adc
push
iret
decl
cmp
push
pop
dec
push
ljmp
ds
and
lock
push
push
es
sub
cmp
test
adc
or
js
and
push
pop
fisttpl
out
cmp
jg
inc
sbb
add
sbb
test
ret
mov
imul
cs
mov
cs
jns
mov
pushf
sbb
sbb
adc
add
sub
sbb
mov
dec
fsubrl
add
or
and
push
mov
aas
mov
popa
loope
int3
pop
call
data16
call
or
sub
adc
pop
xchg
test
outsl
jo
and
jae
test
mov
pop
or
insl
jg
movsb
push
faddl
fdivrs
inc
mov
jmp
daa
push
and
inc
mov
aaa
leave
enter
push
jecxz
cmp
test
or
dec
xchg
subl
xchg
cmp
sbb
fbstp
jl
cmp
jg
inc
jmp
scas
hlt
ret
sbb
jne
imul
add
add
shrb
jge
aas
sbb
add
mov
cmovge
fsubs
inc
sub
pop
popa
inc
pand
pop
adc
mov
mov
xchg
testb
mov
adc
push
jp
pop
imul
xor
jne
push
ja
cld
and
or
incl
mov
mov
and
or
xor
push
hlt
sbb
roll
mov
lods
test
mov
into
xrelease
sarl
or
fnstcw
inc
mov
nop
pop
data16
sbb
mov
mov
and
cmp
decl
rolb
add
repnz
cmp
arpl
sbb
rcl
outsl
in
sub
decb
cmp
dec
dec
inc
loopne
jne
xchg
loop
sub
mov
idivl
or
add
xchg
mov
loope
push
jg
push
push
add
in
mov
mov
mov
je
test
jle
cmp
jl
and
mov
pop
insb
je
enter
loopne
sub
adc
outsl
or
pushl
addr16
mov
icebp
add
test
and
or
mov
jae
adc
fucomp
xlat
sahf
sub
adc
mov
sbb
xor
inc
das
adc
and
and
cs
jne
inc
sbb
adcl
cmp
or
adc
inc
daa
or
dec
clc
adc
push
adc
arpl
mov
lods
push
sbb
and
filds
or
lock
insb
fwait
loopne
and
mov
inc
or
pop
push
inc
nop
lret
imul
cmp
lock
push
jl
push
xor
mov
or
add
add
outsb
or
jg
xchg
fcoms
sti
aas
add
andb
pop
fsubrl
jo
fstpt
pusha
pusha
push
test
dec
sbb
and
push
push
adc
test
imulb
sahf
out
mov
xor
pop
jg
hlt
xchg
push
pop
jl
mov
movsb
fadds
dec
sub
test
leave
xchg
or
fstl
xchg
xor
fisttpl
test
cmp
or
sub
les
gs
add
mov
addr16
test
aam
outsl
dec
xor
sbb
jle
mov
aaa
mov
in
je
ss
inc
inc
push
adc
cmp
sub
aaa
test
out
push
jp
mov
inc
idiv
sbb
test
ficomps
cmpl
dec
or
clc
cltd
ja
inc
or
sbb
je
mov
inc
push
cli
jle
push
scas
or
cmp
mov
sbb
notl
xchg
jbe
xchg
into
pop
lods
adc
or
addr16
movsl
xorl
cmpsl
and
sbb
or
test
popf
pop
mov
rcl
pop
inc
cmpl
cmp
inc
cmp
jmp
push
lret
pop
sbb
sbb
scas
out
ret
cmp
out
sbb
clc
cmp
mov
lock
pop
push
shlb
pop
xor
mov
adc
or
test
lock
or
push
les
inc
cld
cmp
rolb
clc
inc
out
pushl
inc
ret
jb
repnz
je
shll
loope
sbb
fcoms
repz
xchg
imul
jmp
repnz
test
je
popf
and
nop
jle
incl
dec
push
sub
dec
jl
push
scas
cmp
cmp
or
je
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
add
pop
shl
add
add
dec
add
xor
push
lods
mov
and
cmp
lret
mov
ret
or
mov
sbb
xor
inc
pushf
cmp
jne
jl
nop
inc
mov
mov
jno
push
or
sbb
and
xor
adc
push
cmp
fsubrl
add
fadd
pushf
sbb
add
mov
xchg
mov
icebp
cmpsb
or
scas
enter
sbbl
dec
or
or
inc
repz
jg
xor
xor
daa
sarb
popa
xlat
cmp
test
mov
mov
xor
sbb
stc
pop
je
pop
cmc
and
fisubrl
icebp
cmp
imul
mov
and
push
lcall
jbe
adc
aad
lret
mov
fildl
xor
les
cld
pop
push
cmp
jl
mov
inc
add
pop
cwtl
dec
adc
xchg
mov
jle
pop
lock
testb
jne
clc
push
mov
or
std
sub
call
sub
cmpsl
mov
movsb
add
push
cmpsb
sbb
cmp
mov
lods
in
dec
inc
loopne
dec
xor
enter
icebp
cmp
int3
cmpb
mov
or
lret
insb
sbb
add
xor
pop
insb
or
xor
mov
add
cmc
lods
mov
inc
das
shll
jne
repnz
and
xchg
xlat
jns
cs
imull
es
frstpm(287
or
out
push
arpl
aam
mov
mov
sub
outsl
pop
clc
mov
inc
inc
pop
jle
xchg
popa
push
test
jmp
inc
jp
movsl
mov
fistps
and
ror
repz
xor
pop
push
inc
push
or
mov
push
jle
loope
test
push
xchg
sub
sbb
jno
clc
dec
inc
push
insl
cld
add
add
xchg
dec
sbb
stos
rorl
aam
jo
jl
hlt
mov
sub
outsb
add
and
and
addl
and
popa
jge
lock
loopne
sbb
dec
in
icebp
fistl
cmp
fstl
orl
fcompl
mov
hlt
pop
sarb
mov
aad
jecxz
cmp
or
shr
imul
popa
sbb
sbb
push
aad
ret
scas
pop
and
negb
std
jb
test
adc
js
jne
es
cmp
notl
shr
movsb
ljmp
sbb
push
adc
push
fwait
pusha
and
insb
sbb
enter
inc
stos
push
sbb
clc
push
mov
mov
cmc
adc
cmp
xor
add
test
test
mov
mov
mov
inc
nop
adc
xlat
je
cmp
adc
cmp
sbb
icebp
jb
testb
jo
adc
sub
xchg
add
inc
dec
and
jge
push
jnp
cmp
jmp
inc
movb
and
ss
mov
divb
cmp
roll
push
or
mov
push
inc
shll
push
add
call
jmp
das
xor
decb
lea
outsl
test
les
jecxz
push
out
cltd
mov
mov
cld
mov
inc
hlt
and
pop
mov
pop
sbbb
mov
jmp
mov
jmp
xchg
push
inc
pop
pop
inc
push
jno
mov
xchg
adc
push
push
pop
clc
cs
push
push
mov
mov
loope
and
pop
sub
sbb
adc
xor
outsb
je
or
cmp
jb
jbe
lea
lea
and
add
sbb
cmp
sar
fcomi
std
mov
jmp
popl
push
and
xchg
scas
outsl
mov
dec
je
arpl
or
adc
das
gs
inc
aas
js
mov
mov
sti
dec
sub
or
push
mov
push
addb
orl
mov
rolb
call
pop
push
dec
int
shll
leave
xor
lock
js
stos
shrb
inc
popf
pusha
pop
cld
jnp
pop
pop
mov
lcall
or
add
movsl
push
out
sbb
xorl
or
in
ss
adc
ss
leave
leave
and
sub
ret
leave
xor
cmp
dec
fwait
xchg
and
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
xchg
xor
in
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
sub
inc
add
add
mov
push
shlb
lock
mov
inc
mov
jle
or
shlb
movsb
mov
adc
cld
adc
out
add
movsb
cltd
sbb
and
or
and
jae
and
sbb
ror
mov
pop
inc
sbb
adc
adc
xor
mov
leave
push
xor
cmp
shlb
add
dec
jne
dec
mov
or
sbbb
lret
sbb
dec
pop
or
cli
mov
push
das
in
cli
adc
or
cmp
push
fstps
mov
dec
sbb
add
add
add
push
dec
int3
inc
aam
inc
xchg
lret
pop
repnz
sub
roll
xor
inc
dec
js
fiaddl
jne
cs
push
cltd
in
xor
inc
test
sub
rolb
fcmovu
pop
pop
sbb
jle
cmp
or
or
enter
das
cmp
add
scas
push
xor
or
lock
or
push
mov
jle
push
hlt
test
cmp
fmuls
int3
adc
jle
pop
push
mov
mov
int3
or
rcrl
inc
lock
lcall
adc
sbb
aam
aam
add
inc
or
pushf
insl
enter
lods
sub
and
dec
sub
xlat
test
and
mov
jb
mov
aas
stos
mov
add
gs
jne
lock
lahf
cmp
xchg
and
add
int3
leave
inc
repnz
xchg
xchg
sub
orl
add
or
fwait
inc
cmc
push
adc
add
xchg
cmp
inc
dec
xchg
xor
and
jmp
jg
jo
add
xlat
jmp
jbe
fmuls
dec
xor
out
jg
adc
in
or
ljmp
int
add
cmc
and
rcr
call
andb
fcoms
hlt
fs
or
adc
outsb
adc
adc
test
js
inc
and
pop
mov
adc
mov
jl
mov
insl
lods
std
push
mov
push
outsl
mov
sub
jmp
enter
jg
xchg
xchg
xor
mov
movsbl
push
lods
ljmp
add
sbb
and
adc
mov
notb
sti
icebp
jp
cwtl
or
push
mov
sub
fwait
mov
push
push
mulb
pop
xchg
push
mov
popf
sbbb
mov
sub
leave
and
shl
jle
mov
shlb
cmp
xor
call
xchg
jecxz
movsl
push
ret
loopne
test
shl
dec
adc
and
out
cmpsl
std
inc
mov
sar
mov
or
sti
add
sbb
ret
neg
mov
and
iret
je
cmpsb
push
adc
and
push
adc
shll
popf
add
mov
inc
sbb
xchg
inc
insb
jb
mov
mov
test
cs
dec
shrl
fiadds
xor
mov
call
dec
sub
or
shr
pop
test
popf
pop
addl
pop
push
xchg
push
xor
ss
mov
adc
inc
adc
mov
sbb
cmp
in
lods
mov
lock
mov
mov
mov
lock
jmp
mov
in
push
add
cmp
ja
sub
add
cmp
fsubs
mov
mov
xchg
sbb
mov
movl
adc
sbb
inc
pushf
rolb
push
es
lea
mov
pop
pusha
xor
xchg
dec
pop
pusha
fcoms
popa
inc
pop
lea
mov
movsb
push
jl
dec
sub
lahf
xor
jns
xor
sarl
cmp
sarl
adc
add
add
xorl
mov
add
adc
add
ljmp
sub
leave
cmp
cmp
jne
movzwl
or
fwait
or
cmp
rcrl
out
inc
call
push
push
jmp
inc
aad
punpckldq
insl
mov
add
sub
fcomps
and
sbb
decb
stc
std
sub
or
adc
push
sysenter
sbb
inc
inc
push
orb
sbbb
cs
sub
adc
sbb
mov
jl
jmp
xchg
mov
andl
add
aaa
les
xlat
mov
xchg
cmp
jne
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fcoms
fsubrs
sub
and
icebp
dec
sbb
inc
add
cs
daa
jmp
sub
shll
xor
and
jl
mov
dec
add
cmp
rcrb
xchg
rclb
inc
imul
push
or
inc
inc
sbb
cmpsl
shlb
xchg
push
and
nop
or
aas
mov
out
inc
mov
imul
pop
xchg
cmp
js
jnp
add
push
xchg
and
xor
jae
addb
test
xchg
push
mov
fisttpl
scas
xorl
lret
jmp
xor
xor
fnsave
fs
ret
sub
test
mov
mov
jo
lret
jmp
adc
repz
jmp
or
test
aas
lea
mov
pushl
sub
xsaves
lods
xor
xchg
ja
fdivrs
jne
or
mov
les
adc
stos
cmp
adc
xor
in
clc
test
cmp
mov
mov
cmpb
mov
jg
subb
or
or
dec
cmp
cmp
pop
and
and
test
push
xor
mov
push
inc
leave
je
pop
pop
mov
aaa
push
xor
add
shr
aad
in
adc
ret
xchg
xchg
sbb
xor
mov
clc
mov
scas
inc
clc
or
add
jmp
sbb
xor
adc
loop
dec
adc
adc
unpckhps
pusha
sub
sbb
subb
pop
dec
sbb
push
xor
adc
inc
add
inc
std
insl
pop
or
mov
adc
push
add
jge
ret
lock
jae
addr16
aad
dec
sbb
push
and
mov
nop
adc
sbb
pushf
fldenv
repnz
mov
shll
ret
aas
out
int
pop
ljmp
mov
inc
pop
or
pop
push
or
mov
insb
out
add
mov
inc
jg
rcl
ret
cmpb
push
dec
lcall
mov
lock
add
nop
divb
into
sub
cmovns
cmp
test
or
cs
fsubrs
add
pop
scas
imul
push
push
lods
lret
push
loop
mov
loop
sub
gs
push
fisttps
pop
cmp
lods
jg
xor
pushf
outsl
jl
in
push
add
stos
jge
addr16
pop
inc
test
sub
test
dec
adc
xchg
rol
mov
push
in
inc
bound
cltd
lret
mov
mov
mov
pop
adcb
push
pop
sarl
lods
pop
lods
pop
pop
pop
and
pop
jbe
inc
and
jg
add
movsb
mov
add
clc
je
xor
add
dec
dec
into
lcall
icebp
xor
dec
lock
clc
add
sahf
js
mov
mov
sbb
ficoml
mov
push
push
and
ret
je
inc
cmp
shlb
jge
push
nop
test
add
js
pop
sbb
add
push
push
add
int3
xchg
mov
dec
int3
test
clc
xchg
dec
jns
add
add
inc
fbstp
xchg
xchg
pop
adc
or
lret
mov
test
lret
jae
dec
inc
imull
fimuls
dec
xor
inc
jmp
icebp
xor
jmp
jge
mov
cmp
loop
jle
mov
add
test
xchg
ret
push
jp
addr16
cmp
or
cmp
out
sbbb
test
sbb
pop
sbb
jnp
lock
sbbl
into
xor
rclb
jp
inc
push
push
cmp
mov
adc
stos
adcb
add
or
test
mov
mov
or
ds
nop
or
mov
je
and
arpl
mov
cmp
insb
dec
mov
xor
push
dec
add
sbb
loop
jmp
cmp
loope
jo
inc
dec
cmp
adc
cmc
sbb
sbb
mov
inc
xor
add
jno
mov
icebp
andl
testb
dec
ss
jbe
mov
jo
mov
cld
sub
in
xchg
cmp
dec
cmp
fsubrs
add
and
loope
leave
inc
dec
pop
out
pop
jmp
dec
into
jl
ret
ss
jle
push
sti
insl
addb
bnd
or
pop
adc
sbb
sub
stc
inc
dec
mov
add
pop
gs
imul
mov
ret
inc
inc
pop
dec
test
jmp
test
dec
inc
jnp
popa
popa
cmp
test
dec
inc
icebp
jne
shrl
sbb
mov
or
ror
xor
xor
popf
add
mov
jmp
insb
rclb
sub
cltd
test
stos
sbbb
or
inc
adc
and
adc
push
jg
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
aad
test
pop
call
or
scas
and
data16
pop
idiv
adc
popl
push
outsb
adc
mov
adc
das
xchg
and
inc
and
push
int
add
xor
inc
fisttps
or
ret
jmp
push
or
and
sbbb
cmp
mov
xchg
test
xor
rolb
and
lret
mov
adc
nop
and
shll
dec
xor
adc
in
mov
or
shr
xchg
fcompl
in
shr
and
jno
and
and
sbb
add
hlt
and
repnz
add
shlb
out
push
rorb
sbb
js
je
or
or
sub
push
sbb
clc
fucomp
outsl
incb
jmp
sbb
lock
and
mov
les
and
aaa
jecxz
in
data16
jge
add
or
mov
jns
shll
sbb
and
sub
and
jge
jge
je
sbb
loope
jecxz
or
add
lock
cltd
jbe
pusha
mov
pusha
loope
pop
sub
sbbb
dec
and
imul
fnstsw
pusha
aam
je
pusha
insl
cmp
psubsb
push
addr16
inc
testb
push
es
adc
lret
sub
add
add
loop
out
test
fisttps
std
or
das
shl
ja
popf
or
sub
xchg
push
sbb
mov
in
push
jmp
testl
fcmovbe
add
pop
xorb
divb
sub
and
inc
add
adc
add
inc
flds
fsts
mov
lret
or
pop
push
push
mov
mov
push
sbb
cmp
inc
xor
inc
dec
cwtl
cmp
xorl
imul
adcb
xchg
jbe
push
xor
lret
jp
add
pop
jp
pop
inc
aam
xchg
xor
xor
bound
xchg
dec
xchg
fcompl
fnstsw
mov
and
les
sub
sub
in
into
xor
push
push
fimull
push
or
sbb
or
test
int3
adc
ds
repz
inc
jae
test
cmc
jnp
jp
clc
jno
sahf
mov
jb
fstpl
fmull
imul
or
or
scas
cld
push
mov
inc
adcb
sub
sub
xor
or
mov
mov
iret
or
into
pop
not
mov
fcmovb
insl
in
xor
orl
fs
shl
jle
loop
jo
jp
push
sahf
jmp
pop
ret
dec
test
movsb
lods
in
sbb
adc
lds
mov
and
and
out
call
mov
mov
mov
push
add
outsl
mov
sbb
pop
adc
push
add
cs
pop
or
icebp
inc
or
add
movzbl
xlat
xchg
iret
aad
xchg
xor
dec
cmp
test
sbb
mov
push
or
mov
adc
in
adc
add
adc
fisubl
pop
add
shll
pop
sub
inc
pop
mov
pop
and
icebp
aad
push
out
and
adcl
fsubrp
fwait
imul
jno
mov
jnp
mov
inc
xor
daa
or
or
out
mov
xchg
or
mov
jo
dec
and
pop
xchg
push
sub
mov
das
loopne
mov
fmull
in
add
imul
inc
movsl
pop
add
subb
inc
sbb
mov
or
mov
shll
jbe
incb
xor
dec
mov
orb
sub
scas
popa
and
mov
jae
jb
fldl
pushf
or
adc
and
xor
pop
in
xchg
push
or
add
sub
int3
pop
sbb
clc
jge
enter
sub
cs
pop
into
jl
loope
ret
dec
inc
imul
cld
ljmp
inc
and
sti
jo
gs
cmpsl
push
cmpsl
and
mov
ljmp
adc
test
into
xchg
xchg
push
pop
fadds
into
sbb
adc
lret
pop
cwtl
and
xor
test
fbstp
jne
dec
pop
or
mov
aad
icebp
sbb
in
das
aam
gs
or
cmpsb
imul
push
or
push
xchg
jle
icebp
out
mov
push
jne
iret
scas
mov
sbb
xor
push
xlat
sahf
add
and
fsubrs
das
jae
imul
incl
sub
xchg
inc
ljmp
sub
adc
ret
fnclex
and
dec
lock
ret
repnz
xchg
sbb
push
mov
das
adc
loopne
sub
fwait
sahf
in
cs
adc
sbb
or
and
jle
fsubrl
pushf
loopne
fdivp
jb
mov
bound
jo
push
pushf
mov
inc
je
sbb
iret
loopne
inc
xchg
scas
push
mov
xchg
and
sti
jb
mov
and
push
call
jp
inc
ret
repz
out
mov
mov
es
pop
add
and
cmp
jbe
mov
adc
mov
mov
fidivrs
push
cwtl
inc
shlb
or
pusha
sub
cmp
sbb
xor
dec
lds
rorl
mov
jnp
xor
enter
movsb
push
mov
out
aam
dec
adc
or
inc
loopne
sbb
addb
gs
je
push
inc
dec
test
testl
imul
push
mov
sub
loop
jne
or
or
out
and
loope
pusha
je
insl
cs
flds
cmp
mov
dec
jmp
jle
mov
dec
cmpw
sbb
and
inc
inc
fdiv
push
adc
or
ret
xor
and
nop
xchg
ljmp
mov
fchs
xor
fs
push
dec
push
or
sbbb
test
and
aas
ja
push
mov
add
cmp
add
daa
mov
pop
test
mov
cs
or
jl
mov
or
enter
test
inc
cmp
lock
adc
clc
orb
std
test
pop
add
and
pop
ficompl
adc
add
lea
pop
in
and
dec
subb
inc
shl
mov
pop
jg
sub
loop
rolb
push
inc
jmp
adcl
fsubr
push
hlt
repz
push
cltd
insb
pop
and
mov
out
xor
inc
fbld
inc
insb
sub
pushf
jbe
dec
mov
add
test
jmp
jb
cmp
sbb
dec
cmp
inc
xchg
mov
incb
jae
sub
shl
mov
adc
jns
or
mov
and
add
fimuls
jbe
test
push
add
hlt
insl
push
dec
or
cmp
or
jo
dec
dec
stos
inc
sub
cwtl
sahf
adc
pushf
rsm
test
sbb
xor
cmp
mov
movsl
xor
sub
aaa
rorl
mov
dec
out
and
push
cld
not
mov
rorl
pop
popf
je
js
lods
cwtl
and
pop
ds
push
or
fwait
xchg
jbe
jne
shl
mov
test
mov
jl
sbb
test
inc
shl
mov
lcall
je
mov
mov
out
push
lds
pop
in
mov
add
hlt
test
testl
data16
push
lea
mov
outsb
movsb
dec
add
cli
xstore-rng
cmpsl
ret
dec
mov
pop
ret
mov
pop
xor
pop
add
adc
mov
dec
jns
inc
lock
dec
and
mov
jecxz
push
jmp
mov
pusha
cmp
out
pop
cmp
imul
mov
shll
jo
lock
jl
pop
andl
lods
mov
dec
sub
clc
lock
jl
mov
out
and
add
sub
sbb
jge
mov
add
pop
dec
sbb
lock
fld
xor
push
mov
or
cld
hlt
add
add
or
pop
loop
jl
mov
add
xchg
cmpl
adc
or
adc
and
and
inc
repnz
adc
repnz
push
add
movsb
cmp
dec
sahf
pop
add
adc
sbb
and
jl
and
lcall
push
mov
xor
push
adc
into
mov
cld
or
add
movsb
mov
adc
xchg
ljmp
mov
pop
adc
push
lods
mov
pop
sub
or
in
jne
inc
jmp
lock
sub
or
xchg
add
pop
sub
mov
int3
mov
sub
cmp
ja
xchg
inc
rcrl
jmp
fs
movsb
in
jbe
mov
add
loopne
ss
sbb
adc
mov
popa
jmp
ljmp
jmp
andl
mov
cltd
cmpsl
mov
inc
xchg
je
adc
push
adc
and
mov
sub
pop
inc
push
inc
jle
cmp
push
xor
loopne
dec
loope
sub
imul
inc
lock
movsl
push
jbe
mov
jp
or
fldcw
pushf
push
cmp
fs
cmp
je
lea
test
sub
popa
mov
xchg
outsb
sbb
pop
out
fistl
pop
jge
pop
cmp
jno
idivl
jbe
nop
add
jne
repnz
and
dec
jae
imul
sbb
in
cmp
adc
int
mov
outsb
xchg
xchg
dec
lods
out
fdiv
ds
push
sub
lock
gs
orl
in
pop
testl
scas
mov
or
stc
sub
cmp
mov
pop
mov
jbe
sub
mov
idiv
mov
pushl
mov
shll
test
mov
mov
test
js
push
div
scas
jp
add
testl
cmp
hlt
pop
sbb
mov
aaa
jne
dec
jmp
cld
push
sbb
mov
imul
mov
stc
push
adc
daa
test
ss
jecxz
add
inc
test
out
pushf
jmp
push
cwtl
pop
mov
xchg
xor
mov
dec
jnp
les
adc
daa
jne
mov
lcall
push
jmp
jge
neg
add
mov
orb
movsb
sub
cmp
icebp
inc
and
cmp
adc
mov
sbb
ret
and
jle
add
sub
xchg
mov
push
adc
lods
inc
out
dec
test
jg
mov
sarl
popf
into
lcall
popf
decb
insb
add
mov
test
add
mov
loopne
and
mov
mov
dec
or
mov
movb
pop
icebp
into
mov
mov
ret
and
mov
into
nop
sarb
jbe
cli
andl
adc
sbb
aas
out
sbb
ja
ja
mov
stos
mov
cmp
es
nop
mov
add
inc
int3
jne
push
fsubrl
enter
les
test
push
lock
jne
inc
or
cmp
xor
outsl
sarb
xor
hlt
int3
add
jne
fimull
loop
add
rcrl
pop
cs
push
addb
adc
add
les
incl
jp
scas
hlt
sub
sbb
cld
fdiv
loope
jns
dec
lock
ja
xchg
push
inc
and
push
js
subl
shr
mov
pushf
sub
lock
stc
jg
add
mov
inc
test
test
inc
call
ja
add
nop
shll
hlt
lods
add
or
shr
add
rcll
inc
lock
mov
jg
or
movsb
clc
lret
sub
mov
xor
jbe
notb
mov
int
fwait
adc
dec
fcom
insl
fadd
loopne
roll
or
mov
sahf
dec
aam
sbb
mov
mov
dec
icebp
test
enter
sbb
mov
loope
lods
add
mov
shll
add
ficompl
test
pop
aad
jg
inc
in
fiadds
push
call
push
xor
fisubl
clc
jle
jb
lret
pop
and
mov
rolb
lock
push
add
cmp
sub
test
jmp
push
arpl
mov
push
into
jmp
scas
push
xchg
shrb
dec
inc
dec
and
les
int3
and
add
xchg
fdivrs
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
ret
or
call
cmp
add
mov
sbb
fiaddl
xor
jns
arpl
cmp
scas
pop
lods
xorb
or
rclb
push
aad
xchg
in
lahf
push
mov
add
stos
test
pop
jne
cmp
push
add
scas
test
std
or
push
mov
es
dec
insb
mov
rorl
dec
pop
cmp
push
and
jg
test
xchg
adc
fidivrl
lret
cs
or
incl
stc
gs
or
out
mov
dec
cmpb
je
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
add
pop
add
fcompl
addr16
add
sub
loope,pn
inc
pop
jae
sbb
pusha
outsb
fists
les
xchg
or
pop
in
add
hlt
lahf
xor
cmc
and
or
or
add
pusha
xchg
mulb
push
adc
gs
shl
das
jmp
cmp
mov
pop
sbbb
testb
sub
xchg
mov
add
movl
rorb
or
add
popf
loop
rorl
inc
mov
test
setg
mov
cmpl
out
clc
jge
hlt
mov
dec
loop
aas
sub
xor
lea
push
inc
xchg
je
jle
add
push
mov
push
xorb
mov
jnp
xchg
sbb
pushf
sbb
loop
add
popa
add
lcall
jmp
sub
add
mov
and
adc
movsb
sahf
mov
xor
push
lea
mov
pop
inc
dec
inc
jae
and
jns
les
add
fs
in
test
cld
xor
push
or
jne
dec
or
sub
add
xor
add
jne
mov
inc
add
pop
push
or
or
daa
xor
inc
andb
xor
xchg
dec
jl
rcl
push
mov
and
insb
push
adc
or
cwtl
jmp
inc
outsl
push
ret
jbe
mov
clc
dec
adc
sub
mov
aam
sub
adc
lahf
xor
push
dec
call
enter
xchg
or
lock
adc
add
pop
data16
lock
pop
push
mov
add
add
mov
xor
sbb
jmp
ret
sbb
push
push
sub
into
adc
testl
pop
xchg
fstps
call
jp
adc
cmp
xchg
rorb
jmp
adc
mov
add
lock
adc
lret
add
stos
lret
push
pop
lea
test
or
add
fadd
jmp
loopne
add
cmp
add
enter
pop
sbb
push
lds
sbb
inc
pop
testb
loope
mov
push
mov
dec
loopne
js
xchg
mov
push
xlat
push
jmp
ret
inc
xor
leave
and
add
mov
in
or
xchg
and
sub
cmp
mov
fwait
adc
fistpl
jmp
pop
jbe
jecxz
mov
jg
ret
daa
xor
or
je
rcr
and
out
nopl
or
and
mov
or
mov
movb
jno
ss
xor
mov
xlat
or
and
adc
xor
movsl
dec
fsubrs
xchg
cltd
sub
dec
push
add
fmuls
sbb
sar
shrl
loop
pop
push
mov
cmp
jb
data16
outsl
cmpl
ret
mov
add
dec
shrd
sub
cmp
jge
xchg
cmp
ss
jl
cmpsl
dec
push
xlat
inc
clc
mov
or
cmp
int
stc
xchg
stc
inc
add
dec
jmp
jo
xchg
or
mov
sub
scas
xchg
int3
and
insb
incb
addl
inc
or
nop
subb
adc
xor
xor
jo
call
out
and
add
inc
mov
or
pop
push
fisttps
dec
jb
push
sub
or
pop
shl
fidivrl
rorl
jbe
shl
pop
inc
shll
push
addb
xor
jbe
or
push
xchg
not
mov
mov
pop
ja
push
jg
lods
jb
lret
mov
dec
dec
inc
dec
pop
pop
xor
or
sbb
sub
push
mov
cmpsb
stc
mov
daa
aam
and
es
sbb
js
int
scas
movb
jbe
pop
push
or
sbb
call
loop
call
loope
or
and
pop
orb
dec
mov
add
andb
jmp
lock
inc
sub
mov
xchg
xor
adc
shll
push
adc
sarb
xor
adc
mov
scas
enter
or
cltd
rclb
into
mov
cwtl
sbb
out
addb
and
xor
pop
push
rcrb
jb
inc
repz
cmp
add
jbe
dec
add
aam
dec
xchg
addb
mov
stos
sub
adc
push
shlb
push
jmp
insl
cmp
pop
mov
cld
cld
jl
sarb
mov
mov
inc
xchg
fisttpll
stc
mov
inc
sarb
add
ss
loop
mov
sbb
jge,pt
sti
add
je
or
pop
ffree
pop
jne
jne
out
xchg
int
jns
pop
inc
popa
je
inc
je
sarb
dec
inc
push
jmp
xor
mov
jns
roll
mov
scas
or
sub
or
cmp
nop
adc
enter
adc
add
adc
xor
inc
call
dec
add
push
pop
clc
fstps
or
mov
push
icebp
pop
cmp
repnz
inc
dec
rol
ret
out
add
push
xor
mov
aas
push
push
adc
xor
or
je
push
pop
shrb
push
inc
cwtl
inc
test
ja
mov
clc
jmp
repz
jbe
mov
cmpb
ss
jmp
jne
jp
push
add
pop
jge
xor
hlt
jb
js
add
hlt
insl
stos
movsl
xchg
pop
dec
das
cmp
xorb
and
gs
movsl
mov
xor
cmp
lahf
dec
xchg
xchg
shlb
sub
and
hlt
ja
push
ljmp
shlb
add
push
aaa
int3
sub
popa
and
mov
addr16
ss
sbb
push
cmp
rorb
xor
mov
mov
sub
mov
pop
inc
mov
imul
mov
xorl
xor
mov
cmpl
xchg
lret
or
push
cmp
or
dec
push
mov
mov
jecxz
loop
push
aam
scas
cmp
pop
call
sbb
or
mov
test
popa
movsb
ret
xor
dec
orb
or
jnp
je
mov
jge
sbb
add
pusha
hlt
lock
sbb
jno
gs
inc
cmp
test
pushf
je
aas
int
lock
mov
cmp
out
pop
cmp
sbb
lea
mov
in
nop
mov
adc
add
xor
fcom
ja
sbb
dec
mov
push
jmp
or
jmp
sahf
jle
test
or
ljmp
addl
test
aam
notl
add
and
test
jae,pn
cmp
dec
shll
or
les
add
sbb
pusha
adc
test
adc
xchg
stos
push
sbb
dec
cmp
jecxz
inc
bound
sahf
mov
jecxz
lods
cmpsl
mov
or
or
or
jns
push
push
adc
test
mov
push
cld
cwtl
and
sbb
mov
fs
xor
mov
sbb
dec
add
push
adc
xor
push
add
test
mov
jecxz
hlt
fsts
cmp
loopne
add
seto
mov
push
imul
dec
xrelease
xorb
mov
xor
xlat
inc
mov
movsb
sbb
cmp
jge
notl
mov
and
cltd
sbb
sbb
xchg
lea
xor
insb
mov
das
add
call
sub
push
arpl
and
xor
cmp
sbb
inc
jmp
fbld
and
add
xor
xchg
mov
aaa
mov
xor
stc
inc
inc
test
data16
sub
sub
jle
push
push
cmp
mov
xor
or
mov
arpl
adc
jmp
inc
add
ljmp
sbb
les
fldl
dec
jmp
cmp
mov
xchg
mov
inc
in
adc
xchg
mov
pop
pop
mov
mov
adc
mov
pop
adc
mov
js
cmp
xor
ret
xchg
xchg
adc
adc
xor
pop
mov
add
xor
inc
gs
mov
dec
sbb
cmp
sub
jmp
xchg
mov
dec
xchg
repnz
sysexit
xor
ljmp
jmp
movsl
cmc
pop
jno
loopne
mov
mov
or
dec
mov
lds
nop
adc
adc
and
movntps
sbb
sbb
es
test
push
lea
add
mov
or
push
sbb
push
and
inc
sub
push
insb
mov
inc
xor
js
dec
divb
test
mov
push
inc
jmp
pushf
dec
out
int3
mov
les
dec
inc
xor
or
and
imulb
insl
jno
inc
add
jge
adc
and
jne
je
orl
mov
add
add
cmp
mov
xor
lcall
lret
lods
decl
adc
es
add
or
fld
mov
sarl
and
out
pop
or
mov
add
add
or
imul
imul
push
popa
cld
add
in
stos
mov
cmp
sbb
mov
fildl
sub
bound
aam
push
push
jp
clc
fnstcw
inc
pop
sub
lret
popf
pop
adc
testl
sbb
cli
mov
adc
mov
or
cs
push
xor
mov
inc
rorb
cltd
repnz
dec
lock
fwait
inc
dec
enter
stc
pop
adc
inc
movb
xchg
mov
pop
sub
lods
shr
cmp
ficoms
das
adc
and
adc
iret
shl
andl
push
mov
xchg
cmc
xor
aad
test
add
lcall
adc
aas
or
mov
cmp
test
test
adc
jbe
je
lret
je
dec
call
and
sub
adc
stgi
movsb
ficoml
mov
movsl
mov
add
call
insb
in
cmp
pusha
sbb
push
add
or
pop
call
enter
add
movsb
pop
mov
pusha
push
ljmp
add
push
enter
push
cmc
outsb
inc
mov
jns
mov
cs
call
add
dec
testl
cld
inc
push
ja
xchg
in
and
or
jle
cmp
add
xchg
pop
mov
fcos
fstl
dec
cmp
lock
jl
cmpb
jl
xor
loopne
dec
mov
push
inc
mov
inc
xchg
adc
into
push
xlat
push
pop
xor
test
dec
inc
push
push
mov
push
push
mov
and
push
inc
adc
fprem1
mov
sbb
lret
jne
aam
pop
xchg
inc
and
fisubrs
inc
push
pop
add
and
sahf
nop
pop
inc
adc
mov
call
push
pushf
add
and
into
lock
enter
out
or
test
adc
flds
and
shll
in
fisttps
test
je
mov
add
or
cmpsb
cs
repnz
mov
or
add
adc
push
mov
lea
movsw
xor
cmp
movb
hlt
pop
jmp
xchg
or
xchg
xchg
mov
jmp
in
scas
lods
mov
ret
hlt
xchg
stos
enter
adc
lock
div
fdiv
fiaddl
sbb
js
jns
sbb
inc
sbb
inc
jo
inc
xchg
sbb
xchg
adc
sbb
push
inc
and
fldcw
xchg
cmpsb
and
mov
xchg
inc
adc
sbb
and
inc
cmp
fisubrl
ret
fwait
dec
jne
push
pop
pop
adc
mov
insl
or
jae
lods
rcl
ljmp
dec
and
shr
test
aas
into
mov
idiv
mov
mov
cld
lock
je
scas
hlt
xchg
divb
or
add
sbb
push
xorb
test
add
mov
call
add
and
adc
adcl
ds
add
gs
int
or
add
sbb
aas
test
sub
dec
adc
mov
ret
pop
push
mov
add
push
outsb
adc
das
push
cwtl
cmp
sbb
mov
mov
int3
sarb
mov
push
pop
and
pusha
cmc
mov
mov
lock
mov
or
addr16
daa
cs
int3
ljmp
inc
ss
insl
data16
dec
pushl
dec
fidivs
jl
push
jo
jg
adc
jge
xor
cmp
leave
jne
mov
inc
jmp
cs
cmpsl
lock
push
incl
leave
je
fnstenv
and
imul
es
mov
je
std
jg
aad
and
push
cmp
ja
add
cmp
aas
lcall
loopne
or
shll
leave
hlt
mov
mov
nop
jp
pop
cmp
pop
ss
or
xlat
dec
add
push
dec
or
push
cmp
xchg
mov
mov
and
and
mov
test
jne
scas
sbb
xor
ret
jmp
neg
je
iret
js
clc
fisubrl
push
outsl
enter
ljmp
mov
inc
add
mov
mov
or
movsb
xchg
sbb
mov
cmp
jne
or
xchg
add
arpl
add
jnp
adc
out
ljmp
aad
dec
addr16
sbbb
mov
shlb
and
xchg
or
xchg
dec
jae
push
pop
inc
test
outsb
pop
inc
sub
movsb
dec
xchg
sahf
xchg
dec
xchg
pop
xchg
xor
imul
pop
adc
sub
mov
sti
and
add
pop
xor
rcrb
orb
adc
rcrb
or
jle
mov
inc
jle
dec
mov
push
shl
jns
out
rcl
aad
jns
xlat
fcomp
fstpt
cld
dec
adc
mov
negl
add
mov
mov
into
or
pop
pop
adc
cmp
test
std
shlb
add
mov
mov
pusha
fwait
dec
push
add
push
inc
push
add
aas
jne
mov
push
add
add
divb
in
push
push
mov
adc
loope
or
mov
idivl
das
or
push
push
subb
push
fwait
bound
adc
push
jno
adc
lcall
mov
imul
ljmp
sbb
dec
lea
sar
sarl
inc
js
mov
push
test
or
fisttpl
mov
lret
pusha
shll
test
mov
pushf
cmp
add
and
sub
test
adc
mov
loope
mov
sar
leave
es
call
jl
pop
les
inc
add
decl
adc
in
insb
popf
push
or
aam
inc
roll
hlt
fucomp
loopne
sub
in
out
mov
mov
and
lea
pop
sbb
subl
pop
lcall
ja
fbstp
mov
push
pop
mov
lods
mov
inc
mull
in
je
in
ljmp
dec
adc
jmp
and
inc
jnp
or
test
shl
ret
js
mov
push
lea
adc
in
mov
dec
xchg
mov
sub
or
cmpsl
and
cwtl
movsb
sub
cmp
mov
dec
sbbl
jns
mov
inc
xchg
cwtl
mov
jge
mov
es
sar
jo
rorb
cmp
notb
and
outsl
jne
movb
in
or
mov
cld
or
and
addr16
aaa
hlt
rorb
push
push
push
push
inc
fdivrl
or
pushl
xchg
cmp
inc
lods
ss
sub
clc
in
out
xchg
or
loop
jmp
dec
xchg
push
push
adc
inc
lods
lock
imulb
sub
inc
cli
or
jns
repnz
inc
adcb
and
or
test
push
jnp
arpl
adc
outsb
xchg
aaa
ret
push
sub
fs
adcl
sub
es
pmaxub
xchg
mov
push
dec
shlb
enter
lock
in
loopne
cmpsl
add
scas
push
mov
dec
repnz
pushw
jmp
or
clc
out
jge
and
xchg
adc
inc
inc
push
sbb
inc
aaa
mov
repnz
xor
into
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
mov
dec
mov
xor
call
test
mov
lea
fcmovu
mov
xor
pop
insl
rorl
aam
inc
add
lods
rolb
jns
adc
add
movsl
add
sbb
and
cmp
negb
mulb
cmp
test
and
sbb
inc
orb
mov
ret
inc
pop
and
sbb
jmp
add
push
adc
in
lret
rolb
rcll
mov
add
xor
sbb
adc
inc
add
inc
incl
add
add
push
nop
sbb
cmp
es
sbb
pop
jle
sbb
adc
sub
push
or
stos
pop
shr
pop
add
or
or
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
and
sbb
and
mov
xchg
fsubr
lea
push
negl
add
inc
mov
inc
push
adc
sub
aas
pushf
rol
push
sti
and
push
int
xchg
mov
repnz
mov
stos
xchg
or
xor
les
enter
pop
inc
js
sbb
jbe
xabort
push
and
dec
mov
test
ja
sahf
mov
cmp
push
shlb
add
pop
add
add
mov
add
add
in
rcll
into
or
mov
inc
xchg
roll
adc
cmpsl
decl
add
xor
inc
cmpb
or
add
dec
in
pushf
les
mov
xchg
jecxz
dec
add
add
fadds
mov
repnz
adc
jp
jne
dec
mov
jb
mov
lock
pushfw
adc
dec
inc
ret
and
add
push
add
scas
cwtl
push
sahf
inc
jbe
ret
adc
leave
or
or
xchg
cmpsb
rolb
adc
and
ret
lcall
add
push
mov
ret
and
mov
add
addr16
or
xor
jmp
mov
mov
shll
add
or
dec
push
and
add
adc
dec
or
inc
jo
pop
pop
mov
pusha
and
push
ret
xor
dec
movsl
gs
adc
or
jae
rcrl
aas
test
jae
rol
mov
iret
xor
inc
xchg
xchg
lret
inc
or
pushl
mov
rcrl
mov
mov
ret
jne
or
mov
xor
shrb
jns
xchg
sbb
or
inc
push
pop
jae
xor
jbe
or
or
add
mov
mov
push
mov
inc
or
pop
mov
pop
jmp
aaa
call
xlat
dec
pop
add
and
into
jne
cli
and
and
and
xchg
sbb
inc
jge
and
xchg
imul
ret
or
add
or
nop
jp
adcl
cld
xor
cld
cld
mov
xorb
or
or
notl
inc
stos
jg
or
out
add
xchg
je
sbb
sub
aam
adcb
icebp
sub
mov
mov
push
sub
cltd
and
dec
jnp
into
or
add
or
push
into
mov
add
sub
mov
mov
pop
out
cmp
inc
jg
into
jp
dec
dec
into
into
mov
popf
mov
sarb
push
js
aaa
js
nop
pop
cwtl
pop
mov
cmpb
shlb
or
pop
add
dec
mov
out
sub
push
aas
dec
int
lcall
pusha
test
lahf
pop
test
repnz
add
add
mov
push
xor
push
into
and
sarb
ret
je
and
pop
mov
add
sub
jmp
lea
lret
ret
pop
or
out
and
jo
push
scas
xor
push
xor
jb
dec
xchg
sbbb
shrb
and
lods
pop
fcompl
mov
mov
sub
pop
test
xchg
or
mov
cmp
shrl
es
and
xor
fisubs
addl
sbb
push
add
xlat
and
daa
or
and
cmpl
loop
push
xchg
imul
jl
or
fdivl
mov
pop
je
or
sbb
push
mov
inc
push
in
dec
sbb
in
test
scas
xor
mov
xor
sub
jo
insl
add
inc
jmp
adc
rclb
mov
add
loopne
fcoml
or
out
je
jp
add
mov
cmp
loop
shll
mov
inc
int3
and
in
call
jle
jo
inc
xchg
adc
out
xor
mov
jo
jbe
out
jns
jmp
pusha
pop
cltd
clc
or
push
xor
xchg
rorl
inc
aam
fbstp
loopne
adc
movsl
jo
or
inc
jns
push
sub
push
sbb
add
scas
dec
vmovaps
imul
inc
xor
mov
inc
lock
sahf
push
pusha
insl
roll
pop
mov
jle
pushl
in
or
pop
fldt
and
test
push
xor
mov
out
je
and
rol
pop
popf
push
fcoms
pop
xchg
cwtl
pop
mov
sub
leave
and
sbb
add
mov
inc
adc
mov
fcompl
fcoml
ret
sub
cmp
cmp
inc
pusha
xchg
dec
inc
sbb
xchg
mov
xchg
clc
lcall
xchg
cmp
jge
lea
jae
lret
adc
push
imul
sub
jae
jl
and
orl
xor
fildll
jns
imul
mov
dec
add
sbb
bound
inc
pop
aas
rcr
andl
cs
add
add
jge
bound
jmp
push
push
xlat
mov
push
mov
adc
mov
bound
lods
fsts
insl
add
mov
pop
hlt
add
jmp
xor
mov
push
hlt
or
scas
xchg
sbb
push
inc
sbb
and
lods
movsb
sbb
and
mov
jmp
xchg
outsl
stc
test
lock
fisubrl
xor
and
inc
sub
lcall
fmull
xchg
mov
mov
cmp
xchg
rolb
jecxz,pn
jle
pop
add
xor
pop
adc
mov
push
test
jo
and
fidivrs
jns
cmp
dec
sbb
dec
shll
push
clc
sti
add
mov
cmp
enter
mov
jg
xor
sbb
call
shl
add
mov
jl
add
ss
ficomps
push
nop
dec
jno
sub
lea
xor
inc
int3
aad
js
and
aas
mov
lock
ds
dec
mov
push
push
sahf
lret
fsubs
outsb
mov
js
cmp
push
jmp
dec
loop
fiadds
scas
xchg
fisttps
xor
outsl
push
sub
rorl
sub
adc
cli
mov
and
mov
lahf
xchg
sbb
mov
cmpl
clc
inc
and
pop
push
das
push
aas
shlb
shrl
sub
add
shlb
dec
jle
inc
mov
les
aad
dec
lret
and
or
scas
xor
push
and
add
push
sub
hlt
xor
mov
in
subl
mov
mov
xchg
pop
testb
mov
testb
inc
lock
push
mov
or
cld
sbb
xchg
ja
in
xchg
or
add
push
roll
in
xor
or
sbb
or
pop
xlat
int
push
or
or
nop
mov
jne
into
xor
test
and
rorb
and
sbb
or
jg
data16
or
or
push
mov
mov
aaa
test
lea
push
adc
js
or
and
push
xchg
clc
or
mov
mov
or
lock
adc
pop
dec
call
outsl
cmpsb
ss
loopne
clc
out
cvttps2pi
mov
xchg
sbb
in
fildll
lods
and
je
pop
cs
push
and
test
mov
xchg
fisttps
cmpsl
inc
mov
push
xor
push
addr16
jmp
fstps
icebp
and
lahf
or
add
bound
das
mov
int
fcomp
adc
test
mov
pop
sbb
sub
pop
xchg
cs
jge
sub
lea
jle
or
xchg
sub
dec
in
addr16
dec
iret
mov
or
popa
insb
imulb
push
jge
inc
cltd
or
incb
gs
mov
inc
mov
add
mov
pushf
call
xchg
dec
push
in
in
call
or
lods
int
icebp
leave
test
mov
es
xchg
adc
aam
test
sbb
xor
and
add
mov
push
jb
xchg
mov
iret
lret
in
lock
leave
and
in
lock
hlt
mov
arpl
enter
mov
adc
in
adcb
popa
or
mov
xor
or
imul
cwtl
sbb
adc
fmuls
add
push
adc
xor
inc
je
xor
cmp
int3
stc
adc
sbb
jne
cmp
ss
inc
adc
push
repnz
cmovl
sbb
out
push
les
lret
and
mov
inc
mov
mov
xchg
sbb
push
cmp
leave
inc
fwait
pushf
and
dec
push
xchg
jl
and
and
or
xchg
fwait
test
in
cmpsl
sbb
in
mov
or
and
pop
fiaddl
cmpsl
add
push
pop
adc
and
xchg
cmp
push
inc
pop
xchg
les
rclb
aam
xchg
in
cmp
jge
nop
xchg
fcmovnbe
xchg
or
in
movups
lcall
popf
sbb
int
sub
ret
mov
fcoms
pop
add
cld
inc
xchg
adc
mov
imul
push
pop
nop
push
mov
pop
hlt
add
adc
and
add
dec
leave
sub
outsl
push
int3
mov
addb
jl
and
or
adc
jmp
sbb
mov
dec
or
aaa
push
xor
in
xchg
call
loope
xchg
cmp
sbb
repz
fsubl
int3
or
dec
pop
imul
xchg
cmp
jb
inc
adcb
xchg
dec
adc
es
lods
scas
sub
xchg
dec
xor
cmp
xchg
dec
es
inc
dec
insb
inc
es
fs
aaa
hlt
stc
in
add
dec
pop
xor
call
jl
lock
enter
int3
rcl
and
enter
jp
adc
aas
sub
test
jne
stos
les
xchg
pop
cmpsb
pop
mov
stos
inc
cli
adc
xchg
dec
xor
out
pop
push
xor
push
jno
xchg
rcll
adc
jb
lods
loopne
repnz
pop
fwait
xchg
or
call
xchg
sti
cmp
and
push
jmp
add
ret
pop
lcall
dec
cld
movsl
aam
push
mov
loop
repz
fcoms
pushf
in
or
rcrb
sub
test
add
int3
inc
lods
push
adc
leave
and
daa
adc
faddl
and
pop
or
xor
in
push
in
subb
dec
call
and
and
or
ret
faddl
and
xor
out
cmp
and
pusha
fwait
cmp
jg
gs
outsb
xchg
or
loopne
in
sbb
in
decl
in
add
mov
in
sbb
push
mov
cli
cmp
nop
pushf
jnp
ss
pop
sarl
int3
out
dec
lea
adc
pop
lcall
fs
cmpb
loope
insb
dec
clc
out
popf
jecxz
xor
xchg
jecxz
push
and
or
aam
and
dec
cmpb
rolb
cmpsl
or
adc
imul
lock
sub
shrd
mov
leave
leave
enter
stos
push
aad
jge
fsts
sub
jns
movsb
call
fisttps
adc
push
ret
sbb
cwtl
push
cwtl
stos
cwtl
adc
bound
xor
sbb
cmp
aaa
pusha
mov
cmp
fadds
ret
es
call
test
scas
fmull
or
add
cmp
in
mov
mov
movsb
pop
xor
or
out
jo
push
rorb
int3
das
sbb
ss
adc
inc
adc
jbe
and
leave
adc
mov
mov
lea
push
lock
mov
inc
faddl
or
jle
pop
dec
psubsb
cbtw
fidivs
xor
ret
sbb
or
mov
mov
in
xor
add
sbb
test
pop
xor
fwait
in
mov
pusha
cltd
dec
jb
dec
fs
add
sbb
cmpsb
adc
pop
aad
test
mov
jb
movsb
cmp
movsb
pop
mov
and
push
mov
aad
lock
mov
mov
cmp
push
in
xor
les
addr16
adc
mov
mov
mov
xor
loopne
jg
jno
imul
dec
push
nop
hlt
pop
rolb
cmp
add
dec
push
ret
dec
inc
stos
add
mov
pop
or
push
leave
lock
fldt
in
sbb
stos
add
add
mov
push
outsl
and
add
inc
dec
dec
xchg
lock
shrb
or
mov
sub
sbb
adc
cmp
iret
cmpb
popa
jb
sbb
enter
or
or
sbb
or
or
mov
pop
cltd
and
stos
cmpsl
mov
and
adc
or
insl
in
orl
inc
or
in
sub
stos
jno
xchg
shlb
or
sahf
push
jo
adc
movsl
sbb
stos
lea
inc
ret
lahf
sub
rorb
sub
and
jno
lods
pushf
sub
icebp
mov
lds
inc
fdivrl
pop
jl
pusha
or
aas
jb
and
mov
dec
push
xor
in
ss
or
cwtl
jg
mov
xchg
jo
dec
ds
decb
lods
rclb
push
std
cmpsl
in
mov
xchg
sub
das
out
pop
bound
or
mov
lock
or
scas
nop
sub
sub
es
gs
mov
neg
push
je
push
jge
sub
mov
jno
push
mov
scas
arpl
jo
mov
push
sub
xor
out
add
enter
jb
add
sti
movsl
or
cmp
mov
xchg
mov
lcall
xor
adc
inc
push
jns
mov
mov
leave
leave
leave
leave
int3
enter
leave
leave
leave
mov
leave
leave
leave
xchg
cwtl
mov
sbb
movsb
push
mov
dec
pop
shrb
cltd
pusha
shlb
xchg
aaa
stos
subb
cmp
or
mov
mov
das
xchg
or
or
sub
mov
clc
mov
push
mov
cmp
leave
and
and
mov
xor
xor
addl
mov
jo
or
mov
inc
andl
orb
aam
or
sub
inc
mov
inc
shrb
dec
movsb
mov
outsl
mov
add
movl
or
sub
cmp
mov
filds
or
arpl
and
shrb
clc
sbb
in
call
jno
jne
mov
je
mov
lock
insb
and
insl
mov
test
and
enter
imul
adc
aas
popf
or
xor
pusha
push
mov
fcoms
cmpsl
xor
jmp
jnp
ss
inc
jmp
ret
in
aas
movaps
rorb
add
test
das
jmp
and
mov
cwtl
sbb
popf
cwtl
mov
nop
push
inc
repz
dec
pusha
jne
loopne
jno
inc
pop
xchg
sbb
xlat
push
jecxz
mov
insb
std
cmp
std
sbb
enter
adc
mov
movsl
shll
jns
popf
insb
xchg
test
cwtl
dec
xor
and
movsb
test
mov
and
clc
mov
xchg
in
sub
xchg
lcall
popa
inc
or
insl
mov
mov
inc
loope
je
cmp
mov
mov
fdivrs
test
mov
adc
and
mov
aam
fsubrl
mov
mov
add
or
inc
dec
push
cwtl
nop
ror
aam
jb
xor
shll
mov
les
mov
lcall
sbb
mov
mov
test
call
add
mov
push
cmp
push
inc
mov
or
adc
fwait
in
inc
movsb
pop
cmp
dec
and
inc
inc
push
push
popa
pusha
mov
mov
repnz
jg
mov
or
cmpsl
adcb
inc
sbb
add
fadds
insb
mov
rolb
inc
sbb
pop
add
mov
jg
enter
enter
popf
or
and
jle
add
movsb
int
jl
int
aaa
mov
fdivrs
sub
and
push
lock
outsb
aam
ret
aam
push
aad
xchg
pop
rorl
fsubl
mov
or
or
iret
rcrb
jmp
lods
sub
dec
lcall
nop
sub
ss
adc
inc
sti
pusha
out
ret
enter
scas
orl
mov
pop
or
repz
sbb
test
rol
in
xchg
in
test
inc
popf
adc
sbb
dec
movsl
lods
pusha
enter
test
mov
jnp
mov
mov
inc
xchg
xor
loopne
les
push
addl
adc
mov
lods
inc
stos
mov
dec
adc
sub
icebp
push
push
les
adc
rcll
adc
in
mov
or
cld
mov
aam
inc
pop
dec
cltd
popa
aam
loope
lret
push
xorl
test
scas
fst
jge
movl
and
add
in
leave
sub
out
enter
or
or
cltd
shrb
push
push
das
clc
aad
sub
inc
dec
push
leave
lds
nop
aaa
popa
mov
or
mov
push
cmp
call
sub
sbb
and
or
lret
test
mov
lock
jmp
push
dec
and
lret
addb
and
mov
cmpsb
xchg
inc
and
adcb
mov
xchg
psubsw
inc
fidivrl
in
das
push
das
ret
mov
jg
xor
les
int3
orl
lock
jne
xchg
xor
mov
sub
jns
int3
cmp
arpl
fs
push
test
mov
mov
mov
int
adc
call
sbb
or
into
imul
push
pushf
pop
leave
les
pop
insb
adcb
invd
loop
or
lock
or
mov
cmp
adc
dec
and
mov
leave
aam
enter
pusha
xchg
les
iret
daa
mov
and
push
invd
pop
pop
adc
jno
and
xchg
push
fcoml
push
add
xor
cmp
mov
add
add
imul
adc
ret
out
jnp
and
and
push
stc
ds
jae
mov
or
les
jne
cmp
movsb
repnz
xchg
add
adc
xchg
add
ljmp
xor
sub
sub
or
cmp
nop
dec
adc
xor
dec
pushf
or
sub
push
pop
pop
js
or
popf
lock
pop
and
in
mov
pop
hlt
dec
rcrl
cmc
sub
out
inc
mov
mov
nop
ret
inc
mov
test
lock
adc
dec
shr
add
mov
inc
lods
or
lock
jmp
clc
decl
xchg
mov
rol
push
push
add
aad
sbb
ret
lea
shr
inc
scas
pop
and
xor
jl
enter
mov
rcrl
fwait
stos
jo
ss
inc
test
mov
mov
dec
es
cwtl
pusha
fs
xchg
dec
mov
cltd
in
mov
pop
jb
stos
fincstp
int3
enter
or
mov
sub
adc
test
sarl
fisttpl
aad
cmpsb
adc
loopne
loopne
or
icebp
mov
lahf
js
adc
rcl
fldcw
ljmp
sub
fcoms
jb
shlb
out
and
insb
enter
jae
add
nop
inc
mov
push
in
jge
add
adc
jb
and
and
nop
cmp
std
nop
and
nop
add
or
fcmovnbe
inc
mov
adc
jbe
gs
shlb
cmp
and
pusha
dec
xchg
inc
pop
enter
mov
in
sbb
add
mov
xchg
adc
adc
adc
mov
cmp
add
insl
pushf
add
dec
push
mov
sbb
xlat
jne
push
sub
or
and
pop
gs
push
and
lea
xlat
adc
xchg
xor
aam
fwait
mov
xlat
sub
daa
and
sbb
or
xor
and
sub
mov
push
sbb
jne
mov
in
sahf
xor
sbb
mov
push
shll
xor
bound
add
sub
cmp
add
add
call
call
inc
fcoms
dec
xlat
mov
adc
cmp
pop
in
xor
add
sar
stos
dec
stos
dec
in
in
sbb
mov
les
mov
push
aas
shrl
xchg
or
pop
lods
fildl
xcrypt-ecb
cmpsl
mov
add
inc
rcll
fsubr
cmp
jbe
mov
in
push
adcl
push
fwait
push
or
fucomi
pop
cmpsb
imul
insb
push
rol
lods
insb
xchg
push
xor
sub
test
or
mov
ffreep
call
and
test
aad
call
mov
loopne
loopne
adc
sub
sbb
loopne
or
fwait
or
add
addl
dec
movsb
xchg
cmp
mov
xchg
js
xchg
fsub
or
je
adc
and
adc
fadds
aam
imul
in
and
sbb
adc
or
cmpsb
dec
xor
or
enter
rorb
ss
lods
das
sub
insl
push
fisubrl
or
inc
clc
scas
add
inc
fsub
adc
sub
sub
cmpsb
pusha
sbb
xor
inc
add
mov
hlt
scas
dec
push
mov
ja
les
jno
jo
lds
jl
push
push
int3
cltd
insl
shll
mov
fldt
xor
lods
ss
push
adc
push
jnp
xchg
sbb
add
in
in
pushf
cltd
fs
imul
pusha
jo
dec
es
mov
enter
pop
or
xchg
dec
mov
leave
je
lods
shlb
enter
roll
loopne
mov
roll
ret
fs
mov
xchg
stc
aad
std
dec
adcb
call
cmp
jbe
add
jo
sbb
pusha
adc
ss
jne
lds
in
fiaddl
fs
test
pop
pop
push
stc
add
sbbb
faddl
dec
xor
add
cmpsl
aam
or
sub
push
push
sbb
pop
add
lods
sub
shrb
push
and
fildll
lods
enter
pusha
movsb
dec
push
sub
adc
in
xchg
daa
ret
sub
ret
int3
adc
jns
aam
int3
rolb
add
add
mov
mov
test
add
jnp
fildl
je
mov
push
sub
fistl
lods
push
scas
cltd
mov
inc
inc
sbb
nop
jmp
mov
xor
mov
rcl
clc
push
mov
test
addb
imul
repnz
loope
cwtl
ret
cltd
mov
enter
add
or
mov
xor
loop
cmpsb
faddl
mov
pop
xchg
inc
scas
or
lock
frstor
jns
lock
pop
in
lods
cmpsb
mov
leave
add
addb
dec
les
push
push
pop
sbb
lods
in
sub
xor
xor
dec
lds
push
sbbl
out
jb
push
sub
push
roll
ja
mov
hlt
cltd
lods
mov
lock
mov
aam
out
or
test
fwait
mov
ss
inc
cmp
mov
cmp
daa
jne
xor
nop
mov
mov
and
inc
inc
pop
sub
jmp
mov
jb
movsb
repz
test
roll
jb
fistl
das
inc
xchg
xor
or
test
movsl
sbb
fmull
xchg
xor
scas
sub
fwait
fs
imul
pusha
sub
mov
adc
pop
in
add
sbb
cltd
je
pop
enter
mov
cmp
dec
adc
and
add
insb
insl
sub
adc
and
faddl
enter
push
mov
add
les
iret
pop
xor
adc
stc
dec
mov
outsb
lret
pushf
pop
ss
cmpsb
push
add
or
cmpb
and
xchg
popa
mov
xchg
inc
outsb
xchg
loopne
mov
imul
sub
shll
push
dec
add
out
testl
inc
mov
pop
in
test
pop
repnz
out
adc
push
lock
sub
ds
and
push
jb
xchg
add
in
sbb
sbb
or
loop
or
fisttpll
pop
push
and
and
out
dec
pop
int
fmull
add
aas
pop
xchg
xor
add
inc
mov
outsb
adc
call
iret
subl
outsb
xor
clc
cmp
sarb
adc
add
or
dec
repz
add
add
push
xor
loope
dec
repz
cmp
mov
pusha
push
jnp
fstpt
sub
add
mov
ja
daa
and
ds
sub
testl
decl
mov
mov
mov
ljmp
add
fistpl
or
in
rcr
jnp
mov
int3
add
or
pop
and
ud0
fld
and
jnp
or
adc
out
leave
ljmp
mov
jle
test
repz
repz
pusha
pop
pop
dec
inc
mov
pushf
inc
inc
inc
inc
dec
dec
test
and
dec
dec
dec
dec
dec
dec
push
inc
push
fildll
ljmp
fs
imul
jo
jb
lock
pushl
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
sub
adc
or
outsl
cmp
adc
mov
push
push
push
cmp
jns
cmpsl
stc
inc
push
add
jmp
and
je
jb
outsl
arpl
fs
out
sbb
push
and
repnz
aaa
cld
mov
mov
gs
xor
cs
mov
xor
pop
bound
and
popa
je
outsl
outsb
push
sbb
cmp
push
xor
lock
rdpmc
add
mov
add
pop
sub
andb
ds
cltd
ljmp
push
jb
jg
outsb
fisubl
jae
insl
add
arpl
outsl
add
add
loopne
and
add
push
gs
push
das
mov
mov
popa
jb
mov
mov
outsb
dec
xor
xor
fdivrp
adc
cmp
cmp
dec
scas
imul
das
adc
orb
push
dec
push
inc
inc
gs
insl
bound
cmp
cmp
dec
outsl
jbe
dec
arpl
push
mov
je
inc
jne
jne
dec
jne
xchg
jl
orl
roll
jb
insb
dec
popa
jb
push
bound
inc
insb
adc
into
mov
jae
mov
xchg
addr16
js
out
or
jne
xor
mov
and
daa
push
scas
clc
sbb
vandps
dec
js
push
jne
into
cmp
pushf
xchg
pop
dec
inc
mov
das
jo
or
enter
fcomip
mov
mov
and
pop
sbb
pop
mov
mov
int
inc
inc
adc
sub
std
sub
sub
cs
movsl
cmp
cmp
ds
inc
das
push
add
push
pusha
cmp
adc
jl
jle
add
arpl
lds
aam
imul
pop
jnp
cmp
dec
movl
jl
push
inc
insb
jae
cs
xchg
jl
inc
fs
mov
inc
inc
fwait
and
mov
xor
insl
fldcw
fldenv
js
jb
jbe
dec
push
push
sbb
mov
dec
dec
inc
sbb
and
sbb
and
push
xor
sbb
xor
test
insb
imul
insl
pop
mov
adc
je
jo
xchg
mov
in
xchg
idivb
and
fs
and
scas
mov
inc
pushf
or
xorb
inc
popa
and
fldt
mov
jne
pop
xor
insl
and
insl
push
xchg
inc
cs
xor
scas
loopne
jne
dec
mov
jo
testb
insl
les
out
mov
add
xchg
and
dec
inc
jnp
or
imul
xlat
loopne
or
fs
xchg
add
je
and
xorb
imul
mov
push
aaa
subb
mov
push
dec
and
dec
xorb
mov
arpl
cmp
arpl
dec
popa
sub
mov
fiadds
inc
xchg
insb
imul
xor
int3
xor
adc
or
push
lcall
mov
xor
pop
xor
sarl
push
fistps
push
je
cs
imul
shll
xchg
mov
aas
xor
hlt
pop
addb
add
push
add
dec
aaa
ja
inc
enter
outsl
ss
sub
je
xor
push
test
jne
inc
xchg
mov
movsb
jnp
mov
push
xchg
or
lds
xor
out
inc
lods
mov
test
outsl
push
or
arpl
pushf
fidivs
lcall
jb
cmp
push
inc
mov
insl
in
ljmp
imul
push
pop
mov
pop
or
add
jno
rclb
call
nop
inc
insl
imul
call
push
in
mov
in
inc
enter
cmp
movsb
cmp
fsubrs
and
pop
push
cmp
add
sub
push
jae
mov
pushw
pusha
jo
fmull
push
out
sub
test
sbb
push
push
sub
lret
inc
sub
pop
in
jmp
loopne
jmp
jo
addr16
mov
and
cmp
cwtl
ja
ds
imul
push
push
dec
cmp
leave
in
jbe
jg
lcall
loopne
cmp
mov
add
pop
imulb
rol
das
lret
jno
icebp
pusha
inc
mov
or
ret
movsl
add
xorl
jae
jae
push
loop
imul
cmp
cmpsb
gs
cld
cmp
enter
imul
es
js
jae
je
pop
inc
fdiv
sahf
dec
pop
add
add
xchg
jae
imul
xchg
fwait
pop
movsl
cmp
push
adc
add
add
xlat
sub
adc
push
pop
and
push
pop
pop
or
mov
ds
push
pop
hlt
and
or
add
js
or
out
int3
mov
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
pop
mov
fldcw
lods
pop
into
jo
add
loopne
loop
adc
cmpsb
ljmp
int3
js
jo
dec
rorb
cmp
pop
sbb
cmp
mov
nop
xchg
xchg
xchg
loop
test
mov
inc
pop
or
and
ds
pop
dec
cmp
mov
adc
loope
adc
cs
test
dec
dec
pop
data16
dec
cmp
sahf
push
pop
pop
ds
fimuls
add
or
mov
or
add
stos
in
sub
dec
add
add
in
in
addl
mov
cmp
mov
mov
dec
cmp
inc
add
add
stos
pusha
pop
xorb
cs
sar
adc
mov
lods
sbb
add
add
shr
decl
insl
and
add
test
decl
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
sbb
sub
addb
sar
push
lds
lcall
push
insb
rol
aas
ljmp
inc
xor
fists
outsl
ja
aas
das
cwtl
movsb
inc
cs
jae
jb
bound
sbb
stos
inc
data16
lea
arpl
mov
jne
daa
pop
lea
dec
mov
outsl
js
push
fisubs
push
inc
push
mov
inc
cmp
xchg
sahf
insb
gs
mov
dec
push
test
daa
add
insb
in
dec
imul
mov
imul
ds
and
inc
jb
jns
daa
addl
jb
lds
push
jns
mov
jne
push
sbb
lcall
stos
or
cmp
outsb
pushw
push
inc
sub
mov
xor
mov
push
pusha
testb
fiadds
push
push
lahf
imul
fisubl
lea
clc
pop
lcall
lock
adc
pusha
gs
mov
es
sub
aad
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
fs
imul
clc
adc
loopne
out
sahf
aam
shlb
insb
dec
adc
or
in
test
mov
repz
push
xchg
nop
push
mov
mov
lahf
cmpsl
stc
xor
insb
push
iret
mov
fs
scas
push
dec
pusha
out
in
pop
push
pop
push
push
push
sahf
cmpsl
stc
sahf
cmp
push
dec
adc
inc
sahf
cmpsl
cmp
ja
xor
sub
jns
out
and
adc
add
cmp
repz
paddusb
mov
iret
jl
cmp
clc
push
inc
repz
repz
mov
out
cmp
inc
cmp
add
or
lock
movsb
jl
cmp
out
sub
in
rcrb
sub
pop
push
sub
or
ds
jns
xor
bound
outsb
push
xor
add
lea
cwtl
cmpsl
pop
sub
push
jae
cmp
jae
jb
not
jns
xor
es
dec
test
xor
add
jle
loope
ret
insb
cmp
inc
inc
dec
jae
lret
insb
mov
mov
sbb
scas
cld
fistps
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
fbld
out
inc
dec
add
dec
dec
inc
add
adc
sbb
jo
adc
incl
popa
into
mov
jmp
adc
jnp
inc
loop
mov
ds
pop
idiv
subl
pop
clc
lret
sbb
jb
das
in
jg
jge
arpl
cmp
adc
dec
scas
jp
adc
in
fstl
mov
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
loopne
out
fcoml
or
scas
int
mov
pop
leave
loop
mov
out
xor
xchg
dec
xchg
scas
lods
sti
psraw
xor
mov
iret
adc
xor
pop
call
inc
sub
lret
es
sbb
sbb
and
pop
pop
mov
pop
push
dec
push
push
inc
inc
or
outsb
jbe
fs
add
ret
push
nop
das
inc
jo
nop
add
out
cmp
imul
out
jmp
mov
dec
push
dec
push
sar
lahf
sub
mov
add
adc
or
out
fistpll
dec
inc
pop
push
pop
or
sbb
pop
push
and
pop
sub
sbb
lods
std
lcall
dec
xor
xor
push
sbb
push
sub
and
add
jbe
and
sbb
sbb
out
int
inc
es
push
sbb
pop
pop
sbb
xor
push
xor
fidivrs
pop
pop
push
sub
and
es
or
daa
sub
mov
fstp
sub
sub
pop
or
imulb
ljmp
and
pop
add
xor
sub
sbb
std
cmp
sub
push
add
jnp
in
idiv
cmp
sbb
xor
sbb
sub
add
sub
sbb
sub
pushl
xor
cmp
cmp
add
ss
pop
dec
push
and
dec
sub
stc
fcmove
mov
sbb
and
shl
inc
add
incb
fiaddl
sub
lea
inc
lock
add
pop
dec
sbb
xor
or
in
push
and
and
or
and
in
sti
sub
xor
fisubrl
sbb
mov
xchg
push
jo
es
dec
cmp
or
call
dec
cs
add
add
and
xchg
mov
jle
xor
sub
dec
push
jl
and
js
stos
dec
sub
cmp
push
mov
jb
mov
sbb
and
cmp
cli
gs
push
xchg
sbb
add
pop
cmp
cld
cs
mov
dec
sbb
sbb
mov
push
sbb
sub
popf
loopne
dec
push
push
push
push
jo
push
and
pop
push
ja
pop
xor
mov
push
sub
insl
mov
jnp
inc
pop
adc
dec
nop
dec
cwtl
lods
bound
in
push
cmp
sahf
dec
add
sahf
cmpsl
flds
test
mov
rol
jns
out
rcr
cmc
std
push
sbb
add
outsb
out
fdivp
jg
cs
inc
push
pop
js
jnp
push
cmp
adc
push
and
inc
dec
push
sbb
scas
jge
rol
push
cwtl
cs
dec
push
pop
ds
aaa
xor
cmp
outsl
insl
mov
pop
int3
lods
lahf
inc
popa
outsb
inc
push
sbb
popa
loop
inc
xchg
pop
popl
call
jnp
fistpll
cvttps2pi
fs
daa
ds
popa
ds
repz
aaa
cltd
push
lds
leave
std
in
iret
repz
push
sub
orl
stos
fists
inc
push
mov
repz
lds
mull
push
das
or
adc
add
add
or
push
mov
pusha
and
aas
scas
sbb
sbb
lock
adc
ss
dec
aad
lods
ret
js,pn
inc
jbe
les
sbb
or
aad
lahf
mov
and
mov
pop
fisttpll
dec
and
xchg
sub
push
dec
fcoms
push
int
jmp
pop
sbb
mov
movsb
es
jb
and
pop
inc
adc
insb
push
and
inc
lock
pop
and
push
fildll
sub
inc
push
xchg
jne
rorb
dec
or
stos
push
pop
dec
add
pop
sbb
in
scas
push
sbb
imul
dec
cmp
dec
out
and
push
mull
ss
popa
aam
xor
xor
out
pop
push
ss
jecxz
xor
mov
add
sbb
jge
imul
sbb
cmp
outsb
scas
imul
adcb
jo
sub
daa
daa
push
xor
addl
sahf
push
in
ss
sbb
adc
sbb
sub
sbb
pop
pop
jnp
aam
out
dec
das
push
cmp
cmp
push
ds
pop
push
sub
add
push
and
jecxz
adc
and
testl
or
xchg
popf
ss
and
cmpsl
sbb
push
push
and
fsubp
cltd
in
pop
es
sub
das
in
ds
and
xor
sub
xchg
pop
pop
push
mov
mov
mov
push
loop
sbb
icebp
and
test
pop
dec
xchg
pop
pop
sub
or
adc
sahf
xor
push
xor
pop
mov
and
jecxz
out
es
push
inc
jle
xchg
sub
push
push
cs
xor
sahf
es
adc
cmpsl
test
cmp
xor
std
lds
in
test
lods
dec
pop
sub
inc
jb
cwtl
shll
adc
mov
xor
gs
cmp
push
mov
aas
and
push
xchg
inc
inc
xchg
and
push
lds
ss
push
add
mov
es
cmp
push
adc
jne
push
ja
andl
add
add
add
add
roll
push
and
and
sub
cmp
pop
mov
jmp
xor
pop
mov
in
cs
int
add
test
push
mov
pop
loope
adc
bound
inc
add
adc
push
add
mov
inc
daa
pusha
addr16
test
pop
adc
dec
cmp
or
or
movsl
mov
shll
jns
jmp
sub
into
cmp
adc
pop
icebp
push
ja
mov
cmp
daa
aas
pop
mov
sbb
adc
sub
mov
push
ds
ds
and
cmp
sub
sub
loopne
fstpl
push
or
adc
or
test
loopne
cmp
jge
cmp
sbb
subl
or
adc
inc
js
sub
ret
mov
push
ja,pt
and
scas
push
push
push
cmpsb
jae
insl
popa
imul
or
push
push
mov
mov
jo
inc
data16
push
ja
adc
cmp
enter
adc
cmpsb
push
push
leave
mov
repz
mov
mov
dec
add
shr
jns
cwtl
pop
cmp
and
daa
or
dec
loop
dec
dec
shll
add
xchg
or
xchg
pop
jne
mul
je
sub
pop
mov
cli
outsl
sub
push
sub
or
push
mov
sbb
xchg
adc
sbb
push
sub
push
mov
xlat
mov
sub
push
or
cmp
mov
sbb
add
das
pop
add
xor
sti
mov
push
xor
xor
iret
xchg
sbb
mov
jge
mov
inc
sub
push
pop
jp
push
roll
mov
mov
or
pop
or
push
pop
add
les
mov
add
out
lea
es
inc
addr16
sub
pop
adc
adc
sbb
push
inc
mov
pop
add
fadd
aaa
pop
pop
out
xor
inc
cwtl
jne
pop
dec
mov
sub
or
add
push
dec
inc
lods
mov
jae
gs
inc
or
jo
loop
lds
in
mov
test
das
xor
xor
push
mov
and
mov
ret
pop
sbb
popf
xorb
std
add
inc
addr16
and
ret
and
dec
lods
fidivs
das
cmp
xor
je
inc
jae
clc
inc
mov
push
mov
lahf
test
divb
fidivrl
cmp
imul
push
scas
out
push
push
jbe
mov
int3
pop
xchg
push
xchg
sysret
cmp
das
xor
pop
inc
js
mov
sub
mov
sbb
sbb
cmp
and
sbb
nop
mov
das
nop
or
mov
icebp
dec
push
sbb
pop
cs
and
push
push
cmp
mov
mov
mov
mov
or
xor
xchg
jbe
or
cs
pop
xor
pop
int3
and
jle
cmpl
xor
xor
xchg
inc
mov
insl
test
in
lock
and
or
adc
ret
fmul
shlb
and
dec
add
enter
fcoms
loop
es
inc
sbb
popa
add
push
mov
sahf
and
adc
les
jecxz
repnz
bound
push
dec
faddl
xor
mov
push
adc
pusha
js
pop
push
ds
push
push
or
pop
jecxz
cmp
mov
jp
xor
mov
push
notb
xor
movsb
dec
push
xor
lods
cmp
fld
jg
into
mov
sbb
adc
pop
sub
es
dec
gs
das
add
pop
pop
aas
in
cwtl
or
fisubrs
rol
data16
inc
xchg
test
inc
add
sub
add
addl
notl
pop
and
movsl
mov
pop
call
pop
xor
pusha
enter
ds
cmp
fiadds
cmp
filds
xor
pop
fidivl
ja
loope
mov
fdivl
cmpb
sbb
daa
fsubrp
insb
stos
cmp
pop
fildll
xor
pop
pop
and
or
xchg
push
jo
mov
jmp
test
fdivl
pop
pop
mov
inc
rcrb
adc
push
jge
and
xor
adc
inc
add
ljmp
xor
in
sub
sub
pop
ds
in
sub
daa
xor
enter
sbb
inc
xlat
aam
inc
in
mov
ja
pop
and
pusha
jae
xor
lock
or
xchg
mov
adc
adc
and
xor
mov
mov
xor
cmp
daa
pop
sbb
cmp
cmpsl
loopne
adc
lods
stos
in
adc
pandn
xor
notb
cmp
and
cwtl
test
adc
xchg
and
push
and
mov
dec
sub
int
inc
push
sbb
sub
mov
mov
and
push
or
or
stc
xor
xchg
and
test
mov
pop
adc
insl
into
mov
mov
and
mov
jmp
push
cmp
sbb
int
and
pop
aaa
jecxz
daa
dec
daa
daa
das
pop
mov
cmp
dec
push
call
sub
and
add
inc
data16
fisubl
or
cmc
lea
jns
shlb
jge
in
mov
sub
xor
push
add
xor
sbb
out
cmp
push
push
or
pop
push
sub
inc
pop
add
add
mov
push
int3
inc
inc
adc
sub
xor
xor
add
xchg
pop
cwtl
mov
fildll
push
sub
jno
lds
inc
pop
fwait
push
push
mov
into
sub
adc
and
add
mov
out
jg
sub
and
push
push
mov
test
cs
xchg
mov
pop
es
addr16
dec
jnp
xor
mov
push
xor
popa
stos
unpckhps
xchg
pop
cmp
adc
movsl
xor
aad
push
sbb
sub
addb
sbb
push
rol
negl
pop
daa
cmp
hlt
xchg
adcb
enter
dec
sub
cmp
xchg
mov
cmp
in
push
les
add
push
push
jbe
subb
orb
out
daa
push
sub
or
mull
test
xchg
cs
setb
shll
add
stos
mov
push
mov
mov
fdivrs
adc
cmp
pop
inc
cmp
loop
cmp
xor
fdivp
adc
push
and
and
adc
jl
sub
dec
cmp
or
imul
js
sub
push
inc
pop
sub
jmp
nopl
push
mov
outsl
xor
push
jnp
pop
or
cmp
into
pop
xor
mov
movsl
dec
aaa
adc
insl
sbb
cmp
sub
push
int3
and
inc
add
and
imul
and
fisubl
and
dec
sub
scas
push
mov
cmp
mov
loope
xchg
ret
or
imul
das
dec
xchg
pop
jo
test
xor
jg
loopne
in
rcll
add
or
pop
sti
push
sub
sbb
push
aas
pop
sub
lds
pushf
push
das
sbb
xchg
cmp
scas
aas
push
pop
or
push
push
push
pushf
jp
xor
daa
js
in
and
insl
pop
mov
fisttps
sub
pop
cs
out
xlat
dec
lahf
push
push
ds
pop
dec
sbb
inc
stos
adc
pop
push
cmp
add
sbb
mov
pop
arpl
adc
pop
lods
cmp
push
pop
ss
data16
adc
adc
jmp
or
out
cmp
sbb
sbb
pop
and
push
mov
insb
cmp
or
adc
push
test
icebp
scas
fistl
sub
mov
xchg
add
lods
add
aaa
cmpsl
xor
lods
test
sub
insb
out
iret
aas
ljmp
fs
imul
push
pop
shr
push
push
fdivrs
das
push
jne
fsubrs
filds
sbb
mov
imul
dec
inc
arpl
adc
sbb
and
out
cmp
andl
out
sarl
cltd
or
xchg
mov
insb
push
or
mov
or
addr16
or
adc
jns
and
sbb
inc
mov
mov
gs
mov
mov
data16
shlb
add
test
sub
fldcw
add
or
adc
fwait
int
and
add
add
fldcw
dec
str
int
cwtl
or
and
das
incl
lahf
data16
iret
add
dec
inc
add
push
push
inc
push
mov
outsb
ss
push
jge
inc
lods
push
rcrl
repz
mov
pop
push
push
jo
ds
fucom
jnp
iret
cmc
or
maxps
xor
int
pusha
pop
fs
jnp
push
insb
movsl
in
inc
inc
mov
inc
mov
adc
dec
push
dec
dec
decl
aaa
shlb
mov
out
push
ret
pop
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
lahf
dec
hlt
subb
jo
fsubs
lcall
add
pop
test
xor
dec
xchg
mov
shl
dec
push
adc
adc
pop
push
and
xor
aaa
xor
cmp
mov
pop
ja
dec
cmp
sub
inc
mov
dec
inc
jb
subb
outsl
push
dec
and
daa
clc
adc
dec
sbb
dec
repz
cld
xor
in
sub
fisubl
sub
xchg
out
dec
mov
cmp
sahf
pushf
cmp
in
insb
pop
dec
lock
je
inc
js
int
jp
cmp
xchg
push
dec
push
sub
push
dec
pop
aam
dec
stos
test
push
push
pushl
mov
cmp
xor
sub
sub
inc
sbb
sub
xor
inc
pop
xor
or
sub
divb
je
sub
adc
add
xor
sahf
sub
gs
xor
insb
jmp
dec
jp
outsb
push
add
stos
test
jo
pop
or
jg
outsl
jne
cmp
popa
outsb
imul
xor
orb
loope
adc
jae
outsl
and
popa
adc
or
and
aas
ja
mov
das
lods
insl
pop
or
xlat
das
inc
sbb
dec
or
ja
out
sub
sarb
fnstenv
inc
mov
inc
sbb
lock
ret
jle
or
mov
mov
mov
ds
cwtl
add
push
push
cmp
cmp
sub
idivl
add
push
les
sbb
push
repnz
mov
es
push
cs
inc
decl
dec
xor
mov
pop
or
sbb
mov
imul
push
lret
push
xlat
sbb
inc
sbb
sbb
cmc
xchg
and
inc
add
adc
lea
mov
dec
fs
push
repnz
xor
sub
cs
imul
mov
pop
sub
out
jl
in
pop
lods
loop,pt
mov
jnp
add
inc
lea
dec
fisttpll
fnsave
popf
idivb
xchg
push
or
fwait
mov
hlt
fadds
push
mov
out
int
hlt
jbe
push
int
push
xor
and
inc
jae
jp
lret
mov
add
cs
pop
push
rcr
jp
ja
push
sysret
mov
aaa
cltd
jge
dec
pop
pop
sbb
scas
jle
mov
std
cmpsl
jns
sti
mov
dec
mov
pop
aam
fcomi
sahf
sub
fldenv
lcall
fdivp
inc
ss
int
push
aam
cs
push
popf
push
lods
adc
sahf
out
mov
mov
sub
ds
dec
cmp
cwtl
push
rcrw
jmp
cmp
mov
mov
push
imull
in
or
push
sbb
bound
outsl
repz
push
sbb
push
sahf
mov
mov
testb
and
clc
sahf
repnz
pop
js
nopl
testb
loopne
xchg
in
lods
ret
cmpb
push
mov
mov
sbb
sahf
or
neg
fdivs
fdivrl
or
imulb
mov
push
mov
into
mov
popf
pop
add
stc
xor
repz
movsb
push
lahf
mov
and
pop
jb
cmpsl
cmpsl
stc
xor
in
mov
adc
mov
mov
push
ret
pop
scas
pop
xchg
cmp
out
into
in
xchg
cmp
stc
cmp
repz
mov
jns
cmpsl
sub
xchg
out
sahf
data16
sub
push
outsl
int
jns
mov
push
adc
repz
nop
mov
mov
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
pop
loop
test
mov
pop
enter
pop
push
mov
std
mov
loopne
mov
lahf
negb
adc
push
and
pop
sbb
enter
pop
enter
inc
repnz
iret
pusha
or
and
push
test
cmp
push
mov
inc
jb
outsl
pop
inc
inc
cwtl
rolb
mov
stos
or
push
jae
popa
mov
aas
inc
push
push
mov
inc
sbb
imul
aaa
push
cmp
sbb
jae
aam
sbb
push
bound
xor
jae
dec
cmp
dec
popf
jbe
sbb
je
push
ljmp
cmpsb
dec
add
push
imul
push
inc
cmpsb
push
insb
pop
push
lods
pop
cmc
cs
pop
je
jns
inc
jnp
jo
fisttps
jp
das
push
out
inc
ficoms
mov
popf
cmpl
xlat
pop
retw
dec
or
scas
sbb
jae
dec
mov
ja
pop
pop
mov
sbb
fcompp
jnp
mov
push
add
jp
repnz
lret
cmp
or
ds
xchg
lock
push
es
insl
jo
in
outsb
or
adc
mov
popa
jo
jae
es
outsl
and
data16
cmpb
sub
and
jg
iret
fisubl
or
cmp
outsb
int
xor
xor
xor
cmp
cmp
push
xor
xor
cmp
cld
ds
add
inc
inc
push
push
sub
shrb
mov
scas
adc
jle
add
bound
or
rcrb
or
lcall
add
push
add
pop
sub
sub
outsl
rclb
jb
lods
inc
sarb
sub
mov
sub
dec
add
lahf
sahf
sbb
ljmp
mov
jmp
xor
adc
imulb
jo
inc
cwtl
adc
lret
inc
ja
out
add
inc
inc
es
add
and
inc
and
xor
inc
add
sbb
js
sub
adc
ret
repnz
pop
sub
les
dec
daa
sub
fsts
pop
aam
lock
cmp
sub
popa
pop
fcoms
or
enter
adc
xlat
mov
dec
fcoml
pop
mov
cs
out
jnp
push
mov
cmp
jmp
or
mov
adc
or
pop
ljmp
sti
cmp
and
sbb
sbb
cmp
fnstenv
ret
into
shlb
nop
pop
fdivs
jmp
pop
xor
and
mov
roll
pop
push
add
repz
daa
pop
popa
and
inc
jo
in
iret
sbb
xor
mov
inc
test
lahf
sbb
sbb
ljmp
daa
and
mov
rcrb
das
stos
pop
push
pop
adc
aas
daa
int3
ret
lods
daa
jge
push
les
das
das
rclb
shl
iret
xor
pop
sub
mov
in
ret
mov
movsb
mov
sub
daa
add
lds
push
pop
adc
fisubrs
dec
pop
rorl
fisubl
pop
push
fadd
cmp
xor
pop
dec
pop
push
add
rorb
adc
push
pop
aas
das
pop
mov
xorb
outsl
pop
cltd
daa
lahf
pop
mov
adc
aas
pop
int
stos
adc
addb
jg
push
arpl
adc
sbb
jb
pop
and
adc
mov
shll
aaa
sub
xchg
lret
cld
add
and
mov
dec
pop
and
pusha
dec
inc
and
adc
inc
jmp
adc
and
dec
xlat
lds
jg
subb
mov
fbld
add
imul
pop
and
js
gs
cmp
sub
ja
cmpsl
imul
lea
push
push
push
dec
mov
mov
stc
rol
sbb
xor
in
adc
sub
adc
test
mov
pop
lea
je
das
mov
jae
and
sub
pop
sbb
pop
daa
sbb
add
mov
mov
or
inc
dec
pop
or
fimuls
adc
es
loope
xor
inc
pop
adc
les
pop
xor
inc
notb
sub
dec
es
pop
mov
or
mov
mov
or
adc
pushf
xor
or
push
fstpt
and
xorb
push
mov
clc
push
or
mov
xor
pop
add
in
test
mov
mov
pop
or
push
in
test
lea
nop
pushf
push
cmpsb
xor
adc
sbb
call
inc
out
add
dec
or
cld
adc
shrl
aas
dec
jo
inc
jle
gs
or
popf
mov
add
push
clc
mov
inc
inc
add
stos
out
es
sbb
ljmp
xchg
fldcw
push
movsb
lods
pushf
push
ds
imul
cs
int3
inc
xor
add
fs
xor
cwtl
cmp
repnz
inc
mov
xor
inc
pop
ret
sbb
pop
adc
and
sbbb
jno
fs
dec
ljmp
xor
pop
mov
sub
xchg
and
inc
xchg
mov
lock
push
dec
rolb
and
xchg
loopne
jl
pop
dec
mov
pop
sbb
and
and
or
fdivs
xor
push
mov
shrb
fldenv
dec
cwtl
mov
inc
sub
mov
addb
sbbb
out
mov
mov
adc
sbb
js
and
es
add
mov
jns
pop
call
ja
pop
xor
cmp
pop
inc
add
inc
inc
fimull
jo
iret
daa
xor
inc
test
pop
mov
add
and
xor
push
popa
mov
mov
push
aas
dec
stc
pop
pop
subl
imul
pop
cs
dec
dec
cmp
pop
mov
out
sahf
and
sbb
lock
sub
pop
aas
movsl
jno
pop
imul
jo
xorb
outsl
xchg
outsb
xchg
imul
mov
sbb
add
push
cld
imulb
push
adc
add
inc
push
adc
cmp
fwait
adc
out
cs
mov
push
add
or
pop
incl
ss
sbb
inc
and
pop
jo,pn
es
inc
dec
es
ds
inc
sub
xor
inc
xor
dec
cmp
push
dec
adc
dec
ss
lcall
pop
pop
inc
push
sbb
dec
or
sbb
dec
add
push
add
adc
aaa
adc
add
lret
mov
jg
out
sub
inc
push
dec
xor
aaa
ss
mov
pop
ss
out
mov
inc
sbb
and
xchg
mov
pop
sub
and
sub
filds
and
cs
add
dec
xor
dec
xor
dec
push
dec
and
dec
sub
ss
inc
sbb
push
add
push
push
push
push
daa
xchg
loope
mov
ret
pop
dec
ret
jnp
stos
add
out
ret
sbbb
cmpsl
sahf
pop
dec
and
push
sbb
push
pop
adc
xor
xchg
cmc
cli
gs
mov
dec
cmpsl
push
test
inc
movsl
call
addb
or
ds
pop
sub
sbb
out
push
xor
movsb
xor
and
stos
adc
cld
rorb
xchg
push
push
dec
enter
lods
push
outsl
inc
and
and
and
push
jno
pop
xchg
adc
mov
push
add
mov
xor
ret
call
inc
jb,pn
add
push
xchg
lods
push
push
sub
ret
lods
push
push
inc
push
dec
inc
dec
push
dec
mov
add
lea
outsl
jmp
push
pop
loopne
inc
sub
mov
or
push
pop
pop
pop
daa
pop
sbbl
fists
cli
pop
pop
ds
sbb
aas
pop
je
outsl
bound
push
daa
pop
aas
aaa
cmp
or
pop
ds
js
mov
cmp
inc
sub
mov
aas
and
push
ss
das
mov
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
lcall
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
call
and
cs
insl
sub
adc
or
or
cs
ret
sub
call
dec
data16
mov
call
cltd
test
push
decl
adc
shll
dec
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
lcall
out
orb
adc
enter
mov
mov
movsb
mull
stc
mov
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
scas
clc
sbbl
int
ss
and
jge
jnp
in
jg
daa
and
and
pop
data16
cmp
aaa
inc
insb
push
cmp
push
das
aam
cmp
inc
addr16
arpl
push
sub
pop
cmp
inc
pop
dec
add
js
jl
xor
dec
dec
sub
outsb
jne
jp
dec
inc
pop
push
cmp
bound
imul
and
int
fisttps
aaa
push
xor
cmpsl
imul
cmp
inc
add
inc
add
inc
xor
and
insb
or
push
inc
outsb
inc
cli
xlat
ss
cmovb
pop
ss
cmpsl
cmp
les
push
and
adc
add
mov
addr16
movsb
add
addr16
sub
add
es
or
and
adc
or
bound
xlat
addr16
mov
cmp
sub
mov
scas
sbb
testl
mov
pop
es
mov
cltd
mov
pop
push
sbb
inc
daa
sbb
mov
jle
add
cwtl
orb
push
js
adc
in
fsubl
or
push
inc
int3
dec
sub
sbb
cmp
xor
loopne
pop
push
push
xor
cmp
dec
jb
ja
mov
pop
mov
in
inc
push
xor
test
sbb
jp
inc
push
sub
sbb
mov
loopne
aad
sahf
roll
mov
dec
mov
pop
sbb
test
addb
or
inc
sub
sbb
xchg
push
push
icebp
rolb
jle
neg
arpl
push
mov
xor
jge
xor
pushf
and
xor
sbb
xchg
pop
inc
lock
add
mov
aaa
xor
adc
push
popa
push
in
dec
sub
cmp
pop
adc
divb
cmp
jmp
dec
adc
pop
xor
mov
sbb
push
adc
pop
sahf
nop
shrl
outsl
push
sahf
and
and
sbb
int3
enter
mov
iret
and
add
aad
push
popa
das
mov
shlb
or
and
outsb
outsb
je
xor
and
or
js
xor
jae
popa
insl
sub
cmp
pop
mov
add
and
dec
xchg
xchg
aad
mov
and
pushl
insl
loop
and
jmp
adc
dec
mov
jecxz
lret
insb
dec
push
popa
je
lret
pusha
push
xchg
insl
lock
outsb
cld
pop
ds
add
sbb
add
out
sti
negb
add
sub
out
gs
jbe
mov
pop
cmp
adc
sbb
jmp
dec
xchg
aaa
pop
pop
aad
pop
add
fisttpll
movsb
pop
adc
sbbb
dec
mov
push
sub
inc
iret
and
aam
add
add
mov
xchg
push
cmp
fisubrl
or
jmp
scas
das
arpl
addr16
or
and
push
sahf
lds
and
sub
loopne
xor
pop
mov
pop
popa
push
mov
push
jg
sub
pop
push
outsb
sbb
push
inc
xor
push
int
addl
ficompl
ja
jb
pop
incl
xor
inc
jne
movsb
push
add
aad
xchg
insl
xor
cmp
inc
xor
cmp
or
pop
and
test
or
test
fidivrl
ds
test
cmp
sub
pop
pushf
loope
xor
cmp
push
xor
adc
push
adc
xor
andb
daa
lret
dec
std
les
jbe
jo
iret
ret
or
add
stos
push
outsl
imul
outsb
dec
sti
arpl
or
inc
imul
jecxz
add
cmp
jp
pushf
fbstp
pusha
pop
push
push
aas
das
scas
sub
ss
aad
arpl
aas
pop
pop
mov
pop
loop
push
leave
movsl
push
aas
dec
pop
pop
sbb
or
in
sbb
imul
pop
sub
or
inc
inc
dec
sub
mov
xor
mov
push
cmp
dec
sbb
and
std
inc
outsl
inc
jge
fstpl
outsb
ja
imul
pop
dec
mov
movsb
sti
dec
sbb
add
punpckldq
lods
insb
push
dec
mov
cmp
sbb
add
pop
pop
pop
aas
fidivrl
cwtl
std
and
and
xor
jecxz
mov
mov
pop
sbb
dec
inc
fs
pop
dec
pop
movsl
jmp
divb
dec
pop
repz
adc
cli
cs
add
cmp
inc
pop
jbe
xor
andl
pop
maxps
xchg
adc
dec
push
jge
cmpb
adc
sub
and
inc
loop
imulb
and
and
add
pop
inc
and
inc
shlb
iret
adc
pop
add
cmp
xchg
call
or
out
push
aaa
jmp
push
jne
or
filds
sub
jb
out
das
mov
or
dec
jae
push
fimull
outsl
dec
shrb
and
ror
or
mov
inc
push
punpckhwd
insb
hlt
push
pop
dec
outsb
push
je
scas
shlb
lds
insb
cli
dec
adcb
inc
pop
push
dec
inc
dec
inc
push
pop
pop
repnz
shrl
jb
gs
fcoms
inc
adcb
daa
dec
sarl
rol
dec
jb
xor
loopne
inc
aas
dec
mov
clc
inc
add
pop
js
rclb
inc
add
in
xor
inc
js
xor
lock
sub
add
mov
pop
shl
xorl
pop
loopne
ret
jb
adc
adc
push
cmpsb
clc
inc
add
insl
push
push
or
ljmp
sub
out
sub
sbb
cmp
add
inc
mov
and
sub
dec
nop
dec
inc
rclb
pop
sub
push
jg
dec
pop
jo
sub
rorb
and
adc
or
mov
adc
aaa
in
or
fsubs
xchg
mov
dec
mov
cs
adc
cmpsl
mov
mov
rcll
sbb
mov
mov
sbb
or
sub
dec
stos
sbb
sbb
push
mov
jmp
outsl
xlat
adc
test
push
xlat
mov
pop
shlb
and
sbb
mov
sub
bound
outsl
or
jl
xor
push
jl
mov
in
inc
add
inc
mov
aas
or
push
jb
cmp
jmp
dec
mov
cmp
dec
xchg
dec
inc
xadd
pop
jg
sbb
inc
pop
mov
fmulp
jns
aas
divb
cmpb
aas
mov
jo
mov
fistpl
inc
dec
add
daa
mul
pop
mov
das
test
dec
gs
aaa
sub
inc
sbb
movsl
xor
inc
daa
ds
out
sahf
outsl
int
and
movsb
je
fidivs
daa
add
nop
xchg
lods
movsb
xorb
add
iret
mov
mov
enter
add
mov
daa
mov
fstpt
xchg
outsb
imul
daa
shrb
addr16
insb
daa
aas
int
arpl
nop
sub
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
lods
in
scas
and
jecxz
sub
pop
out
pop
cwtl
repz
add
sbb
dec
jo
adc
ds
int3
outsl
push
push
in
out
fidivrs
and
add
outsb
xchg
mov
xor
andb
jns
out
fmuls
adc
sahf
ja
out
imul
push
dec
xor
sbb
pushf
loop
add
push
enter
xor
add
adcb
jno
dec
inc
aas
jp
xor
dec
cmp
in
add
imul
out
mov
add
pop
cmp
fadds
add
cwtl
sbb
fcomip
fsubs
out
jp
mov
xchg
add
les
sub
jg
or
mov
add
lods
xchg
dec
mov
dec
outsl
je
inc
mov
sub
sub
add
mov
mov
xchg
popa
outsl
add
inc
pop
enter
sub
imul
sub
outsl
xchg
popa
sub
add
cmp
outsl
cmp
push
dec
adc
in
add
sbb
xchg
mov
pop
fmuls
stos
loopne
pushf
xor
inc
dec
scas
xchg
xor
insb
inc
pop
enter
fs
mov
jl
je
mov
scas
fsubs
outsl
adc
sbb
daa
push
xor
shlb
xchg
cmp
xor
insl
rorb
or
xor
fs
outsl
sub
je
lcall
outsb
adc
dec
sahf
out
sbb
add
faddp
cmc
aam
in
js
cld
push
xor
lahf
mov
push
sub
sub
xorb
sbb
ja
add
adc
ja
pop
test
outsb
leave
mov
fsubrp
outsb
outsl
add
xchg
or
fbld
outsl
adcb
and
push
cwtl
sub
ret
fs
or
shll
scas
add
push
adcb
leave
mov
add
cmpsl
or
mov
daa
clc
outsl
cbtw
add
push
add
ja
mov
aaa
fs
rorl
daa
addr16
ficoms
es
dec
das
cmpsb
loopne
inc
mov
mov
jno
xchg
jae
push
js
jno
pop
push
inc
mov
push
mov
popa
shrl
xchg
push
mov
and
sbb
add
movsb
leave
jo
fidivs
cmp
dec
enter
jno
ja
nop
adc
shrb
ret
push
push
push
push
outsl
jg
add
xchg
pop
xor
pushf
aaa
mov
daa
outsl
ja
int
sti
push
adc
push
je
test
shlb
cmpsl
popf
cmp
add
shl
jo
seto
or
mov
xor
pusha
daa
in
in
jb
jb
pop
or
dec
xor
insb
jae
shlb
jae
add
pop
xlat
or
mov
adc
and
push
je
adc
or
xor
mov
rorb
jae
notl
outsl
and
pop
leave
fwait
loopne
add
nop
pop
scas
and
je
add
fiadds
je
shlb
and
shlb
mov
shlb
inc
addr16
xor
inc
jne
jne
lods
pop
and
cwtl
test
xchg
jg
add
mov
add
aaa
pop
enter
addr16
add
cltd
nop
iret
test
add
mov
adc
bound
pushl
fdivp
push
mov
outsl
add
xchg
ja
ss
cmp
ret
or
sbb
loope
stc
ss
push
sub
aaa
dec
leave
adc
add
or
and
sbb
mov
add
lods
sbb
xlat
add
iret
daa
mov
out
cmp
daa
or
mov
pop
or
mov
dec
js
push
je
repz
jbe
push
enter
call
ss
outsl
sub
or
xchg
js
js
cmpsl
in
movsb
or
xor
enter
add
sbb
and
add
mov
iret
test
fbstp
and
je
cltd
and
add
add
fistl
add
push
xchg
sahf
out
add
jp
andl
push
xor
outsl
out
adc
out
add
inc
and
out
js
xchg
sub
daa
or
scas
nop
sub
test
fwait
sbb
push
push
xchg
push
pusha
das
pop
xor
outsl
jl
push
repnz
jae
test
repz
xlat
mov
daa
xor
rcl
pusha
dec
fsubs
in
lahf
cmpsl
xchg
cmp
inc
or
push
or
jl
sub
in
and
inc
push
ja
aaa
adc
outsl
lods
xor
push
aam
mov
movsb
sbb
push
xlat
xor
into
test
jnp
lock
mov
ret
roll
aas
pop
out
fildll
xor
cmp
rolb
out
xor
push
addl
out
sahf
dec
subl
inc
arpl
out
loop
test
dec
push
orl
sub
out
ds
cltd
xchg
iret
repz
pop
xchg
sahf
out
lcall
cmp
repz
add
sahf
out
aam
mov
repz
out
sbb
ds
into
icebp
and
jl
mov
xchg
int
mov
cmpsb
push
mov
loop
nop
cmp
iret
repz
and
add
sarl
mov
xchg
das
arpl
shll
mov
xor
jae
or
sarl
inc
loope
daa
cwtl
xor
out
ja
cmc
pop
cltd
jnp
lcall
dec
mov
dec
repz
fwait
mov
repz
out
adc
jl
out
sahf
jne
dec
lahf
nop
out
ds
ret
out
daa
mov
out
sub
mov
int
imul
stc
add
dec
mov
or
cmpb
insb
lahf
out
repz
push
add
cmp
int
stc
xor
xchg
lods
mull
lods
inc
lahf
out
cmp
mov
scas
lcall
pop
mov
repz
idivb
pop
mov
cmp
jl
out
mov
hlt
daa
mov
out
ds
test
mov
repz
ljmp
int
jns
sub
mov
cmpsl
stc
cmp
add
jl
jns
adc
inc
repz
iret
out
or
mov
icebp
pop
mov
rol
mov
mov
xchg
mov
lahf
out
cmc
mov
mov
lahf
cmpsl
stc
sub
outsb
mov
lret
aas
imul
call
cmp
out
adc
ja
sub
cmpsl
jo
out
iret
je
stc
cmp
lahf
inc
rcrl
repz
dec
enter
mov
fcom
jl
dec
pop
daa
fisubl
addr16
out
push
fimuls
loope
add
push
addr16
gs
sbb
jnp
cmp
pusha
js
enter
add
xchg
out
sahf
push
add
shlb
xchg
xchg
fdivrl
jl
mov
pop
push
xor
sahf
fldz
daa
inc
xorb
enter
jno
addr16
ficompl
aam
pop
dec
mov
jne
and
and
inc
rcrb
xor
push
ss
jmp
cmp
sub
or
xor
inc
xor
loope
lock
or
push
out
mov
or
ffreep
aaa
mov
ljmp
jnp
test
push
xchg
into
rcll
or
outsl
and
sub
xchg
jg
mov
aas
bound
inc
pop
lahf
fmuls
fmuls
push
xchg
pop
push
filds
in
aad
jg
cmpl
iret
sarl
sub
aas
mov
mov
inc
es
iret
rcrb
push
divl
xor
adc
mov
aas
mov
inc
enter
inc
aas
inc
add
rcr
pop
popf
scas
sbb
push
popl
xlat
sub
and
dec
xlat
mov
lods
das
pop
in
inc
xchg
stc
imul
xchg
xchg
add
push
sbb
in
add
push
dec
mov
mov
mov
fldt
and
push
lfs
jb
xchg
pop
enter
adc
mov
dec
push
aas
outsl
fwait
push
enter
push
sub
xor
xchg
bound
movsb
pop
pop
in
shll
mov
in
cmp
push
push
aaa
imul
mov
sub
aaa
and
bound
inc
pop
pushf
sub
jns
leave
in
pusha
inc
pop
push
add
inc
shrl
outsl
in
inc
xchg
xchg
cmp
dec
pushf
mov
lods
mov
clc
imul
sub
out
mov
inc
inc
dec
repnz
mov
mov
dec
and
fidivrl
out
xchg
xchg
ret
cli
cmpb
adc
and
xor
dec
ret
xchg
xchg
out
xchg
pop
push
add
adc
dec
jle,pn
mov
inc
cmp
mov
mov
scas
push
inc
cmp
call
iret
std
addl
or
inc
outsl
add
xchg
iret
enter
and
push
mov
cmp
push
mov
xchg
sbb
sub
iret
leave
clc
add
or
movsl
leave
inc
push
repnz
lea
mov
leave
and
cmp
pop
sahf
test
repz
sbb
aad
repz
add
idiv
dec
aam
or
in
pushf
and
jne
mov
jbe
fwait
fs
daa
test
inc
sbb
mov
fsubl
out
push
jb
jmp
addr16
pop
mov
dec
push
mov
mov
pushf
pop
movl
clc
add
inc
mov
xchg
xchg
xchg
jns
dec
xchg
jb
jb
popa
imul
nop
xchg
pushf
cmp
cmp
movsb
lods
mov
fnstsw
movntq
out
pop
testl
pop
pop
xor
cmp
xchg
leave
inc
repnz
pop
aaa
into
inc
jb
mov
sbb
ret
fwait
sets
out
and
push
leave
mov
in
in
addr16
loopne
pop
in
and
xchg
and
jbe
shl
pop
push
xchg
mov
enter
mov
inc
jb
xchg
popa
push
push
scas
cmp
leave
les
stc
jo
daa
xchg
ja
xchg
lock
fwait
in
pushf
sub
cmp
sub
xor
mov
pop
fwait
dec
pop
test
xchg
inc
sbb
dec
inc
leave
inc
hlt
xchg
fdiv
and
outsl
add
inc
xchg
inc
mov
mov
cmpsl
pop
mov
cmp
bound
mov
leave
leave
xchg
lahf
cmpsl
xchg
cmpsl
in
leave
mov
cltd
loopne
int3
xchg
iret
in
pop
jle
popa
cmpsl
out
mov
mov
mov
pop
pop
or
mov
mov
pop
pop
pop
cmp
or
or
jo
jns
out
jnp
xchg
xchg
out
sahf
out
pushf
adc
sahf
mov
mov
sahf
out
fcoms
cmp
out
add
xor
andl
inc
cmp
mov
and
push
into
inc
jb
addr16
mov
fdivrl
xchg
pushf
ljmp
mov
filds
mov
in
push
jb
mov
fsubr
outsb
xchg
xchg
and
daa
inc
scas
xchg
dec
leave
cmpl
jae
inc
jb
mov
xchg
xchg
addr16
cmp
sahf
mov
mov
jl
and
mov
mov
mov
add
or
add
cmp
inc
cmpsl
add
mov
add
daa
cwtl
xlat
pusha
push
push
xchg
push
roll
aaa
inc
sbb
hlt
jg
push
cmpsl
outsl
lds
push
add
adc
mov
pop
cs
cltd
push
push
and
loop
daa
pusha
lahf
test
cwtl
cltd
push
les
lock
and
jns
mov
cmp
jl
mov
pop
and
add
mov
cmp
call
xchg
xchg
sub
repnz
adc
xchg
adc
and
je
push
jl
in
popf
test
test
es
cmpsl
aas
scas
pop
mov
jbe
iret
fisubl
iret
xor
nop
lcall
mov
cmpsl
cmp
scas
pop
daa
jl
xor
stos
call
pushf
das
das
pop
loope
nop
outsl
mov
inc
repnz
scas
xchg
add
leave
lock
xchg
xchg
pop
je
in
xchg
sub
scas
push
and
js
add
pop
scas
aaa
movsl
pop
adc
mov
aas
sbb
ja
xchg
cmpsb
add
lock
rclb
repnz
mov
inc
adc
fs
push
dec
sahf
cmp
ret
xchg
inc
xchg
jns
bound
xchg
jns
jns
and
sub
xor
cmp
jns
jns
inc
xchg
dec
xchg
push
xchg
pop
xchg
jns
jns
fs
insb
xchg
je
jl
sbb
jns
xchg
mov
fnsave
movsb
xchg
lods
pop
femms
daa
daa
daa
daa
or
daa
daa
daa
or
pop
push
daa
daa
daa
daa
add
es
daa
add
in
mov
and
sahf
iret
xchg
inc
outsl
mov
xchg
cmpsl
hlt
movl
and
or
and
pop
mov
dec
test
repnz
xchg
inc
dec
ja
fistpll
add
fdivl
jb
xchg
in
xchg
daa
xchg
cld
aas
jns
in
mov
push
adc
cmp
cmp
or
pop
sub
cmp
mov
iret
sbb
add
pushf
push
shlb
push
enter
jg
xchg
lods
xlat
mov
add
mov
in
vpmullw
push
out
out
cmc
or
or
aaa
fistpl
das
in
cmovle
loopne
adc
inc
in
push
sbb
fmuls
lock
add
pop
or
les
or
es
adc
or
add
sub
xor
dec
xchg
leave
mov
imul
push
mov
xchg
mov
lods
mov
add
mov
mov
pop
xchg
push
test
xchg
cmc
std
syscall
xchg
jmp
dec
sub
mov
cmp
pop
xchg
sahf
out
and
push
jb
jge
sahf
out
or
jns
out
or
xchg
orl
mov
stos
and
out
xchg
pop
xchg
mov
in
sub
inc
dec
xor
xchg
mov
outsb
mov
xchg
xchg
pop
cltd
pop
pop
test
push
mov
or
inc
cmp
popf
leave
psrlw
xchg
iret
in
xchg
int
cmp
xchg
xchg
xchg
iret
les
in
pop
dec
in
pop
cwtl
xchg
add
pop
cwtl
mov
dec
mov
add
cmpsb
dec
cmpsb
outsb
fnstsw
cltd
dec
push
xchg
pop
pop
sbb
fdivr
outsl
jmp
add
push
mov
lods
nop
int3
dec
and
repnz
in
xlat
cmpsl
jg
cwtl
ret
mov
int
fcomps
adc
pop
cmpsl
adc
insl
in
and
cmp
out
inc
cltd
dec
cltd
neg
inc
repnz
xlat
or
movsl
pop
fildll
subb
leave
mov
mov
jbe
leave
stc
add
xchg
and
xchg
mov
jb
cmp
inc
ja
in
push
leave
jmp
and
outsb
out
mov
jns
jns
rcrb
repz
or
enter
pop
cmp
jb
push
fwait
pop
data16
fwait
jno
xchg
and
jl
xchg
adcl
or
in
jns
loope
repnz
in
testl
inc
mov
pushf
and
mov
pusha
stos
bound
push
add
adc
out
lea
repnz
mov
xor
leave
leave
inc
out
jecxz
dec
xor
stos
scas
cmp
push
popf
popf
outsl
and
pop
imul
in
pop
mov
pusha
mov
imull
and
in
popf
cmc
popf
push
rcll
pop
sbb
lods
jae
jg
int3
inc
jo
xchg
enter
mov
mov
popf
sbb
sahf
ja
push
add
mov
jg
cld
push
cmp
xchg
iret
add
sldt
pop
lahf
cs
sbb
pop
movsb
sbb
pop
ud2
mov
iret
repz
cmp
lahf
fmull
xchg
aas
push
lods
outsl
mull
jns
pop
pop
mov
in
mov
mov
sub
fsubp
add
addr16
xchg
or
daa
pop
insl
xchg
mov
out
jns
push
xchg
pusha
add
dec
cs
aam
mov
add
fs
sbb
in
in
xlat
das
lock
repnz
mov
mov
pop
or
inc
push
fildll
cmpsl
js
xchg
add
jns
leave
jo
push
add
dec
add
mov
fisubl
fdivrl
add
mov
mov
cld
mov
adc
test
mov
mov
mov
in
ud2
pop
or
or
in
in
push
add
in
add
dec
sbb
out
push
sbb
out
sahf
out
insb
push
je
jb
je
jl
and
xchg
and
and
shll
lods
mov
leave
xchg
adc
mov
cmc
in
and
mov
mov
das
mov
arpl
lar
dec
mov
rcl
outsl
xchg
add
fcmovne
in
in
xchg
jg
sarl
mov
pop
jg
lret
leave
leave
repz
fiaddl
loop
xchg
inc
fnstsw
mov
or
xchg
xchg
movsb
and
scas
test
movsb
das
or
cmovo
adc
dec
push
or
fstl
daa
pushf
mov
das
mov
in
add
leave
rcr
outsl
mov
xor
inc
add
or
mov
inc
daa
xor
cltd
in
test
cld
movsb
mov
out
repnz
movsl
daa
push
pop
das
aas
sahf
xchg
out
aaa
aas
add
inc
movsl
fwait
and
xchg
mov
push
jns
fdivrl
add
test
push
fcomps
dec
ja
jge
mov
out
call
push
or
leave
out
sahf
lret
add
mov
sahf
fcoml
xchg
add
inc
repnz
cmpsb
xor
sbb
rcll
cmpsb
cmp
xchg
jae
data16
je
pop
loopne
jb
xchg
popf
movsl
lods
pop
xchg
das
out
fisttpll
aas
push
dec
mov
xchg
xchg
mov
mov
fsub
in
xchg
xchg
call
loop
mov
sbb
decl
inc
cmpsl
jae
lea
cmpsl
push
pop
pop
xchg
xchg
mov
sbb
je
mov
cmpsl
fnstsw
cmpsl
rorl
fstpt
daa
daa
jecxz
das
mov
mov
push
add
mov
iret
repz
sub
xor
jb
repnz
push
jbe
cmp
or
popa
imul
jno
jns
and
mov
dec
sahf
adc
clc
or
pop
and
jns
pop
in
in
add
mov
std
outsl
in
xor
pop
mov
jae
sarb
pop
in
test
incl
xchg
ljmp
outsb
mov
xchg
mov
sahf
xchg
add
out
sahf
pop
int3
or
or
fldcw
or
and
nop
mov
stos
fs
int3
add
mov
out
daa
popw
outsb
add
push
jg
stos
push
jns
mov
add
int3
aam
fmull
add
in
add
lea
das
lods
fldl
lahf
sbb
aas
loopne
out
pop
dec
push
or
mov
inc
add
js
sbbl
out
pop
xor
repnz
lahf
push
add
enter
lar
stos
pushf
jecxz
in
stos
mov
loopne
enter
sarb
jns
or
add
sbb
and
cmp
add
add
dec
sahf
pop
cmp
or
out
ficoms
or
arpl
imul
push
adc
adc
adc
cmp
iret
cmp
out
xlat
add
out
in
cmp
mov
or
stc
into
adc
ja
cmp
mov
push
push
or
xchg
pusha
lods
pop
push
pop
jo
out
mov
or
ror
add
repz
or
rcr
fwait
push
fbld
inc
pop
lods
inc
ja
xlat
loop
outsb
daa
daa
in
cmc
pop
std
insb
add
test
dec
cli
call
dec
filds
fdivrs
icebp
inc
scas
inc
dec
scas
push
scas
popa
pop
loopne
xchg
scas
insb
scas
ja
aas
subb
scas
cwtl
scas
mov
repz
mov
iret
or
fimull
in
mov
xchg
scas
sti
scas
push
scas
xor
ljmp
push
stos
ljmp
inc
into
jo
daa
jg
das
xchg
xchg
and
scas
mov
sub
push
pop
mov
pop
pop
aaa
and
outsl
out
cwtl
rcrb
add
dec
shrb
mov
scas
das
lock
pushf
decb
adc
sbb
jmp
pop
invd
sub
out
sahf
or
cmp
inc
xchg
add
es
mov
add
inc
ss
ja
aaa
js
jb
jg
xchg
mov
pop
ss
hlt
mov
dec
pop
jl
cmp
lds
int
aad
fisttpll
in
xchg
add
inc
stos
inc
inc
ret
andl
cmp
add
mov
mov
mov
pop
es
cmp
sbb
push
push
push
mov
jbe
dec
adc
setne
mov
movsl
lods
pop
push
insl
and
jg
mov
mov
pop
push
add
clts
das
mov
iret
fwait
sbb
mov
paddsw
jae
cmp
cmc
std
adc
mov
mov
adc
repz
and
dec
and
dec
sbb
ret
out
sbb
out
push
pop
push
jae
lea
mov
pop
jo
push
popf
xchg
mov
in
xchg
fwait
cmp
in
daa
mov
add
rcr
leave
repz
mov
inc
mov
shll
jmp
mov
repz
cmp
cmp
push
mov
inc
mov
mov
mov
mov
add
in
jns
push
pop
xchg
pop
mov
popa
mov
imul
pop
or
cmpl
iret
jg
pop
jl
cmp
add
pushf
xchg
testl
pop
and
push
lds
pop
dec
push
fildll
outsb
daa
les
int3
aam
shrb
out
pop
pop
lar
gs
mov
lock
das
setb
lfs
mov
mov
mov
and
pop
and
outsb
packsswb
xchg
nop
pop
nop
ja
mov
or
les
pop
fstps
clts
mov
and
and
insb
and
mov
mov
repnz
jbe
andl
leave
jae
int3
test
cmp
movntq
cmp
add
pusha
rorb
add
or
repnz
or
add
pop
cmp
cmp
scas
mov
sahf
xchg
pop
mov
lidtl
add
sub
or
pusha
rorb
pop
push
inc
mov
mov
leave
out
xchg
or
dec
in
cld
sub
xlat
add
mov
leave
mov
xchg
iret
call
cltd
xchg
add
movsb
daa
daa
inc
or
mov
rep
daa
daa
into
pmaxub
add
out
pop
out
not
inc
sbb
jg
leave
in
setp
and
orb
seto
insl
mov
lret
and
inc
adc
lret
rorl
pushf
xor
scas
mov
and
out
fs
fsubp
pop
mov
sahf
add
pusha
xchg
mov
out
sub
xor
aaa
mov
mov
pop
xchg
add
fwait
sidtl
sahf
xchg
out
xchg
cmpsb
scas
pop
or
fisttpl
cs
or
es
add
mov
sbb
pop
out
pop
punpcklwd
ljmp
xchg
xchg
pop
push
mull
int
cs
sub
pop
push
mov
iret
loop
push
repnz
enter
push
dec
cli
mov
adc
or
sub
dec
mov
iret
mov
scas
push
push
add
cmp
gs
sahf
xchg
adcl
lock
mov
cmp
xchg
mov
sahf
ja
cmp
enter
or
sahf
out
jns
loopne
or
cmpsb
clc
add
mov
bndstx
xchg
jl
into
sbb
jp
sub
mov
daa
adc
adc
xchg
pop
add
iret
rep
add
seta
lahf
push
push
cmpsl
ds
loope
dec
mov
mov
pusha
iret
loop
ljmp
add
daa
adc
xor
daa
push
outsl
mov
mov
popf
fsubl
dec
pop
mov
jns
out
adc
bswap
jae
jb
cltd
mov
mov
push
sbb
int
loop
mov
fisubl
add
das
xchg
dec
inc
dec
mov
in
mov
add
dec
cs
insb
cltd
mov
dec
mov
outsl
lds
sbb
loope
jmp
pop
adcb
mov
xchg
xchg
xchg
xchg
mov
inc
mov
nop
mov
xchg
xchg
xchg
xchg
nop
cwtl
mov
xchg
mov
push
push
sarb
push
out
sarb
push
jo
mov
mov
incl
rorb
outsl
adc
sub
jo
push
rcrb
jns
and
sarb
cmp
dec
sahf
out
add
lret
or
jb
jge
mov
lret
lret
lret
lret
nop
rcrb
lret
lret
lret
lret
mov
mov
ror
lret
lret
rcr
out
out
rol
lret
lret
test
rorl
lret
lret
lret
lret
pop
shll
sub
xor
cmp
repz
pop
dec
and
cmp
repz
and
imul
cmp
and
jle
xchg
repz
xchg
daa
cltd
sub
cmp
rep
or
sahf
outsb
cvttps2pi
mov
shll
pop
paddw
add
mov
push
adc
stos
jecxz
inc
and
lea
jb
ret
imul
mov
add
sub
pushf
mov
xor
in
in
movsb
lods
mov
in
leave
in
les
in
in
sub
out
in
jnp
mov
sahf
cmpxchg
mov
mov
psubusw
out
mov
sbb
mov
pop
popa
punpckhwd
jno
dec
dec
dec
dec
xchg
mov
in
and
add
decl
repz
pop
adc
das
dec
sub
mov
pcmpgtw
sub
sub
jne
push
lds
fisubrs
xchg
popf
lds
xchg
int
divl
mov
inc
inc
lds
pop
xlat
sub
and
pop
push
inc
iret
cmp
pop
sahf
pop
ja
pcmpgtw
insl
xchg
add
dec
nop
test
mov
adc
int3
in
in
jp
cmp
add
daa
mov
xlat
inc
sbb
rdtsc
cmp
iret
repz
inc
add
dec
outsb
pop
push
repz
ud2
mov
jns
xchg
fistpl
ret
out
int
fsub
adc
out
jns
stc
push
add
iret
jae
fimuls
push
sbb
sbb
sbb
sbb
cmp
daa
push
pop
pop
scas
movsb
daa
iret
and
enter
cmp
ss
enter
jo
out
pop
movsb
mov
add
dec
aaa
jns
clts
std
pop
inc
sbb
out
add
jns
lret
adc
push
or
sahf
out
fisttpll
push
ds
iret
cmp
dec
push
adc
cmp
in
push
adc
lar
or
repz
jne
sbb
sti
inc
ss
sbb
pop
sbb
xchg
sub
ficompl
lock
mov
out
jbe
pushl
cmpsb
out
mov
pop
scas
leave
outsl
outsl
adc
or
sti
xlat
add
cmp
in
pop
or
adc
add
inc
repnz
sahf
and
cmpsl
push
jl
fdivl
inc
lret
push
pop
mov
cmp
daa
daa
mov
mov
daa
adc
imul
fildl
in
mov
hlt
cld
push
add
or
inc
repnz
mov
ja
int3
pop
daa
iret
jae
bound
cmp
xchg
popf
mov
jbe
movsl
lods
xchg
mov
loopne
fisttpll
int3
vmwrite
ja
push
add
and
sahf
out
sub
push
cmp
insl
and
inc
jg
frstor
leave
leave
leave
leave
outsb
jbe
xchg
fisttpl
mov
popf
pushf
pushf
mov
mov
mov
nop
in
hlt
paddb
cmpsb
daa
add
pop
or
aam
mulb
int
aaa
daa
aas
sahf
out
mov
pop
push
add
dec
addr16
pop
outsl
or
in
sub
mov
xchg
fistps
mov
pop
mov
jbe
pop
lret
pop
or
adcb
and
lods
pop
into
into
pop
sbb
xchg
jmp
pushf
pushf
dec
dec
push
pop
pusha
pop
and
pushf
push
mov
xchg
mov
out
mov
movsb
inc
repnz
addr16
lea
add
out
iret
iret
daa
adc
push
aaa
sub
ja
cmp
jns
daa
inc
pop
dec
add
sahf
out
add
xchg
fildl
push
mov
mov
fstpl
lret
iret
btsl
mov
in
inc
loop
repz
pop
femms
add
add
cmp
out
pop
pop
syscall
dec
das
das
fwait
hlt
push
sahf
pop
shlb
jo
das
das
das
das
jnp
xchg
xchg
rcrb
cmpsl
shlb
repnz
jmp
repnz
sar
rorb
rcll
repnz
sub
roll
in
repnz
rcll
dec
dec
mov
sbb
dec
dec
sbb
pop
push
jns
dec
dec
adc
xchg
xchg
out
orl
movsb
xor
sahf
out
lds
shlb
out
sahf
out
out
icebp
aaa
iret
sarl
cmp
sarb
adc
jns
out
push
sbb
cmp
out
ds
push
out
xchg
out
pop
cmovb
push
fmull
inc
jne
jnp
iret
xchg
inc
mov
mov
pop
int
xchg
out
cmp
out
dec
stc
cmp
stc
je
push
add
bndldx
pushf
cmp
fistpll
rorl
pop
jo
outsb
pop
mov
lret
pop
push
jns
test
pop
inc
mov
into
lcall
enter
rol
rcl
rorl
shl
shl
sar
rorl
repnz
or
adc
iret
push
aam
xchg
and
aam
aam
aam
out
fimuls
adc
jns
out
imul
sbb
sbb
jns
mov
pop
mov
and
and
cmp
repz
out
and
out
cmp
jns
aad
sbb
cs
repz
sub
sub
jns
daa
inc
rsqrtps
pop
sahf
out
sahf
das
push
leave
repz
pop
xchg
xor
repnz
fldt
cmp
repnz
jae
cmp
cmp
repnz
jae
cmp
jbe
jnp
prefetch
pop
and
in
sahf
xor
inc
cmp
enter
dec
dec
pop
in
add
xchg
mov
lahf
add
push
sbb
pop
test
arpl
iret
dec
cmpsb
pop
and
rorl
dec
repz
push
lahf
dec
cmp
repnz
or
pop
adc
iret
sub
orb
adc
jmp
ret
xchg
call
dec
shrd
sbb
test
mov
adc
xlat
pop
jns
daa
daa
dec
push
orl
dec
test
bnd
xchg
or
shlb
ret
in
xlat
lahf
hlt
push
xlat
dec
and
sbb
js
push
in
ja
comiss
aaa
fadd
aas
fdivs
cmp
fmuls
push
mov
lahf
test
leave
fdivrl
cmpsl
test
mov
pop
fwait
mov
cmp
jae
mov
mov
cmp
repz
fisttpll
call
repz
fsts
pop
sub
xor
cmovo
adc
popf
cmp
insb
push
sbb
jns
out
sbbb
sbb
nopl
mov
cmp
mov
mov
pmulhw
outsl
sti
push
fsts
adc
das
sbb
jg
test
ljmp
push
push
add
fimull
add
push
ret
scas
ficoml
fstpl
sahf
iret
or
leave
rol
leave
repz
mov
fistl
pop
dec
mov
sub
add
fdivrs
fisttpl
insl
xchg
xchg
fistl
popa
pop
minps
push
mov
fildl
sahf
out
adc
pop
repnz
jae
sbb
sbb
cmp
xchg
outsb
movlhps
push
push
in
fiadds
and
jns
and
fmull
out
sahf
out
daa
xor
repnz
sahf
cmp
push
fmull
add
dec
add
pop
cmp
mov
or
sub
add
sub
cltd
inc
rclb
leave
repz
mov
add
sahf
fcmovnbe
pmaxub
jmp
popf
hlt
add
rclb
push
fnstsw
in
fldl
add
cmp
repz
add
iret
repz
jns
test
inc
dec
mov
jg
lret
iret
inc
fnsave
enter
outsl
rcr
sub
movl
xor
data16
push
insl
in
movswl
das
fidivs
das
push
jp
call
cmovg
call
fbstp
sahf
outsb
repnz
xchg
xchg
out
dec
lcall
repnz
je
add
mov
repnz
jae
or
sahf
out
loopne
call
xchg
popf
js
into
add
movups
cmp
repz
sbb
pop
and
sub
repnz
filds
in
repnz
pop
sbb
js
outsb
jno
pop
jl
xchg
xchg
fcomip
mov
test
push
mov
repnz
pop
mov
iret
mov
ljmp
sbb
ud2
push
pop
and
cmp
jae
adc
adc
ljmp
cmpsl
fldt
or
arpl
outsb
das
jns
out
jns
test
push
sbb
lcall
pop
mov
and
push
and
and
xchg
out
fsubl
jae
jns
or
call
loope
push
dec
sahf
out
sub
sub
aas
jns
leave
repz
jbe,pn
push
xor
in
cmp
push
pop
orl
loope
mov
es
cmp
nop
mov
add
or
mov
dec
xchg
xchg
push
mov
fisttps
and
insb
push
add
aas
inc
push
mov
xchg
push
xor
sbb
aas
stos
xor
sbb
push
dec
xchg
inc
aaa
cmp
inc
popa
dec
aaa
cmp
jns
daa
iret
push
add
sbb
jns
out
or
dec
dec
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
jbe
dec
ficoms
push
adc
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
cmp
pushf
test
xchg
sub
mov
imul
xlat
sbb
data16
mov
loop
inc
imul
stc
jns
out
push
inc
cmp
xor
out
sahf
out
and
or
iret
repz
clc
clc
in
call
iret
repz
aam
int3
enter
repz
rcrb
test
repz
sahf
mov
xorb
cmp
pusha
push
push
dec
js
iret
repz
sub
or
inc
inc
mov
inc
notb
sbb
sub
add
inc
enter
push
dec
add
jno
cmp
std
imul
dec
add
sbb
adc
cmp
sahf
jl
das
push
add
movsb
add
cmpsb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
jl
std
adc
push
ficompl
mov
xor
mov
rcr
fsubp
stc
jb
jle
push
inc
test
xlat
inc
mov
stos
pop
fisubrl
in
sbb
jo
adc
add
or
cmp
inc
mov
ja
aaa
push
pushl
xchg
mov
inc
mov
pop
das
aas
inc
insb
mov
pop
aas
xchg
les
out
ds
out
xchg
inc
push
or
repz
aam
adc
adcb
sbb
jns
iret
sbb
std
sbb
test
push
cmp
ds
sarl
and
mov
js
cli
push
jns
stos
jae
in
decl
cmp
into
sti
adc
lcall
les
in
mov
cs
push
add
jnp
outsl
aas
add
inc
pop
dec
pop
or
js
and
fisttpll
inc
adc
jae
aam
call
icebp
addr16
push
push
mov
inc
dec
or
adc
js
xor
pop
aas
pop
push
xor
out
jae
pop
xor
cs
call
mov
pop
jg
out
fidivs
push
inc
sub
mov
shl
mov
iret
sbb
and
out
pop
sbb
sbb
sub
jns
pop
pop
or
inc
cmp
and
clc
adc
xor
push
sub
or
ds
push
call
adc
repz
neg
and
push
or
add
push
cld
cmp
jnp
adc
hlt
sbb
out
sahf
notl
push
rcrb
enter
jns
rclb
and
mov
lods
and
out
cwtl
aas
or
adc
mov
jmp
inc
out
xor
xchg
fiaddl
xor
aaa
inc
cmp
xorl
and
jg
sahf
out
fidivrs
push
pop
js
mov
ds
repz
adc
xor
add
cmp
pop
ja
mov
iret
loopne
shl
jae
das
push
dec
mov
xchg
xchg
push
loopne
mov
add
cli
or
or
ret
sysret
stc
and
and
adc
mov
mov
sbb
into
sbb
rorl
and
inc
lcall
lods
lds
std
and
call
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
decl
clc
scas
adc
lds
imul
loope
jp
iret
inc
gs
xchg
push
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
jmp
pop
cmp
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
and
fcomi
int
add
sti
aas
jno
or
mov
pop
fs
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
orl
pop
ficomps
frstor
fcompl
push
pop
pop
inc
unpckhps
inc
push
dec
xchg
xchg
shll
jnp
cmpsl
jmp
xor
ja
popa
push
out
mov
ljmp
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
pushl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
int
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
ljmp
pop
filds
or
shrl
push
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistpll
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
incl
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
lcall
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
fcomip
shrb
rclb
or
add
mov
das
es
or
sub
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
xor
dec
ret
cmpsl
notl
pusha
rorb
pop
inc
ljmp
shrl
or
inc
mov
aaa
pusha
mov
fdivrp
push
cli
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
es
loopne
fadds
adc
iret
ror
rorb
pop
js
mov
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
sbb
je
cld
pop
adc
add
add
adc
mov
lahf
movsl
andb
adcl
rcrb
jae
inc
sbb
dec
bound
add
sbb
inc
insl
bound
inc
sub
jle
cs
je
push
mov
not
fistpll
and
cmp
jle
adc
xor
pop
inc
cmp
pop
bound
fs
pushl
aaa
aaa
cmp
popa
arpl
cmp
arpl
or
xor
sbb
gs
xor
popa
pop
fdivr
ficoml
inc
jbe
pop
insb
imul
push
insb
imul
cmp
inc
or
inc
or
push
inc
pop
ss
inc
lods
inc
add
loope
mov
popa
or
mov
xor
push
je
subl
push
jbe
les
mov
xor
fildl
jle
gs
inc
mov
push
push
add
mov
aaa
jno
sbbl
xor
pusha
add
dec
sub
cmp
mov
insb
aaa
aas
sbbb
aas
add
notb
add
cltd
cmp
or
insb
daa
scas
popa
inc
hlt
int
pop
inc
int3
insb
sub
aas
jle
enter
inc
inc
sub
ss
inc
pop
in
ficomps
pop
xchg
inc
inc
inc
add
fldenv
mov
ds
mov
sbb
imul
int
push
dec
cmp
inc
rcll
mov
fbstp
cwtl
and
dec
ljmp
lods
jb
insl
popa
mov
push
lods
pop
xor
xor
push
mov
adc
xor
addr16
arpl
clc
xchg
into
pop
jo
lods
jge
cmpb
inc
cmp
aas
aaa
xor
sub
dec
xor
inc
stc
fcoml
pop
ss
outsl
pop
ss
orb
lahf
cmp
mov
mov
pop
addr16
xorb
lahf
pop
adc
xchg
out
jb
adc
add
and
adc
dec
popa
jo
push
dec
inc
mov
outsl
test
mov
sub
sub
sbb
sub
in
lcall
push
sbb
nop
test
pop
cmp
arpl
cmp
mov
jo
push
aam
add
xchg
insb
jns
mov
popf
das
inc
jb
mov
add
gs
insl
out
test
test
dec
popa
mov
bound
inc
push
gs
push
fisubl
lods
ja
inc
jbe
adc
jg
bound
xor
cmpsb
arpl
pop
das
xor
cmp
out
mov
addl
test
add
pop
xchg
arpl
ret
xchg
jle
xor
or
ds
ret
daa
sbb
sbb
pusha
push
rclb
inc
push
inc
dec
fs
mov
push
jns
arpl
mov
pusha
adc
insl
add
inc
jne
push
pop
insb
mov
push
inc
xchg
fildl
add
or
out
daa
sub
and
dec
push
push
adc
add
frstor
add
jg
push
orb
add
fdivr
loopne
xchg
or
dec
add
mov
add
fistl
add
add
or
pop
pop
push
or
mov
decl
or
or
or
or
adc
adc
push
adc
pop
sti
aaa
mov
add
pop
sbb
adc
adc
adc
add
fimull
add
or
adc
pop
adc
out
sbbb
rolb
jo
add
fwait
std
add
and
add
sahf
add
les
movsl
outsb
add
add
mov
shlb
pop
jo
shrb
ds
xor
incl
adc
pop
and
xor
inc
mov
adc
xor
cmpb
lcall
mov
shrb
mov
mov
xchg
xchg
pusha
daa
add
adc
arpl
loope
addb
ret
sbb
add
add
scas
add
inc
pushf
into
add
adc
cmp
jg
jne
adc
push
adc
pop
popa
jno
and
das
push
xchg
mov
lock
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
mov
cli
sub
rcr
push
ret
xchg
incl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
std
pop
les
fsts
dec
popa
add
push
mov
cmp
inc
loop
cmp
xor
and
fistpl
jg
inc
cli
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
push
repnz
rcll
incb
sub
pop
add
call
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
orb
lahf
std
movsl
jecxz
pop
mov
sub
push
stc
or
xchg
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
fs
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
std
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
pushl
cld
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
lock
jecxz
mov
mov
out
pop
jb
mov
mov
mov
mov
inc
fwait
sbbb
mov
dec
jp
push
gs
sti
sub
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
ljmp
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
sub
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
mov
in
mov
jb
and
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
dec
adc
pop
cld
addl
adc
and
mov
or
fmull
enter
jecxz
scas
sub
clc
jg
jg
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
mov
pop
iret
mov
jg
mov
aad
test
lds
inc
mov
mov
iret
push
pop
cmp
jg
push
push
sbb
stos
icebp
pop
incb
jno
adc
push
ljmp
jl
jecxz
sbb
sarl
adc
loopne
shll
mov
jle
imul
dec
push
in
aas
mov
mov
js
fsubrl
lock
and
incl
sbbb
mov
pushf
outsl
movsb
lods
inc
mov
dec
jne
push
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
fistpll
adc
lahf
mov
or
out
lcall
sti
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
outsl
lock
xchg
or
stc
out
mov
clc
push
std
mov
rcl
icebp
or
mov
pushl
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
idivb
fisttpll
aas
lods
leave
inc
lods
movsb
incl
pslld
pushf
imul
cli
daa
pop
and
imul
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
test
outsb
cld
daa
jp
std
adc
cltd
or
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
push
sbb
mov
inc
add
pop
out
or
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xorb
mov
lahf
jp
dec
add
xlat
sbb
fbstp
xchg
sarl
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
inc
sbb
iret
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
daa
xchg
pop
add
test
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
faddl
or
add
add
sti
push
sti
int3
les
push
mov
push
pop
mov
cmp
int3
pop
iret
aas
and
add
jmp
adc
int
pop
jo
dec
data16
or
lds
test
inc
sbb
mov
out
sarb
cs
rolb
pushl
cltd
rcrb
pop
in
sub
xchg
xchg
xorl
sar
popa
int3
jbe
lcall
aam
or
lods
sti
cmpsl
sub
rcrb
stos
lret
les
popf
jge
loope
out
popa
decl
into
push
and
push
es
push
test
cmp
aas
fwait
push
std
sub
push
daa
mov
fisttps
mov
inc
fucomp
sbb
fcom
decl
jnp
fidivrs
shrb
mov
inc
xor
cmc
movsb
jmp
dec
out
pushl
sahf
dec
adc
adc
mov
adc
xchg
mov
pop
push
jl
outsb
test
sbb
jmp
mov
cmp
xchg
insl
pop
sbb
push
jae
gs
xchg
jg
mov
dec
mov
fs
or
adc
ja
cmp
cmp
mov
sub
cmp
cmc
incl
xor
push
js
xor
cli
gs
sub
sub
mov
push
nop
mov
inc
mov
movsb
jo
addb
pop
leave
dec
fcmovb
push
sub
jmp
insb
filds
icebp
cwtl
in
decb
xor
fbld
loopne
aam
call
insb
sarl
jbe
and
repz
loop
push
or
mov
push
xor
jmp
xchg
bound
xchg
rcr
aaa
xor
sbb
jecxz
fwait
out
jg
jb
cwtl
pop
aam
push
jae
int
fstpt
js
sub
out
cs
loop
lcall
or
cld
adc
jmp
jno
fists
pop
shlb
push
xor
lret
dec
sub
mov
idivl
fistpl
push
hlt
int
lods
repz
xor
ds
mov
incl
push
cs
xchg
xor
mov
or
iret
cmpsb
stc
xchg
or
jl
and
fdivl
ljmp
out
idivl
mov
scas
xor
mov
leave
andb
lcall
push
xchg
stos
mov
lea
xchg
lret
test
jb
lds
fldt
fs
and
jae
inc
mov
or
cmp
xlat
dec
daa
jmp
leave
xchg
jbe
sub
and
fldl
in
mov
pushw
stos
mov
lcall
mov
sbb
ja
mov
shll
mov
gs
rolb
adc
push
add
out
adc
movsb
mov
or
sub
add
dec
mov
out
jnp
fildl
jmp
jno
or
incb
xchg
stos
xchg
add
cmp
xchg
leave
lock
xor
xchg
sbb
xchg
push
and
inc
roll
push
in
lcall
insb
loope
out
xchg
dec
and
lret
jnp
pop
div
addr16
add
out
push
jl
cld
dec
stos
sub
or
add
gs
ljmp
or
adc
mov
pushl
push
andl
add
aas
and
push
lods
or
cmpsl
or
add
nop
sahf
aad
lods
std
push
repnz
popa
and
adc
enter
mov
fcmovb
pop
lock
mov
inc
dec
cmc
add
or
adc
pushl
cld
jg
jmp
mov
add
shl
lret
std
aas
popa
jns
pop
out
clc
incl
addr16
mov
insl
sub
push
into
inc
andl
lcall
or
mov
insb
xorl
fbstp
out
inc
mov
or
ljmp
pop
jmp
outsl
dec
gs
add
cmp
lcall
xor
in
xchg
int3
push
in
cmc
call
inc
push
dec
push
add
push
add
dec
push
inc
clc
ljmp
rcrb
adc
loop
lods
xlat
cwtl
loope
xchg
test
xchg
push
push
pop
push
sbb
gs
adcl
mov
cltd
push
mov
aad
pop
sub
lcall
dec
or
dec
and
js
sbb
incl
xor
and
mov
in
adc
mov
dec
int
test
sbb
ljmp
rorb
inc
stos
popl
pop
and
pop
ficompl
addr16
and
lcall
sbbb
dec
push
ror
push
xchg
jmp
adc
repz
outsb
sahf
or
aas
repz
into
xor
cmpsl
mov
jns
test
mov
mov
jg
aas
mov
test
data16
call
fistpll
and
cmp
ss
aam
inc
add
add
incl
jnp
adc
mov
ljmp
push
aad
push
ds
mov
mov
cmp
sbb
aad
lahf
xchg
sub
and
incl
add
xchg
dec
xor
adc
loop
stos
idiv
ljmp
jns
daa
call
dec
das
fidivrl
daa
ljmp
fcomip
add
dec
cld
sahf
daa
inc
jno
mov
xchg
sub
loope
lods
pop
hlt
fnstcw
xchg
pop
add
ds
ret
movsb
and
push
jp
decl
enter
push
jl
push
out
xchg
loop
push
lock
xchg
mov
mov
addr16
lcall
inc
es
dec
cmpsb
iret
notb
lock
fwait
mov
push
fldt
fs
cwtl
cwtl
stos
call
ficoml
pop
mov
aas
jp
imull
sbb
lds
or
aas
jae
aam
lcall
and
xor
ss
mov
add
shll
loopne
rolb
xchg
add
imul
xor
fdecstp
push
and
push
jbe
jno,pn
pusha
xor
mov
jecxz
lcall
xor
daa
std
pop
fiadds
xor
fidivs
lcall
lret
mov
xchg
dec
or
inc
adc
pop
jo
cmpsb
dec
in
jnp
insb
jmp
inc
jae
jo
jmp
push
out
sub
inc
cwtl
push
cs
pop
jno
not
add
call
std
pushl
shll
jmp
xor
pop
cmp
mov
es
ret
xchg
outsb
call
cmpsb
add
sub
nop
mov
xor
lds
mov
fxam
xor
repz
ror
lcall
shll
lock
sub
hlt
ds
inc
push
lock
jmp
sbb
mov
add
incl
inc
out
fistpll
xor
fisttps
push
sbb
jb
lds
or
xor
pushl
push
jge
push
fistpl
test
push
dec
daa
sbb
mov
and
test
dec
push
dec
out
ret
xchg
jb
jl
lcall
xor
jle
jb
dec
xor
insl
lds
hlt
pop
mov
lcall
test
push
into
fimuls
outsb
repz
sbb
and
les
fsubl
or
call
popa
adc
jmp
scas
dec
and
imul
repnz
mov
xor
mov
xor
fsts
add
sbb
repnz
aad
fs
ljmp
sti
pop
cmp
movsl
push
inc
jmp
dec
shrl
fidivrl
sub
decl
mov
cmp
and
call
dec
xorb
sub
roll
xchg
lods
fwait
and
lcall
adc
dec
outsb
mov
sahf
pop
mov
idivb
pushf
cmpb
out
cli
lds
or
adc
mov
sbb
sbb
cwtl
das
aaa
inc
pop
mov
fstpt
mov
pop
cmp
in
outsl
call
push
jne
scas
jg
stos
sub
addl
xor
bound
or
dec
popa
mov
dec
push
inc
pop
jns
push
shlb
sub
push
aad
mov
js
ss
scas
int
inc
xchg
and
decl
int
subb
ja
loopne
xchg
mov
push
pusha
push
aad
les
nop
sti
jg
xlat
pop
shlb
pop
lret
and
movsb
hlt
push
bound
negl
icebp
mov
cmc
pop
fcompl
rcll
add
pop
mov
sahf
cmpsl
cwtl
cmp
rorl
inc
xchg
fcompl
decl
push
dec
adc
test
jmp
cmpsl
jmp
pop
pop
pop
shll
out
pop
daa
inc
inc
lret
mov
out
rorb
test
cmp
jge
es
shrb
arpl
shl
scas
and
mov
std
jno
sbb
inc
add
mov
and
clc
lods
cwtl
and
push
fcmove
pop
cmpsb
mov
decl
push
mov
addr16
sub
icebp
push
jne
mov
movsb
orb
aad
pushl
cltd
pop
mov
ljmp
mov
mov
push
mov
mov
lods
aad
xchg
test
mov
pusha
lods
mov
dec
repnz
test
fdivs
ret
or
in
and
xor
xchg
or
call
xchg
adc
jns
and
cmp
rcll
and
mov
mov
clc
test
into
push
fs
push
push
pop
out
mov
lcall
call
push
jae
sbb
xor
lods
les
sbb
outsl
pop
mov
and
jg
es
xor
mov
inc
mov
dec
test
sarl
jmp
int
out
pcmpgtw
dec
sbb
add
cwtl
and
cmp
add
adc
adc
mov
push
sbb
ljmp
dec
aaa
loop
shlb
mov
xchg
fistps
and
push
incl
sbb
insl
xchg
pop
fisubl
and
xchg
and
sbb
push
cli
lret
outsb
cmp
ljmp
pop
out
idivb
jo
push
sbb
int
iret
test
sub
cmp
rcr
ljmp
and
mov
fildll
pop
mov
aad
mov
mov
jbe
lret
insb
ljmp
icebp
stos
add
das
sbb
xor
jmp
rorb
mov
jg
push
sub
dec
dec
jle
jg
jg
jns
outsb
sub
cltd
call
mov
jns
mov
shll
xlat
push
std
loopne
xchg
pop
push
push
cmc
scas
dec
stos
mov
fdivs
xchg
pushl
scas
pop
mov
lret
xstore-rng
cmpsl
andl
es
aad
push
xchg
out
insl
push
arpl
fs
out
cmp
sbb
inc
jo
insl
jnp
jbe
popf
xchg
divb
and
aam
fimull
jp
cld
aaa
adc
hlt
rcr
push
mov
pushl
loopne
test
ljmp
hlt
jbe
mov
or
fisubl
in
xchg
cmp
lcall
push
sbb
loop
out
pop
inc
add
rcrb
xor
arpl
lahf
inc
sub
and
ljmp
loope
mov
mov
lods
sbb
add
xchg
fadds
pop
ss
jg
lcall
inc
les
das
insl
cltd
push
jl
aam
insl
out
sbb
jne
lcall
jb
std
test
jns
insb
cmp
push
pop
fwait
or
pop
jo
std
adc
jecxz
jno
pop
sahf
enter
mov
jmp
sub
sub
pop
sbb
jg
lahf
in
adc
sub
enter
lcall
pop
jb
jp
xor
mov
cmp
mov
jmp
call
mov
ss
inc
imul
int
test
sub
lods
add
and
test
dec
sbb
lods
pushl
pop
scas
loopne
andb
sub
iret
fcmovb
jl
xor
pop
pop
call
nop
imul
push
nop
mov
sbb
jmp
outsb
ret
xchg
jge
jb
ljmp
imul
mov
aas
cmc
ja
xchg
sbb
int
test
sar
inc
pop
mov
cmp
adc
and
pusha
adcl
cwtl
and
cld
mov
insb
test
cs
ss
dec
sub
popaw
std
outsb
cmp
mov
or
lcall
filds
pop
jg
sti
pop
inc
mov
movsl
push
xor
inc
sub
cmp
shl
data16
in
loop
add
test
adc
cmpsl
inc
mov
jge
sbb
jmp
and
pop
addr16
ss
sub
in
ret
push
pop
jmp
mov
adc
imul
and
and
lcall
repnz
and
inc
sahf
aas
xchg
xchg
cld
mov
roll
das
das
xor
cmp
and
pushl
cli
cmpsb
insb
movnti
and
mov
pushl
andb
ret
out
mov
scas
add
pop
cmp
insl
ret
adc
ret
rol
lcall
insl
popf
xchg
adc
jg
int3
out
pop
jmp
out
adc
mov
rol
shlb
cmp
bound
fcoms
add
ja
xor
rcr
outsl
or
and
or
mov
push
jg
decl
xchg
lcall
out
mov
in
push
enter
pusha
js
stc
sub
xchg
ljmp
xor
fwait
int
xor
loope
xor
dec
xchg
cmpsl
dec
dec
loope
pop
incl
cmovne
jmp
ss
jo
movsl
int3
push
cltd
and
pop
lock
into
jmp
dec
addr16
add
sbb
inc
mov
cmp
jmp
fldcw
enter
push
mov
add
xor
in
scas
les
ss
outsl
incl
xlat
or
mov
sahf
pop
mov
lea
push
pop
iret
push
mov
jecxz
js
decl
out
and
cs
test
push
jmp
push
cmpb
jmp
ds
sahf
ret
xchg
inc
pushf
pop
push
adc
push
jp
jmp
pop
dec
push
in
mov
cltd
sub
stos
sub
decb
dec
dec
stos
subb
dec
xlat
mov
gs
lcall
dec
cmpl
xor
ljmp
and
push
xor
cmp
repz
int
repz
enter
dec
stc
mov
push
inc
shll
inc
xor
sub
pop
mov
aas
out
mov
cmpl
mov
psubd
mov
add
and
insb
push
popf
dec
jae
adc
xorb
punpckhwd
fwait
out
sub
xchg
lcall
ljmp
add
fdivr
incl
jge
jo
xor
dec
add
adc
xor
push
mov
gs
xchg
mov
cmp
mov
inc
decl
movsl
arpl
xor
sbb
out
xchg
or
sbb
lods
xor
pop
into
lcall
push
icebp
push
popa
movsb
leave
jl
arpl
jp
jl
inc
or
incl
sahf
adc
fildl
dec
ret
sub
cmpsb
repnz
icebp
xlat
sub
fdiv
jmp
enter
dec
popf
mov
dec
inc
and
dec
mov
outsb
fs
add
jns
out
imul
ljmp
xchg
out
mov
xor
pop
sub
clc
imul
lods
test
ljmp
pop
mov
push
int
push
mov
push
outsl
pop
mov
pop
add
pop
add
imul
jmp
xchg
and
mov
out
std
jno
xchg
inc
into
mov
repnz
xchg
dec
je
cmovae
cmp
sub
lods
jle
frstor
jl
stc
sbbb
jae
call
sbb
pop
mov
repnz
adcb
and
add
gs
nop
imul
push
out
call
icebp
scas
mov
mov
imul
out
in
mov
clc
aaa
pop
fstps
mov
push
lret
push
aam
ds
popf
or
imul
push
push
insb
xchg
decl
jo
mov
lds
xchg
add
pushf
mov
pushf
outsb
jl
rep
push
pushl
pop
pop
fstpt
xor
add
and
or
loop
mov
jle
cmc
dec
add
sbb
add
mov
sub
mov
add
mul
mov
mov
enter
in
aas
push
out
call
icebp
test
jne
cmc
fdivrp
lret
jg
repz
call
mov
or
into
test
loopne
pusha
das
cli
mov
adc
sbb
xchg
hlt
xor
or
lods
icebp
pop
xorb
mov
incl
and
mov
imulb
mov
loop
xchg
cmp
jno
repz
pushl
loopne
jle
jp
cli
addr16
mov
ss
lock
xchg
mov
pop
cld
cmp
jp
xchg
cwtl
adc
loopne
push
mov
hlt
or
xor
push
lcall
lds
aad
into
add
cmp
mov
sub
shll
mov
add
pushl
cmp
popa
xchg
shr
clc
mov
test
pop
cmp
cvttps2pi
bound
test
sbb
mov
enter
ret
popf
add
jno
push
std
lcall
sub
lret
lret
movsb
mov
scas
mov
movl
pushl
and
adc
jae
jg
in
das
mull
testl
outsl
call
mov
aaa
loopne
hlt
mov
jae
sub
jnp
sahf
dec
pushf
popf
cmpsl
scas
mov
add
mov
aad
add
xor
rolb
inc
mov
inc
xchg
stc
roll
repnz
push
test
lret
scas
pop
loopne
call
dec
std
test
int3
stc
push
or
fsubl
mov
cmp
ljmp
aam
pop
xor
pop
or
pop
or
pushl
xchg
or
je
std
and
repz
cli
out
mov
lcall
dec
outsl
dec
sti
or
rcll
jmp
jl
push
or
xor
lcall
dec
fs
mov
cmc
incl
dec
lcall
ret
cmp
aaa
or
neg
int3
mov
mov
or
mov
xchg
das
or
fldenv
sbb
incl
fwait
aad
sahf
or
and
fwait
lahf
cld
lock
xor
jb
jmp
testb
pop
pushf
jge
cwtl
sahf
repnz
cmp
rcl
push
push
iret
rcr
push
aas
xchg
sar
push
pushl
add
adc
adc
pop
in
xor
sbb
dec
ljmp
fs
push
enter
dec
scas
sar
incl
fisttpll
pop
inc
pop
cmpsb
xchg
mov
pop
loopne
sbb
cmp
jg
insl
mov
pusha
cwtl
pusha
add
out
ljmp
bound
frstor
add
cmp
or
inc
sub
cmp
cmc
or
adc
sbb
pushl
mov
shl
push
inc
mov
add
cmp
leave
call
cltd
jae
inc
negb
push
dec
pop
notl
cld
xor
jne
push
sarb
mov
lret
lods
loopne
sahf
push
push
and
gs
cld
add
jmp
mov
adc
add
pop
or
test
loop
mov
pushf
adc
cwtl
aad
ljmp
xlat
js
rcll
cmc
sbb
mov
xlat
cs
jl
in
in
jno
pop
insb
es
xlat
fwait
inc
dec
xchg
ljmp
pop
add
cs
loope
add
lcall
push
fistps
add
frstor
jae
ljmp
cli
decl
or
adc
mov
test
push
daa
mov
jecxz
xlat
out
into
lods
xor
push
sbb
call
ret
into
lcall
xor
jmp
jmp
mov
sahf
mov
add
fiadds
push
pusha
insb
fcoms
jl
roll
decb
sub
inc
xchg
rcrb
pop
dec
push
and
call
pushl
xor
add
sbb
pop
adc
jae
into
cli
mov
mov
decl
xor
push
mov
xor
ljmp
aad
jnp
imul
push
sbb
or
cmc
in
dec
movsl
scas
adc
out
mov
inc
inc
lcall
jns
adc
fistpll
movb
jg
push
ss
int3
and
or
bound
cmp
fstl
adc
mov
add
repz
lds
xor
ja
into
hlt
pop
dec
xchg
ss
xchg
jg
mov
scas
in
out
inc
xor
imul
mov
iret
repnz
enter
jae
inc
enter
arpl
ljmp
rcrl
lahf
test
faddl
lock
xchg
jp
lods
repz
or
and
decl
push
imulb
jno
fldt
jno
cmp
sub
or
push
xor
div
jmp
sahf
add
aam
mov
jg
push
test
push
push
mov
lcall
enter
imul
mov
push
pop
jp
stos
or
loopne
es
mov
pushl
es
cmp
push
or
xor
std
and
xchg
mov
jmp
jb
fmuls
or
xchg
add
ja
and
jmp
fldl
loop
fisttps
xlat
jmp
sbb
mov
dec
fdivl
fwait
arpl
gs
sub
xchg
mov
stos
js
or
daa
pop
loope
mov
cmp
or
mov
inc
pop
mov
or
lds
adc
adc
lcall
pop
cld
pushl
and
adc
faddl
push
aas
cltd
push
scas
int3
add
inc
out
jmp
sti
pop
jg
and
mov
sbb
into
mov
iret
aad
jno
imul
aam
ljmp
pop
pop
pop
xchg
xchg
hlt
and
lods
and
or
or
jno
call
decl
mov
loop
and
xchg
inc
mov
das
mov
inc
mov
pop
sbb
fisttpll
inc
lret
js
shll
fiaddl
inc
sbb
fistpll
and
adc
ficomps
and
daa
push
add
mov
int3
dec
and
decl
xlat
inc
push
xlat
xchg
sub
loope
bound
add
loop
sarl
test
fcomip
jg
push
clc
xchg
cmp
test
mov
call
roll
jge
stc
and
rolb
mov
pop
jp
mov
pop
xor
arpl
clc
arpl
mull
inc
lcall
push
shrb
cltd
sbb
push
and
sar
jns
mov
dec
shll
divl
stc
stc
icebp
andl
cltd
jbe
jg
les
adc
dec
ljmp
inc
stos
ss
test
pop
loopne
lods
cwtl
or
repz
cli
ljmp
cmpsb
sub
cs
mov
outsb
jecxz
pop
xor
enter
incl
faddp
mov
jmp
jg
movsb
test
xchg
scas
in
vmread
incl
add
test
sbb
repnz
in
or
je
call
jno,pt
inc
sarb
out
lret
xor
outsl
imul
push
sbb
ret
push
sbb
sti
fisttps
xor
popa
mov
xor
arpl
decl
adc
push
repz
jmp
mov
into
ljmp
and
decl
mov
pop
push
int
push
mov
or
lcall
stos
insl
add
ljmp
add
mov
imul
lcall
sbb
jnp
dec
adc
sub
loopne
xchg
lret
dec
es
sbb
pop
std
sahf
loopne
sti
call
mov
roll
xchg
push
add
das
pop
stos
call
loopne
pop
xchg
dec
pop
mov
add
stos
imul
iret
ret
gs
decl
mov
into
scas
or
ljmp
or
mov
add
dec
inc
push
sub
shll
pop
adc
and
mov
push
cmc
and
es
aas
repz
mov
xchg
and
pop
iret
rcl
inc
fisttps
add
sbb
adc
jle
out
rcrb
loopne
sbb
pop
pop
cli
push
dec
cmpsl
test
out
mov
fwait
jmp
cs
in
imul
jnp
mov
mov
sub
insb
das
mov
jp
incl
je
and
mov
jb
jp
popa
inc
rcrb
aaa
adc
add
mov
and
cwtl
adc
call
adc
adc
dec
jmp
arpl
rorb
iret
outsl
ja
xchg
pusha
cmp
pushl
rorb
jp
xchg
movsb
mov
outsb
jge
sub
sbb
sbb
ja
fiaddl
incl
xchg
sbb
cmp
mov
outsb
shrl
jne
mov
es
jmp
xchg
mov
inc
loope
push
jle
int
inc
popa
testl
mov
popa
ret
call
or
lods
push
fs
cmp
push
jb
inc
xor
push
jg
push
inc
movsb
ds
xor
push
xchg
xchg
call
and
lahf
int3
fiaddl
clc
mov
repz
add
jecxz
mov
cwtl
int
aam
xor
lea
fidivl
es
stos
outsb
enter
fsqrt
ret
in
push
insl
mov
jns
dec
mov
test
sbb
fidivrs
pop
call
hlt
cmp
orl
jbe
std
cltd
add
call
shld
in
or
fs
mov
xor
lods
cmp
js
jmp
pcmpeqd
subl
add
adc
add
lock
xor
sub
jg
insb
std
ficomps
fldcw
xor
xchg
or
call
loope
cwtl
jns
movsl
sbb
push
and
mov
mov
add
sub
out
pop
cs
insl
add
in
lcall
push
fcom
push
ficoml
or
or
fistl
push
or
push
movsl
adc
mov
dec
jnp
test
jb
fdivrs
imul
xor
ret
jne
sbb
ljmp
or
bound
lods
imul
jbe
ljmp
lret
cmp
test
jp
sub
mov
xchg
ss
pop
sub
call
imulb
adc
cli
es
push
dec
cld
test
scas
dec
push
inc
sar
mov
jl
jae
out
xor
sbb
adc
xor
lcall
xchg
out
in
scas
mov
in
es
xchg
add
lds
and
aas
imul
int
push
lods
sub
push
xchg
aaa
inc
jno
out
repz
cmp
repz
ljmp
mov
int3
sarl
leave
in
mov
xor
add
scas
clc
incl
in
adc
fiaddl
movsb
pop
push
cmp
and
ja
mov
incl
dec
xor
stos
jno
jb
xchg
mov
call
ljmp
or
gs
jmp
pop
xchg
adc
lea
das
sarb
add
pushl
leave
mov
xor
out
popf
adcl
fidivrs
xchg
add
add
add
pop
popa
pusha
or
leave
sbb
jg
ds
sub
push
pop
fs
sub
lods
arpl
sbb
sub
outsb
mov
xor
and
std
lods
and
jbe
jge
xchg
dec
push
mov
repnz
jg
xor
mov
sbb
jg
add
mov
mov
jns
jmp
scas
testb
and
ja
add
fildll
inc
std
test
add
mov
and
jge
test
xchg
fdivl
jp
dec
pusha
loopne
mov
call
pop
dec
adc
inc
cmp
call
loop
sub
sub
std
das
xor
sub
test
sbb
call
test
xor
mov
out
adc
jo
sub
mov
insb
out
jg
insl
cld
js
fcmovb
ss
push
lret
lea
mov
or
int3
adc
stos
xor
test
pushl
jbe
inc
xor
sub
leave
sbb
adcl
dec
jmp
ljmp
cmpsl
mov
sub
fisubrs
iret
dec
in
leave
ds
push
mov
add
pop
loopne
ds
test
inc
jl
test
pop
mov
incl
mov
sti
mov
dec
xchg
add
jg
es
and
add
pop
lret
es
cmp
pushl
in
or
es
imul
stos
ljmp
popa
dec
ljmp
xchg
jecxz
mov
pop
mov
fstpl
cmp
mov
dec
jmp
lcall
call
or
into
loope
jbe
sbb
push
sub
sbb
mov
push
popa
or
call
add
jae
ja
sub
jg
sub
daa
xor
mov
mov
cmp
dec
pushf
insl
dec
ficompl
inc
loopne
xchg
xor
mov
mov
ret
sub
mov
fs
hlt
push
xlat
cs
and
leave
xchg
mov
icebp
push
scas
push
and
pusha
incb
xchg
sti
push
std
lcall
fwait
stos
xchg
push
xchg
add
mov
ret
jae
out
sahf
pop
jbe
call
dec
fsubrs
mov
es
das
xor
jmp
movsl
daa
jmp
pushl
shrb
scas
jns
aad
repnz
icebp
jl
lods
mov
mov
addr16
lret
or
lock
inc
aad
fdivl
mov
in
in
in
inc
notb
aas
icebp
push
scas
adc
or
out
js
movsb
fists
lcall
cmp
pop
fistpl
lock
test
mov
inc
in
xor
or
mov
xor
cmp
rcll
iret
cmp
js
xchg
aas
push
lcall
in
fstpt
jg
js
xor
sarl
mov
scas
rcrb
xor
ljmp
rolb
push
sub
add
sbb
sub
or
mov
loopne
jae
cmp
push
xchg
sbb
add
call
dec
shlb
out
into
mov
inc
inc
fwait
inc
adc
jnp
mov
ret
pop
cmc
xchg
jns
rorl
mov
test
push
mov
jp
aam
cmpxchg
fwait
inc
xchg
in
push
sbb
stos
out
inc
hlt
push
lcall
movsl
mov
mov
test
fdiv
enter
add
push
push
sub
pushl
mov
mov
enter
dec
mov
jne
jp
sahf
loopne
cltd
pop
scas
cli
call
and
sahf
into
xchg
aas
out
jnp
fdivs
aad
popf
into
clc
lcall
fsts
or
sbb
sbb
ret
aad
inc
mov
ljmp
push
hlt
push
es
mov
dec
push
iret
mov
xchg
adcb
call
std
mov
inc
lods
lods
ljmp
outsb
pop
lcall
imul
in
adc
inc
fmuls
outsl
je
outsb
enter
fnsave
mov
lret
jmp
pop
out
das
sti
sbb
xchg
repz
aam
int
test
push
fs
popa
jb
ja
cs
sbb
add
movl
xor
lret
push
jg
outsb
mov
jge
mov
outsl
xor
nop
fildl
scas
lret
xchg
pushl
push
pop
cli
ret
mov
dec
xchg
mov
outsb
xchg
pop
inc
jb
jno
js
lcall
xor
mov
loope
out
ljmp
xchg
sub
jecxz
adc
repnz
incl
data16
stos
out
cmc
mov
mov
out
enter
dec
in
ja
loop
pushl
mov
aam
cli
test
divb
xor
push
fsubl
add
sub
testb
roll
stos
xlat
inc
in
or
call
subl
arpl
ret
jg
je
jl
jns
xor
jge
fdivs
insl
mov
ljmp
clc
add
cmp
rolb
dec
sbb
leave
rcrb
mov
ljmp
push
cmp
repnz
icebp
outsb
movsl
xchg
lcall
inc
mov
mov
jge
push
dec
mov
inc
mov
mov
adc
mov
ret
daa
out
mov
outsl
mov
ss
dec
dec
icebp
nop
add
inc
aas
adc
fsubs
pop
sub
call
aam
inc
jne
fidivs
cmpsb
int3
cmpsl
rcr
mov
out
and
sti
hlt
pushl
add
jle
ja
es
ret
stos
jbe
dec
and
jbe
xchg
or
xchg
jecxz
jae
and
xor
xor
xor
mov
cmp
cmc
jge
cmc
xorb
out
lret
cli
adc
in
fwait
pop
add
push
adc
in
sbb
and
call
cmpsb
mov
jle
test
lahf
in
xor
movsl
loopne
pusha
jle
lcall
adc
out
xor
mov
pop
cli
cwtl
sbb
mov
mov
inc
dec
not
scas
arpl
inc
jmp
bound
cs
pop
xor
loope
lret
xchg
xor
cli
rorl
pop
imul
cmp
stos
mov
cmpsl
hlt
xlat
mov
push
push
adc
rclb
dec
push
cmovno
lcall
loope
jne
sub
scas
lock
push
add
aam
inc
mov
mov
cmp
dec
clc
adc
call
mov
and
xchg
mov
mov
mov
mov
call
imul
dec
loope
lcall
data16
add
adc
incl
xchg
mov
in
push
jo
mov
add
pop
sub
sbb
call
in
jp
mov
mov
out
dec
or
call
add
incl
aam
inc
test
lods
leave
xchg
push
ljmp
call
jae
ret
cmpsb
add
sbb
idivl
inc
fisttpll
jp
call
add
int3
filds
aad
mov
and
imul
mov
pop
in
mov
call
stc
cmp
push
mov
aas
scas
pop
mov
pop
scas
mov
imulb
jmp
aas
movsb
cmpsb
fwait
or
fldl
loopne
lods
lods
push
xchg
xchg
js
shll
adc
in
inc
pop
and
mov
pop
sarb
xor
dec
int3
ja
pop
test
mov
mov
js
xchg
push
or
cli
aaa
xchg
pop
repnz
call
jae
out
push
xchg
cmp
mov
pop
sbb
push
push
xlat
sub
aas
loopne
cmc
jmp
enter
je
pop
scas
or
add
test
mov
mov
cmpsb
xor
cmp
mov
je
adc
aad
orb
ljmp
adc
pop
mov
xchg
push
xchg
cmp
scas
fsubrl
hlt
call
rep
stos
or
js
lock
pop
mov
fmul
cmp
xchg
mov
andps
mov
push
add
daa
cmc
outsl
subb
loopne
jl
mov
rcl
idiv
pushl
or
cmp
fidivl
cltd
jmp
int
mov
aas
xchg
ljmp
or
cmp
push
leave
inc
push
mov
mov
mov
fs
negl
jmp
aas
stos
pop
pop
filds
mov
lcall
test
inc
ljmp
das
shrb
add
adc
sbbl
stos
mov
jecxz
lcall
ficompl
pop
aam
ja
sahf
aaa
cmp
pop
es
inc
daa
push
jne
mov
popf
or
sbb
add
inc
mov
inc
fisubs
sti
fmull
iret
lcall
xlat
ja
div
jo
pop
or
sub
mov
add
mov
sbb
sti
sarl
call
es
fists
sti
jns
cli
add
sub
push
jnp
add
enter
cltd
sub
lock
cld
in
out
cmp
jbe
fstps
sbb
sar
fisttps
stc
cmp
xlat
leave
clc
mov
lret
into
mov
movsl
mov
ret
inc
cmpsl
decl
push
out
fisttpl
movl
nop
es
movb
push
push
sahf
sub
scas
mov
call
sbb
cwtl
mov
into
pop
and
lcall
mov
jo
lcall
popf
or
mov
outsb
ljmp
jno
xchg
shll
push
repz
xor
andb
or
cld
in
push
in
pop
scas
cmp
ret
sub
push
xor
sbb
lock
inc
xchg
mov
lcall
ljmp
cmp
in
insb
lea
enter
lcall
jle
and
inc
int
cmpb
sbb
push
fstps
mov
mov
sbb
imul
pop
sbb
je
aas
mov
and
pushl
or
inc
loop
add
cmpsl
and
inc
shrl
es
or
add
xlat
popa
les
push
fmuls
mov
dec
in
lds
cmpsb
dec
xchg
in
rol
xchg
pop
sbb
je
add
adcb
decl
pop
test
iret
jg
imul
push
mov
rorb
int
mov
decl
sbb
jo
xchg
inc
fiadds
lock
push
nop
inc
or
push
lea
hlt
and
into
and
jmp
lods
loop
mov
fs
sbb
pop
mov
insb
inc
mov
cli
call
sahf
ss
xor
lds
lcall
push
xor
decl
push
aad
mov
sbb
sbb
insl
add
aas
fs
rorb
inc
jne
jb
pandn
jnp
pop
in
imul
arpl
addb
mov
jmp
ja
pop
ds
or
aas
ja
cli
jmp
push
gs
push
loop
xor
push
mov
call
enter
mov
push
js
stos
lret
fucomip
aaa
ljmp
push
and
or
bswap
test
scas
outsl
jnp
mov
cld
incl
xchg
adc
pop
imul
dec
jno
int
es
jge
sub
fisubrs
mov
dec
shlb
pop
adc
addr16
clc
sbb
decl
add
jmp
mov
push
inc
out
sbb
leave
mov
movsl
rolb
sbb
mov
stos
pusha
mov
xorb
or
sbb
nop
dec
orl
mov
cmp
inc
dec
mov
lret
dec
aas
out
xchg
adc
fdivrp
call
dec
idivl
inc
stc
es
or
rcrb
stos
arpl
decl
inc
int
sbb
stc
daa
cli
je
mov
pop
adc
cmp
mov
adc
fdivrl
dec
xchg
and
lcall
mov
sub
jmp
ret
and
push
or
fwait
aad
lcall
mov
fcmovnbe
dec
xchg
outsl
loop
and
cmp
lcall
inc
xlat
inc
inc
mov
cmc
cmp
jbe
cltd
push
xchg
clc
data16
sub
pop
das
movntq
out
jmp
xor
mov
sar
out
xlat
fidivrl
sub
dec
dec
mov
add
inc
lret
mov
mov
mov
pop
pushl
cli
fidivl
push
addb
loopne
sub
std
xor
pop
out
xor
jg
enter
addr16
outsl
adc
xchg
rcrl
lcall
add
sbb
addr16
sub
lea
cmp
faddl
movsb
mov
inc
cmc
int
cmpsb
in
aaa
cmp
dec
and
xor
movsl
mov
into
mov
call
outsb
das
push
ss
cmc
ret
out
in
xchg
adc
mov
out
loope
or
cmp
imul
outsl
jo
mov
xor
mov
inc
dec
mov
call
mov
xor
ficompl
mov
push
sbbl
inc
cld
int3
ljmp
mov
test
adc
push
add
popa
push
es
or
pop
and
and
in
jl
pop
call
mov
mov
aam
sbb
dec
push
push
lcall
pop
push
sub
sbb
and
sbb
xchg
je
xor
loopne
stc
fldt
call
or
negb
and
jp
repz
negl
fucomi
test
cli
inc
in
enter
push
xchg
jle
jae
add
loopne
jo
test
dec
inc
pushl
cld
pushl
jmp
cmp
push
leave
aad
cmp
dec
push
adc
push
pop
je
pop
cmc
pop
clc
xchg
pop
inc
scas
mov
mov
fwait
lods
arpl
xor
sub
imul
enter
lcall
scas
pop
inc
and
xor
inc
sub
inc
push
mov
xchg
jle
jns
pusha
mov
cmp
lret
pushl
mov
mov
jle
bound
cmp
inc
insl
mov
lods
mov
sbb
ljmp
ret
lods
push
cld
loop
mov
jp
cli
aam
lss
xor
loopne
pushl
pop
cltd
adcb
lods
negb
dec
aas
insl
dec
mov
mov
mov
pushl
sbb
pop
in
and
jge
or
ss
cltd
inc
or
sbb
mov
cld
pop
std
into
push
fcomip
jg
jl
lret
cmp
arpl
jg
sarb
aad
pop
push
xchg
dec
pop
aam
fimull
cmp
jns
mov
in
icebp
mov
mov
pop
push
jae
sbb
jg
ss
mov
mov
cmpsl
lods
jns
hlt
ss
movsl
sbb
lcall
cwtl
clc
sub
imul
data16
push
std
xchg
mov
pop
insl
iret
mov
loop
or
jg
fdivrl
mov
fwait
sub
lret
mov
cltd
sbb
and
ficomps
add
mov
adcl
lret
filds
cmp
mov
into
lcall
call
mov
mov
dec
cmpsb
cmp
into
mov
incl
jae
int
xchg
int
lahf
jmpw
cmp
dec
lds
xchg
stos
jne
inc
popf
outsl
push
xlat
add
pushl
scas
push
ljmp
lcall
jecxz
adc
stos
jecxz
push
stc
mov
jmp
sub
enter
sti
fucomi
push
mov
push
add
gs
xor
std
cwtl
pop
inc
push
test
jnp
test
hlt
sub
sbb
jnp
add
lret
pop
mov
mul
sbb
dec
jmp
sahf
pushl
or
in
mov
popf
mov
dec
add
xchg
pop
xchg
mov
push
sbb
in
lods
and
or
js
inc
mov
scas
test
aas
pop
leave
jp
fldl
pushf
mov
push
lods
add
decl
add
pop
xchg
inc
jo
les
mov
imul
ljmp
leave
dec
std
jae
push
xor
xchg
xchg
lahf
adcl
out
sub
outsl
cmp
mov
incl
cmp
xchg
cwtl
pop
jae
clc
cld
xor
cltd
pop
inc
dec
mov
pop
imul
das
mov
and
movb
test
hlt
add
jg
push
xorl
mov
mov
js
xchg
adc
fidivrl
xchg
push
fadds
clc
imul
lret
testl
mov
xchg
push
push
add
scas
imul
jmp
divl
and
popfw
and
xchg
mov
ljmp
cmp
sub
mov
and
addl
xchg
xor
shlb
rcll
test
gs
in
fistps
cmp
and
xchg
fcomps
lock
fdivrl
mov
xor
mov
test
gs
mov
fcoms
pop
and
jmp
and
jbe
dec
les
xchg
mov
push
inc
adcb
mulb
int
or
jecxz
sbb
add
cmp
dec
dec
mov
mov
fnstcw
lods
pop
mov
mov
adc
jmp
daa
adc
mov
push
cltd
int
mov
sbb
popf
cmpsl
repnz
pop
mov
mov
mov
jl
imul
imul
push
daa
jl
sbb
mov
pushf
sahf
std
push
cmp
sahf
cld
jl
lods
aaa
xchg
sub
mov
lcall
add
lcall
xor
aaa
inc
out
orl
shr
daa
pop
mov
ljmp
dec
outsl
inc
cmp
xor
lcall
jg
cmp
int
loop
jg
and
jns
or
ljmp
shll
sub
clc
jmp
cmpsl
xor
inc
pop
jecxz
call
inc
out
push
loope
int
pop
mov
cmp
jnp
in
mov
xchg
add
or
decl
je
xchg
loopne
xchg
push
mov
sti
mov
adc
test
inc
mov
imul
stc
aad
xorl
adc
add
inc
std
fwait
subb
and
subl
loop
bsr
xor
daa
mov
and
pop
repz
clc
inc
add
xor
popf
scas
popf
ficomps
inc
push
in
clc
iret
das
adcl
xchg
push
lahf
stos
jmp
outsl
sub
scas
and
jmp
pop
cmp
jl
aaa
xchg
add
out
incl
popf
paddd
jge
arpl
inc
dec
cmp
xchg
shrl
clc
cli
pop
push
incl
cmp
dec
push
out
sbb
mov
adc
mov
pop
sar
std
jecxz
inc
std
clc
mov
dec
nop
aas
mov
outsl
cmpsl
add
cmp
xorb
add
jl
fsubs
jmp
jge
push
xor
push
adc
inc
lahf
outsb
int3
pop
xor
xor
movsl
xchg
ja,pt
mov
das
test
ljmp
mov
mov
lcall
jae
xlat
popf
lods
mov
mov
mov
jmp
jns
dec
ljmp
push
movsl
fs
sub
jge
jg
scas
incl
psrlw
ja
arpl
and
fwait
mov
jne,pt
sti
sbb
fcoms
xor
mov
mov
mov
nop
push
lcall
mov
add
pop
sti
test
divl
dec
mov
cmp
add
sahf
cltd
inc
gs
clc
dec
jp
enter
xor
lret
cld
xor
cmpsl
mov
jmp
imul
jge
pop
lcall
in
rorb
pop
adc
faddp
clc
jecxz
ljmp
pushf
shlb
adc
ret
lds
inc
or
mov
call
loopne
push
pop
repnz
loope
jbe
pusha
mov
cwtl
mov
mov
clc
lcall
outsl
mov
cmpxchg
mov
pop
add
ljmp
add
ljmp
pop
icebp
push
mov
or
out
inc
push
jb
jg
pop
les
fcoms
cs
icebp
int3
rcrl
sbb
dec
xor
pop
movsl
movsb
scas
mov
popa
dec
pcmpeqb
push
xchg
aam
dec
mov
add
inc
adc
lods
stos
lcall
mov
jne
sahf
loopne
adc
push
pusha
pop
ss
cmc
rcrb
mov
into
lcall
fsub
cmp
addr16
add
push
sbb
sbb
mov
pop
std
inc
lea
out
cmp
adc
xor
mov
inc
inc
out
xchg
incl
jns
out
int
cmp
add
xchg
mov
jge
jmp
dec
mov
jle
sub
idivl
ss
ja
call
cld
fistpll
fcomip
jmp
sub
push
inc
arpl
lods
jo
mov
in
mov
loopne
scas
dec
ljmp
call
sub
jl
xor
mov
and
sti
sbb
fstpt
cmp
jle
jp
cmp
test
pop
adc
repz
lcall
mov
fldl
jno
mov
flds
mov
rorb
xor
test
decl
out
push
arpl
stos
sbb
xor
xor
sbbl
jp
sbb
inc
push
clc
ljmp
in
and
into
jp
insb
lcall
and
dec
loop
ljmp
out
sbb
push
mov
in
add
jae
dec
std
sbbb
jne
cmpsb
ljmp
lcall
femms
mov
pop
xlat
xchg
out
cwtl
data16
add
pop
adc
in
inc
aaa
cmpsb
inc
aam
xchg
cld
sar
or
mov
mov
inc
loop
int3
cwtl
or
mov
ds
jae
out
pop
out
mov
sub
push
test
fwait
dec
push
faddl
sub
repnz
pushl
push
divl
lcall
or
cltd
lret
enter
lcall
adc
pop
or
cwtl
sbb
jne
mov
inc
test
shrb
fsts
incl
aaa
ret
shl
fnstsw
sbb
dec
xchg
loopne
fnstsw
insl
dec
xor
out
clc
in
ret
or
sbb
ret
or
js
inc
cmpl
ja
aam
pop
js
fidivrl
mov
loopne
xor
std
rorb
push
cmp
mov
xor
cmp
cmp
sbb
or
aad
ds
adc
mov
mov
mov
fimuls
cmc
mov
sbb
sbb
mov
aas
lea
xor
pop
faddl
sbb
dec
ja
out
inc
shlb
sbb
ljmp
mov
mov
sub
xorl
not
xor
inc
push
sahf
cmp
lds
andb
dec
aad
cwtl
xorl
dec
pop
and
xchg
pop
shrb
icebp
lret
sub
cmp
scas
pop
fisubs
cs
clc
mov
lea
push
xchg
lods
adc
cli
sbb
jmp
jns
cmp
xchg
int3
ss
xchg
mov
and
faddl
inc
or
sahf
rorb
mov
sbb
out
iret
aaa
pop
sti
xor
jne
movsb
repnz
ljmp
sarl
push
sbb
mov
sbb
incl
lock
push
std
int
mov
jb,pn
jge
cltd
xor
call
fisubl
call
or
movb
leave
fstpl
push
pop
jb
aam
and
fidivs
dec
add
iret
mov
xchg
xchg
cld
adc
mov
stos
inc
sub
iret
mov
pop
insl
push
das
cmpsl
adcl
fs
decl
jb
inc
flds
daa
sti
outsb
cltd
pop
and
into
aam
sbb
ret
adc
jmp
sahf
jp
stc
into
push
sub
pushf
out
repnz
psrad
jg
inc
mov
sbb
int3
pop
daa
sbbl
sbb
mov
ljmp
cwtl
mov
sbb
and
andb
pop
pop
adc
jno
gs
jbe
xchg
or
dec
xor
jg
fimull
and
pop
push
mov
dec
xchg
jb
sarb
shlb
adc
cwtl
imul
and
mov
inc
sbb
mov
inc
ljmp
pop
or
sbb
mov
or
push
stos
in
xor
ja
hlt
out
push
mov
lods
mov
or
sbb
jns
jge
fmul
xor
xor
mov
stc
arpl
cmpsb
push
arpl
jp
mov
push
or
stc
add
xor
add
enter
pushf
cmpsb
and
add
insl
mov
dec
mov
cmc
mov
js
mov
es
jge
iret
lret
push
pop
sbb
std
outsl
xchg
push
jnp
cwtl
pop
pushf
sbb
decl
cmp
int3
outsb
dec
mov
lcall
pop
loope
mov
inc
push
call
jg
xchg
push
mov
mov
in
lahf
aas
xor
xchg
movsb
pushf
sbbl
stos
loopne
sbb
add
imul
or
lea
notb
std
call
dec
xor
pop
aaa
dec
sbb
add
jp
hlt
in
ljmp
pop
sub
out
and
andl
cmp
aas
xor
addr16
sbb
pop
je
jbe
inc
jbe
dec
dec
pop
sbb
pop
pop
adc
fs
addb
xchg
pop
dec
ror
mov
dec
adc
ljmp
ret
leave
int3
fildl
pop
jp
mov
mov
add
mov
sub
or
pushl
cld
fdiv
jno
outsb
inc
out
adc
or
out
jo
testb
ret
aad
call
shlb
lcall
loop
push
xor
ss
int
jg
xchg
inc
push
pop
xlat
jg
pushl
ret
cmpsb
and
jb
add
mov
outsb
rol
pushf
stos
mov
loope
js
cmp
repz
mov
add
sahf
dec
es
mov
stos
adc
add
xchg
pop
testb
pop
out
clc
push
arpl
jae
loopne
pushf
mov
mov
sarl
ja
lahf
xor
lcall
inc
loope
fnsave
pop
mov
bound
mov
and
hlt
cli
outsl
push
hlt
inc
xchg
and
test
aaa
mov
ljmp
outsl
and
call
mov
or
shlb
icebp
in
and
rcrl
imul
adc
fbstp
icebp
pop
sub
dec
aad
and
xchg
insl
pop
pop
xchg
xchg
sahf
incl
and
in
cmc
cmp
xor
lods
xor
push
jno
pop
int3
ljmp
dec
jns
ret
outsl
jge
push
test
push
ret
mov
es
les
cmp
sbb
sbb
lds
out
pop
rclb
dec
hlt
push
popf
pop
mov
dec
mov
mov
fadds
das
std
jmp
xor
daa
jp
inc
imul
ljmp
mov
das
sbb
lods
push
sti
inc
or
jo
xor
das
add
scas
cli
jmp
cmp
cmpsb
jne
xor
pop
aas
movsl
push
mov
sbbb
jmp
xlat
popa
and
mov
push
xorl
cmp
aaa
cmpsb
add
fs
xlat
inc
cmpsb
call
es
lods
lret
cld
inc
stos
push
mov
hlt
jl
stc
cmp
out
xchg
xlat
mov
test
add
call
ljmp
push
add
loop
or
mull
or
cmp
test
pushl
adc
lret
lds
mov
lock
int3
lcall
fcompl
mov
sub
sub
add
pop
enter
pop
pop
cmp
lret
pop
bnd
lcall
adcb
xor
mov
inc
negb
icebp
lcall
ror
inc
sbb
pop
dec
mov
je
jo
mov
lahf
das
mov
dec
lea
jmp
test
xor
push
mov
or
out
xlat
and
gs
lcall
jno
pop
mov
push
adc
adc
aas
lods
jmp
and
jmp
test
or
adc
sub
into
mov
mov
rcrb
decl
ror
incl
int3
xchg
and
jae
lret
cmpsl
mov
ud0
dec
pop
jb
push
push
bswap
push
push
and
jnp
xchg
sub
rcll
lds
clc
fdivr
pushl
inc
sbb
inc
adc
pslld
or
mov
inc
adc
jmp
cltd
dec
mov
call
std
lea
pushf
xor
xor
mov
dec
mov
lds
mov
enter
jbe
mov
xor
in
pop
stc
add
pop
std
out
jns
addr16
icebp
lods
xor
mov
out
sub
jge
jbe
xchg
jmp
push
loope
into
adc
cmp
ret
push
sahf
mov
push
or
decl
xor
lock
les
jecxz
adc
mov
adc
scas
jmp
xchg
jne
mov
in
mov
and
xchg
rol
mov
mov
insl
ljmp
dec
lock
fwait
icebp
lcall
sbb
jae
call
clc
fs
pop
in
call
lea
cmpsb
movsb
mov
or
daa
xchg
dec
push
cmp
push
test
out
xchg
std
incl
mov
or
lds
or
dec
fnstsw
cmp
shl
sbb
call
incl
loope
push
jne
fstp
imul
daa
gs
loop
jg
iret
jmp
adc
lock
add
stc
and
or
stos
pushf
aam
mov
notb
mov
xorl
test
jb
sbb
mov
and
inc
cld
fcomip
lret
or
or
inc
in
loope
inc
mov
sbb
call
mov
popa
mov
rcr
int
les
test
aaa
aaa
rolb
data16
mov
inc
pop
push
insl
jbe
push
mov
mov
mov
sbb
aad
or
cwtl
stc
fs
pop
sbb
adc
je
pushf
sbb
mov
lcall
cld
stc
lock
mov
pop
jp
mov
fmulp
cld
cmp
stc
jnp
and
ljmp
mov
aaa
pop
push
dec
cmp
fisubrs
jmp
test
test
lcall
mov
in
cmpsl
clc
inc
in
test
inc
inc
pop
xor
cmp
mov
lea
cli
or
rolb
inc
stos
in
pop
xchg
insl
xchg
sub
arpl
ss
sti
iret
or
sub
cli
dec
dec
aam
push
cwtl
push
inc
jne
sbb
jp
push
cmp
mov
cmp
mov
sbb
incl
imulb
sbbl
lret
test
jmp
jb
xor
incl
cmp
andl
dec
jne
sbb
sbb
jb
ret
insl
cs
fs
pushf
add
cmp
out
out
lods
daa
loope
incl
stos
bound
mov
ss
fstl
test
xor
push
mov
xchg
cwtl
and
mov
sub
subl
rol
cltd
adc
mov
dec
lods
fwait
sti
add
or
leave
pop
pop
inc
jne
cwtl
push
aaa
xchg
std
mov
incl
inc
dec
push
sub
adc
rcll
pop
orb
push
jp
mov
pushf
sbb
jo
decl
je
xlat
shlb
sbb
add
mov
fdivrl
push
out
push
mov
jmp
das
mov
test
pop
or
push
xchg
js
pop
sahf
movsb
and
stos
shlb
jg
outsl
loopne
out
pop
cmp
fbstp
enter
test
add
mov
lcall
jb
mov
pop
mov
jge
cmp
xchg
inc
cli
insb
lds
cmp
fsubs
scas
inc
imul
test
cli
daa
or
repnz
push
cmc
in
ret
loop
lcall
loopne
inc
dec
shl
sub
popf
xchg
xchg
out
int3
cs
fs
andl
jmp
cmc
test
push
or
dec
loop
shl
mov
sbb
pusha
sti
movsb
xor
outsb
add
fcmovne
xchg
cmpsb
mov
imul
pop
and
call
je
add
rcl
gs
inc
jmp
push
cmc
mov
jecxz
into
dec
lcall
adc
sbbb
push
scas
xchg
arpl
ss
cmp
les
dec
std
mov
lcall
imul
pop
scas
repnz
cmp
in
xor
sub
push
call
dec
cmp
push
les
dec
pop
dec
loop
loop
dec
rcrb
xchg
lret
aad
or
icebp
push
xlat
ljmp
cli
dec
jae
pop
jle
dec
and
inc
leave
xchg
sub
add
or
decl
jns
cwtl
xchg
shl
mov
call
mov
lds
add
clc
jmp
mov
jae
adc
fsubs
fwait
call
mov
lods
add
xorl
outsb
imul
pop
in
shl
push
out
ficoms
lret
jmp
adc
test
mov
stos
dec
cli
les
addr16
and
clc
jmp
in
sbb
or
and
pop
in
dec
outsl
call
xor
ja
inc
dec
or
pushl
lcall
sub
mov
sahf
xor
xchg
call
lds
mov
jl
cmpsl
call
xor
pushl
pop
fnsave
fcomip
call
in
das
add
int
dec
mov
sar
sub
fidivs
ljmp
and
mov
mov
or
push
ret
sub
lods
jno
repnz
cmp
sub
leave
xor
xor
ds
stc
mov
mov
cmp
lcall
insl
mov
cmpb
inc
xchg
and
xchg
loop
xor
incl
pop
lret
mov
mov
cmp
sarl
mov
ret
stos
out
add
call
rcrl
inc
mulb
xchg
inc
push
mov
outsl
push
popf
push
jns
repnz
push
mov
ljmp
pushf
push
je
icebp
test
lods
sub
and
jg
fstp
popa
cmp
adc
ret
pushl
rcll
xchg
cmp
mov
lock
nop
or
pop
pop
incl
mov
push
jo
into
das
pushf
dec
dec
mov
xchg
scas
insl
shrl
aas
out
bound
push
jae
sbb
dec
clc
cltd
fwait
inc
xor
fbstp
cmp
pushl
push
xchg
mov
or
mov
mov
sti
pop
mov
lahf
jle,pn
sbb
mov
inc
add
sub
mov
push
test
es
push
xchg
sti
push
xchg
mov
daa
arpl
xor
inc
ss
outsb
xor
jg
lock
mov
adc
mov
cmc
mov
hlt
lods
mov
mov
jg
test
imul
or
push
jg
lret
xchg
stos
mov
lfs
pop
mov
iret
nop
add
and
mov
jmp
pop
outsl
fcmovne
mov
inc
out
shll
mov
jge
rol
mov
xorb
stos
jnp
js
pop
jmp
mov
pop
je
mov
jge
cld
add
rorl
push
ja
sbb
cmp
dec
call
sbb
and
minps
jnp
mov
adc
add
xor
mov
jp
js
xor
pop
fadd
lcall
or
aam
sub
jne
or
decl
pop
int
lods
pop
sub
dec
lret
stos
pop
pop
das
jo
adc
cmc
lock
lock
sbb
mov
cmc
test
mov
and
xchg
pop
ja
clc
mov
incl
das
cmpsl
xor
jb
fsubl
pop
clc
fmull
push
lods
nop
mov
imul
sar
lods
cmp
mov
loope
mov
test
mov
jg
movups
stc
jmp
jl
sub
xchg
jo
es
dec
lods
xor
pop
pop
repnz
cltd
inc
jp
sbb
fs
cli
ja
xchg
jecxz
mov
push
js
incl
data16
adc
aaa
std
xor
mov
fwait
lret
cmp
roll
dec
lods
push
adc
mov
out
sbb
adc
clc
nop
inc
outsb
or
fidivs
ljmp
addr16
dec
inc
loope
notl
xlat
test
nop
movsl
push
mov
jg
pop
xor
inc
inc
mov
insl
mov
sub
inc
outsb
dec
fs
pop
jg
and
push
push
aas
std
nop
bound
outsl
rcll
mov
cmp
mov
lcall
aad
stos
stos
insl
imul
and
pushf
pop
mov
pop
loopne
lcall
rorl
test
inc
iret
test
jne
pushl
bound
jg
insl
xor
xlat
testb
out
mov
in
sbb
aam
and
jmp
aad
in
adc
mov
or
jns
add
lcall
inc
pusha
imulb
inc
pop
dec
add
rclb
call
enter
in
push
jp
nop
in
push
clc
lods
inc
cmp
adcl
incl
mov
enter
pop
sbb
aas
cs
mov
andl
stos
fidivs
adc
andb
fisttps
insb
testb
aaa
loopne
inc
push
jmp
cmp
mov
mov
xchg
jae
add
sbb
mov
adc
popa
test
pushl
shr
cli
push
jo
xchg
ljmp
mov
or
xlat
popf
mov
mov
incl
fcoml
roll
jg
pop
add
adc
sti
xchg
decb
jne
lcall
mov
inc
jne
xchg
stc
scas
and
sbb
xor
pop
in
arpl
sbb
pop
add
xchg
mov
aad
or
incl
cmc
lret
inc
push
clc
lods
inc
sub
sub
mov
add
xor
cli
das
clc
ljmp
or
mov
ret
shll
dec
int3
sarl
out
jo
sub
mov
inc
xchg
sub
aas
cmc
xchg
mov
sub
pop
out
inc
addb
pop
test
test
neg
pop
xchg
cmp
xchg
add
mov
pushl
in
insl
stc
cwtl
ljmp
mov
je
std
lret
fwait
mov
inc
shlb
sub
inc
out
insl
jecxz
jle
loop
mov
xchg
lcall
jle
mov
ficoms
fs
or
xchg
inc
sub
pop
jle
dec
loopne
repz
sar
insb
repz
mov
rorl
mov
shlb
jecxz
push
fsubl
push
cmp
aaa
imulb
loopne
cmp
sahf
sbb
jl
insl
cld
incl
and
daa
fldcw
test
jg
jl
pusha
loop
inc
rolb
inc
cs
or
gs
xchg
inc
jb
sbb
mov
pop
xlat
and
cmp
idivb
xor
lods
jle
ss
xor
pusha
js
ds
pop
or
xorb
dec
icebp
out
fs
fsub
xchg
dec
adc
adcb
sub
dec
arpl
sbb
hlt
lcall
cmp
push
sbb
f2xm1
xchg
faddl
shll
lock
xchg
dec
cmp
xchg
std
in
sbb
push
add
icebp
xchg
push
sbb
and
inc
mov
je
subl
sti
ja
mov
fisubl
jle
push
inc
pop
xchg
cmpsb
mov
fcoms
mov
shlb
fdivp
xchg
cld
dec
and
jle
out
cli
cmp
sbb
inc
mov
call
out
dec
repz
mov
mov
nop
inc
cmp
fistpll
mov
dec
inc
popf
cmc
ljmp
mov
shll
cwtl
rcrl
loopne
jp
mov
fwait
xor
inc
push
or
jmp
aad
mov
cmpl
jnp
insb
or
and
mov
pop
fsub
out
ss
clc
mov
stc
cmp
call
xchg
addr16
and
xchg
cmpsb
mov
push
mov
mov
xchg
stos
mov
pop
pop
repz
xchg
aas
scas
push
dec
jnp
test
push
mov
fnstenv
xchg
pop
leave
cmp
stos
outsl
cmp
imul
pop
pop
jo
ficoms
pushl
rcl
movsl
sbb
sbb
push
push
shlb
push
test
or
repnz
decl
push
enter
push
cltd
push
mov
cld
adc
pop
lock
in
addr16
sbb
inc
js
mov
dec
jmp
pop
cld
jmp
movsl
jp
pop
test
out
mov
gs
imul
shl
in
or
lcall
lahf
or
or
cli
in
imul
cmp
sbb
lahf
out
aaa
rol
jnp
cmpsb
cwtl
call
test
test
aaa
pop
mov
mov
clc
call
testb
push
out
and
adc
shl
mov
les
mov
ljmp
int3
sar
xchg
adc
fldl2t
stos
sub
xchg
sbb
shrl
into
xchg
jne
pushl
loope
xchg
rcr
adc
and
mov
daa
mov
and
sbbl
ljmp
jmp
lods
gs
je
sbb
mov
es
add
mov
stc
push
leave
adc
cmp
imul
xor
mov
push
mov
inc
iret
cli
hlt
out
test
cs
sub
call
cli
inc
movsl
mov
adc
test
and
add
pop
cld
in
xlat
xor
add
mov
or
pop
sbbl
daa
xorl
stos
push
lahf
sub
lahf
iret
jne
add
adc
aam
mov
stc
adc
jg
ss
mov
ljmp
leave
dec
pop
cmp
fsubs
in
movsl
lock
popa
add
decl
jbe
jo
and
add
pop
xchg
repnz
insb
pop
or
pop
ret
dec
or
dec
or
sbb
rclb
dec
push
addr16
add
mov
push
mov
lock
ljmp
inc
add
loopne
imul
sahf
inc
dec
sbb
int3
cmpsb
dec
xlat
ficoml
xor
pushl
inc
inc
shlb
rcr
dec
outsl
inc
ror
mov
pop
ds
pop
pop
mov
push
xchg
mov
jmp
pop
cmp
mov
mov
adc
shll
jg
mov
sub
mov
mov
xlat
lret
push
or
jmp
jg
sbb
fcomip
jmp
daa
jmp
cmp
cmp
cli
add
fcomip
decl
or
mov
hlt
scas
xchg
add
lods
mov
sarb
in
nop
add
mov
pushl
inc
mov
es
add
sub
jmp
and
lahf
test
sbb
addb
sub
add
cmpb
fwait
push
lcall
pop
sub
movsb
sub
ja
enterw
xchg
outsb
mov
sbbb
ja
inc
mov
ficompl
dec
imul
and
inc
mov
jmp
popa
inc
pshufw
xor
and
scas
ret
outsl
test
cmp
pop
cmp
mov
cmp
dec
sub
push
jge
push
push
jmp
aaa
xlat
dec
cwtl
dec
enter
cmp
decl
mov
sbb
xor
js
inc
mov
imul
stc
mov
or
call
js
pop
inc
testb
jns
sbb
push
mov
test
mov
aas
push
add
mov
loopne
sbb
stos
and
stos
sbbb
inc
std
mov
iretw
jmp
dec
cmpsb
jnp
mov
je
int
adc
sub
or
pushl
sti
dec
and
sti
jnp
adcb
dec
pop
cmp
test
and
call
xchg
stos
add
mov
mov
int3
jne
aaa
std
fldt
add
mov
lock
cltd
dec
add
jle
aas
lret
nop
jge
call
and
dec
pop
test
pop
dec
mov
imul
cmp
aaa
push
outsb
lds
data16
adc
xchg
stos
lcall
or
pop
sti
stc
cmpsb
and
push
jecxz
fwait
add
icebp
cmp
stos
jle
cmp
xor
paddb
mov
cmp
shll
lcall
cmpsb
mov
stc
push
pop
jne
testb
fisttpll
je
imul
cmp
mov
push
xchg
xchg
out
rorb
xor
arpl
and
pop
es
ret
call
std
dec
out
out
inc
sti
adc
and
sub
jg
lcall
xor
jle
testb
data16
sub
push
pop
dec
incl
jge
and
call
in
lcall
ljmp
std
lcall
sbb
xchg
adc
dec
lods
aas
ficoms
test
std
pop
gs
xchg
cmp
mov
jmp
testl
pusha
pop
and
add
sbb
lret
stos
aam
rorb
cld
insb
ja
mov
inc
scas
xor
es
loopne
aad
push
call
mov
cmp
mov
inc
fcomip
decl
pop
pop
xor
inc
roll
nop
add
push
jb
mov
lcall
cmp
adc
repnz
clc
je
fdivl
push
push
shl
sbb
stc
or
out
cli
call
dec
sti
mov
testl
orl
ljmp
lcall
mov
pop
rorl
sub
xchg
xcrypt-ctr
cmpsl
fistpll
out
inc
jo
test
and
insl
rolb
decl
pop
xchg
jo
nop
sbb
aam
daa
dec
movsb
in
mov
aad
mov
mov
ret
or
aaa
sbb
test
popf
inc
and
in
aaa
in
push
loop
pop
icebp
pushl
add
inc
push
mov
les
jae
test
roll
jecxz
push
aaa
sahf
push
daa
lcall
ja
aaa
pop
and
jnp
pushf
lahf
adc
mov
or
sub
enter
or
mov
test
test
nop
jbe
mov
jg
fbstp
mov
test
movsl
sbb
lods
dec
mov
and
jg
inc
scas
inc
stos
lret
fcmovb
insb
cltd
mov
jmp
xor
pop
std
in
adc
pop
in
fisubrs
arpl
inc
movsl
ss
push
imul
call
mov
push
test
and
je
lock
lret
in
inc
jne
sub
hlt
add
fcmovnb
sub
addb
fnstcw
je
nop
push
bound
int3
or
add
jmp
mov
das
xchg
jne
test
das
and
sbb
mov
enter
push
and
inc
jmp
push
sbb
repnz
ljmp
sub
cld
adc
adc
add
fildll
popf
lcall
xchg
cmp
xchg
or
and
inc
insb
sub
adc
shrb
in
es
out
cs
decl
mov
sub
mov
cwtl
call
out
movsl
push
pusha
ljmp
pop
mov
inc
shll
dec
mov
inc
lods
dec
sub
jb
sar
decl
push
mov
enter
mov
sub
mov
cltd
scas
pop
pop
insb
jg
sub
popf
test
xchg
je
outsb
aam
in
mov
adc
sti
cld
xchg
cld
mov
test
bswap
dec
leave
cmp
adc
pop
jb
ja
roll
mov
pop
push
leave
rolb
pop
dec
jbe
mov
stos
pop
xchg
movsb
fildl
int
dec
fnsave
ret
lcall
add
test
inc
popf
cmpb
ljmp
push
popa
rcll
xchg
dec
out
mov
inc
shll
adc
jmp
jmp
push
das
dec
imul
pop
scas
jo
add
int
jl
in
xor
icebp
mov
jmp
pushf
jns
nop
push
mov
insl
or
inc
aas
aaa
call
fdivl
xor
leave
pop
mov
decl
mov
jbe
fwait
ja
aas
ret
insl
push
ds
dec
lret
out
and
pop
cltd
arpl
call
test
fiadds
xchg
shlb
push
mov
jno
push
pop
or
xchg
in
decl
cmp
std
or
push
push
stos
sub
dec
or
pushl
mov
flds
sub
jp
sbb
push
dec
mov
sbb
loope
mov
cmp
add
fidivl
daa
push
pushl
fnstenv
add
fsubs
stos
push
movsl
es
pop
mov
cmp
lret
push
mov
add
jge
aaa
aaa
ret
mov
and
rorb
js
rcrl
jl
cld
sti
inc
incl
sbb
sbb
data16
ja
fs
mov
cld
jp
add
cmp
out
loopne
call
cld
push
testl
push
outsl
cmpsl
js
pop
push
and
mov
sub
call
adc
outsb
mov
xor
xchg
call
jg
jg
sub
call
dec
in
xor
and
lahf
fcomi
enter
cltd
pop
jo
or
add
outsb
push
js
sahf
pop
xchg
shr
call
mov
pop
negb
push
push
mov
inc
and
call
xchg
clc
ljmp
pop
fwait
iret
sub
adc
mov
cmp
mov
mov
jg
nop
lock
add
fs
outsl
icebp
pop
addr16
loop
in
add
ljmp
out
jl
idiv
push
inc
dec
clc
xor
and
daa
rcr
dec
jb
in
xchg
fimuls
lcall
mov
mov
cs
loop
test
jecxz
sub
andb
int
mov
fsubrs
xor
adcb
cmp
cmp
cmp
loope
jnp
testb
mov
mov
jg
inc
and
sub
je
inc
pusha
pop
hlt
in
clc
mov
lcall
sbb
gs
loopne
xlat
cmp
leave
in
mov
adc
movb
shl
fcomip
lcall
xor
jmp
mov
push
and
xchg
dec
icebp
mov
jg
push
mov
fdivl
lahf
imul
popa
push
in
mov
out
sbb
pushf
jb
sbb
jecxz
sbb
lock
div
mov
and
scas
mov
lret
add
cmpsb
add
jo
lcall
push
lea
test
cvttps2pi
mov
nop
add
rcl
cmp
ljmp
fistpll
mov
mov
mov
pextrw
lahf
adc
jecxz,pn
mov
jb
cmp
pop
xor
jne
int3
aas
push
inc
hlt
outsb
add
rorb
dec
inc
rcll
stos
outsl
and
jecxz
not
rorl
jbe
ss
push
pop
jle
inc
xor
lock
aaa
add
lcall
mov
xor
aad
pop
jne
push
xchg
into
mov
sahf
push
cmpsl
jecxz
pop
pop
incl
or
frstor
dec
fisubl
dec
sbb
push
mov
test
mov
ficomps
pop
push
inc
ret
lcall
ret
aam
add
sbb
pop
add
insb
into
ficompl
stos
cwtl
cmp
cmovne
repnz
ret
jmp
lea
nop
cmpsb
push
jns
jmp
xchg
int3
scas
lret
mov
ljmp
cli
jmp
jo
decl
dec
pop
xchg
or
mov
push
mov
mov
movsl
add
loopne
lahf
adc
das
incl
push
add
lret
loop
cmp
or
and
xchg
pop
test
repnz
jp
xor
clc
and
leave
fistps
je
fs
sub
and
jle
xor
jmp
inc
and
test
paddq
in
fs
cmp
out
sub
cmpsb
pop
icebp
call
fsts
pop
dec
insl
ret
jle
mov
cmp
and
test
mov
incl
add
clc
leave
pop
or
js
std
negl
xchg
and
mov
sub
pop
pop
sbb
xor
pop
stos
cmpsl
sub
add
cmp
incb
push
ret
xorl
fstl
cmpsl
mov
jnp
aas
cmp
lcall
jle
jp
mov
cmp
push
add
cmp
int
jb
sbb
or
ljmp
fnstenv
pop
out
or
and
jmp
pop
mov
dec
jns
inc
dec
arpl
hlt
ljmp
xor
dec
adc
and
aad
sub
push
mov
xor
cmpsl
lahf
sub
test
scas
dec
fcoml
inc
mov
add
idivb
and
push
ret
incb
insl
into
jmp
mov
out
inc
pop
inc
loopne
xor
pop
ret
push
cmpsb
stos
mov
pop
mov
cmc
std
xchg
incl
rcrb
stos
sarb
add
inc
mov
sbb
lods
or
or
leave
jmp
loope
mov
dec
dec
push
int
jg
enter
dec
or
adc
pop
cmc
das
mov
lods
pop
add
fimuls
jmp
cmp
mov
or
les
out
inc
into
xchg
add
mov
pop
fwait
sub
or
nop
cmp
push
or
push
hlt
icebp
or
fildl
fwait
push
nop
adc
imul
insb
jno
enter
repz
sub
mov
incl
stc
push
loope
call
adc
sub
and
outsb
sbb
divb
ret
insb
inc
ljmp
mov
stos
inc
rolb
stc
jnp
or
lods
inc
daa
out
ljmp
roll
incl
sub
outsb
fldl
es
jns
mov
push
shlb
and
call
aad
hlt
jmp
sbb
push
std
pop
gs
shr
mov
push
dec
push
rcll
idivl
jns
call
sbbl
lods
int
loope
loop
out
aaa
lods
mov
fwait
xchg
scas
out
xchg
fldl
decl
mov
enter
repnz
push
cmpsl
mov
leave
lock
inc
mov
cli
movsl
mov
jmp
sub
inc
jo
push
aas
mov
xor
add
mov
lahf
xor
xchg
repz
fcmovnbe
cli
mov
ftst
rorb
hlt
fcomi
enter
pop
cmpsl
imul
ss
jo
aad
sub
lcall
push
enter
fwait
mov
sub
movsb
bound
test
sub
incb
call
and
scas
ret
fiaddl
inc
xchg
iret
pop
mov
push
inc
and
mov
push
mov
jge
stc
pusha
jge
mov
punpckldq
int3
xor
cmp
cwtl
adc
ret
pop
shr
pop
repnz
call
push
movsb
push
sub
fmull
cmp
push
bound
add
movsl
jnp
pop
arpl
xchg
or
xchg
xlat
pushl
lods
sarl
xchg
ret
stos
inc
ret
add
fwait
add
sub
dec
adc
aaa
cld
call
add
loope
mulb
or
bound
push
xchg
call
jmp
sti
hlt
push
popf
fisttpll
cltd
add
or
in
dec
add
inc
or
cli
mov
aam
mov
stos
dec
cs
sub
xchg
stc
jb
jo
ljmp
and
add
lcall
sti
outsb
repnz
xor
pop
ret
fsubrs
repnz
scas
movb
dec
and
pushl
mov
xchg
rep
repz
js
or
sahf
rcrb
ljmp
clc
mov
or
aam
jbe
fs
pop
sub
dec
or
ret
call
jle
jne
mov
pop
and
cmp
ljmp
jge
sahf
imul
dec
daa
fdivr
movsl
jae
jne
es
push
pushf
and
cmc
pushl
pop
inc
adc
icebp
sbb
xor
mov
cmp
out
je
push
ss
cmp
daa
loopne
call
sbb
pop
leave
daa
push
aam
lret
cmp
in
rcrl
adc
xchg
pop
push
mov
or
fldenv
adc
pusha
inc
mov
adc
jnp
arpl
mov
ja
cmpsl
std
xchg
loopne
push
fbld
cwtl
sbb
lods
push
mov
decl
mov
rolb
int
jns
sbb
xor
lret
push
loop
aad
pop
cmpsl
push
ljmp
pusha
std
add
mov
dec
sahf
xchg
lcall
call
mov
call
push
popa
mov
icebp
ja
lea
cmc
popa
test
notl
mov
ljmp
loop
mov
dec
push
insl
addr16
push
arpl
cltd
fisttpll
loop
cmp
incl
lods
rorl
pop
jle
adc
pop
mov
jnp
jno
dec
pop
pop
inc
dec
jge
cli
arpl
push
jg
cmp
cmp
int
js
enter
imul
mov
fs
dec
mov
aam
mov
shll
adcb
popf
sbb
enter
jecxz
pushl
gs
mov
jns
mov
icebp
dec
stc
cmp
adc
and
cwtl
icebp
pop
jbe
mov
cmpsl
dec
pop
mov
flds
incl
jp
insl
add
push
sahf
out
adc
mov
pop
into
out
les
inc
and
jmp
pop
xchg
out
add
mov
dec
dec
fwait
pusha
movsl
pop
add
aas
dec
cmp
loope
lcall
xchg
test
test
aad
rolb
test
dec
or
jg
push
cli
ret
mov
mov
xchg
cli
xor
lods
cmp
test
jg
jmp
add
jle
cwtl
dec
inc
outsl
sti
popf
add
aam
mulb
aaa
mov
pushl
cs
jg
cmp
jmp
push
xor
repnz
pop
loop
leave
cltd
lods
xchg
xor
or
jmp
add
fcmovnu
ror
and
sub
fcoml
stos
orb
ja
mov
or
fsts
push
loop
clc
jl
and
mov
scas
int
addr16
push
movsb
int
fstpt
jp
in
mov
jg
ficoms
outsl
inc
fs
movsl
sub
out
call
dec
shlb
dec
xchg
jg
adc
sarb
push
mov
adc
cli
cmp
call
jmp
call
repz
inc
aaa
loop
xor
adc
add
adc
adc
imul
imul
ja
aas
sbb
into
fs
pushl
sub
icebp
stos
in
test
cmpb
mov
fsubrl
rcrl
rcrl
jo
adc
pop
out
data16
call
inc
in
xor
cmc
lret
and
and
add
xchg
shl
inc
scas
fwait
cwtl
mov
jo
stos
sub
pusha
pop
loopne
jge
push
pop
stc
xchg
aaa
mov
jmp
fnstsw
xorb
adc
and
sub
pop
dec
jae
jmp
push
outsl
enter
mov
ret
or
xlat
push
lcall
in
push
push
mov
lds
outsb
shrd
mov
loope
ja
ljmp
gs
add
jns
adc
stos
ss
ss
psubusb
cld
cmp
cmp
mov
in
fadds
incl
adc
lods
jp
jp
add
jecxz
cmp
decl
push
mov
mov
jae
into
outsb
jp
pop
mov
sbb
cld
inc
sub
mov
in
mov
jle,pn
adc
popf
cmc
leave
arpl
lcall
lret
ret
push
push
shlb
roll
cmpsb
and
orl
xor
in
mov
pop
cli
jmp
ds
pusha
add
stos
scas
jg
fsubs
test
mov
pusha
shrb
mov
shl
mov
stos
fisubrl
mul
or
inc
or
pop
pop
ds
add
ljmp
push
mov
adcb
lock
dec
pop
push
ret
and
push
mov
xchg
jbe
push
rclb
sub
lret
out
push
push
out
addb
inc
cmp
jmp
ja
imul
jnp
fildll
jne
jo
imul
or
scas
fnstsw
ds
add
adc
out
dec
lea
mov
loop
sub
loopne
add
dec
or
mov
push
ret
sub
xor
inc
imul
adc
sbb
fwait
sarb
dec
gs
mov
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
addr16
jae
ret
gs
sbb
xorb
xchg
and
subl
aaa
cmp
cmp
subb
push
jnp
fs
movsl
dec
jne
add
xchg
pusha
js
arpl
inc
push
add
cmp
popa
dec
test
adc
push
sbb
mov
xchg
inc
test
in
push
imul
mov
inc
push
cmp
push
es
xchg
test
dec
adc
loope
out
adc
adc
dec
call
std
and
or
je
add
dec
daa
icebp
inc
jl
loopne
adc
leave
subl
outsb
imul
or
add
sub
fxch
adc
out
in
mov
outsb
fld1
sbb
jbe
pop
dec
inc
orl
outsl
adc
out
insb
or
or
sbb
popf
sbb
push
mov
outsl
mov
pop
ds
insb
jne
adcl
and
jne
xchg
mov
lock
dec
push
inc
sbb
xorb
push
fildl
and
inc
fwait
and
pushf
out
aas
test
jne
add
inc
rcrb
ret
outsl
nop
pop
pop
stos
sub
push
into
in
or
jns
xchg
cmp
adc
dec
loopne
cmpsl
push
push
push
xchg
insl
pop
xchg
dec
jne
mov
xor
fmul
xor
cmp
fsubrs
divl
popa
loopne
arpl
subl
packuswb
fidivl
insl
scas
ret
inc
dec
sbb
inc
pop
add
leave
add
mov
arpl
xchg
ja
lods
ret
dec
popa
hlt
adc
and
inc
xor
cmp
rcrb
orb
mov
inc
pop
popa
sub
and
adc
popw
adc
gs
pop
cmp
fs
cwtl
es
movb
jne
sub
dec
outsl
daa
icebp
sbb
sub
movl
enter
lret
hlt
addl
inc
unpcklps
or
pop
jo
adc
cli
shlb
lret
out
push
push
jecxz
xchg
lods
xor
aaa
mov
ja
mov
je
jg
insl
pop
cmp
mov
mov
and
loop
testl
jp
mov
push
movsl
addl
dec
pop
pop
push
sbbl
addr16
push
aam
or
popa
pop
mov
jns
int
add
dec
push
jne
jmp
push
enter
pop
pop
xlat
outsl
dec
and
jns
inc
je
push
inc
inc
xorb
sar
xchg
pusha
pop
insl
adc
sbb
inc
push
inc
cli
mov
ret
jno
call
adc
pop
push
ja
or
adc
add
add
push
push
jns
shrl
sbb
popa
ret
dec
sub
cmp
mov
mov
jbe
mov
dec
inc
xchg
test
test
or
sub
std
push
addl
or
cmc
push
jo
jae
mov
sti
lods
faddl
add
popf
xor
insb
cmp
sahf
mov
inc
seta
pushf
jge
lea
mov
inc
fld
xor
jo
loopne
inc
mov
in
nop
outsl
add
out
sbb
jmp
sbb
fadds
pusha
icebp
xchg
pop
inc
arpl
sbb
inc
sub
rorl
dec
gs
ds
add
xor
test
fs
andb
movsb
ljmp
fs
jns
inc
loopne
add
jnp
xor
sbb
cmc
push
pusha
ret
sbb
addr16
and
fcompl
popf
and
testl
mov
cmp
mov
adc
sub
mov
nop
insl
pop
out
dec
lock
adc
outsb
loope
inc
mov
fcomps
push
popf
mov
je
and
push
outsl
xchg
inc
jb
and
or
rep
nop
inc
sbbb
das
inc
inc
orl
fdivrs
xor
cmpsl
imul
aam
incl
mov
pushf
icebp
jno
js
insb
push
inc
insb
jle
xchg
aad
out
pop
imul
sub
subb
push
xor
je
jae
jno
in
movb
push
xchg
or
adc
mov
inc
loopne
and
xor
sbb
push
mov
push
les
inc
xchg
movsl
andl
jmp
xor
xor
push
pop
xor
sub
push
not
addr16
enter
mov
push
push
adc
and
and
mov
sbb
jnp
or
dec
outsb
dec
push
popa
or
movsb
scas
adc
mov
cmpsl
ss
loop
pop
add
add
mov
cmpsb
xor
sub
dec
imul
imul
push
or
add
adc
in
and
jecxz
loopne
icebp
adc
and
add
jl
sub
in
bound
or
bound
add
inc
jb
add
insb
inc
jae
sahf
leave
xchg
fcmovu
fiaddl
daa
inc
sbb
jmp
repz
pop
sub
sbb
movb
adc
xchg
test
pop
mov
mov
xor
inc
je
and
adc
add
lods
mov
push
lret
int3
add
pop
ficompl
test
push
jae
test
fisubl
sbb
lods
push
aad
sahf
enter
or
adc
xchg
xchg
and
test
jge
add
sub
lret
loop
insb
pop
out
std
imul
into
jb
lea
jo
dec
adc
pushf
pusha
jp
insb
pop
push
adc
sbb
inc
cs
imul
sub
sbb
sbb
and
push
cs
lods
and
cmp
adc
sub
add
js
sub
adc
jne
add
sbb
dec
int3
outsb
push
push
adc
fnstcw
roll
insb
adc
cwtl
fistpl
repnz
sbb
cmc
jno
insl
lods
pusha
shl
dec
xor
ret
arpl
jg
popa
inc
cmp
cltd
dec
mov
push
mov
mov
and
lds
and
or
enter
and
loop
xchg
inc
outsb
shrl
int3
lods
mov
inc
jbe
push
gs
subl
mov
popa
and
test
push
jmp
loope
adc
scas
push
leave
test
in
pop
aad
clc
add
pop
push
lods
sub
iret
jns
pop
push
sub
jg
loop
shr
mov
call
jg
outsl
push
jecxz
mov
dec
xchg
or
pop
mov
xchg
lods
pop
cmc
xchg
mov
shl
or
in
and
or
add
or
repz
ja
daa
sahf
imul
adc
ss
ljmp
push
pop
xchg
dec
push
sub
dec
jae
push
loop
out
or
jno
addr16
xchg
jne
sub
insb
mov
gs
je
add
jmp
or
mov
popa
sbb
inc
adc
pop
xor
mov
add
pop
add
push
or
push
push
cs
clc
xchg
fs
pop
pop
push
hlt
or
pop
pop
mov
inc
mov
add
adcb
dec
xor
mov
xchg
repnz
jo
add
shlb
cwtl
bound
lods
pop
dec
pusha
add
cld
sahf
jl
push
aam
and
mov
add
pusha
jb,pn
popa
cmpsb
dec
in
fnstenv
push
add
push
ficoml
mov
js
inc
cs
pusha
push
roll
sub
rcr
fs
add
arpl
xlat
movsl
sarl
out
jo
cwtl
and
lahf
xchg
lock
and
loop
pop
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
inc
add
add
