divl
in
mov
mov
cwtl
js
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
xchg
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
fildl
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
xor
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsb
push
mov
andl
mov
or
push
add
fidivs
call
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
jl
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
pop
push
push
test
in
in
lret
add
loop
inc
adcb
adc
or
popw
dec
sbb
ret
or
aam
push
cwtl
in
and
fs
push
lock
clc
or
hlt
fsubrs
push
jle
insl
ret
xor
sbb
push
push
lods
or
pop
pop
cmp
int
add
fdiv
fistpl
fisttpl
ret
add
sar
das
test
je
pop
add
pop
mov
push
mov
aam
loop
loopne
pusha
in
orb
rolb
sbb
cld
push
push
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
and
xor
sbb
adc
inc
jmp
push
push
fisttps
add
in
inc
inc
mov
xchg
pusha
xor
pop
sbb
mov
repz
add
push
or
cmp
inc
lea
inc
iret
inc
dec
jb
mov
sub
fs
push
add
dec
sarb
test
je
inc
ror
in
addb
je
dec
pop
sbb
xchg
std
cmc
clc
andb
aad
jbe
mov
push
sub
inc
cmp
jae
iret
mov
adc
push
mov
fisttpll
and
hlt
ds
add
cwtl
and
jo
sub
andl
push
jnp
jb
ljmp
add
cmpsb
adc
sbb
test
aam
add
jecxz
jne
jbe
push
xor
rorb
lods
mov
sub
or
adcb
and
push
lahf
getsec
enter
add
addl
pop
icebp
lar
xor
js
push
mov
adc
sub
or
test
add
out
sub
inc
pop
or
or
pop
push
mov
inc
add
sbb
test
aad
sub
outsl
outsl
mov
push
or
push
push
add
rol
jo
and
add
xor
enter
loopne
pop
xchg
cmpsb
sbb
je
or
enter
out
in
pop
nop
xlat
cmp
and
std
repz
push
inc
xlat
je
mov
mov
xchg
test
pop
cmp
push
cmpsb
mov
mov
inc
mov
int3
push
mov
cltd
mov
jmp
fwait
jo
insb
clc
dec
push
in
push
mov
sbb
xor
dec
prefetcht2
loop
lock
add
jg
pop
test
jne
push
adc
arpl
sbb
sub
mov
fidivs
push
icebp
xor
mov
sbb
sub
dec
add
xchg
pop
xchg
sub
dec
push
jbe
repz
jmp
sub
or
push
push
inc
push
decb
test
pushf
adc
push
cmp
dec
xchg
push
pop
sbb
inc
ds
inc
punpckhbw
test
pop
ja
popf
notl
push
int
sbb
xchg
mov
push
enter
push
out
xchg
sbb
mov
mov
leave
repz
jg
jae
push
mov
or
mov
pop
mov
ds
xchg
sbb
mov
inc
in
push
push
test
ret
test
ret
pop
cld
int
mov
scas
mov
test
push
push
xor
push
ret
call
je
ret
aaa
loope
ret
testb
mov
add
or
xchg
mov
push
push
mov
mov
scas
imul
push
jns
sti
push
mov
sub
cmc
cmpsl
xchg
mov
shrb
mov
adc
test
or
mov
ds
jecxz
mov
mov
push
lcall
dec
mov
inc
or
sbb
jle
sbb
je
and
mov
lea
jbe
push
mov
aaa
je
dec
pop
sti
iret
nop
sub
cmp
cli
mov
shll
jno
sbb
mov
inc
or
scas
jecxz
das
add
adc
mov
outsl
stos
mov
adc
ds
fiaddl
fwait
and
xor
or
push
aam
les
or
sbb
mov
out
mov
movsl
cmc
push
stc
or
loope
and
test
addl
add
in
mov
sbb
bound
xor
jecxz
sar
popw
or
ret
push
mov
sbb
lds
ficoml
cmpsb
mov
pushl
xor
mov
aam
mov
push
lock
jg
lock
jne
pop
mov
sub
sbb
rolb
insb
push
or
ljmp
dec
pushl
pop
in
cmp
popf
daa
ficoms
adc
xchg
xor
mov
xlat
and
incb
mov
ja
aas
sub
push
mov
cmp
loopne
sub
sub
jne
adc
fldt
sub
call
mov
test
cmp
call
inc
cmp
jl
xor
iret
fucomip
ds
pop
push
jnp
ret
push
pop
push
pop
jmp
sub
push
push
mov
mov
ret
add
pop
orl
out
push
ret
icebp
mov
push
test
rolb
sbb
bound
and
aad
mov
cmp
loope
adc
stos
push
ljmp
addl
or
jmp
sub
dec
push
andl
push
aaa
pop
icebp
dec
mov
xor
jl
push
sti
inc
mov
mov
cmp
pusha
adc
mov
loopne
adc
pop
ret
push
data16
dec
sub
shl
or
mov
fistpl
pop
mov
and
outsl
jno
jne
pop
ja
cmp
push
cs
outsl
or
inc
aam
push
mov
mov
jne
js
sub
pop
cmp
mov
jge
mov
pop
std
jmp
inc
or
test
mov
add
sub
adc
decl
lea
push
mov
imul
add
jmp
mov
add
push
push
add
adc
dec
or
cmp
adc
leave
ret
mov
fiaddl
out
idivb
cmp
je
or
in
cmp
std
cli
out
mov
dec
mov
jmp
insb
push
or
inc
pop
adcb
addl
jae
sbb
mov
jmp
xchg
in
cmpl
push
repnz
inc
repz
clc
lds
push
ja
lea
decb
pushl
cmp
pusha
mov
pop
popaw
fadd
add
gs
pop
pop
arpl
adc
mov
cmp
pop
xor
out
roll
test
je
pop
push
or
cwtl
rcl
mov
mov
push
movsb
pop
cmp
push
mov
jle
je
scas
shll
push
cmpsl
jbe
jo
pushf
sub
push
pop
ss
push
push
popl
adc
mov
pop
xchg
mov
loopne
je
test
and
xor
lock
mov
sbb
inc
sub
test
frndint
add
add
addl
push
sub
push
ret
pusha
fistps
mov
in
pop
cmp
mov
aaa
fs
cmp
je
cmpl
pop
mov
cmp
push
adc
imul
mov
jmp
fmuls
fistl
pop
cmp
icebp
rorl
sub
pop
mov
ss
jge
xlat
fstps
inc
aaa
fidivrl
inc
jno
pop
ret
clc
jg
inc
fimuls
movb
pop
stos
outsb
into
or
and
add
lods
adc
sub
or
inc
inc
or
shlb
adc
ret
pop
cmp
sbb
call
add
shr
jo
inc
pop
and
lock
xor
adc
dec
cmpsb
mov
adc
test
sti
pop
js
mov
dec
push
push
call
outsl
sub
push
mov
into
cs
xchg
sbb
dec
cli
pushf
mov
push
fdivrp
fsubs
and
mov
mov
mov
mov
cld
push
adc
lods
mov
push
dec
adc
jge
inc
or
cmpsl
mov
pop
lret
loop
sub
aam
add
clc
cmp
sbb
inc
jmp
ret
sub
cmpl
jle
push
cmp
jne
cmp
jge
mov
jle
ret
mov
xor
shlb
and
loopne
inc
cmp
push
sub
mov
adc
test
cmp
mov
loopne
jl
add
xor
add
add
fwait
pop
fsubrl
or
adc
adc
loope
arpl
ret
xor
dec
scas
enter
dec
jle
fisubrs
push
mov
push
dec
push
or
sub
and
lret
roll
cmp
lods
stc
insb
pop
stc
and
and
jge
sarb
mov
rcl
cmp
xlat
popf
jb
mov
es
or
lcall
mov
push
add
scas
adc
or
mov
inc
jl
mov
rclb
push
pop
jp
fldl
push
pushf
pshufw
and
mov
lea
push
mov
mull
mov
pop
pop
jmp
test
je
push
sub
mov
les
sahf
fsubrp
inc
cmp
jb
pushl
movsl
nop
mov
loope
ds
ret
push
mov
mov
inc
fcoms
push
js
loopne
pop
daa
lret
adc
sbb
fwait
xor
mov
and
imulb
je
push
cmp
in
mov
pop
shlb
add
fldt
or
inc
sbb
add
mov
push
push
pop
and
sbb
dec
push
adc
ficompl
push
cmp
add
sub
pop
scas
jb
add
or
js
ds
adc
shl
or
mov
and
or
sbb
insl
in
stc
pop
mov
inc
sbb
ret
ds
cltd
and
and
and
sbb
sbb
sbb
cmc
add
push
or
bound
adc
pop
lcall
jo
push
mov
mov
adc
dec
or
int
push
mov
add
adc
pop
dec
mov
lods
dec
or
push
add
mov
inc
jl
cmp
ja
xchg
std
in
dec
sti
or
sbb
and
stc
adc
out
std
repz
popf
cmpl
push
cmp
push
insl
mov
shrl
pop
divl
add
inc
mov
mov
shrl
mov
push
jb
jmp
cwtl
call
mov
insl
popa
dec
pop
pop
sbb
sub
fstpl
aad
add
push
push
jbe
call
jge
cmp
cmp
pop
mov
jmp
sub
dec
je
adcb
sub
xor
adc
jmp
xchg
adc
jo
jl
mov
fs
or
test
jp
orl
add
mov
rolb
lock
stc
or
lea
jne
add
add
mov
scas
adc
mov
lea
add
enter
clc
adc
push
mov
sti
xchg
mov
push
sbb
mov
mov
cmp
mov
sahf
and
push
or
ret
mov
mov
xor
push
push
sub
scas
in
pushl
js
jle
push
in
in
mov
adc
divb
mov
adc
jmp
es
push
cmp
je
cmp
adc
fs
xchg
cmpsb
push
lcall
mov
fldz
andl
or
cmp
jmp
pop
cmp
sbb
and
xchg
jmp
in
xchg
mov
and
jmp
data16
sbb
mov
ljmp
sub
push
iret
repz
pop
sub
movsl
loop
cmpsl
stc
cmp
push
sub
mov
cli
cmp
push
push
fs
xor
cld
cmpsb
sarl
cld
mov
pop
pop
lock
push
pusha
aaa
outsl
dec
adc
pop
mov
in
or
clc
pusha
push
idiv
movb
push
pop
cs
push
or
adc
loop
mov
lea
push
dec
mov
pop
push
call
push
pop
push
cmpl
mov
test
cmp
push
xchg
out
mov
cmc
adc
add
popf
or
pop
dec
push
fwait
jge
mov
dec
adc
movl
push
outsb
mov
insb
push
sbb
xchg
dec
xor
mov
fldcw
cmpsb
jo
and
jb
out
push
fnstenv
call
jb
add
cmc
imull
push
ja
mov
sub
fisubrl
insl
jo
pushf
lret
test
loope
xor
sbb
rorb
pop
sbb
clc
push
inc
jmp
clc
or
or
push
push
cmc
enter
sub
scas
mov
sahf
mov
imul
imul
jl
mov
adc
adc
or
mov
js
adc
inc
push
sbb
jae
jne
jmp
test
mov
rclb
not
and
mov
call
mov
inc
xor
jecxz
lds
in
pop
push
push
cmp
xchg
xchg
in
jnp
push
push
push
xor
jl
mov
loope
pushf
fdivrs
jns
outsl
add
push
push
pushf
pop
fcoml
ds
xor
es
jp
sahf
or
add
pop
mov
pop
pop
daa
lea
je
pop
mov
jo
push
jo
mov
int3
das
xchg
ret
in
and
cmpl
add
mov
sbb
pop
sbb
pop
jb
push
fs
dec
pusha
insb
add
xor
sub
push
ljmp
and
push
xor
lcall
cmp
mov
pushl
mov
adc
push
adc
push
push
dec
lea
or
lahf
daa
sarb
je
dec
call
pop
mov
ret
ret
add
bound
in
dec
mov
out
in
cmp
push
mov
add
mov
shll
add
inc
cmp
cmp
pop
leave
loopne
sbb
or
push
inc
daa
cmp
pop
sub
xor
rclb
mov
ja
sub
sbb
mov
inc
sub
push
push
shll
mov
cmp
adc
imul
xor
fistps
insb
xor
jmp
adc
insb
dec
divb
adc
call
and
inc
dec
shll
cmc
bnd
add
inc
cmp
mov
dec
or
repz
xchg
cwtl
mov
inc
pop
mov
push
push
pop
cld
pop
loope
lea
sbb
and
test
aas
mov
or
stc
adc
xchg
popf
adc
out
mov
ss
ljmp
sbb
xor
add
mov
out
sub
sbb
jge
je
push
iret
in
sbb
or
push
dec
popl
add
pop
and
jge
ret
daa
sbb
imul
cli
add
hlt
push
jmp
cmpl
je
insl
sarb
ret
pop
iret
jne
adc
dec
je
mov
xchg
sub
mov
inc
sbb
sub
jmp
shll
insl
pop
push
subl
pop
inc
jle
or
out
mov
push
aam
pop
lds
push
or
push
cltd
push
mov
js
cltd
pop
js
push
push
sbb
dec
sub
fsts
push
hlt
movb
sub
mov
jne
testl
push
enter
ret
jo
movb
jle
aas
mov
xor
mov
add
adc
lea
push
and
xchg
pop
divb
popf
pop
xchg
incl
test
test
mov
fs
mov
and
popf
push
daa
mov
pusha
adc
xor
addr16
out
mov
test
popf
mov
popf
and
and
pop
lea
mov
dec
push
jle
jle
ror
pop
jbe
adc
cmp
loope
aas
mov
cmp
mov
sarb
or
and
push
sub
sbb
and
jp
cmp
sahf
out
enter
adc
adc
add
je
adc
inc
enter
mov
adc
xor
orb
cmp
or
mov
sub
sbb
push
scas
and
sub
jns
loope
shll
daa
addb
call
cwtl
cmpl
pushf
lcall
inc
mov
cmpsb
sbb
iret
sbb
test
icebp
inc
cs
fwait
mov
jae
les
inc
imul
inc
dec
fldl
fmull
push
lahf
testb
adc
out
jno
scas
add
pop
es
push
cmp
ret
rcrl
or
xor
leave
lock
adc
or
adc
shl
mov
ds
rorb
jo
ds
js
adc
push
shll
test
push
jl
push
scas
push
mov
rorl
mov
ds
add
push
addl
or
dec
mov
jno
jae
dec
adc
xlat
stos
fsubs
pop
dec
dec
or
sbb
mov
es
and
add
loope
push
loop
js
ret
cmp
in
lea
das
adc
andb
in
jo
or
aaa
dec
xor
mov
sbb
orb
enter
adc
pop
test
ficomps
cld
scas
iret
mov
jle
add
add
test
or
or
push
push
stc
sub
flds
sub
push
push
cmp
cmp
in
pop
nop
xor
push
insb
repz
cmp
cmpsl
dec
jmp
nop
push
mov
xchg
mov
pop
inc
stos
je
fadd
xor
cmpb
mov
push
loopne
push
outsb
sbbb
push
in
adc
pushw
xor
jo
jno
mov
sbbb
cmp
aam
xlat
rolb
jo
xor
int
pop
cwtl
dec
call
scas
sarl
push
xor
mov
loopne
sbb
mov
or
fwait
sbb
fistps
cmc
cmp
ret
cltd
mov
cld
aaa
and
add
sar
push
popa
mov
je
aad
daa
jl
dec
inc
mov
cmpsb
lock
jg
mov
inc
jge
mov
fcomip
sti
dec
subb
push
pop
push
adc
int
out
xor
idiv
jle
mov
fwait
inc
jp
mov
incl
push
adc
jne
loopne
jbe
cmpb
mov
das
jo
aad
insb
cmpsl
int
mov
jne
jne
mov
testb
pop
push
pop
sbb
add
mov
out
lahf
inc
mov
inc
or
pop
pusha
push
ljmp
mov
mov
je
test
pop
lea
std
cmp
mov
mov
xor
sub
mull
pusha
jl
aaa
mov
jg
push
mov
jl
movl
popa
mov
sti
adc
test
or
jbe
lahf
xor
adc
sbb
adc
inc
jle
add
idivb
pop
xchg
imul
cmp
ss
cld
jae
dec
sub
jge
jmp
pushf
into
mov
xchg
cmc
ja
aas
mov
fildl
pusha
or
add
jge
fdivl
xor
mov
fdivrp
mov
dec
sub
mov
mov
shl
xchg
pop
add
pop
add
fimuls
aam
lock
or
xchg
pop
jl
jmp
rolb
pop
mov
jge
je
into
clc
ljmp
jmp
outsb
mov
mov
cmp
sahf
lods
jmp
fdivrl
inc
jne
pop
add
jl
dec
jmp
dec
mov
aad
push
mov
fmull
jp
xorl
lea
push
or
addr16
add
push
and
clc
add
dec
mov
adc
je
mov
pop
push
fnstcw
into
lahf
je
je
je
dec
xchg
or
pop
and
inc
les
cli
xor
jle
add
sbb
sbb
dec
push
movq
sbb
in
cld
sub
mov
adc
test
dec
cltd
insl
and
push
push
lods
sbbb
adc
gs
mov
rcrl
aas
xchg
dec
xchg
divps
push
jne
mov
xchg
pop
jne
rcll
mov
push
rolb
or
and
movsb
pop
jmp
inc
pop
push
fisttps
and
xor
clc
loope
pop
pop
icebp
lea
push
mov
push
icebp
inc
aas
test
insb
pop
mov
push
cmp
pop
pop
sub
push
sub
dec
push
dec
add
push
mov
jne
xor
or
xor
flds
mul
pop
adc
add
shl
ret
push
ja
ja
cmp
add
push
inc
mov
or
or
clc
loope
test
mov
pop
lock
fs
xchg
cld
push
push
pop
ds
int3
adc
mov
pop
jns
mov
ret
mov
mov
dec
push
repz
inc
adc
push
bound
pop
xor
leave
arpl
or
push
in
mov
and
stos
out
rcll
or
push
cmp
xor
mov
or
pop
cmp
cmp
clc
movsb
sub
clc
setb
test
jne
pop
ret
das
rorb
sbb
mov
xor
mov
dec
adc
pop
add
pop
adc
mov
je
sub
shr
xor
aam
rol
fimull
inc
mov
nop
lock
hlt
mov
test
dec
call
pop
xor
dec
insb
call
lret
aam
sub
ds
dec
mov
and
cmp
push
jmp
hlt
pop
adc
loope
hlt
add
shrb
aam
imull
loopne
pop
ret
movl
rcrb
xor
ret
mov
clc
in
pop
adc
cs
sub
add
stc
insl
xor
jnp
mov
es
mov
sub
clc
or
and
push
je
and
testl
sbb
mov
cmp
ret
int3
pop
mov
add
push
mov
rolb
shlb
push
push
mov
xor
pop
movl
pop
jmp
movl
mov
mov
lock
test
test
sbb
sub
adc
or
sbb
fsubl
leave
mov
mov
add
rcrb
test
rcll
add
pop
push
in
add
es
decb
cmpsl
xor
stos
test
add
lret
lock
xchg
icebp
lds
jne
push
pushf
and
sub
xchg
int3
or
mov
mov
jmp
add
adc
xor
out
cmp
inc
or
insb
mov
xor
mov
adc
ja
inc
pop
add
xor
fcoml
jl
arpl
es
popa
sub
test
flds
loopne
xor
or
mov
imul
call
repnz
enter
mov
add
add
pop
fisubl
fsubrl
push
insb
or
xchg
jp
mov
loop
inc
mov
aas
lret
int
xor
mov
inc
insl
jmp
sbb
or
pop
jmp
push
mov
lcall
mov
icebp
mov
mov
call
mov
pop
or
and
dec
jmp
dec
mov
jecxz
pop
push
and
push
call
inc
fmuls
push
push
clc
iret
push
mov
mov
push
stos
inc
repz
imul
in
sbb
icebp
mov
add
or
add
gs
rclb
mov
cmpsb
adc
xchg
cmp
push
cmp
ss
adc
and
enter
jne
and
pop
insl
stos
or
pop
and
aas
add
fsubrs
add
mov
and
add
loop
pusha
pop
pop
das
cli
js
jecxz
add
mov
jne
push
test
push
jnp
lret
pop
test
enter
hlt
push
mov
pushf
mov
cmp
cwtl
movsl
and
lcall
inc
bound
adc
js
je
in
pop
ret
in
sub
or
pop
movl
add
sub
nop
out
sbb
nop
test
or
test
mov
out
call
mov
sbbb
and
loope
jns
mov
shll
jno
mov
out
or
adc
xchg
push
sbb
and
push
jl
mov
aad
fsub
and
enter
add
das
les
add
fistl
jo
fdivl
andb
inc
adc
jle
es
push
jl
addl
dec
adc
sbb
push
aaa
jl
fsubr
mov
clc
dec
and
mov
loope
loop
adc
push
jmp
mov
sub
add
jb
int3
aam
adc
scas
or
adc
fdivrl
adcb
scas
shlb
cmp
imul
or
daa
sub
fsubl
repnz
add
sbb
inc
cs
xchg
cltd
inc
inc
in
push
push
int3
add
or
add
cmpsb
adc
inc
sbb
pop
and
pop
std
or
shrl
push
sbb
inc
insb
in
pop
xor
inc
cs
xor
bnd
push
test
sbb
insb
and
fisubrs
lea
clc
fcompl
push
loopne
mov
add
ffree
dec
pop
push
add
jbe
lods
xchg
pop
inc
cmp
nop
scas
nop
add
jge
das
rcrb
pop
push
mov
pop
add
push
add
sbb
fwait
pusha
sbb
mov
cmpsl
ficompl
add
mov
scas
push
sahf
and
inc
scas
out
jnp
bound
xor
and
pop
xor
pop
icebp
mov
or
push
scas
sbbb
fsubr
xor
jmp
mov
fidivs
pop
mov
dec
add
push
or
cwtl
xchg
add
adc
cmp
xor
sbb
push
or
popa
mov
ljmp
movsb
push
rclb
shll
or
sbbl
stos
imulb
pop
xor
add
sbb
push
sbb
clc
push
lcall
fbstp
icebp
mov
sbb
ret
xchg
daa
inc
sti
or
pop
lar
jl
push
iret
scas
shrb
sbb
imul
push
mov
testl
lea
push
rcrb
push
adc
rclb
push
mov
add
mov
adc
push
repnz
adc
xor
push
ficoms
sub
and
mov
mov
shlb
adc
and
scas
adc
add
mov
cmpsb
and
adc
loopne
mov
repnz
pop
mov
xchg
push
push
test
shrb
stos
push
nop
lret
lds
inc
push
jno
ss
or
adc
js
and
out
and
inc
and
imul
fnstcw
rcrb
sti
pop
insl
adc
push
repnz
enter
jle
jbe
add
xchg
lock
lcall
daa
nopl
add
pop
push
stc
mov
sub
push
push
xor
push
leave
push
jb
sub
arpl
nop
pop
aaa
sarb
ljmp
scas
fidivrs
shr
shl
dec
jb
lods
cmpsb
xchg
addr16
loopne
enter
stc
add
sub
shrb
inc
cs
and
add
mov
sub
cs
jo
sub
pushf
or
das
dec
adcl
jb
xchg
xor
test
testl
xor
jne
ds
scas
push
pop
rolb
push
cld
xor
or
popa
or
pop
cld
or
xchg
test
inc
adc
decl
std
jns
inc
adc
xchg
jb
into
pushf
ds
xor
popf
mov
xor
and
lahf
sub
add
add
add
mov
pop
sbb
leave
fistpl
push
ret
push
test
or
insl
push
adc
mov
dec
and
or
or
sbb
dec
mov
add
xchg
jg
in
jno
sub
push
cmp
aad
xor
clc
stos
fcmovne
dec
dec
mov
xchg
outsl
adc
inc
js
jo
mov
pop
stos
inc
push
xor
or
xchg
es
add
emms
popa
outsl
lods
clc
cmp
movsb
mov
popf
xchg
sbb
mov
hlt
int3
mov
push
lcall
mov
jne
xchg
or
inc
and
idivb
jo
movq
push
rorb
and
out
add
hlt
pop
mov
xchg
cmp
cli
insl
in
mov
sbb
pop
mov
jmp
mov
mov
push
cltd
add
lret
add
fsubrl
in
ja
or
or
cmpsl
fcoml
dec
cmpsl
adc
sub
lods
or
sub
aad
js
dec
push
mov
mov
xchg
es
outsl
outsl
testb
bswap
repz
lret
in
mov
cmp
inc
dec
push
mov
rcpps
or
lock
xor
inc
lock
xchg
rcrb
popf
inc
pop
dec
xor
arpl
xchg
adc
sub
or
add
out
add
cmp
das
push
dec
add
or
or
add
sti
inc
scas
dec
pop
xchg
ss
faddl
sub
or
xor
lea
les
or
xchg
mov
in
sahf
lret
call
cmp
sbb
call
out
aaa
lock
or
and
or
mov
sti
and
ret
fists
push
shl
dec
enter
inc
adc
enter
inc
inc
loopne
mov
sbb
add
jno
cmpsl
cmp
imul
mov
int
or
js
sub
int
fisubrs
xor
insb
push
sbbb
in
sbbl
lret
xchg
mov
jns
sub
inc
fisttpll
sahf
adc
push
xchg
jne
bnd
inc
fsts
fs
sahf
pop
push
push
nop
xchg
out
inc
add
add
and
adc
adc
movsb
push
or
adc
push
jl
jno
push
jmp
push
xlat
or
cmc
jns
dec
ljmp
dec
mov
insb
mov
push
sbb
mulb
aam
mov
xor
cmp
mov
test
sub
out
and
repnz
adc
jns
lcall
push
stos
pop
xchg
xchg
movsb
rcrl
loope
push
and
push
rolb
cltd
inc
xchg
adc
inc
adc
lret
jp
jns
roll
rcll
push
jl
mov
dec
mov
sbb
sbb
or
imul
andl
push
icebp
xchg
mov
shl
repnz
int
dec
sub
jne
push
jecxz
sub
pop
adc
out
and
sarb
fisubs
rorb
pusha
test
pop
dec
cmp
aam
nop
out
jae
jmp
sub
sub
cmp
jg
or
xchg
bound
sbb
dec
dec
adcb
fldl
jne
mov
push
sbb
or
dec
or
and
jo
enter
stc
adc
push
shll
fwait
in
and
sbb
ficompl
push
jge
xor
pop
pop
pop
mov
jne
jge
pop
push
and
add
imull
sub
inc
pop
mov
jp
xor
and
stc
ds
pop
andb
ds
popa
sbb
fadds
add
xor
inc
out
pusha
sbb
js
mov
sbb
add
subl
subl
insl
mov
test
js
lcall
add
pushf
xchg
push
js
js
cltd
ss
negl
or
sbb
ret
xchg
dec
mov
lds
mov
movsb
mov
push
inc
xor
icebp
dec
jbe
icebp
sti
clc
jl
sbb
adc
cmp
jns
pusha
dec
or
xor
pop
aam
mov
mov
lock
mov
add
mov
or
sbb
dec
push
idiv
ficoml
rclb
pusha
add
sti
jns
ljmp
hlt
pop
pop
out
add
xlat
xchg
sbb
pop
dec
push
push
push
mov
xor
mov
pop
pop
dec
sbb
fcoml
clc
add
xor
mov
or
pop
aad
ljmp
adc
sub
pop
fs
lods
data16
mov
pop
mov
jno
pop
inc
push
add
jecxz
aam
push
outsb
inc
pusha
in
xor
cmpb
jge
dec
mov
cmp
mov
pop
xchg
outsl
mov
leave
mov
lock
push
testb
lock
fwait
jo
out
add
xlat
inc
pop
jbe
cld
or
addr16
pop
inc
pop
sub
jmp
add
aam
iret
push
and
jbe
xchg
sub
popf
mov
mov
push
mov
xchg
lret
sub
xlat
xchg
lcall
push
pusha
and
dec
push
aam
hlt
and
testl
stos
push
mov
ret
add
cli
adc
push
cmp
push
ret
inc
jp
push
sbb
adc
jnp
push
dec
add
push
rclb
push
mov
inc
mov
mov
cmp
setne
je
popf
aam
jg
cmp
jne
sti
aas
push
push
call
mov
adc
hlt
jne
push
push
push
push
push
in
dec
push
imul
daa
lock
dec
mov
call
add
push
cmp
fdivrs
or
insb
adcb
rorl
in
test
in
daa
xchg
scas
xor
js
inc
nop
push
and
jecxz
mov
sub
shlb
mov
jl
and
jmp
dec
mov
add
sete
enter
jne
push
push
ret
xlat
add
push
sbb
add
cmpb
adc
imul
push
add
out
gs
dec
pop
int3
fwait
pusha
push
or
insl
inc
subl
je
jno
add
and
pop
and
cs
sub
jmp
or
cs
push
push
je
xor
or
int3
sbb
xchg
and
inc
and
pop
sbb
xchg
rcrb
jmp
sbb
stos
pop
inc
mov
in
mov
lret
shll
rcrl
fwait
lret
dec
add
push
out
add
pop
test
xor
xchg
pop
inc
ret
mov
mov
sbb
shl
jne
sbb
movb
mov
sbb
mov
sbbb
ret
jbe
lret
les
mov
pop
fisttpll
stos
repnz
scas
xchg
xor
cmp
mov
mov
add
inc
out
push
add
repz
loopne
sbb
inc
out
test
sbb
hlt
imul
lahf
jbe
sbb
lds
jp
adc
ret
mov
adc
into
mov
mov
inc
fldenv
dec
adc
mov
xchg
loope
mov
scas
mov
xor
add
push
inc
mov
test
dec
push
adc
mov
cmp
inc
push
xchg
cmpsl
lods
and
test
fmul
in
scas
sbb
xor
push
fists
cmp
or
mov
push
sbb
and
inc
pop
hlt
leave
push
repnz
lods
scas
jo
ret
sub
cld
jecxz
mov
sbb
roll
sbb
add
mov
cli
inc
xchg
mov
push
pusha
xor
lock
jne
test
pop
lods
ja
xor
push
clc
jb
repz
mov
push
iret
sbb
push
mov
lods
out
dec
push
movsb
mov
xor
loope
or
sbb
sub
xor
mov
and
testl
mov
xchg
sub
add
mov
js
out
lea
aas
push
inc
add
mov
mov
test
movsb
lds
loopne
loopne
add
xchg
push
push
ja
adc
sbb
pop
pop
popf
daa
or
les
dec
sete
xor
lock
fucomi
icebp
cwtl
cmp
shr
dec
xchg
dec
inc
or
jg
pushl
addr16
aas
sub
mov
cmp
into
lock
dec
addr16
push
cmc
mov
je
cmp
je
or
lcall
add
cmp
jae
push
lods
and
dec
fisubrl
and
daa
and
cmp
push
push
in
add
std
mov
push
mov
cmp
dec
hlt
jge
mov
aad
out
dec
and
jge
outsb
and
push
mov
or
sbb
jno
jecxz
pop
les
lcall
dec
pusha
pop
inc
fisttps
je
test
jl
mov
cmp
jg
loope
jge
push
shl
cs
sub
jmp
mov
inc
dec
bound
adc
fistpll
pop
xchg
xorb
pop
cmp
adc
mov
sub
push
sti
push
or
or
jo
xor
adc
lock
nop
or
sub
push
clc
push
push
aas
nop
mov
inc
and
inc
add
fsubrl
add
cmp
inc
or
sub
rcr
pop
xor
push
sbb
ret
mov
adc
jle
arpl
add
lret
and
inc
movb
bound
pop
clc
pushf
loope
test
sub
inc
mov
inc
xlat
add
cmpsb
cmp
inc
fld
jge
inc
jo
cwtl
or
cli
cmp
dec
push
mov
mov
fcmovbe
rol
js
add
cwtl
mov
cmp
dec
mov
rcl
pcmpgtd
sahf
push
mov
inc
and
rcrb
enter
sti
sbb
stos
push
mov
cmc
ss
mov
sub
push
pop
mov
push
mov
push
jmp
sti
sbb
and
ja
cmp
cli
or
stos
fldenv
es
or
call
push
add
movsb
jb
lea
jne
push
mov
cmpsb
insb
adc
pop
mov
ffree
or
fimuls
mov
mov
pop
inc
or
push
cmp
iret
mov
sbb
mov
jne
xchg
or
mov
and
mov
add
xchg
and
dec
sub
aaa
sbb
popf
stos
scas
push
cmp
imul
daa
adcb
int3
outsb
or
mov
cmp
stos
and
mov
inc
pop
adc
jbe,pt
pusha
push
push
mov
fldcw
mov
xchg
pop
push
mov
adc
and
clc
pop
scas
sbb
cmp
sbb
call
fiadds
pop
popa
jb
or
mov
sub
add
lea
mov
stc
jne
mov
add
and
jno
movsb
and
cmp
dec
push
or
outsb
jne
jmp
inc
pop
mov
popf
xor
xor
push
push
cmp
inc
lcall
rolb
sub
loope
adc
fucomi
cmp
cmp
fistpl
rolb
adc
loopne
lock
and
pop
xor
or
enter
lcall
xchg
insb
and
adc
outsb
or
adc
aad
xor
or
jbe
adc
std
lret
push
sti
adc
inc
mov
sbb
std
adc
push
sbb
std
in
jl
mov
push
pop
dec
pop
js
and
add
out
pop
daa
dec
arpl
insb
lods
dec
pushf
cmpsb
hlt
pop
inc
pop
dec
adc
adc
subb
sbb
xchg
add
push
cmpsb
imul
fldl
ljmp
push
and
add
xlat
jmp
adc
push
mov
pop
call
sbb
call
shlb
les
das
mov
inc
add
add
arpl
lods
add
jne
jne
sbb
ds
lods
jae
call
push
mov
out
sub
sub
stc
push
inc
add
adc
in
dec
inc
inc
adc
mov
and
std
ret
sbb
sub
sub
jo
mov
sbb
pop
addr16
lcall
test
push
movsl
in
or
loope
adc
aaa
pop
test
push
push
sbb
pop
cmc
jmp
popl
pusha
test
pop
stc
sbb
jne
sbb
pop
pop
adc
inc
pushf
pshufw
sub
or
pop
roll
jne
jp
cmp
add
inc
fsub
dec
xchg
out
mov
sahf
mov
and
jmp
push
push
insl
subb
movb
jmp
in
fisubs
cmpsb
cmpsl
adc
ss
push
outsl
cmp
add
pop
or
or
push
push
repnz
test
or
and
inc
mov
adc
sbb
and
inc
jo
push
mov
or
fnsave
mov
pop
jle
mov
rolb
ds
popf
repnz
call
test
and
add
push
int
fwait
pusha
mov
in
mov
in
lcall
jne
popl
pop
push
or
lock
xor
push
and
in
jle
dec
jo
push
sbb
jmp
sub
in
outsb
mov
push
dec
adc
inc
pop
and
or
loopne
mov
and
popa
arpl
out
mov
or
negl
sbb
xchg
add
je
inc
dec
stos
leave
test
mov
pop
jmp
daa
or
test
rcrl
aam
add
movsl
xor
aas
dec
popa
xor
insb
ja
sbb
xor
mov
andl
or
jmp
cmp
jne
sbb
mov
arpl
pop
dec
or
aaa
or
loopne
shrl
jo
mov
sub
cmp
ss
js
jns
inc
fsubp
int
rcrb
push
push
push
xchg
lret
add
xor
push
jne
cwtl
jb
sbb
pop
jmp
shrb
movsb
xchg
adc
mov
and
jno
icebp
mov
movsb
add
pop
leave
pop
mov
lea
and
cltd
or
jmp
or
dec
cmp
lret
push
mov
pop
xchg
push
jb
push
or
push
xor
mov
das
or
mov
pusha
adc
leave
mov
pusha
or
lods
add
ret
mov
lea
pushf
dec
jmp
test
adc
sub
push
dec
push
test
test
je
das
movsl
jge
mov
jne
sub
jne
xor
push
push
inc
adc
cld
cld
insb
fldl
push
lock
fiaddl
fidivrs
cmp
test
clc
call
mov
or
add
push
lock
add
jle
pusha
lea
push
lock
aas
mov
cld
sub
mov
imul
jo
push
add
push
mov
ret
jg
adc
cmp
call
fnsave
in
loop
pop
hlt
mov
jmp
rolb
sbb
outsl
pop
push
sub
sub
add
iret
push
push
add
push
xlat
icebp
jmp
sbb
push
or
cmp
out
movb
sub
add
stos
cltd
mov
lods
hlt
addl
enter
dec
sbb
dec
rorb
inc
pop
pop
pop
pop
cli
or
push
mov
push
dec
or
add
or
sbb
push
mov
dec
mov
into
pop
jmp
lcall
dec
cwtl
rcll
add
shlb
xchg
inc
pop
test
adc
imul
outsl
add
push
ljmp
push
cmpsb
cs
call
ret
or
fnstsw
inc
pop
push
mov
cmp
je
adc
lidtl
jge
dec
les
mov
iret
clc
cmp
jnp
arpl
movsl
lcall
fstpl
inc
mov
pop
gs
push
sub
adc
push
sub
movsb
push
add
in
aam
cmpsb
pop
jl
push
push
dec
lret
out
sub
jecxz
push
and
cmpsb
xor
or
popf
sub
add
mov
dec
scas
sub
ds
or
mov
mov
or
decl
cmp
je
push
lea
push
xchg
mov
jge
pop
arpl
cmp
sub
push
sbb
inc
adc
pop
lcall
xor
sub
dec
in
cld
sarb
loop
sarl
aas
push
adc
gs
rcrb
mov
inc
dec
mov
mov
push
clc
add
or
in
inc
cmpsb
jbe
fucomp
xor
in
mov
neg
push
add
test
call
pop
push
loope
in
or
add
mov
sbb
scas
je
lock
cmpsb
mull
test
ja
push
dec
movsl
inc
shlb
adc
hlt
aas
push
push
xor
push
push
cmp
fcmovu
jbe
loopne
push
push
xchg
aam
or
rcr
inc
ss
mov
mov
jg
xchg
fdivrs
fnsave
push
aas
push
rolb
push
push
int3
xor
mov
mov
jmp
dec
add
mov
push
push
add
xlat
data16
sub
and
dec
scas
data16
into
push
test
loopne
in
inc
xchg
or
les
cmp
sete
imul
incb
addr16
dec
sbb
push
and
add
sbb
cmp
int3
je
push
aas
push
jae
xchg
dec
cmpl
je
ret
stos
jecxz
insb
pop
or
and
sub
loope
adc
mov
loop
adc
add
jb
pop
cwtl
cmp
or
ss
dec
in
ret
dec
jmp
jae
shl
rcrl
push
and
jb
fisttps
rolb
int3
js
rorl
mov
je
cmp
je
cmp
jne
add
cmpsb
rolb
ja
cmc
je
pusha
test
adc
push
mov
gs
jle
pop
and
outsb
pop
mov
cmp
xchg
clc
or
ret
adc
mov
pop
clc
ret
jns
dec
and
ds
and
push
inc
mov
shrb
add
jmp
rol
cmpsb
mov
sub
jne,pt
mov
pop
adc
push
push
jge
jl
push
mov
mov
or
cmc
jnp
jge
push
jle
aaa
xlat
cld
test
sub
xor
inc
sub
add
jge
and
or
pop
and
sub
ret
inc
sbb
or
xchg
ret
aaa
je
add
icebp
mov
jb
aaa
add
or
ja
ljmp
sahf
out
inc
aaa
popa
push
ret
int
xor
mov
call
imul
push
add
push
sbb
mov
add
pop
push
inc
mov
addl
add
loop
or
lret
jmp
jge
cmpsb
in
xor
xor
cli
pop
add
idiv
divb
push
cmp
gs
je
cmp
jne
mov
sbb
add
jmp
xchg
push
dec
inc
clc
inc
mov
pop
dec
push
cld
fcomi
xor
push
movsb
jne
jmp
testb
mov
test
scas
faddl
loop
popf
add
cli
cmp
jbe
push
lea
sub
cmp
fs
dec
inc
jmp
inc
and
shlb
pop
mov
pusha
cmpsb
mov
xchg
ret
and
or
outsl
ds
rcl
clc
lahf
adc
lock
je
test
pop
lea
add
sahf
clc
shl
hlt
and
inc
xchg
or
data16
dec
xor
insb
out
lds
jge
pop
sahf
jne
inc
lods
std
cmp
jne
notb
cmp
jb
lods
loop
and
sub
ret
inc
jb
or
ja
fsubrs
hlt
aam
ror
arpl
test
ja
sbb
cld
add
push
cmp
push
push
mov
inc
fcompl
sbb
dec
jno
cmpsb
inc
sub
popa
loop
jne
js
mov
or
fs
inc
outsl
mov
and
and
jb
cmp
cmpsb
rcrb
add
fsubr
adc
aas
les
cmp
mov
inc
orl
popa
mov
jns
test
jne
xor
mov
dec
lock
test
aas
push
mov
mov
or
add
pop
jae
mov
cmp
in
das
jmp
dec
shlb
cld
jbe
test
bound
lea
cld
int3
popa
test
int
sub
rolb
cmp
jg
or
jge
jle
es
sub
lcall
jmp
cmp
jl
pop
jle
pusha
lahf
add
test
jp
jb
jbe
orl
push
adc
cld
cld
dec
or
je,pn
test
jne
je
outsb
and
add
je
je
hlt
aaa
daa
push
xor
add
add
inc
or
movsb
pop
mov
push
sub
push
and
or
mov
dec
push
push
mov
inc
and
testb
hlt
adc
pop
cmp
mov
add
pop
rorl
cmp
and
push
sub
jnp
mov
add
push
movl
sub
mov
cld
or
xor
push
scas
insl
outsb
lods
push
xor
adc
mov
xchg
mov
sahf
arpl
pop
push
rcr
cmp
das
mov
jb
jbe
xor
pusha
sub
scas
jecxz
sbb
jno
fst
hlt
push
sub
fdivl
cmpb
add
movb
push
inc
lea
sub
xor
xchg
push
pop
add
aam
lds
in
pop
incb
adc
cmpl
jge
and
xor
mov
or
xchg
cmpsl
xchg
shrb
xor
ja
lea
mov
dec
in
rclb
add
inc
arpl
in
sbb
dec
fadds
inc
and
jae
mov
add
shlb
or
mov
push
cmp
push
fsts
sti
mov
push
inc
pusha
jp
jne
loopne
or
pop
mov
push
push
shlb
dec
add
arpl
and
inc
mov
cmp
or
movb
aam
test
lock
xor
pop
mov
dec
lods
sbb
inc
or
ljmp
inc
dec
sbb
nop
jbe
es
jl
add
cmp
stc
test
data16
cmp
inc
lock
push
movsl
arpl
inc
sahf
push
mov
fdiv
and
popa
hlt
and
mov
inc
xchg
xchg
add
cwtl
add
popa
mov
icebp
inc
popf
inc
push
ds
rclb
int
sub
sti
pusha
jb
cs
sbb
out
mov
add
inc
fisttpl
imul
lea
add
dec
push
jb
mov
hlt
and
mov
xchg
insl
sbb
mov
dec
mov
das
cwtl
add
push
mov
bound
and
sub
sub
xor
push
xor
mov
ret
mov
add
lea
in
pop
aam
mov
cmp
jns
das
or
or
ds
push
leave
adc
mov
das
jbe
or
adc
cmp
or
lods
test
jge
push
xchg
and
or
jmp
mov
jle
push
or
enter
inc
sarl
mov
pop
xchg
add
or
stos
push
sub
xor
jmp
shlb
mov
clc
sbb
cli
es
push
rcrb
xor
out
and
push
shr
jne
adc
cli
push
fdivl
jne
sbb
fucomip
lods
cmp
jnp
das
movl
add
popl
das
bound
into
cmpl
dec
adc
andb
cmpl
mov
push
adc
mov
cmp
fcomps
inc
pop
dec
mov
cmp
je
les
sub
inc
mov
inc
inc
inc
xchg
in
popa
fwait
jge
loope
jge
pop
and
aaa
sbb
adc
xor
pop
jp
add
mov
mov
adc
fisubrl
aam
fsubr
cmp
in
cmpsl
test
jo
push
push
rorb
push
and
mov
sub
call
xor
or
sub
jge
or
inc
incl
mov
jmp
pop
inc
cmp
je
lea
fnstsw
jl
cmpb
cmp
jne
les
aam
adc
jno
mov
cmp
mov
push
mov
inc
lcall
mov
jmp
mov
insb
jmp
test
movsb
push
adc
cltd
test
jge
xchg
mov
imul
jg
addl
sbb
jmp
add
push
mov
jns
push
and
test
add
enter
ret
sahf
add
das
cmpsl
mov
jmp
inc
push
xor
lds
cmp
sbb
lods
lock
pop
push
push
cmp
inc
mov
das
orl
or
mov
or
pop
movsl
jne
shrl
add
push
leave
test
dec
sub
xor
cmp
cmc
mov
mov
add
mov
test
pusha
ret
push
lret
push
push
push
sbb
add
xchg
lock
push
adc
push
das
mov
lock
mov
xchg
xor
xor
mov
sarb
in
jbe
mov
ja
and
mov
xor
push
fdivs
sbb
cs
lret
in
xor
xor
in
mov
cmp
dec
add
adc
sub
jge
push
and
push
mov
or
fsubrs
in
add
adc
dec
test
out
mov
xor
pop
xchg
add
push
xchg
inc
pop
sahf
push
mov
push
aas
cmc
add
in
or
jge
sub
fsubr
arpl
scas
adc
push
push
and
cmp
push
int3
add
sbb
fsub
inc
push
cmp
popf
pusha
sahf
insl
insl
lods
mov
jle
lea
inc
mov
in
ret
add
orl
addl
mov
loopne
rcrb
add
pop
inc
dec
movl
scas
cmp
js
pop
mov
or
lock
daa
orl
rcll
movb
ffree
test
pop
mov
adc
test
or
mov
and
or
add
lcall
insl
js
pop
shlb
or
dec
xor
out
jl
insb
bound
loopne
in
or
ret
jne
cld
in
xor
xchg
cmp
rorl
mov
repz
add
push
mov
js
hlt
cmp
scas
faddp
roll
push
cmpl
andb
gs
xlat
jle
adc
fucomi
ud0
add
pop
stos
ljmp
lea
mov
sbb
jno
in
xor
aaa
sbb
lock
cmp
addb
mov
add
roll
xor
lods
mov
sbb
sbb
xchg
rclb
mov
in
nop
push
inc
inc
in
in
in
dec
add
js
mov
negl
push
xchg
out
setg
push
orb
add
push
xchg
nop
outsb
movsl
aad
cmp
inc
mov
mov
sbb
push
adc
lock
xchg
shl
or
clc
call
rcll
gs
xchg
or
daa
loopne
or
fcmovb
sub
or
pop
mov
push
loop
or
in
fstl
or
stos
or
in
nop
sbb
lahf
cmpl
cmpsl
adc
mov
add
adc
sub
cmp
lea
pop
jae
sbbl
into
rcr
add
dec
xchg
loopne
cmp
ret
add
fcoml
jne
imul
jl
cld
insb
loopne
in
xchg
iret
add
mov
cltd
inc
mov
bnd
or
dec
scas
outsl
lock
or
mov
pusha
loopne
aaa
sub
call
sub
pop
pop
sbb
adc
or
loop
xor
sub
outsl
xchg
jb
jmp
pop
mov
mov
mov
or
and
mov
aam
dec
xor
push
adc
dec
rcrl
dec
sbb
push
xor
cmp
hlt
mov
in
lret
add
jle
loope
mov
dec
or
sub
add
das
mov
sbb
add
lret
push
out
add
sub
sbb
and
mov
mov
mov
cmpsl
push
and
sbb
add
jo
mov
mov
mov
rorb
jecxz
push
fmull
in
push
stos
movl
push
rolb
xor
push
test
es
in
lock
sti
mov
hlt
movsl
add
pop
int3
stos
or
lods
subb
mov
cmp
pop
or
cmp
inc
inc
or
mov
addr16
sub
xrelease
xchg
fwait
add
mov
xchg
jmp
jnp
pushf
add
dec
push
sub
mov
inc
lea
push
xor
and
lods
and
les
sarb
rolb
add
mov
shlb
dec
push
sbb
mov
popa
cld
incb
std
adc
sub
out
inc
mov
push
inc
pop
cmp
scas
int3
or
mov
mov
sbb
in
push
imul
push
xchg
xchg
call
imul
xchg
ficoml
xchg
add
lret
jle
cwtl
in
pop
jno
notb
pop
pushf
sbb
mov
or
mov
repnz
mov
cwtl
xor
fsub
mov
or
sbb
fildl
icebp
add
movsb
sbb
xchg
mov
add
mov
add
push
and
mov
insl
pop
jns
ja
pop
pop
push
or
shlb
xchg
add
ret
pop
mov
flds
dec
popl
push
jp
addr16
push
lods
xchg
pop
mov
or
mov
sub
xor
adc
dec
call
cmpsl
cmp
inc
xchg
enter
pushf
pop
cmp
in
lock
push
jo
and
push
jle
pusha
xchg
aad
stos
mov
adc
and
mov
jo
movsl
or
dec
pop
push
push
cmpsb
and
inc
push
push
stos
pop
mov
push
add
mov
pop
es
movsl
mov
ret
aad
les
lods
sbb
push
repz
or
or
test
mov
testb
in
fistpl
rol
scas
add
jp
loop
fimull
sub
fildll
adc
or
jnp
or
loope
lock
mov
fbld
or
xchg
sub
mov
mov
adc
ss
loope
iret
fs
sub
push
movsb
pushf
push
and
mov
fisttpll
movsl
jmp
mov
addb
mov
cmp
jb
loope
fisubl
stos
pop
jbe
test
pop
sub
inc
mov
nop
add
mov
jns
lock
pop
jo
and
pushl
je
pop
dec
int3
or
mov
and
clts
cmp
cwtl
push
push
mov
sbb
jge
add
enter
shlb
mov
outsl
adc
sub
jmp
push
jns
rolb
xor
inc
aam
sub
dec
mull
inc
mov
sub
mov
and
std
repz
dec
scas
jno
adc
jo
pop
add
test
pop
pop
loop
in
jns
dec
cmp
push
fldl
jecxz
push
sbb
jo
push
inc
das
mov
add
inc
pop
or
inc
mov
rclb
adc
mov
enter
ret
aaa
mov
clc
cmp
outsb
and
mov
ret
xor
sbb
aad
and
and
add
subb
pop
add
sbb
mov
pop
jne
roll
mov
push
jmp
cmp
clc
push
sbbb
inc
ror
repz
and
or
dec
aaa
nop
sbbl
or
inc
in
push
cmp
sbb
fistpl
sbb
mov
pushf
jne
sub
leave
inc
cmp
mov
dec
push
pushf
cmp
xor
push
sbbl
or
inc
sub
and
jo
in
aad
stos
jp
or
adc
iret
add
imul
xchg
jmp
inc
xor
cmp
pop
push
add
roll
dec
mov
and
adc
push
insb
iret
xor
loopne
adc
push
hlt
lcall
ljmp
sbb
mov
cmp
add
pop
hlt
sub
rol
cmp
dec
js
jl
leave
push
sub
inc
and
insl
cmp
or
inc
adc
incl
sub
xlat
sbb
roll
adc
adc
and
mov
sbb
add
and
adc
pop
push
bound
rorb
movsl
andb
jmp
icebp
sub
pop
cmpsl
test
icebp
add
sub
cmp
or
mov
in
dec
lods
stc
sub
sbb
pop
adc
sub
xchg
pop
adc
insl
nop
or
jmp
loope
shlb
mov
int3
ret
adc
push
mov
incl
and
test
pop
fisubrl
clc
add
sub
test
mov
pop
imul
xchg
push
cld
dec
push
fldt
cmp
jl
xor
and
or
xor
mov
dec
inc
call
enter
xor
xor
cmpl
ja
xlat
mov
enter
sbb
sbb
sbb
xor
stos
arpl
sbb
and
add
mov
jmp
pop
test
stos
pusha
daa
add
shrl
pop
imul
jno
sub
jns
dec
and
push
mov
push
adc
add
dec
pop
cmp
mov
lds
dec
scas
sub
xor
sub
das
sub
ss
aas
sub
xchg
mov
push
ret
stos
inc
fucomip
add
loop
aam
push
add
add
dec
or
ljmp
push
or
stos
lea
cmpl
mov
outsl
call
mov
xor
mov
add
jns
loop
into
adc
jge
mov
cli
dec
mov
pop
xor
mov
inc
add
lret
mov
mov
add
cli
mov
nop
xchg
or
imul
cmp
jb
in
nop
cs
cmp
inc
jo
daa
popf
and
xchg
xor
cmp
sbb
rclb
xor
fists
imul
or
push
mov
add
pop
mov
add
shlb
aas
or
mov
icebp
movsb
push
mov
fistpl
ss
jge
popf
xchg
jbe
outsl
enter
push
adc
loopne
dec
movb
test
repnz
mov
ds
in
or
or
push
or
aam
adc
add
test
sub
mov
mov
push
call
repnz
cmp
stc
sub
repz
in
xchg
ljmp
popa
fadds
add
xchg
repnz
int3
xor
pop
xchg
cmp
movb
add
into
bswap
in
test
jo
sub
add
rolb
inc
inc
enter
inc
push
and
ficoml
cmp
jae
xor
push
xor
repnz
int3
jl
mov
xlat
decl
xor
psubw
rol
shr
aaa
sub
push
push
sbb
aad
jmp
xchg
jmp
gs
adc
cmovo
fadd
je
push
or
ja
lcall
cmp
iret
or
pop
out
mov
out
push
push
test
je
adc
and
or
pop
or
test
in
mov
dec
loopne
inc
dec
mov
dec
rcrb
roll
iret
gs
stos
inc
sbb
push
sub
aaa
sbb
out
dec
lods
cmp
sbb
out
xor
pop
jecxz
dec
push
mov
add
push
outsl
repnz
inc
mov
in
xor
adc
add
out
adc
dec
mov
pushf
inc
rcll
push
fucomip
pop
cmp
out
and
add
pop
inc
add
sub
fdivs
xchg
jl
out
sub
sbb
jns
call
add
push
inc
iret
repnz
addb
xchg
xor
call
sub
jbe
sub
fidivl
cmp
cmp
outsl
xor
popf
xchg
pop
sub
add
inc
xor
lcall
cmc
lds
jmp
xchg
loopne
sti
inc
xor
or
push
jle
adc
movsl
cmp
sahf
test
jo
push
push
dec
adc
out
mov
jmp
and
movsl
lods
sbb
popf
push
mov
fisttpll
add
jmp
cs
or
enter
inc
insb
out
add
test
mov
ret
mov
sahf
xor
scas
add
and
or
mov
or
sbb
push
add
mov
jne
xchg
lret
xor
sbb
pop
adc
mov
cmpsb
pop
add
adc
sub
jge
adc
sub
push
cld
xchg
bound
shlb
or
mov
pop
add
cmpsl
lcall
add
shrl
ss
dec
sbb
push
scas
dec
mov
fsubr
insl
push
push
mov
and
js
jl
inc
test
xchg
mov
cli
jl
add
scas
xchg
xchg
adc
jmp
loope
mov
xchg
fwait
pop
and
lcall
xor
test
stc
inc
mov
pop
xor
ret
inc
pop
cmp
mov
loope
adc
popf
dec
mov
inc
mov
cs
les
pop
pop
mov
cmp
adc
int3
xor
adc
inc
sub
or
push
addr16
rcr
shrl
xor
mov
jne
mov
imul
xlat
pusha
jl
shr
pop
push
adc
fmull
test
cwtl
mov
data16
ja
push
mov
lea
fs
or
pop
cmp
dec
cwtl
add
add
dec
dec
in
jmp
mov
mov
movsl
xchg
fistps
sahf
jne
ret
adc
movzbl
push
das
sbb
xchg
or
fnstsw
mov
jbe
xor
mov
insl
fs
fmulp
jle
je
fistpl
dec
mov
dec
popf
movsb
mov
repnz
je
sub
pop
sahf
sub
dec
mov
jp
push
jmp
push
and
xor
mov
sbb
in
push
inc
xor
sub
mov
movsb
fildll
jb
lea
push
lea
push
inc
rol
mov
icebp
adc
mov
or
fimuls
imul
cmp
add
xor
push
outsb
or
popa
pop
or
or
mov
dec
xchg
or
fsubs
sbb
sub
pushf
lret
pop
cmp
jnp
fs
movsb
sub
jmp
movl
loopne
aaa
lock
mov
push
fstps
adc
hlt
jb
cmp
mov
pop
or
push
in
jge
cmp
incb
add
cmp
sbb
data16
push
js
sbb
outsb
pop
je,pn
sbb
sbb
or
xor
ljmp
adc
cmp
sbb
xchg
lret
cmp
ja
fildll
cmp
je
xor
inc
cmp
inc
out
push
push
push
and
jb
dec
hlt
enter
mov
cmp
jl
sbb
xor
fiaddl
and
jge
add
xchg
mov
sbb
jnp
adc
add
dec
jnp
cmpsb
add
cmp
mov
shrb
jg
or
adc
fwait
sub
cmpb
mov
sbb
adc
or
hlt
imul
mov
jle
add
pop
rcl
lret
push
loopne
ja
je
call
pop
xchg
call
cmp
cmp
jbe
cmp
jbe
mov
sbb
add
mov
cld
jno
add
push
mov
aas
mov
mov
enter
divb
lods
add
pop
add
dec
fdivl
dec
or
js
pop
testb
cli
and
pop
test
jae
test
sbb
push
mov
mov
enter
lea
popl
mov
adc
lea
pop
fdivr
jle
mov
xorl
incb
ret
jne
add
ds
es
push
add
push
das
lds
inc
roll
pop
cmpsl
xchg
sub
ss
bound
sub
inc
in
mov
pop
push
xlat
cmpsb
mov
dec
arpl
mov
cltd
or
stos
insl
xor
stc
fdivrs
cmp
mov
add
lea
daa
mov
push
arpl
adc
jl
sbb
sbb
and
and
pushl
stc
sbb
test
cmp
jb
mov
mov
ret
cwtl
sbb
and
push
mov
rcr
enter
mov
movsl
les
sarb
lahf
insb
ret
adc
mov
inc
sahf
adc
dec
mov
test
add
insl
mov
mov
outsl
mov
add
mov
test
push
adc
sbb
imul
incl
adc
test
and
mov
adc
sbb
mov
cmpl
or
inc
popa
jb
sub
add
cltd
insl
out
mov
fwait
push
xchg
insl
mov
cmpsb
std
inc
or
add
or
movsl
shrb
pop
or
insl
test
jne
mov
clc
lods
test
ret
jne
mov
lahf
cld
mov
fdivs
sbb
inc
stos
cld
push
decb
push
decl
inc
lea
lea
and
jo
stos
movsb
test
sub
inc
lea
and
cmp
pop
xor
or
push
mov
mov
or
fwait
pop
mov
or
clc
xorb
mov
fdivrl
mov
inc
fwait
clc
notb
jge
cmp
adc
inc
pop
jmp
aas
and
fwait
cld
das
loope
mov
push
je
push
je
push
imul
inc
push
xchg
mov
sbb
push
or
pop
pop
movsl
cmpsb
push
and
js
fs
jmp
idivl
lea
iret
adc
ret
jo
ret
ds
iret
or
push
ljmp
in
pop
psrlw
dec
sbb
neg
loope
test
mov
xorl
js
jb
jge
data16
decl
pop
shlb
aas
sbb
push
leave
mov
pushf
push
xor
xchg
popf
jb
enter
or
scas
lock
loopne
repz
mov
scas
adc
rolb
mov
pop
push
jge
push
push
mov
or
cmp
xor
xchg
jmp
adc
loope
inc
das
inc
cmpb
pop
mov
es
faddl
adc
mov
push
pop
ret
and
rclb
mov
push
push
dec
mov
out
insb
and
jnp
insl
stc
jmp
or
lret
mov
push
sbb
inc
lahf
enter
in
dec
push
and
leave
das
aaa
je
push
je
cmpsl
cmpb
push
add
dec
jmp
mov
cli
mov
push
movsl
aad
andl
cmp
cmp
cmp
idivl
into
or
pop
add
ja
clc
mov
shl
cld
movsb
lods
out
jmp
stos
mov
xchg
pop
loopne
push
xchg
add
je
or
lret
pop
rolb
stos
fnstenv
pop
pop
mov
js
jbe
loopne
mov
addb
mov
mov
add
sub
into
ja
je,pt
ret
pop
lock
nop
lods
sub
jmp
insl
sbb
jl
fstpt
cmc
outsb
lret
cmp
jge
lock
push
icebp
mov
sbb
int3
or
icebp
or
iret
push
mov
aas
imul
add
fmulp
cli
imul
and
and
ja
xor
adc
fwait
test
sub
dec
inc
jl
lea
jae
inc
outsb
or
pop
cwtl
dec
pop
push
push
int
fidivl
or
sar
dec
fadds
dec
ds
pop
jle
aas
jnp
pop
jno
push
aas
les
mov
lods
mov
add
xchg
pop
xor
push
lcall
mov
push
xchg
dec
mov
roll
jle
add
rclb
pop
stos
test
sarb
sbb
mov
test
mov
fxch
pusha
pop
test
in
xor
mov
add
mov
mov
pop
dec
fucom
dec
lahf
test
rolb
or
incl
xor
jle
hlt
cmp
je
ljmp
xor
xor
cs
mov
mov
pop
repnz
inc
cmp
jb
stos
xchg
sarl
mov
data16
ret
push
push
push
dec
pop
add
sarl
insb
jl
ss
mov
sub
dec
and
in
repnz
cmp
in
test
dec
lock
mov
and
stos
jnp
pop
aam
nop
bound
add
mov
nop
mov
adc
cmp
mov
negb
adc
icebp
add
mov
and
adc
mov
cmpsb
cmp
lret
mov
adc
mov
mov
push
mov
and
or
or
repz
sbb
pop
test
push
mov
mov
icebp
and
enter
cmp
ret
pop
or
mov
sbb
ds
sub
mov
imul
aam
inc
test
push
jg
les
mov
xchg
xchg
mov
or
call
mov
shll
fmuls
out
shrl
mov
aad
sbbl
jno
ss
aaa
pusha
inc
adc
notl
add
lods
rorb
lahf
sti
mov
pusha
jns
mov
and
or
jmp
std
sub
jmp
enter
orb
adc
add
add
cli
push
int3
push
in
pop
add
mov
stos
movsb
mov
or
imul
adc
scas
out
cs
cmpsb
sti
inc
mov
mov
push
aad
inc
xor
push
lock
sbb
adc
nop
sub
mov
lock
popa
daa
xor
ljmp
push
dec
ljmp
mov
xchg
outsl
addr16
mov
outsb
in
or
lea
mov
out
push
sbb
mov
cwtl
xor
mov
xchg
and
fadds
dec
or
add
ds
mov
or
data16
ja
add
sbb
mov
or
jmp
jl
hlt
mov
and
push
mov
push
xchg
fst
mov
int3
pop
add
clc
iret
add
sarl
mov
div
icebp
jle
xchg
pop
dec
inc
cmp
mov
adc
cmp
dec
pop
cmc
add
sbb
shr
outsl
ss
jne
inc
sbb
sbb
mov
or
ss
ret
mov
xlat
xor
pushf
or
and
lock
popl
push
sbb
std
xchg
push
cld
pop
xor
add
inc
mov
movsl
sti
out
push
mov
fildl
fdivr
shll
add
cmp
fadds
add
mov
mov
adc
inc
cmp
mov
idivb
cmp
ja
mov
cmp
or
inc
xchg
mov
out
pop
insb
ret
dec
cld
mov
jecxz
adc
pusha
or
notb
add
or
dec
pop
and
jo
lcall
push
jae
jge
sub
ljmp
movsl
in
nop
sbb
aam
jle
cmp
je
mov
sbb
mov
lahf
shr
xchg
fcoml
in
dec
cmp
and
mov
adc
sub
js
sti
flds
jmp
ret
repz
adc
sub
add
jmp
xor
push
lcall
clc
add
in
hlt
call
mov
push
mov
dec
je
dec
or
jg
inc
ficomps
loop
fnstenv
jp
inc
std
orl
enter
jecxz
mov
fisubs
mov
incl
mov
cmp
cwtl
lea
jmp
cmpl
jp
mov
jbe
loop
push
daa
enter
mov
or
inc
clc
sub
test
stos
sub
or
xchg
shrb
pusha
lcall
sub
pusha
pop
inc
mov
adc
push
xor
std
fs
aaa
xor
xor
hlt
sbb
sub
mov
and
and
and
cmpl
and
cmpl
add
shlb
fwait
and
jo
adc
pusha
or
xchg
add
xor
dec
sbb
push
pusha
sub
mov
repz
out
popf
mov
push
pop
add
rolb
rolb
lods
shl
outsl
or
test
mull
je,pt
les
mov
xchg
add
or
jl
mov
pop
dec
lods
ret
fcompl
xor
add
sub
cmp
in
aaa
jo
loope
lea
push
out
mov
fsub
mov
pop
inc
hlt
jae
call
dec
xchg
mov
push
jo
sbb
xor
ja
test
sbb
xchg
jo
push
loopne
stos
mov
enter
je
pop
js
push
lret
mov
loopne
mov
jb
adc
mov
sub
scas
pop
sbb
loopne
jae
pop
sub
mov
add
xchg
pop
pop
popa
sub
mov
add
rolb
xor
fmuls
scas
add
sub
fwait
fwait
inc
push
or
cmp
add
dec
in
in
sub
call
dec
ret
mov
lods
cld
cwtl
hlt
fcoms
sub
es
xor
inc
lock
mov
xor
add
leave
and
cmp
or
and
sahf
mov
add
mov
push
dec
xor
add
jne
imul
xor
adc
push
loopne
cs
test
fstps
sbb
adc
lea
xorl
clc
sahf
mov
pop
rorb
add
mov
std
push
jmp
les
mov
cs
loop
inc
adc
das
add
lret
or
mov
mov
cmp
int
arpl
xor
xor
jmp
sahf
inc
cld
cmp
push
sbb
inc
iret
mov
pop
jns
dec
dec
clc
jne
mov
push
ficoml
cmp
dec
or
sub
lea
addl
daa
mov
test
dec
loopne
nop
dec
dec
xchg
sbb
xchg
or
leave
and
jns
pop
or
or
addr16
inc
or
pop
pop
mov
push
pusha
andb
cmp
jae
mov
and
into
fiaddl
lret
call
hlt
jne
push
js
mov
adc
loopne
fnstenv
out
pusha
and
mov
xor
out
xor
sbb
push
or
add
or
bound
xor
lock
push
dec
jp
cld
clc
pushl
cmp
lea
mov
int3
sub
jo
orl
pop
or
xor
sar
sar
rol
fiadds
add
cmp
push
mov
jmp
hlt
jb
iret
je
test
je
sub
adc
mov
mov
mov
push
lea
sbb
dec
adc
xchg
insb
and
lea
js
xchg
adc
cli
sbb
cmp
sbb
sbb
xor
jle
les
in
popf
xchg
lea
add
mov
clc
sbb
cmp
mov
fwait
mov
jp
ljmp
mov
test
sbb
cmp
adc
cmp
cmp
pop
cmp
push
xorb
aas
imul
mov
mov
int
sub
jecxz
lret
cmpsl
aas
fcmovne
fstps
inc
loop
inc
jne
sub
das
dec
cmp
push
jmp
add
add
lods
lret
bound
push
in
push
xor
loopne
sbb
dec
rorl
icebp
iret
xor
mov
or
adc
push
jecxz
sbb
loopne
outsl
cltd
ret
stc
in
lods
push
cmpsl
lock
pop
data16
mov
cltd
bound
cwtl
mov
cld
or
lret
leave
add
push
iret
jp
add
movzbl
add
mov
sub
movsl
inc
add
jge
mov
cmp
fcoml
popa
inc
push
pop
cmp
add
jle
mov
push
rolb
rcll
mov
test
loop
nop
rcll
xchg
jb
or
inc
jg
outsb
mov
sub
jmp
adc
int3
fstpl
rol
mov
jp
loopne
cmpsl
imul
test
pop
sbb
or
les
mov
push
pop
and
ss
lea
jmp
xor
mov
mov
iret
add
stos
ljmp
dec
lret
adc
icebp
xor
mov
push
xor
jo
and
enter
cmpsl
subb
test
dec
scas
jg
jbe
mov
test
mov
cmc
jno
insb
mov
fst
dec
bound
xchg
and
test
aas
subb
in
mov
je
mov
adc
addb
mov
jmp
ss
mov
adc
jmp
xor
mov
cmpsl
push
or
or
mov
sub
das
push
push
lea
dec
pop
adc
jp
sbb
xchg
and
or
jnp
or
add
and
jmp
mov
add
xchg
fiadds
cmp
xchg
sbb
sbb
inc
cmp
mov
jmp
je
xchg
xchg
ljmp
cmp
xor
sub
push
daa
sbbb
sbb
clc
and
jle
lret
sbb
cmp
subl
test
xor
mov
or
into
sbb
add
loopne
and
or
out
cld
inc
fistpll
and
hlt
scas
ret
jmp
push
push
mov
sub
dec
add
popl
push
or
iret
and
push
dec
out
xchg
das
leave
mov
mov
lea
sahf
mov
jmp
cmp
add
pop
mov
test
add
enter
mov
les
dec
out
add
addl
adc
jl
outsl
adc
js
mov
int
jmp
xor
into
mov
push
imul
pop
push
xor
nop
add
lods
add
cli
xchg
stc
or
sub
lds
faddl
push
and
loop
rcl
test
and
xor
sub
rcl
cmp
adc
jne
in
in
jl
arpl
sahf
sarl
jmp
clc
mov
sbb
and
je
mov
push
arpl
pop
inc
jl
sub
adc
test
or
add
clc
add
clc
jno
mov
sub
pop
mov
sbb
xor
icebp
or
or
div
jne
sbb
pop
pushf
xchg
sahf
or
addl
sbb
stc
or
add
or
jmp
call
cmpsl
dec
mov
movl
mov
fstpl
jb
jp
dec
fsubl
push
pushl
pop
rcll
rcrl
dec
arpl
jo
pop
or
jb
test
pop
push
and
jns
dec
cli
rorl
sub
sarl
sbb
push
ja
jnp
int3
in
roll
sarb
imul
in
push
fimull
fxch
add
lds
fadds
add
lea
add
lret
jb
mov
xchg
mov
roll
fsubl
int3
int
dec
add
rorb
cmp
mov
pop
or
dec
repnz
jmp
cmp
das
sahf
roll
add
movsl
or
int
xor
xor
sub
mov
aas
ds
je
dec
adc
lock
addr16
lea
mov
push
lea
push
xor
mov
ljmp
fsubl
xor
pusha
mov
jecxz
lock
and
imul
xchg
xchg
sbb
xchg
shlb
and
xchg
mov
test
jmp
mov
lret
sbb
int3
cmp
jae
sub
loopne
pop
push
xchg
adc
or
int3
adc
fldcw
inc
sub
xor
add
push
push
cmc
mov
fildl
icebp
movsl
mov
aad
mov
fcomi
push
and
out
das
dec
dec
dec
dec
lahf
incb
mov
test
add
andb
mov
or
sti
xor
je
mov
sbb
nop
jae
dec
mov
xor
fsubp
xchg
cmp
lea
sub
adc
int
cltd
lcall
int3
add
int3
mov
add
add
testb
leave
cld
jb,pn
dec
adc
cld
push
cwtl
cmp
insl
enter
or
outsl
addl
nop
or
pop
add
add
mov
rcll
test
sbb
lea
aad
roll
push
mov
je
imul
inc
mov
insl
or
push
addr16
sti
iret
adc
mov
adc
js
aaa
xor
imul
or
data16
or
or
add
andb
cmp
jmp
js
jmp
inc
pushf
adc
dec
inc
jnp
test
sub
stos
adc
test
jmp
rclb
push
pop
pushl
jmp
mov
loop
add
sarl
jle
out
in
pop
push
push
cld
mov
hlt
fcoml
mov
or
pusha
cmp
pop
lock
mov
push
out
push
push
mov
aas
bnd
mov
adc
les
cmp
jne
cmpb
ret
push
jae
lea
push
dec
mov
sbb
jl
js
popa
sbb
jnp
xor
push
jae
jbe
sahf
je
or
or
inc
pop
jns
mov
daa
fnstcw
xor
sbb
je
aam
xchg
test
push
rclb
scas
ljmp
jae
inc
jmp
push
or
icebp
sti
sub
mov
stos
and
sub
sbb
ret
sub
mov
movb
mov
adc
dec
fcom
sub
mov
ja
push
add
add
loope
fld
into
or
fisubs
add
fadd
adc
mov
in
mov
sub
mov
or
xor
xor
sbb
aaa
or
es
test
dec
pop
adc
jmp
xchg
xchg
jae
push
call
roll
push
or
mov
fisubl
pop
sbbb
in
pop
pop
jecxz
or
adc
or
add
dec
mov
or
or
xchg
ret
and
mov
arpl
jae
fwait
jb
add
psubusw
or
loope
repnz
cmp
push
mov
ret
insl
push
jbe
pushl
stos
xchg
outsb
mov
cld
je
push
mov
jle
jb
adc
and
cmp
ja
cmpb
push
push
or
or
sbb
xor
sbb
and
adc
xchg
cmp
jb
sub
cmpb
add
mov
fadds
cli
mov
add
cmp
outsl
mov
pop
push
inc
or
add
in
adc
es
add
add
fidivs
movb
aaa
jmp
mov
adc
in
fcmovnu
shlb
lea
cli
ja
cmpb
out
daa
subl
push
xor
xchg
adc
inc
pop
aaa
hlt
popa
sub
daa
lret
cwtl
mov
jno
jg
push
and
mov
xorl
mov
fcmovnb
sbb
je
xchg
push
addr16
rcrb
lea
mov
push
rorl
out
dec
pop
in
inc
aam
adc
popf
inc
xor
adc
or
dec
add
out
xor
pusha
vmwrite
push
clc
dec
test
add
mov
aad
sbb
icebp
cmpsb
pusha
or
outsb
or
fists
push
int
inc
data16
mov
cmp
loope
lods
xchg
adc
mov
scas
sub
testl
mov
dec
outsl
pop
cwtl
test
in
test
mov
sbb
cmc
pop
sub
cmp
ja
sub
bnd
cmp
mov
mov
shl
dec
cmp
jb
hlt
jl
mov
mov
dec
cld
dec
bound
je
jns
mov
mov
mov
pop
repz
ret
jne
jmp
andb
xor
test
push
sarb
dec
mov
mov
rorb
aam
inc
mov
push
mov
push
test
adc
xor
mov
js
es
sbb
pop
and
cld
push
mov
mov
ja
dec
push
sub
nop
popa
adc
test
push
dec
sub
cmp
xor
sbb
loopne
es
or
xorb
and
adc
push
mov
cld
and
push
cmp
cld
push
mov
fimuls
cmp
mov
cmpsl
popf
dec
enter
or
sub
mov
mov
sub
lods
or
pusha
lods
arpl
in
inc
iret
sbb
jbe
in
push
pop
mov
add
inc
aam
add
xchg
das
mov
call
jge
int
data16
inc
lock
test
outsl
pop
cmpsb
movl
das
mov
or
push
aaa
dec
test
stos
sub
adc
push
fsubr
sbb
shrb
dec
add
fucomi
jbe
repnz
scas
jge
xor
push
jg
push
push
cmpb
jne
inc
xorl
push
adc
push
jo
mov
cmp
jne
xchg
sbb
sbb
les
out
sub
movsb
das
sbb
mov
xor
push
xchg
dec
retw
push
js
jle
arpl
or
mov
mov
popf
scas
xorb
sarl
cmp
rorb
mov
enter
or
fldenv
adc
lock
mov
add
dec
inc
loop
imul
aam
push
cmp
jmp
mov
mov
rclb
stos
xchg
dec
and
lods
in
pop
or
dec
sbb
les
cmpsb
cmp
add
inc
fiaddl
mov
data16
or
mov
adc
push
or
push
sbb
or
ds
cli
or
mov
insl
cmpsb
int3
cmp
mov
push
cs
inc
adc
push
mov
push
and
add
lea
xchg
or
mov
add
jns
mov
lcall
je
add
pop
test
push
push
jns
es
scas
sub
rolb
pop
cmp
push
inc
jmp
insb
dec
sbb
ss
popa
push
in
bound
xchg
popw
push
push
ret
xchg
pop
dec
ja
cmc
sub
jle
mov
jle
mov
lea
fwait
and
pushl
sub
add
lods
or
add
adc
push
mov
icebp
or
push
inc
ss
rcr
pop
sbbl
and
cmp
jmp
jmp
fildl
insl
pusha
jl
mov
sbb
sbb
popf
sbb
stc
fstps
pop
ljmp
adc
flds
or
adc
scas
adc
jecxz
int3
inc
ficompl
bound
inc
out
cmp
and
adc
add
fisubl
cs
pop
cmp
mov
lahf
add
or
jbe
pop
pop
mov
jmp
push
jo
jmp
push
fmuls
push
cld
jae
out
call
sub
or
js
shl
fisttps
xchg
pop
sbb
sbb
fisttps
and
add
add
adc
fwait
mov
pop
call
andb
adc
in
push
inc
adc
mov
push
adcb
jns
pop
cmp
icebp
int
fcoms
filds
sar
imul
xchg
mov
movsb
jnp
pop
call
add
lret
pop
scas
lock
les
lock
dec
neg
mov
jp
add
adc
pop
pusha
sbb
inc
mov
movsb
das
push
int3
mov
xchg
xchg
xor
push
push
mul
int3
sbb
dec
ss
xchg
scas
or
dec
call
sub
repz
mov
daa
xchg
and
jl
xchg
sbb
adc
sub
push
or
imul
test
xchg
sub
dec
pop
or
push
cmp
mov
lea
add
aam
popa
sbb
cmpsb
mov
sbb
xchg
inc
pop
jo
rolb
mov
or
call
push
dec
and
sbb
inc
dec
scas
inc
mov
push
fisubrs
sbb
orb
lea
jae
lock
jmp
jo
movsb
movl
adc
mov
dec
mov
call
les
test
sbb
mov
mov
and
push
out
add
mov
test
jmp
sub
and
sub
add
add
and
aad
and
cld
push
mov
out
andb
into
aam
cmp
mov
jmp
push
fdivl
mov
pop
jo
popf
shrb
test
aas
lea
sti
add
pop
lods
push
mov
fsts
ja
cltd
add
mov
dec
mov
lea
sub
push
or
add
mov
faddl
jo
pushf
test
dec
lock
cmp
xor
fistpl
jns
mov
jns
shrb
add
insb
adc
sbb
fmuls
arpl
add
xchg
push
dec
jno
dec
pop
in
cltd
rolb
or
and
mov
lcall
sbb
dec
lea
inc
rclb
popf
shrb
cmp
outsb
sbb
push
jno
lods
fcmovb
xlat
fwait
inc
mov
mov
dec
pop
mov
out
into
pop
and
movsb
lar
sbb
cmp
fcoml
xor
js
dec
or
insl
jno
xchg
call
es
and
cmp
dec
cmp
dec
xor
inc
and
adc
dec
mov
and
xchg
push
mov
outsl
add
pop
loopne
jecxz
push
lea
sbb
hlt
xchg
add
push
mov
and
and
aas
loope
es
int
das
mov
push
mov
push
lsl
cmpsl
lahf
dec
pop
mov
je
mov
pop
aam
je
dec
cmp
loope
test
xchg
les
iret
fists
js
xor
dec
adc
call
mov
cs
sarl
stos
dec
cmp
push
cmpsl
cli
in
cmpsl
je
dec
sarb
fldt
shlb
inc
or
add
adcl
das
gs
pop
cmp
ljmp
mov
das
sub
ss
test
fcmovnu
cmp
push
popf
jle
mov
add
mov
mov
pop
fiadds
inc
cmpl
or
out
xchg
jge
mov
das
xor
mov
fcompl
mov
imul
sbb
loopne
inc
inc
pop
push
or
or
push
xchg
xor
push
inc
push
mov
add
pop
sub
sbb
aas
sbb
add
out
xor
adc
or
adc
and
lock
pop
addb
push
xchg
adc
js
pop
and
push
xchg
imul
mov
jb
and
add
mov
roll
inc
loopne
loopne
adc
loopne
lret
mov
ds
mov
leave
add
jmp
imul
sarb
mov
in
stc
lock
xor
sbb
in
movsl
adc
add
loop
or
sarl
mov
call
push
and
mov
outsl
jne
push
in
add
cs
pop
out
add
out
mov
jae
jge
pop
xchg
comiss
adc
shll
jnp
or
in
mov
movsl
push
pop
adc
repz
push
dec
mov
std
jmp
add
cmp
jne
ret
decl
adc
cli
add
xchg
and
inc
mov
sarb
adc
cmp
dec
lock
inc
repnz
jnp
cmp
sub
mov
or
imul
lcall
js
je
test
pop
lea
dec
testl
push
pusha
incb
mulb
je
adc
mov
jle
cmpsb
xchg
dec
add
add
add
fistpl
data16
cs
mov
pop
mov
mov
mov
inc
and
pop
mov
stos
rcl
scas
add
test
pushl
int
push
adc
mov
xor
aas
inc
mov
pushf
testl
sbb
imul
dec
jae
in
add
or
cwtl
cmp
fildl
inc
add
ret
or
insb
arpl
stos
xor
push
fldcw
and
mov
mov
push
rorl
dec
xor
adc
mov
mov
inc
cmp
push
mov
cwtl
push
arpl
inc
nop
aaa
or
xchg
or
cmp
inc
das
in
mov
or
dec
mov
movsl
loopne
or
xchg
add
mov
pop
sub
xchg
es
push
adc
push
inc
lcall
addb
lret
mov
sbb
stos
add
mov
add
hlt
icebp
rorb
test
pop
jl
push
addl
adc
mov
aaa
ficoms
mov
dec
adc
ljmp
adc
dec
or
and
out
cmp
or
lock
jecxz
jmp
jnp
arpl
lahf
lds
xchg
inc
ds
add
jle
xchg
jnp
test
xchg
xor
insb
pushf
push
jb
insl
popa
mov
cmp
sbb
and
lods
jb
add
jecxz
dec
test
adc
cwtl
hlt
pop
push
lret
push
jo
sub
fsub
int3
aas
daa
sahf
adc
lea
arpl
inc
shll
and
es
adc
pop
adc
mov
inc
outsb
imull
push
sbb
repnz
inc
loopne
push
pop
adc
cmp
sti
loop
and
or
call
jbe
jne
sub
fadd
addr16
and
push
add
mov
mov
xor
sub
outsb
inc
cmp
sbb
clc
cld
sbb
or
add
insb
add
loopne
and
sub
cmp
mov
test
popa
or
mov
dec
in
repnz
add
daa
xchg
xchg
lret
and
sub
sub
xor
cmp
lret
movsb
or
inc
sub
xchg
xchg
or
or
push
dec
punpckhbw
inc
mov
inc
insb
push
pop
sti
cmc
mov
xchg
out
mov
adc
add
and
pop
int3
rorb
or
leave
aam
mov
dec
mov
or
sahf
fsubrl
dec
jg
lea
inc
pop
push
ss
mov
push
pusha
mov
add
or
and
in
xchg
test
in
sbb
loopne
jns
sarb
inc
push
fs
enter
push
les
sbb
push
sub
push
loop
push
xor
aaa
adc
xorb
dec
jnp
fs
enter
inc
inc
cmp
xchg
cmp
xchg
enter
sbb
enter
or
xchg
or
or
enter
clc
add
iret
lea
mov
push
dec
call
icebp
lret
xchg
or
dec
push
orb
cmc
mov
ljmp
and
mov
in
outsl
lea
dec
inc
incb
push
add
pop
dec
aad
push
dec
and
inc
ret
inc
mov
into
cld
pop
push
in
pop
sub
das
sbbl
adc
add
outsb
add
in
add
and
pop
push
inc
and
add
or
sbb
xor
inc
sbb
sub
enter
or
pop
fisttpl
push
xor
sbb
in
and
inc
adc
adc
pushl
and
mov
xor
adc
insb
or
xor
dec
inc
add
pop
push
and
shrw
sbb
inc
ljmp
dec
and
cmpsb
sar
add
inc
push
jmp
lea
test
jmp
pop
inc
and
test
or
sbb
xchg
add
push
ja
inc
popf
je
rcrb
xor
xchg
push
and
daa
xchg
add
pop
and
or
or
push
shl
rolb
mov
fisttps
cbtw
xor
xchg
and
sub
sbb
mov
cld
adc
test
dec
push
loope
rorl
cwtl
jmp
cmp
sub
xchg
cli
adc
mov
movsl
lock
rclb
xchg
test
or
and
lods
push
add
lods
ret
mov
aad
ret
sbb
loop
push
xchg
add
add
or
or
sbb
lods
sbbb
cltd
pop
lock
fstps
shl
iret
bound
pop
inc
sbb
pop
mov
and
cld
sbb
mov
fcoml
mov
add
mov
add
cmp
mov
pop
test
cmp
sbb
daa
jge
or
cmp
and
sti
insl
push
sub
out
sub
adc
dec
js
inc
pop
cwtl
sbb
cmp
sub
adc
add
mov
lret
xchg
xor
rcll
popa
sbb
or
std
aad
mov
push
inc
das
cmp
mov
adc
jnp
mov
or
jmp
xchg
movsb
cmpb
ret
xchg
cs
add
jge
sahf
cs
mov
xchg
pusha
lds
in
jno
sbb
ret
cld
mov
icebp
andb
cli
jmp
mov
push
cmp
jae
sarl
adc
add
jmp
mov
and
or
and
pushf
sbb
pop
jno
loope
xchg
mov
mov
inc
push
dec
add
shlb
test
lea
jg
mov
pop
aam
shl
popf
xor
insb
add
adc
stos
les
rorb
and
fs
add
pop
and
fs
movsl
mov
test
xor
popa
adc
cmc
sbb
or
fs
adc
inc
dec
xchg
insb
ljmp
inc
inc
or
test
xchg
and
cmpsb
xor
jl
sbb
add
push
fidivl
and
fisttpl
fs
frstor
dec
lea
pop
outsl
and
sbb
push
mov
xchg
shrb
and
pop
add
cmpsl
ds
push
pop
or
sub
ja
ja
repz
inc
xchg
out
pop
lock
clc
xor
out
data16
sarb
popa
mov
push
subb
popf
xor
mov
mov
lcall
adc
jmp
xor
dec
adc
jne
ja
aam
adc
and
aad
fisubrl
xorl
dec
push
push
mov
xor
addl
mov
and
or
mov
lods
xor
movsb
sub
push
cmpl
mov
mov
mov
int3
jmp
push
mov
dec
dec
cmp
sarl
xchg
xor
sbb
es
adc
jno
lods
push
or
add
or
sbb
jno
sbb
jae
adc
add
push
loop
and
cmp
push
cld
dec
mov
xor
xor
sbb
dec
and
add
add
inc
test
push
sub
sti
mov
scas
sti
mov
pusha
jge
xor
push
sarb
jo
fcomps
daa
pop
add
inc
and
fcomps
pushf
inc
mov
call
adc
repnz
adc
sub
aam
or
sub
scas
movsb
in
cmp
xor
and
out
pop
movsb
mov
inc
push
inc
stos
xor
pop
orl
sub
enter
cmp
outsb
scas
push
orl
lock
and
into
jo
pusha
in
cmc
shll
rcll
sbb
dec
mov
push
push
mov
xor
sbb
mov
cltd
jns
jge
andl
jle
push
outsl
push
cmp
sub
aad
and
scas
sbb
in
add
push
call
mov
or
and
mov
sub
clc
and
inc
nop
xlat
ficoms
movswl
icebp
xchg
mov
push
cmpl
pusha
adc
in
inc
leave
inc
aam
mov
aas
pop
pop
inc
hlt
cmp
or
test
inc
mov
into
push
and
mov
ret
xor
mov
loope
test
add
ds
lret
lret
xor
jmp
sbb
add
jmp
adc
xor
bound
pop
cltd
nop
push
sub
mov
push
pop
cmp
clc
fstl
lock
les
fs
fidivs
or
add
or
idiv
mov
out
add
and
or
push
dec
stc
mov
outsb
push
loopne
idiv
adc
mov
mov
loopne
sbb
in
add
cmp
mov
loop
sub
cmp
sbb
ljmp
leave
pop
mov
icebp
sbb
mov
adc
push
jmp
call
jne
rclb
or
push
push
insl
xor
lock
and
cmp
mov
or
jb
cmpsb
push
stos
rclb
xchg
adc
xchg
enter
add
jl
push
int
sbb
leave
in
call
out
mov
sbb
add
adc
out
sub
daa
pop
nop
iret
mov
fs
push
or
mov
inc
leave
out
test
sub
sub
add
movsl
or
push
adc
les
movsb
add
or
cmpl
call
shll
js
and
or
and
movsl
push
and
inc
pop
fiaddl
in
mov
mov
xor
cli
add
mov
mov
lahf
mov
cmp
adc
cli
jl
les
pushl
mov
aad
out
cmp
adc
mov
enter
imul
pop
xchg
call
mov
mov
aas
jbe
jo
mov
cmp
lea
subl
insb
or
jmp
inc
into
sar
daa
inc
pop
jge
pop
and
out
xchg
out
add
jo
orb
andb
mov
sti
pop
mov
mov
jge
mov
shlb
xor
in
movsb
in
push
cmpsl
pop
or
mov
and
cmpsb
push
push
mov
xchg
mov
sub
mov
setne
sbb
sub
mov
mov
mov
stos
sub
cmp
sbb
and
inc
ret
cmpsb
xor
repz
int
mov
push
pop
adc
xchg
jns
pusha
mov
push
loope
inc
cmp
data16
xchg
cwtl
cmp
roll
xor
dec
jbe
xor
loope
in
dec
sbb
mov
add
pop
movsl
fidivrs
cwtl
xor
mov
rcrb
sti
jg
popa
repz
adc
add
pop
xchg
jmp
lea
mov
add
dec
push
scas
clc
and
push
xor
dec
push
jle
jne
shll
ds
mov
pusha
jecxz
sub
and
imul
shl
sbb
lods
and
lock
rcll
popa
sub
add
mov
jmp
cmp
pop
clc
sub
imul
lea
cmc
push
xor
and
cmp
push
mov
mov
inc
add
or
jo
popa
aaa
mov
add
stc
stc
adc
mov
orl
push
and
xchg
lock
adc
mov
and
add
sub
rclb
add
cmp
in
or
popf
mov
adc
andb
sub
sub
inc
or
orl
jb
inc
mov
sbb
in
push
dec
pop
mov
in
testb
cmp
pop
push
adc
mov
or
dec
or
test
sbb
adc
push
mov
mov
gs
sub
js
test
and
pop
pop
mov
out
es
push
mov
cmp
into
xchg
jno
andb
pop
and
mov
test
les
dec
lock
inc
sub
sti
je
mov
xor
aas
inc
sbb
int3
xchg
iret
test
push
shrl
sub
sbb
vmread
sar
or
les
adc
cld
idivl
shlb
jns
xchg
xor
movsl
pop
ss
and
and
dec
sub
xor
ror
mov
dec
push
imul
pop
add
pusha
push
gs
inc
fisubrs
pop
push
xor
sub
js
in
lea
test
in
xchg
test
fs
and
pop
dec
fisubl
sbb
push
sub
inc
imul
pushf
inc
out
nop
xchg
push
inc
add
lret
add
mov
popf
xor
lcall
stos
lea
mov
jmp
cmp
jae
add
mov
popf
movsl
stos
xor
or
push
inc
lret
andl
dec
jns
rorl
cmpsb
pop
pop
sub
pop
jb
fistps
cmpb
dec
push
cmp
ss
lods
sbb
loop
push
adc
imul
mov
test
sbb
or
push
ds
and
popa
sbb
nop
adc
adc
test
push
pop
movsb
mov
fs
gs
adc
cs
push
push
pushl
and
pop
cltd
dec
xorl
mov
lahf
mov
push
sbb
mov
lret
jne
sub
ljmp
mov
and
add
insb
mov
push
movb
aaa
inc
mov
clc
mov
rolb
jge
or
pop
lcall
dec
mov
sbb
adc
inc
icebp
int3
inc
sbb
fs
xchg
push
int3
push
mov
xchg
jno
pop
repnz
pop
push
pusha
loopne
or
adc
mov
or
push
nop
aas
inc
xor
xor
inc
loopne
xor
xor
and
xor
mov
into
rolb
inc
cli
test
jne
add
test
ss
loopne
paddsw
push
leave
add
fisttpll
dec
jo
push
inc
stc
ret
cmpb
dec
inc
xchg
call
sub
adc
loopne
or
gs
or
push
inc
adc
inc
jle
inc
jge
cld
or
js
jne
or
clc
mov
scas
jge
mov
or
jle
insb
lahf
jmp
xchg
rolb
enter
jmp
aam
clc
add
push
rorl
or
je
jae
lea
pop
pop
lahf
xor
aad
andl
xor
sbb
jge
mov
decl
xchg
aad
and
xchg
enter
cmp
cld
xorb
call
stc
mov
and
push
mov
mov
push
lds
bound
jle
je
loopne
out
sahf
sub
pop
jne
addb
xor
xchg
add
jne
cmpl
xor
test
mov
mov
or
lods
push
jecxz
mov
test
aam
sbb
mov
jl
and
cs
shll
sub
pop
mov
loop
add
mov
adc
dec
incl
in
xchg
mov
jmp
shlb
in
aam
inc
movsb
cmpsb
test
pop
mov
cmp
push
cltd
jae
aam
pop
push
stc
xchg
dec
ja
mov
cmp
push
pop
pusha
push
cwtl
xchg
adc
movsb
and
sub
add
adc
psadbw
add
pushf
cmp
movsb
outsl
enter
repnz
or
inc
fmuls
addb
add
mov
lahf
loopne
pop
cmp
or
mov
lret
cmp
int
call
adc
or
pop
jne
add
xchg
fdivs
xchg
xor
cld
pop
mov
push
mov
push
bound
sbb
cmc
add
rcr
sahf
fistpll
push
push
enter
iret
jecxz
mov
xor
cmp
xor
jae
and
xor
cmp
lods
push
mov
movsl
and
add
push
pop
in
lea
stc
fidivrs
or
sub
sbb
inc
cmp
jp
dec
scas
in
aas
mov
movsb
sub
push
fstl
mov
jnp
in
push
xor
sbb
xchg
int3
flds
jnp
insb
insl
rclb
sbb
inc
adc
inc
push
pop
sbb
lock
add
add
adc
sub
sub
lea
pop
cmc
pushf
test
push
sub
aaa
jp
rcr
fwait
jmp
and
jae
inc
shrl
or
lret
cmpl
js
sub
subb
sbb
call
sbb
push
cmovnp
sbb
inc
dec
push
jle
mov
xor
test
loopne
or
or
daa
jge
mov
pop
jae
and
add
or
mov
cmpb
or
add
ds
add
dec
sub
jb
xor
iret
insl
stos
movsb
hlt
mov
outsl
fs
cmp
addr16
or
xor
mov
pusha
push
mov
push
out
rolb
push
adc
add
lea
lock
adc
xchg
cmp
xor
jo
fs
mov
bound
insb
sub
push
arpl
cmp
inc
jmp
adc
ja
cmp
push
xor
push
mov
sub
icebp
in
cltd
xor
in
leave
adc
and
xor
filds
arpl
lret
mov
inc
dec
cmp
lret
adc
nop
lret
cs
push
xor
sbb
daa
inc
sub
lret
or
pop
push
test
sub
loop
enter
mov
test
pop
into
or
es
sbb
mov
sbb
cmp
push
push
sbb
cmp
xlat
add
sbb
sbb
push
inc
sahf
sbb
adc
sbb
imul
dec
jecxz
call
inc
dec
pop
add
and
insl
push
rorl
repnz
mov
and
sub
stos
sbb
xlat
and
and
pusha
int
icebp
push
pop
xchg
xor
rorb
cs
and
xlat
xchg
add
jne
mov
lcall
add
test
add
dec
cmp
cmp
mov
and
outsb
loop
ja
jns
add
mov
dec
out
sub
mov
shlb
sub
adc
outsb
or
mov
and
call
push
or
mov
pushl
pushl
lcall
adc
fwait
xor
add
jge
or
cmpsl
mov
in
add
jmp
roll
loop
cmp
ret
jne
and
or
ds
jae
aaa
xor
js
fs
add
dec
mov
add
pushl
and
leave
jae
call
js
adc
push
lea
mov
or
inc
leave
int3
loopne
insb
pushf
stos
or
sub
pop
aam
sbb
xor
cs
push
das
and
mov
movsl
pop
lods
or
sbb
adc
sub
mov
inc
xor
adc
dec
push
adc
stos
adcb
and
and
or
fdivl
adc
xor
addr16
mov
out
jp
xchg
push
inc
dec
sbb
lock
dec
je
xchg
or
vphaddwd
dec
or
push
adc
add
test
adc
ud0
jbe
push
mov
outsb
fidivl
subb
adc
mov
cltd
adc
push
test
push
aad
test
xchg
xchg
mov
adc
dec
inc
push
cltd
movsl
adc
adc
xor
dec
fcoml
and
mov
rorl
push
lods
dec
rolb
jecxz
pop
adc
mov
cmp
pop
sbb
imul
push
mov
sbb
fdivr
xor
in
loopne
sbb
jns
adc
push
sbb
sbb
in
push
push
sbb
sbbl
mov
push
sub
fimull
sub
add
add
sub
pop
mov
shrd
xor
and
shrb
call
sbb
jne
add
in
sbb
adc
imul
insb
ja
sub
sbb
and
push
sub
xlat
mov
mov
inc
cmp
movsb
and
sbb
mov
xchg
or
outsl
push
and
adc
in
lock
add
flds
jns
xor
ss
dec
sbb
push
outsl
push
jb
cmc
inc
cwtl
dec
mov
mov
lea
jecxz
sbb
mov
push
sbb
pop
mov
xor
adc
sbb
cmp
fwait
mov
xchg
adc
xor
popa
or
ss
inc
fcmovb
pop
sub
aaa
mov
add
insl
pop
mov
cmp
mov
push
inc
cmpsb
shr
cmp
add
inc
add
cmp
fwait
testl
sub
jecxz
pushf
adc
ret
jmp
loopne
and
inc
enter
fbld
loopne
cmpsl
adc
fwait
cmp
in
inc
dec
jmp
sbb
push
in
push
sarb
xor
inc
addr16
push
cmp
ss
pop
and
push
sub
lea
orb
cmp
orb
mov
adc
pop
mov
ss
ja
push
ds
movsb
mov
sub
xor
dec
or
ljmp
outsw
fcomps
cmpl
xchg
cmp
xchg
sbb
adcl
lds
daa
jb
cmpb
push
xor
clc
leave
or
orl
sarl
mov
xchg
push
adc
jmp
mov
imul
hlt
into
or
inc
sbb
int3
orl
jns
mov
jle
inc
xor
mov
mov
dec
andl
inc
push
xor
mov
and
and
push
xchg
subb
push
jmp
bswap
jb
pop
push
lret
dec
adc
lds
test
push
push
pop
fdivp
test
stc
push
lcall
sub
nop
testl
mov
cld
or
mov
dec
outsb
adc
adc
pop
mov
jmp
es
sbb
push
xor
insl
add
xchg
xor
or
ror
and
fs
fwait
lds
dec
stc
mov
inc
push
rol
or
jno
or
mov
adc
cmp
and
xor
into
inc
aaa
jo
bound
les
movsl
xchg
stos
testl
jo
out
je
jns
jle
sub
or
stc
xchg
xor
in
push
push
outsl
cmpsl
lea
and
pop
and
lea
adc
or
paddq
push
test
je
sub
inc
jge
outsb
rorl
sarl
inc
inc
push
add
mov
push
popa
cld
pop
das
push
add
dec
cmpb
or
jb
jmp
sbb
xor
and
and
decl
xor
fsubrl
aad
jg
in
pop
adc
inc
jo
xor
xchg
sbb
inc
int3
dec
and
xchg
dec
xor
and
dec
test
inc
push
push
lea
loope
enter
push
adc
or
in
aam
decl
lea
or
mov
xor
or
mov
jle
dec
inc
xor
into
sbb
mov
mov
cmpb
das
mov
cld
jmp
test
jl
cmp
and
pop
data16
loope
mov
pop
dec
push
call
cmpsb
dec
push
lods
and
ret
pushf
push
adc
and
mov
ljmp
data16
in
mov
fs
ficomps
xchg
cmpl
inc
movsb
sbb
push
or
in
pop
lret
inc
xchg
inc
xor
and
xor
inc
lock
lock
xor
repnz
dec
push
sbb
jmp
xchg
inc
mov
movsl
pop
adc
push
mov
cmc
mov
mov
dec
jo
pop
mov
imul
adc
inc
inc
cltd
adc
push
jecxz
mov
add
add
adc
jle
or
test
enter
jnp
cmp
inc
cmp
movzbl
or
pop
jne
lods
inc
imul
fs
sub
scas
push
push
mov
mov
imull
std
pusha
mov
mov
adc
bound
mov
rolb
sbb
mov
add
lret
or
loope
cmc
scas
sub
add
lods
pop
and
in
ljmp
popf
stos
cmp
and
lock
xor
push
pusha
cwtl
inc
call
dec
pop
pop
scas
sub
xchg
sub
or
or
add
jp
bound
jle
dec
dec
cwtl
mov
shl
mov
inc
jle
xor
jp
inc
mov
and
sbb
sarl
je
pop
inc
dec
sbb
inc
gs
mov
add
xchg
xor
push
imul
ljmp
movsb
xor
pop
cltd
test
push
cwtl
push
vmwrite
into
mov
fsub
lea
mov
add
sbb
std
das
js
stos
dec
cmp
jae
add
sbb
xchg
dec
inc
imul
sbb
jecxz
dec
movb
or
add
mov
push
sbb
mov
mov
add
insb
ftst
jg
test
dec
sbb
fstps
mov
lods
mov
inc
inc
add
and
and
int
ret
mov
movl
or
or
push
cmp
sub
sbb
mov
mov
mov
je
mov
cmpsb
inc
sbb
jns
in
lods
inc
push
cmp
pop
jb
mov
nop
pop
push
add
xor
das
mov
cmp
pusha
daa
or
push
mov
inc
jmp
fst
ss
lock
cmp
sub
push
sbb
filds
sahf
fildl
and
sub
jnp
dec
push
or
dec
dec
and
dec
cwtl
fs
push
adc
add
xor
jns
fsubrl
ficomps
add
sbb
xchg
out
shlb
and
jne
push
mov
fwait
add
dec
dec
inc
push
ds
and
and
cmp
enter
xchg
inc
dec
jmp
dec
mov
out
dec
mov
sub
push
push
clc
jmp
mov
push
xchg
mov
mov
dec
add
iret
push
out
out
cmc
inc
and
mov
enter
add
xor
pushf
movsb
push
mov
sub
xchg
mov
movsl
scas
pop
push
in
leave
repz
adc
sbb
cs
adcb
and
clc
stc
fsubrs
test
mov
inc
scas
loopne
xor
das
lods
inc
inc
pop
call
sbb
mov
xchg
pop
add
mov
xor
mov
jp
ret
inc
das
test
pop
add
cmp
push
push
push
dec
inc
add
shll
rcrb
jl
outsl
mov
add
mov
cmp
pushl
mov
cmp
je
cmp
je
cmp
je
cmp
je
push
sbb
clc
inc
pop
addb
pushf
imul
adcb
push
jge
pop
setns
clc
mov
and
add
fs
lea
cld
test
sahf
fimuls
mov
add
repnz
push
sbb
mov
mov
sbb
shlb
setg
mov
cs
in
call
sub
add
adc
sub
pop
xchg
int3
incb
inc
or
mov
arpl
jo
pop
imul
pusha
fs
rorb
nop
add
add
daa
xchg
int3
push
push
pop
xor
add
jl
pop
xchg
les
mov
jecxz
addb
sbb
mov
sbb
sbb
or
mov
test
mov
in
rolb
or
mov
pop
add
cld
mov
nop
and
push
jns
and
and
aam
lods
pop
cmp
stos
lcall
and
and
push
xor
pusha
pop
ds
nop
clc
decb
loopne
add
sbb
fistl
loope
inc
and
outsl
scas
and
pop
and
divl
es
std
subl
daa
mov
xchg
sbbl
cmp
sbb
clc
pushl
push
rolb
xchg
mov
and
pop
dec
insl
pop
iret
addr16
aad
daa
stos
add
pop
cmpsl
dec
jae
cmp
pop
pusha
dec
mov
or
cs
and
sbb
pusha
or
sbb
lods
lret
xor
cmpsb
mov
dec
inc
fsubs
pushf
pusha
or
or
push
sbb
sbb
add
sahf
xlat
jae
inc
lods
rorb
push
jns
imul
xor
inc
add
or
mov
das
rorb
aaa
leave
mov
mov
push
mov
xor
sbb
push
ret
shrb
mov
cwtl
mov
insb
mov
push
call
in
sbb
push
cmp
and
and
ds
mov
pop
ret
cmp
je
test
mov
cwtl
mov
jmp
les
mov
call
in
lea
push
add
movl
and
mov
xor
jbe
mov
lahf
dec
inc
push
lea
mov
test
jp
adc
mov
pop
cmp
mov
imul
inc
add
jle
jbe
and
lea
and
iret
push
dec
jne
or
inc
and
inc
sub
mov
push
cmc
adc
or
cmp
test
mov
push
pop
xchg
in
sar
cmp
sbb
pop
jnp
popf
imull
mov
add
adc
push
test
pop
push
xchg
add
lock
and
pusha
loopne
inc
cld
xor
sub
test
fwait
sub
movsl
add
out
inc
adc
stos
insb
sub
test
pop
call
inc
dec
xchg
push
cltd
cmp
lret
or
sub
sub
xchg
xchg
xor
cld
sbb
sar
push
clc
push
add
push
andl
xchg
xchg
xchg
aas
push
pop
or
adc
dec
cmp
sub
xor
cmp
jne
push
add
jp
xorb
fldt
inc
js
out
jecxz
js
add
loop
cmp
dec
in
and
mov
add
outsb
mov
gs
push
mov
les
cli
add
arpl
out
adc
xor
clc
xchg
jbe
mov
enter
sub
shrl
add
push
pusha
mov
sbb
pop
sbb
sub
sub
lahf
pop
popf
sbb
add
xchg
jp
jne
cld
into
popa
addr16
cmpsb
adc
or
push
sbb
lods
dec
push
sub
sahf
rol
push
xchg
test
call
pop
or
mov
jle
cmp
jle
pushl
xchg
mov
xor
test
mov
cmp
movsl
xchg
pop
lea
pop
add
adcb
and
adc
fidivrs
sub
pop
lret
add
movb
int
mov
jnp
jmp
add
insl
pop
cmp
mov
push
shlb
or
add
adc
rcl
lcall
xor
dec
add
mov
aad
push
inc
and
icebp
and
cmp
mov
arpl
mov
lea
jne
out
lock
iret
addr16
je
or
mov
addr16
jb
cmp
aas
jbe
cmp
cmp
xlat
adc
adc
add
jo
or
jnp
je
into
add
sbb
jecxz
dec
push
mov
sahf
test
mov
bound
aaa
pop
sub
mov
fiadds
loop
pop
jne
xchg
test
int3
sbbl
jg
sub
push
pop
add
xlat
or
jg
leave
ret
xor
mov
cmp
jnp
in
movsl
cmc
jp
or
adc
fbstp
xchg
mov
lock
lea
adc
add
rolb
loop
scas
add
xor
push
out
push
sarl
sbb
lea
xchg
aam
push
mov
xchg
add
stos
cmp
mov
lret
aaa
pop
push
das
int
test
rcr
dec
jecxz
scas
xchg
mov
aam
fisttpll
push
jo
hlt
push
inc
pop
lcall
xor
push
mov
dec
adc
ficoml
insb
je
int3
push
dec
dec
mov
xor
decl
aam
dec
sti
iret
or
inc
pop
jmp
push
add
cmp
dec
and
push
push
pop
leave
fwait
inc
gs
out
jmp
outsb
sbb
fldl
xchg
push
dec
setl
out
inc
loope
pop
sub
inc
les
dec
xchg
sbb
adc
and
aam
dec
mov
mov
mov
add
rol
dec
sbb
daa
adc
xchg
inc
in
sbb
imul
lock
outsb
xor
rcll
dec
sbb
daa
aad
fstpl
test
jae
mov
andb
dec
mov
push
mov
nop
sub
pmaxub
jmp
add
call
jge
mov
mov
sahf
mov
or
push
mov
fnsave
jns
test
push
jmp
enter
xchg
push
dec
movzbl
cli
loopne
cmp
push
mov
xchg
dec
xchg
pop
or
sbb
lock
mov
pop
data16
cmpb
jg
lods
in
xchg
xor
or
sbb
andb
lret
hlt
add
sub
loopne
or
inc
test
mov
push
jb
pop
test
fldl
or
sti
mov
mov
pop
push
or
and
outsb
jne
cmp
pushf
shlb
and
lock
in
sbb
cs
adc
sbb
into
dec
loop
insb
xlat
dec
or
sub
or
leave
jo
lods
mov
xor
loopne
daa
cmp
sub
inc
pop
push
or
push
fistpl
fstl
inc
ret
addr16
cmp
stos
xor
xchg
repz
test
pusha
mov
jns
push
jo
clc
lock
push
jno
jbe
inc
and
jnp
mov
ret
and
fiaddl
sahf
in
cwtl
adc
ret
int
in
or
add
mov
sbb
add
xor
rorb
adc
dec
cmp
and
xor
mov
and
mov
add
lock
scas
dec
pop
lods
mov
sub
aam
popf
dec
or
and
cmp
or
lods
or
aas
push
scas
adc
sbb
push
push
sbb
or
push
push
push
les
adc
add
or
push
mov
cmp
lea
xchg
cs
fidivs
dec
xor
inc
cs
jbe
ljmp
into
push
mov
fwait
roll
fcoml
pop
pop
rorb
ds
out
sbb
sbbl
je
out
lcall
inc
pop
mov
add
inc
push
and
add
mov
aam
sbb
push
jmp
pusha
jmp
fnstenv
pop
jmp
insb
pop
cmp
add
adc
dec
pop
test
enter
loopne
mov
xchg
jmp
push
sbb
das
and
mov
popa
push
xor
xchg
xchg
push
ja
inc
xchg
push
mov
add
imul
jecxz
int
inc
pshufw
sbb
fmull
adc
ss
jle
and
ficoml
pop
mov
in
jg
or
cmp
pop
jne
inc
sub
xchg
add
and
inc
aaa
cltd
inc
mov
push
mov
cmovnp
and
xorl
lods
add
js
es
sbb
test
push
sbb
bound
fmulp
lea
arpl
addr16
in
in
sbb
lock
out
pop
add
call
cs
and
mov
push
test
gs
flds
int3
pop
fmull
and
xchg
adc
arpl
icebp
rorl
mov
dec
pop
xor
cmc
mov
dec
mov
insl
sub
add
sub
es
jb
inc
and
fcos
out
sub
std
daa
in
cltd
nop
shr
call
std
or
vunpcklps
loop
shrb
inc
jne
mov
xlat
adc
cld
pop
enter
aas
sub
and
add
sub
mov
popf
or
push
cli
pop
xor
imul
fcmovnu
sub
mov
aam
sbb
push
inc
fs
adc
arpl
sbb
push
dec
mov
xchg
mov
jno
je
jge
lods
sbb
dec
mov
ss
push
xchg
jae
add
cwtl
sbb
mov
movsb
fnstcw
push
out
sbb
xlat
xchg
lret
adc
adcb
pop
cmp
adc
xor
or
cmp
in
jns
aaa
xorl
jae
jge
dec
push
mov
sub
inc
cli
mov
fwait
dec
push
rcl
lcall
aaa
adc
sub
pop
inc
sti
ja
dec
sub
pusha
sub
sub
repnz
sbb
sub
repnz
cmp
jge
adc
sbb
and
inc
pop
xor
leave
fs
pop
pop
dec
jle
inc
dec
mov
add
or
cmc
add
int3
add
test
jge
and
adc
fneni(8087
dec
xchg
xor
roll
or
mull
pusha
mov
lods
push
loopne
aam
outsl
dec
inc
call
in
lods
nop
mov
inc
pop
and
pop
cwtl
and
mov
pop
mov
pushf
cmp
xor
sbb
stc
add
sub
movsb
xor
lahf
push
cmpl
sti
inc
push
xchg
fldlg2
loop
pop
pop
pusha
push
shrl
xchg
ror
and
sbb
sbb
mov
loop
adc
xchg
js
add
xchg
enter
or
inc
mov
mov
add
sbb
add
jg
je
jne
push
sbb
enter
and
loopne
rolb
sbb
jmp
push
arpl
sbb
xchg
in
test
sbb
add
hlt
xchg
fiadds
dec
pop
rolb
cmpb
inc
nop
dec
mov
add
out
das
stos
lock
movb
push
and
call
clc
sub
cmp
pop
jl
pop
je
insl
xorb
cmp
sbb
dec
rolb
push
cmpl
and
inc
xchg
lcall
sub
out
aam
cmp
sub
mov
test
fisttps
insb
pop
or
jg
inc
jne
cmp
popf
int3
adc
or
mov
push
sti
or
orl
repz
icebp
test
and
lcall
adc
and
enter
mov
shll
cwtl
dec
adc
movsl
jbe
clc
push
aas
jp
jge
pop
stc
inc
add
sub
push
mov
mov
dec
les
xor
push
divl
in
pusha
add
nop
xor
dec
and
jmp
cmp
jne
xor
inc
pop
in
rcrb
out
stos
push
mov
sahf
stos
add
xchg
test
or
push
add
inc
push
decb
cmpsl
cmp
je
jmp
lahf
and
or
das
pop
inc
add
jg
and
sub
add
add
and
cmp
add
gs
push
sbbl
push
push
sbb
test
push
push
push
pop
imul
adc
mov
inc
mov
mov
push
xchg
lods
or
int
test
push
loope
in
je
imull
pop
jno
push
and
rorl
sbb
test
sbb
dec
cmp
sub
mov
jne
mov
enter
rorb
and
testb
leave
pop
inc
ret
push
dec
cmp
repnz
or
adc
test
or
jge
test
or
sub
add
inc
lods
pusha
nop
fildl
mov
movl
add
lds
mov
fnstcw
inc
adc
pop
push
jo
subl
adc
sbb
inc
mov
sbb
jae
js
loop
stos
add
idivb
nop
mov
add
dec
addb
cmpl
sub
in
adc
add
push
add
push
or
jne
dec
dec
push
cmp
call
ret
pop
cmp
sub
cmpb
cmp
add
sub
lods
mul
add
fsubl
test
gs
fdivr
sbb
add
sub
pop
add
pop
mov
jmp
shrl
cwtl
and
cmpsb
adc
lea
sub
ret
sub
pop
push
clc
outsl
and
sub
xor
cld
in
fiadds
mov
cmp
rolb
and
daa
xor
mov
pusha
cltd
xchg
mov
les
and
cltd
test
int3
pop
push
rolb
xor
inc
ja
or
or
sub
or
jbe
dec
adc
cmp
mov
jmp
mov
add
xchg
inc
fdivrs
jp
mov
in
jl
xor
xchg
nop
sub
and
cmc
ds
push
dec
inc
ret
push
addps
dec
xchg
pusha
int3
push
iret
cld
loop
xchg
testb
aaa
xchg
and
jne
xlat
and
sbb
pop
out
or
stos
push
cmp
call
pop
jns
movsl
iret
das
in
test
push
mov
add
int3
je
outsb
dec
mov
mov
jecxz
sub
out
jge
jmp
pop
clc
enter
ja
push
or
mov
mov
mov
add
xor
jmp
cmp
dec
sbb
or
mov
lods
xchg
cli
xor
push
push
jbe
add
dec
sub
inc
or
jne
and
fmul
addr16
in
je
jnp
and
xchg
mov
mov
mov
repnz
and
jae
repz
rorb
lock
or
leave
cltd
jl
pop
dec
loop
in
xchg
pop
ja
js
sbbw
mov
add
inc
or
sbb
or
ret
or
mov
addl
and
inc
std
inc
jo
push
call
pop
push
arpl
sbb
push
dec
scas
imul
js
or
in
loop
bound
cmp
xchg
adc
fisttpll
lea
mov
push
mov
pop
mov
or
sarb
xchg
ss
cmp
cld
sub
push
push
and
xor
je
dec
or
jl
adc
jecxz
adc
cs
sub
xor
xchg
mov
or
pop
out
nop
dec
push
and
push
jecxz
sbb
xchg
or
or
inc
lock
mov
mov
js
jb
push
push
mov
sub
sbb
sub
aam
add
jge
mov
inc
push
mov
mov
repz
in
pusha
pop
dec
out
and
cmp
je
jmp
push
and
call
add
jle
mov
cli
mov
cmc
cmc
lret
sbb
mov
pop
gs
in
inc
inc
push
outsb
bound
pop
or
push
xor
mov
push
stc
addr16
mov
sbb
mov
punpckhbw
xchg
or
loop
mov
int
cs
adc
sub
fs
jge
push
or
hlt
and
icebp
xor
fadds
sbb
xor
jbe
jl
cmp
or
pop
das
sbbl
sbb
test
pop
in
clc
insl
pusha
das
mov
push
mov
adc
cmp
xor
add
cmp
mov
push
test
pushf
xor
int3
pop
and
cmp
rclb
or
insb
push
push
push
jno
xchg
push
push
icebp
and
addl
stos
push
loopne
jne
push
sub
mov
cmp
out
adcl
and
aas
cltd
sbbb
mov
jl
subl
and
lock
es
ficompl
add
xor
sub
ficoms
sub
push
inc
mov
add
add
push
jecxz
in
sbb
add
mov
ret
imul
repnz
cmp
and
cmp
mov
loop
inc
pop
nop
xor
add
xchg
push
add
xchg
sub
push
sub
push
xor
dec
dec
add
inc
or
mov
cwtl
pushf
cltd
and
mov
cwtl
testb
stos
rolb
repnz
push
aam
cmp
hlt
mov
add
mov
and
pushf
inc
sbb
iret
mov
rcll
inc
int
les
push
adc
rorb
nop
or
pop
pop
ret
rorl
push
fxch
fst
or
inc
pushf
not
push
rorl
cmp
push
inc
dec
shr
imul
push
push
divb
aad
jae
pop
cmp
push
std
jne
dec
aam
jne
bound
add
pop
sub
imull
xor
mov
mov
andb
outsb
test
pop
add
cmp
fsubr
xchg
out
push
idivb
mov
mov
sub
cmpsl
sbb
mov
jge
xor
adc
jmp
movsb
shlb
cmp
movsl
pop
xor
inc
jmp
xor
and
stos
xacquire
mov
sbb
clc
mov
pop
mul
xor
cmp
adc
setb
or
push
cmp
test
sbb
adc
scas
mov
inc
mov
je
cmpsl
xor
cltd
pop
inc
dec
ret
outsb
jns
sbb
add
or
lods
sbbl
jo
xor
sub
dec
dec
pushf
or
in
mov
or
rclb
pop
and
sbb
inc
adc
pop
jge
insb
add
cli
dec
loopne
inc
push
xor
push
or
sbb
pop
or
stos
rorl
sarl
loope
ret
inc
add
mov
dec
mov
push
sbb
push
and
es
shl
xor
push
xor
nop
jns
or
call
rclb
sarb
out
inc
adc
rcl
clc
mov
push
lea
aaa
dec
adc
paddusw
pop
inc
adc
loop
je
arpl
xchg
pop
pushf
in
dec
cmp
mov
push
push
sub
aam
lea
jecxz
bound
mov
lds
push
xor
xchg
nop
int3
add
inc
loopne
lock
mov
test
pop
inc
mov
mov
shll
or
shrl
mov
mov
cmpsb
pop
jnp
sar
cmp
jb
push
adc
adc
or
jae
or
loopne
push
adc
loop
cltd
mov
jl
mov
or
xor
nop
xchg
or
add
test
xor
mov
mov
lea
dec
js
idivb
lods
xor
inc
sub
jo
sbb
call
icebp
aad
rclb
xchg
adc
or
stos
loope
xchg
xor
xchg
rclb
push
add
dec
push
adc
je
popf
sbb
xchg
jo
add
insb
lock
hlt
sub
xor
adc
test
xchg
aad
or
scas
mov
call
pop
push
mov
dec
inc
jae
jmp
pusha
aam
push
pusha
push
adc
push
push
mov
cld
xor
das
repz
add
mov
and
xor
lfs
inc
jmp
aam
add
jmp
in
push
fnsave
lahf
popf
sbb
push
jl
adc
inc
push
mov
pop
mov
sub
or
pop
pop
and
mov
adc
movb
not
xchg
push
dec
jo
sbb
enter
inc
or
jns
ret
ljmp
sahf
out
repz
push
repz
cmp
or
push
or
in
lret
dec
insb
jne
or
cmp
push
push
repnz
sub
add
fidivrs
or
mov
loopne
sub
mov
fldt
aam
in
push
sub
cmp
call
add
or
or
and
push
or
icebp
sbb
cwtl
mov
inc
mov
in
pop
fwait
push
adc
dec
pop
mov
jmp
push
iret
dec
pop
add
and
or
add
inc
adc
jb
pop
inc
jge
jl
rclb
je
ficoms
dec
insl
fsubrl
into
subb
dec
push
push
pop
xor
sbb
xor
jecxz
adc
add
xor
xor
xchg
out
mov
dec
sbb
jnp
or
jmp
pop
scas
es
stos
push
add
mov
pop
ds
andb
or
dec
loopne
adc
or
cmp
or
mov
mov
outsb
iret
dec
testl
or
test
das
or
jno
pop
sub
adc
and
add
add
xchg
mov
jb
sbb
add
push
add
pop
or
gs
nop
add
xor
push
popf
flds
adc
inc
and
add
lcall
fs
imul
idivb
fsubr
jno
enter
xor
add
or
repnz
sbb
dec
dec
sbb
inc
mov
scas
sub
mov
rcrb
push
les
fidivrl
xchg
int
adc
or
add
sbb
pushl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
cmc
shlb
push
pop
ret
ffreep
and
call
dec
or
sbb
adc
add
adc
and
inc
lds
jne
pop
push
xor
incb
shll
dec
pcmpeqw
popa
mov
or
adc
fiaddl
es
imul
add
sub
push
outsb
popa
add
fbld
fisubrl
data16
lret
sbb
cmp
dec
gs
jne
cs
ror
test
lcall
add
cli
push
ja
jbe
js
add
fsub
xbegin
shll
mov
mov
mov
data16
cmp
dec
das
sbb
ret
inc
or
add
jae
adc
fiaddl
loope
jb
xor
mov
test
in
cmp
rclb
sub
movsl
inc
sbb
scas
mov
inc
lock
push
rol
ljmp
sbb
ja
add
repz
pop
in
cmp
pop
jne
lea
add
popa
inc
bndstx
inc
xlat
popf
ss
mov
lds
push
clc
out
test
pop
adc
jge
andl
push
outsb
adc
jge
push
add
add
mov
mov
incb
leave
dec
ja
repnz
out
add
cmp
stc
or
push
ljmp
stc
stc
mov
jnp
imul
fnstcw
add
insl
pop
jmp
adc
sub
pop
mov
jmp
sbb
stc
lock
ret
and
cs
dec
pop
sub
xorl
inc
xchg
ja
fwait
pop
neg
push
inc
lahf
sub
xor
sub
jne
push
sub
mov
push
call
test
js
push
cmp
xchg
or
adc
rcl
cmp
xor
test
push
mov
jne
lret
in
loopne
pusha
clc
insl
mov
movsl
cmp
adc
jg
loop
jmp
cmp
mov
or
arpl
cwtl
xor
sub
popf
bound
les
addl
les
mov
mov
movl
jno
push
fcomip
jbe
adc
jp
add
adc
mov
or
adc
inc
dec
out
xor
cmc
fcoms
jmp
or
add
das
or
and
mov
adc
push
or
sub
dec
loopne
push
fadd
sub
xor
int
jo
addr16
pop
pop
and
inc
fcoml
or
rol
jecxz
sub
and
arpl
add
out
cwtl
notl
xchg
and
sbb
lods
pusha
mul
dec
push
mov
je
and
pusha
or
xor
pusha
insb
insb
push
push
test
daa
mov
ja
rcrl
pop
icebp
pop
testl
pop
cmp
je
testb
mov
in
rorl
lds
cmp
je
sbb
adc
or
lock
push
sub
sub
cmpsl
js
pop
xchg
jmp
lea
sbb
outsb
dec
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
imul
adc
sbb
xchg
shll
push
fcompl
int
mov
sahf
movsl
push
pop
test
into
add
push
mov
mov
lea
lods
cmpordps
cs
sub
adc
xchg
es
mov
sub
loopne
cmp
push
mov
jl
sbb
sbbl
inc
sub
sahf
shlb
shlb
bound
add
roll
dec
xlat
test
je
test
ljmp
sbb
adc
pop
jbe
lcall
adc
push
sbb
out
sbbl
adc
adc
adc
clc
pushf
push
jge
jne
lods
cmovg
push
xchg
sbb
sbb
and
mov
push
aad
dec
popa
pop
addr16
fiaddl
pop
mov
xchg
push
xor
cld
test
jbe
call
ja
xlat
push
xchg
stos
or
xchg
mov
das
pop
enter
mov
inc
movsb
pop
jl
push
push
test
sub
pusha
loopne
je
rcll
fwait
sbb
add
push
xchg
push
and
and
push
lea
loope
rclb
add
sub
inc
push
lret
push
add
mov
push
push
mov
dec
lods
add
adc
pushf
shl
in
sub
xchg
or
and
jecxz
dec
out
loop
adcb
ss
lock
dec
jmp
rolb
cmp
pop
arpl
sbbl
imul
jmp
adc
insb
shlb
fmul
inc
std
mov
mov
inc
push
add
cmpb
cmp
or
fimull
push
xor
lea
dec
sbb
pop
loopne
or
and
sbb
or
repnz
subl
jg
fucom
pop
adc
sbb
test
push
pusha
mov
ret
push
adc
pop
pusha
pop
sbb
ljmp
loopne
xchg
adc
and
xor
fcompl
pop
cmp
cmp
andl
fistl
pop
or
push
into
jecxz
lock
addl
cmp
ds
aam
push
push
xchg
jnp
aad
punpcklbw
push
test
movsb
and
lea
cmp
leave
pop
sub
inc
adc
or
cmp
or
mov
inc
sbb
push
cmp
fdivrs
adc
fsubr
jo
jmp
push
scas
add
and
mov
push
bound
push
jbe
test
push
add
mov
or
scas
shlb
sub
mov
push
pavgb
jo
lret
pop
push
pop
xchg
xor
mov
vpmacssdql
dec
in
mov
loopne
mov
mov
mov
sbb
jecxz
pop
es
out
jo
push
cli
cmpsb
pop
pop
lahf
mov
push
xchg
sahf
dec
insb
out
cmp
push
xchg
popa
cwtl
bound
jo
lock
mov
loope
mov
mov
inc
cmp
adcb
dec
mov
mov
ljmp
ret
jg
mov
jge
mov
adc
imul
and
in
add
push
mov
or
das
mov
dec
fwait
adc
cmp
push
dec
dec
incl
lea
push
push
inc
icebp
rorb
dec
push
and
cs
imul
push
push
pop
rclb
scas
mov
xor
test
orl
push
push
mov
in
xor
andl
addr16
add
cmp
movd
lock
sbb
add
and
mov
cmp
or
setl
inc
mov
add
adcl
xchg
cmp
sbb
add
jns
push
cmp
loopne
inc
pop
push
mov
sbb
pop
sub
xchg
js
sbb
ret
adc
lock
pop
xchg
decl
sub
xchg
xor
pop
cmp
rdmsr
sarb
stc
dec
stos
fnsave
mov
xchg
inc
mov
ret
fidivrl
xor
call
insl
mov
adc
pop
mov
pop
ret
adc
cli
jns
ljmp
mov
xor
push
xor
sub
push
or
jo
push
push
jo
mov
pop
jmp
xchg
shrl
mov
mov
mov
cwtl
inc
inc
add
or
xchg
add
sbb
mov
push
and
filds
xor
mov
sub
xor
in
sub
and
filds
add
ficompl
rclb
xor
or
xor
mov
jb
xchg
mov
pop
mov
cmp
inc
adc
xchg
add
xor
pop
jp
mov
popa
adc
dec
sub
insl
or
addl
dec
mov
xchg
adc
add
into
sahf
jle
mov
pop
inc
xchg
dec
jno
andl
or
pop
inc
pop
scas
mov
sbb
jo
add
push
or
lret
and
addr16
pop
mov
ret
mov
or
out
ss
push
inc
add
das
rcr
lcall
or
sub
dec
cmp
pop
pop
pop
pop
ret
shr
dec
jge
inc
idivb
mov
sbb
jb
adc
mov
and
gs
push
in
pop
adc
test
popf
js
jl
and
pop
jae
cltd
add
or
pop
hlt
pop
mov
dec
cltd
ss
cmp
dec
xor
pop
push
xchg
icebp
dec
cwtl
sbb
adc
sub
test
xor
es
sahf
adc
dec
and
enter
adc
ret
mov
inc
mov
or
adc
push
ds
subb
and
jl
sbb
push
inc
dec
cmp
mov
loope
jl
or
movsb
push
je
mov
adc
push
mov
xor
shr
pop
add
icebp
jno
jecxz
adc
pop
inc
push
inc
repnz
call
pop
push
pop
fdivr
inc
pop
pusha
add
cmp
and
pop
addl
pop
dec
push
sahf
pop
pop
fbstp
divb
pop
xchg
jecxz
push
es
lret
mov
fmuls
add
js
sub
mov
add
add
add
cmc
jp
cmp
add
pop
js
sbb
testb
push
add
outsl
test
xchg
jae
lahf
add
loop
and
mov
dec
sbb
sti
jl
loope
xor
xchg
push
sbb
xor
or
pop
mov
fldl
std
ss
mov
mov
push
adc
dec
lret
xor
cmp
mov
sbb
test
inc
add
inc
outsb
stos
xor
add
mov
mov
jp
add
and
cmp
xorl
push
popf
nop
lahf
nop
and
outsl
lods
mov
mov
sbb
aas
push
fnsave
fistps
dec
pop
or
pop
fldl
rol
fisttps
sbb
lods
cmp
jne
jp
cmp
pop
mov
dec
and
out
push
hlt
imul
loop
pushf
push
push
and
ret
and
or
xor
mov
nop
jmp
lea
fmul
lods
fidivl
sub
nop
not
pushw
pushf
imul
or
adc
aaa
pusha
sahf
out
movsb
adc
in
stos
add
mov
adc
cld
add
mov
inc
mov
jo
divl
aad
or
in
testl
adc
push
in
ja
ret
jmp
and
fcomps
ja
fwait
jmp
nop
push
push
das
sbb
dec
mov
sbb
or
negl
cwtl
pop
xor
mov
push
xlat
mov
add
je
mov
rorl
sub
add
dec
pop
or
push
push
mov
ds
or
jnp
dec
pop
pushf
xor
addr16
xor
add
add
jb
jbe
cmp
sbb
pusha
add
in
mov
pop
add
nop
inc
arpl
sbb
test
xor
fiaddl
cmp
gs
push
jns
movsb
adc
shlb
incb
daa
add
or
inc
mov
lods
es
lods
or
add
xchg
jle
stos
in
pop
arpl
inc
add
xchg
xor
test
fidivrs
and
pop
data16
ret
jne
or
lahf
cmpsl
ret
sbb
ds
test
ss
push
adc
mov
pushf
scas
pop
lahf
hlt
push
lods
cli
and
test
ss
popf
sbbb
fsubrl
xor
cmp
jnp
jo
adc
sbb
sbb
mov
push
dec
fldcw
in
ret
push
or
jae
and
add
xor
mov
add
cmc
inc
dec
orl
call
inc
cmp
adc
dec
cli
insb
xlat
pop
ret
lret
mov
pop
shlb
sub
ret
add
pop
mov
adc
sbb
out
ds
adc
add
loopne
and
imull
jne
int3
xchg
jne
cmp
xchg
lods
mov
mov
pop
pop
outsb
push
push
test
dec
arpl
pusha
pop
aas
add
bound
push
pop
and
aas
pop
loopne
mov
push
mov
jae
mov
xchg
and
inc
cli
push
cld
jns
push
lahf
or
aas
dec
in
jge
movl
adc
inc
insb
shr
inc
add
jo
mov
and
adc
push
cmp
adc
aam
push
addr16
inc
or
pusha
insb
in
jecxz
cmpsb
std
rcrl
mov
ljmp
sbb
ljmp
push
aas
jno
jge
or
cmp
xor
jle
ljmp
inc
push
mov
sbb
push
pop
adc
push
pop
test
mov
sub
sub
call
leave
jnp
lods
andl
mul
je
push
in
testl
jl
mov
insl
adc
add
xchg
xchg
lock
jnp
addb
sbb
rorb
inc
cmp
sbb
mov
or
push
lea
adc
push
outsb
fucomi
pop
inc
out
movsl
addl
jo
inc
test
xchg
pusha
mov
cmpb
and
fsubrp
ud0
sarl
daa
ss
add
add
inc
jne
mov
sub
je
add
mov
ss
andb
daa
add
or
xchg
rclb
popf
jle
push
nop
add
xor
xor
push
push
mov
and
push
lea
fdivrs
mov
ret
or
xchg
inc
aaa
cmp
add
jbe
mov
jecxz
mov
fmull
mov
subb
incl
jmp
xchg
loopne
jg
cltd
insl
mov
movhps
dec
in
fidivs
cwtl
sbb
aas
sbb
or
cmp
insl
fadds
mov
jmp
adc
sbb
pop
pop
or
fnstenv
jecxz
mov
xchg
xor
jg
adc
clc
push
icebp
mov
cmp
adc
ficoml
dec
or
dec
lods
push
popf
push
adc
and
mov
inc
mov
inc
js
loope
pop
ss
lea
aad
adc
repnz
push
push
push
popa
xor
adc
sub
adc
dec
pop
lods
mov
and
adc
jnp
mov
pop
fs
xchg
fs
dec
push
or
adc
fbld
sbb
xor
incl
fisttpll
xor
fs
mov
pop
sub
push
jno
mov
mov
outsl
dec
push
bound
push
lcall
popf
inc
and
xorl
mov
or
dec
or
jmp
cmpb
loope
imul
ret
cmpsb
or
outsl
cltd
inc
push
fimuls
into
jo
xchg
fsubrp
add
and
dec
sub
loope
mov
andl
lret
add
lods
nop
push
aam
inc
or
pinsrw
sub
sti
lahf
shl
inc
je
add
sbb
jl
fnstcw
xor
or
outsl
adc
add
xor
loope
add
dec
lret
or
jae
mov
cmpsb
add
insb
dec
add
loope
xchg
jl
dec
out
jo
mov
or
into
add
or
push
data16
and
lods
jl
movl
pop
pop
push
push
mov
or
add
add
shlb
dec
in
dec
or
mov
lea
sub
xor
sbb
pusha
lea
pop
push
gs
inc
mov
es
fsubs
lret
mov
and
out
aaa
add
lret
push
jae
cmpl
mov
push
shlb
lret
addl
add
xor
scas
cmp
dec
pop
lods
push
push
push
pop
mov
mov
sub
add
inc
sbb
push
shlb
lret
adc
rcrl
mov
sti
sub
jo
inc
aaa
xor
les
push
cmp
sub
cmp
movsb
xor
fldcw
pop
in
mov
jns,pt
dec
pop
or
xor
xchg
mov
pop
xor
fsts
or
mov
dec
mov
lcall
dec
es
in
inc
dec
pop
add
mov
add
and
xor
ret
testb
lcall
push
adc
xchg
ficomps
cmp
xchg
xor
mov
mov
jbe
andl
in
filds
ret
inc
fadds
je
or
imul
sub
sub
xchg
sbbb
dec
scas
cmp
push
jge
cli
xchg
mov
or
daa
loope
js
jne
lcall
lock
xor
outsb
cmp
adc
imul
xor
cmp
mov
jo
inc
mov
lds
xchg
shrb
cwtl
dec
and
push
bound
pop
and
aad
and
incb
ljmp
or
inc
outsl
and
add
test
and
or
add
movsb
push
fidivl
je
and
inc
pop
or
lods
sarl
jmp
daa
in
add
cmp
adc
or
add
add
add
roll
push
dec
je
imul
ret
cs
test
dec
je
sub
add
movsb
add
je
adc
or
push
lea
push
push
int3
cmp
xor
je
xor
daa
or
push
add
xchg
adc
inc
mov
mov
nop
push
addl
mov
mov
jl
testl
and
cmp
sub
add
dec
sbb
add
int3
sub
push
ljmp
pop
xchg
ret
or
jo
sbbl
cli
mov
sbb
fwait
lods
pop
int
cmpb
nop
xor
scas
cmp
mov
outsl
imul
mulb
xor
call
das
test
add
mov
inc
push
inc
push
pop
push
dec
xor
xchg
in
push
mov
adc
cmpsb
movsb
leave
sbb
rolb
leave
enter
loopne
xchg
aad
inc
cmp
fadds
test
push
in
sbb
ret
insl
clc
orl
inc
daa
mov
xor
cmp
pop
dec
sub
cmp
movb
in
roll
mul
mov
mov
insb
std
fdivrl
xchg
mov
jmp
je
adc
mov
inc
addb
or
fwait
out
les
loopne
stos
adc
sarb
es
mov
mov
pop
hlt
mov
xchg
shlb
push
leave
ret
ret
push
dec
sarl
mov
push
lea
push
cs
dec
pop
fdivrs
repz
sbb
pop
lcall
inc
jae
push
push
push
sti
outsb
test
and
loopne
test
int
pop
jge
movsl
or
loopne
mov
sbb
mov
cmp
in
jmp
cltd
aam
aam
pop
rclb
test
push
scas
xor
imul
clc
aaa
sbb
mov
push
xlat
out
andl
mov
and
imul
sti
sar
inc
sub
test
mov
add
push
adc
test
hlt
fldt
leave
nop
js
sbb
jp
cmpb
dec
xchg
sub
mov
sbb
sbb
jl
adc
popa
push
je
inc
movsb
std
mov
add
and
mov
ret
popf
das
xchg
xor
sbb
jmp
push
xchg
mov
jle
sbb
push
push
ret
rol
aam
cmp
add
jmp
hlt
cmp
cmp
push
in
stos
add
push
lods
mull
mov
mov
push
mov
sbb
iret
and
imul
mov
or
xchg
inc
push
jne
add
push
rolb
insb
or
jmp
push
lahf
dec
in
sub
xchg
test
cmp
mov
or
cmp
add
mov
addr16
push
jo
aaa
mov
cwtl
daa
addb
cmp
adc
shlb
cmp
jmp
xchg
xchg
out
movsl
pop
ret
push
ret
out
pop
seta
movl
add
or
or
or
sub
cld
pusha
xor
adc
jnp
sub
push
inc
and
or
cmp
mov
bsr
pop
push
xor
shll
mov
lods
test
loope
push
movsb
dec
inc
add
push
cmp
subb
cmp
add
mov
ret
adc
aas
xor
sbb
dec
sub
pop
or
rcl
pop
in
mov
insl
pusha
mov
clc
pop
xor
mov
incl
and
cmpsl
decl
xchg
and
inc
inc
test
mov
and
jno
aam
mov
sub
stos
into
pop
in
mov
movsl
xchg
mov
leave
cmp
mov
dec
fcmove
or
lods
adc
push
loop
clc
sbb
sbb
xor
dec
mov
jne
xor
push
aam
inc
or
test
xor
dec
scas
inc
or
push
mov
or
or
or
push
lods
ficoml
xchg
pop
addb
or
mov
pop
int
jg
sbb
jl
call
in
xor
int3
add
ds
or
test
mov
clc
adc
adc
nop
pop
xchg
and
es
add
test
and
push
mov
sbbl
sti
sbb
or
add
shl
aaa
loope
lods
sbb
fstpt
pop
sbb
ret
add
popa
imul
jo
movsb
clc
add
jg
punpckhbw
add
lcall
lea
icebp
nop
sub
lcall
sahf
ret
outsb
sarb
sbb
mov
and
push
inc
insb
dec
push
and
add
and
or
and
mov
dec
adc
or
js
sbb
jl
mov
adc
pop
fstl
and
clc
jnp
xchg
or
fnstcw
jnp
shll
adc
add
xor
rcrb
mov
and
sbb
xor
sub
push
xor
jge
sti
fldenv
push
push
xor
shl
inc
jne
adc
mov
insb
dec
dec
dec
ljmp
sbb
pop
cmp
push
dec
or
mov
push
mov
test
sbb
popf
loopne
mov
and
jmp
dec
orb
push
sysenter
sbb
or
and
push
sub
mov
xchg
sbb
pop
nop
pop
repz
sbb
shll
es
stos
cmp
sbb
pop
mov
sbb
jge
xchg
mov
es
adc
mov
insb
dec
mov
xorl
add
dec
call
cmpsl
cmpsb
push
adc
call
loopne
dec
or
loopne
lcall
dec
je
cmp
je
jp
push
mov
lods
sbbl
dec
popa
nop
cmpb
mov
mov
fmull
or
and
add
sti
add
notb
inc
call
pop
sub
je
rolb
in
outsb
or
push
cmp
inc
add
lcall
pop
sarb
adc
rclb
stos
push
in
and
shrb
inc
cld
shrl
push
push
lcall
dec
sbb
leave
pushl
sub
fs
mov
inc
jae
fidivrs
dec
jmp
rolb
lock
or
push
push
cmp
and
push
and
pop
sbbb
mov
lods
inc
push
add
dec
push
add
mov
cli
data16
and
cltd
lock
cli
ja
jno
aas
lea
push
mov
jmp
add
out
pop
inc
push
nop
popa
rcr
cs
adc
mov
push
fs
mov
dec
or
inc
dec
addr16
pop
mov
dec
cmc
outsb
test
inc
jno
aas
mov
in
adc
lods
mov
bound
or
je
sti
dec
lret
mov
test
push
xor
lret
mov
lret
or
pusha
and
xchg
fsubs
xchg
add
add
add
cs
enter
sub
insb
and
mov
sbb
and
push
sahf
pop
cld
lahf
mov
mov
add
lea
aas
push
or
xchg
add
test
insb
insb
repnz
loopne
cmp
push
push
sub
push
fiadds
push
sub
xor
pop
push
xchg
lret
cmp
push
pop
mov
or
and
ret
in
insb
add
or
jo,pn
nop
mov
inc
and
out
inc
xchg
or
mov
rcll
add
js
jns
jb
inc
fsubrl
mov
and
adc
xchg
out
js
pushf
stc
push
repnz
jge
in
jmp
push
sbb
mov
pop
push
dec
xor
and
push
mov
push
sarl
movsl
and
nop
xchg
test
stos
outsl
cmpsl
fstps
add
sahf
cwtl
loop
add
add
popa
cmp
xor
call
in
pop
and
or
icebp
sbb
xor
jns
es
sbb
and
adc
push
inc
shlb
push
mov
inc
test
mov
push
xchg
dec
mov
lret
adc
or
lcall
sbb
ret
jbe
push
movsl
bound
dec
arpl
dec
sbb
das
enter
and
dec
push
daa
mov
pop
jo
mov
loopne
mov
inc
jecxz
popf
push
mov
xlat
mov
add
mov
int3
pop
or
dec
das
mov
ficoml
mov
repnz
lea
cmp
xor
mov
or
xchg
jmp
add
lea
dec
scas
push
fisubl
xchg
call
mov
inc
jno
insb
xchg
hlt
testb
mov
mov
inc
loope
cmp
enter
es
pushf
faddp
loope
lock
adc
lret
icebp
adc
and
fmull
icebp
or
daa
push
cmpsb
push
call
dec
fdivr
lock
loopne
mov
sub
jne
pop
add
push
inc
push
enter
ret
sub
bound
inc
nop
xchg
add
push
mov
mov
aaa
sahf
call
fmull
xchg
dec
mov
sub
pop
jne
fisttpl
ret
test
add
jne
repz
test
sbb
mov
and
or
xchg
push
insl
gs
jo
xchg
xchg
shr
add
or
jg
push
mov
xor
inc
femms
scas
roll
sbb
push
sarl
push
sbb
loopne
and
sbb
add
es
shll
cmp
add
cmp
ja
mov
cmp
es
pop
inc
adc
mov
or
repz
push
lock
add
add
movsl
jb
sub
jl
scas
dec
mov
adc
adc
test
call
and
push
jl
cmp
roll
mov
mov
mov
inc
shl
pop
cmp
test
imul
mov
lock
or
adc
enter
add
jle
pop
imul
test
test
sbb
pop
inc
or
and
push
add
sbb
jecxz
mov
jl
sub
mov
movsb
or
xchg
sbb
sub
enter
sahf
or
xlat
push
xchg
jge
dec
add
sarl
js
xor
jl
dec
adc
inc
jp
or
vmread
inc
ljmp
and
or
push
mov
push
add
arpl
fs
mov
push
cmpsb
adc
dec
mov
in
pop
inc
jbe,pn
out
mov
sbb
sbb
ss
sub
mov
mov
xor
mov
cmpsb
fsubl
mov
sub
xor
addb
cmp
cmp
xchg
mov
es
cmp
or
daa
sbb
pop
push
dec
xor
dec
lret
insb
and
mov
insb
mov
pop
jb
jno
loope
popa
imul
sbb
addr16
cmp
jns
add
lcall
cmp
mov
mov
pusha
xor
cmp
test
mov
pop
cmp
jbe
shll
mov
int
push
leave
push
xor
pop
xor
pop
insl
add
inc
imul
cmp
xchg
outsb
adc
out
mov
ret
inc
cmp
bound
inc
add
add
or
fnstsw
sub
leave
cld
jmp
push
mov
movsb
and
nop
and
mov
cmp
or
sbb
stc
add
test
push
aas
adc
sti
pop
push
cmp
jo
add
mov
cmp
mov
cli
or
lock
pop
and
push
int
or
push
je
rclb
mov
shlb
out
fcoml
lea
in
pop
mov
xchg
pop
pop
cmp
stos
mov
xchg
dec
xor
pusha
scas
sbb
dec
push
pop
sub
jns
inc
fimull
add
pop
mov
and
inc
int
sbb
dec
arpl
mov
fdivrl
pop
bnd
outsl
addr16
aaa
rorb
cmp
push
outsl
pop
add
add
mov
mov
call
aas
dec
pushw
mov
push
mov
je
push
pop
ds
shlb
dec
push
testl
inc
adc
dec
in
repnz
dec
adc
cmp
sahf
sub
or
dec
add
loopne
cmp
loop
adc
jne
andl
rcrl
sbb
enter
fisubrs
dec
sbb
mov
imul
pop
pop
mov
or
or
and
add
insb
enter
and
iret
lea
dec
lea
pop
push
xor
push
push
adc
xor
or
and
lods
mov
movsl
mov
push
je
or
add
cmp
jecxz
mov
sub
les
neg
add
push
movlhps
pop
push
cwtl
popa
rcrl
pop
inc
adc
adc
push
pop
adc
pop
pop
mov
pop
pusha
fcomps
rcr
cmp
in
imul
inc
imul
push
jp
es
jl
lods
sub
jge
xchg
or
cmc
xor
andl
mov
push
pop
push
das
mov
mov
jl
pop
pop
sbb
jp
xchg
push
cmp
sub
mov
dec
inc
mov
call
push
test
or
and
pop
fimuls
nop
inc
push
andl
xor
adc
dec
sub
sbb
jbe
mov
fs
cmpsb
scas
loopne
sub
add
lcall
inc
pop
gs
or
push
clc
data16
inc
push
or
sbb
xor
sbbl
lods
shlb
dec
cmpb
mov
test
mov
dec
mov
adc
pushl
mov
rolb
or
or
icebp
push
jle
or
roll
pop
and
mov
loopne
and
jne
test
mov
mov
mov
xor
push
mov
pusha
cmp
jl
sub
and
sub
sbb
jg
cmpl
pusha
cmp
push
push
and
aaa
mov
add
test
loope
xchg
shlb
add
push
lock
pop
pop
sub
push
and
stos
or
add
je
sbb
popf
sbb
inc
cmc
fadds
or
jl
push
clc
fildl
scas
cmp
inc
and
cmp
cmp
loop
call
mov
mov
mov
lds
testl
dec
jbe
sub
lea
ret
pop
fisttpl
mov
pop
inc
inc
cmp
jb
leave
inc
inc
retw
mov
adc
adc
pop
aaa
mov
lods
jge
int
icebp
dec
fs
imulb
movsl
xchg
adc
pop
nop
xchg
pop
xchg
pushf
mov
dec
or
popa
test
cmp
dec
call
pop
xchg
andl
ficomps
testb
idivl
inc
je
jbe
cmp
mov
shrb
mov
jecxz
mov
adcl
pop
push
in
mov
je
xor
cld
fldl2t
addr16
inc
loop
rorb
std
inc
push
lds
xchg
pop
in
jl
test
lds
pop
jg
cmp
adc
movsl
andl
or
ret
mov
add
inc
push
or
mov
mov
out
jle
dec
push
enter
shr
not
in
call
aas
cltd
sbb
int3
scas
repz
out
or
push
roll
jnp
add
xor
es
gs
jle
aad
pop
popf
mov
inc
cld
cs
pop
pop
fdivs
dec
or
mov
and
xor
cmp
pop
pop
pop
inc
test
mov
sbb
dec
and
inc
adc
or
cmp
or
add
jge,pt
sbb
add
lods
push
subb
movsl
push
cwtl
sub
sub
and
inc
add
decl
jo
xor
jno
stos
stos
pop
inc
je
aaa
push
xor
movsl
adc
lods
fisubrs
dec
sub
pop
sarb
jmp
in
rcrb
add
jb
out
mov
sub
sub
pop
or
mov
jmp
es
sbb
jg
aas
add
ss
inc
pop
fsubrl
pop
sbb
add
aam
add
adc
rcrb
movb
add
orb
or
inc
push
lret
pop
loopne
mov
lcall
add
lret
inc
fs
outsl
rol
cltd
pop
inc
popa
inc
jmp
pushl
cmpsb
mov
dec
push
int3
je
shlb
pop
ja
cmp
cmp
or
ret
test
addr16
sbb
add
add
rorl
rcrl
adc
push
ljmp
inc
sub
out
or
cmp
and
std
mov
pusha
xchg
loope
pop
lea
ss
mov
rep
bound
sahf
ss
or
adc
jmp
sub
jae
pusha
lock
adc
shlb
add
cmp
andl
mov
adc
test
and
cmp
sub
push
mov
and
stos
xchg
push
push
mov
loop
loopne
adc
push
loop
testb
inc
sub
lret
aam
and
adc
sub
adc
gs
inc
inc
mov
adcl
dec
xor
jbe
cwtl
sbb
pop
mov
daa
inc
mov
pop
dec
jl
cmp
jne
cld
sub
rolb
xor
adc
faddl
sub
add
push
mov
mov
inc
cmp
gs
push
hlt
add
jmp
mov
jmp
adc
cs
mov
jl
sub
and
add
add
cld
sub
xchg
push
inc
push
pop
ds
mov
lods
pop
pop
xacquire
mov
push
es
rcrb
xor
push
fcmovnb
xor
or
add
lret
loop
adc
das
popl
mov
push
push
push
sub
dec
jmp
push
dec
sbb
out
sub
xchg
push
testl
or
adc
imul
out
add
mov
push
es
mov
inc
pushf
inc
xor
adc
adc
test
repnz
jno
pop
in
sub
incl
jecxz
or
jno
dec
jmp
cmp
rclb
or
adc
das
movsb
xlat
mov
adc
arpl
jmp
sub
movsb
push
xor
mov
inc
or
sub
es
cltd
push
sbb
and
sarb
push
fcoms
dec
jne
adc
decb
xor
bound
lock
pslld
push
roll
mov
sub
or
add
scas
popa
hlt
cmp
xor
and
je
mov
pop
mov
dec
or
xchg
xor
ret
cltd
dec
shr
xor
mov
pusha
mov
add
inc
movsb
aad
push
push
icebp
jl
ret
push
push
pop
xor
nop
jno
jmp
adc
or
push
jg
js
jo
dec
mov
hlt
adc
loop
in
dec
mov
mov
or
pushf
mov
mov
jle
sub
xlat
mov
mov
adc
int3
adc
add
pusha
pop
or
jge
shrb
mov
in
andl
dec
sub
ja
push
inc
and
testb
enter
add
repz
cwtl
add
aaa
loopne
ficompl
popa
insb
mov
insl
insl
push
adc
dec
shll
cmpsl
push
pop
cmp
cmpl
push
lret
test
add
add
dec
or
adc
mov
outsl
stos
fldcw
push
clc
add
clc
jbe
mov
jb
mov
jmp
sbb
lret
dec
inc
out
pusha
inc
adc
pop
sub
rcr
jle
inc
faddl
and
repz
mov
add
or
psrld
jmp
pop
lea
xchg
jecxz
xchg
fiadds
test
lock
lea
push
in
adc
mov
fdivp
cmc
aam
lret
adc
push
and
cltd
cmp
mov
adc
loopne
xchg
jl
pop
in
mov
ljmp
mov
mov
adc
sbb
push
shl
mov
push
push
pop
or
adc
ljmp
inc
inc
imul
or
and
lahf
mov
mov
cmp
inc
outsl
add
stos
or
rolb
int3
add
xor
push
dec
and
and
shlb
test
pop
fs
xchg
or
push
mov
imulb
pop
dec
ss
arpl
dec
add
add
jne
sub
sbb
pop
cmp
dec
shl
add
cmp
jb
pushl
jo
dec
adc
push
clc
or
clc
jae
inc
mov
sbb
adcb
and
xor
shrb
subb
adc
icebp
xchg
bound
scas
mov
push
xlat
in
adc
mov
inc
mull
mov
out
mov
dec
xor
out
xor
lods
add
adc
inc
and
movsl
dec
jmp
les
pop
adcl
inc
jo
aam
lcall
inc
push
xor
cmp
push
data16
add
push
xchg
inc
outsl
or
cmp
jbe
and
push
shrl
jbe
or
ss
mov
pop
ljmp
sbb
fstpt
pop
or
mov
shll
jb
fbld
mov
push
daa
mov
imul
nop
inc
shl
gs
push
add
pop
cmpl
mov
scas
adc
daa
or
cmp
sbb
mov
jb
or
and
daa
in
mov
add
sub
ja
xchg
sbb
and
or
nop
fisttpl
pop
fldt
lahf
cmp
sbb
cmp
outsb
call
ret
scas
insb
and
insb
dec
adc
push
lock
mov
jne
mov
pop
mov
mov
xor
xorb
cmp
pop
js
adc
xor
add
je
pusha
test
pop
or
cmpsb
dec
sub
mov
cmp
popf
sub
pop
ror
lea
call
push
cmp
dec
push
cmp
sbb
mov
push
xchg
nopl
sbb
and
xchg
insb
and
mov
pushf
and
sbb
xchg
hlt
sub
nop
xchg
sub
cs
add
jae
or
jmp
push
in
xor
pushf
xor
sub
enter
and
fdiv
dec
sti
fnstenv
xor
or
xor
mov
mov
shlb
adc
mov
and
in
loope
push
shll
cld
or
fbld
int
lret
push
nop
push
add
mov
insb
adc
or
out
push
adc
or
add
inc
pop
mov
adc
insl
movsb
mov
bound
pop
arpl
js
mov
adc
add
jecxz
mov
movl
and
push
mov
push
dec
push
push
or
mov
pop
adc
and
pop
inc
add
add
dec
xor
out
xchg
mov
or
mov
pop
pop
pop
inc
pop
sbb
push
movsb
pop
push
std
push
adc
inc
mov
add
lock
jl
stos
inc
push
es
pop
push
pop
push
add
cltd
sbb
rolb
pop
repnz
popa
and
int
pop
xchg
adc
xor
enter
arpl
pop
or
push
mov
test
shlb
adc
orb
lods
andl
add
push
mov
fucompp
inc
fisubs
inc
js
ds
pop
xchg
and
xor
push
fcmovnu
stos
fadds
dec
and
and
add
lock
aas
cmp
nop
mov
or
add
jo
or
mov
push
in
jne
push
data16
add
xchg
lea
dec
mov
add
call
in
pop
sarl
mulb
xor
in
mov
pop
xchg
rcrb
lret
xchg
cmp
dec
add
xor
cld
push
sbb
cmp
xchg
cmp
jne
and
sub
lea
xchg
je
and
xchg
stos
daa
add
sar
pop
orb
cmp
sub
mov
dec
jmp
mov
je
cmp
lods
add
jl
sbb
cmp
xor
and
mov
mov
mov
sbb
sub
sbb
movsl
cmp
adc
enter
fmuls
or
sub
insl
xchg
lods
je
mov
adc
lock
add
sub
sbb
cmp
or
xlat
pop
push
push
fisubl
jl
cmp
jg
insb
not
in
movsb
cmc
or
jle
cmpsb
xor
mov
xor
getsec
push
pop
or
or
arpl
xchg
sbb
sbb
call
cmpl
sysexit
and
lods
cmpsb
fsubrs
test
sbb
inc
add
inc
mov
or
rol
testb
add
nop
insl
mov
or
pusha
and
arpl
and
enter
push
push
das
or
test
rclb
mov
add
or
iret
xchg
fsubrl
mov
mov
dec
icebp
sbb
sbb
push
add
and
sub
cmpsb
les
les
call
cmpsl
cltd
mov
or
push
mov
xchg
out
ss
ljmp
xchg
es
adc
sub
lods
ret
roll
cmp
int3
sub
adc
int
out
lock
int3
rcrb
movsb
jb
jo
pop
std
in
es
nop
lahf
stos
or
jl
jle
lock
push
add
adc
mov
or
arpl
lock
sti
ret
and
sbb
jl
add
into
adc
aam
inc
mov
das
adc
dec
pop
dec
push
mov
cmp
mov
cmp
jle
cmp
push
jp
or
pop
xor
push
sub
je
stos
mov
inc
scas
xor
cmp
jge
lahf
test
pop
and
cmp
jl
je,pn
cld
push
repnz
pop
rclb
scas
mov
mov
xor
push
clc
push
iret
and
or
enter
adc
push
pop
clc
or
testl
test
lcall
outsl
sbb
and
cld
arpl
and
hlt
mov
cmp
jl
pop
jl
movsl
int
mov
or
or
lods
adc
add
add
data16
rorb
push
aam
scas
or
xor
roll
adc
mov
sub
xor
sarl
or
mov
imul
cmp
pop
sbb
and
cmp
insb
insl
popa
adc
jo
mov
adc
xchg
or
cmp
lea
xor
sub
or
insb
fsub
xchg
mov
add
jp
lret
pop
mov
lods
sub
inc
and
addr16
pop
dec
sbb
clc
pop
pop
in
mov
aam
test
push
ret
add
push
pinsrw
push
or
cmp
sarl
adc
mov
dec
push
stos
and
jle
xor
cmpsb
lock
mov
xchg
cli
test
cmp
shlb
int
push
daa
test
mov
nop
pusha
jo
mov
xchg
fincstp
push
test
push
or
pushf
and
inc
int
outsb
dec
push
lret
imul
dec
hlt
das
sbb
push
cld
mov
outsl
add
aam
xchg
push
pop
popf
shl
pop
pusha
fs
or
negl
and
cmp
out
jmp
scas
jecxz
xor
sbb
jge
lods
add
inc
sbb
dec
sub
xchg
add
movl
pop
leave
inc
bound
xchg
mov
insb
adc
mov
xor
push
adc
push
shll
adc
xor
shrb
les
je
movsb
jne
mov
add
std
push
sub
push
inc
pop
lret
cmpsb
stos
ret
cmp
nop
dec
or
and
imul
inc
sbb
jne
nop
pop
rclb
icebp
dec
sti
xchg
ret
sbbb
inc
mov
jle
and
fs
inc
or
inc
push
outsl
sbb
das
loope
shlb
cmp
mov
mov
add
push
gs
popa
mov
xor
shrb
aas
or
jo
xchg
jbe
push
pmulhuw
jmp
outsl
por
inc
xchg
or
nop
and
add
dec
arpl
or
push
lock
adc
xor
inc
jmp
inc
cmc
icebp
mov
jl
fucomi
mov
movsb
sub
lea
mov
push
push
dec
jg
adc
adc
or
das
dec
or
or
das
movsb
sub
cmp
add
sub
test
mov
test
out
or
in
and
mov
stc
mov
sbb
inc
loopne
pusha
ljmp
add
add
xor
pop
hlt
in
or
dec
xchg
jl
sbb
or
decb
in
and
daa
je
mov
jecxz
adc
jg
cmp
cld
push
pop
push
mov
push
push
or
inc
adc
cmp
inc
adc
aad
out
mov
xor
jbe
shr
fs
push
jle
or
mov
dec
add
and
mov
sbb
mov
rclb
insb
lods
sub
mov
insb
jbe
push
repnz
jmp
nop
mov
mov
sub
jne
cwtl
outsb
sbb
gs
in
push
cmp
push
dec
shl
and
imul
inc
adcl
lea
sub
xor
sbb
adc
or
test
mov
inc
ss
rolb
add
adc
les
push
dec
enter
int
pusha
in
fcomps
inc
loopne
and
add
adc
dec
pop
into
add
mov
jecxz
add
fildll
pop
lock
sub
xor
push
mov
fdivrl
jne
repz
adc
ror
add
or
push
xchg
inc
les
lods
adc
sti
push
aam
mov
push
xor
lods
add
rorl
add
mov
push
sarb
push
hlt
jg
mov
push
cmpsl
lea
sub
sub
lods
sahf
pusha
pop
fwait
ret
fsubr
sbb
push
lds
push
mov
cmpsb
jo
mov
loope
mov
xor
lret
sub
jno
stc
sub
lea
rclb
pop
ret
daa
inc
mov
jg
inc
adc
js
cmp
pusha
test
sub
or
pop
int
push
and
mov
imul
clc
sti
outsl
aaa
add
adc
call
mov
pop
add
inc
mov
sub
adc
call
insb
add
or
add
sbb
mov
pop
pop
and
dec
sahf
ljmp
jne
sbb
adc
mov
add
aaa
test
cmpsb
or
or
dec
sub
dec
xchg
cltd
inc
cmpl
cwtl
nop
or
pop
sbb
jmp
leave
insl
into
jmp
or
mov
cmp
jmp
add
push
jnp
adc
orb
lret
xor
faddl
jmp
adc
nop
shrb
fcoms
mov
jle
sub
xchg
mov
and
or
jo
push
push
mov
in
push
adc
fst
pop
test
push
add
stos
sub
jge
adc
sbb
jae
jae
pop
sahf
push
xchg
sub
call
push
inc
sbb
sub
div
je
into
xor
push
push
cmp
jo
push
incl
and
add
subl
lret
mov
iret
sbb
dec
nop
pop
mull
dec
add
sub
push
cltd
aaa
sbb
mov
mov
push
fsubrs
jne
ficompl
mov
pop
je
fldl
mov
sbb
dec
in
sub
push
cmp
fbstp
inc
add
bnd
push
divb
out
stc
jns
clc
jne
or
jne
adc
movl
pop
andl
push
loopne
mov
gs
mov
cmp
push
cs
inc
cmc
loopne
cmc
fadds
mov
loop
sub
loope
dec
out
pop
fadds
lea
fstl
jecxz
sbb
adc
mov
shlb
sub
sbb
xlat
cwtl
rclb
js
rorb
dec
jnp
add
and
js
dec
xor
push
movsl
push
fstl
pop
inc
inc
push
sbb
xor
test
cmc
dec
fsubrl
mov
mov
jne
push
inc
test
mov
or
shl
mov
cmpsl
sarb
movsl
pmaxub
leave
daa
adc
push
push
enter
inc
sbb
sub
rolb
and
sbb
and
fdivl
out
sub
jb
push
jmp
lea
dec
sub
repnz
aam
mov
inc
sub
jo
loopne
pop
shll
adcb
or
popa
push
xor
lock
jle
fiaddl
hlt
xchg
aam
push
jmp
cmp
bound
and
adc
nop
negl
sbb
hlt
cmpb
sub
push
cmpl
pushf
mov
add
sahf
jg
adc
sub
or
mov
inc
pop
add
shrb
dec
orb
jns
insl
lds
push
add
inc
mov
lcall
push
adc
xorb
xor
test
loope
jecxz
or
bound
mov
cld
xchg
mov
jo
dec
imul
push
or
and
inc
xchg
mov
enter
push
add
adc
xor
push
mov
jge
push
fldl
movsl
subl
or
inc
xchg
xchg
or
or
jns
cwtl
mov
fmuls
xor
roll
sbb
ss
and
imul
es
mov
adc
cwtl
inc
pop
xor
subb
lea
mov
adc
mov
sub
push
cmp
imul
xor
xor
cli
shll
ds
xchg
jl
sub
sub
das
mov
add
loope
sbb
loopne
inc
addr16
jo
inc
gs
add
mov
daa
add
and
lahf
push
loope
ret
cli
or
cli
pop
cwtl
sub
push
xchg
pop
inc
imul
cmpsb
aam
icebp
insl
rolb
mov
lods
and
push
cmp
jecxz
dec
inc
ret
inc
cmc
adc
or
fs
sub
out
cld
add
add
sub
xchg
je
roll
fistl
cmp
pop
jecxz
jl
enter
xor
lret
stos
inc
sub
lret
or
add
inc
cmp
add
add
pandn
xchg
repnz
outsb
adc
push
cli
xor
popf
stc
pop
pusha
push
mov
mov
nop
rclb
dec
lret
jnp
cmp
mov
stos
inc
in
sub
adc
adc
push
dec
imul
jne
sbb
add
test
xchg
gs
into
sbbl
mov
mov
adc
test
inc
mov
xchg
add
xchg
pushf
addr16
sub
andl
pop
sbb
xchg
dec
and
insl
xor
push
add
cs
mov
dec
scas
imul
mov
ret
std
outsl
jne
xor
ja
dec
add
ficomps
arpl
out
call
stos
sbb
add
smsw
cmp
inc
add
add
push
aad
rclb
cmp
kmovw
add
shlb
add
test
and
jle
push
push
movsl
push
inc
add
adc
push
add
arpl
in
cld
push
in
sub
pushf
lcall
xchg
add
popf
mov
sbb
push
sar
pop
xchg
adc
lret
aad
cmp
or
inc
aaa
test
sub
aad
adc
lea
push
insl
shrl
pop
sub
iret
loope
add
in
inc
add
sub
ja
je
cmp
cmp
clc
xor
into
jb
sbbl
pop
inc
shlb
jo
push
pop
dec
popa
and
lcall
pop
shlb
shlb
push
xchg
into
movsb
push
pop
sbb
ljmp
inc
or
outsl
pop
lea
sti
or
sbb
or
xchg
mov
jnp
cmpsb
adc
add
push
outsb
dec
mov
loope
pop
inc
dec
xchg
sbb
in
mov
jo
mov
mov
into
imul
adc
js
out
stos
and
adc
outsb
or
cmp
enter
xchg
sbb
or
cli
lahf
pop
addl
push
sub
dec
xchg
das
fadd
xchg
mov
xor
fldl
jmp
and
stc
rorl
in
sub
sub
imul
sub
xor
movsl
rcll
mov
imul
sbb
popf
push
xor
mov
lods
xchg
inc
and
stos
addl
push
mov
jnp
insb
and
movsl
rcll
arpl
nop
pop
mov
movsl
popf
divl
dec
mov
xor
push
xchg
or
mov
movsl
sub
inc
movsl
xchg
fcoms
stos
sbb
lods
and
jbe
mov
adc
xor
mov
call
punpckhbw
cmp
add
add
cmp
jp
pop
jl
push
adc
popf
cmp
mov
test
sbb
loop
add
cmp
lock
lock
mov
and
dec
inc
imul
add
shrb
xchg
shll
mov
test
push
pop
repnz
adc
fldenv
xor
add
cs
mov
xchg
jmp
xchg
call
mov
popf
pop
jecxz
in
pop
inc
fldcw
jne
cmp
mov
xor
ds
add
daa
add
in
jns
xor
push
flds
inc
cs
mov
cmp
push
mov
sbb
stos
jo
pop
cwtl
xor
cmpsl
cli
adc
shll
mov
add
ret
adc
mov
rolb
pushl
sub
cmp
andl
push
sbb
pop
push
mov
iret
lahf
test
pop
call
and
push
mov
mov
loop
mov
int3
jl
sub
addb
imul
ret
dec
dec
dec
push
add
add
icebp
jne
call
sub
movb
add
mov
pop
add
mov
cld
jl
lea
sbbl
fwait
test
mov
or
test
push
and
fldl
addr16
ret
push
mov
push
ljmp
jo
add
sub
dec
pop
push
icebp
adc
mov
push
push
adc
stos
sbb
cwtl
push
cmpsl
or
jp
shlb
push
add
ret
mov
xchg
pusha
aam
inc
std
jbe
cmpsb
mov
shrb
ljmp
imull
sar
mov
movsl
popf
mov
or
sub
int
xor
out
ljmp
dec
lcall
xchg
icebp
repnz
movsb
sub
pop
aaa
mov
test
jns
lea
add
shlb
mov
mov
jo
jge
sbb
push
scas
mov
sbb
ficompl
inc
pop
std
lods
dec
or
mov
jg
push
xor
cmc
fnstsw
sbb
or
sub
and
and
sub
xor
and
adc
adc
les
inc
mov
leave
aas
dec
and
roll
pushf
sub
and
dec
fisubrs
sbb
ds
push
add
inc
rcrl
leave
add
inc
popa
test
ffreep
or
mov
ud0
test
xor
test
inc
ja
or
aaa
iret
xchg
adc
les
push
pop
cmp
dec
push
sub
jae
mov
push
add
inc
pusha
pushf
movsl
aad
or
mov
xchg
add
imul
dec
add
push
push
xchg
repz
test
mov
std
pusha
inc
push
or
imul
insl
repnz
insl
add
sbb
inc
mov
or
push
sbb
sbb
addr16
pushf
pop
pop
hlt
mov
andl
adc
inc
or
jo
pop
enter
lock
insb
xchg
std
insl
or
pop
sub
movsb
or
mov
and
xorb
push
adc
cs
pop
and
stos
xchg
add
enter
cmp
mov
es
mov
mov
xlat
push
cmp
test
je
jo
sub
xor
and
daa
outsb
inc
sbb
and
push
nop
ror
cmc
sbb
and
jne
and
mov
push
xor
and
pop
cmpsl
adc
gs
out
push
jecxz
imul
lock
mov
sbb
mov
add
lds
lret
je
push
pusha
xchg
insl
and
dec
dec
mov
and
lcall
adc
inc
jp
xchg
lret
cmpl
imul
nop
icebp
and
sbb
insb
test
and
jb
daa
and
daa
dec
loop
add
outsl
inc
les
push
insl
adc
lods
and
int3
sub
sarl
and
ss
mov
sbb
insb
imul
add
cmp
out
pop
add
test
les
lods
mov
adc
sbb
rcrl
pop
adc
cltd
imul
sbb
xchg
popa
mov
test
cltd
idiv
into
mov
inc
fildll
enter
sub
or
xor
mov
test
and
xchg
nop
mov
scas
xor
sar
jnp
dec
add
and
mov
cmp
cmp
mov
sbb
push
or
roll
sub
pop
adc
inc
inc
sbb
push
jnp
enter
sub
or
push
push
test
ja
xor
subl
add
insb
or
push
lods
dec
xchg
sbb
arpl
mov
add
mov
sti
or
jmp
jo
jle
out
int3
and
mov
xchg
call
in
cmp
dec
repz
jne
xor
pop
and
adc
dec
mov
les
pusha
or
sbb
ljmp
dec
adc
shlb
xchg
fld
test
rclb
sti
inc
sbb
testb
push
add
adc
sub
inc
mov
adc
sub
nop
adc
sub
add
or
push
xchg
mov
in
js
cmpsb
out
inc
sti
xor
pop
mov
ja
push
movb
lcall
jle
jp
fsts
rcrb
pop
sub
push
insl
xor
inc
add
xor
push
dec
adc
mov
and
jb
ret
in
sub
std
add
or
cmp
call
mov
jne
das
ljmp
inc
cmp
jae
adc
mov
nop
test
inc
adc
pop
sbb
cwtl
jb
xchg
push
xor
adc
sbb
inc
sti
jmp
lods
outsl
xchg
sti
jmp
imul
pop
fldl
mov
cs
ljmp
aam
or
push
cmp
je
sbb
or
rolb
and
push
rclb
xchg
push
push
push
cmc
lret
mov
mov
lret
and
std
jne
cmp
cli
popa
and
sbb
add
dec
dec
fcompl
hlt
and
and
add
jo
or
or
mov
sub
frstor
insb
sub
aas
nop
lcall
cli
pop
fcomp
aaa
sbb
fsubrl
push
inc
fsubl
mov
dec
jnp
add
cmp
push
add
out
add
cld
and
pop
fsub
pop
fsubrp
shl
xor
into
rolb
clc
pop
adc
int3
jno
cmp
lcall
dec
add
push
rolb
gs
and
add
roll
cmp
je
add
addb
es
and
add
pop
inc
xor
xlat
inc
sbb
sub
iret
sbb
sub
push
push
push
bound
call
sbb
fdivl
jmp
push
add
cld
push
sub
push
sahf
xor
sub
out
xor
jne
int3
mov
push
loopne
outsb
pusha
mov
sbb
stos
mov
and
sbb
in
push
push
sahf
pop
jmp
jp
inc
jo
sbb
add
jg
lock
lea
ja
das
push
adc
cmc
iret
adc
dec
sbb
sti
jnp,pn
and
ficoms
and
push
pop
repnz
adc
adc
test
nop
out
and
push
push
pop
repnz
jg
lret
and
and
mov
test
cmpsl
sbb
adc
sbb
mov
and
arpl
dec
repnz
movsl
test
pop
ss
pop
push
jecxz
inc
jns
jns
pop
or
push
jl
arpl
or
push
push
jle
test
push
push
insl
push
fsubrs
in
lret
in
inc
add
hlt
fidivs
lret
rorl
sbb
repnz
xor
lcall
inc
xor
daa
jns
out
xchg
push
js
stc
jno
xor
xor
vmwrite
push
jle
fst
xchg
shr
and
mov
loopne
adc
in
repnz
cld
pop
daa
stc
pop
mov
lret
push
sbb
stc
jno
ss
or
inc
ss
jns
push
sbb
push
jo
repnz
xchg
ss
ja
sub
dec
fcomi
dec
add
adc
add
push
adc
iret
repz
pop
push
mov
repz
popf
scas
mov
out
sahf
sbb
cmp
jns
out
jg
mov
sahf
out
in
pop
adc
iret
repz
sub
dec
pop
insl
jle
iret
repz
mov
push
cmp
cmp
push
push
mov
add
or
push
inc
enter
push
dec
add
loop
je
pusha
sub
sub
sub
pop
daa
mov
xor
adc
lahf
pusha
shrb
mov
mov
mov
ss
push
mov
inc
push
mov
sub
add
add
aad
mov
daa
jl
mov
jge
adc
mov
adc
push
repz
popa
push
cmp
push
pop
jae
les
dec
sbb
push
nop
fisubs
ss
mov
fs
sbb
mov
and
cmp
mov
push
test
and
dec
and
aaa
int
push
sahf
push
lods
push
xor
mov
mov
aas
das
add
cmp
arpl
push
orl
adc
mov
nop
out
or
lds
sbb
mov
push
pop
pop
mov
arpl
and
adc
daa
push
sub
rcll
add
in
and
sahf
dec
or
cwtl
sub
insl
sbb
jg
sbb
into
mov
cmpsb
sbb
andb
lret
or
jle
xchg
jne
and
push
push
fisubl
daa
jmp
add
les
bound
int
jb
arpl
in
xor
icebp
rcrb
call
call
sbb
jecxz
arpl
fisubs
mov
pusha
insl
enter
dec
adc
in
adcb
jb
fsts
roll
sbb
orl
fmuls
xor
xchg
or
mov
mov
lock
inc
rorb
add
imul
adc
add
test
stos
add
pop
add
fiaddl
xor
orl
movsl
xor
repnz
ret
add
push
or
or
leave
adc
and
xchg
addl
pop
and
inc
das
or
sbb
dec
es
hlt
or
mov
add
fwait
mov
clc
je
lcall
out
in
xlat
push
push
xor
add
push
lret
leave
jo
xor
xchg
movl
add
call
mov
roll
add
adc
push
leave
push
push
gs
mov
mov
mov
or
xchg
adc
in
mov
add
les
adc
stos
jo
lds
inc
lea
mov
push
ret
xorb
adc
lds
stc
leave
lock
ret
dec
insb
push
shrl
scas
shr
adc
xor
mov
inc
mov
pop
pusha
and
cwtl
fcmovb
adc
cmpsl
jo
push
and
ret
icebp
ret
orb
add
inc
add
out
add
adc
add
adc
and
and
adc
pop
push
loope
add
mov
mov
dec
mov
ret
and
adc
lret
nop
lods
sub
or
add
mov
mov
or
popa
add
mov
add
mov
cs
xor
lods
pop
adc
lods
cmpsl
and
add
stos
dec
pushf
or
sub
mov
add
rol
xlat
inc
add
mov
scas
add
mov
add
pop
xor
xchg
or
mov
push
imul
sbb
mov
das
xorb
andb
std
imul
push
mov
mov
test
mov
scas
inc
xlat
adc
fimull
or
add
push
mov
add
ret
add
in
scas
shrb
xor
or
nop
lret
add
cmp
cltd
inc
fisubrs
or
or
add
add
daa
adc
jae
sbb
and
sbbb
or
fistl
lea
lea
jl
or
subl
mov
pusha
mov
scas
test
add
push
and
cmpsb
shrl
sub
and
mov
mov
and
sub
and
push
jg
fs
mov
scas
cwtl
mov
adc
push
xor
sub
jno
add
push
or
jo
push
xor
jno
inc
inc
or
xchg
mov
mov
into
xor
flds
movsb
push
sbb
in
in
dec
add
lods
mov
sbb
pop
daa
add
add
rorb
jae
cld
aaa
int3
mov
mov
push
sub
mov
cmpsl
mov
add
sub
sbb
cmp
push
pop
clc
pop
pop
pop
test
jne
out
cmpsl
mov
or
fsts
fidivrl
cmp
popf
add
jp
push
test
mov
fisubrl
nop
iret
daa
adc
aaa
arpl
add
sbbb
shll
cmp
dec
and
pop
or
adc
jb
sub
cltd
sub
nop
call
pop
adc
lea
mov
fld
sbb
push
adc
stos
push
sbb
sub
or
push
daa
or
aas
lods
das
fwait
je
data16
insb
insl
in
imul
xchg
dec
testl
sti
inc
adc
fs
mov
sar
dec
or
addr16
cmp
xchg
or
popf
sub
loopne
sub
shll
fistpll
or
add
jo
faddl
js
nop
fmull
out
nop
inc
fildl
sbb
fistpl
or
bound
leave
or
loope
in
and
jp
add
sbb
dec
or
and
xchg
push
fldl
sub
int3
lret
push
cmc
or
lcall
test
inc
lea
gs
push
imul
in
push
mov
mov
push
test
cmp
and
pop
cmp
sbb
adc
cmpsl
arpl
cmp
gs
push
popf
xor
add
push
fwait
std
fiadds
prefetcht0
push
sbb
arpl
pop
push
js
add
cld
mov
das
fisubs
lret
es
jmp
sbb
sbb
cs
xchg
cwtl
cli
inc
add
add
cwtl
sbb
movsl
mov
add
hlt
xlat
jmp
bswap
mov
loopne
fistpl
and
shrb
je
loopne
sub
out
rorl
std
add
push
sub
lods
push
lock
rcrb
dec
les
cmp
adc
pop
sahf
xchg
push
push
ljmp
call
and
xchg
imul
mov
jle
sub
adc
add
dec
or
dec
mov
idiv
mov
decb
adc
jl
xor
jmp
cmp
jl
or
sub
pop
jle
adc
jle
xor
jle
and
jg
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
add
das
sbb
pop
cltd
idiv
push
mov
mov
ljmp
jno
rorb
mov
fadds
cmp
repz
push
ret
mov
sub
loopne
push
inc
mov
je
test
mov
mov
ret
mov
cli
lret
stos
add
dec
call
gs
xchg
or
push
in
movsl
jnp
lahf
in
in
hlt
incb
dec
call
dec
mov
cmp
adc
jae
mov
dec
fsubl
not
cmp
faddl
push
push
sub
repnz
push
nop
test
jp
sarl
outsl
out
cmp
mov
push
dec
imul
xchg
imul
cs
push
les
xlat
jno
mov
push
push
shl
jne
inc
inc
dec
jle
xchg
mov
pop
call
jno
fisttps
leave
cmc
add
mov
rol
andb
cmc
imul
sbb
or
cmp
and
jae
xor
mov
sbb
push
and
xor
pminsw
xchg
lods
imul
lock
pushf
jmp
dec
or
pop
shlb
lods
adc
xchg
in
dec
adc
xor
gs
es
sbb
mov
or
ss
adc
push
gs
mov
cmp
js
push
rclb
ljmp
rclb
rorb
xor
and
sbb
jnp
pusha
cltd
les
push
dec
data16
adc
hlt
xorb
mov
in
pusha
mov
out
or
dec
es
jae
shr
nop
push
fsubrs
and
and
fmuls
and
aam
and
mov
aaa
and
pusha
pushf
mov
shlb
enter
jbe
and
cmc
sbb
xor
loop
and
mov
push
neg
out
jmp
jbe
iret
sub
xor
lret
adc
mov
fwait
leave
enter
jns
sbb
daa
arpl
jb
rorl
rclb
sub
mov
test
xor
fs
add
nop
dec
pusha
cwtl
dec
add
fiaddl
add
enter
sbb
js
loopne
enter
cltd
jbe
mov
fwait
fs
dec
xchg
mov
jl
enter
es
push
or
jb
call
inc
mov
aaa
jo
and
jge
in
pop
sbb
int3
imul
xchg
sub
sti
idivb
aaa
clc
decb
or
add
push
cs
sub
sub
jae
shll
int3
jge
push
aam
adc
pop
test
pop
xchg
sbb
int
pop
movsb
fcompl
sbb
aas
inc
movsb
fmull
inc
dec
or
add
or
add
push
mov
clc
mov
call
adc
jge
push
jno
jno
pop
cmp
pop
data16
out
in
lcall
enter
sub
cld
add
push
movsb
cmp
push
or
pop
push
mov
push
add
jne
or
sbb
cwtl
add
dec
and
fcoms
or
add
adc
enter
and
int
add
or
pop
inc
inc
sti
lret
mov
mov
jne
stc
in
pop
cmp
movsl
and
popf
and
mov
xchg
mov
je
mov
rcll
mov
push
pop
sti
mov
or
out
push
repnz
inc
cmp
movsb
shr
dec
push
jo
cmp
and
ret
jp
cmp
push
mov
xchg
imul
jbe
mov
fdivs
or
pop
and
adc
mov
and
and
ficoml
les
adc
sahf
inc
imull
fsubrs
sub
lea
mov
add
inc
ss
inc
push
dec
inc
sub
xlat
pop
pop
loope
and
or
dec
inc
xor
dec
das
jb
jmp
add
or
popa
xchg
cs
add
outsl
rclb
push
push
push
jg
xchg
mov
pop
jo
jmp
sub
fbld
aad
fcomps
fstpl
xchg
frstor
out
mov
fistl
or
jp
or
jnp
dec
jp
lcall
jmp
xor
int3
and
mov
xchg
pop
es
and
in
sbb
nop
loopne
mov
paddsw
push
movsl
cmp
out
or
icebp
pop
adc
imul
jne
test
clts
loopne
inc
rorb
in
push
sbb
or
pop
ja
add
pop
adcb
inc
leave
mov
mov
cli
movsbl
and
pusha
cmp
clc
add
sbb
inc
inc
hlt
cmpsl
and
xchg
push
add
or
push
rcr
add
sub
push
push
rcrb
sbb
or
xchg
xchg
or
loopne
xchg
push
sbb
outsb
call
aad
add
push
sub
psubusb
lahf
xor
test
aam
cmp
pusha
aaa
loope
inc
pop
dec
and
mov
push
int3
or
imul
xchg
sbb
rcl
loopne
and
std
pop
xchg
jge
add
jne
or
iret
fstp
mov
loopne
and
int3
jl
or
cmp
je
ret
jle
push
add
add
fisubl
add
adc
mov
fwait
rcl
shl
or
adc
push
lret
imul
in
stos
cmp
or
adc
sub
xlat
fiaddl
sidtl
movsb
dec
shrb
rorb
stc
mov
adc
fsubl
in
push
or
fcmovb
pop
add
xor
mov
pop
add
cs
cmp
pop
sub
adc
jo
push
jp
movl
cmp
push
cmpl
push
adc
mov
jp
add
push
xchg
xlat
jb
add
stc
ds
ss
cld
rcr
xchg
in
mov
aaa
in
sbb
jns
xchg
sbb
pop
stos
add
call
or
adc
mov
outsl
cs
xor
ss
inc
push
xchg
pop
sbb
sbb
shr
je
cmp
inc
ret
and
lock
sete
cmp
cmp
cwtl
incb
in
add
xor
in
out
and
push
cmp
popa
fsubs
cwtl
mov
xchg
jb
add
mov
xchg
sbb
xchg
pushf
and
mov
shlb
lock
inc
add
xor
jmp
daa
mov
mov
cmp
cmp
adc
lea
rorl
cmp
in
cmp
push
cmp
xchg
sub
dec
cmp
cmp
in
cmp
es
sub
scas
pop
sbb
adc
cmp
sub
xor
insl
imul
add
in
sbb
sbb
ret
add
inc
test
loopne
lock
push
adcb
sub
repnz
jbe
inc
mov
in
xchg
ds
and
cmp
jns
xorb
lret
sbb
subb
xlat
cmpsb
mov
mov
mov
inc
jl
cmp
jne
inc
and
and
lcall
add
inc
jle
pop
cmp
scas
jo
add
je
add
es
ret
mov
mov
dec
push
or
pop
inc
jle
mov
insb
mov
add
adc
mov
enter
add
or
add
xchg
into
add
lret
jo
sbb
std
push
mov
xor
adcl
aaa
mov
popa
les
mov
nop
push
lcall
pop
shr
mov
inc
cmp
mov
and
mov
add
mov
jne
inc
fldenv
addb
inc
jo
xchg
jo
xlat
in
dec
add
in
cmp
stos
sbb
cmc
in
insl
mov
xor
add
fwait
lock
xchg
pop
dec
mov
sbb
xor
sbb
cmp
sbb
es
xchg
or
outsl
pop
or
sub
push
pop
add
rorb
xchg
cmp
daa
mov
pinsrw
jns
jle
imul
div
out
push
dec
inc
push
divb
mov
adc
push
fwait
adc
add
and
adc
aam
inc
pop
lods
rcll
jae
pop
push
add
mov
jmp
iret
mov
mov
push
jne
xor
and
into
adc
pop
dec
lahf
lret
pop
mov
out
ljmp
xchg
mov
lods
pop
in
test
fstps
aaa
cmp
push
ret
pop
mov
sarb
enter
or
es
loopne
aas
pop
bswap
gs
mov
or
loop
add
adc
xor
or
inc
pop
mov
dec
add
data16
mov
cltd
push
cmp
xchg
dec
mov
xchg
cmp
pop
mov
sbb
xor
push
xchg
add
jmp
sbb
daa
push
add
cmpsl
push
mov
ja
or
inc
das
in
push
push
fisubl
daa
push
cs
roll
sub
divl
insb
call
sbb
pusha
pop
rol
rol
xlat
pusha
ljmp
pushf
test
ja
xchg
push
jo
in
enter
fsubr
insl
repz
mov
mov
cmp
add
push
or
cmp
cltd
jb
or
dec
cmp
jp
pop
push
dec
adc
jle
xor
pop
adc
pop
mov
cmp
pop
hlt
adc
out
or
add
cmpl
jne
cmc
dec
ds
add
in
dec
push
roll
in
dec
xor
or
inc
movsb
xor
jb
testb
jae
mov
xor
dec
std
aad
dec
pop
mov
jmp
mov
push
sbb
lods
int3
mov
jb
gs
imulb
insl
mov
xchg
pop
mov
testl
inc
ljmp
adc
out
or
mov
xlat
push
shrl
je
add
popa
cmpsb
int3
push
decb
adcb
add
outsb
ret
jmp
cmp
leave
ret
psrlw
sbb
sahf
rcr
lea
sbb
int
loopne
cli
shlb
or
jne
xchg
mov
ds
cs
cmpsl
push
and
insb
cmp
imul
adc
loopne
push
jne,pt
sbb
xchg
stos
lds
add
scas
add
stos
adc
cmpsb
sub
add
add
loopne
push
stos
add
in
cmpsl
inc
pop
leave
ror
sbb
add
push
cmp
xor
in
adcl
call
inc
js
cmp
divb
movsb
jl
or
xor
outsl
pop
js
xchg
sbb
mov
jo
test
test
add
std
movsl
cmp
inc
mov
pop
or
add
xchg
ja
sbb
inc
into
and
orb
xor
adc
test
loopne
sbb
sbb
das
pop
loop,pt
mov
lods
push
aas
test
popa
add
xor
lods
test
cmp
xor
movsb
repnz
xor
imul
imul
pushl
or
adcl
cmp
push
add
inc
lcall
add
stos
and
dec
sbb
inc
add
cmp
xor
mov
push
mov
mov
loopne
cmpb
ret
sub
incb
rcrb
adc
pop
add
les
adc
shrl
add
rcl
sub
mov
jne
xchg
cmp
movsl
add
rolb
mov
mov
shll
in
xor
setge
dec
pusha
test
and
add
fnstsw
or
je
push
mov
test
enter
mov
jmp
adc
movsbl
outsb
stos
or
jp
inc
es
cmp
insb
jne
adc
decl
or
add
xlat
push
and
fmull
cs
das
or
fistpl
fs
or
xchg
jmp
or
dec
rorb
imul
and
scas
mov
mov
cltd
xchg
add
outsb
mov
push
mov
and
push
mov
arpl
and
pop
inc
repz
cmp
fisttpll
insl
sub
cld
pop
xor
icebp
cmp
popa
pop
inc
and
icebp
loope
out
jb
mov
mov
and
cmp
mov
mov
push
lock
movsl
cmp
mov
pop
sbb
sarl
adc
popf
outsb
add
sub
rclb
cmc
pop
add
inc
push
lcall
pop
mov
push
lods
and
mov
lods
add
lods
mov
adc
fistpl
nop
dec
sahf
add
push
and
pop
scas
pusha
sbb
or
add
sti
std
popf
ss
inc
test
daa
sbb
orl
push
pop
mov
fsubs
sbb
jno
es
cmp
push
inc
sbb
movsb
test
cmp
lods
push
push
adc
imul
aas
and
stos
popa
xchg
mov
icebp
adc
inc
lods
add
xor
clc
arpl
push
adc
loop
sbb
mov
rorl
sbb
and
pop
je
mov
sub
or
jl
imul
pop
imul
pusha
imul
fsubs
push
inc
jmp
cmp
mov
jmp
sub
push
jmp
pop
xchg
add
cmp
sarl
imul
adc
test
jb
fst
fdivrp
mov
and
mov
sarb
fisubs
imul
add
fwait
cmpl
xchg
and
and
adc
lds
mov
test
mov
je
pop
and
aaa
scas
shr
data16
push
mov
dec
and
outsb
pop
pop
aad
jno
xor
lds
mov
mov
inc
mov
arpl
daa
pusha
loopne
and
jae
mov
jl
fdiv
and
xor
push
xor
push
dec
fcom
jne
adc
or
dec
fs
xchg
popf
push
push
shlb
or
and
dec
cmpsb
in
sub
call
add
mov
cmpsb
xorl
sbb
fwait
sub
clc
loopne
lock
pop
jnp
push
outsl
add
inc
mov
pop
fs
test
dec
push
xchg
dec
sbb
inc
dec
push
pusha
adc
and
mov
push
push
mov
add
xchg
pop
cmp
pop
dec
pop
lock
aam
adc
add
fists
mov
je,pt
dec
xchg
xchg
inc
add
jle
adc
in
add
or
add
and
sub
mov
mov
filds
sbb
jb
jmp
jne
loopne
dec
mov
sbb
insb
xchg
loopne
pushf
data16
and
add
pop
in
pusha
add
outsb
enter
cmp
stos
add
jno
dec
push
adc
pop
ljmp
mov
test
inc
in
adc
cmc
lret
cmp
mov
pop
adc
je
adc
leave
and
test
sbb
fnstenv
cld
pop
clc
or
inc
cmpsb
std
add
leave
pop
les
push
adc
enter
xor
icebp
and
enter
mov
ja
inc
idivb
add
push
sbb
mov
xchg
and
mov
and
insb
pop
mov
and
jns
adc
dec
shlb
push
pop
sbb
mov
push
in
clc
out
lret
inc
xor
sbb
mov
push
fsubrs
repz
mov
test
inc
cmp
mov
sbb
addr16
dec
andb
mov
push
or
pop
ret
rolb
inc
xchg
adc
push
mov
scas
fs
jb
and
mov
shrb
dec
sub
clc
xchg
data16
pop
cmp
jecxz
or
clc
nop
ja
jge
cmp
ja
or
dec
ds
adc
inc
adc
outsb
mov
push
imul
int3
into
lods
inc
mov
inc
mov
mov
insl
loop
mov
xchg
inc
dec
pop
maskmovq
testl
cmp
loopne
jmp
xor
or
dec
ja
cmpl
or
push
cld
push
cmp
outsb
in
sti
stos
out
mov
js
push
pop
cld
mov
mov
test
dec
mov
and
movsb
rorl
into
clc
clc
lds
in
inc
cmp
jb
jmp
xchg
cmp
inc
mov
cmp
imul
add
push
jne
push
ljmp
test
sub
or
or
in
adc
setbe
pop
xor
pop
xor
dec
pop
ljmp
mov
mull
rcl
add
imul
or
jne
test
cmpsb
mov
shlb
int3
jle
pop
das
dec
test
xchg
js
mov
bnd
pusha
add
cmp
or
ja
mov
or
sub
mov
lds
rorb
fmuls
out
sbb
and
leave
pop
pop
pop
pushf
adc
or
das
and
mov
lea
cs
bound
rclb
addr16
mov
shl
dec
push
inc
fists
or
inc
xchg
pusha
or
je
cld
jge
mov
ja
inc
imul
xor
mov
leave
rol
sti
fiadds
pop
xor
cmp
inc
je
mov
push
dec
fcoml
push
xor
or
das
sub
dec
sahf
xchg
and
xor
fs
sahf
or
std
or
mov
aad
repnz
cmp
aad
std
push
add
add
loope
or
pop
loopne
xchg
les
popf
enter
jp
imul
mov
xchg
jge
sbb
or
and
mul
push
xchg
jno
addr16
add
push
lret
pop
rclb
aas
sub
lret
test
mov
cmp
sarl
lea
test
ret
pop
jl
xor
xor
in
bound
dec
xor
mov
fdivrl
jne
xchg
pusha
push
les
loopne
pop
je
jne
sahf
cmp
adc
scas
cmpl
incl
sahf
pop
inc
jmp
popa
fwait
mov
sbb
lea
sbb
aaa
mov
aas
xor
sbb
mov
daa
push
inc
and
sahf
jl
pop
and
lea
pop
inc
add
pushf
mov
les
pop
smsw
incl
lea
lods
fsubrl
les
inc
and
dec
imul
aam
jno
or
sub
dec
cmp
or
mov
mov
nop
rcr
jo
into
sbb
sahf
inc
pop
mov
mov
mov
cwtl
lods
jmp
sub
dec
sub
and
stos
in
loopne
les
mov
pop
dec
pop
pop
mov
test
bound
add
test
mov
add
push
mov
mov
cmc
dec
lods
dec
cmpl
hlt
call
popa
stos
lret
adc
enter
inc
stos
inc
scas
mov
mul
xor
add
pop
jae
cs
cmp
xor
aaa
sbb
xchg
cmp
xchg
adc
jb
add
xor
push
sbb
dec
mov
repz
adc
dec
mov
and
fadds
call
fdivs
sbb
pop
adc
inc
sbb
sbb
call
adc
mov
dec
scas
fwait
test
jbe
std
jl
pushl
dec
shl
cmp
mov
or
sarl
xchg
fists
into
cmp
daa
inc
or
fwait
test
out
push
push
add
mov
inc
pop
or
pop
jo
popf
sarb
or
jl
push
repnz
daa
arpl
xchg
out
or
dec
add
dec
stos
subb
out
pop
sbbb
incl
jae
ds
and
add
push
mov
les
in
mov
loope
xchg
lods
push
adc
and
push
mov
ja
rcll
sub
dec
cwtl
add
push
bound
or
cli
adc
rcrl
sbb
inc
sub
sbbl
xor
sub
movzbl
xchg
daa
xchg
or
in
in
cmpsb
push
test
call
mov
out
push
sub
daa
inc
mov
and
nop
or
or
push
sbb
inc
xchg
xor
pop
pop
sub
xchg
lds
adc
dec
call
xchg
test
lods
pusha
ds
fbld
pop
add
movsb
mov
rorb
jnp
or
inc
rolb
add
mov
and
jmp
inc
nop
pop
movsb
cltd
es
sbb
mov
cmp
pusha
data16
sub
fdivrl
push
movb
sahf
xor
push
xchg
in
mov
add
movl
rcr
mov
mov
add
or
mov
enter
push
push
push
int3
add
xor
shlb
fwait
push
adc
add
cmp
mov
pop
sub
gs
sahf
adc
adc
jg
scas
push
lods
rorb
and
push
lock
jle
mov
divb
lret
mov
rorl
or
roll
adc
movsl
and
sub
popf
and
and
in
lcall
pop
fndisi(8087
mov
pop
inc
adc
or
movl
adc
xor
mov
sbb
adc
sbb
enter
or
pop
mov
mov
jge
shr
loopne
dec
add
in
lods
or
or
inc
inc
cld
jne
xchg
and
dec
aam
dec
xchg
dec
add
add
daa
rol
lock
xchg
shlb
lds
into
aas
ljmp
mov
insb
and
lock
push
into
out
les
sbb
push
int3
push
and
sub
xchg
lahf
lea
out
pop
ret
add
inc
mov
push
or
loopne
rcrl
mov
push
orb
ss
push
js
or
insb
aad
test
push
cmp
in
push
pop
fs
push
cmp
xchg
dec
fisubrl
int3
and
fmul
ret
and
mov
sub
pop
or
xchg
sub
inc
add
aad
adc
sbb
test
movsl
daa
jp
inc
rorl
cli
mov
add
mov
pop
aam
jmp
test
repz
hlt
mov
sbb
addb
imulb
cmp
lea
xchg
insb
sub
stos
mov
sbb
mov
idivl
dec
ja
je
popa
andb
jo
ret
jmp
or
call
sbb
pop
mov
fidivs
adc
sbb
pop
inc
repz
sub
pop
xchg
addl
lahf
cmp
inc
inc
push
mov
jmp
dec
add
testb
add
mov
sti
jnp
dec
orl
xorb
sbb
sub
push
rcrb
fwait
lock
subl
out
rolb
pop
out
inc
push
pusha
jne
shll
mov
pusha
add
pop
adc
push
push
lea
pop
xchg
and
aam
shrb
jl
xchg
pop
add
sbb
or
xor
rcrb
inc
inc
test
or
mov
addl
dec
mov
lock
pushl
test
mov
ret
in
call
popf
enter
sbb
js
or
mov
or
or
and
jg
xor
adc
sarb
sub
loop
idiv
cmp
mov
jne
incl
sub
xor
test
push
mov
or
xor
js
push
mov
mov
insb
jo
mov
sarl
jle
clc
outsl
cmpl
xor
lds
sti
js
xor
jmp
adcb
and
scas
mov
fistpll
adc
sbb
jl
adc
jmp
popa
cmp
ljmp
cmp
jmp
subl
adc
jge
push
and
iret
fsub
add
lcall
je
inc
push
mov
orl
mul
pop
push
pop
fcomps
jb
pushf
mov
or
das
add
mov
and
outsl
xchg
push
mov
int
or
cmp
fxch
fistpll
jl
push
cmp
sbb
out
les
inc
sbb
adc
call
cmp
inc
shll
push
push
mov
rcll
gs
adc
mov
add
jle
cmp
add
and
shll
sbb
add
pop
insl
adc
or
inc
insl
loopne
fidivl
outsl
push
add
push
sbbb
fdivl
mov
xor
scas
cmc
popf
sub
dec
sbb
clc
xor
movsb
mov
lret
mov
mov
int
push
sbb
adc
xlat
xor
ja
fwait
xor
cmp
and
inc
jmp
movsl
jno,pt
mov
push
adc
and
lock
nop
add
mov
ficoml
mov
es
cltd
aas
inc
pop
mov
addb
add
test
adc
shr
push
adc
and
adc
test
push
fisubrl
test
mov
push
push
vmread
ljmp
enter
fistpll
push
or
insl
shl
stc
fidivrl
cmc
mov
pop
add
dec
out
dec
jle
bound
mov
mov
call
movzwl
inc
mov
inc
loopne
stc
lock
mov
cmp
orl
sbb
cmp
or
sub
mov
add
push
mov
adc
push
in
inc
repz
lret
sub
or
push
mov
outsl
mov
mov
sbb
cmp
adc
adc
in
cli
push
adc
loopne
add
xchg
arpl
or
scas
inc
cmp
rcrb
test
push
lods
pop
ret
insl
loop
hlt
or
cmp
and
xor
mov
stc
inc
cmp
stc
sbb
int3
std
and
hlt
push
loop
repnz
das
in
popa
cmpsb
dec
add
rorl
add
enter
mov
rep
movsw
push
cld
loop
cmp
movsb
mov
sar
arpl
shr
mov
inc
mov
adc
cmp
jle
movb
cmpb
mov
pop
cwtl
cmpb
insb
mov
fldcw
int3
mov
cmp
movsbl
xor
sahf
xchg
cwtl
jge
test
push
push
ja
aaa
pop
push
add
jb
and
push
cmp
je
push
push
and
ret
cmp
mov
and
cwtl
les
mov
dec
shlb
mov
lds
sbb
sbb
add
mov
mov
dec
subl
or
fs
pop
outsb
shl
and
or
cmp
inc
sub
add
inc
lahf
addr16
into
pop
xor
or
mov
lret
cld
cmc
ss
cmp
adc
push
push
lock
or
inc
test
rorb
xchg
fadds
or
and
js
xchg
jbe
insl
jmp
in
movsb
jge
ja
push
add
add
in
in
push
pop
or
sti
in
or
jnp
or
jbe
jmp
jae
jae
or
por
jmp
jae
jae
adc
pop
adc
push
adc
dec
adc
dec
jae
jae
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jae
sbb
pop
pop
jmp
and
or
and
or
jmp
and
subps
add
cltd
push
mov
add
push
xor
inc
adc
mov
push
xlat
cmp
repz
out
idiv
jns
cmpsl
stc
pop
xchg
pop
sbb
out
sahf
out
sub
xor
sahf
aas
inc
dec
dec
push
pop
jns
out
pop
bound
jno
jns
out
jnp
test
xchg
cltd
or
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
cmp
or
bound
push
sbb
jle
inc
loope
pushf
jns
cmp
cmp
stos
insb
or
lea
sub
jns
insb
js
out
inc
mov
cmp
lods
and
pop
cmc
test
and
lea
push
mov
jae
out
push
push
mov
sub
outsl
mov
fisttpll
dec
or
cli
lcall
sub
das
les
cmp
aaa
mov
inc
cmp
jbe
and
push
sub
add
or
dec
xor
jbe
xchg
or
jp
push
aas
es
decl
clc
nop
jmp
inc
push
push
imul
cli
pop
pop
sarl
shrb
cld
adcb
xor
jo
ss
and
push
or
fsts
and
mov
stos
xlat
daa
or
inc
fimuls
pop
push
dec
nop
je
adc
pop
adc
xor
dec
cwtl
dec
xchg
and
fsts
adc
xchg
mov
cld
cmp
push
adc
aam
pop
sub
stos
les
inc
test
or
int3
inc
imul
enter
icebp
adc
cld
cmp
aaa
mov
push
sarl
fisttpll
xor
xchg
xor
jae
lret
add
mov
or
lret
test
fbld
or
rorl
arpl
mov
cltd
sbb
fmull
xchg
mov
adc
les
fdivrl
sbb
popa
cmp
mov
or
jns
mov
add
mov
call
adc
sbb
push
pushl
inc
shlb
adc
mov
push
adc
xchg
mov
test
pop
mov
cmp
andl
xchg
aaa
repz
test
sahf
ss
lahf
add
push
push
pop
loopne
sbb
gs
popa
pop
js
outsb
pop
push
and
push
pop
popa
pushf
inc
ja
in
sahf
jmp
mov
jne
and
pusha
adc
jae
or
add
and
clc
ret
ss
mov
fsubrl
pop
mov
in
fmuls
ret
fcompl
cmpsl
loopne
aaa
pop
loopne
testl
dec
and
and
push
push
call
push
add
out
je
dec
sahf
aaa
inc
sub
pop
lahf
cld
push
clc
xor
nop
lock
je
xchg
clc
pop
cmp
cmp
in
push
xor
imul
push
fdivrl
dec
stos
cmp
cmp
pop
xchg
cmpl
inc
or
sbb
sub
jp
andl
loop
mov
imul
xchg
and
cmp
dec
orl
jl
pushf
and
mov
lock
mov
js
mov
orl
adc
roll
xchg
jne
add
in
sbb
sbb
shlb
xchg
sub
fwait
dec
pop
clc
out
cltd
stos
inc
sbb
or
push
adc
pop
lods
js
and
loope
mov
sbb
mov
or
fidivrs
pop
or
push
stos
test
test
in
and
mov
sub
ja
mov
or
shlb
rclb
shlb
cwtl
testb
jmp
jmp
add
fs
add
push
fistpll
cmc
xchg
out
add
enter
dec
popf
fadds
int3
loopne
pushf
xchg
xor
les
sub
cld
outsl
xchg
rsqrtps
or
gs
sbb
lods
dec
lods
mov
xorl
test
je
mov
stos
outsb
push
leave
rorb
loopne
pop
xchg
jmp
push
sub
cmp
jne
imul
adc
ror
mov
nop
mov
lahf
dec
enter
add
inc
movsb
adc
fs
test
add
daa
popa
adc
xor
adc
test
sub
cmp
sub
into
push
add
pop
xchg
jmp
cld
pushl
xor
sbb
sahf
push
cmpsl
inc
fwait
xchg
sub
add
enter
add
loopne
sbb
and
sbb
pop
pop
jb
mov
push
push
adc
and
xchg
out
stc
add
les
push
vpslld
or
ffree
enter
adc
jns
or
adc
xchg
add
int3
or
inc
imul
add
or
mov
sbb
sub
pop
or
test
test
pop
push
pop
push
push
sbb
xor
pop
mov
cmpsb
push
jb
cmpsb
mov
pop
bnd
adc
mov
mov
sub
rorb
popa
inc
lret
jmp
add
popf
mov
or
mov
lahf
xchg
loopne
add
jecxz
cmp
mov
push
sub
daa
push
fidivl
push
inc
xchg
frstor
mov
pop
popa
and
jns
xor
lret
call
cmp
add
andl
sub
sub
loopne
xchg
mov
faddl
cs
mov
push
sbb
cmc
lods
sbb
inc
add
add
push
or
adc
xchg
mov
sub
xor
inc
xor
add
test
pop
mov
adc
mov
frstor
cmp
ja
pop
xadd
daa
or
pop
inc
inc
arpl
pop
push
testb
cmp
dec
add
mov
push
push
mov
sbb
jne
test
in
dec
or
sbb
rorl
or
jo
xchg
xchg
xchg
scas
dec
jmp
sbb
jnp
sub
call
dec
xor
adc
rcrl
jl
in
or
xor
sub
js
sub
ss
jno
pop
add
mov
push
inc
in
in
test
lods
leave
add
add
fwait
or
bound
or
sub
out
add
mov
loopne
cli
pop
pop
cli
iret
mov
sub
mov
test
pop
and
or
je
rolb
cmp
jl
rol
roll
push
or
rcrl
movb
sbb
or
std
push
jae
js
in
mov
xchg
pop
jge
in
add
mov
call
ljmp
xchg
add
dec
mov
pushf
sub
mov
mov
or
mov
mov
add
push
add
add
lods
push
cmp
adc
mov
add
call
loope
jo
daa
add
xor
jbe
xchg
sbb
lock
in
sbb
pop
or
shlb
sub
shlb
sub
and
lahf
mov
adc
test
and
xchg
sti
mov
xchg
dec
outsl
add
xchg
mov
sbb
xorb
push
test
mov
insb
mov
push
push
icebp
test
push
inc
iret
pusha
or
pushl
or
shlb
sbb
sbb
and
sub
xor
sbb
pop
icebp
sbb
push
cvttps2pi
repnz
and
sub
adc
jb
push
dec
adc
add
xor
and
ret
push
push
lret
sbbb
ret
sbb
dec
pop
es
cmpsb
add
mov
shl
inc
add
mov
mov
xor
xor
cmp
add
inc
cmp
push
and
adc
outsb
xchg
push
push
pop
pop
pop
mulps
fs
add
inc
sbb
push
ja
lahf
jo
pop
push
push
mov
cmpb
push
push
test
xchg
dec
xchg
cwtl
pushf
inc
push
jno
and
shll
and
inc
es
nopl
push
pop
lret
cli
and
dec
outsl
and
lea
push
mov
test
popa
mov
lret
xor
inc
adc
xchg
popa
sub
je
jl
and
xor
or
push
int3
inc
dec
idivb
jl,pt
sub
lea
cmp
lret
je
dec
jno
addl
sbb
cmp
or
sbbl
fildl
out
pop
cmp
cmpsb
repnz
lods
inc
jmp
and
add
pop
fcomp
jne
popf
pop
sbbb
ret
jnp
int3
jmp
out
push
mov
xchg
sbb
jle
mov
mov
sti
and
in
sbb
and
and
or
dec
push
in
adc
mov
pusha
loope
in
shll
xor
dec
adc
std
mov
dec
mov
xchg
cmp
sbb
js
roll
mov
sbb
sub
jmp
fwait
pop
enter
imul
sub
insl
leave
mov
pop
pop
ret
cmpsb
push
push
push
cmpl
cmpb
flds
sti
jge
pop
ret
inc
push
hlt
cmp
jl
xlat
jle
lahf
js
mov
lock
adcl
xchg
jns
pop
adc
xor
shlb
hlt
mov
incb
add
pop
add
pop
push
pop
ds
shl
add
adc
xor
mov
pop
orl
pop
inc
mov
mov
dec
xor
push
sbb
add
mov
inc
adc
mov
cmp
and
lods
insl
cmp
cmpsl
pop
mov
ljmp
scas
pusha
and
andb
call
sub
inc
jae
or
xchg
pop
adc
aaa
or
pusha
lods
push
leave
mov
inc
mov
inc
loopne
xor
sbb
leave
ret
les
imul
dec
adc
cmp
pop
mov
cmp
sub
ss
lahf
icebp
movb
pop
jl
adc
cmp
lods
add
jns
js
jne
adc
add
mov
jne
mov
test
in
repnz
or
jg
and
scas
mov
pushf
mov
xor
inc
shrb
xor
jne
push
js
and
jnp
clc
adc
mov
scas
xchg
adcl
mov
scas
add
icebp
mov
mov
inc
and
lcall
stos
mov
adc
lock
aaa
sub
push
das
jns
push
xor
call
mov
push
xor
roll
add
loope
jle
or
or
aam
push
jmp
sbb
push
pushf
inc
mov
jo
fbstp
xlat
jmp
inc
shrb
xor
test
adc
lea
lahf
push
ljmp
xchg
or
cmp
lcall
dec
add
dec
or
adc
pop
add
xor
add
or
dec
es
mov
xchg
cld
xchg
repz
loope
and
lods
push
scas
cltd
or
leave
cmp
data16
sub
inc
add
add
push
push
jecxz
gs
sbb
jno
add
imul
or
call
and
add
mov
pushl
push
and
and
add
outsl
xor
sbb
push
pop
xor
and
sub
push
mov
push
cmp
cld
cmp
imul
movzbl
adc
nop
xchg
ja
pop
daa
test
add
in
pop
add
in
lods
sbb
ret
dec
mov
dec
or
loop
mov
and
out
jb
sbb
mov
mov
add
test
fwait
jmp
jo
sbb
test
jno
ljmp
pushf
aam
jl
jbe
pop
arpl
scas
cmp
add
loopne
or
push
lahf
jp
and
xor
test
sbb
xorl
add
mov
arpl
cmp
xor
or
jmp
xor
xor
push
jg
push
mov
inc
rclb
mov
jnp
inc
out
scas
cmpl
int3
orb
aas
scas
lahf
rolb
jge
xor
inc
sbb
sbb
test
arpl
popf
int
movsb
adc
pop
and
jmp
inc
ret
movsb
imul
ret
loope
adc
lods
enter
mov
and
pop
sbb
pop
xor
or
mov
push
add
xor
push
push
ret
popa
mov
push
push
push
sbb
dec
push
sahf
push
pop
or
jb
call
jb
lods
mov
lods
dec
repnz
mov
mov
push
lods
xchg
add
inc
push
fnstenv
mov
inc
xor
cs
ret
push
adc
inc
push
arpl
rolb
push
sub
adcb
das
push
inc
sbb
iret
cmpsl
aas
push
add
pop
repz
leave
adc
movsb
imul
into
mov
popa
es
icebp
push
mov
es
lret
aas
les
jg
add
fstl
fldz
fcomp
fnstsw
in
dec
mov
frstor
pop
fsubr
pop
faddp
xor
fstpl
cmp
adcb
pop
lea
mov
push
fnstenv
push
sub
pop
pop
jp
push
insl
fadds
enter
mov
pop
hlt
xlat
hlt
mov
xchg
cmp
gs
ret
push
lea
push
insl
insl
hlt
push
jmp
loop
adc
sbb
dec
add
add
push
mov
push
icebp
sub
and
fwait
xchg
cs
or
mov
gs
xchg
mov
mov
jnp
jae
jmp
fldl
cmp
pop
int
push
mov
lea
mov
gs
or
aad
int3
cmp
sub
mov
or
jb
adc
jne
jns
pop
sarb
pushf
lock
mov
dec
add
add
add
adc
add
adc
fbstp
push
ret
mov
fldl
loop
jnp
pushw
mov
mov
mov
shrb
fmull
repz
in
loop
add
dec
sti
fimuls
enter
addb
rcll
int3
loopne
shr
dec
mov
fcomps
adc
inc
sar
leave
clc
pop
call
arpl
jmp
loop
lret
hlt
push
pop
cmp
fists
sbbl
xchg
push
lock
lods
rorb
push
prefetch
inc
sbb
sahf
add
ss
xchg
xor
rcl
mov
rolb
mov
mov
push
enter
jge
push
aam
bound
test
insl
push
adc
out
mov
xchg
add
pop
in
mov
popa
xchg
lods
adc
xor
push
out
xchg
and
cmpsl
ret
or
loope
sbb
rolb
or
xchg
xor
call
icebp
jecxz
popf
mov
jge
xchg
les
sti
and
ss
movsl
mov
sub
add
mov
or
push
jb
or
aaa
push
je
push
jne
push
xor
cmpsb
and
mov
sub
sub
fidivl
incb
jb
push
or
jns
movsl
stc
dec
pop
jb
adc
or
loope
add
mov
and
jno
mov
xor
lods
adc
inc
call
fmuls
or
or
push
sub
in
push
gs
stc
or
dec
or
adc
mov
sub
sbb
inc
mov
testl
pop
mov
bndstx
dec
mov
mov
out
push
push
sub
inc
jae
or
push
inc
aas
xlat
in
add
sbb
push
adc
call
add
sbb
and
fmull
repnz
dec
sbb
dec
pop
add
push
adc
pop
fiaddl
inc
pop
push
mov
push
sub
insl
jge
sbb
mov
pop
jp
add
dec
jmp
inc
pop
add
dec
int3
adc
enter
rcrl
push
xchg
lea
lahf
sbb
inc
cmp
out
ficoms
ret
add
call
aam
lcall
insl
adc
sub
sbb
sub
fildll
dec
adc
xchg
or
push
adc
dec
cmp
sub
enter
sub
or
mov
ja
sbb
sysexit
dec
lret
add
pop
adc
fcomps
ret
mov
jb
and
sub
addb
mov
daa
ret
mov
mov
test
int3
push
jg
jne
adc
cmp
jb
ret
jne
dec
mov
jae
scas
movsl
jbe
pusha
push
lea
outsb
popa
mov
jbe
push
xor
adc
inc
mov
sbb
push
shl
or
mov
add
movsb
into
sub
pop
fwait
cmp
je
push
push
dec
rcrb
lods
rorl
push
pop
inc
inc
les
psrad
inc
test
mov
adc
and
or
cmpsl
test
dec
mov
cmpsl
cmp
xchg
call
lods
jg
shll
ret
lahf
mov
adc
cs
xor
dec
loop
pusha
xor
rcrb
rclb
push
pop
jb
add
mov
ja
inc
mov
lock
rolb
push
leave
roll
add
add
mov
mov
sarb
dec
jbe
mov
insb
and
cmp
pop
fbld
ljmp
mov
cli
sbb
cmpsb
cmp
push
call
lret
pop
insb
add
and
jns
sub
roll
shlb
cmpb
test
movsl
mov
leave
test
inc
loope
lea
rolb
nop
xchg
ds
add
xlat
sbb
jecxz
jl
lret
xor
adc
orl
mov
sbb
subb
test
pop
pop
inc
lods
in
andb
ror
xchg
push
mov
mov
mov
lods
add
lock
lea
test
movb
in
lahf
sbb
xchg
sub
adc
fisubrl
push
adc
cmp
dec
mov
lcall
sbb
push
push
sbb
aaa
mov
andl
sbb
lret
loopne
bound
xchg
dec
aam
mov
faddl
adcb
push
jb
and
mov
pop
pop
or
pop
mov
cmp
les
and
add
inc
loope
stc
add
cmp
xchg
jne
pop
addl
in
cld
mov
xor
or
addl
aam
jbe
sub
xor
push
cwtl
daa
mov
push
out
mov
inc
lds
cmc
shrb
sub
and
or
iret
xchg
or
mov
jge
dec
inc
and
adc
sub
es
and
pop
out
and
jo
out
and
test
mov
push
add
add
pushf
mov
mov
add
inc
xchg
pop
push
adc
push
pushf
jl
push
movsl
dec
shr
push
add
add
xor
and
jmp
int3
mov
mov
roll
jo
cmp
mov
inc
sbb
push
push
push
sbb
adc
xorb
mov
iret
sbb
in
mov
xchg
stos
test
sbb
sub
jnp
pop
cltd
or
inc
add
push
xor
aam
cwtl
xchg
pushf
mov
pusha
cwtl
add
cltd
cmpsl
or
sub
scas
xchg
ja
or
sub
inc
jb
mov
xchg
pop
lret
sbb
sub
int3
scas
sub
inc
rcr
push
xchg
mov
mov
js
add
push
xchg
syscall
sbb
or
mov
lahf
add
lods
push
add
icebp
cltd
push
dec
mov
sub
cmp
inc
cmpsl
fsubrp
add
jmp
sbb
xlat
mov
push
outsl
aam
jns
add
jae
adc
nop
add
cmp
inc
pop
xchg
jae
enter
jae
je
in
shlb
mov
in
sub
push
dec
fwait
je
js
rorb
mov
push
bound
or
aaa
add
mov
jle
jecxz
push
add
les
dec
lret
testb
lods
pop
dec
loopne
mov
insl
jge
push
testl
mov
cmp
sub
dec
xchg
fadds
or
in
sbb
ja
std
or
mov
xchg
test
arpl
pop
lea
sub
incl
sbb
and
cmpsl
dec
pop
pop
push
push
js
das
mov
ds
sub
pop
mov
mov
inc
dec
add
sub
int3
adcb
orb
es
cmp
adc
add
lret
push
add
pop
fnstcw
push
imul
ret
daa
mov
mov
jno
paddusb
sbb
and
push
sub
adc
xor
lea
ja
push
push
movsb
adc
movsl
pusha
or
pushf
sbb
push
lret
flds
mov
cli
jae
fistl
jg
aaa
cmpsl
jo
adc
xchg
inc
or
jbe
out
xchg
js
ret
and
push
ret
xchg
xchg
pusha
push
jo
cmp
adcb
inc
and
push
sub
shrb
add
xchg
jb
subb
fildl
es
xchg
and
push
and
adcb
sub
and
fsubrs
pusha
fidivs
xor
add
inc
popa
dec
add
fldl
cmpl
cld
xor
adc
movb
inc
lods
adc
mov
gs
rcrb
dec
sti
jmp
cmp
sub
adc
ljmp
add
jae
test
mov
mov
pop
rorl
push
and
pop
and
in
stos
xlat
dec
xchg
into
push
add
dec
stos
add
out
mov
cli
mov
add
pop
adc
mov
lods
imul
sti
or
or
push
mov
enter
push
addb
lret
test
repnz
adc
jne
jo
add
and
xchg
mov
arpl
insl
out
xchg
aam
inc
imul
sbb
dec
test
dec
loop
call
fldl
push
outsl
hlt
mov
cmp
lahf
push
sub
in
push
and
push
movsb
jle
popf
test
adc
fadds
fsubl
jne
loopne
cmp
push
push
pusha
adcl
inc
ds
add
mov
mov
aam
inc
std
inc
jmp
rcrb
in
and
fs
jg
movsb
sub
sub
dec
xchg
adc
adc
cmpsb
sahf
rclb
clc
mov
mov
push
into
cli
push
mov
popf
mov
add
sbb
sarb
mov
mov
xchg
pop
xchg
and
sub
fnstcw
test
jl
test
aaa
enter
test
addb
adc
dec
dec
adc
orb
jmp
out
pop
aas
push
js
sbb
pushf
mov
movzbl
xchg
or
push
ja
imul
cmp
jge
insl
daa
mov
inc
and
add
ret
lods
pop
test
sub
sub
xor
mov
sub
mov
fucomi
add
add
xor
popf
ds
or
js
sub
dec
push
push
ds
lcall
dec
adc
xchg
xor
in
inc
lds
pop
and
enter
sub
push
and
movb
outsb
and
adc
xchg
cwtl
scas
cmp
pop
sub
xchg
js
push
add
xor
dec
xlat
hlt
or
add
push
iret
cmpsb
insb
cli
cli
or
pop
gs
hlt
dec
mov
iret
add
test
or
loope
cmp
mov
in
inc
mov
or
je
in
arpl
std
je
cmpl
mov
jnp
or
sbb
mov
pushf
adc
xchg
mov
jnp
adc
int3
add
dec
cmpsb
rcrl
pushf
add
or
add
dec
addb
dec
mov
inc
lock
scas
movsb
or
pop
mov
mov
and
ja
fwait
sti
sbb
insb
hlt
mov
lea
push
js
into
in
repnz
pop
in
and
add
mov
adc
gs
push
cmp
stos
nop
sub
fisubrl
mov
inc
adc
xor
ret
rcrb
je
fs
stc
mov
movl
mov
mov
idivl
mov
lea
stos
mov
and
mov
push
push
add
enter
xchg
mov
push
sub
mov
mov
loop
fcmovnbe
cmp
popf
adc
cmpsl
loopne
mov
cltd
or
mov
xor
mov
pop
mov
in
cld
push
shlb
cmpb
jmp
xor
xchg
std
fsts
sbb
enter
sub
add
and
loop
repnz
fsubs
jle
push
xchg
push
inc
loope
std
ffreep
iret
les
nop
add
push
lods
aaa
adcl
rcrl
mov
stos
cli
adc
subl
push
push
cmp
jg
mov
jbe
jne
rcrl
jne
fisttps
xchg
clc
call
adc
mov
or
add
push
cld
cld
pop
jp
push
clc
or
repz
add
mov
fisubl
bound
adc
inc
ljmp
stos
rolb
roll
movswl
dec
or
push
add
ficoms
jl
push
lea
xchg
fucomi
mov
jnp
adc
mov
imul
fiadds
push
mov
mov
cmpb
repz
inc
mov
jbe
fimuls
mov
push
and
pushl
pop
inc
pop
cmp
pop
jg
jb
mov
pop
xor
in
sbb
ss
je
jmp
sbb
adc
mulb
mov
add
pop
xlat
pop
adc
shll
pop
or
mov
and
inc
xor
or
cmpsw
mov
enter
nop
pop
and
bnd
push
pusha
jns
inc
icebp
jbe
test
pop
into
adc
mov
push
push
scas
push
inc
call
pop
jb
or
sbb
and
add
pusha
xor
lcall
pop
jle
mov
sbb
sub
dec
or
or
mov
adc
mov
xor
xor
sub
adcb
loop
out
outsl
jns
sahf
fmuls
rorl
jne
inc
mov
push
push
mov
in
mov
mov
ficoml
icebp
pop
or
jp
rorb
xchg
push
out
add
pop
mov
js
push
rcrb
mov
fsubl
adcl
sbb
xchg
dec
das
push
mov
inc
shll
inc
ret
mov
push
mov
test
xor
cwtl
loop
mov
and
jo
fwait
jg
xor
add
dec
call
add
loopne
or
xor
mov
add
xchg
cwtl
je
andb
sub
pop
mov
adc
das
xor
and
inc
and
rolb
sub
push
pop
lret
jo
or
les
pop
sbb
mov
xchg
inc
out
pop
cmp
xchg
adc
leave
and
lret
mov
outsl
adc
add
pushf
pop
xor
sub
add
pop
xchg
aaa
sti
mov
pop
sub
cmp
leave
mov
fisubrs
pop
cmp
aaa
xlat
inc
adc
xchg
or
sub
mov
mov
and
rcrl
mov
out
and
or
jmp
or
inc
jg
xor
jmp
cmp
pop
mov
or
out
xor
pop
jno
or
adc
clc
mov
jb
xor
add
dec
arpl
cmpl
mov
imul
insl
or
add
dec
dec
rolb
subb
clc
leave
cmp
jne
repz
sub
xchg
mov
bound
sub
mov
sub
cmp
popa
adc
push
or
lahf
sub
aad
ret
jg
mov
fidivl
imul
or
sub
popf
mov
js
scas
jbe
cli
jmp
repz
push
es
mov
mov
jge
test
mov
sbb
jb
sbb
adc
xor
mov
nop
sarb
adc
out
dec
stos
ret
cmp
leave
sti
imul
inc
stos
data16
bound
shll
inc
inc
jmp
inc
fs
movsl
mov
or
lea
and
mov
sbb
mov
js
loop
arpl
push
test
adc
pop
sbb
in
roll
or
sub
mov
mov
and
imul
mov
adc
ret
scas
daa
mov
aad
out
popf
aam
call
xchg
popf
push
jecxz
mov
jns
shll
xorl
and
inc
or
xor
jno
push
and
push
in
pop
cmpsl
pushf
ret
aam
pop
in
mov
xchg
ss
in
pop
inc
push
pop
push
jae
add
mov
movsl
insl
fcoms
dec
dec
xchg
lcall
push
mov
mov
mov
xor
dec
and
cwtl
lret
adcb
fsubl
cmp
shlb
adc
push
cmp
inc
xorl
ret
and
stc
insl
mov
pop
les
enter
sub
outsl
fsubrs
jnp
in
aam
push
and
insb
and
cmp
ret
sub
and
mov
imul
push
sub
push
dec
clc
or
pushf
shrb
cld
je
sbb
loopne
cmpb
pusha
fisubrl
sbb
out
ret
cs
pop
faddl
mov
nop
sbb
icebp
xchg
iret
mov
mov
mov
add
lahf
mov
aaa
xor
lock
jge
sub
push
push
push
test
and
out
mov
and
mov
sbb
and
inc
push
xor
add
jge
and
add
or
push
jp
aaa
scas
mov
or
sub
in
xor
clc
lahf
dec
gs
xchg
mov
sub
or
inc
ljmp
dec
xor
test
xchg
lea
cmp
xchg
add
and
lahf
scas
in
les
cmpsb
inc
dec
or
or
int3
insb
icebp
push
push
loope
pop
mov
xlat
xor
dec
ss
mov
and
in
jl
clc
cmpsb
es
sub
lods
adc
popf
insl
lods
inc
dec
mov
mov
dec
repz
mulb
sub
jle
fadds
xor
push
pop
push
insb
inc
jle
and
adc
sbb
fcoml
mov
push
in
add
test
sub
push
addb
cmp
lret
adc
jo
jl
mov
bsf
dec
and
sbb
mov
jmp
add
xlat
pusha
test
nop
loopne
leave
xor
shr
xor
adc
js
mov
not
adc
test
xchg
push
movl
fmull
cmp
jbe
add
jmp
add
mov
or
or
out
and
or
inc
push
push
test
pusha
mov
inc
xchg
nop
sbbb
aaa
stc
sub
and
xchg
xor
sbb
les
inc
bound
mov
sbb
pushf
cmp
add
outsb
adc
test
stos
mov
int
fadds
scas
and
scas
mov
test
jl
cmpsb
jne
loopne
scas
adc
es
dec
cmp
jge
les
sbb
or
jbe
or
jb
cwtl
xor
dec
popa
and
or
xor
into
enter
and
adc
imul
mov
lahf
rcrb
add
nop
adc
jbe
ret
xchg
adc
mov
inc
ljmp
lcall
xchg
adc
shrl
or
xor
out
enter
cld
fs
stos
xor
loope
adc
or
lods
sbb
adc
pop
shlb
add
inc
and
xor
fdivr
xchg
adc
dec
cmp
or
cmp
lock
or
push
lods
dec
pop
cltd
insb
int
xchg
es
shlb
pop
adc
add
mov
push
add
or
xor
addr16
jg
or
lods
ficomps
push
inc
imul
fwait
stc
sti
sub
adc
push
add
test
sbb
ret
inc
enter
sbb
push
push
jmp
and
add
outsl
mov
push
cmp
sub
sbb
sbb
sub
hlt
or
repz
orl
mov
or
outsl
dec
adc
ret
inc
aam
add
lea
rorb
jo
adc
and
loope
or
jecxz
push
pushf
call
aas
xor
add
pop
mov
add
js
pop
aaa
or
and
or
fldt
mov
fs
and
les
sbb
cmp
mov
and
nop
jno
or
loop
mov
sub
stc
cmp
jl
mov
or
adc
xor
or
cmp
dec
cwtl
push
push
push
and
cs
sarb
or
enter
adc
sub
pop
popl
insb
add
add
daa
iret
into
add
nop
push
adc
rorb
fucom
clc
and
sub
mov
sub
popf
ss
cmp
aad
push
xor
rcl
add
ret
sub
cmp
js
push
sub
jg
loopne
sbb
pop
pop
add
mov
stc
loopne
cmp
bound
mov
mov
mov
leave
xor
and
and
push
ret
inc
test
or
cmp
subl
jne
push
outsl
add
rcll
or
sub
pop
jb
add
and
cmp
jl
jo
dec
cmpsb
icebp
add
push
and
mov
inc
add
jl
mov
mov
push
mov
out
and
rorb
enter
fisubrl
movsl
jb
ss
pop
push
dec
push
or
lods
call
or
adc
inc
andb
adc
rcrb
push
add
xor
in
insb
mov
mov
jne
insl
or
syscall
inc
mov
jae
nop
daa
jle
push
xchg
push
cwtl
cs
adc
dec
les
pop
add
sub
mov
lea
movsb
out
mov
repz
scas
and
mov
dec
pop
ss
mov
int
imul
cs
mov
es
mov
mov
mov
pop
push
adc
dec
and
rorl
subb
ss
int3
jge
add
add
popa
movsb
cmp
add
movsl
insl
jne,pn
ret
cmp
ficomps
sub
out
push
jno
loope
popf
aad
rcrb
cmp
sar
cmpsb
mov
push
sbb
fmuls
push
cmp
call
dec
lret
dec
pop
insb
add
and
and
pop
ret
xor
mov
addl
sbb
mov
pop
or
xorb
xchg
in
nop
adc
or
or
add
add
ja
sbb
add
mov
pushf
add
jmp
in
and
imul
add
call
hlt
test
popa
and
mov
movsl
push
or
adcl
mov
mov
adc
sbb
or
fwait
sub
ret
pop
add
and
popf
jb
xchg
adc
es
xor
les
add
add
shrb
faddl
clc
mov
arpl
sbb
les
mov
cmp
sub
test
jge
mov
add
sub
into
ljmp
mov
aaa
push
subb
sub
shlb
and
fmull
cmp
rcrl
test
mov
ds
lock
adc
mov
cld
pusha
push
push
ret
jp
adc
xchg
ret
mov
adc
or
fwait
and
xor
in
dec
sbb
xchg
cli
push
push
dec
es
jp
icebp
and
or
cs
cmpb
je
lea
inc
mov
xchg
ja
hlt
notl
dec
je
or
and
test
fs
gs
mov
bsf
jb
push
sub
adc
jmp
rclb
push
adc
jmp
xchg
out
ret
nop
push
in
jecxz
iret
push
fcmovnb
push
lods
data16
popf
dec
add
xor
mov
call
cmp
pop
push
clc
pop
add
ret
and
iret
xchg
cmp
shl
shrl
daa
call
adc
lahf
add
jo
inc
call
dec
rclb
in
push
pop
cwtl
pusha
mov
xlat
pop
popa
adc
mov
dec
faddl
adc
push
or
lcall
push
cs
loopne
pusha
lea
mov
lds
adc
or
sub
and
enter
pop
add
or
or
mov
inc
pop
sub
inc
in
sbb
in
inc
test
and
nop
or
sbb
psrlw
daa
aaa
push
mov
andl
movsl
jg
data16
inc
cmp
lock
xor
clc
xor
hlt
loop
sub
push
faddl
or
mov
lret
inc
dec
jge
sub
push
push
add
push
mov
push
stos
inc
mov
xor
jle
add
push
sbb
pop
push
and
addl
or
pusha
xor
dec
or
cmp
shlb
xlat
ret
leave
xlat
subb
sahf
movb
push
mov
repz
std
and
enter
movsb
cmpb
andl
or
jg
movsb
and
jmp
leave
push
add
push
sub
mov
inc
decl
inc
adc
jecxz
insl
mov
jl
adc
movl
test
xchg
pop
dec
push
loope
jge
xchg
clc
rorl
mov
push
or
or
or
push
push
mov
movsb
fsubs
test
jl
or
pusha
add
jne,pn
xchg
mov
add
xchg
rolb
adc
and
and
mov
xchg
inc
mov
cwtl
push
xchg
xchg
clc
xchg
push
sub
push
lret
shlb
jnp
or
or
add
sub
mov
sbb
in
mov
mov
test
add
sbb
jmp
lahf
xor
test
sbb
push
orl
inc
cld
sub
aam
adc
notl
mov
and
fmuls
add
sbbl
repnz
pop
or
inc
int
add
adc
mov
add
dec
push
movb
xor
sbb
ret
rolb
lods
movsb
xor
push
dec
adc
clc
fnstcw
push
mov
lock
or
cmc
sbb
add
add
js
hlt
jno
call
jge
int3
sarb
lret
mov
inc
add
jl
adc
or
cltd
jo
adcb
cmp
or
sarb
jne
xlat
sbb
add
flds
adc
dec
repz
xor
lret
hlt
mov
jl
imul
add
ja
push
pop
xchg
pop
push
outsl
push
je
push
pop
push
outsb
dec
adc
xchg
jg
aam
add
sbb
adc
mov
jbe
add
push
fs
jnp
xor
jmp
inc
nop
mov
jo
dec
lds
jl
pop
adc
push
in
xorl
int
test
or
add
mov
xchg
push
sti
je
push
adc
push
cwtl
das
push
adc
push
dec
adcl
add
and
popa
xchg
or
jbe
cltd
jmp
jb
aas
rclb
jmp
inc
mov
adc
push
and
push
push
sbb
or
aam
notb
pop
repnz
nop
js
shl
add
cmp
imul
xor
xor
in
add
fimull
or
push
imul
cmp
fwait
repnz
xchg
push
test
mov
sbbl
push
les
dec
push
cmp
xor
adc
add
push
inc
inc
inc
dec
push
stos
test
flds
sbb
or
push
add
push
adc
mov
xor
popa
int3
call
aaa
ret
push
rolb
nop
mov
fwait
shl
jmp
das
fs
arpl
xchg
pusha
inc
sub
rcrl
out
push
leave
outsb
pusha
in
or
adcb
in
fidivrs
adc
dec
ljmp
lods
jae
mov
adc
pop
int3
add
adc
movsl
or
movl
push
pop
or
in
add
pusha
sbb
add
cmp
enter
call
popa
sub
pop
sbb
sub
push
loopne
shl
add
xor
or
pushf
gs
and
in
pop
mov
ret
fadds
mov
stos
add
test
add
mov
pop
xor
push
hlt
dec
cmc
ret
fsubrs
imul
int
jne
sub
mov
mov
rol
add
rcll
enter
pusha
inc
cmpsl
mov
sbbl
aam
or
add
inc
or
cmp
or
push
mov
cmp
fdivs
inc
or
stos
mov
or
pushf
inc
xchg
dec
adc
xor
or
in
jo
pop
lea
and
inc
sbb
or
xor
decl
mov
rol
mov
ror
xor
shr
xor
sub
jnp
inc
or
or
icebp
add
add
add
mov
shl
jl
or
iret
or
jecxz
out
mov
not
and
xor
add
add
ret
pop
aam
sub
pusha
sbb
sub
mov
ror
cli
idiv
jl
fisubrs
jge
xor
and
and
xchg
add
xor
gs
fidivrs
xor
dec
imul
ljmp
ja
xchg
or
push
or
xlat
ret
pop
fisttps
sbb
rolb
testl
hlt
add
call
xchg
add
aam
cmp
xor
sub
pop
imul
rol
out
and
add
push
xor
jb
test
add
imul
xchg
add
shl
mov
cmp
in
push
cmp
repnz
repnz
push
bound
and
xor
les
subl
mov
xor
cmpsb
mov
call
in
imul
in
loopne
cmp
rorl
pop
cmp
aam
jecxz
and
xorl
or
int3
jge
int3
loope
add
in
push
xor
repz
iret
or
lods
mov
pop
xor
push
fisubl
rolb
mov
inc
inc
xchg
sub
push
jo
ficoms
rcr
mov
mov
add
pop
pop
cmp
adc
push
loop
mov
add
add
or
fadds
pop
jbe
call
imul
fisubl
add
insb
jp
push
and
add
gs
fsubrs
inc
lcall
nop
cmpsb
call
int3
adc
inc
mov
lds
jo
add
shll
cli
stos
adcb
inc
aam
cmp
dec
shll
sub
lcall
rclb
xchg
fldz
rolb
inc
aaa
cli
push
push
or
xor
xor
rolb
lret
rorb
imul
xchg
sub
sbb
jo
dec
ret
adc
add
push
add
rolb
dec
mov
inc
dec
push
nop
data16
xchg
and
push
cwtl
add
xor
cmp
inc
and
int
leave
push
push
pop
or
xor
cmp
sub
mov
xor
pop
sahf
push
add
test
or
nop
and
nop
out
pop
fs
xchg
inc
pusha
xor
mov
xchg
xchg
movsl
inc
in
pop
mov
or
rolb
dec
sahf
fs
pushf
loop
shr
or
add
mov
xor
dec
movsl
imul
enter
fsts
or
jb
adc
mov
cltd
cmpsb
imul
push
loopne
or
and
add
and
ret
sub
jg
mov
dec
sbb
shrl
push
mov
dec
add
inc
clc
addl
pop
push
incl
sub
data16
add
dec
pop
xor
pop
addl
call
shll
pusha
jmp
or
scas
subb
add
rorb
outsb
adc
jge
inc
les
or
mov
sub
mov
push
lock
lea
jmp
lea
push
sub
dec
repz
jecxz
mov
and
mov
pop
dec
jne
pop
nop
loope
xor
mov
add
jl
sub
mov
cmp
jbe
or
push
push
and
xor
xchg
cmp
push
mov
push
pop
fadds
rep
jle
xchg
add
xchg
mov
or
stos
scas
or
pushf
mov
sar
mov
outsl
pop
loopne
ror
mov
notl
ljmp
ss
jb
dec
stc
xchg
popf
pusha
je
adc
mov
and
inc
fimuls
sbb
dec
sub
dec
fcompl
inc
add
lea
clc
add
repz
xchg
dec
insb
jp
or
lods
mov
add
ljmp
imul
inc
dec
fcom
and
sub
lret
sub
mov
rclb
fcoms
dec
sub
mov
adc
rcll
xor
add
push
cmp
stos
or
sbb
jp
pusha
or
xchg
xchg
loope
mov
mov
andl
or
inc
andnps
or
jl
inc
or
addr16
add
dec
add
xor
cmp
adc
push
inc
int
cmp
cwtl
lret
cmp
and
push
cmpsl
sbb
sub
daa
or
je
sbb
jle
fistl
shl
or
pusha
ljmp
ds
sub
and
inc
test
cltd
mov
dec
test
jge
scas
and
sub
push
mov
push
nop
les
mov
mov
cmp
adc
cmp
push
icebp
xor
cmc
pusha
push
mov
jmp
addb
xor
testb
sub
pop
cmp
inc
cmp
sub
sbbb
unpckhps
fiaddl
add
sub
std
add
or
inc
in
rolb
add
addr16
cs
jle
es
rolb
inc
add
sub
push
movsl
dec
pop
cmp
enter
in
fwait
ret
push
pop
std
inc
add
shll
cld
jle
out
dec
sub
mov
pop
lock
xor
inc
add
ljmp
or
in
mov
sub
adc
and
push
inc
push
ret
lahf
mov
add
pop
ret
add
pop
push
lods
ds
mov
repz
push
and
and
lods
dec
and
test
dec
mov
mov
cmpsl
mov
mov
jnp
test
xchg
orb
adc
mov
dec
cli
insl
xchg
xchg
and
inc
test
lods
mov
jl
dec
loope
add
jge
call
jmp
inc
and
sub
adc
sub
xlat
xor
rorb
inc
mov
pop
mov
dec
mov
and
insb
loopne
push
inc
cs
pop
dec
xchg
jmp
adc
ja
adc
call
jmp
mov
xorl
push
fdivrs
aaa
add
test
fldl
sub
lret
in
stc
sub
movsb
sbb
fwait
push
std
sti
loope
and
mov
cmp
push
push
sahf
or
divb
push
and
and
push
push
daa
mov
mov
ds
add
mov
cmpsb
xor
ret
jbe
test
outsl
adc
sub
push
mov
into
jle
cltd
scas
out
jno
pop
cmp
xchg
es
and
pop
test
inc
cmp
push
sub
mov
in
stc
cld
lret
xor
xchg
push
push
cmp
push
cs
push
mov
out
jge
xchg
jbe
add
mov
hlt
out
dec
lret
enter
movsb
and
repnz
cs
push
mov
xchg
filds
jmp
push
push
and
ss
mov
pusha
orb
push
outsl
outsl
mov
or
dec
add
cmp
jne
arpl
jo
and
or
sbb
adc
jb
xchg
pop
push
int3
mov
and
xor
mov
cmp
icebp
inc
add
nop
add
or
stc
call
shl
daa
add
mov
xchg
test
jbe
push
add
sar
push
mov
pop
loopne
inc
push
jae
push
cmp
mov
iret
jmp
fdivs
test
jp
sub
xor
in
outsb
stos
add
mov
add
jbe
mov
leave
sbb
mov
mov
dec
pop
mov
mov
sbb
jg
ret
pop
cmpl
push
insb
push
je
testb
mov
int3
sahf
ljmp
jne
inc
shl
or
test
ret
xchg
and
jl
lods
mov
adc
jns
jge
add
cmpb
fldt
and
jne
xor
clc
and
repz
adc
or
xchg
lcall
shrb
pop
inc
mov
jo
add
sti
dec
jl
sarl
push
lret
jbe
sub
add
movsl
xor
add
push
pop
sub
add
mov
ljmp
mov
push
ret
adc
outsb
jmp
mov
mov
sbb
test
and
xchg
dec
jp
xchg
add
mov
inc
push
push
jg
pop
mov
cmp
jne
push
inc
ds
add
stos
sub
sahf
lret
insw
or
cmpsb
call
pusha
sbb
add
sub
clc
push
lods
nop
out
xor
and
pop
pop
andl
ja
add
adc
add
and
pop
cli
add
inc
bound
lods
or
inc
add
push
or
aas
xchg
in
call
push
enter
push
loopne
xor
dec
pop
adc
xchg
add
jno
push
js
cmp
inc
mov
mov
sub
sbb
push
mov
push
dec
or
sbb
dec
jp
push
jno
stos
add
test
bound
dec
pop
push
push
add
out
jo
les
jmp
loopne
mov
lret
push
push
bound
stc
ja
ret
aas
shll
ss
cmp
jb
mov
push
lock
icebp
mov
jns
shlb
inc
adc
pop
push
sahf
repz
sbbl
mov
or
jmp
mov
add
add
inc
jne
push
loope
pop
insb
ret
int3
das
dec
and
cmp
add
lods
sub
ret
dec
insb
in
xor
lahf
mov
movsl
rorl
popa
ss
cmpxchg
cmp
jae
xchg
or
cmp
rclb
lcall
int3
jmp
lods
aaa
pushf
dec
in
in
shrb
movsl
sbb
add
mov
jb
add
adc
loop
jle
lock
shrb
stc
adc
dec
add
mov
out
inc
jmp
cld
or
sbb
cmp
idivl
mov
movb
jmp
mov
fistl
pop
nop
sub
fstpt
in
mov
adc
mov
pop
cwtl
push
inc
or
inc
dec
mov
int
mov
mov
xchg
or
out
mov
addl
je
call
adc
fs
or
lahf
out
adc
pop
pop
dec
add
add
xchg
sub
dec
inc
incl
jge
je
out
test
mov
push
or
pop
jp
jg
mov
xor
and
pop
xor
inc
cmp
jl
pop
cmp
sbbb
test
aam
mov
pusha
dec
test
ret
push
xor
sbb
xorl
mov
pop
andb
add
sub
data16
xor
sbb
jle
sub
add
mov
daa
xorb
cmc
xor
pop
ret
push
das
push
cld
add
push
or
jl
cltd
jbe
add
jnp
mov
test
xor
xor
testb
mov
movsl
mov
pop
jmp
xor
mov
dec
xchg
add
jnp
fsubs
cmp
sbb
cmp
push
lea
stos
mov
mov
comiss
push
xchg
jp
in
inc
add
in
and
xor
mov
fstl
or
mov
lcall
fwait
or
loope
and
add
mov
enter
shl
add
fbld
or
add
lret
mov
jnp
pusha
and
adc
movsb
mov
ret
add
jne
mov
adc
int3
sub
push
fidivrs
addb
ja
add
adc
xor
push
pop
add
sub
mov
test
loopne
cmp
loop
pop
or
jecxz
push
inc
fs
add
push
addl
jno
fbld
or
dec
inc
cmp
lock
mov
inc
das
pop
or
cmp
clc
sbb
mov
adc
push
mov
and
daa
out
jl
arpl
pop
mov
arpl
add
or
inc
and
pop
lock
or
or
inc
enter
and
shrl
sti
add
mov
subl
fchs
cvtps2pi
adc
or
mov
xchg
in
add
add
mov
mov
movsl
test
and
push
inc
xchg
xchg
divb
add
push
outsl
push
xchg
jo
sub
mov
mov
add
sbb
ja
stos
mov
xchg
leave
add
dec
in
mov
ficoms
daa
andb
xchg
jo
adc
shlb
nop
shlb
cmpsb
mov
add
or
sub
roll
push
push
adc
popf
ss
clc
shrb
xor
cmp
push
aaa
inc
adc
adc
int
sub
add
int
ret
adc
mov
aas
insb
push
xchg
test
add
push
add
or
jle
lods
jmp
push
js
and
mov
jmp
das
xor
shr
sbb
int
add
mov
pop
ret
cmp
das
add
add
adc
out
push
xchg
and
out
pop
dec
pop
sbb
push
inc
in
movsl
sub
push
dec
mov
push
ret
movsl
xor
mov
add
sub
and
cmp
loopne
lret
mov
out
mov
inc
jmp
sbb
sbb
mov
pop
int3
xchg
outsl
lods
or
hlt
add
inc
cmp
inc
mov
mov
mov
clc
xchg
xor
pop
adc
out
adc
sar
mov
push
sbb
mov
popa
and
gs
scas
add
ret
fdivs
pop
pop
pusha
sbb
pop
jmp
rorb
pop
pop
dec
mov
or
sarl
jmp
xchg
xorb
sub
adc
rcrb
cmpsb
add
aaa
cwtl
dec
pop
aad
fsubrl
scas
fisubl
push
cmpsb
out
imul
dec
push
adc
adc
cmp
aaa
pop
cmp
mov
or
and
sub
fsubrs
sbb
int
in
xchg
cmovle
add
cmp
push
sbb
or
inc
or
sbb
loop
push
pop
cltd
fisubrs
sub
inc
mov
test
aam
adc
ja
mov
push
gs
mov
lods
pop
sahf
ds
and
dec
dec
addl
dec
add
push
fisubrl
out
sar
add
xor
jp
sub
mov
mov
sbb
sbb
pop
mov
mov
push
inc
xor
adc
mov
loopne
shll
rcll
or
adc
or
sbb
mov
dec
pop
xchg
adc
jp
popa
push
aas
mov
addb
xor
xchg
inc
ljmp
jo
add
pop
push
pushl
fsubr
mov
pop
mov
fdivrp
loopne
pop
push
pop
push
push
push
sbb
adc
shl
mov
cwtl
push
nop
xchg
pop
adc
rcll
insl
popf
ud1
pop
sbb
data16
push
and
lods
testl
adc
dec
add
shlb
push
roll
cmpl
jne
sbb
pop
das
pop
dec
cmpsl
mov
xchg
pop
add
add
push
inc
add
push
and
dec
and
ss
or
and
inc
cmpl
xor
cmp
adc
jle
shlb
dec
outsl
movsb
into
adc
mov
mov
das
xchg
and
cmp
in
mov
add
loope
mov
cs
jne
push
inc
sub
sub
mov
insl
mov
pop
mov
shrb
or
xchg
jne
repz
push
push
cmpsb
sub
stos
mov
or
dec
insb
mov
or
hlt
push
lock
inc
nop
or
jo
add
mov
jb
xor
hlt
fisubrs
cmp
inc
aas
cld
dec
or
sub
inc
jo
jne
orl
xlat
add
into
or
push
mov
out
ret
cwtl
insb
and
popa
cmp
ret
pop
into
adc
add
dec
add
clc
mov
sub
mov
movl
xor
jp
mov
cmp
add
mov
sub
std
or
sarl
sbb
mov
sub
aaa
sbb
divb
adc
push
add
mov
mov
cmp
mov
jmp
sub
xor
mov
aam
adc
add
add
mov
pop
sub
leave
xor
mov
and
movsl
or
mov
pop
push
arpl
adc
or
inc
cmp
or
push
pop
mov
push
add
loopne
dec
je
loop
jae
add
dec
iret
dec
and
clc
jmp
aas
into
fdivs
ret
xor
adc
in
push
cmp
cmpsb
stos
jne
jg
add
xor
adc
xchg
std
addb
cmp
insl
xchg
cmc
add
adc
sub
jne
insl
push
pop
adcb
mov
or
test
inc
cld
xchg
hlt
push
push
mov
lcall
icebp
inc
mov
mov
cmp
adcl
sbb
vmwrite
push
push
add
push
push
sbb
repz
adc
mov
sub
and
inc
in
adc
add
mov
fwait
imul
push
rorl
sbb
lods
shr
sbb
or
sbb
push
aas
adc
add
cmp
adc
jmp
lea
push
sbb
mov
dec
inc
or
inc
bswap
mov
cmp
jne
data16
loop
ret
sbbb
or
dec
loopne
stc
jmp
cwtl
add
mov
jl
sbb
jmp
push
xchg
in
hlt
dec
pop
pop
xor
loopne
xor
push
jl
pusha
adc
mov
hlt
ret
loopne
cmpsb
sbb
sbb
std
cwtl
nop
inc
add
or
add
push
push
fstpt
loop
fiadds
xchg
or
and
fmull
jp
jl
xchg
mov
push
je
jne
push
shll
std
xchg
jecxz
popa
adc
push
repnz
sbb
xor
push
insb
cmp
sbb
push
movsl
scas
add
lahf
out
aaa
les
cwtl
mov
jl
ds
adc
call
mov
stc
sbb
push
dec
enter
sbb
addb
or
and
adc
decl
pop
mov
out
sti
sub
rorb
cmp
ja
dec
jo
push
std
adc
test
or
fisubrl
xor
cmp
push
and
or
push
cmp
mov
push
or
or
pop
add
mov
inc
push
rolb
jo
out
xlat
mov
cs
adc
int
int
and
out
jle
or
loopne
sbb
jmp
dec
rol
popf
sbb
or
ret
int3
add
xlat
rolb
test
add
push
add
dec
and
add
and
or
mov
add
sbb
ret
test
or
sbbl
imul
in
and
adc
je
jmp
daa
mov
int
lret
in
cmpsb
mov
adc
std
inc
xchg
cmp
sub
push
mov
and
inc
and
pop
mov
imul
imul
push
mov
cmp
mov
filds
orl
out
or
flds
insb
mov
mov
pop
push
popa
ret
mov
push
andb
inc
xor
add
pusha
cmp
test
stc
cmpsb
test
bound
jmp
cld
pusha
dec
adc
push
cmp
adc
in
push
jge
xor
mov
cmp
loopne
cmp
insl
loopne
ljmp
or
pop
cmc
mov
mov
push
enter
inc
mov
or
mov
dec
test
or
cmp
lock
ret
cmp
adc
or
fldt
or
jecxz
in
cwtl
push
fs
xchg
dec
cld
cmp
sbb
shlb
pop
push
inc
add
test
jge
jbe
cltd
jmp
pop
arpl
dec
xlat
ss
mov
scas
push
mov
pop
mov
enter
sahf
push
ss
fidivrl
jmp
jecxz
inc
cwtl
dec
jle
jmp
popf
aas
pop
cmp
add
bswap
pop
in
cmp
lods
or
sbb
pop
andl
pusha
pop
sbbl
xchg
pop
ja
add
in
jmp
adc
in
in
pop
inc
xchg
popa
aad
clc
in
push
jnp
mov
push
lods
mov
adc
inc
cmp
and
jae
jecxz
into
fcoms
push
scas
stos
pop
add
push
xor
fisubrs
fistpll
out
add
ja
or
clc
jae
xor
mov
adc
or
testb
loop
icebp
cmc
fdivl
int
repnz
xor
sub
mov
sar
xor
repz
pop
mov
loopne
sbb
cmp
xor
add
ret
ljmp
inc
stos
lds
pop
fcmovnb
jnp
pop
stc
sbb
and
pop
ret
sti
or
call
inc
jno
sbb
pop
nop
pop
add
jp
push
scas
inc
mov
cmp
popa
dec
jnp
loopne
shlb
ja
mov
xchg
sub
out
jb
dec
xchg
shrl
add
dec
pushf
mov
lods
scas
pop
adc
xchg
push
mov
xor
cmp
roll
aad
adc
jbe
shrb
push
mov
and
push
sbb
ja
add
ja
add
dec
movsb
jbe
add
jp
mov
movsb
pop
test
pop
inc
inc
push
ret
push
cmp
in
pop
clc
dec
cmp
test
and
fdivrl
push
sahf
xchg
jg
push
push
rolb
loopne
je
lea
sub
ja
mov
cmp
outsb
or
cmp
push
inc
jmp
mov
inc
cmp
je
inc
xchg
push
cmc
push
xor
fisubrs
cmc
fcompp
adc
jne
insb
lock
ret
jmp
push
xor
dec
andb
push
dec
adc
insb
stos
inc
mov
movsl
or
cmc
mov
inc
mov
iret
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
aaa
pusha
sub
out
jns,pt
add
adc
add
inc
add
cmp
mov
nop
jmp
add
push
xlat
fcomps
xor
icebp
jnp
les
inc
cmp
mov
push
and
push
push
sub
aaa
and
sbb
pushf
es
mov
mov
dec
inc
pop
pop
sbb
je
and
add
gs
mov
mov
adc
aaa
add
aaa
and
cmovno
pop
dec
sbb
insb
mov
dec
sub
mov
mov
or
sub
decb
mov
add
outsl
je
dec
xchg
into
jnp
and
xor
push
stos
mov
mov
jb
push
pop
in
mov
popf
mov
adc
push
testl
pop
test
in
and
add
insb
cltd
adc
add
adc
xor
push
xor
pusha
pushf
cmp
push
sbbb
test
cmp
and
scas
sub
mov
fadd
and
mov
ja
dec
je
cmpsl
jmp
bound
pop
adc
pusha
jne
das
pop
arpl
xor
dec
sbb
mov
stos
adc
mov
jle
mov
shlb
bound
lods
nop
movl
jge
les
mov
and
or
jle
rcrb
js
xor
or
orl
shrb
xchg
sar
mov
and
sbb
lods
insb
jle
inc
lock
cltd
sbb
divb
loopne
adc
and
mov
jne
fnstcw
mov
and
clc
jg
fs
std
fisttpl
cmp
movd
movaps
aaa
out
push
enter
shlb
jle
xor
stos
dec
mov
lret
je
mov
fbstp
inc
jbe
jge
repz
or
jg
negb
xchg
ret
adc
or
and
in
add
adc
out
mov
add
adc
push
add
adc
out
push
mov
pop
add
aaa
ret
mov
mov
imul
jo
addps
int
add
out
std
fcmovb
sbb
sbb
mov
xchg
dec
and
and
xchg
mov
imul
pop
les
daa
inc
stos
add
loopne
sub
sbb
ret
test
pop
mov
scas
mov
adcl
xor
aam
dec
dec
and
xchg
clc
addr16
mov
sbb
ret
jge
mov
jge
test
pop
pop
or
sahf
fldl
adcb
mov
aaa
sub
or
xchg
mov
push
pop
inc
das
adc
or
fmul
mov
cmp
jb
decb
jecxz
neg
push
mov
adcl
loopne
jne
push
loopne
add
or
clc
lret
or
push
rep
mov
dec
jns
js
ljmp
sub
popf
ret
and
push
int
inc
or
add
sub
loopne
pusha
clc
jb
push
pop
insl
pop
fadds
push
pop
and
cmovs
cmp
push
mov
inc
adc
sub
stc
or
rep
jmp
bound
cmp
jb
ss
add
mov
out
mov
enter
sbb
and
dec
pop
push
mov
in
fiaddl
or
scas
adc
das
in
and
into
xchg
push
push
push
movl
sbb
mov
fimuls
jo
pusha
jns
push
pop
mov
mov
call
out
in
lock
adc
jns
hlt
clc
clc
cld
sub
lret
add
fldcw
push
sbb
mov
inc
mov
or
mov
ret
pusha
sbb
and
loop
mov
lea
jl
cld
or
jl
daa
or
inc
xchg
shrb
stc
mov
push
inc
sub
nop
push
push
int
in
mov
add
out
jbe
sub
mov
inc
push
jns
adc
push
add
nop
dec
dec
addr16
imul
cmp
add
push
mov
hlt
push
cld
push
add
or
icebp
jns
adc
and
cs
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
push
xchg
mov
jnp
pop
push
push
outsl
dec
push
push
add
pop
pinsrw
dec
daa
ja
rclb
mov
jp
and
jbe
mov
xor
les
pushf
add
daa
mov
in
or
adcb
fistps
insb
incl
les
jecxz
lcall
aaa
or
sbb
cmp
addb
lahf
push
and
mov
mov
inc
inc
add
in
pop
sbb
push
mov
jmp
jp
je
mov
shr
rorl
sahf
mov
pop
movsb
sbb
mov
fstps
sbb
xor
push
xchg
arpl
xchg
cmp
int3
stos
nop
les
mov
fidivs
ret
add
dec
mov
pop
push
sbb
call
addl
int
mov
js
sub
hlt
xor
pop
jo
cmp
and
inc
rcll
rcrb
mov
pop
movsb
lock
inc
sbb
das
iret
jne
push
inc
dec
rclb
dec
adc
test
push
divb
push
pop
add
push
xchg
inc
sub
xchg
aas
mov
out
outsb
inc
mov
adc
or
cmp
jne
inc
cmp
ds
xchg
push
pop
fdivr
push
dec
or
fadds
push
adc
dec
add
xchg
pop
and
mov
das
pop
in
inc
inc
adc
call
inc
inc
cmp
cmp
into
pop
and
mov
sbbb
iret
jae
addb
out
and
push
add
push
push
lret
or
push
aam
adc
ficoms
cmp
xor
add
sub
pusha
inc
in
and
inc
rcrb
mov
jl
adc
dec
and
or
xlat
inc
in
imul
cmp
into
lret
sbb
ss
pop
addb
enter
jnp
sarl
sub
add
ret
jns
shl
shlb
dec
leave
sbb
or
sub
dec
fisttpl
rolb
cmp
mov
mov
pop
push
rol
inc
inc
dec
adc
sarl
rcl
lret
jne
sbb
loope
clc
imul
push
and
push
add
movsb
mov
and
mov
adc
jbe
adcl
ret
and
sbb
repnz
adc
inc
or
xchg
je
add
pop
adc
loopne
sbb
loope
or
adc
hlt
daa
lret
dec
ds
adc
xchg
xchg
pop
adc
iret
mov
and
dec
les
dec
mov
add
cltd
add
mov
xchg
and
mov
push
insb
ja
add
xor
outsb
mov
xchg
xor
dec
pop
inc
and
sarb
incb
push
into
push
xchg
clc
movsl
and
movb
pop
dec
sbb
mov
jo
jge
outsl
dec
cli
or
add
jmp
or
mov
inc
loop,pt
orl
push
cld
jb
fbstp
lods
and
sub
add
jmp
mov
dec
loope
push
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
jp
outsb
imul
adc
rolb
pop
mov
push
push
jbe
cmpsl
sbb
cmp
pop
add
pop
lret
test
insb
dec
fbld
cmp
push
cmp
jb
lea
or
mov
addl
pushl
push
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
in
cmp
les
andl
mov
mov
incl
dec
jmp
adc
jmp
sbb
repz
std
jmp
cld
cld
ret
iret
into
fucomi
pmaxub
popa
mov
pop
push
jb
push
push
adc
outsl
scas
movb
shr
stc
add
jb
lock
adc
ret
add
shlb
mov
jb
testb
adcb
pop
xor
jo
adc
or
sub
aad
dec
nop
and
test
leave
pop
add
lea
aaa
cmp
adc
adc
adc
xorb
dec
xchg
imul
jne
mov
adc
push
enter
add
adc
or
insb
cld
into
and
mov
cmp
jg
add
mov
js
mov
sub
jno
add
push
jo
enter
and
mov
push
dec
ljmp
mov
dec
orb
aad
sub
pop
jle
push
push
pop
div
jb
and
adc
inc
jmp
nop
dec
movb
jmp
or
lods
pop
pop
mov
loopne
clc
pop
adc
push
mov
adc
pop
add
mov
sub
cmp
dec
test
enter
push
adc
dec
and
add
int
sub
mov
inc
mov
mov
outsl
adc
cmpb
rorl
and
cmc
mov
add
or
add
movsl
pusha
popf
cltd
leave
dec
pusha
mov
adc
or
or
data16
and
lods
push
mov
adc
aaa
es
lea
cmpl
pusha
mov
sbb
cmp
xor
inc
fstl
decl
loopne
mov
inc
jmp
cmp
jne
orl
jmp
adc
outsb
adc
jne
sub
in
mov
cmc
adc
cmp
mov
xor
dec
or
xor
pop
inc
or
push
pop
in
and
adc
insb
adc
pop
or
fwait
out
jne
dec
add
add
lds
and
lret
cld
xchg
and
add
mov
jmp
mov
fidivs
lret
sub
cmp
ja,pn
sbbl
xor
cmp
jae
push
or
jb
movsb
xor
add
add
and
dec
test
push
je
push
pop
fs
lods
push
pop
cld
adc
bound
inc
mov
and
nop
test
jne
test
jne
loope
mov
xor
or
loop
add
es
mulb
add
or
add
add
or
lods
into
mov
xor
lods
mov
orl
xchg
test
cmp
in
leave
mov
jmp
push
mov
fiaddl
mov
inc
sbb
add
cmp
loopne
stc
mov
mov
test
icebp
pop
jp
jge
stos
mov
and
jp
dec
or
shll
jo
jle
aad
or
add
shl
add
data16
mov
iret
data16
jne
idivb
cli
ret
xchg
rclb
je
sbb
fadds
adc
mov
gs
in
shrb
fmull
cbtw
testb
add
adc
shll
pop
icebp
mov
cmp
mov
lods
jl
mulb
xor
inc
mov
mov
add
rorb
ret
dec
jmp
jle
add
mov
ds
push
aas
push
inc
mov
jmp
cs
adc
loop
xchg
jnp
fstps
adc
jne
stos
lock
and
test
js
and
movsb
ret
push
inc
lea
int3
decb
call
adc
adc
and
pusha
inc
nop
mov
cmp
movsl
das
and
popl
mov
jbe
andl
sbb
mov
add
ret
icebp
enter
enter
sti
adc
bound
adc
repz
mov
push
icebp
sbb
jo
mov
call
call
loopne
je
inc
cmp
jb
lea
popf
lret
adc
adc
lcall
in
add
pop
test
enter
cli
dec
mov
mov
dec
add
mov
adc
mov
or
dec
xor
push
aam
lahf
rorb
ja
fisttpl
or
cmp
inc
mov
insb
xchg
sbb
jecxz
sub
push
or
mov
mov
sbb
pop
mov
cmp
jno
xchg
shll
pop
sub
or
push
sub
add
sub
or
dec
or
adc
insb
jl
jae
adc
gs
add
xchg
subl
and
stos
inc
fadds
icebp
add
mov
cltd
mov
hlt
add
call
xor
or
addb
adc
mov
inc
cmc
ja
loop
mov
inc
incb
sub
roll
and
add
jl
add
sub
push
jb
ret
push
push
and
imul
stos
mov
je
lahf
pop
shrb
dec
sti
cmp
les
lahf
push
daa
sub
ja
loopne
xor
push
xchg
fisubrl
push
gs
sub
pop
pop
ja
ficomps
clc
xor
mov
pop
xchg
xchg
sbb
cmpsb
shrb
aam
fwait
push
mov
les
xchg
out
mov
aad
push
popf
xor
pop
call
ret
loope
push
jg
xor
rorb
xlat
rolb
xor
cmp
outsb
pusha
jb
pop
add
pmulhw
inc
roll
popa
repnz
in
xor
repnz
pop
mov
cmp
xlat
pushf
pop
or
daa
mov
ljmp
in
fs
push
push
or
ret
out
dec
jecxz
mov
push
jnp
add
or
pop
je
push
mov
loop
pushf
pushf
mov
mov
push
inc
mov
push
jnp
adcb
sub
sti
adc
sbb
mov
add
adc
popf
mov
aad
addr16
pop
or
xlat
fmuls
lea
loopne
out
add
mov
xor
mov
pushl
push
jp
insb
insl
aad
call
test
and
xchg
mov
cmp
je
cmpsb
fsubl
cmp
out
popa
js
jmp
push
pop
pop
push
ret
xchg
xor
xchg
sub
or
in
pop
testb
xlat
push
loopne
sbb
sub
shlb
imul
popa
into
push
sbb
pop
sbb
xchg
sbb
sub
or
fstpt
and
pop
int3
or
mov
push
or
out
and
fildl
daa
cmpsb
xchg
add
add
test
cmp
jne
or
mov
adc
adc
xor
dec
aam
sub
add
add
fstl
mov
add
shlb
icebp
pop
mov
add
mov
pop
je
movsl
cmp
movsb
mov
mov
repnz
dec
add
mov
sub
sub
dec
cmpb
push
pop
push
adc
inc
cwtl
xor
adc
sbb
pop
ss
fdivrs
test
add
out
cmp
push
push
fnstcw
add
je
mov
jbe
out
call
dec
adc
cmp
loop
in
ljmp
push
mov
ja
and
cltd
pop
loope
xor
inc
insb
rcrb
pop
add
dec
hlt
mov
mov
jno
lret
pop
mov
or
les
pop
push
inc
add
loope
test
test
add
dec
enter
xchg
xor
pop
call
arpl
jne
mov
jne
mov
cmp
jp
xor
cs
fcoml
jle
pop
mov
adc
ret
push
mov
mov
int
mov
out
jmp
cmpsb
push
and
mov
pop
mov
int
mov
dec
dec
or
cwtl
pop
mov
loope
out
push
pop
jle
pop
mov
cmp
je
movzbl
add
sub
je
or
lahf
ret
lea
repz
imul
inc
and
enter
add
repz
add
adc
dec
add
insl
sbb
cmp
je
lcall
flds
add
jb
mov
and
xchg
pop
push
pop
out
push
push
jb
or
or
push
nop
or
or
or
or
push
pop
or
jns
cmpsb
repnz
or
or
or
out
repnz
add
mov
push
push
inc
enter
nopl
push
fcomps
adc
pop
adc
fwait
add
push
sub
adc
enter
adc
adc
jns
cmp
add
adc
add
adc
lcall
adc
inc
push
inc
push
push
push
push
xchg
and
sbb
pop
xor
pop
enter
sbb
jns
sbb
call
out
sbb
sbb
sbb
iret
mov
sbb
add
mov
sbb
iret
pusha
push
push
inc
pop
pop
enter
pop
jne
ret
inc
cld
add
sub
cmp
xor
fidivrl
cs
add
cmp
xchg
cmp
jmp
and
pop
pop
inc
add
inc
clc
mov
cmp
je
jns
jns
lcall
rol
lea
repnz
cmpsl
repnz
cmp
xor
out
xchg
iret
out
push
jbe
fwait
add
fadds
call
test
cwtl
jmp
inc
jmp
push
nop
ljmp
cmp
out
in
in
fsubp
add
in
cltd
mov
in
cmp
out
out
nop
adcl
or
pop
mov
lock
xor
icebp
cmpb
pslld
inc
enter
std
repz
sahf
cmp
rorl
pusha
hlt
fdivs
jb
fwait
mov
jns
push
jg
mulb
in
in
idivl
mov
lcall
cltd
add
lea
stc
inc
stc
cmp
lret
lock
cli
cli
iret
repnz
sbb
sbb
stos
cld
and
cld
je
cld
push
pmaxub
mov
xor
jns
addr16
sbb
adc
sbb
xor
or
adcl
sub
add
sahf
in
push
das
xchg
imul
inc
lcall
mov
std
sti
in
in
mov
jb
icebp
inc
mov
stc
daa
xchg
sti
pusha
adcl
sbb
out
cmp
sbb
outsb
call
sub
xchg
sub
sbb
pop
jmp
jmp
adc
in
in
add
mov
mov
cmpsb
jb
sbb
pop
and
insb
out
cltd
push
lock
cli
push
cli
lcall
repz
push
mov
repz
sar
in
mov
adc
xchg
stc
fstpl
sarb
fwait
jns
xor
adc
bound
and
clc
cmp
lret
sti
sti
cltd
inc
fmulp
add
fistl
pusha
mov
mov
rol
stc
cli
dec
dec
and
test
cmc
xor
adc
mov
fnstsw
mov
pop
shl
xor
xchg
scas
idivl
adc
push
mov
out
out
loop
cmp
out
sub
xchg
cmp
mull
not
push
push
adc
mov
loop
jno
div
and
pop
mov
xchg
divb
and
insb
out
jb
or
jno
testb
divb
pusha
leave
add
sbb
xchg
cmpsb
repnz
and
xchg
cmc
adc
xchg
pop
jae
pop
mov
cmc
div
idivb
scas
jae
fwait
and
mov
inc
clc
clc
jecxz
jns
loopne
stc
popa
cmp
dec
push
cli
cli
jno
adc
jb
hlt
pop
jne
mov
mov
roll
data16
into
shr
test
idivl
jo
sti
xchg
pop
loopne
lahf
pusha
adc
cs
ret
das
ds
call
jne
mov
loop
and
subl
bound
imul
movsl
in
inc
repz
repnz
and
cmp
push
sbb
dec
push
jmp
inc
jb
repnz
repnz
pop
bnd
sbb
jae
in
cmc
mov
repnz
sbbl
repnz
sbb
jmp
divb
and
xchg
icebp
jb
xor
roll
rclb
icebp
cmc
cmc
cmp
icebp
jecxz
and
ret
lret
sbb
xchg
inc
fcompl
jne
xchg
pop
pop
daa
push
lock
lods
jmp
rcrl
xchg
jl
fldl
shrb
imul
loop
push
sub
out
ret
jne
and
cmovno
push
add
int3
add
inc
insb
inc
push
stos
add
jp
pop
test
rorl
or
adc
or
add
pop
cmp
dec
add
sahf
push
and
ljmp
and
pop
and
cli
push
inc
add
push
push
clc
pop
sbb
repz
jge
pop
imul
push
fsts
pop
pop
fldcw
dec
imul
scas
push
mov
mov
pop
inc
and
mov
xchg
push
popf
push
mov
iret
repz
cs
push
insl
sub
hlt
push
add
sub
jecxz
or
test
pop
aam
lock
cs
or
mov
add
jo
and
sbb
pop
push
jmp
outsb
rcrb
or
arpl
or
adc
or
test
push
sub
add
pop
or
enter
add
in
in
nop
push
js
fcomps
sub
push
or
mov
testb
rep
sub
sbb
mov
rcl
lods
sub
or
lea
jecxz
add
sub
shlb
rolb
fimuls
sahf
jge
push
push
int3
or
adc
dec
negb
stc
orb
push
adc
adc
stc
enter
mov
nop
ficomps
add
xor
jne
insl
xor
inc
mov
cmp
test
inc
repz
jb
pop
and
and
das
movsb
mov
inc
inc
add
mov
data16
ja
push
fists
jne
movups
and
adc
fisubs
iret
mov
std
xor
in
cmp
dec
andl
sub
sub
pop
or
and
ds
je
pop
rcrl
sub
in
add
sbb
pop
cmp
jno
jnp
enter
add
xor
orps
sbb
push
fimuls
adc
dec
dec
shl
push
cmp
pop
inc
ja
stos
mov
add
push
insb
xor
or
aad
fcomps
jmp
mov
data16
jmp
add
repz
sub
xor
inc
shl
sbb
scas
data16
adc
adc
ja
insb
push
stc
aad
iret
adc
mov
lock
ss
mov
mov
inc
inc
cmp
push
jnp
mov
push
jmp
sbb
pop
imul
outsb
out
jns
mov
dec
mov
jg
ret
bound
push
mov
pop
pop
mov
adc
push
push
cwtl
ja
scas
push
dec
push
adc
add
xor
adc
push
jmp
adc
mov
push
dec
push
xchg
inc
enter
inc
fistps
testb
pop
cmp
jmp
lret
clc
push
enter
add
movsl
mov
roll
shr
push
sub
ljmp
sbb
add
sahf
add
cmp
or
fimuls
jne
data16
and
mov
pop
aam
jge
and
adc
sbb
es
add
aam
sbb
or
push
xor
es
adc
sbb
mov
dec
push
mov
xchg
mov
incl
inc
decl
jne,pn
xor
test
xor
clc
cmp
xor
aaa
jbe
push
cltd
pop
idiv
or
test
push
pusha
or
add
cwtl
mov
out
xor
mov
adc
test
orb
xor
dec
cmp
add
pop
jae
pop
jbe
inc
es
push
mov
dec
adc
or
push
call
adc
xchg
movsb
add
push
pop
out
flds
jg
push
iret
test
fistpl
xchg
test
sub
mov
sbb
dec
dec
je
and
jne
dec
pop
adc
incb
scas
insb
adc
pop
and
jbe
xor
pop
mov
or
push
mov
sbb
push
cmp
dec
and
das
sbb
pop
adc
fisubl
sbbb
mov
adc
pushf
cltd
idiv
mov
xor
pop
lods
fiadds
pop
dec
dec
cmp
dec
call
jno
push
rorb
xor
adc
ficompl
imul
mov
stos
loopne
sub
mov
or
insb
insb
xchg
jmp
sahf
adcl
dec
xlat
sub
sub
insl
or
aas
clc
add
push
push
cltd
pop
idiv
or
or
mov
xchg
push
xchg
inc
out
cmp
push
inc
sbb
jbe
jmp
or
movb
mov
push
rcr
pop
imul
sbb
dec
adc
fs
cs
insl
mov
sbb
loopne
adc
or
xchg
insb
sub
sbb
jae
mov
cmp
add
inc
jmp
sbb
or
add
mov
pop
cmp
call
incl
pop
inc
sti
fsts
pop
sub
or
add
xchg
inc
jp
insl
pop
lds
cmpsl
clc
sbb
jae
cmp
push
pusha
data16
adc
xchg
push
ja
push
sarl
loope
push
jmp
jge
add
pop
je
sbb
jl
adc
popl
cltd
insl
mov
jno
mov
mov
push
enter
in
and
xor
pop
je
dec
inc
dec
adc
rorl
lcall
lret
mov
bound
movsb
lahf
pop
sub
or
shrb
fnstenv
or
and
cmp
call
sub
sub
rcl
sbb
stc
pop
push
adc
lcall
mov
pushf
push
add
push
or
push
and
inc
and
adc
cmpb
pop
rol
add
shll
jge
add
insl
and
push
push
cld
mov
pop
add
data16
outsb
aam
loopne
adc
adc
or
out
mov
jns
call
xor
push
stos
out
inc
jecxz
insb
aas
pushl
xor
ljmp
imul
jg
les
add
push
pop
add
fcoms
inc
add
cmp
hlt
dec
js
loop
loope
push
sbb
ds
jle
cld
mov
aam
add
icebp
std
mov
push
inc
jg
jne
adc
jle
lea
xchg
adc
into
pop
shlb
cmpsb
mov
paddd
clc
mov
inc
inc
cmp
je
xchg
mov
gs
cli
orb
adc
add
fidivrl
dec
je
jno
dec
mov
xchg
mov
pushf
ror
fisubl
mov
push
mov
incl
fdivr
sbb
or
or
inc
sbb
ljmp
dec
push
aam
pop
pop
sbb
lods
mov
adc
jnp
cld
mov
or
sarl
or
xchg
dec
insl
cwtl
add
jmp
aaa
push
sbb
push
dec
pushw
sub
mov
addr16
negb
js
ret
pop
test
aam
cmp
cmp
je
cwtl
les
xor
addb
out
testl
mov
pop
pushf
inc
or
shlb
push
pop
es
shlb
call
imulb
add
sbb
fistpl
lods
sbb
dec
movsb
jb
shll
push
pop
jns
in
in
nop
lret
mov
mov
cmp
adc
xchg
adc
and
jo
iret
push
rcrb
lea
arpl
jne
jmp
pop
stc
shlb
or
pop
gs
jmp
and
mov
das
dec
jmp
dec
cmp
hlt
cmp
mov
jae
pop
push
fstpl
pop
and
pop
sti
shll
stos
adc
ret
stos
mov
sbb
xchg
call
mov
sub
adc
in
or
nop
lock
aam
hlt
sbb
xchg
xchg
mov
and
adc
push
je
mov
mov
cmp
mov
pop
mov
or
add
mov
imul
adc
pusha
add
ja
or
inc
pop
inc
jecxz
inc
outsb
clc
decl
or
pop
mov
jecxz
inc
ja
or
or
jge
or
arpl
cltd
jne
push
mov
xor
negl
sub
and
jmp
ja
pusha
js
filds
aas
pop
dec
daa
xor
cwtl
or
in
fists
and
jo
jmp
jne
add
test
xchg
in
add
push
xchg
fbld
mov
fldz
xlat
xor
mov
add
push
out
jmp
stos
sahf
nop
pop
xchg
and
jmp
rep
sbb
and
pop
inc
pop
clc
testb
pusha
fdivl
in
inc
cltd
lret
add
cmc
jne
pop
loopne
jnp
daa
test
push
cli
or
sbb
test
mov
mov
cmp
cld
jmp
pop
arpl
xchg
pop
cltd
sbb
push
jno
fs
adc
dec
xor
inc
cli
sub
mov
in
add
pop
jae
pop
adc
std
mov
inc
add
sbb
scas
add
fisubs
or
cld
adc
test
div
sbbb
daa
or
es
out
or
ja
cld
std
or
into
in
inc
adcb
jbe,pn
jbe
in
push
push
js
adc
cmp
and
cmpb
add
jb
mov
clc
imul
ret
sbb
fsubrl
jae
jle
sbb
xor
imul
or
call
cmpsb
in
and
scas
ret
fsubs
lcall
xchg
and
shll
fiadds
popf
sahf
enter
mov
adc
pop
sub
xchg
cmp
xor
cmp
aam
pushf
enter
pop
out
pop
sub
push
cltd
fucomi
jmp
mov
xchg
or
adc
dec
lcall
std
data16
les
and
insb
cmp
add
jl
adc
adc
add
and
or
xchg
push
add
cmp
shrl
pop
bound
jo
pushf
stc
dec
cld
arpl
imul
cmp
mov
ja
push
lcall
pop
jecxz
pusha
lahf
inc
int3
movb
mov
jge
cmp
faddl
ror
mov
push
jge
or
cli
inc
mov
sbb
ja
jp
daa
cmp
mov
out
js
mov
adc
jle
sbb
xor
mov
ret
sarb
dec
or
jle
repnz
inc
notl
jg,pt
inc
add
jne
pop
push
mov
movb
xchg
cmp
jmp
add
enter
cmp
mov
inc
jmp
shlb
shrl
loopne
ret
hlt
inc
psrlq
fadds
dec
xchg
clc
fs
sbb
dec
mov
cld
sub
data16
push
incl
popa
das
and
push
mov
mov
push
shrb
adc
enter
cwtl
decl
sbb
imul
fwait
and
fnstsw
pop
add
xor
adc
les
adc
mov
sbb
sub
jbe
jecxz
insb
cmpl
loopne
out
into
lds
hlt
push
add
repnz
cltd
enter
mov
push
loopne
mov
in
mov
mov
jnp
je
popf
ljmp
cmp
or
fildl
testb
push
fs
dec
sbb
push
imul
pop
repz
sti
sbbb
mov
outsb
lea
dec
xchg
xchg
jg
mov
mov
sbb
jl
jg
pop
fdivr
push
leave
pop
into
xchg
jo
cltd
and
sbb
aas
add
or
fidivs
cmpl
repz
and
repz
nop
mov
cs
call
jl
sbbl
fcomps
popf
push
rorl
inc
lock
dec
or
loop
add
mov
adc
xor
push
pop
push
adc
lret
test
sub
mov
or
xor
and
repnz
data16
sbb
stc
repz
popl
cld
xor
mov
mov
test
push
movl
cmp
xor
xchg
push
insb
rol
xor
and
pushf
testb
xor
fmul
adc
cmpb
xor
sub
push
loope
shl
adc
ret
dec
push
into
and
inc
push
mov
pusha
nop
icebp
pusha
xchg
cld
sub
or
outsl
or
ja
stc
flds
adc
or
cmp
xor
push
ret
shlb
out
xchg
mov
and
roll
add
shl
or
push
stos
add
or
inc
pop
sub
mov
pop
add
testl
daa
or
xchg
xchg
jl
dec
sbb
pop
sub
and
call
clc
mov
mov
dec
pop
fisttpll
mov
movsb
out
sti
cmpl
push
movb
fisubs
lea
push
orb
dec
call
or
mov
jb
adc
fisubrs
fdivr
ficoml
push
push
popl
testl
push
cmp
inc
cld
or
mov
addr16
and
sub
xor
orb
outsb
cmp
adc
and
je
and
dec
fldenv
int3
or
test
xor
addl
mov
lahf
movsb
ja
mov
mov
or
rorb
ja
lret
dec
sti
aas
roll
cmp
push
and
and
push
add
inc
rorb
xchg
je
lahf
pop
pop
popa
repnz
or
loopne
clc
mov
sbb
hlt
jg
sahf
mov
and
ja
sbb
jo
sbb
mov
xchg
inc
mov
dec
leave
push
xor
sbbb
push
mov
mov
cmp
adc
mov
xor
pop
insb
push
cld
ss
jo
imul
xor
int3
rorl
mov
cmp
mov
ss
push
cmpsb
push
sub
psrld
fcoml
inc
outsb
inc
std
jne
loopne
fldt
dec
push
loope
stos
enter
mov
imul
mov
mov
push
insb
or
mov
test
mov
mov
cmpl
mov
arpl
inc
sub
std
shll
cmp
or
pop
fidivl
push
jmp
dec
popf
xor
loope
daa
in
repnz
add
in
stos
push
mov
scas
cmp
jnp
jae
cmp
and
xchg
aaa
jmp
adcb
jne
mov
test
cmp
pop
andl
lea
inc
call
mov
jmp
aaa
jmp
add
sub
mov
sbb
fs
andb
std
cmp
inc
cmp
ljmp
inc
outsb
jne
sti
xchg
sbbb
inc
cmp
add
mov
clc
jb
mov
xor
inc
inc
push
rcrb
cwtl
inc
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
sarl
pop
xor
insb
mov
add
addr16
js
jle
xor
clc
or
mov
inc
dec
jne
adc
jnp
enter
push
or
add
rolb
push
gs
mov
cmp
jne
loopne
dec
inc
bound
and
jge
loopne
adc
loop
add
mov
xchg
or
mov
pop
mov
stos
sbbb
dec
inc
mov
sbb
add
int3
fs
test
test
pop
mov
insl
xchg
cmpsb
push
shll
xor
dec
mov
xchg
int3
cmp
pop
fld
push
push
test
in
cltd
dec
pop
xor
lret
insl
mov
and
fs
xchg
cmp
out
mov
inc
sub
adc
dec
loopne
lcall
fucomip
or
pop
sub
jmp
xor
dec
sbb
mov
sub
fstpl
xor
add
push
ss
sbb
ss
push
out
arpl
adc
mov
fwait
outsl
lret
xchg
add
jbe
cmp
adc
insl
inc
jge
leave
cmpl
or
push
and
pop
movl
testl
outsl
cmp
adc
mov
es
pop
out
dec
lock
pop
pushl
imul
pop
inc
mov
int3
cltd
mov
or
rolb
sub
inc
xchg
int3
mov
sub
and
idivl
and
push
in
push
cwtl
mov
jne
sbb
pushl
out
jle
or
out
sahf
jg
cmpl
add
fisttpl
pop
cld
mov
aad
push
cmp
dec
or
xor
or
sbb
sub
in
rorb
push
fstl
push
sbb
mov
lea
jnp
or
aaa
cmpl
inc
inc
cmpsb
or
rsqrtps
jns
aam
movsl
sub
or
pushf
push
xor
aam
sbb
sbb
aaa
cmpb
sbb
js
push
je,pt
push
mov
push
or
push
mov
mov
push
in
or
pop
jbe
repnz
and
xchg
push
sub
xor
lods
sbb
jo
loope
xchg
push
and
xor
xchg
cmp
cmp
rcll
sub
push
pop
rorb
sbb
stos
sti
xchg
mov
push
cmp
push
pop
loopne
sarb
mov
mov
push
push
cltd
leave
mov
aad
scas
sbb
ljmp
cmpsl
andb
xchg
add
cmc
cld
test
mov
lret
out
cmpsl
out
call
fistpl
and
addb
loope
sub
xor
push
mov
loope
mov
push
decb
cs
pop
nop
mov
inc
jge
sahf
lcall
pop
mov
inc
xchg
enter
je
and
daa
sbb
mov
outsl
lods
add
insb
push
cld
push
lods
or
jo
push
inc
or
add
and
inc
mov
les
xchg
dec
add
jecxz
subb
xchg
js
insb
add
jae
xchg
test
push
bound
mov
xor
in
cmp
outsl
add
or
dec
dec
push
xchg
pop
inc
sub
je
inc
ret
dec
push
push
sub
mov
cmp
movsb
pushf
aad
gs
pop
jns
dec
shr
cmp
mov
xor
not
movsb
cmpsb
mov
imul
xchg
adc
les
xor
popa
repz
in
clc
inc
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
sub
jle
pop
sbb
repnz
ud0
push
dec
cmp
inc
sbb
xlat
out
insb
and
pop
cmp
je
popf
and
xchg
jle
or
lds
and
jg
pop
test
add
orl
adc
jp
jne
mov
ljmp
gs
sbb
jmp
jbe
mov
int3
xchg
es
adc
iret
cmpsb
and
daa
test
es
test
dec
mov
mov
ret
mov
jmp
mov
xchg
push
mov
mov
add
dec
mov
push
jp
pop
addr16
push
scas
dec
mov
sub
sub
add
pop
das
jo
loope
push
ss
movsb
jp
dec
das
jns
inc
sub
andl
cli
dec
lea
mov
adc
sbb
mov
leave
cmpsl
xor
push
fisubrl
sub
loopne
fcoml
push
popf
aam
sarb
clc
pop
pop
pop
jle
in
popf
enter
rolb
jg
lods
mov
and
add
sarl
enter
dec
cld
adc
push
pop
inc
cmp
xchg
add
in
pop
andnps
inc
cmp
test
mov
add
pop
shlb
in
inc
fcoms
js
jmp
jge
mov
repnz
and
pop
xor
mov
and
testb
cld
push
sahf
or
bts
jmp
mov
outsb
sbb
or
mov
jae
js
xor
mov
mov
add
sbb
fdivp
push
cwtl
mov
or
mov
add
add
mov
sti
out
push
loopne
cmp
repz
enter
mov
fld
out
push
push
jmp
mov
scas
mov
mov
in
lea
adc
push
fadds
push
mov
mov
fidivrs
pop
push
fs
add
sahf
out
jl
xchg
lea
ret
add
xor
clc
mov
lea
aaa
add
movsl
cmpsb
cmpsb
sbb
pop
loop
push
push
cs
push
cmp
test
test
mov
jmp
lods
in
xor
jne
and
xchg
jle
mov
dec
scas
inc
or
adc
jne
mov
or
lret
cmp
jge
inc
cmp
mov
adc
ret
movsb
lret
test
or
and
add
insb
xchg
add
xor
or
cmpsb
and
push
adc
ds
add
add
xchg
jmp
add
mov
aas
insl
push
dec
and
sbb
in
pop
test
pushf
xchg
scas
std
rorb
cltd
xor
daa
and
aam
dec
sbb
enter
push
jbe
or
inc
or
je
jnp
into
dec
dec
dec
adc
fldl2t
jae
pop
dec
push
call
or
test
pushf
push
pop
push
push
add
jmp
xorl
inc
pusha
sub
dec
push
movl
add
jmp
adc
lret
mov
imul
inc
jbe
cmp
push
pusha
addl
and
or
adc
mov
daa
popf
jne
outsl
push
into
orl
aam
mov
push
sub
fisttps
pusha
sbb
test
ja
enter
loope
out
ffree
pop
sub
or
enter
push
mov
das
ficomps
mov
push
add
dec
sub
and
push
insl
pusha
lock
lock
and
or
mov
inc
dec
pushf
loopne
daa
xchg
adc
jno
mov
cmp
inc
cmp
pop
mov
sbb
adc
adc
jge
test
or
in
xchg
fmull
pop
leave
bound
mov
lret
shrl
ljmp
stos
test
cmpsl
and
add
push
inc
xchg
lret
rclb
loope
and
xor
call
jne
cmp
pop
sbb
shlb
pop
je
mov
cmp
add
shrb
popa
movsl
icebp
pop
jl
popa
insb
mov
incl
or
cmp
or
test
inc
sbb
xor
push
dec
push
clc
xchg
rorb
test
push
or
xor
dec
adc
sbb
fisubrl
sub
adc
imul
mov
lods
mov
jbe
push
inc
scas
adc
call
or
pop
xchg
inc
aaa
out
push
adc
and
jo
divl
in
loop
ret
insb
lock
clc
dec
into
fimuls
sbb
xchg
pushf
imulb
xchg
or
jnp
sbb
push
jmp
push
fwait
sub
pop
cli
add
add
andl
add
dec
push
and
fidivs
dec
and
addb
ljmp
xchg
push
push
or
or
fnsave
dec
jmp
cld
sbb
in
inc
testb
imul
mov
or
inc
add
jmp
leave
nop
push
data16
ljmp
lahf
mov
cmpl
pop
test
cmpl
arpl
mov
les
xor
sub
xor
mov
pop
inc
sahf
sbb
xor
lret
pop
sti
rorb
popf
in
mov
clc
aam
fadd
shr
jae
mov
xor
add
scas
push
and
push
jmp
mov
mov
andb
pop
dec
nop
add
ja
or
in
or
call
or
add
and
pop
aam
xlat
push
and
outsl
aaa
adc
loopne
pop
ja
mov
movsbl
dec
icebp
mov
cmovb
test
sbb
pop
sar
pop
mov
mov
xchg
push
inc
sbb
cmpsb
xchg
lea
lret
in
or
aam
clc
fcoms
cmp
lret
testb
testl
je
sbb
mov
adc
pushf
pop
or
add
sub
inc
mov
int
nop
cli
xchg
jnp
subl
adc
add
aam
aas
mov
add
sub
push
imul
or
inc
or
ja
movsl
cltd
nop
imul
cmp
or
movsl
hlt
insl
push
and
push
or
sbb
int
inc
insb
je
lock
fiadds
subb
js
mov
add
in
fidivl
mov
div
ss
or
xor
mov
pushf
xchg
xchg
aaa
dec
xor
movsl
cmp
add
add
fs
or
int
adc
pop
outsl
cmc
dec
xor
mov
js
push
imul
movsb
mov
jo
cli
and
je
cmp
lret
pop
lods
jbe
sarb
or
out
clc
lcall
inc
je
pop
push
in
stos
xchg
int3
or
add
mov
ret
add
xchg
ret
hlt
fdivr
mov
loop
and
push
dec
nop
and
jae
push
test
push
xor
cmc
ja
in
xor
mov
jne
das
mov
out
ret
loope
adcl
pop
sbb
dec
int3
add
xchg
or
fmuls
mov
mov
pop
sbb
in
sub
divb
subl
add
insb
lock
addr16
insl
cmp
jo
cmp
xor
negl
jne
testb
dec
dec
xor
loopne
aam
push
addb
cmp
je
add
pushf
xchg
test
sti
ss
fstpt
or
pushl
out
aas
push
fistl
or
lcall
mov
inc
ss
pushf
mov
sub
xchg
int3
push
js
jecxz
mov
push
pop
je
cmp
movsl
sbb
dec
add
sub
dec
jo
add
add
push
inc
mov
into
add
addr16
push
xor
lret
je
cmp
je
test
arpl
popa
fsubrs
enter
cmpb
jo
or
fildll
xor
add
fisttps
xchg
data16
sub
adc
xchg
cmp
jecxz
adc
aam
mov
into
ret
mov
jne
mov
jne
jae
imul
add
xor
pop
loopne
xorl
xor
int
or
sbb
or
lea
xchg
xor
adc
test
cmc
mov
dec
rcl
sub
mov
popa
lock
or
insl
ljmp
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
aad
icebp
pop
cmpb
jne
and
ds
adcl
das
push
aam
sbb
mov
cmpsl
dec
pop
out
addr16
decb
mov
mov
pop
and
adc
dec
lahf
shl
push
pop
data16
push
sub
pop
test
push
lret
loop
fldcw
test
je
adc
push
cli
mov
cmpsb
jmp
out
or
je
pop
pop
movb
testb
mov
adcb
arpl
insb
adc
mov
jecxz
nop
pop
fimull
cmpsb
push
mov
push
dec
clc
daa
mov
or
jne
and
ret
fstps
lea
or
push
inc
push
push
fcmovnbe
mov
xor
xchg
cmpsl
clc
bswap
clc
sahf
add
mov
dec
jmp
pop
xchg
icebp
sbbb
movb
stos
lock
aas
je
into
sbbb
xchg
decb
and
nop
push
clc
add
inc
jmp
mov
pop
dec
cmp
loope
or
mov
rolb
sub
sar
roll
rorl
int3
clc
fistpll
add
sub
sub
push
test
xchg
mov
adc
lds
jb
push
aam
cltd
sub
sub
inc
pop
or
pop
shl
push
jp
out
pop
and
lahf
mov
idivb
stos
test
or
dec
or
adc
push
jbe
jo
or
dec
sbbl
jne
add
mov
jno
aaa
cmp
mov
lock
call
add
nop
in
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmpsb
js
mov
xor
push
or
push
and
or
jl
testl
push
mov
jecxz
jle
movsl
daa
pop
mov
inc
mov
in
sub
movsb
cmp
test
adc
stos
xlat
pop
sub
xor
xchg
push
movsb
loop
inc
add
xchg
push
out
lcall
repz
popa
loope
cwtl
inc
daa
push
inc
jmp
loope
jl
sbbb
cmp
sbb
test
mov
push
out
and
idivb
insb
or
loopnew
xchg
push
lea
mov
mov
ljmp
sarl
and
lcall
mov
adc
daa
push
mov
mov
push
add
adc
push
push
test
mov
jmp
loopne
inc
jl
push
pop
mov
lcall
add
inc
xor
pop
xchg
psraw
adc
jle
pushf
jge
adc
test
test
push
ds
popa
cmp
mov
jmp
push
xchg
or
mov
jne
arpl
sbb
jmp
push
xor
arpl
sbb
pop
shlb
imul
ret
or
xchg
fisubrl
cmp
jmp
orb
movsb
lea
notl
push
es
daa
ss
loop
dec
xchg
or
daa
icebp
aas
or
adc
enter
sub
fdivs
andb
jb
rclb
inc
addb
jno
inc
outsb
dec
cmp
adc
add
stos
cld
shr
mov
imul
xlat
add
dec
jae
sub
xor
out
orb
or
cld
loopne
filds
adc
je
cli
add
cmp
jbe
push
subl
cmp
jne
fisttps
jae
mov
shr
lea
not
and
decb
jne
js
stos
pop
add
sbb
lea
xor
pop
cmp
pop
add
add
jge
push
or
add
add
addr16
pop
and
push
or
sub
jmp
clc
and
out
and
shlb
and
ret
fdivr
add
bound
cmp
mov
fimuls
inc
lds
pop
jae
adc
bound
jno
mov
or
and
lods
mov
sub
push
mov
loopne
mov
pop
lock
stc
xor
dec
add
dec
lret
push
clc
mov
and
fisubs
ficoms
js
or
mov
inc
or
dec
push
fwait
add
or
adc
mov
xchg
rorl
inc
and
mov
call
mov
dec
or
jmp
dec
adc
push
mov
out
push
xchg
call
jb
and
cmc
lcall
adc
pusha
negb
pop
cltd
ret
loope
add
scas
jge
jp
push
call
aas
gs
push
or
adc
andl
add
decb
adc
inc
stos
mov
pusha
add
and
inc
jmp
mov
xor
sub
clc
pop
mov
mov
jp
adc
sbb
fbld
push
cmp
xchg
insl
or
mov
fdivrs
inc
cmp
pop
adc
and
data16
dec
sbb
lock
cmp
sarl
add
imul
stc
negb
mov
icebp
push
push
jae
repz
adc
xchg
or
push
fidivrl
jge
and
inc
push
fucomi
fwait
orl
mov
or
add
and
mov
inc
fadds
add
in
out
mov
ljmp
test
int3
insb
loope
incb
pop
incb
add
dec
jne
or
gs
adc
testb
int
xchg
sahf
adc
xchg
jge
xor
adc
inc
sub
pusha
jecxz
shr
shrb
fwait
movsb
dec
clc
repnz
idivl
or
adc
sti
out
imul
cld
lock
call
mov
jne
je
clc
add
pushf
mov
pushf
push
adc
push
fcoms
inc
fs
pop
mov
negl
inc
inc
mov
lock
xor
scas
decb
jne
or
lds
not
and
ret
xor
or
out
sbb
adc
loopne
sub
pop
shr
pop
dec
pop
xorb
mov
icebp
sub
push
add
mov
and
pushf
jle
push
cmp
ret
int3
inc
mov
add
push
inc
jp
cmp
mov
stc
add
mov
int3
push
adc
or
sub
pop
mov
stc
sbb
clc
ds
mov
es
add
pop
dec
add
cmp
nop
dec
or
xor
lcall
sbb
mov
in
ljmp
adc
pushf
sar
dec
mov
add
ja
and
jbe
jg
je
xor
or
mov
lret
dec
pop
pop
push
pop
adc
imul
or
and
and
ffree
test
test
dec
mov
push
iret
adc
inc
insb
xor
out
xor
or
inc
and
clc
sbb
cltd
fistps
mov
mov
inc
dec
out
das
outsb
insb
pop
xor
push
sar
dec
jp
inc
adc
add
jge
ret
cmp
loope
xchg
xor
cmp
shlb
sahf
dec
je
fisttps
push
or
jecxz
dec
push
fldcw
rol
fcmovu
ja
ja
dec
dec
xor
push
ficoms
add
adc
jl
pusha
loope
lea
mov
cmp
out
dec
xchg
jbe
mov
mov
push
cmp
jb
mov
into
mov
movsl
cmp
rdmsr
cmp
xor
dec
pop
rolb
sbb
pop
mov
dec
insb
ret
cs
add
loope
add
jp
inc
cmp
push
push
push
jge
push
jo
dec
pop
shr
adc
inc
cld
jo
in
or
test
mov
out
fstps
push
nop
cmp
and
decb
xlat
test
adc
int3
mov
push
jne
mov
aas
pop
jne
jmp
jnp
add
fcmove
jae
xor
aaa
arpl
mov
xchg
pop
mov
and
jo
push
pushf
aad
sbb
pop
lcall
cmp
je
mov
mov
mov
in
cli
and
mov
or
pop
iret
jne
fwait
or
dec
mov
push
cmovs
xchg
test
add
out
repz
mov
and
jne
mov
push
pop
outsb
leave
and
out
test
inc
push
pushf
mov
sub
shl
inc
icebp
sbb
lea
dec
add
cmp
sbb
iret
loop
and
push
xchg
cmp
sbb
and
mov
decb
jne
fldl2t
add
or
sub
dec
xor
test
jae
icebp
out
jne
dec
push
and
shll
xor
dec
jp
cmp
mov
out
inc
mov
or
pop
sbb
cmp
hlt
roll
and
or
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
sub
push
std
add
adc
add
scas
and
lock
outsb
pop
lods
test
lea
ds
jne
cmp
into
push
pop
add
lods
ds
andl
inc
add
repnz
sbb
adc
push
push
imul
sbb
clc
fst
pop
jb
or
xorl
cmp
adc
xor
or
and
pusha
add
dec
test
ja
sti
jecxz
aam
mov
adc
or
jp
add
addr16
adc
das
cmpl
mov
addl
adc
subb
rolb
lahf
cli
mov
add
nop
adc
mov
cmp
cmp
sub
add
push
mov
repnz
cli
pop
push
xor
sbb
repnz
cmp
dec
fcoms
cld
adc
nop
adc
cmp
and
cmp
inc
push
xchg
cmc
repz
shr
xor
push
test
ficoml
jecxz
fisubs
dec
xchg
inc
insb
aam
push
xor
lahf
pushl
adcl
sarb
scas
loope
adc
push
and
adc
outsb
add
loopne
std
pop
sbb
lds
hlt
mov
xchg
lcall
inc
js
push
or
pop
push
hlt
or
insb
cmpsl
mov
jl
call
add
and
test
int3
push
iret
or
mov
inc
je
pop
dec
cmp
repz
or
outsl
or
ljmp
jbe
jo
dec
pusha
push
pop
imul
dec
or
scas
xchg
or
adcb
pusha
push
cmpl
jle
sbb
test
js
popf
call
jmp
aam
test
sbbl
jmp
rclb
dec
sbb
addr16
dec
push
jmp
movzwl
mov
test
or
int3
repnz
test
in
je
mov
push
mov
nop
pop
in
rorl
subb
aam
rcl
xor
mov
and
lcall
xor
enter
fs
test
fnstenv
std
cmp
dec
xor
sbb
pop
pop
mov
lods
or
fwait
or
imul
sbb
xchg
arpl
scas
adcb
stc
sub
rcrl
cmp
leave
rorb
ss
or
stos
or
leave
sbb
mov
mov
add
icebp
push
inc
lds
aas
insb
jne
jp
ret
cwtl
add
or
out
or
scas
pop
and
cmpl
and
adc
fistpl
cmp
mov
sbb
cmc
jmp
add
dec
xor
xor
cmpsb
mov
ret
in
and
in
xchg
mov
leave
add
call
add
xchg
pop
and
dec
jge
test
je
pop
dec
cmpsl
pop
sub
xor
enter
inc
cs
xor
test
test
push
cmp
call
insl
and
add
addb
into
shlb
cmp
mov
loop
adc
in
fimuls
cld
test
sub
int
pop
sarl
lahf
daa
xchg
lret
add
movsb
shr
and
mov
add
xchg
mov
iret
scas
jbe
adcl
xchg
lahf
push
lods
push
cmpsb
in
in
lods
inc
mov
rclb
inc
push
call
sub
lods
and
and
ret
push
and
les
xchg
pop
shlb
loopne
loop
in
add
add
les
nop
and
xchg
inc
dec
test
popa
inc
jb
test
fwait
mov
int3
test
mov
mov
pop
mov
sysret
lds
or
sbb
sub
mov
xor
insb
mov
pop
mov
add
mov
mov
mov
arpl
cmp
out
sub
push
jg
xchg
ror
adc
sub
mov
adc
lret
push
js
ret
mov
daa
test
clc
xchg
ret
stos
and
dec
jbe
or
fwait
shll
add
adc
leave
adc
mov
in
or
and
shll
or
mov
push
cld
inc
xchg
mov
push
push
mov
cmpsb
icebp
sub
sub
sbb
jnp
adc
jnp
or
popa
arpl
shr
lds
or
testb
xchg
add
or
or
psubusb
push
adc
jno
lahf
mov
in
lods
dec
ret
sahf
add
hlt
ja
fstpt
stc
mov
aaa
inc
cld
push
cmp
push
cs
sbb
cmp
cmp
adc
ret
pop
or
movsl
add
shlb
test
ror
mov
lret
les
push
or
shll
enter
dec
push
or
cmp
xor
dec
xor
jo
cmpsb
imul
jno
lcall
and
xor
mov
fcoml
cmpsb
xchg
scas
xor
jg
sti
push
insb
sbb
add
push
pop
sub
sbb
cmpsb
sbb
dec
mov
movsl
push
inc
inc
xchg
xchg
push
or
xchg
dec
bound
inc
add
aas
add
or
fldl
or
outsb
loop
inc
and
lds
sti
xchg
loopne
and
fcmovnbe
into
add
push
leave
pop
in
mov
fsubrp
cltd
jo
push
dec
add
fwait
mov
cmp
das
fidivrl
xchg
cmp
sub
je
dec
je
add
lods
adc
and
sbb
sti
fldenv
test
lret
adc
xchg
call
test
lahf
rcr
sbb
pop
insb
push
mov
adc
add
dec
or
fwait
add
inc
aaa
add
sbb
xchg
adc
stos
cmp
or
add
pushf
cld
lock
dec
push
hlt
lock
adc
in
stos
cmp
pop
push
call
push
and
shl
push
jo
pop
mov
das
and
adc
repz
lock
sahf
out
pop
mov
push
jns
out
sarl
fucomip
jle
and
insl
xchg
fsubl
adc
jne
mov
mov
dec
or
push
xchg
leave
mov
lock
push
pop
and
jne
ds
xor
call
sub
testl
push
inc
jle
or
clc
add
data16
push
push
or
fs
faddl
jb
frstor
popa
push
jmp
push
lods
sub
push
sbb
cli
clc
push
fmull
jae
sub
inc
jp
cmp
test
jne
int3
call
adcl
push
popa
sbb
std
xor
xchg
sub
mov
sbb
mov
testb
xor
jne
js
test
inc
mov
xor
aad
add
pop
sub
jmp
sar
mov
xchg
lret
lret
test
pusha
mov
jb
add
jno
std
lods
std
pop
movb
into
jne
xchg
sub
pop
mov
repz
clc
mov
add
popf
mov
sar
add
or
push
mov
mov
testb
jne
dec
sbb
mov
sar
lea
testb
clc
push
test
xor
fxch
mov
mov
int
daa
or
mov
add
adc
dec
pop
push
dec
inc
push
js
pusha
rep
std
push
or
sbb
mov
mov
mov
xchg
std
lods
adc
andl
or
ret
jb
pop
int3
shl
cwtl
pop
enter
mov
dec
scas
push
inc
push
pop
or
add
sub
push
jp
xchg
imul
sub
cmp
fsubrl
in
mov
ljmp
lret
sbb
mov
dec
mov
and
mov
mov
or
inc
loop
cli
pop
lods
add
arpl
call
push
inc
sub
pop
cmpsb
in
adc
outsb
in
add
jne
or
jne
inc
jne
mov
xor
movsl
pop
orl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
push
js
inc
xchg
ret
jmp
test
call
mov
mov
fwait
mov
in
inc
push
loopne
add
mov
bnd
cmp
call
popf
jo
jmp
dec
sahf
dec
add
js
jo
xchg
adc
xor
adcb
sti
push
inc
cmp
lea
popf
in
mov
jns
mov
loop
jge
mov
cwtl
add
mov
cmp
dec
mov
cwtl
xchg
mov
push
adc
pop
xchg
testl
mov
mov
hlt
mov
sbb
jns
daa
mov
int
aad
sahf
add
xchg
inc
lret
lods
cld
and
dec
pop
sub
notb
adc
enter
mov
mov
jnp
sub
jno
add
mov
pop
cli
bound
into
je
divl
pop
insb
in
lcall
pop
jb
ret
adc
cmp
test
xor
add
lret
sbb
enter
lock
aaa
mov
lds
mov
mov
jns
std
adc
sbb
lds
mov
test
in
pop
lea
shlb
push
inc
xchg
and
pusha
gs
cmp
sti
and
call
stc
call
rol
cmp
pop
out
in
std
push
mov
lds
rcr
xor
daa
arpl
sub
mov
inc
mov
cmp
nop
std
lds
das
bound
sub
mov
xchg
std
out
imul
mov
push
fisubrl
rorb
sarl
orl
sbb
mov
cmp
fsubl
mov
std
out
push
xor
shrl
lods
mov
xlat
xor
leave
aad
sahf
aad
test
adc
xchg
mov
xor
shll
mov
inc
cmpsb
inc
mov
cmpsb
inc
adc
popa
insb
dec
ss
cmp
sbb
dec
mov
jno
call
ret
pop
nop
std
xor
aaa
imul
test
xor
sub
frstor
cmp
push
popa
mov
decl
ds
cs
sbb
out
hlt
sub
or
push
test
sub
dec
ja
jmp
add
bound
pop
lock
cs
std
xor
push
sub
jge
movsb
sbb
jmp
scas
adc
and
test
or
or
jmp
fs
in
ss
test
enter
jl
in
mov
jns
lock
adcl
dec
cmpl
pop
push
int
je
lods
bound
bound
dec
mov
movsb
adc
or
add
aad
sti
sbb
inc
push
inc
lret
jne
cmp
xchg
sbb
cwtl
cmovge
or
jp
jne
fdivr
and
push
dec
pop
jno
sub
jl
je
and
sbb
sub
or
std
loope
gs
inc
aam
nop
enter
mov
mov
dec
lds
std
inc
nop
and
inc
add
les
push
scas
sti
or
sarl
dec
jp
testb
push
add
jne
lock
mov
jo
mov
rorb
rolb
ret
and
mov
outsb
or
mov
xor
pop
loope
dec
in
mov
movsb
leave
inc
enter
add
enter
sbb
adc
sarb
cmp
loopne
sbbl
mov
push
out
adc
jecxz
lret
and
bnd
test
call
fcoml
mov
in
pop
pop
or
ret
xchg
jo
shrb
imul
lock
and
out
leave
leave
ljmp
dec
push
lock
fstpl
in
or
add
call
add
or
inc
pop
test
in
inc
enter
movsl
call
cmp
call
fimuls
leave
leave
nop
pop
jb
leave
leave
in
adc
cmp
lea
enter
aam
les
adc
enter
lods
sub
iret
inc
xor
ljmp
and
sub
mov
leave
leave
ljmp
sbbl
sub
adc
inc
lds
ret
stos
lods
test
es
aad
inc
push
dec
inc
lcall
inc
enter
outsb
pop
xor
loopne
fistpl
adc
push
test
pause
lret
and
mov
or
enter
cmpsl
xchg
pop
incl
decb
cld
or
xor
lods
jb
mov
jno
pushf
or
js
pop
repz
add
mov
and
mov
sbb
xchg
pop
or
les
aaa
push
push
dec
inc
out
or
movsb
jb
imul
dec
add
or
test
bound
or
je
dec
repz
adc
or
or
push
and
test
leave
push
and
pushf
and
leave
pushf
nop
nop
nop
dec
add
and
xchg
popf
push
mov
cld
inc
or
je
push
xor
add
push
aaa
dec
pop
sub
inc
add
sarb
iret
roll
pop
mov
rorl
out
xorl
popf
lret
xchg
shr
xchg
push
jle
orl
inc
adc
push
jmp
push
test
adcb
push
xchg
dec
and
add
jmp
cltd
xor
sub
enter
or
hlt
das
je
and
xchg
cmp
or
lret
pop
js
or
insl
out
js
inc
sub
inc
add
jp
test
dec
rep
ss
jmp
fistps
sub
cli
pop
lock
push
add
push
shlb
push
xchg
mov
pushf
inc
pop
sbbl
xlat
adc
push
or
outsl
push
push
lret
out
dec
adc
push
and
icebp
dec
stc
jl
xchg
push
pop
outsl
inc
or
jbe
dec
movsl
bnd
sbb
ja
popa
push
lcall
fstpt
int
or
cltd
xor
cmp
or
lret
xor
xor
pusha
test
pusha
into
and
aaa
adc
dec
call
or
inc
lret
sub
mov
sahf
ss
sub
mov
xlat
xor
cmc
add
sub
adc
in
lock
mov
xchg
rep
jge
jne
xchg
adc
add
sbb
jp
or
in
push
ret
gs
insb
inc
jmp
pop
jae
rorb
pop
add
in
cld
vcvtps2pd
jne
loopne
adc
loopne
test
jo
and
mov
or
in
imul
mov
xchg
divl
popa
mov
sbb
or
dec
sbb
cmp
fwait
aaa
in
sbb
and
sbb
mov
fldl
loop
push
fbld
jne
push
sbb
inc
add
dec
test
jb
loopne
xor
js
test
out
ds
inc
add
jl
adc
movsl
jmp
push
inc
pop
cld
push
mov
jg
ret
pusha
outsl
mov
test
pop
divb
xor
pop
add
cmp
je
aaa
test
lods
xor
and
cmc
jne
lea
popa
add
sub
shr
fbld
mov
sbb
lahf
mov
je
jmp
bound
adc
lock
ficompl
and
cmp
pop
inc
cs
add
inc
jp
or
dec
fists
sbb
dec
mov
repnz
daa
mov
lock
push
sahf
adc
in
inc
pop
loope
add
pushl
jge
add
dec
sbb
out
xchg
adc
inc
loopne
mov
fwait
mov
into
and
aad
fwait
xchg
inc
cld
cmp
add
gs
dec
fidivs
daa
clc
inc
push
inc
aas
test
sbb
jae
testl
ja
jo
mov
into
ret
sub
sub
sub
inc
jp
pusha
pop
aaa
xorb
or
sbbb
sbb
jae
mov
sub
fmuls
sahf
and
jmp
or
fldt
scas
popf
push
shl
fs
cmp
cltd
negl
mov
push
inc
shr
rcr
shrl
mov
ljmp
div
pop
dec
adc
inc
mul
in
std
std
mov
dec
ja
jb
cmp
or
xor
and
repz
pop
adc
or
fiaddl
fcmovu
lret
adc
push
jo
loopne
add
add
inc
add
sub
test
jmp
lcall
pop
stc
movb
sbb
inc
and
movb
sbb
xor
insl
push
shll
push
mov
in
adc
and
lcall
ljmp
xor
add
nop
arpl
hlt
sbb
or
clc
in
sub
or
xchg
adc
mov
stos
adc
clc
add
xchg
xor
add
and
dec
punpcklwd
and
leave
sbb
fcomps
mov
loop
dec
sub
cmp
dec
add
sub
add
mov
dec
inc
neg
dec
jbe
fwait
cmpsb
xchg
test
cmova
dec
test
sbb
cmc
daa
add
scas
or
enter
xor
iret
adc
jb
add
sbb
push
adc
or
imul
jae
push
popf
test
test
ret
cmc
jne
or
fisubl
dec
xor
jl
lea
adc
adc
dec
jae
adc
pusha
pop
add
or
or
add
or
inc
pop
mov
pop
inc
mov
push
into
les
in
shll
add
cld
sbb
loope
xor
subb
mov
stos
xchg
jo
sub
push
fwait
sbb
das
add
lock
or
sbb
aaa
add
xchg
jle
js
xor
sub
jle
sub
push
add
add
xchg
data16
movl
sbb
iret
and
adc
jmp
xchg
sbb
lock
jo
xor
cmovo
gs
jge
in
adc
push
mov
loopne
cmp
or
push
and
xor
adc
sbb
adc
add
xchg
xor
push
xor
push
inc
cmp
push
scas
sub
cltd
mov
mov
in
push
insl
fwait
sub
pop
pop
pop
cmp
repz
gs
scas
xchg
in
and
addl
xor
ficomps
or
out
mov
pusha
xchg
hlt
daa
test
inc
sbb
call
lock
mov
fdivrp
iret
xor
jne
or
ret
jno
shl
push
adc
pop
orb
stc
xor
xor
pop
rolb
xor
jo
and
or
and
subl
jne
sbb
push
or
xor
push
out
cmp
je
mov
mov
ss
and
adc
iret
repz
aam
xchg
pop
addr16
or
enter
or
cld
adc
or
pop
xor
popf
adc
scas
and
sbb
sbb
mov
xor
outsl
or
mov
push
clc
and
xchg
dec
dec
nop
pushf
icebp
lods
hlt
xchg
push
ds
icebp
repnz
cmp
mov
mov
or
jae
cmp
cmp
or
out
sub
inc
fistpll
xchg
dec
les
pop
and
mov
cmp
roll
loop
xor
inc
dec
sbb
mov
pop
jne
addb
int
mov
jno
push
shrb
rolb
lock
jp
mov
dec
or
or
mov
or
sub
or
lahf
push
push
inc
in
mov
mov
cs
or
ret
cmp
lock
adc
add
dec
xchg
xorl
mov
dec
sub
inc
and
pop
sbb
dec
pop
movsl
les
adc
lock
pop
add
adc
mov
jbe
test
pushf
add
jns
push
pop
mov
cmp
popa
lret
rcl
pop
aam
fcmovnb
or
fiaddl
push
and
inc
test
dec
and
xor
and
pusha
cmpsb
pop
or
fcmovnu
mov
sti
add
adc
and
push
cmp
add
adc
or
mov
cmc
cwtl
lock
lcall
andl
rcll
add
and
ss
xor
loop
sub
cmp
lock
sbbl
xor
xchg
popa
pop
orl
push
mov
cs
lret
cmp
xchg
push
mov
fnsave
inc
lock
leave
push
push
cmp
sbbb
into
pusha
cwtl
mov
adc
fucom
dec
mov
xor
out
push
cmp
sbb
push
icebp
imul
and
fstl
or
mov
dec
add
pop
lcall
fnstenv
aam
cmpsb
inc
and
push
jne
inc
and
xchg
repnz
xor
je
push
or
sbb
dec
movsb
fnstcw
fdivs
mov
pusha
aad
cs
ret
dec
fsts
add
pop
xchg
imul
and
dec
je
cmp
scas
mov
mov
xor
jb
mov
pop
adc
fdivrl
std
mov
push
les
push
in
or
pop
pop
mov
add
pusha
imull
inc
es
je
and
dec
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
fstpl
jge
mov
mov
pop
mov
inc
loop
adc
dec
daa
fistl
xchg
mov
mov
fs
push
dec
jmp
pop
adc
xchg
js
divps
aaa
xor
sub
arpl
fs
pop
fidivrs
mov
pop
add
jbe
dec
jo
ljmp
or
dec
je
mov
das
sub
add
data16
xor
push
push
pop
movsb
xor
sbb
loop
jecxz
test
das
imul
js
and
mov
and
and
add
js
clc
inc
shl
cmc
hlt
adc
inc
push
rclb
and
mov
dec
jo
data16
sbb
fsubl
lret
mov
ja
xchg
xchg
mov
test
or
adc
out
dec
and
jmp
test
and
test
ficoml
sbb
jmp
mov
sub
mov
cmp
mov
ljmp
in
stos
lds
mov
sub
dec
adcl
popa
scas
dec
fcoml
orb
je
cmp
pop
push
xor
pop
test
xchg
lds
add
scas
cmc
pop
sbb
mov
test
lock
in
daa
mov
push
sbb
add
sub
in
imul
push
fmull
add
mov
lret
fisttpl
mov
mov
in
fdivs
xor
scas
stc
xchg
cld
mov
inc
and
cmp
pop
push
or
mov
push
adc
sbb
mov
adc
xor
insb
sub
inc
mov
or
les
dec
adc
dec
xor
add
lods
and
jge
or
xchg
add
inc
jg
mov
ret
fsubrs
mov
repz
jmp
xor
sbb
mov
inc
inc
adc
add
es
pop
push
mov
inc
inc
pop
je
pop
mov
jb
je
cmpsl
and
lock
adc
inc
or
jmp
jle
jo
dec
stc
add
push
or
sbb
push
dec
bound
xchg
adc
cli
cmp
push
mov
inc
mov
pusha
jp
into
inc
add
push
test
pop
fisubs
subb
outsl
in
or
nop
ret
cwtl
push
push
movb
stc
push
pop
sarl
sbb
mov
mov
xchg
xchg
push
aaa
jmp
pusha
sub
jo
or
rorb
sbb
cld
dec
jecxz
inc
stos
jbe
jae
aam
sbb
out
inc
popa
xor
out
movnti
pop
push
ss
lods
subb
adc
push
adcl
or
lock
repnz
aam
xor
fs
icebp
sbb
adcb
and
cmp
inc
mov
sub
cltd
outsl
call
insb
dec
test
cmp
dec
inc
inc
or
jne
repnz
clc
or
push
sar
lock
and
cld
hlt
movb
gs
mov
adc
hlt
rcll
jecxz
push
dec
je
stos
add
cld
addr16
push
jge
bound
push
push
mov
addb
jmp
les
loope
popa
push
cwtl
or
or
into
inc
mov
shlb
lock
or
jo
jo
lock
fnsave
xor
clc
push
push
rclb
xchg
push
pop
push
popl
fimull
push
mov
fimuls
sub
pop
out
jmp
add
or
or
insl
fstpt
mov
and
push
and
jo
sbb
xor
inc
mov
xchg
push
push
in
js
push
sub
rorb
pop
mov
sub
and
pop
shrb
out
mov
adc
lea
jb
cld
shl
push
add
and
lea
sbbb
andb
and
insl
and
cmp
add
mov
inc
cmp
or
enter
pop
sbb
test
jle
std
sbb
mov
jb
push
mov
push
pop
mov
push
push
test
cmp
lock
add
out
add
mov
push
lock
add
mov
shll
or
jnp
pop
pop
or
inc
orl
rclb
xchg
pop
clc
mov
xor
out
or
xorb
pop
adc
push
andl
xor
push
add
shl
mov
pusha
add
aas
push
aaa
xor
lods
lret
ds
add
adc
cmp
or
cmp
cmp
mov
movl
mov
add
rcl
imul
adc
adc
xchg
mov
push
fnstsw
insb
cmp
mov
loopne
or
inc
jl
shlb
xlat
cs
mov
pop
lret
and
lods
loope
es
dec
lock
mov
out
test
jle
dec
mov
or
shrl
push
loopne
or
xor
not
push
shrl
add
sahf
pop
incl
enter
enter
add
cs
pop
xchg
rclb
data16
ret
sub
mov
cmp
dec
inc
xchg
pop
or
pop
dec
xor
outsl
in
mov
jno
or
lock
sahf
data16
stos
xlat
or
in
cmpb
in
and
jae
xor
js
sub
xchg
dec
lahf
add
mov
cmp
fs
pop
clc
add
ret
pushl
add
lcall
jae
sbb
mov
add
pop
add
ds
fdivrl
inc
addb
mov
adc
jl
in
mov
pop
test
jns
pop
mov
cmc
aas
nop
push
xchg
loopne
push
loopne
ds
in
mov
lahf
lock
and
mov
push
fwait
ret
cmp
sub
cmp
push
imul
inc
xchg
or
pop
jno
inc
xor
add
dec
mov
nop
add
dec
xchg
and
or
sbb
mov
fisttpl
add
add
loopne
pop
lret
inc
pop
push
mov
cmpsl
cmp
or
int
xor
in
dec
leave
gs
clc
mov
xchg
test
sti
jmp
fdivs
hlt
test
cld
iret
decl
cwtl
push
xchg
insb
push
xor
fdivrl
pop
repnz
push
inc
ss
inc
cwtl
cmp
xor
and
pop
mov
mov
cmp
cs
and
int
jo
aas
add
jmp
mov
mov
imul
cli
push
mov
and
jns
mov
pushf
sbb
sbb
aam
sarb
ret
mov
sbb
sub
xchg
jmp
and
adc
adc
test
ret
ds
or
xlat
mov
cmp
jne
sub
sub
int
sbb
add
lods
push
stc
mov
jae
adc
sub
imul
fimull
jmp
movsb
push
faddl
dec
push
sbb
dec
pop
subl
jmp
push
mov
push
mov
aaa
jmp
mov
or
push
inc
pop
and
imul
test
shrb
push
cmp
mov
cmp
inc
jmp
int3
hlt
test
push
cmp
xchg
jbe
jne
imul
add
add
movsb
fldt
cmc
aas
sbb
or
test
push
lcall
and
test
mov
pop
adc
mov
mov
in
sbb
jbe
xor
fsubrl
xor
xchg
divb
xor
push
ja
cld
and
ja
mov
add
mov
test
addb
movsl
mov
cs
xchg
or
cs
or
mov
into
mov
cmp
sbb
movl
xchg
pop
sbb
imull
inc
pop
pop
sub
mov
aas
hlt
xor
imul
pusha
pop
pop
adc
add
jg
and
je
testb
je
mov
adc
sbb
in
sub
or
mov
dec
add
mov
aaa
mov
leave
adc
sub
mov
pop
inc
outsl
and
jle
sbb
jp
pop
lock
jo
sbb
push
mov
cmp
add
shl
rorl
insb
or
add
gs
sub
cmp
jl
push
xchg
jbe
lock
outsl
inc
add
mov
fs
add
adc
scas
xorl
cltd
neg
xchg
js
xor
mov
rcrb
sub
hlt
cmp
out
jmp
adc
fucomp
or
sub
test
mov
xor
cmp
test
imul
inc
sbb
ds
and
cmp
or
mov
shrl
dec
sbbl
or
sub
jl
andl
inc
sbb
or
push
add
jg
mov
popa
mov
and
pop
mov
inc
or
lret
dec
xor
sub
pop
shl
aaa
xor
adc
push
jl
mov
in
mov
or
add
movsl
lcall
ja
mov
sti
jg
aas
add
xchg
pop
dec
xor
cwtl
cmpb
lea
inc
mov
xor
and
dec
xor
jbe
and
push
push
adc
icebp
and
outsl
dec
sbb
rcrl
pop
inc
push
movsl
fs
es
pop
jl
mov
sub
popa
shrb
leave
xchg
inc
addr16
or
jecxz
push
call
les
imul
dec
sbb
inc
mov
les
rolb
sbb
xor
fs
lods
jle
mov
mov
aaa
mov
loope
fdivs
aaa
fildl
push
clc
inc
aaa
adc
ret
enter
jge
pusha
push
jp
pop
ret
push
jmp
clc
sbb
pop
cmp
outsb
lret
mov
xchg
mov
inc
or
sbb
fsubrs
jle
mov
xlat
add
dec
shlb
out
in
pop
xchg
js
cmp
int
or
pop
pop
cwtl
or
out
movsl
lahf
sbb
scas
add
cmpsl
and
adc
sub
test
and
cs
rcl
addl
inc
cmpl
inc
push
dec
sbb
jne
movsl
xchg
ja
lods
or
sbb
lods
popa
and
cwtl
sub
cmp
push
mov
fwait
lea
pop
cmp
xor
mov
adc
or
test
lock
or
push
les
inc
cld
pop
cmp
add
inc
out
pushl
xor
int
ret
repnz
and
stos
sbb
add
repz
xchg
or
inc
xchg
icebp
jp
repnz
pop
je
fwait
popf
cltd
aam
push
daa
add
adc
jae
dec
push
das
pop
jl
push
jmp
cmp
ja
cmp
popa
xchg
je
mov
mov
xor
cmp
add
xor
sbb
rolb
pop
shl
add
inc
xor
cltd
push
rorb
sbb
adc
sbb
mov
fwait
mov
pusha
repnz
ret
or
fcompl
xchg
sbb
xor
inc
pushf
cmp
jne
jl
xchg
mov
jge
mov
jno
push
or
sbb
and
xor
adc
push
cmp
fsubrl
add
fadd
mov
inc
mov
xchg
xchg
pushl
rcll
cmpsb
movups
sbbl
dec
or
or
inc
repz
jg
push
xchg
add
pusha
ret
jns
push
or
inc
rorl
test
mov
scas
pop
mov
aas
sbb
sbb
je
pop
cmc
or
andl
push
jno
rorb
mov
mov
xchg
out
push
jb
dec
mov
aad
lds
inc
adc
jae
push
cmp
jl
mov
inc
mov
adc
jb
mov
jns
rcrb
pop
lock
jne
clc
push
mov
addl
or
mov
jb
imul
pop
cmpsl
movsb
sub
enter
or
add
mov
mov
in
dec
dec
or
mov
fwait
push
dec
enter
icebp
cmp
pop
mov
or
repz
mov
sbb
push
into
insb
cltd
imul
mov
add
cmc
lods
mov
add
adc
sub
mov
xlat
jns
jne
mov
and
in
shll
arpl
push
xchg
sbb
cmpsl
and
pop
in
mov
adc
xchg
lcall
scas
xor
inc
lcall
inc
filds
push
push
push
and
ret
pop
mov
or
and
or
mov
sbb
dec
inc
jecxz
add
adcl
sbb
popl
jo
jl
insl
sub
loope
insb
adc
adc
and
mov
pusha
jbe
add
push
test
fucom
sbb
decl
daa
jg
adc
orl
call
lret
pop
hlt
add
icebp
nop
repz
push
xchg
cmp
push
xlat
or
rcl
shlb
cmc
dec
nop
ret
ss
sbb
mov
stos
add
and
negb
std
jb
or
pop
cwtl
lock
test
out
xor
cmp
notl
movsl
xlat
dec
ljmp
xor
jp
shll
xor
xchg
enter
inc
lret
xor
adc
jl,pn
repnz
push
adc
or
push
or
mov
ret
mov
and
aas
loopne
nop
adc
xlat
je
cmp
adc
cmp
jb
testb
insb
adc
icebp
inc
add
cwtl
add
jo
adc
add
mov
adc
push
movb
dec
test
pop
je
les
andl
clc
mov
jb
cmp
jbe
pop
rorb
cld
adc
xchg
ljmp
mov
pop
shr
jge
pop
es
das
xor
repz
lock
cmp
popl
loop
add
pop
cmc
dec
pop
adc
mov
jl
inc
rorb
adc
fstpl
fstpl
pop
jmp
clc
jne
inc
cmpsb
sub
pop
pop
cmpl
fcmovu
pusha
pop
dec
or
mov
sub
push
push
dec
pop
sub
daa
xchg
lock
inc
mov
or
sbb
pop
sub
sbb
mov
outsb
mov
xor
cli
adc
xor
lea
test
ficompl
or
add
jno
shr
int3
pop
fdivrl
std
mov
jmp
popl
sub
jo
idiv
mov
adc
mov
jbe
adc
call
pop
mov
pop
inc
mov
adc
sub
dec
xor
sbb
push
lahf
rolb
ljmp
sarb
pop
cmpsb
inc
jl
jbe
xor
jg
leave
xor
out
shlb
or
pop
pop
lock
push
in
push
mov
loopne
push
adc
stos
popa
adc
dec
push
cltd
inc
inc
andl
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
inc
or
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
inc
nop
jl
sbb
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
inc
outsl
imulb
sub
or
dec
fwait
add
sub
lock
push
dec
sbb
and
cs
mov
or
clc
adc
cld
adc
or
sbb
subl
or
lahf
nop
nop
int
adc
nop
in
mov
pop
imul
dec
jns
jo
add
jae
inc
ret
cmp
add
pushf
sbb
repnz
dec
jne
dec
jl
adc
jle
enter
mov
mov
mov
add
iret
inc
fldcw
je
mov
sub
or
or
dec
inc
mov
or
dec
fwait
lcall
dec
ret
outsb
inc
xchg
or
add
mov
or
ds
int3
xor
mov
jg
jl
pop
pop
push
sub
and
mov
call
test
in
movsl
push
pop
rorl
fdivl
jmp
and
inc
movsb
fbld
test
fcmovu
js
and
pop
es
cmp
and
add
xor
imul
sbbb
ret
push
add
cmp
sub
cmp
and
std
je
lea
push
jle
test
sbbl
outsb
push
push
cmp
pop
dec
pop
adc
loopne
pusha
bound
mov
test
aam
add
or
sbbl
cmp
pushf
mov
sub
nop
jecxz
nop
and
inc
jmp
mov
inc
adc
add
push
add
in
loope
push
addr16
arpl
adc
sti
mov
fiadds
push
pusha
loope
add
leave
inc
cs
incl
add
fldcw
push
outsl
pop
inc
inc
push
or
mov
call
adc
push
adc
cmp
cmp
addl
pop
popa
sub
jmp
jbe
cmp
adc
dec
loop
adc
inc
xor
loopne
and
in
jmp
add
stc
addr16
andb
fsubrs
cs
xchg
ja
ljmp
or
sub
adcl
and
test
std
notb
jle
jl
cmp
cmp
inc
insl
lods
push
jmp
mov
sub
jl
sbb
cmpl
xor
mov
jno
add
loope
addl
pop
mov
test
mov
mulb
adc
arpl
daa
inc
out
mov
mov
mov
mov
orb
test
pop
mov
or
jns
les
or
add
xor
push
mov
cmp
ljmp
jecxz
xor
dec
xor
icebp
push
push
xor
push
shlb
xchg
loopne
scas
out
out
std
dec
adc
mov
add
sar
mov
out
mov
add
pusha
fcmovb
addl
adc
insb
sbb
jne
aad
push
adc
and
pop
ret
adc
push
adc
fwait
enter
loope
jae
mov
inc
sbb
movb
dec
ljmp
add
pushl
mov
ja
add
jns
dec
sub
call
cmovg
dec
inc
popf
pop
or
push
cmp
inc
jae
and
inc
ss
mov
mov
sbb
jmp
cmp
in
lods
sbb
mov
mov
sbb
call
mov
mov
pop
test
outsb
add
stos
jmp
jo
ret
jo
stos
jmp
out
lret
add
jo
ss
mov
lret
lcall
mov
flds
pop
pushf
out
call
jmp
push
dec
hlt
and
inc
lea
push
loopne
add
inc
out
inc
pop
fmuls
loop
lods
jnp
lcall
fcoms
push
inc
jp
test
jl
cmpsl
loopne
insl
dec
sub
scas
hlt
clc
add
cmp
mov
dec
incl
cmpsb
int
pusha
in
fisubl
test
add
cmp
rolb
jno
add
icebp
jmp
ljmp
push
ret
es
jg
add
movzwl
pop
cmp
jecxz
dec
ret
sbb
mov
inc
int
push
jmp
sbbl
inc
aad
dec
das
clc
pop
lds
iret
test
push
add
sbb
or
lcall
cmpl
hlt
fisttps
cmp
sub
or
adc
push
sysenter
xchg
xchg
mov
cmp
dec
add
roll
xchg
mov
pop
fbstp
and
jmp
xchg
mov
cli
fsubr
sub
sub
mov
push
cmp
mov
adc
loopne
inc
cmp
cmpsb
aas
movb
inc
mov
in
adc
cmpl
fmuls
push
rcll
and
inc
pop
cvtps2pd
fldl
mov
xorb
cmp
jmp
fldenv
xor
mov
or
dec
add
movsb
js
inc
cmp
fbstp
orl
pop
mov
xor
fiaddl
sbb
or
in
mov
sub
add
adc
jl
xchg
sbb
lods
dec
dec
stc
pop
xchg
cmp
in
push
inc
mov
mov
add
xchg
push
or
or
or
add
test
mov
and
jmp
mov
mov
scas
sub
pop
mov
cmp
std
jno
xor
and
setnp
fisttpll
xor
jns
je
add
push
js
lret
jmp
or
and
stos
adc
inc
test
setl
lea
mov
vmptrld
pushl
lods
adc
and
fdivrs
or
ljmp
inc
cmp
adc
clc
test
xor
jnp
xor
fbstp
jle
mov
shll
mov
or
dec
cmp
orb
xor
and
push
ja
push
xor
test
mov
inc
jbe
or
pop
mov
cmp
mov
adc
sbb
or
scas
add
sub
pop
pop
add
sbb
incl
xchg
ret
scas
inc
or
jle
sbb
xchg
fisubrs
adc
add
mov
dec
adc
dec
test
jmp
lgs
aaa
mov
sbb
or
jne
add
adc
jns
mov
adc
sub
xor
mov
adc
mov
mov
mov
push
dec
sbb
dec
push
out
testb
push
mov
cmpsb
adc
fidivrl
or
shll
ret
add
sahf
mov
ljmp
out
inc
push
mov
out
pushf
rorl
pop
mov
int
mov
jl
js
nop
sahf
or
inc
pop
loop
call
push
push
cmp
xor
sub
pusha
mov
push
sbb
nop
divb
into
sub
jne
loope
jl
orl
decb
cmp
pop
inc
dec
pop
notl
insb
gs
mov
orl
dec
loop
sub
push
fistps
cmp
lods
jg
shrb
cltd
fnsave
in
sub
add
adc
jge
addr16
test
sbb
xchg
push
or
adc
rolb
push
dec
pusha
jge
pop
jmp
fldenv
mov
and
pop
ds
pop
adcb
push
pop
lods
pop
scas
pusha
cmp
int3
pop
pop
xchg
mov
pop
cmp
and
cmp
loope
push
rcrb
add
clc
je
xor
lcall
lcall
cmp
xor
js
mov
mov
cmp
cmp
push
and
fnstsw
inc
jecxz
enter
jl
adc
mov
add
js
pop
sbb
add
mov
and
leave
fsubl
inc
int3
movsl
xlat
bound
enter
inc
ds
dec
sbb
mov
adc
push
mov
cmp
sub
inc
bound
pop
or
xchg
int
loope
xchg
pop
dec
xchg
mov
dec
jmp
inc
jmp
icebp
xor
jecxz
je
dec
jge
mov
add
jle
mov
mov
xchg
ret
inc
cmp
xchg
push
jg
cmp
movsl
cmp
and
mov
ret
out
sbbb
push
inc
inc
enter
mov
nop
lods
pop
or
daa
js
push
cmp
sub
sbb
or
in
sub
adc
dec
inc
jmp
cmpl
je
adc
add
add
and
sub
popl
xor
xor
lea
sub
or
or
negl
push
sbb
cmp
das
push
aam
pop
and
mov
dec
test
mov
inc
jno
jmp
sbb
sub
mov
xchg
cmpsb
add
lea
icebp
and
aas
add
imul
xor
add
dec
mov
inc
sbb
mov
test
sub
pop
dec
data16
cmp
dec
cmp
dec
jnp
adc
repnz
das
adc
dec
outsl
or
inc
imul
xlat
rorl
jl
mov
jle
dec
adc
add
out
and
mov
rorb
pop
adc
inc
mov
imul
jae
dec
push
loopne
jne
or
popa
xchg
lcall
shr
inc
fwait
in
nop
xor
imul
inc
inc
or
inc
icebp
jne
sbbl
cmp
inc
jl
mov
dec
or
ror
and
add
pop
aam
shrl
xchg
dec
or
scas
sbb
mov
inc
push
mov
mov
sub
mov
xor
pop
sub
je
push
popf
ds
stos
and
in
cmp
js
shr
sbb
scas
and
data16
pop
div
and
je
mov
add
jmp
push
xchg
pop
mov
mov
push
or
in
imul
inc
or
test
mov
inc
bound
cmp
push
sti
mov
mov
xchg
test
and
movsl
or
add
or
iret
and
mov
and
shll
dec
xor
adc
or
inc
outsb
aas
and
shr
es
jmp
shrb
pop
and
and
xor
add
jmp
test
add
adc
test
stos
cltd
les
sub
lret
sbb
lock
or
or
sub
inc
sub
mov
and
mov
leave
add
std
or
jmp
inc
and
mov
mov
movsb
pop
and
aaa
jecxz
fcmovne
int3
pushf
jge
add
or
adc
adc
push
or
or
and
jge
popf
sbb
sbb
loope
sub
and
sti
out
xor
mov
pusha
loope
pop
sub
add
and
rclb
fstp
ds
test
insl
cmp
es
rcrb
push
addr16
fiadds
call
or
xor
adc
xchg
cmpsl
repnz
sti
add
add
xchg
filds
cmp
cli
adc
das
mov
or
sub
push
lods
stos
sbb
mov
fsubrs
pop
testl
mov
adc
je
jb
in
imul
inc
add
adc
add
inc
flds
fldcw
pusha
stos
xchg
or
or
pop
push
shrb
sbb
add
sar
push
pop
ret
inc
fs
adc
add
loop
or
sub
push
and
mov
push
xchg
adcb
or
push
xor
lret
cmc
push
add
mov
aam
xchg
lods
addr16
aaa
sbb
hlt
cs
xor
fcompl
fnstsw
jne
mov
jl
add
sub
sub
leave
sbbl
fwait
rcrb
mov
xor
mov
add
adc
div
add
mov
sbb
pop
cmc
jnp
jp
clc
jecxz
cmp
ljmp
adc
mov
add
shl
or
jge
push
mov
inc
add
mov
dec
div
push
push
add
imul
cld
mov
xor
dec
into
jbe
shrl
aas
mov
in
or
orl
fs
shl
pushf
pop
vpavgb
push
pop
xchg
in
add
xor
and
mov
and
sbb
add
sub
shrb
mov
push
add
fidivs
movsb
xchg
sbb
pop
push
jmp
push
jmp
or
push
pop
adc
out
pop
loopw
jle
xchg
scas
or
movzbl
es
add
fwait
xchg
or
stos
icebp
mov
je
pusha
inc
loop
xchg
sbb
sbb
mov
sbb
sub
hlt
adc
or
inc
and
sub
add
dec
sub
pop
adc
or
jecxz
repz
mov
adc
test
incb
jno
jo
xlat
out
mov
cmp
dec
mulb
xor
push
pusha
cmp
loope
add
or
imulb
mov
mov
mov
push
in
orb
add
imul
sbb
cmp
pop
and
lea
push
or
mov
cmp
lods
sbb
jbe
sub
or
jno
sbb
adc
movsb
xchg
into
popa
push
loopne
jae
cmp
cwtl
ja
sahf
fnstsw
adc
inc
or
mov
jbe
mov
js
jae
pop
std
push
push
fsubs
cmp
pop
cld
or
jno
xor
data16
mov
add
push
pop
jl
loope
ret
sahf
push
clc
aad
test
jg
or
loope
lret
pusha
gs
ljmp
xchg
mov
enter
add
inc
jmp
sbb
pushf
sub
push
pop
adc
or
add
into
push
xchg
cmp
das
pop
cwtl
push
mov
mov
xor
test
cmovge
or
add
icebp
and
cld
gs
or
lock
stos
inc
add
or
dec
rorl
dec
jle
out
mov
std
bound
jne
mov
sbb
add
push
add
scas
cmp
sub
shr
and
pop
sub
dec
aad
add
or
push
test
shll
fnclex
and
fstps
and
xor
mov
test
or
push
mov
scas
sub
fldt
sbbb
fwait
sahf
adc
ficompl
fwait
sbb
aam
cmp
sbb
or
jle
call
in
mov
xor
push
les
in
scas
push
mov
loopne
inc
xchg
scas
mov
lods
push
fcoml
and
pop
shlb
or
mov
mov
jecxz
mov
cmp
jbe
out
add
xor
in
pop
add
dec
ljmp
xor
sub
test
jle
adc
mov
lea
insb
shlb
or
mov
sbb
insl
push
push
push
ret
sub
adc
adc
xchg
xorl
push
jnp
test
stc
int3
add
arpl
sub
cmpsb
cmp
adc
js
rolb
jo
xchg
addr16
test
push
and
xor
cmp
inc
push
jo
cmp
jbe
sbb
sar
cs
cmpb
jnp
imul
jbe
mov
add
loope
or
sbb
adc
pop
xor
stos
mov
xor
cwtl
shlb
lahf
mov
cmpl
inc
inc
dec
sub
cld
repz
dec
cmp
in
std
daa
movsb
and
push
mov
or
jo
insl
outsl
add
dec
push
or
test
and
push
out
sub
push
or
sbb
sti
add
push
mov
inc
mov
mov
pop
test
jne
or
jl
xor
hlt
mov
stos
mov
stos
pop
pop
stos
or
sarb
jp
and
pushf
cmc
aaa
mov
pop
add
bound
jle
jnp
inc
dec
jns
dec
xchg
loopne
lea
pop
mov
clc
mov
loopne
test
incb
aam
loop
rolb
fldl
adcl
repz
pop
shr
outsb
push
cltd
insb
pop
and
mov
out
mov
dec
or
inc
insb
sub
jae
outsl
fwait
push
mov
add
test
cmpsl
sub
xor
cmp
sbb
cli
out
pusha
sub
adc
loop
sub
jb
incb
jae
mov
add
dec
mov
adc
jns
sub
loopne
movsb
pop
and
or
or
imul
add
hlt
mov
xor
sti
cmp
dec
and
ret
or
cld
pusha
jp
fdivrs
fs
push
aam
xor
cmp
xor
push
sbb
lods
mov
lods
jg
lcall
cld
not
fsts
add
add
popf
je
loopne
mov
and
pop
ds
push
or
adc
jbe
jne
shl
inc
xor
in
adc
mov
jl
outsb
sub
inc
shl
mov
jl
xchg
adc
xchg
aam
and
push
push
in
out
sbb
push
pop
in
mov
add
cltd
pop
hlt
test
das
or
adc
data16
sub
mov
cmp
shll
cmp
setle
xor
outsl
mov
pop
push
or
sub
lcall
mov
ret
iret
dec
jns
inc
lock
inc
and
loopne
inc
mov
mov
std
shl
sbb
mov
push
or
dec
daa
sbb
mov
sahf
fs
sbb
jl
popa
addb
pop
andl
gs
mov
jl
and
and
mov
out
and
sahf
sub
mov
sbb
jge
dec
xorb
hlt
adcl
out
sbb
and
enter
or
and
and
and
loop
test
and
sbbb
nop
push
les
mov
movsl
adc
cmp
scas
or
adc
es
adc
addl
adc
inc
pop
adc
daa
movsb
cmp
inc
ds
or
mov
daa
movsb
mov
jb
adc
push
adc
dec
ljmp
stos
jge
xor
push
adc
xor
imul
mov
test
mov
pushf
sti
xchg
and
dec
sub
jne
stos
push
or
add
test
add
mov
or
jmp
xor
or
xchg
pop
jp
fisubs
mov
sub
cmp
ja
push
dec
jmp
and
sbb
and
mov
push
cmp
rolb
add
je
xor
pop
mov
adc
imul
or
js
mov
out
mov
adc
jmp
cmpsl
mov
jmp
lods
push
fsubrs
subb
and
aas
test
jle
adc
push
xor
das
mov
jg
orl
js
sub
xorb
xlat
in
sub
sub
mov
sbb
jae
rcrb
ret
insl
xchg
xchg
pop
jge
negl
mov
test
sub
add
nop
lret
sti
lods
push
jae
imul
sbb
push
pop
cmp
subb
and
outsb
mov
push
xchg
dec
lods
out
push
sub
mov
or
xchg
rorb
orl
pop
outsl
daa
adc
test
stc
sub
pop
inc
ret
xor
mov
stos
sub
mov
shr
mov
call
out
je
mov
test
nop
mov
fnstcw
pop
cmp
jbe
testl
testl
fisubrs
hlt
inc
hlt
pop
stos
dec
sub
inc
inc
subb
fildl
fst
cld
and
cli
and
sub
or
adc
mov
std
jecxz
add
pushf
jmp
push
pop
int3
push
adc
icebp
xor
add
sbb
into
dec
out
hlt
push
inc
adc
jne
xor
inc
jle
pushf
xor
adc
fadds
dec
adc
clc
mov
sbb
xlat
test
cmp
out
mov
sbb
fimull
push
cmp
into
enter
in
jge
jle
add
sub
xor
jne
mov
adc
inc
aas
add
out
dec
test
inc
and
inc
mov
dec
and
rorl
test
add
mov
dec
mov
cmp
dec
rolb
js
jecxz
mov
push
xor
mov
lock
and
and
adc
nop
mov
rorb
and
dec
iret
sbb
ja
push
fstl
mov
pop
mov
daa
pop
pop
movb
testl
les
enter
les
mov
jne
test
into
jne
inc
or
cmp
cmp
jne
hlt
int3
and
lcall
inc
cvtps2pi
cwtl
or
inc
bound
add
pop
dec
push
lea
add
pop
bound
movzwl
jp
scas
sahf
add
or
xor
cmp
dec
lock
push
clc
je
ja
data16
dec
fs
add
sahf
sub
push
cmpsb
cltd
jbe
mov
stc
and
cld
jg
add
adc
lods
aaa
pop
test
js
add
pop
push
les
cld
pop
push
adc
add
or
shr
adc
push
out
mov
jae
bound
or
adc
inc
mov
mov
add
div
lods
mov
in
sti
jg
push
dec
fcom
insl
fadd
loopne
shr
or
mov
xchg
push
dec
fcmovnbe
jne
insb
popa
es
push
mov
enter
and
push
mov
mov
cmp
shll
sbb
sar
pop
test
popa
pop
xor
fiadds
dec
xor
or
int3
fisubl
mov
mov
and
push
fmull
mov
push
dec
add
cmp
shr
popf
stos
or
sub
jp
or
push
push
into
jmp
scas
rcrl
push
xchg
shlb
mov
sbb
movsb
int3
and
cmp
int3
add
jne
push
lret
mov
jmp
sub
add
imulb
mov
movups
xor
push
stos
mov
bound
inc
sbb
xor
mov
cmp
xchg
inc
add
push
xor
arpl
jns
dec
cmp
mov
repz
lods
mov
and
push
jmp
imul
or
add
jmp
aas
daa
fwait
test
pop
jne
cmp
adc
inc
rolb
push
add
mov
mov
inc
fwait
or
mov
rorl
push
or
adc
dec
pop
mov
stos
or
xchg
xchg
adc
inc
pop
adc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
add
or
punpcklbw
sbb
mov
add
lock
je
out
clc
inc
or
out
imul
adc
or
lahf
xor
cmc
das
icebp
sub
add
cld
dec
rclb
push
jnp
add
push
pop
shrb
adc
gs
sbb
push
movsl
or
sbb
add
sub
or
addr16
xchg
mov
ljmp
shlb
and
jbe
or
add
sub
push
shll
sbb
pop
loope
dec
or
lahf
push
cmpl
and
clc
add
mov
and
dec
pop
and
cmpl
mov
push
add
and
pop
lock
add
push
ficoml
scas
and
mov
es
sbb
jp
sahf
pop
add
add
jmp
mov
add
adc
movsb
or
dec
pop
xor
pop
js
mov
or
test
inc
push
dec
inc
out
cs
xor
bound
imul
out
idiv
xor
push
ljmp
sub
add
dec
repnz
pop
push
and
add
adc
ret
inc
pop
dec
sbb
dec
lods
mov
sub
add
push
xor
cltd
clc
rcll
aam
xchg
mov
dec
adc
push
inc
add
add
and
jmp
rolb
ds
jbe
xchg
fndisi(8087
inc
sar
enter
aam
sub
adc
out
sub
rcrb
loope
fwait
xor
shlb
enter
pushf
lock
sbb
add
add
daa
xor
hlt
jbe
or
xor
push
sbb
sbb
jle
test
arpl
lcall
xor
call
cmp
sub
in
add
fldl2t
call
in
ss
cmp
adc
cli
dec
ljmp
jmp
mov
jp
add
lock
lret
lret
jl
inc
lret
sbb
cmpsl
inc
mov
or
sar
or
ss
notl
scas
nop
shl
add
enter
lcall
push
lds
pop
xchg
mov
pop
push
xor
aaa
adc
loope
gs
mov
cs
mov
ret
push
dec
inc
or
jmp
xor
leave
and
add
mov
in
xchg
push
and
popf
inc
fcmovb
sub
dec
fwait
pop
jbe
sbb
inc
neg
sbb
jecxz
mov
loop
jg
ret
daa
xor
or
jne
pop
cmp
or
add
add
mov
or
xor
adc
movb
push
mov
inc
into
xor
pusha
dec
xor
or
fsubrs
and
ja
sub
mov
dec
nop
push
sub
xchg
and
adc
push
add
shrl
push
movswl
les
sar
pop
dec
mov
aas
subb
mov
ret
mov
or
addl
shrd
push
jle
xchg
sub
xlat
inc
sti
jge
jge
sbb
clc
mov
dec
push
xor
incl
xchg
or
scas
inc
add
dec
jmp
xchg
clc
dec
mov
sub
sbb
add
scas
xchg
insb
incb
push
inc
or
mov
addb
pop
cmp
insb
loope
test
lcall
adc
jo
inc
out
inc
imul
dec
and
ret
add
pop
sbb
js
jg
jb
push
sub
or
pop
push
cmp
fidivrl
rorl
shlb
add
shll
mov
push
jns
fs
jbe
push
sarl
or
push
jg
mov
and
sahf
dec
cmp
scas
mov
or
or
mov
and
add
mov
rclb
add
stc
mov
sarb
jbe
es
sbb
scas
or
and
je
int
int
sbb
loop
xlat
add
jb
mov
or
adc
lods
leave
inc
daa
add
mov
mov
push
lock
adc
pop
xchg
inc
sub
sarb
mov
adc
inc
mov
aaa
add
loopne
popa
push
mov
inc
rolb
pusha
mov
mov
into
ficompl
pusha
bound
and
adc
xor
ss
push
pushf
mov
add
and
push
shl
jne
and
popa
enter
add
jbe
adc
inc
add
or
mov
dec
add
mov
adc
xchg
xor
push
insl
push
jmp
mov
cmp
ds
pop
cld
cld
jl
sahf
sub
or
mov
or
sbb
inc
shr
loop
mov
mov
sbb
jns
pop
dec
je
jge,pt
clc
pop
aam
in
gs
or
pop
data16
aaa
in
add
aaa
pop
inc
popa
je
sti
lds
inc
je
dec
cmp
jmp
xor
stc
add
icebp
jmp
in
add
dec
sarl
adc
aad
push
into
or
and
cmp
nop
adc
adc
mov
mov
dec
adc
adc
call
jne
fmull
insl
loop
xor
sbb
out
dec
idivb
add
pop
repnz
loope
add
push
pop
cmp
rol
ret
out
or
or
inc
out
in
imul
inc
mov
xor
lods
push
clc
decb
push
inc
add
inc
ja
int3
add
xchg
test
decl
mov
cmpb
jne
jp
adc
ja
sahf
orl
rol
mov
add
hlt
and
stos
jp
cmp
add
int3
push
cmp
sbbb
pop
pop
insl
sub
popf
lahf
xor
dec
cld
mov
sub
push
and
ljmp
sbb
push
popf
ret
sub
or
add
sub
pop
add
mov
andb
lock
ss
or
cmp
sub
adc
push
sub
xchg
pop
lcall
andl
xor
sub
add
xor
mov
cmpl
add
mov
mov
push
mov
insb
jle,pn
pop
sbb
and
shrb
call
lcall
mov
test
cmp
ret
lret
sub
cmp
inc
outsb
lret
mov
jge
sbb
or
pusha
mov
dec
push
adc
sbb
push
inc
cmp
push
add
push
sbb
sahf
adc
je
pop
int
lock
subl
cmp
loopne
dec
inc
mov
mov
dec
or
nop
add
and
inc
fdivs
pop
movsl
xchg
xor
sbb
dec
push
out
xchg
push
jmp
or
jmp
testb
je
push
ljmp
xor
add
and
negl
lret
aad
add
and
stos
lea
cmp
sbb
mov
and
or
fdivrs
jno
add
add
mull
data16
es
or
movsl
bound
outsl
add
sbb
mov
in
js
nop
fsubrl
movsl
push
je
cmpsl
xchg
fnstcw
arpl
add
cmpl
sub
aad
add
jno
in
lods
js
sbb
dec
dec
fs
filds
sbb
lea
mov
inc
jecxz
adcb
out
in
shrb
addr16
add
jnp
mov
fwait
ret
mov
push
fs
inc
dec
cmp
or
or
sbb
adc
xor
jae
dec
repz
shl
fadd
movsb
or
rorb
sbb
push
ret
push
mov
cmp
xchg
add
sbb
imul
rcr
push
ret
loopne
add
jg
xor
adc
sub
push
mov
les
pushl
les
sbb
inc
jmp
in
xchg
stos
add
xor
or
mov
or
fwait
pop
rcrl
cmp
testb
inc
test
sbb
ss
sub
push
les
push
cmp
mov
jnp
loop
mov
or
lock
mov
jmp
adcl
cld
jo
insb
loop
outsb
mov
test
out
rolb
or
das
adc
inc
inc
jecxz
cmp
frstor
add
adc
iret
dec
pop
pop
js
xchg
sbb
repnz
push
adc
cltd
fsubl
movsl
cld
pop
mov
sub
lea
add
xchg
push
adc
push
lea
xchg
sub
mov
dec
loope
push
sub
jp
je
jmp
sbb
fs
jb
rorb
xor
pop
ret
ljmp
jmp
pop
fists
mov
mov
add
inc
mov
sub
nop
adc
and
lds
inc
or
xchg
mov
inc
cmp
xchg
pop
inc
and
cwtl
mov
ficompl
ret
nop
orl
sub
ror
push
and
insb
rorl
xchg
mov
jo
not
inc
xor
adc
add
pop
xor
jmp
hlt
into
sub
pushf
mov
inc
and
and
sbb
idivb
mov
sbb
insl
xchg
xor
pop
jge
adc
push
loop
jne
js
mov
js
js
stos
testb
in
cmp
dec
inc
popf
cmp
or
push
rolb
call
cli
lea
or
es
add
sub
into
js
pop
cld
mov
jmp
shr
or
mov
add
push
int3
mov
xlat
bound
scas
push
das
lock
sti
in
stos
mov
cmp
or
add
mov
sbb
sbb
bound
inc
adc
fnstcw
xchg
shlb
sub
into
mov
lret
add
and
or
lea
mov
shr
cmp
mov
js
shll
stos
or
mov
mov
add
xor
and
cmp
and
clc
dec
fmuls
ret
call
dec
cmp
out
inc
inc
loope
cmpsb
inc
jbe
pop
stos
sub
and
pusha
dec
add
es
ficoms
mov
xor
adc
iret
mov
lock
andl
nop
xor
in
dec
pusha
leavew
mov
add
pushl
stos
idivb
sbb
sub
or
test
test
mov
sbb
lret
je
dec
call
pusha
push
or
and
mov
xchg
movsb
sbb
adc
mov
popa
mov
mov
imul
sbb
push
dec
ja
jne
jne
ret
cmp
adc
test
fldl
jb
jne
add
call
adc
adc
sub
adc
movsb
jp
and
cli
aad
jns
dec
jge
inc
push
adc
inc
push
cmpsb
fldl
movsl
jnp
mov
sub
push
cmp
jbe
ffree
add
adc
jl
mov
jl
leave
inc
xor
outsb
sub
jmp
adc
in
xor
cmpb
idiv
mov
xor
stos
xchg
adc
or
xor
pop
add
scas
stos
push
adc
inc
push
push
mov
ljmp
and
pop
nop
iret
ds
inc
adc
pop
popf
dec
adc
dec
mov
pop
or
subl
mov
shrb
mov
dec
cmp
dec
add
inc
addr16
jnp
adc
enter
out
or
pushf
rolb
test
adc
push
pop
hlt
lret
aad
flds
and
shll
repnz
push
je
mov
dec
jo
or
push
xchg
push
xor
mov
or
push
xchg
dec
out
push
mov
dec
or
jne
adc
movsl
xor
cmp
mov
mov
mov
scas
hlt
jo
hlt
aam
xchg
or
dec
leave
int3
add
and
xor
repnz
inc
cmp
mov
inc
or
in
dec
jge
inc
inc
mov
neg
neg
sbb
sub
mov
sbb
and
sbbl
adc
sbb
out
push
fcoms
inc
and
fsts
fcomi
sbb
fxch
enter
sbb
and
and
or
dec
jns
mov
push
pusha
cmp
pop
pop
adc
lds
adc
lods
rcl
ljmp
dec
and
shr
test
pop
addr16
mov
scas
push
testl
mov
cld
je
push
cli
dec
notb
mov
fwait
rcrb
push
jmp
sbb
mov
add
jno
scas
mov
pop
add
dec
jle
jne
xchg
dec
add
gs
int
or
into
jbe
jns
add
jmp
sbb
push
adc
out
mov
add
push
adcb
adc
pop
pop
in
das
pop
sub
add
sbb
pusha
adc
lret
adc
dec
pop
pop
les
lods
and
js
sbb
gs
and
or
sahf
xor
xor
sbb
and
mov
pushl
dec
fidivs
push
ds
inc
jge
movsl
cwtl
rcrb
adcb
leave
jne
aam
dec
sub
testb
das
cmpsb
rcrb
push
sub
leave
je
xchg
pop
dec
cmc
mov
mov
mov
push
or
or
mov
je
in
jg
pushl
mov
push
cmp
ja
add
cmp
adc
cmp
jne
mulb
xor
adc
mov
xor
idivl
pop
jo
test
add
aam
add
mov
scas
ret
mov
or
ja
popf
pop
add
jmp
pusha
dec
aaa
push
jbe
and
pop
mov
scas
incb
or
jmp
imulb
je
iret
push
push
fs
mov
movsb
into
sarb
xchg
lahf
pop
leave
add
dec
or
mov
and
mov
in
xchg
cmp
nop
push
cmp
xor
std
add
hlt
pusha
adc
xchg
test
in
push
push
pop
fsubr
aad
dec
addr16
mov
js
add
inc
adc
sub
scas
pop
mov
mov
jno
cmp
push
lea
pop
inc
jp
inc
mov
cmp
cs
xchg
xor
xorl
push
xorb
sbb
in
or
arpl
xor
adc
arpl
inc
test
add
mov
sbb
add
cmpsl
std
adc
movb
push
rcl
sarl
out
aam
xlat
fsubrs
mov
out
fstpt
mov
inc
nop
data16
fidivrs
movb
jmp
or
cs
rorb
into
or
cmp
test
mov
mov
divb
add
mov
mov
add
scas
mov
add
sbb
mov
lods
and
sub
push
inc
out
xchg
divb
in
mov
call
pop
idivl
faddl
cmp
das
or
idiv
sbb
push
push
mov
bound
ret
pop
adc
push
test
sbb
pop
mov
fldcw
adc
jmp
sbb
in
jg
sbb
dec
lea
sar
inc
fsubs
js
mov
les
or
fisttpl
mov
mov
out
loop
shll
mov
pushf
sub
cmp
adc
sub
outsl
push
adc
mov
xor
add
xor
sti
add
es
out
dec
pushf
push
jp
mov
jecxz
jb
inc
in
insl
insl
add
fistl
inc
rcll
inc
add
hlt
sub
loopne
out
mov
pop
testl
into
and
pop
cltd
js
lea
pop
sbb
lcall
mov
dec
ss
nop
xchg
ja
add
push
lods
mov
addr16
mov
in
inc
pmulhuw
ljmp
loopne
inc
or
popf
sub
ds
mov
sub
test
rol
inc
jnp
dec
test
rolb
push
mov
mov
fstpl
dec
xchg
mov
or
or
dec
push
jbe
mov
sub
cmp
pop
rcr
mov
movsb
sub
dec
repz
addl
mov
jge
jl
dec
rcll
cwtl
loop
test
rol
nop
loopne
ret
stc
jle
jle
inc
fcomps
jne
jecxz
adc
enter
add
fbstp
loopne
cmp
shlb
les
ret
push
lret
lcall
test
adc
xchg
adc
jo
dec
inc
lods
ss
shrl
shlb
shl
jmp
lret
dec
repnz
push
pop
add
lock
imul
mul
test
inc
cli
testb
inc
xchg
bnd
adc
psignw
and
loopne
notb
stos
xchg
mov
mov
adc
test
adc
dec
push
clc
xor
repnz
dec
mov
js
xchg
push
and
xchg
mov
jae
cmp
mov
lock
xor
add
push
dec
mov
jge
pushw
sub
loop
movsl
mov
jge
xchg
inc
or
int3
mulb
push
sbb
jo
aaa
mov
inc
andb
adc
xor
out
mov
push
dec
inc
shlb
pop
jo
xchg
fdivrs
aam
inc
inc
test
je
sub
mov
lods
dec
add
icebp
dec
rorb
xor
ret
adc
cmpsl
call
push
cld
lea
fiaddl
xchg
fnstcw
int3
pop
insl
test
jl
aaa
dec
lods
lods
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
in
mov
negb
negb
gs
xchg
addr16
mov
cmpb
or
jge
or
xor
jno
sbb
jmp
add
jne
pop
push
stc
inc
sbb
in
inc
push
das
inc
bound
aaa
outsl
add
mov
add
sub
pop
jbe
pop
sub
fildl
pop
adc
inc
add
inc
mov
push
add
popa
cld
or
nop
sbb
cmp
call
adc
adc
and
dec
cmpsl
sub
xchg
pop
shr
and
cs
add
or
push
shr
push
shll
push
adc
fcomps
xor
fiadds
mov
imul
jmp
cs
loopnew
fdivrs
test
push
and
paddusw
and
mov
push
adc
add
sbb
out
push
cld
jo
push
sti
and
xchg
test
dec
xor
or
mov
add
jge
push
ss
into
out
enter
lock
or
dec
sbb
jbe
gs
push
movsb
xabort
mov
mov
enter
sub
push
shlb
add
notl
jl
push
sbb
loopne
cmp
shll
into
or
mov
inc
rolb
inc
dec
xchg
inc
in
dec
jnp
add
add
xor
aad
sub
cmpb
or
add
dec
cmp
jae
mov
add
add
fdiv
bound
orb
pop
add
inc
test
xor
mov
jne
dec
mov
jb
int
sub
enter
mov
push
rcll
and
add
push
add
bound
ret
adc
imul
popa
push
lcall
mov
hlt
add
push
mov
ret
and
add
or
adc
fisttps
jmp
dec
pushf
mov
or
add
or
xor
scas
add
adc
push
add
pop
pop
mov
or
push
xchg
adc
fisubrl
xchg
add
add
outsl
pop
jnp
test
lret
sub
roll
lret
into
pusha
xlat
add
inc
mov
push
rcrl
outsb
mov
js
in
cmpps
or
add
inc
adc
shlb
mov
ficompl
pusha
inc
push
pop
jae
or
or
adc
and
adc
loopne
mov
add
inc
or
mov
imul
dec
cld
adc
xlat
dec
pop
or
and
cmp
lods
cli
and
and
and
inc
jbe
mov
mov
aam
aaa
mov
mov
cmp
inc
ljmp
xor
fldcw
mov
cld
xor
roll
or
sub
fcoml
inc
stos
jg
xor
into
dec
rcrb
sub
push
cmpsl
add
jge
add
les
pop
mov
cmpl
cltd
ss
or
add
mov
add
add
sarb
xor
xchg
idiv
shlb
lret
je
and
cmp
mov
lret
into
into
mov
push
cmp
mov
mov
sub
push
pop
shl
cmp
pop
mov
cmpb
rcl
bound
pop
add
cld
xchg
push
ss
int
adcl
add
leave
lahf
mov
out
adc
add
enter
add
add
mov
into
and
push
and
je
and
mov
inc
sub
pop
jo
sub
sbb
lret
cmp
lret
push
xor
jae
testb
addb
sbb
push
dec
xchg
faddl
and
pushf
add
mov
pop
clc
movsl
subl
xchg
push
mov
push
push
cmp
or
insb
sub
adc
cmp
cmp
sub
int
rolb
xor
ficomps
adc
sbb
adc
and
xor
js
or
and
sbb
pop
sub
jge
addr16
sbb
xchg
jl
or
ret
xor
jno
icebp
mov
dec
push
mov
bound
mov
dec
or
xor
push
adc
xor
insl
add
pop
xor
sbb
jmp
adc
call
sub
jb
add
insl
sub
out
je
lods
aaa
pop
adc
rorb
jle
xchg
cmp
jbe
inc
inc
int3
call
movsb
fcompl
jle
nop
inc
lds
out
dec
popa
repz
xor
xchg
jns
jmp
sub
aas
push
or
and
arpl
adc
cmp
add
lahf
mov
test
test
and
dec
push
test
and
popa
call
push
lods
test
add
popf
nop
inc
push
iret
xchg
in
jmp
pop
sbb
cmp
pushl
dec
jle
mov
pop
mov
inc
repnz
push
xor
mov
sbb
and
add
popf
jb
push
loopne
shlb
cwtl
pop
mov
jbe
cwtl
or
cmp
sbb
sbbl
push
fisttpl
mov
mov
std
and
outsl
fcoml
or
pop
leave
xor
inc
sbb
rorl
xor
lcall
rcrl
jge
lea
jae
lret
or
lods
pusha
push
pop
push
imul
adcb
xor
jl
and
xor
push
lods
push
push
test
gs
cmpsb
nop
dec
dec
add
push
fstl
sbb
rclb
pop
aas
add
sub
aaa
mov
xor
imul
daa
jmp
push
push
xlat
sub
lods
xchg
jb
int
mov
in
or
popa
push
lods
fsts
mov
or
add
jmp
xor
mov
iret
inc
hlt
or
push
rorb
jne
push
inc
add
xchg
pop
dec
cmp
jmp
xchg
fs
sar
pusha
sub
mov
fisubrl
push
hlt
mov
inc
imul
rcrl
sub
fsubrl
adc
sub
and
push
add
fnstcw
das
or
pop
inc
inc
jle
pop
pusha
mov
test
xor
mov
and
mov
and
pusha
jns
cmp
dec
sbb
dec
roll
movsl
test
jo
jmp
int3
xchg
std
testb
jg
xor
or
call
add
pushf
cld
add
sub
push
jbe
rorb
pop
dec
lea
dec
rol
loop
int3
mov
adc
bound
in
sbb
pop
nop
inc
inc
mov
fcoms
lods
or
jle
pop
stos
loopne
jmp
dec
loop
fwait
and
xchg
fisttps
out
push
ss
mov
js
mov
inc
aas
xchg
pusha
inc
or
mov
loope
rcll
mov
add
aad
js
sbb
push
faddl
inc
sar
sub
jge
pop
push
das
sbb
shrl
sbb
jmp
sbb
call
push
sbb
loope
pushl
push
and
push
adc
cmpsb
inc
hlt
xor
sub
or
add
rclb
push
mov
xchg
pop
testb
mov
testb
or
ds
push
mov
inc
and
sbb
cs
xchg
push
or
cmp
dec
ret
and
inc
and
inc
pop
add
out
push
pop
sbb
and
pop
or
mov
pop
js
mov
push
daa
arpl
cmp
mov
les
sbb
and
jg
pop
cmp
mov
mov
aam
sahf
add
sub
lods
pop
add
adc
inc
dec
sbb
mov
movsl
mov
jg
xorps
mov
push
pop
fsts
and
push
loop
loope
and
outsl
int
xchg
clc
out
push
and
sub
and
aaa
xchg
add
test
mov
or
fld
mov
fildll
sbb
sub
fsubrp
test
jns
fstps
icebp
test
rolb
insl
mov
sub
cmp
scas
sbb
adc
ret
addr16
adc
pop
sbb
lds
sub
xchg
popf
in
mov
cmpsb
dec
xchg
fimuls
add
mov
or
pusha
or
gs
les
iret
mov
dec
nop
push
popa
out
mov
or
incb
inc
push
cmp
gs
fdivrl
or
imul
gs
insl
mov
loopne
mov
data16
pop
xor
in
in
aad
shl
outsl
and
push
jbe
adc
xor
xor
sbb
xchg
add
loopne
fcmovbe
fsubp
dec
jl
push
push
or
rclb
int3
sbb
insl
cmp
call
insl
push
pop
jne
lock
enter
dec
rcll
lock
jp
call
or
fs
push
inc
nop
sti
shll
ret
mov
and
sbbl
jl
nop
adc
mov
cmpsl
fcoms
jb
jl
xor
inc
add
mov
xchg
and
adc
es
jne
cmp
daa
mov
inc
inc
adc
pop
insl
dec
ds
lret
je
arpl
rol
leave
sub
mov
loopne
pop
jle
mov
sub
mov
lret
push
add
sub
pop
dec
cmp
arpl
adc
aad
out
and
subb
adc
sbb
push
jg
inc
adcl
add
mov
dec
stos
pusha
fsubr
xchg
or
mov
adc
les
test
test
in
xchg
in
in
dec
rcl
orb
push
pop
pop
in
movups
or
pop
imul
ss
cmpsb
icebp
fcoms
jp
jne
adcl
mov
sub
push
lahf
pop
sti
pop
hlt
mov
fs
add
and
cmp
xor
dec
add
enter
sti
in
pusha
subb
ret
fcomps
adc
mov
addb
jo
insl
ljmp
sbb
mov
jmp
inc
xor
dec
or
aaa
adc
sub
leave
mov
add
cmp
rcll
xor
pop
cli
fmull
int3
jne
cltd
aam
xchg
xchg
dec
imul
test
pop
or
loopne
test
and
adc
dec
stos
imul
xchg
xor
cmp
fs
dec
inc
inc
dec
fwait
xchg
dec
es
and
out
add
mov
cwtl
add
add
nop
outsl
sbb
int3
pop
add
nop
rcl
mov
arpl
test
sbb
aas
adc
and
xchg
fadds
in
in
cmp
aas
in
fwait
jb
aad
aam
in
in
mov
jmp
xchg
ja
pop
cmp
push
out
dec
mov
mov
adc
xchg
push
push
shlb
mov
dec
inc
lahf
imul
mov
mov
sub
nop
or
in
fcoms
dec
mov
aam
inc
pop
gs
leave
arpl
aad
or
push
pop
rclb
enter
sbb
enter
mov
and
dec
push
push
cld
add
mov
cmp
pop
aam
cmp
call
rorl
fs
inc
enter
nop
jbe
adc
pop
fadd
push
or
lock
or
sub
add
out
and
or
pop
bound
movq
gs
push
in
fs
or
in
or
mov
dec
adc
cmc
dec
push
and
sbb
js
aad
mov
mov
or
aaa
xchg
ss
out
sub
and
imul
rclb
push
mov
pop
movsb
dec
clc
out
lea
xchg
in
jecxz
add
fsubrs
dec
sahf
dec
fcom
mov
push
in
sbb
out
and
cmp
mov
jb
jb
mov
jb
enter
cmpsb
shll
and
push
pop
inc
dec
sahf
or
push
xchg
pop
data16
leave
divl
sbb
cwtl
out
les
adc
divl
sub
adc
or
stos
push
sub
nop
cmp
jne
xor
fadds
nop
es
jno
in
inc
test
mov
fmull
adc
pop
das
cmp
xchg
or
jbe
lods
mov
rcll
nop
jo
inc
inc
lea
push
cmpsb
pushf
fcom
fmulp
das
unpcklps
inc
adc
fsubs
inc
test
jae
nop
xchg
loopne
fmull
push
and
call
ret
rcrl
std
fisttpll
xchg
and
sub
jg
dec
fildl
and
mov
mov
mov
insb
xchg
lret
faddl
sub
pop
or
mov
inc
or
mov
push
sbb
and
dec
ret
stc
hlt
int
adc
push
jno
shrl
fs
mov
stc
xchg
out
sbb
jb
jne
cltd
fs
add
dec
js
jl
sbbb
addb
and
les
xchg
jnp
scas
in
sbb
mov
clc
xchg
dec
aad
sbb
lock
dec
hlt
call
mov
rep
lock
aam
dec
test
lret
jb
mov
arpl
push
adc
outsl
in
fwait
loopne
push
or
lea
xchg
lds
rcrl
dec
and
sub
add
mov
jnp
xchg
add
xchg
mov
inc
pop
add
test
loopne
inc
cwtl
sub
mov
call
lea
adc
outsl
in
sbb
fistps
or
pop
inc
xchg
imul
sbb
test
inc
mov
push
push
popa
sbb
enter
or
jb
and
and
sbb
or
jo
adc
and
add
call
adc
addl
xchg
mov
inc
outsl
rolb
or
in
sub
dec
and
shlb
inc
xchg
sbb
inc
out
dec
or
jne
or
movsl
sbb
mov
mov
leave
sub
fcompl
and
jno
push
dec
and
mov
pushf
jae
pop
and
movsb
push
jl
test
into
add
push
mov
imul
mov
xchg
or
aam
xor
pop
jno
inc
cmp
repnz
cwtl
dec
movsb
xchg
dec
jg,pt
xchg
nop
decb
adcl
xchg
cwtl
push
loope
mov
test
push
sub
inc
lods
adc
mov
inc
pop
movb
arpl
mov
loopne
repnz
neg
xchg
mov
adc
add
clc
jno
or
or
cmp
scas
mov
sbb
das
jo
sti
adc
xor
cmc
popf
inc
pop
xor
add
jmp
int
xlat
lods
and
mov
int3
enter
dec
dec
sarb
mov
cwtl
mov
pushf
addr16
dec
movsl
pop
xor
pop
rolb
push
leave
and
pop
roll
mov
pop
test
adc
xor
je
in
or
nop
jbe
push
call
jl
punpckldq
and
mov
iret
xchg
rcrb
test
movsb
xchg
nop
pop
or
sbb
mov
mov
mov
or
movsl
test
inc
adc
sub
mov
or
mov
shl
or
movsb
mov
cmp
int
xchg
test
mov
push
add
loopne
or
inc
push
orl
movsb
lea
pusha
add
jno
arpl
les
sbb
xchg
push
movsb
nop
in
call
sbb
mov
inc
jg
movsb
sub
js
imul
and
adc
mov
bound
inc
push
rorb
lds
cmp
test
sbb
popf
xor
loop
push
jno
sbb
int3
roll
sub
or
dec
cwtl
and
mov
sub
sbb
push
cmpsl
adc
repnz
xor
cmp
xor
inc
push
stc
xchg
movsl
or
andb
push
das
mov
in
and
test
mov
insl
xorb
aam
in
and
mov
xor
je
orl
int3
jb
ret
inc
inc
aam
enter
jecxz
mov
sub
jmp
inc
stos
push
jmp
popf
push
fsubr
add
dec
enter
test
shrb
push
sbb
loopne
mov
adc
push
adc
loopne
test
rolb
fs
or
mov
sbbb
cmp
stos
lods
movsl
mov
ret
adc
mov
in
xor
inc
movsl
int
test
xchg
lods
out
fsubs
movb
inc
sub
sub
mov
ja
and
pop
jno
dec
pop
mov
movsb
shl
fldt
lods
jecxz
mov
add
mov
mov
lret
es
in
lock
aaa
lock
pop
mov
cmp
aam
or
push
xlat
nop
scas
or
lods
mov
cmp
jo
inc
adc
fsubrs
popa
test
shl
and
in
xchg
mov
dec
fwait
lret
and
mov
jne
test
add
sbb
xor
adc
rorl
and
stos
or
adc
mov
adc
jnp
or
pushf
sbb
pop
outsl
xchg
insb
std
pushf
std
out
push
adc
icebp
pop
or
imul
or
repz
xchg
test
inc
push
cmp
cwtl
mov
scas
sbb
and
shrl
mov
xchg
pop
vsubps
jge
xor
bound
mov
xchg
mov
cld
mov
push
je
sbb
mov
lods
lods
popf
mov
mov
sbb
push
out
or
push
inc
adc
mov
push
dec
and
mov
push
rclb
lcall
mov
sbb
sbb
lock
jbe
jge
movl
mov
les
cmpsb
xchg
pop
jg
loopne
or
inc
lods
mov
pop
movsl
push
cmpsl
mov
test
shl
mov
outsl
adc
mov
mov
outsb
sbb
xchg
mov
scas
or
xor
int
shrb
sbb
call
mov
sub
mov
ret
fstp
ja
cmp
lret
or
adc
imul
xchg
out
mov
inc
inc
cmp
and
mov
enter
enter
enter
aam
popa
or
les
push
cmp
wrmsr
and
mov
cmp
sub
sub
int3
push
mov
xchg
push
sub
xchg
inc
repz
add
and
loope
mov
roll
push
or
loope
pop
cmpb
add
xor
xchg
les
xchg
cmp
add
aam
divl
mov
pop
insb
lds
mov
movlps
sbb
les
scas
inc
sbb
lds
xchg
xor
sub
mov
push
push
jecxz
shll
les
inc
sub
jbe
pop
in
adc
mov
adc
arpl
in
cwtl
sbb
adc
movsb
sbb
adc
jne
xchg
cmp
push
add
fdivl
fcompl
cmp
pushf
mov
loop
in
enter
roll
and
push
push
invd
pop
jae
mov
xor
push
push
push
mov
xor
jae
add
add
xchg
imull
out
inc
push
test
pop
sbb
sbb
and
sbb
sbb
jae
mov
sbb
xor
daa
imul
add
jb
in
adc
nop
dec
sub
std
add
mov
push
scas
lods
in
pop
inc
xchg
push
push
in
idivl
adc
movsb
xor
out
xor
dec
fdivrl
sub
and
orl
fcoml
fs
inc
inc
in
nop
sarl
pop
and
mov
sbb
jb
hlt
fsubr
std
out
les
inc
mov
mov
addb
inc
out
cmp
xchg
push
and
sbb
adc
mov
stos
sub
inc
ret
loopne
sbb
sti
call
and
pop
dec
pop
adcl
lea
call
and
shrl
xchg
xor
xor
lods
fwait
adc
dec
mov
cwtl
fidivrl
push
addb
ss
in
mov
nop
and
cltd
cwtl
pusha
mov
dec
test
mov
lods
sub
dec
das
testl
enter
addb
and
les
cmp
sbb
or
mov
or
add
and
vpinsrw
scas
pushaw
xlat
fcomps
fadds
adc
xchg
and
filds
stc
ret
inc
mov
aas
in
jge
add
sub
add
and
xchg
add
xchg
std
add
rclb
sbb
push
xchg
push
push
movsb
adc
shlb
add
xchg
insb
dec
push
addb
adcb
aam
add
enter
jo
push
adcl
inc
or
sbb
repnz
shlb
dec
xor
inc
or
mov
gs
call
cmp
or
sub
push
add
add
xor
xor
inc
dec
sbb
aaa
cmp
enter
iret
jbe
in
sub
popa
gs
sbb
jmp
pusha
adc
push
adc
pushl
sbb
inc
cmp
or
sub
cmp
add
cmp
out
and
sbb
leave
dec
in
lcall
out
inc
and
mov
das
or
leave
sbb
mov
aas
sar
aad
aad
in
in
or
push
mov
les
push
aas
pop
nop
sub
push
js
pop
fxtract
lret
xor
setno
sbb
push
inc
int3
test
inc
rcll
call
jb
sbb
pop
jo
insl
sub
cmc
mov
add
aam
gs
or
bound
fwait
into
lds
xchg
jne
and
shlb
popl
rorl
adc
lds
jno
push
call
adc
dec
xor
stos
mov
jl
fs
push
cmp
enter
add
sbb
aam
test
mov
mov
jno
xor
mov
rol
cmp
and
leave
push
fidivrl
popa
les
dec
arpl
adc
in
adc
or
or
dec
dec
xor
sbbl
sub
cld
arpl
shr
sub
rclb
test
scas
dec
cmpsb
dec
xor
add
fmuls
shll
add
and
xor
sub
insb
sbb
les
xor
adc
movsl
scas
sbb
les
lods
cmp
xor
cmp
mov
jl
jne
ss
inc
int3
cltd
cmp
sub
adc
xor
mov
inc
insb
adc
inc
mov
jo
inc
or
pop
fcoml
sub
cmp
push
mov
or
and
xor
addr16
pop
push
loop
lods
dec
stos
mov
loope
and
and
xlat
mov
and
mov
ss
cmp
or
les
int3
adc
shlb
test
int3
xchg
clc
add
mov
mov
shrb
xchg
pusha
cltd
inc
in
fcmovne
int
xor
mov
rclb
push
scas
out
test
dec
gs
sbb
add
xor
aas
pop
scas
rclb
call
and
mov
sbb
cmpsb
leave
ret
add
push
nop
test
and
inc
add
aas
adc
mov
mov
insl
int3
insl
jo
dec
lds
lcall
xchg
add
cmp
in
test
mov
test
ret
push
mov
jmp
mov
mov
dec
adc
and
xor
clc
or
aad
xor
adc
push
test
les
lea
pop
shll
loopne
stos
jecxz
inc
lock
iret
add
add
rcr
inc
call
int3
test
inc
push
xor
or
fnsave
shll
repz
sbb
in
mov
and
ret
ss
jo
sbb
movsb
dec
out
lcall
push
insl
fadds
adc
repnz
sti
test
fidivs
fmull
sub
out
mov
adc
xchg
mov
cmp
pop
adc
jo
js
loopne
sbb
dec
es
in
add
orb
fsubrs
dec
adc
adc
shl
test
insb
pop
mov
insb
adc
filds
fcoml
loopne
or
or
mov
mov
popa
and
or
sbb
xchg
sbb
sbb
inc
pop
push
cmp
outsb
int3
lahf
push
loope
cld
rclb
cli
push
cmp
bound
lcall
in
std
ret
mov
fsubl
mov
xchg
push
mov
ds
pop
lret
rolb
pop
adc
add
rorl
pop
test
xchg
push
xlat
mov
sub
ljmp
ds
mov
xchg
aam
les
jl
clc
or
dec
mov
xor
mov
shlb
or
and
mov
iret
fldt
aas
xchg
outsl
pop
imul
loope
cmp
and
and
imul
aam
fs
mov
push
outsb
sbb
je
cmpsl
stc
cmp
in
mov
test
push
push
add
cmp
sti
add
push
loope
jbe
cmpsl
stc
test
add
pop
adc
push
ds
dec
insl
aas
mov
inc
data16
push
shll
ds
and
in
inc
inc
pop
push
fsubrs
out
incl
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
repnz
mov
or
and
shlb
xchg
sub
rcll
mov
mov
jns
mov
jns
nop
jle
test
push
pusha
out
sahf
out
pop
dec
inc
cmp
pop
and
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
adc
jl
ljmp
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
aaa
clc
jp
xor
xor
sub
daa
adc
mov
rcll
xchg
adc
into
ljmp
push
or
cmp
rclb
cmpl
ss
or
push
daa
popa
push
js
adc
cmp
shr
xchg
cld
or
decl
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
gs
xor
insb
xor
cs
adc
popa
and
popa
je
outsl
cmp
mov
push
mov
daa
pop
lock
bsr
lret
push
xor
incl
cmpsb
loop
subb
inc
out
fistpll
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
aaa
adc
add
incb
and
push
gs
pop
pop
lock
push
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
jle
push
cmp
cmp
cmp
and
jns
add
das
shll
push
dec
push
inc
inc
gs
std
fcomps
daa
dec
outsl
jbe
dec
arpl
ds
rcll
je
inc
jne
jne
dec
mov
insb
xchg
mov
inc
jo
imul
jb
push
inc
cmp
out
or
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
cmp
and
daa
push
scas
lahf
mulb
sbb
dec
js
push
pushf
jae
mov
jbe
inc
imul
ds
popa
das
jo
or
adc
sub
lock
in
inc
ud0
fidivl
sbb
pop
or
cmp
bound
push
add
lahf
and
sub
sub
cs
movsl
cmp
cmp
ds
rol
sub
dec
jg
stos
push
pusha
cmp
jge
jg
cmp
jo
mov
inc
test
cs
and
push
pop
or
adc
fadd
xor
inc
insb
jae
mov
push
fs
mov
inc
adc
cmpsl
dec
inc
mov
pop
fwait
in
int
jo
insl
and
jb
jbe
lods
fucomp
in
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
scas
ficompl
inc
outsb
push
jo
imul
insl
mov
cltd
pop
mov
je,pn
jo
fdiv
lret
and
mov
and
sbb
pop
fs
scas
xor
mov
or
xorb
insl
xlat
sahf
xor
mov
mov
fistpl
insl
and
insl
push
gs
fiadds
aas
xor
cmpsb
loopne
and
jne
dec
mov
add
insl
les
out
fwait
dec
and
mov
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
mov
je
or
flds
and
push
ds
xor
fidivrl
ss
push
mov
pop
xchg
sub
movsb
addb
das
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
insb
imul
lods
cmp
int3
or
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
xor
out
inc
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
sub
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
aad
popa
dec
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
sub
xchg
adc
adc
test
add
add
add
add
jns
cmp
pop
or
aaa
ds
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
push
push
inc
add
dec
xlat
push
stos
int3
js
mov
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
mov
cmc
es
call
push
inc
adc
xor
sahf
pop
inc
or
cmp
test
add
and
test
dec
cs
test
dec
cmp
je
dec
cmp
adcb
out
std
mov
sti
jne
rorl
and
push
and
sub
dec
add
jb
push
jb
adc
add
xorb
leave
add
and
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
ljmp
and
add
test
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
adcl
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
and
adcl
stos
sbb
decl
aas
mov
sbb
push
int
fists
outsl
ja
mov
push
jae
jb
bound
je
sub
stos
inc
ss
mov
mov
repnz
sub
daa
pop
lea
dec
mov
outsl
js
fisubrl
inc
push
mov
inc
jmp
lea
insb
gs
mov
dec
pop
movsl
outsb
jnp
mov
in
dec
imul
pop
jns
inc
mov
imul
push
inc
and
inc
jb
jns
daa
add
enter
dec
pop
jnp
jns
mov
or
arpl
stos
or
cmp
outsb
pushw
dec
add
arpl
mov
push
pusha
inc
ficompl
mov
jbe
push
push
lahf
movsb
sbbl
and
xor
dec
or
imul
cmp
lea
and
push
and
mov
dec
dec
sub
test
jno
xchg
fisubrl
push
jae
cmp
cmp
and
jae
addr16
in
push
subl
gs
or
jbe
xchg
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
jae
cmp
fildll
mov
or
imul
call
push
test
jg
jae
enter
inc
in
xchg
into
ljmp
sub
jg
outsb
bound
jns
pusha
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
fisubrs
cmp
cmp
push
das
push
sub
out
sub
es
jle
sub
sahf
mov
dec
sub
addr16
sub
sub
sbb
pop
push
cmp
popf
lret
jmp
cmp
mov
dec
pop
pop
imul
addr16
push
jb
imul
jo
ss
lret
xchg
push
lods
sbb
push
fadds
and
es
dec
test
cmp
aam
stc
mov
sub
or
inc
add
clc
add
jns
cmpsl
in
loopne
enter
jge
mov
push
dec
adc
inc
sti
push
in
fdivp
cmp
test
ss
push
pop
inc
push
out
lcall
test
jns
xorb
insb
push
data16
inc
shrb
fs
out
mov
pusha
out
pop
scas
repz
push
addb
add
cmp
ja
cmp
jns
cmpsl
push
sub
and
jns
jns
adc
add
incl
shl
jns
out
pushf
jl
cmp
sahf
ja
sbb
incb
mov
sahf
out
inc
inc
cmp
iret
repz
add
std
lock
movsb
ds
repz
push
sub
in
jns
out
rcrb
ret
cmpsl
pop
aam
pop
xor
jno
shlb
jns
cmp
jns
xor
shrl
cbtw
cmpsl
pop
push
loope
cmpsb
bound
fs
sbb
jae
jb
xor
mov
shrd
sub
add
sarb
insb
pop
xchg
or
cmp
inc
inc
dec
jae
insb
inc
gs
pop
sub
sbb
dec
inc
sti
sbb
dec
xor
inc
dec
dec
dec
push
push
ret
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
stc
incl
loope
lods
nop
outsb
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
adc
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
mov
xchg
aam
pop
ds
dec
je
lods
in
aas
test
cwtl
iret
adc
push
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
mov
jle
add
push
dec
scas
push
dec
push
push
adc
or
cs
jne
outsb
jbe
and
add
rorb
nop
das
inc
cmp
push
gs
imul
inc
sbb
push
jns
dec
push
sub
mov
sbb
es
pop
sub
ja
or
xor
add
push
xor
add
dec
pop
and
push
add
push
inc
sbb
aaa
ficomps
lods
std
stos
aaa
pop
pop
inc
and
dec
and
pop
mov
inc
jb
jbe
push
inc
ss
sub
dec
push
xchg
add
fcmovne
sbb
sub
sub
sub
pop
add
add
sub
fistpll
sub
add
adc
aaa
dec
aas
pop
add
add
cmp
fucomip
insl
add
and
lods
push
cmp
aas
pop
pop
push
adc
ljmp
push
pop
sub
das
sbb
sub
and
sti
jnp
cmp
adc
and
sub
sub
aaa
jmp
inc
pop
inc
cmp
and
inc
cmp
and
adc
sub
dec
ss
pushf
add
adc
jne
dec
adc
cmp
push
inc
pusha
add
dec
push
push
push
aaa
dec
or
mov
jge
pop
pop
aad
dec
xor
dec
pop
inc
push
sub
and
je
lea
dec
cmp
dec
add
insl
xor
pop
push
and
jnp
xor
lods
ds
and
sbb
inc
xchg
imul
sub
xor
and
dec
fisubrl
sbb
push
inc
lret
push
push
or
and
fadds
pop
sub
xor
jle
call
push
mov
push
add
and
adc
into
aad
add
cmp
subl
mov
fst
push
cmp
es
pop
push
gs
icebp
out
sbb
xchg
inc
push
push
xor
add
xor
das
add
cs
testb
fbstp
das
add
jbe
popl
cmp
push
pop
sub
ss
pop
je
ja
add
pop
mov
pop
insl
mov
movsl
pop
adc
inc
pop
jnp
call
fs
adc
dec
cwtl
in
push
cmp
pop
sub
imul
mov
jle
rcrb
lret
in
xlat
pop
add
jns
dec
outsb
cmp
repz
sub
inc
imul
sub
xor
and
ror
imul
push
dec
ss
dec
mov
inc
and
sbb
mov
stos
iret
lock
push
and
outsb
sub
enter
push
popa
push
popa
loop
add
or
dec
imul
push
xor
fs
rcr
loop
and
dec
push
iret
sbb
rorl
test
mov
sahf
out
cmp
repnz
sahf
out
js
nop
stos
mov
cmp
out
pop
inc
pop
das
lret
repz
add
pusha
shll
adc
es
movb
cmpsb
test
les
clc
push
pusha
push
sub
push
mov
dec
xlat
add
adc
pop
pop
sbb
sub
adc
sbb
dec
inc
jbe
mov
inc
fcmovu
out
pop
pop
or
inc
cmp
pop
nop
ss
ss
add
push
cmp
inc
push
adc
aaa
and
cmp
ss
push
jmp
dec
loope
icebp
sbb
movsb
data16
pushf
jbe
fstps
cs
pop
push
insb
push
sbb
lods
push
inc
and
sbb
xor
fildll
out
push
pusha
sub
sbb
dec
getsec
or
jb
adc
jp
add
add
inc
fistl
out
jnp
out
jo
xor
cmp
or
das
or
leave
ja
push
mov
ret
cld
xor
pop
push
inc
pop
out
add
pop
push
jecxz
and
lock
jo
mov
scas
jge
sbb
and
fs
cmp
sbb
pop
sbb
sub
sbbl
daa
popa
push
xor
ret
sahf
push
inc
push
adc
xor
cmp
and
xor
adc
pop
cmp
inc
add
cmp
push
cmp
cs
cs
cmp
pushf
add
inc
das
pop
and
jmp
push
cltd
add
mov
mov
ss
pop
ret
inc
cwtl
and
add
push
imul
scas
adc
scas
in
inc
lret
das
mov
pop
cld
pop
add
loop
dec
inc
jmp
sbb
add
xchg
mov
sub
dec
push
jb
loop
adc
icebp
and
fmul
outsl
das
ds
aaa
xchg
pop
push
sbb
or
sbb
push
sahf
xor
ja
add
pop
mov
and
and
cmp
call
inc
jle
xchg
adc
push
dec
pop
and
filds
mov
or
and
lds
pop
pop
push
xchg
in
test
lods
pop
xor
fsubl
and
adc
mov
inc
xor
ret
leave
sub
les
pushf
push
mov
push
mov
das
xor
inc
xchg
fsubs
jbe
jne
ss
pop
add
pop
cmp
pop
pop
addr16
jne
test
and
in
jl
shlb
xchg
inc
dec
pop
mov
mulb
pop
push
push
ss
lret
xor
daa
sarl
addb
add
mov
pop
jo
jecxz
int
inc
cmpsb
pop
mov
push
stos
scas
and
xor
or
mov
divb
adc
or
dec
ficompl
inc
xchg
inc
ficompl
lods
inc
daa
test
add
fistpl
pop
push
fsubrs
pop
add
pop
pop
push
or
add
push
jb
movsl
add
iret
xor
push
add
in
mov
or
das
icebp
pop
ja
inc
mov
and
test
lods
sbb
add
sbb
xor
adc
mov
sub
cs
cli
loope
pop
sbb
adc
sub
dec
and
pop
or
out
out
add
or
loopne
cmp
jge
xlat
and
sbb
insb
cmp
test
adc
cmp
rorl
js
sub
jbe
pushf
add
and
mov
push
insl
popa
and
outsl
or
push
push
out
inc
out
es
outsl
jo
inc
data16
and
cmp
enter
js
je
adc
out
sahf
testl
mov
pop
jmp
int
add
add
pop
mov
add
les
popa
aas
outsb
dec
dec
and
xchg
mov
lahf
mov
pop
je
sub
mov
sub
pop
push
adc
jbe
test
aaa
cmpb
push
adc
ficoml
and
sub
mov
xor
and
push
dec
pop
sub
sbb
push
in
mov
push
inc
xor
cmp
cmp
bound
test
adc
mov
mov
sub
enter
sub
pop
ss
add
mov
and
lods
sbb
add
push
popa
ret
sub
daa
mov
les
scas
out
pop
dec
sbb
aaa
add
outsb
aaa
cmp
add
adc
and
es
dec
cmp
xchg
repz
pop
sub
dec
pop
xor
fcmovnb
push
cwtl
add
aaa
xor
jne
and
sub
call
sti
imulb
pop
bound
bswap
lods
ss
push
push
je
xlat
mov
daa
and
jae
popa
cwtl
push
push
popw
je
aas
mov
add
push
data16
sbb
and
xor
js
add
add
jae
out
test
push
jo
fdivrl
sbb
and
push
push
das
add
loop
xor
xor
dec
or
sti
sbb
pop
sbb
fisubrs
das
add
mov
mov
mov
sub
out
pop
adc
push
dec
sub
xor
je
dec
loop
adc
push
mov
push
arpl
int3
dec
stos
arpl
jb
clc
xchg
jb
sub
fdivrl
outsl
imul
xchg
jbe
fsubp
repz
arpl
dec
xchg
or
sysret
test
xor
mov
dec
push
pop
ss
inc
xor
sub
das
sbb
pop
dec
xor
cli
mov
enter
xor
and
fdiv
mov
sbb
aaa
sub
add
push
pop
pushf
mov
mov
mov
jo
xor
insl
div
add
aaa
push
int3
push
jle
xor
into
xor
xor
in
ret
jb
and
in
lock
push
xor
adc
push
jbe
jb
into
leave
mov
and
dec
sbb
enter
jbe
mov
outsb
inc
dec
inc
dec
ret
and
loopne
movsb
cli
and
cs
xchg
cwtl
pop
pusha
data16
jecxz
bnd
daa
jo
sbbb
bound
mov
inc
adc
cmp
or
std
or
push
cs
add
dec
cmp
inc
dec
push
outsb
jp
and
mov
sbb
ss
inc
push
outsb
in
fabs
xor
daa
test
mov
sbb
adc
push
add
loopne
das
fiaddl
pop
dec
push
xchg
pop
insl
pop
pop
or
aaa
fisubs
inc
pop
inc
popf
daa
ficoml
push
inc
das
sub
sbb
adc
sub
xchg
mov
mov
push
add
pusha
mov
mov
loopne
xor
lahf
loope
imul
loop
test
push
rol
add
adc
daa
out
insb
adc
xorb
pop
and
and
and
push
ss
jo
and
data16
mov
pop
inc
jo
xor
and
add
adc
jge
adc
inc
inc
pusha
cmpsb
and
addb
outsb
dec
outsb
imul
sub
cmp
dec
sub
sbb
daa
mov
mov
adc
fsubrs
and
aam
imul
xorb
pop
mov
cmp
inc
or
xchg
pop
and
and
jge
ss
ret
cmp
pop
fdivs
adc
cmp
cmpsl
jnp
jl
loopne
adc
sbb
dec
mov
xchg
filds
cmp
sbb
pop
inc
adc
arpl
fisubl
xchg
inc
test
push
and
push
jecxz
outsl
dec
sub
xor
inc
ss
insb
mov
mov
adc
push
mov
pop
aaa
sbb
stc
xchg
and
sahf
lds
cmp
mov
es
pop
lods
int
ja
adc
mov
and
push
xchg
push
or
call
mov
jl
dec
fdivrl
imul
push
cmp
push
or
insb
xor
subb
aaa
ss
lds
and
add
enter
or
push
fcmovnbe
in
add
or
cmpsl
push
hlt
xchg
imul
es
inc
adc
and
pushl
adc
adc
sub
pop
dec
sub
pop
push
dec
or
mov
cmp
sub
cmp
ss
inc
xlat
or
inc
es
dec
push
es
and
xorl
or
imul
fbld
cld
inc
lods
sub
dec
jmp
cmc
lds
xchg
and
mov
jg
scas
pop
push
dec
fdivrs
pop
inc
cmp
pop
shll
add
or
insl
pop
divb
adc
and
and
adc
inc
filds
adc
out
jae
jo
push
imul
out
cltd
xchg
cltd
or
es
adc
test
add
out
fisttpl
ja
sti
aam
nopl
in
jp
xor
sbb
cmc
xor
pop
sbb
addb
popa
jnp
call
aaa
adc
or
popf
sbb
adc
and
jno
imul
cmp
cmp
and
dec
pop
je
push
dec
cmp
fs
gs
add
insl
test
sub
rclb
and
popa
les
push
push
aaa
xorl
fdivs
push
cmp
sub
pop
xchg
add
ss
sub
arpl
outsl
dec
mov
cmovnp
inc
outsl
pushf
lods
lcall
cmp
and
sub
call
pop
adc
push
and
inc
push
add
and
xorb
movq
push
jb
aas
or
scas
mov
dec
loopne
loopne
cmpsb
sub
xor
je
adc
loop
lea
mov
daa
fwait
push
jo
pop
notl
push
add
lods
mov
jl
push
cmp
add
pusha
sahf
gs
hlt
inc
outsl
pop
ss
lock
and
aaa
sbb
lret
mov
jmp
adc
add
cld
sbb
pop
xor
fs
pop
mov
sbbb
ss
or
jp
adc
adc
and
or
cmp
push
das
sub
or
add
or
push
insb
ds
testl
mov
xlat
xchg
add
aaa
sbb
push
push
sbb
sub
mov
outsl
jo
insb
gs
ja
fs
mov
jo
mov
imul
das
pop
pop
in
and
xchg
cmova
mov
or
push
add
inc
test
out
int
imul
inc
xchg
adc
mov
inc
popa
nop
or
dec
sahf
data16
mov
push
dec
loop
jns
sarl
addr16
xchg
lods
lcall
push
int
jle
in
push
mov
fwait
pop
inc
out
inc
inc
lds
add
cmp
icebp
dec
push
dec
dec
lods
add
aaa
sar
test
and
mov
mov
pop
sbb
ljmp
dec
cmpb
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
mov
test
pusha
or
mov
sub
sub
idiv
bound
mov
sbb
mov
ds
pop
sbb
addr16
pop
subb
mov
dec
fsubs
mov
pop
test
xor
dec
xchg
add
out
pop
pop
in
bound
adc
adc
incb
aaa
xor
cmp
jo
and
test
fcoms
inc
pop
push
loope
sub
test
rcrb
testb
outsl
push
dec
imul
push
cmp
pop
daa
iret
leave
jae
sub
sub
pop
mov
dec
inc
fcomps
pop
enter
in
jns
test
cwtl
dec
out
mov
push
inc
mov
insb
inc
js
cmp
loope
mov
push
dec
push
dec
pop
pop
or
int3
xchg
dec
test
sbb
push
dec
outsl
fisttps
jnp
cmp
xor
sub
sub
xor
adc
inc
inc
push
xor
add
pop
test
es
cmp
insb
addb
push
outsb
add
adc
loopne
in
js
mov
adc
sub
jbe
push
push
scas
inc
push
lock
std
aaa
inc
bound
je
bound
mov
inc
add
fsubs
and
push
loopne
addl
and
add
mov
rclb
pop
add
js
andl
loop
testb
shlb
or
idivl
or
lock
enter
push
sbb
ficomps
js
mov
push
add
adcb
dec
xor
hlt
dec
daa
xlat
cs
lock
xor
fists
das
pop
xor
dec
dec
cmp
sbb
mov
scas
mov
pop
dec
mov
inc
and
dec
add
push
dec
and
in
mov
and
mov
xor
pop
xor
add
dec
rcrl
adc
dec
in
hlt
aaa
nop
subb
aaa
pop
adc
push
push
dec
mov
dec
add
pop
jae
push
rolb
mov
lcall
cmp
push
jl
inc
mov
sti
jle
movsl
inc
outsl
jo
iret
dec
iret
pop
shr
in
jns
shrb
nop
push
lret
ficoml
fstpt
jnp
xchg
rcrb
xchg
out
scas
fnstenv
repz
fs
ret
cmp
pop
sti
cmp
mov
es
cmpsb
push
dec
rclb
fildll
jo
jge
lahf
xlat
pop
push
fdivs
fidivrs
push
jnp
push
negb
sti
pop
mov
test
add
cltd
mov
mov
in
repz
lcall
addr16
sbb
insb
fbld
scas
outsl
inc
mov
iret
fisubrl
mov
jns
lcall
cwtl
mov
loop
out
adc
pop
lds
into
sti
mov
mov
out
repz
aaa
test
mov
dec
and
movzwl
push
jo
jge
mov
mov
mov
push
rcrl
ja
push
jge
pop
in
repz
cmp
mov
adc
push
loopw
lcall
shl
imul
jo
pop
iret
out
in
jne
xchg
xchg
iret
xchg
sbb
mov
xlat
mov
push
inc
adc
insb
repz
repz
dec
arpl
jecxz
out
imul
push
xor
imul
das
sahf
out
lahf
push
jmp
and
cltd
jge
nop
pop
pop
popa
or
fstps
push
cmp
jle
jg
jge
out
mov
fdivr
sbb
inc
push
imul
addl
lcall
push
or
mov
mov
gs
andl
out
lcall
cmp
repz
adc
fwait
iret
repz
mov
cmp
repz
iret
notb
mov
pop
jb
mov
or
das
addr16
jg
loop
xchg
aad
pop
dec
sbb
scas
sub
sti
aas
adc
adc
stc
add
adc
cld
ljmp
adc
push
mov
xor
adc
mov
lds
pop
mov
scas
int
mov
jbe
mov
leave
loop
and
push
pop
mov
add
idivb
jg
jg
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
push
pop
cs
push
sub
xor
sbb
inc
mov
inc
add
push
jae
sbb
aas
inc
fwait
adcl
push
or
mov
je
sbb
aaa
push
stos
cmp
mov
enter
fisubl
pop
push
iret
jno
cmp
cmpsb
jae
ficoml
out
add
dec
mov
cmpsl
je,pn
push
ljmp
cmpsb
dec
add
push
xchg
stos
mov
inc
cmpsb
push
insb
pop
push
dec
mov
je
jns
push
mov
jp
das
push
xorl
adc
addr16
scas
jbe
iret
push
pop
pushw
ret
inc
inc
dec
or
jmp
push
dec
mov
ja
mov
or
orl
xor
fs
push
fistpll
dec
cmp
or
ds
das
pop
das
adc
mov
es
insl
jo
es
insb
je
push
push
stc
sti
leave
addr16
jo
jae
es
outsl
and
cmpb
sub
and
sahf
mov
push
cmpsb
mov
mov
lcall
xor
xor
xor
xor
cmp
cmp
movsb
stc
int
push
xor
xor
cmp
push
add
adc
pop
sub
out
out
pop
push
push
cmp
sbb
dec
or
sbb
cmp
add
add
push
pop
add
dec
push
jns
aam
and
es
push
dec
sub
lcall
pop
notl
dec
or
and
inc
and
dec
mov
jmp
es
ss
push
mulb
adc
xor
dec
xor
loopne
push
inc
xor
add
xor
rorl
sbb
lock
ret
push
daa
pop
xor
and
xor
inc
fsubrs
repnz
data16
push
aaa
daa
push
dec
sbb
in
pop
or
push
and
dec
and
aaa
push
jnp
jnp
ficomps
dec
adc
inc
fadds
in
andnps
push
sub
icebp
push
dec
ja
aaa
dec
into
clc
js
xchg
sub
push
cs
addr16
push
add
inc
cwtl
test
or
xor
cmpsl
cmp
adc
xchg
mov
sbb
pop
sub
ss
push
aaa
push
adc
cmp
xchg
inc
and
mov
out
jns
daa
sub
push
ret
pop
aaa
das
and
nop
std
fnstcw
hlt
mov
aaa
sbb
pop
aaa
sub
and
push
mov
das
iret
sbb
lea
aad
mov
inc
bound
aaa
add
push
insl
xor
sbb
sbb
mov
stos
pop
add
pop
pop
fbld
ret
push
lods
daa
jge
les
xchg
push
das
push
sbb
push
divl
and
sub
iret
sbb
or
pop
ret
mov
dec
jno
movaps
das
popa
lds
ss
pop
xchg
sub
adcb
push
fisubl
pop
mov
les
rcrl
add
or
pop
xor
movsb
arpl
rclb
cmpsl
mov
xorb
das
mov
add
pop
cltd
daa
lahf
sbbb
outsl
pop
xchg
outsb
adc
pop
add
int
add
sbb
stos
pop
jg
mov
sub
or
mov
out
and
mov
mov
ret
mov
aaa
outsl
lret
jae
fidivrs
fldl
add
pop
sbb
push
call
adc
and
sbb
popf
jl
loop
or
sub
add
bound
iret
aad
ss
out
mov
lahf
xchg
out
and
push
and
lods
mov
cmp
cmpsl
xchg
ja
mov
mov
or
dec
ss
add
jno
add
sbb
push
and
add
xor
lahf
push
movsl
push
test
pusha
sub
xor
cmp
aas
and
and
das
push
cmp
jbe
dec
pop
xor
pop
add
mov
cmp
mov
lcall
xor
and
adc
and
push
hlt
sub
fisubs
sbb
inc
cmp
push
dec
loop
sbb
pusha
xchg
push
sub
mulb
imull
lea
adc
cwtl
xorl
xchg
pop
dec
xor
mulb
push
jl
shrl
add
je
push
sbb
pop
jmp
and
mov
dec
test
jle
and
push
or
testl
inc
push
dec
popa
xchg
mov
js
dec
cli
icebp
imul
ja
sub
push
popa
das
and
and
xchg
add
es
jbe
add
movb
dec
inc
cmp
xor
add
shlb
pop
dec
les
aam
rcrl
frstor
pop
stos
dec
mov
ret
xor
pop
clc
add
aam
push
xor
cmp
xor
in
not
stos
cli
pop
push
push
scas
push
or
xor
push
loop
fldcw
ds
pop
fcomps
aaa
fdivl
add
add
fs
xor
adc
add
and
xor
lods
sbb
adc
int3
push
and
nop
sbb
sbb
xor
loop
push
mov
mov
xor
xorl
inc
fstp
xorl
faddl
sub
or
pop
sbb
push
inc
hlt
adc
push
das
stos
xor
xor
mov
fcompl
xor
and
lods
inc
inc
test
mov
or
js
inc
inc
fs
orb
inc
xor
out
sti
xchg
sbb
add
xor
adc
inc
cmp
xchg
add
mov
or
jp
xchg
mov
lahf
sbb
ret
xchg
add
pusha
mov
push
mov
jo
inc
negl
cmp
dec
andl
and
ljmp
jno
test
dec
dec
int3
add
sbb
xchg
mov
fst
pop
and
punpckhdq
sub
or
push
fimuls
sub
and
push
pop
jns
out
sbb
out
sahf
out
andl
cmp
add
dec
cltd
or
xchg
int
add
add
add
int
mov
pop
or
adc
ss
in
mov
sub
xor
inc
mov
fistpll
adc
mov
mov
mov
insb
shlb
add
test
sub
ss
int
add
or
adc
int
shll
pop
add
add
push
dec
str
add
stc
das
inc
aas
and
add
add
jae
adc
pop
pop
cs
and
fiadds
test
shll
push
xor
xor
inc
push
sti
cmpsl
pop
jmp
movsl
or
jo
and
push
imul
xor
xor
add
or
pop
daa
cmp
or
xchg
ds
daa
pop
adc
push
adc
push
add
adc
sub
stos
clc
pop
addr16
pop
inc
add
das
and
adc
push
lock
add
cmp
cs
daa
add
pop
inc
aaa
sub
sub
pop
push
pop
inc
sub
sub
inc
adc
sbb
cmp
sub
push
pop
xor
inc
dec
sbb
and
xor
dec
sub
sbb
xor
mov
add
lret
out
in
decl
adc
or
push
and
or
add
mov
xor
sbb
adc
lcall
xchg
mov
push
xor
daa
sub
push
or
pop
or
dec
dec
inc
inc
sub
clc
andb
cmp
or
sub
dec
inc
pop
pop
and
pop
inc
and
pop
add
les
stc
add
data16
add
mov
sbb
add
push
fcomps
xor
mov
pop
push
roll
xor
add
jmp
sbb
inc
sbb
sbb
add
cmp
xor
push
pop
inc
pop
xor
mov
pop
mov
or
sahf
xchg
ds
sbb
sbb
mov
push
pop
inc
pop
push
mov
icebp
pop
les
xchg
push
push
dec
dec
push
outsl
inc
imul
bound
dec
sub
xchg
adc
lret
add
mov
cs
jne
or
jb
add
aas
jge
dec
push
push
dec
push
sahf
loop
push
dec
push
push
inc
push
dec
inc
dec
push
sub
xor
xor
outsl
in
orb
outsb
push
inc
sub
jg
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
lcall
pop
adcl
test
and
jge
push
je
mov
andb
fwait
sar
inc
imul
bswap
mov
jmp
dec
fsubrl
stc
jbe
call
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
mov
test
mov
cmp
cwtl
cld
insl
sub
adc
or
or
ljmp
cs
ret
sub
xchg
mov
data16
mov
call
lcall
cltd
test
adc
shll
ja
daa
mov
mov
xlat
jg
movsb
sbb
dec
stos
fmuls
lret
rep
cs
jg
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
sub
jg
mov
and
and
dec
dec
pop
and
push
inc
pushl
cld
xor
push
push
and
xor
pop
insb
jns
push
cmp
dec
inc
jl
dec
push
ja
outsb
das
push
bound
sub
inc
sub
sub
jp
cs
mov
ljmp
pop
pop
or
dec
jne
xor
jb
into
adc
jg
xor
xor
inc
xor
sbb
sbb
aaa
mov
out
add
cs
and
dec
mov
call
sub
aaa
testb
pop
ja
negb
pop
daa
sbb
cs
das
sbb
sbb
pop
or
adc
movq
add
fimuls
aaa
imul
sub
xor
xor
pop
outsb
cmpsl
cmp
inc
add
inc
cmp
jmp
inc
inc
xor
and
aaa
inc
push
inc
repnz
insb
and
ss
cmovb
pop
adc
cli
fidivl
pop
cmpsl
ss
add
mov
movsl
pop
push
mov
outsl
testl
add
and
pusha
xor
and
jb
mov
addr16
cmp
cld
scas
bound
adc
push
jb
adc
and
mov
pop
add
mov
or
push
dec
cltd
popf
inc
dec
xchg
loop
mov
cmp
inc
inc
dec
pop
pop
sub
js
push
ret
jl
adc
push
push
or
sub
mov
bswap
dec
dec
adc
js
push
loopne
pop
push
sub
popf
jne
push
xor
jb
ja
mov
outsl
mov
fsub
push
add
xchg
sbb
jp
inc
push
xor
push
test
xor
sbb
mov
loopne
mov
pop
sub
daa
dec
mov
pop
sbb
loopne
addb
mov
or
sbb
xor
push
inc
inc
mov
outsb
lret
iret
push
push
mov
and
jge
and
and
nop
cmpb
and
sbb
xchg
mov
popf
add
ret
adc
shlb
pop
fiaddl
or
pop
and
jne
xor
jle
and
and
mov
fs
pop
adc
inc
inc
jne
shl
adc
mov
out
xor
outsl
sbb
sahf
push
int3
cwtl
rolb
add
sbb
adc
jne
adc
test
adc
add
adc
outsb
xchg
mov
je
xor
js
xor
jae
popa
insl
gs
cmp
ret
dec
pop
inc
cmp
and
xor
aad
or
push
pushl
insl
xchg
insb
loop
pop
push
sub
lret
jecxz
stos
or
dec
push
outsl
insb
or
aaa
dec
push
popa
je
push
xchg
push
std
ret
js
cmpsl
sub
push
out
sti
lock
push
sbb
add
add
add
out
push
gs
pop
pop
ds
in
add
pop
or
imul
sbb
movsb
aad
lret
xchg
push
adc
data16
push
mov
adc
hlt
jle
test
dec
loopne
fs
xchg
mov
adc
pop
movsl
cmp
fmull
inc
cmp
fimull
xor
and
shl
sahf
and
pop
adc
testl
and
cs
adc
das
sbb
sub
mov
push
pop
xchg
rclb
sub
and
movb
fsubrs
dec
adc
popa
dec
call
pop
push
ja
jb
pop
lock
les
repz
std
jae
inc
jne
dec
push
inc
mov
in
sar
xor
inc
push
sbb
mov
leave
fistpl
addr16
dec
das
push
sbb
stos
fstp
rolw
jnp
cs
cmp
ss
and
adc
sub
push
inc
sbbl
roll
adc
dec
aaa
daa
dec
sub
fs
dec
xchg
imul
cli
movsl
stos
push
outsl
imul
lds
push
push
cmp
or
add
mov
test
inc
push
movsb
add
push
aas
mov
iret
icebp
pop
add
loopne
shrl
push
and
insb
mov
add
pop
mov
inc
push
das
aas
adc
decb
sbb
test
or
pop
adc
and
adc
sbb
push
ljmp
and
inc
data16
das
loop
dec
cmpsl
lods
cmp
jge
std
inc
outsl
sbb
aam
pop
ja
xlat
test
scas
pop
inc
notl
mov
xor
inc
sbb
sub
xchg
mov
inc
dec
add
and
mov
nop
xchg
mov
bound
pop
mov
aas
pop
push
sub
fidivrl
cwtl
inc
pop
into
and
pop
and
mov
lret
rolb
dec
mov
dec
pop
dec
ss
fistl
movsl
xor
push
notb
repz
cs
push
push
and
jmp
testb
xor
shrd
jb
adc
xor
push
pop
inc
mov
hlt
sub
rcrb
mov
icebp
pop
aas
add
sub
inc
dec
mov
daa
xchg
and
bound
cmp
xor
ret
and
sub
gs
push
loopne
fistps
inc
movb
stos
insb
fs
call
dec
and
addr16
popa
push
sub
add
movzbl
dec
cmp
push
punpckhwd
dec
outsb
adc
je
scas
pop
pop
add
add
cmp
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
dec
xorl
gs
and
inc
push
fwait
jo
loopne
pop
daa
dec
push
dec
and
mov
jb
add
jno
or
dec
out
pop
scas
and
dec
inc
add
and
or
push
and
add
adc
adc
in
cs
sub
xorl
mov
push
jb
push
adc
jle
inc
add
push
add
or
aas
dec
pop
add
xchg
pop
sub
call
dec
fwait
mov
add
inc
and
dec
or
dec
add
aad
cmp
cmp
jge
cmpsb
aam
inc
cmpsb
cwtl
ss
mov
sub
add
dec
adc
dec
and
out
mov
push
mov
cmc
popf
or
aam
xchg
push
dec
lahf
lea
xlat
mov
xchg
pop
or
pop
sbb
pop
pop
lret
ret
pop
xor
test
in
add
insb
pop
push
sub
nop
pusha
or
pop
mov
ret
pop
inc
lods
cltd
fbstp
repnz
pop
adc
sbb
sbb
dec
adc
push
xlat
outsl
or
nop
cmc
dec
insb
inc
push
sub
push
adc
inc
pop
outsb
cwtl
mov
imulb
cli
sbb
and
sub
push
test
fnsave
mov
orb
outsb
pop
dec
xchg
dec
inc
xadd
sbb
inc
loopne
into
out
mov
inc
mov
lock
adc
cmpb
fstpt
idivb
aas
mov
jo
maxps
push
xor
lods
add
mov
pop
add
sbb
das
test
insl
scas
sbb
cmp
mov
add
test
addr16
mov
pop
dec
movsb
in
add
mov
cmpsl
jne
push
push
sbb
add
outsl
ror
push
aaa
ficompl
fwait
dec
lahf
add
es
or
push
mov
xchg
xchg
mov
sbb
pop
stos
rorb
fdivrl
jg
int
arpl
outsl
nop
sbb
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
scas
in
add
sub
or
shrl
pop
pushf
cmpb
sarl
sbb
push
push
lods
pop
nop
cmpsl
stc
cmp
je
add
pop
or
idivl
fs
dec
pop
iret
cmp
jns
pop
pop
ds
push
mov
cmp
hlt
pop
movb
mov
les
mov
pop
enter
push
jo
and
jns
add
cs
jecxz
adc
out
dec
inc
inc
es
or
and
imulb
fs
repz
dec
mov
sbb
and
sbb
pop
leave
add
mov
jge
jae
lock
test
sbb
push
jb
inc
mov
push
push
in
xor
ja
pusha
mov
leave
fs
dec
xchg
xchg
dec
mov
dec
outsl
in
sbb
xchg
inc
clc
sbb
rorb
pop
das
and
sub
sbb
add
adc
inc
repnz
enter
pushf
cs
cmpb
enter
outsl
cmp
sub
shll
push
add
dec
xchg
in
fwait
sbb
fs
pop
scas
or
pop
mov
popa
mov
add
and
xor
dec
lcall
or
in
in
pop
hlt
bound
add
cmp
out
pop
leave
push
lods
pushl
rcrb
pushf
xor
test
rcrb
fldcw
cltd
sub
and
push
adc
xchg
mov
pop
adc
mov
xchg
out
add
pop
loopne
mov
push
insb
lods
inc
xlat
dec
xchg
inc
mov
add
andl
dec
xchg
add
in
or
pop
sbb
fidivl
and
cmp
dec
push
pop
pop
filds
add
and
enter
outsl
and
pop
xor
insb
cwtl
sbb
and
adc
pop
call
mov
add
adc
out
mov
add
cmpsl
add
push
dec
jo
push
imul
xchg
mov
aam
sbb
or
idiv
in
in
daa
jns
xor
nop
ss
mov
sub
dec
pop
inc
add
pusha
lcall
pop
popa
push
push
xor
jg
push
mov
mov
xor
test
sbb
pusha
pop
sbb
xor
dec
pop
and
adc
imul
repnz
ja
sbb
inc
popa
push
popa
outsl
icebp
mov
or
pop
cmp
mov
test
add
jle
dec
sti
adc
popa
bound
push
hlt
gs
fadds
imul
in
push
lock
jo
verr
hlt
sub
xor
dec
mov
and
or
roll
bound
push
ret
adc
or
in
pushf
nop
popa
shlb
scas
add
iret
lret
pop
lcall
dec
sub
leave
andb
arpl
les
pushf
and
adc
cmp
mov
testl
and
add
daa
in
ds
scas
and
arpl
mov
js
fs
imul
aaa
xor
add
rorl
insb
outsl
jecxz
or
addr16
and
mov
shlb
je
mov
adc
add
jg
add
in
xor
mov
push
repnz
and
jo
xchg
imul
andb
inc
sahf
or
push
lods
in
dec
sub
inc
mov
sub
data16
dec
push
sub
das
outsl
push
repnz
fs
ss
inc
sbb
popw
jl
pop
daa
mov
addr16
inc
push
es
add
out
mov
in
pop
lock
sub
mov
sbb
xlat
add
or
push
sahf
iret
ljmp
or
mov
sub
loope
mov
in
imul
cmp
push
out
cmp
sub
mov
aas
add
fcoms
cmpsl
or
xor
sub
fstps
push
outsl
add
or
pop
fwait
inc
or
in
shlb
hlt
pop
testl
mov
ss
jo
loopne
imul
scas
add
mov
pop
leave
add
mov
adc
addr16
lea
add
or
sbb
inc
pop
lods
addr16
in
scas
or
add
es
sub
cmpl
outsb
rcrb
in
inc
xor
xlat
cld
push
test
xlat
mov
roll
imul
shrl
push
xor
imul
lds
inc
mov
mov
imul
les
pop
lods
pop
mov
outsl
lods
and
fwait
dec
outsb
cld
dec
insb
sbbw
adc
xlat
data16
xchg
filds
add
dec
in
push
dec
pusha
insb
jo
xor
push
aas
addr16
ret
pusha
fsubs
pop
outsl
mov
out
and
sub
mov
mov
jns
int
dec
xorl
adc
dec
dec
jne
stos
rorl
out
lcall
cmp
repz
push
jns
pop
subl
rcrb
jns
xor
out
int
jnp
lods
out
lcall
in
repz
adc
cmp
xchg
scas
into
sahf
out
add
inc
push
sarl
rclb
jg
push
xchg
xorb
addl
sahf
shr
pop
xorb
mov
clc
sub
jns
iret
lock
xor
call
scas
xlat
stc
mov
xchg
repz
cmpsl
inc
hlt
dec
mov
out
imul
mov
fnsave
jo
push
xor
stc
cmp
orb
sarl
cld
dec
mov
lahf
out
lcall
nop
dec
repz
push
insl
xchg
fiadds
and
inc
push
out
cmp
in
xchg
lcall
xchg
dec
xchg
and
jns
ret
cld
cmp
out
aam
xchg
or
cmpsl
stc
or
lcall
loopne
fwait
ss
xor
out
popf
mov
jge
sahf
shrb
push
cli
sbb
rcll
mov
mov
repz
das
pop
mov
lahf
cmpsl
lcall
jns
iret
int3
and
out
ds
xchg
add
sahf
ja
mov
mov
add
pop
leave
in
stos
jp
ss
out
jmp
push
repz
out
add
jl
out
scas
xchg
fildll
scas
push
cmpsl
stc
cmp
jns
out
push
mov
repz
les
imul
mov
mov
cs
cmpsl
stc
mov
push
cbtw
mov
lahf
out
xor
shlb
xchg
bound
mov
jmp
sbb
push
xchg
lds
ret
out
jae
icebp
push
ret
jns
cmpsl
stc
or
dec
cwtl
lret
idiv
cmp
repz
lds
inc
leave
repz
cmpsl
lods
lcall
lret
imul
or
mov
ret
mov
shrl
shrb
aam
or
jbe
add
push
push
inc
jno
pop
add
xchg
cmp
sahf
push
add
into
inc
mov
std
addr16
in
ja
ja
or
das
xchg
aam
ja
ja
fnsave
in
jb
pop
paddq
mov
sub
aas
push
inc
rcrb
shr
pop
xor
xchg
ss
and
pop
pop
lock
jo
in
es
xor
xor
push
ret
out
mov
stos
popf
mov
iret
shlb
inc
mov
push
filds
enter
in
and
cmp
pop
push
adc
adc
bound
and
fimull
jg
cmpl
leave
mov
addb
mov
and
inc
xchg
pop
insl
jb
mov
sbb
iret
adc
insl
scas
pop
pushf
bound
fisubl
aas
movsl
fnstsw
loop
aas
call
adc
dec
and
in
ss
aas
mov
shl
movsb
repz
aas
mov
or
pusha
stc
iret
fsubp
inc
mov
cli
push
cmpsl
ljmp
std
lea
inc
xlat
mov
inc
mov
aaa
fnsave
pop
pop
xor
inc
popl
subl
push
mov
decl
ret
sbb
push
aad
in
and
ds
add
lahf
add
sahf
xchg
xchg
sbb
ja
or
push
inc
bound
lcall
or
das
push
outsl
xor
insb
jae
fsts
sub
sub
xchg
in
push
jmp
pushf
sub
push
pop
mov
xchg
sbb
iret
push
pop
aaa
pop
aas
les
inc
ret
adc
bound
pop
movl
cltd
fcomps
pushf
sbb
push
push
inc
je
ja
test
push
add
mov
outsl
dec
imul
in
in
js
js
js
push
ret
add
pusha
pop
xchg
pop
fidivrl
incb
out
sub
mov
jns
jns
push
ja
add
ret
fists
iret
add
jns
pop
cmp
add
inc
cld
leave
xor
outsl
js
add
in
xchg
pop
daa
js
js
js
xchg
mov
bound
cs
out
addb
div
mov
jp
push
mov
jbe
pop
lret
inc
sbbl
jnp
jnp
xchg
push
xor
mov
jnp
cmp
inc
push
push
inc
outsl
enter
push
addr16
add
aam
push
leave
xchg
iret
add
jnp
jnp
rorl
mov
xor
inc
ds
mov
jl
push
and
lahf
jl
and
cmpsb
or
cmpsl
mov
shrl
dec
push
leave
lret
inc
adc
jge
jb
in
jge
mov
inc
enter
js
dec
cmpsb
in
mov
mov
push
das
nop
shr
jns
clc
jns
sahf
aaa
jb
jp
push
add
add
jns
out
add
cmpsb
jo
pop
inc
pop
jp
dec
ds
cmpsl
or
jle
push
and
addb
jle
jle
in
jb
jle
jp
orb
ret
adc
add
fsts
jp
push
jnp
xor
jnp
xor
in
xchg
jnp
jnp
jnp
jnp
xchg
out
push
cmpsl
push
js
dec
dec
dec
dec
test
dec
dec
movsl
int3
enter
dec
rcr
loopne
adc
dec
dec
lock
cmpb
cmpsl
and
sub
mov
iret
jae
add
inc
jl
pop
shll
cmp
push
xlat
xchg
dec
ficoml
cld
fidivrs
int3
jl
fcmovne
sbb
aam
fcoml
pop
sub
roll
jns
and
addl
clc
adc
jge
cli
sbb
inc
cmp
adcb
fstl
daa
dec
mov
sbb
jge
xchg
adc
mov
jmp
or
sub
and
in
enter
push
leave
add
cmp
insl
and
jo
pop
push
pushf
orl
mov
mov
and
or
in
das
nop
lock
jle
mov
and
jle
ret
jle
outsb
adc
test
xchg
incl
jg
cmpsb
and
jg
add
sbb
lock
nop
inc
bswap
test
nop
xchg
xchg
jg
das
das
das
pop
jg
jg
jg
jg
das
das
das
mov
jg
jg
jg
iret
repz
or
or
iret
repz
or
push
or
or
cmp
stc
adcb
sahf
out
movups
adc
adc
adc
adc
dec
push
pop
pop
push
xor
out
js
xchg
mov
adc
push
inc
jb
inc
iret
cmp
fdivrl
add
ljmp
ds
aaa
popa
xorl
sahf
mov
negl
repnz
inc
mov
xchg
les
mov
cmp
xchg
dec
dec
lock
add
and
cltd
fisubrs
xor
orb
sbbb
rcr
dec
das
push
orb
andb
mov
jae
sbb
test
inc
pop
jl
inc
fwait
in
iret
stos
add
jge
ss
add
lods
rorb
daa
je
ja
repnz
les
pushl
dec
xor
fsub
call
outsl
push
pop
push
jmp
inc
aas
add
insb
cs
xor
mov
xchg
dec
dec
and
and
push
fdivs
xchg
dec
es
mov
xlat
pop
sbb
pop
test
popa
test
mov
mov
out
nop
inc
and
adc
daa
xor
leave
add
pop
iret
insb
mov
in
and
test
and
pushl
test
mov
test
iret
xchg
mov
fidivl
or
xchg
movsb
cmp
mov
addl
jo
nop
mov
dec
dec
and
test
mov
sub
mov
xchg
xchg
mov
xlat
dec
outsb
xchg
mov
lea
push
fisttps
pop
gs
push
lock
dec
xor
mov
xchg
outsb
outsl
pop
xchg
xchg
pop
pop
je
jl
test
pop
pop
xchg
xchg
pop
pop
pop
pop
mov
mov
xchg
pop
pop
aam
faddl
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
and
dec
xchg
inc
jbe
xchg
mov
push
add
mov
adcl
and
xchg
pop
xor
pop
jo
lahf
jmp
rorb
sbb
jo
cmp
cwtl
nop
aas
mov
inc
mov
push
mov
rep
mov
aas
movq
mov
pop
iret
jg
push
xchg
pop
and
data16
mov
xchg
ljmp
cwtl
in
in
xchg
iret
and
pushf
or
pushf
je
and
and
movaps
pop
repnz
popf
cmp
push
pop
or
or
punpckhbw
and
push
cmovle
mov
js
xor
iret
shrb
mov
pop
mov
or
inc
pop
cmpsl
ret
popf
mov
es
adc
xchg
popf
mov
xchg
xchg
xchg
mov
cmp
in
stos
ud1
iret
leave
leave
xlat
or
mov
and
or
xchg
or
xchg
and
mov
mov
mov
ss
pushf
inc
xchg
dec
push
add
out
jbe
popf
out
pushf
mov
xchg
out
imull
dec
dec
dec
dec
fucomp
repz
out
and
mov
push
pop
sahf
out
sahf
pop
sub
xor
out
or
push
or
adc
mov
bswap
lret
andl
mov
xlat
loop
jo
jmp
lea
cs
inc
lea
pop
inc
cmovle
push
push
pop
data16
cmp
jbe
jle
lea
and
xchg
test
ja
iret
inc
fcompl
enter
add
add
xchg
adc
je
lods
push
daa
fdivr
xchg
sbb
push
or
inc
xchg
xchg
mov
in
dec
leave
or
hlt
mov
mov
insb
iret
pushf
and
fldt
mov
cmp
cmp
daa
fadds
mov
jns
sahf
or
pop
aam
adc
inc
mov
mov
xor
xchg
scas
je
pushf
jmp
mov
xchg
mov
inc
lods
mov
and
cmc
push
popf
cmp
aas
or
in
enter
and
jnp
pop
and
push
fistps
inc
imul
add
jb
mov
and
and
loopne
in
jmp
in
repnz
lock
dec
inc
addr16
arpl
mov
test
xchg
nop
lcall
in
outsb
xchg
nop
leave
testl
daa
mov
in
push
add
mov
and
mov
xchg
dec
xchg
pop
xchg
xchg
cmp
mov
clc
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
lret
mov
out
or
lcall
sbb
hlt
in
mov
add
fwait
mov
xchg
mov
sahf
fucomi
addb
add
ret
mov
mov
mov
enter
es
cs
ss
cmp
repz
add
out
xchg
divps
mov
adcl
jo
das
lret
cwtl
mov
xchg
mov
int3
pop
mov
ret
xor
mov
cmp
popf
pop
clc
sbbb
jb
in
cmp
jge
add
jb
push
sarl
push
imul
mov
loope
jmp
sahf
out
jne
mov
or
icebp
in
or
sbb
repnz
popf
inc
jbe
cmp
lahf
xchg
out
pop
add
xchg
pushf
pushf
dec
orb
and
mov
mov
lods
fsubp
lds
pop
xchg
pop
int3
mov
pop
xchg
sub
in
fs
sbb
pop
pusha
addr16
stos
push
xchg
idivl
jbe
orl
outsl
in
fwait
push
mov
push
repnz
cmp
or
out
idiv
xchg
filds
xchg
das
das
das
das
seta
xchg
pop
xchg
daa
xchg
das
das
das
das
das
xchg
aaa
xchg
aas
xchg
inc
xchg
fldt
das
das
dec
xchg
push
xchg
pop
pop
bswap
leave
leave
lods
or
or
or
leave
leave
leave
pop
push
add
leave
add
sbb
repz
rep
sbb
jg
repz
sbb
xchg
in
jmp
cmpsl
out
sahf
out
and
and
es
xchg
sub
mov
ljmp
mov
push
ucomiss
loope
out
outsl
dec
push
add
push
cwtl
jnp
mov
packuswb
mov
mov
add
cmp
cmpsl
push
mov
dec
mov
fucom
rorl
dec
in
cmc
push
and
cwtl
add
enter
cltd
xchg
cltd
cmp
in
cltd
push
cltd
pop
push
add
repnz
iret
or
outsb
mov
lret
cwtl
das
mov
mov
pushf
fmul
ror
ret
sub
jne
mov
inc
cmpsl
or
adcb
jmp
cmp
jo
daa
nop
iret
hlt
cltd
inc
mov
cltd
add
or
pop
adc
adc
ja
mov
fistpll
lcall
push
add
lcall
iret
dec
movsb
inc
adc
or
sbb
xchg
pop
movsb
xchg
leave
dec
ja
out
xchg
lahf
lcall
xchg
movsb
xchg
fcmovne
lret
add
in
cmp
scas
adc
pop
fwait
sub
fwait
push
js
cmp
movsl
jb
and
iret
fwait
fwait
mov
bts
mov
cmp
daa
mov
bswap
rcr
or
daa
iret
repz
jmp
sti
fidivrs
add
sahf
out
dec
adc
sbb
and
pushf
pop
adc
movsl
sbb
and
outsl
psllq
jae
add
xchg
in
mov
icebp
fadds
mov
addr16
pop
test
or
outsb
mov
in
cmpsb
mov
mov
repz
iret
add
push
adc
dec
mov
cmpsb
add
mov
in
popf
sub
xchg
and
sahf
addr16
outsl
popf
mov
js
mov
inc
fucomip
sahf
pop
in
out
cmc
push
add
rep
xlat
ja
pop
and
or
enter
xchg
jb
add
push
test
pushf
bound
pusha
test
insl
cmp
pop
out
lock
pop
pop
ja
add
pushf
je
jg
add
xchg
mov
xchg
mov
dec
and
cwtl
test
pop
mov
psllq
adc
sti
sahf
pop
add
popf
cmp
pop
adc
push
or
repz
or
or
cmp
cmp
inc
dec
lahf
mov
and
lahf
adc
test
cmpsl
enter
push
add
dec
sahf
fcmovne
mov
loopne
cmp
mov
leave
sbb
inc
stos
adc
sub
push
cmp
pop
adc
pop
inc
mov
or
adc
inc
pop
pop
mov
test
out
loopne
mov
mov
pop
adc
mov
cmp
push
subb
fcoml
xchg
or
add
test
xchg
fucomp
lock
clc
repnz
rcr
mov
addr16
mov
ja
cld
repnz
loopne
and
jo
cmp
lods
mov
repnz
mov
addr16
repnz
jge
mov
repnz
mov
push
or
iret
repz
or
sbb
hlt
movd
mov
xchg
test
dec
push
adc
out
and
push
bound
and
lock
das
andb
enter
mov
repnz
push
sub
mov
jbe
lahf
ljmp
subb
jmp
lret
lret
lret
stc
mov
pop
mov
pop
push
pop
daa
mov
inc
mov
mov
add
stc
scas
dec
mov
daa
cmp
aaa
jp
andb
xchg
mov
cmp
mov
daa
xchg
push
test
mov
repnz
mov
pop
fiadds
movq
out
dec
mov
xchg
inc
repnz
stos
inc
test
mov
scas
cs
lret
push
movsb
pop
cmpsl
jmp
dec
incl
lock
cmp
mov
jns
daa
iret
cmp
jns
mov
mov
cmp
lods
mov
jae
cmp
xchg
daa
pop
out
movsl
or
add
js
pushf
add
sbb
mov
cmpsl
cmp
inc
dec
xchg
jl
daa
push
xchg
mov
mov
xorl
cs
imul
mov
mov
xchg
pop
ltr
ds
scas
mull
jb
enter
cmpsb
cmpsb
cmp
inc
cmpsb
pop
or
out
ja
add
dec
mov
out
and
cmpsb
clc
movsl
out
daa
mov
in
cmpsl
push
sbb
in
popf
in
in
cmpsl
cmc
std
xchg
inc
pop
and
add
cmpsl
outsb
mov
and
cmpsl
cmp
inc
pop
dec
dec
sahf
out
add
sbb
lar
fs
and
iret
in
xchg
ja
pushf
mov
mov
mov
inc
shrl
psubd
add
inc
mov
jb
sbb
pop
jnp
test
xchg
iret
lods
cmp
jne
add
ret
in
and
jbe
in
xor
neg
cld
out
test
push
pop
push
sub
push
push
push
int
fisttpll
add
cmp
fmull
subl
mov
xchg
cltd
pop
lidtl
jns
out
add
mov
xchg
out
mov
pop
stc
mov
shrl
mov
mov
xchg
inc
mov
insb
mov
or
inc
inc
pop
stos
inc
iret
out
dec
push
jo
les
mov
xchg
movsb
aam
sub
xchg
push
das
cmp
add
popf
cmp
inc
add
push
add
pop
sysret
bound
dec
loop
cmpsl
fbstp
adc
adcl
leave
add
loope
add
cmpsl
xchg
pop
sahf
mov
jns
stc
xlat
or
pop
stos
and
jbe
dec
inc
stos
pop
dec
stos
cmp
orl
mov
mov
push
pop
rorl
flds
xor
es
jg
das
pop
mov
shrl
das
jmp
adc
dec
jae
add
hlt
jbe
cmp
and
rdtsc
lods
sahf
and
int3
pop
sbb
das
add
dec
insb
mov
mov
cmp
outsl
lods
ja
leave
and
inc
push
outsl
mov
aas
or
lcall
and
das
das
mov
mov
das
mov
shrb
in
loop
ljmp
orl
or
lock
lods
jmp
pop
sub
xchg
pushf
dec
pop
pusha
push
pusha
aas
jo
js
inc
fidivs
mov
test
nop
lods
out
je
pop
dec
jge
fdivrl
mov
mov
push
out
or
or
and
jo
es
in
in
mov
ret
lret
lea
xchg
mov
in
mov
scas
call
adc
outsb
mov
scas
cmovp
arpl
dec
sahf
out
add
leave
leave
jae
jnp
mov
xchg
mov
jbe
scas
mov
vmread
xchg
cmp
mov
movsl
mov
xlat
xchg
scas
jmp
dec
cs
xchg
scas
xchg
scas
mov
dec
scas
cmp
ja
and
insl
jno
add
pop
pop
and
movsb
mov
mov
scas
iret
pop
loopne
jb
mov
pushf
ljmp
mov
iret
mov
push
add
sub
repz
xor
outsb
repnz
add
cmp
mov
mov
cltd
insl
jne
jge
cmp
test
lea
cmp
mov
dec
sahf
out
mov
mov
pop
lcall
mov
clc
mov
invd
cmp
mov
mov
mov
inc
cmp
in
in
add
pcmpeqb
sahf
ja
mov
mov
or
fistps
cwtl
dec
mov
fmull
xlat
fisttps
jmp
sahf
or
dec
dec
dec
dec
gs
dec
dec
dec
dec
lahf
mov
retw
scas
mov
xor
adc
iret
inc
push
dec
push
addps
xchg
sbb
push
sbb
mov
xchg
out
jmp
rcr
and
fisubl
push
add
and
leave
jae
cmp
mov
xchg
daa
daa
daa
pop
jbe
xchg
outsl
mov
mov
in
mov
clc
les
stc
pop
mov
lret
enter
mov
xor
lahf
pop
pop
ret
insl
mov
xchg
xchg
and
jge
mov
xchg
push
push
popf
mov
stc
adc
mov
jns
mov
iret
aad
lahf
cmpsb
xchg
mov
mov
adc
push
xor
mov
iret
jae
sbb
sbb
add
sub
scas
dec
mov
pop
pop
pop
pop
mov
mov
mov
mov
pop
pop
pop
jge
mov
pop
pop
pop
pop
mov
mov
mov
pop
pop
pop
ret
mov
mov
mov
mov
jle
pop
jmp
pushl
pop
mov
mov
push
push
sahf
out
sahf
and
sub
xor
jns
and
push
out
sahf
out
pop
and
jns
outsb
daa
jbe
orl
mov
xchg
cvttps2pi
lds
pushf
movsb
cs
lods
mov
push
leave
xor
rcrb
iret
jae
dec
fisubrl
loop
ljmp
push
das
cli
mov
mov
adc
iret
pop
in
movsl
mov
push
add
dec
aaa
jns
sgdtl
repnz
out
fisttps
js
leave
leave
push
orl
mov
xchg
in
add
leave
leave
leave
aas
pop
jbe
leave
repz
xchg
mov
xchg
jb
jns
sahf
dec
adc
jns
jb
repnz
out
sbb
ss
dec
pushf
pushf
pushf
pushf
push
je
lcall
rcr
in
pushf
cmp
out
es
ja
jns
sub
sub
xor
cmovb
in
dec
sahf
sub
sub
in
bound
push
xor
mov
jg
call
mov
fildl
out
add
in
mov
sbb
idivb
lahf
add
xchg
mov
mov
nop
cmp
mov
ja
add
mov
mov
femms
jle
xchg
fldt
pop
inc
dec
aaa
jns
push
or
or
jbe
cmp
jno
pop
xchg
sahf
out
adc
out
mov
adc
sahf
out
jns
loope
sbb
pop
rorb
add
repz
pop
sbb
repz
cmp
inc
and
int
jmp
enter
and
lea
pop
xor
repnz
add
shlb
cmp
push
fiaddl
loop
js
cmp
or
or
add
push
add
sahf
adc
sbb
adc
fucom
jns
cmp
adc
lar
into
repz
pop
push
scas
inc
cmp
push
pop
popl
cs
dec
inc
jne
repz
sbb
daa
and
mov
rep
decl
inc
mov
lods
mov
or
mov
xlat
fsub
mov
movswl
cltd
push
cmp
shrb
xor
rolb
xchg
inc
add
fcmovne
data16
pcmpeqd
pop
leave
mov
xchg
fs
daa
mov
leave
pushf
cmp
leave
rcr
push
loope
adc
inc
repnz
rorl
inc
cmp
xchg
rcll
int
jns
fcmovne
aaa
aas
xchg
dec
xchg
mov
cmp
jb
imul
jp
orb
lods
xchg
lock
pop
loopne
test
lock
pop
shl
cmp
push
mov
push
sbb
shrb
jp
ret
into
pop
pushf
mov
rcpps
xlat
pop
ret
popf
mov
cmpsl
push
test
xchg
sahf
jb
cmp
cmpsb
xchg
leave
test
in
rorl
fabs
ret
dec
push
bnd
outsb
pop
shr
xchg
push
ja
and
out
jns
sub
add
dec
inc
pop
mov
in
xchg
cmp
outsl
fbstp
mov
in
jg
xchg
pop
xchg
fistps
pop
cmpsl
fildll
mov
xchg
fucomi
in
loop
ljmp
dec
ret
add
outsl
push
rclb
mov
les
pop
leave
and
popf
fsubrl
js
orb
cs
push
in
mov
iret
in
in
ret
ja
inc
shl
fmull
out
add
push
loop
adc
inc
vpsllq
xor
pop
sub
xor
sahf
cmp
cmp
xchg
fildl
insb
addr16
dec
and
add
xchg
lahf
cmp
out
xchg
orb
pop
and
in
loop
add
inc
and
out
aaa
and
add
lret
dec
sbb
dec
mov
arpl
lret
lret
lret
lret
outsb
jns
test
pop
movsb
mov
lret
lcall
mov
mov
fadd
out
mov
std
or
adc
mov
sub
xor
aas
mov
push
pusha
imul
xchg
xchg
outsb
nopl
xchg
xchg
xchg
xchg
sbb
sbb
sahf
xchg
xchg
xchg
push
adc
in
jns
orl
mov
xor
xor
xor
jns
out
xor
sahf
mulb
enter
repz
jnp
push
sbb
es
repz
xor
ds
scas
fwait
cmp
push
inc
pop
cmovb
push
inc
jae
jns
inc
xchg
inc
lahf
dec
stos
leave
in
in
dec
mov
pop
lret
cmp
leave
leave
loope
dec
test
push
add
or
sbb
cs
fistpll
leave
sub
rcrb
loopne
ss
leave
iret
push
add
jp
jns
mov
xchg
leave
iret
pushf
leave
push
mov
call
iret
leave
leave
leave
leave
iret
xlat
fistpll
add
out
pop
test
sbb
jmp
dec
mov
mov
je
push
daa
pushf
jg
inc
into
jne
lret
lret
dec
outsb
repnz
add
cmovle
sahf
push
gs
jne
mov
dec
test
into
lret
adcb
add
rcrb
cmp
fmulp
rcr
fiadds
mov
xor
push
cmp
mov
lret
and
sub
repnz
mov
lret
cmp
mov
int3
jbe
into
inc
pop
add
je
mov
fucomi
jg
jg
mov
cld
or
stos
lret
mov
ror
jb
mov
in
out
sbb
clc
add
push
adc
sbb
dec
cmpsb
sub
adc
cmp
inc
push
push
sbb
sbb
jno
iret
dec
aaa
jns
nopl
xchg
cmp
xchg
and
dec
sahf
and
outsl
daa
iret
mov
ljmp
iret
sbb
sub
fadds
jp
xchg
or
out
and
push
add
jp
iret
or
cltd
mov
lods
xlat
sahf
xchg
out
loop
in
clc
push
cmp
das
into
add
push
push
push
add
or
into
jns
out
das
push
push
cmp
inc
jns
add
jle
jns
ja
data16
jno
adc
in
in
xchg
pop
popf
sbb
sbb
repnz
movq
in
push
and
ljmp
mov
dec
or
jo
adc
push
iret
iret
add
and
test
inc
add
daa
das
fwait
lret
xchg
sub
sub
fidivl
inc
inc
push
and
xor
loopne
cs
iret
inc
add
sub
iret
or
and
iret
push
add
dec
xchg
fucomi
bnd
cs
add
cmp
rcrb
push
add
repz
cmp
inc
or
sysret
add
jns
out
or
in
out
adc
mov
xchg
rorb
adc
pop
xor
add
mov
rcl
daa
pop
inc
cmpsb
iret
rorb
inc
outsl
das
add
scas
or
adc
adc
add
enter
rcl
pop
frstor
inc
call
iret
gs
je
out
pop
insl
or
jae
bnd
test
cmp
fwait
mov
dec
sahf
adc
mov
rcrl
cmp
daa
iret
sbb
repz
sbb
leave
addr16
sbb
rcrb
movsb
push
sub
fisttps
das
adc
dec
sarb
push
add
iret
repz
add
cmp
repz
orl
leave
repz
jb
jb
ret
bswap
ftst
jne
ret
jae
adc
cli
rolb
int
adc
adc
sbb
outsb
daa
iret
repz
cmp
inc
sahf
xchg
out
rsqrtps
sbb
pop
push
je
out
push
jns
ja
jle
push
and
lahf
and
sahf
out
ror
loope
cmp
repz
sub
add
jns
leave
rorl
cmp
push
xor
out
jbe
or
dec
sub
dec
sahf
xor
aam
mov
es
cmp
test
inc
adc
or
cmp
test
sub
mov
out
scas
xchg
aam
cs
push
add
aas
inc
push
mov
pop
sbb
inc
aas
scas
pop
in
push
xchg
sub
inc
aaa
mov
pop
or
daa
das
test
dec
push
add
sahf
out
outsb
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
dec
sub
js
pop
data16
inc
add
mov
and
push
inc
cmp
cmp
repz
sub
cmpsl
stc
cmp
sbb
clc
call
sahf
call
aam
sahf
out
ror
enter
leave
repz
mov
sahf
out
ficoms
insb
pusha
jns
out
push
push
dec
inc
sub
or
push
test
push
in
add
add
test
xchg
add
bound
loop
imul
xor
pop
adc
clc
test
add
movsb
add
fsts
jns
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outsl
mov
xor
fcomp
loopne
jb
jle
das
or
testb
push
cmpb
dec
cmpsl
mov
hlt
mov
jle
inc
aaa
push
pop
mov
xchg
fsubrs
sub
pop
das
mov
pop
movsl
add
add
negl
pop
push
lahf
out
sahf
or
out
cmp
movsb
adc
inc
cs
out
sbb
in
inc
repz
stos
mov
pop
cmpsl
stc
cmp
push
cmp
fsubr
and
sarl
and
out
cmpsl
jne
ljmp
ja
sbb
or
push
cmp
pushf
les
pop
fstp
mov
xchg
push
add
test
in
mov
add
inc
pop
imul
outsb
or
or
adc
mov
push
sub
cwtl
push
jae
xorb
daa
cmp
icebp
addr16
push
push
mov
xor
sarb
adc
push
push
aaa
push
insb
dec
xchg
aas
pop
daa
stos
push
lea
negl
jnp
sbb
negb
scas
cmp
pop
jl
insl
push
jg
out
addr16
out
fcoms
add
rcll
lds
out
add
push
bound
xchg
dec
adc
ja
or
push
sbb
loopne
push
js
mov
mov
add
and
add
ds
jns
testl
mov
call
jnp
jae
in
push
and
push
or
add
push
cmp
jns
cld
adc
hlt
sbb
jns
repz
push
rcrb
enter
sahf
push
rclb
and
mov
lods
and
movsb
es
in
cmp
aas
clc
mov
ret
orb
inc
out
xor
pop
pop
dec
pushl
push
push
jg
cmp
or
sbb
cmpsb
imul
js
and
aam
mov
dec
insl
add
shlb
xchg
mov
mov
dec
das
push
dec
insb
jo
adc
cmp
arpl
mov
add
nop
cmovo
hlt
in
jl
adc
mov
sub
mov
mov
ret
call
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
mov
sar
fwait
xchg
and
and
add
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
cli
mov
aas
xchg
les
jne
int
mov
addr16
stos
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
cmp
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
mov
ficomps
frstor
pslld
pop
inc
inc
je
inc
inc
push
dec
xchg
xchg
shll
jnp
cmpsl
jmp
xor
ja
popa
push
out
mov
ljmp
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
pushl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
int
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
ljmp
pop
filds
or
shrl
push
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistpll
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
incl
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
lcall
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
outsb
dec
clc
dec
add
pusha
jp
out
pusha
fists
addr16
fcomip
decl
imul
andl
shrb
rclb
or
or
incl
inc
or
das
es
lds
or
decl
lock
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
pop
inc
ljmp
shrl
or
inc
mov
aaa
pusha
mov
fdivrp
es
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
es
xor
sub
pop
adc
iret
and
adc
jns
js
out
aad
push
xlat
out
sahf
out
fcmovnu
xchg
out
sahf
fstp
loop
in
jns
out
call
out
sahf
in
in
repz
cmc
idivb
out
idiv
stc
cli
sti
mov
pop
adc
aas
push
mov
inc
lahf
movsl
adc
test
mov
fs
movl
dec
bound
rol
insl
bound
push
dec
ss
popa
je
push
fildll
adc
cmp
inc
jno
mov
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
std
mov
std
cmp
arpl
or
xor
bound
pop
xor
popa
push
inc
ss
jbe
pop
insb
imul
mov
imul
dec
inc
jp
sub
inc
add
push
inc
pop
inc
xor
pop
mov
dec
push
sbb
lret
popa
or
fs
inc
shll
push
je
movl
jbe
sbb
aas
mov
lea
bound
gs
mov
inc
inc
push
mov
push
aaa
lea
aaa
sbb
add
insb
popa
jns
mov
insb
and
push
dec
popa
xchg
cmp
jp
stos
mov
inc
push
and
cmp
push
in
add
cltd
and
jae
jns
adc
insb
daa
int
pop
ret
andb
inc
aas
or
mov
insb
les
es
push
fcmovu
sbb
inc
pop
xchg
fnstcw
inc
add
ds
mov
add
inc
stos
cmp
iret
int
sbb
call
xor
inc
subb
loop
xor
inc
outsb
fistl
popa
popa
mov
dec
jge
iretw
mov
xor
or
mov
xor
addr16
clc
add
repz
xchg
into
pop
jo
pop
jnp
in
aam
cmp
push
mov
jg
aaa
gs
xor
push
add
sub
add
outsl
pop
insl
sbb
mov
aam
sbb
rcll
dec
mov
push
add
lret
lahf
mov
out
jb
and
inc
and
inc
dec
popa
jo
lahf
or
xchg
outsl
outsl
test
mov
pop
in
pop
fs
jno
cmp
push
mov
stos
lds
and
nop
test
pop
cmp
pop
sub
mov
or
cmp
mov
jo
push
test
push
outsl
insb
jns
adc
jb
push
add
je
inc
fcmovnu
push
inc
outsl
arpl
insb
lahf
mov
inc
push
gs
fcmovnbe
dec
mov
lods
ja
inc
jbe
add
jg
les
ja
dec
xor
dec
movl
out
rol
repz
add
jg
inc
sbb
pop
lods
xor
movl
test
shlb
sbb
adc
test
mov
sbb
sbb
pop
shrl
inc
dec
inc
pop
bound
outsb
arpl
sbb
sbb
add
insl
or
aaa
inc
jne
push
pop
fldcw
movsl
inc
xchg
fisttpl
cmovo
xlat
test
adc
sub
inc
mov
dec
stos
mov
add
dec
add
inc
mov
push
inc
jo
rol
xchg
jmp
add
dec
inc
dec
add
add
pusha
add
fcomi
out
mov
add
or
mov
decl
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
in
add
or
pop
sbb
adc
adc
adc
aaa
in
jbe
add
data16
or
add
inc
add
add
jo
add
and
add
sahf
add
les
add
adcb
add
add
jge
call
adc
push
adc
pop
and
xor
inc
mov
adc
xor
add
mov
js
nop
add
mov
mov
daa
dec
shrb
xchg
addb
add
xor
rolb
push
inc
add
addl
add
pop
rorl
pusha
adc
pushf
into
add
adc
incl
inc
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
mov
and
roll
test
sub
scas
fiaddl
or
js
push
push
orb
sub
rcr
push
ret
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
pop
hlt
incl
mov
mov
loopne
mov
fsts
dec
add
loope
mov
cmp
ja
out
cmp
xor
and
pushl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
leave
push
add
xchg
sti
pop
inc
std
or
lcall
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
outsb
cli
pushl
lahf
mov
movsl
jecxz
pop
mov
lret
push
stc
or
xchg
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
push
cmpsb
add
mov
popl
movb
xchg
sbb
call
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
sar
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
in
fcomi
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
decl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
testb
push
sahf
pop
clc
sti
jg
jno
lock
jg
sti
fildl
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
test
insb
mov
mov
jg
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
incl
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
in
dec
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
sti
decb
xchg
in
add
inc
adc
loope
fisttpll
inc
aaa
dec
outsl
out
aas
std
cli
push
push
push
idivl
cmp
pushl
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
pop
add
push
scas
cmpsb
orb
mov
sti
notb
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
in
stos
imul
add
lea
jg
gs
lcall
xor
imul
outsl
adc
ret
das
pop
pop
pop
sar
incl
cld
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
ljmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
ljmp
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
lcall
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
push
movsl
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pushl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
call
mov
adc
adc
push
jo
pusha
imul
add
mov
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
sub
out
jae
shrb
shlb
lcall
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
cli
adc
and
lahf
aas
lahf
fnstenv
lret
mov
pop
pop
cld
aas
clc
mov
sub
mov
dec
incb
fisubrl
aas
mov
testb
mov
or
cld
inc
or
pop
jg
add
fildll
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
decl
push
std
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
shl
mov
sbb
mov
lods
loopne
sar
sbbl
rorl
and
cmp
pop
jg
push
push
in
aas
mov
fsubrl
fisubl
cmp
lock
and
add
push
clc
xchg
pushf
mov
das
clc
jmp
repnz
and
mov
adc
inc
aas
push
ret
mov
pop
pop
inc
jb
fistpl
adc
call
mov
pop
nop
mov
inc
sti
arpl
daa
std
loope
jmp
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
insb
icebp
decl
fsubr
fistps
lds
fidivrl
jg
stos
cld
lcall
pop
add
dec
mov
sub
jge
xor
lahf
les
paddsw
jl
xor
inc
and
mov
icebp
call
in
stc
mov
lahf
outsl
int3
push
sbb
in
decl
pop
test
bound
pop
outsl
xchg
incl
cld
cmovbe
popa
push
test
jbe
outsb
hlt
sti
fdivr
ljmp
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
inc
cmp
shl
cld
mov
adc
stos
inc
mov
loopne
shrb
rcl
jg
adc
xor
pop
rcrb
dec
mov
gs
pushf
lea
jp
jnp
jecxz
adc
incl
inc
lds
push
pop
adc
imul
or
inc
pop
xor
rorb
jg
lods
sbb
cmpsl
push
sbb
fbld
stos
pop
mov
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
outsl
lock
push
push
paddsw
pop
stc
out
mov
clc
push
std
mov
cmp
or
out
jne
pop
aam
orb
lds
push
jl
push
mov
fsubrp
dec
sahf
enter
dec
mov
clc
jg
faddl
xchg
lcall
jne
jg
pop
cld
or
dec
ss
lods
movsb
incl
push
decb
pushf
imul
jl
fisttpl
subb
cmpsl
lret
dec
fistps
in
cmp
jmp
mov
std
push
test
pop
lock
jmp
hlt
dec
mov
xlat
inc
loopne
incl
jg
mov
sub
fildll
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
stos
pop
test
incb
lock
pop
pop
div
cld
mull
adc
and
sbb
stc
lahf
loope
jae
jmp
mov
mov
pushl
out
xchg
add
out
icebp
mov
loope
mov
cld
and
sbb
fbstp
pushf
dec
lds
push
inc
sub
loopne
js
cmpsb
cmp
call
xor
decb
shrb
decb
dec
adc
call
sbb
cltd
add
mov
mov
cmp
int
add
push
pop
aaa
std
lock
cltd
nop
fisttps
inc
sbb
mov
mov
aas
icebp
ret
arpl
ror
sbb
aaa
inc
mov
adc
mov
sub
mov
pop
clc
scas
xorb
ja
and
dec
xchg
stos
or
add
xlat
jmp
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
aas
mov
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
jmp
outsl
jmp
test
lcall
std
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
daa
std
mov
mov
enter
sub
addb
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
decl
fildll
fsubrl
dec
add
and
add
stos
rorb
sti
push
sti
pop
inc
dec
push
mov
jbe
int3
or
cmp
aas
pop
int3
pop
iret
and
add
fsubrs
je
inc
lock
enter
mov
lods
and
sbb
jmp
sbb
sbb
in
pusha
dec
bound
stos
subl
dec
rcll
lods
mov
and
ficompl
jo
inc
into
fdivs
mov
jl
mov
dec
cmp
and
in
and
decb
incl
jo
push
pop
inc
mov
adc
mov
dec
xchg
inc
fistpll
push
cmc
test
call
lds
shlb
and
jl
imul
mov
inc
mov
das
mov
lods
dec
jl
imul
xor
cwtl
orb
loop
fs
stc
push
jnp
cld
jle
cmp
clc
das
inc
mov
adc
push
mulb
in
repnz
cmc
incl
rcr
mov
mov
sbb
lock
ljmp
mov
sbb
shlb
push
ljmp
mov
popa
pop
cmp
or
loop
push
inc
ds
decl
xor
dec
cmp
mov
cli
jns
out
and
inc
jno
dec
jecxz
mov
fildll
icebp
fbstp
js
inc
out
pop
mov
xor
loope
fmuls
pop
in
sub
outsl
outsb
idiv
jmp
or
cmp
cmc
lret
cmpsb
mov
vprotq
sbb
mov
xor
call
dec
sub
mov
out
lods
inc
lods
jecxz
cmpsb
dec
rdmsr
andl
sbbb
adc
sahf
ljmp
pop
and
xor
or
sub
sbb
aad
test
clc
pop
loop
jnp
mov
incl
test
inc
dec
push
cmpsb
repz
mov
inc
sahf
rorl
sub
push
xor
dec
aam
sub
sahf
cmpsb
sbb
push
inc
in
jg
dec
and
push
or
faddl
or
xor
sub
mov
insl
test
mov
call
ds
sub
jmp
mov
cmpsb
fs
xor
ret
cli
mov
mov
mov
das
mov
lock
push
pop
jge
sbbl
cmpsb
and
hlt
xchg
jg
mov
add
jp
cmpb
ljmp
sbb
outsl
enter
adc
inc
js
das
mov
push
data16
mov
in
pop
insl
inc
lcall
outsb
or
mov
add
fs
xor
mov
imul
dec
sbbl
repnz
lcall
dec
pop
fsubs
das
loop
inc
adc
ljmp
jbe
or
pushl
js
pop
jbe
jo
lcall
aaa
cmpb
lcall
icebp
jg
lcall
and
nop
sbb
nop
pusha
fidivl
fidivrs
in
call
ss
xor
dec
add
sbb
cld
in
out
movsl
sti
push
adc
insb
out
into
cwtl
dec
mov
inc
fmul
xor
inc
mov
inc
jo
add
adc
xchg
cmpl
cmp
cmpsb
mov
call
cld
add
mov
jbe
test
pop
mov
rcll
lcall
sbb
push
iret
xchg
pop
out
cmpsb
sbb
jecxz
sbb
in
call
pusha
popa
cltd
mov
mov
sbb
xchg
mov
mov
inc
fistpll
sbb
cmp
adc
scas
cmp
nop
pop
fcoms
mov
xchg
cmpsl
or
push
push
enter
mov
fwait
mov
inc
inc
mov
mov
xchg
fldl
mov
mov
repnz
xchg
add
mov
divb
xlat
add
cmc
lods
int3
dec
cmpl
lea
adc
fnstenv
mov
decl
mov
int
sub
mov
xchg
aad
xchg
inc
add
mov
cltd
in
jp
adc
xchg
or
mov
lahf
aad
rorb
sub
and
mov
ljmp
jg
adc
dec
lret
or
jg
push
les
out
pop
jnp
imul
sub
dec
dec
in
inc
push
jg
inc
or
mov
pop
inc
push
popa
pusha
jmp
flds
pop
dec
clc
lcall
shl
fs
repz
fwait
dec
outsl
stc
pop
mov
jg
dec
sbb
addl
mov
xor
mov
push
xchg
or
cmp
std
in
gs
ret
inc
mov
rorl
or
adc
mov
adc
add
xor
push
fistpl
or
add
hlt
mov
test
sbb
cmc
cltd
loopne
out
adc
lcall
fmull
dec
in
pop
cltd
or
inc
rclb
and
sbb
in
mov
xor
jnp
lahf
sub
movsl
cmp
movsb
xor
mov
lods
mov
inc
cmc
jmp
pop
xchg
ds
call
add
ss
es
int3
cmc
xor
cmpsb
mov
call
cs
dec
mov
xor
mov
cld
dec
or
jmp
jo
push
xchg
pop
cmpsb
cli
aaa
fidivs
es
mov
xchg
mov
into
test
or
dec
test
jl
jg
andb
add
sbb
push
imul
stc
repnz
or
or
or
xchg
add
pushl
dec
or
out
shrb
stos
pop
loopne
push
adc
imul
lcall
push
mov
mov
ja
and
mov
aaa
popa
negb
fcomip
cmpsb
dec
pop
sub
shll
inc
cmc
stc
mov
xlat
decl
repz
jns
jb
faddp
cmp
mov
xor
pushl
jmp
and
adc
insl
xchg
ds
jae
icebp
dec
jae
ja
cmp
push
pop
jp
jl
pushl
push
loopne
shrb
clc
inc
scas
mov
mov
clc
inc
push
in
bound
jns
pushl
mov
call
pop
and
dec
in
pop
lcall
lods
mov
repz
jbe
sti
push
js
pop
xor
stos
xor
cli
inc
pop
rclb
pop
pop
add
and
mov
decl
lods
inc
or
mov
mov
cmp
cmp
push
push
sbbb
push
lret
movsb
sar
pushl
mov
repz
clc
xchg
mull
and
fisubrs
mov
inc
ljmp
sahf
ss
sbb
jns
iret
loope
push
push
jbe
mov
repz
sbb
fcoms
das
cli
inc
mov
xor
sub
push
add
inc
push
aaa
repz
inc
mov
mov
je
stos
xor
cli
cmp
ret
push
loop
push
imul
fwait
movsb
ja
xchg
jo
fiadds
dec
push
sbb
addr16
decl
push
lcall
gs
in
out
ljmp
in
mov
pushl
cwtl
dec
insl
adc
mov
jbe
push
mov
addr16
cs
xor
jmp
push
pop
or
lock
and
dec
adc
and
inc
sarb
fdivrs
decl
negl
push
mov
jnp
mov
jl
in
mov
ret
decl
xchg
sbb
dec
xchg
movsl
add
mov
cmpsl
jl
push
mov
sarb
mov
jg
dec
push
stos
jne
cmp
push
pop
into
addr16
les
out
mov
push
icebp
mov
dec
mov
decl
sub
mov
sti
outsb
ret
outsl
ds
insl
xorb
jo
inc
mov
lcall
lods
out
sbbb
loop
and
jbe
ficompl
out
in
ret
clc
cmp
jae
lcall
addr16
lret
and
call
sbb
in
filds
or
and
mov
pop
out
push
out
clc
pushf
inc
adcb
fwait
movsl
loope
xchg
es
pop
into
int
or
ljmp
mov
push
xchg
jmp
xchg
push
sbb
lock
add
jg
mov
pushl
jo
pop
xor
movb
sahf
je
add
or
fistps
jmp
push
inc
lcall
ror
ljmp
sbb
add
out
scas
jge
cmpb
orb
dec
xchg
push
nop
and
ficoms
or
aad
xchg
out
xchg
sbb
decl
loop
insb
xchg
inc
fwait
js
sub
push
sub
loopne
xchg
pop
inc
or
incl
and
mov
mov
inc
setne
mov
sbb
sub
or
mov
xchg
push
clc
pushl
pushf
inc
arpl
mov
flds
stos
out
xor
pop
pop
pop
cli
call
insl
es
lods
das
xchg
js
pop
jmp
push
mov
call
lods
jmp
jb
mov
xchg
cs
pushl
adc
sub
jnp
jg
scas
bound
lods
mov
stos
lahf
cmp
dec
adc
lods
xchg
sti
lods
sbb
loope
imul
es
jns
mov
mov
ljmp
loopne
or
aad
jnp
in
cmp
push
aad
cwtl
mov
in
arpl
call
cli
mov
fdivl
mov
add
cwtl
mov
mov
decl
dec
repnz
sub
imul
adc
or
inc
jo
dec
dec
iret
jl
xchg
push
pushl
cmp
int3
sbb
xor
sbb
fadds
cld
push
lods
push
mov
mov
incl
ss
mov
andb
mov
cmc
mov
or
jge
jo
pop
add
leave
ret
aas
lods
xchg
jno
outsb
into
out
push
ja
adc
ret
ljmp
fcomip
and
cmp
add
push
subl
xchg
cltd
ds
and
mov
mov
daa
cmc
mov
and
inc
movsb
stos
push
xor
movsb
ja,pn
dec
sub
xor
push
es
inc
out
adc
dec
inc
inc
mov
testb
scas
and
test
ficomps
dec
ret
test
ds
and
add
and
push
mov
jmp
inc
pop
pop
push
xchg
decl
jle
xlat
cmpsl
push
jle
daa
lds
jge
mov
nop
movsl
pop
dec
mov
outsl
cli
jmp
mov
mov
jno
or
ja
scas
pop
test
test
jnp
pushl
dec
call
dec
pushf
mov
add
cmp
mov
fcomip
mov
cmpsl
into
neg
lods
jb
fsubl
xchg
xor
sub
popa
pop
repnz
lcall
pop
adc
adc
aad
jb
cmp
push
daa
out
testl
decl
popf
sub
inc
sbb
mov
mov
lret
lahf
push
mov
xor
pushl
adc
out
pop
aad
pusha
fwait
xor
stc
enter
xchg
inc
mov
xchg
jl
stc
aam
or
decl
dec
mov
divb
iret
and
mov
cmp
lods
test
sbb
jmp
addb
inc
jnp
xor
sub
andl
outsl
scas
lret
cmovl
sub
std
fsubp
fcos
call
lret
out
iret
lcall
lahf
imul
mov
jns
in
mov
xor
iret
pop
fnstenv
xchg
outsb
push
mov
dec
push
arpl
pop
ret
call
enter
lds
adc
jbe
insl
int
xchg
js
jl
das
and
iret
loope
push
jmp
repz
pop
into
cs
cmp
mov
and
lods
and
pop
insl
je
or
test
incl
cmp
inc
xchg
ficoms
or
add
arpl
push
rclb
fsubl
dec
adc
sub
cmp
sub
adc
jne
decl
xchg
rep
jecxz
jg
pop
pop
scas
pop
cmc
jns
out
inc
fadds
push
add
je
dec
dec
cmp
jbe
xchg
lret
adc
ja
lcall
and
enter
fdivl
push
arpl
cmp
or
dec
loopne
decl
inc
loope
mov
in
xchg
cmpb
xchg
push
fsub
insb
add
jno
xchg
add
xor
or
xchg
and
fwait
sarl
mov
xchg
mov
cmp
push
outsb
scas
add
push
pop
dec
mov
leave
push
lea
mov
dec
movsb
mov
jmp
cwtl
inc
jns
test
fmul
pop
xor
movsb
dec
rcrl
mov
hlt
scas
or
decl
cmp
or
and
mov
cwtl
dec
jo
out
and
adc
cmpsl
mov
mov
sbb
pop
insb
mov
pusha
xor
lahf
decl
inc
cmp
mov
add
enter
mov
adc
aaa
nop
loope
add
xchg
jbe
repnz
popa
andb
xchg
incl
loop
ss
xchg
bound
sub
xlat
sub
mov
out
sbb
mov
jecxz
sub
cld
xchg
scas
lea
jae
subl
adc
inc
scas
mov
pushl
push
bound
adc
add
imul
sub
decl
and
cmp
loop
fiaddl
mov
pop
adc
hlt
aaa
lret
outsb
sub
cs
jg
add
mov
pop
lret
shrl
push
stos
sub
test
adc
incl
std
xchg
cld
mov
cmp
xor
shr
mov
or
and
sahf
ljmp
push
adc
pop
sub
popa
adc
push
lret
mov
incl
es
mov
inc
jbe
push
inc
fcomip
or
push
jmp
and
movsl
sahf
mov
rol
enter
loop
ja
jmp
js
pop
popa
hlt
testb
lods
cmp
xor
mov
lahf
add
mov
sahf
std
stc
cmpsl
hlt
push
mov
outsb
dec
aaa
gs
insl
or
xlat
je
popa
jecxz
hlt
shll
sbb
je
mov
aas
push
filds
fdecstp
test
sub
imulb
pop
out
add
xchg
or
cmp
or
rcll
jmp
pop
jo
ja
or
or
push
or
scas
mov
ret
mov
jl
clc
lods
add
push
jnp
insl
loop
xor
aad
je
xchg
mov
jnp
xor
push
incl
xchg
xchg
pcmpgtd
sub
fdivs
cmp
xor
pop
shrl
das
mov
push
pusha
pop
jnp
in
mov
sbb
out
sbb
es
call
pop
xor
je
push
mov
sbb
lods
or
decl
daa
push
add
sub
mov
fisubrl
in
mov
ficoml
or
into
pop
ret
decl
cwtl
sti
adc
sarb
or
arpl
mov
mov
mov
decl
push
xor
test
lret
xchg
roll
rolb
outsb
aaa
inc
pusha
lcall
add
push
inc
cwtl
xchg
push
xchg
push
xchg
test
sub
mov
inc
mov
mov
and
dec
or
loopne
jae
ss
push
dec
call
mov
mov
out
jns
scas
add
cs
adc
in
mov
xchg
jmp
out
test
jo
outsb
mov
dec
cld
popa
sti
inc
pop
pop
pop
std
fcomip
imul
inc
xor
cmpb
sti
lret
std
push
dec
and
test
out
repnz
loop
in
mov
push
int3
int
cmp
sbb
int3
stos
sahf
ror
popa
decl
inc
gs
push
arpl
shrl
outsl
das
cwtl
mov
out
lcall
push
adc
cli
jno
sahf
lret
mov
adcl
mov
cli
sub
sbb
add
test
gs
push
lods
mov
cli
decl
js
add
or
in
int
ljmp
jo
push
test
push
stos
js
jne,pn
jmp
dec
enter
adc
add
stos
jo
push
subb
push
jno
sub
mov
out
mov
decl
xchg
jle
js
mov
call
ss
adc
jg
in
adc
mov
ds
nop
push
clc
mov
shlb
lds
idiv
pushl
bound
sarb
sub
arpl
mov
ret
or
call
int
icebp
sbb
or
xor
inc
stc
mov
addb
mov
fldl
dec
add
mov
add
pop
mov
sbb
xchg
and
push
dec
sahf
push
xchg
fidivl
incl
popf
lods
mov
mov
test
iret
les
inc
mov
xor
mov
call
or
push
mov
hlt
mov
inc
and
push
push
and
sbb
sbb
pushl
test
test
icebp
sub
mov
jbe
enter
test
mov
shrl
jne
js
hlt
add
lods
mov
shll
cmpsl
sub
outsl
les
jns
shlb
mov
decb
popa
popa
fistpl
dec
push
dec
data16
sub
sbb
ljmp
shrb
loop
cmp
psrad
sub
push
mov
fcomip
std
mov
mov
adc
cmp
pop
jp
cmp
or
cmpsb
jmp
inc
outsl
mov
insb
test
imul
repz
lock
fsts
fbld
iret
sbb
and
fcompl
in
incl
xchg
lods
adc
and
pusha
int3
and
mov
ljmp
mov
mov
std
jl
mov
inc
xor
lcall
outsl
popf
sub
add
and
add
push
xchg
sub
pop
fidivl
fdivrs
cmp
xorl
jecxz
movsl
adc
xor
out
inc
data16
shrl
ret
cwtl
and
push
cmp
jg
jmp
xor
loopne
inc
or
pop
fmuls
ja
xor
call
add
xchg
stc
fcmovb
add
pop
dec
arpl
dec
dec
andb
mov
pop
sbb
in
sub
dec
out
rorl
je
jb
js
pushl
adc
into
in
inc
aas
jmp
sahf
push
pop
or
inc
movsl
arpl
mov
mov
test
mov
cwtl
shrl
fwait
jg
mov
jge
lcall
sub
pop
stos
insb
fxch
ret
out
xor
divl
mov
jmp
out
pusha
pushf
mov
lea
add
les
cmp
push
jae
hlt
stos
mov
jmp
in
ja
adc
je
rcrb
push
jnp
jecxz
ljmp
daa
sub
movsl
xchg
ljmp
mov
insl
adc
in
xorb
cltd
lods
xorl
ljmp
jmp
jae
scas
add
pop
or
dec
loopne
mov
cli
lods
sbb
adc
decl
pop
or
add
lcall
push
xor
out
cmp
lahf
fidivs
es
pop
iret
sub
sub
rcll
push
nop
inc
mov
jae
cmp
incl
push
ja
mov
add
jae
add
push
dec
test
lea
in
inc
or
xchg
cli
addr16
xchg
ret
in
imul
add
or
bound
decl
cmp
inc
loope
clc
loope
addr16
sub
mov
pop
shll
dec
jmp
push
push
leave
inc
push
leave
lret
or
int
add
mov
and
lcall
mov
push
xor
aam
add
pop
leave
aam
xchg
inc
push
les
cltd
imulb
inc
cmp
incl
mov
imul
jmp
inc
and
aad
pop
add
std
or
cs
xchg
imul
paddsw
shl
mov
and
popa
ds
jb
push
lock
and
pop
lret
push
and
aas
in
dec
lret
jp
rcll
outsb
ljmp
sahf
movsb
jl
addb
cli
and
sti
adc
push
push
lods
pop
fmul
push
xchg
out
cmp
fs
int3
pop
pop
jg
dec
xor
inc
mov
adc
test
stos
jecxz
and
sbb
xchg
jb
call
hlt
into
std
lock
das
ljmp
fidivl
sarb
push
jns
xchg
loope
sahf
arpl
cld
pop
clc
jnp
inc
pusha
pop
sbb
scas
test
ds
inc
sbb
out
jo
sbb
cld
popa
and
xchg
ds
movd
cmp
mov
inc
add
out
shrb
movsb
mov
out
adc
adc
clc
lcall
mov
nop
sahf
xor
adc
dec
sub
cwtl
pop
pusha
push
jbe
or
ljmp
mov
loop
push
jg
loopne
scas
push
adc
add
pop
pop
fwait
incl
popf
add
xchg
pop
out
data16
int3
lret
add
in
push
pop
arpl
sub
adc
dec
sbbl
jmp
sbb
pop
cmp
test
bound
incl
push
xor
mov
push
daa
repnz
retw
int
addr16
jmp
in
mov
ret
iret
insb
into
jnp
and
rolb
xlat
xchg
dec
shlb
rcl
inc
ds
loopne
lcall
movsb
jbe
pop
out
stos
inc
push
fimull
je
push
hlt
popa
pop
or
shlb
mov
adc
imul
addr16
lea
loop
lret
call
ljmp
mov
popa
sub
pop
in
sub
jns
adc
ljmp
jg
popa
scas
call
lret
mulb
xor
sub
psubw
push
mov
into
ja
imull
cwtl
clc
push
sbb
fildl
movb
fldt
cwtl
mov
shl
mulb
ss
iret
adcl
jmp
insl
movsb
add
mov
je
push
pop
xchg
jbe
pop
xchg
xchg
adc
jmp
bound
ss
js
sahf
pop
daa
aam
lock
pushl
int
fs
jl
stos
add
mov
pop
ror
mov
sti
ret
lock
adc
mov
rcr
sbb
cmp
stos
insl
mov
fistps
loope
incl
out
rorb
xchg
lods
mov
lock
mov
pop
pop
das
call
mov
cmp
mov
out
sbb
testb
mov
jmp
fcmovu
mov
sub
flds
pop
hlt
pop
add
lahf
ret
dec
xor
popa
es
test
mov
jg
jne
fiadds
xchg
mov
scas
add
movsl
push
leave
daa
cmc
fsubrs
jnp
call
mov
dec
pop
fsts
and
aam
sahf
mov
rcl
inc
or
inc
pushl
shrb
pop
aam
push
push
rol
dec
jle
jae
mov
call
hlt
cmp
clc
test
push
jg
rclb
sahf
adc
incb
and
push
std
call
inc
addr16
nop
xchg
es
lcall
dec
cwtl
stos
in
pop
dec
ljmp
data16
xchg
das
mov
dec
stos
imul
ret
bound
test
icebp
ljmp
out
pop
loopne
push
movsb
test
push
mov
sub
sub
dec
ja
cli
cli
into
push
xchg
cmp
aam
or
mov
push
aaa
sub
cmp
jns
ret
lahf
repnz
mov
mov
add
push
lock
pushl
pop
jle
push
cmp
mov
out
fmuls
pop
pop
jno
xchg
or
sti
out
imul
add
jg
dec
mov
pusha
pop
push
aam
out
mov
fstps
pop
jb
mov
imul
stos
pop
inc
sub
rcl
lret
iret
movsb
mov
pop
mov
call
push
dec
cmp
lcall
lods
std
xchg
ja
aaa
cmpsl
xchg
mov
jmp
incl
mov
leave
mov
bound
jp
dec
sbb
cmp
fsubrl
mov
jle
addr16
mov
call
sub
sbb
lods
repnz
in
sahf
xor
out
aas
xor
out
movsb
movsb
out
push
in
sbb
xor
push
pop
stos
cmp
incl
lcall
mov
mov
ds
adc
push
or
call
orl
cld
cmp
jl
mov
loopne
shll
sub
daa
xchg
in
pop
jge
jmp
outsl
jle
hlt
outsl
inc
aad
cmp
mov
call
mov
into
lods
sbb
cmc
jg
jnp
mov
cmp
cmpb
movl
xchg
lock
push
jmp
mov
lcall
mov
lret
les
incl
xorl
fmuls
xor
cltd
ja
pop
mov
ljmp
mov
mov
orl
sahf
imul
pop
lods
jmp
sub
outsl
mov
add
out
mov
popa
and
sbb
inc
movsb
fists
incl
mov
add
pop
push
jmp
add
int3
push
pusha
pop
jl
jge
nop
mov
jecxz
sahf
ret
mov
decl
cmpsb
cltd
test
pushf
stos
scas
and
and
jae
xor
jno
aam
adc
cmp
inc
fnstsw
mov
push
nop
pop
lock
push
popf
push
push
out
clc
pop
lcall
mov
or
adc
iret
push
xor
jmp
adc
mov
jmp
push
hlt
mov
clc
and
or
or
incl
fwait
ss
shrl
mov
push
add
or
repz
aad
iret
jecxz
incl
sbb
mov
mov
aad
out
jae
mov
cld
xchg
push
insb
sub
jae
pop
dec
pop
mov
sbb
pop
push
ljmp
mov
sbb
in
in
push
dec
enter
fimuls
inc
and
mov
popf
and
lahf
pop
dec
add
xchg
inc
les
add
ljmp
push
inc
aam
jp
int
shlb
fwait
in
hlt
pop
sub
or
lret
fcomip
mov
scas
sbb
in
cmp
aaa
inc
jle
xor
cmp
push
xlat
cwtl
pop
sub
pop
or
mov
shr
lgs
dec
scas
adc
jge
add
sbb
cmpsb
jg
inc
mov
mov
vmwrite
inc
adc
pushl
push
test
pushf
xor
mov
lcall
jmp
rorl
or
xor
lea
xchg
add
sub
test
and
cs
call
xchg
lret
cmpsl
push
or
negb
repnz
movq
incl
add
test
and
jnp
lock
push
call
jo
sbb
add
jmp
aam
jne
rolb
push
stc
and
jno
xchg
mov
add
fistps
out
mov
aas
stc
enter
mov
bound
rolb
adc
mov
loope
cs
inc
aas
imul
jnp
push
or
jle
in
adc
scas
jl
inc
ljmp
cld
repz
add
out
fs
mov
sub
in
xchg
inc
pop
and
mov
jg
lods
mov
mov
lea
subl
int3
push
or
and
push
fldl
sbb
cmp
rclb
aaa
cld
pushl
call
mov
mov
inc
or
adc
fisubrs
out
jg
jmp
mov
jmp
mov
cmc
and
jl
sub
push
dec
out
mov
aaa
je
pop
xchg
lods
mov
inc
test
std
cmpsb
adc
or
ret
fsubl
inc
cld
int3
ljmp
sbb
jne
int
mov
ret
dec
je
push
cmpsb
dec
lahf
sub
jmp
scas
cmp
mov
adc
push
jnp
ret
cld
and
sti
mov
imul
repz
in
add
push
loop
fs
fistpl
movsl
add
or
decl
jns
xchg
imul
dec
xchg
xchg
pop
mov
data16
test
call
inc
scas
in
mov
pop
enter
add
pop
fdivs
stos
push
jnp
adc
mov
call
push
pop
inc
add
nop
pushf
dec
lock
pop
push
push
sub
lret
int
push
mov
dec
cmpsb
cmc
ret
push
ja
push
ljmp
jmp
mov
cmp
jge
nop
sbb
jo
jge
sub
cmp
xchg
jp
mov
mov
cmpsl
test
mov
sub
push
and
call
pop
daa
adc
int3
imul
jo
xor
sbb
pushl
lea
int
es
add
ljmp
cld
and
lcall
jecxz
test
add
ljmp
adc
shlb
mov
pop
pusha
jg
ja
lcall
cmc
sbb
es
sbb
fdivrs
incl
dec
aad
pop
adc
add
loopne
cld
je
and
ret
sar
mov
mov
or
dec
addr16
mov
sahf
lret
lock
sbb
fidivrl
call
jge
sub
xchg
mov
jne
xchg
and
aaa
std
jge
dec
sub
shll
jo
enter
add
add
xorb
or
mov
lods
sub
add
pop
mov
mov
ja
fstpl
sbb
jmp
lods
jae
dec
sahf
cmp
pushl
cmp
push
mov
shll
lods
pop
and
es
repz
test
decl
mov
add
inc
sub
push
fimuls
push
cmp
je
jecxz
xor
pushl
jge
adc
xchg
jne
push
cld
adc
dec
pop
test
jbe
jp
test
jae
int3
jp
decl
in
fimull
xchg
aaa
out
in
pop
out
fcompl
les
cmc
mov
cwtl
call
pop
gs
fsub
fcmovnbe
shrb
push
xlat
dec
lret
pushf
out
cmp
mov
sbb
aam
sub
ljmp
sbb
xchg
sbb
sbb
add
mov
insb
fdivrp
mov
xor
lcall
ljmp
lcall
or
xor
popa
cwtl
aam
idivl
jmp
xorl
sti
popa
repnz
lcall
and
sub
pop
jne
jle
dec
or
inc
xor
or
addr16
xchg
push
pop
or
daa
ljmp
mov
orb
test
fs
cmp
mov
les
std
adc
icebp
cmpsl
inc
xor
jl
jne
movsl
dec
adc
loop
add
fistps
loopne
movsl
cmp
int3
mov
pop
sbb
mov
mov
imul
jno
roll
cmp
dec
xchg
inc
push
or
adc
or
mov
push
popl
push
repz
jns
jle
inc
mov
and
xchg
lret
call
pop
ljmp
mov
jne
stc
pop
xchg
sub
lcall
stc
or
dec
lcall
out
loop
mov
jl
cmp
out
ja
and
cmp
repnz
ljmp
add
loop
jge
and
int3
push
cmp
scas
jmp
mov
lcall
mov
test
inc
sub
bound
and
arpl
adc
push
add
jae
fistpl
jnp
fsubl
cli
fildll
cltd
cmp
mov
ljmp
jno
subl
adc
sub
nop
sti
add
arpl
icebp
lcall
cmp
sti
addr16
fs
pop
lods
adc
push
mov
ljmp
sub
testb
inc
xchg
xor
insl
mov
sbbl
outsb
sbb
leave
in
push
adc
dec
aas
mov
xchg
and
fcomip
ljmp
xor
or
clc
pop
outsb
fs
adc
call
sbb
cli
test
out
pop
dec
iret
cmpsb
pusha
sub
jge
sar
jns
add
ljmp
fidivs
or
mov
hlt
mov
sub
sar
ljmp
loope
fnsave
push
std
prefetch
movl
xchg
inc
sbb
mov
or
or
sahf
leave
xor
or
dec
ljmp
mov
xor
xor
data16
in
aaa
push
xchg
xor
jmp
cmp
dec
dec
and
inc
xchg
loop
imul
mov
mov
push
fldt
ljmp
repnz
cld
xchg
fsubrp
jmp
adc
fwait
inc
cmp
add
decl
pushl
xchg
punpcklwd
mov
pop
push
sbb
xchg
pushl
inc
movsb
sbb
xchg
cmpsl
movsl
xchg
cli
fidivl
and
pop
dec
dec
inc
cltd
mov
lret
xchg
lret
sub
fisubrs
repz
mov
je
insl
dec
jle
sub
inc
mov
cmp
in
xchg
lcall
jl
mov
je,pt
push
stos
sahf
jp
push
cmpsb
insb
ret
imul
test
pushl
fnsave
mov
push
loop
inc
sub
jae
and
jmp
push
test
jge
adc
fdivs
adc
push
lret
test
xchg
rcrl
aas
sub
mov
or
add
jl
dec
xorl
fcomip
cli
cmp
inc
out
pop
out
sbb
mov
flds
test
clc
call
or
dec
scas
jb
lret
mov
sbb
sbb
incl
xor
push
std
cmp
lock
mov
leave
cwtl
cmp
mov
jmp
test
ret
ret
das
mov
pop
out
or
adc
daa
sahf
and
decl
and
sub
or
inc
insb
mov
jp
arpl
decl
mov
pop
and
das
aad
push
mov
jg
xlat
cmp
xchg
cmp
dec
pop
test
push
xchg
test
pop
loop
fists
jge
mov
decl
fdivrs
out
pop
jo
arpl
inc
test
push
cmp
lods
sbb
mov
add
mov
in
daa
jle
imul
add
popa
jecxz
push
inc
xchg
xchg
ret
or
aas
lcall
cmp
sbb
fucomp
or
cmp
clc
mov
shrl
not
bound
dec
outsb
mov
call
gs
and
cli
jg
push
fucomi
js
aam
out
int3
dec
loope
repz
jns
mov
gs
iret
adc
sar
jmp
mov
inc
popf
movsb
mov
loop
or
adc
pop
test
stc
incl
shlb
ret
mov
jl
jae
bound
mov
xchg
lock
lret
and
icebp
xchg
add
mov
sti
test
cmp
mov
mov
es
push
es
xchg
mov
pop
cltd
aas
xor
jmp
in
stos
mov
push
sub
push
or
dec
das
pop
sub
imul
decl
cmp
pusha
xor
test
cmp
push
arpl
jne
sbb
icebp
inc
push
mov
cld
movsl
dec
lret
or
pop
mov
inc
push
pavgb
xlat
ljmp
imul
jle
dec
popf
or
dec
dec
cmp
mov
out
jb
push
xchg
or
mov
addl
fisubrs
adc
les
jo
mov
lret
popf
mov
push
roll
jp
icebp
mov
cld
incl
jg
call
fcompp
pusha
inc
aas
loopne
xor
test
xchg
dec
mov
movsl
push
sbb
icebp
jp
sbb
ljmp
or
mov
shrl
daa
add
push
jle
roll
clc
cmpsl
pop
into
lahf
fwait
decl
xchg
pop
push
jno
roll
les
dec
and
stc
mov
inc
arpl
pop
out
inc
test
lcall
outsl
jbe
cltd
rclb
adc
out
test
lahf
fs
jmp
inc
dec
das
in
pop
iret
inc
jmp
mov
int3
sub
bound
into
aas
sahf
mov
incl
clc
mov
xchg
sub
les
movsb
stc
test
movsb
jecxz
xchg
xchg
incb
repnz
dec
xor
lods
dec
jns
scas
cmp
lcall
es
fcomp
negl
sahf
add
push
dec
dec
or
cld
push
add
hlt
push
int3
and
ljmp
mov
mov
jecxz
sar
add
xchg
call
mov
jl
jg
mov
cmc
push
imul
inc
and
mov
inc
mov
cmpsb
out
mov
xchg
int
cwtl
sub
ljmp
imul
insb
ja
add
enter
pop
mov
lods
jnp
mov
pop
andl
int
movb
jg
jg
jmp
pusha
xchg
inc
sub
cmp
lds
mov
pop
mov
xchg
adc
xor
or
std
loopne
adc
stos
inc
push
fnsave
test
in
int
lds
or
lcall
ds
push
aam
call
cmp
mov
inc
scas
mov
mov
xor
pop
fs
dec
jmp
out
inc
and
pushl
xchg
fldenv
sub
mov
aaa
test
in
int
adcl
addb
xor
xlat
cmc
inc
push
cmp
push
dec
sbb
sub
inc
imul
dec
or
inc
sbb
stc
cs
iret
xlat
cli
popa
push
incl
mov
adc
push
out
inc
or
movsl
stc
insb
test
jo
aam
mov
inc
add
add
and
xor
or
bswap
jecxz
bound
lret
dec
call
dec
rol
push
stos
mov
push
mov
lods
sbb
xor
call
decl
adc
xchg
adc
sti
push
mov
jg
dec
cltd
push
lret
adc
adc
cmpsb
psubd
push
dec
adc
lock
decl
pushl
add
imul
xchg
pop
imul
mov
mov
incl
add
repnz
or
aas
test
rorl
sahf
xor
ljmp
sbb
repz
pop
repnz
mov
mov
push
loop
movsb
or
sar
mov
xor
dec
jle
shl
cld
adc
or
incl
and
ljmp
andb
mov
ljmp
decl
sarl
int
pop
xchg
addr16
mov
jg
cmpsb
cmp
xor
loopne
call
outsb
adc
andl
out
pop
mov
adc
or
or
decl
ret
cltd
xchg
inc
mov
jle
cmp
fimull
sbb
mov
sub
mov
inc
fcmovnbe
or
jmp
xchg
les
jmp
xchg
std
jne
jnp
pop
inc
dec
xor
xchg
sub
ret
mov
loop
xor
cs
inc
fnstsw
lds
mov
ret
sbb
cli
inc
xchg
mov
call
adcb
out
adc
pushf
pop
sub
lods
mov
dec
cmp
addr16
inc
or
mov
call
jae
movsl
inc
arpl
fstpl
cmp
mov
add
cmc
xchg
pusha
and
scas
jp
mov
push
lcall
mov
xor
subb
adc
fadds
mov
push
sbbb
int
notl
inc
xor
cmc
adc
stos
jg
sar
aaa
sub
lea
aad
mov
or
fwait
pushl
sbb
bound
int3
xor
jns
lods
xor
nop
dec
jp
shrl
mov
test
lret
inc
push
hlt
sbb
dec
add
fdivs
fs
aas
sti
or
mov
push
mov
push
sahf
and
lcall
mov
cmp
js
mov
xchg
sub
inc
neg
outsl
sahf
js
cmpl
inc
in
and
sub
sbb
cld
inc
jecxz
bound
push
ljmp
lret
mov
xchg
cli
add
mov
fs
or
pop
test
es
notl
add
jmp
push
push
mov
leave
xchg
in
je
bound
cmpb
nop
xchg
cld
sub
xchg
ljmp
imul
test
loop
and
mov
shrb
bound
and
insl
loopne
iret
testb
aam
into
inc
mov
ljmp
mov
in
shrl
add
lcall
xor
idiv
push
or
adc
sarl
inc
iret
popa
push
mov
jle
or
jmp
stc
lret
inc
mov
mov
lahf
adc
ret
jmp
daa
mov
fcomip
jmp
aad
mov
mov
and
mov
scas
sbb
lret
out
inc
and
pushf
in
lcall
icebp
es
mov
cmp
pop
cld
hlt
jmp
cmp
xchg
ja
sti
in
adc
dec
sbb
dec
lret
gs
call
mov
ljmp
fld
inc
lcall
mov
inc
shll
dec
xchg
xchg
cmp
jp
push
adc
cmp
pusha
std
push
inc
mov
push
adc
adcl
aad
jg
jle
jge
push
push
inc
cmp
xchg
insb
xlat
add
push
push
daa
mov
mov
jg
add
mov
or
or
ss
imul
add
repz
clc
fstps
sbb
nop
fbstp
jno
mov
mov
pop
pop
mov
popf
stos
std
xchg
lods
or
notb
mov
cmp
push
inc
inc
cmp
inc
test
test
sub
jns
mov
jmp
cmp
xchg
or
pushf
fs
cltd
adc
aad
std
test
test
sar
cmp
aam
into
add
jp
shlb
sub
stos
fsubl
cmc
aas
pop
fwait
add
dec
cmpsl
adc
inc
adc
pop
pop
add
mov
pop
and
pop
cmc
jmp
push
dec
cmp
ficoml
sub
movsb
insl
jp
pop
jmp
mov
scas
mov
out
xchg
mov
push
pop
icebp
or
pusha
or
lret
or
xchg
jmp
mov
decl
xor
fnsave
cmp
fisubl
insb
sarb
and
ret
inc
xor
cmpsb
fwait
xchg
mov
xor
mov
dec
fwait
lcall
mov
and
push
jnp
and
imul
jno
ljmp
bound
sbb
cltd
pop
push
mov
sub
shrl
pop
shll
xchg
clc
add
nop
icebp
mov
and
aaa
and
sbb
mov
outsl
lcall
xchg
pop
stos
ja
mov
push
dec
lret
test
pushl
mov
adc
sti
sbb
scas
inc
insb
fimull
std
mov
sbb
xchg
dec
inc
insb
rcrl
jae
push
xchg
mov
lea
mov
push
adc
or
mov
or
adc
fcmovnbe
int
ds
inc
arpl
nop
in
pop
mov
jp
outsb
int
sub
mov
adc
jnp
push
push
ljmp
add
sti
fcmovb
sysret
popa
mov
lds
mov
les
sbb
jnp
add
jo
mov
pop
adc
das
inc
call
movsl
pop
cmp
dec
pushf
mov
jae
dec
and
jmp
cmp
imul
loope
addr16
movl
push
pop
subb
pusha
adc
jle
pop
ficomps
fwait
dec
xchg
xchg
xchg
cmp
xor
push
out
mov
jg
testb
add
jnp
out
xchg
test
xor
inc
mul
mov
mov
lea
ljmp
cwtl
and
pop
nop
sbb
inc
mov
add
jmp
cmp
dec
sbb
test
jbe
lret
cld
xorl
fisubl
add
or
pop
leave
incb
inc
xlat
mov
jmp
cltd
and
jmp
pusha
fldenv
enter
sti
xor
lret
xchg
nop
push
or
lahf
mov
decl
ds
xchg
iret
pop
jg
jp
mov
dec
fstpl
pop
in
adc
push
lcall
mov
shlb
dec
out
hlt
loope
hlt
xlat
jns
adc
das
stos
push
adc
repz
jmp
or
loop
jge
xchg
sti
and
pushl
mov
ljmp
xchg
xchg
add
dec
ja
xchg
cmp
mov
cli
mov
mov
cmc
or
jb
incl
ret
iret
and
dec
insb
or
adc
xchg
mov
and
or
lcall
cs
cwtl
int3
imul
dec
bnd
sub
jle
pushf
dec
mov
jle
inc
pop
icebp
call
cmp
lods
rclb
addb
loope
inc
daa
adc
ret
xchg
cmp
push
sub
jecxz
movsb
test
cmpsb
ljmp
insb
mov
les
lods
mov
sar
addr16
ds
sbb
xor
mov
jg
sbb
outsb
rcrl
test
inc
jbe
xchg
fiadds
std
pushl
arpl
fnstenv
jae
ret
in
leave
cmp
lock
jp
pop
jmp
jmp
pushl
in
sub
call
fimull
xor
gs
aad
sahf
push
pop
jmp
test
call
idivb
pop
jecxz
into
add
xchg
mov
jp
jae
mov
popf
mov
ljmp
jge
mov
or
loopne
jge
jno
and
jbe
add
mov
fmuls
xchg
in
xchg
cs
pop
stos
xchg
in
test
stc
inc
call
adc
pop
xlat
lret
mov
xchg
or
sbb
incl
ficoml
sarb
mov
mov
ja
aaa
adc
sbb
push
jg
in
xchg
daa
pop
jmp
cmpsb
jecxz
push
mov
in
jnp
xchg
loop
test
subb
xchg
xor
ds
lcall
shl
pop
or
xlat
push
xchg
xchg
inc
mov
pop
lret
pusha
pop
scas
adc
add
fistpl
decl
fsubrs
call
insb
stos
ffreep
adc
mov
outsl
mov
ljmp
dec
push
jns
pusha
aad
mov
push
push
es
pop
cmpsb
xor
out
mov
int
jmp
pop
sub
ficompl
test
mov
jge
dec
sarb
jno
mov
sub
decl
repz
jecxz
mov
mov
mov
inc
call
xchg
jmp
jmp
inc
inc
sbb
adc
in
xchg
adc
inc
xchg
ljmp
out
imul
sub
adc
mov
lods
leave
dec
stos
in
out
inc
cmc
pop
cltd
popa
mov
xor
scas
hlt
jg
or
jecxz
mov
push
xchg
lcall
push
mov
jle
cmp
fwait
dec
in
mov
daa
fstps
pop
imul
adc
cmp
sbb
xchg
push
jo
jmp
aas
mov
add
cli
mov
jnp
push
arpl
jmp
nop
mov
xchg
sub
fbld
jae
insb
pop
test
jl
fcompl
jge
scas
jmp
jge
stc
or
js
in
and
fidivl
nop
enter
fistpl
xchg
mov
mov
scas
adc
push
jg
sub
out
jne
repz
or
mov
nop
fisubrl
add
decl
xchg
add
stos
mov
fdivrl
xchg
sub
mov
adc
mov
mov
incl
mov
adc
mov
or
xchg
cmpl
out
jae
add
jp
iret
push
adc
xchg
insl
mov
fimuls
fisttps
std
mov
push
xchg
enter
scas
ja,pt
cmc
insb
mov
mov
add
cmpsl
or
or
or
cmp
fdivr
xchg
lods
insl
fadd
das
sahf
movsl
and
ljmp
repnz
sbb
les
std
lahf
adc
and
sub
cmp
fs
jmp
mov
and
adc
dec
inc
scas
mov
test
mov
add
push
test
dec
stos
push
call
insl
pop
aam
pop
aam
jp
add
jmp
and
xor
push
mov
push
push
fs
and
and
insl
dec
mov
data16
aam
movsl
xchg
outsb
or
cmp
mov
pop
or
fwait
jo
lea
xchg
pop
add
mov
enter
fdivp
jae
dec
mov
imul
call
hlt
jns
xlat
shrl
mov
adc
aas
mov
out
repnz
mov
sbb
incl
leave
fmul
mov
mov
sbb
push
sbb
data16
add
xor
jns
test
call
dec
test
je
pusha
push
imull
ss
push
xorl
imul
jg
pop
add
push
inc
jmp
dec
or
aam
jno
data16
jae
sbb
out
clc
loope
inc
cli
adc
inc
add
imul
adc
cmp
push
xchg
outsl
inc
lcall
mov
adc
enter
js
ja
int
cwtl
scas
mov
mov
fstps
out
push
dec
les
cmp
dec
bound
daa
loope
lahf
xchg
shlb
xchg
pop
outsb
and
xchg
pushf
call
sub
push
pop
mov
punpckldq
mov
jl
test
sub
cmp
call
fdivr
rcl
aam
in
int
jle
xchg
xor
mov
nop
jbe
pushf
clc
ljmp
in
sti
jnp
jae
add
movsl
out
repz
or
idivl
ja
aaa
inc
jmp
ret
test
and
add
pop
pushf
inc
add
repnz
lock
and
dec
cwtl
in
repz
fists
inc
or
inc
jl
push
adc
xchg
popa
xor
adc
mov
lahf
sar
call
sbb
cmp
test
adc
movsb
out
adc
cmp
lods
test
jmp
loope
xchg
insb
daa
mov
add
out
push
and
lea
jp
dec
push
lock
push
mov
inc
es
nop
pop
mov
ds
out
aaa
lcall
lods
inc
sub
or
adc
es
sbb
jnp
jmp
insb
jne
repnz
xor
dec
xor
decl
sbb
jp
fdivr
addr16
pop
outsl
cmpsb
aad
push
cmp
push
jl
jmp
scas
push
mov
nop
mov
xlat
andb
cli
jp
ficompl
das
xchg
fsubs
fbstp
fstl
loope
repnz
in
add
push
xor
cs
ljmp
leave
dec
cltd
cli
out
hlt
mov
inc
les
aam
cmc
inc
mov
xchg
cmp
fwait
pushl
mov
fcomps
mov
pop
mov
shrl
jmp
incl
cmpsl
nop
pop
loop
jecxz
scas
std
fstps
int
repz
mov
mov
in
xchg
faddl
in
or
pop
in
sbb
pop
call
test
stc
das
sti
sub
movsl
mov
sub
lcall
popf
and
ds
or
push
cli
pop
dec
incb
adc
push
mov
push
je
sbb
std
insb
or
adc
xor
ljmp
jg
ljmp
jp
les
or
push
inc
arpl
push
pop
out
scas
fs
sbbl
cmpsb
jmp
out
jns
xchg
arpl
sbb
arpl
cmp
inc
xchg
cmp
lcall
test
push
scas
arpl
push
push
and
sahf
fisttpl
xchg
popa
adcb
les
adc
popf
or
mov
lods
add
cs
dec
std
mov
stos
mov
pop
fwait
pop
cmp
decl
shlb
add
int3
enter
jbe
out
fcom
rcll
pushf
les
xchg
mov
fwait
or
xchg
sub
int3
aam
add
mov
sub
into
dec
inc
mov
jg
int3
aad
lret
dec
arpl
adc
mov
jns
in
mov
mov
jg
push
rorb
sbb
iret
xchg
push
sbbl
filds
outsb
cmp
int
push
pushl
jns
jo
xchg
dec
dec
cmp
push
shll
lahf
add
sub
mov
js
call
or
daa
xor
addr16
test
xchg
in
xchg
xchg
and
push
xorl
pop
rcl
decl
mov
push
pop
or
xchg
mov
ja
dec
mov
xor
add
in
dec
mov
dec
fisubs
dec
mov
aad
push
jb
mov
in
ret
pop
loopne
mov
hlt
push
dec
xchg
js
push
lods
clc
or
and
mov
dec
lods
xchg
aaa
cld
lcall
add
movsl
inc
xchg
fbstp
lods
loop
ja
adc
inc
fs
sar
lcall
lods
cli
enter
roll
mov
test
lcall
xor
jg
fcomip
inc
pop
lret
hlt
cli
mov
adc
mov
push
scas
lcall
push
ja
lar
test
push
and
bound
loopne
mov
cmp
aam
lcall
fistps
xchg
nop
mov
jecxz
sti
jb
push
loopne
lret
aaa
xor
inc
test
adc
fiaddl
ficomps
insl
mov
dec
jns
es
cli
dec
andb
call
aas
in
mov
xor
cli
xchg
out
inc
adc
insl
mov
data16
lcall
jecxz
mov
shrl
and
fcmovnu
arpl
sbb
dec
aaa
loopne
mov
loopne
ljmp
sti
push
push
das
dec
jp
jo
jbe
mov
stos
out
xchg
sub
scas
push
dec
inc
das
dec
cmpsb
and
aam
sub
ljmp
push
adc
xor
outsl
out
ja
les
jle
push
adc
call
call
mov
push
iret
mov
jg
cmp
xchg
sar
push
jg
popa
dec
xor
push
dec
sub
dec
dec
xor
lock
mov
inc
call
lds
adcb
andl
lcall
push
aad
cli
in
aad
nop
dec
mov
or
xlat
lds
push
clc
hlt
cmp
pushf
push
dec
sysenter
mov
and
scas
movsb
mov
xor
mov
push
jmp
lret
sbb
push
incl
sub
jae
repz
push
sti
mov
sub
gs
mov
or
iret
repnz
jns
mov
shlb
in
or
fnstcw
lahf
cwtl
data16
xor
ljmp
testl
xor
lret
cmp
ficomps
data16
stos
inc
sub
aas
or
ljmp
imul
repnz
sub
push
mov
cwtl
sbb
loope
enter
call
cmpsl
int3
hlt
mov
mov
pop
cmp
ds
sahf
andl
stos
stos
je
ds
lcall
push
fisubrl
daa
mov
test
outsb
icebp
jnp
pop
cmp
adc
decl
mov
cmpl
push
inc
pop
out
mov
sub
stc
sub
xchg
ljmp
enter
jne
pop
cmp
ss
shr
sbb
pushl
in
jo
sbb
dec
rcrl
inc
stos
push
sbb
cmp
nop
adc
add
lock
pop
sub
loopne
xchg
inc
push
xchg
mov
ficoml
mov
ljmp
jl
test
push
cli
sbb
xchg
out
inc
rol
orl
popf
movsl
hlt
or
outsb
decl
cmp
ret
fdivrp
mov
add
ret
arpl
dec
push
mulb
xlat
push
gs
clc
lcall
inc
gs
and
imul
mov
mov
mov
sub
sub
cmp
imul
xor
pushf
mov
cmc
stos
lea
pop
lret
movsl
sbb
pop
decb
lcall
das
loop
jp
fdivs
sarb
stos
mul
aas
jno
out
iret
cmpsl
stos
jne
sar
dec
decl
ret
xchg
mov
pop
outsl
in
mov
aaa
add
jmp
cmp
xchg
add
lret
scas
in
mov
dec
inc
mov
dec
or
and
adc
lahf
das
test
mov
inc
icebp
mov
lea
ja
push
push
sbb
mov
jmp
jb
fadd
push
repz
rclb
mov
lcall
movsl
adc
xor
loop
sub
mov
or
lret
ljmp
inc
push
inc
adc
fwait
sub
arpl
mov
cli
test
icebp
icebp
scas
lahf
inc
testl
repnz
sub
test
into
mov
stos
out
mov
add
jge
or
xlat
incl
jmp
pop
shrd
or
jge
sub
inc
rcrb
adcb
js
cmp
push
insl
adc
push
xlat
sbb
stc
dec
mov
iret
nop
adc
jecxz
out
pop
jle
xchg
jnp
mov
or
ss
je
add
setae
pop
mov
or
xchg
jbe
std
jmp
push
pop
push
std
push
filds
xor
sbb
imul
aas
insb
sub
inc
push
mov
push
shrl
clc
jle
in
shl
sbb
les
dec
push
push
sbb
je
movsb
adc
ljmp
sbb
adc
add
inc
cwtl
mov
aad
aaa
rcr
xchg
lds
out
repnz
scas
jmp
add
movsl
stc
repz
push
aaa
cmp
mov
mov
xor
int
and
stos
ljmp
pop
fbstp
add
add
xlat
popf
mov
call
jmp
xchg
jne
mov
cs
and
cs
daa
mov
cmc
dec
iret
mov
pop
dec
scas
xor
jbe
sbb
jnp
dec
pop
dec
jne
insl
gs
push
sbb
cltd
popf
ret
xchg
adc
push
cli
insl
or
sub
cmp
sub
sbb
sbbl
ljmp
std
and
adc
cmp
incl
jp
dec
imul
dec
shr
stos
dec
movsb
xchg
adc
push
arpl
inc
loope
xchg
xchg
adc
add
test
adc
rcll
jo
mov
jecxz
sub
jae
jmp
lcall
cwtl
adc
or
loope
test
ja
xchg
mov
mov
mov
call
xchg
shrl
jg
iret
push
out
sub
scas
mov
repz
jmp
pop
ss
arpl
mov
stc
xchg
jp
and
test
dec
sub
push
fsubrl
lock
dec
jmp
xchg
adc
dec
ds
push
aaa
imul
iret
gs
es
mov
dec
cld
push
push
int
sbb
lods
mov
hlt
movsb
pop
fidivl
jns
hlt
repz
xchg
sarb
popf
or
repz
cmpsl
jp
mov
call
clc
cwtl
or
pop
insb
xchg
inc
outsl
test
in
into
cs
dec
xchg
or
jmp
sub
push
loopne
test
ret
xchg
jg
scas
int
out
adc
lods
adc
stos
out
aas
cli
nop
inc
xchg
int
fwait
sbb
xchg
cld
add
es
jg
jo
inc
inc
mov
fisttps
mov
inc
jle
in
ljmp
in
xchg
push
nop
je
cmp
pop
scas
push
xor
mov
daa
out
pop
inc
mov
movsl
xchg
push
lcall
inc
xor
jnp
cmp
add
das
shrb
ja
push
cwtl
enter
jle
cli
adc
rcl
sti
cmpsb
movsl
or
ss
or
or
xlat
cwtl
xor
ret
decl
mov
jne
stos
in
pushf
mov
inc
fbstp
mov
push
shlb
lret
out
icebp
punpcklbw
es
adc
cli
sub
jg
mov
push
cmp
pop
adcl
push
push
jge
jmp
jmp
ljmp
inc
sbb
xor
and
ficompl
push
xchg
imul
or
pop
and
rcl
leave
xor
ljmp
dec
sbb
xchg
push
mov
cmpsb
or
xor
cmp
jmp
cmp
adc
ret
jge
dec
popa
mov
pop
sbb
inc
mov
inc
xchg
inc
pusha
add
lcall
pop
push
shll
mov
dec
aam
xor
cmpl
mov
lods
ljmp
out
inc
repz
adc
ret
mov
mov
mov
lods
andb
xchg
test
sbb
loope
out
insl
call
clc
fdivp
and
data16
test
push
mov
call
jbe
and
jle
add
and
jmp
inc
push
pop
les
push
sub
mov
or
out
jmp
pop
mov
inc
lea
dec
mov
test
dec
pop
pop
mov
in
cmp
imul
pushl
sarl
sbb
jnp
stc
mov
pop
mov
rorl
movsl
and
inc
mov
xchg
jns
incl
addr16
mov
add
fiadds
insb
mov
hlt
cmp
dec
loop
test
decb
ljmp
shr
fildl
jns,pn
xor
or
int
or
mov
add
gs
testb
insb
lods
or
and
sbb
inc
test
dec
inc
inc
mov
dec
adc
stc
xchg
mov
jmp
aam
adc
mov
pop
pop
out
or
arpl
mov
lock
jmp
aam
jle
insl
push
jbe
jp
xor
push
scas
clc
lea
clc
popa
push
fwait
rcll
stos
les
out
or
lcall
hlt
int
imul
std
xor
xchg
out
cmp
sbb
imul
or
xor
data16
lcall
out
push
sbb
xchg
leave
cltd
cmp
sahf
outsl
pushf
or
data16
lcall
cld
outsb
jno
dec
lods
mov
mov
cmp
mul
xchg
sub
jmp
push
fwait
outsb
pop
push
push
dec
or
popf
inc
bound
pop
rclb
lds
pop
cld
pushl
iret
sub
mov
in
jnp
aam
xchg
outsl
sbb
addb
push
incl
insl
xchg
jo
adc
arpl
nop
stc
dec
mov
lcall
mov
pusha
dec
pop
neg
pop
push
subb
dec
clc
xchg
add
call
and
ss
jae
outsb
pop
push
orl
jg
outsb
aas
ljmp
mov
jns
and
sbb
xchg
jg
dec
adc
pushf
jecxz
push
loop
jno
mov
incl
mov
mov
pushf
dec
xchg
mov
aam
or
mov
sar
incl
pandn
xor
mov
ljmp
cmc
xor
mov
mov
pop
adc
das
add
adc
push
scas
or
xchg
mov
mov
scas
cwtl
mov
mov
jg
popa
push
sbb
sub
jbe
push
call
cmp
jnp
cmp
das
imul
fimuls
lods
cmpsl
mov
sbb
fcomip
ljmp
and
cltd
subb
jmp
lds
xchg
movsl
and
lcall
xchg
mov
aaa
fsub
std
insb
add
dec
pop
pop
jne
xor
pushl
adc
popf
ss
inc
push
int
xchg
popa
cli
push
fdivr
pushl
iret
sbb
imul
mov
and
shlb
sahf
add
mov
mov
cmp
mov
ljmp
mov
jbe
sbb
mov
sbb
decl
and
push
dec
in
out
test
loop
sub
or
je
xchg
adcb
std
pop
jg
sub
dec
rcrb
cmp
mov
fsts
cmp
leave
add
xor
sar
pushl
out
inc
push
jge
bound
push
mov
xchg
into
das
jmp
or
ss
push
jbe
test
repnz
sub
das
sub
add
out
cmp
push
loop
incl
and
hlt
loop
mov
in
and
iret
jmp
pop
in
xor
arpl
adc
ret
scas
insb
rcrb
decl
pop
jno
addl
in
xor
outsb
out
fiaddl
push
aas
inc
dec
frstor
mov
mov
movsl
fnsave
jp
outsb
sbb
xchg
imulb
inc
mov
lds
add
pop
aad
sbb
and
dec
lret
stc
cmp
lcall
jmp
fbstp
ds
dec
int3
enter
lock
or
or
mov
divb
cmp
hlt
iret
pop
sbb
pushl
bound
fdivr
pop
xor
or
cmp
and
cld
mov
in
xor
mov
xor
cmp
add
dec
cmp
cld
outsb
adc
jns
lcall
ret
lcall
mov
inc
add
push
arpl
fnstenv
inc
cwtl
ljmp
pushl
cmp
js
add
jp
dec
ret
pushf
aas
ds
fstl
rorl
stc
push
lcall
aad
mov
dec
xor
shll
adc
or
dec
sahf
cmp
dec
cmpsl
mov
jmp
cmp
pushf
das
and
pop
mov
dec
repnz
push
nop
sub
dec
mov
push
add
and
lcall
test
mov
into
push
cmc
mov
pushl
lcall
fcmove
mov
or
push
push
push
mov
outsl
out
inc
cwtl
idiv
ljmp
ljmp
aad
xor
cs
pop
into
jno
mov
cmp
pop
dec
jecxz
decl
jb
or
arpl
aad
or
popa
xchg
lahf
mov
or
stc
jg
fwait
jl
incb
scas
xchg
mov
out
test
lret
sub
or
fstl
hlt
push
adc
test
das
lcall
call
js
cwtl
aaa
xchg
sub
test
adc
lret
inc
sub
adc
ljmp
mov
sub
movsb
pop
mov
mov
lcall
mov
jnp
decl
call
cmp
add
jnp
mov
dec
stos
or
sub
mov
lcall
out
xchg
dec
mov
sub
sub
jp
dec
shlb
lea
lods
lock
jmp
jnp
jp
call
arpl
out
out
adc
jb
add
ret
pop
adc
pop
lret
pop
jae
incl
cld
lcall
sti
adc
dec
in
add
nop
sbb
std
call
add
repnz
mov
inc
movsl
mov
mov
push
aad
cwtl
pop
xchg
sbb
xchg
lods
jg
cmc
dec
jg
push
cmpsb
xchg
jmp
mov
ljmp
jae
je
and
rorl
fcoml
aas
xor
iret
inc
mov
jecxz
ljmp
mov
mov
mov
jbe
inc
scas
mov
add
push
jns
inc
push
orl
gs
xor
js
sbb
jmp
adc
jo
daa
sub
inc
fstl
adc
and
les
in
push
popf
add
scas
aad
mov
jecxz
pop
mov
ret
xchg
stc
mov
xchg
cmp
rol
xor
sti
push
adc
sub
decl
mov
scas
movsb
dec
inc
rorb
les
jg
scas
jl
or
jmp
shrb
enter
dec
flds
xor
mov
adc
stos
or
and
mov
in
push
or
push
mov
fsubrs
jbe
sahf
inc
jmp
mov
fstpl
outsl
jbe
dec
inc
cld
in
cmpsl
and
or
nop
mov
sub
dec
call
dec
sub
mov
or
mov
ljmp
sar
bnd
mov
jp
xchg
es
repnz
iret
mov
bound
in
pop
outsl
cli
call
je
sbb
std
inc
sub
aas
jl
lret
int3
cmc
jmp
and
repnz
and
sbb
fmull
jns
lcall
jnp
lcall
inc
repnz
mov
lcall
ret
ss
jge
xor
popl
call
mov
push
push
sbb
add
sti
fnstenv
aad
jae
mov
sub
mov
pushl
jmp
or
push
dec
std
mov
lcall
push
cld
lcall
call
push
jno
mov
mov
xchg
xchg
inc
push
add
lock
out
inc
push
pop
repnz
call
data16
add
xor
ja
pop
cltd
xor
cmp
shrb
out
je
cmpb
call
adc
pop
and
stos
shlb
stc
jmp
scas
fs
fcoml
cltd
popa
mov
clc
xchg
add
dec
ds
clc
sub
xchg
addb
sti
jmp
inc
movsb
aaa
das
in
fld
shl
jbe
adc
xchg
ss
lahf
inc
dec
mov
pop
aaa
pop
cmp
mov
sub
enter
xchg
enter
insb
gs
push
inc
lcall
mov
push
std
jae
mov
add
stos
adc
sub
add
jle
mov
idiv
mov
lret
sbb
stos
push
xchg
test
or
or
xor
repnz
ja
mov
adc
call
icebp
fisubl
mov
pop
mov
cltd
mov
sub
push
adc
stc
pop
loope
jmp
xchg
push
xchg
xor
call
pop
inc
jb
jae
adc
je
movl
and
loop
mov
push
stos
cld
pop
dec
sahf
or
test
xor
push
add
lds
repnz
push
stc
mov
stos
jp
mov
or
out
push
xchg
mov
in
imul
repz
cmc
je
fcomip
jmp
pop
mov
pop
popa
add
cmp
fsubrl
dec
and
sbb
xlat
mov
sbb
inc
ds
leave
push
movsb
fcompl
fldz
inc
or
std
mov
shlb
lock
call
sahf
cwtl
mov
dec
mov
adc
mov
sbb
imul
stos
les
pop
cwtl
and
or
orb
pushl
aad
xor
xor
andl
sbb
and
mov
pop
add
pop
mov
call
cmp
mov
jp
mov
shll
jg
call
sub
dec
xor
cmpsl
mov
xchg
xchg
imul
or
clc
lcall
xor
repz
mov
inc
mov
jno
popf
fwait
aas
lods
decl
mov
pop
xchg
lcall
lds
xor
pop
push
das
movsb
lods
aad
scas
clc
call
inc
cmpl
dec
and
xchg
mov
dec
inc
cmp
out
call
imul
mov
mov
sub
dec
lcall
ficomps
into
push
in
mov
popf
mov
fsubp
mov
jg
or
ljmp
sbb
or
or
pop
sbb
int
not
popf
shrl
sbb
hlt
xchg
decl
mov
sub
mov
add
xor
sub
sbb
ljmp
cmp
andb
jo
mov
dec
push
xchg
sub
sub
les
lcall
mov
fcoml
scas
and
jecxz
xchg
cld
and
pop
push
mov
data16
push
cld
mov
or
in
mov
and
sar
call
cld
ljmp
or
je
cwtl
rcrb
rclb
jnp
xchg
bound
scas
fistpll
es
jge
inc
xor
pop
outsl
cmpsl
add
lret
or
mov
jne
insb
xchg
bound
lcall
xchg
cltd
mov
xor
jg
ds
ucomiss
lahf
add
mov
sub
shrb
rcrb
decl
mov
in
mov
jmp
mov
loop
lods
data16
and
jmp
adc
aam
out
and
cld
jno
fiaddl
dec
inc
stc
and
aam
inc
push
jmp
sbb
adcl
adc
aad
inc
ds
sbb
test
pop
pop
mov
cld
or
cmc
arpl
sbb
inc
xor
adc
in
mov
shr
xor
mov
or
sbb
daa
mov
cmpsl
push
int
cld
scas
in
jp
call
push
adc
out
scas
scas
sub
cld
or
and
jmp
cmp
push
sub
jns
cmp
ljmp
pop
fildl
test
mov
je
fdivl
movsb
fildll
out
inc
cmp
fsubrl
call
imul
mov
pushl
cld
rcrl
fbstp
addr16
fstl
test
mov
pop
ljmp
rorl
mov
rcl
xor
mov
loope
sbb
scas
fistpl
pop
lret
ljmp
sbb
or
cmpsb
cmp
stos
rcr
add
das
cli
ljmp
cmpsb
out
jae
cmp
xchg
or
enter
imul
pop
loopne
push
outsl
imul
mov
test
decb
cmp
mov
and
dec
out
jnp
stos
into
mov
mov
out
sub
les
sub
xor
dec
xchg
into
adc
lcall
add
push
cmpb
lcall
push
sub
lcall
pop
sbb
out
adc
stos
jecxz
outsl
stc
push
jle
rclb
out
or
cmp
dec
ficoms
lahf
ret
jmp
loopne
mov
xor
fisttps
and
and
or
xor
test
mov
jle
pop
sub
aam
inc
ljmp
std
movsb
mov
push
sbb
pop
js
xchg
inc
pop
test
in
or
lcall
jmp
mov
inc
inc
mov
ja
cld
out
aas
mov
lock
add
es
lcall
mov
xor
into
and
pop
dec
mov
loopne
js
scas
js
sahf
bts
incl
xchg
push
cwtl
xor
jmp
pushf
xor
dec
outsl
push
mov
push
lcall
shlb
xor
loop
mov
in
adc
clc
mov
mov
jmp
jp
xchg
jg
into
jle
xchg
cmpsl
arpl
pusha
fldt
jae
out
mov
das
stc
sub
xlat
les
lret
or
push
xor
push
xlat
xor
frstor
dec
pop
mov
ljmp
or
pop
arpl
fistps
rolb
iret
iret
push
mov
mov
dec
imul
bswap
addr16
cmp
xor
jmp
inc
out
xor
notb
pop
rcl
inc
cmp
imul
mov
and
mov
or
mov
stc
out
xchg
sbb
incl
sbb
mov
out
mov
dec
idiv
pushl
ret
sbb
or
sub
xor
jp
inc
push
dec
jg
clc
adc
xor
ljmp
mov
hlt
mov
pop
loope
push
dec
divb
sub
ljmp
rorl
shl
push
loopne
mov
sahf
mov
loop
mov
incl
cmp
lock
mov
pop
xchg
fwait
mov
in
or
sbb
lock
jp
fisttpll
pop
repz
jmp
xchg
and
push
loope
stos
fstpl
and
jecxz
test
out
rcrl
ljmp
imul
sub
push
incl
cwtl
in
imul
lods
mov
incl
pop
jmp
sub
int
dec
sbb
xor
ret
cmp
xchg
pushf
cld
in
sub
xchg
and
lret
je
adc
pop
ja
icebp
into
fcompl
pushl
mov
cltd
or
notb
in
push
xchg
pop
and
std
repnz
mov
cmp
in
lret
push
arpl
mov
sbb
incl
gs
mov
mov
add
add
pop
es
loopne
ljmp
sbb
add
out
popa
jl
fiaddl
jge
push
push
cmp
adc
out
clc
pop
les
mov
shl
or
cmp
andl
push
pop
xor
mov
push
cmpsb
pop
sbb
or
dec
ret
rorb
pop
adc
das
sar
mov
leave
leave
mov
out
xchg
jle
cltd
lods
sbb
test
fdivrp
jg
loopne
jl
inc
ss
jg
enter
fwait
mov
das
fisttpl
and
lcall
cs
cmova
xchg
ja
xor
flds
xor
sahf
mov
loopne
cmpsl
lahf
arpl
sahf
mov
lcall
mov
or
mov
fcoml
mov
sbb
stos
xor
inc
out
dec
daa
repz
cmc
sub
xor
int3
sbb
test
outsl
cli
call
sub
mov
mov
ss
leave
jp
cmp
lock
call
sub
loope
loope
scas
sbb
or
push
mov
pop
lods
insb
js
cmp
pop
cmc
cmpsl
cmp
fadd
adc
fs
outsl
mov
push
insl
enter
mov
cmpsl
jns
scas
lcall
fbld
jecxz,pt
test
shl
jne
movsb
cmpsl
loop
jle
arpl
push
and
loop
or
in
and
popl
popf
cmpsb
in
mov
clc
aaa
repnz
div
out
pushl
cmp
rol
cli
out
jne
and
rolb
lret
push
add
inc
jb
pop
add
or
hlt
mov
mov
testl
in
push
jl
lods
nop
mov
mov
loopne
mov
inc
dec
push
xchg
xor
pushf
inc
xchg
xchg
mov
adc
stos
cmp
in
and
aas
pushl
jecxz
push
lds
rclb
test
xchg
es
push
int3
in
push
outsl
cmp
test
sbb
cs
nop
add
out
dec
adc
mov
jns
jmp
sub
jl
xlat
xchg
jl
inc
lahf
jle
lret
popa
add
mov
fimull
bnd
ljmp
adc
mov
sub
lcall
sarl
adc
jmp
and
add
xor
pop
test
sbb
subb
popf
inc
push
cmpsl
mov
lds
stos
or
cmp
jne
aas
ljmp
lea
and
adc
or
repnz
out
inc
cltd
scas
mov
lret
jbe
xor
dec
cmp
pushl
je
xchg
inc
icebp
cmp
lret
inc
or
jp
lret
scas
sub
or
inc
call
ds
jnp
mov
jmp
xor
lds
int
xchg
mov
outsb
testb
sbb
inc
cmp
inc
pop
loop
incl
jle
inc
push
xchg
rorl
pop
mov
pcmpeqw
out
fnstenv
push
jne
sbb
incl
daa
test
mov
stos
je
add
push
ljmp
popf
add
call
push
lret
and
or
stos
pushl
stos
mul
enter
push
add
pop
shrl
push
lret
out
cmp
jno
and
push
std
jmp
push
jp
jns
inc
enter
mov
in
in
lret
lods
icebp
sub
mov
push
lods
push
fsubrs
sub
lret
aas
call
mov
lods
rolb
pop
pop
shrl
xor
cmp
ficoml
fcomps
mov
xor
mov
gs
lods
inc
push
dec
popl
in
xchg
and
call
sti
xorb
mov
ret
add
ds
mov
xchg
push
dec
inc
jp
test
add
stos
or
out
add
sbb
stos
sbb
out
jl
dec
xchg
jecxz
stc
loop
ret
fstpl
jns
sub
fisubrl
cmp
lods
pop
mov
inc
cltd
pusha
lret
aam
jle
sbb
jns
and
loop
mov
jmp
ficoms
into
mov
fsub
mov
shlb
les
arpl
fwait
orb
scas
push
das
stos
adc
and
xor
fidivs
pop
mov
pop
in
ja
rclb
addr16
hlt
fcos
pushl
or
mov
cld
push
gs
ja
fdivs
lahf
lea
subb
sub
xchg
sub
incl
jne
mov
loopne
cs
push
ja
cwtl
ficoms
dec
adc
in
pushf
imul
ljmp
jle
xor
dec
sti
lea
mov
es
dec
enter
dec
outsb
lcall
mov
adc
in
lahf
sub
cmc
or
out
adc
call
rcrl
insl
ret
push
sub
cli
adc
and
sahf
ljmp
xor
push
cmpsl
xor
fdivrl
mov
in
pop
inc
scas
xor
call
enter
stos
inc
lar
xor
jo
dec
or
pushl
or
pop
inc
dec
out
mov
add
fwait
cmpsb
or
or
mov
das
sub
dec
sub
aas
pop
dec
rorb
cmp
imul
cmp
jge
mov
inc
xchg
sbb
iret
fcomi
ja
inc
fdivrp
jecxz
ljmp
cmp
mov
mov
outsb
adc
popf
adcb
fwait
jge
dec
int3
iret
mov
lods
lcall
xor
pop
cs
mov
in
stc
sub
jo
add
mov
mov
negb
mov
jbe
and
std
jg
aad
sub
daa
mov
test
popa
sub
shrb
pushl
lds
jp
addps
jle
cmp
call
or
aaa
jg
cld
jbe
mov
loopne
xchg
es
xchg
push
mov
mov
mov
push
cld
pop
icebp
hlt
mov
int
stos
jb
das
jbe
cmp
std
call
inc
out
sti
jecxz
or
fcom
add
inc
dec
mov
push
dec
shl
add
incl
dec
out
ss
addr16
pop
lock
out
cs
imul
or
fisttps
test
aam
dec
dec
dec
dec
adc
icebp
add
lcall
ficompl
xor
push
scas
adc
iret
stos
or
int3
ljmp
cmp
out
jg
cwtl
shll
mov
pop
xlat
ret
shrb
lcall
mov
sub
jp
cld
xchg
imul
sarb
mov
ja
inc
stos
dec
or
dec
xor
mov
lds
std
test
call
jnp
cli
jecxz
mov
out
andl
mov
dec
lds
out
fwait
mov
lods
xlat
mov
inc
or
mov
mov
ljmp
insb
mov
and
or
fld
jnp
and
jg
pop
push
jg
add
dec
jbe
out
pop
mov
je
cmp
aas
dec
int
jg
cmp
and
aam
lock
adc
call
loopne
lods
das
mov
dec
je
jle
xor
pop
sbb
andl
decl
daa
subl
nop
jnp
pusha
add
mov
aad
jbe
dec
cmp
jmp
popa
loopne
dec
addr16
mov
testb
and
ret
ljmp
adc
and
incl
mov
lret
insb
and
xor
dec
imul
ss
and
stos
stos
push
dec
shll
mov
ret
jbe
sub
lcall
ja
xchg
push
imul
test
and
fs
pop
inc
pop
je
pop
lcallw
jae
jmp
shll
arpl
clc
out
stc
or
mov
pop
aam
in
pushf
movsl
xor
movsb
and
jle
loope
scas
lods
push
notl
mov
jmp
jb
sub
push
sub
incb
adc
call
es
jne
clc
loop
mov
jmp
pop
and
mov
xorb
inc
xchg
fcompl
lock
sub
in
inc
stos
out
xchg
add
cld
jmp
addr16
xor
lods
mov
ja
sbb
aaa
mov
call
and
clc
add
out
mov
push
stos
ret
int3
leave
sbb
adc
adc
sbb
fdivp
cmpsl
sti
ficoms
push
lahf
fsubr
nop
adc
mov
jno
jbe
sbb
and
gs
xchg
gs
mov
jl
mov
push
mov
aam
pop
stos
add
clc
decl
mov
jno
pop
fadds
add
rcrb
push
sbb
data16
js
in
add
test
pop
inc
push
in
inc
mov
gs
cmp
stc
pop
lock
decl
les
pushf
sub
push
outsl
gs
or
cmc
push
test
ljmp
pusha
aad
xor
stos
int3
jno
lock
ljmpw
outsb
loopne
test
in
lret
incl
push
cmp
mov
pop
dec
lret
test
repz
jbe
andl
fcomip
jmp
addb
movsl
push
mov
mov
push
fwait
call
out
push
adc
outsb
pop
bound
pinsrw
fsubl
sub
adc
lea
jne
in
inc
shlb
fs
stc
int
push
dec
scas
ja
rorb
loop
decl
mov
pop
in
cmc
imul
dec
jmp
stos
into
cmpl
xlat
enter
call
xchg
mov
mov
jmp
and
incl
out
push
adc
lcall
push
sub
shlb
adc
jnp
jecxz
dec
incl
ljmp
sbb
sbb
cmp
xchg
shr
ret
icebp
adc
jg
jmp
aas
popa
pop
iret
ret
mov
in
stos
lods
leave
leave
popa
lods
lcall
xchg
sbb
or
push
test
or
dec
xchg
mov
out
lret
sti
loop
decl
sub
sub
jns
add
out
testb
cmpb
push
mov
lods
xorb
call
mov
cltd
mov
mov
cmpl
pop
pop
and
outsl
xchg
loop
stos
out
pusha
iret
fwait
insb
adc
dec
add
orb
into
dec
mov
incl
loop
cmpsb
sarb
enter
sarb
clc
lcall
sub
lahf
rclb
rolb
adc
insl
das
jle
mov
test
jmp
loopne
xor
nop
jno
fsubrl
cmp
je
jnp
inc
scas
cli
sbb
ljmp
mov
in
leave
add
popf
mov
shlb
xor
jbe
lock
int3
xchg
decl
push
data16
in
enter
pop
jge
ret
fsubr
or
lret
shll
lcall
out
lods
out
mov
mov
insb
ret
or
sub
ret
hlt
iret
nop
dec
stc
pop
cmp
or
lcall
shlb
pop
jo
enter
stos
jne
lcall
pop
or
testb
std
pop
lahf
popa
and
push
sbb
negl
int
inc
dec
ljmp
and
sub
jecxz
mov
mov
fists
push
push
jnp
sahf
mov
mov
pushl
js
sbb
pop
mov
mov
das
les
incl
mov
push
lock
push
repz
adc
mov
add
loopne
test
mov
lcall
std
mov
movsb
cmp
imul
sti
and
repz
jmp
pop
jae
shlb
repz
sbb
in
int
pop
inc
stos
dec
in
sbb
fisttps
ljmp
mov
test
push
fisubrs
push
mov
jg
call
mov
inc
decb
fdivrs
sub
push
fists
call
stc
subb
out
bound
push
jle
mov
adc
movsb
or
mov
add
adc
or
xchg
jne
lods
insb
mov
jl
je
xchg
ret
out
mov
mov
xchg
add
pop
mov
xchg
mov
xchg
dec
mov
decl
js
mov
inc
cmp
insb
js
insl
in
hlt
mov
mov
ret
out
add
dec
test
adc
mov
cld
inc
es
jl
sbb
xchg
out
adc
addb
jmp
lods
ret
cli
pop
inc
adc
fdivrs
bound
ja
cmp
sahf
popf
cld
repz
ror
xor
cmp
fstps
testb
push
add
iret
out
cmp
fs
mov
imul
hlt
pushl
popa
sbb
jo
test
ja
stc
aam
fsub
xor
lods
xor
dec
loopne
decl
mov
jae
inc
pop
push
in
pop
dec
ret
or
lret
ljmp
or
inc
into
inc
xor
lock
cmp
sarl
push
push
xlat
iret
inc
cmp
inc
mov
push
fisubrl
outsl
test
inc
enter
incl
incl
jg
push
mov
stc
popa
repnz
mov
out
decl
mov
mov
sarb
lcall
jnp
iret
mov
in
xchg
cli
push
in
std
call
lcall
dec
pop
pop
fcomip
les
jmp
stos
push
push
ret
mov
pushw
lds
cmp
and
xchg
mov
pushl
pop
xchg
adc
jl
stos
and
adc
movsl
pop
pop
or
addr16
pop
mov
xlat
dec
or
call
jecxz
jmp
jbe
shll
addr16
dec
jg
outsl
lahf
mov
inc
es
and
movsb
outsb
or
ljmp
test
mov
ljmp
sub
inc
cmp
repz
inc
clc
ljmp
xchg
jge
mov
mov
fldcw
mov
lret
incl
dec
inc
dec
sbb
sbb
dec
addl
mov
add
insb
idivb
cmp
popf
and
clc
mov
rcrb
sbb
xor
xor
incl
aam
jb
mov
fs
mov
test
pop
test
pop
lods
lcall
fisubrl
int3
outsl
inc
lock
fmuls
or
rcr
sbb
aad
or
pushl
push
dec
pop
hlt
sbb
xor
lcall
shl
ja
and
les
out
cmp
jp
mov
lret
cmp
hlt
stc
mov
mov
pushf
lds
fs
call
push
add
int
fadds
fwait
dec
inc
mov
and
imul
jl
je
inc
push
jecxz
mov
sbb
outsl
test
jmp
lret
jne
or
or
mov
jmp
mull
xchg
ja
adc
incl
icebp
sbb
stos
or
adc
sbb
dec
mov
lcall
shl
pop
aaa
mov
jno
jle
lret
enter
mov
cmp
jmp
xchg
std
faddp
jns
cli
insl
aaa
xchg
jns
ja
jbe
iret
jnp
sbb
in
mov
mov
enter
into
mov
popl
aas
ja
mov
mov
jns
pusha
xchg
jbe
or
dec
stos
push
aas
push
lcall
sub
cmpsl
xor
fwait
ret
jmp
inc
push
push
add
add
push
fidivrs
xchg
ret
xchg
loope
inc
cli
and
dec
and
push
pop
insb
push
inc
or
call
push
xor
ja
xlat
jb
lret
addb
inc
repnz
jae
bound
imul
out
aaa
and
jne
jo
imul
outsb
imul
add
add
cmp
push
inc
js
add
ficompl
subl
xchg
jo
add
movsb
fucomip
add
adc
mov
ss
ds
sbb
dec
adc
incl
xor
lahf
push
outsl
outsl
insb
push
adc
outsl
sub
popa
jo
push
fs
lds
mov
mov
out
fiaddl
aaa
cmp
and
aaa
cmp
das
inc
push
push
and
movsl
dec
jne
js
arpl
into
addb
mov
push
popa
adc
cmp
roll
jns
push
imul
rcll
or
subb
es
ljmp
dec
jecxz
cmpb
add
add
bound
and
pop
mov
push
or
or
popf
lmsw
inc
repnz
data16
loopne
sub
jle
test
add
lcall
sub
inc
or
mov
or
cmpl
imul
pop
dec
inc
or
jae
adc
out
or
ret
adc
inc
sbb
mov
fisubs
mov
dec
adc
push
pop
ds
shl
insb
jne
addl
xchg
mov
test
push
xor
dec
push
inc
sbb
jo
sbb
push
fildl
push
addl
inc
loope
mov
sbb
push
jne
andl
push
pop
jb
xchg
sub
push
jns
loopne
in
or
cmp
xchg
adc
xchg
dec
jecxz
push
push
hlt
adc
popw
fs
inc
jecxz
das
sarl
dec
cmp
imul
int3
adc
push
insb
xor
jo
xor
inc
or
dec
lods
inc
xchg
add
addr16
push
pop
xor
pop
pop
mov
inc
popa
sbb
adc
or
mov
xor
arpl
fistpll
jns
rcr
divb
ret
dec
or
fisubrs
popa
inc
or
or
pop
or
fcmovu
xchg
popw
push
shlb
push
mov
fcmovu
mov
inc
xchg
popa
and
jmp
inc
push
inc
in
push
dec
jae
pushf
inc
or
fistpl
inc
dec
or
inc
push
push
cmp
mov
push
mov
inc
xchg
rcrl
sti
js
std
xchg
lods
xor
fnstsw
ljmp
inc
sbb
rcl
xchg
jg
pop
push
rcl
adc
mov
pop
and
and
ret
sbb
popa
es
jp
mov
rcll
insb
sbb
jg
sbb
rorb
push
and
push
inc
xchg
mov
outsl
jns
int
rcrb
add
sbb
gs
and
jbe
inc
mov
aad
mov
jns
add
fwait
xchg
inc
je
push
inc
adc
lods
jmp
out
sti
sub
push
inc
sbb
shlb
mov
into
mov
adc
inc
xchg
sti
jo
add
stc
mov
mov
loopne
add
push
or
jns
push
push
cmp
subl
js
inc
cmp
add
sub
ret
pop
aaa
cmp
test
popa
xlat
test
and
shlb
inc
inc
pop
inc
loopne
fmuls
adc
or
sbb
xor
jne
dec
mov
push
inc
add
xor
push
test
lds
mov
dec
outsl
jg
inc
push
adc
sti
inc
adc
outsl
push
mov
cmp
xchg
scas
pop
outsb
push
outsl
add
add
add
jno
loopne
mov
lds
rcl
inc
js
int3
cmp
dec
gs
jne
fs
xchg
fildl
int
movlps
xchg
arpl
std
pop
test
movsb
jp
ds
add
adc
jge
popa
shl
cmpl
jp
inc
lret
into
loop
sbb
test
repnz
lods
mov
and
rcrb
int3
pop
mov
push
pop
popa
sbb
jo
sub
and
out
shll
bound
outsb
vcvtss2sd
push
dec
xchg
je
xchg
fsub
and
push
outsl
leave
and
inc
jb
and
nop
nop
inc
cs
jo
arpl
cmpsl
inc
inc
gs
arpl
pop
sbb
ret
pusha
xor
mov
mov
mov
js
insb
jp
fwait
xor
out
syscall
data16
lea
inc
subb
nop
lcall
xchg
jae
jno
aad
mov
ret
add
and
leave
loope
adc
js
inc
xor
mov
mov
and
inc
push
or
sbb
int3
enter
mov
mov
aad
xchg
out
jnp
fs
xchg
xor
push
ret
ficomps
pop
xor
shlb
push
fs
outsb
inc
rorl
mov
and
push
and
mov
fidivrs
jns
je
insl
scas
adc
jecxz
outsb
dec
push
scas
mov
cmp
jnp
sar
xor
add
add
mov
mov
cmpsb
sub
sub
dec
shll
movhps
push
xchg
rcrl
push
addb
pop
jo
or
mov
adc
inc
jb
cmp
sub
or
add
and
mov
sub
dec
movsb
or
or
out
stos
jg
addl
inc
jae
fcomp
fiaddl
or
rcrl
cs
fisubl
js
add
ljmp
jo
sbb
and
test
scas
cmp
das
mov
dec
rclb
push
bound
icebp
adc
ds
mov
mov
imul
addb
inc
stos
cs
lret
sbbb
shrb
pop
mov
icebp
inc
mulb
push
adc
mov
fwait
shrl
jnp
sub
inc
fildll
xchg
pusha
sub
mov
mov
jge
cmp
sub
movaps
mov
mov
negb
enter
xchg
subb
push
insb
mov
gs
sub
add
mov
repz
jge
add
xor
and
dec
xchg
hlt
inc
xor
push
andb
pop
inc
push
paddsw
pushf
insb
adc
sub
inc
xchg
ja
push
inc
and
cmp
sahf
out
push
push
adc
loopne
cltd
lret
addb
insb
sub
popaw
imul
sbb
pop
fs
pextrw
dec
insl
fs
mov
add
jo
dec
jno
arpl
enter
sub
xchg
sbb
jo
fnstsw
inc
lods
sbb
sub
sub
dec
lcall
cmc
nop
push
aam
xor
lds
ss
lds
jbe
add
lds
dec
icebp
jne
aad
icebp
fistpll
dec
mov
pop
outsb
cmp
movw
lea
addr16
inc
mov
fnstenv
cmp
scas
add
pop
lea
lods
pop
lods
pop
mov
andnps
js
in
data16
adc
push
cmp
mov
sbb
push
sub
outsb
ror
lods
pop
fistl
jecxz
or
lahf
enter
mov
lea
adc
or
push
push
stos
fsubs
js
pop
popf
test
push
push
inc
out
adc
mov
sub
ljmp
or
xchg
std
pop
xchg
dec
push
imul
sub
pop
pop
loope
jl
mov
dec
xchg
push
add
add
imul
fucomp
jae
negl
adc
int
fwait
sbb
in
dec
jp
sbb
int3
and
inc
mov
add
pop
or
adc
or
mov
or
or
add
or
pop
repz
add
loopne
inc
pop
fisubl
xchg
inc
add
push
imul
cld
es
jbe
jae
loopne
cld
test
fcoml
push
add
lcall
mov
dec
push
mov
sub
test
and
add
and
jb,pn
popa
adc
negl
push
int3
push
fldenv
jge
inc
cs
mov
mov
sub
add
jb
sarl
out
rcll
pusha
dec
pushf
adc
lahf
and
mov
mov
jle
pop
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
