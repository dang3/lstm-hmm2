fcomp
decl
enter
lea
push
mov
or
adc
insl
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
rolb
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jnp
mov
mov
sahf
mov
les
int
mov
mov
xor
push
aad
fsub
subl
cmc
outsb
push
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
jle
sub
lret
adc
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
lcall
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
fists
fistpll
sub
push
fldt
and
mov
add
mov
cmp
xorl
out
lea
int3
scas
and
ss
mov
fsubrl
sbb
pushf
xor
sub
push
push
into
icebp
push
enter
dec
test
mov
mov
sarl
lcall
fdivrs
push
les
add
push
or
punpckhbw
ds
and
inc
pop
or
add
jmp
push
dec
add
dec
adc
push
loopne
push
loopne
sti
xor
mov
push
and
push
int
sbb
inc
aam
xor
push
dec
mov
dec
inc
push
mov
lea
or
push
pop
mov
dec
sub
add
or
pop
sahf
add
sbb
popa
test
pop
add
add
pop
mov
dec
test
mov
sub
in
in
aas
push
mov
and
mov
test
inc
scas
mov
cmp
ss
adc
pop
lods
mov
pop
ret
xor
test
out
push
inc
push
dec
dec
push
sub
push
insb
loope
push
push
jbe,pt
add
and
sbb
adc
mov
mov
jmp
add
pop
clc
mov
sub
mov
inc
pusha
das
push
and
sub
jl
or
scas
insb
add
inc
and
imul
add
and
inc
xor
push
jmp
mov
add
pusha
push
pop
clc
and
push
frstor
mov
stos
cmp
je
icebp
push
dec
jne
es
loopne
add
dec
in
dec
inc
pavgw
jle
int3
push
add
call
inc
mov
into
push
shll
lea
and
mov
push
push
push
or
aas
sub
push
movsb
aas
pop
cmp
hlt
nop
test
cmp
mov
stc
cld
or
or
out
sub
inc
add
jl
ss
push
sbb
xor
xorl
xor
inc
je
or
or
inc
or
and
xor
lock
repnz
subb
dec
push
popa
adc
push
cltd
and
and
fistps
ds
xor
jge
lahf
ss
hlt
push
jg
adc
or
test
push
adc
sbb
push
out
lea
and
adc
insl
mov
pop
mov
jb
sub
add
pop
sbb
and
pop
sub
pop
and
and
adc
pop
dec
fmull
mov
push
ds
mov
pusha
push
push
es
or
push
add
dec
jl
out
push
push
push
repnz
or
sbb
dec
fisttpl
mov
push
pusha
sub
sete
test
test
xchg
pop
or
and
or
adc
add
xor
iret
pop
sbb
adc
push
movsb
scas
es
insb
pop
int3
xchg
cmpsl
ljmp
cmp
and
or
push
aad
stos
pusha
lds
mov
punpckhbw
pusha
inc
mov
inc
jne
sbb
adc
jle
bound
sbb
inc
inc
adc
and
pop
cld
add
or
or
out
adc
sbb
xchg
mov
sbb
push
and
insl
jle
punpckhbw
sbb
pop
xchg
or
hlt
push
push
or
push
sub
push
xor
cmpsb
fidivrl
bnd
sbb
dec
add
dec
ret
adc
insb
test
dec
and
add
cmpsl
sbb
push
inc
or
inc
pmullw
sbb
std
mov
push
inc
add
nop
inc
cmp
fadds
add
jle
push
sbb
xchg
xchg
inc
mov
jle
xorl
lock
mov
sti
pop
stos
icebp
mov
and
icebp
sbb
shrb
incl
mov
mov
shlb
xor
nop
call
call
adc
adc
mov
pop
xchg
inc
movb
jmp
and
sbb
jno
loopne
push
sbb
insb
mov
add
jb
out
xor
push
sub
mov
shrb
adc
inc
mov
cmp
mov
jecxz
jo
push
push
das
mov
in
in
xor
inc
imul
fs
or
rol
ret
movlhps
mov
pop
push
data16
lock
sbb
mov
js
int3
std
loopne
neg
sub
cmpl
je
adc
adc
adc
inc
std
mov
fcoml
push
push
pop
xchg
scas
std
sarb
cld
mov
dec
lea
sub
addr16
ljmp
mov
sarb
mov
add
jecxz
inc
in
xchg
fcoml
adc
adc
pop
cs
test
daa
add
adc
inc
jbe
adc
das
cltd
das
lahf
cmp
insb
or
mov
mov
fcmovnb
add
adc
jl
lahf
mov
push
jmp
inc
mov
inc
sar
in
push
mov
adc
sub
ret
aaa
push
sbbl
adc
lea
pop
pop
icebp
jns
jns
in
jl
aad
cmp
push
sbb
sbb
ret
mov
and
push
cmp
dec
lea
jne
jo
dec
sub
adc
sub
in
jg
push
bound
cli
jmp
cmc
lea
insb
mov
aas
clc
mov
mov
int3
fsubrs
les
sbb
cmpsl
dec
jg
sarb
push
push
jmp
and
cmp
push
xchg
movsb
into
outsb
in
test
shll
cmp
cmp
xchg
cmpb
sbb
repnz
imul
cmp
enter
or
sbb
cld
das
push
inc
adc
jle
jne
mov
andb
dec
xor
xor
rcrb
push
mov
leave
sub
cmp
je
push
jne
or
or
xchg
lea
dec
mov
mov
pop
jno
test
mov
and
cmp
mov
add
jg
stos
jae
movl
cmp
sbb
sub
push
loop
push
push
mov
call
incb
jg
jne
push
call
inc
cmp
jl
test
sub
mov
jnp
sub
js
jne
adc
jbe
cmp
jbe
pushf
or
sbb
push
xor
pop
loope
in
push
mov
mov
push
adc
xchg
fs
dec
faddl
je
mov
aaa
rorb
adc
loope
mov
push
rorb
inc
jo
fbld
and
loopne
out
pushl
movzwl
and
rcrl
sub
into
sbb
jmp
ss
ljmp
ret
add
inc
test
jne
sub
push
push
inc
xchg
in
lock
adc
adc
adc
cltd
ret
fists
and
jecxz
js
lahf
lods
adc
or
adc
insb
jne
ja
orb
out
pop
dec
es
fiaddl
add
jb
iret
cmp
jg
test
add
push
mov
testb
push
xor
mov
pop
insb
pop
pop
ret
mov
or
sub
adc
or
adc
pop
dec
pop
rcr
push
int3
arpl
push
loope
loopne
insl
lcall
jne
pop
mov
sbb
or
or
movsb
push
sub
imul
ficoms
rcrb
inc
addb
inc
pushl
adc
test
mov
std
sbb
jge
push
cld
add
sub
in
push
test
pop
nop
clc
jle
mov
mov
cmp
pop
xor
or
mov
mov
lea
outsb
add
fistl
cmp
add
mov
or
add
call
push
push
add
push
insl
shl
hlt
loop
clc
cwtl
jl
inc
aad
xor
jo
jg
mov
fcmovb
add
add
dec
loope
inc
jno
ret
icebp
mov
and
add
lock
je
cmpl
insb
mov
pop
sub
add
in
inc
hlt
add
insl
aas
mov
pop
ret
xor
mov
cmp
cmp
sbb
push
dec
push
rclb
les
imul
cmp
pop
pop
push
ds
jne
push
pop
mov
lods
and
jp
repnz
sbb
notl
mov
or
lret
mov
adc
cmp
ja
push
clc
lea
push
xchg
adcl
cmpsb
jmp
aam
push
add
rorb
mov
jmp
push
pop
sbb
adc
adc
mov
mov
adc
filds
andl
into
shrb
xor
push
or
cmp
out
sbb
push
push
lea
sbb
outsb
mov
push
loopne
int
subl
mov
aaa
or
or
js
ret
lcall
cmpsb
popa
movsb
sbb
pop
adc
cwtl
push
cmp
mul
pop
aas
sub
jg
int3
or
shl
add
ds
aas
pop
push
mov
mov
dec
stos
scas
inc
or
xchg
mov
pop
mov
pop
lahf
jle
add
add
fwait
popf
or
je
pop
mov
call
hlt
jg
sub
cmp
je
cmpl
lea
jl
mov
push
jne
mov
imul
enter
dec
test
push
sub
aad
aam
shl
push
hlt
push
push
fcmovnu
fadds
sbb
or
adc
ret
sbb
xor
push
push
xor
fndisi(8087
mov
pushf
sub
test
mov
pop
out
or
mov
adc
incb
push
stos
cmp
jae
fcoms
fists
ret
aaa
or
inc
inc
or
shlb
push
and
in
inc
ret
aas
jg
ret
adc
sbb
test
sbb
fadd
pop
mov
icebp
je
adc
push
popa
sbbl
sbb
jmp
pop
push
push
insl
mov
add
sbb
lds
int3
dec
push
mov
mov
jb
add
mov
int3
lods
aaa
mov
rcll
clc
rol
cmp
inc
das
rcr
hlt
jmp
inc
add
dec
adc
mov
in
adc
mov
lea
lds
add
sub
test
xchg
mov
sbb
orb
add
repnz
orb
out
mov
cs
fldl
add
cmp
add
aam
add
shlb
ret
and
adc
pusha
pop
mov
rcl
inc
add
adc
push
out
outsl
sbb
mov
mov
enter
dec
adc
mov
lock
add
inc
cmpsb
xor
loope
mov
jae
cld
shr
cmpsl
int3
mov
push
or
mov
jle
mov
test
andl
xor
inc
pop
lock
hlt
cmp
cli
imul
lret
pop
or
cld
loopne
add
rorl
add
add
cmp
rorl
and
adc
pop
movsb
jb
xor
lock
mov
rclb
inc
sub
mov
add
adc
ret
or
ss
stos
adc
and
mov
rclb
mov
je
pop
pop
push
xor
push
std
adc
jbe
jmp
lahf
mov
popa
imul
jb
mov
paddusb
lret
pop
pop
pop
mov
test
lods
inc
ror
cs
pop
jae
test
xchg
ret
cmc
gs
cmp
addps
ljmp
insb
adc
pop
xor
incb
jb
ja
jb
out
cmp
xchg
adc
mulb
xor
pop
or
push
loop
or
inc
adc
js
pop
int3
cmp
cmp
daa
es
popf
in
and
or
in
pusha
inc
dec
or
push
test
sbb
rcl
iret
and
push
push
negb
lret
cwtl
icebp
pop
and
int3
mov
pop
repz
xor
movsb
in
push
dec
loope
push
and
adc
pop
sbb
add
out
pop
add
mov
and
jmp
stos
mov
lods
adc
cmp
jne
xor
push
push
outsb
jb
testb
or
sbb
repnz
push
lea
mov
inc
cmp
pop
inc
out
cmp
fisttps
mov
mov
mov
inc
add
test
jecxz
pop
insb
or
add
jmp
xchg
aas
inc
adc
cmc
test
pop
popl
push
mov
add
adc
pusha
addb
jb
fstl
repnz
lahf
sbb
mov
pop
sbb
aas
sbb
jle
add
or
push
roll
sub
into
push
sbb
mov
jno
pop
pop
loope
push
call
mov
ret
lahf
mov
xor
jnp
rolb
fiadds
ja
push
or
mov
je
or
mov
std
pop
outsl
or
jne
push
adc
hlt
shrb
ret
xor
push
fistps
mov
push
push
sub
sbb
iret
mull
in
cmpl
pop
mov
jle
lock
or
incb
jmp
ret
pop
add
jne
and
cmp
scas
roll
fidivrs
repz
sahf
popf
cmpsl
arpl
push
and
cmpb
adc
lods
adc
fadds
ja
je
orl
sub
jne
cmp
mov
or
xchg
jne
popa
aas
fldt
mov
xchg
mov
movb
jno
add
pushf
xchg
mov
int
dec
adc
clc
push
cld
mov
jg
mov
cmp
lcall
jmp
dec
mov
adc
add
xchg
sbb
aaa
mov
add
mov
das
cmp
insb
or
ljmp
mov
neg
sbb
and
mov
sbb
dec
int3
shrb
cmp
pusha
rorb
jp
lods
cwtl
addr16
cli
push
lea
adc
cltd
pop
nop
call
inc
imul
js
stos
int
dec
ret
mov
xor
out
fucomi
lds
mov
repnz
in
dec
cmp
push
mov
div
out
movl
xchg
lret
dec
inc
push
sbb
sbb
mov
xor
xor
je
xor
insl
clc
pop
stc
jne
scas
dec
sbb
in
fnstenv
repz
mov
inc
cmp
test
add
inc
mov
add
popf
mov
sbb
sbb
pop
and
cmp
fmull
loopne
adcb
movsb
fstl
loope
fdivl
sub
sahf
in
sahf
cmpsl
call
hlt
clc
adc
jns
jae
add
adc
or
fisubs
add
sub
pop
mov
inc
outsb
dec
dec
mov
dec
std
push
cld
pop
push
lea
push
ficoml
add
push
lea
jle
xlat
dec
cmp
push
inc
repnz
dec
aam
lret
enter
pop
sahf
and
lods
outsl
jle
test
sbb
push
mov
aad
cmp
sub
in
sbbb
push
je
aas
push
in
add
jle
add
fiaddl
popf
lret
stos
inc
cld
xchg
ficoml
xchg
fists
test
mov
sub
xchg
add
push
push
aas
insl
adc
push
jle
ficompl
add
pushf
fldenv
ret
xor
dec
addr16
or
aas
xor
mov
and
int
dec
fiadds
pop
je
and
push
das
mov
xor
sbb
dec
add
mov
push
outsb
fadds
xchg
dec
jmp
xchg
mov
call
sbb
xchg
in
mov
shll
mov
js
cmp
sbb
out
xchg
sbbl
sub
movsl
push
and
add
jo
mov
ret
add
setne
push
dec
dec
and
mov
xor
mov
jg
push
mov
dec
dec
dec
in
xchg
mov
pop
rcpps
add
cwtl
rcrl
mov
lea
add
add
add
pop
sub
push
mov
mov
sahf
sbb
and
pop
mov
test
mov
pop
loope
pop
jl
sub
push
push
cmpl
xor
adc
add
test
je
xor
mov
sub
ret
push
push
xor
push
lea
sarb
inc
clc
loop
mov
dec
inc
mov
insb
push
dec
dec
mov
push
push
xor
and
fiadds
inc
dec
sbbb
mov
sub
push
ret
add
mov
std
inc
mov
xor
dec
sub
and
jmp
mov
add
sahf
inc
add
mov
ficoml
into
cmp
mov
jg
pop
lea
push
push
inc
xchg
inc
push
jns
xchg
fadd
ret
sti
mov
sbb
push
adc
sahf
out
push
xor
cmp
inc
movl
jle
inc
xor
jl
outsb
loop
mov
fistpll
and
adc
icebp
adc
test
ret
icebp
ret
inc
neg
sbb
ret
iret
pop
pop
cmp
call
pusha
adc
movsl
push
call
jg
xlat
or
inc
push
addb
adc
imul
or
mov
mov
push
cmpsl
push
add
adc
icebp
addb
mov
in
clc
cmc
inc
pop
repz
out
mov
and
pop
lock
lret
xor
gs
call
cmpsl
adc
push
mov
pusha
lock
and
inc
sbb
mov
push
std
add
or
cwtl
add
jnp
out
push
push
lret
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
and
cmp
xor
xor
or
loop
and
das
int3
mov
addb
xlat
loop
pop
xor
les
sbb
add
pusha
jne
adcl
aad
lahf
arpl
sbb
aad
jns
loope
sbb
jmp
pop
or
jmp
cwtl
jb
ret
push
pop
cmpsl
adc
rclb
add
sbb
movb
inc
and
and
mov
sub
jb
dec
adc
xchg
xchg
push
sbb
scas
add
icebp
dec
adc
aaa
jo
add
inc
pop
cld
xchg
mov
or
cld
push
add
push
xchg
mov
add
loopne
xchg
idiv
push
jne
bnd
movsl
push
mov
inc
and
jecxz
sbb
adcb
or
mov
sbb
pop
push
fstpl
jecxz
and
orb
fucom
inc
lea
imul
repnz
stos
cmp
ret
jo
xlat
enter
or
in
mov
mov
and
aam
sbb
cmp
pushf
and
popf
out
xor
ficoms
lds
dec
push
aam
stos
push
dec
sbb
dec
lret
push
push
out
ds
sub
addb
or
inc
lahf
push
rclb
jo
test
push
pusha
jbe
dec
jmp
test
push
push
push
mov
cmp
sub
push
push
lea
jo
pop
sarb
fs
push
js
pop
push
mov
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
test
cmp
add
inc
cmp
rcl
mov
inc
xor
mov
dec
add
ss
int
add
or
mov
mov
sbb
in
ja
push
and
jo
push
je
xchg
sbb
add
push
push
je
push
mov
bound
adc
xor
call
faddl
stos
jno
enter
shrb
xor
pop
cmp
fldl
fmull
pop
addl
push
push
ret
inc
in
dec
cltd
test
jb
es
push
or
adc
imul
and
fwait
mov
fldl
mov
lock
sahf
andl
ds
push
imul
in
sbb
push
lds
pop
push
mov
test
inc
sub
mov
xor
mov
or
dec
inc
push
add
add
mov
scas
add
loopne
add
and
pop
cmp
loop
lock
sbb
in
push
or
jbe
es
jne
adc
dec
cmp
add
push
cmpb
jno
adc
push
pusha
stos
adc
nop
in
inc
add
andl
push
adc
xor
push
xchg
push
jbe
jne
lds
pop
push
or
cld
cld
add
scas
pop
xchg
add
je
mov
cmp
jb
jge
xchg
lock
or
call
cs
sub
push
add
inc
test
cmp
dec
or
jmp
push
sbb
push
push
cmp
dec
push
pop
or
iret
add
faddl
outsb
mov
rcll
loop
bound
int
dec
dec
sbb
shll
dec
push
push
push
lahf
test
xor
sub
js
jo
jmp
out
into
test
popf
loopne
inc
inc
or
mov
sbb
mov
mov
sub
jl
pop
dec
mov
fs
dec
xor
pop
sbb
out
add
enter
test
pop
cmpl
mov
adc
xorl
adc
xor
rcrl
lock
sub
jl
or
and
push
sar
push
adc
and
fstpl
daa
test
jl
dec
add
dec
mov
adc
add
mov
bound
mov
dec
bound
imul
sar
mov
shr
add
mov
imul
push
sub
push
push
lahf
cmp
xchg
loopne
movsb
in
jle
outsl
jo
enter
xchg
mov
jbe
cmc
sub
mov
outsb
and
pop
stc
add
and
in
adc
push
enter
lea
lock
mov
cmp
je
cmpl
clc
inc
inc
pop
mov
xor
imul
dec
xor
ficomps
dec
arpl
adc
mov
sti
lea
or
lret
cmp
outsl
sbb
fmuls
mov
addb
ret
inc
cs
sti
dec
push
dec
lea
mov
xchg
mov
push
cmpsl
sbb
rolb
mov
or
jle
fldz
retw
jnp
pop
pusha
push
ljmp
jge
fisubrl
int3
sbb
pop
insl
cld
pop
push
adc
fstpt
cltd
idivl
je
add
aaa
jnp
add
aas
sub
sub
ja
mov
sbb
loope
add
mov
or
add
adc
jle
cmp
add
and
xchg
bnd
pop
sub
in
add
popf
imul
imul
jno
jae
dec
sub
jge
jmp
shll
lea
mov
cli
add
sbb
push
faddl
ljmp
or
rorb
ds
shll
mov
test
sbb
inc
mov
mov
mov
jns
inc
push
push
fsubrp
xor
xchg
cmp
add
or
mov
std
mov
out
fidivl
shl
insb
xor
pop
fiaddl
jo
pop
repnz
in
add
movb
addr16
sbb
stos
add
cli
enter
adc
call
rorb
call
les
pop
pop
mov
pop
fs
insb
xchg
mov
call
and
rcll
mov
je
and
inc
mov
xchg
xchg
in
xchg
shlb
inc
loopne
or
insl
pop
xchg
xor
loop
ja
pop
push
dec
add
adc
popa
movsl
jno
sub
add
xor
add
cmp
lea
dec
and
invd
and
xchg
mov
lea
or
inc
xchg
xorb
mov
pop
les
inc
aam
push
inc
outsl
fdivs
call
pushf
test
sbb
js
iret
lds
or
loope
test
inc
mov
cmp
enter
xor
xor
pushf
or
pop
clc
bound
aad
pop
mov
ret
and
sbb
xchg
lock
mov
or
mov
push
push
pop
inc
jge
mov
sbb
aam
push
insb
test
out
xchg
fcomip
cmpsl
push
loope
fisttps
add
lock
jae
add
pop
inc
jg
outsb
cmpsb
xchg
dec
or
jo
fstpl
push
rolb
sbbl
test
test
dec
pop
push
adc
mov
add
push
and
adc
leave
xor
sarb
mov
pop
push
sbb
pop
or
mov
xchg
adc
inc
pop
mov
icebp
mov
fidivrs
push
mov
add
ret
loope
nop
sbb
lcall
pop
push
dec
mov
repnz
in
inc
push
jle
cmp
gs
pop
lahf
loope
dec
ficomps
push
sti
mov
rcrl
cmp
movsl
mov
pop
ret
lahf
mov
and
int3
pusha
cwtl
and
and
leave
mov
inc
aam
bound
cld
sub
push
clc
pushl
mov
setb
insb
push
mov
sub
cmp
setae
stc
jle
pop
lcall
adc
push
js
lret
mov
cwtl
icebp
inc
lcall
roll
xor
xchg
lret
push
add
inc
push
cmpsb
loopne
pop
aam
lea
push
adc
mov
push
movsl
push
test
loope
es
pop
pop
fisttpl
rorl
jle
mov
aas
stos
mov
xor
push
popa
rclb
cmp
dec
mov
push
adc
sbb
sbb
jbe
popf
and
add
adc
inc
sbb
inc
ss
push
lcall
dec
push
or
aas
add
or
leave
xchg
fnstsw
inc
and
arpl
iret
call
jge
lods
adc
out
push
pop
jns
incl
jno
pop
cmp
ja
movzbl
ret
lcall
mov
cmp
mov
jo
test
cmpsl
push
mov
fdivs
add
add
mov
add
xlat
dec
nop
push
ds
mov
pop
lahf
mov
mov
in
inc
repnz
and
xchg
mov
cmp
adc
fstpl
add
out
inc
xor
sbb
movl
cmp
add
adc
das
add
inc
or
pop
push
mov
dec
in
add
lea
mov
gs
cltd
and
jns
movsl
and
jo
dec
seto
pusha
lods
push
mov
mov
dec
push
pop
adc
xchg
popa
and
mov
call
mov
pop
mov
add
cmc
pop
or
push
sahf
add
xchg
inc
push
ds
popa
push
jl
ret
mov
test
push
push
adc
lea
sbb
or
out
mov
xchg
fistl
mov
sbb
sti
je
stos
mov
push
jne
cmpsb
fsubrl
inc
sub
shlb
mov
jmp
shl
jmp
frstor
pop
push
bnd
dec
push
pop
dec
and
rorb
jbe,pt
jb
mov
sbb
ss
add
sub
mov
rclb
gs
and
pop
ret
aaa
adc
pop
xor
ljmp
je
xor
es
shrl
mov
je
sbb
adc
jne
push
push
test
inc
xchg
lret
js
push
push
and
mov
or
xchg
push
movsb
cmpl
andb
sbbl
lahf
out
mov
pop
in
adc
push
or
or
adc
insl
cmp
mov
push
push
dec
mov
subb
aad
dec
dec
inc
mov
insl
xchg
sub
xor
xchg
aaa
add
dec
xchg
inc
orb
jb
mov
xor
xchg
and
lea
inc
dec
enter
push
push
push
aaa
mov
mov
add
push
push
mov
pop
loopne
add
ficoms
ret
xlat
adc
jo,pt
aaa
sub
nop
out
add
ret
popf
je
push
add
add
add
fcmovnu
fs
mov
xor
mov
sbb
mov
adc
pop
xchg
dec
pop
push
fisttpl
fs
adcb
sbb
mov
xor
xor
negb
dec
cmp
and
inc
push
add
pop
leave
add
add
inc
jbe
or
into
or
adc
fbld
fcomps
dec
adc
jno
jl
fldenv
or
outsl
add
roll
mov
sahf
and
and
cmp
mov
xchg
aaa
mov
loop
sbb
mov
xchg
push
add
inc
ss
es
pop
movl
mov
test
push
sub
sub
sbb
loopne
loopne
add
data16
mov
bound
adcb
pop
insl
repnz
cmp
in
cmc
or
adc
and
adc
mov
adc
or
cmpsl
cs
xor
mov
mov
jl
dec
jge
out
dec
jge
enter
sbb
push
mov
movsb
sbb
jmp
adc
fldl
push
inc
sbb
jnp
js
fists
xchg
clc
imul
lahf
in
insl
mov
sub
shll
push
add
icebp
ret
dec
sbb
insl
push
cld
ljmp
add
mov
fwait
lea
loope
sub
push
adc
dec
push
daa
cmc
sub
adc
push
mov
jmp
and
xor
and
ja
mov
adc
xor
mov
jmp
adc
in
pop
ficomps
jl,pn
adc
adc
mov
ds
divl
dec
or
sbb
inc
dec
xor
fdivs
int3
add
mov
int3
add
push
or
cmp
jo
out
nop
push
std
stc
pop
mov
mov
loop
xchg
or
jmp
pop
lcall
inc
jmp
das
push
mov
push
into
movl
or
pop
lods
jge
jne
dec
cmp
mov
movsb
and
adc
xchg
call
mov
pop
rclb
sahf
mov
adc
lods
push
hlt
mov
or
test
test
sbb
sub
js
and
movsl
test
inc
mov
shlb
pushf
pop
push
xor
xor
and
and
rcl
pop
add
or
pusha
mov
pop
jne
stos
mov
lock
mov
lds
pop
xchg
into
pop
mov
stos
ret
sub
or
push
test
jne
mov
add
sbb
lret
out
out
add
mov
outsl
roll
xchg
aam
cltd
fidivs
sbb
std
mov
jns
push
pop
mov
shlb
push
sbb
icebp
dec
rcrl
ss
push
into
icebp
sub
xchg
fwait
xor
mov
sbb
call
adc
shlb
add
mov
movsb
test
loopne
sbb
sbb
xchg
roll
add
adc
jns
push
xor
push
add
and
mov
sbb
add
dec
push
add
and
adc
pop
mov
cmp
push
addl
sbb
subb
push
and
icebp
push
sub
pop
jne
xlat
inc
pop
sbb
pop
add
jmp
sbb
jne
adc
xchg
lods
jmp
pop
add
inc
loopne
adc
data16
add
adc
bound
lods
adc
sbb
adc
and
inc
and
jmp
xor
adc
and
out
loopne
bound
dec
and
inc
icebp
mov
dec
filds
mov
jmp
pop
sbb
sub
lcall
lret
and
inc
push
inc
xor
pushf
inc
pop
ljmp
mov
mov
xor
xchg
hlt
mov
unpckhps
std
fists
push
pop
enter
push
pop
sub
jmp
cmp
xchg
add
in
mov
jbe
fs
stos
pop
sub
xchg
test
push
pop
push
and
js
sub
add
or
int3
xchg
andl
sub
add
and
scas
and
insl
pop
dec
fnstenv
push
sub
test
rolb
sbb
test
ret
dec
mov
test
in
push
push
pop
aas
inc
or
in
xor
push
xchg
adc
jne
and
sbbb
jnp
or
rolb
les
xorb
cmp
and
shll
mov
add
data16
ss
push
xchg
xor
fs
inc
pop
push
jns
add
push
daa
push
and
cmp
test
roll
test
shlb
dec
and
add
jp
sbb
mov
adc
push
sub
push
add
lahf
dec
mov
repz
xchg
mov
lods
aaa
or
add
push
mov
mov
out
adc
and
cmpsl
mov
push
test
cmpsl
push
enter
xor
cld
fidivl
pop
and
mov
shrb
xchg
xor
adc
adc
je
jmp
xor
loope
add
xor
add
pop
shlb
inc
cmp
stos
out
push
cmp
xchg
loopne
push
or
cmp
sub
xchg
pop
cli
insb
testl
stos
adc
push
pop
xor
leave
into
mov
xchg
adc
subb
jmp
mov
mov
jge
push
or
pusha
aad
or
movl
push
int
and
cmp
cltd
dec
sahf
dec
cmp
sub
cmpsb
inc
imul
decl
in
mov
or
add
adc
inc
pusha
pop
add
mov
pop
mov
popa
jo
sub
sub
pop
push
mov
mov
lods
add
mov
test
lea
ja
cmp
sbb
xor
mov
cmp
cmp
loopne
adc
jno
mov
call
int3
mov
mov
sahf
jno
adc
mov
jecxz
jecxz
and
fsubr
push
movsb
fildl
or
addb
add
mov
push
pop
pop
cmp
inc
sub
outsb
scas
ljmp
cmc
outsl
add
ss
iret
mov
fsubl
push
jl
lahf
ljmp
push
sub
push
sbb
adc
pushf
scas
inc
add
pop
fdiv
sub
push
xchg
push
fsubl
lods
add
mov
sbb
inc
or
push
clc
insl
andl
test
std
pop
movb
add
jmp
std
popa
fs
push
into
mov
pop
xchg
out
push
jp
dec
inc
push
inc
add
push
cmp
inc
cmp
fnstcw
cwtl
mov
outsb
or
inc
shrb
scas
pop
call
fsubr
clc
testl
push
mov
subb
pop
inc
xchg
aam
subb
js
adc
xorb
pushf
nop
cmc
dec
mov
sbb
rorb
std
cmp
cmp
popf
jno
mov
jle
mov
test
pop
adc
in
arpl
les
loopne
jno
addr16
sbbl
and
inc
pop
xchg
in
pop
xchg
in
and
leave
push
test
je
add
or
or
cld
in
test
or
cmp
or
push
mov
insb
push
rolb
xchg
sub
jo
in
mov
inc
fistpl
mov
cmpsb
jbe
mov
sub
or
sub
and
popa
int
lods
adc
gs
sbb
ds
or
les
mov
dec
or
add
filds
add
es
add
mov
js
jo
xchg
sbb
or
je
inc
jp
ds
mov
sti
jg
enter
in
in
sbb
xor
out
fwait
out
mov
dec
push
cmp
sbb
pop
mull
sub
adc
inc
es
dec
adc
sbb
dec
rcll
adc
lcall
sbb
and
enter
gs
orb
pop
cmp
or
inc
inc
es
or
sub
xchg
outsl
adc
xor
pop
add
dec
test
or
insb
mov
and
pop
int3
sub
repnz
adc
jns
inc
dec
adc
fstpt
xor
jecxz
outsb
movsb
inc
js
in
cmp
js
or
push
adc
push
faddl
inc
test
lods
mov
inc
push
and
pop
jb
adc
pop
add
pop
jmp
std
dec
enter
push
push
jae
enter
xor
sub
add
enter
daa
sti
les
xor
push
push
pushf
add
or
inc
sbb
fnsave
dec
lahf
push
shl
mov
inc
and
pushf
mov
xorl
add
pop
clc
adc
std
or
cmp
les
cmp
test
leave
and
arpl
sbb
or
movsb
in
mov
mov
lcall
xor
ja
enter
mov
inc
pop
lahf
lods
movaps
into
mov
sbb
mov
stc
shrb
call
lahf
push
lahf
lahf
push
outsl
sbb
or
push
or
xchg
stc
sbb
idivb
testl
cmp
sbb
mov
push
cmc
adc
dec
out
pop
or
out
pusha
sub
mov
adc
enter
jmp
pop
mov
pop
add
and
adc
mov
jge
mov
or
jl
loopne
outsl
mov
daa
push
adc
xchg
cltd
popa
dec
cmp
push
pop
scas
inc
bound
rcrl
and
lret
sbb
inc
sbb
and
dec
fs
add
mov
add
xchg
fbstp
in
sub
cmp
sbb
dec
arpl
jo
fs
inc
pusha
and
inc
and
add
pusha
test
movsl
dec
mov
jb
lret
mov
add
mov
mov
xor
sub
mov
shll
insb
icebp
mov
adc
lea
cmp
iret
frstor
xor
push
mov
add
and
jge
mov
adc
ja
je
fiaddl
jle
dec
clc
and
decl
sub
or
jge
push
lock
add
dec
in
jg
mov
mov
ret
jg
leave
add
or
mov
add
inc
add
pop
je
or
movd
mov
fisubrl
jg
xor
jne
push
aas
cmp
jg
xchg
lea
outsb
mov
lea
inc
test
jmp
int3
add
enter
clc
push
add
hlt
sbb
aaa
out
pop
jbe
rolb
cmpb
xchg
jb
js
pop
ret
sub
xor
or
pop
xor
das
in
into
adc
js
jle
or
add
dec
sub
jp
lcall
nop
add
pop
test
aaa
insb
call
push
test
test
jle
sbb
mov
and
mov
and
test
cmp
xor
test
mov
and
aas
movsl
xchg
not
mov
push
jno
sbb
push
or
xor
cmpsl
aas
ret
adc
jecxz
mov
xchg
dec
add
push
repnz
add
inc
ret
and
push
shlb
cltd
aad
cmp
les
jg
mov
imul
cmp
xor
aaa
ss
cmp
adc
xchg
add
mov
pop
add
outsl
pusha
add
clc
dec
and
jnp
add
push
mov
mov
dec
sbb
loope
xor
jne
xor
sbb
jns
xchg
jo
jo
or
jl
mov
jo
add
inc
mov
mov
js
mov
test
iret
lret
push
push
test
subb
nop
pop
jo,pt
jbe
jo
aam
push
xchg
xlat
jecxz,pn
mov
push
mov
rcrb
fcomps
incb
jle
mov
add
xor
call
in
push
sub
pop
xor
push
add
add
xor
adc
push
xor
pop
fstl
fs
jae
add
mov
jl
push
mov
or
add
cmc
sub
xchg
cmp
pop
addb
mov
inc
fadd
inc
push
inc
pusha
pop
xchg
andl
ja
pop
push
add
stos
sbb
lds
dec
mov
jle
aas
js
sarb
rorb
pop
lcall
sub
fs
dec
jo
fs
mov
fimuls
subb
add
xor
xchg
pop
mov
and
loopne
aad
or
push
inc
sub
or
xor
inc
test
cmpb
add
imul
adc
xor
or
addl
test
or
xor
mov
jmp
insb
ss
mov
pop
add
adc
test
femms
aad
add
test
push
adc
push
sbb
push
lahf
add
push
shlb
push
push
fiaddl
ds
inc
leave
movl
leave
or
push
add
xor
icebp
mov
xor
sub
sbb
and
inc
repz
dec
and
sarl
xchg
jmp
push
ss
cs
out
addl
sbb
pop
insl
sahf
fmull
mov
adc
adc
cmp
stos
ret
add
ret
je
sub
sarb
dec
xchg
push
aas
push
push
cmp
dec
dec
jmp
lahf
mov
xor
cmp
test
push
xlat
test
jmp
sbb
jo
rcll
je
inc
inc
add
out
dec
sbb
adc
jno
push
push
push
inc
mov
sub
and
push
and
and
sub
mov
lea
adc
scas
ret
outsl
fdivs
jne
mov
loop
xchg
inc
add
jns
js
sete
add
push
fistpll
jg
adc
mov
dec
add
rolb
ret
pop
adc
sub
xchg
dec
lods
xlat
ss
mov
add
sbb
adc
test
and
push
sbb
mov
loop
xor
ret
push
sub
jmp
inc
shrb
push
add
clc
ss
or
subl
add
fistpll
stos
add
nop
pop
stos
dec
add
cmc
dec
cmp
mov
or
xchg
adc
xor
pop
test
test
jo
idivb
rol
push
mov
ljmp
dec
and
aam
push
or
lea
or
out
and
mov
mov
jecxz
rorl
dec
inc
add
and
pop
mov
cmp
int
loope
pop
mov
adc
cmp
push
mov
rorl
lea
sbb
mov
add
adcl
setge
sub
cmpsl
shlb
sub
sub
cmp
movsl
stc
and
add
inc
out
push
jns
or
xor
cmc
fcoms
pop
vmaskmovpd
fcomps
inc
andl
xchg
and
and
and
cmp
mov
pop
iret
cmp
lahf
mov
das
add
jg
and
test
es
jo
test
inc
or
adc
adc
inc
add
adc
fwait
dec
mov
or
jmp
daa
ret
mov
enter
dec
sbb
adc
sub
fs
sahf
pop
adcl
or
andl
and
aaa
push
and
add
pop
push
in
pop
adc
sbb
mov
call
or
xchg
addl
cmp
or
and
nop
in
mov
imul
push
mov
cmpsb
dec
sub
fisttpl
outsb
insl
rclb
mov
and
sbb
mov
daa
sub
push
push
leave
xchg
push
mov
inc
lock
or
adc
adc
xchg
sub
jns
mov
loopne
mov
pop
push
mov
shrb
fidivrl
movb
xchg
aam
outsl
or
sub
test
jbe
scas
bound
inc
testl
dec
psadbw
out
mov
add
or
fcoml
lock
mov
or
aas
fnstsw
or
adc
and
pop
dec
rorl
xchg
push
mov
mov
movzwl
aam
xchg
scas
bnd
xor
pop
lret
xchg
push
push
mov
adc
xchg
loopne
mov
push
shll
sub
add
das
loope
push
je
push
mov
add
mov
ret
repnz
xchg
xor
push
adc
or
fwait
jno
inc
or
pop
push
mov
decl
xor
hlt
cmp
jne
cmp
imul
inc
aas
mov
ja
bnd
imul
lock
aaa
mov
sbbl
testl
notb
fadds
ficompl
pop
daa
cli
sti
adc
xchg
sub
sbb
xchg
lds
mov
dec
lea
adc
add
sub
or
dec
cmp
rorl
push
push
imul
ljmp
call
push
add
mov
adc
sub
ds
fidivrs
sub
fistpl
pushl
mov
jb
lods
icebp
jl
mov
hlt
popf
lsl
pushf
and
pusha
clc
dec
ja
int
bsr
jb
insl
lock
pop
lods
xchg
add
pop
sub
xor
and
lods
inc
dec
and
imul
inc
das
xchg
int
jb
xor
xor
jp
mov
aam
rcll
and
stos
jmp
je
cmpb
pop
fsubr
push
or
or
xchg
loopne
add
out
aad
sti
push
mov
add
sub
dec
sub
add
icebp
shlb
mov
cmp
push
cmp
pusha
or
mov
popf
push
cmp
jge
arpl
jp
add
daa
adc
inc
sbb
xor
lds
cltd
push
into
sbb
and
pop
das
jno
xor
fsubrs
push
es
inc
les
pop
mov
jg
divb
jl
mov
push
jg
push
add
inc
jl
adcb
sub
ret
enter
pop
gs
bound
jge
dec
dec
cld
sub
loope
or
clc
pop
lea
mov
inc
call
mov
jo
clc
shll
rol
push
andb
mov
flds
add
shlb
inc
fistpl
push
or
mov
jo
xchg
add
lods
out
outsl
mov
xchg
and
mov
push
hlt
and
cmp
movsb
shl
adc
pop
xchg
pop
cmpsb
sub
sub
les
movq
push
cmp
sbb
sub
and
mov
sub
or
mov
cmp
mov
push
pop
aad
pusha
mov
loopne
sbb
cmc
aad
ret
outsb
adcl
adc
js
insl
jmp
stos
dec
inc
jle
jg
mov
ret
addb
and
cmp
adc
rcrb
lock
xorl
jp
popa
adc
nop
inc
add
adc
sbb
fsubs
pusha
inc
add
cmp
or
ret
insl
popf
pop
rclb
scas
adc
in
xorb
and
mov
or
imul
push
decl
div
or
ja
jl
mov
and
adc
cmp
jle
mov
sub
out
and
hlt
push
imulb
lock
loop
xor
add
pop
push
int3
push
mov
loopne
insb
lret
or
add
test
sbbb
push
int3
lea
cmpsl
push
lea
rolb
jmp
test
rolb
xchg
mov
dec
push
push
fldenv
popf
icebp
jp
outsb
push
add
and
push
pop
test
shr
cmpsb
push
push
add
dec
xchg
hlt
adc
and
xchg
in
jge
mov
or
mov
sbb
pop
pop
pop
pop
ret
int
js
xchg
mov
mov
sbb
jl
add
ret
pop
mov
add
add
mov
jle
outsb
aas
mov
add
push
lods
lock
nop
add
jne
or
adc
orb
movl
xchg
jg
xchg
sbb
add
push
loope
lcall
sub
add
loop
push
adc
je
cld
stos
mov
movsb
pop
or
lea
sbb
pop
push
add
push
mov
pop
or
push
jb
add
and
adc
jp
mov
andl
test
int3
jmp
test
cmp
cmpl
xchg
loopne
mov
adc
andb
cli
test
jp
pop
mov
xchg
cld
push
push
mov
mov
ljmp
xor
sbb
mull
inc
shlb
inc
mov
jl
push
shll
fnsave
sbb
lea
rcl
sub
push
iret
lods
shlb
fdivl
pop
sub
fiaddl
dec
xorl
dec
push
imul
test
sub
scas
xor
je
stos
sbb
inc
je
or
push
mov
xor
xchg
pop
test
ljmp
scas
les
fldt
jmp
sub
jne
scas
add
pop
f2xm1
push
push
js
sbb
add
inc
mov
subl
push
xchg
pop
pop
ds
mov
adc
in
or
cmp
jae
inc
mov
cmp
push
dec
pop
popa
lods
shll
cli
mov
dec
add
pop
sub
push
add
sub
dec
cli
dec
mov
sbb
fadd
xlat
dec
add
push
cmc
adc
sbb
xor
or
inc
mov
xchg
pushl
adc
add
and
loopne
sbb
pusha
or
add
mov
jae
movsl
xor
cmp
enter
adc
sub
stos
and
call
test
icebp
mov
or
sub
push
xor
push
sbb
dec
test
loope
xchg
in
push
ds
and
loopne
das
push
test
dec
push
push
cmp
gs
xor
je
adc
loopne
mov
es
push
push
scas
jmp
mov
xchg
into
add
sbb
movsb
pop
jo
dec
cmp
add
call
sti
cmp
roll
dec
lea
push
lret
cmpsl
jecxz
dec
jnp
cmp
xor
sub
push
pop
out
inc
lock
jmp
mov
xchg
push
add
push
out
xor
sbb
sub
scas
pop
xor
in
push
shll
cmp
mov
lds
ja
add
mov
sub
dec
loopne
cmp
add
sub
pop
push
je
inc
adc
pop
xlat
add
lock
or
faddl
and
cmp
sbb
push
aad
sbb
mov
sbb
adc
sti
int
mov
sub
cmp
fsts
xor
push
int3
sub
push
jne
push
imul
add
and
dec
insl
or
dec
ret
repnz
cmc
xor
add
push
arpl
pop
pop
pop
mov
jle
pop
jne
ret
nop
adc
push
sbb
or
xor
sub
loop
add
lds
sub
lods
lahf
or
xlat
and
lret
push
test
leave
lret
fistl
loopne
and
loope
jne
xor
pop
aaa
jo
dec
or
fisttps
mov
sbb
add
and
pusha
mov
add
add
and
ret
cmp
adc
and
sarl
lret
pushf
sub
and
cmp
push
call
pop
xor
adc
stos
add
mull
into
pushf
in
js
add
jg
push
test
fwait
xor
push
bound
stos
pop
lock
nop
in
xor
pop
push
add
arpl
in
shrl
fs
push
and
scas
push
in
and
add
push
mov
push
push
je
leave
xchg
fdivs
add
sbb
xor
inc
orb
mov
add
ss
sub
xor
dec
cwtl
stos
fbld
lock
push
adc
cmp
push
dec
or
pinsrw
lcall
das
daa
add
and
adc
adcb
stos
js
adc
mov
fisubl
pop
into
stc
lret
mov
pop
jmp
jl
cmpsl
mov
add
xchg
lods
add
sub
cltd
sub
push
cmp
add
rorb
insl
mov
test
stos
cld
mov
out
aas
sub
jns
ficoms
pop
sub
jl
je
ljmp
jl
adc
mov
sub
sbb
popf
ljmp
addl
xlat
dec
pop
add
mov
push
ret
cmpsl
out
ds
adcl
jne
or
add
addr16
jne
sar
mov
cwtl
add
addl
jl
mov
adc
ss
movsl
sub
movl
mov
mov
mov
cmpsl
sub
ss
xchg
and
jo
sarb
scas
xor
xchg
add
loope
dec
popl
popa
mov
pop
xchg
repnz
mov
ret
sbb
xor
sub
sub
orl
les
inc
xchg
inc
jg
jo
shlb
dec
stos
push
fsubs
push
push
mov
movsb
repz
in
loope
sub
pusha
leave
lret
fldt
mov
movsl
pop
gs
scas
lcall
leave
dec
iret
insl
rorl
and
pop
and
push
xchg
pushf
ret
mov
and
push
push
jo
mov
add
sbb
push
push
dec
or
or
sub
inc
push
push
push
sbb
or
mov
mov
push
dec
or
or
sub
xchg
test
pushf
xor
dec
aas
add
rorb
dec
push
dec
mov
or
je
jmp
into
cmp
jb
pop
pop
fdivrs
aam
add
aam
push
add
pushl
push
inc
sub
test
add
add
mov
adc
in
add
cmp
mov
jle
loop
fdivr
rorl
sub
imul
add
in
add
jle
cmpb
jno
mov
sub
or
jge
lret
scas
lods
jmp
xor
dec
add
lcall
das
cmp
sahf
add
rcrl
push
push
and
dec
sub
pop
push
bound
cld
testl
xchg
lea
add
pop
push
push
push
push
xchg
inc
sub
ss
loopne
push
push
in
jg
aam
push
add
add
push
shrb
add
add
dec
mov
mov
adc
jb
out
popf
or
mov
js
data16
jmp
mov
sbb
pushf
add
mov
in
std
inc
or
or
mov
xchg
dec
insb
enter
aam
out
push
rorl
ret
mov
fdivs
mov
add
push
xor
test
cmp
int3
push
mov
or
pop
jne
test
ret
pop
xor
mov
add
loop
xor
je
insb
adc
add
xchg
ja
pop
and
ljmp
popa
test
repnz
pop
jo
inc
es
jmp
and
adc
pusha
and
aad
xchg
mov
xor
sub
lods
pop
mov
add
add
out
and
aas
push
push
xor
add
cmp
sub
add
or
add
add
sub
mov
cmp
mov
xor
jo
lock
ficompl
mov
dec
clc
xchg
push
push
vxorps
lods
mov
ds
or
push
adc
adc
insb
rclb
add
inc
lds
int3
push
push
mov
mov
mov
add
jl
mov
pop
or
or
mov
add
fcomps
adc
or
mov
or
clc
cld
mov
mov
cmp
add
shll
mov
xchg
cltd
sbb
or
invd
lahf
out
xor
sbb
cwtl
sbb
sbb
push
xchg
xlat
popf
push
sbb
push
mov
push
shrl
rorb
fmuls
mov
pop
leave
add
jge
add
inc
cld
xor
idivb
enter
cld
add
sbb
jmp
leave
sbb
push
es
push
in
insl
mov
fnsave
xor
out
ds
cmp
push
mov
sub
or
push
pop
cmc
xchg
and
mov
xor
push
add
ret
mov
or
pop
cli
sub
addr16
push
or
pusha
mov
mov
inc
call
push
ret
ret
xor
push
dec
cmp
rol
inc
pop
push
addr16
rcrb
pop
and
pop
ficompl
pop
lahf
shll
mov
add
or
inc
lea
adc
jg
push
es
scas
or
adc
aas
xor
xor
push
sbbb
cmpsb
decb
nop
pop
xorl
mov
insb
cmp
in
pop
add
sarb
rorb
ret
mov
testb
dec
lock
shlb
cmp
push
data16
call
push
jg
mov
jnp
push
in
hlt
scas
insb
popa
push
stos
or
pop
mov
sub
mov
je
inc
jnp
cmp
jae
mov
dec
push
mov
xchg
sub
pop
sbb
dec
sub
jb
pop
lea
mov
test
xor
pop
or
cmp
xchg
sbb
pushf
and
call
sub
stos
jl
ret
shlb
xchg
dec
movsl
xor
cmp
and
lret
and
add
sbb
jge
sbb
cld
ret
jge
movb
push
sbb
jo
gs
or
mov
cld
sub
inc
inc
mov
or
mov
jns
lea
jne
iret
adc
and
cld
mov
les
test
add
pop
cmpsb
mov
mov
sub
fwait
sbb
dec
dec
xchg
andps
inc
in
dec
and
pusha
in
mov
dec
gs
cmp
rorl
and
push
pop
out
movl
or
adc
sbb
xchg
loope
pushf
cmp
push
ja
mov
inc
iret
mov
testb
movsb
int3
push
call
jl
mov
dec
fistpl
xchg
jg
or
sbb
pop
and
pop
push
nop
ret
outsb
lock
sbb
loope
ds
add
mov
addr16
lcall
mov
mov
cs
or
jae
es
mov
test
pop
or
lods
outsb
sbb
sub
add
int
xchg
xor
xor
mov
mov
inc
jne
shr
adc
xor
or
clc
movl
jecxz
add
mov
add
push
shl
ret
dec
push
dec
add
andl
xchg
in
jmp
lea
sarb
lea
push
cmpsb
mov
inc
js
lods
adc
sub
and
mov
pusha
inc
es
push
les
hlt
inc
pop
ja
stc
and
add
jo
test
push
je
ds
test
and
mov
je
mov
and
push
mov
cmp
mov
cmp
adc
test
roll
pop
sub
cmp
push
push
mov
mov
jo
jl
add
sbb
sub
adc
and
mov
cmp
test
dec
adc
lcall
push
push
loope
jge
xor
mov
loopne
lods
nop
dec
popf
sar
movsl
cmc
push
lea
push
push
sbb
jl
add
cmp
jne
dec
rcrb
mov
or
mov
xchg
sahf
mov
and
sub
adc
or
mov
mov
xchg
bound
mov
incl
xor
and
pop
lods
pop
js
out
and
rorl
test
sbb
push
cmpsl
fisttpl
fistpll
rcrl
mov
inc
mov
add
xor
shrb
or
inc
cmp
adc
fs
stos
adc
inc
outsb
inc
sbb
jmp
mov
adc
jne
pop
push
push
fld
pusha
xchg
pop
orb
daa
jne
mov
push
scas
mov
sbb
or
iret
or
jge
push
sahf
adcl
mov
outsl
imul
lods
push
mov
push
inc
je
add
call
lods
sbb
and
loopne
std
add
mov
adc
sbb
inc
fiadds
sub
jmp
or
nop
mov
push
shrl
mov
cs
lock
or
adc
and
xchg
sub
push
lea
jl
push
mov
push
adc
fwait
mov
push
insb
fs
mov
je
mov
enter
hlt
int3
jp
inc
sbb
jnp
xchg
jle
lds
push
sub
sbb
push
pop
xchg
fdivl
ficompl
mov
pop
pop
cwtl
pusha
nop
in
das
sbb
adc
mov
push
add
adc
enter
sbb
xor
dec
xlat
adc
popf
mov
sub
fsubrs
jne
push
loopne
js
pop
inc
mov
cli
xor
sub
sub
mov
inc
inc
icebp
push
pushf
and
push
xchg
xchg
sub
adc
ja
jle
dec
jmp
mov
movsl
sub
das
xchg
lock
and
clts
mov
add
pop
inc
push
or
add
cmpsb
push
xor
out
gs
pop
and
clc
add
dec
icebp
dec
std
mov
aas
or
adc
ljmp
xchg
mov
fsubrs
adc
repnz
adc
add
stc
fldcw
push
arpl
in
jns
mov
shll
aad
cmc
lret
adc
lock
adc
fsts
movsb
loopne
xor
mov
dec
mov
inc
sbb
pop
push
xchg
sub
inc
adc
push
push
mov
jl
adc
mov
xchg
sbb
test
push
sarb
sbb
fnstenv
stos
ljmp
cmp
repnz
push
in
pop
shll
cmp
push
sbb
inc
movsb
push
dec
daa
xor
cmp
rolb
hlt
sub
movsb
outsl
mov
scas
les
mov
setae
pop
addr16
pop
icebp
cmpb
cmp
test
add
cmp
xor
cmp
nop
mov
push
mov
mov
cmpsl
adc
dec
or
jp
mov
sbb
clc
enter
pop
mov
pop
push
and
sbb
xor
mov
out
mov
adc
dec
xor
or
stos
lock
into
vpunpckldq
sbb
push
and
push
loop
scas
outsl
std
dec
add
inc
dec
adc
mov
pushf
mov
cmp
jo
xor
dec
and
pop
sub
push
jl
bnd
test
pop
xor
sbb
push
adc
xchg
adc
jmp
push
push
push
xor
fisubl
mov
fstp
daa
xchg
push
movsbl
das
or
inc
and
mov
or
shlb
pop
adc
sbb
call
or
sbb
sbb
cmp
adcb
and
shr
sub
sub
cmc
subb
jne
xor
lock
pop
ja
jmp
ss
pop
and
push
add
daa
pop
pusha
sub
mov
mov
jne
gs
sub
mov
sbb
pop
fisubl
push
scas
cwtl
add
push
xchg
out
cmp
in
dec
sub
leave
popa
jne
call
pop
orl
ss
cs
dec
ljmp
mov
cmpsl
adc
loop
js
push
push
fidivrs
mov
jmp
sub
int3
inc
jo
insl
stc
jno
push
and
sbb
inc
scas
sbb
cmpsl
jo
fwait
xlat
adc
dec
inc
jle
ret
testb
jl
sbb
or
pop
xor
mov
add
mov
sbb
mov
outsl
clc
dec
movb
xchg
jne
push
push
pop
sub
or
inc
or
adcb
mov
add
fadds
push
adc
inc
pop
movsl
aas
jne
sub
fldenv
repnz
add
ljmp
mov
cmp
dec
or
or
sbb
jle
mov
xchg
jne
ja
pop
and
sbb
ss
lods
sbb
push
roll
jecxz
int3
sub
int
inc
inc
addr16
mov
sbb
or
nop
push
xor
arpl
xor
movsb
iret
and
shll
outsl
adc
mov
or
lret
popf
flds
rolb
rcrl
mov
xor
sarb
pop
sbbb
or
inc
and
and
pop
rclb
das
xor
inc
add
pop
shrb
dec
rolb
scas
mov
mov
dec
sub
pop
add
xor
add
fadd
add
loopne
movsl
roll
xchg
into
inc
jae
cmp
cmp
add
mov
cld
xor
adc
stc
sbb
add
jl
push
add
xchg
cmp
sbb
subl
leave
fst
inc
or
test
sbb
sub
fstl
outsl
loope
insl
inc
mov
or
fchs
add
sub
and
fimull
and
sub
xor
mov
and
negl
daa
cmc
or
loope
or
and
cmp
loopne
or
mov
sbb
das
sub
adc
pop
hlt
or
movsb
sti
nop
rcrb
pop
cmp
cs
xor
repnz
jp
in
xor
es
dec
in
or
jo
jo
xor
sub
cmp
xchg
jge
xor
add
sub
js
mov
in
xchg
fs
or
mov
sbb
xor
rcll
scas
pop
test
push
insb
jmp
sub
push
push
xlat
add
adc
and
or
repnz
push
xchg
pusha
sbb
stos
mov
decl
and
gs
insb
and
popa
and
mov
fdivs
loopne
and
jnp
inc
mov
cmpsb
pop
pop
pop
shrb
push
add
mov
push
or
jge
rcl
pop
add
fs
in
shr
xor
jo
jne
mov
push
imul
nop
lret
pop
adc
in
sbb
pusha
cltd
stos
or
aas
push
push
repnz
pushf
xchg
bound
mov
xor
sbb
push
push
add
int3
xor
out
das
mov
or
add
inc
xchg
jl
mov
push
xor
dec
mov
inc
push
inc
or
and
jns
and
and
hlt
test
inc
push
ret
arpl
add
ljmp
inc
cmp
mov
push
aam
sub
loopne
and
add
in
jbe
ret
orl
jns
adc
add
adc
leave
mov
xlat
cli
inc
push
lea
sbb
xor
pop
cld
cmpl
inc
out
adc
jg
lret
push
rorb
icebp
mov
stos
fstl
mov
push
fstpt
lea
mov
popa
sbb
call
add
loopne
or
jge
adcl
push
loopne
mov
call
lea
repnz
jge
jge
sub
or
stos
pop
mov
inc
mov
icebp
mov
inc
xchg
dec
loop
ds
les
inc
loope
cmpsl
pusha
movsl
aam
and
cld
adc
sub
and
sbb
dec
push
icebp
popa
js
or
enter
add
dec
cmp
pop
sub
and
push
or
pop
add
pop
bnd
outsb
inc
sub
test
and
shll
and
and
mov
sub
jl
fcoms
hlt
arpl
ror
and
push
out
inc
pop
rorl
in
cmc
inc
sbb
imul
ljmp
mov
or
sbb
mov
jns
add
je
imul
xchg
mov
loop
in
loopne
out
loope
imul
cltd
push
adc
adc
adc
xor
inc
mov
je
mov
jns
inc
bound
pop
es
mov
sub
cltd
pop
ret
jne
xchg
adc
in
in
enter
wrmsr
cmp
aas
cmp
cmp
cmp
inc
pop
inc
or
mov
jecxz
inc
jl
xor
jo
sbb
cmp
mov
lcall
in
fdiv
insl
lcall
fcmovnu
adc
mov
push
mov
shr
adc
push
or
jecxz
push
rcll
push
inc
lods
push
daa
sub
adc
cwtl
movsl
push
sbb
aaa
pop
subb
jne
lds
dec
xchg
insb
mov
outsl
and
cmp
adc
fstpl
mov
xor
es
pop
xor
mov
and
or
ffreep
pop
ds
popa
pusha
jae
loopne
push
aas
es
in
dec
into
test
mov
and
mov
mov
adc
dec
inc
imul
ja
and
and
add
sub
shufps
pop
cli
jns
loopne
out
mov
movsb
iret
mov
add
ljmp
push
sbb
dec
add
and
inc
inc
dec
test
sub
mov
fidivs
pusha
push
xchg
inc
adc
push
adc
pop
cs
push
push
cmp
imul
adc
ja
jecxz
sub
adc
fidivs
loope
lret
sub
dec
mov
mov
and
mov
add
lret
dec
mov
push
adc
push
adc
or
mov
scas
push
insb
jge
cmp
jne
push
mov
pop
adc
imul
cmc
ret
add
pop
dec
inc
jmp
daa
jmp
and
sbb
rclb
aas
adc
insb
xchg
pop
add
loop
les
je
xchg
icebp
adc
inc
inc
inc
sub
inc
out
cmp
mov
test
faddl
push
les
mov
popl
adc
subl
xor
rorb
cmp
mov
scas
xor
inc
cmp
and
push
sub
arpl
sub
ret
into
mov
push
or
fbstp
mov
loop
fs
loopne
jp
mov
fwait
imul
xchg
push
call
scas
in
push
adc
xor
pop
jl
jno
xlat
fsubl
fdivrl
mov
dec
add
js
xchg
fiaddl
shlb
sub
and
or
nop
es
push
sbb
cs
push
fs
push
call
in
shlb
sub
add
and
push
clc
jg
or
lea
push
lea
push
inc
push
daa
xor
add
dec
sub
add
cwtl
es
add
xchg
adc
jnp
push
cltd
pop
and
sub
xchg
inc
xchg
sarb
cmp
xchg
loope
stos
cmp
cmpsl
and
mov
cmp
or
mov
lods
fcmovnbe
cltd
shlb
jge
loopne
cmp
adc
sub
add
sub
sbb
out
cmp
cmp
andl
pop
xorb
and
imul
push
inc
fldl
and
sub
das
sbb
or
pop
sbbb
dec
adc
or
and
mov
or
loopne
push
addr16
sbb
bswap
jl
mov
cmpsl
das
and
lea
outsb
adc
hlt
cld
mov
mov
push
jg
cmpb
jne
inc
sub
aad
xchg
out
dec
or
or
pop
cmpsb
and
fisubl
cmp
push
sbb
push
or
outsl
xchg
pusha
or
xchg
lea
push
add
push
test
daa
clc
aaa
cs
inc
rdtsc
mov
or
xor
pop
mov
sbb
mov
sub
add
or
or
dec
mov
ud1
sub
les
add
xlat
inc
or
add
add
and
inc
lea
push
add
mov
pop
xor
repnz
jl
sbb
sub
aas
adc
xchg
cmp
aas
out
push
lea
push
fiaddl
add
sti
mov
pop
fdivs
fstl
xor
mov
pop
stos
ret
mov
shrb
bound
sub
sub
inc
mov
mov
adc
xor
mov
xor
loope
stc
jns
add
incb
pop
push
push
popf
pop
enter
scas
or
mov
push
dec
movsl
mov
mov
add
fmul
ret
push
cmp
insb
in
sbb
cmp
add
push
test
cmp
add
idiv
and
cmp
das
push
xor
lods
jbe
xor
or
xchg
dec
push
movsl
rorl
inc
or
aad
sub
xor
push
sub
movsl
adc
enter
push
sub
sub
jmp
sub
and
mov
add
shlb
ret
int
popa
push
mov
xor
push
mov
es
daa
xor
out
aas
adc
aam
adc
pushl
pop
mov
sbb
mov
mov
adc
and
imul
imul
fmull
repz
iret
cmp
jne
add
adc
jne
xchg
test
push
popa
push
repz
mov
fisttps
push
insb
loop
jmp
mov
sti
hlt
ret
or
repz
je
pop
mov
push
mov
je
lods
bnd
repz
into
add
xchg
repnz
loop
jmp
sbb
jmp
sub
sarb
or
test
sub
arpl
loopne
sbb
mov
mov
dec
sbb
lret
mov
ds
pop
push
adc
adc
lret
and
sbb
mov
mov
movsb
sbb
add
push
pop
adcl
add
mov
xor
xchg
cmp
test
ret
cmc
inc
mov
dec
xor
pop
es
sub
inc
cmp
add
fadds
aad
sbb
cmp
decl
jmp
rorb
pop
negl
push
lea
xor
lock
sub
cmp
jne
pop
dec
test
adc
loop
push
sub
pusha
cmpsl
dec
add
xor
mov
dec
hlt
add
push
dec
aad
subb
mov
push
xor
or
mov
push
push
lds
mov
and
xchg
imull
fimuls
test
xlat
int
push
jb
pushf
cmp
add
sbb
inc
sbb
mov
das
dec
mov
push
adc
leave
and
lea
xchg
inc
sbb
sbb
sbb
sub
add
add
jmp
push
in
jl
sub
hlt
pusha
add
loop
push
fs
lahf
and
test
inc
push
sbb
cltd
add
sbb
sbb
mov
dec
sbb
mov
sbb
adc
cmpsl
pushf
inc
cmp
pop
xchg
mov
push
leave
pushf
test
fisttps
ljmp
xchg
or
dec
mov
aam
cmp
push
dec
inc
test
aaa
and
cmpsl
inc
je
dec
loope
imul
mov
sbb
fs
hlt
dec
adc
dec
push
xchg
pop
inc
push
add
cmp
mov
dec
fnstcw
push
push
push
xor
sub
mov
ret
jns
xchg
xor
sub
imul
loope
inc
stc
ja
mov
ficompl
adc
ss
add
rcr
cmp
or
stos
outsb
fcom
mov
inc
jbe
dec
xor
add
and
leave
or
add
sbb
cmp
frstor
cltd
fstpl
add
jae
dec
or
mov
push
test
sbb
jmp
or
cwtl
popa
mov
in
js
or
jo
and
add
imul
sbb
fstps
push
pushf
push
lods
enter
in
test
pop
hlt
and
or
jmp
or
xor
lock
dec
mov
jbe
xor
inc
adc
into
jnp
sbb
cmpb
sbb
adc
mov
popa
loopne
popf
adc
mov
ret
xlat
add
and
lea
push
enter
push
xchg
xchg
cmpl
lods
cli
xor
sbb
mov
xchg
loopne
mov
inc
call
stos
add
xchg
je
jl
sbb
ret
mov
sub
and
sub
sbb
lock
push
fcoms
mov
aad
xchg
and
lods
dec
xor
and
push
inc
loopne
movsb
orb
xor
xchg
hlt
mov
bound
inc
sbb
call
or
sub
xor
test
push
pop
pushf
dec
pop
pop
jmp
inc
or
xchg
mov
xor
xor
ret
inc
int3
shrb
sbb
push
or
int3
aam
adc
imul
enter
adc
dec
sbb
push
add
sbb
xor
push
enter
or
lock
addr16
jmp
and
js
push
les
decb
inc
cld
imul
and
push
mov
xor
push
mov
cmp
and
and
int3
aaa
push
xchg
aas
jl
push
rcrb
imul
mov
test
adc
fidivrl
popf
shrb
adc
mov
jbe
and
leave
and
sbb
push
sub
repz
cwtl
adc
and
rcrb
pop
mov
inc
jb
inc
icebp
pop
mov
pop
inc
dec
push
push
dec
rcrl
test
pop
cmpsl
pusha
ds
pop
mov
ret
addr16
pop
lea
cmp
jne
cmp
imul
mov
and
int3
pop
movsl
pop
aas
rcrb
mov
mov
add
push
push
push
or
cmp
es
pusha
sbb
movsl
jg
rol
mov
flds
enter
data16
xor
lock
mov
cmp
adcl
cs
xor
out
and
mov
add
jle
xchg
inc
add
pop
sbb
cmp
je
inc
dec
sub
ja
cmp
jl
jmp
jge
clc
sbb
mov
repnz
pushf
adc
ficoms
dec
sub
dec
push
sbb
daa
add
and
add
and
testl
add
adc
add
push
mov
ret
aad
loopne
push
shr
xor
inc
add
mov
shll
add
arpl
lods
in
push
cmc
arpl
test
push
sbb
das
adc
dec
shlb
call
mov
je
jmp
inc
push
xor
mov
sub
cmc
out
fsub
sbb
loope
jne
mov
je
int
and
sub
or
fs
add
mov
sub
pop
and
subb
cmp
add
je
sbb
add
sbb
mov
pop
nop
movsl
sbb
xor
mov
push
mov
or
push
and
rorb
add
insb
stos
xorb
xchg
ss
sarb
push
in
mov
pop
fnstsw
dec
jns
mov
xlat
inc
adc
fdivp
mov
mov
ret
fidivs
and
addb
xor
fisubl
push
lcall
push
add
adc
jb
mov
mov
adc
data16
and
sub
gs
push
add
loopne
or
jbe
push
loopne
fwait
add
or
adc
stos
hlt
loopne
mov
add
cwtl
jl
push
repz
negb
sbb
and
fs
hlt
cwtl
pop
push
outsb
loop
lods
mov
xchg
cmp
sub
leave
dec
sub
icebp
xchg
add
add
and
jo
ja
ljmp
push
jmp
repz
xchg
popf
jns
push
cli
mov
inc
test
dec
or
hlt
loop
rorb
push
ss
adc
loopne
je
and
bound
daa
pop
add
xor
push
fsubl
push
adc
xor
mov
stos
adc
push
popl
push
dec
sbb
subb
and
cmp
dec
xor
cmp
jg
cmp
adc
dec
cmp
pop
stc
push
inc
and
add
jns
mov
jns
push
mov
mov
test
movsb
cmp
push
push
mov
sbb
jns
or
adc
mov
les
mov
push
lods
mov
aaa
pop
inc
or
shlb
pop
stc
jb
or
ss
add
cmp
jae
push
cs
rdmsr
adc
in
aad
mov
cmp
sub
push
mov
hlt
jno
in
mov
pop
sbb
dec
cli
cld
call
mov
ret
lret
push
xor
cmp
lods
insl
cld
push
shlb
fstpt
outsb
add
das
test
push
or
inc
add
cmp
add
aad
rcrl
fdivl
sti
mov
pop
mov
mov
and
hlt
pop
stos
enter
jle
jl
xchg
and
pop
adc
push
movb
stos
test
mull
add
push
sbbb
pop
push
jne
jp
add
xor
andl
adc
adcl
jne
cli
or
mov
cmp
cmc
adc
incb
inc
bound
les
xchg
pop
pop
ret
lods
sbb
xor
dec
sub
add
and
dec
scas
jo
add
insb
mov
mov
adc
cmpsl
lea
push
push
push
das
fs
notb
jnp
sbb
mov
cmp
cltd
ret
jge
lock
mov
pushw
and
sub
add
sub
mov
sub
orb
mov
and
jne
or
inc
dec
and
push
sahf
mov
mov
inc
pop
rcl
pop
or
inc
push
push
push
mov
icebp
jns
or
push
push
dec
or
mov
xchg
cmp
push
cmpsl
mov
clc
push
idivl
shr
ss
test
add
adc
pop
or
jo
or
cli
mov
add
jecxz
clc
cmpsb
enter
adc
push
andps
cmp
and
push
adc
adc
imul
jle
add
and
xor
daa
sbb
aam
or
cmc
mov
mov
cld
xlat
icebp
cmpsl
aas
mov
int3
sub
mov
adc
call
jl
or
dec
nop
or
cmpsb
sub
inc
jb
lea
je
int
adc
xchg
jge
sub
add
sub
sahf
hlt
adc
lds
push
mov
cmp
fadd
mov
jl
stos
inc
ss
and
xchg
dec
arpl
sub
or
xchg
sbb
add
sub
test
mov
cld
roll
mov
adc
mov
jle
inc
and
xlat
stc
xor
mov
adc
or
adc
mov
pop
imul
push
pop
mov
sbbl
call
and
add
xchg
lods
mov
mov
imul
sahf
pusha
int
lea
inc
push
subl
cmpl
int
push
lock
mov
sub
jns
fimull
xor
scas
xchg
out
cmp
shll
jmp
test
xor
scas
lock
jmp
xor
enter
push
dec
mov
pop
loope
jmp
xchg
cmpsl
dec
dec
fisubrs
jecxz
adc
sub
inc
and
iret
push
repnz
add
sub
sbbb
jg
inc
xchg
inc
xor
add
stos
sbb
sub
popa
leave
push
cmp
pop
daa
jno
ret
jmp
in
add
pop
ja
push
push
lods
push
add
cli
out
xor
push
push
nop
lret
adc
add
or
xchg
sbb
add
sub
sbb
or
or
nop
lret
or
movsb
xor
or
xchg
add
inc
dec
add
inc
sub
fs
dec
insl
xchg
sbb
push
xchg
sbb
or
jl
inc
insb
lea
cs
jl
sahf
mov
mov
or
xchg
xor
or
inc
int3
shlb
xchg
push
xor
in
pop
add
dec
mov
or
adc
jge
dec
adc
sub
pop
shl
jbe
pop
inc
pusha
add
pop
mov
enter
pop
pop
mov
or
jbe
repnz
xor
mov
leave
inc
add
mov
pop
mov
testb
push
leave
bound
jecxz
push
cmp
sbb
dec
dec
sbb
add
aam
xchg
xor
pop
rclb
xchg
xor
dec
int3
adc
jae
les
inc
hlt
and
sbb
inc
nop
pop
pop
pop
lea
setne
push
jae
pusha
inc
mov
dec
movsb
sbb
or
dec
lcall
mov
lcall
sub
movsb
sbb
and
sbb
add
dec
lcall
mov
add
dec
dec
pop
dec
adc
or
in
pop
add
cwtl
in
mov
and
lret
in
insb
pusha
inc
mov
sub
xor
mov
push
mov
jmp
xor
jno
ret
add
add
scas
jbe
adc
pop
aad
sbb
xor
sbb
dec
std
inc
or
orl
xchg
sbb
adc
movsb
cmc
xchg
sub
outsl
and
mov
push
adc
lea
filds
cltd
adc
sbb
mov
add
inc
add
sbb
cmp
cmc
inc
aas
addb
xor
mov
mov
xor
pop
push
push
cmpsl
je
dec
loope
xor
add
xchg
in
mov
or
in
and
and
xor
loope
adc
jno
pop
sub
or
fmull
leave
sbb
sbb
pusha
sub
and
popl
sbb
jo
jmp
push
xchg
sub
adc
xor
pop
sub
ja
pop
mov
push
xor
pusha
and
or
fs
push
out
sbb
nop
daa
inc
push
cmp
dec
pop
mov
lret
clc
call
adc
es
cmp
mov
and
push
dec
pop
shrb
subl
sbb
or
lret
mov
xchg
inc
mov
jmp
xor
pop
xchg
jne
sub
jecxz
les
inc
inc
movsb
jle
mov
imulb
or
dec
cld
push
stos
and
lret
cmp
and
or
lock
popa
xchg
je
push
div
sbb
push
loopne
cmp
xor
add
sbb
leave
adc
jo
loopne
sbb
adc
sub
push
push
or
adc
push
sub
add
mov
adc
or
sbb
push
sahf
push
mov
leave
adc
test
and
add
add
lods
cwtl
inc
arpl
sub
cs
loopne,pn
movl
clc
sbb
lods
add
rolb
mov
mov
add
js
mov
into
ret
je
sub
hlt
xchg
aad
outsl
dec
jo
dec
push
adc
clc
jns
and
xor
sub
xchg
adc
mov
and
clc
add
ret
sub
jbe
shrb
mov
lea
jp
or
push
nop
push
ds
mov
lods
add
jne
cmp
push
movl
in
dec
ret
cld
pop
fs
mov
cmp
push
imul
fs
testb
ret
ss
cmp
dec
clc
es
mov
pop
invd
push
add
and
and
fdivrl
add
add
ljmp
add
lds
adc
test
push
inc
fadds
mov
sbb
scas
xchg
fcoml
popf
or
jmp
int3
dec
outsb
jae
dec
mov
push
nop
pop
sahf
add
lods
call
je
push
loopne
mov
mov
push
mov
xchg
push
fimuls
in
push
inc
je
aas
adc
inc
in
js
or
jo
shlb
in
shr
std
mov
cmp
lea
add
sub
shlb
rol
test
and
out
xor
sarb
ret
jnp
loopne
push
call
inc
add
fnstenv
push
mov
les
test
cmp
adc
mov
inc
add
hlt
add
mov
mov
pop
inc
pop
inc
fsubrs
push
lea
inc
sub
mov
in
push
jne
push
ficompl
insb
movb
fimull
jb
xorb
aaa
fstpt
daa
cmpl
jo
adc
pop
inc
fsubr
adc
scas
xor
negb
pop
cmp
dec
fbstp
orl
fmuls
inc
loop
push
and
rorb
dec
inc
incl
stos
inc
or
int3
icebp
sbb
jge
jae
push
aam
lahf
add
add
jmp
mov
mov
and
pop
lods
imul
fdivl
not
xor
cmp
loope
test
push
mov
mov
xchg
andl
insl
inc
movsl
xor
add
xlat
or
gs
cmp
sub
xor
mov
add
cmc
inc
outsb
adc
fs
cltd
push
faddl
loope
pushf
jo
xchg
xor
inc
jp
mov
or
cmpl
sbb
insb
add
dec
add
pusha
out
lds
mov
fiadds
rcrl
insb
jmp
jns
mov
xor
aad
inc
or
pop
and
orl
xlat
or
add
fwait
inc
cmp
adc
sub
addb
dec
cs
inc
and
and
dec
sbb
xchg
inc
push
cvttps2pi
cmp
inc
adc
dec
adc
inc
loope
adc
sub
mov
or
dec
push
add
fs
cmp
inc
fistpll
test
adc
cs
pushf
hlt
cmpb
jl
adc
adc
xor
xchg
movsl
fidivrs
mov
mov
xchg
dec
inc
cmp
inc
mov
jo
pop
add
js
stos
and
xlat
add
je
push
cld
jo
cmpsb
dec
rcl
sbb
mov
leave
jbe
mov
jo
aas
inc
mov
mov
adc
cltd
or
push
rcl
in
mov
call
cwtl
fs
hlt
pop
push
shl
arpl
lds
jle
inc
push
jb
sub
clc
insl
add
cmp
mov
and
add
xor
dec
sbb
cmp
dec
es
add
cltd
pop
sbb
shll
sbb
push
jne
ret
pusha
ljmp
mov
hlt
adcb
and
rolb
sbb
push
sbb
pop
clc
push
and
and
ret
push
push
sbb
xor
cmp
inc
dec
cmpsb
add
sbb
outsb
imul
ret
and
adc
push
sbb
mov
or
jns
cmp
filds
adcl
fs
lret
out
adcl
jns
fs
add
fs
pusha
xor
and
push
xchg
mov
add
ds
cmp
xor
push
stc
cmp
xchg
shrl
and
sbb
pop
cmpsb
cmp
sbb
lret
inc
sub
push
push
aad
sub
xor
pop
lea
adcb
mov
pop
dec
insb
push
icebp
sbb
dec
and
dec
mov
fiadds
jmp
and
adc
adc
int3
or
sub
mov
js
mov
orl
loop
int3
std
push
sbb
dec
or
pop
lea
stos
dec
adc
pushf
mov
push
repz
in
hlt
sbb
cmp
mov
cs
mov
dec
add
and
cmp
add
sub
push
gs
adc
mov
push
jmp
adc
adc
ret
fidivrs
xor
jl
mov
das
adc
or
xchg
xchg
jecxz
popf
add
dec
jne
pop
adcl
inc
fdivl
jg
push
pmulhuw
fwait
adc
mov
adc
or
ret
ret
jmp
dec
loopne
jg
push
add
push
push
jmp
xlat
cmp
addl
sub
movsl
js
cmp
sub
add
or
mov
mov
mov
dec
mov
xor
inc
imul
sbb
adc
push
and
enter
jl
push
nop
or
cmp
add
aas
or
pop
mov
jns
ljmp
es
adc
xor
mov
dec
and
sub
nop
add
sub
sub
stos
sbb
in
and
mov
xor
inc
cmp
lea
xchg
xor
jns
out
fidivrl
je
cwtl
mov
and
shlb
repnz
mov
dec
sub
adcl
jo
mov
add
lahf
push
dec
clc
adcl
es
cs
cmp
imul
loop
loopne
add
and
xchg
inc
lcall
mov
pop
push
xchg
sub
ljmp
xor
and
push
or
cmp
mov
mov
popf
je
popf
jo
inc
nop
sub
pop
push
sub
ss
insb
leave
push
jne
jg
orb
orl
nop
pop
dec
add
jg
or
jp
xchg
popf
push
inc
add
add
inc
cwtl
lods
lods
sbb
cmp
jp
xchg
fcoml
in
pop
adc
jp
dec
push
push
pop
fdivl
sub
ss
test
das
ds
xchg
stos
mov
and
adc
mov
push
popa
in
mov
ljmp
addl
adc
and
addl
push
adc
mov
jne
cmp
mov
cmp
mov
inc
sub
hlt
add
xor
adc
movsl
mov
andb
jo
and
and
jns
adc
leave
inc
pop
jl
xchg
xor
jmp
dec
and
sub
repnz
inc
dec
ss
sub
and
cmpsb
pushf
fcoml
lock
imul
sbbl
sub
inc
cmp
sbb
push
shll
je
or
mov
lock
and
inc
dec
enter
xchg
scas
adcb
je
ud2
in
xlat
cmp
xlat
cli
push
daa
pop
cmp
mov
pusha
or
fwait
mov
and
stos
add
hlt
or
mov
fdivrl
adcl
sbbl
mov
add
mov
push
mov
outsb
sub
jae
mov
add
adc
mov
sub
adc
enter
mov
adc
dec
mov
xor
lret
add
mov
xchg
push
adc
xor
inc
and
sub
mov
adcl
je
lret
incb
jle
cmp
jg
cmp
dec
dec
jle
loopne
repnz
addl
in
inc
push
push
or
seto
movsb
dec
add
add
shll
jae
cmpsl
nop
sbb
sbb
jae
mov
sub
pop
sbb
cs
push
nop
xchg
test
sub
inc
adc
xor
sbb
je
adc
in
jo
cli
push
add
sub
xor
cmp
mov
fiaddl
sub
cmp
repz
ret
movsb
test
mov
mov
xor
and
or
xor
outsb
or
mov
jb
js
jl
xchg
and
in
mov
loope
push
in
dec
je
sahf
gs
xor
repz
adc
test
add
popa
mov
jp
mov
lods
negl
mov
mov
adc
adc
add
pop
lret
jl
call
xlat
shrl
add
xchg
mov
xchg
js
je
lahf
inc
add
lahf
mov
adc
lods
pop
push
and
dec
add
inc
add
rclb
push
xor
add
pushf
and
test
inc
cli
lret
jbe
sub
inc
dec
in
std
pop
push
or
shlb
jp
cmp
sub
pop
pop
push
push
mov
xor
scas
inc
jb
mov
and
mov
inc
jmp
mov
shll
negb
enter
mov
adc
mov
insl
popf
jp
inc
sbb
lock
cmp
test
xor
cmp
test
shlb
insb
popa
and
mov
cmpsl
xor
jne
out
or
adc
adc
add
imulb
add
dec
test
pop
sbb
rep
and
call
pop
mov
mov
add
xchg
add
cmpb
test
shlb
push
push
in
sub
push
add
clc
cmpsb
mov
mov
dec
cld
les
inc
or
xchg
ds
xor
cmpsb
pop
test
jne
inc
sbb
inc
popf
ret
call
sub
add
inc
adcl
xchg
nop
pushf
mov
pop
sbb
xor
ss
adc
adc
adc
aas
fs
popa
add
decb
adcl
xor
push
or
mov
xchg
jo
lds
loop
lock
mov
subb
add
repz
inc
xor
enter
push
popa
push
leave
shrl
push
adc
adc
add
movsb
pop
repz
in
adc
and
push
add
pop
xor
adc
test
test
mov
or
push
mov
xor
jecxz
shlb
inc
mov
pop
mov
test
xor
sbb
push
out
pop
in
add
scas
pop
lcall
pop
mov
xor
movsb
nop
sarb
testb
fldt
sub
add
test
invd
push
scas
aam
sbb
push
push
inc
jbe
subb
push
rorb
sub
and
or
add
push
push
jns
loop
pop
pop
mov
jecxz
mov
cwtl
sbb
inc
and
stc
push
lock
mov
inc
push
insb
or
sbb
sub
xchg
or
mov
adc
movzbl
mov
mov
adc
jae
or
movl
dec
repz
inc
inc
push
pop
push
inc
fs
lods
fs
adc
cmp
xor
sbb
adc
enter
or
push
push
cmpsb
jbe
inc
fisttpl
and
cmc
adc
add
xchg
and
loope
in
fnstcw
sbb
ss
loope
or
pop
rcrb
je
loope
and
push
pop
sub
inc
aam
adc
cmp
gs
cmc
sub
rclb
xorb
aas
mov
and
nop
sub
push
xchg
push
push
rcrb
insb
and
call
les
idivb
jge
insl
mov
sahf
mov
pop
xor
add
movb
int
mov
mov
inc
pop
mov
stos
add
popa
mov
test
pusha
lods
xchg
mov
add
daa
sub
pusha
data16
cmp
mov
fists
pop
icebp
xor
orps
ss
add
mov
testl
sub
ficomps
sahf
mov
mov
fs
mov
sbb
push
clc
xchg
scas
xorl
aam
xor
cld
jmp
jo
pop
lods
mov
inc
fs
cmp
sub
cmp
jae
xor
sbb
add
fmulp
pop
and
lock
adc
cmp
pop
adc
test
inc
stos
movsb
mov
dec
cmp
in
xor
mov
and
push
ja
push
outsl
mov
mov
add
adc
test
mov
mov
movsl
stos
inc
add
xor
add
or
push
jnp
push
jle
jae
sub
push
push
jnp
fs
bound
push
shll
dec
mov
adc
or
adc
in
dec
lock
aam
push
in
or
xor
dec
add
sbb
inc
and
daa
adc
pop
mov
int3
pusha
add
dec
inc
inc
sbb
in
push
push
sbb
pop
add
inc
push
push
cwtl
dec
push
push
aas
outsl
adc
inc
sub
push
iret
fwait
add
fdivs
push
lods
push
ret
dec
sbb
outsl
mov
in
mov
add
pusha
mov
and
sahf
jecxz
data16
in
cmp
mov
iret
repnz
mov
shrb
pop
adc
adc
jmp
cmp
push
lock
xor
pop
cmp
jne
movsb
lret
enter
idivl
push
cmpsb
adc
outsl
lret
enter
inc
adc
nop
leave
dec
enter
push
push
mov
push
hlt
and
xor
iret
mov
jp
jle
rorl
inc
xor
mov
xchg
jp
pop
insb
leave
sbb
jge
xchg
sarl
and
icebp
fistpl
and
push
fcoml
sbb
add
cmpsb
add
cmp
inc
inc
or
xor
jne
mov
cli
mov
xlat
pop
sbb
push
aaa
test
add
mov
sub
add
and
sbb
sub
xor
aas
mov
mov
mov
cmp
pop
xchg
cli
jo
push
js
pop
push
in
push
pop
call
mov
push
push
les
jg
inc
pop
mov
mov
dec
popa
push
pop
pop
adc
push
xchg
push
je
sub
sub
ret
xchg
mov
daa
loopne
enter
cmp
sbb
add
popa
icebp
cmp
mov
sub
add
jae
into
cmp
es
pop
gs
lea
icebp
or
pop
gs
loop
jbe
pop
cwtl
jns
mov
negb
movsl
mov
jne
pop
rol
andl
push
inc
dec
mov
mov
add
mov
push
call
sarb
ret
in
ss
add
aaa
jecxz
test
or
fsubs
adcb
inc
xchg
cmp
pop
std
mov
inc
movsb
fs
int
in
mov
sub
mov
push
adc
cmp
test
xlat
jbe
lods
mov
jb
mov
or
insl
dec
sbb
inc
lea
sub
pop
scas
ljmp
fidivs
cmp
add
mov
call
xor
daa
aam
jle
popf
fistps
movb
jge
movzbl
add
mull
push
mov
das
ljmp
lods
in
push
push
pop
andl
lock
mov
ret
pop
aaa
pop
sbb
shr
test
outsl
jbe
test
cmp
je
sub
mov
in
dec
int
sbb
dec
jmp
mov
ret
inc
fs
rcrl
pop
addb
ret
sbb
mov
jle,pt
stc
jbe
scas
ds
jbe
sub
and
lcall
imul
or
add
fsubrl
shr
sbb
pop
mov
or
add
rcl
and
fists
loop
adc
mov
adc
add
push
aas
pop
push
sub
push
cmp
mov
mov
mov
subb
gs
arpl
daa
dec
lahf
and
dec
inc
andb
adc
fadds
xchg
icebp
fwait
pusha
xor
jns
cmp
jle
push
mov
add
pop
or
enter
pop
shlb
adcb
bound
inc
popa
test
outsl
nop
imul
or
adc
adc
incb
out
add
pop
movsl
adcb
sbb
pop
mov
fadds
dec
or
in
mov
xor
add
push
push
mov
cmovae
pop
mov
popf
ja
fimull
pop
lea
jne
adc
xchg
dec
bound
add
sub
shll
add
or
inc
je
ds
inc
lea
jno
add
push
jmp
outsb
sub
sub
xor
push
xor
cmp
dec
dec
lret
sub
pop
inc
mov
pop
lea
xor
sbb
and
les
sub
add
push
js
jl
xor
incl
incb
adc
xchg
add
clts
and
sbb
mov
in
xchg
lock
nop
pop
inc
inc
add
xor
xchg
inc
lods
fs
or
adc
or
push
pop
inc
dec
ljmp
or
jp
mov
dec
cld
mov
or
shrl
aam
push
imul
inc
sbb
js
mov
je
movsb
sbb
or
insb
insl
and
cmp
pusha
ret
insl
sub
push
inc
pop
add
dec
and
push
or
je
mov
sub
dec
ficoml
inc
and
and
subb
or
sub
and
movsb
xor
sub
loop
jmp
jg
jmp
add
jecxz
and
inc
adc
cmp
ret
push
es
add
and
nop
inc
outsl
mov
jne
sub
add
outsb
inc
xor
add
add
or
jmp
xor
cmp
jne
cmp
inc
or
cmp
nop
mov
cmp
out
jne
sub
mov
and
or
add
cmp
pop
add
stos
mov
aaa
add
popa
clc
lds
test
fwait
icebp
int3
sahf
adcl
arpl
inc
mov
jno
jnp
push
sti
pop
cmp
xor
push
inc
dec
sbb
cmp
es
xchg
sbb
sub
adc
lea
and
adc
aad
jb
sub
add
jle
mov
or
and
or
push
inc
pop
cwtl
dec
es
sub
rorb
lret
stos
add
mov
into
cltd
in
dec
mov
push
popa
xchg
andl
test
cmp
jae
xchg
push
adcb
jno
xchg
cmp
cmp
mov
push
cmc
cmp
cmp
ja
jb
dec
mov
or
or
pusha
in
add
ss
mov
mov
mov
mov
inc
in
push
in
cmp
in
and
nop
push
iret
inc
xor
pop
pop
cmpl
cmp
xchg
movsl
popa
cmc
ljmp
arpl
push
std
popa
addr16
sbb
mov
adc
cmp
pop
fisubrs
jnp
and
add
dec
push
imul
inc
inc
movsb
mov
push
and
cmp
inc
bound
popa
push
add
xchg
sbb
arpl
aam
fiaddl
shll
test
clc
mov
xchg
mov
leave
xchg
aam
push
xchg
pop
hlt
xchg
mov
mov
xor
mov
test
repnz
adc
push
clc
aam
in
and
ljmp
or
add
push
add
sub
sbb
adc
pop
add
mov
add
sbb
stos
cmc
inc
and
or
add
sbb
divb
je
rolb
insb
xor
sub
je
push
orb
das
lea
and
rcll
aaa
push
add
rcrb
cmp
jmp
inc
fs
nop
shlb
hlt
sbb
lock
lods
mov
test
sbb
xchg
mov
pop
mov
adc
insl
pop
insb
cmpl
sub
sub
mov
xchg
pop
hlt
sub
mov
cmc
ljmp
adc
popa
sbb
mov
adc
inc
mov
aaa
add
jle
sub
xor
les
mov
sub
ja
xor
jae
pop
add
sbb
adc
es
cmp
inc
in
popf
test
xchg
pushf
and
jno
dec
sbb
mov
sub
fwait
lret
std
xchg
pushl
cmp
jae
xorl
ret
ss
pushf
cmp
xchg
push
xor
es
ret
mov
push
das
xchg
cwtl
dec
push
sub
stc
decl
pushf
inc
mov
cwtl
pop
add
lcall
and
testb
mov
cmp
push
sub
mov
aaa
mov
icebp
cmp
fcomps
mov
pop
pop
and
xor
js
mov
jno
fs
mov
sbb
push
mov
push
test
pop
lods
pop
jne
ds
fcmove
call
mov
cmp
test
test
addl
push
dec
pop
sub
push
jl
adc
mov
pop
cld
pop
push
dec
sahf
aaa
xchg
jo
push
je
popa
pusha
mov
or
es
or
rol
mov
mov
add
cs
cmp
push
sbb
or
xor
push
mov
stos
aaa
fistpll
sub
lahf
inc
nop
mov
lock
fcmovnb
push
imul
inc
xor
push
mov
mov
sbb
xlat
call
data16
pop
pop
cmp
test
push
pop
dec
pop
je
jb
jne
adc
push
sub
ret
inc
mov
punpckhbw
pop
dec
in
sbb
leave
add
xchg
pop
push
stc
lcall
jle
rcrl
shll
nop
pop
inc
mov
jns
xorl
dec
and
pop
jns
lret
dec
pusha
adc
repnz
icebp
push
pop
add
cwtl
xchg
in
mov
sub
push
and
cli
pop
ret
mov
movl
jecxz
pop
jle
adcl
xor
inc
jbe
pop
and
testb
push
sbb
and
adc
sbb
jle
add
sarl
sbb
cld
cs
cmp
jb
pop
adc
cmpsb
pop
and
mov
loop
daa
inc
daa
mov
das
push
mov
stos
and
jge
cmpl
mov
jmp
xor
cmp
cwtl
aam
dec
mov
loopne
and
popa
pop
cmpsb
sbb
xor
xchg
jne
icebp
stc
addl
mov
jmp
and
add
push
dec
lret
xor
sub
add
add
daa
sub
cmp
das
sub
cmp
int3
movsl
or
or
rorl
inc
pop
lods
xor
xorl
cmpsb
or
pop
adc
jne
ljmp
and
cmp
in
push
sub
adc
imul
enter
mov
sub
add
ss
insb
scas
push
jb
call
scas
mov
mov
pop
xor
adc
and
lods
lods
mov
jg
jp
or
add
xchg
cwtl
filds
adc
sbb
cmpsb
imul
xchg
jo
cmc
push
lods
mov
addl
lcall
pop
mov
sub
push
subb
and
and
or
push
test
fimuls
mov
add
add
mov
xor
imul
hlt
dec
test
jne
or
mov
mov
add
pushf
and
lea
rcrl
adc
add
xor
push
sbb
enter
push
push
js
sbb
push
adc
mov
sub
test
pop
mov
push
test
loopne
cld
pop
jmp
dec
add
adc
cmp
pop
sub
dec
mov
testl
or
and
pop
jl
push
or
mov
jae
adc
push
adc
popa
mov
faddl
inc
sub
mov
int
jp
add
out
push
sub
inc
addb
fwait
outsb
xchg
insl
or
subb
repz
push
xor
or
or
loopne
pop
test
adc
pop
icebp
adc
xchg
push
jno
xchg
sarb
pop
add
nop
and
inc
arpl
push
inc
imul
orb
paddw
mov
pop
sub
mov
cmp
repnz
push
mov
test
les
jge
mov
mov
sub
add
pop
pop
dec
dec
sbb
add
loop
or
scas
push
shll
or
mov
scas
popa
mov
or
shl
test
and
loopne
mov
nop
and
push
add
sbb
mov
mov
sub
pop
enter
push
or
push
add
xchg
push
or
pop
adc
pop
pop
push
jno
and
lcall
outsb
push
mov
sbb
call
jge
xchg
push
rcrb
cmpsl
mov
adc
xchg
sbb
jmp
inc
push
inc
and
dec
sbb
sbb
and
mov
test
enter
sahf
sbb
stc
mov
jns
lds
push
push
addb
inc
xchg
sbb
sbb
push
xor
aad
sbb
or
pop
movsl
push
add
xchg
push
dec
dec
push
add
sbb
dec
stos
inc
fwait
or
or
and
adc
inc
pusha
loop
loopne
add
cmp
mov
mov
aam
mull
insb
push
mov
push
cmpb
insb
cs
int3
test
xchg
inc
pop
or
testl
cwtl
jns
inc
mov
push
daa
sub
dec
test
es
or
and
and
lret
inc
fs
popa
add
call
stos
cmpl
or
adc
push
movsl
add
dec
sarb
clc
push
pop
fstps
sbb
xor
and
mov
dec
dec
push
add
xchg
add
add
or
xchg
dec
sbb
sbb
insl
xor
cmp
call
cmp
aas
insb
mov
push
push
mov
leave
dec
mov
inc
sbb
jne
mov
sbb
cmp
cmp
sbb
pushf
test
addb
xchg
icebp
push
das
xchg
pop
pop
cli
add
mov
pop
add
inc
cs
lock
add
xor
add
pop
or
sub
jge
adc
mov
add
dec
cltd
adc
dec
jl
popf
or
xlat
out
and
sbb
xchg
lea
push
rcrl
in
push
fs
ret
mov
adc
or
rolb
dec
out
jb
not
xchg
cmpsl
and
je
aam
xchg
pusha
xchg
out
add
fdivr
xchg
jno
jp
imul
add
testb
imul
insl
aad
xchg
lret
test
jecxz
outsb
jmp
jecxz
xor
xchg
and
adc
inc
push
cmc
je
mov
mov
or
xor
test
mov
xor
push
mov
in
push
cmp
pushf
dec
inc
or
rcrb
dec
add
push
cmp
xorb
and
ret
loopne
push
xchg
insl
mov
or
jnp
stos
in
push
or
push
push
bound
sahf
xor
push
push
mov
gs
out
cmpsb
xchg
push
sbb
adc
mov
and
shlb
dec
push
xorl
sahf
mov
fidivl
pop
add
jmp
stos
in
push
dec
or
in
dec
sahf
or
sub
subb
adc
xor
or
adc
dec
adc
bound
jl
jl
xchg
push
lods
enter
adc
dec
mov
xchg
fistpl
movsb
mov
out
mov
mov
mov
xchg
and
or
mov
and
and
in
push
insb
jne
push
xchg
hlt
cli
dec
mov
sbb
int3
dec
dec
push
in
sbb
jnp
lcall
es
jb
rcrb
enter
lds
or
test
jb
out
add
and
mov
repnz
push
push
pusha
leave
adcb
mov
and
iret
add
mov
cmp
and
and
les
aam
and
add
fsubrl
repnz
cmpb
test
enter
in
pop
and
sub
pop
subl
sub
aad
mov
xor
cmp
xchg
hlt
test
cmp
mov
push
lahf
pusha
es
pop
mov
jbe
shll
pusha
push
fsubrs
and
dec
das
aam
sarb
and
sbb
and
sbb
push
lret
mov
jl
fs
dec
mov
mov
cs
cli
daa
adcb
adc
lock
js
loop
mov
jle
cmp
push
or
sub
pop
cmpsl
xor
and
push
add
xor
push
nop
jmp
scas
xchg
and
scas
enter
pop
mov
leave
inc
push
mov
lods
add
pop
cwtl
cmp
cmp
sub
mov
mov
cmp
push
jno
mov
push
shlb
sbb
pop
and
dec
and
mov
in
aas
mov
cmp
hlt
jns
push
jns
cld
inc
jns
ja
fcomps
bound
out
enter
inc
xchg
out
mov
lret
pop
sbb
or
repz
inc
imul
inc
adc
aas
bound
mov
in
push
out
adc
and
ret
ret
cmp
clc
sbb
stos
add
insl
cmp
movl
rolb
es
inc
fsubs
in
inc
mov
nop
movsb
aas
lods
stos
ss
ds
dec
in
dec
sahf
cmp
push
mov
movb
cmp
mov
ja
sbb
das
inc
and
inc
lea
fldl
mov
adc
sub
addb
gs
jno
outsb
test
add
mov
adc
sub
xchg
or
xlat
dec
xor
nop
mov
jg
push
insb
arpl
pop
xor
jns
mov
call
pop
xor
mov
xor
movsb
xor
jno
xchg
jnp
arpl
andb
mov
insb
notl
mov
cld
shl
and
mov
sbb
cld
shlb
push
fwait
xor
orl
add
enter
popa
ret
push
in
push
clc
and
mov
jnp
cmp
adc
lods
mov
adc
inc
mov
add
xor
dec
mov
add
sbb
and
sbb
lods
arpl
fists
call
roll
in
adcb
pop
add
push
push
push
adc
push
push
mov
dec
jbe
ljmp
pop
lea
mov
sti
pop
and
sub
sbb
js
push
xchg
and
inc
lea
inc
and
es
push
clc
sti
cwtl
or
add
inc
es
add
add
in
inc
in
fdivl
movsb
dec
lret
dec
andb
xchg
cmpb
pusha
add
push
jl
mov
or
or
adc
adc
dec
es
addr16
xchg
fs
push
and
and
cltd
or
pop
dec
repz
lcall
adc
mov
dec
dec
inc
rorb
sbb
or
mov
cld
sahf
setge
in
fldl
xchg
mov
xchg
lods
push
dec
movsl
jo
out
xchg
mov
lds
mov
cmp
cmp
and
mov
jo
data16
leave
subl
ss
xor
xor
sub
or
or
cmp
sbb
sbb
mov
xor
push
sbb
cmp
mov
adc
and
cld
ret
add
sbb
xor
leave
pop
or
inc
push
insl
inc
movsb
cld
enter
rcll
push
test
jmp
add
outsl
mov
scas
sub
in
rorb
push
sti
in
and
xor
lods
xchg
xor
xor
cmpsl
ffree
push
lret
rcll
lock
mov
gs
leave
adc
cltd
xor
mov
addl
mov
aam
pop
mov
sub
xor
sbb
adc
popl
and
push
sbb
mov
pop
xorl
mov
in
xlat
and
mov
xlat
jge
xor
in
xor
jo
inc
nop
cmpl
aad
xor
cmp
pop
loopne
imul
out
or
xor
dec
and
and
insl
lret
ja
in
add
mov
rcrl
pop
inc
or
push
adc
mov
sub
adc
and
cmp
or
arpl
adc
pop
and
call
sbb
fdivs
and
dec
insb
push
das
mov
cmp
lods
in
mov
fistl
pop
dec
mov
xor
xchg
push
add
dec
pop
loope
jae
mov
les
xchg
dec
add
loopne
dec
or
dec
lcall
add
nop
out
int3
pop
xchg
out
sbb
out
jns
add
scas
xchg
push
add
lahf
ret
aam
test
lcall
int3
mov
push
mov
mov
adc
lods
pop
push
pusha
mov
push
mov
mov
add
mov
mov
xchg
and
and
mov
sub
adc
push
lods
or
jmp
leave
or
push
ds
ficoml
and
call
out
push
add
shl
xor
push
pop
cmp
ljmp
popa
push
pop
jno
out
jle
jne
mov
xchg
add
cmpsb
cmpsb
xchg
inc
add
js
and
jne
inc
sbb
leave
push
and
cmp
nop
add
sbb
pusha
pop
or
repnz
or
ficomps
jbe
test
add
movsb
add
and
in
addb
mov
jno
push
jmp
push
adc
and
sar
inc
jo
push
mov
imul
xchg
mov
out
aam
cmp
push
sbb
and
push
fs
loopne
or
push
push
dec
jne
mov
int
ljmp
push
add
fistpll
push
push
xchg
add
sub
shlb
fwait
inc
subb
or
mov
fbld
or
sbb
imul
stos
test
shrb
mov
roll
mov
mov
cmp
sub
xchg
adc
lods
movsb
mov
mov
adc
aas
iret
inc
add
mov
and
sub
adc
dec
mov
adc
mov
lea
cld
push
pop
mov
rolb
push
xor
jo
adc
mov
pop
into
outsl
pop
jecxz
adc
pusha
lods
inc
addr16
xor
aas
mov
sbb
mov
add
aaa
pop
sub
test
scas
add
repz
sbb
dec
adc
and
jb
xor
and
addl
outsl
xor
jnp
test
pusha
lods
jge
js
fmull
repnz
cmp
pop
and
test
test
in
add
sub
push
mov
test
dec
inc
dec
and
mov
rep
insb
fimull
cltd
imul
sbb
or
adc
and
mov
sbb
push
or
adc
jl
sub
and
imul
sbb
pop
dec
stos
movsb
jb
in
or
and
push
push
mov
insl
push
rorb
jns
jecxz
add
lods
pop
dec
xchg
push
adc
or
adcb
outsb
adc
inc
sbb
xchg
inc
adc
sbb
or
jb
xchg
sbb
jmp
inc
pop
sbb
push
imul
out
adc
push
xchg
inc
cmp
jae
mov
pop
rcr
xchg
pushf
pushl
sub
cmp
jl
add
push
and
dec
scas
loope
call
push
lahf
ret
mov
cmp
add
fsubrs
mov
ja
sub
fstpl
jbe
mov
push
ret
pop
rolb
mov
jle
loop
xchg
fs
jbe
jg
fwait
push
add
mov
ficomps
jnp
rorb
push
mov
sub
inc
mov
jo
mov
jg
loopne
jbe
sub
ja
push
sub
cmp
addr16
add
pop
mov
xorl
and
pop
add
pusha
jg
adc
jo
xchg
xchg
or
pop
out
pop
push
dec
sbb
bound
and
mov
filds
fisubs
fdivs
mov
and
pop
adc
push
adc
push
dec
and
insb
pop
pusha
cmp
push
test
jmp
imul
fisttpl
add
cmp
dec
les
ret
inc
add
inc
pop
add
add
add
dec
mov
insl
cmp
lcall
xor
mov
in
jo
add
insb
fstps
sub
xor
insl
mov
sbb
pop
add
clc
pop
int3
push
or
adc
adc
insb
lods
sbb
sbb
and
or
sub
jg
pusha
add
jmp
push
add
psllq
into
sub
sbb
loope
cwtl
test
mov
and
repz
mov
xchg
mov
pop
dec
pop
outsb
sarl
xor
lds
mov
cmp
loopne
and
xchg
icebp
lahf
or
inc
add
add
add
mov
mov
adc
lods
cmp
jnp
rcll
xlat
sub
push
xchg
ja
nop
insb
insb
mov
push
or
dec
push
push
fbstp
out
mov
jno
inc
add
pop
in
outsb
mov
inc
cmp
cmp
rolb
ds
sub
inc
push
lea
sub
cltd
fs
test
sbb
in
jbe
test
icebp
mov
sbb
std
rol
js
orb
mov
jl
fisubrs
cwtl
mov
add
aas
sub
or
sbb
sub
push
xlat
push
flds
push
in
sbb
dec
lods
insl
add
mov
jnp
and
and
cli
in
aaa
mov
jecxz
add
dec
enter
xor
or
mov
sub
imul
insl
bound
adc
les
mov
jmp
sbbl
push
mov
test
inc
jp
pop
inc
add
lea
xorl
test
faddp
pop
js
clc
dec
insb
inc
pop
push
xor
ss
sbb
mov
fdivrl
mov
jne
push
dec
cmp
fldcw
mov
sub
mov
jg
pop
xor
xchg
mov
add
es
ret
js
decb
jp
add
or
outsb
or
mov
jno
dec
inc
loopne
enter
push
xchg
sub
xchg
push
push
sub
imul
inc
ret
push
and
insb
add
sbb
add
cmp
shlb
shlb
daa
sbb
push
mov
outsl
stos
dec
ss
imul
pop
hlt
mov
lea
push
push
roll
cmp
je
cmp
je
cs
cmp
je
cmp
je
push
je
ret
mov
je
jnp
loopne,pn
mov
sti
rorl
adc
repnz
js
sub
add
and
fstpt
fdivrs
inc
hlt
cli
or
loope
movsb
push
push
daa
mov
cmp
mov
push
sub
shlb
ret
add
je
shl
xor
or
ret
add
stc
pop
aad
lds
test
mov
aam
and
push
xor
adc
xchg
fdivr
mov
mov
pavgb
lret
mov
nop
adc
iret
movsb
adc
jmp
cmp
pop
je
ljmp
pusha
nop
enter
mov
ret
in
add
push
ret
inc
loopne
inc
mov
pop
andl
mov
add
cmp
jo
xor
jmp
mov
rolb
jl
adc
adc
add
jmp
pop
into
clc
push
pop
dec
xchg
jne
mov
ret
cmc
inc
xchg
and
xor
xor
sar
jl
fsts
pop
int3
pop
bound
test
shlb
adc
mov
mov
lret
ret
iret
jne
and
mov
xchg
push
subb
sbb
mov
jecxz
adc
test
push
frndint
idivl
cmp
sbb
push
dec
cs
movsb
call
jecxz
sbb
and
test
sbb
push
push
pop
inc
pusha
or
js
pop
or
inc
lods
pusha
iret
dec
rcrl
mov
jl
aam
inc
shll
xor
push
lea
mov
dec
adc
andl
mov
push
rcll
push
mov
push
mov
mov
and
repnz
sub
or
out
cmc
and
add
adc
sub
imul
fcompl
das
aaa
xorl
add
mov
push
adc
add
or
push
lods
std
cli
xchg
mov
orl
ret
cmpsb
int3
jge
roll
xchg
inc
es
sub
popa
fmull
sahf
xchg
pop
or
sub
ss
cltd
rcl
add
in
lret
and
or
push
dec
xor
push
shrl
mov
out
inc
adc
mov
movsb
add
and
mov
and
pop
or
sbb
or
cmpsb
sbb
popa
test
loop
and
mov
je
mov
out
dec
sub
lcall
inc
mov
int
xor
fs
data16
out
imul
mov
xor
add
jae
inc
or
pop
push
cmp
dec
jmp
push
stc
mov
pushf
std
or
add
lock
imul
xor
add
add
mov
mov
nop
inc
lcall
sti
inc
jge
or
xchg
addl
add
push
push
mov
addb
mov
popa
and
int3
jge
rolb
mov
dec
les
out
cs
repz
inc
xchg
cmc
std
pushf
repz
push
pop
mov
mov
dec
add
cs
mov
mov
xchg
add
add
fisubl
imul
dec
dec
and
cmp
clc
sbb
add
cmp
popa
imul
push
cmp
je
or
sbb
cmp
jne
xor
jl,pn
mov
roll
cmp
lock
test
cs
roll
inc
adc
lds
test
mov
push
sbb
inc
xor
jecxz
imul
mov
mov
add
sbb
lock
inc
sbb
dec
stos
xor
push
sar
or
mov
mov
pop
sub
or
pop
addb
xchg
sub
subb
xor
adc
fs
and
or
add
sub
loopne
mov
inc
mov
inc
inc
popa
sub
and
addb
mov
xor
and
loop
cmc
mov
inc
sub
lods
xchg
popa
xchg
sbb
push
andb
outsb
or
lret
xor
int3
aad
jnp
mov
jl
xchg
sub
push
sub
mov
shl
inc
sbb
pop
andl
adc
and
iret
fiadds
imul
out
xor
cwtl
test
icebp
pop
mov
pusha
push
mov
add
push
inc
addb
enter
add
pop
imul
and
sub
mov
sub
dec
add
stc
mov
push
add
fwait
shrb
push
outsb
insb
pushf
and
test
pop
cmp
and
mov
xor
jge
mov
sub
jge
jne
cmp
jne
int3
jne
outsl
sbb
push
sbb
pop
inc
shll
xorb
pop
mov
push
dec
xor
push
stos
and
daa
jne
bound
and
push
push
int3
cmp
pushf
daa
xor
in
add
ljmp
pusha
push
and
stos
push
push
pop
inc
js
ret
into
jmp
lock
add
arpl
test
jge
mov
cs
dec
addr16
xchg
mov
jo
js
scas
psraw
stos
sub
and
pop
test
das
insl
lods
out
lea
jp
insl
push
add
add
lret
loope
insb
cmp
or
icebp
clc
aad
add
sub
js
cmc
pushf
pop
adc
push
sbb
es
mov
or
fs
xchg
jecxz
ss
xchg
mov
sbb
stc
bound
bnd
adc
and
mov
mov
ret
push
jmp
pop
add
pop
cmpl
mov
xor
aaa
popf
ss
icebp
push
push
push
mov
and
push
inc
add
int3
dec
sbb
inc
rorb
adc
jnp
push
or
push
jmp
lea
movsb
addb
popf
dec
shlb
mov
cmp
push
cmp
addr16
inc
cmp
inc
add
add
test
adc
jl
xor
jmp
sahf
push
icebp
or
inc
dec
add
inc
xlat
xchg
mov
mov
mov
and
push
add
and
inc
addb
dec
cmp
xor
xor
leave
call
sbb
fisttps
inc
jge
pop
mov
lret
aam
xchg
push
cmp
mov
jl
pop
inc
inc
mov
add
stos
jb
cmp
or
adc
addb
or
dec
testl
sub
clc
jo
and
jnp
sbb
ljmp
shrb
not
bound
iret
cmp
loopne
add
int
jb
pop
cmp
inc
pop
mov
aaa
push
clc
pop
cmp
sbb
adc
loop
cmp
push
cmpsb
add
or
fsubrs
or
cwtl
mov
inc
and
adcl
xor
jg
inc
add
push
into
pushf
mov
pop
ja
sub
pop
sub
das
call
clc
xchg
rolb
mov
enter
push
xor
xor
inc
dec
iret
push
test
std
outsl
and
mov
dec
push
enter
insb
mov
lea
lret
push
pop
test
mov
jl
test
inc
adcb
loop
sub
mov
pusha
dec
loope
add
or
test
sbb
xor
loopne
pop
ret
stos
js
mov
dec
push
add
or
mov
shrb
dec
ja
dec
jo
xchg
divl
sti
xchg
rclb
mov
or
inc
sub
cmp
jecxz
adc
movl
cmc
pop
mov
insb
in
and
fmuls
inc
add
mov
jp
cmp
cmp
dec
sti
mov
jmp
push
add
and
movsl
pop
mov
dec
push
cmpsl
pusha
dec
xchg
mov
mov
xor
les
fs
ss
je
xor
push
jmp
xor
lahf
push
cmp
adc
stos
movsb
sbb
shr
jo
stos
cwtl
dec
ds
pop
stc
pop
fnstenv
cmp
xor
into
adc
cmp
mov
loope
xor
push
clc
std
sub
sub
and
cli
adc
mov
mov
add
cmp
and
add
or
pop
mov
sbb
and
or
mov
adc
cmp
sub
sbb
scas
xor
scas
lods
mov
out
dec
ret
pop
or
les
es
add
pushf
push
push
push
mov
lds
and
xor
push
dec
xor
test
jge
add
xor
add
bound
bound
test
or
push
adc
or
inc
xor
stos
test
inc
inc
jnp
mov
aam
ret
jmp
test
les
in
jbe
pop
add
add
push
cmpsl
or
insb
cwtl
cmp
jae
adc
sub
dec
psubb
in
sub
inc
add
aam
call
adc
lret
adc
enter
lcall
add
mov
ja
outsb
popa
sbb
add
inc
jl
in
lds
inc
lcall
xchg
inc
mov
add
mov
sbbb
xchg
jo
test
jmp
dec
push
jne
cmp
jb
sub
jmp
push
dec
movzwl
push
pop
cmpl
push
setl
movzbl
push
imull
testb
leave
mov
in
loope
in
jb
shll
and
addl
mov
push
xchg
add
and
lret
in
add
jns
sbbb
sbb
nop
inc
loopne
inc
cmp
lahf
imul
jmp
push
add
jg
pop
stc
jmp
jne
or
sbb
or
leave
test
cli
mov
add
xchg
sbb
and
lods
xchg
mov
in
mov
es
bound
cwtl
or
or
sub
leave
xchg
push
popf
and
sub
push
into
adc
loope
imul
and
mov
push
test
shll
imul
inc
or
add
or
sub
xor
gs
arpl
mov
movsl
daa
xor
cmp
pop
xor
subb
in
sarb
lea
dec
jbe
sbb
xchg
and
and
pop
sbb
xchg
push
push
cmc
xor
lret
push
ret
js
cmp
mov
inc
imul
add
mov
jmp
adc
cmp
xor
loop
ss
xchg
or
cmp
inc
adc
sbb
aad
fs
sub
xchg
mov
push
mov
xor
arpl
xor
push
sbb
dec
or
vmwrite
sub
sub
xor
or
dec
push
sub
js
dec
push
sbb
in
mov
push
dec
xor
adc
push
xor
jmp
fcmovne
mov
pusha
or
stos
es
cmpl
or
rclb
les
cs
stos
cmp
mov
inc
and
data16
stos
or
sbb
mov
sbb
ds
ficompl
sbb
aaa
movsl
mov
testb
and
nop
inc
lods
adc
add
adc
jle
add
cld
dec
cld
xchg
xor
outsb
mov
mov
add
sub
arpl
cmp
pop
add
push
mov
mov
sbb
jmp
mov
inc
jo
mov
in
ss
xchg
dec
add
mov
ljmp
or
mov
cmp
xchg
sbb
dec
inc
push
lahf
or
push
leave
push
fimull
int
hlt
nop
pop
lea
sub
ret
mov
adc
inc
xchg
xchg
out
xor
and
fwait
add
sub
add
dec
add
add
outsl
in
xchg
push
ljmp
push
push
mov
sbb
mov
xor
or
or
xchg
inc
inc
xchg
pop
or
mov
cmp
push
jns
sbb
stos
inc
push
sbb
iret
sbb
push
dec
push
push
adc
or
add
orb
xchg
adc
test
mov
xchg
imul
leave
leave
dec
fs
inc
and
mov
xor
dec
aam
lea
je
decb
movsb
or
in
or
je
add
pop
test
xor
inc
jmp
jmp
mov
aam
mov
adc
mov
sahf
js
add
lcall
adc
or
pop
xchg
inc
ret
or
inc
push
mov
movsl
inc
dec
ret
sbb
loopne
push
mov
mov
mov
adc
push
movsb
xchg
dec
and
movsb
mov
cmp
inc
xchg
xchg
clc
jmp
call
pop
push
jno
cld
jne
dec
sub
jne
jne
mov
add
mov
adcl
mov
pop
notl
pop
mov
leave
and
sarb
and
imul
push
daa
jg
enter
insl
sub
and
es
and
lock
sub
pushf
push
adc
pop
lods
and
js
sub
insb
pop
push
js
aaa
pusha
add
pop
add
fwait
push
daa
test
cmpb
dec
pusha
pop
and
testl
or
mov
push
mov
js
sbb
inc
movsb
loop
and
mov
add
ljmp
mov
and
cmpsb
pop
daa
add
sbb
or
add
add
jo
and
sub
imul
insl
das
pusha
mov
je
jl
inc
adc
js
mov
loopne
add
call
or
mov
cmp
shlb
mov
push
xor
mov
leave
outsl
js
ja
add
or
or
dec
or
and
test
pop
cltd
cmp
xchg
and
sub
and
sub
cmp
push
enter
ja
test
mov
pop
xchg
mov
ret
inc
inc
and
xchg
frstor
aam
pop
pop
ud1
add
sahf
inc
repnz
cmp
in
dec
in
dec
adc
xchg
mov
pop
ret
push
ud1
dec
inc
into
push
push
cs
adc
push
test
jnp
adc
and
xchg
adc
pop
jb
adc
cltd
or
and
adc
add
or
xor
adc
int
push
dec
mov
jp
mov
dec
shrl
sbb
dec
and
pop
jge
xor
sub
push
aam
mov
mov
sbb
or
xor
push
in
push
push
dec
mov
inc
adc
jbe
dec
mov
sub
imul
mov
sbb
pop
cltd
or
in
push
aas
and
dec
add
lods
test
push
or
jnp
cmp
and
push
jo
cmp
outsb
xor
stos
mov
int3
in
and
cwtl
inc
push
inc
sahf
inc
push
add
and
mov
pop
xor
arpl
dec
or
inc
aas
scas
inc
mov
data16
pop
loopne
or
test
add
loope
xchg
inc
in
push
push
xchg
adc
cs
rolb
test
mov
stos
add
inc
pop
sub
pop
mov
jl
inc
lock
cs
jo
popf
pop
les
arpl
sbb
cmp
incl
push
jg
cmpsl
push
callw
sub
adc
pop
push
jns
mov
out
ficompl
xor
push
inc
out
and
add
sub
and
inc
push
inc
iret
inc
dec
xchg
add
inc
rcl
dec
mov
add
xorl
ds
aaa
inc
pop
dec
sub
or
fnstcw
or
adc
test
imul
fldl
inc
daa
xor
jecxz
xor
int
or
stc
sub
cmp
cmp
inc
addl
add
and
adc
dec
cli
pop
jle
add
mov
xchg
mov
aaa
xor
test
xor
les
pop
jg
sub
mov
xchg
fcmovb
inc
jmp
push
movsb
push
xor
int
inc
xor
dec
scas
dec
and
aam
dec
jg
adc
enter
mov
fcomps
sbb
jle
fildll
cmp
fimuls
dec
pop
les
add
lahf
adc
aad
lret
jge
std
or
incl
push
add
popw
or
jl
lea
in
sub
push
mov
xchg
and
imulb
jg
xorb
add
add
ljmp
or
cmp
push
push
shlb
mov
shl
fadds
adc
push
pop
fcomps
sbb
sub
or
pop
xchg
sbb
pop
nop
adc
mov
rcll
mov
lahf
lcall
add
arpl
mov
or
gs
call
jb
popa
pop
mov
cmp
mov
cld
sbb
ret
orl
inc
jl
sbb
mov
out
push
out
arpl
out
fnsave
clc
jo
ret
div
mov
dec
xchg
mov
add
je
or
sbb
out
test
rclb
lcall
rcrb
cs
or
test
ss
mov
mov
xor
dec
icebp
add
xchg
cld
inc
cld
push
dec
mov
mov
incl
or
add
sub
or
mov
mov
push
js
mov
sahf
repnz
jp
cmp
push
test
orl
lcall
sahf
into
int
push
mov
int3
cmp
sub
stos
out
leave
rolb
jl
and
xchg
pushf
loopne
dec
jge
sbb
fnstcw
std
lcall
adc
fbld
and
shll
sbb
enter
ja
push
por
push
clc
es
sahf
cwtl
xor
push
jp
or
subl
xchg
xchg
push
add
stos
adc
fs
xor
or
fadd
or
sub
push
push
out
xor
outsl
sbb
cmp
ds
push
cmp
sbb
mov
or
icebp
in
pop
loope
push
inc
xchg
ret
fwait
sub
rcrl
xchg
cmpsb
push
push
cwtl
mov
inc
xor
or
sbb
out
and
inc
lcall
xchg
and
out
pop
inc
bound
jb
aaa
adc
xor
cmp
or
jg
jmp
add
push
add
fadds
or
addr16
mov
sub
data16
fldcw
xor
add
cmpsb
or
adc
scas
stos
std
or
push
or
sub
xor
fimuls
jne,pn
inc
and
adc
loope
pop
mov
cli
add
push
xlat
and
lods
scas
inc
loopne
cmpsb
test
test
mov
shl
xchg
call
hlt
js
push
sub
push
fisubrs
bound
push
mov
rol
call
data16
adc
push
in
mov
xor
ss
pop
decb
dec
push
fcompl
pusha
push
mov
into
cmp
jbe
or
mov
das
dec
out
call
or
or
psubusw
pop
pop
inc
movsb
sub
or
sub
sub
sbb
sub
add
or
pop
pop
xorb
mov
push
adc
add
mov
inc
adc
icebp
adc
flds
cmp
les
fmulp
inc
sub
leave
iret
pop
sbb
sbb
sub
fmuls
push
sbb
fcomps
out
sbb
jae
adc
and
divb
add
stc
je
repz
rcrb
jg
movl
mov
or
pop
outsl
or
jne
push
cmp
mov
or
ds
cmp
mov
repnz
addb
jg
jl
cmp
add
jae
rcrb
xor
add
xor
test
fs
add
and
push
jb
push
jle
rcr
add
jge
mov
jmp
mov
push
pop
scas
or
pop
lock
mov
cmc
lret
sarb
ja
rorl
ja
rorl
iret
push
ret
aam
push
enter
and
inc
addl
adc
rclb
cli
push
push
and
pop
xchg
pop
adc
xor
stos
daa
xor
adc
loope
xor
push
mov
push
pushl
idiv
add
mov
in
and
cmc
sub
pop
dec
mov
inc
xchg
mov
fdivrl
push
lds
out
ret
cmp
cld
xor
xor
jbe
mov
cmp
pop
ret
push
punpckhdq
stos
lea
pop
js
lock
adc
push
push
aaa
xchg
cmp
or
jmp
outsl
in
pop
je
push
dec
mov
adc
or
rorb
pop
xor
lods
js
mov
cld
mov
cmp
je
or
pusha
add
jp
inc
push
or
mov
jg
iret
neg
sarb
dec
add
loop
in
dec
mov
pop
jmp
filds
ret
outsl
or
cmpb
jl
or
pop
push
jg
push
inc
push
jge
cwtl
popf
mov
outsb
xlat
out
add
push
rorl
mov
adc
and
dec
inc
daa
pop
or
cwtl
jne
and
addr16
adc
shlb
or
push
lds
push
dec
out
push
dec
test
xor
xor
jbe
sarb
cld
adc
push
jg
incl
cmpw
jne
mov
je
test
adc
cmp
adc
cmp
leave
ret
adc
decb
push
mov
push
push
call
test
iret
push
jmp
cmpl
xchg
rcr
sarb
or
adc
dec
ret
add
cmp
add
cwtl
cs
call
ret
pushf
sub
rol
clc
les
xor
ja
mov
xchg
andl
in
inc
inc
gs
add
loopne
lea
push
push
jle
ds
adc
jl
mov
ds
cmp
sub
push
in
or
adc
adc
popf
jns
int3
adc
adc
sub
ljmp
jo
sbb
jbe
jmp
inc
or
jecxz
sbb
lds
or
je
mov
les
mov
or
and
out
dec
call
push
mov
add
push
mov
fists
inc
clc
and
push
sbb
mov
cmc
mov
iret
in
pusha
out
jne
mov
pop
incl
je
jmp
add
testb
outsb
push
push
add
inc
mull
test
pusha
mov
jmp
sub
xchg
pushf
adc
sbb
or
roll
push
call
jne
cmpb
push
xor
push
or
inc
pop
aam
daa
xchg
cmp
enter
call
in
insb
ja
or
xchg
sarb
ds
xchg
jecxz
ret
and
mov
and
xchg
ljmp
jns
and
mov
aad
popf
push
and
icebp
pushf
imull
hlt
xor
call
or
push
testb
sbb
mov
pop
in
iret
jne
or
loopne
mov
xchg
rcll
xor
pop
aad
mov
push
sbb
push
dec
lock
push
add
int3
cmp
mov
in
inc
scas
push
cmp
addr16
mov
add
push
push
icebp
cli
add
push
int3
stos
scas
dec
aam
js
push
sarb
mov
test
mov
adc
add
dec
cmpsb
mov
jl
subl
fcomps
es
and
bound
cmp
inc
or
push
mov
sub
pop
add
arpl
mov
sbb
std
lea
incl
add
repnz
sub
xchg
je
jne
ds
jbe
adc
ret
inc
cmp
jno
popaw
lahf
pop
inc
xchg
xlat
push
mov
mov
sub
out
or
repnz
or
inc
or
out
imul
mov
cwtl
nop
cmpsb
pushf
cmp
cmc
ret
mov
add
fs
in
shlb
jo
loope
cwtl
and
icebp
cmp
push
ss
pop
push
ficompl
mov
adc
sbb
mov
cmp
add
mov
and
push
inc
mov
idivl
pop
jb
adc
sbb
pop
ret
sarl
xchg
lods
nop
fxch
fst
or
xor
and
push
ror
and
jb
sarb
inc
push
sti
je
shrl
fdivrs
cmp
push
mov
lods
dec
dec
into
jae
testl
mov
xor
add
bound
cwtl
sbb
push
xor
mull
inc
cmpsl
clc
lcall
adc
push
sbb
sub
add
in
xchg
frstor
sub
idivb
add
mov
mov
lock
sub
dec
test
mov
and
sub
aam
jne
dec
jmp
cmp
insb
jecxz
aad
inc
rcl
adc
test
aaa
movzwl
mov
mov
xchg
sub
jg
sbb
loop
pop
mul
xor
push
je
pop
push
setb
jb
rcll
push
sbb
jne
test
adc
add
push
daa
push
sti
test
je
pop
scas
out
lods
ljmp
or
sbb
push
add
sub
push
push
and
sbb
adc
call
add
xchg
sbb
jnp
sub
push
or
push
add
je
dec
add
lea
loopne
pop
js
inc
push
xor
mov
push
jl
sub
rorl
sahf
ret
cmp
pop
mov
test
pop
push
sub
mov
push
sbb
shll
add
add
lock
pop
je
outsb
mov
push
jns
orl
sbb
push
push
inc
or
in
xchg
bndstx
lea
aaa
mov
sbb
add
mov
or
cmpsb
lret
mov
dec
sub
fs
add
pop
push
fimull
xor
dec
sub
les
push
push
imul
or
mov
call
push
nop
loopne
xchg
orl
push
jnp
scas
mov
inc
rcrl
lret
mov
out
cmpb
mov
mov
sub
test
loopne
pop
cli
cmp
dec
rorl
inc
xchg
ret
popa
das
adc
xor
jae
fisubs
je
lret
lock
and
or
lahf
arpl
icebp
push
jb
ret
jl
pop
je
inc
xchg
adcb
push
dec
pop
inc
sbb
test
pop
push
lock
mov
addr16
cmp
push
je
pop
pusha
jmp
cmp
dec
add
fistl
add
adc
out
add
and
pop
xor
xor
jl
cmp
and
or
inc
xor
jle
add
fs
in
hlt
sbb
add
adc
sbb
lea
nop
fidivrl
mov
add
rolb
call
icebp
inc
jecxz
cs
or
and
adc
sbb
jmp
add
out
adc
test
cmc
xchg
add
movb
clc
shrb
add
in
adc
js
es
shlb
jne
icebp
out
or
cmp
fmull
pop
subb
sub
je
xor
in
aas
or
jae
inc
add
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
push
jle
popa
adc
inc
sbb
mov
lea
je
call
push
rcr
std
mov
pop
cmp
je
mov
int
nop
pop
mov
test
or
cmp
je
push
je
popa
pop
fidivs
push
or
fdivrl
jle
push
push
push
mov
and
push
inc
mov
push
lods
pop
movb
or
add
or
add
call
mov
inc
pop
jb
push
push
pop
call
xchg
rorb
dec
addr16
dec
inc
or
push
push
outsl
aaa
cmp
sbb
sti
clc
shlb
sub
xor
add
subb
mov
cmp
sbb
jnp
jae
sbb
je
add
arpl
sbb
push
aas
test
call
or
ja
pop
cmc
dec
loopne
adc
les
in
mov
out
add
testb
pop
outsb
adc
jg
mov
add
cmp
lret
les
add
sub
sbb
or
or
sbbl
les
cmp
add
clc
aaa
push
mov
jbe
cmp
scas
sbb
push
jbe
fwait
cs
fstl
push
loop
jle
jae
cmpsb
imul
sbb
push
lcall
insb
jo
dec
dec
sbb
std
fsub
out
rorb
fsubr
mov
idiv
add
sti
or
push
mov
inc
int
dec
popf
int3
imul
xor
addr16
scas
sub
push
jle
dec
jnp
rcrb
xchg
pop
mov
xchg
int
adc
and
add
sbbl
pop
mov
sub
push
fadds
add
nop
sbbl
sbb
nop
add
fs
push
cmpsb
mov
jbe
push
sbb
add
pop
or
xor
jle
xor
popf
sub
dec
sbb
test
or
fdivrp
adc
and
negb
dec
jo
js
pop
push
xor
add
icebp
push
add
into
dec
or
pusha
pcmpeqw
lock
jb
ret
in
or
mov
sbb
pop
mov
fidivl
cs
filds
fsubr
lret
sbb
adc
sbb
outsl
push
xor
ror
test
and
lea
push
ja
in
insb
bound
arpl
lret
fidivrl
inc
shll
mov
lcall
mov
aad
movsl
es
mov
or
jo
rcrb
adc
or
xor
adc
shl
mov
adc
or
inc
adc
jmp
push
in
movsl
cmpsl
mov
inc
shll
jo
ja
mov
add
shl
ret
mov
sbb
add
mov
add
faddl
jne
lea
add
mov
jne
adc
scas
cs
decl
notb
lock
or
ret
inc
sbb
inc
fisttps
fnstcw
adc
popf
loopne
add
adc
pop
mov
das
or
push
jns
push
incb
repnz
out
es
das
add
iret
cmp
jmp
mov
stc
icebp
mov
inc
xchg
out
or
pop
sub
rolb
ret
roll
mov
movsb
mov
mov
cmp
pop
mov
pop
dec
jne
stc
lock
sbb
nop
push
stc
je
imul
es
divb
inc
xchg
ja
fwait
lret
pop
fwait
adcl
sub
dec
add
dec
sub
das
je
add
push
mov
mov
mov
fistpl
xchg
or
enter
adc
shrb
and
test
stos
jae
jns
push
mov
adc
lret
clc
shrl
movsl
cmp
or
xchg
pop
stos
ljmp
push
or
sahf
jge
add
cwtl
dec
xchg
leave
bswap
popf
sbb
sbb
pusha
adc
cli
mov
sub
or
push
push
lock
or
add
adc
push
or
outsl
or
jmp
pop
pusha
aaa
mov
push
or
in
add
pop
dec
icebp
decb
or
jmp
or
mov
xchg
call
mov
or
push
xchg
inc
add
xor
xchg
mov
loopne
sbb
shll
adc
add
cmp
scas
jo
adcl
and
mov
and
js
adc
orb
shrb
add
cmovl
addr16
notl
xchg
and
adc
rcrl
lods
or
push
pushf
movsl
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
cmp
add
les
jl
ds
ret
ja
in
add
mov
rorl
divb
mov
mov
push
cmp
pusha
add
iret
je
xor
movsb
lea
icebp
push
insb
sbb
sti
push
sub
inc
pop
ss
orb
pop
lea
or
repnz
dec
leave
xor
or
add
andps
mov
dec
lock
adc
and
enter
lock
and
push
cmpsl
addb
jmp
dec
push
push
adc
jne
fidivs
into
add
pushf
xchg
dec
fiadds
xchg
int
mov
mov
mov
hlt
lcall
leave
add
add
push
mov
ja
sub
lea
mov
sub
cs
mov
or
xchg
xor
leave
inc
push
je
cmpsl
into
rcrl
mov
cwtl
loopne
jl
testb
mov
add
sub
and
popa
and
xchg
test
faddl
jl
ljmp
add
add
jbe
add
scas
call
cmp
and
inc
sbbl
mov
dec
inc
adc
fwait
inc
lcall
hlt
popa
add
jo
popa
cli
xchg
mov
mov
cs
lods
call
popa
insb
cmp
adc
cmp
and
xor
xchg
mov
das
pushf
add
or
aam
iret
add
fisttpl
fldlg2
sbb
add
sub
and
pop
jl
jo
cmp
je
loopne
mov
js
popw
out
out
push
and
dec
push
lea
push
jo
dec
loope
add
lea
subl
add
das
sbb
lods
add
adc
imul
adc
les
inc
add
xchg
pop
xor
pop
xor
loopne
mov
mov
movsb
xchg
inc
fs
adc
pop
add
mov
rcr
mov
pop
arpl
and
test
cmpsb
pop
adc
fdivrl
dec
add
std
mov
mov
add
cmp
cmp
xchg
adc
adc
pop
and
aad
sbb
xor
xchg
fdiv
pop
loopne
or
and
ja
add
hlt
fstps
inc
mov
pop
in
jge
mov
jg
adc
test
push
inc
mov
pop
xchg
je
inc
and
sbb
or
js
push
xor
xchg
adc
and
pop
pop
or
mov
sbb
pop
jo
sbb
push
pop
enter
into
jecxz
lock
adc
adc
and
in
cmp
loope,pt
inc
repz
pop
or
lret
aas
mov
out
pop
outsl
sbb
cmpsb
pop
pop
sub
inc
adc
fistl
xor
or
adc
cmc
xchg
jmp
and
inc
fsubr
mov
cwtl
andl
jno
add
por
jno
sti
inc
popa
mov
and
out
cbtw
shrb
adc
ljmp
fs
mov
in
jge
mov
mov
pop
mov
movsl
rol
data16
add
idivb
je
mov
cmp
sbb
push
push
pop
adc
add
out
jo
push
cli
xchg
es
jl
mov
jmp
pop
adc
xor
mov
pop
insl
test
jb
mov
jecxz
das
inc
cmp
jp
cmp
xchg
ljmp
and
loope
push
les
aas
mov
movzwl
sub
jne
cmp
inc
mov
jae
xchg
out
mov
push
sahf
push
push
je
or
cs
or
shrl
sbb
rcpps
cmc
aas
outsl
lea
push
push
cmp
hlt
or
fs
and
adc
mov
jecxz
insb
pop
sub
into
add
les
xor
movsl
mov
test
dec
insl
dec
mov
aas
pushf
xor
or
in
stos
sbb
andl
or
inc
popf
cmp
inc
test
pop
lods
addr16
add
and
adc
ret
cmp
or
mov
push
orb
add
andl
mov
lods
inc
xchg
shrb
push
lock
xor
push
cmp
xorb
popa
mov
stos
imul
pop
sub
xor
addr16
pop
mov
loope
push
adc
pushl
in
xchg
cs
pop
add
xor
jne
mov
mov
jmp
addb
sar
daa
pop
jp
adcb
and
mov
mov
adc
mov
or
jo
push
push
sub
bound
mov
test
add
lret
lods
push
xor
push
push
subb
test
sti
inc
push
and
xchg
aam
mov
mov
sub
mov
push
std
push
and
not
cmp
sbb
in
sub
sub
xchg
jne
js
sti
neg
sbb
push
cmp
ret
xchg
jno
adc
and
push
pop
test
sbb
je
add
cmpl
insl
inc
insb
js
sbb
cmp
je
xor
lea
loope
or
in
dec
mov
and
inc
push
adcl
or
push
and
or
inc
loopne
add
pop
inc
xchg
dec
adc
daa
add
add
pop
inc
sbb
xor
inc
outsb
jl
mov
sbb
inc
jmp
pushl
lods
mov
pop
mov
lock
inc
lea
sbb
out
ss
arpl
mov
rcll
push
mov
mov
sbb
insb
pop
jo
sti
adc
inc
idivb
test
pop
inc
push
loopne
sub
and
gs
xchg
mov
les
sbb
and
pop
sub
test
scas
mov
outsb
inc
or
int
jo
xchg
fistpll
mov
xor
pop
sahf
xchg
xor
outsb
mov
cltd
mov
xor
xor
adc
mov
ljmp
inc
jno
push
test
lret
and
inc
cmp
mov
adc
out
mov
test
push
mov
in
push
mov
jl
dec
cmp
jmp
xor
jl
or
or
adc
add
add
roll
pop
add
mov
insb
dec
dec
adc
in
call
inc
adc
and
inc
push
and
fdivs
mov
mov
jle
jmp
es
pop
pop
fnsave
idivb
test
pop
xchg
jp
xor
push
push
sub
dec
test
sbb
push
arpl
add
jne
sub
push
lods
jnp
xor
add
sbb
out
idivl
testb
je
and
inc
mov
mov
and
mov
dec
jl
loope
xor
push
sbb
or
fstpt
movzbl
xchg
mov
dec
pop
push
and
pop
fldcw
mov
mov
mov
mov
fadds
scas
push
mov
fbld
int
lahf
sbb
cwtl
jl
shlb
adcb
mov
mov
xchg
dec
mov
mov
mov
push
lea
add
shll
add
add
add
xchg
out
sbb
xor
mov
test
aad
je
mov
and
insb
scas
push
pop
fs
xchg
push
cmp
fbstp
test
push
aam
movsl
mov
xor
cmp
pushl
inc
adc
push
sub
fildll
movhps
mov
and
mov
adcl
push
push
dec
push
loope
sbb
data16
sbb
inc
cmpsb
mov
outsb
daa
jge
cld
nop
jmp
jno
dec
sbb
divl
insb
or
shlb
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
add
sbb
mov
sahf
cli
pop
into
aaa
sbb
in
dec
push
jo
jmp
xor
fildl
pop
outsb
pop
push
fcoml
mov
imul
add
sub
cwtl
stos
insb
loope
pop
cmpl
mov
mov
adc
into
jne
ret
lea
jp
cs
andl
add
or
stos
mov
leave
pushf
jmp
add
xor
ljmp
bound
sbb
xchg
cmp
mov
or
dec
mov
cmc
out
loopne
ja
add
xchg
sbb
in
je
lock
or
mov
insl
out
js
mov
andl
jo
dec
adc
pushl
mov
xor
and
dec
dec
xor
into
add
adc
test
movsb
ja
add
mov
jnp
clc
test
lea
mov
xchg
sub
add
mov
xor
in
mov
jo
adc
push
data16
cmpsb
test
mov
or
inc
cmpsl
mov
ss
xor
adc
dec
xor
fldcw
add
sbb
pop
push
mov
hlt
xor
or
jae
out
mov
add
add
or
or
cmc
orl
mov
pusha
lds
andl
xor
dec
push
push
adc
dec
insb
add
cmp
xor
mov
push
pop
xor
sub
pop
cmovo
or
sarb
pop
jge
adc
sbb
xchg
jge,pt
pop
cmp
cmp
add
popf
add
loope
mov
inc
and
mov
mov
pop
add
in
push
and
int
push
push
mov
mov
roll
push
mov
rcrl
cmp
push
pop
and
rcll
arpl
aas
mov
inc
xlat
jbe
xlat
push
pmaxub
xor
and
mov
clc
lods
clc
cli
test
les
sbb
pop
adc
out
repz
addb
call
and
sarb
cmp
mov
outsl
add
sbb
adc
xor
aaa
sbb
or
pusha
div
outsl
shrl
sbb
mov
in
adc
fld
mov
out
add
lcall
jb
xchg
sub
jge
sahf
mov
cmp
push
mov
orb
sbb
push
out
movsb
cmc
xchg
in
sbb
push
push
ja
xchg
pop
adc
sub
lret
stos
add
xchg
jne
add
jns
daa
push
xor
or
mov
out
popl
insb
or
js
cld
lea
push
push
int
adc
pop
xchg
pop
sbb
push
pop
sbb
mov
inc
mov
not
and
fcmovnb
pop
int3
inc
add
icebp
cmp
push
lcall
add
aas
cmp
pop
jmp
lods
movl
movsl
addl
insb
cmp
sbb
xchg
ljmp
xor
ud0
mov
into
inc
add
pop
jl
rolb
or
iret
call
je
adc
inc
mov
sub
faddl
sbb
daa
adc
movsb
add
call
add
push
dec
push
in
lock
sub
push
pop
mov
lea
and
insl
mov
or
dec
nop
pusha
repnz
je
aaa
jbe
js
faddl
loopne
dec
sub
or
and
dec
pop
sub
add
xchg
jg
mov
and
push
in
or
xor
jbe
push
jo
mov
call
cmpsb
mov
cmp
in
xchg
pusha
or
inc
iret
fdivl
mov
ret
arpl
adc
or
sbb
dec
pop
shrl
xor
mov
test
dec
sbb
inc
les
dec
andl
jno
push
outsl
lods
and
aam
inc
push
dec
mov
lea
cmpl
lock
push
push
pop
jp
les
cmpsb
xor
adc
jb
jp
into
cmp
or
pop
les
inc
shll
test
xchg
dec
cmp
lock
cmpsb
xor
pusha
testb
popa
cmp
push
jo
mov
push
mov
div
sub
inc
les
jecxz
mov
out
pop
lods
pop
or
lret
dec
push
jb
sbb
cs
div
add
sbb
into
lret
mov
push
push
or
adc
mov
inc
mov
loope
mov
rcrl
or
loope
and
push
xchg
inc
shlb
fnstenv
sbb
sti
lods
add
fdivrl
push
jmp
or
ja
and
dec
in
dec
int3
jnp
aam
into
jno
mull
nop
jp
hlt
sti
mov
jl
je
lahf
cmp
lock
mov
testl
testl
pop
or
cmp
nop
ret
out
cmp
adc
dec
xchg
mov
cmpsb
add
mov
in
xchg
setnp
or
or
add
mov
sbb
pop
mov
push
mov
es
sbb
sbbl
xor
lods
jmp
pop
pop
push
push
hlt
cltd
or
rorl
xor
mov
pusha
sbbl
pop
add
aaa
pop
cmp
ss
rcll
or
jmp
inc
push
add
mov
mov
add
mov
shll
and
push
sbb
xchg
testb
lods
inc
cwtl
inc
andl
rcrl
and
dec
pop
lods
push
mov
push
inc
cmp
mov
sub
loopne
pop
inc
shlb
push
push
fldenv
mov
mov
sti
sub
xor
rolb
mov
mov
xchg
cmp
xchg
rcr
mov
push
in
or
push
ret
xchg
push
cmc
add
cmp
inc
in
mov
dec
dec
lret
or
lcall
mov
or
scas
jo
inc
push
push
dec
lret
into
shl
mov
sbb
jbe
push
push
or
push
dec
and
dec
pop
lret
das
test
add
ret
mulb
pop
xchg
pop
sti
les
pop
and
push
push
dec
les
insl
mov
std
push
jne
stos
data16
adc
ret
outsl
or
std
das
or
dec
ja
je
or
je
or
or
sub
xchg
adc
sbb
jno
adc
icebp
movsl
cmp
push
or
ds
dec
mov
sbb
push
add
mov
ss
mov
push
jmp
cmp
or
pusha
push
adc
adc
shlb
push
cmp
add
sub
inc
mov
and
cmpsl
mov
mov
or
jbe
cmpsl
popf
shrl
xor
inc
jmp
insb
mov
mov
les
inc
mov
clc
test
cli
gs
add
pop
lods
push
dec
je
sahf
or
add
adc
movsl
push
add
in
or
test
cltd
addb
repnz
jnp
add
lea
rolb
or
cmpsl
mov
les
in
dec
jecxz
sysexit
lret
or
je
sub
sub
add
push
loopne
push
adc
add
push
adc
in
mov
or
mov
xor
daa
or
push
adc
fisubrs
adc
jo
jmp
jo
popa
mov
add
fs
or
in
or
pop
orl
inc
outsl
cwtl
sbb
outsl
call
stc
stos
xor
and
cs
jp
dec
cld
dec
lgs
rcpps
mov
cli
roll
lahf
movsl
test
mov
mov
xchg
popa
inc
mov
scas
dec
mov
sti
je
dec
dec
or
int3
sub
sub
push
inc
mov
clc
mov
add
orb
fsubrs
fadd
ss
fs
in
push
push
ror
push
js
enter
jno
stos
xor
sbb
ret
sub
cmp
sbb
fcompl
faddl
adc
dec
mov
xchg
mov
adc
jne
fucomp
xchg
les
mov
xor
and
cmpsl
push
cltd
and
mov
imul
sub
nop
sub
sub
dec
and
aam
cmp
out
push
lock
push
rclb
sbb
sbb
fmull
test
add
push
mov
jge
scas
mov
sbb
sub
inc
leave
enter
faddl
in
mov
pop
subl
mov
add
push
mov
imul
movsl
aam
int3
inc
mov
xchg
sub
inc
inc
or
push
mov
add
bound
es
push
adc
dec
pop
or
add
and
xchg
movsl
lahf
jmp
sbb
test
fsts
scas
repnz
fisubl
mov
sub
stc
cmc
inc
sub
adc
jmp
icebp
mov
out
negl
adc
or
add
push
stos
pop
jmp
xor
or
dec
or
adc
sbb
test
or
hlt
adc
sahf
dec
sarl
test
hlt
push
mov
pop
mov
mov
mov
fsubl
pop
mov
mov
push
mov
je
sbb
lcall
fldt
daa
mov
xor
inc
enter
push
fxch
call
mov
add
pop
call
dec
in
ss
in
or
lock
nop
icebp
les
je
data16
cwtl
mov
fcoms
push
leave
pop
and
xchg
outsl
xchg
cmp
push
and
fucomip
add
addl
pop
or
test
or
out
ja
pusha
inc
add
or
stc
fwait
aaa
in
mov
add
adc
dec
sub
sbb
addr16
pop
hlt
cmp
xor
add
sbb
rclb
xchg
mov
in
lret
aam
fadd
dec
inc
adcl
lods
cmp
sbb
dec
mov
je
add
jg
xchg
sub
les
xor
loope
push
push
xor
add
or
lret
mov
shl
call
pop
or
xchg
sar
push
dec
cld
shlb
cltd
add
aad
xorl
loope
stos
gs
inc
inc
pop
xor
outsb
pop
inc
push
rclb
dec
jecxz
mov
or
into
pop
movsl
xchg
dec
cli
jp
fisttps
xchg
mov
pusha
sbb
sbb
daa
mov
push
xor
dec
xor
hlt
mov
insb
sbb
push
push
loope
sarb
pop
push
push
add
out
or
xchg
jnp
adc
fidivl
shrb
mov
inc
mov
aaa
jl,pn
push
int3
add
mov
push
xchg
pop
add
xor
fs
or
loopne
jg
loopne
aad
push
idivl
mov
out
call
je
xor
filds
pop
dec
stc
and
pop
xchg
cmp
js
or
and
hlt
or
jg
adc
subb
outsl
mov
adcl
sti
sbbb
push
test
inc
es
jl
or
add
ret
push
xor
cli
cmovnp
call
push
xchg
movsb
jns
or
lock
xchg
js
mov
jg
dec
repz
out
dec
or
call
add
jl
ds
ret
lods
xchg
xchg
and
setno
add
and
fiaddl
pop
add
stos
mov
mov
pop
dec
adc
and
js
sbb
setl
pop
std
mov
inc
push
pop
pop
outsb
xor
dec
mov
ret
pop
iret
adc
addb
xor
push
xor
inc
adc
push
cmp
push
adc
xchg
sub
lods
orl
dec
fs
into
mov
movsl
sbb
in
adc
fcmovb
ds
pop
pop
sbb
fs
push
push
shll
mov
push
sub
enter
loopne
dec
or
mov
dec
add
mov
xor
jecxz
fildll
or
cmp
sbb
mov
out
mov
call
je
aas
push
test
or
in
sub
and
enter
xor
add
jge
xor
mov
es
fisubrl
je
je
loope
pop
les
mov
push
or
call
jmp
push
add
fsts
adc
cltd
inc
lcall
pop
shll
jne
or
lods
and
or
rcll
fistpll
popf
xchg
fmuls
add
sub
pop
add
jmp
adc
pusha
ja
mov
cli
add
pop
je
or
push
cmp
xor
or
push
mov
call
mov
add
and
sbb
cld
fstp
add
adc
mov
sti
lcall
add
inc
push
pop
mov
mov
push
pop
jmp
dec
adc
movsb
xchg
fsqrt
fiadds
scas
jmp
mov
pop
ss
pop
inc
mov
push
mov
rolb
cmp
and
pushf
push
adc
pop
push
aas
lea
lods
sti
inc
outsl
imul
inc
or
fstl
push
cld
push
xor
dec
repz
notb
imul
push
jmp
jmp
adc
in
sbb
mov
lret
pop
and
test
and
xor
sub
punpckhbw
xor
pop
push
add
mov
rcrb
gs
cmp
out
cmp
or
je
dec
out
add
xor
scas
ret
in
inc
push
sbb
shll
sbb
xchg
inc
adc
and
or
push
and
push
push
add
repnz
xchg
addr16
and
or
add
sub
push
push
mov
jns
sub
call
sbb
incb
out
mov
iret
outsb
add
fsubl
aaa
das
mov
xor
jns
sbb
adc
cs
inc
scas
xchg
and
pop
push
jl
cmovo
repnz
push
xchg
sbb
cmpl
repnz
cmp
push
inc
cmp
add
cmp
or
nop
and
lods
pop
push
push
push
inc
iret
lret
inc
xchg
or
les
pop
rcll
dec
add
pop
sbb
ja
loope
aam
and
and
push
push
dec
dec
dec
sahf
xchg
addr16
adc
mov
stos
loope
in
jmp
push
clc
mov
sbb
mov
daa
pop
push
dec
popa
cmp
add
sbb
mov
inc
xchg
out
push
aaa
dec
insb
dec
repnz
iret
rcrl
repz
mov
pop
or
ret
dec
call
insl
call
mov
imul
rorb
add
push
add
mov
push
sbb
inc
loopne
mov
pop
jmp
pushl
movsl
sub
pop
sub
inc
scas
mov
xor
insb
pop
lret
dec
or
mov
jo
dec
ret
cld
mov
lods
dec
inc
or
sbb
or
movsl
sub
xor
push
stc
enter
pop
sbb
pop
push
push
xlat
test
jmp
fmuls
in
inc
jecxz
je
loopne
jae
loopne
and
adc
sub
pop
or
xor
inc
cmp
push
xchg
mov
pusha
push
xor
mov
adc
loopne
filds
mov
lea
dec
scas
in
sub
push
cmpsb
call
clc
ror
stos
jns
cmp
testb
cs
add
orl
testb
call
movl
push
aaa
clc
xor
add
cs
mov
std
pushf
pop
dec
xor
repnz
fdivr
lock
mov
sub
jne
flds
xor
jp
pop
or
fstps
ret
mov
dec
or
adc
dec
pushf
and
xchg
add
xor
js
push
cmp
cmp
mov
dec
dec
xchg
test
add
pop
cmp
sbb
or
pop
push
add
mov
cld
dec
or
roll
lock
leave
arpl
jae
popf
and
sbb
or
dec
sti
inc
add
loope
jne
jbe
inc
mov
push
lds
ret
xor
sti
adc
mov
rcr
aaa
sbbl
jne
dec
push
inc
mov
adc
dec
or
jecxz
jae
or
inc
in
push
push
push
ss
jl
int3
push
sbb
shrl
or
in
pop
enter
adc
stos
and
ret
das
add
push
leave
test
adc
mov
in
fidivl
jbe
push
push
pushl
out
mov
pop
adc
flds
mov
jl
cmp
sbb
pop
fucomp
inc
mov
and
out
pop
cmp
jne
pop
adc
sbb
pop
xor
cmp
jge
cmp
cmp
pop
js
iret
fwait
or
mov
push
test
daa
push
and
xchg
loope
or
ficompl
and
jae
loopne
jl
repnz
mov
in
aaa
call
add
call
xchg
inc
imul
jg
xchg
movsb
testb
sbb
or
mov
or
test
decb
faddp
inc
aad
and
data16
mov
andb
sub
jle
ror
std
subl
out
int
andl
in
loopne
mov
sbb
cmpsl
and
and
inc
push
scas
sbb
je
cmp
ret
push
push
outsl
add
sbb
mov
or
addl
addl
pop
fs
xor
decl
lret
push
test
inc
or
and
and
sti
mov
dec
add
mov
imul
pop
xor
sti
insb
call
imul
xor
lods
out
lahf
js
lock
jns
mov
jge
sbb
jmp
push
inc
jecxz
add
scas
ret
push
or
loop
test
mov
xlat
dec
notl
jbe
mov
pop
mov
out
xor
push
mov
cmp
rcr
insb
imul
xor
movsb
pop
pushf
imul
inc
mov
ret
inc
jno
aaa
test
dec
insb
pop
orb
leave
dec
pop
mov
mov
aam
push
dec
clc
push
orb
xlat
mov
pop
or
std
cmpsb
rolb
stc
add
test
mov
push
push
sub
cmp
jbe
mov
out
push
push
cmp
push
sbb
push
pop
adc
jmp
arpl
sub
leave
outsl
pusha
test
inc
out
jbe
mov
pop
or
idivl
shll
adc
push
push
sahf
add
pop
and
iret
mov
or
pusha
fwait
jb
cmp
in
mov
push
addr16
add
cmp
xor
xchg
or
sbb
push
pop
or
inc
int
xchg
adc
xor
sti
push
adc
xchg
outsl
add
fwait
adc
or
inc
push
cmp
jb
lret
jp
inc
cmp
ja
mov
sti
xor
inc
jmp
xor
js
cmp
push
fdivr
das
push
push
push
ja
mov
loopne
rclb
inc
aam
adcb
mov
ret
test
and
push
cld
push
pop
addb
decb
inc
or
mov
scas
and
cmp
mov
jne
andl
std
lea
push
push
push
sbb
cs
add
or
inc
add
dec
std
adc
push
rcrl
pop
jb
mov
lahf
add
inc
xor
filds
or
cmp
jmp
dec
leave
mov
xchg
lahf
movsb
inc
inc
aas
or
fsubs
xor
push
add
rolb
or
add
das
rcr
scas
mov
xor
add
xor
xchg
movsb
fildl
pop
adc
push
jne
mov
jne
inc
fisttps
in
mov
movswl
rolb
dec
inc
adc
add
das
cmp
jo
out
ret
adc
imul
negb
rcrb
sbb
out
movsl
xor
aam
les
incb
push
or
dec
insb
mov
adc
jge
push
js
jnp
scas
xor
cld
loopne
push
push
fwait
scas
lods
xor
out
mov
int3
add
daa
jno
enter
pop
int3
js
or
jbe
or
and
shl
pop
or
pmaxsw
les
and
or
test
push
adc
cli
push
jnp
movsl
icebp
mov
sbb
mov
pop
mov
rep
mov
adc
add
push
xchg
pop
or
inc
fiaddl
lea
pop
cmp
sub
push
jae
dec
leave
or
sbb
imul
les
add
push
jge
mov
dec
lods
jge
or
ffreep
adc
ss
fisttps
jns
out
pop
ret
push
mov
xor
ja
sub
aam
dec
push
sub
fiadds
cltd
jne
test
or
xor
fadd
dec
rcll
jp
dec
and
cmp
pushf
dec
mov
sub
test
xchg
push
or
ret
andps
shlb
cmp
pop
sbb
loop
pop
or
pop
push
adc
fs
lds
push
inc
out
or
stos
pop
sbb
clc
je
add
push
sbb
dec
fisttpl
rcrl
cmp
mov
mov
ljmp
cld
adc
faddl
sub
jge
loopne
sub
inc
xchg
repz
inc
add
test
add
sub
lea
jp
mov
push
inc
inc
cmp
scas
xchg
mov
jb
sbb
in
and
aaa
dec
sbb
fstps
jecxz
sub
or
and
rcrl
aad
pushf
push
fadds
lret
mov
push
lods
pop
or
sub
add
stos
aam
push
pop
insl
push
cld
push
xor
sbb
adc
xchg
mov
lret
jp
inc
adc
pop
sti
sbb
mov
int
mov
sub
xchg
adc
add
pushf
mov
adc
lods
sbb
sbb
test
add
mov
pushf
fstpt
sbb
push
pop
stos
fsubr
mov
test
push
xor
jg
mov
jb
pop
enter
inc
movsb
mov
sub
push
ljmp
mov
jecxz
push
mov
jle
sbb
shr
not
inc
lea
cmc
sbb
in
je
out
and
es
mov
xchg
shll
push
xor
pop
inc
dec
jle
aas
dec
push
addr16
mov
or
xchg
xchg
or
xor
lret
lret
lret
xor
cmp
in
inc
loopne
add
dec
push
popa
add
or
imul
push
sbb
add
rolb
push
jl
jno
inc
add
jle
imul
stos
push
js
dec
aam
push
mov
data16
decl
andb
jno
jg
push
shlb
lods
shrb
enter
xor
ljmp
add
adc
shlb
or
stc
mov
dec
out
xor
mov
push
icebp
pop
or
es
mov
dec
dec
jmp
scas
inc
push
inc
mov
test
jle
je
mov
xchg
out
sbb
push
fsubrl
jmp
hlt
nop
ret
xor
addr16
arpl
fisttpll
dec
pop
cmp
and
out
std
scas
pop
call
js
mov
popa
sub
lret
int3
dec
test
in
je
cmp
jae
cmp
xchg
add
inc
imulb
add
adc
cmp
sub
xor
dec
pop
leave
pop
or
adc
sbb
xchg
jo
lock
loop
mov
mov
jmp
pop
cmp
jge
jecxz
enter
cmp
subb
or
sbb
rep
bound
in
out
or
adc
jmp
sub
jae
pop
xor
arpl
not
and
inc
pushf
mov
sbb
andl
or
jnp
and
jne
push
push
pop
aam
inc
push
inc
cli
sub
mov
repz
ja
loopne
adc
push
insb
push
dec
data16
inc
sub
dec
or
mov
mov
or
outsb
test
lcall
inc
xor
addl
xor
jbe
inc
pop
push
sbb
mov
scas
repz
js
orb
cli
xor
call
xor
andl
or
inc
mov
adc
sub
sbb
or
mov
add
push
push
sbb
leave
clc
push
mov
inc
rolb
xchg
popa
daa
int3
mov
cmp
inc
in
mov
jmp
mov
jl
and
test
mov
and
push
lock
cld
sub
cmp
xor
mov
xchg
cmc
insb
enter
pop
adc
shll
mov
push
shrd
push
cld
clc
pop
outsl
sbb
pop
pusha
xor
add
lret
loop
test
xor
mov
push
push
inc
sub
sub
sub
in
mov
mov
push
mov
jp
cmp
call
jb
add
push
mov
mov
push
pop
push
js
sahf
push
mov
in
or
and
add
pop
adc
adc
jno
sbb
fdivr
subb
mov
pop
mov
dec
rclb
loopne
jb
mov
adc
inc
adc
arpl
pop
arpl
add
mov
xor
or
inc
test
sbbb
cmp
aas
imul
sarb
dec
jne
push
loopne
mov
inc
popa
lods
je
cmp
mov
jmp
rorl
add
mov
lock
dec
movsb
xchg
jo
push
insb
jmp
push
test
std
lock
jmp
jge
je
xor
mov
mov
testl
scas
inc
pop
cltd
cmp
jl
orb
bound
adc
outsl
or
push
icebp
lret
push
inc
stos
subb
xchg
sub
mov
sbb
fnstcw
popa
pop
adc
sbb
repz
jae
clc
stos
shrb
into
call
aad
pop
pop
es
adc
repnz
pop
mov
jo
mov
sub
add
inc
xor
adc
int3
adc
adc
jle
test
shrb
enter
es
jo
and
xor
mov
or
mov
adc
test
mov
and
dec
xchg
add
add
fadd
jle
pop
pushf
sub
insb
loope
mov
push
adc
add
or
push
pop
add
adc
stc
adcl
push
daa
leave
es
xor
push
dec
add
dec
or
push
outsl
out
adc
push
outsb
sub
sar
cmp
jbe
or
add
shlb
push
push
sbb
inc
mov
ficompl
jle
or
inc
inc
outsl
cmp
in
mov
hlt
nop
pop
arpl
movsb
mov
cld
xchg
jmp
pop
or
cs
or
cmp
inc
mov
addl
lea
mov
push
fidivs
fdivp
rorl
pop
mov
leave
lods
fs
movsl
push
andl
dec
jnp
xchg
pop
pop
scas
pop
push
fnsave
jnp
in
push
scas
ret
adc
lea
add
hlt
lock
notb
testb
call
push
xchg
sub
pop
sbb
inc
inc
ficoms
dec
sbb
imul
mov
ja
mov
insl
add
cmp
cmp
sbb
lods
push
sub
and
ret
pop
inc
add
stos
adcl
pop
shlb
nop
push
in
inc
testb
jo
jmp
mov
ss
arpl
dec
add
ljmp
in
cwtl
outsb
sar
lea
jp
xchg
sahf
or
mov
aad
jae
jb
pushl
jae
pop
or
pop
sbb
es
jae
adc
adc
and
shlb
mov
pop
or
int3
sahf
inc
clc
inc
outsb
add
lea
sub
in
imul
lock
popa
mov
sub
jl
test
add
out
mov
stos
or
loopne
add
rorb
sub
into
in
add
pop
jmp
pop
pusha
push
xchg
into
lock
stos
hlt
call
inc
sub
push
sub
out
xchg
dec
sub
je
or
mov
dec
mov
push
mov
arpl
dec
xchg
sbb
dec
ljmp
add
ret
cli
and
enter
dec
xorl
push
jb
pop
sbb
cmpl
add
push
push
jbe
push
jmp
or
cmp
sbb
or
popf
dec
push
add
pop
imul
cmp
ja
fcmovnu
insb
insl
jb
arpl
ja
and
in
adc
or
jb
shrl
sub
sub
mov
cmp
fwait
call
lahf
xchg
sbb
mov
jmp
add
xchg
pmulhuw
pop
ffreep
add
jb
dec
or
aam
pushf
mov
lock
mov
mov
cmp
je
pusha
test
add
and
sub
stos
adcl
adc
xchg
adc
enter
mov
push
rol
dec
loopne
sub
xchg
pushf
pushl
lcall
pop
mov
ret
xchg
inc
and
pop
cmpsl
push
enter
push
enter
and
jb
add
and
add
add
enter
jns
add
daa
sub
add
add
pop
in
cmp
sub
cmp
inc
scas
sbb
mov
aam
sbbb
push
xchg
mov
xor
or
xor
adcb
cmp
sub
xor
inc
leave
fstpt
xchg
cmpl
test
push
clc
out
cwtl
add
or
adc
or
xor
mul
adc
adc
stos
dec
add
and
mov
mov
inc
add
or
movl
shrb
andb
lds
or
jns
pop
sub
adc
add
jecxz
adc
loope
pusha
insl
adc
mov
push
aaa
mov
rcl
xor
ja
ja
adc
filds
loope
dec
sub
js,pt
xor
addb
aam
xor
push
out
popa
aad
imul
imul
movsl
xchg
xor
imul
insl
push
and
fisttps
ret
jb
inc
push
push
je
and
inc
adc
sub
or
and
int3
pop
outsl
add
or
push
xor
jo
pop
adc
js
test
sbb
fstps
cld
cltd
lret
mov
sub
stos
or
push
adc
or
add
sub
fdivrl
mov
xor
jne
push
add
fbstp
in
add
addl
test
or
lds
es
je
jmp
stos
bnd
mov
mov
pop
sub
das
movsl
adcb
dec
sahf
pop
rclb
jae
jne
sbb
sbb
aaa
nop
out
add
in
test
in
inc
call
das
xor
cmp
je
movsb
int3
pushf
push
cs
inc
mov
or
dec
int3
or
mov
push
cmpb
jae,pn
sbb
aad
outsb
mov
mov
or
add
mov
jg
cmp
adc
leave
lds
icebp
dec
insb
jmp
cmp
in
shlb
jno
adc
lock
in
loopne
loop
mov
add
jno
push
push
clc
pop
mov
or
fdivrs
mov
pop
or
adc
dec
cmp
jg
addr16
fwait
and
jo
add
dec
push
popa
or
or
xor
jae
aad
push
inc
push
outsb
cwtl
xchg
add
outsb
addb
dec
pushf
faddl
pmulhuw
and
mov
mov
loope
sarl
mov
jmp
or
cmp
xchg
shlb
and
inc
push
push
pop
dec
sahf
fadds
int3
sbb
mov
sub
push
mov
xchg
dec
cmp
jmp
add
pop
or
ss
test
xchg
or
push
xchg
or
or
ljmp
fsubr
or
es
jo
adc
or
mov
movsl
pop
cmp
bound
cld
push
add
xchg
lock
jmp
adcl
and
rcl
lods
lock
push
mov
cld
sub
in
add
loopne
pop
mov
adc
push
repnz
or
ret
push
push
push
bound
pop
clc
xor
xchg
inc
xor
orl
negl
adc
jge
out
xorl
repz
or
sub
enter
lahf
or
dec
and
cmpsb
sub
test
ss
push
loope
dec
out
and
or
jne
dec
invd
xor
push
lock
add
jno
adc
testb
adc
xor
add
xchg
incl
cli
push
mov
cmp
jl
jae
std
cmp
jle
cmp
push
jp
or
pop
inc
cmp
aas
lods
jecxz
ret
cmp
cmp
test
jge
mov
pop
and
in
out
sbb
xor
je
cmp
je
push
inc
clc
js
pop
xor
lcall
iret
pop
add
push
cs
pop
inc
rorb
mov
aas
sbb
fwait
add
in
pop
jbe
testl
xorb
into
xor
mov
fadds
pop
mov
mov
lock
add
test
jl
push
dec
in
aam
dec
mov
jmp
dec
lock
data16
jge
and
aaa
ss
aaa
and
in
cmp
jne
movl
ret
lcall
xchg
push
clc
addr16
pop
or
inc
adc
and
in
jmp
sub
lock
ja
lea
mov
icebp
jmp
mov
cs
mov
dec
or
sbb
sbb
cmpsl
lods
loopne
xchg
mov
adc
ja
mov
inc
cmpsb
sahf
jle
test
lret
mov
add
icebp
pop
mov
js
push
dec
jo
cmp
add
push
fnstenv
fistl
jp
xchg
mov
fisttpl
sbb
mov
scas
loopne
and
jl
call
ss
sub
loopne
aas
cld
jo
or
xchg
dec
push
aad
leave
clc
adc
lea
mov
test
jo
je
pop
cmp
add
insb
popl
call
and
ja
shlb
xchg
sbb
insb
je
adc
push
popa
pop
dec
and
mov
add
inc
xor
std
mov
das
sbb
and
rolb
mov
pop
mov
or
push
pop
pop
fs
test
pusha
mov
andb
cmp
push
fwait
jo
loop
stc
mov
faddl
adc
test
or
out
adc
mov
xchg
pop
push
cltd
add
push
imul
dec
mov
je
out
ror
adc
es
adc
sbb
mov
jns
cmpb
xor
jne
xor
mov
push
and
cmp
mov
imul
dec
addl
cmpsb
out
cli
je
pop
sub
sub
sub
push
pop
or
and
scas
or
xchg
ret
addb
mov
inc
jle
and
add
jno
and
inc
or
add
add
mov
inc
mov
sbb
xor
je
sub
xchg
adc
jne
stc
lock
mov
sbb
jnp
femms
movsb
ret
add
cmp
and
cmpsb
sbb
inc
add
sar
dec
add
in
pop
xchg
add
cli
sub
add
icebp
mov
jecxz
dec
pop
fucomi
jae
and
popa
sarl
sbb
fsubl
push
mov
ss
inc
popf
adc
aad
jnp
xchg
jae
inc
stos
push
and
add
pop
inc
pushf
jmp
mov
jmp
addb
aam
and
lret
pusha
ljmp
sbb
add
ret
xchg
fisttpl
sub
adc
fwait
mov
inc
repz
test
push
push
pop
pop
cs
pop
cld
and
inc
jne
push
sbb
sti
ds
sbb
loop
adc
pop
inc
cmp
in
jae
add
je
cmp
adcb
and
pop
push
inc
aaa
push
or
add
push
movmskps
enter
and
faddl
outsl
push
out
cwtl
ljmp
in
mov
mov
jle
inc
adc
jne
and
jne
adc
jecxz
in
dec
into
push
pusha
movsb
or
push
pop
mov
adc
mov
sub
push
mov
insl
insb
mov
and
pop
mov
pop
pop
jl
pop
inc
outsb
pusha
add
push
lods
add
cmc
push
and
clc
jne
nop
or
imul
repz
jg
in
jno
shrl
loop
mov
pop
cltd
and
mov
pop
adc
icebp
mov
jo
mov
std
push
daa
dec
js
insb
jmp
test
mov
cwtl
adcl
ret
jmp
inc
dec
fdivrs
movsb
cmp
roll
stos
inc
and
mov
loope
cmp
cmpb
fildll
pop
or
jle
enter
xchg
add
add
push
add
push
lea
push
push
jae
sub
sahf
sub
pop
ret
sti
cld
pop
das
xor
loop
hlt
pop
adc
aam
push
xchg
jne
or
or
mov
or
push
push
hlt
jg
mov
sub
add
or
icebp
mov
subl
jmp
mov
push
ret
orps
add
daa
mov
cmp
pusha
mov
adc
jbe
cmc
push
loopne
mov
stc
sub
lea
or
das
xor
mov
lret
pop
ret
inc
mov
arpl
arpl
sarl
jg
mov
dec
test
push
incb
push
inc
movsb
sbb
pop
test
int
sub
dec
adc
shrl
inc
add
dec
aad
clc
aam
mov
cmpl
movsb
sbb
lock
scas
sub
dec
adc
pop
add
or
aad
add
or
add
cmc
sub
xor
jmp
gs
lret
sbb
dec
sahf
push
cs
dec
push
mov
jne
in
push
ja
mov
add
sarb
cmp
push
shrd
pop
push
jo
andb
pushf
out
rol
and
dec
clc
ret
jmp
add
pushf
cmp
add
mov
pop
leave
and
pop
mov
mov
xor
lret
mov
add
jmp
sub
dec
inc
lea
lods
push
bound
xchg
cmpsl
push
or
inc
pop
pop
hlt
push
jne
ss
xchg
add
sub
adc
out
jmp
in
scas
mov
dec
jnp
add
add
cmp
push
lea
lds
mov
sub
jae
call
or
mov
cmc
xchg
mov
lret
and
xor
clc
sub
ret
clc
add
pop
adc
adc
popl
push
jle
aaa
and
pusha
mov
dec
lret
dec
xor
pop
and
scas
jbe
fcomp
in
fiadds
pop
xchg
cmp
push
fldl
pop
push
push
fstpl
leave
sub
data16
mov
sub
jbe
aaa
adc
adc
jne
iret
iret
repz
divb
or
jne
or
jne
or
jecxz
cld
push
sbb
push
fldz
add
pop
andl
xor
mov
fisttps
popf
add
adc
lea
movq
jmp
pop
mov
sub
aam
arpl
jo
sti
add
or
pop
jecxz
loop
add
or
dec
sbb
mov
adc
add
test
scas
aas
sbb
sti
jae
rorb
lea
inc
and
movsl
insb
fidivrs
inc
lret
aam
or
jg
sbb
jne
cmp
inc
loope
inc
inc
in
sub
push
or
fldt
testl
xor
out
or
push
jp
mov
xor
xor
push
and
pusha
pop
addl
mov
add
fmull
add
push
jmp
xchg
jbe
outsb
xchg
popf
adc
cmpsl
hlt
mov
movsb
push
jbe
xchg
xor
nop
add
add
test
pushf
or
repnz
jge
and
jg
dec
mov
add
pop
fdivrs
mov
mov
cmpsb
cmpb
and
enter
push
pop
jmp
sub
shrb
pop
popa
xchg
pop
fs
push
push
jo
push
pop
enter
jo
pop
jne
stc
shlb
xor
push
push
repnz
push
add
test
cmp
addl
repnz
sbb
push
lds
push
mov
sbb
push
mov
sbb
adc
popa
pop
adc
dec
popa
repz
ficoms
inc
cmp
sub
les
jno
lretw
lods
push
fistpll
add
pop
pusha
mov
movsb
loopne
xchg
add
outsl
sub
dec
xchg
loope
mov
enter
jno
add
pop
add
adc
mov
fimuls
and
cltd
nop
enter
adc
add
sub
sbb
and
add
jb
and
push
subl
or
pusha
xor
fcompl
inc
jo
movsb
leave
enter
fcoms
pop
xor
dec
insb
in
call
inc
test
add
in
popf
mov
addl
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
imul
jge
add
stos
xchg
add
mov
xor
arpl
and
and
add
pop
add
pop
push
inc
imul
sub
pop
fs
cmp
cs
jecxz
mov
loopne
lahf
xor
cmp
jle
pushf
ret
fs
pop
es
daa
xchg
and
cmp
mov
or
push
adc
call
jg
push
je
or
add
insl
push
lea
out
pusha
add
add
cs
rolb
nop
data16
jbe
leave
jnp
add
test
hlt
cld
cmp
jl
xor
jge
cld
aad
fistpl
push
xchg
xor
out
out
and
push
call
imul
gs
push
insl
push
adc
pushf
add
add
int3
or
or
jle
pop
push
frstor
mov
pop
sbb
mov
ret
mov
push
mov
mov
push
call
bnd
push
fistpl
or
dec
xor
jbe
les
test
mov
dec
jb
cmp
mov
hlt
xor
sub
mov
stos
call
ret
rcl
fcompl
mov
mov
sub
add
pop
repz
mov
mov
xor
jge
call
adc
mov
jns
sub
or
sub
xlat
movlps
jne
xor
test
add
mov
ret
loopne
xor
mov
arpl
lds
adc
dec
es
fdivrl
inc
add
or
push
push
inc
sub
das
lock
adc
pusha
mov
adc
dec
adc
adc
lea
ss
pop
jle
pop
inc
mov
dec
add
lcall
pop
inc
push
pusha
je
inc
pop
pop
inc
cmp
and
jmp
inc
je
and
pop
hlt
and
pop
rorb
mov
cmp
and
adc
pop
push
fchs
divl
les
pop
push
inc
rolb
jnp
or
shrb
mov
or
sti
daa
in
xchg
adc
out
fdivrs
mov
lea
dec
scas
repz
es
lret
pop
jp
movsl
sub
add
gs
fwait
sub
cmpb
es
stc
inc
pusha
pusha
mov
push
mov
xlat
mov
pusha
ret
cs
mov
lea
popa
mov
jne
lea
pushf
rorb
loop
jne
sbb
cld
outsb
cmp
or
mov
iret
pop
lds
push
in
test
scas
push
add
and
dec
clc
ljmp
dec
clc
jae
notb
inc
or
adcb
mov
inc
je
or
push
mov
add
mov
test
sbb
inc
pusha
outsl
outsl
dec
adc
sbb
cmp
orl
cmp
lods
mov
jle
and
push
push
dec
cmp
jle
cmpsl
add
mov
add
stc
clc
and
imul
adc
int3
push
or
pop
inc
test
xorl
lahf
sti
fs
pop
adc
pop
xchg
push
mov
mov
xor
xchg
dec
mov
repz
or
xor
movsb
xchg
or
inc
sbbl
andb
add
lahf
dec
sbb
lret
jae
sbb
lahf
enter
lcall
lcall
mov
test
lahf
push
xchg
fists
ret
mov
sbb
pop
jo
in
lock
mov
push
dec
inc
inc
add
jne
fcoms
dec
sub
repz
add
test
add
mov
pop
and
add
xchg
xorl
add
in
icebp
loope
cmp
ror
and
insl
xchg
mov
push
xchg
adc
sarl
add
add
pop
sub
lods
mov
pop
mov
add
lea
shlb
stos
rorb
adc
xchg
in
mov
sbb
test
push
sbbl
adc
push
shll
push
sub
aaa
ret
inc
fs
add
std
loop
mov
xlat
mov
fdivrs
push
sub
jge
add
inc
mov
adc
fxch
rcrl
adc
add
add
movl
pop
test
loopne
dec
daa
xor
insl
push
sub
pop
mov
jecxz
xor
inc
in
je
call
mov
adc
hlt
xor
cmp
push
mov
add
mov
mov
icebp
shlb
or
sub
push
ret
enter
mov
xchg
xor
ret
dec
addb
xor
push
dec
sarl
sub
mov
adc
arpl
jo
ret
push
add
sbb
xor
aam
or
sub
cs
enter
adc
ret
sbb
ficomps
push
movsb
in
sbb
add
or
or
into
arpl
pop
fsubl
sbb
in
push
add
add
dec
out
dec
aam
movsb
lock
loopne
add
je
or
lds
xlat
inc
lahf
lods
push
inc
test
and
test
stos
rorb
aam
xor
push
inc
rep
adc
dec
pushf
sbbb
jmp
rolb
and
inc
mov
add
dec
das
outsb
adc
aaa
sub
fldt
subl
orl
adc
test
repz
jmp
sbb
cmpsl
mov
popf
clc
jno
fimull
popf
imul
sbb
fdivl
mov
jne
inc
in
mov
stos
push
sarl
nop
test
dec
pusha
scas
pop
cmpsb
push
test
xor
pop
dec
jp
fstps
pop
pop
or
jnp
cmpsb
adcl
add
mov
mov
or
loope
adc
repz
or
cs
jne
loope
fs
fiaddl
mov
push
dec
addl
insl
push
inc
add
inc
stos
ret
mov
in
pop
in
add
inc
pop
pop
jl
lock
pop
jne
sub
addl
jae
pushl
sbb
xchg
dec
jb
ffree
imul
dec
nop
dec
sub
vmwrite
xor
add
mov
inc
adc
xchg
jp
mov
push
jo
nop
push
xchg
xorl
sub
or
mov
lret
outsb
or
js
daa
dec
pop
mov
sub
out
add
das
dec
xchg
add
or
dec
push
add
pushf
xchg
pop
pop
sahf
xchg
lret
pusha
lods
or
cmpb
jo
pop
mov
or
outsl
or
jb
inc
movsb
or
sahf
mov
pop
xorb
push
adc
adc
sbb
lret
cmp
sbb
rclb
inc
fpatan
xchg
push
pop
hlt
mov
and
push
sub
movsb
in
mov
mov
add
or
pop
outsl
shr
cmpl
adc
mov
nop
and
dec
mov
pop
or
xchg
lret
rorl
pusha
mov
push
xchg
pop
mov
mov
imul
sub
dec
xor
je
xor
push
lock
jo
insb
loopne
or
push
cmp
mov
push
and
inc
or
add
mov
arpl
leave
ja
sub
push
xor
and
pop
and
pop
arpl
and
push
add
jnp
and
sub
dec
push
cwtl
and
push
aam
iret
sbb
mov
in
imul
and
push
or
cltd
jg
sub
out
ret
cmc
lret
cmp
and
js
aam
aad
sub
mov
mov
xor
testb
or
sbb
daa
popa
and
adc
insl
inc
adc
out
loopne
movsb
mov
push
fisubrs
hlt
push
mov
sbb
mov
push
pop
int3
sbb
cmp
xor
add
push
sarb
je
jae
mov
and
add
jle
adc
stc
aam
push
mov
inc
or
sub
sbbb
inc
jns
mov
xor
lea
test
jg
pop
enter
jl
repnz
add
xor
mov
push
add
adcb
neg
sub
add
sub
xchg
push
sbb
pop
out
jg
inc
xchg
add
lea
inc
movsl
aad
movsb
rorl
inc
movsl
mov
shlb
out
loopne
pop
mov
enter
fsubs
pop
mov
mov
aad
mov
adcb
push
ljmp
aas
je
push
xchg
jnp
pop
mov
mov
jl
test
pop
sbb
inc
fmull
insl
add
loopne
js
push
frstor
loopne
xor
jg
sbb
orl
fstps
adc
or
sbb
jnp
cmp
or
nop
push
xor
xor
sbb
sbb
test
sbb
sub
mov
addr16
les
pop
push
hlt
movsb
repz
sub
rol
hlt
call
add
push
je
test
or
cmp
jb
push
fistpll
sbb
inc
stos
daa
insb
imul
xchg
jnp
and
pusha
cwtl
je
lock
xchg
loop
aad
sbb
call
push
scas
dec
jl
inc
cmpsl
mov
push
push
mov
add
jbe
push
pop
sbb
out
push
xchg
pusha
dec
sti
mov
stos
out
jg
push
push
loope
pop
pop
or
pushl
mov
test
and
push
insb
push
cmpsb
push
push
aad
xchg
dec
mov
jle
repz
and
lret
xor
push
xor
sar
jbe
mov
sub
and
jb
mov
add
or
xor
add
sbb
popaw
add
and
mov
div
inc
cmp
jae
or
adc
les
inc
pusha
jmp
mov
push
rcrl
or
sbb
ret
xchg
fistpll
rol
jge
mov
xchg
sbb
clc
psubb
rclb
pop
shlb
or
and
mov
mov
scas
lods
outsb
adc
pop
cmc
stos
pop
and
and
cmp
je
movsl
add
loope
pushf
or
je
inc
and
cmp
jne
daa
loop
push
push
sbb
ds
paddq
pop
ffree
shll
jmp
push
push
mov
lods
add
push
or
ss
ja
and
lds
push
addr16
xchg
lahf
push
es
ficoms
inc
dec
jns
cmp
mov
pushf
ret
sbb
jmp
inc
xchg
inc
pop
cmp
inc
ror
out
adc
incl
ret
adc
incl
test
shl
or
sbb
xor
inc
lock
sub
inc
sbb
cmp
fadds
or
les
jb
sub
mov
push
or
or
fst
popa
call
rcl
cmpsb
pop
add
fnstsw
test
je
and
add
cmpsb
jecxz
test
sbb
addl
pop
stos
and
xor
aas
outsl
outsb
sbb
pop
out
inc
sbb
mov
clc
and
insl
clc
push
cmp
cmp
add
add
jnp
xchg
cmp
or
inc
insl
cld
pop
fsub
pop
fsubrp
icebp
jge
adcl
or
ret
out
or
add
pop
add
and
xor
push
rcrb
push
mov
scas
add
sub
subl
aaa
pop
sbb
es
pop
add
adcb
pop
jmp
sub
mov
sbb
ss
cli
xor
iret
lret
push
push
jmp
movsl
sbb
aam
jle
sbb
sub
cmp
hlt
dec
adc
pop
and
fnstsw
pop
xchg
iret
dec
sub
mov
addb
fbld
adc
movsl
add
jo
adc
ss
mov
add
lahf
fstps
lea
lcall
jl
fstpl
xor
push
aas
stc
pop
adc
leave
scas
repnz
scas
push
dec
sbb
xlat
cmp
testb
cmpsl
push
push
push
push
fs
push
push
fs
adc
add
push
push
mov
lds
aaa
add
add
cmpsb
pusha
pop
add
push
and
jne
sub
sbb
push
or
push
sarl
sub
loopne
insb
cs
loopne
or
pop
test
adc
ret
mov
leave
push
inc
fwait
aam
and
push
mov
or
jns
pop
movl
push
es
add
xor
xchg
xor
xchg
push
es
jns
push
inc
sub
leave
outsb
sub
test
jbe
mov
das
xor
fmuls
outsb
int3
and
and
loopne
or
fstps
daa
xor
push
sub
std
punpckhbw
adc
add
adc
and
aaa
add
sub
add
and
cmp
adc
rcll
push
lret
insb
and
jne
dec
outsb
andb
or
add
dec
jbe
mov
stos
sbb
aam
pusha
test
and
dec
and
nop
mov
lcall
lods
adc
jns
out
inc
push
push
sahf
mov
lods
cmp
repz
and
cmp
repz
cmp
mov
lods
scas
repz
repz
and
inc
push
push
jns
lods
fwait
aas
xchg
mov
mov
push
je
mov
pop
out
jmp
and
call
lock
lahf
and
aad
pushf
jl
add
sbb
xor
shlb
int3
test
lea
nop
push
sbb
add
or
adc
mov
rclb
jmp
or
adc
pop
cmp
add
andb
pop
add
push
xchg
pop
jnp
inc
jp
cwtl
popa
add
mov
jno
iret
sbb
ret
mov
popa
and
mov
xor
add
and
push
pusha
and
loopne
mov
adc
push
push
fisubl
push
sub
ret
sbb
mov
mov
mov
add
push
inc
or
push
pop
cld
popa
add
daa
push
mov
xor
add
add
push
lods
sub
sahf
out
sub
or
loop
xchg
dec
add
and
or
push
add
enter
shrl
sbb
and
filds
loope
jb
mov
inc
mov
fnstsw
adc
jl
cmp
leave
add
sar
add
lahf
mov
mov
cmp
jle
popf
add
add
iret
xor
jl
idiv
ss
pop
es
jle
jo
jecxz
push
xchg
add
adc
push
sub
loopne
xor
lock
add
call
call
pop
adc
push
sub
fs
push
jge
xchg
push
and
cmp
mov
mov
add
adc
movsb
add
jle
add
inc
or
jo
out
add
pop
addr16
sub
xlat
mov
dec
or
inc
add
sbb
jne
cmpb
pop
and
das
or
add
add
ret
or
add
or
pop
cmpsl
add
dec
pop
leave
add
ljmp
cli
or
or
xor
push
push
nop
push
or
and
mov
mov
test
dec
mov
les
out
aaa
xchg
iret
push
jmp
ret
inc
adc
push
mov
push
movsl
ret
cltd
nop
add
dec
push
xor
jecxz
dec
add
fsubs
subb
imul
divb
adc
fcomps
xchg
ja
add
add
cwtl
and
or
dec
adc
jb
xor
sbb
mov
add
adc
dec
and
mov
xchg
movl
lock
inc
stos
jg
sub
cmp
jnp
add
jns
xchg
push
jb
mov
adc
add
mulb
pop
mov
add
xchg
or
jecxz
mov
and
pop
adc
nop
push
popf
lgdtl
xchg
adc
add
aam
inc
sub
push
adc
add
mov
push
xor
loop
add
inc
or
outsb
adc
or
push
xor
jecxz
les
dec
ret
insb
ret
and
xor
xor
add
lods
add
aam
sbb
adc
orl
test
jg
and
add
sbb
or
sbb
jo
xor
add
push
mov
add
fstps
imul
js
imul
lcall
cmp
push
enter
push
aam
xchg
and
stc
push
mov
loope
xor
test
cmc
or
and
inc
test
add
mov
mov
xchg
or
xchg
push
add
nop
sub
stos
call
lahf
sbb
sub
shrb
jb
adc
test
scas
xchg
pop
cmpsl
add
enter
push
pop
pop
adc
pop
inc
xor
or
xor
xor
mov
push
movsb
and
adc
lahf
adc
mov
push
or
mov
in
push
and
add
add
xor
adc
add
push
icebp
inc
or
addb
sub
cs
aam
stos
push
dec
sub
sbb
add
jo
or
cmp
aad
adc
aaa
or
push
add
cmp
orb
push
adc
push
test
xor
and
mov
or
add
add
enter
add
xchg
pop
shlb
dec
add
jae
push
push
pop
inc
inc
pusha
cmp
sbbl
jmp
std
inc
dec
negb
mov
or
ret
push
lods
add
push
scas
xorb
push
lods
popf
lods
aam
adc
adc
mov
and
insl
mov
sub
push
inc
imul
adc
mov
mov
cmpb
je
jnp
lcall
pusha
xor
adc
mov
inc
mov
inc
dec
xchg
addr16
push
add
leave
sub
mov
push
cmp
push
cmp
fldcw
mov
dec
dec
pop
jmp
les
dec
shll
in
cld
push
test
call
adc
sub
sarl
push
arpl
les
jp
ret
dec
fs
jp
in
std
shll
ja
sub
xchg
jno
rcrl
mov
or
dec
or
inc
cld
xor
pop
cltd
mov
fisttps
jne
fldl
inc
test
push
mov
add
xor
fildl
sbb
jne
push
adc
xor
cmp
pop
add
jbe
loope
aad
adc
push
jl
push
jnp
push
call
dec
insl
and
popa
in
push
push
mov
es
data16
sbb
xor
cmp
dec
lods
lret
fcompl
testl
mov
mov
mov
test
inc
call
xor
or
movsl
mov
in
lret
ucomiss
dec
xor
push
cmp
test
add
pop
add
daa
mov
jbe
inc
xor
add
cld
es
sub
aaa
lock
daa
in
repnz
out
ret
pop
xchg
movb
mov
loopne
inc
adc
jbe
std
mov
adc
cwtl
add
xchg
add
ja
push
add
mov
pushf
mov
in
pop
xchg
adc
mov
xor
sbb
jge
pop
icebp
std
dec
sahf
and
cmp
enter
int
call
sub
lret
pop
call
and
sub
or
adc
inc
in
dec
jp
and
jl
mov
jg
test
push
mov
xor
sub
cmp
mov
jl
mov
incl
shr
and
cli
inc
jl
or
sbb
popa
jp
adc
std
pop
imul
shll
pop
mov
push
add
inc
jmp
sar
xor
mov
push
cltd
pop
idiv
sbbb
div
cmpsl
in
push
pop
dec
out
xor
les
and
aad
or
and
xor
push
xor
mov
cmpsl
pop
mov
mov
mov
mov
jo
rorb
mov
cmp
shr
add
or
add
dec
inc
push
lock
stc
push
lock
hlt
incb
sub
sbb
mov
cmp
cmp
inc
repnz
push
mov
dec
faddl
sub
mov
enter
test
mov
push
push
push
gs
sbb
dec
not
jb
jle
enter
pop
aaa
dec
xor
add
test
xchg
rolb
or
popf
fisttpl
sbb
adc
pop
or
rolb
mov
cmp
mov
sub
dec
add
push
sub
mov
test
add
or
mov
in
lcall
mov
push
and
gs
and
mov
push
test
call
jo
imul
jmp
popa
mov
push
lods
aad
mov
adc
test
pop
scas
je
pop
sbb
in
int3
test
ss
pop
jo
mov
insb
pop
hlt
adc
clc
cmp
lock
mov
gs
sarl
daa
push
jl
pop
jbe
push
pop
jns
movsb
sbb
cs
enter
cmp
sbb
dec
pop
jge
and
enter
pop
and
push
mov
sbb
mov
xor
int3
in
jle
push
sbb
sub
cmp
dec
pop
les
xchg
repz
pop
sbb
pusha
dec
imul
and
cmp
adc
and
xchg
xchg
aam
shr
mov
daa
shlb
ja
add
pop
imul
mov
and
fwait
insb
loope
sbb
dec
in
jb
jne
mov
pop
es
push
sub
daa
jns
cmpsl
leave
dec
ret
adc
push
sub
mov
in
push
inc
inc
adc
jb
leave
int
and
xchg
pushf
dec
mov
leave
leave
and
pop
mov
inc
or
es
dec
jb
cmp
leave
insl
ljmp
leave
leave
leave
pushf
xchg
mov
jl
int3
push
ret
mov
mov
stc
outsl
mov
sbb
ja
lods
push
pop
pop
daa
sub
inc
add
in
sub
adc
adc
sbb
sbb
cmpsl
xor
stc
sbb
divl
jb
call
jp,pn
or
dec
iret
xor
sahf
or
inc
sti
fadds
dec
xor
pop
push
rorb
inc
mov
mov
dec
mov
fistpll
mov
jecxz
cwtl
jno
pop
mov
inc
mov
or
ss
mov
mov
bound
or
adc
xchg
loopne
xchg
aaa
shlb
jno
dec
minps
push
rcr
push
ja
pop
or
xorb
xchg
cld
jo
cmpsb
sahf
je
mov
rol
in
inc
pop
test
push
ljmp
dec
das
lock
andl
sub
push
int3
aas
sbb
out
pop
mov
inc
imul
xchg
xor
minps
adc
rclb
imul
xchg
lret
lret
xor
or
push
or
aam
jmp
mov
insb
or
push
hlt
les
push
cwtl
jecxz
mov
into
mov
xchg
dec
fmull
lock
sub
fldcw
sbb
sbb
inc
nop
out
adc
ss
inc
xchg
push
rcll
bound
mov
inc
insb
test
mov
dec
push
add
lcall
inc
or
mov
and
les
inc
fwait
push
rcrl
and
xor
xor
pusha
fs
xor
mov
out
cmp
cmp
test
add
xchg
jle
push
push
jae
rolb
add
push
cmp
mov
xor
neg
sub
ds
xorb
inc
ss
movsb
nop
dec
dec
push
lods
or
movsb
test
and
add
pop
sbb
rol
rolb
jg
inc
aam
rolb
sbb
dec
sbb
popf
add
xor
test
push
nop
rorb
inc
daa
loopne
in
push
sub
out
dec
jbe
jecxz
pop
push
fwait
push
cmpsb
in
psubsw
pop
fisubrs
hlt
xchg
insb
or
jo
daa
or
fcompl
mov
pop
push
adcb
push
cltd
and
into
stc
and
xor
enter
xchg
sbbb
jae
sub
push
out
movsb
test
jns
pop
adc
xchg
insl
mov
pop
mov
jne
push
mov
add
loop
iret
lods
dec
mov
fsubrs
cmp
ja
fcomps
lock
inc
ror
add
jo
in
push
scas
fbld
or
movsbl
pop
cmp
ljmp
clc
dec
push
les
cld
lods
sub
movb
xor
scas
cli
inc
cmpsl
push
rolb
jb
push
lahf
int3
clc
cmp
nop
xchg
mov
shrb
lods
xchg
mov
pop
loopne
adc
call
mov
test
or
shl
movsb
adc
shlb
loop
dec
or
lcall
mov
add
fs
or
lahf
int3
and
pop
jb
xor
mov
jl
or
xor
shlb
and
adc
cvtpi2ps
mov
fidivl
cmp
loopne
xor
cmpsb
rcrb
sbb
jl
cli
xlat
pop
mov
out
es
mov
pop
sbb
sub
jbe
and
sub
mov
mov
mov
iret
push
sbb
push
or
aam
loopne
mov
call
jmp
lock
dec
daa
add
repnz
test
cmp
icebp
or
aam
movsb
stos
push
clts
jnp
adc
in
popa
xor
xor
fs
repnz
push
sbb
lds
clc
pop
in
scas
cld
cmp
and
aaa
push
loope
dec
loop
dec
inc
cmpsb
jo
loope
pop
sbb
push
lea
xchg
mov
fists
mov
or
push
pop
fsubs
iret
push
scas
fadds
or
cltd
fcmovne
fmulp
lods
sub
pusha
sbb
sbb
fisttpll
repz
xchg
sahf
cmpsl
sub
je
or
and
pop
mov
inc
jae
fstps
add
push
cmp
fstpl
push
push
xchg
jle
xor
les
test
loopne
inc
cmp
xchg
nop
add
or
adc
jmp
ds
or
daa
in
andb
push
pop
pop
pop
and
and
lret
or
aam
xchg
mov
dec
loope
test
pop
and
lock
loopne
mov
adc
in
inc
dec
in
sbb
daa
aaa
jne
ja
mulb
mov
iret
dec
das
test
cmp
cmp
into
adc
sub
outsb
cmp
shrb
gs
aam
cmp
push
cmp
mov
cmp
xor
ljmp
in
es
movsb
cld
mov
adc
pop
mov
adc
or
inc
sbb
fs
mov
sarl
or
pop
leave
ret
cmp
pop
inc
ret
xlat
stc
pop
sbb
dec
jmp
or
adc
add
outsl
pop
add
push
test
jge
add
std
outsb
jmp
inc
test
inc
sbb
rolb
cltd
push
push
data16
sarl
dec
jl
cmp
je
jl
xchg
sbb
ret
fmull
loopne
pop
add
lods
push
rcrb
and
mov
push
and
jb
in
adc
in
sub
cltd
add
dec
lods
add
sbb
rorl
cmp
mull
dec
adc
add
cld
push
adc
out
roll
mov
sbb
inc
or
jle
pop
push
xor
sbb
cmp
jne
push
outsb
adc
loopne
and
in
in
fstpl
sysenter
push
sub
in
addb
es
cmp
in
and
imul
push
lret
call
inc
sub
test
and
scas
dec
ja
inc
adc
not
fimull
setae
test
ret
sub
mov
sub
pop
and
lea
sbb
cwtl
or
shll
test
stos
push
lods
add
or
jg
loopne
pop
mov
cs
mov
xchg
clc
inc
dec
xchg
push
mov
add
mov
jnp
or
arpl
mov
in
jg
xchg
inc
jno
sti
in
clc
dec
call
mov
loop
js
push
cltd
xor
pop
xchg
xchg
jl
add
dec
lock
adc
pushf
dec
in
add
sbb
add
ret
push
lahf
and
xchg
push
xor
jmp
push
and
lock
adc
aas
adc
lret
push
add
or
std
cwtl
lea
in
mov
mov
jl
push
pop
in
loop
push
pop
and
push
adc
adc
adc
adc
jo
mov
add
and
lock
cmp
xor
mov
or
mov
xor
or
inc
fimull
mov
out
xor
cmp
inc
shll
outsb
mov
jbe
mov
fcoml
mov
pusha
and
dec
cmp
es
jo
jae
push
mov
xchg
daa
push
in
adc
or
and
or
push
sbb
mov
in
pusha
adc
pop
dec
rol
daa
push
or
pop
push
mov
mov
mov
adc
sbb
xchg
mov
mov
xorb
lret
push
out
lods
or
ja
jne
fnstsw
push
add
push
cltd
jb
and
mov
or
cli
outsb
and
or
pop
push
push
and
cmp
xor
shlb
fdivr
outsl
or
addl
ret
dec
dec
jl
cmp
stos
push
dec
adc
aam
sahf
or
enter
or
cmp
inc
cmp
jae
rol
inc
mov
pop
mov
lret
imul
mov
add
xchg
stc
rol
stos
push
add
add
or
mov
push
mov
fbstp
adc
mov
cli
push
faddl
rorl
xchg
inc
xor
lock
pop
clc
hlt
adc
pop
pop
pop
dec
js
cmp
sbb
stc
xor
sbb
mov
adc
je
fstps
and
sub
push
cmpsl
repnz
test
loope
jae
jo
push
les
out
jo
push
and
dec
mov
pop
add
jl
mov
mov
clc
pusha
pop
sbb
ret
out
imul
pushf
divl
lret
jp
inc
jns
arpl
mov
mov
sub
lea
mov
insb
cmpsb
add
inc
push
sub
add
inc
dec
stc
push
clc
inc
or
mov
pop
stc
pop
dec
mov
dec
pusha
or
add
sub
insb
lret
inc
loopne
orl
add
push
pop
roll
lods
movsl
les
and
into
push
jnp
add
cld
inc
fs
mov
mov
faddl
test
xor
or
arpl
pop
adc
and
or
and
mov
ds
js
jge
push
dec
pop
fnsave
cs
sub
jne
mov
test
neg
mov
sbb
xlat
lea
xchg
pusha
or
add
xchg
xchg
inc
insb
call
inc
sbbb
fildl
enter
push
sub
pop
fcomps
cmpsl
or
add
mov
xchg
pop
insl
sub
cmp
cmp
fmuls
sub
fs
pop
inc
ds
cmp
ret
inc
adc
out
and
or
or
adc
pop
lods
pop
sbb
jne
cld
hlt
cmp
dec
cmp
popa
jno
xchg
lds
pop
pop
insl
hlt
fimull
mov
mov
fisubrl
mov
pop
adcl
imul
push
fs
inc
pop
stos
pushf
or
mov
mov
sbb
xchg
movsb
add
out
movsl
mulb
lret
or
add
push
movl
daa
add
add
insb
lock
push
mov
sbb
test
xor
fbld
pushl
mov
add
xchg
inc
in
addr16
dec
loopne
mov
dec
fwait
add
xor
inc
push
xor
cmpsb
xchg
mov
cmpsl
or
ficoms
jmp
out
pusha
cmc
mov
sar
and
add
leave
push
push
ds
inc
add
fs
xchg
lock
push
push
inc
pop
popf
dec
movsbl
xchg
push
cs
adc
enter
cmp
ja
and
andb
idivl
and
dec
and
ss
and
or
repnz
mov
or
testb
sub
xor
xor
or
mov
add
inc
inc
in
mov
das
xchg
test
push
call
dec
movlps
dec
into
and
mov
addl
cmovs
inc
cld
cltd
inc
inc
cmp
lret
repnz
adc
mov
add
sub
repnz
hlt
loope
fadd
xor
mov
dec
add
cwtl
movsl
xor
pop
adc
adc
and
das
popf
sub
mov
sbb
add
test
and
mov
popa
outsb
adc
pop
xlat
mov
adc
out
or
xchg
add
jmp
jo
shll
jecxz
add
dec
sbb
pusha
xor
pop
daa
sub
push
aad
inc
add
sub
aas
mov
or
sbb
dec
pop
push
sbb
cmp
scas
inc
xor
in
fwait
scas
push
inc
sbb
dec
push
xchg
push
popa
xor
push
test
addb
adc
ret
push
pop
nop
dec
xor
mov
add
cmp
insl
imul
sahf
mov
adc
xor
pop
mov
push
adc
mov
inc
xor
ds
das
hlt
push
lock
mov
es
les
pusha
pop
adc
pop
adc
push
shrl
jle
jge
mov
xor
sbb
cmpsb
push
inc
movsl
inc
sbb
push
pop
js
loope
pusha
adc
add
or
inc
mov
push
dec
popa
popa
pop
ljmp
adc
push
rolb
stos
setae
mov
ja
cmpsl
and
scas
or
movsl
and
or
pusha
add
imull
test
add
lock
shll
or
dec
test
sub
push
or
and
sti
push
sub
add
push
sbb
lds
dec
sbb
sbb
xor
leave
or
push
pop
loop
adc
sbb
or
outsb
and
sub
jno
sub
sbb
enter
fisttpll
jl
and
pusha
shl
pop
jge
or
lods
ds
mov
cmp
mov
stos
repz
roll
in
push
and
adc
pop
push
or
test
stc
sub
and
sub
or
mov
aam
mov
lods
in
adc
mov
loopne
inc
shlb
popa
stos
add
or
xor
adc
ret
sub
push
xor
leave
push
xchg
mov
in
add
inc
xchg
mov
push
adc
cmpb
addr16
add
push
stos
xchg
xorb
add
mov
pop
stos
gs
rclb
movsl
sti
clc
loop
sarb
jmp
jmp
mov
rclb
lahf
add
push
ret
push
imul
sbb
or
jo
fistpl
or
and
add
add
adcl
xchg
aam
mov
jo
adc
dec
cli
push
sbbl
cs
sbb
shlb
insb
xchg
dec
movsl
cmp
hlt
xchg
jge
mov
cmp
test
xor
jns
add
pop
pavgb
mov
sub
add
test
fmulp
daa
or
push
ljmp
or
sub
cmp
scas
sub
push
sbb
cmp
loope
add
push
shlb
loop
add
ljmp
mov
xchg
mov
sub
mov
add
ret
jo
push
sti
add
add
shll
mov
jnp
inc
push
sbb
fs
test
outsl
jne
gs
cmp
pop
push
in
test
nopl
cmpb
in
mov
fs
or
sar
xor
push
out
rorl
adc
pop
dec
cmpsb
or
ds
cmp
push
push
rcrb
mov
fldz
pop
push
mov
clc
lock
xor
test
shlb
and
or
je
imul
jne
jno,pt
mov
jl
or
add
sbb
pop
push
clc
pop
jno
xchg
cmp
imul
adc
dec
pop
psubw
jecxz
out
gs
or
sarb
push
hlt
sub
js
pop
inc
adc
outsb
cmp
loope
xchg
rorb
stos
or
js
loopne
aas
test
ss
cmpl
cwtl
js
dec
dec
push
lea
push
cli
adc
bound
pop
insb
pop
leave
in
cmp
jb
jmp
xchg
cmp
xor
and
add
out
push
push
cmpsl
xor
xchg
xchg
rolb
jae
xchg
add
andb
jl
data16
divl
mov
mov
shlb
pushf
add
popa
jne
push
loopne
loopne
packssdw
xor
sub
mov
xlat
push
fldenv
add
int3
add
orb
pop
data16
pop
mov
add
jo
loopne
sub
and
cmpsl
decl
push
mov
das
dec
test
xchg
insb
pop
fiaddl
jns
es
add
pushf
dec
sub
andl
and
outsb
mov
sbb
sbb
xchg
inc
dec
in
jo
jge
push
faddl
fs
mov
xchg
push
insl
inc
imul
dec
std
cli
dec
adc
inc
aam
push
or
adc
mov
je
loope
mov
jbe
movsb
sbb
and
push
mov
pop
call
mov
pop
add
pop
jne
pop
idivb
or
xor
push
mov
dec
repz
adc
add
lods
mov
dec
mov
hlt
dec
pop
cmp
xchg
sbb
push
add
xchg
movsb
xchg
cmp
dec
mov
lret
mov
pop
push
pop
mov
or
das
dec
shr
rol
aam
cli
test
popf
cmpsb
and
adc
lea
cmc
jne
enter
jge
mov
cmpsl
xor
lret
clc
mov
jo
ret
cwtl
addb
out
mov
jne
add
rorb
mov
js
call
cmp
jb
add
cmp
cmp
ret
fstpt
fldcw
inc
mov
sub
bound
mov
popa
lea
or
les
jp
sbb
push
les
mov
sahf
stos
inc
jmp
and
hlt
mov
clts
ss
aad
or
mov
arpl
xor
test
ss
ret
push
mov
xorl
repnz
inc
jl
sub
add
popa
fs
lea
push
add
int
out
stos
mov
jl
je
sbb
jae
inc
jmp
aam
iret
les
or
or
inc
adc
pop
jl
sub
or
pop
gs
je
or
in
or
sub
jne
rol
add
mov
shl
sbb
popf
mov
or
test
push
test
jo
push
or
in
rclb
imul
int3
jae
sub
mov
or
test
fneni(8087
lahf
flds
cwtl
in
or
adc
pop
inc
ret
add
test
decl
enter
loopne
js
js
rcrl
or
inc
jmp
lods
mov
add
call
data16
ljmp
sbb
xor
or
adc
pop
imul
xor
mov
dec
dec
test
push
mov
mov
js
inc
xchg
mov
pop
push
jae
loop
test
or
pop
mov
loopne
data16
adc
add
std
xchg
xor
fstps
cmp
adc
out
mov
mov
jge
inc
mov
xchg
adc
imul
dec
test
faddl
cmp
push
pop
scas
cmp
cmp
je
fsts
pusha
pop
cmp
int
enter
dec
push
test
mov
sub
mov
inc
rcrl
push
outsl
out
out
add
and
data16
setge
add
je
insl
add
xchg
xchg
loopne
xor
aam
js
shrl
push
das
dec
imul
sahf
cmp
popf
je
popw
jo
push
rcrb
xchg
push
pop
cmp
mov
sub
sahf
lock
push
pushl
and
adc
fs
mov
mov
mov
push
adc
xor
xor
adc
jmp
mov
cmp
into
lea
dec
dec
push
push
xchg
dec
in
movzbl
push
or
in
in
jmp
test
call
jbe
inc
inc
loopne
fmull
mov
imul
sub
aas
sbb
enter
push
lods
cwtl
ljmp
push
movaps
push
lock
jmp
loopne
or
lds
cmpsb
and
sbb
jmp
int
push
pop
xor
popf
sbb
add
mov
xor
and
mov
adc
pop
or
faddl
ret
adc
mov
lea
or
bound
movsb
popf
mov
insl
sub
sbbl
mov
lret
push
mov
fwait
xorl
loop
xchg
or
pop
ljmp
add
enter
iret
jbe
mov
int
mov
jbe
lea
mov
jbe
mov
add
xchg
sbb
ds
xchg
lock
mov
rclb
sbb
xor
fildl
dec
pop
push
pusha
mov
je
outsb
inc
adcl
cmp
push
popa
mov
jne
push
aad
cli
mov
decl
into
mov
mov
dec
add
and
sub
mov
push
jle
scas
jmp
cli
push
cltd
test
ret
cmp
jb
shlb
sbb
das
or
push
cmp
sub
test
inc
enter
ja
add
add
movl
jo
and
adc
dec
les
fcompl
mov
dec
push
ds
lahf
push
xchg
xchg
or
dec
imull
cmpsb
insl
adc
leave
push
jo
add
cmp
ss
es
shlb
add
sbb
push
sub
sbb
and
xchg
je
fidivrs
push
adc
add
fldt
dec
js
and
pop
jl
roll
jmp
or
arpl
or
daa
lahf
adcl
mov
push
mov
xor
push
push
lods
push
or
mov
push
test
xor
lret
jo
clc
mov
fstpt
jb
bound
adc
cmp
cmpsl
lea
orl
dec
pusha
mov
adc
cmp
lock
xchg
inc
adc
cmc
imul
mov
cmp
inc
mov
dec
hlt
jne
mov
push
rcr
sbb
add
jle
add
sub
and
inc
test
fmuls
inc
cmp
adc
inc
mov
shl
xor
cmp
sbb
test
lcall
test
push
jmp
and
loope
test
push
aaa
add
js
fsubr
sbb
scas
mov
outsb
pop
xchg
mov
sub
cmp
mov
pop
jl
call
movsl
ficoml
push
jb
mov
and
mov
popa
dec
rolb
xchg
jae
and
cmpsb
out
mov
sub
dec
cmpsl
rclb
ss
je
dec
out
lods
dec
push
adc
imul
mov
subb
loope
push
aas
adcb
jg
jnp
jle
leave
testl
mov
mov
jmp
xor
mov
jae
pop
or
pop
xchg
mov
mov
lret
inc
pop
sbb
cmp
xchg
dec
jg
shll
cmpsl
stos
or
outsl
push
hlt
dec
mov
xchg
pop
mov
fwait
adc
andl
and
mov
xor
jbe
test
sbb
sbb
inc
adc
jmp
imul
inc
add
and
outsb
ret
aas
mov
adcl
cmp
cmpsl
ss
mov
and
sub
or
fs
add
sub
test
push
jbe
sbb
push
sbb
add
inc
xor
mov
xor
or
mov
pop
xchg
sbb
jo
add
loop
adc
cmp
push
arpl
add
int
fadds
and
pop
inc
fsubl
dec
and
les
mov
rolb
sub
mov
sbb
fwait
cmp
push
cmpsl
loope
xchg
pushl
pop
mov
sub
ret
xchg
adc
testl
mov
bound
ds
les
mov
push
or
jle
sete
insl
in
mov
mov
push
push
ja
inc
ficomps
or
xchg
pop
lods
add
imul
jge
ja
push
add
in
movsl
roll
mov
int
jmp
cmp
incl
mov
movsb
mov
sbb
jle
add
mov
and
es
ljmp
hlt
xchg
test
or
adc
ret
inc
out
sub
bnd
testl
cmp
jne
loopne
insb
inc
xchg
ds
inc
sub
cmp
into
mov
or
mov
cwtl
push
mov
mov
mov
imul
cld
push
push
enter
sub
cs
mov
cmp
mov
xchg
pop
lods
or
insb
jl
mov
mov
out
out
jo
fwait
pushf
int3
sbb
cmp
cld
push
push
push
push
cmp
iret
out
jns
enter
push
push
inc
adc
push
sbb
add
mov
xor
xchg
fistpll
mov
mov
push
imul
add
or
and
call
or
faddp
cwtl
or
or
cmp
jae
add
nop
or
test
ljmp
push
inc
shl
xor
jp
cmpsb
xor
mov
aam
daa
or
test
popf
invd
cmp
mov
sqrtps
lea
jbe
adc
push
xchg
ljmp
fwait
rcr
xor
cmp
push
add
popf
mov
call
xlat
gs
shll
movsb
in
popa
mov
rcrl
cmp
push
push
jp
jns
mov
mov
addb
dec
and
fwait
cmc
or
ret
jbe
mov
call
jg
dec
test
fisubs
lret
sub
test
push
jl
int3
mov
vmread
sti
rcrb
mov
dec
fsub
mov
andb
cli
insl
sarb
push
aad
fmul
pop
pop
scas
icebp
jnp
dec
add
cld
aam
loopne
fcomps
cli
mov
adc
adc
fdecstp
bound
push
jl
cmp
or
pop
jp
adc
xor
cmp
push
jb
or
push
jns
pop
mov
add
push
push
or
std
mov
dec
pop
mov
dec
loopne
les
imul
mov
aam
out
push
lret
sbb
aas
xchg
dec
in
daa
in
add
add
movsb
add
sbb
je
push
scas
rclb
scas
inc
cmp
or
mov
or
loope
loop
hlt
or
cmp
and
pop
dec
fldt
mov
mov
outsl
or
sbb
add
add
cmp
xchg
jp
repz
add
pop
cmpsl
loopne
mov
sti
rep
movsw
push
xchg
or
mov
xor
xor
mov
shr
mov
aas
rorb
inc
inc
cmp
jle
movb
pop
push
lea
cmpb
cmpsb
fnstsw
in
push
push
fsts
mov
cmpsb
cmp
mov
fbstp
mov
push
push
sbb
add
jb
and
jae
pop
repnz
cld
je
push
push
js
and
sbb
push
movsb
cs
mov
jmp
mov
jne
cmpl
cmpsl
jne
add
int
jae
push
xchg
add
inc
add
stc
sub
in
je
loopne
jge
jae
xor
cmp
push
add
cmp
xlat
sbb
sbb
sub
push
cmpsl
or
xchg
ret
ficompl
inc
and
jno
loop
in
pop
loope
lock
mov
cmp
push
add
fcompl
decb
mov
inc
lcall
mov
loopne
and
dec
ret
mov
scas
and
inc
imull
sbb
fdiv
fwait
mov
fimull
call
push
add
add
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
cmp
fsubl
jmp
and
jne
xchg
push
push
lds
mov
incb
adc
sbb
insb
mov
out
pop
push
and
sub
repz
xor
inc
dec
push
pop
cmp
repz
insb
jno
jnp
cmp
repz
cmp
cltd
sahf
mov
iret
repz
mov
cmp
repz
fcmovu
in
out
cmp
jmp
add
push
pop
or
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
test
sbb
sub
adc
mov
inc
inc
loope
xor
cmpsl
addl
sbb
cmp
lea
ret
cmp
jle
mov
xor
add
dec
jmp
insl
fists
in
pop
mov
js
xor
call
jae
sub
sub
xlat
in
xchg
sbb
pop
movsb
mov
add
es
or
test
inc
or
lock
pop
sub
aaa
mov
inc
cmp
jbe
outsb
pusha
mov
sub
or
filds
loopne
push
test
scas
or
sub
add
int
adc
or
xor
jg
pop
add
mov
inc
js
movsl
loope
dec
lock
popl
pop
lock
pushf
adcl
fiadds
sbb
aaa
sbb
push
pop
lods
aad
xor
push
insb
or
pop
mov
cmp
ss
adc
or
mov
or
xchg
loopne
and
in
mov
adc
jo
sti
add
nop
pop
cld
dec
inc
sub
and
cmp
add
inc
jbe
test
test
in
les
sbb
aad
jne
add
shlb
sbb
cmp
mov
mov
mov
adc
sti
mov
mov
add
add
add
jmp
push
inc
mov
stos
pop
add
push
push
adc
adc
push
repz
mov
push
push
xor
dec
adc
leave
fwait
adc
mov
arpl
lock
xor
repz
sub
or
xchg
call
and
pop
jle
add
nop
sbb
test
pop
sub
or
mov
repnz
ss
dec
sbb
or
xlat
sbbl
test
add
movsb
push
push
repnz
test
or
adc
pop
loopne
or
and
jp
push
mov
mov
pop
inc
jmp
mov
jne
sbb
add
jne
fidivs
imul
aas
inc
inc
sarl
xchg
inc
push
dec
mov
mov
loope
jo
iret
daa
sbb
movsb
adc
inc
sbb
cmp
push
xchg
pop
inc
push
rorb
clc
mov
cld
push
mov
pop
jl
je
je
xchg
xchg
inc
xor
aaa
shlb
pop
or
adc
popf
and
cmp
insl
and
or
lods
push
jnp
adc
or
sbb
mov
inc
mov
dec
ljmp
and
mov
int3
ljmp
jnp
xchg
fisubs
push
adc
nop
xor
ret
push
popl
shlb
mov
add
pop
add
call
add
lea
clc
enter
sbb
and
or
shrb
decb
add
shlb
aaa
or
mov
cmp
mov
fisubrs
test
pop
icebp
xchg
lret
mov
and
cmp
and
push
ja
aas
mov
xchg
xchg
loopne
cmp
jge
les
jmp
dec
mov
inc
ret
fidivl
dec
xchg
adc
inc
jmp
fs
std
mov
fldenv
bound
cmpsb
imul
daa
lods
imul
mov
data16
or
xchg
adc
add
inc
jecxz
dec
nop
icebp
andl
mov
int
adc
or
push
aam
sub
add
shl
movsl
ds
sbb
jecxz
fwait
cmp
jne
outsb
movsl
aad
xor
add
add
daa
add
pop
cs
dec
int3
mov
or
sbb
daa
sahf
pop
pop
push
repnz
testb
fdivrp
lret
dec
sub
outsb
fwait
test
je
nop
jle
adc
push
and
add
inc
cmp
js
or
scas
push
mov
jno
int
sbb
cmp
dec
push
cltd
nop
loopne
loopne
or
mul
cmp
add
jo
cmp
enter
sbb
jns
div
add
or
negl
pushf
ficoml
xchg
faddl
stos
add
or
les
pop
pop
add
jp
xchg
pop
mov
cltd
push
or
pop
cwtl
add
push
mov
movsl
push
mov
adc
jno
movsb
sub
cmp
pushl
ljmp
dec
flds
aam
xchg
rorl
pop
or
addb
pop
cs
es
inc
insb
and
scas
sbbb
scas
sbb
es
movsb
leave
mov
imul
xchg
add
out
pop
out
jo
mov
in
pop
jle
pop
in
push
cs
xchg
rolb
mov
xor
fsubrs
out
sub
repnz
push
arpl
stos
push
sub
lock
xchg
repz
sub
adc
xorl
outsb
xchg
fmull
loope
test
add
in
jmp
aas
ret
iret
pop
jge
or
mov
out
add
fistl
lds
lods
loopne
daa
in
add
and
push
popf
mov
cmp
add
inc
sub
dec
and
inc
sub
mov
rolb
inc
adcl
mov
hlt
push
pop
sbb
add
je
xchg
dec
rcrb
cmp
push
jp
push
xor
sbb
mov
jmp
bound
pop
mov
gs
sbb
cmp
fstp
mov
icebp
and
test
fcomps
pop
cs
dec
pusha
sbb
test
loopne
cmpsb
and
or
in
cs
jle
loope
xor
cmpsb
call
fisttps
insb
cmp
jne
jmp
cmp
je
dec
mov
js
push
xchg
push
fidivrs
push
jnp
add
popl
push
loopne
mov
jmp
insl
movsl
loopne
test
lock
in
or
sub
mov
push
push
push
ljmp
jo
xchg
push
and
out
shl
inc
sub
fidivrl
add
sbb
mov
shlb
or
dec
dec
dec
test
mov
dec
push
int
push
scas
mov
daa
xor
movsb
mov
jl
xorl
jo
in
add
mov
out
xchg
pop
push
pop
lea
and
lods
pop
xor
xchg
sbb
pop
inc
xchg
dec
pop
cmp
js
push
lahf
add
and
in
movsl
push
add
push
mov
jl
cmpb
rcrb
dec
adc
add
lret
cmpsb
and
mov
iret
not
repz
xor
adc
aad
dec
test
cmp
sbb
push
push
mov
leave
xchg
xchg
or
or
rcrb
xor
xchg
and
push
in
sub
pop
adc
int
inc
aad
loope
jne,pn
jl
adc
push
movzbl
sbb
mov
in
addb
out
shl
inc
add
mov
and
and
xchg
out
cmpb
push
cmp
loopne
jl
xorb
mov
lods
sbb
lock
and
nop
pop
aaa
mov
sbb
movsb
jg
out
fwait
mov
rcrb
mov
pop
mov
dec
push
cltd
movsb
mov
jmp
clc
mov
mov
mov
test
clc
push
popf
inc
incl
inc
lret
rolb
cltd
sbb
icebp
mov
femms
mov
test
add
ret
insl
and
xchg
je
repnz
and
or
sti
add
push
cmp
jl
sub
jns
mov
inc
inc
mov
add
jp
idivb
push
or
addl
add
icebp
xor
andb
daa
jns
repnz
lods
sub
shlb
pop
inc
and
sbb
pop
jl
jmp
out
mov
lret
jp
loope
sbb
jbe
popf
js
mov
sti
cmp
je
or
jge
push
jbe
and
inc
mov
pop
jmp
rcrl
or
js
inc
shrl
out
test
int3
and
ret
jae
lahf
and
daa
insb
pop
jo
insb
je
js
sub
mov
sbb
push
push
mov
imul
sub
or
sub
lods
sub
jns
rolb
cmpsb
or
pop
gs
hlt
push
fstl
xlat
clc
cli
sub
shr
cmp
jle
icebp
ret
es
repnz
mov
push
fistpl
sbb
xchg
daa
pop
call
pop
jno
inc
outsl
add
jle
mov
nop
fcomps
add
daa
pop
add
pop
pop
adcb
sub
nop
xchg
loopne
sbbb
ds
pushl
jp
push
cmp
je
cmp
jne
push
inc
pop
inc
sub
add
sub
and
dec
sbb
push
mov
cld
mov
dec
mov
call
sbb
mov
in
mov
push
dec
cmp
or
and
in
sarl
inc
and
rcrl
ds
inc
nop
ja
dec
cltd
or
push
sti
lock
push
sbb
test
lret
jo
jecxz
leave
fidivrs
divb
push
push
push
jns
sarb
cmp
jb
inc
cwtl
add
or
jp
sahf
pusha
ror
jbe
fwait
push
push
jnp
mov
jae
cmp
subl
in
sbb
aaa
stc
call
mov
sti
pop
xchg
xor
adc
cwtl
pop
fwait
or
mov
or
dec
aas
jne
push
nop
repnz
xlat
ss
clc
adc
scas
inc
in
add
and
sub
xchg
pusha
iret
test
mov
sbb
mov
lahf
sub
xor
jmp
xchg
ss
xor
loopne
mov
mov
repz
sbb
neg
cmp
sbb
sub
mov
inc
mov
into
add
or
jmp
mov
pop
adc
outsb
pop
js
push
lock
rorl
inc
int
or
jmp
js
and
inc
icebp
xchg
rorl
outsl
jg
rorb
pop
repz
cmpsb
or
pop
xchg
xor
into
mov
ret
xchg
push
mov
add
jmp
add
shrl
std
xchg
icebp
imul
mov
sahf
jge
andl
movsb
mov
mov
rcrl
mov
addb
pop
repz
ljmp
and
sbb
inc
scas
repnz
sbb
loopne
mov
add
sbb
or
das
or
mov
sub
roll
and
adc
and
jmp
pop
jo
lahf
jle
test
mov
jne
outsl
in
mov
xor
mov
push
in
addl
mov
fs
insb
mov
inc
or
cltd
inc
adc
lcall
dec
subb
in
pop
jmp
stc
sbb
sarb
out
pop
adc
es
inc
mov
pop
xlat
sub
adc
mov
sbb
or
and
and
jmp
pop
xchg
dec
adc
mov
test
rcrb
dec
mov
aam
jae
insl
in
push
movsb
pop
je
add
cmp
add
ljmp
jmp
adc
lds
pop
icebp
lret
mov
push
add
pop
xchg
mov
jno
icebp
pop
cmpl
popf
pop
push
mov
test
lret
lods
xchg
jne
push
mov
sub
inc
push
push
rol
pusha
cmp
in
pop
adc
ret
pop
mov
cmp
adc
add
aas
adc
imul
icebp
adc
or
dec
inc
mov
addr16
inc
sti
mov
cs
sbb
jno
inc
rorb
mov
dec
adc
push
repz
jg
or
inc
aad
out
xor
movsl
addr16
into
fwait
adc
or
subb
inc
ss
stc
xor
xchg
mov
inc
mov
xor
jae
testl
pusha
pop
into
xor
adc
lods
jnp
xchg
outsl
in
mov
and
push
test
xor
shrl
sbb
and
sbb
popa
sbb
xor
pusha
movl
add
repnz
inc
lods
and
popa
notl
push
jge
inc
leave
out
je
pop
sub
and
and
xor
xor
inc
dec
pop
mov
jbe
mov
addr16
aas
push
fnsave
xor
add
incl
fstl
fldz
fcomp
fnstsw
push
add
loopne
loopne
dec
fnsave
pop
fsubr
pop
faddp
push
mov
imul
int3
inc
shll
push
xchg
or
notb
movsl
and
aam
test
push
adc
xchg
shl
lock
sub
xchg
or
jg
hlt
and
mov
sub
inc
add
sbb
inc
xor
in
push
adc
and
sub
cmp
dec
mov
mov
mov
fistpl
add
mov
sbb
lods
notb
into
cltd
aas
inc
scas
inc
or
mov
sub
iret
add
adc
ret
mov
in
adc
sbb
fwait
sbb
int3
push
add
fmuls
dec
push
outsb
imul
adc
mov
lea
jb
dec
repz
in
cld
mov
repz
fimuls
enter
sarl
loopne
xor
lahf
addb
cwtl
lcall
lcall
or
push
push
enter
mov
xchg
adc
jmp
cwtl
mov
arpl
leave
inc
xchg
push
jmp
push
add
mov
xor
sbb
jge
or
hlt
adc
rcr
pusha
add
ret
iret
movsb
in
pop
jne
cmp
dec
insl
mov
sbb
or
mov
add
mov
sub
push
dec
mov
lret
sbb
roll
jmp
add
jnp
and
or
xor
pop
mov
sub
mov
rcll
add
jno
xchg
and
mov
mov
arpl
leave
sti
shll
dec
push
push
dec
pop
cmpsb
xchg
imulb
and
sti
andb
int
ljmp
jbe
add
fldt
insb
es
jmp
cmp
adc
pop
inc
lret
ja
sbb
jb
push
imul
or
dec
pop
jb
out
lret
adc
or
test
dec
shlb
inc
lock
xchg
cwtl
inc
roll
les
jne
fmuls
push
sub
addb
sbb
imul
inc
dec
xor
mov
sbb
dec
push
stos
mov
in
add
dec
or
mov
pop
sub
sbb
test
mov
les
movb
inc
inc
jle
clc
aad
mov
xchg
push
and
dec
lock
push
add
add
aad
test
shll
push
fs
andb
push
sub
jo
add
and
pop
mov
test
adc
shrb
test
es
scas
pop
femms
sarl
pop
test
adc
adc
xor
scas
xchg
mov
inc
loopne
lods
adc
mov
jae
cmp
sahf
push
enter
inc
mov
popf
ss
mov
mov
and
in
sbb
call
aam
test
add
cs
insl
adc
add
mov
movsl
xor
push
jmp
cmp
or
dec
loope
cmp
or
pusha
mov
popf
mov
xor
test
scas
dec
popf
sub
ja
je
rcl
fcomp
rclb
and
fidivl
call
add
sbb
xor
adc
insb
cltd
repz
or
je
cmp
lock
shlb
das
jg
and
out
or
add
pop
jbe
fcomps
add
push
dec
xchg
cmc
sahf
ss
dec
push
push
xor
and
xor
dec
inc
add
xor
repz
fpatan
push
jge
jmp
push
push
dec
jno
movsl
sahf
xchg
or
dec
and
xchg
and
inc
das
adc
mov
pop
mov
or
mov
inc
daa
test
shlb
jae
mov
int3
rolb
sbb
cmp
or
push
data16
testb
mov
hlt
mov
push
push
pop
inc
ret
adc
dec
cwtl
adc
mov
mov
lret
add
add
call
dec
jmp
fwait
je
and
push
movsb
sbb
xor
gs
enter
push
push
or
clc
decb
cmp
xorl
ret
dec
jge
inc
dec
dec
pop
mov
in
inc
push
push
stos
mov
push
test
cmpsb
push
stc
push
cwtl
pop
inc
ss
xor
inc
xchg
cmpsl
push
in
lock
ret
dec
sete
shr
xor
cmp
pop
insl
or
in
pop
xchg
add
mov
das
std
mov
fs
push
sub
adc
sbb
pop
std
in
adc
sub
mov
push
enter
push
xchg
pop
pop
leave
enter
mov
adc
fadds
or
mov
sbb
pop
test
mov
jp
les
xor
outsb
je
mov
movsl
data16
les
xor
cmc
and
call
sarb
jo
loope
push
mov
daa
and
fmull
bound
push
jo
aad
sub
add
test
fmul
or
cmp
sub
xchg
push
pop
in
out
repnz
pop
dec
movsl
or
inc
or
mov
das
or
inc
cmp
cmp
call
jo
cmp
mov
nop
test
lea
or
or
xor
or
mov
mov
adc
fistl
add
stc
pop
pusha
mov
mov
sub
push
xor
pusha
inc
cmp
push
lock
cmp
push
xor
and
sti
lock
fcoml
inc
inc
mov
dec
sbb
add
inc
sub
stc
ss
sbb
jmp
push
in
mov
push
fwait
mov
push
sub
xchg
and
add
mov
push
out
push
fcoms
push
inc
push
data16
or
jmp
adc
pop
jo
roll
jmp
jge
test
ret
lcall
js
jb
push
jno
jge
cmp
inc
pop
out
in
xchg
pusha
insl
add
or
or
out
sub
pop
sbb
add
testb
das
pop
adc
dec
dec
test
daa
in
adc
add
imul
loop
xor
bound
add
loopne
inc
push
cltd
push
dec
adc
sbb
pop
push
add
imul
sbb
mov
mov
dec
inc
rclb
mov
xchg
or
xchg
jae
mov
rorb
inc
lea
push
or
mov
repz
imulb
xor
pop
mov
and
lahf
call
dec
shll
lcall
sub
shll
sub
stc
bound
push
xchg
mov
and
test
in
inc
mov
xchg
scas
add
movsb
mov
sbb
push
movsl
add
dec
popa
add
and
mov
push
adc
inc
addl
sbb
xor
sbb
aaa
push
incb
or
les
inc
pop
dec
wbinvd
loopne
inc
cwtl
lea
imul
insl
bound
ds
imul
push
dec
jb
fcoms
inc
pop
jno
cmpsl
lock
push
outsb
or
lods
test
loopne
fadd
sbb
test
sbb
push
cmpsl
fcoml
fisubrl
sub
mov
incl
lret
stos
dec
loopne
fmuls
adc
add
das
mov
and
scas
xor
mov
movsb
lods
hlt
pop
xchg
push
test
rcrb
jp
pop
add
rorb
rorb
enter
or
lret
into
pop
add
pop
repnz
fnstcw
pop
or
fadds
lret
stos
cmp
loop
mov
nop
add
lds
cmpsb
aam
adc
test
push
sarb
gs
mov
or
sar
xorb
mov
xlat
xchg
in
xchg
test
mov
push
and
adc
into
mov
rclb
jne
aaa
mov
or
scas
mov
out
pop
les
adc
es
scas
mov
dec
inc
xchg
call
mov
mov
pop
or
test
outsb
or
sahf
rorb
push
mov
and
push
add
rorl
orl
pop
ret
xchg
add
aam
clc
sbb
push
push
js
jae
xchg
lock
or
test
and
roll
adc
pop
push
xchg
negb
or
icebp
jmp
cmp
sub
mov
test
inc
int
push
icebp
xchg
xor
sbb
push
inc
and
adc
pop
push
add
jp
loope
mov
add
mov
in
push
ds
cmp
mov
sub
adc
mov
sbb
dec
push
pop
xor
cwtl
lods
out
daa
js
inc
mov
mov
lret
mov
and
cmpb
mov
push
rorb
xor
shlb
push
insb
shlb
mov
mov
push
or
nop
pop
test
inc
push
aas
cltd
or
hlt
sbb
in
and
push
popf
jecxz
inc
out
cmpsl
push
in
int3
jp
sub
xchg
cmp
pop
jne
ja
orb
push
into
and
fsubrs
sarl
test
dec
xor
aam
sub
outsb
adc
leave
lcall
fwait
add
es
clc
fs
mov
or
add
scas
push
je
xor
inc
xlat
int3
sbb
push
jb
add
andl
inc
push
mov
push
or
add
cmpsb
xor
lret
xor
clc
repnz
hlt
mov
adc
cmp
lock
xor
or
dec
mov
add
fs
dec
inc
in
and
add
and
jp
jl
push
test
xlat
and
call
lods
cmp
push
rcr
sub
sbbl
sbb
cltd
jne
lock
je
add
out
movzbl
push
add
mov
cmp
cmp
jge
inc
and
push
jl
mov
and
test
sub
xlat
sub
xor
mov
lods
addr16
adc
sub
ds
lock
aas
or
sarb
lock
cmpb
insb
shll
repz
inc
scas
or
lods
cmp
push
cmp
movsb
mov
les
or
imull
cmp
lret
mov
mov
cmp
push
and
mov
inc
arpl
xchg
push
lock
and
shlb
lret
jb
jno
nop
cld
fwait
pusha
jmp
push
sub
pop
jecxz
fimull
mov
push
aaa
enter
jne
test
out
cld
dec
jmp
push
je
or
je
push
and
dec
divl
mov
inc
and
xchg
add
mov
ss
jne
mov
clc
test
lds
xchg
and
mov
inc
sub
dec
adc
adc
test
xor
mov
clc
xlat
push
jl
jge
in
mov
pop
mov
xor
cmpsl
fadds
cltd
push
cmp
das
lea
sarl
add
add
stos
cmc
rorb
sub
sub
xor
push
lods
push
mov
sbb
gs
shl
scas
push
cmp
les
movsb
xor
clc
imul
jge
lea
mov
jo
xor
aam
int3
enter
xchg
cmp
push
or
movsb
mov
mov
andl
mov
push
loopne
cmp
out
enter
sbb
adc
loop
sub
lea
pop
sbb
mov
fwait
jp
mov
add
or
dec
push
sbb
push
cld
test
add
or
ret
cmp
rolb
cwtl
dec
inc
cmpsl
hlt
pusha
lahf
xchg
aam
sarb
in
je
push
ja
mov
pop
test
pop
inc
stos
mov
sbb
rolb
jae
pop
jno
xchg
inc
mov
test
jmp
mov
ja
fwait
adc
out
or
sbb
dec
cmp
push
ret
pop
loop
or
movsl
mov
cmp
pop
dec
sti
cmp
jne
or
enter
rol
sarb
sbb
jp
or
lret
inc
mov
xchg
inc
cmp
push
sahf
call
lea
pop
jg
adc
rcll
insb
xchg
push
aam
sbb
or
repz
dec
mov
ja
xor
push
xchg
mov
sbb
mov
int3
scas
add
sub
sbb
jb
add
xor
and
movsl
std
push
mov
js
push
in
shlb
clc
mov
jmp
push
sbb
pop
pop
push
rcrl
or
mov
mov
subl
cwtl
pop
lock
cmp
rcrl
je
test
and
rolb
cmp
or
enter
lods
xor
jns
inc
dec
xchg
sub
mov
dec
enter
shl
leave
hlt
movsb
icebp
loopne
insl
mov
add
loop
out
mov
push
xor
pop
nop
pop
sbb
sbb
mov
jae
js
loope
lock
xchg
orb
cwtl
or
roll
cmpsb
sbb
test
notb
lock
xor
mov
outsl
jo
addb
sbb
jge
pop
call
testl
or
in
cs
fidivrl
sbb
inc
pop
jge
jns
faddl
pop
add
in
xchg
mov
push
out
pop
inc
call
cmp
rclb
stos
pop
jmp
lret
push
inc
js
js
jnp
push
and
xchg
and
push
stc
je
cwtl
xor
adc
push
jl
fisttpl
mov
ret
ficoml
xchg
push
int
or
xor
popa
sub
mov
xchg
cmp
cmp
iret
call
adc
call
daa
popa
dec
add
adcb
mov
bound
test
or
pop
xor
mul
pushf
addr16
lret
xchg
xor
pop
loope
loop
addr16
test
punpcklbw
mov
mov
cwtl
fdivl
aaa
loopne
or
dec
cmp
popf
mov
movb
jne
notb
loopne
scas
fs
cmpl
and
push
adc
push
popf
add
mov
data16
pushf
jmp
sub
sub
nop
lods
mov
insb
in
and
pop
js
xchg
mov
xchg
or
adcb
test
xchg
or
ja
adc
sbb
xchg
dec
setp
pop
dec
xchg
sahf
jne
int3
jo
mov
in
iret
add
lock
pop
ret
xchg
sbb
xor
pop
mov
testl
imul
sub
inc
das
xor
push
or
mov
push
add
adc
or
or
and
daa
inc
dec
call
or
add
repnz
comiss
fwait
or
cld
sbb
cmp
inc
shufps
mov
inc
add
loopne
insb
flds
pop
jbe
cli
pop
test
cmp
jg
mov
dec
cmp
mov
push
or
push
add
pusha
jns
pop
push
scas
in
adc
pop
cmpsl
jbe
jno
mov
pop
adc
xor
dec
hlt
cmp
jge
pop
or
ja
mov
push
mov
cmp
int
sarb
rcrb
push
xor
std
push
lret
fs
jne
inc
inc
jmp
inc
fs
sub
je
and
cmp
pop
xchg
inc
xchg
hlt
icebp
add
scas
ret
jl
add
mov
dec
jmp
test
inc
cmp
repnz
outsb
or
addr16
push
sub
aam
imul
arpl
in
outsl
cmp
test
fsubl
enter
iret
in
jl
shrb
and
in
rcrl
pop
es
and
pop
ret
cmp
aam
pop
in
mov
mov
push
xor
cs
cli
adc
loopne
inc
push
or
mov
xchg
mov
dec
xor
xchg
inc
dec
jge
sahf
inc
adcb
pop
push
imul
les
movsb
push
jne
xchg
and
movsb
push
lods
in
add
sbb
push
xchg
jmp
cwtl
int3
push
xor
fcompl
repnz
les
ficompl
enter
fs
sbb
adc
add
inc
jo
sbb
inc
inc
jns
popa
adc
test
mov
push
sbb
mov
dec
clc
or
je
dec
add
ss
test
add
and
mov
jle
dec
cs
enter
xorb
addr16
sbb
xor
jmp
push
cmc
push
mov
rolb
pop
push
fdivl
sbb
push
push
mov
or
push
pop
push
adc
add
pop
lods
xchg
inc
nop
addr16
hlt
mov
fcmovnb
bound
mov
flds
std
lock
or
clc
mov
inc
repz
addb
inc
into
in
xchg
xor
xor
or
dec
fcom
sub
add
xchg
xchg
jne
push
dec
mov
jns
fldcw
es
test
mov
push
sub
xor
add
js
cmp
fs
jbe
addb
inc
xchg
imul
imul
out
xor
outsb
dec
adc
lods
pop
ret
cmc
call
mov
lcall
clc
sarl
ret
sbb
jmp
or
xor
mov
ss
insb
in
lcall
cmp
mov
jnp
dec
sahf
rcrl
fisubl
or
mov
add
sub
sahf
add
mov
adc
call
fcoms
ja
add
or
inc
mov
test
sub
push
in
mov
lea
or
xchg
fdivl
aam
test
inc
in
jns
pop
add
xchg
mov
sbb
and
in
cli
inc
lock
leave
mov
ja
mov
cmp
add
xor
and
jl
mov
xchg
ss
or
sbb
fildll
xchg
add
psubd
mov
shlb
cli
shr
xor
adc
jns
shlb
fs
jp
not
jmp
jl
mov
xchg
push
mov
shr
cmp
jbe
mov
aaa
jmp
or
je
pop
xchg
fadd
pop
and
or
inc
dec
inc
mov
jl
pusha
sub
pushf
test
movsb
sub
fdivs
xchg
add
enter
hlt
ret
inc
push
and
mov
insl
sbb
and
sarb
insl
mov
subl
inc
push
fsubrl
sbb
pinsrw
aaa
mov
sub
out
mov
mov
and
dec
add
mov
dec
ror
jne
cmp
xlat
scas
jb
push
and
jne
pop
and
or
jb
xor
sub
or
bound
scas
lods
cmp
out
adc
ljmp
bound
inc
or
imul
mov
inc
outsb
and
cmp
fsts
mov
or
add
push
das
mov
mov
and
mov
shlb
pop
xchg
roll
mul
jmp
jne
jns
inc
add
pop
xor
mov
adc
push
pusha
adc
and
mov
scas
pop
or
loopne
sub
leave
dec
add
xor
xchg
xor
inc
dec
jg
rcrl
push
jge
mov
movsb
mov
jp
jmp
inc
fwait
pop
inc
adc
sbb
pop
jbe
mov
ret
fists
or
push
movsl
dec
fst
inc
add
and
add
or
add
in
jg
add
push
outsb
insb
add
cmp
movsl
ret
nop
or
push
jecxz
das
jmp
fldenv
add
loopne
jecxz
int
pop
and
push
or
and
inc
jbe
cmpsl
add
jmp
sbb
push
rorb
cmp
and
ss
and
jns
and
dec
jno
sub
xchg
fstl
xor
add
cwtl
add
inc
mov
and
add
ficoml
add
ret
add
inc
push
xor
leave
lret
or
sub
cltd
nop
out
xor
sub
jns
mov
mov
cmp
xorb
hlt
mov
lods
loope
dec
cmp
add
push
jo
sbb
and
orb
test
lret
inc
mov
mov
xor
sbb
test
cmp
xchg
xor
jl
or
push
push
xor
sbb
inc
pop
je
xor
mov
cmp
nop
mov
popf
scas
xchg
adc
dec
adc
jns
inc
pop
adc
sbb
sub
andl
ret
daa
cmp
fimuls
mov
and
movsb
adc
dec
aad
dec
dec
push
imul
popa
inc
lret
jmp
dec
ret
mov
cmp
jne
adc
lods
mov
data16
sbb
insb
daa
push
push
mov
dec
xchg
in
mov
and
leave
xor
add
pushf
stos
inc
mov
or
inc
dec
sub
push
mov
dec
xchg
mov
or
dec
out
flds
mov
xor
ja
or
and
sub
into
add
xor
faddl
gs
je
rorb
push
ret
lods
and
jecxz
push
or
mov
pop
cmp
add
pop
push
xorb
jl
test
lcall
cmp
pusha
pop
adc
or
cld
loopne
or
sub
inc
and
pop
mov
mov
adc
maxps
or
scas
lea
add
mov
or
les
xchg
xor
jnp
out
fisttpll
movsl
add
popa
pop
lret
or
or
addr16
mov
mov
push
pushf
js
nop
daa
lods
daa
lods
or
xchg
adc
and
sbb
test
cltd
dec
add
push
inc
sub
xchg
xchg
mov
sub
mov
in
sbb
fstps
mov
inc
add
mov
mov
xchg
dec
cmpl
push
movsb
adc
or
push
pusha
test
xchg
enter
andb
or
hlt
hlt
pusha
leave
and
xor
xor
mov
dec
pusha
out
cli
jge
push
es
pushf
mov
cmpsl
push
add
rorb
pop
sbb
push
pop
lods
pushl
cld
push
push
add
aam
dec
inc
pusha
dec
adc
sub
dec
repnz
and
inc
cmp
imul
cmc
add
lods
fs
push
sub
mov
sbb
movsb
stc
stos
push
pop
in
sub
cmpsl
in
lods
and
and
mov
or
pushf
scas
jle
add
lods
or
mov
outsb
add
inc
push
or
mov
xor
xchg
jnp
adc
and
xchg
add
loopne
pusha
or
jo
nop
adc
arpl
inc
hlt
xchg
jg
aas
scas
xchg
sub
jge
cltd
mov
cmp
jne
rorb
fmuls
sbb
shlb
jmp
push
mov
sbb
pusha
mov
shl
nop
xor
add
shlb
push
mov
dec
dec
xlat
test
dec
jo
insb
popl
arpl
jno
xor
dec
xchg
add
lock
pop
outsb
xor
add
sbb
dec
adc
mov
inc
aaa
bound
adc
pop
imul
dec
in
xchg
sub
inc
xchg
inc
leave
jl
sub
xchg
adc
jo
sub
arpl
lret
in
imul
seta
mov
push
inc
sbb
scas
sub
rolb
insb
fs
dec
sub
js
mov
rcr
ja
pop
adc
push
or
inc
push
mov
and
data16
jae
xchg
rclb
jmp
inc
cli
xchg
repz
lahf
nop
rorb
nop
jecxz
sbb
inc
imul
mov
std
cwtl
add
xor
ss
decl
fldz
jp
in
jle
lret
jne
push
pop
xchg
adc
and
movsl
push
push
movsl
and
pop
push
push
imul
psubsb
xor
mov
xor
dec
pop
sub
lret
and
je
int3
or
mov
enter
jne
frstor
inc
aam
jmp
clc
push
adc
xor
outsb
ljmp
push
sbb
movsl
mov
push
enter
pop
push
addr16
nop
fwait
jb
xor
sub
sub
xor
pop
mov
sbb
add
sbb
or
add
les
cmp
je
adc
dec
nop
push
ret
add
push
add
push
fs
lcall
mov
push
stos
mov
xchg
pop
inc
mov
cmp
iret
push
rcr
jg
xchg
sub
sub
inc
lea
push
sub
push
add
mov
adc
add
fs
or
adc
dec
pop
cmp
and
stc
adc
mov
add
push
xchg
out
push
cmp
cld
in
rol
xchg
faddl
dec
sbb
rorb
scas
inc
dec
sub
inc
add
scas
xchg
jb
xchg
push
int3
insl
arpl
add
inc
sbb
loopne
jne
xor
adc
dec
mov
in
test
xchg
sub
scas
ffreep
and
sbb
dec
inc
clc
test
or
fmull
das
and
and
andb
bound
mov
jp
mov
arpl
lea
adc
mov
out
or
inc
adc
popa
mov
loopne
sbb
dec
cld
push
push
cmp
dec
mov
jb
clc
movsb
adc
lock
xor
clc
dec
jmp
mov
and
inc
jnp
push
xchg
and
sub
push
or
test
inc
adc
fistpll
nop
jcxz
push
adc
push
loopne
cmp
add
scas
inc
std
xor
or
mov
jmp
dec
insb
test
es
push
outsl
and
roll
inc
sbb
adc
add
push
push
scas
inc
sub
insb
jae
add
cmpsl
adc
enter
or
pop
add
and
or
sub
push
cmp
push
movb
adc
dec
mov
lock
movb
pop
inc
mov
push
push
mov
out
jecxz
mov
and
sbb
push
mov
xlat
pop
cmp
cli
addr16
pop
stos
push
hlt
mov
lea
js
pop
jo
push
scas
mov
movl
insb
das
sahf
insl
mov
sbb
lahf
rorb
adc
sbb
push
jo
or
add
sub
fnsave
adc
push
jne
pop
sbb
pop
inc
adc
mov
mov
out
and
adc
mov
in
and
jo
mov
mov
push
outsl
push
sbb
jo
jb
or
mov
test
xor
data16
nop
jo
test
pushl
adc
in
push
mov
mov
loopne
shlb
insb
jmp
add
int
push
jl
push
in
addl
dec
roll
sbb
or
cwtl
add
rorb
xchg
clc
cmc
je
push
enter
sbb
add
sbb
mov
and
das
inc
dec
mov
jmp
inc
adc
adc
mov
test
test
dec
add
mov
dec
inc
cs
nop
or
jno
mov
rorb
push
dec
js
in
mov
cmp
iret
cmp
cs
test
adc
lock
pop
push
imul
nop
or
nop
repnz
mov
xor
pop
xchg
mov
add
cmp
je
jae
push
loopne
mov
push
add
push
push
sub
bound
psubsb
sub
and
push
jae
add
es
pusha
push
adc
cmp
shll
push
xchg
cld
xchg
cmp
sub
loopw
idivb
sbb
repnz
notl
mov
xchg
sbb
and
gs
adc
movsb
fs
mov
fsubrs
or
divb
or
js
loopne
mov
pusha
cmpsb
cmp
mov
test
dec
push
and
push
ljmp
mov
pop
fmuls
pop
out
dec
rclb
pop
mov
mov
and
sub
ds
mov
sbb
das
sub
add
inc
in
sub
das
xor
push
mov
pop
jp
imul
enter
stos
jno
cmp
fwait
pushl
push
cmc
ret
test
test
insb
ss
ret
repnz
sbb
mov
pop
push
movsb
inc
mov
pop
mov
sar
xor
or
mov
adc
test
and
inc
lcall
mov
rorl
or
or
add
cmpsl
cmp
or
adc
in
cmp
push
mov
add
fwait
pushf
daa
pop
sub
ret
jmp
push
pop
dec
fcmovnbe
jo
pop
inc
fsubrs
adc
inc
push
in
clc
mov
dec
pusha
mov
rol
mov
ror
xor
shr
xor
aam
ljmp
mov
rol
xor
shr
xor
add
add
add
adc
xchg
fbstp
stc
fs
or
jae
or
and
call
add
aam
sub
jge
add
in
add
notb
out
push
jno
ror
cli
fisubrs
sbb
xor
and
and
xchg
push
aam
push
repnz
inc
adc
xor
imul
sbb
fmull
pop
push
or
and
not
ret
rcl
add
add
cmp
add
add
and
in
rcl
adc
call
repz
rorl
cli
mov
rol
out
dec
shr
add
push
xor
add
fsub
in
cmpsb
imul
in
cmp
aam
in
rclb
lahf
push
cmp
and
or
bound
push
daa
xor
punpckldq
pop
mov
push
add
xor
fadd
cs
call
push
shl
cwtl
loopne
in
sbb
loopne
or
dec
cmp
pop
cmp
movsb
imul
push
jbe
xor
or
pop
mov
fcomp
or
jmp
mov
push
xor
and
and
in
iret
or
xor
sbb
xor
push
test
adc
adcb
mov
cmp
jo
ret
push
jo
cmp
add
adc
je
push
inc
pusha
lcall
inc
adc
push
loop
clc
mov
add
add
pop
adc
imul
push
call
in
sti
rcr
lretw
push
clc
jp
push
and
stc
loope
add
gs
fdivrs
inc
shlb
in
stc
xor
adc
inc
lret
inc
push
fsub
xchg
xchg
je
mov
cli
stos
xor
loopne
nop
pushf
aam
data16
in
imul
inc
inc
shr
rolb
and
cli
xor
sbb
fcom
aaa
rcl
add
push
dec
inc
sub
jb
xor
dec
loopne
call
dec
lahf
jo
add
add
jo
push
xor
or
rcrb
dec
lret
adc
xor
push
xor
and
nop
add
sahf
push
mov
push
push
lcall
pop
xchg
inc
xchg
pop
add
ficoms
add
or
rorb
inc
pop
jae
xor
pop
pop
pop
and
add
fs
pusha
and
cs
pusha
pusha
xchg
or
xchg
movsl
mov
mov
repnz
adc
xor
roll
pushf
and
cmpl
xor
in
fs
dec
dec
movsb
shl
stc
stc
stc
test
test
mov
adc
dec
mov
fimuls
dec
rorl
push
push
dec
cmp
or
fcoml
sub
xor
sbb
jo
adc
add
xor
sbb
pop
dec
and
xor
movb
pushf
out
pop
add
push
inc
clc
shrl
mov
lcall
cmp
jb
lock
in
incl
add
sub
lea
xor
pop
xor
cld
adc
enter
sub
sarb
jle
adc
or
or
mov
movsb
mov
outsb
adc
adc
and
out
rolb
mov
sub
push
xor
push
jmp
dec
adc
add
sub
sub
fstpl
inc
pop
add
add
testb
mov
dec
jne
pop
dec
loope
lahf
dec
add
loope
mov
jl
sub
add
mov
cmp
jbe
or
push
inc
push
xor
neg
pop
mov
sub
jae
push
pop
fmuls
and
sub
sub
stos
or
rol
stos
fisttps
scas
or
insl
mov
adc
mov
outsl
pop
loopne
ror
mov
mov
xchg
ljmp
adc
adc
mov
xor
jbe
mov
ret
cmp
jb
cmp
ja
mov
in
dec
sahf
inc
inc
aaa
popa
retw
loope
push
push
mov
add
pop
push
sbb
and
divb
add
pop
push
inc
adc
pop
lds
add
push
push
mov
cmc
aas
movsb
dec
sbb
sub
xor
mov
cmp
je
or
clc
dec
add
jo
fsubs
jne,pn
add
cmp
pop
sbb
out
mov
sbb
push
dec
inc
lea
inc
mov
pop
dec
xor
mov
cmp
jmp
or
fsts
adc
divl
sbb
cli
dec
or
in
mov
push
adc
inc
cmp
fs
dec
inc
push
add
adc
inc
sbb
mov
ret
insl
lret
sub
sbb
add
out
fstps
clc
lahf
sti
jge
lock
mov
lea
mov
sbb
mov
and
or
inc
or
or
jb
mov
rcrb
cmp
notb
outsb
das
sub
mov
jo
xchg
movsb
nop
cld
sarb
fnsave
pop
jb
or
ja
pushf
and
call
cmp
add
add
pusha
movsb
push
inc
inc
mov
cmpsb
inc
cmp
loop
jne
inc
ret
mov
cmpsb
mov
jp
push
inc
inc
add
data16
pop
mov
jb
jb
xor
adcl
pushw
jecxz
add
jmp
cwtl
aas
les
cltd
call
dec
hlt
xor
je
fs
jne
xchg
orb
in
and
mov
clc
lock
test
sti
unpcklps
add
pop
jae
mov
jmp
dec
dec
dec
mov
sbb
add
test
sub
mov
cmovo
or
inc
pushl
mov
add
xchg
cwtl
cwtl
std
shlb
aaa
aaa
aaa
mov
or
jge
and
jle
es
insl
aaa
aaa
sub
sub
and
pop
cmp
jl
pop
jle
shrb
adc
inc
test
cld
pop
mov
jbe
jp
jb
jbe
mov
add
clc
pop
popa
test
fwait
and
or
je,pn
test
iret
jne
je
outsb
and
add
je
xor
ljmp
into
push
and
add
test
lahf
loop
push
push
push
inc
push
jo
testl
inc
and
je
inc
movl
mov
cmc
js
mov
mov
add
pop
shll
and
cld
and
lahf
mov
adc
push
push
repnz
add
push
mov
shrb
sub
cwtl
mov
inc
sub
xor
push
mov
ffreep
loope
popa
cmp
cli
jnp
pop
sbb
out
fidivl
bound
lret
out
add
xchg
gs
lods
sbb
cmp
lods
sbb
pop
ljmp
dec
test
sub
xor
inc
and
inc
outsl
jo
lea
movl
add
pop
jb
adc
jg
mov
cmpl
inc
mov
xor
jo
pop
das
mov
or
xchg
sbb
push
dec
jnp
pop
cwtl
xor
mov
lahf
inc
mov
sbbl
incl
pusha
cmp
outsb
mov
dec
fadds
inc
and
loopne
dec
lcall
loope
insl
pop
jmp
sub
push
adc
std
les
aam
fsts
sti
mov
sahf
sub
lea
sbb
or
sub
mov
pop
daa
dec
add
xchg
insb
pop
sub
and
dec
in
movb
cmp
shr
sub
adc
cmpl
aas
nop
pop
sbb
mov
inc
inc
mov
pop
sub
jl
add
cmp
add
push
sbb
sub
pop
mov
jg
scas
push
or
adc
sahf
push
cmp
lock
repz
mov
popa
hlt
cli
dec
pop
pop
add
jae
adc
lret
sbb
or
add
xchg
je
test
push
mov
ja
je
clc
pop
ja
add
pusha
sti
pusha
jb
cs
shrl
mov
fwait
lock
jbe
add
bound
clc
fadds
mov
fisttpll
sub
stos
pushl
jno
shrb
nop
ret
push
mov
shrl
nop
add
and
andb
mov
cmp
push
xor
scas
mov
lahf
jne
xchg
pushf
lods
cwtl
addl
xchg
xchg
pop
mov
sub
mov
das
or
jne
mov
push
leave
mov
cmp
or
and
jbe
xchg
cmp
and
and
or
test
test
xor
add
notl
add
xchg
call
sbb
cmp
movb
imul
adc
in
pop
dec
cmpsb
aam
push
dec
clc
xor
imul
test
mov
arpl
sbb
mov
in
sub
add
out
jnp
mov
cmp
xchg
push
push
pusha
sub
rclb
push
mov
cmp
add
xor
loope
das
sbb
stos
push
das
bound
cmpl
dec
adc
sub
mov
xchg
inc
cmpl
and
dec
mov
push
in
fcomp
sbb
xor
cmp
je
lock
push
bswap
cmp
inc
mov
inc
inc
inc
int
sub
mov
pop
and
push
mov
das
lods
lock
pop
jns
mov
cwtl
add
and
loopne
sarl
adcb
imul
jmp
mov
jo
popa
cmpsl
fnop
push
push
push
jmp
insb
mov
outsb
insb
jne
arpl
sub
jge
sbb
pushf
sbb
fwait
les
stos
inc
pushl
add
pop
inc
adc
adc
outsb
pop
loopne
cmp
jne
les
aam
adc
ret
mov
cmpsb
or
xchg
xchg
or
lock
mov
scas
dec
mov
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
test
lock
je
jl
mov
add
and
jae
xor
gs
andb
add
cmp
sahf
xor
in
das
ret
sti
sub
lds
dec
popa
in
adc
mov
je
pop
mov
mov
nop
lods
shrl
pop
aaa
lods
inc
pop
js
jno
jmp
inc
mov
les
pop
add
mov
leave
lds
test
and
int
adc
xor
out
mov
or
out
lock
or
subb
push
cmp
xor
fstps
ficoml
fdivr
xchg
sbb
jmp
lock
std
lcall
mov
dec
dec
aam
cmp
shr
in
jbe
and
inc
and
dec
rol
mov
xchg
push
sub
xor
lret
xor
cmp
fdivl
cmp
filds
sbb
pop
xchg
and
cmp
add
mov
decl
data16
adc
data16
gs
dec
add
mov
call
inc
push
pop
push
enter
sbb
cmp
xor
jne
push
push
stos
ret
inc
shrb
lock
ljmp
or
xchg
cmp
stc
jle
xchg
jne
mov
sahf
push
int3
sbb
jmp
je
loope
pusha
popf
insb
mov
jbe
dec
xchg
inc
push
pushf
inc
add
adc
sahf
orl
aaa
clc
fs
adc
sahf
cs
and
mov
sbb
or
add
xor
rcrb
push
cmpl
sub
js
jl
test
and
sub
sbb
xor
test
or
add
xchg
pop
imul
adcb
add
cmp
movzwl
test
and
mov
or
jne
jne
insl
or
lret
mov
pop
and
inc
sbb
bound
push
hlt
lds
icebp
add
mov
or
rolb
pusha
sbb
and
adc
sarl
jmp
push
push
sub
jnp
sbbb
inc
insl
cmp
mov
dec
mov
in
or
mov
dec
es
data16
xor
rcl
mov
xor
inc
pop
mov
pop
lods
jne
adc
sbb
int
xlat
inc
add
loope
push
orb
inc
ret
gs
mov
and
cmp
insl
or
sbb
sub
cmp
sub
clc
mulb
xchg
jp
xlat
push
in
sahf
cmp
and
clc
les
add
xor
jbe
loop
shlb
ja
jbe
and
pop
sbb
fwait
sahf
xor
fxam
xchg
ret
or
and
add
lahf
xchg
push
add
adcb
cmp
and
lcall
hlt
inc
inc
pop
xchg
aam
shlb
and
fimull
add
movups
shl
pop
subb
jo
and
xorl
sbb
cmp
cld
or
negb
mov
pop
sub
adc
lock
sahf
or
dec
scas
dec
cld
testb
notb
aaa
jbe
mov
and
out
or
jnp
pop
sbb
int
adc
loop
movsb
dec
or
jg
xor
jno
mov
loop
and
mov
mov
push
xor
and
loope
idiv
dec
xor
push
adc
pop
imul
sbb
push
xor
cmp
xchg
movsb
cmpsb
and
cli
outsb
adc
pop
mov
sahf
cmc
outsl
push
sbb
inc
xchg
out
dec
sbb
ja
rorb
adc
inc
add
dec
lea
pop
dec
mov
push
sarb
and
shrb
cmp
test
dec
push
outsb
adc
inc
sub
pop
pop
sub
cmpsb
cltd
pop
pop
pop
mov
push
inc
fstl
scas
cmp
test
jb
leave
imul
pop
call
mov
lds
add
pop
shlb
mov
lock
xchg
add
or
outsb
or
dec
rcrl
adc
pop
or
imull
and
adc
jnp
fimull
sti
movsb
test
addr16
add
dec
add
add
mov
insb
fs
andl
cmp
ja
mov
mov
dec
adc
loopne
xor
dec
push
shrl
add
inc
and
shll
xor
add
and
sub
aaa
or
dec
fstps
fs
sbb
imul
lcall
add
adc
push
and
adc
and
sub
cmp
mov
inc
inc
push
mov
mov
loopne
and
inc
inc
xchg
js
dec
and
lcall
sub
orb
cmp
sub
or
fdivl
or
cmp
sub
test
sbb
test
sub
incl
and
push
sbb
notb
aam
xchg
jbe
cmp
dec
fsubs
add
clc
int3
rorl
es
adc
inc
mov
pop
push
inc
inc
in
ret
pop
arpl
ja
adc
shrb
add
repnz
fs
std
push
cmpl
or
pop
pop
xor
pop
and
push
mov
sbb
dec
cmp
mov
test
insb
adc
and
xor
push
pop
xor
mov
sbb
push
cld
xor
ret
mov
cmp
stos
les
jle
repz
ljmp
mov
and
mov
jp
jb
mov
mov
pop
pop
or
and
push
xchg
movsb
and
mov
mov
call
mov
sub
pushf
and
test
or
lods
xchg
int3
xor
push
sub
sub
out
or
pop
inc
push
test
sbbl
in
es
lcall
testb
and
jne
orl
inc
int
or
lods
inc
add
test
pop
push
test
lahf
imul
sbb
ficompl
push
inc
jmp
jge
pop
addl
das
stos
call
sahf
push
popf
pushl
inc
or
jnp
icebp
push
push
ljmp
lods
lods
subb
loope
and
mov
cmp
and
and
push
push
add
jbe
inc
push
xor
push
mov
mov
addl
jns
pop
aaa
mov
or
sub
test
sbb
xor
xor
lock
mov
clc
loop
shlb
je
cmp
jbe
lds
cmp
xchg
dec
xorl
add
adc
ret
jp
lods
push
adc
cmp
insl
or
and
adc
push
test
cmpl
dec
les
mov
lret
ret
movsb
jmp
push
enter
and
xchg
test
jbe
mov
mov
and
or
sbb
dec
or
jmp
jnp
sbbl
add
sbb
cmp
out
push
leave
lret
add
sub
push
xor
sub
adc
add
rclb
cmp
shl
cmp
lcall
cs
mov
cltd
outsl
xor
xor
test
cmp
ja
push
mov
pop
pop
mov
push
fwait
add
xor
es
scas
int
dec
out
jbe
sub
loope
adc
cmpsb
push
jae
push
dec
test
cmp
iret
jmp
push
mov
xor
dec
das
sub
mov
scas
jmp
adc
xchg
mov
push
sub
xor
push
rorb
mov
dec
cs
add
push
sub
lcall
ss
xchg
or
pop
mov
int3
fcompl
xchg
jne
int3
adc
and
inc
subb
and
ja
and
imul
xor
test
scas
xchg
adc
fdivs
pop
shlb
xchg
and
or
scas
scas
and
js
adc
mov
and
add
push
add
add
subl
fwait
cmpb
es
sub
cmp
sarb
lret
jbe
sub
add
mov
dec
das
sahf
test
orb
fsubrl
add
xlat
push
mov
fdiv
insl
add
push
adc
mov
jb
xor
mov
ret
clc
shlb
xchg
lret
xchg
mov
and
mov
lcall
loope
mov
push
call
cwtl
push
movsb
enter
arpl
or
cmp
inc
cmp
mov
mov
imul
add
inc
xor
sub
lods
dec
and
sub
ja
test
push
or
in
inc
mov
cmp
lock
es
pop
cmpsb
cmp
push
add
xor
or
sbb
push
push
jbe
mov
mov
dec
xor
push
lock
pop
sub
pop
popf
push
lock
adc
pop
hlt
add
cld
rcrb
inc
adc
ret
mov
push
sub
jmp
aas
dec
pop
push
xchg
xor
dec
addb
ljmp
pop
cmc
mov
ret
adc
mov
pushl
push
out
adc
add
cltd
pop
pop
mov
xlat
cmp
ljmp
mov
fsubs
test
add
inc
out
cmpsl
dec
test
mov
in
push
test
das
dec
mov
mov
push
les
cmp
xchg
xchg
and
adc
js
push
scas
adc
mov
push
dec
add
dec
stos
cmp
push
mov
push
les
sub
lcall
icebp
adc
pop
cmp
pop
nop
inc
filds
dec
stos
stc
push
mov
fdivl
and
jne
fmul
jb
pop
lock
mov
popf
inc
jg
insl
jne
mov
not
into
pusha
add
fcmovb
push
out
outsb
adc
loope
or
jmp
jg
andl
scas
cld
push
stos
dec
into
pop
mov
in
test
imul
adc
lret
dec
sub
cmp
jne
fsubl
aad
sub
movsl
loopne
and
push
shlb
and
lret
dec
and
push
sbb
pop
sarb
adc
inc
mov
icebp
push
add
aam
pusha
fidivrl
add
aad
or
jmp
xor
cwtl
mov
add
lcall
inc
call
shrb
sub
pop
lcall
or
outsb
push
push
push
inc
test
fistpll
xor
aam
addb
movsl
adc
sbb
in
mov
jns
add
out
add
add
lock
dec
adc
out
xchg
mov
cmp
jne
jbe
sub
adc
and
add
ss
pop
cmp
or
or
xor
cmp
jb
pop
cmp
cmp
sub
mov
push
aam
and
add
lods
testl
movsb
nop
scas
das
hlt
fcmovb
mov
push
test
and
sbb
jecxz
sbb
inc
xor
or
xchg
cmpsb
insb
insb
scas
push
add
dec
jmp
sbb
inc
das
push
ljmp
pushf
rolb
jbe
daa
or
mov
mov
rolb
sbb
adc
or
add
and
push
cmpsl
pop
rcll
mov
bound
testl
xchg
popf
shrb
sbb
mov
inc
mov
insb
lock
lds
mov
loope
inc
sub
mov
pop
jnp
orl
jle
fdivrs
cmp
into
or
pop
cmp
sbb
push
adc
testb
std
jmp
rclb
add
sub
push
adc
sbb
popf
push
push
loopne
xchg
mov
push
add
lods
stos
sub
icebp
inc
add
fldl
and
cmp
jge
test
add
mov
mov
mov
jb
sbb
inc
into
mov
les
push
outsl
jge
mov
adc
pop
mov
xchg
dec
lret
fisubl
sbb
sub
inc
inc
adc
movsl
dec
jmp
add
push
fcomi
mov
cmp
xchg
ret
test
sbb
adc
add
add
jbe
dec
enter
xor
fnstsw
iret
fsubrl
xlat
push
push
insl
jge
pushf
jmp
sahf
out
sbb
adc
cmpsb
hlt
push
pop
jl
inc
or
dec
push
and
roll
xor
jle
and
ljmp
les
insl
pop
inc
add
push
xor
sbb
push
mov
jbe
lods
test
or
jmp
xchg
or
lea
test
mov
pop
pop
inc
enter
adc
sbb
stc
divb
jecxz
imul
jle
mov
out
test
into
andl
mov
add
and
sbb
inc
cltd
xchg
xchg
push
subl
bound
cmovge
dec
lea
lea
repz
stos
add
and
dec
in
lods
adc
add
and
int3
insb
jecxz
ret
test
mov
ret
mov
xchg
xor
push
movsb
lcall
xor
push
lock
and
notl
out
insb
cld
imul
mov
jmp
sbb
dec
idiv
jmp
aaa
lret
mov
xchg
loope
mov
stos
mov
pop
jmp
test
daa
aam
je
pop
cli
push
stos
loope
sbb
or
add
lret
pusha
loopne
aam
mov
sbb
daa
inc
cld
adc
push
rolb
movsb
cli
mov
adc
pop
cmovbe
sbb
ret
jle
mov
mov
sbb
lea
mov
inc
push
cltd
mov
in
pusha
add
loopne
les
xchg
divl
inc
lea
jmp
test
outsl
mov
jge
or
mov
lea
adc
push
xchg
and
adc
fiaddl
sbbl
xor
clc
out
daa
push
sbb
lret
mov
movsb
xchg
test
xlat
lret
rcr
and
pushf
test
lods
dec
cmpb
inc
push
rorb
adc
out
push
xchg
fidivrs
inc
cmp
in
add
dec
mov
sub
bts
add
inc
scas
pop
mov
dec
sub
je
jl
ret
xchg
iret
adc
jmp
push
sbb
ret
mov
sarl
loope
push
lock
and
dec
out
mov
ss
jmp
push
add
inc
mov
stos
out
rolb
das
sbb
gs
mov
push
cmp
pushf
xchg
adcl
mov
or
or
and
dec
or
cmp
jo
inc
and
sbb
das
in
add
cmp
notl
inc
mov
pop
adc
outsl
mov
sub
adc
sub
or
jnp
ret
clc
pop
lahf
movsl
or
mov
adc
cltd
push
jbe
pop
cmp
je
mov
daa
jle
xor
mov
ljmp
push
cmp
cltd
add
lock
pop
jg
icebp
cmp
maxps
jmp
and
bound
or
pop
lcall
mov
mov
in
pop
or
sbb
ficoms
test
or
insl
jp
mov
lea
orl
mov
mov
mov
inc
push
inc
popa
mov
icebp
inc
movb
decl
cld
jmp
cmpl
and
push
inc
add
out
sbb
fs
dec
xor
cmp
push
fildll
sub
mov
jmp
movsb
imul
sub
mov
adc
xchg
in
sub
adc
adc
or
stos
jecxz
js
push
mov
adc
call
push
mov
ljmp
pop
call
imul
scas
mov
and
mov
push
pusha
xor
push
or
ss
jo
clc
mov
sub
iret
repz
mov
roll
add
add
call
push
sbb
sbb
ret
inc
xchg
ljmp
cs
pop
add
enter
or
push
jecxz
mov
fcompl
xor
ret
mov
cmp
pop
cmp
scas
dec
lds
mov
mov
int
and
hlt
mov
sbb
aaa
pop
pop
lods
sub
or
popa
add
mov
cwtl
dec
inc
popl
sub
xorb
enter
clc
subl
ret
pop
insl
insb
sbb
jo
xchg
jl
shl
or
adc
ds
lds
jnp
push
rcr
stc
xchg
or
clc
ja
xor
insl
jo
mov
push
in
xor
pop
mov
hlt
fcomps
sub
xor
movsb
pop
cmpsl
sub
or
rolb
das
cmp
mov
nop
addl
test
push
pop
rorl
or
inc
inc
pmulhuw
inc
adc
or
jg
popa
mov
dec
add
lret
lods
cmpsb
enter
inc
stos
dec
inc
enter
sub
ret
or
mov
sarb
add
adc
dec
mov
xchg
inc
jp
push
cmp
shlb
cld
xor
or
inc
adc
push
xorl
xchg
xor
jnp
cmp
push
fs
testl
insb
movsb
cmp
sbb
add
mov
dec
dec
dec
clc
jne
mov
and
aaa
jnp
test
cmp
mov
divb
sub
lea
cmp
xor
stos
es
sub
sbb
inc
xchg
sbb
xchg
sbbl
daa
ljmp
and
inc
dec
add
add
sbb
add
cmp
jae
jl
subl
sbb
adc
push
js
fistl
dec
or
cld
loopne
fnstenv
mov
push
mov
fcomp
pop
lods
stc
repz
add
or
lcall
lret
adc
pushl
clc
dec
add
or
enter
adc
sub
or
ret
push
xchg
pop
fimull
inc
rcrb
pop
add
cmp
push
mov
mov
iret
mov
mov
or
adc
cmpsl
cvtpi2ps
data16
aas
cmp
pop
mov
mov
dec
adc
cs
inc
adc
pop
jp
push
adc
data16
pusha
sub
outsl
call
insl
lea
test
pop
mov
pop
add
shrb
sahf
sub
and
lret
lahf
cmpl
add
cmpsl
std
bnd
push
cmp
adc
jne
ds
jge
in
push
outsb
or
or
dec
mov
push
dec
inc
lock
xchg
popf
adc
lods
fcomps
push
lea
cwtl
call
inc
loope
mov
cmp
push
in
mov
loopne
in
jo
fmuls
mov
push
sbb
ret
jb
sub
or
iret
and
pop
lea
jp
jl
dec
adc
scas
xchg
sbb
adc
test
push
add
or
mov
push
sub
push
lret
cmp
rorb
pop
add
or
dec
fistpll
mov
add
leave
arpl
clc
adc
loopne
cmp
sti
jne
xchg
ljmp
cmp
push
jl
mov
cmp
mov
fiadds
stc
sub
mov
stos
cmp
cmp
xchg
xor
pushf
gs
mov
jl
adc
in
aas
cmpb
xor
or
cmp
push
hlt
pop
je
mov
pop
add
int
mov
lret
cli
das
xlat
push
jecxz
aam
cmp
jb
jo
push
mov
dec
je
cmp
xor
cmpsl
lcall
dec
sub
mov
sbb
sbb
icebp
or
jp
add
inc
cld
cwtl
and
push
xor
xchg
add
cmp
jmp
sbb
cmp
mov
sahf
shlb
ja
pop
xlat
push
cmc
mov
dec
adc
add
data16
sub
pop
ret
or
clc
adc
dec
mov
and
fadd
inc
test
jle
pop
xchg
scas
test
push
sbb
push
insb
add
les
outsb
xor
sbb
or
test
rcl
add
cmpb
test
jg
call
jge
add
mov
xor
mov
sbb
adc
std
inc
and
pop
loopne
xlat
xor
push
mov
repz
add
mov
push
into
cmp
loopne
fsubrs
push
sub
lock
sub
jo
mov
addb
in
xchg
outsl
pop
inc
sub
sub
xor
pop
push
adc
es
add
inc
xchg
mov
jb
addr16
je
mov
leave
push
push
dec
pop
js
cmp
pusha
es
pusha
mov
hlt
lds
cs
mov
and
mov
mov
push
jb
push
jae
rolb
cmp
sub
iret
out
bound
out
mov
jns
fwait
call
out
mov
xchg
cmpsb
je
mov
cmp
add
lods
frstor
repnz
and
and
popa
cmp
in
ja
adc
mov
adc
cmp
xchg
adc
in
pop
lock
pop
fldt
xor
add
mov
sub
mov
pop
or
inc
sbb
jmp
push
int3
rclb
fimull
ja
fwait
xor
or
loopne
repz
jmp
push
push
pop
add
jbe
inc
xchg
loopne
push
outsb
jl
das
sub
and
loope
pop
fdivr
mov
shr
mov
mov
test
jge
dec
ja
in
je
adc
inc
fisubs
mov
hlt
adc
pushf
mov
lods
jmp
out
in
jl
cmpsb
negl
mov
mov
and
std
adc
push
call
mov
inc
fisubl
std
jl
out
sub
bound
gs
call
rcl
popl
or
jge
add
xor
jno
repnz
push
or
mov
add
roll
repz
enter
sbb
or
mov
lcall
je
sti
pop
test
dec
add
adc
pop
dec
mov
cmp
mov
or
sub
test
and
fiadds
pcmpeqw
fsub
adc
sbb
mov
and
xchg
in
jmp
mov
xchg
and
sbb
orl
jbe
test
xchg
xchg
rorl
pop
jge
sub
mov
mov
pop
imul
jle
push
insb
loope
movsb
std
xchg
and
test
adc
xor
test
sbb
xor
in
push
mov
mov
inc
add
pop
daa
rolb
and
xor
dec
xchg
xchg
xchg
xlat
pop
cmp
outsb
sbb
fcompl
imul
mov
sub
sbb
das
sub
add
jmp
sbb
dec
add
movsb
xor
movsl
or
fcom
push
pop
and
insb
mov
adc
mov
add
pop
dec
dec
sarb
mov
adc
mov
lea
mov
pop
icebp
mov
aam
loop
or
dec
test
sub
cwtl
nop
xchg
cmp
sbb
fdivrl
pop
imul
sub
inc
lahf
or
clc
stos
rol
pop
or
mov
pop
xchg
icebp
lea
and
mov
cwtl
xchg
mov
int
xlat
mov
adc
ljmp
dec
out
lcall
push
popa
sbb
add
repnz
leave
rclb
addr16
jecxz
fidivrs
incb
mov
xor
sub
push
pop
and
repz
out
mov
dec
jae
sub
ja
fisubrs
sbb
sub
inc
in
inc
adc
xchg
lea
push
add
add
cld
jb,pn
and
xor
shll
push
mov
inc
addl
add
adc
fildl
push
pop
aad
sub
add
add
xor
cmp
xor
or
sbb
adc
bound
enter
jecxz
xchg
sub
shrb
mov
fucomip
std
pushf
xor
fisttpll
cmpl
add
adc
adc
or
xor
rorl
inc
adc
or
inc
adc
fadds
add
add
or
js,pt
mov
add
jbe
mov
shl
add
add
push
js
dec
shr
xor
cmp
das
add
cmp
out
aaa
or
xchg
push
mov
iret
bnd
xor
mov
js
mov
in
xchg
ret
push
jae
lea
push
sub
push
rol
lret
sbb
push
push
outsl
inc
push
gs
mov
shll
add
dec
pop
ret
inc
or
push
jns
and
adc
popf
jbe
and
sbb
mov
fiadds
push
sub
cmp
jecxz
sar
fnstenv
inc
jmp
push
jp
sub
fs
pop
cmp
and
ret
pusha
daa
xor
movb
ret
xorb
ljmp
xlat
in
clc
subl
test
jno
pop
ret
fsubrl
cmp
add
mov
push
fiaddl
cmp
push
push
inc
popf
jne
and
or
cmp
dec
add
cmp
daa
add
sbb
mov
inc
jmp
jbe
popf
jne
lcall
repz
add
fdivr
push
lds
fisubs
pop
sbb
pusha
jo
addl
int
lahf
and
mov
shlb
test
ret
jae
dec
push
and
or
and
or
inc
ret
popa
adc
sub
xor
ss
cltd
insb
mov
dec
xchg
je
mov
add
push
dec
inc
mov
push
cmpb
push
xchg
mov
add
jne
xor
sbb
mov
fidivl
inc
inc
imul
sbb
test
rsm
mov
enter
pop
stos
testb
and
push
fs
inc
or
mov
push
adc
push
jle
jle
pop
sbb
ret
and
add
stos
xchg
mov
jmp
mov
adc
in
fcmovnu
shlb
lea
cli
ja
cmpb
out
aas
and
sbb
ret
push
enter
test
inc
jno
in
cmp
push
adc
xor
loop
popa
add
sub
inc
mov
jmp
mov
xor
imul
imul
mov
inc
test
cwtl
lea
and
das
inc
fcmovu
and
xor
or
sub
cmp
mov
cmpsl
sbb
push
cmpsb
lods
in
mov
or
cmpb
inc
or
stos
cli
popf
add
push
mov
mov
cmp
and
jmp
inc
add
divl
push
sub
mov
dec
adc
scas
dec
out
xchg
mov
mov
push
and
lea
add
sti
xorb
mov
cmp
cmp
sahf
add
mov
add
and
mov
and
lahf
xor
lcall
inc
imulb
push
or
adc
and
sub
shlb
cmp
mov
icebp
daa
sbb
mov
out
mov
jp
lret
xorl
ret
dec
push
mov
jbe
cmpl
add
loope
fwait
scas
lea
arpl
xor
sbb
cmp
cli
jle
sub
and
add
push
xchg
adc
cmp
mov
inc
test
mov
xchg
adcb
mov
adc
call
out
orb
xchg
or
sub
add
mov
fdivrs
push
leave
mov
test
inc
add
and
push
ljmp
hlt
cmp
in
jb
jne
mov
or
add
cmc
loope
mov
ja
int3
mov
fstps
push
mov
push
les
mov
pop
fstpt
jle
enter
pop
sbb
pop
sbb
loopne
insb
lret
mov
xor
fdivp
sbbl
mov
mov
inc
shrb
mov
mov
push
push
adc
aas
push
mov
or
adc
mov
testl
pop
mov
xlat
inc
pop
imul
js
jge
jo
mov
mov
mov
jnp
rolb
popa
mov
adc
enter
xchg
and
leave
lret
jle
push
insb
ljmp
stos
xchg
add
lret
lods
xor
xchg
pop
jne
pop
popa
ss
lret
xlat
sbb
mov
repnz
inc
push
add
std
pop
mov
inc
mov
cmc
and
mov
adc
sub
jmp
adc
cmp
das
add
aad
pop
addb
mov
testb
jbe
mov
or
sub
pop
jle
mov
iret
dec
shll
je
stos
push
or
imul
sbb
mov
call
dec
das
rcl
leave
mov
inc
dec
add
ret
loopne
and
mov
js
mov
mov
cld
cmpsb
cmp
stc
mov
cmp
pop
mov
mov
scas
les
mov
pop
inc
cmp
test
cmp
sbb
push
ret
rcll
push
jmp
jne
nop
sub
sbb
hlt
ja
ds
mov
pop
cwtl
xor
mov
jne
and
xchg
or
hlt
idivl
dec
aas
addl
mov
xchg
mov
or
fimuls
xor
aaa
imul
add
dec
add
add
imul
pop
add
fnstcw
mov
pusha
aam
adc
cmpl
lret
into
cmp
pop
push
cmp
imul
jg
push
inc
cmp
jl
pop
in
pop
adc
mov
emms
or
push
aaa
ret
push
xor
adc
dec
jl
addb
or
add
adc
mov
outsb
xor
mov
or
jle
dec
icebp
js
jle
jo
xor
pop
ret
push
das
mov
cwtl
sub
push
jl
faddl
adc
lock
jbe
rclb
xor
and
inc
in
aaa
xor
mov
test
dec
xchg
add
cmp
lcall
or
mov
incl
cmp
fstps
mov
jmp
movntsd
das
mov
inc
xor
cmc
xchg
sbb
jo
clc
jbe
xor
mov
lock
sbb
pop
bound
add
rorb
imul
shl
and
add
mov
enter
rolb
add
shl
xor
mov
mov
mov
xchg
movsb
mov
dec
cmp
es
insl
inc
or
adc
adc
jo
addl
lea
add
mov
or
mov
xor
sub
sub
fistps
js
add
xchg
fcoms
fs
clc
add
and
daa
cmp
aad
mov
cmpsl
rclb
dec
lock
nop
call
inc
sub
mov
lret
sub
and
xor
test
dec
push
pusha
pushf
data16
xchg
fsubr
or
mov
xchg
mov
inc
loopne
out
mov
adc
or
cltd
mov
pusha
pop
mov
dec
or
xor
loop
adc
jle
mov
or
and
mov
sub
pop
divb
xor
es
cmp
dec
or
push
ljmp
mov
sahf
gs
mov
adc
push
stos
nop
push
or
or
dec
sti
lods
or
add
xor
in
pop
ror
pop
sar
jecxz
das
xchg
mov
sbb
sarl
out
and
adcb
xchg
cmpsl
xchg
or
or
dec
in
mov
enter
ficoms
iret
dec
add
adcb
xor
push
or
sbb
pop
loopne
mov
lret
lret
adc
xchg
cmp
or
aaa
bound
mov
xchg
scas
push
xchg
push
xor
imul
aam
out
xor
dec
sub
rorb
mov
pop
lea
sbb
or
cld
enter
pop
push
jnp
mov
ss
jmp
push
js
jbe
and
xor
call
adc
fiaddl
nop
cmc
pop
aaa
cmp
ss
outsl
inc
js
add
rcll
js
mov
nop
icebp
dec
lds
sbb
dec
xchg
cmp
in
daa
push
loopne
mov
pop
push
ret
or
jo
mov
es
jecxz
sub
shr
mov
popa
insb
insb
cmp
test
push
sub
sbb
xor
dec
data16
fptan
in
sbb
mov
nop
and
rcll
testb
mov
ret
inc
sbb
mov
dec
add
xchg
xor
mov
inc
adc
pushw
sbb
mov
popa
and
or
mull
pop
pop
pop
mov
or
ret
mov
ret
sbb
pop
jmp
rorb
fimull
adc
sti
and
lea
subl
rclb
call
mov
dec
adc
loopne
inc
mov
and
xor
enter
dec
lods
lret
mov
cmp
push
jns
jmp
or
mov
add
or
add
sbb
push
aam
or
xor
jbe
pop
adc
mov
adc
push
sbb
or
leave
inc
or
dec
mov
cmpsl
or
push
and
xorl
xchg
mov
dec
cli
aam
adc
out
mov
jno
gs
adc
mov
sbb
in
inc
mov
ret
shrb
and
rol
push
adc
ret
xor
xor
fldt
adc
mov
sub
sub
push
mov
fs
mov
jo
xor
es
out
jne
push
sbb
add
cmp
sahf
add
cli
push
push
add
test
mov
das
xchg
icebp
ret
cwtl
pop
mov
pop
scas
cmp
insl
icebp
cmpl
test
loopne
mwaitx
pop
push
mov
ret
and
pop
mov
pop
push
xchg
jmp
adc
push
push
adc
scas
loopne
je
push
xchg
adc
and
adc
dec
mov
loope
pop
adc
es
push
and
mov
adc
adc
adc
add
icebp
outsl
xchg
xor
cmpl
jne
mov
sbb
cmpsl
mov
leave
aad
pop
inc
add
push
and
jmp
ss
mul
inc
fisttps
repnz
cmp
jle
in
test
push
push
inc
call
mov
inc
cmp
in
mov
and
mov
stos
cs
push
addr16
in
jne
push
add
pop
or
adcb
or
jo
cmp
jnp
or
jo
xor
and
or
xchg
jne
repz
add
cwtl
ret
inc
push
scas
inc
insl
pusha
insb
jg
push
dec
insb
mov
or
jne
int3
cwtl
push
insb
xor
inc
or
pusha
daa
sub
aam
inc
xor
add
lcall
cmp
push
sub
inc
jo
jne
orl
adc
add
cmp
cmp
add
adc
and
loop
stos
hlt
mov
jne
std
dec
lods
pop
pop
mov
jg
mov
pop
stos
lret
jne
out
leave
push
add
add
add
mov
mov
inc
in
jo
decb
add
sarl
sbb
incl
jge
jl
mov
cli
testb
je
shlb
cmc
bound
inc
loopne
cmp
pop
mov
add
ret
sub
imull
sub
aam
adc
add
add
jno
or
pop
sub
push
pushf
gs
js
xor
fadd
ss
dec
jge
repz
adc
imul
sbb
xor
sbbl
in
shl
jae
dec
and
mov
xlat
scas
sbb
jge
jb
mov
or
in
push
mov
jge
pop
jne
jg
add
xchg
hlt
rol
mov
in
inc
es
mov
and
cmp
insl
and
or
movsb
and
hlt
mov
ja
pop
push
je
movsl
inc
andl
aas
push
push
mov
inc
shll
icebp
inc
mov
insb
inc
add
sub
push
fisubrs
push
add
push
push
push
cmp
sbb
pop
cmc
in
pop
andb
dec
lahf
imul
adc
add
data16
lock
out
mov
rorl
sbb
mov
cmp
sbb
or
sbb
dec
roll
add
cmp
inc
lock
dec
call
inc
and
sbb
adc
or
xchg
bts
leave
lret
sub
sub
andl
mov
adc
stc
jmp
fdivp
std
push
pop
add
sbb
jmp
push
rorl
pop
xor
jg
push
xchg
add
sub
pop
gs
cmpb
mov
xchg
add
js
js
lea
bound
jg
test
sub
cmp
rol
divl
push
sub
inc
lea
sbb
inc
jp
sbb
daa
mov
mov
int
lahf
mov
out
push
icebp
aaa
les
jae
insl
fisubs
dec
and
loop
pusha
inc
lock
xor
lret
nop
push
or
roll
xor
sbb
pop
fnsave
mov
mov
jnp
rclb
ja
sbb
cld
std
adc
jmp
ds
push
in
repz
pop
jmp
and
add
add
imul
ljmp
movb
push
test
ds
xlat
stos
ret
inc
cs
adc
mov
jne
or
pop
lret
fstl
or
out
rorb
jl
inc
add
dec
adc
imul
and
cmp
jo
jecxz
fcmovb
jne
jnp
sbb
cltd
cmp
mov
add
ret
pop
or
or
or
mov
dec
and
sub
mov
jo
mov
leave
dec
pusha
insl
xchg
sub
fnstenv
push
icebp
dec
push
loopne
js
mov
mov
arpl
pop
adc
in
insb
jbe
fwait
test
add
push
cmpl
loopne
adc
ljmp
xchg
lcall
adc
xchg
jp
fidivl
clc
add
cmp
inc
clc
fisttpl
sub
lret
aad
js
jbe
popf
fisttps
dec
adc
outsb
adc
rorb
mov
push
or
scas
jl
pop
pop
adc
push
mov
repz
pop
jo
adc
loopne
rcrl
jbe
dec
leave
and
loopne
push
nop
ss
jns
call
subl
push
and
inc
enter
stos
mov
mov
push
jecxz
pop
dec
mov
dec
pop
stc
aas
pop
xchg
or
cmp
pop
and
pop
in
inc
mov
ss
dec
pop
lahf
pop
xchg
int3
cmp
sbbl
add
cltd
pop
fisubl
fs
push
xchg
push
ja
xlat
sub
scas
in
jmp
jae
sbbb
jmp
inc
add
addr16
sub
aam
push
mov
clc
pop
push
and
insb
imull
aaa
loopne
inc
cmp
call
cmpsb
je
and
and
shlb
jo
inc
testl
fbstp
inc
inc
add
ja
lds
dec
push
ret
mov
clc
jae
ret
adc
and
push
add
pavgb
pushf
nop
jmp
inc
pop
test
inc
je
sar
adc
xor
cmp
or
addb
pop
sub
xlat
jno
call
xchg
and
cmpsl
inc
xor
out
negl
pop
pop
ret
sub
cmova
es
or
sbb
jb
shl
out
loop
push
add
push
mov
call
dec
jnp
dec
lret
lds
test
loop
gs
inc
push
test
xchg
jb
add
xor
mov
jmp
in
fwait
or
push
mov
lods
scas
add
inc
pop
xchg
mov
xchg
dec
cld
sub
pop
push
xchg
cmp
add
rcl
mov
pop
dec
mov
sti
and
sahf
out
adc
mov
lret
imul
movsb
jbe
sbb
add
aad
mov
inc
inc
mov
or
cmp
addl
and
dec
repnz
shr
xchg
xor
inc
jo
loope
cmp
ret
mov
mov
je
sub
pop
rcrb
dec
pop
add
nop
ret
je
pop
cld
cmp
push
imul
push
bound
push
mov
adc
inc
cmp
adc
xchg
mov
repnz
push
mul
jne
or
rolb
ret
daa
mov
ljmp
addr16
rorb
adc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
jp
or
sbb
pop
adc
test
jae
cmp
push
popf
and
xchg
jg
mov
push
push
movb
mov
add
pop
icebp
jnp
adc
inc
cmp
mov
pop
push
sub
aaa
shll
pushf
dec
xchg
push
mov
dec
lea
pop
pop
and
push
ffree
xchg
lods
jo
cmp
xor
nop
or
inc
add
scas
test
imul
adc
gs
adc
xlat
push
outsb
in
mov
cltd
inc
orb
add
pop
cmc
sbb
pop
loopne
mov
addr16
nop
cmp
xor
mov
adc
mov
lahf
pushf
push
pop
xlat
shl
jge
call
inc
inc
adc
cltd
mov
cmpsl
and
int3
rolb
ljmp
sub
loop
dec
fdivl
loop
xor
test
nop
cmp
xchg
icebp
pop
mov
insb
xor
cmp
jne
and
inc
pop
mov
push
movsb
roll
pop
jno
dec
je
xchg
jno
push
or
push
pop
scas
mov
inc
xor
dec
sbb
adcb
adc
pop
mov
shrl
push
movl
movsl
int3
rcll
bound
cld
ljmp
or
test
testl
inc
js,pt
and
dec
add
xor
inc
sbb
sub
jg
cmp
push
int3
add
pop
mov
push
lcall
stmxcsr
sbbb
test
cmovns
fsubrl
pop
mov
and
clc
jg
pop
outsb
bound
dec
test
cltd
outsb
add
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
inc
test
scas
je
mov
repz
cmp
or
cwtl
frstor
std
in
xchg
ret
adc
jnp
mov
cmp
movsb
int3
add
add
adc
lock
or
adc
xchg
fwait
or
fnstsw
ret
mov
mov
mov
mov
jo
addps
mov
fldl
sbb
sbb
inc
pop
jecxz
xor
cmp
and
sbb
jmp
jns
clc
ja
mov
sbb
xchg
or
adc
int
mov
sub
incl
inc
mov
jbe
pop
lock
pop
mov
dec
xor
jbe
jmp
cld
ret
jge
mov
test
leave
or
push
test
ljmp
fisttpl
sbb
out
daa
mov
inc
cwtl
xchg
jno
xchg
mov
rcll
popf
es
adc
bnd
adc
les
iret
jl
and
lock
rolb
mov
pop
int3
or
fucomip
sbb
push
mov
bound
mov
movsb
push
rorb
dec
lods
pop
je
adc
loop
mov
push
jecxz
call
cmp
mov
inc
inc
fsubrs
ja
jle
mov
call
das
push
fiadds
rorl
sahf
jb
inc
push
add
mov
jmp
or
movsl
xchg
imul
shl
jmp
adc
scas
xchg
adc
and
loope
cmpsb
push
cmp
sahf
shrb
sbb
addb
sub
icebp
loope
mov
push
sbb
or
cmpsb
or
popf
pushf
insb
xchg
push
pusha
mov
hlt
jp
ret
dec
lock
inc
aam
fidivrs
sub
hlt
jp
push
fcomi
arpl
jp
shrb
mov
popa
xchg
jmp
push
xchg
ret
adc
mov
xchg
mov
clc
push
fsts
xchg
inc
push
jge
icebp
aas
mov
dec
push
call
cld
mov
adc
inc
cmp
jne
inc
cmp
daa
or
push
bound
and
dec
adc
push
sbb
pop
push
push
adc
adc
and
inc
jmp
in
cltd
pop
mov
inc
pop
or
outsb
adc
inc
inc
cmp
xchg
pushf
cld
add
lods
out
sahf
out
add
sbb
cs
fwait
dec
adc
cmp
lret
add
addr16
adc
mov
xor
xchg
sub
roll
mov
mov
cs
and
cld
or
pop
adc
cmp
cmp
addr16
in
jge
lock
mov
aad
mov
pop
jg
cmp
ret
mov
shl
sar
fiadds
or
dec
leave
sbb
and
rolb
cmp
mov
mov
shl
rol
inc
inc
and
fwait
jmp
or
jne
sbb
imul
jg
adcb
in
push
das
sbb
jle
and
add
xchg
movl
add
ss
prefetch
inc
mov
outsb
call
rclb
adc
lcall
xchg
and
out
testb
dec
loopne
jne
orl
mov
sub
mov
pop
fsubrs
hlt
daa
adc
xchg
lock
push
push
cltd
xchg
inc
adc
aad
pop
icebp
mov
mov
loopne
pop
repnz
xor
push
add
stc
or
imul
adc
inc
push
into
lea
stos
mov
jmp
shrl
mov
cmp
dec
or
dec
or
adc
add
push
sbb
jo
or
jns
js
das
js
cmp
dec
push
mulb
inc
add
loopne
jne
idivb
push
loop
rclb
xchg
cs
mov
sarl
jmp
movsl
push
mov
add
dec
add
or
pop
jb
jmp
mov
xor
xlat
lods
inc
enter
add
push
inc
or
fadds
testb
scas
mov
jg
pop
sbb
loopne
rcrb
icebp
adc
or
jae
or
and
scas
dec
adc
and
jl
mov
jmp
adc
fidivs
sub
outsl
loopne
push
jno
int3
pop
mov
popa
cmc
push
mov
insl
or
sub
or
ficomps
push
punpcklbw
ljmp
shrl
loope
aam
fwait
adc
sub
fdivrs
xchg
aad
push
movsb
js
daa
addr16
int3
xor
ret
adc
lock
or
fsubrs
jb
push
pop
jge
and
jle
rorl
in
mov
push
dec
and
sbb
jnp
cwtl
daa
movsb
mov
pusha
fsubl
clc
pusha
push
cmc
test
push
dec
jmp
xor
sub
sbb
sub
dec
jb
scas
dec
xchg
sarb
mov
dec
outsb
mov
push
sub
cmp
sbb
add
lock
sbb
mov
imul
mov
mov
stc
and
inc
dec
pop
les
jo
outsl
popa
mov
sub
push
cmp
jb
out
push
dec
jne
sbb
in
sbb
ss
sub
xlat
test
sub
ljmp
inc
loopne
push
cmpsb
fsubl
or
jmp
push
pop
dec
or
pop
or
dec
pop
sbb
sub
adc
in
repz
je
xlat
sti
out
cmp
shr
hlt
jecxz
sub
cs
flds
push
pop
sbb
add
testl
cmpsb
lcall
lret
jg
mov
loop
sub
push
or
shll
fistpl
or
js
stc
and
je
hlt
mov
out
xchg
sbb
les
lock
jle
inc
xor
sbb
adc
ds
shl
or
push
jle
or
lds
pusha
in
je
inc
mov
cli
pushf
push
aas
mov
pop
push
jmp
inc
mulb
adc
add
cmp
addl
push
cmp
xchg
push
loop
mov
clc
ret
jmp
inc
fadds
and
test
loope
adc
or
or
add
add
ret
pop
jno
dec
push
adc
sbb
cmpsb
xchg
inc
or
je
xlat
mov
pop
xor
pusha
adc
lds
cmpb
push
xchg
lea
outsb
pop
lcall
dec
pop
imul
adc
mov
jne
mov
push
ljmp
mov
sbb
je
inc
fmull
ret
push
jbe
js
call
or
fcom
or
pusha
fwait
mov
push
jns
xchg
inc
mov
adc
sarl
and
pop
lahf
pop
aas
aad
mov
stos
jmp
and
lret
pop
stc
adc
dec
or
test
in
adc
hlt
pop
fsubl
dec
sti
pop
push
inc
pop
test
arpl
enter
push
popa
ret
inc
or
jbe
mov
cmp
pop
testb
jecxz
ljmp
add
fcoml
mov
or
mov
jo
xor
and
mov
bound
and
jbe
and
push
popa
mov
xchg
sti
pop
pushf
adc
sub
and
xchg
add
or
mov
adc
inc
or
enter
push
hlt
jg
adc
pop
in
jnp
jl
xor
and
bound
push
ljmp
push
adc
imul
jo
push
pop
add
add
enter
daa
add
or
cmpb
rorl
les
and
imul
add
flds
xchg
add
pop
add
cmp
push
push
xchg
pop
cmpsb
repnz
push
pop
jb
or
cmp
or
or
pop
enter
sub
xor
cmp
pop
or
add
xchg
pop
enter
or
add
inc
or
push
nop
push
ja
push
cmovp
inc
push
adc
xor
ficomps
pusha
adc
push
fcoms
inc
or
ds
mov
adc
pop
lcall
adc
xchg
add
lcall
xor
js
push
push
and
enter
pop
fisubs
sbb
lcall
sbb
cmpb
call
jb
jb
sbb
sbb
dec
in
add
je
pop
sbb
cmp
push
and
cmp
andb
add
push
pop
pop
movsb
push
ljmp
lret
cmp
lret
sub
test
iret
cmp
xchg
dec
fwait
dec
and
and
popa
and
sbb
push
xchg
out
std
in
push
in
jno
repnz
sub
rol
enter
lea
aad
cmp
add
cmp
mov
cmp
fwait
out
push
push
lock
add
mov
aaa
jb
je
call
and
popf
dec
cwtl
jmp
add
mov
ljmp
sbb
out
in
cmp
xorl
cltd
mov
mov
out
xor
cmp
jge
lcall
lock
push
nop
inc
lock
addr16
jns
pslld
seto
out
std
repz
cmpsb
repnz
std
hlt
hlt
roll
fdivs
or
fwait
mov
jnp
inc
jg
idivb
sbb
pop
idivl
dec
push
jns
cmp
clc
clc
mov
cltd
adc
inc
stc
enter
lock
cli
cli
and
and
iret
sti
sbb
fcoml
cld
cld
cld
je
cld
mov
mov
push
psubusb
cltd
xchg
testl
adc
jmp
inc
or
in
pop
dec
sbb
xor
in
stos
cmpsl
les
movsb
or
shll
ret
adc
jecxz
jecxz
inc
fsubp
add
sti
in
in
pop
adc
mov
stc
daa
xchg
sti
mov
or
out
out
cltd
push
jno
sbb
call
xchg
mov
or
jmp
jmp
jmp
sbbb
in
repnz
push
cmp
cli
out
out
scas
xchg
add
out
cltd
push
lock
cli
push
cli
dec
in
rcrl
psubusb
repz
sar
jb
pop
push
stc
jb
imul
fstpl
pusha
pop
xchg
cmpsb
div
negl
fwait
cmp
sbb
xor
add
stc
xor
xchg
out
clc
cmp
lret
sti
sti
and
sbbb
in
mov
or
xchg
pusha
sbb
jge
dec
and
adc
cld
sub
xor
pusha
loop
mov
repnz
mul
pop
shl
les
jg
push
push
cmp
out
imul
cltd
out
mov
inc
repnz
mull
testl
imul
ljmp
negb
mov
adc
mov
insb
out
out
lret
and
sub
inc
imulb
xchg
inc
pop
pop
and
add
lret
and
pop
pop
lcall
mov
cmc
inc
pop
dec
pop
jae
pop
dec
repz
div
jns
push
mov
add
add
int3
inc
clc
clc
jecxz
in
adc
popa
cmp
sub
cli
cli
jno
inc
pop
lret
xchg
hlt
pop
jne
and
sbb
das
pushw
data16
hlt
cmp
idivl
jo
sti
pop
push
or
xor
mov
loope
loope
gs
push
loop
leave
mov
adc
jb
popa
test
adc
xchg
in
inc
repz
leave
and
in
rcll
outsb
sub
jmp
adc
mov
xchg
repnz
leave
jo
sbb
int
in
cmc
mov
add
xorl
leave
loope
sbb
movsl
mov
jo
mov
add
les
cmp
sub
cmc
cmc
in
jb
cmc
add
jecxz
xchg
pushf
mov
imul
lock
stc
dec
push
jno
cmc
jne
dec
pop
je
push
lock
mov
inc
add
push
lock
mov
and
test
ss
push
mov
enter
add
sub
out
ret
aam
mov
push
add
sahf
xchg
add
add
push
mov
cmp
fwait
adc
loop
jnp
add
adc
or
adc
add
sahf
or
and
dec
add
or
int
test
insb
mov
add
hlt
push
push
add
and
ss
dec
fildl
sbb
cmpsl
fldcw
loope
add
int
repz
jae
xlat
adc
xor
sbb
sbb
sub
mov
pop
sarb
iret
repz
or
ss
les
roll
and
ror
in
inc
orb
out
add
inc
icebp
or
jle
rolb
push
xor
pop
add
add
mov
cld
jb
test
mov
cmp
insb
int
lods
ret
lret
ds
adc
dec
pusha
jb
std
cld
stc
loopne
and
gs
push
adc
add
mov
sub
clc
or
fmuls
jg
cmp
bound
cld
test
and
mov
push
aaa
stc
das
jmp
je
push
add
dec
push
adc
in
cmp
les
inc
decl
push
fdivs
inc
arpl
fmuls
push
fldt
and
add
jl
cmp
adc
cld
clc
and
or
xchg
sbb
repnz
add
and
mov
mov
or
cmp
dec
aam
inc
cmp
push
inc
clc
pop
in
push
cmpl
xchg
push
mov
pop
movsb
cld
xor
flds
push
xchg
cmpb
mov
or
mov
loope
pop
or
add
or
idivb
loopne
push
rep
mov
dec
ljmp
frstor
cmpb
push
sbb
pop
ljmp
xlat
mov
aaa
xchg
pusha
xor
lret
add
adc
and
adc
sahf
in
push
dec
aad
mov
pop
nop
fdivrp
add
add
pop
inc
mov
push
lods
insl
push
xchg
int
sub
adc
cmp
jb
pop
inc
lcall
and
sub
inc
inc
pusha
cmpl
enter
jbe
gs
xorl
inc
loop
out
gs
adc
cmpsb
and
push
push
gs
orb
jne,pn
cmpsb
and
sahf
or
and
cwtl
repnz
je
add
push
pop
roll
sub
mov
mov
inc
inc
pop
cmp
enter
add
xchg
add
ret
incb
std
adc
xor
jecxz
shlb
xor
inc
dec
pop
xchg
and
nop
lock
sbb
outsb
neg
pop
xchg
add
and
lods
push
mov
sub
lods
push
and
push
aam
cmc
pop
into
test
push
mov
mov
add
lcall
lea
cmp
jne
out
cmc
push
orl
add
sub
es
xchg
into
aas
adc
jg
push
or
xor
outsl
lret
dec
cld
jmp
mov
push
stc
scas
xor
or
and
out
outsb
xchg
adc
insb
adc
pop
jne
dec
add
or
lds
aaa
add
lret
or
neg
mov
nop
hlt
and
lret
cld
xor
sbb
std
jg
pusha
fidivs
lret
sub
cmp
adc
xlat
loopne
jmp
cmp
jae
push
and
jb
movsb
dec
and
test
mov
mov
and
add
or
pop
imul
pusha
adc
mov
or
test
cmp
add
xchg
ja
lret
jbe
cmc
dec
mov
inc
mulb
insb
inc
clc
xchg
mov
sub
js
mov
pop
ss
das
in
pusha
push
pop
test
mulb
inc
xor
push
adcl
dec
inc
inc
xchg
cmp
push
int
stc
add
sbb
aaa
cmp
dec
sub
or
aas
lods
or
sar
cld
fisttpl
sbb
ret
sub
sti
out
lea
rol
pop
mov
pop
add
rorb
cmp
jne
mov
push
cmp
jne
fwait
jns
fwait
es
jne
call
ljmp
hlt
cs
lahf
testl
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
push
dec
iret
or
sub
test
mov
push
pop
pop
mov
inc
inc
int3
ret
mov
or
lods
mov
mov
sub
int
shll
lods
adc
test
lret
or
adc
xlat
add
leave
jns
ret
das
cmp
adc
inc
loope
and
lea
xor
lods
std
or
xor
or
push
adc
adc
addl
dec
rorl
xor
insl
cmp
xchg
leave
dec
adc
iret
xor
add
or
push
jg
and
push
fimull
push
push
add
repz
mov
shl
and
in
xchg
adc
stos
data16
inc
push
stc
aad
hlt
subb
push
adc
rcrl
ss
adc
mov
or
mov
push
jmp
xlat
mov
push
adc
ja
add
jmp
mov
lcall
sbb
imulb
ds
ja
add
add
sbb
add
mov
xor
jno
dec
cmp
lea
mov
mov
add
testb
pop
adc
jb
hlt
jae
and
mov
lret
clc
push
sbb
icebp
enter
test
mov
lcall
stc
imul
stos
add
testb
push
adc
fstpl
mov
test
repnz
fimuls
dec
jne
mov
aas
popf
mov
fdivrl
inc
adc
ds
clc
mov
inc
push
iret
aam
sbb
shrb
mov
or
jo
add
lahf
xor
inc
ljmp
add
push
sub
inc
pop
or
faddl
mov
pop
push
pop
and
xor
mov
dec
pop
pop
scas
push
pop
test
out
xor
push
mov
stc
or
rep
jmp
rolb
outsb
mov
insb
out
dec
loopne
enter
sub
jnp
cmpsl
push
dec
fsubs
add
sub
and
outsb
adc
inc
add
add
adc
int3
xchg
testb
movl
cmpsb
inc
add
or
mov
sahf
out
push
mov
cmp
decl
inc
in
call
iret
in
lock
hlt
clc
lcall
lea
add
add
fldcw
loop
cmp
in
and
mov
int
nop
nop
inc
pop
sti
and
or
roll
push
xchg
sub
lea
jl
cld
or
lret
or
push
xor
fsts
cmp
fisubrs
push
das
pop
nop
fs
mov
mov
xor
out
add
sub
push
jbe
in
out
push
add
adc
dec
addr16
add
adc
mov
mov
repz
jnp
or
adc
and
cmp
mov
xor
xor
sbb
sbb
cmp
repz
adc
iret
repz
or
or
add
ficomps
or
js
mov
xor
push
add
pop
mov
daa
xchg
addb
dec
das
les
mov
xor
mov
mov
std
std
pop
incl
inc
decl
jne,pn
pop
pop
jae
pop
jne
mov
push
cld
cmp
mov
cmpl
aaa
jbe
push
cltd
pop
idiv
add
mov
pusha
or
ret
repnz
dec
pusha
ja
cmp
dec
mov
mov
xor
dec
enter
out
bnd
cmp
jae
dec
lods
inc
push
sbb
mov
jae
jp
out
mov
jbe
mov
dec
add
dec
pop
fs
xorb
and
mov
outsb
pop
cmp
enter
mov
push
stos
mov
cwtl
pop
call
in
mov
dec
or
sbb
dec
dec
je
push
push
dec
inc
and
lcall
jl
insb
dec
repz
jmp
push
and
negl
or
int
or
push
mov
out
sarb
adc
cmp
sub
in
das
sbb
add
rolb
and
cld
gs
push
pop
filds
test
adc
add
adc
xor
imul
adc
fimull
and
mov
stos
xor
dec
imul
jmp
cmp
sub
sub
sub
clc
push
idivl
jge
push
clc
add
pop
idiv
jle
push
xchg
inc
out
fdivl
fistpll
and
adc
xchg
fisubrl
or
addr16
cmp
push
pop
inc
lock
sbb
mov
adc
fs
jmp
jl
mov
sub
adc
sub
push
or
je
insb
sub
dec
ret
pop
jecxz
repnz
sbb
add
dec
aam
adc
sbb
pop
sbb
push
insl
incb
inc
jns
adc
cmp
mov
sub
incl
pop
sti
mov
and
pop
sub
xchg
cmp
rolb
out
shl
and
jl
clc
ret
jae
cmp
movsb
loop
cld
add
and
dec
sub
int3
xchg
push
cmp
mov
jge
pop
je
sbb
jle
nop
cmp
jle
sti
fucomi
xchg
adc
outsl
out
sbb
int
int3
dec
jo
or
pop
je
dec
inc
xlat
sti
dec
jbe
rorl
call
inc
mov
push
loop
lcall
pop
popl
fstl
or
and
push
aam
or
sbb
andl
push
je
mov
pop
add
pop
repz
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
sub
mov
push
imul
inc
insb
sbbb
loop
sub
push
je
mov
or
push
push
movsb
xchg
ja
push
mov
sub
and
stos
mov
sub
loop
lock
push
ljmp
imul
add
push
mov
and
adc
sahf
idivl
out
call
add
mov
push
sbb
scas
jnp
jge
mov
push
fcmovb
in
int3
dec
ljmp
cmp
ret
xchg
rorb
adc
pop
jg
push
pop
imul
xor
fcomp
addb
hlt
dec
or
pop
fidivrl
mov
adc
mov
adc
mov
jge
test
sub
push
inc
jg
mov
and
les
or
sbb
mov
pushf
fimull
clc
mov
inc
inc
cmp
je
xchg
mov
mov
sbb
imul
add
jle
fisubrl
je
and
mov
or
mov
xchg
fistps
dec
xor
cs
aaa
inc
pop
mov
incl
ljmp
inc
insl
sahf
pusha
push
mov
push
inc
sbb
add
sbb
jo
inc
es
lret
fidivrs
mov
lods
mov
sub
bound
and
pop
pop
xchg
or
xchg
dec
push
shlb
jp
xor
movl
or
dec
std
pop
dec
mov
addr16
test
adc
push
out
pop
test
cmp
cmp
je
mov
inc
sarl
or
shll
sti
inc
or
xor
shll
pop
push
pop
cmp
mov
int
fs
imulb
add
sbb
cmpsl
frstor
sbb
dec
movsb
jb
mov
push
pop
jns
jns
mov
lret
mov
mov
imul
xchg
push
adc
ror
add
shll
mov
mov
jne
enter
jmp
dec
or
les
stc
cmpb
jmp
pop
test
mov
ljmp
loop
cmc
and
inc
mov
shl
xor
sbb
clc
and
enter
xchg
in
es
sub
mov
lods
test
ret
adc
out
sbb
xor
icebp
add
sbb
jp
lahf
jge
cmp
dec
outsb
jns
and
add
push
enter
mov
cmp
mov
pop
mov
or
or
sub
mov
imul
mov
je
inc
or
inc
jmp
or
test
ror
pop
mov
jge
mov
or
out
sub
movl
stos
call
lcall
xchg
cmp
pop
test
xor
aas
pop
sub
pop
push
mov
test
inc
enter
decb
leave
leave
pop
enter
add
add
and
pop
jp
aad
pusha
leave
imull
pop
xor
mov
mov
adc
or
sub
add
fs
movsl
test
aas
and
pop
mov
and
sub
les
pop
jne
js
rclb
fchs
lods
mov
stc
push
jle
add
mov
add
mov
insl
ds
jmp
pop
arpl
push
data16
rcr
xchg
fs
jp
ret
or
add
ss
mov
xor
mov
je
clc
outsb
xchg
cmp
pop
fstl
movsb
cld
adc
jno
test
loopne
cmp
shll
in
inc
inc
loopne
sub
into
dec
sahf
push
cmp
push
outsb
jbe
inc
or
js
adc
add
adcl
push
and
pop
jo,pt
rcr
loopne
push
addl
cs
and
xor
dec
shll
or
sbb
loope
xor
and
sub
jecxz
ret
gs
clc
imul
call
sahf
enter
fwait
lds
or
shlb
xchg
add
aam
xor
sub
push
aam
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
push
into
inc
adc
inc
and
movsl
mov
enter
push
dec
sbb
pusha
js
xchg
adc
adc
inc
inc
js
or
popa
jbe
sub
push
add
pop
and
pop
sub
pop
jmp
mov
fidivrl
cltd
data16
or
push
loope
sub
sub
jne
stos
imul
cmpsl
xchg
pop
mov
cmp
cmp
or
adc
addb
outsl
jno
nop
inc
mov
sbb
ja
outsl
jmp
jbe,pn
cmpl
js
mov
or
or
fildl
hlt
sbb
lahf
add
or
insb
pop
push
jle
repnz
inc
xchg
outsl
sub
jo
dec
cmpsb
jg
push
add
jne
pop
and
ficompl
icebp
imul
popf
scas
rcl
cmp
mov
inc
jmp
rcrb
shll
mov
add
inc
mov
out
sub
call
xor
pop
sbb
sbb
push
ds
sub
push
fs
inc
xchg
sub
adc
adc
test
and
sbb
inc
lods
dec
rolb
subl
mov
push
xor
aas
icebp
sub
lret
dec
shll
es
xor
ret
inc
aaa
adc
test
adc
lret
dec
rcrb
and
rclb
incb
cltd
clc
mov
push
into
dec
jo
push
sub
loopne
imul
dec
cli
or
js
ja
add
jmp
cmp
pop
test
rcl
xchg
jbe
pop
cmp
jb
add
add
pop
dec
lahf
mov
dec
mov
mov
dec
dec
mov
inc
orb
ret
cmpsb
jo
jmp
inc
jne
fmull
or
add
dec
cld
or
outsb
dec
shlb
push
cmp
test
xor
push
or
or
sbb
xor
pop
adc
icebp
mov
cmp
cmp
data16
lret
sbb
ljmp
aaa
or
jg
add
mov
shr
or
adc
xor
addl
or
dec
pop
insl
loopne
hlt
inc
fs
test
das
adc
or
add
repz
pop
mov
cmpsl
pop
jle
xchg
cwtl
add
add
daa
and
aam
pop
add
js
movsb
xchg
or
xor
cmp
fdivl
pop
ljmp
movsb
xor
addr16
sub
daa
sub
nop
or
push
dec
xor
adc
pop
dec
cmp
xor
or
loope
test
movl
xor
cs
stos
inc
push
dec
add
shlb
mov
add
mov
std
mov
icebp
lea
push
adc
push
pop
dec
ss
xchg
mov
mov
push
jo
add
enter
pop
test
mov
or
mov
or
gs
push
xor
add
test
xor
xchg
jne
or
test
add
and
add
adc
or
mov
cmp
mov
mov
inc
lahf
movsl
mov
addl
fimull
shlb
sbb
ss
das
daa
jne
cmpsb
jo
in
dec
mov
cwtl
or
mov
xchg
rcl
mov
add
pushf
push
add
mov
flds
cmpsb
or
add
pop
add
fists
add
fldl
pusha
or
jns
mov
pop
lret
add
and
out
or
mov
fstl
and
rcrb
loopne
add
bound
sbb
mov
test
call
loopne
mov
pop
loopne
mov
out
shr
pop
imul
lock
loope
sub
push
add
pop
push
mov
push
adc
xchg
xor
fsubrl
jnp
jl
je
add
xchg
add
xor
push
dec
or
mov
or
pop
pushf
testb
push
fs
or
push
call
pop
inc
repnz
sti
sbbb
add
or
xchg
sbb
popa
xchg
pop
sbb
mov
add
add
inc
jg
pop
fdivs
lock
ds
das
and
cltd
and
and
add
mov
rolb
addl
lock
and
push
pop
mov
mov
push
adcl
xor
or
mov
cmp
mov
sub
inc
loopne
and
loop
mov
push
or
push
pop
fsubrp
lods
lret
test
lret
ret
sub
pop
pop
fstps
xor
stc
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
jne
lcall
mov
adc
loopne
movl
cmp
imul
cmp
enter
imul
insl
pusha
mov
orb
arpl
nop
jno
sbb
loope
je
inc
loopne
call
sbbb
or
mov
fwait
int3
push
aaa
pop
dec
sub
mov
pop
pop
or
xor
adc
or
push
or
je
adc
clc
ror
dec
mov
bound
movb
cmc
push
adc
adc
out
rclb
add
sub
inc
ror
xlat
add
testl
or
addl
add
call
jbe
call
outsl
sbb
shr
test
test
mov
movb
popf
out
mov
cmpsb
sbb
imulb
ja
sub
pusha
xchg
or
aas
push
push
addl
je
mov
sbb
fdivr
ficoml
push
push
inc
adc
mov
mov
mov
push
push
cs
inc
inc
cld
sbb
dec
and
clc
das
inc
ror
push
orb
mov
jmp
and
je
and
xor
sti
nop
mov
getsec
clc
adc
aad
jmp
mov
cmpl
leave
sub
adc
or
rorl
loopne
shlb
cli
or
push
icebp
test
ret
jae
ljmp
jmp
add
cmp
shrl
ret
xlat
mov
vmulss
clc
mov
jg
pop
pop
mov
push
aam
add
rcl
or
sbb
or
lods
add
dec
int3
dec
clc
adc
cmp
xchg
mov
pop
xchg
pusha
mov
pop
xchg
cmp
insb
push
cld
pop
cmp
cs
xchg
cs
movsb
mov
push
lods
sbbb
dec
lret
cmpsb
add
cmp
in
in
cmp
dec
sti
or
jne
fsubr
fldt
aam
add
les
adc
les
inc
cli
stc
cmp
push
mov
jnp
push
int
and
fadds
mov
and
dec
inc
sbb
jp
xor
or
dec
arpl
jmp
fs
movl
push
cli
stos
jae
and
xor
inc
sbb
or
inc
scas
inc
rolb
stos
add
xchg
mov
cmp
jbe
dec
insl
in
lea
mov
push
or
out
xor
lea
inc
ljmp
push
in
leave
and
mov
jmp
loopne
adcb
cmp
sbb
and
pop
sub
xor
outsb
incl
sti
xchg
jbe
loopne
xorb
xor
cmp
mov
or
adc
mov
inc
mov
inc
inc
inc
pop
hlt
loopne
dec
jne
mov
inc
cmp
ds
add
cli
ds
decl
jno
push
mov
adc
jne
mov
movsb
mov
xor
mov
add
gs
scas
dec
adcb
test
xor
dec
mov
inc
add
xor
call
lds
mov
faddp
adc
mov
aam
and
ljmp
loopne
fnstcw
inc
sbb
jb
sarb
enter
test
lcall
mov
into
cmp
inc
push
ss
adc
sahf
xchg
mov
add
ljmp
repnz
add
fs
ret
pop
or
insb
pop
loopne
rcrb
adc
mov
inc
pop
sub
jmp
xor
mov
sbb
mov
inc
xor
add
sbb
ss
mul
mov
arpl
xchg
stos
push
out
and
es
inc
sub
xor
or
imul
stos
add
add
mov
pop
cmp
cld
leave
pop
movl
jnp
sbb
lret
cmp
test
push
add
dec
jmp
pop
sbb
cltd
pop
out
pushl
inc
mov
pushf
cltd
sub
sbb
notl
sbb
or
int3
call
int3
xchg
push
rcrb
insb
inc
imul
aam
dec
mov
js
mov
loopne
cwtl
sub
inc
lret
aaa
out
rep
xchg
cmpl
jg
push
clc
xchg
sbb
adc
pop
cmp
bound
mov
sahf
inc
add
and
dec
or
sbb
push
xor
aaa
orl
inc
mov
mov
push
rorb
outsl
aaa
cmpl
cmp
pop
ret
jo
mov
movsl
sub
mov
orl
sub
insl
xor
adc
imul
sub
inc
lret
hlt
sub
sbb
inc
mov
cmp
pop
clc
incb
pop
jbe
push
or
jb
lock
lcall
jo
loope
arpl
add
adc
jb
xor
not
sub
lcall
cmpsl
ficomps
in
inc
ret
push
jbe
pop
mov
mov
mov
dec
and
or
push
cmp
rol
cmp
lods
testb
mov
and
mov
or
jns,pn
push
add
add
cld
lods
mov
lret
fidivrs
xchg
mov
jmp
repz
add
add
inc
imul
push
push
mov
mov
inc
aas
push
inc
push
loop
jmp
add
dec
adc
push
adc
roll
mov
jb
cwtl
and
sbb
pop
xchg
lret
inc
bound
outsl
insb
push
cld
push
jo
shrb
or
inc
mov
mov
sbb
or
inc
loop
in
add
cmpsb
insb
test
movl
mov
fnstcw
inc
sub
push
outsl
mov
dec
mov
push
sub
pushf
inc
add
aas
ret
dec
push
mov
fsubl
push
movsb
inc
shlb
xchg
pop
add
jne
or
dec
add
repz
andb
or
xor
rol
mov
pop
hlt
iret
orb
sub
ret
repz
cs
clc
inc
and
push
in
pop
sbb
cmp
push
in
inc
inc
arpl
pmulhuw
cmp
orl
ret
fs
ud0
push
inc
nop
push
mov
inc
mov
aad
insb
and
pop
cmp
adc
test
les
mov
lods
insl
lods
ret
jg
jge
mov
lds
addl
xor
mov
pushf
shll
mov
outsl
jle
pushf
cwtl
xchg
pushf
dec
popf
into
mov
mov
into
dec
xchg
es
adc
andb
add
jno,pt
push
rcll
int3
dec
ja
mov
pusha
sub
xor
mov
mov
out
mov
dec
push
cwtl
mov
es
je
mov
mov
push
sbb
mov
xor
dec
inc
ja
add
dec
rclb
xchg
fisubs
add
movsb
jp
inc
rorb
jns
add
mov
adc
sbb
mov
pop
sbb
mov
sbb
push
xor
jle
sub
xchg
xchg
xchg
xchg
loopne
fcoml
xchg
fistps
data16
popf
lahf
xchg
xchg
xchg
enter
shrb
mov
lea
rcl
jbe
ss
dec
cld
adc
cmp
ljmp
adc
cmc
xchg
mov
cmp
fcomps
adc
sub
movsb
push
mov
call
notb
js
jmp
jge
jecxz
adc
dec
push
jae
es
mov
sbb
xchg
add
insb
or
xchg
mov
es
mov
add
and
mov
pop
fs
imul
js
je
clc
pop
mov
adc
fbstp
pop
and
xchg
repz
push
inc
cmp
sub
sbb
add
jl
mov
pop
pop
jb
cmp
add
pop
add
test
mov
push
cmp
pusha
pop
pop
repnz
inc
add
pop
faddp
insl
adc
les
jns
aam
in
pop
sbb
inc
popa
pop
inc
adc
out
adc
sbb
sub
pop
fs
add
mov
insb
sbb
inc
je
push
push
cs
push
sbb
arpl
test
cmp
pusha
jmp
cmc
js
or
add
sub
lahf
adc
and
loope
mov
and
jne
inc
int
cpuid
cmp
dec
cmp
jge
inc
mov
pop
test
lods
mov
sbb
je
mov
pusha
dec
push
outsb
call
and
loop
adc
or
dec
in
or
lock
jle
ret
adc
jb
lea
pop
add
and
hlt
pop
mov
lods
fdiv
mov
xor
lods
or
daa
adc
hlt
es
xor
pop
and
in
test
testl
xchg
or
icebp
dec
dec
adc
cmpsl
fbstp
adcl
rorb
jl
or
pop
sub
push
jge
jmp
out
mov
and
lods
xor
xchg
add
and
jne
or
push
adc
mov
pop
out
inc
xor
add
adc
inc
test
adc
push
in
dec
push
jno
cmp
or
test
or
inc
xchg
xchg
jecxz
pusha
filds
sti
out
sbb
and
cwtl
outsl
push
repnz
aam
mov
lock
cmp
aam
add
lret
ret
mov
or
shr
jle
test
ja
enter
pop
inc
call
sub
cmp
rorl
push
mov
push
pop
sbb
sbb
push
or
jecxz
jmp
add
mov
push
inc
and
or
add
lock
fdivl
push
adc
sub
int3
loopne
mov
pop
push
int3
hlt
iret
sub
cmp
mov
or
or
inc
sbb
pop
adc
dec
push
add
or
sbb
xchg
fimull
dec
mov
pop
add
jg
lea
inc
cmp
inc
push
cmc
addl
comiss
dec
push
int3
push
inc
imul
dec
inc
push
push
inc
test
sub
xor
dec
or
push
mov
lock
push
lock
dec
inc
and
out
in
add
pop
adc
loop
sub
ret
xchg
fildl
int
pop
mov
mov
or
lock
test
mov
mov
or
jecxz
push
stos
adc
aaa
dec
adc
ss
dec
mov
pop
and
cwtl
push
xchg
scas
xor
mov
adc
jbe
push
xchg
test
inc
shrb
push
fildl
inc
pusha
outsb
pop
inc
ret
mov
aaa
cmp
pop
divl
in
sbb
mov
pop
sbb
lods
loop
ds
mov
dec
xchg
fldcw
push
push
jne
jl
pop
xorl
dec
ljmp
jns
adc
and
pop
add
sar
test
incl
add
inc
inc
jp
mov
rcll
sbb
and
jno
xor
ret
and
ljmp
data16
lock
dec
jmp
ss
or
xchg
movsb
xchg
push
xchg
shrb
sbb
dec
jbe
roll
push
pop
add
nop
inc
fsubrl
lods
cmpl
pop
cmpb
out
push
inc
out
repnz
xchg
test
jecxz
test
sub
or
lret
in
clc
aam
fadd
fdivrs
cs
cmp
mov
mov
arpl
loope
mov
mov
pop
lods
jae
addr16
pusha
imul
movsl
xor
in
or
cmp
xlat
or
inc
sbbb
sub
dec
lcall
mov
lea
ficompl
jl
clc
movsbl
wrmsr
jo
mov
sbb
pop
sar
pop
mov
rorb
add
mov
in
jmp
aam
clc
sbb
lret
or
stos
decb
add
ljmp
sbb
scas
cs
mov
push
pop
add
ret
addr16
orl
or
adc
cmpsl
cmp
mov
adc
cmp
aas
mov
sub
arpl
mov
fbld
lea
ja
movsl
mov
dec
enter
es
out
pop
enter
movsl
hlt
hlt
out
sub
stc
cwtl
je
or
inc
rcrl
out
je
lock
test
outsb
loope
insb
cmp
push
mov
add
sti
loop
in
adc
and
pop
or
enter
add
orb
enter
movsl
jg
jmp
cltd
sbb
or
imul
outsl
cmc
jne
pushf
data16
sbb
pop
xlat
inc
jl
xor
movsb
mov
mov
add
cmp
pop
adc
mov
or
sbb
cmp
cmp
adc
or
add
mov
ret
add
hlt
or
loop
fdivr
stos
push
cmp
dec
nop
and
lahf
mov
jae
into
testl
jbe
xchg
pop
mov
mov
mul
lock
testb
pop
and
in
pop
movsb
sbb
dec
sti
setbe
mov
sub
in
sub
inc
mov
pop
add
push
mov
aad
adc
inc
inc
push
insl
cmp
sbb
xor
test
int3
negl
or
fdiv
push
dec
addl
mov
cmp
movsl
lcall
test
sti
mov
mov
rcr
mov
pushl
mov
int3
dec
fimuls
in
fstps
mov
inc
mov
dec
mov
pop
push
sub
dec
cmp
int3
jecxz
mov
je
adc
cmp
imul
jle
dec
dec
pusha
jmp
mov
xchg
xchg
add
add
into
add
pop
je
inc
addr16
pop
push
outsb
popa
xor
lret
test
mov
out
je
aas
add
and
addb
gs
sbb
lds
xor
mov
add
movsb
mov
cmp
gs
divb
cltd
sub
addb
add
push
add
daa
in
pop
aaa
ret
pop
dec
jne
addr16
mov
jmp
ja
fists
pop
jle
insl
cmpl
incl
or
mov
bound
or
imul
jl
call
cld
adc
sti
adc
mov
sub
clc
arpl
js
inc
mov
test
lea
xlat
cmpsb
and
lcall
adc
call
xlat
dec
sub
addb
push
int
and
push
push
movsb
loop
xchg
push
outsb
mov
nop
jae,pn
addr16
or
mov
call
inc
daa
add
adc
lahf
inc
jcxz
js
pop
data16
xor
enter
push
lret
pop
mov
adc
ret
in
push
popf
inc
fbstp
inc
push
rcll
and
mov
cmpb
cltd
jmp
aaa
int3
mov
insb
jecxz
add
push
pusha
xor
jl
adc
mov
jae
push
mov
sub
neg
jecxz
nop
pop
or
jne
jge
inc
sbb
dec
mul
lahf
cmp
lret
pop
mov
or
jne
and
lods
cmp
lea
or
loope
and
push
inc
mov
and
jmp
insb
add
cmp
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
and
lds
fsubr
stos
aas
je
push
ds
into
addb
jmp
push
dec
shlb
xor
cmpsl
ljmp
loope
or
xchg
inc
inc
in
mov
lods
repz
mov
test
jg
aam
sub
add
sub
clc
data16
sub
push
test
cmpsb
and
mov
cltd
sub
sub
sub
sub
pop
ror
or
jae
push
jp
push
fdivl
dec
fdivrl
lea
sub
out
jns
mov
adc
push
jbe
dec
test
pop
sbbl
jne
pop
pop
xchg
pop
jno
aaa
cmp
faddl
fistps
rcll
dec
sarl
pushf
test
out
lods
add
jg
ret
inc
shlb
lea
xchg
dec
xor
xor
imul
jl
testl
pop
xchg
jo
adc
testl
insl
mov
or
mov
sub
movsb
js
daa
sbb
add
push
iret
dec
add
and
fisubrl
inc
push
hlt
pushw
pop
mov
adc
cmp
imul
cmp
xchg
rolb
add
add
mov
into
xorb
mov
pop
loopne
mov
mov
pop
jg
sub
add
pop
push
cmp
loope
sbb
sbb
cmpsb
test
or
and
rolb
and
lcall
inc
aam
xchg
rcr
daa
push
mov
xchg
xchg
dec
dec
or
fs
rcll
or
mov
fcoml
call
popa
lcall
add
dec
xor
pop
xchg
psraw
xchg
and
movsb
jge
adc
test
push
les
push
xor
cmp
sub
insl
shlb
outsb
push
dec
or
btr
rolb
push
push
cmp
subb
adc
cmpsb
xor
inc
lahf
add
adc
imul
shlb
bound
sub
or
jo
lods
lea
test
cmp
adc
sub
mov
sub
jbe
push
or
adc
enter
pop
xchg
les
sbb
inc
sub
sub
push
rclb
or
cmp
in
ret
enter
cmpb
push
mov
sub
dec
cld
stos
into
cld
shr
mov
imul
mov
add
push
dec
or
adc
push
adc
xor
sbb
sbb
mov
fmull
ret
adc
imul
je
cli
add
cmp
jbe
push
pop
mov
loopne
pop
cmp
jne
subb
jae
cmp
int3
add
shll
pop
mov
ljmp
adc
notl
pushf
mov
inc
or
dec
pop
add
add
sbb
push
or
inc
inc
ret
jmp
inc
lods
mov
add
push
popl
std
pop
shlb
and
sti
add
mov
pop
cmp
enter
imul
jl
and
add
push
lock
cmp
sti
pop
mov
shr
not
and
add
shrl
je
sub
inc
dec
loopne
in
clc
das
mov
xor
jae
rcrl
add
add
mov
les
rcrl
leave
fisubrs
lea
mov
cwtl
testl
jg
adc
dec
pusha
mov
mov
inc
mov
enter
and
dec
mov
or
pop
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
push
mov
dec
jo
outsl
or
in
and
and
xor
es
scas
xlat
inc
repz
push
and
adc
ds
stos
pusha
dec
xor
cli
insb
inc
shl
jnp
paddsb
dec
or
jp
push
call
aas
gs
and
jge
push
or
pop
testl
adc
inc
ljmp
and
xchg
pop
adc
jne
push
push
mov
adc
inc
add
sbb
push
mov
sbb
push
dec
adc
dec
jge
std
sub
jle
cmp
adc
aaa
jo
cmp
mov
inc
inc
mov
cmp
jne
and
mov
dec
cwtl
outsl
push
daa
je
xor
movl
hlt
lea
pop
push
jo
int3
inc
or
push
jae
adc
or
fisubs
push
xor
or
adc
cmp
test
mov
xchg
sbb
or
pop
inc
and
mov
shl
dec
add
je
add
inc
xchg
repnz
ljmp
test
decb
mov
inc
clc
pop
inc
add
lds
jne
or
mov
mov
inc
jns
sbb
popa
addr16
xchg
jo
inc
sbb
ret
mov
shr
inc
mov
dec
clc
incl
nop
cld
divl
mov
or
adc
dec
inc
cld
lock
push
add
sub
sbb
je
pop
or
sar
add
lcallw
xchg
jb
adc
fs
inc
shl
fcoms
mov
inc
mov
lock
imul
lds
scas
and
not
and
les
ret
jne
or
adc
add
imul
sub
pop
shr
add
lret
cld
les
mov
icebp
add
pushf
jle
jo
push
jl
mov
cli
xchg
flds
rorb
add
mov
add
push
ror
push
pop
xor
popf
lcall
sbb
clc
xchg
lret
rolb
es
or
loopne
nop
mov
or
push
jns
mov
or
in
jg
push
shl
movsl
adc
pushf
sar
outsl
push
mov
cs
fstpl
lea
cltd
cmp
xor
jg
cmpsb
imul
dec
in
lcall
add
adc
mov
data16
and
js
test
loopne
test
iret
scas
es
pusha
adc
inc
insb
xor
out
fisubl
data16
mov
inc
and
clc
jl
ret
cmp
push
inc
or
mov
sub
pop
xor
push
sar
dec
mov
and
dec
xor
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
roll
ja
dec
ficoms
add
mov
loope
lea
mov
pop
ret
mov
mov
mov
push
cmp
sub
bswap
mov
push
cmp
rdmsr
sub
jns
dec
sbb
sbbb
sti
jp
subl
mov
mov
ret
lods
pop
cmpl
movsb
ret
inc
cmp
push
push
push
jge
and
adc
shr
adc
loop
subl
lret
adc
or
subb
push
nop
cmp
and
decb
xlat
or
mov
add
adc
rcr
adc
jg
sbb
hlt
jae
fnstenv
push
or
lods
popf
cmp
jae
xor
aaa
mov
lock
push
pop
daa
cmp
inc
insl
cmp
and
cmp
jo
lcall
cmp
je
mov
dec
sbb
and
cld
pusha
and
inc
mov
dec
or
ret
iret
jne
mov
ret
dec
mov
jne
push
cwtl
xchg
nop
lret
aad
jmp
dec
mov
lock
enter
adc
outsb
leave
inc
inc
fdiv
int3
test
inc
push
pushf
mov
sub
test
aad
icebp
sbb
sbb
pop
add
jp
push
xchg
sbb
iret
les
cmp
or
test
mulb
xor
push
sub
jne
in
lock
jmp
adc
sub
dec
mov
inc
pusha
dec
bound
dec
push
and
push
clc
into
xor
inc
test
xor
jp
cmpsl
movsl
call
push
fs
pop
xor
das
inc
fsubrs
cmp
add
cmc
push
or
dec
sarl
lock
or
inc
or
dec
or
push
mov
rclb
adc
push
jge
mov
call
stos
or
and
lods
jo
aam
test
lea
ds
sbb
into
push
pop
add
lods
ds
subl
roll
leave
xchg
repnz
sbb
iret
cmp
loopne
sbb
or
out
or
xorl
pop
add
jp
and
xor
inc
sbb
adc
loopne
ret
clc
dec
test
sti
sub
lahf
aam
icebp
push
xor
adc
jbe
or
jb
jnp
test
dec
push
and
loope
adc
add
fdivrp
movb
xor
mov
add
sub
scas
orl
xchg
js,pt
pop
inc
inc
cmp
cmp
sub
xchg
cmp
add
push
mov
jmp
push
pop
sbb
test
repnz
and
or
mov
mov
push
push
int3
stc
adc
or
ficompl
and
inc
xchg
inc
fistpll
and
push
dec
xor
cmp
insb
sti
pop
enter
pop
fadds
mov
lahf
pushl
adcl
dec
insl
push
divl
lock
xor
push
sbb
adc
mov
std
pop
insl
sbb
xor
add
xlat
aaa
icebp
xor
push
push
mov
mov
push
or
pop
inc
fbld
jecxz
jle
jmp
pop
jl
movsb
dec
mov
add
and
outsl
sub
pop
jg
iret
or
test
inc
or
adc
dec
adc
outsl
push
add
out
xor
or
lock
jmp
mov
gs
inc
inc
or
mov
daa
into
sub
jno
adc
aas
xor
cmp
jg
lods
jns
inc
iret
inc
jae
add
les
jbe
pop
stc
add
push
jo
popf
call
lods
aam
hlt
test
push
es
xor
jecxz
pushf
sbb
jne
mov
jnp
adc
adc
adc
insb
jge
jmp
jl
jb
mov
or
int3
test
repnz
in
je
cmp
jmp
mov
out
nop
pop
rorl
subb
push
fadd
clc
test
enter
adcb
xor
lcall
mov
aas
add
xchg
mov
xor
movsb
repz
dec
push
sub
in
adc
adc
fsubrs
or
mov
ret
pop
add
mov
xchg
arpl
fsubrl
mov
pop
rol
lea
jb
cmp
leave
jnp
daa
pop
jb
scas
and
xor
repz
loopne
icebp
mov
enter
aas
insb
jne
push
aam
inc
mov
or
pop
and
xor
adc
and
cmp
xor
fistpl
xchg
cmpl
or
call
fs
jmp
int3
addb
mov
xchg
dec
xor
repz
mov
test
shll
lea
and
jne
xchg
add
xchg
inc
cmpsb
sbb
xchg
pop
jns
lock
aaa
fwait
cmpsb
cwtl
orl
xchg
dec
gs
enter
and
mov
inc
inc
push
jns
call
in
jns
jns
and
daa
xchg
neg
lret
adc
cmp
scas
dec
sbbb
outsl
xchg
call
push
pusha
xchg
sbb
and
mov
inc
in
int
add
fimuls
cld
js
stc
push
mov
push
test
cltd
mov
in
in
shr
and
xchg
or
mov
iret
scas
jbe
jecxz
hlt
xchg
xchg
push
lods
push
cmpsb
in
in
lods
inc
mov
rclb
inc
push
call
sub
lods
and
and
ret
push
and
les
xchg
pop
shlb
loopne
loop
in
add
add
les
nop
and
xchg
inc
dec
test
popa
inc
jb
test
fwait
mov
int3
test
jno
pop
mov
mov
pop
mov
sysret
lds
or
sbb
imul
cli
xchg
adc
push
mov
lcall
cltd
ret
aas
ss
mov
mov
aad
daa
cmp
out
and
push
or
sbb
sub
push
test
mov
or
push
nop
sub
pop
and
sub
pusha
fstl
out
je
shrl
repnz
xor
mov
jp
lret
or
aam
add
adc
mov
or
scas
and
push
lahf
or
lods
inc
cltd
das
xchg
out
shll
stc
cs
arpl
push
inc
add
pop
xchg
enter
push
scas
mov
pop
shr
subl
push
jg
jecxz
add
mov
cmp
jne
mov
sbb
cmp
and
xchg
sub
inc
lock
sarb
adc
push
lds
xchg
mov
loop
rcl
add
xchg
call
add
mov
push
add
add
out
xor
dec
loopne
push
call
testb
mov
imul
mov
movsb
cld
and
adc
fistpl
add
add
cmp
add
addb
or
call
push
ds
push
add
add
outsb
add
push
adc
das
stos
add
add
loopne
add
dec
xchg
and
not
and
cmp
cmp
sarl
sub
nop
pop
push
sub
inc
imul
stc
cli
test
lcall
ret
cmpsl
enter
dec
pop
dec
test
cld
lret
clc
sarl
adc
cmpsb
inc
lret
je
xor
pop
push
sbb
je
lret
jmp
cmpsl
insl
mov
rcrl
int
mov
mulb
and
add
jno
je
push
xchg
and
cmpsl
mov
dec
enter
xor
mov
pop
loopne
fldl
or
jno
mov
lock
jns
bound
push
or
lret
sti
insl
leave
pop
jmp
jo
push
mov
sub
orb
pop
xor
xchg
dec
sti
je
dec
je
add
and
sbb
push
cltd
xor
lcall
insl
insl
ljmp
cmp
fcmovnu
popf
add
inc
fldcw
imul
jmp
rcrl
cld
insb
cs
sbb
and
jno
mov
push
jns
or
add
pushf
cld
sar
pop
repnz
xorl
adc
or
lret
push
call
imul
lock
push
jl
mov
aaa
jne
das
and
sub
push
repz
lock
cmp
jnp
push
xchg
popf
cmpsb
scas
iret
repz
cmp
sbb
clc
cmp
andl
sahf
loop
mov
arpl
mov
dec
mov
or
push
dec
mov
and
lock
push
or
push
mov
sbb
lods
shlb
xchg
jmp
jnp
mov
jle
and
inc
or
ss
loopne
ja
push
push
xchg
jmp
inc
faddl
ficoml
pushf
or
popa
push
mov
aas
test
fmull
cmp
inc
jp
cmp
push
jne
push
push
sbb
out
jle
testb
ror
add
orb
cmp
adc
push
test
push
mov
and
mov
mov
push
push
shll
inc
adc
inc
xchg
adc
pop
daa
adc
pop
cltd
js
das
aad
or
and
andb
mov
lock
call
push
pop
cmp
mov
lods
std
mov
testb
mov
mov
je
add
clc
inc
pop
shrb
incb
jb
or
pop
je
adc
pop
pop
and
jne
dec
sbb
gs
test
stc
arpl
jg
testb
repnz
cmp
push
clc
add
stc
mov
mov
rorb
loopne
mov
pop
pusha
loopne
xchg
push
out
lds
sar
or
fwait
rorb
adc
sub
shl
sub
in
cmp
fsts
lods
or
adc
mov
int3
rol
jne
xchg
lock
push
inc
dec
inc
aad
dec
push
pop
xchg
dec
scas
or
add
adcl
pushf
sbb
aam
iret
in
movsl
inc
clc
mov
cmp
hlt
ss
or
adc
sub
fs
sbb
and
xchg
mov
insl
mov
push
or
inc
lods
add
lods
or
call
cmp
inc
sub
in
adc
pop
and
ss
cmp
xor
pop
inc
jne
cmp
insb
sub
movsl
or
mov
aad
adc
out
cmp
push
movsl
test
lds
ret
imul
lods
cmp
jo
inc
xchg
mov
push
push
ret
fwait
push
leave
call
repz
sub
call
push
loopne
cltd
cs
sub
lret
cmp
outsb
call
bnd
add
ja
pop
lcall
adc
adc
sti
push
inc
cmp
lea
push
sahf
iret
in
mov
pop
pop
pop
jne
xchg
testl
mulb
jne
xor
cwtl
xchg
cltd
cmp
adc
adc
testl
mov
mov
dec
gs
sbb
neg
cmpl
push
jns
daa
mov
or
lds
cld
cmpsb
push
pop
pop
dec
inc
hlt
or
sbb
in
xchg
pop
mov
ds
pop
mov
loopne
nop
and
xor
cwtl
pop
and
outsb
int3
jp
aam
je
neg
pop
js
test
insb
or
in
jp
mov
pop
jb
jg
std
lea
nop
cmp
test
mov
lret
insl
pop
xor
mov
std
aaa
addr16
xor
out
lock
fdivr
ja
mov
adc
fbstp
out
and
sbb
lods
shr
je
mov
dec
imul
andb
sti
and
call
stc
call
call
cmp
mov
out
in
std
push
mov
lds
call
daa
arpl
insb
in
mov
inc
mov
cmp
nop
std
lds
das
data16
sub
mov
xchg
std
out
imul
mov
push
lods
call
gs
jmp
xor
mov
je
mov
pop
fs
test
mov
xor
jmp
mov
movb
vpmullw
test
push
push
fisttps
test
sbb
adc
into
inc
inc
insb
fwait
jne
adc
repnz
fs
cmp
cmp
adc
dec
and
sbb
call
std
mov
pop
xor
jp
lea
test
push
loopne
into
jp
leave
mov
mov
frstor
push
popa
ficoms
fdivrp
or
ds
cs
push
inc
sbb
hlt
sub
test
jmp
popa
dec
jmp
dec
mov
add
xchg
lret
sar
lock
xor
jmp
or
jmp
int3
sbb
data16
jmp
adc
and
mov
lods
ror
cmp
andl
xchg
push
jle
int
addr16
test
xchg
lea
cwtl
adc
push
jbe
and
inc
sub
jae
cmpl
stos
pushfw
fbstp
bound
sub
cmpsl
insl
mov
movsb
adc
cld
mov
add
js
inc
push
inc
shl
push
lret
jne
cmp
xchg
addr16
cmpsl
mov
hlt
or
pop
mov
dec
mov
jae
push
dec
pop
jno
xchg
nop
lret
je
jb
dec
xchg
dec
std
std
std
jo
jo
loope
ret
adc
sub
pop
add
fsubrl
out
mov
push
and
nop
adc
inc
add
out
cli
xor
xlat
jl
xchg
outsb
ss
daa
loope
jb
sub
mov
dec
mov
mov
shll
adc
sub
aas
xor
aad
pop
leave
and
push
mov
test
mov
sbbb
adcl
sbb
lahf
stos
icebp
pop
adc
adc
subb
cmp
ja
fimull
jns
cmp
mov
or
add
or
pop
rep
dec
sbb
pop
add
xchg
push
popa
mov
jmp
enter
mov
add
lretw
push
rep
aad
cmpsb
pop
add
xor
add
enter
out
test
lcall
movsl
call
xchg
or
mov
xchg
mov
nop
pop
jb
lcall
adc
and
cmp
mov
mov
enter
int3
les
imulb
or
jle
stos
outsb
add
xchg
sub
push
cmp
ja
subl
xchg
cltd
stos
xchg
or
sti
pushf
pop
xchg
pop
push
inc
xchg
lea
lods
test
inc
es
es
sub
lcall
jno
push
cltd
es
pop
test
cltd
es
xor
push
loope
xor
pause
lret
mov
cmc
sbb
lcall
clc
mov
and
pop
pop
and
or
nop
pop
xor
inc
cs
xor
sbb
sbb
imul
xchg
cpuid
stc
xchg
push
mov
xchg
stos
mov
ds
mov
mov
and
cmp
inc
dec
add
aad
cwtl
insl
push
inc
es
pushf
movsb
bound
sbb
dec
push
xor
adc
test
enter
test
test
adc
pop
jb
adc
leave
enter
pushf
and
push
subb
or
add
adc
addr16
inc
dec
cld
inc
dec
pop
je
stc
aaa
push
xor
aaa
mov
aad
mov
mov
imul
repz
jmp
imul
inc
add
icebp
dec
cs
pop
or
cmpsb
or
and
mov
lea
mov
pop
rclb
rorb
mov
fidivs
add
add
ja
or
and
dec
roll
jecxz
inc
sbb
push
aaa
popf
push
mov
outsl
mov
cmp
mov
subb
adc
add
sub
les
xor
or
add
jno
test
sbb
cmp
or
mov
or
data16
ret
cltd
decl
mov
push
inc
js
xor
sar
incb
test
je
mov
xor
bound
ret
ret
add
cmpsl
mov
sbb
adc
dec
out
pop
sub
jne
lea
popa
add
imul
lcall
jne
mov
push
mov
lock
scas
nop
shll
fucomip
stos
bound
mov
cld
jb
and
sbb
cmpsl
in
add
lahf
xchg
jo
imul
cld
mov
cmp
out
mov
jp
mov
sub
push
call
pop
sub
pushf
jp
push
xor
xor
push
dec
mov
inc
jecxz
sbbb
fcmovnb
mov
cltd
dec
sbb
loope
add
lahf
or
add
and
cmp
inc
or
xor
daa
mov
inc
push
inc
sbb
jae
mov
or
jecxz
add
repz
sub
test
adc
jp
add
jne
xor
shll
and
dec
mov
adc
add
inc
dec
jg,pt
insl
insl
and
scas
lds
loopne
dec
pushf
fs
pop
jmp
xchg
sbb
loope
and
cmpsb
pop
jmp
les
aas
and
clc
movb
into
lret
cwtl
ror
stos
daa
cwtl
sbb
sub
xor
fists
adc
push
xor
in
xchg
push
push
push
xchg
movb
sbb
addl
adc
add
movsb
stc
xor
pop
out
jmp
mov
iret
add
add
add
pop
test
and
or
aaa
dec
push
sbb
lock
cli
xor
xor
insl
hlt
nop
xor
pop
punpckldq
rcll
xor
rol
gs
or
mov
push
or
movsb
rcrb
sbb
sbb
sub
or
mov
cmp
test
enter
mov
sub
cltd
test
test
push
fcompl
mov
xchg
popa
sub
stc
xchg
xchg
call
lea
xor
sub
lahf
pop
add
push
mov
cmp
jae
pop
mov
out
push
dec
in
icebp
out
insb
insb
adc
scas
xchg
mov
rclb
ret
mov
ljmp
jb
pop
test
sub
and
dec
xchg
into
outsl
inc
cmp
roll
sbb
xor
sbb
mov
push
pop
jnp
or
test
bound
adc
or
adc
push
cli
sbb
pop
push
push
inc
inc
dec
or
mov
sub
or
sti
jb
inc
clc
fwait
mov
adc
int3
lahf
mov
nop
inc
ret
xchg
or
adc
fdivs
mov
pop
lock
or
and
sub
and
inc
mov
pop
pop
or
sbb
inc
dec
add
pop
jbe
jge
ret
popa
fcmovnb
loop
jmp
pop
mov
dec
fcoms
lea
push
subb
or
ficompl
mov
rclb
xchg
or
dec
rcrl
pop
faddp
icebp
ret
add
sti
add
pop
lods
jo
add
daa
xor
dec
pusha
push
inc
and
inc
movsb
adc
dec
cli
add
mov
ja
insb
or
xlat
jge
imul
rcll
cmp
xor
and
loopne
std
cmp
jl
mov
mov
jle
cmp
ja
sub
sbbl
pop
mov
dec
cmp
xchg
lret
push
test
cmp
sbb
push
cmp
xchg
pop
or
fs
fwait
test
rorl
jmp
leave
push
sbb
mov
ss
inc
mov
dec
mov
jmp
addl
add
pusha
jo
jo
imul
pusha
ret
test
in
hlt
add
pop
sbb
adc
add
adc
dec
and
cmp
rolb
push
lods
and
and
clc
sti
or
test
repz
and
or
pusha
jne
loop
leave
les
cmpsb
test
pusha
pushl
mov
pop
xchg
mov
add
ss
xchg
push
rorb
call
add
adc
dec
je
jmp
mov
push
push
mov
mov
dec
or
xchg
add
pop
xchg
jnp
push
or
fdivrs
push
les
push
in
push
mov
test
adc
adc
add
fimuls
or
fsubs
mov
aam
inc
pusha
mov
jne
sbb
inc
mov
cmp
adc
mov
lret
jge
mov
mov
scas
dec
popa
mov
adc
test
mov
adc
mov
fs
push
dec
jmp
es
js
push
insb
pop
stc
xor
enter
test
and
xor
push
adc
lods
jecxz
push
repz
in
in
pusha
lcall
push
mov
insb
inc
dec
cwtl
mov
cs
inc
pop
addl
push
xor
sbb
push
and
pop
je
mov
inc
in
and
add
sbb
adc
or
popa
cld
fmull
adc
iret
scas
addr16
es
fldpi
or
and
add
ret
shl
push
adc
and
lret
loop
xor
adc
test
xor
and
mov
and
mov
out
jne
cmp
outsb
or
insb
inc
jl
scas
gs
cmpsb
out
cmp
je
cmpsl
sub
jb
adc
faddl
aam
xchg
pop
addr16
decb
or
cld
fmuls
repnz
pop
or
out
mov
std
sbb
cmp
adc
pop
aas
shlb
movsb
pop
xorb
mov
js
and
cmp
inc
pop
mov
or
cmp
ss
decb
loopne
out
push
and
testl
or
adc
cmp
push
outsb
and
or
test
dec
pop
pushf
and
ret
stc
xlat
sbb
sbb
inc
or
fldcw
and
imul
dec
mov
cmp
jbe
push
mov
xchg
push
and
cli
clc
sahf
mov
outsb
dec
adcl
jecxz
push
lret
cmpb
pop
je
scas
jo
add
pop
push
xor
bound
add
add
mov
lcall
daa
inc
add
dec
sbb
sbb
dec
add
push
cs
or
stc
jbe
push
out
push
lds
add
cwtl
or
jle
sbb
jo
dec
cld
mov
inc
push
lock
cmp
push
rorb
mov
push
xor
lock
adc
fs
xor
or
inc
xchg
mov
les
lock
test
jle
outsl
or
xchg
add
lret
loop
xor
pop
ja
cmp
scas
adc
ss
jmp
xor
and
arpl
into
inc
inc
adc
test
incl
test
enter
fildl
inc
pop
je
pop
es
or
pop
ficomps
int
or
test
cwtl
xor
or
aam
sti
xchg
mov
aas
shr
ret
bound
testb
cld
pop
sbb
xchg
cmp
ret
inc
or
xchg
adc
mov
inc
repnz
lock
and
test
jp
into
inc
fimuls
xor
inc
pop
stos
popa
pop
subb
adc
cs
fcmovnb
subl
inc
pop
rorl
mov
lock
push
insb
and
lea
imul
lods
aam
imul
sub
sbb
rolb
jge
ret
test
stos
nop
dec
cli
mov
dec
pop
mov
lret
lods
lea
ss
std
push
mov
sub
push
push
pop
pop
testl
mov
ret
jo
add
xor
pop
rcrl
xor
push
xchg
loop
and
sahf
jb
push
and
jo
xor
int3
aaa
loopne
jne
pop
daa
inc
mov
sbb
dec
jnp
enter
or
jne
repnz
jge
push
sar
jb
sbb
cmpsl
push
hlt
and
inc
sbb
mov
fwait
and
clc
adc
imul
cld
pop
pop
push
shlb
mov
fsubl
sbb
std
ret
jmp
push
inc
addb
rcrl
cmp
insb
into
inc
xchg
sti
or
pusha
cmc
int
pop
adc
sarb
lods
dec
fdivs
xor
xchg
jno
push
insl
pushf
mov
cmc
out
xchg
push
pop
push
dec
push
adc
add
mov
push
inc
or
fwait
outsl
fwait
and
rorb
or
or
sbbl
sbb
cmp
or
mov
in
js
leave
cltd
pusha
mov
mov
andb
sbb
inc
xchg
mov
jl
adc
subb
dec
inc
or
sbb
rorl
add
rcrb
and
lea
lock
andb
test
add
sub
in
mov
sarb
jg
popf
mov
popa
loopne
rol
pop
and
lock
push
push
mov
or
or
or
aam
push
scas
cmp
jo
ret
sar
and
shl
ljmp
push
sahf
add
add
and
jle
and
fmul
lcall
hlt
inc
adcl
xchg
test
xorl
stos
sub
adcb
jb
xchg
subl
push
pop
push
ret
mov
shl
insl
lods
inc
mov
inc
cmp
aas
push
fnstcw
ds
mov
jne
dec
sbb
ss
cmpsl
orb
je
and
movl
jl
mov
loope
pop
notb
and
dec
sub
aad
sub
dec
mov
mull
dec
jp
lock
mov
test
not
mov
push
xlat
addb
push
xor
fwait
leave
pop
lock
rcrb
dec
lock
mov
or
mov
or
call
or
xor
not
push
shll
add
xchg
js
sub
imul
mov
lock
jb
xchg
or
loop
pop
xchg
dec
add
ret
sub
nop
mov
jne
inc
dec
or
adc
shr
insl
int3
xchg
sbb
jg
adc
and
inc
push
pusha
jo
stos
xchg
orl
call
push
sbb
cltd
sub
sub
inc
xor
push
cmp
popa
std
subb
loop
mov
lret
sub
mov
mov
push
and
sbb
addb
or
shlb
dec
fcomip
stos
ss
neg
and
jmp
push
push
lods
dec
push
or
xchg
mov
movsl
mov
imul
inc
jl
leave
lods
in
mov
or
pop
ret
aaa
or
and
data16
popa
push
mov
add
jp
jae
or
movups
push
sarl
cmp
pop
add
add
jmp
xchg
std
add
xchg
push
add
negl
push
ss
cmp
lret
jmp
shlb
mov
dec
inc
push
outsb
movl
pop
sahf
push
scas
repnz
faddp
adc
js
sti
sbb
cmc
mov
ds
jge
sub
cmp
or
in
or
hlt
mov
adc
adc
fnclex
mov
jns
fimuls
adc
jbe
aam
outsl
push
mov
dec
adc
push
and
jne
lahf
out
cmpsl
push
push
pop
outsl
inc
or
jbe
test
jo
outsl
ja
sbb
push
jg
test
sub
hlt
dec
call
ret
mov
jl
lret
sub
jo
loope
mov
ret
stos
ss
test
into
and
call
or
sub
std
mov
push
push
or
dec
sub
ja
push
and
sub
test
pop
rcr
sub
lock
in
lock
rep
add
bound
jne
inc
adc
in
in
mov
and
inc
idivb
or
sbb
mov
sbb
cmp
jle
xor
add
mov
and
das
lret
or
push
sub
push
lods
xor
clc
mov
mov
and
je
cmp
lahf
mov
lret
nop
dec
jmp
pop
and
and
mov
loopne
fwait
cmpsb
imul
loopne
dec
pop
mov
add
push
dec
loopne
pop
cmp
or
add
fcoml
fsubrs
adc
mov
sub
clc
or
cmp
pop
or
cmp
test
das
sbb
jb
ret
test
js
xor
push
push
adc
mov
dec
push
xor
lods
push
jg
mov
in
mov
mov
adc
push
mov
push
adc
xor
add
jmp
mov
mov
loope
and
and
mov
ret
sub
cs
jns
mov
jnp
pop
mov
sbb
aam
sarb
ret
xor
cmp
and
mov
sub
aam
fcomp
and
cltd
fadds
adc
push
add
dec
fimull
mov
hlt
aas
jmp
adc
outsl
jo
dec
in
xchg
and
adc
or
outsb
fldl
imul
notb
push
fmull
popf
dec
popf
adc
mov
dec
push
xor
aam
aam
int3
test
adc
test
jmp
jge
and
sub
clc
pop
pop
imul
fsubs
clc
fisttps
sub
jg
inc
jmp
inc
sbb
pop
sub
cmp
imul
pop
add
cmc
aas
sbb
or
cmp
dec
and
xchg
insb
adc
psubusb
popa
fildl
inc
es
adc
mov
testb
mov
orb
push
xchg
sbb
cwtl
lds
xor
sub
testb
jne
and
out
imul
dec
mov
pop
fadds
or
mov
sub
mov
or
mov
sub
sbb
cmp
cld
or
or
cmp
add
punpckhwd
int
movl
jecxz
movl
mov
add
out
cmp
aas
inc
sub
mov
mov
shll
loope
add
add
pop
or
push
jnp
test
test
or
iret
dec
add
cmp
dec
dec
inc
loopne
adc
sub
andl
dec
and
mov
lods
dec
mov
pop
leave
or
lahf
clc
call
jg
sub
test
add
mov
insl
mov
cmpsb
push
je
pusha
jle
cmp
insl
and
pop
hlt
add
mov
fs
sbb
mov
pop
push
pushl
sbb
icebp
add
pop
dec
mov
xchg
jmp
adc
jmp
jns
sbb
xlat
adc
sahf
xchg
push
in
push
sbb
ret
dec
cmp
pop
addr16
mov
adc
and
in
rcll
jne
inc
sbb
js
data16
movsb
mov
pcmpeqb
dec
pop
arpl
jmp
dec
int3
dec
lcall
add
or
addb
and
cmp
lret
cld
mov
inc
or
lret
or
test
iret
add
clc
dec
pushf
add
push
jl
push
lock
xor
or
add
add
test
add
call
aas
fs
jle
mov
inc
sbb
pushf
sbb
jo
jle
les
add
movlps
or
and
jmp
add
mov
or
sarb
cli
xor
fs
pop
jl
mov
ret
in
push
leave
cwtl
jb
into
pusha
test
or
add
fneni(8087
and
pop
sarl
xchg
cmp
inc
cld
sub
gs
add
mov
inc
jbe
push
push
test
fcomps
lret
inc
imul
mov
sbb
rcl
and
clc
clc
es
or
loop
loope
in
mov
ss
pop
cmp
pop
out
sahf
pop
adc
insb
std
or
cmp
jae
inc
je
mov
add
das
or
js
cmp
shlb
ljmp
rorb
sbb
and
inc
sarb
jo
cmpsl
and
jae
pusha
sbb
das
in
pop
mov
add
add
rolb
outsb
cmc
inc
cmpl
inc
push
pop
cmp
movsl
and
mov
sbb
lods
leave
jl
add
addl
dec
movb
mov
movsb
pop
cmc
cmp
stos
or
test
and
mov
mov
imul
test
and
and
cmp
cwtl
mov
pop
repnz
and
or
sub
push
into
push
push
adc
mov
std
nop
inc
mov
imul
push
pop
je
fstps
cltd
aam
push
push
dec
loopne
pop
cmpl
pop
or
push
push
jmp
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
xchg
les
testb
test
inc
rorb
in
and
push
leave
adc
push
dec
adc
enter
mov
sbb
sbb
sbb
ficoms
push
jae
adc
leave
pop
and
push
leave
mov
adc
pop
and
pop
ja
fcoms
adcb
or
sbb
cmp
inc
xor
xchg
or
out
sbb
jo
add
and
repnz
leave
push
icebp
enter
mov
fildl
fsubl
or
mov
mov
mov
jge
test
mov
filds
aas
sbb
testb
sub
inc
mov
insl
adc
roll
or
or
fwait
adc
dec
add
out
movsl
jb
das
and
mov
pop
push
cmp
jl
ds
mov
inc
or
adc
shl
xor
jbe
or
je
sti
inc
xchg
testb
jne
clc
push
mov
into
shrb
popf
sbb
jb
add
add
ds
lret
cmc
test
and
dec
fildl
leave
mov
pop
mov
mov
mov
shrl
dec
mov
or
mov
ret
imul
jo
les
mov
mov
jne
stos
push
fidivl
mov
xchg
xlat
jns
jne
mov
and
in
shrl
sbb
mov
arpl
pop
adc
adc
loopne,pn
aam
stc
test
pop
and
jecxz
jle
xchg
test
sahf
mov
out
xor
inc
push
pop
test
inc
das
pusha
add
push
subl
out
js
pushf
push
adc
xor
adc
push
jle
add
xchg
and
sbb
mov
push
pop
dec
mov
push
sbb
cmp
jl
hlt
fisttpl
push
push
outsb
fnstcw
aam
push
pusha
add
mov
shll
in
pusha
jbe
add
push
loope
iret
loopne
sbb
dec
in
leave
mov
lcall
call
mov
mov
hlt
xor
aad
fdivl
mov
push
sbb
rolb
rorl
or
sub
leave
std
loopne
pop
and
sbbb
ja
pop
cmp
adc
test
pusha
xor
or
cmp
scas
xchg
bound
sub
and
push
push
mov
or
lock
je
or
out
jbe
pop
andb
sub
mov
push
pop
clc
cmp
cmc
add
adc
adc
push
aaa
imul
push
mov
pop
popf
and
sbb
sbb
decl
shll
testb
mov
jl
testb
les
int
add
add
mov
push
jmp
inc
loope
adc
sbbl
jecxz
ret
jns
jb
cmp
jbe
mov
add
or
cmpsb
adc
mov
in
push
pop
push
mov
push
insb
out
call
out
pop
shlb
ror
adc
shrb
adc
push
push
mov
dec
mov
int3
add
bound
icebp
or
pop
jmp
push
mov
pop
pop
sub
push
or
or
aaa
mov
icebp
or
jne
jnp
or
lock
loope
enter
shr
inc
push
pop
push
push
fldenv
jmp
rcr
or
div
pop
fnsave
out
dec
adc
inc
mul
pop
jb
cmp
or
cmp
idiv
push
jbe
dec
sub
sbb
adc
or
fcmove
ficompl
mov
iret
popf
test
adc
adc
sub
mov
mov
add
pop
or
jne
jmp
pop
enter
orb
pop
imul
test
xor
dec
out
loop
fnstenv
pop
dec
dec
orl
mov
add
add
sahf
andb
jne
lea
mov
push
adc
es
fldlg2
inc
test
test
jecxz
mov
jae
mov
sub
test
orl
imul
jl
incb
in
adc
adc
cmpsl
or
pusha
jo
pop
cmpb
jo
add
dec
sub
push
lea
arpl
xor
sub
inc
cmpsl
fs
sub
dec
pop
and
or
cmp
sbb
subb
mov
es
push
dec
inc
pop
push
icebp
mov
or
adc
xchg
sub
movsb
fcos
sbb
cmpsb
inc
incl
js
add
sub
addl
outsl
je
xchg
cli
adc
adc
lea
lea
or
cmp
xchg
mov
std
mov
dec
insb
inc
in
push
sbb
popl
lods
mov
push
jo
dec
pop
mov
dec
cmp
dec
enter
add
push
lods
add
outsb
or
adc
xchg
loopne
test
xchg
xor
pusha
add
xor
sub
pop
loop
mov
clc
sbb
pop
cli
inc
test
rcrl
ljmp
push
inc
cmp
xor
cmc
or
push
cmpsb
jge
lret
ss
imul
push
adcl
add
inc
arpl
xchg
xchg
mov
mov
or
xchg
xchg
xchg
adc
ss
outsb
sub
dec
dec
dec
dec
xor
cmp
ficoml
inc
pushf
pushf
pushf
fmull
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
fs
testb
adc
mov
nop
xchg
dec
es
fs
pushf
mov
movsb
test
sub
push
dec
lcall
or
cmp
loopne
sub
insl
pop
xor
jle
and
adc
in
imul
sbb
cltd
nop
orb
sbb
and
add
ss
insb
pop
push
lret
repz
add
scas
jg
ret
mov
sbb
loop
js
push
inc
dec
jne
out
imul
xchg
lret
or
push
sbb
aad
add
inc
pop
cmp
add
or
pop
in
add
sub
cmp
adc
xchg
and
cmp
mov
aad
and
jb
sub
adc
clc
mov
scas
loopne
mov
pop
test
mov
repnz
xor
push
add
pop
and
ja
js
add
add
xor
inc
dec
lods
dec
andb
push
dec
push
pop
inc
faddp
mov
insl
push
lea
xchg
dec
inc
das
je
sub
jo
into
cmp
push
sbb
loope
xor
ret
iret
pop
push
fsubr
std
jbe
mov
lea
push
jle
sbb
ret
push
popf
adc
pop
int3
ficompl
rcrl
inc
cwtl
xor
push
addr16
jae
fcompl
add
in
pop
arpl
je
push
pushf
jnp
or
inc
push
dec
and
loopne
add
loope
test
ljmp
addb
push
popf
inc
data16
lret
adc
adc
mov
adc
cmp
test
adc
xchg
cmp
jb
int3
shrb
sbb
les
jne
outsl
pop
fs
adc
add
iret
mov
std
inc
adc
add
jg
and
adc
adcl
dec
cmpsb
dec
ja
fiadds
push
adc
pop
out
loopne
cmp
mov
dec
sbbb
andb
fcoms
divb
into
decl
loopne
adc
fsubrl
sub
pop
cld
lock
push
jb
push
mov
push
push
add
push
das
jmp
enter
lea
insl
xor
into
mov
loope
mov
push
and
cmpl
add
xor
adc
add
xchg
call
xor
stos
mov
out
aas
xchg
push
xchg
sbb
mov
fstps
pop
mov
jg
xor
mov
push
addr16
mov
xor
xor
xchg
ja
push
cmp
xor
and
adc
jecxz
insl
xor
mov
or
lea
out
pop
push
and
fcmovnbe
sti
mov
jle
popf
daa
or
jl
test
divl
jne
aad
and
sbb
pop
adcl
and
push
adc
lods
mov
mov
jno
aad
inc
sbb
in
test
inc
dec
ljmp
cwtl
sahf
push
inc
pushl
mov
cmp
ds
pusha
dec
sub
inc
jae
pop
rcrb
cmp
inc
push
cmp
fcmovu
test
mov
daa
sub
mov
fldln2
loopne
inc
or
or
xchg
mov
xchg
or
call
push
hlt
mov
lods
test
inc
rorb
jmp
addb
ljmp
sub
add
fdivl
fsubs
xchg
movsl
or
movsl
clc
loopne
xchg
iret
inc
call
jmp
mov
lret
push
push
dec
inc
lea
cmp
inc
xor
ja
lea
sarl
cmp
pop
pusha
fcoms
popa
out
test
insl
pop
add
dec
sub
jns
xor
sarl
cmp
test
cmp
cmpl
add
jne
rcr
push
or
push
add
iret
sbb
scas
sub
push
call
cmp
js
gs
aam
je
xor
dec
sbb
out
inc
cmpsl
notl
jmp
inc
jp
addb
add
iret
test
sub
je
mov
clc
pop
cmp
sbb
popf
imul
stc
xchg
sub
div
pop
adc
push
sysenter
sbb
dec
dec
sbb
add
movsb
lret
adc
lret
and
clc
clc
jmp
xchg
mov
andl
add
aaa
cmp
scas
pushl
jae
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
push
scas
loop
sbb
inc
add
mov
jno
jmp
lret
or
pushl
in
pop
inc
sub
dec
add
mov
xor
js
xchg
rclb
inc
pop
fbstp
push
or
loopne
imul
inc
sub
mov
add
push
cmp
adc
jl
xchg
shlb
stc
pop
xchg
cmp
pusha
mull
mov
mov
add
xchg
push
push
fs
dec
xchg
sub
addb
das
or
test
mov
lods
xor
pop
lock
orb
xchg
fstps
jmp
inc
dec
or
ss
fisttpll
xor
jns
je
add
scas
lock
jmp
or
and
push
sub
mov
jns
pushf
aas
lea
mov
push
mov
inc
pushl
lods
adc
dec
sub
ja
fdivrs
xor
imul
sub
push
sbb
adc
icebp
or
cmp
rorb
cli
jb
or
inc
cmpb
sbb
sbb
sarb
or
xor
adc
cmp
pop
pop
inc
ds
xor
ret
test
mov
fimull
cs
js
mov
js
mov
roll
and
scas
cs
incl
cmp
push
jnp
inc
xlat
dec
adc
or
sbb
jmp
sbb
xor
sarb
popa
add
aaa
movsb
test
cmp
adc
into
repz
sbb
or
push
pop
adc
inc
dec
cmp
inc
inc
mov
sub
and
mov
jg
push
push
pop
add
jno
orl
flds
push
xor
mov
sbb
push
and
mov
lea
fs
scas
bound
in
imul
stc
mov
push
pop
inc
dec
mov
out
sbb
les
sub
mov
fldl
mov
mov
nop
std
into
and
adc
jb
dec
out
cmp
xlat
cmp
sub
xor
and
sbb
sub
push
mov
outsb
movl
add
pop
divl
jge
mov
mov
jno
xchg
std
and
arpl
stos
jecxz
xchg
jle
cmp
lods
jg
fstp
rorb
ja
in
sub
cs
cmp
stos
jge
mov
mov
dec
pop
rcll
push
and
andl
cmc
push
jne
jbe
mov
js
pop
fs
adcb
push
pop
xchg
icebp
sar
pop
int3
pop
pop
mov
sarb
mov
cmp
call
push
mov
add
clc
je
xor
add
sbb
lcall
xchg
add
js
js
mov
scas
dec
cmp
sbb
cld
inc
mov
jmp
dec
xor
lods
je
inc
das
sbb
mov
pop
jl
inc
test
add
js
pop
mov
pop
sbb
push
add
push
popa
add
dec
int3
movsl
jmp
scas
inc
ds
inc
add
sub
and
pop
adc
xor
add
and
mov
cmpsb
jo
pop
test
cmpsb
mov
loopne
mov
dec
or
cmpsb
dec
int
xor
jecxz
test
dec
cli
add
and
mov
mov
push
cmpsb
push
rcrb
xlat
pop
pop
push
mov
jb
cmp
inc
fs
lds
push
sbb
pop
fidivs
dec
sbb
cmp
sub
rclb
cmpsb
xchg
cwtl
jmp
sub
call
into
mov
inc
mov
sub
push
ficoml
pushf
fisttpl
repnz
pop
sub
pop
cmp
adc
mov
jae
xor
cmp
jb
nop
lret
insb
dec
push
dec
push
xchg
pop
mov
and
mov
nop
or
out
or
sbb
push
dec
test
int
inc
sbb
jecxz
add
cmp
fldcw
sub
sbb
jb
fadds
lea
notb
jbe
pop
jbe
jbe
mov
loope
inc
mov
xchg
flds
mov
ficompl
aam
repnz
das
dec
jp
cmp
leave
inc
rclb
into
jl
mov
jle
mov
clc
jle
or
sub
jne
push
add
pop
mov
popf
inc
push
popf
xchg
rcrl
gs
and
add
sbb
or
imul
sbb
jmp
adc
inc
and
inc
les
mov
jne
and
xchg
xor
or
or
dec
mov
shlb
mov
fwait
pop
daa
and
or
jo
movsl
xorl
bound
das
movsl
dec
mov
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
and
scas
outsb
and
data16
pop
idiv
add
push
je
js
ds
lods
leave
das
add
cmc
dec
and
data16
rolb
lret
and
or
push
mov
test
push
mov
icebp
or
inc
pusha
notl
scas
dec
insb
push
mov
mov
test
and
add
sbb
repnz
mov
adc
in
shl
not
xor
in
addr16
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
push
clc
fcoms
test
cmp
adc
or
adc
test
xor
mov
inc
push
push
mov
push
sahf
mov
sbb
or
test
mov
out
xor
leave
add
std
or
movsb
pop
mov
and
mov
and
int3
mov
and
jecxz
jge
or
or
adc
and
cmpsb
fdivl
or
jo
test
pusha
and
ja
outsl
xchg
push
pop
adc
pusha
mov
pusha
loope
inc
sbb
flds
sub
dec
and
adc
fisttpll
mov
pusha
pusha
icebp
orb
and
push
arpl
repnz
fimuls
or
xchg
adc
sti
fists
add
test
fisttps
or
mov
dec
sub
mov
stos
mov
dec
jne
orl
xor
sti
xor
fsubrs
cmp
and
adc
lods
daa
cmp
jb
sbb
fsubr
imul
adc
cmpsb
mov
push
fnstenv
cs
sub
fisttpll
insl
popa
sub
or
mov
jecxz
cmpsb
ret
inc
pop
fwait
clc
mov
lock
inc
fcmovnb
pop
pop
pop
sub
fsubp
jns
pop
dec
jl
push
mov
or
sbb
xor
bound
cmp
mov
or
pop
jle
inc
xchg
fldz
aaa
sub
sbb
add
les
sub
sub
nop
xchg
add
jmp
sub
push
push
nop
psubusw
inc
test
int3
adc
div
add
sbb
sbb
pop
dec
jnp
into
adc
mov
ljmp
inc
mov
cmp
das
jbe
or
or
inc
cmpsb
push
mov
inc
ror
cli
mov
cltd
xchg
add
xchg
inc
pop
sbb
cld
dec
sub
dec
into
adc
not
insl
in
sbb
jp
push
rorl
dec
in
mov
jno
mov
push
push
sub
push
sahf
jmp
pop
movsb
add
in
aam
mov
xchg
inc
test
ficoml
xchg
or
and
sbbl
xor
or
jg
fcompl
and
test
or
push
lds
test
jmp
or
out
outsb
dec
test
faddl
add
push
pop
adc
and
mov
add
dec
popa
or
ljmp
sub
movsb
daa
loopne
loop
jl
xchg
dec
dec
sbb
mov
sbb
nop
mov
adc
or
or
sub
leave
push
rclb
push
inc
pop
pusha
and
xor
out
pop
fdiv
adc
push
add
lods
fsubrp
fwait
jno
in
mov
mov
fs
pop
cmp
dec
xchg
in
or
or
ficoms
into
jl
adc
jmp
insb
rolb
imul
jo
sub
pop
frstor
mov
outsb
in
insl
insl
sbb
imul
jo
jbe
scas
orb
aas
and
jae
lea
push
or
mov
mov
and
sub
sub
inc
stc
mov
jns
add
xchg
aam
fcompl
jae
daa
add
and
orl
jns
mov
js
add
shlb
pop
std
or
mov
mov
pop
cld
pop
outsb
adc
clc
out
sub
xlat
addr16
cs
cmpl
or
sahf
push
mov
shl
jne
ds
inc
sbb
gs
mov
and
mov
sbb
lock
sarb
sbb
adc
ret
sub
add
pop
jge
in
adc
addl
aam
xchg
cwtl
and
jl
sbb
jne
jne
dec
dec
in
stos
pop
or
mov
test
shll
push
or
stos
inc
add
or
les
out
mov
cli
in
and
adc
inc
sbb
push
push
xlat
xorl
or
and
fsubrs
sub
ljmp
incl
sub
dec
aad
and
pop
sbb
sbb
loop
xchg
imul
dec
lock
and
xor
push
or
insl
or
push
mov
iret
addb
sub
shrl
enter
fwait
int3
and
sub
cs
fwait
sbb
les
pushf
loopne
xchg
jle
call
pop
adc
sub
mov
cwtl
mov
add
rolb
inc
and
ldmxcsr
xchg
jnp
faddl
pop
or
test
and
mov
rol
jp
repz
out
add
mov
lods
add
mov
jbe
imul
adc
repnz
sbb
adc
mov
data16
inc
js
shlb
inc
inc
and
pop
arpl
test
loope
xor
or
cmp
push
jnp
test
add
dec
xor
pop
push
mov
out
adc
loopne
add
imul
adc
jb
insl
test
dec
lea
mov
xchg
xor
jns
inc
psubq
xchg
sarl
mov
loop
orb
iret
and
sub
or
add
jle
or
or
add
loope
daa
loop
mov
lods
inc
scas
roll
add
ret
adc
mov
cli
push
xor
lds
mov
dec
cmpw
es
jle
inc
mov
xchg
sub
dec
pusha
pop
mov
dec
mov
xchg
adc
cmp
int3
fiadds
test
test
shlb
jle
xchg
daa
fiadds
xor
sti
add
jg
test
add
scas
cwtl
pop
test
jne
ret
mov
hlt
mov
sub
stos
repnz
pop
pop
seto
jns
jge
dec
fs
movsl
add
jle
jo
pop
sub
loop
add
and
sbb
jns
dec
xchg
loopne
test
and
lret
push
jecxz
shl
add
xchg
xor
loop
rolb
adcl
jo
mov
dec
cltd
hlt
int
outsb
insb
pop
and
mov
out
mov
inc
insl
dec
adc
push
into
jbe
lea
pusha
mov
repnz
or
xor
cmp
sbb
jmp
cmp
enter
incb
insb
scas
adc
mov
adc
or
pop
test
mov
insb
xor
push
mov
add
in
push
cmp
dec
dec
outsb
adc
loope
inc
icebp
jecxz
lar
aam
xor
enter
cmp
mov
aas
gs
test
xor
or
inc
je
out
pop
lcall
and
push
cld
not
rcrb
push
call
into
and
push
ds
push
and
fadd
or
and
lock
adc
and
xor
and
pop
popa
addb
add
fsubrl
cmp
jl
mov
fs
push
lods
adc
aam
bnd
popa
sub
mov
inc
loopne
xor
dec
scas
sub
or
lcall
lea
mov
cli
seto
mov
mov
data16
or
mov
lcall
fwait
js
cmp
iret
dec
jns
inc
lock
inc
jo
mov
jecxz
sbb
loope
icebp
dec
pop
jp
inc
cmp
jecxz
cmp
imul
mov
adc
lea
rolb
pop
jl
pop
andl
xor
lock
mov
mov
dec
jp
mov
sub
mov
sbb
jge
dec
xorb
hlt
adcl
nop
rolb
lock
lock
and
push
mov
sub
mov
in
loop
gs
jne
rcrb
pop
pop
cmpl
clc
mov
add
and
jb
add
mull
mov
add
push
add
add
clc
mov
sbb
mov
add
or
or
andb
push
xchg
push
adc
add
add
sub
jl
test
add
loopne
divb
mov
leave
push
adc
xor
or
or
dec
shll
movlps
sbb
test
or
xchg
sub
or
cmp
lock
jne
inc
jmp
mov
sub
or
xchg
add
inc
mov
aad
pop
mov
sub
add
or
push
dec
jmp
in
jbe
inc
and
mov
fisubs
xchg
call
sub
jo
add
mov
mov
into
jmp
faddl
lock
pop
sbb
mov
jmp
cmpsl
scas
adc
push
mov
adc
push
sub
and
mov
mov
cmp
jle
cmp
push
xor
ds
inc
xchg
push
jmp
dec
push
stc
mov
jbe
dec
sub
sub
cmp
fs
pop
push
jmp
or
cmpsb
xor
mov
mov
jae
mov
ret
cmp
mov
pop
out
sbb
jge
pop
cmp
and
idivl
add
pop
fisubs
js
jae
imul
sbb
ret
cmpb
in
mov
pop
addl
mov
dec
ds
add
push
out
repnz
sub
mull
orl
orl
pop
or
scas
mov
shl
stc
sub
cmp
mov
stos
mov
xor
inc
scas
call
sti
je
mov
sub
mov
lock
js
adc
add
inc
testl
mov
jmp
ficoms
sub
dec
xorl
push
jle
jmp
cld
ret
mov
imul
mov
adc
or
jecxz
add
pushf
jmp
push
cwtl
push
mov
sub
xor
mov
into
dec
mov
hlt
or
dec
cli
xor
shlb
mov
loop
cwtl
jge
neg
add
mov
lcall
cmp
cmp
mov
mov
sbb
lods
or
cmp
push
enter
fistpl
add
xor
jne
add
xchg
adc
inc
xabort
jo
in
dec
test
add
xchg
sub
and
or
je
popf
outsb
decb
dec
add
cmp
jb
mov
loopne
and
mov
sub
push
or
mov
movsl
add
icebp
into
mov
mov
ret
and
mov
into
nop
sarb
jbe
cmp
and
std
mov
sbb
ja
ja
mov
stos
mov
and
xor
dec
mov
int3
jne
mov
and
jne
test
jmp
es
into
jne
inc
or
cmp
imul
cmp
jne
hlt
int3
add
jne
inc
lock
xchg
pop
add
test
rcl
rol
pop
lret
rolb
out
lea
add
mov
adc
jl
jp
scas
sbb
cld
repz
fwait
in
dec
lock
add
mov
js
subl
lcall
int
sub
stc
jg
xorl
mov
xchg
add
test
js
mov
add
mov
pop
and
out
lods
add
or
shr
push
rcll
loopne
in
mov
jg
dec
icebp
xchg
jne
dec
sub
aad
fmull
add
notb
je
movsb
aaa
popa
mov
pop
sti
jg
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
test
xchg
mov
cwtl
dec
dec
xor
orl
loope
data16
or
and
inc
insb
jge
cmp
add
fdivs
dec
ficompl
sar
pop
lock
mov
insb
in
fiadds
push
jnp
pop
dec
call
mov
mov
fidivrl
jb
and
push
fmull
sahf
nop
dec
ja
sbb
orb
cmp
or
nop
sub
mov
push
into
jmp
scas
out
mov
dec
and
mov
movsb
int3
mov
test
int3
add
xorb
lret
lods
pop
es
sub
add
negb
mov
movups
add
mov
and
shlb
pop
jnp
or
call
xchg
das
inc
add
push
and
out
lcall
or
iret
repz
or
mov
xchg
cmp
add
push
push
rcrb
or
clc
gs
inc
lcall
mov
in
cs
pop
jne
cmp
std
or
scas
inc
mov
mov
dec
insb
or
cmp
add
mov
jbe
test
push
and
dec
pop
iret
fidivrl
sbb
xchg
adc
inc
cs
mov
shrb
ss
cmp
je
or
cmp
xor
mov
dec
cmpb
je
mov
cmp
pop
orb
jne
dec
mov
inc
inc
mov
out
add
add
out
call
sbb
add
push
pop
jae
sbb
xchg
sub
xor
cmpsl
in
rol
mov
xor
add
xor
adc
sti
repz
xchg
in
xor
xor
pop
cmpsl
adc
je
movl
gs
mov
inc
xchg
pop
das
popa
push
mov
and
push
test
add
fdivs
or
mov
or
add
sub
inc
jmp
pop
iret
ret
je
setg
sub
js
add
mov
and
xor
loopne
test
aas
sub
movb
inc
mov
jle
add
add
cmpb
pop
xor
mov
es
sbb
hlt
mov
pop
add
add
lcall
mov
jmp
sub
add
jecxz
pop
setp
xor
push
lcall
dec
sbb
inc
scas
xchg
pop
adc
inc
out
cmp
add
les
sub
lcall
cld
xor
mov
or
add
testb
jp
aam
xor
inc
lock
ret
icebp
lods
dec
lods
test
dec
scas
xor
dec
or
sub
dec
add
xor
mov
cld
dec
aam
cmc
and
or
push
xchg
cmp
outsl
add
adc
ret
jbe
xchg
xchg
dec
cmp
enter
aam
mov
rcll
adc
mov
je
fidivl
pop
test
popf
mov
pop
or
add
sub
nop
cmp
loop
add
inc
jae
add
mov
and
jl
dec
mov
lcall
xor
inc
es
add
jmp
adc
lcall
movb
cmp
inc
lds
leave
enter
add
push
sub
roll
xchg
addl
or
push
and
mov
clc
test
fs
outsb
fwait
adc
adc
dec
sar
out
xchg
xchg
mov
pop
aaa
add
cmp
push
add
enter
outsb
in
push
jno
mov
adc
xchg
out
push
xor
push
mov
and
js
setbe
jl
sbb
or
push
dec
inc
xor
leave
and
add
add
movb
aaa
and
sti
or
je
mov
dec
fwait
loop
neg
sbb
add
sub
loopne
lock
ret
daa
xor
or
and
shll
cmp
sahf
jnp
add
incb
push
xor
icebp
nop
mov
aam
push
sub
es
xlat
adc
jg
xor
bound
sub
xchg
add
sub
adc
dec
adc
sub
ss
push
movswl
les
imul
xor
shlb
push
mov
ret
mov
mov
dec
shrd
push
jle
dec
xchg
ss
ss
add
test
push
cmpsl
clc
mov
sbb
pop
or
cmp
nop
stc
inc
dec
cs
dec
jmp
xchg
clc
sub
in
mov
push
or
add
loopne
incb
push
shrb
rolb
mov
lahf
mov
lock
ret
push
adc
mov
or
and
imul
push
push
pop
sbb
js
jg
icebp
lods
adc
jmp
cmp
inc
adc
neg
cmp
mov
lock
popa
inc
jg
xchg
jb
push
shlb
pushf
add
jbe
nop
cmp
or
jmp
or
push
jg
lods
jb
not
ds
fs
dec
inc
dec
pop
add
pop
or
or
rorl
out
sbb
pusha
pop
xchg
adc
push
push
add
jae
stc
mov
ficoml
sub
mov
mov
sub
jbe
pop
push
sbb
ss
jne
loop
call
pop
jb
enter
mov
pop
sub
jl
inc
mov
xor
cmpsl
pop
or
jmp
lock
inc
sub
adc
jne
inc
sarb
mov
jne
push
and
jl
popaw
addb
loop
mov
pop
xor
movsb
stos
ficompl
rolb
xchg
jo
add
adc
jl
test
mov
movsb
pusha
je
dec
inc
push
cmp
je
push
rorb
inc
cs
repz
cmp
or
inc
lret
jbe
adc
imul
lea
xor
sbb
sbb
enter
push
and
out
subl
pop
insl
cmp
add
sub
lods
sub
xchg
and
mov
inc
sarb
add
ss
xor
jge,pt
sti
add
je
or
pop
ffree
and
jne
loope
enter
add
je
inc
je
rcrb
sbb
std
jmp
xor
fsubr
pop
inc
and
dec
dec
pop
mov
roll
cmpsl
sbb
or
jne
call
pop
jl
xor
movb
add
adc
data16
jg
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
dec
jl
in
std
enter
push
shrl
add
sub
dec
rol
ret
xchg
add
or
xchg
xchg
add
and
insb
inc
xor
xor
arpl
cmp
insl
fnsave
sbb
push
mov
cs
inc
add
add
rcrb
ja
xor
jmp
js
das
jb
sbb
cmp
adc
push
lcall
data16
xchg
cmp
jmp
aas
mov
xchg
movsl
hlt
push
mov
cmp
dec
and
mov
sbb
push
or
call
in
cmpsb
jno
dec
push
sub
popf
xchg
stc
sarl
or
popf
xor
test
ret
jmpw
mov
dec
es
add
mov
aaa
sub
ljmp
adc
repnz
cmp
sub
jbe
sub
movsl
xor
imulb
mov
adc
push
int
sub
dec
inc
xor
sbb
cmpl
pop
int3
and
pop
dec
cmpsb
push
or
push
pop
inc
pop
jo
dec
push
mov
les
adc
ja
shrb
mov
pop
push
dec
mov
andb
cmp
inc
ret
lret
push
adc
dec
cmp
xchg
or
mov
inc
add
jge
lcall
sbb
stc
loope
adc
lods
inc
or
in
inc
cmp
push
cltd
sbb
or
lock
push
xchg
or
jl
cmp
mov
mov
icebp
sub
out
mov
loop
arpl
nop
add
outsl
adc
xor
sub
jae
mov
jne
push
push
jmp
or
jmp
cmp
dec
push
testb
cs
addl
mov
imull
int
adcb
jae
cmp
jne
test
mov
rcll
xor
xor
loopne
and
or
divl
icebp
inc
push
push
adc
xor
sbb
jne
in
inc
add
fwait
orl
inc
data16
mov
or
dec
or
or
into
push
mov
adc
popf
aad
add
test
fnstenv
decb
add
loopne
ss
xor
dec
imul
mov
push
jo
xchg
xor
jns
jne
inc
sbb
mov
cwtl
push
pop
inc
cmpl
rcrb
mov
cld
mov
or
push
push
aaa
je
push
inc
rcl
dec
xrelease
aad
jp,pn
test
ret
pusha
or
es
fisubrl
enter
jge
inc
or
mov
cmp
push
lret
shlb
add
rcl
sbb
das
add
jl
or
dec
fiadds
arpl
std
lods
dec
xchg
and
xor
incb
push
inc
jmp
and
add
lods
mov
loope
ss
es
stc
inc
inc
test
push
sub
sub
push
cmp
movsb
add
cmpb
loopne
xchg
prefetch
mov
lret
clc
insb
loopne
cld
jo
mov
sbb
movlps
aaa
xor
pop
jmp
fs
rcrl
inc
divb
in
adc
repz
dec
pop
inc
sub
mov
mov
and
lock
and
fmull
jge
andb
ds
roll
je
pop
mov
inc
sbb
xor
movsb
cmp
dec
xchg
sbb
adc
daa
bound
lret
sub
dec
rorb
std
cld
mov
ljmp
sub
and
adc
loope
push
add
mov
fimuls
nop
adc
and
loope
adc
mov
xor
aad
xlat
lds
add
sbb
int
loope
pop
incl
aaa
xchg
daa
aam
xor
and
imul
add
pop
or
or
and
filds
add
lret
fimull
loope
cwtl
fs
jo
fsubp
xchg
mov
adcl
out
pop
xor
jmp
sub
sbb
and
repz
push
cs
leave
cmc
outsl
les
mov
adc
mov
jo
push
and
pop
push
adc
pop
xor
test
aad
mov
lea
icebp
mov
adc
and
mov
dec
cmp
lea
or
or
incb
jp
shr
add
or
mov
and
shr
mov
out
pop
or
mov
add
add
or
bound
scas
push
lock
int3
aad
in
cmp
xchg
sbb
sbbb
fildl
in
and
or
cmp
mov
clc
flds
push
idivl
inc
mov
jbe
jl
ds
add
pusha
lock
lea
mov
shr
cmp
mov
sub
or
mov
add
push
jp
inc
sub
mov
adc
orb
add
and
cmp
adc
rorb
out
decb
dec
or
inc
jbe
rcr
imul
loope
push
pop
mov
es
fidivrs
cli
push
notb
or
shl
dec
jl
xchg
mov
rol
cmpsl
cs
test
add
incl
stos
imulb
loope
jo
or
test
test
ficoml
int
sbb
lret
je
dec
call
rolb
subl
sbb
xlat
cmp
xor
or
ficoml
fdiv
clc
iret
add
lret
sub
negb
add
xor
movsb
cmp
cmp
test
push
cld
sub
jne
add
out
add
call
ss
jb
or
repz
mov
mov
push
cli
adc
sbb
sbb
fstl
aam
jle
cld
inc
sbb
addl
cmp
ds
push
push
mov
lret
mov
mov
je
cmp
mov
xchg
jl
cmpb
jl
xor
sbbb
outsb
cmp
fdivl
mov
xchg
adc
es
push
aad
rcll
popf
cli
mov
push
push
mov
push
push
fsubs
sbb
xor
fstps
sbb
jne
aam
pop
or
cmp
sub
mov
mov
and
adc
mov
cmp
jbe
dec
add
scas
ss
and
enter
test
dec
out
or
test
jne
hlt
lret
cmc
sbb
flds
and
shrl
repnz
add
je
shlb
sub
or
xor
loopne
mov
mov
or
jp
aad
inc
fcmovbe
js
mov
adc
jne
outsl
or
pop
sub
ljmp
jp
push
popa
hlt
aam
xchg
fs
push
pop
and
add
or
sub
pop
int3
add
fldcw
fsubr
imul
inc
out
or
test
neg
neg
sbb
sub
repz
inc
sbb
fnstenv
pop
aad
adcl
insb
insl
into
jl
push
inc
and
fsts
fcomi
sbb
nop
int3
gs
sbb
jmp
xchg
daa
pop
pop
pop
mov
stc
inc
jae
or
jae
lods
rorb
jge
push
ret
loope
shr
mov
adc
mov
pop
idiv
and
cld
je
jp
loop
push
mov
or
rol
push
cld
add
adc
mov
xor
jmp
pop
add
insb
add
adc
adc
inc
dec
dec
nop
ss
inc
lahf
push
aaa
xchg
cli
sbb
push
jp
mov
push
sbb
test
jbe
jns
mov
mov
adc
sbb
movsl
push
xor
ss
sub
push
jp
fidivrs
inc
sbb
jo
fwait
dec
lret
cmpxchg
cmp
les
mov
adc
xor
ret
dec
add
mov
mov
adc
adc
cs
fisubs
fsubl
out
and
dec
pushl
dec
sahf
lret
and
xor
and
adc
or
adc
jne
cmp
testb
fildll
insl
std
bound
or
je
push
mov
jg
clc
inc
mov
mov
scas
es
mov
je
lcall
mov
push
cmp
ja
add
cmp
adc
cmp
jne
jge
xor
adc
mov
enter
cmp
pop
jbe
inc
mov
pop
mov
pop
mov
or
mov
je
mov
mov
pop
mov
push
xor
pop
inc
or
sbb
or
sbb
adc
mov
ret
jmp
imul
je
mov
push
push
xor
mov
xor
int
lret
sbb
inc
pop
and
pop
xlat
and
leave
add
xchg
mov
dec
mov
in
adc
outsb
nop
push
xor
test
addr16
xor
pop
hlt
inc
jmp
mov
inc
push
push
sahf
push
das
add
pop
aaa
adc
pop
push
inc
int
sarb
xchg
out
femms
pop
mov
push
cmp
xor
stos
movsb
sub
push
inc
mov
lea
fsubrl
sti
mov
push
or
or
fsts
cld
lea
sbb
sbb
iret
pop
dec
sti
and
jg
mov
push
rcl
cmp
repz
aam
xlat
adc
fstpt
loopne
xchg
push
ror
nop
dec
mov
inc
add
sbb
into
data16
sub
and
mov
or
data16
add
mov
mov
add
push
ret
push
push
push
mov
mov
sub
push
sbb
je
test
sub
call
cmp
es
mov
or
fbstp
sbb
push
push
push
add
add
clc
and
add
xor
sbb
lods
pop
mov
clc
lea
dec
shr
fists
inc
imul
lea
sar
test
pusha
inc
mov
mov
push
loopne
neg
jne
and
out
jmp
adc
loop
test
fisttps
lock
sub
test
adc
mov
loope
roll
es
out
or
mov
pop
adc
les
mov
xor
decl
rcll
in
jnp
or
fadds
xchg
aam
inc
hlt
pop
ljmp
or
mov
out
loope
into
and
lea
pop
sbb
movsb
subl
xchg
icebp
nop
pop
decb
xchg
popl
cmp
and
mov
idivl
adc
and
loopne
xor
sbb
dec
lods
loopne
inc
or
mov
sbb
and
sub
sub
rolb
nop
in
push
js
mov
push
or
mov
sbb
or
cwtl
dec
pop
jp
movsl
push
sub
andl
or
ret
movsb
sub
and
cwtl
mov
jge
mov
inc
xor
inc
test
aas
and
rol
add
ret
add
scas
jne
sbb
and
fcmovbe
popf
mov
add
or
loopne
sub
ds
cmp
or
gs
pop
or
or
call
xchg
je
sub
inc
lods
cmpl
mov
mov
or
dec
push
xchg
lret
dec
adc
lock
mov
repnz
dec
div
cli
cli
inc
add
repnz
jo
xchg
movsb
add
lcall
mov
es
sub
mov
sbb
adc
lcall
and
xchg
mov
sarl
fidivl
fnstenv
xchg
jp
idivb
dec
sarl
mov
lock
ret
lods
mov
es
push
not
repnz
pushw
sub
loop
cs
jge
xchg
notb
bound
mov
xor
inc
sahf
rorl
andl
xor
adc
call
pop
sbb
cmp
fcomp
andb
inc
test
cmpsb
arpl
dec
ss
mov
sarl
cmp
dec
adc
mov
adc
or
cmp
out
xor
cmp
cld
lea
fcmovu
mov
pop
xor
in
inc
add
loop
mov
inc
and
iret
daa
sub
inc
scas
xor
add
sbb
and
imulb
sbb
imulb
orl
push
in
out
or
jge
or
cwtl
mov
sub
cld
icebp
jmp
add
jne
cmp
in
pop
pop
pop
inc
addb
xchg
jns
into
mov
adc
mov
sub
insb
sbb
cld
mov
scas
movb
inc
pop
xor
push
mov
push
add
push
nop
sbb
movsb
pop
or
cmp
dec
adc
inc
fisttps
out
adc
js
shlb
test
pop
shr
sub
hlt
cmp
mov
test
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
rcrl
loopne
mov
mov
loopne
fadds
pop
add
and
and
add
push
mov
rcrb
out
adc
pushf
lret
sbb
and
xchg
mov
add
or
mov
add
lahf
stos
xchg
or
dec
adc
sbb
ljmp
push
mov
clc
js
xchg
add
fiaddl
inc
dec
enter
test
test
shlb
add
xchg
dec
test
mov
mov
add
push
adc
add
into
or
mov
inc
test
adc
rcrl
cmc
cmpsl
call
dec
nop
dec
mov
dec
cmp
jge
sub
cmpb
les
add
dec
cmp
jecxz
in
inc
dec
add
add
fadds
shrb
pop
add
add
sub
pop
jp
jne
dec
mov
lock
mov
jb
int
pushf
adc
push
inc
ret
and
add
push
movsb
cwtl
push
xor
sahf
inc
jbe
mov
mov
add
test
enter
or
adc
jne
add
test
out
adc
aad
push
mov
shll
lea
and
and
or
out
or
jmp
hlt
int3
pop
iret
xchg
push
or
popa
jecxz
push
add
or
pop
scas
add
adc
sbb
push
mov
add
jg
mov
and
push
ret
lods
push
imul
or
jae
mov
mov
pop
sbb
jo
mov
mov
iret
xor
push
movsb
repnz
pusha
inc
mov
jg
into
mov
rcrl
pop
rcrb
ret
jne
ljmp
inc
ret
or
mov
mov
in
inc
push
pop
sub
popf
jae
or
or
add
push
imul
lret
test
add
mov
mov
mov
pop
xlat
iret
mov
xchg
adc
xlat
dec
push
iret
enter
push
add
enter
and
and
xchg
mov
mov
inc
jge
mov
ret
or
enter
in
sub
pop
aas
movsb
inc
fldcw
mov
cld
adc
xchg
xorb
add
and
inc
stos
jg
cmpb
sub
into
xchg
cmp
loopne
pop
in
out
cld
or
into
in
stmxcsr
pop
dec
pusha
ret
pop
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
test
sub
fsubp
or
pop
cwtl
pop
imul
or
shlb
or
pop
adc
sbb
test
dec
pop
mov
lcall
add
leave
lahf
pop
test
and
enter
add
mov
test
and
sarb
ret
je
and
pop
mov
add
sub
jmp
lea
lret
ret
pop
or
out
and
jo
push
scas
xor
push
push
or
dec
xchg
ret
sub
sub
mov
jl
fcompl
inc
mov
mov
xchg
mov
lods
push
dec
sub
push
cmp
and
aaa
xchg
mov
sub
add
or
ret
sbb
mov
push
or
xlat
and
daa
or
and
cmpl
loop
xor
xchg
imul
lret
xor
faddl
stc
add
xor
add
and
mov
aam
or
push
xor
push
cmp
adc
iret
xchg
cmp
sbb
jmp
and
and
sub
add
add
out
je
hlt
inc
or
adc
dec
les
jbe
inc
inc
fsubrp
dec
xchg
jle
mov
inc
mov
lds
inc
insb
fisubs
jb
or
jbe
mov
ror
icebp
test
push
or
sub
sub
cmp
imul
movsl
loope
adc
xor
mov
popa
sbbb
movl
or
xchg
aad
imul
lods
adc
nop
xchg
cmp
addr16
arpl
stc
sbb
jnp
inc
pushl
leave
scas
adc
test
je
mov
dec
push
test
push
xor
mov
out
je
and
xchg
mov
push
push
mov
pop
mov
jl
xchg
inc
pop
xchg
jge
sbb
or
jp
pusha
sbb
shlb
fsubl
fcoml
mov
dec
fmuls
and
in
inc
sbb
clc
dec
dec
daa
lods
incl
add
nop
and
jge
lea
addr16
pusha
push
pop
push
or
enter
es
and
test
mov
sahf
mov
lods
push
shrl
cmp
xor
push
jp
lcall
inc
add
push
add
adc
or
mov
push
mov
push
scas
sbb
les
push
lds
mov
and
xlat
movsl
inc
xchg
dec
or
nop
ds
inc
mov
popa
sar
sbb
or
pop
mov
incl
mov
dec
inc
push
mov
inc
pop
or
add
aad
jne
push
inc
aas
and
adc
cmp
lods
ret
jmp
xchg
xor
mov
jbe
sbb
fmull
and
or
rolb
outsb
jbe
test
mov
cmp
es
mov
xchg
loop
ret
sub
inc
pop
add
fmuls
cmp
icebp
adc
stos
mov
dec
les
popa
sbb
push
pop
ret
je
shll
subl
int
xchg
test
sbb
data16
sahf
xor
adc
sub
inc
cmp
pop
pop
pop
jl
dec
sbb
lea
ss
mov
mov
dec
pop
jbe
js
xor
sbb
pop
nop
sbb
jae
fsubs
out
adc
cld
push
stos
loopne
jmp
dec
loop
aaa
inc
dec
das
movsb
fisttps
int
sub
cmp
xor
mov
push
js
pushf
adc
jl
shll
shll
push
sbb
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
jne
dec
sti
fcompl
xor
in
sub
mov
aam
add
mov
hlt
push
adc
and
out
imul
stos
push
and
push
adc
dec
in
ret
xchg
mov
mov
add
adcb
push
mov
mov
test
adc
sbb
inc
inc
adc
mov
addl
push
xchg
pop
pusha
mov
pusha
push
or
cmp
stos
insl
mov
inc
pop
add
stc
or
insl
sbb
and
outsl
test
mov
mov
xor
inc
push
daa
xor
test
and
pop
mov
bound
add
sbb
std
andl
push
mov
movl
jno
xchg
pop
inc
and
sub
mov
mov
and
lods
insb
or
rcrl
int
cs
sub
ret
loopne
clc
div
cvttps2pi
push
adcl
mov
dec
test
je
mov
ds
or
fildll
popf
inc
rclb
add
mov
aas
cmp
jmp
fstps
xor
andb
xchg
jmp
cmp
fcomp
into
outsb
lods
pop
adc
test
cmpsb
pop
jo
xor
in
mov
int
adc
arpl
sbb
add
sbb
adc
mov
xchg
or
dec
in
stc
ret
in
mov
sub
out
ljmp
fistps
cltd
nop
xchg
push
mov
insl
inc
push
loopne
gs
xabort
inc
loopne
mov
sbb
inc
fidivrs
push
in
aad
inc
es
push
jecxz
pusha
les
cwtl
push
xor
mov
xor
xor
rorb
pop
and
xchg
add
dec
pop
ficompl
push
push
or
rclb
fs
arpl
mov
xchg
call
in
inc
lock
dec
push
adc
push
test
imul
pop
mov
rcll
pop
fcoms
repnz
pushf
pop
hlt
xor
cmc
inc
and
inc
dec
or
ret
pop
orb
add
dec
pop
fmuls
lahf
add
call
and
cld
cmpsl
xchg
insb
pop
and
xor
adc
fstps
jne
cmp
movsb
lods
inc
jl
mov
inc
adc
cmc
dec
dec
cld
and
push
mov
sbb
shll
mov
pop
enter
xor
add
cmp
mov
jne
les
stc
mov
xchg
lock
outsl
and
es
sub
mov
in
sbb
leave
dec
pop
mov
or
and
mov
cwtl
repz
call
rcl
xchg
fcompl
les
dec
jmp
mov
xor
in
xchg
in
leave
loope
rcrb
popa
or
fsubl
adc
insb
fcmovbe
mov
mov
add
shll
cmpsl
mov
in
or
in
push
xchg
lods
jns
bound
push
pop
hlt
add
nop
xor
mov
jne
ja
inc
cmpsl
scas
das
enter
insb
xchg
mov
mov
push
mov
adc
scas
stos
push
push
fcoms
xchg
jnp
gs
pop
jmp
dec
cmp
xor
lock
add
dec
push
call
test
adc
jl
push
mov
mov
cmpsb
dec
adc
cltd
aam
dec
pop
dec
in
call
shl
cmp
leave
xor
out
inc
shrb
fwait
adc
gs
rorl
daa
add
adc
leave
adc
and
and
sub
xor
and
xor
cmp
and
dec
inc
inc
dec
insb
cmp
pop
pop
sbb
inc
add
mov
or
add
nop
outsl
sbb
int3
leave
add
nop
rcl
loopne
jb
data16
clc
hlt
jo
mov
lcall
inc
fimuls
adc
lock
movl
jle
pop
stc
pushw
add
mov
dec
mov
scas
fsubrs
pop
test
arpl
out
xchg
fildl
xchg
int3
aad
or
and
sub
pop
rclb
dec
pop
fsubr
xor
sbb
inc
test
in
fiaddl
in
mov
stos
jno
in
mov
xchg
inc
sbb
adc
mov
sbb
or
andb
mov
pop
lods
xor
add
repz
adc
mov
pop
ss
inc
mov
hlt
fs
cmp
addb
das
ja
push
xor
mov
pop
push
mov
inc
jo
addb
cmp
imul
imul
jl
cwtl
fsubrs
std
psubsb
adc
test
insl
fsubr
adc
push
pop
insb
mov
or
in
pop
in
call
repnz
insb
fcoml
or
add
in
repnz
shll
test
insl
shrb
nop
sbbb
push
popa
test
inc
rorl
insl
adc
sbb
test
rcll
insl
dec
fisubs
outsb
or
xchg
pop
movq
nop
inc
lods
outsb
inc
test
mov
pop
loopne
and
outsb
in
adc
idivb
and
adc
and
mov
xchg
cli
test
mov
outsl
shll
ficoml
fmuls
jae
mov
out
add
cmp
out
xchg
jbe
fdivs
add
int
mov
dec
out
adc
mov
add
jb
scas
imul
dec
fcoms
repnz
fcom
add
dec
nop
jo
call
fs
dec
jno
stc
arpl
jno
das
nop
and
test
jns
cmp
mov
cmp
cmp
mov
cmp
cmp
int3
rcl
and
mov
sbb
dec
lods
mov
ret
outsl
bnd
ja
int
sbb
orl
pop
adc
dec
pop
mov
ret
test
push
mov
xchg
push
xor
orb
shrb
add
mov
sarl
or
or
or
loopne
fldcw
xorb
dec
xchg
nop
aaa
call
sbbb
adc
shrl
mov
rorb
adc
inc
adc
mov
cli
ud2
outsl
fdivrs
int3
sbb
sub
imul
mov
mov
or
mov
js
fstpt
std
fisttpll
xchg
popa
push
in
mov
ss
enter
pop
dec
or
out
test
enter
jmp
in
inc
mov
mov
push
icebp
fdiv
pop
mov
filds
in
add
rcrl
fisubrl
cmp
jo
push
pop
or
gs
rcrb
insl
mov
fucomip
cmpsb
pop
inc
ficoml
mov
repnz
dec
push
pop
mov
cltd
pusha
inc
add
pop
jo
and
es
js
adc
nop
and
pushf
mov
and
add
push
lea
or
mov
jg
mov
subb
pop
mov
adc
lahf
in
mov
fcompl
das
dec
rcl
adc
loopne
imul
je
pop
xlat
sub
jecxz
add
dec
cmp
mov
lods
mov
mov
push
jl
dec
movsb
nop
add
movsb
jbe
rol
xchg
fidivl
in
pop
add
stos
mov
cmp
mov
in
pop
jp
and
jg
dec
shlb
test
call
mov
faddl
sbb
and
mov
in
cld
lea
pop
decl
adc
nop
pop
enter
sbb
cmp
xchg
pusha
push
ret
jnp
pusha
push
loop
jnp
xchg
cmp
dec
dec
lods
lahf
add
cwtl
pusha
push
cltd
loopne
movsb
test
lock
cwtl
pushf
xchg
adc
nop
inc
push
mov
inc
push
cmp
or
or
push
xchg
or
jl
mov
adc
xchg
pushf
sbb
rorb
or
push
add
mov
in
dec
in
jge
test
adc
jmp
loopne
or
push
mov
mov
mov
xchg
adc
movsl
test
sbb
fdivrs
movsl
bound
fstpl
xchg
aaa
mov
cld
shlb
jg
inc
dec
test
cmpl
xor
vmread
adc
les
sub
insb
sub
xchg
insb
addb
lods
nop
decb
mov
std
sub
mov
das
pop
rclb
lock
je
inc
sbb
sbb
mov
faddl
rorl
mov
xorl
or
aam
dec
sub
mov
fadds
push
mov
loop
mov
xchg
add
sbb
in
test
push
das
jo
jb
mov
bswap
jb
jb
enter
jb
jb
mov
jb
jb
mov
mov
dec
outsl
movsb
push
sub
lds
ror
xor
cmpb
or
sub
add
sub
das
ret
adc
or
adc
fwait
js
and
cmp
mov
mov
mov
int3
call
pushf
xor
aaa
test
in
stos
push
mov
mov
or
in
shlb
xchg
nop
test
sub
mov
cwtl
scas
f2xm1
shll
pop
mov
xchg
mov
jg
aam
rcr
or
add
sub
insb
les
sub
aas
add
add
push
adc
fldl
push
rcl
outsl
addb
cmp
insb
rcrb
xor
mov
or
in
call
lock
aam
and
fdivr
add
inc
pop
mov
sbb
push
les
sbb
xchg
popa
xchg
dec
in
adc
js
push
mov
cmp
insl
xchg
fistpl
jmp
pop
mov
push
dec
outsb
xor
aas
rcl
add
xchg
fadd
shrl
adc
test
cltd
dec
sbb
fcmovnu
sbb
xchg
inc
test
jecxz
jo
adc
pushf
shrl
fadds
pop
ljmp
cmc
enter
sbb
les
add
fcoms
ret
xor
jo
add
xchg
ret
jae
sbb
add
sti
movsl
or
and
notl
and
push
enter
sub
imul
clc
push
fimull
in
pop
add
jae
fadds
int3
lahf
mov
and
mov
mov
or
mov
pop
ret
imul
data16
daa
call
lock
es
lods
sub
fsubrs
aas
fdivs
test
add
add
pop
sbb
movsl
jo
sarb
adc
xchg
ss
push
dec
sub
ret
and
adc
and
xor
mov
dec
inc
and
mov
jns
je
es
stc
adc
inc
loope
fwait
and
aas
js
mov
cmp
stos
arpl
xchg
fistpl
es
sti
add
add
call
es
cmp
in
lods
add
lds
adc
add
arpl
imulb
push
loope
sbb
enter
sub
movsb
sub
jmp
mov
mov
repnz
pushf
fisubrs
fildl
das
sub
sub
sub
enter
fs
enter
lcall
imul
xchg
filds
inc
xor
xor
jno
stos
mov
add
or
scas
rolb
mov
pop
inc
adc
dec
or
inc
pushf
adc
xchg
sub
dec
es
cwtl
mov
add
xor
pop
push
add
data16
mov
add
dec
orb
pusha
das
enter
mov
bound
and
jo
movsl
nop
pop
loope
scas
mov
push
xchg
in
inc
dec
add
test
mov
adc
mov
pushl
test
cmp
stos
push
sub
fadd
inc
push
mov
xchg
mov
popa
mov
dec
add
enter
adc
or
orb
jmp
add
ljmp
add
xchg
test
in
adc
movsb
test
sbb
lock
pop
sbb
adc
imul
adc
stos
add
push
and
and
xchg
or
fwait
mov
lcall
and
adc
add
inc
pop
push
call
les
sub
outsl
lods
arpl
psrlq
pop
lahf
xchg
and
sub
lods
mov
inc
cmc
lods
daa
ret
xor
arpl
enter
jo
stos
test
mov
and
out
xlat
movhps
imul
and
bound
scas
or
or
cmpsl
xlat
mov
mov
sbb
in
clc
ds
and
pushf
pop
add
sbbl
pop
rolb
dec
in
enter
mov
or
or
enter
or
adcl
push
or
imul
push
inc
jg
insb
out
jl
and
adc
jo
das
fs
insl
mov
push
ds
add
pop
out
pop
inc
pushf
and
loopne
adc
and
cmpsb
mov
dec
or
movsl
mov
rorb
lret
loope
sahf
pop
lods
shrb
and
enter
ret
mov
addl
dec
sbb
or
in
pop
aaa
and
xchg
inc
in
lahf
test
pop
pusha
shlb
xchg
call
pushf
in
jg
and
stos
add
mov
cmp
popa
pusha
inc
xor
add
dec
push
stc
mov
in
call
xchg
mov
ret
int3
add
xor
fadd
and
xorl
les
jmp
gs
jne
aad
shlb
and
or
add
mov
mov
lock
mov
popa
mov
add
insb
mov
es
stos
pop
push
or
push
test
movsl
int3
sub
movsb
pop
inc
orl
xor
outsb
or
pusha
and
fistpl
mov
mov
dec
and
adc
bound
xchg
dec
xchg
notb
adc
mov
je
xchg
mov
shlb
ret
les
inc
xchg
mov
addl
fdivs
pushf
adc
push
movsl
sbb
cmp
dec
enter
mov
xor
xchg
cltd
add
xor
cwtl
pushf
cmp
add
rorb
and
rorb
movsb
adc
nop
and
outsb
fildll
inc
cs
in
mov
pop
adc
and
roll
scas
inc
add
call
xor
xchg
mov
inc
sub
add
movb
xchg
outsl
loopne
in
loopne
iret
or
pop
enter
adc
xchg
sub
test
shll
leave
insl
test
jo
add
cmp
lcall
mov
push
add
cmpsl
aas
cmp
aas
int
mov
cmp
adc
dec
shlb
add
adc
sub
sbb
push
pop
xchg
add
add
or
push
sbb
or
and
in
ret
movsl
imul
sub
test
shlb
lds
outsb
and
data16
sbb
dec
cs
rorb
xchg
push
pop
add
lahf
push
loop
pop
push
test
inc
data16
lds
lods
mov
cltd
ss
cmp
xlat
push
andb
fsubl
xor
leave
nop
dec
cwtl
pusha
cltd
xchg
mov
sub
movsb
nop
mov
and
pop
sub
fsubrs
decl
les
shrb
jno
jns
stos
inc
mov
push
xchg
ss
inc
cmc
mov
leave
stos
sbb
sbb
push
stc
xchg
test
std
or
fs
add
inc
es
or
adc
push
cltd
nop
out
and
and
inc
inc
mov
jae
sysenter
adc
jge
mov
addl
fstps
mov
add
add
das
push
sbb
pop
push
sbb
push
rcll
or
fcomps
push
or
adc
inc
inc
mov
andl
faddl
andl
outsl
nop
or
xchg
add
scas
sbb
fdivrl
std
stos
dec
sub
pop
push
fs
bound
fildl
cmp
adc
sub
lods
cwtl
xor
or
popa
add
daa
and
sbb
mov
cmp
push
insb
push
gs
and
add
je
loope
scas
ljmp
mov
fsubrs
movsl
mov
push
sbb
lea
and
sbb
cld
adc
ss
insb
add
mov
adcl
sub
in
add
clc
cltd
mov
inc
inc
or
test
sbb
sub
popa
inc
in
adcb
mov
xor
add
inc
test
and
movsb
mov
mov
xor
movsb
mov
in
lcall
ljmp
mov
rcr
pop
mov
add
aam
scas
fs
loope
arpl
mov
sbb
push
pop
insl
fwait
and
lods
inc
pusha
mov
movsb
sbb
xchg
or
punpcklbw
les
push
insl
mov
dec
test
cmp
inc
leave
add
add
add
xor
jne
mov
or
mov
call
mov
lods
fs
fdivs
mov
inc
test
mov
inc
stos
pop
adc
adc
lds
int
fstps
add
vunpcklps
lock
jns
adcb
mov
bound
sbb
cltd
nop
sti
int3
add
mov
dec
lret
in
andl
lock
fwait
dec
pushf
push
sbb
pop
mov
test
xchg
loop
xor
pop
mov
fcoml
xor
mov
add
sbb
test
and
rolb
adc
sbb
xchg
imul
insb
hlt
pop
and
dec
xor
push
fadds
xor
dec
inc
jo
imul
call
daa
fcoms
or
push
daa
push
nop
rolb
fiaddl
push
les
cltd
fdivrl
bound
es
addb
jecxz
push
sbb
mov
dec
je
adc
int3
enter
xor
lds
push
mov
push
adc
jecxz
add
loopne
jecxz
mov
adc
aad
in
dec
adc
cltd
xor
xor
mov
test
pop
or
mov
mov
jg
dec
je
adc
test
fists
jl
addb
mov
cmp
scas
mov
jg
orl
lock
adc
ss
xchg
inc
cmpsb
mov
lds
aas
pop
pop
test
or
jns
out
movsb
clc
aas
adc
iret
movsb
test
mov
xchg
scas
pusha
mov
inc
and
pop
test
pop
pop
stc
enter
cmp
aas
shl
mov
mov
add
jmp
lods
fistl
push
or
cmpsl
cltd
shrl
lock
adc
or
add
pop
in
pop
test
adc
mov
lods
test
push
mov
leave
je
add
lods
bound
mov
xchg
daa
inc
ret
adc
in
sub
pop
lea
sbb
js
sub
test
adc
aam
loope
cwtl
nop
mov
es
mov
mov
mov
outsl
fsubrl
add
xchg
adc
int3
xor
mov
xchg
fs
jp
xchg
or
test
clc
sub
push
lods
push
cmpb
cmp
lahf
adc
dec
or
adc
pop
mov
or
hlt
add
push
lock
push
lods
or
out
decl
jmp
jge
pop
sub
push
push
sbb
pusha
adc
adc
pop
insb
jne
jno
fbstp
or
cld
dec
or
and
xor
aam
lds
and
les
or
iret
aam
push
lods
mov
inc
lea
aas
push
fiaddl
stc
les
fwait
adc
fs
sbb
enter
cli
mov
sti
cld
cli
scas
leave
and
sbb
pop
cmp
orb
cmp
mov
dec
hlt
add
adc
mov
lods
inc
mov
in
popf
pusha
sti
mov
and
mov
roll
adc
xchg
imul
pusha
mov
sbb
mov
test
sbb
ror
lahf
ret
stos
in
cli
call
cli
fbld
test
adc
mov
dec
shlb
movsb
push
ror
roll
stc
les
test
push
and
push
and
fisubrl
decl
dec
faddl
dec
push
popa
mov
sbb
push
mov
xchg
or
lock
test
fs
outsl
sbb
shrb
push
fsubrs
pop
dec
adcl
sub
imul
and
sarb
mov
enter
and
xchg
mov
aam
outsl
rclb
pop
mov
imul
jp
mov
out
mov
sbb
jae
and
or
out
lret
shrb
mov
in
jbe
add
pop
adc
add
aaa
ss
filds
push
sub
and
pop
mov
fildll
add
call
es
and
rcll
mov
andl
pushf
and
mov
and
push
sbb
and
hlt
mov
pop
add
add
or
dec
imul
pop
lods
rcl
mov
jno
repz
aaa
jmp
rcll
jns
into
push
sbb
clc
ret
push
scas
xor
cmp
mov
adc
add
lods
add
pop
test
dec
repz
lcall
mov
loopne
imul
inc
mov
sti
ss
add
inc
add
push
por
aas
pop
xlat
push
xor
mov
mov
insl
ljmp
add
fistpl
or
jnp
mov
add
mov
mov
sarb
sahf
out
push
nop
mov
or
push
inc
dec
mov
nop
decb
dec
dec
dec
dec
dec
notb
ljmp
xor
pop
pop
pop
popa
bound
gs
imul
jo
mov
jae
jne
ja
jns
xor
xor
xor
ss
cmp
sub
leave
adc
mov
gs
adc
push
or
cmp
rclb
cmpl
pop
mov
jecxz
dec
push
imul
aad
dec
pop
sti
push
dec
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
pusha
pop
in
in
push
dec
imul
push
jb
gs
xor
cs
insb
push
bound
and
pop
popa
out
xor
push
push
das
cmp
aas
rdpmc
add
pandn
imulb
incl
sub
add
sub
inc
js
je
jb
gs
out
out
cmpsb
insl
add
arpl
outsl
add
add
das
mov
gs
push
je
mov
popa
jb
mov
andl
imul
dec
xor
pop
aam
add
arpl
cmp
cmp
add
dec
and
jns
add
scas
imul
push
dec
push
inc
inc
mov
ret
andb
bound
daa
dec
outsl
jbe
jl
cmp
arpl
push
jo
sub
addr16
cmpl
xchg
mov
inc
jo
imul
bound
into
fstl
fs
insb
adc
out
jae
xchg
popl
or
jg
addr16
push
jne
xor
mov
daa
push
adc
clc
sbb
dec
js
pushf
insl
aas
and
jbe
fmul
cmp
ds
popa
das
jo
or
push
mov
mov
mov
outsl
inc
mov
stos
adc
lahf
mov
mov
dec
adc
push
xor
aas
lds
es
sub
sub
sub
cs
movsl
mov
cmp
cmp
ds
inc
das
pop
pop
adc
xchg
je
cmp
jge
jg
loopne
fs
cmp
inc
test
ja
lds
dec
and
push
pop
or
jl
jnp
dec
xor
inc
insb
jae
inc
aaa
xor
cs
fs
mov
dec
xchg
jl
inc
inc
mov
fstps
insl
and
jb
mov
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
in
xchg
adc
and
mov
js
mov
and
fs
inc
add
je
or
subb
inc
popa
and
daa
pop
mov
xor
and
insl
inc
lock
adc
inc
cs
loopne
ror
sub
mov
testb
scas
mov
lcall
jo
out
mov
dec
jne
xchg
and
or
imul
popa
add
or
fs
cmp
xlat
and
xchg
mov
je
mov
add
and
push
jo,pt
or
int3
fidivrl
popf
jb
loopne
outsl
mov
push
aaa
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
es
push
arpl
jnp
insb
outsb
mov
cmp
push
stos
in
inc
xchg
insb
imul
jae
int3
or
pop
cmp
xor
jo
gs
mov
insb
popa
pop
xor
jns
push
inc
mov
cmp
cmpsb
cs
ja
and
mov
cmpl
fs
xor
inc
xor
or
pop
dec
add
add
mov
popa
push
ja
outsl
outsl
push
enter
jae
fs
jo
cli
jbe
add
movsb
jnp
test
xor
push
mov
pop
push
gs
xchg
out
out
test
outsl
push
fidivs
mov
arpl
lcall
bound
cmp
aaa
insl
in
ljmp
imul
pop
mov
imul
push
pop
in
inc
jno
stos
jle
add
push
push
leave
nop
mov
call
jbe
fucomip
mov
adc
adc
cmp
fadd
inc
and
and
add
movsb
cmp
cmp
pop
mov
addr16
jae
xor
or
mov
out
sub
test
loopne
jb
push
sub
adc
sbb
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
imul
inc
inc
and
cmp
push
dec
cmp
jg
mov
leave
in
lcall
loopne
add
cmp
sub
rol
das
lahf
jg
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
sub
jae
push
and
mov
imul
cmpsb
gs
popa
dec
add
es
enter
popa
js
lock
imul
imul
mov
js
add
xchg
sub
cmp
xchg
adc
fwait
pop
add
adc
add
add
add
add
xlat
adcb
cmp
pop
or
aaa
ds
push
pop
scas
fnstcw
or
pusha
add
js
or
out
int3
mov
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
pop
mov
fldcw
lods
pop
into
jo
add
xor
lahf
clc
xor
xlat
push
stos
int3
jge
push
inc
js
jo
dec
rorb
in
mov
lea
mov
nop
mov
xchg
xchg
and
ret
fildl
push
xchg
push
inc
or
xor
or
test
sahf
pop
add
test
dec
cmp
cs
dec
cmp
dec
pop
repz
je
nop
sahf
push
pop
sbb
andl
inc
fimuls
rorl
push
and
sub
dec
add
jb
push
jb
adc
add
xorb
leave
add
and
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
out
je
and
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
test
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
dec
mov
add
rorb
push
adc
cs
sarl
add
nop
pushl
fists
outsl
ja
aas
das
cwtl
movsb
inc
cs
jae
jb
bound
sbb
stos
inc
data16
lea
arpl
mov
jne
daa
pop
lea
dec
mov
outsl
js
push
fisubs
push
inc
push
mov
inc
cmp
xchg
sahf
insb
gs
mov
dec
push
test
daa
add
insb
in
dec
imul
mov
imul
ds
and
inc
jb
jns
daa
addl
jb
lds
push
jns
mov
jne
push
sbb
lcall
stos
or
cmp
outsb
pushw
push
inc
sub
mov
xor
mov
push
pusha
testb
fiadds
push
push
lahf
imul
fisubl
lea
clc
pop
lcall
lock
adc
pusha
gs
mov
es
sub
aad
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
fs
imul
clc
loopne
loopne
out
sahf
aam
shlb
insb
dec
adc
fildl
in
test
and
repz
jns
pushf
xchg
push
nop
push
mov
test
je
pusha
jmp
insb
push
cmp
je
mov
iret
imul
loopne
lock
aam
maskmovq
idivl
jns
pop
pop
push
push
push
mov
mov
dec
loopne
inc
out
sahf
out
cmp
sub
lahf
out
sahf
and
adc
add
fistpll
repz
sarb
repz
cmp
clc
fiadds
mov
cwtl
jo
inc
inc
imul
add
out
sahf
out
les
sahf
sub
in
rcrb
sub
cmpsl
pop
aam
push
cmpsl
and
lcallw
mov
bound
outsb
push
xor
add
jbe
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
sahf
repz
mov
jb
xor
popf
addr16
es
xchg
lods
pcmpgtw
xor
add
jle
push
sub
incl
dec
jae
mov
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
pop
inc
decb
dec
dec
inc
add
adc
sub
inc
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
jmp
sbb
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
insl
incl
adc
fisubrs
and
jns
test
push
cmpsb
iret
lret
add
decl
inc
inc
mov
mov
sub
fwait
int
add
ss
sbb
pop
jns
ds
xor
incb
dec
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
incl
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
loope
jg
cld
or
cmp
jle
inc
mov
xchg
push
pop
mov
stos
inc
pop
hlt
ds
dec
je
lods
js
xor
iret
adc
or
icebp
pop
pop
repnz
in
xor
and
es
xchg
push
hlt
shll
add
scas
mov
sub
pop
fnstcw
mov
out
leave
ljmp
lahf
dec
test
add
inc
inc
or
outsb
jbe
and
add
inc
adc
adc
popf
pop
push
gs
fcompl
addr16
sahf
out
add
dec
push
dec
push
cs
jg
push
into
mov
pop
push
sub
dec
inc
push
dec
jnp
push
push
pop
cmp
cmove
sub
push
and
inc
sub
push
push
sarb
xor
ret
and
dec
and
push
dec
push
inc
xor
imul
xlat
jb
jbe
sub
push
or
push
pop
xchg
add
mov
pop
dec
push
sbb
pop
pop
adc
xor
adc
mov
inc
into
sub
pop
aas
cmp
cmp
dec
fnstcw
adc
lods
pop
cmp
push
pop
cmp
adc
xor
sub
pop
cmp
and
add
sbb
sub
adc
add
push
push
dec
out
cmovge
push
ss
mov
jmp
sub
or
cmp
adc
push
ss
sbb
adc
inc
inc
sub
stos
cld
pop
inc
ss
ss
push
inc
rolb
sub
xor
or
imul
mov
pop
aad
push
and
inc
inc
ret
lahf
pop
pop
pop
inc
or
es
test
push
popa
pop
inc
or
xchg
sub
push
pop
dec
push
pop
push
mov
jns
fistpll
dec
dec
sub
push
pop
sbb
xchg
imul
sub
dec
cmp
das
sbb
pop
pop
ror
mov
push
sub
xor
and
dec
dec
dec
pop
int3
pop
sub
fimull
sti
outsl
dec
cmp
adc
fucom
adc
add
sub
ljmp
ret
into
inc
push
push
mov
jb
pop
ja
sbb
add
out
sbb
gs
xchg
and
adc
and
sub
fcomip
xor
sbb
dec
or
jbe
imul
sub
sbb
push
das
push
jo
pop
je
notb
push
cmp
mov
push
push
das
movsl
das
inc
jnp
icebp
pushl
fs
adc
dec
cwtl
in
push
cmp
mov
mov
xor
xor
jns
dec
mov
push
rclb
loopne
adc
push
push
xor
out
cmpsl
jnp
jg
pusha
pop
push
mov
rolb
push
push
xor
xor
out
shlb
negl
sub
push
push
scas
push
adc
and
dec
sbb
adc
cmp
outsl
insl
mov
pop
jbe
inc
popa
outsb
popa
sub
jmp
popa
push
pusha
push
or
add
imul
outsb
or
xor
and
push
or
push
jbe
push
and
repz
push
pusha
nop
mov
out
je
push
push
xorb
pushw
xor
andb
iret
mov
push
push
mov
add
cmp
ds
outsb
ss
sub
pushf
xor
and
mov
imul
scas
cs
fwait
inc
test
xor
cmp
ret
and
ss
adc
js
stos
ret
aad
inc
jbe
mov
and
pop
or
pop
inc
inc
sbb
nop
adc
cmc
mov
push
pop
and
push
push
cmpsb
xor
mov
jmp
add
pop
data16
aas
add
jb
dec
sbb
cmp
fimull
push
insb
push
dec
inc
adc
and
add
les
xor
sub
dec
pusha
sub
xor
or
mov
sbb
jp
xor
pop
adc
push
in
out
jo
iret
push
xor
pop
pop
jnp
cmp
xor
cmp
das
or
ret
testb
xor
pop
das
out
pop
push
cli
jo
shrl
jecxz
push
add
lock
jge
fs
sbb
int3
int3
cmp
outsb
scas
mov
xlat
adc
or
add
and
fs
ret
mov
dec
pop
rclb
popa
test
out
jl
dec
cmp
fs
or
adc
push
dec
aam
fcmovnu
cs
and
push
inc
or
jnp
pop
das
push
cmp
add
cmp
adc
cmp
sahf
adc
adc
mov
cltd
xor
popf
mov
pop
or
daa
and
add
and
cmpsl
pop
das
inc
and
adc
push
or
ds
notl
push
mov
and
inc
addr16
dec
sbb
adc
and
loope
wrmsr
cmp
mov
lcall
pop
mov
sub
mov
enter
push
xor
pusha
je
das
push
dec
or
pop
mov
mov
clc
xor
push
pop
in
dec
push
mov
addr16
push
imul
pop
cmp
out
push
in
sub
push
loope
test
int
xor
sti
mov
xor
or
popa
or
xor
aaa
fdiv
mov
iret
inc
pop
adc
daa
dec
movsb
lcall
xchg
sbb
sub
aas
xor
jmp
pusha
dec
pop
cli
push
hlt
das
xor
push
add
cmp
cmp
lds
rolb
add
jle
mov
js
jl
pop
dec
dec
andl
das
stos
sub
or
shrl
push
mov
mov
xor
sbb
cs
int
stos
scas
jo
inc
pop
cmpsb
das
mov
add
or
rcrb
popa
and
pop
push
js
addr16
mov
ss
mov
inc
insb
add
daa
mov
add
in
sub
push
pop
cmp
das
add
pop
dec
sub
jb
subb
test
das
jo
xlat
fldenv
push
xor
mov
es
das
ja
xchg
mov
pop
daa
pop
or
ss
pop
and
push
into
aam
adc
sti
mov
dec
sbb
sbb
dec
sbb
sbb
push
fwait
aaa
or
aaa
pop
cmp
pop
jg
das
or
jp
scas
mov
or
pop
dec
mov
movsb
out
push
clc
inc
push
mov
aam
jns
popa
jne
push
pop
pop
ja,pt
and
loop
es
add
dec
decl
aas
sub
cmp
ds
or
dec
push
adc
sub
enter
pop
push
cmpsb
dec
mov
inc
push
adc
inc
push
rcrb
or
pop
pop
push
ss
ss
jmp
mov
cmp
das
push
pop
jbe
xorl
ds
daa
sbb
test
push
mov
add
push
lea
cmp
add
popa
out
xchg
dec
jae
cmp
xchg
mov
sbb
push
cmp
mov
mov
and
push
pusha
mov
cmp
loopne
pop
mov
pop
bound
in
std
ror
pop
push
push
je
add
insl
sbb
daa
jae
popa
mov
je
aas
push
fisttpl
xor
sti
sbb
cmp
js
ficoms
testb
add
jae
shll
ret
and
rorb
iret
notb
inc
call
aas
pop
xchg
iret
xor
in
adc
sub
or
sti
lahf
sub
and
adc
das
sbb
adc
mov
sub
call
jecxz
scas
nop
dec
das
adc
sub
push
sub
jl
sub
push
adc
push
cwtl
jge
mov
lret
mov
add
cmp
mulb
xorl
and
out
push
push
or
xor
jmp
or
stos
xchg
loop
into
call
mov
or
das
dec
ret
fmul
sub
and
sbbl
push
cmp
inc
lcall
inc
push
das
cmp
pop
xchg
les
and
and
popf
push
mov
pop
jge
andl
mov
mov
inc
fsubr
adc
loop
push
int3
lcall
push
dec
ds
adc
pop
push
mov
pop
and
xchg
loopne
mov
adc
jmp
push
or
sub
andb
and
push
and
ds
sbb
add
js
clc
test
xor
test
ficoms
lock
push
and
sbb
jge
lock
repz
cmc
lret
lods
stc
push
mov
daa
loopne
push
ret
fidivs
icebp
addr16
out
ljmp
cmp
cmpsb
pop
sar
push
pop
adc
cmp
xor
add
push
enter
mov
sbb
jo
dec
inc
cmp
sbb
into
cmp
outsl
bnd
sbb
inc
out
punpcklbw
jo
xchg
pop
sbb
add
xor
and
mov
test
js
idivb
mov
jg
push
lock
test
sbb
push
add
sbb
xor
adc
mov
cltd
sti
das
fisttpll
dec
push
adc
sbb
sbb
js
popa
fisubs
adc
and
nop
cltd
cmp
notl
xor
imul
movsl
mov
pop
mov
stc
xchg
das
mov
sbb
jnp
adc
push
and
sub
addl
shlb
sub
mov
mov
test
mov
test
sbb
pop
aaa
fisttpl
popa
adc
and
adc
imul
cmp
inc
pop
std
jbe
ficompl
fildll
lods
lds
cwtl
dec
push
adc
pushf
push
mov
push
sub
cmp
push
pop
and
adc
pop
sub
pop
leave
dec
sub
add
insb
ds
js
js
insl
jns
xchg
inc
xlat
jg
dec
hlt
and
sub
clc
fstpt
xor
sub
adc
inc
cmp
adc
jg
add
aas
adc
push
ss
adc
sub
add
int3
aas
inc
sub
xor
repnz
adc
dec
in
adc
and
xchg
stos
jne
push
mov
jecxz
or
add
or
fiadds
jg
fisttps
dec
jns
outsl
in
ret
inc
cmp
and
mov
shlb
and
adc
outsl
adc
fmul
sti
push
and
dec
adcl
cmp
cmp
pop
push
imul
popf
mov
or
sub
test
push
sub
divb
or
adc
jnp
push
ja
sbb
fldt
sub
insl
sbb
push
xchg
outsb
xor
inc
sub
pop
xor
pop
mov
movsl
xor
or
and
jno
aam
out
adc
push
lods
jno
and
sub
cmp
push
lea
imul
stos
sub
xchg
in
in
js
xchg
inc
push
add
dec
flds
pop
sub
cmp
add
dec
cmpl
rol
inc
dec
rcrl
mov
ret
sarl
xor
xorl
pop
adc
mov
jns
loop
jo
adc
popa
movsb
xchg
push
adc
xchg
push
push
andb
ds
cmp
cmp
adc
aas
push
pop
pop
insl
sarb
outsl
mov
cmp
outsb
xor
lock
push
push
dec
add
ret
cmp
stos
xor
es
push
mov
daa
cmpsb
add
or
pop
push
cld
lods
pop
push
test
cs
das
dec
or
dec
sbb
push
xor
outsl
pop
dec
test
addl
inc
pop
pushf
popf
push
mov
pop
es
mov
mov
inc
faddl
cmp
mov
mov
mov
inc
inc
xchg
pop
adc
mov
stc
and
push
and
pop
sbb
aam
lods
imul
notl
or
push
fadds
icebp
aaa
das
mov
push
xchg
add
aaa
testl
es
and
or
je
jo
insb
gs
ja
shrb
imul
push
aas
xorb
outsl
jb
jp
psubusw
adc
outsl
inc
add
fcoms
roll
jmp
add
das
mov
inc
sbb
pop
inc
jb
imul
mov
lock
xor
jae
add
idivl
addl
push
int
mov
lret
push
push
into
pusha
into
ss
imull
xlat
mov
es
out
fiadds
shl
fcomip
icebp
xor
sti
shl
lock
mov
xor
es
loop
test
dec
dec
pop
int3
mov
cmp
aas
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
push
pop
subb
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
and
mov
pop
push
or
xor
aaa
xor
inc
cmp
loopne
and
dec
add
lods
mov
imul
testb
popa
outsl
push
dec
imul
andb
mov
jo
pusha
sub
xchg
pushf
cmp
inc
xor
leave
jae
nop
and
adc
sahf
cmp
add
lock
in
cmp
dec
rol
add
inc
mov
push
jbe
je
inc
js
cmp
push
pop
add
sbb
mov
int3
test
fcomps
decl
push
dec
cltd
jnp
cmp
xor
xor
inc
sub
sub
xor
inc
xor
inc
push
push
test
xor
mov
cmp
insb
push
outsb
add
jbe
adc
jmp
scas
add
jne
js
add
mov
mov
push
neg
jo
mov
push
xorl
das
andb
je
bound
test
mov
and
rolb
pop
sub
add
and
xlat
addr16
sub
push
test
das
aaa
mov
arpl
das
jnp
xchg
insl
pop
sbb
es
add
push
inc
pop
out
out
mov
pop
and
inc
pusha
or
popa
pop
daa
movb
or
dec
xor
jg
movsb
das
sbb
pop
xchg
push
push
or
sub
shrb
push
cmp
inc
lret
xchg
xchg
rolb
out
fiadds
pop
and
inc
push
xor
test
mov
jns
or
pop
dec
and
fimull
jl
sub
dec
bound
or
fldenv
imul
in
das
jne
lahf
inc
pushl
cmp
cmp
mov
lea
pushf
out
add
mov
js
ljmp
insl
pop
mov
xor
push
insb
pop
jge
cmp
jnp
out
cmpsl
push
mov
inc
inc
outsl
push
adc
data16
jo
in
outsl
or
sub
lea
jo
push
adc
mov
iret
fwait
testb
pop
cmp
inc
lds
sbb
and
pop
inc
inc
ds
fsubp
push
mov
es
iret
pop
push
push
repz
ss
mov
subb
pop
cmp
insl
les
aad
or
pop
psubsw
sahf
ja
push
addb
xor
push
jmp
es
cmpsl
xchg
add
dec
sub
mov
sub
lock
push
lret
pushw
xchg
addr16
fldcw
into
push
pop
pop
mov
pushaw
fidivrs
sbb
sub
or
sbb
sbb
jl
out
lods
lret
pop
js
insb
aaa
repnz
sub
iret
repz
jle
sub
fs
cmp
ja
push
into
aaa
repz
clc
sub
ss
sahf
cmpsl
stc
ja
jg
stos
mov
aaa
mov
ds
movsl
sub
push
aad
out
lahf
cmpsl
stc
push
sub
out
jns
ret
cwtl
nopl
cmp
mov
imul
out
jle
xlat
cmp
mov
repz
cmpsl
jge
das
push
and
dec
mov
fiadds
push
jbe
jns
dec
sti
fidivrs
cmpsl
pop
jg
outsl
push
movsb
xor
in
repz
lahf
pop
das
pop
sbb
divl
out
lahf
pop
in
xor
jne
cmp
rcr
ljmp
mov
repz
xor
mov
imul
and
fildl
fdivs
out
jns
push
add
xchg
imul
sti
sbb
cmpsb
and
push
das
push
out
cmp
xchg
sahf
out
sahf
sub
mov
fnstcw
adc
cmp
popa
jns
out
jg
mov
in
repz
repz
cs
mov
les
addr16
jg
dec
sbb
scas
sub
pop
dec
cs
adc
stc
add
adc
rcrb
push
push
mov
xor
adc
mov
bound
mov
scas
int
mov
mov
loop
and
push
pop
mov
bound
je
mov
adc
push
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
add
jne
inc
push
add
dec
xor
pop
jo
mov
inc
mov
fisubrl
outsb
mov
ljmp
push
sbb
testl
ja
pop
loope
addr16
push
mov
jnp
dec
mov
jae
fisubl
xchg
pushf
or
and
mov
fdivrp
push
jae
dec
cmp
dec
popf
jbe
pop
je,pn
push
ljmp
cmpsb
dec
add
lods
xor
aam
inc
pop
insb
pop
push
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
repnz
gs
sarl
outsb
push
inc
imul
xchg
ret
dec
test
or
mov
ja
mov
dec
push
pop
dec
dec
add
in
jne
inc
dec
adc
dec
cmp
jb
xor
jbe
adc
adc
popa
insl
jo
lahf
mov
insb
je
push
addr16
jo
in
jnp
mov
jne
and
aas
cmpb
sub
sub
push
cmpsb
mov
aad
push
or
cmp
xor
xor
xor
fwait
jge
xor
xor
xor
xor
cmp
push
add
aas
or
sub
or
pop
jae
sub
sahf
or
push
push
adc
cmp
or
add
arpl
cs
add
add
jne
scas
ds
pop
push
dec
inc
movsl
scas
and
jns,pt
push
int
ds
ds
or
sarl
dec
jp
push
dec
jge
push
notl
mov
sub
outsb
sub
add
pop
push
dec
mov
mov
sub
data16
jge
aas
push
imulb
xor
add
inc
pop
push
inc
fwait
add
push
mov
inc
push
int3
inc
test
nop
and
lock
add
and
ds
or
adc
js
je
pusha
mov
add
mov
xor
push
mov
and
xchg
je
add
and
loopne
mov
mov
mov
rorb
jbe
xchg
nop
pop
outsl
xorl
cmp
inc
adc
cs
testl
jo
iret
sti
and
pop
push
dec
jnp
push
mov
push
dec
or
les
dec
stos
and
imulb
insb
lods
das
sub
adc
xor
xchg
and
add
daa
mov
xchg
inc
inc
and
imul
and
loop
call
lods
jbe
fsubs
push
cmp
aaa
inc
sub
mov
sahf
xor
ss
push
lahf
mov
pusha
mov
add
daa
aaa
fidivl
fisubl
daa
mov
stos
data16
sbbb
xchg
daa
lods
daa
jge
and
ss
das
divl
jl
mov
outsb
adc
inc
jg
pop
dec
insl
adc
daa
insb
mov
imul
popa
daa
pop
push
mov
das
dec
mov
mov
xor
mov
dec
push
pop
repnz
xor
and
ja
imul
push
pop
das
mov
fidivs
cltd
daa
aaa
or
or
sub
add
or
lods
mov
ds
and
jg
jecxz
add
xor
push
adc
les
daa
frstor
mov
push
pop
mov
pop
mov
pop
imul
add
outsl
lret
cmp
and
mov
pop
xor
outsb
or
cmp
xchg
push
idivb
jl
push
subb
cmp
or
shrb
mov
adc
pop
mov
and
pop
and
lods
addl
add
outsb
mov
daa
popa
mov
adc
outsb
add
sbb
push
jg
cmpsl
stc
adc
sub
in
inc
mov
or
push
and
loope
es
je
repz
lock
das
das
mov
or
lahf
imul
pop
push
sbb
inc
inc
sahf
or
jno
adc
dec
loope
lods
enter
and
jo
xor
das
adc
push
jp
daa
fs
and
push
addr16
pop
fs
data16
adc
mov
fisttpll
push
xor
adc
adc
pop
jnp
lds
bound
fstps
dec
dec
xor
inc
and
das
pop
das
inc
daa
dec
xor
push
adc
mov
push
mov
clc
xchg
sub
mov
sub
sub
push
outsl
pop
push
push
aas
add
xchg
icebp
fcmovb
jbe
or
xchg
pop
add
and
test
pushf
and
push
into
clc
addl
pop
clc
aaa
adc
adc
adc
cltd
loopne
aam
cs
sbb
inc
divl
or
adc
xchg
push
or
pop
xchg
jmp
subb
jo
in
pop
and
and
rolb
pop
inc
xor
sbb
cmp
and
cmp
push
push
lret
mov
or
rorb
inc
pop
xor
sbb
mov
das
jnp
mov
out
xor
push
or
rcrb
inc
mov
adc
xchg
push
fs
pushf
and
add
pushf
or
sbb
pop
or
call
xor
sub
fimull
jl
dec
data16
inc
sub
test
loopne
dec
push
inc
xchg
and
inc
or
pop
rcl
jo
aam
inc
in
movsl
add
das
xor
aas
pop
mov
es
mov
dec
push
jg
call
adc
add
or
cmovb
inc
aas
fimull
jo
inc
cmp
inc
test
pop
dec
inc
dec
jno
shrl
cli
sbb
and
shll
xor
dec
jne
mov
or
sub
aaa
push
ja
mov
movl
sahf
pop
sbb
jns
out
push
andl
dec
repz
dec
cltd
or
xchg
insb
mov
xor
or
fwait
int
mov
or
adc
sbb
jnp
and
sub
xor
inc
mov
mov
gs
mov
mov
data16
shlb
add
test
sub
fldcw
add
or
adc
fwait
int
and
add
add
fldcw
dec
str
int
cwtl
or
and
das
incl
loope
mov
bndldx
adc
push
arpl
sahf
test
std
pop
cs
and
popl
test
fidivl
popa
push
push
sub
bound
sub
cmc
push
shrb
jo
inc
push
xor
pop
dec
pop
sub
imul
sbbl
inc
inc
sub
or
sub
adc
das
mov
push
or
add
lcall
pop
lcall
sbb
cmp
cmp
and
aas
pop
push
pop
dec
sbb
lcall
cmp
dec
pop
sub
or
ss
dec
and
push
sbb
pop
adc
or
sbb
lock
decl
push
dec
inc
cmp
dec
sub
push
cmp
pop
or
les
xchg
mov
add
push
lret
out
mov
and
adc
adc
sbb
and
jg
std
dec
es
cmp
sub
dec
sbb
and
pop
push
inc
and
sub
ljmp
decl
es
or
adc
es
xor
adc
bndstx
sbb
and
adc
dec
dec
sub
das
shlb
sbb
bound
andb
repz
inc
cmpb
fmuls
ljmp
jg
add
mov
sub
inc
sti
and
in
push
inc
dec
aad
pop
movb
dec
aas
xlat
add
xchg
in
dec
mov
mov
xchg
mov
out
add
lea
xor
adc
mov
stos
inc
pop
sub
pop
inc
inc
popf
push
outsl
inc
imul
dec
jecxz
adc
mov
sbb
dec
or
jb
mov
adc
les
lret
add
mov
push
in
rcll
xchg
inc
jb
mov
dec
popa
cld
jmp
inc
inc
or
mov
push
inc
push
dec
inc
dec
push
dec
incl
or
fst
outsb
outsl
loopne
pop
add
notb
cwtl
das
mov
inc
aaa
jno
jmp
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
lcall
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
fisttps
sub
fsubrl
stc
jbe
push
ds
insl
xor
inc
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
call
or
or
or
cs
ret
sub
xchg
mov
data16
jmp
call
cltd
test
push
push
shll
ja
daa
decl
lock
mov
movsb
sbb
dec
stos
fmuls
lret
rep
cs
mov
adc
enter
mov
mov
movsb
mull
jno
inc
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
lcall
sub
cmp
or
xor
popa
push
inc
dec
bound
xor
inc
inc
dec
dec
sub
pushl
dec
pop
jo
inc
inc
sub
pop
data16
and
pop
or
cmp
aaa
dec
ds
and
xor
push
pop
ja
js
ljmp
stos
inc
fidivrl
outsl
and
inc
insl
addr16
inc
pushl
test
into
dec
adc
or
and
push
mov
mov
aaa
pushf
sbb
inc
dec
nop
push
push
sbb
adc
adc
orb
sub
arpl
aaa
pop
dec
daa
pop
popa
jne
addr16
pop
xor
push
or
and
jmp
ds
and
pop
dec
push
dec
out
mov
xor
xor
inc
mov
mov
add
xor
xor
push
inc
add
inc
add
inc
xor
das
aaa
inc
push
inc
cs
imul
mov
ss
cmovb
pop
ss
cmpsl
adc
push
pop
dec
add
add
add
test
mov
sub
aam
and
loope
enter
ds
xorb
pop
cmp
mov
cld
pop
lahf
std
in
scas
bound
or
inc
push
ret
xor
mov
adc
lcall
mov
dec
pop
push
push
cmp
push
je
fs
ret
jle
xchg
popa
or
pop
or
das
push
inc
js
sbb
pop
in
mov
push
sahf
xor
cmp
pop
xor
push
adc
rorl
push
js
dec
loopne
int
or
xor
xor
jb
xchg
jne
push
push
cmp
test
mov
test
xor
mov
jp
inc
mov
jo
or
push
sbb
mov
fsubrs
lea
sub
mov
add
adc
pop
mov
dec
cld
sbb
pop
cmp
scas
pop
mov
mov
and
dec
dec
lret
rcll
ficoms
jge
push
push
orb
jno
mov
jns
or
popf
hlt
in
add
aaa
xor
dec
adc
pop
xchg
push
fcmove
dec
push
mov
jno
push
fistpll
sahf
iret
pop
daa
cmp
add
fs
rorb
les
push
sbb
push
pop
out
push
pop
popa
cmp
add
cmp
sahf
and
inc
or
pusha
leave
mov
dec
mov
or
pop
aad
ret
mov
push
mov
push
xor
or
addr16
outsb
outsb
je
xor
js
cmp
repnz
jbe
jae
popa
insl
gs
cmp
mov
cmp
mov
inc
inc
cmp
adc
aad
mov
push
ljmp
pop
cmp
push
xor
lret
testb
rclb
outsl
insb
dec
push
popa
je
push
cli
xchg
push
xchg
insl
sbb
and
loope
or
push
pop
adc
notb
sbb
mov
cld
fldl
or
pop
push
gs
je
and
mov
pop
pop
and
mov
add
push
mov
les
lret
je
add
inc
mov
or
cs
in
iret
cli
fsts
fs
push
jae
and
filds
sbb
xor
dec
add
lea
adc
dec
stos
and
mov
jae
dec
movb
mov
addr16
pop
outsl
js
add
pop
sbb
test
xor
lret
pop
jno
add
and
mov
xor
push
sbb
push
add
or
test
fadds
lods
push
popa
dec
ficompl
or
mov
gs
repz
and
int
pop
inc
jne
xchg
insl
mov
and
sbb
cwtl
dec
movsl
pop
fcmovnbe
or
jecxz
xchg
pop
mov
mov
fisubrl
sbb
add
pop
add
sbb
inc
push
inc
mov
in
lock
enter
mov
aaa
daa
or
xchg
fs
jo
mov
xor
iret
or
push
ret
inc
and
cs
mov
sub
sbb
movsl
mov
call
idivb
pop
cmp
jp
aam
or
and
pop
das
push
lea
scas
push
adc
and
dec
es
dec
in
data16
sub
loop
xchg
mov
adc
or
or
sub
xchg
cwtl
jne
cmp
push
pop
dec
gs
jnp
or
push
adc
das
sub
das
or
pop
sbb
lret
adc
xor
jg
sbb
bound
cmp
notl
into
dec
lahf
addb
jnp
xchg
imul
mov
or
sub
or
mov
push
inc
or
test
dec
jo
shll
gs
sub
mov
mov
mov
cwtl
movsb
addr16
fisubrs
out
pop
pop
pop
adc
push
xchg
xor
push
fsubr
imul
pop
jnp
and
pop
repz
push
cs
inc
dec
mov
sbb
shrl
push
xor
mov
std
xor
scas
aad
sti
cmpsl
jnp
cwtl
bound
fisttpll
adc
add
dec
push
push
xchg
cmp
sub
loop
add
sub
inc
dec
rorb
mov
inc
and
inc
add
or
add
cmp
lret
js
mov
add
aaa
xchg
xchg
fstl
push
jne
or
pop
gs
add
mov
adc
cwtl
cwtl
dec
xor
jae
push
popa
pop
outsl
lods
push
pop
pop
dec
outsl
and
push
fs
outsb
inc
inc
jp
imul
dec
outsb
push
je
bound
sbb
mov
and
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
xchg
jns
clc
dec
xlat
jb
gs
pop
xchg
aad
add
inc
in
fwait
pop
or
pop
daa
dec
push
dec
andb
add
inc
mov
aas
pop
ret
dec
pop
loop
cmp
mov
inc
adc
push
sahf
rclb
or
or
cmp
out
pop
mov
mov
dec
inc
popf
xchg
add
add
inc
pop
aaa
inc
sbb
mov
push
jb
mov
adc
into
addl
add
add
adc
sbb
jae
pop
addr16
jge
dec
call
push
adc
fisubs
mov
push
push
jns
out
pop
nop
cs
mov
mov
gs
xlat
pop
js
xchg
or
cmp
aad
jecxz
cs
outsb
clc
sbb
inc
sbb
in
dec
or
push
sub
xor
fidivrl
dec
or
or
pop
inc
rolb
cmp
push
out
push
or
fwait
lods
out
push
pop
aas
dec
push
dec
dec
xchg
cmc
dec
add
jne
dec
cmp
push
sbb
orb
pop
adc
lahf
push
xchg
inc
mov
adc
or
inc
xor
add
jne
dec
push
jo
dec
mov
inc
and
pop
or
outsl
and
pop
cmpsl
cmp
sahf
sub
ljmp
arpl
dec
mov
lods
or
add
push
insb
cmp
and
outsl
stc
es
insl
xchg
xor
inc
jmp
or
adcl
or
pop
push
sub
xlat
jne
mov
outsl
or
lods
in
je
sub
inc
sub
jmp
dec
push
push
push
das
xor
xor
dec
and
sbb
jecxz
or
adc
sbb
fisubrs
scas
add
iret
push
push
push
mov
outsw
insl
pop
xor
dec
in
add
mov
das
push
mov
add
push
testl
popa
outsb
jae
outsb
pop
pop
pop
xchg
sub
andb
mov
fs
fisubrl
or
dec
aaa
sahf
push
adc
scas
arpl
push
mov
imul
mov
je
aad
stos
lds
dec
gs
cli
sbb
inc
xadd
cmc
inc
repnz
xchg
inc
cmovo
add
inc
mov
insl
pop
jnp
aas
mov
pop
pop
inc
sub
mov
xor
jl
mov
jl
inc
add
xchg
aas
add
cmp
push
addr16
movsb
les
jnp
daa
add
push
loopne
cld
movsb
xorb
add
iret
dec
addb
aaa
push
lahf
pop
imul
jg
daa
ficompl
pop
xor
or
or
inc
daa
outsl
jnp
in
pop
mov
inc
add
add
dec
scas
fs
aaa
mov
dec
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
mov
push
daa
enter
imul
xor
out
sbb
inc
clc
push
cmpsl
xor
jo,pt
add
xor
out
cmp
mov
push
jns
cwtl
push
inc
sub
sahf
cmp
iret
repz
cwtl
inc
sub
imul
push
pushf
andb
insb
push
xor
push
push
xchg
and
es
adc
xchg
cwtl
xchg
or
mov
lret
test
add
int
imul
cmp
lcall
or
mov
dec
shlb
jnp
fs
call
clc
dec
inc
fbstp
add
adc
jbe
pusha
jg
jg
adc
dec
mov
xor
sbb
xchg
dec
repnz
push
mov
outsl
les
in
dec
inc
lock
xchg
mov
xchg
cmp
add
jns
ret
filds
or
dec
enter
jo
mov
or
outsl
add
or
outsl
cmp
sub
sub
ss
add
cmp
jl
adc
xchg
cmp
insb
pop
leave
mov
add
mov
add
in
jb
and
test
add
cmp
pop
cmp
aam
pop
enter
dec
xchg
add
xchg
or
pushl
enter
leave
xor
cmp
inc
enter
fisttps
cltd
mov
outsl
sub
mov
aad
inc
jbe
aaa
test
repz
dec
mov
or
push
leave
add
cmp
lock
enter
and
imul
and
js
ja
mov
inc
mov
mov
inc
jg
ja
pop
xor
dec
push
or
sbb
in
fwait
nop
ds
cmp
fildll
ret
push
xor
fbld
cs
jo
and
nop
or
xor
jmp
inc
cs
pop
aas
push
enter
and
outsl
and
xchg
add
icebp
cmp
daa
add
int
add
cmpsl
adc
push
or
xor
jbe
es
in
aaa
mov
outsl
mov
in
or
push
int3
daa
lods
in
leave
add
das
inc
movl
shrl
pop
aaa
push
cmp
push
dec
inc
enter
loope
inc
jg
push
nop
push
mov
movsb
add
sbb
in
je
pop
sbb
repnz
push
ss
test
inc
sub
ja
or
and
inc
outsl
push
bound
jbe
outsl
jg
rcl
push
mov
adcb
testl
les
cmp
int
inc
mov
inc
rcl
cmpsl
push
insb
push
xchg
push
imul
or
mov
shll
pop
cmp
adc
or
xlat
pushf
nop
push
ret
or
inc
mov
test
add
add
push
sub
lock
je
add
adcb
lahf
xchg
adc
push
inc
pop
sbb
mov
testl
and
add
cld
add
inc
lock
push
pop
pop
in
sub
cmp
mov
add
or
addr16
aaa
dec
inc
push
xor
outsl
addr16
dec
enter
cmpsl
nop
inc
mov
sbb
outsl
xchg
mov
leave
xchg
aam
in
xchg
push
repnz
pop
add
out
ja
add
es
push
jg
or
cmp
test
add
sub
fisttps
inc
incl
or
rolb
xchg
sbb
das
outsl
add
aad
pop
pop
adc
inc
ds
adc
push
test
clc
push
jl
aaa
add
or
add
les
add
cmpsl
add
push
xor
iret
cld
out
xlat
add
pusha
and
ret
add
dec
out
mov
leave
xchg
int3
daa
or
jge
adcl
dec
jl
data16
enter
xor
cld
dec
out
cmp
shrl
nop
push
xchg
sahf
and
mov
sbb
cmpsl
jae
xchg
sub
or
or
push
dec
fs
jo
fs
xchg
dec
outsl
add
or
fists
aam
mov
xchg
pop
and
add
cmpsb
mov
ffreep
adcb
lahf
pusha
push
test
xchg
popa
orl
add
pushf
outsl
out
add
sbb
popl
pop
sbb
addr16
mov
or
in
cltd
nop
push
mov
in
enter
or
dec
or
push
jl
xchg
dec
shld
outsl
out
push
in
mov
push
adc
sahf
imul
addr16
fdivs
int3
daa
sbb
push
sub
cmp
dec
push
dec
dec
mov
aas
add
popf
cmp
inc
push
mov
subb
test
mov
movsb
adc
mov
in
data16
loopne
inc
pop
xlat
data16
ret
popa
adc
fcmovnu
les
inc
dec
push
push
pop
daa
aas
ss
lcall
sbb
pop
out
aaa
fwait
insl
roll
adc
fxtract
sbb
add
dec
dec
iret
repz
jb
test
divb
sahf
out
lcall
cmp
dec
and
mov
cmp
add
cmpsl
ret
stc
cmp
push
dec
pop
stos
negb
dec
xchg
mov
dec
aaa
jns
out
pusha
andl
repz
cmpsl
in
lahf
cmpsl
stc
out
adc
push
popf
push
push
ds
repz
mov
mull
push
xor
out
push
xchg
lret
and
cmp
repz
fwait
clc
cmp
jns
cmpsl
push
push
out
repz
pop
mov
imul
mov
sbb
repz
out
mov
cmp
mov
out
pop
push
push
cmpb
xor
scas
loop
pop
imul
in
pop
cmp
cmp
out
cmp
jg
insb
pop
imul
xorl
bound
push
test
push
arpl
out
cmp
divb
shrb
sahf
cmpsl
stc
xor
and
cmp
repz
pop
addr16
cmp
cmpsl
stc
aas
push
lea
iret
repz
leave
jl
repz
insb
fs
pusha
insl
jns
out
fwait
adc
imul
lods
out
sbb
int
pop
adc
jo
jmp
xor
out
jb
add
dec
je
jl
cmpsl
mov
xor
lcall
jbe
push
pop
ja
out
lock
xor
sarb
ds
repz
nop
adc
rorb
xor
out
inc
xchg
rclb
jl
jns
out
fstpl
jge
mov
repz
pop
sahf
fsubl
jg
jnp
cmpsl
push
mov
xchg
sbb
out
mov
subb
cmpl
or
jns
iret
sarl
add
dec
repz
clc
sarl
mov
jae
insb
mov
cwtl
push
mov
decl
repz
adc
push
mov
sub
fmuls
stc
cmp
enter
outsb
mov
cmpsl
stc
cmp
dec
fwait
cmpb
sub
cmp
repz
sub
jge
cmpsl
stc
sbb
mov
dec
shlb
push
xor
push
jecxz
test
xor
insb
ss
stos
ret
lods
push
lods
push
scas
mov
lock
pushl
inc
pop
xorb
fmull
dec
outsb
je
sbb
xchg
cmp
xchg
add
mov
xlat
shlb
shr
into
cli
ja
dec
add
dec
xchg
adc
add
push
cmp
test
inc
add
divb
aam
mov
inc
aas
test
xor
sarb
out
int3
int
testb
fidivrl
call
sub
or
outsl
stc
or
jp
fs
inc
push
mov
mov
popf
mov
aaa
mov
inc
add
inc
mov
enter
mov
notb
clts
pop
rorl
add
push
outsl
aaa
and
ss
pusha
dec
aas
int3
jg
push
cmp
push
aas
loopne
inc
jns
dec
mov
out
fmuls
push
xchg
inc
in
es
push
filds
cmpsb
fdiv
push
jge
cmpl
jl
jg
lea
mov
lods
mov
nop
das
fs
rorb
dec
testb
inc
es
mov
and
decl
aaa
cmp
fcmovne
push
push
stos
ficomps
pusha
pop
inc
lret
push
inc
pushl
and
test
aaa
fstpl
push
inc
je
daa
test
call
mov
loope
push
push
pop
int
mov
or
enter
iret
punpcklwd
ds
push
inc
jg
lahf
xor
inc
push
shll
test
pop
aad
jno
push
push
ljmp
repnz
cmp
out
push
cld
aas
mov
inc
mov
and
int3
cmpsb
and
cmpsl
mov
jb
inc
cs
cmp
inc
in
shlb
pop
add
mov
sbb
rcrb
or
or
jecxz
fdivs
adc
out
add
das
leave
mov
mov
mov
sbb
or
sub
scas
mov
add
push
sub
test
in
ficoml
ret
add
dec
cmp
fisubrl
mov
push
loop
pop
jmp
push
pop
out
xchg
pop
adc
push
add
dec
sahf
flds
pop
sub
add
cmp
cmp
jae
dec
les
mov
or
or
pushf
xchg
fildl
push
mov
push
scas
xchg
fmuls
cmp
jb
xchg
mov
scas
popa
add
pop
sti
addr16
cmpsl
adcb
xlat
add
js
bound
and
pop
mov
les
rol
and
or
mov
dec
in
test
jp
inc
inc
mov
inc
outsl
and
repnz
fs
add
pop
inc
mov
mov
lock
out
mov
inc
dec
aam
dec
lahf
push
pop
add
inc
dec
repnz
pop
cmp
mov
xchg
sbb
dec
xor
cmp
sbb
add
push
iret
repz
add
jae
es
cmp
jle
xchg
or
daa
add
pop
adc
fisttpll
push
daa
and
jb
xchg
cmp
cmpsl
inc
insb
pop
jo
add
in
ficomps
aaa
push
mov
insl
xchg
inc
or
xor
cmp
dec
pop
cmp
dec
xchg
adc
jne
mov
lea
daa
iret
add
push
pop
jb
jb
into
ficoms
out
lods
inc
mov
adc
dec
and
dec
cmp
xchg
and
dec
cmp
popa
mov
pcmpgtb
in
jbe
cmpsl
test
mov
cmp
scas
push
add
fbstp
fcmovne
add
add
dec
das
dec
aaa
sub
push
jb
in
mulb
shr
push
push
mov
ss
jle
xchg
adc
xor
dec
and
bound
xchg
arpl
lock
aas
add
arpl
gs
pop
inc
dec
xor
test
jg
arpl
xchg
pushf
push
dec
int3
xor
lods
or
pop
dec
jns
dec
and
xor
dec
xchg
mov
dec
xchg
dec
dec
and
cmp
dec
lahf
dec
test
mov
fsub
xchg
inc
popa
push
fs
aaa
leave
sub
addr16
and
adc
jb
loope
daa
xor
sub
daa
pushf
dec
dec
insb
gs
push
pmulhw
in
push
push
mov
in
in
push
lahf
push
stos
push
mov
sahf
out
faddp
push
or
or
or
out
loope
in
or
out
add
or
iret
sbb
and
adc
repz
adc
adc
repz
gs
jae
adcb
cmpsl
push
negl
cmp
rclb
and
shlb
repnz
push
nop
scas
or
cmp
inc
rorb
daa
inc
addr16
scas
daa
push
jo
or
push
pusha
push
dec
pop
xor
test
cmpsl
scas
push
add
xchg
add
inc
pop
jo
aas
add
adc
out
fadds
sbb
fimull
pop
push
push
popf
mov
add
dec
cs
out
test
insl
leave
ror
jbe
mov
fmull
sbb
cmc
xchg
xchg
in
in
imul
daa
imul
cmpsl
cmp
cwtl
scas
sub
pop
xor
daa
js
push
push
pop
push
arpl
mov
sub
push
lahf
xchg
xchg
pop
leave
pop
push
push
push
sbb
fsubrs
loopne
call
push
add
ss
mov
push
in
add
icebp
xchg
pusha
adc
in
xchg
xchg
inc
dec
imul
ret
and
imul
mov
iret
fwait
lds
add
leave
jae
mov
xchg
les
ficoms
nop
fucomi
push
ret
jns
sahf
cmp
xor
pop
cld
jb
xchg
inc
es
mov
jbe
push
mov
scas
pushf
dec
dec
lds
inc
push
xchg
insb
cltd
dec
pop
fwait
adcb
movsl
cs
pop
xchg
xor
das
push
fs
pop
insl
test
adcb
sbb
enter
insl
outsb
andl
push
outsb
iret
in
movsb
mov
out
ja
push
adc
and
setb
pop
cmp
mov
pop
mov
pop
packuswb
daa
adc
add
iret
mov
cmp
pop
sbb
lret
inc
push
jl
insb
outsl
mov
repnz
pop
jecxz
les
in
in
pop
sbb
pop
xor
and
in
cmp
xchg
add
popf
pushf
outsl
nop
sets
pop
cmp
pop
ret
pop
inc
push
cmpb
add
in
cmp
test
sub
jmp
xchg
dec
leave
mov
nop
dec
push
and
jno
shlb
mov
cwtl
add
in
outsl
cmp
pop
outsl
stos
pop
mov
in
in
mov
pop
rcrl
in
in
pop
jecxz
jmp
repz
outsl
fsub
in
pop
add
push
outsb
mov
lret
lret
adc
pop
and
pop
cmp
cmp
pi2fd
or
cmp
cmp
or
or
cmp
cmp
push
add
cmp
add
add
and
mov
addr16
xchg
jae
adcl
push
add
cmp
leave
mov
jo
std
inc
add
and
ja
mov
out
dec
addr16
insb
enter
je
jl
daa
test
mov
mov
xchg
setl
push
movsb
xchg
out
icebp
lods
pop
mov
or
sub
in
into
inc
dec
push
decl
xchg
xor
minps
ja
xor
or
push
and
pop
iret
addr16
daa
daa
fisttpll
push
emms
jg
cmp
mov
cmpsl
or
or
movzwl
xchg
mov
push
cmovle
adc
shlb
jmp
insl
push
aas
popf
add
cwtl
xor
ds
or
cmp
leave
imul
scas
push
loopne
daa
adc
mov
jbe
fcmovb
leave
leave
or
jmp
dec
cmc
jbe
invd
pop
jg
push
push
cmpsb
cmp
xchg
sbb
pop
dec
cs
pop
or
xchg
jl
jbe
pop
pop
pop
insl
push
mov
pop
push
pop
xchg
pushf
pop
and
add
mov
pop
roll
shr
jle
loope
jmp
dec
ds
or
ja
pop
xchg
and
sub
pop
ds
iret
in
enter
xlat
push
pop
pop
pop
mov
jl
pushf
pop
and
cwtl
mov
scas
mov
sahf
out
push
fiaddl
in
push
loopne
sahf
lock
or
pusha
setle
pop
adc
or
or
xchg
cmp
psubusb
xchg
jl
sahf
add
je
adc
xor
cmp
fistl
outsl
or
adc
in
jbe
sbb
and
sub
xor
leave
repz
cmp
inc
or
rcll
popa
xchg
loopne
popa
jns
out
and
into
add
xchg
sbb
shl
popa
cmpsl
out
popa
std
popa
cwtl
dec
cmpsb
mov
out
in
inc
mov
bound
mov
mov
nop
cwtl
jmp
jbe
inc
sarb
sub
decl
arpl
or
in
pop
incl
cmp
add
sbb
leave
nop
fwait
cmpsb
ja
and
leave
and
jmp
xchg
adc
aaa
jb
sbb
sub
scas
pop
lret
stos
xchg
in
repz
push
nop
jnp
jnp
movsb
mov
outsl
inc
into
cmc
in
test
fs
fs
xchg
and
fs
dec
jne
fs
or
jl
in
insl
in
clc
add
gs
mov
sbb
gs
cmp
enter
gs
gs
push
or
data16
pushf
mov
mov
gs
stos
pushf
pushf
pushf
pushf
mov
lret
push
mov
out
or
adc
setb
sbb
xchg
pop
leave
jge
push
mov
pop
jl
mov
xchg
adc
jb
xchg
sarl
fisttps
addr16
and
add
in
sahf
ja
cs
add
cmc
dec
call
nop
xlat
addl
xlat
das
lahf
fcmovne
inc
mov
mov
xchg
dec
and
pop
push
and
lahf
adc
xchg
mov
cmpsl
leave
aam
in
jg
iret
mov
fidivs
add
call
aad
mov
mov
movsb
fwait
cmp
verw
ja
cmp
out
out
push
iret
rorl
or
ud2
decb
or
push
imul
enter
cmp
xor
inc
fwait
in
imul
leave
leave
jge
add
test
add
cmp
out
xchg
push
mov
adc
and
in
enter
push
add
bound
addr16
sbb
mov
js
comiss
mov
push
pushl
push
fiadds
rorl
xchg
test
in
pop
pop
ds
hlt
push
cld
push
imul
pop
pop
pop
adc
sbb
and
sub
pop
pop
pop
pop
xor
cmp
inc
imul
mov
push
pop
ud2
pop
or
or
push
xchg
xchg
xchg
xchg
add
out
sahf
sbb
sbb
out
sbb
sbb
sahf
out
pop
mov
and
leave
leave
xchg
pushf
movsb
and
in
iret
repz
out
xchg
int
cwtl
andb
mov
xchg
clc
mov
inc
arpl
pushf
jl
and
fcmovnbe
lcall
leave
push
xchg
outsb
lar
pop
insb
mov
test
cs
jb
inc
inc
insb
xchg
cmpsl
setg
xchg
out
xchg
cmpsl
push
pushf
rorb
dec
dec
dec
fsub
call
mov
aas
clc
mov
test
invd
or
or
repz
and
sub
mov
cmp
cmp
cmovo
cmp
dec
adc
insl
pop
leave
repz
adc
cmpb
insl
mov
add
ror
insl
mov
fisubrs
insl
hlt
push
add
addr16
or
or
test
mov
dec
xor
dec
outsb
iret
inc
jbe
aaa
push
push
add
pop
outsb
popa
outsb
pop
inc
cmp
imul
cmp
pop
or
fs
xchg
leave
lret
cwtl
outsb
mov
jb
jb
outsb
outsb
xchg
and
scas
and
adc
and
repnz
pushl
leave
leave
inc
push
pop
outsw
and
pop
aaa
je
subb
mov
repnz
xchg
xchg
fcmovnb
mov
xlat
fists
outsl
pop
out
mov
cmp
stc
cmpsl
dec
mov
inc
repnz
sub
jns
iret
add
mov
xchg
sbb
scas
test
mov
scas
or
adc
inc
mov
jl
ss
jo
test
sete
pushf
add
add
dec
mov
les
fmull
out
or
fcompl
in
cmp
repz
inc
ds
repz
adc
or
pushf
stos
cmp
jo
mov
in
dec
jno
addps
xor
repz
add
xchg
push
std
insb
push
incb
xor
cmp
add
pop
mov
fucom
jns
mov
mov
in
rorb
dec
ds
push
jb
push
out
ret
xchg
jb
jb
das
das
dec
pushf
in
addl
jb
jb
mov
cmp
aaa
cmp
mov
repnz
rolb
push
fsub
aas
repz
lock
or
test
stos
iret
or
add
outsb
in
mov
mov
out
in
sub
push
pop
push
mov
jae
inc
push
add
mov
repnz
lar
pop
push
repz
repz
pusha
or
jo
js
xchg
jae
push
aam
jo
jae
adc
scas
daa
iret
sbb
mov
int3
aam
fiadds
push
add
aaa
sysret
hlt
cld
pop
in
loopne
add
pop
or
outsl
adc
aad
and
sub
mov
push
sbb
cmp
inc
je
adc
lea
je
xchg
mov
add
leave
jae
cmp
test
int3
pushf
cmp
pop
lret
rcrl
paddsw
jns
jg
mov
push
mov
sbb
pop
and
push
jne
jg
adc
adc
mov
nop
push
out
enter
daa
push
dec
push
jne
pop
jne
xchg
xchg
mov
mov
outsb
mov
dec
out
enter
pushf
push
andl
mov
cwtl
jo
out
test
daa
rcl
jbe
or
icebp
in
and
add
jbe,pn
mov
jbe,pt
or
dec
ss
lods
and
out
push
jns
nop
inc
push
daa
movsb
adc
pop
mov
fs
jbe
fs
jbe
pushf
push
fs
ja
adc
out
pushf
ja
push
push
xor
leave
xchg
and
ja
ja
pop
xchg
cmp
enter
xchg
push
rorb
lock
and
das
clc
ja
js
js
je
enter
js
js
xchg
cmp
mov
lock
or
fnsave
daa
sbb
mov
data16
popf
pushf
pushf
pushf
orb
mov
push
pop
mov
out
jb
js
cmpps
lret
xchg
lock
outsl
pop
aaa
clc
jns
add
xchg
push
icebp
and
jns
sub
pusha
jns
push
js
orb
aas
and
mov
or
xchg
mov
mov
repz
sahf
out
add
fmull
add
out
repnz
iret
and
cmp
or
or
xchg
cmp
gs
push
add
xchg
push
xchg
mov
test
pop
imul
add
push
cwtl
in
in
loopne
lock
dec
out
lock
jnp
out
repnz
mov
in
and
mov
dec
jnp
cmp
add
xchg
pop
ja
jmp
add
cmpsl
push
mov
ret
fwait
pop
xor
loopne
outsl
jnp
cmp
xchg
jl
and
sbb
jb
sub
dec
xchg
pop
str
pop
jl
jl
jl
cmpb
mov
pop
popf
pop
and
or
mov
mov
add
jb
add
jge
imulb
outsb
jae
pop
push
aaa
sub
mov
jge
daa
inc
cmpsl
xchg
out
jb
push
xchg
add
jbe,pn
xchg
setbe
sahf
add
aaa
jns
lar
divb
or
fstps
adc
in
jmp
leave
xor
sbb
mov
das
jle
aaa
ja
fmulp
inc
repnz
jae
xchg
in
cmp
test
nop
cmp
pushf
call
sub
out
jg
mov
mov
jg
addr16
pop
and
pushf
dec
pushf
jo
les
jg
fisttpll
mov
mov
jg
daa
sarb
in
dec
popf
rol
push
push
jmp
lsl
mov
cld
jg
in
inc
filds
or
adc
xchg
cltd
aas
movups
xchg
orb
fiadds
push
add
subb
adc
jo
js
sbbb
jb
sgdtl
push
mov
nop
sbbb
xchg
outsb
mov
pop
ud2
iret
repz
sahf
adc
enter
pop
cmp
repz
sbb
sbb
ret
xchg
out
lock
sbb
add
aaa
push
xlat
lcall
and
fwait
les
daa
and
inc
popf
in
push
cmpl
fwait
pop
jne
orl
xchg
cmpsb
addl
repz
fadds
repnz
sahf
cmp
clc
sbbl
daa
out
or
or
andb
js
mov
sub
mov
pop
and
cmp
and
addr16
add
or
enter
addb
addb
or
and
punpckldq
or
cmp
jp
jp
lcall
or
jns
sbb
xchg
jns
out
push
mov
mov
in
lret
ficompl
loop
push
repnz
sub
dec
cli
lar
mov
push
pop
ficoml
push
lcall
add
test
push
or
outsb
daa
orb
or
cmp
or
repz
xor
bound
lahf
inc
xlat
out
jb
out
xchg
adc
xchg
int3
adc
jns
das
and
and
pop
mov
cmp
or
inc
sbb
out
or
mov
sbbl
add
fbld
or
lahf
adc
mov
mov
mov
mov
xchg
ja
aas
or
inc
test
mov
xchg
xchg
sub
xor
decl
pop
sub
vmread
lret
pop
les
mov
enter
or
insl
daa
leave
outsl
sidtl
rcr
loope
xchg
and
lahf
enter
sbb
cmp
adc
pcmpgtb
xchg
iret
in
pop
xchg
addl
movsb
push
add
and
dec
and
cmp
mov
mov
pop
fsub
jns
add
dec
mov
enter
mov
arpl
imul
pop
jnp
or
mov
and
daa
push
nop
mov
xchg
iret
in
mov
loopne
ret
call
fsubl
adc
mov
leave
cmp
xor
ficoml
fmuls
lds
sarb
pushf
enter
repz
mov
mov
cmp
in
push
daa
mov
dec
fmuls
loopne
xor
or
cmp
mov
inc
mov
das
or
lahf
adc
movsl
jo
dec
cmp
enter
mov
cmp
sbb
mov
shrl
fistpl
pmaxsw
adc
xchg
xchg
push
jb
cltd
leave
enter
faddl
mov
jns
leave
dec
push
sbb
in
mov
pusha
push
mov
popf
cmp
mov
push
and
mov
fimuls
and
mov
ficoml
jmp
xchg
dec
push
sbb
xchg
jnp
lea
pop
and
add
mov
dec
push
add
repnz
decb
mov
mov
mov
inc
dec
movl
sbb
push
mov
outsb
mov
fmull
mov
inc
test
in
fs
mov
out
fucomi
lds
int
out
jg
fmulp
cltd
jbe
decb
push
or
out
push
or
or
ds
xchg
out
or
dec
ds
and
out
adc
dec
xchg
popl
jns
xchg
out
add
add
pop
jb
out
mov
repnz
mov
rorb
repnz
out
repnz
nop
hlt
repnz
nop
push
nop
es
dec
vpmacsdql
dec
xchg
xchg
xchg
xchg
nop
pop
nop
bound
out
xchg
nop
sbbb
mov
xchg
jns
out
and
jns
out
and
and
sahf
es
daa
aam
fisttps
out
or
sub
mov
leave
rorl
sub
add
push
dec
xchg
xor
sub
rcrl
shrl
ficomps
dec
xchg
fistps
push
aas
push
cmp
pop
xchg
pusha
xchg
add
popf
adcl
jb
insl
mov
iret
mov
sgdtl
inc
sahf
xchg
ja
fidivrs
mov
loopne
stos
repz
dec
out
push
add
or
and
out
setae
jnp
xchg
xchg
xchg
xchg
lods
into
out
iret
leave
enter
adc
leave
repz
es
jae
cmp
dec
outsb
mov
add
imul
setno
das
int
aad
fnsave
cmp
clc
mov
pushf
dec
mov
repnz
jge
inc
aas
cs
ds
sahf
xchg
fldt
addr16
outsl
ja
xchg
out
jns
mov
mov
ret
xor
pushl
repnz
movhps
xor
jae
aaa
das
aaa
cwtl
jecxz
repz
cmp
xchg
pop
cmp
and
mov
mov
push
push
scas
mov
push
adc
xor
xlat
and
sbb
and
iret
pcmpeqb
inc
repnz
shlb
sar
jnp
leave
lock
ja
xchg
movups
cmp
jae
add
add
jbe
pop
dec
push
or
iret
rorl
or
je
cmp
cwtl
adc
jns
xchg
mov
jns
xchg
out
iret
ficoml
in
xchg
out
lock
mov
pop
mov
pop
sbb
daa
iret
jae
daa
xor
cmp
cmp
push
pop
cwtl
lret
lret
pop
cwtl
mov
jg
and
jl
mov
dec
and
pop
push
add
xchg
enter
in
add
cltd
cltd
setle
mov
clts
inc
mov
das
push
push
or
stc
aam
pop
or
cltd
push
iret
rorl
or
femms
js
enter
adcb
cltd
sahf
ja
mov
push
adc
cmp
rorl
add
xchg
sbb
rorb
cmp
sbb
mov
clc
mov
mov
xchg
out
into
add
push
inc
fisubs
movswl
lcall
lcall
int
and
lcall
mov
dec
push
mov
pcmpgtd
repnz
mov
cltd
mov
in
jb
int3
aam
fsubl
jns
in
in
xchg
and
cmp
ss
fwait
pop
nopl
add
out
cmp
aas
push
movb
sahf
xchg
fwait
or
jb
cmp
jb
ja
ds
leave
leave
inc
popf
movsl
lods
dec
and
fcomps
popf
loopne
call
daa
js
adc
push
jne
pushf
cwtl
mov
inc
outsl
cmp
in
dec
orps
add
jns
xchg
out
outsb
jbe
jle
in
cmp
mov
daa
daa
mov
xlat
mov
ror
jl
daa
shll
jns
xor
cld
add
or
mov
loope
xchg
outsb
xchg
popf
inc
xchg
add
leave
dec
add
repz
jp
orb
pop
lcall
jl
pushl
mov
in
in
fildll
fsubrp
cmc
pop
std
fisttps
sahf
jbe
sbb
out
sahf
dec
and
sbb
mov
jns
xchg
out
add
pop
pusha
xchg
add
leave
out
push
popf
fsubrl
xchg
setnp
xor
mov
aas
fsubp
ja
pop
rorb
fistl
leave
adc
cmp
fnstcw
out
pop
dec
add
cmpsb
js
lahf
pop
fs
insb
or
cltd
dec
push
sub
shrl
mov
enter
mov
js
cmp
loopne
add
leave
lret
lcall
mov
mov
imul
jmp
add
out
push
fisubs
jns
jns
mov
fldenv
in
out
mov
xchg
xchg
xchg
scas
fists
mov
xor
cmp
inc
mov
xchg
xchg
xchg
mov
jle
mov
xchg
mov
mov
jb
insl
pop
nopl
aas
in
in
sbb
sbb
out
in
push
adc
jns
shrb
cs
iret
cmp
in
push
xor
pushf
add
xchg
xchg
mov
outsb
mov
mov
repz
or
cmp
repz
cmp
iret
ds
aas
dec
inc
pop
cmp
repz
gs
jo
in
fdivp
jnp
fiadds
cmp
enter
fimuls
repz
cs
dec
push
cmp
daa
or
iret
repz
push
sub
push
inc
dec
dec
outsb
daa
dec
pop
push
bound
in
dec
js
orl
pushf
pushf
pushf
cmp
cltd
movsb
scas
int
mov
mov
cltd
cmpsb
xchg
mov
sahf
aaa
jb
adc
sub
in
add
inc
inc
cs
dec
or
enter
xadd
ja
mov
push
adc
pusha
ds
out
sahf
adc
jo
js
or
adcb
movsb
sahf
out
pop
push
sbb
pop
cmp
movsb
push
sbb
adc
repz
lock
push
clc
pop
stos
mov
and
mov
jb
movsl
cmp
iret
jae
dec
dec
add
add
pop
pusha
pop
fisubrs
pop
nop
in
adc
test
mov
adc
mov
mov
out
movsl
inc
inc
inc
inc
movsl
movsl
movsl
movsl
daa
dec
mov
pop
clts
loopne
mov
cmpsb
sub
or
movsl
cs
xchg
xchg
cmpsb
adc
pop
cwtl
dec
ss
cmpsb
mov
pop
cmpsb
pusha
cmpsb
pop
push
repz
add
add
xchg
mov
mov
fdivl
ret
lret
jns
daa
daa
rcr
mov
test
jg
cmpsl
adc
and
push
mov
cmpsl
xor
cmovo
cmpsl
leave
in
jbe
popa
cmpsl
insb
emms
pop
or
leave
leave
lea
cltd
mov
mov
mov
adc
cmpsl
mov
sti
cmpsl
push
test
push
sbb
fucom
push
sbb
sbb
daa
fmulp
repz
xor
cmp
jb
jns
pop
punpckhwd
popf
cmp
jg
daa
mov
dec
jae,pt
sub
mov
bound
pop
test
add
fldl
nopl
add
sub
test
mov
test
fmulp
repz
mov
je
out
mov
add
add
push
mov
in
xchg
test
loope
in
add
test
loop
stc
test
stos
adc
jae
mov
sub
xor
outsb
repnz
cmp
push
cmpsl
fwait
cmp
inc
push
pop
dec
mov
cmp
push
and
and
and
daa
je
es
fidivrs
stos
mov
sahf
out
xchg
sub
fldcw
fcmovnb
inc
dec
xor
sub
into
repz
inc
xchg
enter
pop
ret
stos
sti
stos
mov
stos
adc
ljmp
lds
ficoms
dec
stos
push
jg
out
ss
stos
jl
test
push
ror
repz
frstor
ret
loopne
call
push
add
add
stos
xchg
mull
lods
outsl
adc
add
jns
daa
pop
xor
cmp
jns
sysret
push
sahf
out
fimuls
movd
sbb
jbe
incl
mov
xchg
lods
mov
lods
push
leave
repz
les
lods
lods
lods
cmp
repz
cs
add
sahf
cmp
lods
out
or
cltd
dec
ds
jo
lret
or
lods
outsl
out
mov
mov
mov
jae
jns
shrl
pushf
loope
jmp
ljmp
in
aas
adc
aad
xchg
xchg
and
ss
scas
pop
out
cmp
push
pop
push
bound
sbb
cmp
xchg
insl
jnp
xchg
ja
cmp
sbb
push
in
js
and
and
pop
aas
in
out
push
and
repz
push
cmp
xchg
imull
sub
mov
push
sbb
scas
das
cs
mov
subb
scas
jns
xchg
and
push
push
jns
sahf
out
pop
ror
leave
leave
in
in
fmuls
loopne
xor
call
out
mov
out
or
adc
adc
out
fldt
enter
mov
das
xor
in
mov
pabsd
inc
inc
fucom
jns
sbb
push
nopl
push
sahf
xchg
out
js
orb
nop
cwtl
mov
test
sub
out
in
push
sub
fcomps
sub
popf
call
js
pop
jmp
sbb
or
adc
scas
ss
stos
push
lret
push
xor
iret
add
inc
in
ds
fidivl
push
xchg
sub
push
adcl
add
jmp
push
add
aas
inc
push
sarl
sub
adc
push
mov
jbe
dec
xchg
pop
inc
xchg
dec
aaa
pop
sub
aaa
inc
cmc
dec
sbb
or
dec
leave
push
push
inc
cmp
out
sahf
cmp
sub
sbb
clc
enter
cmp
repz
aam
repz
ror
enter
mov
mov
mov
iret
repz
mov
repz
push
push
dec
inc
sub
and
or
add
pushl
sbb
jne
push
push
add
sbb
repz
or
leave
leave
repz
or
aaa
xchg
or
adc
leave
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
out
xchg
addl
dec
dec
mov
lret
sbb
aas
into
aas
xlat
pop
sbb
enter
add
adc
and
adc
aam
mov
fscale
test
mov
dec
adc
pop
bound
cmp
xor
add
movsb
add
repnz
mov
cmpsb
fisttps
mov
cld
inc
cmc
ja
inc
jle
test
shll
xor
cmp
enter
inc
mov
iret
mov
in
call
mov
push
add
mov
xor
fcomp
loopne
jb
jle
sahf
mov
pop
inc
popl
and
xor
insb
ljmp
in
fdivr
inc
xor
fnsave
inc
pop
pop
jle
mov
xlat
incl
xchg
rcll
mov
das
and
pop
add
mov
insl
hlt
xchg
out
pop
push
iret
repz
or
sahf
out
lcall
jl
out
push
sbb
hlt
int
cmp
rcrl
mov
icebp
cmp
pop
push
cmp
dec
imul
fmul
mov
jmp
or
push
js
lret
in
jne
cmp
jg
push
ljmp
push
sub
push
stos
les
pop
sarl
aas
mov
or
fdivr
inc
pop
pandn
add
pop
mov
and
mov
push
sub
xorb
daa
cmp
icebp
addr16
push
push
pop
fst
inc
insl
inc
jg
inc
push
fdivrl
xor
pop
test
xor
cmpsl
push
sbb
fisubrs
scas
cmp
inc
pop
jl
insl
inc
jg
out
push
cs
out
fcoms
add
shll
je
add
and
cs
push
ja
inc
call
cs
sarl
das
cmp
push
pop
repz
jecxz
push
and
clc
loop
out
dec
push
xor
out
jns
jnp
ds
neg
sti
adc
in
push
and
push
or
jnp
repz
add
push
cld
adc
sahf
idivl
hlt
sbb
adc
rcrb
jns
out
enter
mov
and
jns
lods
and
dec
mov
jmp
jg
movups
push
mov
daa
xor
xchg
aaa
test
cld
xorb
sub
faddl
fidivs
idivb
cmp
pop
js
jns
out
mov
repz
jns
ds
xor
add
push
pop
loopne
sahf
out
xchg
mov
repnz
out
iret
jae
das
push
dec
insb
push
loopne
sub
das
mov
xchg
pop
enter
inc
pushf
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
decl
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
rep
lock
jmp
mov
subb
fwait
xchg
and
and
pushl
cltd
add
sti
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
sbb
jmp
loop
mov
jp
popa
mov
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
lcall
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
inc
cld
mov
pop
ficomps
frstor
or
push
pop
pop
inc
inc
je
inc
daa
cmpsl
inc
push
inc
push
dec
jnp
decl
sub
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
jmp
mov
rclb
mov
sub
mov
sbb
dec
jno
push
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
call
jb
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fstpt
jne
iret
or
fcompl
shrl
push
ficoms
push
xlat
enter
mov
and
pushl
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
fbld
add
mov
movsl
in
lahf
xor
ss
pop
js
stc
fbld
les
push
loope
or
ljmp
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
incl
sbb
hlt
or
fnstenv
adc
mov
mov
bound
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
ljmp
adc
ret
movsb
sti
hlt
shrl
imul
mov
jmp
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
decl
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
ljmp
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
incl
push
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fcomip
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
lcall
or
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
decl
andl
shrb
rclb
or
add
mov
das
es
mov
or
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ljmp
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
lcall
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
jg
dec
push
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
jmp
or
adc
sahf
gs
clc
sar
imul
push
js
or
decl
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
mov
mov
fidivrs
mov
jmp
out
repnz
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
lock
filds
sub
cmp
inc
add
dec
sahf
pop
push
dec
push
movsb
add
aad
push
xlat
fcomp
out
sahf
out
fcmovnu
fstp
jns
jns
loop
in
call
jmp
sahf
out
sahf
repz
cmc
div
clc
aaa
sahf
out
stc
cli
sti
cld
daa
je
movsb
dec
adc
adc
sub
lahf
mov
out
and
cmp
jnp
inc
push
jbe
add
dec
bound
ficoms
insl
bound
jne
mov
je
push
inc
inc
inc
in
cltd
out
dec
or
inc
dec
sub
outsl
aas
lds
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
push
inc
mov
insl
pop
insb
imul
inc
insb
gs
push
dec
inc
ficomps
inc
or
dec
cmpsb
dec
mov
lock
loope
aad
xor
das
rclb
andb
inc
xchg
mov
push
jbe
push
bound
in
sub
inc
xor
jle
pop
in
adc
inc
dec
js
adc
cmp
adcb
rcrb
xchg
insb
popa
jns
inc
lds
pop
dec
insb
orb
cmp
lock
inc
inc
je
aaa
aas
add
cmc
inc
push
and
adc
popl
jae
jne
mov
jp
das
pop
inc
and
xchg
push
jbe
pop
inc
inc
or
mov
sbb
inc
pop
addr16
js
je
jo
inc
inc
add
ds
gs
mov
out
pop
mov
pop
int
push
dec
cmp
inc
or
fisttps
fs
ja
push
pop
inc
outsb
jne
push
popa
insl
xchg
pop
insl
mov
jmp
push
xor
xor
mov
insl
fwait
or
add
lods
int
mov
pop
jo
in
sbb
pop
rorl
subl
add
xchg
int3
push
add
adc
popa
add
lods
pop
mov
lahf
cmp
mov
sbb
sub
xlat
mov
xchg
out
or
lock
jb
or
xor
jo
js
adc
outsl
sub
outsl
popa
mov
dec
hlt
push
jno
push
xor
stos
loop
lds
pusha
jb
pusha
in
nop
test
pop
cmp
push
out
arpl
cmp
mov
jo
cmpsl
xchg
and
xchg
xchg
inc
xor
shrb
stos
gs
push
xchg
insl
jae
inc
addr16
outsl
arpl
insb
adcb
or
xlat
pop
cmp
jle
push
bound
ja
inc
jbe
lods
cmpsb
outsl
xor
addr16
xchg
mov
xor
inc
daa
das
adc
int3
lcall
push
add
add
xorb
sub
iret
xchg
cmc
mov
mov
mov
and
dec
outsb
push
inc
pop
mov
sbb
daa
sbb
stos
push
rclb
inc
jg
inc
push
inc
dec
pop
bound
fsqrt
push
jns
arpl
je
mov
in
push
addb
insl
aaa
pop
stos
loopne
stc
pop
inc
and
test
dec
xlat
imull
daa
sub
add
add
push
push
add
adc
dec
xor
fdivr
loopne
adc
sbb
in
dec
inc
dec
adc
pusha
add
outsb
adc
es
add
add
mov
add
pop
pop
push
or
or
or
or
or
or
push
adc
adc
push
adc
push
add
pop
sbb
adc
adc
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
fldcw
or
add
and
add
sahf
lock
add
ljmp
rcrl
jb
imul
add
cmp
call
cld
and
inc
push
adc
pop
and
xor
inc
mov
adc
xor
addb
and
js
inc
add
fbstp
dec
push
inc
add
push
dec
shlb
test
push
adc
or
inc
and
add
cmp
dec
inc
or
pop
push
and
test
add
into
add
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
mov
dec
mov
sub
rcr
push
ret
incl
jne
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
inc
je
pushl
les
fsts
dec
push
loopne
inc
mov
cmp
adc
out
cmp
xor
and
hlt
pushl
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
and
pusha
add
std
or
clc
pop
add
lds
cld
cli
and
mov
fiaddl
jmp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
inc
mov
fsubr
push
stc
or
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
jmp
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
fistpl
lahf
xor
lcall
fs
scas
mov
pop
pop
mov
incl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
test
jmp
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
mov
dec
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
push
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
lcall
int
arpl
push
out
or
push
ljmp
jg
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
pop
in
clc
xchg
jmp
sbb
add
pop
decl
mov
mov
sub
pop
mov
jl
rorl
lahf
subb
push
gs
jg
hlt
push
add
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
push
pop
xor
jns
mov
in
jne
push
dec
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
call
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fdivr
mov
lcall
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsb
dec
aaa
xchg
in
add
inc
adc
loope
fisttpll
push
fnstsw
cli
push
push
push
idivl
cmp
fildll
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
pushl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
adc
ljmp
cli
je
scas
cmpsb
orb
mov
in
fistl
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
mov
cmpsb
xor
add
lea
jg
gs
std
cmp
mov
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
lcall
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
cmp
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
std
inc
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
jmp
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
clc
add
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
fwait
or
in
mov
jb
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
cmp
mov
sar
adc
lahf
xor
out
push
in
inc
imul
dec
push
in
fildl
fsubrl
lock
and
pop
pusha
inc
sbbb
mov
add
mov
repnz
and
mov
adc
clc
or
push
rcrl
sarb
ret
jmp
hlt
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
cli
ljmp
dec
adc
lahf
mov
or
out
lcall
std
rolb
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
and
add
pushl
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
outsl
lock
test
cld
paddsw
pop
stc
out
mov
clc
push
std
mov
jmp
test
dec
mov
dec
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
mulb
inc
lods
movsb
or
repnz
push
decb
mov
jl
call
pop
cmc
fisttpl
cmpsl
lret
pop
in
cmp
dec
filds
mov
pop
lock
jmp
hlt
dec
mov
push
mov
sbb
xlat
inc
aas
mov
jg
mov
loopne
fisttps
addr16
sbb
cld
daa
jp
std
adc
outsb
cmp
inc
cltd
or
mov
ret
nop
cmp
das
incb
adc
stos
imul
cmc
cld
idivl
mov
and
loope
jae
shll
je
jge
call
mov
jg
stc
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
mov
pop
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
mov
xchg
stos
jmp
xor
sarl
jne
push
cmp
repz
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
mov
cwtl
arpl
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ljmp
pop
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cli
jmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
smsw
inc
xchg
int3
les
push
cmp
pop
mov
bsf
popf
int3
pop
iret
and
add
fdivrp
call
mov
loope
push
sbbl
test
mov
xor
xor
jg
imul
mov
mov
xlat
mov
aad
xchg
out
push
mov
repz
xor
jg
pop
jge
mov
mov
sub
std
mov
cmp
pushl
test
xchg
loop
sub
add
sub
pop
ljmp
decl
fninit
mov
xorb
clc
push
movsl
lret
cld
inc
insb
cmc
pusha
and
sbb
inc
pushl
xor
and
adc
cltd
imul
icebp
filds
cmp
xchg
mov
pushl
dec
dec
push
call
movsl
mov
clc
test
test
jge
adcl
xchg
push
xor
jl
pushl
ja
xor
cmp
xor
sbb
lods
lahf
fiadds
pop
mov
mov
jecxz
rcrl
cmp
push
lahf
pop
cmp
por
ds
pop
lcall
pop
push
not
ljmp
xchg
loope
cmpsb
in
insb
push
movsb
push
add
into
ret
mov
mov
int
jae
jbe
movsl
cs
xchg
adc
mov
lahf
and
ficomps
push
incl
dec
pop
rcl
jg
sbb
cmp
push
ret
test
xor
xchg
incl
xchg
dec
cld
or
mov
xchg
popa
xor
jae
stc
stos
or
adc
push
xor
jecxz
cmc
decl
add
bound
and
outsb
in
mov
mov
sub
stos
enter
cli
outsl
int3
mov
jmp
pop
shrb
es
adcb
pushl
into
mov
mov
jo
ja
fwait
popf
cmpsb
xchg
loopne
cmc
dec
pop
xchg
sub
jg
outsl
mov
clc
aam
pop
js
sub
adc
loopne
xchg
bound
dec
mov
xchg
lahf
sahf
mov
mov
js
xchg
arpl
fcomps
ljmp
les
add
xor
imul
fisttpll
fdivs
ljmp
sub
push
inc
insl
imul
push
sbb
xor
cmp
xor
xor
mov
jmp
dec
bound
outsl
in
mov
popf
add
xchg
pop
and
cmpsl
xchg
imul
aam
ljmp
pusha
imul
mov
lcall
mov
mov
ljmp
rolb
pop
dec
repnz
flds
mov
fwait
or
pop
shlb
jmp
xchg
mov
jl
loopne
jmp
push
dec
ss
mov
cltd
fnop
jmp
decl
xchg
cld
fs
cmp
dec
iret
xchg
sbb
popa
test
mov
icebp
mov
int3
xor
or
pushl
repnz
add
dec
cmp
sbb
sti
mov
dec
xor
in
add
lcall
or
aas
xor
fisubrl
dec
cmpsl
jb
fstl
mov
fwait
dec
inc
addb
dec
mov
ljmp
fidivrl
push
xchg
mov
cs
pop
inc
mov
adc
or
and
mov
mov
mov
jmp
jecxz
aas
aaa
push
loope
xor
push
loopne
jl
push
cmp
push
pop
jp
nop
push
ja
sbb
push
std
ficoms
int3
lds
leave
inc
dec
push
cwtl
pop
inc
out
mov
inc
pop
int3
sub
add
mov
fsubrs
jp
jne
jg
sbb
imul
hlt
cmc
ljmp
cmpsl
inc
jne
scas
test
and
popf
imul
incl
sub
push
sahf
add
cmpsl
adc
fs
cwtl
call
popf
pop
gs
dec
sub
push
cmp
cmp
movsl
aaa
ljmp
lcall
and
shlb
cmp
jmp
mov
and
pop
stos
push
and
jnp
push
sar
mov
popf
in
adc
pop
sbb
stos
push
and
cmp
out
mov
test
fwait
jl
adc
mov
xchg
aaa
aas
ficoms
push
imul
fs
jp
leave
mov
jmp
lods
jb
out
push
je
add
mov
cli
imul
xchg
cmp
insl
pop
ljmp
ljmp
std
cwtl
push
test
incb
dec
scas
sbb
out
incl
lcall
ds
add
jecxz
mov
xor
push
xchg
std
incl
jns
frstor
pop
add
mov
pop
push
mov
jg
jg
fdivl
inc
jg
or
out
cmp
pushl
cmpsb
mov
jge
jle
loope
dec
in
dec
xchg
test
lcall
das
xchg
test
je
test
in
mov
sahf
shlb
ljmp
movsl
or
into
pop
dec
sar
jo
mov
daa
adc
les
testb
sbb
lock
jmp
stos
sbb
pop
movb
xchg
ds
fs
mov
pushl
lods
lahf
clc
loope
sub
mov
icebp
aam
pop
loop
mov
add
dec
adc
ljmp
mov
leave
dec
addl
mov
mov
shll
mov
or
shll
mov
aam
adc
push
add
ficompl
imul
scas
sbb
incl
in
push
inc
outsl
ljmp
je
dec
in
sti
jmp
mov
dec
fisttpl
pop
inc
sar
bound
mov
int3
loope
out
loope
pop
into
movsl
dec
pop
pop
icebp
mov
jl
inc
cmp
fildll
ret
lds
stc
sbb
dec
xchg
icebp
ljmp
lret
xor
in
pusha
imul
adc
bound
or
mov
mov
incl
iret
jl
shll
dec
ljmp
lcall
add
test
fimuls
cmpsl
pop
iret
add
pushl
sbb
hlt
adc
pop
mov
cs
jo
fsubrs
sar
call
xchg
es
sahf
jmp
jae
cwtl
or
or
mul
push
fisubl
lcall
sub
ret
and
dec
leave
jno
int3
loop
mov
mov
decl
adc
or
insb
sub
pop
out
mov
int3
dec
xorl
ljmp
int3
test
shl
clc
js
gs
lock
test
ds
pminsw
jle
ljmp
pop
jo
imul
lea
mov
subb
dec
call
adc
pop
jns
cwtl
ret
int3
hlt
dec
pop
outsb
hlt
mov
jp
pop
adc
push
shrl
popa
cld
popa
push
inc
ljmp
and
out
incl
insb
inc
popf
mov
jge
lods
push
pop
shl
cld
cmc
mulb
ljmp
call
lret
bound
jnp
pop
js
push
call
push
jecxz
test
out
cmp
add
push
cmpsl
insl
xchg
mov
mov
xchg
test
lahf
scas
adc
push
lcall
push
and
jg
adc
pushf
push
ja
addr16
arpl
aam
jg
incb
mov
dec
cmp
cs
addr16
push
sbb
and
call
push
inc
jg
push
scas
popf
int
in
fadd
cwtl
cmp
sbb
int
mov
rcr
lret
xor
jg
sarl
es
shll
push
loope
xor
rcrl
lods
decl
ds
push
inc
cmp
add
inc
lret
xchg
and
mov
nop
and
test
dec
outsl
sbb
adc
adc
rcrb
lods
scas
out
cmp
fdivrp
mov
in
cmp
mov
lods
adc
ja
scas
clc
lcall
add
mov
pop
cmpsb
xorb
mov
addr16
call
outsb
jle
push
test
insl
adc
fidivrs
ds
mov
mov
jne
mov
jg
push
xchg
sub
sub
jns
repz
shr
fisubrl
pop
mov
dec
ret
mov
arpl
test
xchg
cmpl
adc
xor
jg
ja,pt
outsl
stc
movsl
nop
out
notl
cs
test
pop
aam
test
inc
inc
sbb
iret
cs
ss
sbb
inc
repz
push
sahf
ss
popa
push
outsb
dec
in
jno
sub
decl
xor
mov
mov
mov
mov
xchg
push
shlb
and
call
cmp
imull
push
iret
sbb
cmpb
iret
and
sub
nop
cmp
ljmp
mov
fimuls
mov
jecxz
mov
xchg
inc
test
jg
inc
mov
decl
push
pop
inc
or
pop
dec
jp
mov
mov
dec
pop
add
gs
jmp
mov
int3
enter
xlat
or
dec
dec
and
ljmp
push
push
mov
pop
pop
mov
bound
gs
mov
loop
mov
iret
lcall
rcrl
aam
fidivs
mov
sarl
dec
or
and
sbb
lcall
mov
xor
inc
addr16
add
push
fs
xchg
pop
mov
outsb
std
incl
pop
psrld
mov
imul
lods
push
xor
mov
pop
shrb
imul
daa
outsl
stos
iret
xor
push
out
jecxz
stos
inc
call
dec
mov
adc
sub
jg
lods
insb
xchg
sbb
ret
and
aam
je
in
sub
mov
ljmp
pop
popf
mov
jecxz
lods
das
outsb
ss
mov
int
fmul
push
jnp
xlat
mov
incl
cld
int
cli
test
jb
cmp
loop
hlt
adc
fwait
mov
pop
push
pusha
adc
jge
xorl
rclb
mov
orb
lret
push
mov
sub
fisubs
popa
icebp
lret
movsb
aaa
aam
dec
lret
int3
lahf
out
dec
hlt
sbb
incl
mov
sub
mov
scas
leave
push
xchg
pushl
fdivrl
dec
inc
cmp
lcall
aaa
mov
pop
mov
clc
decl
cli
add
inc
cmp
pop
inc
cmp
pop
mov
in
ljmp
scas
xchg
xor
popf
icebp
and
dec
mov
pushf
ficoms
push
movsl
int3
movsl
call
pop
adc
or
in
jo
xchg
xchg
jp
mov
aad
inc
pop
xor
dec
and
or
pop
ret
fmulp
lods
pop
inc
xchg
fucomip
mov
jp
shrb
jg
push
sub
pop
bound
pop
scas
or
xorb
testl
xchg
inc
mov
test
jecxz
pop
mov
xor
movsl
mov
aaa
add
addr16
out
js
aad
ss
mov
call
lahf
cmc
gs
scas
lods
imul
ss
mov
out
adcl
sbb
push
sbb
pushf
test
mov
cmp
js
xchg
sub
push
lret
ja
xchg
xchg
lahf
movsl
ljmp
rolb
sub
and
push
mov
addr16
fildl
neg
lods
push
jg
cld
aaa
frstor
aam
inc
xor
cli
insl
in
dec
cmc
out
sbb
jp
mov
into
xor
add
imul
inc
int
add
jne
jno
sar
jge
call
fisttpll
xchg
incb
mov
shrb
jnp
stos
jg
repnz
add
icebp
jmp
imulb
mov
push
add
lret
ljmp
sub
mov
fbstp
pop
rorl
ret
ficoml
js
ss
mov
push
cli
jmp
pop
in
cmc
pop
jb
movsb
lea
pusha
mov
rclb
ljmp
pushf
cmp
mov
and
inc
popf
dec
sbb
stos
add
sarl
call
ja
sbb
repz
lds
pop
fstl
stos
in
jmp
xor
ja
ud0
lcall
hlt
ss
js
push
js
cmp
or
inc
cmp
in
stos
inc
imul
call
in
lock
adc
out
mov
jne
fnstsw
jmp
xchg
repnz
mov
and
pop
movsb
inc
mov
outsl
xor
sub
incl
clc
push
inc
sbbb
test
and
or
fstl
lcall
push
or
imul
pop
adc
sbb
mov
pop
sub
lcall
testb
xlat
adcb
or
inc
pop
cs
rcrb
push
loope
adc
imul
fcomip
jmp
xlat
lock
mov
mov
cmp
mov
cmp
or
fisttpll
mov
rolb
mov
mov
fisttps
jae
call
aaa
xlat
and
adc
sti
and
jmp
mov
lcall
push
jns
adc
or
lahf
push
sarb
outsl
icebp
int3
jmp
mov
decl
xor
cmpsl
jnp
and
gs
or
jne
aam
and
mov
and
call
jne
mov
mov
test
add
inc
xchg
mov
out
stc
mov
mov
add
mov
cmpsb
xchg
lds
add
cmpsb
lret
dec
idiv
fwait
nop
dec
addl
and
dec
mov
xchg
cld
adc
push
sbb
sub
and
and
jl
cmc
xchg
or
pop
push
lds
xor
jl
test
stos
filds
cli
sti
push
or
lods
mov
pushl
inc
les
mov
ficompl
popa
dec
mov
fcomip
jmp
pop
dec
iret
shll
xchg
mov
and
iret
out
jo
in
decl
ds
sub
lds
lret
shll
and
mov
dec
loop
imul
stc
into
adc
xlat
insb
inc
xchg
imul
push
mov
jmp
ja
adc
mov
ljmp
iret
adc
sbb
fsts
cmp
mov
cmp
sub
jb
mov
push
or
adc
or
mov
mov
cs
mov
inc
sahf
nop
cld
push
clc
pop
lock
loop
lcall
mov
aaa
fmul
dec
pop
lods
scas
sbb
ss
mov
cmp
cli
incl
cld
call
rol
arpl
je
or
fsubrl
fimuls
pushf
iret
jl
test
adc
push
and
push
sbb
mov
lea
outsb
nop
mov
jle
xchg
pop
xor
fdiv
imul
mov
lock
adc
cmpsb
in
dec
xor
cvtps2pd
in
cmpsb
scas
mov
inc
pop
test
inc
sbb
push
jg
xchg
sti
and
xchg
sub
mov
pop
aad
ret
cwtl
or
mov
push
fidivrs
push
and
mov
push
and
push
outsb
mov
ljmp
imul
aas
in
xor
jb
jmp
int3
filds
in
aad
test
inc
sub
jmp
mov
pop
dec
mov
add
cmp
ljmp
lahf
jmp
shrb
inc
sbb
sar
stc
dec
pop
mov
and
test
decl
xor
xchg
xor
js
mov
push
jnp
rcr
rolb
decl
sbb
xchg
fstl
adc
inc
sub
push
jmp
jmp
adc
cmc
repnz
jge
ds
out
in
nop
mov
mov
or
fsub
dec
stc
lahf
mov
decl
inc
dec
enter
dec
scas
in
ror
fwait
stos
jno
jle
push
mov
mov
push
push
xor
lea
pop
sbb
sti
jmp
into
adc
xchg
stos
lds
lds
and
rcrb
call
xor
stos
fildl
xchg
sub
std
scas
shlb
and
sub
pop
mov
filds
leave
out
mov
lret
cmp
inc
xchg
mov
adcb
sbb
and
call
into
ds
jmp
ljmp
fadd
push
jl
fdivr
dec
loope
fisubrl
das
clc
jmp
sbb
sbb
imul
femms
rolb
out
cmp
pop
ret
inc
cld
cmp
testb
or
pop
dec
jns
pop
fwait
jg
push
mov
loop
repz
jo
xchg
mov
xchg
push
inc
int
test
add
mov
and
jmp
clc
inc
out
cmp
decl
xchg
clc
loop
fistps
cli
repnz
pushaw
push
add
aas
fisubrs
dec
out
jmp
test
pop
jno
mov
lahf
in
mov
sar
call
popl
inc
pop
push
aam
loop
mov
cmp
xchg
aaa
je
xor
ret
jae
je
out
add
loop
mov
jo
pushl
push
xchg
jle
popa
jp
xchg
cs
cmp
in
mov
inc
pop
mov
in
push
aaa
add
mov
pop
les
adc
xor
jg
inc
roll
std
je
out
inc
mov
outsb
dec
iret
inc
stc
mov
jge
stc
mov
imul
cld
push
insl
fisubs
sbb
cmc
mov
sbb
gs
es
bnd
stos
shl
aaa
lods
scas
jns
jg
sub
xchg
mov
ret
pop
aam
call
cld
dec
jb
movl
jne
push
inc
cmc
test
pushl
les
jp
loopne
jl
pop
mov
call
enter
sub
fldenv
ss
mov
push
mov
mov
stos
mov
xorl
sub
ja
decl
inc
sub
clc
xchg
inc
fsub
pop
adc
add
cli
jp
pop
daa
mov
push
xor
jno
cwtl
sub
push
sub
sub
mov
xchg
xor
mull
aaa
bound
shrb
clc
jmp
call
fsubrl
mov
fs
cmp
mov
adc
pushl
outsl
in
or
xchg
push
mov
xor
dec
cmpsl
pusha
inc
out
scas
fucom
ljmp
sahf
into
mov
mov
fnstcw
lret
jecxz
add
sbbl
stos
out
cmp
jp
jmp
mov
aad
hlt
and
push
pushl
sahf
mov
fcoml
mov
clc
les
push
jle
sub
cmp
mov
cltd
clc
cwtl
mov
fisttpll
mov
incl
shlb
mov
loop
dec
mov
cs
push
pop
push
mov
in
push
dec
adc
mov
int3
sarl
icebp
pop
jecxz
sbbl
sarb
subps
jno
stos
xchg
das
sar
cltd
sub
iret
xchg
push
inc
mov
sbb
pop
decl
enter
into
xchg
or
fidivs
push
mov
push
test
sar
lcall
decb
call
lcall
mov
repnz
cmp
pop
subb
push
mov
jecxz
movsl
pusha
xor
pop
push
stc
or
mov
enter
sbb
jp
and
xchg
sub
repz
pop
jnp
sahf
mov
scas
stc
js
add
add
mov
xor
into
mov
loope
lods
dec
movsl
cmp
clc
es
ljmp
add
cmp
lds
push
mov
mov
sbb
pushf
outsl
insb
repnz
sub
fistps
push
xor
sub
in
xchg
lcall
lods
sub
sbbb
mov
pop
mov
xlat
cmpsb
scas
lcall
mov
mov
es
jo
pop
cmc
lcall
mov
cmp
insb
iret
mov
sarb
sbb
lcall
dec
out
xor
lock
push
rcrb
dec
or
jg
or
dec
jg
decl
jae
imul
mov
mov
cwtl
movsl
scas
lods
xor
jmp
pop
inc
dec
test
test
out
incb
cwtl
sub
or
push
mov
ljmp
sbb
or
ss
cmp
sbbb
ja
dec
pushl
je
sub
sbb
sarb
xor
and
xlat
shlb
divl
inc
int
xacquire
pop
and
in
das
mov
divl
rol
pop
out
xor
jg
inc
push
xchg
movsb
fsubl
inc
and
jp
cs
inc
or
add
sti
mov
pushl
lcall
dec
andl
jo
in
insb
mov
out
cli
mov
xor
push
ret
test
leave
push
lock
xor
insb
testl
ljmp
fdivrl
inc
pop
es
stos
fstpt
sub
cltd
xchg
dec
inc
addr16
in
mov
jg
es
fdivr
shll
stos
xor
ror
rorl
outsb
add
push
mov
adc
incl
andl
mov
in
xchg
xor
out
sbb
fbstp
call
fsubrs
cli
fs
cmc
sbb
dec
inc
pop
cmp
pop
ds
rorb
sub
xchg
test
addr16
mov
or
arpl
lods
fdivl
fidivrl
mov
out
mov
decl
lds
jno
adc
jae
hlt
pop
or
cmp
lods
test
dec
pusha
gs
cmp
lcall
pop
aad
jg
shr
out
repz
pop
cli
push
jmp
movsb
fcomip
mov
js
arpl
test
lcall
ret
rclb
sub
push
push
mov
add
icebp
push
mov
ss
pop
sbb
testl
lcall
dec
xchg
stc
jb
aas
push
test
and
push
cmp
repnz
negl
out
push
movsb
jnp
jmp
enter
cmpsl
xor
add
push
jl
and
dec
xchg
int
rclb
decl
inc
or
aad
cld
das
xor
lods
ljmp
fwait
dec
outsb
enter
mov
pop
cmp
or
pop
stc
in
sbb
in
les
mov
add
inc
scas
adc
in
or
pop
enter
int3
jns
mov
call
pop
shrl
pop
push
nop
push
mov
and
inc
adc
pop
fisttpll
les
lods
call
push
test
push
lock
ljmp
shrb
outsb
outsl
cli
pushl
pop
shlb
mov
adc
sti
fdivl
call
sub
fmul
dec
jle
mov
xchg
sti
add
aad
loop
insl
jmp
std
push
add
jbe
aaa
dec
pop
mov
xor
dec
rclb
pop
inc
lock
cmp
aaa
sbb
sub
into
jle
rcl
aas
sbb
lods
mov
add
ljmp
sbb
sub
lcall
mov
mov
sbb
fcoms
pop
mov
xor
mov
pushl
mov
lret
out
lcall
dec
add
xchg
mov
add
test
incl
into
insl
xor
mov
push
fldcw
cltd
int
repnz
or
stc
push
and
inc
fnstenv
andb
mov
push
cwtl
jmp
mov
cwtl
sub
push
mov
insl
or
pop
fbld
in
out
and
loopne
rcrb
mov
addl
sbb
incl
jno
jno
aad
nop
adc
xchg
cmpsl
pop
mov
arpl
xchg
xor
je
addr16
dec
call
rcr
dec
aaa
mov
div
call
lret
cmpsl
ss
movsb
inc
les
add
lods
adc
pop
out
hlt
lods
insl
gs
dec
xor
cmp
in
into
mov
pushl
pop
stc
and
jmp
xor
pop
xchg
daa
mov
sub
pop
lds
test
jg
jnp
arpl
mov
pop
push
fs
shlb
aaa
ret
cld
fidivrl
jp
jl
xor
add
mov
ljmp
jle
sbb
jb
outsl
xchg
and
pop
xor
adc
decl
jns
lods
aam
xor
aaa
fcom
pop
rcll
daa
pushl
sbb
sbb
mov
inc
jle
add
xor
push
xor
or
imul
in
icebp
push
jbe
out
mov
or
inc
cmp
mov
mov
call
mov
push
cwtl
mov
xchg
popf
or
xchg
insb
xor
cwtl
dec
mov
dec
mov
lcall
add
sub
pusha
in
mov
ja
arpl
icebp
iret
xor
jg
push
pusha
bound
dec
mov
push
leave
xchg
faddl
add
mov
adc
push
sbb
xchg
sarb
jmp
dec
inc
std
xorl
jge
sub
into
mov
fmul
in
cli
pushl
cld
jo
pop
mov
lock
cwtl
repnz
pop
divl
sbb
out
cli
mov
cmc
dec
fldt
bound
cld
rcrl
jle
mov
std
ljmp
mov
test
sub
push
pop
sub
mov
cmpsl
movsb
jg
sbb
call
rcrl
ror
sub
lods
cli
cmpsl
outsb
sub
pop
leave
addl
xchg
outsl
cmp
mov
cli
inc
mov
sub
xchg
test
cmp
aaa
hlt
dec
out
adc
out
lcall
popf
es
cmovno
in
xor
and
sub
mov
ret
incl
pop
in
lea
or
jmp
mov
push
mov
jg
fwait
mov
pop
scas
call
inc
out
repnz
fcoms
insl
hlt
mov
decl
fistps
jnp
mov
push
arpl
push
pop
shlb
ljmp
or
nop
jp
sub
push
aaa
add
xchg
imul
decl
jg
lcall
cpuid
test
in
jae
nop
sub
stos
stos
pop
ss
mov
pushl
xchg
xor
fcomi
inc
mov
cmp
loop
nop
scas
fdivp
scas
adc
mov
stos
jbe
dec
cmp
pop
dec
test
test
dec
mov
add
in
dec
add
adc
sub
pushl
xor
jl
cli
ror
sub
inc
aas
mov
out
mulb
imul
lret
imul
std
ret
cltd
repz
pop
pop
push
dec
bnd
jecxz
xchg
sbbl
fbstp
push
bound
insl
mov
sbb
inc
mov
cli
je
xchg
push
push
inc
test
scas
fadds
mov
addr16
std
jnp
iret
mov
adc
push
cld
and
push
mov
adc
fcomip
or
dec
ror
iret
mov
je
push
call
mov
repz
and
mov
fs
fcmovnu
mov
cs
dec
test
bound
sar
mov
pushl
std
sarb
es
push
mov
jle
or
sub
pop
mov
dec
shl
es
jbe
pusha
insb
dec
lcall
in
loope
push
mov
push
adc
gs
xor
clc
cmpsb
incl
push
ss
mov
jno
hlt
and
or
adc
push
or
decl
adc
les
xor
dec
jle
repnz
lret
mov
or
mov
xchg
mov
pop
jg
adc
inc
cmpsl
push
mov
movsl
test
bound
cli
pop
aad
mov
movsl
aaa
std
ljmp
sbb
pop
adc
dec
stc
hlt
aaa
mov
add
pop
fdivrl
in
outsb
cmc
loop
cld
pshufw
aam
adc
mov
and
xlat
mov
mov
loopne
xchg
mov
inc
loopne
iret
or
fdivp
pop
out
pushf
or
inc
icebp
jg
jns
xchg
mov
or
inc
aaa
ljmp
push
lcall
sub
inc
inc
ljmp
jmp
cmpsb
jo
xor
fnstcw
stos
sti
or
xchg
dec
add
mov
or
fwait
mov
cli
shr
loopne
insb
scas
or
dec
push
call
pushf
pop
adc
andl
xlat
xchg
lahf
sub
cmp
xchg
shll
incl
lret
test
mov
xchg
inc
stos
leave
loopne
ret
jg
cmpsb
dec
inc
and
incl
lds
pop
mull
jnp
or
stos
fiaddl
ljmp
cli
push
imul
dec
fs
xor
leave
data16
scas
mov
mov
sbb
nop
insl
mov
sbb
je
fsubs
stos
cmp
pop
shrb
call
push
test
inc
or
sbb
sub
ds
inc
inc
xlat
mov
mov
mov
filds
fdivr
call
sbb
je
sahf
aaa
sub
inc
cmc
add
sub
outsb
jmp
sbb
rorb
adc
aad
int3
pop
adc
pop
filds
dec
rcrl
icebp
orl
pop
sub
adc
imul
fsubrs
push
push
fcoml
jmp
incl
cmc
imul
cld
pusha
add
fiadds
fidivrl
stos
idiv
call
sbb
dec
and
fidivs
jmp
jb
inc
push
aam
call
sub
mov
push
lock
insb
hlt
sti
ret
xchg
sti
imul
stc
push
movsb
xor
rcll
push
xor
mov
and
xchg
xor
mov
loope
jecxz
dec
imul
les
mov
cs
sub
sahf
inc
sahf
decl
jle
ret
jl
dec
enter
mov
rcll
xchg
cmpsl
jecxz
stos
dec
test
inc
jg
orb
ljmp
fnsave
scas
inc
push
sbb
mov
stos
nop
jmp
and
icebp
xchg
cltd
ss
decl
cmp
loopne
sbb
popf
cmc
int
mov
fstl
pop
fcmovnu
dec
cmc
aad
shlb
pop
cmp
hlt
mov
sbb
incl
incl
outsl
or
sub
je
call
lcall
ljmp
mov
jmp
sar
sbb
je
out
sti
mov
loopne
jbe
test
jmp
test
adcl
pushf
stos
mov
loopne
adc
movl
and
sar
pop
aaa
lret
pop
ds
jnp
bound
addb
sub
ljmp
or
mov
insb
addr16
sahf
sub
jae
mov
addr16
lcall
mov
mov
pop
std
jg
inc
xor
test
sbb
xchg
or
xchg
call
rcll
push
or
xor
testl
mov
cmp
dec
pop
sbb
cld
aam
add
rolb
push
rol
pushf
in
mov
pop
ret
sub
pushl
inc
pop
mov
data16
push
mov
loope
popl
ljmp
clc
jae
xor
outsb
rclb
adc
outsb
sbb
mov
inc
mov
and
fmulp
and
fcmove
jae
icebp
in
icebp
ljmp
test
call
mulb
push
dec
sbb
add
sub
out
ljmp
fcomip
pushl
and
mov
adc
cmp
cmp
pop
fdivr
incl
das
mov
adc
cli
mov
decl
mov
cld
decl
mov
dec
sbb
push
rcrl
data16
cmp
sub
into
pop
jno
clc
jmp
sub
push
imul
or
call
fdivl
dec
and
add
mov
lcall
jp
jnp
adc
sbb
pushl
inc
pop
bound
adc
mov
mov
sbb
leave
aaa
cmp
push
aas
outsb
dec
mov
test
cmpsl
cmp
xor
xlat
incl
int3
or
sbb
and
pop
ljmp
cli
aaa
dec
loop
mov
loop
and
outsb
aas
sbb
movsb
sub
mov
xchg
pop
mov
cmp
adc
mov
jns
lods
mov
add
jne
jae
imul
fcmovb
sbb
add
leave
add
sbb
pushl
cmp
repnz
push
cld
jg
and
mov
ret
push
popa
in
xchg
lock
adc
ljmp
movsl
movl
scas
adc
cmp
data16
jbe
and
push
pushl
xchg
sub
loopne
sbb
cld
inc
test
outsl
cli
push
cld
pop
fcomip
call
inc
xor
dec
cmp
cli
add
addr16
out
lret
xchg
ljmp
xor
adc
fxsave
push
stos
add
fs
fwait
int3
mov
ljmp
es
addr16
push
dec
loop
jmp
outsl
lahf
repnz
fsubrl
dec
dec
les
cmpsl
incl
out
in
pop
dec
leave
sub
add
inc
daa
push
jp
outsl
shrb
cmp
repnz
pop
movsb
jo
jg
mov
fsub
jb
inc
outsb
mov
push
fs
fdivrs
test
ja
mov
mov
pop
aaa
stc
mov
shlb
mov
into
test
jbe
jge
inc
stos
mov
xchg
mov
out
hlt
adc
js
decl
shll
push
repz
fidivl
sub
xor
adc
mov
cmp
aam
inc
call
lret
cld
push
dec
popa
mov
into
orl
add
clc
pushl
outsb
int3
or
sbb
daa
shlb
add
ret
cmc
movsb
push
rcrl
mov
dec
pop
mov
adc
xor
add
mov
jmp
push
xchg
jbe
fadd
ljmp
movsb
and
cmp
xchg
negl
xor
std
lods
pusha
mov
xor
ljmp
mov
movsb
mov
in
pop
push
add
mov
out
cld
mov
or
inc
or
inc
enter
popf
mov
mov
ret
rol
out
push
jno
adc
inc
ss
aad
adc
mov
push
insl
fidivrs
cmpsb
push
repz
loope
push
cs
pop
dec
sar
sub
in
pop
jo
mov
mov
test
fistpl
xchg
pop
add
adc
daa
inc
jle
nop
push
or
jmp
insl
mov
sub
xorl
repz
decl
cltd
xchg
nop
lahf
rclb
ljmp
lret
ds
loop
cmp
call
ljmp
int3
mov
dec
rol
xor
xlat
and
sbb
cld
stc
adc
or
outsl
loopne
pushl
sbb
sbb
jl
jle
xor
add
cmp
xchg
mov
inc
jp
gs
cmp
sbb
pusha
inc
iret
dec
push
pusha
and
fdivrp
ljmp
cmp
pusha
cwtl
mov
inc
push
movsb
fwait
aas
push
sub
hlt
jp
mov
leave
jle
cmp
decl
adc
xchg
sti
jns
mov
push
or
inc
mov
les
adc
call
test
insl
outsb
jecxz
pop
mov
adc
mov
dec
mov
dec
nop
mov
inc
decl
movsl
inc
xchg
dec
loopne
mov
ljmp
dec
jge
in
pop
fstpl
subl
dec
mov
cld
add
jmp
sbb
addr16
fisubrs
cmp
adc
mov
lcall
lcall
fisttpll
ja
pop
add
inc
ljmp
adc
dec
pop
das
call
loopne
cmp
cmpsl
sub
mov
fbld
aaa
pushf
mov
cmp
dec
mov
xor
decl
lcall
mov
xchg
lods
pop
jnp
test
jno
movsb
outsl
push
lods
jno
or
add
call
cmpsb
popa
cmpsl
icebp
dec
pop
fadds
cmpsl
jbe
sub
scas
call
pusha
int3
jle
pop
dec
or
xlat
dec
jbe
mov
js
sub
xchg
xchg
sub
cmp
gs
enter
push
gs
insb
mov
jg
call
rolb
xchg
repnz
imul
lock
xchg
inc
or
shll
pop
shlb
ja
int3
inc
call
ds
int
sub
jmp
ret
insb
lods
mov
xchg
ss
cli
fisubrl
dec
punpckhbw
loop
xchg
mov
push
sbb
rcrb
imul
jnp
mov
clc
mov
or
ljmp
mov
insl
shl
pop
cmp
push
add
cs
mov
incl
cmp
adc
jno
dec
sub
xor
cli
xor
mov
jg
sub
pop
push
jle
pusha
sub
out
clc
inc
jmp
test
int
lcall
jb
dec
popf
ja
xor
cmp
les
lock
or
pusha
xor
push
mov
xchg
sbb
decl
call
test
pop
inc
xchg
push
push
xor
jp
decl
popf
and
out
rclb
sub
sub
orb
incl
pop
xbegin
dec
repnz
pop
sub
jne
or
jmp
test
cwtl
fdiv
add
test
enter
pop
aas
adc
push
mov
lcall
lock
and
xchg
jnp
dec
cmp
cmp
mov
jmp
mov
mov
ljmp
add
iret
add
push
incl
push
xor
addr16
push
es
cli
mov
sub
mov
out
in
xlat
jmp
xchg
arpl
jbe
push
outsl
fsts
mov
fnsave
ja
inc
stc
inc
push
sbb
popf
sarb
ljmp
test
shrl
pop
mov
in
xchg
test
dec
testl
rclb
fdivrl
push
aam
cmp
into
aad
xor
cwtl
dec
jg
aas
incl
sbb
push
adc
or
test
mov
daa
push
or
popf
out
xor
fwait
ljmp
xorb
push
dec
call
jle
cmp
movsl
pop
stos
mov
loopne
dec
ss
dec
xchg
xor
sbb
adcb
mov
mov
incl
push
jmp
inc
jmp
pop
add
hlt
cmpsl
xchg
mov
push
aam
iret
jg
push
and
outsb
movsb
mov
rorb
out
out
fs
push
xchg
adc
lcall
aas
addr16
add
dec
sti
jnp
arpl
sti
inc
mov
push
loopne
nop
jnp
pop
mov
cld
sbb
cmp
hlt
dec
pushf
jb
mov
or
mov
lcall
mov
ss
out
mov
xchg
pop
lea
fists
stos
decl
adc
ljmp
add
push
test
pushl
clc
xor
adc
cwtl
jecxz
adc
hlt
adc
sar
data16
repz
push
jnp
ret
call
in
popf
ljmp
mulb
cmp
mov
sbb
push
push
pop
in
mov
push
inc
aam
jo
jbe
mov
cwtl
mov
rclb
lods
jmp
adc
xchg
cmpsl
decl
std
adc
and
or
movsl
or
push
xchg
push
ror
jbe
or
xchg
arpl
jmp
cs
shlb
in
mov
jmp
adc
sbb
push
movsb
mov
fcomip
mov
jmp
andl
aam
dec
mov
or
inc
ret
mov
pop
pop
sub
or
push
sbb
shll
lcall
lods
add
pop
sbb
xor
test
inc
aam
mov
pop
jmp
sub
lcall
mov
mov
aad
mov
ss
ja
dec
sti
repz
nop
ja
jb
jmp
jmp
hlt
in
xchg
fwait
jge
fwait
ss
arpl
sub
aas
push
sbb
adc
mov
mov
push
and
push
adc
call
jle
mov
or
mov
xchg
lret
jmp
jmp
or
shll
dec
jle
in
mov
push
sub
scas
addb
or
decl
iret
test
std
sbb
cmp
inc
push
arpl
add
stos
cltd
decl
pop
pop
sbb
sbb
pop
test
jge
or
out
pushf
stc
xchg
insb
jle
jo
pushl
cmp
in
bound
adcb
lret
ss
aam
out
fdiv
iret
jg
arpl
fisttps
sub
sbb
incl
in
inc
fimull
or
fidivrs
std
fildll
mov
inc
mov
xor
jno,pn
out
xor
jg
cwtl
cmpsb
lcall
mov
and
es
loop
dec
loopne
sar
ret
jbe
mov
mov
and
add
mov
pop
icebp
das
adc
es
xchg
dec
in
outsb
xchg
aam
mov
sar
cli
push
imul
pusha
js
les
call
xor
cmpsb
ljmp
pop
fs
sub
and
dec
sub
jg
inc
pop
aam
ret
pop
aam
inc
sbb
incl
or
adc
mov
xorl
loope
cmpsb
xchg
mov
jns
aaa
sub
cmp
push
cmp
cltd
jmp
pop
or
aam
js
clc
inc
mov
jp
mov
loopne
or
loopne
dec
frstor
adc
test
repnz
scas
adc
xchg
sub
sub
and
in
mov
leave
push
and
and
xlat
mov
cmp
daa
jg
ret
mov
das
fisttpl
popa
add
sub
scas
jae
sbb
std
pushl
add
mov
push
dec
scas
mov
test
xchg
sub
inc
enter
dec
jne
add
or
or
xchg
sbb
xchg
jg
cli
and
lret
popf
cli
push
fdivs
leave
mov
xor
add
sar
call
mov
inc
or
sub
jge
sar
mov
fcomip
call
scas
mov
loopne
and
imul
push
out
mov
lret
loopne
scas
mov
push
fdivrl
and
jno
or
lods
pop
dec
pop
inc
popf
sahf
ja
fistl
cmp
jnp
scas
jo
enter
loop
mov
dec
loope
dec
push
cld
pushl
rol
fs
data16
enter
filds
fldcw
pop
push
inc
and
call
addr16
in
inc
lahf
loopne
lock
dec
mov
inc
xor
xor
dec
cld
ror
inc
pop
sbb
jg
call
jge
test
push
iret
ljmp
ja
cmp
cltd
pushf
jg
lods
inc
nop
mov
std
jmp
divb
stos
jne
in
jae
call
xchg
scas
add
mov
sbb
js
nop
inc
out
or
adc
jns
jb
insb
add
lcall
inc
dec
pop
and
add
add
adc
pop
inc
es
movsb
pop
jge
sarl
mov
test
pushl
jmp
shrl
jnp
cwtl
hlt
or
mov
repnz
mov
pushf
scas
inc
pushl
adc
sub
outsl
shrl
leave
mov
sbb
scas
dec
fimull
mov
sahf
mov
or
out
sbb
mov
pop
in
out
cmpsb
or
xor
sbb
mov
mov
call
pusha
idiv
cmp
and
aas
push
push
push
daa
cmpsb
lahf
fisttps
xchg
cmp
rorb
jmp
mov
jmp
push
xchg
pusha
add
jg
rorl
js
pusha
push
mov
or
or
jo
sub
xchg
cmp
mov
cld
xor
xchg
jecxz
in
incb
test
test
xor
xor
lock
mov
sbb
mov
sub
ficompl
sbb
cmp
push
std
pop
adc
test
sbb
ret
xor
mov
das
enter
ljmp
fadd
cmp
insl
jno
pop
shll
lret
into
lods
aad
jne
das
les
and
inc
or
or
xlat
mov
imul
enter
incl
rdseed
lret
rcrl
add
lods
fidivl
cli
pusha
dec
adc
stc
jg
decl
imul
shlb
stc
jo
sbb
xchg
pop
in
cmp
clc
pop
divl
and
mov
xor
out
rcll
adc
pop
mov
sbb
fwait
push
jns
dec
ljmp
decb
test
dec
pushf
push
dec
cs
movsb
std
lcall
mov
sarl
and
push
stos
jle
repz
sub
mov
pop
adc
std
pop
dec
std
dec
and
xchg
je
adc
mov
pop
add
lret
shlb
cmp
or
scas
pushl
movsl
icebp
cmpsb
mov
jns
lcall
std
jmp
jnp
daa
pop
icebp
ljmp
and
mov
and
xorb
incb
mov
fstpt
xor
sarb
shrl
out
stos
repz
cmp
in
idivl
fnstsw
sbb
pop
and
test
inc
sub
lock
ljmp
test
mov
xor
aaa
test
dec
icebp
sbb
xlat
mov
xor
push
sub
pop
mov
push
jge
push
incl
jae
rolb
in
rcrb
cmp
pop
aaa
and
inc
mov
bnd
push
pop
sbb
mov
clc
xor
fstps
pop
inc
xchg
jl
xchg
mov
mov
dec
ret
in
cmp
fsubr
push
xchg
dec
clc
fwait
jne
xor
out
decb
in
jnp
inc
or
mov
das
pop
pop
pop
fadd
mov
jmp
cli
decl
inc
inc
mov
pop
mov
testb
or
ljmp
xchg
outsl
jae
cmpb
repnz
jns
in
movsb
hlt
mov
jnp
dec
mov
icebp
jnp
and
xor
or
mov
lcall
or
inc
jmp
pop
rcrb
dec
ja
add
call
sahf
cltd
fwait
mov
xchg
insl
and
pusha
leave
daa
mov
cmp
xchg
adc
sbb
jmp
and
mov
sbb
sbb
sub
inc
nop
mov
add
push
xchg
jmp
aam
sub
mov
lcall
sub
jns
add
rclb
pop
push
mov
ljmp
lret
test
push
adc
add
dec
mov
mov
xor
aaa
lcall
dec
adc
cmp
outsl
in
cli
jg
pop
pop
pop
out
add
hlt
add
pusha
or
incl
ret
jl
cmp
sahf
ret
lahf
push
addps
imul
and
xlat
sub
decl
aas
decl
mov
pop
cmp
subb
ret
popa
xchg
ljmp
rcr
or
enter
stc
out
and
xchg
pop
xor
xchg
filds
inc
adc
xor
add
mov
mov
nop
and
xchg
iret
loop
add
jge
out
hlt
bound
mov
mov
mov
jnp
mov
push
mov
jecxz
jmp
addr16
push
cs
xchg
icebp
jge
mov
hlt
je
fisttps
mov
pop
nop
and
adc
cli
ja
test
pushl
pop
add
cmp
mov
push
xchg
and
push
add
out
fdivr
push
test
ret
sarb
lods
call
and
inc
daa
insl
data16
in
cmp
jp
pushl
ret
aaa
lret
jecxz
mov
jge
sub
jne
add
jge
out
pop
imul
pop
cld
cmpsb
je
aas
jl
cmpsb
mov
pop
lcall
out
or
push
push
and
cld
or
sub
cmp
out
clc
out
mov
rcr
xchg
cmc
shl
pop
push
test
andl
mov
jg
loope,pt
call
mov
sub
add
call
push
sbbl
mov
ret
push
inc
xchg
lods
sahf
dec
stos
xchg
or
sub
test
add
jmp
fs
lahf
fbstp
xchg
loop
mov
inc
cmpsb
imul
jmp
leave
push
or
cs
mov
cmc
sbb
inc
dec
imul
ljmp
cmp
sub
shll
or
push
mov
xor
loopne
jl
sub
push
mov
testw
dec
push
sti
push
mov
or
xchg
rcrl
jl
loopne
call
xchg
enter
jmp
data16
ss
pop
int3
xor
dec
dec
mov
call
or
pop
mov
pusha
add
hlt
pop
inc
or
cld
jle
inc
sub
movsb
mov
incl
pop
mov
fidivrs
aas
adc
stos
aam
mov
pop
cltd
cmp
jo
dec
dec
lcall
and
fcompl
mov
mov
jo
mov
lds
rolb
inc
sub
aas
nop
push
and
push
xor
aad
mov
sbb
mov
lds
pop
mov
rcll
mov
jp
mov
lds
cli
fs
add
pop
addl
cld
push
repnz
ret
mov
jae
loopne
lcall
jg
mov
xor
arpl
pushf
out
xor
rorb
jmp
mov
mull
ljmp
add
mov
mov
jbe
sbb
int3
mov
cmp
rorl
jmp
inc
dec
push
or
loop
pop
xor
sarl
fcompl
add
lods
pop
or
jecxz
cmp
and
cmp
mov
pop
mov
orl
mov
lds
jg
enter
dec
adc
fildll
sahf
fnstcw
icebp
and
add
jmp
cli
call
lcall
out
mov
pop
mov
stc
jb
ja
mov
pop
sar
decl
cwtl
xor
lret
xchg
push
sbbl
or
pop
stc
mov
mov
jmp
mov
fs
lahf
add
mov
inc
mov
sbb
sub
shl
out
inc
ljmp
dec
ror
cltd
cmp
cmpsl
insb
push
lcall
sti
mov
jp
movsl
decl
das
stos
dec
adc
mov
adc
mov
lea
lock
xchg
mov
push
cmp
incl
movsl
jge
pop
scas
out
lahf
leave
addr16
notl
jmp
lahf
mov
fsub
and
and
xor
pop
xlat
cmp
jo
sarl
data16
enter
xchg
jmp
cmp
push
or
cmp
arpl
aaa
adc
pushl
in
mov
jl
dec
pop
lcallw
test
xchg
inc
stos
ljmp
bound
nop
insl
fsubrl
ss
cs
jl
loope
clc
jnp
stc
ds
rcll
ljmp
ficoml
fwait
pushf
cli
in
xorb
outsl
pushf
scas
push
es
ljmp
xchg
push
mov
adc
aas
lock
xlat
inc
add
and
shl
aad
jne
cs
sub
dec
dec
adc
sahf
loopne
xor
xor
jnp
sbb
mov
call
rolb
inc
mov
mov
xchg
dec
adc
test
fildll
ljmp
clc
lret
iret
or
adc
mov
sub
cmpl
pop
pusha
xchg
ljmp
sub
and
sub
xor
cmp
pop
movsl
dec
fcomip
add
mov
push
lahf
inc
mov
mov
xchg
in
xchg
inc
and
stos
sbb
testl
insb
mov
jbe
fstpl
and
movsl
and
pusha
add
add
leave
pushl
rolb
faddl
cld
es
cs
mov
dec
aad
push
jle
jg
ljmp
sub
test
je
or
in
dec
fidivs
lahf
mov
sar
in
pushl
stc
and
pop
push
jno
mov
push
sub
add
mov
daa
dec
or
mov
scas
and
dec
jle
pushf
and
je
mov
and
pushl
sbb
les
sbb
xor
xchg
pop
add
jp
mov
and
pop
in
or
lcall
push
push
mov
fs
mov
outsl
jb
insb
sub
and
pop
std
lcall
or
xchg
jg
sub
lods
mov
jl
jg
faddl
in
jmp
lcall
or
out
lds
scas
repz
rcr
loopne
adc
add
mov
adc
cmpsb
jae
dec
lea
ret
ss
jg
incl
push
mov
stc
and
lahf
icebp
nop
out
hlt
jnp
pop
insb
mov
popf
xchg
push
lds
lcall
out
mov
lret
jnp
mov
inc
dec
mov
sti
push
test
ds
decl
add
lcall
insb
pop
push
inc
addr16
loop
lcall
lcall
xchg
add
push
xor
push
fistps
push
push
add
push
js
cmp
cli
cwtl
push
or
int
in
push
and
pop
jae
cmp
mov
push
clc
sbb
pop
cld
clc
mov
int
in
cmpsb
jl
jp
mov
repnz
dec
adc
hlt
aas
cmp
shr
ret
adc
or
cmpsb
cmp
insb
popf
out
insl
inc
push
lds
fildll
loope
ds
test
or
push
cmp
fwait
movsl
frstor
imul
cmp
xor
cmc
push
xchg
jmp
scas
insl
enter
cs
inc
jae
jmp
out
xchg
mov
push
and
adc
mov
jo
jae
mov
and
xor
lods
rorl
in
mov
mov
into
insb
outsl
lea
cmc
clc
cwtl
mov
loopne
push
mov
incl
jo
push
adc
ja
mov
loopne
icebp
fistpl
nop
movsb
mov
pop
add
sub
incl
out
js
mov
mov
jmp
sub
pushf
jle
jmp
pop
outsb
adc
sbb
nop
shld
cmc
mov
mov
xchg
loope
sub
sbb
add
es
xchg
dec
mov
adc
loopne
add
mov
xor
sahf
ficoml
sub
jg
push
cli
ljmp
push
push
stos
xchg
repnz
xlat
push
jmp
jl
test
mov
ljmp
or
sbb
cli
jecxz
lods
in
stos
cmp
or
add
dec
aas
cmp
rol
inc
cmc
incb
rcrb
push
sbb
ljmp
lcall
inc
jg
ret
jle
jae
mov
in
mov
xlat
ljmp
cltd
jmp
js
xor
into
mov
popf
sbb
orl
push
fnstenv
mov
push
pop
or
xorb
mov
sub
push
mov
push
jne
jo
ss
jne
in
jbe
in
nop
dec
jge
stc
xlat
xchg
arpl
cmpsb
dec
mov
rorl
push
pop
mov
cwtl
mov
push
pop
pop
outsl
pushl
mov
mov
or
push
aaa
rcll
xchg
daa
and
and
push
push
push
insl
xor
and
aad
ljmp
jae
push
sbb
ljmp
xchg
cli
inc
pop
fists
add
sbb
mov
aas
mov
or
scas
int3
inc
scas
mov
fs
std
dec
push
xor
test
mov
adc
pushl
and
jmp
iret
les
sbbl
cmpsl
idivb
stos
cwtl
pop
jle
loopne
incl
cmpsl
jmp
rcrl
adc
lods
cmpsb
idivb
clc
dec
adc
mov
or
rolb
in
test
dec
push
fcompl
lds
sbb
lea
lock
sbb
lock
adc
jg
in
call
repnz
adc
ds
and
add
pushl
stos
and
das
cmp
mulb
lret
imul
movsb
lret
ret
xorb
mov
lds
loope
scas
jg
in
aad
inc
je
nop
mov
nop
cld
mov
fdivrp
mov
rcll
add
adc
sarb
gs
xor
sub
je
js
cmpsl
pushf
iret
in
add
rol
mov
mov
loop
jp
es
dec
loopne
fwait
sub
repnz
push
add
push
add
xchg
cmp
xor
mov
pop
test
decl
test
roll
mov
and
push
adc
jecxz
xor
or
fisubrs
cmp
aad
ds
push
cwtl
adc
pop
imul
inc
std
or
mov
mov
lods
sbb
or
lret
orb
lahf
je
imul
mov
xchg
sub
shll
dec
xchg
mov
stos
add
lahf
cmpsl
rolb
fcomip
andl
jecxz
andl
adc
std
cmc
jo
shlb
lcall
or
cmp
rcrl
inc
stos
mov
and
mov
inc
xchg
cmp
in
cmp
rorl
sub
out
dec
pushl
xchg
sub
jne
mov
lds
call
cld
jecxz
sbb
jp
xor
and
add
fcmovne
jp
movsl
or
push
jne
push
inc
xor
cmpsb
mov
arpl
pop
daa
xor
cmpsb
lds
mov
inc
add
stc
dec
cwtl
scas
cli
aaa
sbb
xor
ljmp
iret
repz
mov
xchg
mov
ds
or
add
call
push
test
decl
out
add
mov
les
into
mov
ja
incl
adc
dec
les
or
ret
mov
jp
movb
or
cld
dec
push
pop
mov
jmp
xchg
mov
inc
pop
xchg
or
add
xchg
mov
jmp
insl
test
inc
scas
jge
outsl
mov
ret
adc
fcoms
sub
mov
cld
adc
xlat
or
aas
jge
adc
bound
mov
jl
sar
dec
loop
fsubl
mov
push
sbb
dec
leave
or
cmp
sub
pop
dec
lret
cld
fs
andl
dec
ud0
inc
rcl
cs
shlb
test
mov
leave
pusha
cmp
repz
enter
mov
push
mov
out
jmp
cmp
outsb
fidivl
jp
add
sub
ds
mov
xlat
sbb
sub
cmovl
xchg
mov
imul
push
mov
popf
adc
inc
push
inc
add
mov
push
or
leave
mov
out
mov
mov
push
loopne
fbld
push
lea
mov
or
xchg
in
test
mov
dec
jge
inc
data16
cmp
dec
push
jge
adc
jle
xor
xor
jb
decl
imul
jg
adc
fwait
mov
aad
cwtl
jns
dec
mov
cmpl
incl
in
outsb
inc
call
xor
jge
cmp
aam
or
adc
jne
lods
dec
xor
jmp
xor
test
adc
inc
scas
fildll
inc
or
mov
scas
and
pop
sub
icebp
call
lret
push
sti
pop
xor
or
ds
cs
fstpl
ss
xchg
test
jmp
mov
cs
in
pushf
xchg
xor
and
mov
into
inc
lret
and
mov
pop
jne
xorb
jmp
pop
icebp
dec
or
in
in
into
cmp
insb
mov
sbb
call
int3
fidivl
lds
sbb
inc
jae
sbb
jge
arpl
xchg
cwtl
test
jg
ljmp
subl
out
xlat
xchg
int
cli
adc
pushl
or
bound
test
in
pop
and
sti
jb
xchg
sbb
xchg
cmpsb
jmp
xor
pop
jno
pop
inc
leave
dec
xchg
push
mov
sbb
ds
mov
decl
mov
imul
push
aad
mov
jnp
ficompl
mov
pop
jns
or
scas
or
incl
xchg
add
or
xor
sbb
cmpsb
nop
jns
shrb
mov
call
mov
sub
add
xchg
lods
enter
cld
mov
jnp
and
jmp
imul
mov
push
mov
dec
sbbl
loop
jecxz
jp
pop
pop
sbb
sahf
dec
or
xor
pop
rorl
fbld
xchg
stos
and
jae
in
stos
fcomps
jns
add
cmp
ljmp
xor
pop
int3
fstl
sub
adc
std
push
roll
jo
push
out
cli
push
mov
dec
sbb
and
ljmp
ljmp
sar
cmp
xchg
pop
arpl
lods
xor
incl
shll
test
mov
mov
stc
sbb
push
xchg
or
or
scas
popl
clc
scas
jecxz
and
cmp
xlat
insl
adcb
dec
nop
sbb
jl
mov
mov
shll
decl
sahf
fldl
jmp
mov
xor
cld
adc
pop
enter
inc
jmp
ljmp
dec
mov
push
pop
stc
icebp
daa
repnz
das
ret
cmp
jns
lcall
fs
mov
pop
jae
mov
jne
mov
shrl
in
lcall
jmp
aad
inc
xor
icebp
fwait
pop
lea
aam
inc
ret
adc
cltd
bound
pop
scas
scas
pop
in
cmp
int
cwtl
mov
out
cli
decl
int
imul
jb
in
xchg
je
xchg
and
popa
and
clc
add
xchg
sub
fiaddl
cmp
ljmp
sub
adc
iret
xchg
sub
push
cmovle
dec
fst
jle
jno
xor
js
lcall
cmc
shll
rclb
cmp
testb
ja
mov
xchg
cltd
and
out
pop
nop
mov
jmp
fisubs
xorl
mov
subl
add
imul
fnstcw
mov
mov
test
xor
cmp
mov
push
push
sbbl
aas
jl
or
xchg
cltd
ds
js
insb
dec
cmp
sbb
lcall
lcall
aad
xor
sti
dec
outsl
and
push
rorl
cli
fcoml
push
jne
sbb
les
lcall
push
in
lds
mov
and
xchg
push
dec
and
sbb
mov
xchg
add
push
std
pop
adc
ret
ficompl
aaa
sub
fcomip
sub
mov
loopne
inc
sahf
cmp
mov
pop
je
and
jg
pop
sub
idivl
or
dec
xchg
add
aam
add
nop
hlt
jmp
sbb
filds
ret
cltd
pop
repnz
push
dec
stos
sti
pop
mul
fidivrs
dec
mov
lret
ret
loope
cmp
iret
ljmp
std
jmp
scas
inc
jp
dec
push
das
cli
outsb
push
cwtl
popa
stos
cmc
push
ret
jnp
jmp
jne
mov
cmc
mov
push
mov
pushf
pop
fidivrs
sbb
ljmp
aad
or
sbb
jmp
jp
dec
insb
cmp
mov
ljmp
xchg
pop
add
adc
fs
dec
sbb
data16
xchg
inc
fstps
jle
mov
pop
repnz
js
sbb
rcrl
mov
add
xchg
in
jb
test
dec
stos
mov
adc
xchg
lock
mov
pushl
stc
pusha
mov
out
lods
in
jnp
mov
fisubl
mov
pop
jecxz
in
hlt
loopne
out
in
xchg
pushf
push
inc
cmp
inc
mov
decl
imul
ja
pushf
add
cltd
orl
data16
rolb
call
out
cmc
mov
adc
jle
cmp
jne
jno
std
mov
fwait
ja
xchg
pop
inc
push
xchg
lcall
inc
inc
out
lods
dec
repz
jne
mov
and
sbb
or
imul
jne
inc
mov
sbb
in
lret
mov
hlt
jmp
icebp
je
and
jnp
xchg
ret
or
inc
ljmp
mov
mov
fistps
cmc
rorb
sbb
fcomi
mov
call
fwait
and
mov
icebp
xchg
cmpsb
jp
mov
mov
xchg
and
cwtl
aad
xor
xchg
lcall
std
or
xor
cmp
rcrb
mov
aaa
iret
ljmp
adc
mov
push
mov
in
call
or
in
sbb
xchg
and
sbb
mov
jne
mov
add
rep
popa
mov
mov
jae
and
sub
mov
dec
clc
call
lock
arpl
or
and
or
xor
cmc
popf
shlb
bound
ficompl
cltd
cmpsb
xlat
cmpl
mov
inc
lods
sub
lock
and
lods
cmp
jne
xor
jp
inc
sub
aad
pop
cmp
xchg
fxch
jnp
push
push
push
add
outsl
ss
or
movb
fstl
mov
call
nop
add
inc
push
aaa
or
shrl
push
xchg
push
pop
stos
pushl
sub
add
je
imul
mov
sbb
push
fstpl
dec
jbe
pushl
bswap
jae
loopne
or
int
dec
push
imul
jnp
cld
bound
pop
lods
popl
lcall
mov
fld1
jae
leave
jmp
pop
cwtl
pop
xor
lock
inc
addr16
imul
ss
cmp
decl
ret
xor
bnd
out
dec
ljmp
jmp
lahf
sub
adc
xor
jmp
out
lock
ds
push
fcos
out
shlb
jae
xor
dec
mov
mov
insb
arpl
icebp
insl
inc
imul
or
decl
jmp
sub
cmp
inc
shll
cltd
stc
inc
cmp
scas
push
in
xchg
or
pop
leave
fsubr
cli
aaa
cld
mov
clc
outsb
xchg
mov
and
sub
das
xor
in
jge
add
or
lcall
mov
imul
jmp
jne
push
fsubp
pop
jp
push
mov
sub
pop
cmc
mov
repz
sbb
outsb
or
nop
loope
lea
inc
cmc
cmp
call
xchg
sti
cmp
xor
mov
jmp
stos
int3
mov
inc
test
stc
lods
cmpsb
add
push
mov
lret
lahf
lcall
xchg
xchg
test
call
sub
loop
pop
test
mov
repnz
in
mov
aaa
std
decl
pop
stc
mov
scas
add
fs
adc
cmp
dec
cmpsl
adc
incl
movhlps
cmc
or
pop
cmp
mov
leave
or
rolb
jmp
xchg
mov
xchg
and
or
nop
fs
arpl
rcll
call
ljmp
dec
lea
or
sub
loopne
pop
pop
lods
fisttps
jg
aaa
clc
ds
xchg
mov
das
clc
pushl
mov
shr
adc
xchg
fisubrs
add
mov
divl
ljmp
inc
xor
subb
test
aas
and
out
jnp
xor
lods
sub
add
decl
or
pop
out
and
testb
jae
das
repz
fisubs
add
into
roll
jb
xlat
sub
adc
inc
out
ss
xor
sbb
xor
mov
incl
jbe
movsl
shl
scas
jno
cmp
ret
or
and
xchg
in
mov
and
sar
in
arpl
inc
inc
out
push
or
shrb
mov
bound
cmp
jg
cld
aaa
lret
sbb
mov
sub
pop
sarb
inc
mov
jns
enter
decl
adc
cmp
jle
push
dec
enter
dec
pop
iret
lods
jg
jg
push
arpl
leave
rcrl
lret
mov
cmp
inc
test
jecxz
fdivs
inc
je
scas
jg
scas
cli
es
int
sbb
adcb
inc
dec
pop
pop
xchg
stos
pop
hlt
dec
ret
mov
stc
mov
inc
stos
imul
pop
fs
push
rorb
incl
xor
subb
inc
push
aaa
lock
into
xlat
jl
sbb
sbb
jmp
stos
mov
cmp
test
mov
cmp
sti
adc
lods
mov
pop
gs
or
cwtl
lcall
push
mov
incl
dec
cli
adc
adc
or
jnp
cli
loopne
pushf
das
pand
cmp
jns
and
inc
int
jo
cmpsb
or
add
mov
adc
pop
mov
xchg
insb
ljmp
ljmp
fwait
inc
flds
in
shl
mov
test
sarl
outsb
nop
cli
decl
push
mov
sbb
jmp
pop
ljmp
cmp
pop
pop
ss
not
cmp
shrb
cld
sub
adc
decl
push
hlt
nop
jge
cli
ret
adc
leave
mov
cmp
ret
jno
fnstsw
imul
call
push
repz
outsl
repz
xor
xor
mov
dec
dec
xor
add
push
cli
sbb
push
dec
fs
mov
lods
adc
mov
stc
les
mov
dec
imul
test
or
scas
cmpl
incl
mov
imul
enter
xor
add
in
push
lock
fldl
xlat
and
decl
add
ret
popa
cli
pusha
loop
dec
xor
pop
rorb
lods
in
push
sbb
cli
cmp
imul
xlat
xchg
push
sub
dec
into
dec
add
pop
dec
icebp
out
xchg
jbe
jno
aaa
das
sbb
mulb
xchg
or
in
movsl
leave
incb
xlat
call
lock
push
sar
outsb
xchg
aas
jg
or
stc
movsl
into
test
and
jecxz
stc
dec
faddl
rcll
push
enter
sub
lret
xchg
incl
xchg
dec
fwait
push
sub
jne
mov
mov
mov
and
adc
jg
fildll
rolb
mov
push
aad
in
push
sub
pushl
clc
inc
aaa
mov
add
add
or
in
push
xor
push
dec
mov
jmp
repnz
stos
subl
xchg
xchg
in
add
das
cmpsb
ljmp
aas
inc
icebp
enter
inc
mov
gs
xchg
jnp
and
les
fcomip
mov
add
pop
jg
dec
bound
lock
sar
ljmp
xor
dec
pop
mov
sahf
rcll
pop
ret
xchg
stc
and
and
and
popf
pop
mov
inc
subb
xor
out
pop
mov
jecxz
add
or
popf
insb
cli
cmc
leave
nop
push
cmp
cli
shrb
ja
outsl
cli
fdivr
decl
mov
fcoml
adc
pop
push
test
mov
sub
shl
stc
out
mov
stos
aas
mov
cld
inc
lods
cmp
outsl
xchg
cld
cli
das
iret
cmpsl
sbb
jbe
push
inc
jg
pop
push
les
lret
cs
push
and
sub
push
repnz
idivb
xor
aas
shll
sub
ret
or
sub
rorl
sbb
lcall
sbb
mov
jg
add
jle
lea
rolb
xor
sub
mov
sbb
cmp
lcall
loopne
cmp
dec
push
mov
pushfw
pushl
jae
int
xchg
sarl
icebp
out
xchg
push
cli
cmp
push
leave
push
int
sub
mov
rolb
mov
sbb
adc
and
sbb
incl
sub
arpl
inc
xchg
dec
mov
or
or
and
xor
lcall
push
rorb
clc
sub
je
es
daa
add
fldt
inc
or
lgs
xchg
cmp
lods
int3
push
push
mov
lcall
jecxz
pop
rcll
shll
or
nop
mov
dec
pop
xchg
sub
jmp
aad
inc
push
mov
jae
in
clc
insb
scas
pushf
mov
iret
jnp
mov
daa
xchg
lcall
xor
jmp
jo
sub
xor
int3
pop
out
clc
pop
hlt
sarb
insb
xchg
ss
jb
outsb
mov
mov
popa
cli
decl
or
shll
fcoml
stc
mov
or
inc
dec
test
std
jle
mov
cmp
ljmp
jnp
cmpsl
fdivrl
lret
fldenv
int
mov
cmc
xchg
and
add
divb
xor
mov
pop
loope
sbb
xchg
adc
insb
inc
and
mov
lods
lret
mov
push
jg
or
and
fisttps
cs
andl
mov
or
mov
mov
call
jo
add
mov
xor
rorb
inc
fs
arpl
test
adc
lcall
dec
or
add
popf
shrl
shl
imulb
je
std
decl
test
sbb
fs
popa
adc
mov
push
bound
jmp
inc
rol
inc
sbb
pop
mov
xor
add
call
push
pop
fcoml
inc
push
xor
data16
scas
push
mov
sub
adc
pop
ljmp
mov
shlb
mov
xlat
xchg
pop
xchg
inc
mov
mov
jae
out
push
lret
sbb
dec
xchg
enter
sbb
popf
xchg
iret
dec
addb
pop
dec
nop
push
mov
stos
mov
call
rcrb
inc
mov
jo
fcmovnu
int3
adc
mov
inc
notl
repnz
es
lock
ja
jg
add
imul
cld
or
pop
scas
or
jnp
std
shl
in
mov
sub
mov
addr16
loope
cmpsb
or
ja
addr16
or
pop
out
mov
leave
hlt
add
icebp
cmp
and
mov
popl
mov
lret
pop
xchg
sbb
or
cwtl
aas
push
pop
fsubrs
mov
jl
jge
sbb
decl
ljmp
aad
xchg
mov
roll
cs
mov
in
or
call
ds
pop
mov
add
cli
lcall
push
xor
xchg
ja
rorl
aam
sbb
xor
ljmp
les
xor
mov
sub
mov
dec
mov
mov
insb
mov
cmp
mov
incl
js
adc
adc
mov
mov
sahf
rclb
pop
incl
out
jl
loopne
lea
push
sbb
shl
mov
push
call
or
cmp
insb
cltd
imul
in
push
xchg
idiv
cmp
sub
fucomip
std
pop
hlt
call
xlat
enter
and
notl
adc
and
or
jmp
fsubl
jmp
ljmp
and
aas
cli
xchg
pushf
das
cwtl
movsl
mov
lcall
jp
pop
loop
mov
icebp
push
in
dec
xchg
xchg
push
pop
call
xor
clc
sbb
lock
mov
sti
pop
cwtl
gs
imul
adc
lea
ljmp
test
insl
cs
jmp
aaa
xchg
call
mov
sbb
mov
mov
xor
xor
push
mov
jnp
hlt
mov
cmp
mov
adc
fndisi(8087
sbb
jne
jp
data16
add
pushl
es
cmpl
loopne
es
test
movsb
jg
cltd
fcom
jb
movsb
inc
lea
std
pop
testl
mov
daa
scas
push
sub
ljmp
les
cltd
negb
sqrtps
mov
ljmp
lods
and
xchg
jp
dec
in
in
push
outsb
mov
call
and
mov
or
cmc
setl
fistpll
adc
cmp
cwtl
jo
inc
inc
and
sub
sub
enter
lods
pushl
nop
or
dec
cmovae
int3
jp
mov
std
rcl
hlt
insb
decl
and
add
and
mov
mov
cmpsl
aad
fucomi
inc
incl
outsl
je
fldenv
jnp
add
sbb
mov
popf
daa
xor
pop
sub
ljmp
or
adc
adc
xchg
in
push
mov
bound
fisubrl
scas
sbb
pushl
mov
je
ret
pop
xor
dec
movsl
adc
ljmp
out
clc
adc
push
cmp
pop
add
add
das
stos
inc
sbb
aad
lcall
mov
xchg
jbe
pushf
stos
imull
lock
xchg
jp
js
repz
cltd
jbe
push
bound
decl
add
adc
cmp
adc
fisttpll
call
mov
int3
add
inc
sub
loop
leave
aas
popa
lcall
shlb
or
push
in
cwtl
leave
add
jp
push
lret
fdivr
call
loopne
out
xor
cmp
sub
xor
inc
fs
jg
push
lahf
jg
incl
lods
aas
andb
jo
in
add
in
xor
out
jg
cmpsb
mov
mov
xor
inc
push
jge
shlb
rorb
divb
pop
mov
cmp
ret
jmp
pop
inc
lea
gs
inc
call
cwtl
in
lods
push
pop
aad
xor
mov
or
fidivs
adc
cmp
decl
lock
das
in
jns
push
push
fistps
pop
or
stos
rorl
arpl
cltd
mov
fistps
xor
inc
dec
sub
pop
dec
and
aad
add
insl
imul
pop
mov
jmp
in
mov
shl
fucomi
lea
lret
imul
test
or
sti
std
pop
sbb
popa
bound
lods
jb
fildll
xchg
call
aas
add
xor
arpl
imul
in
int3
aam
pushl
pusha
in
lds
stc
xchg
loop
jle
adc
mov
sub
data16
inc
jecxz
push
sub
lock
xchg
fadds
jae
shlb
mulb
push
std
pushl
pop
iret
sahf
push
cmp
and
repz
sub
repnz
incl
and
das
mov
sahf
mov
xchg
out
out
test
xor
pop
std
mov
adc
movsb
enter
and
or
push
inc
lret
lret
mov
out
mov
dec
in
xchg
dec
fidivrl
jp
lea
xchg
fwait
sub
add
pop
mov
mov
cmpb
mov
inc
ljmp
aaa
cmp
jbe
lods
push
ss
ret
ljmp
mov
aam
fwait
pop
mov
xor
bound
nop
fdivs
adc
jg
cmp
pop
sbb
sbb
mov
clc
sbb
loop
jg
outsl
xchg
dec
push
pop
add
mov
push
jle
xchg
iret
stc
dec
and
fildll
leave
push
loopne
scas
fiaddl
outsl
mov
cli
test
popa
mov
jb
jl
xor
ss
and
incl
stc
xchg
cmp
adc
dec
bswap
ds
xchg
in
ds
mov
jae
addr16
push
popa
hlt
call
and
cmpsb
lods
loope
je
or
ja
pop
push
into
je
inc
jo
inc
in
push
sub
test
adcl
call
loopne
push
jl
mov
std
mov
jno
daa
out
in
push
xchg
cmp
pop
xchg
sar
fistpll
clc
push
xchg
mov
insb
inc
jne
cmp
inc
mov
out
dec
jle
icebp
std
dec
adc
in
insb
push
cs
addr16
cmp
loope
scas
inc
orl
pop
movsl
pop
pusha
jmp
xchg
jne
ds
adc
fcomip
mov
cltd
addr16
add
xchg
xchg
sub
jo
mov
lret
aaa
cld
pop
dec
dec
out
push
xor
cs
gs
mov
jns
push
decl
xor
fcmovnb
sbb
sbb
xchg
fildl
or
sbb
push
mov
sub
or
js
jb
repnz
cmpsb
addl
scas
clc
jmp
ret
dec
xor
mov
fisubrl
pop
shrb
xchg
mov
sub
test
std
pop
je
and
push
push
popf
cmp
mov
adc
lcall
into
cmpsb
pusha
jg
test
leave
and
xor
in
pop
lret
ljmp
pushl
out
fwait
push
mov
lods
rol
sahf
dec
xchg
sahf
pushf
aas
sub
mov
cmpsl
pushl
std
decl
push
cmp
push
push
mov
icebp
fdivrl
aad
sub
jg
decb
pop
out
out
fs
xor
jo
mov
stc
mov
test
ljmp
pop
sti
jmp
movsl
mov
sbb
out
pushw
stc
mov
push
cmpsb
and
add
jae
mov
mov
repz
jmp
icebp
fisubrs
cmp
out
inc
or
mov
xchg
xor
ds
pop
adc
iret
adc
in
and
mov
inc
scas
xchg
cwtl
notl
mov
pop
or
out
ljmp
sarb
add
clc
push
mov
fiadds
and
sub
call
push
insb
insb
or
arpl
pusha
sub
xchg
adc
dec
in
out
in
outsl
lcall
int
mov
fistl
negb
std
mov
jbe
test
push
mov
jnp
mov
jne
fidivrs
stc
pop
add
in
dec
call
ljmp
inc
push
cmp
xchg
sub
pop
jo
cmp
add
adc
mov
pushl
mov
repnz
or
mov
dec
fwait
test
lods
inc
arpl
stos
or
imul
call
ret
pop
dec
lods
out
mov
cs
push
and
xor
xchg
jne
inc
cmp
jle
call
jnp
adc
mov
pop
jge
pop
mov
xchg
cmpsb
outsl
rol
mov
sub
das
add
sub
or
and
xchg
lahf
jne
cmp
cmp
lods
cmp
inc
mov
and
aad
push
repnz
pop
jne
dec
mov
adc
ljmp
lret
cmp
lods
mov
jg
jmp
loopne
jle
movsb
sub
incl
pop
xor
sub
mov
fbld
outsl
mov
aaa
mov
xchg
lcall
popf
ret
push
dec
push
inc
cltd
mov
inc
fsub
mov
jns
sahf
mov
pushl
push
push
jo
in
cmpb
ret
lds
nop
sub
mov
pop
jmp
call
sbb
mov
dec
sbb
push
push
adc
enter
pushf
pop
call
xchg
ljmp
icebp
mov
xor
or
pushf
cmpsl
xor
aas
dec
loopne
shrl
dec
jmp
or
sub
cmpsl
dec
xor
gs
fnstsw
or
cld
fwait
add
icebp
cmpsb
rcrb
mulb
jp
jmp
push
ds
into
mov
in
lock
jge
xlat
and
and
test
xchg
jnp
subb
or
sar
call
dec
adc
cmp
sub
aad
adc
inc
pop
bound
cltd
mov
fwait
out
popf
xor
inc
decl
or
mov
loope
adc
xchg
mov
mov
adc
adc
ss
mov
in
stos
sti
loop
sbbb
add
pop
cmp
xor
add
cmp
cld
fcomip
pushl
ret
mov
je
aaa
test
pop
mov
and
hlt
pushl
mov
aaa
lret
aaa
int
loope
jl
jl
lret
pushf
xlat
arpl
jp
mov
push
ljmp
cmp
xorl
pop
pop
lret
lcall
rorl
pop
inc
pop
push
ss
lret
pop
in
mov
jge
jmp
mov
aad
mov
incl
rorw
mov
xchg
mov
inc
mov
push
scas
fimull
fidivl
adc
xor
add
test
mov
adc
mov
out
jmp
into
int
xchg
divb
xchg
idiv
call
push
mov
adc
gs
enter
ss
mov
insl
lcall
ljmp
shl
sub
repnz
pop
gs
add
icebp
and
sbb
jae
cmc
pushl
mov
mov
cltd
fisttpl
js
imul
fists
cli
jg
mov
xorb
sbb
sti
jo
pop
rcrb
ss
jmp
ret
movsb
xchg
repz
pusha
mov
jb
inc
testl
pushl
cld
call
dec
lock
jg
cmp
adcb
mov
mov
arpl
dec
enter
jnp
sbb
mov
jl
inc
cld
xor
push
pop
jnp
loopne
fisttps
das
lahf
jmp
pop
fs
sbb
rorb
xchg
lea
jb
mov
jle
lret
rclb
cmpsl
add
das
clc
lcall
loopne
jae
ret
jge
dec
and
jecxz
mov
call
mov
arpl
incl
cld
jbe
aaa
gs
incl
gs
enter
push
xor
fcomps
hlt
dec
mov
jg
mov
xor
in
pop
clc
rcr
push
pushf
mov
scas
pop
outsl
lret
lret
mov
lcall
pop
pop
out
mov
test
movb
movsl
add
test
fcomip
gs
test
cmp
cmc
xchg
xor
or
mov
and
scas
jmp
leave
fdivrs
xchg
cli
pop
xor
cmc
adc
lcall
test
inc
jae
lds
sub
mov
decl
jo
in
pop
outsl
sbb
lds
pop
test
sbb
clc
add
dec
sahf
mov
sbb
jmp
lods
loopne
add
mov
out
lret
xchg
sub
adc
outsl
fbld
mov
pushf
lods
insb
adcb
push
sub
lcall
cwtl
sbb
xor
ja
repnz
movsl
aad
outsb
lret
loope
popf
ljmp
pop
rolb
mov
insl
lahf
addr16
roll
hlt
loopne
leave
dec
mov
mov
jmp
inc
adc
into
and
sbb
sbb
xlat
fsubs
push
incl
dec
imul
sbb
fsts
xor
cltd
push
cli
sbb
mov
lcall
inc
mov
fiadds
enter
int3
mov
push
imul
cmp
es
paddusb
mov
mov
xchg
ja
repz
mov
lcall
add
jbe
jle
mov
jns
incl
inc
or
mov
mov
cli
xor
or
call
out
jmp
pop
pop
jmp
cld
test
add
jle
out
popf
mov
dec
dec
mov
ja
test
and
lcall
inc
ljmp
decl
push
mov
es
inc
repz
arpl
sub
lock
movsl
jmp
mov
sub
dec
adc
out
xor
dec
lahf
repz
pushl
mov
mov
daa
xor
lock
insl
sub
sub
ror
push
sbb
adc
insl
and
and
loope
dec
xchg
cld
outsb
dec
loop
sar
cmp
sub
jo
lods
nop
xor
pop
imul
sarb
adc
xchg
hlt
fwait
ja
fldenv
mov
sbb
loop
add
sub
push
push
lea
call
fistps
xor
xchg
out
push
imul
repz
ljmp
push
fldenv
cs
in
cmp
sub
adc
call
ljmp
push
out
dec
or
jae
in
in
sti
and
lods
testl
push
jno
cwtl
xchg
lock
jno
aas
decl
lods
ds
xchg
test
fstpt
cld
mov
bound
pop
xchg
sarb
pushl
aad
cmp
insl
mov
repz
pop
test
pushf
lret
push
jg
add
orb
mov
push
fldenv
sbb
adc
add
pushl
std
jp
or
shr
lret
cmp
movsl
jns
or
xchg
repnz
cmp
leave
xor
cmp
push
cmp
mov
xchg
pop
mov
ret
and
fs
decl
mov
mov
push
cmp
mov
adc
mov
dec
pusha
fcos
incl
das
sbb
sahf
popf
loop
sub
stc
or
pop
in
dec
repz
lret
andb
incl
loopne
fistps
push
ds
sbb
orb
leave
sub
mov
mov
mov
cmp
jnp
bound
or
outsb
add
ds
cmp
push
sti
adc
icebp
and
jp
in
pushf
lcall
sbb
cmc
xor
inc
inc
sbb
adc
testb
inc
std
sub
cli
popf
sub
and
cmpsb
add
lcall
add
pop
lock
inc
test
in
test
shlb
pushl
pop
test
sub
push
pop
ret
idivl
std
pushl
and
movsb
imul
lock
sub
test
push
lcall
push
mov
fisttpll
cli
dec
repnz
incl
or
nop
in
pop
subl
adc
clc
sbb
call
xchg
pushf
inc
dec
pop
and
test
cmc
insb
sti
xchg
mov
and
inc
mov
test
test
cld
and
ljmp
jp
xor
inc
fiadds
imul
fadds
dec
jg
call
cmp
stc
xchg
mov
pop
mov
popf
sub
ret
rorl
add
insl
cli
xchg
inc
enter
decl
lcall
lret
neg
hlt
jmp
das
pop
in
jmp
cmpsl
add
mov
int3
fnstenv
scas
fidivs
out
stos
cmp
dec
dec
mov
aad
and
and
aad
ror
jns
in
in
push
mov
inc
or
xchg
sub
mov
lret
push
ja
sbb
outsb
jg
sub
mov
int
stos
dec
inc
outsb
int3
loop
or
jae
cmpl
pop
and
rcrl
xchg
andl
dec
push
fwait
daa
pushf
jmp
jmp
xchg
pop
dec
lret
sbb
stos
mov
mov
cmc
adc
mov
cmp
pop
ja
rcll
sbb
jmp
push
out
sbb
sbb
sbb
daa
iret
add
mov
push
lock
xchg
lcall
lret
inc
sub
ja
jne
pop
add
mov
add
stc
jmp
decl
inc
mov
ljmp
mov
stos
cmp
inc
jecxz
sbb
push
iret
stc
outsb
int
sti
arpl
inc
decl
insb
aam
loopne
and
push
loopne
dec
push
les
mov
dec
jmp
pop
loopne
jp
fwait
and
in
inc
lret
inc
jecxz
jns
cmp
sbb
insb
cmc
leave
lods
and
sbb
testl
mov
call
pop
outsl
pushf
lock
mov
mov
inc
out
data16
jb
push
push
lods
mov
and
cmp
mov
and
mov
mov
and
xor
decl
and
fnsave
cld
pop
jmp
imul
lret
inc
scas
inc
cmp
jg
je
mov
insb
pusha
cmp
xchg
dec
adc
lret
jno
xchg
pop
idiv
decl
mov
out
pop
push
cmpsl
xor
pop
dec
fildll
add
sbb
jle
cmp
pop
or
jbe
mov
and
jmp
adc
js
pop
sub
fdivrp
ljmp
add
add
lcall
loopne
pop
outsl
inc
jmp
push
out
fisubrl
test
sar
std
cmpsb
iret
negl
or
push
add
xor
int
loopne
ss
cmpsb
mov
pushl
and
dec
mov
test
cmpsl
hlt
xor
push
xor
adc
call
pop
xchg
jb
fstps
dec
outsl
mov
mov
push
xchg
cmp
decl
sahf
rcrl
inc
test
outsb
xor
fwait
rclb
dec
jo
gs
loopne
jg
fs
xchg
mov
into
fwait
or
dec
xchg
aam
xor
loope
aam
mov
jg
repz
adc
inc
jae
mov
inc
arpl
cli
or
gs
adc
xchg
push
into
jg
test
dec
cmp
fistl
jge
js
gs
cwtl
mov
fcom
in
and
jne
lock
inc
push
movsl
xchg
xor
jo
mov
jb
add
in
mov
imul
dec
clc
lods
add
into
aam
rcrb
mov
loope
call
pop
mov
mov
call
sarl
adc
fildl
add
pop
inc
mov
in
push
mov
jmp
cmpsl
dec
stc
ljmp
add
push
std
movsl
fdivrl
fwait
inc
lds
and
mov
call
int
push
outsb
push
pand
xor
mov
jns
push
icebp
lcall
or
pop
xlat
sbb
sub
inc
pop
cmp
ret
mov
test
cltd
and
pushl
les
mov
inc
sbb
xchg
cmp
fstl
pushl
mov
mov
and
push
cld
movsl
ror
adc
shl
push
outsb
xlat
and
outsb
inc
mov
jo
stc
xchg
js
cmp
cmpsb
adc
sbb
imul
cmpsb
dec
repnz
ljmp
adc
fisubs
popa
jo
or
jmp
or
loope
lret
sbb
push
cmc
and
xchg
dec
mov
arpl
incl
xor
fldenv
dec
push
cltd
call
mov
es
ljmp
sbb
sub
fimull
fiaddl
dec
adc
scas
fcoms
jl
das
adc
les
loopne
ljmp
dec
shlb
pop
ja
cli
lcall
push
lea
inc
jne
decl
or
pop
dec
add
xor
pop
cmp
loopne
outsb
jns
mov
jl
lcall
aad
insl
mov
loop
xchg
cmp
push
adc
xor
daa
or
cmp
dec
cmp
mov
xor
jle
push
jle
dec
or
mov
inc
jae
popa
adcb
pop
cmp
ss
push
stos
and
icebp
ds
jae
or
mov
jmp
aas
add
add
pop
cli
rcr
inc
sub
and
ljmp
push
fistps
hlt
clc
inc
stos
stos
or
lds
test
popf
sar
jns
sbb
ds
add
clc
incl
out
dec
in
and
js
mov
adc
mov
ljmp
leave
insb
outsb
sub
xor
test
sar
xlat
icebp
call
outsl
mov
dec
aas
fnstcw
dec
in
jo
jb
mov
lcall
inc
inc
sbb
push
loop
xchg
push
jae
pusha
les
cmc
xor
inc
mov
fnsave
call
in
dec
sbb
test
mov
sbb
inc
aam
ss
call
bound
cwtl
xor
mov
sub
lret
enter
icebp
incl
clc
push
xor
mov
push
repz
into
out
jb
push
inc
xchg
add
lcall
xor
mov
repz
mov
ljmp
jg
sub
cli
ret
mov
xchg
push
mov
and
lock
or
mov
mov
sti
pop
pop
outsb
mov
cli
fucomip
mov
jle
inc
out
aad
aas
out
lds
in
xchg
daa
out
lcall
out
mov
or
es
inc
add
xchg
lock
sbb
iret
push
and
sbb
std
dec
jbe
or
andl
test
out
pop
into
inc
push
adc
ljmp
cmp
sbb
jnp
mov
enter
cmc
adc
pop
movsb
jmp
outsb
scas
jns
pop
es
outsb
test
cmp
ror
ret
repz
imul
loopne
mov
and
call
inc
enter
hlt
add
outsl
fimull
lea
cmp
mov
push
leave
add
adc
push
rcrl
insb
scas
insb
popf
cmp
mov
lret
mov
fstp
push
aas
pop
loope
mov
mov
les
push
movsb
pop
pop
rol
in
or
hlt
dec
dec
call
clc
ss
sarb
cmp
pop
imull
jns
add
jmp
pushl
insl
sbb
addb
jbe
sti
sbb
fisttpll
orb
decl
ljmp
es
adc
jnp
cmpsl
nop
fcoms
push
cltd
rcll
push
pop
cmp
pushl
lods
pop
mov
pusha
sub
test
iret
ret
xchg
xchg
mov
jp
or
insl
out
addr16
mov
std
mov
mov
mov
mov
jmp
aam
fcoms
stos
jne
mov
pop
cli
inc
and
jecxz
aad
popf
pop
pop
ss
pop
ret
ljmp
dec
cmp
mov
test
xchg
mov
js
push
cmp
cmp
lcall
hlt
nop
in
repnz
adc
clc
aad
pop
sub
or
pop
pushf
inc
in
int3
mov
call
push
jmp
mov
xor
ret
sub
pusha
jae
ljmp
into
ss
fsubrl
aas
paddw
mov
pop
rcrb
adc
int
push
orl
out
cmpsl
cmpsb
subl
dec
lcall
fisttpl
pop
rcrl
jl
decl
insl
arpl
outsl
ds
cwtl
pop
aad
and
scas
int3
and
shl
or
pop
jmp
fmulp
sbb
pushl
lea
test
int
dec
mov
lock
push
jne
scas
lea
test
call
mov
fwait
lahf
sbb
pop
dec
sbb
ljmp
ret
push
repz
or
into
adc
mov
mov
aaa
sbb
or
pop
jg
fimull
fadds
mov
setno
jge
mov
test
mov
inc
inc
jge
js
mov
stos
shld
sub
movsl
jmp
pop
jmp
inc
mov
jecxz
sub
fcomip
ljmp
outsl
mov
cmpsl
imul
js
cmp
jmp
mov
xor
adcb
in
sbb
inc
andb
ficomps
ror
dec
ja
and
mov
mov
push
or
ljmp
dec
nop
push
xor
sub
mov
dec
mov
mov
test
fiaddl
call
xchg
push
js
ds
xchg
pop
dec
scas
sbb
xchg
dec
sti
lret
xchg
shl
and
in
decl
fsubs
call
pop
into
inc
in
mov
test
jmp
cmpsw
pop
cmpsl
aaa
shll
pop
add
ds
xor
push
andb
cmp
call
push
popf
mov
loope
pop
test
or
cltd
xchg
call
scas
pusha
lret
call
and
lods
xchg
aam
mov
mov
mov
xchg
test
cld
add
sbb
or
call
jae,pn
in
shll
mov
xchg
sub
cwtl
out
push
jecxz
jne
out
int3
stc
incl
cmovp
lahf
jo
stos
xchg
fpatan
push
stc
pop
push
xor
xor
mov
dec
call
test
xchg
fdivl
movsl
test
pop
ror
push
test
xchg
daa
daa
das
xchg
add
mov
ljmp
bound
mov
dec
lahf
repnz
add
xor
xchg
mov
popf
sub
jae
ja
and
es
imul
hlt
fs
push
mov
dec
clc
push
xchg
out
push
push
movb
xchg
pop
scas
mov
cmp
cmp
jno
jne
xchg
or
adc
jmp
movsb
outsb
jnp
adc
or
xchg
sbbb
sub
les
insb
mov
add
pushf
imul
mov
cmpsb
roll
adc
adc
sahf
or
mov
cmp
mov
cmp
push
repz
popa
mov
pop
inc
add
pop
test
std
inc
mov
xchg
fwait
out
movsb
in
pushl
mov
or
repz
push
addb
xchg
sbb
or
cld
adc
mov
mov
js
adc
call
push
ret
lods
fcomip
xor
shll
lahf
adc
adc
lds
aas
lea
sbb
scas
clc
mov
mov
mov
add
pop
pusha
insb
cli
incl
pop
popf
in
mov
xchg
lea
fistpl
mov
aam
daa
insl
incl
sti
inc
cmp
ljmp
rolb
mov
cld
int3
mov
add
push
adc
dec
pop
orl
out
cmp
movsb
mov
mov
xor
push
clc
mov
stos
fsub
push
fidivl
push
sbb
adc
jmp
mov
mov
or
lods
sub
jecxz
shlb
add
popa
ds
mov
incl
sub
push
sub
arpl
dec
nop
or
les
pushl
jmp
jg
mov
inc
sbb
sbb
daa
int3
aam
jp
mov
xorb
sbb
fsubrs
in
in
vmovlps
out
rcll
mov
out
inc
call
dec
mov
popf
daa
adc
std
pop
aas
push
popa
popa
out
inc
push
jge
std
xchg
mov
mov
fidivl
mov
xchg
mov
xchg
pop
cmp
mov
push
pop
subl
and
loopne
insl
fwait
pusha
sub
in
popf
repz
cmp
add
inc
cld
hlt
shlb
mov
pop
jl
pop
xchg
pop
js
add
push
out
cli
mov
icebp
jmp
test
and
bound
in
fbld
ret
mov
mov
jge
adc
sub
lret
fildll
push
decl
aad
push
into
push
mov
ret
mull
xchg
or
inc
jns
pop
inc
mov
cmp
sub
inc
xor
push
push
add
fcoms
ds
pop
or
jg
int
mov
les
in
add
shl
lret
xor
cli
jbe
jecxz
mov
lcall
loope
aam
adc
pushf
jnp
push
outsb
sub
pusha
hlt
fcomi
sahf
pop
xchg
ret
mov
push
aas
dec
in
fisttpl
or
pop
and
mov
lods
enter
cli
jle
gs
fs
icebp
loop,pn
cwtl
sar
push
test
call
aad
sbbl
inc
andb
loope
ret
xchg
jp
adc
jae
mov
lds
ja
outsb
call
push
jp
xor
call
pop
or
jmp
or
fnstenv
ds
outsl
jmp
mov
lods
xor
pop
mov
jnp
ret
pop
push
adc
or
mov
dec
xorb
rorl
lea
pusha
insl
or
xchg
and
testb
jge
repnz
mov
leave
data16
add
adc
xor
notb
push
ss
mov
jecxz
ret
ds
test
repnz
cmpsl
imul
mov
pushl
mov
pop
fwait
xor
pop
incb
cmpsb
jp
sahf
int3
fidivrl
jg
decl
rcrl
scas
shrb
adc
imul
ds
jne
sub
into
mov
dec
push
lret
mov
mov
sti
push
or
push
nop
sti
inc
incl
sbb
add
test
or
ds
cltd
sbb
iret
xchg
rcrb
mov
jg
shrb
into
jne
shrb
sarl
push
jne
xor
fildll
out
lret
jmp
cli
adc
jmp
fs
mov
adc
insb
ficoml
ljmp
inc
imul
dec
mov
xor
rolb
call
or
add
mov
pop
and
ret
fdivrs
sub
mov
mov
lcall
shl
notl
in
dec
add
fbstp
out
or
jp
sub
or
hlt
lock
in
jl
push
je
in
xchg
out
fstpl
in
and
jmp
jl
or
pop
icebp
call
mov
fcoml
mov
adcb
ret
in
jmp
les
pop
pop
inc
mov
jl
or
push
cmpsl
push
push
adc
push
test
mov
or
jmp
mov
sbb
xchg
push
sub
subl
cmp
jmp
mov
mov
aad
xchg
pop
outsb
mov
fistpl
scas
dec
jp
cmp
incl
fistl
stos
addr16
and
or
outsb
lods
mov
xchg
lcall
lcall
sbb
in
mov
dec
or
hlt
aaa
out
push
cmp
push
cmp
and
gs
les
incl
add
sbb
and
jbe
ret
cli
stc
fstpt
mov
mov
popf
out
dec
mov
repnz
pop
jno
mov
cmp
add
outsb
divb
bound
divb
nopl
arpl
call
mov
adc
dec
pop
push
loope
jb
add
push
and
sbb
iret
testb
movsl
incl
mov
and
dec
mov
inc
xchg
adc
outsb
sahf
incl
sbb
mov
decl
dec
lods
cmpsl
add
aas
and
int3
or
xor
ret
popl
push
xchg
xlat
ljmp
or
xchg
dec
mov
lahf
xchg
dec
inc
push
bound
addr16
daa
les
ret
call
or
jp
mov
adc
jl
and
into
or
or
jl
pop
sbb
in
sbb
decl
xchg
sbb
lret
ret
xor
xor
mov
xorb
leave
jmp
add
leave
sbb
adc
pop
fcomip
jg
mov
fwait
or
jg
mov
xchg
pushf
mov
jge
mov
rcrl
sub
add
pop
stos
nop
sub
int3
cli
jnp
insb
xlat
arpl
addr16
cmc
ljmp
add
inc
inc
xlat
or
fs
repz
cmp
cli
repz
jmp
call
js
cmpsl
or
xchg
add
fsts
call
daa
xchg
test
sub
jmp
sbb
push
pop
xor
xchg
sarl
jle
je
mov
inc
rcll
sub
xchg
xlat
or
push
xor
cmp
jecxz
sbb
sahf
out
pop
adc
stos
insl
out
icebp
sub
jnp
loope
das
cmp
xor
mov
push
mov
and
jns
cmp
jle
jmp
mov
pop
mov
push
cmpsb
dec
js
lock
xchg
jmp
mov
mov
xchg
dec
rorl
add
xchg
leave
push
cmp
lods
inc
hlt
out
clc
cmc
hlt
adc
movb
mov
sbb
push
jg
std
call
mov
out
test
mov
addb
sbb
pushl
pusha
jmp
add
sbb
jge
xchg
daa
sub
hlt
pop
push
lcall
cs
pusha
hlt
push
cmpsb
fistps
aad
sbb
mov
mov
cmp
dec
mov
sahf
notb
jo
ds
cmp
fcmovne
bound
cli
out
je
iret
movsw
and
mov
jmp
jno
add
fcompl
movsb
xlat
fdivrp
lret
sti
jg
out
xor
jmp
jmp
pop
lea
or
inc
fs
shll
clc
mov
mov
jmp
cmp
push
fistps
inc
test
dec
sbb
loopne
cmc
lahf
or
xlat
push
cmp
decl
out
dec
je
int3
sub
or
push
inc
flds
pop
cltd
rclb
dec
call
out
ss
lds
rcrb
jnp
aad
ljmp
cwtl
aam
pop
or
xor
mov
xor
addr16
pop
and
pushl
adc
call
roll
pop
sar
pop
mov
inc
dec
sbb
pushl
loop
push
std
dec
sub
xchg
cmp
shlb
in
jl
pop
arpl
int3
push
cwtl
pop
jb
lods
orl
incl
lcall
cmp
sti
jo
imul
sarl
mov
call
lret
pop
lea
push
push
and
jmp
mov
mov
push
jg
fcomip
stos
or
std
lock
xchg
movsb
fdivrp
lods
push
call
ret
fstps
inc
out
or
inc
fidivl
push
jnp
xchg
push
int3
cmp
sbb
test
out
pop
sahf
test
pop
sbbb
xchg
out
mov
mov
call
outsl
mov
and
pop
sbb
pushl
dec
sahf
cwtl
and
clc
inc
and
hlt
fisubrl
push
les
push
sar
push
std
mov
dec
adc
outsl
out
pop
ja
mov
jbe
adc
jg
sub
fdivrl
or
aam
and
sarl
add
call
orb
mov
add
add
pop
movsl
outsl
or
xlat
fcoms
and
push
sbb
push
add
mov
lds
push
stos
addb
jbe
xchg
fidivl
out
movsb
test
adc
out
mov
aaa
and
jne
jo
imul
mov
jp
ds
inc
lods
insl
xor
mov
inc
add
mov
add
inc
mov
or
mov
cmovo
fisttpll
sbb
pop
add
jbe
sbb
push
outsl
outsl
insb
push
out
mov
mov
xchg
jo
push
and
gs
push
fistl
or
dec
jo
sbb
ss
push
shlb
je
push
pop
subb
adc
imul
push
std
dec
jne
js
stos
pop
adc
push
insb
inc
fists
negb
mov
fsubrp
push
sbb
inc
jns
push
imul
push
pop
nop
icebp
loope
sub
mov
dec
insl
testl
xchg
sbb
push
push
dec
jb
jns
arpl
sub
inc
data16
and
repz
sbb
add
push
outsb
dec
xor
inc
insb
mov
aaa
in
sbb
iret
ss
arpl
imul
mov
outsl
jp
xorl
ret
push
rolb
bound
jo
fbld
fildl
insb
pop
xorb
xchg
mov
jne
data16
cmpsb
pusha
gs
mov
or
sbb
jo
inc
push
mov
inc
in
fildl
aaa
fsubs
mov
push
pop
out
loopne
sbb
jne
arpl
in
inc
adc
pop
push
gs
rolb
push
jns
loope
pusha
cmpb
jae
adc
push
push
push
sarb
pop
inc
jne
arpl
roll
roll
cmp
in
jae
push
insb
xor
jo
xor
pop
inc
ja
inc
xchg
add
push
jo
packuswb
rcrl
push
pop
mov
jo
mov
fsubrs
sbb
test
mov
je
insb
jae
ds
jne
arpl
or
arpl
shrl
dec
out
and
or
inc
pop
pop
ds
mov
xor
jp
fs
xchg
sbb
or
fiaddl
popw
push
sub
cmpsb
push
add
out
adc
push
xor
push
push
inc
xchg
or
roll
jne
in
test
notl
sub
dec
jae
jle
clc
push
stos
xchg
dec
jns
idivb
adc
or
push
roll
or
mov
iret
lret
arpl
and
outsl
push
cmpsl
fadd
xchg
lods
xor
mov
push
clc
push
nop
mov
loope
mov
mov
sbb
subb
enter
popa
es
jp
xchg
jg
xor
sbb
rorb
pusha
push
sbb
aam
popa
fcoms
inc
or
mov
dec
push
shr
adc
addr16
jmp
jne
mov
xchg
pop
xlat
fisubrs
xchg
inc
je
outsl
adc
push
inc
inc
iret
inc
cmp
xchg
adc
fadds
cli
mov
mull
ret
and
insl
sbb
jne
or
ret
es
mov
add
xor
adc
jo
lret
loope
xor
cmp
js
imul
mov
push
adc
outsb
pop
pop
loopne
mov
jbe
gs
xchg
or
insb
push
jne
inc
in
xor
insl
pop
jecxz
adc
inc
inc
inc
data16
jae
xor
lock
insl
sbb
movsl
and
shrl
mov
jo
sub
jecxz
add
sbb
inc
mov
popa
filds
sbb
sub
jno
and
pushf
push
in
adc
fisubs
repnz
sub
mov
push
outsl
pop
cmpsb
sbb
js
hlt
jecxz
or
jbe
adc
testb
ljmp
js
fwait
and
orb
leave
push
lock
dec
pop
aaa
pop
mov
addl
xor
xchg
push
mov
adc
inc
arpl
cwtl
adc
or
shll
inc
jb
add
vpunpckhqdq
out
and
pop
scas
addr16
inc
sbb
cmp
or
aaa
dec
adc
and
movsl
jns
int
cmp
pop
test
sub
ficompl
in
push
cltd
sub
fdivs
sub
insb
aaa
adc
jp
sbb
mov
pop
cmp
mov
fdivs
jmp
mov
lret
pop
fs
scas
rolb
pop
and
mov
push
cmp
outsl
repnz
jb
and
or
inc
pop
popf
pop
xchg
into
jo
inc
inc
lds
mov
sbb
inc
imul
loop
sbb
sahf
fs
push
mov
cmp
jb
fs
out
push
out
outsb
add
inc
insb
jle
punpckldq
inc
dec
stos
fs
rorl
jp
je
jae
in
jl
xor
mov
lea
jne
ret
mov
add
enter
lods
cmp
and
sub
jle
scas
rorb
push
loopne
xor
sar
and
in
mov
dec
push
push
pop
xor
enter
shlb
add
mov
mov
and
and
dec
in
dec
and
pop
jnp
dec
shll
or
dec
outsb
dec
in
lahf
xchg
push
sub
ss
mov
int
lcall
dec
add
mov
mov
adc
xchg
movsb
dec
adc
shll
or
push
adc
mov
add
sbb
or
mov
pop
mov
and
fldt
inc
cmp
xor
inc
jo
fs
push
hlt
mov
pushf
bound
xor
test
push
push
jb
xchg
inc
pop
xlat
inc
jae
jo
fcmovu
sbb
adc
add
rorl
mov
sbb
push
das
imul
push
imul
xchg
cwtl
mov
add
xchg
pushf
push
js
xlat
je
jp
adc
adc
inc
and
mov
outsb
sbb
in
mov
aaa
adcb
pop
lock
fidivs
push
inc
in
xchg
jnp
push
adc
adc
stos
pop
insl
addr16
adc
shlb
lret
nop
cmp
test
scas
arpl
aas
inc
lods
cmp
jns
gs
and
lcall
and
lods
in
pop
lcall
mov
movsb
fistl
ljmp
dec
jno
push
jmp
jb
xchg
test
addb
hlt
push
jns
insb
mov
xrelease
js
adc
and
dec
popa
and
hlt
and
push
nop
rolb
add
insb
adc
loop
xchg
sub
outsb
ja
push
or
shrb
jne
sub
or
xchg
lock
xchg
adcb
mov
and
dec
mov
std
lock
adc
pusha
mov
movsb
xchg
pop
push
loope
pop
inc
and
lds
pop
sub
imul
push
push
mov
mov
push
lds
aas
ss
xor
sub
pusha
js
jbe
mov
pusha
xchg
icebp
pop
or
mov
mov
jo
outsb
fistl
inc
js
add
lods
roll
mov
scas
popw
imul
xchg
sub
ret
gs
in
fisubrl
jo
pop
jmp
shrl
scas
inc
sbb
pop
shll
inc
cmp
pop
hlt
je
movsl
pop
sbb
dec
adc
loopne
sub
pusha
inc
mov
lahf
loopne
add
sarl
out
add
adc
inc
xor
sbb
iret
sbb
cltd
mov
lds
fs
jbe
fimull
js
sub
xlat
dec
sub
dec
pop
lock
and
cmp
mov
lock
push
jne
cmpl
fisttps
jo
add
pop
icebp
jae
push
dec
es
imul
dec
lret
dec
jmp
enter
inc
push
and
mov
orb
les
add
sub
mov
fidivl
addr16
scas
sti
pop
pop
push
mulb
cmp
clc
mov
leave
push
add
mov
cmp
pop
mov
mulb
xor
inc
pop
dec
addb
cs
mov
pop
and
add
add
outsl
sbb
jb,pn
popa
adc
push
stos
stos
gs
bound
out
mov
lock
add
push
dec
dec
jo
mov
sahf
jae
arpl
xlat
out
mov
mov
cmp
add
ss
das
dec
jo
push
pusha
js
dec
xchg
and
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
