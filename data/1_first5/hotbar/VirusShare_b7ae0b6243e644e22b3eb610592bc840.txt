fcomp
decl
loopne
inc
add
mov
or
and
dec
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jae
mov
mov
sahf
mov
les
aaa
mov
mov
das
mov
push
cmp
push
fsub
subl
mov
jns
aas
pop
or
sbb
test
loope
aaa
fistps
in
adc
adc
push
lock
out
std
lea
push
push
add
or
mov
rclb
pop
push
or
mov
push
xchg
dec
add
sub
leave
adc
fs
add
adc
sub
add
sbb
add
jge
daa
inc
ds
shlb
add
inc
hlt
sahf
sub
push
or
andl
mov
adc
mov
mov
adc
add
adc
xor
lret
pop
lods
cmp
or
mov
outsb
loopne
ret
fists
test
sbb
sub
mov
xchg
xor
fldt
mov
cs
lret
mov
cmp
adc
cmp
outsb
push
sbb
mov
mov
enter
sbb
push
sbb
pushf
xor
into
nop
pop
adc
mov
into
mov
dec
test
adc
je
adc
pop
cmpsb
jbe
lcall
add
ss
cs
dec
push
inc
push
fs
and
flds
cmp
and
pop
dec
adcl
les
sbb
mov
fwait
push
loopne
push
js
jle
into
les
sub
and
and
ljmp
xchg
and
xchg
push
inc
push
mov
lea
idivl
or
mov
dec
sub
leave
jbe
or
out
add
sbb
pop
and
lea
pusha
sbb
cld
inc
outsb
cmpsl
and
dec
test
scas
out
jo
pop
sub
cs
icebp
andnps
mov
orl
lea
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
stos
out
pop
push
inc
push
dec
dec
push
sub
push
insb
loope
push
xchg
popf
jae
ret
and
sbb
push
mov
inc
les
out
ljmp
fsubr
pop
add
in
add
mov
call
fmuls
sub
jl
or
scas
insb
add
inc
in
xchg
iret
and
add
and
inc
xor
push
cmp
int
add
and
add
sbb
cmc
fwait
mov
mov
push
aad
jne
fwait
or
test
ficomps
lea
das
dec
jne
les
faddl
add
dec
in
dec
inc
cld
ret
out
rorb
push
add
call
inc
mov
fldenv
je
je
jecxz
pop
mov
or
add
js
repnz
repz
cmp
sbb
inc
hlt
nop
test
jnp
dec
aas
cmp
mov
mov
and
pop
cmovs
insb
or
jbe
xorl
cs
sbb
mov
test
sbb
jmp
and
dec
or
add
iret
xorb
cs
xchg
ret
push
lea
push
and
push
popa
cltd
fistpll
cmp
inc
xor
push
aad
sarb
jb
fstps
jg
dec
or
test
push
out
adc
or
lea
and
pop
mov
popf
mov
pop
mov
jb
sub
out
pop
pop
sub
xlat
sbb
and
js
cmp
sub
sbb
add
test
fcompl
rorb
mov
pusha
push
cltd
fcmovnbe
xchg
push
es
push
push
add
add
ret
sbb
push
cmp
mov
sbb
in
jp
sete
test
test
cmp
sbb
enter
movl
push
inc
xchg
pop
push
clc
mov
push
insb
pop
dec
aad
or
rclb
sub
inc
or
stos
pop
inc
stos
pusha
lds
xchg
movsb
test
jne
je
push
pushf
xorl
sub
adcl
adc
bound
or
lods
push
scas
in
or
or
adc
or
loopne
outsl
push
sub
mov
jl
pop
subw
push
cmpsb
rorl
jmp
sub
sub
fidivrl
repnz
add
adc
orl
test
scas
dec
push
xchg
test
ss
inc
dec
aas
out
adcl
nop
std
jo
add
push
and
js
push
fsub
fs
adc
and
xor
cmpb
in
sub
mov
and
icebp
sbb
aad
aam
int
inc
jle
popa
mov
push
adc
adc
adc
or
imul
mov
test
mov
das
dec
fistpl
mov
or
push
mov
insb
xor
pop
sbb
dec
mov
add
push
jno
in
sub
push
sub
rcrl
xchg
daa
cli
imul
inc
mov
cmp
mov
js
jo
push
push
jecxz
cs
cmp
cmp
adc
mov
nop
mov
ret
push
sbb
data16
push
js
int3
aas
mov
rolb
test
xchg
or
jecxz
adc
adc
push
call
loop
adc
push
movsb
imul
add
dec
xchg
push
mov
xchg
mov
mov
push
inc
mov
add
jmp
xchg
fcoml
adc
adc
lret
push
loope
pop
daa
add
adc
popf
cmpsl
test
or
cltd
das
out
addl
mov
add
adc
jl
lahf
mov
outsl
jmp
inc
mov
xchg
xor
in
push
mov
adc
sub
ret
aaa
push
add
sbbl
lea
pop
pop
idivl
sahf
je
jmp
adc
les
dec
popf
lret
push
lcall
mov
jo
push
mov
dec
lods
mov
xorl
dec
test
jg
test
xchg
jmp
cmc
lea
insb
mov
outsl
mov
xor
ficoml
mov
sbb
sub
mov
adcb
push
xchg
dec
lcall
and
cmp
dec
lods
mov
outsb
in
test
cli
insl
push
hlt
out
paddusb
push
cmpb
sub
in
lds
sbb
sub
or
or
inc
add
inc
sub
cmp
cmp
jne
mov
dec
xchg
xor
aam
popa
mov
or
mov
leave
scas
xlat
jmp
ja
je
sub
cmp
je
or
pop
jmp
sub
enter
in
adc
mov
imul
add
adc
push
xchg
mov
gs
mov
adc
movl
push
outsb
lahf
sbb
mov
mov
mov
push
sub
call
call
xor
adc
aas
cmp
call
inc
cmp
jl
test
aas
add
pop
pop
mov
js
jne
inc
daa
aam
cmp
add
mov
aas
or
gs
push
mov
mov
or
pop
rcrb
dec
mov
inc
or
aaa
jbe
adc
adc
outsl
movsb
add
and
fbld
and
mov
and
mov
and
mov
mov
int3
xchg
je
push
cli
into
sbb
jmp
lcall
or
jmp
mov
lea
add
inc
test
jne
sub
and
sbb
push
inc
sbb
adc
push
mov
adc
xor
or
pop
aad
lds
fs
mov
jne
adc
jecxz
pop
dec
push
sub
das
es
lea
pop
jb
iret
inc
popa
fcom
cmp
clc
jmp
in
idivb
xor
mov
cmp
jl
xor
cmp
sbb
ret
mov
jp
xor
pusha
daa
aaa
pop
orb
adc
loop
fisubrs
rcrl
int3
arpl
pop
pop
inc
pusha
push
insl
lcall
jne
pop
mov
jl
and
sbb
or
or
mov
push
stos
xor
aas
loopne
fs
adc
pop
cmp
fists
or
jnp
adc
test
mov
std
sbb
loope
loop
jge
push
call
test
mov
stos
in
pop
nop
lahf
mov
jle
mov
mov
lahf
icebp
fdivrs
ret
pop
insb
mov
mov
pop
fdiv
cld
lea
push
or
cmp
add
mov
adc
cmp
ja
add
jmp
insb
fcoml
push
mov
push
hlt
in
clc
cwtl
jl
jle
loope
inc
jo
jg
mov
fcmovb
add
add
pop
and
stos
dec
pop
ret
icebp
mov
fldcw
clc
or
lea
jbe
je
cmpl
int
fcoms
insb
jge
sub
add
in
adc
roll
mov
pop
ret
xor
mov
cmp
loopne
in
rcll
push
rclb
cmp
fsub
les
jg
pop
pop
push
ds
call
mov
xchg
mov
notl
mov
or
mov
push
cld
cmp
ja
push
lods
ret
clc
lea
push
push
jmp
mov
or
clc
push
pusha
jb
mov
jmp
push
pop
sub
out
lahf
sarl
and
adc
adc
fisttps
adc
addl
push
push
push
add
cli
cmp
test
push
pop
push
push
lea
sbb
mov
outsl
mov
subl
mov
aaa
or
or
or
push
insl
or
sbb
pop
adc
pushf
ret
mov
loop
popa
mov
jg
int3
or
sarb
test
icebp
mov
pop
jne
inc
or
xchg
mov
pop
pop
fadd
stos
fstpl
sbb
ljmp
pop
mov
dec
pop
call
mov
adc
je
cmpl
lea
jl
mov
xor
jne
push
jno
pop
enter
mov
add
rorb
subb
das
shl
push
test
loopne
push
push
sbb
cmp
fdivr
rclb
mov
inc
into
pusha
push
inc
or
cwtl
or
aaa
fndisi(8087
mov
icebp
cli
pop
xlat
dec
xchg
test
xor
rorb
lret
push
cwtl
dec
sbb
sbb
xchg
roll
cmpsb
repnz
and
aaa
or
inc
inc
and
and
or
shlb
adc
ret
aas
adc
cmpsb
jg
lcall
inc
lods
pop
loop
mov
push
incb
dec
fdiv
je
adc
push
or
addb
test
mov
movd
imul
push
push
cwtl
ret
insl
mov
mov
adc
mov
mov
add
jb,pn
stos
and
or
cmpsb
mov
lea
mov
shrb
jp
sahf
sarl
jge
jmp
inc
add
dec
adc
cld
popa
rclb
push
lods
mov
lea
lds
mov
pusha
and
mov
fiaddl
adcb
or
cmp
cmpsb
mov
es
mov
jmp
add
ret
add
jle
add
or
es
ret
movsl
rolb
and
mov
dec
push
adc
push
out
loopne
push
sahf
outsl
xor
cltd
ret
mov
rolb
adc
mov
scas
rorl
or
add
xor
add
push
jae
cld
shr
cmpsl
int3
mov
push
or
mov
jle
mov
test
andl
xor
inc
pop
lock
hlt
cmp
cli
imul
lret
pop
or
cld
loopne
add
rorl
add
add
cmp
rorl
and
adc
pop
movsb
jb
xor
lock
mov
rclb
inc
sub
mov
add
adc
ret
or
ss
stos
adc
and
mov
rclb
mov
je
pop
pop
push
xor
push
std
adc
jbe
jmp
lahf
mov
popa
imul
jb
mov
pmaxub
mov
pop
pop
mov
test
lods
jg
lret
mov
fildl
gs
cmp
addps
sub
xchg
push
negb
pop
xor
push
xor
jb
out
cmp
dec
inc
nop
push
pop
gs
int3
clc
shll
mov
push
mov
inc
inc
adc
loop
sbb
cmp
cmp
popf
cwtl
push
jbe
and
or
or
sbbl
xchg
push
test
push
aam
xchg
sbb
pop
add
pop
push
mov
or
int3
mov
add
pop
xor
movsb
push
mov
sub
adc
pop
sbb
mov
xor
fwait
add
mov
and
popl
nop
shr
add
idivl
mov
loopne
sti
jne
xor
push
push
dec
pop
outsb
or
mov
sub
xlat
push
lea
add
ret
stc
xor
dec
pop
inc
fisttps
mov
test
mov
and
pop
arpl
rcll
xchg
push
mov
adc
jp
aad
popl
xchg
mov
adc
pusha
cmpb
pop
mov
adc
fstpl
and
pop
repnz
sbb
inc
shll
incl
add
add
test
into
push
sbb
pop
inc
mov
jno
loope
test
mov
mov
xor
cmp
fiadds
ja
outsl
cmpsb
testb
je
or
mov
sbb
test
cmp
std
pop
xor
push
push
movsb
rol
add
xor
scas
int3
mov
ss
ret
xor
push
pop
in
xchg
sub
push
adc
sub
sbb
stc
sahf
cmp
in
cmpl
and
jge
testl
addr16
jmp
rcr
inc
shr
add
jne
and
cmp
fmulp
xor
repz
sahf
jecxz
mov
je
and
cmpb
adc
lods
adc
clc
add
je
orl
sahf
add
pop
cmp
mov
ljmp
loop
xchg
jne
popa
aas
pushf
xchg
divb
test
or
or
lock
cmp
sbb
or
mov
inc
xorl
or
jg
mov
cmp
dec
je
xor
lcall
and
dec
cmp
dec
mov
add
xchg
sbb
mov
xchg
add
mov
lds
in
insb
or
enter
leave
pushf
cmpb
mov
outsb
test
cmp
pusha
hlt
pmulhw
rorb
jp
lods
cwtl
push
lea
hlt
rorl
dec
xor
inc
sbb
adc
sbb
fistps
popf
jns
lds
fdivl
adc
cmp
jmp
in
push
mov
xchg
fstp
in
or
fstpl
lret
mov
stc
das
xchg
mov
scas
sub
fdiv
jnp
jnp
daa
je
xor
jne
scas
data16
mov
sbb
in
fnstenv
push
inc
cmp
out
sahf
dec
bound
sahf
out
cmp
inc
mov
iret
in
addl
sbb
sbb
pop
and
jo
jg
sbb
ret
add
loope
push
adc
imul
mov
dec
sarl
sbb
repnz
out
dec
ljmp
in
add
scas
dec
inc
push
add
aad
aas
jl
inc
outsb
dec
dec
mov
pop
push
lea
push
mov
cli
scas
ficoml
add
push
lea
jns
fdivrp
cmp
push
xchg
xchg
and
aam
les
xchg
inc
sbbb
sahf
pop
adc
xor
sbb
or
sbb
push
js
add
add
adc
sbb
in
sbbb
xor
aas
push
in
mov
add
fiaddl
cld
ret
lret
xchg
mov
adc
test
in
add
add
lock
push
push
push
fnstsw
insl
jle
ficompl
add
pushf
sbbl
xor
mov
or
mov
mov
and
int
cltd
dec
faddp
jle
or
pop
je
pop
push
aad
and
mov
push
dec
mov
xchg
sbb
movsb
mov
cmp
call
in
out
sub
mov
shrl
nop
mov
mov
js
cmp
sbb
out
dec
xchg
xchg
sbbl
or
push
and
add
mov
push
dec
setne
push
and
xor
push
pop
mov
in
pop
pop
popl
nop
rcpps
dec
pop
hlt
push
push
push
inc
cwtl
rcrl
je
lea
push
add
inc
inc
add
addr16
xchg
pushf
push
mov
outsl
gs
jle
sahf
pop
mov
dec
mov
mov
pop
loope
in
sbb
or
push
cmpl
xor
adc
pop
and
test
cmova
mov
pop
push
mov
sub
ret
push
push
lea
int
adc
jmp
mov
push
push
mov
cld
ja
inc
mov
insb
push
dec
dec
mov
push
push
xor
xchg
iret
fistl
sbbb
daa
jecxz
inc
inc
push
ret
add
ss
mov
xor
and
sub
std
cmp
push
mov
add
sahf
inc
add
mov
arpl
cmp
pushl
pushf
in
adc
fmuls
mov
jbe
fsubp
imul
cwtl
push
sbb
cmp
jge
push
adc
xor
cmc
jl
cmp
inc
or
jle
inc
xor
sub
test
cmp
fists
sbb
or
dec
mov
pop
loopne
pop
ret
inc
neg
sbb
notb
cmp
call
adc
add
push
pusha
sbb
push
push
addb
adc
js
mov
cmp
xor
push
fisttpll
jno
mov
pushf
loop
sub
test
add
imul
add
movzbl
in
repz
out
sbb
mov
push
lret
jns
or
loop
xchg
fisubrs
mov
push
or
and
mov
inc
dec
loope
adcb
adc
clc
cwtl
add
jmp
lret
xor
ret
pop
push
push
push
and
push
add
mov
shrl
push
jo
lret
push
mov
mov
xor
add
pop
cmp
int3
mov
or
push
pop
xlat
loop
pop
push
pusha
push
mov
je
cmp
pusha
jne
and
add
lahf
sbb
ret
das
jbe
call
lea
jmp
pop
add
repz
test
ljmp
xchg
cwtl
jb
pop
cmpsl
add
rcrb
fldenv
test
test
inc
cmp
lea
mov
out
fisubrs
rorb
dec
xchg
xchg
push
xor
insl
and
daa
dec
adc
adc
pop
flds
mov
clc
bt
push
mov
xor
clc
mov
push
xchg
mov
sub
notl
dec
shrl
push
jne
push
mov
xor
jecxz
inc
and
mov
sub
ss
orl
xchg
lods
pop
push
pop
movb
lods
push
fstpl
movl
mov
pop
dec
cmp
addl
enter
jl
push
pushf
in
jns
lods
and
movsb
adc
xchg
dec
arpl
test
sub
mov
fstp
nop
add
dec
push
dec
mov
dec
sbb
fcmove
fisubrs
push
push
sub
fidivrs
push
addb
inc
inc
scas
loope
sbb
test
push
pusha
popa
push
add
add
jg
mov
and
dec
push
push
nop
cmp
sub
push
push
lea
aam
fcoms
bound
insb
push
lea
push
sub
mov
ss
push
cmp
or
je
rorb
jg
cmp
addl
or
push
push
test
je
orl
dec
addb
adc
inc
xor
ror
add
je
imul
add
or
push
test
mov
cmpsl
push
cmpsl
inc
push
push
and
inc
sahf
jbe
jo
push
sbb
jo
inc
and
js
je
push
jbe
ja
mov
push
dec
mov
sbbl
sub
movsl
sbb
cmp
clc
rdpmc
inc
fldl
fmull
add
cmp
push
inc
in
sub
jb
es
enter
mov
js
pusha
leave
adc
sub
cmp
adc
scas
add
cmp
shlb
popa
mov
in
push
push
loope
or
adc
pop
test
push
mov
enter
push
ret
jne
or
decl
mov
push
add
push
mov
pop
lock
add
cmc
or
push
and
push
shl
mov
sub
dec
andl
jbe
xchg
sbb
inc
es
mov
ss
cmpb
nop
or
sbb
adc
or
repnz
add
inc
xor
int
inc
xorl
cwtl
bound
scas
sti
outsl
addb
push
xchg
push
push
lds
pop
cmp
cld
cld
add
rcrl
and
cmp
jb
mov
jge
xchg
lock
push
stos
sbb
sub
sub
push
pop
inc
movsb
mov
fs
insb
pop
int
dec
push
mov
fcomps
stos
push
insb
jl
xchg
add
mov
outsb
iret
add
fdivl
outsb
mov
push
or
xor
int
xchg
inc
pop
fmull
sbb
int3
int3
outsb
dec
fisttpll
dec
push
push
push
lods
xchg
push
xor
jge
cmp
mov
js
adc
roll
jl
add
mov
inc
push
sbb
mov
add
lock
cwtl
lock
cltd
nop
lods
dec
popa
dec
pusha
jno
scas
xor
out
mov
pop
mov
enter
lock
incl
mov
push
or
adc
mov
mov
xor
or
rcrl
jle
add
lret
jl
cltd
and
das
and
ret
sar
push
cmp
fstpl
daa
jl
dec
rcll
sbb
pop
xlat
sti
jnp
xor
add
mov
mov
mov
imul
sar
mov
shr
add
mov
imul
push
sbb
add
inc
movsb
in
jle
in
ret
add
jmp
ja
stc
dec
sahf
cmc
sub
mov
stc
add
cmp
mov
push
enter
xchg
sub
sub
jo
or
sarb
cmpl
data16
mov
xor
and
cmpsl
icebp
call
inc
sbb
ret
ficomps
ds
es
lea
or
cmp
mov
lds
hlt
aam
outsl
sbb
mov
out
add
or
inc
dec
push
dec
adc
sbb
fisttpll
dec
cs
cmpsl
sbb
and
inc
pop
sub
fldz
data16
push
ljmp
pushf
sub
sub
xchg
sub
adc
mov
ss
jl
lcall
add
inc
push
aaa
ds
sub
in
lea
and
sbb
scas
push
xorl
push
jo
mov
jl
insl
arpl
mov
xchg
fisubrs
jle
cmp
add
xor
sbb
shrb
inc
out
jbe
in
add
popf
imul
cmpl
or
out
or
jmp
mov
dec
xlat
jp
pop
fistl
mov
sbb
push
faddl
xor
pop
decl
rorb
push
stc
sti
xor
sbb
ret
adc
std
mov
mov
mov
jns
inc
push
fsubs
js
mov
cmp
add
popf
add
mov
shll
js
out
fidivl
mov
lods
add
jle
push
in
push
pop
movb
add
mov
stos
xchg
xor
xchg
imul
adc
call
jbe
inc
cmp
aad
sbb
and
call
sbb
nop
rcll
sbb
dec
rolb
lahf
mov
je
mov
add
aam
js
pop
push
mov
mov
ja
push
or
dec
test
call
movsl
imul
sub
lods
test
add
sarb
notl
sub
sbb
int3
loopne
ret
dec
and
pop
test
test
or
sub
inc
add
inc
fildl
push
sahf
or
inc
outsb
jno
aam
push
inc
outsl
loopne
popa
ret
sbb
jmp
jecxz
inc
jo
sbb
pop
add
mov
xchg
cmp
jne
and
adc
jo
add
into
or
les
pop
or
or
pop
dec
mov
push
mov
pusha
add
or
and
in
push
pop
adcb
mov
sbb
xchg
out
test
mov
xchg
fisttps
fisttps
add
lock
jae
inc
xor
or
mov
adc
cltd
push
loopne
lea
add
or
cltd
test
test
push
pop
push
adc
jl
mov
adc
push
push
dec
xchg
sbb
mov
mov
xor
jl
mov
xchg
adc
inc
pop
js
int
mov
mov
jp
sub
lea
pop
add
xchg
or
ficomps
or
rorb
mov
popa
xchg
push
dec
mov
mov
mov
xchg
or
jns
sbb
xchg
push
push
cmp
das
orb
mov
pop
ret
lahf
or
or
sbb
andl
mov
es
inc
aam
cli
cld
mov
push
clc
push
sub
clc
setb
pop
cld
fisttps
push
mov
sub
cmp
setae
lcall
and
add
mov
xor
xor
mov
les
add
xchg
add
pop
push
add
sub
inc
push
aam
cltd
xorb
pop
add
adc
push
dec
push
movsl
push
es
pop
pop
adc
add
jno
or
jecxz
clc
or
push
dec
xor
push
pop
cmp
inc
mov
cmc
dec
inc
push
adc
sbb
adc
popf
paddw
add
adc
dec
mov
inc
ss
push
inc
push
shrb
push
dec
push
cmp
inc
or
adc
mov
in
or
add
cmp
in
in
sahf
imul
adc
les
jno
jle
or
pop
xchg
pop
cmp
ja
movzbl
push
lcall
dec
jno
cmp
cmp
ds
jnp
test
cmpsl
push
mov
add
mov
add
add
push
add
test
scas
xor
inc
call
adc
cli
mov
pop
lahf
mov
pop
pop
xor
mov
push
sbb
js
ds
cs
or
bound
jbe
mov
push
sbb
inc
xor
cmp
pop
jmp
pop
mov
dec
pusha
xor
mov
das
sbb
xchg
add
test
jmp
pop
adc
lret
mov
cltd
and
shl
imul
push
bound
sub
cmp
ss
jb
imulb
pop
adc
and
add
leave
mov
and
mov
hlt
mov
xchg
rolb
mov
call
add
mov
je
ds
nop
inc
mov
mov
mov
mov
in
jmp
dec
xor
lea
ds
or
or
and
xor
sbb
ret
jl
fisubs
or
movsb
sub
pop
bound
mov
mov
or
ja
subps
xchg
mov
and
cmpsl
mov
mov
mov
dec
add
push
repnz
in
push
dec
xchg
push
mov
xchg
pusha
rcrl
sub
xor
ljmp
or
nop
and
jecxz
jecxz
leave
es
shrl
mov
je
icebp
cld
mov
jmp
jbe
jne
push
push
sub
push
and
mov
pop
mov
movsb
ficoml
test
pop
sti
subb
jns
addl
mov
cmp
adc
in
and
in
cmp
or
or
insl
cmp
jge
movsb
lds
rol
mov
fisubs
push
clc
test
jp
dec
inc
pop
enter
in
xchg
sub
sbb
ret
dec
arpl
sbb
add
and
sbb
push
cmp
xchg
dec
add
ret
add
les
cmp
pop
xchg
pop
inc
mov
pop
inc
sbb
push
dec
add
push
push
ror
jl
pop
loopne
add
or
or
cmp
andl
pop
or
cmp
add
std
cmpsb
add
add
add
fisttpl
jno
fsubrs
push
enter
add
mov
inc
js
cs
pop
push
fisttpl
dec
xor
pop
fildl
nop
dec
or
xchg
xchg
leave
mov
nop
jno
add
dec
aaa
leave
and
cmp
and
inc
push
add
jne
adc
loope
dec
push
and
or
add
cltd
fs
sbb
call
mov
stos
add
jbe
mov
iret
push
int3
push
add
or
add
push
xlat
jae
movsb
mov
or
faddl
mov
push
adc
mov
mov
jg
loop
sbb
mov
inc
ss
es
ret
outsl
pop
movl
jne
mov
or
xlat
rclb
or
push
dec
mov
or
mov
pop
sub
pop
lds
insl
shl
mov
mov
adc
cmc
or
adc
and
rorb
jne
cs
jge
pop
push
mov
imul
in
inc
xchg
sbb
test
int3
push
mov
js
mov
cmpsl
xchg
pushf
xor
dec
adc
es
dec
push
inc
fidivrs
jnp
ja
adc
out
imul
lahf
in
movsl
inc
test
add
mov
pop
push
inc
insb
dec
sbb
insl
push
mov
lds
xor
xchg
lock
mov
loope
sub
push
adc
dec
push
daa
cmc
sub
iret
mov
cld
ljmp
and
add
mov
adc
xor
lret
ret
shll
mov
in
pop
add
jmp
add
and
mov
mov
les
jmp
fmuls
sbbl
jnp
enter
ja
and
jecxz
sub
add
push
repz
ret
hlt
and
in
sub
nop
jne
cmp
cmp
jb
dec
int3
mov
andl
pop
or
jmp
adc
das
push
test
into
cwtl
pop
call
fmull
pop
lods
jge
add
jo
jne
push
push
pushf
dec
lret
xchg
sbb
cmp
into
pop
and
iret
adc
add
mov
mov
or
sub
push
sub
pop
push
je
movsl
jns
lahf
adc
jmp
add
in
subb
push
and
pop
add
or
mov
pop
jne
jb
out
daa
das
push
or
sbb
inc
push
jg
sbb
or
sub
bound
outsl
mov
cmp
or
or
sbb
in
test
cmp
or
mov
add
jbe
push
cltd
jno
mov
mov
push
lret
hlt
shl
subl
pushf
sbb
loopne
aas
adc
sub
jge
mov
xchg
push
jle
fcomi
dec
sub
adc
shlb
push
add
xchg
mov
movsb
xchg
add
dec
and
or
mov
xor
sub
add
sub
xor
mov
cmp
push
pop
pop
sbb
push
or
mov
adc
jbe
andl
mov
idivl
push
adc
or
jne
add
cmp
pop
add
mov
je
sub
or
add
adc
js
sbb
inc
or
and
stc
bound
jo
scas
mov
loope
xor
adc
in
and
and
and
mov
or
adcl
and
daa
nop
cmp
and
jge
adc
xchg
jb
rolb
imul
add
push
jb
ljmp
mov
loope
mov
push
shlb
xor
ffreep
mov
adc
arpl
push
add
sub
sub
mov
cmp
enter
aam
or
adc
mov
or
mov
call
int3
add
push
clc
add
cmp
js
jp
and
in
cmp
push
js
mov
imul
pop
adcb
inc
push
adc
inc
daa
pop
rolb
int3
inc
or
leave
sub
sbb
pop
adcb
ud1
in
pop
adc
pop
push
sbb
push
and
inc
sbbb
push
sbb
jnp
clc
adc
inc
sbb
xorl
xchg
sbb
cmp
xor
pop
mov
imul
add
push
xchg
xor
add
push
packuswb
dec
sahf
sbb
push
add
xor
xor
repz
jo
xchg
or
xor
pop
add
test
aas
pop
and
cltd
add
xchg
insb
lock
jnp
leave
iret
dec
mov
xor
push
sbb
ss
or
push
repz
sbb
nop
cmp
push
adc
pop
pushf
mov
aaa
inc
add
loop
add
lcall
loop
adc
pusha
cmp
push
sub
mov
pop
wrmsr
sahf
cs
or
cld
fidivl
pop
and
lea
jnp
jnp
shrb
xchg
xor
adc
adc
je
jmp
xor
and
pop
leave
sbb
xor
sbb
inc
cmp
push
or
addb
int3
out
or
pop
sbbl
sub
hlt
fstps
push
testl
and
test
leave
into
mov
and
xor
loope
xor
sub
sub
or
insl
dec
jge
push
mov
push
or
jne
movl
push
int
and
and
xor
dec
xchg
rolb
ret
cmpsb
inc
pop
xchg
jo
cmp
imul
sarl
enter
mov
push
and
mov
pop
add
mov
add
mov
out
mov
popa
jo
sub
sub
mov
push
daa
mov
add
dec
jg
and
inc
movb
gs
xor
mov
mov
add
sti
loopne
adc
fsubr
pusha
fcoml
int3
mov
mov
mov
mov
and
neg
mov
mov
call
in
and
add
or
add
add
stos
in
push
inc
add
cld
mov
stos
cmp
push
mov
outsl
add
aad
enter
mov
cmp
add
inc
mov
or
por
push
popf
xorb
adc
pushf
sahf
mov
sub
add
cmp
lcall
add
mov
fs
xchg
lods
inc
or
push
clc
mov
adc
pop
mov
xor
push
into
imul
push
jp
and
pop
xchg
add
dec
mov
cmp
fld
dec
jp
cwtl
stos
pop
fwait
outsl
stos
xor
add
add
fdivs
cmp
mov
mov
and
pusha
pop
call
push
sub
fstpt
adc
adcb
dec
mov
xchg
test
dec
xchg
or
sub
push
push
xor
in
and
test
in
arpl
imul
push
shll
jno
addr16
lock
and
inc
pop
pop
loop
mov
pop
xchg
in
and
leave
push
test
je
inc
adc
add
jecxz
mov
push
fldenv
test
test
dec
dec
push
mov
pop
adc
lret
fld
inc
add
clc
pop
sbb
insl
pop
shl
leave
sahf
fiaddl
mov
inc
mov
or
lock
pop
push
and
int3
test
adc
enter
gs
or
les
mov
and
lods
adc
fisttps
cs
add
push
std
std
add
cmpsl
or
xchg
add
mov
xchg
sbb
or
je
push
pushf
es
mov
sti
jg
enter
in
and
pusha
pusha
mov
xor
out
fwait
out
mov
dec
push
cmp
int3
or
int
sub
in
in
cmp
and
xchg
adcl
cs
add
out
push
rcrl
and
enter
gs
push
sub
cwtl
sbb
mov
in
cwtl
jae
fs
stos
inc
adc
xchg
mov
add
xchg
outsl
shll
rcll
pop
add
inc
dec
rorl
and
in
inc
cmc
insb
mov
out
in
lahf
adc
repnz
nop
adc
inc
dec
andl
sub
mov
xchg
cmpsb
sbb
in
fcoml
adc
insb
or
js
push
adc
adcl
lods
fdiv
ret
imul
je
or
sub
test
add
loope
add
std
jns
sbb
xchg
mov
nop
add
sbb
add
popa
cltd
loopne
and
daa
sti
clc
mov
or
or
outsl
xor
mov
sbb
add
dec
lahf
cmp
dec
and
and
nop
jbe
jmp
mov
push
or
sbbb
enter
jno
pop
std
lret
rcll
les
js
mov
dec
fcomps
cmp
pop
shll
arpl
out
inc
repnz
sbb
jne
xchg
movsb
pop
cwtl
fs
addb
inc
fildl
ja
inc
mov
enter
xor
add
sub
jbe
lods
lgs
mov
and
sub
xchg
lahf
lahf
push
outsl
sbb
push
sbb
sub
cmp
push
or
pop
push
ds
pop
jb
call
push
inc
loopne
sub
orl
out
data16
outsl
xor
adc
fst
and
jmp
pop
je
add
add
and
shlb
mov
dec
jae
or
lock
loopne
outsl
push
ss
push
adc
xchg
cltd
popa
dec
cmp
push
pop
scas
inc
bound
rcrl
and
lret
sbb
inc
sbb
and
dec
fs
add
jecxz
sbb
out
shrl
mov
aam
inc
inc
pusha
or
ret
jo
imul
inc
add
and
sub
shlb
sub
test
sub
add
cmp
cmpsb
push
pop
add
mov
fs
shr
inc
xor
mov
mov
mov
insb
or
icebp
mov
iret
fstl
les
mov
and
mov
jge
xchg
adc
leave
mov
dec
adc
je
and
test
hlt
dec
clc
and
or
jge
push
lock
dec
push
push
dec
out
sub
mov
lret
test
jle
jg
arpl
es
sub
aaa
xchg
clc
add
jl
pop
add
cwtl
fucomi
ret
add
mov
jne
push
and
add
mov
jmp
mov
lea
inc
imul
int
fucomi
pop
push
or
dec
dec
cmp
add
mov
jb
pop
in
sub
push
push
cmp
popa
sub
ret
fdivl
je
dec
pop
xor
adc
mov
in
js
jle
jb
ficomps
ficoms
lea
outsb
push
lds
pushl
add
in
cmp
test
test
repnz
push
testl
push
mov
sub
loope
push
xor
test
mov
sbb
movsl
xchg
idivb
xchg
sbb
shlb
ret
adc
push
leave
xor
dec
add
leave
jae
cmp
add
xor
add
aad
dec
xchg
mov
cmp
les
jg
mov
sbb
mov
aaa
ss
cmp
adc
iret
gs
add
push
add
add
sub
mov
jnp
adc
rorb
ds
adc
dec
push
pop
test
or
pusha
or
inc
sahf
in
shl
or
add
mov
mov
js
je
cmp
test
movl
inc
push
test
or
mov
test
aam
push
xchg
xlat
jecxz,pn
inc
sub
add
xorl
decb
cmp
jle
mov
and
or
out
xor
syscall
push
sbb
mov
and
jge
icebp
add
ss
adc
inc
roll
arpl
add
fs
jae
adc
mov
mov
pop
push
mov
imul
xchg
cmp
dec
push
sbb
loop
out
inc
push
inc
sbb
inc
mov
pop
pusha
ja
mov
sbb
dec
mov
jle
aas
add
imul
sbb
sarb
pop
dec
cld
lea
sub
fs
dec
and
mov
fimuls
in
jo
sbb
mov
int3
cmp
and
aas
mov
aad
xor
pop
dec
loopne
inc
dec
xor
xchg
sbb
call
add
rcrb
mov
and
or
push
sub
dec
and
lock
loop
add
push
test
lret
add
and
xor
das
es
or
psrld
cltd
rorl
mov
jge
lcall
fimuls
mov
into
inc
mov
and
add
aad
mov
jg
ret
inc
and
mov
adc
push
sbb
pop
add
repz
xor
lock
jmp
cmp
sbb
insb
cs
cmp
add
mov
insl
sahf
fmull
sbb
hlt
adc
cmp
stos
ret
add
ret
je
sub
idivl
mov
into
push
aas
push
push
push
sbb
jmp
push
cmp
test
notl
insb
xor
rcrb
push
xchg
jmp
shll
push
push
sti
inc
mov
add
mov
inc
fmull
push
mov
test
sahf
and
or
outsb
jecxz
xchg
mov
push
jmp
mov
fistpl
je
clc
xor
xchg
inc
add
jns
js
iret
push
ja
sete
mov
out
xor
sub
dec
adc
aaa
or
testl
add
xchg
push
xchg
repnz
or
nop
jle
sub
adc
and
popa
pop
insl
jnp
mov
mov
ret
ret
inc
mov
sub
flds
fists
mov
fistpl
xor
subl
or
fistpll
pop
stos
adc
inc
stos
sub
cmc
inc
scas
adc
inc
jp
push
gs
in
mov
cmp
loope
es
test
cwtl
or
je
rol
push
inc
and
push
push
jg
lds
scas
add
lea
ficoms
fwait
insb
mov
or
cmp
and
in
lret
rorl
dec
inc
jb
mov
cs
mov
dec
repz
clc
test
mov
adc
cmp
pop
or
sub
nop
sbb
pop
rorl
mov
mov
xchg
add
popf
shrb
imul
cmp
out
loopne
sbb
push
lock
xchg
inc
jle
jl
sub
inc
cwtl
cmc
fcoms
adc
fcoms
cmp
jg
ret
push
cmp
xchg
fdivrl
testb
mov
push
sbb
iret
push
lahf
lods
test
sub
and
pop
jno
adc
adc
sub
adc
inc
mov
xchg
add
je
mov
push
jle,pt
sbbl
adc
inc
push
sahf
clc
jno
xchg
add
jno
jmp
insb
aam
dec
aaa
inc
adc
pop
push
and
add
les
repz
xor
push
adc
shrb
fs
call
mov
out
or
cwtl
fstpl
adc
mov
mov
xor
imul
lea
cmpsb
xor
mov
rorb
stc
inc
push
push
repnz
icebp
mov
cmp
or
pop
fdivl
push
leave
xchg
adc
mov
adc
pusha
icebp
or
adc
sahf
roll
or
adc
push
shl
call
lods
aam
test
fidivrl
movb
nop
insb
xchg
outsl
or
add
add
adc
in
dec
or
xchg
or
fistpll
std
pusha
cmpsb
ret
mov
shr
jo
lcall
mov
or
call
adc
call
mov
sub
push
add
fdivr
mov
bnd
xor
sbb
adc
push
push
mov
fwait
xchg
loopne
stos
pop
jp
mov
shrb
pop
inc
rcll
jg
clc
xchg
mov
push
je
push
pop
clc
xchg
cmpsb
mov
xor
mov
ret
and
add
out
movsb
nop
mov
add
data16
dec
push
jg
sarb
in
add
lcall
cmp
jne
sbb
inc
fistps
dec
je
inc
jp
ja
cmpsl
ret
iret
das
bnd
fld
mov
add
cmpsl
adc
and
cmp
mov
std
pushf
mov
mov
subb
test
adc
xchg
sub
sbb
cwtl
sbb
je
mov
mov
mov
jg
adc
add
sub
or
lea
jge
push
push
shl
rcrb
imul
flds
pop
sbb
add
sahf
sub
add
push
push
inc
sub
cmp
out
mov
ret
xor
pushl
mov
add
lods
fcmovb
xorb
sub
out
and
sbb
fldl
addr16
pmulhuw
sbb
mov
push
dec
sbb
add
xor
dec
push
leave
bound
add
xchg
push
sbb
push
int3
or
imul
add
pusha
out
inc
push
adc
cld
push
jecxz
and
xor
aad
push
je
cmpb
pop
mov
cmp
lock
push
add
mov
sti
sub
add
sti
push
dec
sub
test
ja
xor
lret
lret
add
cmp
push
add
sub
cmp
sarb
mov
dec
hlt
jge
push
xor
arpl
jp
add
fdivl
xor
xchg
xchg
cld
push
movl
push
data16
jns
jno
enter
mov
mov
xchg
or
push
adc
push
sahf
jl
mov
dec
adc
andps
push
add
push
out
sub
inc
lods
dec
mov
enter
je
in
bound
cld
sub
add
pop
test
pop
lea
mov
mov
adc
adcb
in
imul
cmp
adc
scas
and
push
mov
dec
and
ficomps
push
stc
inc
mov
or
mov
int3
xchg
add
sbb
outsl
and
repnz
hlt
fwait
xor
fisubl
hlt
push
adc
add
xchg
pop
or
rcll
fsts
nop
sbbl
sub
rcrl
adc
orl
mov
int3
pop
mov
push
mov
stos
jae
incl
cmpsl
test
scas
outsb
push
ret
adcl
cmc
imul
jle
jg
push
fs
pop
mov
ret
aas
cmp
sbb
adc
js
add
xchg
subl
or
xor
aas
repnz
sub
adc
daa
add
ret
jg
fs
shrb
pop
int3
cmp
dec
and
scas
adc
adc
test
insl
aad
sbbl
sbb
xorl
adc
sbb
fldcw
sub
decl
testb
jl
mov
and
test
jle
adc
cmp
jle
lock
out
mov
sub
lock
loop
or
cltd
flds
add
dec
ljmp
popf
adc
andl
lret
add
into
xchg
push
int3
lea
pop
sahf
cmpsl
push
lea
mov
orl
and
push
push
push
inc
push
and
push
push
cmpsb
xor
lock
outsb
aaa
push
test
and
aam
mov
lods
jmp
sub
add
jae
mov
mov
or
mov
cmp
sub
pop
pop
ret
popf
adc
repnz
pop
pop
mov
jmp
jl
add
ret
pop
popa
in
inc
xor
lock
clc
cmp
jbe
pusha
adc
jg
jne
cmp
jbe
sub
xchg
inc
pop
ds
int
sbb
rorb
add
adc
add
sub
call
mov
push
jmp
lods
imul
jb
fistpll
cmpsb
xchg
and
jo
add
add
adc
insl
sbb
pop
inc
testb
add
mov
stc
imul
aas
mov
adc
inc
or
cwtl
and
mov
ds
adc
inc
shll
or
enter
enter
sbb
push
cli
and
mov
add
sub
push
push
ret
xor
fs
or
andb
jo
in
pop
push
sbb
push
cs
loope
pop
push
pop
shrb
add
xchg
or
sub
mov
and
sbb
fs
ret
outsb
sub
push
xchg
fimull
orb
mov
and
mov
andb
add
inc
pop
cli
sbb
test
push
fwait
mov
mov
mov
jb
jo
sub
test
or
and
push
lds
add
mull
jmp
mov
mov
mov
jb
pop
sub
push
sub
sbb
iret
xor
mov
jecxz
roll
in
lds
sbb
frstor
push
popa
sbb
sbb
xor
in
add
sub
jmp
or
mov
cmp
push
push
mov
xor
mov
xchg
orb
repnz
stos
sar
daa
sahf
sbb
or
mov
or
mov
adc
cwtl
add
jne
hlt
push
jg
push
xchg
adc
sub
pusha
push
push
mov
fwait
pusha
add
sub
out
mov
imul
xor
xchg
or
leave
push
or
pop
test
push
mov
subl
cmp
arpl
mov
pop
and
adc
and
jb
sub
mov
push
repz
test
cmp
push
add
jmp
scas
mov
push
sbb
stos
movsl
dec
vpcomub
jp
push
sahf
xor
repz
popf
add
loopne
lods
push
adc
sub
ds
push
inc
inc
push
xor
jno
es
fisubrl
es
push
mov
xchg
jno
dec
mov
movsb
dec
pusha
mov
push
inc
lcall
push
mov
sbb
or
mov
xor
xchg
lods
pop
cmpsl
dec
jnp
sbb
adc
adc
lock
add
xchg
out
inc
add
xchg
pushl
mov
sbb
nop
scas
repnz
lret
cmpb
jne
xchg
or
cmp
add
pop
adc
xor
mov
and
mov
push
mov
andb
pop
pop
rcll
pop
jo
pop
pop
or
and
sub
jo
cmp
and
inc
imul
inc
pusha
in
jecxz
mov
lcall
jne
sti
sub
and
adcb
hlt
adc
rcrl
popf
push
int
sbb
adcb
mov
lods
insl
or
or
gs
clc
out
shlb
mov
pop
jle
pop
jne
ret
push
dec
pop
cmp
push
push
add
add
mov
push
add
jmp
xchg
xchg
lahf
and
xchg
xor
sub
test
fstps
sub
cmp
add
loopne
and
loope
jne
xor
mov
or
aas
jle
lret
xorl
mov
add
and
and
enter
stos
and
jge
lret
pushf
sub
and
cmp
push
call
pop
xor
pop
add
inc
stos
or
push
and
or
pop
outsb
hlt
loope
sbb
test
stos
jg
xchg
ret
repz
cmc
xor
js
mov
mov
push
ret
mov
xorl
jo
and
pusha
repnz
lret
cvttps2pi
dec
push
sub
ret
pop
dec
aam
mov
push
cltd
mov
xor
xchg
sbb
and
inc
xchg
add
fwait
insl
ret
adc
push
push
sbb
inc
xor
cmp
adc
sub
insl
lret
mov
stc
pop
or
add
daa
arpl
xchg
add
repz
dec
pushf
adc
push
jg
add
jbe
inc
or
mov
push
add
test
fistl
lock
movsb
dec
add
pop
lahf
or
xchg
add
add
xchg
inc
sub
cltd
or
add
push
dec
jbe
clc
and
mov
out
adc
aas
ds
push
pop
sub
outsb
pop
fcoms
xor
jecxz
jp
mov
xchg
sbbl
push
jbe
sub
or
inc
or
dec
aas
jnp
push
or
ret
test
popf
jbe
push
jo
mov
add
mov
mov
jne
dec
mov
add
or
int
loop
lock
push
cmpsl
insl
mov
dec
std
xor
push
clc
mov
sbb
cmpsl
sub
cmp
loopne
ss
lea
pop
call
mov
filds
into
xchg
scas
adc
repz
push
add
in
and
xor
and
es
mov
fdivs
inc
jg
pop
cmp
cltd
pusha
filds
stos
xchg
test
push
dec
push
push
push
nop
lock
fs
xor
and
push
insb
les
movsl
aaa
shlb
and
gs
pop
mov
gs
insl
rorl
dec
repnz
and
xor
pushf
ret
pop
shrl
add
push
xchg
jle
mov
or
xchg
imul
or
or
jbe
push
push
js
push
out
mov
mov
and
dec
stos
or
or
push
sub
nop
pop
sbb
jmp
je
lea
sub
aam
add
rcr
cmpsl
inc
push
or
mov
js
lcall
test
push
push
in
jg
mov
mov
cmp
push
push
inc
sub
ljmp
mov
outsb
mov
jb
mov
jmp
mov
mov
sub
imul
add
in
dec
jle
clc
filds
push
cld
mov
sub
or
jge
push
sbb
clc
lret
xor
push
sub
lcall
xchg
pop
sbbl
or
and
bound
inc
sub
sub
je
sub
push
push
push
push
and
lods
push
push
push
push
in
cmp
and
sub
add
cmpsb
jg
add
push
movb
sbb
xor
sbb
lds
and
sub
jecxz
andb
or
dec
outsl
pop
call
jg
add
mov
xchg
ret
jmp
sbb
out
lea
jmp
into
nop
shll
dec
insb
enter
push
sbb
cmc
rorl
ret
daa
lock
cmp
sub
fiadds
add
push
mov
loope
fmull
or
pop
rol
pop
and
es
hlt
ljmp
std
insb
fildl
pop
cmp
jo
push
push
andl
jae
pop
sub
push
push
pop
pushf
push
or
xor
jo
jmp
adc
mov
xchg
arpl
sahf
xchg
mov
orb
movl
mov
adc
mov
cmpl
push
jp
inc
push
xlat
adc
fcoms
mov
mov
sub
adc
ss
xor
fsts
push
ds
or
or
insl
lock
adc
test
xchg
push
js
pop
fwait
xchg
inc
lds
sbb
loope
int3
push
push
insb
shll
mov
jge
add
jae
inc
jl
mov
pop
das
pop
rcr
inc
and
fs
insb
cmp
adc
sbb
sbb
clc
mov
mov
dec
add
shll
add
sti
push
mov
xchg
inc
inc
sbb
inc
push
xor
sbb
call
ret
adc
call
push
adc
pop
pop
not
popf
push
adc
dec
or
push
rorl
fdivrs
push
mov
sbb
inc
xor
inc
pop
push
pop
jge
jo
sub
add
inc
cld
xor
iret
repz
xor
cmp
add
mov
enter
mov
push
and
push
jnp
ja
inc
dec
jmp
xor
outsl
add
push
push
mov
pop
xor
sub
xchg
pop
or
and
mov
or
rclb
ret
and
jg
addr16
shlb
call
add
jnp
mov
lock
push
call
xor
push
les
mov
cmp
pop
push
lahf
adc
ret
out
lods
sub
rorb
pop
ret
test
sbb
fimull
pop
lahf
shrl
mov
dec
shll
adc
movsb
fwait
incb
push
push
lock
inc
cmp
scas
or
inc
clc
xor
push
aam
xchg
pop
mov
movl
dec
lock
clc
in
pop
add
sarb
pop
push
ret
inc
dec
push
push
mov
pusha
incb
mov
push
dec
lock
xchg
add
push
into
dec
dec
lock
push
or
push
and
add
std
hlt
scas
sbb
xor
popa
push
stos
or
pushf
mov
pop
addr16
fnstenv
je
inc
jnp
mov
jnp
jae
mov
and
sub
dec
push
pop
jg
ljmp
dec
jb
pop
lea
test
aam
pop
mov
jl
mov
pop
pushf
loopne
cmp
and
xor
jb
ffree
xchg
and
or
sbb
sub
movl
sbb
lods
ret
lock
jge
or
add
dec
imul
rorl
cld
pop
orb
sub
sbb
repz
mov
ljmp
lea
jne
push
push
test
adc
or
or
cld
loope
push
cmpsb
mov
mov
push
sti
dec
js
push
stos
xchg
paddusb
add
mov
adc
sbb
fidivs
je
mov
xchg
notl
out
movl
push
jb
sbb
int3
fwait
mov
mov
nop
iret
mov
clc
sbb
dec
adc
cmpsb
insb
push
cli
int3
sbb
mov
loope
ret
mov
jg
inc
jecxz
and
andl
push
mov
call
adc
dec
mov
pop
repz
prefetch
or
adc
ljmp
xchg
xor
or
pop
mov
lock
xchg
mov
dec
icebp
es
out
icebp
xor
xor
inc
movsb
sbbl
pop
push
pop
sub
in
leave
mov
xchg
mov
movl
push
sbb
daa
inc
inc
ljmp
sbb
push
sub
and
add
pop
lret
scas
cwtl
mov
jns
hlt
notl
dec
lea
push
test
jg
mov
hlt
inc
js
shr
mov
fcomps
cltd
in
jg
mov
mov
sub
jecxz
fistpll
cmpsb
push
inc
sbb
fwait
inc
xor
in
dec
jo
xor
les
pop
cltd
les
dec
hlt
push
pop
cli
ja
add
ss
mov
loopne
lods
push
mov
cmp
cmp
pop
mov
dec
jmp
mov
cmpsl
add
adc
shlb
push
mov
xchg
mov
loope
jne
shr
sub
push
push
mov
and
add
mov
or
lcall
push
push
loope
inc
adc
add
cs
mov
or
std
push
inc
lcall
push
cld
mov
gs
jne
xchg
sti
sub
mov
sti
cmp
push
movsb
xchg
dec
add
leave
xor
xor
iret
jo
add
sbb
or
dec
fisttpl
push
push
lods
incl
or
sub
out
sbb
mov
shrl
into
dec
in
popa
or
loope
aas
cmpsl
mov
xor
mov
mov
mov
cmp
mov
sbb
movsl
stos
inc
cmp
cmp
or
and
hlt
imul
push
mov
or
mov
push
push
inc
sub
pusha
movsb
jae
fisttps
out
push
mov
pop
jmp
add
test
or
jmp
mov
sbbl
lods
es
or
into
adc
add
xor
je
loope
std
or
and
push
sub
sbb
pop
adc
jb
inc
add
sub
nop
sbb
jg
aas
add
es
ret
inc
shrl
pop
xchg
and
adc
sub
ret
cmc
push
push
imul
adc
ja
mov
fs
mov
xor
lahf
add
push
and
lods
inc
lds
das
fdiv
sbb
jb
or
movsl
mov
loopne
pop
test
xchg
fdivl
lds
scas
add
cmp
dec
sbb
iret
pop
cltd
mov
pop
push
dec
shll
push
insl
xor
mov
shll
adc
je
orl
adc
mov
push
push
xor
mov
imul
loopne
cmpsb
sbb
and
or
cmp
aaa
mov
adc
js
cld
aaa
push
out
cmp
cmp
xorb
cmp
xlat
xchg
dec
arpl
sub
out
push
xor
sti
push
or
and
sbbl
ss
inc
push
or
add
dec
cmpb
push
out
gs
mov
out
dec
xor
xor
adc
rcrl
cmp
js
mov
repnz
adc
in
stos
mov
lds
cmp
lret
xchg
dec
fmuls
push
adc
adc
push
push
cmc
lret
adc
mov
xlat
push
flds
mov
pop
cltd
mov
inc
sbb
pop
sbb
popf
and
dec
xchg
inc
or
mov
mov
pop
sbb
repz
insb
dec
cmp
or
sub
inc
push
test
sub
jmp
stos
ljmp
adc
roll
out
and
mov
sti
inc
push
jns
inc
adc
cmp
or
sarb
dec
out
in
mov
push
sub
fldenv
std
mov
aam
mov
cmp
pop
icebp
push
pop
lahf
jmp
push
outsb
test
add
cmp
inc
mov
popa
xor
les
xchg
jns
push
lahf
pop
lea
mov
in
orb
push
pop
mov
call
push
jg
mov
bound
and
xor
cld
cmp
mov
fcoms
sarb
or
jbe
xchg
roll
or
push
lcall
sbb
and
out
sarb
aad
std
dec
add
bound
loop
daa
mov
sub
push
inc
push
mov
push
nop
icebp
add
cmpsb
or
and
xchg
jl
sbb
les
popa
inc
sbb
add
or
subb
and
and
push
xor
loopne
repnz
neg
es
daa
sub
aam
mov
ja
popl
add
or
dec
adc
sbb
mov
es
xor
or
cmp
xchg
push
and
adc
mov
test
add
dec
ljmp
xlat
hlt
jns
ret
inc
add
push
push
add
xchg
jmp
push
add
ja
and
shrl
or
mov
in
xchg
xor
stos
sbb
add
push
cltd
pop
xchg
inc
rolb
pop
rcll
dec
push
pop
sub
pop
cs
fdivl
add
add
xchg
ret
mov
pop
inc
in
inc
sbb
xchg
mov
push
and
sbb
lcall
cmpsl
mov
sbb
jo
dec
and
mov
loopne
testb
sbb
xor
and
mov
xchg
mov
mov
cmp
rorl
pusha
xor
mov
pusha
enter
aas
push
push
shrb
pop
sub
fistpl
inc
and
adc
add
popa
mov
sti
fcoms
push
push
aam
mov
loope
outsl
sub
sbb
cmpsb
mov
adc
notb
jecxz
jno
js
stc
movsl
xchg
adc
dec
fldenv
test
mov
sbb
test
cmp
push
cmp
pop
sbb
adc
add
mov
xor
ds
mov
sub
fs
xor
cmp
loope
mov
push
push
arpl
xor
movsb
iret
ret
loopne
mov
loop
popf
push
xor
shrl
mov
mov
push
pop
adc
add
and
pop
sahf
and
fs
xchg
adc
sbbl
leave
push
push
add
lods
add
subb
dec
shlb
addl
and
cltd
mov
jo
fimull
xchg
push
or
push
xchg
or
and
roll
int
subb
fcomps
push
addr16
sub
sub
pop
out
mov
mov
ret
fs
or
mov
push
mov
mov
cwtl
adc
xchg
and
cmp
ja
and
sbb
cmp
test
inc
movsl
jo
rorb
xchg
roll
dec
and
sub
shll
test
and
stc
mov
clc
shlb
push
sarb
sub
sub
ret
icebp
sub
and
ret
ficoms
mov
push
xor
xchg
dec
inc
jp
or
push
push
pop
clc
test
pop
ljmp
shrb
filds
mov
pusha
or
enter
mov
sbb
adc
add
sbb
push
jle
imul
xchg
iret
pop
xor
test
sub
sbb
pop
or
dec
xchg
in
push
mov
push
or
xor
mov
push
pop
sub
push
ret
or
js
cmp
sub
jge
push
jmp
xlat
or
fwait
lock
jmp
imul
sub
push
push
xlat
and
andb
push
xchg
push
lds
or
and
add
push
das
xchg
sbb
dec
insb
sub
adc
and
test
pop
sbb
je
int3
pop
sub
dec
repnz
fldt
inc
xchg
cmpsb
pop
pop
pop
scas
jb
ss
adc
push
sub
pop
int3
les
shll
call
or
in
pusha
lret
pusha
adc
sbb
pop
or
mov
mov
arpl
jle
lret
push
adc
or
or
pop
in
cmpl
adc
imul
add
mov
lods
xchg
stos
push
and
dec
call
mov
data16
sarb
popa
adc
and
aam
xchg
hlt
lock
inc
cmpl
outsb
push
icebp
dec
inc
sbb
add
jo
or
inc
xor
jne
orl
loopne
je
jg
and
add
jmp
mov
out
add
popa
jo
and
sbb
jl
mov
push
lea
sbb
fisttps
jb
loop
cld
cmpl
mov
pop
and
xor
rorb
int3
lahf
or
mov
mov
push
fucomi
das
lea
mov
rclb
jb
call
mov
jne
mov
cmpb
je
add
aam
push
call
add
mov
push
pop
cmp
jge
mov
or
mov
mov
push
sub
pop
lods
inc
xchg
xchg
or
data16
lods
adc
inc
loope
pop
imul
jl
cmp
adc
sub
cmp
sbb
popa
fmuls
add
xchg
xchg
loopne
push
addb
mov
push
les
adc
push
push
xchg
inc
popf
mov
test
fiadds
pusha
inc
sbb
and
rorb
outsb
mov
hlt
and
and
js
push
jo
ret
das
hlt
adc
and
push
ficoms
add
rcll
pop
or
movsl
and
adc
xchg
mov
or
mov
pop
push
or
mov
dec
dec
adc
pop
mov
popa
imul
cmp
adc
dec
inc
je
inc
ljmp
and
adc
push
mov
xor
mov
mov
dec
jle
xor
push
jmp
pop
mov
mov
or
addr16
or
sub
wrmsr
and
enter
adc
cmp
pop
cmp
inc
dec
xchg
lea
inc
or
addr16
bound
sbb
cmp
ret
pop
mov
sbb
dec
jnp
pop
cmp
push
mov
shr
and
mov
push
rcll
push
lods
jb
daa
fs
pop
fs
lcall
subb
xchg
leave
jne
lds
insb
mov
adc
xor
sbb
mov
inc
imul
or
pop
cmpsl
xchg
pop
ds
mov
and
loopne
push
inc
mov
fwait
lahf
es
dec
into
mov
aaa
test
mov
aaa
aaa
icebp
inc
movsb
and
dec
cmpsb
sub
dec
imul
sub
imul
pop
xchg
test
shufps
pop
sbb
out
pop
sub
mov
jg
push
and
xor
mov
stos
mov
lahf
push
fldcw
mov
dec
inc
lret
sbb
jno
stos
call
in
lock
mov
push
push
int
push
dec
cmp
xor
adc
nop
cmpsl
pop
stos
movsl
xchg
cmp
or
sub
push
sbbl
xor
dec
mov
mov
dec
adc
inc
aas
dec
cmpsl
bnd
or
adc
push
imul
adc
or
ljmp
popf
insb
jge
cmp
jne
push
mov
push
pop
cmp
mov
and
push
mov
daa
xor
incl
clc
add
xor
std
sbb
cmp
outsb
imul
xchg
cmp
xchg
inc
je
movb
inc
movsl
inc
sub
inc
out
fucom
mov
test
mov
sbb
push
mov
mov
lahf
push
add
push
pop
sbb
sbb
pop
rorb
inc
loop
cmp
je
xor
inc
cmp
add
pop
push
sub
adc
call
xchg
icebp
or
mov
dec
cmpb
fbstp
mov
loop
stos
imull
cmpsb
fs
mov
test
stos
call
decb
call
icebp
or
push
xchg
in
dec
aad
cmc
jno
out
xor
enter
xlat
jnp
mov
cmp
int3
adc
fiaddl
mov
xor
and
fsub
push
gs
mov
sbb
cs
push
push
jge
call
lret
stos
popa
lods
dec
adcb
fcoml
inc
mov
repz
cmpsl
test
push
add
adc
push
inc
push
arpl
mov
popf
test
int
pop
and
and
adc
negl
popf
xor
push
repnz
cltd
call
pop
push
test
test
test
cmp
add
mov
push
xor
icebp
push
cmpsl
or
inc
cmp
ja
xor
mov
mov
cltd
shlb
les
scas
jge
adc
cmp
add
and
adc
sub
cmpsl
jbe
jle
sti
mov
popl
sub
and
add
xchg
mov
cld
and
or
sbb
inc
rolb
adc
xor
push
mov
jp
push
mov
das
cmp
repnz
jmp
gs
jns
push
xor
inc
ret
sbb
mov
inc
repnz
xchg
js
lea
sbb
and
jb
outsb
clc
outsl
push
jg
cmpb
jne
inc
inc
xor
xchg
aaa
pop
xor
sub
rcrb
jne
push
inc
iret
adc
sbb
xchg
aas
fisttpll
mov
lods
inc
clc
mov
mov
fbld
ss
imul
ss
push
adc
jns,pn
cmovnp
shrb
jmp
sbb
xor
xor
push
and
sbb
stos
incl
and
sbb
icebp
or
and
jno
and
jae
xchg
adc
ds
push
pop
ret
xchg
cld
adc
add
sahf
push
add
mov
pop
or
add
add
nop
inc
add
mov
adcl
cmp
xor
ljmp
jmp
mov
test
int3
jmp
add
pop
loope
push
dec
cmp
lea
cwtl
jl
adc
mov
pop
fdivs
pusha
jg
xor
mov
loope
or
inc
inc
idivb
jmp
or
inc
les
lock
push
outsl
test
nop
add
pusha
jne
xchg
in
push
imul
lods
push
mov
adc
sbb
incb
movsb
popf
xor
xchg
pushf
xchg
pop
out
enter
xchg
lods
sbb
es
mov
mov
movsl
mov
aas
xchg
movsl
les
xor
jne
push
jbe
pop
sub
inc
push
addr16
or
mov
scas
cmp
fstps
into
push
jmp
lahf
pop
fwait
xor
dec
cs
movsl
add
or
push
dec
mov
xor
push
mov
xchg
inc
adc
daa
push
xor
sub
xchg
cmpsl
inc
pop
out
sub
xchg
add
clc
bound
add
inc
ss
push
mov
mov
mov
pop
push
daa
xor
xor
mov
dec
inc
jg
mov
mov
movsl
xor
pop
mov
in
gs
push
shrb
xchg
pop
nop
lcall
sbb
dec
lock
loop
pop
cmp
inc
iret
cmp
jne
adc
add
push
aaa
mov
adc
and
pushf
cmc
mov
ret
or
repz
fstpl
insb
sti
adc
repz
hlt
pop
addb
in
repz
sbb
xor
mov
lcall
orl
sbb
insl
and
inc
rolb
sbb
jmp
sbb
insl
and
out
mov
movsb
xor
xchg
adc
and
ja
jns
and
arpl
and
pop
lds
hlt
or
mov
xchg
add
xchg
add
jno,pt
xchg
ja
mov
dec
testb
add
ret
dec
xchg
xor
ret
pusha
pop
dec
push
dec
pop
es
add
sti
sbb
lock
fsubr
pop
mov
pusha
xor
stc
sahf
and
mov
fs
aad
push
sarb
or
mov
jne
push
push
pusha
nop
inc
mov
jbe
mov
add
xor
sahf
add
pop
mov
jnp
adc
jnp
inc
adc
shrl
mov
adc
and
mov
iret
fstpt
jns
or
lcall
jmp
cli
pop
loopne
mov
adc
jno
bound
je
sarl
add
sbb
inc
adc
xor
and
xchg
adc
adc
fs
sbb
adc
hlt
js
xor
add
and
mov
sub
hlt
pusha
fisubs
into
add
push
sub
popa
and
and
add
dec
mov
xchg
cmp
sbb
add
setb
nop
add
xchg
jp
jb
cmpsl
repnz
pop
and
fs
aam
pop
fisttps
test
inc
dec
xchg
or
mov
imul
and
push
push
aaa
inc
cmpsl
inc
push
and
loope
lea
and
xor
hlt
adc
clc
jne
push
adc
ficomps
add
cmp
cmp
dec
pop
mov
rcll
rclb
in
dec
add
popa
xor
jne
movsb
pop
popl
sub
xchg
add
mov
and
adc
ss
dec
jecxz
mov
sub
jle
jb
jmp
fmuls
mov
insb
hlt
stos
movb
fnstsw
stos
aaa
imul
xor
add
mov
fldl
mov
ljmp
push
jae
leave
and
lods
push
jns
push
mov
or
adc
clc
dec
rcll
sti
loopne
clc
add
and
inc
pusha
roll
inc
addb
mov
es
rcll
mov
adcl
sbb
loop
jo
jg
xchg
js
or
and
add
pop
jo
inc
js
cltd
dec
mov
pop
sbb
jbe
adc
rorl
jnp
sbb
cmpb
sbb
or
push
sbb
fmuls
mov
adc
xchg
popa
and
imul
push
lea
push
enter
seta
push
jge
xchg
sbb
mov
dec
lock
jmp
je
xchg
scas
add
or
je
jl
push
push
loope
aad
scas
add
mov
adc
mov
lods
sbb
lock
xchg
push
cmp
pop
push
fcoms
xchg
dec
fstps
dec
pop
aaa
test
jge
jl
xchg
cmp
push
inc
loopne
xor
push
roll
bound
inc
ret
fmul
leave
dec
mov
push
aam
je
push
or
sub
cmpsb
dec
call
sub
and
jmp
inc
sbb
test
push
sbb
loope
int3
testb
mov
push
or
int3
imul
sarb
and
add
in
sbb
and
or
js
inc
add
orb
fadds
pusha
testl
mov
sbb
and
and
xorl
inc
insb
mov
cld
imul
or
adc
push
mov
xor
push
mov
sub
inc
dec
cmpsb
add
add
jl
aas
jl
push
mov
dec
test
adc
lret
aad
mov
sub
leave
adc
and
sbb
and
jnp
push
repz
cwtl
adc
and
add
mov
pop
dec
or
lock
or
inc
js
jecxz
adc
lods
test
addl
jne
out
pop
mov
cmp
add
lea
cmp
jne
cmp
mov
cmpsb
divb
mov
add
mov
add
mov
xor
mov
test
data16
push
push
popf
jo
rorl
sub
sbb
test
xlat
inc
sub
popl
xchg
dec
fimuls
jge
pop
insl
movsl
inc
ret
repnz
push
mov
cmp
test
inc
add
push
push
mov
push
adc
in
js
mov
mov
and
inc
pusha
cmp
je
inc
les
xor
sarl
jge
lahf
sbbl
dec
rorl
xchg
xor
sub
mov
or
lret
jl
add
jb
pop
sbb
add
and
outsl
lock
xchg
lea
add
incb
or
jae
add
sub
dec
xor
mov
xchg
jnp
enter
rcll
and
iret
in
push
cmp
xchg
jbe
test
push
sbb
rorl
jge
mov
cmp
inc
mov
je
jmp
adc
and
or
xor
sbb
sub
je
sub
add
sub
or
mov
pop
mov
inc
mov
xlat
sbb
inc
mov
dec
aaa
leave
and
add
sbb
or
or
pop
adc
adc
sahf
jmp
cmpsb
xor
push
mov
or
push
and
add
je
inc
inc
bound
movsl
insl
das
ljmp
call
mov
dec
push
in
divl
loopne
push
in
loopne
mov
btr
jmp
or
mov
mov
mov
lock
and
sbbl
xchg
or
lcall
push
xor
or
adcb
dec
iret
leave
in
dec
and
sbbl
inc
add
or
add
push
cmp
ss
push
cmp
mov
inc
stos
mov
mov
cmp
cmp
pop
or
push
data16
or
add
test
outsl
and
push
cwtl
lods
sbb
xchg
dec
sub
dec
xchg
dec
mov
sub
and
push
dec
xchg
and
sub
inc
push
add
xor
cmp
pop
lcall
jp
push
shl
xchg
data16
hlt
dec
sbb
fsubl
aaa
adc
and
or
outsl
xchg
imul
adc
mov
push
adc
out
xor
adc
adc
subl
xchg
mov
es
and
sub
adc
inc
xor
sub
pushf
sub
cmp
dec
ds
push
inc
or
or
jns
add
push
fdivl
dec
loopne
push
push
mov
sbb
mov
and
and
jnp
pop
call
cmp
jne
cli
stc
jb
xorb
cltd
cmp
jae
call
sub
mov
mov
xor
ja
push
push
iret
adc
or
fnsave
aam
lea
cmp
mov
sti
sub
pop
shlb
xchg
mov
in
cmp
add
fstpt
outsb
add
das
test
mov
or
mov
cmp
jl
pop
roll
cs
mov
mov
mov
mov
jl
xor
fs
adc
data16
lock
movb
out
add
push
rcrb
push
sub
add
xor
jo
sub
sbbb
xor
jb
out
inc
lea
mov
or
dec
shrb
cmpb
adc
sbb
mov
and
sahf
xor
orb
scas
sbb
and
mov
dec
dec
or
dec
pop
and
cs
lret
add
mov
xor
add
js
jno
jno
mov
dec
adc
inc
cmp
push
mov
into
pop
cmc
pop
test
add
sbb
xor
sub
cmp
fstpl
sub
cmp
add
andb
push
lock
icebp
add
cmp
add
pop
push
jo
rorl
inc
xchg
test
mov
push
jl
mov
dec
or
in
sub
cmp
clc
pop
mov
push
pop
xor
inc
add
dec
or
and
add
inc
mov
adc
stc
mov
push
mov
add
scas
fcmovbe
andps
iret
add
xor
adc
adc
pop
pop
and
pop
int3
xchg
ret
cwtl
stos
sbb
add
add
and
cs
sbb
pop
and
xchg
inc
shrb
and
inc
xlat
jo
sub
mov
push
mov
cmp
fsubl
or
lret
and
cmpsb
sub
inc
jb
lea
je
xchg
jge
sub
mov
inc
hlt
adc
sub
adc
lds
push
mov
inc
mov
sbb
and
arpl
sub
push
jl
add
sub
cld
fstpl
mov
lcall
andb
sbb
sbb
push
mov
adc
xchg
adc
mov
sub
mov
orb
mov
sub
sbb
in
push
mov
repnz
dec
push
pop
pop
dec
push
push
mov
xor
pop
xor
adc
add
adc
lea
and
push
mov
je
push
inc
cmp
outsb
mov
jae
mov
dec
adc
cmp
leave
xor
cmp
sub
mov
jmp
adc
adc
xor
add
aaa
gs
xor
aaa
les
mov
insl
pushf
jmp
ljmp
mov
adc
push
sub
aaa
add
add
dec
cmp
sub
add
in
lods
xchg
sub
jg
or
xor
add
sub
mov
or
adc
mov
or
lahf
sbb
mov
and
xchg
push
push
call
cli
mov
inc
or
or
adcb
or
xchg
add
add
sub
dec
and
and
add
inc
sub
push
push
nop
lret
xor
add
or
xchg
cmp
inc
or
inc
push
dec
push
sbb
pcmpgtb
push
insb
push
and
fwait
data16
inc
in
lea
mov
adc
dec
jo
jb
sar
enter
xor
int3
test
inc
rcl
popa
outsl
xor
js
add
dec
mov
or
in
imul
sub
movl
sbb
sahf
push
add
mov
pop
pop
inc
mov
jbe
mov
dec
es
mov
or
ss
out
pop
adc
pop
ret
pop
sub
lea
jecxz
sbb
add
pop
push
mov
pop
and
rcrb
push
push
int3
adc
enter
rcl
pop
rorl
or
loope
sbb
ja
dec
or
pusha
fldenv
imul
imul
or
or
xchg
data16
cmp
xchg
data16
or
data16
pop
sub
sub
xchg
and
and
xchg
data16
add
xchg
data16
adc
xchg
data16
add
jge
or
out
adc
cld
or
stc
pop
and
xchg
cld
add
add
sub
xchg
add
push
in
add
aas
and
cmp
push
cli
mov
and
in
pop
cmp
sbb
jmp
and
sbb
xor
adc
enter
fucomi
push
ljmp
jns
sbb
jne
orl
enter
push
push
adc
push
push
stc
dec
and
cld
and
xor
mov
mov
xchg
daa
dec
mov
dec
and
sbb
jmp
cmp
js
rcrb
push
imul
xlat
push
adc
aas
repnz
push
cmpl
add
mov
dec
loope
push
cmpsl
add
xor
and
adc
mov
dec
repz
inc
add
sbb
mov
jbe
ja
cltd
xor
loope
and
sub
sbb
sbb
push
xor
inc
and
or
mov
popl
mov
dec
jmp
lret
sub
adc
adc
pop
fldl
loop
sub
pop
mov
push
push
adcb
or
fs
push
or
sbb
es
inc
push
mov
dec
mov
mov
push
insb
push
add
movsb
adc
aam
pop
bound
cmp
jge
push
push
push
pop
sbb
dec
jb
push
xor
or
push
sbb
lods
or
xchg
adc
loopne
xchg
inc
mov
test
sub
jmp
xchg
jne
dec
dec
cmp
leave
push
push
mov
xchg
dec
cmp
or
dec
cld
sbb
cmp
or
lock
popa
xchg
je
push
div
sbb
push
loopne
cmp
xor
add
sbb
leave
adc
jo
loopne
sbb
adc
inc
and
dec
pop
xchg
fisubs
cmp
add
sbb
xchg
arpl
sbb
cmovo
push
push
mov
lahf
adc
and
sub
add
mov
cmc
je
add
fcompl
cmp
jge
lcall
push
faddl
shlb
orl
and
pop
cmp
sbb
push
dec
adc
hlt
xor
jo
dec
push
push
and
mov
stc
xorb
jns
jmp
add
insb
es
or
pushf
imul
jnp
jnp
jg
pop
inc
or
push
xorb
or
nop
push
jo
inc
push
or
push
movl
pop
mov
in
fs
mov
cmp
add
or
xchg
and
lods
cwtl
iret
es
sub
outsb
inc
fdivl
filds
add
pop
cmovno
mov
shr
push
shll
xorl
cld
add
and
lahf
add
cmpsl
or
test
inc
fadds
push
scas
mov
dec
xchg
fcoml
and
cmp
adc
jns
dec
sub
add
mov
cmp
cmp
adc
push
sub
insl
in
mov
lock
sbb
out
dec
in
push
je
push
ja
sub
js
mov
in
push
adc
mov
cmp
icebp
push
call
lea
add
ss
inc
cmp
mov
xchg
xlat
or
dec
ja
cmp
dec
fwait
and
mov
and
inc
add
into
mov
lret
aas
sub
call
dec
add
add
xchg
fadds
mov
test
mov
mov
pop
inc
pop
inc
fsubrs
push
lea
inc
orl
mov
or
movb
fimull
adc
xorb
aaa
lea
xor
lea
mov
mov
adc
scas
adc
negb
pop
cmp
in
fbstp
mov
fidivrl
dec
adc
mov
pop
dec
repz
fimuls
pushf
mov
xchg
dec
xchg
ret
aas
add
sbb
jge
jae
push
and
sti
jmp
mov
and
push
inc
jg
xchg
and
xchg
add
movsl
xchg
clc
aad
adc
and
dec
jl
iret
add
in
mov
push
popa
push
enter
insl
inc
cmp
ja
and
inc
ret
sbbl
xor
shll
sub
add
es
fildl
cmp
inc
dec
add
adc
push
jo
pushf
mov
inc
sbb
sub
jp
mov
adc
pop
fs
inc
add
insb
gs
mov
fiadds
cmp
insb
jmp
or
xor
adc
pop
adc
push
or
cs
inc
mov
test
lea
movsb
mov
pushf
push
dec
jle
stc
adc
dec
in
mov
dec
inc
mov
fidivrs
push
jb
dec
inc
push
setbe
dec
adc
xchg
mov
inc
adc
dec
adc
pop
and
popf
je
or
xor
adc
fs
cmp
cmc
mov
je
adc
xchg
xchg
sbbb
jne
and
push
push
ja
test
insb
push
pop
mov
mov
mov
inc
add
jo
js
and
mov
je
push
dec
mov
rcrb
mov
hlt
mov
mov
iret
add
in
push
in
mov
adc
inc
xor
or
push
popa
enter
cmp
stc
dec
insb
xchg
jle
cmp
cwtl
inc
sub
icebp
or
jb
adc
insb
and
add
xor
dec
sbb
mov
int
pop
leave
add
xor
pusha
inc
andl
cmp
jmp
test
jecxz
sbb
in
mov
imul
jbe
movsb
pop
sbb
push
cmp
clc
push
insb
inc
inc
inc
fcmovnb
push
push
fsubl
pusha
cmp
sbbb
or
sbb
adc
push
jns
adc
push
sbb
test
lahf
jns
repnz
sbb
push
inc
filds
push
movsb
fs
xchg
mov
jge
out
sbb
mov
add
xor
sbb
and
enter
orb
sti
add
push
xchg
mov
pop
movb
push
cltd
cmp
xor
add
mov
dec
pop
cmpsb
cmp
sbb
lret
aaa
jmpw
jmp
stos
push
jnp
imul
test
daa
xorl
and
dec
mov
repz
insb
nop
push
dec
jmp
and
cltd
cmp
and
xor
add
imul
dec
dec
mov
adc
std
push
sbb
dec
or
mov
push
or
cmpsl
out
dec
notb
sbb
test
pop
arpl
enter
adc
stos
adc
in
dec
add
les
imul
ret
add
in
xor
ljmp
adc
adc
lahf
pop
adc
add
div
hlt
jge
push
clc
jl
mov
fiadds
js
add
test
push
dec
in
dec
jne
loop
and
adc
jecxz
and
push
fwait
mov
dec
adc
sub
adc
das
iret
fs
mov
sbb
pop
and
andl
xor
ret
push
mov
aad
or
ja
sbb
dec
fstpl
or
sbb
cmpsl
dec
les
es
add
arpl
jmp
sbb
stos
pop
dec
mov
enter
ret
inc
mov
or
adc
or
ret
dec
jl
mov
mov
mov
js
je
or
adc
jns
lds
clc
ljmp
es
add
ret
adc
xor
leave
enter
cmp
inc
fiadds
push
mov
cmp
sub
mul
push
cmp
lcall
sub
xchg
lea
je
or
addr16
adc
inc
push
mov
and
inc
or
sub
sbb
imul
adc
add
andl
lock
adc
inc
insb
inc
xchg
cmp
push
orl
pop
sub
shll
rorb
xor
dec
add
sbb
aam
out
mov
inc
inc
sub
jns
repnz
test
sbb
mov
fcmovnu
sub
lcall
push
jp
sub
lahf
fsts
jne
add
lea
jg
or
sbb
adc
sub
dec
dec
lock
hlt
or
jg
xchg
orb
adc
pop
push
add
sbb
cmp
adc
add
dec
push
push
push
pop
aas
repnz
push
daa
mov
imul
xchg
imul
pop
adc
fnstenv
imul
pop
sbb
pop
sub
iret
push
push
dec
lcall
push
mov
lock
inc
fadd
les
sti
mov
mov
aad
pop
cli
mov
pop
or
add
push
push
xchg
adc
and
ret
dec
stos
push
rorl
pop
sbb
push
cmp
shrl
andb
jo
and
aas
scas
pusha
inc
pusha
aam
leave
inc
cmova
and
scas
clc
or
daa
jno
add
sub
mov
sar
movsl
movsl
dec
add
and
sbb
cld
std
push
mov
or
imul
or
addl
into
loop
cmp
sbb
je
or
loope
ret
push
pop
rclb
les
sub
xchg
je
cmp
daa
icebp
popa
cli
and
ljmp
xchg
andl
scas
pop
ret
mov
hlt
or
push
loopne
jmp
fstl
or
cmp
or
mov
xlat
push
xor
mov
sub
jae
sub
and
adc
add
test
stos
inc
lods
push
sub
adc
and
adc
adc
xchg
outsb
xor
xchg
add
and
adc
mov
rcr
nop
xchg
dec
data16
or
sub
xor
pop
je
sub
xor
incb
sahf
out
push
jg
pop
fildll
dec
cs
dec
repnz
imul
cmp
xor
add
add
pop
inc
jae
cmpsl
rcrb
int
sbb
push
sbb
add
or
cmp
sub
das
loopne
insb
sbb
fs
sbbl
inc
insb
add
dec
sahf
sbb
adcl
je
jo
in
and
rolb
dec
cmp
mov
mov
pop
push
adc
fiaddl
aaa
cmp
mov
and
sub
or
cmp
mov
add
adc
rcll
jl
je
xchg
and
in
mov
loope
push
dec
je
mov
push
cmpsb
call
fildll
mov
jle
mov
add
fidivrl
mov
rorb
mov
adc
add
adc
and
inc
pop
pop
lret
jl
pushf
call
shrl
add
aaa
xchg
add
mov
aas
je
pop
mov
pop
psubusw
call
orl
test
rclb
xor
pop
pushf
push
cli
and
pop
in
test
inc
jbe
sub
or
push
xor
jp
mov
imul
dec
xor
xor
push
out
dec
xlat
mov
or
cmp
sbb
pop
mov
push
addr16
add
pop
add
mov
das
inc
sub
dec
jbe
pushf
test
and
pop
jge
and
jecxz
or
adc
fwait
jmp
or
loope
pop
add
imul
or
pop
sbb
mov
xchg
sub
fwait
push
aaa
push
fiadds
sbb
inc
pop
rolb
insb
adc
ret
das
add
out
add
cmp
mov
add
push
inc
mov
push
add
jo
loopne
insb
mov
mov
dec
cld
adc
inc
and
push
test
xor
sub
and
jne
mov
add
ret
call
or
sbb
or
jb
and
ret
push
cmpl
adc
testl
std
fbld
test
and
or
pop
gs
or
mov
gs
xchg
jo
inc
lock
xchg
xor
mov
enter
inc
add
repz
imul
cltd
add
mov
or
mov
mov
cmp
test
cmp
pop
dec
ret
repnz
lcall
mov
add
mov
push
ret
pushf
mov
xor
cmp
rorb
jae
jne
inc
mov
cli
xor
in
and
mov
add
and
decb
mov
mov
pusha
divb
or
fisubrs
movsl
fcmovnu
outsb
subb
test
arpl
movsb
cs
or
jge
dec
sbb
idivb
mov
push
push
sbb
jne
push
cwtl
xchg
sub
dec
pop
test
fimull
mov
add
push
lea
sbb
out
pop
rol
push
pusha
push
sbb
shl
pop
cmp
lahf
stc
push
loopne
movsb
add
mov
in
or
ret
jo
cmc
or
push
aas
and
movzbl
mov
mov
adc
jae
or
inc
dec
arpl
pop
or
lret
dec
push
pop
push
inc
and
enter
pusha
sahf
sub
enter
or
adc
movsb
arpl
or
jl
sub
xchg
test
add
pop
inc
addb
or
and
loope
in
fsub
into
adc
mov
sbb
je
xchg
xchg
loope
adc
add
orb
pop
or
push
arpl
xchg
sbb
pop
shll
dec
xchg
aas
xchg
orb
cmp
push
shlb
or
call
dec
outsl
idivb
inc
lret
int
mov
mov
insb
mov
inc
mov
and
pop
hlt
popa
pop
pusha
mov
ret
or
push
mov
movsb
cmp
pop
pop
mov
daa
sbb
xchg
andb
loopne
add
cmp
je
adc
repnz
push
idiv
pop
push
fwait
jl
pop
add
and
shr
test
jne
lahf
ficomps
or
jno
sub
jmp
push
jb
mov
out
adc
je
push
add
test
sbb
lods
mov
mov
imul
cmp
jae
xor
cmp
xchg
gs
and
lock
ljmp
mov
test
push
dec
xor
ror
xchg
je
xchg
or
dec
mov
inc
std
mov
ja
push
movq
mov
mov
push
dec
and
xor
dec
dec
xor
xor
adc
cwtl
cld
xchg
xor
mov
inc
sub
jnp
test
fidivl
sahf
pop
jmp
push
jnp
push
pop
and
js
mov
mov
xchg
daa
sbb
dec
fstl
adc
in
dec
lock
xchg
mov
pusha
cwtl
mov
dec
add
sbb
rorl
insl
pushf
adc
test
pop
inc
jne
cmp
xor
sbbb
push
jns
push
push
sbb
pop
add
nop
inc
push
cmpsb
xchg
xchg
fistpll
outsl
adc
dec
xor
dec
dec
test
add
sbb
jbe
sbb
aaa
ficompl
mov
add
pusha
pop
adcb
jle
popf
aam
jmp
nop
ds
xor
xor
iret
stc
mov
pop
adc
adc
jmp
cmp
pop
clc
out
jnp
pop
cmp
jne
push
lret
in
sub
idivl
sub
mov
or
inc
dec
fs
pop
xchg
inc
adc
enter
jb
insb
pop
xor
jmp
push
hlt
xchg
adc
cltd
iret
mov
cmp
mov
mov
sub
and
fnstsw
add
nop
daa
mov
push
push
jmp
addr16
or
xchg
adc
inc
jecxz
or
cmp
and
and
sbb
add
rcll
add
push
add
mov
jne
mov
nop
jne
xor
sbb
jnp
pop
sbb
push
jle
arpl
mov
sub
and
mov
sbb
inc
pusha
and
loopne
lret
mov
mov
mov
pop
cs
push
fcmovb
mov
inc
pop
push
or
pop
call
xor
pop
enter
inc
fnstsw
pop
adc
jno
ljmp
mov
and
sub
jmp
popl
outsb
in
push
or
cmp
and
icebp
inc
stos
add
test
sub
dec
cmp
jae
ja
clc
add
cmp
push
aaa
lea
xchg
mov
popf
add
or
sti
test
clc
mov
xor
into
or
fld
sub
jne
pop
push
or
xchg
das
xor
in
daa
mov
push
cmp
test
push
call
je
imul
dec
cmp
or
rol
push
add
iret
clc
dec
lcall
add
movl
mov
cltd
rol
jbe
jnp
int
inc
adc
test
add
jns
sub
jl
pop
cs
sub
lods
bound
stos
fbld
jb
mov
inc
mov
mov
jp
fsubp
push
lea
ljmp
enter
jle
adc
test
ss
test
sub
aad
mov
outsb
jle
xor
or
int3
xor
clc
push
dec
jge
movzbl
push
stc
inc
sub
nop
dec
pop
js
scas
mov
mov
aaa
ret
sbb
push
push
adc
mov
loopne
sbb
nop
dec
push
sub
mov
sarb
jmp
jmp
cmpsb
test
cmp
je
sub
add
int3
xor
xor
inc
adc
jbe
add
and
push
mov
sub
ljmp
nop
adc
test
mov
inc
rorl
sbb
jns
cmp
sbb
clc
pop
hlt
jle
push
mov
xchg
mov
repnz
lret
mov
mov
adc
imul
mov
xchg
add
or
or
jp
push
push
fbstp
out
add
pop
shlb
lcall
jae
pop
mov
pop
or
or
int
xor
add
push
add
mov
dec
mov
mov
rcrb
rorl
pop
sub
test
and
and
rorb
iret
sub
pop
or
pop
icebp
rcrl
aaa
xchg
movsb
add
jecxz
sub
fwait
cmpsb
imul
push
into
inc
cmp
lret
rorb
push
cld
inc
mov
mov
and
add
or
cmp
jo
mov
jo
pop
in
js
jl
hlt
arpl
xchg
add
fdivs
inc
xor
adc
pop
mov
sbb
sbb
rolb
bound
push
sahf
nop
and
mov
test
cmpsl
inc
push
aaa
mov
inc
test
mov
inc
push
push
or
push
in
scas
xchg
pop
push
pop
inc
dec
ljmp
or
dec
ljmp
int3
mov
xchg
ja
sub
dec
or
or
jl
ficoml
push
sbb
js
xor
lcall
xor
dec
jo
insb
test
and
cmp
pusha
ret
movsb
or
pop
add
mov
dec
lcall
xor
dec
sbb
inc
and
les
test
aam
pop
sbbl
shll
jnp
dec
pushf
dec
pop
mov
or
and
test
loopne
adc
sbb
xchg
sbb
or
test
add
adc
nop
fistl
xor
inc
dec
add
or
scas
cli
pop
rolb
jp
jne
cmp
jo
xchg
dec
nop
pop
mov
xor
pusha
push
cmp
sbbb
xchg
fcoml
push
mov
push
and
movsb
sbb
test
jmp
fwait
cmp
dec
pusha
push
scas
fwait
sub
rcr
insl
jno
inc
inc
mov
adc
push
cmpsb
mov
xor
xchg
mov
mov
test
mov
and
mov
lea
and
cmc
adc
aad
jb
or
lret
inc
xchg
xor
sub
lods
cmp
ret
push
jbe
jle
push
mov
ljmp
lea
add
mov
xchg
push
push
jo
std
or
test
xor
in
dec
inc
dec
lea
xchg
push
jne
cli
adcb
ds
add
add
xchg
cmp
movsl
mov
or
or
fdivrl
or
or
insb
lahf
push
les
shll
or
inc
pusha
cmp
mov
ret
pusha
jb
stos
xor
cmpsl
push
pextrw
push
inc
nop
push
out
inc
notl
mov
cs
fldcw
pop
lock
ljmp
ds
push
popf
add
push
out
inc
fsubrl
pop
fidivs
jnp
or
sti
dec
dec
movsl
jns
cmovl
inc
inc
ret
nop
push
into
adc
cmp
mov
inc
lcall
xchg
sub
xor
aam
imul
or
push
jecxz
js
clc
xchg
push
inc
daa
arpl
xchg
pop
les
mov
clc
out
cmp
or
xor
jne
xorl
loope
mov
sub
test
fiadds
call
sbb
mov
pop
or
sbb
sbb
insb
add
or
add
imul
jp
sbb
jb
shrb
sub
je
push
jne
lea
xchg
dec
roll
cmp
xlat
push
add
jo
inc
arpl
inc
fs
mov
inc
mov
pop
sbb
rclb
push
push
mov
pop
mov
insb
orl
lock
mov
dec
test
mov
sbb
push
sub
cmp
sub
in
ljmp
mov
movsb
push
and
adc
cld
pop
pop
or
dec
gs
mov
push
dec
mov
clc
cmpsb
add
jl
mov
sbb
pop
add
sub
icebp
pop
dec
xchg
push
je
mov
aam
dec
adc
fdivrl
push
mov
nop
cmpsl
js
sub
and
fcomp
xchg
adc
add
addl
cmp
cld
adc
arpl
xchg
cli
push
scas
popa
sbb
dec
fs
pop
dec
adc
push
add
stc
decl
mov
push
inc
aas
into
pop
add
inc
mov
ret
cmp
call
jo
cmp
push
sub
push
aaa
sub
scas
test
inc
sbb
mov
mov
sti
fldcw
inc
test
sub
push
mov
add
and
xorl
mov
jne
unpcklps
xchg
mov
inc
dec
add
int3
and
mov
cmp
movsb
add
sub
lcall
mov
and
cld
pop
xchg
jo
repnz
mov
test
iret
push
es
or
sbb
push
js
mov
push
cs
adc
fldcw
mov
hlt
push
sbb
xor
sbb
loopne
xor
loopne
xlat
fucomip
out
popf
push
enter
add
pop
sbb
lock
adc
and
mov
xor
sbb
mov
or
push
fmuls
pop
mov
pop
xchg
cmp
sbb
pop
je
fs
fs
lds
lret
add
fs
push
aam
rolb
add
repz
xor
sbb
rcll
push
dec
push
nop
test
xlat
inc
hlt
test
xchg
or
mov
test
sub
mov
ret
or
mov
sbb
dec
cmp
sbbl
and
or
inc
popf
and
xchg
or
and
or
push
and
rclb
add
arpl
mov
push
pop
movl
adcl
sbb
sbb
inc
test
aas
dec
or
inc
inc
add
dec
fnstcw
dec
mov
popa
add
cmp
jns
sub
cmp
jb
push
inc
mov
add
jnp
vmovq
mov
and
inc
inc
daa
insl
pop
jb
mov
leave
sbb
and
xchg
pop
cmpl
mov
repnz
push
xchg
cmp
xchg
or
pusha
and
dec
mov
shll
lods
sbb
add
sbb
jns
mov
clc
lea
cli
or
add
ret
add
lds
scas
lds
dec
push
cli
movsb
das
sub
test
adc
mov
dec
dec
adc
ret
add
adc
add
push
mov
mov
test
push
sub
pop
jb
push
push
dec
push
dec
xor
and
push
inc
xchg
sub
or
inc
fwait
sub
add
add
pop
lods
cmpl
ret
insb
inc
mov
call
xchg
xorl
sub
push
dec
xor
sub
sub
lcall
lret
push
fisubrs
adc
lahf
adc
nop
pop
sbb
icebp
dec
jbe
in
dec
pop
sbb
mov
cmp
inc
int3
adc
mov
movsl
lcall
mov
add
xchg
clc
int3
dec
clc
mov
daa
inc
or
jno
fldl
mov
mov
nop
or
mov
mov
out
adc
lods
xor
mov
add
mov
push
xor
inc
test
icebp
mov
add
movsb
pop
fsubrl
outsb
insl
add
lock
into
test
mov
pushf
sbb
lahf
cmp
call
xor
mov
sbb
push
mov
add
and
jg
or
sub
xchg
jnp
and
ss
or
clc
stos
adc
add
push
faddl
in
fistpll
pop
xchg
test
rcl
jno
or
mov
xlat
pop
mov
pop
dec
add
shl
fsubl
mov
mov
xorb
sbb
add
adc
bound
sbbl
and
mov
cmc
dec
ffreep
stos
out
test
xchg
inc
leave
or
add
xchg
jbe
fiaddl
insl
or
and
shlb
or
xor
lock
sarl
and
push
scas
xor
adc
pop
mov
push
iret
sub
add
mov
and
dec
inc
arpl
push
popf
adc
lgdtl
movsb
push
sbb
sub
or
cmp
in
jl
inc
pop
nop
sub
test
mov
jge
pop
push
dec
mov
pop
dec
jmp
imul
inc
gs
je
adc
sub
das
mov
xor
push
push
adc
and
mov
shlb
cmpsl
adcb
push
and
adc
fwait
mov
adc
add
pop
push
add
sub
fldl2t
push
add
push
nop
add
addr16
nop
adc
inc
push
xchg
add
inc
push
pop
js
jecxz
inc
sahf
push
pop
mov
sbb
sbb
push
or
sub
rcrb
test
and
rcl
push
imul
inc
pop
inc
mov
cmp
lods
or
outsb
sbb
fldl
scas
sbb
sbb
or
and
cmp
pop
inc
sub
mov
jmp
xchg
adc
sub
leave
jne
mov
mov
cmp
test
jae
adc
daa
popl
mov
and
add
outsl
push
inc
and
subb
push
andl
nop
or
insb
add
inc
sub
mov
mov
mov
in
push
fbld
repz
push
cmpb
insb
cs
dec
inc
nop
lret
and
or
aaa
or
push
mov
fmull
and
xchg
cmp
daa
test
es
test
push
jmp
add
je
cmp
jo
inc
cmp
cmp
movsl
stos
add
rolb
sub
and
pop
mov
cwtl
push
lahf
adc
out
adc
mov
in
dec
push
inc
lea
or
je
or
xchg
out
sbb
or
push
sbb
cmp
movsb
stc
or
mov
mov
push
push
popa
xor
jmp
jne
fwait
addb
cmp
shrl
cmp
jne
or
jo
enter
push
jns
mov
fs
pop
add
in
sbb
push
add
xor
push
pop
push
add
mov
sbb
push
xor
mov
test
jl
lret
rclb
inc
xor
adc
add
cmpsb
mov
mov
fwait
dec
fsubrl
push
sbb
mov
pop
outsb
pusha
inc
or
jae
mov
rcll
add
je
aam
pop
adc
clc
shrl
incl
mov
nop
outsb
pop
mov
add
mov
adc
dec
push
xchg
jnp
sub
xor
or
lcall
ret
sub
pop
pop
ljmp
add
push
push
cmp
add
xor
mov
adc
dec
mov
adc
push
cmp
pushf
pop
push
or
add
sub
fadds
dec
adc
or
repnz
push
push
loopne
mov
ja
push
or
aaa
dec
in
sarl
or
mov
push
hlt
push
das
dec
movsb
loop
mov
sub
xor
push
mov
pop
icebp
and
lock
cwtl
sub
test
clc
popf
insb
inc
cs
out
lock
mov
push
xchg
jmp
dec
mov
sub
dec
sahf
stos
in
or
adc
mov
cmp
jo
rorl
dec
adc
jl
adc
or
inc
pop
mov
adc
jne
adc
xchg
rcl
pop
push
jne
pop
xchg
out
adc
mov
and
test
pop
test
xchg
mov
in
or
xchg
dec
cli
mov
mov
sub
push
in
call
dec
arpl
sbb
fcom
sbb
cmpsb
es
enter
sbb
test
lahf
sbbl
cli
stc
adc
sbb
enter
pushf
adc
add
xchg
inc
rcrb
cmpb
and
repnz
and
adc
iret
add
les
repnz
cmpb
faddl
xor
sub
cmp
and
sub
dec
subb
jbe
mov
dec
pop
subl
sub
and
inc
mov
nop
push
mov
and
out
pop
roll
pop
push
jbe
imul
or
je
fsubrs
aam
nop
dec
or
sarb
je
xor
mov
sbb
pop
sub
pop
bnd
and
adc
in
cmpsb
cwtl
js
mov
lock
pop
into
lea
fimuls
imul
mov
jne
ljmp
rclb
mov
push
add
cwtl
dec
add
xor
cmc
nop
stos
movsb
ret
hlt
sbb
sub
sti
mov
mov
cmp
bound
push
sbb
cmp
or
push
pop
lret
add
pushf
lret
or
stos
ret
lock
les
and
xorb
add
arpl
cmp
add
ret
call
dec
and
or
or
mov
inc
mov
sub
push
das
cmp
imul
fstl
roll
push
test
jnp
xor
fs
mov
aas
out
jb
add
xor
jmp
push
jns
sahf
in
inc
clc
cmp
jae
enter
cld
stos
mov
sbb
bound
hlt
or
inc
sahf
cmpsl
fcoml
mov
sbb
adc
mov
mov
or
sbb
add
jg
mov
cli
mov
jecxz
lods
cmp
push
push
push
cs
or
jo
lahf
mov
js
xlat
add
rclb
cmp
rolb
adc
inc
mov
inc
movsb
inc
sahf
les
lods
inc
adc
aad
aas
mov
mov
and
cmp
mov
and
and
mov
pushf
and
mov
sub
push
adc
iret
mov
ja
test
add
lea
jge
dec
outsl
dec
pop
or
xchg
jo
inc
dec
push
and
shll
sbb
addb
outsb
sbbb
lods
push
icebp
insb
inc
xor
adc
gs
arpl
and
mov
inc
shll
push
pop
push
sbb
insb
clc
test
push
mov
cmp
sbb
hlt
orb
sub
or
pop
ret
adc
mov
fstl
and
cmp
enter
jns
aaa
cmp
sub
mov
jge
shrb
pop
rcrl
imul
pop
call
cmp
insb
imul
pop
dec
or
scas
rol
sub
sub
sti
ljmp
andl
or
fmull
rcll
push
inc
cld
sahf
mov
rolb
hlt
fwait
sbb
in
xlat
xor
adc
mov
mov
dec
push
cmp
dec
or
or
dec
add
xchg
xor
or
adc
jmp
shlb
jbe
inc
es
cltd
add
or
inc
lcall
xor
dec
mov
or
fmuls
pop
push
sub
fs
sub
or
dec
movsb
aas
push
push
sub
dec
insb
out
nop
xchg
pop
sub
fdivrs
add
xchg
dec
and
nop
xchg
sub
imul
and
dec
cmp
inc
test
push
call
inc
loope
inc
mov
mov
inc
dec
jnp
jbe
shrb
inc
cld
adc
mov
and
fldl
dec
and
rorb
cli
jno
and
push
lock
popa
jmp
inc
lods
add
pop
inc
cld
adc
lods
push
sbb
dec
cld
cmp
enter
sub
mov
enter
sub
and
sub
sbb
ss
cmp
movsb
cmpl
xchg
mov
push
test
push
fcoml
fs
or
aas
cmp
cmpb
add
or
in
hlt
mov
mov
or
les
jp
pop
xchg
push
mov
mov
mov
fsub
les
add
cmp
sbb
add
pop
imul
mov
or
cltd
cmp
pop
or
jne
shr
and
lods
mov
aaa
add
repnz
xor
push
mov
pop
mov
inc
lea
int3
add
and
sub
pop
mov
mov
push
pop
mov
pop
jmp
iret
leave
mov
in
mov
sbb
mov
mov
add
sub
sub
scas
js
pop
fldl
cmp
imul
and
lret
test
xor
je
sub
push
fcmove
ja
enter
lea
mov
adc
sbb
popa
in
mov
cltd
push
cmpsl
cs
test
pop
push
imul
pop
jo
sti
ret
enter
sub
dec
sub
pop
push
icebp
pop
push
push
add
cmp
int3
xor
push
aas
and
adc
sub
adc
dec
add
loopne
push
adc
movsb
cltd
dec
adc
enter
or
jae
push
rolb
movsb
dec
push
xchg
cmp
leave
xor
inc
cmp
leave
jae
push
add
arpl
aam
aam
dec
es
cmp
mov
pop
pop
les
out
clc
sbb
push
shrb
bound
rclb
and
stos
imul
lret
and
dec
and
push
dec
or
loopne
lods
sbb
rcr
lods
in
xchg
hlt
push
cmp
jae
in
xor
pushf
and
jmp
movsb
sbb
mov
mov
cmp
stos
imul
ja
add
popa
push
pop
inc
jne
mov
xchg
and
fistps
orl
push
movsl
test
inc
addb
pop
push
cmovge
sti
jo
mov
sub
popf
popa
mov
push
or
in
adc
in
add
cmp
xchg
sbb
add
add
pusha
or
jle
jmp
push
adc
shrb
cmc
push
mov
jo
push
shrb
lcall
xor
dec
pop
adc
cmpl
mov
inc
dec
push
fdivrl
test
jg
or
sub
push
arpl
push
mov
daa
inc
mov
push
popa
xchg
mov
jmp
sub
jecxz
rcll
sub
cs
push
add
inc
sub
xor
inc
mov
movsb
push
orl
lock
xor
mov
dec
popa
loope
push
mov
or
cmp
add
mov
arpl
cmp
or
ljmp
int
repnz
int
adc
iret
inc
add
outsb
mov
and
lea
adc
inc
xor
adc
dec
ret
adc
jnp
stos
stc
lea
cld
push
pop
mov
cli
add
je
sub
data16
xor
movups
aam
push
adc
jg
rol
mov
cmp
shll
sub
dec
inc
jg
xorl
or
xor
or
adc
outsb
push
sbb
xor
int3
ror
sub
test
and
sub
lea
lret
sarl
sbb
ficoms
sub
pusha
in
jge
push
es
mull
test
or
push
and
adc
mov
mov
push
xchg
dec
fiadds
imul
xchg
add
mov
scas
cltd
imul
in
ret
and
dec
pop
xor
dec
lcall
push
dec
loope
jl
sub
and
jmp
in
adc
sbb
pop
dec
stos
movsb
mov
in
or
and
push
push
mov
jo
rorb
jns
ret
adc
sbb
pop
das
xchg
xchg
inc
inc
nop
inc
sbb
loope
adc
and
sbb
and
and
pop
leave
or
or
es
sbb
movsb
icebp
jg
call
inc
cmp
jae
mov
add
int
pop
adc
sbb
andb
jl
and
add
inc
pop
inc
xchg
xor
subl
and
pusha
cmpl
add
fldl
mov
movsl
addb
pop
adc
or
mov
imul
cmp
cmp
add
dec
cmp
ljmp
mov
push
subb
lea
inc
mov
sub
cmpsl
or
sub
ja
push
mov
enter
jb
mov
js
shlb
loopne
movsb
jg
adc
inc
insb
or
stos
and
out
pop
dec
jl
stos
xchg
xor
push
xorb
mov
fdivs
test
or
movsl
sbb
pop
addl
xchg
pop
cmp
push
pop
mov
pop
jnp
fadds
add
dec
cmp
dec
cmp
aam
inc
insl
daa
add
xor
mov
push
push
inc
add
mov
mov
dec
push
pop
pop
push
pusha
flds
adc
in
jo
add
insb
fstps
sub
data16
or
sbb
pop
add
or
sub
dec
or
and
adc
lcall
sub
or
adc
in
or
inc
clc
pop
ja
cltd
push
sahf
mov
int
inc
adc
cmp
push
and
xor
into
push
movsb
sbb
cmp
add
insb
cmp
inc
or
dec
rclb
add
and
inc
cmp
add
push
lods
cmp
jnp
rcll
xlat
sub
push
xchg
ja
nop
insb
insb
mov
push
or
dec
push
push
fbstp
add
mov
inc
add
pop
push
inc
dec
pop
mov
loope
and
cs
shlb
jne
xor
inc
push
lea
sub
pop
sbb
test
add
test
push
test
icebp
mov
sbb
mov
ficoms
dec
orb
mov
scas
mov
sub
mov
adcb
movaps
add
inc
icebp
lea
fdivs
cltd
dec
dec
push
mov
dec
lods
insl
add
mov
jnp
mov
inc
ljmp
aas
xor
sbb
fisttpl
push
data16
adc
sub
in
and
xchg
enter
enter
ret
les
adc
in
jo
cltd
mov
or
pop
bound
lcall
scas
test
popf
inc
push
cmp
enter
imul
add
sbb
pop
dec
out
inc
arpl
gs
fdivrl
add
test
pop
addb
sub
test
xor
stos
sbb
mov
pop
insb
push
or
jp
cmpb
mov
dec
adc
sbbl
ja
push
out
push
adcl
cmp
mov
lods
add
add
push
jecxz
add
shlb
loope
loop
sbb
push
pop
pop
jp
mov
cwtl
mov
in
cmp
loopne
pop
hlt
mov
ror
sti
ljmp
je
cmp
je
cmp
je
cmp
je
push
je
movsb
lret
xor
cmc
mov
adc
shlb
add
push
ret
out
pop
mov
fdivrs
inc
hlt
cli
arpl
or
fadds
xor
inc
daa
inc
shlb
push
je
shl
xchg
jmp
test
ret
add
stos
adc
sub
aam
push
dec
jae
xor
adc
and
dec
shlb
mov
xchg
mov
push
nop
mov
pop
and
add
fs
mov
push
adc
adc
outsl
enter
outsb
sub
add
push
adc
inc
mov
or
pop
xchg
outsl
mov
inc
push
cmp
and
sbb
clc
nop
push
sarl
shlb
push
or
push
xchg
jge
jecxz
loope
jmp
orl
push
xor
faddl
sub
add
mov
push
xchg
mov
sbb
insb
mov
loope
adc
outsb
add
inc
lret
aas
das
jne
and
mov
or
or
mov
xchg
push
jl
mov
mov
enter
cmp
sbb
mov
int3
push
movsb
call
aaa
push
sbb
mov
test
and
mov
mov
lods
and
or
stos
push
in
or
inc
scas
rcrl
aaa
es
jl
shll
and
lods
scas
inc
inc
les
push
xor
lea
adc
and
jo
dec
shr
and
fsubl
cmp
mov
adc
lock
mov
mov
add
loope
mov
clc
and
shll
test
and
xor
call
mov
data16
mov
adc
lcall
add
xorb
std
mov
push
mov
cwtl
je
add
and
mov
pop
les
call
pop
xchg
pop
and
inc
es
mov
sahf
adc
inc
xor
cmp
outsl
lahf
movsb
or
outsl
in
shrb
sbb
jmp
inc
mov
push
add
and
inc
fcmovnb
inc
in
adc
mov
or
mov
stos
rolb
inc
mov
cmp
inc
cwtl
or
inc
dec
xor
or
ret
bnd
and
mov
sub
call
xor
aam
loope
sub
push
dec
xor
sbb
bound
adc
fs
out
mov
add
push
jecxz
xchg
jl
add
jae
popa
xor
cmpsl
dec
fdivr
icebp
orb
or
pop
and
cwtl
addl
xor
xor
cmp
and
mov
sub
ss
aam
jge
or
cmp
je
xchg
xchg
inc
or
mov
adc
sub
or
mov
push
xorb
jge
mov
add
pop
sub
inc
pushf
cltd
mov
push
pop
mov
adc
inc
lcall
inc
inc
mov
add
mov
cmp
sbb
lods
addr16
faddl
cmp
push
and
int
mov
add
lret
stos
leave
shl
lahf
xchg
outsb
pusha
sbb
test
and
or
cmp
je
push
and
cmp
jne
xor
jl,pn
sahf
sbb
pop
adc
ret
test
cs
roll
inc
adc
lds
test
mov
push
sbb
inc
xor
jecxz
imul
mov
mov
add
push
jb
add
sbb
in
or
sarb
mov
sahf
pop
sub
pop
xchg
or
addb
subb
xor
push
fs
adc
movsb
xchg
and
and
inc
sub
sbb
and
push
cld
mov
inc
pop
or
push
rcrb
jmp
or
sub
pop
jne
xor
ret
mov
push
push
add
jno
enter
test
lret
dec
jp
inc
adc
std
addb
push
xor
jmp
mov
sub
cmp
sbb
sub
ss
je
fadds
addb
add
push
jo
shll
sub
pop
leave
xor
loope
addb
orl
imul
scas
call
ds
sbb
movsb
or
ret
sbb
sar
mov
mov
add
push
outsb
insb
pushf
popa
shlb
dec
adc
jmp
xor
nop
push
aaa
imul
jge
and
lds
xor
cmp
jne
int3
jnp
push
sbb
dec
rorb
insb
sbb
loop
mov
push
lret
xchg
fsubrs
pop
inc
pop
aas
push
pop
and
push
out
int3
cmp
add
clc
and
adc
cmp
in
subb
inc
pop
dec
lea
inc
push
incb
popa
push
sub
add
xor
fs
ds
mov
xchg
push
and
pop
mov
fs
mov
addr16
test
push
mov
outsb
jo
js
inc
stos
sub
inc
rcr
dec
or
repnz
mov
mov
sar
lods
push
jmp
inc
lock
into
lods
cmp
shl
dec
add
sarl
sub
pop
adc
mov
push
inc
or
jno
add
xlat
lret
xor
sbb
sbb
lods
pop
xchg
jle
ret
push
cli
or
mov
data16
mov
imull
bound
lea
fwait
into
insl
test
cmpl
mov
ss
cwtl
cld
push
sub
push
push
push
mov
mov
push
push
jle
test
inc
add
movb
loopne
iret
xchg
dec
sbb
and
add
das
out
push
lea
mov
test
enter
jmp
and
push
adc
sbb
cmpsl
pop
mov
jmp
cmp
mov
or
add
inc
shrb
out
push
or
cmp
mov
rorl
inc
dec
add
adc
rclb
std
int
pusha
adcb
adc
roll
rolb
jnp
fists
adc
inc
dec
stos
xchg
push
cmp
push
pop
xchg
ret
es
inc
shrb
sbb
cmp
sub
jbe
jns
add
js
cmp
lahf
dec
cld
dec
testl
cmp
or
sbb
add
rol
mov
rclb
or
push
inc
mov
cmp
rcll
fstl
mov
xchg
or
adc
outsl
test
xchg
or
mov
cmp
push
cmpsb
add
mov
add
and
fcoms
loope
xchg
push
mov
aad
mov
je
dec
mov
push
idivb
mov
pushf
mov
rorb
sub
pop
sub
sub
data16
das
pushl
adc
jp
mov
push
push
jb
push
cmpl
or
pop
or
inc
dec
ljmp
std
outsl
mov
inc
mov
push
dec
pop
sbb
enter
and
lea
lret
mov
dec
sti
cmpsl
ljmp
dec
adc
sub
xchg
js
and
add
rorb
scas
test
adc
and
lods
int
lcall
dec
push
add
mov
clc
push
or
sub
addr16
dec
mov
orl
jb
xchg
fcom
divl
and
add
or
sbbb
inc
cmp
inc
mov
fdiv
or
jecxz
inc
pop
aad
rcll
add
out
dec
mov
xchg
cmpsl
inc
add
sahf
sub
fiaddl
add
mov
mov
jmp
push
add
and
jp
mov
jno
ss
add
test
push
fs
inc
xor
lret
xor
sbb
mov
push
filds
inc
xor
mov
or
bound
test
cltd
pusha
stos
pop
or
xor
sub
sub
mov
xchg
inc
mov
cld
pop
pop
sbb
inc
push
push
xor
jo
xor
mov
and
mov
fmulp
jle
jo
aas
jns
and
push
pop
sub
sub
test
test
outsl
sub
lea
xchg
int
scas
push
test
mov
xor
fisttps
loope
sahf
push
lret
outsl
insl
loop
sub
int
cli
sbb
nop
hlt
add
xchg
inc
add
es
xor
xchg
addl
xor
jnp
icebp
adc
and
bound
addl
or
pop
test
xor
cmp
cmp
cmpb
add
cmpsb
xchg
mov
sbb
in
xor
incb
or
add
cmp
dec
sub
dec
pop
clc
cmc
push
subb
mov
movsl
andb
inc
sub
je
push
adc
and
lods
out
fs
lcall
push
mov
ja
inc
mov
dec
scas
mov
lods
sbb
mov
and
pop
fstps
dec
add
sbb
add
pop
lret
and
mov
inc
aas
out
or
mov
movsl
mov
repz
call
sub
shll
shr
push
dec
movzwl
dec
pop
cmpl
mov
push
jle
setl
movzbl
push
imull
push
adcb
push
push
push
lods
xchg
mov
and
jb
ret
roll
and
test
xchg
jl
add
add
nop
loopne
in
add
enter
dec
push
push
push
cmovbe
shr
rorb
inc
mov
mov
cmp
xchg
jg
jle
push
push
adc
jmp
pusha
and
xchg
sub
xchg
dec
pop
test
out
out
inc
push
leave
enter
sub
push
jb
pop
adc
dec
push
sarb
cmp
adc
add
mov
xor
movsl
push
sbb
mov
in
xor
push
push
push
jecxz
inc
inc
cmp
push
sub
mov
sbb
cltd
sub
inc
pop
fidivs
mov
and
testb
gs
movl
dec
add
repz
dec
dec
push
xor
dec
add
test
cmpsb
jne
lds
inc
sbb
and
in
xchg
xor
repnz
mov
xor
xchg
cmpsl
xor
push
cmp
mov
mov
xorb
insb
es
daa
cld
test
and
and
lret
ss
pop
and
xor
or
cmp
inc
adc
sbb
aad
fs
sub
xchg
mov
push
mov
adc
jnp
and
mov
add
push
sbb
push
ud1
or
lods
es
push
push
or
dec
rorl
sbb
xchg
mov
sbb
jb
xchg
mov
push
dec
xor
and
inc
into
add
dec
push
and
iret
jbe
lock
add
mov
adc
adcb
push
std
les
icebp
mov
jb
iret
fistpll
xchg
xor
or
mov
add
bound
pop
cmp
inc
pushf
push
outsb
test
cmpsb
sbb
pop
pop
jl
ficompl
lea
pop
dec
je
push
nop
subb
push
push
sbb
and
jle
pop
mov
dec
xor
xchg
xchg
test
cmp
sar
andl
jo
mov
sbb
mov
jmp
mov
out
fdivrl
inc
jo
ss
inc
jecxz
mov
cwtl
out
insl
ljmp
inc
push
adc
xor
push
inc
fwait
cmp
daa
inc
arpl
leave
push
cs
ficoml
add
sbb
aaa
or
lea
jg
inc
in
mov
cmpb
xchg
jne
adc
insb
cmpsb
xchg
xchg
sbb
pop
lcall
jg
adc
leave
jl
add
cltd
je
cs
push
imul
mov
mov
inc
and
cmp
test
push
push
or
imul
lods
lahf
mov
enter
sbb
mov
adc
push
and
sbb
sbb
xchg
stos
sbb
movsb
sbb
test
push
add
xor
adc
adc
xor
sub
jmp
enter
xor
enter
inc
and
mov
sub
jbe
in
mov
xor
icebp
inc
test
bswap
hlt
lds
push
sub
add
mov
mov
rclb
xchg
mov
inc
add
xchg
insb
mov
ficomps
and
outsl
dec
popl
in
adc
aad
add
or
adc
push
scas
shlb
dec
ret
pusha
lock
sbb
xor
mov
icebp
addr16
and
xchg
clc
add
adc
sbb
imul
pop
aas
add
ret
push
cmpsb
pop
loop
xchg
ret
lahf
dec
sub
jne
movsl
lea
jne
iret
add
jmp
nop
adc
repz
jg
cmpl
das
shrb
fmuls
sub
push
imul
jg
jo
jecxz
cmpsb
sub
aas
and
sbb
mov
jmp
sub
sbb
js
pop
xor
mov
add
pusha
add
sub
mov
test
lds
inc
xor
ljmp
mull
test
rcrb
push
jl
js
mov
add
cmp
pop
fisttpl
inc
xchg
lea
dec
mov
push
mov
mov
sbb
dec
or
or
test
mov
andb
je
pop
inc
xor
jl
xchg
push
and
loopne
push
push
test
adcb
and
xor
js
sub
dec
mov
adc
mov
push
cmp
loope
or
xchg
dec
js
xlat
xor
inc
mov
or
pushf
adc
ret
jne
adc
jb
fstps
inc
cs
rolb
sub
dec
cwtl
xchg
inc
cmp
lods
nop
xchg
or
push
imul
mov
mov
inc
inc
je
mov
dec
dec
or
inc
mov
pop
pop
pop
cmovno
inc
mov
xchg
cmp
cmp
mov
dec
and
and
test
pcmpgtd
dec
scas
in
dec
inc
xorl
ficompl
dec
fwait
test
sbb
adc
jmp
enter
fwait
add
inc
enter
add
jns
add
xor
ret
inc
push
or
add
daa
dec
mov
sbbl
shlb
sahf
cmpsb
rclb
pop
sti
pusha
addr16
push
pop
mov
mov
or
loopne
enter
adc
pop
enter
dec
pop
jnp
cs
inc
sbb
push
in
jl
data16
imul
jae
iret
xor
pop
xor
or
push
push
aas
sub
roll
in
test
push
adc
imulb
inc
and
cmpsb
loopne
cmp
pop
push
sub
adc
leave
dec
enter
inc
push
cmpb
add
inc
xor
push
pop
xor
aam
sbb
test
push
pop
jne
sub
mov
roll
fsubrs
arpl
pop
jns
mov
rcl
add
test
popf
or
mov
add
icebp
movsb
push
add
out
sahf
sub
movsl
dec
xchg
mov
pop
and
insb
jo
leave
lds
mov
rcrb
fildll
or
call
push
xchg
pop
mull
gs
pop
push
jmp
outsb
or
das
inc
lcall
dec
dec
xchg
add
xchg
add
and
and
and
and
mov
inc
jmp
repnz
addb
lahf
mov
inc
pop
dec
sub
xchg
sbb
insb
fnstcw
das
js
ret
addl
pusha
push
dec
popa
mov
mov
daa
xor
add
into
pop
sbb
nop
dec
mov
adc
inc
lret
ja
enter
ret
pop
pop
adc
add
add
es
mov
pop
cs
mov
ljmp
ffree
test
jecxz
rorl
int
movaps
cmc
sbb
data16
pop
rclb
mull
push
test
inc
push
shlb
inc
sbb
adc
and
push
push
aaa
mov
ret
mov
mov
sbb
rorl
sbb
jle
mov
or
cmp
fimuls
stc
xchg
movsl
das
add
jg
lahf
test
fstpt
or
popa
add
inc
xchg
incb
js
incl
push
jge
loop
mov
negl
push
decb
insl
push
push
adc
nop
mov
jb
sbb
clc
xorb
add
add
fisubl
mov
movzbl
push
push
sub
push
repz
addb
push
pop
fcomps
aas
iret
std
aam
sub
addb
cs
xlat
mov
or
shll
fcmovnu
jae
add
or
loope
arpl
xchg
sarl
out
mov
or
lret
lock
mov
add
or
sbb
mov
and
xor
jmp
sbb
ret
jl
roll
push
sbb
sub
out
push
out
sbb
out
inc
test
sbb
loopne
jo
ret
div
out
pop
mov
mov
mov
add
or
out
add
or
test
rclb
fimull
pop
or
or
sub
test
addl
jl
fstl
bound
sbb
mov
xor
inc
pop
and
mov
pushf
bound
jle
mov
mov
incl
mov
jbe
mov
rorl
adc
inc
cmp
push
jl
xor
rcrl
fsub
pushf
push
test
hlt
mov
lahf
inc
lcall
and
int
mov
insb
cmp
mov
cmp
stos
out
sub
inc
mov
push
jb
fbstp
add
fs
push
adc
adc
adc
jl
out
mov
seto
aaa
notl
inc
loop
or
mov
jnp
jmp
mov
sahf
cwtl
jne
dec
or
or
movsb
add
mov
push
adc
dec
push
add
ret
gs
leave
sub
loopne
mov
and
pop
xchg
mov
loope
jne
jae
fidivrs
cmp
adc
jp
push
in
push
movsl
mov
add
xchg
out
setns
in
pop
loope
adc
sub
mov
jno
pop
lcall
ljmp
xor
mov
or
out
and
pop
lcall
mov
insb
pop
xor
jp
lea
bound
jb
fmull
ret
push
add
mov
add
xor
pop
pop
movsb
jnp
jle
fildl
push
push
fadds
jno
fldcw
movzwl
xor
inc
fldcw
xchg
ds
stos
pop
add
outsb
push
or
adc
loope
push
add
inc
cmp
test
dec
inc
or
rcr
sub
lods
mov
push
inc
jne
inc
and
adc
data16
pop
loopne
add
push
xlat
fdivl
sub
test
and
rol
loop
jnp
inc
or
push
sub
push
ss
xchg
mov
add
out
push
mov
mov
jb
out
call
rcrl
loopne
inc
in
mov
pop
push
sub
decb
mov
cmc
adc
mov
mov
into
cmp
jbe
inc
mov
movntq
jmp
dec
int3
or
lahf
push
add
outsl
flds
and
or
nop
lods
call
sbb
imul
mov
mov
stos
lret
pop
out
adc
add
mov
sahf
sti
flds
flds
cmp
les
fmulp
sbb
mov
lret
leave
iret
stos
arpl
pop
test
fldcw
fmuls
push
sbb
sti
jecxz
dec
inc
sbb
jae
adc
in
pop
or
divb
add
stc
je
repz
cmp
ljmp
xor
aaa
sbb
adc
cmpl
or
cmp
jne
dec
push
pop
or
mov
or
cmpsl
or
sbb
dec
or
xchg
pop
push
xchg
push
aam
repnz
shlb
pop
cmp
push
fcomps
dec
aam
inc
push
jecxz
add
xchg
inc
cld
add
les
xor
push
insb
call
push
push
icebp
jge
mov
jmp
xchg
cmp
jp
shrb
and
fistps
mov
cwtl
stos
add
out
xchg
gs
into
cmp
enter
inc
and
and
cmp
push
jecxz
loopne
push
adc
data16
push
push
and
inc
and
pop
add
mov
push
push
daa
xor
adc
rolb
cmp
dec
and
lock
push
call
xlat
nop
bound
ds
cmp
add
movsl
inc
adc
push
xchg
dec
outsb
mov
xchg
ret
pop
jnp
sub
pushf
dec
pop
int3
adc
xor
xor
push
push
dec
pop
ret
mov
mov
punpckhdq
pop
js
lock
adc
xchg
cmp
or
mov
int
je
push
dec
mov
inc
imull
jb
or
mov
lods
mov
call
cld
mov
pop
lods
js
cmp
je
sbb
pop
or
cltd
jmp
mov
adc
pushf
cmp
jg
mov
xchg
mov
mov
js
fsubs
pop
jmp
addb
add
cmpl
jg
out
or
cwtl
add
les
out
or
push
rorl
mov
dec
jge
bound
add
xor
out
add
sbb
popf
add
pop
jecxz
mov
ret
aas
dec
loopne
lods
xor
add
mov
test
in
clc
iret
aaa
adc
sarb
cld
adc
in
sbb
inc
sbb
ds
sub
inc
add
imul
or
mov
or
adc
mov
cmp
push
call
hlt
cmpl
mov
cmp
cmpl
sbb
or
rcrl
js
gs
lahf
push
or
sbb
mov
clc
xor
and
pop
mov
mov
je
inc
or
in
int3
test
pop
add
clc
add
jg
push
loopne
lea
push
push
adc
jl
mov
ds
push
in
or
cltd
jge
jbe
sub
sbb
rclb
xchg
mov
adc
mov
imul
leave
push
jmp
pop
and
mov
or
or
push
push
je
lods
adc
jp
js
pop
jmp
les
andl
lock
jo
mov
add
pop
mov
mov
and
push
jbe
add
pusha
testb
incl
je
jmp
dec
adcl
xlat
sub
popa
add
push
outsb
push
push
add
jle
mov
mov
sub
cmp
mov
dec
and
movsl
popa
sbb
inc
dec
aaa
inc
rcl
pop
push
sub
in
adcb
clc
mov
add
push
test
inc
xchg
cmp
repnz
lahf
push
jl
inc
or
cmp
out
jmp
dec
pusha
xchg
xor
adc
icebp
inc
mov
adc
dec
cld
mov
and
mov
or
add
pushf
mov
hlt
xor
sti
xor
repnz
add
testb
add
pop
in
mov
pop
in
lock
rcrb
lock
inc
pop
push
sub
or
xor
stos
and
mov
push
stos
add
or
add
scas
or
lea
pop
mov
push
out
mov
add
scas
in
leave
push
push
icebp
cli
int3
stos
cmp
cmpb
mov
aaa
cmp
cmp
mov
shl
inc
mov
lock
pop
adc
subl
mov
insb
movsb
lock
jb
sub
and
xor
jo
leave
mov
mov
sub
jne
mov
pop
call
rolb
lods
std
add
add
pop
repnz
xchg
and
or
pop
pop
push
adc
hlt
adc
ret
inc
inc
dec
rorb
jno
mov
xchg
mov
fsubr
mov
pop
decl
sub
push
sub
push
jg
sub
inc
or
mov
or
fisubrs
nop
cmpsb
pushf
sub
and
or
orb
shlb
mov
dec
loop
aas
fsubrs
ss
pop
push
cmpsl
mov
cmp
inc
mov
sub
mov
xor
je
rcll
ja
jge
stos
jns
adc
push
pop
pop
ret
test
adc
mov
nop
fxch
fst
or
push
mov
int3
and
xchg
adcl
cmpsl
or
mov
mov
jae
clc
call
gs
xor
add
bound
cwtl
movl
pusha
lcall
incl
cmp
xchg
test
sub
add
outsb
mov
and
out
push
idivb
mov
mov
mov
pushf
sub
mov
imul
push
stos
adc
in
cmpsl
push
cmp
add
push
mov
shrl
ja
mov
sub
ljmp
loopne
cmp
rcrb
and
cld
push
clc
sbb
roll
shlb
push
adc
lods
pop
push
int3
sahf
hlt
push
test
inc
test
je
or
push
push
pop
scas
adc
add
lods
ljmp
mov
sbb
push
sbb
in
adc
scas
lods
jo
sub
dec
and
sub
adc
call
loope
xchg
sbb
sbb
mov
call
push
or
sub
push
add
iret
lcallw
adc
inc
push
xor
ret
or
enter
rorl
mov
ret
cmp
xchg
push
dec
sbb
push
pusha
movsl
jp
sbb
pop
cmp
daa
bound
je
sbb
pop
jbe
mov
add
add
dec
inc
or
sub
in
data16
andl
lea
aaa
dec
aam
push
mov
lret
test
mov
add
call
add
dec
les
int
push
dec
sub
jns
mov
add
add
mov
rorb
adc
in
jnp
adc
cltd
inc
out
pop
cmp
inc
mov
lods
pop
call
shr
cs
mov
loopne
add
xchg
mov
cmp
popa
lock
adc
loop
or
notb
dec
xor
inc
testl
jo
cmp
fwait
mov
inc
lahf
and
xor
pusha
dec
into
cmp
rclb
pop
movsl
xchg
adc
sbb
loope
add
adc
cmp
pushf
stc
and
mov
pop
pusha
cmp
push
jmp
cmp
inc
push
rclb
add
pop
insl
ret
inc
mov
adc
mov
xor
sub
jge
or
in
jle
fisubl
pop
pop
in
jne
test
push
add
adc
mov
sbb
imul
insb
mov
and
push
int3
pop
jp
xchg
repnz
movsb
dec
mov
sbb
in
in
rcrb
pxor
mov
jmp
std
in
out
adc
clc
mov
xor
ljmp
jo
test
stos
shll
mov
inc
addl
cld
cmp
or
cmp
fadd
test
aam
cmpb
jecxz
pusha
push
enter
dec
xor
lret
fstpt
insl
jne
cs
add
push
jae
arpl
cmp
sahf
add
push
sahf
ja
stc
je
inc
or
push
or
outsb
pop
insb
jne
or
cmp
push
push
inc
outsb
dec
inc
cmp
inc
sbb
mov
lea
je
call
push
rcr
std
mov
pop
cmp
je
mov
aad
jo
mov
test
or
cmp
je
push
hlt
adc
pop
fidivs
push
or
fdivrl
jle
push
push
push
mov
and
push
inc
mov
push
lods
push
movb
stos
popf
sbb
pop
mov
add
call
mov
inc
pop
jb
push
push
pop
call
xchg
rorb
dec
sub
push
fsubs
push
loopne
and
pop
push
shlb
sbb
push
out
cmp
sub
xor
xor
inc
add
fs
inc
jnp
jae
add
arpl
sbb
int
addb
stc
leave
pop
cmc
aas
test
cmp
jne
add
mov
add
ja
or
mov
mov
outsb
push
mov
mov
mov
sub
jg
add
cmp
lret
repnz
or
pop
inc
or
jb
sbb
shr
xor
pushf
outsb
hlt
add
mov
mov
mov
pop
jo
scas
sbb
rcrb
push
and
ret
mov
adc
or
add
lcall
fs
imul
mov
fmuls
fsubr
mov
jle
cmpsb
cwtl
xor
or
xchg
aam
out
push
mov
inc
int3
rol
dec
inc
mov
scas
shlb
push
and
pop
les
out
into
xchg
add
xchg
int
sbb
add
push
sub
pop
imul
add
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
stos
sbb
inc
push
lcall
push
add
js
rclb
mov
cmp
jne
adc
and
call
ret
jo
js
pop
lock
xor
add
outsb
dec
pcmpeqw
sub
ret
adc
sbb
fucomi
pop
add
sub
popa
add
mov
dec
data16
js
lret
sbb
and
mov
sub
or
sbb
ror
pop
or
or
or
xchg
mov
ja
sbb
jns
lret
mov
jle
shll
mov
insl
arpl
cs
pop
mov
ret
nop
test
or
lea
scas
push
pop
push
ret
mov
mov
adc
test
in
bound
inc
and
adc
pusha
not
loopne
cld
incl
add
pop
jo
shll
jo
rol
ljmp
mov
add
stc
loopne
sbb
jl
xchg
mov
mov
add
or
subl
into
push
out
lret
sbbb
clc
or
popf
inc
in
ret
inc
sbb
daa
clc
fnstenv
jp
fnstcw
adc
or
sbb
add
in
mov
das
or
incb
mov
out
add
dec
mov
stc
or
mov
pop
in
stc
xchg
mov
out
cltd
imul
fsincos
dec
sub
add
mov
fldt
xchg
pop
dec
pop
mov
stc
cmp
adc
ss
push
dec
lock
stc
je
icebp
jne
ds
rcll
xorl
ss
movsl
dec
fwait
pop
lahf
xchg
or
sub
call
pop
dec
sub
and
ja
mov
and
add
add
in
push
mov
xlat
or
adc
rclb
nop
iret
push
or
inc
push
mov
mov
pop
cmp
mov
movsl
cmp
sub
pop
scas
or
jmp
cmp
xor
cwtl
dec
pop
cwtl
adc
popf
sbb
outsl
mov
pusha
arpl
dec
push
dec
sub
or
orl
push
jp
add
adc
adc
outsl
or
out
fsubrl
xor
push
or
out
shrb
add
aas
dec
icebp
adc
add
enter
adc
and
add
dec
sub
inc
clc
xor
or
sub
lock
xchg
popa
add
fmul
and
shrb
mov
lock
adc
out
scas
out
orb
int3
sbb
cwtl
dec
lock
pop
loopne
jnp
cmovl
push
sbb
sbb
sbb
cmp
movsl
mov
sub
cwtl
sub
mov
xor
insb
insb
adc
and
ljmp
clc
shrb
add
les
xchg
ret
push
sbb
mov
outsl
or
jg
adc
je
cmp
pop
outsb
divb
mov
or
pop
stc
loop
push
cmp
xor
sbb
mov
push
push
push
lock
push
sub
or
sub
inc
pop
xchg
jmp
lea
inc
js
push
dec
addb
xchg
out
push
andps
jne
lock
mov
lock
in
in
lock
cmpsl
testl
push
push
push
rcrl
jo
into
xchg
jo
add
dec
jo
or
push
mov
xchg
fistpll
jbe
mov
into
add
push
mov
dec
mov
into
lea
mov
sub
adc
cs
testb
xchg
mov
cmp
cmpsb
je
rorb
aam
jl
testb
sbb
sub
add
rcrl
icebp
and
sub
test
das
cmp
xor
sbb
push
cmpb
adc
jbe
add
jle
call
cmp
pop
leave
enter
adc
dec
mov
in
clc
mov
fsubl
push
jge
jne
cli
jae
lea
xchg
mov
inc
mov
jp,pn
mov
mov
popa
call
cmpsl
std
push
cld
adc
outsb
and
xor
cld
test
xchg
add
or
in
fwait
add
jg
fwait
pop
sbbl
pushf
cwtl
fidivrs
and
sub
and
sarb
fwait
sbb
or
xchg
std
mov
and
dec
push
lea
push
pop
cwtl
push
adc
pop
add
mov
add
sbb
lret
push
or
pusha
push
outsl
sbb
in
xor
pop
lods
add
adc
xchg
fcoms
cli
clc
and
out
xchg
pop
xor
pop
sbb
mov
xor
fcomps
xchg
inc
fs
adcb
adc
call
cmp
clc
pop
arpl
mov
imul
add
sbb
into
xorb
sub
ja
mov
paddw
add
dec
mov
cmp
adc
and
adc
cwtl
push
xlat
dec
and
jbe
ret
ret
dec
jb
aas
dec
cmp
je
aaa
jns
shlb
loopne
add
and
jge,pn
sbb
jg
adc
test
push
cmpb
sbbl
xchg
add
lea
outsl
arpl
and
pusha
pop
pop
inc
ljmp
mov
adc
sbb
ds
pop
pop
or
push
fs
push
or
loope
or
pop
fistl
ret
xchg
pop
into
jecxz
lock
and
cmp
ds
pop
setne
add
mov
add
lret
mov
add
dec
lock
sar
out
pop
add
cmp
cmp
adc
sbb
or
aam
mov
add
fsubr
mov
cltd
cmpl
movsl
fdiv
adc
add
aad
pop
popa
mov
and
mov
adc
shrb
pop
fs
ds
pusha
in
mov
popf
ljmp
pop
mov
movsl
add
fwait
icebp
xor
cmp
repz
push
adc
pop
jo
push
out
jo
push
cli
or
fadd
mov
push
add
aaa
mov
ja
push
rorb
push
adc
mulb
test
jb
mov
mov
das
inc
cmp
or
adc
push
stos
push
js
aaa
fadds
and
cmp
mov
movzwl
sub
jne
ljmp
inc
lcall
push
fmuls
jns
je
or
cs
or
push
dec
mov
cmp
push
adc
ljmp
je
repnz
push
cmp
shlb
xchg
sbb
fs
push
orb
adc
out
xchg
push
mov
pop
sub
leave
lcall
add
xor
nop
ljmp
aam
or
or
pusha
sbb
or
sub
stos
sbb
dec
push
sbb
cmp
jl
or
cmp
inc
cmp
lds
and
and
jb
push
xor
js
sbb
sbb
adc
mov
pop
shrl
in
in
mov
xor
push
cmp
xorb
pushf
dec
imul
or
push
pop
sub
adc
mov
imul
test
lock
lock
decl
xchg
cmp
sub
sbb
fnstenv
xor
mov
xchg
inc
xchg
xchg
lods
push
rcrb
xchg
add
decl
shr
and
mov
mov
shlb
sub
bound
pop
jle
mov
xor
push
xor
inc
push
sub
push
xor
and
mov
cmp
fmull
jb
pop
push
or
inc
sbb
add
jnp
pushf
push
and
fbld
xor
xor
mov
mov
jge
push
rclb
xor
or
cmp
sub
cmp
push
notl
or
jp
insl
inc
insb
js
push
sbb
push
xor
movb
mov
pusha
int
fwait
and
dec
mov
inc
cwtl
test
fadds
adc
xchg
dec
xchg
cmpb
adc
andl
pop
lock
lret
inc
fistps
fidivrl
sbb
inc
jmp
pushl
xchg
mov
pop
mov
dec
js
cmp
lea
js
out
cmp
inc
jmp
or
shll
push
mov
inc
je
sub
or
mov
xor
push
inc
rorb
mov
jns
inc
mov
push
add
mov
in
adc
jl
andl
adc
sbb
and
push
xlat
pop
aaa
add
or
es
jecxz
ffreep
addr16
cltd
cmp
inc
lds
sahf
push
xchg
dec
outsb
mov
push
movsb
testb
cmp
in
add
or
lahf
add
jmp
adc
aad
jb
mov
push
test
stos
and
mov
fucom
inc
mov
mov
fdivrl
pop
push
test
push
mov
in
push
adc
lock
sbb
xor
jl
or
push
sub
adc
add
cmpsl
sbb
add
shl
clc
shr
pop
add
fdivs
insb
dec
dec
adc
jbe
fcoml
pop
inc
push
inc
adc
rcll
and
je
rolb
sbb
pusha
cmp
jmp
xchg
xchg
out
pop
fnsave
pop
enter
loope
push
orl
xor
vphaddwd
inc
daa
push
loop
or
dec
xorl
add
cmpb
sub
cmp
imul
pop
testb
je
and
out
pop
adc
mov
icebp
xor
and
xor
add
pusha
or
in
pop
sbb
movzbl
ret
adc
scas
mov
dec
pop
and
clc
sub
xor
push
adc
cs
jnp
inc
lret
mov
lahf
sbb
dec
ds
addl
aas
fcomp
dec
mov
mov
rorb
jge
push
fadds
and
popf
add
jmp
aaa
add
add
jb
inc
add
scas
sbb
sbb
mov
test
adc
xchg
je
insb
scas
stos
cs
xchg
push
cmp
filds
xchg
movsl
mov
xor
cmp
xchg
mov
fbstp
dec
push
adc
dec
loopne
add
push
movhps
jnp
pop
cld
mov
and
push
push
dec
push
pushf
push
inc
shlb
and
pop
enter
mov
and
add
jno
leave
and
fiadds
call
pushfw
inc
xlat
adc
push
aam
mov
fistpl
push
mov
mov
mov
stos
and
pop
pop
add
pop
into
aaa
add
dec
push
jo
jmp
xor
or
pop
outsb
pop
repnz
push
pop
cmp
push
jne
addb
mov
movsl
adc
cwtl
jle
sbb
imul
insb
mov
cwtl
mov
mov
adc
inc
adc
data16
pop
pop
loop
jne
cmpb
jo
push
out
ds
aad
enter
frstor
add
xor
pop
sub
mov
in
or
add
push
cmp
cmp
and
aaa
and
aaa
push
addl
and
cmc
daa
sbb
push
loopne
add
xchg
and
in
je
lock
mov
adc
int
or
call
daa
add
adc
mov
inc
dec
inc
xchg
ss
or
mov
subb
dec
ljmp
into
add
into
xor
jae
movsb
pop
clc
add
jo
cmp
clc
test
ret
cmp
jno
cmp
mov
es
sub
addb
rclb
shrb
lock
mov
add
cli
inc
or
adc
cmp
ss
xor
movb
cmp
fldcw
and
je
mov
das
movsl
inc
dec
dec
push
hlt
dec
push
xor
sahf
fimuls
jae
out
add
xchg
lret
add
scas
xor
repz
insb
lcall
ret
lods
xor
xor
dec
push
push
mov
dec
insb
add
fdivrs
xor
mov
sub
sub
lods
adc
sbb
daa
cmp
or
add
adc
sbb
mov
cmp
jne
pop
loopne
xor
loope
push
add
enter
adcb
push
push
jg
shlb
mov
push
scas
sbb
and
mov
test
dec
dec
jnp
cmp
push
pop
and
aas
pop
dec
inc
mov
xlat
lret
or
cmovns
popf
stos
jne
popf
inc
cli
push
cld
sbb
loope
clc
lods
sub
push
inc
aas
adc
movl
incb
add
test
les
sbb
dec
or
adc
mov
jp
sub
sbb
or
pusha
insb
std
sarl
insl
mov
dec
in
adc
xor
out
gs
adc
sub
cmp
jge
sahf
mov
loopne
pop
lock
mov
mov
adc
clc
push
repnz
mov
int
push
sbb
push
pop
adc
sub
lret
jbe
add
xchg
jne
add
jns
loop
lods
xor
in
mov
push
jecxz
insl
sbb
jle
push
push
int3
or
int
mov
dec
push
pop
xchg
int
inc
jno
pop
sbb
sbb
dec
xor
push
not
and
imul
icebp
or
out
inc
adc
adc
sahf
and
pop
jmp
in
out
pop
pusha
in
mov
addl
insb
sbb
adc
pop
test
hlt
or
pushl
mov
into
inc
add
movb
mov
sbb
clc
sbb
xor
je
adc
mov
pop
dec
sub
xchg
mov
xorb
adc
mov
xor
loopne
sbb
lds
adc
inc
push
in
push
jmp
ret
jnp
mov
pop
mov
lea
mov
insl
mov
mov
inc
aaa
adc
leave
jbe
mov
lea
jo
aas
mov
or
pop
sub
add
sahf
inc
xchg
push
js
jg
mov
and
push
in
insb
mov
scas
or
cmp
ljmp
xchg
loope
cmp
cmp
push
pop
inc
mov
xor
xchg
lret
push
xchg
pop
adc
icebp
push
je
sub
push
and
sbb
xchg
push
xor
mov
loop
aas
mov
dec
and
adcl
push
push
and
inc
push
dec
mov
or
in
lea
movsb
push
insb
push
jns
pop
loope
push
push
pop
sbb
mov
push
adc
test
and
addl
into
sbb
push
pop
and
or
add
cmp
test
and
and
idivb
xor
aaa
lret
mov
mov
mov
div
sub
inc
fmull
out
pop
push
pop
jecxz
lods
pop
or
mov
ror
sbb
push
pushf
lods
cs
nop
rcl
push
into
lret
mov
push
push
or
inc
loope
and
les
or
call
loope
xchg
loope
and
rcl
xchg
fnstenv
sbb
xor
sti
lods
sbb
push
jmp
or
xchg
int3
sub
dec
sub
push
dec
in
dec
aam
into
or
mov
pushf
push
sub
jge
fisubs
je
clc
mov
shl
inc
mov
testl
test
xor
or
iret
pushf
rol
and
roll
sbb
or
aam
movsb
inc
mov
mov
cmpsb
add
les
jbe
xchg
inc
jo
mov
xchg
push
push
xor
adc
jae
push
push
jae
movsb
sbb
cld
jl
movl
pop
pop
push
push
or
mov
add
xor
in
mov
insl
lea
fdivl
movsb
in
dec
mov
push
pop
inc
push
mov
sbb
push
gs
or
lods
aas
inc
push
jb
add
aaa
push
testl
mov
shll
push
test
pop
cmpl
mov
mov
andl
sti
and
mov
pop
jp
popf
mov
pop
lods
push
cmc
cmpsl
mov
lahf
adc
lret
mov
bound
sub
jb
xchg
test
and
ret
in
sahf
sti
sub
xor
xor
cmp
xchg
xchg
test
dec
or
push
andb
cmc
add
cmp
inc
in
mov
dec
dec
lret
or
push
xor
xchg
mov
or
scas
jo
inc
push
push
sub
or
pop
pop
dec
mov
mov
cld
pushl
push
push
or
dec
cmp
or
jo
loopne
add
ret
testb
cmp
xchg
and
mov
cmp
xchg
negl
aam
ljmp
jne
gs
outsl
out
ret
outsl
or
sti
dec
ja
je
or
je
or
sub
xchg
adc
jo
movsl
adc
les
in
or
add
xor
jne
adc
or
jnp
mov
push
jmp
cmp
in
je
push
adc
adc
dec
xor
inc
adc
inc
inc
bound
cmp
add
inc
or
jbe
lahf
jbe
stos
dec
jmp
lods
push
push
adc
mov
adc
outsb
dec
dec
inc
mov
clc
test
cli
gs
add
je
mov
sub
in
inc
ret
push
pop
or
adc
xchg
pop
adc
in
and
push
mov
test
cltd
add
cli
and
mov
pusha
add
add
xor
xor
lahf
sub
les
int3
xor
decb
call
sub
sub
pop
jg
add
clc
add
scas
test
inc
push
adc
stos
mov
mov
test
xor
mov
or
push
adc
out
std
loop
inc
sub
push
pop
jo
add
fstpt
lds
mov
pusha
and
lea
cmp
and
sub
std
xchg
stc
pop
and
lret
test
inc
cs
push
pusha
cwtl
jp
dec
cld
out
push
cmp
pop
cli
shll
dec
cmp
or
dec
mov
mov
pop
fcoml
inc
popa
movsb
sbb
pop
stc
sti
je
int3
sub
mov
or
inc
subb
mov
lds
test
scas
xor
enter
fadds
ss
ret
in
push
push
out
add
add
mov
stos
xor
and
js
mov
xchg
xchg
cmpsb
add
sub
loope
mov
push
xchg
fdivrs
mov
xchg
push
push
xchg
shlb
jge
cltd
mov
push
cltd
mov
cmp
test
in
repnz
sub
inc
jb
cltd
shrb
push
cmp
int
aam
push
lock
jae
call
sbb
pusha
cmp
or
faddl
test
pop
outsl
inc
and
jl
cld
mov
and
bnd
in
mov
push
xchg
fcoml
in
mov
and
in
xlat
pusha
dec
push
mov
inc
lcall
nop
bound
mov
or
xorb
or
add
addb
pop
std
sub
add
xchg
idivl
test
jmp
sbb
add
popa
sub
adc
dec
fisubl
mov
sbb
pop
testb
inc
sub
mov
mov
out
popa
negl
jmp
sbb
shrb
mov
pop
jmp
jb
push
je
sbb
jmp
and
dec
fidivrl
sbb
sahf
test
or
xor
mov
mov
jnp
push
mov
inc
ficompl
cmp
adc
dec
loop
popa
fsubl
pop
mov
or
push
xor
jl
lcall
fldt
daa
out
mov
movl
aaa
inc
add
jne
jle
xor
push
loopne
rcrl
insb
dec
in
ss
in
cmp
je
cltd
dec
in
nop
clc
pop
icebp
les
subb
add
pop
ror
fcoms
push
pop
dec
or
clc
add
sbb
outsl
xor
adc
pushf
je
and
enter
ss
je
sbb
leave
xchg
cmp
inc
loopne
push
pop
and
pusha
inc
add
aas
das
mov
or
mov
add
push
mov
sbb
sbb
cmp
mov
cmp
clc
sub
lock
push
or
push
pop
push
or
push
xchg
mov
add
fs
and
adcl
push
add
xor
subb
adcb
push
or
mov
lock
jg
inc
les
xor
xor
add
xor
xchg
add
loopne
jbe
shl
call
pop
push
iret
dec
pop
incl
lret
mov
jne
xchg
jnp
movsl
decl
xchg
sysexit
inc
inc
inc
insb
or
and
pop
shl
dec
and
out
ss
pop
jg
pop
pusha
cli
sbb
xor
andb
mov
loop
inc
sbb
push
xor
dec
sub
dec
mov
aam
insb
sbb
push
test
add
mov
dec
pop
push
push
add
daa
call
adc
add
aam
push
test
aaa
mov
push
mov
push
xchg
cmp
pushf
xor
or
jmp
inc
xchg
loopne
fs
jg
push
or
insb
lock
mov
cwtl
js
ret
push
filds
hlt
add
call
addb
inc
xchg
pop
dec
cmp
or
adc
out
hlt
or
jg
shlb
sub
pusha
outsl
mov
sti
and
fadd
sbbb
es
sub
add
les
inc
sub
dec
js
mov
pop
mov
inc
psraw
cli
aad
ja
lret
xchg
jns
ret
arpl
push
add
fstpt
je
mov
dec
lret
xor
or
add
ja
sarb
sbb
insb
ss
push
inc
pusha
inc
repnz
add
and
inc
pop
pop
or
cmpsb
insl
add
jecxz
mov
adc
and
adc
sbb
and
hlt
rcrb
pop
push
mov
pop
outsb
xor
add
cmp
sub
dec
sti
scas
adc
es
loopne
sbb
xor
movb
ret
mov
dec
mov
xchg
sub
push
adc
fiaddl
jle
mov
addr16
mov
inc
jne
adc
dec
mov
test
fiaddl
in
adc
ss
dec
loope
mov
adc
pop
sbb
xchg
push
leave
push
adcb
or
rclb
adc
nop
sbb
pusha
xchg
adc
add
testb
stc
mov
les
loope
dec
in
jle
into
push
call
test
movsl
fwait
call
aaa
stos
sbb
adc
ljmp
xchg
mov
and
lret
es
add
je
and
inc
add
test
movsl
cli
call
dec
jmp
add
fsts
adc
xor
cltd
inc
jnp
add
jne
or
mov
xchg
push
cli
mov
sbb
movsb
push
lcall
sti
and
mov
subl
push
dec
dec
dec
cli
add
pop
je
or
push
cmp
rorb
hlt
add
or
cmp
mov
fsts
test
cld
frstor
mov
dec
adc
adc
inc
or
aaa
pusha
push
pop
out
jmp
mov
fs
sbb
xor
clc
dec
adc
fldt
dec
sub
or
push
push
cmp
cmp
rclb
push
mov
and
inc
pushf
push
adc
and
cld
push
mov
dec
pop
les
inc
adc
mov
xor
popf
repz
and
into
shr
push
jmp
jmp
es
enter
mov
inc
bound
inc
add
mov
sbb
push
mov
and
imul
sub
push
dec
loopne
add
fs
push
mov
iret
out
add
push
rdmsr
test
mov
sbb
sbb
mov
and
and
sbb
and
sub
and
and
icebp
xor
sbb
push
sub
add
sub
clc
or
xchg
rcr
out
lea
push
jbe
adc
pop
mov
andb
push
sub
xchg
and
and
mov
mov
xor
mov
xchg
cmp
sbb
adc
gs
cmp
fcompl
add
mov
or
and
sub
add
mov
jno
fwait
inc
xchg
fcoml
aaa
or
decb
fmull
cmpsb
add
inc
and
mov
in
or
hlt
push
dec
push
data16
dec
in
ret
xor
adc
das
scas
decb
push
and
orb
mov
test
xor
int
insb
ds
mov
mov
aam
dec
and
lcall
dec
aad
cmp
stos
pop
or
call
add
call
mov
imul
orb
push
enter
add
inc
mov
pop
ret
movsb
or
sbb
and
mov
pop
jmp
pushl
sub
jmp
push
pop
adc
pop
lret
dec
loopne
clc
mov
mov
mov
scas
cld
mov
cmpsb
addr16
inc
or
sbb
inc
add
push
movsl
sub
jmp
sbb
stc
fcoms
or
cmp
out
mov
xlat
imulb
cmp
fmuls
in
inc
jecxz
roll
pop
push
jae
loopne
icebp
cltd
mov
pop
and
pop
or
lret
push
cmp
repnz
movsb
adc
mov
out
loopne
fbld
in
push
in
scas
push
imul
pop
in
jns
cmp
testb
xor
jne
orl
pop
jnp
sub
xlat
shl
xor
lcall
or
push
mov
add
insl
and
cmp
adc
xor
push
push
dec
and
or
call
or
or
in
push
sahf
pop
add
sbb
or
pop
sahf
mov
mov
leave
ret
and
or
add
xchg
mov
add
cmc
push
dec
xchg
pop
cmp
push
push
js
sbb
or
xchg
sub
or
xchg
mov
xor
add
mov
addr16
xchg
in
popa
jge
xor
mov
lea
cltd
xor
inc
pop
cmp
std
or
jbe
inc
mov
in
inc
cmp
sub
cld
add
and
mov
xchg
or
cmpsb
jns
jne
push
xor
cmp
dec
add
push
sub
push
sarb
rcrb
test
jl
inc
xchg
pop
int3
mov
or
in
sub
and
lret
adc
stos
push
push
sub
dec
and
shlb
mov
jnp
xor
push
and
xchg
cmp
push
add
adc
push
mov
xchg
jl
cmp
lock
mov
or
out
pop
cmp
jne
fldl
xor
mov
stos
cmp
jge
cmp
cmp
pop
loop
fwait
adc
pop
dec
push
jmp
push
inc
icebp
lret
pop
push
loop
push
mov
dec
call
loope
jae
loopne
jl
jp
mov
sar
mov
or
add
call
in
and
mov
mov
sbb
sbb
sbb
or
test
jmp
mov
add
js
xorb
aad
and
cmp
xchg
xor
push
jp
push
dec
or
sub
xor
std
jle
movsl
pop
jb
subl
pusha
xor
out
and
in
inc
mov
and
mov
push
add
sub
andl
mov
or
add
fistpl
leave
sbbl
daa
jns
clc
inc
and
add
adc
jmp
push
xor
push
and
sbb
inc
or
ja
mov
icebp
pop
mov
and
xor
mov
pop
dec
idivl
jb
dec
sbb
adc
sub
nop
add
icebp
mov
subl
push
xchg
jns
add
sbb
xorb
push
inc
mov
mov
and
fsubs
test
mov
cmp
jbe
sar
sarl
push
xor
das
sbb
lods
push
lds
mov
cmp
mov
iret
cmp
popa
rcrl
push
ret
imul
stos
inc
jno
leave
adc
aaa
test
leave
push
dec
dec
in
xchg
sbb
test
sbb
aaa
mov
push
or
sbb
outsb
inc
dec
dec
jle
shrl
jne
test
dec
xlat
mov
mov
jge
jo
add
mov
cmp
push
jo
fcomps
lock
pop
adc
fwait
aaa
arpl
sub
leave
inc
out
decb
mov
cmp
jbe
xchg
lea
mov
push
lea
in
jb
or
pop
jae
inc
dec
inc
xor
mov
mov
pusha
fwait
in
push
xor
nop
mov
add
jmp
sbb
add
sbb
xor
test
rorb
push
xchg
cmc
sbb
push
fdivp
es
fidivl
cmp
cmp
mov
or
std
xor
inc
jmp
ja
shll
or
cmp
push
push
push
mov
adc
jle
or
mov
push
cmpsl
pusha
xchg
ret
test
loopne
int3
cld
push
pop
cmp
adc
or
popa
loop
sub
sti
lea
out
fdivs
andl
push
push
dec
sbbl
cmovp
iret
push
add
mov
push
popa
mov
pop
gs
in
xchg
mov
adc
sub
out
cli
orl
jo
dec
lea
aaa
sbb
mov
mov
inc
aas
or
movb
mov
insb
xor
test
or
add
das
test
jbe
lds
or
add
xchg
mov
lock
stos
xor
lods
lods
mov
fisttps
test
setg
push
dec
dec
inc
adc
sub
js
xchg
sysret
iret
jecxz
test
jno
mov
scas
dec
push
test
jmp
sbb
dec
fisubrl
sub
hlt
cmc
shrd
push
or
inc
bound
jnp
lret
mov
adc
adc
jnp
pop
scas
xor
jb
or
pop
mov
scas
or
mov
lods
add
dec
fsubrl
dec
loope
mov
int3
js
dec
imul
mov
jge
dec
loopne
mov
jns
pusha
sub
xor
dec
pop
and
sub
rolb
test
mov
sub
push
pop
mov
rep
mov
mov
in
adc
jo
add
fnstenv
xor
xor
or
push
cmp
sbb
pop
jg
adc
and
fs
sbb
cmpsb
rcll
ja
jge
mov
adc
addr16
mov
lret
ss
out
pop
ret
push
mov
test
sub
push
or
xor
dec
in
cltd
jne
test
or
push
popa
movl
in
and
pusha
pusha
loopne
push
jbe
cld
or
movsb
jg
and
push
xor
ret
adcl
cmp
pop
dec
push
inc
add
fsub
cmp
int3
fs
xor
je
cmp
test
ljmp
pusha
insb
insl
add
insl
inc
cmc
add
lea
clc
shll
in
mov
ljmp
cld
sbb
call
clc
lds
jns
insb
rolb
sbb
cmp
incb
add
sub
lea
cmp
add
push
xor
lock
fildl
cmp
sbb
fcoml
xchg
dec
pop
aaa
mov
dec
pop
adc
subl
adc
or
divb
pushf
jg
push
movsl
cmp
fadds
lret
push
add
inc
xchg
push
addl
xchg
adc
or
aam
test
cld
push
xor
sbb
sbb
inc
je
dec
jmp
jne
sbb
mov
mov
sub
faddl
jnp
xchg
adc
sbb
sbb
jo
loope
adc
je
pop
cmp
xor
jno
push
push
push
sbb
cmp
int3
push
mov
ret
xor
imul
cmp
nop
inc
test
and
ljmp
xor
cmp
int
fchs
mov
jge
mov
test
jg
scas
jle
dec
add
jmp
add
adc
push
cmp
sbb
das
xchg
jmp
shll
cld
xchg
push
xor
hlt
pop
push
fnstenv
add
ja
xchg
add
xchg
or
or
xorb
xchg
xchg
lods
cmp
inc
in
clc
dec
loopne
into
lret
dec
insb
sub
cmp
in
movl
stc
push
or
sbb
mov
inc
add
arpl
add
adc
test
sub
data16
push
js
push
mov
adc
decl
mov
add
jg
aaa
enter
cmc
adc
fimuls
das
sub
loop
pop
ljmp
add
adc
rclb
pusha
xchg
daa
test
sbb
out
push
icebp
lods
xor
mov
or
or
xor
push
xor
ljmp
fisttpll
inc
jecxz
mov
test
je
or
add
ds
rclb
mov
hlt
nop
ret
xor
addr16
arpl
fisttpll
dec
pop
cmp
and
out
pop
lods
pop
call
js
mov
popa
sub
lret
int3
dec
test
in
je
cmp
jae
cmp
xchg
add
jne
add
adc
cmp
add
jno
dec
sub
jecxz
inc
cwtl
or
adc
inc
mov
xchg
adc
adc
mov
sub
pop
cmp
sub
pop
xor
inc
push
aad
mov
insl
inc
insb
jbe
rep
bound
sub
jmp
sub
jae
xor
push
jg
not
and
orl
lahf
ret
fidivrs
and
jne
push
push
rcr
loop
push
inc
cld
adc
xlat
inc
ret
lcall
loopne
adc
mov
inc
das
data16
inc
sub
test
adc
inc
adc
int
lret
addb
cmpsb
inc
add
inc
add
sbb
ljmp
inc
xchg
mov
dec
add
es
cwtl
pop
cli
xor
xor
xor
mov
and
sbb
pop
or
sarb
add
xchg
push
or
lret
sbb
sub
or
leave
clc
push
mov
xchg
addb
mov
mov
cmp
sete
in
lds
insb
adc
push
rcll
popa
inc
fdivrs
mov
js
ja
and
cld
sub
or
pop
cmp
mov
xor
jbe
repnz
add
inc
xor
mov
inc
mov
push
cld
clc
pop
js
cltd
dec
scas
xor
add
lret
lret
add
jnp
pop
adc
mov
push
push
icebp
mov
call
sti
push
or
push
adc
mov
sub
push
cmp
and
mov
push
loope
incb
sahf
push
mov
dec
mov
and
dec
in
ss
add
mov
jo
push
cmp
jno
mov
push
mov
addl
push
jb
bound
sbb
inc
adc
arpl
cmp
cld
add
xor
or
adc
leave
or
add
cmp
scas
and
sarb
dec
jne
test
movsb
sbb
decb
add
je
add
data16
bnd
sarl
xchg
and
iret
rol
pop
push
jno
push
ret
mov
push
dec
mov
mov
je
push
adc
dec
rol
push
testl
inc
out
cltd
cmp
jl
inc
or
loopne
or
jbe
sub
push
or
sub
subb
mov
cs
xchg
push
sbb
fnstenv
pushf
lods
js
lock
sbb
push
scas
add
push
pop
mov
into
call
icebp
call
adc
sbb
mov
addr16
pop
mov
add
push
nop
hlt
jl
movb
test
int3
adc
rol
xlat
test
shlb
push
add
es
pop
pop
adc
sub
dec
mov
fisubl
inc
adc
test
push
stos
mov
add
scas
dec
or
pop
dec
js
pusha
pushf
loope
jp
stos
sbb
loope
dec
popf
add
insl
push
adc
roll
popf
push
or
push
pop
cmp
sbbl
push
cmp
mov
mov
or
aas
jge
dec
outsb
cmp
je
sbb
test
adc
dec
mov
sub
sar
cmp
jbe
faddp
pop
inc
or
add
jmp
pop
and
inc
pop
imul
js
in
adc
pop
sbb
push
pushf
mov
inc
xchg
push
movb
mov
arpl
sbb
shll
nop
icebp
cmp
and
sub
push
and
ja
fadd
cmpl
es
xchg
pop
inc
jns
pop
pop
mov
xor
push
jnp
jle
or
jo
jnp
push
pop
mov
add
pop
pop
and
lea
aaa
je
jb
notb
cmpl
or
das
cmp
or
sbb
inc
inc
pop
arpl
ficoms
lcall
mov
mov
push
adc
cwtl
fsubrl
mov
add
mov
mov
movsb
leave
enter
sbb
xor
stos
ret
or
inc
dec
xor
xor
or
in
inc
testb
pop
aad
pop
adc
jmp
dec
push
arpl
orl
jne
sub
std
sar
lea
jp
cmp
sbb
dec
push
push
out
pop
mov
cmp
jb
pushl
mov
pop
iret
add
or
push
pop
jmp
xor
jae
add
adc
add
sbb
inc
in
and
aas
adc
xor
jmp
int3
ud1
mov
xchg
jecxz
cmp
push
imul
out
data16
and
pop
mov
in
pop
dec
jl
out
mov
cs
sub
add
jo
add
mov
sbb
mov
cmp
ret
pop
lock
pop
and
pop
xor
jmp
cmpsb
add
sub
sub
popa
pop
mov
mov
dec
mov
adc
push
arpl
std
xchg
sbb
jle
jno
nop
mov
jb
stos
test
cli
int
nop
adc
cmp
insb
and
sbb
mov
js
je
out
push
mov
sbb
daa
or
dec
in
arpl
and
fcomp
in
or
daa
pop
or
cmpsb
cmp
mov
int
es
cmpsb
arpl
cmp
adc
or
mov
sub
fldt
ja
mov
aas
mov
cmp
push
add
adc
xor
lahf
and
adc
add
stc
inc
outsb
dec
add
stc
jge
icebp
movl
pusha
or
sarb
pushw
outsb
inc
outsl
jne
mov
cmp
add
orb
pusha
mov
stos
or
cmpsb
dec
bound
dec
push
push
add
enter
daa
mov
sahf
add
imul
bound
push
dec
dec
pusha
mov
mov
and
lods
popa
inc
push
nop
mov
add
nop
and
in
and
add
nop
add
nop
es
sub
add
adc
daa
inc
add
add
jo
add
sub
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
lahf
sub
xor
or
xor
cmp
push
cli
xor
mov
fstpt
daa
pop
jnp
cmp
or
sub
cmp
pusha
push
cmp
xor
push
adc
sbb
adc
shr
pop
adc
mov
loop
sbb
mov
sub
movl
shrb
andb
lret
or
or
repz
sub
jecxz
adc
adc
jbe
xor
jmp
aaa
mov
mov
ja
inc
and
movsl
movsb
popf
mov
pop
loope
dec
sub
xor
orb
divb
mov
lahf
popa
das
cmp
inc
arpl
imul
imul
dec
and
xchg
pop
dec
fimull
and
fists
test
jae
inc
push
and
call
jbe
mov
int3
add
push
add
xor
js
ds
pop
adc
or
aad
negl
stos
fstps
xchg
outsl
cmp
cld
movaps
ficompl
ss
push
cld
add
jne
or
pop
pop
or
pusha
outsb
sub
pop
lock
push
add
fbstp
aam
subl
bnd
mov
aad
mulb
out
xorl
pop
shl
or
fwait
push
int3
add
pop
sub
das
inc
push
test
and
jae
jne
sbb
sbb
outsb
and
repz
in
test
or
in
inc
call
pop
push
cmp
dec
adc
xor
lods
push
dec
pop
out
adc
dec
dec
or
mov
push
popa
push
scas
loope
jge
push
jae,pn
outsb
mov
int3
mov
and
scas
shl
xchg
adc
cmp
fwait
xchg
and
jmp
jo
in
cmc
frstor
lock
add
mov
jecxz
xor
add
clc
aaa
jecxz
sbb
mov
push
push
dec
cmp
sti
jg
push
sbb
and
push
outsl
cmp
push
jo
jo
je
icebp
out
sahf
pop
sbb
stos
rcl
lods
xchg
push
xor
push
push
inc
add
outsb
cwtl
adc
jbe
inc
scas
addb
pushf
fmull
in
add
loop
rorl
mov
push
sub
loope
mov
jmp
cmp
outsl
xchg
or
dec
or
adc
cmp
pop
dec
test
mov
mov
sbb
sub
cmp
xor
pop
add
pop
or
flds
loopne
test
push
pop
mov
call
add
or
xor
andl
xchg
loopne
loope
in
add
or
and
dec
sub
adc
or
or
mov
mov
movsl
sub
js
jns
cld
lock
mov
inc
xchg
repnz
inc
sub
push
stc
out
inc
sbb
xor
or
popa
cmp
and
pop
sbb
pop
and
or
sbb
jmp
pop
repnz
ret
push
mov
clc
xor
orl
int3
or
int
adc
jge
sub
or
pop
nop
lret
repnz
sub
lahf
or
push
lock
and
ss
sarl
cmp
adc
roll
aas
or
sbb
push
mov
popa
mov
add
test
adc
xor
insb
cld
mov
shl
push
xchg
sub
inc
lahf
push
cmp
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
push
ret
aas
lods
mov
inc
fistpl
jecxz
cmp
mov
pop
in
out
xchg
and
cmp
jl
je,pn
cmp
je
inc
clc
sub
andb
sub
mov
push
pop
add
xlat
iret
jae
rorb
and
pop
mov
sbb
inc
fwait
add
int3
pop
jbe
testl
xorb
mov
les
xorb
xchg
sub
pop
test
test
add
sub
enter
aam
loope
add
xor
jmp
add
incl
jl
lret
hlt
jge
adc
dec
fsubs
pushl
sub
jne
movl
hlt
inc
mov
inc
loop
andb
mov
loope
pop
dec
aam
or
adc
add
cld
lock
imul
push
dec
mov
mov
pop
pop
mov
test
mov
and
cmp
clc
sbb
jo
add
je
cli
in
jo
push
ja
sahf
jle
ret
xor
rol
dec
mov
push
xchg
adc
sub
stc
faddl
fstl
int3
fcomp
push
pop
shll
mov
inc
fildl
ficoms
pop
mov
pop
mov
leave
sub
sbb
insl
call
xchg
inc
sbb
pusha
clc
loope
sbb
leave
fadds
lea
mov
fiaddl
and
jecxz
add
call
in
orb
lret
outsl
sub
xchg
or
xor
ret
outsb
or
mov
inc
xor
das
test
mov
mov
test
mov
rolb
jns
pop
jo
push
push
pop
pop
pusha
outsl
fs
test
or
and
cli
andb
mov
stc
mov
or
test
adc
iret
mov
enter
sbb
mov
adc
mov
imul
je
adc
leave
add
jne
push
xchg
sbb
jle
push
xor
hlt
sub
push
push
jns
cmpb
and
add
mov
cmp
inc
out
test
and
daa
mov
lret
cli
je
mov
ficoms
sub
pop
or
inc
ficompl
loop
rclb
ret
addb
loopne
mov
inc
and
add
add
inc
add
inc
xchg
push
inc
add
add
mov
or
shlb
xor
and
push
jp
mov
cli
jne
in
popl
jbe
jmp
push
nop
push
por
sub
lcall
sti
sub
xchg
add
jmp
or
ret
sub
mov
jmp
shll
rolb
arpl
fsub
push
push
int3
lret
jmp
scas
ss
inc
adc
pop
movsb
ficompl
rclb
les
aaa
jnp
jmp
ret
and
or
ds
sub
pusha
ljmp
xor
sbb
ret
pop
xchg
and
ss
sub
or
mov
mov
fwait
movb
fsubrl
adc
test
in
xor
inc
pop
gs
push
sub
rcl
and
sbb
stc
ficoms
in
add
mov
mov
test
je
or
je
cmp
jne
adcb
and
call
push
lods
pop
jle
add
sbb
std
xchg
faddl
jno
cmp
fstpl
aaa
into
xor
and
jge
xor
int3
fs
push
adc
pop
dec
add
and
inc
jne
in
dec
sub
or
pusha
movsb
or
mov
iret
inc
repnz
mov
mov
cmp
insl
test
fwait
push
insb
pop
je
fwait
adc
clc
or
mov
push
or
pop
inc
jo
call
push
lods
add
xchg
les
inc
decl
test
test
les
jg
jae
xchg
or
or
pop
inc
xor
std
pop
jecxz
test
sub
rol
mov
jb
mov
lods
push
insb
jmp
or
adcl
addl
scas
push
popa
jbe
fdivrs
dec
add
jo
sbb
mov
xchg
adc
xchg
cmp
lock
xchg
cmpb
fildll
pop
or
jle
enter
pop
push
jno
sub
repz
add
push
cmp
push
lea
push
push
jae
sub
sahf
sub
jg
pop
add
cld
pop
das
inc
hlt
ret
mov
push
cli
push
lret
mov
jge
or
movsb
jl
xor
pop
gs
push
hlt
jg
mov
sub
push
adc
pushf
lea
add
add
jmp
lock
mov
orps
adc
mov
call
xor
jl
and
in
out
push
or
decb
xchg
xor
mov
lret
pop
ret
inc
dec
pop
jo
jne
xor
mov
push
jg
mov
mov
xchg
push
cmp
loopne
inc
or
mov
fiaddl
adc
shrl
inc
add
or
push
fst
push
mov
aas
clc
or
jns
jb
ret
prefetch
mov
dec
adc
pop
add
add
mov
mov
mov
data16
pop
lahf
xor
adcb
gs
add
sahf
push
mov
cmpb
cmp
mov
cmp
cld
push
out
cmp
pop
xchg
push
mov
mov
cmc
mov
out
or
cwtl
into
or
jmp
push
xor
jb
fcoml
cmpb
insb
test
adcl
jmp
mov
jb
push
xchg
adc
lds
mov
cmp
add
rorb
lea
in
push
push
les
sub
or
inc
pop
mov
inc
ljmp
xchg
xchg
adc
iret
and
pusha
nop
push
mov
adcl
add
or
lea
pushf
mov
dec
repnz
sahf
out
call
sbb
mov
je
dec
ljmp
xchg
and
imul
pop
xchg
adc
ror
sub
dec
mov
inc
mov
push
sub
mov
push
or
sub
cmp
das
sbb
jbe
dec
xor
in
push
outsl
subb
pop
pop
push
push
fstpl
cld
fs
pop
data16
jne
adc
adc
jne
push
lahf
out
stc
divb
or
jne
or
jne
push
js
cld
jecxz
or
or
push
fldz
add
pop
andl
xchg
cmp
lahf
filds
xchg
add
or
pop
xor
mov
scas
mov
sub
jg
fcoms
push
sub
fistl
lret
mov
jnp
fstl
jecxz
loop
jbe
or
movsl
movsl
lea
movsl
mov
xchg
or
push
cmp
inc
les
lret
cmp
sbb
adc
mov
mov
push
lea
gs
fidivrs
push
data16
aam
loopne
jo
pusha
ret
or
ffree
jge
jne
cmp
pushl
inc
inc
in
sub
push
outsb
test
mov
or
and
ja
fisubl
push
les
int
pop
and
pop
sbb
daa
push
and
mov
shrb
push
test
dec
je
or
add
fmull
or
movsb
test
xlat
push
inc
push
push
popf
jb
dec
mov
dec
fsubl
sub
sub
push
lcall
sbb
inc
daa
daa
jge
and
aad
dec
mov
enter
pop
lea
push
nop
cmp
push
cwtl
sub
imul
ja
xor
push
pusha
or
in
jmp
iret
lret
xor
xor
pusha
cmp
cld
ss
leave
mov
or
cmp
mov
or
pop
fsubrs
add
aaa
pop
add
push
mov
outsl
gs
or
ss
push
sub
push
ja
and
ret
popa
pop
or
sub
test
les
test
nop
pushf
add
add
lods
push
fldt
mov
mov
add
xchg
fldt
mov
mov
leave
enter
mov
add
dec
adc
imul
inc
fimuls
sbb
fbld
cltd
enter
inc
nop
jns
inc
cmp
or
inc
xchg
xchg
or
or
arpl
xchg
or
aam
or
push
inc
add
xchg
push
push
xor
in
call
adc
sub
add
sub
add
ror
enter
jb
sarb
mov
test
mov
cmpsb
mov
jge
push
adc
lock
jns
lods
inc
lfs
repnz
xor
ds
mov
mov
dec
cmp
js
xchg
push
loope
xor
popf
inc
rcrb
fs
pop
ret
icebp
ret
in
add
ret
out
dec
sbb
cmp
dec
popa
adc
outsl
pop
xchg
cmp
fcmovbe
fwait
adc
jge
cmp
add
dec
mov
push
adc
jle
dec
psadbw
adc
fs
lods
testl
int3
push
cs
data16
sbb
jbe
aaa
loopne
clc
leave
jge
call
jl
ds
addb
cs
sub
sub
adc
lcall
ror
popf
push
and
push
add
ljmp
push
push
insb
or
or
mov
jge
rclb
mull
inc
pop
sbb
mov
mov
mov
mov
sub
pop
jl
pop
scas
lret
push
jnp
in
add
in
pop
stos
cmc
push
push
mov
or
dec
jb
fsubrs
jp
cmp
decl
loop
test
insb
add
adc
stos
ret
mov
pop
or
rcr
flds
mov
add
inc
mov
adc
cmpb
mov
cmp
cmp
mov
mov
rdpmc
bound
pop
sub
jns
std
xor
rorb
out
jne
xor
dec
cmp
pop
cmp
add
and
loope
mov
sub
mov
mov
sub
push
and
mov
orb
push
popa
xor
or
ds
mov
inc
imul
stos
fs
adc
mov
fdivs
pop
jle
pop
xor
in
and
lcall
pop
inc
xor
outsb
inc
mov
faddl
sub
push
into
nop
dec
jmp
inc
mov
hlt
and
add
jno
dec
sbb
dec
or
pop
push
les
sbb
inc
nop
inc
or
lods
sbbb
xor
adc
out
jno
sti
push
test
out
mov
fwait
ret
imul
push
iret
pop
push
xchg
jecxz
jp
movsl
sub
add
orb
adcb
and
addl
ret
mov
pop
ret
adc
cmp
daa
sub
adc
shrb
pop
or
add
cld
outsb
cmp
or
mov
iret
pop
lds
push
in
test
scas
push
add
and
dec
clc
ljmp
dec
clc
jae
notb
inc
or
adcb
mov
inc
js
rorb
mov
add
mov
and
sbb
inc
pusha
outsl
outsl
dec
adc
cmp
cmp
lods
or
or
ljmp
pop
gs
pop
and
sub
push
cmpsl
xchg
jle
dec
add
mov
add
stc
icebp
pop
inc
ret
in
mov
mov
push
mov
xchg
pop
or
sbb
cmpsl
push
add
or
push
sti
add
lock
ret
not
mov
insb
xchg
xor
mov
sub
jo
and
stos
lods
inc
xor
lods
sbbl
ret
lahf
lods
inc
insb
adc
adc
inc
fistpl
test
nop
sbb
inc
test
lahf
jl
dec
add
or
sbb
pop
cmp
push
mov
pushf
sbb
jo
in
lock
das
adc
dec
inc
inc
das
jne
out
fcoms
sub
leave
repz
xchg
pop
xchg
lret
jp
rcrb
and
sub
adc
aas
hlt
xor
mov
or
mov
mull
xchg
and
mov
adc
shl
or
jp
dec
sub
sbb
add
int
mov
dec
test
outsb
add
sahf
cs
pop
aam
or
sbb
pop
addr16
ljmp
pusha
jne
movsl
mov
sub
gs
push
sub
and
aaa
fs
popa
imul
add
call
dec
pop
nop
inc
addl
icebp
cmpl
roll
xor
sub
dec
stos
jecxz
aaa
pop
sub
mov
test
adc
loope
shrl
jecxz
and
test
cwtl
fisubrl
push
cmp
sub
popa
mov
pop
mov
testl
in
or
and
pop
or
pushf
push
mov
lock
divb
sub
dec
add
dec
adc
dec
push
lods
les
inc
adc
mov
pop
adc
popl
add
sub
aam
sahf
xor
cs
sbb
jne
jge
dec
xchg
or
fsubrp
sbb
sbb
cmp
sbb
into
mov
adc
addr16
gs
or
push
out
orl
push
xchg
call
mov
add
lahf
lods
inc
hlt
in
push
inc
test
test
pop
pop
test
lahf
idivl
and
mov
outsl
stc
sub
xchg
js
mov
scas
stos
fiadds
ret
into
inc
dec
das
fldt
and
pusha
subl
fldt
inc
adc
inc
pop
xor
inc
inc
xor
repz
pop
mov
or
pcmpeqw
mov
jns
call
push
mov
push
add
and
jne
scas
jne
inc
cld
xchg
test
mov
dec
pusha
cmp
cs
pop
pop
cmpsb
push
test
pop
or
add
mov
jno
adcl
cmpsb
popa
dec
add
jmp
test
or
outsl
sbb
mov
adc
jne
inc
scas
lods
push
sbb
pop
jmp
inc
add
xchg
pop
test
jmp
test
jo
push
xor
arpl
fldl
aad
cmc
pop
in
add
xchg
mov
dec
inc
lock
shlb
sti
pop
mov
or
pushl
sbb
in
add
lods
loopne
push
nop
add
push
repnz
push
aam
mull
mov
dec
sbb
stos
insl
or
jo
xor
sti
pop
imul
fs
scas
xorl
je
scas
mov
inc
mov
xchg
movsl
push
push
leave
repz
lea
rolb
int
dec
or
dec
push
aad
fadds
inc
sahf
orb
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
cmpb
jo
pop
enter
orb
aas
mov
or
xor
movsb
or
ret
and
xorb
or
sahf
xor
cmp
add
repnz
insb
loopne
sahf
push
mov
jns
pop
hlt
mov
and
out
pop
cld
fwait
mov
add
rolb
cs
aad
mov
hlt
cmpl
adc
pop
lock
sbb
movsl
push
or
test
or
add
out
sbb
xor
pop
and
sbb
jp
and
loopne
push
xor
mov
jne
mov
and
sub
mov
unpcklps
push
or
imul
out
sbb
leave
or
rcrb
push
mov
sbb
adc
orb
sbb
and
fstps
lret
xor
sub
mov
cli
into
sub
mov
xor
push
cmp
push
or
adc
rcrb
adc
cmpsb
out
ljmp
cmp
and
or
cs
mov
xor
insb
pop
in
fadd
sub
outsb
add
cmp
xchg
mov
xorb
push
pop
add
test
add
add
sbb
outsb
adc
xlat
pop
insl
pop
sbb
push
pop
mov
scas
sbb
cwtl
inc
stos
and
dec
jge
xor
cmpsb
je
imul
adc
hlt
rclb
stc
test
cmpsl
inc
jns
mulb
adc
adc
pop
movsb
add
lds
fildll
ss
jg
adc
aaa
push
sub
sbb
xlat
xor
sbb
add
push
or
lods
jns
js
call
movsb
adc
sbbb
pop
add
insl
adc
xchg
sti
adc
aaa
and
or
insb
lock
inc
mov
mov
aad
movsl
push
ret
dec
dec
inc
movsl
mov
push
push
push
jns
rolb
repz
jbe
enter
and
fcomps
ret
mov
aaa
push
jp
outsl
or
push
push
mov
jne
xor
xchg
jnp
aas
add
adc
cmp
add
fsubr
or
cs
add
add
hlt
inc
push
flds
adc
mov
fdivrl
lock
fstps
sbb
adc
adc
push
sbb
jb
mov
jae
nop
sbb
and
sub
inc
lahf
or
mov
inc
fisubrs
mov
xor
shll
push
xchg
shr
push
outsl
mov
inc
insb
rcrl
call
in
adc
cmp
push
pop
jne
or
popl
mov
pop
mov
call
out
pop
add
lock
mov
ret
mov
lock
xchg
xchg
sar
mov
lret
xor
cli
dec
popf
test
cmp
sub
jb
pop
adc
outsb
add
or
mov
mov
rorl
jne
ljmp
or
repz
cmp
jae
or
out
cmp
bound
cli
sbb
shr
rorb
add
mov
icebp
sar
mov
scas
mov
movsb
jbe
push
call
cmp
mov
jmp
rorl
and
pop
pop
idivl
mov
mov
sub
xchg
jo
scas
in
mov
lret
mov
les
mov
scas
mov
cmp
je
movsb
lahf
movsb
inc
ficomps
fstl
and
or
pop
mov
xlat
test
test
inc
push
test
mov
and
mov
pusha
xor
testb
dec
inc
in
or
orl
adc
inc
cmc
inc
or
mov
add
sub
xor
ret
cmp
ret
xchg
jg
clc
sti
jmp
imul
movsbl
add
inc
mov
pop
jle
or
add
pop
dec
push
cmp
je
cmp
or
sub
cmp
jne
push
pop
adc
nop
mov
xor
xchg
jb
jne
jmp
incb
dec
mov
repz
push
inc
jp
test
je
push
adc
mov
mov
xchg
pop
shl
ret
sub
adc
adc
roll
ljmp
adc
fs
shl
ss
sub
adc
cmpb
xor
or
cmp
je
rol
adc
mov
pop
or
push
adc
lret
xchg
jp
bound
pop
push
or
pushl
xor
insb
test
mov
in
jg
mov
inc
inc
cmp
and
ja
or
pop
adc
repz
es
jl
cltd
push
dec
jns
jecxz
push
ja,pn
adc
jmp
add
push
inc
insb
xor
and
adc
pop
lcall
adc
incl
xor
add
mov
dec
insb
mov
adc
xor
bound
jbe
xor
lcall
pushf
test
out
push
and
sbb
mov
clc
mov
popa
aam
sbb
add
adc
mov
loopne
les
adc
movsb
das
imul
mov
jne
imul
roll
pop
fldl
dec
lea
or
mov
sub
ljmp
pop
clc
and
insl
clc
push
inc
enter
sub
fldz
out
mov
jnp
xchg
ljmp
pop
dec
pop
adc
fsubrp
jns
or
hlt
fs
inc
mov
and
mov
jg
add
cs
lcall
or
ret
pop
cmpsb
push
out
imul
jge
int3
xor
je
add
dec
or
mov
ja
dec
sub
mov
jmp
push
jl
mov
push
mull
call
sbb
pop
jmp
push
push
sub
adc
dec
jp
mov
stc
decb
mov
pop
mov
push
push
imul
jmp
ds
imul
aas
nopl
xchg
push
enter
out
and
adcl
adc
and
sahf
xchg
mov
push
lods
cld
push
inc
rorb
mov
lret
adc
in
sbb
or
popf
xchg
cmpsb
mov
insb
pop
daa
mov
enter
arpl
and
movsb
jbe
ficoml
mov
sahf
fstl
cmp
adc
mov
repnz
and
sub
sahf
out
enter
mov
cmp
inc
daa
lahf
push
icebp
push
fcomps
sbb
sbb
and
movsb
popa
out
lock
add
in
out
lret
lods
add
mov
out
dec
jecxz
jae
int3
enter
sbb
cmp
adc
jno
xor
dec
lahf
inc
adc
push
sub
and
iret
iret
xchg
lret
push
inc
adc
xchg
inc
jbe
sbb
insb
cmp
jns
mov
mov
cmp
je
xchg
pop
jno
pop
or
mov
movsb
sbb
pusha
ja
jno
insb
mov
sbb
fcompl
lock
sub
fsubl
and
adc
in
repnz
cmp
sbb
rcrb
wrmsr
jecxz
mov
cmp
pop
sub
sbb
sbb
aas
pop
or
lods
or
sbbl
pop
or
frstor
cmp
jo
cmpsl
cmp
push
push
pop
xor
push
push
dec
and
push
mov
and
xor
pop
insl
jle
fwait
repz
out
mov
or
iret
repz
sbb
cmp
data16
repz
adcl
repz
out
sahf
out
mov
es
inc
sahf
out
sahf
push
data16
xchg
mov
or
jl
add
in
push
mov
ret
sbb
adc
ret
outsb
jge
dec
mov
data16
movsb
inc
mov
add
push
add
xor
mov
sub
push
outsb
pop
xor
pop
or
jne
andb
adc
xchg
test
push
mov
pop
push
xchg
mov
jge
popa
cs
pop
cmpsl
add
pop
pop
mov
pop
pop
push
sbbl
pop
cwtl
and
sbb
push
push
inc
pop
fmuls
and
sub
xor
and
push
in
shl
cmp
push
sub
lds
sbb
xorl
or
int
xchg
addr16
int
add
push
pop
dec
or
lock
into
daa
push
mov
push
sbb
xchg
nop
sub
pusha
xchg
iret
xchg
nop
shrb
outsb
mov
xchg
add
ss
or
mov
add
fadds
dec
call
add
stos
mov
inc
and
add
pusha
aam
sub
xchg
or
add
xchg
push
add
in
sub
or
sub
add
addr16
sbb
jecxz
mov
jle
pop
sub
mov
addr16
pop
adc
aam
adc
iret
xor
test
cmp
scas
fnstsw
jo
add
adc
sub
aaa
jb
out
in
push
popa
add
test
call
jb
call
add
fisttpll
out
pop
subl
and
push
lods
outsl
in
das
mov
movsl
cmp
xor
push
cmpsl
add
push
or
inc
es
or
inc
pop
pop
leave
mov
pop
pusha
add
mov
stc
mov
push
faddl
pop
shr
sarb
xchg
xor
or
add
data16
or
push
mov
push
nop
out
cmp
push
sub
add
fsubs
push
cmp
and
pop
jb
pop
and
je
adc
ret
cltd
cli
lahf
and
sub
mov
mov
add
lods
ret
mov
push
push
inc
scas
or
cmp
push
movsl
ret
fs
sbb
cs
cmpsb
xor
push
in
in
sahf
xchg
fs
push
add
nop
sbb
loope
mov
mov
insb
xchg
add
hlt
mov
ret
or
sub
cmp
adc
sbb
in
insb
outsl
mov
fs
adc
lock
rclb
add
push
mov
into
aad
lock
push
and
and
mov
in
pop
in
push
add
inc
and
push
jns
sbbl
mov
dec
push
in
or
xchg
sub
je
addr16
inc
repnz
icebp
movsb
lahf
dec
pop
pop
dec
lgdtl
add
jo
in
sbb
adc
push
adc
pop
je
repnz
rorb
or
and
sub
inc
or
outsb
adc
and
ja
inc
or
adc
imul
or
sbb
aam
mov
pusha
sbb
add
cld
adc
push
mov
test
cmpl
add
or
xchg
push
fs
add
mov
pop
mov
adcb
add
add
add
pop
sbb
add
sub
scas
push
fs
add
sbb
xchg
into
push
std
and
adc
aad
jae
jecxz
dec
and
stos
or
loope
jae
xchg
dec
push
cmc
or
movsb
cmp
dec
enter
sahf
add
or
and
jne
sub
aad
pop
jb
call
mov
scas
das
daa
and
push
repnz
or
xor
pop
jo
lods
mov
inc
xor
push
adc
fwait
xor
subb
xchg
xor
mov
js
repnz
xor
adc
aad
inc
addl
js
sahf
mov
adc
and
xchg
mov
add
add
or
or
add
pop
inc
add
mov
test
adc
cs
iret
popf
sub
sbb
adc
adc
cli
adc
or
inc
or
push
cmp
aaa
stos
pop
jne
or
popa
add
sub
mov
scas
mov
adc
stos
and
adc
jno
xor
and
sbbl
jo
rorl
es
xchg
or
out
pushf
icebp
js
imul
lret
add
jb
push
inc
imul
cld
push
mov
cmp
sbb
mov
lods
or
dec
add
mov
in
push
in
sub
mov
push
and
sbb
adc
imul
jns
adc
push
push
cmpb
adcb
je
jnp
mov
sarl
sbb
adc
nop
sub
orb
or
dec
adc
add
addr16
mov
adc
dec
ret
fidivl
cmp
or
inc
insl
xchg
inc
jbe
pop
adc
aam
jmp
xor
jo
dec
push
test
cmp
adc
pop
add
pusha
sbb
fsubs
push
inc
sub
adc
jge
push
push
mov
sbb
mov
ret
ret
mov
sbb
sbb
fs
mov
imul
daa
ret
pop
xor
sbb
insl
rep
mov
jne
fldl
nop
mov
inc
ret
fmull
cmpsb
xor
push
cmpsb
add
push
sbb
adc
adc
mov
jp
add
or
adc
aaa
adc
or
shll
test
fdivl
cwtl
xor
cmp
add
pop
dec
pop
dec
jo
pusha
adc
mov
lret
iret
stos
popa
bound
push
movb
pop
dec
rorb
mov
sbb
arpl
mov
and
mov
mov
xor
mov
sahf
movsl
in
lret
dec
push
jle
cld
cmp
add
inc
pop
add
fdivrl
or
inc
sbb
jl
mov
test
int
in
dec
inc
pop
aas
dec
sub
mov
mov
insl
mov
ss
add
adc
cwtl
mov
ret
adc
push
mov
cmpsl
push
fcompl
mov
pop
adcb
test
pusha
aam
inc
lea
dec
pop
adc
sbb
orb
lret
pop
adc
sub
pop
call
adc
rcrl
movsb
dec
aam
xor
jl
and
push
or
and
out
and
xor
mov
aas
mov
jle
outsb
mov
xor
sub
cmp
mov
mov
sbb
add
inc
jl
or
sbb
popa
std
pop
imul
shll
pop
mov
jg
lock
add
inc
jmp
movb
mov
push
cltd
pop
pop
mov
dec
repnz
in
xor
push
cmc
repnz
inc
fmul
xchg
lock
clc
xchg
lea
orb
jno
loopne
push
out
ret
test
add
pop
rcrl
out
mov
cmp
shr
add
or
dec
or
gs
notb
inc
push
lock
jnp
lahf
lock
hlt
incb
dec
in
sbb
mov
pop
movsb
iret
cmp
mov
pop
sahf
lret
dec
faddl
cmp
daa
cmp
ljmp
notb
adc
or
mov
enter
or
ret
cli
or
xchg
test
je
mov
out
dec
movsl
mov
ja
xchg
rolb
out
lea
outsb
cmp
adc
jno
rorb
mov
fcmovu
cmc
dec
add
lea
xchg
add
push
sub
gs
test
add
or
add
sub
jmp
xchg
in
shrb
and
pop
push
pop
and
mov
push
jl
cmp
push
push
mov
adc
xor
roll
in
movsb
adc
or
notb
push
lods
adc
adc
fstps
das
push
nop
sbbl
das
sbb
sbb
fnstenv
call
jl
pop
in
push
pop
push
jl
imul
sub
imul
xchg
or
mov
mov
jns
xor
inc
lcall
popf
inc
in
push
jl
dec
sub
pop
stc
fs
fadds
pusha
std
sbb
push
sbb
inc
xor
xchg
push
iret
lods
sbb
stos
sub
sbb
pop
xor
nop
push
bound
sbb
imul
sbb
pusha
dec
imul
and
inc
push
ds
dec
jne
and
sbb
mov
out
mov
shrb
fwait
xor
imul
mov
cmp
and
in
popf
xorb
add
in
leave
popf
shll
in
movsb
shll
xor
jns
jle
test
outsl
sub
ljmp
mov
in
sub
dec
fisubs
push
leave
and
pusha
cwtl
dec
pushf
dec
jb
nop
pop
mov
xchg
or
js
leave
and
cmp
jb
fwait
sbb
in
jb
xchg
mov
cltd
je
or
mov
jae
xchg
outsl
repnz
sub
inc
stos
lret
add
push
imul
sub
push
test
sbb
and
aaa
push
in
ds
xor
sbb
imul
aaa
xor
mov
mov
pop
mov
mov
lcall
pop
dec
push
mov
ljmp
out
inc
bound
pop
mov
inc
mov
or
sbb
aam
cs
sub
pop
jmp
mov
inc
addl
pop
jb
loopne
cmpsb
test
repnz
movsl
rcrb
add
mov
gs
out
adc
xchg
xlat
lcall
repnz
cmc
add
enter
push
fisubrl
xchg
add
adc
pop
rolb
xor
imul
ror
ds
xor
xor
and
mov
add
pushf
push
jmp
sbb
adc
nop
dec
jnp
in
push
or
or
add
in
ja
ret
imul
xchg
push
and
scas
nop
pop
mov
inc
out
cmp
push
xadd
xchg
dec
cs
adc
lock
insl
aas
mov
and
cmp
inc
or
pop
inc
xor
lret
es
sub
mov
jp
sub
xchg
fs
js
cltd
and
idivl
mov
pusha
xor
xorb
imul
adc
test
lock
push
mov
adc
jae
sub
fsubrs
sub
ds
or
sub
ss
sub
add
push
xchg
push
sub
add
sbbl
sbb
push
scas
adc
movsb
test
adc
pop
push
dec
xchg
fiadds
and
add
inc
pushf
add
inc
pop
popa
xchg
dec
movsl
add
xor
pop
or
adc
adc
dec
push
in
push
psubsw
jns
sub
hlt
xchg
insb
or
add
and
inc
xchg
push
or
mov
data16
jne
mov
faddl
and
add
push
orb
xor
fimull
ret
sub
stc
out
dec
rolb
test
pop
adc
aas
or
js
push
pop
sub
mov
sub
imul
loop
fistpll
iret
mov
and
ja
inc
pusha
or
pop
xchg
dec
aad
sbb
pop
aaa
test
push
stos
adc
push
jge
sub
mov
add
or
add
cmpsb
clc
js
mov
std
decl
cmc
jb
xor
inc
daa
add
call
scas
movsl
int3
cmp
aam
data16
sbb
sbb
dec
imul
pusha
sub
adc
cmp
hlt
loopne
inc
loopne
aam
pop
adc
push
push
and
xor
or
or
push
test
into
mov
push
or
or
jle
and
andl
or
call
or
mov
or
cmpl
out
adc
pop
adc
pminub
rcrb
jmp
cmp
loopne
push
decb
imul
cli
jp
sbb
out
es
add
pop
adc
cmp
jnp
cmp
mov
lods
pop
adc
jne
iret
push
es
lea
in
inc
aam
or
aad
addl
xchg
dec
call
pavgw
lcall
add
test
adc
aam
mov
xorb
or
xchg
pop
sub
jmp
cs
mov
pop
nop
ret
cmp
stc
or
cmc
clc
push
pop
xor
push
push
pushl
push
mov
dec
test
dec
sbb
push
lea
sbb
mov
xchg
adc
mov
or
push
pop
fsubrs
iret
or
ljmp
fcmovne
fmulp
add
cmp
xchg
or
sbbl
jmp
add
repz
xchg
repz
dec
inc
je
or
dec
push
lret
pop
mov
imul
adc
cmp
xchg
mov
rol
add
sti
push
nop
dec
and
inc
cmp
mov
loopne
pop
lahf
nop
add
jmp
ds
or
call
push
xchg
enter
sub
xor
xor
sub
mov
rolb
sub
or
cmp
clc
xor
mov
and
push
push
fwait
sub
inc
jne
ja
cltd
cmp
fsubr
pop
pop
mov
mov
mov
xchg
out
cmp
adc
cmp
shrb
pop
mov
aam
cmp
push
cmp
scas
dec
cmp
cmp
in
cmp
es
sub
scas
pop
sbb
adc
cmp
sub
sbb
sahf
call
data16
push
ss
int
inc
dec
or
pop
leave
cmp
inc
ret
pop
mov
ficompl
add
push
fistl
imul
inc
xlat
repnz
testb
and
push
or
sbb
mov
jle
sbb
mov
aas
je
jl
cmp
xor
sub
cmp
push
rsqrtps
fwait
xchg
mulb
imull
addl
sub
or
sub
pop
mov
lods
add
xor
jl
add
jns
add
cld
push
adc
sti
shrl
inc
mov
or
dec
shrb
sbb
test
sub
je
mov
int3
cmpsb
roll
inc
iret
add
test
add
in
in
pushw
lock
push
pop
add
loopne
sbb
add
jb
and
pop
dec
add
push
fwait
push
test
mov
mov
inc
cwtl
xor
scas
dec
ja
lahf
adc
mulb
movsb
sub
xchg
ret
cmp
xorb
fstp
sbb
pop
jae
repnz
or
mov
push
pop
jle
xchg
pop
fcoms
sub
inc
cmp
xchg
push
jo
mov
cli
rcll
jnp
or
addr16
jl
mov
jg
push
mov
sti
in
mov
xor
mov
inc
div
scas
push
movsl
inc
add
orl
test
inc
daa
adc
stos
daa
adc
pop
icebp
aam
outsb
push
mov
in
xor
and
xchg
push
cs
cwtl
push
cmpsl
jae
mov
pop
aam
push
push
adc
pop
xchg
cli
pop
orl
and
xor
add
lods
pop
in
ret
sub
pop
push
int
lock
repnz
inc
dec
jae
popa
dec
adc
pop
ret
adc
es
cmpb
push
xlat
xchg
nop
shl
inc
sahf
stc
inc
and
mov
or
pop
daa
push
loope
mov
cwtl
jecxz
stos
mov
ljmp
fwait
out
mov
insl
mull
mov
jbe
mov
in
pop
xor
or
popf
xor
in
loope
sub
dec
jo
js
cmp
or
shlb
sbb
adc
add
jo
daa
inc
add
dec
pop
mov
xlat
xchg
or
fistpll
lock
add
xor
mov
jp
mov
push
push
jbe
lods
add
mov
push
push
lods
mov
mov
rcl
out
adc
ljmp
jne
mov
push
add
cmp
fldl
or
mov
mov
xchg
push
inc
inc
loope
cmpsl
jns
or
mov
xchg
xchg
cli
push
push
sbb
pop
push
cmp
adc
pushl
cmpl
jne
inc
cmp
jb
dec
es
mov
inc
ljmp
push
inc
aam
sub
test
ds
xor
jae
pusha
movsb
fcoml
jge
call
ja
pop
mov
add
jl
loopne
jmp
popa
pop
sbb
dec
mov
sub
or
push
insl
hlt
xchg
push
faddl
sahf
pusha
adc
xchg
inc
cmp
push
or
xchg
lock
cli
and
adc
pop
pop
and
cmp
lahf
xor
lea
scas
xchg
pop
cmc
sub
dec
jae
and
dec
lock
je
dec
push
mov
push
aaa
add
or
and
mov
mov
jmp
add
xchg
mov
lock
mov
cmp
mov
pusha
dec
test
out
mov
aaa
push
divl
xchg
mov
aam
call
mov
dec
adcb
add
dec
pop
sub
adc
clc
push
xchg
pop
lods
push
mov
pop
lea
inc
xchg
call
dec
pusha
or
les
xchg
mov
rorl
cmp
sbb
in
xor
sbb
or
inc
rolb
push
xor
adc
push
into
sar
test
jnp
rclb
data16
pop
push
sub
inc
mov
or
addr16
push
pop
imul
xor
or
nop
mov
xor
cmp
andl
adc
xor
ret
inc
xor
add
pmullw
ret
std
mov
lcall
mov
xchg
iret
push
bound
sbb
jo
or
or
xchg
adc
jbe
fs
push
push
loop
stc
and
psubq
fs
pop
cmp
lahf
pop
inc
fldenv
insl
popa
mulb
and
arpl
push
dec
or
leave
dec
jmp
cmc
sbb
fnstsw
aas
std
inc
je
fs
push
xor
inc
pop
shrl
inc
mov
jo
dec
and
mov
ret
or
jg
nop
push
jmp
daa
cs
and
dec
jb
stos
dec
inc
and
xchg
lock
mov
xor
mov
mov
adc
out
sub
or
mov
mov
add
xchg
shl
jns
pusha
add
inc
out
cmp
mov
test
cmc
mov
or
orl
add
mov
scas
imul
cmpsl
and
mov
fwait
add
cmp
movsl
push
data16
dec
dec
sbb
or
loop
jg
xchg
mov
xchg
dec
and
add
arpl
or
loopne
jp
fs
das
mov
iret
push
mov
pop
movsbl
mov
xchg
mov
loop
add
xorb
inc
sub
idivl
dec
and
ss
movsb
fistps
mov
stos
adc
testb
adc
sub
adcl
test
inc
lea
fs
mov
sub
mov
or
jo
lret
out
and
sbb
and
jecxz
mov
and
aas
inc
xor
cmovs
adc
cmp
repnz
xchg
mov
cltd
mov
dec
es
adc
xor
es
in
jb
push
add
insb
adc
or
repnz
mov
xchg
mov
xlat
rcrl
add
mov
mov
loope
inc
cwtl
or
shll
adc
out
or
xchg
mov
jp
sbb
sub
jo
xlat
repz
pop
loop
adc
jl
dec
xor
push
dec
sbb
stos
add
sbb
insl
mov
push
shl
xchg
add
adc
xlat
push
lock
xor
mov
lret
sbb
cmp
scas
inc
add
push
inc
sbb
jno
xchg
andl
loope
push
sbb
jae
popa
mov
and
insb
dec
push
stos
jo
ss
push
imul
mov
rcll
sbb
xor
mov
cmpsb
cmpsl
xor
adc
xchg
call
addl
insb
jmp
add
and
scas
lret
or
add
bound
or
sarl
xchg
call
imul
inc
sbb
stc
push
xor
adc
cmp
mov
call
std
and
loopne
clc
adc
dec
fldt
movsb
sbb
bound
imul
inc
push
iret
cmpsl
and
test
and
mov
arpl
sub
pop
ret
adc
adcb
shll
jmp
mov
aaa
pop
push
imul
or
cmpsb
sbb
push
push
lods
push
es
jmp
lds
lds
push
sub
jbe
mov
push
das
icebp
or
rcll
iret
fwait
and
sub
and
push
add
out
enter
inc
sbb
sbb
or
xlat
in
jl
cld
sub
sbb
stos
repz
in
scas
add
sub
sub
mov
pusha
sub
sti
add
sub
fcoms
push
sbb
pop
mov
scas
leave
pop
and
pop
dec
mov
loop
xchg
subb
add
scas
ret
pop
xor
sbb
xchg
jno
dec
movsb
test
pop
add
inc
repnz
and
pop
adc
stos
movsl
mov
mov
jge
inc
insl
dec
add
or
cmp
or
roll
add
push
rcrb
mov
or
lock
and
xor
pop
addl
push
cwtl
xchg
add
pop
sbb
and
mov
push
adc
add
adcl
mov
jecxz
je
fwait
push
pop
or
cmpsl
lret
push
adc
push
ret
dec
insl
inc
push
push
in
jne
and
push
sbb
fildll
push
push
sahf
clc
mov
push
sbb
pop
cwtl
test
dec
mulb
dec
inc
mov
hlt
cmp
xchg
lock
mov
add
sbb
sub
xor
xchg
sarl
daa
jp
fs
mov
leave
inc
add
or
cld
add
cmc
inc
xlat
mov
pop
sbbb
scas
das
fstpl
xlat
xchg
ficoms
pop
mov
add
mov
les
mov
push
and
insb
notl
add
and
stos
mov
decb
push
add
add
inc
aam
sarb
std
xor
mov
mov
and
push
dec
cmpsb
adc
outsl
jnp
out
jbe
test
inc
cmp
lock
pop
pop
pop
sbb
fsts
andb
or
mov
push
or
cmp
shl
and
mov
adc
mov
xor
jmp
cmp
nop
push
arpl
pop
rorb
cmp
jl
roll
or
pop
cmp
je
test
in
lock
sbb
iret
or
mov
mov
add
mov
mov
dec
and
out
add
pop
psubw
fidivs
movsl
jno
and
or
and
jmp
adc
xchg
cld
daa
movsb
add
cwtl
jns
addb
sti
aad
or
inc
movsl
push
pop
cmpl
xor
movsb
adc
nop
push
into
xchg
rclb
inc
cmp
push
outsb
clc
clc
jb
jmp
or
testl
xor
incb
cmp
or
sub
xchg
jno
sub
push
jne
mov
subb
js
pop
inc
and
loopne
or
add
mov
xor
pop
jae
mov
add
inc
inc
movl
addb
or
bound
pop
iret
push
sbb
pop
mov
add
call
data16
lock
loopne
dec
push
fwait
or
fldcw
repnz
dec
test
xchg
insb
jae
xchg
ss
es
add
push
sub
andl
mov
and
cld
ja
sbb
scas
mov
jo
inc
fmuls
test
and
fs
sbb
push
or
decb
popf
push
daa
adc
nop
pop
inc
insl
adc
jnp
stos
es
adc
dec
mov
inc
ret
xor
add
sbb
movsb
popf
cmpsl
and
push
inc
dec
rcrl
xorb
mov
and
ret
dec
lods
add
mov
xor
call
mov
push
push
sahf
pop
in
or
add
lods
add
push
xor
push
hlt
dec
pop
add
jns
repz
add
pusha
inc
inc
jns
fnstsw
sbb
sub
push
sub
das
mov
mov
add
mov
jo
jnp
xchg
pop
dec
popa
divb
pusha
or
xchg
hlt
add
sbb
mov
inc
push
or
stc
dec
mov
mov
test
les
popf
out
mov
adc
popa
lock
fbstp
mov
xchg
jge
dec
sarl
jo
or
adc
adc
add
mov
dec
sbb
mov
hlt
xchg
mov
or
cmp
jb
xchg
pushf
inc
mov
sarl
ret
jmp
pop
mov
sbb
jl
fadds
jmp
xchg
cmp
cmc
test
adc
mov
sub
sbb
jmp
cmpl
mov
xor
aaa
ret
sti
inc
jmp
pop
xchg
sbbl
aaa
or
push
cmp
xor
add
cmpl
lds
divb
adc
xchg
dec
jle
dec
ljmp
add
popa
fs
lea
mov
push
gs
repz
lock
inc
jmp
aam
daa
add
int
rolb
add
outsb
adc
push
or
xchg
mov
inc
int
inc
sub
aaa
and
sbb
sarb
push
scas
test
sbb
add
pop
sbb
in
add
ret
mov
lods
add
daa
push
aas
les
pop
pop
xchg
cmpb
adc
sbb
pop
repz
rcrb
inc
and
and
and
and
add
mov
adc
imul
inc
and
mov
or
mov
adc
inc
rclb
push
pop
dec
leave
in
sti
xor
stc
lock
les
or
xor
divl
xchg
or
and
or
les
adc
jp
cmp
mov
pop
and
dec
clc
loopne
enter
ret
mov
fldt
mov
pop
push
ret
add
int3
movl
imul
sbb
inc
dec
int3
out
mov
js
or
popf
sub
dec
push
and
or
sbb
xor
pusha
cmp
jae
sub
xchg
das
stc
and
jae
add
fs
fsubs
ror
add
xor
sahf
mov
popf
or
movsb
inc
rcll
push
outsl
adc
ja
jnp
data16
setge
jge
fdivrl
lahf
je
insl
add
lret
dec
dec
xor
aam
sbb
xchg
xor
cmpsl
rcll
lds
mov
push
push
xor
rolb
nop
je
inc
test
adc
push
enter
push
inc
and
push
mov
nop
shll
or
sub
pop
xchg
jmp
mov
lods
xchg
rorl
xchg
movsl
inc
dec
push
inc
or
sbb
mov
push
test
or
in
in
jmp
fwait
dec
movsl
ljmp
push
lods
fdivl
dec
mov
mov
shl
mov
inc
push
and
jl
aad
pop
imul
add
dec
ret
or
sub
shlb
mov
mov
sbb
roll
scas
outsb
add
mov
lea
and
movb
mov
adc
xchg
pop
push
es
and
stc
iret
xchg
mov
lea
lahf
sbb
mov
dec
mov
imul
pop
dec
or
mov
sar
add
punpckhwd
loopne
xorl
les
pushf
or
sahf
xchg
add
enter
iret
jbe
mov
mov
lret
lea
mov
in
insl
pusha
pusha
add
lahf
add
loope
out
mov
sub
push
jnp
add
add
dec
mov
mov
pop
push
aam
or
sarl
fldl
cmp
push
lret
iret
pop
ffreep
jne
push
aad
hlt
jge
fsubr
push
decl
into
mov
mov
stos
or
and
sub
psrlq
jle
scas
jmp
mov
sub
sbb
movsb
popa
mov
movsb
sbb
das
or
push
cmp
sub
push
inc
adcb
inc
outsb
add
movl
and
adc
cltd
les
jecxz
sub
and
mov
pop
push
and
fnstsw
xchg
lcall
pop
shlb
popf
call
xchg
or
cltd
movsb
fucomi
mov
and
add
lods
push
enter
les
jge
push
rclb
rcrb
outsl
sub
sub
push
and
and
dec
idivb
adc
add
call
push
add
mov
shr
mov
jnp
xor
push
sub
inc
push
mov
push
test
leave
sbb
pusha
xor
add
lahf
test
or
fildl
jmp
daa
cmp
adc
add
leave
adcl
jb
mov
pop
mov
adc
mov
les
jbe
jecxz
xorb
adc
aaa
inc
scas
and
dec
hlt
jne
mov
or
push
add
lret
adc
lock
mov
cltd
fldt
and
cmp
xor
loope
adc
xor
or
test
or
inc
pop
ret
pop
ret
lods
dec
mov
test
cmp
adc
rclb
add
and
and
loope
sbb
mov
jnp
mov
repz
mov
pop
mov
popf
popf
das
pop
cli
push
push
xor
mov
filds
rclb
or
sbb
clc
pop
xchg
movsl
out
cs
mov
mov
enter
ret
andl
ret
xchg
jle
orb
arpl
mov
xchg
adc
outsl
ss
fstl
lods
dec
shlb
push
xor
adc
sahf
xchg
mov
jne
sub
aas
jg
cld
loopne
sub
or
cs
pop
add
xor
addr16
orl
xchg
xchg
test
lea
sbb
mov
pop
jne
adc
mov
add
daa
mov
inc
lods
sbb
out
mov
adc
gs
stos
or
push
lock
push
mov
add
sbb
and
cmove
mov
pushf
mov
mov
inc
mov
ja
loop
push
roll
mov
adc
stos
add
add
and
neg
xchg
jb
dec
mov
cmp
out
xchg
dec
mov
mov
in
sbb
loope
inc
and
in
xchg
pop
inc
popf
pusha
xor
adc
dec
cmp
adc
or
xor
stos
adc
xor
mov
ret
cmpsl
test
push
xor
stc
mov
mov
inc
lea
lret
call
xchg
push
add
sub
pop
cs
and
mov
mov
neg
pop
sbb
pop
inc
bound
mov
sub
arpl
sub
inc
addr16
jp
push
js
movsl
pusha
cld
add
xor
inc
jmp
sub
jae
pusha
mov
jnp
ljmp
shll
inc
push
or
mov
sub
adc
incb
push
mov
sti
jge
mov
iret
xor
or
dec
popa
gs
push
inc
xchg
jge
gs
push
lcall
aaa
mov
xchg
pop
or
and
cmp
and
roll
xlat
dec
push
push
sub
jmp
movsb
js
xchg
es
xlat
mov
mov
jle
add
mov
mov
xor
and
push
sbb
js
add
ja
mov
adc
mov
ss
sbb
test
adc
pop
clc
jne
scas
in
mov
push
mov
jge
in
xchg
xor
and
mov
mov
daa
test
enter
rcrl
push
and
arpl
stos
jo
sub
pop
sub
mov
push
into
in
mov
fcoms
pushf
pop
jg
dec
int3
sbb
push
push
ja
insl
sahf
sub
inc
enter
iret
lret
add
cmp
aad
dec
neg
mov
cmpsl
dec
clc
scas
sarb
or
mov
inc
das
orb
push
imul
mov
jmp
mov
cmp
shr
fcmovb
mov
sub
popa
int3
test
jae
mov
jecxz
int3
or
adc
sub
or
inc
orb
in
add
loope
dec
andl
adc
inc
xlat
jne
jne
xor
pop
add
push
sub
out
popf
outsb
or
and
les
push
fldl
pusha
in
lea
push
mov
mov
sbb
push
xchg
popf
popa
mov
outsl
add
inc
aam
ret
push
and
lcall
sbb
add
xor
pop
jae
mov
fwait
pop
add
cmp
shlb
jp
mov
mov
aas
push
mov
push
std
pop
imul
push
cmp
jbe
lock
mov
and
loopne
mov
mov
in
mov
mov
pushf
cmp
js
xchg
dec
stos
mov
enter
js
jg
dec
push
and
loope
push
out
testl
dec
add
int
in
aam
push
decb
adc
adc
cmp
nop
insl
push
jl
cmp
mov
adc
lds
xor
push
jnp
cli
sarb
cmp
repz
and
mov
into
movsl
mov
sub
or
sub
add
add
lret
cmpsl
xor
sbb
adc
dec
jg
lahf
in
add
add
ja
lahf
sbb
je
push
scas
out
or
stos
inc
cmp
or
mov
out
jo
loop
hlt
or
cmp
xchg
andl
aad
fisttpll
stc
inc
xchg
xlat
lock
jl
mov
mov
push
lock
cmp
repnz
das
or
movsl
mov
add
or
pop
dec
mov
pop
mov
movsl
movsw
push
sbb
sbb
movsb
mov
pusha
sub
or
mov
shr
mov
jg
mov
inc
mov
adc
movb
dec
lea
cmpb
cmp
xor
in
push
and
sub
sbb
add
mov
xor
imul
add
jb
and
repnz
cld
je
push
push
scas
lret
and
sbb
movsb
xor
mov
push
hlt
jne
mov
sub
dec
mov
or
das
cmpsl
cs
push
xchg
jne
jae
jge
add
aaa
sub
cmp
in
je
sub
jbe
fwait
jae
cmp
or
push
cmpsl
ret
push
cmp
xlat
sbb
shll
inc
dec
outsl
imul
dec
fs
pop
int
sbb
push
js
icebp
pusha
pop
inc
sbb
icebp
sbb
lcall
dec
test
add
scas
cmp
mov
add
lcall
and
dec
cltd
fs
or
and
lock
or
cmpsl
icebp
adc
in
movsb
mov
xchg
mov
ficoml
push
push
add
xchg
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
int
int
or
jmp
and
pop
ja
mov
push
lds
add
add
sbb
mov
cmp
ret
lcall
and
xchg
lahf
cmpsl
iret
repz
scas
mov
iret
xlat
cmp
repz
loope
jmp
imul
incl
or
jns
out
adc
sbb
sahf
daa
sub
cmp
sahf
out
inc
dec
dec
push
pop
fnstcw
sub
add
and
or
or
push
movups
mov
adc
sbb
sbb
push
pop
and
mov
and
or
inc
push
addb
push
jge
stos
dec
adc
push
jg
jmp
inc
and
les
push
cwtl
mov
call
push
ja
sub
xchg
push
cli
sub
lock
mov
ffreep
xchg
add
mov
cmp
aam
push
dec
jmp
aad
cmp
inc
xlat
mov
pop
push
mov
jp
dec
cmpb
dec
dec
insb
mov
or
or
xor
sbb
add
adc
adc
push
cmp
lods
xor
iret
out
add
or
push
add
sub
and
push
push
lods
xchg
cld
mov
sub
fstp
lahf
add
add
test
add
and
shr
int
pop
les
shlb
mov
filds
pop
fs
add
dec
mov
pop
filds
xor
and
push
xchg
aaa
or
ds
js
ret
mov
inc
pop
xchg
adc
out
mov
mov
push
test
xorl
pop
fld
sbb
pop
push
sub
js
shl
popa
pop
add
inc
mov
xchg
fistpl
push
and
jnp
inc
push
ss
aas
lods
outsb
not
sbbl
test
mov
test
notl
push
pop
loopne
or
mov
std
and
jne
ljmpw
xchg
pop
je
pop
or
add
sbb
or
mov
fbstp
imul
fsubs
movsb
mov
cmpsl
roll
clc
imul
mov
mov
sbb
sbb
imul
lahf
sub
shrd
pop
xchg
cmp
jmp
insb
or
popa
inc
clc
mov
and
xor
xor
xchg
lock
sbb
push
jbe
lock
push
inc
rorl
clc
adc
cmp
sub
or
add
mov
mov
inc
idivl
in
inc
or
mov
push
mov
sbb
pop
cmpsl
and
ret
adc
mov
inc
enter
test
shll
push
ss
rorb
push
cs
push
inc
fists
xchg
inc
fdivs
jne
mov
pop
push
push
sub
pusha
popf
mov
add
adc
pushf
stos
sub
std
cmp
je
xchg
cmp
inc
push
push
shlb
lock
adcl
cmp
ret
repz
bound
inc
pop
fiaddl
or
in
cmpsb
sbb
cmp
sbb
aaa
std
cmpb
xchg
mov
xchg
mov
loopne
les
cltd
jmp
shl
push
nop
add
push
dec
out
sbb
add
mov
iret
mov
icebp
jns
mov
fcompl
int3
sbb
in
rcrb
int3
enter
cwtl
test
add
sbb
dec
or
add
mov
and
faddl
push
cmpsb
add
xor
adc
mov
in
add
sbb
inc
js
arpl
cmp
jne
outsb
ficompl
and
xchg
mov
add
lretw
or
and
dec
int3
mov
add
cmp
inc
sub
or
stos
std
cmp
aam
movsl
int
add
stos
or
add
nop
push
pop
add
add
inc
cmp
sbbb
mov
push
mov
negb
lock
enter
loopne
rclb
and
cmp
addl
sahf
out
pushf
and
enter
cmp
inc
or
test
add
sti
ret
testl
xor
insl
cmpb
mov
mov
push
add
jp
rolb
fwait
xchg
pop
push
cltd
add
fucomp
push
or
pop
push
push
mov
cmp
mov
ret
std
mov
stos
movsb
sub
or
pushl
push
outsl
outsb
xor
gs
imul
inc
pop
push
pop
fcomi
or
lahf
pop
testl
stc
loope
sbb
pop
mov
pusha
sub
pop
and
jno
cs
lods
fwait
mov
add
and
int
add
push
cmp
or
nop
push
push
sbb
mov
mov
je
mov
cmp
subl
roll
sahf
xor
add
pusha
test
imul
stos
adc
loope
ret
push
adcb
dec
add
jmp
iret
pop
jg
dec
cmp
add
test
fiaddl
add
loopne
outsb
push
sub
in
add
addr16
lods
aas
push
popf
lahf
sub
and
aad
pop
ret
inc
xor
fcomps
add
rorb
sbb
cmpsl
in
sub
inc
xor
or
inc
hlt
push
pop
pop
je
lret
add
dec
mov
in
call
pop
jecxz
xchg
mov
in
jmp
ret
es
mov
ret
call
sbbb
mov
inc
sarb
or
or
sub
add
jnp
push
pop
or
xor
mov
loope
jb
mov
or
jne
inc
std
outsl
pop
movsb
jmp
cmp
je
ficoms
xchg
adc
fisubl
jnp
inc
filds
adc
dec
dec
mov
fdivrp
out
addl
jge
in
mov
and
aas
sbb
call
push
stos
xor
mov
xchg
push
and
out
rcl
inc
sub
fidivrl
add
pop
or
mov
fiadds
cmp
and
cmp
xchg
push
pop
or
xchg
push
int
cwtl
jl
sbb
pop
jae
dec
xor
jl
xorl
orl
sbb
sbb
faddl
push
and
daa
fbstp
sub
jl
pop
xchg
or
adcl
fsubs
mov
and
inc
in
push
add
orb
cmpb
inc
xor
or
pop
or
inc
out
sub
iret
mul
add
inc
mov
pusha
or
pop
lcall
and
fs
cmp
sbb
or
and
outsl
cmp
and
xor
sub
in
cs
enter
adc
pop
lcall
dec
pop
rolb
jmp
std
or
cmp
mov
jo
push
movb
add
imul
mov
or
mov
xor
cmp
jle
mov
xchg
inc
aaa
mov
ljmp
sti
out
pop
mov
js
lea
cmp
jae
sub
push
jp
aaa
push
inc
push
test
loope
lock
roll
incl
pusha
loopne
lret
push
pop
clc
movsbl
mov
pop
pop
test
jo
jbe
push
mov
and
std
or
fcmovnbe
adc
sub
inc
inc
or
imull
sahf
mov
adcb
xor
out
inc
add
dec
jo
enter
adc
js
dec
ja
push
jl
push
sbb
lock
nop
sub
icebp
cwtl
sbb
js
lret
loopne
mov
enter
and
lods
mov
je
and
and
mov
mov
lret
rcrb
enter
dec
gs
fdivr
or
mov
int
and
jle
push
push
in
xor
mov
cmove
and
insb
setge
jge
and
insl
sbb
ss
lea
push
mov
test
leave
in
sets
ret
and
xchg
je
jl
and
fdivr
and
jne
incl
cmp
jl
sub
leave
xor
push
lea
adc
cmp
je
dec
xor
lea
out
inc
push
or
sbbl
out
das
lock
dec
sub
dec
fdivr
jmp
and
inc
sti
lods
sub
inc
pop
fsubrs
jmp
jne
imull
jnp
stos
xchg
lods
push
pop
jl
jmp
out
push
inc
jge
aas
lods
adc
setne
mov
jbe
sbb
call
mov
je
and
into
outsb
or
jge
and
insl
lret
aad
call
rorl
js
lock
dec
int3
sub
js
jp
mov
das
sub
mov
xchg
insb
je
js
or
mov
sbb
test
fwait
inc
pop
xor
rorb
je
cltd
mov
and
cmp
cmpsb
or
dec
xor
cs
push
cmpsb
hlt
lods
pop
cmp
add
daa
push
into
cli
movsl
int3
loop
adc
repnz
es
lea
push
aas
hlt
ffreep
pop
push
fistpl
sbb
mov
dec
pop
add
enter
sbb
insb
mov
hlt
mov
imul
pop
pop
sub
push
adc
es
xchg
call
adc
adc
je
cmp
jne
push
inc
pop
inc
scas
addb
push
inc
push
sub
aam
xchg
pusha
sbb
push
addb
cmp
mov
xor
jo
add
mov
adc
pop
or
rorb
and
xchg
xorl
jg
sbb
xchg
adc
ret
pop
cld
ja
xchg
xor
lock
cmp
insb
dec
mov
call
and
shlb
push
daa
adc
and
std
int3
in
add
push
sub
mov
test
mov
imul
or
xor
or
scas
or
cmp
stos
jnp
sti
cmp
cmpsl
ss
les
clc
shrb
int
call
pop
cmp
je
sub
jmp
adc
xor
sub
mov
mov
push
dec
hlt
xchg
clc
adc
add
bound
or
fmuls
scas
add
mov
sub
push
mov
xor
bound
jg
inc
push
dec
loopne
rorb
inc
popa
in
popa
mov
sub
xchg
cmp
stos
push
push
pop
je
mov
neg
cmp
jo
sarb
lods
pushf
mov
inc
pop
xor
mov
cmp
pop
lods
sub
or
and
sbb
push
jmp
or
pop
js
push
pushw
rorl
inc
int
or
jmp
js
and
inc
repz
rorl
outsl
lea
jge
push
fsubrs
push
or
dec
xchg
pop
insb
inc
into
pop
push
push
dec
pop
lea
add
or
sbb
mov
cmp
movsb
aad
js
fsubr
insb
xchg
int
or
dec
jo
ja
sti
dec
mov
testl
lds
or
lods
aas
into
xchg
fiadds
sbb
push
testl
inc
lods
loop
adc
add
inc
add
nop
xor
add
push
jno
das
push
add
adc
mov
lock
in
andl
push
and
dec
popl
movsl
jo
paddb
jne
sbb
lods
sbb
mov
inc
jp
jns
inc
lcall
or
fildll
dec
or
adc
add
lcall
in
add
gs
mov
sbb
fmull
sbb
out
jbe
mov
ficoml
cmp
stc
adc
mov
push
inc
sub
sub
pop
mov
les
push
icebp
jmp
int3
push
sub
shlb
or
iret
cmp
inc
or
dec
mov
aam
hlt
loopne
jmp
insl
je
add
fldl
add
ret
mov
and
jne
xchg
push
fwait
jge
xchg
mov
add
popa
rcrb
mov
xchg
cmpl
pop
test
push
mov
fcom
inc
sub
push
inc
mov
ljmp
inc
ret
in
aaa
pusha
cmp
pop
call
jns
mov
dec
add
movb
clc
inc
dec
aas
dec
cmpsb
adc
xchg
icebp
subl
test
inc
mov
rcrl
push
sti
mov
fdivl
es
ja
roll
cmpsl
sub
cmp
jmp
inc
and
inc
and
pusha
mov
imul
call
and
inc
xor
mov
adc
sub
cmp
and
pop
daa
mov
imul
mov
xor
push
in
push
jo
mov
mov
clc
lods
jge
mov
and
hlt
adc
mov
pop
mov
test
pop
jns
fucomi
push
subl
dec
add
lds
dec
inc
sbb
inc
and
ret
jl
jno
push
add
push
jnp
push
scas
adc
scas
sbb
test
mov
add
in
push
aam
aas
addb
sbb
loope
imul
pop
xor
cltd
inc
cwtl
mov
inc
or
mov
filds
adc
fldz
fcomp
fnstsw
pop
sbbl
fnsave
pop
fsubr
pop
fisubs
push
insb
inc
pop
leave
cmp
adc
mov
inc
test
add
or
test
pop
mov
sbb
sub
dec
sbb
or
xor
lock
dec
test
add
mov
sub
sbb
fstl
inc
sub
jmp
add
in
inc
or
pop
pop
into
fadds
outsl
imul
fisttpll
mov
icebp
popa
fwait
mov
jmp
push
mov
test
sub
xchg
pop
push
jp
cwtl
jmp
sarl
jmp
cmp
pop
or
ss
cli
cld
insl
loop
pop
subl
push
rorl
push
into
adc
or
iret
outsb
pop
mov
imul
add
popf
lea
add
sub
inc
jmp
push
and
mov
mov
in
loop
fimuls
xor
cmpsl
push
enter
lods
xor
loopne
mov
test
sbb
lahf
push
leave
or
mov
jno
cmp
mov
xchg
fisubrl
cltd
pop
call
push
jne
cli
call
add
xchg
mov
aad
xor
test
jmp
pop
rcrl
aam
mov
push
add
jnp
xor
pop
adc
adc
sub
dec
or
cmp
add
add
loop
xor
add
sub
jne
fstp
sbbb
pop
sub
sahf
and
xchg
fndisi(8087
sbb
adc
cwtl
sub
adc
pop
dec
and
into
push
or
inc
fisubl
aas
xchg
cmp
sub
and
xchg
add
jo
and
push
ja
cli
sbb
arpl
push
adc
leave
sti
sub
icebp
adc
ss
addr16
imul
add
sbb
push
push
loop
fdivr
inc
sar
jb
or
aaa
add
add
push
add
jmp
cmp
and
cld
push
jns
sbb
jb
push
cmpsb
in
pop
or
dec
pop
jb
cmp
rolb
pusha
test
daa
cmp
sti
lock
cwtl
pusha
inc
ret
pusha
adc
dec
mov
dec
ss
inc
or
mull
push
pusha
sbb
imul
lods
sbb
call
pusha
imul
push
stos
mov
or
mov
push
pop
and
je
pusha
mov
xchg
in
jge
or
pop
add
push
loope
test
pop
mov
sbb
push
or
dec
sbb
cwtl
cmpl
adcl
push
enter
and
pop
jge
inc
popa
sub
inc
and
pop
stos
loope
lea
sete
xchg
push
gs
shrb
test
es
lods
pop
femms
sarl
pop
cmpsl
jge
cmp
jne
js
mov
scas
xchg
mov
inc
loopne
lods
adc
mov
jae
cmp
sahf
adc
in
cmp
inc
sahf
ret
jge
shrb
and
add
shrb
inc
lahf
mov
repz
aam
xchg
or
je
xor
push
jmp
cmp
call
or
into
cmp
in
cmpsb
adc
mov
xor
loope
outsb
xor
dec
xchg
push
or
pop
inc
popf
sub
aam
add
or
add
fcomp
and
push
popa
add
cmp
pop
add
inc
loope
jg
xchg
movl
repz
or
or
xor
jb
lds
jle
out
jae
push
xchg
outsb
popa
insb
lds
jbe
push
dec
jp
or
dec
push
push
pop
jb
leave
andl
jl
jl
es
inc
add
aam
bound
cmp
push
push
push
jp
cmp
xchg
or
loop
in
test
sti
mov
push
cmp
lret
sbb
aad
or
xor
dec
push
mov
mov
sub
pop
cli
cmp
popa
lods
imulb
inc
inc
stos
mov
pop
push
push
pop
jno
sbb
pop
insl
mov
repnz
call
lods
sub
or
xchg
push
dec
inc
scas
cmpsb
jg
dec
xor
loopne
es
pop
push
push
push
xchg
mov
hlt
inc
stos
enter
mov
push
mov
jecxz
and
cwtl
cli
push
jno
mov
imul
push
pop
mov
subl
mov
es
add
in
aad
popa
sub
inc
and
fisubrs
test
push
adc
aas
ds
insl
popa
and
adc
lods
add
xor
push
ljmp
push
loopne
loopne
stos
lods
mov
sub
jno
movsb
sub
mov
jb
and
xor
popa
and
test
sar
and
pop
cmp
pop
mov
test
ljmp
scas
dec
xchg
jno
push
sbb
pop
xor
pop
dec
scas
xor
mov
cmpsb
icebp
mov
mov
mov
sti
data16
bound
push
leave
mov
sbb
adc
fcoms
lret
adc
in
loop
adc
in
sub
notl
or
or
or
and
push
mov
insb
test
adc
popa
insb
je
jne
or
cmp
mov
dec
ret
sub
add
cmp
cmp
mov
add
inc
mov
adc
lret
jbe
xchg
add
push
sub
pop
mov
add
inc
adc
mov
xchg
lock
loopne
mov
daa
mov
movsb
or
mov
jge
push
push
dec
push
and
and
pusha
mov
arpl
mov
je
xor
insb
mov
gs
or
lock
daa
sti
push
push
and
add
pop
inc
push
data16
movsb
fcomip
push
push
je
or
xchg
icebp
jmp
push
loop
hlt
add
lock
cmc
add
sti
test
cwtl
sub
xor
movsb
mov
cli
pop
rcrl
jge
add
inc
pop
insb
imul
mov
cmpsl
dec
sub
add
sbb
stc
lea
add
fs
inc
and
or
sub
movsb
xchg
push
xor
pop
ss
dec
sub
inc
add
push
add
gs
sbbb
mov
inc
inc
adcl
adc
or
or
jae
or
popa
dec
and
mov
jbe
push
inc
rclb
mov
dec
mov
add
loop
xor
xlat
xchg
push
arpl
xchg
stc
insb
inc
dec
lods
push
daa
xor
pop
popa
mov
push
out
pop
adc
sbb
aam
add
es
mov
sub
mov
or
repnz
fiaddl
pushl
daa
movsb
sbbb
sbb
and
lods
push
in
push
movsl
and
sbb
add
in
shrl
pop
or
adc
xor
pop
ja
or
and
or
jp
clc
and
add
or
jp
sbb
mov
dec
loopne
or
inc
movq
lock
push
cli
push
pop
imul
cmpsl
dec
mov
jge
push
fdiv
push
aaa
xor
imulb
stos
dec
ja
or
loopne
fsubl
outsb
mov
loop
sbb
incl
int
lds
ret
push
jae
daa
and
das
jne
jge
ljmp
scas
mov
imul
mov
dec
mov
push
push
pop
or
es
add
dec
mov
shr
or
or
add
add
pop
repnz
push
into
out
imul
adc
ss
ljmp
mov
sbb
and
into
fisubrl
adc
xchg
inc
test
rorb
jns
imul
les
inc
mov
xlat
xchg
xorb
and
mov
outsl
inc
mov
into
mov
adc
dec
imul
lods
mov
or
sub
jp
out
jns
add
xchg
pusha
pop
jo
dec
dec
inc
or
call
or
sbb
mov
or
or
xchg
aad
rorb
pop
sbb
and
scas
outsl
mov
sbb
nop
pop
inc
lods
and
cmpsb
or
mov
js
xor
bound
pop
mov
inc
popa
mov
and
sub
ljmp
imul
or
dec
or
cwtl
inc
xor
mov
jl
clc
sbb
push
sbb
outsl
dec
sarl
push
pusha
inc
adc
mov
jne
ds
sbb
push
out
push
pop
adc
push
outsl
daa
icebp
cmp
cld
pop
in
cld
inc
push
and
mov
nop
andl
gs
or
cmp
decb
int3
or
lret
das
mov
es
and
andb
jl
inc
push
mov
dec
mov
pop
adc
adc
mov
mov
push
or
movsb
push
stos
hlt
inc
push
fldt
ret
sbb
repnz
dec
les
gs
add
ds
out
movsl
mov
bswap
push
and
and
push
mov
cmp
js
aam
sbb
xchg
inc
add
add
call
inc
mov
cmp
fs
push
push
daa
or
dec
push
test
dec
push
call
loopne
push
je
es
pop
fsub
push
mov
push
insb
or
or
data16
or
add
clc
and
sub
cltd
pop
cmp
sub
xor
or
rorb
sbb
or
movsb
adc
inc
in
jb
sub
jl
and
sub
enter
jmp
leave
lahf
pop
lea
add
add
lods
leave
iret
xchg
pushf
pop
push
and
outsl
add
push
in
movzbl
pop
add
cwtl
mov
adc
and
mov
pop
adc
add
xchg
clc
push
jl
mov
leave
adcb
test
sub
movsl
aad
mov
mov
xor
test
pop
pop
lock
or
lods
mov
notl
movsl
mov
addr16
ss
or
push
scas
shl
add
insb
cs
pop
enter
lock
inc
mov
test
movb
dec
ss
outsb
ja
mov
fldl
inc
dec
mov
cmp
cmp
dec
aad
sbb
mov
test
pop
pop
adc
call
fimull
sbb
xor
aam
repnz
jmp
hlt
rorb
push
aaa
enter
outsl
imul
testl
jl
jmp
je
mov
cmpl
jne
mov
mov
fs
add
mov
adc
in
mov
gs
imul
repz
imul
test
mov
and
lcall
in
mov
pop
mov
loop
add
fcomps
push
pop
push
pop
mov
loop
lret
xchg
and
mov
cs
nop
cmp
or
push
cltd
pop
add
or
sbb
shlb
mov
or
les
movsb
mov
es
arpl
pop
rclb
mov
pop
push
test
add
data16
xlat
mov
push
or
mov
mov
push
xchg
jp
inc
fldcw
inc
loopne
add
pushf
cmp
fidivrl
push
lea
mov
out
xor
outsl
pop
jp
mov
add
xor
pop
pop
pop
test
int3
cld
test
loopne
mov
mov
das
insb
pop
fisttpll
shl
and
cmp
lahf
out
arpl
inc
lcall
gs
mov
ja
xor
sahf
inc
stos
rolb
jae
repz
fisttps
push
push
add
test
pop
mov
mov
mov
pop
mov
pop
jp
cmp
jo
or
movsl
ficompl
adc
jne
or
add
push
rolb
xchg
sti
aad
jns
dec
or
xchg
add
mov
push
sahf
xchg
mov
pop
jg
adc
xor
xchg
cmp
aam
dec
cwtl
mov
mov
ja
xor
push
aas
jbe
jbe
pop
mov
pushf
testb
int3
out
sbb
inc
cli
jne
jb
cmp
dec
jp
test
inc
jbe
sub
push
in
shl
jmp
jb
add
sub
inc
xlat
add
loopne
insl
add
inc
fbstp
inc
test
cmp
adc
lock
adc
cmp
add
in
pop
int3
and
xor
idivl
rolb
or
push
enter
push
fnstenv
push
mov
pop
cmp
int3
dec
shl
icebp
or
cwtl
dec
loopne
adc
rclb
ljmp
push
je
mov
icebp
imul
lock
or
mov
notb
inc
mov
cltd
lock
inc
in
add
fs
sub
call
fsubrp
mov
push
push
xchg
fdivl
cs
imul
sbb
mov
push
mov
mov
sbb
loope
mov
in
jo
or
pop
inc
mov
mov
mov
pop
sbb
popf
xchg
pop
push
jns
sub
inc
or
out
push
nop
cmpsb
xor
in
pop
das
loope
xor
dec
adc
das
dec
xchg
cli
sub
jne
repnz
xchg
push
and
cmc
cmp
sub
or
jecxz
cmp
addr16
and
call
inc
inc
add
cwtl
loope
mov
pop
dec
add
int3
adc
mov
push
arpl
add
jo
int3
pop
pushf
addr16
sub
and
add
mov
mov
push
jbe
mov
or
mov
testl
dec
into
cmp
popf
adc
push
sti
add
add
cmpl
insb
roll
in
push
cmpsb
sbb
dec
movsb
jge
test
pop
jb
push
outsl
imul
sub
js
adc
jl
dec
add
stc
fsub
xchg
inc
pop
add
dec
jae
push
pop
inc
and
or
cmp
adc
xchg
dec
sete
ret
sub
cli
iret
fldl
sbb
xchg
xor
pop
mov
scas
rorl
or
adc
jno
repnz
sbb
out
xchg
xor
ficoml
xor
and
mov
shll
orb
iret
add
shlb
pop
hlt
cmp
adc
sbb
adc
mov
push
push
cwtl
sbb
pop
popa
leave
outsl
test
pop
mov
cmp
je
iret
inc
mov
flds
and
das
add
aad
ret
jg
mov
push
cmp
or
push
add
dec
mov
pushw
lea
jecxz
repz
cmpsl
mov
sbb
cmp
pop
adc
xor
ljmp
shr
mov
clc
mov
push
mov
push
lcall
rcrb
fnsave
leave
std
push
rorb
sub
jne
inc
inc
jmp
inc
fs
sub
and
and
cmp
cli
icebp
add
dec
ret
sbb
dec
jmp
test
shrb
inc
out
repnz
iret
loopne
jnp
or
sub
aam
cli
pop
and
mov
jecxz
in
push
push
adc
in
jecxz
invlpg
jl
ja
pop
xorb
addl
test
and
mov
and
in
mov
xor
and
in
rolb
and
test
outsb
sub
cmp
sbb
sub
sub
out
pop
sub
andb
loopne
pop
add
test
movsb
add
je
pop
jne
push
lods
mov
rcr
cmpl
add
mov
cwtl
push
or
fdiv
hlt
inc
stos
mov
test
lods
dec
pop
ds
mov
fmuls
jnp
in
or
or
insb
add
inc
popf
mov
ret
push
and
mov
es
cmp
mov
clc
or
addb
mov
in
outsl
fwait
pop
outsl
adc
sub
dec
cs
mov
mov
imul
stc
clc
arpl
arpl
push
mov
movsb
push
jns
fbld
xor
and
shrb
or
xchg
or
lret
and
outsl
mov
xor
mov
sbb
test
hlt
mov
loope
mov
mov
add
lock
lock
movss
xor
jecxz
push
in
or
popf
call
enter
pop
test
cmp
dec
xchg
xchg
xchg
jne
add
inc
adc
xor
es
cmp
push
leave
or
xchg
mov
or
xchg
inc
inc
mov
ss
cltd
adc
mov
test
adc
in
mov
fisubs
loope
mov
call
mov
dec
shr
lret
push
cmpsb
or
aas
je
xchg
mov
mov
and
rorb
push
jnp
inc
ss
scas
mov
cltd
test
gs
pop
cmp
test
rcrl
fisubrs
add
pusha
popl
movsb
sub
iret
andb
or
add
insl
mov
or
inc
push
jge
inc
xor
jb
inc
jecxz
mov
xchg
lea
xchg
es
push
fdivl
push
insb
mov
adc
popf
push
cli
dec
sbb
iret
dec
shll
das
add
call
and
test
xchg
jl
mov
in
xchg
rorb
sbb
out
cmp
add
mov
inc
out
fst
xor
shr
xor
adc
or
out
pop
and
jp
not
mov
jl
mov
adc
fdivrs
call
add
aaa
jmp
in
addr16
add
mov
repnz
xchg
fadd
pop
sub
cpuid
add
inc
dec
mov
adc
mov
fstl
sub
and
mov
jmp
inc
push
push
or
fcmovnu
add
mov
mov
push
jno
jae
cli
push
or
mov
inc
fdivl
rolb
imul
mov
loopne
push
loop
or
or
add
jb
push
push
or
sub
mov
cmp
jmp
or
mov
iret
mov
int
inc
push
mov
add
and
mov
adc
sub
cmp
inc
mov
xor
cwtl
imul
mov
xchg
pop
push
add
lcall
dec
pushl
sbb
jecxz
out
inc
add
add
push
jecxz
bound
adc
sub
sbb
mov
repnz
sbb
pop
gs
pushf
ds
add
push
push
pop
int
lods
mov
dec
jg
inc
pop
pop
push
mov
movsb
arpl
dec
add
dec
adc
or
and
cmp
jge
cmp
sbb
js
data16
dec
dec
nopl
sub
jecxz
outsb
gs
adc
mov
sub
sub
shrb
add
aam
fcoms
outsb
xor
cmc
push
xchg
xor
xor
ret
lea
add
lods
loope
in
push
push
push
pop
jmp
add
add
and
ss
and
mov
add
popa
mov
and
pop
xchg
xchg
inc
movsl
sti
div
cmp
add
sbb
inc
xor
push
inc
popf
push
icebp
and
or
and
mov
mov
clc
fs
and
sub
sbb
mov
icebp
scas
insl
lcall
jge
add
mov
imul
es
js
add
mov
and
aas
and
andl
jns
cltd
mov
push
and
or
sbb
mov
addr16
add
or
and
add
imul
mov
nop
inc
mov
mov
add
adc
push
insb
inc
jns
adc
in
push
dec
addl
or
out
jmp
xchg
sbb
cmp
imul
popa
push
sbb
adc
dec
pop
in
or
out
jg
adc
pop
jne
push
or
dec
sbb
das
movsl
addr16
mov
mov
add
xor
dec
xchg
and
inc
and
and
dec
cmp
inc
or
inc
ss
mov
mov
adcl
aad
loop
push
nop
inc
lock
ss
dec
sub
adc
xor
fsubrl
lret
stos
push
je
rorb
cmpsb
xchg
push
cwtl
enter
mov
add
mov
loop
add
cli
push
into
mov
add
add
pusha
mov
lods
mov
add
add
repnz
mov
fimuls
sti
sbb
pop
inc
je,pt
mov
adc
push
pop
push
add
xchg
xlat
jmp
inc
call
inc
or
leave
mov
jbe
adc
dec
sub
adc
shll
sbb
andb
pop
adc
sub
out
xor
mov
test
mov
mov
mov
jmp
rcll
and
rcrl
xchg
push
cwtl
sub
mov
and
mov
lret
pop
push
xor
int
movsb
test
push
pop
push
ss
jnp
test
hlt
rclb
dec
mov
sub
aaa
mov
mov
adc
adc
imul
mov
jo
push
cmp
mov
sub
add
inc
enter
or
jae
xor
int3
xor
jge
add
enter
hlt
les
jle
int3
pop
pop
jne
dec
ror
adc
push
cmp
pop
xchg
and
nop
stos
push
bswap
std
add
cld
push
andl
adc
xor
or
sbb
nop
lahf
jge
test
repnz
lcall
sub
rcr
push
stos
push
pop
in
imul
icebp
adc
sbb
iret
into
push
scas
sbb
sub
pop
enter
loopne
push
adc
bound
inc
stos
push
add
and
mov
pop
sbb
xchg
rclb
call
inc
imul
pusha
mov
imul
cmp
stos
addl
sbb
xchg
jns
insb
sarl
je
adc
xchg
and
and
ret
fmuls
loopne
cmp
jp
dec
dec
xor
popa
xchg
movsb
inc
notb
rol
jne
sub
xchg
sar
lock
add
jmp
xor
sbb
or
cmp
jbe
jl
push
out
add
loope
and
lock
pushf
arpl
adc
imul
sub
cwtl
sub
addr16
sbbb
jecxz
pop
imul
lds
loope
push
mov
xrelease
cmp
adc
pop
cs
loopne
or
dec
cmpsb
and
stos
mov
cld
sub
addb
lret
ja
push
cmp
add
cmp
push
pop
lock
mov
add
mov
inc
je
popa
mov
push
call
js
mov
stc
repnz
lock
adc
push
or
and
movsw
je
add
pop
lret
pushf
jecxz
jb
mov
jl
rorb
sbb
sub
sbb
push
cmpsb
inc
mov
lea
aas
xor
and
ljmp
insl
mov
mov
and
push
fstpl
lret
push
out
fimuls
shlb
mov
push
pusha
pusha
sbb
sub
inc
or
or
or
mov
mov
fs
out
adc
adcb
xor
dec
sub
mov
cmp
shrl
rol
js
sbb
or
xchg
xor
push
addr16
inc
add
fcomps
sub
popf
imul
pop
push
psrlw
pop
sbb
jmp
sahf
lea
in
icebp
sub
push
popa
sbb
addr16
jbe
imul
xchg
hlt
cmpsl
push
add
movsb
bound
dec
push
test
call
cmp
outsb
bound
fistpl
es
push
add
push
std
pop
ljmp
sub
inc
lea
push
mov
push
add
mov
push
fcmovnb
test
adc
mov
add
and
push
cmpl
pop
xchg
xor
es
shrl
push
popf
xlat
icebp
xchg
in
xor
lods
nop
cld
xor
out
push
les
pop
and
outsl
loopne
lahf
and
lahf
fadds
inc
adc
cmp
pusha
cmpl
xchg
adc
nop
dec
adc
icebp
outsb
je
mov
fs
clc
nop
fs
mov
push
bound
mov
add
add
icebp
es
test
fst
xchg
or
cmp
jns
dec
push
pop
inc
in
adc
popf
mov
sbb
inc
mov
push
push
lock
and
jmp
lock
int3
lock
in
icebp
jo
mov
xor
in
inc
mov
rolb
rclb
push
or
jo
fistpll
or
cmp
into
push
out
or
cli
fcom
sarb
or
mov
add
push
outsl
sbb
cld
add
roll
pop
in
movsl
addr16
pop
rorb
aam
push
dec
outsl
std
add
inc
iretw
push
add
repnz
pushf
push
shlb
dec
or
pusha
dec
xchg
xchg
mov
sub
cs
push
cmp
push
movb
inc
lods
test
push
bound
gs
add
pop
inc
mov
sbb
clc
xchg
sub
dec
and
push
lock
je
push
cld
push
jmp
xlat
pop
cmp
cli
addr16
bound
lea
loope
mov
movsb
or
push
mov
das
sahf
test
lahf
rorb
adc
mov
call
adc
sbb
mov
jne
pop
fs
add
pop
pop
mov
adc
mov
dec
add
or
mov
sbb
imul
out
ja
xchg
pop
push
outsl
push
push
rcrb
je
dec
jb
push
push
rcrl
cld
out
and
xor
subb
lcall
sbb
out
add
pushl
stos
push
add
lock
push
push
add
add
ret
test
xor
bound
inc
adc
daa
mov
orl
xor
mov
cmpsb
or
cwtl
mov
cs
push
mov
cmc
enter
je
push
ja
inc
xchg
leave
out
push
scas
add
mov
sbb
jo
sbb
mov
xchg
jmp
adc
ja
jmp
inc
and
daa
push
mov
push
xor
adc
cs
add
jmp
cmp
jb
dec
xchg
and
inc
cmpl
push
inc
adc
inc
adc
add
nop
das
and
js
push
stc
pusha
or
dec
jns
xor
sbb
enter
nop
pop
xchg
or
sbb
sub
sbb
jle
je
bound
mov
push
sub
xorb
push
add
jo
add
xor
add
adc
xor
push
pushf
fld
mov
mov
icebp
lret
idivb
pusha
jns
shr
inc
fs
out
xor
adc
addr16
mov
mov
or
sbb
sub
or
lret
jne
xchg
test
fstps
push
mov
add
adc
inc
fmul
sub
adc
pop
jl
push
lea
push
dec
je
mov
bound
adc
sub
jl
cmpb
movsl
and
outsl
sub
sub
jmp
inc
das
decl
sbb
xor
xchg
push
push
jecxz
jge
movsb
inc
int
xlat
test
inc
lock
mov
fwait
icebp
mov
cmp
cmp
mov
stc
outsl
push
cmc
ret
test
test
ljmp
out
pop
fisubrl
mov
jne
sub
pop
mov
shlb
mov
lock
xor
int3
mov
sbb
adc
fs
loopne
cmp
cmpb
mov
adc
sbb
add
in
les
mov
fwait
pushf
dec
imul
push
mov
lock
pop
aam
inc
stos
jecxz
or
rcr
push
in
out
rolb
mov
rol
mov
ror
ljmp
xor
shr
xor
es
mov
rol
xor
shr
xor
add
pop
add
loopne,pn
into
repz
or
mov
mov
and
not
and
xor
add
add
dec
mov
pop
aam
sub
jge
add
xlat
in
push
adc
ror
mov
fisubrs
dec
iret
add
xor
and
and
xchg
push
aam
or
cmp
mov
rorb
repnz
test
mov
mov
and
not
ret
rcl
add
xor
lock
add
xor
fsubr
sarb
orl
data16
or
sub
ljmp
rol
rol
out
add
jb
xor
push
xor
fdivl
xchg
cmpsb
loopne
clc
xor
sbb
dec
shl
aam
in
sub
sbb
xchg
xchg
bound
cwtl
xchg
xchg
mov
rcll
les
mov
pop
sbb
add
cltd
call
xor
loopne
loopne
mov
in
in
loopne
add
and
xor
pop
cmp
aam
pop
cmp
xor
add
push
or
or
int3
cmp
fildl
fcomp
or
push
xor
and
and
lahf
divb
loopne
or
xor
lcall
push
test
add
add
js
adc
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
add
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
rorb
and
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
or
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
add
lahf
jo
add
sbb
adc
xor
in
and
xorl
xchg
push
push
sbb
push
xorb
nop
add
push
int
leave
leave
sbb
push
push
pop
xorl
and
xor
pop
adc
movsb
test
rol
push
or
pop
and
out
fs
pop
xchg
or
mov
xchg
pop
pusha
xchg
in
pop
scas
movsl
mov
or
arpl
rolb
dec
pushf
loop
adc
fs
andl
inc
lret
movsl
imul
enter
stc
mov
adc
pop
dec
mov
cwtl
jp
pushf
dec
mulb
dec
shll
fcoml
fwait
mov
xor
loopne
or
and
add
sbb
pop
and
movb
pushf
out
pop
add
sub
mov
push
inc
adc
adc
add
cmp
jb
testb
jecxz
popf
add
sub
lea
pop
xor
decl
cmpsb
cwtl
adc
sub
push
sbb
lret
or
fistps
mov
or
or
mov
adc
test
js
movb
mov
mov
mov
sub
inc
xor
sar
aad
adc
add
sub
sub
pop
jge
xchg
out
mov
ret
dec
or
mov
daa
push
cmpb
loope
lock
or
mov
jl
sub
mov
jnp
mov
cmp
jbe
or
sbb
dec
adc
fldt
mov
add
jae
push
pop
fadds
fldt
enter
or
mov
jle
ljmp
mov
jle
mov
outsl
pop
loopne
ror
mov
div
rclb
ljmp
dec
mov
scas
adc
test
jecxz
into
xor
cmp
jb
cmp
ja
push
sub
sbb
xor
dec
inc
inc
aaa
popa
inc
pop
mov
push
xor
lcall
push
add
push
sbb
mov
mov
mov
push
inc
adc
jecxz
pop
dec
adc
jnp
lret
jne
adc
incb
je
mov
mov
imul
mov
cmp
je
or
jo
pop
sub
adc
xchg
popa
cmp
jne
mov
imul
negb
push
dec
inc
lea
inc
mov
pop
dec
xor
jnp
lods
mov
movsb
jne
jmp
movsb
xorb
sahf
add
cld
cmp
or
and
loop
fimull
in
cmpsb
push
jno
sub
inc
cmp
fs
dec
inc
push
inc
and
ret
cltd
push
pop
mov
insb
and
push
pop
mov
addl
out
dec
cwtl
int
lahf
lea
lock
fsubr
mov
lea
cmpsb
jge
xor
and
cwtl
pop
mov
or
or
jbe
mov
rcrb
cmp
notb
outsb
pop
sub
insb
jne
dec
jo
xlat
movsb
sub
sarb
fnsave
adc
jb
or
ja
pushf
and
sbb
push
inc
fwait
sbb
subb
xchg
push
fldenv
or
mov
pop
popf
xchg
mov
adc
mov
loop
jne
or
test
roll
test
movzwl
data16
repz
data16
jb
dec
jae
push
cmp
jecxz
js
xchg
add
jmp
cwtl
aas
les
lock
mov
xor
je
fs
jne
clc
adc
and
push
test
mov
mov
inc
rorl
call
cmp
dec
sbb
xor
push
sub
test
sub
push
push
or
inc
call
test
dec
arpl
sti
sbb
cmp
jg
or
jge
jae
jae
and
jle
es
sub
xchg
fsubp
jg
jle
jmp
cmp
jl
pop
jle
pusha
add
inc
test
orl
lahf
jb
jbe
mov
test
fwait
cld
cld
dec
jo
jne
or
je,pn
test
jne
je
xlat
add
pop
outsb
and
jb
mov
sub
adc
push
mov
jp
jmp
loop
dec
loope
inc
sbb
push
incl
inc
push
push
push
mov
inc
or
xchg
pushl
mov
test
ljmp
add
es
clc
dec
movsb
ss
lahf
nop
dec
repnz
pop
leave
mov
mov
cmp
xchg
lods
sti
movsl
adc
mov
and
pop
dec
stos
xchg
inc
out
mov
orb
mov
rcll
cmpsb
out
fimull
xchg
push
and
add
xchg
and
sbb
cmp
mov
ljmp
dec
test
sub
xor
inc
and
inc
outsl
jo
lea
movl
add
pop
jb
adc
jg
mov
cmpl
inc
mov
loopne
inc
push
jo
pop
das
mov
or
xchg
sbb
push
dec
jnp
pop
cwtl
xor
mov
lahf
inc
mov
sbbl
incl
pusha
cmp
outsb
mov
dec
fadds
inc
and
loopne
dec
lcall
loope
insl
pop
push
cmp
je
test
adc
std
out
or
sti
mov
sahf
enter
sbb
or
sub
mov
pop
daa
dec
add
xchg
insb
pop
sub
and
dec
in
movb
cmp
shr
sub
movb
sub
pop
push
lods
aas
nop
pop
cmp
mov
inc
inc
mov
pop
sub
jl
add
cmp
add
push
sbb
ljmp
jg
scas
push
or
adc
sahf
push
cmp
lock
pop
mov
popa
hlt
cld
xor
add
inc
xchg
xchg
add
adc
or
mov
pop
jo
mov
jge
add
adc
sub
movsl
adc
add
sbb
jb
cs
cmp
mov
or
ds
adc
mov
movsb
lea
sub
push
lret
dec
mov
jno
movsb
jo
je
insl
mov
faddl
mov
push
outsb
mov
add
sub
call
jbe
fildll
mov
push
xor
and
jne
addl
xchg
xchg
out
popa
push
ret
pop
hlt
jae
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
jo
loopne
movsb
pop
and
xlat
push
rcll
inc
fs
pop
pop
ror
call
imul
cmp
inc
shll
leave
xor
mov
aam
fnstsw
imul
clc
sub
pop
imul
cmp
mov
mov
sahf
push
loopne
jne
loopne
fnstsw
rolb
in
and
and
and
and
inc
push
jle
pusha
adc
push
cmpsl
pop
insb
rclb
lds
push
jo
add
mov
sbb
or
bound
pusha
or
jne
or
dec
adc
scas
gs
sarb
inc
cmpl
cmp
adc
sbb
lcall
movsb
das
xor
cmp
je
in
cmp
mov
mov
inc
inc
inc
xchg
adc
cmpl
and
aaa
sbb
rcrl
mov
add
push
lcall
mov
inc
fsubr
cmp
cmp
and
jo
push
push
xorl
fsubp
or
fs
insb
jne
jl
mov
movsb
jbe
jp
sbb
add
sbb
xor
jae
ss
add
pop
inc
sbb
dec
rolb
cmp
jne
pop
imul
push
loopne
pop
cmp
mov
or
cmpsb
or
les
add
fld1
insb
dec
popf
insl
js
mov
mov
jne
ja
mov
movsb
push
adc
or
lods
cmp
or
sbb
push
xor
jno
jmp
add
mov
dec
and
or
sahf
cmp
or
pop
das
dec
jno
loope
nop
jmp
inc
push
pop
fidivrs
mov
cmp
je
pop
lahf
xchg
adc
push
roll
cmpsl
sbb
push
or
clc
adc
add
pusha
andb
jne
mov
xchg
outsl
inc
addr16
pusha
cs
mov
adc
movsl
or
xor
cmp
mov
mov
mov
mov
pop
and
mov
addr16
clc
push
push
cmp
pop
jb
rcr
push
ds
rclb
jmp
mov
imul
cmp
lret
mov
clc
cmp
jbe
jns
jbe
and
and
outsb
or
fadds
stos
push
sub
cs
lret
sub
xor
lret
in
mov
cmp
jo
sbbb
or
sbb
popf
xchg
mov
mov
xorb
vmovss
lds
sub
shll
xchg
push
loop
xor
ds
pop
sbb
das
std
lods
sbb
jo
inc
xor
test
in
xchg
and
js
add
sbb
or
stc
jbe
loop
jle
xchg
sahf
push
test
mov
jmp
inc
add
test
mov
jle
add
xchg
inc
push
pop
cmpsl
insl
adc
xorl
mov
mov
fcomps
mov
or
popa
notl
add
ret
lock
and
cmpl
sub
xchg
loop
add
aam
xor
std
xchg
orl
push
cli
xor
jne
rcll
dec
sub
test
fcoms
push
je
invlpg
mov
roll
mov
add
cmp
mov
adc
or
jne
jne
lret
xor
or
dec
punpckldq
clc
and
test
xchg
jl
hlt
inc
or
mov
cmpsl
lods
ret
ja
js
pop
inc
shll
push
and
sbb
cmp
sarb
jmp
dec
xor
fchs
and
cmp
lfs
mov
outsb
xchg
in
daa
push
dec
js
cmpl
sub
xchg
call
pop
mov
nop
ret
pop
lods
sbb
loopne
mov
aam
orb
insb
dec
insl
xchg
rcll
jnp
sarb
stos
dec
cmp
or
sbb
sub
mov
data16
push
addr16
cmpsl
mulb
push
pop
pop
test
mov
clc
les
or
pushf
pop
fimull
data16
bound
roll
adc
or
or
xchg
ret
or
nop
sbb
cmp
xchg
les
rolb
push
imul
hlt
inc
mov
sbb
push
jo
aam
rcr
inc
cmp
sbb
loopne
rcrl
push
dec
movsb
frstor
lods
in
xorl
imul
repnz
xchg
sub
sbb
and
pop
or
cwtl
in
lock
scas
dec
cld
les
or
or
and
ret
call
out
dec
pop
sbb
dec
or
loop
jg
mov
sbb
cld
fbld
dec
and
mov
mov
mov
adc
mov
adc
dec
imul
or
lods
mov
test
dec
sbb
push
xor
lcall
and
mov
mov
or
int
jp
outsl
push
sbb
sbb
jmp
cmp
inc
inc
add
dec
ja
and
pop
pop
mov
out
mov
mov
mov
sbb
int
push
pop
leave
cwtl
stos
push
ds
dec
mov
fistpl
inc
shlb
pop
pop
pop
pop
adc
add
sub
mov
fld
imul
push
push
sahf
lods
scas
or
arpl
mov
inc
add
lock
and
outsb
or
or
and
xchg
pop
push
jl
cmpsl
fcmovb
imull
and
adc
jnp
dec
mov
mov
addr16
add
dec
add
lock
popa
insb
cmpsl
pop
inc
inc
ja
ja
mov
xchg
dec
sbb
dec
dec
adc
sub
sub
adc
lea
and
lock
add
cs
add
sub
and
sbb
sbb
mov
imul
add
or
and
dec
cmp
push
and
sub
inc
adc
mov
fbld
mov
stc
inc
inc
add
icebp
rol
sti
data16
pushf
test
and
mov
dec
js
lcall
sbb
nop
push
lods
fs
add
cmp
sub
cmp
daa
pop
outsb
adc
sbb
test
pop
push
fldcw
sub
incl
and
adc
sbb
aam
xchg
or
lock
fsubs
add
jle
adc
cltd
inc
es
dec
adc
sub
cmpsl
adc
sbb
arpl
ja
shrl
mov
push
xbegin
aas
and
test
jecxz
sbb
mov
cmovo
das
mov
pop
xor
inc
sub
lret
fisttpl
push
mov
flds
js
lds
jg
push
dec
push
ficoml
gs
xor
and
push
leave
sub
ret
push
and
shrl
sub
push
arpl
cmp
xor
pop
xor
sub
test
mov
and
pop
clc
dec
pop
mov
add
fisubs
mov
outsb
push
lret
add
xchg
push
cmpb
mov
push
and
jae
push
push
test
dec
push
pop
pop
mov
hlt
imul
push
imul
sbb
push
lcall
shlb
testb
and
jne
orl
sbb
push
push
cmp
inc
test
add
imul
sbb
adc
push
mov
sbb
push
inc
jmp
jge
pop
addl
clc
ffree
sub
pushl
xchg
inc
mov
adc
pop
add
sub
jg
mov
jp
fistps
cmp
mov
jnp
cs
push
xor
pusha
pop
add
leave
mov
fcoms
or
gs
adc
in
mov
ljmp
sub
adc
sub
add
pop
rclb
imull
lods
ret
sub
sahf
push
pop
inc
subl
or
hlt
je
cmp
jbe
lds
sub
jmp
jbe
mov
xor
jle
jnp
enter
push
push
jp
lds
insl
xor
mov
or
leave
repz
and
mov
jbe
cmpl
pop
clc
xor
xor
repz
cltd
xchg
lret
pop
movsb
jmp
xor
inc
enter
mov
test
jbe
mov
je
or
dec
push
enter
rcll
mov
mov
adc
cmp
cmp
out
push
add
mov
rcrl
push
push
xor
sub
adc
add
rclb
cmp
shl
cmp
lcall
lret
jmp
inc
xchg
xchg
mov
push
negl
out
aas
nop
call
pop
pop
mov
pusha
and
and
cvtps2pd
sub
jbe
push
xor
sub
js
sbb
dec
push
enter
xor
cmp
jmp
add
jne
mov
push
and
jo
in
scas
and
mov
pop
addb
daa
xchg
adc
xor
call
xor
lcall
mov
xor
add
adc
pop
or
fadd
imulb
mov
les
shl
int3
adc
movsb
jne
fcomps
outsb
cmp
jne
cmp
ret
out
arpl
xor
cmp
nop
dec
mov
je
push
lds
jne
test
pop
ret
mov
dec
and
and
and
into
adc
or
sbb
adc
and
cmp
push
subl
or
ret
fbld
shll
and
cmp
jbe
or
dec
jmp
mov
dec
sub
test
das
sahf
push
pop
fsubrl
add
xlat
push
mov
fdiv
fcoml
push
jbe
shrb
loop
jnp
dec
cmp
jb
xor
int3
test
mov
cmp
enter
pop
or
add
or
inc
xchg
inc
mov
jecxz,pn
adc
sbb
hlt
pusha
cmp
pop
gs
and
test
cmp
jno
adcl
cli
clc
add
or
iret
out
lock
pop
subb
repnz
or
gs
loope
add
lock
cmpsb
cmp
push
add
xor
bound
sbb
push
jg
or
sub
out
push
hlt
dec
bound
pop
and
add
xor
js
pop
mov
add
cld
add
inc
adc
or
mov
push
inc
adc
pop
fbstp
cmc
mov
push
call
jmp
lret
add
pop
fstpt
es
ss
add
ja
pop
pop
mov
jae
enter
ret
inc
mov
pop
sub
nop
adc
add
movsl
push
popa
inc
out
jb
mov
mov
aaa
dec
pop
cmp
push
les
adc
in
je
cmp
dec
ret
or
inc
hlt
clc
shll
sbb
push
dec
andb
dec
stos
cmp
cmp
negl
sub
lcall
stc
adc
mov
cmp
or
testb
dec
stos
stc
ja
and
js
or
jne
fmul
jb
sbb
cmp
test
jle
lock
mov
mov
inc
push
mov
add
ret
push
loope
shlb
or
jmp
pop
xchg
mov
xchg
mov
jmp
andb
lea
bound
xchg
xchg
mull
mov
lock
test
lea
addb
cmp
sub
add
aam
stos
xor
daa
in
fbld
and
cmpsl
push
pop
jns
add
mov
sarb
aam
mov
or
cmc
mov
and
jl
inc
pusha
adc
xlat
jmp
addb
icebp
pop
lcall
jl
xchg
mov
push
mov
mov
or
int
sbb
and
test
pop
rol
add
sub
inc
inc
outsb
cmp
or
push
pop
cmp
dec
jbe
xor
std
cmpsl
cvtps2pi
add
lods
or
nop
or
mov
mov
fsub
lock
sbb
pop
push
in
push
jbe
lret
adc
stc
clc
add
fwait
pop
cmp
pop
orl
imul
movsb
mov
jb
inc
cwtl
dec
add
pop
jo
cmp
mov
jnp
push
mov
or
sbb
pop
xchg
push
nop
sarb
dec
jle
lods
roll
movl
loopne
inc
push
lods
shlb
xor
shll
je
xor
lret
icebp
or
jo
xlat
test
ret
cmpsb
insb
pop
and
sub
dec
jmp
cmp
das
push
inc
sbb
ljmp
aas
push
movsl
adc
xor
orl
mov
sub
rclb
mov
push
and
filds
rcll
adc
pop
jno
jno
add
jp
or
sahf
cmpsb
add
xchg
je
or
call
xchg
js
test
imul
jo
and
outsl
test
cmp
mov
cmp
jg
jg
cmp
sub
jl
cmp
add
jnp
shlb
je
xchg
stos
fsubr
pop
stos
cmpb
pusha
dec
call
or
andl
in
xlat
push
lea
jo
vpaddb
ret
and
cmp
jge
cmc
add
mov
rolb
push
dec
mov
sti
push
inc
loop
ret
insb
push
outsl
jge
mov
dec
adc
enter
mov
and
inc
adc
push
or
test
jmp
push
adc
and
cmp
xchg
ret
pop
xor
add
clc
dec
enter
jle
fsubr
xchg
add
and
iret
movb
sub
jmp
pop
mov
mov
clc
nop
push
pop
adc
lods
dec
push
cmp
mov
jle
mov
add
push
les
dec
clc
or
inc
add
lcall
cmp
outsb
rcrb
inc
pop
pop
test
test
and
lea
cmp
dec
pop
pop
popa
adc
pop
es
add
sub
jle
fnstcw
or
push
xor
test
cmp
mov
pop
std
jo
or
loope
dec
popa
dec
lods
test
data16
and
sub
cltd
xchg
push
inc
loope
nop
push
and
lea
mov
bound
dec
ret
inc
xchg
inc
or
addr16
aas
mov
inc
cmp
mov
adc
loopne
or
orb
dec
add
das
and
or
push
sbb
lret
mov
add
rep
or
xor
dec
in
and
call
mov
movsb
sbb
mov
or
adc
iret
aaa
ret
mov
xchg
fistpl
xor
lock
loopne
notl
insl
cld
imul
xor
sub
mov
and
or
icebp
jmp
aaa
lret
mov
adc
adc
scas
mov
pop
jmp
jp
notb
test
bound
cmpsl
push
call
mov
add
in
sub
mov
cmpsb
mov
or
lds
stos
sbb
js
pushf
push
dec
adc
in
inc
push
jp
cmpsl
divl
push
js
jnp
lret
sbb
dec
dec
ret
sbb
leave
ret
pop
mov
xchg
mov
mov
or
in
in
and
or
lods
adc
roll
pop
andb
lea
xor
mov
adc
sbb
xchg
cmp
xchg
and
popa
mov
popa
adc
push
loopne
mov
imul
jbe
aam
aam
stos
dec
mov
sub
popa
push
xchg
inc
call
cmc
add
sub
add
cmp
rorb
adc
push
leave
xchg
add
cltd
cmp
cmp
in
add
dec
mov
inc
stos
sbb
sub
inc
ds
dec
sbbb
xor
fidivl
jmp
lods
xchg
loope
iret
adc
sahf
jnp
lret
xor
insl
int3
inc
lds
push
mov
popa
jo
mov
mov
lock
xchg
push
movsl
mov
push
cs
fbstp
push
ret
add
pop
imul
push
dec
mov
inc
mov
sub
adc
push
xor
fdivs
jnp
je
inc
fstps
or
push
cmp
in
and
sbb
aas
push
pop
cmp
je
mov
push
mov
inc
mov
and
nop
dec
cmp
jmp
mov
mov
push
les
and
dec
cld
inc
sahf
jl
jmp
xor
xor
sar
in
adc
enter
cmp
inc
test
cmpb
je
dec
je
dec
adc
ficoms
and
jg
mov
lea
orl
popf
dec
xor
push
inc
scas
push
cmp
inc
sbb
icebp
push
das
and
adc
jmp
cmpl
and
or
out
mov
and
and
pop
fists
mov
xlat
data16
push
xor
pop
adc
subl
and
mov
shrb
adc
adc
or
scas
in
js
push
mov
into
fldcw
daa
pop
int3
in
in
dec
xor
test
pusha
xor
leave
mov
xchg
pop
mov
idivl
ret
xchg
or
pop
ss
test
rolb
out
shrl
push
lret
mov
ds
mov
mov
dec
sub
call
and
orl
adc
jbe
sbb
adc
push
mov
in
popa
out
mov
pop
add
rolb
sahf
push
push
dec
test
psllq
cltd
push
xor
mov
cmp
xchg
call
mov
insb
dec
cmc
stc
bound
add
sub
push
rcrl
mov
push
mov
or
sbbl
enter
inc
popa
sbb
dec
jl
xchg
push
dec
enter
sbb
push
je
pusha
lea
dec
push
adc
and
sub
jl
jne
push
rcl
mov
cltd
adc
ds
or
lock
lods
inc
add
cmc
fldt
scas
xchg
or
lods
dec
inc
test
pop
in
sbb
enter
in
sbb
in
dec
adc
pop
mov
xchg
cld
inc
sub
xchg
lret
test
add
cmp
das
cmp
shlb
sbb
subb
xchg
push
and
pop
mov
in
popa
add
mov
add
push
pop
lock
leave
ret
add
push
and
or
and
xor
or
idiv
lea
mov
clc
jns
add
rcll
and
adc
push
cmp
adc
jnp
jbe
hlt
punpckhbw
xor
testb
mov
push
lret
or
mov
mov
cmp
mov
sti
sbb
data16
pop
insb
xchg
push
add
movsb
cmp
sub
sub
jns
dec
dec
clc
jne
rcrb
test
cmp
popa
cmpsl
cmp
push
aam
xlat
sbb
stos
es
insl
js
sbb
stc
adcl
mov
or
sbb
hlt
hlt
test
xor
jb
inc
lods
or
ljmp
push
andl
call
add
push
pop
inc
sbb
fldenv
push
pop
lock
jne
push
js
fldt
clc
shll
loopne
fnstenv
mov
sub
popa
arpl
adc
stc
repz
imul
cs
lods
or
ja
loop
add
lea
shlb
sti
mov
sbb
outsl
xor
or
mov
imul
cmp
iret
iret
inc
movl
mov
mov
hlt
ret
iret
lcall
loopne,pt
sub
or
mov
fs
in
dec
adc
dec
ss
dec
push
pop
mov
adc
add
sbb
cmp
or
cmp
jne
jae
sub
sub
pop
sub
out
and
inc
adcl
add
mov
jne
fimull
loop
cmp
cmp
adc
out
xor
jge
mov
outsl
add
aam
push
sub
les
outsl
dec
push
dec
test
push
fldl2t
adc
lods
fcomps
int
inc
fsubr
jmp
pop
add
inc
fisttpl
das
mov
xchg
orl
push
pop
clc
ret
adcb
pop
addl
or
pop
test
xchg
sbb
pop
lea
xchg
movsl
jo
mov
sbb
adc
push
ljmp
insl
inc
or
dec
push
dec
mov
and
xchg
in
or
adc
mov
add
xchg
dec
fcomp
add
call
adc
aam
mov
adc
sbb
inc
lds
sbb
pop
nop
inc
and
dec
and
hlt
and
rorl
subl
mov
or
sbb
test
or
or
xchg
jno
adc
push
xchg
mov
call
movsb
popa
adc
adc
adc
or
ret
repz
pop
sbb
addb
faddl
lock
jge
fmuls
scas
mov
insb
arpl
les
clc
scas
xor
sarl
cmpb
add
inc
ljmp
or
cmp
adc
mov
xor
mov
xabort
test
sbb
mov
sbb
in
xor
jo
sub
push
nop
sbb
orl
mov
xchg
js
shll
cmc
push
sub
in
mov
cmc
gs
movsb
lock
iret
sbb
mov
mov
jecxz
push
xchg
xchg
inc
lods
fwait
push
scas
sbb
pop
popf
in
or
mov
jb
lods
ds
cmpl
cmpb
shrl
mov
rol
mov
clc
and
cs
adc
mov
psubsb
jb
push
jae
adc
and
xor
outsb
shlb
les
lock
scas
out
test
mov
push
adc
lcall
fsubr
je
repnz
jmp
sub
mov
aaa
icebp
iret
and
push
jecxz
push
push
push
adc
mov
mov
jb
xchg
sbb
add
xor
inc
adc
cmp
adc
mov
loopne
mov
pop
or
inc
pusha
mov
add
inc
sbb
adc
jge
mov
ret
stos
xor
or
pop
push
int3
lcall
push
jbe
daa
push
mov
loopne
xchg
and
dec
push
mov
outsb
mov
out
mov
int3
test
add
cmp
adc
jge
sbb
in
inc
jns
cmp
sub
adc
cmp
add
mov
in
in
jl
cmp
test
add
cmp
call
loopne
je
mov
inc
jl
push
insl
mov
std
sub
bound
mov
or
xor
clc
add
clc
jno
mov
pop
mov
popa
add
add
popf
pusha
rorl
repz
sbb
lds
sahf
or
sbbl
sub
je
sti
xchg
push
dec
inc
sbb
addl
adc
dec
sub
mov
or
rol
test
jmp
iret
jmp
or
inc
pushf
aam
test
jne
jecxz
rcl
fsubr
jl
pop
adc
add
mov
in
xchg
and
cltd
mov
cld
inc
jle
in
sbb
fiadds
rep
xchg
and
psrlw
rorl
sub
shrl
cmp
sbb
push
int3
in
sahf
test
adc
loope
ja
xor
test
ljmp
xor
in
push
loopnew
shlb
fisttpl
dec
pop
ret
xchg
mov
movsl
adc
pop
pop
cmp
and
das
sbb
sbb
into
fsubrl
fcompl
lret
push
dec
add
shlb
mov
notb
sahf
xlat
and
gs
cmp
sbb
add
movsl
dec
addr16
or
fsubrs
insb
mov
and
add
pop
dec
dec
inc
sbb
mov
lea
adc
mov
rorb
call
cmp
mov
test
loope
shlb
inc
mov
cltd
es
cmpb
rcrb
pop
imul
sub
test
xchg
loope
mov
stos
js
dec
mov
int
mov
xor
jle
lea
and
jae
sub
pop
mov
cs
ljmp
dec
xor
jecxz
mov
repz
push
inc
nop
or
imul
inc
sarl
addb
cwtl
loop
fwait
addr16
cmp
sti
inc
outsl
incb
mov
xor
fs
pop
push
int3
fldenv
popa
xor
out
pop
je
or
jae
sub
rcll
ja
sbb
sbb
xchg
sbb
add
lea
adc
loope
and
add
notb
jbe
mov
jle
ret
shll
push
mov
inc
addl
add
adc
fildl
push
pop
aad
sub
add
add
xor
cmp
xor
mov
add
pop
add
in
jp
ret
push
jecxz
xchg
sub
jp
mov
iret
int3
mov
sti
sub
pushf
mov
push
stc
dec
inc
cmpl
imul
adc
adc
xor
add
addw
xchg
ss
adc
addl
inc
sub
push
or
inc
ret
xor
js
fisubl
jbe
out
add
lock
inc
push
pop
data16
push
mov
xor
add
wrmsr
xorl
hlt
cmp
push
add
shl
fcoms
xchg
adc
bnd
cmovge
imul
xchg
cld
js
cmc
ret
push
jae
lea
push
pop
rol
mov
lret
sbb
sbb
add
stos
vmovaps
add
jns
and
mov
test
or
call
mov
ficomps
pushf
out
push
push
cmp
lcall
add
hlt
push
jp
sub
push
call
jge
sub
or
jae
sbb
sbb
test
add
xorb
sahf
dec
xlat
push
loopne
in
clc
subl
aaa
push
dec
mov
ror
fsubr
adc
cmp
imul
xor
movl
movhps
popf
fisubrl
sub
bound
test
add
push
add
xor
adc
xor
jmp
cmp
add
jbe
push
push
test
sbb
push
xchg
xchg
fisttpll
mov
add
ficomps
enter
sahf
inc
and
or
mov
int
or
ret
test
and
cmpsl
and
dec
push
or
or
adc
add
inc
dec
ljmp
ss
xor
je
pop
insb
mov
mov
mov
js
add
cmpb
push
jne
jbe
aam
or
lcall
mov
add
xchg
cmp
lret
inc
sub
push
push
mov
sbb
unpcklps
imul
jmp
pop
and
push
fs
inc
or
add
push
adc
bnd
ret
pop
push
ret
pop
fwait
ret
sbb
or
pop
add
mov
jmp
mov
adc
shlb
aam
in
fisttpl
adc
ret
and
sbb
push
enter
int3
rcrb
lret
add
xor
enter
mov
mov
adc
rorl
cs
jne
repnz
push
adc
and
jmp
popf
push
addr16
sbb
cld
push
imul
inc
sub
cwtl
inc
test
lods
out
mov
divl
jnp
add
aaa
cld
gs
inc
cld
xchg
mov
daa
jae
lret
aam
or
dec
sbb
sbb
push
addl
mov
scas
lods
call
push
sub
cmp
jle
dec
add
movl
mov
addb
jo
or
sbb
and
sahf
xchg
or
add
mov
daa
xchg
popa
pop
adc
mov
or
mov
xchg
jmp
leave
xchg
loopne
jb
cmp
mov
ret
hlt
mov
loopne
inc
cmpl
loopne
push
mov
ret
xor
scas
repz
cmp
or
xor
shlb
cmp
add
mov
cmp
mov
lea
cmp
adc
sbb
sbb
test
add
xor
or
divl
addr16
dec
lret
dec
lock
jb
and
dec
sbb
dec
movsl
dec
fwait
inc
clc
mov
pop
ja
mov
add
inc
sbb
adc
pop
jo
hlt
mov
in
dec
jne
or
aaa
jge
mov
outsl
add
cmc
pushf
pop
adc
fnsave
adc
push
adc
fstps
jno
xchg
pop
sub
sbb
push
in
imul
push
adc
lret
int
and
mov
fcompl
fwait
mov
data16
inc
sbbl
jbe
mov
add
test
adc
or
sub
add
inc
push
pop
pop
inc
fidivrl
and
pop
or
pop
mov
call
or
cmp
js
jge
jo
push
push
pushf
ret
pushf
lea
add
lods
jnp
mov
gs
push
adc
dec
push
push
pushf
ljmp
int3
mov
test
loopne
insb
jne
cmp
pop
adc
mov
xor
popa
xor
int3
fs
bound
xor
das
mov
sti
pop
sub
call
cmpsb
cmp
fwait
or
xchg
inc
mov
dec
push
scas
mov
cmc
push
int
inc
aam
sbb
adc
mov
test
inc
pop
xchg
scas
inc
in
xor
rclb
add
orl
int3
movsl
test
dec
popa
dec
jno
jns
rorb
xchg
iret
clc
in
xor
push
or
imul
inc
cs
push
sub
int3
ljmp
pop
call
shll
mov
or
and
cmpsl
add
add
sub
mov
mov
sub
cmp
stc
push
mov
xor
mov
jp
fstl
push
inc
cmp
mov
dec
clc
and
movb
push
aas
lds
sbb
data16
into
sbb
pop
sub
xor
mov
jne
aad
pop
cltd
movsb
mov
add
stos
sub
fiadds
rorl
inc
mov
or
cmpsb
fidivs
inc
pop
add
jecxz
int
dec
add
add
imul
cli
xchg
pusha
sub
adc
cmp
iret
adc
test
adc
int
cmpsl
jae
mov
adc
pop
push
cmp
and
addr16
inc
cmp
jl
pop
inc
mov
mov
or
jle
orb
shlb
push
xor
jne
dec
add
fsubl
sbb
add
mov
adc
cmpsb
in
outsb
adc
sbb
mov
sub
or
add
mov
cmc
xor
pop
ret
push
das
les
push
push
jl
xor
add
cmp
xor
rclb
sbb
das
push
adc
mov
and
mov
inc
imul
or
into
xchg
cs
aad
or
push
or
sbb
jge
push
lea
stos
push
sbb
pop
out
sub
dec
mov
mov
inc
scas
test
push
or
popf
push
inc
fistps
mov
add
adc
mov
mov
mov
xor
mov
loope
and
std
outsl
in
add
sarl
jmp
add
mov
pop
lock
shl
lret
mov
mov
mov
mov
in
or
fwait
cmp
mulb
je
jge
rorb
mov
add
add
add
mov
cmp
adc
or
ret
add
add
test
sbb
sbb
rolb
movsb
add
lock
dec
dec
daa
dec
js
jl
fdiv
sar
nop
call
sbb
add
cmp
push
inc
loop
pop
mov
out
repz
les
xor
xor
jl
std
pop
and
pop
je
add
add
add
cmp
dec
mov
or
push
test
add
daa
jno
pop
jle
jge
addb
cmp
stos
xlat
into
loope
push
and
sub
mov
icebp
cmp
adc
aam
sbb
mov
mov
sbb
pop
addb
push
mov
test
sub
add
outsb
adc
pop
sar
arpl
jg
mov
pop
dec
xchg
inc
shrb
jae
and
sub
inc
out
in
xchg
adcb
or
or
sub
dec
and
ficoms
xchg
iret
add
shll
xchg
lods
add
pusha
jo
or
adc
push
icebp
jecxz
cmp
dec
sarb
lcall
and
inc
xor
mov
mov
les
clc
and
rolb
push
inc
out
xor
int
rorl
out
push
aam
sub
shl
sbb
sarb
lea
call
push
in
adcb
push
fidivs
ss
mov
cmpl
push
push
js
aam
mov
jmp
das
sarl
int
cmp
push
inc
xchg
jl
sub
add
nop
fisttpll
pop
js
inc
add
or
icebp
push
jo
xor
add
lea
loopne
add
mov
jo
daa
cmp
push
ret
mov
xor
push
sbb
jecxz
in
dec
pop
sub
pusha
cmp
jne
fisubrl
dec
pop
je
and
or
push
xchg
xorb
jae
adc
and
sbb
testb
push
sub
rorb
clc
xchg
xor
lea
popa
xchg
lods
adc
cmpsl
std
and
mov
popa
mov
mull
in
addb
jb
pop
ret
mov
mov
or
pop
jmp
inc
ret
rorb
push
test
enter
sarl
arpl
sub
js
out
push
jne
and
arpl
mov
mov
xchg
ss
addb
in
sub
sub
lock
and
push
mov
dec
lret
addb
mov
popf
test
or
inc
push
jns
or
aad
xchg
sub
mov
sbb
push
aam
xor
stos
sbb
outsb
jo
mov
push
sbb
add
or
mov
jecxz
or
or
push
cmp
ljmp
mov
mov
push
push
gs
jno
ret
adc
adc
addr16
mov
dec
and
xorl
outsl
xor
xor
fwait
jmp
mov
or
lods
cs
dec
jnp
push
mov
mov
dec
add
jne
push
stc
stos
mov
push
sar
sarl
pop
dec
lods
push
push
xchg
push
or
mov
dec
mov
sbb
mov
inc
loopne
pop
pop
icebp
cmpl
mov
inc
add
add
or
pop
add
shr
mov
pop
push
cmpsl
mov
push
adc
push
cwtl
push
fdivl
inc
pop
xor
jo
fcompl
lods
fcomps
push
and
lods
test
mov
in
iret
add
add
push
fmuls
orb
cmp
sbb
sbb
cmpsl
mov
push
sbb
inc
add
mov
inc
roll
sub
sbb
pop
mov
or
pushw
xor
out
cmp
jle
inc
inc
bound
flds
imul
add
jnp
cmp
in
rolb
sub
jbe
cmpsb
push
cs
jne
push
jb
adc
repz
and
das
or
gs
push
pop
arpl
pushf
pop
jmp
jne
xrelease
pop
pop
add
js
in
or
pop
push
arpl
fistpl
in
insb
mov
or
mov
nop
cli
sbb
push
or
dec
mov
dec
jo
dec
sub
cmpsb
adc
inc
add
dec
aas
ljmp
lock
or
inc
jo
jne
inc
add
lcall
sbb
lret
cmp
mul
adc
dec
addl
in
imul
cli
add
les
lret
jne
call
test
push
add
dec
push
mov
or
pusha
lds
jo
sub
hlt
cmp
cmp
sarl
sbb
dec
sub
adc
testb
je
cmp
mov
pusha
add
or
ret
sub
scas
cltd
adcb
push
adc
add
fstp
cmpsl
xor
mov
sub
jno
js
xchg
cltd
push
cmc
or
ss
adc
lock
and
inc
or
jg
push
pop
mov
push
add
add
push
sub
loopne
jae
dec
pushf
movsl
mov
or
jmp
mov
sbb
mov
mov
jl
in
push
push
idiv
and
jne
jg
add
lock
subb
mov
dec
add
cmp
insl
or
add
pushf
jo
and
mov
pop
push
push
xor
shl
scas
clc
jg
inc
hlt
xchg
cmpsl
push
push
mov
sbb
or
inc
mov
or
pusha
mov
add
imul
add
ja
loop
push
push
call
and
mov
xor
push
jmp
xlat
pop
mov
and
scas
rcrl
std
add
data16
or
pop
xor
mov
rorl
stos
or
sbb
inc
imul
roll
add
cmpb
leave
jmp
loopne
inc
lock
push
sbb
jne
mov
inc
adcb
mov
bswap
lret
sub
jne
data16
cs
pop
fsubl
dec
or
add
rcr
xor
lret
jmp
push
dec
push
xchg
push
rcrl
xor
jmp
es
ficomps
icebp
mov
daa
pushf
inc
mov
int3
out
std
and
nop
inc
les
xor
jp
mov
ret
fisubrl
addr16
std
or
or
sub
es
fdivs
jne
cmp
pop
or
inc
push
sub
jns
or
jp
push
adc
sub
sbb
xor
lahf
icebp
out
dec
test
aaa
les
call
dec
inc
pop
in
xor
jbe
inc
loop
dec
shlb
js
add
sbb
push
and
xor
js
ja
sbb
fdivs
in
sti
sbb
jg
sub
dec
rorl
adc
sub
mov
pop
sbb
sbb
or
jo
jo
js
jmp
cmp
hlt
cltd
push
and
and
mov
es
pop
adc
add
fisttpll
push
fildll
pop
fwait
je
inc
and
out
xlat
lock
lcall
call
dec
jno
pop
mov
xlat
mov
jne
fists
addl
jmp
dec
jl
rcrb
and
adc
and
cmp
jl
dec
cwtl
arpl
push
push
cmp
push
cld
cmp
or
or
andl
add
xor
jo
add
dec
sub
inc
outsb
leave
mov
pusha
fnstenv
push
es
pusha
dec
adc
cmp
aam
adc
adc
in
int3
pop
mov
add
popa
mov
mov
jae
loopne
testb
jle
neg
ret
decl
movsb
adc
mov
bnd
mov
adc
or
hlt
mov
cmpsb
fisttpl
sub
aad
or
lock
sbb
dec
adc
arpl
frstpm(287
sti
test
adc
sarb
and
lds
cmpsl
scas
jl
fwait
in
dec
int3
or
cmp
pop
inc
stos
push
inc
cltd
cmp
ljmp
jns
push
push
jne
ds
mov
ljmp
mov
push
in
or
cmp
adc
test
adc
fwait
and
aas
pop
cmp
add
outsb
pop
in
imul
dec
dec
pop
and
adc
add
pusha
pop
ficompl
xchg
cmp
pop
ja
in
jmp
xor
xlat
scas
mov
push
cmpsb
fimull
ss
add
testb
int
and
dec
pop
jnp
mov
push
pushf
xchg
aaa
loop
inc
cmp
and
inc
add
mov
cld
pop
fs
inc
ds
fisubrs
fisttps
ja
cltd
mov
push
ds
jae
mov
adc
aas
adc
inc
pop
cmovns
repnz
stos
les
sub
dec
loop
je
sar
xor
faddl
pop
mov
arpl
subb
test
test
and
dec
pop
lret
cmp
lock
loopne
sahf
js
loop
push
sbb
ret
fildl
or
or
xor
adc
xchg
inc
out
mov
addr16
std
popa
ret
sbb
lock
jecxz
jnp
cmp
hlt
adcb
movsb
in
pop
or
js
inc
push
out
jb
mov
pushf
adc
pop
stos
inc
mov
dec
mov
scas
pop
inc
inc
jae
mov
sbb
lcall
out
jbe
rolb
test
add
cmp
aad
push
xchg
push
lret
mov
or
inc
sarb
jbe
inc
rcr
stos
mov
mov
cmpsl
jno
fsubr
pop
inc
inc
inc
adc
cmp
in
pop
clc
das
pusha
popf
adc
add
push
out
shll
cmp
cmpsl
add
push
out
sahf
out
pop
test
jp
adc
sub
mov
dec
or
je
mov
cmp
push
bound
push
mov
add
sub
fptan
sub
push
cltd
movsb
or
push
mov
dec
push
and
dec
push
dec
pusha
add
insb
sbb
adc
push
cmpl
pop
sbb
sbb
lahf
pop
je
jmp
or
push
dec
cmp
xchg
sub
out
mov
jns
and
dec
lds
add
pop
incb
sub
or
jmp
and
mov
call
cmp
xor
testl
mov
inc
cmp
or
mov
xor
cmp
sbb
add
fdivl
push
mov
dec
inc
pop
pop
or
mov
sbb
add
push
gs
mov
xor
push
out
dec
add
xor
push
or
mov
adc
mov
or
pop
inc
inc
mov
dec
sbb
add
sbb
dec
push
stc
imul
sub
inc
cld
ss
cmp
xchg
sub
cmp
lahf
pushf
mov
mov
mov
leave
xlat
dec
push
push
int
data16
push
xchg
adc
mov
cmpsl
and
adc
jmp
inc
movsb
jne
cmp
adc
mov
cmp
inc
loop
sbb
sarl
cmp
pop
testl
imul
insb
xchg
pop
ja
dec
je
and
jno
add
push
inc
xor
lods
dec
mov
int
and
and
or
arpl
mov
clc
shlb
add
mov
cmp
jmp
adc
shrb
jle
rcrb
inc
addl
and
dec
add
sbb
pop
cmp
fldl
test
fdivs
add
inc
hlt
xchg
lock
cltd
or
stmxcsr
cmovnp
jne
jae
inc
adc
and
mov
and
dec
test
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
push
lahf
jo
lret
je
mov
adc
lret
or
jg
mov
fstl
jnp
mov
adc
sub
stos
rcr
aam
ret
or
add
adc
xchg
jnp
ja
fimuls
pop
add
sahf
divb
add
pop
jo
divl
enter
mov
fcmovb
sbb
notl
push
dec
sbb
pop
push
in
bound
leave
inc
cmpsl
nop
sbb
adc
jne
ja
mov
mov
adc
loop
add
lret
int3
xor
push
js
sub
mov
lea
sub
pop
repnz
leave
test
xor
push
mov
jmp
ret
jge
mov
xchg
xchg
jb
xor
in
gs
sbb
icebp
jp
jnp
add
and
adc
ret
rcr
and
xor
adc
ret
and
fucomip
add
dec
mov
bound
mov
mov
sbb
insl
lods
je
push
mov
xchg
mov
call
cmp
mov
inc
inc
fsubrs
ja
jle
mov
cmp
mov
subb
mov
mov
cmp
jne
jb
sbb
subb
lds
xor
es
adc
popf
and
jle
add
mov
shrb
cmpsl
out
mov
sbb
mov
xchg
ss
sbb
call
inc
sub
jne
popf
sahf
dec
mov
sbb
or
mov
out
mov
xchg
sub
fcomi
and
sub
in
stc
arpl
jmp
push
add
xor
test
lret
xchg
push
push
mov
sub
dec
push
incl
test
adc
jne
inc
cmp
push
xor
pop
or
adc
mov
dec
cltd
fmuls
je
inc
sub
cs
adc
push
adc
push
and
jmp
and
push
das
out
addb
xchg
push
lods
rorl
cmp
cmp
cmpsl
sbb
or
add
mov
out
sbb
adc
lcall
push
lret
cmpsb
cmp
adc
or
xor
out
add
mov
out
testl
mov
sub
andl
icebp
in
imul
clc
xlat
in
hlt
cmp
cmp
jg
icebp
out
fiadds
adc
xlat
enter
sbb
ja
cmp
lea
shl
shlb
dec
leave
shll
xchg
hlt
sbb
lock
inc
pop
cmp
inc
shl
mov
mov
shll
mov
inc
inc
cmp
aam
pop
pop
mov
lret
jne
sbb
js
loope
jg
jmp
jnp
test
aad
out
mov
add
add
mov
sti
jl
add
jmp
inc
mov
pop
dec
out
insl
andnps
nop
cltd
xchg
xchg
movsl
and
stos
and
or
out
testb
or
orl
inc
repnz
scas
pop
or
adc
xchg
lock
push
inc
adc
aad
cmp
mov
cltd
jne
inc
pop
repnz
xor
pop
scas
jbe
fiaddl
cld
dec
adcb
pusha
lea
stos
mov
js
xchg
push
loopne
ja
repnz
or
adc
sub
sbb
pop
mov
pop
ret
and
sbb
and
add
ror
loopne
jne
idivb
dec
nop
mov
cs
mov
leave
jle
or
sub
fisttps
push
adc
push
je
sub
ds
add
dec
or
scas
cmpl
inc
scas
push
imul
je
bound
inc
pop
push
testl
add
lcall
rcr
mov
jbe
push
xor
nop
adcl
div
jae,pn
or
or
lahf
inc
imul
inc
pop
xor
inc
jle
cmp
and
lock
popf
adc
fidivs
sub
mov
movsl
push
into
cmc
add
imul
arpl
sub
fistpll
loop
pop
pop
mov
leave
outsb
pushl
mov
mov
in
je
loope
aam
fwait
jle
push
jo
cmp
aad
push
addr16
mov
decl
sarb
int3
xor
xor
lock
insl
dec
sbb
jns
pusha
jb
inc
ret
lds
adc
js
xor
divb
ljmp
cmp
cmp
adc
movsb
movsb
cli
sbb
pusha
mov
scas
pop
inc
lds
and
stos
outsl
stos
inc
push
mov
mov
jbe
inc
push
sub
mov
adc
add
pusha
jb
add
fcompl
push
test
lock
mov
sbb
sbb
mov
mov
cmc
popa
inc
lret
ja
pop
pop
imul
les
jo
and
xchg
push
fdivr
in
ljmp
cmp
jb
push
sahf
mov
sbb
ss
jp
insb
lods
push
adc
xlat
test
cltd
xchg
rolb
cmpb
cmpsb
fdivr
ret
mov
sub
or
out
popa
pop
pop
push
in
push
jecxz
sub
lds
mov
idivb
shlb
out
test
popa
into
push
repnz
sbb
pop
add
xchg
je
add
fscale
lods
jnp
push
or
lret
mov
insb
imul
pop
add
mov
mov
push
and
mov
adc
xor
and
mov
mov
loopne
dec
sbb
xor
sbb
adc
ds
push
adc
mov
inc
rorb
or
sbb
mov
jns
ja
pushf
push
aas
push
jp
push
add
inc
clc
xor
push
inc
ret
xchg
scas
inc
pop
add
lock
push
test
jb
push
dec
push
clc
ret
and
les
jmp
inc
loope
and
add
adc
lcall
or
and
aam
pop
jo
dec
ret
pop
in
inc
loop
movsl
stc
arpl
bnd
adc
imul
inc
xor
push
shlb
stos
popf
dec
add
jl
push
les
inc
cwtl
fs
pop
cmp
out
xlat
ret
add
cmp
sub
push
ljmp
xchg
into
mov
dec
mov
in
mov
adc
pop
roll
cmp
pop
int
push
inc
dec
inc
daa
bound
dec
xchg
stc
push
psubw
adc
add
cmpsb
jge
pop
mov
jle
scas
push
mov
mov
and
and
pop
and
test
inc
pop
push
inc
dec
cmp
cmp
rorl
mov
jge
xchg
and
push
jl
cmp
pop
idiv
scas
imul
xor
popl
movsb
stc
jo
loopne
dec
bound
lahf
daa
mov
push
xor
push
pop
movsl
push
adc
and
mov
popa
dec
and
dec
mov
iret
mov
inc
dec
or
pop
in
or
adc
into
in
sbb
cltd
cmc
xor
or
cmc
sub
shll
adc
xor
xor
xor
sub
cld
and
bound
ret
lea
cli
jbe
mov
adc
imul
pop
add
add
iret
xor
daa
add
adc
and
dec
add
jno
jle
pop
enter
add
add
inc
add
push
nop
push
xchg
pop
push
pop
movsl
test
or
mov
iret
or
dec
or
enter
sub
or
mov
pop
or
cs
in
loop
or
or
in
repnz
in
cmp
push
push
nop
adcl
mov
pop
mov
adc
pusha
testb
adc
xchg
adc
jns
movntq
adc
jns
cmpsb
bnd
adc
lcall
adc
mov
push
push
push
inc
enter
pop
pop
xor
sbb
lcall
sbb
sbb
iret
in
add
sbb
jns
sbb
sbb
sbb
push
sbb
je
pop
sbb
and
jmp
bound
sbb
or
push
push
inc
jg
cmp
push
pop
pop
jne
add
add
test
cli
cmp
jle
stos
jg
pusha
sti
movl
xchg
ds
dec
and
orb
out
std
pop
or
in
push
in
jno
repnz
sub
jnp
out
rol
lea
aad
cmp
cmp
enter
out
cmp
add
adc
jb
add
call
adc
dec
dec
cwtl
jmp
mov
ror
jmp
jmp
pusha
xorl
pop
enter
in
inc
in
sahf
jb
cmp
out
out
jge
adc
out
sbb
pop
push
nop
inc
lcall
jns
icebp
icebp
ucomiss
nop
addr16
std
repz
repnz
leave
std
hlt
push
fdivs
cmpsl
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
sbb
iret
div
pop
notl
test
idivl
std
clc
xchg
add
dec
clc
clc
cltd
adc
cmpb
pop
and
enter
sbb
fcoml
stos
cld
cld
cld
je
and
setns
std
xor
sbb
inc
sahf
out
adc
ret
inc
or
inc
sbb
sbb
xor
in
cmp
pop
cmpsb
adc
jecxz
fsubp
add
jecxz
std
sti
in
in
adc
inc
sbb
daa
inc
or
xchg
sti
out
out
lea
out
outsb
call
push
dec
sti
sub
rcrb
sbb
repnz
in
repnz
mov
cmp
js
out
xchg
add
dec
out
out
cltd
push
pop
leave
and
push
in
rcll
fsubs
dec
repz
sar
sbbl
leave
push
stc
fstpl
cmpsb
jb
stc
div
negl
loop
cmp
xor
add
xchg
cmp
stc
out
clc
rclb
cmp
outsl
in
or
inc
cld
in
mov
orl
call
dec
dec
and
push
xlat
dec
dec
movsb
cld
sub
mov
mov
repnz
mul
pop
mov
inc
repnz
scas
notl
cmp
jg
mul
sbb
imul
or
in
repnz
mull
notl
inc
mov
sti
imul
jb
or
jno
testb
mulb
pusha
leave
xchg
negb
int
out
jno
inc
pop
lret
inc
negb
mulb
andb
pop
lcall
mov
pop
xchg
cmc
pop
dec
pop
and
cmc
pop
mov
cmc
div
idivb
fwait
and
push
add
clc
clc
adc
stc
popa
cmp
mov
inc
pop
lret
and
and
hlt
sbb
das
pushw
data16
dec
scas
mov
jge
jo
push
or
sti
lahf
pusha
adc
or
test
loope
sub
loope
push
mov
adc
loop
scas
repz
popa
leave
mov
test
xchg
cmpsb
in
repz
and
and
adc
xchg
pop
push
sbb
jmp
leave
and
mov
mov
sbb
dec
in
in
cmc
scas
adc
and
repnz
orl
sbb
mov
mov
add
divb
icebp
mov
inc
xlat
jb
test
dec
push
cmp
cmp
inc
jb
sbb
add
pushf
mov
ffree
lock
or
push
jno
imul
je
dec
push
lock
scas
inc
add
sbb
inc
repnz
fldl
ss
inc
enter
scas
add
sub
out
jne
pop
xor
adc
cmovno
push
add
add
mov
cmp
add
push
fwait
push
jnp
and
xchg
adc
jne
adc
add
and
add
sahf
and
ljmp
cmc
pop
add
and
idivb
mov
adc
add
sbb
jmp
repz
and
adc
pop
lret
pop
dec
data16
das
cmp
mov
int
sbb
push
xor
sbb
mov
sbb
cmpsl
pop
repz
lcall
push
dec
loop
add
testb
add
dec
and
and
out
add
fcomi
decl
jle
rolb
add
xor
faddl
andl
xor
jb
test
mov
lcall
add
pop
int
lret
sub
and
std
cld
add
and
pushf
add
dec
push
adc
push
dec
mov
push
shlb
lock
jg
xchg
lock
cs
mov
push
add
into
or
cmp
cmp
dec
sbb
clc
push
fstps
pop
les
nop
addb
adc
neg
or
adc
or
orb
or
jo
filds
fmuls
and
add
inc
test
repz
arpl
addr16
pop
or
test
sbbl
repnz
adc
fcmovnbe
inc
mov
mov
jg
decl
add
sub
dec
incl
aad
push
cmpl
mov
adc
cwtl
jl
neg
inc
adc
pop
and
imul
sbbl
adc
pop
sub
les
stos
mov
cmpsl
lea
pop
roll
nop
push
or
sbb
push
loopne
loope
push
rcll
inc
mov
add
mov
sub
in
inc
or
dec
jae
add
adc
or
or
and
xchg
pop
sbb
mov
inc
add
cmp
mov
xor
and
jne
notl
inc
mov
pop
ja
add
jp
mov
inc
inc
inc
inc
xor
adc
add
enter
sub
jb
ret
mov
imul
inc
and
roll
mov
mov
cmpsb
inc
stos
mov
and
rcr
shrb
mov
jne
cmpsb
or
jo
cmp
cs
je
pop
roll
sub
pop
mov
inc
inc
pop
cmp
enter
mov
sarl
add
adc
xchg
in
je
insb
push
pop
aad
ret
mov
xor
inc
xchg
insl
and
inc
movsb
pop
add
cli
aaa
xchg
and
inc
jo
add
sbbl
push
push
lea
push
or
mov
and
arpl
mov
inc
out
out
xchg
push
sub
pop
out
xor
inc
jne
jg
lea
cmp
jne
orl
add
adc
jne
sub
pusha
gs
or
xchg
xor
jg
mov
push
xor
fwait
in
jmp
mov
sub
mov
adc
or
mov
pop
jne
dec
add
add
lds
sbb
xor
and
dec
lret
or
div
lahf
add
sub
xor
sbb
je
clc
jg
decl
cmp
cs
and
adc
sbb
mov
xor
daa
movsb
popa
sub
add
dec
adc
pop
test
filds
mov
dec
pop
pop
push
imul
fprem1
cmp
mov
sbb
mov
inc
inc
push
ja
lret
mov
inc
mulb
es
clc
inc
xchg
ret
mov
pop
fwait
pop
lods
jbe
add
les
xchg
in
rolb
sbb
mov
jno
mov
pop
adcl
je
test
cmp
adc
cmp
add
push
iret
add
cmp
aas
popa
push
sub
or
and
aas
lods
cld
fisttpl
sbb
ret
sub
out
lea
lret
rolb
inc
outsb
pop
mov
testb
jns
cmp
jne
mov
push
cmp
jne
fwait
jns
fwait
es
jne
call
ljmp
xchg
cs
lahf
testl
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
push
dec
iret
or
sub
test
mov
push
pop
pop
mov
ret
mov
or
lods
mov
mov
sub
mov
adc
repz
lret
or
scas
pop
lds
leave
jns
ret
das
cmp
adc
inc
loope
and
jnp
adc
fwait
std
or
xor
or
push
testb
and
addl
dec
rorl
adc
in
cmp
xchg
enter
out
adc
icebp
add
ret
adc
push
jg
popa
scas
push
add
sbb
fimull
push
pop
add
cmpsb
add
repz
mov
shl
and
rcll
or
adc
inc
push
stc
aad
hlt
subb
push
adc
rcrl
ss
adc
mov
or
mov
push
jmp
xlat
mov
push
dec
outsb
out
jns
xor
add
jmp
dec
push
lcall
sbb
imulb
push
cwtl
ja
add
add
sbb
enter
dec
mov
sbb
dec
cmp
lea
mov
mov
mov
sbb
adc
hlt
jae
dec
pusha
mov
lret
clc
add
jecxz,pn
icebp
call
mov
mov
xchg
mov
dec
stc
imul
stos
add
testb
mov
sahf
xor
dec
loop
out
pop
nop
or
out
sbb
cmp
mov
test
push
mov
sbb
jge
mov
adc
xchg
sub
sub
add
and
dec
adcb
in
sar
dec
mov
pusha
shrl
int3
add
push
fisttpll
push
add
lret
add
addl
faddl
xor
cmp
and
pop
pop
mov
scas
push
pop
test
sbb
movl
ljmp
xchg
cmp
jb
rep
jmp
shrl
jb
int
ss
addb
xor
jnp
repnz
movsb
push
sub
sbb
mov
lret
add
xor
scas
adc
stc
rcrb
lea
dec
add
in
dec
movl
mov
add
repz
push
jo
push
sahf
out
aas
mov
mov
call
out
in
lock
hlt
xor
clc
clc
cld
cld
push
insb
mov
lock
fldcw
mov
push
mov
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
xor
neg
and
fimuls
sub
fldt
nop
inc
push
push
xchg
add
out
add
xchg
add
mov
add
dec
dec
addr16
add
je
add
push
je
stc
cmp
pusha
in
in
push
hlt
cld
add
sahf
pop
lahf
cmpsl
or
daa
xor
sbb
jns
out
sbb
adc
adc
jns
out
or
or
aaa
inc
inc
sahf
add
inc
inc
or
push
pop
insb
xor
push
add
xor
pop
sgdtl
mov
and
bnd
push
dec
cli
sti
pop
xor
mov
mov
incl
inc
decl
jne,pn
pop
pop
ljmp
push
cld
cmp
in
or
xor
jbe
push
cltd
pop
idiv
add
mov
pusha
inc
call
adc
bound
out
aaa
dec
mov
mov
xor
xor
xchg
es
jmp
cmp
jae
dec
out
hlt
inc
fcompl
jae
pop
jbe
mov
dec
les
pusha
add
sub
push
call
hlt
cmp
fldl
pop
cmp
mov
inc
add
push
jg
push
mov
aaa
dec
sbb
add
movsl
test
or
dec
popa
stos
std
sbb
dec
dec
je
push
push
fdivr
inc
mov
jl
pop
roll
and
xor
inc
cmpsl
pop
imul
out
or
push
mov
inc
es
sbb
mov
pop
push
das
sbb
mov
add
add
and
filds
jbe
push
add
addb
pop
add
push
jo
dec
adc
testb
adc
pop
mov
pop
sbb
sbb
data16
aaa
fs
jmp
cmp
sbb
sub
sub
insl
or
js
aaa
aas
jge
push
push
cltd
pop
push
decb
xor
xchg
inc
out
cmp
and
stos
jmp
or
sub
mov
ret
pop
imul
fs
mov
push
mov
adc
fs
jmp
jl
mov
sbb
call
out
push
mov
or
je
insb
sub
sbb
clc
inc
sbb
sbb
sbb
sub
dec
into
mov
adc
pop
incb
inc
jns
shll
mov
pop
incl
pop
sti
cmp
mov
pop
sub
xchg
rolb
xlat
add
add
add
jae
lcall
push
ror
sub
push
cmp
test
push
jmp
jge
cltd
jecxz
jl
je
sbb
pop
adc
jl
fs
sti
gs
jle
pushl
mov
mov
inc
enter
in
fcomip
lock
je
dec
inc
add
dec
jne
mov
push
or
inc
jl
in
xchg
inc
push
loop
lcall
pop
popl
mov
lods
and
sti
popf
pop
push
mov
or
cmp
ret
dec
inc
cmpsl
push
inc
imul
mov
or
mov
xchg
inc
jmp
push
pushf
inc
dec
jb
lds
sbbl
and
add
inc
loopne
mov
ret
push
je
mov
cmpb
sbb
jecxz
pop
cmpl
push
sbb
jge
loop
lock
rcll
jne
push
hlt
mov
les
push
adc
lretw
jns
adc
inc
adc
or
out
scas
dec
fdiv
call
push
jbe
pop
sbb
mov
xorl
shlb
ljmp
xchg
rorb
nop
push
xchg
fnstcw
imul
ret
cld
mov
mov
add
mov
sbb
xchg
push
push
sbb
add
push
cmp
jg
jbe
cltd
mov
fs
gs
push
dec
adc
inc
dec
mov
mov
mov
cld
fidivl
rolb
stos
inc
inc
cmp
adc
loopne
je
xchg
mov
cs
cli
orb
adc
add
rclb
fidivrl
dec
je
std
aam
dec
and
mov
or
and
and
jo
and
outsl
mov
les
mov
incl
incl
scas
xchg
mov
push
inc
sbb
xchg
sub
adc
and
lret
pop
or
neg
lods
mov
sub
mov
or
pop
mov
sbb
or
xchg
gs
or
push
leave
rolb
jmp
mov
push
mov
adcb
or
xchg
cli
add
test
adc
test
cmpsl
sbb
and
cmp
je
mov
popa
mov
adc
add
shll
fildl
jno
adc
pop
push
pop
inc
xor
adc
popa
rcrl
or
push
dec
add
cli
frstor
in
dec
subb
pop
shrb
hlt
jb
insb
xor
mov
adc
fildl
fsubrs
cmp
ror
add
push
or
lea
cmp
and
jmp
dec
jnp
cmovge
or
sub
add
add
push
dec
sbb
add
mov
add
pop
jmp
push
in
orb
and
mov
in
pushf
lcall
mov
subl
loopne
es
and
gs
add
insl
loopne
pop
or
sbb
out
hlt
movsl
push
fwait
and
jp
lahf
jge
inc
sbb
cmp
je
push
stos
data16
pop
push
lods
cmp
sub
sbb
mov
pop
add
push
sbb
repnz
divl
add
jmp
cmp
pop
jo
fs
inc
or
inc
inc
out
addb
aam
pusha
mov
xorl
sbb
sub
cltd
sub
call
xor
xor
inc
and
mov
jmp
ja
add
sbb
jmp
aas
sub
inc
push
sbb
pop
push
mov
gs
enter
decb
leave
leave
pop
enter
add
add
xchg
adc
sub
in
fldz
push
xor
mov
mov
adc
or
movlps
xor
xchg
movsl
test
pop
and
or
sub
mov
clc
adc
int
add
cmp
rclb
fchs
popf
mov
stc
push
jle
add
mov
add
mov
insl
ds
jmp
pop
arpl
push
data16
cmp
xor
sbb
mov
flds
cpuid
mov
mov
les
cmp
ja
fs
pop
fwait
or
cld
adc
les
adc
daa
fadds
shrb
orb
sbb
inc
inc
add
jl
or
dec
notl
jbe
js
inc
pusha
leave
jbe
jg
push
pop
add
pop
mov
adc
xchg
shl
add
push
xor
fsubrs
push
mov
or
bound
cmpsb
xor
or
sbb
or
cmpsb
in
and
push
sub
icebp
into
sbb
sub
inc
sub
add
or
shlb
cmp
mov
aam
pushf
enter
push
aam
sub
enter
jmp
mov
pusha
lcall
rcrb
inc
lcall
aaa
jo
mov
inc
and
jl
fs
insb
jmp
push
sub
ret
lret
mov
adc
cmp
inc
or
push
add
cmp
xchg
pop
das
sbb
adc
stc
dec
cld
arpl
imul
cmp
cltd
dec
ja
jne
lock
sub
inc
xlat
into
clc
cmpsb
je
mov
adc
adc
jge
cmp
cmp
or
push
rcrb
sbb
and
sbb
ja
outsl
jmp
scas
jbe
cmpl
js
mov
or
or
fildl
in
mov
add
or
insb
pop
push
jle
repnz
inc
xchg
outsl
sub
jo
dec
xchg
jg
push
add
jne
pop
adc
ficompl
icebp
jmp
add
cmp
mov
inc
jmp
rcrb
rcrl
mov
add
inc
mov
out
sub
call
dec
lds
pusha
sbb
adc
aaa
cwtl
or
sub
fs
sti
or
sub
icebp
and
hlt
sub
or
decl
mov
inc
pop
xor
inc
cwtl
imul
addb
push
pop
fdivs
test
xor
push
aas
icebp
push
add
xchg
push
add
sbb
or
pop
and
mov
pop
lock
cltd
rcrb
and
shlb
notl
cmp
cmp
ja
xor
adc
jo
push
sub
shrb
neg
mov
mov
cli
or
add
jmp
cmp
sarb
jbe
pop
cmp
jb
add
jb
icebp
idivb
dec
mov
mov
dec
dec
mov
inc
add
add
or
dec
loope
fistl
jne
mov
hlt
or
add
dec
loopne
test
cwtl
movsb
inc
aad
cmp
in
sbb
adc
data16
rorl
movsb
sarb
add
cmp
xor
inc
cmp
movsl
dec
mov
cmp
jg
add
mov
scas
in
xchg
adc
orl
lret
inc
xor
adc
insl
rclb
mov
and
test
pop
and
jae
int3
gs
inc
fdiv
in
mov
sub
xor
pop
add
and
xlat
xchg
mov
add
lock
dec
or
pusha
lock
lods
pop
push
clc
pop
mov
push
lret
adc
mov
xchg
pop
pop
push
daa
sub
add
test
je
nop
sub
lcall
repz
bound
nop
dec
pop
mov
ret
test
add
cmp
pop
sub
orb
clc
dec
add
mov
add
mov
jle
inc
nop
sub
in
push
adc
push
pop
dec
ss
adc
jo
rolb
sti
inc
pop
imul
inc
ret
es
add
and
mov
dec
push
xor
add
mov
call
or
movsl
xor
frstor
adc
fists
lods
adc
jmp
rolb
cmp
jae
inc
inc
cs
jo
and
and
stc
sub
inc
call
push
xchg
dec
adc
and
adc
mov
gs
out
cmp
xor
das
daa
fimuls
sbb
cwtl
or
pop
add
pop
adc
push
add
rol
adc
mov
sbb
sub
std
add
dec
loopne
push
clc
add
fldl
adc
sub
and
inc
dec
add
ljmp
or
mov
fstl
rorb
test
adc
aad
movsb
mov
pop
dec
pop
pop
aas
sbb
sbb
add
cld
or
or
sbb
push
inc
bound
lock
add
sub
mov
push
sub
into
add
pop
jnp
filds
add
iret
xor
rcrl
mov
pushf
jb
ss
inc
mov
inc
je
add
lcall
pop
push
lods
add
xchg
xchg
dec
or
pop
fimull
inc
xor
xlat
repnz
loop
jmp
in
jl
jg
pop
fdivrs
mov
and
add
push
cmp
cmc
cmp
mov
mov
inc
in
cmp
sub
mov
rcll
and
shrl
lock
push
cmp
sbb
adc
and
add
adc
pop
or
testl
enter
mov
and
lock
cmp
or
push
lods
lret
test
test
xchg
pop
sub
lock
or
push
sbb
and
mov
jle
or
sbb
sbb
cmp
sub
dec
push
lods
pop
inc
popf
mov
inc
mov
stos
mov
loopne
movl
cmp
xor
pop
pop
add
cmp
mov
xor
adc
fcompl
sbb
sbb
xchg
mov
es
adc
xchg
popf
call
inc
push
mov
pop
add
shll
sub
jl
icebp
idivb
pop
or
add
lret
or
push
or
dec
pop
inc
cmp
inc
xchg
fs
rclb
std
add
icebp
shlw
mov
adc
jl
add
sbb
into
pop
sub
mov
movl
jne
lea
cmp
or
stc
popa
loopne
mov
push
inc
jl
pusha
mov
fdivrl
jp
sti
mov
ljmp
test
push
movb
frstor
lea
sub
in
ja
sub
aam
and
rclb
cmp
inc
sbb
in
fdivr
cmp
repnz
push
lea
hlt
imul
lock
inc
inc
cld
scas
sbb
and
jo
cmpsb
sbb
fstpt
decb
add
orb
mov
aas
movsl
jb
je
and
mov
adc
ret
or
mov
jge
ficomps
lods
leave
sub
mov
mov
add
and
mov
mov
push
roll
jl
in
jae
ljmp
inc
xor
push
ret
stc
insb
fstps
xlat
mov
cmc
sub
mov
test
idivb
jl
pop
pop
or
ja
test
and
adc
or
hlt
cmp
or
xchg
lahf
inc
cmc
jno
add
jns
mov
pusha
test
rorb
jmp
mov
ljmp
jl
xchg
push
movl
cld
cmp
cmp
cmpsb
push
cmpsb
push
sbb
aam
in
in
xchg
inc
cmp
std
jne
mov
jmp
sub
stos
or
cmp
icebp
add
sarb
add
add
push
mov
mov
lcall
mov
sbb
iret
sbb
xor
sbb
lock
out
into
std
fidivl
mov
jo
push
jmp
dec
dec
pop
adc
push
ljmp
fdivl
mov
stos
decb
inc
sbb
inc
rolb
jle
sub
mov
cmp
jbe
add
in
loope
decb
add
or
pop
leave
inc
inc
lea
dec
in
leave
xor
or
into
sub
nopl
jb
fs
adcb
mov
out
inc
cmp
ljmp
inc
shlb
outsb
jle
pusha
inc
data16
add
jb
mov
push
cmp
or
insl
and
adc
cmp
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
cmp
ds
add
jle
ja
movsb
xchg
push
inc
push
mov
inc
or
inc
dec
jne
xchg
dec
xor
imull
add
sub
and
gs
jnp
test
pop
xchg
lds
xor
dec
push
pusha
jns
ds
and
loopne
adc
add
inc
mov
jno
pop
push
popa
push
test
and
imul
rcr
roll
clc
mov
add
xor
js
sbbb
loopne
push
sub
push
inc
adc
and
inc
push
mov
cmpsl
cltd
inc
push
lcall
repnz
or
inc
adcb
shll
mov
mov
push
sub
xchg
pop
adc
icebp
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
jmp
andb
ss
imulb
jmp
adc
jno
es
inc
or
xor
fcmovbe
and
scas
add
add
jae
into
in
leave
cmpl
daa
mov
std
and
pop
movl
jb
push
mov
fisubrs
cmp
es
pop
cmp
lods
lret
lret
mov
mov
imul
and
nop
mov
loopne
lahf
sahf
xchg
out
lods
das
adc
push
rcl
sbb
sub
or
subb
and
lods
sbb
mov
pop
push
mov
loopne
pushw
cwtl
sub
inc
int3
dec
ljmp
xorl
and
clc
push
clc
adc
bound
mov
sahf
inc
add
add
decl
jne
sbb
push
xor
xchg
cmp
xchg
add
push
sbb
mov
lea
inc
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
mov
push
xor
addr16
sub
and
pop
pop
mov
push
imul
cmp
xor
mov
pop
in
clc
push
cmpb
xchg
add
sbb
push
test
dec
jle
sbb
inc
push
cwtl
jo
insb
loope
orb
xor
inc
add
cltd
and
shlb
adc
mov
jmp
push
ficomps
sbb
inc
pop
mov
mov
xor
mov
sbb
cmp
shlb
cmp
daa
mov
pop
adc
gs
cmc
pop
jb
mov
push
mov
xorb
xor
pusha
add
cmc
add
test
insw
lret
call
fstps
and
cwtl
loope
and
add
mov
or
aas
push
pop
setg
shrb
jmp
dec
andb
pop
inc
ss
pop
dec
push
pop
mov
shrb
les
mov
sti
fstpt
loopne
insb
push
cld
push
jo
gs
or
mov
jne
xorb
mov
or
xor
andl
cmp
sub
cmpsb
insb
or
in
push
bound
lret
flds
shll
push
outsl
or
inc
cmp
pop
in
inc
clc
dec
jl
mov
inc
ret
dec
push
cmpsl
test
cmp
add
xchg
test
in
dec
mov
mov
or
xor
push
add
rol
jecxz
frstor
adc
inc
sbb
popa
out
rep
iret
test
sbb
dec
add
sub
sbbl
sbbl
cmp
int3
xchg
and
jle
cwtl
data16
dec
push
ud0
xchg
inc
jmp
ds
add
aad
insb
and
in
stos
mov
je
jle
or
jne
inc
test
insb
mov
shll
addl
test
sbb
add
mov
test
in
jbe
mov
cwtl
sarl
cmpl
leave
test
push
adc
pushf
cmpsb
and
popf
dec
cmpsl
iret
daa
test
ljmp
ja
adc
mov
adc
mov
imul
sub
inc
mov
pop
pushf
cwtl
mov
and
fxch
rcrl
std
mov
push
xchg
pop
inc
ret
jne
sub
add
test
rorb
mov
das
mov
outsl
sarb
add
mov
sub
dec
jp
and
movsl
xchg
ss
dec
lea
xor
das
mov
movsl
popf
cmpsb
or
sub
loopne
gs
fcoml
shl
in
addr16
clc
or
repz
in
les
popl
test
lea
sarl
enter
dec
cld
adc
cmp
pop
aam
xchg
pop
inc
nop
inc
mov
push
nopl
jno
xchg
or
jecxz
sub
mov
add
pop
jmp
test
js
jmp
jge
sar
rorb
filds
hlt
sbb
push
mov
aas
or
adcl
filds
icebp
mov
lcall
mov
je
js
adc
mov
negl
pop
fcomps
or
mov
fstl
stos
inc
pop
xchg
iret
repz
or
push
and
adc
add
mov
pop
iret
imul
push
push
mov
loopne
cmpsl
sbb
push
nop
pop
in
pop
sub
adc
pop
nop
pop
and
loopne
loopne
sahf
imull
mov
or
push
movsb
lods
sbb
xlat
pop
outsl
xchg
or
add
jl
or
pusha
pop
xchg
dec
or
xor
test
pop
loop
je
push
push
cs
push
xchg
arpl
out
icebp
clc
sarl
inc
jmp
mov
js
or
add
out
add
xor
inc
xchg
cli
dec
mov
int3
xchg
and
jns
inc
mov
jge
inc
mov
add
cmp
hlt
sbb
scas
into
mov
pop
and
adc
aam
cmp
cmp
and
adc
jmp
add
add
and
mov
jle
ret
idivl
aas
and
mov
imul
mov
test
push
sbb
faddp
adc
or
add
cmc
or
enter
mov
aas
or
inc
or
je
aad
mov
xchg
dec
dec
adc
mov
xchg
sub
push
pop
jl
or
adc
push
imul
add
gs
jmp
addl
mov
je
shlb
sbb
and
xchg
pusha
jnp
jne
or
push
adc
data16
sbb
jbe
push
sub
mov
xor
lock
sbb
adc
push
mov
das
xor
nop
mov
outsb
cmp
add
sbb
out
cmp
push
xchg
xchg
dec
wrmsr
aam
inc
sbb
add
sub
loope
mulb
ja
mov
call
in
movl
addr16
fmuls
push
mov
mov
add
and
cmp
and
xchg
test
xor
pop
xchg
and
jl
ljmp
mov
pop
xchg
outsb
hlt
sbb
insl
or
cmp
and
pop
ret
or
mov
add
add
add
or
lea
inc
in
or
sub
lea
inc
cmp
rorb
shrl
add
push
pop
std
leave
inc
bound
int3
push
es
inc
imul
inc
adc
jmp
mov
jmp
push
adc
and
mov
and
and
ret
push
shrb
inc
sarb
dec
out
mov
icebp
inc
mov
and
ds
or
test
mov
fcoml
and
add
mov
mov
inc
pop
aaa
and
es
ss
call
mov
test
lcall
cltd
adc
jbe
push
dec
inc
movsl
jo
shrb
push
fsub
in
dec
and
mov
pop
inc
ret
sbbl
adc
pop
divl
in
or
pop
push
fisttpll
push
icebp
ds
mov
dec
xchg
jecxz
aad
dec
jle
push
push
jne
pop
cmp
dec
ljmp
jns
or
push
es
sub
ret
cli
add
add
inc
inc
jp
mov
imul
je
xlat
cmp
sub
ret
and
ljmp
xor
push
lock
sbb
mov
pop
test
divl
or
push
push
loopne
cmpsl
push
sbb
dec
pusha
xchg
jle
les
push
pop
rorl
nop
xchg
adc
push
lea
push
jg
popa
fisubl
pop
xchg
lea
jg
jne
pushf
xor
repnz
jmp
push
xchg
leave
jge
movsb
sti
je
inc
jns
adc
cmpl
jo
xor
shll
pop
inc
mov
je
pusha
mov
fstps
push
lea
popf
in
in
pop
mov
std
je
xchg
fadd
fsubs
mov
jne
xor
pop
push
frstor
xchg
pop
mov
jae
fldl
bound
repnz
mov
leave
test
in
inc
ret
pop
stc
or
add
push
and
rclb
mov
lea
jle
ja
or
movsbl
rcpps
fucomip
aam
test
push
clc
add
mov
lea
cmp
fimuls
xor
pop
or
aam
scas
sarl
lret
xor
mov
mov
or
fs
jmp
scas
pushf
pop
or
add
inc
lret
in
xor
loopne
int
nop
cli
xchg
sub
push
mov
cs
aam
jo
aas
mov
add
sub
push
imul
dec
lock
lret
or
ja
movsl
leave
test
add
cmp
out
sbb
shl
cmp
push
or
inc
pushf
shll
je
lock
cmc
mulb
adc
popa
lds
adc
addr16
outsb
xlat
scas
sbb
pop
and
sbb
jle
xor
mov
scas
mov
jg
lcall
jb
or
imul
outsl
cmc
jne
inc
lcall
les
mov
or
push
shlb
pop
inc
fs
imul
rorb
push
sbb
jae
mov
jle
inc
je
pop
push
or
mov
inc
add
mov
ret
add
hlt
adc
dec
push
fdivr
or
lock
cmp
push
jae
add
test
aam
test
imul
das
pop
push
scas
mov
add
gs
sub
loope
sbb
fs
test
mov
jo
lcall
imulb
test
and
jne
jle
push
mov
cmp
inc
push
insl
cmp
jl
xor
mov
int3
negl
push
inc
pop
cmpsl
scas
xor
dec
lret
or
push
aam
sub
and
pushf
cmp
xchg
iret
test
sti
push
jmp
mov
sbb
or
pushl
ds
push
imul
lret
setp
hlt
mov
inc
mov
dec
mov
pop
sbb
and
jecxz
sub
lea
cs
scas
push
imul
js
ja
outsb
jo
add
push
mov
pushf
into
add
addr16
mov
push
outsb
je
cmp
xchg
mov
sbb
aaa
jge
xchg
je
aas
add
pusha
add
movsb
xor
push
test
jl
mov
or
lods
add
shrb
daa
sub
sub
or
or
adcb
mov
mov
adcl
std
cmc
pop
jl
adc
hlt
jmp
cmp
icebp
jmp
insl
cmpl
incl
int3
push
andl
sub
mov
jbe
out
jl
call
cld
adc
sti
cwtl
cmc
mov
ret
dec
sub
and
push
js
inc
mov
test
lea
and
lcall
mov
cwtl
inc
call
in
sub
addb
cwtl
stos
mov
push
push
pop
lds
ljmp
add
jae
addr16
decb
pop
dec
mov
adc
inc
daa
add
adc
pop
push
pop
data16
push
js
dec
push
sub
lret
out
mov
loop
js
adc
inc
and
in
push
fbstp
inc
push
rcll
stos
mov
in
es
cltd
jmp
aaa
int3
je
cltd
test
dec
sub
pusha
xor
pop
jl
jae
adc
mov
inc
neg
in
pop
mov
jecxz
nop
pop
fimull
cltd
scas
jecxz
mov
or
sbb
lahf
cmp
rorb
lret
pop
mov
or
out
lods
cmp
jne
and
lea
stos
and
or
push
outsb
and
mov
shll
stc
cmp
xchg
clc
popf
loop
xor
add
mov
dec
jmp
pop
xchg
sub
add
movb
stos
aas
push
mov
into
cmp
lods
dec
js
shlb
xor
ss
or
jmp
dec
and
in
mov
ret
xchg
repz
insb
jb
adcl
gs
incl
mov
sub
push
jmp
rorb
sub
push
test
dec
and
lcall
aam
cli
sub
xchg
cltd
sub
sub
pop
or
jae
shl
push
jp
popf
data16
push
mov
lea
stos
aas
jecxz
or
sbb
adc
test
pop
sbbl
jne
pop
pop
xchg
lock
aaa
cmp
sub
je
call
and
push
rcll
mov
pushf
test
jge
add
cmpsb
jmp
mov
jo
je
push
sti
push
adcb
and
and
cmc
mov
jb
je
xchg
dec
xorb
loop
adc
insl
mov
shll
movsb
cmp
and
ds
add
lret
sub
mov
loope
test
bound
push
push
mov
imul
cltd
ljmp
popa
fs
ss
shrb
inc
mov
adc
jo
loope
mov
loopne
mov
mov
sbb
incb
jne
lea
mov
and
add
repnz
or
mov
jl
jae
push
add
fiadds
jmp
out
sub
push
mov
sbb
adc
loop
mov
push
push
rcll
mov
arpl
or
jl
push
pop
int
sbb
add
insb
insb
cmpsb
xor
cmp
xor
pop
sti
pop
je
dec
jge
ret
adc
sbb
insl
ss
cli
loopne
xor
cmp
ss
jp
out
jo
push
xor
jne
add
test
cltd
jmp
push
inc
inc
movsb
arpl
adc
sbb
cmp
sbb
inc
or
add
mov
or
add
jo
clc
adcb
inc
and
add
adc
mov
adc
lret
ret
ss
das
pushf
adc
xchg
jp
mov
jg
imul
add
jmp
movsb
push
cs
inc
jle
faddl
mov
cmpsb
mov
push
cmp
movsl
xor
pop
rcrb
sub
cld
shr
mov
imul
xor
mov
test
dec
or
sbb
decl
lea
mov
popa
add
or
mov
mov
jg
movsb
xor
cli
add
xor
xor
cli
aas
jbe
push
pop
loop
dec
or
rolb
mov
shr
lea
not
and
pop
cmc
lcall
adc
or
cmp
mov
add
push
dec
pop
add
sarl
and
push
or
pusha
and
or
push
pusha
pop
pop
clc
and
mov
jle
shlb
and
sti
add
imul
cmp
push
fimuls
mov
and
mov
sub
jno
mov
sti
pop
mov
shr
not
and
add
and
xor
sbb
xor
mov
mov
add
mov
cltd
or
mov
or
adc
int3
jnp
popf
int3
inc
mov
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
loop
add
xchg
push
or
clc
pop
lock
mov
jmp
dec
adc
jbe
dec
push
mov
and
add
adc
nop
mov
xchg
xlat
imul
and
sbb
xor
mov
loope
in
pop
testb
dec
or
jp
push
call
aas
gs
icebp
mov
sbb
lods
jnp
movsb
mov
add
decb
adc
cmc
mov
pusha
add
and
ljmp
push
mov
or
mov
pop
xor
add
mov
pop
mov
lret
dec
jnp
dec
adc
dec
int3
jl
mov
cmp
adc
inc
mov
or
mov
inc
out
pop
adc
adc
inc
nop
dec
jne
enter
cmp
mov
sarl
add
lahf
inc
mov
les
dec
js
push
sub
adc
scas
and
rcrb
dec
xor
adc
adc
sbb
inc
out
int
jmp
orl
or
add
inc
or
mov
add
pop
or
mov
cltd
shlb
rolb
ljmp
rorb
clc
incb
pop
add
stos
in
dec
jne
or
pop
push
cltd
out
gs
mov
popa
imul
loope
sbb
inc
sub
shr
jg
filds
inc
orl
orl
sti
cwtl
les
mov
push
mov
lock
push
add
sub
sbb
je
cmp
pop
sar
add
mov
mov
jb
adc
fs
inc
call
mov
inc
mov
pop
incl
loopne
inc
jne
or
lds
ljmp
repz
dec
or
adc
daa
fistpl
sub
pop
shr
add
ror
jb
cld
loop
pop
sub
shrb
lock
pushf
jle
cmp
jl
dec
add
cmp
cmp
popf
pop
push
jl
push
stc
add
mov
lock
fcomps
sbb
mov
test
clc
rolb
movsb
add
pop
add
cmp
nop
sbb
lcall
and
fldenv
stos
sub
add
xchg
pop
adc
adc
pushf
out
pop
sti
sar
dec
mov
cs
fstpl
xchg
sti
dec
jg
cmpsb
stos
cltd
adc
jle
mov
pop
push
sahf
cmpsb
imul
sub
lcall
iret
jmp
add
data16
and
ljmp
imul
adc
inc
insb
xor
mov
push
and
sub
cmp
inc
or
mov
sub
pop
xor
push
dec
cmpl
dec
jp
movsb
and
mov
pop
pop
punpcklwd
mov
cmp
cmp
orl
sub
andl
mov
fcmovu
ja
sbb
cmp
ja
dec
ficoms
add
mov
lods
fimull
or
mov
fadd
jo
inc
jbe
add
mov
mov
push
mov
imul
xchg
dec
in
cmp
setb
xor
jns
dec
test
fst
lret
sbb
ja
nop
sub
js
inc
push
add
loope
hlt
dec
test
inc
cmp
push
push
push
jge
add
shr
adc
les
pop
push
in
or
subb
out
dec
or
add
cmp
and
decb
xlat
adc
push
push
cmpb
jne
mov
call
pop
bnd
add
jns
jae
xor
aaa
arpl
mov
repnz
and
xchg
out
imul
rclb
or
loopne
inc
ret
cmp
je
mov
dec
sbb
and
loope
and
mov
dec
data16
outsb
pop
iret
jne
inc
jno
sub
sbb
lods
and
outsb
jmp
cs
dec
mov
fiadds
jne
mov
push
pop
outsb
leave
inc
test
adc
xchg
push
pushf
mov
sub
icebp
and
jbe
fdivrl
rcl
call
dec
add
aad
push
pop
xchg
sbb
iret
push
and
push
addb
sub
fisttpll
mov
pcmpeqw
in
lock
jmp
lret
cmp
mov
es
dec
bound
dec
push
and
push
clc
into
xor
inc
and
cmp
inc
xor
push
or
and
roll
sub
sbb
inc
cmp
and
scas
call
out
or
dec
cld
or
push
push
mov
push
mov
mov
or
nop
jp
jo
ljmp
ljmp
and
lods
test
jns
rcrb
cmp
into
push
sbb
mov
inc
add
sbb
mov
cmp
jecxz
xchg
fdivp
push
cmp
loopne
sbb
cli
fst
pop
jb
or
xorl
pop
jmp
loopne
add
xor
add
loopne
fs
sub
lea
pop
push
xchg
push
ret
jp
mov
ret
cli
test
add
and
test
push
sarl
sub
add
shlb
xlat
lcall
add
xchg
adc
mov
cmp
cmp
sub
add
push
mov
mov
and
js
jnp
pop
sbb
test
repnz
ja
inc
add
loopne
push
push
into
or
in
dec
gs
push
xchg
inc
loope
xor
clc
or
xor
dec
sub
adc
or
pop
fsub
xor
negb
std
lahf
pushl
adcl
mov
adc
out
pop
jne
push
or
mov
std
pop
adc
pop
mov
movsl
sub
inc
xorb
mov
cmc
adc
scas
testl
jmp
cmp
inc
xorb
pop
inc
mov
mov
ja
mov
aaa
icebp
insl
lds
addl
imul
xor
inc
inc
add
rorb
xchg
xchg
dec
inc
or
mov
call
and
std
hlt
inc
mov
gs
add
aas
push
enter
sarb
outsb
loop
call
jge
jmp
movzwl
sub
jl
cs
in
int3
test
in
fldcw
scas
into
je
cmp
mov
decl
rorl
subb
xchg
imul
test
enter
ret
fsubs
lcall
mov
inc
or
add
xor
movsb
lea
jge
out
and
push
cmp
jo
add
xchg
or
std
lods
or
pop
xor
fsubrl
arpl
or
sub
pop
jno
adc
ficomps
jge
leave
in
in
jge
scas
and
hlt
ficomps
pop
roll
in
out
sbb
pushf
or
fisubrs
adc
in
sbb
sbb
adc
and
pop
nopl
jg
add
and
and
sbb
or
cmp
notb
or
push
movsl
xor
and
loope
adc
and
les
std
xchg
push
mov
sahf
aaa
int
ret
test
shll
enter
js
leave
jbe
xchg
sbb
inc
call
xor
test
sub
aaa
sbb
inc
or
dec
sti
call
enter
sub
inc
cs
xor
mov
jnp
push
push
and
jnp
jnp
negb
cmp
test
xchg
in
scas
dec
outsl
and
call
push
pusha
repz
mov
and
repnz
adc
fimuls
cld
jp
stc
inc
cmp
inc
pop
mov
push
test
lret
add
repz
shll
and
call
pop
in
ja
jns
mov
push
hlt
xchg
repz
lods
movsb
xor
add
sbb
xchg
js
add
add
call
inc
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
adc
in
orb
test
mov
jb
test
mov
mov
icebp
adc
jae
cmp
lcall
pop
sub
or
push
mov
lahf
cmpsl
xor
sahf
stc
inc
test
repz
xchg
xchg
ss
fimull
xchg
imul
daa
cmp
push
or
lea
std
sub
mov
xor
lret
pop
xchg
test
mov
jge
pop
enter
ret
xchg
or
sub
pop
mov
fdivl
jmp
mov
adc
sbb
mov
lret
or
inc
push
andl
adc
or
leave
push
lods
loopne
test
jge
mov
testl
sub
movsl
mov
xor
push
or
adc
jg
stos
ljmp
inc
je
push
test
ret
mov
add
add
push
cmp
add
mov
adc
cld
cmp
sahf
rclb
popa
mov
gs
xor
xor
bound
mov
pop
lock
lcall
insb
je
add
push
fsubrl
add
movb
jnp
lds
add
add
add
shl
rorb
adc
cmpsb
scas
call
and
adc
add
inc
xor
ret
add
hlt
stos
ja
add
mov
aaa
inc
cld
push
ds
pop
inc
adc
inc
fldcw
mov
sbbb
dec
adc
aaa
push
adc
loope
aam
xor
jo
aad
int3
add
jg
sub
push
or
shll
enter
xchg
mov
cmp
sub
mov
sub
sahf
inc
clc
add
xor
shll
sti
cld
std
aaa
mov
dec
inc
ljmp
and
imul
cmpsb
and
je
pop
mov
sbb
add
in
rol
rcll
insb
sub
sbb
dec
xchg
xchg
mov
mov
ljmp
push
sti
je
dec
je
push
or
imul
adc
enter
pop
adc
fstpl
fstpl
push
xor
mov
fldl
or
fldl
or
xchg
mov
icebp
sub
repz
push
xchg
neg
mov
leave
pop
jmp
jo
fbld
in
push
dec
int
mov
fs
jns
cmp
das
cmp
lcall
je
dec
je
add
and
sbb
imul
adc
fdiv
fldt
xchg
insl
ljmp
out
hlt
inc
fsubs
and
btc
add
dec
ds
fwait
add
or
xor
jno
mov
sbb
test
xchg
div
pushf
cld
rolb
push
push
push
mov
push
call
ret
add
fstl
push
shl
push
loop
adc
cmc
aaa
jne
arpl
jbe
das
and
inc
lock
inc
bound
imul
push
jge
lcall
sti
xchg
cmpsl
adc
mov
js
lahf
sahf
in
mov
xor
mov
fimull
in
adc
or
loop
push
in
lock
xor
popa
lret
push
imul
fidivrl
mov
jle
jo
pop
push
popa
bound
inc
or
jl
out
mov
sbb
push
xchg
jmp
inc
faddl
rcrb
or
jne
fnstsw
aas
test
fmull
pop
xchg
inc
jp
cmp
push
sbb
sub
push
push
sbbl
rolb
cmp
inc
add
popf
and
ss
pop
add
mov
inc
adc
add
out
sbb
inc
pop
push
push
and
adc
adc
dec
fs
cwtl
js
aad
and
mov
subb
lea
mov
mov
mov
mov
pop
sarb
xchg
sbb
add
icebp
mov
inc
lock
mov
adcl
push
sub
push
rol
add
repnz
xchg
pop
and
jne
gs
test
loopne
sar
dec
jg
arpl
and
repnz
add
cmp
fyl2xp1
mov
mov
out
or
mov
inc
xchg
test
inc
pop
push
inc
push
lea
pusha
push
stos
std
ja
shl
or
adc
sub
adc
sub
pop
push
xor
xchg
std
lods
jmp
sti
shl
mov
leave
rorb
jne
xchg
lret
shl
enter
dec
inc
into
xor
push
dec
scas
push
pop
or
add
cvtps2pi
pushf
sbb
xchg
add
clc
sub
mov
cmp
hlt
ss
lods
in
stc
or
sub
popa
pop
std
mov
popa
int
es
lret
gs
mov
and
push
lods
xchg
or
std
pop
lods
or
jne
inc
sub
adc
aad
pop
je
movsb
in
mov
jne
nop
popa
das
xchg
subb
inc
xor
or
adc
test
cmp
push
int
lds
sub
mov
jo
inc
ret
cmp
mov
sbb
leave
leave
call
mov
call
dec
mov
xchg
pop
cltd
shrb
sub
cmp
lret
lods
jo
mov
repnz
ja
pop
sub
sahf
es
adc
sti
xor
inc
cmp
sahf
iret
scas
jne
in
mov
pop
pop
lods
jne
jno
inc
popf
mulb
dec
mov
or
adc
cltd
cmp
adc
adc
sbb
testl
mov
gs
add
cmp
push
dec
fcmovbe
jns
daa
mov
stos
pop
and
add
push
pop
pop
stos
push
inc
cld
dec
inc
hlt
sbb
loopne
out
xlat
imul
mov
and
sub
adc
int3
jp
add
into
je
neg
xchg
test
outsb
pop
insb
in
jp
js
mov
push
ret
adc
or
cmp
xor
add
lret
sbb
enter
lock
aaa
mov
int
addr16
lock
insl
mov
jns
std
adc
sbb
vmaxss
lods
fisttps
test
insb
sbb
shlb
mov
cli
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
ret
fdivr
push
mov
popa
cmpsl
pop
call
daa
push
shrl
mov
inc
mov
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
call
push
call
jmp
sub
push
mov
xchg
fsubl
je
cld
mov
mov
xor
ljmp
push
movb
mov
in
jmp
push
xchg
mov
sbb
adc
jne
cmpsb
repnz
inc
inc
adc
fwait
dec
mov
dec
and
cmp
mov
sbb
pop
nop
xchg
std
xor
mov
lea
test
leave
sub
std
mov
into
jp
repz
sbb
mov
popa
mov
mov
decl
mov
dec
sbb
mov
hlt
sub
push
inc
or
ja
jmp
out
push
lret
dec
cmc
rol
sar
cs
xchg
pop
lock
xor
push
data16
jmp
jmp
int3
sbb
jmp
sti
lods
adc
adc
and
int3
cmp
mov
sub
addl
dec
test
push
jbe
xchg
cmp
xchg
add
jle
lock
dec
andl
sub
fbstp
cmpsl
add
push
movsb
adc
jl
inc
push
mov
sbbb
jne
cmp
loopne
adc
xchg
sbb
lods
sub
or
mov
sbb
das
push
dec
pop
movsb
xor
jno
push
je
jb
popa
and
std
std
add
mov
xchg
adc
xchg
cmp
enter
das
out
jmp
push
mov
aas
xor
nop
hlt
cwtl
inc
add
xchg
push
and
iret
repz
fisubl
cs
cltd
mov
xor
mov
clc
or
iret
rcll
loope
jle
jne
cmp
mov
xor
aad
pop
xchg
lret
leave
mov
adcl
sbb
xchg
mov
and
add
cmp
and
xor
lods
aad
xor
push
xlat
mov
pushl
lret
and
fiaddl
or
mov
sub
add
mov
subl
push
lods
add
and
jo
xchg
int3
lock
and
ljmp
dec
push
lock
aad
cmpsb
lods
repz
add
test
jb
xor
mov
in
inc
enter
movsl
call
cmp
call
pop
cmc
xchg
hlt
push
cmc
pushf
xchg
nop
pop
jb
bound
xlat
adc
and
cmp
pushf
xchg
enter
pushf
xchg
aam
les
into
enter
lods
fs
inc
xor
stos
outsb
cwtl
bound
mov
cmp
pushf
xchg
ljmp
sbbl
sub
sti
xchg
pop
push
cltd
pushf
inc
cwtl
insl
ss
and
test
es
aad
inc
push
dec
inc
lcall
or
cmp
add
xor
mov
std
fwait
push
jb
push
test
pause
lret
and
mov
cmc
sbb
jns
test
jne
xchg
pop
incl
decb
cld
cltd
shll
and
pop
xor
stc
pushf
cs
xor
mov
sbb
sbb
and
clc
mov
mov
stc
xchg
xor
aaa
ds
and
mov
jb
test
loope
sub
dec
movsb
jns
aad
icebp
lcall
movsb
sbb
push
aas
dec
xor
leave
adc
test
leave
adc
mov
mov
xchg
pop
nop
nop
nop
daa
push
orb
sbb
enter
add
cmpsl
out
mov
dec
cld
inc
pop
addr16
dec
pop
je
push
xor
iret
add
lods
add
aaa
dec
movsb
inc
out
lcall
mov
test
sbb
dec
movsl
lret
xorb
aad
adc
loopne
rclb
add
xchg
mov
or
or
xchg
ljmp
and
jp
ret
xorb
and
je
sbb
ja
pop
dec
jl
or
adc
add
xchg
aaa
filds
mov
or
mov
pop
adc
add
jne
push
adc
popa
push
and
dec
subb
nop
xchg
inc
mov
aas
cwtl
loope
roll
adc
adc
stc
jl
pop
mov
mov
pop
test
mov
mov
out
jg
cwtl
outsl
mov
test
je
mov
xor
pusha
mov
punpckldq
ret
cmpsl
mov
sbb
mov
or
fcomp
mov
jne
lea
ljmp
cli
sub
mov
sub
sbb
je
jmp
bound
ret
jb
add
sub
mov
jno
les
rcl
adc
cld
lods
or
out
push
and
pop
sbb
sub
stc
movl
or
pushf
xor
sub
inc
push
gs
or
shlb
pushl
xchg
sub
add
dec
and
mov
ds
addr16
lahf
or
mov
xchg
dec
mov
movsl
ffreep
inc
mov
ficomps
push
je
hlt
daa
clc
inc
imul
pushl
testl
cmpsb
jmp
ss
cwtl
mov
repz
enter
test
cmc
sub
subb
inc
jp
xor
cwtl
dec
pop
mov
add
push
movsl
mov
jae
adc
pop
fcmovu
dec
lds
dec
nop
shlb
pop
jmp
sbb
xchg
stc
dec
loopne
push
mov
or
clc
movb
mov
push
pop
daa
push
push
and
ss
lcall
and
rol
push
push
sarl
cmp
mov
sbb
sarb
inc
imul
xor
sub
and
mov
lret
xchg
mov
and
sbb
sbb
adc
or
or
add
fimull
xor
inc
sbb
or
add
push
in
lea
jge
pop
out
sub
fstpl
push
xor
ret
je
andl
sbb
jmp
sti
enter
stc
out
inc
cmp
mov
popf
lods
daa
lret
cltd
test
sbb
push
fcompl
cmp
popa
sub
loopne
dec
fs
gs
add
and
mov
cmp
jl
out
mov
mov
dec
pop
stc
insb
inc
pop
addr16
out
test
or
mov
out
pusha
sti
adc
cmp
cmp
jb
mov
xchg
movsb
and
bswap
lret
jno
adc
cmpl
insl
dec
addr16
dec
sbb
imul
sbbb
mov
inc
jl
jno
push
cli
lahf
push
mov
sbb
sbb
orl
adc
push
mov
inc
clc
sub
adc
int3
lahf
sub
push
or
mov
loopne
xor
daa
push
xor
adc
and
test
and
fnstcw
xchg
and
aad
fistpl
arpl
mov
popa
or
push
pop
mov
test
shrl
mov
or
dec
je
imul
ret
mov
dec
cmpb
clc
mov
cmpsb
push
cmp
int
sub
jl
int3
and
stc
dec
pusha
xchg
sub
pushf
scas
movsb
adc
test
pop
mov
or
xlat
jge
ja
loop
imul
jle
andl
cmp
stos
inc
and
sarl
call
cmp
mov
dec
inc
andl
xchg
pop
cmp
cmp
lret
cmp
lea
sub
xchg
cmp
mov
rcl
lock
sub
lret
push
sbb
or
add
nop
fmul
int3
flds
sbb
mov
fisubs
add
push
cmp
add
add
divb
pusha
ret
sub
add
pop
and
xlat
inc
aaa
adc
xchg
mov
mov
dec
or
mov
repz
je
push
or
jne
fnstenv
les
test
mov
scas
mov
ja
adc
cmp
mov
ret
jmp
xchg
push
daa
dec
clc
sub
sbb
ja
sti
adc
scas
mov
mov
in
dec
or
pop
pop
inc
push
xchg
stc
push
adc
fmul
inc
sbb
cmp
les
push
in
add
pop
rclb
push
fimuls
or
fwait
idiv
arpl
inc
pusha
jne,pn
sbb
lods
in
out
inc
mov
adc
outsb
ja
mov
cmp
jge
mov
test
shll
adc
pop
insb
call
das
mov
sbb
push
popa
or
sbb
test
or
xchg
add
xor
mov
adc
xlat
jno
mov
sub
sbb
push
adc
repnz
dec
cwtl
mov
test
pop
addl
pop
mov
je
and
push
les
xorb
or
dec
cmp
or
popa
cld
fsubl
adc
iret
adc
sti
scas
addr16
jmp
fsubs
shl
push
adc
icebp
add
or
cmpb
lret
loop
xor
and
adc
iret
xor
and
mov
and
aas
mov
lods
jne
gs
outsb
insb
inc
bound
fidivl
cmpsb
out
cmp
je
sahf
cmpsl
sub
adc
sarb
xchg
pop
addr16
outsb
or
push
mov
cld
decl
repnz
ret
or
adc
sbb
and
mov
pop
sti
rcrb
shlb
xorb
mov
adc
and
and
push
cmp
sub
hlt
sub
sbbl
xor
insl
cmp
dec
xor
push
icebp
inc
inc
in
xchg
and
sbb
or
test
mov
jo
pushf
adc
imul
push
negl
dec
insl
mov
inc
and
inc
sub
pop
gs
in
test
lods
in
push
cmp
pop
cmp
jbe
push
std
pop
mov
pop
push
jge
push
scas
add
les
clc
in
fnstcw
subl
adcl
popa
xor
movsl
incb
xor
or
mov
and
sub
xlat
jge
mov
xor
xrelease
jmp
in
daa
and
sub
repz
mov
test
dec
add
daa
in
push
adc
stc
pusha
dec
push
out
scas
mov
test
add
cwtl
or
jl
xor
adc
stos
loopne
inc
and
cmp
push
rorb
rcl
lret
jb
push
gs
inc
mov
sbb
jmp
movb
mov
mov
movsb
cmp
les
imul
lahf
xchg
add
popa
ficoms
sbb
cmp
daa
pop
ja
cmp
stc
pop
loope
ss
jmp
xor
mov
into
inc
inc
adc
add
lods
enter
pop
je
sti
push
mov
pop
es
pop
int
inc
adc
je
leave
and
push
push
xor
or
xchg
mov
inc
adc
stc
add
test
mov
xchg
lock
or
je
loopne
and
pop
and
or
mov
test
jp
into
inc
add
sarb
pop
lods
inc
pop
add
add
arpl
sub
stos
adc
sbb
in
cmp
xorl
adc
sbb
mov
sbb
jmp
adc
mov
inc
and
cs
push
mov
add
jge
stos
jbe
lea
pop
and
mov
or
shl
imul
add
push
mov
subb
add
push
push
xorl
mov
or
ret
jo
push
jle
sbb
pop
rol
or
adc
mov
inc
mov
inc
add
and
in
dec
cltd
xorl
dec
mov
out
cmp
dec
divb
sbb
repnz
cli
sub
push
sar
push
cmp
addb
and
pop
xor
mov
frstor
sbb
xchg
jo
clc
adc
xlat
mov
pop
inc
add
inc
pusha
xchg
mov
mov
add
and
shrl
cmp
fs
sti
or
out
int
pop
or
push
add
fwait
das
pop
dec
subb
int
push
fmuls
push
sub
push
push
pop
push
dec
lock
mov
lock
or
pop
pushf
jmp
add
or
or
fidivl
js
and
push
and
loope
aaa
test
mov
or
or
jo
int3
js
into
mov
xchg
pushf
pop
mov
and
mov
push
and
mov
mov
loopne
gs
pop
sbb
xor
je
push
repnz
sbbl
sbb
and
sbbb
andb
and
or
mov
fsubrs
cmp
adc
rol
rolb
insl
xor
loopne
adc
push
push
mov
or
push
adc
dec
mov
test
mov
inc
clc
add
out
add
jge
push
sahf
inc
add
inc
mov
push
fcoml
idiv
inc
leave
lcall
pop
mov
and
mov
xorl
or
or
and
push
xchg
adc
aas
xor
and
ret
leave
shl
outsb
cltd
push
dec
leave
inc
cmp
and
inc
in
push
aaa
xor
xor
add
ss
add
adc
sub
popf
or
push
add
lds
mov
push
xchg
hlt
je
adc
adc
bound
loopne
inc
mov
mov
sbb
mov
lcall
dec
push
xor
xchg
add
in
lret
pushf
rorl
pop
and
and
mov
test
adc
loopne
or
xor
add
push
rol
clc
enter
sub
or
enter
add
adc
jb
shll
clc
lds
dec
add
ret
sub
and
sub
push
and
jo
rcl
fisubrl
jg
adc
and
xchg
dec
movsl
xor
pusha
jo
lret
push
daa
add
popf
pop
xchg
call
or
cli
sub
subl
cmp
sar
outsb
roll
lret
sub
loope
add
dec
pop
push
nop
scas
orb
inc
push
push
push
jge
sbb
rep
ss
neg
movsl
lock
lods
shlb
lock
push
es
sub
mov
or
dec
pop
aad
sarb
xor
sub
dec
pop
and
cwtl
fs
in
mov
add
insl
sbb
imul
popa
push
sbb
add
jp
jae
test
mov
or
stos
pusha
pop
js
dec
mov
jmp
add
add
jmp
leave
jle
xor
xchg
push
add
lahf
sti
dec
add
jae
out
shlb
push
sbb
add
or
pop
jecxz
arpl
out
das
or
or
inc
adc
lret
stos
jl
adc
jo
adc
jae
pop
je
fistpl
jl
out
adcb
test
in
adc
mov
in
or
fsubr
shrb
mov
pop
sbb
gs
add
or
cmp
adc
sub
outsl
push
push
dec
adc
dec
in
iret
push
and
jne
push
clc
jl
lahf
pop
outsl
inc
or
jbe
jle
dec
movsl
push
stc
pushf
outsl
ja
mov
out
jo
test
rolb
loopne
or
xor
mov
enter
or
mov
loope
xchg
dec
test
out
in
and
call
or
sub
std
mov
dec
sub
dec
pop
and
or
shrl
shrl
dec
movsb
push
lock
in
mov
inc
rep
add
arpl
inc
adc
push
jno
mov
and
or
or
push
push
ret
jmp
add
mov
pop
idivl
push
add
mov
mov
lods
mov
hlt
push
lea
inc
cmp
dec
loopne,pt
mov
push
sub
test
xor
fwait
mov
mov
lcall
lahf
cmpsb
jne
jo
push
xlat
pop
and
mov
sub
clc
xor
adc
in
dec
rcr
fsub
push
dec
xchg
les
sbb
movsl
lods
jnp
fdivl
xchg
fsub
mov
mov
adc
int3
sub
ss
or
iret
decl
mov
push
mov
cmp
or
and
jb
xor
xor
cs
push
push
fidivrl
dec
push
push
stos
add
cmp
xor
pop
mov
insb
cmp
cmp
xor
das
xor
add
popa
fwait
orl
ret
inc
mov
push
xorl
xor
ret
fiadds
or
sarb
sbb
aam
jle
fisubrs
sarb
ret
and
mov
xor
add
notb
xchg
and
push
roll
test
nop
int3
dec
push
popl
rcll
add
mov
mov
jmp
adc
outsl
jo
stc
mov
or
movsl
pop
mov
or
imul
and
sbb
fsubrl
dec
inc
mov
dec
mov
dec
setbe
adc
or
and
aam
and
jecxz
jp
mov
adc
dec
loope
or
loope
inc
ffreep
cli
inc
pop
imul
shlb
cmp
jo
jl
inc
or
cmp
jg
inc
jmp
hlt
pop
xchg
cmp
imul
jl
push
shrb
adc
je
sbb
dec
or
mov
adc
and
sub
pop
cmpsb
pop
adc
ret
ret
ss
inc
push
mov
pusha
mov
aam
dec
movsl
adc
push
sbb
sbb
cmp
das
mov
push
ja
cld
and
push
ja
incl
mov
inc
push
sub
lcall
push
jle
mov
or
sub
mov
pop
push
inc
xchg
mov
dec
or
add
iret
rclb
cld
inc
sbb
rol
jns
sarb
roll
push
inc
sub
push
adc
xchg
cmpsb
or
pop
cwtl
jbe
inc
dec
dec
push
pop
adc
ljmp
shll
add
pop
or
push
shlb
xchg
aad
jbe
or
test
or
ret
push
andl
mov
push
sub
xchg
addl
cltd
jns
and
sbb
pop
dec
push
push
push
cmp
xor
lahf
out
jp
add
jg
insb
jae
push
adcb
loope
imul
frstor
add
pop
pop
inc
pop
fs
add
mov
or
mov
mov
mov
xchg
sbb
pushl
cld
xchg
or
cld
rcrb
in
in
cli
add
loopne
or
mov
mov
xchg
pop
push
add
push
in
ret
mov
cmp
loopne
stc
xor
pop
dec
adc
and
and
pop
inc
sbb
rolb
push
movsb
mov
cmp
add
dec
jmp
dec
xchg
lock
mov
sub
and
mov
jg
push
cs
add
cmp
loope
xor
lret
inc
jle
ret
dec
iret
add
sbb
cld
sub
jl
mov
or
add
add
jp
dec
push
dec
or
jg
add
jle
cmp
jb
aaa
inc
sbb
pushf
pop
fisubl
sbb
les
xchg
sub
add
bound
roll
push
inc
cli
cltd
cltd
mov
test
pop
jg
or
inc
cwtl
pop
fs
push
pop
jl
mov
push
cwtl
push
rcrb
push
leave
xchg
rcrl
lods
push
or
jecxz
and
and
mov
pop
push
test
jne
fadds
fldcw
adc
mov
jb
int3
add
or
adc
or
or
jp
imul
sbb
loopne
cmpsb
loope
fdivs
and
or
push
jl
clc
add
add
jmp
mov
jo
mov
push
sbb
ficomps
cmpl
lods
cli
pop
adc
ss
cmp
jae
mov
clc
add
js
cmp
xchg
add
dec
shlb
neg
mov
imul
add
popf
fs
adc
cmpsl
and
lods
gs
xor
pop
mov
rcl
aaa
mov
mov
jle
mov
inc
das
and
pop
cmp
and
data16
push
aad
pop
frstor
xchg
int3
xchg
mov
xor
push
movb
mov
movsb
jg
cmp
dec
or
test
and
mov
mov
imul
test
sbb
inc
les
jle
inc
ja
cwtl
fwait
xlat
mov
lods
and
push
imul
rcrl
hlt
nop
into
push
push
adc
mov
std
inc
rcrl
out
push
pop
je
adc
dec
addl
inc
loopne
adc
sti
cmc
or
push
jmp
cmp
out
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
les
push
sub
addl
and
or
add
leave
adc
movsl
and
aam
enter
repnz
sub
in
pop
adc
adc
ficoms
push
pop
leave
leave
mov
cmp
xor
push
or
lock
rol
push
or
sbb
or
and
push
mov
daa
mov
and
xor
movsl
jbe
sub
jo
add
mov
xchg
sar
aaa
sub
push
icebp
enter
hlt
mov
mov
arpl
mov
cmp
add
aas
mov
test
mov
repnz
out
cmp
filds
std
lcall
inc
fwait
or
cmc
and
lods
inc
es
xchg
or
lcall
jns
pop
dec
ss
inc
jb
mov
jb
xor
sti
inc
cmp
jae
push
cmp
jl
mov
inc
fadds
adc
sub
mov
mov
add
and
push
mov
pop
out
or
ret
ljmp
jb
movsl
and
popa
movsb
add
inc
add
push
push
jle
popa
in
dec
dec
add
imul
aad
mov
mov
push
push
scas
mov
adc
and
cltd
stos
into
adc
or
adc
mov
xor
fidivl
mov
fdivl
or
xor
xlat
jp
mov
jns
jne
jmp
fisttpl
insb
out
loop
or
push
arpl
mov
adc
inc
lret
mov
cmp
sbb
push
or
test
add
sub
ret
or
xchg
add
inc
das
cmpl
inc
mov
lret
cmpsl
lea
aam
test
push
mov
push
jle
loopne
cmp
push
jbe
sbb
clc
dec
adc
icebp
sbb
mov
movl
sbb
adc
jo
jl
mov
call
jb
sub
jle
aam
push
mov
and
pusha
jbe
add
loopne
sbb
mov
aad
dec
in
adc
dec
jg
adc
orl
call
lret
pop
hlt
jno
xchg
subb
in
mov
xor
add
rolb
dec
xchg
jns
mov
movsb
addl
negb
std
jb
inc
dec
push
loop
mov
test
or
cmp
notl
repnz
mov
sub
push
xor
or
lock
mov
out
jbe
add
es
lret
mov
xlat
inc
cmc
clc
push
mov
ljmp
dec
nop
push
add
xchg
lret
xor
jno
into
dec
and
insb
mov
xlat
je
cmp
jg
adc
shll
testb
or
pop
xchg
testb
dec
imul
andl
loopne
jge
push
jmp
inc
lahf
popf
push
and
lcall
cmpl
sub
pop
adc
daa
mov
sbb
push
js
adc
cmpsb
in
push
pop
push
cmp
shr
jmp
jno
xchg
xchg
das
xor
ret
lods
cmp
inc
sub
mov
mov
pop
cmp
adc
insl
outsb
sbb
mov
fstpl
addr16
es
jmp
sub
sub
call
pop
enter
dec
mov
or
xor
jnp
adc
push
lock
or
cmp
rorb
add
jmp
push
pop
push
push
std
out
int3
push
inc
shr
rcr
shr
rcr
or
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
add
push
jbe
dec
sub
sbb
xor
xor
or
fcmove
fcmovb
adc
jle
iret
dec
or
adc
rol
fcmovb
aaa
mov
lret
sub
add
dec
inc
rolb
pop
mov
iret
jne
mov
sbb
je
es
dec
mov
inc
test
iret
loop
jmp
cmova
dec
insb
int
dec
sbb
icebp
dec
add
testl
jne
lea
sbb
push
mov
in
and
jecxz
lea
push
cmp
sub
sbb
inc
ret
fstps
addr16
xor
jl
incb
adc
adc
or
dec
adc
pop
add
roll
loop
add
or
mov
inc
cmovno
xchg
push
aaa
movsb
fs
into
and
dec
mov
rorl
push
jno
pusha
loop
mov
inc
pop
push
push
push
mov
fidivs
dec
push
hlt
imul
test
call
inc
adc
cmp
andb
insb
cld
pop
sub
sbb
xchg
aam
or
cmp
add
scas
mov
lea
lea
or
or
dec
push
inc
lds
or
popl
xor
jne
mov
or
adc
add
sbb
adc
or
lock
ss
mov
into
adc
pop
mov
pusha
or
pop
roll
sub
xchg
jo
pop
loop
mov
clc
sbb
jmp
rcrl
ljmp
push
inc
cmp
das
xchg
add
xor
out
adc
sub
inc
lret
cmp
imul
push
inc
or
xchg
js
test
adc
pusha
cld
inc
test
lea
outsl
xchg
dec
fiaddl
imul
dec
dec
adc
cmp
mov
and
sub
cmp
cmp
xor
cmp
push
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
fidivl
add
sbb
es
fs
mov
dec
cwtl
pushf
mov
movsb
test
sub
imul
test
add
xor
add
loopne
enter
xor
fiaddl
mov
adc
in
cltd
nop
inc
adc
sbb
movsb
hlt
sbb
clc
mov
nop
data16
and
std
nop
std
daa
adc
pop
sub
mov
adc
jg
lcall
rolb
aad
pop
add
dec
jne
flds
out
nop
or
sbb
aad
test
loope
in
adc
xor
imul
add
inc
add
movsb
mov
xchg
mov
dec
call
or
je
mov
or
clc
mov
lcall
sbb
push
xor
add
mov
js
add
loopne
in
add
xor
inc
mov
add
pusha
fwait
cmp
mov
mov
inc
pavgw
mov
cmp
jns
lea
je
sub
mov
je
lret
in
test
rcrl
ret
ret
sarl
xchg
xchg
fsubl
fadds
cmp
fmuls
mov
push
arpl
sbbl
mov
sbb
inc
cwtl
adc
adc
cmp
push
fcompl
pusha
in
dec
aam
dec
pop
je
push
xchg
mov
and
imul
js
loopne
test
dec
adc
jge
scas
addb
inc
pop
add
imul
les
inc
sbb
adc
fadds
ret
cmp
adc
add
add
rcrb
aam
bound
outsl
add
inc
pop
or
mov
imul
arpl
adc
pop
push
or
int3
out
jl
adc
mov
xchg
xchg
jmp
dec
outsl
rol
dec
mov
mov
mov
sbb
loopne
rcrl
cmp
lock
add
and
jo
cs
push
mov
jmp
loopne
les
les
cmc
movsl
adc
pop
rol
mov
adc
sbb
fistpl
cmp
or
pushl
push
mov
push
add
pop
mov
jmp
ret
jp
jl
sbb
add
or
pop
mov
pop
mov
loope
adcl
out
pop
push
pusha
outsl
or
mulb
push
xor
imul
shrb
fwait
clc
jmp
fwait
mov
jp
push
cmpsb
jge
lods
aam
mov
push
loopne
ret
mov
inc
jb
sahf
in
mov
in
cmp
rcl
stc
or
pop
fcmovb
pop
fisttpl
jecxz
mov
push
test
push
lea
push
and
out
cld
jle
outsl
and
and
fcmovnbe
sti
mov
or
popa
dec
mov
add
loop
push
jne
sbb
cmp
popa
push
adcl
mov
push
adc
add
sbb
outsl
adc
pop
inc
sbb
jmp
lods
cwtl
sbb
ljmp
cmp
insl
std
xor
mov
jns
sub
loopne
fwait
xor
jg
xor
jnp
popf
pop
addl
pop
mov
mov
test
and
inc
or
jmp
cmp
in
lods
mov
call
dec
adc
push
hlt
mov
rorb
push
lods
test
jmp
aad
nop
inc
orb
sbb
outsb
cmp
add
ret
fidivrl
enter
push
lret
leave
rolb
add
iret
inc
call
jmp
push
dec
mov
inc
lea
cmp
pushf
shrb
inc
mov
addb
cmp
imul
roll
lock
mov
out
sub
push
xor
sarl
cmp
test
cld
inc
add
cmpl
pusha
leave
int
push
test
cmp
pusha
mov
add
add
jmp
inc
mov
xchg
cmp
inc
dec
or
and
insb
xor
cmp
shll
mov
inc
mov
push
push
jmp
inc
popf
imul
enter
dec
je
out
and
clc
pop
xchg
pusha
jns
cmp
sbb
jb
ds
fcmove
adcb
xadd
mov
sbb
dec
add
xchg
cmpb
cs
or
jl
sbb
dec
and
jmp
arpl
sub
sub
iret
dec
ljmp
mov
cmp
jne
adc
cli
or
clc
movb
inc
mov
adc
cmpl
fmuls
push
pop
sub
and
je
push
sbb
inc
add
xchg
daa
jmp
cmp
rcrb
xor
push
in
daa
imul
sbbb
push
cwtl
sub
rclb
inc
lods
push
subl
pop
push
or
loopne
cmp
shlb
xchg
push
and
nop
or
aas
mov
out
inc
mov
imul
pop
xchg
cmp
js
jnp
add
push
xchg
and
xor
jae
addb
test
popl
push
mov
jbe
sbb
pop
lock
scas
cs
inc
enter
and
lret
jmp
xchg
pusha
fs
fnsave
pusha
jge
ret
sub
xor
mov
mov
jo
lret
jmp
adc
repz
jmp
or
lea
mov
pushl
sub
xsaves
lods
xor
xchg
ja
fdivrs
jne
push
sbb
repnz
stos
cmp
adc
xor
in
clc
test
cmp
mov
inc
or
inc
cli
inc
cmpb
xor
jg
or
mov
adc
pop
pop
adc
dec
cwtl
push
test
push
xor
mov
push
inc
leave
je
pop
pop
mov
aaa
push
xor
test
sub
ret
in
fsubrl
ret
fsubrp
sbb
icebp
and
mov
pop
les
push
imul
jmp
sbb
mov
inc
pusha
fcompl
adc
sbbb
jmp
unpckhps
cmp
xchg
into
repz
sbb
or
and
adc
adc
mov
inc
and
std
mov
adc
stos
mov
pop
icebp
add
add
inc
cmpsb
loopne
xor
xor
dec
mov
mov
cltd
inc
and
scas
mov
ja
bound
and
sti
divb
sub
pop
inc
xor
inc
in
les
test
mov
cmp
add
nop
std
into
rcrb
int3
and
rcl
mov
mov
adc
xor
and
or
mov
divb
xchg
cmp
sbb
sub
or
ret
orl
dec
sbb
mov
jge
mov
js
jl
mov
pop
xor
push
gs
push
sbb
repz
cmp
mov
jg
rclb
xchg
fnstcw
dec
cmp
cmp
mov
addr16
pop
pop
test
add
sub
adc
sub
or
pop
loopne
jne
pop
jmp
cs
inc
mulb
and
adcb
shrd
int3
pop
pop
and
inc
sbb
cmp
inc
sbb
call
jp
inc
dec
lahf
clc
je
add
mov
sahf
add
out
imul
adc
mov
rcr
push
js
scas
dec
cmp
mov
scas
ljmp
and
jno
adc
je
inc
cmp
shlb
gs
mov
js
pop
sbb
pop
xchg
fcmovb
push
add
push
popa
add
cltd
xchg
movsl
hlt
pop
mov
add
and
mov
test
mov
and
adc
xor
xchg
test
outsb
test
or
fnsave
mov
or
inc
jmp
icebp
xor
jecxz
movsb
packsswb
mov
dec
adc
loop
jle
mov
pusha
jp
xchg
ret
sbb
pop
cmpsb
push
sbb
imul
pop
pop
cmc
cmp
and
pop
add
push
inc
sbbb
push
gs
add
xor
loopne
jnp
cmp
rcrl
cmp
sbb
or
mov
sbb
jbe
out
lret
ja
push
cmp
inc
mov
movsl
adc
fstpt
psubw
fistl
adc
jne
push
lock
das
mov
lea
sub
jge
gs
dec
pop
mov
sbb
repz
fcoml
cmp
cs
movsb
push
bndldx
or
sbb
mov
cmp
add
lea
fmuls
dec
push
testb
and
dec
jbe
jbe
adc
scas
xor
test
cld
nop
mov
add
aas
loope
imul
out
fisubl
inc
add
add
jl
or
or
and
sbb
adc
data16
pop
adc
sti
or
or
mov
rorl
rcrb
sbb
or
add
dec
inc
data16
mov
cmp
lcall
add
dec
data16
in
bound
scas
inc
dec
and
icebp
in
gs
push
dec
or
ror
inc
daa
adc
push
add
sbb
and
jmp
or
rorl
cmp
pop
stos
sbb
subl
push
mov
dec
mov
xor
pop
sub
je
push
popf
dec
add
cmp
or
scas
and
data16
pop
negl
lea
incl
push
ds
and
lods
adc
dec
repnz
mov
hlt
add
inc
dec
lretw
outsb
dec
repz
or
or
roll
xchg
xor
or
sub
and
inc
pusha
insb
fsub
jge
push
mov
xchg
test
and
cs
dec
xchg
add
or
or
nop
fldln2
out
mov
and
shll
dec
xor
adc
or
jb
and
shr
add
leave
in
inc
shr
and
pop
mull
lret
and
in
repz
lock
test
adc
jmp
adc
test
xor
sub
add
sub
xor
or
push
sub
inc
jmp
mov
incb
jmp
pop
mov
or
jmp
inc
and
mov
and
mov
movsb
jl
and
jecxz
jge
lcall
xchg
jmp
das
push
sub
cmp
loopne
xor
sub
scas
es
mov
mov
sti
insl
adc
add
fstps
aas
pusha
mov
sub
sti
pusha
pusha
loope
pop
sub
dec
and
add
fstp
jp
rclb
pop
cmp
add
sbb
adc
add
xchg
rorb
adc
sti
mov
testl
fisttps
add
pop
add
cmc
mov
push
inc
xchg
dec
or
sub
push
mov
sti
xor
lcall
out
and
subb
xorb
sbb
jmp
outsb
sub
and
inc
add
adc
dec
inc
xor
inc
push
fldenv
rclb
or
pop
push
dec
mov
add
mov
stos
lcall
andl
inc
push
cmp
lock
pop
sub
fsubrp
pop
and
lcall
xor
pop
nop
lret
or
or
pop
xchg
cld
mov
fldz
bound
sub
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
nop
psubusw
inc
test
int3
adc
roll
repz
lcall
sub
mov
cmp
in
mov
cli
mov
or
add
repz
or
mov
inc
in
adcb
repnz
sub
xchg
lcall
add
adc
cltd
lods
push
push
test
mov
fcmove
enter
in
sbb
jp
dec
in
pop
test
lock
out
scas
loop
jo
jp
push
sahf
jmp
pop
ret
push
test
movsb
fsubr
orl
test
and
mov
and
mov
or
sbb
add
mov
mov
repnz
push
add
outsl
mov
sbb
pop
sbb
push
add
sub
jae
or
mov
faddl
add
fsubl
push
pop
movzbl
add
ljmp
lds
rorb
out
xchg
or
sub
xchg
adc
scas
sbb
add
adc
or
int3
subb
mov
cltd
adc
jecxz
out
leave
clc
add
jmp
popa
filds
add
lods
fsubrp
fwait
jno
pop
shlb
push
sub
or
or
xor
push
mov
cmp
leave
jmp
insb
insl
orl
imul
pop
jo
ret
adc
mov
mov
push
mov
adc
add
xchg
cmpb
add
orb
lea
push
or
mov
cltd
and
out
jbe
sub
mov
sub
popa
jmp
jo
jae
and
fnstsw
adc
jns
add
xor
add
push
or
inc
test
jecxz
int3
test
cld
pop
clc
sarl
sub
and
cs
rolb
inc
cmpps
sahf
push
imul
lock
or
sti
jo
jb
gs
and
xchg
mov
loope
lock
and
dec
sbb
adc
aas
into
sahf
push
ret
fadds
jbe
adc
loop
sbb
mov
add
push
push
stc
jbe
jne
jne
dec
pop
or
mov
cwtl
push
gs
or
xchg
roll
dec
jle
cmc
add
mov
push
add
pop
adc
inc
sbb
xor
testb
push
add
sbb
sub
shr
loop
pop
xor
aad
inc
mov
jl
fstsw
mov
push
test
inc
fsts
cld
push
jmp
and
xor
push
mov
pop
testb
or
push
mov
add
sub
fwait
mov
adc
sbb
and
or
jle
or
js
call
mov
lods
or
pop
cmp
hlt
shll
dec
sbb
add
ldmxcsr
push
or
repnz
and
sbb
or
inc
fsubr
or
mov
orb
mov
mulb
sub
mov
out
mov
imul
xor
inc
cld
mov
sbb
push
test
fimuls
mov
mov
ret
test
je
or
dec
adc
pusha
and
pop
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
ja
mov
lahf
cmp
and
sub
xor
inc
add
add
push
dec
push
cmp
jo
fadds
in
js
mov
int3
mov
out
push
cmp
psubq
xchg
inc
mov
lods
rol
xchg
repnz
les
in
inc
clc
std
sahf
inc
sti
adc
enter
or
add
loope
popa
add
fs
les
push
pusha
pop
xor
push
jle
bound
scas
mov
rolb
jle
sbb
sub
loop
stos
ret
sub
xchg
movsb
faddl
orb
dec
or
add
sbb
dec
push
or
dec
push
adc
add
add
jmp
aas
daa
adc
out
sbbb
mov
test
jb
add
scas
cwtl
pop
test
jne
xchg
popa
jg
push
add
cmc
sub
cmc
push
in
inc
stos
stos
repnz
pop
pop
in
imul
jge,pt
movsl
add
dec
or
jmp
ljmp
add
or
push
adc
add
or
push
lock
inc
shl
lret
sub
add
mov
loop
rolb
adcl
pop
mov
outsb
dec
cltd
insb
pop
and
psubd
jle
and
into
loopne
push
fidivs
movsl
mov
jbe
lea
xor
repnz
dec
es
or
jb
cmp
push
sbb
sbb
in
mov
adc
jb
incb
jae
mov
or
dec
mov
adc
jns
fisubl
and
jge
pop
push
sbb
push
pushf
test
inc
or
add
ljmp
sti
cmp
dec
dec
stos
test
push
hlt
inc
repz
pop
add
pusha
inc
adc
push
aam
sbb
js
movsl
cmp
mov
lahf
xor
push
movsl
xor
lcall
out
lods
jg
sub
sub
not
rcrb
sub
add
and
push
ds
adc
loop
or
and
lock
or
adc
push
xor
and
scas
xor
mov
xchg
outsb
sub
sarb
je
mov
or
jmp
adc
push
and
in
and
cltd
sbb
and
adc
jecxz
data16
or
mov
push
mov
cli
cmovs
cmp
pop
test
push
sub
pop
xor
pop
xchg
dec
lods
dec
fidivl
add
test
fiadds
or
or
jecxz
or
mov
lock
daa
jae
cmp
mov
out
addl
mov
lahf
hlt
lea
jl
loopne
mov
loopne
stos
pop
push
cltd
push
into
out
sbb
sub
jl
mov
dec
into
and
sub
cld
sbb
jge
dec
add
es
push
cli
rcrl
jecxz
js
rorb
and
add
sub
jp
xchg
add
mov
loop
mov
and
rcrb
pop
pop
xchg
inc
pop
adc
insb
cli
insb
mov
add
or
nop
sbb
add
pop
jns
and
add
add
pop
stc
test
sbb
xchg
mov
clc
or
or
pop
inc
jl
push
xchg
and
add
or
lcall
aam
loop
add
push
lock
sti
cmpsb
xor
push
adc
imul
mov
pushf
mov
sbb
into
pop
mov
test
or
lods
mov
push
or
inc
or
cmp
loop
jne
and
inc
jmp
mov
sub
or
xchg
add
aaa
push
lods
aad
pop
mov
sub
cmp
ja
adc
pop
push
dec
jmp
fs
imul
into
add
pop
mov
pop
mov
push
push
dec
lcall
add
jmp
pop
testb
add
andl
scas
loopne
push
jmp
cmpsl
mov
push
sub
sub
lods
push
sub
or
mov
iret
rorb
mov
arpl
xor
cmp
add
adc
sti
insb
push
jbe
xor
subl
push
sub
dec
fs
cmp
jmp
dec
gs
sbb
mov
sub
push
cmp
jbe
insb
inc
mov
pop
jge
pop
out
jne
sarl
out
lret
jbe
nop
iret
cmp
add
jne
js
jae
imul
xchg
aad
cmp
mov
mov
outsb
mov
call
decb
mov
pop
push
sub
fucom
adc
gs
orl
mov
dec
sub
ss
and
adc
test
stc
sub
cmp
mov
jo
test
mov
fnstenv
call
mov
mov
mov
test
nop
mov
pop
push
inc
fldcw
cmp
or
loope
adc
add
inc
testl
jp
sbb
fdivp
pop
xor
and
dec
cmpl
jmp
push
jmp
cld
je
cli
jge
test
and
sub
stc
push
adc
dec
shlb
mov
std
jecxz
add
pop
or
push
cwtl
adc
or
xor
push
mov
dec
xchg
cs
mov
lea
xor
xor
lcall
jge
neg
add
mov
orb
movsb
sub
cmp
shrb
jmp
cs
pop
lock
nop
sbb
cmp
out
in
test
enter
mov
xor
xor
jne
ja
lods
subb
dec
test
lods
sarl
push
add
and
inc
outsb
inc
or
pop
cmpl
jb
mov
dec
mov
pop
cmpb
mov
mov
decl
mov
mov
ret
inc
mov
jne
and
shlb
and
not
sbb
ja
shrb
ja
mov
pop
mov
pop
dec
sub
movb
testl
jne
enter
sbb
or
into
jne
subb
and
pop
cmp
xlat
movsl
pop
jnp
xor
hlt
int3
add
jne
rolb
or
es
aaa
hlt
rcrl
pop
mov
les
pop
add
lea
mov
movsb
push
or
dec
enter
into
push
mov
dec
ja
lods
push
or
mov
mov
js
subl
lcall
inc
xor
stc
jg
add
shlb
pop
push
aaa
inc
sbb
sub
or
shll
bound
jmp
pop
push
rcll
jge
sbbb
jg
or
daa
and
pop
adc
inc
mov
les
test
jno
notb
je
call
fcom
insl
fadd
loopne
push
sti
pop
shr
or
mov
sahf
dec
and
aam
shrl
push
jl
es
mov
push
ja
aam
loope
mov
sub
enter
insl
xchg
inc
cmp
add
ficompl
popa
iret
rcr
sar
pop
xor
in
fiadds
push
call
aad
sbb
mov
mov
mov
loopne
or
sahf
nop
pop
adc
out
orb
fisubrl
jmp
test
or
push
push
lret
sub
cmp
jmp
scas
not
xchg
stc
jb
and
pop
add
int3
rolb
into
repz
int3
add
jne
push
lret
fldcw
add
in
faddl
sbb
add
insl
and
push
lods
mov
or
call
adcl
mov
and
out
pop
dec
inc
add
outsl
sahf
out
cmp
mov
mov
out
jne
lods
daa
inc
inc
lcall
lahf
push
rcrb
jmp
inc
push
adc
psubd
icebp
pop
scas
lods
arpl
pop
ret
push
inc
call
mov
mov
shrb
cmp
sub
pop
cmp
or
dec
in
sbb
and
dec
pop
sbb
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
out
call
fcompl
gs
lret
pop
cmc
pop
push
or
mov
je
out
clc
sbb
sub
or
jo
xchg
mov
xor
mov
popf
xor
lods
enter
add
xorl
jmp
mull
das
pusha
xchg
add
shl
sbb
loopne
push
jae
add
jp
pop
sub
pop
xchg
mov
aam
add
mov
rolb
fnstcw
or
add
mov
je
das
mov
loope
dec
or
lahf
push
cmpl
or
addr16
clc
add
mov
and
adc
aam
daa
cld
aas
sub
movb
sub
jo
inc
jle
addl
fisubrl
das
sahf
push
xorb
mov
es
sahf
ds
sbb
loop
lock
decl
mov
jmp
sub
add
push
lods
adc
pop
or
int
lea
mov
movsb
add
or
inc
pop
push
dec
sub
jns
les
sub
jns
stos
adc
xor
push
or
jo
or
sub
add
mov
fidivs
fs
mov
xchg
sbb
lods
dec
jb
push
inc
scas
xor
fwait
and
sarl
push
aaa
aam
lock
jne
sbb
push
adc
inc
insb
push
xchg
andl
adc
ret
jbe
xchg
clc
cmp
pop
adc
jge
mov
rol
add
adc
pop
xor
shlb
enter
fs
sbb
inc
or
or
fs
xor
mov
mov
popa
mov
add
sub
mov
pop
orb
sbb
push
lds
jno
subb
adc
imul
popl
fldl2t
int3
aas
xchg
lret
call
cmp
push
icebp
inc
xor
or
aam
dec
rcr
adc
pop
mov
add
adc
mov
push
and
mov
clc
test
sbb
rcrb
sti
mov
pop
sub
add
mov
and
adc
add
sbb
js
or
adc
loope
mov
inc
enter
push
mov
mov
movb
inc
cltd
xchg
push
dec
inc
xor
leave
and
addb
cmpsb
movb
pop
and
gs
je
mov
dec
fwait
ds
neg
pop
cld
rorb
lock
ret
daa
xor
or
jne
pop
cmp
sahf
movnti
mov
and
mov
or
scas
test
cmp
and
xor
inc
add
add
or
or
lea
ja
sub
gs
orb
and
test
inc
dec
sub
push
movswl
les
sbb
pop
sbb
data16
lock
jbe
add
mov
cld
add
dec
shrd
push
jle
xchg
sbb
cmp
xlat
inc
sti
jge
jge
sbb
clc
mov
dec
push
xor
incl
xchg
or
scas
inc
add
dec
jmp
xchg
clc
or
loopne
and
mov
add
out
xchg
mov
inc
or
mov
stos
add
cmp
xor
test
adc
adc
jo
inc
out
mov
call
ror
push
fildll
add
pop
sbb
js
jg
jb
push
sub
or
pop
push
cmp
fidivrl
rorl
loope
or
jb
icebp
or
jl
xor
popa
jbe
add
xlat
sbb
push
jg
lods
lods
jge
jb
fs
in
jb
dec
inc
dec
pop
or
or
sbb
cmpsb
add
pop
test
scas
shlb
adc
dec
pop
add
or
push
pusha
popf
xor
popa
or
insb
mov
pop
sbb
push
and
call
jl
pop
cmp
mov
and
sub
data16
and
inc
mov
sub
add
adc
sub
pusha
sarb
mov
loopne
ljmp
int
pop
popaw
push
mov
xor
or
add
movsb
add
loope
out
into
mov
and
adc
add
or
dec
shrl
je
sub
nop
pop
adc
pop
repnz
mov
repz
cmp
scas
adc
test
jg
lret
jbe
adc
mov
rorb
add
mov
or
mov
push
jmp
adc
jmp
xor
cld
cld
jl
lods
sub
xorl
adc
test
inc
shr
loop
xorl
roll
jge
aaa
mov
jle
gs
or
pop
data16
lret
sbb
in
add
insb
outsb
inc
popa
je
inc
je
dec
lods
in
in
fucomp
xor
add
add
add
or
loopne
pop
bound
or
cmp
push
xor
and
inc
and
add
movsb
aam
sbb
fldl
fdivl
fmull
pusha
jbe
add
push
pop
clc
fstps
or
cmc
adc
jecxz
mov
xchg
shrl
mov
loop
dec
rol
ret
das
inc
bound
and
insb
pop
lock
arpl
inc
cmp
test
push
push
mov
adc
push
mov
clc
jmp
pop
decl
mov
cmpb
jne
jp
adc
xor
sbb
xor
les
cmp
jmp
and
cmpb
push
or
insb
sub
inc
add
xchg
pop
lods
pop
sbb
cmp
pushf
sar
lahf
dec
push
sub
fs
and
add
inc
cmpsl
popf
ret
add
enter
pop
aaa
dec
rcrb
mov
add
sub
repnz
dec
fistl
or
cmp
sub
dec
sbb
dec
das
int
jl
cs
inc
mov
addl
mov
mov
and
xchg
rcr
mov
cmpl
outsl
movsb
es
or
push
mov
push
mov
loop
insb
adc
sbb
xchg
imul
pop
pop
cmp
inc
mov
sbb
and
mov
and
jmp
je
mov
mov
jbe
jge
push
cmpsl
mov
push
insl
pushf
pop
adc
mov
inc
add
xor
gs
xchg
sarb
int
lock
arpl
out
pop
cmp
mov
mov
icebp
cmpsb
adc
mov
and
xor
xor
clc
and
rcrl
das
or
adc
hlt
jmp
or
jmp
test
out
xor
cmp
ljmp
adc
addl
nop
shl
sbb
push
or
sub
aad
jae
cmp
lea
test
arpl
adc
inc
xchg
add
clc
popf
mov
add
aas
inc
adc
ss
xorb
pop
mov
in
inc
or
add
jecxz
negb
fs
jl
arpl
rol
into
push
dec
dec
add
add
mov
pop
decb
xor
add
lods
add
push
cmpsl
xor
mov
add
jle
mov
push
mov
iret
mov
xchg
inc
pushf
jp
fs
int
cmp
inc
rcrl
mov
push
cmp
sbb
and
imul
jo
shl
or
or
in
xchg
xchg
add
xlat
or
cmp
xchg
add
sbb
imul
xor
ds
je
pop
pop
mov
add
fisubrs
jl
dec
fiadds
cmp
and
call
push
cmp
jns
dec
cld
sbb
inc
jmp
syscall
adc
inc
or
add
dec
lods
fmuls
and
cmp
sti
and
push
add
sub
push
or
cmp
pop
shlb
movd
mov
mov
mov
enter
jo
and
fsin
mov
sub
xchg
enter
push
xor
jmp
adc
rcr
jnp
pop
testl
pop
mov
hlt
mov
push
sbb
ljmp
outsl
push
loope
mov
enter
adc
popa
cwtl
pop
mov
xchg
popa
adc
lods
sub
leave
clc
push
xchg
mov
dec
movsb
cmp
pop
jbe
and
jmp
cmpsb
sahf
and
sbb
mov
cmp
outsl
ret
int3
cmp
ljmp
inc
jmp
mov
adc
push
fisubrs
adc
test
or
jo
adc
inc
or
bound
add
loop
push
pop
incl
lea
outsb
xchg
mov
daa
push
ljmp
popa
filds
add
lret
inc
xchg
mov
dec
xor
sub
adc
loope
pop
loope
adc
aaa
xor
sub
cmp
pushf
pop
mov
and
repz
or
push
cs
fs
outsl
loop
fists
out
adc
jo
add
xor
das
adc
xor
test
mov
pop
imul
inc
iret
adc
call
lock
dec
cmp
lea
or
push
pop
incl
jp
shr
add
or
movsb
fisttpll
fcmovb
jmp
sti
or
and
out
pop
or
mov
add
add
or
bound
scas
push
js
or
aad
in
cmp
rclb
mov
jp
cmp
inc
sub
in
jbe
sbb
cwtl
add
int3
sbb
push
stos
adc
flds
xchg
shrb
mov
lret
add
xor
cmp
lea
mov
shr
cmp
mov
adc
lods
or
mov
add
adc
adc
mov
mov
mov
data16
cmp
es
daa
in
stc
out
incb
inc
jbe
imul
xchg
jo
subl
call
pusha
add
push
cli
push
notb
or
shl
mov
mov
adc
loop
scas
aad
test
add
ds
push
sub
cli
stos
div
jo
mov
test
test
in
sub
adc
call
call
mov
push
or
cmp
mov
xchg
fcompl
inc
ficoml
fdiv
cli
scas
add
mov
fstpl
negb
add
sbb
or
test
push
cld
sub
jne
xorb
push
ljmp
mov
leave
dec
movsb
or
pop
movsb
fisubs
lret
mov
push
std
or
push
adc
sbb
push
xchg
push
and
fstl
mov
jle
cld
inc
add
lcall
xchg
sbb
xchg
cmp
nop
mov
imul
inc
xor
dec
cmp
pop
lret
lock
jl
cmpb
jl
xor
subb
idiv
fdivl
lds
xchg
adc
adc
fsts
nop
loopne
test
dec
std
inc
dec
inc
push
push
mov
push
push
fsubs
sbb
cltd
inc
sub
fnstcw
sub
cld
aam
pop
or
clc
stos
add
cmp
sub
mov
ja
and
adc
lock
loopne
add
xchg
stc
and
enter
jg
je
out
or
test
jne
cli
in
and
add
rcll
jns
sub
push
je
jmp
dec
jo
or
lcall
cwtl
test
and
gs
pop
and
lock
adc
jne
movsw
xor
or
outsb
rorb
test
loop
hlt
aam
mov
push
push
pop
push
in
xchg
and
fidivl
fdivrp
pop
int3
add
push
rclb
fsubr
imul
pop
cli
jge
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
int
cmp
inc
push
sbb
adc
sbb
push
push
inc
and
fldcw
xchg
cmpsb
mov
fcomi
sbb
xor
sbb
jmp
jbe
mov
dec
jne
pop
pop
pop
fiaddl
adc
add
rcl
ljmp
shr
or
sub
jg
mov
jmp
mov
in
and
cld
je
push
mov
add
je
cld
add
dec
xor
les
cmpsl
dec
add
jnp
xor
insb
add
jno
and
adc
ss
jne
xchg
cli
sbb
push
sbb
push
add
into
jbe
jns
aas
jp
fistl
sbb
pop
xchg
cmp
dec
xchg
pushf
adc
push
or
adc
inc
dec
in
mov
and
dec
cltd
orb
xchg
push
adc
ret
xor
pop
or
push
orps
mov
add
or
jp
push
fisubs
int3
aam
cld
and
dec
pushl
dec
jae
les
mov
jl
xor
push
jge
outsb
add
andl
mov
mov
testb
fbld
sub
leave
je
inc
decb
or
mov
mov
mov
scas
es
mov
je
jg
sbb
add
out
push
cmp
push
cli
out
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
hlt
jb
idivl
pop
jbe
or
nop
pop
add
push
dec
in
inc
push
push
cmp
xchg
mov
mov
xor
mov
pusha
mov
mov
and
outsl
and
push
rcrb
das
sbb
imul
je
aam
fidivl
aaa
cwtl
leave
or
xchg
js
lret
ljmp
stos
inc
pop
xchg
and
or
push
dec
loop
inc
sub
or
or
adc
fstpl
mov
mov
dec
das
pop
sahf
sbbb
add
adc
pop
pop
mov
out
andl
lods
rorl
pop
inc
notb
push
sub
xor
cs
movsb
sub
xchg
arpl
and
adcl
mov
add
add
gs
test
add
push
out
lock
dec
mov
inc
and
lea
mov
repz
roll
rcl
rcl
aad
repz
xlat
fcomp
dec
and
fstpt
shr
jg
clc
dec
nop
data16
inc
add
add
adc
inc
dec
push
dec
sub
inc
ljmp
fisttps
xchg
or
adc
push
popa
add
push
push
mov
out
in
sub
jecxz
lahf
sub
das
nop
inc
sub
jb
je
test
in
jo
idivl
jmp
icebp
adc
cmp
das
ret
pop
or
push
push
add
or
bound
testb
and
add
push
xor
sbb
lods
pop
mov
clc
lea
mov
imul
or
lcall
xchg
pop
sbb
dec
lea
sar
test
pusha
inc
mov
mov
push
pusha
sbb
and
out
jmp
adc
loop
test
fisttps
lock
sub
test
adc
mov
loope
sar
fisubs
addr16
out
stos
pushf
push
jp
mov
call
les
decl
gs
or
adc
fadds
hlt
sub
icebp
out
mov
orb
mov
and
jle
js
lea
pop
sbb
lcall
mov
xchg
xchg
icebp
nop
xchg
ja
add
es
and
mov
divl
in
inc
and
loopne
dec
sbb
inc
inc
or
xchg
add
or
sbb
and
xor
pop
mov
add
add
mov
inc
xchg
pop
cs
or
mov
dec
xchg
mov
add
dec
push
inc
ja
aad
enter
cmp
cmp
sbb
cmpsl
push
inc
int
imul
xchg
cwtl
mov
jge
jl
imul
test
rol
cld
cmpb
jle
jle
or
adc
pusha
add
add
inc
jbe
add
loopne
cmp
mov
clc
add
or
gs
push
lret
jae
and
inc
rorb
or
leave
lods
sbb
ss
shrl
fildl
push
out
mov
mov
lret
dec
sahf
dec
sub
adc
lock
inc
repnz
cmp
xchg
inc
cli
cli
inc
cli
test
sub
repnz
imul
sub
sbb
ljmp
push
lret
mov
sbb
adc
nop
lock
aam
sbb
inc
or
or
dec
pop
xor
popl
out
cli
leave
mov
xor
mov
rolb
dec
inc
adc
jp
idivb
imul
xchg
jb
xor
push
imul
mov
mov
sbb
repnz
dec
pop
fdivrl
loop
out
cmp
xchg
mulb
test
pop
scas
insb
roll
mov
add
and
dec
call
fdivp
fcompl
sub
fdivrs
aam
jbe
mov
inc
inc
test
dec
ss
cwtl
mov
push
lcall
pop
adc
dec
xor
lret
inc
push
pop
call
movsb
repnz
cmp
cld
lea
fcmovu
mov
mov
sub
lods
lods
lahf
mov
and
rolb
adc
aas
sbb
div
mov
test
test
jge
or
sbb
cs
and
and
jmp
add
movsb
jne
sub
sub
loopne
pusha
imul
out
jge
in
cwtl
loop
out
dec
sub
insb
sbb
movb
inc
mov
push
xor
ret
insb
add
push
nop
cmp
mov
dec
stos
popf
cmpsb
adc
adc
adc
cmpsl
sub
push
shr
nop
clc
dec
pop
ljmp
test
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
clc
push
adc
jmp
loopne
loopnew
imul
fdivr
pop
add
shlb
clc
mov
sbb
dec
push
pop
mov
out
sbb
dec
icebp
ret
sti
and
xchg
mov
fldenv
or
mov
add
sub
shl
dec
faddp
dec
into
or
pop
in
push
add
mov
mov
sub
dec
enter
pusha
les
shlb
test
dec
int3
pop
sub
dec
lock
add
add
icebp
dec
xorb
into
or
mov
inc
test
add
or
in
cli
aas
insl
orl
jge
sub
cmpb
sub
push
bound
movb
dec
cmp
into
mov
add
dec
add
add
fadds
sub
movb
adc
jp
jne
dec
sub
sahf
mov
jb
int
pushf
adc
push
inc
ret
and
add
dec
inc
push
mov
jbe
jnp
dec
je
inc
or
imul
push
push
lcall
mov
outsb
outsb
adc
aad
push
mov
shll
lea
add
sbb
cmp
or
pushf
movsl
add
je
fdivs
dec
push
add
or
xor
out
pop
pop
scas
add
adc
subl
push
mov
and
push
ret
pop
fisubrl
xchg
xchg
xchg
adc
or
jae
pop
sbb
jg
ret
mov
mov
inc
and
cmp
xor
into
add
sub
cmp
mov
rcrl
loop
add
cltd
mov
ret
jne
or
mov
shlb
stos
mov
dec
inc
push
pop
jae
rclb
or
or
add
loopne
xchg
and
mov
dec
orl
imul
or
xlat
dec
pop
sub
mov
xlat
lea
and
and
inc
jbe
fsubl
mov
mov
jge
lret
pop
pop
ret
or
ljmp
xor
lock
inc
fldcw
mov
cld
xor
adcb
sub
sub
fdivl
or
inc
stos
jg
and
rcrb
sub
into
xchg
cmp
add
in
out
xchg
scas
and
in
stmxcsr
cmpl
test
and
into
or
add
or
cmp
xor
adc
xchg
cld
shlb
mov
push
mov
push
inc
jg
into
ljmp
pop
and
mov
pop
sub
push
loopne
fsubp
pop
nop
pop
cwtl
pop
out
xchg
push
shlb
shlb
bound
loop
or
pop
adc
xchg
roll
mov
cld
pop
xchg
pop
lcall
ja
leave
lahf
pop
test
enter
add
add
mov
sbb
int
sbb
je
and
leave
adc
inc
pop
jo
mov
sub
jmp
jmp
lret
ret
test
push
xor
xchg
incb
push
push
scas
sub
push
pop
or
dec
test
pushf
add
inc
pop
shll
ret
in
add
lret
mov
clc
cmp
mov
dec
test
jo
mov
fucom
lret
sub
mov
jle
inc
ret
fisubrs
outsb
js
clc
int
push
sbb
xlat
jle
and
daa
pop
nop
pusha
cmpsb
or
and
adc
sbb
jge
addr16
inc
ret
dec
mov
lea
insb
sbb
mov
dec
cmp
mov
shrb
sbb
das
add
cmp
pop
push
loop
sub
add
inc
and
jmp
and
dec
sub
add
dec
inc
add
mov
out
je
add
nop
fisubrs
rorb
jb
mov
lret
inc
inc
fsubrp
jmp
pop
sbb
popa
out
leave
nop
mov
lds
inc
or
jo
adc
int
jbe
pop
js
jmp
test
xor
flds
mov
aam
fbstp
mov
movsl
xor
cmp
pop
mov
sbb
or
adc
and
sbb
xchg
jne
mov
test
mov
adc
or
push
scas
ret
lock
sbb
jnp
inc
pushl
leave
and
adc
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
fwait
movb
pop
mov
cld
out
sub
enter
adc
test
push
sbb
shlb
rclb
jmp
push
hlt
fcomps
fisttpl
inc
sbb
jmp
jmp
and
jge
lea
or
mov
mov
pusha
push
pop
push
imul
mov
jno
ret
or
pop
add
xor
stos
sbb
lods
inc
dec
leave
jae
shll
xor
xor
das
dec
std
adc
adc
bound
push
je
or
jo
cs
add
add
sbbl
and
xlat
or
mov
movsl
test
sub
mov
add
mov
xchg
sub
push
pop
imul
push
ret
add
loopne
mov
dec
inc
pop
or
bound
push
inc
add
mov
aas
lods
xorb
movsb
adc
push
out
jmp
xchg
aaa
leave
cmp
rcl
mov
fisubrl
sub
fdivrs
push
gs
test
xor
jo
sbb
outsb
loopne
lret
mov
and
push
es
cmp
lcall
inc
mov
fsubs
pop
add
loop
test
add
inc
jnp
or
jns
cmp
popa
sbb
dec
roll
ret
ja
fnsave
mov
aaa
pop
xchg
test
sbb
xor
ret
lcall
lock
dec
cld
jecxz
or
jl
xor
push
jbe
or
ret
xchg
enter
sub
fcoms
js
xor
fistpl
pop
nop
je
cs
stc
jae
fsubs
out
push
js
pop
stos
loopne
jmp
dec
loop
fiadds
das
movsb
fisttps
xor
outsl
push
sub
rorl
sub
adc
cli
adc
mov
push
pop
movl
test
mov
sar
fcoml
and
pop
push
das
xchg
aas
shlb
in
sub
add
shrb
push
movsb
sbb
add
es
push
mov
fs
and
lret
xor
push
and
add
xor
mov
pop
cmpsb
inc
hlt
xor
sub
sub
add
sub
pop
insl
jne
mov
test
push
rcr
adc
sbb
inc
inc
cltd
inc
lock
push
mov
lar
push
xchg
ja
in
nop
or
adcl
dec
shr
insb
xor
jno
pusha
or
insl
out
add
repnz
mov
popf
xorb
daa
ss
test
mov
jo
adc
mov
or
popf
cmc
andl
sbb
xorb
les
rol
or
test
ficomps
xor
incb
push
scas
mov
scas
mov
sub
in
rcrl
adc
fwait
test
in
div
prefetch
loopne
add
xchg
aaa
xchg
add
movsl
dec
and
pop
or
enter
daa
ds
mov
loope
rcr
fists
jne
popa
fildll
enter
ret
cmp
jmp
fstps
xchg
xor
sbb
shrb
xchg
jmp
cmp
fdivrs
adc
test
cmpsb
and
in
xchg
mov
rol
push
push
mov
dec
popa
pusha
sub
lock
pop
pop
dec
arpl
or
dec
in
das
loope
addr16
mov
das
es
inc
cltd
dec
or
or
inc
mov
sbb
ret
faddl
pop
nop
les
fs
inc
gs
or
adc
jns
cmpb
in
or
fsubrs
outsl
push
jecxz
push
xor
sbb
push
xor
aam
sub
shlb
filds
je
das
or
movl
imul
rcrb
inc
mov
mov
pop
dec
in
test
or
dec
fwait
cld
jne
lock
mov
cmp
pop
call
sbbl
mov
adc
add
mov
in
mov
in
mov
dec
push
or
cmc
inc
inc
inc
or
cmp
nop
arpl
ret
pop
add
dec
pop
fmuls
adc
mov
and
sbb
pop
inc
jne
or
in
sbb
repnz
xor
pop
dec
repnz
sbb
jb
cltd
sub
cmp
cmpsb
dec
inc
in
jb
inc
adc
clc
xor
add
xor
ds
lret
push
mov
clc
or
push
ja
sbb
dec
test
mov
add
sarl
cmpsb
fcompl
or
pop
pop
or
je
out
and
xor
adc
lds
sbb
xchg
pushf
mov
or
sub
dec
mov
dec
push
mov
test
call
adc
xchg
hlt
repz
sub
dec
mov
imul
in
xchg
sbb
rcrb
popa
or
leave
insl
push
in
movups
shll
fadds
jp
rorb
je
popa
outsl
fdivrl
lock
outsb
shll
push
jne
sarb
scas
cltd
fs
push
pop
hlt
add
cmpsb
or
mov
andl
arpl
cld
in
xchg
pusha
inc
prefetch
sbb
push
and
shlb
mov
gs
std
jmp
dec
or
aaa
sbb
shl
sarl
xor
call
icebp
xor
push
mov
loopne
int3
dec
cmpsb
dec
adc
in
test
call
dec
or
pusha
xor
add
cmp
sbb
and
dec
cmp
or
xchg
dec
xor
adc
and
xor
and
xor
leave
and
cmp
leave
and
dec
inc
dec
fs
xor
insb
add
jge
dec
dec
fistpl
inc
add
mov
adc
pushf
pusha
add
inc
push
in
int3
rcrb
es
loopne
lret
pop
enter
hlt
mov
daa
lcall
dec
lcall
push
mov
cmpw
sbb
addr16
clc
add
dec
das
sbb
mov
shll
movsl
aam
dec
adc
sbb
iret
xchg
xchg
cmp
int3
aad
or
jb
imul
adcl
fsubr
fadds
cltd
xor
pushf
call
shll
rcrb
mov
push
mov
adc
test
imul
mov
mov
xor
lock
imul
jae
push
repnz
add
push
dec
or
mov
mov
add
pop
push
mov
jg
push
or
and
mov
fadds
stos
cltd
js
loopne
push
jb
aaa
pop
imul
imul
pop
enter
in
loop
add
fsubrs
call
in
dec
repnz
call
insb
push
and
sbb
rol
or
in
addb
inc
and
call
call
roll
insl
pop
fadds
imul
in
adc
lods
inc
insl
adc
adc
pushf
add
out
lock
test
dec
push
mov
or
xchg
pop
movq
xchg
loopne
pop
es
data16
outsb
in
aam
sbb
push
gs
sbb
add
adc
or
cmpsb
outsl
ficoml
outsl
jnp
mov
and
mov
or
out
xlat
data16
into
jmp
cmpb
fdivs
dec
out
push
test
xor
repz
push
pusha
push
dec
jo
sbbl
sbb
xchg
sbb
jmp
push
jo
fcomp
push
xchg
cwtl
cmp
pop
jl
rorb
shll
cmp
or
jno
rorl
in
xchg
jno
test
dec
dec
outsb
shrd
dec
mov
dec
dec
dec
int3
rcl
cmpsl
nop
cwtl
push
xor
xchg
or
xchg
sbb
dec
mov
sbb
jo
lock
add
or
dec
and
push
or
push
lea
test
sbbl
fadds
mov
in
in
frstor
aad
lock
stos
mov
push
or
sbb
sbb
push
sbb
jno
je
push
repnz
dec
call
nop
inc
mov
cld
je
or
or
gs
mov
aas
inc
adc
mov
pop
mov
dec
xchg
add
mov
jbe
sub
gs
gs
es
mov
repz
jb
cmp
fisttpll
mov
enter
jns
jbe
fldt
fnstsw
inc
add
in
mov
mov
test
nop
sub
inc
ja
xchg
dec
stos
dec
xchg
jg
pop
inc
arpl
sahf
pop
add
mov
or
andl
mov
imul
pop
hlt
inc
xor
pop
xchg
jbe
leave
adc
dec
mull
adc
jl
pop
pop
cltd
pusha
inc
add
ret
leave
mov
jo,pn
adc
xor
adc
xor
fisttps
or
add
add
rorb
sbbb
lea
in
les
or
push
and
mov
shlb
cmp
add
push
mov
and
dec
inc
nop
aaa
dec
and
shrl
mov
fcomps
out
inc
idiv
cmp
sub
add
dec
ret
dec
test
nop
add
ret
js
dec
add
lds
cmp
adc
sub
pop
shrl
jo
jg
pop
in
push
call
in
add
mov
fdivl
push
pusha
and
add
dec
dec
adc
xor
nop
pop
push
pop
jmp
cmp
decl
lea
cmpsl
mov
jnp
jnp
das
ror
iret
hlt
es
pop
mov
stc
xchg
push
loopne
or
cmp
jnp
or
in
inc
push
or
or
or
test
or
test
xchg
inc
xor
daa
js
sbb
andb
call
inc
xchg
mov
or
mov
insl
lods
fadds
fadds
push
scas
cmc
inc
or
fistps
repz
pop
inc
xchg
dec
fwait
sbb
int
cltd
mov
jge
mov
mov
movsl
push
xor
jno
and
push
push
ljmp
sub
jg
mov
or
cmpsl
inc
push
push
cmpb
inc
inc
fisubl
lods
or
and
sbb
push
mov
jb
sub
outsl
fwait
cwtl
or
adc
decb
scas
mov
dec
popf
aas
lcall
mov
sbb
loopne
mov
aad
aam
mov
xor
adc
and
dec
xchg
or
mov
jne
sub
mov
or
clc
jno
cmpsl
sub
sub
or
in
jo
adc
push
mov
ret
xor
std
int3
enter
jae
inc
sti
xchg
in
outsl
movsl
or
or
int3
xor
jo
inc
xchg
hlt
test
lret
cmp
push
lds
mov
adc
pop
xor
enter
iret
xlat
dec
xor
adc
test
pushf
fsubl
dec
mov
pushf
pushf
sarb
mov
cwtl
push
mov
pushf
mov
fsubs
outsl
movsb
cmp
mov
cmc
test
repnz
or
inc
test
roll
ret
inc
or
enter
das
loope
mov
and
jl
je
push
mov
sub
out
movsb
xchg
nop
filds
dec
xor
dec
pushf
and
push
aas
test
jb
lds
int3
mov
pop
jb
mov
and
enter
sub
fmuls
cmpsl
add
add
inc
nop
mov
push
push
iret
xor
push
rcr
add
inc
cwtl
mov
sub
dec
or
loopne
add
movsb
sar
insb
mov
cwtl
dec
lds
push
jg
incl
aam
repnz
sbb
out
mov
lods
or
cmp
mov
testb
sbb
xchg
jge
lock
ret
ficoml
mov
jg
mov
incl
rcll
sqrtps
in
pusha
mov
test
jle
inc
test
loopne
or
sub
xor
popf
mov
js
sbb
aaa
pop
add
inc
in
mov
mov
mov
cmpsl
lea
testl
add
mov
mov
aas
pushf
faddl
cmpsb
aam
aas
rcl
cltd
adc
inc
sbb
or
fdivl
jo
mov
movsl
xchg
nop
fadd
jns
push
and
jne
or
sub
imul
out
mov
mov
sub
popa
nop
fadd
jg
adc
add
add
std
mov
lds
out
xlat
pusha
cwtl
or
inc
shl
test
and
add
test
pop
adc
mov
push
je
call
mov
in
and
cmpsl
mov
mov
int3
sub
inc
xor
inc
sub
lds
nop
iret
int3
cltd
or
mov
mov
js
or
push
mov
inc
test
sbb
sub
stc
mov
mov
aas
stos
sbbb
dec
adc
add
fcoms
pop
int
add
call
add
push
jg
inc
xchg
ficompl
adc
mov
adc
xchg
adc
push
xchg
inc
and
adc
pop
pop
mov
sbb
or
fisttpl
aam
loopne
ljmp
xchg
pop
jb
les
ret
clc
xchg
stos
andb
mov
repnz
jo
aam
enter
pop
in
add
xchg
jg
pop
in
push
push
push
pop
jo
push
popa
push
cs
pop
nop
lcall
into
enter
sub
in
iret
sub
mov
xchg
cwtl
jne
aaa
fists
test
xchg
mov
das
fcomps
lods
test
in
int3
cmp
xchg
enter
xchg
cmpsb
inc
sub
pop
icebp
sbb
xchg
aam
add
add
jnp
jmp
lea
inc
mov
dec
mov
in
push
frstor
adc
push
pop
nop
inc
pushf
xchg
imul
lods
mov
push
js
sub
nop
lahf
adc
xor
jnp
roll
fldcw
jl
enter
pusha
jo
out
fs
lods
lods
jbe
adc
das
nop
xchg
out
out
cwtl
jg
xor
adc
in
arpl
ret
push
les
pushf
mov
repnz
cltd
in
test
les
pop
in
xchg
inc
add
pop
sbb
stos
movsl
enter
add
pop
stc
adc
test
mov
shr
and
fwait
adc
mov
roll
fst
mov
es
inc
call
pushf
divl
and
add
xchg
popa
hlt
pushf
adc
test
mov
mov
push
xor
cwtl
pop
pop
inc
mov
pop
add
mov
dec
inc
aam
adc
insl
push
and
mov
mov
push
sub
inc
outsl
push
dec
adc
loope
lock
pop
lods
adc
scas
jne
mov
addb
enter
orl
push
loopne
or
add
pusha
mov
add
lods
or
cwtl
fildll
mov
or
adc
scas
xchg
lahf
popa
leave
jecxz
scas
push
mov
mov
sbb
add
xor
in
fisttpll
es
rcrl
cs
or
or
lcall
cmp
test
je
sti
add
in
arpl
mov
cmpsb
pop
add
movsl
in
mov
lock
mov
cmp
pop
dec
cmp
and
pop
push
xor
je
or
icebp
lcall
mov
loope
icebp
aam
insl
mov
enter
cmp
les
and
mov
or
adc
push
cmpl
add
call
xor
cmp
shll
int3
and
sub
push
fwait
iret
fcoml
jo
mov
cmp
jb
mov
movsl
int3
xor
popf
or
add
stos
push
outsl
cmp
orb
shrl
mov
xchg
nop
subb
mov
xor
xor
mov
fcoms
and
xor
adc
imul
les
push
mov
test
cmp
xchg
insl
fstl
sub
adc
sbb
mov
jb
lea
rcrb
enter
pushf
cmp
adc
rorb
test
adc
nop
or
xor
and
jb
cmpsl
mov
jae
inc
mov
add
xor
lret
in
dec
inc
add
xchg
or
enter
and
xchg
xor
mov
sub
jb
iret
or
cwtl
push
cs
adc
xorb
adc
test
fsubrp
cwtl
in
mov
cmp
mov
cmp
or
push
call
cmpb
test
sbb
inc
test
shlb
and
jb
adc
sub
sbb
int3
das
movsl
roll
cwtl
stos
inc
push
fs
imul
push
add
fs
in
push
or
mov
lods
es
inc
jns
adc
and
push
or
dec
and
clc
test
xchg
xchg
shlb
mov
xor
xchg
mov
pop
in
mov
lcall
mov
jne
xchg
xchg
xchg
pushf
movsb
lods
cmpsb
dec
repnz
jns
cmp
xlat
push
leave
and
dec
andb
leave
pop
nop
dec
cwtl
fs
pushf
pusha
fildl
popa
dec
cmpsb
push
push
pusha
dec
fsubr
lock
jbe
sub
leave
mov
mov
les
pushf
pop
sahf
sub
adc
adc
or
lods
js
shll
mov
out
movsb
push
call
pop
xchg
cmp
sbb
jb
mov
add
add
dec
enter
sti
or
and
jo
test
fbstp
cmp
pop
add
out
test
jae
sysenter
sbbl
loopne
loopne
in
mov
add
xor
loop
add
add
add
inc
sub
cmp
xor
ja
mov
pop
pop
lea
inc
jo
xchg
fsubrs
adc
shll
out
inc
in
sub
repnz
nop
pop
inc
faddl
fs
push
sub
cmpb
jl
xchg
add
sub
mov
cmp
xchg
adc
insl
push
or
das
enter
fildl
or
roll
roll
or
xor
out
add
test
sbb
xor
das
add
nop
mov
add
inc
xchg
or
mov
or
orb
or
call
or
cld
nop
fs
arpl
rol
shrl
xchg
add
adcl
enter
sbb
test
ss
inc
inc
or
or
or
sub
xchg
aaa
sub
sbb
jne
xchg
orb
xor
mov
add
sub
mov
je
lcall
xchg
in
dec
inc
add
pop
popf
sbb
mov
sbb
adc
fadds
pop
mov
pop
imul
mov
lea
bt
lods
aas
fwait
add
sbb
pop
rorb
loope
add
pop
prefetchw
test
inc
rcll
mov
cmp
jbe
mov
mov
push
adcl
push
pop
or
insl
adc
cmp
inc
fwait
test
mov
push
andb
or
and
push
add
adc
push
or
rorl
pop
adc
adc
mov
imul
les
cltd
mov
test
xchg
popa
inc
xchg
bound
sti
sti
andl
mov
dec
sub
gs
add
in
imul
inc
js
loop
movsb
test
mov
mov
mov
enter
lahf
mov
rolb
push
or
mov
fs
imul
js
pop
and
dec
xor
fadds
xor
dec
inc
jo
imul
mov
and
call
push
nop
rolb
fiaddl
adc
push
cmp
fcmovnu
mov
test
or
xor
dec
test
cmpsb
adc
dec
es
int3
enter
cmpb
sbb
push
xor
add
adc
pusha
xlat
inc
add
sbb
aam
cmp
jecxz
or
dec
in
je
pop
or
xor
cmp
rorb
xor
mov
cmp
xchg
and
ret
pop
mov
jg
movsb
dec
enter
mov
dec
pop
fistpll
dec
in
adc
mov
imul
jg
pop
popa
lods
mov
nop
sbb
xor
jns
sub
nop
mov
lcall
jle
mov
pop
push
ret
mov
subb
bound
push
test
sbb
popa
aad
sub
inc
sbb
cmp
adc
xor
add
mov
mov
cmp
sub
fistl
mov
add
xchg
dec
mov
rclb
pop
and
nop
mov
mov
sub
mov
adc
test
test
adcb
rcrl
data16
and
mov
shr
movsb
mov
popa
cmp
test
xor
test
js
nopl
es
push
lods
int
sahf
dec
loopne
js
je
loop
sub
cmp
insl
or
dec
mov
adc
movsb
xchg
fadd
lds
jnp
xlat
int3
sbb
aas
mov
add
dec
cmpsb
dec
ret
les
adc
add
pushf
jmp
push
cmp
pop
aaa
add
test
stos
mov
clc
aas
push
sbbb
cmp
in
push
lods
cmp
jae
or
xor
adc
scas
pop
mov
push
push
push
popw
hlt
lock
add
les
push
lods
scas
in
ljmp
jns
jno
mov
pop
push
push
adc
adc
push
adc
jno
bound
popa
in
xor
cmp
aam
push
and
loop
iret
outsl
lods
mov
jb
insb
inc
add
dec
in
aas
add
sbb
mov
insb
fs
dec
cmpsb
adc
add
cltd
sbb
cli
mov
sti
dec
jb
and
cli
scas
fs
xor
and
cmp
dec
dec
xor
add
add
dec
cmp
rclb
je
out
mov
add
dec
sbb
adc
shll
xor
and
xchg
adc
xorb
fisubrl
roll
repnz
in
cli
call
and
push
movsb
dec
dec
lods
iret
mov
mov
rolb
sbb
add
es
les
and
and
sti
and
das
inc
or
adc
call
adc
sbbb
add
mov
gs
inc
jmp
sbb
push
mov
std
add
mov
pop
lods
movsb
xor
adc
adc
outsb
cld
push
xor
icebp
inc
ficoml
sub
jnp
lods
push
repnz
xor
sbb
or
in
nop
idivb
mov
shrb
jge
or
mov
or
andb
mov
pop
inc
in
jle
adc
add
filds
and
mov
cs
in
subb
adc
xchg
mov
movl
or
xor
xor
push
push
pop
dec
sub
cs
mov
add
cmpsb
jae
and
inc
mov
push
sbb
lods
out
das
adc
nop
adcb
leave
sbb
imul
mov
lret
dec
sbb
iret
jmp
sbb
clc
out
loope
jo
push
mov
stos
cmp
inc
xlat
jl
out
loopne
mov
addr16
add
push
sbb
xor
add
add
jo
sahf
out
addl
add
adc
hlt
inc
add
rclb
imulb
hlt
push
mov
push
mov
inc
dec
lea
cmp
dec
mov
fistpl
repnz
decl
clc
jnp
mov
add
and
jns
repz
sarb
cmpb
out
insb
pusha
pop
movsb
pushl
movb
dec
dec
dec
dec
dec
dec
dec
dec
mov
in
push
mov
push
pop
pop
pop
lcall
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
xchg
mov
rcll
xchg
adc
ret
lods
stc
lcall
or
cmp
rclb
cmpl
push
int
jns
xor
push
mov
iret
repz
es
dec
outsb
je
mov
insb
outsl
arpl
fs
out
sbb
push
dec
imul
shll
cmp
mov
gs
xor
cs
insb
push
bound
and
outsb
inc
push
imul
xchg
add
aas
rdpmc
add
jnp
pop
in
incl
sub
pushl
or
inc
js
je
jb
gs
or
mov
or
outsl
add
add
add
mov
push
gs
insl
lock
popa
mov
popa
jb
mov
popf
jbe
push
outsb
dec
xor
xor
mov
insl
insl
cmp
in
jne
and
adc
add
das
das
pop
lock
push
inc
inc
gs
insl
bound
jbe
and
dec
outsl
jbe
dec
arpl
ja
push
jo
sub
addr16
dec
jne
xchg
mov
insb
dec
popa
subb
arpl
bound
inc
insb
jae
mov
scas
cmpsl
xchg
into
cmp
pushf
xchg
xchg
addr16
fcompl
inc
push
jne
xor
or
and
daa
push
scas
clc
in
cmpsl
cwtl
mov
dec
js
push
jne
cmp
pushf
mov
ja
pop
dec
inc
push
rcrl
das
jo
or
cmp
mov
mov
test
jbe
add
pop
fstl
adc
and
inc
orb
and
es
sub
sub
cs
movsl
cmp
cmp
ds
inc
stos
adc
das
pop
pop
mov
insb
rcrl
jge
jg
cmp
inc
fmuls
pushf
lcall
add
out
mov
inc
adc
xchg
negb
inc
insb
jae
cs
scas
jmp
mov
inc
jae
shr
mov
xor
lds
jnp
insl
and
jb
jbe
dec
push
push
sbb
aaa
cmp
inc
sbb
ss
outsl
int
and
push
xor
sbb
cmpsb
aas
aad
push
jo
imul
insl
pop
mov
popa
je,pn
jo
xchg
mov
mov
idivb
and
rolb
inc
ds
scas
int
mov
or
xorb
inc
popa
data16
daa
mov
jne
pop
ja
loopne
xor
and
insl
push
xchg
sbb
mov
xor
mov
dec
mov
int
shll
les
out
mov
add
xchg
and
sub
test
sbb
jp
sbb
fs
inc
pusha
push
xchg
je
addl
in
ds
fs
popf
jb
loope
mov
loopne
outsl
mov
test
daa
sub
lock
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
fiadds
inc
xchg
insb
push
in
inc
imul
xchg
imul
or
push
lcall
mov
push
xchg
idivl
jns
push
fistps
movsb
pusha
push
cs
insl
lock
adc
xor
bnd
aas
xor
hlt
pop
dec
nop
or
dec
add
pusha
out
dec
aaa
ja
or
ss
in
stc
jae
fs
push
hlt
cli
jbe
add
inc
jbe
je
xchg
push
mov
jo
andl
push
and
lds
xor
xlat
outsl
push
or
arpl
cmp
outsl
push
push
xor
inc
aaa
ret
or
mov
dec
xor
imul
in
jae
lea
rclb
shlb
leave
nop
inc
insl
imul
cmp
stos
sbb
popa
in
or
xchg
cmp
je
add
push
and
pop
push
cmp
push
pusha
test
addr16
jae
push
addr16
xor
fsubl
sbbb
add
sub
je
cmp
rol
movzbl
push
sub
lret
inc
sub
pop
jge
add
jmp
jo
in
push
lods
push
and
cmp
cwtl
ja
lods
vcvttpd2dqy
inc
and
dec
cmp
cltd
fisttpll
lcall
loopne
out
ss
add
ds
sub
rol
das
lret
jno
icebp
ret
repz
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
pop
add
cmpsb
test
out
aad
popa
dec
add
xor
insl
stc
fldl
js
jae
je
mov
fidivs
dec
pop
add
add
jb
sbb
sub
xor
mov
xchg
adc
adc
add
pop
movsl
jge
add
add
add
and
push
pop
push
push
pop
icebp
pop
or
aaa
ds
push
pop
hlt
and
or
cltd
divl
js
or
sub
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
jmp
into
jo
add
inc
xor
push
dec
icebp
xlat
push
stos
int3
js
jo
mov
xor
int3
rorb
sbb
pushf
xchg
lea
mov
and
jmp
xchg
pop
xchg
xchg
and
mov
fldl
push
test
dec
sub
xor
dec
sub
pushf
jo
pop
add
and
dec
jo
or
pop
data16
mov
sahf
push
pop
pop
int
arpl
push
fisubrs
mov
flds
in
and
sub
xchg
scas
xchg
and
adc
and
adc
add
and
and
add
ss
adc
add
imul
add
ja
roll
adc
jbe
mov
aaa
add
and
ficompl
out
ljmp
lods
and
add
test
incl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
sar
jmp
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
and
adc
stos
sbb
inc
mov
sub
push
add
pusha
push
int
push
pop
outsl
ja
sub
mov
gs
bound
dec
mov
je
stos
inc
ss
popa
mov
xor
mov
jp
out
sub
add
popa
addr16
outsl
js
push
push
inc
push
dec
fisubrl
dec
and
insb
jnp
int3
lea
mov
dec
mov
xchg
pop
movsl
outsb
daa
add
insb
in
dec
imul
pop
jns
inc
mov
imul
jbe
and
inc
jb
jns
daa
pop
jnp
or
jns
mov
dec
pop
pusha
aad
stos
or
addr16
cmp
inc
inc
pusha
les
push
mov
arpl
mov
inc
jbe
cmpsl
ficompl
mov
push
lahf
fs
movsb
sbbl
or
clc
popl
arpl
sti
cmp
push
inc
and
mov
sbb
in
jno
sub
pop
push
push
test
jae
cmp
and
pusha
insb
call
movsl
jae
addr16
subl
gs
sub
xchg
xchg
inc
push
push
push
push
dec
add
inc
dec
push
jne
repnz
mov
jae
mov
lea
stos
popa
fildll
dec
jge
jg
dec
test
mov
imul
call
test
push
jg
enter
jae
inc
in
inc
mov
xor
and
mov
sub
pusha
push
pop
xor
pop
das
scas
imulb
xchg
daa
xchg
mov
mov
pop
pop
cmp
repz
cmp
push
das
push
sub
sub
inc
jl
push
jle
mov
dec
mov
sub
addr16
sub
shll
sub
aas
imull
and
mov
sbb
inc
aas
dec
pop
pop
push
scas
push
cmp
push
jb
outsb
fst
cltd
imul
push
ret
js
lea
sbb
test
push
enter
jo
sub
sbb
fs
or
cmp
addr16
xchg
hlt
loopne
fdiv
cmp
repz
mov
int
mov
adc
clc
fnsetpm(287
sarl
int
test
loopne
shl
nop
sahf
out
fimuls
jo
dec
mov
inc
pushf
in
push
jmp
push
pop
mov
and
or
fs
je
orb
in
or
pop
pop
out
cmp
ds
jns
out
push
inc
inc
cmp
xor
jns
out
sub
and
dec
repz
adc
add
sarb
repz
pushf
jl
cmp
repz
repz
fiadds
mov
repz
inc
inc
cmp
jns
out
add
loopne
out
sahf
out
jl
sub
iret
repz
in
rcrb
xchg
cmpsl
pop
aam
pop
xor
jno
inc
shlb
jns
push
std
jns
xor
add
ljmp
cwtl
cmpsl
pop
push
sub
aas
sbb
jae
jb
xor
dec
test
lods
movswl
das
in
sub
add
sarb
insb
cmp
inc
mov
inc
dec
jae
je
gs
insb
inc
push
sbb
dec
inc
dec
xor
fwait
fs
inc
dec
dec
dec
push
push
and
push
dec
fbld
out
inc
dec
add
dec
dec
inc
add
adc
test
imull
adc
decl
into
mov
mov
cmpl
loop
mov
ds
pop
adc
jg
cld
clc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
fcomip
das
in
scas
jp
adc
fisubrs
xchg
out
enter
cmp
dec
imul
sti
dec
lret
add
inc
mov
mov
sub
fwait
mov
inc
sbb
pop
jns
ds
xor
incb
fisttps
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
lcall
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
mov
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
incl
pop
leave
loop
mov
xchg
dec
jg
test
xchg
scas
lods
fcoms
mov
iret
adc
cmpb
or
icebp
pop
pop
repnz
test
xor
es
mov
mov
flds
sbb
mov
out
leave
ljmp
mov
dec
test
push
filds
or
inc
and
shrb
and
test
add
das
inc
test
inc
or
push
gs
jbe
inc
jbe
out
jmp
sbbb
dec
lcall
push
into
mov
or
sbb
push
and
add
xor
sbb
aas
push
adc
fbstp
add
adc
aas
ficompl
xor
cmp
or
and
xor
dec
xor
adc
outsl
idivb
jbe
pop
adc
xor
ss
add
push
or
sub
sti
out
jbe
xor
pop
sbb
dec
and
sub
sbb
divb
dec
or
pop
add
sub
and
imulb
out
add
adc
add
pop
ljmp
cmp
cmp
pop
push
pop
or
sbb
sub
dec
inc
cmp
push
std
out
or
or
xor
inc
dec
push
pop
dec
cmp
cmp
lcall
push
cmp
push
mov
mov
pop
pop
jge
inc
mov
or
dec
dec
pop
push
dec
and
mov
addr16
pop
push
shl
daa
xor
add
and
xor
fiaddl
je
lea
dec
cmp
xor
mov
pop
ss
mov
sti
sub
inc
push
pop
ds
xor
iret
mov
pop
xor
sbb
adc
and
pop
push
dec
cmp
pop
dec
push
xor
movsl
lods
mov
outsl
push
pop
jle
xor
fisttps
inc
xor
js
sub
lret
pop
cmp
pop
mov
push
mov
jb
jne
and
and
cmp
jae
xchg
inc
pop
or
sbb
nop
cld
sbb
sbb
adc
and
pop
dec
push
push
inc
daa
clc
push
cmp
mov
testb
sbb
sub
clc
xchg
cmp
adc
jg
adc
push
adc
dec
cwtl
in
push
cmp
imul
jl
sub
nop
push
repz
out
xor
push
push
rclb
loopne
adc
push
push
xor
jle
or
outsl
jg
pusha
pop
push
idivl
mov
push
push
xor
rorl
and
pop
testl
dec
scas
ss
cwtl
or
jmp
dec
inc
sbb
cmp
outsl
insl
pusha
outsb
cmc
sbb
popa
outsb
insb
adc
push
popa
or
dec
and
popl
push
imul
insl
and
xor
and
push
or
iret
repz
and
nop
mov
cmp
xorb
pushw
xor
cmp
es
push
push
push
mov
neg
out
add
cmp
ds
outsb
ss
pop
sub
lods
adc
pushf
and
push
push
add
pusha
pop
and
scas
cs
aam
je
xlat
sbb
aad
or
or
pop
or
pop
in
inc
jbe
mov
inc
pop
stos
mov
fisttps
adc
inc
adc
sbb
or
jmp
pop
iret
jmp
sbb
push
push
and
daa
mov
ficoms
sub
stos
mov
push
jmp
sbb
dec
or
sub
mov
pop
sub
insb
push
dec
ds
jno
and
pop
pop
push
fld
jb
push
fildll
addl
sub
or
push
jp
and
sbb
in
dec
jno
in
out
mov
xor
cmp
dec
xchg
xchg
out
pop
ja
ja
xchg
ss
cld
xor
cmp
adc
pop
ss
jecxz
xor
add
data16
imul
or
pop
lcall
cwtl
pop
scas
fildl
daa
push
pop
ret
push
mov
inc
dec
cmp
ss
pusha
sub
or
xor
pop
ss
inc
push
das
push
lds
add
push
daa
add
cs
jne
clc
pushf
sahf
adc
add
and
mov
sub
or
gs
and
pop
ret
pop
xchg
stos
pop
cmp
and
mov
pop
push
xor
mov
sub
cld
xor
loop
dec
roll
adc
add
inc
xchg
loope
or
push
lcall
ret
sbb
cmp
xor
and
push
or
add
or
add
xor
ja
and
in
push
xor
fstpl
es
push
imul
xor
jle
loop
sub
pop
cltd
into
scas
daa
push
xchg
xlat
int
xor
in
sbb
pop
and
mov
pop
and
ds
push
mov
es
aaa
iret
and
shrb
insb
or
xchg
adc
pop
cmp
jmp
xchg
adc
lahf
movzbl
addr16
push
cld
cmp
int
cwtl
fidivrs
cmp
addr16
dec
aas
adc
dec
dec
ja
insb
jne
loope
xchg
movsb
adc
jecxz
dec
xor
jmp
pop
cs
add
pop
mov
gs
push
shr
sub
and
pop
shrb
cmp
lcall
mov
add
clc
or
pop
push
test
and
push
sbb
adc
in
mov
bound
insl
sbbb
stos
sub
push
shlb
push
push
xor
add
pop
or
jge
sbb
add
rcrl
scas
and
push
jmp
cmp
xchg
cmpsb
call
or
ds
xor
imul
mov
xor
xor
std
pop
sbb
adc
and
adc
sbb
fwait
lock
inc
cmpsb
or
adc
cmp
inc
inc
sbb
inc
jno
inc
inc
jp
xor
push
test
or
cmp
shrl
mov
inc
push
mov
lods
js
sub
ficoms
mov
xor
ja
and
mov
das
add
idivl
mov
or
inc
fsubrl
inc
dec
sbb
cmp
es
enter
ds
cmpsb
or
pop
and
inc
call
ret
push
push
cs
inc
push
scas
xlat
ss
cli
test
push
adc
or
or
push
mov
mov
out
push
add
xor
js
bound
add
push
lret
add
dec
lds
cmp
and
add
sub
pop
out
jp
pop
xchg
std
je
mov
mov
pop
bound
push
jno
ds
push
or
push
je
and
cmp
add
pop
je
sub
push
outsb
aas
xor
daa
cs
and
xor
js
test
sti
add
push
add
jae
and
push
out
test
ret
ja
inc
sarl
nop
push
jo
inc
in
mov
aaa
pop
xchg
das
xor
testb
sbb
mov
dec
adc
push
inc
push
and
push
sbb
adc
cmp
push
dec
fstl
das
loopne
daa
sub
mov
cmp
push
fsubs
sub
pop
sub
ds
adc
mov
int3
ds
pop
sbb
pop
loop
stos
mov
out
xor
pop
jle
pop
fdivrp
xor
sahf
fisubs
xor
lcall
mov
loopne
xor
int3
push
ret
sub
sub
daa
and
jno
ds
sbbb
push
inc
inc
ss
pop
ret
inc
jo
outsb
dec
xor
ret
add
imul
push
ret
pop
xor
push
sbb
stos
pop
lcall
or
cmpsl
jne
push
cmp
pusha
or
inc
sbb
sarb
sub
inc
adc
mov
jbe
adc
add
add
jo
pop
sbbb
outsb
push
push
dec
xor
push
adc
nop
lahf
je
push
pop
and
sub
dec
sbb
adc
add
jl
xchg
int3
aas
cmp
and
cmp
loope
out
fbld
lock
fsubp
imul
cs
hlt
pop
movsl
mov
inc
cli
push
loopne
daa
mov
add
xor
lret
das
xor
push
ret
in
push
jo
nop
repnz
pop
cmp
cmp
add
pop
xor
enter
outsb
pop
xchg
jo
xor
and
push
cmp
cmp
sub
mov
out
inc
xchg
cmp
add
xchg
test
js
dec
lret
sub
loop
sbb
ret
js
jnp
mov
dec
and
jg
push
lock
shr
das
js
and
jns
enter
bound
and
sub
rolb
loopne
inc
adc
sbb
cmp
les
or
push
es
cmp
loopne
test
inc
xor
mov
das
and
add
mov
pop
xor
sbb
enter
sbb
jg
or
movsl
push
jmp
in
and
xchg
mov
cmp
sbb
push
and
inc
dec
sub
sbb
inc
inc
sbb
js
xchg
jmp
fisubrl
push
xorl
and
lahf
inc
pop
mov
lods
or
pop
aaa
adc
mov
iret
inc
xor
xchg
jnp
sbb
fstps
and
mov
iret
pop
lods
cmp
ljmp
inc
scas
pushf
ss
mov
cmp
dec
sbb
cmc
sub
inc
push
push
mov
in
push
dec
inc
pop
sub
dec
jle
adc
cmp
add
and
shrl
pop
insl
push
xchg
cmp
jns
xchg
adc
cmp
pop
mov
xor
pop
push
and
push
add
inc
push
push
cs
call
push
pop
adc
adc
cmp
sub
sti
xor
adc
adc
int3
cmp
and
pop
pop
sbb
ss
sbb
inc
shlb
in
sbb
inc
push
loop
mov
and
loop
data16
das
ficomps
hlt
lds
dec
jns
into
or
inc
cmp
outsl
in
jge
adc
mov
and
inc
and
and
push
push
cmp
into
inc
or
cmp
push
adcl
cs
jae
add
imul
sahf
lods
xchg
pop
lea
add
xor
sbb
adcl
jnp
adc
add
dec
add
out
dec
outsb
sub
jmp
out
dec
int
adc
mov
das
sbb
mov
sbb
pop
inc
sub
mov
movsl
movsl
cmp
or
aaa
adc
fstpl
jge
sbbl
adc
and
jne
mov
dec
sbb
cmp
mov
push
push
fwait
cmp
and
jo
aad
sub
xchg
push
xor
push
cmp
aaa
mov
adc
sbb
push
insl
cmp
adc
lods
mov
mov
aaa
subl
es
pop
leave
and
enter
ja
and
adc
es
daa
movsl
das
pop
add
test
xchg
dec
lods
leave
sbb
lahf
or
pop
loop
cmp
pop
xlat
call
pop
dec
pop
cmp
xor
cmp
ds
or
dec
dec
loopne
idivl
scas
cmpsb
js
pushl
and
pop
sbb
adc
sbb
xchg
dec
pminub
insl
push
pop
daa
roll
fimuls
dec
aas
add
scas
jnp
push
adc
cmp
mov
and
mov
gs
push
push
dec
push
adc
and
dec
test
and
sbb
shlb
outsl
daa
sbb
in
pop
pop
xor
mov
adc
pop
bound
pop
ret
int3
mov
inc
sbb
mov
adc
cmp
push
sub
adc
push
ds
pop
lods
imul
mov
insb
xor
push
icebp
aaa
test
and
add
aaa
ret
xor
popa
es
add
mov
sub
insb
gs
std
push
faddp
ja
fs
push
add
inc
push
xchg
std
sub
outsl
inc
add
rolb
addr16
lods
push
loopne
add
das
cmp
mov
add
pop
inc
cmpsb
and
outsb
pop
and
stos
jecxz
sti
xor
push
adc
shlb
xor
int
sarb
iret
lock
ss
and
insb
flds
loopne
jo
fisubs
stc
sahf
out
loopne
pusha
andb
insb
out
in
icebp
push
push
out
mov
ss
inc
testb
dec
adc
add
push
dec
dec
inc
sbb
dec
cs
shlb
mov
jg
loopne
mov
lahf
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
cmp
je
insb
out
adc
cli
mov
sub
sub
out
inc
mov
mov
sbb
mov
ds
pop
sbb
xchg
push
jle
cmp
fsubs
sbb
ljmp
test
xor
dec
xchg
pop
shl
dec
push
pop
cmp
mov
pop
adc
adc
pop
push
and
xor
aaa
nop
dec
ret
inc
push
dec
cmp
add
dec
mov
rclb
mov
dec
arpl
xchg
out
dec
fidivs
cwtl
dec
mov
iret
mov
js
push
pushf
cmp
dec
cmp
leave
jae
test
xor
xor
sahf
cmp
or
clc
add
in
cmp
dec
fmul
add
inc
mov
push
jbe
je
inc
js
cmp
outsb
pop
add
ret
dec
push
dec
pop
int3
adc
pop
jnp
sub
add
adc
leave
jnp
cmp
outsl
incl
xor
sub
sub
xor
inc
xor
inc
xchg
sub
scas
push
xor
lret
jmp
sbb
push
outsb
add
cmp
add
mov
cmp
mov
sub
inc
dec
je
jns
test
jbe
push
jb
cmpb
outsb
jo
popa
push
insb
cmp
jg
popa
outsb
mov
inc
and
orb
push
loopne
add
popa
push
pusha
testl
or
aaa
mov
insl
ffreep
xlat
das
sbb
pop
es
push
xor
dec
adc
mov
fnstenv
sbb
mov
sub
iret
rcll
xor
mov
and
add
test
mov
pop
adc
cmp
xchg
sub
push
xorl
cmpsl
cmp
xor
sub
orl
mov
push
mov
mov
lods
and
inc
xor
inc
clc
orb
sub
xor
dec
mov
push
ret
push
dec
cmpsl
add
jp
inc
das
iret
popl
das
dec
dec
fnsave
movsb
pop
jb
adc
cmp
pushf
push
movsl
in
out
add
sti
lcall
movq
pop
inc
je
jns
push
not
mov
fsubrs
push
sub
inc
outsl
rcrl
xor
lea
mov
lods
xchg
sub
jno
es
sahf
notl
mov
das
push
push
jo
dec
fwait
mov
gs
mov
jns
mov
inc
ds
popa
xor
inc
in
add
es
pop
scas
stc
cs
enter
mov
ja
push
rorl
push
negb
das
pop
das
jl
scas
cmp
mov
or
push
repz
jbe
adc
dec
lret
nop
push
mov
imul
imul
mov
in
sbb
insb
mov
cmp
loope
cs
insb
ds
cmp
mov
jns
out
pop
add
xor
imul
stos
inc
pop
insl
push
and
aaa
repnz
sub
mov
je
cmp
xchg
push
sub
xchg
push
mov
leave
push
pop
pop
push
sub
iret
jae
dec
push
fiadds
pop
arpl
cmp
jnp
jne
xchg
sbb
xor
cmp
pop
push
idivl
in
jnp
pusha
testb
xchg
aaa
sti
loope
js
push
fistps
lahf
out
sahf
sub
lea
mov
divl
ja
ss
and
test
fidivrs
push
pop
push
sbb
inc
es
push
nopl
aaa
adc
sarl
addr16
mov
xor
jge
outsl
push
adc
or
inc
repz
repz
jae
mov
repz
out
and
and
iret
fwait
jmp
sahf
icebp
mov
dec
repz
pop
push
push
inc
and
iret
repz
and
cmpsl
stc
cmp
test
inc
iret
sarl
cwtl
mov
mov
call
add
pop
aas
push
jb
lahf
out
mov
les
push
add
fdivp
jmp
cmpsl
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
jmp
push
mov
xor
adc
mov
pop
in
pop
mov
cli
pop
mov
idivb
fsubs
int3
push
and
pop
sbb
enter
aas
cmp
adc
or
adc
pusha
or
add
or
jb
add
into
subb
scas
or
nop
pop
inc
add
outsb
push
outsb
insl
xchg
pop
add
decl
pop
or
aas
inc
push
push
jge
jmp
xchg
je
push
cmp
ja
aaa
push
mov
fisubs
adc
jae
fisubl
cmp
xor
push
jae
dec
cmp
dec
cmp
sahf
mov
je
push
ljmp
cmpsb
dec
add
pop
arpl
push
inc
mov
ja
push
dec
pop
je
jns
mov
fisttps
jp
das
pop
xacquire
push
repnz
outsb
popf
cmpl
inc
imul
or
adc
jnp
dec
or
scas
sbb
jae
dec
mov
ja
jl
mov
jl
addr16
push
lret
and
loope
jns
dec
cmp
ret
ret
and
or
pusha
es
insl
jo
fisttps
in
pop
insb
je
push
addr16
jo
jae
es
sub
aas
aas
adc
sub
push
mov
mov
mov
xor
xor
out
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
and
mov
ds
add
cmp
dec
mov
gs
or
xor
and
push
mov
cmove
add
pop
add
or
lock
ja
push
or
mov
ljmp
sub
or
or
or
xor
and
jb
adc
pop
dec
adc
push
pop
or
rcrb
xor
push
xchg
jp
adc
fstpt
adc
and
push
or
push
sbbb
push
push
jecxz
xchg
inc
mov
and
and
pop
pop
dec
or
dec
pop
dec
dec
pop
mov
sbb
js
cltd
rcrl
mov
cli
fwait
pop
jnp
dec
push
lcall
xchg
mov
ja
loope
aas
adc
orl
cmp
or
xor
push
inc
push
leave
dec
mov
int
xchg
and
push
cs
fnsave
or
and
push
mov
pop
fwait
das
and
xor
adc
pushf
ret
mov
sub
add
dec
push
rcr
dec
xlat
inc
or
add
jnp
cmp
daa
ret
jbe
cmp
adc
addl
loop,pt
stos
mov
mov
ficompl
jo
ficomps
mov
aaa
mov
and
jnp
addr16
inc
arpl
adc
adc
fldt
mov
stos
stos
test
scas
and
daa
lods
daa
jge
xchg
and
das
fimull
push
jnp
das
divl
icebp
pop
xorl
lds
and
jno
mov
mov
imul
popa
daa
pop
xchg
push
sub
das
dec
shlb
loope
pop
cs
and
cmp
xor
pop
and
sbb
test
or
adc
das
mov
js
fiaddl
fsubrl
js
lahf
pop
xchg
outsb
cmpsb
pusha
adc
pop
ds
sub
test
addr16
lea
jg
mov
add
test
mov
or
fcomps
aaa
pop
mov
insl
and
mov
sbb
xor
mov
fwait
add
outsl
lret
xor
fwait
cmp
or
aaa
add
fcoml
jb
sub
cmpl
pop
jl
xor
sbbb
imul
fcoml
add
ss
leave
out
and
pop
add
mov
rolb
xchg
daa
adc
clc
pop
leave
ret
inc
pusha
aad
data16
or
cmpsl
stc
or
inc
loop
xor
push
jae
sbb
lret
and
sbb
sbb
or
jo
es
push
clc
je
cmp
das
mov
pop
add
or
and
add
inc
mov
pushf
xadd
or
jmp
sbb
add
sbb
inc
mov
inc
adc
jp
adc
addr16
fmull
mov
add
mov
test
push
jb
outsb
test
lock
and
sbb
in
push
pop
lret
sbb
xor
js
and
cs
adc
cmp
loope
adcb
pop
les
pop
sub
sub
jo
jo
popl
inc
xchg
outsl
adc
popa
xchg
mov
js
push
add
test
movsb
femms
cmp
nop
pushf
push
cmpsb
and
dec
shlb
into
clc
xchg
and
imul
adc
aaa
or
xorb
and
and
ss
aas
dec
lock
jle
rcll
loop
mov
push
push
loopne
jnp
jae
or
adc
xchg
inc
or
scas
enter
inc
je
sbb
leave
push
push
mov
or
arpl
push
and
inc
push
cmp
push
mov
lret
rcrl
dec
rcr
mov
add
ss
xor
cmp
int
out
sbb
xor
dec
popa
or
push
mov
push
xchg
adc
shr
fs
pushf
pop
pop
adc
pushf
xor
and
adc
shr
adc
push
cwtl
push
or
pop
mov
es
data16
push
pop
or
mov
inc
inc
or
dec
mov
hlt
push
push
push
mov
xchg
test
jmp
test
pop
pop
dec
sbb
dec
mov
jg
pop
addr16
sbb
or
mov
add
inc
setge
loope
dec
cmp
xor
pop
imull
pop
mov
sarl
mov
dec
xchg
xor
push
sbb
inc
inc
lods
pop
adc
jmp
xor
cmp
push
sahf
ja
test
adc
pop
sbb
and
repz
out
andl
ds
dec
cltd
or
xchg
popw
add
add
pop
or
fldcw
add
das
adc
sbb
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
mov
insb
ss
sub
add
int
das
or
adc
int
mov
pop
add
add
insb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
push
ret
dec
lods
add
out
arpl
sub
pop
cs
and
push
jbe
popf
push
adc
mov
or
xchg
sub
pop
xor
scas
movsb
push
pop
xorl
shlb
jo
les
xchg
cs
jbe
fs
mov
add
and
cmp
lret
dec
or
adc
subps
imul
es
add
push
or
ret
inc
out
clc
mov
inc
pop
pop
sub
push
pop
or
cmp
add
adc
sub
rol
incl
or
inc
sub
dec
xor
pop
push
dec
add
pushl
sbb
xor
and
and
and
xor
pop
push
or
push
pop
push
dec
add
pop
orb
dec
or
or
pop
and
lcall
xor
pop
inc
add
inc
add
adc
fwait
in
in
inc
and
mov
push
dec
adc
sub
xchg
mov
ljmp
adc
xor
ss
pop
dec
or
dec
dec
pop
pop
or
xor
cmp
push
inc
add
add
push
cmp
dec
dec
push
adc
dec
and
sub
cmp
xorb
shll
adc
enter
add
in
test
dec
and
mov
fsubrs
gs
dec
mov
pop
lcall
and
or
push
adc
xor
and
loop
dec
adc
in
pop
dec
add
shlb
cmp
out
pop
adc
or
insl
mov
pop
pop
sub
lcall
pop
shll
sahf
dec
in
push
outsl
inc
lcall
js
test
mov
ret
xor
mov
xor
inc
fisubrl
push
push
adc
test
mov
push
sbb
sub
push
and
std
mov
dec
inc
dec
push
dec
add
xor
add
outsl
add
out
addr16
inc
sub
pop
push
fcoms
inc
push
or
and
ds
push
ds
fiadds
push
and
push
dec
sbb
aas
sbb
stos
or
adcb
aaa
jne
pop
inc
inc
aaa
pop
push
jno
addr16
daa
pop
daa
or
adc
push
pop
push
and
incb
or
and
dec
and
jmp
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
imul
cmpb
aad
sbb
cwtl
stos
pop
fsubrs
jg
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
decl
popf
rorl
and
sub
sub
fdivr
incl
fimull
cwtl
insl
xor
jg
mov
incl
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
mov
leave
ret
sub
xchg
mov
data16
mov
call
jmp
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
mov
int3
lret
rep
cs
outsl
arpl
test
add
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
jmp
mov
fwait
stos
flds
pop
jb
das
dec
insl
aas
push
xor
js
inc
or
jmp
and
jl
sub
inc
pop
cmp
je
dec
arpl
sub
inc
push
jmp
dec
sub
jns,pt
jne
xor
jnp
xor
pop
inc
cmp
or
cmp
imul
push
push
cmp
xor
pop
aaa
inc
inc
push
dec
and
int
out
push
aaa
push
xor
sub
xor
xor
xor
ja
inc
push
xor
xor
and
aaa
inc
add
jns
inc
cs
inc
imul
pop
pop
lahf
test
push
push
into
inc
and
aas
inc
test
lcall
lahf
mov
movsl
pop
sub
or
inc
pop
xor
mov
xchg
pop
out
push
dec
enter
in
scas
bound
inc
xor
xor
les
outsb
xchg
jnp
fistpl
dec
jbe
jge
lock
arpl
xchg
shrl
xor
mov
sbb
cmp
leave
xor
cmp
sub
adcb
sub
fisubrl
sahf
dec
push
ss
cwtl
lods
sbb
push
pusha
add
jo
aad
or
xor
xor
or
jmp
push
pop
cmpsl
dec
nop
inc
mov
mov
and
push
and
or
rcrb
dec
or
jp
and
mov
rcrb
pop
fsubrs
loop
sub
mov
add
push
adc
icebp
clc
xor
sbb
pop
cmp
cvtdq2ps
lds
mov
loop
dec
lret
shrl
jge
xor
mov
inc
shlb
xor
adc
dec
adc
fildl
js
xchg
adc
mov
xor
es
mov
mov
in
push
mov
jmp
xchg
sub
inc
fsubs
sbb
or
ret
pop
outsl
adc
ss
sahf
and
mov
enter
xchg
adc
push
addr16
adc
mov
pop
ret
add
jg
outsb
je
xor
cmp
xor
js
xor
into
into
test
push
pop
insl
gs
cmp
dec
xor
push
shlb
es
and
inc
aad
sub
sbb
mov
xor
insl
loop
pop
push
and
xor
inc
lret
push
dec
ljmp
insb
push
push
popa
je
push
jle
mov
adc
pop
jge
aaa
adcl
push
adc
clc
push
testl
push
gs
dec
rcrb
out
mov
sbb
jmp
dec
mov
push
aas
aas
sbb
aas
push
xor
je
int3
lods
pop
aas
adc
add
inc
dec
cs
sti
mov
xor
push
or
ljmp
and
out
inc
outsb
fists
dec
lcall
push
dec
push
stos
pop
cld
push
dec
add
arpl
addr16
rol
dec
add
push
add
nop
pop
mov
mov
and
addb
pop
pop
sub
push
mov
aas
push
add
addl
mov
popa
pop
mov
pop
push
fidivs
jb
pop
jmp
xchg
pop
mov
xor
xorb
test
xor
addr16
or
push
dec
das
cwtl
mov
aas
dec
push
test
xor
ds
jl
cmp
pop
test
negb
add
and
adc
fiadds
sbb
push
push
push
pop
sub
mov
call
adc
push
daa
cli
hlt
cmp
add
jo
enter
out
or
pop
or
push
outsl
imul
cs
stos
cs
pop
mov
mov
xlat
dec
cs
loopne
aam
or
dec
mov
xor
das
scas
adc
lcall
in
xchg
insb
xor
push
cli
push
push
pop
bound
mov
inc
sbb
pop
dec
xor
jbe
cmp
mov
mov
sbb
shlb
sub
stos
and
es
cmp
xchg
xor
or
dec
inc
cmp
inc
fstpl
xchg
ja
imul
pop
add
adc
sahf
xor
add
sub
xor
inc
imull
mov
dec
aaa
daa
pop
es
iret
push
xor
adc
push
fs
adc
jb
mov
insb
pop
pop
aas
pop
push
cmp
add
xor
ficompl
pop
sbb
data16
and
out
fdivr
dec
and
pop
xchg
pop
dec
pop
movsl
cmpsb
mov
pop
mov
repz
or
mov
cs
aam
aam
jnp
sarl
cmp
addr16
nop
or
dec
sub
sub
xchg
sarb
adc
pop
mov
aas
pushf
aas
add
sub
inc
dec
andb
and
sub
testb
dec
cmp
push
cmp
jne
jg
dec
test
cmp
adcl
pop
pop
scas
outsl
xchg
push
shrb
fs
inc
notl
dec
jae
push
popa
insl
insl
outsl
dec
outsl
xchg
popa
mov
and
jle
popf
add
inc
cmpsb
punpckhwd
fsubr
sbb
je
scas
mov
rorb
push
lock
inc
push
push
inc
dec
push
pop
xor
aaa
call
inc
push
pop
sbb
mov
mov
inc
dec
daa
sub
push
inc
add
fwait
pop
adc
js
dec
push
dec
jb
test
mov
or
xchg
jmp
lcall
loop
cmpsl
and
js
inc
jle
add
mov
out
add
mov
popa
mov
xchg
push
xorl
jnp
inc
loopne
push
jb
push
adc
and
sub
add
or
loop
loopne
xchg
push
in
aaa
gs
pop
addr16
div
data16
push
iret
cmp
shrl
mov
js
cs
mov
cs
cwtl
add
les
xchg
cmp
or
xchg
cmc
dec
outsb
jbe
icebp
push
clc
sbb
dec
or
push
lea
sub
or
or
pop
dec
sub
pusha
cmp
std
out
adc
push
jae
cmp
cmovl
cmpsl
inc
mov
dec
add
or
nop
cmp
rol
cmpsb
pop
inc
and
mov
push
fisttpll
cmp
xor
lock
sbb
movsl
pop
fdivrs
lods
adc
fsubs
jno
dec
and
or
mov
jecxz
adc
jb
loopne
lcall
push
in
mov
inc
sbb
mov
popa
xchg
dec
stos
jp
sbb
pop
adc
outsl
inc
mov
adc
rcrb
test
shlb
mov
lahf
xchg
outsl
lods
adc
sbb
inc
dec
sub
xlat
outsl
in
cmp
or
jo
ljmp
arpl
and
push
push
das
cmp
xor
dec
and
or
lea
sbb
sbb
push
sub
fstl
insb
push
mov
stos
sbb
outsl
insl
pop
xor
dec
and
testb
divb
das
push
mov
dec
dec
dec
inc
mov
imull
data16
stc
push
fldenv
pop
rolb
sbb
insl
ss
cmp
movsl
mov
and
xlat
mov
adc
or
cs
dec
sub
test
out
ss
dec
inc
xadd
out
and
cmc
inc
lahf
mov
dec
loopne
cmovo
pop
mov
mov
mov
nop
jo
maxps
dec
add
jecxz
cltd
push
ret
xor
daa
push
leave
xor
mov
cwtl
fwait
xor
add
push
or
mov
negl
dec
movsb
aam
add
push
sub
mov
movsb
add
jne
ror
xor
in
cmp
fwait
nop
int
daa
test
push
or
fiaddl
cmpl
pop
les
fwait
cmp
aas
jg
lcall
or
xchg
pop
leave
xchg
inc
inc
leave
xchg
pop
leave
cmp
pop
leave
xchg
pop
sub
and
pop
leave
xchg
add
fnstenv
pop
clc
aas
push
js
push
test
gs
cmpsl
mov
enter
jns
push
inc
ss
inc
pushf
andb
cmp
hlt
cmp
push
sahf
idivl
test
push
cmp
cmp
mov
cmp
test
iret
repz
repz
cmp
push
lods
nop
mov
out
lcall
push
and
and
inc
in
push
es
mov
adc
dec
inc
pop
dec
fstpt
lock
rclb
add
xchg
out
pushf
fmuls
add
pop
leave
sar
add
or
scas
movsb
add
mov
mov
push
je
clc
push
cmp
sub
testb
add
or
and
ja
dec
insl
mov
push
mov
mov
and
xchg
dec
das
jbe
and
dec
inc
pop
leave
and
lock
lock
add
das
adc
dec
xchg
outsl
add
scas
fs
inc
or
inc
cmp
jb
jo
mov
notb
jb
xchg
cmp
cmp
mov
mov
ss
add
cmp
cmp
es
push
cmp
cmp
rorl
add
bound
cld
loope
dec
cs
xor
jnp
mov
aaa
les
jae
pop
add
pop
in
xchg
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
sbb
jns
enter
in
xchg
dec
sub
adc
push
cmp
dec
inc
call
scas
movsb
mov
add
dec
pop
scas
in
xor
movl
push
pop
pushf
xor
mov
popa
mov
sub
mov
add
mov
inc
mov
and
ja
or
jns
push
or
xchg
testb
ds
dec
fildll
popa
sub
add
and
pop
jb
jo
and
nop
or
sbb
mov
aas
push
fdivs
mov
add
popl
or
xor
mov
pop
dec
aas
daa
add
push
dec
jo
cmpsl
adc
rolb
out
shrl
pop
mov
insl
outsl
fdivs
idiv
aam
fsubl
and
add
xor
inc
cmovle
inc
insb
int
cmpsb
mov
push
pop
inc
fstps
inc
jg
push
mov
imul
test
pop
sbb
out
dec
push
add
and
nop
es
hlt
inc
and
pop
cmp
divl
or
xor
inc
outsl
sbb
stos
fstl
outsl
jg
mov
lods
xchg
pop
nop
xchg
daa
mov
test
push
je
push
aam
test
inc
enter
cmp
jns
cwtl
inc
push
jl
xchg
push
adc
adc
or
pop
dec
inc
inc
nop
pusha
daa
pop
inc
lahf
xlat
or
pop
or
adc
scas
add
xlat
or
ds
cmp
inc
xchg
test
adc
xchg
adc
inc
cmp
sbb
pop
sub
mov
testl
and
add
iret
jae
cld
add
inc
sub
push
push
leave
mov
aaa
mov
and
pusha
aaa
and
in
shlb
mov
add
adc
dec
jo
mov
pop
and
out
outsl
xchg
xorb
in
hlt
jg
mov
and
dec
sahf
test
ja
add
fsub
pusha
jg
addr16
and
jb
xchg
movsb
adcb
xor
fstpt
mov
loopne
leave
mov
mov
test
pop
pop
adc
mov
js
ss
test
mov
nop
orl
add
andb
adc
sub
iret
dec
xchg
add
iret
cltd
mov
out
pushf
inc
daa
or
mov
out
add
setbe
mov
push
inc
sub
dec
rcrl
sub
and
jb
rorb
mov
dec
rcrl
dec
cmpsl
and
leave
or
aas
or
rorb
jns
dec
je
push
dec
rorb
or
inc
outsb
pop
or
jb
jae
in
mov
jne
add
outsl
dec
cmpsb
add
add
sbb
js
dec
lahf
jo
dec
and
scas
add
pusha
lods
outsl
out
or
add
lods
add
dec
lahf
addr16
lea
add
or
mov
inc
pop
pushf
inc
and
daa
or
push
jb
add
aaa
xor
adc
push
adc
xchg
xor
rclb
xlat
sahf
imul
addr16
fdivs
fsubl
sbb
push
cmp
dec
js
out
cmc
push
and
cwtl
push
sarb
add
cmp
mov
mov
imul
push
enter
push
rorl
movsb
adc
sub
cld
data16
addb
dec
or
push
filds
das
push
outsb
jnp
sti
push
dec
pusha
push
push
fsubrs
addr16
pusha
ret
pusha
aas
pop
out
pusha
aas
mov
inc
push
lock
test
aam
add
out
xchg
mov
jns
cmpsl
push
insl
mov
int
dec
dec
outsl
mov
cmp
add
insb
jl
out
mov
sti
xchg
ds
shll
mov
cmp
out
and
xchg
out
jns
out
push
inc
arpl
sahf
sar
pop
push
inc
xchg
dec
mov
cmp
pop
push
jge
movsl
fstps
push
cmp
cmpsl
xlat
cmp
sarl
xor
int
sahf
out
call
fpatan
cmp
repz
dec
sahf
out
lcall
xlat
iret
repz
cli
adc
in
sahf
out
ds
hlt
cmp
sarl
jl
shl
frstor
sub
push
or
jl
mov
fs
test
ds
pop
fcompl
pusha
cltd
enter
ds
or
xchg
dec
repz
arpl
or
lahf
cmpsl
stc
cmp
inc
gs
stc
xor
ds
push
cmp
ficomps
cmp
out
xchg
lret
add
mov
repz
repz
sahf
push
mov
sbb
jns
insb
pop
test
insl
mov
jns
lcall
outsl
or
out
lods
jo
mov
ja
ja
clc
cmp
push
mov
iret
repz
enter
push
jp
int
imul
pop
jbe
lahf
out
xor
mov
ds
pop
push
sbb
sub
sarl
js
out
sbb
sarl
mov
jl
or
repz
out
jle
js
push
jg
out
mov
xchg
addl
int
imul
jns
iret
rep
call
popf
addr16
rorl
test
out
out
fcomps
xor
cmp
lock
lcall
mov
jns
repz
imul
nop
cmpsl
adc
mov
repz
out
xchg
and
cmp
out
cltd
adc
pushf
repz
cmpsl
mov
iret
repz
out
sahf
cmp
out
ds
popa
movsb
pop
mov
xor
lock
mov
cltd
inc
cmpsb
inc
mov
dec
repz
fnstcw
and
aad
jbe,pn
mov
cwtl
mov
call
inc
daa
add
adcl
js
mov
mov
jnp
add
mov
dec
ja
fidivl
add
jb
stc
pushf
add
sbb
mov
and
pop
addr16
in
imul
cmc
out
inc
aas
or
shlb
lock
or
ss
push
call
pushf
dec
pop
stc
xor
inc
test
ret
push
push
mov
imul
aaa
aas
or
fs
stos
popf
shlb
scas
inc
pop
enter
inc
in
inc
mov
ss
push
pop
mov
adc
and
das
ss
aas
int3
jg
push
mov
aas
rclb
iret
es
dec
fmuls
pop
mov
inc
in
push
fbstp
jl
fdiv
scas
xorl
add
pop
cmpsl
aas
sbb
out
lret
mov
push
iret
mov
mov
divb
lds
mov
inc
repnz
es
mov
leave
dec
and
aas
add
mov
call
int
stos
push
inc
decl
mov
mov
aaa
pop
jl
inc
jmp
ja
mov
daa
pushf
xchg
inc
inc
mov
repnz
cmp
dec
test
inc
add
inc
sarb
inc
rcrb
lahf
xchg
xchg
sbb
dec
push
pop
push
test
sbb
popf
not
pop
and
mov
xor
mov
fwait
push
enter
std
loop
aas
bound
ficoml
insb
and
cld
and
jmp
xchg
push
dec
and
fmul
and
dec
cmp
aas
xchg
inc
push
add
popf
mov
add
pop
pop
divb
fcomps
nop
or
rcrl
inc
lock
das
cmove
mov
pop
add
inc
dec
xor
and
jns
movsl
in
pop
scas
shrl
and
lods
aas
in
decb
push
out
mov
dec
repnz
hlt
adc
cld
outsb
das
mov
or
inc
dec
push
xchg
int
jg
insb
pop
icebp
roll
mull
push
pop
dec
inc
das
xchg
testb
xchg
sub
xchg
xchg
xchg
and
cmp
ds
in
addr16
add
pop
cmp
xchg
dec
dec
repnz
sub
push
mov
in
scas
jge
mov
nop
xchg
dec
movsb
shr
in
mov
mov
pop
cmp
daa
dec
inc
repnz
in
scas
push
stos
inc
nop
inc
enter
mov
fs
fdivrs
or
dec
xor
mov
dec
inc
cmp
pmulhuw
lds
add
mov
jl
add
pop
mov
dec
xchg
dec
mov
jae
or
fdivrl
pop
enter
pop
and
jns
dec
nop
movsl
cli
inc
pusha
pop
mov
jo
pushf
pop
mov
test
and
jp
push
dec
inc
and
iret
repz
add
dec
cmp
repz
pop
push
arpl
mov
or
or
inc
or
xchg
jb
and
test
pop
xchg
pop
jae
leave
add
lds
add
dec
mov
pusha
and
xchg
adc
sbb
dec
sahf
fsts
add
cmp
cmp
cmpsb
jae
cmp
add
addb
daa
pop
leave
jo
scas
mov
daa
daa
daa
mov
pop
leave
icebp
stc
add
enter
dec
adc
dec
mov
popa
cmp
cmove
mov
pop
push
subps
iret
in
insb
mov
insb
popf
mov
push
xlat
push
mov
add
bswap
mov
fists
add
dec
dec
nop
pushf
inc
bound
jl
insb
push
mov
or
pop
push
mov
outsl
addl
xchg
bound
faddl
jle
arpl
imul
daa
mov
add
cmp
xor
shll
arpl
lods
arpl
mov
add
mov
adc
mov
pusha
js
push
out
push
pop
inc
lock
dec
repnz
fs
fs
cmp
aam
pop
push
addr16
outsl
push
jb
and
dec
ja
jg
pushf
fs
xchg
fildl
mov
or
add
call
leave
pop
xor
add
dec
out
push
pop
loope
jb
gs
push
pop
dec
push
das
das
das
das
push
push
pop
push
imul
das
jg
mov
push
mov
push
or
repz
rorl
xlat
push
cmp
repz
paddsw
clc
jns
out
adc
push
adc
adc
jns
out
adc
adc
sahf
push
inc
pop
push
sbb
adc
sbb
mov
pop
leave
and
into
inc
jb
push
add
xor
mov
pop
dec
int3
inc
icebp
cmpsb
out
add
pop
out
mov
insl
adc
daa
push
outsb
xor
ja
and
ljmp
add
xchg
add
sbb
adc
add
dec
and
push
xchg
push
pop
and
push
lahf
sub
cmp
push
dec
jbe
jns
iret
add
fdivp
je
in
cltd
xchg
xor
mov
xchg
adc
insb
je
scas
sbb
test
leave
addr16
mov
and
push
or
pushf
test
adc
xor
sahf
ja
push
push
add
out
je
das
xorb
cmp
push
add
pop
leave
je
shlb
movsb
pop
add
push
cwtl
xchg
pop
mov
and
sub
imul
and
fmul
pop
inc
push
iret
pushf
enter
pushf
cmp
mov
inc
jb
jbe
or
jbe
xchg
xchg
mov
xchg
xchg
daa
iret
enter
push
and
dec
sahf
pop
call
in
sbb
mov
insb
push
cltd
scas
mov
push
push
shlb
xchg
insb
pop
push
in
es
xchg
pop
inc
sbb
sbb
xchg
dec
inc
pop
cs
out
out
add
xor
dec
movsb
iret
dec
jb
push
test
insl
shrb
push
lock
lock
aaa
xchg
pushf
sub
push
jbe
mov
push
shll
cmp
mov
aas
mov
jbe
jbe
iret
in
iret
dec
pushf
in
pop
pop
adc
outsb
call
sbb
outsl
leave
add
outsl
pusha
pop
in
inc
xor
pop
cwtl
pop
sahf
frstpm(287
in
pop
scas
pop
mov
pop
mov
mov
pop
cvtdq2ps
rorb
pop
sub
pop
and
jns
pop
je
mov
pop
cmpsb
lods
mov
test
jo
repnz
push
popf
test
jno
sbb
cmp
push
daa
and
fcoml
jno
adc
ss
sbb
cmp
inc
inc
pop
cmovnp
pop
pop
pop
pop
pop
pop
arpl
jae
jnp
pop
pop
pop
pop
sbbl
pop
fwait
pop
pop
pop
pop
pop
mov
pop
mov
pop
ret
pop
lret
pop
bswap
leave
leave
leave
push
or
leave
leave
or
or
leave
leave
leave
leave
push
add
leave
leave
add
xchg
pushf
pop
and
and
out
stc
in
inc
sahf
push
pop
adc
and
addl
jb
inc
pop
in
mov
jae
imul
inc
movsl
pop
lods
ja
pop
in
push
lock
addr16
or
xchg
and
daa
adc
sbb
and
leave
rep
mov
aas
xor
cmp
push
inc
xchg
out
jns
dec
push
or
pop
pop
mov
adc
add
popf
mov
mov
mov
add
shl
cmc
pop
aaa
sub
in
pop
pop
pop
pminub
dec
ja
movhps
daa
dec
and
push
inc
or
fisubrs
xorps
aaa
push
xcrypt-ecb
cmpsl
push
pop
repnz
aas
add
or
roll
cmp
xchg
mul
dec
or
pop
or
mov
push
and
stos
push
jp
jne
das
pushf
mov
jp
sbbb
out
outsb
pop
lcall
cld
add
mov
pop
outsl
into
pop
fmull
xchg
xchg
jbe
out
in
test
punpcklbw
pusha
jb
inc
fwait
lods
xchg
inc
pusha
pop
pusha
cmp
jbe
popa
imul
jns
leave
repz
xchg
orb
das
daa
adc
out
fs
clc
cmp
daa
add
push
popa
sbb
mov
daa
das
and
das
popa
mov
nop
cmp
jbe
add
cmp
cmp
jae
mov
push
push
stos
pop
mov
mov
push
or
cmp
repz
loope
in
or
cli
popa
testl
repnz
push
mov
dec
fidivrl
jo
jb
push
ret
sarb
fldenv
jbe
cmp
jmp
repz
into
lock
or
adc
rcll
sub
arpl
or
xor
jns
arpl
in
in
arpl
arpl
inc
mov
and
and
cmp
fcmovne
xchg
fs
fs
aas
pop
outsl
xchg
xor
fs
jo
pop
xor
sub
mov
mov
incl
lock
sub
gs
cmp
and
xchg
out
jbe
jb
imul
mov
ja
mov
and
push
jnp
sarb
leave
jmp
stos
repnz
mov
cmp
fdivrs
push
test
call
add
pop
xor
aas
data16
xchg
and
push
pushaw
data16
jb
data16
andl
inc
lcall
pushf
fsubl
ficomps
hlt
decl
addr16
and
push
or
jns
push
push
ss
mov
repnz
addr16
addr16
enter
test
addr16
and
loope
cmpsb
mov
fistpll
sub
out
add
jns
adc
xchg
dec
cs
push
xor
mov
ja
push
add
iretw
add
cltd
dec
sub
fs
jbe
push
lds
push
cmp
aaa
nop
jle
push
imul
imul
mov
aas
add
jae
pop
jg
andl
fdivrs
imul
mov
mov
xchg
addr16
xchg
sub
mov
xchg
xlat
decl
push
pop
mov
clc
mov
cmp
out
xchg
pushf
xor
fsubrl
xchg
insb
in
lcall
mov
inc
jbe
std
push
imul
in
push
or
loopne
repz
xor
mov
jbe
pop
dec
ds
iret
add
xor
cmp
cltd
pushf
movsb
lods
jo
cmp
sahf
pop
xor
aaa
add
and
or
insb
in
daa
and
inc
xchg
push
daa
adc
out
sbb
je
in
and
add
out
aad
leave
leave
cmpsl
scas
enter
ja
cltd
sbb
insl
mov
xchg
xchg
cmp
mov
push
add
xchg
and
js
insl
jmp
imul
insl
addl
xchg
pushf
bsr
add
xchg
and
fisttpll
int
aad
push
mov
mov
xlat
or
in
add
outsb
adc
outsb
in
in
and
outsb
xor
outsb
in
in
inc
outsb
dec
outsb
push
outsb
pop
outsb
jne
in
pusha
outsb
push
or
cmp
mov
pop
cmp
cmp
push
add
cmp
add
js
cmpb
jns
mov
sbb
cwtl
push
mov
cmp
mov
mov
repz
and
sbb
into
fsubrs
daa
andl
outsb
adc
xor
cmp
fisttpll
push
pop
fnsetpm(287
ret
jnp
push
add
push
cwtl
je
add
js
sahf
out
mov
xlat
fwait
xchg
add
jns
ret
btc
out
aam
clc
out
and
jo
push
add
cmp
add
pop
imul
cmp
out
xlat
jo
cmp
repz
or
cmp
jbe
push
pop
pop
punpcklbw
negl
jo
mov
lea
xchg
sahf
pop
fs
jo
ja
in
cmp
mov
jo
enter
jo
jno
push
add
pop
push
sub
push
cmp
fldcw
xchg
mov
jno
push
outsl
mov
pop
outsl
mov
mov
push
daa
les
fwait
testb
mov
xchg
xchg
push
xchg
add
or
sub
fisttps
dec
mov
shlb
add
daa
pop
iret
mov
fisttps
lahf
and
jb
jb
mov
mov
jb
add
daa
daa
pop
leave
clc
mov
in
cmp
loopne
xchg
xchg
jmp
add
lahf
adc
mov
addr16
and
jae
pop
mov
daa
pop
add
imulb
mov
jae
jb
push
jmp
jb
mov
mov
mov
shr
xchg
sbb
es
jmp
pop
repz
inc
ret
add
jecxz
cmp
test
jg
mov
je
leave
stos
push
outsb
xor
iret
insb
mov
and
pop
add
mov
push
push
scas
inc
in
in
mov
or
decl
cwtl
je
je
je
in
dec
xchg
je
xchg
xchg
shr
hlt
lsl
jmp
jne
xor
leave
dec
ja
daa
push
comiss
and
fstpt
xchg
mov
lea
insl
jne
jns
out
add
xchg
out
xchg
popf
movsl
xchg
out
sahf
lods
or
cmp
lds
int
aad
repz
fstl
in
in
and
adc
xchg
pop
add
xor
sahf
out
outsb
cmovno
dec
add
je
imul
cs
xchg
incb
lea
cwtl
out
jbe
mov
shrl
cltd
jbe
and
push
mov
jns
mov
add
loop
incb
ja
ja
lock
ja
ja
ja
dec
push
add
push
cmp
iret
add
hlt
fdivrl
daa
cltd
pop
mov
add
jo
mov
push
and
divl
repnz
js
js
js
dec
push
dec
das
cmp
fisttpll
in
push
das
lahf
dec
push
cvtps2pd
lods
aas
punpckldq
push
or
cld
push
loopne
xchg
add
jae
mov
inc
nop
out
pusha
pushf
or
nop
nop
mov
pusha
insb
pop
iret
mov
cwtl
je
out
add
lar
lret
js
js
fisubrs
loop
ljmp
test
jns
adc
mov
movntq
fisttpl
push
add
add
sysretw
outsb
jbe
iret
repz
sahf
or
push
or
cmp
or
scas
out
jb
jns
mov
mov
xor
ja
xor
and
jp
mov
dec
hlt
sbb
and
mov
pushf
xchg
or
inc
jp
fwait
sub
mov
pop
xchg
push
jp
mov
iret
daa
fwait
xchg
push
pop
sub
xlat
addr16
clc
fstpl
into
push
ss
andb
jp
add
xchg
pop
cwtl
dec
jnp
je
mov
dec
jnp
jnp
js
mov
das
outsb
jnp
mov
mov
jbe
jle
xlat
xchg
dec
push
push
imul
mov
add
and
dec
cmp
jg
jecxz
jno
dec
out
stc
ja
cmp
in
jg
jl
push
pop
and
or
or
or
repz
inc
or
pop
or
addr16
jb
jge,pt
in
xchg
jl
jl
jl
xchg
push
xor
outsl
jl
xchg
inc
es
push
add
aas
mov
xor
das
das
das
cmp
jge
jge
jge
inc
das
and
jge
inc
flds
jns
jge
sbb
mov
scas
dec
xchg
out
js
cmp
rolb
nop
pushf
pushf
pushf
xor
cwtl
cmpsb
mov
mov
pushf
pushf
lret
pop
setle
jns
or
jge
or
dec
icebp
in
or
add
or
fnstcw
pop
movups
jle
inc
ja
lods
leave
test
aas
call
push
mov
mov
in
outsb
add
enter
call
inc
pop
xchg
inc
inc
jle
inc
sbb
out
xchg
scas
sti
push
pop
push
pop
cmp
enter
jg
jg
jg
aam
sbb
jg
jg
les
nop
jg
xchg
out
xchg
push
add
stos
mov
mov
sbbb
mov
add
addb
mov
jg
daa
and
jb
xchg
lcall
mov
sbb
clts
in
mov
stos
xorb
rolb
ljmp
cli
adc
sbb
adcl
fwait
dec
adc
imulb
dec
andl
xchg
mov
pop
push
loope
xchg
pop
dec
addb
in
incl
call
fmulp
lods
cmp
mov
add
xchg
out
aad
fisttpll
jb
pop
scas
incl
cmpl
pop
cmp
push
or
sub
cmp
dec
inc
lcall
addb
in
addb
mov
fstp
in
jne
xchg
into
test
movsl
pusha
ss
mov
out
out
imul
add
xchg
mov
or
or
sub
cmp
mov
psubsb
add
pop
jns
dec
mov
cmpl
psubb
test
out
add
add
outsb
mov
push
add
or
jo
pop
leave
fadd
addr16
push
lock
mov
sbb
add
mov
jbe
fists
push
in
jbe
cs
cmpb
iret
add
ror
pop
and
clc
lock
xchg
sti
add
jno
enter
ja
cmp
and
filds
popf
je
inc
fildll
lsl
pop
and
or
test
cmpl
test
test
enter
adc
aas
fsubr
loopne
add
inc
pop
lock
out
sub
pop
psubusw
or
jns
adc
sub
xor
cmp
or
iret
cmp
dec
ds
push
pop
repnz
repz
sbb
push
jo
sbb
xchg
andb
or
nop
inc
sub
sbb
daa
cmp
repnz
call
xchg
pop
xchg
mov
add
xchg
xchg
sahf
cmp
enter
pop
push
bnd
jae
jl
adc
xchg
xchg
mov
xchg
mov
xlat
testb
ja
mov
mov
mov
sbb
ret
xchg
push
pop
mov
pusha
mov
mov
add
adc
out
test
mov
mov
loopne
mov
outsb
loopne
aad
jg
mov
cmp
jns
push
add
sub
xchg
pop
loopne
pop
mov
push
hlt
jp
out
pop
popa
or
fwait
dec
jns
sidtl
orl
adc
aam
fisttpl
addr16
xchg
int3
daa
xchg
dec
daa
add
mov
sub
movaps
mov
ss
add
dec
cs
dec
ja
xor
cs
inc
mov
push
fsub
jns
dec
push
add
jl
sti
mov
mov
xchg
int
repz
xor
ss
movsb
mov
adc
out
and
nop
cwtl
leave
repz
outsb
push
test
add
add
and
dec
movsb
adc
push
add
mov
leave
leave
repz
lahf
pop
push
cmp
cmp
push
push
or
es
jae
pusha
mov
mov
prefetch
or
adc
leave
out
or
push
mov
jbe
mov
push
dec
cmp
dec
dec
push
add
pop
pop
in
in
movd
repnz
in
shl
adc
sbb
pop
das
sbbb
rcrb
fsubr
in
in
sbb
call
push
xchg
out
xor
jbe
mov
pop
dec
imul
mov
fisubl
push
rolb
xchg
dec
cmp
addr16
and
iret
sti
nop
adc
mov
dec
pop
fs
dec
nop
pop
hlt
fs
nop
pop
insl
nop
dec
push
sahf
out
fiadds
mov
and
or
in
shl
out
leave
addr16
cld
or
in
xchg
adc
sub
out
ss
xchg
inc
das
pushw
add
repz
jbe
jle
iret
repz
xchg
mov
xchg
or
pop
lock
or
xchg
push
pop
inc
xchg
iret
mov
mov
push
xchg
xchg
xchg
or
jmp
cmp
pop
stc
add
divps
dec
fisubs
xchg
sub
pop
pop
pop
inc
xchg
dec
xchg
push
xchg
pop
xchg
pop
pop
pop
pop
xchg
outsb
xchg
jbe
jle
pop
pop
pop
pop
xchg
sahf
xchg
icebp
repnz
cmpsb
xchg
mov
mov
pop
lahf
xchg
rclb
repnz
in
xchg
clc
push
pop
scas
add
or
and
adc
push
jns
out
and
and
and
cmp
inc
daa
dec
sahf
out
sahf
sub
bound
push
leave
rorl
sub
jp
and
adcb
lea
xchg
push
fldt
rclb
je
das
rclb
cmpsl
fcmove
stos
iret
sti
xchg
aas
xchg
and
xchg
xchg
pop
loope
movsb
add
pop
out
xor
pop
and
pop
or
lods
push
jo
dec
sahf
add
pushf
pop
das
mov
mov
cmp
sti
adc
sub
inc
dec
addr16
repz
pushf
lea
out
cmp
lods
dec
adc
mov
in
in
das
ds
movups
das
dec
xchg
dec
push
xchg
pop
cmp
mov
jo
xorb
sahf
out
mov
cmpsb
add
iret
mov
scas
outsb
daa
mov
repz
fsubrl
out
out
imull
jns
in
xchg
xor
cs
cmp
sahf
xchg
out
popa
jg
xchg
ja
seta
xor
in
aaa
scas
mov
mov
cmp
iret
xchg
pop
cmp
xchg
or
push
dec
dec
cmp
es
cwtl
scas
iret
js
out
jb
xchg
setns
mov
xchg
add
add
mov
jb
enter
cltd
inc
cltd
les
jnp
add
xchg
pushf
add
pushf
fmull
add
sarl
leave
repz
ud2
jmp
or
decl
lcall
push
and
adc
jns
xchg
cmp
pop
jns
xchg
out
gs
jnp
sahf
out
jnp
xchg
xchg
sahf
xchg
out
pushf
sbb
out
jns
enter
in
es
fiadds
lcall
or
add
push
outsb
loopne
adc
mov
cmp
inc
or
fwait
fwait
pushf
cmp
cmpxchg
add
mov
push
rolb
rcrb
aas
fcomps
or
inc
aaa
jns
femms
out
pushf
add
add
jns
adc
sbb
push
adc
sahf
out
lar
pop
cmp
jns
jo
sbb
inc
rclb
scas
iret
xchg
inc
sbb
push
inc
cmpsl
cmp
test
add
push
jns
pushf
iret
push
scas
outsl
daa
mov
pushf
jae
and
stc
or
pushf
loopne
daa
iret
mov
xchg
add
repnz
cmpsl
push
dec
mov
insl
in
or
xchg
pushf
jmp
popf
sub
cmp
fs
mov
mov
lahf
popf
xlat
cmpsl
scas
xchg
out
cmp
dec
and
or
mov
repnz
mov
pushf
stc
sahf
fcmovne
sbb
add
in
add
pop
shrl
pusha
punpckhbw
sbb
bswap
leave
leave
inc
xchg
fwait
mov
stos
pop
mov
mov
dec
sahf
push
lret
rorl
pusha
repnz
and
incb
lahf
cmp
push
lahf
push
lahf
dec
xchg
pop
insl
int3
cmpsl
inc
lahf
dec
lahf
and
fcmovne
push
pop
xchg
mov
mov
jl
lds
out
mov
repnz
xchg
xlat
fistps
out
out
loopne
cmpsl
jp
lahf
lahf
lcall
push
xor
sub
fisttpll
cmp
add
add
push
pop
pop
bound
popf
push
jb
outsl
or
xchg
negl
mov
lods
divl
in
jbe
fsub
psubsb
enter
ja
mov
sahf
xchg
sbb
add
xor
scas
and
lahf
out
jns
mov
scas
and
nop
js
pop
mov
xchg
mov
out
pop
mov
mov
xchg
out
mov
rcll
cwtl
mov
pop
repz
mov
mov
dec
mov
mov
xchg
jo
jbe
mov
addr16
dec
cmp
lret
psraw
xchg
nop
fistpl
movd
mov
xchg
mov
and
out
or
or
mov
pop
or
das
pop
jmp
mov
das
das
das
xchg
mov
mov
das
das
das
das
mov
mov
das
das
jmp
mov
repnz
in
in
sbb
sbb
sbb
in
in
push
adc
out
and
sub
ss
dec
push
xor
xchg
xchg
daa
adc
push
pop
xor
in
mov
punpckldq
cmp
repz
cmp
cmp
rep
aas
scas
inc
iret
repz
mov
inc
cmp
repz
inc
out
icebp
cmp
repz
cld
inc
incb
ds
in
dec
fimuls
dec
push
dec
pop
xchg
out
fisttpll
dec
cs
jne
repz
orb
push
xchg
push
mov
push
lods
push
mov
dec
dec
dec
outsb
pop
int
jecxz
ds
jns
stc
subps
dec
dec
dec
inc
bndldx
dec
fistpll
cmpsb
ja
mov
mov
andb
and
lea
cmpsb
mov
rep
xchg
cmpsb
aas
mov
cmp
iret
enter
setl
addr16
cmpsl
jg
cmpsl
push
cmpsl
cmp
repnz
cmpsl
push
adc
sahf
out
loopne
adc
adc
adc
add
jns
pop
jns
cmpsl
push
sbb
sbb
mov
cmpsl
cmp
xchg
out
sbb
jo
jg
cmpsl
xor
cmpsl
pop
and
out
mov
add
iret
jae
enter
add
fsub
fiadds
call
adc
dec
mov
repnz
les
push
stos
loopne
into
test
mov
in
es
add
clts
pusha
test
in
push
inc
cmp
enter
mov
mov
mov
add
call
lock
test
test
add
mov
test
cmp
insb
test
test
jo
pop
mov
inc
and
outsb
mov
cmpl
xchg
mov
js
mov
stos
mov
shrb
lret
test
xchg
xchg
daa
mov
maskmovq
testl
daa
mov
pop
and
adc
movsl
out
fimull
inc
dec
adc
stos
das
stos
sahf
out
pop
push
sbb
dec
aaa
jns
nopl
cmpsl
ja
cmp
mov
mov
dec
sahf
and
fimuls
jmp
mov
or
in
and
sahf
out
shrb
push
add
jns
add
enter
iret
or
in
fs
iret
out
cmpsl
cmp
add
sbb
push
push
cs
ss
add
ds
and
scas
inc
lods
dec
lods
push
lods
sahf
out
mov
pop
movups
jno
sahf
out
adc
adcl
pop
movsb
cmp
repz
lods
sbb
fwait
movlhps
push
pop
int3
sahf
out
es
and
ror
dec
in
and
hlt
fisubs
stc
cmp
es
daa
add
add
push
or
push
adc
pop
add
jns
sub
add
imul
sub
fnstsw
cmp
inc
xchg
push
fdivrl
dec
lods
lods
xchg
out
and
xchg
push
add
mov
dec
lods
fsubp
ljmp
scas
or
xchg
out
hlt
or
add
pop
test
aaa
femms
bndldx
cmp
sub
pusha
scas
xchg
jo
sbb
scas
jo
scas
iret
repz
xchg
add
daa
cmpsl
pop
mov
mov
or
sysret
xchg
xchg
and
or
jb
mov
lahf
imulb
scas
and
sbb
scas
and
mov
mov
jle
enter
scas
lahf
cwtl
scas
jns
out
mov
mov
outsb
adc
scas
jg
bswap
out
or
fs
rol
lock
addr16
into
lock
mov
adc
mov
repnz
and
aas
cmp
jns
leave
dec
push
or
sahf
out
sahf
imul
outsb
cmp
xchg
pop
invd
dec
dec
dec
sahf
adc
ja
mov
xlat
loop
and
dec
sahf
sbb
sti
clts
mov
iret
repz
adc
sbb
or
repz
and
out
jbe
pop
cs
movq
and
jp
test
xchg
sahf
cmp
repz
cltd
loop
test
mov
cs
mov
inc
inc
inc
mov
mov
xchg
outsb
jmp
in
outsb
xchg
mov
dec
or
leave
leave
in
pop
punpcklbw
gs
jecxz
mov
xorb
nop
pop
push
out
cwtl
mov
mov
mov
mov
fmuls
mov
sahf
sbb
rcrb
leave
rorl
sbb
nop
pop
mov
mov
mov
jns
ss
or
and
adc
repz
sub
sub
in
daa
iret
sub
inc
push
sub
popf
cmp
pop
push
sub
pop
daa
iret
jae
push
js
orb
nop
mov
ss
add
and
add
mov
jge
add
cltd
ds
xchg
sub
cltd
adc
sbb
dec
pop
xchg
insb
push
add
aas
inc
push
mov
adc
mov
sbb
gs
inc
test
aaa
dec
mov
mov
dec
add
out
inc
cmp
repz
cmp
sub
cmp
repz
or
clc
enter
cmpsl
in
call
out
sahf
fcom
ror
enter
iret
jnp
pop
mov
jns
leave
cwtl
nop
push
mov
sahf
insb
pusha
push
push
dec
inc
dec
shl
sub
or
add
lcall
mov
mov
add
jns
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
pop
sub
addr16
in
sbb
add
add
inc
and
xor
cwtl
cmp
dec
ljmp
fs
test
clc
xchg
je
add
add
push
test
jb,pt
in
andb
fisttps
mov
cld
test
cs
inc
jle
test
shll
xchg
pop
stc
lcall
iret
mov
in
call
ja
jle
adc
push
ficompl
mov
cmpsl
in
fidivl
rcr
fsubp
stc
jb
jle
icebp
dec
les
xlat
inc
dec
inc
and
push
cmpb
push
cmpsl
mov
aam
mov
dec
fiaddl
pop
jle
adc
pop
mov
xchg
fsubrs
sub
pop
das
inc
in
insb
and
pop
and
xor
pop
push
iret
dec
les
out
push
or
cmp
repz
adc
iret
adc
sbb
jns
dec
out
hlt
int
sbb
pop
push
cmp
xchg
das
das
cmp
fmul
mov
or
cmp
jnp
js
lret
in
lcall
sub
inc
ja
sbb
sub
call
pop
sarl
aas
xchg
incl
or
add
cvtps2pi
rolb
mov
and
cmp
push
jae
xorb
insl
mov
push
push
pop
inc
jg
fst
inc
add
inc
push
xchg
fdivrl
pop
aas
pop
pop
sbb
push
xor
inc
in
cmpsl
push
fisubrs
scas
cmp
inc
pop
jg
jl
insl
add
push
and
out
fdivs
inc
sub
add
shll
push
jb
add
pop
xchg
es
out
inc
rorl
sbb
sbb
adc
add
add
iret
loop
cmp
jnp
push
xor
sahf
notl
ds
shr
mov
push
and
push
or
add
test
cmp
out
loopne
jns
repz
sbb
adc
shl
jns
out
enter
sahf
out
sahf
mov
and
sahf
out
lods
and
in
aam
clc
push
fwait
nop
xor
adc
jne
out
xor
jl
test
xchg
xorb
pop
push
call
mov
out
daa
push
cmp
pop
js
xor
out
mov
repz
xor
insl
add
push
pop
ja
sahf
out
xchg
mov
bnd
jne
testl
add
mov
and
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
add
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
inc
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
mov
mov
mov
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
loop
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
sti
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
fidivs
les
lahf
into
ror
add
cmpsb
fmuls
and
stos
loopne
pop
inc
push
jns
rcr
inc
pop
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
fildll
iret
or
shrl
push
ficoms
incl
popa
sarb
and
mov
cltd
xchg
mov
mov
or
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
inc
pusha
test
xchg
sbb
push
sub
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
pushl
ret
movsb
sti
hlt
shrl
imul
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
in
mov
mov
add
lcall
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
jg
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
ljmp
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
aaa
std
mov
rclb
or
add
mov
das
es
incl
cld
mov
mov
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
decl
pushf
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
sar
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
out
push
aaa
pusha
mov
fidivrs
mov
jmp
or
mov
lret
mov
cmpsb
mov
sarb
call
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
and
sbb
add
sub
testb
jl
je
xchg
fadds
fs
push
lods
add
jne
aaa
xchg
inc
push
xlat
sahf
out
sahf
fcomp
fcmovu
dec
sahf
out
fsubp
jecxz
sahf
out
sahf
in
jmp
sahf
out
in
repz
cmc
mul
jns
out
clc
stc
cli
sti
lock
cld
daa
adc
orl
inc
cmpsl
inc
dec
adc
popf
sbbb
push
mov
inc
inc
sub
je
push
dec
bound
imul
inc
vprotq
add
bound
int3
push
in
aaa
push
popa
je
push
cltd
cmpsb
xchg
out
and
inc
dec
mov
bound
inc
jns
xor
pop
inc
cmp
pop
mov
pushl
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xchg
movsb
mov
xor
bound
pop
mov
mulb
inc
jbe
pop
insb
imul
es
gs
dec
add
mov
dec
inc
xchg
add
es
outsl
or
daa
push
sub
cltd
mov
popa
or
sub
call
je
and
pop
push
mov
fs
adc
and
adc
leave
jbe
jle
gs
inc
mov
adc
inc
inc
mov
sbb
push
add
mov
popa
jns
pop
push
inc
rorb
imul
shll
insb
aaa
cmp
push
and
push
in
and
or
inc
stos
insl
or
pop
adc
push
dec
mov
pop
inc
aas
and
inc
inc
mov
inc
pop
jnp
mov
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
push
lret
and
dec
jne
mov
jge
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
or
jns
pusha
inc
mov
mov
inc
adc
add
dec
dec
int3
push
or
jo
gs
outsl
orb
and
mov
push
xor
lahf
and
fwait
mov
mov
imul
adc
lahf
xchg
add
js
out
jb
rcll
xor
jo
or
lahf
dec
push
sbb
outsl
outsl
test
movsb
adc
sbb
mov
mov
in
cmp
push
loop
xor
inc
cmp
arpl
add
mov
cmp
mov
mov
xchg
push
loopne
push
outsl
insb
jns
mov
lock
inc
jb
push
mov
gs
inc
outsl
arpl
adc
mov
push
push
bound
ja
inc
push
shll
addr16
pop
dec
pop
jg
push
dec
add
mov
jecxz
sti
int3
lcall
inc
add
pop
and
sbb
add
sbb
iret
lret
or
je
adc
mov
push
shrb
inc
popl
push
push
xor
jo
sbb
push
mov
push
inc
dec
pop
bound
push
jns
arpl
je
pop
imul
inc
adc
jo
fstps
adc
inc
pop
xchg
fildl
xlat
notl
lds
stos
add
dec
mov
add
push
xor
push
adc
pop
dec
dec
pushl
push
fdivr
loopne
adc
xor
ja
add
pusha
add
fcmovnu
jae
or
add
add
or
in
add
pop
pop
push
or
or
or
or
or
adc
mov
adc
adc
push
add
pop
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
fsubr
aaa
cmpsl
jo
add
and
add
sahf
add
les
js
add
add
das
jne
inc
mov
push
cmpsb
loopne
jb
imul
ds
incl
and
inc
push
adc
pop
and
xor
inc
mov
adc
push
shl
and
bound
js
add
or
and
add
mov
and
xchg
cmpsl
jno
inc
and
arpl
inc
adc
or
cmp
add
sub
dec
rorb
adc
add
subl
push
or
or
ja
adc
push
adc
fwait
outsl
incb
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
add
mov
push
xor
or
popf
and
js
nop
cli
ljmp
lret
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
imul
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
lock
mov
cmp
popa
or
pushf
ret
ja
out
cmp
xor
sti
push
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
scas
or
xor
inc
xchg
pusha
add
or
sbb
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
fdiv
lahf
std
movsl
jecxz
pop
mov
lcall
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fimull
ljmp
in
mov
orb
int3
lcall
fs
scas
mov
in
js
pop
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
in
jmp
and
lea
pop
cwtl
int
arpl
push
out
or
mov
mov
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
idiv
stc
xor
hlt
and
xchg
jmp
sbb
xchg
xchg
add
pop
jb
mov
mov
mov
sub
xor
mov
jl
rorl
adc
fcmovnu
decb
hlt
push
add
stc
loope
mov
sar
andl
aas
pop
push
mov
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
cmp
push
clc
jb
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
fisubs
icebp
aas
std
cli
push
push
push
idivl
ljmp
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
or
ljmp
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
xchg
fistl
negb
pop
hlt
sub
movsb
add
lea
pop
jmp
jg
gs
std
xorb
jg
aad
adc
incl
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
ljmp
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
decl
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
incl
push
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
cld
cmp
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
ljmp
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
jmp
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
shlb
inc
and
pushl
mov
test
jg
mov
lahf
cld
sub
aas
stc
add
call
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
outsb
mov
cmp
fmull
enter
lock
mov
mov
pop
mov
sub
outsb
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
pop
in
pop
fmull
mov
pop
jg
add
jg
jg
mov
sub
adc
mov
mov
cli
jg
mov
push
push
sbb
stos
icebp
pop
incb
pop
cmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
lret
mov
sar
adc
aad
mov
lahf
xor
imul
dec
js
jle
add
mov
fsubrl
add
mov
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
fistpll
adc
lahf
mov
or
out
lcall
sti
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
outsl
lock
xchg
or
stc
out
mov
clc
push
std
mov
rcl
icebp
or
mov
pushl
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
in
iret
sbb
ss
lods
movsb
or
cmp
add
mov
jl
mov
add
call
cmpsl
lret
pop
fwait
mov
cmp
jmp
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
push
adc
jae
xlat
jmp
jg
push
and
fdivrl
xchg
lcall
jecxz
imul
andb
rorl
outsl
pop
out
jg
jno
ret
cmp
pop
and
out
jg
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
icebp
decl
in
sbb
xchg
imul
jmp
outsl
jmp
lock
add
std
mov
daa
jmp
faddl
mov
add
jae
jmp
pop
add
pop
stc
push
dec
out
fstpt
lds
jecxz
mov
enter
push
push
adc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
hlt
lcall
mov
fildll
fsubrl
dec
add
dec
push
orb
add
push
sti
pop
inc
dec
push
mov
in
sub
bsf
popf
jg
int3
pop
iret
and
add
scas
daa
dec
das
mov
mov
jbe
incl
stos
adc
popf
lds
clc
aam
jecxz
jne
dec
xlat
ja
inc
fcmovb
je
ficoml
add
pushl
int3
std
roll
out
cmp
jb
lods
jecxz
into
lods
sbb
add
negl
jmp
aad
jmp
inc
in
lahf
imul
ret
pop
lock
pop
int3
icebp
cmp
fmul
and
pushl
sarb
mov
sbbl
iret
sbb
mov
inc
call
fwait
cmp
push
cmpsl
lcall
int3
lcall
fucomi
stc
add
cmp
lcall
pop
mov
push
lods
cmp
imul
mov
lods
rcl
xchg
inc
scas
jb
mov
jle
dec
orl
movsb
lret
xor
loop
scas
stos
shrb
push
sub
pushl
and
mov
inc
pop
orl
xchg
mov
adc
sbb
cwtl
jp
ljmp
popf
pop
mov
divl
ret
js
clc
inc
sub
cli
jne
pop
and
fldl
or
mov
call
test
stos
inc
fcoms
push
xchg
in
fwait
pushf
repnz
inc
sarb
enter
rol
in
popf
test
inc
push
out
dec
insb
jo
xchg
mov
pushl
lea
outsb
shlb
mov
in
mov
andb
cmp
aad
outsl
sub
jae
ds
adcl
int3
cmp
outsb
fwait
inc
clc
xorb
pop
xchg
iret
cltd
adc
decl
shll
scas
aaa
xchg
cmp
sbb
cltd
icebp
xorb
xchg
je
mov
sar
jne
sbb
aad
adc
je
mov
bound
mov
xchg
ss
decl
push
and
cmp
pop
sub
lods
mov
jge
cmp
js
jp
pop
or
add
addr16
dec
mov
pop
mov
or
cmpsb
cld
fstps
jg
decl
lock
pushf
dec
mov
xlat
mov
mov
stos
stos
cmc
outsb
movsl
inc
jmp
call
sbb
pop
xchg
stos
fbstp
or
cmp
xchg
sbb
push
xorl
jle
push
pop
rcl
sub
dec
ficompl
fs
sbb
arpl
addb
jecxz
xor
ss
lcall
pop
adc
faddl
stos
sbb
daa
in
hlt
pop
pop
lea
push
dec
incl
enter
int3
xor
xchg
popa
cwtl
sub
into
ret
inc
pop
outsb
add
pushl
ret
fwait
mov
inc
lock
clc
sub
call
adc
pop
cld
jg
mov
jbe,pn
js
mov
and
and
jo
xchg
jne
scas
popf
cmp
call
sub
aaa
movsb
stos
lods
dec
sub
sahf
and
data16
pushl
sbb
ss
adc
icebp
cmp
cmpsl
ljmp
incl
fldenv
stc
xchg
and
jmp
test
addr16
mov
out
outsb
jmp
inc
sub
dec
or
fisubs
xor
xchg
pop
es
aad
fcoml
out
mov
movsb
test
in
jg
mov
out
aad
push
loopne
outsb
inc
add
pop
push
mov
jmp
mov
fcoml
mov
mov
movsb
pop
cmpb
xchg
cmc
or
mov
ljmp
fcmovnbe
sub
inc
pop
xor
and
stos
outsb
push
inc
insb
jecxz
data16
incl
fdivrs
lods
dec
fdivr
push
adc
mov
xchg
lahf
das
jle
fimuls
jmp
lcall
add
pop
aam
push
in
ja
loope
mov
pushf
xchg
add
mov
sarb
jnp
pop
pushf
xor
or
mov
in
or
decl
outsl
inc
sahf
push
sub
add
stos
in
xlat
sub
lods
inc
mov
stos
dec
ffreep
and
inc
push
ja
mov
stc
sbb
xchg
cs
out
insb
pop
orb
or
jecxz
enter
das
lcall
fimuls
jno
dec
jmp
adc
pushf
call
stc
xchg
call
hlt
cli
pop
and
mov
lcall
xor
inc
xchg
addr16
lcall
jb
dec
lods
popf
in
mov
cld
jmp
dec
fildll
repz
mov
jl
sti
mov
mov
aas
int
cmc
jmp
jno
cmc
mov
push
ljmp
js
pop
pop
imul
cmpb
fisttps
imul
cmp
sar
sbb
out
dec
shll
adc
shlb
test
xor
cmp
leave
mov
xchg
push
es
or
cld
repz
incl
add
mov
pop
lcall
pop
push
sub
jnp
andl
cmp
into
and
mov
jecxz
pop
jle
ja
lret
adc
sub
jg
or
inc
mov
ret
call
xor
or
push
test
stos
lahf
xchg
jle
jno
in
lcall
dec
jb
into
add
ficoms
dec
shlb
stos
push
ficompl
and
adc
xchg
jb
fcomip
pushl
inc
fstpl
stc
lcall
mov
pop
orl
mov
incl
adc
gs
or
cmp
and
rorb
jnp
jno
sbb
add
jmp
sub
xor
push
pop
rclb
iret
js
add
mov
call
mov
out
popf
out
cmp
and
insl
pop
inc
cmpsb
push
jmp
aas
inc
add
test
and
dec
std
lea
and
xchg
xchg
adc
lcall
sub
ret
jle
fldt
mov
sbb
xchg
movsb
lahf
adc
cmp
sub
pop
dec
out
xlat
ja
adc
or
andl
mov
add
clc
pop
repnz
test
popf
call
icebp
jno
push
and
repz
inc
adc
jnp
xor
jg
jmp
ret
addr16
sub
sub
and
cmp
inc
mov
call
js
and
sbb
and
cmp
lcall
lods
cmc
and
in
sti
xchg
or
lods
cmp
inc
mov
arpl
jmp
mov
es
xchg
and
mov
insb
inc
jle
jmp
push
addb
and
mov
inc
push
add
sub
xor
gs
jnp
movaps
repz
mov
push
inc
dec
xchg
into
adc
lret
sbb
pop
inc
es
and
jb
adc
push
repnz
add
lret
push
aas
mov
fdivrl
rorb
push
cmp
jg
push
push
inc
jns
inc
test
test
adc
imul
lock
arpl
cmp
cmpsl
orl
in
nop
clc
or
inc
lret
jmp
decl
insl
outsl
jno
cmp
add
aaa
cmp
leave
pop
jns
out
ret
push
outsb
mov
jmp
mov
lds
ljmp
test
jge
es
jne
mov
jmp
cmp
cmpl
loopne
scas
rcr
fs
sbb
pusha
mov
inc
pop
cmpsb
mov
imul
lcall
sub
sahf
push
jb
lods
mov
adc
or
loope
xor
enter
push
je
in
sub
aam
xchg
pop
popl
lahf
jmp
aaa
sbb
jge
aas
mov
shlb
dec
sub
lcall
jl
mov
mov
mov
lcall
pushl
pop
inc
lds
ss
cmp
adc
xchg
push
call
cmc
dec
stc
xchg
decb
adc
sti
xchg
das
outsl
push
mov
mov
jmp
adc
std
ds
add
pop
fnstenv
daa
xor
fisubrl
fstpl
enter
lds
xor
or
test
sub
frstor
ljmp
clc
push
inc
scas
std
mov
test
popf
outsb
in
bound
jl
mov
fs
mov
daa
ret
cmp
scas
lods
push
rclb
in
cmpsl
mov
das
sar
xor
dec
push
into
mov
in
mov
insl
in
pushl
cmpsl
and
data16
cwtl
cmp
lret
mov
jo
aam
dec
cmp
call
icebp
lcall
push
or
stos
ss
inc
out
fstps
sahf
int3
add
notl
fsubl
mov
jp
mov
adc
test
ret
sarb
pop
popa
aam
push
ljmp
pop
lea
and
stos
mov
xlat
loop
xchg
cwtl
or
repz
shll
icebp
shlb
pop
push
insl
fmul
adc
jg
out
aad
sbb
sbb
inc
xchg
push
mov
pop
pushf
push
jge
or
mull
lcall
stc
fwait
pop
and
cltd
popf
sub
or
icebp
push
movsb
decb
lcall
ds
stos
out
and
adc
mov
push
sub
insb
in
jns
testl
andb
sbb
jg,pt
rcl
in
or
sbb
push
lea
fiaddl
and
sub
loopne
test
hlt
es
push
mov
pop
fldcw
push
sbb
ljmp
cmp
insl
mov
jne
int
ja
test
cmp
xor
cmp
call
pop
test
pushf
ljmp
jle
loop
pop
jns
push
fistps
orl
cld
adc
jae
gs
ljmp
loope
xor
or
stos
out
sub
sarl
fisttpll
popa
fdivr
inc
not
shll
xor
stc
rcrl
adc
arpl
shlb
lret
lcall
sub
ret
les
sub
lds
or
jb
fldenv
mov
insl
pop
ljmp
movq
aam
ret
imul
sbb
push
push
jnp
jae
pop
xor
cmc
xor
fildll
es
push
add
ljmp
decl
addr16
and
cmp
cs
xchg
movsl
rolb
or
mov
push
inc
cmp
mov
call
fldcw
and
mov
dec
mov
test
pushl
fldenv
fldl
stos
cmp
mov
lahf
cltd
pop
fisubs
add
incl
cmp
sti
jnp
js
pop
in
out
inc
cmp
mov
inc
mov
jp
adc
lods
pop
ja
or
aaa
push
mov
add
mov
sub
stos
outsl
rorl
add
sbb
andl
cmp
pop
mov
adc
dec
loop
cmpsb
mov
xor
push
pop
pop
hlt
jg
das
shll
movsb
sti
fdivrp
pop
or
cld
mov
mov
decl
lcall
push
cmc
mov
cmp
ss
fdivr
mov
or
push
mov
sbb
jno
inc
add
incl
out
roll
inc
movsb
sahf
mov
xchg
dec
inc
sbb
dec
add
arpl
ljmp
sar
pop
push
push
sub
mov
xchg
lcall
push
cmp
and
or
pushl
cmpsl
repnz
jno
mov
mov
mov
dec
out
addr16
add
jne
fisubl
mov
and
jns
adc
mov
xor
lcall
mov
cmp
push
fstpl
ret
xchg
insb
pop
dec
adc
mov
mov
repnz
mov
dec
aaa
out
imul
out
cmc
movsb
lret
sbb
daa
je
out
incl
mov
iret
outsb
adc
adc
std
int
stc
push
pushl
mov
sub
icebp
cwtl
push
mov
das
test
dec
push
mov
sbb
mov
push
or
fists
dec
scas
hlt
xchg
aad
mov
imul
sub
dec
lcall
pusha
fiadds
xchg
out
sbb
iret
sub
inc
mov
outsl
fwait
mov
lcall
incl
fcmovnbe
sub
mov
dec
dec
mov
sub
jp
es
jge
push
xchg
inc
aad
int3
in
repz
jae
addr16
std
into
dec
sbb
lret
ljmp
and
in
xchg
push
mov
xchg
cld
pushl
sub
or
rclb
add
jo
dec
jmp
gs
imul
mov
ret
pop
je
in
or
pop
pop
adc
xchg
xor
cmp
sbb
mov
mov
cmp
call
add
orl
xor
cmp
pop
push
fdivl
cmp
call
fdivrs
adc
fs
daa
push
cmp
shrl
iret
js
jge
lock
pushl
test
movsb
insl
jae
sub
jmp
fucomip
jecxz
sbbb
and
push
mov
decl
adc
cmp
ss
repz
mov
nop
or
xor
and
jmp
icebp
pop
pop
jnp
outsb
sti
mov
xchg
mov
negl
aam
jmp
lcall
mov
add
jns
push
ret
gs
jmp
jle
inc
cmp
jg
loop
sbb
mov
ret
mov
out
ljmp
xchg
scas
test
pop
aas
pop
leave
stos
cmpsl
lea
imul
mov
lcall
fists
lds
jmp
es
mov
das
clc
mov
jmp
sbb
mov
jl
shrl
das
mov
lock
incl
jae
lods
pushl
and
jp
or
push
inc
popa
xchg
pop
mov
jbe
fbstp
cmp
mov
and
in
je
lock
pushf
xor
aad
clc
lcall
aaa
shll
test
std
mov
lcall
cmpsb
ljmp
lret
inc
cmc
add
negl
mov
xchg
adc
jecxz
lret
sbb
mov
mov
enter
and
cltd
xchg
xor
scas
jmp
mul
loopw
xchg
dec
xor
in
mov
in
mov
mov
lahf
mov
fldt
cmp
fadds
lahf
outsb
sub
sub
test
jmp
jns
jmp
fwait
cld
xchg
in
shrb
int3
test
push
mov
jmp
fs
fildl
cmp
out
rcrl
inc
push
mov
sub
jmp
test
js
lahf
movsb
sbb
xlat
xchg
ret
pop
or
cmp
call
and
ljmp
xchg
dec
ljmp
incl
sbb
leave
lret
fcmovbe
dec
pop
mov
pop
loop
fnsave
cli
cmp
pop
lcall
call
daa
xor
das
pop
inc
mov
pushf
into
sbb
int3
lcall
cld
je
lret
push
dec
and
fbstp
shll
test
into
lret
pop
xchg
xlat
add
sub
stos
decl
scas
dec
dec
ss
fstpl
mov
in
inc
cmpsb
cmc
jo
push
inc
add
out
sbb
ljmp
xchg
loope
aaa
jmp
adc
outsl
jo
imul
inc
jmp
fisttps
lcall
push
sti
jp
inc
jnp
adc
or
add
rorl
stos
jo
pop
imul
pop
hlt
pushl
mov
sub
jb
adc
push
xor
call
mov
imul
outsl
jns
inc
out
pop
mov
test
cmpsl
in
data16
lcall
cmp
out
cmp
mov
sahf
mov
bound
xor
test
clc
dec
and
add
add
push
subl
sbb
sbb
shl
aaa
mov
sarb
ds
arpl
mov
or
das
mov
xlat
mov
sahf
jb
int
dec
ret
xchg
push
outsb
pop
in
jmp
js
js
mov
pop
repz
dec
aaa
push
and
inc
in
ficoms
sti
mov
cs
loop
in
mov
into
mov
cld
adc
insb
inc
leave
bnd
test
push
fidivrs
jb
scas
pop
dec
push
rcll
cmp
call
pushf
cmp
fs
lea
pop
sbb
fnstenv
add
lret
incl
push
daa
lret
dec
clc
pop
addr16
add
cmc
aam
mov
out
sti
push
inc
xchg
adc
xor
add
and
fcoml
or
mov
in
pop
mov
or
mov
dec
test
lcall
cs
lcall
pusha
cli
jne
mov
inc
ss
mov
mov
cmp
scas
mov
mov
xchg
int
adc
inc
gs
xor
aaa
out
daa
mov
mov
jge
add
push
adc
cmc
icebp
pushl
pop
arpl
pop
mov
dec
jmp
push
es
inc
stos
push
pop
pop
fstpl
test
fs
mov
in
sbb
leave
jnp
inc
popl
dec
mov
and
mov
fbld
cli
and
repnz
sarl
test
cmp
push
pop
jmp
adc
sbb
add
fwait
sbb
pop
jge
dec
or
pushl
insb
push
mov
or
push
das
and
dec
inc
ljmp
adc
jg
sti
sub
inc
aas
sbb
cwtl
fs
add
jmp
in
stos
lds
mov
jae
pop
mov
push
mov
lahf
cltd
xchg
jbe
incl
cmp
push
pop
jo
icebp
jmp
xor
in
fdivrl
mov
sub
pushl
aaa
ret
add
je
jp
ret
mov
lea
jp
mov
imul
call
and
mov
int3
and
lock
xchg
jmp
cmp
mov
and
pop
mov
iret
dec
xor
sar
cmp
inc
imul
pusha
dec
dec
fsubr
movsl
jmp
jno
adc
and
lret
out
bound
icebp
je
test
or
cmc
mov
decl
mov
subb
xlat
xor
cmp
cli
lods
ljmp
out
and
repnz
mov
sub
mov
xchg
mov
enter
js
daa
push
aam
jmp
fnsave
mov
cltd
sub
sub
add
mov
ljmp
push
popf
mov
xchg
push
push
testl
cmp
aam
push
sbb
jo
ljmp
rorb
fucomip
adc
lock
add
ficomps
dec
js
xchg
mov
outsl
lcall
push
shr
pop
sub
shl
jns
lcall
in
sbb
loop
in
imul
test
mov
outsl
mov
mov
sti
pushl
leave
ret
sbbb
add
addb
lcall
add
jae
je
sti
mov
dec
jle
out
push
loop
mov
cli
jmp
pop
and
je
mov
mov
adc
dec
add
lahf
and
jmp
sbb
xchg
jmp
jl
dec
push
pop
xchg
push
mov
int
xchg
fwait
sahf
lcall
or
or
pop
arpl
push
jbe
cmp
in
xor
inc
inc
fdivs
mov
xor
jns
sbb
in
ljmp
cwtl
push
ljmp
adc
ret
jb
and
pushf
ficoml
jbe
fcomip
jecxz
pop
and
bnd
cmp
dec
mov
div
xor
jg
inc
add
call
cmpl
push
and
sbb
and
leave
xchg
push
lret
pushl
mov
int
pop
sbb
pop
sub
pop
scas
cmp
push
jo
loopne
into
incl
jle
pop
lcall
mov
mov
add
mov
stos
inc
jg
shll
incl
inc
inc
and
cmc
in
je
ljmp
cmpsl
popa
jle
sub
adc
cmp
sbb
adcb
push
mov
or
xchg
or
arpl
std
incl
fadds
ljmp
mov
pop
fildl
adc
pop
fcmovb
cmp
or
pop
loop
and
jp
or
pop
or
imul
imul
or
dec
lods
nop
shll
and
or
jp
std
decl
imul
jge
sbb
iret
std
mov
in
movsb
stos
in
cltd
jmp
pop
sub
mov
filds
cmp
mov
inc
adc
inc
cmc
dec
add
or
mov
jmp
push
mov
fistpll
mov
jecxz
in
ss
push
adc
ljmp
scas
add
push
fildl
xchg
test
fwait
inc
inc
adc
imull
fwait
jne
call
inc
pop
lods
fists
inc
pop
rcrl
pop
int3
clc
mov
jg
loope
push
and
push
inc
jae
cltd
pop
push
pop
push
aaa
add
sub
insb
imulb
les
sub
fisubrl
dec
fisubs
in
aaa
popf
pop
xchg
inc
dec
nop
mov
jmp
fsubl
mov
sbb
or
cmp
flds
or
mov
out
test
test
pusha
call
adc
cmp
dec
ret
adc
mov
repnz
and
xor
mov
sbb
cli
shrl
push
imul
incl
mov
cld
push
dec
loope
mov
jecxz
lret
out
fists
add
add
jmp
cld
mov
loope
icebp
dec
pop
mov
out
jae
int3
fs
mov
inc
cld
cmp
jg
or
stos
pop
lods
dec
mov
pop
dec
push
add
xchg
mov
cmp
mov
fwait
ret
cmp
mov
clc
adc
push
stos
push
jno
fstp
pop
xchg
add
repz
xor
mov
lcall
jno
aas
data16
addr16
lret
sarb
or
dec
xchg
ret
into
loopne
lcall
dec
aam
ret
and
ja
incl
mov
ror
cmp
mov
xchg
xchg
ret
pop
cmpb
pushl
dec
enter
fsubrs
jb
std
mov
pop
sub
loope
int3
stos
jge
sbb
fnsave
push
mov
jecxz
jle
and
out
push
rcrl
jle
stc
jno
xor
push
call
dec
mov
xchg
push
sbb
sbb
bound
sar
lcall
fs
mov
hlt
add
addb
push
xlat
sarl
data16
in
adc
mov
and
int
in
pusha
decl
data16
outsb
xchg
mov
shlb
test
lahf
leave
cli
imul
mov
mov
xor
or
fildl
movsl
in
out
clc
jmp
icebp
out
dec
xchg
lock
js
ficompl
xor
push
add
sbb
mov
push
xchg
add
add
movsl
js
in
push
sbb
enter
sbb
lcall
push
movsl
xchg
xchg
sub
inc
mov
std
pop
popl
push
adc
in
xchg
inc
or
push
sbb
inc
and
cmpsb
int3
lahf
sub
cmp
stos
xor
mov
pop
cld
scas
push
sbbl
sbb
imul
push
hlt
call
or
cmp
das
out
cmp
adc
sahf
incl
lcall
xchg
push
and
pop
xchg
push
ljmp
sahf
xorb
jl
popf
test
xlat
enter
sub
pushl
push
into
movsb
jo
jp
xchg
jae
cmp
mov
in
push
add
cld
out
cmc
mov
lret
or
mov
out
aam
dec
imul
dec
fcomip
testl
cmp
cmp
and
rcrb
fidivs
xchg
jnp
fdivr
decl
pop
dec
mov
fistpl
mov
fdivrs
sbb
out
jo
jle
jl
jnp
lret
rorl
popf
in
sbb
mov
add
dec
cmpsl
cmp
or
pushl
cld
ret
mov
cmpsb
mov
inc
sbb
lock
pop
mov
adc
mov
lock
cmc
push
push
ds
push
inc
sahf
xchg
mov
movsb
repz
arpl
scas
cld
ja
fwait
sbb
mov
repnz
jno
jnp
mov
add
lret
test
into
dec
test
rolb
inc
xchg
out
and
xchg
adc
lods
pushl
lcall
pop
add
iret
mov
adc
aaa
jecxz
cli
call
cmp
scas
dec
shrl
add
cmp
lods
xchg
sbbb
pushl
repnz
xchg
adc
or
sub
sbb
aam
mov
adc
mov
jo
out
loope
xor
mov
decl
sbb
xchg
and
mov
out
mov
sub
inc
in
and
call
cld
mov
ljmp
and
pop
pop
xchg
call
stc
and
mov
jmp
insb
add
jmp
scas
fcmovnbe
add
inc
test
incl
mov
int3
push
inc
mov
test
add
xor
dec
push
out
xchg
in
imul
lcall
sbb
pushf
cwtl
mov
popa
cmp
test
lcall
pop
xchg
push
jl
incl
pop
sbb
lahf
inc
cmpsb
jno
cmp
fldt
cmp
jp
fnsave
mov
movsb
or
cmp
test
push
nop
loopne
mov
icebp
jbe
xchg
push
clc
mov
call
xor
lret
ds
mov
sbb
mov
movsl
sar
lcall
mov
out
ja
scas
stos
cmp
aad
dec
in
mov
fcmovne
sbb
arpl
dec
in
out
daa
push
lret
xchg
pop
cs
fdivs
or
or
nop
add
jg
add
push
jo
sbb
mov
hlt
pop
cltd
sub
js
mov
sbb
dec
shll
lret
or
mov
inc
pop
clc
fcmovb
lock
outsl
sahf
or
cmp
subb
ret
mov
ljmp
xchg
or
sub
cmp
jg
int
mov
adc
scas
int3
mov
mov
rclb
lret
mov
ret
fsqrt
xor
mov
pop
dec
mov
mov
f2xm1
outsl
ret
xchg
push
not
sbbl
call
pop
adc
push
or
and
mulb
ljmp
sbb
insb
in
lea
aad
push
xchg
mov
out
and
cmp
bound
decl
push
fwait
insl
gs
test
pop
xor
les
sarb
ror
sbb
imul
aad
mov
mov
popf
scas
movsb
adc
or
add
ud0
push
fs
push
das
jno
push
pushf
ds
xor
fwait
mov
pop
stc
idiv
shll
sbb
aam
lret
xrstor
movsb
test
and
xchg
jge
cmpsb
add
mov
fiaddl
notl
pop
aaa
addr16
xor
fstl
aaa
xor
cmp
aas
push
cltd
in
sub
adc
cli
pushl
cs
sub
shrl
out
pop
inc
mov
mov
push
ret
aaa
mov
jmp
pushf
push
jnp
in
push
inc
in
jle
divl
mov
jbe
ja
adc
scas
jl
jg
push
out
test
imul
cwtl
popf
add
cmc
pop
jp
or
out
fldl
imul
jo
les
mov
or
sbb
jecxz
mov
push
gs
pop
imull
int
lcall
xchg
arpl
jle
push
cmp
dec
mov
mov
jne
mov
lds
jg
jg
cli
inc
lods
inc
adc
mov
push
adc
addr16
movsb
je
pop
fwait
mov
inc
mov
lds
sahf
out
mov
mov
sbb
dec
inc
lcall
call
push
clc
pop
int
xor
pusha
push
push
stc
jp
jb
sets
call
loopne
or
in
or
in
icebp
pop
mov
cmp
bound
xchg
lahf
mov
jmp
push
jp
testl
push
pop
inc
mov
mov
pop
scas
or
call
cmpsb
xor
mov
jnp
cs
stos
in
ds
jg
and
push
push
jecxz
or
je
xchg
xchg
ljmp
fbld
and
nop
andl
movsl
rcrb
jmp
arpl
bound
test
loopne
mov
xchg
or
js
jno
pop
mov
dec
in
cmp
call
subb
mov
fdivrs
sbb
xchg
push
gs
push
push
sub
movsb
cmp
mov
pop
cmp
xor
sahf
xor
mov
inc
add
sbb
sbb
cmp
cltd
incl
sarb
insl
cmp
sbb
xchg
call
fwait
cmpsl
jnp
daa
push
mov
mov
js
loopne
dec
adc
das
mov
jmp
aaa
mov
pop
stos
stos
pop
lods
push
push
daa
int3
lcall
das
pushf
sbb
rorl
aam
mov
jle
dec
aam
hlt
mov
jp
lock
or
cmpsl
adc
mov
call
mov
pop
pushf
stc
lcall
jmp
inc
sub
daa
xchg
inc
xchg
adc
push
test
sub
stos
jg
lock
dec
xchg
xor
mov
in
jle
adc
ljmp
sti
out
rcll
mov
add
leave
jp
xor
in
incl
dec
test
adc
and
sbb
jge
push
pop
pop
jg
push
icebp
fcomi
pop
sbb
dec
lock
fcoms
add
leave
cmp
adc
adc
sub
lret
fmul
xchg
bound
data16
lcall
or
sti
jns
inc
pop
pop
mov
mov
push
push
lcall
dec
mov
sar
enter
ds
mov
push
loop
jg
fimuls
and
lret
lock
sti
inc
pop
xchg
clc
cmp
mov
sarl
outsl
lods
stos
ljmp
lahf
pushl
adc
xchg
jle
movsb
in
fstps
fistl
xchg
lahf
pop
lock
fidivs
decl
decb
fmull
or
jo
mov
jns
rcr
cmpsb
xlat
mov
rolb
and
xchg
cltd
fimull
ljmp
fildl
mov
or
add
jle
hlt
inc
add
xchg
jl
sub
push
fwait
xor
xor
jg
inc
adc
mov
mov
xchg
in
jp
cmp
std
mov
inc
data16
mov
outsl
mov
xor
loopne
test
in
call
mov
add
xor
ljmp
add
mov
mov
mov
inc
roll
jmp
jb
dec
into
add
xchg
adc
mov
cmp
dec
dec
aam
sbb
int3
xchg
loopne
popa
fbstp
sub
popa
aaa
inc
in
ljmp
xchg
add
mov
fisubl
push
sbb
xchg
cli
mov
mov
out
lods
std
ss
je
dec
or
sbb
lret
sbb
adc
adc
jmp
fnstsw
xor
xor
aaa
fs
test
pop
mov
test
dec
mov
xchg
call
cmp
into
mov
jae
loop
scas
or
mov
sub
dec
in
adc
mov
cltd
mov
push
call
pushf
out
jle
mov
push
push
pop
cmp
sub
cmp
outsb
ljmp
faddl
and
or
ret
mov
mov
push
pop
pop
lock
clc
mov
inc
mov
out
inc
xchg
dec
stos
insl
jbe
dec
testl
add
sub
push
cld
sar
inc
addl
adc
xor
nop
int3
mov
bound
mov
add
pushf
mov
jne
orb
sar
pushl
lret
add
xor
mov
fsubl
add
lcall
xchg
int3
jg
fcmovne
sbb
jmp
pop
push
xchg
mov
sub
dec
mov
sbb
mov
sar
and
push
dec
mov
jae,pt
dec
inc
sub
adcl
adc
and
adc
incl
mov
jno
mov
jne
bound
pop
push
lods
adc
fiaddl
adc
pop
sub
lret
popa
push
andl
pop
xor
scas
arpl
inc
mov
call
mov
data16
ljmp
sbb
sti
rolb
insb
jle
stos
cmc
xor
incl
sub
test
leave
imul
inc
fcomps
cmpsb
push
adc
cmp
repnz
iret
lods
fmull
cwtl
rorl
adc
outsl
aas
cmpsl
push
sar
inc
fmul
dec
ja
dec
pop
outsl
sbb
aas
fisubl
cmp
jno
adc
movsb
int
lret
xchg
jmp
lds
xor
jne
add
or
sbb
mov
out
cld
shl
inc
jb
dec
cmp
pop
jl
inc
lods
adc
add
decl
add
bound
jg
push
cmpsb
in
pop
inc
or
loopne
mov
push
inc
inc
mov
in
jne
push
xchg
ljmp
fstpl
and
inc
jbe
pop
call
movsb
mov
movsl
mov
fsubl
pop
sbb
sbb
aas
mov
add
cmp
cld
call
jo
adc
dec
loope
sbb
jb
xor
fsubrs
mov
insl
adc
xchg
ror
sub
push
cmpsl
ds
addr16
loop
lods
lcall
loopne
dec
movsb
dec
jp
dec
jle
or
jae
cmp
add
incl
add
or
vcvtdq2pd
jnp
insl
js
mov
jg
decl
lret
fwait
mov
cmp
mov
int
ret
aas
mov
out
adc
adc
ja
lea
pop
push
mov
or
pop
lock
or
adc
gs
test
pushl
scas
sbb
out
stos
cmpsl
iret
pop
lcall
inc
mov
das
in
pop
lods
xor
or
repz
divb
cs
xor
movsl
popa
ljmp
enter
mov
mov
xor
enter
add
lret
fbld
xor
je
call
sbb
pushf
in
xorl
xchg
cltd
pusha
nop
pusha
imul
sub
ljmp
ret
xor
inc
xchg
xor
loop
push
jecxz
jbe
dec
add
sub
jmp
cli
ds
sbb
outsl
clc
xchg
sub
decl
jl
mov
rorb
sahf
xor
imul
pop
out
cs
sbb
ljmp
pusha
dec
cmp
adc
lds
ficoml
ret
ret
int
int
sub
fcmovnbe
pushl
pop
and
push
ds
jnp
ds
dec
mov
out
xchg
repz
mov
pop
cmp
add
xchg
push
test
dec
aad
add
xchg
pop
add
mov
adc
divl
insl
jle
pop
fs
xor
cmpsb
push
fldt
xor
xor
ljmp
xchg
ficoms
lods
mov
xchg
mov
push
pushl
jb
daa
data16
sbb
fbstp
and
add
pushf
fisttpl
ja
cmp
push
mov
ss
sub
and
cltd
mov
and
adc
incl
das
ret
jno
incl
andl
jle
add
push
inc
dec
dec
add
orl
test
mov
insb
call
xchg
les
clc
ja
popf
mov
cmpsb
xchg
cli
js
jg
jmp
mov
jle
cmp
jle
mov
das
jno
pop
ljmp
and
push
xor
iret
sub
movsl
cltd
mov
jno
fwait
shl
hlt
ss
push
dec
push
adc
fdivrs
ja
bound
std
stos
mov
movl
hlt
inc
add
icebp
jge
cwtl
lcall
mov
iret
cmpsl
out
cwtl
shlb
cltd
les
xchg
xchg
imul
ljmp
cwtl
mov
cltd
rclb
out
test
je
cmpl
cmpsb
mov
cmc
sti
in
ljmp
fmull
idivb
jl
jp
and
pop
xlat
jae
ja
icebp
inc
inc
inc
arpl
push
xchg
hlt
bound
out
mov
pop
aam
lcall
in
arpl
xor
decl
nop
mov
jmp
sub
mov
data16
in
je
add
pop
jmp
out
push
pop
roll
adc
and
cs
xchg
mov
xor
inc
movsb
mov
push
cmp
arpl
cmp
aaa
cld
test
push
pop
adc
dec
jmp
xchg
popf
fs
mov
xchg
in
xchg
mov
repnz
fs
mov
mov
push
mov
stos
xchg
int3
je
stc
inc
push
fcomps
int3
xor
shl
fwait
in
decl
rolb
out
pop
add
sub
or
fwait
dec
inc
js
jl
imul
fcomip
addr16
ja
lretw
rorb
push
test
mov
jbe
inc
lret
dec
jne
test
add
rcll
inc
mov
inc
leave
inc
out
mov
mov
jo
adc
mov
ret
jne
std
scas
clc
mov
xorb
jle
stos
add
mov
incl
insl
stos
sub
mov
imul
mov
dec
or
xchg
sub
in
or
cli
jg
call
mov
testb
mov
adc
dec
jmp
pop
dec
xlat
pusha
rdtsc
adc
cmp
movsl
jecxz
out
jle
or
in
insb
inc
xlat
push
ds
filds
sti
adc
xchg
test
sub
mov
xchg
aaa
ror
fcos
pushl
movb
enter
movsl
xor
sub
mov
jmp
int
dec
rol
pushl
jmp
in
mov
sub
test
add
test
pop
repz
sub
sub
dec
enter
decl
lods
hlt
scas
imul
lcall
xchg
xchg
sbb
movsb
sti
sbb
in
lock
sbb
cmp
jg
push
jecxz
mov
pop
xor
xchg
pop
dec
loop
adc
mov
mov
fisubs
and
pop
pop
shlb
jo
rcl
lcall
test
ffree
sti
arpl
lock
add
loope
insl
mov
dec
inc
jnp
into
ljmp
cli
cmpsb
lcall
adc
adc
jns
add
sbb
pop
cmc
incl
pop
cltd
jo
aad
jbe
inc
test
xor
push
inc
lds
lock
ljmp
xor
js
dec
nop
inc
outsb
mov
jmp
xchg
mov
xlat
sbb
sub
jmp
data16
sti
xor
js
sub
aam
aas
mov
sbb
std
xchg
lods
loope
xchg
sbb
incl
dec
lods
inc
xor
rorb
iret
das
mov
mov
push
mov
incl
and
jne
mov
mov
jne
ficomps
adc
mov
pop
push
lcall
mov
pop
popf
test
in
lods
int
dec
sub
mov
popa
movsb
mov
sarb
push
sub
add
jo
bound
insl
pop
sub
jne
rorl
xchg
test
lock
mov
inc
push
jl
fbstp
je
mov
pmulhw
repz
pushf
jbe
inc
jbe
fidivrl
jnp
mov
cmp
pop
clc
pcmpgtd
xchg
sub
push
cmp
fldpi
mov
and
fdivs
add
outsb
mov
sub
mov
or
fsts
cli
or
push
pop
roll
out
cli
jg
jg
jb
mov
cmpsb
mov
add
shrb
int
dec
imul
movsb
dec
sub
xorb
fs
clc
lcall
xchg
das
mov
nop
out
pop
pop
aad
sub
sar
decl
or
adc
add
cmpsb
inc
fwait
jns
jp
int
and
and
out
cli
das
dec
clc
jle
jae
fsts
xor
jbe
mov
dec
and
hlt
push
adc
jbe
pop
or
insl
call
imul
loopne
enter
sbb
jns
orb
cmpsb
and
loope
sub
rol
jp
scas
and
xor
mov
call
incl
stos
fmulp
or
pop
subb
cwtl
es
test
fcomip
call
mov
mov
dec
cmc
xor
jl
lea
lret
ficompl
inc
jmp
imul
cltd
add
bound
pop
dec
lock
mov
jle
push
mov
mov
mov
cmp
out
in
or
ret
dec
jbe
pushf
mov
fwait
fwait
inc
dec
imul
jecxz
test
outsl
cmc
test
sbb
lahf
clc
cmp
fbstp
inc
outsl
lds
push
sarl
mov
push
je
lods
inc
jmp
sub
jmp
dec
clc
loope
lahf
dec
loopne
fsubrs
adc
sbb
lahf
imul
mov
sbb
out
add
idivb
xchg
add
fwait
lahf
dec
inc
call
pop
add
jle
insb
xchg
mov
add
sub
sub
cmpl
pop
cli
call
or
data16
fisubl
rcrl
aad
mov
scas
clc
out
mov
pop
enter
in
leave
dec
sbb
adc
jecxz
das
push
in
decl
ret
dec
sub
scas
xchg
out
popf
test
sar
test
hlt
pop
mov
or
fdivr
cmp
add
shll
dec
jns
test
xchg
pop
pop
add
dec
sub
sahf
das
sarb
outsl
out
les
insb
dec
ds
push
aaa
xchg
inc
cmc
aas
loope
arpl
push
shll
inc
jb
xchg
mov
jge
xor
popa
idiv
in
sub
adc
push
ret
insb
loope
jge
test
xor
inc
pop
in
stos
andl
jle
in
int3
adc
fwait
int
out
sti
lods
push
loope
cmp
nop
xchg
and
push
and
jg
repnz
xor
add
sbb
mov
mov
xor
incl
outsl
xchg
test
push
or
dec
stos
aam
inc
adc
adc
pop
insl
push
dec
daa
ja
cmpsb
jnp
repz
mov
mov
sarl
push
or
inc
pop
pop
xchg
fbld
jl
pop
jnp
push
mov
addr16
decl
sti
push
in
movl
mov
insb
gs
std
mov
jmp
pushf
scas
decl
clc
ret
sub
xor
fbld
mov
lahf
loopne
jae
adc
jg
lcall
push
xor
loopne
ret
js
aad
inc
add
enter
fistps
mov
cmc
xor
lock
aam
leave
jns
push
xchg
mov
jmp
pushf
cld
mov
fidivl
rcl
jecxz
bound
xor
sahf
sbb
test
xor
into
loopne
jg
sti
push
test
js
push
pop
enter
sbb
shl
mov
jg
into
movsb
ljmp
push
cmp
shlb
inc
and
daa
mov
jl
mov
jp
mov
jle
mov
mov
aas
jmp
jns
in
mov
mov
ret
mov
pusha
jmp
ret
outsb
adc
inc
call
sbb
jg
add
es
dec
mov
or
inc
add
push
out
int3
cld
call
push
push
push
hlt
inc
sahf
xchg
cmp
das
adc
mov
inc
xorb
inc
mov
push
push
orl
imul
inc
sub
sub
test
mov
inc
loopne
push
xchg
outsb
mov
and
dec
data16
fidivrs
test
popf
call
test
ffree
dec
test
movsl
add
inc
stc
aam
mov
mov
inc
mov
adc
imul
xor
decl
out
loop
xchg
stos
int
ds
outsb
imul
test
add
lock
jp
push
jb
pushf
hlt
jl
jmp
pop
ud0
call
adc
jae
stc
mov
inc
mov
loop
dec
mov
testb
push
repz
popa
mov
daa
jecxz
sub
nop
pop
xchg
leave
or
jg
repz
jmp
nop
in
sti
outsl
adc
xchg
in
and
adc
mov
mov
xor
sarb
data16
movzwl
and
aad
imul
dec
push
add
inc
or
loopne
push
pop
int3
sub
lcall
rcrl
sar
pushl
loopne
cmp
cmp
in
stos
dec
mov
xor
std
decl
shll
sub
fildll
push
test
xorl
jns
jnp
outsl
lods
push
test
lcall
cmpsb
push
mov
adc
insl
lcall
mov
jecxz
xchg
sbbb
sub
jg
fxch
jg
pushl
dec
and
test
xchg
sub
sarl
pushl
nop
out
stos
ds
sbb
dec
ret
xchg
insl
mov
dec
jle
xchg
jg
stos
sti
incl
aas
mov
cmc
negb
idiv
pop
mov
sub
jo
loopne
lock
cmc
incl
mov
jbe
sbb
test
mov
pop
inc
nop
cwtl
push
dec
jne
push
dec
out
jb
inc
sub
dec
sub
xchg
xchg
pusha
mov
jg
loopne
test
dec
pop
xor
ljmp
or
in
pop
xorl
pop
and
rcll
lcall
call
sbb
cmp
jl
push
call
mov
add
lcall
pop
sbb
jecxz
or
adc
add
mov
inc
xchg
push
sarb
loopne
in
pop
sbb
std
pushl
sbb
push
and
xor
decl
leave
push
inc
cmpsb
call
mov
mov
dec
outsb
hlt
adc
mov
push
mov
pushf
repnz
lret
xor
jb
ja
movsb
inc
xor
xchg
int
decl
jge
sub
les
rolb
xchg
movsb
dec
push
repz
cli
mov
insl
movsb
jo
adc
call
and
ret
mov
cld
xchg
fs
out
fnsave
daa
mov
pop
xor
fnstcw
sti
or
xchg
cmp
pop
cmc
das
shlb
shlb
dec
mov
pushl
lcall
imul
faddp
mov
das
mov
xchg
mov
and
mov
or
aas
sbb
imul
mov
add
sub
add
lods
mov
mov
fdivrp
aam
mov
repnz
decl
dec
xchg
jle
aas
pop
jle
cmp
mulb
js
jp
and
push
mov
mov
sbb
pop
push
ss
ret
divb
call
mov
in
loopne
pushf
or
jp
fmull
lret
mov
sahf
setnp
mov
int3
call
pushl
movsb
hlt
dec
sti
and
into
inc
mov
push
fnstenv
pop
loopne
stos
sbb
notl
add
inc
pop
and
sbb
lock
jnp
test
mov
jp
call
push
pushl
cmc
and
subb
stc
scas
pop
pop
shr
in
cmpl
xchg
stc
cltd
jmp
and
aaa
decb
add
or
inc
jg
mov
mov
pop
icebp
scas
cli
scas
xor
xlat
inc
fs
xchg
dec
push
mov
mov
pushl
pop
insb
bound
das
cmc
int
fs
aaa
xchg
mov
subb
clc
jne
pop
cmc
jmp
mov
shll
push
jle
dec
rol
push
xor
mov
psubd
ret
jle
mov
ret
rcrb
pop
push
aaa
das
repnz
xor
mov
push
add
ficomps
in
incl
insb
cli
lds
add
sbb
shrl
adc
aad
lock
jbe
ljmp
lock
inc
enter
fnstsw
leave
xor
lcall
mov
mov
ficompl
in
outsl
jns
insl
push
mov
push
push
xchg
scas
xlat
mov
in
lea
incl
addl
in
mov
jg
pop
pop
inc
out
pop
lea
and
cmp
lcall
or
inc
xchg
xchg
mov
call
sub
popf
and
dec
clc
or
sbb
loop
mov
hlt
roll
les
mov
jae
jo
or
lcall
jmp
aas
and
jns
hlt
or
movsl
pop
repz
dec
popf
inc
clc
mov
in
fidivrs
cmp
and
arpl
test
push
addr16
inc
jmp
dec
scas
push
les
inc
sub
mov
ja
jo
fbstp
arpl
push
dec
ja
inc
cmp
cmpsb
adc
fs
push
in
cmp
dec
js
xchg
fisttps
push
lock
rcll
loopne
jo
dec
mov
add
jnp
cwtl
ret
nop
add
jo
fcoms
fwait
jg
or
mov
add
mov
ljmp
stc
mov
ret
cmp
push
int3
sub
dec
jmp
cmp
fsubrp
call
fsubr
dec
popf
or
sti
sbb
rorb
popf
adc
mov
sbb
ja
movsl
movsl
mov
mov
pop
push
sahf
jbe
mov
mov
xchg
and
mov
jl
stc
push
and
push
jl
sub
fdivrs
roll
incl
pop
jns
out
lock
and
push
mov
push
inc
ja
negl
gs
fucomp
aaa
dec
in
inc
jmp
imul
ret
dec
daa
sbb
into
shrl
movsb
add
fwait
add
pop
call
dec
adc
mov
cmc
cmp
jle
pop
imul
rcl
popa
xor
adc
fdivl
jmp
or
or
lds
aad
ret
mov
popf
in
out
xlat
cmp
fisttpll
movsl
ffreep
js
xchg
sub
dec
ficompl
adc
pop
cmp
cmp
pushl
rcl
xchg
pop
dec
imul
inc
sub
dec
lea
cmp
mov
icebp
dec
adc
out
in
or
push
leave
call
aam
xchg
incl
loop
push
mov
adc
dec
push
movsl
and
sub
in
inc
or
inc
push
push
pop
cld
decl
int3
mov
lret
pop
loope
cmp
popf
cmpsb
ret
orb
inc
ljmp
test
stc
sbb
jno
dec
dec
or
loop
or
movb
push
adc
pop
push
jmp
mov
add
mov
inc
inc
out
inc
mov
dec
mov
sti
jb
enter
pushl
cli
sub
cld
jmp
ficompl
adc
data16
ret
es
sub
add
or
cmp
cmp
inc
lea
add
outsb
dec
loopne
jmp
inc
jmp
push
int
push
stos
pop
lahf
outsb
into
jle
cli
jp
icebp
incl
push
out
icebp
pop
arpl
rcrl
int3
adc
inc
clc
adc
shlb
xchg
ds
and
jge
inc
insb
jmp
mov
sbb
jg
out
cld
jmp
pop
mov
adc
sub
push
mov
imulb
clc
push
adc
cmpb
imul
mov
movsb
pop
adc
pop
cld
push
pop
sub
in
jno
inc
pushl
fs
ljmp
into
xor
jle
aad
stos
sub
cmp
add
pushl
cmp
cld
cmpsb
mov
xor
jg
loopne
test
jg
int3
push
popf
test
cld
xchg
negb
hlt
and
les
mov
push
push
ljmp
pushf
mov
xor
xchg
sub
jmp
pop
xor
bound
and
mov
mov
dec
or
sarl
mov
push
pop
call
mov
loope
push
fwait
stos
mov
rcll
inc
pop
cmp
data16
imul
jno
jns
ja
jmp
cwtl
mov
xor
jle
xchg
in
push
jbe
dec
mov
leave
popf
xlat
xchg
or
rclb
testb
nop
jg
ljmp
lret
push
outsl
stc
lods
mov
hlt
mov
ljmp
sbb
aas
mov
sbb
js
aaa
cld
jmp
iret
fs
or
inc
sbb
sbb
or
decl
adc
and
adc
inc
dec
adc
dec
fcmove
mov
adc
data16
xor
fs
loope
jbe
or
in
in
lds
jl
arpl
mov
xlat
pusha
dec
test
jnp
add
jg
jmp
call
jbe
cmp
jo
ds
jmp
sub
andl
incl
add
popf
jl
in
xor
andl
mov
jns
repnz
fdiv
mov
js
mov
sbb
imul
mov
jb
pop
stc
cwtl
cmp
jg
divb
xchg
fimuls
roll
and
jae
cwtl
cwtl
inc
jne
incl
fucomip
or
jg
jmp
test
sub
add
mov
test
icebp
jb
push
out
jne
ljmp
inc
pop
mov
scas
in
ljmp
push
and
fsubrs
push
dec
out
add
dec
pop
jbe
shlb
xchg
mov
push
ljmp
lcall
ret
push
sbb
jnp
std
xchg
jns
mov
ret
pop
or
ljmp
mov
inc
sbb
aad
or
xor
sbb
adc
sahf
jmp
icebp
xor
xor
mov
icebp
sub
xor
cmpsl
jle
xor
incl
dec
or
mov
pop
xor
scas
movsb
stos
test
clc
adc
incl
mov
fstps
cmp
mov
sub
inc
call
jb
push
mov
push
mov
test
out
mov
pop
push
jno
adc
mov
leave
pavgb
loopne
lods
jle
cmpsl
cmp
xor
mov
bound
mov
dec
push
sarl
inc
shufps
xchg
mov
jecxz
pop
stc
push
sbb
push
mov
int
cmp
sbb
lcall
dec
xor
daa
mov
cmp
add
outsb
push
lret
ljmp
jne
inc
es
enter
ss
pop
call
icebp
test
ret
test
mov
mov
bswap
cmpl
repz
sbb
out
cwtl
js
je
mov
mov
movsb
mov
mov
push
jns
dec
inc
gs
push
xor
push
inc
push
inc
cmp
mov
pushl
gs
add
loope
enter
push
daa
xor
inc
adc
sahf
aam
fwait
movsl
mov
cmp
jg
inc
xchg
mov
dec
mov
call
jbe
stos
loop
add
cmp
inc
and
pop
pop
xor
mov
jle
jg
adc
stos
test
xor
dec
dec
rcrl
decl
pop
pop
in
ja
imul
dec
mov
dec
lods
xor
fldcw
std
mov
test
pushl
in
dec
cmpsl
mov
push
mov
inc
enter
and
sbb
jge
decl
lock
dec
pop
cmpsl
and
mov
xlat
aaa
cld
ja
mov
push
xor
push
in
fidivl
mov
jg
ror
jnp
cli
rcl
mov
movl
jmp
mov
xchg
hlt
lcall
and
mov
jbe
cltd
loop
std
int3
insb
xor
std
jmp
repz
test
test
outsl
lods
mov
add
js
cmc
pop
repnz
inc
movsl
adc
int
subb
ficoms
cld
aaa
ret
aas
push
cmp
andl
push
insl
sbb
push
outsb
dec
jno
xchg
repnz
lcall
sub
mov
pusha
jg
cmpsl
mov
push
aaa
sub
sbb
lahf
in
imul
push
leave
and
adcl
jp
mov
das
clc
jmp
push
pushf
addb
ficoms
fcomp
lret
insl
test
and
jmp
adc
push
jns
repnz
cmp
jno
sbb
test
xor
clc
push
mov
pop
in
jp
insl
rorb
lcall
push
dec
fwait
sbb
clc
les
cmc
movsb
mov
call
sbb
mov
outsl
out
out
jle
and
lods
das
pop
mov
sahf
pop
out
mov
inc
add
or
sbb
xor
mov
aad
or
mov
stos
inc
jne
cmp
std
fistpll
adc
aas
mov
out
mov
mov
fs
movsb
sarl
inc
loope
jns
add
scas
mov
jg
call
shlb
mov
xor
in
loope
outsb
xor
lock
dec
mov
jno
daa
testl
adc
addr16
mov
jbe
imul
mov
or
push
xor
ljmp
pushf
pop
inc
jbe
jnp
daa
rcrb
cld
fs
rcll
and
adc
incl
pushf
jae
rclb
push
jmp
adc
es
out
test
jle
push
decl
jbe
dec
and
pushf
jmp
test
into
inc
xchg
push
fildl
jg
cmp
pushf
fwait
mov
js
es
sar
call
pushl
ficompl
aaa
jb
insb
mov
addr16
clc
pop
ret
addr16
dec
jle
movsb
sub
in
jmp
jecxz
mov
push
cmp
lock
lcall
incl
mov
int3
cmp
sbb
ret
fadds
add
inc
hlt
mov
shll
and
sub
ficoml
pop
fidivrl
sahf
adc
fistpl
fldt
test
lret
push
push
lcall
stc
sub
inc
pop
pop
into
repz
idiv
pop
iret
dec
xor
mov
push
je
mov
decl
mov
iret
hlt
repnz
pminub
incl
and
ficoml
stc
daa
hlt
fcoms
aas
jl
xchg
mov
stos
ja
jno
ljmp
arpl
mov
push
cwtl
stos
xchg
je
daa
ja
lea
push
aaa
sub
shrb
xchg
js
dec
insb
fsubrs
dec
imul
in
add
jmp
mov
lea
in
sti
std
mov
scas
ss
in
stos
or
sbb
int
repnz
lcall
sbb
sbb
mov
cwtl
pop
sub
stos
stos
mov
lea
push
jg
sbbl
insb
mov
cli
adc
outsl
sub
mov
scas
mov
xchg
lods
aaa
addr16
mov
imul
inc
mov
lcall
dec
out
loopne
and
adc
xchg
ss
xor
xorb
into
jmp
mov
fnsave
mov
js
xchg
mov
cld
jge
sbb
sub
dec
push
int3
pushf
jbe
pop
call
pop
dec
jae
add
das
mov
int3
dec
push
dec
orl
adcl
sbb
cmp
pop
or
lods
gs
leave
ljmp
jae
dec
mov
jg
jge
cmp
and
cltd
jge
stos
and
inc
mov
jg
or
lcall
jae
xor
xchg
cli
inc
push
out
jnp
lods
jg
adc
inc
adc
sbb
dec
jbe
popf
movsl
cld
clc
decl
fs
sbb
sub
add
push
jl
push
push
push
out
push
add
pop
aad
out
sbb
push
xor
test
stos
lret
popf
sub
insl
sbbl
sub
lret
adc
insb
and
mov
ret
in
cmp
fucomip
sti
jbe
int
sbb
test
dec
shlb
dec
mov
fwait
and
jge
mov
jge
push
pushf
iret
pushf
inc
sbbb
adc
push
test
mov
dec
jae
idiv
inc
push
dec
mov
rclb
cmp
cli
aad
mov
frstpm(287
push
pop
fistl
cli
lcall
lods
test
je,pn
jnp
xchg
mov
push
jmp
inc
xor
xor
mov
pop
sub
inc
xor
pop
push
js
call
inc
mov
xor
sub
mov
adc
mov
rorb
pop
xchg
jbe
mov
push
movsb
dec
fmuls
cltd
inc
jl
push
push
insl
mov
je
xchg
mov
lock
iret
sahf
push
jo
pushf
jo
push
cs
loop
inc
mov
dec
cld
aas
pop
lahf
in
orb
inc
aas
push
add
jmp
sub
and
and
xor
xchg
add
lcall
popa
sbb
fcoms
lcall
mov
jae
mov
das
xchg
or
mov
mov
pop
xchg
loope
cs
int
aas
shl
cmpsl
insb
out
in
js
mov
mov
sub
mov
popa
enter
jmp
or
dec
inc
outsb
int
lret
adc
or
or
or
pop
jp
orb
shll
repnz
sbb
lcall
add
sbb
rcr
loop
js
pusha
loopne
mov
inc
lods
dec
push
scas
jl
sarl
int3
jbe
adc
add
jbe
mov
js,pn
ds
cmp
ljmp
fiaddl
jle
ficoml
jp
fstl
mov
cmc
popa
or
pop
mov
cli
call
jne
adc
ds
mov
sub
pop
pop
repz
xchg
mov
mov
outsb
jmp
paddusw
cmpsb
sub
sbb
int
sbb
scas
push
pop
cmp
clc
xchg
mov
int
sti
xchg
mov
push
imulb
or
fcmovnu
mov
push
enter
int3
xchg
mov
mov
arpl
scas
xchg
loopne
rorb
into
mov
mov
mov
lods
push
into
inc
mov
ror
and
loope
sbbl
jne
mov
call
adc
jo
mov
mov
pop
add
pop
call
and
inc
mov
cmp
call
hlt
push
scas
fildl
andb
cwtl
pop
leave
scas
cmp
mov
pushl
dec
int
push
xor
test
xchg
xor
sahf
cmp
js
add
push
jne
call
enter
xchg
dec
les
xchg
add
ja
les
xor
sub
jne
decl
cmp
arpl
pop
hlt
mov
fcomps
sub
sub
jmp
ret
pop
aad
push
aam
mov
shl
push
sbb
fnstenv
fldl
or
dec
loope
jnp
or
fs
jo
inc
add
rclb
xchg
loop
inc
cltd
push
cmpb
jne
jo
sub
push
fnop
push
leave
push
pop
imul
mov
pushl
fcomp
push
cmp
insl
or
popl
sub
fsubr
fdivr
ljmp
push
jmp
fs
orb
pop
lock
test
mov
inc
mov
call
aad
daa
and
test
mov
xor
outsl
es
gs
popa
dec
inc
movsl
lcall
insb
mov
insb
lret
std
push
adc
iret
or
ret
daa
mov
cwtl
mov
call
and
mov
jbe
push
sub
repz
xchg
pop
push
insb
fchs
adc
mov
call
out
or
pop
int
and
sbb
filds
ret
xlat
adc
test
fdivrp
mov
xchg
sahf
dec
insl
test
and
test
pop
mov
test
loope
mov
int3
fdivl
sub
fstps
fmuls
pushl
ss
dec
xchg
iret
fildl
les
pop
pop
jns
push
sbb
es
jne
inc
sbb
mov
stc
test
inc
xchg
test
mov
sahf
jne
pop
outsl
aad
fwait
mov
int3
xlat
lret
push
scas
lods
js
dec
mov
pushl
int3
aam
ja
push
cli
xlat
dec
mov
sub
inc
adc
dec
jbe
sbb
pushl
js
push
aad
and
leave
and
pop
fistpll
mov
movsb
and
lcall
out
push
push
ret
jne
mov
cmp
mov
mov
pop
mov
mov
ds
lcall
int
pop
lcall
movsb
xchg
sub
or
pusha
scas
movl
imul
mov
arpl
in
in
cs
inc
jecxz
pop
call
daa
adc
inc
add
mull
add
xchg
add
add
jmp
ljmp
lcall
pushf
xor
loope
add
jl
mov
sub
sbb
jno
test
pushl
lds
sbb
filds
mov
jnp
addl
push
xchg
cmp
incl
ja
pop
sti
adc
or
mov
popa
mov
inc
stos
xor
sub
mov
cld
adc
or
imulb
lds
fistps
pop
frstor
les
cmpsb
lcall
enter
movsl
data16
cwtl
daa
pop
out
pushl
in
cmc
inc
xchg
icebp
movsl
js
loopne
sub
notb
mov
xchg
xchg
das
addr16
and
fbld
decl
js
and
sbb
test
lds
or
stc
or
movsb
stos
cmp
lcall
push
or
cmpl
js
inc
testb
mov
inc
sub
fcompl
call
data16
pop
sbb
aas
jp
jge
xchg
inc
jno
lahf
push
xor
sar
out
push
fwait
pop
mov
or
daa
jmp
pop
into
testb
and
mov
cmp
test
decl
jg
sbb
shl
scas
or
fadds
cmp
pop
std
xchg
aas
add
add
gs
pushl
sub
xor
jecxz
push
xlat
daa
popf
cmpsb
push
push
test
dec
cmp
jmp
push
add
mov
xor
rcrl
push
jns
mov
lcall
push
push
add
decl
movntq
sub
cmp
xor
jmp
add
xor
clc
call
cmp
es
sub
pop
push
adc
push
add
xor
adc
test
pushf
xor
push
inc
mov
mov
pop
sub
fmull
xchg
push
les
std
cmpsl
cs
xor
rcll
fwait
mov
clc
mov
mov
mov
movsl
ret
inc
or
pushl
enter
mov
int
pop
fcoml
jne
rclb
xor
mov
push
ret
mov
cmpsl
sbb
std
cmp
cmp
lock
jbe
cld
in
loopne
lcall
mov
aam
int3
xor
add
cmp
mov
rcrl
mov
daa
pop
xor
push
cmc
jmp
xor
push
xchg
adc
sti
movsb
push
and
in
imul
lret
cwtl
mov
pop
add
cwtl
loop
clc
call
outsb
mov
mov
pop
call
stc
insl
push
xchg
inc
push
cli
lahf
incl
out
mov
add
sbb
jl
ja
rcll
lcall
mov
inc
aad
xor
xchg
int
jmp
neg
push
movsb
dec
push
sub
mov
out
jp
jg
lock
in
jo
andb
add
es
scas
movsb
jecxz
ret
es
jne
or
mov
popl
sbb
pop
call
pop
cmp
shll
jle
imul
insl
xchg
imul
fstpl
call
fnstcw
xchg
sarb
insb
push
push
dec
cld
cmc
pop
ret
test
pop
mov
lcall
gs
push
cltd
or
pusha
outsb
or
pusha
adc
push
and
and
addr16
ljmp
mov
xchg
pushl
fisubrl
mov
ds
stos
mov
popa
imul
jnp
enter
lcall
mov
push
iret
fcmove
xor
sarl
inc
mov
sbb
mov
in
pop
add
and
jg
push
subps
inc
inc
mov
insl
test
dec
cmp
push
les
out
ja
xor
ja
sbb
xchg
sub
sti
subb
and
fdivl
decl
pop
divl
cmp
ret
gs
out
stos
fstl
inc
xchg
pop
and
cs
gs
les
mov
mov
ds
ljmp
lahf
ret
aaa
dec
pop
cld
xchg
rcrb
insb
outsl
push
cmc
mov
call
stc
or
push
stos
xchg
les
nop
loopne
std
roll
popf
xchg
push
mov
mov
lcall
adc
movsl
xchg
cld
repnz
and
out
inc
loope
dec
es
cmp
out
inc
cmp
jae,pt
xor
mov
pop
push
push
jl
call
out
stos
add
andl
movsl
cmpsb
or
out
dec
mov
sbb
jnp
push
and
in
aam
xchg
mov
fwait
xchg
pop
ljmp
in
mov
ja
or
push
hlt
xchg
cmp
dec
js
lea
cwtl
push
jle
vpunpckhqdq
jecxz
dec
addb
adc
sub
aas
shl
mov
in
mov
repnz
mov
imull
xorb
lret
mov
sar
and
sbb
mov
jecxz
push
cmpsb
dec
and
cld
adc
xor
mov
clc
jns
mov
int3
mov
imul
mov
dec
mov
movswl
daa
adc
lcall
xor
data16
std
mov
jns
add
insb
cmp
mov
inc
movsl
call
leave
inc
loop
hlt
aam
popa
lcall
xchg
sub
mov
out
cli
idivb
push
mov
or
mov
jne
mov
jno
decl
lds
mov
mov
push
lock
out
sarb
in
or
in
shr
incl
cmp
int
inc
sbb
into
add
mov
shl
aaa
std
call
xchg
mov
lods
cmpsl
enter
into
fbld
popa
xor
decl
fstps
addl
or
or
in
mov
lods
pop
sub
xchg
stos
push
cltd
dec
or
push
mov
xchg
cli
and
loope
jne
push
lods
incl
push
or
mov
xor
hlt
and
mov
xor
pop
xchg
lods
lea
push
or
mov
inc
cmp
xchg
add
push
push
ljmp
in
out
jns
shrl
pushf
into
test
inc
and
call
jbe
cmpsb
mov
call
xchg
lar
outsl
les
and
xorl
aaa
andb
fsubr
ljmp
mov
fcoms
and
push
jno
xlat
jo
xlat
call
push
cltd
inc
jns
push
bound
sub
xor
dec
xchg
ljmp
inc
mov
orb
lea
mov
sbb
dec
stos
sub
add
jmp
jo
or
ja
sbb
bound
movntps
inc
in
lock
xor
cmp
leave
add
push
incl
dec
add
mov
and
and
mov
aaa
jns
sti
dec
arpl
adc
fwait
call
iret
dec
into
lea
dec
dec
shrl
andb
jg
dec
and
movsb
sbb
and
dec
cmp
mulb
lock
aaa
fs
rcrb
clc
in
icebp
mov
or
jge
cli
sar
mov
push
inc
lahf
enter
adc
mov
daa
sbb
shll
xchg
and
repz
jnp
inc
loop
mov
ret
inc
lret
call
inc
fisttpl
hlt
fildl
and
ss
out
pop
shrl
scas
push
cld
pop
jne
xor
lcall
incl
mov
mov
pop
mov
or
scas
lcall
jmp
pusha
or
cwtl
mov
sbb
aad
sub
mov
nop
popa
rcll
mov
lcall
lahf
fwait
dec
xchg
enter
movsl
cmp
dec
hlt
ljmp
cld
dec
jge
sub
xlat
or
js
cmp
insb
and
jmp
push
or
int3
fcompl
lahf
addr16
push
in
mov
inc
in
or
inc
push
mov
jmp
decl
int3
lods
pop
lcall
xchg
inc
cwtl
jbe
int3
xchg
adc
pushf
push
fildll
sbb
dec
movsl
mov
ficoms
push
call
dec
jbe
fimull
xchg
test
mov
test
shl
jge
fwait
rcll
lcall
jae
imul
stos
icebp
pop
fcomip
add
stos
sub
stos
sbb
mov
in
cli
or
rep
pop
aam
cltd
cmp
xor
lds
mov
test
pop
icebp
dec
inc
in
or
and
jnp
mov
lcall
adc
or
arpl
mov
enter
add
inc
sbb
fwait
dec
loop
add
jne
mov
xor
mov
adc
lea
int3
cmc
push
mov
mov
xchg
call
and
inc
loopne
lods
jae
repz
jns
cmp
mull
imul
outsl
dec
js
insb
or
pushl
mov
shll
fdiv
ds
jmp
movsb
aaa
dec
je
sarl
push
cld
sbb
outsb
pushf
cmp
xchg
sub
jge
hlt
adc
pushl
sub
and
xor
or
jmp
fmull
notb
push
ret
data16
add
jp
jo
push
push
es
or
lods
dec
mov
xchg
nop
mov
cmp
jo
mov
incl
push
mov
cmp
pop
test
sub
into
cli
push
mov
fwait
loope
push
inc
imul
pop
test
fwait
movsl
out
xor
sub
push
cmp
jecxz
incl
pop
fwait
ja
les
out
ljmp
mov
xchg
js
sbb
int3
sub
loopne
lds
xchg
out
leave
fst
fwait
and
test
lcall
xorb
sarb
jne
inc
xchg
shll
adc
jo
or
incl
daa
inc
or
pop
and
insl
xorl
lcall
push
push
pop
insb
lret
lcall
and
or
in
incl
les
shrl
lock
into
or
fisubs
xlat
outsl
clc
pop
icebp
ds
mov
xor
mov
data16
sub
and
divb
jp
xchg
out
shrl
and
jmp
dec
aam
adc
lods
cmp
xchg
sub
sbbl
pop
movsb
mov
iret
cmp
ret
je
fbstp
sbb
jl
movsb
out
icebp
loop
testb
lcall
ljmp
sub
inc
scas
sub
ret
dec
lcall
loope
add
push
xchg
std
testb
out
push
pop
int
adc
xor
mov
jmp
adc
add
jg
lods
inc
insl
stos
xor
inc
ja
mov
scas
jnp
dec
std
push
cmp
sbb
inc
loopne
dec
push
pop
add
jecxz
mov
loope
jmp
or
xlat
adc
mov
iret
sub
es
cmp
mov
xchg
pusha
mov
call
lock
mov
lods
pop
jp
xor
fucomip
mov
lds
pcmpeqd
ljmp
jb
add
adc
jns
adcl
xchg
out
lods
mov
jmp
xor
pop
mov
xchg
push
pop
sahf
test
add
xchg
cmp
jmp
sarl
xor
out
loop
stos
push
outsl
lods
lret
icebp
inc
push
mov
push
inc
icebp
out
add
int
clc
aas
cld
ficomps
out
iret
lahf
cmp
lcall
fwait
mov
cmp
sbb
daa
stos
sbb
push
jns
in
or
or
jmp
or
mov
call
test
cmpb
mov
adc
lods
add
push
mov
fisubs
pop
outsl
lcall
ljmp
xor
push
xor
dec
daa
adc
popa
pushf
std
ja
push
mov
adc
ljmp
cmp
ljmp
ret
inc
push
push
inc
int
adcl
sti
dec
inc
in
jne
fs
in
mov
shrb
inc
aam
mov
cwtl
mov
xor
dec
inc
rcl
pop
cmp
shl
faddl
cvtdq2ps
mov
divl
jne
push
pop
lret
mov
jno
loopne
cmp
sti
dec
decl
mov
pop
and
mov
lret
rorl
xor
and
scas
add
cmp
xchg
outsb
sub
data16
ficompl
inc
lock
icebp
mov
lret
inc
out
xor
js
pop
imul
mov
mov
pop
push
test
push
out
jmp
cmpsb
mov
jne
aad
pushf
sbb
test
pop
add
mov
jns
mov
add
cmp
repz
ret
loop
sub
lock
lcall
sub
inc
mov
std
psubd
outsb
ret
int
lods
notb
es
decl
mov
rol
jbe
xchg
test
outsl
arpl
test
in
loopne
mov
incl
mov
shll
cmpsl
in
inc
mov
fiadds
pop
add
rolb
cmpsb
add
xchg
sbb
incl
stos
mov
aas
in
xor
roll
sbb
mov
cmp
mov
dec
in
popf
test
fiadds
sub
push
out
loopne
push
pop
mov
incl
stos
xchg
jns
mov
stc
jmp
jg
mov
push
push
push
pushl
inc
adc
and
movsb
iret
add
pop
and
or
or
sbb
xor
xchg
push
repz
push
inc
addr16
test
xchg
mov
int
push
ret
pushl
int3
inc
in
jno
out
cltd
xor
pop
cmc
roll
dec
jle
inc
xor
js
xchg
xor
shr
mov
ss
jne
loope
and
sbb
js
jg
mov
fists
inc
dec
cmpsb
adc
xchg
jno
adc
in
jno
mov
idivb
es
js
adc
ror
inc
mov
xor
jmp
mov
or
mov
in
mov
mov
mull
sbb
adc
pop
cmc
divl
jo
lret
addl
mov
mov
cmp
lds
ret
fstpl
mov
xlat
aam
and
fdivs
sub
jl
cmp
push
jmp
jl
push
mov
stos
in
xchg
nop
sbb
lcall
xchg
pop
adc
test
mov
cmp
fsub
in
fidivrs
movsb
test
ficompl
lcall
movsb
xchg
or
icebp
cmpsl
rcl
and
add
in
xchg
sub
stos
mov
xchg
xchg
rorl
jne
sahf
jo
aam
xor
pushl
mov
sbb
pop
xchg
call
lods
pop
int
loopne
lret
cmp
or
std
ficomps
pusha
sti
mov
sbb
cli
inc
adc
mov
push
push
jmp
ja
cmpsl
or
and
aam
inc
push
push
add
mov
ljmp
fnstenv
sbb
negb
imul
rorl
xchg
dec
mov
push
call
jg
scas
test
mov
mov
addr16
cld
jl
stc
mov
stos
movsl
fldenv
jbe
push
decl
mov
ds
out
bnd
adc
das
jge
ja
inc
and
pushl
xor
pushf
cmp
jae
lcall
and
mov
add
call
pop
and
repnz
ficoml
xchg
push
testl
add
movsb
sbb
inc
xchg
mov
dec
test
inc
mov
and
addr16
fs
mov
decl
mov
or
xor
push
pop
in
leave
cs
mov
pop
mov
cmp
dec
mov
ds
sbb
aad
jg
or
pop
mov
pop
cli
cmp
out
cmp
daa
cwtl
xor
iret
xor
xor
inc
adc
adc
ds
aam
mov
jmp
pop
xchg
imulb
fwait
dec
lret
das
cmp
inc
mov
push
lock
or
xor
incl
or
dec
stos
call
cwtl
xlat
pop
popf
xchg
sbb
sub
mov
sub
jge
xchg
mov
xchg
addr16
lcall
sub
testl
pop
or
adc
jmp
jle
iret
sub
mov
xchg
leave
adc
decl
stos
cmp
gs
sub
pushf
out
adc
mov
push
fcomip
cmc
lods
insl
incl
lock
fsubl
lcall
mov
cs
xor
xchg
pop
shrb
adc
fstpt
sbb
decl
iret
iret
jmp
das
push
sbb
mov
mov
test
push
inc
fdivs
inc
or
cmp
xor
jnp
mov
and
fistl
inc
jne
mov
add
sti
lcall
or
sbb
mov
sbb
and
into
lret
fwait
cmc
es
std
cmp
std
pop
adc
in
arpl
insb
pop
jg
icebp
enter
pushf
mov
cmc
ljmp
xchg
adc
sub
cmp
cmp
adc
sbb
push
pop
enter
sbb
movsb
jp
aad
pop
jecxz
sbb
pop
shll
fbld
jnp
int3
inc
gs
fisubs
xchg
jnp
outsl
mov
fdivs
or
stc
and
sub
add
stc
dec
sbb
sub
mov
insb
mov
lret
into
rolb
sub
pop
pop
mov
call
inc
imul
ret
lock
mov
or
lcall
mov
cmpl
loope
xchg
out
mov
pop
insb
xor
int
jne,pn
pop
pushl
mov
out
scas
mov
aas
adc
cmp
dec
ret
or
add
ljmp
mov
in
rol
sbb
repz
push
dec
xchg
pop
rorb
sar
inc
aam
mov
enter
pop
arpl
mov
dec
das
enter
xor
stos
jmp
xchg
mov
push
sbb
fcomp
repnz
xor
loopne
mov
cmpsb
sub
decl
jmp
fldenv
insb
push
sub
xchg
or
push
pop
add
xor
pop
mov
dec
arpl
pop
ficoms
hlt
shll
mov
pop
mov
dec
sub
rclb
out
cli
push
outsl
jb
aam
sar
mov
pushf
rol
jbe
sbb
aad
jle
test
imul
push
pop
adcb
int3
inc
xlat
enter
inc
adc
fimull
rcrb
sbb
clc
leave
mov
fistps
outsl
and
dec
cmpsl
fcmovbe
dec
pop
xor
outsl
lret
dec
in
jg
pusha
loope
fs
inc
dec
ss
lea
sbb
ljmp
inc
int3
aaa
fisubl
jle
lcall
mov
sub
push
std
icebp
jp
fincstp
jns
clc
imul
std
call
add
push
mov
xchg
cwtl
inc
mov
jl
lcall
into
shll
call
push
and
in
sub
ror
movsl
ljmp
cmp
sub
pushl
hlt
call
scas
arpl
jecxz
push
popf
push
xchg
pop
push
call
cmp
fidivl
push
mov
xchg
and
or
dec
js
xor
push
shll
pop
cmpsb
mov
cmp
add
jnp
push
in
mov
push
push
into
mulb
lret
sbb
hlt
ja
fdivs
sahf
sahf
jae
lock
repnz
inc
in
lods
sub
sbb
pop
test
stos
popf
fcmovnb
xchg
jmp
nopl
ret
fldt
cmp
cli
xchg
sbb
add
mov
add
insw
cld
adc
pop
mov
xor
bound
or
mov
loope
inc
decl
in
imul
incl
stos
popa
mov
inc
arpl
dec
sbb
lcall
shl
cmp
push
incb
out
out
xor
xchg
jecxz
ja
sub
push
cmp
out
cli
mov
faddp
out
adc
neg
movsl
pop
mov
out
subl
xchg
fcomip
sub
xor
fs
adc
or
in
call
pop
dec
jecxz
ljmp
push
lret
push
mov
stos
pop
or
mov
mov
test
popf
push
mov
and
lods
pop
and
js
arpl
stos
mov
xor
icebp
adc
pop
jnp
fscale
lcall
bound
inc
popf
dec
movb
xchg
imul
enter
xchg
call
mov
sbb
dec
xor
xorl
pop
lea
pop
sbbl
jmp
in
pop
dec
xchg
pusha
adc
rcrl
add
decl
std
or
xor
pop
aad
out
and
add
stos
pushl
add
aaa
or
imul
and
shrb
mov
leave
outsl
decl
adc
sub
in
sbb
into
inc
mov
mov
jmp
pop
lds
movsb
outsl
xrelease
popa
jmp
cs
and
adc
xchg
decl
imull
push
pop
lret
mov
int
dec
insl
inc
call
mov
xor
dec
inc
dec
out
fdivl
adc
leave
adc
cmp
mov
adc
mov
cmc
and
cld
call
inc
lds
xchg
cmpsl
mov
adc
es
call
adc
jmp
sbb
and
xchg
aad
xor
adc
adc
ds
pop
test
movsl
stos
test
outsl
inc
test
lea
jmp
pushl
loope
scas
clc
sbb
inc
lds
sub
cmp
mov
popa
push
mov
cmp
cli
pop
in
scas
js
fs
and
ljmp
jb
xchg
test
fmul
push
iret
mul
idivl
jmp
and
jo
dec
inc
push
push
mov
xchg
pushf
ret
sub
push
test
mov
cmc
jle
lock
cmpsl
pop
mov
xchg
outsb
repnz
popf
sub
push
inc
lret
mov
lock
cmp
arpl
rorl
mov
mov
or
pushf
and
sbb
inc
add
test
sarb
xchg
fiadds
sti
mov
mov
xchg
sub
lahf
add
adc
lds
call
or
test
sub
test
dec
ficompl
dec
fstpl
jle
test
cmp
sti
adc
int
fcmovbe
rclb
push
cvtps2pi
push
inc
or
int
inc
clc
dec
or
pop
hlt
cmpsb
mov
push
xchg
je
cmp
rol
xor
call
mov
xor
shrb
lods
rorb
jb
add
ljmp
jmp
or
push
mov
cmc
add
jg
and
ljmp
xor
stc
lods
dec
mov
cs
cmp
mulb
cld
mov
mov
cmp
jmp
aam
iret
dec
ljmp
ljmp
mov
rorb
add
cmpsl
dec
test
push
insl
sar
decl
cmpsb
adc
in
iret
mov
jge
out
ret
aas
jo
inc
mov
jg
add
cmpsb
dec
cmpsb
mov
sbb
in
xchg
add
pop
shll
add
incl
mov
cmp
ficompl
cwtl
insl
or
adc
je
call
sub
add
in
adc
testb
jnp
push
loope
fwait
stc
mov
pop
lock
add
xor
inc
xchg
lahf
xchg
pop
or
jg
xchg
or
pop
xlat
cmp
mov
lock
icebp
test
incl
or
pop
pop
mov
std
push
push
mov
pop
icebp
mov
repnz
sub
inc
fidivrl
push
sub
sti
es
dec
jo
jne
xchg
push
rcrb
lcall
jle
scas
and
mov
incl
mov
aaa
test
out
dec
out
test
jg
cmp
dec
js
cmc
aam
sbb
mov
mul
dec
insb
xor
ljmp
pop
outsl
out
xchg
push
dec
lcall
adc
pop
popf
xchg
mov
push
pop
xor
mov
sub
enter
iret
sub
repz
jg
mov
mov
shl
adc
add
push
dec
xchg
push
and
lock
lcall
or
sub
pop
jne
push
sbb
mulps
notb
add
scas
xchg
adc
iret
mov
nop
sub
sub
xchg
pop
iret
rcrb
ljmp
jecxz
jl
data16
or
mov
push
add
pushl
jns
jg
sub
bnd
stc
dec
mov
call
push
lcall
jmp
call
mov
and
xor
push
orb
int
es
lcall
into
or
fsubp
call
cs
fildll
pop
dec
jp
imul
jmp
lock
lods
fs
movsl
mov
rolb
xor
jmp
inc
js
cmpsb
mov
cli
leave
ljmp
fcomps
lret
and
inc
cmp
mov
imulb
incl
pop
add
dec
shll
test
loop
rcr
lret
xchg
adc
hlt
ljmp
sbbl
jbe
jg
adc
push
pop
pop
testl
cmp
adc
popa
aad
rclb
rol
call
jg
test
mov
lret
or
mov
dec
mov
rcll
mov
jg
ret
adc
mov
inc
sbb
pop
push
rcrb
cmp
test
adc
roll
ja
xchg
mov
inc
sub
pop
push
fistl
lcall
xchg
mov
subb
out
adc
mov
jg
cmp
mov
fwait
jne
pop
and
sbb
sarl
mov
js
add
add
shl
jno
cmpsb
std
imul
pusha
int3
or
ja
ljmp
repnz
je
hlt
xor
add
xchg
or
add
mov
std
mov
outsb
xor
jnp
es
inc
push
movsl
adc
fdivs
gs
push
adc
data16
inc
dec
mov
lcall
rcrl
mov
push
inc
hlt
dec
jl
scas
das
jb
or
add
mov
pushl
iret
ds
gs
mov
pushf
loopne
out
or
ret
sbb
adc
pushl
jnp
xchg
or
push
sub
mov
mov
add
mov
stc
mov
push
adcb
mov
dec
and
mov
cld
inc
dec
cmp
fidivrs
lahf
adc
cld
icebp
jge
aaa
pop
dec
jl
pop
iret
fistpll
int
arpl
pop
movsl
cmpsl
dec
or
ljmp
xor
ret
adc
pop
mov
cmp
fildl
scas
jge
addb
enter
mov
inc
inc
mov
jmp
hlt
dec
dec
inc
ficompl
cld
push
ja
repz
inc
mov
sub
aad
push
push
xchg
test
nop
mov
lcall
sbb
or
aas
xlat
ss
ds
popf
push
pop
mov
mov
repnz
decl
repnz
pusha
xchg
scas
stc
add
enter
sub
sbb
cmp
or
add
aas
lds
sub
daa
icebp
daa
daa
xchg
cwtl
and
mov
pop
imul
sbb
pusha
incl
pop
jne
cmp
out
adc
insb
pop
jb
rcl
push
int3
inc
lcall
pop
or
decl
lea
xchg
shrb
and
insb
js
iret
jo
shlb
sbb
dec
xor
xor
add
cmc
xor
andl
pop
lods
loope
in
sub
decl
jbe
sub
dec
imul
xchg
cbtw
or
xchg
add
sub
mov
add
aad
dec
mov
sbb
sbb
mov
negl
std
mov
dec
xor
fwait
sbb
ljmp
mov
and
fucomp
mov
arpl
mov
ret
roll
inc
popf
push
jmp
call
cmc
in
sub
aam
pop
sbb
scas
jmp
add
pusha
or
out
fucomp
int3
int3
test
decl
insb
fstpt
cmp
cmc
dec
add
mov
repz
cmc
mov
jmp
lods
insl
jmp
and
and
inc
nop
stos
xlat
sub
loope
pop
xchg
sbb
adc
jmp
ljmp
jno
ss
adc
xchg
add
popa
jle
stos
adc
movsl
jg
call
test
xchg
data16
push
filds
es
call
mov
xor
cmp
or
int3
cwtl
adc
dec
test
jmp
aas
xor
lods
cmp
jle
jb
mov
dec
repz
insb
and
std
jb
sub
js
stos
jle
bound
arpl
insb
mov
test
pushf
cmc
sahf
sar
jg
fistl
pop
fidivrl
inc
jp
stos
push
jns
sub
loop
ljmp
and
jns
shrb
cmpsl
jg
call
mov
sub
das
adc
add
pushf
mov
fcomip
iret
out
lcall
jp
loopne
incl
movsb
xchg
cs
xchg
mov
push
js
mov
inc
jecxz
adc
jmp
nop
imull
enter
mov
fisttpl
or
das
mov
in
jne
inc
lods
jbe
shll
fistpl
enter
mov
xor
dec
lahf
or
cmp
or
ljmp
ljmp
and
ds
popf
inc
push
stos
lahf
sub
mov
add
dec
std
push
pop
dec
rolb
cld
jb
mov
push
sbb
fildll
jp
jns
aad
aas
jmp
cmp
inc
nop
dec
ficomps
pop
ds
push
inc
out
ret
mov
sbb
mov
lea
dec
rcrl
mov
mov
xchg
adc
call
call
push
xchg
xor
arpl
lret
fisubrs
out
xor
les
decl
jne
test
xchg
mov
push
aam
repz
fbld
mov
aaa
sahf
or
cmp
adc
jl
lds
dec
jne
lret
jno
or
xchg
lds
std
arpl
ljmp
es
and
fimuls
xchg
sbb
jecxz
pop
mov
mov
inc
lods
addb
rcr
ljmp
sbb
cmpb
mov
scas
outsl
stos
push
jmp
mov
pop
mov
sbb
in
pop
cmp
mov
andb
fdivr
cli
xor
add
stc
sub
and
sub
insl
cmpsb
pop
xor
call
lods
aad
fisttpl
push
outsb
sub
in
push
lea
add
lcall
sarl
jb
add
xchg
dec
sbb
or
gs
mov
cmpsw
into
addl
outsb
mov
fisttpl
lcall
stos
fwait
pusha
in
stos
dec
xor
lret
xchg
je
lret
ficomps
mov
or
lds
inc
stc
adc
in
adc
xorb
out
xchg
fwait
lret
call
add
decl
xchg
jno
push
mov
addb
pop
iret
jl
cltd
fiadds
imul
jp
movsb
jbe
fbld
pop
pushf
int3
scas
or
mov
and
jg
aaa
and
aaa
std
decl
mov
shrl
add
xor
fucomi
mov
push
data16
mov
add
aad
rolb
add
arpl
aam
cmp
imul
loope
or
jg
fcomip
test
adcl
icebp
mov
or
push
mov
imul
out
or
xchg
ljmp
push
rorb
ret
dec
inc
ljmp
adc
call
mov
outsl
fldpi
std
adc
pop
int3
fmul
inc
cltd
or
pushl
xchg
pusha
enter
lret
xor
lods
rorb
pop
test
push
nop
data16
mov
jmp
std
sub
and
cs
sub
or
mov
or
dec
shr
fildl
sbb
xor
adc
inc
xchg
inc
mov
hlt
in
add
incl
imul
lret
mov
or
and
addl
or
jns
and
jp
xor
pop
push
fildll
xor
ja
out
sahf
je
mov
out
clc
ljmp
bound
push
and
inc
adc
clc
or
sbb
add
pushl
and
outsb
aam
mov
add
loopne
xchg
stc
push
lahf
lcall
lret
xchg
inc
pop
sbb
incl
push
std
push
jns
dec
xchg
out
pop
stos
push
scas
pop
jl
jae
leave
adc
pushl
fs
std
pusha
jl
stos
ja
fnstsw
push
mov
push
push
fcmovnb
jmp
mov
clc
jnp
mov
out
icebp
fnstenv
scas
stos
mov
ljmp
pushl
hlt
jle
in
add
bound
fisubs
cli
xor
imul
das
xchg
int3
das
icebp
movsl
fwait
loop
or
leave
cld
cmp
mov
add
stos
mov
adc
pop
leave
push
mov
ss
movl
outsb
dec
jmp
push
lret
inc
inc
sbb
push
xchg
popa
or
mov
scas
or
dec
subl
icebp
outsb
cmp
push
cmpsb
dec
jo
lret
lea
ljmp
pop
cmc
mov
jge
dec
fldt
inc
pop
sub
xchg
and
push
xlat
ljmp
cwtl
fistpl
pushf
pop
into
cli
fwait
and
aaa
adc
mov
test
jae
xor
xor
shl
sahf
les
xchg
pop
lcall
ljmp
inc
mov
loopne
fnsave
in
push
cs
dec
lcall
jp
xchg
mov
lret
insb
cwtl
xlat
cmp
lret
in
lret
cmp
push
mov
decl
decb
and
mov
test
scas
sub
cmpsl
int
dec
out
or
push
jnp
bound
or
xchg
xor
pop
data16
decl
xlat
add
jmp
xchg
lcall
out
jnp
pop
mov
xor
clc
mov
idivb
iret
fisttpl
sub
pop
shrb
sub
leave
rcrl
int
arpl
mov
stc
xor
jno
push
lcall
call
inc
inc
xor
out
sti
loope
sub
sub
mov
rcr
cmp
pop
cmp
fstpl
ja
cmpsb
jo
fiaddl
and
cli
decl
std
or
popf
call
xlat
ljmp
push
lret
dec
cmp
ss
mov
in
sbb
push
push
out
ret
scas
xor
aad
jo
popa
cmpsb
or
outsl
jmp
decl
ljmp
pusha
lcall
mov
subl
std
in
jmp
hlt
addl
and
mov
adc
dec
ja
leave
jo
shlb
aad
ja
mov
pusha
mov
gs
jae
in
call
pop
dec
insb
sub
fmul
stos
scas
ja
sbb
cli
imul
or
movsb
jae
fcompl
incl
incl
lahf
out
xor
sub
xchg
inc
sub
add
out
cli
push
jge
jae
push
mov
push
lret
sbb
lds
movsl
sub
push
js
movzwl
lret
clts
sarb
pop
jmp
inc
loopne
ljmp
addl
dec
mov
push
adc
es
push
mov
shrb
out
fwait
cmc
cmp
out
aaa
jo
jb
xor
sarl
jecxz
dec
ret
ja
lahf
movsl
adc
push
in
push
pop
aad
loope
mov
adc
shl
jns
xchg
rolb
mov
hlt
xchg
loop
push
std
decl
stc
jns
xor
insb
push
fidivs
xorl
in
pop
mov
or
std
and
add
jo
xor
test
mov
cld
mov
adcb
data16
or
call
jl
mov
mov
bound
jmp
jno
push
dec
ljmp
cmp
jo
pop
jno
lret
or
jecxz
mov
in
mov
push
sti
ljmp
pop
les
push
mov
aas
dec
stos
sbb
add
aam
xchg
xchg
lcall
xchg
push
dec
ds
adc
jns
faddl
aam
mov
mov
out
fmull
test
popa
test
jecxz
add
cld
dec
decl
mov
jbe
in
pop
cmp
nop
xchg
mov
fisttpl
decl
xor
shl
or
lahf
jns
jo
mov
sbb
xor
sub
sub
pop
lds
imul
out
sahf
adcb
faddl
mov
lcall
daa
inc
fdivs
test
jne
add
movsl
int
ret
mov
cmpsb
test
sub
cs
js
stos
sub
mov
adc
fdivs
sub
xlat
cmpsb
ljmp
mov
jmp
cmp
stos
and
fcmovbe
sar
xor
sub
psubusw
jns
pop
mov
in
lods
mov
or
add
inc
xor
xchg
adc
mov
out
pop
xor
cmp
lcall
or
insb
je
scas
xchg
push
inc
icebp
pushl
ret
data16
and
lahf
adc
sbb
lock
adc
out
loope
imul
decl
aam
xchg
lods
adc
sbb
xor
scas
in
xchg
incl
shrl
jnp
rcrl
jo
dec
test
add
jg
jl
je
xchg
push
lds
fsubs
iret
scas
pop
sbb
inc
xchg
xchg
jg
cli
scas
fwait
popf
data16
sbb
clc
leave
dec
xor
clc
pop
test
loope
adc
ret
jl
call
mov
cltd
push
out
sub
out
cli
imul
leave
inc
repnz
mov
xor
dec
sub
mov
jg
orl
inc
cmp
sub
decl
movsl
and
mov
add
out
jo
adc
pop
daa
insl
je
jg
cmp
fsub
out
adc
push
adc
iret
inc
cltd
mov
leave
sub
inc
pop
xchg
dec
xor
fadds
out
push
inc
xchg
push
mov
mov
mov
sbb
scas
test
std
push
lods
lods
hlt
fstps
lock
sub
in
xchg
cli
orb
xchg
nop
mov
mov
call
je
ret
jecxz
push
and
fprem1
aas
out
lret
data16
movsb
xor
call
outsb
aas
test
repnz
vphaddubq
adc
ds
jns
bound
sbb
xlat
rorb
dec
jge
dec
mov
dec
or
fsts
outsb
and
dec
sub
push
jg
push
inc
or
or
push
xor
mull
push
stos
addb
inc
sub
in
scas
bound
bound
jmp
push
fnstsw
filds
jo
imul
or
fsubs
scas
ds
add
and
fs
dec
loopne
mov
push
ficoml
add
outsb
adc
rclb
mov
mov
in
sbb
inc
sbb
fadds
add
arpl
nop
sbb
push
outsl
outsl
insb
push
jnp
xor
push
xchg
jo
push
and
gs
test
sbb
insl
insl
mov
mov
shlb
je
shll
imul
push
fistpl
xor
dec
jne
js
stos
add
roll
mov
mov
xchg
sub
jae
imul
add
gs
loope
inc
mov
dec
je
aam
mov
dec
outsl
insl
insl
loopne
test
sbb
test
popf
mov
inc
dec
jb
pop
xor
add
dec
outsb
inc
mov
in
inc
and
repz
aas
jo
pop
push
outsb
dec
xor
sbb
into
inc
insb
sbb
insb
add
inc
adc
imul
mov
outsl
jp
xorl
icebp
inc
adcl
sub
rcrb
sub
push
pop
and
clc
ds
insb
jne
mov
jne
data16
divb
push
add
dec
lock
push
dec
call
aam
inc
push
fildl
sbbl
outsb
mov
push
out
popa
addr16
push
inc
loope
mov
push
shrl
movsb
test
out
or
push
cmpb
jae
adc
push
push
push
mov
inc
jne
arpl
sbb
and
das
dec
mov
idivl
rcll
lods
sub
popa
push
sbb
insb
pop
inc
ja
sub
dec
packuswb
push
pop
mov
jo
test
adc
push
dec
inc
dec
sbb
aas
fsubl
insb
jae
push
ja
cmp
jns
lret
mov
lods
loop
dec
out
and
lock
pop
jecxz
or
pop
push
xor
xchg
sbb
inc
in
sbb
mov
lods
cmp
clc
outsl
popw
xor
xchg
push
add
out
scas
mov
mov
inc
mov
dec
loopne
push
jne
dec
pop
js
push
adc
jns
ficomps
inc
sub
dec
jae
jbe
enter
stos
xchg
inc
dec
jmp
inc
mov
pop
pop
mulb
sub
jb
cmc
mov
pop
outsl
jne
jge
xchg
lods
xor
call
ja
mov
movsl
call
lods
call
mov
or
adc
cmp
and
sub
jnp
inc
popa
es
jp
test
xchg
adcl
xor
mov
push
sbb
add
insl
jno
orb
adc
mov
pop
mov
jns
int
xlat
dec
adc
push
jae
sub
pop
imul
ja
xlat
int
insl
pop
mov
jns
cmc
ss
inc
inc
mov
or
iret
sti
cmpl
inc
sbb
cli
mov
mov
and
insl
add
sub
push
mov
cmp
es
mov
push
flds
add
or
or
outsl
push
pop
stos
or
stos
loope
inc
and
xor
cmp
inc
js
iret
js
ss
pop
outsl
or
cwtl
pop
iret
push
mov
mov
dec
outsb
pop
pop
outsb
mov
xchg
gs
clc
sahf
and
aaa
inc
or
inc
out
scas
inc
andl
leave
jo
jae
add
pusha
xor
sbb
mov
adc
daa
pop
ret
jecxz
add
jno
dec
adc
cmp
inc
nop
mov
sub
dec
outsl
or
lds
pushf
push
mov
inc
lods
repz
pusha
cmc
adc
outsl
jae
or
lret
inc
aas
ficomps
xchg
inc
inc
jbe
loope
bound
add
je
mov
xor
and
adc
mov
push
lock
hlt
jne
pop
mov
clc
mov
mov
orl
gs
sbbl
arpl
popa
mov
mov
mov
adc
pop
mov
pop
cmpsb
sub
inc
or
pop
lahf
addr16
inc
sbb
shll
adc
and
movsl
jns
orl
sbbl
fldt
jns
mov
cmpsl
jne
sub
jbe
or
or
pop
add
pop
add
mov
test
dec
rcll
pop
movsl
jmp
push
pop
fs
push
pop
xchg
cmp
shl
push
outsl
repnz
jb
and
icebp
repnz
in
inc
aad
jne
push
into
jo
inc
inc
lds
arpl
scas
lods
std
inc
imul
stos
icebp
aad
loop
fs
push
mov
js
insb
lock
ss
out
lock
insb
jle
aam
push
stos
fs
jp
je
jae
into
cmpsl
sub
jno
mov
jmp
mov
lea
adc
sub
add
enter
cmp
imul
dec
inc
cmp
or
jle
pushf
and
lods
scas
push
loopne
push
rol
or
jmp
and
mov
inc
dec
push
push
pop
mov
lods
xor
shlb
add
pop
adc
fldenv
mov
pop
and
out
adc
push
pop
jnp
cmp
out
je
insl
dec
outsb
dec
in
imul
jnp
pop
xor
mov
pop
add
add
mov
rcrl
sub
cmpsb
xor
or
mov
mov
push
adc
mov
lcall
or
mov
jo
scas
and
push
outsl
inc
xor
inc
cmpl
sbb
fbstp
or
cli
pop
std
push
jb
inc
jae
jo
sbb
inc
push
xor
push
pop
pop
gs
or
xor
push
pop
shll
imul
pop
cwtl
mov
adc
xchg
pushf
push
js
dec
jo
jmp
jl
cs
and
ret
inc
mov
cmp
aaa
sbb
push
mov
or
sbb
and
movsb
inc
in
dec
in
data16
dec
outsb
adc
and
mov
lret
xorb
nop
scas
arpl
pop
imul
in
mov
movsb
in
daa
icebp
mov
cld
ja
pushl
je
pop
fistl
ljmp
dec
cmp
shl
std
jmp
jb
clc
dec
mov
xchg
orl
lret
fnstsw
insb
mov
mov
cmpsl
cld
popa
imul
add
or
movsb
ja
adc
adc
dec
hlt
and
jmp
mov
cmpsb
insb
adc
mov
jg
outsb
ja
sbb
sub
mov
or
popa
sar
nop
cltd
test
mov
or
mov
pop
push
dec
mov
test
std
imul
mov
or
pop
insb
sbbb
pop
and
sub
dec
inc
mov
daa
jbe
inc
push
push
lds
inc
shll
aas
adc
movhps
sub
mov
leave
xchg
icebp
pop
data16
push
popf
mov
and
jl
mov
or
insb
and
dec
popw
imul
vmovaps
pop
adc
popa
xchg
or
jo
pop
pop
mov
or
or
add
scas
inc
jp
stos
js
data16
fs
mov
outsl
movsl
pop
lcall
adc
add
insb
addl
add
ret
call
ret
sbb
dec
in
addr16
fs
push
push
inc
out
adc
add
incl
inc
fs
sbb
adc
inc
mov
adc
data16
jnp
xchg
popa
ffreep
jo
add
pop
in
add
mov
jae
ds
es
pop
jnp
dec
imul
dec
jmp
inc
push
nop
jge
or
add
fwait
popf
dec
and
and
pusha
or
mov
movsl
add
inc
sar
scas
imul
sub
imul
xchg
cmp
push
cmpl
add
sub
lcall
pop
imul
dec
addb
cs
jnp
lock
add
and
fsubrl
jb
popa
adc
es
sub
lods
mov
inc
cs
out
insl
in
pop
lock
add
push
dec
scas
mov
jae
arpl
stos
out
push
mov
rorl
lock
das
pusha
and
jo
mov
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
