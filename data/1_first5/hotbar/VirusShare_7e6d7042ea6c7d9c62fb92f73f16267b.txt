fcomp
decl
or
add
mov
or
adc
lods
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jge
mov
mov
sahf
mov
les
mov
mov
xor
push
test
pop
mov
add
xor
das
dec
adc
outsb
push
inc
fidivrs
or
sbb
aaa
push
xor
mov
adc
push
lea
push
ficoms
push
add
dec
sbb
add
or
sub
adc
cmp
roll
dec
add
jg
and
add
push
pop
sbb
int
jmp
inc
push
orb
dec
icebp
out
xor
xor
inc
hlt
push
and
sbb
push
sbb
rcll
push
mov
add
add
ja
and
or
inc
lock
or
sub
lds
mov
pop
lods
jp
or
and
add
xchg
inc
fbld
sbb
sub
and
push
fldt
out
mov
push
push
sub
out
jnp
push
cmp
adc
add
jo
adc
jle
mov
mov
enter
or
out
xor
jp
push
push
into
mov
dec
fdivp
push
enter
je
adc
mov
jp
fstpt
push
les
add
push
push
or
adc
and
mov
dec
cmp
and
jb
xor
dec
es
and
add
jnp
stos
shll
add
pand
mov
push
and
jb
push
pop
xor
push
jb
in
inc
push
mov
lea
or
clc
fisubrs
push
mov
jbe
add
loope
xor
sbb
sub
mov
adc
xor
test
sbb
jo
pop
sub
int
aas
push
mov
and
mov
and
lea
cmp
jge
loopne
inc
fidivs
lods
mov
pop
ret
xor
inc
cmc
cmp
push
inc
push
dec
dec
push
sub
push
insb
loope
push
add
and
sbb
aas
sub
les
leave
jmp
pop
sbb
pop
add
mov
mov
sub
mov
add
js
sub
jl
or
scas
insb
add
inc
and
pop
xor
push
inc
xchg
inc
push
xor
push
xor
push
int
add
enter
push
push
aaa
aaa
jne
mov
test
xor
ljmp
pop
fiaddl
add
mov
dec
inc
psubsb
xchg
int3
push
add
call
inc
mov
inc
test
jecxz
pop
mov
or
and
mov
push
push
or
push
sub
push
movsb
sbb
inc
hlt
cmpsb
pop
lods
push
nop
test
cmp
mov
mov
xchg
cltd
push
push
cmp
mov
and
jl
pop
orl
xor
mov
cmovo
or
or
and
addb
dec
or
notl
or
ret
stos
add
push
lea
stos
xor
push
adc
cltd
ds
mov
and
xor
jge
sub
fwait
push
jb
hlt
push
jg
dec
or
testl
push
adc
sbb
push
add
ss
add
lods
adcb
jb
sub
fcomi
push
mov
pop
xchg
mov
pop
sbb
and
cmp
sbb
pop
and
inc
dec
add
test
imul
cmp
imul
push
push
es
or
push
add
sbb
mov
cmp
incb
sbb
cmpsl
in
mov
push
pusha
sub
sete
test
test
push
mov
or
and
or
dec
or
xchg
and
or
into
push
iret
adc
adc
pusha
dec
add
insb
pop
int3
xor
xchg
lret
and
push
cmp
test
or
push
test
stos
pusha
lds
mov
mov
mov
cmpl
jne
jo
pop
pop
push
jle
je
or
imul
and
or
push
push
xchg
mov
pop
push
mov
push
fwait
das
mov
mov
pop
push
push
out
shll
push
or
cli
push
or
sub
dec
add
movsb
testb
adc
sub
pop
fs
scas
dec
push
cmp
dec
xchg
or
sbb
clc
adc
push
add
jmp
jp
push
inc
cmp
leave
add
fdivrs
push
cs
push
add
ret
cmpl
sbb
sti
int3
mov
mov
shrb
sbb
mov
lods
cmp
lods
scas
inc
jle
xor
push
pop
push
and
call
js
or
leave
mov
test
pushf
mov
push
mov
test
or
push
mov
pop
testl
sbb
lods
mov
je
loop
cli
mov
push
cmpsl
xor
mov
ret
xchg
xor
push
pop
cmp
mov
adc
mov
lea
popf
cmp
ss
icebp
bound
adc
fmull
or
mov
ficoml
push
data16
jae
test
or
sub
mov
js
int3
fsubrs
cmpl
je
jo
or
mov
lea
adc
push
xor
xlat
jle
fcoml
push
push
sarb
cld
mov
dec
cmp
xchg
and
testl
cmp
inc
mov
outsb
inc
ja
add
jecxz
fcoml
adc
adc
push
pop
daa
add
dec
xchg
test
or
push
pop
out
and
in
jecxz
sbb
add
adc
jl
xchg
outsl
jmp
inc
imul
add
mov
test
ret
sbb
pop
mov
adc
mov
xchg
sbb
jmp
jns
jl
adcb
mov
movsl
inc
lea
lcall
xchg
sbb
jne
jo
lods
mov
std
ret
movsb
adc
aad
dec
test
jg
push
cmp
jmp
cmc
and
fidivs
insb
mov
pop
pop
and
int3
fisubrl
les
add
mov
or
add
xchg
and
inc
cmpsb
jg
cmp
outsb
in
test
cmp
lock
and
xchg
add
cmpb
in
jb
in
cmp
add
inc
add
pop
lods
nop
sbb
adc
jle
jne
mov
push
mov
addr16
imul
xor
and
jg
js
rcrb
push
lret
cmp
je
jle
jp
sub
cmp
je
or
or
mov
sbb
nop
pusha
test
mov
roll
inc
mov
cmp
pusha
inc
mov
fwait
and
xor
mov
movl
push
outsb
lahf
sbb
add
loopne
sub
sub
mov
es
inc
call
jg
shll
aad
cmp
jl
incl
test
pop
push
mov
js
jne
in
xchg
push
sub
pushf
push
xor
ret
pop
push
mov
mov
add
pop
mov
fs
dec
sbbl
faddl
push
push
aam
sbb
aaa
adc
push
or
icebp
push
rorb
and
fisttps
jle
pop
and
and
jne
movzwl
and
mov
xchg
je
push
cli
into
mov
jl
and
jmp
mov
lea
add
cs
incl
leave
jne
sub
push
push
inc
sbb
push
or
popa
lock
cmp
push
fists
js
add
mov
fmuls
adc
insb
jne
adc
jecxz
pop
pop
or
dec
es
lea
pop
jb
mov
sbb
inc
icebp
dec
addl
cmp
jl
jne
cmp
xor
xchg
add
mov
jbe
adc
mov
adc
mov
rcrl
int3
arpl
mov
call
lcall
jne
pop
mov
inc
loopne
test
dec
cmp
or
imul
loopne
fs
adc
js
mov
pop
cmp
testl
test
mov
std
inc
sbb
jge
push
call
test
push
fcmovnb
or
clc
jle
mov
mov
insl
jg
cmp
pop
insb
mov
mov
adc
push
cld
lea
push
or
cmp
rcr
loopne
add
mov
ja
add
jmp
sub
loope
insb
fcoml
add
push
hlt
in
clc
or
fists
cwtl
jl
inc
jo
jg
mov
fimull
push
std
movb
pop
pop
dec
pop
ret
pop
lock
ds
icebp
mov
enter
jbe
je
cmpl
sub
jge
sub
add
shl
mov
hlt
mov
pop
ret
adc
cmp
xor
mov
mov
shl
inc
or
add
jp
adc
adc
sub
rorb
lret
pop
movsb
push
and
jbe
and
filds
pop
pop
data16
or
jne
cmp
dec
or
push
pusha
xchg
push
push
cld
mov
or
lret
aas
clc
xor
pop
cmp
ja
add
pop
js
push
dec
fnclex
jmp
xor
push
gs
push
mov
repz
jg
test
inc
dec
pushl
js
das
test
mov
adc
mov
mov
adc
filds
andl
shrb
xor
sbb
or
out
sub
push
push
lea
sbb
outsb
mov
inc
pusha
and
cmp
shlb
or
or
data16
pop
dec
sub
pop
sbb
adc
adc
pop
adc
out
into
mov
loop
jnp
or
shl
mov
lock
test
icebp
mov
shrl
divb
ds
cmp
inc
add
adcb
imul
addr16
dec
add
pop
call
push
aaa
fs
cmp
je
cmpl
lea
jl
data16
mov
push
jne
push
lret
call
repz
jae
dec
test
push
sub
sbb
lds
and
pop
cmpb
jge
or
repz
adc
cmp
or
inc
or
cmp
stos
loope
mov
inc
xor
push
dec
fcoms
pop
call
xchg
mov
inc
inc
or
shlb
adc
ret
xor
adc
sbb
sub
mov
jne
fcoms
adc
adc
push
fnstcw
pop
test
mov
push
push
jp
pop
push
push
or
rclb
cmp
jne
xchg
push
xor
xor
mov
data16
mov
lock
hlt
and
push
clc
jb
cmp
jge
je
or
jmp
inc
add
adc
adc
or
add
push
or
add
adc
sub
fiaddl
arpl
add
repnz
and
sarl
cs
ret
adc
sahf
cmp
add
shlb
jbe
mov
ret
and
and
lock
xchg
adc
push
mov
pop
out
jno
add
ret
mov
enter
add
rorl
add
inc
push
add
ret
push
add
jbe
sub
push
or
inc
jle
fldenv
test
or
xor
iret
cmpsl
jbe
push
hlt
cmp
cli
lret
outsl
or
xor
sar
aaa
cld
loopne
rorl
add
je
cmp
rorl
and
movsb
jb
xor
lock
sbb
push
mov
and
add
adc
adc
imul
adc
ficomps
fsubrs
and
push
mov
add
rclb
jp
inc
pop
pop
push
xor
sub
jmp
andps
adc
inc
cmp
mov
jbe
jb
mov
pmaxub
jo
push
pop
mov
add
popf
fstl
jl
pop
or
cmp
adc
test
cmp
or
pop
jnp
popf
imul
mov
adc
xor
incb
pop
pop
bound
jno
cmp
ds
xchg
or
data16
push
test
cwtl
test
adc
cmp
icebp
or
adc
cmp
in
and
xchg
dec
dec
sub
ljmp
push
test
or
fmuls
jecxz
push
sbb
add
pop
subb
xor
int3
mov
vmaxsd
xchg
and
adc
pop
sbb
mov
or
pop
and
sbb
popa
rorb
shlb
sbb
adc
rclb
dec
pop
outsb
or
fucom
push
xlat
push
lea
add
ret
jl
insl
and
fisttps
mov
test
fsubrs
push
test
or
ud1
rcll
xchg
stos
shl
mov
inc
adc
mov
test
mov
arpl
ja
adc
inc
xor
aas
sbb
mov
or
and
stc
xchg
jl
and
fcmovbe
pop
sbb
sbb
add
jg
push
sahf
test
push
sub
into
push
sbb
pop
and
mov
sub
mov
pop
lahf
mov
xor
cmp
fiadds
ja
aaa
push
sti
inc
mov
je
or
mov
sbb
test
xor
push
push
movsb
rolb
or
out
adc
cmp
adc
xor
push
pop
repnz
push
adc
sub
sbb
jl
cmp
in
cmpl
fistpll
jle
lock
or
jmp
outsl
test
mov
shr
add
jne
and
cmp
out
insb
mov
jle
repz
sahf
jecxz
fdivrs
push
and
cmpb
adc
lods
adc
jl
ja
je
orl
iret
sbb
je
pop
cmp
mov
pushl
jmp
aas
pushf
xchg
jnp
imul
or
add
add
inc
int
pushf
xchg
je
push
inc
dec
mov
mov
daa
mov
push
cld
add
repnz
dec
je
lcall
dec
cmp
dec
mov
add
xchg
sbb
fnstsw
add
mov
loop
in
insb
or
enter
dec
rcrl
and
mov
mov
sbb
shrb
fcmovne
pusha
cli
xchg
insl
rorb
jp
lods
cwtl
push
lea
rcrw
xor
mov
push
mov
lret
imul
js
stos
mov
adc
dec
sbb
scas
loopne
xchg
dec
cmp
pop
jg
pop
push
mov
xchg
int3
out
fisubrs
fstpl
lret
mov
stc
sbb
sub
lods
scas
sub
fdivl
xchg
fldenv
je
xor
jne
scas
dec
xor
xchg
cmp
fnstenv
push
inc
cmp
ds
repz
repz
out
inc
mov
iret
in
or
mov
sub
adc
pop
and
addb
push
sbb
push
movsb
fstl
loope
push
adc
and
sahf
in
sahf
in
or
pop
jnp
into
clc
adc
add
adc
xchg
ja
dec
ljmp
call
insl
xchg
sahf
jle
xor
inc
mov
dec
mov
pop
push
lea
push
ficoml
push
add
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
mov
sahf
mov
sbb
or
jl
push
loope
in
cltd
or
movl
or
bound
rorb
push
je
js
jle
lods
cli
push
aad
jl
cmpb
mov
push
nop
xchg
nop
fldt
test
inc
dec
push
call
add
push
push
push
jle
jl
std
rcr
cwtl
movl
subl
xor
push
xor
stc
jge
or
pop
adc
cmpsl
mov
and
int
jle
and
leave
or
clc
movsl
mov
and
cmp
dec
sbb
add
imul
sbb
movsb
rcll
inc
call
in
out
push
add
xchg
roll
mov
js
cmp
inc
jbe
out
dec
fs
jb
sub
or
scas
aam
xor
call
sub
setne
push
xor
lcall
repz
stc
mov
cmp
pop
dec
ljmp
enter
rcpps
add
lea
cmp
je
lea
pop
jo
push
add
add
add
mov
pop
jno
repnz
pushf
push
mov
sub
push
jle
sahf
pop
mov
repz
ret
pop
addl
cmpl
xor
adc
scas
jl
xchg
pop
and
test
in
ret
adc
add
sarl
xchg
ret
push
push
lea
or
lods
cmp
std
aas
mov
mov
mov
ss
dec
mov
push
push
xor
push
inc
dec
mov
pushf
cmp
je
sub
pop
dec
push
ret
add
lea
xor
dec
sub
mov
shrl
imul
inc
add
mov
cmp
sbb
inc
pushl
daa
jg
or
fs
push
inc
jbe
sub
rol
mov
push
sbb
push
adc
xor
iret
idivl
cmp
inc
or
jle
inc
xor
sub
jae
jae
push
push
arpl
mov
add
test
neg
sbb
pop
icebp
ret
out
cld
call
push
call
add
push
mov
movsl
push
jg
push
addb
adc
adc
push
xor
push
jbe
sbb
mov
mov
jmp
sub
push
add
js
mov
add
movzbl
in
repz
out
cs
cli
cmpb
lret
out
adc
pushf
test
cmpsl
inc
sbb
dec
adc
push
pop
pusha
lock
mov
inc
sar
adc
sbb
stos
jle
adc
cwtl
add
jmp
lret
xor
jo
cmp
and
push
add
mov
xor
push
jo
lret
push
mov
sub
and
sar
cmp
int3
mov
add
adc
xlat
loop
pop
push
sbb
inc
clc
add
orl
or
or
lock
mov
sar
aad
sbb
jmp
rol
int3
pop
or
add
xchg
cwtl
jb
pop
movl
adc
rcrb
or
adc
mov
mov
out
fisubrs
hlt
or
xchg
mov
mov
daa
dec
adc
inc
push
sbbb
clc
inc
call
scas
xor
mov
mov
and
push
add
push
xchg
mov
dec
bound
pop
add
testl
or
inc
and
inc
xchg
icebp
mov
fsubp
pusha
or
popa
or
push
pop
push
pop
icebp
rorl
push
fstpl
movl
test
outsb
jae
pop
dec
cmp
psubw
or
and
mov
enter
mov
and
sub
lods
and
sub
sbb
cmp
ljmp
icebp
loop
dec
neg
nop
add
dec
push
or
je
ss
ljmp
push
sub
lahf
jo
push
addb
inc
inc
imul
push
xor
pop
push
jne
adc
pusha
jbe
add
popa
insl
movsl
test
jge
push
push
nop
cmp
sub
push
das
pusha
pop
loopne
lea
mov
pop
cmp
push
add
mov
push
out
mov
cmp
or
in
jnp
jg
cmp
addl
or
sbb
push
or
add
inc
imul
dec
orb
mov
enter
or
ds
or
push
mov
xchg
lds
and
push
and
push
push
and
leave
xor
mov
daa
push
sbb
subb
and
push
inc
ja
mov
cmpsb
dec
mov
stos
or
faddl
sub
aad
aas
inc
shrb
inc
scas
sarb
fldl
fmull
add
inc
mov
jl
inc
in
pop
test
jb
es
fildl
lahf
push
mov
adc
cmp
xchg
enter
adc
loope
adc
add
inc
addl
xor
and
push
or
pop
and
sub
jo
jne
pop
test
push
add
enter
xchg
ret
jne
or
sti
ja
dec
inc
push
add
push
mov
add
subb
data16
addr16
and
jp
loop
ret
push
cmp
sub
dec
pop
xchg
or
dec
jb
es
and
arpl
fsubrs
cmpb
inc
xor
jno
adc
push
enter
in
shll
inc
and
sbb
jecxz
mov
addb
push
xchg
push
push
lds
pop
cmp
mov
cs
cld
add
ficomps
dec
mov
jns
mov
lock
push
stos
sbb
push
incl
out
or
inc
test
fs
mov
int
dec
push
mov
bound
push
push
and
xchg
add
es
sub
fdivl
outsb
mov
or
add
int
xchg
push
sbb
dec
test
dec
push
push
push
lods
xchg
scas
dec
ret
push
shl
je
xchg
push
mov
xor
add
popf
loopne
ja
loopne
inc
inc
push
sbb
mov
push
xor
adc
pop
xor
mov
dec
popa
dec
sub
les
adc
add
orl
loopne
lret
rcrb
roll
mov
mov
sbb
sbbl
xor
cmp
daa
or
sbb
dec
les
inc
sub
jl
cltd
and
incb
sar
push
add
insb
inc
fstpl
daa
jl
dec
add
pop
inc
sub
jg
insb
call
bound
mov
dec
sarb
sar
mov
shr
add
mov
imul
push
dec
jo
arpl
cld
inc
in
jle
in
dec
fdivs
imul
pop
sahf
cmc
sub
mov
stc
add
adc
mov
push
enter
repz
cld
cmp
mov
push
cmpl
pop
sub
push
cmp
jne
push
adc
addl
mov
push
jmp
pop
pop
mov
pop
es
lea
les
cmp
stos
lds
test
mov
popa
hlt
imul
inc
addb
dec
push
inc
pop
data16
cmc
push
and
add
inc
cmpsl
sbb
sub
jnp
mov
fldz
data16
push
ljmp
pushf
sub
sub
incb
push
adc
fstpt
scas
ss
je
add
lods
xorb
sub
mov
push
mov
sbb
xlat
cmc
push
loope
add
or
or
add
nop
adc
test
or
jbe
add
mov
xchg
sbb
and
and
inc
in
add
scas
ljmp
mov
jno
idivl
mov
sub
jge
jmp
mov
cmpsl
jmp
mov
jg
std
sbbb
stos
fdivl
sub
pop
and
loopne
rorb
xor
jg
test
sbb
mov
mov
mov
loop
js
jns
inc
push
fcoms
out
imul
les
mov
je
js
sbb
je
add
cmp
inc
fcomp
out
add
pop
repnz
in
push
pop
movb
add
mov
leave
push
add
cli
enter
je
inc
leave
call
jbe
das
pop
push
and
fiaddl
popf
or
sbb
adc
je
sbb
mov
cwtl
rcll
loopne
adc
xor
xchg
dec
loopne
cs
and
inc
insl
pop
jo
jo
xchg
xor
or
mov
xorl
movsl
jno
or
xor
add
jl
inc
hlt
lret
sbb
add
xchg
sbb
dec
and
fsubp
and
xchg
mov
add
inc
push
pop
les
scas
aam
push
inc
outsl
loopne
aam
insb
pop
jmp
jecxz
bound
into
sbb
pop
add
ret
xchg
or
and
sbb
sbb
xor
or
sbbb
scas
pop
clc
stc
push
popa
xor
and
lret
or
push
mov
or
fimuls
or
push
ffree
mov
pop
cmpb
push
push
mov
push
out
xorl
xchg
fisttps
push
lea
push
push
inc
imul
mov
dec
cmpsb
xchg
orl
cmpsb
jo
fstpl
inc
mov
cli
sbb
add
or
and
and
xchg
ret
adc
or
push
push
add
adc
jle
nop
add
inc
push
inc
cmpsb
sbb
mov
test
push
mov
mov
mov
mov
push
add
add
enter
ficomps
lods
loope
mov
push
rcll
cmp
mov
repnz
or
xor
pop
and
pop
and
jmp
cmp
pop
mov
inc
movsl
mov
pop
ret
lahf
or
int3
xchg
pop
orl
xor
inc
inc
xchg
shlb
cli
add
mov
adc
cmp
setb
mov
mov
sub
cmp
setae
lcall
and
add
mov
int
out
lret
mov
mov
sbbl
js
pop
xchg
test
lods
call
add
dec
in
inc
push
aam
shll
lock
push
adc
dec
jo
dec
rcll
push
es
pop
pop
out
and
fistpl
daa
or
jecxz
test
mov
dec
xor
push
pop
cmp
pusha
mov
dec
inc
push
mov
dec
movsl
adc
sbb
inc
sbb
popf
and
mulb
adc
movsb
sbb
push
add
dec
in
dec
push
and
aas
inc
or
mov
mov
in
add
inc
stos
in
adc
iret
call
repz
fcoms
xchg
mov
mov
mov
and
mov
fcoms
lcall
pop
push
dec
jno
inc
mov
adc
out
scas
test
cmpsl
push
mov
add
add
jbe
add
add
push
add
xlat
dec
adc
or
push
jbe
lahf
loop
and
add
mov
jb
in
ret
ds
add
inc
adc
movl
sub
inc
xor
mov
pop
jmp
in
test
or
push
add
pop
push
dec
inc
xor
std
add
lea
mov
mov
int
xor
and
cmp
add
bound
lds
ret
out
imulb
pop
ss
adcl
push
mov
and
imul
cmpsb
rcrb
sbb
or
sbb
xor
in
or
arpl
mov
or
mov
test
sub
aad
pop
dec
cld
jmp
xchg
add
dec
or
loope
mov
and
or
push
ja
nop
mov
push
jne
sbb
or
subb
test
xchg
pop
mov
addr16
push
adc
setle
nop
cmp
dec
push
pop
movsb
dec
sbb
push
mov
jae
mov
roll
dec
dec
add
je
inc
add
push
pop
and
push
inc
lcall
jmp
xor
or
lret
dec
sbb
je
xor
es
jo
shrl
nop
mov
jbe
aas
xlat
mov
sub
mov
xor
js
push
test
and
mov
xchg
push
or
cmpl
andb
sbbl
roll
fcomps
pop
xchg
sbb
add
pop
ljmp
or
insl
cmp
jge
movsb
lds
shl
sbb
push
clc
cmpsl
push
dec
dec
inc
pop
jb
or
cwtl
sub
mov
push
arpl
inc
adcb
sbb
sbb
imul
daa
mov
xor
jo
and
lea
inc
pop
repnz
add
insl
aam
dec
add
push
push
add
sub
mov
lcall
sub
push
or
bnd
sbb
jo
enter
mov
negb
fcmovnu
sahf
das
rclb
jl
or
inc
push
add
dec
in
adc
sub
fisttpl
dec
dec
xor
fisttpl
jle
ret
nop
adc
in
or
xor
in
mov
and
inc
push
add
jne
xchg
or
sub
add
ljmp
pop
lret
lcall
mov
add
mov
sub
ficompl
inc
enter
lods
mov
sbb
js
add
add
push
mov
cmc
sbb
cmp
clc
cmpsb
ret
add
sarl
add
mov
lret
data16
fwait
lods
std
mov
inc
ss
es
pop
movl
lahf
pop
add
jne
sub
rolb
jb
rclb
or
push
data16
mov
pop
sub
in
adcb
aad
repnz
rorb
flds
cmc
or
ja
and
pop
inc
sahf
sbb
adc
xchg
scas
movsb
pop
push
mov
daa
and
das
ds
jge
out
sbb
mov
xor
sbb
sbb
mov
cmp
cmp
mov
push
dec
adc
cmpl
inc
sbb
out
mov
adc
add
lahf
in
mov
shll
lock
das
out
js
dec
sbb
insl
push
jmp
pusha
cld
lods
and
xor
mov
aam
mov
loope
dec
fwait
lea
popf
push
adc
xor
sub
sub
mov
adc
loopne
mov
xor
mov
loopne
ja
mov
inc
cmp
mov
lret
ret
shrl
lods
in
pop
stos
test
sub
adc
mov
es
testl
sbb
fmuls
inc
movb
pop
bound
jno
xchg
mov
add
push
out
sbbl
into
popf
jo
out
push
std
stc
cmp
pop
mov
inc
push
mov
out
fcompl
enter
jmp
inc
or
and
jp
xlat
pop
into
movl
pop
shlb
jne
push
cmpsl
mov
lret
cmp
xchg
mov
push
sbb
sbb
in
push
into
jl
pop
mov
fs
les
mov
mov
or
sub
jb
sbb
fnstcw
iret
lahf
adc
add
push
add
nop
jmp
push
xchg
sbb
pop
add
sub
inc
cmp
pop
jne
pop
sahf
sbb
das
mov
add
push
jle
xor
in
sbb
add
and
stos
adc
enter
je
stos
dec
sbb
repz
cmpsb
sbb
push
out
add
lds
sbb
mov
or
add
sbb
sub
and
dec
mov
pop
and
dec
rorl
sbb
push
into
icebp
adc
sub
aam
adc
cld
fwait
xor
push
jle
mov
mov
xor
popa
mov
repz
mov
movsb
dec
jge
pusha
add
inc
sbb
sub
sbb
jns
add
push
xor
add
sub
mov
pop
mov
add
sbb
push
add
and
adc
mov
addl
in
cmp
mov
jecxz
push
cmp
pop
jne
xor
mov
cmp
jmp
sbb
jne
sbb
ret
xchg
roll
push
loopne
cmc
test
mov
add
mov
stc
bound
sub
rorl
lret
in
xor
and
dec
and
and
and
xchg
or
dec
jmp
and
cs
and
fistpl
and
incb
jnp
pop
push
mov
add
or
add
test
outsb
pop
lret
and
xchg
adc
push
xor
lods
stos
jp
ljmp
push
push
inc
loope
mov
and
fbld
nop
mov
mov
add
movl
sarb
lcall
xor
adc
in
jp
pop
fbstp
dec
in
test
push
adc
add
push
adc
mov
cs
cmp
fists
jno
mov
imul
mov
adcb
repnz
daa
push
inc
push
pop
rolb
sbb
das
leave
adc
sbb
cmpsb
adc
in
add
lock
sub
push
mov
cs
pop
adc
mov
inc
dec
jl
rcrb
xorl
arpl
xor
lods
mov
fwait
add
insb
add
jl
push
inc
jb
rcr
xor
add
jns
adc
xor
push
cld
jl
push
push
js
adc
adc
imul
popa
adc
jo
xor
pop
dec
dec
out
xor
pop
add
mov
sbb
inc
or
lock
mov
xor
lret
xchg
pop
ljmp
dec
mov
repz
out
sbb
aaa
adc
add
push
and
push
in
pop
pop
pusha
cmp
and
push
test
inc
dec
or
cmp
xor
pop
dec
push
add
movsb
testb
xchg
xor
and
mov
es
xor
sub
in
xchg
xchg
and
pop
push
mov
inc
cmp
and
xor
or
test
xor
push
testl
mov
rorb
lods
insl
sub
jge
leave
into
mov
loope
cld
mov
push
xor
sub
pushf
jmp
push
sbb
insl
push
lret
sub
jge
push
or
add
jge
or
jne
movl
cmp
dec
and
xchg
dec
stos
cmp
andl
sub
in
mov
or
nop
mov
lods
test
jno
stc
or
inc
inc
or
pusha
pop
add
imul
in
sbb
lret
sub
or
xchg
pop
inc
daa
mov
jg
filds
les
inc
movb
cwtl
js
xor
mov
sti
loopne
ds
rclb
clc
sub
outsb
fmulp
mov
mov
and
jge
cmp
mov
and
jmp
frstor
add
ljmp
sub
stos
in
cmp
add
adc
sub
cld
ss
push
das
outsb
scas
mov
outsl
add
ljmp
dec
jl
xchg
dec
inc
xor
aas
and
or
inc
mov
les
rolb
sbb
sub
push
cmp
inc
adc
fdivs
sub
xchg
inc
fstl
popa
cmp
mov
fs
lret
fdivl
or
push
clc
mov
push
std
pop
in
and
std
push
into
sub
ret
enter
jp
movsl
js
mov
push
cmovbe
xor
loopne
push
fld
stos
pop
or
stos
xor
call
das
push
out
mov
jle
jb
add
mov
and
loop
add
sub
mov
adc
in
mov
call
mov
test
mov
push
std
test
adcl
jg
call
push
in
inc
pop
and
ret
call
popf
xchg
ret
les
movd
or
into
and
sbb
pop
pop
arpl
push
push
xchg
adc
mov
push
test
je
aad
add
sbb
inc
jbe
cld
in
je
push
add
cld
sub
dec
dec
push
mov
pop
or
stos
mov
lret
fld
jo
inc
pop
pushf
addr16
fiaddl
insl
leave
add
and
sahf
mov
jl
lock
mov
and
xor
or
gs
adc
pusha
gs
or
les
lods
adc
mov
sub
roll
iret
cmpsl
or
std
std
add
sbb
xchg
sbb
dec
rcrl
icebp
inc
add
es
mov
pop
mov
sbb
in
in
adc
cmpsl
xchg
fistpll
fwait
movsb
push
push
push
mov
dec
push
cltd
dec
ds
cwtl
sbb
pop
jno
jb
imull
adc
adc
dec
dec
or
inc
adc
sbb
jmp
out
add
inc
push
pop
sub
adc
push
adc
pusha
mov
gs
bnd
add
subps
in
cwtl
nop
dec
stos
jb
inc
adc
ret
nop
in
iret
dec
push
inc
outsl
jo
add
dec
xor
adc
and
cmc
insb
mov
add
out
nop
add
inc
or
sub
enter
xor
sub
push
sbb
jo
fcoms
pop
js
push
adc
add
xchg
int
add
inc
testl
ret
stos
inc
repnz
decb
sbbl
sbb
pop
add
ret
mov
std
inc
sahf
ds
adc
aaa
xchg
xchg
addl
push
dec
sbb
dec
xorl
cmp
add
daa
sti
and
mov
or
cmp
mov
or
call
push
dec
and
push
mov
cmp
mov
push
loope
out
les
add
in
adc
out
in
nop
pop
les
adc
daa
pop
cmp
arpl
jns
pusha
inc
sbb
or
movsb
movlhps
or
cwtl
push
mov
and
dec
and
lea
mov
inc
pop
fs
mov
sub
mov
jno
pop
lcall
adc
add
mov
cmpsb
call
push
outsl
sbb
or
push
or
pop
and
sub
cmp
loopne
push
int
cmp
or
add
orl
orl
out
pusha
jns
lret
fsubrl
pop
mov
adc
mov
or
xor
outsb
dec
or
add
add
and
cmp
idivb
adc
mov
dec
jae
or
jle
loopne
outsl
mov
inc
add
inc
pop
or
rorb
push
xchg
sbb
fs
mov
rcrl
std
xor
lret
sbb
inc
dec
fs
pop
xchg
inc
je
inc
int3
cmp
fbstp
inc
sahf
jbe
lods
sbb
shlb
inc
lea
fs
cltd
shlb
inc
inc
and
addb
lds
jb
shrl
pop
add
rcrb
mov
mov
enter
int3
shrb
xchg
divps
pushf
dec
jecxz
add
insb
fldt
call
frstor
xor
push
mov
lea
xchg
adc
mov
and
ja
pop
sub
je
and
jle
dec
clc
mov
dec
cld
sub
or
jge
push
lock
es
push
push
adc
dec
ss
out
orb
rclb
loopne
ret
jg
add
fdivrs
call
mov
adc
dec
outsb
jl
daa
orb
sub
jne
das
mov
ds
lea
xor
rorb
fsubp
inc
test
jmp
int3
lea
add
inc
cmp
dec
cmp
stc
push
call
mov
pop
in
sub
push
push
cmp
popa
sub
ret
fdivl
je
dec
pop
xor
adc
mov
in
js
jle
jb
ja
lods
rolb
ds
cld
lcall
push
lea
nop
add
push
cmp
cmp
jb
mov
jbe
inc
push
cmp
add
push
sbb
jne
or
xor
xor
test
mov
mov
les
jno
sbb
shlb
ret
cltd
push
mov
add
dec
sahf
stos
in
add
test
sbb
aad
inc
stos
movsb
inc
cmp
les
jg
lea
rolb
cld
ret
pusha
cmp
adc
mov
add
mov
pusha
add
sbb
or
dec
and
jnp
nop
clc
add
jns,pn
pushf
dec
lahf
dec
sbb
xor
ret
gs
cmp
dec
jo
or
inc
dec
repnz
call
add
mov
outsb
jge
mov
js
je
pushf
mov
movl
mov
add
jo
fadd
ret
mov
xchg
xlat
jecxz,pn
and
push
add
sbbl
js
jg
fcomps
incb
jle
mov
adc
and
scas
in
push
push
loope
xor
push
addb
hlt
subb
sbb
adc
sbb
dec
inc
pusha
arpl
add
fs
sub
das
ficomps
jl
push
mov
xchg
push
mov
xlat
jp
xchg
xchg
cmp
pop
subb
mov
push
inc
pusha
pop
leave
shll
pusha
ja
sub
addb
sub
mov
jle
aas
js
pusha
lahf
rorb
int
decb
lea
sub
fs
dec
push
xor
cmp
mov
cmp
xlat
xorl
aam
mov
ret
mov
pop
xor
lcall
aad
add
cwtl
stos
inc
sub
add
inc
xor
je
test
cmpb
cmpb
mov
adc
xor
add
or
loopne
add
outsb
loop
or
stc
push
shrb
push
cs
sub
sbb
das
das
vmread
les
sbbl
or
xchg
add
push
dec
xor
add
push
pop
leave
pop
and
dec
inc
mov
out
mov
or
inc
sbb
and
mov
jge
and
push
pop
or
dec
xor
add
pop
stc
sub
sbb
push
jae
mov
mov
dec
xchg
jmp
insb
xchg
xor
add
dec
out
pushf
imul
cmp
push
xchg
pop
daa
loop
xchg
insl
and
js
sbb
add
mov
cmp
add
ret
je
and
lods
or
adc
call
push
push
xor
add
pop
jg
jbe
jmp
push
cmp
test
push
movaps
jl
pusha
rolb
popf
or
inc
add
mov
insb
jbe
adc
push
push
xchg
pop
sahf
sub
sub
iret
and
and
test
push
mov
xchg
mov
push
jmp
mov
repnz
fdivs
jne
icebp
pop
cld
inc
xchg
inc
add
jns
js
sete
pop
jb
cmp
adc
outsl
sub
cmpsl
dec
add
pop
adc
test
dec
pushf
add
xchg
xor
dec
sbbl
enter
xchg
jle
add
adc
sub
insl
inc
and
cmp
mov
mov
test
test
mov
popa
pop
flds
inc
sub
push
add
clc
sbb
sbb
outsl
add
call
xor
xor
adc
in
cmc
mov
mov
in
pop
insl
popf
sub
lock
in
cwtl
pop
mov
outsb
mov
cmp
lea
inc
cmp
push
jg
test
xor
add
out
dec
loope
lea
or
out
and
mov
adc
out
mov
sbb
rorl
dec
inc
push
pop
mov
movsb
jns
jl
das
and
or
mov
sub
xor
shr
pop
or
push
rorl
adc
mov
mov
pop
pop
std
pusha
add
popf
shrb
popf
adc
sub
sub
cmp
imul
lock
mov
or
xor
xchg
and
push
pop
or
fcomps
and
xchg
xor
xlat
clc
loopne
inc
push
cmp
mov
pop
iret
cmp
adc
push
fmull
inc
sbb
test
jo
scas
es
adc
aam
in
cld
inc
or
mov
and
and
mov
and
pop
push
inc
mov
dec
shlb
les
ds
dec
loope
dec
sbb
or
sbb
lret
gs
or
add
xchg
popa
stos
xchg
aam
push
add
and
add
cmp
xchg
or
adc
adc
push
and
fs
call
or
gs
adc
push
cmp
mov
xchg
andl
mov
cmpsb
xor
jle
loope
mov
stc
inc
push
push
pop
jo
add
mov
popa
nop
add
scas
popf
ds
jb
push
leave
xchg
adc
inc
lock
addr16
adc
adc
sahf
mov
test
adc
push
push
inc
inc
adc
jno
out
adc
lods
fidivrl
movb
xor
mov
add
sub
inc
testl
or
test
dec
out
sub
adc
cmpsb
ret
mov
shr
lock
mov
cmpsb
add
rorl
fnstsw
call
xor
and
mov
mov
push
add
fdivr
mov
bnd
xor
sbb
adc
push
push
mov
fwait
xchg
loopne
stos
pop
jp
mov
shrb
pop
inc
rcll
pop
sbb
xchg
mov
icebp
je
push
pop
clc
xchg
cmpsb
mov
xor
mov
ret
and
add
push
movsb
nop
mov
add
data16
dec
push
jg
sarb
in
add
lcall
cmp
jne
sbb
inc
fistps
dec
je
inc
jp
ja
cmpsl
ret
iret
das
bnd
fld
mov
add
cmpsl
adc
and
cmp
mov
std
pushf
mov
mov
subb
test
adc
xchg
sub
sbb
cwtl
sbb
je
mov
mov
mov
jg
adc
add
sub
or
lea
jge
push
push
shl
rcrb
imul
flds
pop
jl
add
repnz
add
push
push
inc
sub
cmp
out
mov
pop
xor
pushl
mov
add
lods
xor
xorb
sub
out
and
sbb
filds
addr16
jmp
in
sbb
mov
push
dec
sbb
add
xor
dec
push
leave
bound
add
xchg
push
sbb
push
int3
or
imul
add
pusha
out
inc
aam
sar
jecxz
and
xor
aad
push
je
cmpb
pop
mov
cmp
cmp
push
in
push
jl
add
icebp
adc
sub
fnsave
cmpb
cli
mov
cmc
sbb
lret
lret
add
pop
or
cmp
push
cmp
adc
dec
hlt
jge
int3
adc
jp
aaa
lods
add
add
fwait
dec
sbbl
movl
add
jo
pop
das
jno
enter
sbb
sub
push
es
xchg
xchg
or
add
xorl
push
push
jg
push
add
push
jmp
loop
out
sub
ret
enter
pop
push
in
bound
movl
loope
lea
mov
mov
xchg
adc
push
cmp
push
into
inc
lds
mov
hlt
sub
push
test
adc
scas
push
mov
leave
es
imul
fisttpl
jo
dec
mov
adc
lods
mov
pushf
loope
mov
scas
mov
push
hlt
and
hlt
push
adc
shll
pop
xchg
pop
or
inc
movnti
in
xchg
xchg
cmp
mov
rcrl
adc
cmp
sub
mov
xchg
lds
stos
push
adc
sbb
imul
adc
jnp
js
insl
inc
jle
pop
jg
inc
jg
mov
ret
aas
movb
cmp
cwtl
adcb
orb
or
push
jp
lahf
das
outsb
add
rolb
jmp
stc
jg
gs
leave
add
adc
xchg
or
loope
cmpsl
xlat
ret
insl
popf
pop
test
test
call
es
ret
jne
addl
inc
add
test
fcompl
lcall
mov
adc
movsl
jl
mov
mov
or
jle
lock
scas
add
add
cmp
jne
or
sub
add
pusha
sahf
mov
push
push
mov
insb
lret
loopne
add
add
xchg
push
int3
mov
sahf
cmpsl
push
popf
fwait
adc
lea
xor
inc
jp
or
push
lods
test
push
addr16
push
stos
push
push
add
and
jne
test
rcll
leave
mov
insb
or
rcrl
pop
hlt
xchg
add
lea
pop
push
cmp
push
sbb
and
int
pop
adc
mov
test
add
ret
pop
mov
frstor
jle
lock
sub
aas
mov
cwtl
test
inc
or
cmp
inc
or
adc
pop
clc
adc
inc
jae
adc
cmpsb
push
jg
pop
leave
and
ficomps
test
cmp
scas
lcall
lcall
push
scas
loop
jp
inc
popa
inc
cld
stos
mov
movsb
pop
or
lea
sbb
cmpsb
push
movsl
gs
mov
pop
mov
sub
je
std
sub
inc
cs
sbb
mov
inc
loope
jmp
inc
iret
cmp
inc
pop
and
mov
dec
jo
mov
inc
imul
outsb
push
std
ret
jp
pop
mov
xchg
cld
push
push
fsubl
or
mov
ljmp
sbb
or
adc
lds
nop
and
mov
lds
jmp
mov
mov
mov
adc
cmpsl
xchg
inc
rcrb
add
pusha
imul
call
sub
and
es
shl
sbb
lds
addb
xor
and
jo
or
sbb
push
add
ljmp
mov
xor
sub
adc
add
pop
jecxz
jne
f2xm1
push
push
js
mov
mov
lea
dec
repnz
sub
ds
mov
or
xor
sahf
mov
push
jae
mov
adc
add
mov
mov
push
push
xchg
aas
adc
sub
push
push
stos
test
inc
sub
add
sub
add
cwtl
sbb
lcall
inc
leave
mov
or
push
xchg
es
inc
inc
andb
mov
fimull
lods
add
test
xchg
cmp
adc
mov
push
cmp
adc
push
mov
jmp
xchg
and
push
and
add
int
popf
pop
pop
push
xor
dec
push
inc
dec
xchg
in
push
cmp
push
xchg
loopne
adc
sub
das
cmp
inc
fsubrp
inc
push
add
inc
push
xor
sti
je
adc
xor
es
es
sbb
mov
xchg
into
add
sbb
shll
mov
jle
push
and
inc
pop
add
add
orb
popf
mov
lret
jnp
sub
and
insb
and
xor
sti
add
mov
adc
or
sbb
add
out
xchg
jo
pushl
mov
lods
test
sub
test
scas
cmp
pop
jo,pn
cld
cmp
pop
fcomps
mov
lds
shll
xchg
mov
and
add
adc
jbe
inc
pop
pop
mov
nop
push
dec
and
cmpsb
pusha
sar
push
adc
add
aad
jecxz
adcl
aaa
lahf
sub
pop
fidivrs
xchg
cli
and
push
pushf
dec
dec
int3
xor
lea
loop
push
jne
rcll
push
xchg
sbb
mov
dec
ret
jmp
mov
inc
add
or
mov
jecxz
arpl
or
movl
xchg
push
in
mov
add
push
push
push
pop
fwait
adc
lahf
add
cld
pusha
or
xor
pop
add
or
xor
push
xchg
cmp
add
fs
pop
out
cmp
pop
aaa
add
int3
les
jle
mov
adc
add
push
inc
sbb
jb
adc
cmp
add
faddp
test
and
cmp
add
lods
mov
sub
jmp
cmp
loopne
or
and
pushf
in
xchg
inc
fstpt
push
test
stos
mov
xchg
pop
arpl
stos
inc
sbb
push
lock
ss
out
arpl
in
pusha
push
imul
nop
pop
mov
and
stos
pop
cmp
push
sub
arpl
loope
pop
push
cltd
dec
add
pop
pushf
or
sub
add
cmp
stos
xor
insl
sub
push
test
and
and
push
rol
outsl
adc
cmp
insl
jl
cmp
cmp
das
inc
loopne
mov
dec
test
cmp
jg
jl
nop
test
xchg
shrb
push
stc
lret
mov
inc
cs
or
push
xchg
add
adc
mov
sub
pop
jb
pop
add
sub
stos
cld
sub
stos
out
aas
ficoms
pop
sub
jns
lock
jl
pop
or
lods
aad
jl
sub
or
add
xor
cmp
push
lret
add
dec
aas
shrd
mov
popa
cmpsl
out
ds
outsb
adc
mov
cmp
stc
add
push
les
and
imul
add
call
add
and
shll
sbb
aam
pop
mov
pop
mov
movl
insl
or
cmpsl
sub
mov
popf
adc
lea
push
cmp
scas
xor
xor
dec
popl
xchg
test
ret
add
ss
xor
push
adc
pop
shrb
orl
mov
sub
jo
add
inc
sbb
mov
movsb
test
popa
dec
mov
fmull
pop
sub
jns
xor
call
movsb
sahf
imul
in
add
gs
mov
add
xor
dec
add
add
scas
xchg
xor
aad
or
mov
mov
push
jo
inc
add
pop
or
pusha
xchg
adc
sbb
mov
inc
arpl
or
push
imul
ret
add
mov
dec
or
or
pop
sbb
das
add
je
lea
movsb
out
aas
add
rcr
fstpt
lods
mov
arpl
incb
clc
jb
pop
pop
fsubs
lock
aaa
jg
aam
push
add
push
mov
cmp
push
push
inc
sub
adc
sbb
or
mov
rolb
cmp
mov
std
aas
std
aam
mov
mov
sub
imul
add
in
xchg
in
call
sbb
pop
add
clc
sub
or
jge
fisubrl
clc
lret
xor
rolb
add
lcall
xchg
ficompl
sahf
aas
push
push
and
es
bound
lahf
mov
inc
sub
sub
je
push
sarb
pop
push
push
push
push
daa
jae
jle
push
push
push
push
in
inc
pop
push
imul
mov
push
add
add
push
movb
mov
xor
xor
sub
and
ljmp
fs
xchg
andb
or
xchg
fisubrs
call
jg
add
xorb
mov
jo
mov
lea
test
fsubrp
or
dec
mov
enter
push
rorl
ret
or
or
lock
fdivs
xor
dec
rclb
xorl
push
mov
or
add
jl
lea
ret
pop
sub
pop
mov
hlt
ljmp
std
insb
adc
push
pop
incl
sbb
and
ljmp
rorb
adc
pushf
and
fs
pop
jo
jmp
fs
or
add
insb
pusha
pxor
lods
clc
mov
add
add
scas
jne
movsl
aas
push
push
or
filds
ret
add
cmp
in
shll
loopne
mov
idivl
xchg
loopne
mov
lock
repz
mov
test
push
push
imul
push
push
ds
or
ret
lock
adc
and
and
es
inc
lds
sbb
inc
clc
add
mov
ja
mov
jge
shl
cmp
jl
mov
pop
das
lock
rcrb
insl
fnstenv
pop
sbb
sbb
add
mov
scas
test
cld
mov
dec
add
shll
add
ds
mov
xchg
inc
inc
sbb
sahf
cltd
add
inc
push
xor
sbb
cli
xor
cwtl
sbb
xlat
push
cmpsb
mov
adc
xlat
popf
push
loopne
call
jg
loope
stos
sub
mov
sbb
dec
mov
pop
outsb
loopne
adc
mov
popf
push
sti
cld
xor
idivb
cld
add
xchg
dec
sahf
add
inc
sbb
lods
xlat
sbb
push
and
out
dec
je
push
in
jmp
inc
divl
push
cmp
and
pusha
les
inc
xchg
sub
fists
xchg
and
outsl
aas
ljmp
xor
rclb
ret
add
pop
into
and
adc
rclb
mov
push
or
pusha
lret
ja
lock
push
call
test
dec
cmp
pop
and
orl
cmpl
and
cmp
mov
dec
or
pop
lahf
rcrl
mov
add
or
adc
or
sbbl
js
inc
jg
dec
pop
adc
scas
or
inc
clc
xor
std
imul
push
sbbb
call
loopne
nop
ljmp
mov
in
pop
add
sbb
call
or
ret
mov
testl
adc
cmp
mov
pop
and
and
mov
pusha
push
jg
dec
test
fdiv
gs
push
mov
popa
push
stos
or
push
outsl
xchg
in
pushf
addr16
fnstenv
je
ss
mov
cmp
jae
mov
les
push
sub
push
pop
pop
mov
or
sbb
movl
jb
pop
lea
mov
sub
xor
out
add
cmp
and
inc
and
call
loope
jmp
jmp
mov
xor
dec
movsl
push
cmp
and
push
cmpsl
repnz
movl
jge
mov
ret
jge
movb
imul
pop
rorl
inc
jbe
xor
sub
xchg
inc
mov
arpl
mov
jns
lea
jne
push
push
js
mov
clc
ret
insb
test
mov
mov
xchg
test
cmp
push
ficoms
xchg
punpckhdq
add
or
aaa
lea
pop
add
call
mov
xchg
jbe
and
out
movl
nop
adc
and
addr16
cmp
mov
test
hlt
cmp
sbb
out
adc
cltd
std
and
cmpsb
insb
push
dec
dec
rol
cmp
inc
ret
adc
inc
and
pop
xchg
push
enter
or
inc
add
and
inc
es
push
outsb
sbb
inc
loope
in
xor
add
mov
push
xchg
xchg
prefetchw
or
mov
test
lcall
or
mov
pop
mov
jno
enter
mov
xor
aaa
cmpsl
jno
out
xchg
xor
adc
or
aad
out
cmp
adc
int3
fisttps
add
cmp
mov
movl
negl
daa
inc
inc
ljmp
sbb
push
cmpsl
lea
dec
and
pop
add
jp
cmc
adc
hlt
fistps
sbb
dec
lea
push
test
jg
inc
and
js
jae
pop
aad
lods
aaa
pusha
inc
es
sub
dec
in
clc
mov
hlt
inc
sbb
jo
adc
xor
dec
aaa
sbb
or
std
push
je
jge
loop
dec
pop
jo
testl
pop
and
arpl
pop
push
mov
js
mov
cmp
adc
push
and
add
push
push
mov
pusha
and
cld
adc
andl
cmp
push
push
xchg
sbb
cwtl
cmp
sub
aas
insl
lea
loope
pop
pop
arpl
mov
aam
sub
dec
popf
int
pop
push
lea
push
push
add
and
jl
mov
cmp
jne
dec
rcr
sub
ret
notl
xor
xchg
sbb
pop
dec
add
adc
jecxz
stos
and
iret
mov
mov
sub
xchg
or
inc
mov
sbb
sub
or
inc
dec
mov
and
mov
in
mov
mov
in
mov
mov
ret
lea
inc
mov
ret
push
jl
std
shlb
mov
cmp
mov
jp
fidivl
cmp
icebp
push
push
fstpl
mov
push
mov
and
pop
push
lcall
pusha
insl
and
pusha
movsb
std
fmull
mov
sbb
add
orl
push
lods
and
pop
lret
scas
scas
andl
or
je
add
xchg
push
imul
stos
loope
add
inc
push
js
mov
pop
pop
push
pop
inc
add
xchg
jmp
roll
add
and
push
mov
rcll
push
movsl
enter
or
adc
or
xor
push
push
fisubrl
mov
fidivl
mov
mov
xchg
pop
stos
movsl
repz
ds
sbb
mov
lea
lds
sbb
enter
xor
ret
stos
pop
push
push
push
loope
mov
shrb
cmp
dec
inc
lds
movsb
addl
nop
in
shll
and
jae
orl
adc
dec
xlat
xor
sbb
adc
sub
or
xor
sub
popf
mov
and
loopne
movsb
idiv
sub
js
and
or
movsb
shlb
sbb
aaa
adc
add
pusha
jmp
push
add
loop
aaa
xchg
cmp
push
or
jb
scas
ja
xchg
pop
pop
jmp
and
dec
and
iret
adc
and
add
pop
inc
push
or
add
and
mov
int3
adc
gs
clc
add
out
sbb
add
inc
dec
or
mov
jno
jmp
mov
fsubrs
adc
repnz
adc
add
std
fldcw
in
add
xchg
dec
fmuls
push
adc
dec
fists
cmc
lret
adc
adc
jae
and
fnstenv
push
nop
subb
pop
cltd
and
aaa
shr
sbb
pop
push
sbb
xchg
sub
inc
adc
xor
rorb
jne
and
iret
xchg
ds
inc
push
test
ss
pop
sub
jmp
mov
test
add
into
testl
arpl
mov
cmpl
cmp
dec
lret
and
mov
ljmp
dec
jbe
or
hlt
sub
or
je
add
pop
bound
and
fs
cli
mov
pusha
push
test
jle
cmp
xor
cmp
adc
cmp
xor
mov
jl
push
icebp
dec
or
mov
pop
negl
or
jg
int3
loop
mov
pop
imull
int
xor
fcoms
fadds
lock
int3
xor
or
subl
mov
mov
mov
cmp
scas
sahf
mov
dec
add
mov
add
mov
xor
push
sub
adc
test
pop
push
sbb
test
stc
test
stos
mov
sbb
xchg
stos
xchg
xor
push
enter
mov
xchg
ficoml
sbbl
dec
and
adcl
dec
sbb
and
mov
nop
mov
fmull
sub
cmp
sbb
push
sbb
sub
xor
sub
sub
push
and
hlt
pop
sub
sub
cmp
mov
adc
ud0
push
jmp
ss
adc
add
jb
pusha
sub
mov
and
add
gs
pop
mov
sbb
pop
mov
cs
pop
xor
add
add
push
cltd
in
dec
push
rclb
mov
add
pop
dec
push
pop
insb
jb
dec
sub
aam
rcr
add
pop
out
dec
roll
sub
ret
test
mov
les
fstps
int3
inc
jno
and
repnz
push
and
sbb
test
das
cmpsl
adc
push
jl
inc
dec
inc
cld
push
test
test
adc
pop
xor
mov
pop
push
aas
cwtl
dec
mov
xor
or
cld
xchg
jno
sub
outsl
clc
xchg
mov
xchg
dec
xor
sbb
aas
push
push
pop
sub
adc
sub
bound
adcb
mov
add
fadds
icebp
ds
mov
jo
inc
adc
mov
jne
sub
mov
mov
sbb
add
aam
adc
adc
adc
mov
cltd
test
push
stos
je
jns
sbb
cld
cmpsb
jo
test
cmp
add
inc
dec
lock
insb
adc
dec
pop
mov
mov
or
mov
inc
sub
fwait
mov
andb
cmp
cltd
movsb
or
sub
jmp
or
dec
mov
inc
and
pusha
xor
sarl
mov
pop
rcrl
mov
xor
movsl
cmp
out
test
adc
xor
cmpsl
mov
pusha
and
push
fadds
add
pop
int
dec
shrb
jno
scas
mov
xchg
inc
inc
mov
pop
and
cmpb
clc
or
pop
mov
inc
mov
jae
loopne
inc
inc
insl
je
xlat
rcrb
inc
fadds
mov
inc
pop
jl
mov
mov
mov
shl
mov
loop
or
push
or
mov
push
lea
test
movsl
mov
ror
add
xchg
cmp
pop
aam
and
add
pop
pop
lahf
push
lods
xchg
in
loopne
inc
mov
shr
push
and
leave
lock
call
xchg
mov
sub
push
and
je
iret
push
packuswb
das
es
aam
mov
cs
mov
and
or
sub
or
add
inc
pusha
sub
imul
movsl
jb
fs
xchg
orl
and
int3
xor
rorl
hlt
jle
sbb
inc
jo
pushf
movsl
xor
pop
lds
jnp
push
ljmp
leave
pop
or
sub
xor
or
push
incl
sub
js
fidivl
movsl
jge
dec
sbb
add
adc
test
rclb
loopne
insb
jmp
sub
push
push
xlat
and
xchg
mov
add
cs
mov
pop
sub
or
jne
jl
sub
push
inc
inc
push
cmp
xor
xchg
push
fdiv
into
sub
pop
pop
in
insb
xchg
push
or
cwtl
mov
sub
shll
test
stos
pop
mov
cs
add
adc
adc
loopne
imul
in
arpl
pusha
xchg
lock
push
jns
pop
pushf
mov
xor
push
pop
sub
cwtl
inc
mov
jecxz
out
das
or
pop
int
repnz
or
xchg
pop
xor
inc
das
sbb
xor
es
and
or
cmpsb
push
pushf
sbb
hlt
lock
inc
les
dec
add
adc
adc
xorb
in
std
cmc
xor
mov
stc
sub
outsl
mov
pop
mov
push
and
add
xchg
push
jmp
in
jbe
orl
and
add
in
jg
jl
mov
push
lea
sbb
and
sbbb
jge
push
cmpb
xor
rclb
rorb
stos
fstl
jmp
lea
mov
popa
add
mov
ljmp
xchg
je
mov
or
loope
jge
xorl
aam
push
call
or
mov
bound
andb
out
mov
divb
sub
orb
aas
mov
inc
inc
push
or
mov
mov
loope
add
mov
rorl
aam
and
and
dec
cld
adc
sub
loop
lret
repz
popa
nop
jmp
push
js
es
inc
mov
sbb
addr16
pop
mov
push
sub
push
push
inc
inc
add
push
ljmp
adc
or
mov
sbb
xchg
aam
rcrl
lea
and
mov
jae
sub
outsl
ret
mov
and
push
adcb
push
or
push
ljmp
aam
shr
adc
ss
xchg
dec
and
dec
aam
push
sbb
jb
mov
je
aad
add
insl
xchg
mov
adc
cmp
xchg
xor
loop
out
push
aam
dec
loope
rcrb
loop
pusha
inc
adc
adc
adc
orl
jnp
mov
pop
mov
mov
sub
sbb
sub
wrmsr
xor
adc
pushf
popf
aas
cmp
cmp
inc
pop
inc
or
insb
pushf
and
pop
iret
adc
sbb
adc
cmp
lock
inc
mov
popa
dec
fmuls
mov
movzbl
push
mov
shr
adc
xor
fcmovne
push
push
rcll
push
les
xchg
daa
imul
sahf
imul
fsubs
lds
leave
xchg
pop
sbb
outsl
and
cmp
xor
sbb
cltd
mov
mov
test
push
add
jge
dec
stos
mov
pop
adc
mov
pop
ds
and
loopne
push
adc
mov
es
dec
into
test
mov
je
dec
inc
adc
dec
shlb
sub
mov
ja
push
push
add
jno
fisttps
movb
pop
cli
rol
cmp
out
push
sub
mov
jg
push
push
or
sbb
nop
or
dec
and
sub
test
add
dec
lcall
mov
ret
lock
mov
push
push
push
rorb
sbb
arpl
add
test
adc
popa
add
shl
inc
mov
dec
mov
mov
rol
cmp
or
xchg
iret
mov
adc
jnp
adcl
push
adc
or
hlt
pop
jmp
and
jne
loope
les
in
push
inc
and
pop
adc
cmc
inc
fnsave
add
sub
bound
clc
or
std
sbb
cmp
fst
inc
incl
jp
icebp
push
xchg
out
jecxz
ljmp
inc
inc
sub
inc
inc
pop
inc
out
hlt
ja
adc
mov
faddl
jo
push
mov
and
adc
mov
fsubrs
scas
push
lcall
mov
cmp
je
xor
inc
cmp
and
mov
push
sub
adc
call
sbb
icebp
or
enter
sete
sub
outsb
fbstp
mov
loop
scas
fisubs
mov
fcmovnu
scas
mov
decb
call
out
les
rorb
aad
aam
popf
out
xor
sbb
idivl
sub
jnp
mov
jmp
enter
add
js
add
dec
dec
add
shll
or
in
sbb
cs
push
les
cmp
shr
adc
je
lret
outsb
xchg
mov
fbstp
stos
ficoms
mov
repz
dec
xchg
push
push
lea
push
inc
push
add
mov
add
add
es
sbb
jno
add
in
imul
add
movsl
test
adc
mov
or
cmp
jl
inc
loop
cmpsl
sbb
inc
cmp
out
mov
mov
adc
add
adc
je
dec
sub
and
sub
xchg
sub
sub
dec
insl
dec
std
out
or
inc
hlt
jbe
add
sub
jne
mov
and
ljmp
shrl
add
xor
cltd
ret
sbb
hlt
xchg
cmpsl
jle
or
cmp
sbb
add
or
pop
or
rorl
addb
push
addr16
cmp
mov
and
and
xchg
dec
mov
lea
sbb
pusha
dec
hlt
ret
lock
or
jg
cmpb
jne
inc
inc
xor
out
mov
aad
or
push
mov
jne
cmpsb
ret
sbb
pop
sarl
push
sbb
and
lods
add
mov
ljmp
mov
jg
and
ss
ss
int3
test
test
sub
sub
sbb
test
xor
push
pop
push
outsb
test
adc
rolb
xor
push
and
xchg
negl
jl
push
je
mull
sahf
jo
outsl
mov
dec
mov
inc
rcrb
add
lds
and
stc
adc
nop
cmp
mov
and
add
sbb
movb
cld
mov
lods
scas
mov
xchg
pop
xchg
xor
lea
sub
andb
icebp
jge
movsl
mov
pop
fdivs
sub
xor
mov
push
loope
test
jmp
rcrb
and
xchg
xchg
ds
push
test
pushf
arpl
jo
push
cli
add
xor
push
add
cwtl
int
incb
cmp
aas
pop
push
xchg
out
sub
or
mov
jns
cwtl
push
dec
cltd
inc
fcompp
movsl
mov
or
jo
jns
push
push
arpl
and
insb
out
adc
daa
mov
push
ss
cmp
jl
sbb
push
xor
lods
cmp
adc
sub
addr16
or
xor
int
dec
adc
ret
adc
pushf
dec
leave
sub
sub
add
adc
add
or
sbb
cmp
push
dec
jmp
push
daa
dec
sbb
xor
js
inc
loopne
inc
lea
mov
dec
imul
or
test
or
and
nop
je
cwtl
xchg
adc
leave
xor
popf
pop
sub
loope
vmaxpd
jne
and
es
add
repz
mov
loopne
or
and
int
shl
or
ret
or
repz
loopne
inc
aaa
mov
push
mov
in
jge
movsb
je
sub
jne
or
andb
xchg
mov
fstpt
xchg
sarb
or
arpl
xchg
pop
adc
cs
in
fimull
inc
adc
cmpl
adc
and
sub
test
out
fcoml
adc
pop
dec
gs
and
and
out
inc
repnz
arpl
and
add
cld
jne
sub
inc
bound
xor
mov
jo
xchg
cmp
decb
ret
dec
imul
pop
es
mov
hlt
dec
ret
int
mov
jle
out
fmull
sub
into
imull
sub
mov
push
sarb
jne
push
repnz
push
pop
adc
sbb
adc
mov
xchg
push
push
dec
movsl
sahf
xor
repnz
ds
lret
hlt
sahf
push
lret
inc
push
sbbl
push
mov
movsl
xor
adc
aam
adc
fcmovb
and
sti
bound
add
dec
jmp
add
or
dec
sbb
repnz
push
add
jb
push
mov
mov
xchg
in
js
mov
dec
sahf
mov
and
lock
int
add
sbb
rcll
add
and
mov
dec
rcrl
ret
jecxz
add
mov
and
movsb
xchg
pop
push
sbb
and
loopne
dec
into
sbb
sbb
add
add
push
in
push
xchg
cmpsl
pop
xchg
mov
push
jbe
cltd
xor
pop
fisttps
sbb
dec
testl
cld
mov
imul
dec
cld
push
push
shr
nop
xorl
je
dec
pop
arpl
push
loope
xlat
dec
mov
sbb
cmpsb
mov
ss
and
dec
fs
adc
sarb
jb
stc
mov
or
mov
dec
add
jns
xchg
push
sub
dec
or
pop
mov
jg
test
jne
add
imul
adc
cmp
push
jnp
dec
mov
pop
push
jbe
or
jl
mov
or
add
enter
xor
add
fisttpll
cltd
sub
sub
loop
ret
pop
inc
add
xor
push
ss
and
inc
add
sub
inc
add
nop
ret
in
les
stos
ja
xchg
or
and
and
mov
jl
sbb
push
push
push
jns
push
push
fnstenv
sub
sbb
dec
mov
and
sbb
cmp
dec
repnz
mov
lea
imul
push
adc
cmpsb
jle
jnp
sbb
adc
sbb
sbb
call
fdivr
pop
imul
pop
in
pop
aaa
adc
adc
push
lea
push
pop
addb
stos
ds
jge
xchg
sbb
mov
js
sub
nop
pop
addr16
inc
stos
push
dec
inc
or
adc
orb
and
add
jne
pop
push
stos
aam
outsl
ret
or
leave
mov
mov
rorl
call
push
lods
test
and
lods
and
dec
xlat
jge
xchg
jl
leave
jge
inc
loopne
adc
and
sbb
and
pushf
xor
inc
fcomps
push
xchg
mov
aam
jmp
mov
inc
ret
pop
jmp
pop
mov
int
sbb
and
pop
pop
or
es
daa
mov
dec
enter
xchg
jo
int3
imul
enter
nop
popa
adc
add
mov
pop
imul
es
mull
orb
mov
dec
mov
and
mov
inc
push
lsl
rclb
imul
scas
test
inc
cmpsl
cmpsl
jmp
or
add
and
or
dec
aas
jl
add
xor
inc
jp
sub
test
adc
push
or
aad
jno
add
leave
adc
repnz
cmp
and
sbb
aad
or
push
repz
cwtl
add
int
pop
sbb
dec
or
pop
adc
add
cmp
push
push
adc
adc
loopne
jne
out
add
cmp
lret
pop
lea
cmp
jne
cmpsb
mov
cmp
aaa
mov
aaa
sbb
pop
cli
cmc
add
dec
cmp
pop
inc
add
push
push
jo
roll
sbb
movsl
jg
dec
sub
xlat
das
addr16
dec
inc
ficomps
cs
arpl
mov
cmp
sbb
movsb
inc
rolb
jno
push
mov
push
adc
in
js
mov
mov
jle
xchg
cmpb
sbb
les
xor
sarl
jge
lahf
sbbl
dec
rorl
xchg
xor
sub
mov
or
push
jb
pop
sbb
add
and
outsl
lock
xchg
lea
add
incb
or
jae
add
sub
dec
xor
mov
xchg
sti
sub
bound
adc
and
iret
in
push
cmp
xchg
jbe
test
push
sbb
rorl
jge
mov
cmp
inc
mov
je
jmp
adc
and
or
xor
sbb
sub
je
sub
add
sub
or
mov
pop
mov
inc
mov
xlat
sbb
inc
mov
dec
aaa
leave
and
add
sbb
or
lods
mov
or
mov
sahf
jmp
cmpsb
xor
push
mov
or
push
and
add
je
inc
inc
bound
movsl
insl
das
ljmp
call
mov
dec
push
in
divl
loopne
push
in
loopne
mov
btr
jmp
or
mov
mov
mov
inc
test
push
loopne
sbb
mov
adc
cmp
rcll
test
out
hlt
or
mov
adc
hlt
ds
leave
dec
jmp
sbb
inc
add
sbb
fs
mov
or
add
cmp
and
push
cmp
jmp
mov
daa
inc
add
cmp
mov
inc
ja
js
mov
dec
addb
sbb
push
mov
cmp
adc
inc
cmp
fs
add
movsl
xchg
and
mov
mov
mov
push
adc
mov
jl
inc
add
jmp
cmp
mov
cli
or
hlt
pop
shufps
scas
cs
insb
ss
in
adc
sub
push
adc
inc
xchg
or
imul
inc
cmpsb
adc
push
adc
mov
stos
adc
push
cs
mov
cmp
add
jnp
add
inc
es
sub
xor
adc
ret
pop
sub
cmp
jg
inc
lcall
dec
rcrl
test
jnp
call
adc
mov
nop
pop
adc
mov
stos
and
enter
inc
cli
mov
push
cli
inc
or
shlb
add
stc
jb
sbb
add
cmp
jae
leave
sbb
cwtl
add
mov
jmp
xor
sub
cmp
or
ja
push
push
push
adc
xor
aam
lea
fadds
mov
sti
sub
pop
shl
test
sti
ret
imul
cmp
add
fstpt
outsb
add
das
dec
pop
mov
or
test
cmp
jl
pop
jno,pt
sbb
mov
pop
mov
mov
mov
mov
jl
xor
fs
adc
push
jo
lock
movb
xchg
or
mov
push
sar
xor
inc
sbb
inc
xor
jo
sub
sbbb
adc
jb
out
inc
sub
cld
mov
mov
dec
shrb
cmpb
clc
dec
sbb
cld
and
xor
xchg
scas
sbb
xchg
adc
aam
dec
mov
add
dec
dec
pop
and
cs
dec
add
sub
inc
iret
push
add
dec
xor
push
scas
das
jno
lea
mov
push
push
js
loop
sbb
add
cmpsl
andb
push
insl
pop
sbb
cmp
mov
sub
mov
add
and
adc
mov
inc
icebp
or
cmp
lock
pop
or
dec
or
push
mov
aas
popa
movsl
mov
mov
push
push
dec
or
cmpsl
sbb
pop
and
cwtl
inc
sbb
xchg
jno
mov
sbbb
or
test
lods
cli
mov
into
mov
movl
fcomps
mov
jge
stos
sbb
jns
inc
fimuls
push
sbb
adc
in
add
dec
minps
cwtl
or
test
push
sbb
add
orb
cs
jo
xlat
in
movsb
sqrtps
fs
pop
or
sbb
mov
lods
pushf
xlat
jo
sub
mov
mov
rcrl
sbb
or
sub
xorl
nop
fadds
lock
je
xchg
jge
sub
scas
inc
loop
add
adc
adc
fnsave
adc
into
pusha
mov
adc
mov
mov
stos
inc
cmp
and
sbb
in
arpl
sub
popa
and
lahf
or
jl
enter
fldl
mov
push
jmp
mov
loope
ret
inc
push
push
adc
scas
push
add
xor
int3
ja
sub
add
sub
push
cmp
sub
push
push
adc
dec
push
push
mov
mov
fildl
and
lea
or
addr16
lret
adc
and
rorb
mov
test
adc
repnz
adc
adc
push
pop
and
mov
mov
pusha
leave
adc
aam
sub
mov
xchg
push
mov
dec
mov
inc
xchg
mov
rol
jp
addr16
mov
sub
or
and
add
dec
fiadds
dec
cmp
dec
sahf
stos
in
add
adc
enter
mov
add
dec
adc
sub
lcall
sbb
lahf
and
inc
daa
jp,pn
push
push
push
inc
popa
adcb
add
add
xor
lret
sbb
adc
adc
xchg
add
add
sub
dec
gs
xor
add
inc
xor
push
push
nop
lret
cmp
add
or
xchg
inc
push
dec
lar
add
mov
push
repnz
inc
cmp
mov
and
lret
movsl
popf
das
mov
adc
rorl
or
inc
enter
adc
test
loopne
xchg
add
mov
or
in
mov
sbb
and
fsubrs
push
movl
mov
pop
mov
jns
add
pop
pop
mov
cmp
cmp
fimuls
or
cltd
dec
add
adc
fnop
filds
leave
inc
adc
push
pop
ret
decl
push
pusha
lea
daa
cmp
sbb
dec
push
sbb
jae
in
dec
sbb
scas
xchg
out
pop
rclb
xchg
out
imul
imul
mov
sbb
ja
setne
push
inc
add
cmovbe
dec
xor
dec
xor
dec
xor
xchg
xor
or
xchg
xor
or
pop
xchg
xor
dec
sub
and
inc
dec
xor
dec
xor
xchg
xor
add
nop
xor
add
sub
inc
insb
mov
sub
push
sub
les
and
scas
cld
add
add
add
sub
jns
push
in
sub
daa
jge
imul
loope
add
addr16
mov
jmp
rcrl
jmp
and
mov
mulb
adc
pop
jne
sbb
xor
fucomi
sbbb
xchg
cli
inc
or
orl
sub
adc
xchg
and
dec
jbe
pushf
cmc
stc
jg
dec
cmp
int
and
adc
xorb
dec
lcall
xchg
into
inc
sbb
push
cmp
inc
mov
mov
movsb
xor
add
loopne
mov
xor
stc
push
push
cmpsl
add
xor
mov
lods
or
sbb
inc
les
movsb
sbb
and
and
ja
cltd
xor
loope
and
sub
sbb
sbb
push
je
jecxz
cmp
mov
popl
mov
jo
jmp
cltd
dec
xchg
sub
adc
xor
pop
scas
dec
push
fsubrl
pop
mov
inc
roll
addb
inc
pushf
sbb
in
inc
push
cmp
dec
pop
mov
push
or
mov
or
mov
push
imul
or
dec
push
pop
je
jb
push
or
mov
ret
call
clc
mov
loopne
xchg
inc
sub
jmp
int3
rcrb
aaa
jne
leave
cmc
cmp
in
jae
and
pop
cmp
sub
or
in
cld
sbb
mov
lods
or
repnz
orb
dec
test
insb
popa
test
sbb
sbb
push
sbb
enter
sbb
adc
in
and
rcll
in
adc
push
add
ret
sbb
cld
lahf
cmpsb
pop
loope
sbb
sbb
push
pop
dec
hlt
push
adc
hlt
push
mov
lahf
adc
push
out
lods
cwtl
inc
leave
add
pop
sub
sbb
into
es
pop
jo
pop
aam
mov
inc
mov
in
addr16
add
sarb
or
xor
add
and
dec
loop
push
jl
je
lret
sbb
adc
out
xchg
pop
dec
push
push
and
xchg
sbb
inc
aam
sub
stc
clc
add
jo
and
ret
inc
jns
and
mov
pop
std
mov
lea
push
push
inc
pop
mov
add
fildl
loopne
movl
int3
fbstp
inc
mov
cmp
xor
push
ljmp
push
sbb
fnsave
addr16
push
lods
or
outsb
inc
cmp
repnz
mov
pop
and
orl
das
subb
and
jl
cld
add
andb
mov
adc
gs
and
add
mov
jb
dec
xchg
fcoml
cmp
adc
jns
fwait
mov
push
dec
mov
repnz
push
cmp
adc
push
loopne
out
lock
popa
in
mov
xchg
dec
int3
movsb
xorl
out
dec
in
push
les
pop
adc
inc
in
js
or
cmpsb
je
shr
shr
mov
xor
push
call
lea
ss
jne
add
cmp
rol
mov
sbb
xlat
sarb
dec
popa
xor
dec
mov
pop
call
and
lret
jno
lods
push
daa
jmp
loopne
inc
jle
add
sub
xchg
pop
rclb
fadds
mov
ret
inc
iret
cmp
push
jecxz
lea
sub
jge
adc
push
cmpb
push
adc
fcompl
ficompl
cmp
xchg
fimull
cli
sub
jmp
sarb
fidivrl
xor
lea
sbb
cmp
jl
adc
xchg
cmp
lahf
sub
push
inc
pop
in
pop
and
or
mov
loop
or
mov
mulb
xor
add
ljmp
xchg
sbb
jge
jae
push
aam
lahf
add
add
jmp
mov
mov
orl
push
jo
js
jno
rorl
adc
xchg
adc
xor
push
js
add
add
pusha
test
es
insl
inc
jl
lea
ljmp
ret
xor
add
xor
shll
sub
add
es
fildl
cmp
inc
dec
add
ja
push
push
pop
dec
inc
sbb
ret
in
jp
cltd
call
les
clc
fs
adc
pop
mov
fiadds
dec
sbb
or
int3
inc
inc
cmp
xor
vandnps
aad
test
sub
xchg
sub
or
and
test
or
ss
cmp
es
movmskps
test
adc
pop
es
and
inc
push
mov
push
or
inc
push
cvttps2pi
jb
inc
adc
dec
adc
add
adc
sub
insb
add
test
xor
ficoms
cmp
test
shlb
pop
test
cmp
xchg
sub
jl
divl
mov
adc
inc
dec
sub
mov
mov
sbb
sarb
dec
iret
js
add
in
or
insb
adc
push
cld
jo
or
adc
out
mov
and
add
and
aas
fs
roll
adcb
bound
es
jae
push
mov
imul
and
jle
cmp
nop
sbb
jb
mov
in
sbb
int
mov
add
loop
popf
and
cmp
xor
dec
sbb
sbb
dec
es
pop
pop
sbb
mov
cltd
pusha
sbb
xorl
push
cmp
ljmp
pop
dec
and
xor
xchg
xor
and
sbb
and
rorl
addr16
enter
clc
push
fcmovnb
cmp
or
sub
xchg
imul
cmp
pop
sbb
sbb
fwait
or
lahf
jns
xor
fistpll
fs
xlat
push
dec
es
lret
out
sub
sbb
pusha
nop
addr16
es
nop
add
pop
jb
pusha
sti
add
push
jns
and
jge
pop
andl
push
cltd
fs
mov
add
lds
dec
pop
cmpsb
cmp
sbb
shlb
cmp
push
lods
notb
lea
or
dec
mov
add
jecxz
pop
dec
lahf
xor
dec
mov
or
dec
jmp
and
cmp
and
inc
add
xlat
push
imul
adc
xchg
pushf
std
push
xor
or
aad
arpl
or
adc
imul
iret
repz
cmp
mov
cs
xor
adc
stos
dec
orb
and
shl
dec
cmp
lret
or
xor
push
xchg
adc
mov
mov
and
jno
adc
in
pop
test
xchg
jge
push
clc
jl
mov
add
fdivl
jle
fnsave
push
lock
nop
fisubl
push
dec
jne
inc
nop
movsl
xorl
mov
adc
inc
sahf
push
or
fwait
adc
call
das
or
sub
push
push
mov
sbb
or
and
add
push
push
mov
ja
lcall
sbbb
pop
ret
cmpsl
js
push
xchg
mov
jecxz
jne
jmp
dec
mov
xchg
call
sub
sbbl
insl
or
test
xlat
mov
test
nop
arpl
je
dec
jl
push
nop
testb
js
je
or
lock
loope
cmp
ljmp
sub
adc
cmp
pop
xor
sub
fwait
dec
lcall
and
enter
sub
push
or
mul
inc
inc
mov
push
cmp
xchg
lret
lea
xorl
call
cmp
adc
adc
jo
add
mov
jle
sub
push
and
cmp
inc
jecxz
adc
cmpb
lcall
cmp
call
jo
rcrl
push
pop
sub
js
loope
mov
lea
or
add
add
jmp
mov
movsl
or
jns
or
dec
inc
push
add
push
sub
mov
popf
je
daa
fcoml
nop
dec
out
pop
test
and
lahf
ss
jne
jg
mov
xchg
add
mov
sbb
lock
ret
mov
adc
cmpsb
add
push
xchg
jp
pop
mov
push
sbb
adc
aaa
data16
or
incl
ds
sub
inc
js
or
xor
adc
adc
testb
mov
add
shll
lock
loop
adc
lods
and
adc
mov
sti
xchg
aad
pop
das
loopne
pop
or
add
inc
lea
pop
add
push
outsb
pop
inc
fwait
dec
inc
popf
and
adc
jl
rcll
mov
in
jo
and
loop
inc
add
leave
inc
lock
inc
mov
out
mov
jmp
add
sub
push
cli
sar
push
pop
ljmp
push
std
loopne
dec
bound
imul
sbbl
loop
cmpsb
out
xor
cmp
sbb
je
or
mov
dec
and
mov
dec
and
pop
in
adcb
fadd
xchg
xchg
je
cmp
push
jbe
pop
xlat
cli
and
dec
pusha
sub
sbb
jp
mov
clc
ljmp
pushw
jmp
andb
lock
fdivrl
adcl
mov
in
jb
xor
mov
sub
jae
int3
adcb
popf
add
jo,pn
xchg
je
push
sub
mov
aam
adc
mov
or
dec
adc
adc
xchg
adc
sbb
xchg
outsb
pop
and
adc
out
xchg
dec
xor
pushw
sub
xor
xor
adc
pop
cltd
add
push
dec
repz
jg
pop
fistpll
jb
dec
repnz
sbb
dec
or
inc
cs
lret
push
push
aam
mov
adc
cmpl
jae
cmpsl
nop
xchg
out
imul
mov
sbb
push
lock
sub
adc
xor
insb
jb
add
insb
sbbl
inc
insb
sbb
add
xor
inc
xorl
mov
lcall
cmp
pop
addl
adc
adc
fiaddl
mov
icebp
and
sub
fwait
mov
or
stos
pop
xchg
inc
cs
push
js
dec
mov
leave
test
and
inc
jl
dec
arpl
xlat
iret
inc
hlt
sub
sahf
xor
lahf
dec
jle
or
ja
mov
jp
push
and
sub
ds
pop
jmp
pop
cltd
sbb
cmp
push
xor
and
jl
xchg
xlat
add
add
aaa
xchg
js
and
clc
addr16
pop
push
and
dec
add
jl
mov
shrb
orl
adc
mov
cmp
rolb
imul
inc
lds
and
outsb
adc
jp
push
bound
pop
push
push
movsb
push
or
mov
xchg
mov
mov
mov
mov
inc
mov
sbb
pop
mov
pop
add
mov
aam
adc
insl
sbb
es
sbb
pop
test
in
or
jecxz
sbb
inc
sbb
cmc
add
fcmovb
dec
js
add
call
ja
xchg
add
aad
sub
and
lret
xchg
xor
xor
insb
add
loopne
in
ret
das
add
loopne
xor
cmp
mov
add
push
push
push
add
js
outsl
or
imul
shrb
inc
gs
cld
pop
ds
fdivl
inc
fcoms
xchg
inc
inc
jle
add
inc
shrl
jne
inc
xor
lcall
call
add
lods
test
push
leave
ret
test
imul
lret
rcr
or
and
andl
aad
sub
or
les
enter
sarb
lock
mov
dec
xor
inc
add
scas
icebp
and
loope
test
pushf
fs
arpl
je
bound
dec
or
test
push
jae
test
cmpsl
jle
adc
out
push
push
aam
and
add
inc
add
test
movsl
mov
pushf
add
xor
mov
jb
rclb
inc
mov
and
dec
cli
xor
mov
xchg
and
in
add
mov
xor
push
pop
mov
push
push
pop
mov
loope
subb
popa
sub
or
dec
fsubl
cmc
inc
ljmp
nop
sbb
movsb
negb
xor
cmp
sub
test
in
fimull
pop
test
push
inc
sub
sbb
les
dec
popf
adc
jno
subb
loopew
repz
and
dec
push
pop
mov
lock
push
mov
cmc
or
inc
xor
sbb
xor
pop
mov
sub
arpl
pop
or
sbb
push
inc
fs
sbb
mull
or
enter
lahf
push
cmpsb
movsb
jbe
or
push
cltd
fiaddl
inc
fisttpl
pop
add
and
sbb
add
les
or
repnz
loop
push
mov
movsb
jae
xor
add
sub
pop
and
and
inc
add
fcoms
add
pop
pop
arpl
shll
xchg
xchg
fcomip
orb
pop
inc
xchg
xchg
sbb
cmp
push
push
test
sbb
xor
add
pop
sar
mov
int
mov
inc
lahf
lock
xor
inc
dec
sbb
fmull
sub
push
mov
ret
push
add
movsb
cmp
mov
pop
mov
mov
arpl
daa
sub
add
fcomip
add
or
pop
idiv
jbe
adc
jecxz
add
and
sub
lret
pcmpeqw
lahf
rcr
sub
fsubrs
fs
sub
jno
jo
push
pop
lea
jb
xor
adc
je
add
pop
mov
clc
push
cli
lods
mov
bound
sub
cmp
jae
dec
or
nop
les
cli
and
and
or
mov
movsl
push
jb
lods
xchg
data16
and
nop
push
roll
xchg
cmp
orb
clc
inc
lock
push
and
jge
mov
add
push
dec
add
and
and
or
mov
pop
fldl
or
xor
into
and
pop
mov
stc
insb
and
dec
and
jg
xor
sbb
adc
lods
xchg
jne
xchg
inc
sahf
sub
sub
sub
adc
in
dec
pop
push
andl
in
dec
lds
adc
add
sbb
sbb
popf
inc
fadds
inc
pushf
adc
mov
jne
cmp
adc
in
xor
push
sbb
adc
cmp
sub
adc
outsl
and
in
test
fwait
enter
pop
test
sbb
dec
sbb
in
mov
add
data16
aam
popl
icebp
test
push
push
in
or
aad
xchg
shrb
pop
adc
adc
jmp
sarb
enter
mov
cmp
jne
sbb
cmovbe
idivl
enter
xchg
inc
cmp
push
enter
inc
adc
and
enter
cmpb
jmp
push
hlt
movsb
rorb
outsl
mov
mov
popa
mov
mov
and
dec
nop
daa
mov
and
jmp
data16
mov
push
call
aaa
inc
cmp
fstpt
and
clc
push
fcoml
sbb
add
xchg
es
cmp
test
inc
inc
mov
cli
aaa
lods
jnp
jge
jl
mov
xchg
mov
sbb
lock
push
subl
xor
sbb
mov
mov
and
inc
xchg
mov
mov
sub
lock
mov
fcmovb
mov
push
js
pop
pop
call
xor
inc
mov
push
les
mov
nop
mov
push
lahf
ret
pop
mov
je
xchg
sub
jmp
popl
or
daa
inc
rorb
xchg
add
or
inc
es
cmp
jae
lret
rorb
outsb
cmp
lods
dec
and
push
aaa
lea
icebp
or
and
add
cwtl
jns
mov
test
iret
bound
jne
pop
push
or
jl
addl
mov
sub
xchg
cmp
movsb
adc
push
cmp
dec
roll
ret
mov
cmp
insl
push
shlb
js
adc
aaa
pop
js
inc
push
cmp
adcb
mov
sbb
inc
popf
xor
dec
or
aaa
adc
add
enter
adc
add
aam
and
sub
lods
ficoml
scas
mov
jb
mov
add
xor
es
lea
lock
movsb
or
jle
adc
sbbb
inc
sub
mov
aad
jne
outsl
dec
dec
outsb
test
roll
cmp
xchg
jge
movzbl
bound
pushf
cmc
stc
mov
adc
mov
or
adc
bound
rolb
sub
pop
aaa
rcrb
test
add
xchg
je
sub
ds
adc
jge
jo
iret
push
mov
mov
push
sub
sbb
addb
insb
mov
xor
stc
jbe
or
decb
add
lcall
loopne
xor
fldcw
mov
mov
pop
mov
push
and
inc
mov
call
mov
shr
or
jbe
mov
cmp
loop
shlb
fists
jnp
mov
rolb
mov
dec
xlat
push
cmp
mov
mov
and
push
lahf
subb
adc
sbb
icebp
andl
sbb
sbb
jns
pusha
cld
sub
cmp
jle
push
adc
sbb
sbb
ret
repnz
adc
sbb
xor
mov
adc
shlb
xor
rolb
imul
rcrb
ret
aas
ja
sub
js
sub
sbb
pop
pop
fsubrs
loopne
sbb
js
push
push
adcl
movl
insl
fdivrs
push
cmovae
pop
cltd
or
pop
mov
addb
inc
pop
nop
lahf
jne
jg
mov
jo
mov
jg
xor
sbb
or
or
repz
adc
inc
inc
lea
and
aaa
add
lcall
add
xor
pop
in
insl
dec
mov
aaa
rorb
jno
xor
jecxz
dec
push
pop
lea
out
pop
sbbb
sbbl
xor
test
jl
cli
xor
cmp
xchg
add
mov
push
cmp
and
and
shrd
adc
and
adc
add
sahf
idivl
test
sub
aaa
mov
inc
inc
inc
jle
bound
pop
test
inc
dec
ljmp
or
sub
inc
jge
pop
dec
int3
out
or
adc
or
in
sub
or
jl
popa
test
push
sbb
js
dec
xor
stos
loopne
inc
or
nop
xor
pop
insb
cmp
insl
test
and
ret
push
inc
pop
mov
xor
nop
mov
or
sbb
outsb
int
sub
inc
push
xor
dec
and
addl
add
mov
mov
and
mov
mov
jno
jmp
add
ret
pop
int
adc
adc
pop
test
test
pop
inc
aaa
push
adc
fwait
sub
addb
mov
fs
cmp
and
sub
push
xor
add
scas
les
mov
jp
jne
cmp
cmp
nop
jecxz
and
je
xchg
aaa
leave
out
mov
and
and
fs
dec
mov
aaa
push
push
movb
iret
shlb
and
mov
fwait
push
adc
fwait
sub
jno
inc
inc
xchg
xorb
and
cmpb
mov
add
mov
and
xchg
push
lcall
aaa
es
mov
lea
and
aad
add
std
jb
jle
subb
push
sub
pop
or
shlb
jns
mov
pop
lods
cmp
sbb
mov
mov
sub
mov
add
lea
or
dec
mov
push
cmp
push
jbe
inc
repnz
push
ljmp
mov
inc
dec
lea
or
jo
xchg
push
adcb
and
mov
adc
cmp
sbb
pop
add
movsl
or
add
pusha
cmp
enter
or
inc
lahf
push
jno
adc
inc
pop
sub
lahf
push
and
enter
cmp
fmuls
lds
leave
jae
nop
push
dec
sahf
mov
adc
mov
dec
gs
mov
jno
push
pusha
stos
adc
push
mov
pop
fimuls
cmp
ret
and
shll
sar
dec
jne
aas
xchg
out
add
ret
adc
inc
stos
pop
and
cmp
inc
add
mov
in
cmp
ss
and
orb
js
dec
cmp
mov
or
les
pop
dec
sbb
xor
xor
pop
sub
adc
movsb
insb
cmp
adc
aam
mov
and
stos
int3
fiadds
pop
movsl
mov
adc
les
and
fnstsw
jo
repnz
je
scas
popa
mov
cwtl
add
fs
nop
add
jmp
inc
shrb
sub
je
push
jne
lea
repz
rcll
addb
aaa
push
add
jb
fs
sbb
addr16
mov
adc
or
mov
mov
pop
mov
insb
addl
mov
daa
push
rcrb
sbb
mov
push
cmp
insb
mov
dec
ljmp
mov
movsb
push
and
mov
mov
mov
pop
outsl
push
loopne
mov
fcoms
in
jns
and
and
clc
adc
jmp
sbb
test
fwait
mov
sbb
imul
inc
mov
pushf
and
shr
inc
jno
daa
push
mov
ljmp
jmp
xchg
inc
jae
cmp
jae
icebp
push
inc
loope
ret
arpl
loopne
mov
xchg
mov
sbb
jp
xor
pop
dec
cwtl
dec
push
add
stc
lcall
add
push
jecxz
cwtl
pop
add
inc
mov
pushf
inc
call
mov
or
add
test
adcb
mov
sub
or
movsb
adc
xor
sbb
xor
popa
ss
push
mov
test
insl
pop
fcoms
loopne
sbb
push
mov
push
scas
sarl
inc
mov
je
jne
ficoms
mov
shll
out
mov
test
popf
addl
jne
sub
push
jl
mov
mov
add
dec
or
jo
push
je
adcl
pusha
das
rorb
or
shll
roll
mov
jmp
sbb
pop
je
jl
inc
hlt
push
sbb
xor
lock
push
das
aaa
fcomip
dec
push
sbb
mov
ja
push
push
push
add
insb
shrb
adc
pop
xor
xor
mov
sarl
push
scas
roll
inc
xor
pop
push
pop
jo
xchg
sbbl
pop
je
lods
in
dec
and
and
cmp
add
push
jl
sbb
rcll
push
xchg
add
push
repnz
ret
sbb
addb
and
in
mov
mov
mov
xchg
cltd
and
in
and
in
xor
sbb
push
pop
add
and
popa
sbb
nop
and
stos
in
push
and
call
adc
movl
adcl
sbb
xor
or
and
inc
or
inc
inc
add
dec
mov
xchg
xor
cmpb
or
jns
sub
sahf
cmp
inc
pusha
cmp
jb
stos
xorb
cmpsl
and
cwtl
pop
and
mov
and
daa
pop
inc
dec
xchg
insl
mov
sub
push
push
sub
cmp
sbb
and
lods
or
or
outsl
in
rcll
cmp
cmp
ror
test
test
mov
xor
mov
xor
pop
push
mov
adc
jmp
ss
cmp
sub
and
aad
and
add
dec
push
test
xor
jns
subl
dec
dec
xor
and
sub
push
pop
orb
in
or
dec
bnd
push
push
nop
xchg
add
movsb
sbb
sub
push
sub
mov
xchg
sub
adc
in
lods
cmpl
pop
shrl
shll
xor
pusha
test
xor
insl
adc
push
nop
push
mov
lcall
call
or
add
cld
and
jge
mov
arpl
lods
jbe
in
cmpsl
lods
sbb
push
ret
mov
pop
push
jmp
lcall
adc
inc
push
adc
clc
adc
mov
inc
jno
testl
pushf
lahf
inc
rolb
mov
adc
es
mov
sbb
add
xchg
add
mov
pop
xor
or
xor
adc
jg
lods
xchg
orb
mov
ret
pop
les
add
dec
pop
pushf
jl
sahf
jl
loop
sub
push
decb
sbb
pushl
inc
mov
mov
add
orb
sub
sub
lods
add
sub
jnp
and
fildll
sbb
adc
popa
jmp
aas
cmp
sub
cmp
mov
fsubl
sub
inc
insb
mov
xlat
inc
sub
loop
or
das
or
add
mov
xorb
sbb
add
adc
mov
xchg
sbb
and
pop
mov
cmc
dec
pop
shrb
inc
xchg
inc
leave
or
add
xchg
ja
fiaddl
insl
or
inc
push
fists
pop
and
or
sub
mov
inc
add
in
add
xor
pop
iret
test
in
jne
push
add
leave
push
inc
lret
dec
dec
mov
clc
push
sub
mov
popf
adc
push
inc
stos
popf
pop
sub
cmp
call
jl
and
outsb
mov
pop
pop
nop
sub
test
mov
and
mov
dec
std
pop
mov
adc
xor
sub
or
adc
or
inc
xorl
mov
sbb
aad
and
shll
push
and
and
push
mov
push
sbb
xchg
inc
insl
push
or
cmpsl
sbb
adc
inc
push
cmp
adc
add
push
and
and
add
push
cmp
lcall
popa
aad
jmp
sub
call
rcrb
scas
xchg
mov
mov
cs
sbb
push
xchg
and
out
dec
cmp
add
popa
insl
loop
ja
adc
sbb
enter
sbb
add
push
sbb
pop
lret
push
push
pop
dec
pop
inc
xchg
jmp
xchg
rolb
adc
push
xor
sbb
rcl
push
and
mov
cwtl
sub
cmp
cmc
pop
push
cmp
mov
and
xor
pop
cmp
cmp
and
and
test
add
add
in
sbb
cmp
sub
int3
cmpb
insb
cs
pushf
pop
bound
inc
cs
push
or
jns
dec
and
jge
pushf
jo
popa
je
daa
test
push
repnz
es
and
mov
repnz
or
inc
jo
stos
push
cmc
sbb
sbb
pop
adcb
sub
fs
bound
xor
adc
stos
inc
in
sub
dec
push
test
test
mov
or
xor
je
sbb
out
je
fistpll
insl
call
cmp
add
fwait
cli
jbe
mov
push
dec
test
test
pop
pop
jne
out
insb
add
cmp
add
hlt
adc
sbb
and
fcompl
mov
icebp
push
das
add
gs
xorl
push
add
dec
push
dec
push
pop
push
add
sbb
movl
mov
mov
adc
shlb
dec
jl
and
das
inc
and
addb
xchg
popa
cltd
mov
mov
mov
faddl
pop
push
xor
roll
outsb
lods
jmp
push
aam
mov
push
cmp
pushf
not
movsl
cmp
xor
je
aam
test
and
in
inc
std
imul
test
dec
daa
adc
or
sti
add
mov
insl
aad
fstl
xchg
fisttpl
push
xchg
mov
push
and
gs
xor
aam
pop
pop
adc
xorl
cli
push
xlat
sub
cmp
je
nop
out
in
mov
dec
and
xor
nop
loopne
or
pop
add
pop
nop
loopne
incl
cmp
xor
push
sub
push
and
add
js
test
adc
or
jns
fwait
stc
iret
push
loopne
inc
add
push
mov
sarl
or
xchg
out
mov
imul
mov
mov
mov
xor
dec
sbb
adc
test
xchg
lea
pushf
into
push
push
fs
sub
pop
scas
fidivl
jmp
insl
test
xchg
cmp
or
je
cmp
or
loope
and
inc
popf
dec
jo
or
adc
loopne
cmpb
mov
jl
adc
push
push
xor
mov
in
jne,pn
adc
sub
orl
jmp
mov
mov
sub
push
out
add
mov
enter
in
push
push
call
rorb
xchg
int3
call
sbb
fdiv
arpl
sbb
sub
sbb
imul
xchg
sbb
inc
scas
shrb
add
sbb
mov
iret
pop
add
sub
sbb
xchg
or
and
cmp
inc
shlb
dec
andb
iret
add
xor
and
and
aam
add
dec
daa
fsubrl
and
add
enter
cmpb
in
mov
pop
and
xchg
or
pop
subl
sub
pop
xor
xor
pop
es
mov
cmc
mov
dec
ds
mov
aam
cwtl
shlb
fs
fsubrs
dec
or
jae
call
nop
mov
es
xor
dec
lods
sbb
fists
repnz
mov
and
xor
in
xchg
decb
pusha
cmpsb
adc
lock
add
cwtl
mov
jl
add
into
popf
push
or
fisttpll
or
push
add
xor
jb
jmp
nop
stos
movsb
push
sbb
pop
mov
and
jb
mov
push
adc
or
dec
notb
adc
sub
add
scas
or
cmp
jmp
lret
inc
test
repnz
jg
push
push
hlt
add
pop
repz
outsl
cmp
push
add
or
movsl
xor
lods
sbb
popf
inc
stos
imul
ret
das
cmp
rcl
add
lods
or
dec
or
push
jnp
xor
leave
enter
pusha
push
aas
int3
add
cmpsb
add
imul
clc
cmp
out
nop
out
inc
cld
push
jns
xchg
inc
fcomps
bound
in
push
hlt
or
inc
cmp
push
sbb
adc
jno
movsb
loop
mov
adc
add
adc
mov
mov
pop
cmp
push
push
push
daa
pop
mov
sub
cli
jo
mov
push
js
xlat
nop
data16
mov
inc
enter
fadds
adc
iret
add
movsb
inc
dec
dec
cmpb
push
or
adc
mov
mov
and
xor
xor
xor
or
andb
scas
cli
jne
pop
mov
xchg
and
xor
mov
push
push
mov
add
lea
ss
adc
inc
loopne
xor
dec
dec
push
sbb
or
leave
sbb
call
sar
push
icebp
lcall
push
xchg
xchg
jnp
push
and
dec
mov
or
test
imul
stos
rcrb
sub
insb
daa
sbb
add
jl
jns
rolb
sub
loop
xor
sbb
fwait
jo
addb
insb
kaddw
and
enter
cmp
jns
or
lret
xor
sub
ss
mov
or
xchg
ret
cmp
insb
inc
push
and
xor
loopne
jb
call
rcrl
cmp
andl
push
aam
add
notl
push
imul
imul
sub
xor
adc
out
cld
cmc
nop
mov
push
push
sbb
cltd
sbb
sub
push
xchg
and
andl
or
adcb
add
adcl
sbb
mov
xor
movsb
push
push
dec
mov
xchg
addb
pusha
add
sbb
mov
jecxz
push
sub
ss
stos
lock
xor
inc
insb
jle
pop
push
xor
dec
inc
inc
sahf
mov
dec
lcall
cmpsb
in
and
and
mov
mov
push
call
dec
loope
rorb
dec
cmp
lret
inc
sub
scas
or
add
push
dec
outsb
dec
and
fldl
sub
lcall
lds
xchg
pop
jno
inc
aaa
and
sub
mov
fldl
or
mov
push
fs
sub
cld
dec
adcl
sbb
addb
sbb
sbb
and
and
sub
push
adc
push
test
push
push
push
nop
sub
xchg
subl
dec
or
cmp
leave
pop
sbb
xor
inc
and
mov
adc
insb
rcll
push
mov
mov
push
cmc
mov
fsub
sub
mov
add
adc
in
rcrb
xchg
rol
cmp
pop
sarl
add
sbb
ret
int3
and
cltd
cmp
add
mov
sti
pop
jb
andl
add
mov
aaa
add
add
xor
push
xchg
orb
xchg
out
xor
push
push
fdivs
and
xchg
test
or
jmp
das
leave
mov
xor
and
dec
adc
cld
mov
mov
inc
pop
or
fistpll
fcmovne
inc
pop
sub
scas
js
push
inc
push
mov
and
sbb
gs
add
mov
enter
enter
mov
ja
add
outsb
lea
mov
jecxz
sub
popa
orl
rorb
cltd
xchg
mov
xchg
push
jp
xchg
cmp
aam
xchg
pop
push
jae
lcall
pop
sbb
stos
push
sti
js
mov
inc
test
jo
xor
lcall
push
gs
push
lahf
adc
nop
and
dec
shrb
push
das
movsl
xor
or
jl
adc
adc
jns
pop
jno
int3
scas
fiaddl
lcall
sub
add
scas
add
sub
xchg
jo
je
movsb
leave
inc
aam
inc
push
sub
ror
mov
add
and
in
out
clc
in
pop
dec
sbb
or
insl
push
arpl
leave
sub
sbb
xchg
and
dec
adcl
cmp
lods
sbb
rcrl
push
cmp
jae
in
xor
mov
cmp
lcall
movsb
sbb
mov
mov
cmp
fdivrp
out
fldt
pop
inc
jne
mov
sbb
fs
xchg
pop
xchg
cmp
mov
xchg
clc
cmpsb
cmpsb
jmp
pop
pusha
out
daa
or
add
inc
fildl
pop
jge
sti
addr16
mov
sbb
or
sahf
fldt
rcr
sbb
add
cmp
iret
nop
push
xor
inc
rorb
sbb
fnstcw
push
adc
jmp
push
adc
jg
cmp
mov
jo
push
aam
ficomps
inc
inc
cli
pop
xor
dec
pop
adc
adc
pop
or
or
inc
std
js
std
cmp
xchg
adc
arpl
arpl
loope
gs
push
push
les
loopne
jmp
inc
je
and
push
mov
xor
std
xchg
push
pop
pop
loope
push
bound
jl
roll
sub
or
dec
mov
mov
shrb
test
and
inc
xchg
sbb
mov
push
hlt
lock
lock
mov
fucom
adc
mov
cmp
shll
imul
icebp
and
aas
lods
movsb
dec
iret
inc
add
and
and
mull
add
nop
out
adc
or
dec
cmpsl
adc
lds
dec
cld
push
pop
inc
dec
mov
popa
leave
pop
sbb
fiaddl
adc
jg
xor
je
test
imul
cmpsl
rorl
xor
inc
dec
or
or
nop
outsb
sbbb
aaa
pop
shrl
sub
pop
ret
sub
dec
push
jns
adcb
sbb
and
imul
test
xor
sub
daa
test
fldl
test
pusha
dec
jge
ret
in
or
xor
xor
mov
stos
nop
mov
adc
mov
sub
push
mov
nop
ja
or
adc
or
inc
adc
leave
and
inc
fwait
mov
scas
cltd
imul
jl
ret
in
pop
test
aam
sti
dec
adc
movb
pushf
nop
dec
inc
sub
and
cmp
in
push
mov
jl
lret
imul
int
dec
xchg
sbb
fildll
push
pop
and
and
adcb
push
adc
and
rorl
ret
dec
adc
test
jo
enter
sbb
dec
dec
cs
or
or
xchg
fwait
and
add
loop
rcl
cmp
mov
cmp
jae
mov
or
inc
xor
sbb
sbb
pusha
add
loopne
jl
and
or
inc
pop
decl
xor
push
aad
out
and
rolb
and
insb
ja
add
jbe
mov
or
ret
mov
sarb
mov
jg
lret
push
inc
add
cmp
aam
lret
add
add
inc
lea
push
fidivrl
mov
outsb
insl
push
pop
dec
sti
add
jl
jbe
sub
ja
push
sub
dec
mov
add
pop
mov
lock
subb
mov
sbb
xor
add
stos
pop
lret
insb
out
pop
dec
fcompl
push
daa
addr16
push
add
lock
fdivs
or
pusha
pop
adc
or
xlat
lock
xchg
pop
lods
popa
sbb
push
mov
xor
das
pop
jnp
add
xchg
jae
cmp
adc
or
imul
movsb
or
inc
add
mov
add
push
pop
pop
push
pusha
flds
outsl
pop
repz
jo
add
insb
fstps
sub
cmpsb
insl
testb
sbb
pop
int3
and
adc
adc
insb
lods
pop
or
sbb
and
or
sub
call
pusha
add
in
or
lidtl
daa
xchg
push
inc
sbb
and
mov
or
inc
adc
add
mov
bound
out
lret
cmp
xor
sbb
rol
adc
and
aam
add
xchg
add
cmp
cmp
push
xlat
push
in
into
lods
cmp
xlat
sub
push
mov
insb
mov
gs
jns
or
rolb
cmp
inc
rclb
sub
out
add
mov
pop
cs
shlb
jne
cmp
inc
mov
push
clc
push
lea
xchg
frstor
jp
lods
nop
pusha
mov
push
lds
loope
sub
test
icebp
mov
sbb
inc
lods
cld
adc
mov
inc
lret
mov
jbe
les
mov
lret
hlt
sub
cwtl
add
dec
push
lea
loopne
cmp
xchg
cltd
dec
outsl
hlt
inc
mov
mov
insl
add
nop
imul
mov
aam
mov
mov
cli
in
sbb
fisttpl
push
or
or
mov
jle
int
enter
enter
mov
nop
les
es
push
xor
mov
mov
or
cmp
test
lds
test
cmp
add
aad
cmp
pop
cwtl
cmp
leave
dec
test
mov
add
outsl
dec
jecxz
mov
gs
fdivl
orl
fdivrs
mov
mov
rolb
sub
test
sbb
lcall
iret
aad
pusha
push
into
xchg
scas
orb
out
js
jp
add
stos
xorb
inc
out
push
jns
mov
xlat
push
push
mov
mov
add
cwtl
or
mov
js
lods
add
push
arpl
add
inc
inc
sarb
loope
add
test
jne
pop
jp
arpl
lret
ss
or
cmp
loopne
pop
hlt
mov
sar
ljmp
and
or
or
je
push
lret
xor
arpl
mov
loopne
mov
cmc
rorl
push
add
rcr
sarb
push
sbb
cmp
cli
adc
in
push
mov
jnp
arpl
xor
inc
fdivs
sbb
jp
shlb
sete
or
mov
add
stos
xchg
enter
xchg
sub
jl
aam
dec
jae
sbb
les
jl
es
ljmp
pavgb
xchg
sub
nop
adc
add
or
sub
mov
adc
pop
enter
fcompl
inc
test
nop
push
push
sub
scas
inc
jecxz
cmpsl
sbb
mov
pop
pop
xchg
outsl
mov
mov
lcall
and
rolb
lods
sbb
add
adc
jo
pop
jmp
orl
cmp
push
ds
inc
faddl
push
dec
add
adc
adc
pop
negl
mov
adc
push
fisttpll
les
mov
jg
jne
and
mov
xchg
adc
push
inc
cmp
daa
movsl
clc
mov
lret
aaa
fdivl
nop
std
sbb
cs
inc
int3
push
movsb
call
outsl
push
sbb
jns
push
mov
test
out
std
insl
pop
andl
pop
pop
or
aam
inc
scas
or
sbb
dec
es
jl
aam
sbb
pop
and
fs
inc
les
inc
push
sbb
sbb
add
inc
cmpl
test
xor
and
mov
and
dec
push
aaa
mov
loope
push
push
cmpsb
sbb
sbb
mov
sub
pop
clc
push
movsb
mov
and
adc
and
xor
mov
in
fsubl
adc
int3
mov
or
xchg
add
push
jo
add
scas
mov
mov
xor
loop
pop
adc
jge
test
push
ds
xchg
lea
mov
es
add
or
loopne
aaa
cmp
outsl
lahf
adc
sahf
add
in
pop
xor
dec
sar
and
mov
fsts
xchg
js
xor
lds
inc
adc
mov
adc
mov
nop
mov
aam
pop
xchg
push
mov
xchg
jbe
inc
fcoms
bnd
and
push
outsl
shrl
je
mov
test
xor
dec
sub
sub
out
int
sub
bound
mov
out
imul
mov
pop
lea
xchg
jl
add
jae
test
jge
jge
dec
ljmp
ret
loopne
push
cmp
mov
or
push
inc
add
mov
push
andl
in
xchg
fcomp
aam
inc
jge
or
cmp
je
xchg
xchg
mov
addl
xchg
add
or
mov
lahf
add
mov
je
push
sarb
pushf
idivb
das
adc
hlt
pop
pop
cltd
test
push
pop
mov
mov
dec
add
adc
mov
mov
int
hlt
add
push
sbb
aam
jmp
faddl
lret
add
lret
sahf
sbb
shl
or
and
jp
push
or
cmp
je
and
pop
inc
test
xor
cmp
jne
xor
jnp
ret
arpl
mov
pop
adc
mov
rcll
sub
mov
mov
push
jecxz
out
test
inc
xor
dec
inc
jae
sub
stos
ret
pop
jo
decb
adc
stos
imul
push
jb
roll
movsb
or
jmp
mov
repz
push
inc
sbb
or
mov
test
subb
cmpb
movsb
fidivl
inc
adc
xchg
inc
adc
movl
hlt
xchg
ljmp
sub
inc
cwtl
or
push
or
push
jmp
pop
mov
add
xor
ret
mov
sbb
inc
inc
push
push
pop
sbb
and
jae
dec
sub
ljmp
add
push
jmp
dec
mov
sub
sbb
pop
add
adc
add
fadds
test
jne
jae
cwtl
sub
pop
mov
pusha
adc
loope
data16
adc
add
orl
push
jl
pop
add
call
cmovns
jg
add
stc
icebp
fcoms
stc
ret
xchg
insb
pushf
and
dec
xor
xchg
cld
pop
jmp
out
sub
sub
ja
cmpb
out
inc
pop
lds
jne
cmp
jne
int3
adc
inc
push
sbb
pop
loope
xor
cmpb
push
cmp
cld
adc
jg
push
push
iret
jne
push
ja
add
rorb
xchg
daa
or
mov
xchg
pop
out
cld
xorb
or
es
popf
adc
push
mov
inc
push
incb
push
popa
push
outsb
les
xor
cmp
cmp
jle
pop
push
and
pop
cs
mov
dec
jne
mov
into
jo
adc
mov
js
inc
stos
sub
sbb
pushf
mulb
inc
sar
test
fcmovbe
dec
daa
mov
sub
adc
mov
dec
adc
inc
mov
sub
lods
cmp
and
xor
dec
add
jp
sub
pop
adc
push
mov
push
inc
or
movsb
lret
add
ss
mov
mov
sbbl
xchg
jle
jnp
cli
or
mov
push
nop
data16
ret
push
and
sbb
cmpl
fwait
into
insl
sbb
cli
push
sub
push
push
push
sub
adc
inc
adc
push
and
add
movb
cmp
jae
sbb
and
jo
repz
mov
sub
sub
shr
scas
mov
cmp
sub
xchg
pop
fsubr
inc
cmp
push
stos
sub
inc
shrb
out
push
jl
add
jmp
xor
inc
dec
add
inc
jmp
dec
dec
imul
pop
xor
mov
sbb
inc
dec
cmp
aaa
and
or
fldt
fistps
pop
add
mov
daa
inc
sub
cmp
add
mov
push
pop
les
ret
xchg
adc
adc
stos
jb
cmp
inc
loopne
push
jns
add
adc
cmp
div
imul
inc
jne
jo
and
movsb
mov
jnp
sbb
fs
and
rol
dec
in
mov
mov
pop
iret
out
add
aam
inc
shrb
jns
aad
xlat
mov
test
and
cmp
jne
insb
rcrb
sub
mov
cmp
push
cmpsb
add
push
call
mov
mov
pop
xor
cmp
mov
adc
or
cwtl
nopl
push
xor
jg
mov
loopne
inc
pushf
mov
xchg
and
in
pop
xor
subl
or
test
movsl
cmpl
inc
jecxz
inc
inc
inc
dec
aam
mov
dec
outsl
js
cmp
push
xchg
mov
xor
push
hlt
lea
or
mov
dec
sti
dec
aad
test
adcb
add
pop
mov
icebp
push
add
add
dec
test
pop
push
xor
mov
cs
rcrb
ret
and
stos
dec
push
add
imul
sub
lea
jecxz
jo
shl
mull
mov
jno
and
add
or
add
cmp
adc
adc
lock
adc
pop
xor
add
out
dec
mov
xchg
cmpsl
inc
add
sub
pop
fdivs
fiaddl
add
inc
loope
jg
mov
jmp
push
add
and
hlt
loopne
mov
jecxz
lods
popf
dec
xchg
mov
add
adc
bound
fs
xchg
into
lret
xor
mov
popa
or
aas
or
jne
inc
inc
xor
arpl
pop
int
mov
or
das
adc
xchg
pop
xor
pop
adcb
cmp
pop
inc
pop
mov
mov
push
leave
or
stos
and
add
and
jl
into
jle
jl
aas
fnstcw
hlt
aad
lret
and
add
mov
sbb
arpl
and
sub
xor
test
test
test
pop
mov
mov
add
loope
in
mov
out
push
lret
outsl
icebp
push
or
insl
sbb
es
add
sbb
sub
mov
testl
adc
pusha
shrl
loope
cmp
sarb
and
loopne
loope
test
or
adc
pop
mov
and
adc
cmovae
add
add
ds
mov
push
or
xorb
jl
ds
or
jb
xchg
dec
dec
sub
push
pop
clc
cmc
pop
or
inc
sub
cltd
mov
or
mov
out
cltd
dec
ss
adc
mov
ja
shrb
add
sbb
ss
dec
rcrl
sub
add
jb
sub
push
lahf
out
or
mov
add
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
in
adc
ret
lret
lods
jle
jmp
and
ja
push
push
push
stos
insl
mov
and
pop
les
add
scas
shll
or
xor
and
jl
jb
ljmp
cmp
in
add
das
iret
inc
cltd
dec
push
push
push
cmovbe
cmp
mov
push
lahf
jmp
sub
pusha
xor
mov
jge
popa
test
jle
push
dec
sahf
aas
sbb
pop
sub
pop
xchg
cmp
and
cmp
out
dec
inc
pop
test
enter
movsb
adc
adcb
sub
movsl
fdivrl
push
dec
insb
cmp
mov
pop
mov
mov
jns
sbb
and
movsl
push
pop
mov
pop
aas
loope
push
push
cmp
xor
mov
sub
mov
stos
add
dec
stc
inc
pop
push
popa
add
cmp
andb
push
mov
mov
add
cmp
dec
push
inc
sub
test
sbb
cmpsb
jne
inc
sbb
cmp
and
xchg
push
sub
mov
and
push
push
addl
ja
rcll
mov
cmp
mov
loop
mov
addb
jmp
add
and
push
ss
cs
es
and
roll
aam
mov
push
fwait
pop
xor
jae
nop
add
xchg
inc
test
pop
push
jmp
sbb
imul
cmpb
and
add
arpl
inc
sub
cmp
sbb
cmp
dec
xor
adc
rolb
mov
cmp
js
iret
aad
aaa
add
sub
mov
jno
push
pop
es
sbb
fistpll
xchg
mov
inc
and
data16
stos
or
xor
xor
cs
adc
imul
sahf
les
push
fs
dec
nop
test
and
pop
enter
xor
inc
test
xchg
clc
push
or
dec
sub
cli
scas
mov
mov
das
add
bound
jo
mov
lock
xchg
cmp
ja
mov
or
jno
sub
inc
sbb
fstps
out
das
inc
orb
mov
push
xor
push
inc
sti
cmp
xchg
cmp
push
dec
inc
repz
andb
or
xchg
and
mov
rcrb
inc
fldt
repz
movsb
sbb
incb
inc
adc
mov
sbb
mov
fidivl
lcall
fistps
add
sbb
add
push
lret
push
or
pop
imul
mov
pop
or
push
pushf
and
test
lret
dec
cs
add
jnp
pop
xchg
or
stos
sub
dec
mov
enter
dec
sub
sbb
aaa
test
or
cmp
enter
xor
sub
xchg
adc
xchg
leave
sub
jmp
sbb
and
inc
inc
fs
fwait
gs
dec
pop
fisttpl
jo
nop
sbbl
cmp
sub
jge
je
loopne
cltd
mov
test
sarl
and
inc
push
lret
sbb
dec
jge
fisubl
mov
cmc
in
aaa
add
test
mov
push
adc
jp
add
pop
pop
and
cmpb
or
push
dec
ret
add
sbb
pop
movsb
or
lahf
jg
sbb
or
push
add
sbb
cli
add
dec
aas
cmp
push
imul
test
ret
push
cmpsb
pop
push
pop
les
decl
pop
jne
jne
dec
pop
sbb
jmp
jmp
nop
adc
repz
cmp
pop
jg
pop
mov
push
das
shrb
xchg
mov
aas
shl
mov
dec
aaa
pop
adc
xor
pusha
movsl
sbb
xorl
dec
inc
sbb
dec
jb
insb
popa
mov
add
push
cmpb
pop
mov
add
sbb
push
es
add
add
inc
ljmp
push
movsl
test
setp
lods
rolb
push
jl
mov
loop
js
pop
mov
add
mov
fldt
inc
xchg
sub
pop
inc
and
push
mov
call
and
dec
mov
scas
fs
and
leave
mov
sub
sbb
inc
xor
xchg
js
test
and
movsb
push
push
adcb
and
and
js
test
xchg
add
dec
lcall
xchg
std
lret
rclb
loope
or
or
movsb
xor
or
mov
or
test
pop
lds
push
dec
jae
xor
xchg
sbb
sub
in
lret
xchg
sub
andl
cmp
pop
mov
pop
pop
or
sti
mov
inc
cs
pop
push
inc
inc
push
sbb
or
add
sub
std
inc
nop
stos
inc
sahf
inc
fcoml
sub
mov
xchg
adc
leave
inc
leave
jno
dec
push
dec
stos
and
in
sub
loopne
push
adc
lret
sbb
adc
jmp
and
jb
fwait
add
push
adc
and
addl
repnz
and
icebp
shrb
mov
je
push
push
and
in
or
shll
pop
bound
jge
push
pop
mov
or
loopne
sahf
or
enter
push
push
dec
iret
enter
push
inc
sub
shr
fistps
sub
imul
cmpsb
popf
add
xor
addb
cs
push
push
aas
fadds
es
add
ss
test
subb
and
or
int3
cmp
dec
shrb
pop
mov
int3
adc
cwtl
inc
out
add
push
add
jecxz
nop
push
push
pop
xor
push
adc
aam
mov
or
test
push
pop
insl
xor
pop
test
and
fsubrs
outsl
jg
ficoml
and
push
sub
and
lock
add
mov
out
sbb
in
mov
jl
inc
lock
cs
jo
popf
pop
fcoml
mov
test
aas
addl
cmpsl
push
callw
lret
pop
sub
push
mov
imul
das
nop
pop
or
sbb
and
add
and
push
enter
iret
sub
jp
push
push
xor
push
mov
daa
loop
ja
pop
dec
sub
jl
loopne
xchg
and
aaa
fdivrs
add
push
inc
inc
push
stc
xor
inc
pusha
push
dec
or
adc
or
xor
in
sbb
cs
sbb
movsb
es
cli
adc
push
rsqrtps
jl
and
push
pop
pop
adc
push
adc
add
jle
jmp
xor
add
aas
nop
sub
jbe
aam
test
decl
push
jecxz
push
mov
add
punpckhwd
and
pop
sbb
push
outsb
mull
dec
push
test
cmpsl
sbb
and
push
or
jg
mov
mov
push
orl
push
cmp
mov
add
dec
pop
shll
fimuls
add
mov
repnz
filds
lahf
addr16
lret
jge
or
cmp
xchg
sbb
push
pop
sub
or
cmc
jl
lea
in
andl
mov
and
sub
sbb
inc
sbb
insl
sub
dec
cmpb
ljmp
or
dec
push
mov
mov
push
js
cmp
push
push
hlt
mov
dec
sub
testb
shl
jo
pop
sbb
std
aam
lea
pop
fcompl
add
nop
adc
popf
push
pop
add
arpl
mov
sbb
dec
mov
push
fstl
lret
call
add
lahf
mov
xor
jmp
movsbl
sbb
ret
jl
sbb
sub
out
arpl
dec
sbb
xor
sub
jo
sbb
sub
dec
fnstsw
pop
mov
dec
sbb
push
out
test
rclb
fimull
cmpsb
rcrb
pop
or
cs
dec
cmp
test
mov
xor
mov
xor
int3
ss
push
and
cld
stos
adc
pushf
jmp
js
inc
mov
jl
das
or
xchg
in
add
sub
pop
or
and
and
jl
xor
repnz
cmp
pushf
push
inc
call
mov
pop
adc
incl
fiaddl
sahf
into
int
cltd
add
insb
cmp
or
sub
mov
cmp
stos
out
mov
pop
xchg
negl
mov
cmp
or
fistps
and
push
mov
push
and
shll
enter
mov
lea
or
adc
mov
xchg
sahf
cwtl
jne
jp
stos
xchg
sbb
or
and
dec
add
movb
les
jo
inc
enter
or
jmp
icebp
and
cmp
sub
fs
shlb
add
movsl
push
enter
loop
jb
jb
xchg
xor
int3
mov
in
pop
loope
adc
xor
mov
rcll
insl
jecxz
mov
mov
aam
repnz
xor
push
or
bound
bound
add
mov
mov
and
xchg
mov
bound
jb
push
fs
mov
dec
invd
adc
clc
inc
dec
idivl
fildl
enter
mov
outsl
push
fdivs
fldcw
movzwl
add
xor
insb
fildll
stos
pop
add
jge
mov
sub
adc
inc
inc
cmp
sbb
adc
test
ljmp
incb
mov
shlb
cmp
jne
adc
jb
xlat
inc
loopne
jl
or
push
and
rol
loop
push
dec
or
js
inc
imull
cs
sub
push
ss
add
adc
ret
push
or
xor
aaa
sub
fcoml
mov
imul
ret
decb
hlt
mov
push
in
push
fcompl
cmp
popa
sub
cmp
jbe
or
out
iret
xchg
jmp
ficoms
jmp
fsts
test
add
stos
or
mov
xor
add
push
xchg
xlat
inc
mov
pop
mov
pop
out
fildl
mov
inc
adc
add
cmp
les
rol
lret
iret
idivb
xor
sub
fmuls
push
stc
push
sbb
sbb
mov
pop
adc
fdecstp
xor
ljmp
pop
aam
rolb
pop
lahf
movl
and
adc
cmpl
sbb
xchg
mov
cmp
jne
pop
cmp
outsb
xor
or
dec
or
lods
test
sbb
out
or
or
pop
cmp
adc
jmp
add
add
jecxz
push
test
sub
fs
insb
rcr
add
push
push
icebp
jge
mov
jmp
es
scas
les
cmc
lret
jmp
mov
sarb
xchg
adc
mov
cwtl
stos
add
mov
insl
es
adc
iret
nop
dec
push
test
enter
addl
or
sub
daa
push
adc
data16
push
push
and
pop
push
pop
or
push
fidivs
shrl
cmp
mov
xchg
cmp
mov
push
call
aaa
and
push
mov
and
ds
add
in
test
dec
mov
and
push
xchg
xchg
fdivrl
push
push
lds
daa
push
mov
adc
xor
xor
leave
cmp
pop
ret
push
lea
punpckhdq
pop
js
lock
push
stos
ljmp
jmp
outsl
dec
sub
or
stos
push
sub
loopne
out
call
or
inc
sbb
sub
je
push
push
cld
mov
mov
icebp
add
adc
fdivl
push
add
push
iret
nop
adc
jae
out
cld
cmp
jg
fs
or
adc
pshufw
jmp
jmp
dec
add
pop
fbstp
or
jle
cmp
fcomps
or
cwtl
add
pop
popf
mov
outsb
mov
add
push
rorl
mov
dec
jge
les
or
inc
cwtl
jne
leave
add
add
inc
sub
cltd
movq
xor
mov
mov
daa
add
dec
dec
cmp
or
jl
cmpl
mov
sbb
inc
sbb
test
fcomip
ds
add
imul
or
mov
add
leave
ret
adc
mov
and
shll
call
mov
mov
insb
xchg
cmp
pop
cli
push
cmpl
push
loopne
sbb
inc
push
inc
push
lock
incl
mov
dec
sbb
ret
out
and
jo
clc
pusha
mov
dec
inc
inc
or
dec
int3
test
mov
gs
clc
clc
das
mov
push
loopne
lea
push
push
adc
sti
shrl
daa
mov
ds
push
xor
jbe
sub
sbb
rclb
out
adc
sub
mov
sbb
push
jmp
pop
and
push
jb
push
push
jecxz
sbb
adc
or
jl
inc
pop
js
clc
notl
mov
pusha
or
and
lock
jo
mov
add
mov
push
mov
and
push
into
sbb
mov
in
mov
jnp
pop
incl
je
decl
push
sbb
xlat
sub
popa
mov
push
push
add
jle
pop
fstl
fcom
pop
sub
dec
daa
dec
stos
pop
adc
dec
or
in
inc
jmp
pop
push
adc
jne
adcb
mov
inc
xor
or
mov
mov
cmp
icebp
or
inc
or
push
or
and
sahf
inc
jmp
mov
in
andl
mov
or
rcrb
aam
movsb
lcall
pop
jo
pusha
sbb
inc
xor
and
jge
sbbl
testb
cmp
or
inc
testb
sbb
pop
in
push
pop
in
outsl
jne
add
and
push
ljmp
xor
and
adc
out
js
push
mov
stc
add
fcmove
cmp
mov
scas
push
cmp
push
out
mov
add
push
push
icebp
cli
rcrb
dec
aam
mov
mov
xchg
fldl
mov
add
inc
inc
mov
jl
subl
cmp
mov
cmp
pop
and
sub
jo
xchg
adc
adcb
and
testb
mov
mov
leave
std
sbb
pop
pop
add
or
or
rolb
adc
push
xchg
or
repz
inc
sub
hlt
adc
ret
inc
or
add
cmp
sbb
xchg
fldenv
mov
mov
mov
or
or
lods
iret
cmp
mov
dec
movb
mov
cwtl
nop
cmpsb
pushf
adc
mov
daa
ret
out
add
shlb
adc
and
cwtl
fsubrs
ss
pop
push
fiadds
push
cmp
jmp
lods
roll
mov
xchg
push
and
push
mov
ja
push
adc
sub
sar
pop
pop
ret
rcr
or
fxch
fst
push
mov
int3
and
dec
jmp
cmp
inc
stos
roll
fdivrs
cmp
cmp
je
push
dec
into
jae
clc
call
das
push
lret
inc
bound
pop
test
sub
mull
popf
loop
lcall
adc
aam
sbb
add
pop
jbe
mov
sub
idivb
rolb
scas
add
shr
setl
pop
pop
dec
test
inc
xor
lds
xchg
aad
in
cld
dec
fwait
pop
add
push
loopne
mov
inc
xlat
movzwl
mov
imul
mov
je
inc
push
mov
loop
pop
mul
xor
push
call
jle
add
xchg
shlb
push
pop
shrd
pop
int3
sahf
jmp
push
pop
hlt
push
push
inc
inc
jge
testb
adc
stos
dec
jns
push
jmp
adc
popa
xor
sub
push
sbb
and
and
pushf
mov
popa
cltd
push
inc
xchg
xchg
sbb
scas
pop
sbb
mov
les
push
mov
or
push
add
cmpsb
jmp
sbb
loopne
push
xor
mov
jl
test
ds
pop
pop
scas
outsl
sahf
ret
xor
jbe
test
pop
push
dec
sbb
push
sbb
pop
adc
daa
bound
shl
xor
push
adc
inc
nop
jns
sub
scas
inc
or
xor
sbb
cvtdq2ps
sbb
lea
aaa
dec
dec
mov
push
mov
inc
adc
push
sbb
add
pop
lcall
sbb
int
push
dec
sub
das
cmp
imul
cmp
cwtl
jno
dec
xchg
mov
xor
loopne
xchg
jnp
and
enter
inc
push
mov
leave
mov
mov
mov
loopne
rcrb
cmp
or
cmpsb
jge
adc
loop
or
ret
mov
and
fsubrp
scas
pusha
pushf
movsb
repnz
pop
lret
lock
lahf
in
xchg
arpl
or
loop
ret
jl
pop
lock
call
pop
cmp
sub
loopne
daa
setnp
repz
mov
and
push
jmp
cmpsb
and
add
push
cmp
roll
popf
loopne
adc
push
lock
sub
sub
ds
lods
xor
jl
and
imul
sub
pop
pop
in
enter
call
add
adc
aad
lea
xor
aam
lds
int3
xchg
rolb
xchg
inc
addr16
shl
jecxz
fs
and
or
and
push
movsb
lock
jmp
in
pop
mov
adc
push
mov
xor
jg
cli
jo
test
daa
push
and
adc
adc
adc
scas
shlb
jne
xchg
mov
inc
mov
std
mov
cmp
fadd
jl
adc
aam
push
dec
lock
jne
push
enter
dec
xor
insl
repz
cs
add
push
jae
arpl
sahf
out
dec
push
je
inc
lret
repz
cmp
or
vpunpcklqdq
or
cmp
push
push
or
mov
add
test
test
cmp
mov
or
aam
cli
mov
je
mov
mov
rcrb
mov
xchg
int3
cmp
je
push
fiadds
out
push
or
fdivrl
outsl
push
push
movups
and
push
aam
enter
movb
fiadds
sbb
jmp
xchg
or
lret
call
pushf
idivb
push
push
pop
sahf
xchg
mov
mov
out
mov
push
push
outsl
and
push
xchg
lock
pop
pop
cmp
sub
xor
push
mov
cmp
out
push
test
jae
sub
orl
adc
int3
push
lock
incb
or
dec
loopne
adc
dec
mov
or
lea
dec
push
mov
mov
imull
mov
push
and
mov
lret
mov
lret
push
pop
inc
jbe
push
mov
push
out
nop
push
out
shr
hlt
insl
inc
cs
add
popf
popa
pop
mov
mov
mov
mov
fdivs
sub
adc
pop
loop
mov
es
mov
adc
or
sbb
push
pusha
shlb
je
movsl
cltd
ss
into
iret
iret
call
cmpsb
cwtl
cmp
std
adc
add
mov
inc
int3
pop
fwait
sbb
xor
negb
ficompl
sub
push
and
idiv
add
aam
adc
mov
dec
xchg
int
adc
and
cmp
sar
mov
push
xor
pop
mov
sub
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
dec
jae
and
stos
stos
dec
add
add
sbb
push
outsl
dec
sbb
test
fidivrs
clc
adc
and
test
dec
jo
add
mov
xor
testb
xchg
push
add
dec
pcmpeqw
loopne
shl
mov
add
xor
sbb
bound
bound
pop
mov
leave
lods
jge
jne
cs
filds
js
lret
mov
sbb
xor
mov
sbb
inc
sar
ror
test
mov
rclb
jmp
xchg
add
cli
push
ja
sarb
test
xor
add
jle
fnstenv
movswl
or
mov
dec
mov
pop
sbb
test
fmuls
lea
add
push
adc
or
xor
adc
les
mov
adc
sbb
inc
or
pop
mov
inc
shll
jo
xchg
jbe
call
shr
and
test
add
inc
enter
test
lock
jl
jne
lea
add
pop
mov
dec
or
adc
pusha
rclb
lret
notb
lock
or
ret
inc
sbb
scas
rorl
fnstcw
adc
add
test
and
adc
add
ja
repnz
out
divl
leave
dec
add
iret
cmp
cmp
lcall
push
sarb
mov
inc
xchg
out
gs
fldt
fnop
add
ret
roll
mov
sub
mov
sub
mov
ret
and
push
or
nop
push
stc
je
icebp
jge
push
jne
xor
leave
cmpsl
inc
xchg
ja
fwait
shl
out
lahf
sub
jne
push
add
pop
dec
sub
les
popf
lods
push
mov
jp
sub
add
ljmp
daa
ret
adc
cltd
fstl
shrb
or
inc
push
mov
insb
jne
lret
clc
rorl
movsl
cmp
or
jmp
fldl
scas
or
jmp
addr16
dec
xchg
add
decl
xchg
or
dec
sub
mov
lods
adc
or
cmp
jne
cmp
pushf
adc
push
jl
rolb
outsl
or
cmp
adc
sbb
push
push
or
loope
mov
test
aas
inc
addb
or
mov
pop
mov
call
call
push
xchg
inc
js
lds
pop
xor
xchg
je
push
sub
or
icebp
fdivr
or
add
pushl
je
push
and
mov
fstl
or
dec
xor
int3
lock
jnp
sbb
pop
cmovl
push
mov
xchg
and
daa
add
or
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
fs
xchg
insb
insb
push
inc
loope
int3
lcall
je
arpl
pop
xchg
ret
ja
sub
idivl
clc
ret
in
dec
adc
je
cmp
je
mulb
sbb
sub
mov
add
iret
je
xor
lods
dec
lods
push
rclb
sti
lds
push
sub
inc
pop
xchg
jmp
lea
pop
fdiv
nop
mov
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
push
mov
and
in
push
dec
push
push
adc
push
into
xlat
and
add
dec
and
mov
int
mov
mov
sbb
add
add
push
std
rorl
mov
lea
fimuls
ret
movsb
sub
cs
adc
test
mov
jle
inc
push
je
rorb
pushf
cmp
mov
mov
arpl
inc
sub
add
push
and
sub
test
xchg
and
test
ljmp
sbb
adc
addb
jbe
scas
inc
pop
jo
call
sbb
out
sbbl
adc
bound
jns
insb
sbbb
clc
push
push
jge
jne
mov
xchg
cli
xchg
mov
inc
mov
xchg
pushw
sahf
cs
in
call
push
cmp
adc
outsb
and
mov
xchg
add
rorb
outsl
push
sbbl
fs
cwtl
fidivrs
pop
stos
sub
and
rolb
lock
cmp
je
jle
mov
out
cmp
push
and
sbb
push
lea
add
push
adc
add
andb
aam
sbb
dec
lret
lret
push
or
sbb
pop
imul
lods
add
adc
fld
movsb
popf
xchg
fcoms
cli
les
out
cs
add
clc
pop
xor
pop
xor
ljmp
bound
fistl
adc
mov
jb
call
pop
arpl
jnp
jns
and
sbb
adc
inc
rcl
ja
adc
addl
loopne
and
or
test
cmp
adc
clc
pop
dec
inc
pop
and
sbb
lea
mov
sti
inc
sbb
pop
loopne
or
jns
in
or
inc
mov
mov
test
jge
sbb
jg
push
sbb
js
fildl
and
ret
pop
xchg
sbbb
cmp
outsl
pusha
pop
pop
cmp
or
mov
add
xchg
adc
ds
pop
orl
or
cmp
or
pop
fcmovnu
jo
sbb
pop
into
jecxz
and
icebp
adc
loopne
cmp
mov
repz
mov
loopne
lret
pusha
inc
sub
dec
add
pop
push
lock
pop
add
hlt
mov
movsb
cmpsb
cmp
cmp
sbb
fistl
xchg
sbb
loope
mull
add
fsubr
mov
cltd
cmpl
mov
cmc
adc
std
and
xchg
int3
mov
shlb
sub
outsb
xorb
repz
addr16
fwait
pop
sbb
cmc
fs
in
mov
in
xor
mov
mov
movsl
add
idivb
je
out
bound
push
sbb
adc
es
out
jo
jno
push
push
cli
or
mov
pop
fwait
pop
cmp
push
add
scas
popa
mov
shl
test
aad
testb
mov
cmp
adc
push
jmp
mov
ss
aaa
pop
popf
push
fadds
and
pop
aas
mov
mov
or
test
inc
mov
xor
je
jae
add
jae
inc
lcall
sbb
dec
inc
or
movsl
lcall
or
adc
call
rcpps
je
repnz
push
xor
imul
adc
mov
lcall
pop
sub
add
or
call
or
mov
nop
test
push
dec
iret
aam
adc
pusha
sbb
inc
into
sbb
or
sbb
outsb
stos
sbb
sub
lds
add
js
stos
xor
addr16
and
jb,pt
dec
pop
mov
orb
loop
or
xchg
sbb
adc
jmp
pop
outsl
sbb
push
mov
jb
sbb
xor
test
mov
sub
xor
add
leavew
xor
pop
ret
mov
inc
xor
mov
lret
or
lock
decl
pop
loope
in
xchg
cs
pop
add
xor
mov
stc
dec
mov
stos
xchg
rorb
xchg
dec
xor
call
mov
leave
mov
rorb
push
push
jo
bound
sub
push
mov
pop
cmp
fsubrl
repz
add
mov
push
or
mov
or
push
cmp
mov
and
xchg
fmull
cmp
mov
sbb
add
lret
fildll
mov
lret
std
push
and
xor
xchg
fbld
in
nop
mov
sub
enter
sbb
push
mov
cmp
ret
aam
mov
adc
imull
lods
jo
adc
mov
add
cmpl
loopne
insb
js
add
push
sbb
les
mov
and
int
adcl
add
pop
dec
cwtl
test
adc
inc
pop
inc
cmp
mov
clc
andl
mov
xchg
sbbb
sub
outsb
jl
aas
sbb
lcall
pushl
loope
push
pop
mov
lea
jmp
scas
in
out
jmp
mov
ss
or
mov
or
rcll
mov
xor
outsb
mov
rolb
je
mov
mov
inc
push
inc
idivb
xorb
cld
mov
and
gs
push
in
and
pop
mov
jl
cld
and
subl
inc
or
inc
cltd
pushw
cmp
lds
dec
xor
pop
sahf
push
xchg
testb
dec
outsb
mov
cltd
adc
or
push
movsb
xor
xor
mov
adc
xor
adc
test
add
mov
and
cmp
xor
add
in
and
lock
push
sub
push
mov
sub
dec
cmp
adc
jl
or
cmpsl
cmpsb
call
adc
sbb
add
push
add
shr
pop
xor
jecxz
add
lock
fmuls
adc
pop
cmp
jbe
inc
push
inc
adc
inc
cmpb
nop
push
and
fdivs
rolb
sbb
cmp
addl
pop
movsb
push
xchg
xchg
pop
fnsave
testb
push
leave
orl
lock
push
sbb
xchg
je
cld
popl
sbb
cmp
cmp
sub
xchg
xor
js
imul
ret
div
arpl
sti
inc
sbb
or
add
xchg
adc
mov
pusha
lcall
icebp
xor
and
xor
pop
pop
add
xchg
ret
addb
leave
scas
mov
sub
pop
or
push
push
xor
inc
out
inc
jnp
scas
push
mov
ds
outsl
nop
sbb
enter
xor
add
fisttpll
mov
and
cmp
rorb
subb
in
fadds
inc
add
jb
lahf
aaa
add
ret
addb
nopl
jae
mov
dec
js
xchg
mov
test
mov
je
or
bound
scas
xchg
xor
push
cmp
fistps
xchg
test
sbb
cmp
dec
mov
xor
cli
adc
push
push
subps
loopne
jne
mov
jnp
aaa
movl
dec
push
aam
pushf
push
data16
addr16
pop
enter
inc
or
cld
nop
jmp
jno
roll
callw
xchg
pushw
pushf
pushfw
inc
xlat
adc
out
sahf
mov
dec
rcrb
mov
mov
call
xor
xchg
rcrb
popf
xchg
mov
into
aaa
dec
pop
add
jo
jmp
xor
dec
cmp
outsb
pop
push
sbbb
mov
imul
movsl
sub
dec
cwtl
adc
and
cmp
imul
cwtl
mov
push
dec
pop
mov
adc
into
jne
pop
pop
loop
cmpb
movsl
jb
out
ds
inc
aad
or
pushf
xor
mov
pop
xor
add
sub
in
or
cwtl
gs
aam
cmp
inc
xor
andl
leave
inc
inc
loopne
and
loop
add
xchg
je
lock
jl
mov
in
andl
add
xchg
adc
adc
pushl
inc
xchg
xor
mov
inc
rorb
test
into
add
xchg
movsb
dec
lods
into
xor
add
cmp
jo
test
lea
mov
xchg
sub
es
and
stos
je
mov
aaa
addb
cli
push
mov
xor
test
or
add
inc
or
ss
lock
cmp
xor
cmp
mov
and
je
rcll
shll
dec
push
cmpsl
testl
pop
jae
xor
aas
add
or
sub
data16
imul
mov
add
andl
iret
scas
lock
push
and
cli
pop
xchg
dec
insb
add
fcoms
lcall
cmp
lods
adc
pop
add
xchg
testb
or
adc
add
xchg
jno
add
mov
cmp
jne
mov
pop
lcall
and
loopne
add
add
and
xchg
test
mov
stos
rcll
push
mov
test
mov
test
cmp
push
pop
and
je
cwtl
hlt
aas
mov
shl
jbe
xlat
push
movzwl
test
popf
inc
cli
push
sub
sahf
test
xabort
clc
jle
sar
push
les
sbb
pop
adc
sti
cld
addl
mov
xor
jns
dec
or
inc
test
into
adc
jle
adc
or
mov
aaa
sbb
or
jge
fcomi
pusha
insb
std
mov
dec
in
popa
divb
out
add
es
sub
or
jge
sahf
rol
jl
cmp
push
mov
and
push
jl
clc
push
cmp
gs
push
popf
cmp
pop
adc
sub
lret
stos
mov
sub
jns
mov
xor
andl
in
mov
mov
sbb
sahf
and
push
xor
outsb
xor
addl
push
pop
sbb
push
shll
sbb
and
xlat
jbe
int3
inc
add
icebp
into
addl
sub
adc
push
in
rcr
mov
add
mov
test
into
push
sbb
movsb
jp
xor
or
pushl
mov
into
inc
add
pop
xor
add
inc
xor
jp
cmp
je
adc
xchg
loop
add
sbb
inc
daa
ss
adc
sub
daa
lret
das
rolb
sub
push
in
xchg
mov
push
pop
mov
lea
and
insl
mov
sbb
dec
je
test
pop
aaa
jbe
sbb
jp
add
sub
or
add
jle
sub
add
xchg
lock
adc
and
push
in
imul
mov
aaa
mov
inc
or
or
daa
and
dec
pop
je
xor
cmp
sub
out
sbb
inc
iret
loopne
lret
push
stos
push
xor
mov
add
sbb
cmp
aad
popa
sbb
mov
nop
mov
mov
or
addr16
hlt
add
adcl
push
sub
push
outsl
xchg
inc
mov
dec
mov
lea
movsb
adc
popf
shrb
push
inc
js
push
pop
sbb
push
xchg
cwtl
push
push
adc
lods
daa
pusha
loop
jp
sub
and
popf
pop
fs
xchg
mov
popa
loopne
or
mov
jno
inc
pusha
decb
xor
aaa
lret
mov
push
sub
sub
inc
aam
sbb
pop
lods
pop
or
das
das
push
jb
sbb
mov
mov
repnz
push
jno
into
lret
mov
push
push
or
inc
test
push
inc
mov
test
dec
or
call
loope
test
xor
or
inc
inc
rcrl
fnstenv
sbb
xor
mov
push
fdivrl
push
jmp
or
add
jmp
sub
and
lret
ret
addl
add
push
sub
lods
jnp
mov
je
jno,pt
sub
jge
mov
mov
add
lock
test
out
add
mov
pop
or
xor
xor
and
int3
jo
adc
or
aam
int
push
jecxz
and
inc
nop
jne
imul
inc
ret
fimull
push
mov
addb
push
jae
push
push
data16
and
hlt
jl
movl
pop
pop
push
push
add
push
pushf
fldenv
int
mov
xor
rorb
js
add
add
add
shll
dec
mov
sbb
or
mulb
test
aas
clc
push
adc
push
testl
mov
shll
inc
js
pop
cmpl
mov
push
rolb
andl
cmpb
mov
ficompl
pop
dec
pop
lods
push
cmc
cmpsl
mov
mov
xchg
add
and
sub
enter
aaa
adc
insb
xor
xchg
mov
imul
pusha
loopne
cmp
neg
xchg
cmp
cltd
push
mov
and
push
das
mov
xchg
inc
testl
movsb
sub
ds
lods
mov
pop
xchg
mov
pop
inc
push
push
xchg
mov
lcall
js
rcr
sbb
jbe
push
push
or
aam
mov
dec
pop
cld
fisttpl
push
jo
loopne
add
ret
testb
in
sti
les
pop
or
into
pop
adc
pop
sub
pop
inc
popf
mov
add
adc
jbe
out
ret
outsl
or
call
add
je
or
je
jnp
or
sub
xchg
adc
je
pop
das
adc
jl
popl
jle
in
or
add
sahf
inc
movsl
xor
xor
shl
or
mov
push
jmp
cmp
or
pusha
push
adc
adc
xor
push
cmp
inc
cmp
push
movb
dec
clc
sub
dec
and
push
imul
cmp
dec
ljmp
mov
mov
icebp
cmpsl
loopne
es
dec
inc
mov
clc
test
cli
gs
add
sub
sahf
or
inc
mov
adc
in
ret
popa
adc
shlb
loopne
das
cltd
and
sbb
push
inc
jnp
add
and
inc
rolb
or
test
ret
push
mov
inc
test
dec
je
sub
sub
add
clc
add
lcall
inc
push
adc
in
mov
or
mov
xor
daa
or
push
adc
fisubrs
adc
adc
pop
jo
popa
mov
add
fs
or
inc
mov
pusha
insl
or
pop
orl
inc
outsl
cwtl
sbb
outsl
push
stc
stos
xor
and
cs
jp
dec
cld
dec
pop
mov
out
push
ss
adc
shll
cmp
pop
dec
lahf
movsl
test
mov
mov
xchg
popa
inc
mov
scas
dec
mov
sti
je
dec
dec
or
int3
sub
inc
mov
inc
push
inc
mov
clc
mov
add
orb
fsubrs
fadd
ss
fs
in
push
push
ror
push
js
enter
jno
pop
stos
xor
sbb
ret
sub
cmp
sbb
fcompl
faddl
adc
dec
mov
xchg
mov
adc
jne
fucomp
xchg
les
mov
pop
push
cltd
and
mov
imul
ljmp
cld
add
dec
and
aam
cmp
out
push
lock
push
rclb
sbb
sbb
fmull
test
add
dec
sub
jl
pop
jge
scas
dec
push
leave
sbb
sub
in
adc
and
fcoml
nop
out
leave
in
pop
or
add
push
mov
xor
aam
int3
or
mov
aam
aas
inc
cmpsb
mov
rorb
sbb
or
in
or
sahf
push
inc
and
rorb
jl
push
js
into
and
jmp
sbb
adc
addr16
rcll
repnz
fisubl
add
and
cmp
mov
pushf
xchg
cs
add
icebp
fidivrs
mov
adc
or
add
jmp
xor
or
movsb
popf
das
or
adc
sbb
addl
adc
shl
dec
sarl
sbb
push
mov
and
xor
sub
outsb
adc
xor
scas
xchg
mov
mov
push
mov
icebp
cs
fistpl
inc
push
fldt
daa
clc
jmp
or
enter
negb
inc
push
jne
jle
lea
lods
subl
in
ss
jmp
cmp
in
nop
dec
sbb
xlat
clc
data16
cwtl
mov
fcoms
push
in
adc
sub
push
inc
enter
sub
xor
shrl
cmp
test
sbb
rolb
ss
das
add
inc
xchg
xor
pop
sbb
repz
xor
cld
int
testb
mov
sbb
sbb
call
and
addr16
sbb
xor
shl
or
xchg
mov
repnz
gs
fsubs
adcl
push
xchg
mov
push
sbb
fsubrs
fisubrs
je
add
jg
ret
notb
inc
les
xor
jo
sub
addb
push
in
add
sbb
fmuls
shl
call
test
add
imul
jb
decl
xor
xor
cwtl
or
ret
hlt
mov
loopne
mov
pop
add
out
pop
ror
es
jp
jg
mov
dec
movb
or
mov
daa
call
xor
sbb
test
hlt
les
cmpb
and
mov
lock
push
add
testl
loopne
add
mov
outsl
or
push
subw
push
xchg
pop
add
cwtl
adc
push
push
loopne
jg
orb
sbb
sahf
or
movsb
push
sbb
filds
pop
cmpb
dec
xchg
cmp
nop
das
xchg
enter
pop
adc
mov
or
sub
or
push
cmp
in
sbb
adc
movsb
add
or
pop
jne
fisubl
xchg
iret
or
les
mov
dec
sub
sbbl
sub
mov
mov
cs
sbb
ret
shl
push
movsb
jns
or
or
loope
xor
js
je
push
int
dec
loop
arpl
dec
or
clc
add
sbb
push
sbb
and
and
push
inc
adc
nop
cmp
add
and
xchg
notb
ret
inc
jecxz
add
adc
and
add
or
adc
pop
add
pop
pop
sub
mov
mov
adc
jnp
punpckldq
imul
faddl
add
pop
movb
stos
jb
push
sbb
dec
mov
adc
sub
pop
pop
inc
cmp
cli
int3
rorb
and
mov
mov
or
cmp
ss
dec
adc
inc
mov
push
dec
popf
mov
xchg
fs
push
inc
xor
sbb
sub
mov
push
add
mov
xchg
jle
testb
cmp
negl
cmp
sub
pop
out
sbb
pop
nop
pop
repz
push
test
arpl
es
stos
cmp
adc
adc
pop
xchg
mov
es
dec
push
je
push
je
inc
lods
mov
push
add
call
jb
add
cmpsb
sarl
fsts
adc
jo
inc
data16
add
push
adc
or
sub
pop
mov
xchg
mov
or
cmpsl
push
fcoms
sbb
and
or
add
fwait
insb
pop
dec
mov
dec
dec
cli
add
pop
je
addb
push
cmp
rorb
test
xor
test
mov
mov
pop
add
sbb
frstor
out
cmp
adc
mov
pop
test
push
mov
add
pop
call
fs
sbb
cltd
insl
xor
adc
fiadds
and
adc
or
es
push
popf
and
push
mov
sar
imul
and
pushf
push
adc
and
cld
push
pop
testl
popf
adc
mov
test
repz
add
and
ror
in
and
call
scas
in
sbb
mov
xchg
mov
test
sub
dec
or
popa
mov
sbb
sbb
add
mov
rcrb
gs
cmp
lock
cmp
or
je
dec
out
add
xchg
sub
int3
inc
in
sbb
pop
push
inc
sbb
cmp
xor
xor
sbb
push
jb
xchg
and
and
bnd
and
adc
push
and
and
and
sbb
and
sub
jp
add
lea
mov
xchg
add
pop
add
mov
fsubl
sub
pop
pop
xor
inc
mov
push
push
sub
push
push
leave
xchg
push
popf
xor
and
out
pop
push
stc
enter
xor
push
fs
and
test
or
data16
add
xchg
sbb
in
or
xor
cmpsb
inc
iret
add
inc
xchg
or
int
aam
in
sub
dec
sbb
ja
add
inc
and
mov
mov
in
push
dec
in
or
dec
in
push
dec
xchg
push
dec
jmp
and
imul
dec
sub
push
mov
xor
clc
rcrl
or
shll
inc
dec
xchg
mov
xlat
xor
fnstcw
and
jo
out
std
dec
dec
xchg
fldcw
mov
mov
dec
call
inc
push
call
mov
imul
je
xor
push
enter
sbb
mov
add
outsb
dec
adc
and
inc
and
jmp
pushl
jmp
mov
push
scas
mov
lods
and
pop
lret
addr16
mov
xor
xchg
lock
cmp
push
sbb
add
push
movsl
sub
sbb
inc
ficoms
sbb
stc
pusha
or
dec
fdivr
sbb
out
push
xlat
inc
mov
cmp
fsub
mov
inc
jecxz
mov
dec
mov
add
loopne
sub
int3
xlat
orl
fildl
sub
push
xor
mov
and
out
loopne
inc
jl
filds
in
push
in
scas
dec
mov
call
sub
cmp
pop
pop
push
hlt
testb
mov
sbbl
fs
psubsb
jecxz
fidivrl
adc
leave
cld
sbb
or
mov
add
push
outsb
js
mov
dec
sub
dec
and
adc
call
adc
or
pop
inc
inc
sahf
aas
add
push
adc
or
xchg
adc
mov
fstl
xchg
addr16
add
xor
pop
push
xchg
mov
outsb
enter
dec
push
pusha
pop
ljmp
lods
mov
pop
xchg
bound
jl
or
mov
add
mov
add
aam
popf
and
enter
sbb
xor
xor
inc
std
cmpsl
push
jo
add
cld
push
mov
imul
mov
add
sub
rcr
add
fidivs
loope
in
es
jno
add
movsb
gs
mov
or
sub
sti
mov
int3
mov
or
in
leave
repz
sub
inc
adc
stos
and
add
leave
test
add
push
mov
repnz
fiaddl
xor
push
insb
iret
and
pushl
mov
push
or
jl
cmp
cld
das
mov
and
out
pop
cmp
jne
aaa
pusha
mov
pop
adc
insw
icebp
mov
pop
cmp
jge
cmp
cmp
pop
loop
fwait
mov
xchg
or
mov
push
mov
pusha
xchg
and
xchg
loop
jb
and
call
xchg
jae
add
hlt
loopne
jl
repnz
or
or
add
pop
add
loopne
push
and
or
test
mov
sbb
sbb
mov
movsb
sbb
sahf
or
dec
scas
or
mov
mov
ret
inc
adc
aad
mov
adc
jno
rorb
push
dec
or
adc
std
nop
mov
insl
subl
ror
gs
sbb
enter
add
jecxz
dec
pop
inc
inc
nop
mov
sbb
and
pop
or
insl
pushf
inc
fistpl
xchg
add
fdivrs
jb
add
inc
and
sub
fsubrs
cltd
nop
pop
decl
sub
push
inc
inc
or
aam
mov
ja
pop
mov
rorb
xor
lods
daa
andl
imul
insb
call
enter
imul
inc
pop
lods
jbe
adc
or
lock
jns
add
lcall
xor
ficoml
sbb
inc
mov
loop
test
mov
cld
lcall
out
mov
push
xor
mov
loopne
push
lds
sbb
mov
xchg
pushf
int3
mov
xchg
popa
xor
andb
loopne
stos
inc
jno
movsl
sbb
lock
test
dec
add
push
dec
pop
repnz
test
push
dec
clc
push
add
aaa
mov
stc
or
xchg
aaa
add
jne
test
dec
xlat
mov
push
cmp
jo
add
mov
cmp
mov
or
lock
pop
adc
jmp
arpl
sub
leave
inc
incl
xchg
out
jbe
mov
cmp
jbe
mov
and
adc
pusha
add
pop
daa
and
mov
es
pusha
fwait
and
call
call
or
cmp
or
push
xor
sbb
inc
jmp
sti
push
or
inc
push
adc
xchg
mov
or
outsl
push
push
sbb
cmp
jb
cmp
pop
fs
cmp
pop
or
std
xor
jg
adc
inc
jmp
xor
js
cmp
push
push
fs
push
push
pop
pop
mov
orb
mov
aam
mov
push
test
test
mov
dec
cld
push
pop
addb
mov
or
ficoms
js
jmp
cwtl
adc
fisttps
jne
andl
push
push
push
mov
cmpsb
add
or
add
jnp
loope
jmp
pop
gs
lahf
enter
add
and
dec
sbb
xchg
cmc
orl
jo
dec
lea
outsb
xor
shlb
dec
push
inc
aas
or
lea
add
or
or
add
das
or
in
lcall
or
jno
sbb
loope
push
popa
sbb
push
jne
ds
pop
addr16
fisttps
push
adc
ud0
inc
adc
pop
add
cmp
sysret
sahf
aas
or
jno
sbb
out
in
imul
negb
and
aam
push
sbb
aaa
aam
in
ljmp
or
add
gs
and
idivl
jb
sbb
pusha
insl
scas
sbb
sub
das
mov
or
enter
pop
cwtl
ret
int3
js
fwait
shl
push
or
or
fcoml
mov
ret
in
dec
repnz
sub
inc
or
insb
push
iret
and
mov
cli
push
outsb
dec
cmp
aaa
mov
hlt
lret
cli
popa
fisubrl
clc
rep
mov
adc
add
outsl
pusha
push
lea
movsb
sbb
cmp
rol
mov
jg
adc
xchg
int3
push
sbb
or
cmpsb
roll
lock
jge
mov
or
mov
icebp
and
adc
ss
popf
nop
xchg
sbb
adc
ret
dec
ja
sub
jne
test
xor
or
in
adc
ret
test
jl
push
popa
xchg
pop
pop
add
and
inc
pusha
ds
or
test
sbb
push
push
and
loopne
push
ret
andps
inc
add
xor
push
loop
pop
or
jg
inc
int3
fs
cmp
add
ret
xor
jbe
hlt
add
je
add
pop
pusha
mov
scas
cmp
outsb
push
clc
rcrl
in
movsb
std
mov
mov
ljmp
cld
adc
jo
sbb
clc
loopne
jns
insb
cmc
cmp
mov
incb
cmp
sbb
jbe
sub
lea
ret
or
push
xor
inc
cmp
jb
repnz
cmp
and
cmp
dec
pop
xor
sbb
flds
sub
or
divb
movsl
xchg
adc
pushf
cmp
inc
jg
call
xchg
add
push
add
or
cwtl
orb
cmpl
adc
push
cld
push
or
sbbb
lock
sbb
inc
je
imul
inc
sbb
mov
jnp
mov
sbb
ret
cltd
push
int
cmp
or
sbb
cmp
jo
je
xor
pop
pusha
mov
push
cmp
inc
push
mov
inc
movsl
pop
ret
xor
push
icebp
int3
push
imul
or
xor
jmp
mov
sub
mov
mov
xor
or
and
push
fbstp
adc
mul
scas
jle
dec
add
jmp
sbb
aas
fldl2t
cmp
cmc
sbb
out
and
outsb
gs
xchg
shll
push
xor
sbbb
pushf
stos
fnstenv
ja
rolb
das
mov
movsb
or
xchg
xchg
xchg
das
xor
xor
cmp
inc
into
lret
faddl
adc
dec
fs
loopne
sub
movl
mov
cmp
or
add
add
jge,pt
sbb
add
test
js
ljmp
data16
mov
andb
dec
es
incb
shlb
das
sub
xlat
adc
fimuls
mov
pop
ljmp
add
adc
push
mov
xchg
daa
mov
push
out
push
icebp
pop
or
es
mov
push
ljmp
inc
push
inc
jge
bound
jecxz
cmpb
call
or
fsubrl
mov
ret
push
hlt
xor
fldl
cmp
or
test
out
dec
add
pop
lods
pop
call
sub
mov
or
lret
cmc
in
xchg
je
cmp
jae
test
add
imulb
add
and
add
out
xor
ret
cwtl
or
adc
and
xor
xchg
loop
xchg
mov
mov
or
pop
cmp
sub
rep
push
mov
mov
pop
addb
inc
xor
out
or
or
adc
jmp
sub
clc
arpl
pushl
cmp
shlb
add
pushf
pop
mov
sbb
andl
mov
adc
pop
push
push
add
jae
push
inc
cld
push
shll
addb
jb
inc
loopne
dec
loopne
adc
adc
movzbl
inc
inc
sub
push
inc
movsl
test
lret
sbbb
test
int
xor
cmp
cmpsb
sar
testb
xor
add
inc
xchg
es
repz
xor
xchg
xor
sub
and
adc
andl
sbb
pop
mov
pusha
popa
or
pop
xchg
inc
sub
xchg
push
sbb
leave
clc
push
mov
inc
rolb
fdivp
leave
mov
mov
cmp
sete
insb
adc
xchg
lds
mov
jl
push
ja
popa
inc
mov
and
add
cld
sub
cmp
xor
jbe
pop
mov
repnz
jbe
faddl
xor
mov
mov
cld
clc
pop
punpckhbw
js
xor
add
lret
loop
adc
in
pusha
jnp
pop
adc
push
push
mov
call
movsb
or
xchg
dec
sub
or
mov
call
jb
add
push
incb
mov
orb
loope
sahf
push
mov
in
ss
dec
mov
jg
dec
in
or
jno
incl
sub
mov
jno
jbe
dec
rclb
addl
pushf
bound
xlat
mov
adc
arpl
imul
cld
add
adc
inc
test
or
push
sbb
movsb
add
sarb
dec
jne
push
loopne
mov
adc
bound
add
push
shll
data16
or
pop
sub
jno
movsl
iret
shlb
scas
mov
popa
xor
and
je
rol
rolb
gs
adc
mull
inc
das
dec
or
mov
jl
orb
gs
data16
test
icebp
cs
or
xchg
push
pushf
lods
mov
sbb
fnstcw
xchg
popa
stos
sbb
xchg
dec
mov
into
call
aad
pop
pop
filds
push
cmpsb
leave
adc
addr16
pop
push
push
jb
mov
jle
add
mov
inc
and
sar
adc
sub
int3
adc
dec
adc
pop
test
shrb
inc
pop
nop
sub
insb
push
pop
adc
mov
mov
inc
adc
push
jne
push
test
mov
ds
inc
add
xchg
add
push
in
ret
loope
mov
adc
push
adc
mov
ljmp
cmp
cmp
sub
cmp
adc
ljmp
jne
or
adc
xor
outsb
cmp
je
les
dec
call
adc
push
outsb
sub
sar
cmp
jbe
or
add
hlt
mov
jmp
ret
mov
pop
pusha
in
adc
inc
sbb
jecxz
push
rcl
faddl
dec
call
jb
mov
sahf
push
push
add
cmp
inc
shr
mov
and
inc
adc
or
call
ss
ja
lea
mov
fdivp
and
ret
push
adc
mov
imul
push
push
inc
arpl
xchg
pop
jge
loopne
lret
jo
jnp
in
ljmp
pusha
lea
add
aam
test
notb
testb
add
loopne
inc
cmp
sbb
inc
inc
ficoms
enter
imul
mov
mov
xor
rclb
popa
pop
mov
add
mov
rolb
enter
xor
gs
pop
stos
rorl
pop
sub
xchg
adc
cmp
adc
pop
inc
cs
inc
testb
adc
jmp
stos
push
arpl
dec
add
lahf
ljmp
cwtl
outsb
sar
lea
jp
enter
cmp
cmpsl
pusha
popa
push
push
cmp
jb
pushl
mov
into
pop
or
add
push
pop
jmp
xor
jae
mov
push
add
xor
pusha
and
mov
fidivrl
adc
and
lcall
cmp
add
and
xor
lea
push
sub
lock
mov
pop
pop
mov
bnd
out
mov
fcmovb
dec
adc
pop
loopne
or
mov
add
push
shrb
mov
lcall
pop
lock
jmp
cmpsb
inc
sub
addb
xor
jbe
xchg
je
or
inc
and
mov
xchg
cs
cmp
add
nop
mov
scas
mov
test
and
inc
push
cli
push
cmp
and
insb
sbb
scas
in
sbb
sar
push
push
pop
jb
mov
sbb
in
nop
scas
cmpsb
daa
or
cmp
sbb
test
add
sbb
or
in
mov
arpl
ja
andb
sub
in
fldt
aas
ss
mov
mov
cmp
adc
adc
cmp
xor
pop
add
movl
mov
or
js
test
pushw
outsb
inc
pop
loopne
adc
add
or
xor
in
je
sub
js
pop
and
xchg
bound
jo
adc
sub
dec
das
jge
sahf
mov
mov
cmp
xchg
mov
push
pushf
mov
inc
shrb
and
inc
xchg
fisubrs
inc
aas
and
and
nop
inc
push
and
mov
nop
inc
push
nop
aam
in
enter
or
daa
and
enter
enter
push
and
cs
in
std
mov
int3
cmp
repnz
pop
push
add
mov
lret
and
and
add
or
xor
mov
mov
jle,pn
xor
sbb
fistpl
loope
jl
sarb
shl
pushf
or
fbld
sub
test
call
or
add
loope
pop
adc
imul
mov
insl
pop
mov
mov
sbb
aad
adc
inc
adc
sub
cmp
add
lods
and
lds
or
in
dec
cmp
add
adc
insl
and
push
adc
daa
adc
adc
mov
js
lcall
ja
ja
ja
push
push
sbb
popf
adc
add
loope
dec
sub
xor
mov
mov
mov
ret
add
inc
arpl
in
imul
push
rclb
in
in
xor
push
and
sbb
test
push
orl
inc
adc
lret
jbe
push
add
int3
pop
push
cwtl
cmpl
pop
ret
pop
adc
negl
stc
xchg
mov
stos
fstps
cld
movaps
ss
add
mov
inc
add
sub
add
xor
jne
push
push
fbstp
fcomps
mov
inc
sbb
lock
js
es
mov
je
mov
loope
sbb
jo
push
dec
call
daa
loopne
dec
das
dec
lods
pop
scas
mov
cmp
push
lock
jne
sbb
leave
adc
cmpsb
loopne
shr
test
in
test
adc
inc
call
ret
push
cmp
dec
lods
dec
push
loope
push
dec
pop
cmp
ja
jmp
mov
push
cmpb
xor
rep
mov
nop
rcrb
sbb
xor
scas
adc
clc
fdivrs
cmp
dec
adc
cmp
movsl
je
or
cmc
jno
outsb
shlb
sbb
inc
xchg
in
mov
mov
lock
pop
cmpsl
fwait
jno
mov
push
push
aas
or
sti
jg
cmp
or
addr16
outsl
cmp
dec
cs
or
enter
dec
stos
rcl
cld
push
push
int3
dec
pop
sbb
adc
sub
aaa
shlb
and
aad
call
and
loopne
rorl
mov
jno
or
sub
xor
jo
pop
jmp
cmp
aas
test
inc
ljmp
iret
or
push
outsl
sub
out
dec
mov
jo
push
mov
ds
add
repz
lods
push
push
pop
and
mov
add
test
sub
xchg
or
push
mov
pop
or
push
adc
xchg
loopne
cld
or
daa
and
or
or
adc
or
and
mov
hlt
movsl
inc
jns
mov
imul
adc
adc
adc
xchg
repnz
mov
adc
out
cmovbe
or
adc
push
popa
out
sub
sub
lock
mov
hlt
inc
and
sub
fs
jmp
push
aad
outsl
leave
ss
clc
xor
xchg
inc
jnp
and
loope
jnp
rclb
lock
out
dec
stos
fdivrl
ds
inc
sub
out
and
dec
cmpsb
sub
test
ss
push
loope
dec
out
and
or
jne
dec
invd
xor
push
lock
push
popa
mov
in
cmp
fcoms
mov
sbb
xor
sbb
push
lahf
lcall
and
cmp
mov
cmp
jl
cmp
int
cli
idivl
cmp
push
jp
or
pop
inc
cmp
aas
lods
mov
xlat
or
jp
pop
cmp
mov
mov
pop
and
cmp
nop
mov
je
cmp
je
lods
sbb
loope
pop
xor
lcall
iret
pop
imul
jae
cs
pop
pop
add
or
cld
add
sub
jbe
testl
xorb
sbb
shrb
mov
add
sub
pop
mov
and
rolb
enter
add
mov
inc
dec
mov
jmp
lock
push
hlt
jge
and
aaa
insl
inc
cld
cmp
jne
movl
xchg
add
mov
sbb
aam
jecxz
and
adc
add
cwtl
fiaddl
cld
lock
ja
lea
pop
mov
add
loop
xchg
mov
pop
js
call
ds
adc
xor
mov
add
shll
mov
and
nop
cli
ja
push
mov
mov
inc
test
jmp
add
pop
mov
js
mov
stc
faddl
mov
fistl
lock
popa
mov
fisttpl
xor
dec
mov
fistps
inc
sbb
sbb
mov
pop
inc
sub
xchg
cld
jo
or
xchg
dec
push
aad
leave
clc
adc
lea
mov
test
jo
je
pop
cmp
add
or
inc
call
and
ja
shlb
xchg
sbb
outsl
je
pop
test
xor
adc
or
xor
mov
cmp
fsubrs
cmp
sbb
in
inc
das
test
nop
add
xor
ficompl
lret
push
push
pop
mov
pusha
mov
sub
jge
add
sbb
push
mov
test
adc
adc
mov
jge
cwtl
dec
das
adc
in
sub
cld
cwtl
rcrb
mov
or
cmovle
testb
adc
mov
xchg
js
xor
jmp
out
xor
add
shl
sub
push
jne
mov
and
cmp
and
push
and
ret
and
push
data16
je
in
sbb
fisubs
xchg
push
pop
or
loop
rclb
ret
rolb
inc
jle
and
xor
jo
pusha
mov
push
imul
adc
inc
xchg
push
push
shrb
inc
inc
sbbb
and
or
outsl
aas
push
push
jp
pop
mov
jle
pusha
add
mov
sbb
jnp
js
pop
push
por
sub
pop
enter
and
push
rclb
in
pop
xchg
aas
gs
imul
mov
jbe
sbb
sub
dec
pop
fucomi
add
sub
jae
cmp
push
push
test
pop
pop
neg
dec
push
mov
ljmp
mov
jnp
nop
push
les
add
into
bound
arpl
add
sub
pusha
ljmp
loopne
add
sbb
mov
xchg
test
adc
filds
mov
fwait
movb
fsubrl
jno
faddl
cld
in
xor
inc
pop
gs
push
sub
rcl
and
sbb
stc
ficoms
in
add
mov
mov
test
je
or
je
cmp
jne
adcb
and
fstpl
loopne
push
repnz
push
inc
lea
add
aas
xchg
faddl
jno
cmp
cmp
cs
and
das
add
int3
fs
and
mov
jle
dec
add
and
push
jne
in
lcall
pusha
movsb
or
adc
iret
inc
repnz
mov
xlat
adc
sub
jne
insl
sarb
add
and
mov
cltd
clc
or
iret
add
fs
inc
jo
ffree
loop
lahf
push
lods
add
xchg
js
and
decl
nop
mov
stos
and
mov
pop
jg
jae
adc
jb
repz
push
mov
rolb
arpl
test
popw
adc
mov
adcb
mov
xchg
xor
fisubrs
cmp
sub
adc
aad
int3
jbe
fdivrs
mov
add
mov
xchg
adc
fcomip
adc
cmp
cmpb
fildll
pop
or
jle
and
mov
sub
repz
add
inc
pop
push
or
push
push
push
outsb
dec
psraw
rcrl
push
sub
das
sbb
pop
adc
dec
cmp
mov
invd
loope
add
jl
sti
stos
lods
or
push
mov
sub
addb
jae
lea
rclb
aas
add
jmp
pop
pop
pop
push
mov
orps
rclb
mov
or
xor
rolb
pop
adc
cmc
sbb
sbb
sub
lea
add
push
jle
add
mov
pusha
pop
mov
adc
imul
dec
jns
mov
imul
decb
push
push
xor
mov
out
add
mov
shrl
cmpsb
ljmp
push
mov
add
dec
jns
jb
js
inc
movsb
or
xchg
sub
call
pop
add
add
or
add
hlt
add
shl
push
gs
mov
dec
sahf
int3
movsl
sub
mov
jne
in
add
fisttpll
pop
in
lods
push
rcr
lods
cld
push
pop
adc
push
mov
xor
cmc
mov
fdivs
or
out
je
cmp
pop
movl
insb
test
pop
mov
jmp
push
xchg
adc
lods
test
in
xlat
jmp
aam
xchg
mov
and
mov
popa
jns
or
or
add
xchg
inc
pop
or
mov
xchg
push
push
adc
movsb
rcrl
pushf
ljmp
adc
dec
add
lods
js
sbb
lea
test
cmp
out
mov
call
cmpsl
inc
sbb
mov
jmp
mov
sub
adc
xor
jo
inc
imul
push
xor
push
xor
jle
inc
popa
test
adc
mov
subb
pusha
sub
faddl
jl
stos
in
cmp
push
fldl
pop
daa
stos
cmpb
fstpl
add
fistl
mov
data16
aaa
adc
adc
iret
iret
repz
push
divb
or
jne
shl
cmp
cli
jne
or
stos
dec
pusha
mov
leave
loopne
fldz
add
andl
lahf
je
and
filds
push
and
aas
or
pop
lea
mov
pop
ja
jg
push
xor
lcall
fadds
lea
fstl
jecxz
clc
push
ffreep
loop
jbe
test
sbb
insb
sbb
mov
ret
scas
add
ss
cltd
les
aas
lds
jnp
add
adc
jb
mov
lea
add
fidivrs
bound
mov
scas
add
test
add
ffree
cmp
pop
mov
add
aam
pushl
inc
inc
in
fcoml
push
or
fimuls
jbe
in
movsl
pminub
push
push
sub
jnp
mov
daa
push
and
push
loopne
or
dec
filds
fcomp
or
add
cmp
xor
mov
jmp
enter
push
jbe
lock
push
in
push
imul
dec
sbb
lret
inc
daa
lock
aad
dec
mov
add
push
clc
jns
les
daa
adc
fisubs
mov
in
mov
sbb
shlb
inc
sahf
pop
add
aaa
loopne
push
push
repnz
jns
adc
pop
clc
or
testl
adc
adc
adc
adc
stos
adc
addl
fnstcw
mov
repz
sbb
cld
lcall
and
push
cmovns
jo
pop
push
push
adc
add
inc
cmp
jno
mov
repz
add
cmp
lods
push
fistpl
xchg
fistpll
mov
add
dec
aam
loopne
and
insb
sub
mov
jno
movsb
leave
enter
adc
enter
mov
imul
cltd
nop
inc
fisubrs
enter
sbb
add
xor
fs
ja
jbe
fmull
int3
or
rorb
fmuls
sub
dec
inc
es
or
pop
add
inc
jo
loopne
and
ss
in
call
adc
sub
add
add
mov
enter
dec
sarb
mov
test
jbe
xor
pop
jge
dec
sbbb
add
mov
push
add
ret
or
shrb
add
imul
pop
add
cwtl
cwtl
mov
cs
arpl
jle
ret
xchg
or
add
std
pop
cmp
jle
movq
or
sub
bound
pusha
jge
xor
scas
push
fisttps
push
adc
jle
dec
seto
adc
ds
lea
add
inc
inc
add
pop
sbb
mov
xor
hlt
cmpsl
adc
push
cld
cmp
jl
cld
aad
add
lods
movsl
and
xor
mov
rorb
sbb
into
or
inc
insl
push
add
and
inc
mov
push
insb
or
or
mov
icebp
push
add
arpl
mov
inc
pop
sbb
mov
push
mov
lcall
pop
lret
enter
xchg
push
jnp
in
and
or
xchg
imul
cmc
push
les
test
lods
repz
dec
jb
cmp
push
rcrl
decl
pop
out
xchg
insb
add
cmpsl
stos
add
shll
bound
or
in
sub
adcb
sub
test
push
aas
jmp
add
xor
pcmpeqb
ss
pop
inc
mov
lock
sarl
movlps
jo
inc
cmp
xor
mov
cmp
mov
enter
and
sub
pop
cmpsl
test
mov
mov
xchg
mov
call
sbb
mov
adc
sub
push
inc
lock
addb
mov
add
jl
adc
push
scas
xchg
ss
pop
jle
pop
mov
inc
popa
ds
pop
aaa
and
inc
push
xchg
dec
lret
and
jmp
inc
xor
hlt
lock
jno
ret
mov
loope
cmp
pop
push
les
sbb
shlb
pop
inc
ds
testl
and
jno
push
addl
xlat
movsb
cmp
ret
pop
sub
xchg
ja
push
and
iret
sub
shrl
pop
jp
movsl
xor
sub
int
push
loopne
sbb
mov
and
addl
addl
adc
mov
mov
lea
popa
aam
xor
mov
mov
add
or
or
cld
outsb
daa
pusha
ret
push
cmp
pop
lds
adc
scas
push
faddl
clc
fwait
dec
mov
dec
add
cld
inc
or
fsub
into
sti
andb
addb
add
pushf
in
cs
add
ss
mov
adc
dec
adc
je
imul
inc
or
ja
stos
sub
add
pop
and
push
adc
pop
push
cmpsl
xchg
sub
cmc
add
lret
dec
sbb
stc
xor
int3
push
or
and
movsl
fistpl
add
dec
and
or
lahf
sti
add
rcll
out
xchg
and
ljmp
adc
ret
push
stos
pop
and
lahf
add
push
sbbl
pop
mov
lahf
mov
xor
fiaddl
int3
mov
enter
add
cmpsl
test
jne
jge
subb
or
xchg
lahf
ljmp
filds
dec
loope
mov
arpl
or
in
sub
testl
das
jne
inc
pop
into
or
pop
dec
and
add
xchg
dec
inc
jae
push
shr
xor
mov
shl
mov
loopne
and
stos
pop
mov
call
dec
mov
push
mov
or
ds
loopne
sarl
dec
and
movsl
push
sub
lods
mov
pop
arpl
xor
push
outsl
hlt
push
loope
leave
cs
sbb
sbb
push
and
sub
push
adc
arpl
mov
push
insl
xor
insl
cmp
fs
mov
mov
xlat
push
and
das
mov
sarl
addb
inc
ret
push
test
inc
and
lock
jl
cmp
into
add
pushl
pop
add
stc
ret
mov
in
lds
or
les
jecxz
or
add
mov
adc
jmp
test
push
mov
mov
inc
sub
mov
sub
frstor
popa
add
pushf
push
mov
movsb
jo
or
mov
mov
adc
dec
lods
les
jge
adc
adc
fmull
push
add
xor
cmp
test
push
cs
xchg
add
inc
adc
ret
sbb
fsubrp
mov
add
push
sbb
sbb
ffree
adc
cmp
mov
addr16
mov
push
or
aam
xchg
ret
push
loopne
adc
shll
adc
lahf
lods
push
inc
mov
das
popf
xchg
mov
xchg
test
xchg
pop
and
sub
in
hlt
sahf
dec
scas
andl
add
xor
clc
sbb
cs
push
sub
add
subl
fldt
sbb
xor
add
xchg
mov
movsb
cmpsl
repz
pop
mov
shll
sbb
jne
popf
clc
jno
test
jns
mov
push
mov
push
add
xchg
jo
aas
scas
jne
inc
cld
dec
adc
shrl
cld
scas
pop
mov
push
test
jge
js
jp
fnstenv
push
pop
outsb
jl
insb
dec
rorl
rorl
jne
ja
mov
test
mov
fiadds
loopne
dec
mov
jae
xor
insl
push
add
jne
loope
inc
or
jns
inc
mov
push
and
push
push
jns
stos
mov
add
lahf
mov
out
lock
ja
xchg
push
pop
jne
pop
dec
or
or
pushl
pushf
pop
pop
lds
sbb
adc
lcall
add
inc
das
add
andl
push
push
or
mov
fcmovb
movsl
ss
pop
xchg
jo
pop
add
xchg
ss
fs
jle
pop
inc
push
outsl
lret
scas
mov
int
js
adc
fxch
repz
mov
add
add
push
ss
or
dec
push
push
add
push
pushf
sti
xchg
inc
sahf
orb
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
movsb
jb
jo
pop
enter
orb
mov
or
xor
movsb
or
ret
and
xorb
or
sahf
xor
cmp
add
repnz
push
mov
jns
pop
hlt
mov
and
in
sub
mov
add
xchg
dec
int
inc
cld
and
mov
hlt
cmpl
adc
pop
lock
sbb
movsl
repnz
or
xor
dec
push
cmp
push
cwtl
add
adc
cmp
mov
fs
and
shlb
jmp
inc
xchg
jo
push
ss
adc
and
push
sub
subl
push
call
and
out
mov
pop
mov
shll
frstor
mov
inc
inc
sbb
adc
add
push
and
cwtl
and
cltd
in
mov
push
sub
popa
daa
mov
sub
cmp
and
and
sbbb
adcl
push
xor
ud2
or
cmc
pushf
lock
push
insl
and
movsb
ret
push
ficomps
and
xor
mov
sbb
insb
pop
sub
mov
cmp
add
adc
fwait
rorb
cmp
test
idivl
insl
inc
fisubs
fimull
add
pop
iret
or
add
xchg
xor
into
sbb
clc
cmpsb
je
lret
popa
lahf
inc
into
mov
call
or
stc
pop
dec
adcl
push
and
add
mov
dec
ret
pop
inc
addr16
push
aaa
repnz
xor
in
and
jl
add
cwtl
xor
stos
adc
pop
add
or
push
dec
sub
testb
pushf
insb
xchg
or
loopne
push
in
xchg
movsb
xor
faddp
xor
jg
inc
xchg
cmp
push
lea
stos
rorl
rorl
dec
jae
lar
repnz
out
loopne
lods
and
jge
mov
je
fs
aad
mov
mov
adcb
or
imul
and
xchg
jnp
and
das
sbb
pop
adc
add
aad
js
fsubrl
test
sub
es
rorb
js
push
xor
xchg
lock
fstps
sbb
xchg
jno
sbb
dec
sub
notb
out
xchg
sbb
sbb
or
test
data16
or
mov
pushf
addr16
hlt
movsb
xchg
mov
sub
rol
rorl
xor
mov
push
pop
fnstcw
add
pop
imul
js
cmc
lea
mov
sbb
push
lods
xlat
mov
daa
jmp
negb
push
jge
js
jnp
icebp
adc
ret
add
pop
ret
aad
scas
sub
adc
inc
mov
mov
incb
mov
push
aaa
cwtl
sub
pop
sbb
pusha
dec
sti
mov
imul
lods
sahf
push
xchg
xchg
sub
pop
pop
pushl
mov
ret
data16
push
ds
xor
push
push
dec
mov
jle
sub
test
and
push
xor
popf
xor
push
xor
clc
jbe
pop
test
mov
adc
shll
test
cmp
call
sbb
push
adc
pop
jne
cmc
lahf
xorb
out
xchg
repz
cmp
jae
xchg
mov
dec
mov
bound
inc
pusha
jmp
mov
mov
cwtl
pop
sbb
mov
fistps
add
jge
mov
pusha
add
inc
clc
add
mov
pop
shlb
or
and
pop
frstor
mov
mov
mov
ljmp
and
and
cmp
je
clc
ret
psrlw
pushf
or
orl
push
cmp
jne
add
mov
incb
frstor
jne
jmp
inc
and
fs
mov
ss
mov
push
mov
adc
es
xlat
cmp
jmp
push
int
jno
or
dec
jns
ja
mov
jmp
loopne
js
testb
lea
mov
adc
cld
add
incl
mov
shl
or
int
test
mov
sub
inc
sbb
in
popa
inc
cmp
or
adc
or
and
mov
cld
packssdw
sub
fst
outsl
cmp
popa
call
rclb
ja
add
loopne
les
adc
enter
cli
add
pop
xor
lcall
fldl
ret
fcoms
shll
aas
mov
fwait
mov
fstpl
and
insl
popa
add
clc
push
cmp
cmp
insl
cld
out
fstpt
xchg
ljmp
pop
fsubrp
push
sahf
les
jge
test
jo
xor
pushf
clc
sbb
jno
gs
pop
pop
add
and
push
mov
pop
xor
push
shlb
add
sub
mov
outsb
adc
shll
je
dec
je
add
es
adc
insl
mov
sub
sbb
or
in
push
ss
add
pop
push
inc
jns
enter
adc
or
in
sbb
dec
jp
and
sbb
jl
icebp
adc
js
adc
add
mov
cmp
xor
jne
int3
pop
and
and
push
push
sbb
ss
mov
pop
add
into
in
pushf
mov
pop
movsl
lea
jp
mov
pop
outsl
add
stc
inc
adc
nop
mov
repnz
mov
xor
out
adc
xor
js
pop
jnp
mull
and
push
mov
or
mov
out
dec
adc
adc
sbb
pop
adc
and
clc
shll
out
and
pop
and
sbb
and
sbb
adc
sti
nop
out
dec
daa
js
push
jb
xchg
test
sub
lret
out
jecxz
scas
pop
ret
add
out
and
ret
fstl
and
rorl
inc
dec
and
sbb
lods
jl
hlt
adc
pop
or
iret
vmwrite
mov
and
push
xchg
out
and
adc
adc
leave
push
adc
or
vmwrite
test
nop
adc
loopne
iret
lods
push
mov
adc
and
dec
test
dec
les
sub
repnz
repnz
adc
add
sbb
mov
and
or
cmp
push
sub
sub
nop
out
push
push
push
pop
repnz
mov
lret
pop
adc
jno
pop
je
adc
adc
enter
sbb
push
mov
push
cwtl
pop
xor
adc
pop
daa
jns
outsl
xlat
mov
pop
lods
or
push
adcb
mov
aad
iret
repz
testl
jae
iret
repz
xchg
cmpsb
mov
imul
sti
or
sbb
cs
push
popa
jb
out
sahf
adcl
out
jmp
sub
dec
ds
add
je
testl
sub
add
leave
daa
mov
push
shlb
movsb
pop
mov
inc
inc
mov
in
pusha
gs
into
mov
jae
xor
dec
cmp
inc
stos
mov
pop
or
adc
aaa
mov
sbb
adc
rcl
call
or
ja
in
cltd
fcmovb
add
or
jl
push
xchg
pop
jge
popa
add
and
pop
jo
cmp
xlat
leave
mov
pop
mov
and
sbb
fildl
pop
sbb
inc
and
mov
sub
cmp
mov
js
sbb
les
sbb
mov
jns
test
clc
nop
sub
scas
mov
into
daa
sbb
sub
add
les
push
shrb
sahf
jl
cmp
out
or
dec
sub
add
or
add
mov
dec
incl
int3
and
adc
stos
bound
enter
subl
push
jb
inc
filds
movsl
inc
add
imul
sbbb
cld
cmp
rcrl
loop
mov
dec
hlt
mov
addr16
mov
add
jl
push
pop
fldenv
cli
jbe
sub
xchg
imul
jle
jo
add
push
push
push
jecxz
sbb
pop
push
out
in
push
popa
add
add
shl
call
xchg
pop
add
sbb
push
or
or
test
bound
in
mov
fistpl
nop
loope
push
test
addb
add
and
out
lock
adc
jmp
faddl
mov
es
out
nop
xor
sub
pop
add
add
mov
dec
add
mov
pop
dec
push
xor
add
out
xorl
loopne
inc
enter
fnstenv
or
adc
mov
xor
test
adc
fisubrl
pop
shlb
inc
or
in
pop
xor
push
nop
sub
ret
cmp
cltd
add
arpl
xor
push
in
es
mov
mov
adc
rcrl
dec
add
fcomps
ja
add
add
cwtl
inc
and
cmp
orl
sbb
imulb
daa
mov
push
or
xchg
dec
cs
lock
lock
daa
movl
push
lock
adc
and
pop
aam
cmp
dec
in
add
cltd
ficoml
lret
add
push
in
pop
mov
or
push
je
adc
addr16
repnz
pop
dec
cmp
mov
cmp
les
add
insb
dec
adc
lods
mov
pop
push
nop
out
add
add
leave
rolb
pop
sub
jne
adc
daa
dec
sbb
icebp
imul
outsb
rorb
aam
insb
daa
adc
cmc
nop
test
xor
cmpsb
xchg
mov
test
sbb
jg
jg
nop
pushf
sub
lahf
add
xchg
push
jns
lods
sub
faddl
sbb
push
add
xor
movsb
mov
andl
add
and
addb
scas
push
sbb
mov
push
mov
adc
mov
xchg
xchg
jne
xchg
adc
aad
hlt
jno
loope
jae
cmpsb
stos
adc
or
add
add
add
jns
iret
ds
add
add
mov
push
push
bound
call
call
mov
in
xchg
adc
es
cwtl
movl
mov
xor
push
adc
fwait
xor
adc
pop
xchg
xor
mov
nop
sahf
and
or
add
push
or
aas
sub
adc
push
push
mov
fs
and
add
adc
or
or
mov
mov
mov
dec
push
sub
cs
lcall
add
adc
or
loopne
rcll
inc
or
adc
cmp
cmp
aaa
or
stos
or
xor
inc
inc
or
cmpsl
or
mov
inc
add
aas
mov
xor
add
lea
mov
add
leave
add
adc
lret
add
and
inc
push
lds
int3
xchg
popa
pop
rolb
mov
sbbl
pop
inc
cmp
xchg
cmp
dec
divb
cmp
sbb
pop
lods
add
push
scas
xorb
push
lods
popf
lods
aam
sbb
jne
inc
mov
insl
mov
adc
push
mov
mov
pop
push
cmpb
mov
sbb
shr
sbb
and
and
cmp
add
or
add
addr16
cmp
dec
repnz
push
arpl
jp
or
jno
test
pushf
cltd
adc
addr16
fidivrl
xorb
dec
add
test
lea
cmp
gs
xor
aam
out
sbb
arpl
inc
mov
sahf
add
xchg
fs
mov
mov
add
mov
inc
ja
mov
xchg
lret
sbb
aam
sbb
xor
ret
mov
pop
fs
push
jl
mov
jne
fldl
fucomi
push
push
mov
mov
push
fmull
out
push
or
or
push
cmpsb
add
jge
pop
push
push
cmc
add
dec
ret
repnz
add
or
or
adc
push
xor
lock
mov
cwtl
ret
jbe
imul
and
inc
imul
ja
mov
xchg
add
dec
pop
test
pop
mov
sbb
mov
jmp
xor
lahf
movsl
mov
pop
in
ds
or
dec
fsts
inc
push
bsf
cmp
pop
add
add
sbb
mov
test
inc
xor
push
inc
mov
addl
daa
in
dec
cli
pop
notl
mov
fsubr
xchg
mov
cmp
jbe
jns
jbe
fadds
gs
inc
test
add
cwtl
mov
inc
sub
add
pop
add
popf
aam
push
cmpsl
mov
test
dec
arpl
and
add
add
dec
push
orb
mov
call
sub
lret
pop
call
leave
lds
decl
and
pop
add
jmp
test
mov
inc
adc
jle
outsb
mov
xor
sub
xorl
cld
decb
adc
jl
shr
and
cli
inc
jl
or
sbb
ljmp
int
popa
jp
adc
cmp
cmp
je
mov
mov
mov
inc
jmp
movb
mov
push
adc
cli
fs
pop
idiv
repnz
ljmp
cmp
enter
pop
lret
movsb
cli
shrl
nop
inc
leave
or
sbb
imul
test
cs
jb
inc
mov
jle
or
fwait
das
sbb
mov
cmp
clc
loopne
shr
add
or
dec
or
test
inc
push
lock
mov
hlt
incb
adc
sbb
mov
mov
iret
cmp
mov
imul
cmp
daa
cmp
sbb
cld
clc
ret
push
lock
push
cmp
push
pop
sbb
mov
cwtl
xchg
neg
enter
xor
cmpsb
pop
aas
mov
dec
lcall
nop
dec
gs
rolb
adc
pop
mov
out
fcompl
pop
adc
xor
or
fidivrl
mov
dec
or
sbb
sbb
mov
xchg
or
sbb
pop
mov
xchg
jo
movsl
fsubr
pop
xor
push
lahf
dec
rcrl
or
jl
cmp
xchg
adc
xchg
scas
pushf
mov
inc
enter
and
push
lods
push
adc
stos
adc
movb
push
push
pop
mov
sub
adcb
aam
imul
ds
pop
adc
loop
adc
push
jl
cmc
xchg
stos
daa
mov
imul
inc
fisubs
jl
mov
into
insb
pop
or
psrlq
cs
enter
sarb
enter
xor
bnd
sbb
push
leave
lods
xchg
pop
mov
repnz
call
pop
sbb
fcmove
sbb
inc
sbb
mov
sbb
sbb
out
push
jns
repnz
push
push
jae
adc
pop
dec
imul
int
dec
cwtl
and
int
jbe
xchg
mov
mov
sbb
mov
jbe
in
xchg
cmp
imul
mov
cs
aad
and
xor
lods
mov
iret
in
mov
in
xchg
sbb
jo
add
sub
pop
jb
daa
jns
ret
dec
jle
push
insl
sub
sub
sub
sbb
inc
inc
adc
dec
jb
and
and
xchg
pushf
inc
mov
leave
cwtl
dec
nop
pop
es
pushf
dec
mov
fdivrl
adc
lods
leave
jo
lods
jb
jb
pushf
xchg
mov
cltd
in
test
popa
and
ljmp
les
and
enter
ja
aaa
adc
outsl
fwait
in
xchg
add
dec
sub
xor
sbb
pop
cmpsl
pop
subb
in
mov
mov
xor
or
rcrb
cmpsl
iret
xor
inc
jo
ret
inc
sti
xchg
dec
jb
fadds
push
rclb
push
pop
xchg
loopne
test
jmp
xchg
pop
inc
push
fldz
outsb
data16
mov
int3
clc
add
fmull
lock
scas
fildl
imul
jl
faddl
in
mov
inc
loopne
loope
adc
xorl
sbb
stos
leave
dec
xor
es
in
dec
sub
ljmp
pop
enter
jbe
movsb
pop
push
fiadds
shll
xor
mov
cwtl
xor
lret
pop
push
stos
sbb
shrb
aam
fcoms
in
shl
cmp
insb
test
scas
xchg
ja
in
push
add
mov
mov
jns
xchg
in
jecxz
fsubs
xchg
out
lret
push
inc
sbb
push
ret
enter
les
xchg
push
dec
in
lret
leave
xadd
adc
lock
mov
imul
pushf
pop
rorb
adc
js
or
xchg
fmulp
int3
push
and
or
adcl
sbb
xchg
sub
mov
mov
pop
jp
fs
add
adc
icebp
nop
dec
repz
sbb
mov
ret
push
mov
das
test
sub
popf
add
inc
xchg
fsubp
or
sub
pop
movsb
cmpsl
mov
sub
ss
push
lcall
test
xor
mov
and
mov
push
pop
sbb
movswl
mov
cmpsb
xchg
inc
mov
add
add
pop
inc
inc
pushf
add
icebp
push
xchg
inc
add
pop
or
xor
and
jmp
mov
sub
popa
out
jle
in
out
shl
jmp
ror
cs
push
hlt
xchg
insb
or
test
xchg
push
sbb
jno
nop
cwtl
adc
sub
js
mov
loopne
and
in
adc
push
shufps
adc
push
ret
sub
shr
std
test
pop
adc
aaa
or
loopne
push
pop
and
push
ljmp
loopne
add
aas
sub
jle
cmp
mov
sub
cmp
ja
loope
sbbl
inc
in
loopne
push
push
jge
fldl
sbb
push
mov
push
pop
cmp
push
push
lds
and
push
cld
das
sub
decl
mov
adc
xorl
fcmovne
cmp
aam
sub
shrb
lods
xchg
mov
adc
or
pop
cld
jo
mov
pop
incl
and
test
jl
arpl
rol
mov
sahf
or
shll
mov
mov
sbb
scas
pop
lcall
xchg
ror
in
and
adc
or
cmp
aaa
mov
out
inc
or
pop
adc
push
sbb
push
popa
fadds
jmp
adc
fidivl
cmp
ljmp
sbb
dec
repz
xor
sbb
es
add
sbb
cmp
push
ss
out
mov
fidivrs
js
call
outsb
lods
jne
iret
push
movb
lea
aam
pop
in
loopne
xor
sub
or
xchg
das
lods
cmpsl
fmull
rcrb
add
and
xchg
je
int3
rcll
mov
fmuls
add
xchg
and
aam
xlat
dec
stos
inc
pop
fucomp
adc
pusha
sub
aad
dec
out
fiaddl
sub
sub
in
push
sbb
clc
push
push
rolb
push
pushl
xchg
sbb
inc
test
dec
loope
xchg
xchg
sub
push
bound
rcrl
call
outsb
push
xchg
fwait
push
inc
xchg
fcompl
es
pop
leave
inc
ret
popa
ljmp
pusha
xor
leave
mov
sbb
shll
rcll
rclb
inc
pop
je
or
mov
dec
push
sbb
mov
inc
add
in
xor
cmp
fidivrs
or
xor
les
cmp
and
inc
cmp
add
push
cwtl
scas
loopne
pop
or
mov
inc
push
ret
pop
jle
push
sbb
and
xor
aam
mov
inc
push
and
inc
pop
loope
add
scas
or
and
test
repz
test
mov
adc
mov
insl
jmp
rol
cmp
imul
iret
or
cmp
rcrb
in
cmp
pop
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
and
xchg
pop
adc
hlt
into
mov
dec
jg
pop
jo
pop
dec
leave
jo
dec
or
pop
xchg
stos
lods
leave
mov
dec
cmovae
outsb
out
ja
loope
sub
adc
and
js
in
into
jnp
add
ss
addb
cmpsl
cli
add
push
cmc
or
jno
lret
sbb
jp
hlt
or
cmp
je
sub
cmp
dec
ret
movsb
xchg
in
sbb
mov
push
sbb
imul
push
cmp
in
cmpsl
in
xor
les
repz
mov
pop
jmp
add
xor
add
mov
mov
add
add
cld
push
adc
xorb
stos
inc
popa
ljmp
add
or
sbb
lea
dec
outsb
or
test
or
outsb
leave
add
xchg
int3
inc
iret
pop
jne
jbe
mov
jp
scas
jle
mov
push
rol
out
loopne
scas
or
push
cmp
sti
call
mov
push
cltd
xor
call
inc
ret
addr16
scas
dec
movsb
mov
mov
inc
push
lods
and
jne
xchg
loopne
mov
nop
out
ds
cmp
nop
or
test
aaa
push
mov
sbbl
adc
and
rcrb
cmp
pop
icebp
lea
push
mov
imul
or
or
pop
sub
fld1
arpl
jg
sti
insl
imul
test
lods
xor
mov
push
or
test
cwtl
inc
sbbb
sbb
cwtl
fcoml
test
inc
daa
adc
stos
daa
adc
push
icebp
aam
outsb
push
mov
in
inc
pop
xchg
add
ret
push
arpl
jbe
push
out
cmp
pop
or
outsl
or
add
insb
iret
out
adc
rolb
cwtl
or
lods
fwait
dec
lods
adc
sbb
mov
test
icebp
inc
cmpsl
test
push
and
adc
adc
es
or
fildll
inc
pop
adc
repnz
dec
adc
or
inc
fsubs
mov
daa
push
cwtl
pop
sub
inc
lods
int
adc
adc
addl
loope
jge
jbe
mov
cmp
lret
mov
test
mov
es
jo
fwait
aaa
jecxz
dec
xchg
daa
push
in
inc
sub
or
or
dec
loopne
dec
inc
addr16
push
int
mov
xchg
sbb
add
data16
lret
jecxz
or
dec
lfs
mov
mov
xchg
add
xchg
pusha
ljmp
jo
lods
mov
rcrl
out
add
faddl
jne
mov
mul
mov
push
add
push
cltd
jb
push
adc
inc
loope
mov
pop
mov
pop
sub
mov
in
mov
pop
push
cmp
push
or
call
cmpl
jne
inc
cmp
jb
dec
push
mov
stos
push
dec
mov
jp
or
test
sub
jne
inc
cmp
jae
mov
sub
call
daa
rcrl
loopne
mov
jmp
xchg
xor
sbb
xchg
xchg
movsl
loope
mov
and
fwait
jne
add
ficoms
push
faddl
xchg
inc
mov
repnz
sbb
or
pop
pop
pop
lret
inc
adc
sbb
or
inc
mov
and
sub
fstps
insl
cmp
push
arpl
loope
jbe
and
sub
sbb
lcall
das
test
sbb
mov
cli
cmpsb
xor
cmp
cs
idiv
pusha
pop
push
inc
lods
xor
out
pushf
xchg
in
divl
xor
sbb
push
push
or
imul
imul
ret
xor
push
mov
push
test
push
mov
cmp
cmp
pop
dec
pusha
or
add
jmp
mov
insb
cmp
push
cmp
push
push
sbb
xor
sbb
or
inc
fs
dec
adc
shlb
xor
mov
fwait
jnp
pop
inc
jmp
and
in
pop
push
in
or
addl
mov
lcall
pop
add
mov
sub
adc
push
test
decl
inc
jb
inc
loope
push
rorb
mov
adc
idiv
push
sub
sbb
cmp
inc
insb
xchg
xchg
pusha
or
adc
imul
xchg
roll
adc
jne
and
ss
sbb
push
sub
push
xchg
inc
adc
pop
punpcklbw
xchg
add
stc
sbb
or
shll
loope
push
pop
aaa
or
inc
bound
push
or
cmpsl
lahf
cmp
sbb
cmp
sbb
fs
dec
cmp
inc
add
cmp
or
xlat
push
lcall
imul
inc
bound
int
iret
xor
xchg
sbb
stos
dec
inc
add
pushf
inc
sub
push
cs
dec
or
pop
out
lret
in
xor
lret
or
cltd
jg
push
movl
inc
jmp
jb
add
jl
pop
dec
fstpl
out
test
mov
orl
in
and
popf
shrb
cmp
mov
mov
xchg
cmpsl
add
cs
shrb
xor
and
cmp
fidivrs
outsl
and
add
enter
shr
add
leave
pusha
loope
sbb
add
fs
and
popf
nop
ficoml
push
movsbl
test
stc
mov
xchg
adc
inc
jno
fsubrs
ja
in
lods
inc
pop
add
cmp
pop
sahf
out
jne
inc
and
dec
lods
inc
push
insb
addr16
dec
cmp
or
loopne
testb
stos
adc
add
or
or
das
or
inc
sbb
or
lea
or
add
scas
or
add
cmp
adc
pop
push
repnz
dec
into
and
or
xor
lock
dec
cltd
inc
adc
cmp
nop
out
sub
mov
cwtl
nop
mov
mov
xchg
and
mov
movsb
shufps
jns
inc
dec
jnp
inc
mov
sub
adc
sub
mov
adc
imul
pop
gs
orl
psrlw
popa
or
push
aam
or
xchg
dec
ja
in
std
sub
jo
repnz
rcrb
punpckhbw
mov
xor
xor
sbb
xor
or
pop
adc
shrl
loope
add
mov
sti
mov
or
sbb
dec
or
inc
sbb
testb
inc
sbb
es
dec
add
or
ffree
jb
popa
jae
push
inc
mov
sbb
push
loope
imul
cmp
daa
pop
test
push
cmpsb
pop
mov
aaa
sbb
test
and
cmpsb
jbe
and
movsl
inc
xor
insb
in
shrl
insb
dec
mov
jne
scas
scas
sbb
repnz
and
adc
out
daa
iret
addl
jns
lods
xor
sub
inc
fcoml
and
and
fwait
dec
add
loope
pusha
adc
test
adc
jnp
test
pusha
or
and
lcall
iret
rclb
loopne
cmpsl
and
scas
loopne
mov
rorl
sbb
shll
xchg
jo
in
sub
shll
or
icebp
icebp
mov
sub
shrl
adc
rol
push
pop
push
es
jmp
lds
sub
cs
xchg
div
daa
leave
jno
addb
stos
pop
mov
add
push
sub
daa
dec
fsubl
ds
in
add
loop
push
js
shl
pop
lods
jns
jecxz
ds
mov
pop
stos
pop
sbb
in
or
sub
add
in
scas
add
push
je
push
aad
xor
sbb
cmc
sub
aam
mov
lods
je
pop
xchg
divl
mov
loopne
out
rclb
shl
and
test
or
cmp
enter
pop
inc
and
pop
add
dec
sbb
dec
inc
push
cmpb
stos
push
and
push
or
cmp
addr16
dec
ss
pusha
adc
addl
scas
adc
jmp
inc
loopne
cmpsl
adc
push
dec
pop
push
ja
subb
and
fiaddl
pop
dec
mov
or
xor
mov
ljmp
xor
add
ss
cmp
rorl
inc
in
cmpsl
aad
decb
adc
fisttps
pop
sbbb
movsb
ret
clc
jbe
pop
into
push
xor
push
sahf
clc
mov
imulw
cmpsb
lock
xor
cmc
pop
mov
lret
jne
aam
push
das
and
xor
add
loopne
sbb
adc
jecxz
shlb
fwait
dec
movsl
or
push
dec
add
arpl
leave
pop
mov
lods
cld
rorl
inc
push
outsb
das
ja
jmp
mov
inc
xor
lods
add
and
adc
sub
fsubl
xor
fildl
inc
add
cmp
push
ds
adc
cld
sbb
mov
and
adc
adc
mov
repnz
cmp
pop
push
jnp
rcrl
push
ss
movsb
rol
push
or
loopne
cmpl
xor
xchg
and
mov
fiadds
sbb
fimull
and
jmp
cmp
cmp
push
mov
mov
push
mov
clc
fisubs
sub
sbb
or
pop
add
jg
sbb
dec
push
mov
sub
mov
pop
mov
inc
jmp
mov
addl
sub
mov
mov
movsb
loopne
dec
adc
pop
push
pop
dec
pop
psubw
gs
addl
cmp
sub
jmp
fsubrl
adc
mov
push
mov
pop
xchg
ss
or
loopne
orl
sbbl
mov
test
mov
cli
push
lea
mov
or
lds
cmp
jb
ljmp
push
outsb
clc
cmpsl
xchg
cmp
or
out
fildl
dec
and
inc
add
xchg
xchg
cmpsl
or
xor
jl
jo
pop
push
jne
mov
mov
repz
cltd
and
xchg
lcall
mov
mov
movsl
sbb
enter
inc
dec
or
jge
jo
sbb
push
or
add
push
lock
jle
cmp
jo
push
xchg
rcrb
hlt
and
dec
or
fildl
or
inc
push
sbb
dec
test
xchg
rolb
enter
es
fildl
hlt
add
andl
and
xor
xchg
js
mov
push
push
jb
and
test
scas
flds
fs
xor
mov
outsb
add
pushf
insb
sub
cmp
loopne
lea
cli
rcrb
testb
movups
adc
and
and
adc
dec
cs
add
and
dec
cmp
push
inc
dec
pop
call
out
or
sbb
jne
xchg
pop
int
pop
xor
xchg
mov
xchg
or
xor
nop
lcall
repz
or
add
cmp
add
push
push
hlt
dec
pushf
dec
aam
popf
pop
add
push
add
cmpsl
nop
rorb
mov
shrl
frndint
xlat
push
push
sub
enter
lock
sub
push
add
test
dec
add
bound
mov
test
and
aaa
sahf
add
pop
and
mov
fmuls
mov
sbb
clc
pop
adc
popf
test
add
popf
loopne
sahf
es
mov
mov
cmp
xchg
xor
jge
or
shlb
nop
call
sbb
mov
add
jge
rorb
or
cmp
jb
fiaddl
and
sub
jp
test
and
ds
mov
loopne
add
pop
shlb
test
adc
sbb
adc
xchg
insl
incl
scas
insb
pushl
xor
loopne
adc
add
mov
sub
jo
fisubrs
push
push
out
sub
out
mov
ret
stc
dec
nop
pop
ret
dec
dec
dec
jae
lods
cmp
in
pop
sbb
sub
mov
inc
or
cmp
jae
inc
jmp
dec
inc
pop
cmp
mov
decl
jno
mov
pop
add
mov
xor
mov
cmp
mov
and
adc
mov
xor
scas
jg
popf
xchg
add
adc
or
add
in
or
adc
mov
push
push
adc
loope,pn
adc
and
lcall
testl
leave
nop
mov
in
loopne
cs
adc
and
adc
mov
pop
pop
push
arpl
add
test
dec
mov
loopne
loopne
sub
add
mov
inc
pusha
or
mov
stos
or
mov
fs
inc
in
mov
inc
dec
movsl
leave
xchg
into
xchg
testl
js
fnstenv
insb
or
test
imul
mov
dec
or
icebp
or
loopne
enter
mov
xchg
push
js
jnp
adc
mov
dec
inc
pushf
lret
pusha
dec
dec
and
sub
lret
jbe
out
mov
imul
fdivs
xchg
cmp
mov
addl
mov
test
pop
cmp
cmp
cmc
adc
add
pusha
sub
jnp
push
mov
add
xchg
sahf
mov
popf
or
mov
push
outsl
adc
ja
jnp
data16
setge
jge
fdivrl
lahf
je
insl
add
lret
dec
dec
xor
aam
sbb
arpl
dec
cmpsl
rcll
shll
sub
jne
movsl
movsl
add
scas
loopne
test
add
push
and
in
cmpsl
inc
in
lock
push
decl
xchg
arpl
mov
rorb
or
inc
sub
mov
addr16
push
adc
jmp
or
push
loopne
in
lahf
lea
push
push
test
dec
out
push
or
in
in
aaa
xchg
dec
movsl
jmp
jmp
rcrl
lods
fsubrl
jbe
jmp
rorl
xchg
or
cmpb
or
push
mov
pop
cmc
xchg
shrb
jno
push
mov
fcompl
insb
loopne
push
scas
mov
rcr
pop
xor
fisubl
sbb
icebp
add
mov
mov
or
push
push
mov
int3
ret
xchg
mov
lea
inc
sbb
ror
neg
mov
dec
mov
pop
sub
mov
mov
mov
or
mov
lcall
mov
xorl
sbb
cmp
cmp
out
cmp
jbe
cmp
jbe
mov
sbb
xor
pop
lea
add
mov
cmp
ds
mov
sub
push
push
cmpb
outsl
add
sti
fiadds
mov
inc
sub
sbb
pushl
nop
fdivr
cmp
outsb
ja
xor
ffreep
jne
push
aad
fistps
ss
push
decl
into
mov
scas
loope
jge
pop
push
jmp
push
sub
xor
push
jle
mov
out
sub
ret
cmp
jb
fmuls
stos
mov
or
or
push
cmp
pop
dec
mov
mov
nop
and
push
cld
add
push
mov
cli
jbe
pop
xor
or
pop
arpl
sbb
push
sbb
or
pop
jl,pt
in
nop
sbb
mov
jbe
or
loope
mov
pushl
push
push
add
xor
adcb
and
adc
repnz
lods
pop
jge
or
movl
ret
int3
inc
nop
dec
outsb
adc
ret
js
inc
lea
add
push
sar
movhlps
xchg
clc
lea
cmp
cmpsb
imul
or
mov
ss
nop
dec
rolb
repz
cmp
or
clc
add
lock
xor
or
push
and
fisttps
jl
rcll
lea
dec
or
xchg
lahf
mov
lret
mov
popa
push
jp
xorb
sarb
sbb
or
subl
lret
and
push
mov
fstpt
jmp
dec
mov
int
nop
pop
ss
sbb
push
ss
and
rorb
popf
inc
js
push
mov
inc
or
cmp
mov
adc
and
inc
mov
cmp
jne
mov
add
ret
mov
cmp
jmp
xchg
mov
nop
xor
or
and
pusha
test
in
or
and
sahf
dec
out
mov
jae
clc
in
lcall
pop
and
loopne
out
loope
test
scas
adc
push
mov
and
sahf
je
mov
scas
push
xor
sub
loope
adc
jne
pop
loope
mov
add
mov
aad
enter
push
in
andl
mov
mov
add
add
subl
in
test
roll
mov
jmp
mov
insb
sbb
push
push
xor
and
lods
mov
cmp
inc
mov
lock
aas
jg
jbe
out
or
xor
addr16
jge
and
dec
clc
xor
inc
lea
filds
jne
jnp
adc
daa
lret
jmp
inc
pop
loopne
aam
sbb
push
cmp
dec
jg
adc
add
cltd
add
sub
mov
pop
rolb
andl
js
xor
add
loopne
xor
cmp
xchg
hlt
cmpsb
sbb
jne
sub
push
sbb
mov
jmp
lock
jnp
inc
push
push
jno
dec
mov
divl
xchg
dec
mov
mov
or
lock
mov
and
lea
add
mov
std
test
push
push
ja
inc
push
xchg
or
sub
mov
add
pop
leave
inc
bound
cmp
mov
das
mov
and
xor
add
push
add
sub
das
mov
pop
mov
push
clc
fbstp
pop
sbb
pop
inc
js
popa
push
sub
mov
push
jne
inc
jg
test
sub
push
cmp
fwait
cmp
jne
mov
pop
mov
loop
sub
adc
shrb
mov
sub
dec
inc
jnp
adc
les
mov
cmpsb
int
les
out
lea
xchg
out
cmpb
movsb
jo
loopne
mov
ret
mov
inc
fdivp
incl
dec
adc
fsubrl
dec
outsl
sub
sbb
or
test
sub
and
mov
ficoml
mov
push
testb
add
mov
jp
es
inc
push
sub
push
sbb
jmp
cmp
push
adc
fiadds
orb
stc
out
lahf
je
push
adc
pop
clc
jne
loopne
pop
sbb
or
out
jmp
cmpl
jge
dec
in
sub
xor
and
pop
push
sub
fisubs
out
daa
push
shrb
mov
rcl
jne
inc
and
cld
adc
pop
pusha
or
ljmp
or
jbe
arpl
out
aas
fwait
lahf
xchg
pushf
int3
sbb
push
push
idivb
or
push
dec
or
test
dec
enter
popf
aaa
pusha
sbb
pop
cmp
rolb
sarb
je
sarb
xchg
and
divb
icebp
and
inc
imul
enter
sub
add
ret
adc
sbb
mov
xchg
call
xor
movsb
jo
imul
mov
stos
add
pop
mov
add
add
or
ret
xor
orl
test
shlb
pushf
or
int3
mov
rcll
xor
les
icebp
adc
sub
adc
lcall
push
imull
mov
fsubrl
push
xchg
cmp
pushl
pop
imul
sbb
and
lock
arpl
sarb
aam
push
lods
fsub
jae
dec
lret
adc
mov
jns
ljmp
sbbb
push
jp
jns
je
cmpsb
mov
mov
addb
pushf
inc
pushf
push
jge
aam
fwait
ljmp
jbe
mov
call
cs
test
fisubs
lret
sub
mov
vmread
sub
mov
dec
fsub
fistpll
push
or
insl
shl
stc
fidivrl
cmc
mov
pop
jo
shr
dec
add
sbb
xor
jmp
push
movzwl
inc
mov
inc
cmp
into
cmp
out
cmp
loope
pop
jp
adc
sar
mov
hlt
pop
xor
push
xchg
in
jno
push
pop
cmp
push
or
std
ljmp
pop
mov
mov
adc
arpl
sub
shr
push
lret
push
cmp
pop
adc
aas
xchg
dec
in
daa
in
add
add
movsb
add
push
enter
push
insb
scas
inc
cmp
or
fadd
test
jle
mov
push
loop
hlt
or
cmp
sub
push
inc
stos
pop
dec
fldt
mov
mov
outsl
and
jl
mov
or
pop
inc
cmp
repnz
xchg
jp
dec
add
add
add
pop
cmpsl
fistpll
mov
cld
sti
rep
movsw
push
xchg
or
mov
xor
int3
or
mov
shr
mov
aas
rorb
inc
inc
cmp
jle
movb
or
pop
fwait
adc
push
and
inc
push
inc
cmp
adc
pop
movsbl
xor
dec
push
lcall
add
pop
repnz
jbe
push
cld
je
js
jae
push
push
movsb
xor
pop
mov
imul
mov
imulb
cmpl
or
or
push
xchg
jne
inc
cltd
dec
jae
add
aaa
jge
inc
add
movl
sub
fwait
rep
cmp
xor
cmp
pop
cmpsl
ret
push
lcall
xlat
mov
mov
fisttpll
push
cmpsl
xor
mov
sbb
inc
or
jecxz
insb
cmp
les
or
test
shl
outsl
mov
jo
cmpsb
adc
decb
sbb
inc
lcall
in
loopne
mov
mov
jp
inc
lahf
and
insb
in
and
out
mov
ficoml
pushf
pushf
pushf
mov
push
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
sbb
add
adc
out
test
push
mov
lds
mov
fildl
popa
stos
pop
outsb
pusha
mov
mov
dec
repz
adc
repz
repz
xor
cmp
inc
inc
dec
push
push
pop
cmp
repz
gs
je
cmp
repz
orl
xchg
xchg
pushf
mov
repz
mov
sub
add
dec
incb
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
and
sbb
and
aas
add
test
sbb
sub
fimull
sbb
adc
cmp
push
flds
pop
sbb
outsb
cmp
add
pop
add
mov
mov
jmp
out
pop
mov
or
ljmp
out
jae
sub
or
push
dec
sbb
imul
sbb
ret
incl
in
sub
xor
aaa
mov
test
jle
inc
cmp
jbe
decb
xor
push
mov
push
push
push
xchg
rorl
and
loopne
jge
and
xor
inc
mov
inc
orl
pop
sbb
stc
mov
mov
mov
inc
loope
pop
in
mov
hlt
pop
lock
push
add
sahf
das
add
sbb
push
inc
nop
testl
mov
pop
scas
mov
cmp
cmp
rcrb
out
xchg
jp
push
dec
cmp
in
xchg
xchg
adc
sub
or
adc
das
clc
sti
add
inc
enter
dec
or
mov
pop
dec
adc
test
in
xchg
sahf
sub
test
nop
notl
cmpsl
and
dec
xor
adc
push
sbb
clc
add
cmp
push
pop
mov
int3
enter
mov
sub
push
scas
fmull
mov
lds
cmp
int
mov
add
inc
loop
pop
add
mov
insl
sub
jne
out
mov
test
lock
in
fwait
push
and
adc
mov
add
scas
dec
mov
mov
add
outsl
jmp
push
xchg
cmpsb
adc
xchg
xor
popf
inc
sbb
or
aaa
push
xchg
loopne
sbb
test
pop
sub
or
rclb
ss
arpl
das
fs
sbbl
mov
or
add
movsb
push
jne
mov
pop
or
jmp
aas
dec
cmp
jge
mov
and
sbb
inc
sbb
pop
scas
add
ficomps
pop
jne
imul
movsl
add
aas
inc
mov
xchg
add
xchg
stos
dec
mov
mov
outsl
loope
adc
cmp
mov
sbb
dec
mov
or
xchg
inc
push
mov
jno
insb
push
mov
xchg
mov
je
cmpsl
xor
adc
lock
cltd
aaa
sub
pop
inc
lock
clc
adc
cmp
cmp
push
mov
adc
xchg
push
sbb
sub
adc
adc
adc
mov
dec
pop
or
add
xchg
pop
loop
test
pop
jnp
out
sbb
push
loope
mov
push
jg
cwtl
loope
xchg
sub
je
enter
mov
pop
push
push
sbb
xchg
sub
dec
mov
sub
or
nop
cltd
and
or
roll
or
incb
shll
cmp
movsb
clc
mov
cmp
inc
sub
fcmovnb
adc
pop
push
adcl
aam
ror
in
sarl
push
jmp
dec
arpl
and
adc
int3
cmpb
cmp
cmp
pop
add
in
cwtl
rcll
and
inc
add
mov
xchg
inc
rolb
cmpsb
dec
enter
xorl
shl
ror
int3
xchg
enter
add
push
or
movsb
xchg
adc
mov
fildl
call
mov
xor
int
cmp
jbe
loopne
shrb
ret
ret
inc
xor
pop
je
shl
jne
outsb
fldenv
sbb
push
fwait
or
and
dec
inc
dec
int3
mov
inc
sub
and
ret
pop
pop
push
repnz
testb
aaa
shrl
je
std
or
sbb
cmp
insl
xorl
push
rorl
add
add
inc
cmp
out
add
push
cmp
mov
in
es
cmp
sbb
loopne
dec
leave
and
shl
xor
pusha
rcll
daa
iret
add
and
enter
cmpsl
int3
or
and
sti
xor
push
lock
negl
rcrb
lcall
mov
mov
lock
and
xchg
pop
push
inc
mov
or
pop
push
add
cmp
sbb
mov
mov
and
jno
movsb
sub
adc
aad
inc
ret
call
mov
flds
mov
insl
or
pop
movsl
icebp
fsubrs
inc
rcl
mov
and
jno
es
shrb
test
ret
or
add
fcmovnbe
and
mov
fwait
mov
ret
mov
sub
jmp
jle
das
push
mov
push
xchg
arpl
cmp
outsl
sub
clc
sub
and
fdivl
psllq
add
pop
popa
xchg
jecxz
xor
pop
cmpsb
xchg
sbb
mov
jo
inc
loope
xchg
mov
rcrb
lahf
xor
mov
in
jp
inc
ljmp
xchg
fistl
lods
lods
loopne
push
pop
sti
and
pop
mov
add
dec
pop
sub
inc
adc
inc
sub
roll
in
outsb
pushf
pop
inc
or
jno
add
xchg
je
cwtl
jb
xchg
in
dec
mov
callw
push
stos
pop
sbb
lret
js
fs
in
jmp
mov
cwtl
xor
push
add
push
pop
xchg
nop
rcrl
rcrb
xor
xchg
addb
push
lret
dec
mov
gs
mov
adc
test
inc
mov
test
jle
jle
lock
or
jne
mov
pop
add
jmp
cmp
je
mov
inc
adc
fisubl
jnp
inc
pop
sbb
add
jbe
adc
mov
cld
fisubs
add
aad
lock
in
sbb
dec
je
mov
sbb
sbb
lock
push
imul
inc
repnz
or
icebp
into
mov
cmp
mov
test
add
push
mov
jnp
cmp
sub
es
xlat
adc
in
push
int
pop
or
cwtl
jl
push
sti
mov
cvtps2pi
adc
xor
jl
xorl
sbb
mov
add
pop
stos
pop
mov
push
fsubl
and
mov
xor
adcl
loope
dec
js
or
daa
and
mov
and
push
add
or
jp
push
inc
adc
and
cltd
adc
and
inc
sub
sti
iret
testl
cmpsb
orl
cmp
sbb
sub
xor
jo
in
and
xor
sbb
xor
leave
and
nop
add
adc
mov
sub
adc
jl
add
adc
mov
insb
inc
xor
stos
xchg
ds
andb
xor
shl
inc
fs
icebp
add
or
and
in
or
je
js
jl
cltd
movsb
cmp
push
es
mov
nop
xchg
nop
xchg
inc
push
shl
cwtl
sbb
fs
in
lock
and
cmpl
mov
and
jg
out
pop
outsb
xchg
outsb
xchg
mov
pop
mov
gs
enter
xor
movsb
aam
decl
sbb
and
inc
dec
aam
leave
push
out
clts
cld
dec
test
push
mov
popf
inc
incl
mov
push
fcomi
lea
push
mov
test
popf
xchg
int3
sahf
imul
and
xchg
jb
fmul
je
jl
and
std
add
mov
push
cmp
jl
sub
cmp
push
adc
shl
inc
hlt
cmp
je
dec
jp
jnp
dec
or
adcl
and
cld
clc
inc
xor
andb
fucomip
fmuls
ficoms
inc
sti
lods
sub
pusha
mov
cmp
or
in
or
hlt
push
pop
jl
jmp
out
ss
mov
xchg
addr16
sbb
mov
mov
and
pop
jne
jge
and
xchg
dec
call
adc
jmp
rcrl
mov
and
loope
in
rcrl
int3
sub
lahf
and
pop
das
sub
xchg
mov
dec
mov
les
sbb
push
fwait
dec
lds
xchg
xchg
das
cltd
sub
or
mov
adc
and
clc
cmpsb
cmpsl
fdivrs
push
pop
cmp
loopne
es
in
iret
adc
imul
lret
add
repnz
hlt
filds
sbb
pop
sbb
mov
loope
adc
adc
dec
insb
mov
lods
jle
mov
mov
xor
pop
add
pop
pop
sub
dec
shrb
or
dec
inc
xchg
adc
mov
mov
add
pop
jne
push
inc
pop
inc
enter
lock
cmp
sbb
push
mov
push
pusha
pop
cld
mov
xor
and
adc
jb
push
fdivrl
jmp
mov
or
sbb
lock
fildll
insb
imul
cmpl
xchg
loope
std
ds
inc
loopne
hlt
adc
movsl
int3
add
les
push
int
push
dec
call
loop
jo
rcl
pop
hlt
xchg
adc
push
adc
dec
cwtl
xchg
jmp
mov
or
add
mov
or
jp
push
fcomps
jbe
fwait
push
push
jnp
adc
out
arpl
scas
in
jge
ss
adc
xchg
pop
stc
sub
call
add
pop
push
ret
xor
inc
and
sub
cmp
pop
push
nop
hlt
out
clc
adc
loopne
nop
out
scas
fwait
rorb
sbb
add
sbb
movsb
out
xor
daa
inc
jne
loopne
add
mov
pop
adc
cmp
push
push
out
ss
push
push
mov
pop
neg
cmp
jo
or
or
mov
or
fstpt
inc
xchg
cmp
sub
clc
or
or
xor
push
jmp
or
xchg
test
push
mov
adc
jmp
inc
mov
rorl
ret
cmp
push
xlat
iret
sti
imul
sub
or
mov
add
add
sub
mov
push
ss
rcl
insb
xchg
push
int3
xor
int
push
push
lods
inc
mov
mov
testl
imul
mov
and
inc
mov
mov
sbb
stos
js
aad
in
jne
pop
shlb
add
inc
sbb
add
xchg
mov
popa
or
icebp
cmp
arpl
sub
and
repnz
scas
movsb
jmp
pop
xchg
jle
jne
movsl
pop
mov
mov
movsb
mov
test
into
arpl
sub
dec
add
insb
add
inc
inc
jl
shl
loop
xor
addb
cs
xor
inc
mov
mov
mov
test
dec
es
xlat
cmp
cmp
adc
push
hlt
sub
inc
and
imul
mov
and
bound
mov
mov
adc
xlat
or
or
shr
jae
insl
je
add
cmp
inc
popf
fldl
add
cmp
lock
dec
xchg
lds
push
sbb
jns
add
popa
mov
dec
mov
xchg
pop
fistl
add
push
adc
pop
test
jae
or
xor
sub
ss
pop
js
rol
in
pop
test
shrb
pop
mov
stos
nop
xchg
scas
iret
cmpl
xlat
addb
icebp
add
sbb
jle
ret
loope
sti
mov
mov
mov
daa
mov
movsb
xchg
mov
shl
loop
cmp
repz
dec
push
loopnew
sub
and
lea
add
into
call
inc
sbb
sub
xor
push
lret
xchg
pop
push
popa
mov
cmp
jge
and
xor
inc
push
and
mov
pop
adc
lods
clc
mov
repnz
sbb
lea
mov
xchg
jg
pop
imul
push
push
sarb
dec
sbb
inc
and
or
push
inc
ret
bound
mov
adc
push
push
sub
xchg
daa
push
adc
jl
push
addb
xor
xchg
imul
pop
dec
mov
push
frstor
push
mov
add
faddl
fstl
fldz
fcomp
fnstsw
pop
sbbl
fnsave
pop
fsubr
pop
fisubs
fstpl
insb
inc
cmp
cli
inc
or
inc
int3
flds
cmp
add
test
cmp
mov
fnsave
sub
inc
fcomip
test
pop
or
xor
lock
inc
test
add
mov
sub
ds
push
das
inc
cmp
stos
xor
in
inc
mov
fadds
outsl
imul
fisttpll
mov
xchg
icebp
popa
fwait
mov
jmp
push
mov
call
pop
adc
cwtl
jmp
imul
lods
iret
push
push
pop
mov
xor
mov
int3
push
fisttpll
outsb
cs
imul
mov
pop
sbb
push
cld
fs
lea
adc
mov
scas
inc
adc
cmpb
dec
repz
loop
fimuls
rorl
dec
enter
push
xor
add
cmp
loopne
in
rolb
js
lcall
jo
add
movsl
fmul
inc
xor
stos
adc
dec
sarb
add
lods
lcall
push
jne
xor
clc
push
push
mov
andl
stos
jmp
mov
xor
push
pushf
mov
cli
sbb
orl
and
mov
jnp
flds
int
cmp
movsb
sub
inc
or
aas
adc
outsb
xor
ja
jno
mov
sbb
movsb
push
cwtl
xor
pop
and
and
or
jecxz
mov
js
pusha
enter
shll
xchg
add
cmp
ja
rol
or
arpl
mov
clc
leave
sti
and
push
in
and
ss
mov
out
sub
add
enter
push
movsb
rcr
fdivrl
clc
add
or
aaa
add
test
and
test
xchg
pop
movsb
cmp
cld
push
jns
repnz
jb
push
cmpsb
in
pop
or
dec
pop
jb
cmp
rolb
pusha
cwtl
test
cmp
inc
lock
cwtl
pusha
inc
ret
pusha
adc
cmp
fbld
ss
inc
or
mull
push
pusha
sbb
imul
outsl
sbb
call
pusha
imul
push
stos
mov
or
mov
push
pop
jecxz
lock
pusha
xchg
aam
in
xchg
adc
stc
dec
insl
add
nop
push
cwtl
test
push
pop
fs
mov
stos
add
pushf
xor
scas
es
adc
or
or
dec
add
pushf
es
push
or
movsl
mov
cwtl
sbb
sub
adc
xchg
adc
ret
mov
lock
pop
push
es
cli
cmpsl
push
pop
les
mov
adc
adc
xchg
shlb
js
mov
lcall
and
xorl
xchg
inc
lret
in
cmp
roll
xchg
mov
test
rclb
jne
or
es
sbb
jo
add
pop
inc
movsl
cs
sbb
mov
pop
xor
push
jmp
cmp
call
cmp
nop
cmp
insb
adc
adcb
adc
je
xor
push
imul
je
rcl
fcomp
add
add
and
cmp
add
jbe
adc
add
mov
cltd
repz
or
jnp
inc
jg
xor
jb
xchg
and
cmpps
add
bound
adc
pop
jbe
push
dec
jnp
sub
sarl
xor
pop
js
dec
inc
add
cmp
out
movsl
test
jp
xor
iret
mov
push
push
push
xor
xchg
or
les
or
lea
push
cmp
lret
xor
inc
lcall
sub
in
test
ret
jno
lret
sub
push
ljmp
mulb
rorl
repz
rcl
push
push
aam
mov
add
inc
lods
and
mov
cmp
call
add
out
inc
sub
xor
je
and
cli
inc
jb
push
add
or
in
ljmp
jle
xor
enter
gs
psrlw
sarb
shlb
jl
ret
movsb
sbb
dec
dec
pop
es
arpl
sub
movsb
sub
dec
mov
xor
sub
push
cwtl
jle
dec
xchg
rolb
popf
xor
inc
xchg
cmpsl
push
in
lock
ret
popf
sete
shr
xor
ds
pop
insl
or
in
pop
xchg
add
lcall
test
subb
adc
std
in
adc
add
mov
dec
xchg
pop
enter
xchg
push
sbb
test
adc
rorb
nop
sbb
pop
jp
jns
insb
lods
add
ss
es
add
cmp
cmp
mov
xchg
pop
addr16
icebp
mov
cmp
ret
or
pop
add
ret
jl
ret
bound
leave
test
cmp
test
lret
dec
mov
test
inc
and
jno
call
inc
or
sbb
sub
cmp
iret
add
rcr
call
test
sub
xlat
fidivrs
add
mov
add
jno
xor
push
inc
ss
movsl
sub
or
in
inc
sub
push
stc
pop
add
pop
inc
and
xor
sub
nopl
or
hlt
mov
dec
mov
daa
lock
nop
out
xchg
jge
dec
test
push
inc
rclb
fistl
jmp
pop
insb
out
push
in
mov
sub
in
push
sub
dec
inc
test
jmp
add
inc
cwtl
leave
cmp
fcomip
push
ss
sarl
cmpsl
and
lcall
es
add
mov
ret
sub
and
push
jne
ljmp
mov
push
cmp
adc
imul
in
dec
imul
sub
stc
popf
sub
push
push
fisttpll
and
lcall
xor
sub
inc
add
push
add
gs
addb
inc
xorl
adc
or
or
jae
or
popa
inc
and
mov
das
xorb
inc
rclb
mov
dec
mov
add
loop
xor
pop
xchg
push
arpl
xchg
stc
mov
lods
push
sbb
or
repz
daa
jo
inc
sub
sbb
add
jbe
cmpsb
int3
lcall
and
xor
cmpb
jb,pn
jb
jae
adc
inc
xchg
loopne
cmp
movsl
pop
push
in
and
sub
in
push
inc
loopne
adc
aam
mov
xchg
jmp
sbb
add
or
sbb
cmpsl
pop
incb
or
loopne
repnz
inc
xchg
arpl
add
loopne
outsl
cmpl
inc
sbb
push
aaa
adc
testb
dec
or
fiaddl
jge
push
fdivr
lcall
pop
push
mov
loopne
fcoml
popa
fwait
popa
and
aam
xchg
loop
fsubrs
push
cmp
incl
int
jbe
cs
ljmp
and
das
cmp
inc
gs
int3
dec
push
scas
mov
cmp
shlb
mov
rcll
push
mov
add
lahf
add
es
enter
or
xlat
add
lret
aam
addr16
repnz
test
or
add
mov
adc
mov
mov
into
fisubrl
xchg
arpl
sbb
mov
push
mov
dec
cmp
test
push
aaa
xor
push
or
clc
cmp
in
into
ficomps
xchg
test
mov
lea
xchg
into
mov
or
mov
sub
out
adc
jmp
push
inc
or
sub
aam
out
adc
js
je
xchg
add
pop
sbb
or
mov
and
and
pusha
push
dec
or
push
insb
add
je
subl
xchg
sbb
and
pop
daa
lcall
pop
nop
jo
or
dec
pop
mov
push
clc
push
add
js
cwtl
adc
rcll
mov
pop
inc
xor
scas
inc
mov
ljmp
mov
jb
aam
or
dec
or
cwtl
and
mov
sub
push
sbb
add
push
lock
mov
sbb
pop
xor
push
out
aam
or
push
add
mov
push
inc
pop
in
dec
enter
jle
enter
or
push
cmp
sbb
jge
std
cwtl
jge
shrl
decl
push
push
gs
and
sbb
push
xchg
mov
fs
lahf
pop
mov
jne
mov
mov
push
aam
xchg
mov
push
sbb
jne
repnz
inc
fmuls
mov
sub
repnz
mov
test
repnz
sarl
cmp
rorb
ss
or
and
sub
add
call
or
xchg
lock
push
push
pushf
and
dec
outsb
fisttps
inc
add
loopne
js
ljmp
push
jne
mov
fs
sbbl
xor
clc
clc
loopne
hlt
ja
adc
cmp
lock
xor
or
dec
mov
add
fs
push
inc
in
and
add
and
cli
pop
jl
and
sub
and
outsl
pop
sbb
roll
rcr
xchg
movsb
sbb
pop
sub
js
sbb
je,pn
jle
inc
mov
mov
xor
push
add
popa
loop
jno
sbb
imul
add
mov
push
jl
mov
dec
push
shrl
inc
mov
iret
sub
pop
faddl
mov
mov
mov
pop
pop
movsl
mov
push
insb
mov
or
dec
inc
aas
aam
mov
mov
or
mov
sub
shrl
adc
aas
add
and
ss
lods
jg
outsb
ljmp
sub
lods
or
pop
sub
lea
mov
mov
dec
mov
or
xor
imul
dec
jl
push
mov
lea
js
insb
pop
mov
data16
jp
push
repnz
jmp
mov
scas
push
aaa
enter
jne
fstpl
push
dec
cmc
push
je
adc
mov
je
cmpl
jne
mov
das
clc
adc
mov
cs
shrb
jne
mov
clc
sub
mov
out
popa
fsubs
test
loop
rcrb
adc
test
insl
sub
lods
push
lock
test
dec
push
pop
mov
loop
add
adc
push
xlat
push
push
rorb
es
dec
mov
or
dec
rolb
rclb
push
scas
lods
lock
mov
sbb
shl
xchg
das
adc
in
jl
pop
les
imul
fs
lock
sbb
iret
add
mov
jo
rolb
loopne
xor
sbb
push
or
movsb
mov
push
pop
push
mov
outsl
xchg
enter
pushf
cmp
out
ja
call
mov
sub
mov
mov
jle
xchg
add
pop
mov
dec
adc
test
loopne
mov
xchg
add
stos
sbb
test
mulb
and
rolb
cwtl
dec
lcall
pop
mov
push
ja
xor
mov
stos
rolb
jae
xchg
jmp
mov
push
outsl
add
adc
mov
movsb
ja
or
and
jmp
repz
xor
movsl
dec
sti
ret
pop
mov
jne
or
push
shrb
rolb
lret
jo
adc
jns
dec
or
xchg
add
jnp
cwtl
jl
push
sahf
xchg
inc
aas
aad
lock
adc
xor
xchg
cmp
aam
dec
cmp
call
aas
jbe
jbe
pop
mov
pushf
testb
int3
out
sbb
inc
adc
jb
cmp
dec
cmp
test
inc
mov
adc
shl
jmp
jb
add
sub
inc
xlat
add
loopne
insl
add
mov
mov
mov
cltd
pop
in
dec
mov
or
or
cwtl
sub
sub
popa
or
push
push
enter
pop
pop
xchg
push
mov
cs
gs
xchg
shl
icebp
push
imul
adc
or
inc
cmc
loop
push
fdivs
xchg
pop
xor
mov
sbb
cli
pop
leave
out
cwtl
sbb
jecxz
mov
xor
adc
or
mov
aad
ficoml
lock
inc
in
cmp
mov
sbb
mov
xor
call
loopne
shll
push
push
cs
add
nop
ljmp
call
faddl
in
pop
test
test
xchg
shlb
push
aaa
adc
pop
imul
add
ret
lods
or
aam
int
or
push
mov
cwtl
pop
sbb
sub
pop
dec
xchg
cli
pop
fistl
mov
ret
pushf
and
inc
sub
sbb
jno
push
mov
leave
mov
cmpsb
in
call
loopne
add
cwtl
dec
pop
add
lock
add
adcb
and
push
cmp
mov
pushf
addr16
xor
scas
adc
push
mov
sub
ret
or
pop
imul
inc
mov
sti
lea
mov
and
pop
fwait
cmp
popf
push
jne
jg
fwait
push
push
jnp
pusha
sub
push
pop
cmpl
add
mov
inc
rcl
push
dec
movsb
pop
jl
iret
fildl
and
jmp
sub
xchg
cmp
bnd
inc
adc
sub
add
movsb
sbb
push
mov
or
cmp
mov
mov
insb
xchg
dec
mov
push
mov
add
and
fcmovne
insl
or
cmpb
sbb
xor
pop
mov
xchg
aam
inc
or
jne
es
pushf
adc
xor
mov
mov
push
or
je
xchg
mov
inc
or
test
sub
pop
pop
hlt
orb
sbb
sub
mov
push
push
stc
es
cld
adc
cmp
je
iret
inc
aas
mov
push
push
adcl
mov
cmp
jg
mov
fidivl
imul
cmp
or
push
add
shrl
scas
in
adc
jmp
repz
pop
in
xchg
mov
mov
ljmp
insl
test
mov
outsb
push
mov
iret
sub
xor
pop
mov
push
or
leave
std
push
arpl
sub
jne
inc
inc
jmp
inc
fs
rolb
sub
and
push
push
mov
add
or
fcmovu
dec
movsl
xchg
pop
adc
push
test
inc
out
repnz
in
dec
js
outsb
or
sub
mov
mov
scas
arpl
jmp
push
loop
adc
mov
add
jl
xchg
push
rolb
xor
movsl
ret
int
and
inc
pop
mov
pop
xor
and
ret
es
dec
and
in
or
in
pop
adc
adc
roll
mov
ja
xchg
mov
stos
rcll
adcb
mov
push
sub
movsb
pop
jne
sbb
and
lods
jmp
sub
mov
mov
xchg
mov
subl
mov
push
add
xchg
mov
les
enter
ret
outsb
out
dec
or
in
aam
inc
sub
jo
adc
pop
sbb
push
or
loope
mov
call
push
es
push
mov
clc
or
je
and
xchg
cmp
test
mov
fldcw
into
fidivrs
dec
inc
cs
cs
mov
mov
imul
or
arpl
sbb
cmc
push
mov
test
or
out
dec
pop
pop
push
sbb
push
nop
popf
pusha
loopne
adc
adc
add
xor
mov
push
cmp
push
hlt
mov
loope
mov
mov
add
sub
and
xor
sbb
push
icebp
add
in
inc
into
in
test
pop
call
in
add
aad
add
popf
adc
xchg
xchg
jne
inc
bound
xlat
into
and
ja
jbe
es
dec
in
in
or
mov
sub
mov
and
les
cmp
sbb
sbb
stos
andb
mov
bound
mov
loopne
in
mov
fidivs
frstor
call
mov
cmpsb
loop
gs
or
aas
je
xchg
fidivl
lahf
and
shlb
ss
xlat
xor
test
gs
pop
cmp
push
pop
rcrl
dec
imul
nop
inc
xor
dec
rolb
mov
aad
mov
call
add
or
inc
inc
hlt
inc
in
sub
ret
jnp
mov
es
inc
cmp
adc
xlat
jle
pop
sub
lea
adc
mov
cmp
call
mov
jge
pop
sarb
test
sbb
jl
mov
and
xor
mov
mov
jmp
xor
shr
xor
adc
and
mov
mov
hlt
xchg
cmp
jg
push
push
mov
shr
cmp
jbe
add
jmp
add
mov
sbb
xchg
fadd
pop
and
inc
mov
lock
dec
mov
mov
jl
pusha
fisttpll
leave
movsb
sub
jno
sbbb
sbb
inc
sbb
push
mov
sub
push
sub
add
and
jae
mov
jmp
mov
push
jno
sbb
xchg
mov
cmpl
inc
loopne
push
mov
fcoml
and
add
rol
lret
or
testl
xchg
jnp
flds
push
jb
xor
add
jp
mov
sub
xlat
mov
bound
loopne
mov
ljmp
xchg
xor
inc
es
add
in
mov
adc
imul
dec
xor
repz
les
cmp
pop
mov
nop
or
mul
jmp
dec
inc
mov
inc
cmp
xchg
and
cmpsb
stos
and
sub
mov
ret
sub
sbb
scas
sub
add
jno,pt
cmp
dec
pop
and
pop
lds
mov
dec
jg
sbb
pop
pop
push
mov
movsb
dec
fistl
adc
or
and
cmp
jge
cmp
sbb
jb
js
pop
pop
add
mov
sub
sub
imul
and
adc
jg
test
rcrb
popf
add
ja
fcomps
push
pusha
popa
or
xchg
jp
loope
or
iret
dec
jmp
ds
sahf
mov
mov
lods
pop
jmp
rorb
cmp
sbb
or
outsl
xchg
xor
inc
sub
sbb
js
lock
and
popa
sbb
mov
adc
add
dec
adc
lcall
xor
pop
push
adc
and
mov
inc
add
ret
or
inc
jl
mov
or
xor
xor
sub
cwtl
imull
das
lcall
fsubrs
cs
adc
mov
lods
ljmp
push
or
mov
xchg
aam
ljmp
fimull
sub
jns
pop
js
out
jp
and
xor
mov
jl
mov
insl
test
ret
int
adc
je
xor
mov
cmp
mov
cmp
sbbb
cmp
mov
adc
cmp
and
adc
sub
sub
push
bound
sbb
test
lock
adc
mov
inc
or
popa
xlat
sbb
jbe
aad
push
sub
adc
scas
push
clc
cmp
jne
mov
lods
add
hlt
jmp
mov
rcl
push
add
add
jns
in
and
push
xchg
dec
and
inc
dec
dec
xchg
test
movsb
push
push
dec
es
pop
dec
mov
adc
xchg
inc
adc
adc
sbbb
pop
xor
push
dec
sub
test
je
pusha
pop
push
pop
fcoml
adc
or
push
cwtl
enter
xor
bound
add
xchg
adc
popf
add
lret
xchg
push
jecxz
push
jno
pop
add
mov
pop
jae
mov
add
clc
sarl
push
sbb
sub
fildl
and
and
inc
pop
cmp
pop
cmp
scas
mov
inc
xchg
ret
push
mov
or
les
mov
dec
out
adc
adc
jns
cwtl
cmp
jl
inc
andb
sbb
xor
call
mov
push
sahf
ret
cs
daa
xchg
sub
push
cwtl
sub
cltd
jb
fbstp
add
push
mov
adc
repnz
push
sub
call
je
mov
hlt
lods
dec
dec
add
lahf
mov
sub
mov
inc
add
adc
in
pop
mov
sbb
push
call
mov
or
sub
push
xchg
or
ret
mov
add
xchg
andb
xor
jge
add
cmovnp
inc
hlt
les
pop
pop
jne
dec
add
das
inc
push
jge
push
es
pop
dec
lods
adc
nop
push
inc
mov
movhps
cld
push
push
shld
lods
sub
adc
es
mov
cmp
test
inc
sub
dec
rclb
jne
sub
daa
imul
push
pop
in
sbb
xchg
lret
in
lods
repnz
hlt
or
lods
dec
and
adc
loopne
mov
outsb
add
xor
fsubs
icebp
dec
and
lcall
mov
cmpsb
adc
call
jne
sbb
adc
push
adc
in
popf
lret
push
cld
ficompl
inc
hlt
xchg
jg
sub
outsl
adc
dec
xchg
mov
cmp
jne
fmuls
scas
push
xor
cmp
arpl
test
lret
jmp
xchg
movsb
imul
jns
cs
ret
fisubs
shlb
add
jmp
xor
push
mov
adc
outsl
and
ret
stc
xchg
add
shl
pop
cmp
inc
adc
jno
xor
push
sub
cmpl
stos
push
inc
movb
lcall
adc
sbb
aaa
add
push
sahf
mov
pop
adc
insb
inc
push
in
rcll
sub
pop
or
xorl
sub
pop
push
cmp
pop
lock
cmp
xchg
inc
repnz
mov
add
mov
call
test
cmp
push
mov
ja
ja
jo
pop
adc
push
or
and
je
add
mov
pushf
jecxz
push
jmp
inc
sub
nop
rorb
sub
pop
enter
push
inc
mov
xchg
push
inc
aas
cmpsb
xor
mov
cmp
out
nop
fisubrs
push
lret
jne
push
cld
lds
push
insl
aas
push
fstpl
inc
imul
sub
dec
mov
cmp
jmp
add
ret
inc
or
aaa
test
orb
inc
out
xor
fs
or
adc
xor
outsb
sub
mov
inc
sbb
push
push
pushf
les
push
movsl
jb
orl
mov
fwait
repnz
xchg
adc
or
sub
push
pop
mov
sub
push
add
pop
enter
addl
or
stos
add
pop
adc
and
imul
rclb
xchg
push
test
sbb
or
xchg
fisttpl
inc
std
jbe
cmp
cmp
incl
xchg
sub
sub
inc
lea
push
cmc
push
outsl
sub
push
add
jns
push
xorb
fwait
mov
mov
xchg
sbb
and
jne
cs
stc
xor
clc
dec
movsb
cltd
shrl
aam
pop
cltd
nop
xchg
cmovnp
cld
in
and
dec
xchg
cld
dec
add
test
jmp
cmp
nop
and
adc
xorl
or
cmp
fdivs
xchg
adc
and
xchg
nop
nop
ret
fs
fs
mov
dec
clc
jbe
push
bound
and
jecxz
bound
push
fiaddl
mov
mov
mov
pop
sub
add
sbb
inc
mov
push
adc
mov
or
sbb
ret
xchg
xor
outsl
lea
sub
and
push
push
cmp
adc
jo
fistpll
out
adc
nop
scas
add
jo
out
push
and
int3
pop
std
push
lahf
xchg
mov
add
ret
lock
pop
mov
push
dec
add
inc
movsl
add
aam
push
mov
imulb
add
add
add
repnz
pop
inc
imul
lcall
cs
push
int
add
add
les
test
xchg
bound
fsub
xchg
jbe
pop
inc
mov
inc
pop
push
sub
cmp
and
push
fbld
xor
xor
inc
push
inc
xlat
pop
cmp
cli
addr16
add
sbb
fs
mov
inc
in
lods
mov
leave
movl
add
or
mov
arpl
lret
push
sub
ss
mov
je
and
push
pop
inc
push
bound
fidivrs
mov
je
push
dec
and
sbb
notl
pop
push
outsl
push
push
insb
aam
cmpsb
jo
jb
aas
cltd
push
mov
popa
push
xor
subb
fisttpll
adc
jbe
adc
inc
nop
int3
mov
adc
subb
inc
inc
loop
mov
ret
jl
icebp
pop
orb
addl
pop
fwait
imul
or
inc
push
mov
add
lock
je
push
cmp
cwtl
mov
mov
dec
adcl
push
or
adc
popa
xchg
or
xchg
jmp
adc
xchg
jmp
inc
and
daa
test
push
add
mov
mov
xor
and
rcl
dec
mov
je
sub
pop
mov
jbe
mov
ja
js
cmp
adc
pop
xorb
push
ds
jbe
sbbb
repnz
xlat
das
push
push
stc
pusha
or
xchg
xchg
or
icebp
mov
xchg
test
clc
mov
mov
negl
je
bound
or
xor
push
sub
or
mov
aaa
xor
sbb
add
push
adc
mov
add
xor
push
test
cld
fdivrs
adc
idivb
xchg
addr16
call
std
jmp
test
adc
push
imul
adc
ret
and
dec
divb
and
add
or
shlb
inc
fsubs
jp
pop
dec
jp
out
mov
and
sub
into
pop
mov
insb
movsb
push
in
movsl
inc
and
or
loopne
adc
inc
in
enter
in
xor
push
push
scas
das
jecxz
ja
push
mov
out
ja
test
nop
push
sahf
inc
int
lock
mov
push
mov
xor
icebp
imul
xor
mov
cmc
ret
test
test
clc
dec
stc
ret
in
out
shrl
sbb
outsb
movsb
and
lods
and
pop
mov
shlb
jo
mov
adc
js
dec
leave
ficoms
and
and
mov
push
sarb
lea
loopne
cmp
sarb
movsb
cmp
call
or
jns
adc
mov
jne
rcrb
add
push
dec
aad
in
push
aad
jo
pop
or
cwtl
push
in
pop
je
jecxz
mov
dec
pusha
mov
rol
mov
ror
xor
call
sti
shr
xor
es
mov
rol
xor
shr
xor
add
add
xlat
insl
ljmp
mov
fs
or
jae
lcall
not
and
xor
add
add
aam
sub
outsb
sub
jge
incb
xor
push
xchg
repnz
cli
fisubrs
repz
add
xor
and
and
xchg
push
aam
add
or
or
xor
xchg
sub
repnz
sub
fmull
pop
sub
lea
or
xlat
ret
rcl
xor
jl
testl
hlt
add
xor
fsubr
sarb
orl
data16
or
sub
ljmp
rol
rol
out
add
jb
xor
push
xor
fdivl
xchg
cmpsb
loopne
inc
xor
sbb
dec
shl
aam
in
sub
sbb
xchg
xchg
bound
cwtl
xchg
xchg
mov
rcll
les
mov
pop
sbb
add
cltd
call
xor
loopne
loopne
mov
in
in
loopne
add
and
xor
pop
cmp
aam
pop
cmp
xor
dec
push
or
or
int3
ss
fildl
rcr
or
push
xor
and
and
lahf
divb
loopne
or
xor
lcall
push
test
adc
mov
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
dec
pop
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
rclb
icebp
ret
cld
lret
inc
mov
lods
push
or
xchg
clc
jo
cli
movsb
inc
jo
stos
adcb
sbb
aaa
cmp
test
call
in
push
inc
shr
shlb
sbb
push
roll
xor
shlb
add
inc
lcall
in
add
lahf
jo
add
imul
inc
and
pop
imul
add
mov
adc
xor
rclb
pop
dec
cmp
inc
or
sub
add
cmp
push
pop
mov
imul
push
int
push
jns
rol
push
or
enter
insb
pop
adc
int
pop
fs
mov
jo
pop
popa
xchg
sub
cs
or
rolb
dec
sahf
mov
lds
shr
adcl
je
dec
xchg
dec
shll
push
lahf
xchg
stc
stc
mov
adc
pop
add
push
xor
fimuls
push
dec
dec
fsubrs
cmpsb
imul
sbb
jo
adc
in
add
and
sbb
and
adc
jl
cld
ja
xchg
out
pop
add
sub
mov
loopne
test
lcall
jg
jle
lock
xchg
add
dec
std
test
pop
lea
pop
xor
mov
xchg
or
enter
sub
or
or
rorb
xor
add
rorb
movsb
pop
pop
adc
rolb
mov
or
sub
push
xor
adc
push
jmp
add
sub
sub
pop
add
fstpl
mov
ret
dec
or
mov
dec
lahf
fadds
loop
ficomps
loope
lock
js
inc
pop
jl
sub
mov
out
sbb
adc
or
push
and
push
fs
adc
mov
inc
add
jae
push
pop
fadds
push
adc
stos
or
mov
or
sbb
push
mov
outsl
pop
loopne
ror
mov
test
ljmp
push
aaa
mov
adc
arpl
nop
imul
xor
cmp
ja
or
call
rcrl
test
ret
push
lods
imul
push
add
push
sbb
inc
dec
adc
pop
cwtl
or
push
inc
adc
lds
xchg
jnp
sbb
and
repnz
jmp
dec
int
jmp
je
mov
mov
ret
mov
mov
cmp
je
or
lock
add
popa
cmp
jne
or
fisubrs
adcl
inc
lea
inc
mov
pop
dec
xor
push
lret
jp
push
movsb
jne
jmp
pusha
xorb
add
sub
out
xor
loop
out
or
mov
mov
and
inc
cmp
fs
dec
inc
push
inc
push
jo
insb
and
mov
or
pop
add
jp
inc
bound
add
out
repz
lock
stos
out
mov
lea
mov
sbb
mov
and
or
cwtl
or
insl
or
add
xorl
sahf
int3
pop
cmp
jne
notb
fucomip
and
cmp
mov
cwtl
aam
dec
call
outsb
add
xchg
in
ja
pushf
sub
sbb
jns
mov
add
push
call
test
and
cmpsb
inc
mov
and
or
mov
cmpsb
out
and
inc
inc
addl
cltd
sub
jb
jb
imul
add
fsubr
lds
mov
cwtl
aas
les
inc
sbb
je
dec
hlt
xor
je
fs
jne
pop
push
rolb
pusha
pop
adc
test
mov
or
add
pop
jae
mov
jmp
dec
shrb
push
xor
pop
sub
xor
push
inc
sbb
xor
push
add
adc
mov
xchg
rcrb
cmp
jg
or
jge
and
fwait
fwait
aaa
and
es
sub
sub
mov
jmp
jmp
cmp
jl
pop
jle
pusha
test
fadds
inc
test
jbe
jp
jb
jl
jle
push
adc
ja
pop
or
je,pn
test
jne
je
mov
and
insb
mov
ljmp
ljmp
mov
je
dec
dec
nop
mov
or
inc
sti
daa
jb
dec
push
push
mov
inc
and
cmp
pushl
fsubr
mov
mov
push
mov
mov
mov
test
cmp
add
adc
adc
mov
jmp
jmp
adc
and
dec
xor
lods
pop
xchg
aaa
ret
insl
sub
popf
loope
mov
mov
out
ficompl
pop
add
sbb
xchg
out
ret
mov
jb
test
sub
xchg
jo
mov
insl
fists
inc
mov
xor
sbbl
inc
lea
jp
xor
jne
add
pop
inc
xchg
loop
jb
sbbl
cmp
mov
xchg
daa
jb
loopne
inc
das
mov
or
rcrb
sbb
pop
cwtl
xor
int3
inc
aam
mov
cld
mov
mov
add
frstor
cmp
push
push
fldt
inc
movb
jae
mov
ret
insl
pop
mov
cmp
sub
rclb
imull
dec
aas
mov
adc
sti
mov
inc
test
out
sbb
jae
mov
or
cmp
push
stc
and
pop
add
je
ds
add
xor
std
in
movb
and
and
lods
dec
mov
movsb
inc
loop
inc
inc
mov
xlat
es
jl
add
cmp
stc
push
sbb
addb
dec
testb
je
mov
or
xchg
mov
fdiv
and
popa
hlt
add
xlat
cld
cld
mov
add
inc
xchg
xchg
pop
and
mov
mov
ds
test
test
add
mov
push
movsl
add
sub
pop
or
mov
adc
jbe
add
fwait
jecxz
dec
adc
mov
pusha
lea
cmp
and
cmpsb
lds
sarb
mov
repnz
movsl
and
mov
push
outsb
sub
mov
xor
sti
shll
sbb
ret
out
xor
mov
lahf
jne
xchg
mov
cwtl
addl
xchg
xchg
push
nop
xor
jbe
xor
or
or
popa
xchg
jne
iret
push
leave
mov
cmp
or
xchg
cmp
and
inc
and
ret
sbb
xor
add
and
push
imul
cmp
call
shlb
jae
shlb
add
aam
popl
xor
arpl
or
xchg
hlt
mov
xor
div
mov
push
dec
fcomps
mov
lock
out
jge
sub
and
jnp
dec
and
adc
or
fdivl
mov
adc
jnp
das
movsb
pop
inc
or
sbb
push
das
bound
push
mov
iret
cmpl
sbb
cmpl
add
xchg
dec
jae
sbb
in
fcomp
sbb
or
and
xor
cmp
outsb
icebp
inc
shlb
cmp
int
add
inc
mov
inc
inc
inc
xchg
adc
call
jge
pop
and
aaa
sbb
test
add
scas
rcl
js
dec
add
andl
inc
fsubr
cmp
lcall
push
push
repnz
push
and
nop
push
jo
in
movsb
or
outsb
insb
jne
jl
sub
into
mov
jp
sbb
call
inc
pushl
sbb
ss
inc
inc
sbb
add
movq
shl
cmp
jne
les
imul
pop
cmp
cmpsb
inc
mov
or
mov
inc
pushl
pinsrw
out
insl
js
push
jmp
test
movsb
push
popa
ja
mov
xchg
sub
js
ja
lods
cmp
xorl
push
xchg
add
and
push
xor
add
add
push
mov
test
add
ret
and
enter
cmp
mov
das
mov
xchg
nop
jmp
inc
push
sbb
ds
in
adc
pop
je
pop
std
mov
push
push
shll
call
aaa
mov
adc
dec
les
andb
mov
imul
pusha
mov
orl
or
jg
sub
cs
lret
xor
cmp
lcall
and
and
clc
add
mov
push
rolb
inc
cmp
ficoml
pop
jb
ds
jecxz
xor
push
jo
rcll
imul
fadds
cltd
and
imul
mov
jbe
outsb
jns
jbe
ja
and
movq
mov
xchg
in
xor
mov
xor
cmp
in
cmp
fildll
adc
xchg
sbb
enter
sbb
and
mov
xor
jmp
push
outsb
orl
sub
addr16
inc
bound
inc
pop
inc
and
cmpsl
loopne
mov
cwtl
mov
stos
sbb
add
stos
jle
lock
add
les
xor
jle
inc
cmpsl
in
mov
sahf
push
int3
sbb
push
or
popf
cmp
mov
fisubl
loope
nop
inc
push
xchg
inc
add
mov
dec
sub
das
adc
add
lods
xlat
sahf
vmwrite
or
add
pop
ret
ficomps
add
or
cmpl
loopne
lea
and
ss
cmp
add
push
cli
xor
sbb
pop
fidivl
sbb
dec
add
sbb
sub
es
test
fdivrs
je
lock
push
movzwl
mov
mov
inc
sub
or
mov
push
mov
sub
clc
jne
lret
sbb
or
xchg
sub
pop
sar
inc
pop
jbe
mov
sub
mov
hlt
xchg
mov
xchg
js
pop
inc
shll
add
cmp
adc
in
sbbb
push
mulb
inc
insl
push
inc
jnp
cmp
mov
cmp
ret
int3
stc
inc
adc
imul
inc
movlps
loop
pop
push
mov
push
xor
pop
lods
sbb
out
jne
int
xlat
aam
orb
inc
add
xor
and
cmp
cli
movsb
and
sbb
sub
jl
js
pop
data16
mulb
push
lock
sub
fdiv
cmp
mov
enter
add
data16
inc
sbb
bound
adc
sahf
insb
push
xchg
mov
fists
movsb
movsb
or
cmp
xchg
and
dec
add
xchg
and
cmpb
dec
pop
repnz
hlt
inc
pop
sub
mov
aam
rcr
pusha
movsb
inc
sahf
add
loopne
add
fisttpll
pop
leave
hlt
xorl
imul
in
in
xchg
lock
and
mov
test
popa
adc
pop
or
xor
loope
scas
dec
cld
les
sbb
adc
jbe
push
and
test
je
jne
lcall
push
or
push
cwtl
inc
pop
loop
jg
jl
add
les
mov
push
sub
mov
faddl
leave
inc
adc
mov
adc
in
movsl
fs
repnz
xor
push
fimull
sbb
push
adc
mov
add
cmp
and
pop
shrb
push
test
movl
test
inc
dec
sbb
sarb
test
ja
adc
inc
add
mov
cwtl
dec
sbb
inc
xchg
js
mov
icebp
dec
and
cld
adcb
int
or
test
in
sub
pop
pop
sub
cmpsb
cltd
pop
pop
pop
shlb
mov
cmp
inc
mov
insb
fwait
in
pop
jp
cmpsl
pop
push
sub
popf
add
bound
scas
pop
inc
stos
push
outsl
lock
xchg
add
or
outsb
or
dec
rcrl
dec
dec
pusha
xchg
nop
pop
fisubrl
mul
testb
adc
mov
mov
or
add
dec
add
loopne
test
insb
fs
lds
mov
and
ss
dec
dec
adc
fs
scas
xor
or
mov
sub
lahf
sbbb
add
pusha
ljmp
ljmp
and
dec
inc
and
dec
fstps
rolb
mov
and
jbe
movsl
pop
or
add
and
sub
jp
add
dec
and
andb
inc
inc
push
inc
add
into
mov
jg
rol
cmc
test
and
scas
loope
js
pushf
mov
mov
and
dec
sbb
cmp
lods
je
mov
inc
cmp
sub
cmp
pop
add
sub
outsl
adc
test
sub
incl
and
sbb
pop
notb
aam
xchg
in
lock
dec
fsubs
add
icebp
cltd
orl
es
test
test
sbb
cmpsl
cwtl
pop
arpl
ja
inc
in
jge
push
and
dec
and
test
fs
xor
or
add
xor
inc
sub
mov
sbb
fldenv
or
cltd
es
jns
mov
cmpsl
xchg
pop
jmp
gs
xor
push
insb
mov
test
dec
add
dec
pop
add
ret
mov
rcrl
inc
repz
push
aas
sti
add
lea
mov
sub
or
dec
jmp
cmpsb
and
sbb
mov
cmp
cmpb
ficoml
push
mov
push
lcall
test
cmpsb
jecxz
push
push
sub
cmp
mov
jo
outsb
add
pop
inc
push
test
xor
mov
in
mov
xlat
xor
stos
or
or
testb
and
or
add
dec
mov
sbb
jbe
inc
pusha
sub
aad
enter
add
incb
aam
sub
dec
inc
jmp
jge
pop
andl
stos
jge
ret
clc
clc
xor
mov
dec
repnz
pushf
push
stos
jnp
pop
add
sub
xchg
push
cmpsb
mov
mov
cwtl
inc
or
dec
shlb
push
pushf
in
xor
add
push
push
pop
xchg
test
adc
in
or
push
mov
or
sub
gs
or
sbb
mov
adc
sub
mov
inc
push
jo
je
cmp
jbe
shll
lds
jbe
ja
fisttps
dec
xorl
xchg
enter
aad
loope
push
push
jp
in
sub
pop
or
xor
inc
pop
adc
push
negl
lret
mov
jnp
test
loope
bound
repz
movsb
jmp
push
jae
sbb
orl
ja
mov
sbb
mov
jl
dec
push
popf
push
mov
or
sbbl
pop
jmp
jnp
cmp
cmp
out
push
add
xchg
out
adc
push
push
cmp
sub
cmp
scas
add
test
fs
mov
mov
dec
or
mov
int
mov
sbb
push
and
shlb
mov
scas
pop
push
push
sbbb
sbb
inc
inc
outsb
mov
pop
outsl
mov
pop
repz
sbb
nop
mov
cmp
jae
push
lock
sti
cmp
iret
jmp
mov
mov
push
pushf
mov
scas
or
or
add
add
inc
loop
add
test
mov
cmp
xor
mov
push
add
push
mov
adc
xor
pop
dec
imul
cmp
or
js
inc
imulb
lahf
mov
fsubrl
push
jnp
or
jle
call
jne
bound
and
ja
shlb
adc
pop
pop
cmp
ret
ficoml
aam
xchg
or
les
shlb
dec
mov
inc
and
and
mov
js
adc
or
sbb
add
and
xorl
rolb
test
mov
or
roll
outsl
mov
mov
lret
jbe
sub
add
add
das
sahf
push
sub
adc
test
mov
pop
xlat
push
mov
fdiv
fcoml
push
jbe
shrb
loop
pop
jb
ret
cmp
jb
std
jnp
or
rcll
push
ret
push
cmp
enter
pop
or
add
or
inc
pop
inc
push
cs
inc
subb
xchg
int
daa
push
adc
mov
les
jmp
lret
clc
dec
sbb
cmp
jecxz
lods
inc
xchg
mov
sub
xor
sub
lods
mov
and
movsl
repnz
or
mov
add
lock
cmpsb
cmp
push
add
xor
or
sbb
push
push
sbb
add
pop
xor
aas
gs
sub
pop
hlt
lahf
add
ret
add
pop
add
add
inc
popf
cld
add
or
xchg
pop
add
jne
sub
pop
mov
jle
insb
jne,pt
inc
jmp
pop
sub
and
pusha
arpl
stos
cmc
pushl
inc
adc
dec
add
inc
cs
idivl
enter
mov
ret
inc
cmp
popa
cmp
adc
sub
push
scas
ret
cmp
inc
mov
sub
dec
pop
cmp
loop
les
dec
je
cmp
or
dec
ret
inc
fcomps
mov
shll
mov
ret
push
out
lea
cmp
loop
out
jge
cmp
sub
lcall
xlat
adc
pop
cmp
dec
movsl
mov
fisttpl
out
test
stos
stc
ja
and
jne
fmul
jb
clc
sub
test
das
jne
mov
add
lock
mov
inc
push
push
mov
pushf
ret
push
loope
or
fwait
shlb
jmp
adc
xchg
mov
ja
push
stos
addr16
orb
lea
loop
inc
xchg
testl
ljmp
pop
or
lea
mov
lds
pop
add
push
and
jl
in
sti
cmpsl
and
push
ss
in
or
push
std
ret
adc
iret
lods
pop
sarb
fistl
dec
or
mov
cmp
adc
or
jmp
mov
aam
inc
add
lcall
or
sub
xlat
xchg
in
sub
sub
jle
or
pop
add
or
and
fisttps
push
loope
adc
fistpll
divl
rorb
pextrw
cmpsb
push
or
jbe
add
inc
pop
mov
push
jo
add
mov
mov
rcrb
ljmp
pop
adc
push
icebp
mov
out
push
cmp
lret
stc
shll
ret
jbe
jb
pop
mov
add
test
cmp
mov
data16
lret
call
push
adc
mov
jl
and
scas
das
hlt
test
xor
dec
push
in
inc
jecxz
pop
xchg
or
xor
xchg
push
insb
scas
push
and
cmp
mov
push
ljmp
das
inc
addb
and
pop
jbe
push
mov
mov
dec
mov
sbb
adc
inc
aam
jne
loope
loop
cmpsl
adc
mov
das
bound
sahf
movsl
inc
push
adc
sub
inc
shrb
or
mov
xchg
pop
xchg
sub
xchg
fs
dec
loope
repnz
mov
js
adcl
cmp
lcall
cmp
add
sub
ja
ja
jbe
je
xchg
stos
lods
jmp
rcrb
sub
push
add
call
mov
push
jo
loopne
pop
push
add
subl
sbb
clc
aad
js
cmp
jge
jae
mov
mov
push
xchg
sbbb
sbb
inc
add
mov
inc
outsl
jge
mov
adcl
xchg
pop
cmp
sbb
std
sub
adc
cmpsl
jmp
push
adc
fnstsw
sbb
imul
xor
push
adc
add
fisubl
xchg
clc
dec
nop
cmp
or
mov
pop
cmp
jl
inc
movb
cli
mov
push
pushf
jmp
mov
pop
cmp
adc
sbb
adc
dec
push
cmp
xor
inc
push
and
mov
shrb
cmp
dec
lcall
jo
xor
jbe
sub
inc
pop
pop
jb
pop
shl
fisubl
add
lods
std
pop
pop
rolb
or
inc
pushf
mov
mov
mov
dec
mov
mov
scas
push
das
aam
jns
mov
xchg
addl
scas
adc
or
test
orb
adc
subl
ret
imul
insb
lea
fisttpl
shl
push
push
mov
ret
inc
test
lock
inc
jmp
in
or
add
or
mov
mov
or
and
ret
mov
push
dec
test
mov
mov
jno
sbbb
lcall
push
test
mov
jl
loope
jns
std
in
inc
xchg
and
inc
mov
add
lret
aas
xchg
leave
scas
arpl
pop
jmp
test
daa
aam
je
pop
stos
push
stos
loope
sbb
mov
fldl
fmul
pusha
loopne
aam
ja
jns
movsl
xor
int
inc
cld
adc
push
rolb
mov
mov
adc
pop
cmovbe
sbb
ret
jle
mov
mov
xchg
mov
sub
test
in
or
roll
and
adc
arpl
mov
lahf
imul
inc
push
xchg
xlat
sqrtps
cwtl
lock
mov
fbld
test
stc
cmp
pop
and
push
push
xchg
and
add
mov
xchg
cmp
push
add
lds
pcmpgtb
dec
mov
gs
mov
jmp
push
or
sti
xlat
andb
pop
jecxz
add
aam
mov
or
mov
aaa
int3
fldenv
pusha
mov
int3
push
leave
xchg
arpl
inc
cmp
enter
dec
mov
adcb
sub
push
add
pop
out
pop
inc
rolb
jl
in
fidivl
jmp
xchg
iret
adc
rcrl
roll
bswap
inc
mov
sarl
mov
pop
lock
arpl
fisubl
sbb
cltd
add
mov
aam
and
add
inc
mov
lret
and
or
popa
lods
xchg
sbbl
ja
push
cmp
pushf
push
push
repnz
xor
mov
mov
mov
jle
sbb
and
je
outsl
cmpl
push
mov
cmp
push
push
add
add
inc
xor
sbbb
pop
sahf
sub
sbb
mov
add
inc
sub
or
jnp
or
xchg
and
shll
inc
cld
outsl
pop
je
cmp
je
mov
clc
mov
mov
or
xor
add
dec
repnz
jl
shrb
fcmovnb
out
inc
jl
inc
jl
jmp
mov
imul
lahf
inc
inc
in
fisttpl
pop
loop
or
sbb
sbb
adc
or
insl
ljmp
lea
orl
mov
jmp
mov
adc
movsl
sbb
pop
icebp
inc
dec
fdivr
aaa
dec
lea
jmp
cmpl
and
push
or
in
mov
fs
andb
mov
mov
jmp
les
and
insl
push
loope
sub
pushf
mov
movsl
mov
adc
adc
xchg
push
std
and
scas
xchg
mov
push
jl
xor
inc
inc
inc
push
dec
push
iret
outsl
mov
push
xor
sbb
pushl
sahf
jle
lods
dec
and
mov
xchg
sub
or
push
or
ss
rorl
inc
lcall
fldl
mov
hlt
pop
add
jl,pt
add
jo
cltd
mov
push
sbb
call
add
pop
mov
out
adcl
mov
pop
sbb
sbb
add
sbb
or
fcompl
adc
js
cmp
mov
sahf
scas
dec
xchg
mov
pop
jl
push
inc
hlt
in
sub
mov
sub
sarl
jns
inc
mov
sbb
sahf
xor
les
or
add
pop
mov
or
rorb
aad
data16
sbb
testb
aam
fucomip
adc
shll
add
in
push
scas
push
subb
xchg
jb
ds
lds
lock
push
stos
fists
xchg
or
lods
ja
push
sub
outsl
xor
cmp
adc
inc
push
shl
sbb
pop
arpl
loopne
inc
xchg
cld
out
and
pusha
rolb
and
add
pop
add
mov
sahf
das
cmp
dec
push
push
adc
loopne
jnp
movb
dec
or
mov
or
sbb
jg
or
sub
or
lods
cmpsb
js
or
test
dec
enter
sub
bswap
divb
clc
rcl
jns
shlb
cmp
pop
push
push
and
jmp
or
mov
jnp
dec
adc
andl
mov
add
or
mov
pop
or
jnp
cmp
xchg
pop
add
add
movsb
cmpsl
mov
inc
cmp
divb
dec
rorl
dec
dec
dec
clc
jne
mov
in
cltd
push
push
test
cmp
or
sub
out
pushf
cmp
stos
es
insl
js
sbb
stc
adcl
mov
or
sbb
hlt
hlt
test
xor
jb
inc
lods
or
popf
xchg
pop
pop
dec
sub
addl
fimull
cmp
call
add
pop
adc
lret
fldenv
push
pop
lock
jne
push
js
fldt
clc
shll
loopne
fnstenv
mov
sub
popa
arpl
adc
stc
repz
imul
cs
lods
or
ja
jecxz
add
lea
shlb
mov
xchg
adc
hlt
mov
sub
or
mov
imul
cmp
iret
iret
inc
movl
mov
mov
hlt
enter
inc
mov
or
or
lea
xlat
orb
inc
fs
in
dec
adc
dec
push
negb
pop
or
adc
mov
data16
cltd
sub
cmp
lea
fldt
jo
cmp
sub
gs
insl
mov
jne
cmp
mov
jne
cmp
lahf
add
jge
mov
push
push
push
enter
add
dec
xchg
mov
fsubrs
cwtl
call
fisubrl
add
iret
push
in
jbe
lock
mov
pop
fmuls
jo
aad
pop
loopne
add
jb
sub
loope
fs
mov
lea
dec
inc
data16
adc
adc
xchg
mov
movsb
jb
adc
js
add
daa
or
or
adc
mov
push
enter
popl
push
dec
mov
movsl
add
adc
sti
jne
xchg
jns
pop
std
sub
mov
cmp
dec
aam
push
mov
mov
pop
xchg
jecxz
xor
pop
cltd
call
push
add
popa
testb
cmp
push
xlat
js
xchg
in
incl
out
enter
mov
lret
je
js
outsl
sbb
pushf
je
mov
pop
fwait
call
cmp
jb
ret
lea
inc
dec
je
in
adc
and
adc
mov
dec
dec
fildl
imul
fmuls
adc
testb
push
sbb
andl
mov
inc
dec
cmp
push
adc
pop
ja
dec
xor
xchg
je
test
scas
jg
xchg
nop
test
xchg
es
insb
in
mov
cmp
out
in
out
xor
jge
mov
pop
add
test
adc
add
addb
xor
fbstp
dec
push
mov
mov
mov
cmp
sbb
cmpsl
jge
push
and
mov
add
movsl
outsl
pushf
pop
in
pop
iret
xchg
push
dec
arpl
orb
push
sub
fs
pop
movsl
lock
push
xchg
nop
inc
pop
mov
in
imul
sub
xchg
xchg
dec
mov
inc
jbe
and
and
mov
jb
pop
leave
ror
jae
cmp
rclb
stos
and
cmp
imul
call
mov
and
inc
data16
jno,pn
insl
notb
je
inc
cmpb
mov
jb
push
or
adc
jae
adc
mov
andl
push
pop
jo
lock
jecxz
ret
out
outsb
mov
xchg
mov
mov
add
mov
ds
je
xchg
add
rolb
scas
mov
push
out
imul
nop
mov
aam
push
movsb
idivb
test
mov
sub
imul
mov
push
ficoms
inc
test
les
loopne
push
pop
lcall
lods
pop
lret
xorb
sbb
je
fistps
lods
push
dec
ret
mov
int3
imul
xchg
push
in
pop
cmpl
add
adc
cs
xchg
loopne
or
and
xlat
test
pop
stc
cli
mov
pusha
adc
mov
cmc
fistpl
test
jge
cmp
in
inc
jp
popf
or
push
jns
sub
adc
cmp
aam
xor
add
out
in
jl
cmp
sarl
insb
test
sbb
call
add
enter
inc
call
insl
popa
sbb
add
hlt
adc
add
sbb
clc
add
clc
jno
adcb
or
loopne
add
icebp
or
dec
mov
repz
sbb
shl
sahf
or
sbbl
sti
mov
fsts
push
adc
xor
and
popf
rol
pop
xor
test
jmp
or
popf
loopne
or
imul
pcmpeqw
faddl
jl
mov
and
mov
shll
add
jle
popa
and
fiadds
fwait
popf
xchg
and
stc
mov
rorl
sub
rorl
dec
fisubl
in
jle
push
int3
in
loopne
ljmp
xor
test
push
scas
xchg
dec
popf
xor
in
push
js
pop
aam
fldt
sub
adc
pop
ret
pop
mov
movsl
adc
pop
pop
cmp
xor
clc
gs
das
sbb
sbb
into
fsubrl
fcompl
lret
push
dec
add
shlb
mov
notb
sahf
xlat
inc
inc
jmp
cmp
sbb
add
movsl
dec
addr16
or
fsubrs
insb
mov
and
add
pop
dec
dec
dec
sbb
mov
lea
adc
pushf
lea
and
mov
xor
cmp
mov
out
loope
sbb
call
rcll
inc
sbb
rcrb
pop
imul
sub
and
jo
pop
dec
mov
stos
dec
jnp
ss
mov
push
bsr
pop
imull
jae
sub
xor
icebp
int
or
enter
push
rolw
jl
mov
repz
push
or
shll
add
cmpsl
shrl
cmp
inc
fwait
addr16
jnp
sub
pop
xor
mov
push
int3
cmp
loope
sarb
mov
push
es
mov
sub
adc
xchg
sbb
jo
lea
adc
cld
mov
lea
xchg
jne
adc
fdivrs
lcall
roll
add
cld
pop
xchg
and
sub
enter
mov
add
mov
sbb
add
xor
imul
push
cmp
jo
mov
imul
in
jecxz
cmp
xchg
mov
push
push
pcmpeqb
aaa
pop
mov
mov
lret
insl
popa
fidivl
jle
cmpl
adc
pop
mov
xor
jp
dec
or
xchg
data16
neg
pop
or
call
repnz
dec
or
cld
mov
add
xchg
ret
or
push
mov
pop
js
or
and
int
add
add
mov
test
add
add
ja
add
xor
loop
jle
clc
add
push
push
mov
add
mov
xor
or
pop
js
cmc
ret
push
jae
lea
push
inc
mov
sbb
out
push
mov
subb
shll
add
fwait
or
inc
mov
or
mov
mov
sbb
or
sbb
fimuls
xor
das
push
rcl
je
sarl
push
cmp
jae
inc
jmp
push
jp
sub
sti
sub
mov
jae
jbe
lea
sub
sbb
aas
popa
xchg
sbb
cmp
add
cmpsb
addb
ljmp
push
mov
add
pushf
mov
adc
fmull
mov
add
enter
ds
push
outsl
jmp
xor
sub
in
bound
gs
loopne
cli
add
incl
add
lds
popf
xchg
and
rolb
sub
imull
fstps
sbb
adc
enter
sahf
inc
or
cmp
orl
outsb
or
add
into
fwait
arpl
jae
jb
jns
cmpl
or
xchg
or
sub
sbb
inc
stos
cltd
xchg
je
mov
pusha
xor
jae
pop
sub
fidivrl
add
cmpb
push
push
mov
xor
sbb
pushf
adc
jecxz
jb
inc
js
dec
in
add
push
push
repnz
pop
and
lret
cmpsb
add
sub
jmp
fs
inc
or
add
mov
ljmp
push
mov
or
stos
fcmovnu
insl
pop
inc
mov
jmp
mov
adc
shlb
lea
cli
ja
aam
in
adc
ret
push
mov
xor
addb
and
cmp
test
inc
in
aaa
cs
jae
inc
in
mov
push
inc
jp
mov
push
adc
out
imul
imul
cmp
or
mov
stc
lea
mov
shrl
push
cmp
divl
movsl
jbe
push
jns
cld
lret
aam
mov
cli
xor
mov
or
mov
xchg
or
add
mov
pop
and
stos
xchg
push
mov
cmp
notb
xchg
jmp
mov
push
add
and
std
push
add
sub
mov
dec
sbbb
gs
call
push
xchg
push
flds
cmp
scas
cld
dec
mov
ss
or
inc
or
cli
add
movl
push
dec
add
loope
inc
or
ss
mov
sbb
xchg
ret
or
decb
push
js
daa
pop
arpl
movsl
mov
jbe
mov
lret
xchg
sbb
rcll
push
lods
adc
sbb
pusha
lods
cmpl
ret
jle
ret
push
fidivs
cmpl
lods
aas
test
adc
sbb
inc
inc
dec
xor
jo
dec
cmp
pop
ss
pop
cmp
subl
dec
jo
mov
jbe
mov
lea
sub
insb
rep
mov
lock
push
mov
subb
mov
or
add
xor
cld
push
lret
clc
gs
fimull
sgdtl
ljmp
mov
mov
cmc
mov
lock
cmc
inc
adc
jo
push
iret
ja
push
push
fdivs
xor
sbb
fwait
pop
mov
ja
push
adc
mov
pop
in
inc
pop
sbb
pop
sbb
outsl
jo
ss
fwait
mov
subl
insl
popf
jg
fwait
mov
xchg
movsb
xchg
lea
and
mov
cwtl
add
or
pop
xor
dec
sub
subps
or
adc
sub
sbb
mov
mull
pop
pop
mov
mov
adcl
mov
loop
lahf
cld
jo
hlt
cld
mov
add
dec
lea
or
scas
in
rorl
aam
adc
loop
push
std
cmp
fisubs
ss
dec
and
xor
inc
lret
xchg
cmpsb
inc
mov
pop
scas
fwait
cli
sub
lods
or
push
scas
mov
insl
inc
andl
inc
inc
mov
rcrb
fstp
inc
mov
mov
or
mov
adc
sub
fstl
sbb
cwtl
xor
lret
and
iret
aam
xor
dec
xor
cltd
or
jns
rorb
xchg
iret
lods
in
xor
push
or
imul
jmp
sub
xchg
sarb
movsl
decl
mov
or
pop
add
mov
lock
add
shll
cld
fdivrl
sub
lret
out
cmp
mov
ja
bound
xchg
inc
cmp
loope
je
mov
movb
and
and
nop
lahf
test
adc
adc
mov
push
cli
mov
inc
dec
mov
jne
pop
movsb
xchg
shlb
imul
pop
fdivr
addl
mov
mov
adc
adc
ja
lcall
dec
mov
add
imul
ljmp
cmp
aas
dec
or
pop
mov
ja
into
adc
cmp
and
mov
fildl
sub
out
fcomi
sub
mov
ja
or
jle
shlb
or
ret
push
xor
dec
add
or
add
add
pop
ljmp
xchg
push
sbb
sbb
mov
sub
jge
mov
cmc
xor
pop
ret
push
das
les
push
push
jl
xor
or
cmp
xor
xor
add
sbb
hlt
das
adc
mov
mov
or
jecxz
inc
pop
ret
jl
dec
jmp
sbb
pop
or
mov
cmp
and
in
mov
push
mov
sub
push
lea
stos
pop
sbb
xchg
inc
rorb
sub
dec
mov
mov
inc
out
test
push
in
int
inc
fistps
mov
add
and
mov
mov
mov
mov
insb
push
in
lret
add
std
outsl
in
add
sarl
jmp
add
loope
shl
lret
mov
mov
testl
or
fwait
pop
dec
movsb
cmc
in
inc
mov
adc
dec
push
dec
mov
add
cmp
push
sahf
jl
loope
insl
sbb
cmp
push
inc
jmp
stos
pop
dec
cmp
sbb
arpl
pop
xchg
rcll
fs
clc
add
and
pop
cmp
js
inc
mov
daa
hlt
push
loopne
push
test
sar
mov
mov
inc
add
cmp
hlt
inc
jmp
arpl
adc
sbb
fbld
out
xor
xchg
pop
hlt
xor
cmp
or
mov
and
ret
daa
scas
or
add
cmc
dec
pop
icebp
cmpsb
cmp
addr16
xchg
mov
dec
xor
jno
or
jle
mov
pushf
cmp
stos
push
cmp
imul
sti
and
sub
and
ljmp
mov
in
adc
xor
mov
xor
out
test
and
lods
or
add
dec
in
pop
add
add
std
sti
iret
imul
imul
dec
stos
push
xchg
sub
in
adcb
inc
popf
cltd
xchg
or
pushf
dec
cs
mov
mov
push
roll
xchg
jo
add
and
mov
popl
cmp
add
dec
andl
adc
push
xor
or
xor
aaa
inc
adc
sub
sub
das
mov
rcr
mov
jle
insb
mov
push
fisubrs
pop
test
push
sahf
jbe
ss
fstpt
mov
push
js
aam
mov
jmp
das
fnsave
pop
add
int
jo
add
sarl
adc
pop
ret
mov
xor
mov
or
out
push
or
pop
xor
sbb
add
cmp
in
push
or
jge
dec
addb
ret
lret
dec
ret
mov
int
gs
jl
cmp
xchg
xor
jne
ds
and
pop
test
or
inc
fbld
dec
dec
adc
mov
mov
and
sub
add
aad
inc
addl
dec
fimuls
dec
add
xchg
xor
pop
ds
movb
sti
roll
sbb
mov
popa
and
adc
rcll
pop
pop
ret
mov
pop
rolb
xor
pop
jmp
rorb
lods
lods
and
cmp
sbb
in
rcrb
adc
xchg
push
add
daa
xchg
stos
mov
cmpsb
push
orl
stc
sub
sub
or
or
arpl
cld
adc
sub
jle
mov
mov
cmp
cmc
lea
or
out
inc
push
sbb
and
pop
push
lock
cmc
sub
call
pusha
push
test
mov
stos
mov
adc
pushf
out
lds
mov
and
push
and
sub
rolb
mov
adc
mov
ret
adc
adc
popl
add
shlb
enter
and
sub
dec
mov
xorb
filds
pop
xor
xor
xlat
sub
mov
or
xchg
notb
lods
pop
push
mov
mov
pop
je
xor
outsl
xchg
nop
jne
push
sbb
mov
mov
repnz
push
mov
inc
add
add
scas
or
inc
push
das
jno
mov
popa
dec
inc
loopne
nop
pop
icebp
cmpl
or
mov
push
jo
sti
pop
push
mov
pop
pushf
push
pop
mov
pop
push
cmp
jne
lods
push
push
push
adc
or
push
lock
cwtl
push
fdivl
je
jnp
fildl
cmpsl
pop
adc
xor
pop
push
incb
lods
test
adc
lock
fadds
dec
icebp
adc
sbb
xlat
lds
sub
add
ficomps
sbb
xor
nop
addl
sbb
not
cwtl
rclb
inc
aas
or
xor
cmp
jle
cmp
xchg
fsubrs
and
fldcw
mov
jbe
pop
imul
in
mov
and
mov
rcrl
fwait
push
in
xor
sub
dec
inc
or
push
insl
adc
pop
push
inc
mov
jno
adc
pop
jmp
jne
repz
cld
pushf
add
fadd
sub
mov
arpl
fdivrs
dec
insb
mov
or
mov
insb
xor
dec
cltd
stc
jp
dec
clc
or
mov
aam
inc
jo
push
incb
inc
loope
push
mov
or
stc
and
sub
inc
jo
jne
adcl
and
pop
xchg
xorb
gs
dec
fstpl
cmpsl
and
mov
ja
hlt
cwtl
mov
adc
dec
inc
addr16
addl
lret
jne
push
sbb
fisttpll
push
add
add
add
cltd
mov
cmp
inc
xor
sbb
imul
je
cmp
je
push
xchg
sub
adc
testb
je
cmp
mov
addl
sub
es
jbe
jmp
sub
cmpsb
mov
push
adc
add
ja
lahf
xor
mov
sub
cltd
sbb
sub
push
fisubrl
je
in
push
subl
dec
inc
sub
adcl
push
pop
mov
push
add
mov
cmp
loop
jae
dec
and
sub
icebp
jmp
mov
ds
cwtl
sbb
dec
mov
push
mov
jne
jg
add
add
les
cwtl
dec
popa
dec
sbb
hlt
fsubrs
adc
inc
bound
fisubrs
add
cli
cmp
sub
mov
inc
rorl
clc
jg
push
sbbl
imul
sbb
or
inc
mov
mov
fcoms
inc
leave
jno
sub
or
pop
push
add
push
push
xor
xor
pop
subb
push
inc
jp
push
hlt
cltd
xlat
pop
mov
sbb
scas
inc
push
jmp
int3
lock
outsl
push
rorl
sbb
sbb
mov
stos
add
repnz
roll
sbb
push
fiaddl
pop
cmpb
leave
jmp
ds
add
lea
push
sbb
jne
dec
pusha
and
adc
inc
add
jbe
leave
lret
shll
push
jne
data16
ret
mov
fdiv
adc
aam
or
jmp
xchg
sbb
or
sbb
jmp
push
and
pop
pop
xor
aas
in
cmc
addr16
sub
inc
addr16
ret
in
or
pop
inc
sub
mov
mov
inc
insl
cmp
int3
sub
cmp
lea
jne
push
sub
andl
imul
adc
lea
rcrl
add
cwtl
mov
sub
les
arpl
addb
sbb
sbb
flds
ss
lret
cmp
sbb
dec
and
and
lret
shll
insb
xchg
fistl
test
sti
dec
cld
push
pusha
jnp
loopne
xchg
sbb
push
or
sub
jno
push
push
lock
or
jp
stc
divb
mov
or
push
and
push
adc
push
jb
push
mov
push
mov
fbld
pop
fwait
or
inc
push
and
xlat
or
or
cs
add
mov
gs
sub
xor
pop
add
shlb
or
inc
mov
push
mov
iret
cmp
mov
xor
outsb
xchg
orb
add
inc
push
xchg
xor
loope
or
sub
jne
out
push
push
movsl
scas
mov
bound
out
inc
into
xchg
push
xchg
andl
jbe
push
inc
add
js
mov
mov
adc
mov
mov
clc
mov
loopne
loope
add
xor
or
call
sahf
adc
fcmove
mov
repnz
push
data16
clc
push
les
or
push
lock
or
imul
sbb
adc
rorb
jo
mov
push
jb
stc
or
pop
scas
jl
cwtl
push
mov
repnz
repz
bound
test
xchg
push
inc
in
and
loopne
jbe
dec
call
push
nop
ss
xchg
push
lods
lods
pop
or
inc
sub
je
or
adcl
or
cmp
adc
or
mov
pop
cmp
fnstcw
pop
cmp
xor
pop
in
les
into
jle
bound
inc
mov
lahf
in
add
xchg
sbb
sub
pop
cltd
pop
ficompl
xchg
add
or
jmp
sub
push
push
mov
mov
add
insb
inc
clc
pop
and
mov
pop
nop
xchg
aaa
loop
inc
call
cld
and
imul
adc
mov
jo
and
ds
testl
xor
fisubrs
fisttps
ja
adc
dec
push
ds
jae
push
sbb
cmp
adc
call
jle
pop
test
and
fwait
dec
cld
inc
je
sar
xor
add
mov
add
sbb
jl
jo
stos
sub
adc
push
and
je
gs
dec
xor
pop
sub
andb
out
or
pop
add
push
dec
lds
jecxz
out
sbb
nop
adc
fs
push
int3
add
scas
icebp
in
fisttpll
inc
dec
cmp
inc
adc
inc
pop
cs
mov
pop
inc
push
out
jb
lds
jmp
in
movsl
or
inc
mov
xor
mov
pusha
movsb
icebp
xor
sbb
icebp
xlat
xor
add
cmpsb
jbe
rorb
sti
and
mov
xchg
push
or
js
sbb
adc
movsb
jbe
xor
or
pop
sbb
adc
pop
inc
inc
loope
stos
mov
cmp
in
pop
clc
sbb
movsl
daa
push
imul
or
push
xchg
add
dec
jo
push
push
jo
push
test
cmp
ret
mov
je
sub
xchg
call
test
fimull
loopne
je
pop
cld
cmp
push
clc
in
push
push
push
mov
push
add
shlb
lret
jne
fld
shll
mov
in
shl
jne
mov
inc
ret
push
sbb
ds
xor
push
lock
dec
adc
nop
insl
adc
dec
and
mov
or
icebp
std
jns
pop
je
jmp
or
push
dec
xorl
push
dec
out
ret
out
jns
add
sbb
push
lock
clc
add
cmp
lock
jmp
pop
movb
mov
ljmp
xor
icebp
jnp
les
inc
cmp
mov
cmp
dec
subl
cmpsl
inc
shll
test
rorl
mov
dec
inc
pop
pop
rolb
and
or
loop
out
mov
fs
and
imul
cli
inc
shll
dec
pop
rol
jmp
mov
iret
dec
and
orl
mov
sbb
adc
push
js
sbb
jnp
mov
add
sarl
cld
ss
jb
icebp
mov
stos
cli
push
pop
in
pushf
push
jne
or
dec
inc
hlt
xor
push
push
add
sub
int
or
xchg
shrb
adc
jmp
push
sahf
jne
cmp
jecxz
mov
sub
cmp
pop
nop
sbb
inc
sbb
adc
and
lds
sarb
sbb
adc
push
inc
sub
adc
call
adc
rorl
pop
xchg
js
jbe
adc
mov
mov
repnz
cmp
ljmp
pushf
adc
in
arpl
cmc
sbbl
mov
cltd
orb
loopne
jle
rcrb
js
and
sub
sbb
or
jne
sub
aaa
mov
push
or
dec
inc
dec
push
lcall
stmxcsr
nop
test
orl
dec
fcomp
outsb
lcall
jg
jg
pop
outsb
data16
dec
test
cltd
jbe
movq
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
inc
test
mov
dec
les
dec
jge
repz
cmp
or
fucom
add
in
xchg
ret
adc
jnp
mov
cmp
or
aam
ret
or
pop
or
adc
fistl
pop
cmpsl
fnstsw
ret
mov
mov
mov
mov
jo
addps
mov
fldl
sbb
sbb
inc
pop
jmp
xor
cmp
bound
sbb
jmp
cmpl
sbb
xchg
adc
adc
aad
mov
sub
incl
inc
xchg
xchg
adc
movsb
adc
pop
clc
aam
pop
mov
dec
xor
mov
jmp
loop
dec
cld
ret
jge
mov
ret
leave
or
push
lea
in
gs
mov
sbb
out
daa
mov
dec
cwtl
xchg
jno
xchg
mov
leave
push
xchg
and
cvtps2pd
push
and
jbe
adc
les
out
test
es
mov
rolb
inc
ds
aam
je
out
pop
icebp
push
mov
bound
es
out
mov
divb
movsl
push
pusha
je
sbb
pop
repnz
push
lds
cmp
mov
inc
inc
sbb
push
in
push
mov
call
movsl
push
movb
mov
cmp
jne
lods
or
xor
or
cmp
lcall
mov
imul
sbb
flds
js
jo
cmpsl
fdivrl
xchg
ds
mov
push
sbb
adc
sub
jne
popf
sahf
lods
adc
or
push
hlt
xor
stc
aam
push
lock
mov
mov
sub
pop
das
shl
hlt
fcomi
arpl
fsubs
in
cmpsl
loopne
imulb
push
jb
inc
imul
mov
xchg
clc
push
mov
cmp
mov
ss
lcall
adc
adc
jne
inc
cmp
add
push
mov
xor
lods
add
scas
add
mov
and
data16
adc
inc
bound
pop
mov
sub
adc
das
out
push
xchg
pop
dec
call
clc
pop
inc
inc
push
or
cmp
xchg
cmp
add
pusha
lahf
arpl
dec
in
xor
adc
push
add
push
push
push
ds
lret
aam
adc
add
pop
or
les
add
sbb
adc
xchg
lock
mov
mov
sahf
pop
iret
pop
imul
cmp
cld
imul
imul
hlt
cmp
out
or
in
mov
jp
sbb
sarl
imul
cmp
xchg
adc
push
jp
mov
or
dec
leave
sbb
loopne
imul
push
mov
shl
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
lock
lock
xor
jmp
jnp
sub
or
adc
js
rolb
and
std
add
adc
mov
fsubrl
and
xchg
xchg
repnz
stos
stos
inc
or
inc
insl
out
sbb
add
inc
loop
or
orl
sti
or
push
cmpsl
push
test
jns
es
xchg
push
fsts
inc
lahf
out
sbb
repz
xchg
cmp
repz
shrb
cmp
adc
imul
inc
jecxz
push
lea
stos
mov
stos
mov
je
dec
or
addl
rclb
jmp
adc
clc
fmuls
adc
ds
insl
push
mulb
or
iret
data16
jne
idivb
test
test
xchg
xchg
or
cmp
mov
adc
imul
loop
mov
sub
add
sbb
mov
or
int3
sub
or
xchg
dec
or
cmpsl
adcl
push
inc
xor
inc
stc
adc
push
inc
testb
fistps
push
mov
jbe
lods
inc
ljmp
push
xor
pop
div
loop
mov
test
scas
dec
adc
adc
mov
mov
cmpb
adc
fidivs
sub
insb
push
ret
pop
push
jnp
mov
push
ret
cmc
push
inc
mov
xor
push
or
sub
adc
ja
ficomps
aad
push
rclb
aad
faddl
mov
shl
push
xchg
test
jle
push
or
push
testb
fimuls
sub
ret
adc
lock
pop
inc
push
sub
ss
lock
ss
cltd
es
fisubs
rorl
in
sub
mov
mov
movsb
movsb
imul
fimuls
loopne
and
clc
aad
sbb
jp
push
insl
popf
pop
inc
fs
xchg
mov
jne
sub
inc
pop
cmp
aad
sub
pop
xchg
adc
push
and
sub
nop
sbb
lret
add
add
or
sbb
lds
jecxz
jle
sbb
mov
mov
sbb
jns
loop
shrl
pop
and
les
jo
push
movsb
and
fsubl
sub
push
cmp
jb
xor
stos
add
sbb
ss
jp
lcall
sub
xchg
je
cmp
je
cmpsb
faddl
ret
mov
lahf
push
sbb
mov
adc
or
dec
cmp
add
mov
lds
in
xor
cmp
imul
mull
insb
and
sbb
pusha
dec
pop
out
pop
sbb
jo
fldt
jno
or
gs
test
dec
andl
int3
lret
pop
cmpsb
mov
into
or
imul
add
pusha
imul
mov
pop
hlt
push
cmp
pop
cmp
lods
mov
testb
inc
mov
inc
imul
clc
cmpsl
and
loopne
lret
dec
jmp
aaa
mov
or
or
repnz
push
aas
push
jp
push
jmp
inc
clc
out
ljmp
test
inc
push
push
push
or
jno
lock
sbb
repz
stos
sbb
push
aas
sarb
lock
push
clc
ret
jmp
pop
inc
call
and
test
bound
push
adc
dec
inc
add
xlat
inc
ljmp
cmc
push
push
cld
ret
pop
jns
cmp
movsl
stc
mov
and
rcrl
jbe
inc
cli
cwtl
xor
add
add
lds
stc
aad
pop
jl
push
divl
iret
lea
push
rol
sub
push
pop
or
xchg
lock
pop
rolb
push
jne
mov
push
pop
cmp
mov
sbb
loop
sbb
in
mov
adc
dec
lret
clc
pop
loopne
dec
add
sub
xlat
sub
push
mov
cmp
and
mov
pop
pop
xor
fistps
cli
push
xor
mov
mov
mov
jo
and
clc
or
cmpsl
jge
xor
sahf
pop
push
inc
cltd
test
adc
les
ss
and
cmpsl
add
dec
and
pop
jne
and
clc
dec
or
xor
xchg
or
mov
mov
pop
test
sbb
xor
bound
mov
jmp
jmp
out
bound
mov
pop
and
mov
adc
or
or
inc
pop
in
popa
add
dec
ss
ficoml
in
mov
fs
dec
mov
and
and
add
xor
or
lods
call
xor
sub
bound
lock
pop
sbb
adc
ss
push
pop
add
in
cmp
add
jns
xchg
daa
add
adc
sbb
dec
add
jno
jle
add
enter
flds
add
and
mov
xor
pop
push
pop
jns
dec
in
add
or
or
or
add
push
sub
or
or
loop
nop
ja
sub
or
or
repnz
or
iret
enter
ja
test
nopl
push
cmpb
adc
fwait
sbb
addr16
adc
inc
or
cmp
adc
adc
add
adc
add
enter
adc
adc
in
jns
adc
add
pusha
push
push
push
push
jae
inc
sahf
pop
pop
xor
jb
mov
sbb
seto
sbb
call
add
sbb
sbb
cmpsl
inc
repnz
bound
jns
jge
sbb
inc
sahf
push
push
inc
push
pop
aam
or
pop
jne
add
add
sub
cmp
fistl
dec
inc
or
xor
add
cmp
xchg
inc
cli
arpl
push
inc
cmp
incl
sub
cmp
je
lcall
repz
cmp
ret
adc
aad
sbb
in
in
out
jns
nop
out
out
xor
or
xchg
fwait
addb
je
call
mov
dec
dec
cwtl
jmp
in
sub
inc
push
or
sbb
sbb
in
in
cltd
inc
fsubp
add
add
sbb
sahf
out
out
mov
sbb
pop
orb
lock
enter
icebp
icebp
vmwrite
out
std
xchg
inc
enter
leave
std
hlt
rcrb
pusha
hlt
fwait
push
fdivs
jb
cmc
cmc
inc
jg
add
div
pop
lret
popa
idivl
cmp
sbb
inc
lcall
add
stc
inc
stc
lock
sbb
inc
sahf
cli
cli
iret
sti
cmpsb
repnz
sbb
stos
cld
cld
mov
outsl
cld
push
sete
xor
push
repnz
sbb
adc
ret
inc
or
rol
inc
mov
out
lahf
in
cmp
pop
cmpsb
adc
invd
push
jecxz
std
sti
in
enter
in
icebp
jo
mov
push
push
jns
daa
xchg
sti
out
out
in
or
in
repnz
dec
sti
sub
out
inc
mov
pop
jmp
pop
insb
nop
jmp
cltd
in
das
xchg
inc
pop
add
and
sbb
inc
lcall
push
jno
lock
cli
xchg
xchg
mov
stc
rolb
sub
repz
or
push
sar
push
pop
dec
xchg
xor
inc
pop
stc
div
not
enter
fwait
xor
add
mov
adc
stc
out
clc
cmpsb
jb
popa
cmp
pop
insb
nop
sti
sti
cltd
mov
jns
cld
orl
jmp
and
inc
mov
cld
sub
mov
xchg
pop
insb
loop
icebp
mul
pop
and
imull
xchg
mul
sbb
pop
insb
nop
out
cltd
out
xchg
inc
pop
pop
inc
mull
test
sti
testb
lcall
mov
testb
pop
xchg
negb
cs
out
jno
loop
push
inc
negb
notb
sub
xchg
add
sbb
repnz
cmc
pop
pop
repnz
cmc
jae
movsl
test
cmc
div
jne
cwtl
xlat
idivb
and
pop
add
clc
clc
sbb
popa
cmp
mov
pop
push
jno
xchg
hlt
pop
sub
xchg
cmp
hlt
push
hlt
pop
lock
sbb
data16
frstor
idivl
jo
pop
xor
push
sti
lahf
pusha
imul
or
test
adc
loope
loope
repz
mov
repz
or
pop
mov
test
xchg
repz
repz
jno
xchg
andl
or
sbb
jmp
jno
mov
xchg
repnz
pop
je
jo
sbb
dec
in
in
popf
dec
push
jno
and
add
add
pop
je
loope
sbb
mov
and
nop
outsb
divb
icebp
and
icebp
test
lcall
cmc
cmc
xchg
inc
fcompl
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
xchg
cli
test
ret
mov
mov
push
sub
out
mov
in
jl
ds
add
add
enter
stos
add
adc
add
push
jnp
adc
loopne
sub
push
sbb
add
jmp
and
jns
nop
icebp
ljmp
jg
scas
or
mov
xor
push
fldcw
inc
sbb
push
movsl
sbb
mov
and
adc
int
cmpsb
adc
pop
pop
xor
cmpsl
stc
notl
add
adc
int
sti
je
push
xchg
push
stc
adc
in
out
out
push
push
jbe
out
jbe
inc
adc
add
roll
jmp
dec
add
fs
push
dec
and
add
fimull
jle
rolb
xor
roll
add
ss
cld
jb
test
mov
inc
mov
insb
int
in
push
loope
ds
adc
std
xor
push
add
pusha
adc
pop
xchg
stos
mov
mov
push
shlb
clc
hlt
sub
insb
lock
rol
mov
cs
mov
push
adcb
jmp
loopne
cld
cmp
je
push
inc
add
adc
outsl
ret
mov
or
adc
sub
int
or
rcrl
sub
jo
fildll
mov
insb
fmuls
and
add
jl
insl
lods
and
adc
dec
pop
insw
xchg
repnz
add
test
mov
aas
or
adc
lods
dec
cmp
dec
mov
ljmp
imul
jb
cmpl
push
or
imul
fldenv
add
dec
into
rorl
mov
jl
enter
xor
or
xchg
fsincos
cmpsl
enter
stos
mov
dec
ljmp
mov
int3
xor
lods
adc
adc
mov
leave
cmpsb
sub
jmp
paddq
jae
sbb
in
dec
and
mov
test
pop
mov
add
cwtl
dec
cmp
mov
insl
xchg
cltd
adc
aaa
aas
movsb
test
mov
jb
pop
ja
or
call
sub
mov
inc
inc
inc
inc
push
add
jmp
jb
ja
in
mov
push
inc
and
mov
gs
inc
data16
cmpsb
and
sbb
loop
or
sbb
out
jo
jne
cmpsb
or
sub
xor
je
pop
or
sti
push
roll
sub
inc
inc
aam
lret
cmp
enter
add
sbb
add
les
mov
int
rorl
mov
ja
push
lea
insb
sbb
sbb
inc
mov
fs
test
sbb
mov
cmpsb
adc
add
and
lods
mov
mov
and
mov
pushf
mov
movsb
lcall
add
xchg
add
out
fs
inc
jmp
test
sti
sub
sbb
adc
jne
sub
push
dec
dec
add
adc
xchg
xor
dec
push
shlb
test
lods
dec
mov
jmp
mov
es
mov
adc
or
adc
ret
stc
dec
add
add
lds
aad
call
ss
dec
div
or
lret
lcall
jmp
pusha
fidivs
lret
sub
cmp
xor
adc
and
adc
sbb
or
daa
movsb
insb
shrb
mov
and
dec
push
and
lods
xchg
ret
mov
test
pop
neg
movsb
test
push
sbb
mov
sbb
orl
ja
lret
in
lds
jbe,pn
inc
mulb
jge
clc
mov
or
pop
addb
xchg
push
les
fsubrl
in
rolb
sbb
mov
and
push
nop
shll
adc
cmp
push
adc
stc
add
dec
aaa
std
cmp
ret
push
sub
imul
fisttpl
nop
lea
xchg
and
add
jne
jnp
subb
lock
sbb
cmp
or
cmp
jne
mov
imul
std
jne
es
data16
out
jne
call
ljmp
xor
push
or
lahf
xlat
lock
dec
cmp
jmp
jns
sahf
cmp
std
jmp
cld
push
dec
iret
or
sub
test
mov
push
pop
pop
mov
ret
mov
or
lods
mov
mov
sub
int
shll
lods
adc
repz
lret
or
adc
xlat
add
leave
jns
ret
das
cmp
adc
inc
loope
and
lea
jne
dec
mov
lods
std
or
xor
or
sub
push
hlt
add
and
addl
dec
rorl
jae
add
push
xchg
lods
cmp
xchg
leave
dec
adc
xlat
xor
add
adc
push
jg
loope
push
fimull
push
jo
inc
inc
insb
add
repz
mov
shl
and
in
xchg
or
adc
data16
inc
push
stc
aad
hlt
subb
push
adc
rcrl
ss
adc
mov
or
mov
push
jmp
xlat
mov
push
adc
ja
add
jmp
push
lcall
sbb
imulb
jle
ja
add
add
sbb
enter
dec
mov
sbb
dec
cmp
lea
mov
mov
call
sbb
pop
pop
hlt
jae
dec
pusha
mov
lret
clc
add
inc
arpl
add
or
movsl
push
mov
mov
les
imul
stos
add
testb
mov
sahf
xor
dec
loop
clc
lock
nop
or
out
push
xor
mov
cmp
mov
test
push
mov
sbb
jge
mov
adc
xchg
sub
sub
add
push
imul
jmp
movsl
mov
or
loopne
add
rclb
lret
add
cmp
mov
inc
or
faddl
inc
fisttpl
mov
push
pop
and
push
dec
pop
pop
scas
push
pop
test
es
add
clc
incl
rep
jmp
movsb
test
fadd
mov
mov
add
xor
xor
jmp
push
mov
or
and
pop
into
mov
or
inc
mov
mov
mov
fimull
push
movl
cmpsb
inc
add
mov
mov
or
push
shl
jns
out
enter
test
repz
mov
mov
call
iret
repz
lock
hlt
clc
push
into
repz
cld
ret
insb
stos
push
or
add
fldcw
or
sbb
shrb
sahf
lcall
mov
and
mov
sbb
je
into
jl
cld
sub
leave
adc
cld
out
lds
neg
adc
inc
xchg
daa
mov
mov
sub
outsl
nop
movsb
push
enter
add
jbe
fisubs
add
sahf
inc
push
out
push
add
nop
dec
dec
shll
ss
add
ljmp
mov
or
push
push
sahf
pop
fs
je
xor
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
mov
int3
xor
mov
add
pop
mov
daa
ja
xchg
dec
rorb
pop
loop
push
xor
mov
mov
incl
inc
decl
jne,pn
pop
pop
add
lods
xchg
jnp
jg
cmpl
xor
jbe
push
cltd
pop
sbb
idiv
add
mov
pusha
or
mov
adc
ja
in
sti
inc
js
dec
mov
mov
xor
add
cmp
jae
dec
in
ja
and
jbe
sahf
add
push
dec
dec
jmp
jno
pop
sub
mov
hlt
jp
clc
pop
test
push
jg
fiaddl
int
dec
sbb
add
pop
call
or
sbb
dec
dec
je
push
push
in
add
adc
jne
testl
pop
insb
adc
loopne
pop
imul
pop
decb
push
lcall
push
sbb
pop
inc
cmp
das
sbb
mov
mov
add
adc
push
addl
mov
xor
push
jo
orb
sub
orb
dec
jp
push
jl
cmp
adc
mov
adc
mull
or
daa
scas
and
jmp
cmp
sub
sub
sub
insl
or
mov
aas
jge
push
push
cltd
pop
not
in
cmpsb
cmp
cmc
jge
int
push
xchg
inc
out
cmp
and
aam
insl
daa
ret
or
test
addb
test
aas
pop
enter
popf
mov
into
adc
fs
jmp
jl
mov
sbb
call
mov
mov
pop
insb
sub
sbb
mov
mov
add
or
aam
fisubrl
imul
add
pop
xor
pop
cmp
xlat
stos
incl
pop
sti
cmp
add
jnp
pop
sub
mov
div
addb
jne
clc
add
push
mov
push
lahf
push
xor
xor
mov
js
pop
je
sbb
or
std
cmp
jle
sti
int3
mov
ud0
pop
jno
mov
mov
test
int3
dec
jo
mov
je
dec
inc
inc
rcr
divl
inc
or
inc
xchg
inc
and
ficoms
js
in
loop
lcall
jo
inc
or
sbb
xchg
mov
inc
mov
push
dec
inc
and
xorl
leave
cmp
pop
stc
pop
push
stos
add
adc
lcall
adc
push
push
pushf
movsl
dec
and
lods
sub
cmp
inc
pop
inc
and
fldt
ret
push
lods
push
shll
mov
xchg
fidivrs
mov
push
xchg
and
jge
hlt
mov
pop
loop
lock
push
push
hlt
mov
ret
push
adc
data16
lds
inc
adc
or
adc
cmp
out
call
movb
push
jnp
insl
loopne
lods
jge
mov
mov
cli
mov
ljmp
xchg
movsb
andl
or
or
push
pop
mov
fadd
cld
mov
hlt
dec
js
mov
sbb
sahf
fcoml
push
scas
push
push
adc
mov
mov
add
decl
inc
jg
jbe
and
pop
push
inc
loop
add
lods
addb
cs
mov
clc
mov
inc
inc
cmp
je
push
mov
cmp
movsbl
fs
xchg
lods
popf
dec
orb
adc
add
mov
fidivrl
dec
je
and
adc
xor
out
add
add
insl
mov
push
mov
incl
mov
pusha
push
mov
push
inc
sbb
cwtl
or
sub
dec
sbb
mov
adc
cmp
bound
ja
insl
sbb
or
xchg
dec
arpl
lods
das
push
inc
daa
xchg
cmpl
or
dec
sub
or
outsl
xor
mov
addr16
test
pop
js
xchg
adc
test
inc
loopne
cmp
and
cmp
je
mov
push
sarl
mov
xor
sub
inc
or
add
xor
push
orl
inc
int
cmpsb
add
pop
fs
inc
addb
add
mov
sub
lret
cmovs
add
sub
daa
iret
inc
sbb
mov
add
xchg
dec
mov
into
adc
iret
add
shll
shll
bound
shlb
jne
jmp
dec
or
mov
stc
sub
add
jmp
das
dec
jmp
cmc
cmp
jns
mov
mov
push
pop
inc
nop
jne
or
push
mov
rol
xor
in
sbb
test
roll
push
or
cmp
call
sbb
mov
inc
imulb
test
in
filds
sahf
sbb
into
adc
add
lock
ljmp
outsb
jns
and
aam
push
in
shlb
inc
inc
inc
je
cmp
inc
inc
mov
jae
popa
mov
sbb
inc
push
or
and
ja
push
cmpb
jne
inc
inc
call
enter
outsl
jmp
xchg
ja
or
test
sub
cltd
pop
stos
call
jmp
fidivl
xchg
fsubl
loope
fucomp
test
inc
jmp
add
cmpb
cli
repnz
push
imul
inc
push
int3
xchg
pop
das
lea
jns
daa
decb
in
jne
add
and
inc
in
add
mov
pop
frstor
aad
and
leave
pop
fldz
movsl
movsl
mov
adc
or
lahf
es
lahf
add
aaa
mov
popa
daa
out
rep
in
pop
adc
mov
test
mov
out
push
popa
cwtl
add
orb
fchs
ret
mov
add
cmp
inc
test
lock
adc
adc
xor
jge
cld
jmp
pop
arpl
xchg
push
jno
xchg
mov
fisubs
jp
sahf
pop
clc
popa
aas
inc
mov
pop
out
add
xor
mov
inc
add
inc
clc
outsb
adc
and
push
std
or
xchg
xchg
rclb
mov
jo
rol
data16
sub
in
inc
test
pop
xor
into
push
cmp
loopne
mov
outsb
jbe
sub
sahf
fidivrs
adc
addl
add
loopne
pop
mov
loopne
icebp
repz
ret
andl
cmovno
fmul
bound
xor
das
sbb
in
loope
xor
call
xchg
add
into
gs
clc
jnp
or
mov
mov
inc
int3
or
pop
xchg
add
adcb
or
int3
jmp
aam
push
cmp
xor
enter
fucomi
in
push
mov
jmp
mov
xor
cltd
mov
or
pop
sahf
std
into
dec
adc
data16
inc
inc
and
mov
push
enter
push
sub
xchg
scas
sbb
adc
adc
imul
jbe
push
push
das
xor
cmp
and
fwait
xchg
das
out
addr16
jo
arpl
imul
gs
add
cmp
dec
ja
jl
mov
inc
sub
inc
pop
pusha
dec
into
mov
adc
aad
sbb
jb
add
iret
and
inc
or
xchg
loope
xchg
mov
pop
or
xor
add
pop
or
outsb
jbe
add
js
ret
hlt
mov
fildl
cld
sbb
imul
inc
push
fildl
xchg
jle
repnz
inc
dec
das
sbb
xchg
loope
addl
cmpsb
jg
adc
pusha
mov
scas
sub
addb
xchg
cmp
mov
insl
ja
pop
adc
cmp
push
pop
xor
rclb
rcll
mov
pusha
test
mov
dec
xorl
or
sbb
mov
pop
sub
shl
push
incl
inc
fldcw
sub
sub
call
inc
cs
test
cli
imul
add
enter
xor
aam
adc
mov
movsb
and
icebp
gs
add
js
or
inc
push
pop
adc
and
pop
mov
and
rclb
cmp
ja
scas
mov
dec
jo
push
sub
mov
neg
mov
inc
jge
mov
dec
cli
or
add
jmp
cmp
or
adcl
mov
lock
pop
cmp
jb
ret
adc
lahf
mov
dec
mov
mov
dec
dec
mov
or
test
aaa
or
or
or
adc
rol
arpl
or
insb
ret
or
add
lods
fimuls
mov
in
push
cmp
jo
add
imul
lock
rcll
and
add
ljmp
pusha
std
mov
adcl
jg
add
mov
orb
xor
xchg
mov
sbb
mov
and
imul
roll
lock
jae
or
mov
pusha
fdiv
sub
pop
jle
shrb
xchg
xchg
movsb
jb
adc
dec
outsb
xchg
sahf
dec
cmp
inc
push
and
addl
push
adc
cmp
ljmp
adc
add
mov
dec
adc
sub
and
aam
cwtl
xorb
roll
ret
adc
mov
pop
xchg
leave
inc
sbb
adc
fisubrl
inc
inc
data16
mov
sar
dec
xor
es
mov
icebp
lea
push
adc
push
dec
fimull
pop
dec
ss
add
push
or
jle
add
js
xor
mov
imul
ret
es
sbb
add
jle
xor
xor
pop
xchg
pop
add
pop
xchg
jne
push
fsubrs
or
aas
sub
dec
imul
and
dec
adc
push
add
push
enter
jmp
pop
movsb
sbb
ret
icebp
jae
jo
or
lcall
xchg
xor
inc
sbbl
or
shlb
sbb
adc
das
daa
mov
xlat
aam
xor
mov
cwtl
or
mov
or
mov
add
dec
inc
call
mov
loope
sub
std
add
cmpl
clc
add
test
adc
sub
add
and
out
or
add
outsb
sub
adc
lahf
sbb
dec
loopne
into
and
aad
mov
mov
popf
das
insb
push
lea
loopne
sub
mov
je
sub
pushf
or
push
pusha
mov
and
cmpl
add
jae
mov
arpl
push
push
push
sbb
mov
add
test
je
loopne
jl
add
iret
xor
push
dec
or
add
pushf
testb
test
lods
push
call
or
sti
adc
dec
inc
pop
push
lea
dec
xchg
xchg
pop
mov
sub
cmp
adc
lahf
adc
bound
inc
dec
jl
jg
push
js
ds
fdivrs
into
dec
adc
jp
and
add
mov
push
scas
xor
ret
inc
add
jne
lock
insb
and
imul
adc
and
rclb
cmp
xor
pop
or
or
je
and
and
mov
sub
shlb
and
lock
jp
shll
push
or
push
lods
lret
test
test
hlt
pop
sub
gs
or
xor
adc
gs
and
mov
in
or
sbb
sbb
repz
adc
popl
btc
stc
add
inc
mov
loopne
push
mov
mov
mov
cmp
xor
sarb
sarl
mov
pop
movsl
jne
sarl
xchg
mov
imul
adc
outsb
pop
gs
sbbb
inc
push
or
pop
xor
insb
dec
sub
inc
pop
int3
das
sbb
or
add
test
push
or
test
movsb
adc
push
and
pop
add
andl
aad
inc
sbb
jle
shl
and
pop
add
shrb
add
sub
mov
incl
mov
inc
dec
jne
lea
repz
adc
pop
push
rcrb
jp
pop
xchg
imul
fdivrl
pop
mov
add
mov
out
push
movb
fisubs
lea
ret
inc
ja
sub
inc
fucomp
add
xchg
or
shlb
cmp
loop
fdivr
pushf
fsubr
out
ficoml
push
push
push
mov
dec
insl
sub
push
cmp
push
push
cld
ljmp
add
mov
jecxz
rorb
dec
push
sbb
jmp
and
je
xchg
lock
sub
nop
mov
test
add
mov
mov
lahf
lods
leave
sub
mov
inc
and
push
cmp
dec
sub
push
roll
cmp
lds
ljmp
xchg
je
inc
dec
ret
repnz
pop
add
repnz
push
push
ja
mov
popf
inc
jo
jg
or
sub
mov
test
and
xor
adc
push
sbb
inc
push
cmp
daa
ss
push
push
call
stc
jno
add
mov
out
push
movsb
pop
insb
push
cld
pop
or
xor
lahf
jmp
mov
xchg
repz
rcr
test
adc
push
adcb
cmpsb
push
sbb
push
out
cmp
cmpsb
inc
lahf
add
jne
fsubr
fisttpl
xchg
imul
lods
cmpb
les
sarb
ret
sub
sbbl
adc
int
push
jnp
cmp
inc
inc
cli
mov
sbbl
lock
movsl
test
adc
out
cs
cs
into
std
fidivl
push
jmp
add
movl
push
and
pop
popf
xchg
fdivl
dec
lea
push
inc
and
inc
les
fidivrl
push
call
aas
add
in
lea
mov
push
sub
inc
ret
pop
aas
pop
lods
ror
movsl
lea
xor
adc
push
push
lea
ret
push
push
mov
icebp
std
std
mov
mov
cmp
int
push
jl
in
inc
add
bound
outsb
jne
outsb
incl
fisttps
xorb
xor
lods
das
xor
sarb
fisubrs
out
insl
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
loope
pop
sbb
push
jl
sbb
imul
outsl
lock
xchg
push
mov
inc
dec
cld
sahf
pop
les
cwtl
test
and
or
hlt
gs
add
jmp
cmp
inc
mov
dec
jo
or
daa
dec
loopne
adc
inc
sarb
popa
or
push
fdivr
aam
adc
stos
push
or
and
lock
mov
jle
fcmovnb
mov
inc
sbb
sbb
sbb
pop
mov
cmp
cwtl
mov
fcompl
inc
cltd
stos
popa
loope
push
cmp
xchg
push
jbe
sub
jmp
gs
or
adc
repnz
in
pop
xor
fs
and
mov
or
jnp
mov
pop
sub
jmp
xor
mov
mov
jmp
push
bound
ret
ss
mul
incl
insl
adc
cs
inc
push
push
sbb
jmp
xchg
fadds
xchg
aam
cmp
mov
popf
mov
cmc
lret
cmp
loop
lret
and
pop
movl
mov
sub
cmp
inc
dec
js
es
pop
mov
mov
pop
pushl
imul
test
outsl
int
mov
adc
jno
inc
inc
sbb
sub
inc
xchg
int3
insl
insl
fsub
dec
subb
and
jecxz
mov
pop
lret
pop
push
js
cwtl
mov
jne
inc
int3
stos
pushl
out
jle
jg
or
or
push
cmpl
adc
shlb
cmp
add
pop
inc
sahf
inc
add
adc
lock
sbb
push
xor
mov
frstor
add
sbb
mov
or
rorb
jp
or
push
or
pop
ret
pop
ret
jo
dec
xchg
jne
rol
mov
xor
clc
sub
in
xor
dec
xor
je
pop
fadd
sub
inc
or
frstor
sbb
cltd
rcrb
lret
and
pop
clc
inc
pop
jbe
dec
sbb
nop
push
or
jb
ret
add
into
lcall
mov
or
sbb
stc
cltd
inc
xor
adc
mov
rcll
sbb
inc
pop
mov
mov
das
and
sbb
cmp
shlb
cmp
daa
mov
jg
fsubs
ret
cmc
scas
jb
mov
push
mov
xorb
xor
pusha
add
cmc
add
test
out
lret
call
das
sbb
cwtl
sbb
lock
inc
fisubl
cmp
mov
jb
xor
mov
pop
setg
shrb
jmp
dec
andb
pop
dec
ss
pop
dec
push
pop
mov
rol
inc
xchg
and
inc
test
mov
sti
fstpt
loopne
insb
push
cld
push
jo
gs
and
lds
jne
xorb
mov
or
xor
andl
cmp
sub
cmpsb
insb
sbb
in
push
bound
sub
inc
add
or
inc
cmp
jl
inc
sub
inc
lock
faddl
dec
push
push
xor
dec
sbb
xchg
dec
mov
sbb
aas
inc
dec
dec
mov
and
dec
add
bound
xor
jo
xor
rol
cmp
lcall
mov
enter
fdiv
cmc
stc
mov
mov
add
mov
add
nop
xor
inc
cmp
add
inc
dec
pop
cmp
xchg
and
jle
rorl
decl
repnz
push
dec
dec
loope
cmp
insb
xchg
jge
xlat
and
pop
cmp
je
jle
mov
orb
mov
insl
jg
sbb
or
sbb
mov
inc
jg
dec
add
lret
bt
divl
xchg
pushf
cmpl
jne
mov
std
add
cmpsb
and
xor
hlt
pop
daa
test
unpckhps
ja
orb
mov
rcl
mov
clc
cltd
sub
inc
xor
fisubl
loope
adc
jg
aaa
pop
mov
push
xchg
jb
or
mov
adc
add
mov
adc
mov
mov
sub
sub
movsl
dec
bound
pop
dec
lea
imul
fstps
das
mov
or
dec
lea
sub
loopne
lret
fcoml
ror
lret
out
iret
mov
clc
or
out
lret
lret
test
movsl
shrb
sbb
mov
add
sarl
dec
call
adc
jp
or
sub
aam
xchg
add
out
mov
lahf
lea
mov
sub
add
xor
add
sbb
add
out
jmp
or
pop
jmp
jge
xor
rorb
fists
call
dec
pop
fdivrs
xchg
add
insb
or
xchg
mov
test
xor
es
mov
sub
js
daa
nop
adc
movsb
pop
mov
sub
hlt
push
jb
or
sbb
movsb
pop
outsb
sub
push
movsb
pop
xchg
or
push
cmpb
add
pop
pop
pop
out
push
mov
push
enter
fcompl
inc
pusha
push
push
and
lock
inc
pop
pop
test
mov
js
mov
sbbb
mov
cld
push
add
out
sahf
or
sbb
aaa
pusha
fwait
popa
add
inc
push
or
jl
pop
push
push
cmpsb
push
adc
inc
cmpsb
insb
sbb
adc
push
cs
push
ret
call
mov
inc
jmp
sar
lds
add
ja
xchg
and
sbb
dec
cli
dec
mov
outsb
inc
push
insb
lret
jne
and
mov
dec
cmp
jge
inc
mov
add
pushf
adc
movsb
popa
test
aam
inc
addr16
or
push
mov
aam
fs
out
cwtl
adc
xor
and
add
add
std
xchg
and
add
movsl
and
ret
notl
push
add
mov
aas
pusha
adc
hlt
fdiv
mov
ds
loop
push
ret
daa
xor
daa
and
jno
push
mov
enter
cmp
or
je
fnstcw
leave
or
dec
dec
adc
ret
pop
dec
push
or
mov
popf
xor
push
imul
jmp
xor
pop
add
inc
or
pop
and
push
movl
add
jmp
adc
dec
ret
and
add
adc
xchg
pop
push
bound
outsb
mov
and
xchg
sbb
fisubs
hlt
dec
lds
cmp
jbe
enter
popf
lds
les
and
or
dec
ret
aam
add
sub
loope
testb
cmp
test
ja
enter
loope
call
sub
shl
mov
push
mov
lds
andl
hlt
jecxz
jmp
push
lock
pop
mov
push
inc
and
ret
rcl
push
ret
jge
in
jl
ljmp
ret
or
pop
xchg
aas
add
or
inc
rolb
mov
mov
leave
adc
adc
and
sub
filds
push
xchg
add
or
and
add
inc
mov
mov
test
sbb
lea
and
cmp
inc
add
dec
mov
pop
push
pop
and
add
int3
lock
jmp
test
inc
mov
incb
jmp
das
xchg
rcrb
mov
mov
or
and
xchg
je
xchg
out
in
add
jmp
sub
and
inc
or
lahf
js
fs
mov
or
test
mov
in
dec
popa
or
les
sbb
add
dec
or
inc
push
mov
test
xchg
dec
push
mov
push
or
adc
jbe
push
inc
shrb
push
fldl
jae
cmp
xor
inc
ret
icebp
adc
fsub
pop
cmp
or
push
divl
in
stos
js
lock
out
ds
mov
into
sbb
clc
dec
xchg
data16
push
push
jne
mov
inc
dec
ljmp
push
pop
in
push
add
pop
or
push
sub
pop
loopne
mov
shl
add
loope
jp
mov
and
mov
scas
jle
shll
ret
imul
and
mov
push
and
outsb
mov
dec
jmp
addr16
adc
testb
addl
movsl
aas
xchg
inc
add
jmp
jb
das
push
dec
ljmp
cmpl
lock
sar
pop
test
cmpl
les
pop
das
and
jg
add
je
push
mov
sahf
sub
xchg
lea
ja
rorb
popf
in
mov
xchg
aam
fadd
fsub
pusha
not
mov
xor
xchg
inc
mov
scas
mov
jne
xchg
inc
mov
dec
bound
addr16
mov
test
in
or
jecxz
cmp
in
or
jae
cmp
nop
dec
fisttps
adc
sarb
loope
cmp
jl
dec
shr
jbe
ss
movaps
test
push
sub
pop
sar
pop
mov
mov
inc
mov
sbb
mov
lods
or
dec
aam
clc
fcomps
xlat
loopne
dec
lret
testb
je
dec
sub
adc
sbb
scas
pushf
pop
or
jb
in
push
pop
add
xor
sbb
adc
nop
cli
xchg
sub
sbb
in
sub
aam
out
mov
lock
mov
mov
outsb
or
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
nop
je
or
inc
insb
je
adc
into
pusha
lock
test
data16
insb
xor
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
or
add
ss
in
cwtl
fs
or
imul
pop
outsl
cmc
jne
loope
and
js
pop
xlat
add
movsb
mov
ret
rolb
outsb
and
shl
lret
pop
dec
or
fidivl
push
sbb
out
mov
inc
je
pop
push
or
add
mov
ret
add
hlt
loopne
adc
test
jmp
dec
nop
and
sbb
je
push
jae
or
test
insl
ljmp
rcll
pop
das
mov
cmpl
mov
and
mov
push
fmuls
mov
mov
mov
test
dec
or
and
in
mov
stos
into
sahf
add
push
insl
cmp
add
int3
notl
sub
adcl
testb
push
sbb
inc
aam
loopne
cwtl
or
das
std
out
xor
mov
or
mov
pushl
ss
mov
loopne
lret
jge
lcall
mov
inc
mov
dec
mov
pop
cmp
inc
xchg
jecxz
mov
cwtl
ret
mov
pushf
mov
mov
pop
leave
sub
lods
insb
cli
add
add
into
mov
adc
jmp
push
je
cmp
je
test
dec
movaps
insl
out
popa
aas
sbb
int3
add
xor
jo
fbstp
je
data16
push
or
movsb
dec
or
orb
adc
or
insb
shll
sbb
or
insb
add
adcb
aad
add
imul
jne
mov
jne
mov
mov
push
cmp
jle
insl
cmpl
incl
loopne
subl
sbb
adc
mov
sbb
mov
out
call
and
cwtl
sti
ljmp
ret
dec
sub
dec
rcl
lea
pop
js
inc
mov
popf
test
mov
and
lcall
dec
test
mov
sub
andb
sub
inc
adcl
adc
push
outsb
mov
add
jae
addr16
call
mov
push
mov
adc
adc
inc
fldt
xor
sahf
jmp
push
sub
lret
or
jne
push
test
je
adc
push
or
push
adc
mov
jmp
aaa
sub
je
cltd
jp
sub
je
push
jl
mov
jae
lds
in
pop
sbb
sbbl
xor
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
push
inc
or
inc
jg
clc
rcrl
push
mov
lods
push
shll
stc
cmp
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
or
into
orb
and
xor
ss
sbb
or
or
inc
inc
mov
outsl
adc
roll
je
gs
mov
test
sub
push
sub
icebp
int
push
sub
push
test
sahf
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
jb
mov
cmp
in
fdivrl
lea
enter
jns
mov
mov
xor
xor
sub
xchg
cmpsb
push
fdivs
inc
jnp
mov
nop
aaa
cmp
call
in
fistps
rcll
divl
test
inc
cmp
pop
jg
dec
lea
pusha
sti
push
cmp
pop
icebp
jl
das
or
daa
testl
sbb
adc
aas
icebp
jnp
movsl
daa
pop
mov
or
test
mov
sub
movsb
cmp
ds
or
movsl
add
pop
sub
mov
mov
push
movsb
subb
sahf
push
mov
inc
imul
ss
push
xchg
sar
das
loopne
xchg
lcall
add
adc
cmpsb
inc
mov
aam
and
idivb
pop
test
scas
cwtl
add
lea
andb
insb
add
roll
adc
test
or
movsb
cmpl
xor
add
test
or
cmp
daa
push
mov
and
add
mov
jbe
and
push
sub
cli
mov
or
jl
push
pop
cmpsb
cltd
mov
add
out
int
outsl
inc
xor
sub
jo
movsl
jle
lret
sbb
pushf
jge
test
cwtl
and
mov
push
insl
shl
xor
cmp
ss
jne
pop
outsb
push
xchg
rolb
or
addb
xor
sbb
inc
adc
adc
xchg
imul
xlat
out
or
fs
jo
sub
mov
testb
and
cmp
xchg
adc
xchg
test
cmp
sub
add
jbe
push
xchg
pushf
decl
imul
add
jmp
clc
sub
xchg
adcl
inc
mov
adc
imul
xor
dec
aas
movsb
cld
stos
cmpb
sub
cld
shr
mov
imul
and
insl
add
cld
outsb
xor
adc
sbb
push
lea
mov
ret
adc
loop
jmp
dec
push
out
jne
sar
dec
cmp
mov
add
pop
cmp
dec
or
pushl
and
mov
shr
lea
not
and
decb
mov
fisubs
sbb
lea
xor
mov
inc
or
dec
pop
add
add
sbb
push
or
inc
inc
mov
inc
lods
mov
add
push
popl
std
pop
shlb
and
sti
add
pop
mov
mov
fimuls
lret
imul
loop
or
lea
jno
jno
mov
sti
pop
mov
shr
not
and
add
or
xor
cmpsb
jl
fisttps
das
mov
xor
sub
add
mov
push
or
adc
js
fldenv
or
mov
ficoms
int3
inc
or
dec
or
sti
setnp
adc
mov
mov
inc
mov
cmp
xchg
mov
push
or
mov
mov
jmp
dec
adc
lods
sbb
mov
or
test
movsb
out
and
in
lcall
and
dec
movl
adc
shl
jnp
paddsb
dec
or
jp
push
call
aas
gs
and
jge
push
or
pop
testl
adc
inc
jmp
pusha
add
and
nop
cli
add
in
mov
or
call
xchg
pop
or
adc
arpl
enter
repnz
adc
dec
cli
add
push
cmp
insl
or
mov
pusha
test
cmp
push
outsb
mov
and
icebp
mov
lock
pop
test
pop
test
pop
xchg
daa
cmp
cmp
cmpsl
lret
out
js
add
stc
notb
xchg
pop
push
push
push
inc
inc
adc
lods
aad
rolb
fdivl
push
xor
xor
hlt
cs
adc
fisubs
in
iret
mov
sbbb
add
rcl
push
push
push
push
mov
nop
cmp
sbb
clc
add
inc
ljmp
test
incb
pop
adcb
pop
xor
or
hlt
or
sub
imul
ret
popa
imul
fiadds
or
iret
shr
in
inc
orl
orl
adc
adc
jmp
mov
lock
call
push
clc
mov
je
clc
add
pushf
rol
mov
adc
sub
sub
sahf
ret
fs
inc
pop
mov
mov
enter
xor
inc
jne
jle
icebp
add
js
lds
not
and
pop
scas
push
adc
lahf
or
adc
sbb
sub
and
pop
mov
rolb
fmuls
icebp
add
and
clc
cmpsb
adc
jle
shlb
and
jl
add
mov
add
nop
lcall
pop
mov
pop
inc
stc
cs
clc
rolb
xorb
shl
int
pop
push
nop
dec
or
std
insb
adc
into
add
sub
adc
lods
std
lret
adc
xor
dec
xchg
fstpl
lea
rcl
int3
fsubl
dec
mov
shll
pop
adc
lcall
iret
subl
jmp
pop
pop
shl
aaa
js
test
add
sub
adc
inc
add
jae
insb
xor
jne
shlb
mov
jle
sub
jl
lea
nop
jge
sbb
xchg
sub
pop
rcrb
xor
push
sar
dec
jp
pop
pop
ret
pop
insb
xor
cld
xor
cmp
dec
jecxz
xor
fisttps
mov
dec
push
push
push
fnstenv
dec
faddp
pusha
push
adc
fimull
dec
cmp
icebp
mov
xchg
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
leave
dec
push
add
sbb
popa
jp
mov
stos
add
cmp
cmp
jecxz
adc
push
push
push
jge
sub
out
and
addl
rclb
or
out
fldcw
push
nop
cmp
and
incb
mov
les
xlat
ss
adc
fcompl
or
push
jne
mov
roll
jne
popf
cmp
out
dec
jnp
add
xor
push
mov
lock
push
sub
fsubs
cmp
pop
xor
gs
lods
pop
lcall
cmp
je
mov
mov
sbb
in
cli
and
pop
les
rcrl
and
iret
jne
fwait
mov
push
cmp
mov
aam
xchg
xchg
mov
stos
jp
ret
dec
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
mov
xchg
dec
add
dec
dec
dec
pop
xchg
sbb
iret
js
or
xchg
cmp
pop
fsts
mulb
pop
mov
sub
jne
in
hlt
sub
lock
jmp
jp
cltd
sub
mov
loopne
mull
or
and
mov
jns
jp
jge
push
xorl
inc
mov
or
pop
sbb
sub
jge
ds
push
or
or
dec
cld
or
sub
push
in
jb
push
push
mov
or
stos
es
nop
push
or
mov
ret
sbb
add
fimull
xor
xchg
test
sbb
sbb
adcb
push
ds
and
add
jp
lock
lea
dec
test
ja
cmp
or
pop
jb
or
jg
loope
xorl
jp
arpl
ret
jne
and
adc
mov
lock
jp
aas
stc
cmp
jmp
add
jo
or
das
mov
push
push
rorl
fcoml
mov
cmp
lock
jle
pop
shlb
dec
mov
add
test
xchg
sti
loopne
push
inc
inc
cmp
cmp
sub
add
pop
out
add
inc
sbb
add
jl
pop
sbb
test
repnz
xchg
or
push
and
iret
cmp
or
push
adc
add
inc
loope
mov
xor
dec
aam
insl
fs
fisubs
and
ficompl
fcomps
lahf
pushl
adcl
cs
push
divl
ret
daa
xlat
out
pop
jne
push
imul
pop
mov
pop
mov
push
les
loope
sub
add
iret
outsb
loop
xor
push
dec
popa
repz
inc
js
push
or
pop
cmpl
xchg
cmpsl
shlb
test
pop
jl
movsb
add
xchg
inc
hlt
and
outsl
sub
cltd
addl
imul
inc
cmpb
je
lea
pusha
arpl
test
fistps
add
and
andl
lods
add
pop
testl
dec
ret
popf
add
stos
adcb
rolb
rcrb
push
jnp
and
and
jle
lret
mov
call
lods
aam
hlt
and
xorb
addl
in
jge
mov
add
adc
mov
loopne
jge
jmp
movzwl
or
int3
test
pushf
mov
into
je
cmp
mov
stos
dec
inc
rorl
add
out
nop
test
xchg
imul
test
push
fdivl
enter
pop
cmp
adcb
sub
rorb
aas
add
add
movsb
or
andl
movsb
repz
dec
sahf
add
rcrb
inc
int
fsubrs
clc
push
lret
xor
add
lds
mov
sub
sub
pop
and
in
leave
rorb
ss
outsb
inc
push
enter
scas
and
hlt
faddp
adc
hlt
hlt
icebp
push
jns
add
ret
fistpll
insb
jne
popa
int3
xorb
adc
outsb
xlat
pop
and
xor
xchg
fwait
jg
add
cmp
insl
int3
shlb
scas
cmp
mov
or
enter
loope
rcrb
les
sbb
pop
std
movsb
xor
pop
dec
mov
test
adc
xchg
out
movsb
in
dec
pop
enter
leave
orl
and
add
add
dec
cmp
int3
inc
xchg
dec
cmpsl
movsl
xor
push
call
xchg
lret
enter
xchg
mov
adc
add
nop
push
jl
jl
xchg
xchg
dec
in
or
fmulp
xchg
call
or
or
lahf
loopne
pop
xor
push
pusha
repnz
andl
jge
out
orl
clc
mov
mov
stc
pop
mov
dec
rorb
push
test
mov
jb
mov
leave
add
out
cmp
js
push
hlt
xchg
lahf
push
push
jb
inc
lods
in
inc
sahf
inc
sub
and
and
call
in
jns
leave
lods
add
sub
xchg
dec
scas
nop
rcrb
lock
mov
jb
xor
leave
add
lret
and
pop
test
test
jo
adc
fwait
mov
int3
test
lock
jae
cmp
adc
je
or
or
bound
mov
aam
xor
int
push
pop
test
add
push
fmull
cmp
push
mov
orb
lea
xorl
lock
lret
and
das
ret
mov
xor
push
clc
xchg
or
push
ret
xchg
mov
jne
out
je
xchg
pop
rcrb
pop
lock
xor
mov
fs
add
sbb
dec
imul
adc
push
call
mov
and
mov
shlb
xchg
mov
add
xor
sub
push
popa
add
out
test
mov
push
sar
dec
and
ret
fbstp
cmp
add
add
push
cmp
and
loop
je
mov
iret
push
push
out
add
xor
xchg
lcallw
sbb
rcrl
sub
flds
ret
xchg
stos
add
mov
ss
out
add
add
mov
mov
add
jmp
add
test
js
add
in
loopne
push
or
and
dec
add
inc
add
loope
or
push
pusha
addb
mov
mov
aaa
inc
cld
push
and
adc
inc
subb
dec
cmp
inc
sub
push
adc
mov
lock
loopne
int3
inc
xor
pop
xchg
movsb
mov
not
and
and
mov
cmp
sub
pop
lcall
add
cli
push
cmpsb
imul
mov
les
enter
dec
push
adc
cmpsb
xor
cmp
pushl
mov
adc
cmpsb
inc
lret
je
or
adc
pop
push
or
mov
clc
add
in
shll
mov
rcrl
int
mov
std
enter
add
jno
je
add
or
cmpsl
mov
adc
outsl
xor
stos
fstpl
fstpl
push
fldl
or
jno
mov
lock
jns
bound
push
or
lret
sti
insl
leave
pop
jmp
jo
push
mov
sub
orb
xlat
das
cmp
sub
ret
sti
je
dec
je
add
and
sbb
push
cltd
xor
lcall
insl
insl
ljmp
cmp
fcmovnu
popf
add
test
insb
aas
jge
loope
xlat
sub
sbb
insb
ds
stc
fwait
add
lock
test
xchg
mov
or
add
pushf
cld
sar
pop
repnz
xorl
lock
adc
pop
push
call
imul
lock
push
js
mov
aaa
jne
or
cltd
and
inc
lock
pusha
ret
lret
push
aam
out
repz
out
jp
fs
pop
add
jns
xchg
adc
andl
sahf
in
mov
sbb
fnstcw
fimull
in
je
or
loop
push
lods
lock
xor
fs
push
addr16
iret
or
in
cmp
mov
jle
and
popa
bound
inc
or
fsub
out
mov
fidivl
push
xchg
jmp
inc
faddl
rcrb
or
jne
fistpll
aas
push
jmp
cli
clc
push
fmull
pop
xchg
inc
jp
cmp
push
sbb
dec
jne
push
push
sbbl
rolb
cmp
xor
mov
inc
mov
call
loop
loopne
cmp
push
mov
xor
mov
ljmp
lret
or
adc
xchg
stc
pop
fwait
test
sub
dec
mov
xor
mov
and
sbb
inc
add
aas
mov
lods
xchg
js
xor
mov
lea
lret
or
int3
pusha
mov
shl
aam
shlb
mov
movb
xor
into
jne
sbb
pop
pop
mov
shll
clc
or
add
incb
pop
or
mov
sarb
jg
xchg
dec
sbb
pop
sar
lea
testb
add
dec
push
mov
cmp
dec
jnp
pop
xchg
mov
mov
push
lahf
mov
rolb
lock
jecxz
movsb
mov
aad
jl
or
fcmove
pop
ja
stos
jae
imul
mov
das
xchg
inc
xchg
jnp
std
lods
xchg
mov
and
mov
leave
mov
or
shl
enter
ret
daa
inc
into
ja
popf
xor
dec
push
pop
or
push
add
enter
ret
jbe
iret
mov
cmp
imul
mov
stc
or
jae
popa
mov
shr
or
mov
cs
jb
call
jge
mov
aad
in
dec
je
or
adc
jne
lahf
movsl
dec
cmp
adcb
pop
aad
mov
mov
fstl
sbb
inc
jne
mov
xor
movsl
pop
subl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
lds
dec
mov
cmp
test
frstor
sbb
lea
pop
push
jg
in
push
fs
push
dec
sahf
fistps
or
add
ret
pop
cmpsb
adc
push
and
or
mov
adc
mov
push
inc
cmp
mov
xor
popf
in
mov
lret
jge
jg
inc
sets
dec
mov
xorb
xchg
stc
mov
jcxz
jg
testl
movsb
loopne
sub
subl
imul
daa
mov
sahf
add
imul
jecxz
rclb
daa
in
mov
out
rcrl
enter
xchg
neg
adc
loopne
sbb
or
mov
pop
out
inc
add
je
notl
rorb
add
in
mov
or
sub
jecxz
xchg
xor
xor
mov
shrl
std
dec
mov
or
subl
lock
fdivr
adc
sbb
ret
sub
lods
orb
push
pop
mov
cmp
add
xchg
gs
mov
scas
cmc
pop
sub
call
dec
mov
cs
mov
xor
test
sbb
xor
gs
mulb
xchg
pop
aad
sub
nop
std
fbstp
outsl
lds
sub
in
pop
xchg
mov
cmpsb
and
mov
mov
sbbb
cmpl
pminsw
sub
es
rcll
loopne
and
pop
sbb
mov
cs
and
jns
subl
add
movb
xor
imul
mov
call
roll
mov
inc
push
fldt
mov
xchg
jl
clc
cmp
cmp
mov
sbb
call
inc
call
sub
xor
mov
mov
test
pop
xchg
repz
mov
dec
std
inc
repz
daa
lods
push
ja
in
mov
popa
lods
mull
dec
push
fdivrp
or
and
outsb
dec
ds
data16
aad
inc
in
hlt
sub
test
sub
inc
push
popa
dec
jmp
dec
pop
das
sarb
add
movsl
mov
sar
lock
xor
aam
mov
push
sub
sub
or
lds
jge
out
in
pop
imul
popf
loopne
sub
addl
scas
test
cmp
sbb
or
test
std
dec
xorl
fbstp
mov
add
pop
insl
mov
movsb
adc
or
fimull
inc
lret
jne
cmp
pusha
jp
xchg
sbb
mov
hlt
or
xchg
cmp
repnz
das
push
dec
or
push
je
enter
ljmp
std
loope
sub
or
sbb
xchg
aaa
fsubrl
add
dec
xchg
mov
test
and
add
sahf
cmpsl
stc
xor
ss
mov
or
dec
movsb
test
add
cmp
cmp
sarb
mov
xchg
outsl
mov
mov
push
imul
push
cmp
and
inc
jo
push
or
jp
sbbb
add
sub
add
mov
mov
add
or
int3
lock
jo
ret
icebp
ljmp
dec
push
lock
arpl
add
lret
mov
pop
xor
mov
out
and
pushf
icebp
scas
movsl
call
add
call
xor
pop
pop
enter
icebp
bound
xlat
adc
in
xor
icebp
and
iret
mov
cmp
and
imulb
loope
pusha
imul
pop
mov
in
pushf
icebp
ljmp
sbbl
xchg
outsl
pop
dec
gs
popa
pushf
inc
cwtl
int
xchg
sbb
xchg
shrb
test
fwait
xor
cmp
sbb
xchg
pushf
add
imul
sbb
fwait
pop
pop
arpl
dec
movsl
jb
data16
loope
inc
sub
enter
fwait
leave
push
xor
sbb
pushf
aad
frndint
fwait
cmpsl
add
mov
mov
lcall
pop
inc
jb
js
mov
or
js
pop
repz
mov
add
mov
and
mov
sbb
xchg
pop
or
xchg
xchg
mov
movsb
push
dec
inc
scas
push
mov
movsb
jb
imul
dec
add
push
cltd
fs
lcall
add
adc
je
dec
add
adc
or
pop
test
test
enter
test
leave
push
and
pushf
and
leave
pushf
nop
nop
nop
dec
add
and
xchg
pushf
push
xchg
call
add
je
mov
je
int
push
and
mov
aam
popf
out
mov
dec
movsl
inc
add
push
sbb
jnp
xor
addb
dec
rcll
cs
pop
shlb
or
jne
mov
push
pop
mov
or
adc
xchg
mov
jne
mov
or
add
fsubl
jecxz
jb
imul
pusha
fld
push
pop
aaa
fs
push
movsl
in
insl
fcoms
mov
jle
mov
and
cmp
adc
adc
and
push
int
fsubrs
dec
xor
mov
jb
cmp
nop
mov
sbb
fildl
pop
nop
into
inc
mov
jl
dec
movb
push
enter
add
mov
jb
ljmp
cwtl
outsl
mov
test
je
mov
xor
insb
mov
pop
bound
ret
cmpsl
mov
sbb
aas
jae
push
xchg
and
jle
xor
cli
sub
ret
mov
push
mov
sahf
std
push
nop
shll
fucomip
stos
bound
xor
sbb
mov
push
add
lahf
adc
popa
sub
cmpsl
and
out
push
push
xlat
es
and
shl
xor
mov
movl
add
sbb
es
push
dec
push
jl
gs
push
push
mov
add
xor
inc
daa
pop
js
add
jl
dec
add
iret
adc
imul
nop
test
mov
mov
pop
fbld
mov
or
push
add
je
hlt
daa
clc
inc
push
or
in
lret
pushl
testl
cmpsb
jmp
ss
cmpsb
pushf
xor
nop
dec
call
inc
jp
push
sub
mov
mov
pop
rclb
and
xchg
add
add
mov
cmovbe
and
jne
mov
stc
cld
nop
rorb
clc
movb
add
adcl
add
cmp
mov
push
shll
pusha
bound
fists
push
and
push
cmp
ret
push
push
jecxz
jne
mov
adcb
es
rcrb
jo
sarb
xor
divl
mov
xchg
xchg
or
add
add
pop
sbb
adc
sbb
pop
sbb
push
shlb
enter
repz
push
rcll
or
sbb
leave
sbb
sub
fldl
or
push
pusha
push
je
js
adc
mov
inc
sbb
es
xchg
sti
std
sbb
cmc
out
inc
cmp
push
dec
xchg
sarl
cltd
test
push
lods
leave
xor
sub
leave
dec
je
loopne
addr16
xchg
cld
cmp
lea
and
in
cwtl
xor
sbb
mov
jl
out
mov
jae
pop
mov
movsb
repnz
out
test
lea
mov
inc
out
sub
ljmp
jb
mov
lcall
and
dec
into
ja
cmp
roll
sbb
xor
sbb
add
add
bound
inc
jl
jno
push
dec
push
push
push
cli
sbb
add
or
scas
js
hlt
or
jb
inc
clc
sub
mov
sub
adc
int3
lahf
and
and
inc
mov
jb
fld
movsl
cwtl
shlb
push
xor
push
xor
jne
xlat
ds
dec
repnz
and
pop
or
pop
jbe
adcb
popa
jl
pop
sbb
push
pop
mov
pop
adc
inc
dec
data16
nop
mov
xor
out
imul
ret
popa
xchg
or
sbb
out
shl
cltd
cmpsb
mov
sti
add
fidivrl
add
inc
addr16
inc
and
movsb
adc
insb
dec
cli
push
test
cmp
lods
roll
xchg
jge
imul
jle
andl
push
xchg
out
xor
cmp
xor
outsl
in
jl
mov
mov
jle
cmp
mov
sbbl
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
push
rcll
lock
leave
push
sbb
and
push
test
int3
mov
add
dec
or
dec
push
push
notl
or
add
icebp
imul
xchg
mov
ret
inc
mov
in
hlt
add
pop
leave
test
andl
xlat
xorb
and
inc
sub
and
inc
dec
es
dec
sti
or
sub
orb
ss
sti
faddp
je
push
or
flds
push
push
es
jmp
test
mov
pusha
pushl
add
xlat
or
loopne
ss
xchg
insl
sub
sub
inc
or
je
jmp
xchg
xchg
sub
xchg
push
push
mov
mov
ljmp
cmp
fcompl
popa
mov
inc
or
fdivrs
push
les
sub
or
push
int3
dec
add
fimuls
or
dec
push
js
dec
mov
mov
mov
inc
sbb
inc
mov
xchg
fwait
sub
adc
cmp
inc
btc
jge
mov
mov
loop
adc
outsb
adc
fstpt
dec
push
mov
fs
push
dec
jmp
outsb
adc
js
das
adc
inc
and
xchg
sub
adc
fs
fidivrs
mov
pop
add
scas
push
lcall
push
jmp
and
mov
jg
loope
bound
ror
sbbb
test
ret
sbb
push
cs
and
mov
add
aam
inc
fcmovb
and
scas
adc
iret
lea
adc
iret
out
jp
mov
or
and
shl
adc
adc
mov
mov
loop
xor
bound
icebp
pop
test
xor
and
mov
and
sbb
sub
out
jne
movb
xchg
insb
inc
inc
rcrb
out
out
cmp
je
rcll
jb
adc
faddl
aam
xchg
pop
addr16
incb
and
outsb
or
cld
ljmp
sub
repnz
lods
push
adc
cwtl
out
addr16
outsl
mov
and
mov
or
imul
jne
test
jmp
and
cmp
and
or
cmp
ss
xchg
hlt
enter
insb
dec
mov
xchg
iret
and
push
clc
pop
testl
and
daa
or
inc
lret
and
pop
mov
add
test
sub
imul
cmpsl
ss
fistps
push
mov
inc
sbb
pop
pop
fidivl
test
mov
and
mov
cmp
jbe
pop
mov
dec
rcrb
jge
push
sub
xor
cli
clc
mov
lret
subl
cmp
cmp
in
or
je
int
push
or
gs
xor
inc
add
popa
les
and
lahf
jne
adc
sbb
insb
ss
xor
repz
pop
dec
sahf
mov
sub
adc
and
test
mov
pusha
data16
mov
dec
xor
adc
fdivs
stos
loopne
cld
push
cld
mov
inc
and
cmp
push
rcl
lret
lds
mov
sbb
inc
mov
push
inc
inc
leave
shrb
les
shlb
movsb
adc
pop
sub
pop
pop
or
xchg
add
lret
popa
fidivrs
and
repz
jmp
push
push
stc
xor
incb
or
add
sbb
pop
je
pop
es
cmp
push
pop
int
or
xor
and
rorb
push
mov
jg
jg
jmp
add
add
sbb
lock
or
dec
je
repnz
loop
and
test
mov
out
cwtl
into
inc
add
xor
inc
pop
lods
pop
out
mov
arpl
sub
test
add
in
cwtl
ja
mov
sbb
test
push
insb
and
pop
insl
adc
push
inc
pop
mov
mov
xchg
xor
loopne
add
or
push
cmpb
inc
stos
xchg
hlt
adc
bound
adc
cwtl
inc
dec
shl
and
or
push
push
or
sub
and
mov
add
push
push
orl
or
pop
mov
xor
jo
jle
xor
pop
rcrb
sbb
cmp
inc
inc
jb
push
imul
int3
aaa
sahf
and
pop
daa
inc
neg
jne
scas
pop
sahf
data16
insl
xlat
cmp
dec
inc
inc
or
jne
repnz
add
push
sar
xchg
sbb
mov
sbb
pushf
and
pop
mov
and
dec
imul
aam
pop
push
shlb
test
jl
pusha
ret
jmp
adc
xor
shrl
add
jb
jnp
push
cmp
insb
sti
or
int
cwtl
dec
dec
sbb
sbb
add
data16
mov
cmc
xor
jns
push
jmp
push
inc
in
cli
inc
push
pop
push
dec
push
add
subb
lock
adc
add
or
add
int
dec
rorb
or
or
push
and
rcrl
cmp
inc
mov
mov
shll
js
into
mov
dec
xor
sahf
dec
inc
pop
add
pop
sar
mov
push
jl
push
mov
imul
sbb
adc
loopne
cmpsb
rcrb
and
push
and
dec
andb
inc
and
push
and
fldt
inc
mov
sar
sarb
lock
jbe
jl
mov
add
xchg
insl
add
sub
clc
stc
xor
mov
or
push
push
add
call
lods
inc
scas
cmp
mov
add
insb
sbb
shl
add
xorl
add
push
cmp
leave
or
hlt
inc
adcl
mov
fs
xorl
pop
in
or
xorb
dec
js
fidivl
xchg
adc
rcrb
gs
mov
inc
cmp
cli
or
aas
push
aaa
xor
ds
mov
inc
adcl
call
je
and
movl
jl
mov
loope
pop
stos
inc
and
adc
add
sub
push
xor
sub
out
mov
es
not
mov
push
mov
cs
push
xor
push
rorb
lcall
sti
add
sbb
mov
hlt
or
jmp
test
adc
loopne
or
xor
gs
rcr
push
rol
and
enter
fildll
add
adc
jb
rcrl
lret
add
dec
add
ret
sub
push
cmp
sub
jmp
mov
shlb
mov
jg
adc
and
rorb
inc
push
pusha
jo
addr16
leave
movsl
dec
pop
xchg
or
lods
adc
cltd
inc
loopne
add
sub
inc
mov
push
cmp
scas
mov
outsb
roll
lret
sub
or
mov
push
jo
nop
scas
subb
inc
add
out
push
push
push
hlt
rep
ss
sub
fbld
sub
shl
lock
push
jmp
out
into
rorb
dec
mov
mov
pushf
push
fs
mov
or
ds
lods
in
mov
pusha
add
aad
push
imul
push
mov
add
lock
jae
js
test
or
jecxz
in
stos
pusha
pop
mov
jmp
add
add
jmp
cld
dec
leave
jle
xchg
push
add
xor
jnp
push
push
jae
lock
add
push
sbb
shll
mov
sti
std
and
or
pop
out
jae
cs
xchg
jo
adc
lret
push
stc
js,pn
cmp
sbb
repz
mov
test
mov
mov
outsl
pop
pop
loope
dec
hlt
mov
push
or
add
mov
sbb
out
pop
adc
bound
push
dec
sub
mov
pop
xor
push
out
std
push
pop
outsl
inc
or
jbe
sub
pushf
outsl
ja
jno
inc
imul
scas
sbb
hlt
orl
sbb
enter
push
mov
mov
or
loope
adc
ja
dec
test
into
and
call
or
sub
std
mov
dec
dec
add
popa
sub
sbb
and
dec
mov
shrl
shrl
sub
sbb
imul
clc
in
lock
rep
add
jne
inc
adc
adc
ss
and
push
sbb
push
or
mov
es
pop
notl
sbb
jle
sbb
mov
hlt
inc
pop
pop
mov
adc
lea
or
lea
sub
mov
xor
clc
int
xor
sti
or
cmp
cld
inc
lahf
mov
and
cmp
pop
and
rorb
cmp
add
fdivrs
fsub
push
mov
aam
imull
add
sub
pop
jnp
or
mov
jnp
fmull
out
leave
fadds
iret
adc
sub
imul
or
je
sarb
mov
dec
les
xor
xor
and
push
push
push
fiaddl
scas
dec
push
xor
mov
inc
pop
mov
cmp
add
das
xor
add
out
cmp
mov
add
fldenv
push
int3
adc
mov
not
and
or
jne
loopne
sarb
sbb
ja
in
aam
sarb
ret
and
mov
sub
aam
fcomps
and
push
ds
mov
adc
ds
inc
xor
int3
xchg
aad
rcrb
cmovbe
mov
mov
jmp
adc
insl
insb
inc
scas
outsl
jo
jle
lods
push
mov
add
or
sbb
push
imul
int3
fsubrs
push
xchg
dec
popf
mov
gs
xchg
dec
rorb
roll
aam
int
ds
lods
ret
xor
xchg
lock
xorb
add
cli
xchg
imul
mov
cld
das
es
jl
cmp
jg
inc
jmp
bound
pop
sub
jne
scas
push
punpcklwd
add
add
push
inc
adc
xchg
xchg
adc
in
rcr
fsubs
mov
insl
and
adc
mov
cwtl
dec
jnp
mov
rorb
mov
mov
push
mov
idivb
xor
xlat
loopne
outsl
ja
cld
and
sbb
dec
xchg
push
ja
mov
mov
lcall
mov
sbb
shrl
dec
sub
addb
pop
push
adc
push
jb
cld
or
jb
jb
or
adc
push
les
add
sbb
movl
sbb
rcrl
lock
xchg
lcall
jp
ret
ss
inc
cmp
adc
push
outsl
test
testb
je
testb
je
push
ret
addb
xor
lods
lods
divb
or
outsb
loope
xchg
or
inc
loopne
dec
cltd
add
pop
loope
das
andl
int3
sub
mov
sbb
push
pusha
lahf
mov
inc
shll
sub
jg
cmp
push
insb
jae
push
cmp
push
or
decl
cmp
je
pusha
fimull
jle
cmp
push
ret
add
mov
mov
insb
mov
add
adc
lret
pushl
add
dec
add
pop
xchg
pop
addr16
pop
dec
mov
daa
push
add
jns
pop
out
mov
xchg
int3
lcall
dec
fiaddl
xor
xor
cmp
dec
adc
and
and
pop
inc
sbb
add
icebp
movsb
mov
ror
and
jmp
dec
mov
xchg
mov
je
aas
push
push
xchg
xor
les
stos
add
shlb
das
sub
clc
lods
inc
jg
cmp
or
xchg
andl
pushf
add
or
in
scas
push
dec
add
test
xor
or
add
add
faddp
xchg
xchg
dec
or
jg
add
jle
dec
xchg
inc
sbb
xchg
jbe
mov
push
xor
roll
and
bound
mov
and
adc
inc
nop
jle
stos
mov
nop
jae
pop
jg
test
xchg
lods
sbb
aas
push
pop
jl
mov
dec
imul
sbb
fucom
mov
cmpsb
call
jo
pusha
test
pop
xlat
xchg
add
flds
les
add
movsl
lods
or
inc
sbb
test
test
fcmovu
xchg
xchg
imul
mov
push
mov
push
clc
mov
mov
add
mov
cmp
inc
mov
pop
mov
pop
cmp
cmp
pop
adc
pop
aas
adcl
or
sbb
cmp
inc
push
jbe
dec
add
js
cmp
rorb
and
sbb
pop
rorb
cmp
pop
or
mov
sub
and
nop
cmpsl
and
jae
pusha
sbb
xor
sbb
add
rolb
outsb
cmc
inc
cmpl
inc
push
pop
cmp
movsl
into
mov
jne
aad
ret
packsswb
movsb
mov
mov
mov
and
mov
es
push
or
dec
sti
xchg
jmp
adcl
sbb
or
mov
pop
add
inc
call
les
cwtl
sti
pop
repnz
ljmp
add
lds
mov
adc
pop
rcr
repz
mov
nop
push
inc
push
pop
je
fstps
xchg
imul
adc
jg
add
add
cmc
mov
jmp
cmp
or
fs
pop
jnp
popa
xchg
je
mov
fisubl
sbb
jmp
outsl
sub
or
sbb
sub
pop
add
addl
dec
jge
push
push
dec
add
xchg
loope
cmp
repnz
shl
in
jae
sub
pop
adc
adc
push
ficoms
pop
leave
leave
rcrb
testb
push
jno
sti
add
fcoms
jmp
xor
rolb
inc
xor
xchg
sbb
mov
outsb
orl
xchg
fcmovu
sub
jo
add
loope
sbb
xor
aaa
leave
mov
xlat
rcll
enter
pop
sar
inc
fsubrl
mov
or
mov
or
or
pop
inc
mov
ja,pn
cli
filds
jle
arpl
je
pop
mov
and
insl
inc
adc
movsl
ret
rorb
lcall
mov
dec
jecxz
ret
jb
xor
pop
test
jae
push
cmp
jl
mov
inc
insb
shrb
dec
adc
xchg
inc
and
or
inc
inc
out
testb
jne
fldl
mov
sbbl
ljmp
jb
movsl
adc
mov
lret
lret
insl
push
sub
dec
dec
add
test
fwait
push
inc
enter
icebp
cmp
pop
mov
or
repz
xchg
and
push
adc
or
in
or
and
adc
cwtl
js
cmp
out
test
or
sbb
xchg
stos
push
xchg
xlat
mov
hlt
jne
jmp
fildl
ss
in
rcll
push
out
add
adc
mov
cmp
jl
dec
scas
pop
jle
xchg
out
push
es
xchg
lock
inc
push
sub
fldl
sub
das
subl
and
push
shlb
inc
dec
inc
in
add
addl
xchg
cltd
mov
push
popl
mov
inc
cmp
sbb
mov
cmp
jo
jl
or
pop
mov
in
sbb
aam
push
pop
shrl
adc
in
pusha
jbe
add
loopne
cmpsb
ljmp
sbb
fdiv
fstpt
adc
orl
sub
cmp
pop
hlt
imul
sbb
loopne
ret
pop
out
xlat
or
rolb
int
orl
pop
fdivs
jne
inc
mov
push
movsb
in
std
jb
mov
ja
pop
cwtl
lock
test
out
xor
cmp
notl
movsl
xlat
dec
ljmp
xchg
add
call
or
rcrb
jne
lock
out
lcall
lret
jmp
jp
mov
push
mov
inc
and
ljmp
mov
dec
dec
lret
mov
into
dec
jg
ss
and
nop
adc
xlat
je
sbb
aas
loopne
cli
repnz
shll
testb
jno
sbb
xor
pop
and
je
adc
movsb
jge
push
jmp
mov
mov
inc
movb
test
jb
je
ret
jns
add
ret
jb
lods
adc
daa
mov
push
or
mov
push
stos
dec
loop
pop
push
daa
dec
pop
mulb
call
and
aaa
into
jno
push
cmp
les
shrb
and
ret
push
insl
in
nopl
shlb
fstpl
pop
jmp
cmpsl
icebp
or
push
sub
push
inc
pop
pop
push
test
or
jnp
xor
or
adc
push
loope
or
lock
fs
popf
rorb
add
jmp
push
pop
push
push
inc
shr
fldenv
shr
rcr
or
div
pop
dec
adc
inc
fnsave
mul
pop
jb
cmp
or
cmp
or
iret
push
add
xor
and
adc
or
adc
lret
lret
mov
push
sbb
fidivl
xor
cwtl
ret
adc
lret
dec
mov
xor
or
push
mov
jmp
ficoml
jo
adc
stos
inc
xchg
lods
das
dec
test
xor
pop
lods
fnstenv
dec
sbb
push
dec
add
or
shl
sbb
lcall
xor
insl
mov
roll
es
push
and
mov
jae
mov
sub
test
xor
pop
dec
sti
imul
incb
and
adc
adc
sub
pusha
pop
sbb
add
shll
push
pusha
bound
lea
or
dec
inc
movsb
test
mov
push
orl
and
mov
in
adc
cld
sbb
subb
mov
xor
pusha
inc
pop
push
mov
ficoms
fnsave
notb
hlt
imul
pop
xchg
xor
cld
adc
cmp
pop
sub
sbb
sub
insb
or
aam
xchg
cli
adc
lea
mov
lea
or
push
or
dec
inc
and
jmp
popl
or
xor
ret
jne
mov
and
or
enter
push
xor
mov
or
push
inc
mov
mov
loopne
adc
pop
push
dec
and
pusha
add
rorl
pop
sub
loop
stos
xchg
jo
mov
clc
sbb
jp
add
addl
fistpll
leave
xor
out
div
aad
adc
mov
inc
lret
cmp
xchg
lcall
add
pusha
cld
inc
add
add
push
mov
or
dec
dec
or
adc
cmp
and
and
cmp
cmp
sub
xor
push
push
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
add
sbb
test
mov
xchg
cwtl
pushf
xchg
dec
es
mov
pop
jp
sub
sub
pop
sub
fidivl
cmp
loopne
mov
ret
in
push
test
or
call
adc
in
adc
or
movsb
cltd
sbb
sbb
clc
cltd
nop
inc
and
and
daa
adc
mov
scas
nop
pop
sti
adc
add
scas
jg
test
cmp
aad
lcall
jne
aaa
mov
out
nop
or
cmp
lds
xchg
mov
push
ss
push
add
cli
fdivl
add
sar
adc
lock
mov
xchg
mov
pop
in
and
adcb
xchg
add
fsubl
or
ret
adc
les
sbb
pop
sbb
push
xor
add
aaa
add
mov
js
add
loopne
in
xchg
or
and
inc
mov
add
pusha
fwait
cmp
mov
mov
inc
pavgw
sbb
pop
cmp
jns
lea
je
sub
mov
je
lret
in
test
rcrl
ret
ret
rcrl
movsl
fdiv
fildl
mov
fmuls
mov
xchg
lods
in
push
popf
insb
in
sub
pop
int3
ret
push
ficompl
cwtl
jo
out
inc
out
cmp
push
or
jne
fcompl
pop
mov
je
push
pushf
xor
lea
xchg
test
or
dec
push
xchg
test
imul
add
and
mov
lret
or
sbbb
adc
cmp
adc
push
jb
inc
add
shrb
sarb
inc
or
rorb
pop
or
xor
shrl
adc
and
rcll
push
lret
push
jl
shlb
loope
adc
sbb
icebp
mov
dec
cmpsb
dec
ja
jmp
jb
xchg
xchg
mov
mov
cmp
loopne
cmp
sbb
xor
call
add
and
fs
or
mov
sbb
jmp
lcall
mov
add
cmp
pop
cwtl
js
aam
cmp
or
adc
cmp
jb
push
mov
push
sub
jp
or
sbb
xor
cmc
mov
out
mov
loope
add
mov
andl
add
add
in
dec
jno
notb
xor
jbe
js
scas
push
clc
jmp
pop
dec
fcom
fwait
mov
or
cmpsb
cltd
lret
int
lcall
add
pop
mov
xor
push
cmp
xor
icebp
xor
sub
int
lock
movsl
test
insl
push
push
outsb
loope
and
push
lea
push
and
out
loop
sar
mov
add
sar
mov
or
or
mov
sbb
loop
notl
jne
fisttpll
pushf
popa
or
adcl
popf
lods
push
adc
add
mov
inc
sbb
jmp
ljmp
add
pop
mov
cltd
outsl
jmp
and
ds
pusha
jp
aam
dec
sub
ret
mov
pop
addl
pop
mov
ficompl
mov
inc
cmp
addr16
or
outsb
pop
cmp
in
lods
mov
and
notl
mov
mov
mov
mov
add
mov
test
jmp
out
push
mov
cmp
nop
loope
lret
add
cmp
fsubs
loope
lret
loope
cmpsl
cmpsb
pushf
sub
xor
rolb
jmp
push
dec
inc
or
fs
lea
push
and
lea
andl
lods
jnp
mov
mov
inc
or
cmp
xlat
test
mov
jl
aas
add
mov
xor
sarl
adc
test
cmpl
scas
or
or
jo
jae
push
add
mov
jg
ljmp
sahf
cmp
sub
mov
xor
cmp
rcl
mov
cmpsl
jecxz
out
inc
int
push
add
mov
pushf
xchg
xorl
iret
inc
adc
clc
test
mov
clc
pop
cmp
or
jmp
cmp
fldt
iret
mov
adc
push
sysenter
sbb
adc
andb
dec
sarb
or
add
adc
lret
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
add
push
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
dec
rolb
inc
add
test
daa
jmp
push
mov
or
pushl
mov
sub
gs
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
xchg
out
or
loopne
cmp
and
jns
dec
adc
sub
add
push
add
nop
inc
aas
mov
loopne
xchg
dec
dec
stc
pop
mov
cmp
add
jbe
pop
xchg
push
xchg
sub
loopne
repnz
mov
mov
test
addr16
scas
int3
out
movsb
dec
mov
std
or
stos
jno
inc
jo
pop
fisttpll
mov
pusha
test
aaa
divl
mov
jo
lret
jmp
or
pop
sti
mov
pop
or
ja
push
xorb
bound
inc
ja
dec
rorl
fdivrs
jne
ljmp
dec
cmp
adc
gs
adc
xor
jnp
rorb
inc
inc
call
cmpb
sbb
or
or
movsl
rclb
dec
pop
adc
jae
repnz
rclb
and
mov
and
je
aaa
xchg
shlb
push
xor
pop
pop
mov
sub
loope
pushf
cs
mov
loop
jl
sbb
inc
sbb
dec
push
je
inc
push
push
jp
push
sbb
outsb
inc
mov
add
andl
sub
xor
cmp
dec
pop
rorl
into
stos
jo
push
repz
inc
call
shufps
mov
adc
outsb
adc
adc
sub
pop
rcr
out
std
mov
adc
and
not
inc
add
dec
or
mov
add
and
mov
inc
dec
out
imul
scas
bound
mov
shlw
stc
mov
push
pop
inc
inc
in
iret
xor
ret
addb
mov
fstpt
add
nop
std
sbb
and
into
and
aam
inc
test
cmpb
out
ret
xlat
cmp
sub
mov
xor
sbb
sub
mov
push
mov
movl
add
ret
add
adc
jnp
aam
push
cmp
jle
xchg
lods
mov
and
cmp
gs
loopne
icebp
mov
pop
cmp
lods
jg
xchg
int3
out
insl
rclb
xchg
dec
shl
add
stos
jge
addr16
aam
mov
pop
std
shlb
sub
rclb
dec
test
rclb
fsubp
push
jne
xchg
mov
and
mov
adcb
push
pop
lods
pop
pop
lret
int3
pop
pop
mov
or
and
cmp
call
dec
lcall
sub
je
xor
add
mov
into
lcall
outsb
dec
jg
lock
xor
adc
dec
cmp
jge
or
jmp
push
and
cmpsl
sbb
lods
je
inc
cmp
rcr
pop
lea
add
js
pop
xchg
aam
jecxz
les
add
jo
popa
add
jl
and
enter
test
ds
cmp
mov
cmovl
cmp
and
sub
push
sub
outsb
test
xor
and
dec
lock
inc
or
xor
sbb
push
jecxz
add
cmp
add
mov
mov
nop
mov
ret
push
inc
loopne
vdivsd
pop
mov
pop
cmp
and
pop
add
sbb
mov
sbb
loopne
jnp
fisubrs
adc
push
cmp
stc
rol
push
addr16
add
dec
imul
mov
sub
ret
stc
ja
popa
addr16
push
cmp
add
fldt
adc
sub
enter
adc
nop
xchg
push
mov
cwtl
mov
mov
das
mov
dec
pop
mov
push
sbb
adc
das
push
nop
or
je
dec
cmp
aad
daa
ret
sbb
movsl
jno
and
sub
mov
sbb
dec
mov
add
adc
or
test
and
mov
mov
lock
nop
or
dec
cmp
sbb
in
sbb
das
adc
inc
lret
inc
loopne
pop
rorl
jl
or
jle
les
enter
jl
xchg
sub
or
pop
mov
popf
inc
push
ror
lret
call
jae
jne
xchg
mov
orb
mov
inc
data16
push
nop
jnp,pt
inc
adc
bound
fmul
sbb
jno
in
push
inc
jne
and
loop
lret
sbb
dec
or
ror
xchg
xchg
loopne
mov
in
std
pushf
movsb
int3
shr
and
adc
sbb
xor
insl
mov
inc
push
mov
hlt
mov
xor
pop
add
std
sub
je
push
popf
ds
cmp
iret
adc
or
scas
and
jl
xchg
jle
clc
pop
idiv
add
push
test
cmp
adc
inc
call
dec
lretw
fstpl
or
or
roll
or
push
and
xchg
inc
pusha
insb
push
mov
sti
or
xchg
test
and
pop
mov
or
or
nop
mov
fistps
add
shll
dec
xor
adc
or
add
and
shr
add
xchg
fildl
add
and
and
push
test
lock
test
adc
push
in
add
adc
test
xor
push
mov
add
je
sbb
subl
or
sub
inc
jmp
mov
incb
in
or
adc
lock
and
mov
mov
dec
fisubl
jl
and
jecxz
cmpsb
mov
add
or
cmp
sub
pop
dec
std
call
fdivl
or
push
popf
lea
mov
pop
mov
and
push
pop
adc
pusha
nop
xor
loope
pop
sub
cltd
push
mov
dec
and
adc
out
and
fnstsw
pusha
pusha
popf
cmp
push
adc
add
xchg
rcr
and
adc
sub
test
out
test
mov
add
sub
xchg
mov
push
xor
inc
xchg
pop
push
or
sub
mov
pop
push
push
mov
mov
movsl
imul
pop
testl
imul
je
jb
outsb
lods
sbb
jmp
push
and
inc
add
adc
add
inc
flds
fstps
dec
add
or
pop
push
mov
jmp
add
std
mov
sbbl
cmpsb
ret
inc
ss
inc
popa
push
cmp
xorl
inc
lcall
push
repz
sti
jp
nop
arpl
test
test
mov
mov
pop
xchg
push
aaa
sbb
sub
rcr
sbb
add
les
sub
pop
jbe
pop
sub
jmp
sub
push
outsb
dec
jae
or
push
shrb
int3
not
test
adc
div
add
lcall
mov
ret
into
adc
adc
in
lcall
pop
in
mov
fmull
jge
ffree
repz
insb
mov
faddl
jne
icebp
mov
dec
sub
addb
add
cld
lods
push
jp
adc
test
iret
and
insl
in
sbb
mov
orl
jo
test
jp
test
scas
loop
sahf
jmp
pop
movsb
push
ret
push
fsubr
aam
andl
or
or
adc
and
cmp
sub
arpl
lock
push
cmp
inc
loopne
jg
xchg
push
add
sbb
pop
test
decl
push
jmp
or
lcall
add
fsubl
push
pop
movzbl
add
ljmp
lds
rorb
out
xchg
or
sub
xchg
adc
scas
sbb
add
adc
or
mov
or
hlt
push
mov
pop
cmp
mov
jmp
adc
push
add
lods
fsubrp
fwait
jno
in
mov
mov
fs
pop
cmp
dec
xchg
in
or
or
ficoms
into
jl
adc
jmp
insb
loopne
mov
imul
jo
sub
pop
frstor
mov
lods
in
in
insl
sbb
fbld
lock
xchg
orb
aas
and
jae
lea
push
or
mov
stc
cmpsl
mov
sar
xor
dec
bound
adc
mov
aam
fcompl
jae
daa
add
and
orl
jns
mov
js
add
shlb
pop
std
or
mov
mov
pop
cld
pop
outsb
adc
clc
out
sub
xlat
addr16
cs
cmpl
or
sahf
push
mov
shl
jne
ds
inc
sbb
gs
mov
and
mov
sbb
lock
sarb
sbb
adc
ret
inc
inc
loope
fadds
into
addr16
xchg
dec
and
mov
mov
gs
test
andps
lcall
adc
cltd
push
icebp
sbb
shll
push
mov
inc
or
mov
dec
jle
out
mov
jb
jne
adc
inc
sbb
jno
fmuls
xor
push
add
iret
jl
sbb
sub
shr
mov
incl
sub
dec
lret
shlb
aad
push
fstsw
jo
cmp
loop
push
cmpsb
lods
and
fwait
sbbl
xor
push
or
insl
or
push
mov
aas
or
or
sub
add
push
enter
fwait
int3
and
mov
dec
fwait
sbb
les
jo
aaa
sbb
or
call
jns
je
mov
mov
and
stc
inc
sahf
in
scas
add
dec
sbb
add
mov
push
repnz
test
or
or
push
inc
mov
pop
hlt
cmpsb
repz
out
add
pop
mov
lods
push
loop
adc
and
and
fcmovbe
xor
sub
scas
data16
lea
ud2
sub
pusha
das
mov
sub
insl
push
or
xor
adc
mov
out
mov
mov
stc
int3
add
mov
xchg
jb
xor
in
adc
sarb
push
imul
adc
in
fistpl
test
xchg
sbb
mov
mov
fwait
xor
repz
inc
psubq
xchg
push
xor
call
addr16
mov
mov
mov
inc
adc
or
or
add
loope
js
in
mov
sub
add
stos
pop
xor
nop
or
lods
jle
mov
dec
cmpw
or
mov
and
ret
pop
pop
and
aad
outsb
and
cmc
in
cmc
dec
cmp
rolb
imul
push
or
cmpsb
add
in
sub
or
daa
adc
mov
cmp
add
daa
scas
cwtl
pop
test
mov
cs
push
add
cmc
mov
or
inc
stos
stos
repnz
pop
pop
add
enter
adc
jge
movsl
add
jle
pushf
cmc
push
dec
xchg
mov
cltd
and
add
push
pop
inc
roll
dec
jns
dec
xchg
loopne
push
mov
mov
pop
lock
mov
clc
sub
inc
shl
add
and
loop
rolb
adc
push
mov
dec
jge
mov
and
mov
out
mov
inc
fwait
rol
pop
push
into
jbe
lea
sbb
mov
add
or
mov
cmp
sbb
out
cmp
enter
fstpt
add
incb
jae
dec
mov
adc
mov
add
sub
movsb
push
and
or
or
add
inc
sub
in
shll
and
or
fwait
add
mov
and
mov
aam
or
movsl
cmp
mov
dec
sbb
sub
rorb
je
out
aas
pop
sub
sub
not
rcrb
cli
sbbb
iret
push
ds
mov
aaa
jno
or
and
lock
test
adcl
and
push
sbb
mov
mov
getsec
sub
sarb
je
mov
add
aam
bnd
popa
mov
sub
pop
in
adc
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
mov
cli
shld
std
mov
data16
inc
icebp
sub
xchg
pop
xor
pop
lret
fisubs
test
jns
inc
lock
or
jecxz
push
aam
loope
cld
roll
jae
cmp
mov
lods
out
addl
mov
dec
hlt
lea
lock
jl
pop
andl
or
mov
xchg
cs
loop
lea
fimuls
out
and
sub
sub
ret
add
and
jge
sub
pusha
and
pop
scas
shl
xor
and
nop
nop
add
cld
adc
and
dec
add
or
pop
pop
outsl
add
stc
and
rcrb
pop
pop
and
int3
inc
leave
or
int3
add
jb
mov
add
sub
add
cld
push
cmpb
clc
lret
lods
add
clc
add
mov
pop
add
mov
and
adc
lds
inc
mov
stos
std
dec
mov
nop
into
mov
dec
imul
or
shll
pushf
mov
out
les
jne
test
or
test
add
or
cmp
mov
or
jmp
xor
or
xchg
add
fistl
fcmove
sub
xor
push
dec
jmp
fs
or
mov
cmc
or
fwait
into
add
call
mov
dec
add
inc
stos
mov
into
jmp
addb
fisubs
sbb
mov
jmp
cmpsl
mov
lods
jbe
mov
add
push
sub
or
cmpsl
je
cmp
jle
adc
adc
gs
jns
jmp
dec
push
sti
int3
push
lds
xor
data16
add
loopne
mov
std
lcall
mov
mov
fdivs
nop
push
insb
inc
mov
pop
jge
negl
mov
test
cld
sub
nop
add
jne
nop
lret
sti
lods
js
jae
imul
sbb
jge
cmp
jmp
and
push
subb
mov
dec
sti
sbb
into
out
push
sub
mov
or
xchg
rorb
orl
pop
xchg
daa
adc
test
stc
sub
pop
inc
ret
xor
mov
stos
sub
mov
shr
mov
call
out
je
mov
mov
mov
pusha
nop
mov
ret
decl
imulb
pop
cmp
adc
add
inc
testl
mov
jmp
fiadds
xchg
hlt
repnz
into
dec
adc
push
mov
lea
and
sub
xchg
rolb
or
mov
add
pushf
jmp
push
cwtl
pop
int3
pop
mov
xor
add
sbb
into
dec
imul
dec
jne
xor
pop
dec
jmp
push
sbbb
loop
cwtl
jge
neg
add
mov
aaa
dec
sbb
test
stos
out
mov
cmp
adc
nop
sbb
jmp
ret
mov
or
sub
xor
jne
mov
adc
inc
aas
add
in
dec
test
inc
daa
mov
add
and
roll
adc
dec
mov
pop
add
or
fs
shlb
mov
mov
mov
ret
and
xorl
adc
nop
shlb
andl
adc
sbb
std
mov
or
or
mov
pop
es
les
int3
jne
cmp
jne
jne
test
into
dec
inc
into
jne
inc
or
cmp
mulb
out
cmp
jne
hlt
jo
shr
xchg
jne
mov
jp
addl
or
mov
pop
or
add
lea
mov
lock
sbb
cld
push
mov
dec
lock
or
push
mov
data16
subl
lcall
mov
jmp
sbb
jg
add
dec
adc
aaa
sub
jne
loopne
shll
test
add
or
shr
push
xorb
pop
mov
pop
jge
jg
or
adc
inc
mov
les
add
notb
nop
fiadds
sti
lcall
fadd
loopne
shr
or
mov
xchg
push
push
dec
jne
jne
insb
popa
es
push
mov
enter
and
sbb
sub
xchg
inc
or
jge
cmp
shll
sbb
sar
pop
fsubl
popa
pop
lods
in
fiadds
gs
or
sbb
xor
mov
and
push
fmull
sahf
nop
dec
ja
push
dec
add
cmp
shr
popf
test
or
sub
cmp
lret
into
jmp
scas
rolb
aam
divl
and
les
adc
rolb
jp
lret
lods
add
jmp
sub
add
in
faddl
sbb
add
insl
and
push
lods
mov
or
call
adcl
mov
mov
shrl
lods
inc
add
or
push
mov
sahf
out
ds
or
mov
out
aad
lods
daa
inc
inc
lcall
lahf
push
sarb
mov
sbb
mov
cmp
add
and
sub
scas
inc
mov
mov
push
mov
rorl
insb
pop
cmp
test
sbb
adc
push
or
xchg
scas
cmp
mov
cmp
insb
inc
cs
or
ss
mov
gs
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mul
pop
add
out
imul
add
cmc
pop
sub
sbb
clc
sbb
mov
into
or
mov
adc
or
lahf
xchg
xchg
or
repz
xchg
sbb
push
outsb
sub
push
add
cs
xchg
cmpsl
adc
add
or
test
jp
sub
mov
jnp
hlt
and
testb
sub
push
add
ret
cmp
mov
pop
mov
cli
rolb
or
add
ffree
adc
xor
and
push
pop
je
setg
ljmp
push
cmpl
in
clc
add
mov
mov
jg
xorl
push
movb
das
add
add
jo
sub
push
rol
mov
ficoml
sbb
sub
es
sbb
mov
add
lcall
jmp
sub
lods
pop
dec
std
add
push
int
or
xor
jg
dec
add
or
mov
dec
sub
inc
out
cs
dec
jns
les
sub
jo
jl
negb
cld
jo
jns
xor
push
or
add
dec
pop
sub
add
sbb
ficoms
xchg
sub
ljmp
imul
scas
and
jb
xor
and
rclb
cmpsb
xor
lock
or
adc
out
adc
ret
jbe
shlb
adc
or
jbe
mov
aam
sub
adc
js
cmpb
movsb
in
pop
xor
shlb
enter
mov
shlb
adc
out
pop
dec
mov
mov
pop
jo
pop
jnp
add
xor
inc
adc
jmp
enter
xor
call
testl
pop
xchg
fstps
call
clc
and
out
jge
or
or
test
add
adc
rclb
roll
add
pop
orl
xchg
test
clc
test
dec
imul
push
sar
adc
add
lea
push
scas
loopne
nop
clc
testb
cwtl
outsb
add
enter
loopne
push
push
ret
or
adc
pop
push
xor
or
mov
add
add
jl
addr16
sbb
sbb
inc
xchg
or
leave
and
add
cmpsb
movb
sti
add
gs
je
and
pop
mov
fimuls
inc
neg
sbb
jecxz
loopne
jg
mov
jg
ret
daa
xor
or
jne
pop
cmp
daa
cmp
and
ficoms
jnp
scas
test
mov
push
es
nop
inc
je
sbb
sub
or
bound
mov
ja
sub
in
cmp
dec
xchg
sub
adc
mov
adc
movswl
imul
loop
pop
sbb
data16
sbb
or
push
mov
rcrl
add
mov
add
dec
shrd
nop
add
add
jle
cmp
imull
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
pusha
mov
pop
jb
lods
mov
pop
adc
push
shrb
push
xor
and
or
inc
cmp
mov
xor
jo
mov
out
and
lock
fisubrl
push
pop
sbb
js
jg
pop
jl
mov
inc
jmp
cmp
andl
mov
lock
outsl
jp
rcrb
push
je
xor
mov
jbe
or
stos
add
mov
outsl
ret
sub
jg
lods
jb
push
scas
mov
inc
dec
pop
or
mov
lcall
add
daa
rclb
mov
jae
stc
mov
cmp
sub
shlb
and
or
jbe
int
jp
fistps
sahf
jne
add
loop
call
or
or
adc
rorb
push
inc
addb
dec
mov
andb
sbb
sub
or
sbb
popf
call
jne
jl
cltd
orl
push
mov
pop
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
mov
je
mov
je
push
shl
jne
mov
push
or
mov
lret
jbe
adc
push
sbb
test
lea
mov
adc
push
push
insl
sub
jmp
insl
cmp
cld
cld
jl
lods
sub
fimuls
inc
lea
pop
incb
ljmp
mov
inc
pop
scas
pop
jns
jge,pt
fdivrl
jle
gs
or
pop
data16
dec
aaa
jo
loope
add
mov
push
inc
je
dec
leave
psubusb
or
sbb
pop
or
inc
dec
xchg
pop
add
xchg
push
or
cmp
arpl
movb
add
adc
call
incb
fdivl
fmull
insl
push
pop
clc
fstps
or
mov
cmp
push
shrl
loope
addl
or
das
xchg
push
rolb
sahf
pop
arpl
cmp
lock
push
dec
push
dec
push
je
add
ja
or
outsb
add
jmp
adc
sub
jbe
mov
cmp
cmp
or
sub
xor
add
shll
mov
inc
sub
add
hlt
inc
push
inc
dec
das
stos
xchg
push
jp
pop
insl
cmp
adc
cmp
pop
je
xchg
je
inc
cld
inc
jbe
cmp
push
dec
leave
jl
push
add
inc
aam
ret
mov
xchg
add
xor
aaa
hlt
and
pop
inc
add
mov
aaa
sub
pushl
rorb
cmp
xchg
ss
sub
rol
ss
mov
xchg
pop
lcall
dec
add
cmove
mov
inc
mov
bound
cmpl
pop
int3
jo
push
fsubp
push
or
push
data16
pop
inc
pop
dec
push
mov
rcrb
dec
dec
xor
imul
dec
mov
cli
rolb
pusha
test
push
stos
test
lret
mov
adc
cmp
xchg
fdivrl
lret
mov
sbb
jbe
jge
lcall
sbb
jmp
inc
or
in
inc
cmp
push
cltd
sbb
or
lock
push
xchg
or
jl
cmp
mov
mov
icebp
sub
out
mov
loop
arpl
nop
add
outsl
adc
xor
sub
jae
jg
inc
or
adc
hlt
jmp
or
jmp
cmp
dec
push
testb
cs
addl
mov
imull
int
adcb
jae
cmp
jne
test
mov
rcll
pop
sub
hlt
and
popf
mov
xor
push
and
js
xor
sbb
fwait
jo
or
jne
in
cmp
fwait
test
or
ficoms
data16
lods
cmpsl
mov
or
or
or
jns
push
push
adc
dec
movsl
aad
test
mov
push
decb
or
dec
push
add
lods
xor
dec
mov
sbb
pop
add
mov
addr16
or
addr16
sbb
mov
mov
cmpl
or
fs
or
sar
push
adc
xchg
push
push
sbb
js
lea
xchg
push
movl
inc
pop
and
push
xor
ret
insl
xchg
pushf
or
cmp
jge
notl
dec
mov
sbb
sbb
icebp
add
addps
adc
mov
call
sub
mov
lock
fiadds
arpl
rcr
lret
pushl
cmp
inc
daa
sbb
inc
jmp
pop
jb
inc
mov
lds
dec
inc
push
and
popa
ret
outsb
xor
stc
inc
inc
test
fnstenv
mov
jecxz
mov
push
scas
dec
pop
and
test
add
aam
mov
lret
or
decb
and
xchg
insb
mov
adc
das
adc
insl
jnp
sarb
rcrl
addb
dec
ljmp
mov
sbb
add
mov
pop
jmp
inc
cmp
cld
and
lods
xor
xor
sub
adc
inc
sbbb
cwtl
pop
mov
jle
out
rolb
inc
xor
fists
cmp
movsb
lret
push
pop
sub
jmp
lret
bound
rclb
push
mov
rorb
std
ret
pop
ljmp
mov
adc
adc
loop
adc
nop
adc
dec
xor
outsb
adc
aad
sub
push
sbb
pop
dec
xor
push
gs
xchg
loope
dec
push
pop
call
jo
jns
lea
int3
dec
xor
pop
or
enter
filds
add
lret
loop
push
dec
mov
xorl
loope
sbb
sbb
push
lock
add
es
jmp
jp
and
and
repz
cs
xchg
cmc
outsl
dec
sbb
fwait
cmp
adc
nop
cmp
imul
loope
loop
imulb
pop
mov
xchg
adc
iret
adc
lret
aas
add
adc
lret
inc
jmp
jp
shr
add
or
mov
sub
shr
int3
imul
lret
mov
add
add
or
bound
scas
push
add
shll
in
test
sbb
stos
mov
js
addl
or
add
int3
cld
push
scas
add
fnstcw
dec
and
jne
xchg
sub
les
add
xchg
or
jg
or
mov
shr
cmp
mov
mov
lods
or
mov
pop
mov
adc
adc
mov
sbb
fwait
repnz
xchg
shlb
dec
cmp
iret
adc
movl
inc
mov
mov
jbe
daa
and
xchg
xchg
sbb
mov
es
ficoms
or
notb
or
shl
sbbl
adc
sbb
aad
test
add
notrack
fsubs
cli
stos
imulb
or
sub
push
push
test
test
adc
test
je
dec
call
or
rclb
cmp
or
push
rcrb
ficoml
fdiv
sti
lar
mov
lock
push
add
push
and
dec
mov
push
ds
fwait
add
sub
jne
add
call
pusha
push
ljmp
inc
adc
lret
and
mov
mov
sbb
mov
push
movsb
pop
and
sbb
inc
rolb
push
jle
or
inc
addl
xor
pop
mov
ds
jle
adc
mov
gs
xor
dec
cmp
lock
dec
fcos
xchg
jl
cmpb
jl
xor
cmpb
push
popa
loopne
idiv
fdivl
cld
mov
xchg
adc
pusha
and
push
aad
adc
push
adc
shrb
push
mov
push
push
fsubs
aam
iret
ds
inc
adc
fldenv
cmc
mov
cld
aam
pop
or
pop
xchg
inc
cmp
sub
and
inc
dec
push
test
nop
pushf
mov
jbe
jbe
dec
add
imull
stc
and
enter
add
loope
into
jne
inc
mov
add
shll
mov
je
mov
dec
jo
or
jne
adc
loope
xchg
rdpmc
mov
or
adcl
mov
mov
scas
clc
mulb
and
rorb
lods
mov
adc
dec
out
jo
push
pop
and
sbb
imul
pop
int3
add
push
call
fsubr
imul
inc
out
sahf
loopne
push
neg
neg
sbb
sub
dec
repnz
sbb
cwtl
sub
adc
adc
sbb
push
into
out
push
inc
and
push
test
sbb
adc
leave
pop
inc
adc
fnstcw
jmp
jmp
jp
mov
pop
pop
pop
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
sbb
mov
push
je
idiv
and
cld
je
movsl
xchg
and
push
mov
or
sub
jl
add
inc
and
sbb
adc
pushf
mov
mov
inc
out
hlt
pop
insb
add
sbb
and
aam
ss
cmp
imul
out
mov
je
push
sbb
into
jbe
dec
add
jns
aas
bound
ljmp
jae
pop
ljmp
push
lea
dec
cli
or
adc
les
and
fwait
pushf
movsb
dec
rorb
imul
mov
or
xor
test
lods
dec
int
adc
xchg
jno
inc
cmp
stos
cs
fidivs
pop
dec
fisubs
and
insl
ljmpw
aaa
dec
call
test
adc
push
jge
mov
andb
movsb
popf
insb
leave
jne
cmp
mulb
jmp
fists
rcl
das
sub
leave
je
push
mov
mov
mov
incl
or
mov
je
mov
mov
push
cmp
ja
add
cmp
aas
sub
repz
cmp
jne
xchg
xor
shr
mov
adc
mov
dec
lea
rcrl
push
test
add
push
cmpsl
pop
mov
fwait
inc
pop
sbb
rorb
cmp
mov
jno
fistl
fbld
xor
fimuls
mov
cmp
pop
or
jmp
imul
je
cmp
jl
fildll
push
aaa
clc
leave
aaa
sub
mov
inc
mov
and
pusha
pop
add
pop
mov
movsb
xchg
cmp
mov
cmp
mov
dec
test
testl
xor
orl
cmp
pop
cltd
mov
hlt
test
aad
dec
pop
cmpb
pop
sahf
test
adc
loopne
popl
dec
test
int
lret
add
rorl
cmp
push
pop
inc
push
sub
cs
push
dec
xchg
adc
push
aam
xchg
xchg
inc
adc
arpl
push
mov
test
add
add
mov
sbb
and
lea
adc
orl
push
pop
nop
jg
sahf
testb
movb
push
rcl
shl
jns
out
aad
xlat
fsubs
fstpt
rolb
pop
and
nop
sbb
inc
add
dec
into
sbb
adc
add
addr16
incb
icebp
mov
add
mov
mov
push
add
push
push
push
sbb
sub
sbb
push
pop
sub
popa
imul
jp
push
je
test
adc
push
icebp
adc
mov
push
xor
push
mov
push
sbb
or
add
adc
mov
push
lods
outsl
movsb
jno
lods
mov
imul
lods
add
sbb
sti
ljmp
dec
lea
sar
inc
mov
mov
fsubs
sbb
neg
and
mov
outsb
inc
xor
test
cmp
inc
call
or
and
push
mov
adc
sti
add
push
outsl
or
push
inc
aas
and
jp
mov
mov
les
or
dec
and
arpl
push
adc
hlt
pop
pop
inc
mov
or
xchg
and
and
lea
pop
sbb
movsb
subl
jae
xchg
mov
add
or
mov
mov
divl
cmpsb
jnp
iret
in
ljmp
insb
inc
inc
or
enter
adc
sbb
and
sbb
sub
dec
test
ret
dec
rolb
push
mov
mov
inc
xchg
mov
adc
in
dec
xchg
mov
scas
cmpsb
aam
cwtl
dec
push
sub
andl
add
cmp
push
les
push
addl
push
cmpl
mov
add
and
rorb
pop
or
jle
jle
adc
fsubrs
rcll
push
add
rolb
rorb
pop
mov
loopne
cmp
or
add
movsl
gs
push
lret
push
jo
dec
inc
xchg
test
pop
sbb
mov
test
pop
shrl
inc
shr
mov
jmp
inc
sub
push
dec
adc
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
or
xchg
and
adc
mov
xor
loopne
lret
push
stos
push
jnp
sbb
adc
lcall
test
mov
sbb
or
aaa
pop
xor
leave
mov
xor
mov
js
js
rolb
jae
cmp
iret
dec
rol
xor
lock
nop
mov
loop
pop
jnp
sub
repnz
pushw
movsl
mov
loop
out
jge
mov
shll
push
inc
test
inc
or
lock
andb
add
xor
mulb
sub
hlt
xchg
out
jne
fdivrs
aam
inc
or
mov
inc
test
dec
ss
daa
ret
mov
dec
adc
les
pop
adc
add
or
call
mov
push
cld
lea
and
mov
int3
inc
xor
inc
aaa
dec
push
inc
add
lods
rolb
out
inc
jl
add
xchg
push
inc
sbb
mov
in
imulb
nop
xchg
addr16
test
cmpb
jge
or
or
xor
jge
inc
or
sub
adc
jmp
add
push
stc
inc
pushf
jne
sub
dec
pop
loopne
xor
sub
into
mov
adc
stos
push
enter
pop
sub
pop
jbe
sbb
data16
add
inc
add
add
push
nop
roll
sbb
cmp
xor
push
adc
adc
mov
mov
pusha
outsb
pop
les
ret
mov
call
jp
test
std
lds
adc
sbb
neg
and
insb
jle
inc
imul
nop
call
loopne
addr16
fadd
kmovw
or
mov
and
ds
nop
inc
adcb
gs
addr16
out
data16
into
sbb
and
xchg
mov
push
jg
lock
or
mov
add
sub
dec
push
lret
dec
into
or
and
sub
cmp
mov
clc
js
add
enter
adc
dec
movsl
aam
shlb
add
pop
sub
verw
cs
cli
sbb
testb
mov
clc
pusha
test
inc
test
in
imul
dec
mov
dec
cmp
xchg
push
sarl
sub
bound
or
movb
dec
cmp
dec
mov
mov
inc
dec
add
add
fadds
dec
push
add
mov
jp
jne
dec
mov
or
mov
pushfw
adc
push
inc
ret
and
add
push
xchg
bound
add
pop
ret
inc
or
enter
or
adc
lret
add
test
sub
mov
mov
add
je
mov
inc
xchg
orb
adc
out
or
or
xchg
push
or
popa
jecxz
push
add
or
ret
cmp
push
pop
pop
scas
add
adc
sbb
push
mov
and
push
adc
lods
push
imul
or
jae
mov
mov
pop
sbb
jo
mov
mov
iret
xor
push
movsb
repnz
pusha
inc
mov
jg
into
mov
rcrl
pop
rcrb
ret
jne
ljmp
inc
ret
or
mov
mov
hlt
inc
push
pop
sub
popf
jae
or
or
add
push
imul
lret
test
add
mov
mov
mov
pop
xlat
xlat
mov
aam
or
dec
push
iret
enter
push
add
enter
and
and
xchg
mov
mov
inc
jge
mov
ret
or
enter
in
sub
inc
fldcw
mov
cld
adc
xchg
xorb
add
and
inc
stos
jg
cmpb
sub
into
xchg
cmp
loopne
pop
in
out
cld
or
into
in
stmxcsr
pop
dec
pusha
ret
pop
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
test
sub
fsubp
or
pop
cwtl
pop
imul
or
shlb
or
pop
adc
mov
popa
lock
pop
cmc
pop
lcall
add
leave
lahf
pop
test
xor
adc
add
add
bound
add
add
test
mov
test
sbb
je
and
push
test
cmp
lcall
sbb
in
jb
lret
int3
mov
xor
xchg
or
pop
sbb
insl
and
sub
mov
adc
shll
lods
adc
ret
pop
fmul
cmp
push
push
ss
lods
push
cmp
and
mov
cmp
loop
sub
aaa
mov
pop
inc
ret
fisubrs
into
adc
sbb
cltd
loop
loopne
jle
and
daa
or
mov
mov
sbb
push
jl
or
lea
stc
cltd
mov
pop
icebp
cltd
mov
out
dec
and
rolb
stos
sti
fmuls
aam
xlat
lret
insl
add
cmp
leave
cwtl
leave
sbb
mov
inc
loopne
andb
and
movsb
mov
mov
fcompl
scas
add
dec
ds
je
mov
test
push
inc
jp
mov
cmp
lret
inc
inc
inc
lret
fsubrp
jmp
pop
sbb
inc
xchg
imul
out
pop
and
jo
jbe
bnd
jmp
imul
popa
test
jle
shll
or
xor
cmp
loopne
ret
mov
xor
inc
mov
jo
sbb
jnp
rolb
loopne
addr16
pop
imul
dec
leave
sahf
inc
jp
pusha
xor
stc
mov
nop
jnp
inc
call
lcall
in
je
test
push
xor
frstor
push
push
mov
aam
dec
rol
pop
pop
popf
pop
xchg
xchg
fcoms
stos
pop
popa
add
ud1
jge
add
jp
inc
adc
sub
popa
mov
je
mov
adc
push
hlt
xor
fmuls
fisttpl
inc
sbb
cmpsl
xchg
push
gs
decl
add
cmpsl
adcl
ret
xor
pusha
push
xorb
dec
and
xchg
test
unpckhps
imul
push
shrb
in
adc
iret
lds
lods
lods
push
rcrl
cmp
and
xchg
dec
pop
mov
sbb
adcb
add
jo
cs
add
scas
sbb
add
nop
lds
loop
push
cmp
and
xlat
movsl
push
es
test
push
dec
mov
fldt
fsts
add
sub
push
popa
movsl
pop
sub
mov
mov
dec
fiaddl
inc
pop
or
lock
jl
bound
push
inc
ret
sub
lods
movsb
pushf
or
xchg
adc
jmp
add
cmp
cltd
or
mov
fisubrl
pop
mov
add
gs
fs
push
adc
mov
outsb
fadd
popf
gs
mov
sub
mov
inc
cwtl
jo
lcall
inc
mov
insb
inc
popa
pop
add
add
add
aam
ljmp
enter
cmp
dec
sbb
dec
sarl
or
pop
add
fmuls
filds
jg
xor
inc
ret
call
xor
add
mov
dec
cld
add
pop
pop
jl
jl
lret
aam
dec
lea
ss
int3
popa
pop
nop
adc
divl
sbb
in
addr16
pop
nop
mov
push
out
mov
loopne
push
js
push
jmp
dec
loop
inc
xchg
fiadds
fisttps
scas
ret
xor
or
js
add
adc
xchg
mov
movl
push
inc
js
sbb
loop
sbb
and
sbb
push
das
shlb
cmp
aas
sub
sub
add
into
mov
push
gs
add
adc
into
ljmp
add
pop
sahf
mulb
loop
inc
add
sub
mov
push
lock
mov
pop
push
adc
sbb
lock
inc
inc
ds
push
mov
mov
and
or
cmp
pop
adc
add
loop
rol
or
insl
add
or
out
in
nop
int
enter
call
push
daa
ss
adc
loopne
test
adc
aaa
out
sub
sbbl
ljmp
pop
shlb
sub
lea
pop
inc
and
inc
push
add
push
mov
cld
add
and
pop
and
dec
ret
sbb
outsb
es
pop
sub
mov
cvttsd2si
test
aad
and
aaa
xchg
add
dec
int
and
pop
adc
shll
add
fists
jmp
ret
rclb
nop
lcall
cmpl
test
jns
fstps
push
xor
xor
fnstenv
cmp
fdivs
in
lcall
mov
xchg
inc
jo
in
and
push
lods
mov
sti
fwait
ret
arpl
add
cmpsb
pop
cmovl
mov
pop
ret
stc
mov
das
xchg
xchg
push
ljmp
pop
sbb
ret
addr16
test
xchg
dec
xor
in
in
in
sbbb
call
test
int
loopne
mov
adc
jg
in
adc
dec
cmp
xchg
dec
fcoms
inc
pop
mov
pop
xor
push
pop
inc
mov
adcb
cld
daa
ja
inc
or
xor
add
inc
cld
push
push
or
rclb
int3
loopne
pop
dec
pop
fs
pushf
sub
pop
inc
lock
lea
adc
test
xor
pop
imul
add
mov
inc
imul
es
xor
cmc
inc
xor
add
pusha
aas
enter
ret
pop
add
dec
pop
fsubs
incl
push
inc
xchg
cld
or
sub
jne
aad
adc
mov
push
pop
lret
cmpb
lods
pop
adc
jl
sbb
jne
cmp
es
inc
inc
adc
testl
dec
incl
repz
rclb
andb
xor
jp
sub
lock
js
or
nop
rolb
jb
pop
roll
popa
mov
xor
dec
repnz
fwait
nop
arpl
je
fwait
in
xchg
xchg
mov
jns
or
imul
enter
xor
repz
cmp
call
popa
and
xor
les
test
aam
xchg
leave
loope
nop
in
pop
jo
fsubl
in
movups
aam
pushf
in
int3
movsl
mov
sbb
fadds
pop
jb
cmpsl
mov
fdivl
or
xor
in
or
jbe
push
scas
push
pop
hlt
add
pop
sbb
xchg
jne
ja
xlat
aaa
test
cld
cmp
repnz
mov
dec
mov
jae
insb
stos
fisubl
add
test
gs
insl
imul
std
jmp
fs
dec
xchg
and
adc
call
shll
vpshufhw
fcompl
sbb
dec
loopne
int3
fldcw
cltd
ss
cltd
aam
mov
and
xor
sbb
bound
mov
insb
fcoms
int3
add
test
adc
es
or
adc
es
sbb
and
cltd
fs
sub
xor
cltd
fs
dec
cmp
inc
fs
dec
es
fs
jne
insb
add
sub
sti
in
cwtl
pop
sbb
add
add
push
loopne
rol
sbb
nop
add
nop
int3
rcl
imul
clc
hlt
scas
imul
cld
sbb
popf
push
lock
imul
cld
inc
cmc
or
push
add
scas
das
mov
pushf
addr16
sub
push
pop
movsl
fidivs
loopne
aam
cmpsl
add
inc
xor
xchg
pop
rclb
and
fsubrl
xchg
or
fadds
call
fwait
aam
mov
aad
adc
xchg
inc
shlb
or
lea
mov
ja
imul
xor
xchg
mov
aad
inc
dec
push
movsb
ss
rorl
add
das
mov
call
and
push
stos
pop
in
lcall
cmp
in
shrl
xchg
mov
cmp
cmp
mov
sbb
ss
psubsb
cltd
cwtl
cs
fadds
icebp
cwtl
insb
lock
lahf
push
stos
inc
inc
in
in
inc
dec
add
leave
adc
insl
or
dec
scas
mov
dec
insl
call
in
je
and
adc
in
xchg
dec
push
mov
mov
pop
fcom
push
push
shll
xchg
xor
ficoml
outsb
out
or
andb
insl
nop
mov
test
jbe
mov
jg
gs
cmp
loopne
fcoml
jae
test
in
dec
xchg
inc
ficoml
xor
jp
sub
subb
or
lods
pop
adcb
mov
add
cmp
test
int3
out
jnp
pop
lcall
fadds
jns
push
and
xor
xchg
and
lret
sub
in
fwait
and
jo
cmc
fcoms
mov
xor
pushf
jo
call
in
jo
jno
lea
fsts
daa
daa
daa
mov
shrd
daa
mov
daa
daa
daa
int3
rcl
jmp
or
sbb
dec
movsb
jne
jb
mov
dec
mov
ret
sbb
add
adc
or
sbb
push
push
sbb
dec
jae
jns
mov
in
sub
cs
call
dec
adc
in
imul
sub
add
je
pop
mov
or
fcoml
xor
stos
push
shll
les
or
call
mov
jne
mov
add
jne
or
ja
and
fwait
int3
xor
jmp
aas
inc
adc
arpl
jbe
outsl
fcomps
in
xor
inc
jbe
lret
int
jge
xor
mov
push
pop
mov
std
xchg
fwait
loopne
fisttpll
sti
and
push
and
mov
insl
fpatan
mov
xchg
add
mov
dec
inc
or
aad
mov
adc
dec
fdivr
jecxz
xchg
xchg
jo
add
mov
dec
sbb
pusha
imul
inc
cmp
int3
in
mov
xchg
jbe
sub
xchg
sub
sub
adc
mov
xchg
pop
cltd
pusha
inc
add
and
xor
mov
je
js
inc
push
in
aad
xchg
sbbb
bound
push
adc
add
add
sbb
xchg
lea
nop
jecxz
lea
mov
pop
lcall
pusha
mov
stos
cmpsl
shlb
sbb
test
mov
in
insl
and
jo
and
dec
test
jo
jb
add
pop
xchg
push
mov
jg
jno
fistps
lods
rorl
or
test
add
ret
ficoml
mov
dec
movsb
nop
add
ret
xlat
movsl
inc
nop
popf
test
add
mov
fbstp
insl
in
lods
sarb
fistpll
aad
xchg
pop
mov
call
loopne
popa
pop
jb
cld
mov
push
lea
call
pusha
adc
out
lods
sub
adc
enter
jle
jmp
jmp
lcall
and
xor
pop
pop
js
sub
jmp
push
sub
smsw
addl
sbb
or
cmp
nop
inc
or
or
nop
inc
push
or
or
test
adc
in
aaa
sub
enter
jge
popl
xchg
test
movsb
sbb
fcoml
les
outsb
dec
or
sbb
icebp
lods
or
icebp
xor
add
test
pop
push
gs
enter
push
loopne
aam
test
mov
xchg
imul
xchg
sub
test
aas
in
xchg
mov
and
dec
pop
mov
xchg
scas
jne
fsub
and
cmp
jg
add
sbb
push
lods
or
or
dec
or
test
outsb
cld
nop
jecxz
add
add
lods
nop
decb
fstp
cs
popf
cli
or
push
dec
in
jae
mov
call
mov
sbbb
in
cmpsb
add
push
and
lods
mov
pusha
gs
dec
sbb
xchg
adcl
or
push
lods
fiaddl
inc
roll
popa
insb
cmpb
dec
sbb
xor
cmpsb
lret
lock
jbe
sbb
xchg
or
xlat
int3
clc
lods
daa
mov
push
lds
daa
daa
sarb
mov
cwtl
push
sub
daa
mov
mov
nop
dec
outsl
movsb
inc
movsl
addb
sbb
jecxz
adcb
or
mov
das
xchg
test
cmp
in
fadds
test
daa
loope
mov
imul
push
jl
je
push
mov
sub
fisubl
jmp
adc
mov
movsb
subl
mov
mov
mov
mov
cmp
shlb
mov
pop
fwait
sbb
sub
call
pop
rorl
lahf
cmp
loopne
test
subl
pop
sub
jl
stos
lds
or
sub
sub
stos
rcr
adc
adc
adc
cmp
and
cmp
insb
fnsave
dec
xchg
xchg
mov
nop
add
call
lock
sti
add
fdivrl
push
inc
jbe,pt
xor
mov
mov
sbb
mov
mov
push
adc
js
mov
movsb
add
inc
outsb
adc
enter
mov
aas
pextrw
push
or
mov
aam
aas
rcl
or
fsubr
push
imul
xchg
std
fcompl
and
dec
and
xor
mov
jo
inc
in
scas
mov
xor
mov
in
or
test
fmull
mov
pop
ret
ss
jl
add
xchg
ret
jae
and
push
add
sti
movsl
or
inc
xchg
inc
testl
test
fs
cmpsl
insb
sub
ret
push
enter
imul
mov
enter
mov
jg
ret
mov
xor
pop
ret
jmp
cmp
pop
enter
cmpl
push
and
push
sub
fmuls
or
das
test
pusha
mov
daa
mov
sbb
push
jge
mov
mov
cmp
push
adc
mov
or
in
mov
dec
pop
mov
xor
cmc
fadds
in
cmp
xor
lahf
xor
dec
adc
je
inc
push
add
adc
lock
fcmovnu
fildl
pushl
xchg
test
inc
pop
fistps
push
arpl
fistpl
fdivr
or
sti
sbb
jg
jns
cmp
in
or
pop
cmp
clc
mov
xchg
into
enter
ret
iret
rorb
clc
push
jne
or
cwtl
in
mov
jne
pushf
fsubrp
aaa
test
or
les
in
fcoms
adc
push
jb
in
int3
enter
sbb
xchg
nop
nop
cmpsb
inc
neg
mov
add
sbb
mov
push
mov
call
stos
mov
inc
jne
jmp
outsl
mov
xchg
and
add
imul
xchg
pop
leave
and
sub
xchg
aad
js
lods
sub
add
push
rcr
push
fdivrl
xchg
pop
jge
nop
or
lock
mov
adcb
push
fmull
lds
jns
in
and
or
xor
xor
adc
loopne
movsb
ss
mov
mov
call
in
fs
fadd
and
dec
scas
inc
mov
sarl
scas
scas
dec
faddl
lahf
pusha
xchg
or
sbb
xchg
aaa
or
push
pop
mov
and
in
lock
cwtl
faddl
in
test
adc
xchg
sbb
fcompl
pop
fadd
lock
sbb
sub
mov
jno
pop
insl
inc
cltd
xchg
loop
mov
lret
ret
aas
adc
cmp
cltd
icebp
movsb
and
dec
pop
inc
pop
inc
mov
sub
adc
pop
cld
dec
sub
adc
test
mov
mov
jmp
arpl
push
mov
dec
cmpsb
mov
imul
ljmp
daa
ret
cwtl
movsb
pusha
xorl
mov
test
mov
fwait
and
fsubrs
push
and
inc
inc
cs
lcall
popa
xchg
icebp
mov
dec
xor
mov
leave
pop
pushf
xor
popa
ds
lahf
jne
add
dec
pop
lcall
sbb
enter
xchg
dec
or
or
xor
movsl
or
je
and
popf
cmpl
xor
pop
fsts
sbb
jl
cmp
out
fs
mov
push
push
stc
jl
pusha
out
out
sahf
in
and
cwtl
jg
int
ljmp
dec
push
pop
aad
xor
fidivl
rorb
adc
lahf
sbb
push
int3
lcall
and
das
enter
sbb
addl
inc
push
cmp
inc
mov
adc
test
test
mov
push
mov
jmp
aas
aad
addl
mov
outsl
pop
add
adc
or
stos
add
stc
inc
pop
nop
pop
syscall
cmp
jg
and
int3
int3
adc
inc
enter
add
das
or
les
lock
inc
out
or
andl
mov
fs
xorb
fnsave
fsubs
leave
dec
pop
int3
add
jg
add
fsubrl
loope
test
push
aam
int3
push
xor
shrl
xchg
rorl
int3
pop
dec
shll
outsb
or
in
sbb
movsl
pop
stos
aad
add
jg
dec
and
dec
movsl
lock
adc
push
sub
jmp
pop
inc
xchg
dec
lods
mov
fsubrs
or
mov
sub
adc
les
sbb
jnp
dec
sahf
mov
test
jmp
bswap
pusha
dec
adc
in
dec
js
mov
mov
add
xor
nop
popa
cmp
inc
es
movsb
inc
lcall
xor
fs
das
ret
xor
pop
push
inc
faddl
ret
fwait
cwtl
jbe
mov
out
xor
add
test
mov
add
enter
jb
sti
xchg
inc
mov
aaa
loopne,pn
iret
or
movsb
jb
negl
inc
out
andb
jl
and
mov
mov
pop
leave
sbb
mov
cmpsl
sub
xchg
jmp
add
or
pop
icebp
faddl
xor
movsb
adc
sub
movsl
mov
inc
push
mov
or
xchg
stc
add
or
orb
dec
cmp
mov
pop
xchg
sub
jmp
push
test
or
mov
pop
cmc
xchg
add
lds
adc
xchg
xchg
lods
jno
jmp
imul
inc
std
xchg
repz
imul
movsb
lods
jns
shll
jns
cmp
xlat
push
in
xchg
fildl
dec
cmp
push
xor
inc
push
dec
push
fs
pop
xor
das
lock
or
stos
mov
and
les
and
dec
shlb
add
aaa
inc
and
adc
cmp
push
and
jns
sub
xor
jb
test
and
or
adc
and
push
inc
cmp
sbb
dec
push
mov
jbe
jns
adcl
bswap
or
mov
mov
mov
add
add
cmp
cmp
xchg
lret
add
ja
add
adc
lea
adc
adc
inc
cmpb
mov
and
test
inc
nop
pop
dec
push
mov
and
jg
add
pop
cmp
fdivrl
std
push
fwait
pop
mov
enter
fildl
js
and
or
js
xor
adc
or
inc
push
mov
sub
jb
jne
popf
cmp
aam
fsub
incl
and
scas
mov
je
xor
scas
pop
aam
sub
mov
and
xor
dec
mov
adc
push
sbb
cld
adc
ss
insb
add
mov
adcl
enter
imul
mov
lea
inc
or
test
sbb
sub
popa
inc
in
adcb
mov
xor
add
test
and
movsb
mov
mov
xor
xor
fucomi
stos
mov
dec
pusha
imul
shlb
dec
or
and
xchg
loopne
add
and
scas
fs
sub
mov
sbb
push
pop
insl
fwait
and
lods
inc
lock
and
rorl
push
and
inc
or
jno
test
add
call
add
inc
test
jl
pop
push
roll
in
mov
add
inc
or
sbb
jo
insl
pop
mov
mov
add
or
xchg
arpl
adc
mov
inc
test
adc
inc
mov
mov
pop
adc
push
inc
stos
dec
and
fsubs
cltd
fcmove
test
xchg
aam
add
sub
sub
adc
xor
mov
sbb
add
mov
imul
jg
jmp
outsl
fwait
mov
mov
rcl
nop
jecxz
pushf
mov
jl
ss
and
pop
cmpl
dec
es
pop
push
xchg
dec
es
pusha
push
dec
push
mov
fs
jo
mov
dec
rorb
inc
fsubs
cmpl
or
rolb
dec
or
out
push
push
les
and
test
dec
or
lret
mov
jo
cmp
adc
xchg
mov
xchg
dec
enter
push
mov
sbbb
xor
pop
add
adc
jno
scas
cltd
je
mov
in
insb
jecxz
sub
je
mov
mov
push
dec
gs
aas
cmp
xchg
xchg
pop
lock
call
dec
out
push
mov
push
or
sbb
pop
mov
sbb
xor
pop
pop
inc
addb
mov
and
jl
and
or
pushl
orl
jg
nop
ret
or
je
mov
adc
mov
pop
xchg
aas
pop
xchg
call
jg
jns
test
movsb
cwtl
mov
aas
fsubr
inc
test
or
pop
mov
add
mov
mov
and
scas
or
cmp
adc
aam
shl
inc
addl
clc
xor
fistl
cmp
mov
cltd
int3
inc
lock
xchg
out
mov
jbe
aam
les
adc
test
push
das
stos
pop
and
pop
test
adc
loopne
push
jb
dec
loopne
sarb
mov
inc
ret
inc
ret
test
sub
nopl
lods
or
or
jae
js
sub
imul
xor
mov
movsb
mov
popa
adcb
mov
call
aas
mov
cwtl
or
add
les
enter
pushf
push
fs
lcall
and
les
pop
add
lods
push
cmpb
xor
pop
in
sbb
adc
insb
or
adc
pop
mov
or
add
push
lock
lods
or
das
decl
jmp
mov
hlt
push
push
adc
pusha
adc
adc
pop
insb
adc
xor
cld
popa
or
and
xor
aam
lds
and
les
or
les
aam
push
lods
mov
inc
lea
aas
xor
inc
and
dec
cmpsb
sbb
adc
xchg
or
sbb
cli
in
and
cld
cli
scas
and
dec
jb
pop
cmp
add
leave
inc
dec
cmp
rorb
add
adc
cmp
lods
inc
mov
nop
je
sti
mov
and
shll
jae
nop
dec
cmpsb
or
mov
aad
sbb
mov
ficoml
push
cs
roll
in
mov
or
repnz
mov
and
adc
lcall
adc
and
inc
inc
enter
dec
rolb
test
sub
and
das
test
lods
decl
mov
or
adc
cmpb
dec
cwtl
nop
leave
push
inc
adc
cmp
jnp
shl
scas
inc
jmp
mov
jmp
fstpl
mov
xor
push
pop
lods
aas
pusha
mov
mov
popa
dec
dec
push
in
fnstenv
cltd
inc
fisubrl
jno
icebp
imul
hlt
or
xor
idiv
pusha
sbb
pop
mov
pusha
in
nop
sarb
mov
repz
testl
in
jle
sbb
pop
adc
add
aaa
int
in
fcmovu
and
hlt
push
xlat
dec
push
cs
sbb
jmp
jg
jne
cmpsl
lret
adc
xor
dec
sbb
mov
setae
jo
or
push
dec
sub
inc
and
push
add
cmp
mov
push
lcall
sbb
test
mov
ret
aaa
jmp
mov
sbb
clc
xor
int
ret
push
scas
mov
fiaddl
iret
test
adc
add
sub
iret
repz
fwait
adc
push
addb
fidivs
mov
rcl
out
mov
lahf
notb
mov
add
inc
add
xchg
push
dec
in
movsb
out
mov
icebp
hlt
push
mov
push
out
inc
aas
inc
in
mov
mov
ljmp
add
fistpl
or
jnp
add
sbb
mov
or
and
daa
out
int
mov
push
nop
mov
out
sahf
mov
nop
fisttps
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
out
and
sbb
pop
pop
popa
jmp
fs
imul
jo
jb
je
jbe
js
jp
xor
xor
sti
aaa
cmp
sub
leave
adc
mov
rcll
xchg
adc
push
or
lcall
rclb
cmpl
push
imul
xchg
xlat
mov
dec
push
cmp
repnz
imul
outsl
in
in
pop
sti
arpl
fs
out
sbb
push
dec
imul
pusha
pop
jne
push
gs
xor
cs
insb
test
out
ja
bound
and
pop
popa
je
outsl
outsb
push
js
cltd
lods
rorb
cli
mov
in
aad
jbe
add
incl
sub
add
xchg
add
mov
inc
outsl
jb
sti
js
je
jb
gs
cmp
or
outsl
add
gs
fisttps
add
add
je
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
bound
pop
mull
daa
dec
outsl
jbe
dec
arpl
push
jo
ja
mov
sub
addr16
dec
jne
xchg
stc
push
push
mov
insb
dec
popa
jb
push
bound
inc
insb
adc
into
mov
out
jae
xchg
xchg
addr16
lock
fstl
xor
outsb
int
and
daa
push
scas
clc
sbb
jle
fsts
dec
js
push
jne
xchg
outsl
pop
dec
inc
sbb
das
jo
or
nop
push
sbb
fcomip
mov
inc
inc
pop
ud0
imul
add
lret
inc
adc
rorb
and
and
sub
sub
cs
movsl
cmp
cmp
ds
inc
das
stos
push
adc
cmp
ss
sub
jge
jg
cmp
inc
mov
shrb
and
push
pop
pop
imul
js
dec
movl
clc
pusha
push
inc
insb
jae
cs
cs
lcall
inc
inc
aaa
inc
or
insl
gs
insb
mov
js
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
xor
and
push
xor
sbb
data16
push
mov
imul
insl
pop
mov
sub
mov
jo
xchg
mulb
sub
and
or
ds
scas
mov
mov
xorb
inc
popa
and
pop
jnp
mov
sbb
xor
push
outsb
dec
insl
and
insl
push
xchg
loopne
aas
xor
pop
rcrl
rolb
in
adc
stos
out
mov
add
xchg
and
xchg
xor
or
imul
cmpsb
scas
sarl
gs
bound
push
mov
je
and
sub
in
ds
dec
loopne
fidivrl
sbb
add
and
mov
dec
pusha
push
daa
sub
sbb
and
das
arpl
cmp
arpl
dec
popa
sub
mov
divb
fiadds
inc
xchg
insb
imul
out
xor
int3
push
or
push
lcall
mov
fs
pop
xor
cmpl
gs
push
fistps
push
je
cs
aaa
xlat
push
out
or
xchg
shll
outsl
aas
xor
hlt
pop
into
add
pusha
dec
add
scas
or
aaa
ja
nop
imul
nop
fs
imul
inc
inc
xchg
push
mov
or
addr16
mov
mov
jle
adc
or
outsl
push
or
arpl
cmp
outsb
bound
stc
push
in
cmp
cmp
in
ljmp
push
test
js
outsb
popa
pop
or
pop
fiaddl
rclb
roll
or
leave
nop
inc
insl
imul
cmp
mov
ja
in
lea
and
ja
mov
and
pop
push
cmp
addr16
jae
jo
xchg
xor
fsubl
pop
mov
test
cmp
shlb
cld
pusha
stos
push
sub
lret
inc
sub
pop
fcmovbe
and
or
jo
addr16
outsb
aad
insl
mov
inc
imul
pop
fcompl
inc
and
dec
cmp
xchg
fldln2
mov
jg
lcall
loopne
js
imul
ds
rorl
rol
das
lret
jno
icebp
pusha
inc
mov
aas
lea
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
jo
push
cmpsb
gs
clc
jno
add
add
xor
jg
xchg
fisttps
js
jae
je
pop
lea
add
add
xchg
xlat
adc
imul
xchg
aaa
mov
jnp
add
add
adc
add
add
ljmp
add
and
push
pop
pop
or
aaa
jnp
rcll
and
or
pusha
add
js
or
sub
add
std
fcmovnu
xor
sbb
addb
add
xchg
imul
addb
add
orb
daa
push
cmpb
push
and
sub
ja
xor
int3
push
jo
aas
icebp
pcmpgtd
inc
xor
xlat
push
mov
int3
js
jo
leave
jae
ss
rorb
sbb
leave
xchg
lea
mov
nop
xchg
or
leave
xchg
xchg
add
or
mov
adc
mov
cmp
test
add
jo
or
and
jo
or
cmp
pop
ret
pushf
data16
pop
int
jnp
sahf
push
pop
mov
into
xorb
stos
ljmp
fs
sub
lods
in
stc
dec
add
test
in
mov
add
add
mov
or
xchg
mov
add
cmp
add
add
pusha
pop
orb
push
shrl
lods
popf
adc
aaa
add
roll
dec
or
and
add
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
jmp
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
sub
addl
stos
call
shll
add
lcall
mov
push
outsl
ja
cmp
push
jae
jb
bound
jl
mov
ss
popa
fldt
arpl
mov
jg
fstps
lea
dec
mov
outsl
js
push
push
rolb
inc
push
mov
inc
pop
outsb
insb
sahf
insb
gs
mov
dec
in
sub
mov
daa
add
insb
in
dec
imul
pop
jns
inc
mov
imul
mov
and
inc
jb
jns
daa
sub
mov
enter
jns
dec
mov
pusha
aad
outsb
rolb
addr16
or
pusha
les
push
mov
and
mov
add
pop
pusha
inc
aad
mov
push
push
lahf
and
fisubl
dec
clc
pop
dec
xchg
mov
sti
cmp
push
and
xor
pop
es
lds
lock
pop
dec
and
xchg
sub
push
push
jae
cmp
or
push
cmp
call
movsl
jae
addr16
subl
jmp
ja
mov
xchg
insb
adc
fnstenv
dec
testl
dec
cmp
outsb
mov
or
add
js
lods
cmp
imul
call
xor
popa
test
jae
inc
in
mov
inc
xor
jo
popa
jl
mov
jg
sub
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
cmp
push
das
divb
push
sub
es
popf
jnp
int
add
sub
addr16
loopne,pt
divl
push
cmp
scas
xchg
inc
jmp
cmp
call
xlat
stos
pushf
fimull
pop
cwtl
jb
sbb
push
outsb
jmp
xorl
das
jo
ss
xor
mov
xchg
push
lods
ds
cmp
fs
xor
sub
sub
jl
lahf
sub
or
cmp
mul
inc
add
clc
loopne
loopne
in
repz
enter
lcall
sahf
push
in
test
loopne
sahf
imulb
shl
push
xchg
nop
push
mov
repz
mov
repz
ds
push
push
or
sarl
fs
lock
push
in
pusha
cmp
push
pop
pop
push
push
push
les
jnp
ds
push
inc
inc
cmp
cmp
repz
sub
iret
repz
and
adc
add
sahf
out
lcall
ja
out
pop
cmp
clc
fiadds
sahf
out
sahf
mov
inc
xor
out
cmp
add
repz
repz
movsb
jl
out
ds
sub
in
rcrb
sub
cmpsl
pop
push
mov
aam
lcallw
mov
outsb
push
xor
add
insb
movsb
push
cmp
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
iret
jns
fcompl
je
mov
push
jg
lods
pcmpgtw
xor
add
jle
push
xchg
or
adc
inc
inc
dec
jae
pop
sub
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
and
dec
dec
inc
add
adc
sub
cld
adc
adc
clc
fbld
call
rclb
mov
scas
xor
jnp
inc
pop
in
xchg
mul
outsb
mov
ds
pop
adc
clc
lret
pushl
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
and
in
fstl
mov
and
cmp
inc
xchg
cmp
dec
imul
lret
add
adc
inc
inc
mov
mov
sub
fwait
out
cmpl
jns
ds
xor
incb
decl
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
and
xchg
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
mov
xor
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
stc
aas
sub
mov
pop
leave
loop
mov
xchg
dec
cld
sub
xchg
scas
lods
sbb
mov
iret
adc
aas
jle
into
or
icebp
pop
pop
repnz
mulb
in
hlt
and
es
inc
inc
roll
sbb
scas
insb
clc
sub
mov
out
leave
ljmp
sbb
out
jg
test
push
push
inc
inc
or
outsb
jbe
addb
and
lock
or
shrb
inc
popf
pop
push
gs
push
xor
es
add
push
adc
dec
push
dec
aas
iret
push
sub
mov
adc
pop
sbb
pop
or
mov
aaa
dec
push
cmp
add
das
cmp
pushl
pop
sub
ss
xor
das
ss
push
daa
or
xor
dec
mov
sti
mov
inc
xor
sub
dec
sub
outsb
mull
pop
dec
xchg
add
ss
dec
pop
ja
mov
xor
pop
pop
das
add
inc
dec
sbb
pop
ss
cmp
or
push
push
or
and
lods
dec
push
sub
sti
and
adc
dec
sub
dec
dec
adc
pop
adc
sub
cmp
inc
pop
daa
out
push
sub
pop
cld
sti
push
cmp
push
push
push
ljmp
xor
int
cmp
cmp
inc
push
inc
adc
adc
jne
jge
inc
rolb
jge
insl
pop
dec
and
xor
mov
dec
repnz
pop
aad
pop
or
dec
mov
xor
es
test
je
inc
xor
cmp
dec
outsl
mov
pop
scas
addps
mov
daa
add
cmpsb
mov
dec
das
sub
adc
sbb
lretw
jnp
pop
das
dec
inc
fisubrl
sbb
mov
sub
loopne
ss
push
pop
cmp
inc
jge
mov
dec
sbb
inc
int3
sub
pop
lock
insl
test
xor
pop
add
inc
arpl
imul
stos
dec
sub
cmp
push
mov
jb
mov
sbb
and
gs
jae
xchg
push
xor
dec
pop
dec
sbb
nop
cld
sbb
pop
push
pop
push
mov
sub
sbb
push
daa
clc
push
cmp
push
pop
adc
testb
sub
clc
xchg
das
pop
ss
pop
movsl
pop
inc
jnp
jg
push
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
mov
xor
push
push
nop
push
mov
imul
mul
inc
adc
push
push
xor
out
inc
or
outsl
jg
pusha
pop
push
mov
shlb
dec
add
push
cmp
mov
notl
inc
sbb
mov
mov
add
push
popa
push
push
lahf
mov
inc
popa
outsb
insb
adc
push
popa
adc
add
imul
bound
xor
and
jmp
into
push
jbe
push
and
cmp
repz
nop
mov
into
repz
push
push
xorb
pushw
xor
andb
lahf
idivl
mov
add
cmp
push
mov
outsb
ss
adc
pop
sub
pushf
xor
sbb
xor
je
mov
scas
cs
add
pop
aam
xlat
dec
add
cmp
xor
ss
sbb
aad
or
pop
inc
js
inc
jbe
fistpll
push
pop
or
sub
cmp
pop
dec
pop
nop
add
dec
fsubrp
js
fisttpll
inc
and
push
jnp
cmpsb
sbb
push
jmp
jb
push
arpl
adc
jbe
movsb
sbb
adc
pop
aaa
push
insb
arpl
adc
push
adc
and
or
dec
ss
fildll
sub
pusha
sub
add
push
prefetcht1
mov
sbb
xor
dec
fimull
in
out
js
sub
pop
xor
cmp
imul
pop
ja
ja
xor
ss
cld
or
pop
dec
sub
pop
and
pop
xchg
xchg
scas
jge
push
rcr
fs
cmp
outsb
scas
push
dec
pop
sub
mov
sbb
xor
sub
xchg
pop
shlb
out
fistpl
sub
cmp
pop
add
mov
mov
das
cs
adc
push
jae
and
add
inc
inc
das
in
and
in
push
cmp
daa
lock
cs
and
mov
cmp
mov
cltd
xor
cmp
pop
xor
sub
or
push
pop
ss
and
pop
in
lret
fimuls
and
adc
and
fiaddl
mov
xor
rdtsc
movsb
call
outsl
andb
loope
push
mov
xchg
mov
or
mov
push
stc
and
mov
mov
ds
and
push
xor
pop
adc
adc
xor
ja
xor
in
sbb
pusha
data16
push
cmp
push
dec
hlt
xor
das
and
jle
loop
sbb
add
sbb
rdmsr
cli
in
push
jo
jno
mov
push
mov
or
daa
popa
xchg
rorl
push
sbb
mov
xor
dec
iret
pop
xchg
insl
ret
movsb
lcall
mov
pop
xchg
sub
mov
pslld
jp
jle
in
pop
add
ss
pop
dec
cmp
pop
and
dec
aas
mov
ja
insb
jne
add
icebp
jo
push
sub
jo
ret
and
mov
je
xor
push
mov
push
call
push
cs
lds
faddp
lcall
jl
cmpsb
push
pop
add
rcrb
mov
mov
jo
inc
push
sub
ror
test
pop
lcall
stos
sub
push
inc
ret
sub
incb
dec
or
and
cltd
push
jge
loopnew
scas
add
dec
pop
xor
push
dec
pop
into
sbb
pop
ja
daa
adc
lods
sbb
insb
mov
pushf
test
adc
sub
sub
aaa
pop
pop
adc
push
out
adc
sbb
sub
fwait
mov
daa
dec
das
adc
pop
sbb
add
lds
jp
xor
sbb
int
inc
or
add
lock
out
dec
cli
shll
sub
lods
add
ja
lds
bound
fiadds
das
add
sbb
or
push
add
cmp
or
outsb
sbb
inc
sbb
pop
cmp
push
push
push
pop
xchg
pop
loopne
enter
dec
push
cmpsb
or
adcl
add
cmp
mov
push
push
cs
adc
xlat
daa
lods
pop
adcl
addb
insl
sub
fs
subb
push
daa
dec
les
jecxz
bound
cmp
test
jnp
sbb
popa
fidivl
scas
adc
jae
add
push
mov
push
push
dec
cs
and
mov
pop
sub
jp
pop
xchg
jmp
push
insb
outsl
jb
testl
pop
pop
push
push
lock
mov
daa
and
jae
popa
cmpsb
shlb
mov
insb
daa
inc
xor
mov
add
and
xor
js
add
in
sbbl
push
mov
loope
movsl
xor
mov
out
and
imul
aas
loopne
rolb
and
icebp
push
ret
xchg
xor
testb
sbb
mov
adc
sub
pop
push
sub
pop
adc
fstl
das
loopne
cmp
icebp
mov
movhps
fcomps
adc
pop
adc
popf
adc
mov
int3
ds
or
pop
loop
stos
mov
out
xor
dec
jle
dec
fdivrp
das
push
dec
pop
pop
sahf
fisubs
xor
lcall
mov
loopne
xor
xor
addr16
or
or
cmp
sbb
and
and
jno
jbe,pt
sbb
ss
xor
pop
xchg
outsb
dec
xor
and
push
ja
add
lcall
xor
inc
adc
stos
push
daa
incl
cmp
dec
xchg
mov
xor
push
fsubrs
inc
add
lods
fnclex
xor
outsb
add
inc
dec
fs
ds
adc
add
pop
mov
dec
je
ret
add
sbb
outsb
test
mov
cwtl
push
das
and
add
dec
addr16
sub
dec
pop
icebp
mov
cmp
adc
add
cmp
jecxz
mov
fucomip
jge
jbe
out
push
nop
mov
push
repz
sbb
mov
inc
cli
push
xor
pop
mov
add
lods
mov
xor
das
mov
sub
iret
push
in
push
jo
mov
mov
push
sqrtps
push
das
pop
xor
out
mulb
enter
mov
cmovb
xor
sbb
out
xor
pop
pop
adc
pop
pusha
jb
add
test
loope
sbb
and
and
ret
out
and
js
lcall
ja
fimuls
lock
pop
push
and
xor
and
add
or
cltd
repz
adc
sbb
mov
adc
mov
or
es
sbb
and
js
mov
mov
sub
sub
pop
cmpsl
pop
jb
mov
xor
sub
aam
jg
jmp
adc
sub
int3
inc
xchg
sub
lea
in
push
and
inc
fimull
in
dec
sub
daa
sahf
xor
xchg
notb
mov
push
outsl
fnstcw
adcl
ret
pop
int
mov
inc
insb
aaa
outsl
push
popa
iret
mov
insb
xor
negl
inc
das
fstps
mov
sbb
push
xor
pushf
pop
lods
adc
push
dec
std
jecxz
mov
push
and
sbb
push
sbb
sbb
pop
sub
sub
add
int3
mov
add
fcmovnbe
in
data16
jns
xchg
mov
push
xchg
cmp
je
incl
pop
add
push
push
cmc
add
push
idivb
push
push
add
push
cmp
fbstp
add
sub
add
das
cmp
cmp
add
cs
fiaddl
int
push
repnz
loope
arpl
mov
sbb
inc
push
iret
clc
movsl
push
push
push
xor
push
data16
sbb
sub
fists
and
outsb
add
cmp
and
sub
cmp
add
xor
test
rcr
notl
adcl
pushf
sbb
out
dec
push
imul
jne
xchg
in
sbb
dec
mov
sbbb
push
mov
imul
adc
add
push
add
pop
jb
pop
sub
jnp
cmp
xor
add
pushf
lods
testb
pop
xor
pop
mov
popa
xchg
sub
movsl
sbb
adc
call
sbb
adc
test
and
mov
ss
pusha
and
cmp
sbb
out
push
mov
sbb
fwait
aad
and
inc
push
sub
jns
mov
in
and
dec
pop
or
pop
sub
rorl
adc
xor
xorb
xor
aaa
cwtl
add
xchg
push
test
fcoml
lcall
dec
cmp
sbb
lods
leave
or
pop
jmp
jl
loop
cmp
push
push
push
sub
or
and
imul
push
dec
pop
xor
fildl
and
dec
dec
or
jo
cmpsb
xor
dec
ja
addl
inc
ret
nop
hlt
rclb
push
xchg
mov
jmp
daa
jge
sub
ss
sub
pop
movsl
mov
js
in
aaa
xor
mov
cs
sub
sub
adc
sbb
jp
push
mov
daa
dec
pop
in
shl
sbb
das
mov
adc
dec
sbb
pop
dec
mov
sbb
lods
cltd
in
cmp
inc
inc
pop
std
int
xchg
sub
pop
inc
xor
cld
sbb
push
sbb
push
dec
pop
pop
push
sub
test
sbb
pop
aam
or
popa
dec
dec
and
sub
push
icebp
jne
addb
add
aaa
aaa
popa
mov
adc
sub
push
cli
jo
insb
gs
ja
fs
pop
inc
xor
push
push
jecxz
imul
cmp
xchg
in
add
adc
and
dec
test
cmp
pop
cmc
or
inc
jb
jecxz
mov
outsb
dec
xor
repz
adc
sbb
and
addr16
add
dec
mov
or
xchg
fwait
int
add
add
imulb
or
adc
adc
int
jnp
jns
and
sub
xor
inc
mov
out
cmp
adc
mov
mov
fisttpl
sbb
sub
int
mov
add
or
adc
mov
xor
pop
add
ss
int
add
dec
str
flds
cwtl
or
and
das
jge
outsl
jo
out
adc
push
shlb
imul
add
ss
int
ss
and
inc
fneni(8087
fdivl
iret
repz
jnp
es
pusha
andb
nop
loope
push
icebp
push
push
out
jnp
push
jecxz
inc
mov
inc
out
daa
and
push
bound
pop
push
aaa
mov
and
mov
mov
scas
sbb
ljmp
add
adc
mov
mov
lods
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
aam
repnz
pop
sbb
xor
mov
dec
fsubs
call
rcrl
test
xor
dec
xchg
pop
shl
dec
push
lds
jbe
adc
adc
enter
xor
out
sub
jg
inc
push
dec
cmp
and
dec
leave
mov
pop
mov
xor
jbe
xor
jb
or
fcmovnb
outsl
push
dec
imul
xchg
out
adcb
sub
in
dec
dec
push
inc
mov
xor
and
jns
sahf
adc
add
add
pop
jb
dec
loopne
dec
clc
add
jae
inc
mov
insb
inc
js
pop
sub
scas
cmp
ds
add
test
loope
push
dec
pop
int3
loop
lods
clc
pop
or
loopne
outsl
or
ss
cmp
xor
sub
inc
inc
xor
xor
inc
xor
inc
push
xor
push
or
jne
shr
mov
adc
add
shlb
rcrl
cmp
imul
das
js
out
xorb
insb
inc
arpl
dec
pop
dec
xor
jb
pushl
stos
jo,pt
popa
bound
je
bound
imul
ds
xor
lret
and
and
dec
mov
and
push
lahf
pop
in
push
mov
ja
mov
adc
sbb
das
xchg
mov
pop
fcmovnbe
das
stos
pop
out
push
cmp
sub
out
pop
test
jo
fucomip
andl
aaa
cli
insl
jno
sub
or
loopne
pop
xchg
xor
popl
add
insl
xchg
scas
pop
adc
sub
sbb
pop
add
loope
ja
cld
sbb
or
insb
repnz
jbe
add
add
pop
jnp
and
inc
and
inc
das
xor
das
jns
or
adc
pop
sub
jo
daa
lock
daa
xchg
int3
mov
mov
adc
adc
push
incl
sub
lahf
pop
in
das
pusha
dec
pop
pop
sbb
push
sub
jecxz
dec
mov
jns
inc
pushf
out
add
neg
mov
lahf
outsb
inc
add
outsl
pop
pop
inc
je
jns
jle
aaa
jnp
outsb
pop
sbb
sub
inc
lcall
mov
outsb
pop
cmpsl
jno
enter
lods
xchg
sub
jno
fcomip
fisubs
push
push
jo
xchg
ja
fimuls
gs
mov
fnstenv
push
inc
ds
popa
xor
inc
in
mov
push
or
data16
pop
or
pop
outsb
ffreep
out
jne
or
add
rcr
repz
and
inc
cmpsl
jge
int3
scas
mov
or
push
dec
and
dec
lret
nop
push
mov
imul
imul
jge
fwait
in
mov
mov
cmp
loope
int
mov
push
stos
push
mov
sarl
pop
add
xor
int
idivl
mov
inc
pop
insl
push
fs
inc
ds
sub
mov
mov
cmp
xchg
push
sub
xchg
idivl
jns
cwtl
leave
push
pop
pop
push
idivb
sahf
sub
push
fiadds
pop
sahf
out
outsl
arpl
jne
xchg
jecxz
mov
out
push
cmp
pop
fisubs
pusha
testb
xchg
sbb
aaa
js
push
fistps
jl
repz
sub
lea
mov
repz
insl
xor
leave
test
jnp
sti
jbe
pop
push
sbb
inc
es
push
psllq
sti
push
inc
aaa
adc
loop
mov
pop
mov
xor
iret
jnp
push
adc
and
cmp
roll
jae
mov
jl
iret
rolb
and
and
cmpsb
iret
sarl
call
cmp
push
pop
push
push
inc
and
out
repz
and
repz
mov
dec
repz
inc
push
fcompl
add
pop
aas
push
jge
out
jb
mov
imulb
roll
push
add
ret
decl
jg
dec
sbb
scas
sub
test
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
pop
in
inc
mov
loopne
mov
xchg
push
out
adc
push
and
pop
incl
mov
ds
adc
or
or
repz
adc
daa
or
jl
add
add
or
stos
outsl
mov
inc
stos
imul
outsb
pop
popa
add
mov
push
cmp
daa
inc
sbb
mov
ja
aaa
push
mov
cmp
jae
cmp
cmp
xlat
push
xor
mov
push
test
jae
dec
cmp
rcll
insl
lcall
adc
ljmp
add
imul
imul
jo
add
jns
push
adc
neg
or
das
push
pxor
repnz
outsb
push
inc
imul
jae
outsb
iret
push
pop
retw
popa
mov
jae
inc
ss
dec
mov
ja
jl
jns
test
addr16
push
and
add
dec
inc
dec
xor
out
sbb
ds
popa
fsubrl
adc
cmp
jo
es
insb
je
push
fildll
popa
jo
jae
es
outsl
and
aas
cmpb
cmp
insb
adc
and
cmpsb
mov
or
xor
xor
xor
xor
stc
xor
cmp
cmp
and
xor
push
xor
xor
cmp
in
dec
lcall
cmp
push
xor
push
jle
addr16
adc
or
or
out
bound
sub
fisttpll
rclb
sub
add
add
or
mov
add
mov
fimuls
out
dec
jne
or
in
sub
inc
repz
add
pop
mov
mov
pop
push
dec
jle
push
ss
movsl
pusha
or
mov
orb
push
or
loopne
mov
xchg
add
in
cmp
push
fsubrp
cmp
cmp
or
cmp
and
xor
or
sbb
and
js
add
xor
ret
cli
mov
ret
sbb
pop
push
cmp
fsts
pop
jl
lock
cmp
aas
pop
sbbl
pop
fsubs
jecxz
sub
or
fsubs
call
mov
xor
pop
push
into
clc
js
push
cs
test
in
jecxz
sbb
imul
ss
je
cmpsl
das
pop
sbb
sbb
or
sub
scas
push
daa
pop
add
pop
sub
pop
in
xor
rcl
or
push
aaa
xor
imul
fidivrs
cwtl
pop
xor
push
subb
add
push
pop
aaa
jo
popf
in
jns
sub
lods
mov
dec
pop
aaa
inc
pusha
add
mov
and
add
insl
mov
stos
push
pop
adc
pop
lods
daa
jge
test
outsl
das
das
fisubrl
pop
divl
iret
pop
les
repz
xchg
push
loope
adc
adc
jno
push
lds
sub
popa
mov
test
daa
pop
xchg
lds
das
dec
neg
inc
stos
test
sbb
test
imul
or
je
xchg
fmuls
pop
dec
push
cwtl
cmpl
das
mov
imul
pop
scas
pop
cltd
mov
lahf
pop
xchg
fwait
adcb
popl
dec
pop
add
ficompl
pop
addr16
arpl
pop
out
sbb
pop
xchg
push
popa
pusha
lods
xor
cmc
and
xor
mov
and
mov
xor
fcoms
insb
lcall
cltd
push
test
inc
pusha
sub
andps
pusha
dec
adc
xor
adc
js
jl
adc
jl
add
icebp
and
test
std
popl
xchg
mov
or
or
scas
add
insb
sbb
into
cmpsl
xchg
outsb
pop
ret
mov
pop
mov
cmp
add
adc
add
cmpsl
fsubrs
mov
in
inc
int
aaa
push
dec
and
xchg
lock
xor
ret
es
loopne,pn
mov
cmp
das
sahf
xlat
or
mov
push
sbb
xchg
adc
movsl
mov
pushf
xchg
data16
cmp
into
adc
daa
adc
pop
dec
fcompl
loope
addr16
das
add
push
dec
enter
and
das
addr16
daa
cmp
icebp
addr16
pop
fs
and
mov
ja
jb
mov
xor
or
movsl
adc
mov
sbb
sub
scas
test
das
dec
cwtl
push
jecxz
pop
add
repz
add
insb
test
pop
sub
and
dec
sbb
add
sub
sbb
aaa
loop
push
test
insl
adc
push
add
push
add
push
cmpsb
xor
push
data16
lock
and
imul
sub
xorb
cmc
shrl
aas
dec
jo
mov
cs
fisubrl
or
jecxz
and
mov
jnp
push
rorl
adc
mov
or
scas
enter
add
xorb
scas
adc
cmp
add
sbb
mov
adc
inc
ss
lret
std
and
mov
xor
fmuls
mov
test
popa
int
les
or
pop
pop
sub
pop
or
fcoms
cltd
add
pop
xor
mov
shrl
sub
and
fiaddl
ret
data16
cmp
cmp
popa
lock
inc
imul
or
cmp
pop
call
test
sarb
es
das
sbb
les
adc
jmp
or
fdivl
push
pop
inc
or
loope
adc
pop
push
dec
std
inc
xor
or
and
pop
insl
cmpsl
inc
mov
pop
pusha
ret
out
das
push
jmp
and
repnz
xchg
sub
sub
push
push
pop
lods
push
and
push
xchg
shr
pop
pop
push
add
pop
and
imul
adc
push
arpl
mov
cs
mov
add
sbb
mov
in
sub
movsb
sbb
inc
pop
xlat
cld
push
mov
je
pop
inc
push
dec
xchg
xor
ljmp
std
jb
jo
mov
test
shlb
fsubr
xor
xor
cld
into
add
adc
fimull
daa
push
adc
add
push
adc
push
dec
cmc
testb
add
sbb
lret
push
add
fcomip
jg
sbb
push
push
push
aaa
pop
xor
or
ss
sub
dec
aaa
inc
add
adc
adc
push
aaa
add
and
cmp
and
sbb
dec
aaa
and
sbb
pop
daa
pop
loop
call
nopl
pop
pop
push
add
dec
inc
push
push
aam
adc
adc
push
mov
dec
pop
lret
out
incl
add
add
sbb
or
push
inc
pop
dec
or
xchg
mov
push
add
dec
dec
xor
push
or
adc
adc
pop
icebp
stos
icebp
push
inc
xor
push
ss
inc
add
dec
pop
stos
lcall
xor
push
and
sub
and
out
xchg
inc
loop
push
leave
xlat
js
mov
inc
mov
dec
xchg
add
push
ret
pusha
cmpsl
repnz
push
inc
dec
cmpsl
cmpsl
incl
or
pop
push
pop
push
pop
inc
push
in
cwtl
or
sbb
insb
push
packuswb
add
xor
ret
sbb
in
and
push
push
andb
loopne
add
sub
inc
ret
xor
dec
pusha
cld
cmp
mov
or
adc
out
dec
dec
and
pop
int
outsl
inc
addb
imul
jecxz
mov
adc
xchg
fsubr
jp
les
add
mov
inc
pop
nop
mov
mov
jbe
imul
or
push
xor
icebp
ja
js
push
push
inc
push
dec
mov
aaa
xor
inc
pop
add
outsl
add
inc
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
mov
incl
sbb
cwtl
stos
pop
fcomps
mov
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
dec
loopne
rorl
and
sub
sub
fsubrl
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
ljmp
adc
or
cld
insl
sub
adc
or
or
pushl
leave
ret
sub
xchg
mov
data16
mov
call
cltd
call
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fdivr
fcomip
decl
lret
rep
cs
arpl
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
decl
push
mov
fwait
stos
flds
pop
xor
xor
jo
pop
es
das
jne
push
jg
pop
inc
jbe
and
sub
inc
push
sub
jns
aas
or
push
cmp
jmp
jnp
pop
jb
arpl
jp
dec
sub
pop
xor
jno
jge
inc
push
cmp
adc
inc
imul
xor
inc
aaa
xchg
outsl
push
shlb
dec
dec
sbb
sbb
or
xchg
ret
pop
pop
pop
daa
dec
aaa
xchg
orb
pop
sub
sub
dec
push
subb
inc
push
into
push
pop
iret
jne
push
das
aaa
pop
sbb
pop
popa
jne
addr16
adc
pop
sbb
sub
das
push
or
or
pop
sub
ficoms
push
and
aaa
push
xor
pop
imul
xor
xor
xor
popf
in
inc
push
xor
xor
and
fstps
jbe
aaa
inc
push
inc
cs
inc
cmc
mov
scas
ss
cmovb
pop
ss
lahf
ss
data16
data16
daa
or
test
test
inc
loopne
push
or
jg
test
and
xor
ss
inc
cmp
ja
jbe
sbb
test
add
bound
iret
jle
xor
cmp
pop
inc
push
mov
sub
in
pop
dec
rcr
xor
ss
rcll
dec
lods
lea
xchg
cmp
ss
jl
enter
mov
ret
adc
sub
pop
subb
mov
inc
js
mov
xchg
and
inc
pop
sbb
adc
loopne
aad
sbb
inc
pop
xor
xor
jp
push
and
test
cmp
frstor
pusha
lea
aaa
adc
sbb
xor
mov
mov
into
push
int3
push
sbb
stos
add
je
mov
loop
and
pop
sub
mov
add
sbb
fadds
and
sbb
pop
cmp
scas
ds
xchg
adc
sub
xchg
pop
mov
sub
jge
das
das
sbbb
shl
add
mov
nop
and
mov
mov
aaa
xor
pop
shlb
jbe
loopne
mov
aam
push
mov
mov
jle
cmp
pop
and
fs
prefetchnta
data16
add
inc
arpl
sbb
xor
or
add
rorb
and
sub
pushf
enter
xchg
push
adc
popf
or
sub
push
pop
dec
pop
pop
mov
in
dec
les
pextrw
sbb
in
xor
js
xor
imul
pop
insl
gs
cmp
mov
cmp
mov
add
cmp
adc
into
and
inc
aad
mov
push
ljmp
sub
int
xor
lret
decb
inc
rclb
outsl
insb
dec
push
popa
je
push
clc
xchg
push
popf
insl
testl
fstp
fs
adc
push
pop
add
jl
fcompl
or
gs
and
mov
pop
pop
dec
out
mov
xchg
je
xor
mov
cmp
sub
mov
xor
cmpsl
outsb
test
cmp
sub
call
shufps
daa
mov
fs
shrb
push
jae
and
out
fcmove
dec
fbstp
and
fmull
push
adc
in
push
push
sbb
mov
fs
mov
stos
pop
lock
mov
push
dec
sub
jae
sbb
lret
pop
xlat
or
inc
xchg
and
sbb
pop
pop
pop
adc
das
nop
cmp
movb
test
push
sahf
dec
popa
dec
cli
pop
push
les
call
jb
pop
repz
outsb
inc
lock
jae
inc
jne
ds
xor
and
adc
sahf
aaa
mov
adc
adc
test
test
pop
pop
test
jnp
inc
add
pop
nop
jns
fcoms
sbb
add
add
rorb
out
pop
pop
inc
outsl
popa
pop
lods
enter
or
daa
push
or
xchg
fs
jo
lret
and
push
out
or
xor
stos
push
outsl
imul
fwait
lods
dec
cmp
pop
pop
sub
or
cld
sub
push
aas
in
add
adc
adc
push
dec
das
test
pop
push
arpl
fisubl
push
test
xor
adc
fadds
push
xchg
push
mov
sbb
outsb
add
das
push
xchg
int3
cmp
mov
pop
sbb
daa
and
mov
xchg
xlat
jl
pop
sahf
in
test
into
pop
sbb
inc
sbb
sub
in
adc
xor
jg
sbb
xor
iret
lods
or
xchg
or
dec
lret
xor
sub
push
add
sub
mov
push
xor
sbbb
and
scas
iret
imul
pop
push
jb
xlat
es
pop
pusha
xchg
sahf
mov
mov
ja
das
pop
pop
pop
dec
pop
push
inc
or
pop
fdivs
dec
pop
dec
pop
in
insl
xchg
enter
pop
repz
test
insl
insb
daa
sbb
mov
rcll
test
sub
add
xor
mov
in
and
pop
inc
std
dec
push
loopne
add
rorb
add
aas
pushf
aas
add
sub
inc
cmp
rorb
out
inc
ret
mov
inc
add
or
add
cmp
push
mov
imul
loopne
mov
jns
jne
or
push
stos
lods
push
outsl
xchg
mov
aam
add
sub
es
outsl
mov
outsl
and
or
mov
inc
inc
cmpsb
inc
out
and
punpckhwd
dec
outsb
push
je
lea
shrb
popa
in
inc
push
dec
std
jg
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
sbb
in
xchg
jns
gs
sub
pop
xchg
aad
inc
add
fwait
pop
add
or
dec
push
dec
jb
andb
inc
rolb
adc
ret
pop
adc
in
mov
fs
loop
cmpsl
xor
cmp
inc
adc
dec
mov
dec
rorb
xchg
push
xorl
jns
jb
ja
add
push
adc
adc
clc
add
inc
add
add
call
loop
jo
lret
push
fcompl
xor
pop
addr16
sti
data16
push
iret
cmp
out
cmc
and
das
inc
pop
adc
cmp
je
push
inc
cs
dec
lcall
mov
mov
mov
mov
daa
xlat
pop
cmp
out
jno
inc
cmc
dec
outsb
clc
sbb
push
or
rclb
loop
inc
sub
sub
or
add
enter
rorb
out
pop
xor
pop
mov
ds
or
arpl
jp
add
daa
cmp
stos
jo
adc
and
sbb
add
add
mov
cmp
xchg
or
and
xor
sub
iret
test
jge
mov
jne
lods
jno
stos
addb
sbb
ja
cmp
jnp
cmpsl
call
sub
pop
stos
test
add
insl
adc
lods
adc
stos
jp
pop
insb
pop
and
adc
pop
pop
outsl
push
ja
sbbb
icebp
or
ds
cmp
inc
sbb
adcb
inc
dec
xchg
inc
mov
sub
je
sub
push
arpl
and
push
dec
xor
mov
je
ds
rorl
outsl
insb
jno
out
sub
push
in
mov
mov
addr16
inc
in
ljmp
xor
dec
and
out
mov
clc
xor
push
mov
dec
dec
inc
nop
sarb
jae
outsb
imul
add
stc
dec
arpl
gs
lods
push
rolb
xorb
or
jbe
push
and
out
and
fstps
mov
adc
push
xchg
insb
mov
cs
dec
cltd
fiaddl
sub
sbb
jae
jg
inc
xadd
sbb
inc
jg
and
jle
inc
xchg
inc
cmovo
lock
adc
cmpb
aas
mov
nop
jo
maxps
dec
add
push
sahf
or
in
bound
flds
inc
mov
pushf
xor
ds
data16
sbb
and
imul
dec
movsb
aam
add
and
lock
or
movsb
add
pop
mov
outsl
ror
xor
popf
cmp
adc
cld
push
pop
jnp
test
iret
outsl
pop
mov
inc
pop
sub
out
int3
aas
jg
repz
fsubs
outsl
mov
sub
mov
xor
sub
mov
add
push
daa
xor
div
fcomps
clc
aas
push
js
push
test
mov
sub
inc
inc
out
ds
ss
inc
pushf
andb
lahf
adc
cmp
mov
test
push
cmp
sahf
cmp
cmp
test
cmp
jns
jge
cmp
push
lods
nop
mov
cmpsl
clc
cmp
cwtl
jl
inc
cmp
or
and
mov
xchg
pop
xchg
int3
icebp
or
out
dec
inc
jbe
sahf
or
dec
rclb
add
lcall
push
cmp
xor
sub
adc
or
popa
ret
xchg
shlb
mov
clc
push
cmp
mov
add
and
in
pusha
sarl
push
add
in
xchg
mov
sbb
add
scas
mov
outsl
aam
enter
inc
lock
add
cmp
adc
sbb
pop
leave
mov
dec
outsl
add
fs
or
or
inc
xchg
out
jo,pn
mov
aad
outsl
fbstp
testb
sub
cmp
cmp
inc
icebp
dec
sahf
dec
add
cmp
and
fisttps
push
cmp
cmp
add
rcrl
cld
xor
pop
leave
xor
xor
pusha
push
sub
lods
cmpsl
aaa
les
add
pop
in
sub
insb
scas
add
dec
xchg
leave
xchg
or
pushl
enter
leave
xor
cmp
inc
enter
fisttps
cltd
mov
outsl
sub
push
int
inc
call
out
cmp
xchg
mov
add
add
mov
xchg
xor
movl
push
pop
pushf
xor
sbb
mov
sbb
stos
or
jg
sub
add
jns
and
ds
sarb
fildll
push
xor
and
shl
outsb
outsl
and
nop
or
popa
and
and
and
push
fdivs
jbe
pop
hlt
popl
and
xchg
add
icebp
dec
aas
daa
add
int
add
cmpsl
adc
push
or
out
mov
aaa
les
or
push
fsubl
lods
in
leave
add
das
inc
movl
lcall
inc
push
pop
inc
fsubrs
inc
jg
push
mov
ficoml
push
leave
xor
test
pop
sbb
pop
push
add
daa
in
shlb
hlt
inc
add
or
sbb
or
xor
inc
outsl
push
adc
outsl
jg
test
xchg
daa
int
sub
push
je
push
aam
in
jne
lcall
inc
push
andb
push
xlat
scas
lock
pushf
pusha
jp
adc
dec
inc
popa
or
in
pop
inc
lahf
xlat
or
enter
inc
mov
shrl
or
or
cmp
inc
xchg
test
add
addb
adc
sbb
push
sub
mov
testl
and
add
add
rolb
lock
push
dec
sub
ss
aaa
xor
or
mov
inc
outsl
mov
add
add
adc
mov
xchg
cmp
and
xchg
pop
mov
leave
in
hlt
jg
pop
xchg
push
repnz
xor
pusha
dec
scas
or
cmp
jns
in
xchg
movsb
lods
sbb
pop
and
incl
jnp
and
sbb
loopne
outsl
sub
xor
mov
push
push
pop
pop
adc
pop
loope
stc
cmp
ss
test
mov
adc
xor
add
jnp
inc
xor
xchg
mov
loopne
andl
leave
mov
or
xlat
add
iret
and
dec
out
pushf
inc
daa
or
push
jb
add
cmp
rorb
lods
pop
and
push
int
jns
aam
push
inc
sub
dec
pushf
jp
repz
sub
and
addl
mov
mov
cmpsl
or
in
sub
dec
cmp
je
push
dec
dec
pop
leave
mov
add
in
push
enter
aam
jns,pn
in
mov
mov
scas
in
leave
add
add
ljmp
dec
xchg
or
pop
pop
scas
add
lods
outsl
out
and
add
mov
out
lahf
addr16
pop
or
fcompl
and
daa
or
add
les
dec
lfs
hlt
dec
and
outsb
rclb
pop
jnp
outsl
add
addr16
push
xlat
mov
daa
ja
popa
repz
cmp
dec
push
loop
mov
push
cwtl
push
sarb
add
in
les
inc
js
das
mov
lods
pop
adc
mov
dec
inc
das
mov
outsl
movsb
adc
mov
outsb
in
scas
cld
data16
add
outsb
mov
data16
xor
sbb
push
das
push
mov
dec
pusha
push
push
pusha
stos
addr16
or
sarb
mov
push
mov
inc
push
push
dec
in
xor
add
dec
repz
mov
out
dec
sbb
sarw
mov
xor
push
jbe
lods
iret
cld
lahf
out
ds
dec
inc
jo
pop
dec
ds
repz
pusha
xchg
sbb
imul
add
daa
ja
repz
cmpsl
shl
adc
arpl
scas
aam
push
pop
cmp
out
andl
mov
jl
out
cli
ss
push
mov
xchg
lret
sub
push
test
fdiv
push
pop
outsb
xchg
repz
out
cli
cs
outsl
cmpsl
out
ds
lret
pop
xchg
jns
jge
ret
pop
sahf
push
cltd
in
stc
cmp
repz
xchg
inc
pop
sarl
lcall
jns
iret
lea
pop
and
cmpsl
stc
xor
sti
js
mov
stc
cmp
js
shl
arpl
cmp
out
dec
fs
call
out
out
repz
data16
inc
addr16
repz
fisubrs
xchg
mov
jns
imul
sahf
out
cmp
clc
xchg
std
ds
sarl
popa
mov
dec
repz
ds
repz
xor
in
jno
lahf
out
jnp
jl
mov
in
or
in
je
lcall
jne
jns
data16
sbb
subb
add
imul
imul
lahf
cmpsl
stc
cmp
or
push
jge
out
xor
fcoms
jle
mov
loopne
jg
call
out
mov
in
andl
icebp
and
sarl
sbb
inc
push
out
sbb
iret
lds
cmpsl
ds
repz
add
call
repz
test
sahf
cmpsl
stc
mov
call
in
rorl
out
scas
popl
or
push
xlat
inc
xchg
out
xchg
xchg
sahf
out
into
adc
jbe
dec
repz
sub
jns
fwait
mov
js
rcrl
popf
popa
cmp
out
movsb
pushl
sahf
insl
test
sahf
out
fstpt
lahf
mov
pop
mov
push
and
fucom
leave
and
out
fwait
jmp
insb
fsubs
fldcw
push
push
mov
stos
push
add
mov
scas
xchg
scas
and
dec
aas
pop
cmp
pushl
add
push
cld
mov
mov
add
fmull
push
add
dec
mov
rorl
cmp
push
push
outsb
sahf
pop
ja
pcmpeqd
jle
add
cmp
outsl
push
pop
mov
incb
lds
imul
mov
out
rcl
lock
jnp
test
or
ss
mov
aas
push
cmp
sbb
mov
inc
iret
movsb
push
inc
ret
scas
mov
int3
push
xchg
or
mov
mov
imulb
or
xchg
add
push
pop
movups
and
add
int3
jg
dec
and
outsb
push
ficoms
mov
mov
das
fmuls
in
es
pop
out
push
fistpll
imulb
je
mov
aas
daa
or
cmpsl
or
nop
jae
popf
push
sub
aas
push
iret
rorb
inc
push
mov
insb
pop
xor
movsl
nop
pop
xor
fcos
int
pop
fdivrs
popl
into
or
insl
rcrl
inc
imul
push
mov
xlat
sbb
inc
xchg
fstpl
push
out
pop
or
iret
xchg
add
lcall
rorb
test
movsl
mov
in
je
adcb
shll
jmp
in
push
pushf
loop
xchg
in
mov
hlt
sub
pushf
inc
incb
aas
adc
sahf
int3
and
pop
and
int3
dec
pop
jns
out
pop
mov
and
iret
test
xor
shl
mov
inc
pop
add
adc
pop
movl
xchg
adc
cmpsb
mov
in
out
adc
add
test
daa
jns
cmp
pop
pop
dec
pop
adcl
leave
in
add
and
inc
mov
push
out
mov
in
out
sub
sbb
cmp
imul
dec
aam
mov
psubw
pop
iret
jae
sbb
add
add
dec
dec
cs
adc
dec
add
mull
adc
jbe
push
lahf
inc
ja
pushf
xchg
fldl
push
les
scas
rcr
or
mov
pushf
in
mov
and
xor
inc
mov
dec
addr16
jo
in
pop
xchg
add
inc
mov
enter
xchg
daa
fs
adc
and
and
in
test
ljmp
hlt
push
inc
outsl
lds
inc
in
repnz
movsb
pop
add
pop
and
mov
sub
adc
mov
xchg
in
adc
lahf
cmp
dec
nop
pushf
dec
pop
movsl
cli
mov
adcb
pop
cwtl
sbb
aad
mov
xchg
dec
mov
lea
out
sahf
out
int
fadds
out
or
in
xchg
shl
add
pop
mov
frstor
push
daa
fs
xchg
sbb
add
sbb
daa
mov
mov
hlt
push
mov
leave
dec
push
jnp
sub
insl
in
outsl
mov
dec
mov
iret
add
in
enter
cmc
std
dec
popl
in
adc
push
cwtl
ss
enter
ds
inc
dec
dec
dec
inc
jb
leave
push
pop
in
leave
leave
leave
leave
orl
inc
popa
jbe
jne
int3
paddq
cmp
fucomi
in
cmpsl
hlt
pop
cld
mov
xchg
mov
js
pop
push
lock
xorb
maxps
xchg
out
ss
push
outsl
xchg
add
xlat
dec
es
push
sub
mov
movsb
bound
mov
lock
push
mov
xchg
dec
or
and
push
arpl
cmpsl
push
xchg
out
dec
pop
ja
js
push
jno
das
xor
pusha
les
mov
aam
jns
add
inc
jb
movsb
push
cmp
xchg
cmp
sbb
push
push
pop
inc
loope
pushf
in
fs
hlt
popf
xchg
test
push
in
inc
dec
dec
pop
push
rsqrtps
fs
push
dec
push
inc
lds
gs
cmp
sub
pop
xor
gs
dec
and
iret
je
pushf
pop
add
xchg
cmp
rclb
lret
lret
lret
lret
fcoms
push
out
push
stc
push
lret
lret
lret
lret
add
rcpps
push
and
mov
or
repz
repz
or
or
iret
push
jb
jge
mov
repz
xchg
adc
rep
adc
adc
iret
push
aad
jecxz
icebp
sahf
or
cmp
cmpsl
push
negl
fsubr
xor
dec
xor
push
mov
and
jl
test
test
inc
pop
pop
int3
inc
pop
inc
iret
orl
add
daa
add
adc
push
divl
xchg
dec
cmpsb
cmpb
into
repz
xlat
fisttps
add
adc
addr16
add
push
cmp
mov
aas
add
inc
cmp
sbb
daa
sub
adc
inc
push
push
fs
push
nop
jb
jb
cmp
jp
add
popf
daa
mov
das
mov
jmp
inc
dec
sbb
imul
insb
pushf
xchg
les
xchg
mov
addr16
in
xor
xchg
cmp
xchg
push
cmp
lock
mov
or
adc
setle
add
add
es
cmp
push
push
clc
dec
pop
jb
push
nop
and
mov
push
imul
jb
ds
inc
mov
imul
dec
pop
pushf
imul
outsl
push
iret
enter
iret
dec
enter
cmp
daa
hlt
add
add
fnstsw
cltd
dec
inc
dec
xchg
push
jns
fsubrl
pop
jmp
ret
xor
in
add
inc
or
in
insb
test
and
in
mov
insb
mov
nop
fdivl
inc
jb
and
push
inc
in
cltd
in
pop
insb
push
dec
cmc
and
lahf
pop
xchg
pop
mov
les
pop
and
out
es
xchg
dec
outsb
outsb
outsb
and
cmp
or
fstpl
pop
ja
xchg
mov
test
pop
in
jns
addr16
lods
orb
mov
outsl
out
jns
and
and
inc
pop
outsl
dec
outsl
push
repnz
outsl
add
mov
cmp
jae
mov
add
pop
xchg
out
sbb
mov
mov
paddusw
in
mov
or
push
cmpb
inc
pop
push
repnz
cmp
stos
fdivs
shlb
repnz
jo
test
ja
and
jno
push
daa
inc
cmp
jecxz
sbbl
js
add
in
imul
scas
mov
in
in
pop
aam
fcompl
in
in
in
pop
hlt
pop
cld
pop
add
in
in
or
adc
sbb
and
je
in
sub
xor
cmp
pi2fw
or
or
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
add
stc
hlt
addr16
jno
fldt
fldt
ja
test
xchg
xchg
jmp
sub
pop
xchg
dec
fidivl
fisubrl
add
push
pop
inc
push
pop
push
pop
ja
cs
add
into
inc
repnz
aam
cmpsb
mov
jne
test
enter
mov
xchg
mov
mov
rorb
fcomps
push
loopne
in
jae
or
lock
clc
decl
xchg
incb
sbb
pop
mov
push
cmp
shll
cmp
inc
pop
lahf
dec
pop
call
jb
and
push
xchg
and
cltd
iret
mov
fisttpll
push
btr
imul
jecxz
lret
mov
cmp
or
psllq
rorl
cmovle
add
test
adc
fadd
js
jnp
push
inc
aas
cmp
inc
movsb
inc
pop
out
pop
scas
ret
popf
mov
es
adc
push
adc
dec
cmp
jbe
dec
inc
mov
pusha
es
cs
leave
repz
add
inc
add
repz
push
bound
push
sbb
or
cmp
cmp
mov
daa
pop
leave
jae
fsub
stc
sahf
fsts
popa
pop
adc
sbb
in
repnz
xor
sub
fs
pusha
popa
push
dec
dec
sahf
add
call
das
popa
sbb
sbb
popa
popa
popa
popa
sbb
sbb
bound
bound
sbb
sbb
bound
es
bound
aaa
out
repnz
and
js
jmp
dec
adc
xor
fldt
enter
arpl
popa
psllq
mov
pop
jno
jns
fsubl
push
rorb
arpl
cltd
dec
sahf
or
clc
mov
push
jns
enter
adc
and
jb
cs
and
cld
mov
test
mov
loopnew
fs
shlb
adc
jp
loop
dec
repnz
inc
gs
xchg
pushf
decl
mov
pop
hlt
ror
jl
and
out
shlb
xchg
jnp
sbb
xchg
add
push
add
mov
ja
mov
mull
mov
fisttps
add
dec
mov
push
jns
pop
iret
add
aam
xor
scas
leave
dec
dec
outsb
pop
pop
aam
fucomip
cmc
pushf
mov
dec
or
or
push
and
sub
push
jns
addr16
out
incl
sbb
pop
addr16
addr16
xchg
xchg
and
xchg
xchg
xchg
stos
mov
into
push
sub
sahf
or
or
sbb
repnz
add
punpckhbw
push
and
push
inc
push
push
pop
jge
data16
add
mov
pop
xor
push
ja
push
shrl
pop
decb
push
imul
pop
ja
imul
smsw
xchg
xchg
repz
jb,pn
push
add
or
imul
xchg
out
mov
imul
jns
das
or
out
and
sub
jg
daa
push
mov
insl
xchg
push
addr16
push
movsb
xchg
leave
movsb
xchg
push
cmp
in
pop
call
es
sarb
iret
mov
xlat
loop
add
ja
cmpsl
lcall
jg
imul
jns
ss
add
str
xchg
popf
es
inc
imul
repnz
push
or
lock
sahf
or
jbe
imul
repnz
notl
pop
ret
or
dec
dec
dec
es
cmc
mov
das
xchg
dec
sbb
dec
cs
mov
addr16
dec
and
leave
repz
push
add
jl
popl
xchg
lcall
mov
sahf
pushf
pushf
dec
call
inc
pop
mov
insb
xchg
insl
and
rep
and
cmovl
add
mov
fs
scas
dec
adc
mov
pop
xchg
out
mov
cmpsl
cmp
jns
scas
add
mov
cmp
insl
pop
xlat
insl
fildll
in
in
insl
out
insl
imull
pop
pushf
pushf
pushf
je
or
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
outsb
iret
repz
cmpsl
sbb
sbb
pop
sbb
cmp
repz
daa
push
das
pop
dec
sahf
outsb
repnz
mov
inc
sahf
out
dec
dec
and
and
jp
outsb
sub
subl
jb
mov
outsb
test
xor
addr16
bswap
out
pop
pop
ja
out
push
add
imull
movsb
fistpl
lar
pop
outsl
stos
hlt
mov
outsl
cmp
andl
pop
push
outsl
cmp
jne
insl
cmpsl
mov
push
jno
scas
test
inc
lcall
fdivrl
movzwl
jns
pop
rorb
fmuls
loopne
popf
out
sahf
call
xchg
aaa
imul
or
jns
sahf
movups
adc
inc
repnz
lock
adc
xchg
out
ficoms
add
pusha
pushf
dec
and
add
cwtl
in
sub
jo
jo
repz
movb
in
or
test
add
das
fucom
int
sbb
and
add
sub
fmul
xchg
jno
jno
outsb
inc
cltd
scas
cmpsb
daa
inc
lahf
or
icebp
pop
xchg
adc
daa
push
pop
scas
push
adc
xchg
mov
leave
sbb
add
mov
push
out
xchg
call
repz
in
jb
jb
jb
jb
enter
jb
pusha
jb
jb
rcrb
pop
pop
sbb
sbb
mov
jb
sbbb
jb
lahf
mov
lock
mov
cld
xchg
add
jns
shl
mov
pop
mov
add
mov
xchg
add
push
scas
mov
in
cmp
mov
shlb
decl
cmp
push
jae
pcmpgtb
ja
jg
add
add
jl
mov
pushf
or
iret
mov
mov
cmp
les
int3
adc
push
push
cmpsl
jmp
jae
sub
pushf
nop
jae
je
movaps
jns
out
xor
push
int3
outsl
push
incb
xchg
xchg
pop
mov
lock
push
pop
cmpsl
fwait
cmp
addb
push
aaa
push
inc
pushf
in
je
mov
loopne
and
fisubrs
mov
ljmp
sbb
cmp
sub
jne
mov
mov
and
push
pop
push
push
pushf
pop
int
mov
movd
fidivl
sbb
into
repz
or
iret
pop
or
mov
push
mov
shl
aas
call
outsl
sub
jbe
sub
les
push
add
jbe
fdivrl
pop
pop
and
repz
or
or
or
mov
outsb
daa
inc
cmovs
push
aaa
ret
imul
pushf
cmp
in
jbe
push
add
lods
dec
mov
add
fisttpll
pop
int3
pop
aam
iret
rep
pop
fdivrl
or
or
aad
leave
repz
ja
cmp
sbb
or
adc
jg
enter
test
ja
ja
sahf
out
pop
push
add
mov
jae
cmp
add
add
mov
test
out
pop
mov
gs
fmul
add
jmp
daa
icebp
xchg
ja
scas
mov
sub
sbb
loope
inc
das
orb
js
and
js
outsb
in
js
push
mov
and
pushf
sub
mov
out
cwtl
fbld
push
jl
sbb
leave
mov
pusha
nop
jb
xor
dec
sahf
ja
cs
js
ret
js
clts
jns
jns
or
andb
and
adcb
xor
addb
pusha
jns
xor
xor
jns
jns
xor
xor
jns
jns
dec
dec
xor
pop
loope
jns
imul
testl
test
pop
sbb
jp
mov
pop
xchg
dec
push
add
jl
xchg
nop
inc
das
push
test
jp
jb
or
enter
fdivrs
inc
mov
jp
jp
jp
add
aaa
clc
jp
sbb
sbb
sbb
rclb
enter
xchg
and
das
mov
repnz
jnp
jnp
jnp
xchg
and
jnp
jnp
pop
mov
loop
pop
jb
jp
cmpb
fiadds
setb
lcall
invd
xchg
jnp
out
mov
shlb
movsb
shrb
xchg
mov
push
int
jl
jns
fcmovne
cmp
dec
add
in
inc
cmp
jl
movsl
filds
mov
xchg
or
xchg
cmp
out
add
cmp
repz
lods
push
add
shr
pushf
int
fdivrs
fisubs
fstps
add
cltd
cmp
xchg
xchg
fcmovne
leave
inc
jo
sbbb
iret
cmp
scas
cmpsb
add
push
jb
xchg
cmp
mov
shlb
rol
repnz
int
jge
pop
movsb
loopne
leave
inc
repz
add
movsb
pusha
bound
out
xchg
jb
inc
jle,pn
jle
fmull
outsb
lsl
cmpsl
push
jmp
orb
shrl
cmp
xchg
lcall
leave
inc
jle
shlb
cmp
fdivr
sahf
adc
sbb
xchg
bsf
jg
jg
xchg
jae
dec
jg
push
jg
jg
xchg
bound
jg
and
popf
xlat
movsl
add
dec
cs
lods
enter
insl
mov
pop
icebp
mov
loopne
add
inc
push
daa
adc
cltd
dec
ds
xchg
add
cmp
cmp
pop
pcmpgtd
in
sahf
out
add
jns
fisttpll
add
testb
subb
mov
iret
daa
adc
out
cmp
test
jmp
cs
ja
addr16
mov
ja
subl
pop
pop
push
fsubrl
pop
mov
xchg
addr16
add
lcall
sbb
daa
fisttpll
dec
push
ja
jbe
sub
outsl
and
jg
and
fisttpll
daa
nop
sbbb
jne
push
push
mov
lsl
mov
int3
addb
sbb
in
imul
orl
dec
aaa
push
outsl
cmpl
jns
enter
ds
add
inc
push
dec
push
pop
pslld
xchg
xchg
add
push
pop
xor
repnz
subl
cmpl
je
in
cmpb
pop
ud2
adc
sahf
ja
nop
cwtl
ds
mov
out
sbb
cmp
rcrb
enter
and
cmp
push
push
je
in
pushf
push
daa
pushf
es
ljmp
inc
xor
test
pop
test
inc
mov
test
jo
js
jns
xchg
test
nop
out
in
sahf
or
or
leave
repz
or
mov
cmp
enter
cmp
adc
ficoml
xor
test
les
in
das
inc
test
dec
test
popf
xor
js
dec
subl
xchg
test
dec
repnz
scas
into
push
mov
insl
in
add
iret
out
jb
sbb
sub
dec
pop
push
or
outsb
rorb
push
add
xchg
mov
cmp
push
in
outsb
and
jp
cmpb
out
adc
lcall
stos
lss
inc
repnz
sahf
aad
out
mov
test
xchg
or
dec
into
pop
sbb
mov
pop
xchg
jns
aas
inc
xchg
xchg
rorb
or
daa
pop
add
xchg
xchg
lahf
xchg
mov
inc
ret
imul
movsl
fcmovu
loop
repnz
jns
out
pop
or
bnd
cmp
cli
test
outsb
cmp
or
inc
xchg
or
or
xchg
adcb
dec
or
mov
cmp
inc
aas
mov
jo
and
push
mov
push
dec
fisubrl
mov
nop
mov
mov
fdivr
loopne
push
test
call
movaps
sahf
out
pushf
aas
dec
mov
push
pop
pop
jns
out
popa
or
jno
xchg
outsb
cmp
sidtl
dec
mov
pop
and
adc
aam
mov
pushf
mov
mov
add
icebp
cmp
mov
sub
pop
mov
pusha
xchg
in
mov
movsb
ja
aaa
icebp
xchg
mov
lret
enter
loopne
das
mov
add
push
sbb
jb
sti
mov
mov
mov
mov
out
sbb
push
and
out
xor
dec
pop
push
and
mov
cmp
lock
mov
shl
and
js
mov
loopne
and
leave
lret
orl
adc
sub
mov
jo
push
add
add
dec
sahf
ja
pop
push
xlat
sbbb
repz
cmp
mov
nop
loop
lret
daa
mov
repnz
mov
adc
movsl
mov
shll
dec
sub
repz
faddl
sqrtps
pop
mov
add
mov
setle
pushf
in
mov
inc
dec
dec
dec
dec
dec
push
dec
dec
aam
mov
scas
or
repnz
push
pusha
push
sahf
and
push
and
mov
and
cs
iret
daa
js
jns
dec
dec
cmpsl
incl
nop
add
es
nop
jbe
mov
inc
sub
xchg
dec
cs
out
sub
xchg
nop
dec
movb
iret
repz
daa
pop
leave
jae
js
cli
in
xchg
daa
add
leave
xor
jb
xchg
cmp
enter
xchg
pop
xchg
xorb
xchg
mov
xchg
xchg
xor
scas
xchg
iret
mov
cmp
repz
or
or
sahf
ja
fimuls
push
out
leave
out
pop
scas
out
xchg
adc
test
cmp
insl
xchg
xchg
xchg
xchg
xchg
xchg
pop
lret
lret
outsl
leave
nopl
pop
xchg
lret
lret
lret
lret
push
xchg
adcb
xchg
xchg
xchg
sahf
xchg
cmpsb
xchg
lret
lret
lret
lret
scas
xchg
mov
mov
pop
ror
xchg
call
xchg
loope
in
xchg
pop
pop
and
or
adc
push
pop
sahf
out
sahf
xor
cmp
inc
and
out
dec
and
popa
out
sahf
out
imul
jns
jl
xchg
xchg
sub
dec
aaa
jns
cvttps2pi
cmp
dec
mov
xor
pop
imul
jbe
sbb
das
pop
lock
fbstp
cmpsl
fistpl
push
das
add
dec
nop
stos
iret
sub
xchg
xchg
push
add
rorb
add
pop
fidivs
clc
dec
cwtl
in
nop
xchg
lods
xlat
xchg
xchg
or
das
enter
mov
fsub
psubw
xchg
xchg
xchg
xchg
xchg
sub
xchg
xchg
xchg
xchg
jle
mov
xchg
out
sahf
lds
int
aad
jbe
mov
in
pmaddwd
sub
xlat
daa
mov
add
xchg
cmovno
out
outsb
das
jge
test
dec
cwtl
push
test
fwait
cmp
repz
out
mov
outsb
daa
out
xchg
xchg
mov
movhps
daa
iret
jae
inc
arpl
imul
repnz
xchg
scas
xor
mov
iret
mov
aaa
pxor
movsb
daa
iret
cmp
call
dec
ss
lods
cmp
cltd
lea
mov
push
add
test
jne
jbe
mov
shl
inc
repnz
add
sbb
and
addr16
ja
jb
jb
imul
mov
out
dec
dec
ror
xlat
dec
dec
dec
sahf
add
lcall
add
repnz
and
pop
cmp
sahf
out
adc
adc
out
imul
jns
xchg
mov
jns
stos
sbb
jns
int3
sbb
dec
sahf
pop
in
clc
and
fwait
pop
loopne
rorl
fwait
iret
or
das
das
fwait
cmp
mov
add
dec
js
inc
mov
adc
daa
iret
mov
add
call
push
lock
clc
push
out
cwtl
xor
or
pushf
push
or
cmpps
dec
push
sub
xor
leave
repz
ficomps
jns
push
push
adc
lar
xor
pop
push
nop
lea
inc
out
lock
add
sbb
stc
inc
sbb
add
pushf
iret
jb
cmp
push
scas
pushf
btr
aas
ret
pushf
pop
lret
pushf
adc
inc
repnz
out
xlat
insl
notb
jmp
popf
mov
xchg
iret
in
push
popf
cmpsl
push
adc
cmp
inc
cmovns
pop
leave
inc
repnz
add
xchg
fildl
daa
daa
pop
leave
mov
iret
leave
in
in
push
add
fisttps
out
es
out
popf
fcomip
popf
leave
in
inc
xor
sbb
xchg
in
sahf
ja
jae
cmp
push
xchg
gs
daa
pop
leave
mov
pop
add
in
ret
ljmp
mov
mov
incb
lahf
leave
repz
mov
lahf
pop
push
add
mov
cs
jg
fildl
mov
addr16
punpckhwd
dec
dec
outsb
xlat
jno
andl
and
fcmovne
mov
xchg
mov
mov
pxor
jae
je
lahf
xchg
add
pop
and
pop
jns
sahf
out
add
add
push
pop
mov
dec
push
dec
mov
test
fucomi
jbe
xchg
setge
movsl
pop
lods
mov
mov
decb
adc
xchg
aad
outsl
mov
jb
and
add
mov
sbb
mov
fucomi
inc
cmovnp
jb
cmp
push
lock
mov
xchg
ja
inc
mov
mov
dec
outsb
push
leave
cmpb
mov
fcompl
cld
jg
mov
rcrb
push
mov
or
dec
mov
sbb
addr16
sahf
xlat
popf
out
pop
subb
add
add
icebp
enter
mov
das
adc
cmp
repz
add
add
gs
sahf
cmpsl
add
mov
pop
mov
jle
frstpm(287
in
mov
stos
pop
pop
pop
mov
shlb
pop
pop
pop
loope
in
mov
pop
pop
pop
pop
or
movsb
movsb
pop
pop
pop
pop
cmp
movsb
leave
dec
mov
gs
nopl
xchg
xchg
fistpl
aas
sbb
sbb
push
adc
sahf
sub
jnp
xchg
in
cs
pushf
push
xor
bound
sbb
js
mov
mov
cmp
cmp
repz
cmp
iret
ds
aas
incl
or
cmp
jnp
push
adc
repz
sub
inc
inc
mov
dec
inc
push
mov
dec
es
jae
cltd
movsb
dec
scas
popf
cmp
jmp
dec
cs
sahf
out
pand
push
icebp
mov
push
cld
push
pop
cmpsb
adc
cmp
xor
bnd
out
dec
subps
jb
pop
push
andb
mov
xchg
and
shlb
cmpsb
push
aas
loope
call
clc
cmpsb
sahf
xchg
lret
cwtl
xcrypt-ofb
cmpsl
das
push
pop
adc
sbb
out
cmpsl
xchg
xor
jg
cmpsl
repnz
test
mov
adc
xor
adc
adc
js
sahf
adc
push
push
out
pop
in
cmpsl
sbb
iret
cmp
jo
js
push
sbb
cmp
daa
shlb
dec
and
sbb
and
test
pop
repnz
jae
add
add
jae
pop
cmp
or
mov
inc
mov
daa
inc
add
orb
ds
jb
je
test
clts
mov
xchg
ret
lock
fisubrs
outsl
rorb
add
das
loopne
call
xor
fildll
xchg
sbb
sahf
out
push
add
add
push
or
pop
test
popf
pop
and
in
in
in
fwait
mov
xchg
iret
pop
and
into
jg
mov
xchg
ftst
out
pop
out
mov
out
dec
add
sbb
or
or
pushf
fmull
pop
push
pop
push
jae
adc
sete
jns
iret
push
mov
push
sbb
sahf
out
sahf
sbb
sbb
sbb
leave
jae
dec
nopl
div
dec
sahf
out
stos
and
xchg
fcmovne
and
inc
push
mov
out
dec
daa
pop
gs
jo
ss
lods
stos
jg
add
iret
mov
stos
push
add
add
iret
repz
loope
push
add
icebp
stc
stos
inc
iret
in
xchg
push
lods
and
outsl
push
push
add
push
cmp
push
jle
xchg
in
movsb
fwait
syscall
or
mov
scas
xchg
lods
sahf
lods
cmpsb
lods
iret
shrl
mov
movups
cmp
adc
adc
pushf
cmp
repz
enter
hlt
cld
lods
iret
add
mov
push
sbb
adc
pop
jns
outsb
repnz
and
popf
cmp
in
xor
and
inc
and
sahf
out
es
daa
ficoms
testl
out
outsl
sub
add
lods
xchg
test
pop
out
xchg
jno
sub
ret
inc
xchg
dec
ja
das
push
cmp
add
pop
pop
dec
sahf
ja
push
add
idivl
push
scas
push
add
scas
push
or
cmp
repz
or
add
cmp
push
pop
punpckhdq
mov
adc
les
scas
scas
cmp
in
push
add
push
add
pushf
jmp
repz
add
or
pop
cmp
loopne
and
scas
xchg
jae
sbb
scas
call
cmp
enter
scas
jb
jge
xchg
int
sbb
scas
outsl
sbb
les
inc
cmpsb
scas
scas
scas
scas
jns
movsb
adc
psubq
add
add
bndstx
inc
out
lret
enter
mov
dec
mov
repz
aas
ds
shrl
iret
add
or
jns
leave
cwtl
mov
sahf
out
sahf
mov
push
xchg
outsb
cmp
in
invd
and
sahf
adc
sti
push
mov
cmp
stos
mov
push
pop
daa
xor
jns
daa
iret
sbb
in
sahf
out
sbb
jns
out
and
dec
sahf
and
jns
pop
iret
lret
aad
sub
out
sub
add
mov
lss
mov
cs
and
inc
sub
and
mov
mov
xor
fmull
addb
mov
repnz
pop
cwtl
or
leave
in
mov
mov
iret
repz
adc
adc
jb
mov
mov
mov
insl
divb
clc
das
add
push
sbb
adc
sbb
dec
aaa
jns
nopl
cmp
out
push
and
dec
and
out
push
pop
and
push
es
sub
sub
outsb
daa
iret
cmp
xadd
repz
fcompl
mov
aaa
pavgb
scas
and
lret
rcll
and
inc
add
and
dec
es
iret
add
aas
xchg
fidivl
imul
cmp
jp
pop
hlt
insb
push
add
adc
push
sub
mov
inc
imul
inc
push
scas
pop
inc
inc
add
aaa
inc
sbb
dec
aaa
add
inc
hlt
push
add
sahf
out
push
inc
cmp
xor
out
sahf
out
and
or
iret
repz
clc
enter
loopne
cmp
repz
aam
int3
enter
repz
rcrb
test
repz
sahf
mov
xorb
cmp
pusha
push
push
dec
or
iret
repz
sub
or
add
scas
adc
mov
cs
repz
fildl
add
add
add
or
or
daa
daa
or
aaa
or
jbe
jne
or
daa
adc
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
ss
mov
pop
addr16
inc
lds
adc
dec
push
or
mov
pop
and
dec
and
or
pop
adc
sahf
jl
mov
or
andb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
jl
std
adc
push
ficompl
mov
xor
fcomp
loopne
jb
jle
or
xor
inc
dec
mov
dec
test
mov
roll
fdivr
inc
mov
aam
fmuls
inc
mov
or
pop
jle
mov
xchg
mov
add
or
xchg
test
pop
aas
insl
or
pop
ja
jns
ja
dec
lock
les
or
out
adc
into
adc
adcb
sbb
cmpsl
stc
cmp
hlt
int
mov
jns
sbb
push
cmp
lret
dec
jecxz
push
fmul
mov
in
lret
inc
or
js
lret
in
ds
cmp
cmp
ljmp
sbb
les
sub
sub
popf
add
pop
sarl
aas
add
inc
pop
xor
pop
pop
inc
mov
insb
jbe
dec
ss
push
jae
xorb
mov
push
push
pop
divl
fwait
inc
jg
inc
push
aaa
push
insb
dec
xchg
aas
pop
pop
stos
inc
lea
xlat
pop
sti
sub
cs
cmp
inc
pop
lahf
push
fistl
add
push
cs
mulb
add
rcrl
fstl
add
addb
lea
sete
adc
sahf
ja
out
inc
rorl
sbb
sbb
push
mov
cmp
and
clc
loop
xor
push
sub
or
ds
push
call
in
push
repz
neg
and
push
or
add
push
cld
cmp
jnp
adc
hlt
sbb
out
sahf
notl
push
rcrb
enter
jns
rclb
and
mov
lods
and
out
cwtl
pop
or
adc
mov
jmp
inc
out
xor
test
xchg
push
xchg
xorb
inc
cmp
xorl
jg
cmp
pop
jns
out
js
mov
repz
dec
repz
xor
add
jns
out
push
pop
ja
mov
out
iret
loopne
jae
das
push
dec
insb
loopne
sub
add
jb
push
mov
add
and
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
and
insl
cmc
int
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
stos
and
xchg
cmp
push
mov
xchg
aas
xchg
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
mov
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
incl
xchg
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
decl
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
hlt
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
add
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
jo
sbb
frstor
repnz
pop
inc
inc
je
inc
inc
push
dec
push
cmp
sbb
ljmp
add
ja
popa
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
cld
incl
std
test
movsl
cli
test
xor
leave
mov
insb
fdivr
mov
pop
iret
or
shrl
pushl
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
data16
incl
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
mov
leave
pop
js
stc
dec
test
xchg
sbb
decl
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
adc
ret
movsb
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
ljmp
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
pop
xchg
es
lds
or
das
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
incl
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
jg
lods
push
push
pusha
rorb
imul
scas
fcompl
scas
data16
fldenv
filds
aaa
pusha
cmp
mov
fidivrs
mov
jmp
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
jmp
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
into
push
pop
xchg
test
pop
push
pusha
pop
push
mov
xchg
out
pop
pop
inc
push
xlat
fcomp
sahf
out
sahf
fcmovu
fsubp
out
in
jecxz
in
sahf
out
sahf
jmp
repz
out
hlt
cmc
div
clc
fnstsw
out
cli
sti
cld
daa
rolb
nop
xor
xchg
rorb
hlt
add
adc
mov
sub
iret
push
iret
xchg
dec
in
sbb
inc
push
dec
fcomps
mov
inc
mov
jecxz
insl
bound
inc
push
popa
je
push
xchg
push
in
cltd
out
xor
inc
dec
sub
mov
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
std
mov
std
cmp
arpl
or
xor
bound
pop
xor
popa
push
inc
cmpb
std
jbe
pop
insb
imul
es
gs
push
dec
inc
jp
es
add
push
inc
pop
add
cltd
dec
subb
inc
push
ret
lret
popa
or
fs
inc
roll
gs
je
scas
inc
add
ss
jbe
inc
mov
es
inc
aas
mov
mov
je
popa
mov
dec
inc
inc
or
xor
sbb
inc
ja
sub
xor
insb
popa
jns
push
adc
insb
or
mov
imul
add
aas
inc
add
rcl
and
dec
mov
pop
or
cltd
and
add
jae
dec
push
pop
ret
sub
das
pop
inc
xchg
adcb
popw
inc
or
add
mov
xor
push
popf
jecxz
jae
inc
inc
inc
add
sub
xchg
popa
mov
lcall
mov
dec
push
dec
cmp
inc
mov
fsubrs
sbb
mov
test
jne
push
popa
mov
outsb
mov
dec
jge
imulb
xor
or
stos
mov
arpl
add
addr16
mov
outsl
in
clc
xchg
into
pop
jo
mov
push
dec
insl
pushf
inc
cmp
sub
add
xchg
sub
push
add
and
xorb
outsl
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
add
dec
popa
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
lds
and
push
jno
adcl
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
jo
lahf
pop
mov
push
xchg
insb
jns
shrl
lods
xchg
push
xorb
xchg
mov
cmp
arpl
insb
or
cs
gs
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
addr16
xor
fs
add
adc
push
outsb
add
sbb
xchg
mov
xor
push
dec
sub
outsb
imul
push
pop
push
loope
sbb
sbb
push
shl
pop
mov
inc
push
inc
dec
popl
jle
pop
bound
outsb
arpl
je
xor
pop
pusha
in
shrb
insl
aaa
sub
push
xchg
fstps
mov
nop
lods
or
xlat
mull
daa
sub
lds
and
inc
add
add
add
fimull
push
adc
pop
xorl
daa
inc
leave
mov
adc
dec
mov
cwtl
cld
cmp
pop
or
fwait
into
stc
dec
loop
sarl
push
icebp
inc
fcoml
sbb
cld
ret
scas
cmp
dec
je
cmc
imul
push
xor
sbb
hlt
cld
cmc
daa
mov
xor
cmp
fstp
sub
stos
cmp
cmp
mov
call
mov
pop
jne
movsl
scas
and
cmp
push
jno
hlt
inc
arpl
ds
push
in
push
clc
fsubrl
lds
xlat
jl
loopne
mov
lcall
testl
js
push
and
pop
dec
push
jle
jae
mov
call
fistpl
mov
xchg
xor
fmull
fnstcw
scas
test
rcll
pop
mov
pop
inc
push
adc
jecxz
push
aas
insl
in
arpl
pop
lahf
fcmovne
xlat
sub
cmp
stos
pop
in
dec
mov
mov
das
push
rorl
sbb
mov
cmp
outsb
push
xchg
cwtl
loopne
jmp
push
lret
sbb
sub
mov
mov
std
inc
inc
out
orb
ljmp
push
sbb
mov
loopne
dec
adc
shr
shll
das
sub
inc
pushl
dec
mov
sbb
loop
in
pop
dec
pusha
mov
insl
lock
ljmp
pop
push
aam
out
add
lahf
test
jge
cmpsl
push
fidivrs
sbb
or
push
test
jg
mov
movsl
xchg
pusha
stos
sbb
stos
xchg
icebp
dec
aas
add
outsb
and
pop
xlat
jg
or
insb
sbbb
ret
stc
push
cmp
clc
pushf
cmp
jmp
ret
inc
imul
nop
lods
jp
divb
enter
pcmpeqw
or
push
mov
jecxz
jmp
es
push
das
shlb
and
pop
mov
xchg
sahf
mov
out
mov
call
test
outsl
jo
subl
mov
add
mov
cmp
mov
les
lds
scas
push
sub
inc
mov
es
mov
inc
dec
imul
push
pusha
cmp
fstp
sub
dec
sbb
loope
jmp
or
stos
add
sti
inc
jne
mov
mov
inc
jg
in
jg
incl
push
jmp
repnz
lock
xchg
stos
jle
ds
xor
jl
or
jo
int
cmp
cmp
pop
outsb
mov
mov
mov
add
add
xchg
jno
and
mov
mov
decl
fsubrs
mov
inc
xor
xchg
dec
cs
mov
push
mov
dec
test
cmc
daa
pop
mov
shrl
pop
out
int
lahf
shlb
fwait
xorb
lea
insb
push
jp
aam
sbb
movsb
ret
in
insb
std
ss
in
pushf
decb
mov
mov
and
dec
ljmp
mov
ss
fs
shll
std
pushl
lret
into
pop
shl
add
or
push
notb
push
dec
outsl
or
mov
rclb
and
sub
ss
clc
decl
xor
xor
jmp
cli
rcrl
imul
icebp
xor
aaa
lcall
lcall
fwait
jmp
fnstsw
sbb
jecxz
xor
dec
adc
loop
rclb
push
pushl
mov
int
mov
dec
sbb
jmp
data16
lahf
mov
cli
pop
mov
xchg
add
pushl
std
iret
enter
or
int
ret
pop
js
test
and
sub
popa
or
sti
push
push
ss
shll
mov
fsubs
xlat
ja
stos
jle
dec
repnz
ja
int
jg
fisubrs
movsb
xchg
ss
jne
lds
lock
jbe
mov
aaa
jge
dec
xor
sub
decl
xchg
xchg
mov
xor
and
lcall
lock
xchg
adc
fsubs
test
jp
jp
subb
loope
icebp
pop
pop
jecxz
ret
adc
aaa
out
insl
mov
cli
mov
jmp
stos
fsubr
xor
pop
jmp
in
xchg
dec
add
incb
push
cltd
lds
lcall
mov
test
mov
mov
add
ljmp
mov
jle
lds
repz
movsl
fsubl
mov
jns
addr16
mov
or
loopne
dec
stc
mov
jmp
inc
push
and
neg
push
ss
mov
int
mov
push
sbb
jmp
jg
incb
push
testb
arpl
push
subb
fldcw
and
cmc
repnz
ljmp
insb
lahf
xchg
es
int3
sub
les
jg
inc
mov
push
adc
pushl
jb
fdivs
cmp
and
inc
scas
jp
push
sub
clc
sbb
cld
scas
sbb
sti
hlt
cmc
mov
les
pushl
dec
xchg
dec
adc
adc
cld
mov
fistpll
out
repnz
cmp
enter
popa
jbe
sub
test
out
loop
int
lock
dec
add
jmp
lcall
cld
imul
loopne
fs
jae
rcrl
xchg
repnz
push
incl
mov
mov
add
push
xor
adc
cld
std
xchg
add
ljmp
popf
add
sti
test
mov
fs
loop
jbe
push
andb
pushl
lcall
int3
xor
fiadds
jnp
sub
lcall
xchg
mov
mov
push
mov
test
push
or
shrb
mov
push
out
ret
push
hlt
cmp
add
dec
cmpsb
xchg
dec
xor
adc
cltd
std
jmp
cli
insb
mov
mov
mov
and
mov
fimull
icebp
xor
mull
cli
jmp
int3
mov
mov
sub
sub
icebp
lock
cli
jg
test
xchg
dec
xchg
add
fs
incl
xchg
push
imul
push
pop
add
jge
xchg
icebp
jmp
xchg
out
adc
incl
jecxz
xchg
push
sbb
in
sub
sbb
fstpl
jae
and
call
mul
push
pop
adc
adc
push
lods
dec
shrl
pop
inc
cmp
mov
or
decl
mov
scas
xchg
sub
jecxz,pt
ja
es
dec
or
stos
ljmp
dec
mov
outsl
push
inc
cmpsb
sti
ret
lds
sub
stos
outsl
push
or
sti
call
pushf
aam
scas
daa
movb
xor
push
inc
cs
adc
clc
repnz
into
or
stc
jbe
mov
xor
cmp
adc
xchg
test
cmp
jmp
push
fwait
insl
inc
rclb
mov
icebp
mov
cmc
inc
inc
loope
inc
jnp
rcl
aas
repnz
pop
leave
xchg
mov
jae
jl
lock
and
cs
jecxz
dec
ja
aaa
dec
loope
out
test
xchg
jge
dec
aas
rcll
mov
imul
decl
int
aam
xchg
cmpsl
adc
out
xor
cli
xchg
push
jae
jmp
mov
call
cld
mov
jns
sub
adc
jge
mov
cmp
adc
pushl
xor
jne
cmp
repz
aad
movsl
mov
fucom
cwtl
ljmp
push
or
cmp
sbb
cld
cmp
adc
xor
aaa
std
jmp
outsl
in
cli
push
jnp
dec
and
mov
bound
push
ret
cmp
call
ljmp
xchg
xchg
call
xchg
add
idiv
lret
scas
add
mov
xor
std
sar
scas
cli
ljmp
jo
mov
cmp
inc
mov
mov
adc
incl
pop
jmp
mov
mov
sbb
loopne
xchg
pop
insb
cltd
dec
dec
repnz
jae
shll
bound
mov
out
jl
xchg
push
pop
adc
fsts
in
call
xor
dec
mov
xor
movsl
mov
push
add
in
scas
faddp
scas
mov
fisubrl
add
or
add
ljmp
stc
xchg
call
jbe
into
add
mov
decl
xor
mov
ljmp
ret
aas
jno
mov
int3
lcall
aam
incl
arpl
arpl
in
shld
stc
into
jne
mov
cmpsb
daa
out
fsubrl
pop
adc
fcomip
call
and
sbb
ss
pop
inc
mov
dec
incl
in
icebp
scas
pop
loope
ja
jl
out
mov
push
lods
push
jmp
aaa
sbb
jl
std
pop
or
mov
and
ja
filds
int
aaa
jle
aam
pushl
les
sarl
push
orl
cmpsb
add
sub
lds
ljmp
lds
mov
or
mov
fcmovu
scas
push
ljmp
sub
test
or
fmull
add
and
xchg
cmp
adc
fs
inc
mov
pop
fidivs
or
addb
jnp
push
cmpsb
push
add
or
inc
xchg
jmp
stos
mov
fdivp
arpl
sti
sub
mov
leave
push
stos
mov
mov
ret
cmp
sub
jae
mov
lock
jbe
sti
sub
push
jmp
inc
cmp
jnp
add
out
cmp
mov
out
inc
adc
je
jmp
aam
jns
pop
loopne
dec
mov
mov
mov
mov
or
sti
mov
outsb
mov
aas
sbb
adc
and
rcrl
into
sti
fisubrs
in
jae
in
outsb
orb
lock
ret
ljmp
cld
jmp
js
sub
xor
loope
repnz
pushl
push
and
ficoms
xrelease
dec
in
xchg
pop
mov
xchg
in
cli
jp
mov
hlt
inc
cmpsb
popa
xor
fcoms
ja
mov
mov
incl
insb
in
scas
xchg
xor
cmp
insb
imul
lods
cwtl
mov
and
decl
jecxz
fidivs
pusha
mov
in
lock
pusha
mov
out
lcall
mov
jmp
jecxz
out
call
mov
stos
adc
popf
stc
test
int
fdivr
decl
mov
mov
and
cmp
xor
mov
dec
adc
addr16
lcall
dec
gs
dec
sbb
out
add
jns
andl
sti
sbb
mov
jae
incl
jecxz
lret
fwait
mov
pshufw
fldenv
sbb
rcrb
push
scas
inc
jecxz
decl
daa
lods
and
imul
add
insl
inc
gs
mov
fisttpll
fdivs
sub
fsubl
push
xor
fldcw
jg
stos
pop
rcrb
lcall
inc
mov
lcall
mov
sub
mov
sbb
cmp
je
pushl
lds
leave
push
ds
xor
sub
lock
dec
ja
sub
fcomip
adc
mov
loop
push
imul
sub
jecxz
lcall
cmpsb
ret
jge
call
shrl
int3
dec
dec
popa
dec
repz
out
popa
and
aad
cwtl
or
icebp
pop
pushl
call
stc
push
in
push
aad
out
xchg
addr16
cltd
xor
push
xor
mov
scas
mov
push
xor
call
call
inc
sbb
pop
outsb
cs
mov
mov
add
inc
pop
jmp
jne
dec
mov
add
sub
mov
stos
push
add
pushl
int3
inc
jge
mov
test
jp
ss
cmp
adc
or
shlb
pop
dec
mov
test
jbe
fcos
std
loope
pop
addb
jge
testb
inc
ror
out
sbbb
lock
call
mov
cmc
dec
rcrl
pop
ljmp
mov
es
inc
movsl
arpl
incl
fistpl
pop
std
or
lahf
shll
rcl
test
cmc
jnp
or
xchg
scas
movsl
lahf
xchg
push
sub
jge
push
dec
adc
jmp
jl
jg
cmp
imul
adc
ficoms
mov
pushf
outsb
outsb
testb
idiv
mov
repnz
outsb
mov
stos
cmc
mov
push
lret
jle
fwait
pushl
jno
into
iret
bound
test
and
mov
adc
xorb
sbb
adc
stos
ret
lcall
or
and
inc
stos
imul
int3
fimuls
aam
cmp
decl
fistl
push
cmpsb
cmp
into
cmp
or
add
xchg
push
xchg
sti
aad
mov
out
push
decl
es
push
mov
dec
pop
xor
push
lea
cli
jg
pop
jnp
inc
cmp
pop
push
call
jb
ret
shl
jg
gs
ja
cmp
jmp
push
repnz
mov
dec
shrb
sbb
mov
std
inc
in
mov
jmp
into
mov
out
pop
vpunpcklbw
push
pop
in
adc
loope
out
out
and
ljmp
inc
sub
push
or
iret
jb
mov
out
and
insb
enter
inc
std
mov
and
adc
lcall
xchg
sbb
fstl
and
sub
or
aam
lcall
decl
mov
dec
lock
or
aas
rorb
mov
stc
sar
decl
ret
push
jnp
fdiv
shlb
mov
cmpsl
sub
jae
out
mov
adc
lcall
pop
lea
adc
pushf
lret
xchg
sub
and
pushl
inc
jg
pop
xchg
mov
xor
mull
sub
push
into
dec
dec
fs
or
push
fistpl
shll
sbb
cs
mov
inc
push
add
mov
leave
inc
sbb
lret
or
jg
and
decl
pop
inc
scas
mov
clc
jnp
sub
pop
daa
bound
sub
rolb
cltd
xrelease
push
shl
add
xchg
in
dec
jbe
mov
divl
sub
cmc
aaa
xchg
adc
cmpsb
ljmp
into
mov
mov
cmp
jne
ret
lock
sbb
popa
addr16
jg
incl
or
xchg
movsb
dec
fdiv
loop
aam
xchg
and
dec
sub
pop
add
push
call
fildl
dec
arpl
xor
ret
ss
cmpsb
pop
aas
and
icebp
fidivrl
les
or
mov
and
and
mov
stos
filds
out
cli
push
fimuls
pushf
jl
inc
push
sbb
pop
sti
push
adc
lods
cmp
or
call
xlat
cmpsl
lcall
sbb
movsl
sub
imul
sub
lock
mov
sar
stos
dec
addr16
mov
xchg
stos
mov
xchg
fcoms
push
sbb
pop
ds
pop
aas
jmp
lret
xlat
adc
sarl
xchg
pop
int
in
lds
negl
dec
xor
insb
adc
lcall
ds
and
push
cli
gs
cmp
cwtl
mov
mov
stos
out
lret
sbb
lcall
push
cli
mov
out
sbb
hlt
insl
or
or
xchg
jns
int
cmp
pop
repz
out
adc
aad
hlt
test
xchg
pop
testl
call
xor
idiv
in
push
loopne
jmp
jl
popf
out
fdivrp
mov
dec
movsb
sahf
xor
aas
pushl
mov
je
mov
add
xchg
mov
je
cvtpi2ps
lahf
cmc
xor
stos
ljmp
sub
cmpsb
idivl
mov
push
dec
mov
incl
and
mov
push
mov
lret
cmpsb
rcll
cli
pop
lret
out
sti
or
test
ljmp
inc
jns
inc
ret
loopne
pop
bound
inc
addr16
sub
in
addr16
push
mov
pusha
mov
and
aam
inc
mov
jmp
push
mov
xchg
inc
pushl
jb
and
xor
mov
pop
loopne
lods
ret
call
clc
and
jae
rcll
test
mov
imul
mov
sbb
mov
pushl
mov
outsb
repnz
cmp
test
mov
in
mov
jl
out
cli
fmulp
pushf
jo
sbb
pop
jnp
mov
nop
cmpb
pushl
lret
add
pop
es
cmpb
and
outsl
inc
cmp
jae
incl
hlt
addl
shr
xchg
mov
jmp
popf
push
add
stos
rorb
clc
push
jnp
ljmp
cmp
aam
jo
add
testb
rol
xchg
sub
in
push
pushl
std
ljmp
lret
nop
add
adc
dec
out
ficoms
mov
outsl
loope
xchg
mov
adc
cmp
mov
jns
jbe
lret
mov
test
or
out
xchg
push
rolb
in
mov
dec
cmp
cmp
out
sbb
cmp
imul
pop
ror
aas
add
fwait
ljmp
mov
and
dec
cs
push
xor
and
mov
pop
mov
daa
fbstp
or
adc
fs
ret
cmc
shrb
shl
decl
aam
or
repz
push
mov
pop
es
pop
cs
inc
mov
ss
fwait
jecxz
and
sahf
ret
enter
xor
mov
lret
or
push
jl
in
jmp
push
fistpl
dec
cmp
repz
les
lea
xor
sbb
jmp
cmpb
xchg
push
xchg
das
sbb
mov
lcall
or
shll
xchg
rolb
mov
xchg
das
dec
sub
push
or
inc
lcall
int3
xchg
jae
xchg
pop
cld
jle
adc
jecxz
sbb
jbe
fdiv
and
sub
shlb
jmp
sbb
dec
mov
cmp
jg
mov
shrl
push
test
scas
insb
incb
mov
mov
aad
sti
loopne
dec
jnp,pn
pop
mov
mov
aaa
sub
call
jl
mov
cmp
stos
push
lock
xchg
jge
gs
aaa
inc
lahf
jl
push
aas
ret
rcll
pop
mov
lock
adc
test
loop
push
pushl
lret
cmpsb
adc
adc
imul
decl
add
sub
gs
adc
xor
push
and
jns
mov
cld
lods
mov
decl
arpl
lea
add
mov
cmc
out
fisubrl
xor
movsb
xor
hlt
jne
outsb
push
ljmp
clc
jns
adc
or
jo
add
loope
in
sbb
ljmp
jp
aad
pop
popa
mov
jecxz
cli
loopne
xchg
xchg
xchg
jmp
decl
inc
fwait
outsl
mov
or
mov
mov
lock
fmul
pop
push
fldcw
testl
mov
sub
addr16
outsl
push
mov
in
orb
cmp
lods
cvttps2pi
jne
adcl
insb
in
pop
inc
or
cmpsb
decl
adc
push
mov
or
xchg
xchg
xor
outsb
cmpl
push
adc
sub
jge
aaa
addr16
fwait
inc
addb
jg
ljmp
cmpsb
inc
test
pusha
pop
push
mov
lahf
xor
pop
js
out
clc
xor
call
inc
push
stc
ljmp
lods
std
cs
call
js,pn
test
mov
fadds
fcomps
fbstp
negb
roll
add
clc
xor
decl
xchg
mov
add
stc
mov
ret
sub
mov
adc
push
add
rep
lret
sub
xor
jno
and
inc
adc
sub
and
add
sub
and
push
enter
fcompl
cmc
mov
jge
incl
inc
adc
and
repnz
mul
sub
int
pusha
inc
bound
lahf
dec
inc
jno
outsb
lcall
push
sahf
dec
inc
repz
sub
lcall
ret
jge
or
mov
cld
js
out
fs
jg
dec
sbb
jo
loop
pusha
stos
clc
test
sbb
decl
cmp
push
mov
jl
insb
pop
gs
sbb
and
inc
aaa
add
aad
ljmp
xor
out
add
sahf
sub
insb
cli
dec
cmpsb
mov
xchg
ljmp
into
xor
mov
std
cmp
and
push
rol
mov
push
mov
mov
push
das
sub
inc
insb
mov
stc
out
pop
ljmp
cld
cmpsl
aam
xchg
repz
fwait
shll
lret
inc
cmp
xchg
pushl
xor
negb
jmp
or
jle
sub
xorl
decl
sbb
cmc
pop
lahf
sub
push
leave
jp
mov
sub
leave
clc
decl
add
cmpsb
jecxz
shll
ja
iret
sbb
cmp
mov
dec
pop
inc
cmpsb
inc
or
add
xchg
rcl
test
dec
fistpll
mov
sub
insl
inc
and
movsb
ja
add
jo
fildll
in
je
mov
data16
es
mov
mov
idiv
pushl
shlb
pop
or
and
and
sub
add
sbb
dec
push
sub
scas
push
xor
incl
repnz
inc
sub
xchg
sbb
insl
rcrb
sub
mov
and
out
test
jmp
insl
push
mov
or
jnp
cs
xchg
pop
decl
mov
jbe
mov
scas
pop
inc
sbb
arpl
lcall
incl
call
xchg
xchg
scas
push
js
adc
mov
shrl
out
inc
adc
stc
cld
mov
js
lds
std
mov
mov
loopne
jmp
cwtl
icebp
bound
mov
jg
imul
push
jle
std
pop
bnd
adc
lods
out
es
ficompl
shll
mov
sub
in
and
mov
or
fcoml
xchg
inc
out
sbb
xchg
data16
mov
cmp
cmpsb
mov
call
push
test
jp
or
les
adc
jl
inc
sub
sbb
sbb
mov
div
int
xor
out
bound
xorl
pushf
mov
pushl
dec
or
jmp
sub
popf
cld
sbbb
pop
mov
cwtl
mov
mov
sub
dec
jb
sbb
fcomip
pushl
sbb
arpl
ss
std
daa
stos
js
test
cmp
lcall
or
push
pop
outsb
je
dec
jge
lods
ficomps
rorb
shr
incl
add
mov
out
or
cmc
xchg
lret
push
loop
in
mov
cmc
add
sub
mov
mov
inc
or
xor
pop
test
decl
negb
sbb
loop
jp
inc
or
fnsave
push
push
add
decl
ss
adc
sub
cwtl
inc
decb
adc
inc
jae
xor
ja
mov
dec
mov
stos
sahf
les
pop
mov
call
push
mov
pop
clc
mov
push
push
xchg
mov
cmp
mov
call
dec
or
loop
sti
mov
push
ljmp
jae
jbe
mov
scas
jne
push
cld
adc
jp
cmp
pop
decl
xchg
mov
and
jne
sbb
or
ret
pop
call
xchg
and
cmp
incl
xchg
xor
sahf
adc
fistpl
arpl
xor
imul
ljmp
loopne
pushf
sbb
dec
dec
add
push
sbb
ljmp
pop
jl
and
enter
jmp
cltd
out
add
jnp
mov
add
std
mov
imul
pushl
cmp
lods
xor
inc
jmp
fdivr
sub
sti
iret
mov
ljmp
xor
dec
fiadds
mov
dec
sahf
dec
or
ljmp
add
out
ficoml
push
sahf
out
xchg
sbb
mov
test
clc
faddl
out
pop
aas
dec
pop
sti
sub
and
or
xchg
jl
inc
out
stos
out
cmpsb
icebp
out
int3
xchg
ret
mov
inc
fiaddl
mov
popa
sbb
adc
fsubr
aad
sbb
push
fsubrs
scas
jbe
fcomip
xchg
lea
fistps
push
into
push
xor
mov
mov
fwait
decb
decl
stos
movsl
sbb
pop
hlt
pushl
jae
scas
imul
mov
jp
aaa
sub
adc
std
push
adc
int3
ret
lcall
pop
test
add
add
aad
icebp
jg
clc
loopne
dec
stos
jg
or
insb
and
jmp
xor
cli
sub
mov
jg
sbb
mov
pushaw
std
dec
cmp
and
mov
rcl
jmp
in
mov
cmpsb
je
cmp
push
mov
sbb
add
addr16
and
cld
xor
pusha
les
mov
incl
jmp
mov
sub
xlat
outsb
ds
mov
shll
add
and
fwait
inc
ljmp
pushl
and
inc
add
leave
sti
sbb
fidivrs
mov
repnz
inc
jmp
or
iret
jne
in
lret
jo
insb
push
mov
pop
daa
pop
sub
and
sbb
adc
xor
push
pusha
popf
sub
inc
leave
int
cmc
jecxz
lods
filds
lods
sbb
shrb
mov
js
shll
hlt
pusha
outsb
sarb
decl
aad
push
adc
shlb
sbb
sub
fwait
out
stc
push
clc
lcall
add
aas
or
mov
push
lret
mov
pushl
lods
fdivr
in
push
cwtl
out
add
movsl
or
and
insb
das
test
mov
int3
movsb
jb
out
dec
jmp
aam
bound
pushl
pop
push
mov
sub
imul
inc
js
xchg
mov
xchg
cmp
pop
decl
ljmp
adc
push
andl
adc
push
ljmp
sar
push
adc
dec
push
cmp
fcoms
ret
xchg
pop
mov
pop
shl
mov
call
std
imul
lock
rorb
mov
xchg
lods
loope
aas
pushf
dec
mov
and
mov
xor
cmp
push
test
scas
sahf
clc
pushl
fldenv
movsb
mov
mov
dec
nop
cmc
add
mov
pop
push
ljmp
inc
xor
test
subl
jae
inc
sub
lahf
jb
mov
pushl
enter
lds
ret
nop
popf
shl
adc
mov
inc
sbb
imul
rcl
pop
xchg
into
arpl
sub
rcr
stos
inc
ljmp
pushf
loope
add
jbe
or
mov
jne
sbb
inc
add
fwait
in
pop
dec
sti
and
or
mov
mov
cmpsb
addr16
jl
mov
sub
xchg
xchg
inc
pop
popa
sbb
jl
pushl
xchg
xor
inc
xchg
out
call
sub
xchg
sar
call
into
outsb
test
sbb
fs
lret
and
add
cli
lock
jg
sub
imul
fwait
scas
stos
nop
dec
mov
rcll
dec
mov
mov
xchg
pop
cmp
fcomip
or
ja
mov
not
sub
stos
into
ljmp
push
fdivrs
sahf
loope
mov
and
xlat
lock
test
call
in
inc
pop
es
fnstcw
push
mov
jb
sbb
mov
mov
mov
jg
insl
lret
jle
cmp
mov
dec
mov
sbbl
call
adc
sub
mov
or
push
push
mov
filds
xchg
das
adc
jo
pop
cld
pushf
jns
fucomip
or
push
push
imul
insl
jecxz
mov
add
mov
push
or
push
jmp
scas
mov
inc
mov
pop
pop
repnz
std
adc
out
repz
sbb
in
test
lcall
jo
inc
fcmovnbe
xchg
dec
addl
sbb
call
clc
ss
hlt
test
jnp
pop
add
clc
sbb
mov
lods
mov
scas
sub
decl
xchg
xor
arpl
xor
sub
imul
jmp
pop
cmp
push
fdivr
add
jno
call
mov
sub
jp
fwait
mov
or
sbb
inc
inc
fsubrs
sbb
enter
and
ss
rcl
or
jg
or
gs
mov
push
push
mov
loope
call
es
cmc
pop
push
xchg
mov
shr
xor
mov
dec
cmp
ljmp
jge
xor
cmp
cs
add
jle
jo
cltd
sub
je
push
pop
push
sub
incl
lahf
into
mov
rorl
stos
repnz
lock
pop
cs
mov
mov
pop
jle
cld
fisttpll
scas
rolb
and
call
pop
sbb
imul
pop
int
fidivs
adc
mov
dec
roll
ret
adcl
in
pop
addr16
jecxz
test
or
xchg
ja
in
jmp
jg
mov
pop
iret
aaa
sarl
movsb
cltd
pop
fs
jecxz
mov
xchg
inc
xor
ljmp
pop
add
test
sbb
sarb
ds
dec
jecxz
in
push
stc
and
adc
add
push
nop
andb
test
xor
pop
or
xor
jecxz
mov
incl
cwtl
bound
xchg
rorl
sti
jmp
xchg
and
pushl
cmpl
addl
xor
dec
incb
shl
sar
call
sub
jmp
sbb
cltd
loop
add
inc
and
ficomps
and
push
loop
push
or
jg
dec
daa
sbb
and
pop
add
jle
pop
mov
inc
les
xor
push
imul
cmpsb
adc
jl
push
add
xor
push
lds
xchg
scas
fs
std
call
add
jecxz
sbb
movsl
jl
es
add
sar
scas
ss
decl
mov
sbb
and
sbb
repnz
stos
xchg
incl
icebp
dec
push
adc
inc
jp
inc
les
inc
cli
sub
sahf
in
pushf
lcall
inc
std
call
rcl
in
cwtl
fcompl
rorl
inc
call
jg
fstpl
jmp
insb
ja
repz
jnp
fstpt
cltd
nop
loop
pop
xchg
int
pop
sub
xchg
lock
sub
shl
dec
comiss
pushf
or
pushl
lret
xor
pop
dec
ficoms
call
arpl
js
mov
notl
test
icebp
incl
je
adc
cmp
ljmp
push
push
idivb
std
addr16
dec
pop
adc
mov
and
cmp
cmp
push
les
loope
loop
inc
loope
jmp
adc
ret
roll
mov
push
cmpb
ret
stos
adc
incl
xor
jle
clc
daa
xor
jbe
mov
or
lock
fcomip
stos
testl
and
stos
shl
mov
xor
lock
inc
fists
mov
jmp
mov
call
lods
push
jg
fnstsw
cmp
mov
dec
lret
sbb
adc
stos
jo
jg
push
lcall
outsl
addb
inc
add
mov
inc
adc
cmp
sub
mov
icebp
sub
ljmp
icebp
into
and
pop
arpl
mov
iret
push
or
jae
cwtl
xor
sub
jmp
movsl
push
in
dec
add
or
fs
inc
mov
push
icebp
fldcw
pop
aad
xchg
adc
or
test
mov
pop
push
lods
and
pushl
xchg
cmp
sub
and
mov
sub
in
sbb
xchg
jnp
inc
cld
jmp
cmp
cmp
sub
or
shr
adc
xor
mov
mov
rcr
mov
pop
add
cmp
cli
fnsave
lcall
push
out
lcall
js
or
and
cmp
mov
or
mov
mov
mov
push
mov
xchg
cmp
ds
inc
nop
or
mov
shl
or
push
jo
std
outsl
clc
dec
pop
and
mov
jbe
or
push
xchg
in
mov
imul
inc
sti
jg
hlt
pushl
lret
or
lods
jb
dec
test
push
jno
and
out
lret
xlat
add
fucomip
sbb
arpl
push
mov
into
fldt
pushf
aad
arpl
ljmp
ja
call
test
sub
mov
xchg
aad
and
in
in
jge
enter
inc
jmp
inc
push
jge
push
sub
adc
lock
push
pushf
add
stc
test
mov
mov
sub
dec
sbb
sbb
xchg
and
cmp
mov
mov
cli
imul
pop
inc
data16
out
inc
pusha
imull
fs
daa
std
mov
int3
lcall
stc
out
dec
xchg
and
mov
lods
mov
inc
dec
push
push
gs
mov
stos
ljmp
popf
mov
mov
and
pop
pop
pop
outsl
hlt
ljmp
sbb
xchg
out
js
push
mov
int3
adc
pop
fistpl
das
int3
int3
push
jmp
cld
pushl
xor
out
sub
sub
cmp
jb
mov
jmp
popf
cmpsb
jns
cmp
out
dec
cwtl
mov
decl
lock
xchg
test
inc
cs
in
mov
sub
outsl
daa
adc
mov
orl
hlt
call
dec
arpl
sbb
enter
call
aad
cwtl
adc
fs
or
ret
fnstsw
push
and
push
mov
stc
jns
mov
xor
andps
push
push
lods
je
test
jb
std
loopne
inc
cmp
jmp
lea
and
mov
inc
data16
les
js
fildl
mov
in
enter
add
jp
insb
inc
cli
add
pop
pop
repnz
aam
insl
test
mov
bound
hlt
cmc
mov
sbb
stc
mov
pop
loopne
mov
mov
test
in
inc
and
ret
pushl
test
sub
push
ret
pop
dec
pop
mov
bound
incl
mov
jne
jg
out
or
rcll
xor
inc
add
stc
popa
sti
pushl
shl
and
scas
pop
call
insl
fwait
pop
or
in
pop
cmpl
pushl
dec
xchg
xlat
sbb
push
mov
pushf
ja
mov
jge
xor
ljmp
insl
add
jle
lcall
sti
push
jnp
ficoml
icebp
or
ficoms
aad
push
jnp
sub
mov
decl
js
cmpl
push
fsin
mov
pop
and
stos
mov
push
test
cli
lock
add
mov
js
cmp
and
xchg
hlt
push
mov
mov
mov
fsubl
mov
out
into
in
sbb
dec
loopne
fcos
mov
jne
popa
shrl
les
stos
inc
and
loop
mov
incl
jecxz
inc
divl
das
movsl
cwtl
je
xchg
outsl
xor
lcall
adc
xchg
mov
pop
cmc
mov
pop
mov
dec
xlat
and
aad
mov
pop
mov
jl
or
adc
inc
mov
jmp
jl
mov
sbb
inc
testl
imul
data16
sub
call
jns
cltd
jecxz
add
pop
push
shl
mov
xchg
sub
lcall
mov
sbb
sub
cmp
push
sbbl
sti
roll
pop
sbb
sub
iret
insl
loop
jmp
adc
aas
xchg
cmp
mov
mov
cmp
cmpsl
jl
push
pusha
mov
sbb
test
dec
cltd
xor
mov
addr16
push
stos
cmpsl
inc
sbbb
gs
cmp
inc
jb
adc
test
xor
int
repz
xor
fdivl
xchg
lret
mov
xchg
paddusb
inc
lcall
fnstenv
aaa
add
incl
pop
leave
into
push
jb
xor
ret
shl
ljmp
sar
cmp
stos
sub
stos
mov
adc
aaa
std
jmp
fwait
cwtl
hlt
bound
and
sbb
sbb
ret
and
call
jecxz
mov
mov
pop
int
sub
call
add
pop
clc
dec
jb
shrb
jmp
loope
and
popw
inc
popf
ja
fidivl
adc
mov
adc
sbb
fistps
popa
pop
inc
jbe
rcrl
call
pop
mov
scas
sti
out
mov
adc
pop
in
cmc
mov
adc
inc
lahf
adcl
sbb
or
imul
insl
pop
pop
mov
scas
mov
dec
dec
push
int3
mov
dec
sahf
shlb
jl
mov
xor
pop
xor
cmpsb
orl
mov
icebp
mov
and
daa
cwtl
out
clc
scas
mov
xorb
inc
fcmovbe
fs
in
jae
pop
data16
decl
xchg
add
jne
aaa
mov
stos
mov
movsl
add
insl
pop
xchg
or
sbb
pop
jne
enter
incl
xchg
xor
imul
and
cmp
push
and
int
add
fsqrt
sub
cmp
cmp
cld
call
adc
mov
sahf
out
and
and
imul
adc
in
push
xchg
clc
ljmp
xchg
fidivl
jo
imul
sbb
scas
sbb
jb
jmp
sub
imul
repz
push
outsb
and
pusha
outsl
mov
or
ds
adc
cs
popf
cmp
mov
xor
adc
jl
bound
push
fidivl
cmp
xchg
push
outsl
ret
xor
xchg
inc
sbb
movsl
aad
mov
fcomip
incl
push
mov
adc
jae
gs
lcall
mov
cmp
jmp
ds
inc
cwtl
stos
rcl
cs
stc
inc
jmp
or
jge
sahf
fwait
enter
inc
mov
lcall
std
cmp
stc
sub
add
shlb
sbb
inc
mov
cmove
imul
lock
mov
sbb
pop
mov
xchg
mov
pop
pop
push
sub
push
mov
cli
cmp
xchg
shrd
sub
sbb
dec
inc
cmpsl
lods
xchg
mov
sbb
dec
jmp
inc
aaa
mov
inc
adcl
int3
and
mov
pop
xchg
imul
dec
std
jmp
inc
mov
pop
out
repz
inc
in
mov
mov
pop
pop
or
pushl
clc
mov
add
incl
ror
cmp
or
mov
std
shl
stos
fistl
push
incl
jo
pusha
notb
movsl
pop
inc
and
adc
shrl
sbb
fistpll
shll
jne
mov
popw
mov
cmp
nop
addb
stos
cmp
rorl
sub
jg
jecxz
decl
xchg
rclb
mov
cmp
push
std
decl
jo
cmp
enter
xor
cwtl
fists
ds
cmp
cld
ljmp
mov
jo
pop
repz
call
call
sbb
xchg
mov
jno
movsl
sub
aad
xor
sahf
loope
pop
ja
fcmovbe
push
mov
and
sti
in
cmp
scas
xchg
mov
aas
jb
in
mov
out
sbb
xchg
jb
stc
rorl
repnz
subb
push
rorl
stos
push
push
icebp
push
stos
xchg
dec
and
xchg
push
dec
stos
xor
loope
inc
fbld
int
jl
test
test
ret
cmpsb
mov
xchg
leave
adc
fisttps
int
or
push
push
loopne
sub
and
lahf
imul
pushl
cmpsl
push
adc
imul
jno
xchg
pop
sub
xchg
pop
xor
mov
sub
in
popf
lods
ljmp
data16
cmpb
sti
lret
addr16
daa
push
cmpsl
inc
sbb
mov
call
aad
loopnew
sub
mov
adc
xor
loope
dec
cmp
mov
call
sub
ret
sub
mov
fxch
andb
fimull
add
jmp
ja
mul
lock
xor
stc
mov
sahf
xlat
pop
scas
mulb
pop
and
xchg
insb
in
decl
mov
pop
xchg
test
mov
ljmp
inc
sarl
testb
ja
sbb
push
daa
test
cmp
jg
sub
mov
cmpsl
xor
add
jge
enter
mov
jmp
pushf
scas
cmpsb
ja
add
mov
insb
xor
int3
out
add
inc
push
push
inc
push
add
clc
out
js
int3
loop
push
shrb
xor
sar
jg
das
dec
adc
pusha
add
aaa
and
add
fsts
bound
jg
inc
cmp
scas
lods
or
xor
push
jg,pt
jmp
sub
call
call
jmp
cmpsb
cmp
aas
jnp
push
subl
xor
adc
fdivrl
out
sub
das
or
pop
jl
mov
cmp
inc
sbb
test
call
add
fwait
mov
sar
pop
adc
ljmp
cmp
push
add
xor
adc
pop
mull
and
pop
leave
xchg
lcall
aaa
cmp
ds
int3
jnp
testl
test
insl
fs
out
add
pushf
aas
movb
ljmp
out
out
aas
insb
mov
test
pop
clc
sarl
insl
and
cmpsl
jmp
sbb
pop
stos
or
push
ret
jno
cmp
lcall
fwait
cs
ljmp
add
js
xchg
xchg
daa
fwait
repnz
jl
in
lds
sahf
and
into
inc
mov
cld
dec
mov
fnstenv
jnp
ja
mov
enter
ss
stos
fcmovnb
xorl
xlat
xor
or
xchg
cltd
sub
jb
or
fcmovnu
sahf
ja
lahf
or
lods
jg
lcall
shll
rep
imul
cmpsl
ret
outsb
sbb
jae
cwtl
fisttpl
ljmp
repz
sti
sub
or
sub
pop
leave
das
fimull
in
mov
incl
jmp
cmp
cmpsb
iret
inc
pop
add
or
and
jg
cmc
jne
xchg
sbb
fisttpl
dec
test
movsl
stos
rol
aaa
fwait
mov
inc
out
lcall
dec
js
adc
std
test
add
pop
mov
mov
or
add
dec
mov
mov
testl
pop
sbb
push
mov
xchg
inc
cmp
or
add
lods
mov
leave
mov
fdiv
cmp
outsl
hlt
jb
mov
add
test
das
pop
notl
lock
imul
aad
call
mov
fstl
cmp
pop
xchg
mov
dec
mov
or
nop
in
jne
jg
inc
call
mov
test
ds
in
idivb
iret
jmp
incl
inc
out
or
cmpsl
scas
sbb
push
fists
gs
mov
or
pop
out
or
stc
sub
xor
sbb
out
xor
jns
insl
lods
lds
ljmp
jmp
repz
loope
lds
in
in
jecxz
test
loop
imul
push
push
loop
pop
adc
add
jl
and
rorl
ljmp
sahf
iret
inc
cmc
test
adc
sub
adc
mov
jg
jmp
leave
pop
rcrb
pop
jecxz
cmpsb
ret
sub
test
gs
outsb
mov
call
inc
jns
rcr
jo
or
push
dec
mov
daa
jecxz
adc
movsb
jns
sar
mov
inc
sub
jge
push
inc
les
decl
pop
and
cld
jne
shll
mov
xlat
jo
test
ljmp
fdivrs
push
cwtl
jmp
cmp
pop
xchg
insb
mov
sbb
mov
cld
call
mov
out
in
pop
insb
scas
xor
sbb
lcall
leave
add
mov
dec
dec
or
rol
movsb
cli
lock
inc
pop
jmp
mov
inc
pop
mov
cmp
test
jl
push
inc
pop
repz
rolb
jbe
insl
or
mov
lcall
jmp
mov
dec
or
repnz
jmp
je
mov
call
adc
sarl
adc
cld
imulb
mov
jb
stos
insl
jo
rorb
cmc
pushl
mov
in
popf
mov
mov
fcomip
incl
xor
dec
popf
push
mov
and
jmp
lcall
mov
add
mov
dec
add
cmp
mov
jns
loopne
mov
mov
mov
cmp
jp
sbb
cmpsl
pusha
or
inc
inc
sar
call
movsl
hlt
popf
cmpsb
sahf
scas
and
andl
fcomps
das
mov
decb
cmp
lods
pop
cmp
push
xlat
xchg
js
jecxz
jns
dec
dec
add
push
daa
les
stc
fildll
cmc
lret
xchg
rcl
loopne
mov
out
and
adc
loope
mov
clc
cmc
outsl
cli
inc
push
pop
push
les
push
test
cmp
cld
inc
fistl
mov
incl
ss
pop
mov
rclb
pop
or
jb
scas
in
fwait
jae
jg
jmp
or
clc
outsl
sub
push
mov
pushf
mov
in
lods
popf
addb
xor
sbb
dec
push
or
pop
mov
into
shll
fwait
test
inc
pop
leave
sti
fwait
mov
push
cmp
ss
or
popl
xchg
sbb
jg
lds
jae
test
je
jge
sub
fisubl
push
repnz
cmp
dec
lea
pop
daa
sub
adc
sbb
clc
xchg
xorb
cld
mov
subb
es
sub
cmp
into
pop
fcomip
call
dec
or
js
jmp
cmp
scas
lock
and
ljmp
outsl
insb
jae
cld
push
add
xchg
sub
mov
mov
inc
sbb
jmp
int3
popf
inc
adc
pusha
xor
out
mov
adc
adc
adc
std
xchg
or
lcall
or
out
sbb
xchg
aaa
push
jmp
lea
xchg
or
xor
mov
repz
fists
push
sti
cmp
dec
push
outsl
jbe
in
push
xchg
decl
lret
push
iret
popl
roll
popa
lcall
mov
lds
into
outsl
or
cmp
lret
sbb
outsl
cmp
fcoml
decl
inc
ss
mov
mov
insl
pop
sbbl
mov
sub
mov
cmp
fistpl
inc
lds
and
call
rorb
mov
mov
dec
sub
push
clc
mov
das
sar
jg
daa
test
ret
sub
test
fsubrp
mov
cli
sbb
jle
pushf
ja
clc
or
dec
sub
in
mov
mov
ss
jbe
adc
pusha
std
fadds
in
not
add
cmp
inc
and
inc
cmpsl
stos
call
out
out
lahf
push
test
in
cs
loopne
sbb
inc
add
imul
pop
fcos
call
test
test
inc
out
inc
jo
cmp
shrl
xchg
popf
dec
lret
js
imul
xor
xchg
or
fmulp
out
inc
fbstp
sti
and
loopne
adc
lret
int3
outsb
add
xor
aad
jmp
lock
mov
ljmp
cmp
and
std
xchg
jb
push
pop
and
rorl
popa
addr16
lods
adc
andb
cmp
mov
push
pop
icebp
arpl
sbb
movsl
fstl
pop
push
dec
sbb
lcall
stc
icebp
lahf
enter
rolb
push
mov
das
testb
ljmp
pop
adc
pop
ret
ret
lock
insl
jne
mov
int3
jae
jmp
ja
enter
inc
scas
push
rcrb
jge
data16
cmc
mov
je
into
sbb
incl
int
cmpb
fwait
push
inc
jns
movsl
dec
pop
in
arpl
das
jo
outsb
sbb
jmp
sub
and
ja
insb
test
inc
out
or
sbb
jmp
and
int
jno
pop
add
xor
loopne
cmp
call
jno
adc
stos
hlt
out
add
adc
or
jmp
jmp
jnp
jne
dec
pop
es
mov
loopne
mov
nop
fdivl
pop
xor
or
lcall
mov
addr16
add
insb
or
cmp
data16
ljmp
adc
jbe
jbe
out
loope
fstpl
fdivrs
lock
xchg
xchg
cwtl
jp
add
pusha
stc
cltd
xorl
shlb
mov
out
cmp
mov
ds
aad
xor
pushf
jl
dec
push
fcomps
ret
decl
lret
outsb
lds
jl
push
sub
lcall
idivb
dec
jl
scas
ljmp
iret
dec
mov
pushl
or
out
mov
or
cmp
outsl
dec
cli
les
cmp
jg
push
dec
jp
hlt
imul
pop
lea
dec
bnd
xor
dec
push
pop
jo
loopne
adc
or
and
pop
xchg
scas
xor
xor
call
xchg
lods
pop
mov
cmp
xchg
in
loop
call
daa
cmp
test
and
sbb
lcall
add
ljmp
ss
jns
adc
push
xchg
inc
jb
movl
aad
sbb
sub
dec
call
push
or
and
cmp
out
xchg
xchg
sbb
lret
mov
cltd
mov
mov
incl
nop
outsb
cmp
adc
in
inc
es
cwtl
mov
das
je
mov
cmp
sarb
jmp
mov
mov
xchg
pop
data16
xor
repnz
cltd
cwtl
scas
jmp
push
pop
sbb
icebp
cs
hlt
jae
push
push
pop
sbb
mov
inc
pop
daa
fs
mov
ret
sti
push
in
stc
jae
bound
ljmpw
lahf
jo
rcrb
pop
mov
in
pop
aad
pop
cld
push
popa
sub
jge
and
enter
sub
cmc
iret
inc
or
lahf
push
or
sub
ss
pushl
inc
fdivr
call
inc
lods
in
sbb
xchg
sti
lahf
lea
movsb
ja
mov
jo
ds
loope
jb
add
ljmp
aas
in
adc
or
aam
add
fstpt
lahf
jnp
iret
pop
cmp
ljmp
inc
div
jmp
lea
mov
or
lods
icebp
aas
int
xor
cmp
ret
jl
lea
sbb
dec
lcall
fisubl
repz
call
ljmp
mov
jo
cli
cwtl
outsb
xchg
dec
shl
inc
xchg
and
inc
mov
push
jg
cmp
cmp
jnp
out
push
bound
aaa
scas
mov
aas
push
clc
pop
js
cltd
jl
fcomps
ja
pop
mov
mov
mov
outsb
fdivrp
decl
les
arpl
repnz
ret
out
or
fadds
lods
mov
lcall
sub
out
inc
out
pop
cmp
mov
sahf
ja
fdivs
ficomps
inc
jle
test
pop
loopne
out
lock
push
loop
jbe
or
pop
xchg
mov
rcrb
jmp
pusha
add
roll
imulb
inc
fldl
lock
inc
cmovp
xor
in
push
mov
push
rorl
lods
add
sahf
shlb
jae
adc
fistpl
jmp
jg
mov
mov
or
aas
add
jae
pushl
js
js
push
out
xchg
cli
jl
xor
mov
lcall
sub
mov
ret
pop
xor
xlat
push
mov
and
imul
jmp
shlb
jnp
mov
imul
maxps
inc
jbe
fcos
jge
out
xchg
lcall
lock
insb
ds
shl
xchg
lcall
lcall
jne
inc
push
fwait
aam
adc
push
cmc
mov
mov
push
bound
fs
outsb
xor
call
jl
data16
push
movsb
imul
test
pop
adc
repnz
cmp
mov
lcall
out
fisubrs
pop
in
movsb
mov
jp
pop
outsb
test
pop
adc
push
lret
addb
into
jnp
and
data16
test
test
call
push
lcall
mov
pop
pop
repz
inc
mov
jg
or
inc
mov
nop
xchg
enter
jno
addr16
mov
cltd
lahf
ss
movsl
mov
nop
mov
decl
pushf
sub
fcomps
push
aam
add
ficoms
xchg
sub
cmp
insl
jnp
and
gs
sar
out
mov
lahf
jge
sub
ljmp
dec
jle
daa
pop
sub
cltd
xlat
pop
aaa
mov
cmp
xor
add
andl
inc
test
lret
aas
sbb
add
push
js
mov
call
xor
enter
shrb
mov
pop
test
cmc
jo
fs
test
mov
jl
ss
mov
stos
and
dec
or
mov
iret
jg
cmp
or
jb
and
jmp
out
push
push
push
inc
pop
push
enter
lcall
push
fbstp
pop
pop
or
jne
jg
call
pop
pop
push
and
xchg
mov
xchg
addr16
push
cmp
sahf
sti
lahf
inc
mov
ret
jl
fwait
cltd
outsb
inc
lds
or
or
add
into
sub
add
inc
aad
movsb
cld
test
adc
outsl
inc
loope
fwait
push
cmpsl
sbb
js
jmp
dec
mov
mov
es
or
and
test
jl
imul
aad
xor
jbe
loopne
and
and
cmp
pop
cmp
addr16
repz
xchg
pop
jns
outsl
hlt
push
cmc
lcall
mov
jl
sub
mov
lret
shl
pop
out
and
lods
pop
rorb
lcall
mov
out
mov
sbb
imul
cmpsl
iret
repnz
xor
jmp
mov
inc
cmp
push
pop
cmc
sbb
jo
push
insb
mov
fcmovnbe
pop
or
xor
sbb
call
cwtl
cmp
push
fs
add
pop
rcrb
sar
lcall
pop
sbb
cld
lds
in
test
lods
idiv
mov
incl
std
adc
imul
jmp
mov
jg
mov
adc
cmc
mov
pusha
into
data16
jp
subb
test
ljmp
lcall
sbb
aam
sbb
lcall
imul
pop
jo
add
lcall
and
jge
mov
inc
fisttps
out
xchg
sbb
int
jle
pop
dec
lcall
inc
pop
pop
cmpsb
rcrl
mov
ret
in
clc
add
lahf
icebp
lahf
bound
pushl
mov
aad
jnp
shrl
icebp
adc
and
pop
or
clc
inc
incl
aam
mov
test
imul
mov
rorb
push
and
lahf
test
mov
ljmp
js
idiv
jle
testl
pushf
sbb
sti
xchg
call
xchg
aam
fadds
inc
inc
push
or
cmpsb
cwtl
out
xchg
loope
call
add
inc
and
jge
daa
pop
inc
dec
leave
ret
dec
cs
mov
lret
xor
adc
mov
imul
div
pop
sub
fwait
jnp
xor
out
cmpsb
cmp
jle
push
ss
inc
inc
test
pop
incl
test
paddusw
push
shrl
sbb
dec
bound
out
mov
pop
decl
sub
pop
ja
lods
push
or
jmp
dec
mov
inc
enter
mov
call
adc
hlt
adc
mov
mov
cmp
mov
jge
mov
lock
cld
and
or
cmp
adc
sbb
mov
roll
std
pushl
lahf
mov
xchg
aam
fwait
mov
popa
repz
movsl
lcall
mov
decl
push
or
mov
cmp
lcall
in
lods
loopne
push
outsl
mov
lcall
xchg
je
insl
lahf
jnp
jne
loopne
filds
or
lcall
ss
cs
jge
pop
mov
fmul
fbstp
lcall
imul
adc
sbb
adc
lods
cmp
jmp
shll
lock
lea
es
sbb
xor
mov
test
pop
nop
lock
call
mov
jns
es
and
popa
loop,pt
stos
pushf
mov
lret
sarl
xchg
sub
mov
mov
rcll
inc
sub
fisubrs
and
mov
inc
sbb
mov
jmp
sahf
shlb
sub
mov
das
push
sbb
ljmp
inc
ficoms
pop
in
dec
lcall
mov
pop
int
mov
push
mov
incl
lods
ds
dec
jne
cmc
rcr
mov
inc
test
das
int
leave
stos
sbb
xchg
incl
push
lock
inc
or
arpl
pop
cli
in
decl
adc
int3
rorl
fsubrp
push
ja
mov
mov
mov
pop
test
hlt
dec
cmp
sahf
pop
inc
sbb
push
jp
xor
xor
push
fcomps
xchg
cld
mov
in
pop
ret
leave
loope
sub
fs
mov
jae
out
jecxz
mov
in
addr16
xchg
outsb
xchg
out
xor
outsb
pop
mov
jg
call
test
cmp
ja
lret
nop
aaa
test
iret
ljmp
in
addr16
orb
mov
pop
jp
fwait
jp
aam
xor
mov
inc
lcall
mulb
dec
leave
insl
daa
scas
sti
lds
mul
mov
cli
outsb
push
xor
push
add
adc
iret
jne
mov
sub
movsb
int3
sub
divb
call
vpaddb
ds
lock
jge
pop
xchg
and
inc
or
adc
lds
and
ret
incl
pushf
cmp
sbb
mov
push
mov
shl
test
fadd
cli
fcmovu
stos
mov
in
pusha
push
call
aad
jbe
stos
insl
jnp
call
dec
ds
test
mulps
insb
lods
out
in
add
mov
lods
mov
sarb
fsts
pushl
jp
outsl
daa
fwait
insl
mov
mov
out
fnstcw
pop
pop
jns
lds
xchg
mov
xchg
cmpsl
jne
iret
mov
rclb
cltd
cmpsl
push
nop
lds
lcall
sbb
jae
jmp
or
sbb
pop
in
add
xor
ljmp
sti
or
mov
mov
cltd
andl
std
pop
xchg
jne
fsubrs
hlt
jg
in
or
sbb
and
cld
mov
cmpsl
out
clc
adc
cmp
icebp
cs
and
add
mov
dec
in
fwait
movsl
mov
and
leave
mov
cmp
adcb
into
test
jae
repz
push
adc
js
cmc
cmp
mov
mov
enter
insl
test
dec
mulb
dec
inc
pop
inc
insb
cmpsb
jbe
ret
decl
sbb
adcb
add
test
js
mov
or
enter
scas
xchg
loop
pushl
aam
xchg
mov
or
push
loope
scas
stos
pop
dec
jg
pop
pop
sub
es
movsl
scas
xor
jle
incl
out
aam
sbb
loop
into
fwait
lods
das
and
dec
xchg
cmp
rcrl
clc
inc
mov
movsb
dec
out
xchg
mov
xlat
shll
xor
jg
cmpsb
cmpsb
inc
xor
lahf
jge
loopne
jae
mov
adc
mov
decl
fimuls
fdiv
or
mov
mov
or
inc
js
add
ljmp
jge
push
loopne
fiadds
dec
jmp
mov
fbld
ds
clc
icebp
ret
rcrb
mov
loop
jecxz
lcall
pop
hlt
jmp
loop
push
gs
xor
out
das
popf
sar
sbb
pusha
loope
sar
aad
mov
movsb
cmp
xchg
and
outsb
mov
out
fwait
fs
clc
jp
cmpb
and
test
pushl
push
push
out
daa
mov
lock
mov
ja
xor
push
or
lds
cmp
addr16
jmp
pop
cmp
pop
in
pop
mov
pop
bound
lods
add
mov
js
lds
push
adc
js
xchg
mov
ljmp
daa
dec
xchg
cmp
cmp
lret
int3
add
in
ret
ds
mov
cmp
jb
std
push
sbb
ds
pop
loope
inc
aaa
iret
push
xchg
pop
dec
mov
mov
xlat
cmp
pop
inc
aam
or
jmp
dec
pop
dec
or
sub
jg
mov
out
call
sahf
cmp
arpl
call
sub
sti
ss
mov
inc
ss
xor
iret
in
inc
and
mov
inc
mov
jmp
sbb
fldt
ret
enter
sbb
in
jo
adc
in
lcall
nop
push
lods
mov
fwait
cld
aam
ds
nop
jle
xor
enter
dec
daa
scas
in
push
loop
lret
iret
aam
testl
nop
incl
add
jle
lods
mov
add
xchg
cmpl
or
inc
and
sub
or
mov
scas
cmpsl
and
jg
sub
ds
daa
cmp
or
imul
ret
cltd
mov
mov
and
loopne
decl
mov
jno
mov
sahf
sbb
mov
jle
dec
shlb
cmpsb
lret
mov
imul
shr
lds
dec
xchg
push
adc
gs
dec
leave
inc
mov
leave
jge
xor
out
sub
mov
cs
call
loope
fdivrs
jns
insl
sub
and
and
out
mov
decl
xchg
dec
nop
in
pop
xor
or
push
test
addr16
inc
pop
jge
pop
push
cmp
pushl
add
movsb
jns
lcall
in
xchg
ret
call
mov
nop
subl
jle
ds
push
mov
imul
cmpsb
inc
in
jb
sahf
xlat
js
pop
fsubs
insb
dec
push
pop
mov
push
mov
cli
mov
fldz
cs
cwtl
and
jbe
adc
xchg
jmp
bnd
in
adc
pop
push
or
movsl
adc
xchg
fists
lahf
sub
das
mov
lcall
into
pop
inc
test
outsl
sub
sub
inc
popf
add
jo
push
dec
cli
mov
lret
insb
pop
sti
call
ud1
mov
push
sbb
jnp
add
out
popa
adc
jg
sbb
loop
add
test
lcall
movsl
repz
rol
jge
rcrl
mov
xchg
aam
adcb
push
mov
mov
xchg
roll
clc
jmp
dec
rep
shll
or
and
out
xchg
fldl
out
inc
mov
jg
roll
fadds
cmpsl
and
dec
xor
mov
stos
add
xchg
stc
into
test
loopne
clc
xchg
sti
lret
out
cwtl
and
inc
cmp
pop
ljmp
inc
sahf
out
and
mov
sub
xchg
and
pushl
sbb
out
stos
xor
repz
fistl
fnstenv
push
cmc
shl
pop
jae
dec
push
inc
je
sbb
mov
call
jae
das
subl
mov
jmp
je
adc
cmpsl
push
call
std
addb
pop
xchg
mov
xchg
repnz
mov
insl
daa
dec
ljmp
push
xchg
sarl
sub
int
push
xor
mov
inc
xchg
jns
dec
mov
add
decl
push
mov
jns
pop
jg
and
hlt
fs
adc
scas
ret
decl
sarb
and
cmp
fidivrl
jl
addl
scas
lret
jbe
call
movsb
inc
sahf
movsb
iret
dec
lds
roll
out
mov
pop
jns
fisubrl
xor
incl
cmpsb
into
stos
stos
pop
loop
mov
inc
in
cld
rolb
dec
and
add
decl
lret
imul
enter
lock
xlat
xor
decl
fnsave
cli
daa
ficompl
mov
xchg
arpl
push
lods
repz
in
pop
lcall
lcall
sub
aaa
js
add
mov
inc
sub
pop
into
adc
rclb
cli
lret
xor
inc
test
cmp
sub
cld
jbe
aas
pop
mov
mov
mov
decl
add
je
mov
addr16
xor
out
cmpsb
and
cwtl
xchg
pop
cmc
das
xchg
decl
cmp
jne
adc
bound
mov
pop
repz
mov
outsl
add
mov
sbb
ss
insl
sub
jp
dec
xchg
movsb
pusha
cmp
jmp
sub
inc
int3
lods
dec
dec
sub
ja
movsl
dec
fists
sbb
insl
mov
hlt
cmp
call
cld
sbb
test
cmpb
in
xor
fcompl
sub
sbb
jmp
decl
in
jae
sti
addr16
je
aaa
xchg
jmp
adc
shll
lcall
fsubrl
int3
cmp
inc
push
sbb
xlat
loopne
adc
iret
mov
push
jno
clc
inc
aaa
adc
xorb
jnp
rcrb
lahf
shrl
iret
mov
jnp
imull
lds
add
cmpl
incl
out
and
lcall
mov
cmpsl
cmp
out
aam
call
mov
xchg
popa
test
xor
or
fcmovne
mov
jg
and
dec
lods
mov
sahf
xor
xchg
stos
pushl
mov
mov
sub
inc
test
sahf
pop
mov
cmp
pop
pop
pusha
jle
add
push
gs
cmp
xchg
jl
push
inc
sbb
not
jge
incl
in
mov
clc
mov
xchg
pop
lds
rolb
movsb
ds
gs
lcall
and
push
leave
cmpsb
rcll
lcall
leave
popf
or
int
lahf
dec
enter
mov
pop
dec
cmpsb
mov
ret
loope
mov
pushl
xor
jb
je
mov
jmp
out
xchg
mov
jg
arpl
lea
loopne
movsb
push
and
cltd
in
shr
decl
rcrl
cs
mov
sbb
and
or
mov
rcll
nop
movsl
dec
imul
pop
icebp
lods
in
sbbl
pop
decl
jl
xor
cmpsb
hlt
sub
sbb
test
pop
or
rol
sbb
and
ret
jb,pn
cli
popa
mov
dec
aas
jb
jmp
subl
xor
mov
call
cmp
in
cs
xor
jmp
push
add
int
negb
popa
mov
adc
mov
cltd
sub
incl
mov
adc
inc
xorl
jle
test
ss
add
aas
adc
xchg
call
subb
cld
mov
imul
lret
lods
popf
cmp
sbb
add
lcall
xchg
jg
in
cmpsl
dec
mov
cmpsb
xchg
andl
jmp
sub
shll
sarb
std
inc
adc
jp
in
dec
pusha
push
and
ja
mov
fwait
mov
and
mov
into
fists
repz
aad
xor
jg
xor
dec
cld
pop
lock
push
jle
ror
xchg
add
jg
lods
int
in
mov
decb
inc
xchg
pushf
inc
iret
lcall
mov
jns
cmpsb
fistpll
jmp
sbb
mov
loop,pn
call
push
jecxz
and
xlat
mov
mov
pop
std
pop
jmp
adc
mov
div
incl
or
dec
out
test
jp
sub
data16
push
push
sbb
pusha
sub
aam
inc
or
sub
xchg
cmpsl
and
pushl
mov
subb
lods
fadd
xlat
outsl
pop
test
in
rcll
cmp
mov
mov
sti
call
out
cmp
push
sbb
jne
adc
pop
sbb
mov
shrb
lcall
in
aas
or
popf
add
or
xchg
cmp
rcrl
jo
mov
inc
popf
mov
push
xchg
xchg
inc
jle
cmpsl
cmc
fwait
push
lods
ljmp
test
addb
movsb
sub
out
adc
pop
sahf
scas
sbb
ljmp
push
mov
ret
xor
insl
sub
dec
jo
mov
mov
enter
rorb
repz
hlt
xchg
loop
push
jmp
mov
lea
sub
bound
adc
jnp
sub
aas
inc
push
js
push
pop
jmp
pop
inc
sbb
xchg
and
call
ret
in
pavgb
pop
mov
jb
sbb
pop
lcall
dec
movsb
mov
add
mov
jne
sub
mov
lahf
mov
repnz
out
call
inc
xor
cmp
cmpsl
mov
es
pop
std
incl
push
push
test
subb
add
or
adc
sar
call
inc
jecxz
cmp
inc
sbbl
push
pop
pop
jno
idivl
xor
fdivr
lcall
mov
dec
xchg
fsubs
rorb
int
or
nop
je
popf
mov
icebp
and
pop
icebp
jecxz
push
sub
leave
nop
jne
nop
xchg
sub
incl
xor
movsb
movsb
fwait
lcall
fstl
inc
pop
ljmp
decl
mov
mov
adc
out
pop
test
repnz
bound
pop
shlb
mov
jnp
lock
inc
lcall
jnp
es
mov
add
outsl
test
out
add
out
jp
out
sub
or
xchg
jg
adc
or
cmpb
sub
mov
imul
lret
decb
dec
call
mov
in
push
mov
out
add
ja
aam
mov
ljmp
test
ja
dec
mov
inc
adc
insb
xchg
xor
pop
punpckhdq
out
add
push
ret
bound
pop
aas
outsl
or
sti
cmpsb
sahf
inc
incl
in
or
cmp
pop
ret
xchg
xchg
push
adc
call
xchg
inc
push
pop
xor
add
jo
adc
jmp
lods
push
add
cld
dec
jmp
ljmp
sub
mov
ss
xor
jmp
add
ss
dec
sarb
jl
adc
sbb
rolb
mov
and
incl
or
add
jmp
mov
push
pop
hlt
stos
pop
jne
dec
repz
mov
xchg
lds
or
inc
xchg
fstl
pop
push
push
fs
cld
ljmp
fnstcw
sti
xlat
jno
cmp
jmp
sub
lahf
add
das
cltd
daa
lock
scas
pop
or
sbb
adc
push
out
jne
test
ljmp
mov
insl
faddp
out
inc
aaa
mov
icebp
jne
bound
jbe
pop
pop
adc
stos
sub
std
sbb
fs
cmp
push
mov
pop
dec
fsubr
push
je
decl
adc
mov
inc
fldl
repz
ror
mov
xchg
ljmp
imulb
push
xchg
push
nop
aaa
repz
inc
icebp
mov
pusha
shlb
imul
orl
fwait
orb
sbb
ja
icebp
cmp
sub
nop
mov
stos
out
xchg
mov
cmp
fisubrs
aaa
jnp
je
or
mov
jl
nop
pop
jae
jns
loopne
shll
and
mov
push
scas
sti
aas
nop
mov
test
jmp
cmp
mov
adc
movq
push
pop
stos
dec
out
push
add
mov
or
fdivs
lret
jmp
stos
test
lods
inc
fmuls
pop
ljmp
push
jmp
fisttps
jbe
movl
ljmp
in
lcall
inc
pop
ret
sbb
add
adc
sub
inc
mov
loopne
shrl
movsb
push
aas
call
push
push
xchg
out
jne
rolb
decl
aam
movsl
push
lret
or
adc
cmp
cmc
mull
sbb
and
mov
dec
jae
xor
or
mov
cwtl
adc
adc
xchg
fbstp
inc
mov
jle
mov
pop
inc
ja
out
das
cs
repz
adc
jmp
ss
and
jbe
pop
xchg
out
cli
or
stos
fildl
cmp
push
push
add
incl
push
mov
fsub
lock
jmp
jns
ret
sub
stos
leave
and
fsts
sub
mov
push
in
decl
mov
cwtl
mov
push
cmpsb
loope
mov
add
hlt
mov
mov
xorb
aaa
pop
idiv
decl
jle
sbbl
mov
mov
js
stc
cmp
incl
xor
imul
popf
ljmp
mov
xchg
ds
pop
popf
xchg
fcomip
cmp
jg
cld
push
int3
aaa
lods
or
cmp
scas
xchg
adc
mov
jmp
xor
imul
jmp
mov
call
push
lcall
pop
lea
int3
jne
jns
lret
xchg
jbe
push
jb
cmc
adc
adc
or
push
fbld
out
data16
dec
jg
loopne
repnz
mov
repz
pop
sbb
jl
cld
std
mov
inc
or
cld
mov
test
mov
dec
daa
push
cmpsb
test
cmp
subb
xlat
popa
xor
jle
mov
loopne
out
outsl
xor
mov
pop
std
jo
mov
cmp
ds
or
cmp
nop
loopne
call
notb
jb
xchg
fdivrs
jae
sbb
inc
mov
sub
push
mov
insb
inc
std
out
popa
fnstsw
sbb
pop
mov
push
jg
jno
jge
imul
and
jnp
mul
jnp
sub
mov
lret
mov
push
push
mov
pusha
xchg
mov
mov
push
rorl
fs
inc
push
shll
and
mov
mov
sub
int
mov
add
pushl
imul
cmp
push
inc
inc
fimuls
adc
inc
test
lds
fbld
jae
push
sub
xor
cmpsl
or
mov
call
out
jl
fdiv
or
lods
ja
fiaddl
iret
movsb
test
in
decl
jecxz
sbb
cmpl
repnz
popf
jmp
ds
sbb
and
jmp
sbb
jp,pt
js
xor
in
les
mov
push
push
pop
movsb
hlt
out
mov
push
ja
fmull
ljmp
xchg
add
cs
daa
pop
js
jge
pushl
jo
push
imul
iret
inc
scas
aam
test
js
movb
jg
insb
adc
sub
lods
outsb
jo
sbb
and
xchg
xor
add
xchg
outsb
mov
add
jno
jg
sub
es
mov
dec
inc
out
pop
test
add
lcall
xchg
sti
xchg
xchg
adc
lahf
fdivl
xchg
fbstp
les
sar
call
loope
push
dec
xor
jge
add
mov
test
inc
xor
add
cmpsb
call
sbb
dec
incl
ret
xor
sub
push
ja
sbb
mov
pushl
enter
or
cld
pushf
out
fildll
jmp
mov
in
push
and
jg
pushl
insb
subb
cli
mov
clc
jl
push
scas
aas
mov
in
add
addr16
xor
pop
cmc
jmp
mull
xchg
lahf
test
inc
pop
rcrb
cmp
clc
push
icebp
loopne
outsb
ja
outsb
dec
lcall
jmp
mov
or
adc
add
cli
fidivl
xchg
pushl
adc
aad
call
or
scas
popf
aas
out
je
mov
divb
loopne
inc
loope
clc
push
sub
pop
lock
mov
and
shl
arpl
fscale
loop
mov
jg
cwtl
gs
je
negb
popa
add
test
mov
decl
decl
cmp
mov
pop
xorl
jp
icebp
out
jns
repnz
and
je
std
push
xchg
jg
mov
loopne
mov
sysenter
or
fiaddl
cmp
or
out
sbb
incl
notl
mov
push
jne
jle
or
mov
adc
and
inc
pop
mov
cld
ljmp
mov
pop
jnp
cmp
into
repnz
inc
jl
mov
jnp
pushl
xor
pop
insb
outsl
or
pop
nop
mov
addr16
repnz
movsl
push
aad
lcall
movsb
daa
das
sar
imul
mov
pop
daa
mov
ja
outsl
jge
js
dec
dec
enter
jmp
lahf
jp
leave
imul
lea
repnz
stos
lock
xor
jecxz
ljmp
and
sarb
imul
jns
lds
icebp
in
lahf
push
mov
mov
call
cmp
push
sarb
and
sub
dec
lcall
jg
mov
mov
pop
dec
push
shrl
jg
xlat
sbb
daa
push
xchg
or
popl
out
nop
mov
stc
push
data16
cwtl
cli
pushl
and
out
stc
pusha
xchg
push
fdivrl
imul
ljmp
add
pop
inc
mov
push
cmpsb
sub
ss
enter
push
call
add
mov
mov
pop
js
mov
inc
dec
sbb
daa
clc
mov
out
cmp
movsb
pop
jae
std
jnp
rcrb
pop
add
mov
inc
lods
inc
push
xchg
dec
mov
add
fisubrl
sbb
and
push
out
mov
jo
push
leave
push
out
pop
repnz
xor
mov
cmp
lods
outsb
mov
or
loop
add
jge
and
add
cltd
adc
push
in
pusha
test
jmp
jl,pn
test
adcl
pusha
int
fcmovbe
xchg
mov
and
enter
jmp
bound
popf
je
mov
mov
in
mov
xor
mov
push
ss
sbb
sbb
xchg
jmp
jmp
mov
imul
aas
mov
mov
sbb
jbe
fs
xchg
and
imulb
loopne
sbb
mov
or
in
stc
push
jmp
pushf
cli
mov
inc
xchg
loopne
push
sub
pop
scas
mov
jle
cmp
out
jle
outsl
dec
bound
xchg
xchg
xor
scas
adcl
jle
mov
push
pop
jle
scas
addr16
incl
sbb
fnstcw
lret
jp
mov
pushf
call
jmp
loopne
pushl
fsubrl
mov
sbb
mov
jecxz
mov
int3
mov
dec
fildll
sti
jg
xor
sub
push
sbbl
inc
pushl
int3
push
push
jmp
jmp
mov
pop
negl
sbb
push
cltd
sub
in
fimuls
shl
mov
jp
inc
push
das
repz
ret
jno
and
mov
jno
ljmp
ljmp
push
insl
sti
ss
loope
lcall
inc
stos
test
ret
mov
imul
js
xor
ss
fwait
dec
ljmp
stos
test
dec
jg
ljmp
adc
and
loope
xchg
mov
push
mov
movsb
and
xchg
aas
sbbb
movsl
rcrb
cmp
pushl
shll
in
fdivs
mov
push
aam
notl
cmp
dec
gs
add
enter
jg
insl
int3
push
test
push
mov
repnz
iret
xor
xchg
aas
data16
ljmp
int3
pop
in
sbb
or
out
movsl
add
test
jmp
jecxz
add
add
mov
inc
mov
bswap
cmc
cmpsb
out
mov
xorb
jp
jnp
push
jge
scas
loope
shl
push
xchg
adc
mov
iret
mov
push
jmp
jp
test
jno
sub
roll
pop
xchg
pushl
adc
inc
adc
lods
xchg
jge
xchg
xor
pop
in
in
ficoml
jmp
bound
mov
inc
mov
mov
loop
or
mov
in
adc
jge
popf
push
add
imul
addr16
in
mov
sub
call
mov
dec
mov
lock
in
push
scas
lcall
subl
adc
jne
ljmp
sarl
fmull
jnp
dec
into
test
movsl
cmpb
decl
fnstsw
xchg
push
jno
orb
movsb
push
dec
cwtl
mov
mov
jmp
push
gs
imul
div
adc
mov
test
shll
pop
and
add
or
je
jae
sbb
add
inc
out
call
fdivs
scas
xchg
push
jae
dec
lahf
or
fsubrl
jp
jp
ds
int
or
outsl
jno
dec
ret
roll
imul
inc
lcall
and
xchg
inc
jge
inc
mov
xchg
mov
test
and
xchg
sahf
mov
das
test
fbstp
out
test
in
aaa
pop
add
jnp
and
inc
outsb
incl
je
call
or
lret
push
data16
cmp
lcall
jge
daa
push
lret
add
lods
repnz
lea
decl
cmpsl
es
pop
mov
pop
pop
sub
mov
out
xchg
mov
subb
mov
push
mov
pop
dec
imul
lds
sub
xchg
rolb
subb
mov
ret
jge
fsubp
xchg
insl
dec
mov
pop
cwtl
mov
xchg
in
divb
cmp
xor
ret
andl
mov
pusha
add
lcall
push
dec
sbb
inc
inc
repz
or
fistpll
mov
lcall
pop
dec
push
in
or
lret
aaa
dec
xchg
in
inc
cli
popf
insb
xor
dec
cmp
decl
inc
push
pop
clc
sub
inc
lret
mov
push
sti
jg
xchg
jl
push
std
es
xlat
dec
jbe
out
mov
stos
and
sbb
fs
fcomip
xchg
cmpsb
cmp
test
nop
xor
dec
mov
inc
or
mov
jmp
push
int
mov
daa
jnp
mov
lea
arpl
fs
fistpl
adcl
insb
lods
ss
enter
xchg
cmp
daa
arpl
bound
jne
testb
aam
lcall
rorl
movsb
xchg
jg
ret
add
jle
xlat
push
gs
mov
add
insl
testb
in
sbb
lods
lea
mov
movsl
clc
mov
xrelease
sbb
clc
push
sub
loopne
dec
xchg
lcall
push
or
xchg
mov
or
scas
jp
in
jbe
push
testl
loope
and
xchg
outsl
clc
ljmp
mov
nop
dec
bound
xor
hlt
sar
lcall
je
sbb
dec
mov
adc
fs
push
fisubrl
sbb
pushl
ret
mov
addr16
dec
scas
js
or
in
out
sbb
adc
mov
add
lret
popf
and
jecxz
xchg
call
mov
lods
jecxz
xchg
insl
mov
add
clc
jg
in
push
or
lret
sub
and
sbb
repz
mov
cmp
mov
pop
xlat
idivb
push
sbb
inc
mov
inc
mov
mov
jmp
sub
repz
in
jecxz
fwait
scas
xor
movsl
dec
dec
orb
mov
es
push
xchg
mov
adc
int
mov
scas
xor
fstpl
les
pushl
bound
mov
cmp
stos
xorl
mov
push
decl
addr16
adc
jne
cli
sbb
rcr
sti
cmp
inc
fsubr
adc
cmp
jb
pop
push
aaa
test
fisttps
ss
cs
adc
test
mov
aad
dec
push
fsubrl
cli
push
push
movsl
scas
pushf
xlat
mov
in
lret
dec
loop
fcomp
iret
push
pusha
rcll
ja
dec
loop
sub
cli
or
dec
xchg
jmp
pop
lcall
js
ret
rorb
cwtl
mov
icebp
add
sbb
pusha
retw
lret
call
lods
nop
dec
inc
add
jg
fchs
push
inc
rcll
arpl
mov
insl
repnz
jmp
out
decl
jle
push
xchg
sti
and
ss
das
leave
or
jp
lea
push
pop
icebp
ljmp
jo
in
rcl
cltd
dec
xabort
sbb
aam
push
stc
push
push
jmp
sbb
pop
lods
sahf
sbb
sbb
jp
inc
sub
adc
shl
adc
icebp
es
cltd
inc
iret
mov
mov
icebp
mov
int
arpl
loopne
shrl
lods
test
or
test
aaa
je
pop
mov
es
jbe
pop
mov
dec
les
cmp
xor
lcall
xchg
fldenv
incl
xor
test
lds
push
les
cmc
jmp
push
add
xorb
adc
in
and
mov
icebp
fistpl
decl
pop
cmp
lods
mov
pushf
add
jo
push
nop
movsl
sub
ja
lcall
es
fwait
jp
in
pushf
or
jb
fistpll
rcrl
call
push
cmp
jle
and
add
mov
sbb
push
idivb
jae
jp
add
pusha
clc
scas
call
divl
fcmovne
xchg
mov
xor
lcall
sbb
mov
push
mov
mov
sbb
movb
mov
aas
loope
jmp
pop
adc
mov
xchg
pop
std
xchg
dec
xor
sub
xor
fidivrs
enter
cmp
pop
mov
xor
imul
adc
jo
pop
pop
stc
cmpsb
out
std
inc
jp
ljmp
add
pop
jnp
pop
adc
xchg
cmp
push
out
jno
outsl
dec
adc
aad
dec
ds
push
pushl
push
dec
xor
fbstp
cwtl
icebp
pop
fs
mov
roll
push
inc
cmp
shrl
popa
cmp
ljmp
mov
sub
jl
adc
and
xchg
xchg
push
loope
jp
lds
jmp
jge
mov
sahf
loop
test
jmp
loop
fxtract
fists
push
cmp
cmp
mov
into
aad
fisubs
gs
decl
xor
imul
lea
lcall
push
stos
notb
add
xor
iret
jno
hlt
xchg
in
mov
cmp
shl
flds
mov
add
and
fldl
and
mov
fcom
cld
ljmp
pusha
mov
or
push
movups
mov
pop
inc
pop
lcall
decl
test
mov
pop
out
add
adc
mov
jb
and
and
mov
cmp
sub
out
pop
cmc
decl
cwtl
cli
push
jp
pop
jo
add
add
jmp
mov
das
insl
je
dec
enter
sub
ret
in
lods
pop
mov
jg
ljmp
mov
and
jnp
notb
enter
pop
rcrb
ljmp
insl
lods
mov
sub
mov
or
enter
mov
fcompl
call
jecxz
and
stos
pop
mov
aaa
ss
sub
fucomip
mov
mov
call
pop
hlt
inc
inc
jae
push
loope
mov
sub
jno
jmp
scas
cmc
stos
mov
xchg
test
into
inc
mov
xlat
inc
hlt
inc
ficoml
or
stc
jmp
fcoms
lock
mov
or
adc
cmpsb
push
jb
fs
cli
jmp
mov
js
xchg
pop
dec
hlt
xchg
fnsave
push
xchg
push
push
sar
mov
mov
mov
or
push
inc
rcrl
movsl
sub
pop
mov
push
arpl
and
fadds
fadds
aas
shrl
adc
mov
in
cld
fnstsw
pop
js
lea
xor
and
sbb
dec
fld1
sub
sub
push
pop
or
imul
sub
ja
cmp
xchg
mov
pop
inc
or
jecxz
sbb
adc
int
or
test
mov
gs
cld
xor
popa
in
xorb
in
add
add
decl
mov
outsb
jmp
stos
je
les
addr16
std
into
pop
loope
cld
decl
das
nop
stos
adc
inc
xor
out
add
pop
ss
dec
and
and
rcll
repz
lret
adc
cltd
dec
inc
bound
fsubrp
lcall
andb
mov
or
paddusb
adc
xchg
ret
test
mov
xlat
repnz
adc
sbb
add
cmp
dec
fstpl
ljmp
mov
lahf
rcl
add
mov
xlat
xchg
sub
pop
decl
decb
cli
inc
jp
aas
pushf
add
fimuls
movb
add
rcr
loop
es
popf
sub
imulb
dec
jno
xor
sub
jmp
xlat
in
pop
xchg
inc
pop
in
les
mov
or
cmpl
pop
hlt
jmp
ficompl
addr16
int3
pop
xor
addr16
mov
lcall
dec
cli
mov
in
sub
into
lock
add
or
add
inc
out
or
pushl
add
xchg
aam
into
cmpsb
in
call
dec
mov
adc
mov
fwait
mov
or
fildll
inc
jns
sbb
dec
pop
lds
fisttps
js
out
cli
fbld
jp
cmp
sbb
mov
pushl
mov
mov
in
jae
mov
test
mov
mov
or
rol
repnz
das
mov
jp
pop
out
xchg
gs
add
jmp
lahf
cmpsb
mov
xchg
sbb
mov
mov
in
pop
iret
sub
loope
stos
cmp
dec
out
daa
sub
sub
insl
decl
rolb
ds
scas
popf
stc
jnp
push
pop
jle
xor
inc
adc
jl
pop
lret
sbb
das
add
jg
jge
imull
scas
stc
pop
or
jmp
iret
push
in
addl
pop
pop
outsb
jae
push
jno
decl
incb
jmp
pop
andb
repz
push
adc
xchg
dec
xchg
hlt
dec
and
or
sbb
dec
push
mov
add
pushf
cmp
jnp
call
std
call
movsb
cmp
jb
fidivl
ret
int
xor
push
push
xchg
xchg
fnstenv
add
xchg
subb
sbbb
push
jg
js
pop
add
cmp
mov
inc
or
sbb
or
push
into
fisubl
xchg
cwtl
sbb
enter
out
mov
fldl
sub
ret
xchg
xlat
push
sbb
jp
int3
shlb
push
pop
stos
lea
mov
add
sbb
ljmp
push
call
dec
jnp
aad
dec
gs
or
mov
mov
add
jmp
jbe
and
repz
lock
xchg
bound
sub
popa
adc
add
adcb
jmp
inc
test
jo
repnz
mov
mov
sub
mov
pop
add
std
call
mov
push
ret
daa
jmp
push
les
ret
imul
cmpsb
xchg
xor
mov
pop
adc
aad
sar
jmp
mov
xchg
mov
jne
pusha
jo
repz
inc
movsb
jnp
ja
std
pop
sbb
jge
daa
in
mov
add
sbb
and
jne
cli
cli
imul
test
call
enter
push
inc
inc
mov
mov
xor
in
out
mov
sub
les
outsb
inc
mov
mov
int3
inc
fwait
mov
int
call
outsl
dec
rep
sub
push
iret
lcall
or
cmpsl
insl
push
stc
pop
inc
push
clc
jmp
mov
mov
mov
incl
stos
pop
mov
fwait
popa
cs
mov
mov
xchg
mov
pop
nop
add
insl
push
xor
lcall
cmc
jg,pn
jge
fistpl
add
pop
mov
lcall
and
mov
aaa
sbb
add
dec
enter
mov
sar
xor
jmp
cwtl
xchg
cmp
imul
mov
ret
xor
incl
aad
mov
scas
inc
stos
mov
xchg
pop
fbld
xor
xchg
or
dec
enter
cmp
and
mov
push
in
das
xchg
sbb
daa
aaa
inc
in
loopne
xlat
mov
jb
je
test
jge
stos
sub
cmpsl
decl
sub
outsb
arpl
pop
bound
outsl
outsl
rcl
add
adc
fmulp
lahf
mov
cmp
and
sub
bound
mov
ljmp
fists
sub
movsl
push
sti
mov
inc
pop
lret
inc
fsubrl
xchg
jmp
dec
insl
sbb
cltd
adc
mov
daa
js
sub
pop
pop
repnz
fadd
movsl
nop
jg
popf
and
out
incl
notl
scas
adc
pop
fnstenv
das
xor
pop
out
jge
sub
pop
shl
fidivs
adc
jns
in
mov
dec
sbb
jmp
mov
sub
lcall
add
orb
fbld
test
sbb
and
inc
inc
inc
cmp
incl
jle
pop
xchg
sahf
aaa
jo
mov
xor
or
or
movsb
xlat
ficompl
pop
xchg
mov
push
inc
outsl
add
clc
cmp
out
mov
pop
arpl
xchg
adc
repnz
pop
sbb
dec
and
fldcw
dec
xor
jecxz
push
pusha
jmp
or
dec
dec
sub
and
xchg
mov
mov
popf
into
lret
sbb
jae
mov
cli
inc
in
in
inc
les
dec
gs
fwait
in
mov
push
loope
xchg
jo
cld
sub
nop
scas
mov
call
pushf
xor
cmpsl
mov
mov
push
push
mov
paddw
out
pop
jnp
mov
in
add
xchg
pop
dec
cs
lcall
loop
pop
test
dec
sbb
movsl
fcomp
mov
pop
or
push
incl
out
mov
xchg
sahf
lcall
out
mov
dec
pop
fxch
cmp
mov
ljmp
xor
mov
stos
fdivrl
sarl
push
cmp
mov
mov
push
aad
jg
dec
out
fiaddl
sub
js
das
test
loope
in
lret
les
mov
ljmp
rorb
sarl
sub
mov
pop
add
pushl
fidivrl
mov
cmpl
cmp
lods
test
jle
pop
neg
dec
fdivl
stc
rolb
dec
push
out
call
jnp
adc
ljmp
lcall
fadds
jns
and
and
jmp
outsl
call
test
aad
loop
pushl
pop
mov
dec
aam
cmp
jl
clc
inc
pusha
addb
or
or
jecxz
xor
jno
dec
movl
adc
decl
dec
cmp
lea
push
jne
pop
and
cmp
js
dec
leave
in
or
idiv
decl
rcll
shrl
push
aad
sub
xor
push
in
pop
mov
ljmp
jo
xchg
daa
loope
fsubrs
jg
mov
pushl
dec
ljmp
ss
jp
pop
das
jg
pop
jle
add
in
dec
lds
jbe
xchg
xchg
int
js
loope
ljmp
std
cltd
ljmp
hlt
inc
add
push
and
outsb
lret
out
int3
fwait
xchg
dec
or
in
inc
xor
add
cmpsl
jnp
pop
loopne
and
cltd
pushf
or
ret
cwtl
loop
xchg
jmp
jnp
movsl
cli
dec
rorb
imul
outsb
ljmpw
mov
call
clc
imul
iret
inc
cmpsb
pop
sbb
sub
clc
call
fcoms
jle
ret
cmp
popf
push
jmp
ljmp
jnp
add
mov
loopne
xchg
int3
and
negb
xchg
inc
jbe
jae
dec
leave
push
mov
cmp
or
jl,pn
mov
je
dec
ficoms
cmp
out
out
jmp
inc
dec
jge
fsubr
repz
inc
loop
daa
mov
pushl
sti
outsb
imul
in
aaa
push
arpl
or
cwtl
jnp
inc
imul
pushf
add
pushl
leave
nop
scas
xor
or
xchg
or
ss
lahf
test
push
sahf
mov
icebp
dec
cltd
fwait
ss
sets
faddp
lods
mov
jg
hlt
stc
sub
test
jl
bound
cltd
mov
notrack
call
jmp
dec
roll
sbbb
fldenv
mov
pushl
fstpl
testl
sub
std
adc
jne
inc
in
push
mov
fwait
mov
shlb
add
lcall
pop
ss
xchg
inc
sbb
movsl
adc
fldenv
movsb
fs
addr16
jecxz
jns
push
bnd
add
inc
out
fs
fdiv
lsl
outsb
mov
pop
inc
cltd
sub
jmp
aad
rol
shll
mov
test
adcb
bound
ljmp
sarl
fwait
and
xor
mov
add
jg
mov
xchg
push
mov
iret
jno
leave
xchg
jl
sub
mov
adc
pusha
call
insl
loopne
mov
push
clc
push
adc
outsb
push
sub
dec
movsl
hlt
dec
adc
adc
fidivs
call
in
js
mov
sbb
hlt
out
popa
fsubs
mull
movb
das
cli
mov
mov
or
stos
aad
mov
popa
adc
and
add
jmp
push
push
push
mov
jns
push
in
and
and
in
push
pushl
sbb
mov
jp
or
mov
dec
pop
rorb
scas
popf
orb
lcall
pop
sar
fisubl
es
mov
cwtl
pop
js
inc
and
clc
sbb
ret
jb
bound
ljmp
mov
dec
mov
jns
adc
push
inc
jl
mov
mov
add
mov
cwtl
imul
das
jns
mov
inc
out
sbb
jmp
inc
dec
je
js
push
dec
cltd
jp
shrb
mov
mov
cmp
mov
jmp
xchg
mov
xor
lds
sbb
pop
mov
sub
call
add
jbe
divl
pop
and
mov
mov
pusha
inc
incl
dec
addr16
shrb
inc
lods
jmp
jb
divl
pop
std
repnz
cli
out
pop
cmpsb
mov
dec
stos
xchg
stos
mov
imul
xchg
add
out
xchg
mov
rcll
cmpsl
add
lcall
stos
aaa
lret
xchg
jl
insb
fsubrl
mov
mov
andb
inc
cwtl
aad
sub
pushl
stos
jp
lahf
push
int
in
lds
inc
mov
push
scas
jecxz
xor
xlat
jg
mov
insb
or
push
mov
jb
jp
decl
pop
pop
rcrl
sbb
lret
sahf
mov
popf
fbld
mov
daa
inc
fldenv
ljmp
mov
push
popa
push
adc
cmp
jno
jne
add
ljmp
xor
dec
cmp
out
out
pusha
sub
jns
ret
mov
cmp
mov
stc
sbbl
jg
fmull
les
ljmp
das
clc
outsb
mov
lcall
data16
jns
hlt
incl
lods
mov
cmp
les
stc
in
jg
add
fists
icebp
pop
test
push
and
pop
pop
insl
test
or
mov
or
shrb
adc
dec
inc
jb
subb
ret
int
xchg
test
lods
lock
decl
or
push
movsl
xchg
insl
push
fiadds
xor
mov
dec
scas
mov
and
adc
iret
stos
aas
daa
jb
fcoml
pusha
or
pop
adc
xchg
jne
mov
ljmp
xchg
mov
imul
mov
negl
and
xchg
call
mov
sti
sbb
sbb
mov
and
repz
push
push
daa
and
mov
push
sub
aaa
inc
std
cmpl
scas
mov
sbb
mov
jmp
xchg
jnp
insb
cmp
out
sub
cmp
fxam
aaa
orl
push
mov
inc
cmp
in
push
fcomip
cmp
pop
loop
add
xor
int3
push
cmp
sbb
fcoml
mov
incl
int3
sub
shrb
mov
add
dec
cmp
dec
cltd
inc
add
mov
call
out
out
cmc
fwait
mov
pop
dec
push
mov
mov
int3
in
mov
stos
pop
rorl
and
pushl
ljmp
insl
fmull
cmp
faddl
insb
adcl
pop
mov
pop
pop
test
lcall
out
stc
test
add
and
call
push
sbb
xchg
movsl
or
pop
jnp
inc
mov
xchg
fs
dec
insl
pusha
sub
fildll
test
call
xchg
fisubs
push
mov
cmc
xlat
xchg
jmp
inc
call
lret
ljmp
mov
mov
push
jae
mov
sahf
sub
dec
fidivs
inc
call
mov
cmpsl
inc
cmc
sbb
inc
in
test
cld
push
jne
fsts
loope
sub
clc
or
ljmp
cld
icebp
jae
stos
lret
out
loopne
push
add
insl
mov
mov
add
mov
call
dec
push
cmp
or
ret
inc
hlt
push
sbb
lret
loopne
mov
int3
dec
dec
aaa
adc
lcall
movsl
js
roll
aas
mov
sbb
pop
cmp
jge
aam
mov
push
pushf
xchg
dec
inc
inc
daa
or
iret
fwait
push
sbbl
ds
in
xor
incl
xor
push
jmpw
adc
adc
jbe
scas
and
call
pop
leave
jb
inc
and
xor
jae
sbb
mov
decl
aam
sub
push
aam
jmp
add
jb
cld
fiadds
testb
mov
negl
mov
mov
call
xchg
outsl
dec
flds
jno
icebp
sahf
sbbl
push
das
dec
repz
lcall
inc
and
addr16
pop
in
jp
jg
add
lock
and
jg
mov
dec
aam
jl
flds
mov
push
in
mov
lret
jbe
mov
sbb
js
out
rcrb
xlat
mov
mov
xchg
cmp
or
cld
xchg
in
add
cmpl
jp
inc
ret
push
repz
scas
das
ret
xor
push
ljmp
ljmp
mov
jg
aaa
data16
mov
ss
dec
or
dec
mov
pushl
cmp
dec
jg
andb
aas
pop
scas
cltd
dec
insb
mov
cmpl
pushl
pushl
add
sub
jnp
jmp
gs
loop
into
dec
pushl
gs
addr16
dec
pop
add
call
cli
insl
or
mov
jmp
ljmp
jnp
scas
push
jecxz
test
push
into
aaa
pop
rolb
add
push
loope
jg
jl
in
jl
fimull
ficoml
repz
cmp
addr16
push
leave
dec
arpl
jb
pop
mov
or
jnp
sbb
pop
and
mov
sbbl
dec
sbb
shlb
and
hlt
dec
inc
pop
imul
outsb
les
lret
and
add
call
mov
or
aas
in
dec
xlat
fwait
pop
lods
jo
fisubs
cmp
out
or
xchg
xchg
ljmp
or
ljmp
cmpsb
int3
mov
push
inc
test
push
xchg
pop
fildl
stc
xchg
shll
scas
clc
fcomip
mov
lret
shlb
jmp
btc
call
insb
cmpsl
mov
or
inc
adc
push
imull
cmpsl
outsl
popa
loope
mov
call
mov
xchg
and
decb
dec
mov
outsl
mov
loopne
ljmp
in
nop
xor
jo
pop
mov
into
pop
sar
pop
mov
in
ss
pop
pop
sarb
nop
pop
stc
outsb
cwtl
lds
loopne
inc
incl
jmp
sbb
xchg
lock
in
out
cmp
test
cmc
call
hlt
sub
fs
out
repz
cltd
jp
mov
jno
decl
fstp
test
aas
cmp
dec
jecxz
mov
insb
mov
jp
cmp
pop
mov
pushl
ja
cld
or
xchg
repz
daa
xchg
add
add
test
outsl
repz
or
call
and
cld
jno
mov
aam
nop
mov
mov
mov
xor
inc
jmp
dec
mov
shl
cmp
or
aas
enter
inc
cli
jp
fsubl
push
jg
pusha
hlt
add
sub
testl
inc
mov
int3
mov
incl
sub
lds
sub
repnz
lock
xchg
cwtl
and
cmp
adc
hlt
inc
pop
mov
mov
mov
mov
push
mov
cmp
inc
rolb
jmp
inc
aam
fildl
sbb
push
dec
mov
dec
fdivrs
and
lret
mov
add
das
or
mov
mov
xchg
cwtl
mov
stc
idiv
ja
call
mov
hlt
sub
pop
movsb
insl
loopne
pop
call
loopne
xor
jmp
pop
nop
xlat
leave
scas
ffreep
movsb
jg
xlat
adc
ficoms
and
mov
add
arpl
push
and
pushl
push
jl
jle
xchg
lahf
sbb
adc
lret
dec
icebp
push
ret
inc
nop
imul
test
xor
mov
xchg
test
push
mov
jmp
mov
call
pusha
and
decb
jno
xchg
mov
call
cmp
mov
or
lods
fmuls
add
std
call
insb
or
ret
adc
xchg
movsl
push
nop
stos
lret
cmp
ds
adc
movsb
call
dec
nop
adc
and
mov
or
leave
scas
mov
xor
insb
sub
ljmp
les
scas
jne
stos
adc
cmpsl
data16
lods
fld
mov
mov
decl
dec
pusha
or
sahf
je
popa
daa
loope
dec
mov
das
pop
jmp
int
in
sbb
xorb
decl
jle
mov
test
test
pslld
add
jmp
add
std
jns
movsl
gs
push
mov
and
scas
nop
sbbl
cmp
mov
ljmp
ljmp
ss
jle
jbe
mov
dec
jl
or
ja
loope
pop
fwait
aad
out
andb
ja
aaa
mov
pushf
pop
push
outsl
push
cli
mov
lea
rcl
stos
scas
push
addr16
stos
xor
mov
add
push
dec
cld
repnz
mov
fstpl
imul
imul
jbe
loope
daa
sub
rorl
or
ljmp
jge
popa
lcall
lods
popa
mov
adcb
movsb
hlt
sbbl
cmp
cld
cmp
jecxz
inc
mov
jmp
shll
sbb
or
mov
dec
fiaddl
stos
repnz
lea
loop
ljmp
or
dec
in
lock
jg
aam
mov
ja
or
clc
incl
lahf
jbe
xor
adc
mov
decl
pop
mov
inc
mov
daa
aaa
dec
add
mov
jbe
aas
mov
scas
adc
inc
push
bound
popf
mov
arpl
fwait
mov
ljmp
sbb
mov
fdivr
loopne
adc
dec
cmp
sbb
add
fucomi
fbstp
mov
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
xor
sub
rolb
loopne
fsubr
aaa
add
add
add
adc
or
scas
add
add
das
inc
mov
jecxz
push
cmpsb
jb
imul
add
add
jo
push
popa
pop
and
jmp
xchg
mov
dec
push
shl
and
bound
js
inc
push
nop
push
and
test
mov
and
add
sub
loope
add
inc
rol
dec
or
adc
test
and
subl
into
add
jo
add
pop
scas
cmp
outsl
decb
lods
adc
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
add
aad
add
sub
rcr
push
ret
mov
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
test
decl
pop
les
rcrb
jecxz
pushf
ret
ja
jg
dec
add
cmp
xor
and
shr
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
dec
mov
add
std
or
lret
adc
sbb
cli
and
mov
fiaddl
jg
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
outsl
pop
xchg
jno
mov
stc
or
incl
loope
inc
repnz
addr16
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
fs
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
jg
popf
mov
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
decl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
outsl
jg
jg
mov
jp
push
out
or
push
sahf
pop
clc
sti
in
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
xchg
outsl
mov
mov
jb
mov
mov
mov
sub
lock
pop
mov
jl
rorl
adc
mov
push
jg
hlt
push
add
stc
loope
mov
sar
andl
push
in
idivb
icebp
testb
mov
pushl
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
mov
mov
dec
adc
push
lock
lods
jp
div
decl
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jmp
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
cmpsl
aaa
or
icebp
aas
std
cli
push
push
push
idiv
sub
inc
scas
inc
mov
jg
je,pn
sub
decl
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
add
ljmp
incb
aas
sti
punpckhbw
cmpsb
adc
mov
cmp
cmpsb
in
fistl
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
pushl
add
lea
jg
gs
std
xorb
jg
jg
addr16
adc
ret
das
pop
pop
pop
shlb
pop
cmc
decl
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
pushl
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
std
jmp
sbb
push
shrl
mov
push
mov
adc
and
sbb
xchg
mov
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
jmp
mov
enter
add
cld
call
js
cmp
scas
ljmp
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
clc
add
enter
popa
in
pop
or
mov
xlat
lcall
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
jmp
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jg
inc
jecxz
sbb
sarl
adc
loopne
sar
push
mov
cld
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
jmp
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
push
sti
or
jno
pop
nop
mov
lcall
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
incl
fsubr
fistps
lds
fidivrl
jg
jg
mov
pop
add
dec
mov
sub
jge
xor
fcomi
icebp
negb
sbb
cld
addl
inc
sbb
mov
lahf
outsl
int3
push
sbb
aas
pop
dec
pop
test
bound
pop
or
aas
mov
xchg
inc
test
in
jge
popa
push
test
jbe
mov
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
inc
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
jle
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
pushl
adc
inc
lds
push
pop
adc
imul
or
inc
lcall
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
dec
sbb
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
adc
jp
clc
insb
test
jle
in
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
cld
int
lcall
fcmovb
inc
adc
incb
lcall
out
pop
or
or
dec
ss
les
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
fisubrl
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
std
push
rorb
jp
dec
add
xlat
mov
jb
jmp
xor
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
testb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
in
xchg
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
lcall
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
cli
and
sti
push
sti
pop
inc
xchg
cltd
pop
adc
push
inc
sub
scas
cmp
int3
pop
iret
and
out
mov
andb
nop
add
add
pop
and
xor
and
push
js
push
jp
xchg
hlt
or
add
fucomp
push
inc
loop
lret
addb
fidivrl
ret
jae
bound
out
xchg
adc
fcmovnbe
aaa
and
jne
jo
imul
mov
jp
ds
add
mov
add
add
in
inc
xor
and
push
xchg
push
inc
adc
add
inc
pop
push
lds
in
inc
shlb
xorl
mov
xchg
sbb
fldl
or
sbb
in
in
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
ret
dec
and
gs
push
mov
mov
aas
sbb
mov
xchg
and
mov
jb
je
into
mov
fisubrl
outsl
or
dec
jne
sbb
stos
pop
inc
fists
and
mov
inc
xchg
outsb
outsb
sub
jae
movsl
ja
push
imul
in
adcb
dec
push
fldt
mov
mov
outsl
insl
insl
sbb
addb
adc
inc
dec
jb
sub
outsb
inc
and
sarb
outsb
dec
or
inc
imul
and
push
fidivs
xchg
jae
jp
lock
arpl
scas
inc
jo
adcl
bound
andb
jo
addr16
loop
fcoms
ds
insb
jne
mov
pop
fadds
test
xor
outsl
ret
imul
add
movsb
divb
add
push
fildl
xchg
inc
inc
mov
push
or
sbb
push
out
or
jne
arpl
addb
test
das
push
jns
cmpb
jae
test
xor
add
mov
push
push
movb
inc
jmp
xor
das
cmp
pusha
sub
lods
sub
sbb
mov
pop
inc
subl
cvtps2pi
and
dec
push
pop
in
xchg
test
mov
jo
push
dec
inc
dec
sbb
vmovaps
stc
mov
xchg
insb
jae
arpl
subb
stos
lret
jg
xchg
movsb
mov
out
and
pop
loopne
test
repnz
push
xor
iret
xor
inc
in
and
roll
pop
clc
shrl
pop
push
add
out
sbb
imul
inc
xchg
push
jne
sti
movsb
test
fcomi
jbe
push
sbb
jl
jnp
inc
dec
jae
enter
jnp
aas
js
xchg
dec
jmp
inc
cmovno
cmp
or
pop
pop
dec
mov
jb
push
push
sub
lret
and
in
jecxz
scas
outsl
xchg
lods
xor
push
push
je
ja
mov
pop
xchg
jg
pop
inc
inc
mov
push
pop
ja
xchg
pusha
inc
mov
cmp
sbb
inc
popa
es
lds
insb
loope
pop
xorl
insb
or
jge
mov
adc
sbb
aam
or
adc
outsl
jns
xchg
mov
dec
push
dec
into
sti
jmp
popa
or
jmp
pop
xlat
mov
or
push
jns
inc
je
push
dec
mov
mov
inc
iret
sti
push
in
mov
sbb
enter
mov
pop
mull
jno
sbb
adc
ret
loope
or
push
es
push
subb
push
pop
and
outsl
pop
or
inc
stos
sbb
xor
loope
xor
rorl
adc
cmp
push
out
push
xor
sbb
les
mov
adc
dec
outsb
pop
inc
sub
pop
mov
jo
gs
in
int
ret
negl
jne
inc
in
inc
out
or
xlat
stos
jno
inc
leave
jo
xor
xor
sbb
int
lea
adc
mov
dec
inc
mov
mov
cmp
imul
cs
rcll
inc
lods
rep
sub
mov
or
add
push
outsl
fsqrt
icebp
cs
dec
sbb
cmp
inc
jbe
test
dec
popa
dec
or
fwait
popa
cmc
jmp
rolb
and
jns
push
scas
sbb
lock
mov
aad
xchg
movsl
addl
add
int3
loopne
sbb
xchg
shlb
sub
arpl
or
jb
fs
add
inc
cmp
insl
cmp
jg
out
xlat
loop
dec
and
inc
mov
inc
mov
mov
adc
push
sbb
sub
out
sbb
ret
jns
cmp
jne
sub
inc
dec
sub
or
loopne
adc
push
mov
outsb
fisttps
insb
cmp
cs
popa
fbld
adc
fs
fs
inc
or
push
xlat
xor
push
outsl
repnz
inc
fsubrs
jb
and
lods
inc
aam
in
inc
push
into
jo
lods
dec
inc
inc
lds
arpl
loope
std
inc
imul
xchg
push
loop
fs
xor
mov
mov
arpl
insb
out
lock
insb
jle
inc
xorl
testl
stos
mov
push
xor
mov
lea
jbe
lea
cmp
pop
adc
leave
jl
popa
pop
add
enter
and
dec
inc
cmp
sbb
insb
xchg
dec
jle
scas
push
loopne
inc
loopne
ret
sar
pop
xor
outsl
sub
push
push
pop
xor
shlb
andb
add
fldenv
outsb
inc
push
push
adc
cmpsl
adc
and
push
pop
sbb
and
je
insl
dec
outsb
dec
adc
movsb
loopne
xchg
sub
fwait
dec
ret
mov
lcall
dec
add
mov
add
mov
xchg
movsb
imul
dec
rcrl
push
xchg
mov
inc
add
add
pop
adc
cmp
mov
loopne
shlb
inc
xchg
pop
outsl
inc
fs
fcomps
mov
bound
jl
adc
jmp
inc
push
push
jb
inc
jae
jo
mov
popa
and
insl
insl
push
and
int3
rolb
test
jne
mov
push
das
imul
or
lock
push
js
rorl
and
dec
daa
test
cmp
testb
pop
push
test
jbe
cmpb
pop
lock
mov
xchg
cs
arpl
mov
aaa
pop
insl
mov
mov
addr16
jo
ret
mov
nop
scas
arpl
lods
jge
sti
aas
imul
xchg
mov
daa
icebp
mov
push
cld
ja
imul
fldt
nop
fsts
ljmp
inc
jno
jmp
sub
call
cli
sub
dec
and
jns
insb
jns
imul
xchg
cld
popa
imul
mov
xor
movsb
dec
cmp
dec
loopne
xchg
hlt
and
jmp
or
leave
add
mov
fs
dec
sub
outsb
pusha
pusha
jno
ja
push
imul
incl
push
mov
xchg
adcb
ret
xchg
dec
adc
std
imul
xorl
or
cmp
mov
xor
cmp
test
add
push
pop
or
sbbl
outsb
aas
adc
pop
sub
sub
das
xor
mov
iret
pop
or
test
inc
outsb
xor
pop
scas
fistl
mov
lods
pusha
shll
dec
popw
imul
into
insb
inc
mov
sub
ret
xchg
jo
pop
aad
xor
or
add
scas
shrl
data16
fs
lods
call
movsl
sbb
call
dec
mov
or
xor
mov
and
loopne
add
add
int
inc
xor
sbb
mov
pop
mov
push
push
inc
out
adc
insb
es
adc
incl
xchg
movsl
sub
fdivrl
js
cmp
or
push
push
clc
xchg
jne
data16
pop
xchg
in
jo
add
fs
out
sub
mov
mov
es
imul
dec
sub
sub
push
xchg
shr
insl
add
add
fldenv
or
test
mov
fcomps
pop
xchg
sbb
repz
xor
fstp
mov
ucomiss
data16
adc
popa
dec
mov
prefetchwt1
mov
push
pop
add
and
xor
inc
pop
dec
xorb
cs
cmpsl
add
mov
add
jb,pn
popa
adc
es
lret
mov
lods
mov
inc
cs
out
insb
mov
push
lock
dec
sub
aam
cmp
jb
push
xlat
out
fmull
mov
add
sbb
or
dec
ljmp
and
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
