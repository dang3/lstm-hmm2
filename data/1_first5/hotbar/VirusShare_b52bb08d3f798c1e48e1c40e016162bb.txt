divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
pop
add
enter
add
mov
punpckhwd
add
adc
bound
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
jno
ds
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
dec
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
push
mov
add
or
cmpsl
enter
and
add
dec
mov
push
or
xor
sbb
outsl
in
mov
lods
push
sbb
add
fdiv
fistpl
fisttpl
or
loopne
ret
add
test
je
cmp
in
jae
add
pop
mov
push
lfs
push
cmp
rolb
insb
lock
aam
cmpsl
sub
add
push
dec
adc
jne
in
pusha
les
xchg
and
rorb
stc
sub
in
ficoms
lock
pop
sub
lcall
popf
call
shll
imul
std
push
xchg
js
in
push
lods
int
jg
hlt
mov
in
inc
inc
mov
fcoml
les
push
mov
pop
jge
jnp
testb
add
push
or
cmp
inc
inc
cltd
inc
lea
dec
push
mov
fs
sahf
cmp
popa
mov
sbb
adc
xchg
int3
push
pop
mov
and
sub
jb
mov
es
mov
xchg
adc
rolb
and
ljmp
jae
xchg
cmp
sti
out
jge
adc
mov
add
and
sbb
add
mov
hlt
sub
push
mov
sbb
pusha
insb
xor
lock
loopne
push
notl
movl
pop
sbb
jle
push
add
xchg
push
sub
pop
mov
jmp
stos
mov
divl
aaa
dec
lock
add
call
pop
lahf
addl
jb
xor
add
cmp
sbb
pop
xchg
gs
shl
jno
push
sub
xchg
sbbl
sbb
push
sbb
jo
push
fdivrl
rolb
push
stc
stc
add
add
and
and
rclb
loope
das
add
addl
in
jl
push
or
enter
or
and
shlb
cmp
push
fwait
je
in
aas
call
xchg
movsl
punpckhdq
mov
mov
push
xchg
push
daa
mov
int3
push
xchg
sbb
jge
or
cmp
pusha
out
fildll
pop
xor
sbb
fnstsw
scas
sbb
push
xchg
loop
filds
sub
pop
test
jne
data16
in
adc
sbb
push
shrb
mov
or
and
xor
inc
dec
movsl
push
sub
adc
jns
inc
rcpps
sbb
repz
nop
and
xchg
out
test
or
mov
adc
adc
xlat
stos
loopne
data16
push
sahf
iret
inc
pop
daa
or
push
sbb
push
xlat
mov
sbb
fcmove
pop
sbb
sarl
adc
loopne
jge
or
push
sti
sahf
cmp
mov
sbb
leave
mov
push
inc
repz
jo
push
fs
add
mov
pop
cmp
and
xchg
decl
mov
cmp
lds
mov
test
hlt
cmpsl
test
cld
mov
mov
out
js
add
lea
or
push
push
push
lock
call
cmp
mov
pop
add
mov
add
and
pusha
pandn
push
mov
mov
add
xor
jae
or
cmp
lahf
data16
cmpsb
pop
jecxz
xchg
mov
rcrb
adc
mov
movsl
cltd
sbb
inc
mov
push
mov
lahf
adc
mov
popa
cmp
mov
pop
pop
push
mov
lcall
mov
lea
mov
dec
cmp
je
or
sbb
push
mov
aaa
je
stos
pop
enter
cmp
cli
mov
adc
insl
lea
xchg
jno,pt
bound
insb
mov
xchg
insb
adc
out
mov
inc
loop
sbb
or
hlt
cmp
mov
or
test
xor
lret
ss
mov
xchg
and
xor
or
lods
lret
out
jp
cmp
xchg
cmc
push
clc
dec
or
stc
or
clc
xchg
and
mov
push
jnp
and
hlt
gs
jg
or
in
xor
or
leave
ret
push
mov
or
fcomps
jbe
fiaddl
shlb
insl
icebp
sbb
mov
push
ljmp
mov
cmp
lock
jne
pop
push
ja
mov
fs
fwait
or
je
sub
dec
pushl
pop
push
or
push
push
adc
add
xor
adc
sbb
test
je
mov
lds
adc
push
push
mov
pop
push
scas
aad
sbbb
loopne
jo
pop
rorl
add
sub
call
stc
scas
cli
mov
test
jne
fs
inc
cmp
jl
jmp
pop
and
cmp
sub
mov
fcmovb
pop
push
pop
jmp
sub
stos
or
cli
jl
pop
mov
pop
ret
mov
icebp
mov
das
lods
sbb
push
cs
push
loop
sbb
lcall
sbb
mov
mov
adc
insb
fmuls
add
jns
clc
sti
pop
add
add
push
dec
push
andl
push
mov
jge
nop
mov
cmp
jl
push
mov
fistps
mov
adc
adc
pop
mov
pop
pop
ret
push
data16
sub
cmp
dec
cmp
jmp
and
push
dec
mov
scas
stc
test
jne
jnp
sub
pop
push
cs
jge
shlb
add
pop
or
cld
in
scas
sub
pop
js
sub
pop
cmp
mov
jge
jecxz
or
cwtl
cmp
je
movb
jle
mov
mov
adc
push
sti
outsl
lock
pop
lea
push
mov
imul
add
jmp
mov
push
push
add
addr16
adc
or
sbb
sbbl
dec
icebp
mov
lea
shl
cmp
push
add
or
mov
or
adc
adc
data16
xchg
push
mov
jge
pop
stc
jne
mov
jmp
xor
in
add
push
popf
pusha
lock
inc
repz
push
ja
lea
mov
lds
decb
pushl
cmp
push
xchg
pop
cvttps2pi
pusha
popaw
fsubl
cmp
add
pop
arpl
adc
or
into
pop
xor
out
add
fcoml
add
cwtl
rcl
mov
lret
adc
push
movsb
mov
or
lock
je
mov
shll
cmpsl
mov
loope
shlb
lret
ss
push
push
mov
add
cmpsb
push
and
pop
mov
mov
loopne
je
test
adc
or
mov
xor
lock
inc
sub
add
loope
mov
add
scas
aaa
ficomps
push
sub
push
mov
ret
pusha
fists
cmp
rorb
jmp
adc
into
je
cmpl
pop
mov
cmp
jne
push
push
imul
jl
pop
jmp
xchg
rorl
pop
aas
ss
adc
xor
mov
pop
push
inc
sub
inc
or
sbb
enter
sarl
xlat
orl
clc
jg
inc
fimuls
aaa
out
ret
movb
or
in
int3
mov
cmpsl
pop
sub
and
xor
lods
adc
cmp
inc
sbb
aaa
or
shlb
adc
ret
outsl
jne
nopl
lcall
add
jb
das
inc
cltd
and
pop
and
sbb
insl
and
and
or
mov
push
test
or
dec
push
push
call
inc
cmp
mov
dec
into
cs
aam
syscall
push
lds
ss
pop
pop
cmpsb
push
inc
sbb
adc
mov
pop
hlt
push
fdivrp
mov
mov
cmp
mov
mov
ss
adc
lods
clc
mov
fiaddl
jge
inc
or
push
or
jae
push
pop
jae
loop
add
clc
sub
sbb
scas
das
push
xchg
lahf
cmp
xor
cmpl
jle
push
outsl
jmp
push
cmp
jmp
mov
mov
ret
mov
xor
shlb
push
out
jp
xor
lea
mov
sub
cmp
nop
mov
inc
dec
ds
xor
add
or
inc
add
or
adc
push
loope
stos
adc
pop
push
rol
jns
ljmp
scas
fimuls
jge
bound
hlt
mov
push
pop
push
or
lock
addl
das
pop
sbb
cmp
ret
push
lds
mov
adc
jge
sarb
repz
cmp
xlat
sahf
and
push
les
xor
dec
adc
add
inc
adc
add
or
mov
mov
push
call
pop
inc
fistpl
jmp
jbe
sbb
clc
lock
and
adc
lea
push
lock
mov
pop
pop
jmp
mov
sbb
jecxz
or
cld
fs
movl
adc
sbb
ret
adc
fstps
jp
stc
test
je
or
std
subl
jno
andb
shlb
movsl
push
xor
inc
fidivrs
pop
sbb
mov
or
mov
push
dec
dec
mov
nop
cmp
or
sbb
mov
inc
and
ret
icebp
cli
sbb
sbb
das
or
shrl
ret
push
push
jl
rsqrtps
mov
cmpsl
mov
mov
sbb
frstpm(287
jae
and
and
aas
sbb
das
pop
loope
mov
add
push
stc
jbe
shrb
push
sub
into
adc
or
ret
cmp
ss
jno
loope
jo
push
adc
pop
ficoms
or
mov
pop
mov
dec
pop
mull
or
push
xchg
add
xor
cmp
ja
cmp
test
adc
lahf
out
outsl
or
je
cmp
popf
cmpl
add
pop
sbb
cmp
mov
push
ficoms
cltd
pop
notl
add
inc
mov
inc
cmp
addb
push
jb
jmp
imul
mov
mov
dec
sbb
adc
outsl
out
outsb
or
sub
add
push
push
jbe
call
cwtl
in
pusha
push
mov
out
cmp
and
jmp
sub
dec
je
sbb
je
sub
test
or
dec
ss
jae
mov
jmp
or
test
cltd
ret
imulb
int
jp
jecxz
pop
jne
aam
or
lock
rolb
pop
mov
or
mov
call
add
mov
scas
adc
or
mov
sub
mov
push
mov
sarl
xchg
xchg
mov
loope
sbbl
std
mov
and
loopne
cld
out
add
add
sub
pushl
js
inc
push
in
sahf
fwait
xor
adc
pop
sti
arpl
jmp
mov
adc
jmp
sti
imul
cmp
je
cmp
and
jmp
inc
dec
shrl
dec
sbb
leave
adc
adc
mov
xor
dec
fstpl
imul
mov
adc
xchg
test
jmp
and
jmp
data16
sbb
mov
mov
repnz
and
cmp
repz
inc
pop
push
repz
loop
mov
scas
mov
fs
push
push
cld
sbb
cld
cmpsb
pop
mov
cs
push
push
pusha
cmpsb
mov
getsec
outsl
dec
adc
iret
in
mov
in
or
clc
push
pushaw
iret
xchg
add
dec
in
repnz
adc
sub
mov
das
dec
decl
inc
push
and
and
push
pop
push
lea
push
cmpl
xchg
xlat
dec
cmp
mov
cmp
inc
pop
cmovno
scas
pop
or
adc
dec
adc
jge
mov
pop
cmp
sbb
push
sti
std
jnp
pop
ja
push
sbb
lea
adc
dec
testb
adc
xchg
jnp
push
call
add
add
imulb
jg
ljmp
cwtl
movl
out
jo
pushf
lret
or
aad
test
mov
sbb
repnz
and
push
mov
rolb
inc
jmp
nop
imul
push
and
nop
sub
sahf
mov
imul
imul
jl
mov
adc
inc
imul
aas
adc
inc
push
sbb
jae
jne
jmp
test
mov
rclb
mov
mov
xor
pop
and
add
xor
mov
imul
out
xor
vpopcntq
in
cmovno
nop
jnp
push
push
push
push
stc
insb
mov
loope
pushf
jp
sahf
ja
fdivrp
push
push
push
xchg
push
lds
mov
lods
mov
jp
sahf
fwait
mov
adc
add
push
pop
xlat
stos
fcoml
daa
lea
je
mov
gs
or
in
lea
in
and
cmpl
add
mov
sbb
clc
push
push
cmp
pusha
rorb
push
ret
mov
xor
xchg
ror
out
push
ljmp
adc
clc
push
xor
call
cmp
mov
pushl
mov
adc
fcmovu
imul
mov
dec
lea
or
rorl
sarb
je
dec
call
lods
pop
sub
cltd
sub
sar
add
bound
in
fldt
lcall
mov
add
mov
dec
mov
pop
add
inc
cmp
cmp
pop
dec
repnz
leave
jae
mov
push
or
leave
inc
pop
or
ret
pop
sub
and
insb
sbbl
push
add
or
rcrl
push
and
push
sub
icebp
xor
cmp
sub
out
fists
inc
js
dec
test
jle
mov
neg
sbb
and
and
xchg
flds
out
fistpll
fs
insl
xchg
mov
xchg
jbe
add
fisubrs
xor
cmp
dec
or
mov
lahf
push
insb
mov
adc
jg
mov
lea
sbb
pusha
icebp
leave
and
test
aas
mov
or
adc
sarl
mov
mov
call
sbb
ljmp
inc
cmp
xor
inc
push
sbb
mov
out
mov
je
push
mov
inc
lock
or
in
or
push
repnz
addb
fdivrp
pop
movsb
ret
and
mov
daa
ds
adc
not
cmp
cmpl
je
cmpl
xchg
jne
adc
dec
je
scas
xchg
cmc
in
int
sbb
cwtl
pop
push
add
fsubrp
sarl
jg
jmp
mov
add
xchg
andl
cmpsl
cmp
leave
rorb
shll
push
jbe
and
push
popa
pop
lds
adc
mov
js
push
push
sbb
sahf
lods
dec
lret
in
sbb
incl
hlt
movb
pushf
or
lock
inc
cmc
mov
fldz
enter
dec
sbb
scas
in
pop
dec
and
mov
ret
dec
inc
mov
mov
push
xor
lds
cmp
je
loopne
xchg
pop
fs
jmp
test
cmp
push
test
inc
pop
loopne
sti
enter
mov
lahf
scas
mov
xor
pusha
mov
sahf
loope
inc
test
and
mov
lea
lea
inc
dec
push
ds
clc
cmp
pop
jbe
pop
fsubrs
adc
cmp
mov
mov
mov
cmp
or
sub
enter
push
and
push
sub
or
out
add
movl
inc
lahf
lret
jb
jl
pop
or
dec
insb
je
fs
cs
inc
inc
enter
jo
mov
add
lea
lods
or
or
dec
xchg
insb
lock
pop
sbb
pop
js
jne
push
cli
xlat
call
xor
jns
fisubs
addb
xor
cli
or
pop
push
cmpsb
xor
repnz
iret
lahf
fwait
jnp
sbb
test
icebp
mov
les
sub
inc
rorl
imul
imulb
cld
inc
pusha
fmull
push
push
push
aam
add
and
pop
add
jno
add
ret
xor
repnz
sbb
leave
lock
or
xchg
mov
or
pop
or
ret
sahf
rol
rcrl
out
ds
rorb
cld
adc
push
push
mov
js
shll
pushf
and
sahf
je
mov
out
arpl
or
arpl
dec
push
add
push
andl
cmpsb
add
dec
sub
test
rcl
sahf
imul
pop
dec
dec
or
sbb
or
es
andb
loope
inc
faddl
js
ret
cmp
in
push
mov
das
adc
or
or
in
inc
push
or
xor
mov
sbb
sbb
addb
adc
pop
mov
repz
je
cmpb
mov
jne
test
je
cwtl
pop
roll
mov
jmp
stc
push
shl
subb
fadds
push
cmp
mov
jmp
adc
pop
cmp
orps
cmpsl
dec
jmp
nop
push
bound
xchg
pop
or
lods
mov
pop
inc
shlb
mov
sub
loopne
push
pusha
push
cmp
inc
push
in
adc
push
xor
push
cmp
outsl
and
sbb
xchg
adc
sub
inc
loopne
pop
sbb
out
jo
out
pop
int
fsub
nop
xorb
and
sbb
mov
das
jp
cwtl
adc
mov
addr16
sti
ljmp
aas
mov
cltd
mov
add
sar
push
fnstenv
push
adc
jl
dec
xchg
aaa
nop
popa
inc
sbb
lock
call
mov
mov
mov
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
aaa
bound
jp
mov
add
jne
mov
push
jbe
adc
jmp
fnsave
aad
pop
insb
cmpsl
int
push
les
jmp
mov
sti
in
dec
testb
pop
push
adc
outsb
mov
fldz
inc
mov
add
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
std
cmp
inc
lcall
add
cli
das
push
jmp
test
aaa
outsb
pusha
jl
icebp
mov
mov
or
xchg
arpl
mov
leave
jle
cmp
lahf
xor
sub
sbb
insl
or
lea
clc
add
sti
fbld
movl
cmp
out
jg
jae
dec
sub
jge
jmp
mov
push
jg
clc
pop
hlt
fildl
pusha
or
add
clc
loopne
xor
xor
mov
fdivrp
mov
dec
sub
mov
mov
pop
add
pop
add
fisubrs
push
out
pop
jl
jmp
rolb
fbstp
cmpb
or
clc
fidivl
jmp
push
inc
xchg
outsb
mov
mov
dec
lods
inc
xchg
sahf
lods
jmp
shr
inc
jne
pop
add
jl
dec
call
iret
dec
mov
aad
xchg
sub
js
cmpsl
xor
lea
push
or
call
aam
push
adc
loopne
pop
xor
mov
adc
test
mov
pop
push
out
dec
ja
lahf
je
je
je
in
dec
int
or
pop
and
jne
push
jmp
sbb
cmpsl
push
out
jle
add
push
push
push
pop
sti
jae
js
adc
pop
addr16
out
aam
mov
or
nop
arpl
jns
int
clc
test
call
mov
sub
cld
gs
mov
mov
dec
push
jne
rcrl
pop
mov
xchg
imul
mov
pushf
loopne
lea
leave
push
adcb
and
sbbb
add
mov
icebp
lea
icebp
ret
std
add
mov
push
mov
adc
adc
pop
or
mov
sub
out
mov
dec
add
push
jb
adc
cmp
cli
sbb
andl
pop
adc
add
imul
ret
push
jg
jg
sbb
orb
insb
and
std
adc
xor
cld
jo
inc
or
mov
add
aam
insb
adc
fs
int3
and
push
push
pop
pop
xchg
jl
add
mov
cmpl
movnti
aaa
les
mov
mov
repz
inc
adc
push
xor
xchg
dec
jb
stos
push
or
add
fbld
arpl
or
inc
or
mov
pusha
sub
jno
scas
shrb
inc
ret
pop
pop
mov
add
mov
add
sbb
push
leave
clc
lods
sub
clc
setb
test
jne
loope
loopne
mov
sarb
dec
sub
sar
xchg
clc
js
fwait
dec
dec
adc
pop
add
pop
mov
add
and
mov
je
sub
jp
inc
xchg
pop
mov
pop
pop
icebp
jg
adc
dec
nop
lock
hlt
mov
test
push
add
imul
lods
sahf
pop
mov
inc
sbb
mulb
and
cmp
popf
xchg
adc
bound
lcall
xor
call
sbb
or
mov
lret
mov
test
xchg
dec
daa
sub
push
fcmovne
adc
in
cs
bsr
add
or
pop
pop
mov
int3
xor
clc
or
and
push
je
testl
push
je
lahf
push
mov
shr
hlt
pop
or
mov
or
sbbl
push
push
mov
add
and
std
xor
dec
movl
pop
leave
push
adc
movl
adc
dec
mov
mov
lock
dec
inc
jl
lods
sbb
xor
ret
sbb
insl
ja
outsl
arpl
and
lods
jo
pushf
enter
and
iret
test
or
push
add
sub
push
pop
push
in
decl
add
ret
test
xor
stos
test
add
call
fsubrs
ret
jne
push
inc
mov
js
sbb
mov
loope
in
or
divb
jmp
gs
arpl
inc
or
jecxz,pn
push
sahf
mov
pop
and
and
gs
in
xchg
sub
push
push
xor
arpl
and
lahf
test
xchg
or
jb
sbb
add
mov
hlt
adc
int3
push
add
ljmp
in
inc
or
repnz
sub
stos
add
adc
adc
and
xchg
lret
dec
sub
in
fdivs
inc
lock
pop
cld
pop
push
int
xor
mov
inc
insl
lcall
dec
sbbl
dec
mov
in
decl
call
sbb
pop
aad
andl
pop
push
pop
dec
mov
lea
rorb
sbb
sub
sub
inc
fcomps
or
xor
xor
add
rorb
bound
movsl
and
sbb
or
fmull
jge
or
add
push
mov
adc
mov
sub
adc
cmp
lds
cmp
jb
push
pop
or
xor
jg
nop
lret
or
push
xchg
xchg
push
xor
aad
or
stos
and
mov
mov
pop
out
mov
push
mov
jne
push
test
push
jnp
lret
pop
mov
mov
mov
icebp
push
pop
pop
insl
pusha
scas
add
push
ja
xchg
cwtl
movsl
mov
cmpsb
jne
stc
shrl
popf
inc
pusha
mov
sbbb
pop
mov
call
lock
nop
add
mov
andl
sbb
stc
sub
push
sub
push
add
lea
and
fadd
aam
call
rorl
fs
jb
inc
or
or
cltd
test
or
fsubp
and
mov
pop
xchg
mov
sub
adc
or
push
add
and
dec
in
daa
add
xorb
jne
fdivl
lock
fadd
xchg
fstpl
es
adc
in
pop
cmpl
cmp
pop
aam
pushf
xor
fsubrp
adc
sbb
xchg
mov
adcb
pop
call
dec
and
mov
test
sbb
arpl
adc
push
mov
adc
scas
fnstenv
sbb
fdivrl
fdivl
adc
dec
mov
bound
pop
fnstcw
or
or
jmp
add
push
fcoms
jb
xor
int3
adc
imul
in
fldcw
dec
push
push
movl
lods
cmpsb
adc
lea
push
ss
add
shrl
xchg
clc
sbb
mov
or
insb
in
pop
mov
sbb
bnd
jns
call
and
popf
fsubrp
jo
dec
push
pop
sub
or
sub
jo
loope
aam
push
lods
lahf
and
jle
mov
and
mov
dec
xor
in
mov
mov
jb
clc
inc
adc
sbbl
sbb
ss
sbb
mov
pop
ja
mov
in
dec
push
xor
aad
pop
push
pop
ja
add
add
je
pop
push
fsubr
push
sbb
sub
sub
xchg
inc
in
add
in
sub
adc
sbb
dec
inc
or
push
lcall
push
andl
mov
das
pop
mov
adc
fsubrs
repnz
jne
add
imulb
or
dec
mov
clc
or
rcrb
out
jno
into
push
lcall
inc
loope
mov
mov
sbb
sub
fiaddl
lret
adc
push
sbb
dec
or
in
je
push
mov
push
fldenv
xchg
sbb
push
rcrb
adc
mov
fldenv
cmpsl
sub
jne
je
xchg
add
mov
dec
and
mov
pop
sbb
iret
std
adc
cwtl
push
mov
in
loope
sub
adcb
mov
and
adc
lods
pusha
push
movsb
sbb
dec
test
adc
cmpsb
addr16
daa
push
cmp
lcall
push
add
cmovbe
and
sbb
loopne
das
test
rcrb
add
xchg
addr16
cltd
and
lea
lods
fimuls
mov
add
sti
or
push
xlat
cmp
mov
ss
xchg
adc
add
repz
mov
dec
leave
adc
mov
push
out
adc
add
and
pushf
xchg
daa
sldt
xchg
cmp
push
cld
xchg
xchg
cmp
out
or
adc
sub
mov
rcrb
imul
sahf
and
sub
dec
pop
mov
jmp
repnz
adc
pop
iret
inc
xor
or
push
and
and
push
push
cld
inc
mov
inc
add
js
scas
jno
add
push
push
sbb
pop
cmp
push
add
or
insb
lcall
jbe
xor
mov
push
mov
or
cld
clc
cld
rolb
cs
addl
cli
je
mov
jmp
xor
mov
int
xor
popf
loope
outsl
addr16
adc
or
movsb
orl
sub
push
or
mov
sub
push
mov
jbe
dec
xor
in
dec
mov
lock
cmp
push
outsl
adc
js
jo
out
xchg
mov
inc
pop
faddl
xor
lcall
pop
push
jmp
imul
inc
nop
int
mov
or
sbb
ljmp
inc
push
fnstsw
cmp
idivl
or
dec
lea
xor
cmp
jle
aas
or
daa
call
sahf
hlt
outsl
jp
cmp
je
ja
jnp
clc
rorb
add
sub
out
sub
lret
sub
add
jle
into
dec
lea
test
jae
jnp
or
bound
sbb
and
push
adc
push
fnsave
orl
and
ret
shll
outsl
int
jnp
outsl
testb
mov
testb
cld
sub
in
mov
mov
les
jae
test
jns
mov
leave
and
inc
dec
or
or
dec
jae
mov
add
fs
mov
inc
xor
cli
add
repnz
scas
or
add
mov
shl
enter
lret
or
or
fidivs
lock
hlt
sti
std
xchg
pop
xor
pop
pop
daa
xchg
sub
bnd
or
ja
pop
ret
sub
movsb
outsb
adc
push
pusha
adc
imul
and
adc
out
mov
or
sbb
int
or
cmp
test
shrb
negb
xor
insb
pop
inc
adc
js
fwait
bound
add
and
cld
push
push
inc
sbb
inc
pop
and
int
or
adc
or
adc
adc
insb
sub
addl
xorb
jg
pop
repnz
je
in
adc
adc
repz
inc
adc
push
addr16
in
push
xchg
or
fildl
xchg
dec
adc
clc
push
sub
cmp
mov
add
inc
add
test
add
sbb
or
mov
cmp
adc
sbb
pop
push
es
lret
pop
cmp
insl
hlt
mov
pop
pop
push
icebp
adc
cmp
or
push
int
or
sbb
fmul
sub
gs
push
push
cli
lret
inc
lret
sbb
push
adc
xchg
xchg
push
lock
and
pop
adc
sub
inc
xchg
in
add
sbb
pop
sbb
and
dec
cmpsb
add
cmp
xor
jecxz
cmpsl
sbb
rorb
pusha
sbb
stc
sub
insl
jnp
imul
mov
add
lea
andl
inc
cmpsb
adc
push
xorl
push
out
xor
movups
lcall
adc
out
jge
inc
adc
sahf
in
lcall
lea
pop
add
lods
shrb
cmp
loop
sub
mov
leave
sub
sub
cmp
sbb
sub
pop
push
push
test
std
mov
fnstsw
jbe
jne
push
fs
data16
adc
sbb
pop
dec
scas
test
mov
and
pop
jb
mov
and
dec
push
jle
sbb
fdivr
or
add
push
cmp
push
dec
lret
xor
int3
cmp
mov
fscale
test
jge
push
or
jbe
adc
jl
movl
push
mov
push
push
orb
push
roll
jge
or
je
mov
jno
cwtl
add
cmc
push
push
jbe
enter
iret
mov
stos
lcall
xor
test
jp
push
js
jns
sbb
push
js
js
xor
imul
and
or
dec
mov
add
xchg
ret
dec
mov
xchg
aam
xchg
inc
dec
xchg
div
and
xor
rcll
cmp
jns
rclb
xchg
mov
add
pop
push
testl
mull
mov
pop
sbb
stc
jp
into
mov
add
cmp
into
mov
test
pop
out
add
nop
mov
sbb
inc
ljmp
test
rolb
sbb
or
test
test
push
stos
and
dec
and
dec
xchg
push
push
jo
out
add
mov
adc
dec
gs
data16
sbb
jmp
pop
push
and
test
cmpsb
xchg
in
push
dec
psubsb
cmpb
and
mov
and
cmovnp
inc
add
dec
jge
pop
in
cltd
pop
push
and
mov
dec
lock
imul
into
testb
popa
cmc
outsl
rsm
xchg
loope
notl
cwtl
ret
or
cwtl
mov
adc
sub
sub
cmc
mov
pop
test
cmp
movsb
sahf
cmpsb
add
sub
inc
fiadds
jmp
popf
mov
dec
xchg
inc
in
jl
inc
in
sbb
mov
pop
ret
xor
sbb
cmp
aam
hlt
and
imul
adc
or
gs
cmp
inc
xadd
hlt
faddp
or
mov
mov
mov
es
add
fs
in
inc
pop
cs
loop
pop
in
filds
hlt
setne
inc
loopne
pop
repz
sti
mov
push
push
and
adc
hlt
jne
mov
notl
push
sbb
push
push
add
push
jno
dec
xor
pop
cmp
adc
xor
pop
rclb
add
push
or
or
push
dec
push
or
cmc
pop
xchg
mov
test
test
xor
xor
pusha
mov
js
and
sub
dec
sbb
movsl
add
inc
add
pop
jmp
jb
jne
push
aas
inc
inc
sahf
push
daa
inc
add
xor
jle
push
sbb
add
mov
push
push
push
xchg
addr16
or
push
push
jmp
push
add
dec
xchg
push
or
mov
fwait
push
sbb
daa
xor
mov
adcl
and
jbe
daa
push
jmp
xchg
pop
dec
or
jmp
or
stos
imul
sahf
loopne
push
je
xor
or
xchg
sbb
and
xor
iret
jae
sub
jmp
jmp
cs
rclb
enter
push
or
and
sbb
add
lret
push
xchg
scas
inc
adc
sub
mov
ss
or
xor
lahf
cmp
push
mov
mov
xlat
jne
mov
pushl
push
add
and
insl
es
test
push
out
test
jbe
stos
hlt
call
mov
ja
xor
insb
repnz
ficomps
scas
xchg
xor
popf
sbb
add
mov
push
cmp
rolb
jmp
mov
mov
mov
pop
into
nop
lret
js
loop
inc
out
push
mov
mov
loope
inc
inc
jle
xor
add
je
push
idivl
int3
push
adc
mov
lahf
push
lcall
dec
or
cld
jo
outsb
loope
dec
test
mov
out
outsb
adc
push
pop
cmp
mov
mov
test
and
push
out
push
cmp
leave
loope
pop
shlb
rol
nop
sub
pop
pop
insb
and
std
test
xor
mov
inc
fcomip
in
or
mov
sti
or
ds
add
sbb
mov
push
mov
push
pop
lods
ja
shlb
inc
ret
stos
dec
push
xrelease
push
push
sub
xor
xchg
test
loopne
xor
mov
cmp
fdivs
vcvttsd2si
cmp
aam
xor
ss
pop
fdivrs
test
xchg
push
aam
stos
call
stc
mov
inc
add
push
inc
adc
dec
popa
add
in
rorb
out
test
sub
mov
add
mov
sahf
sub
std
sub
mov
pop
iret
sub
shlb
mov
adc
jmp
mov
movsl
xadd
leave
ret
push
jmp
mov
mov
and
daa
addr16
sbb
repnz
lods
push
xchg
mov
lret
ja
push
or
addr16
adc
mov
je
cmp
je
lcall
clc
cmp
sti
movsl
hlt
fbstp
push
sub
sub
fcomps
mov
daa
sub
push
add
sub
push
add
cmp
jno
jmp
cmp
dec
hlt
jge
mov
loope
lock
mov
outsb
test
fcomps
cld
nop
cltd
jmp
xor
ljmp
mov
ss
pusha
pop
test
insb
lock
jecxz
and
push
cmp
jg
loope
shr
push
sbb
and
push
jmp
mov
adc
pusha
pop
mov
hlt
mov
adc
and
adc
adc
push
pop
arpl
push
call
movsl
add
pop
rolb
dec
xchg
xor
add
xchg
lock
or
jo
loope
push
nop
mov
inc
adc
cmp
pushl
mov
push
orl
xor
xlat
dec
mov
sbb
ret
mov
lds
iret
xor
mov
mov
sub
adc
clc
adc
xchg
push
jne
popa
clc
xlat
sbb
mov
dec
shlb
sbb
sbb
cli
cmp
sbb
push
mov
mov
mov
xor
mov
add
sub
cmp
push
mov
les
pcmpgtd
sahf
push
sbb
test
sahf
push
adc
jb
push
jp
sbb
pop
push
and
test
enter
sbb
aas
inc
les
push
pop
test
inc
stc
and
push
sbb
mov
pop
add
call
mov
push
cmp
int
mov
js
es
or
insb
cmp
pusha
lock
cmp
push
lea
in
mov
xorb
add
aam
or
test
mov
xchg
repnz
push
stos
push
sbb
arpl
mov
jne
stos
rcr
mov
cmp
dec
ret
add
test
adc
adc
cwtl
cld
or
add
jo
push
jb
int3
sub
je
outsb
or
imul
mov
push
lcall
loop
mov
xchg
or
jne
cltd
cli
adc
sbb
scas
test
or
inc
lahf
les
in
popa
je
inc
cmp
mov
pop
jg
adc
add
add
call
push
cs
pushl
jle
mov
enter
in
insl
subb
or
inc
jne
shrb
je
cmp
mov
ljmp
scas
test
imul
adc
add
pop
inc
xchg
stc
ja
rorb
inc
test
add
xor
mov
inc
inc
je
push
adc
mov
jmp
push
dec
push
dec
in
aam
sub
in
pop
xchg
adc
jne
dec
jne
mov
adc
add
push
sti
adc
bound
jae
std
jge
mov
pop
mov
sbb
push
aas
cmp
loop
push
mov
xchg
inc
ret
je
popf
sahf
movsb
push
or
movb
and
cmp
push
adc
mov
jno
cmpsb
pop
leave
sbb
inc
cmp
insl
sub
sbb
or
sbb
hlt
shrb
push
aaa
nop
test
orb
nop
outsb
mov
test
mov
xorb
push
mov
popa
hlt
lock
inc
cmp
xchg
sbb
xor
insl
push
int
jns
mov
call
dec
add
in
xchg
pop
or
and
add
outsl
out
mov
push
jle
dec
lcall
cmp
fldl
jne
or
nop
mov
jmp
mov
add
adc
adc
mov
es
xchg
leave
repz
sahf
inc
add
dec
sbb
ret
jb
add
inc
mov
mov
lods
or
adc
adc
loope
xor
pop
jno
lods
in
ret
shlb
pop
cmc
jmp
stc
mov
mov
popa
call
jne
call
imul
rsm
jmp
cmp
dec
or
rorl
push
shrb
lcall
fs
aam
mov
mov
push
push
rorb
inc
and
jmp
jl
adc
scas
dec
int3
pop
push
jns
outsl
ja
sub
aaa
or
push
gs
add
pop
in
cmp
adc
pushf
mov
mov
and
push
xor
dec
mov
sahf
add
or
ss
pause
sbb
fnstenv
add
mov
adc
jle
dec
out
pop
pop
xlat
outsl
ds
call
fldl
shlb
xchg
xor
adc
add
jne
mov
add
fwait
and
mov
ljmp
pop
dec
xchg
sbb
loopne
fimuls
loopne
push
mov
and
jl
adc
push
push
jo
push
dec
adc
mov
and
or
loopne
mov
inc
subb
shr
rcrl
movsb
add
pop
pop
sbb
xchg
add
xor
sub
cltd
mov
xchg
or
lea
sub
scas
or
stos
and
aas
dec
mov
sbb
xor
cmpl
loope
mov
in
push
enter
es
add
repz
es
mov
rcrl
cld
lret
loopne
fldl
pusha
adc
sbb
imul
rcpps
or
or
fisubrs
or
fmuls
mov
inc
inc
dec
and
out
pop
add
call
in
pushf
mov
shrb
movsb
les
fcoml
movsl
fdiv
or
in
pop
and
stos
add
pop
inc
jecxz
add
pop
jmp
pop
sar
jmp
add
orl
jmp
mov
mov
jb
in
inc
push
jae
addr16
sahf
pop
addr16
push
push
xor
shlb
hlt
clc
xchg
add
nop
ss
cld
lahf
dec
push
and
push
outsl
sbb
cmp
and
ja
adc
test
gs
adc
or
sub
je
xor
push
jmp
mov
sub
jne
xor
push
xchg
inc
sub
push
cld
cld
call
jge
push
lock
pop
or
test
add
ds
clc
mov
push
mov
push
jbe
push
xchg
jle
and
lea
push
lock
aas
mov
pop
cld
sub
mov
imul
push
push
stos
jo
fimuls
ficompl
lock
call
push
xor
cmp
loop
or
hlt
shr
adc
or
add
imull
icebp
add
iret
push
push
add
push
fcoml
xlat
mov
fstps
dec
jp
mov
add
push
xor
je
or
push
mov
lods
shrl
outsb
jp
inc
jo
enter
dec
add
dec
xor
es
push
dec
add
xchg
jle
push
mov
push
or
sub
or
inc
xchg
push
shlb
xchg
lcall
or
arpl
cmp
lods
cmpsb
push
test
test
sub
lods
movsl
add
xchg
add
dec
pop
add
push
lcall
arpl
es
push
shlb
cmp
je
sbb
push
inc
cmp
push
ret
pusha
movzwl
aad
cmp
xchg
push
dec
mov
into
pop
and
mov
jp
mov
ss
jle
jbe
adc
push
mov
push
movsb
sub
je
jnp
outsl
sub
mov
push
lods
nop
fiadds
dec
in
popf
movsl
incl
sbb
add
popa
sub
imul
push
test
jbe
add
mov
or
inc
add
adc
inc
inc
or
mov
mov
cmp
je
push
lea
nop
adc
cld
push
sbb
xchg
outsb
mov
arpl
cmp
sub
push
sbb
mov
cli
sbbb
lock
xor
sub
sarb
mov
es
or
xlat
push
shrb
aas
push
adc
mov
sub
sarb
and
push
add
bound
or
clc
add
hlt
push
in
inc
adcl
cmc
shr
jbe
push
mov
neg
push
add
and
pop
es
mov
scas
jl
mov
push
je
sbb
dec
xor
mull
test
ja
jbe
mov
push
push
xor
push
push
cmp
push
lock
je
fcmovbe
push
push
xchg
push
or
add
fiadds
and
je
push
mov
sbb
cmp
je
pop
dec
ficoml
aas
es
int3
sub
pusha
pop
dec
std
push
mov
dec
jb
shr
testl
adc
push
mov
dec
jl
jns
int3
testb
loopne
mov
ret
aad
in
imul
cli
loopne
mov
rorb
inc
xor
gs
int3
stos
dec
decb
jnp
shlb
push
add
dec
jne
and
shlb
into
test
arpl
jne,pt
mov
ret
pop
or
and
sbb
inc
jo
js
adc
dec
cld
push
cmp
adc
ret
add
jb
pop
xchg
push
cmpsl
pusha
cmp
nop
inc
sbb
xor
jle
dec
push
pop
aad
and
pusha
jo
jb,pn
js
lea
loope
ja
in
cmp
je
cmp
je
cmp
jne
add
mov
mov
cmc
je
test
push
add
call
outsb
or
pop
and
ret
outsl
outsb
daa
clc
or
mov
cmp
xor
adc
mov
jns
dec
xchg
push
jo
xor
or
mov
into
add
or
add
xor
pop
dec
lea
cmp
jne
xchg
adc
add
fisttps
out
jl
cmc
push
xchg
mov
mov
or
pusha
xor
sub
add
stos
cld
subb
sub
jo
xor
cld
add
arpl
adc
pop
aam
leave
loopne
or
add
add
aaa
adc
sbb
cmpb
or
ja
daa
dec
mov
xor
inc
aaa
add
xor
push
ret
shrl
lcall
push
add
add
push
pop
push
sbb
fcmove
cmpsb
xchg
or
push
inc
adc
addl
stos
std
mov
add
or
jmp
jge
cmpsb
in
xor
xchg
mov
mov
cmp
add
mov
cmp
xchg
pop
je
cmp
jne
mov
sbb
add
repz
jp
dec
inc
lock
mov
pop
dec
xor
test
fildl
movsb
jne
jmp
testb
lcall
jl
inc
sbb
cli
cmp
jbe
cmpsl
aam
add
cmp
fs
dec
inc
jmp
inc
and
cmpsb
push
pop
rorb
xor
pop
mov
mov
pusha
sub
ret
inc
push
and
test
push
clc
clc
aaa
fwait
inc
lahf
loope
cmp
cmp
je
mov
lea
or
cmpb
jl
lret
pop
in
inc
xor
jle
mov
inc
cmpl
cmp
testb
cmp
push
loope
jno
pop
adc
je
sub
inc
fdivl
cmp
or
ja
shrb
enter
push
popa
test
stos
cmp
cmp
push
jno
loopne
mov
ds
outsl
lret
sub
popa
loop
jne
cmp
push
jno
push
test
mov
add
sbb
rorb
mov
pushw
mov
push
lret
aaa
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
jmp
iret
lock
sti
and
mov
hlt
add
outsl
inc
adc
jns
test
jne
xor
imul
sub
lods
rclb
dec
or
add
pop
jae
mov
sti
cmp
dec
shlb
cld
jbe
xchg
fsubs
lea
cld
daa
add
inc
fidivl
inc
mov
outsb
xor
push
cmc
shl
jnp
add
cmp
jg
or
jge
out
testb
sub
jle
mov
jle
sub
and
pop
cmp
jl
pop
jle
pusha
mov
pop
imul
or
sar
jp
jb
jbe
mov
test
iret
out
add
fwait
and
or
je,pn
test
jne
loopne
iret
lds
and
xchg
jae
adc
sub
dec
cli
inc
jg
jae
movb
inc
mov
push
sub
push
sbb
add
sarb
xchg
inc
sub
mov
ficomps
inc
and
je
adc
fsubrs
inc
outsl
push
mov
push
mov
mov
jp
inc
es
and
add
stos
test
dec
fwait
jp
insb
add
push
jmp
push
jmp
xchg
push
add
icebp
sti
mov
nop
and
and
sbb
push
adc
scas
dec
mov
mov
pusha
shlb
inc
cmpb
mov
in
adc
pusha
sub
xchg
adc
push
mov
fldt
sub
mov
xor
fsub
cmpsb
roll
and
lea
sub
orl
pop
add
pop
jb
mov
pop
fiaddl
cmp
mov
push
push
mov
loopne
xchg
out
lret
inc
das
mov
or
xchg
lods
cmp
int3
cmp
pop
lock
insl
inc
mov
incl
frstor
mov
cmp
push
cmpsb
fldt
lahf
push
inc
and
jae
js
xchg
xor
getsec
and
cmp
je
test
adc
xchg
popa
icebp
das
jbe
fsts
sti
mov
add
jp
or
pop
add
xor
add
xchg
in
and
mov
add
xor
stos
movb
add
xor
pop
mov
push
push
adc
inc
or
add
inc
inc
ja
into
dec
sub
es
jl
add
push
add
cmp
add
add
sbb
push
mov
pop
roll
or
push
cmp
push
cmp
lock
shll
ret
popa
hlt
sub
pop
add
inc
xchg
pop
adc
scas
xchg
aam
pusha
and
sarl
mov
xor
loop
cmp
sub
sub
sti
pusha
jb
xor
mov
icebp
jo
push
or
dec
enter
adc
mov
xchg
push
inc
push
cltd
jmp
pushl
pushf
outsb
shrb
cltd
add
dec
mov
loopne
cli
add
push
aaa
and
inc
call
cmp
mov
sbb
jb
mov
mov
lahf
jne
push
jb
cwtl
addl
xchg
xchg
loope
sbb
jbe
xor
or
jne
xchg
or
popa
iret
push
leave
mov
cmp
or
inc
xchg
lds
xor
and
mov
stos
test
and
pop
test
mov
jnp
jle
setne
inc
daa
mov
rorb
aam
mov
sub
xor
loope
aam
xchg
in
mov
xor
loop
sbb
or
pop
xorl
shlb
cmp
pop
out
and
jne
filds
cwtl
inc
adc
cmpsb
jne
cmp
je
lods
cmp
jnp
push
movl
add
bound
pop
clc
nop
enter
sti
dec
adc
add
cmp
cmpl
add
push
cmpsb
mov
shll
or
xchg
sbb
jmp
cmp
lds
jmp
cmp
inc
mov
adc
mov
inc
inc
inc
xchg
in
loope
jge
pop
and
mov
sbb
pusha
jo
sbb
mov
push
lcall
iret
adc
insb
in
lock
aam
fsubr
cmp
in
test
mov
in
rorb
push
je
push
and
mov
in
push
call
xor
jbe
arpl
sbb
incb
lock
aaa
jae
jmp
pop
inc
cmp
je
lea
cmpb
mov
fbld
adc
je
or
jne
push
loopne
inc
faddl
jmp
cmp
mov
mov
inc
incl
fnstcw
mov
outsl
andl
insb
test
jb
mov
xchg
sub
in
jb
jge
cmp
dec
lret
xor
jo
and
or
ja
jae
fidivrl
andb
test
add
mov
sahf
ret
jns
sbb
lahf
jbe
das
ret
loop
nop
jmp
inc
push
sbb
jge
in
adc
pop
sbb
dec
push
loope
ret
fnsave
pop
loopne
xchg
insb
cmp
orl
adc
add
int
mov
push
cmp
movsl
jne
loop
push
inc
iret
test
rclb
dec
mov
xchg
mov
xor
test
mov
cmp
rorb
or
mov
lret
and
mov
fsts
incb
lret
push
push
push
sbb
push
xor
xchg
lock
push
push
jo
sub
push
das
mov
rclb
adc
dec
rclb
pop
ja
jmp
inc
cmp
jbe
repnz
add
ja
and
fmull
fadds
mov
sub
pop
cs
sub
xor
xchg
lret
in
cmp
cmp
mov
adc
adc
mov
push
cmc
jnp
dec
lea
outsb
push
mov
in
inc
and
add
in
add
dec
and
shl
outsl
scas
add
inc
mov
add
push
xchg
std
aam
sbb
or
mov
push
inc
js
sbb
xchg
loop
pop
ret
in
push
mov
push
push
push
gs
cmp
or
lcall
popf
xchg
sahf
insl
imul
pusha
mov
ffree
insb
imul
ljmp
or
sub
adc
xor
in
dec
loopne
aaa
outsl
sbb
add
pop
inc
dec
movl
mov
sbb
sub
push
push
loopne
mov
add
or
inc
int
jl
cmp
movb
hlt
mov
cmp
faddp
fs
mov
sbb
or
add
rcrb
lcall
rcll
dec
xor
jmp
pushl
ds
push
loopne
in
sub
cld
aam
xor
shrb
test
repnz
cli
int
fadds
add
add
push
lcall
hlt
cmp
jp
or
and
push
cmpl
push
loopne
adc
inc
jl
adc
fucomi
ud0
add
mov
decb
mov
lea
mov
push
add
je
pusha
lods
ret
addr16
pop
jmp
fnstsw
orb
add
je
in
inc
insl
cmp
divb
or
pusha
enter
daa
push
xchg
rclb
fidivl
fsub
in
in
add
cmp
jo
push
lret
push
cli
mov
out
sbb
sbb
into
sbb
xchg
mov
hlt
cmp
dec
xor
jle
push
mov
lret
push
cmp
adc
pop
sbb
data16
sub
clc
idiv
push
adc
xor
adcl
shlb
jns
add
enter
xchg
divb
or
bound
pop
push
sbb
call
inc
pop
add
cmp
fcompl
or
ret
movsl
mov
dec
cwtl
lea
in
pushf
and
or
add
addr16
sub
imul
rcr
nop
addr16
or
loopne
cwtl
or
jl
xchg
pop
xorl
imul
xchg
or
or
cltd
inc
push
sahf
out
cmp
pop
or
cmp
lock
scas
dec
cld
mov
sbb
adc
sub
stos
push
jbe
jno
sub
pop
or
sbb
jae
pusha
sbb
sbb
inc
rcrb
jmp
call
pop
mov
mov
or
repz
or
inc
out
dec
mov
add
push
adc
dec
aad
lods
mov
add
push
xor
cmp
dec
lahf
or
or
aaa
add
sahf
cli
ja
add
inc
mov
sti
sub
add
mov
sbb
xor
push
pop
sti
and
std
pusha
mov
dec
in
enter
and
aas
push
push
mov
mov
jbe
jo
add
in
adc
xchg
push
adc
push
rorb
cmp
bound
xor
cmpsl
push
mov
sti
adc
or
or
and
popf
ss
pop
sti
pop
mov
add
and
shrl
sub
lock
movsl
add
out
stos
xchg
pop
shrb
inc
nop
out
stc
cmpsl
pop
push
pop
cmp
pop
or
and
inc
inc
or
jns
mov
push
lock
dec
cmp
mov
cmp
jecxz
add
push
ffreep
jecxz
or
icebp
into
mov
aaa
push
dec
jge
std
xor
ret
or
xor
popa
sbbl
push
std
inc
add
fcmovnb
mov
and
and
add
pop
add
lea
sub
push
xchg
xor
cmp
andl
insl
popf
sbb
icebp
pop
cmp
sbb
stc
sbb
cmpsl
scas
int3
cli
mov
fistps
add
mov
imulb
xchg
xchg
stos
mov
orl
movsl
mov
jmp
mov
inc
cwtl
push
push
push
add
xor
push
inc
addr16
add
mov
cmp
jecxz
sub
int3
jecxz
sub
inc
adc
or
fsubs
jo
sub
fdiv
add
aaa
je
lea
cmp
js
add
push
and
jmp
pop
dec
inc
push
insl
inc
push
mov
push
or
imull
ds
rorb
xchg
jae
push
xor
jecxz
pop
mov
mov
das
test
xor
inc
xchg
push
test
pop
cmp
pop
pop
je
shl
mov
or
daa
test
and
push
mov
out
mov
enter
push
leave
or
mov
pop
cmp
inc
stos
xchg
xor
clc
insb
call
rorl
or
out
push
jo
movsl
and
xchg
subl
jno
dec
adc
pop
mov
inc
cwtl
mov
sbb
roll
test
mov
popf
das
adc
popa
fnsave
std
or
test
push
and
sub
lret
or
pop
add
push
test
test
test
jmp
and
lock
or
or
sub
pusha
xor
mov
loopne
bound
jecxz
popa
pusha
sub
sub
sahf
push
sub
or
lods
add
jmp
inc
data16
or
xchg
cld
data16
cmpsl
inc
pop
lahf
and
pop
das
lcall
pop
lea
test
pop
inc
xor
and
push
push
pop
pushl
mov
add
rcrb
or
mov
or
enter
rsm
xchg
jb
push
shlb
test
ja
adc
adc
xchg
std
add
call
ds
inc
aam
loop
sub
je
mov
sub
pop
mov
adc
inc
sub
push
adc
cmpsl
aas
adc
icebp
cmp
and
daa
fistl
inc
adc
push
adc
incb
cmc
pop
dec
or
mov
mov
mov
pop
push
jnp
int
rorl
push
jge
push
icebp
mov
pop
loope
stos
inc
js
push
add
inc
das
stos
aam
jno
or
add
xchg
imul
mov
mov
sbb
mov
out
loop
jge
add
ret
mov
gs
lret
sbb
push
fcomps
sti
sbb
fidivl
sbb
jb
mov
inc
xor
or
or
sub
adc
mov
out
jge
push
dec
pusha
lds
jo
cmpsb
adc
cmc
pop
lock
repz
sbb
pop
test
jmp
push
xchg
int
sbb
sub
push
in
sub
sbb
fistpl
shll
pop
dec
aad
push
movsb
sbbb
push
shll
testb
and
mov
int
cmp
or
fsubrs
nop
inc
cmpsb
push
push
and
mov
xchg
add
adc
andl
sbb
loope
leave
dec
ret
adc
jne
out
jmp
cs
xor
inc
pop
push
dec
mov
xor
rolb
mov
lea
or
rcrl
pop
push
inc
inc
pop
sbb
xor
push
ret
push
dec
and
jo
hlt
fldl
sbb
xchg
cmpsl
lcall
dec
mov
or
pusha
and
test
rolb
and
ljmp
insl
lret
add
xchg
cmp
jmp
ret
popf
xchg
sub
mov
and
jo
push
shll
push
ljmp
dec
xchg
stos
and
hlt
adc
and
daa
jne
je
sbb
adc
xchg
jo
es
sbb
fcoms
jmp
add
loopne
or
xor
ss
sub
dec
or
stos
fs
sub
push
or
mov
adc
mov
or
cwtl
pusha
movsb
and
repz
xor
adc
mov
xchg
xchg
jae
push
mov
sbb
in
cmpsl
inc
xor
adc
add
mov
mov
shll
incl
inc
add
xchg
add
cmp
je
imul
in
mov
pop
xchg
push
add
js
lock
insl
push
xor
movsb
and
imul
test
pop
dec
dec
cmp
xor
sbb
xor
push
jmp
xor
xlat
mov
dec
push
add
hlt
xchg
sbb
or
inc
mov
add
out
xor
stos
arpl
loope
inc
add
inc
cmp
jne
mov
jmp
in
mov
loop
enter
lock
popf
pusha
movsl
mov
push
push
testl
and
dec
xor
out
add
adcb
cmp
xor
xor
or
and
add
jmp
leave
ret
dec
aaa
ret
hlt
imul
sub
cmp
repz
imul
xor
insl
loope
das
jle
insl
sub
push
push
test
push
fmuls
daa
scas
adc
out
or
cmp
jne
push
ret
xchg
mov
in
outsb
mov
loopne
and
jl
pusha
lods
addl
or
imul
dec
mov
test
sub
dec
mov
mov
cmp
repnz
push
aaa
repnz
xor
jb
sub
pop
addb
mov
lahf
add
and
push
mov
add
les
adc
les
mov
pop
or
in
jge
ds
fisttpl
pushf
add
lret
sbb
ja
lcall
and
jmp
sbb
sub
and
inc
xlat
sbb
in
jecxz
aam
xchg
leave
push
jbe
jae
in
addr16
sub
adc
ror
test
call
loopne
xor
repz
call
adc
push
mov
lds
push
nop
mov
xor
shrb
xchg
fwait
or
inc
out
pop
push
xchg
jmp
pop
repnz
lret
xchg
cmp
xor
pop
inc
cmp
inc
pop
bswap
jbe
ds
xchg
xor
popl
sbb
mov
push
inc
enter
inc
xchg
icebp
pop
jo
dec
cmp
jmp
or
pop
imul
inc
mov
xlat
decl
arpl
mov
or
jmp
sub
push
push
sbb
stc
aad
imul
imul
ss
fsubrs
jo
sub
rclb
es
je
lea
xchg
adc
es
dec
cmpsl
dec
xor
or
xor
aad
testb
cmc
sub
add
int3
loopne
cmp
aam
rcrb
add
mov
stos
xor
sub
cli
xchg
sbb
sbb
xchg
pop
addr16
jo
inc
inc
mov
out
xchg
xchg
add
pusha
cmpsb
jo
add
enter
test
mov
xchg
ret
inc
lock
cmpsb
in
adc
xchg
or
cmp
scas
pop
adc
imul
pop
cmp
jecxz
add
lret
pop
jae
rcl
ret
or
mov
insb
dec
jo
fsub
repnz
call
mov
or
inc
inc
and
xchg
mov
stc
or
pop
movsl
test
rcrl
push
cmp
cwtl
pop
and
mov
pop
addr16
mov
test
int
pop
sub
mov
mov
imul
jmp
xor
sarb
or
bound
push
jle
inc
loopne
mov
and
or
fcoms
adc
stc
mov
stos
jl
add
push
push
add
push
imul
xchg
loope
push
out
jmp
cs
negl
movl
out
add
ret
mov
push
xor
add
lea
push
mov
mov
inc
inc
fbld
ljmp
imul
add
lret
inc
pushf
shlb
jmp
pop
add
pop
and
cmpl
adc
sub
scas
pusha
scas
or
pop
shll
adc
inc
dec
or
xchg
fst
pop
insb
pusha
pushf
lahf
leave
sub
aaa
add
mov
iret
dec
sbb
push
jne
add
loop
rclb
into
or
jl
hlt
ret
dec
repz
mov
adc
enter
mov
mov
push
lcall
cmp
jns
dec
and
jno
jmp
jb
movb
jne
cld
into
shr
ret
lea
movzbl
push
xor
add
push
cld
pushl
xor
push
je
xor
mov
dec
mov
loope
ficomps
add
xor
jmp
xor
pop
iret
or
shrb
jp
push
jmp
push
and
test
jnp
rcrb
mov
movsb
pushl
sbb
testl
repz
push
lea
cmpsb
jo
loope
inc
push
lret
mov
inc
mov
mov
mov
ja
or
cmp
xchg
out
cmpsb
fnsave
sbb
fsubrl
jb
arpl
pop
ret
sbb
stos
jecxz
mov
lcall
mov
mov
push
cmp
test
inc
sti
testl
add
or
add
xchg
mov
cmp
push
push
mov
mov
mov
add
push
jge
iret
out
shlb
cmp
call
mov
inc
in
jge
cmp
jne
push
popa
push
mov
inc
push
fidivl
push
ret
scas
insb
nop
lods
ja
mov
or
adc
jle
jbe
test
rclb
pop
adc
lea
lock
inc
movb
jmp
je
adc
inc
cmp
in
sbb
adc
pusha
mov
into
mov
mov
xchg
jp
cmp
xor
and
inc
popa
sub
pop
divb
or
repz
ljmp
jo
push
ret
repnz
cltd
push
fldl
call
adc
mov
clc
mov
je
cs
dec
in
rolb
fisubrl
or
mov
jle
sahf
mov
lret
hlt
add
sahf
je
test
xchg
sub
xchg
mov
cmp
jbe
cmp
jbe
mov
sbb
xor
mov
roll
into
dec
ret
mov
mov
sti
cwtl
call
enter
add
daa
enter
mov
popf
les
int3
or
lea
mov
mov
enter
cs
rclb
cmove
sbb
mov
and
push
xchg
adc
cmpsb
lea
popl
lea
gs
pop
test
cmp
and
arpl
mov
pop
adc
ds
mov
or
mov
cs
fadds
pop
lods
fistl
or
xchg
bound
sub
add
je
push
xlat
loope
ret
lahf
xchg
xchg
or
push
pop
scas
mov
daa
and
stc
fdivrs
cmp
shlb
lcall
jne
mov
push
and
ret
jl
sbbb
jmp
push
and
mov
out
pusha
jle
jmp
out
leave
jb
roll
mov
cwtl
sbb
insl
or
push
cmp
sbb
stos
or
clc
mov
jl
or
cmpsl
jmp
mov
sub
inc
mov
les
jbe
inc
shll
mov
inc
cmp
jb
pushl
mov
xorb
call
pusha
lea
cmc
jg
flds
cmp
ja
daa
fstps
and
sbb
ds
imul
adc
push
adc
push
inc
push
add
add
mov
sbb
and
sub
or
mov
sbbl
jecxz
mov
sti
imul
lahf
sbb
add
or
jge
mov
inc
jno
mov
mov
pop
mov
xor
mov
inc
loop
mov
test
mov
push
decl
inc
lea
lea
and
cld
mov
sub
lea
and
cmp
xor
or
inc
inc
shrl
add
mov
stc
fmuls
and
out
ror
and
test
cwtl
into
cli
pop
fdivrl
mov
push
mov
sarl
jle
jg
mov
inc
jmp
push
fwait
dec
aam
and
idiv
cmp
push
loop
or
add
push
xor
adc
jnp
push
sbbl
push
sbb
ret
or
fsubs
push
mov
lea
dec
jae
mov
mov
int
movsl
dec
inc
jbe
cmp
stos
push
ret
ret
out
add
push
dec
cmp
clc
cmp
adc
xor
sbb
pop
cmp
jne
pop
imul
fnstcw
jl
adc
mov
cld
test
into
push
and
in
sub
cmp
jb
adc
fs
dec
mov
addr16
dec
jp
movsb
xor
mov
push
stos
outsl
loope
sbb
addb
inc
aaa
cmpsb
outsl
or
mov
or
rol
fbld
aaa
push
inc
fisubrl
and
inc
cwtl
jne
mov
imul
jmp
ljmp
rolb
push
nop
loopne
add
fisubl
addb
mov
adc
sbb
adc
ret
insb
and
jmp
aaa
int3
into
jo
fildl
adc
inc
inc
mov
inc
sahf
movsb
inc
mov
and
xor
and
imul
cmp
cltd
and
mov
jp
jmp
mov
addr16
movsl
sub
lods
jle
clc
jp
xor
or
and
and
out
cs
add
ja
div
outsl
dec
addl
pop
ja
ja
sbb
push
je
add
or
push
and
or
add
daa
add
cmp
pop
mov
or
adc
test
addl
lds
mull
sub
or
ret
pop
lock
jmp
cmp
call
adc
lea
cmp
jge
jne
fwait
stos
enter
mov
packuswb
ret
xor
and
test
aam
test
sbb
adc
pop
xchg
mov
and
ret
adc
cmpsl
arpl
push
adc
mov
nop
sbb
fs
ret
push
sahf
fcompl
push
cmpsl
test
dec
or
inc
clc
dec
push
adc
push
push
idiv
mov
iret
fiadds
aas
les
add
out
mov
sub
fcomps
les
add
or
aas
clc
mov
pop
ljmp
data16
movl
and
addr16
pop
inc
add
pop
and
push
push
stos
mov
dec
xor
mov
fnstenv
pop
inc
push
mov
gs
testb
pop
pop
cli
inc
mov
dec
jecxz
mov
add
fsts
pop
jmp
insl
push
incl
lock
js
into
cmp
je
aas
jle
jbe
push
cld
add
adc
pop
sbb
cmp
cmpsb
push
leave
aam
jnp
pop
push
push
inc
shr
adc
pop
movsb
mov
std
or
mov
adc
push
jmp
pop
call
je
jle
pop
hlt
clc
and
inc
sub
and
sub
xor
mov
mov
js
jb
pop
jmp
fiaddl
xor
rclb
lods
mov
adc
mov
add
ss
rclb
cmp
repz
push
addb
and
xchg
push
mov
adc
insb
xchg
dec
daa
lock
jge
adc
mov
sbb
mov
inc
adc
xorl
aam
ret
mov
push
mov
mov
mov
in
xchg
or
mov
dec
push
enter
adc
mov
ret
shrl
pop
mov
mov
mov
int3
aad
test
pop
jecxz
mov
or
inc
adc
notl
add
lahf
ss
lods
sti
mov
outsl
into
shrb
lock
outsl
and
in
sbb
jmp
aaa
lret
pop
jbe
pop
mov
scas
es
add
adc
test
push
dec
in
shlb
mov
lea
pop
add
pop
add
adcb
scas
mov
cmpsb
xchg
ljmp
push
or
hlt
push
je
and
push
mov
movsb
jmp
push
xor
push
push
mov
and
xor
push
cmpb
xchg
inc
or
pop
pop
mov
adc
repz
mov
js
jne
fistpll
inc
cwtl
jge
add
lea
mov
or
icebp
xlat
mov
lea
adc
push
movb
aam
fdivs
or
adc
pusha
add
adc
push
data16
shlb
ja
pusha
hlt
pop
cmpl
sbb
xlat
jmp
sub
aam
into
insl
cmp
adc
cmp
scas
testb
rorb
adc
iret
fldenv
jle
mov
div
icebp
jle
sbbb
ret
cmp
mov
adc
cmp
adcl
add
ss
jne
inc
sbb
sbb
mov
or
ss
ret
mov
xlat
xor
cmpsl
or
cltd
mov
xor
stc
lret
push
lret
cli
std
mov
test
add
inc
xor
call
stos
mov
mov
jno
push
stos
sub
cmp
rcrb
pop
cmp
jecxz
cli
push
je
mov
notb
mov
cmpsb
loop
sbb
cmp
pop
test
jnp
adc
push
popa
push
mov
sub
js
jne
mov
jmp
ret
mov
push
push
or
inc
add
nop
inc
nop
jecxz
lret
lock
mov
fildl
fadds
jae
inc
fsubrs
add
orb
add
or
or
cmp
ja
or
inc
push
cld
adc
mov
push
xor
dec
shll
clc
add
in
hlt
je
loop
lods
mov
lcall
je
dec
inc
scas
jg
and
pop
or
js
mov
movsl
cmp
orl
movsl
mov
mov
dec
daa
mov
adc
xchg
lods
stc
mov
cmp
jae
lea
jmp
cmpl
cmp
jbe
in
jb
cmpsl
mov
mov
inc
and
clc
sub
lods
ljmp
dec
jmp
sub
mov
movsb
sub
lcall
or
cmpsl
add
push
jo
aaa
push
mov
fs
xchg
scas
push
sbb
fstpl
pop
hlt
push
push
mov
imul
pop
xor
and
adc
adc
push
rcrb
mov
xchg
loope
rolb
popa
and
mov
rcll
push
adc
or
add
xor
nop
cmp
mov
out
fldl
mov
jae
dec
pop
add
add
addb
xchg
nop
cmp
fadds
xchg
mov
pop
add
cwtl
fcomps
or
out
ror
les
pop
add
adc
adc
test
repnz
inc
fcompl
or
mov
jo
cmp
roll
or
dec
adc
mov
dec
loop
lock
pop
inc
hlt
push
pop
es
and
cltd
jne
ja
iret
sbb
sbb
xor
pusha
test
and
pop
loopne
pop
cmc
enter
je
add
add
inc
loopne
aam
daa
stos
xchg
pop
cmp
sbb
in
pop
loopne
in
ret
push
xchg
or
jbe
mov
lret
das
adc
lock
and
push
pop
ja
cs
dec
push
or
adc
or
sub
adc
or
xlat
movsb
push
cmp
mov
not
in
sbb
and
cld
add
and
sbb
xchg
outsb
andl
xor
mov
xchg
mov
add
inc
nop
xchg
sbb
lock
movsb
outsb
cmp
cmpb
addb
mov
cmp
push
push
adc
or
add
and
jne
les
xor
aad
adc
fwait
stos
inc
lret
addr16
sub
pop
arpl
adc
daa
cwtl
lods
sbb
adc
sar
xchg
xor
lods
sub
sbbb
roll
push
sub
fs
and
or
cmpb
xor
pop
clc
xor
inc
adc
pop
sbb
or
mov
fs
jnp
cmp
cmc
xchg
cli
sbb
adc
daa
cli
jmp
cmp
jbe
loop
insl
xchg
orb
dec
dec
dec
clc
jne
mov
fnstenv
push
push
test
cmp
dec
or
add
mov
sub
xor
push
shl
stos
es
mov
dec
or
sbb
xchg
gs
hlt
hlt
ret
enter
inc
pop
pop
and
xchg
or
pop
pop
adc
dec
pusha
push
cmp
or
mov
insb
inc
sbb
fxtract
jne
cs
xor
adc
sbb
pavgb
fnstenv
mov
cmp
mov
ret
repz
add
or
rorb
add
lock
xchg
pop
cld
clc
pushl
cmp
nop
cmp
loope
gs
jmp
and
sub
pushf
lock
mov
cs
jbe
xchg
or
xor
je
mov
rol
xchg
pop
add
cmp
mov
inc
push
mov
adc
iret
je
mov
call
or
lds
cmp
mov
ja
lea
adc
outsb
add
mov
cmp
adc
inc
adc
lea
dec
mov
adc
dec
dec
mov
iret
in
pop
add
jne
sub
cs
jmp
divb
leave
cmp
add
mov
ss
mov
aam
or
in
jbe
push
cmp
adc
jge
add
in
cmpsl
jbe
push
add
ret
ret
movaps
scas
mov
lea
sahf
dec
add
lret
fucomp
xor
aas
imul
mov
out
inc
jne
sub
das
push
jmp
sbb
mov
ljmp
push
mov
loopne
add
dec
jnp
pop
clc
out
jae
adc
lcall
mov
pusha
mov
jp
or
lahf
sub
lret
test
push
dec
sub
scas
mov
add
mov
mov
inc
adc
push
lahf
jp
jmp
movzbl
push
mov
mov
sub
rcr
add
adc
clc
add
xchg
enter
pop
jb
dec
inc
push
xchg
jge
push
pop
or
cmp
mov
cs
push
or
loope
in
mov
mul
seto
lods
test
sub
adc
enter
xchg
ret
ss
adc
push
pop
mov
aad
xchg
or
inc
out
shl
pushf
sahf
mov
fisubs
loop
xor
mov
or
cli
push
jg
aam
mov
lea
mov
scas
dec
lahf
aam
push
xchg
iret
mov
stos
ljmp
add
lret
dec
mov
mov
out
xor
adcl
jg
incb
mov
les
add
add
aaa
icebp
ret
sti
cmpsb
inc
pop
js
pop
sbb
adc
call
daa
or
or
xor
shll
push
lcall
push
pop
xor
push
cmp
mov
pusha
mov
pop
or
pop
sbb
xor
out
scas
and
jmp
and
inc
test
sub
fidivrs
rorb
test
add
add
cmp
or
sbb
test
sbb
cmpb
lods
test
sbb
mov
jg
xor
cmpl
enter
jmp
add
es
and
jmp
jmp
pop
jg
add
mov
sub
or
mov
xchg
xchg
push
je
mov
pop
shrl
sbb
sbbb
insb
icebp
dec
insl
sub
adc
pop
xorl
and
and
and
jmp
imul
xchg
cld
xchg
xor
lock
mov
inc
cmp
jne
add
jae
cmp
sbb
pop
jnp
or
pusha
push
push
mov
clc
and
in
cmpsb
call
mov
or
jb
loop
xor
mov
lahf
add
cmp
push
mov
loopne
and
adc
inc
pop
mov
add
cmp
mov
jp
je
je
loopne
or
lds
jl
aaa
push
adc
lds
mov
mov
sti
std
or
jmp
cmp
sbb
jmp
mov
lock
out
jl
add
add
adc
ret
test
or
or
inc
pusha
shrl
out
add
mov
mov
inc
sbb
int3
sub
fiadds
add
jmp
xchg
push
cmpsl
jp
push
sbb
and
dec
arpl
cmp
or
cmpsb
loopne
inc
sub
mov
and
mov
aas
jnp
mov
test
add
movsb
jecxz
adc
mov
jle
jge
sbb
dec
ljmp
call
jmp
or
cmp
cmp
call
in
jl
cmp
out
mov
mov
push
movsb
or
shl
adc
enter
inc
jl
ds
lcallw
bound
xor
push
pop
clc
add
out
jbe
xor
jno
repnz
add
pusha
shll
or
imul
cmp
sahf
or
add
lea
into
or
imul
icebp
dec
push
or
adc
adc
es
lea
cmp
mov
movl
aaa
and
mov
test
jne
sti
dec
sub
dec
fcompl
push
pushl
xchg
cmc
xchg
in
jo
mov
cltd
cmpsb
push
mov
add
pop
pusha
test
mov
mov
rolb
rorl
sub
sarl
sbb
imul
inc
test
adc
aam
daa
cli
xor
pusha
imul
in
push
lock
into
mov
push
add
dec
movsb
add
adc
mov
jge
mov
fcomps
add
lret
jb
sbb
popf
mov
int
dec
add
movsl
arpl
das
das
mov
pop
or
clc
inc
jmp
lds
add
add
movsl
or
jg
or
xor
sub
stc
into
jp
rolb
ds
in
or
pop
je
dec
adc
push
lods
outsb
pop
lea
lods
mov
enter
das
push
dec
mov
jbe
mov
dec
shlb
adc
push
mov
and
imul
xchg
sbb
xchg
pusha
inc
mov
clc
loope
out
test
mov
cmp
movb
cmp
jae
sub
mov
icebp
adc
or
int3
adc
ljmp
dec
push
push
cmc
xchg
shlb
cmc
push
inc
jmp
inc
nop
or
add
fstpt
add
cwtl
loop
dec
dec
cmp
dec
loope
fiadds
pop
xor
ss
pop
mov
or
sti
mull
pop
or
mov
xor
cmpsl
xor
dec
jg
push
add
xchg
jle
sub
xor
int
cltd
std
xchg
push
add
insb
int3
add
lods
mov
add
push
test
ja
or
adc
cld
pop
insl
enter
outsl
push
sub
cmp
push
xor
aad
and
add
add
sbb
inc
dec
mov
push
sbb
sbb
lea
lret
lds
adc
shrb
aaa
sbb
cmp
bound
sbb
rclb
in
inc
aas
daa
cmp
and
adc
sub
imul
or
andl
sbb
xchg
or
mov
stos
fildl
js
andb
cld
cwtl
inc
sub
xorb
daa
xor
fdivrl
dec
xchg
sub
jp
test
xchg
stos
les
fcoml
push
push
lods
mov
xchg
les
pop
pushl
jmp
inc
add
pushf
jle
out
push
leave
and
call
push
cld
mov
adc
push
dec
push
xor
push
push
out
movb
and
xchg
aas
bnd
mov
fstl
dec
jl
cmp
jne
cmpb
ret
sbb
icebp
mov
jo
push
sub
sbb
and
fwait
adc
stos
inc
mov
std
mov
ja
push
and
andb
xchg
or
movsb
cmpl
pushf
adc
cmpsl
cltd
jo
inc
sbb
mov
dec
cmp
aad
leave
push
rclb
pop
in
pop
cmp
push
cmp
jae
inc
jmp
push
or
sub
mov
and
ret
pop
movsb
pusha
test
inc
xchg
add
pop
dec
fcom
sub
repnz
sahf
sbb
outsb
xchg
add
xchg
inc
into
or
int
divb
and
mov
push
ds
rclb
push
push
jmp
dec
stos
xor
xor
dec
xor
jge
or
inc
and
or
inc
cmp
fsubrp
add
lds
push
dec
xchg
cmp
push
adc
jge
sub
pop
mov
sbb
adc
pop
pop
enter
inc
les
mov
in
or
nop
call
xchg
add
std
arpl
inc
sub
and
leave
or
or
cmp
mov
dec
cmp
cwtl
movsl
ror
jbe
dec
jo
stos
xchg
outsb
add
je
mov
push
lock
adc
je
cli
add
cmpb
push
push
or
or
xor
sbb
cs
addb
xor
and
int
fsubs
mov
push
fadds
add
data16
mov
add
cmp
sub
outsl
mov
or
add
es
push
add
aam
inc
xor
and
and
insl
ficoms
add
mov
jmp
mov
adc
shlb
aam
in
fisttpl
adc
ret
daa
subl
inc
pop
dec
xor
adc
xchg
xchg
aaa
into
orl
push
or
cld
xorl
jecxz
xchg
fsubrl
mov
imul
mov
cmpsb
imul
mov
xchg
icebp
outsb
add
test
in
shrb
insb
jno
push
sbb
inc
xor
jle
lock
sbb
fcomps
mov
pop
lahf
pop
push
jle
xchg
mov
add
stos
test
loop
push
ja
adc
lds
push
push
add
sub
pop
int3
movsb
hlt
sbb
adc
fldl
test
mov
mov
imul
or
les
rolb
add
ljmp
pop
daa
loopne
ljmp
aam
mov
push
add
inc
in
sub
lock
xchg
inc
aam
jns
pop
inc
or
sub
pop
shlb
lock
xor
ss
lock
xor
pop
cmpsb
adc
add
cmp
ret
push
or
add
stc
aam
test
mov
or
xor
fsubl
daa
dec
mov
loopne
inc
lods
cli
or
nop
mov
jge,pn
xor
inc
sar
outsb
push
jg
or
rolb
dec
xor
pop
rcrl
nop
pop
xor
js
jne
push
and
out
out
add
inc
lods
aaa
sbb
inc
lret
sbb
or
adc
and
xchg
cmp
js
jle
push
add
in
arpl
jp
test
cmp
and
inc
aam
or
out
and
inc
ret
adcl
std
pop
sbb
jne
cmp
mov
pop
jns,pn
in
jmp
mov
xchg
repnz
jge
stos
test
or
push
repnz
rcrb
pop
mov
cmp
in
into
pop
jb
add
ja
cltd
enter
out
inc
mov
test
out
push
or
imul
mov
inc
dec
in
cs
dec
mov
inc
sahf
xchg
lret
adc
inc
xor
dec
negl
lock
mov
or
pop
inc
int3
test
add
or
imul
inc
iret
out
push
push
push
je
push
adc
lods
jl
inc
push
and
push
or
outsl
arpl
push
pop
int
xor
stos
movsb
aas
xor
sbb
and
lahf
repnz
fstpl
fwait
xchg
inc
loope
ljmp
pop
xchg
push
clc
add
mov
or
iret
xlat
mov
test
sbb
pushf
xor
mov
push
push
lods
push
sarb
mov
rcll
add
adc
fdivrs
mov
adc
ret
pop
xchg
mov
cmp
xor
jo
add
bound
cltd
daa
push
in
imul
inc
loopne
outsb
les
adc
xchg
lahf
push
pushl
jmp
pop
jmp
or
or
xchg
sbb
jns
ja
adc
jmp
adc
sub
pop
pop
ret
push
mov
test
jnp
bswap
adc
std
loop
hlt
imul
adcb
aas
add
pushf
jg
rcl
pusha
ret
call
bound
inc
or
sti
add
dec
and
pop
xlat
loopne
dec
fsubs
sbbb
xor
mov
jns
fstl
call
add
push
push
inc
cmp
les
push
pop
cmp
lock
dec
test
add
fcoml
loopne
mov
xchg
mov
push
adc
pop
cmp
push
add
cmp
xor
bnd
or
movsb
cmovnp
ret
rclb
push
or
adc
and
sub
sub
call
dec
mov
leave
jns
adc
arpl
cs
data16
or
mov
in
dec
test
je
cmpl
adc
cld
or
inc
and
mov
js
fstpl
or
add
push
fdivs
sub
mov
dec
push
cmp
int
and
sbb
xlat
xor
int3
rclb
xlat
in
std
sub
std
jns
fists
sbb
mov
add
test
es
call
xor
add
sub
xchg
lock
pop
sbb
testb
mov
imul
iret
les
loopne
xor
rorb
jmp
push
push
mov
les
cmpsl
add
inc
jg
pop
adc
lea
jae
adc
jp
pop
stos
jo
test
test
lods
push
std
jnp
outsb
xchg
push
test
add
inc
mov
push
mov
sbb
mov
fsubl
pop
test
sub
lods
mov
push
cmp
cmp
mov
fwait
gs
or
insb
push
insb
fmuls
mov
imul
jmp
jns
inc
add
and
jns
or
fcomps
xor
jg
cmp
rolb
inc
inc
xchg
xor
das
add
sub
jne
shr
mov
sbb
mov
decb
adc
divb
lea
dec
cli
sub
ds
fistl
mov
notl
or
mov
pop
xchg
test
mov
repz
pop
and
insl
xabort
loope
jp
add
adc
jne
mov
xchg
push
inc
xchg
sbbl
mov
add
mov
aad
sbb
dec
jbe
adc
roll
mov
add
mov
or
fldcw
pop
ret
push
fcmovnb
int
inc
push
push
sub
rolb
push
mov
cwtl
dec
push
prefetchnta
or
xor
jle
and
mov
xchg
call
das
mov
push
dec
add
out
xchg
inc
mov
or
xchg
das
pusha
pop
sbb
lods
shrl
xorb
push
ds
dec
adc
inc
push
jmp
test
cmp
sub
leave
es
mov
frstor
adc
call
push
das
add
cmp
jl
push
aaa
xor
loope
shlb
pop
popl
and
add
inc
mov
inc
dec
sub
mov
xor
mov
pop
dec
cld
adc
outsl
cmp
xor
fs
and
xchg
add
aas
sbb
xor
mov
rcrb
aaa
pop
rorb
inc
inc
push
xchg
fisttpll
cmpl
test
lods
dec
movsb
sub
inc
sub
cmp
aas
jne
sbb
loopne
or
or
pop
je
rolb
adc
cmp
xchg
ljmp
push
shll
orl
out
xchg
int
cmpl
adc
int
dec
jl
mov
fnstcw
add
mov
jmp
loopne
jno
push
clc
xor
push
push
ficoms
mov
aam
lds
dec
les
adc
xchg
cmpsb
movsb
inc
add
aas
sub
iret
outsl
imul
xorb
loope
push
daa
ret
fs
dec
cmp
loopne
mov
cli
fnsave
and
push
and
or
mov
and
imul
mov
xlat
and
jmp
cmpb
call
push
and
in
xor
pusha
push
in
cmc
cmp
movsb
ret
loopne
mov
call
into
mov
mov
das
aad
and
dec
test
dec
js
mov
pop
jb
mov
xlat
ljmp
mov
dec
or
mov
mov
dec
adc
cmp
sub
lock
xor
cmp
jb
mov
mov
cli
jo
test
and
jb
and
sbb
xor
push
cmp
dec
loope
inc
mov
je
mov
add
insb
inc
add
rolb
lods
hlt
pushl
mov
lea
lds
or
or
dec
daa
or
mov
cs
ffreep
je
push
outsb
add
sbb
mov
dec
mov
inc
add
pop
shlb
xchg
adc
xchg
xchg
or
jnp
pop
cli
scas
mov
movsl
je
lock
or
ret
dec
in
adc
lock
adc
mov
ja
adc
push
adc
cmp
clc
int3
lcall
add
push
dec
pop
add
lahf
and
test
hlt
cmpb
mov
mov
mov
adc
cmp
mov
add
das
cmpsl
ljmp
push
jne
dec
hlt
add
loopne
inc
divl
push
movsl
out
push
andb
or
addr16
adc
push
cltd
add
aaa
or
in
fimuls
mov
inc
das
loop
loopne
pop
or
dec
push
addr16
jbe
mov
push
push
xor
add
jp
or
iret
or
push
jbe
mov
mov
push
jb
xlat
add
push
ret
mov
mov
ret
sbb
cmp
mov
test
pop
out
nop
cmpsl
decb
test
xchg
sbb
mov
jecxz
aad
mov
add
pop
jbe
lods
icebp
jo
push
das
mov
insl
mov
nopl
test
jnp
mov
cld
add
popa
mov
js
loope
fsubl
ss
mov
xchg
rol
adcl
xor
and
daa
loopne
shll
outsb
and
mov
call
mov
in
dec
aam
jge
int
fdivs
shll
popf
js
sbb
push
cli
shl
mov
sbb
and
in
xchg
adc
mov
scas
test
inc
enter
xor
inc
ds
sbb
sbb
jmp
sti
pop
pop
sub
sub
mov
sub
cltd
loop
test
fisubrl
add
push
rolb
dec
fistpll
je
and
fisubrs
mov
stc
jmp
imul
rclb
rcll
push
cltd
adc
xchg
nop
lds
andl
xor
ret
push
dec
in
ret
xlat
sbb
add
xchg
xchg
lret
sbb
pushf
push
dec
sub
push
cmp
lret
movsb
or
or
daa
xchg
xchg
or
inc
or
dec
push
movhps
inc
insb
push
pop
mull
frstor
mov
lcall
adc
pop
mov
mov
push
sbb
into
lods
pop
int3
pusha
nop
dec
cs
mov
fdivrp
inc
into
dec
mov
or
sahf
fsubrs
dec
xchg
outsb
sub
inc
inc
cmpsb
icebp
mov
pusha
add
pop
mov
inc
adc
addl
push
add
cmp
popa
add
and
iret
incb
sbb
mov
inc
xchg
int3
dec
dec
push
fs
adc
mov
push
xchg
enter
pusha
and
adc
andb
sti
jnp
jo
mov
jg
xchg
enter
cmp
jb
and
xor
jb
and
and
insb
sbbl
or
adc
mov
clc
add
rorl
popl
sbb
xor
sub
xchg
fldl
fistpll
xchg
ret
fadds
xorb
out
push
add
or
cs
loop
int
mov
mov
push
pop
sub
adc
addl
mov
dec
cmp
mov
jne
shll
mov
pop
push
pop
sub
xchg
andl
pop
clc
add
out
xor
xor
add
and
clc
pop
push
sub
push
push
addl
mov
cmp
movsb
and
ja
or
push
push
xor
sbb
add
inc
adc
pushl
sbb
sti
cmp
mov
insb
or
sub
adc
add
push
pop
decb
push
sbbl
inc
mov
mov
mov
mov
dec
and
inc
or
jmp
lea
outsl
mov
lods
sub
pop
jo
cwtl
rclb
adc
push
xlat
dec
fs
mov
rcrl
add
daa
inc
std
inc
inc
and
mov
inc
movsb
or
pop
mov
or
or
push
xchg
or
imul
xchg
mov
mov
or
cmpsl
cwtl
push
xchg
mov
cmp
jp
icebp
sbb
sub
mov
rorl
rcl
push
sahf
mov
lods
push
sub
push
push
bound
fwait
and
pop
mov
or
xchg
mov
lods
mov
orl
popa
jl
mov
daa
or
sahf
ss
and
add
and
or
push
sbb
fnsave
fcmovb
ss
xor
loop
add
add
test
jbe
popf
pop
add
jb
mov
cmp
sbb
pop
fwait
pop
add
shlb
icebp
adc
adc
pop
aam
subl
cmpsb
cs
andl
xchg
add
cmp
or
repnz
mov
pushf
cltd
pop
sbb
mov
inc
test
jbe
out
nop
sub
aam
rorb
rcrl
push
fiaddl
pop
je
sub
sub
xor
adc
mov
add
mov
lret
pop
out
lret
iret
xor
test
test
mov
ss
push
insb
leave
xchg
stc
mov
inc
adc
std
sbb
or
imull
lods
mov
lock
dec
adc
jp
mov
jne,pn
pop
loopne
sub
movb
ret
pop
dec
loope
inc
orl
sub
dec
test
ret
aas
jae
mov
out
test
iret
cld
je
cli
mov
pop
jne
cmp
jae
push
imul
bound
xor
jmp
mov
test
stos
or
dec
scas
push
sbb
pop
mov
mov
divb
cwtl
loop
outsb
add
sub
iret
sbb
test
daa
mov
sub
jae
enter
sbb
mov
add
jp
jb
addb
int
out
fstl
fisttps
clc
push
xchg
out
inc
pop
pop
xchg
mov
push
aaa
inc
and
je
adc
test
push
jecxz
or
orl
test
jnp
rolb
push
adc
inc
dec
fwait
pop
stos
xor
stos
xor
lea
inc
or
cmp
jb
sub
push
mov
fiadds
adc
fisttpl
push
lea
hlt
test
test
push
pop
cld
adc
out
shrb
ret
mov
inc
cmpsl
iret
hlt
pusha
push
cmpsl
adc
cmp
movsb
xchg
or
lea
ja
cld
arpl
inc
xchg
or
mov
xor
inc
movsb
popa
shll
lds
psubsw
mov
adc
xor
mov
mov
mov
mov
push
ret
test
enter
shrb
add
sub
bound
ja
dec
cmpb
jno
and
pop
xor
in
inc
dec
popf
mov
push
mov
dec
or
push
pushf
or
arpl
sub
mov
cmp
mov
lfs
fistpll
adc
dec
adc
and
mov
jle
push
bound
sub
push
adc
insb
jmp
jo
popa
mov
out
pop
pop
add
sbb
dec
add
inc
push
in
ret
cmp
jne
xor
xor
inc
inc
sbb
xor
jno
cmc
xchg
cmp
ja
push
mov
or
pushl
pop
ljmp
and
or
and
jbe
loop
dec
in
adc
das
mov
loopne
dec
push
and
lret
lock
inc
sbb
jp
add
add
mov
std
inc
test
push
mov
mov
push
add
stc
mov
sbb
pusha
push
jl
scas
adc
inc
and
mov
rolb
jb
add
cwtl
dec
addl
cwtl
dec
or
addb
push
in
cld
outsb
push
dec
pop
push
push
cmp
push
fstpl
dec
leave
mov
and
cmp
js
shr
mov
jp
mov
nop
nop
xlat
or
andl
mov
add
mov
cmpsl
cmpsl
popa
push
pop
dec
mov
cmp
in
leave
jg
jmp
add
pop
orl
jmp
sub
jle
add
mov
jp
and
ss
scas
xorl
adc
leave
adc
sbb
and
daa
ss
testl
adc
ret
daa
loopne
out
mov
and
inc
icebp
das
push
mov
xchg
popl
aam
adc
add
test
loope
iret
cmp
stos
cmp
sbb
mov
mov
cltd
mov
inc
or
testb
xchg
test
and
repz
cld
pop
xchg
mov
inc
add
xchg
lods
or
dec
xchg
inc
xor
or
xor
subl
in
or
inc
sbb
cmpsl
push
inc
or
sub
xlat
lods
loope
test
pop
in
sub
add
push
cmp
pop
lock
pop
hlt
std
orl
jnp
loopne
mov
out
int3
adc
or
and
or
popa
insb
xor
dec
sti
sbb
mov
add
rolb
pop
enter
rcll
rorb
mov
sahf
push
sub
add
rclb
xchg
loop
iret
lret
pop
adcb
data16
jnp
call
jne
rclb
sbb
bound
int
addl
imul
jbe
or
call
in
jns
adc
enter
pop
enter
and
jl
sbb
push
bnd
insb
and
popa
lahf
pusha
mov
call
sbb
mov
fstl
dec
repz
sub
or
lds
push
jb
cmp
adc
pop
dec
xchg
jnp
in
mov
movb
out
push
movsl
or
js
and
insl
push
inc
jne
hlt
inc
jns
sub
in
sub
jno
aaa
and
xchg
int
aam
mov
add
mov
inc
sbb
call
xor
je
xchg
test
jg
leave
xchg
cmp
ret
adc
add
sub
mov
es
imul
inc
cltd
mov
pushf
mov
xchg
out
outsb
pusha
in
fcmovnb
mov
mov
and
or
je
inc
add
fbstp
nop
mov
cmp
dec
addr16
mov
jmp
mov
popf
xor
inc
cmp
jle
push
movsb
loopne
mulb
sub
mov
cli
adc
sbb
push
jo
mov
jmp
inc
cmp
mov
or
push
xlat
or
push
mov
lods
repnz
ret
xlat
sbb
or
push
xchg
lds
test
pop
mov
jbe
je
jae
into
in
cwtl
jg
mov
and
in
jecxz
and
bound
push
movl
adc
mov
popa
pop
sahf
shlb
sar
loope
orl
sub
rcrb
add
mov
cmp
adc
incl
mov
add
add
jecxz
decl
xor
dec
push
je
dec
jne
aad
xor
push
dec
xchg
clc
adc
inc
xchg
add
adc
add
aaa
inc
lahf
cwtl
inc
repnz
cmc
aaa
push
roll
lock
sti
sub
out
rorb
pop
add
push
jmp
cmp
fiadds
mov
cwtl
xor
lcall
sbb
jecxz
dec
dec
ret
push
sub
jns
jp
or
mov
pushf
or
mov
mov
or
xchg
ljmp
mov
call
mov
mov
mov
stos
xorb
mov
dec
sub
pop
add
jp
mov
jbe
xor
push
xor
out
cltd
add
and
sub
dec
enter
or
inc
or
inc
mov
inc
push
loop
sbb
mov
add
mov
lcall
adc
and
xor
in
push
mov
add
pop
xchg
mov
jo
out
add
mov
xor
arpl
mov
add
push
sub
pop
into
pop
sbb
std
add
adc
or
jmp
dec
repz
inc
sub
sti
je
mov
push
mov
or
and
or
iret
out
pop
dec
dec
stos
cmp
pop
and
dec
pop
js,pt
fidivrl
or
cld
aad
fwait
inc
mov
out
gs
rclb
push
decl
xor
inc
shll
cmp
dec
movsl
xor
pop
add
pusha
push
gs
push
jns
cmp
sub
js
leave
mov
dec
popl
test
xchg
or
xchg
mov
mov
and
outsl
insl
cmp
sbb
push
sub
inc
movb
cltd
cs
sbb
or
nop
xchg
push
inc
hlt
and
mov
imul
and
and
in
call
sti
fmull
add
xor
or
sub
add
push
loop
add
jl
ja
and
inc
jecxz
pushf
and
lret
lret
andl
dec
jns
fisttpll
pusha
ret
sub
sti
cwtl
popa
leave
mov
sbbb
xor
in
je
fs
mov
enter
xor
xchg
imulb
cmp
mov
sbb
arpl
or
pop
and
adc
movups
adc
push
xchg
imul
xor
xor
jb
mov
sub
adc
movsb
dec
mov
mov
js
fs
cmp
mov
into
adcl
lea
cmc
gs
mov
or
dec
xor
push
ds
mov
mov
inc
mov
xchg
mov
jge
pushf
xor
mov
aam
enter
pop
pop
sbb
mov
sub
dec
inc
cmp
xor
rcrb
jnp
add
push
mov
fists
cmp
fs
or
adc
roll
fs
stos
or
pop
or
cmp
loopne
push
dec
inc
xor
xor
add
inc
add
imul
or
cmp
in
stos
mov
mov
mov
push
sbb
filds
add
mov
and
fs
rcll
inc
stc
cmc
cmpb
call
and
dec
or
or
or
or
lods
inc
adc
inc
lods
jge
outsl
lcall
xchg
stc
lock
scas
jge
js
pusha
cmp
pushf
jle
xor
add
sbb
push
jmp
push
jae
jecxz
jmp
and
xorb
inc
lea
xor
cwtl
pop
pushf
add
insb
xchg
or
sbb
hlt
xchg
test
jbe
and
dec
mov
mov
xor
mov
lret
adc
push
jp
adcl
push
add
int3
add
sub
lock
pop
jne
add
or
dec
sbb
cmpl
stos
subb
mov
push
pushl
inc
push
lods
sbbb
test
nop
push
and
adc
sbb
sbb
sub
ja,pn
fldt
adc
int
pop
adc
or
adc
mov
inc
test
das
inc
xor
pop
add
sub
nop
xchg
mov
je
xchg
pushf
mov
inc
movsb
push
push
sbb
outsb
mov
and
movsb
leave
out
dec
nop
add
pusha
pop
jb
movsb
test
mov
adc
xchg
in
in
or
repnz
inc
or
pop
mov
test
add
adc
test
inc
inc
add
pushf
cmp
lcall
push
les
mov
jg
mov
add
add
fs
pop
push
movsl
xchg
es
cmp
sahf
int
je
cmp
or
cmp
xor
jne
add
dec
fdivs
pop
xchg
pop
pop
call
ret
daa
or
sbb
push
sbb
in
xchg
sbb
adc
jno
pushf
loope
ret
fdiv
cmp
or
mov
sbb
mov
enter
push
iret
in
dec
push
cltd
sbb
imul
mov
adc
or
mov
adc
les
jbe
mov
fstpt
in
sub
ret
sub
lea
cmp
call
sub
outsb
xor
xchg
or
ss
addl
and
dec
rolb
xchg
hlt
adc
mov
add
sbb
stc
jnp
pusha
dec
pop
ret
insb
dec
add
rorl
pop
icebp
cmp
aad
dec
roll
cld
add
adc
dec
stc
pop
lea
test
jge
inc
loope
test
add
and
adc
out
mov
idivb
shll
mov
push
jbe
jle
call
insl
dec
sbb
inc
mov
xchg
push
insl
xchg
xlat
push
mov
faddl
dec
push
and
sub
sub
fiaddl
lock
daa
dec
jae
push
mov
xchg
fmuls
sbb
cmp
push
cmpb
nop
out
adc
sbb
test
inc
ja
adc
dec
sub
or
les
or
push
ja
arpl
addr16
and
dec
push
or
dec
js
add
rolb
pop
add
mov
out
leave
fldl
jne
pop
lock
js
pop
push
fists
mov
test
pop
dec
push
xor
xor
mov
daa
sub
sbb
pop
imul
jo
sbb
mov
inc
sti
jl
and
into
lret
sbb
push
rorb
jge
int
jp
leave
pop
lea
xor
movsb
jb
pop
in
and
out
xchg
and
push
sbb
add
add
roll
in
lret
or
jo
xor
fcoms
lret
or
daa
pop
in
iret
js
jns
pop
lds
js
repnz
mov
es
adc
mov
popa
es
sbb
js
add
xchg
push
mov
sbb
sbbl
pop
sbb
add
mov
jnp
fistps
adc
pop
pop
popf
pop
inc
mov
data16
sbbb
and
push
shrl
and
js
sbb
sbb
stos
pop
shr
mov
xor
add
cmp
fst
pop
mov
sub
jns
sbb
dec
lods
orb
mov
roll
test
push
fsubl
xchg
sub
repz
lea
mov
pop
xor
inc
adc
jmp
cmp
lods
dec
sub
aaa
xor
cltd
sbb
sub
sbb
add
or
pop
leave
cmpsl
repnz
mov
movsb
mov
and
mov
or
icebp
lret
add
or
xchg
cmp
inc
incb
push
rolb
push
imul
fmull
push
ret
loopne
push
sbb
imul
cmpsb
dec
js
and
mov
jne
and
push
adc
add
fwait
xchg
or
enter
adc
and
nop
add
cmp
test
push
xchg
cmp
and
testb
ficomps
ss
loope
dec
push
sbb
jbe
mov
movsb
mov
sub
cmp
dec
push
outsl
or
test
add
cmp
nop
mov
addps
adc
xor
test
mov
pop
js
add
mov
stos
push
mov
or
adc
mov
sbb
stos
fiadds
push
fldcw
pop
insl
rorb
adc
dec
sahf
pop
fisubs
add
mov
out
shrb
xchg
inc
rcrb
inc
push
jbe
out
add
push
cmp
je
add
push
xchg
push
or
dec
nop
sub
out
pop
or
adcl
or
and
mov
pop
sahf
dec
in
xor
enter
inc
push
iret
cmp
aaa
insl
bnd
rclb
sub
pushf
xlat
fisubrs
adc
int3
cltd
insl
loopne
iret
xchg
cmp
call
enter
lock
ror
pusha
lret
inc
loope
mov
adc
in
nop
out
push
cwtl
insl
enter
enter
mov
mov
jns
push
into
mov
sbb
adcb
aas
sbb
xchg
out
pop
sbb
insb
or
xchg
jo
lret
sbb
out
mov
xor
and
lods
and
stc
pop
and
and
cwtl
adc
subb
inc
dec
or
loopne
cli
mov
dec
out
pop
ret
fs
insb
int3
adc
sub
dec
add
nop
dec
je
fs
scas
xor
dec
enter
test
pop
fmuls
es
and
imul
adc
sbb
lods
sub
xchg
cmp
inc
mov
sbb
or
sub
or
add
test
shlb
mov
pop
and
dec
repnz
pop
push
xchg
dec
pop
aas
outsl
xchg
movsl
inc
xor
jmp
add
cs
test
push
inc
cltd
xchg
xchg
inc
cmp
inc
sti
mov
or
out
dec
popa
mov
sbb
xor
xchg
mov
adc
pop
outsb
popa
and
je
or
cmp
cmp
xchg
shll
jno
or
shlb
cmp
or
enter
xorl
popf
mov
imul
mov
sarl
cmp
adc
les
mov
and
sti
sbb
jnp
or
dec
pop
cmp
adc
bound
inc
lret
dec
je
dec
push
or
sub
cmpb
pushf
jb
xchg
add
mov
loope
ss
push
imul
das
lea
pop
aas
pusha
cmpsb
inc
lahf
mov
dec
and
lods
mov
es
mov
pop
scas
cmp
nop
sbb
sub
pop
ret
and
jae
mov
in
sbb
daa
push
pop
faddl
sub
inc
lahf
cwtl
push
stc
cs
sub
and
xchg
dec
das
adc
push
sub
sub
lea
movsl
adc
or
ror
sub
sub
jbe
sub
sbb
enter
sub
aaa
xor
dec
stos
mov
jno
xchg
cmpsl
inc
fucomp
xor
sbb
jl,pt
xchg
dec
leave
inc
sbb
dec
or
mov
ret
pop
movsl
stos
jo
adc
sbb
sbb
mov
int
push
and
adc
dec
sub
bnd
pop
shlb
xor
and
dec
xor
fs
ss
daa
or
cmc
popf
sbbb
mov
lahf
push
outsl
inc
mov
aaa
sbb
scas
mov
sahf
xchg
test
sbb
aad
stos
mov
xor
ffree
cmp
scas
js
inc
das
mov
inc
cmp
xor
push
in
test
mov
add
pop
movsb
mov
cmc
mov
adc
enter
xor
inc
cmpb
push
out
addl
lds
jg
les
popa
jo
push
sahf
pop
xchg
mov
push
or
sub
fsubs
xchg
jl
insl
inc
fcomps
mov
cmc
pushf
add
cmpsl
outsb
and
mov
mov
add
vmovupd
pop
add
mov
mov
dec
jo
test
jns
xorb
xchg
out
sub
add
ljmp
sbb
shrl
inc
stos
cmpsb
or
xor
jg
or
call
pop
dec
add
mov
jne
stos
popf
inc
dec
inc
sub
sbb
orl
mov
push
or
inc
sub
jns
and
js
mov
or
in
mov
inc
or
pop
outsl
sub
mov
cmp
daa
mov
dec
xchg
dec
xor
push
xchg
mov
add
add
aam
arpl
std
out
sub
xor
mov
push
add
pop
jo
mov
cmpsl
adcb
lret
push
mov
cltd
inc
gs
push
jnp
cmp
push
or
sbb
xchg
repz
movsl
push
imul
mov
arpl
call
mov
pop
jp
mov
roll
mov
adc
add
das
mov
sbb
fs
add
daa
pop
push
cmp
push
pushl
aaa
cwtl
nop
and
in
or
dec
cmp
xchg
ds
xchg
mov
leave
push
cmp
and
mov
pushf
aam
sbb
fsubrl
dec
jae
in
sahf
dec
xchg
mov
lods
dec
rolb
dec
jmp
cmp
sub
dec
lea
aam
mov
inc
dec
cli
and
int3
xchg
out
and
add
pop
adc
addr16
dec
or
or
pop
adc
or
lock
adc
test
ret
dec
dec
popa
shrl
or
push
cmpsl
push
jae
test
add
cmp
push
pushl
adc
repz
jo
hlt
add
xor
fmul
in
lret
cmp
sbbb
lods
arpl
xchg
pop
add
sub
and
or
pop
repnz
sbb
enter
adc
adc
je
test
adc
cwtl
test
pushl
xchg
and
daa
popa
ljmp
push
pop
sbb
imul
int
or
inc
mov
hlt
or
push
sub
mov
das
xor
jns
jmp
pop
sbb
shlb
loopne
sbb
sbbb
xor
sbb
dec
fisubrs
pop
sbb
aam
sub
sbb
sbb
hlt
sub
bound
xor
push
mov
cwtl
test
push
popa
leave
rcrb
jns
mov
dec
dec
sub
lahf
push
inc
push
movsb
fsubr
sbb
rclb
sahf
cmpb
add
or
sbb
mov
cmpb
sbb
cmp
adc
sub
dec
movsb
adc
mov
daa
rorb
mov
xor
rorb
add
fisubrl
movsl
ja
push
xor
and
jo
mov
cmovae
gs
sbb
mov
lret
jne
inc
pop
pop
xor
jecxz
sbb
dec
or
in
push
out
xor
pop
aad
mov
or
and
test
xor
sub
rorl
xor
inc
in
add
add
loopne
xor
xchg
xchg
jbe
pop
sub
loop
fs
aaa
mov
insl
lcall
xchg
sub
ret
cmp
add
cmp
xor
cmp
cmp
pushf
adc
lock
loopne
and
imul
cli
cmp
sbbl
enter
sarb
xor
cmp
xor
mov
push
xchg
and
and
push
pop
xchg
mov
mov
xchg
aaa
inc
dec
push
push
or
jg
bsf
in
fwait
mov
xchg
xor
data16
push
dec
xor
xor
movsl
mov
push
dec
mov
in
add
mov
push
pop
adc
fstl
scas
movsl
pop
cmp
xor
push
scas
cmp
in
cmp
ret
leave
enter
shll
and
in
lea
mov
shrl
mov
sub
lock
dec
inc
mov
push
pop
andb
aas
lea
pop
scas
mov
stos
pusha
movsl
and
inc
inc
jl
insb
mov
push
add
test
test
mov
or
push
popfw
inc
mov
jb
and
movsl
and
jns
cmp
cmp
mov
pop
outsb
add
mov
adc
stos
mov
imul
push
and
lret
adc
cs
or
dec
cmp
inc
xor
les
fdivl
xchg
int
lock
inc
rcrl
shrb
sub
cmp
movsb
arpl
dec
test
divl
jns
test
jecxz
fisubrl
cld
daa
sbb
or
mov
push
or
mov
jnp
es
dec
sub
fs
push
rol
pop
push
mov
or
mov
and
mov
popf
ljmp
insb
pop
mov
out
pop
movsl
fstp
rcrb
int3
jecxz
je
jp
inc
clc
jns
ficoms
mov
ljmp
lea
inc
push
dec
sahf
add
in
push
xchg
pushf
mov
mov
sub
rcrl
in
bound
ja
outsb
rorl
adc
out
sub
add
push
mov
inc
or
dec
outsl
das
sbb
inc
dec
jmp
dec
push
sbbb
xor
std
icebp
push
xchg
sub
lea
stc
aad
mov
sbb
jg
in
test
mov
sbb
xchg
arpl
int3
in
test
push
xor
fisttpll
test
sbb
and
sbb
enter
mov
or
nop
imul
dec
cmpsb
aam
lock
sbb
dec
mov
sub
mov
jae
inc
sbb
mov
push
mov
or
call
cmpb
mov
stc
fists
jmp
test
jl
cmp
push
shl
inc
and
pop
add
out
scas
pop
call
cmpsb
dec
push
lods
inc
nop
pop
push
sbb
or
adc
xchg
sbb
mov
gs
xchg
cmp
in
test
jae
ret
cmpl
xor
add
outsb
movsb
call
cmp
push
add
jno
add
or
and
shl
out
pop
adc
jo
fs
push
mov
fcomps
inc
jg
jmp
adc
and
lds
inc
je
cmp
or
jl
pushf
cmp
arpl
movsb
ja
pop
jle
sbbb
popf
add
loope
adc
mov
lret
xchg
jo
add
lea
push
add
sub
test
fiadds
les
call
enter
pop
lods
enter
pop
mov
aas
iret
and
test
loope
pop
add
push
mov
int
pop
push
sbb
test
add
mov
jno
mov
je
add
and
push
cli
xchg
mov
iret
in
pop
add
jae
jl
mov
add
aad
js
sbb
flds
fs
adc
sarb
lock
sahf
popf
adc
mov
xor
mov
add
pop
mov
pop
or
movl
mov
jle
and
pusha
or
or
in
xor
or
ja
push
adc
or
push
je
mov
pop
adc
mov
mov
push
adc
movsb
sarl
aad
es
movsb
adc
jmp
mov
add
vmwrite
les
lahf
loope
cmp
add
and
jle
sti
cmp
xchg
mov
add
cmp
push
mov
sub
or
int
dec
inc
cmc
or
insl
sbb
mov
nop
pusha
call
pop
xchg
fld
pop
jmp
pop
sub
insb
jo
pop
add
inc
dec
sbb
fstps
mov
inc
jl
pop
imul
adc
and
sub
lock
or
testb
xchg
adc
repz
mov
fs
das
mov
nop
sbb
shr
add
in
std
div
push
pop
aas
push
gs
insb
inc
cmp
xor
jo
pop
inc
push
mov
adc
pop
nop
xor
lret
push
sbb
test
adc
push
scas
std
add
cli
xlat
mov
dec
insb
sub
mov
sbb
lea
mov
lea
add
dec
pop
and
inc
adc
dec
lea
add
sub
fwait
adc
pop
add
and
jo
add
into
pop
shr
popf
je
movsl
cwtl
pop
aad
lcall
sbb
and
mov
jo
xor
ljmp
push
pop
jp
cmp
lcall
lds
or
inc
cmpsb
bound
sub
cmpsl
cltd
mov
dec
pop
adc
cmc
jp
dec
add
fwait
pop
dec
loopne
jo
jmp
cmp
enter
pop
add
add
push
inc
push
and
jo
dec
ss
adc
mov
lahf
add
jbe
sbb
lahf
lahf
add
dec
cmpsb
cs
sbb
mov
xchg
cmp
das
push
cmp
or
or
aas
aas
hlt
in
push
mov
add
or
fildl
loop
loope
push
aad
inc
mov
movsl
call
add
and
pop
loop
mov
pushf
pop
cmp
sub
mov
rcll
push
ja
jl
cmp
mov
pcmpeqw
jecxz
lcall
mov
imul
and
or
or
je
or
inc
cmp
adc
enter
repnz
jp
pop
jns
inc
hlt
jne
push
fidivrs
push
mov
pop
pop
xchg
orl
pop
daa
mov
cmpsb
push
sbb
cmp
mov
rcrb
or
mov
xchg
mov
fwait
daa
mov
std
adc
xor
out
js
test
xchg
test
add
jns
loopne
push
int3
adc
jae
cld
mov
xchg
mov
mov
les
mov
dec
sbb
add
adc
or
sub
mov
jno
enter
ret
jp
and
jb
sbb
add
adc
add
mov
add
sarb
pusha
push
imul
mov
fdivrs
push
sub
xor
cmp
push
adc
push
js
dec
or
insb
cmp
and
xor
mov
stos
addb
dec
pop
mov
repnz
rcrb
inc
lret
imul
and
xchg
popf
inc
xchg
inc
push
stc
lock
clc
and
pop
je
in
ret
and
jns
sbb
fcmovnu
int
xchg
add
sub
loope
and
arpl
and
out
bound
test
data16
xchg
je
rclb
lcall
shlb
add
in
mov
pop
cltd
imul
rol
adcb
mov
xor
mov
xchg
dec
sub
sub
fdivl
nop
mov
es
inc
hlt
hlt
pop
pop
mov
ds
mov
and
daa
sub
in
add
test
loope
xchg
popf
jae
xchg
add
imul
inc
sbb
lret
mov
adc
insb
out
movb
inc
xchg
jns
inc
jge
aas
mov
jnp
pushf
dec
aaa
adc
push
notl
testb
sub
push
push
mov
pop
mov
sub
mov
xor
das
push
or
movsb
dec
dec
ljmp
push
lea
push
jmp
xchg
adc
je
push
push
sbb
xchg
xchg
adc
mov
test
ljmp
dec
gs
fcoml
jle
or
and
add
xlat
jmp
loopne
jo
adc
dec
dec
adc
jbe
lcall
inc
xor
mov
push
es
push
test
pushf
xor
mov
enter
pop
xor
and
and
adc
mov
pop
sbb
sub
jne
or
test
add
mov
cmp
mov
push
pop
adc
and
imul
mov
add
mov
pop
xlat
sahf
je
and
pop
lea
mov
and
xchg
inc
xor
inc
jbe
pop
test
std
fildl
and
movsl
loopne
dec
in
pusha
call
cld
lea
movsl
add
mov
out
inc
push
push
or
mov
inc
pusha
xchg
dec
push
push
mov
add
pop
xchg
std
push
lock
mov
sub
sub
clc
sbb
rcll
mov
stc
xor
push
add
jo
xor
xchg
mov
mov
jmp
sbb
jle
and
inc
jge
sbb
jp
test
pop
sub
push
cmp
jne
andb
dec
jp
push
incb
add
pop
sub
imul
pop
xchg
lods
ljmp
loope
xchg
sbb
mov
shrl
pop
pop
stc
or
in
ljmp
push
mov
jle
cmp
jle
pushl
aam
or
inc
add
push
adc
fisttps
and
sub
arpl
pop
pop
pushl
push
push
add
add
push
lds
jbe
push
inc
push
inc
sbb
lds
add
add
pop
mov
dec
or
loop
push
scas
jbe
fucomi
icebp
cmc
aad
adc
jno
and
out
test
adc
mov
mov
lahf
pop
jb
cmp
sti
scas
sti
ds
jb
adc
adc
jbe
sub
jnp
divb
pushf
jecxz
lahf
add
xlat
dec
push
jmp
test
movsb
jecxz
lock
and
mov
cmpb
xlat
jne
xchg
mov
jne
pop
push
mov
lods
rcrl
dec
pop
xor
mov
mov
cmp
adc
cmp
test
sbb
out
in
dec
push
outsl
push
sub
lea
adc
pop
es
sbbl
ret
mov
std
mov
push
mov
mov
cmpsb
outsb
nop
jbe
loopne
add
hlt
pop
mov
sub
lahf
fs
stos
add
mov
adc
mov
mov
cli
inc
pop
je
mov
scas
js
mov
gs
mov
and
dec
cs
jl
push
xchg
outsb
and
push
mov
add
imul
mov
fisubs
cmp
mov
fs
jmp
push
add
mov
dec
mov
mov
push
and
sub
sub
popa
mov
sbb
or
test
dec
cmp
mov
pusha
lcall
sbb
or
inc
adc
aas
dec
cmpsb
inc
push
out
mov
dec
dec
fdiv
pop
push
sti
add
rol
dec
sarb
lea
cwtl
or
xor
mov
push
gs
push
movsb
pop
fs
sbb
sbb
mov
jo
sub
aam
test
movsb
nop
pusha
xchg
push
faddp
subb
lcall
xlat
rorb
pop
mov
data16
pushf
push
addr16
stos
loope
call
outsl
push
mov
inc
mov
xchg
filds
sets
mulb
lods
cmp
push
mov
xchg
add
or
lock
pop
xchg
sub
push
imul
stos
sub
movsl
jp
and
inc
add
fidivs
adc
add
iret
aas
clc
mov
js
js
cmpl
pop
push
addb
inc
pop
mov
imul
int
dec
xor
add
and
lods
or
push
push
lods
test
xchg
mov
cmp
mov
je
mov
or
sbb
les
pushf
and
or
mov
jo
xor
xchg
fldenv
sbb
mov
xlat
xor
dec
or
and
dec
shll
js
push
adc
daa
cmp
sub
mov
adc
push
or
push
loope
inc
and
pushf
out
cmp
fidivs
jl
sub
xchg
loop
pop
mov
jns
sub
jo
and
or
lods
bound
jno
inc
stos
or
or
pop
adc
lods
jge
repz
loopne
in
cmp
dec
jbe
mov
or
int
add
mov
mov
clc
add
daa
sbb
lea
shrb
sub
pop
js
cmp
fisttpll
push
sbb
lss
lods
xor
ret
and
dec
sbb
push
push
and
jne
pop
or
popa
or
aas
sbb
add
sbb
pop
shrl
leave
and
adc
add
or
test
push
mov
aam
mov
loopne
iret
cmp
or
ror
inc
or
inc
ljmp
in
gs
das
icebp
sub
add
inc
xor
lods
andb
push
lret
test
loopne
je
push
je
push
fmuls
or
inc
mov
or
nop
inc
addl
clc
popf
add
mov
jp
mov
push
add
push
pusha
jmp
pop
cmpsl
jmp
push
pop
jmp
pop
pop
cmp
add
adc
dec
pop
test
test
push
loop
or
stc
push
sbb
movsl
adc
mov
sbb
mov
xor
push
ja
mov
add
sqrtps
xorb
ja
inc
lea
mov
enter
mov
xchg
lods
dec
imul
ror
leave
lcall
fcoms
dec
outsl
pop
ror
je
rolb
iret
lahf
xor
push
sbb
std
and
in
imul
push
cmp
xorb
inc
cmp
in
test
dec
loope
test
rol
inc
test
cmp
scas
lods
push
ret
lcall
pop
push
aam
xchg
stos
lods
ss
lea
sub
in
cmp
mov
adc
nop
shl
add
sub
adc
jno
jnp
pop
lcall
inc
pushf
pop
or
mov
dec
or
or
dec
sub
add
adc
fs
fidivs
xor
pusha
es
es
call
lods
in
mov
and
gs
sbb
in
inc
call
pusha
jmp
mov
sbb
adcb
push
mov
pop
mov
push
add
jecxz
mov
insb
add
push
gs
add
sbb
adc
sbb
cmp
adc
xor
xor
popl
jns
pop
cmpsb
addr16
xor
pop
loopne
inc
mov
dec
sub
sub
jl
add
fwait
xchg
out
jbe
pop
arpl
sub
xchg
cltd
nop
and
outsl
rcrb
jo
inc
sub
fs
sbb
pop
push
in
mov
xor
sub
adc
pop
sbb
and
inc
push
xor
dec
dec
fs
mov
inc
dec
jle
inc
push
or
inc
or
adc
add
jno
jge
sti
mov
jl
and
inc
dec
inc
cwtl
dec
sub
sub
jl
jge
in
popa
push
xlat
mov
sahf
push
push
loopne
aam
ss
jmp
mov
push
in
movb
and
and
pop
enter
mov
xchg
repnz
or
xor
sbb
push
xchg
xchg
in
fwait
imul
xchg
rcrb
xor
inc
mov
lret
push
inc
fadd
cmp
call
jnp
mov
mov
test
jo
mov
adcb
iret
cmpb
aaa
jne
jbe
push
rcrb
dec
arpl
xchg
pop
cmp
fistl
cli
in
push
pop
push
mov
add
mov
mov
inc
lea
cmpb
inc
cmc
mov
push
mov
faddp
cs
pop
decl
filds
movb
push
cmp
push
lret
jl
pop
je
arpl
push
outsb
popl
push
imul
adc
loopne
adc
nop
pop
mov
inc
lcall
test
test
cmp
mov
ret
pop
xchg
or
adc
popa
sarb
pop
jae
sub
jge
or
mov
push
sti
or
sbb
jo
push
negb
test
popa
movsl
mov
test
hlt
mov
mov
push
rorb
enter
and
out
xor
jmp
cli
and
mov
adc
pop
push
movsb
jae
or
rclb
fdivl
push
gs
xor
les
icebp
stc
sub
in
and
test
jnp
shrl
test
sub
dec
inc
cmp
jb
pop
pop
sbb
or
pusha
loop
inc
gs
jle
or
mov
push
add
pop
xchg
rolb
lods
fwait
je
nop
xor
and
jmp
cmp
jne
xor
add
lock
lret
out
stos
push
mov
inc
and
inc
push
stc
jnp
loop
andb
push
sbb
imul
jo
faddl
jmp
and
inc
repnz
jno
mov
pop
mov
sub
in
test
or
lret
je
notl
loop
pop
pop
and
lret
mov
mov
jb,pn
sbb
dec
cld
push
out
clc
mov
sub
jne
push
push
outsl
and
jo
lcall
sbb
mov
shl
lea
jmp
rcr
lods
push
sub
push
into
inc
sub
dec
jns
mov
sub
divb
or
jmp
mov
cli
cs
xchg
mov
mulb
imul
incl
adc
insb
fistl
or
xor
sub
inc
sbb
sub
push
push
test
mov
cmp
pusha
push
dec
das
nop
xor
push
gs
jmp
pop
dec
mov
add
insb
cmp
or
sbb
dec
push
inc
sub
or
shlb
push
jne
lods
sub
aad
call
cmc
cmpl
push
adc
xor
push
stos
push
adcb
push
or
jne
mov
ficoml
mov
fadds
sbb
jl
cmp
push
xor
push
push
test
add
pusha
imul
mov
inc
fcompl
ds
sub
sarb
aam
mov
jmp
mov
dec
cwtl
cmpsl
push
aad
js
or
int3
into
imul
sub
imul
fiadds
aam
mov
push
adc
adc
and
sarb
cltd
mov
xor
cltd
or
push
pop
push
add
es
push
nop
dec
xor
pop
cwtl
decl
stc
adc
mov
mov
xor
cmp
mov
mov
push
cmc
adc
xor
fidivrl
adc
xor
sbb
stos
into
jo
adc
lods
push
dec
cmp
push
xchg
or
paddusb
add
sbb
loop
pop
xchg
testb
sbb
xor
pop
xlat
dec
xor
dec
mov
into
movsl
pusha
jmp
call
pushf
data16
fimuls
mov
mov
inc
out
enter
push
and
pop
cld
out
mov
xor
loop
movzwl
test
je
test
fidivrs
push
mov
lret
or
enter
out
pop
mov
and
push
enter
xchg
push
testb
add
jne
scas
imul
out
adc
cmp
jecxz
lock
xor
les
pop
cwtl
add
mov
es
clc
mov
out
sbb
or
add
pop
aam
push
or
jne
cmp
fwait
int3
test
fidivl
popa
mov
scas
shrb
inc
shlb
jl
xchg
andl
xchg
sub
adc
inc
push
xor
jle
fisubl
sbb
sbb
aad
and
pop
xchg
and
push
in
mov
or
mov
lock
loopne
or
mov
jb
pusha
imul
jo
lods
add
add
call
xor
push
fnstcw
insb
mov
in
pusha
xor
push
pop
pop
ds
cmp
je
jmp
icebp
out
fst
sub
popa
outsb
incb
and
add
jle
mov
cmp
flds
test
sub
inc
dec
add
in
inc
loopne
addb
pop
push
insb
fildl
jnp
dec
mov
mov
sub
cs
mov
pop
insl
jo
xor
mov
xchg
enter
xchg
scas
pop
or
or
inc
loop
mov
push
mov
test
add
mov
add
and
daa
call
and
push
add
mov
sbb
xor
cltd
dec
scas
or
mov
add
das
add
or
out
or
in
xchg
mov
lock
cltd
xor
loope
aaa
stos
xor
out
mov
mov
aad
add
mov
out
inc
in
push
je
popa
test
cwtl
cmp
xchg
ljmp
add
mov
push
loopne
push
mov
mov
add
int3
data16
inc
or
loope
jbe
inc
mov
jmp
subl
je
test
rcll
addb
pop
int
aam
movsl
dec
push
cwtl
call
sub
jne
xor
add
dec
fsubl
sbb
xor
adc
push
hlt
movsl
andl
push
hlt
add
inc
push
inc
cmc
and
cmpl
inc
mov
aad
mov
xor
mov
push
sub
jg
jecxz
push
mov
dec
add
inc
or
mov
cwtl
mov
cmpsb
pushf
jecxz
mov
add
xlat
dec
sub
mov
cmp
clc
xchg
decl
pop
int
ret
adc
test
adc
push
imul
mov
pop
mov
rcll
test
add
adc
add
pop
ret
rcll
data16
sub
int3
fst
mov
sarl
mov
testb
ret
pusha
inc
dec
shr
shrl
inc
loop
cmp
push
push
fsubrp
mov
fdivs
bound
mov
into
xor
add
loopne
or
sub
testl
fisubl
dec
add
dec
or
mov
pop
movb
pop
and
sbb
int3
cmp
xchg
out
push
idivb
pop
call
mov
cld
adc
pop
jo
imul
push
push
movsb
adc
jmp
cmp
movsl
pop
aam
xchg
cmp
loope
imul
xchg
loopne
mov
clc
lea
inc
mov
xor
xor
adc
setb
lock
push
dec
ss
jo
mov
je
cmp
clc
dec
pop
inc
push
ret
xchg
xor
adc
inc
jmp
cmp
xchg
jno
in
add
test
lods
fsubrl
sbb
dec
or
mov
push
cmp
xchg
ret
scas
faddl
and
mov
inc
adc
pop
pop
push
sub
lret
clts
mov
xor
loopne
push
xor
push
or
or
mov
test
fdivl
popa
pushf
lock
ret
inc
xor
mov
dec
inc
or
push
cmp
cmp
je
outsb
mov
and
or
cmpsb
adc
sub
adc
xor
lea
aaa
dec
shl
inc
ja
adc
push
sbb
adc
addb
je
rcl
ss
int
movsb
test
push
repnz
push
jmp
mov
les
ljmp
xor
or
jnp
movd
push
rolb
mov
in
pop
in
mov
mov
pushf
mov
mov
int
shrl
iret
jb
push
adc
jae
or
pop
or
jo
xor
dec
rorl
insb
mov
js
test
inc
lahf
aas
mov
test
mov
add
int3
js
adc
cmp
jg
mov
mov
mov
arpl
dec
mov
pusha
cmp
add
push
push
cmp
inc
dec
ja
mov
jmp
mov
fisubrs
mov
push
shr
add
daa
mov
subl
add
aaa
jbe
dec
mov
sbb
push
icebp
aad
adc
imul
imul
subb
add
pusha
call
add
test
mov
mov
or
sub
adc
dec
mov
lock
push
dec
mov
xchg
pop
fwait
add
add
fstpl
ds
xchg
and
and
mov
insl
loop
sub
stos
pusha
push
mov
jae
int3
push
jnp
insl
pop
cmpsb
xchg
movsb
sub
nop
sti
pusha
cmp
jns
insl
xor
and
push
xor
jmp
push
jo
add
pop
dec
xchg
popf
jmp
fldcw
mov
lahf
pusha
stc
in
push
fs
add
inc
push
fidivrl
bound
push
or
pop
addr16
mov
andl
add
pop
jns
push
mov
je
inc
or
aaa
lock
jne
mov
jne
out
repnz
dec
push
imul
push
je
inc
or
push
or
sti
repnz
insb
jne
or
cmp
push
in
nop
push
mov
cmp
inc
sbb
cmp
push
jns
jo
loop
lret
adc
popf
pop
mov
sub
cmp
pusha
add
pop
mov
dec
orl
push
out
loopne
pop
mov
or
nop
or
int
cwtl
or
stos
dec
xchg
sub
mov
lds
movb
xchg
popf
xchg
or
jo,pt
mov
iret
dec
push
mov
ss
pop
les
jb
cmp
xor
xchg
push
add
xchg
je
mov
push
loopne
je
jle
and
fmull
push
loopne
xor
sub
fst
cmpb
xor
and
pop
rcll
push
test
jae
mov
mov
insl
lret
aad
sbb
jo
mov
pop
and
mov
dec
loopne
adc
out
add
loopne
pop
outsb
iret
dec
testl
xchg
or
fwait
je
mov
and
add
vphaddwd
xchg
pop
cmp
sbb
popf
jbe
divb
add
sbb
or
or
sarb
les
mov
cli
xor
imul
adc
inc
and
add
cmp
shll
insb
jo
or
dec
je
jl
mov
imul
enter
dec
js
mov
or
mov
pop
sub
test
inc
mov
scas
dec
jnp
mov
dec
inc
and
pop
pop
ret
cli
mov
imul
adc
or
loopne
or
ljmp
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
jbe
lock
push
pop
ret
sbb
pop
fbstp
and
xchg
xor
add
sbb
adc
dec
cmp
push
clc
adc
and
movb
cmp
jne
pop
push
xor
incb
shrl
dec
pcmpeqw
popa
mov
or
adc
inc
adc
jb
es
imul
bound
pop
mov
int
popa
add
fucomip
pop
sti
and
cmp
sbb
jns
iret
jo
jne
cs
adc
sbb
ror
test
pop
adcl
add
push
ret
push
mov
pop
add
jne
mov
jb
mov
adc
shr
add
mov
mov
push
inc
dec
or
or
cmp
lea
cli
jge
mov
sti
out
adc
fidivs
sub
fadds
iret
in
push
mov
cli
insb
sbb
mov
inc
incl
push
rol
ljmp
shl
pop
add
sbbl
add
xchg
mul
push
pop
jne
lea
add
ret
mov
adc
scas
lods
push
into
lret
notb
push
clc
out
test
pop
andl
fistpll
fnstcw
imul
clc
adc
cmc
mov
adc
or
enter
lock
xor
dec
ja
das
add
iret
cmp
add
xor
ljmp
clc
imul
add
and
out
fldl2t
mov
ret
roll
mov
stc
push
adc
loope
push
mov
stc
ret
lds
lock
push
stc
pop
addb
repnz
sub
inc
lahf
insb
push
mov
sub
sub
sub
add
add
push
push
filds
enter
jbe
fisttpl
ret
adc
shrb
mov
mov
test
inc
test
roll
clc
mov
and
lods
push
or
jmp
cmp
subb
dec
bswap
or
or
adc
pusha
mov
ret
dec
or
mov
cli
or
insb
jno
push
stos
mov
cli
es
add
add
xorl
and
orb
insb
cmp
jecxz
mov
and
int
jle
xor
insb
or
mov
xchg
pop
or
shrl
mov
sbb
add
add
mov
lahf
int
mov
or
jo
xchg
push
and
mov
adc
rorb
dec
sub
xor
mov
mov
cwtl
notl
or
sbb
inc
test
lods
outsl
mov
jnp
je
je
pop
sbb
fs
pusha
insb
inc
inc
push
sbb
insl
call
add
mov
ja
fcomps
pop
icebp
pop
testl
je
cmp
je
testb
movsb
aas
mov
rorl
lds
cmp
je
sbb
adc
or
lock
push
sub
sub
cmpsl
js
pop
xchg
jmp
lea
sbb
ds
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
cmp
in
adc
sbb
repz
dec
ss
xchg
cmp
mov
jbe
pop
sbb
into
add
push
mov
insl
loopne
rorb
inc
push
pop
cs
popl
lods
lock
fmuls
leave
loopne
pop
rolb
and
lock
sbb
or
bound
push
inc
sub
add
cmp
fidivs
and
mov
dec
xlat
test
add
test
ljmp
in
arpl
jbe
scas
or
lret
jle
mov
mov
push
push
pop
leave
enter
xchg
xor
adc
sbb
mov
jne
inc
inc
popf
insl
jge
or
mov
adc
mov
mov
mov
popa
push
addr16
lods
xchg
adc
fdivl
xor
xchg
fsubs
mov
jae
xchg
stos
or
inc
ss
pushf
cwtl
fidivrs
roll
inc
movsb
push
test
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
adc
fadds
xchg
add
lea
dec
push
or
lcall
add
adc
pushf
aaa
imul
or
push
movsbl
mov
jb
out
or
call
add
lods
in
mov
xchg
test
inc
xorl
and
pop
arpl
xchg
push
insl
sbb
and
imul
push
add
lea
fmul
inc
mov
pop
mov
mov
push
ret
push
pop
cmp
je
push
adc
jp
push
fsub
add
and
cltd
pop
negl
cmp
je
aaa
xchg
ja
les
cmp
cli
adc
std
ror
daa
mov
lret
cmp
loopne
sbb
popa
mov
push
pusha
mov
mov
and
xchg
inc
aam
pop
test
xchg
add
ljmp
push
mov
adc
add
pop
inc
or
push
and
pusha
or
pop
fistl
ret
xchg
pop
into
jecxz
lock
and
adc
mov
cmp
ds
mov
xchg
fnstsw
push
xchg
ret
bound
push
lret
inc
sbb
push
loope
add
cs
sub
mov
pusha
cli
aam
inc
adc
fisttpl
jecxz
loope
sub
test
xor
or
pop
sarb
and
or
cmp
test
push
pop
pminsw
popa
mov
stos
pop
shlb
sub
mov
aam
mov
test
outsl
inc
xchg
icebp
sarl
xor
fmuls
xor
mov
mov
mov
sbb
jecxz
pop
es
out
jo
push
cli
ss
mov
xchg
sahf
cmp
dec
inc
xor
push
xchg
popa
cwtl
bound
push
lock
cmpsb
insl
cmc
add
mov
jmp
and
or
push
mov
ljmp
ret
out
mov
jge
mov
adc
imul
and
in
add
push
mov
or
das
mov
inc
cltd
adc
cmp
push
or
inc
pop
lea
push
push
leave
icebp
rolb
lods
mov
jle
jecxz
xchg
es
add
push
loope
mov
jecxz
scas
mov
xor
test
orl
iret
in
adc
adc
sbb
dec
repz
sub
sbb
outsb
inc
imul
add
and
aam
cmp
inc
mov
popa
add
jnp
aam
and
cmp
in
jge
orb
pusha
and
mov
lods
xor
pop
ljmp
mov
pop
cmpb
xor
add
pop
or
lock
xchg
lock
in
push
pop
sub
inc
cmp
imul
call
out
dec
rcll
xor
in
decl
adc
xor
pop
cmp
rdmsr
sarb
stc
dec
stos
pop
mov
inc
mov
out
push
dec
xor
call
xchg
shrl
or
adc
pop
inc
shrb
pop
loope
imul
mov
mov
test
pop
sbb
icebp
xor
mov
clc
adc
or
jo
push
sub
and
dec
xchg
arpl
inc
fimuls
xchg
adc
je
add
xchg
lret
sbb
mov
int
push
and
xor
ficomps
sub
in
inc
ret
movswl
les
push
in
neg
sbb
push
cmp
ret
xchg
or
xor
xchg
or
pop
and
jb
loope
mov
sbb
rolb
jp
ret
pop
outsl
inc
adc
jp
mov
push
xor
lock
xchg
mov
daa
add
or
lock
inc
xor
inc
lcall
insb
xor
sahf
pop
inc
xchg
dec
inc
xor
lock
andl
jne
xor
lock
jo
add
sub
pop
popa
jmp
adc
lods
sbb
mov
loop
mov
std
inc
lea
and
sub
ss
push
inc
add
fdivl
orl
sbb
pop
pop
pop
pop
xchg
inc
idivb
add
adc
add
outsl
aaa
cwtl
mov
jl
andl
adc
pop
scas
dec
daa
push
sbb
and
pop
jae
cltd
add
or
pop
js
mov
dec
cltd
ss
cmp
dec
xor
pop
sahf
push
xchg
dec
outsb
xor
or
mov
rcll
arpl
xor
scas
and
dec
dec
movsb
rcl
jge
sbb
loop
lcall
addr16
mov
loope
mov
pop
lret
push
mov
add
jl
dec
cmp
sbb
outsb
sub
or
mov
push
mov
adc
push
in
shl
icebp
push
sbb
pop
add
in
sbb
adc
cmp
outsb
adc
push
inc
adc
dec
push
call
sbbb
xchg
pop
imul
jp
jmp
pushf
add
pop
pop
pusha
shrb
jecxz
inc
cs
push
mov
and
pop
mov
dec
pop
cmp
mov
pop
or
outsl
aaa
incl
mov
cmp
cmp
cmp
sarb
sbb
sbb
cli
testb
or
mov
jge
cmp
pop
mov
rolb
jg
xor
and
xor
xchg
push
sbb
nop
xchg
cwtl
sbb
out
sub
push
mov
mov
push
adc
dec
lret
in
scas
push
mov
leave
cmpsl
repnz
inc
add
mov
test
add
mov
mov
mov
and
cmp
add
enter
xor
aaa
inc
mov
add
mov
sbb
popa
push
mov
mov
ja
mov
test
imul
stos
push
je
mov
jne
rol
fbld
popl
lods
cmp
jne
add
cmp
pop
mov
sub
or
sarb
cmp
mov
xchg
and
or
lods
or
cmpl
enter
jge
and
jmp
xor
aam
lea
fmul
lods
ret
popa
shlb
pushf
xchg
inc
xlat
adc
cmpsl
mov
mov
stos
adc
neg
adc
mov
add
sub
lret
rol
pop
mov
pop
les
push
or
or
xchg
rsm
xchg
push
pop
andb
clc
cmpl
jmp
test
inc
lea
mov
push
push
mov
push
mov
adc
pop
sub
cltd
negl
cwtl
inc
inc
ret
movsb
xlat
push
mov
in
orb
je
mov
add
pop
loop
cwtl
add
xor
adc
xlat
adc
movsl
or
aas
mov
xor
addr16
push
fldl
xor
add
and
push
jecxz
cwtl
push
in
in
cmp
xor
out
and
inc
leave
aaa
inc
lods
push
addl
cmp
imul
pop
sub
test
xor
cmp
je
mov
xor
push
add
aas
imul
jno
cmpsl
or
push
lods
xchg
sbb
jmp
nop
movb
mov
jl
out
add
xor
push
dec
mov
leave
and
sti
pop
fbld
mov
add
or
sbb
in
rcrb
dec
cvtps2pd
inc
std
pop
pop
mov
or
inc
adc
mov
fisubrs
or
inc
dec
add
xchg
sbb
loope
cmp
clc
xor
cmp
testb
push
fwait
sub
sbb
sbb
mov
push
cmp
push
or
jae
stos
sbb
or
lods
adc
fmuls
push
cmc
movsl
repz
add
mov
data16
les
cmp
add
loope
mov
mov
insb
add
add
xor
add
cmp
fsts
rcrb
loopne
adc
add
testl
sub
cmp
jne
lods
mov
dec
inc
mov
push
ret
mov
js
and
push
lea
jb
rolb
pop
xor
shlb
xchg
add
sahf
imulb
add
and
aas
lahf
xchg
sbb
fsubrs
addb
movsb
jae
int
int3
and
sar
and
in
cmpl
jge
movl
shr
enter
inc
add
das
push
js
rcr
dec
adc
cmp
inc
sbb
xchg
lock
dec
mov
sahf
loope
stos
pusha
insb
std
lret
sbb
mov
jbe
adc
mul
dec
push
dec
sbb
js
add
jne
mov
lock
push
dec
adc
jo
mov
adc
mov
je
push
aam
lock
push
pop
adc
adc
mov
sbb
jne
xchg
mov
push
mov
push
mov
jecxz
jge
lock
push
in
testl
int3
cld
mov
insl
adc
add
xchg
xchg
lock
or
adc
inc
inc
andb
push
adc
xor
mov
or
pop
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
jo
sbb
sbb
or
mov
adc
pushl
xchg
daa
inc
es
inc
inc
add
ret
testb
movb
dec
popa
sub
xor
sub
je
bound
push
adc
dec
pop
dec
jbe
inc
xchg
sub
ss
dec
add
adc
mov
mov
push
pop
or
scas
mov
pop
mov
xchg
clc
push
or
push
jl
mov
push
push
adc
xor
repnz
or
mov
out
sub
ror
out
rorl
mov
loopne
cmp
addl
jb
dec
in
pop
aaa
jp
pusha
aas
daa
or
mov
test
cmp
ja
jmp
loope
movsb
xrelease
pop
lds
push
mov
add
leave
adc
add
popa
push
orl
not
mov
add
jne
mov
jne
dec
cmp
dec
dec
mov
sbb
fwait
xor
int
and
popf
xor
lea
pop
add
push
pop
std
xchg
sub
push
push
push
aad
sub
jge
push
rcll
mov
cmp
rcrb
cmp
inc
bound
mov
add
and
lock
pop
mov
xor
jo
mov
mov
push
jnp
inc
fsubrl
pop
xchg
cmp
and
or
adc
in
loopne
pop
movsl
stos
push
pop
testl
push
xchg
inc
and
push
xchg
sub
cmp
cmp
dec
and
inc
or
dec
or
mov
imul
mov
adc
pop
push
pop
or
jno
mov
and
sub
mov
and
push
movsb
ss
into
addb
or
push
aam
pushf
push
or
fnstcw
inc
int
je
add
sbb
jge
repnz
shl
lds
fldl
js
je
mov
aad
mov
call
out
add
xor
dec
lret
addl
mov
cmpsb
add
inc
adc
int
jmp
shlb
mov
imul
xchg
jo
push
pusha
sub
es
sub
movl
mov
into
push
or
or
add
insb
dec
sub
int3
xor
lock
xchg
add
jne
sub
mov
in
call
add
shlb
gs
inc
clc
fwait
mov
scas
pusha
and
mov
sbb
mov
pop
push
jae
cmpl
mov
push
rorb
or
dec
rorl
sbb
mov
adc
pop
lods
enter
push
outsl
mov
jge
sub
mov
sbb
push
and
xchg
rcrl
flds
adc
inc
xor
mov
mov
rol
imul
push
in
or
and
ss
movsb
nop
popa
fists
sub
in
mov
jns,pt
dec
pop
or
cmpsl
xor
xchg
mov
pop
xor
fsts
or
daa
pop
dec
icebp
sbb
cld
push
xorl
dec
pop
add
adc
outsl
aas
sub
and
xor
ret
divb
and
les
pop
scas
test
insl
ret
pop
mov
loop
push
and
mov
js
jp
fsubrp
andl
ret
mov
fadds
je
or
je
or
jle
sub
sub
xchg
scas
adc
xor
inc
inc
hlt
cmp
ficoms
add
dec
test
sbb
lcall
cs
sti
mov
mov
sti
cld
je
push
adc
rclb
adc
xchg
cmp
loopne
lret
sbb
jne
movsl
pop
sbb
or
scas
push
dec
pushf
jbe
xchg
mov
cmp
pop
cmp
or
and
inc
std
jbe
jg
test
cmp
or
add
inc
sub
ret
inc
add
rcrb
or
adc
lods
jo
pusha
dec
out
adcb
rorb
js
mov
inc
addb
das
icebp
lret
sbb
cmp
into
mov
aaa
dec
test
sbb
test
dec
je
sub
add
push
cmp
movsb
add
outsb
add
add
mov
nop
adc
aad
cwtl
xor
test
mov
daa
or
push
adc
lock
adc
addr16
movsl
and
mov
push
aas
out
mov
stc
push
mov
in
cmc
sahf
or
dec
ret
movb
sbb
add
int3
sub
push
aad
xor
and
jo
sub
mov
aad
sbb
jnp
pop
xor
inc
push
int
or
out
pop
sbb
fsubrs
fdivrl
notl
add
sub
sarl
neg
lcall
pop
mov
sbb
push
sub
dec
ljmp
rorb
pmulhuw
push
push
call
call
xor
jb
aaa
loopne
xchg
mov
xor
xchg
fdiv
xor
notb
and
inc
inc
inc
testb
and
mov
pop
ds
inc
cmp
jne
add
mov
mov
xchg
jle
std
fdivl
jns
lods
sahf
and
scas
sub
add
add
add
loopne
das
adc
fwait
out
les
cli
cld
sub
sbb
adc
or
inc
es
mov
mov
mov
ds
cmp
push
xor
ret
rorb
rol
push
xchg
popf
dec
push
cs
pop
fdivrs
repz
sbb
repz
lcall
adc
cmc
mov
repz
and
fisubl
aaa
add
movsl
pop
inc
push
pop
andb
outsb
loopne
jo
xchg
lds
ja
mov
xchg
arpl
in
ljmp
xchg
xchg
add
aam
push
jb
add
fmul
xor
sbb
push
test
cmpsl
inc
in
clc
lods
mov
aas
or
push
xlat
lods
jo
mov
xchg
pop
imul
and
shlb
cwtl
out
popa
add
clc
inc
push
sbb
popa
pop
test
jno
mov
mov
jl
push
adc
dec
in
xchg
push
fstpt
cmp
les
sti
xchg
fsts
sarl
pop
inc
mov
cld
sbb
sbb
movb
add
cwtl
pushf
popa
push
std
mov
sbb
sarb
and
or
jo
jl
movsb
xor
or
jmp
jle
nop
xchg
mov
sbb
xor
shll
icebp
test
enter
mov
dec
cmp
lcall
jl
mov
xor
pop
mov
mov
push
mov
sbb
dec
cmpsl
out
mov
inc
adc
enter
push
mov
int3
mov
rolb
push
outsb
or
fmull
leave
mov
cmp
sub
inc
les
push
shrb
add
mov
cwtl
mov
sub
pop
inc
fcoms
cmp
xchg
xchg
or
sub
cmpsl
dec
push
and
or
add
jmp
les
cmc
inc
mov
and
loope
pop
sti
jns
std
dec
movl
or
mov
add
test
mov
sbb
dec
pop
test
and
cmp
xor
or
outsb
push
stos
push
mov
aam
fmuls
sbb
pushf
loope
add
mov
lea
or
push
xchg
push
lcall
popa
sbb
fistl
aam
add
call
addl
pop
incl
jo
clc
lds
dec
decl
and
xor
inc
fbstp
push
push
test
cmovno
and
push
jecxz
aaa
sbb
or
loope
mov
shlb
lods
loope
pop
mov
sbb
push
popa
push
or
sbb
or
mov
neg
sbb
mov
addr16
inc
push
and
sbb
sbb
cmp
nop
rorb
push
inc
xchg
push
sbb
dec
cmpb
daa
test
xlat
sub
fdiv
cs
jmp
jne
leave
xchg
sbb
nop
aam
dec
popa
push
cmp
push
push
pop
mov
in
outsb
ret
push
test
aam
jge
into
cli
in
jae
call
call
adc
or
cmp
push
inc
jne
add
add
dec
or
and
add
jg
scas
or
idivl
call
xchg
out
or
pop
jg
sti
je
cmp
sub
push
add
push
dec
outsl
sbb
jnp
and
inc
adc
je
inc
and
xor
lock
imul
cmc
add
pop
dec
sbb
inc
es
rorb
jp
and
sub
subb
mov
push
push
mov
movsl
inc
sbb
call
popa
test
push
pop
test
xor
fdivrs
sbb
mov
cmpl
lock
mov
enter
jl
sbb
xchg
pushf
inc
ret
jns
and
push
inc
mov
out
in
mov
xchg
jmp
es
dec
adc
and
lock
imul
adc
xchg
mov
mov
jmp
mov
popw
mov
jnp
enter
xor
cmpb
jecxz
scas
or
mov
jge
sub
mov
sub
lock
jle
push
sub
pop
sbb
xor
jb
inc
jne
rclb
cwtl
dec
fcoms
xchg
sahf
test
add
inc
xor
dec
pop
sbb
push
movsb
mov
push
xchg
mov
cmpsl
mov
loopne
pop
jno
loop
test
sub
sti
add
add
adc
or
cmp
pushf
out
sbb
lods
xor
mov
cmp
movl
sbb
rorl
jnp
pop
mov
fadds
push
mov
pop
or
aad
movsl
es
into
cmp
inc
call
aas
adcl
add
dec
call
iret
pushw
push
adcb
int3
xlat
jnp
add
jnp
mov
int
fs
lret
cmp
push
mov
jge
sub
push
mov
push
mov
imul
dec
mov
or
fwait
add
lock
sti
add
imul
inc
dec
dec
dec
hlt
add
dec
add
in
pop
je
or
push
cmp
push
push
push
sub
cmpsb
sub
or
adc
movsl
mov
and
adcb
cld
subl
cmpsl
inc
dec
popa
lds
inc
sbb
leave
jmp
lcall
cmp
rcrb
sub
cmp
xor
or
sbb
push
lret
jo
rcr
push
pop
pop
mov
add
cld
rcrb
mov
adc
and
fs
popf
xor
adc
aas
lea
ja
mov
push
add
or
in
out
add
orb
sbb
not
fisttps
mov
push
jb
mov
cmp
fldl
fsubl
or
inc
dec
int3
push
push
cmp
inc
xor
sbb
movsl
ljmp
aas
mov
into
imul
leave
add
mov
xchg
mov
ss
pusha
popa
mov
enter
and
sbb
leave
iret
lret
xor
mov
add
daa
and
in
jle
mov
gs
cli
pop
mov
and
sub
frndint
mov
ja
test
mov
mov
push
pop
mov
inc
xor
xchg
lahf
sub
xchg
cmp
pusha
in
cmp
mov
and
and
xchg
cmp
lods
mov
fdivs
adc
xchg
cmp
call
and
inc
sub
rol
fwait
clc
lahf
or
or
repz
inc
xchg
add
sub
or
arpl
dec
and
add
inc
ds
sbb
inc
adc
sub
fs
dec
dec
xchg
sbb
iret
lret
xor
mov
pop
xor
push
sysret
pusha
cmp
sub
enter
clc
scas
int
mov
gs
nop
imul
dec
lcall
fldenv
mov
cmp
out
mov
sbb
add
and
call
or
inc
outsb
je
sbb
add
add
mov
add
aam
or
adc
lcall
push
and
dec
push
adc
shrl
hlt
dec
dec
adc
arpl
inc
dec
add
or
cmpl
inc
mov
adc
bound
cmpsb
imul
hlt
mov
push
dec
cmp
or
pop
dec
daa
cli
pop
adc
or
or
jle
bndstx
aaa
or
jmp
in
xor
add
sarb
jge
jl
aaa
xchg
mov
and
repnz
add
and
pop
bound
jb
push
inc
or
mov
or
add
mov
adc
and
daa
subb
push
jl
cmp
jae
or
dec
mov
push
shl
pop
cmp
jne
jg
mov
pop
dec
xchg
sub
rcrb
loopne
lods
jp
mov
ret
fimuls
lret
mov
lret
push
add
jmp
push
add
sbb
pop
push
cwtl
sbb
lea
lds
sarb
js
lahf
push
mov
movsb
or
clc
add
call
sahf
or
jge
mov
lock
sbb
dec
or
loop
jmp
mov
add
punpcklwd
les
aam
adc
hlt
cmp
jecxz
xchg
test
xor
insb
xor
dec
jle
xorb
lahf
jecxz
fbstp
add
or
mov
dec
clc
add
cmp
daa
sarb
dec
push
mov
js
dec
mov
xor
pop
push
dec
sbb
mov
and
in
pop
fsubl
orb
lock
push
adc
pushl
fs
push
arpl
popf
lds
dec
dec
ja
push
push
pop
aaa
movsl
cmpsl
xor
xor
mov
push
jg
rcrl
repz
fsts
push
insb
call
and
mov
imul
xchg
dec
sbb
lock
jns
call
jge
aam
ret
adc
adc
mov
mov
mov
or
test
mov
cmp
scas
cltd
out
add
shll
push
leave
push
xor
push
add
lret
nop
add
push
scas
push
xor
xorb
test
arpl
lcall
cmp
and
push
add
add
add
dec
mov
xchg
xchg
mov
and
test
push
and
xchg
adc
push
push
sub
loope
fsubrs
insb
add
dec
stc
add
test
pop
gs
sub
jo
add
mov
mov
inc
inc
cmp
push
inc
lock
push
lret
xor
jmp
jg
pop
fisttps
int
leave
inc
and
jbe
mov
push
mov
xchg
push
push
push
lea
and
push
subb
shrb
out
or
pop
scas
jb
cmp
sbb
mov
add
rorb
or
pop
lods
inc
push
add
push
lret
mov
and
or
jp
inc
push
inc
inc
push
add
mov
call
dec
aaa
cmp
push
lods
leave
inc
add
mov
add
je
mov
dec
call
cmp
ljmp
adc
lahf
pop
ds
or
cmp
add
add
testl
inc
adc
mov
dec
in
cmpsb
lret
push
jmp
sbb
clc
test
subb
mov
or
or
mov
cmp
adc
mov
andl
push
fisubrl
sbb
add
mov
fwait
xor
mov
or
movsl
jns
inc
loope
daa
or
lahf
or
or
and
adc
jnp
popa
or
lea
jmp
push
rcl
adc
xchg
aas
movsb
inc
adc
push
adc
pop
dec
test
stos
xor
leave
pop
or
pusha
out
dec
lods
mov
xor
add
mov
sub
fwait
mov
add
or
insb
insb
cmp
fisttps
bound
enter
lea
mov
cmp
and
sysret
jae
mov
sub
ret
gs
imul
lods
xchg
xchg
push
sbb
sbb
sbb
mov
in
sbb
or
and
and
andl
scas
test
push
loope
jne
lret
mov
push
push
negl
daa
imul
hlt
fcoml
or
push
jb
popf
movsb
adc
iret
inc
sub
pop
and
pop
fs
ror
adc
loopne
mov
dec
fdivl
sub
xor
inc
mov
cmpsb
int3
push
xchg
cwtl
pop
adc
push
or
push
mov
xchg
sub
cmp
pop
add
push
jo
jae
test
rcll
sbbl
xor
push
sbb
or
cmpl
mov
sbb
jp
dec
pusha
dec
adc
jns
addr16
or
loopne
lret
push
adc
cmp
test
sbb
fildl
or
xor
les
in
setge
pop
cld
sub
sbb
lret
add
lock
movsl
mov
add
sbb
lret
popa
add
xor
imul
sbb
add
xchg
mov
sbbb
insb
add
or
test
xorb
test
hlt
fdiv
ja
cmp
mov
clc
sarl
pop
dec
fists
ljmp
cld
lock
call
movsb
cld
sub
mov
push
sbb
xchg
inc
xchg
pop
les
rcr
add
sbb
mov
je
push
add
push
xor
inc
cmp
jb
mov
jno
adc
mov
fbstp
mov
je
lods
in
and
int
mov
jle
or
movsb
xchg
or
cmp
cwtl
adc
pusha
daa
push
mov
dec
insb
add
aas
mov
notb
movsl
shlb
mov
fisubrl
push
cmp
inc
out
adc
pop
mov
jbe
mov
mov
loopne
leave
sub
stos
or
xchg
mov
addl
sbb
pop
xor
inc
inc
out
lds
pop
mov
in
push
nop
sti
jl
test
cltd
rorb
adc
rol
enter
ret
mov
nop
push
adc
stos
or
mov
push
cld
fists
popa
sbb
dec
add
jmp
push
inc
xchg
xor
sub
dec
sbb
out
jnp
int3
scas
add
push
shll
push
jno
inc
sub
push
mov
out
add
push
fadds
mov
movsb
sub
and
sub
nop
das
das
das
das
xor
cmp
inc
hlt
inc
or
xchg
xchg
sub
dec
jl
cmpsb
lret
inc
cli
and
add
adc
and
jl
js
add
jge
sbb
add
rolb
aaa
loope
clc
pop
lods
inc
movsl
sub
xchg
cltd
stos
push
lret
mov
loopne
decl
jno
mov
sbb
stos
or
push
nop
scas
lea
and
xor
ljmp
adc
or
cwtl
rclb
cmc
movsl
popa
and
jb
sbb
sub
icebp
pop
or
jns
adc
jbe
inc
push
out
add
add
push
add
sbb
adc
xchg
and
lods
fs
ret
cli
stos
ss
movb
and
sbb
lret
das
loopne
push
add
cmp
iret
lahf
cmp
inc
call
inc
popa
cmp
jmp
mov
push
ret
loope
hlt
int3
je
rclb
cld
ja
cmp
cmp
pop
dec
sub
xchg
adc
adc
cmp
sbb
xor
mov
enter
adc
mov
xor
dec
xchg
movl
pop
cmp
sub
jmp
sub
xchg
pop
lea
sti
rep
bound
cmpsl
mov
or
sbb
cmp
jae
mov
shlb
add
dec
sub
arpl
in
add
mov
sbb
and
jne
cmp
inc
xchg
and
jae
ja
pop
in
and
xlat
push
and
lock
add
push
mov
pop
push
loopne
adc
push
ret
mov
data16
inc
sub
and
adc
push
mov
push
xor
cmp
rorb
xor
aas
int3
push
shlb
inc
xchg
pop
mov
push
rorl
ds
jp
fdivs
scas
sub
rolb
loope
andl
sbb
mov
sbb
dec
arpl
mov
adc
sahf
sub
push
mov
mov
inc
sub
mov
popa
fmul
mov
mov
fidivl
repz
jmp
dec
or
push
inc
iret
jecxz
and
shlb
cld
sub
or
cmp
ds
aaa
repnz
fldcw
xor
pop
mov
push
fadds
rol
clc
mov
sbb
push
lret
add
loopne
jl
jnp
pop
adc
push
push
cmp
call
xchg
push
adc
adc
dec
addr16
fisttpll
call
adc
or
push
fisttpl
or
or
fcoms
dec
stos
test
test
fsqrt
xor
jne
ret
pop
popa
cmpsb
movsb
adc
stos
popf
test
jno
incl
faddl
dec
lea
sbb
popa
push
xlat
mov
adc
arpl
mov
push
push
and
add
ja
add
cmp
imul
js
dec
add
cmp
jl
xor
cmp
test
sbb
loopne
mov
lods
or
add
ret
arpl
sbb
push
roll
or
dec
movsb
dec
xchg
jo
lret
push
fs
mov
xchg
mov
adc
and
je
mov
aad
adc
pop
testl
outsb
aam
cltd
inc
add
mov
outsb
or
jo
sub
test
push
icebp
jl
ret
xchg
loope
insb
sbb
and
adcl
or
cmp
loope
add
dec
mov
sbbb
mov
in
xchg
sub
sub
add
rorb
lea
nop
pop
jle
arpl
pop
ret
push
in
inc
sbb
adc
dec
sbb
insb
int3
adc
add
subb
jge
shrb
nop
and
je
test
cmp
fidivs
dec
xchg
sbb
adc
je
rsqrtps
push
add
or
cmp
pushf
sbb
clc
adc
popa
insb
idivb
stos
loope
insl
push
adc
inc
lea
outsb
rcll
push
clc
inc
mov
shl
cmp
inc
sub
cmp
or
add
or
mov
outsl
out
adc
push
les
rol
add
clc
jbe
or
add
shlb
xor
pop
ret
inc
mov
dec
aam
ret
pop
sub
jecxz
cmp
repnz
mov
repz
mov
dec
cli
mov
dec
cmp
lea
stos
or
rolb
dec
jbe
fiadds
add
lock
lea
mov
sub
cmp
lock
push
sub
push
addb
movsl
inc
cmp
stos
fistpll
jl
pop
in
or
loope
mov
and
sahf
mov
stos
lea
sub
popaw
push
aad
pop
daa
jae
dec
or
std
add
nop
adc
inc
fwait
popa
lea
and
aas
imul
sub
and
shlb
mov
add
mov
clc
mov
mov
or
sbb
sbb
pop
jge
mov
or
sarb
popa
nop
adc
jno
inc
inc
adc
push
ret
mov
jmp
dec
ss
arpl
clc
test
mov
cwtl
outsb
sar
gs
push
lret
add
cmp
mov
mov
cmp
mov
jb
pushl
mov
pop
add
sbb
push
jmp
xor
push
sahf
clc
jae
adc
and
lret
add
push
rorb
adc
xchg
icebp
or
ds
cs
xor
adc
adc
sbb
in
sub
sub
imul
adc
sbb
lods
dec
int
and
lahf
mov
test
push
xor
jne
dec
xchg
add
in
xlat
popf
ret
xor
jns
daa
xchg
cmp
xchg
or
fldl
lock
jl
sbb
ss
adc
insl
dec
dec
sub
arpl
and
adc
mov
outsb
fcmovnb
std
ja
adc
arpl
in
insb
and
ja
rcll
pop
insl
adc
fldt
insb
cmp
sbb
cmp
in
pop
xlat
and
add
outsl
xchg
inc
outsb
and
add
loope
das
jo
jle
addb
or
sbb
mov
adc
js
jne
in
nop
out
push
xor
and
test
add
pop
daa
add
rorb
add
lcall
add
and
lcall
mov
mov
popa
ficomps
mov
fsubs
add
outsl
or
dec
inc
aas
and
pop
enter
enter
andb
pop
enter
mov
and
es
pop
enter
cs
nop
add
inc
nop
add
nop
sub
in
add
mov
pop
or
jmp
push
mov
in
xor
add
push
push
pop
xor
or
xor
mov
mov
mov
xchg
jle
xchg
lea
out
push
cmp
shr
jae
dec
xchg
or
jmp
mov
gs
ret
sti
lret
jae
pop
cmpsb
or
push
adc
and
sbb
pop
adc
or
mov
cli
fiaddl
jnp
inc
mov
jmp
or
add
adc
inc
adc
sbb
or
and
sbb
into
adc
or
iret
jg
and
dec
sub
and
jmp
clc
mov
mov
pop
pop
lcall
inc
mov
jne
push
test
test
push
test
inc
ret
mov
aam
sub
imul
mov
andb
add
imul
lret
cwtl
sub
ret
and
aam
imul
aad
push
sbb
adc
orb
add
pushw
mov
fiaddl
js
ds
mov
mov
pop
mov
sbb
bswap
fsubrl
out
and
pop
leave
imul
pop
lock
aas
js
jmp
or
add
jo
or
rcrb
sbb
add
push
int
loope
xchg
outsl
je
pusha
add
jp
lahf
test
mov
loopne
pop
add
in
sarb
mulb
xor
fwait
mov
xor
push
xor
add
mov
push
xor
ret
stc
pop
mov
cmp
jne
and
lret
addl
jg
xor
xchg
pop
orb
inc
pusha
and
mov
xor
dec
pop
cmp
shll
xor
mov
mov
dec
and
rol
loop
xor
and
mov
jg
das
or
adc
pop
xor
shrb
inc
push
add
fmuls
movsb
inc
jmp
cmp
mov
inc
sbb
cs
jns
mov
xchg
mov
jo
movsb
mov
pop
sbb
orl
ljmp
push
into
ret
dec
cmp
jg
dec
neg
arpl
lea
jb
and
mov
adc
push
adc
push
add
data16
or
adcl
dec
xor
arpl
push
lock
or
es
cmp
rolb
ss
mov
sub
out
into
dec
testb
add
repz
jns
and
and
add
xorl
jl
mov
or
hlt
das
enter
push
cmp
or
iret
mov
repnz
or
lock
mov
or
roll
or
push
inc
dec
fstpl
push
inc
inc
punpcklwd
adc
out
and
data16
lods
inc
dec
or
mov
push
data16
adc
hlt
das
in
xchg
inc
and
adc
xor
cmp
mov
dec
bound
inc
cmpsb
repnz
int
xor
shrb
mov
shl
mov
in
loopne
pop
std
xor
int3
sub
push
add
lock
pop
mov
pop
std
push
jge
adc
jns
dec
ds
lea
cmp
cmp
adc
test
or
adc
popa
sub
fadds
add
or
or
call
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
test
cmp
mov
call
cmpsb
cmp
mov
jge
mov
pop
and
cmp
outsl
and
jns
cmp
je
cmp
je
jne
addb
cmpsl
sbb
jo
movsl
pusha
lcall
lods
and
enter
add
jecxz
lock
dec
and
sub
add
add
mov
fisttpl
inc
push
adc
sbb
test
pop
mov
jno
or
enter
or
sbb
mov
add
jl
call
rorb
add
push
out
lock
in
pushl
rcrb
adc
inc
mov
dec
lock
sub
dec
shrb
and
aad
mov
mov
add
addb
dec
lea
sarb
cmp
in
popa
popa
push
sub
sahf
and
xor
dec
xchg
or
cmp
lea
xor
sub
or
insb
into
loopne
mov
add
dec
jp
pop
pop
mov
and
out
and
push
pop
inc
pop
sbb
push
pop
jb
mov
dec
and
push
or
in
sbb
cmpb
cmp
ret
cli
push
cmp
push
or
stos
and
jle
xor
cmpsb
pushf
lea
xchg
push
adc
insb
je
cmp
or
adc
sbb
push
inc
pusha
gs
mov
test
xor
icebp
adc
or
pushf
jbe
push
repnz
or
cmpsl
inc
enter
cmp
inc
das
sbb
fisttpl
popa
popa
pop
sbb
adc
cmp
gs
pop
pop
pusha
negl
push
and
xchg
or
sbb
push
jne
test
xor
ret
scas
ljmp
lea
sub
cmpsb
sbb
xchg
rcl
mov
daa
jbe
sbb
sbb
add
je
addl
push
insb
adc
mov
xor
push
adc
push
shll
adc
lock
lods
push
into
and
xchg
in
sbb
test
shll
movsb
ror
inc
pop
mov
mov
lret
and
pop
adc
imul
pop
or
nop
pop
rclb
ret
sbbb
sbb
jle
and
roll
mov
sbb
je
inc
push
outsl
fidivrs
sbb
rol
mov
fs
mov
loop
sbb
fisttpll
mov
dec
sbb
jg
loopne
and
popf
jbe
jmp
cmp
movq
jmp
inc
and
cs
and
sbb
mov
inc
movsl
cmpl
call
xchg
mov
jmp
inc
jl
mov
mov
cmpb
call
push
xchg
test
push
inc
mov
jno
cwtl
stos
jo
or
daa
notb
or
das
lods
sbb
icebp
daa
inc
sub
test
fcomps
je
sub
or
fs
dec
mov
and
mov
repz
xchg
mov
add
inc
rcl
mov
leave
add
push
sahf
fsubl
pop
pop
fsubrl
xor
pop
cmpl
mov
mov
mov
clc
and
daa
je
mov
add
adc
jg
and
push
subl
push
xchg
in
pop
mov
inc
ret
adc
adc
jne
xor
or
and
jle
je
sahf
or
push
jle
dec
add
and
jecxz
loope
out
jb
adc
xor
adc
cltd
sbb
mov
adc
leave
push
repnz
jmp
and
sub
cmp
repz
shrl
and
inc
push
sub
xor
push
insb
addr16
xor
xor
jnp
xchg
inc
xlat
fadds
sub
movsl
inc
xchg
test
xor
xor
xor
cmpsl
mov
aam
jle
rorb
add
pusha
popl
add
jnp
test
push
and
xor
xor
mov
mov
mov
pushf
test
movsl
test
and
pop
mov
jge
cmp
cwtl
inc
arpl
clc
cmp
fildll
out
xor
push
mov
sbb
mov
inc
xchg
cmpb
js
rcl
sbb
dec
mov
push
dec
fsubrl
cmpsl
pop
adc
add
das
movsl
push
dec
cltd
or
inc
mov
outsl
push
mov
jl
pushf
loop
and
hlt
jg
mov
sub
ds
lret
sub
lods
mov
ret
pusha
pop
or
sbb
push
js
cld
push
negl
dec
in
dec
test
loope,pn
xor
scas
fs
pusha
lret
sub
or
aas
stc
sub
lea
mov
pop
pop
ret
insb
jg
xchg
les
or
jne
push
push
mov
or
sbb
int3
outsl
pop
jno
and
mov
imul
clc
add
adc
jg
adc
repnz
mov
unpcklps
mov
inc
cmp
inc
lret
das
inc
push
add
or
add
sbb
inc
push
or
dec
inc
rcrl
dec
sahf
call
lret
pop
mov
mov
adc
cmp
add
and
cmp
mov
cwtl
push
in
xchg
ret
jmp
mov
cmp
aas
push
cmp
inc
add
mov
subb
sub
outsb
lret
xor
imul
pop
loopne
or
shrl
call
or
adcl
cmp
xor
xor
or
mov
mov
push
adc
test
add
shr
jmp
in
adc
adc
dec
cmp
pushl
jae
pushf
mov
xchg
and
push
sahf
out
call
sbb
jae
div
je
dec
call
xchg
daa
sub
push
es
incl
sub
push
add
sub
dec
out
pop
or
nop
pop
inc
add
push
mull
inc
adc
add
out
test
sub
shrb
fdivrs
mov
fldl
jne
cmp
and
in
sub
push
cmp
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
aas
sbb
out
mov
fstpl
andl
xchg
or
and
jle
movsb
dec
mov
jge
push
and
popa
push
inc
inc
fistpll
mov
push
sub
sbb
lret
lea
or
jnp
fstl
jecxz
fsubs
jp
mov
inc
push
outsb
mov
xlat
addb
cld
mov
rorb
xchg
negb
add
dec
jg
int3
dec
das
dec
test
es
push
outsl
cwtl
add
dec
loop
sbb
push
sbb
push
cmc
sbb
lcall
fnstsw
dec
mov
push
adc
jp
rcrb
mov
mov
les
emms
sub
mov
movsl
or
lcall
xor
and
jecxz
call
bound
jne
add
loope
pop
inc
sar
ljmp
push
dec
sub
mov
pop
sahf
sbb
aam
mov
shlb
or
movsl
ficoms
and
aaa
add
xchg
xor
nop
out
sbb
fisubrl
push
mov
mov
adc
pop
push
add
add
add
push
ljmp
sub
push
popa
in
add
lods
dec
repnz
pop
daa
adc
push
xchg
cmp
rcrl
aad
adc
out
xor
add
mov
repnz
push
xorl
nop
mov
ret
es
pop
cmp
push
push
sub
adc
xor
shlb
sub
xchg
xor
mov
test
dec
xchg
xor
add
aaa
mov
popf
mov
mov
sub
inc
fisubrs
fs
add
jno
add
fwait
sub
fnstsw
imul
xor
sub
pop
les
adc
enter
jns
mov
jo
fmull
fs
push
int3
rorb
lds
adc
insb
imul
or
mov
es
lea
loopne
fwait
sbb
stos
paddusw
imul
cs
sbb
es
inc
pop
fwait
stos
mov
push
rclb
int3
mov
rclb
inc
dec
add
jbe
add
rolb
xor
lods
add
pop
inc
sub
hlt
in
cmp
pop
xor
or
and
push
add
inc
push
inc
aam
jns
or
adc
ja
aas
addl
lock
add
and
ret
loop
arpl
or
mov
push
int
push
and
cmc
cltd
and
sub
fcompl
or
add
xchg
scas
cli
adc
loop
push
cmp
ljmp
daa
adc
rolb
repnz
add
xchg
adc
push
add
xor
jb
xor
je
pop
or
movsl
loop
mov
insl
ret
aam
jl
loopne
jmp
enter
xor
es
mov
pop
in
pop
movsb
mov
cmp
add
and
rorl
or
divps
jmp
test
je
or
push
movsl
cli
addl
sub
sub
push
mov
add
dec
repnz
or
shr
jmp
xchg
in
adc
pop
subl
imul
das
ret
cmp
sbb
lods
dec
xchg
pop
fmull
lods
shrl
lds
or
push
aas
and
jmp
les
ljmp
mov
xchg
mov
call
or
or
add
add
xchg
fnsave
pop
psubsw
adc
add
cmovno
mov
jne
xor
adc
lret
push
inc
and
cmp
cmp
dec
arpl
fstpl
ss
pusha
jmp
adc
dec
xor
jne
ret
and
push
aad
cmp
sub
mov
loopne
inc
data16
int3
add
push
or
push
pop
jle
push
push
xchg
fimull
lea
adc
clc
repz
cmp
jg
in
fdivs
pop
mov
clc
sbb
popa
mov
mov
cmp
rcll
inc
push
jmp
mov
jnp
mov
or
inc
mov
mov
xchg
addr16
inc
inc
stos
xchg
lea
push
mov
fmulp
loope
mov
fcoml
fistl
xor
lods
stos
sbb
inc
cmp
sbb
cmovb
and
add
jp
push
adc
cmp
xor
sub
ds
xor
cmp
dec
insb
test
mov
arpl
outsb
lret
ljmp
or
push
sub
mov
jnp
jo
or
push
outsb
dec
clc
lods
inc
pushf
jecxz
inc
dec
int3
ror
inc
movsl
add
xchg
ret
inc
pop
nop
popf
jo
mov
xchg
inc
into
imul
sbb
aad
add
or
imul
aaa
add
sbb
and
mov
pusha
xor
inc
mov
add
das
push
pop
ja
or
xchg
mov
inc
lods
adc
fisttpll
xchg
scas
mov
popf
ja
data16
push
jle
inc
push
daa
test
loop
sbb
add
lods
inc
inc
test
jmp
stos
mov
test
stos
inc
pop
sbb
cs
sbb
popa
add
add
adc
ss
test
movsl
or
adc
movsl
bound
push
or
sarl
popf
notl
clc
and
xor
push
popf
mov
xchg
inc
sub
xchg
mov
movsb
mov
movsl
sbb
lds
stos
and
push
add
jecxz
movsb
xor
inc
pop
popf
mov
mov
mov
add
ficompl
enter
xor
rorl
mov
shrb
aam
or
adc
xchg
je
xchg
cmp
inc
cmp
lea
mov
cmp
mov
stos
imul
fptan
cmp
mov
pop
shll
inc
mov
sysenter
mov
xchg
in
jns
dec
sub
fwait
xchg
cs
repz
iret
push
popf
xchg
add
leave
mov
add
dec
push
ficoml
lcall
nop
inc
cwtl
add
xor
add
es
add
gs
in
xchg
mov
inc
or
sub
push
mov
push
push
loop
shlb
shrb
in
sbb
add
mov
sahf
inc
bound
addb
int3
cmp
add
pushl
cmpsl
sbb
fldl
push
out
inc
sub
stos
push
or
add
icebp
and
cmp
loop
les
push
cld
popa
mov
sub
mulb
ss
and
cmp
cmpb
add
pop
or
pop
mov
dec
cmp
clc
fisttps
dec
add
xchg
test
loopne
dec
dec
jp
mov
jne
adc
mov
adc
outsb
mov
mov
xor
add
js
loope
add
mov
outsl
fstps
pop
cltd
or
ljmp
adc
push
scas
add
sub
push
jg
push
das
loope
repnz
jo
sub
xor
inc
pop
push
icebp
call
sbb
nop
stos
adc
push
pop
lds
sub
mov
or
pop
mov
stos
addl
jmp
lds
inc
out
xor
cmp
push
das
push
iret
mov
and
jne
les
push
push
adc
lods
xchg
xor
outsb
sub
sbb
lcall
stos
xor
cld
adc
and
addl
out
pop
sbb
ret
xor
popa
cltd
adc
icebp
ficompl
inc
pop
scas
lods
data16
mov
inc
mov
add
out
mov
adc
sahf
and
xor
mov
sahf
add
in
push
outsb
adc
aad
add
add
aas
sbb
cltd
jns
aas
and
lret
push
outsl
lea
jo
push
rorb
leave
jmp
fmul
lods
push
sbb
cmc
stos
cmp
mov
in
or
rcl
pop
cmp
lret
clc
or
pushl
fcompl
inc
ja
aaa
dec
repnz
mov
inc
sbb
arpl
sbb
sub
stos
add
dec
repz
outsl
lea
popf
test
add
push
mov
mov
fisttpl
mov
dec
sub
push
test
or
es
sti
pusha
inc
push
or
sub
jge
add
sbbb
dec
test
inc
mov
dec
imul
sbb
cmp
push
pushf
pop
pop
add
pusha
lods
or
inc
or
dec
push
pop
enter
fimull
jge
xchg
sbb
and
xchg
add
sub
xchg
or
or
leave
adc
and
or
inc
push
inc
pop
adc
mov
sub
mov
pop
sub
xchg
mov
push
je
inc
aam
push
or
sbb
sub
adc
inc
sbb
mov
sbb
cmc
sbb
xor
pop
sahf
dec
loopne
or
cwtl
mov
mov
add
in
pusha
mulb
push
pop
gs
cli
adc
and
add
mov
cmp
imul
and
and
or
push
jno
inc
or
je
cmc
fldl
sub
xor
sub
notl
sbb
adc
js
cld
addb
cmpl
add
push
sub
loope
mov
movsb
ror
and
and
push
or
fs
inc
outsl
inc
js
and
pop
scas
sbb
addl
sub
mov
sub
gs
lds
sbb
and
sbb
insb
imul
cltd
sbb
dec
and
inc
jmp
cmpsb
mov
inc
sbb
inc
stos
mov
dec
sbb
push
fidivs
aaa
mov
and
push
leave
xor
fcompl
test
sahf
out
into
aas
in
ret
xor
scas
addb
daa
jge
popf
sub
imul
lcall
xchg
adc
fnstcw
imul
jnp
push
adc
xchg
hlt
and
arpl
add
jo
xorb
add
mov
and
push
push
dec
jmp
sub
push
jmp
jge
add
ret
sub
mov
test
lds
adc
jno
add
dec
and
in
dec
sbb
mov
add
and
subb
std
and
jmp
xor
pop
or
dec
mov
xchg
push
fldenv
pop
sbb
aad
jne
mov
xor
dec
or
ja
aas
add
jno
ja
les
loopne
inc
incb
data16
inc
dec
rolb
shlb
scas
lock
xchg
add
shrb
sbb
aas
sub
daa
jmp
xchg
pop
lods
inc
sub
test
push
push
hlt
jb
add
ss
push
mov
sarl
pop
test
mov
mov
fcoml
inc
js
xor
divl
push
xor
cmp
jb
std
push
push
repz
imul
push
xchg
xor
iret
mov
or
add
push
cmpb
pop
imul
or
lret
push
cs
push
je
mov
mov
lea
loope
adc
jb
add
or
xor
cmp
dec
jne
xor
push
in
xchg
repz
cmp
jae
pop
mulb
mov
add
arpl
jno
je
push
or
ret
nop
das
mov
add
add
js
adc
inc
push
sub
lods
sti
stc
push
mov
jbe
add
cmp
les
xchg
jmp
shll
testl
ret
sub
dec
jl
pop
cld
in
jp
and
adc
jb
adc
pop
adc
push
loop
xor
lods
or
push
inc
inc
mov
aaa
fmuls
sbb
movsb
mov
rclb
xor
stos
orl
or
int
mov
clc
mov
lock
jmp
imul
adc
xchg
repnz
ret
pop
movsb
icebp
inc
jge
insl
mov
or
cmp
je
cmp
or
or
je
int3
outsb
push
push
dec
add
fs
mov
or
inc
mov
push
push
or
out
sbb
mov
pop
sub
cmp
outsl
cmp
sub
std
dec
push
lcall
pop
mov
xlat
jae
pop
cmc
dec
jmp
addb
pop
push
aas
or
adc
and
push
and
adc
mov
imul
mov
mov
push
push
or
sub
sbb
loopne
add
add
fstps
add
adc
in
jno
adc
adc
push
or
add
xchg
jle
push
and
in
frstor
icebp
or
fstpl
fldl
std
dec
loopne
les
adc
add
in
sbb
rcll
aad
cwtl
or
sbb
shrb
fldcw
mov
or
sbb
fsubrl
and
mov
push
cmp
cmp
out
sti
test
sbb
xchg
sbb
and
pop
fsub
pop
fsubrp
jge
adc
push
stc
popa
repz
mov
and
popl
push
ss
stc
or
and
add
gs
lcall
xchg
std
inc
lret
shlb
dec
sar
xor
je
add
and
insb
rclb
cmp
push
xor
push
push
imul
jae
fcoms
jmp
sbb
mov
iret
xchg
jmp
push
jmp
push
test
aam
aas
pop
fisttpl
pop
rcrl
push
jmp
xchg
lods
iret
lret
push
push
sbb
ljmp
xor
repz
lret
push
or
xchg
push
divl
clc
andl
push
push
jbe
stos
or
and
fcoms
push
inc
sahf
sub
mov
push
lods
or
sbb
les
xchg
fs
in
dec
push
push
movl
in
jns
push
mov
outsb
or
mov
sarb
jns
and
or
adc
ja
pop
sbb
aad
adc
xor
cld
in
or
xchg
cs
mov
push
test
sub
punpckhbw
sbb
bnd
nop
sbb
xchg
and
mov
or
mov
pop
push
lods
add
push
mov
divl
enter
mov
loopne
outsb
daa
hlt
sbb
out
pusha
push
mov
add
popa
push
push
in
cs
and
stc
xor
jne
xor
repnz
das
cld
lods
mov
nop
pop
sub
push
lods
cld
sub
mov
aaa
push
insl
mov
sbb
pop
add
pop
fcomps
in
fiadds
push
repnz
xor
push
or
xor
and
sbb
or
cvttps2pi
repnz
outsb
or
or
push
mov
and
aas
addb
xor
outsb
js
xlat
and
inc
push
mov
mov
enter
and
popa
add
adc
shrb
nop
xor
out
sahf
push
mov
imul
jns
mov
int
jns
hlt
sub
dec
repz
repz
data16
xchg
iret
repz
mov
jmp
cmpsl
stc
cmp
push
sbb
sahf
out
inc
push
fs
jns,pn
out
mov
and
add
das
push
dec
roll
adc
add
add
mov
aas
outsl
jmp
sbb
cs
shll
pop
inc
mov
pop
mov
or
inc
or
jge
sub
inc
sbb
xor
add
int
andb
lret
jmp
push
push
jne
aaa
mov
dec
ja
les
cld
or
push
sahf
lods
cs
sbb
push
add
cmpsb
jno
fildl
fs
sbb
shlb
sub
fs
push
push
xchg
xor
or
mov
add
xchg
cmp
push
clc
jmp
adc
shrl
pop
mov
xor
sbb
or
cmpsl
iret
ds
jb
rclb
mov
push
sub
mov
stc
mov
or
mov
inc
pop
gs
inc
bound
mov
mov
sbb
addr16
imul
inc
and
cmp
aaa
leave
xchg
sbb
jmp
add
and
push
or
jne
out
jge
lea
rcr
adc
sbb
pop
push
add
mov
sbbl
jle
iret
adc
lcall
cmp
xor
sub
add
add
aaa
jns
sbb
daa
loope
mov
pop
add
call
sbbb
call
jge
pop
ret
push
rcrl
or
xchg
add
aaa
nop
in
outsl
test
popl
add
rclb
push
xor
int3
or
xchg
sub
out
andl
movsl
lock
cmp
mov
sbb
push
and
aaa
orb
add
pop
shll
ret
sub
cmp
or
out
out
mov
aaa
jmp
or
mov
push
or
push
add
add
movsb
rorb
shl
pop
add
cmpsl
sbb
push
int
out
popa
stos
push
bnd
aaa
push
mov
lds
jns
dec
push
cs
ret
les
sub
jge
sub
mov
pop
or
add
dec
mov
jo
jmp
push
mov
fdivrs
adc
add
lods
xchg
mov
add
or
sbb
and
scas
int
lds
push
lods
sub
dec
sahf
xor
add
nop
prefetcht1
and
fstl
xor
sbb
mov
push
mov
test
test
stc
test
ret
adc
cmpsl
inc
repnz
push
mov
add
insb
push
push
pop
pcmpgtb
popf
or
adc
push
or
lods
mov
push
cld
dec
shr
or
je
outsb
inc
or
insb
test
add
fimull
jne
insb
or
xor
test
jb
xor
inc
mov
lea
xor
mov
pusha
sbb
flds
dec
and
adc
mov
pop
leave
push
mov
add
mov
nop
add
push
push
stc
pop
xor
adc
add
mov
out
adc
add
mov
sbb
adc
dec
outsl
push
movsl
pop
sub
int
pop
daa
mov
push
sub
dec
test
call
xchg
inc
leave
or
leave
mov
mov
in
push
inc
addr16
ret
add
dec
or
test
xchg
push
add
mov
ja
mov
test
add
cwtl
push
or
push
inc
sub
inc
pop
mov
cmp
and
fldt
cmp
xor
lods
lea
outsl
pop
or
push
pop
add
movsb
or
pop
xchg
mov
ret
sub
xor
ret
xor
dec
add
lret
or
push
xchg
cld
orb
rcll
sub
pop
pusha
and
push
jg
adc
mov
inc
jno
icebp
adc
sub
nop
mov
jge
orl
or
add
sbb
dec
push
test
push
imul
sbb
sub
sub
add
and
and
add
add
inc
popf
sbb
enter
sbb
and
imul
adc
xchg
jmp
repz
cmp
lods
jnp
push
xchg
insb
data16
cmp
lret
pop
add
sbb
jg
pop
push
dec
sub
push
mov
mov
repz
cwtl
nop
test
mov
aad
or
jl
sbbb
sbb
sub
repnz
lods
jns
jge
adc
or
sbb
mov
push
fs
out
add
nop
and
add
clc
enter
sub
out
leave
jecxz
mov
xor
mov
mov
sbb
pop
imul
sbb
mov
or
rcr
xor
lods
sbb
je
or
adc
dec
pop
faddl
mov
xchg
ret
mov
sub
mov
cmp
orb
add
pop
rcl
cmp
call
cmp
icebp
dec
in
popf
sub
jl
mov
fldl
ret
inc
push
inc
fdivl
xor
push
or
push
sbb
pop
add
inc
shlb
mov
pop
add
les
sahf
dec
orl
jb
and
mov
push
inc
push
clc
lret
push
sbb
sbbl
push
push
notb
gs
lods
jg
pop
xor
jnp
xchg
insb
xchg
xor
xlat
mov
push
sbb
xchg
xchg
jns
sbb
dec
stos
add
pop
xchg
or
cmp
jne
test
xchg
push
lock
jp
mov
dec
add
and
sbb
adc
and
push
pop
and
inc
mov
fisubrs
loopne
jnp
lea
or
push
test
xor
mov
xor
xchg
adc
mov
shlb
mov
enter
loopne
fistpl
dec
push
dec
or
and
lds
out
movsb
sbb
iret
shrb
xor
push
inc
pop
pop
iret
loop
cmc
lret
imul
dec
popa
sub
leave
sbbb
pop
dec
jl
push
shlb
jl
push
ljmp
dec
adc
out
or
xchg
fprem
mov
cmpsb
fadds
mov
imul
rorb
or
adc
jl
xor
jae
jmp
cmp
jl
or
sbb
popa
jp
adc
out
decl
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
inc
push
pop
cltd
idiv
cmpb
sub
xlat
pop
xchg
pop
xor
clc
aas
int
aad
cmc
inc
fdivrs
xchg
adc
ret
push
pop
push
sahf
mov
lock
sub
aaa
fistl
dec
mov
or
xchg
add
push
jmp
hlt
add
dec
call
sub
in
in
xchg
out
xchg
jl
hlt
incb
test
or
add
lret
cmp
push
sub
in
dec
fsubl
daa
cmp
loopne
dec
clc
nop
push
add
popa
and
push
and
in
cmpsl
loop
sahf
mulb
lods
out
aad
and
mov
pop
dec
sarl
adc
in
rep
pop
push
les
mov
and
push
ror
aam
push
push
inc
inc
stc
adc
sub
sub
and
mov
repnz
pop
push
adc
clc
adc
daa
or
mov
mov
pop
mov
movsl
or
pop
sub
sub
loopne
inc
push
int
lcall
xchg
push
and
mov
out
sub
xchg
aam
fcoms
cmpsb
div
push
pushf
adc
movsb
rcll
inc
pop
mov
and
push
jl
mov
sbb
imul
das
dec
jo
das
or
adc
frstor
jb
mov
adc
pop
jns
lret
pop
fisubrs
dec
dec
or
adc
fmulp
inc
in
xor
pop
push
jle
xor
fs
push
cltd
les
testb
xor
sbb
mov
in
fimuls
dec
out
daa
push
xchg
mov
sub
nop
push
fsubrs
push
es
inc
outsb
and
ja
dec
xchg
dec
inc
lcall
cmpsb
sbb
jns
ficoms
and
pusha
sbb
shlb
and
pushf
push
loopne
push
rolb
push
iret
and
pop
inc
nop
and
sub
cltd
es
pop
test
imull
lret
in
cs
xor
gs
and
and
adc
das
inc
popa
leave
dec
adc
leave
add
sub
and
mov
add
jge
xor
xor
subl
dec
orl
or
mov
pop
fs
sub
sbb
jo
fs
xchg
dec
mov
movsb
pushf
dec
xor
and
mov
jl
enter
adc
sub
and
push
fsubrp
call
and
sub
popa
movsl
sbb
sub
push
int3
imul
int3
xchg
lock
dec
idivb
bound
pushl
daa
orb
imul
sub
mov
adc
cmp
ljmp
cmp
enter
pop
sbb
jb
pop
jl
pop
push
jecxz
pop
movsb
movl
addr16
add
aam
and
cmp
in
popf
movaps
mov
jge
js
mov
push
loopne
jge
push
vmovss
and
mov
pop
cwtl
loope
fcoms
pusha
add
sub
mov
lods
sbb
xor
punpcklbw
stc
sbb
sbb
enter
xor
nop
cmpsb
pop
pop
int3
loopne
addb
push
loope
push
addb
fimuls
mov
shrl
or
push
sbb
mov
movsl
cmp
or
push
mov
pop
jne
daa
mov
fsub
mov
je
xor
in
in
hlt
xorl
cmpxchg
jge
inc
sub
adc
mov
aad
pop
out
adc
lcall
shr
xchg
add
das
nop
test
imul
add
shlb
jo
and
or
lea
add
jo
adc
mov
iret
xchg
add
pop
jbe
lea
inc
sub
sub
cmp
fstl
outsl
xor
lock
inc
inc
sub
fsubrs
sub
aam
push
push
ds
aad
ficoms
adc
dec
test
inc
pop
loope
and
or
enter
lea
adc
rorb
mov
sbb
test
or
cmp
mov
mov
fwait
scas
push
push
shl
aaa
ret
divb
jmp
push
nop
dec
sbb
or
pop
mov
push
cmp
xchg
dec
hlt
xor
mov
imul
sbb
aad
out
jno
jge
mov
sub
mov
clc
fsubl
in
add
pop
or
add
and
es
jecxz
push
das
pop
adc
in
movsb
test
cmp
and
lret
cmp
push
mov
lods
dec
mov
mov
mov
cmp
ja
shrb
adc
pop
mov
adc
inc
shrb
cmc
pop
xchg
into
rclb
in
movsbl
sbb
shlb
push
shrl
push
jo
insl
js
add
mov
sbb
stos
mov
hlt
iret
push
iret
orb
add
aad
fcoms
push
scas
xchg
add
xchg
mov
pop
add
jg
imulb
pop
shrb
inc
pusha
sbb
add
or
jle
shlb
cmovle
inc
ljmp
mov
es
es
testl
sahf
add
xchg
shlb
jmp
test
mov
and
movsl
push
adc
push
ret
dec
scas
cmp
sbb
ficompl
cmpb
orl
stc
imul
push
push
lcall
cli
or
sub
xor
pop
pop
jmp
add
push
sbb
fisubs
cmp
jne
mov
or
push
add
jne
and
push
mov
push
jg
mov
testb
int3
test
xchg
jecxz
sub
adc
ret
data16
fmull
push
push
imul
fwait
pop
lea
rsqrtps
add
leave
and
adc
cwtl
pusha
or
fdivs
adc
push
inc
mov
cli
add
mov
or
mov
inc
push
pusha
xchg
xor
into
inc
and
and
fadd
cwtl
sbb
fsubl
lods
cmp
or
or
adc
ss
mov
adc
lods
enter
bound
and
int3
and
push
mov
and
push
in
ja
xor
mov
pop
dec
fisubrs
cmpsl
and
insl
mov
xor
push
lcall
dec
or
shll
pop
cmp
push
sbb
outsl
mov
adc
cmpsl
push
pop
add
and
shlb
inc
mov
push
out
adc
or
loopne
jmp
jmp
das
sub
add
add
jns
push
or
pop
cltd
loope
mov
sub
test
pop
stos
mov
xor
xor
cli
nop
loope
and
push
sub
test
dec
insb
pop
jne
ja
inc
insl
daa
dec
movsl
jmp
daa
sub
imul
cmp
std
cmp
cmpl
or
cmp
pop
gs
push
cmp
in
xchg
fisttpll
loope
cmp
push
scas
pop
mov
cmp
pop
cmp
sub
cmp
adc
cmp
sub
and
cmp
cmp
sbb
jo
and
sbb
dec
jge
add
add
sbb
insb
mov
add
dec
pop
rolb
mov
int
add
cmp
pop
or
lea
adcb
testl
jle
dec
add
push
mov
andb
in
cmp
jne
les
pusha
pop
add
hlt
stos
jecxz
cmp
sbb
pop
and
push
sbb
or
and
mov
jb
xor
mov
mov
aad
enter
and
loopne
insb
xchg
int3
dec
or
sbb
mov
pop
add
and
ret
inc
add
dec
mov
dec
push
cs
lods
jbe
rolb
in
mov
add
es
ret
cmc
mov
rorb
add
mov
in
pop
push
and
adc
aad
shlb
adc
mov
inc
movsb
call
mov
mov
mov
sti
xchg
jg
add
cvtps2pd
mov
and
xchg
sbb
sub
adc
cltd
scas
xor
jmp
shlb
xchg
sbb
aam
js
es
sbb
xchg
or
or
add
mov
or
cwtl
lea
test
nop
add
imul
mov
inc
div
out
push
xchg
pop
cmp
xor
ret
and
add
and
adc
sbb
add
fsubl
fnstsw
cmpsl
mov
jge
push
xor
shll
loopne
in
repnz
and
test
in
ret
add
negl
je
cmpsl
adcl
xorl
add
mov
push
and
aaa
outsb
adc
adc
push
or
push
es
ret
pop
xor
lahf
push
or
loop
sbb
popa
mov
loope
mov
movsl
jne
push
inc
cmpsl
jl
cmpsl
aam
mov
out
and
push
push
mov
cld
out
lods
cmp
xchg
cmp
pop
cs
incb
push
loope
ljmp
jl
mov
test
daa
add
movsl
lds
fwait
addr16
and
or
push
push
cs
daa
push
stos
adc
faddl
ret
xchg
pusha
xor
sahf
sub
divl
arpl
iret
push
sbb
or
mov
xor
test
jb
cmp
sbbb
mov
inc
adc
xor
mov
loope
mov
out
mov
add
push
cltd
jb
cmp
adc
or
and
fnstcw
jno
sahf
pop
mov
cmp
clc
outsl
xchg
push
cmp
cmpsb
or
addl
and
scas
cmc
dec
inc
clc
lock
and
mov
sub
shll
xor
sub
add
jne
testb
jae
mov
jge
call
jo
rcrl
push
std
mov
jmp
pop
aas
mov
call
add
mov
push
out
and
sub
idiv
and
cli
push
fcompl
cwtl
loope
lcall
mov
or
adc
hlt
jnp
xor
jle
adc
xchg
jbe
lea
js
add
mov
add
enter
test
adc
mov
call
push
sbb
xor
xor
lock
push
popa
dec
push
xchg
adc
outsb
xchg
enter
push
inc
pop
and
xchg
adc
pusha
pop
add
sub
sbb
jge
cmc
push
aas
push
add
add
add
xor
or
lahf
add
add
sub
rolb
push
fwait
add
sub
shlb
loope
adc
subl
push
xchg
into
push
sub
inc
cmp
insb
add
icebp
in
test
lcall
dec
adc
insl
pusha
and
push
mov
jecxz
or
xor
dec
inc
dec
mov
bound
and
adc
test
inc
push
xor
std
mov
dec
ja
jo
or
add
incb
xchg
dec
pop
or
jb
and
ds
and
xor
daa
fs
add
xor
xorb
pop
call
dec
pop
dec
sbb
sub
push
repz
or
inc
gs
add
adc
sbb
aam
pusha
or
xlat
popa
add
lcall
lods
aad
or
inc
mov
xchg
add
fimull
xor
and
dec
cmpsb
push
imul
inc
pop
xorb
loopne
xchg
lret
cmpl
dec
xor
xorl
add
orl
fbstp
fcmovb
mov
arpl
mov
outsb
cltd
add
push
adcb
sbbl
movsb
or
xor
push
add
and
sbb
pop
outsb
sar
sbb
or
aad
xor
pop
scas
insb
adc
push
jae
dec
rolb
mov
cmp
daa
and
inc
mov
popa
add
insb
out
pop
or
jmp
fdivl
gs
lfs
iret
nop
or
in
and
into
or
cmp
or
sbbb
or
add
xchg
inc
bound
jbe
or
mov
or
adc
mov
or
or
xchg
add
mov
pushf
pop
inc
xor
sarl
sarl
and
inc
sub
psrad
xchg
and
cmp
lods
fisttpl
int
adc
inc
push
add
adc
dec
scas
roll
out
shll
cmp
or
repz
xor
push
dec
ja
adc
ret
adc
ret
addps
fstpl
jmp
addr16
or
jne
les
or
out
sub
add
bound
jo
mov
cwtl
push
pop
mov
ja
inc
xor
mov
iret
arpl
or
sbb
jmp
xor
sbb
add
sbb
sub
mov
push
sub
xlat
rclb
cmpb
push
push
fidivrs
adc
jae
jb
sbb
and
pop
pop
xchg
in
scas
adc
add
add
or
sub
adc
cmpl
push
popf
leave
and
lret
je
xchg
js
jo
imul
push
cmp
rcll
lods
bound
mov
loope
cmp
stos
insl
popf
inc
inc
or
divb
jmp
sub
sub
outsb
sub
fcoms
jns
mov
pop
sub
data16
sbb
push
sbb
cli
loopne
sbbb
or
pop
jbe
cmp
ljmp
shrl
cmp
dec
push
adc
xor
aad
outsb
fisttpl
and
cmp
stos
mov
and
push
jns
xor
std
and
push
pop
and
inc
pop
cmp
jmp
subb
mov
and
sbb
push
cwtl
push
lea
and
adc
push
lcall
xlat
bound
jb
cmp
or
fmull
mov
push
mov
in
aad
cmc
leave
inc
or
mov
stc
fdivrs
nopl
stos
push
in
daa
int
mov
jne
push
adc
xchg
push
stc
push
cmp
int3
dec
je
push
in
sub
andb
rclb
shll
add
insb
ljmp
imul
inc
add
cmp
lods
pop
repnz
mov
sub
or
pop
fs
sub
adc
dec
push
add
subb
repz
push
mov
dec
and
mov
xchg
lahf
nop
cmp
mov
push
add
lea
stos
cmc
adc
jge
adc
adc
sub
add
sti
addb
cmp
aad
stos
or
inc
xor
push
arpl
movsb
push
ret
aaa
add
movsb
mov
or
jg
and
sub
roll
push
loopne
ss
and
or
sbb
or
into
push
sbb
add
adc
pop
and
rol
jp
mov
add
push
adc
inc
sbb
mov
xchg
daa
adc
das
popf
push
aas
jne
or
cmp
je
adc
or
mov
lods
repz
mov
mov
xchg
pop
mov
push
add
lods
cld
lret
mov
dec
cmovno
das
mov
dec
add
mov
jl
inc
xchg
clc
push
and
insb
push
add
xchg
pop
ss
lahf
sbb
mov
incl
jl
push
ja
fprem
fstl
and
push
or
push
sbb
cmp
sbb
gs
cmp
pop
xchg
jp
xchg
fstps
or
jne
movsb
rol
push
or
inc
mov
or
xchg
movsl
add
pop
dec
inc
mov
push
gs
ds
imul
gs
bound
clc
outsl
add
lock
jp
ja
jb
cmp
decb
daa
add
mov
inc
jmp
mov
xchg
subb
mov
push
adc
push
jo
mov
outsl
dec
pop
psllw
cmp
mov
cmp
imul
clc
sub
cmpl
mov
cmp
add
sti
stos
xor
add
sub
js
push
pop
cld
mov
mov
test
dec
test
xchg
jle
and
movsb
lret
jb
into
clc
clc
in
inc
cmp
jb
jmp
xchg
cmp
or
mov
xor
or
mov
sti
mov
adc
mov
inc
push
ljmp
and
ret
sub
adc
fcoml
adc
jb
xor
pop
xor
cs
or
pop
loopne
iret
pop
xlat
sbb
adc
inc
and
jle
nop
lea
add
jl
jp
sub
test
daa
adc
test
mov
test
xchg
js
pushf
pop
fiaddl
es
add
cmp
addl
and
icebp
shll
loop
rorl
or
in
repz
and
sti
adc
pushf
adc
addl
lea
cs
sub
test
mov
inc
push
cs
insl
in
push
sub
add
or
adc
pop
sub
mov
jge
xchg
or
xor
rorb
ja
pop
push
push
cmp
pop
fdivrs
imul
inc
sbb
ret
fimull
ss
sub
in
lahf
das
ljmp
lret
inc
jmp
mov
les
add
or
pop
ds
loopne
xchg
mov
std
aaa
fimull
out
or
shlb
jge
mov
xchg
leave
lret
jne
jae
cwtl
loopne
push
pop
or
lfs
mov
lcall
rclb
push
push
mov
lock
iret
test
mov
cmp
lea
pop
cmp
push
je
jae
xchg
xor
jo
bound
cmp
int
or
xchg
push
les
daa
xor
mov
pop
push
mov
jo
mov
test
jp
xor
cmpsb
popa
sti
adc
fwait
adc
adc
xchg
inc
das
or
lea
and
cltd
mov
sahf
push
mov
jl
pop
pop
lea
adcl
js
add
andl
fildl
mov
mov
xchg
xchg
jb
popa
add
les
aam
add
outsb
mov
js
cmc
incl
add
rclb
in
fsubrl
add
and
shr
faddl
mov
mov
inc
or
test
or
lods
and
subl
push
loope
ret
sahf
inc
popa
jp
popa
outsl
cmp
jns
inc
push
pop
scas
sbb
lcall
mov
adc
in
loopne
imul
pop
mov
mov
sub
push
mov
lcall
test
imul
mov
addr16
or
and
jg
ljmp
inc
sahf
ja
jno
xchg
call
mov
lret
or
sbb
call
dec
mov
xchg
icebp
loope
xchg
xor
andl
or
dec
mov
adc
adc
jo
dec
adc
and
cmpsb
cmpsl
jns
icebp
mov
pop
or
jge
push
je
insb
pushf
and
jb
add
mov
add
js
push
inc
mov
push
sbb
or
adc
sub
jp
push
imul
jl
pushl
jmp
inc
out
add
outsb
adc
push
cmp
sbb
adc
into
mov
pop
push
sbb
jl
pop
or
pop
rclb
out
push
push
inc
in
dec
push
xchg
push
call
das
dec
call
imul
popf
sbb
or
femms
and
dec
add
or
xchg
push
aam
out
decl
cmpsb
add
inc
loopne
push
push
or
adc
rorb
rcr
mov
mov
adc
jb
test
or
bound
xchg
xchg
xor
xchg
fmull
add
loop
push
mov
das
popa
adc
je
aad
jge
stos
movsl
inc
mov
ret
push
daa
movsb
orb
les
test
in
in
jmp
popa
in
push
jmp
in
imul
inc
mov
nop
push
and
and
jmp
mov
xchg
sub
dec
or
fldcw
push
pop
pop
xchg
adc
ret
mov
test
add
clc
or
jmp
ss
add
in
jb
repnz
xchg
pusha
leave
jno
inc
inc
add
mov
sbb
ret
xchg
les
ss
xchg
inc
fsubl
pop
das
add
andb
cmp
lea
mov
mov
js
add
or
sub
cmp
dec
dec
ficomps
shrb
pop
dec
add
push
sub
es
dec
insl
inc
sbb
and
insb
jne
add
loop
mov
xchg
push
jmp
je
popa
sbb
out
adc
mov
mulb
pop
daa
nop
jne
xor
mov
or
adc
mov
add
jmp
stc
xor
adc
push
push
adc
pop
int3
addl
add
adc
xor
pop
add
sbb
scas
and
adc
sbb
push
repnz
inc
mov
mov
lock
jle
and
out
or
int3
out
enter
sbb
push
cmp
imul
add
roll
pushf
inc
or
push
add
fldl
ret
hlt
inc
shlb
xor
dec
pusha
test
add
pop
jo
stos
xor
notl
les
aam
les
dec
or
push
push
int3
popa
lods
mov
push
sub
ret
xlat
cmp
add
inc
mov
push
or
push
cmp
mov
aam
call
inc
xor
aaa
nop
add
push
and
fsubrs
fucomip
jnp
push
pop
or
rcrl
scas
iret
rep
popa
std
ss
inc
cs
mov
enter
test
push
xor
mov
pushf
es
sbb
and
or
cmp
movb
test
cmp
mov
pop
arpl
cli
mov
jg
faddl
and
xchg
or
not
push
jmp
or
push
sub
add
jge
mov
mov
fcoms
add
ja
pop
subl
sbb
out
inc
add
jnp
gs
ja
je
popa
jnp
sub
mov
sub
mov
xchg
rolb
andl
pushf
test
jne
pusha
add
sub
mov
inc
xchg
pop
lret
sub
scas
mov
aas
or
daa
mov
mov
in
mov
dec
mov
xor
xlat
lock
and
out
dec
and
sub
test
cmp
filds
add
inc
mov
mov
mov
data16
adc
test
jo
jmp
cs
call
or
mov
add
lea
inc
inc
push
es
lret
add
mov
push
sbb
into
inc
pop
push
pop
clc
mov
push
pop
xor
test
lock
mov
and
push
jmp
cmp
jo
imul
bound
popf
jge
cmp
sub
dec
sbb
dec
insb
sarb
adc
jecxz,pn
pushf
mov
jecxz
push
in
adc
add
ret
pushf
out
lret
jo
or
push
cmp
xor
jne
lds
aas
add
aam
xchg
test
sbb
sbb
and
adc
sarl
mov
xchg
xor
jp
xor
es
adcb
mov
and
cmp
sbb
imull
sub
loop
out
xorb
test
xchg
es
iret
and
ljmpw
pop
or
cmp
lods
ljmp
sub
and
pop
scas
cld
and
loop
fdivrs
movsb
addl
inc
push
push
sub
repz
ret
bound
inc
and
pop
inc
xor
or
xor
xchg
ret
adc
inc
mov
mov
cmp
sbb
add
xchg
out
cmp
and
in
mov
mov
push
push
push
call
cmp
cmp
pusha
in
push
sub
shlb
imul
gs
dec
loopne
xchg
cmpsb
mov
sub
jmp
mov
xchg
push
icebp
or
dec
jecxz
pop
cmp
jae
push
jmp
add
push
push
icebp
mov
push
sbb
or
inc
adc
js
fwait
outsl
je
adc
mov
dec
mov
sti
shll
add
sahf
xor
mov
adc
loopne
sub
adcb
sub
stos
sti
jnp
in
xor
dec
dec
cs
out
inc
clc
or
sbb
cmp
movsl
mov
sub
pop
adc
inc
test
add
adc
pop
aaa
push
fwait
adc
cmp
or
push
rorb
pop
or
push
sbb
xor
dec
pop
or
xchg
int3
mov
rcr
shr
push
push
and
mov
imul
mov
push
gs
rcr
push
push
vmread
xchg
enter
jecxz
add
inc
mov
cli
insl
shl
push
iret
xlat
out
mov
pop
dec
add
push
cld
pop
fwait
xorl
mov
adc
adc
fcmovnu
or
cmp
out
cmp
jg
pop
jp
adc
sbb
cmp
sub
mov
rclb
sahf
xchg
dec
lods
mull
and
jp
filds
add
ss
fisubs
sbb
cmp
fcoml
daa
in
add
or
sbb
icebp
vrcpss
into
int
scas
inc
bound
push
or
pop
movb
push
loop
hlt
or
cmp
push
arpl
mov
mov
mov
neg
mov
test
inc
cmp
stc
adc
mov
push
push
mov
and
mov
or
movsl
fldl
add
mov
and
sarl
rep
movsw
push
sbb
sbb
movsb
mov
arpl
shlb
shr
mov
mov
inc
mov
adc
movb
xchg
dec
jge
cmp
movsb
xor
cmpb
and
mov
sub
cmp
movsbl
cwtl
jge
mov
ss
push
push
add
jb
and
daa
push
cld
je
push
push
scas
lret
adc
mov
mov
xchg
sbb
xchg
movsb
mov
mov
cmp
sbb
enter
roll
inc
add
mov
or
push
arpl
or
notb
jmp
inc
adc
dec
cmp
mov
ficoml
sbb
ljmp
lahf
xor
in
int3
les
inc
cmp
jo
inc
dec
in
cmc
rcrl
inc
andl
mov
insb
cmp
push
push
lock
push
lock
test
mov
sahf
dec
ja
das
and
mov
xchg
mov
and
sahf
and
insl
sbbb
add
in
in
add
in
or
or
jnp
or
jbe
jae
jae
jmp
or
por
jae
jae
jmp
adc
pop
adc
push
adc
dec
jae
jae
adc
dec
adc
aas
pop
jmp
jae
jae
sbb
xor
jmp
sbb
es
jae
sbb
and
pop
pop
jmp
jo
jae
and
or
jmp
and
fistps
cmc
fimull
push
daa
push
or
or
inc
adc
cmp
iret
repz
lea
lods
mov
iret
repz
vpmullw
repz
repz
jmp
ds
clc
std
add
jns
adc
sbb
and
jns
xor
ds
xlat
jns
out
dec
push
push
or
fnstcw
add
and
or
or
push
movups
adc
adc
push
pop
sbb
cmp
sbb
push
pop
and
and
aas
or
cld
repz
and
test
mov
push
xor
arpl
aaa
imul
jle
mov
push
mov
or
pop
jg
ljmp
push
pop
jae
test
inc
shrb
push
inc
mov
mov
ret
xchg
shll
sub
sub
scas
and
mov
adc
mov
inc
cmp
sub
push
jbe
push
aas
adc
and
stos
ret
lea
imul
je
jge
fwait
cmpsb
push
jmp
inc
push
push
and
pop
pop
cmpsl
in
les
jne
mov
scas
loope
movsl
fs
test
sub
movb
cmp
gs
fcompl
pop
mov
dec
mov
push
test
inc
ss
and
sub
adc
in
cmp
inc
into
and
repnz
mov
sub
adc
sub
sub
xor
jg
add
mov
inc
pop
add
push
xor
sub
mov
mov
xor
mov
add
add
add
inc
or
xchg
and
cld
add
in
lret
mov
xchg
push
push
or
push
leave
fwait
and
adc
push
lahf
inc
popa
and
loop
mov
movb
add
imul
adc
jecxz
mov
call
imul
xor
and
test
fnstsw
sub
push
push
pushf
sub
daa
cmp
and
xlat
andl
out
rolb
cmpsl
push
jne
outsb
add
push
inc
pop
loopne
add
xchg
or
xchg
sub
sbb
cmp
jmp
mov
jne
and
and
pop
test
nop
ljmp
cwtl
shll
mov
xchg
test
mov
xlat
fmull
cmp
sbb
adc
int
mov
loopne
testl
xor
xchg
je
dec
sahf
xor
loope
adc
sbb
mov
adc
xchg
clc
sbb
push
xor
xor
adc
cmp
cmp
pop
sub
add
or
inc
push
mov
mov
test
rcll
loop
rcrb
ret
fbstp
subb
jne
loop
aaa
fidivl
cmpb
add
mov
dec
jns
inc
pop
fwait
push
dec
imull
push
dec
add
push
pop
push
adc
xchg
xchg
pop
dec
ds
mov
mov
xchg
push
push
push
sarl
test
xchg
cltd
or
xchg
daa
inc
call
pop
cs
rorl
loope
push
push
data16
mov
xor
push
pop
ret
sbb
sbb
dec
adc
add
in
pop
and
sahf
test
rcl
push
xchg
cmp
xchg
push
mov
push
in
jp
add
push
push
mov
cwtl
or
aam
ficoml
inc
jne
push
push
aaa
add
nop
or
pop
push
add
push
stc
mov
jle
cmp
and
jne
add
lods
rcrb
inc
dec
lret
enter
fadds
leave
inc
and
add
scas
xor
xchg
sub
inc
xchg
je
scas
pop
push
stos
push
lods
loop
xlat
push
push
lods
jo
or
rcrl
sub
add
shr
cmp
lret
xor
or
adc
orb
xchg
stc
inc
add
mov
or
pop
and
insl
je
cmp
mov
inc
sbb
pop
or
add
rolb
cmp
push
repz
add
mov
fs
xchg
inc
pop
pop
add
mov
aas
call
dec
nop
pop
leave
cmp
mov
xor
mov
add
mov
sub
shlb
ljmp
movsb
pop
dec
dec
push
cmp
add
push
ret
popa
add
push
or
and
pop
shrb
cmp
inc
pop
loop
add
or
sub
push
loopne
mov
xchg
pusha
fistl
movsl
mov
xchg
jo
cmpsb
outsl
inc
xchg
fists
cmp
stc
or
add
add
push
push
dec
mov
add
pop
ja
outsl
nop
push
addr16
nop
push
pop
mov
sbb
rol
sub
nop
pop
pop
sub
jne
insb
lock
jae
adc
or
adc
jmp
push
movsb
cwtl
addb
bound
add
xchg
xchg
leave
rolb
push
pop
in
xor
jmp
lods
push
push
insl
pop
mov
stos
jl
iret
mov
or
ds
inc
add
je
cmp
subl
inc
jl
addb
out
subb
mov
fcoms
nop
xchg
cwtl
pop
push
pop
cltd
movsb
pushf
mov
movb
add
enter
inc
mov
mov
push
pop
xor
mov
xchg
rcrb
pop
int3
gs
push
xchg
rcrb
fcoms
in
dec
fsub
xor
or
push
add
dec
in
aaa
test
push
cmpsb
jb
daa
call
fcoml
test
pop
cwtl
add
lea
add
shlb
sub
mov
add
sub
lret
ret
push
jl
and
or
cmp
jl
sub
cltd
int
inc
lea
clc
aad
cmp
je
dec
push
rcrl
ja
or
andl
and
das
push
daa
imul
packssdw
jmp
xchg
hlt
rol
and
cmp
arpl
cmp
jne
adc
or
jl
jmp
out
push
sti
or
add
sbb
stos
repz
mov
cmp
je
jbe
sub
jo
jge
and
sub
dec
sbb
add
sbb
xchg
shll
inc
add
sub
bswap
shr
pop
das
sub
sarl
js
movsb
loopne
mov
sbb
push
push
icebp
and
fs
sub
or
test
mov
call
jns
sub
mov
int3
jg
mov
cmp
xorb
jg
or
sti
jge
inc
push
hlt
cmp
jl
cmp
add
jle
ret
cmp
add
imul
pop
inc
mov
xlat
sbb
cmc
xor
fucomi
sub
sbb
sbb
out
or
pop
add
push
sub
ds
aam
add
nop
ret
fcoml
adc
ret
js
add
pop
push
inc
pop
xchg
mov
push
jbe
mov
sbb
xor
cmpb
call
cmp
addl
in
jge
push
or
dec
enter
push
xchg
or
daa
test
cmp
sub
loop
xchg
lock
add
jne
xor
loope
adc
mov
test
popl
mov
out
sbb
or
iret
cmp
xchg
and
dec
bound
push
cmpsl
xor
jmp
and
sbb
cli
mov
dec
xchg
decl
cmp
jns
arpl
sbb
ret
loope
jge
lahf
sbb
xchg
and
test
inc
add
push
sahf
imul
cmpsb
xchg
pop
nop
xor
test
or
je
xor
jne
push
loopne
xchg
jo
ret
and
or
mov
inc
insb
xchg
mov
in
pop
mov
popf
lods
inc
and
adc
dec
popa
aad
stc
roll
mov
aaa
mov
adc
fs
xor
les
dec
jne
shlb
adc
out
add
daa
sub
aam
xchg
imul
stos
or
lret
in
jmp
sbb
push
and
inc
push
xor
fbstp
xlat
test
xor
test
or
sub
adc
adc
inc
mov
pop
inc
mov
aas
sub
dec
add
dec
loop
scas
test
add
and
inc
add
mov
xor
fmuls
inc
aad
repz
sub
push
scas
cltd
or
fsts
adc
or
dec
xchg
push
ja
and
and
mov
imul
pop
mov
in
xchg
icebp
sbb
or
lcall
and
add
imul
jno
test
test
xor
sub
js
ret
stos
add
add
xchg
outsl
pop
dec
inc
xchg
negl
sbb
add
jo
loop
movzbl
inc
arpl
dec
or
pop
pop
add
cmp
push
jmp
pop
data16
dec
lahf
and
xchg
xchg
aam
adc
and
add
sbb
mov
inc
ljmp
cmp
pop
jo
mov
sti
or
jne
pop
push
loop
dec
popa
pop
shrb
jmp
pop
jbe
mov
test
cmp
add
ret
inc
pop
test
stc
adc
clc
inc
cmp
stc
and
test
popf
or
adc
and
push
push
cmp
cmp
add
adc
jecxz
bound
or
dec
jmp
adc
daa
push
sub
shrb
inc
ret
add
jo
push
stos
dec
pop
fsubs
repz
push
dec
ss
jae
push
jle
lock
in
arpl
insl
ret
sahf
pop
orb
stos
push
mov
lock
mov
add
xchg
scas
gs
in
ret
fwait
inc
movsb
add
mov
push
pop
xchg
mov
sbbl
sub
lock
push
push
mov
rolb
pop
adc
pop
enter
inc
scas
xor
push
inc
sub
mov
shrb
xor
xor
test
js
fisubrl
sub
pop
mov
add
add
jns
pop
in
push
sub
iret
outsb
sub
ss
int
xchg
push
or
jl
push
sbbl
or
sbb
push
inc
mov
or
ret
or
sbb
inc
repnz
or
cs
ret
lret
scas
and
mov
mov
les
sub
movsb
clc
or
subl
sbb
xchg
out
push
add
add
faddl
fstl
fldz
fcomp
fnstsw
xor
scas
rolb
sub
fsubr
pop
faddp
cmp
and
mov
push
ds
or
test
jg
mov
cwtl
clc
sbb
dec
or
xchg
inc
adcb
jb
stc
fadds
mov
pop
hlt
xlat
hlt
sub
and
pop
hlt
jl
cmp
pop
push
ret
push
lea
sbb
insl
pop
jge
jmp
loop
insl
adc
sbb
cltd
dec
add
add
push
mov
push
icebp
das
cmp
pop
push
lahf
or
dec
je
pop
insb
andl
pop
mov
mov
rcr
cmp
cmp
jae
inc
sahf
and
xchg
dec
mov
lea
aad
or
sbb
xchg
or
adc
adc
js
sub
test
cmp
add
adc
sbb
xchg
push
cld
imul
mov
fcoml
push
mov
pop
ret
mov
lea
mov
sarb
jns
fimuls
enter
rcrl
int3
loopne
rorb
ljmp
cmp
add
in
pop
cmp
in
addr16
push
cli
pop
xor
pop
std
ljmp
mov
push
mov
jo
sub
insb
bound
cmp
addb
mov
int
pop
lods
jmp
add
sbb
mov
hlt
and
or
data16
adc
mov
add
cmp
or
add
dec
jb
aam
or
sub
insl
push
pop
faddl
fstps
or
xchg
xchg
test
fistl
pop
in
xchg
je
addr16
xchg
and
loop
add
cwtl
push
out
add
push
push
cmpsl
ret
or
loope
adc
rolb
or
es
xchg
xchg
jno
ret
push
xchg
push
popf
mov
jge
inc
lret
sti
push
lods
and
push
and
sti
cs
mov
or
aaa
add
popa
push
push
aad
add
adc
insb
sub
push
sbb
or
jg
jb
push
and
mov
daa
dec
pop
jb
adc
or
sarb
or
notl
mov
lods
adc
xchg
orb
fs
rclb
fmuls
jo
rol
xchg
xchg
stc
dec
sub
jo
dec
dec
test
ja
and
jno
ret
das
adc
or
mov
jecxz
testl
pop
sbb
imul
xchg
mov
sub
sahf
and
and
mov
mov
xlat
xchg
and
or
shll
add
push
push
push
dec
mov
adc
sbb
pusha
or
out
add
rcrb
or
mov
pop
add
jno
pop
push
pop
sbb
jne
mov
pop
rsqrtps
ret
jge
cmp
ret
and
or
mov
mov
rcrl
pusha
or
push
add
dec
loope
xchg
adc
pop
sbbb
aam
inc
js
pop
push
pop
ja
jg
cld
cmp
je
xor
push
inc
pop
xchg
ret
xchg
ret
mov
movsb
aas
push
sub
push
lds
dec
sbb
or
rolb
push
lret
mov
jge
jae
xorl
lds
push
pop
adc
fcomps
ret
stos
inc
ss
bound
or
addb
fldcw
popa
mov
xor
mov
adc
movsb
push
data16
lock
jb
std
jg
and
imul
mov
jbe
push
xor
adc
insl
test
test
adc
jl
mov
add
cmpsb
mov
cwtl
outsl
pop
fpatan
sahf
test
fs
push
cmp
dec
mov
add
jle
xchg
or
inc
cmpsl
ljmp
aaa
pop
rorb
pushf
xchg
out
adc
mov
and
mov
addb
mov
push
xor
inc
loop
pop
shrb
sub
iret
call
mov
xor
fldenv
inc
mov
lock
mov
xor
dec
push
cli
or
pop
in
xor
fiadds
mov
dec
pop
pop
xchg
ret
jbe
mov
jl
pop
popaw
ljmp
xchg
sub
ljmp
mov
sub
cmpsl
cmp
push
call
sub
jb
test
adc
int
lock
sub
jge
add
and
adc
xchg
stos
jnp
stos
adc
in
mov
insb
sti
xchg
or
lret
lock
dec
sbb
in
pop
fistl
and
add
jne
pop
mov
daa
sub
bswap
xor
jmp
js
add
test
pop
push
inc
lods
in
jo
enter
push
xchg
push
mov
mov
mov
adc
test
int3
mov
sbb
lea
mov
dec
mov
mov
xchg
popa
clc
lcall
lods
pop
rol
cs
and
jb
pop
add
add
loope
mov
aam
fdivrs
faddl
rorb
and
in
xchg
pop
sbb
xor
movsl
pop
dec
or
cmp
or
pop
stos
and
call
xchg
pop
add
cmp
sub
movsb
inc
cmp
xor
push
xor
add
or
rolb
jne
cmp
inc
jbe
stos
add
inc
push
sbb
mov
sbb
aaa
fiadds
rolb
mov
iret
or
inc
lret
cld
cmpl
dec
lret
sub
or
or
sub
xchg
jge
push
and
or
push
inc
std
into
pop
push
sbb
mov
cmp
dec
and
sbb
mov
pop
test
ficoml
mov
push
add
inc
sub
movsb
xchg
add
pushf
xchg
mov
push
fucomi
or
out
orb
sbbb
push
test
pop
dec
pop
xor
pop
lods
movsl
inc
loope
xchg
sub
or
and
ficompl
rorb
push
jmp
nop
out
aaa
push
rclb
mov
nop
iret
sbb
addl
or
mov
push
adc
jnp
mov
jle
inc
add
push
cwtl
xor
test
aam
push
subl
or
or
orb
pop
sti
xchg
fadds
lret
sbb
mov
mov
add
arpl
mov
mov
js
xchg
sbbb
enter
or
je
sahf
leave
lods
loop
jl
in
cli
sahf
sub
pop
mov
je
fsubs
dec
loop
inc
cmpsl
inc
sub
add
cmp
repnz
cmp
cmp
xlat
mov
jns
and
add
nop
outsl
aam
jae
nop
inc
cmp
adc
aaa
pop
xchg
dec
xlat
orb
cmpb
in
push
incl
push
inc
shlb
mov
lret
or
sub
pop
sbb
xchg
add
mov
and
xchg
add
push
mov
inc
loope
mov
lahf
mov
add
jge
xor
int3
push
pop
imul
insb
movl
fsubrs
fs
sahf
inc
pop
popf
lret
inc
push
or
in
aad
ret
or
je
pop
ss
xchg
add
jl
sub
lea
add
and
cmpsl
dec
aas
popf
push
push
js
das
xchg
and
mov
sbb
dec
xor
mov
adcb
inc
sbb
test
or
es
push
adc
js
cmp
add
mov
fcoml
inc
or
fnstcw
or
leave
or
mov
inc
loopne
mov
dec
cmp
cmp
sub
adc
or
pusha
xchg
push
mov
add
inc
sub
andb
add
inc
sub
mov
xchg
push
mov
sbb
xchg
xor
aam
test
ja
jno
aaa
cmpsl
push
inc
pop
jnp
or
outsb
pop
out
mov
dec
repnz
xor
xchg
pusha
mov
adc
add
and
pop
and
sub
xor
add
or
or
sti
jno
mov
adc
mov
dec
lcall
xchg
loopne
sub
and
xor
and
sbb
addb
repz
js
stos
add
adc
and
shll
xchg
loop
test
xor
adc
in
mov
lret
icebp
jmp
cmp
sub
fidivs
push
test
mov
loope
movsl
mov
loopne
popa
aad
test
stos
outsl
subb
fstps
bound
xchg
dec
fcompl
in
les
mov
test
mov
cmpsb
adc
rcrl
out
aam
push
adc
lods
imul
inc
adc
add
lods
int
dec
lock
inc
mov
enter
or
add
lret
adc
sbb
loopne
push
jge
stos
test
sbb
mov
push
ja
hlt
or
inc
adc
push
jmp
mov
add
cmp
adc
pop
inc
xor
in
xor
xchg
sub
xchg
loopne
popf
test
popa
cmc
dec
and
ljmp
fmull
nop
repz
daa
call
push
push
nop
test
xor
pop
adc
lock
inc
js
push
sarb
in
adc
adc
dec
aaa
test
jo
rcl
lret
ret
adc
mov
insb
xor
or
mov
lcall
cmp
sbb
mov
popf
inc
in
and
mov
add
xlat
and
inc
test
xchg
test
push
stc
dec
and
gs
dec
sahf
hlt
pop
cli
push
ret
xor
aam
je
cs
xor
jle
movzbl
sbb
outsb
inc
aaa
mov
sbb
cmp
jge
fisubrl
and
push
jl
mov
lods
pop
test
sub
pop
pop
test
dec
mov
or
sbb
adc
add
pop
mov
jno
adc
add
jl
or
stos
mov
xchg
add
insb
add
and
or
dec
adc
or
loope
loope
add
sbb
ja
cld
mov
add
sub
push
test
cmp
add
sub
mov
sbbb
push
dec
cmp
xchg
hlt
or
sub
bound
icebp
cmc
adc
hlt
dec
std
hlt
insl
add
cmp
mov
mov
or
or
fdivrs
and
jne
mov
adc
fld
test
mov
cmpsb
ss
mov
loopne
and
jnp
push
flds
cltd
cmpsl
pushf
loop
int
data16
mov
fisubrl
enter
push
insb
adc
cmp
test
pop
dec
and
cmp
mov
cli
mov
lea
xorl
pop
js
cmp
js
mov
mov
gs
icebp
add
jp
hlt
gs
scas
pop
inc
jmp
sub
sbb
mov
and
test
push
roll
mov
jl
mov
xchg
out
or
movl
js
adc
scas
mov
mov
lea
stos
sbb
rorb
xor
sbb
adc
stc
in
rcll
sarb
mov
popf
adc
adc
sbb
fs
lcall
mov
incl
sub
pushl
mov
mov
ds
hlt
xchg
pop
jmp
adc
jo
enter
dec
nop
xor
insl
int3
loop
out
sub
ss
sub
std
stc
dec
sub
pop
les
jno
sti
or
jp
cwtl
inc
inc
xor
inc
ss
enter
stos
in
adc
add
push
push
push
cmp
or
cmp
jbe
jne
rcrl
fcoms
cwtl
xchg
clc
fcomps
mov
rcll
mov
xchg
movsb
lret
cmp
or
in
cld
clc
or
sbb
cmp
cmp
std
mov
es
xor
ds
hlt
das
xchg
adc
mov
and
or
dec
or
push
add
push
mov
lea
out
and
ss
jnp
adc
enter
call
out
pop
mov
mov
dec
jns
mov
lea
cmp
jbe
fcoms
mov
push
push
and
mov
jno
pop
inc
pop
cmp
rorb
jae
pop
add
xchg
icebp
lock
mov
ljmp
mov
push
mov
das
push
dec
mov
imul
out
xor
or
inc
xor
pop
sbb
outsb
dec
jo
mov
loope
nop
dec
and
fsubs
test
icebp
jbe
add
repz
test
mov
and
dec
stos
lret
mov
or
push
jne
cwtl
and
test
pusha
pop
scas
scas
lret
lcall
mov
jle
sbb
sub
mov
adcb
add
add
stos
mov
or
les
sbb
xor
sub
cld
out
xchg
adc
loop
jns
sahf
inc
fmuls
shl
sbb
outsb
jne
mov
push
push
invd
mov
hlt
inc
lods
xor
fcmovnu
sub
pushf
fs
mov
pop
mov
in
add
pop
mov
sbb
jecxz
cmpsb
push
fdivr
push
andb
fmull
sbb
fs
or
sub
cmp
das
ror
test
xor
ret
pop
arpl
add
loop
test
jl
imulb
dec
or
fnstcw
dec
filds
xchg
or
call
cmp
xor
push
xlat
into
add
xchg
adc
je
call
jecxz
mov
out
mov
pop
mov
mov
jo
sbb
xor
loope
in
dec
cmp
sqrtps
jne
das
ret
les
insb
xor
add
lock
out
or
push
out
ja
mov
jbe
push
mov
ret
push
add
push
pushl
pop
jb
push
sub
pop
sub
or
xchg
adc
in
filds
add
sub
scas
push
aam
xchg
or
ja
xchg
push
xchg
or
push
sbb
lahf
cmp
cs
push
test
dec
mov
or
cmp
gs
iret
fidivrl
or
lock
sbb
xor
pop
mov
dec
or
in
imul
clc
leave
lds
sub
add
aas
cmp
jmp
ficoms
inc
fmuls
shll
add
das
dec
dec
adc
and
sbb
in
add
pusha
loop
jne
out
cmpsb
test
cmpsl
xchg
mov
les
xchg
std
sub
mov
adc
int3
add
push
mov
aad
ret
jg
mov
push
cmp
mov
or
sub
lea
jbe
cli
pop
cmpsl
mov
push
push
es
inc
adc
jne
test
xchg
mov
jg
jg
ljmp
shlb
mov
ret
cmp
imul
pushf
xor
sti
imul
dec
in
pop
bound
shll
inc
inc
jmp
inc
fs
sub
push
mov
cmp
fadd
icebp
add
call
adc
ja
push
jmp
test
popf
sub
mov
addr16
sbb
sub
fimull
cmp
hlt
xorl
jae
xlat
cmp
mov
nop
aam
jge
cmp
ret
mov
add
in
dec
js
sbb
mov
cmp
inc
in
and
test
pop
pop
in
imul
cli
sbb
aad
in
pop
in
fs
or
popf
inc
daa
ror
insl
stos
je
out
fcoms
mov
pop
inc
pop
sbb
nop
test
xor
and
mov
inc
dec
call
lods
or
popa
cwtl
cmpsb
mov
add
xor
adc
push
add
fmull
sbb
mov
and
stc
rol
push
imul
enter
je
outsl
fsubrs
xor
in
aam
adc
xor
or
movsl
loope
jge
jo
je
push
sbb
push
sub
leave
pop
add
push
dec
clc
or
je
add
shll
jmp
je
outsl
jle
notb
cmp
fisubrs
sbbb
lods
cmpsb
loope
and
xchg
and
addb
jbe
push
fwait
hlt
inc
fcompl
push
lahf
mov
jle
xor
sub
pusha
out
push
push
push
dec
aad
xchg
adc
mov
or
xchg
mov
mov
inc
sub
scas
js
icebp
lea
xchg
inc
or
jae
dec
jp
or
ret
or
cmp
cmp
adc
pop
setne
or
clc
lahf
cmpsb
pop
call
mov
mov
ljmp
inc
xor
test
scas
test
xchg
add
or
nop
cmp
add
push
pusha
mov
sub
add
push
stos
jo
mov
xlat
xor
dec
jl
fstl
test
popa
cld
dec
rcr
dec
xchg
push
add
sub
pop
sub
stc
push
cmp
pop
test
data16
jmp
sub
in
iret
lcall
jbe
inc
icebp
imul
jle
les
imul
loope
lea
add
xchg
test
aas
mov
xchg
rorl
mov
lret
jl
mov
movsl
adc
jmp
push
add
rorb
dec
lock
call
out
or
cmp
test
xor
fcompl
ja
adc
pushf
popl
adc
not
loop
test
xchg
push
jecxz
push
cld
incl
xchg
fmull
cmp
jbe
add
sbb
or
jo
shrb
out
and
aas
pop
add
inc
push
add
int
ja
cmc
add
mov
divl
in
adc
stc
xchg
xor
and
or
inc
pop
push
nop
pushw
or
sub
sbb
dec
sahf
lahf
andb
addb
scas
mov
cwtl
pop
adc
movsb
data16
and
test
and
push
jo
pop
js
pop
js
jp
pop
icebp
mov
in
xlat
mov
sbb
xor
add
jb
push
nop
add
ds
enter
out
xor
lcall
mov
xchg
ret
in
dec
sahf
mov
lahf
adc
xchg
cmpsb
jo
or
ret
test
in
sub
sub
mov
inc
or
xchg
adc
cmc
inc
add
popf
push
lret
test
pop
xchg
lock
mov
push
mov
inc
leave
arpl
dec
and
xchg
fidivs
adc
pop
adc
inc
and
lcall
xor
sbb
lcall
sbbb
cltd
push
lods
fwait
rclb
rol
add
adc
shlb
mov
inc
lea
push
lock
xorb
daa
add
jl
sub
inc
and
pop
pop
add
jmp
add
into
stc
sub
add
push
or
and
in
sbb
push
push
jmp
clc
and
cmp
in
push
sub
sub
jns
xor
add
into
in
mov
addl
mov
cmp
push
add
inc
xor
rolb
cmp
imul
add
or
cmp
in
push
dec
sub
push
mov
pop
enter
or
adc
je
jo
mov
jns
jle
push
mov
jmp
push
and
aaa
or
pop
lock
sbb
and
pop
test
mov
sbb
or
adc
inc
xchg
out
add
test
fs
mov
shlb
mov
jle
dec
xor
push
sub
or
jl
mov
and
loope
jo
je
dec
cwtl
push
jo
stos
mov
push
stc
inc
les
dec
adc
pop
lods
enter
ror
cwtl
inc
xchg
cmp
daa
test
mov
xor
push
dec
or
shlb
xor
call
rol
adc
add
sub
mov
in
inc
adc
cmp
js
sbb
push
ss
sbb
sbb
lcall
lock
dec
xchg
in
mov
sbb
jns
and
pop
and
in
cmp
sbb
fisubrs
push
sbb
leave
mov
or
dec
sub
andb
cmp
xor
icebp
pop
xchg
push
cltd
std
incb
mov
inc
push
mov
cmp
enter
xchg
push
cwtl
sub
into
jne
pushf
inc
dec
mov
push
sbb
adc
mov
mov
pop
movsb
test
inc
push
lods
mov
sub
lods
rorl
mov
push
mov
int3
inc
and
imul
sahf
cs
xchg
push
mov
pop
in
add
or
mov
adc
pop
sbb
mov
enter
xor
int3
lock
mov
sub
add
cmp
ret
int
sub
pop
or
cmp
push
js
jo
mov
popa
call
and
dec
push
das
push
ljmp
sub
sub
and
call
fmul
aad
dec
fmuls
lds
or
sub
stc
outsb
mov
cltd
aam
cmp
mov
aaa
cltd
nop
movsl
in
lods
dec
mov
pop
sbb
inc
mov
test
out
mov
add
add
cmpsb
fs
xchg
loopne
pop
inc
dec
lea
sub
add
sahf
into
imul
add
fisubl
test
add
pop
cmpsl
lea
insl
lods
arpl
repz
inc
or
jl
sbb
push
fwait
inc
adcb
inc
mov
out
dec
sbb
sahf
jo
fdiv
int
sbb
and
ret
lret
jne
std
xchg
lea
aas
and
push
dec
push
sbb
lcall
and
sbb
and
shrl
clc
arpl
sbb
push
sub
add
pop
dec
cmp
arpl
test
in
add
in
loope
inc
mov
aaa
push
sub
mov
jno
es
out
mov
inc
lods
add
adc
nop
ds
mov
adc
or
es
jns
mov
jp
mov
mov
inc
and
aas
lods
in
inc
or
add
adc
imul
bnd
jp
test
in
dec
or
sub
jbe
inc
mov
pop
aad
fbstp
dec
je
imul
imul
icebp
pop
cmp
jmp
and
daa
sti
nop
push
xchg
mov
shlb
nop
pop
push
sbb
push
mov
sbb
imul
cmc
jmp
rep
dec
int
lds
mov
pop
test
inc
mov
enter
hlt
jne
push
fcompl
leave
clc
pop
ficompl
jmp
enter
addr16
and
aas
aaa
jo
mov
mov
call
ffreep
or
cwtl
and
or
sub
in
dec
push
insl
cmp
or
sub
dec
cmp
inc
add
into
popa
fisubl
addr16
and
test
mov
inc
testb
insl
xor
orb
adc
pop
jge
fildl
and
imul
push
dec
in
add
sbb
adc
xor
jo
fbld
pop
cmpl
jp
xchg
rolb
sub
jg
cmp
xchg
or
lock
hlt
nop
sub
push
and
sub
test
nop
test
push
push
add
push
mov
popa
mov
mov
xor
mov
sbb
xor
inc
cli
xchg
mov
ret
test
inc
lea
push
sub
mov
mov
rorb
nop
push
xor
fdiv
out
movb
je
jp
dec
jb
std
and
enter
movsb
cmpb
imull
jmp
movsb
pop
xor
shr
test
push
add
pusha
popf
and
and
mov
mov
adc
pop
sub
lds
pop
cmp
rcr
loop
push
mov
xchg
rorl
clc
inc
and
scas
adc
push
pusha
or
je
movsl
cwtl
fld
add
add
adc
ljmp
xchg
xor
pusha
adc
mov
ss
mov
push
scas
mov
cmp
cmp
push
or
lea
fcoml
pop
fsubrl
sub
and
push
sbb
loop
sub
je
inc
cmp
adc
rcrb
or
add
roll
imul
xor
std
mov
imul
sub
jmp
mov
adcl
sub
inc
xor
sbbb
push
dec
sbb
dec
add
mov
jns
add
cld
pop
test
add
adc
mov
mov
movb
mov
sub
outsl
adc
push
sbb
lods
dec
sub
pop
adc
ds
dec
loopne
inc
sub
ss
lock
mov
pop
cmp
add
test
nop
jg
pop
mov
xchg
popf
cs
push
cmp
inc
add
pop
inc
fcoml
sub
xor
sbb
mov
push
bound
ss
out
dec
mov
sub
pop
imul
testl
popa
push
mov
dec
sbb
push
xchg
pop
mov
std
dec
push
outsl
push
push
outsb
push
cli
daa
cwtl
dec
adc
push
push
sub
cmp
mov
js
push
add
adc
push
mov
inc
mov
add
pusha
stos
mov
and
fimull
inc
inc
ljmp
jl
sti
and
push
in
or
push
test
or
add
xor
mov
and
mov
xchg
push
jle
js
sti
je
push
pop
push
push
push
push
ret
or
dec
orl
adc
pusha
or
cltd
jmp
leave
mov
shr
mov
in
daa
push
mov
push
xor
adc
push
sub
and
imul
xchg
in
inc
add
jb
enter
jnp
nop
mov
iret
cmp
xor
xor
in
add
adc
or
push
das
push
push
stc
pusha
or
xchg
cltd
nop
pusha
or
mov
pop
pop
adc
mov
xchg
mov
dec
lds
pop
pusha
adc
xor
jo
add
icebp
push
cmp
add
push
inc
xor
jmp
inc
add
adc
jnp
jbe
mov
call
test
dec
inc
or
dec
mov
add
jmp
loop
push
xchg
jmp
xlat
adc
push
stc
or
sub
sub
push
out
fmull
xor
out
jge
adc
jne
and
sub
lret
mov
adc
test
cwtl
adc
iret
mov
mov
mov
test
push
lds
loope
add
mov
or
add
add
inc
cltd
xor
ret
or
inc
loopne
add
es
add
sbb
in
push
stos
jno
mov
mov
inc
int
in
pop
mov
popf
nop
adc
mov
and
lds
ss
xor
pop
repnz
rolb
dec
cmc
ret
fsubrs
imul
int
jne
sub
lods
mov
mov
rol
add
rcll
enter
pusha
cmp
lret
adc
rcl
jmp
lret
dec
or
dec
aad
cmc
cmp
rcrb
ret
push
cmp
fsubrs
push
add
movsl
pushf
xchg
xor
push
leave
sbb
xor
jo
push
xchg
cli
or
jge
js
in
call
mov
mov
dec
pusha
mov
rol
mov
jg
inc
lret
pop
xor
shr
xor
es
mov
rol
xor
shr
xor
adc
add
add
add
mov
shlb
stc
dec
out
fs
or
jae
in
or
and
xor
add
add
aam
sub
cmp
mov
push
test
mov
ror
mov
fisubrs
shrb
and
and
xchg
push
aam
aaa
adc
xor
push
fs
xor
repnz
repnz
movsl
rcrb
or
mov
neg
push
or
xlat
ret
rcl
add
add
push
rol
inc
ss
add
in
imul
aam
call
push
scas
sub
ljmp
push
lcall
add
push
sub
dec
shll
fcomp
loopne
jae
imul
lret
xor
call
xchg
shl
in
push
cmp
jns
mov
sbb
push
bound
pop
mov
or
cmp
pop
aaa
mov
loopne
shll
cltd
call
xor
loopne
loopne
in
dec
in
call
jo
loopne
xor
sarl
rcl
xorl
xor
push
or
popa
mov
enter
mov
push
xor
and
and
out
iret
or
out
into
add
and
shrb
inc
adc
orl
mov
addb
pop
inc
inc
jo
ret
push
jo
rcll
add
mov
cwtl
pusha
lcall
mov
adc
push
loop
sti
rcrl
mov
add
add
pop
bound
jbe
call
insb
fisttps
or
clc
jp
push
and
add
inc
lcall
inc
nop
cmpsb
imul
int3
popl
rcrb
inc
add
aas
mov
xchg
cmpsl
rorl
and
stos
addb
aam
aaa
xor
and
dec
sub
dec
shl
call
lret
pop
inc
shr
rolb
inc
or
push
xorl
push
push
push
xor
shlb
rcrb
inc
sub
dec
xchg
sub
xchg
pop
andb
dec
add
or
xor
jb
push
sahf
dec
fs
or
pop
mov
xor
push
xchg
xor
adcl
push
and
or
push
push
rorb
pop
cmp
xchg
or
add
pop
sbb
push
dec
mov
push
cmpsb
repnz
rolb
push
xadd
or
xchg
or
je
mov
add
inc
inc
pusha
and
sbb
pop
mov
rclb
adc
orb
rorl
loopne
jno
andl
imul
dec
dec
and
xchg
icebp
stc
stc
stc
mov
das
add
cmp
xchg
inc
push
sub
orb
dec
cmpsb
imul
fcoml
sbb
jo
adc
in
pop
in
out
push
sbb
sub
xorb
into
push
dec
add
sub
add
sub
mov
rolb
dec
loope
incl
pop
std
add
xlat
dec
lea
xor
pop
cld
sub
test
mov
lock
pop
push
negb
enter
lods
push
push
jmp
add
and
or
dec
ret
or
mov
adc
dec
mov
cmp
inc
jae
mov
sbb
xor
loopne
lea
jmp
in
pop
mov
sub
out
mov
add
ret
dec
or
mov
dec
jne
pop
cmpb
add
add
mov
mull
mov
or
cmp
push
dec
test
jbe
or
fs
cmp
inc
adc
push
inc
sub
jae
push
pop
fadds
fldt
enter
or
mov
in
stos
jle
ljmp
inc
fs
sub
mov
loopne
ror
mov
notl
rcrb
mov
inc
repnz
mov
xchg
adc
adc
enter
push
aam
adc
adc
movsb
rolb
push
inc
add
lcall
test
cld
scas
lea
xor
ja
test
cmpsb
or
sub
repnz
adc
xor
push
sbb
mov
add
inc
imul
push
rol
test
xlat
test
hlt
inc
orb
adc
add
aam
stos
pusha
or
dec
adc
cmp
inc
mov
jl
and
in
in
xor
and
test
test
xchg
lock
jno
mov
addr16
add
dec
add
jo
inc
pusha
xor
inc
call
pusha
sub
loope
inc
test
rcrl
xchg
push
xchg
mov
adc
ror
push
or
pusha
imul
iret
ljmp
adc
dec
sub
and
xor
inc
cmp
mov
ret
push
sub
dec
fimuls
adc
and
sub
orb
mov
fstpt
sub
loopne
push
add
adc
aam
inc
in
pusha
push
mov
ds
sbb
scas
ret
add
pop
cmp
outsb
fiaddl
inc
cmp
sub
cmp
add
mov
sbb
loop
adc
and
add
insl
push
and
xchg
aaa
adc
or
dec
cmp
add
jle
nop
bound
lahf
es
sub
push
jno
or
arpl
or
andb
mov
imul
and
imul
or
xchg
xor
out
jl
pop
hlt
sbb
mov
cld
imul
sbb
cltd
sub
mov
or
in
jo
mov
gs
xor
xor
and
lahf
arpl
test
pop
or
ret
jae
xor
test
dec
push
push
pop
popa
push
push
pop
and
aad
mov
and
loopne
fisttpl
cmp
and
sub
mov
cmp
add
loopne
sbb
and
dec
les
push
jb
test
out
add
xchg
js
ss
call
or
push
xorl
aam
rorl
rorb
inc
mov
pop
cmc
cs
fimuls
or
insb
loopne
or
push
pop
inc
mov
push
or
xor
inc
cmp
jmp
mov
jnp
sub
pop
push
adcl
add
push
shlb
sahf
fbld
mov
pop
add
sub
mov
ror
sarb
loopne
mov
cmp
push
cmpsb
pop
dec
jl
cs
sbb
or
jns
xor
dec
and
xor
mov
iret
xchg
add
mov
ret
cmpsb
dec
xor
jbe
adc
sub
push
xchg
jo
sbb
inc
scas
lock
pop
cmp
xchg
mov
es
and
pop
adcl
dec
pusha
movsl
ljmp
rorb
in
in
and
jl
cmp
mov
mov
jne
mov
mov
test
jbe
xor
xchg
outsl
test
cs
push
movsb
scas
or
insb
xchg
fisttps
sbb
test
jbe
mov
push
dec
mov
dec
push
mov
loopne
aas
or
add
mov
or
dec
add
lret
mov
pop
or
push
iret
into
cmp
out
sarb
fistl
push
jne
js
in
and
mov
dec
adc
cmp
daa
sbb
sub
pop
inc
add
mov
loopne
andb
lock
sub
push
mov
xchg
test
jbe
adcl
out
and
js
pop
push
jae
push
push
rcll
sar
pop
push
outsl
cmp
jmp
dec
jbe
push
push
jns
je
or
inc
adc
sbb
lahf
and
pop
in
call
mov
fidivl
and
mov
push
mov
mov
clc
push
add
push
sbb
js
xchg
arpl
mov
jns
je
push
adc
ds
xchg
mov
int3
sahf
in
push
jne
sahf
inc
nop
sub
push
and
jecxz
and
mov
stc
xchg
add
add
jge
mov
jl
xchg
push
adc
xchg
xor
dec
and
cmc
jle
adc
or
sbb
xor
shl
rcrl
mov
mov
inc
xchg
ss
das
mov
not
sub
cmp
lret
jbe
sub
or
roll
mov
push
insl
movsb
push
pop
cli
push
mov
mov
push
call
loopne
push
cltd
call
sub
adc
scas
cs
or
dec
mov
mov
jmp
inc
push
shll
or
cmc
dec
bound
xchg
dec
add
sahf
xchg
jbe
push
push
scas
xchg
or
jle
jmp
pop
pushl
pushf
dec
push
sbb
int
push
sub
xor
popa
jmp
data16
add
sub
das
xchg
mov
ret
subb
add
push
xor
and
pop
inc
sahf
adc
insl
add
aam
mov
inc
and
pop
cli
jnp
inc
xchg
mov
inc
or
pop
bound
and
dec
xchg
push
add
dec
dec
mov
sti
jbe
xor
dec
pop
cmp
mov
cmp
mov
je
cmp
push
cmp
repz
movsb
inc
fcomps
adc
mov
push
dec
xchg
lea
cmp
fists
scas
bound
push
mov
dec
inc
adc
mov
aaa
inc
xchg
test
and
lret
xorb
ja
ja
roll
iret
jb
mov
push
mov
inc
addb
mov
sbbb
mov
add
sahf
add
mov
inc
mov
cs
or
jmp
mov
cs
in
add
out
xchg
pushf
jo
or
adc
addl
lods
sub
ret
dec
lahf
pop
sbb
dec
xor
imul
sub
mov
mov
mov
dec
xor
pop
ret
int3
jns
mov
and
lods
mov
push
mov
mov
adc
add
lds
and
mov
loop
addb
stc
mov
mov
mov
inc
cmp
mov
cmp
mov
movb
call
adc
jbe
stos
dec
push
nop
sub
movzbl
fnsave
mov
pop
cwtl
xor
mov
jne
mov
xchg
sub
xchg
or
mov
int3
incb
fisttpll
rorl
jp
push
sbb
pop
xor
cmp
inc
hlt
pop
pop
dec
add
loope
int
add
imul
sbb
sarb
mov
adc
loop
jmp
or
pop
aas
movsb
inc
bound
cmp
push
add
push
inc
cmp
jl
mov
mov
or
les
shlb
push
xor
rolb
test
cwtl
mov
popa
pop
jg
push
idivb
sahf
insb
push
xor
sbb
mov
int
cmp
ja
add
ret
cmpsb
xor
or
fcomps
push
das
int3
ret
jns
push
push
jl
cltd
add
xchg
push
out
adc
jns
lock
xor
dec
arpl
and
cmpsb
ss
iret
jecxz
pop
adc
adc
pusha
test
fsubs
cmp
inc
or
sbb
pop
pusha
xor
cmp
push
lea
stos
or
sub
and
adc
comiss
fsubrp
inc
inc
jp
mov
sahf
pop
mov
fwait
and
pop
or
add
movsb
sbb
divb
sbb
push
in
sbb
loope
and
add
mov
lock
mov
shr
shl
add
dec
cld
mov
loop
xor
mov
mov
push
add
movsw
movsb
mov
pop
cmc
add
enter
xchg
mov
inc
sub
push
fidivrs
popa
add
ja
add
xchg
pop
add
sub
invd
shlb
adc
dec
xor
add
ror
fs
test
xor
sub
push
cmpl
add
loope
sbb
lock
mov
push
cmpb
push
add
xchg
push
pop
mov
cmp
loopne
add
dec
and
push
imul
sub
idiv
jl
xor
stos
test
arpl
sub
jne
mov
sbb
xor
push
cmpsb
sahf
jle
push
mov
xchg
stos
xlat
jmp
sti
cmp
loopne
sub
xlat
es
cmp
fdivl
andb
sbb
inc
test
adc
inc
or
and
lret
lods
or
add
outsl
push
frstor
andl
stos
imul
sub
xchg
sbb
sbb
add
add
xchg
or
xchg
or
mov
les
lahf
inc
xor
mov
or
add
mov
mov
shll
push
or
stos
push
mov
adc
and
pop
mov
shrb
xor
pushf
sbb
adc
or
jl
or
mov
ret
adc
rcrb
dec
push
aam
add
adc
or
jno
adc
jmp
push
js
xchg
mov
cli
fisttpll
ljmp
cmp
imul
ret
cmp
mov
adc
out
or
adc
pop
dec
add
add
cmp
dec
mov
push
ret
adc
lods
jno
fidivrl
or
sub
pusha
cmp
cmp
aam
push
in
inc
jmp
fstpt
imul
or
mov
mov
loope
jns
push
lcall
pop
inc
cmp
lock
mov
movb
leave
hlt
testb
pushw
jno
ficompl
or
mull
ror
and
cmp
arpl
sbb
clc
orb
pop
jmp
rorb
add
or
insb
lret
and
test
inc
sbb
add
add
inc
dec
pop
push
shrb
mov
pop
fsubrl
inc
inc
jne
cmpsb
jne
data16
and
adc
daa
adc
cmp
in
enter
adc
or
or
push
mov
sub
sbb
int
mov
push
stos
mov
repz
icebp
repnz
mov
inc
mov
cmpsl
nop
jmp
sub
inc
loopne
js
mov
int3
clc
ficoms
push
push
gs
adc
jp
mov
out
aam
add
cmpsb
adc
push
cmp
and
clc
pop
add
insl
loopne
or
sbb
jge
jmp
dec
add
mov
or
sbb
sbb
mov
mov
cmp
inc
xor
push
lcall
adc
sbb
adc
push
cmpsb
clc
je
js
inc
xor
xchg
sub
mov
dec
in
push
das
cwtl
pop
test
insl
icebp
ret
loopne
sub
cmpl
ljmp
lods
loopne
sti
pop
push
out
cmovle
mov
pop
push
aad
lea
push
push
push
adc
cmp
cwtl
push
test
xchg
pop
mov
test
cmp
fcompl
mov
ja
inc
push
and
lods
test
sub
in
rcll
rolb
pop
sbb
inc
mov
cmp
mov
mov
and
dec
push
sbb
add
inc
roll
and
sub
inc
xchg
mov
sbb
and
popa
cmpl
xor
cmp
jle
call
and
jle
mov
or
mov
xchg
jne
pop
jae
cmp
in
sub
sbb
dec
ret
or
mov
ja
jne
push
inc
sub
push
shll
push
insl
test
mov
cmpsl
add
jmp
nop
sbb
repz
imul
adc
pop
cwtl
sub
stos
shl
inc
cmp
mov
or
hlt
push
insb
ret
jne
or
or
jo
add
mov
rolb
add
inc
aas
or
push
nop
sub
inc
jo
in
mov
xor
enter
jmp
lea
add
out
popa
sbb
lret
aad
pop
cmpsl
lods
subb
inc
adc
aas
mov
inc
add
add
jo
jecxz
call
xor
test
fs
cmp
pop
and
pop
sub
push
pusha
jo
push
push
sarl
sbb
call
sub
xor
add
pop
cmp
mov
push
add
push
add
jbe
ss
cmp
mov
jmp
sub
cmpsb
mov
jne
push
adc
add
add
ja
or
pop
sub
cltd
data16
mov
add
push
or
icebp
push
imul
aad
push
and
dec
and
rcrl
push
pop
mov
push
add
sbb
or
loopne
mov
push
dec
and
icebp
jmp
aas
into
fsts
call
ret
xor
adc
in
push
cmp
mov
jg
add
xor
adc
push
xchg
mov
mov
cmp
insl
adc
sbbl
push
jo
and
jl
sub
or
push
and
hlt
mov
lock
push
push
mov
mov
or
leave
or
inc
mov
andb
cmpb
jne
dec
cmp
jno
lea
mov
ds
outsb
add
push
push
sbb
and
pop
adc
jne
xor
push
jl
mov
mov
sbb
data16
imul
add
incl
lock
shr
clc
or
testb
or
es
add
repnz
roll
add
in
aas
pop
cmpb
leave
jmp
lea
adc
sbb
and
dec
adc
inc
clc
sub
bswap
lret
into
jne
data16
mov
pop
or
loop
or
jmp
aaa
jl
inc
lcall
push
hlt
arpl
pop
xor
push
xchg
in
fmuls
and
icebp
push
hlt
insb
adc
out
jp
aas
loopne
out
std
cwtl
daa
sbb
test
push
sub
outsl
neg
cmp
push
unpckhps
pop
adc
adc
jb
xlat
pop
sbb
jne
cmp
jne
push
shll
std
xchg
rcrl
adc
push
repnz
sbb
push
insl
and
ss
lds
fidivrs
les
jae
stc
ret
xor
lods
sub
in
adc
mov
dec
jl
mov
stc
sbb
mov
dec
addl
sbbl
and
test
xchg
sbb
call
pop
jne
sysret
sti
sub
dec
xor
add
push
sub
mov
sbb
cld
or
lret
aaa
add
pop
cltd
push
and
loope
sub
ja
pop
xor
call
push
pop
fwait
jo
test
add
and
lock
add
xlat
xchg
popf
mov
cmp
int
mov
aaa
and
out
loopne
les
outsb
dec
rorl
sbbl
push
pop
test
add
xchg
rorb
jne
add
and
sbb
pop
mov
mov
add
sub
ret
test
sbb
sbbl
test
outsl
xlat
add
mov
push
adc
je
jmp
add
sbb
lret
enter
stos
adc
std
bound
cld
sub
mov
test
stos
cmp
shll
jnp
mov
push
leave
inc
xchg
orb
push
jecxz
or
jae
sub
loop
add
jl
inc
push
scas
rcll
popa
loop
xor
jo
xchg
mov
lds
dec
mov
pusha
dec
jb
cmp
cmpsb
adc
enter
fs
cmp
adc
or
jmp
inc
fcmovnb
mov
decb
loopne
mov
es
cmp
insl
loopne
ljmp
and
das
in
enter
adc
mov
push
dec
loopne
xor
xchg
adc
fstpt
xor
dec
aad
dec
call
adc
xchg
jg
pop
or
push
or
inc
bound
dec
and
scas
out
mov
lods
adc
scas
adc
and
repz
push
imul
and
imul
or
jne
popa
jmp
pop
adc
adc
push
imul
je
inc
enter
cmp
fwait
ret
or
adc
mov
repz
xor
adc
bswap
and
push
jle
jo
test
inc
dec
dec
pop
jge
nop
je
adc
lods
imul
xchg
push
add
push
push
sbb
loopne
aam
cmc
adc
pushw
mov
mov
clc
std
push
sub
dec
jmp
aaa
adc
cmp
call
xor
xor
icebp
inc
insb
adc
push
mov
into
xchg
cmp
out
mov
addb
insb
cmpsl
fwait
outsb
out
add
ja
adc
dec
push
ds
sarb
les
sbb
rorl
repnz
jp
addb
jns
fwait
shrb
inc
fisubrs
lock
sar
xor
repz
mov
jo
sbb
out
pop
xor
andb
outsl
repz
push
dec
push
cmp
scas
mov
adc
pop
sbb
ret
shl
cmp
or
or
data16
jno
sbb
pop
inc
pop
nop
pop
adc
outsb
push
scas
iret
adc
inc
cmp
jnp
lock
int3
cmp
pop
cmp
inc
push
out
jb
loop
dec
addl
cs
sub
es
lea
jb
shlb
inc
push
mov
je
imulb
cwtl
in
add
jbe,pn
rolb
imul
je
sbb
mov
ljmp
pop
jl
movsb
jbe
push
add
call
push
adc
xchg
js
inc
inc
inc
sahf
cmp
ret
jb
cmp
pop
loopne
lods
jae
lahf
sub
dec
call
push
dec
ret
mov
loop,pn
add
mov
ja
cmp
sub
enter
subps
push
sub
icebp
dec
daa
arpl
adc
push
push
or
add
and
jne
push
dec
xchg
jp
sub
or
and
js
ret
jmp
push
loopne
lcall
shll
dec
adc
inc
mov
and
leave
adc
inc
or
mul
jne
je
jmp
or
push
dec
psrld
mov
sbb
mov
xor
or
add
pusha
xchg
sbb
test
fcmove
add
sub
and
dec
std
pop
adc
enter
xchg
call
push
xor
icebp
jnp
mov
bound
dec
mov
fisubrs
andl
or
sahf
push
inc
pushf
es
push
mov
mov
aaa
dec
inc
pop
pop
and
cmpl
mov
subb
or
push
inc
add
and
dec
sahf
inc
loope
and
push
clc
and
add
in
pandn
jae
inc
and
dec
mov
sub
dec
dec
push
pop
inc
shl
lcall
jmp
pop
stos
and
je
push
cld
ss
jb
movsl
ljmp
inc
or
icebp
pushf
push
lods
jl
ret
and
push
stos
lock
sar
or
adc
push
enter
cmpsl
and
data16
adc
xor
mov
loop
imul
fcmovb
out
cmp
adc
dec
adc
test
fsubs
sarb
xor
sarl
ficompl
orl
pop
loop
push
add
bound
jne
ja
shrl
sbb
inc
mov
and
sbb
jle
es
rcrl
shlb
add
in
inc
mov
mov
rorl
or
rclb
jle
rcrb
jl
inc
js
cmp
repz
add
shrb
icebp
mov
movsl
ljmp
jae
mov
jle
sbb
jmp
test
xsaveopt
and
int
fisttps
jne
fnstcw
mov
and
clc
jg
fs
outsl
lock
filds
movq
movaps
lret
insl
mov
shlb
jle
xor
push
jge
int
rcl
lret
je
mov
data16
push
and
jge
repz
or
jg
mov
xor
cs
jnp
inc
insl
lock
in
add
adc
pop
jg
add
adc
push
add
adc
add
loopne
add
mov
add
pusha
out
ja
sti
addsd
int
add
sbb
es
jns
sbb
es
sbb
mov
push
imul
dec
test
ja
stos
add
pop
cmp
mov
inc
lds
in
adc
call
dec
xchg
adcl
dec
pop
call
mov
push
fisubs
add
inc
dec
and
in
pop
sbb
lcall
sub
insl
or
jnp
add
add
fmul
ret
clc
or
add
xor
fstps
clc
cmpsb
mov
rorl
jmp
jle
aaa
loopne,pt
add
or
sahf
xor
sbb
push
rep
mov
dec
ljmp
test
mov
push
add
pop
int
and
pop
adc
roll
dec
pusha
clc
prefetch
or
movsb
inc
cmp
fisttpl
mov
and
cmovs
scas
push
or
call
test
mov
pop
xor
stc
or
rep
jmp
sub
rol
cs
cmp
jb
cmpsl
insb
out
mov
mov
push
or
jnp
cmp
es
push
sbb
and
mov
sub
pop
js
inc
add
add
cmpsb
fldcw
mov
fimull
push
movl
cmpsb
inc
add
mov
mov
out
sahf
out
js
push
cmp
mov
mov
call
iret
repz
lock
hlt
clc
push
and
adc
lret
add
fldcw
jmp
out
enter
mov
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
or
or
cld
out
inc
xor
jb
lock
stc
sub
mov
inc
xor
push
push
js
mov
fiaddl
jl
mov
add
in
xchg
push
mov
inc
mov
out
push
add
mov
addr16
add
dec
in
aad
ljmp
repz
xor
sbb
repz
and
xor
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
cmpsb
and
aaa
push
add
pop
mov
ja
add
and
int3
xchg
sbb
ret
add
movsb
mov
push
daa
mov
in
or
ffreep
jne
scas
and
or
mov
mov
add
outsl
and
mov
test
je
adc
sbb
add
cmp
das
mov
mov
inc
inc
sub
push
mov
addb
fucomi
adc
je
mov
popf
clc
in
rorl
sahf
mov
pop
cmp
xor
mov
add
cltd
bound
or
mov
and
out
cmp
daa
cmp
je,pn
cmpsl
cwtl
jb
or
and
aam
sbb
arpl
adc
in
or
popf
sarb
mov
int3
dec
lock
sbb
sub
and
leave
hlt
fcomi
or
add
cmp
aaa
in
iret
jne
xchg
or
test
test
and
and
push
or
add
push
xchg
inc
push
ds
mov
pop
bound
fists
adc
inc
cmp
jne
inc
cmp
mov
xor
nop
shrb
js
dec
adc
mov
ficoml
mov
xor
adc
adc
and
or
and
push
and
subl
cmp
sub
sbb
dec
sahf
out
arpl
dec
adc
iret
fwait
adc
cmp
lret
div
adc
es
or
or
dec
inc
push
xchg
sub
pop
roll
adc
cs
daa
push
and
test
scas
mov
hlt
cmp
add
popf
xchg
xor
stos
xor
or
mov
mov
sub
add
ret
mov
shl
mov
idivl
dec
leave
sbb
or
or
inc
pop
rclb
lahf
cmp
mov
mov
push
cmpsb
mov
rol
inc
inc
cmp
aam
xchg
sub
lret
jne
sbb
movsb
ret
pop
sti
jg
jmp
adc
es
push
push
mov
movl
adc
movl
in
rcrb
cmp
and
cmp
xchg
rolb
call
inc
or
add
mov
je
add
and
fistpll
orl
fisubs
stc
adc
loope
hlt
daa
lret
push
xchg
pop
adc
shrb
add
sbb
dec
repnz
or
add
jge
rclb
cmp
or
insl
push
push
push
xor
inc
xor
inc
xor
mov
add
cmp
inc
test
xchg
js
jmp
fwait
incb
es
movsl
mov
movb
lea
sbb
mov
cld
xchg
outsl
dec
cli
or
add
jmp
or
mov
inc
loop,pt
orl
push
cld
jb
fbstp
sub
and
jb
into
jmp
mov
dec
loope
push
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
jp
outsb
jns
or
out
rclb
pop
mov
push
push
jbe
cmpsl
sbb
cmp
pop
add
pop
lret
test
rorb
cmp
push
cmp
jb
lea
sbb
mov
xorl
pushl
push
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
in
pop
pop
les
cmpl
mov
mov
incl
dec
jmp
adc
jmp
sbb
repz
std
jmp
cld
cld
ret
iret
into
fucomi
pmaxub
popa
mov
pop
push
jb
push
push
adc
outsl
scas
movb
shr
stc
add
jb
jo
push
cmpsl
pushf
mov
scas
popf
shr
cmp
enter
and
sbbb
cmp
jo
dec
je
inc
adc
sahf
dec
out
inc
mov
mov
sub
or
and
or
sub
adcb
pop
add
add
pop
adc
add
sub
les
add
sbb
enter
les
cmp
pop
shlb
add
call
mov
push
adc
or
jg
add
mov
mov
arpl
sahf
clc
dec
cs
jno
lock
push
popa
xchg
add
scas
and
xchg
dec
mov
mov
mov
xchg
and
repz
jle
push
inc
les
push
pop
div
jb
push
xor
adc
nop
inc
pop
clc
js
push
mov
xorl
cmp
lods
pop
sub
pop
adc
cmpsb
push
arpl
mov
es
mov
cmpsb
push
sub
inc
and
arpl
gs
sbb
mov
test
nop
xlat
and
push
mov
stos
or
add
outsl
adc
aam
or
pusha
add
add
xabort
loope
andb
sub
sbb
pop
mov
call
leave
xor
push
push
mov
add
and
mov
mov
adc
jle
cmpl
pop
pop
cli
int3
je
inc
mov
add
dec
cmpsl
xor
pushl
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
xlat
add
nop
add
xchg
add
insl
jns
add
outsl
adc
cmp
jno
mov
push
xor
dec
or
stc
out
push
insb
or
and
out
outsb
xchg
adc
insb
adc
pop
jne
dec
add
or
lds
outsl
or
sub
lret
or
test
adc
jg
mov
jmp
fiadds
out
pushl
lret
sub
cmp
ja,pn
xor
loopne
nop
leave
cmp
jae
push
and
retw
movsb
inc
and
rcrl
cmp
aam
test
push
push
add
sbb
lods
movsb
mov
movsb
mov
bound
adc
push
add
inc
cmc
mov
nop
test
jne
test
jne
push
sbbl
or
or
jne
jbe
inc
mulb
adc
je
daa
mov
push
mov
add
add
into
mov
sti
addb
adc
mov
inc
xor
dec
sbb
xchg
xchg
stos
ret
cmp
xchg
cld
clc
loop
add
fisubrl
inc
pop
fsubrs
mov
sub
adc
mov
pushf
inc
or
xor
xor
pop
sub
loop
imul
leave
popa
cld
stos
mov
shr
shlb
dec
or
adc
ljmp
jbe
inc
and
push
and
hlt
stos
pop
int
inc
and
or
or
sub
adc
rcrb
inc
xchg
ds
adc
adc
and
shlb
pusha
stos
mov
or
data16
or
jno
mov
clc
dec
and
and
rorl
jecxz
je
hlt
xchg
mov
pushf
and
testb
adc
adc
pusha
xor
call
push
loopne
mov
sbb
fidivrl
in
fstpl
push
aas
push
es
pop
add
xor
inc
popf
dec
adc
or
dec
in
mov
sbb
scas
fs
dec
push
cli
sbb
sbb
inc
jbe
mov
adc
xchg
xor
adc
adc
and
xor
dec
ret
pop
cmp
movsl
xor
xorb
sahf
xchg
insb
push
jb
jbe
fstps
sbb
pop
xor
fwait
or
or
fs
add
cmp
imul
or
mov
sti
sbb
adc
inc
mov
adc
repz
fists
jo
mov
shll
add
push
add
loopne
je
test
mov
jb
lea
push
adc
push
cmp
push
jl
ss
add
sbb
and
clc
xchg
test
mov
scas
popf
mov
and
pop
fs
dec
xor
push
mov
dec
movsb
push
decb
popa
mov
push
out
cmp
mov
bnd
insb
sbb
adc
pop
inc
mov
or
or
mov
lcall
fcoml
dec
push
rcrb
inc
rolb
add
mov
or
das
cltd
xor
out
jae
fwait
data16
and
call
lret
xchg
sbbl
and
icebp
mov
sbb
add
ret
daa
cmpsb
ss
loope
aam
jge
or
fldcw
adc
adc
or
std
movb
sub
iret
mov
cld
std
add
xchg
and
dec
cld
push
clc
push
push
push
orl
imul
or
adc
or
stc
xlat
rorl
pushf
clc
sti
pop
adc
cmpsb
pop
lahf
sbb
loopne
push
or
in
xchg
push
push
frstor
add
sahf
movsl
ljmp
fidivrs
xor
mov
pop
add
push
push
xchg
data16
add
lods
fwait
xchg
fnstcw
mov
movsbl
addr16
aad
push
popf
aaa
cs
decl
pop
mov
or
rol
and
xor
or
les
jb
pop
add
pmaxub
inc
shll
es
or
in
xor
repnz
clc
push
pop
xor
aad
or
and
shlb
jo
into
mov
lcall
inc
push
mov
outsb
push
xor
push
pop
je
inc
mov
push
rcrb
adc
push
add
sbb
and
add
adc
pushf
stos
push
mov
mov
push
dec
outsl
imul
pop
pop
fmuls
mov
dec
and
xchg
loopne
out
add
insb
push
pop
xor
xor
dec
ljmp
sahf
mov
and
xlat
test
sub
fdivr
add
push
cmpsb
ret
xor
xor
cmpsb
loopne
jnp
push
cld
mov
call
xchg
xor
inc
jno
sub
rcll
sbbl
or
mov
sub
mov
mov
cwtl
mov
push
pop
sbb
test
out
mov
jnp
and
jle
pop
fsubrl
imul
ffreep
shlb
fistpl
add
pop
das
test
cmp
jne
or
dec
loopne
xchg
mov
adc
iret
or
sbb
adc
push
adc
ret
jne
aaa
and
mov
rcl
lods
shrl
xchg
mov
dec
mov
push
cmp
pop
movsb
mov
mov
jo
in
mov
mov
lods
xchg
sbb
mov
pop
push
decb
movaps
pop
sti
mov
and
add
cmp
jnp
push
rolb
daa
mov
pop
lods
mov
sbb
mov
adc
sbb
out
call
or
xor
in
add
lds
daa
jg
xchg
sarb
movsb
ret
jp
and
flds
pop
in
xor
pop
mov
pop
or
in
jl
sbb
pusha
or
fucomip
or
aaa
les
cmpsl
jge
inc
pop
push
inc
mov
jb
enter
mov
call
fcomp
scas
cmp
popf
jns
pop
jne
adc
mov
jp
and
inc
shll
push
jle
dec
inc
loop
les
bound
adc
push
outsb
mov
in
out
jmp
cmpsb
push
and
pop
add
out
rcll
testb
adc
pop
mov
loope
out
push
pop
jle
pop
mov
cmp
je
movzbl
add
sub
je
or
lahf
ret
lea
repz
imul
inc
and
enter
add
repz
add
adc
dec
add
or
insb
cmp
je
lcall
flds
add
jb
mov
and
xchg
pop
push
pop
out
push
push
jb
or
or
push
nop
or
or
or
or
push
pop
or
jns
cmpsb
repnz
or
or
or
out
repnz
add
mov
push
push
inc
enter
nopl
push
fcomps
adc
pop
adc
fwait
add
push
sub
adc
enter
adc
adc
jns
cmp
add
adc
add
adc
lcall
adc
inc
push
inc
push
push
push
push
xchg
and
sbb
pop
xor
pop
enter
sbb
jns
sbb
call
out
sbb
sbb
sbb
iret
mov
sbb
add
mov
sbb
iret
pusha
push
push
inc
call
enter
pop
jne
add
add
sub
cmp
aas
push
fldt
mov
movl
xchg
repnz
pop
in
jg
loopne
inc
add
inc
clc
mov
cmp
je
lcall
push
in
repnz
lea
sbb
repz
cmp
mov
out
fwait
out
xor
jb
pusha
fadds
call
out
popf
mov
adc
inc
jmp
sub
enter
sbb
xorl
in
enter
cltd
mov
cmpb
sahf
out
out
adc
jb
out
sbb
nop
inc
lcall
jns
push
xor
icebp
seto
pslld
out
std
repnz
repz
std
fdivs
cmpsl
cmpsb
hlt
hlt
rorl
pusha
hlt
fwait
add
push
mov
and
enter
pop
jns
cmp
idivl
cmp
add
dec
push
clc
clc
clc
cltd
jns
mov
stc
lock
and
enter
iret
sti
push
push
and
sbb
stos
cld
cld
mov
fdivr
je
cld
push
bswap
jnp
outsb
ss
xor
and
repz
sbb
adc
test
or
jo
mov
jbe
icebp
pop
lahf
and
shl
gs
pop
cmpsb
push
push
inc
xor
es
jecxz
push
nop
ja
std
sti
in
in
enter
icebp
inc
mov
stc
daa
xchg
sti
pop
insb
nop
and
out
cltd
outsb
xchg
inc
pop
and
add
and
sbb
pop
jmp
jmp
cmp
mov
add
xchg
popf
cli
sbb
js
out
out
out
mov
sbbb
inc
repnz
cli
push
cli
dec
push
cmp
stc
repz
lret
add
repz
sar
push
xor
sbb
pop
fstpl
testl
negl
fwait
xor
mov
stc
inc
or
pop
out
clc
cmp
xchg
clc
sti
sti
sti
cltd
pop
enter
cld
inc
cld
and
inc
pusha
fists
rcll
cmp
bound
cmp
inc
lcall
mov
loop
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
inc
cli
imul
repnz
sub
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
popl
dec
add
push
scas
and
daa
loop
or
and
stc
cli
push
inc
add
pop
push
clc
pop
sbb
push
fldcw
pop
imul
mov
pop
sti
pop
pop
ds
ss
int
imul
scas
push
mov
sahf
out
inc
and
mov
xchg
push
popf
pop
mov
adc
jns
cs
and
lahf
mov
push
mov
pop
mov
push
imul
mov
mov
cs
cld
jge
push
add
nop
les
push
lods
fistpl
pop
int3
jnp
std
movsb
into
rcrb
or
adc
orb
add
sub
fdivs
fistpll
fsubs
fmuls
and
add
insb
sub
adc
lret
shrb
pop
add
sub
and
mov
jecxz
loopne
xor
add
fimuls
sahf
jge
inc
test
cmpsl
mov
out
mov
adc
in
pop
push
test
adc
mov
dec
aam
sub
mov
jecxz
repnz
mov
dec
xchg
imul
out
inc
or
adc
cmp
cld
inc
adc
inc
jb
pop
imul
and
icebp
or
inc
inc
pop
pop
or
aas
jo
data16
enter
ret
pop
shlb
imul
inc
and
gs
iret
js
push
or
popa
inc
outsl
loope
sub
xor
or
dec
or
mov
dec
repnz
je
shll
pop
roll
sub
ficompl
pusha
inc
inc
pop
cmp
enter
add
sbb
mov
cmp
dec
jp
jne
xchg
push
aas
mov
push
cmp
pop
add
ja
enter
sub
xchg
subb
pop
sbb
fimull
ljmp
jne
dec
xor
inc
and
mov
cmc
int
jl
data16
adc
adc
stc
xchg
icebp
dec
mov
inc
jl
inc
adc
fadds
mov
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
add
out
dec
mov
inc
add
cld
push
mov
pop
pop
push
push
cwtl
ja
test
test
outsb
adc
ret
clc
mov
inc
xor
adc
jns
jo
clc
std
testb
lret
test
mov
pop
repz
add
or
xchg
je
sahf
fwait
add
lea
stos
add
testb
movb
pusha
mov
enter
push
jmp
fwait
mov
hlt
mov
adcb
leave
adc
cmpsl
adc
inc
and
pop
add
jno
jo
fistps
sbb
push
mov
xor
das
push
inc
adc
mov
outsl
xor
push
mov
mov
incl
inc
decl
jne,pn
adc
and
iret
repnz
call
push
or
cmpl
mov
jbe
push
cltd
or
sti
rclb
pusha
or
inc
cwtl
add
jle
add
aaa
dec
mov
mov
xor
decl
imul
dec
popf
push
lret
or
mov
dec
loop
jbe
mov
dec
nop
jo
icebp
clc
jmp
dec
ret
push
adc
cmc
xchg
fs
or
pop
xchg
push
jg
lret
imul
add
call
or
neg
xchg
mov
sbb
dec
dec
je
push
push
jne
inc
sbb
dec
out
inc
movb
fcomi
mov
cwtl
jbe
xor
pop
decb
out
loopw
push
test
mov
inc
pop
rcrb
cltd
sbb
push
das
or
mov
sbb
ret
aaa
test
mov
filds
inc
add
idiv
mov
xor
rol
pop
add
popa
xor
or
and
push
adc
fimull
push
mov
stos
jo
pop
sub
mov
or
xchg
jmp
ror
pop
cmp
cmpsl
imul
ja
insl
or
aas
cld
subb
jge
push
push
cltd
pop
idiv
xchg
or
out
ret
insb
push
xchg
inc
out
cmp
pop
daa
or
outsb
fwait
sbb
jmp
or
arpl
fisubs
call
sahf
enter
add
sub
adc
fs
shrl
push
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
sbb
xchg
jae
mov
or
inc
or
add
or
jg
xlat
loop
add
sti
mov
pop
sub
loopne
push
inc
jp
jo
inc
xor
rclb
je
data16
adc
and
xchg
mov
cmp
mov
jge
pop
je
sbb
add
popl
jl
fs
das
insl
mov
movsb
jno
mov
mov
int
int3
dec
jo
xor
pop
je
dec
inc
add
dec
jne
inc
adc
testl
popaw
and
inc
lret
test
adc
xchg
pop
popl
sub
lods
or
fsubrp
les
pop
push
pop
push
or
inc
mov
test
inc
push
cmp
pop
mov
push
adc
lcall
xchg
inc
jmp
push
pushf
xchg
mov
mov
and
jmp
add
insl
lret
je
mov
xchg
sbb
ss
cmpl
cli
and
jge
jecxz
sub
add
push
push
hlt
mov
inc
add
idivl
cmp
inc
adc
or
adc
jns
out
call
mov
lret
pop
pop
pushl
lahf
int3
dec
ljmp
rol
dec
xchg
rorb
jg
icebp
mov
push
pop
orl
mov
sbb
and
and
data16
mov
dec
movsb
mov
aam
add
jl
mov
push
inc
jg
cmp
je
gs
push
xchg
push
inc
subb
add
std
cmp
clc
mov
inc
inc
cmp
je
xchg
mov
mov
sbb
adc
add
dec
push
inc
fidivrl
dec
je
sbb
xchg
push
and
inc
dec
sbb
mov
mov
sti
lds
push
mov
incl
fadd
fcmove
push
clc
hlt
push
mov
push
inc
sbb
icebp
adc
sbb
fsubrl
out
mov
pop
sbb
lods
mov
xor
jnp
pusha
loopne
bound
stc
mov
sbb
or
xchg
add
lret
dec
push
ret
mov
test
push
xor
sti
add
sub
lret
fs
mov
addr16
test
fcmovb
cld
rclb
test
cmp
cmp
je
mov
call
push
and
mov
int3
pop
addb
xor
add
push
pop
xor
push
pop
inc
int
fs
cmpsb
add
shl
pop
add
sbb
mov
and
sbb
dec
movsb
mov
jns
iret
adc
mov
add
sub
mov
jae
adc
xchg
push
adc
ror
add
sar
lea
mov
jne
enter
jmp
dec
or
pop
dec
add
cmpb
jmp
xor
mov
into
inc
pop
sarl
and
push
mov
pop
pop
jmp
stos
fprem
inc
pop
fs
ret
dec
jecxz
imul
pop
call
bound
add
stos
push
cmpsb
lock
dec
dec
out
sbb
addl
mov
lahf
popa
lock
jge
push
jns
and
je
aam
pop
push
je
movsl
stos
sarb
inc
sbb
mov
mov
mov
or
rorb
les
jae
push
and
inc
push
jmp
add
adc
ja
or
and
inc
inc
shrb
repz
outsl
inc
sbb
arpl
orl
jge
pusha
xor
movsb
cltd
pop
add
mov
and
lock
sub
pop
xor
add
sub
jmp
aas
push
int3
cmp
cmp
xchg
sbb
inc
enter
inc
mov
in
mov
jmp
jne
add
inc
and
in
add
and
mov
jmp
mov
ja
xor
adc
inc
or
in
jmp
popf
and
jmp
sub
movsl
scas
pop
or
fdiv
mov
sbb
add
subb
jne
sbb
loopne
xchg
ret
imul
pop
punpckhdq
outsb
mov
add
in
insl
push
arpl
jmp
pop
lods
int3
or
arpl
xchg
push
jno
and
xor
movsb
pop
mov
mov
inc
iret
or
sub
cmp
push
std
add
cmp
les
cmp
or
fs
add
push
cmp
jecxz
popa
pop
mov
addr16
rolb
into
fiaddl
xlat
cld
or
or
into
popa
repnz
outsb
jbe
js
adc
enter
push
rorl
push
mov
mov
sub
sbb
adc
mov
dec
or
js
xor
lods
movsl
sbb
sbb
or
mov
shll
in
and
jmp
sub
popf
jp
sub
pop
pop
mov
imul
fcomps
pop
add
inc
int3
or
rcrb
push
adcb
lcall
and
enter
fs
pop
sub
jb
mov
jmp
mov
cmpsb
imul
dec
cld
loope
add
pop
sahf
std
data16
pop
out
add
inc
and
sub
sub
inc
cmp
mov
add
gs
imul
mov
and
push
add
cmp
or
push
pushf
stc
dec
inc
sbb
cld
arpl
imul
adc
mov
adc
stos
ja
clc
dec
cmp
push
sub
rclb
imul
fsubl
pop
add
bound
cmp
lock
xchg
hlt
inc
or
ret
xor
dec
test
outsl
jno
hlt
jge
fiaddl
xor
outsl
imul
ja
jbe
adcl
add
lock
mov
fistl
push
mov
pusha
sub
mov
jle
repnz
rcrb
cmpsl
popa
inc
mov
into
push
jg
adc
mov
cmp
push
mov
lcall
xchg
cmp
test
mov
push
jmp
shlb
arpl
sbb
lahf
call
sbb
xchg
lock
fadds
rol
decb
or
enter
hlt
test
jbe
push
inc
cli
mov
ljmp
in
daa
and
inc
mov
fs
cmp
sub
inc
cwtl
outsb
test
dec
mov
ret
add
in
fstpl
pop
mov
cltd
xor
adc
push
push
ret
std
add
jp
sbb
mov
jecxz
mov
push
lea
loopne
out
into
add
adc
push
in
test
call
inc
and
add
add
push
mov
or
jnp
shrb
or
or
push
dec
or
push
mov
mov
sarl
jge
or
js
push
mov
les
sbbb
add
dec
xchg
insb
push
in
adc
jl
das
adc
cli
pop
cld
xor
inc
jg
pop
xchg
scas
test
adc
and
add
push
dec
hlt
add
push
mov
cmp
jne
push
repz
je
out
and
pusha
fidivrl
movd
xchg
lcall
xor
or
pop
or
and
inc
push
call
pop
test
sbb
orb
aas
mov
cmp
mov
adc
inc
test
mov
pop
sub
mov
sti
movsb
sbb
adc
sti
mov
xor
mov
repz
sbb
stc
pushf
popl
mov
call
test
push
mov
add
cmp
push
imul
sarb
or
xchg
xor
inc
fbld
addb
iret
xor
pushf
notb
adcb
pop
sub
push
cmpsb
loopne
call
mov
incb
mov
gs
xchg
sub
cmp
je
inc
pop
or
or
push
add
or
in
adc
or
push
push
push
xchg
xchg
les
xchg
xchg
test
in
shll
or
adc
adc
roll
mov
pusha
insb
pushf
pop
sub
mov
dec
add
testl
out
dec
cmc
fwait
mov
xchg
sbb
jb
call
scas
add
xchg
mov
adc
test
inc
mov
mov
and
in
cld
sub
xchg
add
outsb
and
push
sub
rcr
and
adc
or
mov
lock
push
es
ja
xor
cmp
cld
ficoml
push
or
aam
push
dec
fadds
pop
repz
std
push
cmp
outsb
jae
pop
inc
inc
cld
mov
dec
and
adc
xchg
addr16
jbe
ljmp
push
orb
mov
je
sahf
mov
test
push
in
lahf
inc
and
adc
aad
fs
mov
pop
dec
test
pop
mov
jg
pop
fistpll
and
sbb
lret
add
sub
xchg
imul
jae
ljmp
add
add
clc
or
ja
mov
or
or
insb
jo
lea
or
ja
je
andb
mov
lea
jp
or
sbb
jl
xchg
data16
adc
sbb
lock
xchg
xor
jno
data16
dec
mov
out
or
pop
insb
push
hlt
add
mov
mov
imul
adc
fwait
or
mov
push
sub
mov
cmpsb
push
sub
call
jb
and
std
jne
fsubrs
fldt
stos
enter
cmpsl
cmp
iret
rorb
push
sbbb
inc
xorl
push
clc
add
loopne
mov
fidivrl
pop
cmp
push
xor
mov
nop
xchg
repz
lock
add
xor
or
push
fidivl
push
jmp
mov
jne
push
add
fdivl
push
dec
push
jo
lret
pop
jne
loope
inc
lret
jae
cmp
pop
dec
dec
ljmp
add
decb
test
push
cmp
mov
dec
pop
leave
inc
jo
lea
imul
push
mov
sahf
adc
sub
jmp
loopne
sub
inc
and
push
loopne
andb
loope
or
lcall
add
mov
inc
shlb
mull
add
jge
add
sbb
js
jb
mov
xor
inc
inc
std
daa
movsb
cmp
push
incb
lea
decl
inc
mov
inc
inc
inc
dec
jne
mov
inc
sub
pop
jge
outsl
cmpsb
jl
sbb
notl
mov
cmpb
mov
inc
push
mov
inc
dec
jne
std
sahf
add
test
add
inc
add
hlt
gs
scas
dec
adcb
test
xor
sbb
rclb
cmp
mov
sub
and
call
mov
jnp
jp
mov
and
jo
push
out
xor
inc
sub
pop
sbb
cmp
outsl
je
add
sahf
loopne
cld
aas
mov
or
jbe
inc
enter
in
cmp
mov
fs
cmp
sub
xlat
cli
jo
insb
ljmp
xor
pop
outsb
addl
or
fwait
les
ret
sbb
adc
dec
loopne
or
pop
idiv
jle
inc
jmp
xor
dec
sbb
mov
sbb
jmp
mov
jns
ss
push
out
arpl
push
inc
insl
adc
aad
es
xchg
cmp
fs
and
sti
imul
push
xorb
lret
push
push
rclb
push
jno
enter
pop
and
mov
loopne
les
outsl
cmp
in
or
push
shll
or
pop
sbb
push
add
cmp
xor
mov
clc
sbb
js
sahf
testb
sub
testb
mov
rcrb
or
rclb
js
mov
push
cmp
jne
cld
arpl
aaa
out
jle
jg
or
or
push
cmpl
adc
shlb
cmp
add
fisttpl
or
lock
decl
jne
sbb
dec
xor
stos
or
mov
sbb
mov
or
rorb
jp
or
cmpsb
or
pop
ret
pop
ret
jo
or
jo
sbb
or
xor
adc
test
xchg
hlt
dec
mov
push
xorb
push
je
push
mov
push
sarl
je
mov
dec
push
mov
push
inc
xchg
mov
jbe
mov
inc
lock
adc
dec
jle
sbb
jo
inc
or
pusha
loope
arpl
cs
out
ds
pop
mov
orb
sub
push
ficomps
jno
xor
push
jbe
pop
mov
push
testl
push
shl
push
cmp
rcl
dec
push
lods
sbb
daa
mov
dec
mov
ss
add
xchg
aaa
mov
push
dec
outsl
lret
ss
cmp
imul
lret
pushf
lods
xchg
call
popf
sbb
cwtl
sub
mov
mov
lea
fisubl
sub
fnstsw
xor
mov
test
pop
setg
sub
dec
dec
cmpb
ret
push
sub
cmp
inc
shll
orw
push
mov
add
push
pop
test
dec
add
mov
mov
add
rolb
xchg
js
imul
insb
dec
aam
jecxz
mov
jg
sbb
pop
jnp
cmp
outsl
test
adc
mov
add
inc
sub
xchg
inc
ret
ss
rorb
sub
cmpb
pop
shlb
mov
jns
flds
or
repnz
xor
shlb
stc
rorb
pop
test
adc
sbb
data16
push
movsb
movsl
sbb
sub
inc
push
in
cmp
icebp
inc
push
in
dec
pop
cmp
xchg
and
jle
and
pop
sbb
jmp
push
dec
jp
pop
lahf
ja
sti
jbe
and
test
aad
cmp
je
jle
or
in
ss
mov
cmp
insl
jg
jge
xor
outsb
push
addl
and
xchg
cmpsl
xor
movsb
ljmp
mov
cwtl
cmpsl
jae
xchg
test
lcall
es
adc
pushf
cmpsb
and
daa
ficompl
mov
jno
xchg
ds
int3
dec
ja
mov
out
daa
pop
or
xorl
movsb
jecxz
mov
mov
in
cwtl
mov
adc
fnstenv
push
xlat
and
push
xchg
mov
or
add
enter
das
xor
mov
mov
jp
inc
sub
sbbl
movsl
movsl
dec
ljmp
inc
iret
sbb
sub
test
cmpsl
xor
in
mov
inc
sbb
or
fsubrl
sub
sub
sarb
aas
data16
popf
enter
aas
das
das
movsl
shrb
mov
xchg
add
shrl
imul
dec
cld
adc
andl
aam
adc
push
xchg
mov
addl
lea
inc
cmp
push
mov
enter
add
pop
xchg
aad
das
pop
jno
sub
in
js
jmp
jge
rolb
sarb
mov
adc
adc
push
sub
or
bts
jmp
aas
daa
mov
mov
or
call
jae
cmp
or
lahf
fldl
mov
fucomip
fidivrs
push
mov
or
mov
push
add
in
hlt
mov
testl
mov
mov
mov
fsts
jmp
jno
clc
sub
lahf
cmp
nop
xchg
dec
pop
nop
movsb
push
enter
das
inc
dec
je
nop
nop
nop
nop
out
fstl
and
push
ds
repz
fs
je
nop
xchg
add
jnp
sub
mov
int3
dec
add
adcb
pop
cmpsb
and
test
cmp
cs
dec
cmp
push
adc
nop
js
sbb
lea
mov
ror
test
add
adc
xchg
rorb
dec
and
test
or
test
fcmovnb
cmp
dec
cmp
jge
inc
mov
pop
push
test
movsb
stos
test
xchg
mov
inc
and
jo
adc
add
and
aam
xchg
mov
adc
pop
inc
inc
cmp
add
add
add
and
and
and
jno
mov
inc
ljmp
dec
and
sbb
cmp
hlt
mov
scas
push
hlt
call
mov
mov
daa
sbb
test
orb
call
orl
or
inc
or
push
push
jbe
je
imul
into
dec
dec
adc
in
das
jae
orl
xor
dec
jl
or
xor
sub
push
push
jge
add
adcl
lock
mov
inc
in
andl
data16
pop
sub
add
jmp
adc
and
add
aam
testl
cmp
test
lock
adc
push
popa
ret
sbb
int3
and
popa
in
xchg
enter
cmp
add
pop
xchg
inc
je
xchg
xor
inc
push
aam
orb
sub
testl
or
je
or
xchg
sub
clc
mov
js
stos
push
mov
mov
push
mov
sub
movsl
xor
lock
and
xor
lock
mov
jl
inc
aaa
and
pop
xchg
xchg
adc
jno
adc
jno
insl
call
dec
str
shll
inc
or
pusha
pop
loopne
sti
ds
test
cwtl
test
or
xor
mov
jecxz
push
decb
lea
inc
cmp
dec
add
inc
pop
ficompl
pop
sub
test
sbb
insb
push
jecxz
jmp
inc
dec
push
cs
or
mov
xor
lahf
shlb
sbb
ljmp
imul
push
in
add
shrb
test
cmp
ret
sti
inc
cwtl
test
push
pusha
loopne
dec
jecxz
mov
inc
or
test
clc
or
adc
push
dec
or
dec
or
adc
push
ss
jecxz
xor
xorb
push
test
sbb
adc
notl
or
mov
ljmp
push
inc
enter
mov
std
and
in
loopne
xor
inc
testl
dec
or
push
pop
divl
in
stos
js
jo
pop
ds
mov
mov
dec
xchg
mov
jle
push
push
jne
je
add
ljmp
insb
or
or
push
decl
ss
pop
inc
cli
add
add
add
rcrl
jp
mov
int3
xchg
aam
and
mov
add
and
addb
ljmp
xchg
push
push
push
mov
sbb
inc
in
mov
jno
fsubs
inc
or
pop
mov
xor
inc
add
jmp
popa
dec
sub
cli
outsl
add
mov
lcall
ret
cmpl
movsl
test
les
xor
push
jmp
rorb
je
adc
and
or
pop
pop
sti
rorb
popf
in
mov
clc
aam
fadd
pusha
not
mov
jne
xor
cmp
sbb
push
je
jne
add
mov
inc
mov
popa
pop
dec
xchg
cmc
inc
leave
mov
mov
test
in
or
call
inc
adc
dec
dec
mov
add
inc
cld
jle
mov
lea
rcrb
pop
mov
mov
cmpb
mov
cvtps2pd
jg
sbb
sar
pop
mov
xor
xchg
push
inc
or
loopne
ret
test
idiv
mov
fdivr
pop
fsubs
lret
neg
sub
je
or
sub
je
sbb
scas
pushf
pop
or
pop
cs
pop
add
orl
sbb
cli
sub
sub
or
in
mov
adc
negb
jl
mov
mov
mov
shlb
lea
ja
cmpsb
xor
add
fs
out
sbb
inc
hlt
stc
nop
je
xor
mov
or
inc
insb
je
lock
or
mov
test
loope
ds
xor
sub
xlat
mov
sbb
pop
and
pop
xchg
ss
or
xor
mov
inc
inc
fiadds
xor
movsl
cwtl
cwtl
or
fs
ss
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
inc
add
push
mov
mov
push
outsb
lret
mov
jecxz
pop
popf
and
mov
sbb
sbb
jle
inc
je
scas
pop
xor
pop
push
or
add
lcall
inc
or
fdivr
shr
pusha
and
test
and
jae
imul
xor
in
mov
jo
xchg
mov
jne
das
ja
adcl
pop
sbb
fdivrl
mov
in
or
fmuls
mov
pusha
imul
inc
fcmove
add
mov
or
push
jno
enter
popf
cmp
cld
push
insl
cmp
jl
xor
add
negl
mov
call
push
aam
dec
add
cmp
test
sti
cmpl
mov
shlb
push
mov
aas
push
cmp
add
and
mov
lcall
roll
lret
mov
sub
imul
xchg
or
js
jecxz
mov
xchg
lea
cmp
cmp
jns
push
sbb
xchg
test
sub
outsb
jo
add
add
xor
add
addr16
push
ret
lods
cld
inc
push
outsb
je
test
push
ss
push
enter
cwtl
fwait
aas
add
xor
pop
insb
xor
imul
mov
movsb
adc
push
add
les
sbb
or
pusha
or
jecxz
sub
add
into
ret
jne
jle
mov
mov
jne
mov
jmp
cmp
jle
cmp
fnstsw
mov
inc
pop
loope
pop
inc
sub
add
int
or
mov
sub
scas
fucomp
call
cld
adc
inc
cmc
mov
fimuls
lea
xor
es
mov
mov
mov
jecxz
lea
stc
push
movsl
push
pop
xchg
jbe
cmp
sbb
dec
scas
clc
add
jne
and
push
adcl
pop
push
orb
movsb
sub
cmp
out
addr16
decb
mov
mov
lds
add
adc
clc
and
push
pop
data16
push
cs
js
sub
lret
push
popf
out
mov
jne
push
sub
in
je
adc
fisubrl
xchg
or
or
aas
int3
je
cltd
je
sub
test
pop
jl
mov
pop
and
orb
nop
mov
fimull
jge
add
shll
sbb
dec
test
pop
mov
or
jne
and
loope
lods
jne
mov
outsb
das
sbb
fldenv
pop
mov
push
inc
mov
and
rorl
cld
xor
xchg
push
cld
xchg
sahf
add
mov
dec
jmp
pop
xchg
pshufw
sub
sub
stos
pop
adc
adc
je
into
xorb
or
dec
shlb
decl
movb
inc
jmp
mov
les
or
jmp
dec
sub
insb
cmp
xchg
cmp
sub
inc
int3
jle
sar
roll
lret
sti
cs
mov
mov
push
and
sub
cmp
jmp
test
sahf
and
push
xor
aam
cltd
sub
sub
push
adc
in
adc
mov
lahf
cmp
fdivrl
lea
jns
push
int
add
add
push
xchg
cmpsb
mov
jbe
dec
sbbl
jne
mov
or
jno
aaa
add
fisttpll
mov
rcll
das
popa
jle
sbb
ret
lret
jp
mov
jg
xchg
mov
xor
mov
xchg
push
and
loopne
icebp
jl
testl
push
xchg
push
clc
cmp
movsl
daa
pop
mov
adc
mov
or
in
in
sub
movsb
cmp
add
pop
xlat
dec
vrsqrtps
sub
or
mov
ds
ja
rcrb
push
out
cltd
nop
pusha
loope
out
jecxz
imul
sub
js
call
inc
test
mov
adc
jo
and
idivb
cld
idivb
lea
addr16
cmp
push
inc
sub
scas
or
fcompp
loopne
mov
loope
and
rolb
and
lcall
mov
out
push
mov
mov
push
pusha
mov
push
push
mov
xchg
adc
or
jl
out
jp
clc
push
pop
popf
or
add
push
cwtl
data16
out
fs
inc
xor
pop
shl
js
pop
sahf
mov
xor
fistps
sub
sub
xor
cmp
lods
arpl
stos
add
jmp
push
xchg
xor
push
jne
inc
jmp
push
adc
push
xor
ret
inc
loopne
push
adc
xchg
imul
cmp
ret
int
lret
dec
mov
or
mov
testl
adc
rclb
gs
mov
or
mov
adc
enter
cmp
or
fld
xchg
fdivl
rclb
popa
adc
jmp
sbbb
add
sub
cld
shr
mov
leave
lds
daa
imul
dec
xor
jno
out
xor
rorb
cld
clc
adc
or
cld
jmp
add
je
cli
add
cmp
jbe
push
pop
jbe
jl
jo
dec
or
subb
cmc
jmp
jae
mov
shr
lea
not
and
decb
jne
arpl
and
adc
mov
pop
cmp
pop
add
fidivrl
mov
add
pop
and
shll
push
or
mov
sub
jmp
clc
and
jle
push
and
push
shlb
and
sti
add
pop
or
pop
cmp
mull
inc
add
mov
imul
sbb
out
cwtl
lret
cmpsb
loopne
jno
jno
mov
insb
push
shr
not
and
pusha
daa
dec
pop
jne
sub
jmp
lea
stc
push
mov
xor
pop
lock
add
mov
dec
or
add
inc
xchg
mov
push
fisubs
js
cs
int3
inc
add
ficoms
pop
dec
or
adc
pusha
mov
mov
inc
mov
mov
ret
jp
lret
or
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
jo
jmp
xor
inc
mov
and
jb
push
and
and
andl
pusha
decl
lsl
scas
out
fcmovne
jle
push
push
call
aas
gs
push
or
fidivrl
andl
add
decb
adc
call
xor
and
jecxz
push
cli
pushl
push
push
mov
or
mull
xchg
pop
int
mov
fadds
js
es
adc
sarl
jl
push
cmp
rorl
cmp
mov
shrb
cmp
jbe
mov
sbb
dec
je
jne
data16
xchg
xor
loopne
mov
mov
addl
adc
popa
push
les
test
rcl
adc
data16
xor
jae
outsl
and
fucomi
fwait
orl
lods
jne
dec
incl
and
or
mov
or
push
data16
testb
rolb
jge
ljmp
test
fs
or
incb
pop
out
add
sub
xchg
dec
or
hlt
or
or
repz
jge
xchg
xlat
add
int
cltd
decl
xchg
or
out
push
sub
shr
lret
cwtl
orb
or
or
push
jne
insl
clc
inc
nop
cld
movups
scas
mov
cld
lock
call
dec
loope
ljmp
add
adc
dec
dec
rorl
inc
fs
aas
test
mov
mov
jecxz
adcb
test
dec
dec
inc
jne
or
and
cld
ljmp
int3
les
pop
xorl
mov
push
mov
pop
shr
jb
xor
test
push
loopne
add
mov
and
pushf
jle
add
inc
mov
cmp
lock
mov
aam
jne
push
mov
int3
push
pop
movsb
sub
pop
inc
pop
mov
cmpsl
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
push
xor
in
ljmp
adc
pushf
sar
dec
mov
pushl
movsb
pop
fstpl
lea
data16
sub
adc
lcall
pop
dec
pop
pop
xor
cmpsl
imul
nop
dec
rcrl
iret
jmp
data16
and
js
mov
imul
adc
inc
insb
xor
out
sahf
and
push
inc
and
clc
jl
fldl
or
jle
imul
mov
inc
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
fcoms
mov
in
aaa
cmp
xor
cmp
repz
mov
test
pop
xchg
push
mov
ss
fbstp
jo
jmp
ja
dec
ficoms
add
push
sti
mov
lea
outsl
ret
mov
xchg
jbe
and
shll
movsl
loope
cmp
lods
decb
push
cs
lret
into
mov
mov
xor
jns
dec
ss
dec
push
add
loop
ja
or
jne
ret
shll
adc
loope
inc
cmp
push
jecxz
add
push
push
jge
jb
out
and
addb
rclb
or
out
fldcw
push
nop
cmp
and
incb
add
or
rol
lods
or
dec
data16
push
jne
mov
sbb
jne
jmp
sahf
imul
jnp
add
xor
mov
jmp
rcrb
and
xchg
xor
pop
lcall
in
loopne
cmp
pushl
sbb
in
loope
fildl
mov
jl
and
lock
outsb
pop
iret
jne
fwait
jno
and
sbb
iret
adc
push
xchg
jmp
jmp
fisubs
aad
repz
mov
and
jne
int3
sbb
outsb
leave
inc
test
mov
lock
push
pushf
mov
sub
icebp
sbb
fdivrl
push
sbb
add
jo
jp
xchg
sbb
iret
push
sbb
mov
push
xor
mov
inc
mov
decb
jne
or
or
sub
dec
mov
addr16
pop
pusha
dec
bound
dec
jmp
and
and
imul
je
out
xor
adc
into
push
or
das
pop
xor
dec
insb
xor
sub
jge
cli
jmp
cmc
push
or
testl
inc
insl
and
in
mov
pop
inc
mov
or
test
or
adc
jp
mov
and
lods
cmp
lods
fldl
dec
jne
cmp
jno
push
mov
and
inc
add
aaa
push
iret
rorb
mov
add
je
pop
inc
lea
nop
in
jb
or
xorl
clc
or
add
sbb
adc
jp
xor
jbe
test
mov
add
ret
clc
addr16
pusha
jecxz
push
lock
jp
add
add
cmpsb
lock
scas
arpl
jg
and
jnp
orl
adc
shlb
cmp
push
xchg
inc
xlat
orl
xchg
mov
cmp
cmp
sub
or
push
mov
inc
or
lock
push
xor
add
insl
sbb
or
in
cmp
push
xchg
or
sbb
icebp
xchg
inc
orl
push
dec
ja
push
add
mov
push
jmp
add
mov
xor
dec
push
pop
mov
jecxz
fidivrs
pop
sub
sarl
mov
std
lahf
pushl
adcl
mov
lahf
pop
ret
je
out
pop
jne
push
inc
rcll
pop
mov
add
sbb
test
movsl
dec
call
iret
loopne
push
mov
scas
testl
jmp
cmp
inc
mov
cmpsl
jle
adc
mov
repnz
lock
and
push
adc
push
insb
int3
push
mov
imul
inc
je
mov
sbb
push
in
adc
or
mov
push
or
aam
loopne
cltd
rolb
dec
adc
xor
pop
or
nop
jg
pop
data16
or
jnp
push
xchg
inc
mov
mov
mov
cwtl
movsb
mov
js
popf
call
rclb
test
or
sbbl
jmp
shrb
cmp
cmp
call
movzwl
rcrb
int3
in
iret
shrb
test
cmp
add
cmp
mov
aas
enter
mov
cwtl
mov
test
mov
or
lcall
xor
ja
push
mov
push
mov
cli
out
cmpsl
gs
jns
dec
xor
sbb
popa
mov
xchg
shll
add
pop
add
sti
or
sbb
xchg
arpl
add
mov
sub
rcrl
ja
leave
rorb
lods
cli
or
lods
cli
adcl
fistps
in
push
push
icebp
push
inc
dec
ja
cmp
mov
xor
in
ficoml
pop
and
jb
sbb
jg
add
cmp
lea
pop
inc
xor
cmp
nop
inc
push
cmp
cmc
jmp
lcall
xor
sub
pop
std
movsb
xor
sub
jne
cmp
movsb
in
leave
or
lea
nop
add
sub
add
test
lods
pusha
lock
subl
xchg
dec
sbb
addl
dec
cmpsl
push
sbb
adc
in
leave
enter
leave
mov
pusha
call
lods
pop
lods
pop
leave
dec
movsl
jb
pop
neg
lret
iret
enter
scas
pusha
push
cmp
dec
outsl
lahf
jo
cs
push
pusha
jns
inc
xor
lahf
inc
push
in
fimuls
cld
adc
xchg
stos
es
xor
popa
pusha
cld
icebp
test
dec
in
inc
mov
rcll
adc
in
inc
enter
jae
hlt
xor
pop
xchg
xor
lods
push
test
lods
rorb
sbb
xchg
test
or
call
in
xchg
in
ret
mov
les
mov
shl
xchg
int3
shlb
in
and
enter
pushf
sbb
inc
les
xchg
xchg
ret
test
aas
pop
cld
mov
cld
enter
cmp
retw
pop
mov
sysret
nop
mov
movsb
cmc
or
popa
xor
xchg
cli
and
jns
dec
fidivs
jno
repz
arpl
add
lea
push
jne
cmp
push
mov
scas
and
xchg
push
movsb
cltd
sub
mov
js
lret
mov
add
clc
js
cltd
adcb
inc
mov
mov
add
or
fwait
rcll
outsb
repnz
or
xchg
and
std
or
cmpsl
xor
adc
mov
jne
push
incl
adc
mov
pop
push
mov
imul
jnp
inc
and
push
adc
ret
push
mov
jmp
ffree
xor
adc
xchg
add
shr
cmp
lods
or
fsubs
push
icebp
imul
add
sbb
mov
jne
rcrl
stc
add
mov
aaa
inc
cld
push
add
push
test
aaa
nop
pop
nop
lods
add
cltd
movsl
adc
sub
push
int3
ja
push
aaa
mull
or
imul
or
int3
push
lret
cmp
sub
rolb
imul
cli
sti
cmpsl
mov
mov
adc
dec
test
hlt
and
lret
adc
cmpsb
xor
jg
imul
mov
push
pop
sub
sbb
dec
mov
insl
ljmp
dec
je
scas
and
pop
inc
fsubs
lret
insl
loopne
pop
push
add
call
fldl
or
and
in
dec
aaa
adc
out
lcall
mov
pop
jmp
jo
push
repnz
cmc
mov
pop
sub
das
sub
xchg
or
aas
add
and
sbb
pop
gs
push
sti
fldenv
lcall
adc
and
sbb
out
sbb
lahf
ret
pop
dec
fnstcw
xor
sub
sbb
fwait
daa
dec
cmp
fwait
add
or
inc
add
jno
mov
sbb
hlt
test
xor
xlat
cmp
in
mov
adc
faddl
push
fdiv
pop
shlb
push
push
shl
pop
and
adcb
jne
dec
mov
adc
lock
push
mov
cmp
out
sahf
scas
mov
ret
sub
add
dec
out
pop
push
cmp
adc
mov
ss
enter
sti
dec
daa
insb
dec
inc
sbb
inc
rorb
mov
leave
fs
stc
pop
hlt
sub
ds
xchg
xlat
and
inc
jle
out
ret
jnp
push
inc
clc
add
xchg
rorl
push
push
xchg
jmp
inc
fsubrl
add
add
fstl
popa
push
jmp
test
add
or
ljmp
cmp
and
ret
and
push
push
adcl
out
outsb
cmp
inc
int
shlb
jns
cmpb
add
adc
sub
stos
lods
or
aaa
xchg
pop
int
clc
push
mov
mov
mov
mov
xchg
or
add
jne
jmp
gs
call
test
xchg
int3
call
bound
pop
mov
cmp
jne
ror
lret
scas
pop
mov
stos
mov
clc
fcoms
call
incb
or
or
pop
add
jne
push
mov
loopne
sar
test
ret
and
add
addr16
int
lahf
decl
loopne
jge
cs
rolb
pop
push
dec
push
inc
inc
pop
push
pusha
rep
dec
hlt
std
push
or
or
adc
mov
jb
je
rcll
hlt
adc
mov
mov
mov
rcrb
jne
xchg
lret
shl
enter
dec
sbb
into
int
dec
push
dec
scas
push
pop
or
add
or
xor
add
clc
sub
mov
cmp
hlt
es
lods
in
stc
or
popa
sbb
inc
es
xor
lret
gs
call
insl
and
dec
je
shrl
mov
cli
cmp
std
pop
lods
add
jne
inc
adc
es
aad
in
adc
and
ss
mov
lret
testl
inc
xor
mov
xchg
movsl
cld
inc
push
fimull
xor
imul
cmpsb
rol
jne
js
cmp
cmpsl
test
dec
or
nop
pop
mov
cmp
leave
mov
cmp
mov
mov
push
push
push
xrelease
in
push
movsb
lret
iret
sbb
push
pop
call
adc
push
or
ret
addr16
mov
xchg
or
adc
sti
push
inc
cmp
xor
gs
sub
out
in
mov
lods
scas
outsl
gs
cwtl
add
dec
jnp
dec
mov
xor
cwtl
xchg
mov
push
adc
xor
pushf
adc
mov
cltd
insl
sub
push
mov
or
fidivrl
jns
daa
mov
mov
add
jns
xorl
hlt
std
adc
in
jnp
xchg
testb
shr
mov
sub
or
or
cmp
aaa
bound
xor
int
sbb
inc
add
jbe
or
sub
cmp
xor
dec
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
ja
std
aaa
addr16
cltd
xlat
das
lock
fdivr
mov
adc
ret
out
pop
mov
or
rcr
push
mov
sub
rcrb
jb
sbb
sbb
gs
iret
arpl
pop
fsubr
std
call
std
aas
mov
fadd
mov
js
mov
dec
push
mov
fsubs
sbb
jge
mulb
fdivl
push
xor
mov
ffree
pop
idivb
std
lds
sub
and
testl
xchg
test
mov
mov
fildl
fmuls
push
cmp
cmp
xor
jle
push
push
mov
mov
cld
mov
test
push
imul
mov
leave
cli
add
push
xor
pop
shrb
jle
iret
dec
xor
roll
push
xor
mov
ja
adc
lahf
sbb
cmp
xchg
adc
mov
xchg
adc
std
call
mov
xor
pop
imul
test
daa
xchg
mov
repz
fisubl
push
mov
jge
adc
popa
mov
mov
ds
data16
lret
test
mov
sub
mov
jmp
popa
dec
jmp
dec
mov
clc
add
test
std
pop
lock
mov
loop
xor
push
sub
sub
aaa
sbb
jmp
adc
and
dec
jge
int3
cmp
cmp
xchg
arpl
dec
pop
jle
adc
shrl
mov
sub
fbstp
aad
les
insl
dec
xor
in
mov
movsb
adc
xlat
xchg
add
in
cmpsb
divl
loopne
push
inc
lret
jne
cmp
xchg
cmp
add
dec
hlt
or
jp
jne
fdivr
dec
jl
add
push
dec
pop
jno
push
xchg
push
je
inc
dec
cmp
adc
addb
enter
jo
aaa
fsubrl
mov
bound
jnp
dec
sti
xchg
sbb
notl
mov
dec
jbe
inc
das
xchg
mov
xor
mov
mov
rcr
jne
inc
sub
xor
xor
aad
pop
leave
cltd
movsb
jb
mov
movsb
in
and
in
int
push
mov
repnz
and
loopne
inc
lea
aad
pop
lea
adc
icebp
dec
sub
cmp
ja
add
inc
stc
imul
or
lock
pop
xchg
loope
repz
xlat
jo
ret
ret
sbb
dec
mov
mov
xor
dec
push
lock
mov
pop
repz
add
xor
push
repz
test
repz
movsl
call
add
call
sbb
les
push
int3
mov
and
and
adc
jb
sbb
and
int3
mov
int3
mov
xchg
xchg
les
out
xor
fstl
dec
cmp
sub
push
stc
mov
jb
int3
mov
dec
in
sbbl
xchg
or
movsb
xor
pushf
inc
enter
push
and
lcall
dec
clc
aad
xchg
mov
test
dec
dec
or
adc
cmp
sti
inc
lea
pop
std
in
push
cmp
cs
loope
and
and
in
sbb
mov
nop
mov
insb
dec
cmpsl
add
mov
mov
leave
sti
data16
inc
es
inc
stos
popa
dec
imul
pushf
pop
repz
xchg
pushf
pop
arpl
adc
addr16
mov
fisubrs
xchg
mov
jl
pop
mov
ds
mov
mov
or
xchg
xchg
adc
or
jns
inc
icebp
leave
add
or
jne
sbb
add
movsb
bound
dec
call
leave
adc
repz
test
leave
test
inc
scas
nop
mov
xchg
pushf
pushf
nop
nop
add
nop
pushf
inc
push
cmp
cmp
cmp
test
pop
push
rorb
pop
je
data16
xchg
jmp
push
outsb
movsb
aaa
pop
jns
cmpsl
std
sbb
inc
add
roll
dec
movsl
icebp
std
fs
jae
dec
lea
inc
inc
xor
shr
cld
out
fisubrl
pop
inc
stc
nop
sbb
movsl
sar
and
adc
and
inc
dec
add
xchg
push
pusha
jo
stos
add
cwtl
xchg
rorb
adc
cltd
out
out
adc
cli
sub
or
push
loop
pop
rolb
sub
jmp
int
js
sub
inc
add
aam
or
jp
jge
cmc
mov
xchg
dec
rep
ss
neg
pop
mov
cmc
lods
shlb
lock
push
dec
or
lods
into
add
xchg
mov
add
or
xor
adc
or
mov
dec
adc
push
and
icebp
dec
lahf
out
cmpsl
push
push
pop
outsl
inc
or
jbe
test
jo
outsl
ja
or
push
jg
and
cmpsl
mov
push
daa
push
jo
outsl
cmp
ret
daa
mov
lods
lret
push
daa
mov
or
xor
dec
test
and
add
adc
icebp
rcll
add
xor
sub
xlat
xchg
ja
ss
sub
lcall
fsubrs
fsts
clc
in
lock
fidivl
inc
rep
jge
jne
xor
xchg
in
fimuls
and
in
or
jp
mov
rol
or
aam
push
ret
push
mov
dec
mov
sbb
jo
pop
cmovno
pop
add
inc
cld
vcvtps2pd
xchg
sbb
gs
mov
shl
loopne
bound
ss
xor
aam
divb
shlb
rcl
icebp
divl
xor
pop
xchg
pop
jno
mov
xchg
ja
in
dec
pusha
jl
cmp
cmp
jnp
lds
mov
xchg
and
mov
adc
mov
and
push
pop
mov
sub
add
jb
cmp
ret
stos
adc
jo
test
into
js
xorb
jl
mov
pop
sti
inc
mov
and
adc
mov
add
jne
test
outsl
mov
test
je
divl
adc
int
cli
cmpsl
loop
ret
aaa
mov
sbb
xor
js
lahf
or
and
jle
ljmp
cli
sub
mov
pushf
xchg
jle
sbb
fucomip
stos
ret
iret
bound
fsubs
mov
push
jno
pop
rcr
push
inc
cs
add
xor
sbbb
cli
sub
mov
lock
mov
jmp
mov
in
mov
test
inc
push
js
loope
add
mov
add
mov
loope
hlt
mov
or
insb
daa
or
adc
inc
or
push
add
je
hlt
daa
lcall
inc
sbb
jae
testl
es
xor
andl
sub
xlat
dec
ljmp
cs
sbb
pop
shlb
scas
mov
and
jp
and
sahf
pop
adc
or
sub
mov
push
or
jbe
shl
fs
inc
push
pop
in
pushl
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
ljmp
testl
pop
jb
cmp
or
cmp
sub
or
xor
and
xchg
cmp
or
fcmovu
fcmovu
adc
and
stos
lret
es
push
rolb
mov
add
ja
test
pop
jmp
pop
test
pop
stc
movb
inc
pushf
and
stc
clc
movb
fwait
inc
je
push
jno
push
mov
pop
cmp
xchg
adc
pop
sub
push
lea
std
popf
jp
xor
add
sbb
or
clc
inc
add
fsub
cmp
pop
popa
sub
sbb
shlb
adc
xorl
inc
xor
and
dec
leave
and
daa
sbb
jne
mov
adc
pop
sbb
sbb
adc
movsb
lods
xchg
stos
dec
and
pop
sbb
inc
and
imul
dec
sbb
sbb
mov
inc
cmp
scas
sarb
add
lea
or
jb
notl
aas
push
cmc
add
lret
or
ss
ret
out
dec
adc
cmc
jne
roll
cmp
jl
incb
and
int
adc
out
xchg
js
xor
ds
pushf
and
addb
adc
cmp
mov
fs
mov
inc
or
fs
into
in
shll
dec
mov
mov
leave
mov
outsl
subb
mov
lret
test
shlb
aas
adc
loopne
push
stc
loopne
sbb
push
or
movsl
movsb
and
inc
xor
cmp
js
mov
iret
add
add
add
pop
test
and
or
aaa
dec
push
sbb
lock
rclb
xor
or
adc
jge
in
test
push
xor
cmp
or
test
rcr
inc
xor
push
lock
adc
mov
inc
sbb
pusha
rclb
add
dec
int3
inc
cmp
push
mov
out
adc
cltd
ret
mov
mov
mov
add
pop
loopne
loopne
and
lea
and
repnz
outsl
xchg
or
mov
pop
ret
gs
inc
shlb
pop
cwtl
adc
push
test
icebp
movsb
shlb
je
mov
fdivrp
iret
mov
stos
ss
sub
or
mov
in
ret
adc
mov
mov
into
loopne
xor
ret
std
inc
jecxz
icebp
jmp
iret
xor
jo
and
ljmp
stos
addb
in
mov
mov
adc
push
out
inc
and
daa
ss
pusha
aas
iret
shll
xchg
pop
sub
out
dec
addr16
outsb
or
cld
clc
and
and
jbe
test
repnz
and
add
test
push
sub
xor
cmp
push
mov
int
cli
or
rsqrtps
or
icebp
lods
xchg
lret
hlt
icebp
repnz
pop
pop
hlt
xchg
add
mov
or
jbe
cmp
sub
ljmp
jb
inc
fistpll
sub
les
mov
cmp
roll
and
xor
daa
dec
sbb
ret
jg
mov
sub
xor
or
pop
cmpb
push
dec
sbb
pop
es
mov
push
pop
hlt
cs
sti
jb
inc
sub
ds
adc
icebp
pushf
lahf
push
push
xor
mov
sbb
jmp
cmp
lock
mov
jle
push
jno
orl
push
cs
cmp
push
mov
sub
inc
and
pop
nop
sbb
add
loopne
mov
sbb
add
arpl
jecxz
nop
andl
mov
mov
add
push
lret
mov
imul
or
mov
out
lods
or
scas
sbb
cwtl
or
mov
push
inc
or
sbbl
fnop
adc
sti
add
fmull
ret
dec
pusha
lcall
js
pop
jp
test
cmp
stos
rorl
jle
push
sbb
imul
jle
cmp
lods
rcll
add
and
ss
and
loop
sub
cmp
out
mov
cmp
popa
pop
orl
push
mov
cs
lret
cmp
xchg
push
mov
fdivl
lock
leave
push
orl
pusha
data16
mov
sub
dec
mov
dec
mov
xor
cmpsl
pusha
int
out
push
cmp
xchg
inc
shl
divb
and
mov
inc
roll
pop
cld
cmp
add
into
out
xor
bound
outsl
adc
movsb
cmc
sub
mov
or
lock
shll
fs
and
jne
fstps
scas
shll
fidivs
xor
inc
jmp
push
mov
add
cmp
mov
sub
dec
jbe
pop
xchg
mov
scas
pusha
arpl
sub
sbb
out
inc
aam
jmp
mov
loope
sub
mov
mov
cmpsb
push
xchg
pop
fidivrl
mov
cmp
in
or
push
inc
pusha
insl
or
es
dec
add
or
je
adc
aam
inc
pusha
jne,pn
sbb
mov
mov
mov
adc
cmp
jge
mov
add
jle
mov
pop
mov
sbb
inc
loop
fildl
jnp
jg
pop
sbb
push
push
adc
sbb
xchg
pop
adc
cmp
or
js
xor
push
adc
cmp
pop
add
sbb
lcall
add
mov
in
das
imul
add
adc
sbbb
pop
movsb
mov
sbb
bound
jecxz
test
cmovns
cmpl
xchg
mov
and
and
add
jnp
adc
in
scas
cmp
push
sbb
and
dec
cmp
add
dec
dec
dec
arpl
call
inc
cmp
out
mov
ja
shlb
xor
and
pop
rorb
loope
xchg
test
jmp
push
pop
inc
out
fildl
add
sbb
mov
push
push
push
dec
and
mov
aam
loopne
cmp
jbe
jne
testl
lea
mov
dec
adcl
popa
xchg
mov
pop
je
sbb
push
cs
mov
ret
sub
repz
sub
enter
lds
adc
daa
mov
sbb
add
pop
or
dec
adc
xor
add
in
inc
jnp
inc
lods
dec
push
out
mov
movl
nop
aad
pop
or
mov
in
fdivs
data16
xor
and
jmp
incl
dec
mov
decl
sbb
mov
mov
xor
movb
gs
mov
or
xor
inc
stos
xor
or
xchg
add
inc
jge
icebp
fs
fsubrs
sbb
dec
jmp
xor
xchg
adcl
ret
inc
loop
incl
mov
xor
pop
add
inc
pop
je
pop
es
cmp
in
dec
jb
je
stos
or
or
adcl
fisubrl
outsb
adc
add
xor
sub
xchg
xchg
lcall
dec
inc
ficoms
daa
clc
cmp
rclb
inc
mov
sub
ror
inc
add
sti
shr
xor
inc
pop
loope
pop
add
jne
arpl
sub
cs
js
pop
negl
mov
dec
sub
daa
cmp
pop
dec
les
push
mov
push
shl
inc
jmp
add
mov
or
sbb
add
or
aas
imul
jae
inc
jecxz
dec
mov
inc
mov
out
sets
add
push
ss
stos
jo
xchg
mov
xchg
jge
push
adc
jge
orl
or
adc
mov
or
jle
pop
loope
push
adcb
cs
adc
lds
inc
inc
cmpsl
pushf
or
or
or
sbbl
push
mov
mov
dec
mov
cmp
dec
inc
inc
mov
sbb
repnz
sub
push
sar
xchg
loopne
add
inc
hlt
arpl
jle
cwtl
mov
jae
pop
outsl
fcoml
clc
dec
jb
scas
roll
aad
gs
push
dec
jne
cld
sub
cwtl
ret
jmp
add
addb
push
lock
mov
adc
or
pop
xor
sti
or
push
sbb
lock
or
mov
push
cwtl
push
add
or
lds
mov
push
sub
pushf
xchg
pop
mov
and
dec
add
mov
xchg
add
add
call
and
xor
or
cmpsl
insl
fwait
outsl
or
or
push
and
ja
lcall
outsl
add
pop
in
js
dec
in
cmp
cmpsb
pop
mov
mov
sbb
or
push
mov
mov
add
dec
les
pop
pop
sbb
pop
cwtl
xchg
add
jns
addl
sub
pop
lock
dec
andb
and
add
test
into
add
inc
cmp
movl
test
jle
inc
add
jmp
dec
aas
push
mov
dec
inc
stos
adc
bound
pusha
push
mov
call
sar
and
shl
add
and
mov
out
inc
add
and
push
xchg
ret
mov
sub
out
incl
hlt
inc
adcl
scas
cltd
rclb
addl
cmp
push
addb
lea
jmp
xchg
andl
testb
mov
shl
mov
addl
aas
push
mov
ljmp
mov
jne
rclb
inc
idivb
add
or
je
and
popl
add
shrl
mov
loope
pop
xor
adc
test
fildl
xorb
bound
mov
mov
not
mov
xor
cs
push
xor
fwait
adc
lock
xchg
push
sahf
cmpsb
cmp
loope
lock
push
or
imul
dec
adc
ret
jmp
test
adc
loopne
or
xor
sbb
mov
push
rcrl
dec
loope
mov
sub
std
enter
clc
mov
and
jb
rcrl
add
cmp
jecxz
ret
sub
mov
inc
adc
jne
ljmp
sbb
lock
mov
rorl
add
jle
mov
fnsave
mov
popa
push
mov
rorb
clc
jae
daa
cld
inc
jge
imul
inc
xor
push
add
ret
pushl
add
jle
mov
add
push
push
jae
pop
daa
int
jmp
pop
lods
lret
mov
inc
add
pop
sahf
mull
inc
adc
jl
repnz
fsubp
cmpb
hlt
dec
mov
adc
inc
nop
aaa
xchg
lock
add
bnd
js
cmp
pop
je
push
dec
popa
xchg
clc
cmp
fnclex
test
cld
sti
push
imul
or
ficomps
and
mov
add
xchg
out
mov
nop
mov
les
lods
jmp
lods
pop
and
xchg
shl
jbe
push
xchg
adc
aam
test
shr
add
push
subl
fnsetpm(287
inc
pop
jmp
shr
adc
push
fidivl
call
push
jb
mov
lret
int3
push
call
xor
iret
decl
sub
rorl
cwtl
push
mov
les
push
jle
ds
and
cwtl
cmp
add
cmp
add
and
mov
mov
and
dec
mov
push
pop
cmp
mov
aas
add
mov
inc
dec
jmp
imul
push
xor
dec
dec
pop
jns
popa
dec
or
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
sub
push
and
cmp
push
jae
aas
ret
dec
scas
push
icebp
sbb
xor
xlat
call
pop
push
pushf
or
sub
adc
outsl
mov
mov
add
fdivs
jne
popf
lret
mov
fidivrl
dec
sti
sarl
fmuls
fsts
jmp
in
inc
mov
pop
push
push
push
lds
aam
leave
enter
push
adc
mov
mov
push
nop
cmpb
adc
test
sub
xchg
ret
jl
cmp
jg
inc
jmp
scas
hlt
pop
and
mov
jbe
cmp
imul
add
add
mov
fnstsw
aas
sbb
push
or
in
rcrb
rcr
fsubs
or
add
pop
pop
lock
in
jle
inc
push
mov
push
imul
adc
dec
aas
cmpsb
xor
imul
mov
jne
push
ja
cld
and
cmpl
in
and
push
mov
adc
push
or
push
push
jb
or
leave
jp
push
repnz
push
or
movl
inc
pop
or
inc
add
pop
fnstcw
inc
push
or
leave
addb
push
in
xlat
mov
push
cmp
filds
sbb
je
testb
je
test
sbb
pop
pop
in
insl
or
test
or
xchg
rcrb
cmp
dec
dec
inc
loopne
dec
xor
mov
or
and
in
xchg
cltd
and
sbb
cmp
jbe
add
mov
mov
fs
not
xchg
insl
mov
mov
sub
jle
cmp
jl
xchg
jbe
dec
rolb
mov
add
mov
fs
push
nop
xor
mov
scas
add
je
cltd
xorl
xchg
add
fwait
js
out
scas
in
and
or
adc
mov
jmp
sahf
sub
or
cmpsb
or
ret
sub
test
mov
sub
and
inc
ds
pop
test
cmp
or
shrl
sbb
dec
sbb
mov
sub
jl
or
mov
push
push
add
and
jg
outsl
or
adc
jnp
lock
test
mov
inc
or
xor
sub
lret
adc
xor
lock
mov
jl
push
int3
mov
or
add
add
outsb
or
jg
orl
cwtl
sbbb
mov
lea
fstpt
test
xor
test
add
bound
push
icebp
and
inc
out
dec
js
rcrl
pop
inc
sbb
es
fs
pop
jl
mov
sub
rorb
push
addr16
mov
adc
adc
fistpl
les
push
imul
inc
mov
les
add
cmpsb
jbe
add
addr16
xchg
xor
shlb
jle
mov
add
je
inc
inc
push
clc
aaa
adc
rcl
test
jg
pusha
inc
iret
push
jp
outsl
mov
out
fcomps
pusha
mov
pop
cmp
fcoml
ja
cmp
clc
cmp
jae
jo
push
insb
cmpsb
mov
fidivrl
pushf
jg
mov
scas
or
mov
fldz
notl
xchg
lods
adc
xor
repnz
inc
cmpsl
and
and
push
ljmp
scas
rcrb
rolb
pop
flds
jle
mov
lcall
cmpl
pop
frstor
lods
push
fxch
xchg
adc
lock
rcr
addb
or
testl
xor
dec
or
test
and
mov
mov
cld
or
cld
sbb
push
xchg
or
ja
xor
repnz
loope
inc
insl
and
sbb
ret
lock
hlt
or
xor
test
inc
jb
pop
je
std
and
pop
push
testl
idivl
cmc
outsl
and
or
pushf
cmp
or
je
xchg
pop
fs
pop
je
mov
sbb
fisubl
jmp
outsl
sub
les
iret
shl
add
sbb
mov
and
add
imul
xchg
shll
mov
inc
sub
xchg
or
bound
das
mov
adc
cmp
adc
repnz
and
xor
pop
and
add
adcb
add
jmp
xor
rolb
xor
adc
test
pushf
sbb
add
sub
xchg
cmp
loop
hlt
inc
mov
icebp
enter
and
cli
inc
cs
arpl
mov
pop
sub
rcrl
mov
popa
test
mov
pop
out
pop
adc
inc
repnz
sbb
and
mov
sub
add
xchg
rorb
lcall
mov
mov
dec
out
pop
rcll
data16
mov
cmp
jae
push
cmp
jl
shlb
pop
mov
inc
mov
inc
insb
xchg
add
leave
je
inc
in
pop
jns
jle
pop
lock
jne
clc
or
mov
or
cmc
or
ljmp
pusha
jb
mov
repnz
addl
sub
test
scas
in
dec
dec
xor
adc
bound
lods
fidivl
scas
mov
lods
std
mov
out
add
push
fmuls
or
insl
gs
dec
incl
sbb
adc
dec
adcl
pop
stc
adc
jne
inc
push
or
xchg
xlat
out
xlat
mov
jns
jne
jmp
fildl
or
push
ret
jnp
shlb
sbb
test
fwait
jecxz
loopne
mov
pop
jle
ret
movb
inc
jmp
inc
jmp
sub
inc
sub
add
subl
imul
adc
aam
mov
jno
imul
push
jp
jecxz
or
clc
dec
gs
cmp
mov
adcl
rorb
stos
jo
jl
ret
sub
outsb
lods
pusha
pop
and
repnz
roll
in
pusha
jbe
add
add
loopne
mov
ret
decl
xor
dec
jg
adc
xor
jecxz
mov
call
lret
pop
hlt
jno
mov
in
mov
out
or
fadds
clc
das
nop
or
or
push
pop
scas
jne
mov
pop
std
jb
test
add
xchg
or
pop
test
adc
sub
out
cmp
imul
jne
or
ljmp
bound
push
dec
xor
adc
lock
xchg
enter
stos
or
or
lret
mov
pop
pop
aad
push
mov
ljmp
xor
adc
shrl
ret
out
mov
mov
add
mov
adc
xlat
je
cmp
push
adc
shll
testb
mov
lea
and
pop
add
popf
nop
cmpb
jmp
inc
jl
mov
test
pop
je
les
and
xor
cmp
add
cwtl
sbb
push
or
movsb
loopne
lret
mov
push
sub
fildl
jmp
das
xor
lock
jge
imulb
adc
pop
arpl
pop
adc
add
mov
and
jle
aam
fcmovu
mov
fstpl
pop
jmp
adc
mov
sbb
clc
inc
pop
pop
cltd
pusha
inc
or
pop
jl
add
push
push
pop
sub
mov
sbb
xchg
dec
pop
sub
sbb
mov
outsb
or
cmp
pop
push
jbe
lea
lea
or
in
add
int3
fsubr
mov
cmp
repz
jo
cld
jmp
popl
enter
and
nop
cld
push
dec
je
addr16
lea
icebp
rcll
sbb
adc
or
sbbb
sub
js
mov
data16
jnp
dec
and
or
sbb
or
xchg
push
sbb
push
mov
aas
sub
popf
xchg
call
ljmp
jbe
cmp
xor
out
lock
stos
shrb
inc
jnp
cmp
sub
push
mov
rorl
add
test
out
addl
adc
in
ss
ss
leave
leave
leave
sub
xor
ret
sbb
cmp
fisttpl
and
inc
inc
cmovs
push
push
pop
add
pop
pusha
fs
insb
jo
js
xchg
xor
jl
sbb
dec
rclb
mov
xchg
cwtl
pushf
dec
xor
and
movsb
test
insb
rcrb
je
inc
mov
xor
add
or
lock
xor
mov
inc
mov
or
clc
ss
adc
cld
adc
or
sbb
and
movsb
or
sbb
and
or
sti
enter
pop
cmp
mov
push
jo
add
mov
ret
cmp
add
add
and
xlat
rorb
out
jbe
dec
and
mov
add
xchg
mov
cmp
sbb
adc
loop
out
sub
shlb
mov
sbb
push
dec
add
lods
xchg
jo
push
dec
int3
dec
mov
repnz
xchg
add
add
or
aam
pop
fiaddl
jne
cmp
inc
sbb
or
and
sub
fists
sbb
pop
pop
and
and
push
pop
cmp
add
or
das
cmp
xchg
in
sub
ja
loope
push
scas
rol
mov
or
add
push
inc
fistps
cmp
fmuls
add
jecxz
lods
sub
popf
outsl
pop
ret
int3
sbb
mov
mov
ret
add
negb
xor
dec
rolb
jle
je
push
pushf
insl
mov
xlat
enter
push
dec
and
loopne
test
or
pop
int3
ss
dec
add
sub
orb
in
popf
and
mov
repz
or
repnz
cmp
int3
add
data16
jae
imul
sub
jb
fwait
mov
and
mov
aam
adc
push
adc
subl
ja
add
jp
jg
pop
mov
jmp
jbe
jbe
or
xor
jnp
push
adc
dec
xor
loopne
roll
int
add
jo
test
andb
jo
iret
lcall
pop
popf
push
ja
cmp
outsb
or
mov
loopne
mov
mov
mov
adc
neg
inc
clc
and
jb
push
mov
push
add
mov
outsl
jmp
ret
jp
pop
lea
xor
mov
psubb
lods
ljmp
xchg
inc
pop
add
xor
out
inc
add
xchg
push
xchg
or
inc
cmp
fcom
push
xchg
fsubrp
sbb
sbb
jnp
dec
pop
xchg
aaa
mov
dec
shrb
jns
inc
mov
in
sbbb
aas
add
shlb
cmp
xor
std
or
movsl
mov
mov
mov
test
push
and
out
sar
push
stos
mov
add
sar
mov
or
or
loope
sti
add
lods
imul
fisttpll
aad
push
or
or
and
lods
popa
rclb
or
stc
out
cmp
add
mov
inc
sbb
ret
mov
push
adc
ljmp
adc
outsl
inc
pushl
mov
jns
xchg
popf
pusha
dec
sub
add
int
push
sahf
cmp
pop
addl
pop
outsb
xchg
lret
ss
mov
or
inc
adc
mov
pop
lea
jbe
stc
or
lods
mov
adc
divl
xor
push
hlt
mov
add
xor
stos
jmp
out
push
mov
cmp
xchg
sub
add
cmp
fsubs
rclb
push
xchg
adc
mov
scas
inc
call
jmp
mov
sbbb
dec
inc
lea
adc
nop
xchg
push
es
sbb
inc
loop
lods
lahf
mov
insb
jnp
dec
pop
or
int
pusha
fcoms
dec
xor
add
pop
dec
sub
jns
xor
sarl
cmp
test
sbb
mov
imul
cmpsb
int
push
test
push
or
push
add
jne
imul
scas
mov
pop
test
jne
movzwl
and
cmp
rorl
add
inc
int
popf
ficomps
push
jmp
inc
mov
loop
and
push
jl
add
sub
jae
pop
add
pop
cmp
lods
add
lcall
aam
jecxz
mov
std
sub
stos
sub
sysenter
sbb
adc
jns
dec
add
sbb
cmp
lret
and
out
lock
jmp
xchg
mov
andl
sub
fcoml
pop
jmp
jae
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
sbb
pop
inc
add
sti
xchg
jne
sub
daa
jmp
pop
xchg
mov
dec
adc
in
jl
and
movsl
dec
add
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
popf
loopne
out
add
push
xchg
mov
pushf
sub
addb
test
lret
cmp
js
jo
into
sub
pop
lock
scas
mov
shl
fs
shrb
cmp
std
jno
cmp
and
insl
nop
cmc
mov
sub
xor
addb
jo
lret
jmp
push
lock
repz
movsb
bts
fistpl
push
xorb
cmp
sbb
cltd
sub
mov
xchg
pop
mov
cmp
loopne
ljmp
test
xor
mov
pop
push
jnp
xor
inc
in
fprem
cmpb
mov
jg
or
or
cmp
aas
icebp
pop
xor
pop
pop
mov
popa
jo
test
test
sbb
cmp
leave
je
pusha
pop
cmp
xor
add
shll
sub
and
ret
xor
add
mov
clc
mov
scas
inc
clc
or
mov
or
sbb
cmp
and
es
dec
adc
adc
unpckhps
pusha
sub
sbb
subb
pop
dec
sbb
push
xor
adc
inc
add
inc
std
insl
pop
or
mov
adc
push
add
jge
ret
lock
jae
addr16
mov
aas
sbb
push
and
mov
nop
adc
outsb
dec
pushf
fldenv
repnz
mov
shll
ret
aas
out
int
pminsw
pop
inc
inc
push
mov
inc
pop
or
pop
push
or
mov
insb
out
add
mov
inc
jg
rcl
mov
fdivrl
adc
jp
xor
mov
lock
popa
or
cmp
into
sub
cmovs
cmp
or
push
fsubrs
add
pop
push
push
jge
cmp
orl
sti
out
push
gs
push
fisttps
pop
cmp
lods
jg
xor
xchg
stc
jl
push
add
stos
jge
addr16
pop
inc
aaa
and
sub
dec
inc
adc
jg
rorb
push
jne
fldenv
mov
and
pop
ds
pop
adcb
push
pop
lods
pop
scas
pusha
cmp
lods
pop
pop
mov
clc
and
jg
add
jns
rcrb
add
clc
je
xor
lcall
lcall
dec
clc
adc
xor
jge
test
cmp
or
cld
inc
cmp
fsubr
push
push
and
inc
cmp
shlb
fsts
or
js
pop
sbb
add
push
push
add
push
les
cmp
inc
lods
test
das
mov
add
add
icebp
fists
adc
popf
adc
mov
push
jmp
insb
sub
jp
outsb
test
lret
jae
dec
adc
push
dec
push
xor
mov
icebp
xor
xchg
mov
mov
sub
add
mov
cmpsl
push
lods
xchg
ret
dec
mov
scas
pop
jo
pop
pop
movsl
cmp
scas
push
clc
jb
cmp
out
sbbb
dec
or
push
push
sbb
pop
adc
outsl
adc
cmp
and
cmp
mov
pop
shrl
inc
sbb
xor
mov
add
sub
sti
adc
mov
cmp
sub
add
out
dec
loop
das
mov
xor
xchg
pop
dec
inc
dec
popf
dec
loop
pop
mov
out
inc
sbb
mov
shlb
fcoml
inc
dec
cmp
xchg
jp
sbb
ds
inc
sbb
mov
jp
mov
les
and
and
nop
test
pop
dec
enter
jbe
jbe
mov
adc
insb
cld
dec
and
dec
cmp
sbb
in
lods
in
repnz
das
adc
and
xor
inc
sub
jmp
into
jl
push
sbbb
jle
outsb
adc
add
adc
sub
or
add
addb
dec
stc
inc
xchg
in
lods
mov
jae
dec
sbb
in
mov
dec
or
inc
les
call
pop
in
inc
sbb
lods
outsl
sub
mov
and
jne
and
xor
push
dec
or
add
gs
ja
pop
shlb
mov
inc
sbb
sub
or
or
jo
push
adc
lcall
shld
push
pushf
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
and
scas
outsb
or
sahf
and
data16
pop
testl
repz
das
add
jecxz
sub
push
dec
inc
aas
inc
jmp
add
inc
jmp
inc
or
test
pushf
ret
push
or
repnz
js
icebp
lock
mov
fiadds
and
test
and
nop
lret
xor
add
or
adc
mov
shl
not
xor
loope
xor
and
push
in
and
jmp
jno
xchg
fsubl
and
sbb
adc
lock
add
or
loop
hlt
and
test
xor
mov
push
dec
out
inc
lret
push
shlb
and
or
sbb
mov
mov
and
ja
pop
clc
incb
jmp
sbb
fucomp
lret
jmp
inc
and
mov
and
les
aaa
jecxz
jge
mov
int
add
or
adc
jns
and
and
bound
jge
push
or
sbb
loope
flds
negl
add
pusha
mov
push
lock
pusha
loope
pop
sub
dec
sub
xchg
andb
jecxz
pop
fstp
je
imul
fisttpll
call
sbb
hlt
pop
arpl
sub
adc
outsl
add
es
adc
sti
add
out
lret
add
test
fisttps
add
repz
mov
or
push
shl
sub
push
mov
sub
or
test
cmp
and
sbbb
cmpsl
pop
xorb
sbb
jmp
push
and
divb
add
inc
jp
movb
push
fnstcw
xor
pop
mov
fstpl
push
and
push
mov
sbb
mov
cmp
inc
cwtl
daa
mov
hlt
cmp
out
clc
fadds
neg
sbb
push
sbb
mov
sti
jp
xchg
add
mov
mov
xor
sbb
aam
xchg
push
aaa
xchg
dec
xor
bound
fisttpl
cwtl
add
les
jnp
jmp
sub
sub
jmp
sub
sbbl
sub
fldcw
and
test
int3
adc
push
add
pop
ret
cwtl
cmc
jnp
ret
mov
add
push
fstpl
xor
add
imul
cmp
cmc
repz
faddl
and
iret
mov
sbb
div
jb
sar
xchg
lods
enter
add
fs
call
dec
into
dec
or
and
shrl
mov
and
push
pop
orl
mov
mov
jp
push
adc
mov
pop
movsb
addb
das
lods
in
aam
mov
adc
decb
push
and
in
sbbb
pop
sub
mov
add
mov
push
add
dec
adc
dec
add
test
sub
or
movsb
pop
or
sub
and
out
mov
les
sbb
and
mov
add
or
jnp
mov
push
push
jecxz
lds
rorb
out
push
push
xor
dec
or
inc
dec
adc
push
hlt
adc
or
orl
adc
or
push
pop
sbb
popf
test
mov
sbb
and
incb
jno
in
mov
mov
fs
pop
cmp
add
xor
mov
into
cmp
adc
xchg
or
loopne
adc
hlt
neg
lret
jo
sub
pop
xchg
mov
add
mul
sub
pop
xor
imul
add
or
repnz
popa
fimuls
or
pop
mov
jbe
sub
or
pop
sbb
movsl
leave
inc
add
mov
cmpb
popa
sbb
mov
ficoms
adc
js
inc
adc
sub
loopne
fsubs
jo
std
inc
popa
xchg
xchg
lret
xor
xor
int3
pop
cld
sub
clc
jge
icebp
cli
inc
sub
cs
jo
jl
loope
ret
sahf
push
push
add
dec
mov
sub
pop
cmp
push
and
mov
sbb
ja
add
ljmp
add
xchg
push
cwtl
sub
jno
fadds
into
aaa
test
push
mov
das
pop
sti
push
or
sbb
test
mov
imul
pop
or
mov
aad
icebp
sbb
sti
mov
shll
push
or
imul
add
or
push
movsb
aas
and
and
sbb
je
mov
cld
push
mov
loopne
add
sbb
lret
fdivl
sub
shr
loop
pop
fwait
popa
in
sub
dec
aad
cmp
sub
push
fstpl
mov
loop
inc
fsts
mov
and
xor
push
adc
fldcw
push
push
mov
add
sub
fwait
mov
adc
sbb
and
or
jle
or
js
call
mov
cwtl
fsubrl
jo
push
dec
fsubs
je
mov
cmc
shll
xchg
scas
push
mov
xchg
and
jle
or
and
mov
xchg
ret
repz
out
push
mov
push
int
add
add
inc
cmp
jbe
and
inc
dec
insl
jmp
push
test
orb
sahf
lods
ret
shlb
push
pusha
and
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
ja
mov
lahf
stc
mov
jnp
add
and
xchg
xor
and
rorb
adc
enter
imul
out
add
jo
dec
fwait
nop
push
add
gs
push
hlt
es
repnz
sti
xor
or
mov
xchg
rcr
lods
inc
inc
fwait
cs
inc
adc
sub
add
js
adc
enter
lret
fiadds
add
loope
or
push
lods
add
add
add
pop
xor
pop
push
aam
inc
inc
adc
lcall
cmpl
inc
inc
clc
inc
adc
mov
pop
adc
push
xchg
or
mov
mov
loopne
and
dec
push
dec
push
ljmp
add
add
out
sub
push
push
add
rolb
jno
dec
mov
pop
test
jne
or
jl
mov
xchg
mov
stos
stos
cmp
rcrb
stos
pop
pop
sub
jb
aam
or
repnz
or
cltd
and
add
inc
pop
pop
and
jns
dec
xchg
loopne
lea
pop
adc
filds
loopne
test
fstpt
mov
or
loop
rolb
cli
orl
repz
outsl
out
ja
push
cltd
insb
pop
and
mov
out
mov
xor
sub
dec
jbe
dec
loop
lea
xor
repnz
icebp
je
xor
cmp
sbb
pop
lcall
cmp
or
jb
mov
fadd
incb
jae
dec
mov
xchg
push
pusha
mov
sarb
inc
add
and
dec
mov
or
loopne
out
and
mov
test
cs
fwait
add
mov
fcompl
or
xchg
dec
xor
cmp
mov
movb
test
clc
xchg
iret
inc
out
and
push
cld
not
in
flds
mov
cmp
pop
ds
push
or
loop
jbe
jne
shl
and
inc
mov
jl
inc
rol
test
out
mov
jl
dec
int
lock
fs
aam
mov
movsb
jge
popa
pop
xor
mov
loop
add
hlt
test
and
push
pop
test
lcall
pop
push
aaa
dec
add
cli
cmovg
bound
pop
dec
popa
sub
xor
pop
add
xor
inc
lock
addb
inc
mov
jecxz
inc
add
inc
cmp
xor
lods
out
addl
mov
dec
add
or
mov
mov
lods
xchg
test
into
out
mov
and
add
fdivrl
and
loop
xorb
lods
cld
add
or
sbb
jge
cmovbe
and
pop
scas
push
and
rcl
jecxz
sub
rcrb
add
add
cli
or
test
fildl
add
mov
and
adc
mov
pop
xchg
repnz
pop
sub
mov
adc
adc
or
nop
sub
adc
add
and
adc
stc
cld
test
or
adc
stc
and
sbb
test
add
sbb
dec
adc
movsb
stos
mulb
test
push
adc
loopne
pop
mov
or
xor
mov
ror
xchg
ljmp
imul
sbb
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
inc
clc
addb
ja
or
xchg
int3
mov
sub
stc
or
outsb
push
sub
fs
fwait
mov
mov
add
adc
fdivrs
sub
je
inc
inc
add
xchg
fdivrl
into
jmp
ljmp
jmp
andl
mov
cltd
cmpsl
mov
inc
xchg
je
adc
adc
mov
sub
pop
inc
push
inc
jle
cmp
push
xor
loopne
inc
loope
sub
sti
orl
lock
test
xchg
sub
mov
push
clc
or
fldcw
pushf
push
cmp
fs
cmp
je
lea
in
mov
jae
mov
ret
popa
mov
xchg
dec
sbb
pop
out
fistl
pop
jge
pop
cmp
jno
xlat
cmp
add
repnz
and
dec
jae
imul
sbb
in
cmp
adc
aad
mov
outsb
xor
popf
loopne
call
decb
out
testl
and
cmp
sbbl
orl
and
mov
scas
mov
dec
or
sub
cmp
mov
mov
sub
mov
outsb
mov
cmpsl
call
mov
shll
test
adc
flds
pop
cmp
je
mov
jg
add
testl
call
hlt
pop
roll
addl
jmp
cld
push
sbb
and
lds
mov
sub
stc
push
adc
aas
inc
xor
jmp
mov
or
or
pop
mov
xor
mov
dec
ficompl
ds
inc
jne
nop
scas
aam
inc
mov
xor
mov
cwtl
jge
neg
add
mov
cmpsb
push
sbb
test
aad
inc
jl
cmp
adc
mov
cmc
sub
out
cmp
out
in
testb
jge
jle
add
sub
xor
mov
fdivrl
jne
sub
subb
dec
test
lods
sarl
push
pop
cmpsl
mov
inc
mov
sbbl
rorl
push
mov
dec
or
cmpb
push
mov
mov
mov
fidivl
inc
push
xor
and
and
and
adc
lcall
sbb
and
std
mov
out
lret
or
or
push
push
mov
pop
movb
testl
jne
enter
pop
mov
or
jne
test
into
jne
fwait
add
pop
cmp
cmp
mov
push
hlt
int3
add
jne
movb
test
rcll
mov
mov
rcrb
test
lea
lea
mov
adc
lock
scas
sbb
cld
into
push
mov
lock
add
lahf
dec
ja
data16
mov
js
subl
lcall
ret
xor
mov
stc
jg
add
add
pop
aaa
or
xchg
cs
js
add
inc
dec
mov
and
add
or
shr
add
xorb
pop
mov
pop
jge
jg
or
adc
inc
mov
les
add
notb
fiadds
jge
outsl
ss
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
aam
daa
dec
fwait
aam
shrl
int3
and
push
push
push
enter
and
mov
push
cmp
add
cmp
fcmovbe
sti
pop
clc
sbbl
jmp
mov
or
scas
fidivl
mov
and
adc
sbb
jo,pt
mov
sbb
add
cmp
sbb
nop
sub
pop
add
lret
into
jmp
scas
frstor
mov
xchg
rolb
add
jno
les
icebp
test
int3
or
or
xorb
lret
pop
mov
jmp
sub
add
negb
jo
sbb
movups
and
ret
inc
mov
mov
inc
mov
inc
sbb
add
imul
push
adc
mov
sarl
aam
cmp
push
ljmp
and
testb
cmp
insb
aad
ja
jmp
inc
pop
sbb
sub
icebp
cmp
orb
add
scas
inc
mov
les
mov
faddl
adc
mov
xchg
pop
sub
adc
pop
lods
std
push
inc
push
xchg
xchg
adc
inc
cs
add
ss
cmp
je
or
clc
jg
inc
xor
mov
dec
cmpb
je
mov
push
idiv
sbb
sbb
add
or
mov
out
sbb
sub
mov
jp
addr16
jne
push
pusha
negl
out
mov
outsb
filds
in
pop
in
cltd
mov
xor
add
xor
push
xor
and
imul
push
jnp
add
or
movsl
mov
gs
add
jns
jmp
xor
movsl
add
arpl
pop
xor
xchg
mov
push
pop
xchg
mov
std
cmp
and
mov
shlb
mov
rorb
or
add
jno
adc
je
daa
mov
hlt
or
pop
je
setg
sub
out
clc
add
mov
and
sub
loop
aas
or
jne
movb
lea
sbb
es
cmp
jge
sub
ficoml
xor
mov
je
adc
pop
add
cld
add
lcall
jmp
sub
add
pop
and
sub
cmc
and
fcmovnb
xchg
ret
dec
add
loop
dec
inc
out
mov
adc
jns
les
sub
inc
fs
ficomps
movsb
repnz
or
mov
add
and
add
jne
mov
jp
int3
inc
add
pop
adc
test
dec
mov
and
repnz
test
shlb
rcll
mov
rolb
ljmp
push
adc
jmp
ja
push
ret
jbe
shlb
add
dec
adc
shlb
jge
mov
rcll
or
and
xor
shlb
enter
xchg
addl
pop
cmpsb
or
cs
cmp
mov
jb
das
mov
xor
jno
loope
and
ljmp
xor
jno
ret
xor
dec
xchg
or
jge
adc
testl
in
arpl
call
xchg
or
inc
cmp
mov
sub
fcoml
cmp
pop
add
add
mov
lret
lret
out
xor
fildl
lods
inc
add
test
or
sbb
lahf
fadd
jmp
jle
jg
xor
xchg
mov
enter
sbb
test
cmp
sbb
jecxz
testb
xor
adc
mov
lret
js
push
into
mov
sahf
mov
dec
inc
jo
call
xor
leave
and
add
mov
xchg
xor
popf
rolb
dec
and
dec
fwait
mov
lds
mov
sub
loopne
pop
aas
mov
jg
ret
daa
xor
or
jne
pop
cmp
mov
add
mov
or
pushf
shl
xor
inc
xor
adc
popa
andb
adc
outsb
and
add
ja
sub
inc
ret
push
sub
xchg
push
and
add
push
movswl
les
loop
pop
dec
insb
data16
push
nop
add
cmp
add
js
cld
add
shrd
dec
sub
push
jle
cmp
out
pop
pushf
ss
jl
cmpsl
outsb
mov
xor
incl
insl
ss
stc
inc
add
dec
jmp
test
cltd
pop
xchg
clc
sub
dec
xchg
sub
jo
movsb
push
jle
incb
or
jo
push
xor
and
pop
cmp
xlat
xor
adc
xor
jo
inc
sti
mov
pop
and
sub
loopne
add
or
out
mov
push
dec
jb
push
sub
or
fiaddl
sbb
lock
mov
lock
fwait
mov
shll
add
mov
jbe
adc
mov
dec
dec
mov
add
imul
dec
dec
inc
dec
pop
or
pusha
and
jb
or
sbb
add
adc
inc
inc
and
mov
dec
test
inc
add
sub
xor
lock
ss
int
movsb
inc
cmpb
cmc
add
arpl
loop
call
ret
scas
and
push
lock
mull
sub
xchg
mov
or
cwtl
or
mov
inc
jmp
lock
inc
sub
xchg
sub
jp
jge
mov
jne
or
loop
jl
cs
push
mov
pop
xor
sbb
or
mov
xor
xchg
adc
testl
cmp
inc
or
xor
orb
in
repz
cmp
jg
scas
push
cmp
inc
lret
jbe
xchg
push
dec
test
dec
xchg
lea
add
incb
and
adc
push
sub
or
jmp
insl
cmp
cs
lret
jp
cld
jl
movsl
ja
lahf
jle
mov
mov
inc
or
sarb
inc
shlb
push
insl
in
loop
mov
cmp
adc
jge,pt
testb
jle
gs
or
pop
mov
jne
out
and
inc
popa
je
inc
je
stc
add
dec
imul
xor
xor
xchg
or
dec
rcll
in
cmp
mov
cmp
mov
or
cmp
mov
repz
adc
add
adc
xor
inc
call
dec
add
push
pop
clc
fstps
or
add
pop
out
ror
dec
imulb
push
mov
pop
repnz
inc
dec
rolb
xchg
hlt
stos
cmp
adc
or
xchg
pop
adc
or
adc
xor
or
je
dec
shrb
inc
push
inc
test
test
ja
push
or
es
jmp
icebp
cli
pop
je
sbb
cmp
dec
sub
xor
cmp
xchg
shll
sub
add
hlt
sbb
or
mov
dec
jmp
jo
and
in
jo
pop
mov
lahf
cmp
dec
cld
lahf
xchg
shlb
dec
push
sub
and
hlt
sub
pop
popf
test
jecxz
ret
xor
add
movsl
pusha
cmp
mov
aaa
sub
jmp
sub
fisubrl
push
cmp
int
jbe
sub
pop
jp
sub
mov
popa
iret
rorb
inc
mov
adc
sub
loopne
jmp
insl
shl
mul
pop
xor
mov
cmpl
pop
lret
or
push
data16
push
mov
mov
adc
sbb
mov
outsb
lods
imul
mov
pop
shlb
sbb
lods
or
xor
test
lret
dec
cli
and
add
in
fsubs
frstor
fdivs
jge
jecxz
add
pusha
mov
sbb
pushf
mov
cmp
add
xor
fdivl
int
lock
xor
repz
pop
cmp
pushf
lret
js
inc
mov
mov
cmp
in
nop
add
cmpsl
mov
xchg
push
or
in
dec
mov
push
jmp
or
jmp
div
hlt
cmp
xor
or
ljmp
adc
inc
and
negl
mov
and
inc
mov
jae
cmp
arpl
xchg
and
or
sbb
dec
adc
shlb
rorb
test
adc
or
lods
rclb
add
push
mov
popl
adc
mov
dec
xchg
xor
cmpsl
xor
push
outsl
mov
or
bound
xor
push
movsl
adcb
aad
ss
movsl
jbe
fsubl
push
cld
cwtl
adc
fs
xor
adc
add
push
cmpsl
xor
mov
add
or
push
add
adc
insl
push
jecxz
adc
fsts
xor
int
cmp
inc
mov
mov
popa
mov
rcl
clc
jae
dec
repz
loope
movl
lock
xlat
call
loopne
cmp
inc
push
nop
inc
adc
sbb
je
arpl
paddusw
das
add
call
sub
push
cmp
outsl
arpl
adc
add
daa
sbb
inc
jmp
xchg
inc
push
push
mov
adc
sbb
les
ret
outsb
bound
cmp
stc
inc
fldcw
popa
inc
test
insl
mov
sub
mov
outsl
flds
push
and
dec
subps
dec
aam
test
cld
jo
mov
push
jp
mov
or
das
adc
or
pop
testl
ror
push
cmp
and
push
and
lds
jnp
jo
hlt
sbb
and
jge
xchg
mov
mov
pop
mov
or
or
sub
adc
fs
mov
cmp
xchg
cmp
jmp
rcpps
sbb
adc
pop
fcomps
clc
mov
data16
ljmp
push
pop
sbb
adcl
inc
imul
inc
mov
fimuls
nop
adc
dec
mov
adc
sbb
mov
or
inc
sbb
mov
push
pop
incl
outsb
and
movsb
lea
cs
xchg
mov
push
sub
les
inc
xchg
mov
inc
xor
sub
inc
mov
pop
loope
adc
aaa
adc
sbb
cmpsl
sub
jmp
pushf
popa
mov
and
xchg
push
and
loop
shr
cmp
mov
in
adc
and
pop
and
testb
cmp
xchg
jecxz
in
loopne
xchg
pop
add
lock
pop
xchg
pop
cmp
lea
or
es
add
or
cmpsb
test
or
incb
shr
shr
or
mov
add
add
or
sbbb
ret
sahf
sti
in
stos
mov
cmp
push
xchg
sbb
mov
fildl
sub
bound
popa
popa
dec
push
test
adc
fnstcw
inc
mov
sub
lret
cmp
testl
pop
xor
cli
mov
adc
jecxz
stos
or
mov
cs
rolb
add
mov
adc
inc
addb
dec
or
pusha
aaa
orl
mov
decb
cmpsl
test
and
sub
jo
andl
shr
adc
pop
and
and
adc
iret
shl
andl
adc
aad
test
add
ds
mov
stos
imulb
or
data16
jo
test
test
adc
in
sub
test
je
dec
call
inc
call
or
cmp
inc
sbb
add
movsb
fisubrl
push
or
in
push
lods
cmp
inc
sbb
push
add
adc
fisttpll
cmp
cmpsl
enter
push
cld
sub
jne
dec
mov
call
ss
inc
inc
and
adc
mov
test
sub
int
xchg
mov
adc
cmc
add
adc
insb
call
push
fldl
mov
jle
cld
insb
stos
sbb
ja
cs
popf
les
or
and
pop
cmp
add
out
cmp
leave
inc
xor
mov
jg
lock
jl
cmpb
jl
xor
rorb
cmpb
idiv
test
inc
stos
insb
xor
inc
inc
xor
bound
inc
shrl
and
dec
inc
push
push
mov
push
push
jo
imul
rorl
cs
inc
adc
fldl2e
imul
cld
aam
mov
or
sub
mov
jne
and
cmp
mov
adc
mov
call
out
aad
cmp
and
adc
or
test
push
sub
adc
push
fcmovu
add
push
shll
cmpsb
mov
je
mov
dec
scas
or
ret
dec
sbb
ficoml
in
or
pop
sahf
push
adc
jne
fistl
xor
sbb
outsb
rorb
push
outsb
push
sbb
aam
xchg
cltd
cwtl
rclb
inc
push
sub
or
pop
or
push
xor
in
add
inc
jg
jge
inc
inc
div
fdiv
fiaddl
jns
sub
inc
sbb
and
addl
sub
sbb
push
push
inc
imul
fsts
movsb
push
sbb
adc
test
and
or
cmp
test
or
pop
pop
pop
adc
shll
adc
mov
rcl
ljmp
shr
sub
dec
test
stc
scas
call
idiv
and
cld
je
dec
lods
test
divb
or
clc
dec
ljmp
adcb
mov
mov
xor
cs
inc
jecxz
lods
pop
add
es
in
jle
sbbl
es
xchg
dec
mov
or
push
loop
jnp
or
into
jbe
jns
aas
test
dec
adc
ljmp
mov
adc
push
jb
stos
ficoml
iret
das
bound
cmp
pusha
adc
setle
sbb
mov
aam
or
pop
and
bound
insl
cmp
popa
mov
fiaddl
dec
loopne
mov
xchg
push
int3
push
cld
and
cltd
mov
pushl
dec
mov
pop
cmp
ss
jg
hlt
loopne
add
inc
jge
movsb
popa
rclb
adc
rorb
leave
jne
sub
shll
testb
fists
push
leave
je
inc
mov
pop
inc
clc
inc
mov
mov
out
es
mov
je
lcall
mov
push
cmp
ja
add
aam
out
out
adc
cmp
jne
jge
xor
adc
mov
ret
mov
ss
add
fst
xchg
jp
push
add
rolb
lea
insl
mov
add
pop
inc
or
sbb
insl
test
push
into
scas
sbb
adc
xchg
ret
jmp
neg
je
mov
push
push
addr16
loopnew
les
dec
mov
adc
mov
pop
sbb
lea
mov
pop
dec
cmp
jne
movsl
push
repnz
xor
ret
aam
adc
pmaxsw
out
in
jmp
mov
push
pop
mov
adc
inc
add
or
push
xlat
cs
push
inc
mov
xchg
out
femms
pop
mov
cmp
xchg
and
ja
xchg
sub
dec
add
dec
addl
adc
or
push
add
fimull
adc
adc
xorl
or
jle
mov
pop
jle
dec
mov
repz
roll
rcl
rcl
aad
repz
xlat
fcomp
andl
fstpt
mov
test
add
movsl
pusha
dec
adc
into
or
das
cmp
test
sbb
mov
or
sti
and
adc
push
inc
ret
push
add
ret
jmp
push
add
push
divb
cmp
fs
call
ret
adc
cmp
scas
or
push
push
add
add
adcl
add
push
sbb
push
popa
lcall
mov
imul
or
outsl
mov
lea
imul
lea
sar
mov
js
mov
add
sbb
neg
sqrtps
add
loop
out
push
mov
pushf
popf
scas
rolb
or
push
adc
mov
jo
loopne
adc
sti
add
es
gs
subb
int3
mov
mov
inc
sbb
decl
or
mov
mov
ljmp
fucomp
lock
idivl
mov
lea
pop
sbb
subl
int
mov
xchg
ja
mov
lcall
mov
and
pop
mov
in
mov
dec
lods
loopne
and
mov
inc
or
fs
xchg
ret
mov
jne
mov
shl
test
cli
outsb
popa
rol
js
mov
push
lea
mov
xchg
mov
adc
dec
push
movsl
cs
push
adc
or
ret
movsb
sub
inc
repz
addl
or
mov
jge
jl
ret
outsl
loope
imul
stc
in
sub
cmp
jne
or
and
enter
jno
xchg
rolb
sar
loopne
loop
fsubs
cmp
rorb
push
movsl
cmpb
or
mov
cmp
inc
xchg
daa
mov
and
inc
lods
ss
shrl
in
out
inc
jecxz
adc
jmp
test
add
lock
or
lock
push
test
cli
inc
mov
div
mov
sbb
scas
or
mov
dec
popa
inc
call
add
mov
adc
mov
push
inc
ret
push
jns
push
or
sub
dec
leave
cmp
mov
and
and
sbb
idivb
cmpsl
mov
xor
sbb
cmp
pop
sub
repnz
shlw
loop
out
out
shrb
mov
jb
inc
sbb
adc
call
mov
xor
call
xor
into
or
pop
sub
fdivrs
aam
fldcw
test
dec
ss
popa
cmp
inc
inc
int
dec
push
orl
call
cmp
lret
push
cld
lea
fcmovu
mov
mov
cmpsb
test
enter
lods
rolb
mov
add
mov
sbb
hlt
xchg
add
sbb
test
jb
sbb
sbb
test
movsb
xor
lock
out
or
add
fs
jge
mov
pop
movsb
adc
cmp
jl
dec
leave
jne
jne
sbb
xchg
mov
inc
mov
adc
pusha
mov
jge
sub
fwait
adc
je
cwtl
sub
insb
sbb
scas
mov
scas
adc
inc
add
add
mov
push
add
push
nop
test
add
sbb
in
adc
adc
fsts
or
pop
shr
xchg
nop
mov
or
mov
shll
js
jne
sbb
neg
and
and
jbe
imul
jmp
loopne
clc
push
adc
nop
imul
add
sarb
sbb
jecxz
adc
sbb
rcr
sub
out
cltd
loop
xor
and
xchg
inc
aad
stos
mov
repnz
mov
add
sub
push
xchg
mov
into
out
enter
in
xor
sbb
or
stos
jbe
pop
sub
xabort
mov
xor
enter
cmp
push
sbb
push
shlb
add
notl
sahf
jne
cmp
sbb
testb
sbb
mov
inc
xchg
inc
in
fcmovbe
test
mov
dec
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
push
xchg
jb
add
add
fadds
add
or
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
ret
and
push
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
popa
sahf
jmp
add
adc
pusha
test
adc
mov
stos
or
push
ret
les
adc
or
jae
cmp
ret
aas
test
lret
push
cmp
pop
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
dec
mov
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
mov
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
or
push
mov
or
dec
pop
dec
pusha
test
and
fidivrs
xor
and
ds
mov
mov
movsb
sahf
pop
mov
popa
cmp
or
pop
push
pmulhuw
fldcw
dec
lcall
xchg
or
xorb
or
cmp
stos
jg
subl
into
xchg
into
inc
ret
add
jge
and
in
stmxcsr
cmp
faddl
bound
cltd
ss
or
add
data16
sbb
add
add
xchg
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
push
push
pop
and
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
cmpb
rorb
pop
add
loopne
je
inc
dec
lods
pop
sbb
add
leave
lahf
pop
mull
pop
mov
add
add
xchg
or
adc
mov
test
and
je
push
imul
and
jbe
dec
scas
sbb
sub
in
or
jmp
leave
lret
push
xor
xchg
push
inc
and
sbb
sbb
push
cltd
push
dec
xchg
loopne
sbb
pop
rorl
pop
test
lods
pop
fmul
cmp
or
mov
xor
push
dec
and
cmp
mov
addb
ret
or
pop
jle
push
sbb
jmp
xor
daa
or
and
adc
jge
xor
fadds
popa
cli
mov
sbb
or
mov
cmp
lea
adcb
xor
mov
notl
xor
pop
test
mov
mov
orb
add
xchg
jmp
rcrl
mov
sub
fs
loopne
push
aam
outsb
ds
je
dec
pop
add
inc
call
push
cmp
jbe
inc
sub
call
jle
sbb
mov
inc
lds
mov
mov
jo
addr16
push
fmuls
xchg
loope
pusha
loop
test
or
inc
cmpl
imul
lock
fistps
leave
adc
mov
repz
sbb
movl
add
and
loopne
sub
sub
pop
cvtps2pd
jnp
roll
pusha
xchg
mov
test
pop
sbb
jnp
inc
pushl
nop
cmp
filds
pushl
shlb
push
xor
mov
aam
pop
addr16
lret
push
fcoms
xor
cwtl
pop
mov
xchg
dec
jge
mov
sbbl
push
pusha
push
sbb
idiv
shlb
mov
fcoml
and
dec
daa
or
xchg
dec
stos
dec
repnz
inc
sbb
clc
in
hlt
je
pop
add
xor
jge
xor
adc
imul
pusha
push
pop
push
imul
popa
add
xchg
jl
and
lods
cmpb
xor
fbld
push
shll
in
inc
and
mov
mov
push
sbb
cltd
js
ds
aas
push
rorb
mov
or
mov
sub
push
xlat
xchg
test
mov
jb
pop
cmp
shrb
subb
sar
add
sub
jmp
cmp
jp
xor
mov
inc
adc
or
adc
notl
das
adc
shlb
loopne
movsb
nop
dec
jmp
sub
ficoml
inc
jo
lock
fisubrl
rcrb
push
or
popl
faddl
add
push
outsb
inc
cli
mov
and
push
sbb
or
xchg
rolb
popa
xchg
jno
xor
sub
sbb
mov
lock
cmp
or
mov
enter
cmp
or
cmp
push
fcomi
push
clc
fstpt
addl
sbb
fs
xor
nop
sar
lock
dec
push
add
inc
sbb
ficomps
push
cmp
lea
mov
enter
mov
adcl
cmp
adcl
pop
fidivl
nop
push
popf
add
iret
and
outsb
scas
sub
cmp
loopne
jmp
dec
loop
inc
dec
outsl
adcb
mov
loope
ss
push
js
subb
mov
inc
or
pop
and
mov
xchg
inc
js
or
std
test
jno
sar
fcompl
sbb
xchg
std
movsl
pop
imul
movb
addr16
mov
les
sbb
mov
add
sbb
cmovae
adc
inc
jbe
fadds
sub
add
push
or
add
adc
push
mov
xchg
pop
testb
jno
pusha
sbb
inc
inc
ds
orl
sbb
loopne
cld
sbb
xchg
cwtl
mov
shlb
cmp
icebp
add
push
dec
mov
dec
xor
xor
mov
xor
js
adc
push
jo
xorb
aas
test
add
addr16
inc
or
fwait
or
jg
data16
or
add
mov
push
mov
push
pop
lods
dec
loope
lea
addl
and
test
and
push
xchg
sub
and
mov
or
loope
and
adc
ljmp
out
cvttps2pi
dec
or
xchg
add
je
loope
jmp
pop
cs
fldcw
add
push
pop
ret
xor
cmp
mov
adc
jmp
fstps
icebp
lahf
sbb
sbb
xor
push
mov
sub
das
fsubrs
pop
xor
adc
test
push
xchg
add
cmpsb
pop
sbb
sub
add
movsb
mov
sub
mov
or
push
sarb
dec
in
lahf
lret
iret
mov
pop
push
js
sub
in
jnp
lret
add
rolb
fcompl
jb
in
test
inc
gs
mov
mov
jb
mov
xchg
aad
cmp
jecxz
jbe
sub
mov
fcoml
fmuls
xchg
xchg
xor
enter
inc
pop
dec
dec
fimull
in
lock
jp
lock
pop
push
hlt
in
adc
nop
jp
push
and
sbb
call
push
std
push
inc
insb
xor
and
pop
ret
enter
mov
fcom
loopne
cld
and
add
push
in
mov
xor
add
and
dec
repnz
cmp
in
add
inc
inc
adc
imul
dec
jno
dec
and
add
jge
lret
insb
mov
mov
mov
xor
or
push
jo
sti
push
cmp
cltd
bound
xchg
pop
dec
rclb
or
insl
and
sub
sbb
fwait
in
mov
nop
in
mov
or
and
pop
fiaddl
cmpsl
add
push
pop
in
dec
xchg
call
mov
test
aam
xchg
in
jb
sarb
or
mov
sub
in
ss
fadds
imul
sbb
nop
cmpsb
outsb
cld
mov
mov
imul
xchg
pushf
lock
push
aam
lock
pop
hlt
add
adc
dec
add
adc
and
test
in
inc
xchg
push
jb
shlb
adc
sbb
mov
fstps
dec
orb
inc
xchg
movsb
andb
cltd
mov
or
aaa
cld
call
negl
rol
ret
and
push
mov
loopne
xchg
jne
sbb
or
test
aam
mov
cmpsl
fs
dec
call
addb
inc
test
inc
add
mov
jo
cltd
in
sbbb
dec
es
sub
sub
xor
xor
and
cmp
xor
and
inc
dec
repz
jecxz
je
imul
sbb
loopne
jae
add
rol
add
push
lods
sbb
int3
xchg
add
rcr
add
push
add
test
pop
xchg
aad
imul
dec
mov
aam
fs
js
in
mov
adc
inc
xor
lock
in
dec
leave
lock
icebp
xchg
dec
mov
mov
sub
shlb
xchg
dec
xchg
or
imul
scas
adc
nop
movsb
push
std
rcr
cmpsb
rorb
push
jp
add
mov
adc
cmp
mov
xorb
xchg
cmp
push
jmp
aad
or
cmpsl
adc
xchg
or
add
xor
or
fmull
aam
mov
rorl
sbb
in
mov
jae
or
in
or
flds
jno
add
mov
mov
and
inc
inc
insl
mov
and
adc
pushf
mov
dec
repnz
lock
mov
mov
mov
sbb
mov
loopne
in
jmp
mov
cmp
insb
in
insb
adc
mov
push
jb
jnp
cli
mov
dec
and
repnz
or
fs
cmpsb
int3
out
sub
movsb
cmp
aam
adc
jno
rolb
out
xor
mov
add
dec
clc
out
mov
push
repz
pushf
push
mov
test
jae
fcomp
aam
sbb
inc
popa
call
cmp
dec
push
lea
pop
enter
aad
fcompl
test
lods
mov
pushf
pushf
pushf
mov
mov
pushf
enter
push
popf
aam
xor
jno
loop
daa
inc
pop
movsb
and
mov
imul
test
push
out
les
cmc
insb
popl
cmc
stos
pop
enter
les
fmul
add
pop
xor
mov
ja
call
xor
fcoml
or
das
sub
in
dec
out
cwtl
mov
dec
imul
int3
das
unpcklps
jbe
sbb
inc
adc
xor
outsl
fcoms
and
leave
mov
xchg
pop
adc
pop
ret
and
mov
xchg
call
lock
aas
mov
jecxz
inc
pushf
pop
sub
sbb
fldl
pop
sbb
jmp
repz
sub
insl
movsb
jmp
mov
xchg
in
pop
roll
mov
push
jo
mov
pop
xor
xchg
out
sbb
inc
shll
pusha
cltd
add
dec
js
jl
push
pop
sbb
popa
cwtl
lock
push
xchg
xchg
sub
xor
mov
bound
dec
adcl
add
pop
xor
bound
push
adcl
call
mov
leave
xchg
in
jo
or
lds
dec
push
and
inc
xchg
sbb
jb
cmp
add
xchg
rcll
call
cmpsb
adc
cmp
shlb
in
mov
sbb
loopne
lock
hlt
xchg
xor
cmpl
adc
cmp
mov
in
cwtl
addr16
inc
adc
popa
push
cmp
or
in
inc
or
or
inc
push
or
lea
loopne
push
and
test
rcrl
jo
cltd
or
rclb
jmp
xor
mov
dec
push
or
add
shl
inc
xlat
jne
pop
cmp
adc
pop
add
inc
ret
test
sbb
rcrb
mov
ljmp
scas
inc
jbe
jl
and
call
in
repnz
mov
ljmp
mov
clc
add
sbb
repnz
inc
in
xchg
nop
decb
test
jns
inc
aaa
xchg
insl
das
pop
jnp
and
aam
jno
sbb
mov
cmpsl
daa
and
mov
adc
pop
or
adcb
popf
fnstsw
sbb
sbb
jo
push
and
scas
xchg
pusha
aad
test
enter
push
xor
or
pop
and
mov
inc
cmpsl
xchg
adc
dec
andl
int3
mov
and
push
xlat
enter
mov
testl
mov
mov
jb
jb
mov
mov
dec
outsl
movsb
sub
das
imul
test
sbb
or
mov
sub
adc
adc
mov
movsb
and
push
fdivl
or
xchg
test
movsb
and
mov
mov
jnp
dec
outsb
mov
test
or
aaa
js
adc
jnp
add
or
fsubrl
popa
in
add
mov
add
inc
shl
mov
mov
xor
hlt
xchg
test
mov
inc
mov
cmp
testl
insb
mov
mov
dec
rorb
jno
repnz
sti
adc
mov
sbb
in
call
jno
mov
inc
xor
je
push
adc
je
shll
mov
jne
pop
rorb
and
emms
and
rorb
enter
pop
mov
fmull
shll
mov
outsl
mov
jnp
rcr
rolb
aad
shr
rorb
inc
in
or
scas
ret
test
inc
lret
lret
dec
push
and
lea
pop
xchg
or
mov
mov
add
pop
nop
shl
dec
add
imul
scas
and
fsubrl
aad
sub
std
clc
daa
mov
cwtl
sbb
and
inc
int3
and
loopne
mov
outsl
or
je
fsubl
xchg
pop
clc
cmpsl
dec
dec
lods
mov
sub
xchg
popf
aas
test
lds
bound
fisubrl
or
test
lock
nop
and
adc
sbb
push
loope
dec
push
mov
mov
in
inc
push
adc
arpl
sub
les
call
enter
adc
or
in
ret
xor
sbb
stos
shrl
add
push
loop
and
addl
es
sub
mov
loope
nop
mov
enter
mov
nop
lods
jecxz
out
add
push
lahf
jne
movsb
int3
lret
aaa
mov
xchg
inc
dec
push
sbb
imul
xlat
mov
inc
inc
fsubl
mov
or
incl
rcrb
insb
mov
sub
call
ss
fcompl
lods
fadds
inc
scas
movsl
adc
mov
or
stos
add
xor
test
inc
mov
xor
cmp
mov
dec
push
pop
mov
insb
std
pushf
std
rcr
andl
pop
adc
adc
orb
or
xor
xchg
test
cwtl
mov
jecxz
xchg
movsb
test
daa
inc
shrl
jns
cld
lock
in
push
enter
in
call
mov
mov
fsubrs
stos
imul
adc
fcmovne
dec
mov
push
stos
or
pop
int3
lea
imul
dec
sub
lcall
mov
mov
cmp
scas
nop
imul
ret
inc
sub
movl
mov
or
lret
dec
pop
jg
sbb
loopne
xchg
mov
xor
test
inc
bound
rcl
lds
ret
mov
mov
push
test
mov
rolb
ret
js
mov
mov
je
mov
mov
mov
ret
fcoml
xchg
popa
fnsave
sarb
push
xor
mov
fs
out
fisubrs
insb
adc
xchg
adc
fdivr
pop
loopne
and
adc
int3
inc
shrb
sbb
lcall
pop
lea
mov
dec
insb
pandn
mov
ja
inc
mov
mov
out
or
loope
mov
shrl
fdivl
mov
adc
xchg
loopne
jo
mov
in
inc
enter
mov
xor
test
loopne
sbb
sbb
push
gs
add
sbb
scas
das
ret
lahf
pop
xor
mov
push
push
iret
call
mov
ja
or
lea
lret
lea
dec
sbb
cmpsb
push
mov
les
nop
mov
and
gs
xchg
les
inc
xchg
pop
pop
sub
clc
imul
push
lods
les
push
adc
int3
mov
mov
or
outsb
jecxz
jmp
lcall
fdivrl
mov
fcmovne
mov
mov
test
enter
inc
jo
jnp
mov
dec
pop
enter
inc
jae
dec
inc
sub
push
shll
or
add
xor
add
int
xchg
xor
or
sub
jno
and
cmp
inc
sbb
filds
stc
sahf
adc
jae
mov
sbb
les
jne
xor
stc
repnz
xchg
mov
or
add
xchg
add
add
or
and
cmp
movsb
xor
fbstp
sub
mov
shll
xor
jb
pusha
sub
jecxz
xor
and
mov
out
call
les
das
es
loopne
das
in
call
out
out
add
jnp
sub
mov
orl
lods
dec
cmpsb
in
in
xor
shrb
in
rcrb
pop
inc
orl
rol
xor
adc
and
pusha
mov
nop
lea
push
inc
adc
scas
pop
je
adc
and
call
pushf
lods
fwait
jmp
jo
inc
xor
mov
xlat
push
addb
insl
xchg
fisttpl
dec
pushf
dec
jb
cwtl
pusha
mov
xchg
test
mov
pop
inc
les
test
enter
enter
incb
shrb
shrl
xor
lret
test
sbb
fwait
xor
and
int3
jmp
push
or
push
gs
mov
cmp
add
and
sub
mov
insl
int3
std
call
push
sub
and
pop
ret
fisubrl
lds
inc
dec
sbb
in
daa
xchg
ss
push
sbb
mov
mov
jo
roll
adc
fwait
xor
sub
pusha
or
sbb
and
push
call
dec
push
test
add
out
fsubs
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
pop
ss
and
adc
add
inc
mov
add
jge
add
mov
mov
aam
or
pop
cmp
std
enter
add
or
xchg
or
test
dec
or
adc
mov
and
fists
sbb
and
pusha
inc
xor
jb
push
aam
add
fdivs
std
xchg
jb
mov
add
xor
xchg
addr16
sarb
in
lea
dec
mov
lea
stc
mov
dec
das
or
mov
int3
out
pop
xlat
push
in
add
fistl
repnz
test
mov
inc
movsb
mov
les
mov
rorl
inc
jo
push
inc
lret
test
pop
pandn
fcoms
test
adc
and
adc
lret
sbb
mov
rorb
nop
lret
cmc
add
nop
push
adc
jo
sub
lods
leave
mov
enter
inc
mov
movsl
push
std
test
sbb
nop
lods
sbb
ror
call
dec
adc
or
mov
lret
inc
mov
loopne
iret
imul
xchg
sti
les
jb
dec
sbb
rolb
mov
sarb
or
add
cmpsb
jne
mov
mov
in
in
dec
jb
dec
adc
or
ss
and
or
enter
es
sbb
fidivl
inc
sub
insl
xchg
shrl
clc
scas
add
inc
fsub
adc
call
es
subb
rcr
push
inc
xchg
insb
sbb
and
or
cmp
loope
cltd
mov
push
cmp
xor
push
push
call
sbbl
mov
aad
mov
adc
mov
bound
add
push
cltd
fisubl
adc
dec
es
fs
dec
es
jo
mov
add
insl
je
nop
push
sbbb
push
xor
dec
roll
shlb
inc
je
loopne
mov
inc
jne
and
shr
cld
stc
aas
adc
aad
pop
jo
mov
movsb
lea
add
pop
in
pop
lds
orb
lds
pusha
pop
in
insb
adc
mov
dec
pop
mov
push
mov
pop
push
aam
movsb
fdivrs
sti
sbb
test
jne
fwait
mov
xor
adc
mov
sub
lods
cmp
mov
rcrb
push
fldt
es
mov
or
lock
inc
inc
arpl
insl
add
push
lea
sub
test
dec
aam
xchg
dec
aad
int3
jmp
mov
sub
in
lods
add
mov
rorb
fisttpl
lahf
add
mov
nop
mov
mov
test
scas
test
mov
push
add
xor
and
sbb
and
stos
push
fdivrl
mov
sbb
cmpsb
ffreep
cltd
mov
jb
mov
add
add
lods
cmpsl
mov
or
lahf
faddl
test
nop
imul
lock
dec
sahf
pushf
lock
push
jnp
jmp
clc
repnz
pusha
inc
lock
adc
test
rdrand
dec
pop
cmp
fsubrl
dec
pop
inc
push
pop
xor
inc
adc
or
inc
mov
movsl
adc
or
push
xor
lea
cltd
sub
loopne
loopne
lock
js
sbb
iret
aam
frstor
ja
mov
mov
inc
jb
movsb
daa
fcomp
mov
divl
jne
xor
stos
mov
mov
and
push
stc
int
or
jmp
and
cwtl
fwait
push
inc
jmpw
adc
lcall
in
nop
xchg
call
adc
sub
xchg
dec
fwait
push
rorb
jo
mov
pop
add
mov
nop
dec
pop
jbe
add
subb
cltd
mov
mov
fs
inc
xor
mov
add
js
and
push
in
xchg
inc
adc
dec
inc
inc
faddl
and
enter
neg
jnp
rcrb
xchg
mov
mov
in
fidivl
or
adc
dec
mov
outsb
leave
xchg
push
and
cmp
add
or
cmpb
add
imul
xchg
int3
jp
ja
inc
outsb
xchg
aam
mov
imul
sub
jle
negl
out
movl
or
movb
test
fnstenv
mov
sub
loop
xchg
xchg
adc
pop
mov
jp
or
sub
adc
and
and
cmp
mov
cli
jmp
dec
or
mov
and
push
popa
dec
out
and
int
stos
pop
int3
rcl
cmp
fs
cmovnp
and
mov
adc
call
rcll
cmp
fsub
pop
subb
sbb
add
jb
iret
repz
loope
fadds
mov
jae
lock
cld
or
adc
fnstcw
mov
insl
mov
push
les
sbb
out
inc
bswap
mov
and
mov
mov
decl
ljmp
add
fistpl
or
jnp
mov
add
pushl
shlb
leave
or
adc
sti
dec
mov
mov
jns
mov
jle
test
nop
dec
inc
push
inc
cmp
out
sahf
cmp
sbb
lcall
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
das
push
push
or
push
or
pop
popa
jmp
fs
imul
jo
jb
je
jbe
js
jp
xor
xor
clc
aaa
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
jmp
cmp
rclb
cmpl
sub
pop
pop
push
jo
pop
idivl
shl
mov
add
decl
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
gs
xor
insb
xor
cs
adc
popa
and
popa
je
outsl
cmp
mov
push
mov
xchg
sub
lock
bsr
lret
push
xor
incl
mov
testl
push
inc
outsl
jb
insl
mov
je
jb
gs
cmp
or
outsl
add
gs
jbe
add
add
add
je
push
je
ss
andb
jne
jb
mov
sub
dec
xor
xor
out
das
or
insl
insl
cmp
dec
out
lcall
add
das
das
adc
push
xor
mov
push
inc
inc
gs
insl
bound
daa
cmp
outsl
jbe
dec
arpl
push
jo
fdivrs
jne
jne
dec
jne
xchg
repnz
divl
mov
inc
jo
imul
inc
ss
inc
insb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
xchg
scas
push
jne
xor
dec
jno
and
daa
push
scas
clc
sbb
notb
adc
and
jbe
ja
pop
dec
inc
ds
popa
lds
insl
or
filds
mov
adc
ret
or
pop
sbb
out
add
and
call
add
es
sub
sub
sub
inc
cmc
dec
shrl
das
movsl
cmp
cmp
ds
inc
das
push
push
pop
cmp
je
cmp
jmp
jle
add
arpl
test
insb
pop
dec
addr16
and
push
pop
or
mov
inc
adc
push
je
ret
pop
inc
insb
jae
cs
je
xlat
je
push
mov
inc
inc
mov
out
jo
insl
and
add
jbe
dec
push
push
sbb
sbb
dec
dec
inc
sbb
and
push
fwait
loope
add
xor
sbb
push
xor
insb
imul
insl
pop
mov
pop
push
shr
je,pn
jo
xchg
mulb
or
pop
mov
and
fs
pusha
addl
imul
data16
pushf
or
xorb
inc
popa
and
mov
fidivrl
sbb
xor
mov
data16
push
xchg
or
aas
xor
loopne
fidivs
dec
mov
add
scas
lcall
mov
test
and
or
mov
sbb
jp
push
xor
ficomps
fs
xchg
jnp
mov
mov
je
and
rolb
push
ds
data16
daa
fidivrl
and
jo
fsubrs
mov
push
add
daa
sub
sub
xlat
and
das
arpl
cmp
arpl
pusha
popa
sub
mov
mov
add
inc
xchg
insb
imul
gs
inc
inc
orl
lcall
mov
pusha
and
xor
gs
ret
sub
push
fistps
push
xor
cs
aaa
mov
xchg
shll
inc
jns
cmp
pop
dec
jae
dec
add
add
inc
xor
ja
outsl
jl
dec
pop
outsl
ss
fs
jb
xor
imul
inc
inc
xchg
push
inc
cmp
mov
data16
jmp
das
mov
mov
adc
cmp
inc
jle
lcall
out
push
cmp
jo
bound
pop
enter
inc
aaa
insl
jmp
add
in
ljmp
sbb
imul
pop
or
cmp
inc
jno
rclb
mov
pusha
mov
nop
inc
insl
imul
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
test
dec
cmp
mov
pop
pop
data16
lret
inc
sub
pop
dec
mov
or
jo
and
jbe
insl
mov
inc
imul
test
and
dec
cmp
fwait
int3
outsb
inc
jg
lcall
loopne
jbe
jae
add
stc
mull
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
sbbb
gs
popa
mov
add
xor
jg
mov
outsb
popa
js
jae
je
pop
push
pop
add
add
xchg
cmp
sub
xchg
adc
add
add
adc
add
add
add
clc
jg
rolb
add
and
push
pop
pop
or
aaa
clflush
push
push
pop
hlt
and
or
pusha
add
int3
sti
lcall
sub
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
mov
mov
xchg
xlat
push
sbb
js
jo
dec
sahf
pop
sbb
sahf
dec
lea
mov
mov
xchg
xchg
jecxz
xchg
dec
xchg
adc
icebp
push
xchg
loopne
pop
push
adc
mov
lock
dec
dec
pop
pop
ret
pushf
add
and
daa
pushf
jo
cmp
daa
pushf
jo
pop
data16
mov
out
push
and
pop
push
adc
mov
sub
mov
rcll
sub
dec
add
xchg
add
mov
adc
add
dec
push
or
add
mov
mov
dec
cmp
add
add
shrl
lods
popf
cs
add
rolb
mov
aaa
add
pop
insl
add
and
decl
add
addb
xchg
lea
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
hlt
push
repnz
cmc
div
clc
stc
cli
sti
cld
xor
sub
addl
stos
call
shll
add
lcall
mov
push
outsl
ja
cmp
push
jae
jb
bound
jl
mov
ss
popa
fldt
arpl
mov
jg
fstps
lea
dec
mov
outsl
js
push
push
rolb
inc
push
mov
inc
pop
outsb
insb
sahf
insb
gs
mov
dec
in
sub
mov
daa
add
insb
in
dec
imul
pop
jns
inc
mov
imul
mov
and
inc
jb
jns
daa
sub
mov
enter
jns
dec
mov
pusha
aad
outsb
rolb
addr16
or
pusha
les
push
mov
and
mov
add
pop
pusha
inc
aad
mov
push
push
lahf
and
fisubl
dec
clc
sbb
xchg
mov
sti
cmp
add
movsb
or
and
pusha
es
dec
dec
and
mov
pop
xchg
jae
push
cmp
pusha
ja
or
call
push
adc
das
outsb
gs
mov
adc
jbe
xchg
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
mov
pushf
mov
or
dec
jge
cmp
add
jg
imul
inc
call
inc
pandn
and
jae
inc
push
shll
xor
jg
popa
jl
mov
rcll
jne
adc
jns
pusha
push
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
repz
repz
push
das
push
sub
divb
es
jle
sub
sub
mov
jnp
addr16
sub
sub
xchg
loopne
push
cmp
call
cmp
ficompl
pop
pop
cwtl
dec
adc
jb
sbb
push
jb
imul
jo
ss
lret
cmp
sbb
xor
es
sub
jo
sub
adc
sub
cld
push
hlt
out
sahf
out
call
out
jns
mov
cwtl
dec
add
jnp
repz
push
aam
cwtl
nop
mov
out
ds
pushf
inc
push
test
out
sahf
je
fs
adc
pop
fnstsw
cmp
outsb
data16
push
notl
add
fdivl
push
push
or
daa
das
repz
jbe
push
dec
inc
inc
int3
inc
sahf
cmpsl
sbb
je
cmp
repz
repz
sub
sbb
out
iret
sbb
add
decl
repz
in
shrb
dec
sub
or
repz
repz
test
pusha
inc
xor
stc
cmp
xor
sbb
std
in
sahf
out
sahf
loopne
mov
insb
inc
cmp
repz
lock
aam
mov
iret
repz
xor
cmpsl
pop
sub
or
cmp
inc
shlb
jns
push
xor
jb
add
sub
lea
cmpsb
bound
xchg
fstpt
insb
fs
sbb
je
jns
cmp
or
in
dec
test
pcmpgtw
xor
add
mov
add
cmp
inc
inc
dec
jae
mov
insb
inc
mov
scas
cld
sbb
dec
inc
dec
xor
inc
dec
dec
dec
and
ret
push
push
loop
and
inc
dec
add
dec
dec
inc
add
ljmp
push
das
adc
sub
adc
fildll
std
incl
popa
into
mov
mov
adc
outsb
mov
pop
int3
xor
ds
pop
push
pop
clc
lret
pushl
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
and
in
fstl
mov
and
cmp
inc
xchg
cmp
dec
imul
lret
add
adc
inc
inc
mov
mov
sub
fwait
out
cmpl
jns
ds
xor
incb
decl
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
and
xchg
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
incl
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
pop
leave
loop
mov
xchg
dec
mov
or
test
mov
iret
adc
out
mov
pop
and
es
orl
push
flds
pop
scas
fucomi
pop
push
dec
push
push
adc
or
outsb
jbe
dec
add
and
jo
mov
sbb
jae
sahf
inc
cmpsb
imul
divl
xchg
inc
dec
push
dec
push
idiv
dec
sub
mov
sbb
sysret
adc
cmp
cs
sbb
pop
sbb
mov
add
sbb
sub
cmp
add
add
push
pop
adc
mov
dec
add
cmp
pop
jbe
dec
xor
cmovbe
rcpps
sbb
sbb
jnp
std
ja
pop
movaps
push
sub
pop
dec
sub
aas
ja
fstpt
push
and
es
lods
push
and
ss
or
push
adc
push
ljmp
push
push
pop
inc
aaa
push
sbb
sahf
loopne
cmp
xor
sub
pop
sbb
fists
inc
push
adc
or
inc
push
sub
inc
add
inc
stos
cld
pushl
adc
add
adc
mov
sub
inc
inc
add
das
sti
outsb
fisttpl
dec
push
sub
or
lahf
in
nopl
xor
es
inc
inc
inc
push
test
je
lea
push
sub
inc
subps
mov
mov
mov
adc
push
sbb
push
dec
or
sbb
in
sub
sbb
add
and
das
sbb
int
xor
mov
dec
dec
push
xor
imul
pop
and
pop
pop
and
xor
mov
jle
xor
shl
push
pop
sbb
mov
push
or
imul
mov
stos
test
xorb
sbb
icebp
mov
pop
push
gs
out
jecxz
fists
sbb
adc
aaa
pop
xor
xor
mov
cmp
aaa
or
in
add
add
add
sbb
add
add
notb
push
push
mov
pop
pop
or
sbb
add
add
cmp
fs
adc
dec
cwtl
in
push
mov
xchg
pop
adc
imul
rolb
jne
xor
out
jg
sub
lea
repz
xchg
push
lahf
daa
mov
fdivp
ds
loopne
jg
push
fsubr
imul
sub
loop
lock
es
or
pop
rcl
negl
hlt
sub
data16
scas
sub
sub
jp
cmp
popa
push
mov
pop
int3
popa
outsb
and
pop
sbb
mov
enter
bound
xor
mov
cvttps2pi
cmp
repz
push
movaps
iret
repz
sahf
mov
iret
idivl
aas
aas
push
push
lcall
fisubs
negb
les
sub
pop
sarl
add
dec
cs
aaa
sub
inc
les
cmp
pusha
dec
adc
lar
xlat
pop
sbb
cmp
cmp
ss
stos
push
pop
and
inc
jbe
mov
jae
or
pop
or
xor
pop
or
nop
push
or
jmp
pop
fnstsw
and
sub
push
xor
fcoms
jb
sub
push
xor
add
jb
cmp
in
xor
pop
add
dec
rol
sub
push
dec
dec
push
xor
pop
push
fildll
imull
sub
aas
push
movaps
sub
cs
inc
sarl
pop
pop
xor
push
mov
sub
mov
ja
push
xor
cmp
xor
or
ja
ja
sub
out
xor
ret
cld
xor
pop
sbb
fs
pop
lsl
add
mov
scas
btr
scas
jge
add
cmp
outsb
test
shll
add
cmp
daa
or
ret
xor
ret
popa
test
dec
or
es
push
fs
sub
or
int
and
es
inc
das
sbb
cmp
cs
pop
orb
cld
icebp
cmp
jbe
inc
aaa
cmp
cs
push
xor
mov
adc
dec
pushf
pop
dec
inc
sbb
es
loopne
jle
dec
sub
lods
pop
cmp
icebp
xor
sbb
push
imul
sub
ret
push
xchg
testl
adc
inc
sbb
xchg
cmp
cmp
sbb
rclb
aad
sub
sub
pop
clc
cmp
add
and
pusha
jns
sbb
and
icebp
xchg
test
in
xor
sbb
jle
in
or
aaa
push
mov
pop
xor
mov
orl
xchg
cmp
adc
test
sbb
mov
into
xchg
dec
xor
mov
dec
mov
pop
inc
xchg
lret
mov
dec
fdivs
push
divl
xor
add
pop
jnp
sub
add
es
push
cmp
mov
clc
and
jle
in
dec
or
imul
cmp
fwait
mov
xchg
dec
sbb
pop
xor
inc
push
gs
sbb
mov
xchg
jbe
loope
sub
cmpsb
add
xlat
mov
int3
psadbw
inc
inc
push
push
xor
ss
cmp
pop
pusha
sbb
es
stos
sub
push
test
add
add
push
add
push
pop
dec
or
insl
iret
xor
dec
inc
sbb
push
repz
aaa
flds
in
add
xor
add
sbb
cmp
test
imul
pop
inc
adcl
cmc
ret
jnp
cmp
xor
sbb
sbb
push
push
jge
add
add
or
loopne
mov
and
push
adc
imul
dec
sub
rorl
js
sub
test
and
ja,pt
and
repz
mov
popa
imul
fs
push
pop
outsl
jo
ret
inc
sahf
data16
push
ja
scas
jb
mov
xchg
adc
push
pop
cmp
repz
inc
push
add
bound
mov
fnsave
xchg
pop
cmp
add
cmp
ret
jecxz
cmp
das
add
xchg
pusha
sub
arpl
notl
je
sub
push
out
adc
jmp
test
add
push
adc
mov
adc
in
or
mov
and
sbb
adc
fistps
jmp
sbb
add
xor
push
add
sbb
jns
push
dec
in
push
adc
xor
mov
push
inc
or
sub
mov
push
pop
and
es
in
rcrb
push
out
push
push
dec
shlb
xchg
cli
pop
ret
pusha
mov
mov
loope
or
push
popa
mov
xorl
shlb
les
mov
popf
add
add
inc
scas
lret
aad
dec
ret
outsb
inc
sub
inc
popf
xor
add
and
and
jl
and
stc
push
es
inc
mov
add
add
pop
out
popa
jne
pop
daa
pop
mov
fmull
push
inc
push
sti
add
push
dec
es
jae
gs
mov
jo
bound
push
mov
dec
push
cwtl
das
and
fmull
pop
jbe
fsubrs
jae
stc
pop
sbb
inc
das
sub
jmp
adc
test
shr
inc
addr16
daa
and
mov
sub
xor
je
jb
outsb
xor
and
ret
arpl
int
je
push
jb
add
jmp
cs
into
and
hlt
lods
stos
int
std
outsl
sub
xor
xchg
pop
inc
movsb
pop
mov
inc
add
xor
adc
cmp
or
sub
mov
push
mov
cmp
or
mov
pop
sbbb
add
pop
test
loopne
hlt
add
sub
pop
dec
sub
add
sbb
mov
xchg
jle
jbe
sarb
push
add
or
in
inc
and
inc
inc
push
into
add
push
sbb
sbb
popl
insl
sub
mov
pop
push
xor
into
lea
or
push
es
leave
fisubl
and
sbb
xchg
enter
inc
pop
ljmp
sbb
pop
push
dec
push
dec
pusha
push
xor
daa
push
or
les
pop
jmp
cmp
testl
iret
inc
daa
adc
xchg
test
aaa
sbb
push
pop
pop
push
xor
aad
test
sub
cmp
rorl
mov
inc
adc
push
test
lods
adc
xor
inc
iret
adc
mov
cmp
adc
jge
daa
cmp
flds
clc
iret
sbb
dec
dec
es
adc
or
daa
add
push
daa
int3
jle
pop
add
dec
pop
sub
adc
xor
repnz
xchg
loop
add
loop
mov
pop
cmp
enter
fmull
fldl
adc
out
sbb
into
ds
out
push
cmp
outsb
scas
jecxz
cmp
loopne
or
inc
lods
rcrl
push
push
jo
and
in
push
jo
inc
data16
inc
push
and
push
push
loope
call
rorl
loop
cmp
insl
jo
inc
inc
add
or
mov
imul
loopne
outsl
lock
outsb
mov
lcall
ss
adc
aaa
sbb
sbb
daa
push
mov
adc
mov
inc
and
push
pop
adc
loope
pop
frstor
sub
stc
jp
cmp
or
adc
add
sarl
add
das
xor
fsubs
das
add
push
mov
mov
cmp
pop
and
pop
test
adc
popf
mov
push
cmp
leave
xor
das
xor
cmp
jecxz
push
mov
das
push
jns
and
jecxz
outsl
push
fwait
dec
sub
mov
mov
jno
test
lea
push
and
sbb
adc
jmp
sbb
or
pop
cmp
sbb
mov
cli
pop
pop
imul
sbbl
aam
add
inc
cmp
push
test
inc
lods
movaps
push
cs
andb
and
sbb
loopne
aaa
cmpsb
sub
sub
rorl
sbb
pop
cmp
ret
dec
mov
ds
push
pop
push
movsl
inc
call
mov
fs
sbb
xor
xchg
push
lock
mov
inc
es
adc
add
push
push
push
adc
push
and
push
lock
push
es
xor
adc
adc
int3
push
inc
mov
cs
inc
sub
add
add
or
clc
or
push
jg
cmp
push
sbb
rcll
adc
pop
add
das
jae
or
or
jg
cmp
dec
cmp
add
jbe
test
and
cmpsl
hlt
lods
pop
es
or
mov
sbb
dec
sbb
adc
and
push
stos
das
adc
add
dec
fcmovbe
and
adc
adc
loopne
cmp
in
sahf
int
cmp
pop
and
pop
adc
adc
jg,pt
inc
inc
or
fcoms
negb
cmp
xor
dec
cltd
cmp
sub
or
mov
orb
lock
out
and
cwtl
hlt
or
or
daa
nop
and
xchg
out
push
sbb
push
hlt
lss
sub
ljmp
scas
add
pop
sbb
dec
adc
pushf
or
dec
cmp
pop
icebp
push
in
inc
cmp
and
sti
mov
aad
adc
movl
xchg
cltd
adc
out
xor
fists
imul
stc
js
sbb
mov
xor
mov
sbb
and
sub
mov
fistpl
xor
inc
mov
xor
or
call
movsl
sub
insb
xor
sbb
fdivrl
and
inc
movsl
or
inc
cwtl
rcrl
insb
cmp
imul
addr16
xor
cs
dec
sub
cmpsb
shll
dec
fldcw
xchg
and
xor
lcall
inc
cmpsb
adc
adc
mov
pop
cmc
xchg
movsb
push
aaa
push
adc
add
rcr
adc
push
add
pop
push
loope
enter
idivb
or
aas
pop
sbb
pop
mov
inc
add
add
jecxz
xor
rcl
roll
gs
or
outsb
cmp
push
dec
sbb
js
mov
or
es
sbb
jbe
mov
pop
sub
daa
xor
add
pop
adc
and
sbb
ret
mov
dec
cmp
push
int
xchg
add
ss
mov
xor
push
xor
outsl
cmp
hlt
adc
pop
aad
fbstp
xlat
push
aaa
pop
or
or
sub
rorb
cmp
push
push
xor
fsts
pop
ret
jbe
sbb
sub
ja
loope
add
es
cmp
sub
lcall
je
jo
insb
gs
ja
fs
sbb
imul
mov
add
cmp
add
push
inc
or
mov
movsb
dec
cmp
inc
and
inc
inc
add
push
push
inc
push
mov
insl
mov
jb
mov
scas
push
aam
push
sbb
pop
iret
repz
push
push
jno
jle
testb
repz
pop
cmp
pop
xchg
pop
insb
test
mov
mov
inc
fisubrl
xchg
pop
add
rorl
jg
mov
mov
aaa
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
stc
imul
mov
sbb
sbb
mov
or
xor
mov
dec
fsubs
pop
insb
pusha
pop
sbb
mov
out
mov
pop
dec
xchg
jecxz
dec
push
pop
bound
stos
pop
test
pop
adc
incb
push
and
xor
aaa
xor
or
test
xchg
jbe
fcoml
rolb
pop
jb
add
push
lods
lea
out
fistpl
outsl
push
dec
imul
fisubl
mov
sahf
xchg
sub
in
in
pop
int3
dec
xor
xchg
out
xor
cmp
sub
jns
or
cld
and
or
faddl
jmp
pop
je
inc
js
cmp
xchg
push
dec
cmp
xor
push
dec
pop
aam
imul
loop
clc
pop
cmp
mov
cmp
cmp
xor
xor
inc
sub
inc
sbb
sub
xor
inc
adc
scas
pop
xor
add
scas
pop
call
adc
add
addb
adc
das
js
xchg
inc
sub
nop
add
push
dec
jp
out
push
jb
push
scas
dec
sbb
ja
outsl
jne
lock
std
je
bound
mov
or
mov
add
jg
adc
xchg
test
ja
rolb
das
rcr
jbe
or
das
pop
loopne
lods
and
pop
sbb
lods
add
clc
out
sbb
inc
imulb
out
outsl
sbb
push
mov
iret
lret
faddl
sbb
push
cmp
pop
nop
sbb
pop
aaa
or
add
wrmsr
or
sbb
aam
xchg
adc
push
add
dec
outsb
pusha
add
push
add
imul
adc
and
inc
add
ret
fsubrs
add
inc
lret
pop
pop
pop
aad
adc
push
shlb
out
mov
rorl
loopne
inc
test
dec
paddsw
jge
movsb
das
imull
or
pop
adc
sub
cmp
mov
in
cs
ss
repz
pop
cld
stos
lods
es
mov
int
jg
sti
xchg
mov
in
jnp
cs
aad
adc
push
cmc
fstps
xor
bnd
or
getsec
in
jnp
pop
inc
mov
push
fcomp
pop
test
dec
mov
and
mov
data16
lret
push
pop
lret
int
push
push
bound
ret
pop
ja
add
cs
xchg
push
movsl
add
ja
in
cmp
in
insb
xorl
mov
scas
enter
push
mov
iret
imul
lds
xor
lcall
cmpsb
insl
call
fnstcw
pop
push
cmpsl
aam
stc
mov
jo
sbb
sbb
loopne
test
shrl
or
stos
data16
jbe
repz
add
daa
lods
ja
iret
repz
aas
stc
mov
cltd
aaa
mov
dec
repz
mov
inc
dec
int
idivl
push
stc
push
pusha
cwtl
pop
jle
repz
push
nop
push
mov
xor
cltd
cmp
mov
cwtl
mulb
push
mov
lcall
mov
out
iret
repz
out
fsubrs
loopne
mov
jo
addl
mov
out
mov
ss
addl
idivb
cmpsl
es
in
xchg
rcrb
jno
lcall
jl
out
ja
push
test
daa
mov
jns
sarl
mov
out
lahf
loop
mov
push
mov
notl
aas
and
aad
ds
mov
ret
xor
ja
out
xlat
pop
pop
push
dec
push
mov
nop
iret
sarl
js
xchg
iret
testl
xchg
sbb
pop
insl
lea
out
cmpsl
iret
jmp
and
repz
and
jg
dec
sbb
and
lock
adc
ljmp
and
rcrb
push
push
mov
xor
adc
das
xlat
add
mov
mov
push
mov
fsubs
mov
adc
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
jb
pop
in
or
add
pop
push
jb
inc
sbbb
inc
adc
xor
outsb
push
push
jae
loop
adc
inc
push
inc
or
cmp
mov
je
addr16
push
mov
cmp
cmp
cmp
fisubl
push
idivl
test
push
das
data16
dec
cmp
push
insl
mov
dec
je,pn
push
ljmp
orl
xorps
lret
aad
cmpsb
push
insb
pop
push
dec
pop
je
pop
imul
push
fbstp
rcr
or
das
push
mov
nop
outsb
pop
jbe
loop
xor
ret
popa
mov
jae
inc
ss
dec
mov
ja
mov
mov
push
ja
pusha
ret
add
leave
js
or
mov
ljmp
adc
cmp
es
insl
jo
ds
insb
je
push
addr16
jo
jae
es
in
jnp
xchg
outsl
and
cmp
adc
sub
push
cmpsb
mov
and
or
cmp
xor
mov
aad
xchg
aaa
cmp
cmp
push
xor
xor
cmp
push
add
daa
push
push
fcmovu
xor
sbb
inc
pop
pop
add
aaa
pop
and
std
push
dec
push
and
dec
mov
sub
push
rolb
adc
mov
and
inc
sub
mov
jp
jbe
jns
jmp
pop
dec
movups
es
dec
inc
cmp
ucomiss
lock
mov
mov
xor
adc
outsb
dec
ds
sbb
and
push
jo
and
cmp
pusha
cmp
push
incb
out
and
shll
orb
mov
sub
adc
xor
ret
ss
inc
pop
and
imul
sub
dec
popa
fildll
hlt
and
cmp
addr16
sbb
lock
sub
sub
inc
fdivs
popa
or
push
enter
aam
clc
pop
mov
cs
movsl
sti
push
jne
stos
and
test
aaa
bound
mov
loop
das
sbb
pop
ret
dec
push
insb
das
sbb
arpl
sub
push
push
dec
sub
or
cmp
xor
pop
in
xor
adc
or
data16
pop
dec
movsb
push
inc
adc
test
cmp
sub
jmp
daa
sbb
push
sbb
jo
mov
jns
sub
lods
mov
dec
std
aaa
inc
pusha
add
mov
and
or
insl
mov
stos
jmp
mov
add
daa
push
js
subb
and
aaa
iret
xchg
les
mov
jbe
pop
pop
ret
adc
jno
push
lds
sub
popa
mov
test
daa
pop
xchg
lds
das
dec
xchg
fiaddl
test
cwtl
js
js
add
repnz
xor
inc
cwtl
xorl
sahf
push
or
cmp
push
lock
mov
scas
lods
loopne
imul
daa
lahf
push
jo
loopne
xchg
outsb
ficompl
addb
pop
int
xor
addr16
out
arpl
pop
jl
xor
adc
loope
xchg
xchg
insb
pop
push
inc
xchg
pop
and
loop
mov
mov
test
xor
aaa
adc
or
dec
rorb
fs
push
daa
sub
in
clc
scas
js
cs
or
jl
jl
loop
and
gs
imul
push
insl
shlb
subb
and
es
js
mov
out
adc
add
outsb
cmpsl
lea
popa
mov
inc
or
enter
adc
add
popa
fcomps
add
in
inc
dec
and
add
xchg
lock
or
jge
je
in
adc
es
cmp
das
test
add
je
inc
sub
or
push
adcb
or
sahf
or
mov
mov
orl
rcr
rcrl
and
push
hlt
out
jge
pop
sbb
adc
adc
mov
lcall
push
or
cs
sahf
and
cmp
int
mov
or
sti
adc
xchg
jb
pop
cmp
cmp
adc
mov
push
pop
push
loope
or
sbb
cmp
fistpl
testl
push
adcl
mov
popa
popa
and
out
adc
fmuls
popf
push
cltd
xchg
arpl
sub
cs
lock
sbb
and
or
add
cmpsl
or
push
jge
add
rorl
add
aas
insb
jle
and
cs
cmpsb
stos
add
mov
lods
mov
add
cli
dec
stos
mov
test
pop
dec
and
push
repnz
mov
fists
cmpsb
pop
or
and
push
lods
lods
fisttpll
inc
and
aam
cmp
lods
add
cmp
dec
xor
cli
outsb
and
add
jbe
ss
and
sub
mov
or
sbb
xchg
and
ljmp
mov
sbb
xor
lcall
sub
xchg
pop
dec
xchg
lock
shlb
sbbb
sbb
fst
sbb
mov
push
inc
xor
xor
or
stos
jb
xor
push
and
pop
fldenv
inc
lcall
or
and
data16
adc
push
inc
push
pop
push
xchg
rcrl
xor
mov
and
js
push
cwtl
or
icebp
idivl
and
jns
pusha
push
loop
xchg
or
xor
mov
cmp
mov
sub
dec
dec
ret
xlat
cmp
mov
pop
pop
das
push
pop
push
add
mov
je
arpl
or
ret
xor
xor
add
fsubl
ja
sub
and
push
pop
out
sahf
out
and
out
sahf
push
andl
lahf
out
xor
cltd
or
xchg
ss
add
add
ss
int
pop
or
adc
sbb
insb
mov
and
sub
xor
inc
mov
jge
fidivs
mov
mov
int
mov
popa
xchg
sbb
sub
add
or
adc
ss
dec
and
add
add
data16
push
push
dec
str
ss
cwtl
or
and
das
incl
clc
adcl
imul
and
fisubrs
push
daa
or
pop
je
cmp
sub
fsubrs
pusha
std
movsl
xor
jb
jo
lds
push
fadds
jbe
ficomps
add
out
and
sub
lahf
dec
cli
or
push
ss
adc
ficomps
and
add
add
pop
sub
add
push
pop
or
aaa
push
or
add
sbb
add
dec
pop
push
inc
dec
push
or
mov
pusha
push
dec
xor
sub
adc
dec
cmp
dec
cs
fwait
insl
jmp
inc
xor
cmp
out
pop
rorl
lock
sbb
inc
sub
add
sbb
sbb
out
std
mov
and
push
push
push
dec
cmp
sub
daa
xor
dec
and
or
jg
xchg
mov
dec
inc
inc
add
adc
dec
sub
and
adc
lea
dec
push
sub
dec
or
lcall
xor
add
dec
cmp
pop
xchg
les
add
or
fsts
js
cmp
pop
ss
add
addl
add
cwtl
pusha
lahf
test
dec
mov
inc
mov
sbb
dec
cwtl
pusha
imul
cmc
push
pop
orb
xchg
bound
loope
sbb
mov
or
add
push
ss
repz
push
sbb
loop
xor
call
xchg
dec
imul
xchg
clc
xchg
push
push
dec
lods
push
outsl
inc
sub
nop
test
push
cmp
push
mov
push
xor
cwtl
pop
lret
add
insb
aam
pop
enter
into
inc
jb
and
cld
push
push
aas
loope
pop
sbb
push
push
inc
push
dec
xor
leave
sti
inc
dec
push
dec
add
xor
jo
sub
mov
push
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
push
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
fiadds
je
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
pushl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
ljmp
cs
ret
sub
xchg
mov
data16
mov
call
sar
lcall
hlt
jo
push
push
shll
ja
daa
mov
mov
out
cli
ljmp
movsb
sbb
dec
stos
fmuls
lret
rep
cs
arpl
mov
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
dec
dec
aaa
and
jmp
and
push
es
sub
popa
jnp
cmp
xor
dec
inc
ja
ss
jno
jl
mov
mov
imul
and
dec
pop
push
jae
inc
sub
cmp
movsb
fsubrs
xor
xor
dec
jns
and
jge
stos
lcall
je
push
xor
fs
xor
and
ud0
pop
pop
or
or
sbb
xlat
mov
aaa
dec
mov
xor
add
aas
pop
call
ja
jbe
movsb
data16
push
aaa
jnp
pop
aaa
pop
pop
daa
pop
daa
sbb
push
aas
sbb
aaa
push
aaa
and
pmuludq
pop
inc
cmp
sbb
or
and
jnp
push
aaa
push
xor
inc
add
xor
xor
lret
in
xor
push
inc
add
inc
out
jle
pop
inc
inc
xor
and
aaa
inc
push
inc
negb
inc
ss
ucomiss
scas
mov
cmpsl
ss
add
jmp
and
enter
subl
aaa
xchg
inc
xor
dec
call
sti
pop
xor
popa
and
mov
or
lock
popf
or
scas
bound
or
jmp
sbb
mov
fistpl
fdivl
jecxz
cwtl
arpl
icebp
andb
addl
xor
pop
mov
call
mov
das
and
xor
adc
or
mov
les
xor
inc
mul
sbb
aaa
addb
add
adc
mov
shl
xor
xor
jp
outsl
je
mov
insl
gs
ss
cmp
out
sub
in
sarl
mov
push
shlb
stos
fadds
loop
lock
sbb
gs
cmp
pop
push
mov
adc
and
inc
cmp
ret
push
inc
dec
cli
mov
cmp
jnp
lret
roll
mov
add
orb
add
push
jns
xchg
or
enter
sub
pop
mov
aaa
cmp
or
xor
pop
fidivl
pop
push
add
test
jp
cmp
das
mov
fs
pop
adc
stos
subl
shl
sbb
or
cmp
and
outsl
or
push
call
test
adc
popf
sub
or
xor
inc
pop
test
or
out
outsb
je
xor
js
into
mov
jbe
jae
popa
insl
gs
cmp
dec
xor
push
rolb
into
or
push
inc
aad
sub
pop
idiv
mov
je
loop
or
aad
inc
lret
testb
les
dec
push
popa
je
push
jle
mov
xor
adcl
or
jg
testl
push
gs
or
xor
shlb
and
sub
cmp
scas
and
pop
aas
pop
pop
ficompl
and
les
pop
movsl
pushf
pop
adc
add
bound
xorb
sbb
movl
cs
push
mov
sarl
fmull
inc
cwtl
push
inc
push
pop
stos
pop
movsl
mov
mov
mov
adc
addr16
xor
dec
mov
xor
xor
mov
call
inc
fadd
jge
mov
push
xchg
mov
pop
xor
pop
ds
nop
pop
aaa
add
sbb
add
popa
dec
cli
add
mov
pop
push
ja
jb
pop
cld
pop
xor
pop
test
inc
jne
xchg
adcb
out
inc
rolb
mov
xor
mov
sbb
pop
scas
hlt
or
pop
dec
push
imul
or
test
jg
xor
add
out
or
pop
adc
insl
sbb
and
adc
cmp
pop
add
cmp
xor
insl
daa
mov
pop
outsl
fs
jo
pop
or
push
mov
jo
stos
push
outsl
imul
pop
sub
xchg
mov
movsl
pop
push
pop
or
mov
lret
xlat
or
push
cmp
xor
mov
iret
pop
cmpb
push
cmp
scas
pusha
push
and
sbb
pop
mov
pop
es
mov
ds
sub
push
dec
cmp
int3
lods
add
push
sahf
cmp
pop
pop
mov
je
inc
push
inc
pop
inc
push
mov
mov
shrb
aaa
lods
inc
pop
xchg
cmp
xor
inc
cmc
or
outsl
sbb
push
cltd
add
adc
sub
and
inc
sbb
push
add
aam
fldl
xlat
imul
xor
jle
insl
add
and
jle
pop
aas
or
fisubrs
xchg
push
xchg
add
imul
pop
jnp
and
repz
imul
push
inc
dec
cmp
inc
lods
cmp
mov
xchg
mov
xor
scas
aad
xor
jnp
cwtl
bound
xchg
dec
push
cmp
loopne
jge
pop
sbb
sub
movsb
aas
add
pop
cmp
icebp
sub
inc
dec
lock
out
mov
and
inc
add
pop
add
cmp
dec
call
adc
add
add
fidivl
jne
or
lods
xor
dec
filds
sub
jb
into
add
pop
dec
es
dec
jae
push
popa
subb
imul
outsl
and
add
inc
push
rcrl
cmp
imul
and
cmp
add
push
inc
adc
inc
pop
push
dec
inc
dec
inc
push
pop
mov
sahf
xlat
jb
gs
js
lock
rolb
inc
es
cmp
push
pop
daa
dec
push
dec
adc
daa
jb
jb
aas
mov
lahf
or
xlat
nop
call
and
xchg
xchg
inc
adc
add
sub
nop
push
shlb
adc
divl
xorl
mov
push
jb
push
adc
xchg
sub
or
or
adc
inc
test
pusha
push
sbb
std
pop
sbb
and
push
dec
sub
aad
inc
mov
dec
add
sub
sub
cmpsb
pusha
push
and
sub
dec
sub
jo
inc
lret
and
adc
push
loope
xchg
fcomps
mov
cmc
sub
mov
call
loop
adc
jb
rcrb
in
test
inc
sbb
adc
aam
rorb
pop
sub
fsubrl
sbb
add
fnstenv
xlat
inc
rclb
test
mov
mov
mov
stos
loop
sbb
dec
sub
xlat
outsl
imul
fldt
inc
push
imul
stc
mov
xchg
into
stc
mov
dec
and
and
ds
mov
das
mov
fmuls
dec
xchg
dec
inc
xadd
ss
enter
inc
mov
es
mov
mov
cmp
mov
jo
jo
pop
inc
dec
add
cmp
xchg
sbb
das
test
insl
scas
sbb
cmp
mov
add
test
addr16
pop
dec
movsb
or
daa
jne
jnp
lret
sub
inc
das
inc
add
xorb
outsl
ror
cmpsl
mov
jo
add
xor
lods
push
daa
mov
and
daa
add
insl
insl
outsl
mov
mov
pop
cld
add
inc
aas
jg
stc
jbe
addr16
outsl
nop
sbb
jb
dec
daa
inc
inc
jb
push
jb
xor
push
jb
push
sub
and
push
jb
add
push
daa
jge
notb
push
out
mov
loopne
sarl
push
les
out
ds
mov
aam
mov
sahf
dec
sub
pop
xor
cld
out
iret
mov
jo
pop
sahf
pop
repz
pop
pop
push
mov
imul
pop
enter
clc
cmp
shlb
sbb
and
mov
xchg
push
xchg
int3
icebp
adc
out
dec
inc
lahf
nop
mov
outsb
fsubs
mov
pop
dec
mov
aam
ss
add
or
add
cmp
add
add
push
sbb
inc
push
sub
testb
add
or
pop
jg
jg
pop
mov
mov
and
dec
pop
in
in
mov
mov
inc
aaa
adc
test
pop
das
dec
push
xchg
or
rcll
add
leave
mov
inc
adc
inc
jns
in
test
les
fildll
and
pop
adc
in
ss
add
dec
xchg
sub
inc
push
mov
pop
scas
or
popl
outsl
out
jb
and
xor
dec
lcall
imull
in
or
push
push
sbb
pop
mov
call
out
jb
inc
mov
xor
jae
inc
jb
pop
pop
ficoml
xor
pop
rcrb
scas
fs
and
pushf
fiaddl
test
aaa
lock
jns
movsb
fsts
sbb
mov
dec
pop
scas
in
insb
pop
jl
shll
xchg
aam
xlat
dec
xchg
cmp
add
pop
jg
jg
mov
pop
ja
sub
cmpb
nop
xchg
push
xor
pop
sbb
imul
je
sbbb
mov
popa
outsl
add
and
and
sub
leave
add
push
cwtl
sbb
and
push
lock
adc
andl
push
xor
outsl
out
sarb
pop
or
andb
test
xchg
and
push
mov
outsl
cmp
idiv
or
fisubs
push
jb
daa
add
mov
sub
dec
pop
iret
add
cmpsb
lahf
mov
outsl
xchg
mov
dec
popa
jg
push
fdivrs
mov
mov
lret
mov
xor
sbb
inc
icebp
mov
sbb
cmp
ja
popa
testl
jmp
fdivrs
push
push
outsl
pop
pop
xor
jg
pop
enter
imul
sub
fsubs
push
or
ss
repz
push
push
mov
or
js
xchg
jo
andnps
popa
fisubrl
bound
jb
jmp
bound
lahf
xlat
or
xor
scas
enter
lock
pop
scas
pop
in
add
xlat
or
cmp
andb
arpl
in
arpl
mov
lds
arpl
testl
and
add
in
ds
scas
and
fs
mov
mov
imul
aaa
pop
ja
add
rorl
xchg
outsl
jecxz
or
addr16
and
fsubs
out
jnp
je
mov
dec
mov
dec
lahf
gs
mov
pop
mov
aad
and
cwtl
cmp
addr16
add
mov
in
rorb
dec
sub
inc
sub
data16
mov
sbb
outsl
lods
in
leave
add
ss
mov
push
pop
cmpsb
mov
ds
mov
ss
les
test
aaa
add
mov
adc
xchg
dec
sbb
insl
cmpsl
add
xchg
or
sbb
add
push
sbb
sahf
iret
in
jbe
or
push
out
aam
or
pop
leave
xchg
pop
add
movhps
setbe
pop
pop
adc
cmp
rorl
or
imul
dec
ja
cmpsl
aam
xchg
xor
stos
or
push
or
push
int3
jne
pushf
and
or
ss
in
push
fwait
mov
popa
outsl
add
push
dec
cmpsb
nop
or
dec
xchg
pop
mov
push
push
enter
add
cmpsb
mov
xchg
ja
push
cwtl
pop
add
cs
dec
push
push
mov
mov
out
jb
push
cwtl
add
cmp
stos
test
fs
pop
or
xchg
dec
enter
mov
aad
add
ffreep
mov
test
push
sub
daa
nop
daa
add
adc
jns
dec
add
and
test
imul
xlat
mov
sbb
jle
xor
jo
adcb
sti
push
pop
insb
push
xchg
imul
insb
inc
adc
or
or
mov
das
shlb
mov
ja
inc
in
ja
mov
outsl
lods
pop
add
and
xor
orl
mov
xlat
data16
ret
push
add
das
pop
dec
sahf
mov
pop
arpl
and
lds
in
daa
stc
int
loopne
jne
sbb
mov
add
dec
stc
cmp
mov
jns
ret
jp
jns
cmpsl
push
jo
mov
iret
repz
xor
sahf
out
cmp
stc
adc
das
mov
icebp
pop
jge
mov
repz
repz
out
sahf
out
lcall
cmp
sarl
cmp
mov
lock
cmpb
shr
or
repz
out
out
sbb
iret
ret
repz
jns
jge
mov
xchg
push
sbbl
movsb
out
ds
int3
out
dec
mov
int
mov
pop
adc
sahf
mov
repz
mov
int
imul
cmp
cmp
idivl
repz
repz
ret
dec
push
nop
out
lcall
lds
dec
repz
xchg
push
push
xor
xor
out
inc
mov
add
repz
push
xchg
xchg
mov
cmp
out
adc
repz
iret
out
pop
cwtl
push
cltd
xchg
cmc
repz
out
lcall
jns
iret
fstpl
pushf
pusha
cltd
adc
ss
dec
sahf
mov
lahf
out
lahf
cmp
lahf
loopne
mov
int
jns
mov
mov
cmp
das
movsb
int3
shld
out
cmp
fistl
cmpsb
push
lcall
loope
test
out
out
mov
push
lods
xor
ja
jmp
call
lcall
js
lods
imul
leave
add
pop
repz
out
into
add
lcall
loope
imul
adc
imul
mov
and
xlat
sahf
mov
subl
ss
sahf
out
jl
mov
in
jns
jge
shr
stc
xor
cmp
ds
outsl
rolb
into
xor
cmpsl
stc
xor
movsb
out
lds
sahf
out
test
imul
int
int
lahf
cmpsl
stc
dec
into
mov
rcrl
rcll
aad
xchg
adc
fsubrs
addr16
jns
pop
push
lock
add
pusha
jno
jmp
add
outsb
pop
leave
jae
xchg
mov
mov
shlb
in
jns
in
in
add
cmp
enter
and
dec
ja
or
pop
paddq
loop
inc
aas
pusha
and
cltd
rcrb
int3
push
mov
xchg
xchg
ss
cmp
movsb
sub
aaa
andps
mov
loope
jae
jg
push
out
or
iret
shlb
loop
test
dec
fstps
leave
mov
dec
cmp
pop
cld
dec
addb
adc
fs
jbe
xchg
cmpb
dec
xchg
jo
inc
pop
repnz
xor
ds
movsb
dec
mov
aad
or
pop
mov
mov
push
sarb
int
jbe
loopne
sbb
das
jmp
adc
inc
sarb
fs
ss
imulb
fs
xchg
idivb
mov
cld
dec
ss
and
and
pushf
mov
push
xor
push
pop
push
scas
xlat
rorl
push
cmp
push
jbe
fs
xor
jne
daa
je
mov
cmp
inc
fcomip
cld
push
dec
les
add
outsb
push
cmovle
cmp
add
lahf
and
cmpsl
in
inc
xor
or
or
pop
cmp
shrb
sbb
adc
xlat
pushf
inc
xor
sub
add
test
adc
jmp
sahf
push
pop
push
and
fmul
xor
sbb
sarl
mov
movsb
adc
and
fimuls
mov
pushf
sbb
js
mov
enter
in
adc
jbe
and
jns
dec
or
cld
js
leave
adcl
dec
fs
jns
jns
scas
mov
in
enter
sub
push
jnp
jl
rclb
inc
pop
cmpsb
jp
addr16
xchg
int
in
jns
xchg
out
repz
xchg
jp
jnp
xchg
dec
ficompl
mov
lods
jbe
fwait
in
jp
push
mov
jns
sub
inc
sbb
xor
sub
xchg
movsb
xchg
push
mov
jnp
jl
sbb
push
inc
outsl
lea
addr16
xchg
xlat
mov
add
test
sarb
fldcw
out
jl
inc
or
sahf
add
and
pushf
dec
in
outsb
scas
push
mov
enter
mov
pushf
in
mov
or
popf
inc
mov
jge
jl
push
jns
enter
jl
push
add
jns
out
addl
mov
xor
xlat
inc
cmp
and
je
in
aam
and
test
jge
adc
jns
jle
jle
jle
jbe
daa
or
adc
test
mov
push
add
pop
pop
push
in
jge
xchg
popf
pushf
pushf
pop
movsb
lods
mov
cmp
out
add
add
push
leave
leave
inc
repnz
std
sbb
jb
add
jle
jle
pop
and
jl
jle
jle
daa
daa
and
pusha
push
rorb
lods
xchg
cmpsl
fwait
pop
mov
inc
repnz
pop
and
mov
push
add
outsl
adc
mov
jg
xchg
addr16
jg
add
push
leave
and
xchg
and
in
pop
gs
push
adc
inc
xlat
addl
repnz
inc
dec
sahf
fistl
xchg
mov
inc
mov
faddl
mov
or
es
push
daa
sbb
xchg
add
sti
iret
lea
adcb
jg
or
loopne
inc
jge
hlt
pop
repnz
lds
adcb
inc
jmp
andl
daa
dec
leave
leave
add
xchg
enter
pushf
call
sub
xchg
mov
leave
addb
repnz
loop
and
add
or
cmp
fwait
and
push
daa
xor
inc
cmpsl
dec
jb
subl
test
andl
add
sbbl
push
or
cmpb
xor
adc
sbb
repz
repz
or
repz
cmovs
push
adc
iret
repz
imul
iret
repz
ds
pop
scas
sbb
mov
xchg
jl
test
push
add
leave
mov
inc
pushf
mov
mov
out
in
push
stc
fmull
daa
filds
sbb
lahf
xchg
push
xchg
sub
cwtl
xchg
fsubr
into
mov
mov
test
xchg
dec
leave
orl
xchg
test
ss
pushf
in
test
xchg
fiadds
hlt
cmp
cmpsl
inc
test
test
pop
test
insb
leave
jae
dec
xchg
enter
pop
mov
sahf
add
mov
inc
filds
out
adc
cmpsl
pop
add
imul
hlt
ljmp
cltd
dec
push
bnd
mov
pop
push
add
incl
adc
ss
aas
ss
mov
decl
pop
adc
test
mov
dec
cs
xchg
dec
mov
xchg
pop
leave
fmull
lahf
push
xchg
rorl
mov
aad
push
setns
inc
js
push
dec
cmpsb
addb
shlb
das
add
adc
aad
jns
mov
fwait
dec
dec
jb
xchg
mov
in
and
mov
daa
push
mov
cmp
in
and
nop
mov
xchg
pop
mov
pop
pop
mov
mov
int3
pop
pop
xor
add
inc
cmpl
mov
xchg
stos
xchg
int
and
push
add
adc
fisttps
mov
jge
shlb
inc
testl
pushf
out
push
or
daa
cmp
xchg
pushf
xchg
add
in
dec
outsb
scas
xchg
xchg
mov
lea
das
aas
loop
mov
mov
das
das
das
das
mov
mov
das
rorl
mov
das
das
das
loope
jmp
mov
cs
add
jb
jb
push
or
jb
or
or
jb
jb
push
add
jb
add
add
scas
mov
sub
aaa
mov
push
hlt
pop
mov
popl
push
add
jb
fildl
das
xchg
out
jmp
add
push
mov
daa
mov
sbb
dec
rsqrtps
nop
pushf
loope
test
jne
jge
xchg
test
lea
movsl
push
loopne
daa
iret
push
lods
mov
or
or
or
call
add
adc
or
sbb
adc
sub
in
in
cmp
dec
or
out
out
imul
or
out
popf
jae
jnp
pop
push
cmovle
push
and
mov
lea
push
mov
into
cmp
mov
push
and
pop
or
lcall
cmp
xchg
inc
das
sahf
mov
inc
scas
mov
insl
and
pop
xchg
loope
cli
mov
lea
lea
adc
sbb
repz
xor
or
or
adc
das
js
cmpb
xchg
lea
jae
cmp
outsb
daa
pop
pxor
jg
inc
repnz
adc
inc
das
and
add
cmp
repz
add
repz
pop
or
jge
iret
repz
mov
xchg
or
in
repz
nop
cs
fcomp
push
scas
in
mov
and
fucomi
ss
xor
cmp
inc
pop
out
jns
dec
push
push
pop
or
mov
fs
pcmpeqb
inc
mov
xchg
aas
flds
cs
xchg
xchg
push
filds
in
adc
repnz
pushf
iret
add
jb
inc
jb
ljmp
cli
add
leave
xor
ret
add
mov
sub
jg
ss
scas
add
xchg
test
mov
pop
nop
push
nop
outsb
adc
dec
mov
fimuls
dec
mov
nop
pushf
jmp
cltd
pop
fistl
nop
leave
mov
push
xchg
outsb
mov
insl
push
xor
lock
jns
imul
xchg
jns
addl
mov
jae
sbb
xchg
clc
push
addr16
xchg
xchg
and
pop
sub
cmp
enter
xchg
pusha
xchg
imul
xchg
adcl
mov
daa
daa
daa
enter
andb
daa
hlt
decl
xchg
je
mov
and
jb
loopne
cltd
cmovle
mov
xchg
outsl
xchg
jp
test
xchg
xchg
nop
xchg
fwait
xchg
cmpsb
adc
or
pop
fcmovu
cmp
xchg
xchg
loop
add
decl
cmp
xchg
add
leave
inc
pop
add
mov
dec
cs
stc
addr16
sbb
fwait
mov
shll
inc
push
pusha
xchg
movb
xchg
out
xchg
cmpsb
pop
jo
iret
cwtl
jns
leave
aam
mov
ss
fdivs
fwait
push
jg
arpl
or
fs
add
adc
sbb
or
jns
cmpsl
fwait
ud2
cmp
nop
cmp
cmp
xchg
outsl
adc
imull
mov
jns
pop
leave
lods
scas
iret
add
in
in
rcr
loop
dec
je
adc
jg
xchg
or
and
xor
mov
insb
xchg
pop
mov
dec
aaa
ja
mov
popf
xchg
out
pushf
movsl
mov
add
add
in
fsubp
jmp
sahf
scas
sbb
scas
push
add
xor
add
pop
aaa
jns
push
scas
inc
cwtl
xchg
addr16
dec
cwtl
push
cwtl
fisttps
push
jne
test
dec
sahf
out
lea
sbb
lods
mov
mov
jns
cwtl
int
aad
fstpl
in
ud2
or
daa
daa
daa
daa
or
push
add
add
add
cmp
repz
sbb
sbb
jnp
out
sbb
cltd
sbb
fwait
cmp
adc
jns
xchg
xchg
and
and
sahf
out
inc
es
dec
cltd
sub
sahf
jo
mov
cmp
lods
jmp
dec
mov
outsl
aad
add
fsubp
in
fstpl
mov
cmp
or
sbb
adc
lcall
xor
lcall
mov
pop
push
fcmovne
xchg
movq
jae
jnp
dec
mov
popl
add
scas
xchg
rcr
xlat
loop
leave
jae
jns
clc
iret
or
push
fwait
das
in
fwait
push
add
inc
fwait
or
outsl
enter
inc
repnz
lahf
or
loope
icebp
push
mov
pusha
mov
jp
daa
add
and
fwait
mov
mov
fwait
lds
int
aad
sbb
pop
clc
enter
lcall
or
pushf
push
xlat
frstor
scas
adc
dec
mov
test
daa
pop
jg
add
out
push
pop
pushf
inc
jb
dec
push
nop
mov
xchg
out
mov
aam
mov
mov
push
repnz
hlt
pushf
add
cmp
push
add
cmp
push
lahf
cmovbe
popf
je
jl
pushf
pushf
fmull
test
iret
pushf
or
sahf
out
mov
jns
xchg
int3
int3
adc
adc
xor
xchg
fsub
popf
scas
adc
movsb
mov
sahf
and
outsb
wrmsr
add
add
jno
loope
push
xchg
ja
cmc
leave
pop
mov
push
daa
mov
add
js
repz
sbbb
add
push
scas
cwtl
sahf
call
sub
mov
dec
cs
fidivs
lahf
xchg
pop
and
pushf
xor
test
lahf
pop
push
dec
fdivp
xchg
add
push
push
jne
mov
mov
repnz
test
mov
add
stc
mov
cmpsb
mov
aam
fcompl
jmp
in
in
lahf
adcl
pop
add
rcll
or
xor
xchg
mov
test
mov
enter
push
dec
sahf
out
add
jbe
leave
mov
repnz
mov
mov
mov
sarb
fsubs
daa
adc
test
jns
enter
mov
and
add
xor
cmp
pop
insl
xchg
mov
out
into
popf
addr16
paddd
pop
xchg
pop
leave
cmp
cwtl
imulb
lods
iret
daa
mov
mov
pop
dec
stc
inc
mov
enter
out
fmuls
loopne
addr16
loop
repz
mov
enter
and
cmp
inc
ds
or
push
stos
inc
cmp
cmp
mov
lea
push
add
adc
addr16
stos
ret
clc
in
xchg
dec
stos
stos
push
sub
mov
in
and
mov
ljmp
or
repz
push
push
or
or
cmp
repz
or
dec
iret
push
movd
imul
mov
and
lods
push
int3
loop
push
enter
inc
into
lock
mov
mov
xchg
movsb
shld
pop
push
repnz
push
sub
movsb
inc
int3
in
jecxz
and
enter
jb
cmp
js
fsubrs
jo
das
pusha
movsb
outsb
movsb
jl
daa
daa
daa
test
ret
movsb
push
or
mov
movsb
shlb
daa
daa
pop
dec
out
out
idiv
push
andb
movsl
sbb
in
lods
push
daa
add
push
pushf
hlt
outsl
sub
xchg
adc
add
shll
push
pop
pop
stos
push
jb
les
xor
subb
sub
testl
repnz
movsl
mov
jb
jb
ret
ret
ret
jl
sahf
ja
mov
roll
or
jns
xor
mov
cltd
sbb
push
xor
add
mov
cmpsl
push
lods
jb
popf
mov
xchg
push
jo
das
add
dec
lret
ja
cmpsb
pop
fildl
inc
and
jg
ss
ltr
ds
dec
inc
cmpsl
push
cmpsl
bound
out
insl
cmpsl
js
andl
cmpsl
pop
or
in
rcl
pop
push
lahf
fucomi
repnz
fstps
fldenv
sahf
dec
and
add
lahf
loopne,pt
cmpsl
adc
sbb
jg
xor
insb
push
inc
iret
in
jbe
dec
push
maxps
addr16
outsl
push
ja
add
repnz
or
jg
xchg
mov
mov
rsm
xor
mov
aad
mov
clc
iret
add
nopl
fwait
idivb
pop
packuswb
add
rcrl
ja
xchg
mov
xchg
out
xor
loope
add
mov
aaa
push
daa
push
stos
leave
inc
fwait
xchg
ja
inc
out
adc
pop
push
push
add
insb
popf
xchg
push
pop
xlat
push
adc
fucom
push
jne
add
cwtl
sub
mov
cwtl
addr16
fmull
out
mov
pop
pcmpgtb
jg
stos
fnsave
jb
stos
rcrb
sysret
pop
loop
and
fsubrs
dec
push
nop
insb
dec
mov
cli
mov
xchg
inc
mov
add
push
stos
xchg
add
jnp
sbb
mov
insb
outsb
in
ret
mov
dec
sahf
ja
das
pop
xlat
popa
push
add
jns
leave
repz
add
jne
push
cmp
stos
test
and
cmp
mov
and
js
pop
dec
xlat
dec
lock
lahf
cmp
lahf
add
mov
repz
dec
and
jmp
repz
add
dec
jns
fidivs
push
into
insl
or
mov
loope
xchg
xchg
mov
cmpsl
into
call
rcr
cwtl
je
push
scas
lods
xchg
xchg
xchg
scas
aas
fsubrs
in
outsb
xchg
lods
adc
sbb
and
sahf
out
adc
cmp
dec
jecxz
in
dec
lods
iret
leave
adc
or
mov
hlt
scas
daa
adc
jb
add
mov
and
dec
mov
jae
ret
add
in
outsl
dec
sahf
fistl
cld
xchg
mov
scas
outsl
daa
scas
das
scas
fstp
in
aaa
scas
aas
das
cmova
test
push
scas
js
in
mov
icebp
jle
pop
push
jg
scas
jno
jl
pop
pusha
mov
dec
lcall
into
pop
push
mov
mov
xor
fmull
dec
movsl
lods
mov
add
into
inc
repnz
jmp
jae
stc
ja
cmp
push
daa
cmp
sbb
push
and
js
pop
leave
rep
push
inc
outsl
dec
push
add
jns
fistpl
js
addb
sidtl
nop
pop
jo
cwtl
mov
pop
add
out
jne
lret
pop
lsl
adc
xor
pop
mov
wrmsr
push
dec
jb
mov
cmp
cltd
sub
mov
ja
cs
out
les
jl
mov
xchg
cmp
lcall
mov
pop
fxch
or
cmp
mov
sahf
out
jns
mov
sbb
and
sahf
out
add
jno
rorb
add
or
cmp
and
pop
mov
iret
jae
cmp
outsl
ja
jg
daa
daa
daa
xchg
cmp
repz
or
loop
repz
mov
and
and
leave
in
repnz
add
in
mov
sub
xchg
sahf
xor
dec
xchg
out
outsb
pcmpgtd
outsb
push
push
jbe
outsb
repnz
jle
mov
xchg
or
mov
daa
mov
pand
cld
add
xchg
xchg
xchg
mov
and
xchg
push
jo
xchg
enter
stos
enter
out
iret
leave
and
adc
daa
mov
cmp
pusha
jle
jns
iret
xrelease
mov
cmc
in
cmpsb
mov
and
and
mov
mov
xor
loopne
mov
jns
sbb
mov
mov
ficoml
sbb
dec
dec
dec
push
sbb
jb
mov
mov
daa
pop
leave
jae
push
rcr
daa
daa
daa
daa
jecxz
decl
mov
mov
pop
mov
inc
mov
mov
fmulp
enter
mov
jg
push
jns
out
xchg
jns
out
lahf
or
popf
scas
pop
mov
mov
hlt
repnz
mov
mov
adc
rcrl
repnz
fs
add
add
pop
or
adc
cmovle
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
stc
pop
js
mov
fidivs
jns
icebp
mov
mov
mov
sahf
out
pop
push
adc
pop
and
jns
out
and
and
sahf
out
sahf
and
and
sahf
out
daa
pusha
sub
rorl
out
sub
sub
pop
iret
leave
xchg
mov
sarb
jno
pop
aam
inc
jle
leave
fmull
das
in
in
mov
push
xchg
xchg
xchg
scas
movaps
ja
shrb
sgdtl
pop
ficomps
iret
enter
rcl
sub
in
imul
cmp
andl
add
in
jbe
ror
ljmp
in
adc
popf
pop
and
add
push
push
repnz
lds
jns
leave
xchg
mov
jns
out
roll
xlat
iret
jae
cmp
pop
in
clc
or
sahf
out
xchg
mov
sbb
pushf
fmull
pop
das
cmp
pushf
cmp
leave
inc
push
adc
cmp
leave
repz
jle
mov
leave
repz
xchg
sbb
repz
sbb
pushf
cmp
pop
loope
sahf
cmp
in
and
add
and
lds
dec
pop
mov
in
mov
js
jb
jb
xchg
stos
ret
fdivrl
sbb
cmc
push
mov
cmp
dec
push
pop
bswap
cmp
adc
dec
adc
dec
outsb
daa
test
lea
dec
out
mov
push
idivb
cmp
cmp
sub
xchg
out
jns
xchg
mov
xchg
out
jns
lds
jecxz
out
fiaddl
mov
adc
cmp
sbb
and
xor
aaa
das
shrb
sbb
mov
xchg
push
cmp
mov
xcrypt-ctr
cmpsl
sahf
out
jns
add
scas
push
mov
out
jns
mov
out
in
or
fistps
or
repz
fwait
femms
ds
maskmovq
imull
daa
iret
adc
pop
rorb
ficoms
push
adc
lar
sbb
sbb
sub
into
aaa
mov
pop
inc
sbb
pusha
leave
sbb
bnd
pop
into
add
push
or
push
pop
shlb
cmp
mov
cmp
stc
call
fisttpll
ja
xchg
add
int
aad
push
or
mov
shrl
dec
ds
sbb
jmp
shll
push
push
and
xchg
mov
lock
xchg
out
cmp
push
mov
xchg
mov
mov
xchg
loope
icebp
ja
fs
jp
adc
fisttps
and
repz
sub
fmull
pop
xchg
maxps
or
jp
xchg
lcall
out
mov
mov
jae
lret
int3
cmp
mov
in
cmc
ja
add
ret
lahf
sub
shrd
decl
cs
xchg
ret
cmpsl
imul
dec
dec
jnp
xchg
int
in
and
xchg
pushf
call
ret
int
into
in
test
jmp
pop
xor
scas
les
adc
daa
iret
add
sub
inc
out
stos
dec
mov
jbe
xor
les
fildll
outsb
mov
je
jl
test
mov
xchg
leave
inc
incb
lcall
outsb
pop
mov
xlat
pop
leave
jae
neg
xchg
add
enter
lds
lds
lds
in
in
cmp
push
xchg
pop
cmpsl
mov
ror
push
ds
and
xchg
xchg
nop
cwtl
mov
mov
iret
dec
ret
jg
push
imul
lds
or
out
add
mov
push
addr16
fs
mov
xor
dec
leave
repz
push
xchg
popa
mov
push
xchg
mov
lods
cmpsl
mov
cmp
daa
mov
rorl
gs
sahf
cmpsl
add
in
in
hlt
inc
or
adc
in
sub
movl
jmp
insl
das
das
das
das
js
add
cltd
das
das
das
das
movsb
scas
mov
das
das
das
rol
fcmovnb
out
icebp
in
fldt
cld
pop
nopl
in
in
sbb
sbb
in
in
push
adc
loop
cs
enter
sahf
out
cmp
xor
xor
out
dec
xor
out
sahf
out
push
jne
sahf
out
sahf
xorb
cmp
repz
in
daa
iret
cmp
int
ds
dec
sahf
out
inc
out
cmovb
mov
inc
add
nop
jns
out
and
cmp
cmp
push
pop
pop
iret
jae
jb
jb
dec
mov
in
sqrtps
in
mov
leave
call
pop
fcom
std
leave
fildl
pushf
iret
or
adc
push
pop
nopl
repnz
into
sub
xor
aas
lret
inc
mov
push
lret
cmp
enter
lret
mov
cmp
lret
iret
outsl
xchg
lret
iret
lods
lret
mov
lret
into
lret
sahf
out
push
adc
mov
cli
lret
movups
sbb
jns
out
sbb
es
sahf
out
sahf
sbb
push
cmp
in
and
push
and
cmp
repz
mov
das
stos
sub
mov
shrb
shl
cmp
psraw
in
das
into
in
ss
test
sbb
mov
xor
cmp
inc
pop
cmp
iret
jae
cmp
cmp
iret
repz
cmp
jnp
xchg
pushf
fcompl
cmpsl
mov
mov
cmp
roll
fmulp
ljmp
pop
int
mov
push
add
icebp
jbe
aaa
aas
cmova
iret
dec
int
cmpsb
adc
int
fistps
orb
jns
xchg
add
add
dec
stos
iret
or
pushl
inc
cmpsl
mov
daa
sbb
daa
inc
add
call
cwtl
and
push
bnd
adcl
jb
jb
sub
cmp
addr16
or
xlat
mov
into
ljmp
jae
jns
daa
adc
jnp
mov
add
xchg
fwait
into
lahf
call
es
outsb
daa
daa
daa
fsubp
out
mov
enter
push
dec
fcoms
iret
dec
sahf
cmpsl
mov
xor
xchg
fisttps
mov
iret
dec
rcpps
repz
repz
or
je
outsb
daa
iret
or
pop
xchg
mov
stos
mov
adc
leave
mov
int3
pmovmskb
cs
in
push
clc
add
push
sbb
cmp
jns
sbb
sbb
and
jmp
nopl
dec
sahf
out
cmp
push
pop
xchg
fcmovne
repz
and
in
in
mov
outsl
xchg
push
daa
popf
test
stos
mov
imull
daa
fdivrs
xor
shlb
mov
rcl
dec
xchg
out
add
sub
mov
aad
push
leave
repz
pushf
mov
jns
stos
push
push
mov
rorl
or
das
das
das
xlat
shl
shr
sar
mov
setle
rorb
sarb
mov
push
adc
jbe
cmp
push
sbb
fucom
jns
movhpd
aaa
jns
jno
push
jl
jg
ja
mov
push
and
mov
and
cmp
repz
sub
sub
jns
ljmp
lcall
or
sub
fildl
nop
fimull
fsubrl
cmpsl
js
rcrl
sarl
pop
dec
popf
cmp
repz
push
sahf
out
pcmpeqw
orb
jns
adc
add
fdivrl
mov
into
mov
ftst
out
push
add
cli
add
sbb
jmp
pop
sysret
pop
das
das
aas
bound
aam
cmp
inc
aam
aam
iret
repz
push
adc
jae
leave
shl
adc
repz
push
add
mov
outsb
mov
fisubrs
aam
fimuls
out
or
xchg
jl
fisttpll
aad
aad
xchg
out
sbb
add
jns
ja
sub
push
push
cmp
cmp
fucom
inc
or
repz
pushf
push
pop
or
popf
cmp
ja
jg
cmp
xchg
xchg
repz
jbe
lahf
scas
cs
mov
das
aas
loopne
mov
aad
aad
repz
insl
xchg
nopl
xchg
inc
jbe
scas
sub
out
inc
ds
aas
push
push
or
jns
xchg
pusha
imul
sbbl
or
xchg
cpuid
pop
lods
pushf
pushf
pushf
pushf
mov
cmp
repz
adc
mov
xlat
sahf
out
xchg
xlat
push
sbb
adc
dec
cmp
push
inc
inc
and
and
and
cmp
jae
and
iret
xrelease
xchg
lahf
sub
iret
jae
stos
mov
ror
sahf
out
cs
mov
xor
fmuls
jns
popf
idivl
add
fdivrs
mov
dec
cvtps2pd
pushl
pop
shll
pop
stos
push
lret
adc
movsb
add
arpl
cmpsl
mov
xor
cmp
cmp
cmp
push
push
pop
push
ds
cmp
aas
and
pop
inc
test
aaa
outsl
cmp
pusha
or
cmp
push
add
sbb
jns
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
adc
imul
sbb
xor
sub
sbb
cmp
repz
cld
call
cmp
repz
ror
enter
iret
sarb
out
lods
movsb
cwtl
nop
mov
cmp
cmp
pop
iret
repz
push
inc
inc
cmp
sbb
push
clc
cmp
or
push
nop
inc
fidivl
xor
adc
in
test
and
sbb
std
inc
movsb
cmp
push
jne
addb
adc
das
clc
test
movsb
add
enter
cmpsb
fisttps
mov
cld
mov
jle
test
shll
cltd
sbb
mov
idiv
jae
inc
mov
mov
in
call
mov
adc
push
ficompl
mov
inc
mov
xchg
xor
fcomp
loopne
jb
jle
testb
inc
inc
mov
ljmp
push
in
or
es
cmpsl
inc
and
push
clc
mov
cli
inc
aaa
push
adc
pop
xlat
incl
xchg
mov
fsubrs
pop
das
bound
add
add
sahf
negl
mov
or
or
out
adc
adc
cmp
repz
adc
inc
cmpsl
stc
cmp
sbb
in
sbb
sbb
push
cmp
out
sub
enter
imul
cwtl
jmp
clc
ljmp
jns
jp
push
mov
sbb
push
mov
rcrl
jecxz
aaa
rorb
into
test
xchg
push
add
pop
and
dec
in
inc
pop
sti
jno
sub
js
scas
adcb
test
add
lahf
lcall
jo
sahf
push
push
push
push
mov
inc
dec
or
adc
js
xor
pop
aas
pop
push
xor
out
aaa
jno
pop
and
mov
mov
mov
pop
jg
out
mov
loopne,pn
inc
sub
push
arpl
imul
sub
inc
daa
mov
es
repz
push
xor
cmp
sbb
sbb
cmp
add
aas
cmp
jns
lock
and
push
and
outsb
sbb
cld
lock
out
idivl
adc
fdivrl
out
and
push
or
or
sahf
out
out
adc
in
enter
jnp
push
rcrb
push
iret
repz
mov
test
movsb
and
repz
and
and
xrelease
pushf
or
clc
mov
je
orb
inc
out
xor
inc
stos
pushl
fwait
dec
jg
cmp
xorl
jg
cmp
jmp
cmp
pop
js
mov
imul
add
dec
push
add
insl
add
xchg
mov
jae
ljmp
insb
jnp
pop
push
cmpsl
add
dec
inc
pop
jl
dec
push
enter
inc
pushf
or
jl
xchg
mov
adc
xchg
cwtl
push
and
sbb
pop
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
and
add
addr16
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
clc
incl
gs
std
orl
pop
ficomps
frstor
jbe
incl
pop
test
dec
call
pushf
pushf
push
jns
push
dec
jnp
pushl
insl
test
xor
ja
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
outsl
mov
xor
filds
or
shrl
push
sar
jg
push
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
call
ljmp
mov
or
and
or
adc
decl
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pushl
mov
call
xor
ljmp
int3
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
jmp
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
cmc
decl
mov
aam
movsl
fisttps
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
cli
mov
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fbld
fbld
out
mov
jns
imul
andl
shrb
rolb
ja
int3
add
mov
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
scas
fdivrp
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
incl
adc
mov
jnp
sbb
xchg
or
out
fdivrl
decl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
mov
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
sub
push
pusha
rorb
imul
scas
fcompl
fstps
add
or
inc
xchg
aaa
pusha
mov
test
jg
mov
jmp
mov
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
cli
pushl
add
push
sub
mov
or
sbb
add
sub
inc
pop
jl
je
test
jns
pop
insb
fs
push
jmp
mov
pop
add
cmp
push
iret
repz
xlat
fcomp
fcmovu
fdivrl
repz
fsubp
jecxz
iret
repz
in
jmp
repz
in
repz
cmc
repz
repz
clc
stc
cli
adc
cld
pop
adc
add
inc
jecxz
dec
adc
test
xchg
or
adc
cmp
mov
push
inc
jmp
jbe
xchg
xchg
jbe
vfrczsd
icebp
inc
insl
bound
inc
lods
inc
xchg
ss
popa
je
inc
inc
popa
pop
int
in
fistpll
and
cmp
pop
inc
jno
xor
mov
inc
cmp
pop
bound
push
aaa
aaa
cmp
popa
arpl
cmp
arpl
insl
adc
xor
bound
in
sub
popa
push
inc
jbe
pop
insb
imul
es
jg
insb
imul
dec
inc
mov
add
push
inc
mov
add
dec
sbb
dec
shll
aad
or
fs
push
mov
gs
je
ss
inc
rol
xchg
jbe
lcall
xchg
fs
sarb
gs
or
mov
dec
test
inc
dec
arpl
lret
mov
popa
jns
jne
jno
push
dec
insb
stc
popa
sub
adcl
aaa
aas
inc
push
sti
or
push
push
aas
add
add
adcb
and
add
daa
xchg
push
aas
inc
inc
cmpb
xlat
inc
aaa
sbb
fs
sbb
xchg
xchg
mov
pop
inc
je
jo
jbe
out
inc
inc
inc
add
ds
mov
scas
add
cli
rcl
push
iret
int
push
dec
or
xor
dec
xchg
pusha
stos
sbb
cmp
ja
outsb
jne
aad
movsb
andl
dec
jge
addr16
mov
xor
xor
or
mov
test
add
addr16
clc
xchg
cmp
fidivrl
data16
or
ds
inc
cmp
test
adc
cltd
cli
cltd
dec
cld
push
rorl
push
add
outsl
adc
mov
push
lcall
cmp
mov
pop
mov
xlat
mov
and
xchg
loopne
scas
or
inc
jb
js
push
mov
dec
popa
jo
push
nop
and
cmpsl
lahf
push
outsl
outsl
test
bound
push
jno
and
push
sti
mov
in
pop
or
dec
pop
in
nop
push
pop
or
test
or
out
arpl
cmp
adc
mov
pop
jo
push
mov
push
outsl
insb
jns
push
add
inc
das
inc
jb
push
notl
mov
je
inc
outsl
arpl
adc
mov
in
daa
sub
inc
push
bound
ja
cli
ss
inc
jbe
xor
imul
jg
push
dec
and
cmp
xor
pop
sahf
pop
shll
das
xor
int
add
and
repz
push
and
inc
xchg
xchg
inc
ror
dec
lods
shlb
xor
je
lret
dec
sahf
dec
pop
pop
popa
xor
adc
push
cwtl
sbb
sbb
jo
outsb
rclb
shl
inc
sub
inc
dec
pop
bound
jle
push
jns
arpl
je
scas
xor
inc
pusha
in
popf
mov
inc
jne
test
pop
inc
add
ficoml
fnstcw
sub
daa
sub
and
add
add
add
add
cld
jmp
cmova
dec
add
pop
fdivr
loopne
in
ds
adc
dec
add
add
fstpt
dec
add
add
in
mov
add
pop
push
or
or
or
or
or
adc
mov
mov
adc
push
adc
push
add
pop
dec
mov
adc
adc
adc
add
data16
or
or
rolb
fwait
std
out
nop
add
add
add
adc
out
add
push
add
movsl
outsb
jno
mov
rclb
jb
imul
lcall
ds
xor
adc
pop
and
xor
inc
fwait
add
pushl
lock
bound
js
lock
mov
mov
shrb
xchg
addl
inc
or
xorl
adc
jne
pusha
add
addr16
add
sbb
pusha
xor
into
add
adc
shlb
pop
scas
cmp
adc
jle
int
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
mov
xorb
scas
fiaddl
or
xchg
pusha
and
mov
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
fs
std
ljmp
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
push
adc
dec
mov
cmp
sub
add
ljmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
push
roll
add
xchg
or
call
les
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
call
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
cwtl
jmp
clc
cmpl
call
repnz
addr16
out
or
push
push
xchg
add
repnz
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
mov
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
jmp
push
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jg
idiv
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
call
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
mov
std
jmp
leave
mov
jp
push
out
or
push
sahf
pop
clc
push
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
lock
jmp
sbb
add
pop
clc
fbstp
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
jg
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
jg
lcall
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
fwait
in
imul
in
add
inc
adc
loope
fisttpll
out
aas
insl
ror
sar
cli
push
push
push
idivl
cmp
sub
pushl
mov
jg
je,pn
sub
jg
imul
mov
mov
incl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sar
scas
cmpsb
orb
mov
cmp
mov
das
jmp
xchg
pop
clc
pop
hlt
sub
jg
push
add
lea
jg
gs
std
xorb
cmpsl
jmp
imul
outsl
adc
ret
das
pop
pop
pop
shlb
push
mov
sbbl
jno
or
sarb
std
lcall
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
lcall
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
incl
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
in
sbbb
lahf
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
call
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
adc
adc
push
jo
pusha
imul
add
mov
cmp
aam
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
aaa
and
jae
shrb
shlb
out
aas
stc
incl
mov
xchg
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
insl
rol
adc
and
lahf
fmull
enter
testb
mov
mov
pop
mov
sub
in
pop
decl
mov
dec
incb
fisubrl
aas
mov
or
mov
sbb
inc
or
pop
jg
add
push
mov
jg
mov
aad
test
mov
mov
mov
push
jbe
push
sbb
stos
icebp
pop
incb
addl
jno
adc
push
inc
jecxz
sbb
sarl
idivl
sar
sbb
jbe
mov
imul
dec
iret
rcr
push
in
aas
mov
fsubrl
rolb
and
aas
imul
add
push
sbb
jne
lock
aam
and
mov
adc
inc
aas
push
rcrl
iret
lock
rolb
pop
inc
jb
fistpl
adc
call
jno
ljmp
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
sbb
fistps
lds
fidivrl
jg
stos
pop
pop
call
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cmp
inc
and
mov
in
stc
mov
lahf
mov
pop
cld
outsl
int3
push
sbb
pop
inc
sti
incl
jle
xchg
popa
out
out
outsl
xchg
inc
mov
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
lcall
jp
adc
lahf
mov
or
out
lcall
aas
xor
shl
cld
mov
adc
stos
pop
jg
pop
sar
jg
outsl
sub
sarb
adc
xor
pop
rcr
dec
mov
fidivrl
sti
jmp
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
call
and
imul
or
inc
pop
xor
rorb
and
add
ljmp
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
outsl
lock
push
push
paddsw
pop
stc
out
mov
clc
push
std
mov
cmp
or
mov
ljmp
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
decb
mov
dec
ss
lods
movsb
incl
pslld
pushf
aad
call
imul
jl
call
xchg
imul
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
incl
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cltd
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
cld
testl
sbb
scas
stc
adc
insl
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
incb
into
out
icebp
mov
loope
mov
cmpsl
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
decb
adc
cmc
decb
dec
adc
call
imul
popf
iret
bswap
and
or
mov
adc
add
push
pop
aaa
std
fistps
fisubs
adc
inc
sbb
mov
mov
aas
icebp
ret
ror
ja
or
sbb
aaa
inc
adc
mov
mov
sub
mov
pop
clc
loope
push
shr
ja
and
dec
add
arpl
mov
mov
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
iret
incl
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
jg
call
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
add
adc
add
mov
outsl
xchg
push
imul
pop
stc
push
dec
out
fstpt
mov
jo
in
movsb
enter
aas
adc
out
daa
push
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
mov
fsubrl
dec
add
mov
add
push
sti
pop
inc
dec
push
mov
sub
scas
xchg
push
cmp
int3
pop
iret
incl
add
repnz
mov
stc
or
shll
das
or
idiv
ljmp
enter
push
in
jl
mov
hlt
addr16
pop
mov
add
mov
sahf
js
add
pusha
sbb
xchg
or
mov
movsl
sti
mov
test
lcall
xchg
shlb
xor
and
sbb
jg
or
adc
incl
fcmove
loop
inc
js
or
aaa
mov
xchg
inc
divb
into
ss
lcall
xchg
jmp
and
repnz
and
sbb
pop
pop
ds
enter
mov
jmp
rorl
imul
and
dec
inc
pop
aaa
add
pop
xor
fidivs
out
or
cmpsb
sub
xor
inc
adc
leave
mov
sbb
xor
add
sub
ljmp
mov
sarl
lods
adcl
sub
sahf
xchg
fiadds
or
lods
pushl
jae
dec
xlat
jo
scas
add
sub
and
int3
xor
add
push
inc
adc
or
cli
fwait
sbb
sbb
mov
bnd
dec
xor
sbbl
ljmp
es
push
xlat
nop
stos
push
mov
andl
push
out
cmp
adc
les
adc
dec
and
mov
xor
daa
ss
hlt
jge
int
adc
jmp
adc
sub
pusha
xor
mul
dec
aas
ss
iret
push
movlps
mov
inc
pop
test
cmp
sahf
test
ljmp
and
call
fdivr
movb
cmp
push
into
xchg
cmp
ljmp
cmp
sbb
pop
jnp
mov
aam
fcmovne
adc
pop
subw
jb
push
adc
stc
add
inc
shl
ficoml
mov
dec
jne
jg
push
fldenv
aaa
push
movsl
inc
js
or
inc
orb
fdivs
outsl
jg
push
jns
lods
jecxz
and
dec
rcrb
ss
sbb
adc
jl
loopne
ljmp
outsl
mov
outsl
mov
cld
out
pop
pop
xor
outsb
bound
adc
int3
test
loopne
push
fisttps
mov
sarl
adc
adc
pop
insl
adc
mov
lcall
sbb
adc
dec
mov
je
in
inc
and
ficomps
incl
xor
inc
popa
xchg
mov
and
fisttpll
iret
sahf
mov
addl
loope
bound
jno
filds
dec
pop
rcll
add
or
push
adc
cmpsb
cwtl
cmc
ds
lcall
mov
pop
xchg
mov
cmp
out
ficoml
insb
xchg
incl
mov
jecxz
test
ret
xor
adc
and
adc
xor
dec
push
jns
dec
sbb
mov
dec
dec
add
pushf
pop
xchg
xchg
mov
dec
pop
cltd
push
decl
inc
aad
mov
jnp
mov
xchg
aaa
mov
cltd
xor
add
push
inc
addr16
and
fwait
or
rcrl
out
xchg
sbbb
mov
call
push
xor
push
dec
push
and
outsl
lahf
xchg
mov
jae
out
imul
jbe
pop
bound
mov
clc
cmp
mov
movsl
cmp
outsb
shrb
mov
dec
clc
inc
push
dec
inc
cli
xchg
fwait
cmp
popa
push
jle,pt
sbb
dec
inc
sahf
repz
xor
mov
jno
lock
inc
push
outsl
mov
rorl
push
outsl
rorb
mov
call
jnp
jl
cmp
fstl
mov
ja
ja
in
dec
mov
mov
aaa
inc
subb
enter
jg
xchg
add
imul
out
decl
ljmp
jo
mov
dec
decl
push
call
xchg
es
jmp
pop
or
lock
mov
lcall
xor
jle
das
dec
jg
dec
cmp
or
push
test
sub
jp
fld
sar
decl
xor
add
xorl
mov
fsubrl
jns
or
call
sahf
fstps
jmp
stos
pop
mov
xor
pusha
ss
jg
aaa
ljmp
xchg
and
ljmp
addps
fists
xchg
test
push
sbb
xchg
mov
js
adc
jle
test
jp
jne
add
xor
call
call
lcall
add
nop
jno
stos
popf
jl
pusha
dec
hlt
jo
cmp
jb
in
push
cmp
or
adc
decl
lock
jmp
mov
iret
sbb
xor
push
inc
lcall
std
out
bound
jae
mov
cmc
fucomip
xor
sti
es
xorl
sbb
sarb
pushf
std
mov
dec
cmp
aas
sar
xor
pop
jp
sbb
es
push
xchg
shll
jns
push
mov
lcall
cwtl
sbbb
fdiv
pop
push
or
mov
push
lods
out
mov
sti
jne
jg
stos
stc
insl
sti
jmp
sbb
cmpb
bound
fidivrl
pop
or
jae
dec
dec
popa
mov
movsl
das
scas
jne
pushl
push
or
movb
fwait
das
sbb
scas
dec
sbb
lcall
sbb
sbbb
mov
xorl
cmc
inc
aad
pop
ret
adc
int3
pop
mov
mov
mov
mulps
add
xchg
pop
jge
cmp
sbb
ficomps
xlat
pop
mov
and
popa
leave
stc
sub
aas
mov
leave
das
jge
js
sbb
jns
mov
jg
decl
xor
pop
mov
xchg
and
jne
add
add
jg
call
imul
and
popf
dec
icebp
mov
jl
subl
lock
mov
stos
or
jns
xor
enter
ljmp
outsb
inc
xchg
mov
fistpl
in
int3
fstps
imul
dec
call
lock
jne
filds
push
mov
std
ljmp
xlat
jnp
xchg
add
fcmovnu
sbb
call
repz
mov
jbe
mov
mov
cmc
push
or
ljmp
bound
dec
daa
add
in
cwtl
mov
shr
fnstenv
loop
mov
cmp
inc
es
inc
sbb
movsl
es
incl
sub
stos
cmp
jne
jnp
dec
mov
pop
movsl
rol
movb
out
cld
ljmp
call
fdivr
popa
les
test
jecxz
insl
das
xchg
fwait
jle
std
push
push
lds
xor
jp
shlb
mov
sub
cmpsb
jecxz
inc
jbe
sar
repz
rorl
decl
adc
loope
dec
adcb
adc
sub
insl
mov
leave
dec
inc
or
shll
std
add
int3
lds
and
cmpsb
dec
std
int
stos
les
sub
out
pextrw
daa
add
cmpsl
and
pop
mov
mov
push
std
pop
fwait
cmp
sub
dec
movsl
or
repnz
cwtl
push
mov
decl
inc
fiaddl
scas
push
movsb
pop
rcr
lock
fadds
sarb
pop
loopne
ljmp
clc
or
mov
and
jp
in
cmp
push
lret
in
sbb
xor
dec
ja
sbb
fwait
inc
inc
ja
dec
mov
lcall
xchg
adc
xchg
rorl
and
and
scas
adc
das
sbbl
inc
ljmp
or
popa
push
jmp
fwait
dec
test
xchg
scas
pop
ljmp
mov
mov
push
ds
mov
testl
inc
sbb
fbstp
xor
dec
ljmp
imul
cli
jg
fdivrp
cmp
xchg
enter
loop
and
add
scas
or
loopne
in
push
mov
xlat
ljmp
jnp
shl
cwtl
jg
sbb
push
psubb
sbb
stos
aam
fcmovnb
std
inc
pop
adc
ja
into
jmp
popa
sub
repz
jmp
mov
ret
and
and
or
inc
dec
sti
fildl
das
pop
fmull
mov
icebp
cmp
jno
ljmp
pushf
xchg
inc
adc
ljmp
data16
mov
fisttpll
lea
rclb
rcrb
loope
outsl
repnz
sub
ljmp
in
add
testb
mov
cmp
or
ljmp
sub
fsubrs
imul
xchg
in
mov
push
out
iret
dec
adcb
adc
xchg
out
ljmp
add
ss
xor
xchg
je
iret
js
dec
xchg
cli
dec
ret
mov
pop
lret
fistpll
mov
or
mov
push
fsubs
push
cld
jnp
stc
jg
push
pop
adc
push
dec
movsb
jle
sti
and
xor
pusha
mov
in
je
and
xor
push
out
mov
popa
mov
data16
mov
lcall
sbb
out
fisttpl
mov
outsb
iret
xchg
rorl
inc
mov
cmp
lock
adc
pushf
lcall
sbbb
xchg
rcr
ljmp
call
pop
lock
jg
or
sub
data16
add
aam
push
arpl
dec
aas
sarb
bound
fcmove
and
adc
xchg
sub
push
outsb
sti
movsl
adc
daa
and
repz
shrb
stos
testb
and
mov
out
outsb
mov
or
sub
pushf
adc
in
jmp
icebp
mov
sub
jno
ror
std
ds
add
rcrb
lock
stc
pushf
mov
push
mov
push
ret
outsl
fwait
movsb
in
xchg
sbb
ja
and
fadd
jl
xchg
or
call
loope
clc
insl
jl
sbb
fstp
dec
int3
jecxz
pushf
mov
in
sbb
jmp
and
adc
jmp
cmp
movsb
or
negl
icebp
or
xchg
push
xlat
adcb
test
cmpsb
mov
jmp
or
pusha
aad
jg
adc
and
out
mov
and
and
test
jg
test
push
out
lods
adc
xchg
jle
jb
loopne
incl
shll
shll
es
icebp
repz
cs
or
sbb
pusha
call
adc
pop
push
sar
push
lcall
les
adc
pop
add
ljmp
popa
mov
sub
mov
shll
incl
sub
sub
je
test
ljmp
xchg
fsubs
xlat
jge
sub
xor
jmp
or
in
popf
push
stos
lock
addr16
aaa
imulb
stos
cs
jg
lcall
or
imul
das
lods
ficomps
shll
icebp
call
jne
sub
insl
mov
xlat
std
ret
cmc
xchg
add
or
jno
cld
dec
lcall
loopne
adc
and
idivl
and
std
xlat
hlt
cmp
call
dec
mov
or
cmc
mov
jno
xchg
loopne
mov
fcmovb
xor
scas
incl
push
popa
cmp
pop
into
xor
stos
imul
push
test
push
xchg
loop
mov
cmp
sbb
call
insl
or
xchg
inc
xchg
movsl
dec
int3
xchg
or
lret
add
incb
andb
ja
into
aas
pop
add
xchg
mov
dec
inc
sub
xor
sbb
and
xchg
pop
mov
dec
mov
jbe
cmp
adc
out
xchg
icebp
mov
xor
dec
test
push
call
sbb
ss
imul
mov
sbb
xlat
ja
int
stos
clc
xchg
mov
jl
mov
fnstsw
lret
jp
inc
clc
les
gs
into
enter
test
mov
adc
mov
or
cmpsl
and
out
and
pop
neg
push
push
leave
js
pop
mov
out
pushf
fs
fsubl
pop
lcall
lcall
in
dec
xchg
mov
dec
ja
pop
jbe
adc
sbb
mov
decl
xchg
int
cmp
dec
mov
sbb
or
imul
ds
call
sub
xchg
mov
lcall
out
pop
add
add
jo
data16
mov
jnp,pn
dec
call
sbb
call
cmp
pusha
orb
jbe
gs
mov
and
fildl
push
mov
sahf
jne
push
jbe
repnz
push
faddl
push
sti
cltd
test
adc
stc
call
and
jns,pt
jle
rcrl
sbb
test
lret
mov
and
popf
mov
ljmp
shll
xor
stos
popf
lret
jbe
ja
adc
insb
push
shll
test
lcall
cs
mov
in
cs
push
imul
aas
ljmp
notb
or
mov
lods
inc
mov
inc
loopne
movsb
sbb
inc
pop
xchg
dec
in
pop
push
cmpl
mov
cmp
adc
outsl
and
lcall
shll
jmp
sub
cli
ss
fstl
pop
adc
ret
cmp
adc
jge
xchg
shrl
out
call
fadds
mov
inc
xor
sti
lea
push
add
mov
ljmp
loopne
xlat
das
sub
lret
idivb
aad
and
mov
sarl
ficoms
mov
inc
jo
jp
add
cmp
daa
sbb
fs
mov
stc
adc
in
aas
or
add
cmpsl
pop
aas
adc
and
sahf
inc
addr16
test
mov
lcall
fcomps
and
insb
jmp
xor
adc
add
inc
aad
fstl
decl
stc
push
xchg
ljmp
fxch
cmp
and
mov
cwtl
testb
add
call
loopne
leave
je
and
ret
incb
shr
scas
pop
dec
mov
call
int3
stos
xor
jmp
enter
push
iret
mov
push
mov
push
shrl
incl
jbe
and
pop
imul
fisubl
inc
sub
call
scas
mov
push
add
mov
pusha
dec
decl
mov
push
sbb
lods
daa
adc
pop
cld
pushl
ret
sub
jecxz
xchg
jp
sub
test
inc
push
pushl
cmp
push
cmc
adc
mov
sub
fistps
scas
push
sbb
icebp
icebp
call
dec
jb
icebp
xchg
sbb
dec
push
sbb
push
xor
test
lcall
cmp
pop
addl
loope
mov
adc
imul
fcompl
jp
mov
decl
inc
xchg
movsl
pop
in
pushf
out
loop
repnz
fnstenv
jp
bnd
out
scas
imul
ljmp
in
dec
and
ds
push
inc
cwtl
movsb
in
inc
ret
adcl
fcomip
stos
inc
add
pushf
aaa
loope
and
or
cmc
in
pushl
pop
or
cltd
xchg
das
dec
jle
push
sub
test
gs
mov
ss
jl
mov
inc
add
cmpsb
mov
shl
mov
inc
test
rclb
fcoml
mov
div
rcll
or
mov
pop
and
mov
stc
cli
arpl
nop
sahf
lods
cmpsb
js
pop
leave
faddl
stc
stc
int3
lods
test
in
fs
cmp
incl
scas
jp
add
mov
outsl
push
stos
push
outsl
nop
adc
pop
call
cs
jle
or
mov
fs
inc
mov
pushf
cmpsb
rclb
jb
adc
aas
push
mov
into
or
adc
loopne
push
mov
aaa
sbb
sbb
out
int3
cmp
out
ljmp
jno
cmpsl
and
sbb
js
mov
push
sbbb
push
notl
fnsave
mov
insb
add
fldcw
lret
cmp
adc
push
jmp
leave
pop
sahf
fistpll
push
sahf
cmp
int
fdivrp
add
xchg
ficoms
decl
sbb
popf
fisubs
iret
aam
dec
adc
jecxz
idivl
push
push
mov
repz
xchg
pop
cld
call
mov
movsl
and
inc
cwtl
mov
shrl
cmp
movntps
iret
and
dec
lcall
cld
sub
adc
jns
lcall
inc
adc
fcoml
sub
jb
in
push
out
cmp
cld
dec
dec
xor
sbb
bound
rclb
dec
cli
mov
mov
popa
jmp
daa
repnz
cmp
decl
xchg
int
in
aas
idivl
lret
dec
dec
mov
daa
mov
mov
outsl
stc
add
mov
dec
les
call
push
ljmp
mov
push
leave
scas
sbb
in
dec
mov
xchg
lea
push
push
stos
mov
cltd
inc
pcmpeqw
loope
mov
xchg
mov
movsl
fsubs
dec
lds
fdivl
mov
pop
icebp
push
imul
lock
pop
push
mov
pushl
add
push
gs
in
sub
adcl
sti
inc
or
loop
cltd
sti
mov
decl
push
pop
std
pop
ss
push
xor
in
sbb
pop
and
jo
shll
push
cli
mov
nop
cmp
inc
mov
lods
das
leave
or
hlt
push
stos
lock
push
xchg
clc
roll
cmp
and
popf
cli
mov
pushl
imul
sbbb
mov
test
ljmp
addb
xchg
xchg
fwait
or
fimuls
mov
lods
jecxz
dec
mov
adc
xchg
outsb
ret
xor
imul
sti
std
fcoms
test
test
notb
jmp
add
sbb
test
hlt
cmp
mov
imul
in
mov
pushl
leave
adc
ljmp
jp
insb
push
or
jo
mov
xchg
and
jnp
and
icebp
neg
mov
cmp
outsb
imul
mov
mov
dec
aas
mov
sbb
sbb
out
test
adc
pop
shlb
arpl
or
out
test
neg
add
mov
lcall
addr16
dec
inc
pop
jl
sub
push
xchg
push
lea
xor
or
and
cmpsb
in
xchg
lcall
jp
sahf
enter
test
lds
pop
mov
pop
mov
xchg
fwait
iret
pusha
sbbb
sbb
pop
or
stos
scas
inc
aaa
out
int3
pop
mov
in
xlat
jmp
lock
lods
jecxz
inc
push
sti
or
cs
call
mov
pop
jno
pop
aas
or
fidivrl
js
xchg
movsb
jg
dec
sub
call
inc
add
test
clc
repz
seto
movsb
fcomps
jb
mov
pop
mov
pop
xor
pop
mov
and
inc
mov
xchg
push
inc
add
loope
incl
push
mov
outsl
ret
icebp
in
mov
data16
push
outsl
iret
in
and
xlat
fisttps
push
into
lret
sbb
insl
jge
push
lea
xor
sbb
jmp
loop
lret
jmp
xchg
daa
and
je
jns
loope
sahf
push
push
pop
cmpsb
jb
sub
fldt
loopne
add
ret
lds
adc
mov
pop
mov
decl
mov
and
je
stos
mov
cmp
sbbw
imul
sub
cltd
mov
clc
jnp
dec
pop
cmp
ret
cmc
mov
or
cmpsb
and
xor
mov
mov
sub
sub
decl
clc
out
jle
mov
iret
fcomps
cmp
pop
cwtl
test
inc
mov
add
jnp
fnstenv
mov
xchg
push
cmp
jbe
inc
test
and
int
inc
mov
loopne
enter
add
dec
cmp
and
sub
sbb
fdivs
mov
jno
pop
insb
shrb
inc
pop
mov
daa
pop
xor
fisttpl
mov
decl
pop
cmp
loopne
push
lret
clc
aad
out
xor
rcll
ss
cmp
jmp
lea
out
xchg
add
jb
add
mov
rcpps
fcoml
call
jp
shlb
sbb
ficompl
mov
cmc
mov
fwait
xchg
jne
add
popf
out
sbb
sub
leave
or
xchg
cvttps2pi
pop
cmpxchg
call
jmp
push
pop
adc
adc
adc
js
leave
adc
test
inc
sub
incl
sub
lret
xlat
fisubl
sahf
icebp
loopne
out
or
add
pushf
jbe
ret
mov
adc
push
gs
push
cmpb
in
xor
ficomps
push
cli
or
mov
xchg
mov
sub
fidivl
nop
ljmp
aad
lret
lods
xchg
and
ret
sub
mov
cmpsb
movsl
mov
idiv
jmp
xlat
jl
mulb
es
rorb
and
and
fldcw
lock
mov
mov
mov
leave
adc
mov
lahf
cmp
sbb
lcall
dec
adc
xor
aaa
movsl
sbb
lret
mov
xchg
test
call
cld
and
add
or
cltd
cmp
hlt
int
movsl
mov
pusha
mov
xchg
out
incl
jecxz
mov
jge
lcall
bound
imull
lcall
jl
cmp
sbb
jle
aad
imul
inc
mov
in
inc
cld
ja
ds
decl
or
mov
xchg
ffreep
mov
outsb
adc
incl
into
and
pop
pop
fs
pop
fwait
loop
imul
inc
jns
xor
enter
cmc
mov
mov
ds
es
jnp
push
jbe
xor
jno
out
mov
push
lods
cld
and
sbb
into
cmp
hlt
sub
cmp
decl
add
sbb
insl
lods
mov
xchg
aad
fnstenv
jmp
aad
push
xchg
adc
jle
mov
stos
loopew
arpl
push
inc
dec
incl
pop
xchg
shl
push
cmpsl
inc
or
inc
xchg
jae
nop
outsl
clc
jmp
fwait
stc
dec
xchg
shl
fidivl
cmpsl
insl
sbb
and
loope
fmul
fcmove
shrl
arpl
inc
sbb
std
sbb
int
add
in
out
xchg
sub
call
mull
mov
int3
outsl
daa
fidivrs
mov
add
or
ljmp
cli
jmp
leave
inc
inc
aad
mov
sub
dec
loopne
cmp
pushf
jp
incl
xor
test
lcall
push
dec
xchg
pushf
cmp
leave
xorl
ljmp
stos
call
sub
add
rcl
pop
jg
inc
cld
icebp
xchg
mov
add
ds
outsl
cli
call
jge
pop
cmp
pop
jns
cmpb
test
xor
inc
outsl
adc
call
and
rolb
lret
dec
call
xor
call
ret
dec
xchg
add
jb
sub
sbb
pop
sub
xchg
cmp
adc
jge
inc
dec
dec
sahf
vmread
pushl
jno
mov
pop
or
in
fidivs
cld
sub
cmovns
xor
and
sahf
scas
test
cli
call
jae
push
sub
jbe
cmpsb
pop
sub
sbb
cli
xchg
mov
test
stc
cmp
int
repz
push
std
fbstp
mov
and
insb
int3
push
mov
mov
sbb
push
jns
mov
aaa
shrb
mov
lea
and
out
clc
ljmp
push
lock
cltd
out
xlat
jmp
xchg
jle
aad
repnz
arpl
nop
sbb
jmp
pcmpgtd
cwtl
leave
mov
push
int3
sbb
test
leave
cli
add
inc
jmp
xchg
fisubs
adc
jbe
xor
cmpsb
jae
xor
dec
jg
ljmp
loop
cs
and
je
sbb
mov
add
jnp
int
repz
stos
add
scas
cmp
mov
push
mov
lods
cmp
cmp
sbb
cmp
arpl
jns
mov
xor
pop
clc
outsl
imul
pop
jmp
xor
and
and
les
fwait
dec
cwtl
and
pop
push
lcall
in
mov
enter
jge
fadd
ljmp
clc
add
mov
sti
in
jle
cld
shlb
sub
and
sub
cmp
mov
mov
ret
ljmp
pop
inc
daa
cmc
sbb
mov
xor
lcall
pop
clc
dec
pop
adc
clc
aaa
push
cs
ret
mov
sbb
icebp
mov
popa
ss
lret
inc
inc
repnz
add
in
lcall
inc
aam
inc
dec
test
loope
pop
shr
mov
inc
mov
add
xorl
jg
pop
adc
aas
flds
adc
jnp
enter
daa
shll
sub
cld
scas
xchg
sar
sub
jmp
mov
xchg
mov
cmp
pop
cwtl
ds
push
and
jae
and
shrl
leave
shlb
decl
shl
cmpsb
mov
dec
push
and
pop
call
jl
add
std
decl
shlb
outsl
mov
mov
and
dec
push
outsl
mov
and
call
int3
push
stos
add
dec
call
jp
push
enter
xlat
push
aad
mov
in
or
jmp
jo
dec
hlt
aas
mov
shll
cli
xor
mov
incl
pop
mov
and
inc
movsb
xchg
pop
rolb
sub
cs
js
popa
sub
outsb
mov
jmp
cli
sbb
shll
out
mov
pusha
push
lods
jb
popa
into
pop
lds
ret
mov
push
xchg
cmp
pop
and
scas
outsl
outsb
inc
imul
rcll
cli
mov
adc
lcall
pusha
adc
fwait
mov
in
sub
loopne
push
aaa
lahf
adc
stos
jbe
lcall
dec
dec
lret
sahf
mov
cld
mov
hlt
repnz
fwait
jl
cmp
inc
cmp
into
stos
pushl
mov
sbb
mov
and
sarb
mov
inc
popa
or
dec
push
sahf
sub
lcall
rcl
xor
sar
js
lods
or
push
push
dec
mov
roll
jmp
stos
sub
in
les
jne
or
pop
inc
sub
sbb
dec
pusha
aad
les
inc
out
cmp
pushf
pop
pop
ficompl
jno
push
jne
decl
mov
jne
nop
insb
inc
adc
xchg
push
dec
or
jmp
incl
xchg
mov
jns
rcrb
movsl
lahf
mov
out
data16
fwait
adc
pushl
lods
imul
jl
mov
test
sbb
mov
or
pop
pop
add
adc
imul
adc
repnz
lcall
cmpsb
mov
outsb
fistl
adc
add
and
sbb
pop
inc
bound
pusha
fisttpll
test
adc
add
in
int
stc
cld
sbb
shll
sahf
xchg
xlat
icebp
pop
popa
or
int
pop
adc
and
or
lods
int
inc
ljmp
pop
dec
loope
packsswb
je
pop
xor
loope
scas
lcall
cmpsb
add
je
jne
mov
or
jmp
cmp
std
outsl
pushl
lods
jne
adc
fwait
jns
scas
inc
clc
mov
mov
lea
pop
jge
lcall
xchg
xchg
mov
negb
nop
icebp
and
jmp
fiadds
aad
aas
dec
fdivrp
decl
fbld
mov
mov
das
fistl
xchg
xchg
dec
sbb
out
out
mov
dec
mov
xchg
pushf
xor
or
push
and
cmp
or
aas
sahf
pushf
imul
lods
dec
inc
sub
pop
lea
xchg
sarb
in
fmull
and
loop
incl
shlb
mov
je
jne
popa
lret
add
jge
pop
inc
mov
mov
cmp
movsl
rcll
lret
adc
loope
add
mov
sub
fwait
daa
movsb
push
jg
and
pop
aaa
shr
repnz
pop
dec
sub
sub
aam
sti
ja
dec
cli
mov
dec
xor
cli
jmp
int3
filds
pop
mov
xchg
mov
testl
jmp
mov
nop
add
les
cmp
and
cmp
enter
jl
sbb
jae
fidivrl
and
jne
add
inc
movsb
add
sub
mov
out
xor
push
push
xchg
in
adc
mov
ljmp
mov
les
sub
cmp
rorb
xor
fwait
outsl
cmc
cs
call
pop
das
mov
mov
out
js
subl
adc
js
pop
jp
daa
and
incl
xor
sbb
mov
imul
dec
xchg
sbb
out
dec
lahf
ret
arpl
pushl
popa
mov
bound
dec
leave
iret
inc
lret
sbb
movsl
sahf
fisttpl
popa
insb
pop
fstp
insl
movb
lods
aaa
jo
rorl
sbb
xchg
push
sahf
xchg
inc
dec
push
dec
rclb
or
sub
pop
add
outsl
xor
sti
push
clc
andb
jo
lahf
xor
loop
pop
jne
test
mov
dec
decl
mov
es
pop
pop
xchg
cld
call
push
mov
fcmovnb
gs
dec
pop
push
iret
mov
mov
mov
lahf
adc
push
pusha
mov
loope
xor
outsl
cli
ljmp
sbb
scas
jl
and
sub
fldcw
and
incl
dec
les
adc
jecxz
dec
fimull
mov
iret
xchg
jb
xor
lahf
push
lcall
adc
pop
les
mov
sbb
mov
mov
shrb
cmp
outsl
vmovdqu
dec
add
push
mov
xchg
dec
pop
pop
incl
das
cwtl
or
pop
aam
cmp
pop
rol
addr16
sbb
mov
mov
xchg
js
ja
xor
jp
lods
fcmovnb
push
shlb
or
gs
push
or
cmpb
jbe
xchg
cmc
xchg
dec
sbb
jg
inc
mov
outsb
dec
mov
sub
movsb
fsts
xor
xchg
decl
std
loope
iret
gs
jns
lods
rorl
sbb
sub
adc
jns
jne
cmpsb
push
lret
icebp
dec
or
je
out
cmc
xchg
mov
add
loope
test
sbbb
push
push
pushl
movsb
stc
fistps
mov
mov
push
insl
dec
test
cmpsb
push
rcr
dec
ljmp
pop
hlt
sbb
sbb
xor
push
cmp
bound
mov
cs
cmpsl
cli
hlt
mov
push
sub
and
lods
or
sbbb
jnp
xor
data16
cmp
cmp
or
dec
pusha
cmpsl
rcrl
mov
ljmp
push
arpl
ret
cli
aas
and
daa
mov
pop
dec
faddl
pop
cwtl
jle
pop
sbb
aad
testb
fcomip
or
xlat
inc
cmovge
mov
subb
lcall
or
ljmp
lcall
aaa
roll
sub
cmpsl
imul
idivl
cmp
jo
push
cld
stos
lcall
lods
push
xchg
and
gs
ficoml
in
cmp
bound
pop
cmc
dec
or
push
inc
cmp
and
outsb
sbb
std
mov
call
inc
loop
mov
mov
pop
jecxz
roll
jo
popa
push
ljmp
mov
shl
test
enter
mov
pop
mov
xchg
dec
test
ljmp
push
pslld
in
push
xchg
cmp
jb
dec
stc
cmp
dec
mov
push
pop
movsb
sub
mov
add
out
xor
jp
sbb
xchg
fwait
and
pushl
outsb
js
pop
pop
cmp
pop
add
cmp
in
ljmp
pop
add
clc
sbb
scas
xlat
or
pusha
call
int
pop
es
push
dec
leave
cmp
stos
shr
hlt
pop
jg
aam
mov
out
das
out
ljmp
sbb
xorb
adc
mov
jb
adc
push
fwait
inc
out
subl
pop
mov
incl
jbe
xcrypt-ctr
cmpsl
sbb
addr16
add
leave
enter
es
mov
pop
inc
call
xchg
mov
or
stc
movsl
fisubs
dec
shll
lds
inc
adc
call
in
mov
incb
mov
mov
out
shll
stc
push
push
adc
and
in
xchg
addr16
arpl
ds
inc
sub
out
xor
mov
jmp
jp
inc
enter
pop
xchg
mov
pusha
scas
mov
xor
push
push
add
movb
sahf
dec
add
inc
stc
xchg
or
push
sub
xor
arpl
je,pt
mov
mov
cmc
sbb
lcall
fidivrs
push
cmp
cmpsb
popa
mov
add
push
das
pop
into
pop
push
ljmp
std
inc
jge
xor
lock
jae
cmp
fisttpll
enter
shll
jle
adc
mov
in
inc
iret
add
fidivl
jae
adc
mov
incl
mov
dec
out
push
add
popa
pop
shrl
imul
fcoml
test
ja
das
mov
mov
push
pusha
cli
outsb
cmp
in
outsb
pop
leave
and
aad
call
add
hlt
bound
ds
call
mov
pop
imul
fs
ds
mov
pop
fucomp
aam
fdiv
iret
pushf
outsb
subl
cli
decl
sbb
loopne
push
lods
adc
sbb
xchg
jg
add
push
add
das
cmpsb
mov
dec
push
adc
sub
or
in
call
sbb
sub
jb
pusha
les
dec
jecxz
mov
mov
cmp
les
les
jg
ljmp
mov
xor
inc
mov
xor
ljmp
in
inc
mov
mov
fcom
xor
inc
loopne
fisubl
push
jl
scas
sub
data16
incl
push
enter
sub
add
arpl
push
std
add
pushf
inc
jg
sub
mov
lcall
jecxz
sub
sahf
mov
xor
aaa
std
jmp
and
mov
fdiv
mov
nop
hlt
or
lcall
stos
cwtl
sub
out
or
inc
pushf
lock
decl
cmp
and
add
fisttpll
test
pop
jmp
sahf
and
mov
stc
repz
cmp
stc
popa
mov
mov
ss
xchg
fistps
fnsave
std
cltd
or
mov
adc
loop
int3
add
cmpsl
jb
add
popf
imulb
push
mov
xor
sar
incl
sub
adc
jg
jmp
repnz
cwtl
loopne
repz
mov
pop
mov
sbbl
cmp
or
inc
sbb
out
push
nop
sub
cmpsb
jle
sub
test
ljmp
mov
jp
pop
repnz
in
cmpsl
and
cmpsl
mov
loop
and
addb
test
mov
hlt
push
cmc
jp
add
adc
sbb
lds
ret
sbb
pop
stc
test
cld
lcall
iret
cmp
fmul
aaa
out
popa
insb
adc
adc
mov
inc
lret
xchg
jno
loopne
call
jne
sbb
cs
fidivrs
cmp
icebp
xchg
sbb
push
incl
add
lcall
negl
ljmp
out
cli
stc
sarb
aam
pop
adc
jne,pt
rol
ss
mov
mov
mov
ljmp
rorb
sbb
pop
ret
daa
je
adc
pop
push
mov
mov
cld
pushl
ret
xchg
out
xchg
fstl
sub
pusha
in
clc
push
mov
cmp
insb
ljmp
jno
ja
mov
jmp
lret
ret
es
mov
ret
sbb
ljmp
xor
cli
fldenv
adc
cmp
inc
cmp
lock
mov
out
cmp
push
xchg
xchg
fmull
xchg
out
ret
nop
dec
lret
or
push
incl
pop
pushf
out
adc
add
ret
push
dec
jne
dec
mov
cmp
ja
sti
inc
fmuls
cmp
sar
notb
jg
popa
push
jnp
iret
sarl
imul
mov
scas
push
push
mov
test
js
in
xchg
aad
xchg
add
popf
lods
cmp
sbb
pop
andl
mov
add
lcall
cmp
pushf
out
or
cmpsl
or
idiv
adc
ljmp
stc
push
mov
xor
sbb
das
xchg
inc
hlt
or
jns
push
mov
lcall
or
sub
pop
std
xchg
cmp
mov
out
jo
sti
es
ficomps
mov
repnz
rorl
mov
repnz
incl
jl
push
out
dec
mov
xchg
sti
pop
add
sbb
cmp
scas
rorl
pushf
sahf
sbb
mov
cmp
outsb
mov
adc
mov
jmp
aas
dec
fnstcw
push
test
aam
cmpsl
sbb
mov
mov
mov
decl
movsl
or
shl
sub
adc
les
or
jmp
in
jne
mov
fmuls
fnstsw
inc
and
int
mov
dec
sub
fcomip
inc
lock
mov
stos
mov
mov
and
xchg
mov
lcall
ljmp
aaa
mov
fistpll
cmp
ja
or
mov
loop
ss
incl
aad
incl
call
pop
pop
mov
mov
fstl
sub
mov
fbld
pop
subb
sbb
pusha
and
add
jb
add
loopne
cmp
xchg
mov
or
xor
sbb
push
std
push
lahf
int3
jle
mov
call
aad
fldcw
xor
xlat
je
adc
sub
repz
or
decl
xor
inc
or
dec
xchg
inc
or
popf
das
pushl
xchg
inc
nop
dec
ja
cltd
aad
jns
dec
dec
fldt
enter
pushf
mov
dec
enter
mov
decl
lock
cmp
into
xchg
and
or
sub
cmp
adc
out
gs
or
ljmp
scas
nop
shl
in
lcall
dec
pop
mov
mov
push
out
popa
pop
enter
xchg
sbb
aad
ficoms
stos
idiv
fldl2e
loop
andl
cltd
mov
add
lcall
lods
stc
fimuls
jle
mov
mov
imul
ja
decl
incl
and
stc
jl
sahf
sub
inc
pop
std
cli
fs
pop
sti
and
cli
cmp
push
imul
jo
or
in
mov
inc
xor
mov
pushl
jbe
jae
jo
stos
shlb
fstps
fwait
aad
and
ljmp
jg
pusha
rolb
out
push
sbb
sahf
jnp
shr
jo
mov
jmp
dec
notb
mov
inc
test
pop
xchg
fwait
int3
pop
imul
call
mov
fsubrp
inc
mov
add
sbbb
mov
test
or
pushl
and
nop
mov
inc
mov
add
mov
sbb
pop
scas
cli
ljmp
nop
icebp
mov
mov
push
in
jl
icebp
dec
or
adc
adc
jmp
jmp
jns
xchg
fcomip
inc
negl
ds
lret
movzbl
mov
pop
pop
lahf
sbb
xchg
aad
ret
cmp
cmpsl
repnz
sbb
testb
and
mov
xor
inc
sti
mov
cmp
call
and
jg
icebp
inc
xorl
sub
ret
sbb
fisttps
iret
ljmp
pop
cmp
fcoms
adcl
shrl
insl
in
push
jl
lcall
fidivl
push
inc
call
mov
jae
dec
aam
pop
xchg
adc
lahf
sbb
or
mov
inc
dec
cmpxchg
ljmp
inc
mov
lds
jno
andl
mov
sub
cmp
sti
dec
mov
ret
jmp
and
mov
sbb
sbb
das
jl
mov
add
lret
mov
fstpt
xchg
mov
jle
adc
fstpt
lcall
add
add
jg
enter
iret
xor
xor
test
in
fldt
scas
clc
xor
testb
ljmp
and
mov
icebp
fcomip
ror
aaa
mov
mov
mov
xchg
push
xchg
fcomip
pop
adc
mov
pop
jg
in
cld
out
push
add
push
pop
pop
push
aas
in
mov
call
cld
push
addr16
mov
cmp
scas
jbe
cwtl
xor
push
ja
out
ja
imul
aam
pushl
std
mov
in
bnd
shll
insb
xor
sbb
lcall
xor
dec
xor
cwtl
mov
xor
dec
leave
jmp
push
mov
dec
fs
cli
aam
cmp
mov
jg
out
cmp
out
fwait
push
mov
pop
sbb
shl
addl
and
sar
lcall
xchg
repz
bound
mov
jg
mov
js
inc
inc
daa
into
fsubrs
outsb
aam
xchg
lods
mov
mov
xor
movsl
dec
aas
scas
loope
iret
mov
aas
xor
xchg
dec
int3
test
inc
andb
mov
xchg
dec
lods
idivl
and
adc
fstpt
sbbb
fwait
mov
pushl
aaa
lods
call
ds
mov
outsb
orl
call
jmp
dec
or
icebp
cmp
repz
add
push
ficoms
out
pop
push
pop
or
and
sbb
mov
pop
lock
sbb
cwtl
mov
mov
in
addr16
mov
test
cmp
mov
ds
adc
ret
decl
lret
push
pusha
push
mov
jmp
fsubp
testb
xchg
imul
mov
scas
clc
fisttps
xchg
mov
jl
into
xchg
outsl
mov
inc
ljmp
ljmp
xor
movsb
push
cmp
mov
repnz
sarb
ljmp
lock
xchg
push
cltd
sbb
aad
scas
push
jg
decl
fstpl
lea
add
dec
cltd
shl
adc
sub
jnp
enter
mov
mov
js
push
je
xchg
jmp
mul
ret
decl
jmp
mov
mov
leave
dec
arpl
adc
fisubrs
inc
xchg
bound
jecxz
push
mov
incl
xchg
adc
xchg
pop
aaa
xor
xchg
push
rcrl
sbb
fcomip
sbb
push
inc
jmp
dec
aaa
dec
push
mov
jmp
sti
push
aam
cwtl
jne
mov
xchg
mov
outsb
mov
call
std
lcall
pushf
inc
xchg
and
pushf
dec
jge
repnz
int3
es
outsb
jmp
dec
cmp
les
lcall
decb
out
pop
inc
jo
sub
inc
outsl
in
test
pop
push
js
add
fs
test
push
and
mov
or
mov
and
lods
add
push
adc
xor
jp
cmp
lds
jge
xchg
push
sti
cmc
repz
push
repz
xor
mov
sub
ret
jno
adc
jp
jecxz
lcall
ficompl
fstps
lcall
cmp
mov
sub
out
sbb
imul
add
dec
inc
rolb
cmpsb
lods
loop
lret
pop
jae
pop
dec
push
cmp
jne
scas
push
rcrb
or
bound
xchg
push
std
pop
inc
das
pop
inc
inc
out
mov
clc
cmpsl
popf
jecxz
xor
adcl
ja
sbb
lods
inc
lea
pop
mov
and
xor
stc
out
or
mov
pop
jns
out
cltd
xchg
pop
xchg
nop
repz
push
fidivrl
mov
adc
mov
decl
and
dec
pusha
rcrb
mov
pop
jle
or
pop
popl
decl
adc
jae
cld
sub
and
out
out
out
gs
bound
mov
lea
cmp
insb
or
repnz
jnp
jg
jo
push
cmp
mov
inc
cmp
pop
dec
dec
pushl
push
add
jge
outsl
cmp
in
jecxz
decl
pop
xchg
fldl
cmpsl
add
iret
outsb
mov
aad
cltd
add
cltd
mov
sbb
push
out
lds
incb
push
jl
in
adc
mov
jle
mov
nop
xor
incl
push
cmpsb
out
shlb
mov
call
dec
popa
int3
push
stos
jmp
test
inc
pop
adc
enter
lods
or
or
xor
stos
xchg
xor
decl
mov
jo
and
stos
inc
fidivs
pop
mov
jae
lcall
xchg
pushl
in
popa
mov
adc
ss
mov
pushf
lcall
dec
push
pushl
sub
and
jbe
pushf
mov
lods
test
push
add
das
je
lahf
xor
decl
or
cvttps2pi
ja
mov
push
xchg
out
jp
add
pushf
inc
mov
inc
cmp
cld
cmp
lcall
dec
jp
add
or
outsl
dec
inc
ljmp
add
inc
jl
mov
cmc
nop
out
jns
mov
cld
dec
in
jb
std
jbe
sub
push
inc
dec
dec
hlt
lds
nop
push
call
ljmp
pushw
fnsave
psrld
repnz
inc
ss
stos
mov
pop
js
out
ljmp
jnp
adc
jno
xchg
std
lcall
pop
imul
mov
pop
or
and
scas
mov
dec
ja
pop
mov
add
cmp
loop
add
inc
data16
call
or
jmp
fsts
or
icebp
lds
in
lods
push
xorb
sbb
mov
mov
fistps
dec
cmp
fistl
shlb
push
sub
mov
in
out
cmpsl
out
outsb
pop
mov
mov
mov
adc
sahf
xor
std
add
add
mov
jmp
pop
jp
cltd
ds
repnz
cmp
pop
pop
adc
scas
cli
sub
fcomip
decl
loop
mov
les
lods
fsubr
push
jge
dec
pop
daa
out
and
jmp
stos
pop
mov
or
jmp
dec
push
call
pop
adc
lss
incl
stc
cmp
xor
fnsave
mov
pop
inc
push
sahf
mov
mov
daa
and
pushf
sub
cs
sbb
mov
pop
stos
out
and
cmp
inc
stos
pushf
imul
or
arpl
and
add
negb
std
loopne
xchg
push
add
push
xor
add
scas
fisubl
jecxz
mov
mov
pushl
fisttpl
das
mov
inc
enter
pop
and
jne
jbe
push
sbb
outsb
xor
mov
int
imul
insb
pop
pop
cmp
xchg
dec
imul
jmp
aaa
jge
in
mov
cmpsb
sbb
mov
cmp
outsl
outsl
lods
cmp
mov
lods
call
cwtl
dec
xchg
in
sbb
rsqrtps
and
sub
clc
cmpsl
adc
jge
cmp
cmc
or
or
incl
mov
test
and
popf
ljmp
inc
and
sahf
xchg
jg
in
in
outsl
add
mov
mov
arpl
dec
in
and
ja
push
rcrl
adc
cmp
jb
xchg
cmp
das
fildll
sub
arpl
xchg
pop
cmpb
jo
leave
fwait
adc
sbb
rcrl
pushl
cs
adc
mov
xor
es
push
psubq
add
fdivp
jo
int3
scas
scas
out
cli
lea
mov
jmp
mov
add
dec
repnz
loopne
inc
cli
es
pop
cmp
mov
dec
mov
jno
and
fwait
inc
push
jecxz
mov
jns
and
ljmp
pushw
je
addl
icebp
push
mov
fidivl
xor
pushl
mov
and
xchg
sahf
lea
pop
xor
test
xlat
sar
lcall
push
movsl
sub
pop
jnp
insl
sub
jecxz
xchg
ds
inc
popa
xchg
and
and
lcall
fdiv
inc
lcall
lods
sub
pop
enter
pop
mov
call
ret
test
jmp
push
xor
lcall
jle
jbe
fmull
adc
stos
bndldx
out
add
push
test
out
jno
lcall
push
pop
push
and
mov
out
loopne
pop
cmpsb
call
out
mov
push
xor
lock
leave
mov
insb
xchg
call
test
js
fdivrs
notb
scas
cmpsl
in
repnz
mov
loope
incl
hlt
inc
jae
xorl
or
fcomps
outsb
push
mov
jl
push
and
addl
pop
repnz
xchg
dec
or
mov
int3
das
ljmp
xadd
mov
loop
push
adc
inc
sbb
mov
in
and
pushl
jmp
and
ds
mov
dec
xor
mov
mov
outsl
mov
cli
call
add
aam
push
push
movsl
movsl
cli
aad
cmpsl
insl
add
ljmp
incl
pop
add
rcr
int3
out
sbb
aaa
aaa
push
lahf
mov
or
mov
fcomip
xchg
movsl
push
cmp
cmp
sbb
pop
ljmp
xchg
jecxz
xchg
dec
sbb
jb
pop
mov
rcll
and
cmp
fsub
test
incl
shll
das
test
mov
push
xchg
sarl
shlb
loop
jmp
je
pop
push
in
in
add
out
xchg
ds
ljmp
clc
mov
add
in
outsb
fdivrl
cmp
addr16
clc
jbe
lcall
out
add
jne
jo
jg
test
xchg
cmc
sbbb
inc
or
mov
pushf
cs
out
xor
lock
add
hlt
sti
mov
mov
pop
cmc
pop
sahf
pop
fwait
nop
sbb
addr16
cmpsl
mov
inc
pop
loope
cmp
test
decl
rcll
fs
cmp
jo
insl
jnp
loope
push
add
pop
hlt
sbb
xor
xor
int
popf
loopne
repz
jmp
adc
shlb
xchg
ja
and
clc
jno
push
cmp
in
dec
lret
sub
dec
pop
add
lcall
pminsw
out
out
or
push
aad
shlb
bound
loope
cld
icebp
fidivl
ljmp
adc
daa
or
mov
sti
jne
jg
dec
inc
xchg
or
cmp
ljmp
call
pop
or
cmp
mov
inc
ja
negb
inc
pop
sub
jae
and
jbe
jg
xchg
or
sbb
push
scas
cli
cmp
decb
test
pushl
test
jl
mov
stos
pop
add
dec
cltd
pop
mov
jb
das
aaa
test
shrb
inc
into
ljmp
ja
divl
jmp
jle
cwtl
ljmp
fwait
movb
fwait
jae
arpl
dec
or
mov
shlb
orb
ret
sahf
jb
ret
call
mov
addr16
push
dec
lret
mov
inc
cmp
jno
mov
mov
add
mov
sbb
orl
mov
mov
icebp
xor
hlt
xor
mov
jl
leave
cmpsl
sbb
sbbb
push
jg
xchg
dec
iret
pop
jmp
addr16
jl
into
adc
inc
dec
scas
aad
stc
cmp
ret
in
xchg
ss
ljmp
dec
xchg
jns
out
in
lods
andl
cmp
daa
jo
test
mov
je
lods
mov
mulb
out
in
jb
mov
adc
mov
mov
pop
pop
sbb
inc
dec
lods
in
or
cwtl
push
fisubrs
cmp
pop
lds
lock
jge
filds
cmp
mov
pop
ja
popf
pushl
cld
jbe
pop
pop
mov
cmc
imul
push
sub
decl
xchg
test
sbbb
jecxz
shlb
xchg
popa
cmp
inc
pushl
jle
out
lret
cwtl
ret
enter
popa
push
jmp
addl
add
fwait
ss
scas
lock
es
jbe
sub
cmp
jecxz
mov
repz
decl
bound
cli
cmpsb
sahf
adc
xchg
sub
pop
xchg
mov
leave
movb
cwtl
movsb
pop
mov
sub
arpl
clc
and
jb
or
addr16
inc
dec
outsl
iret
cwtl
repnz
mov
fwait
aaa
pop
or
int3
cltd
push
pop
out
nop
aaa
jg
fmuls
rcrb
mov
jmp
icebp
dec
xlat
rcl
int
jbe
dec
push
call
jbe
pusha
in
push
add
call
sti
jge
repnz
and
int
cli
iret
iret
or
cmpsb
lcall
and
push
pop
ss
sbb
mov
sub
gs
lock
and
jns
push
lcall
xor
cld
push
les
and
push
adc
push
arpl
jg
ljmp
int
mov
cmp
mov
xchg
add
and
ror
cmc
incl
sbb
ret
js
jp
mov
lea
cmc
fwait
sar
or
and
out
add
iret
pushl
xlat
jecxz
lcall
aad
ss
cmp
push
mov
cmp
adc
mov
push
nop
adc
into
add
jecxz
mov
in
lods
cwtl
pusha
mov
sub
int3
lret
push
outsb
popf
pop
push
leave
xchg
imul
stc
pop
xor
out
sub
call
mov
push
xchg
xchg
and
dec
inc
scas
or
stos
das
dec
aaa
fs
pop
ficoml
pusha
std
adc
outsl
inc
add
pop
mov
push
dec
jecxz
not
add
xor
and
pop
aam
sub
and
stc
sub
fildll
mov
repnz
adc
call
push
lods
rorl
in
cmc
jb
test
rorl
out
jp
xchg
scas
mov
ljmp
js
jae
ret
scas
gs
lahf
push
setg
push
scas
mov
subb
dec
sar
call
nop
bound
aad
dec
inc
xor
movsl
gs
jmp
and
cmp
stos
je
add
mov
inc
imul
lcall
incl
dec
inc
jb
es
add
out
ljmp
push
sbb
jmp
mov
sub
xor
mov
nop
mov
sub
aam
incl
loop
orb
or
and
out
or
push
mul
cmp
adc
xchg
push
jo
stos
popf
mov
ret
mov
scas
mov
sbb
dec
fcmovb
push
in
ljmp
fdivr
mov
push
dec
enter
jnp
test
sbb
out
inc
add
and
pop
jnp
cmp
fs
js
lahf
pop
rcr
add
mov
incl
popa
sbbl
push
bound
mov
cmp
jmp
push
sar
dec
out
cmpsl
fwait
movsl
cmpsl
popa
jmp
mov
test
imul
ljmp
mov
out
jb
cmpsb
cwtl
push
jp
pop
jg,pn
add
xchg
and
jg
dec
jp
or
loopne
cmc
lcall
mov
into
in
fsts
and
push
std
mov
sarb
repnz
or
cmp
mov
pusha
pushl
fcomi
daa
into
sahf
inc
scas
push
movsl
out
iret
ss
in
in
sbb
call
push
std
push
fwait
adc
cmp
andl
inc
dec
push
xchg
jmp
push
push
sahf
push
movsb
dec
fisttps
mov
das
scas
fisubrs
push
push
sbb
cmp
addb
adc
pop
iret
or
mov
cmc
or
mov
cmp
inc
ljmp
out
scas
daa
push
lahf
dec
xlat
mov
insb
mov
popa
and
mov
daa
and
sbb
jmp
inc
fnstcw
push
add
push
push
jne
movsl
pop
cmp
push
pusha
adc
rclb
call
cmp
jmp
dec
pop
popa
xchg
xor
int3
fsubrl
sahf
mov
sbb
stos
cmp
cmp
jle
int
add
push
mov
rolb
push
das
std
decl
jmp
ja
or
in
pop
bound
pop
aam
rol
enter
cmp
call
imul
idivb
mov
je
std
dec
add
lea
xor
mov
cli
mov
push
sbb
push
out
sbb
sub
jg
lret
lcall
pop
cld
jnp
and
jmp
dec
orb
mov
cmp
mov
mov
adc
negb
push
xchg
sub
and
decl
push
add
xor
add
ljmp
ret
jo
xor
adc
jne
sbb
sti
inc
hlt
mov
lods
lahf
lods
inc
mov
mov
push
xor
jle
push
xchg
mov
mov
jno
setae
incl
jmp
dec
push
or
pop
iret
inc
loopne
push
dec
adc
mov
movsb
lcall
das
clc
fistl
incb
shl
pop
push
add
sbb
pop
xor
xchg
cli
loop
scas
sbb
adc
incl
stos
mov
dec
bound
ljmp
adc
ljmp
ss
test
push
movsb
gs
xor
and
mov
push
and
push
jecxz
sbb
loop
loope
call
out
ss
mov
leave
in
cmp
fisubrs
imul
call
sub
outsb
cmp
cmp
cwtl
lahf
xor
shl
dec
adcl
rorl
movsl
add
sub
andb
ud0
jns
ja
push
test
dec
adc
push
jns
je
popa
rcr
pop
sub
out
mov
ljmp
popl
scas
mov
repz
loop
fsubs
lcall
lahf
cltd
int
or
aas
in
shll
pushl
mov
xor
push
jecxz
les
fsubrl
mov
fnstenv
lcall
stos
cs
call
enter
insl
jb
mov
jge
mov
mov
pop
adc
xor
popf
out
xor
inc
in
andb
mov
cmp
jnp
fs
adc
push
int3
cmp
and
adc
sub
inc
add
cmp
mov
jmp
inc
shr
call
jne
mov
sbb
dec
enter
pushf
jge
sti
out
and
fdivrp
ljmp
mov
dec
pop
insl
fbstp
mov
aad
mov
fdivrl
jp
mov
mov
push
dec
out
push
push
or
ds
ss
push
pop
jns
push
or
lea
lock
mov
xchg
sub
push
xchg
cmp
sub
mov
push
push
jae
nop
aam
fmull
pusha
adc
adc
aaa
and
ljmp
pop
sbb
xlat
adc
dec
add
push
aad
xor
mov
push
inc
add
decl
xor
mov
pop
int
xor
dec
push
pop
mov
call
jg
hlt
pop
xor
inc
movsb
pusha
mov
mov
fwait
sbb
test
mov
cld
aas
push
mov
pop
lock
call
push
fs
stos
sbb
pop
fstpt
mov
dec
push
mov
push
or
jg
incl
add
xorl
mov
cmp
lret
sub
add
inc
xor
insb
leave
icebp
movsl
inc
idivb
cs
loop
and
sbb
push
pop
clc
sahf
fwait
mov
lcall
incl
add
and
jne
loopne
mov
test
movsb
inc
and
pop
cmp
loop
sbb
je
and
lods
lcall
xchg
shrl
dec
scas
and
lock
add
mov
sub
dec
mov
mov
mov
pop
fstl
shll
iret
movsb
into
push
jp
add
inc
call
loopne
shl
outsl
or
clc
outsb
cmc
cmpsb
js
jp
jae
add
xchg
cmp
jecxz
pop
and
adc
adc
lods
jl
rcrl
enter
xchg
scas
clc
push
pop
imull
or
jns
push
decb
ret
insb
ficomps
incl
stos
xchg
and
or
add
mov
cld
lcall
pop
andb
fs
insl
pop
repz
pop
mov
push
fnstsw
push
out
sbb
mov
sbb
sub
rorl
shll
cltd
and
insl
add
xchg
icebp
shll
pop
ja
test
insl
jae
push
std
arpl
ljmp
popf
js
jge
lcall
mov
jae
les
fcmovbe
sbb
push
mov
stc
andl
push
adc
ret
jnp
and
aad
out
insb
jg
jecxz
enter
aad
cli
push
dec
fucomi
addl
sbb
mov
call
les
jno
jl
aad
test
xchg
push
push
pushl
enter
or
or
jle
pop
sub
cmp
xchg
jle
sbb
push
mov
sub
test
and
std
call
xor
cmpsl
stos
mov
inc
xchg
stos
loope
lods
into
pop
add
pushl
sbb
sub
ja
sarl
outsl
mov
fists
stos
lret
daa
sub
pop
xchg
scas
call
jecxz
pop
push
dec
mov
sbb
into
sahf
scas
mov
scas
mov
loopne
or
call
jmp
and
cld
mov
cld
gs
jl
push
sbb
xor
cli
in
xor
jmp
adc
rep
jl
icebp
shr
cltd
cmp
in
mov
je
push
adc
inc
and
push
imul
addr16
cmpsb
mov
outsl
lods
jo
or
mov
mov
in
dec
jmp
cltd
push
stos
pushf
inc
adc
pop
std
push
xchg
mov
add
jle
add
jp
inc
xlat
in
pop
mov
push
arpl
aam
rorl
pop
outsb
xlat
mov
cld
cmp
scas
xchg
jmp
mov
push
cs
imul
imull
push
push
mov
push
push
cmp
push
jno
ljmp
sub
data16
and
mov
dec
pop
enter
cmp
lds
pushl
pop
jo
lds
inc
sub
jnp
sbb
mov
cli
outsb
stos
sub
xor
je
lcall
push
shlb
inc
daa
xor
fwait
lahf
sbb
rorb
adc
sub
xor
xchg
jl
mov
sub
jne
call
cmp
adc
std
inc
pop
xchg
adc
ss
icebp
addr16
inc
mov
call
adc
pop
in
lret
inc
pop
push
adc
shl
xchg
daa
xchg
test
fdivrs
call
mov
mov
lcall
cmp
aam
dec
aas
ror
pop
loopne
push
cmp
mov
cmp
mov
dec
inc
rcr
dec
mul
std
sub
dec
jg
dec
push
test
mov
les
out
push
outsl
loop
inc
je
ljmp
inc
mov
cld
aam
or
lea
les
not
or
in
sub
jno
xchg
adc
in
xlat
or
push
sub
out
cmp
gs
sub
fildll
pop
movsl
jo
repnz
sub
sarl
decl
in
dec
dec
shlb
xacquire
std
mov
lcall
into
mov
or
lea
lret
jmp
es
jle
dec
cmc
movsl
inc
in
inc
push
and
cltd
pop
xor
pop
aad
mov
adcb
loope
mov
pop
sub
cmpsl
jnp
inc
call
ficomps
mov
inc
push
stos
scas
xor
fcoml
inc
cmp
mov
mov
mov
sbb
in
stos
mulb
imul
pop
ds
call
in
mov
mov
sub
dec
jle
insl
mov
stos
mov
mov
dec
ds
cld
lods
enter
inc
sub
push
pushf
sub
xor
sbb
pushl
test
lahf
fnstenv
je
dec
imul
insl
cmp
ss
pop
pop
cmpsl
je
mov
jp
mov
mov
pop
mov
clc
mov
fcomps
in
pop
adc
cli
leave
lcall
std
pop
jne
push
fs
pushl
data16
xchg
ja
push
pop
arpl
mov
mov
adc
xor
incl
std
jnp
mov
mov
rcll
js
push
dec
pop
ficoml
call
xchg
xchg
cmp
ror
imul
cmp
pop
mov
je
adc
pusha
jg
push
pop
or
popa
jle
add
push
mov
sbb
imul
lock
call
xchg
notl
jle
es
push
mov
mov
pop
int
adc
je
cmc
xchg
ljmp
jb
fldt
imul
xor
imul
outsl
and
lcall
xchg
enter
adc
idivb
push
jbe
and
sbb
jg
ljmp
mov
and
sub
stos
jne
xchg
sbb
xor
dec
cmp
sub
lahf
jp
pop
hlt
ljmp
add
inc
inc
mov
imul
adc
or
dec
mov
outsb
jne
and
adc
xor
jecxz
iret
bt
idiv
lcall
stos
xor
push
mov
movsl
fists
data16
pop
mov
pushl
adc
test
out
xor
push
mov
mov
jmp
dec
sub
mov
shrl
adcb
or
div
pop
sub
jmp
adc
xchg
xor
fucomp
inc
out
xor
movsb
bound
pop
jg
push
aaa
or
ljmp
sub
fisttps
fstpt
pop
dec
inc
or
in
cli
cmp
ret
add
divb
sbb
mov
ljmp
shl
or
mov
mov
sbb
dec
adc
cmp
ret
cmpb
incl
mov
addr16
fs
gs
enter
imul
pop
fbld
lock
jmp
nop
cmp
mov
mov
ret
hlt
cmp
xor
mov
ret
xchg
pop
hlt
cli
or
rcr
enter
pop
mov
lods
mov
shr
flds
push
int
std
cmpb
pop
rorl
popf
mov
mov
and
ret
rclb
incl
pop
mov
sbb
push
in
or
mov
into
mov
cld
out
xchg
ror
sbb
push
sti
push
mov
sub
test
in
inc
scas
mov
adc
mov
jmp
pop
xchg
in
test
push
test
or
xor
mov
xchg
clc
pop
pushf
movsl
ret
cmp
jo
mov
int3
sbb
movsl
js
fnstcw
insb
mov
fisttpl
jno
adc
movsb
data16
xor
push
cmc
jbe
shrb
out
lcall
xchg
push
jno
jne
gs
lods
and
in
les
mov
pop
das
add
stos
lcall
ret
sub
repnz
out
sti
das
and
imul
pushl
loopne
dec
lods
mov
rorl
pop
sbb
pop
stc
mov
loopne
ss
jmp
aaa
jg
daa
les
movsb
insb
cmp
stos
rcll
inc
jle
mov
mov
ljmp
inc
insb
dec
lods
inc
fldenv
sbb
scas
test
pusha
jl
leave
sbb
mov
xor
enter
jb
and
mov
cmp
incl
or
fmull
sub
mov
lock
jb
int3
pushl
incl
das
inc
arpl
jno
inc
enter
je
mov
ret
sarl
jmp
stos
inc
push
loopne
and
xchg
pop
aad
insl
pop
dec
sbb
ljmp
scas
mov
cli
scas
les
xor
lods
pushl
xchg
addr16
push
push
notb
vunpckhpd
xchg
arpl
inc
mov
outsl
clc
pop
jg
iret
ret
adc
add
adc
rdmsr
arpl
jg
jl
xchg
mov
adc
ret
in
mov
stc
lret
sbb
repz
clc
rcll
cmp
mov
pushf
test
pop
gs
pop
in
mov
test
iret
decl
dec
add
sub
daa
fadd
movq
dec
rclb
cltd
shll
sub
cld
ljmp
add
aam
clc
repnz
aad
and
or
lods
push
adc
mov
out
jo
daa
ljmp
sbb
rorb
or
js
sbb
add
call
adc
cmp
test
insl
push
sub
imul
xchg
cmp
cmp
je
decl
add
outsb
mov
adc
jnp
push
jp
sbbb
pop
into
ljmp
and
dec
or
test
call
imul
repz
mov
pop
movsl
gs
jae
loope
out
xchg
push
mov
fldcw
das
and
push
das
xchg
jo
sub
adc
cld
push
pusha
dec
test
mov
scas
dec
cs
sbbb
pushf
insl
mov
xor
shrl
decl
xlat
cmp
mov
call
lret
xchg
test
cmp
push
repnz
jmp
fildl
cmpsl
add
test
cmpb
adc
sarl
ja
add
sbb
sti
lds
xchg
lret
dec
icebp
mov
popf
rclb
mov
add
decl
in
stos
lods
lcall
xchg
xor
sub
decl
xor
jmp
mov
push
xchg
leave
mov
cli
and
in
cmp
lret
inc
test
cmp
ficoml
or
jmp
dec
jnp
mov
xor
stc
dec
mov
xchg
mov
cmp
dec
add
std
fidivl
dec
pop
xor
das
in
xchg
xor
rol
mov
clc
mov
pop
sahf
mov
incl
outsb
fisubrs
and
imul
push
or
sbb
adc
dec
mov
mov
sbb
mov
push
ja
ja
stos
or
sahf
bound
mov
subl
jb
or
and
mov
call
and
lock
aad
jg
in
cs
and
cltd
push
sbb
mov
inc
scas
pop
xchg
enter
fcmovnu
aad
ud0
clc
cmp
push
out
push
mov
test
mov
lcall
mov
movsl
push
jno
into
or
push
pusha
inc
je
mov
mov
lods
fsubl
call
xor
jne
mov
lock
mov
xchg
cmp
popa
ljmp
ljmp
sub
xor
inc
or
sub
cmp
sbb
in
jmp
xchg
xchg
cltd
mov
pop
mov
or
add
xor
mov
lcall
ds
mov
sub
jecxz
cmp
divb
stos
cmp
lret
xchg
adc
lods
decl
and
xlat
mov
jle
les
mov
in
jecxz
push
sbb
jmp
lods
add
xchg
mov
ret
dec
imul
pop
adc
ja
pushf
xor
lds
aad
lock
lcall
and
hlt
aam
lahf
clc
jle
jmp
pop
outsb
dec
push
sbb
dec
test
mov
aam
movsl
xor
push
or
outsl
shr
bound
in
lret
lods
xor
decl
in
jge
pushf
jmp
adc
cmpsl
scas
xchg
or
push
dec
bound
es
test
xchg
xchg
stos
inc
das
lods
mov
inc
cwtl
xchg
inc
imul
ljmp
inc
inc
shlb
mov
les
sti
cld
scas
pop
add
fdivr
jmp
inc
leave
jnp
aas
push
mov
xchg
sub
out
add
negl
outsb
ljmp
lcall
icebp
mov
imul
stos
inc
cmc
mov
cmp
fimuls
pushl
add
adc
push
lds
push
jo
or
mov
enter
es
jmp
ret
mov
pandn
xchg
inc
mov
cld
jl
filds
shll
in
testb
dec
or
sub
call
pop
int
cmp
out
cli
dec
dec
and
push
pop
or
push
cmp
adc
incb
jge
xchg
adc
mov
das
xor
lock
call
dec
arpl
lcall
loope
out
push
call
out
loopne
jl
fildl
sbb
aam
mov
aam
lcall
push
cmp
lcall
enter
sub
adc
faddl
mov
xchg
xchg
in
or
sti
adc
xorl
pop
dec
xchg
out
cmpsl
xchg
bound
cmpsl
adc
mov
inc
sbb
and
or
bound
sub
xchg
push
add
mov
inc
or
mov
xchg
hlt
sti
adc
popf
inc
cmp
imul
jne
xchg
or
mov
decl
enter
cmpsb
ds
out
aas
rclb
mulb
stos
mov
repz
jle
ds
pop
add
add
movsb
mov
or
fisttpll
in
call
mov
push
roll
and
loopne
ret
das
call
add
fwait
or
test
lret
ja
lcall
and
mov
jmp
and
adc
mov
ljmp
xchg
mov
and
andl
jo
aad
dec
ljmp
aas
inc
add
mov
mov
loop
icebp
fcompl
adc
rclb
aam
push
in
sub
pushl
jmp
stos
xlat
mov
in
leave
pcmpgtw
ja
ret
ljmp
xchg
incl
flds
mov
cmc
xchg
sbb
add
sub
cwtl
icebp
lock
repz
enter
xor
data16
lods
popa
lret
mov
add
pop
dec
push
add
mov
inc
jmp
mov
or
pop
sub
rcrl
xchg
sti
inc
add
cmc
mov
incl
loop
jmp
decl
loope
adc
aam
push
enter
inc
sub
cwtl
cld
jg
dec
lods
push
mov
mov
or
push
into
add
lcall
jg
adc
ficoml
out
xchg
adc
jo
int
jb
fisubs
sbb
jle
jge
mov
std
sbb
and
mov
mov
jns
mov
or
int
xchg
sbb
les
mov
xchg
jecxz
cmp
decl
add
mov
xlat
jne
ret
fwait
es
fs
testb
push
push
movsb
lret
pusha
fs
into
cli
mov
std
into
mov
xchg
xor
imul
bound
mov
cli
int3
mov
jle
in
out
xchg
dec
fsubrl
pop
std
out
inc
push
xor
ljmp
mov
fcmovnbe
inc
adc
mov
mov
das
jbe
push
int3
push
sub
ja
mov
loop
cmpsl
incl
insl
mov
clc
xor
xchg
daa
sbb
xor
ljmp
test
loopne
or
cmp
lret
int3
cltd
push
push
or
decl
fistps
jo
adc
push
and
sahf
outsl
xchg
les
push
xchg
xor
popa
enter
mov
call
movsl
xor
outsb
shlb
inc
dec
dec
mov
movsb
jae
sbb
or
jmp
lcall
or
and
xor
mov
int3
dec
movb
aas
sbb
jg
mov
mov
pop
mov
push
sbbl
fildll
lea
int3
mov
stc
in
add
nop
mulb
test
out
push
iret
repz
aas
shll
xorb
adc
std
pushl
ss
add
testl
insb
mov
and
dec
adc
icebp
cmp
mov
imul
jbe
arpl
popa
nop
push
mov
cltd
call
les
and
push
es
jo
mov
adc
cmpsl
in
shld
daa
dec
ljmp
pushf
inc
mov
inc
xchg
cmc
sub
scas
xlat
adc
aas
xchg
mov
pop
inc
popf
jns
cmp
pop
jno
out
insb
ss
xor
and
mov
jno
dec
stos
aas
push
aaa
push
jg
fcmovnb
jbe
jge
jbe
movsb
sbb
xor
pop
gs
or
dec
mov
jge
push
fsts
xor
add
jno
lock
adc
repnz
jmp
inc
xchg
mov
cmp
xchg
ret
pop
pop
mov
cs
iret
ret
int
imul
mov
xchg
scas
inc
pop
aaa
mov
or
mov
leave
lcall
pop
add
fildll
insb
or
adc
pop
int3
and
jmp
or
cmp
dec
pusha
loope
sahf
ret
out
push
push
fcomps
xor
fistpll
int3
adc
jg
icebp
pop
loopne
ret
shlb
aam
adc
hlt
lcall
rcrl
aas
mov
scas
test
pop
insb
test
mov
sub
adc
movsl
sub
jmp
xchg
insb
xchg
adc
or
sbb
lcall
scas
pop
pop
lahf
shrb
sub
insl
into
sbb
mov
adc
stc
or
mov
mov
call
outsl
xchg
cmc
mov
imulb
int3
sub
clc
leave
cmc
mov
mov
or
inc
mov
and
sbb
lods
or
mov
mov
and
cmp
lret
aad
inc
or
xchg
inc
push
dec
jbe
push
es
aaa
xchg
cld
jmp
mov
jno
fmuls
movsb
mov
mov
fwait
push
decl
jo
push
lock
les
inc
insl
mov
hlt
pusha
mov
stc
scas
sahf
leave
daa
ficoms
mov
in
push
push
iret
popf
rorb
out
loope
mov
push
add
sbb
frstor
sahf
mov
cmp
jmp
jmp
test
xchg
mov
aaa
scas
and
fs
decl
cmp
arpl
xor
xchg
cmpsb
cltd
pop
pop
xchg
or
dec
jmp
and
notb
nop
cld
fs
lds
nop
or
adc
outsl
adc
leave
nop
jnp
push
fcomp
loopne
pushl
bound
and
dec
xor
or
sbb
push
inc
dec
dec
popf
inc
scas
gs
lods
xchg
rcr
scas
adc
mov
adc
adc
pop
xchg
dec
pusha
cmp
add
mov
mov
test
pusha
cld
std
mov
xlat
sbb
in
es
mov
out
daa
into
or
popa
rolb
mov
int3
ljmp
roll
lcall
aaa
ljmp
mov
nop
cmp
filds
cs
dec
push
mov
sti
and
jl
out
mov
mov
adc
and
clc
stc
jmp
jg
stc
sub
adc
outsb
mov
sub
or
les
pushl
jbe
int3
mov
push
cmpsb
push
xlat
xorb
jae
jo
xchg
jae
icebp
add
rol
jmp
arpl
ljmp
and
fnstenv
repz
test
mov
out
add
ja
mov
dec
pop
ret
fisubrl
outsb
addr16
pop
xchg
fdivs
jl
mov
sub
jg
or
xchg
mov
jo
dec
cmpsl
das
enter
jmp
dec
in
aas
test
int3
add
out
pop
mov
mov
mov
mov
pop
inc
adc
pop
lods
outsb
inc
pop
sub
lcall
push
ja
mov
mov
cmp
add
cmc
shlb
daa
adc
cmp
jge
mov
push
xchg
or
add
incl
pop
mov
test
pop
pop
hlt
and
mov
imul
es
mov
cld
mov
imul
movsb
mov
xor
pushl
fisttpl
arpl
int
cmp
fdivs
sti
and
push
dec
pop
pushl
mov
push
inc
xchg
sub
or
mov
lea
mov
jl
in
dec
sub
test
test
mov
xor
je
mov
loope
adc
fs
incl
std
fsubrp
test
das
pusha
adc
mov
or
shll
decl
call
jne
lret
pop
inc
inc
mov
sbb
pop
test
pushl
stos
cmp
pop
jmp
test
out
or
adc
jl
cmp
xchg
arpl
gs
or
insb
mov
movsb
sbbb
jbe
int
adc
mov
push
fsts
in
xor
js
call
mov
inc
pusha
and
cmp
sbb
dec
arpl
cmpsl
shll
xor
dec
popf
xchg
push
or
pop
out
xchg
adc
xor
xor
sahf
pusha
push
jmp
xorl
test
push
lods
popa
and
pop
cmp
loope
loop
jg
inc
pop
incl
mov
xor
cmp
sub
incl
push
add
mov
fsubrl
sbb
mov
iret
dec
lds
hlt
ja
sub
fwait
adc
jb
sbbb
push
aam
mov
pextrw
add
push
push
pop
clc
movsb
test
sbb
xchg
pop
scas
aam
es
cmc
mov
js
push
dec
jne
adc
ss
inc
shlb
shr
sbb
nop
imul
incl
call
enter
pop
jg
mov
inc
test
and
jge
push
pusha
loope
loop
sbb
insl
dec
sub
and
test
incl
add
add
or
and
dec
cmovp
push
and
push
pop
insb
push
inc
or
dec
add
outsb
idivl
add
jno
lret
addb
in
scas
fs
sub
bound
out
pop
jle
imul
mov
jne
jo
imul
or
push
neg
ss
add
mov
add
mov
push
mov
nop
shlb
and
inc
loope,pn
sub
inc
jb
into
insb
push
sbb
inc
sub
inc
push
push
mov
dec
fs
faddl
dec
pop
and
fists
pop
push
dec
jo
or
int
daa
sbb
xor
dec
push
dec
gs
jg
clc
pop
gs
outsl
outsl
insb
push
outsb
popa
jo
push
xorb
dec
mov
sub
sub
push
or
dec
shlb
push
js
or
rcrl
ret
aaa
or
or
adc
cmp
jns
or
aas
push
incb
popa
jb
test
adc
imul
push
es
ljmp
or
mov
adc
insl
bound
mov
xor
jo
or
add
push
or
inc
jl
loopne
test
sub
imul
insb
stos
sub
jbe
inc
inc
sub
jnp
adc
fnstcw
or
inc
imul
bound
or
pop
ret
out
mov
inc
mov
ret
adc
inc
dec
adc
addl
ds
insb
jne
xchg
jge
fiadds
xchg
dec
push
xor
cld
mov
imul
outsl
stos
clc
sbb
jo
inc
push
fildl
or
inc
push
mov
push
mov
sarl
and
roll
push
adc
test
pop
jb
into
pusha
clc
movsl
subl
jns
mov
fiaddl
faddl
xchg
adc
jbe
js
xchg
push
push
push
hlt
fs
mov
jecxz
std
mov
notl
dec
cmp
sbb
or
sbb
insb
shll
fldcw
mov
push
inc
or
dec
jle
dec
push
pop
pop
adc
sub
mov
inc
shrl
pop
xchg
mov
outsl
rol
and
adc
jo
mov
stos
lock
insl
and
fldl
push
sub
mov
inc
mov
jecxz
push
mov
sub
adc
pop
or
outsl
data16
test
shlb
lret
mov
mov
popa
and
out
and
fwait
das
ljmp
jno
pushf
inc
or
pop
dec
inc
dec
repz
sbb
adc
or
pop
out
add
sbb
xchg
test
lahf
mov
repz
xchg
scas
dec
mov
lods
xor
js
sbb
mov
ret
stos
pop
push
adcb
and
rcrl
cmp
and
inc
popa
xchg
pushf
jnp
jo
jp
popa
insb
test
push
push
jg
and
mov
sbb
add
xorl
cmp
aam
pop
xchg
or
pop
test
or
dec
push
push
js
or
into
cs
jmp
insl
aaa
and
stos
mov
outsl
jns
inc
je
fisubs
adc
push
inc
inc
out
mov
and
sti
xlat
push
and
dec
mov
sbb
adc
or
rcr
xchg
jno
insl
cmp
cmp
sub
push
es
mov
add
xor
or
icebp
iret
loopne
xchg
stos
loope
xor
enter
cmp
or
push
xchg
or
inc
or
pop
add
test
pop
aaa
cmp
aam
adcb
inc
dec
xchg
add
and
pushf
pop
xchg
js
jne
inc
fmuls
addl
inc
cmc
push
fbld
jecxz
scas
and
add
xor
mov
pop
popa
add
sub
insb
test
rol
mov
outsl
inc
seta
jg
mov
mov
sub
inc
adc
imul
scas
pop
sbb
pop
outsb
push
outsl
add
add
xor
pop
ret
adc
jo
fidivl
jne
rcl
and
gs
jne
xor
mov
stos
xchg
mov
outsb
or
inc
arpl
sti
mov
xchg
loop
js
cmp
dec
or
and
ret
arpl
jb
out
mov
aaa
push
pop
cmp
cwtl
add
pop
addl
loopne
push
mov
sbb
mov
outsb
adc
sbb
cmp
pop
or
test
fimuls
lret
add
xlat
sbb
sahf
and
push
outsl
xor
jb
test
test
fstpt
jmp
lods
jo
inc
inc
int
push
arpl
rorl
inc
imul
jge
sbb
mov
mov
mov
inc
insb
notl
out
outsb
inc
insb
jle
cmovnp
xchg
cmpsl
inc
mov
stos
fs
jmp
movsb
jae
xor
or
adc
nop
iret
mov
scas
jns
push
lds
pop
adc
jns
pop
push
and
xor
sbb
cmp
jns
or
inc
push
shll
mov
push
pop
xor
dec
adc
shlb
mov
jnp
imulb
push
push
adc
and
dec
in
lods
sbb
cmp
xor
scas
jnp
or
dec
outsb
dec
adc
jnp
ss
jg
jl
sar
pop
add
add
mov
cmpsb
imul
movsb
dec
xor
shll
movhps
push
xchg
mov
xor
addb
pop
adc
in
push
ret
inc
rcrl
inc
jb
and
and
sub
inc
popa
push
push
cwtl
jge
dec
movsb
bound
or
dec
xor
out
inc
jb
push
push
std
push
jb
inc
jae
inc
leave
adc
daa
ss
jo
imul
jo
pop
insb
push
lcall
orl
rclb
cmc
add
les
xor
or
ret
or
adc
mov
lods
inc
or
sbb
and
inc
xor
loope
lret
mov
xchg
jns
push
aad
daa
jb
fstpl
or
test
push
xchg
dec
adc
loope
fbld
pop
fxch
int3
test
mov
and
and
sbb
sbb
inc
xor
lods
fsubl
fs
rorl
pop
jo
mov
push
pop
inc
movsl
addb
mov
xlat
shl
lods
push
mov
pop
xchg
int3
mov
or
int3
and
or
adc
mov
fs
dec
sub
xchg
jo
cwtl
dec
push
adc
sbb
or
mov
outsb
push
push
fcoml
lret
add
xor
mov
ja
popw
in
mov
inc
or
sub
xchg
lods
pop
and
dec
insl
jecxz
test
or
jnp
mov
and
or
sbb
inc
lds
mov
xchg
inc
and
push
push
push
inc
and
in
xchg
fildl
outsl
jp
enter
test
loop
xchg
ss
shrl
mov
test
loop
push
pusha
jno
stos
js
jecxz
add
das
sbb
add
bound
test
add
int
cmp
pop
aad
xor
jns
scas
shlb
push
cltd
nop
inc
push
fs
mov
fs
cmp
xor
push
dec
inc
test
sub
pop
aad
ds
add
or
cmp
loopne
add
cmovno
repnz
fimuls
aam
popa
or
push
push
inc
out
adc
add
sub
xchg
push
inc
pop
xchg
dec
push
or
dec
jae
mov
out
int3
rcrb
int3
add
dec
xchg
push
pop
mov
fstpl
add
jmp
jg
das
int
imul
sbb
adc
jp
push
dec
inc
cmp
aad
mov
add
ja
outsl
pop
cs
dec
xchg
loopne
sub
and
or
or
add
sti
xchg
testb
dec
dec
add
adc
add
pop
in
ror
add
jnp
pop
cmp
or
adcb
pop
fiaddl
or
inc
mov
push
pusha
pop
int3
xchg
xchg
or
mov
dec
pop
jle
dec
mov
pop
cs
mov
femms
and
add
and
jb,pn
popa
adc
push
hlt
ficoms
inc
cs
adc
int
xor
out
add
rcrb
out
xchg
mov
push
lahf
add
es
out
roll
add
xchg
and
add
test
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
