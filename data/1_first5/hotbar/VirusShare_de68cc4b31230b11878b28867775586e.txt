fcomp
decl
push
jns
add
mov
or
and
sub
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
testl
pmaxub
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
fcomip
ja
mov
push
or
xor
push
subps
das
dec
jb
outsb
push
mov
mov
mov
push
notl
sbb
push
and
push
cmp
push
add
into
sbb
add
cs
dec
cltd
adc
bnd
pop
mov
push
xchg
dec
add
cmp
je
sbb
jle
add
push
adc
lock
dec
add
cmp
adc
push
xor
sub
lods
mov
push
and
push
xchg
or
push
sbb
xchg
push
push
adc
mov
adc
data16
mov
rcr
cmp
xor
lret
bound
test
push
add
loopne
ret
fists
dec
and
push
or
push
nop
and
lcall
ds
ja
mov
loope
push
or
insb
mov
dec
add
ss
iret
add
int3
adc
in
mov
sete
pop
adc
push
into
xchg
push
push
into
nop
or
mov
mov
mov
pop
cmpsb
jbe
xlat
cmp
push
lahf
ss
les
add
push
adc
punpckhbw
or
lds
push
inc
pusha
dec
jnp
adcl
data16
inc
mov
das
add
mov
fwait
push
loopne
imulb
insb
push
aam
xor
mov
push
daa
sbb
lock
aam
sbb
xchg
fdivl
sub
dec
push
mov
lea
imull
adc
jl
pop
sahf
iret
and
add
sbb
add
repnz
mov
xor
negb
sub
sub
pop
jg
jmp
mov
and
mov
test
dec
push
lea
and
jg
cmp
jge
mov
movsb
pop
pop
cmpsb
mov
jp
ja
pop
ret
xor
adc
dec
push
fwait
sub
sub
add
loop
ret
and
jl
je
fdivrl
adc
pushf
inc
les
ja
cld
or
lahf
cmp
jae
fisttps
test
clc
mov
sub
push
mov
sub
js
fldenv
mulb
mov
jmp
add
xor
inc
and
add
mov
inc
xor
and
push
int
dec
mov
push
add
dec
ficomps
push
sahf
cmpsb
push
iret
je
dec
aaa
bound
das
out
sbb
jo
and
lock
in
dec
inc
movswl
adc
int3
push
add
call
inc
mov
andb
aas
fstpl
inc
addr16
or
pusha
push
push
push
xchg
sbb
xor
cld
mov
inc
hlt
nop
test
jnp
dec
mull
dec
hlt
mov
or
add
dec
push
dec
lds
push
xor
pop
pop
pop
and
xchg
js
or
roll
xor
xor
add
setg
imul
ret
in
lea
push
add
lods
cltd
fistps
ds
xor
jge
sbb
scas
push
subb
lock
aas
jg
dec
or
test
push
adc
adc
fsubrl
push
sbb
pop
add
and
mov
adc
stos
in
jb
sub
fs
pop
sbb
jb
push
and
pop
and
lahf
lock
jl
scas
das
xor
jne
fsubrl
cmp
mov
pusha
push
push
es
in
les
or
push
add
out
add
cmp
or
arpl
cmp
mov
xor
mov
push
pusha
sub
pslld
jmp
rolb
inc
leave
lds
and
or
and
and
add
aad
sbb
roll
push
pop
insb
pop
jns
out
imul
push
cmp
jmp
inc
or
push
mov
in
xchg
hlt
pop
punpckhbw
jne
mov
inc
into
rorl
jne
push
jle
push
xchg
inc
or
jecxz
add
scas
sbb
outsl
or
push
mov
push
cld
add
dec
shrb
mov
fdivr
les
fs
jb
push
inc
and
and
int
pop
push
push
or
or
xor
icebp
mov
cli
cmpsb
jo
push
ljmp
fmuls
and
mov
jl
scas
dec
push
cmp
cmpsl
scas
cmp
push
inc
pop
dec
inc
mov
movsl
loop
nopl
std
fists
and
mov
push
fsub
add
push
sbb
and
fsub
inc
pop
jle
test
xchg
sbb
xlat
mov
sti
mov
mov
jmp
icebp
sbb
push
jecxz
jecxz
int
inc
jle
mov
push
push
or
lcall
adc
cwtl
xor
inc
movb
out
sti
add
push
mov
data16
mov
inc
cld
mov
add
mov
out
xor
push
sub
cmpsl
xor
pusha
mov
shrb
adc
rcrl
inc
mov
cmp
mov
imul
jno
xor
icebp
clc
jbe
cmp
or
bound
fmull
mov
or
mov
cmp
call
push
test
fisubl
pushf
inc
decb
jp
jae
lock
mov
fdivr
push
out
cmpl
je
adc
repz
test
adc
test
je
push
xor
fcoml
push
push
shlb
icebp
add
movsl
dec
test
dec
pop
mov
int3
push
cmp
mov
sub
jb
and
ficoms
mov
xchg
int3
xchg
test
notb
jle
and
dec
adc
das
cltd
das
iret
sbb
data16
jecxz
add
adc
cmp
and
xchg
scas
inc
mov
and
in
push
mov
adc
sub
ret
aaa
push
orl
sbb
add
xchg
cmp
jb
jl
aad
sbb
dec
push
cmp
and
cmp
dec
movsl
xchg
jne
push
dec
sub
adc
sub
in
jg
push
bound
cli
jmp
cmc
lea
insb
mov
jg
mov
mov
int3
sub
iret
add
mov
adc
lcall
sub
sub
sub
pop
sub
mov
ja
cmp
xchg
adc
sub
cmp
imul
cmp
jmp
jns
inc
inc
add
insb
cmp
and
cmp
jne
mov
dec
dec
xor
inc
xor
inc
lods
sbb
push
out
test
xor
je
sub
cmp
je
ljmp
leave
sbb
or
enter
sbb
das
and
mov
test
xchg
inc
mov
dec
adc
pushf
cltd
mov
pop
add
pop
jg
add
cmp
xchg
js
push
incl
lock
pushf
sbb
sub
popl
ss
push
fistps
call
adc
adc
mov
call
inc
cmp
jl
xlat
ret
fisttpll
outsb
pop
push
push
sub
push
js
jne
inc
subl
add
xor
push
mov
adc
movsb
add
xchg
push
rclb
sbb
push
cmpsb
push
jle
sti
sbb
and
jne
movzwl
in
mov
mov
je
push
xchg
into
jg
outsl
jg
sbb
mov
lea
add
inc
xchg
jl
test
jne
sub
push
push
inc
sbb
pop
xchg
adc
pop
in
or
push
cwtl
icebp
stc
jo
pop
push
add
stc
mov
xor
jne
shlb
out
lea
fidivl
loopne
cmp
or
add
add
jge
xor
and
push
mov
cmp
jl
mov
jle
lock
cmp
insb
pop
pop
ret
mov
xchg
inc
das
sbb
sub
cmovg
or
jl
rcrl
pop
rcrb
loope
lock
movsl
pop
jne
pop
fcmovu
sbb
imul
js
or
mov
push
mov
adc
pop
cmp
loopne
orb
outsb
mov
mov
call
jge
push
call
mov
or
clc
jle
mov
xchg
clc
mov
cmp
pop
cld
in
sti
mov
je
push
cld
lea
push
or
cmp
mov
push
fcoml
ds
ja
clc
push
cmc
add
call
push
push
add
push
push
push
lock
mov
mov
jo
jg
mov
dec
mov
add
add
enter
mov
icebp
mov
sub
in
pop
jbe
je
cmpl
sub
pop
sub
add
ror
adc
movw
pop
or
push
jo
pop
ret
xchg
mov
ss
adc
cmp
push
dec
push
fsub
loope
rclb
les
cmp
jb
cmp
push
ds
jne
or
ret
mov
jp
testl
or
lret
repz
clc
mov
cld
cmp
ja
push
clc
lea
push
push
push
mov
sbb
dec
jmp
xor
push
add
pop
or
imul
lds
mov
cmp
aaa
loop
test
sbbl
add
inc
loopne
stos
add
sbb
push
push
push
clc
loop
add
arpl
push
push
push
or
pop
test
mov
push
push
lea
add
jne
add
dec
cmp
lcall
xlat
or
or
push
bswap
sub
or
adc
pop
sarl
add
jecxz
lods
ret
mov
mov
sarl
fwait
mov
mov
pop
mov
ljmp
dec
mov
je
cltd
pop
outsl
xchg
imul
mov
aaa
movsb
cmpl
cmp
je
cmpl
lea
jl
mov
push
jne
push
jns
push
imul
enter
test
push
int3
loop
sub
fcomi
out
and
hlt
push
push
mov
sbb
fsubrs
rclb
mov
inc
inc
or
inc
or
sbb
pusha
inc
xor
fwait
loop
dec
hlt
rcrb
add
out
js
ret
or
fisubrl
dec
jo
push
stos
hlt
fs
rorb
or
jb
lret
push
adc
xor
cmp
pop
push
icebp
ret
in
push
test
dec
add
arpl
dec
jb
adc
loope
mov
ljmp
sub
dec
push
ja
add
add
fdivrl
mov
sub
pop
push
push
sub
xor
js
clc
mov
lds
push
push
mov
mov
xor
stos
mov
loop
adc
lret
lods
xchg
mov
loopne
call
xchg
sarl
jge
call
lea
xchg
push
nop
adc
push
xor
pop
mov
lea
test
nop
pop
sub
inc
mov
in
add
push
push
pop
fisubl
mov
repnz
loop
pop
jle
mov
jmp
lcall
add
jle
add
shlb
ret
or
pop
pushf
movsl
jg
mov
dec
into
adc
push
idivl
js
scas
das
xor
pop
ret
mov
or
les
rcr
add
mov
mov
or
add
test
in
ret
push
jae
scas
pop
pop
daa
mov
hlt
push
or
push
jle
mov
mov
fiaddl
pop
xor
push
dec
jbe
push
hlt
sbb
in
cmp
cli
lret
rol
pop
sub
stc
rorl
or
ret
cmp
rorl
or
mov
jb
add
lock
mov
jecxz
mov
lahf
inc
mov
mov
push
lea
add
push
add
push
push
mov
inc
test
mulb
and
mov
addr16
or
jp
add
xor
inc
aad
or
sub
fdivl
or
mov
pop
or
addps
push
jo
cmp
jmp
rclb
pop
xor
mov
pop
pop
aas
jnp
subb
push
mov
xchg
jmp
xchg
or
sbb
pushf
sub
les
js
mov
cltd
inc
notb
cmp
mov
scas
dec
cmp
dec
and
dec
or
push
lea
xchg
sbb
mov
negb
je
ficoml
aaa
adc
les
subl
xchg
divl
mov
sbb
mov
or
enter
add
sbb
jg
test
cmp
jne
xor
push
push
dec
outsb
adc
add
jl
xlat
push
lea
mov
inc
cmp
ds
inc
in
cwtl
jle
pop
mov
push
jl
imul
pop
mov
aas
mov
xchg
das
leave
xchg
or
jno
pmulhuw
rcll
je
shl
cmp
inc
push
push
out
xchg
ljmp
or
xor
lea
jg
mov
xchg
or
sbb
xchg
in
dec
and
jg
scas
jbe
sbb
pop
sbb
sbb
add
mov
or
sub
push
jns
or
mov
iret
outsb
mov
xor
pop
faddp
mov
cmp
add
push
inc
lds
loopne
and
je
or
fisttps
sbb
test
push
inc
push
push
add
in
rorb
rcl
pop
ret
xor
add
cmp
dec
stos
push
out
xchg
scas
cmpsb
push
sub
in
cmp
in
lods
fisubrs
inc
pop
sbb
and
jle
lock
testb
addr16
jmp
ret
pop
add
js
add
push
adc
sarb
rcr
jle
repz
xlat
pusha
sbb
mov
pop
and
xor
or
ja
je
push
jnp
icebp
mov
pop
adc
pop
cmp
mov
push
mov
jecxz
xchg
jne
jbe
repnz
ds
mov
mov
popf
movsb
movb
mov
sbb
je
jge
pop
ret
push
inc
dec
adc
clts
movsb
jne
add
mov
mov
cmp
dec
je
jmp
shll
lahf
bound
arpl
rorb
clc
js
push
mov
fcomps
mov
add
mov
fstps
leave
and
ss
stos
adc
xchg
outsb
lret
test
insb
iret
and
aas
xchg
scas
out
jp
jl
push
lea
mov
push
adc
mov
test
inc
sbb
adc
dec
mov
or
cmpb
mov
jno
popf
jns
lds
push
jo
xchg
dec
cmp
stos
aas
nop
push
mov
xchg
data16
mov
fstpl
lret
mov
stc
sbb
sub
lods
scas
sub
lods
lret
in
xor
je
fdivl
scas
xor
ret
fisttps
cmc
jmp
ss
test
repz
repz
rcr
repz
out
cmp
xorb
mov
popf
ds
int
adc
sbb
pop
and
addb
jae
imul
movsb
fstl
loope
push
adc
and
sahf
in
sahf
in
or
pop
jnp
into
clc
adc
add
adc
xchg
ja
dec
ljmp
call
insl
xchg
sahf
jle
repnz
inc
push
loope
outsb
dec
dec
mov
pop
push
lea
push
ficoml
push
add
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
mov
sahf
adc
sbb
or
mov
pop
cltd
or
movl
or
bound
xor
jle
add
aad
stos
jl
cmpb
mov
loope
into
mov
nop
xchg
incl
add
leave
add
call
adc
push
push
push
jle
fcmovb
stos
out
lahf
cwtl
movl
andl
pop
mov
pop
pusha
and
pop
or
ror
sub
cmp
ret
mov
jle
or
push
fmuls
pop
icebp
dec
sbb
add
in
sub
sbb
mov
push
lock
call
in
out
or
xchg
pushl
mov
js
cmp
dec
jbe
out
dec
inc
push
push
bound
push
xchg
mov
and
push
out
sub
xchg
shl
daa
push
dec
and
adc
jp
xor
push
jecxz
lea
pop
inc
inc
rorl
nop
movq
add
lods
loope
cmp
je
or
andb
rolb
add
mov
xchg
pushf
push
mov
fbld
jle
sahf
pop
mov
dec
sub
ret
lahf
mov
es
cmpl
jne
mov
cli
adc
pop
adc
test
mov
lret
add
lods
jecxz
lock
push
lea
xchg
in
adc
pop
ss
data16
push
mov
mov
insb
push
dec
dec
mov
push
jg
loop,pn
xor
je
dec
adcb
pop
add
sub
cltd
xchg
clc
inc
cld
sub
sar
add
out
inc
fisubrl
int
xor
sub
mov
add
shlb
dec
inc
mov
cmp
and
adc
rorb
mov
push
xor
sub
xchg
inc
push
test
shrb
repz
pop
jbe
cwtl
push
sbb
push
adc
sahf
out
push
xor
cmp
mov
scas
out
or
jae
adc
sub
push
sarb
push
pop
popf
xor
sbb
pushf
add
add
sbb
loop
cltd
jge
and
add
in
pop
mov
mov
fadds
xchg
outsb
addb
adc
pop
cmp
xor
push
fisttpll
push
shrb
loop
push
add
addb
mov
in
xlat
and
push
out
mov
je
push
lock
lret
loope
jns
sub
addr16
dec
movsb
cmp
fisubl
and
movsb
add
mov
inc
or
jg
stos
jo
adc
cwtl
ja
add
jmp
lret
xor
push
push
push
and
and
add
or
aas
cs
jo
fs
popf
lret
push
mov
das
aam
ss
and
cs
mov
js
and
loop
pop
shlb
mov
rcrb
cmp
je
cmp
pop
or
mov
in
popa
xor
shl
call
lea
xchg
jmp
pop
cld
movl
push
lcall
adc
rcrb
inc
mov
jle
mov
pop
movb
and
and
jb
sbb
or
dec
xchg
icebp
jbe
pop
xchg
push
cmp
dec
mov
flds
xchg
xor
clc
jle
mov
cld
inc
pop
cld
xchg
dec
mov
mov
ss
push
mov
imul
push
stos
sbb
jb
inc
add
movsl
loopne
lea
incl
jne
push
mov
bnd
add
orb
sbb
into
pop
mov
or
push
sbb
pop
push
sbbl
cwtl
shufps
movl
imul
jo
repnz
fists
sub
sbb
mov
and
sub
xor
sbb
movsl
pop
loope
mov
mov
popl
ficoms
cs
dec
push
jnp
ds
dec
sbb
dec
ljmp
imull
test
jo
push
addb
push
inc
lahf
push
rclb
mov
pusha
push
pop
xchg
dec
push
push
nop
testb
sub
push
push
lea
mov
fsubrl
jp
xor
loopne
cmp
push
sbb
or
push
cmp
or
push
je
jno
addb
loopne
or
push
test
test
rcll
cmp
or
inc
xor
or
add
mov
xchg
add
or
pop
mov
mov
loop
test
sbb
push
push
and
push
and
jo
push
sbb
add
mov
jbe
ja
mov
bound
adc
jge
aaa
faddl
sub
fildl
inc
shrb
xchg
fldl
fmull
cmp
or
push
xor
mov
inc
lods
mov
push
push
lahf
push
push
mov
mov
lock
enter
xchg
adc
sbb
mov
es
add
fdivs
mov
les
pslld
dec
ds
push
test
add
imul
or
jp
add
dec
mov
fstl
inc
loope
add
mov
std
cmp
inc
push
add
push
mov
movl
xor
inc
push
and
ret
push
ja
loop
lock
xchg
dec
dec
or
pop
jbe
es
rcll
arpl
test
push
movsb
push
add
fadds
adc
or
inc
add
add
sub
xor
push
inc
orl
mov
ja
push
adc
outsl
addb
push
xchg
push
push
sbb
push
jecxz
push
pop
mov
cmpl
cld
cld
add
jge
add
je
mov
xlat
jb
jge
xchg
lock
push
push
incl
sub
sub
push
pop
addb
fs
nop
or
jmp
push
mov
dec
lea
icebp
popf
adc
add
out
hlt
jo
iret
add
fdivl
enter
aaa
or
xor
int
xchg
dec
dec
sbb
int3
int3
outsb
dec
fisttpll
dec
push
push
push
lods
xchg
push
xor
cmp
mov
js
adc
roll
jl
add
mov
inc
push
sbb
mov
sub
xor
clc
dec
clc
ret
jno
enter
dec
popa
dec
mov
or
in
fldcw
enter
js
incl
rorb
imul
push
aas
in
mov
mov
sbb
lock
mov
sub
mov
jl
cltd
and
scas
mov
ret
sar
push
or
mov
fstpl
daa
jl
dec
add
xlat
adc
std
cmp
mov
mov
dec
loopne
jmp
imul
sar
mov
shr
add
mov
imul
push
sub
mov
in
jle
in
and
fildl
jmp
jae
xchg
das
mov
call
jns
mov
push
adc
push
enter
stc
bound
sbb
rorb
push
cmpl
fsubrl
adc
push
cmp
jne
push
shr
inc
inc
sbb
dec
rcr
adc
xor
ficomps
jecxz
lea
int
mov
inc
and
and
popf
outsl
sbb
xor
inc
out
icebp
ds
mov
sbb
adc
inc
add
and
roll
jnp
pop
hlt
xchg
jle
fldz
data16
push
ljmp
mov
fisubrl
incl
or
mov
test
jl
lods
aaa
sbb
lcall
add
flds
inc
push
aaa
ds
push
mov
sbb
jmp
xor
popf
mov
xlat
imul
add
in
std
jle
cmp
add
ficoms
sbb
and
and
inc
or
out
outsb
xlat
ljmp
mov
jno
sti
lahf
fisttps
dec
sub
jge
jmp
mov
push
loop
lods
pop
fistl
pxor
jl
sbb
push
faddl
dec
or
lret
xor
mov
fdivrp
shll
out
xor
sbb
mov
push
push
pop
hlt
mov
mov
jns
inc
push
fcoms
xchg
imul
clc
jbe
pop
mov
push
ret
shrl
fidivl
mov
into
lods
add
sti
jge
sbb
or
movb
add
mov
lods
pop
js
jge
push
cmpsb
inc
add
cli
shlb
adc
pop
shll
push
adc
and
outsb
das
cmc
cmp
mov
roll
jge
je
sbb
movb
xchg
mov
lret
xor
xchg
and
aam
mov
inc
insl
pop
mov
xor
add
push
dec
sbbl
outsb
xchg
adc
inc
and
add
sarb
inc
lcall
sbb
dec
and
fsubp
and
xchg
mov
add
inc
push
pop
mov
sub
inc
outsl
loopne
aam
insb
pop
jmp
jecxz
bound
into
adc
pop
add
ret
xchg
or
and
sbb
sbb
xor
add
sbbb
scas
pop
clc
sbb
or
and
dec
dec
cmp
ds
or
or
add
push
in
ret
pop
cmp
push
pmaddwd
push
xchg
push
out
xchg
test
mov
fisttps
lahf
lea
push
push
inc
mov
jae
inc
jg
outsb
xchg
or
pop
xchg
loopne
mov
dec
bound
cltd
sbb
dec
mov
push
and
adc
mov
push
add
push
mov
or
mov
sbb
sbb
adc
adc
mov
orl
aad
mov
pushf
and
cmp
push
loopne
add
xchg
lcall
pop
push
dec
mov
insl
mov
lahf
or
mov
jle
xor
adc
pop
xchg
jg
and
add
push
push
sbb
movsl
mov
adc
ret
lahf
or
outsb
ret
or
sbbb
hlt
or
loope
sub
add
xor
mov
sub
clc
setb
insb
push
mov
sub
cmp
jmp
clc
dec
sub
xchg
rcrb
push
adc
add
js
lret
mov
pop
rorb
mov
mov
jae
pop
push
mov
fdivrp
push
add
inc
add
mov
lea
push
adc
dec
push
movsl
je
mov
push
es
pop
pop
mov
ffreep
in
sub
jo
js
pop
mov
lock
xor
push
pop
cmp
ljmp
adc
mov
int3
jp
mov
add
add
adc
ss
push
push
dec
lcall
push
adc
cmpsl
in
jb
jg
int3
sbb
repnz
add
add
or
call
movl
loop
mov
loope
test
ja
movzbl
cltd
popf
dec
mov
or
push
jno
inc
mov
adc
out
scas
test
push
jno
add
add
jbe
add
add
push
add
xlat
dec
adc
or
adc
adcb
add
inc
repnz
mov
cmp
ret
ds
add
movl
fisttpll
inc
xor
je
add
add
jmp
adc
leave
xor
dec
pusha
jmp
nop/reserved
push
cltd
inc
xor
cli
pop
xor
mov
insb
je
lret
jo
and
and
adc
pop
add
iret
push
push
dec
cli
ss
in
sub
pushf
and
push
popa
adc
popa
mov
pusha
and
xchg
and
sub
or
dec
rolb
or
lret
inc
mov
push
push
xor
and
mov
jg
ret
jne
xchg
push
xchg
push
dec
sbb
xor
add
cmpsl
orl
jl
out
mov
pop
inc
pop
fdivl
pop
xor
and
ss
mov
sub
sub
adc
jmp
into
pusha
roll
rcll
fstpl
jns
subps
xchg
xor
cmp
or
dec
push
int
cmpxchg
dec
add
xchg
dec
mov
mov
ret
mov
imul
xor
push
sbb
sbb
fwait
push
aaa
nop
xor
and
leave
es
rcll
arpl
test
cmp
adc
mov
sub
lods
and
mov
push
pop
shlb
mov
movsb
jbe
mov
subb
out
ret
dec
and
out
popa
lahf
adc
in
push
jl
xchg
push
or
or
add
xor
and
push
push
dec
jl
clc
push
popf
fisubs
push
aad
jp
dec
pop
or
mov
test
and
or
and
push
pop
add
sbb
cmp
in
cmp
cmp
add
sysret
and
lea
inc
xchg
in
out
jo
inc
pop
push
lea
push
mov
add
insb
cld
xchg
icebp
push
sub
push
or
cmc
and
fldl
or
das
popf
in
out
mov
je
mov
add
add
add
fcmovnu
int
jb
lods
fmuls
inc
jb
add
add
test
xor
mov
add
or
mov
pop
pop
fisttpl
sub
or
xchg
jo
push
mov
xor
in
mov
and
inc
push
add
jne
nop
fdivrl
sub
adc
push
push
push
pushf
cltd
fs
pop
call
faddp
xchg
insb
mov
fwait
mov
adc
jno
push
pop
loopne
enter
mov
jecxz
sbb
js
add
push
mov
roll
ret
mov
mov
add
add
loop
sbb
mov
mov
mov
inc
ss
es
pop
movl
adc
test
push
nop
sub
add
add
or
push
data16
mov
pop
sub
xchg
insb
pop
add
insb
mov
or
cmp
data16
cmc
or
aam
and
or
adc
and
movsb
pop
push
mov
daa
and
add
nop
mov
or
stos
jmp
pop
fsubl
push
xchg
bound
adc
rorb
stos
mov
cmpb
inc
cli
ja
pop
loop
out
adc
cmpsl
rclb
adc
add
push
add
or
adc
insb
dec
sbb
insl
push
mov
popf
mov
insb
notb
popf
xchg
imul
push
xchg
xor
loope
and
iret
sbb
mov
test
xor
ja
add
xor
push
mov
push
cmp
mov
sub
in
pop
add
sub
call
push
push
outsl
call
jae
dec
mov
jnp
enter
xorb
sub
bound
int3
add
xor
push
cmp
push
mov
sub
adc
sarl
std
stc
pushf
dec
push
stos
cmp
mov
push
xor
lods
or
push
pop
arpl
jmp
and
test
hlt
cli
arpl
into
movl
sbbb
dec
jge
jne
pop
cmp
icebp
push
push
scas
mov
cmp
push
sbb
pusha
pop
push
adcl
pop
mov
adc
add
loop
mov
xor
test
pop
mov
push
jle
rol
je
movsl
test
push
insb
mov
jae
or
push
push
enter
pop
add
or
pop
insb
sbbb
push
loope
aas
das
push
push
pop
daa
popf
mov
push
pop
mov
leave
and
in
es
mov
sbb
push
jl
stos
dec
sbb
mov
jns
cmp
or
or
add
and
add
lahf
push
fsubl
sbb
std
mov
push
xor
scas
into
rorl
push
sbb
inc
mov
cld
dec
inc
push
sub
inc
into
mov
xor
xor
pop
or
aam
sub
xchg
adc
shlb
add
cmp
and
mov
sbb
imul
or
mov
cmp
sub
or
sub
add
xor
push
pop
xchg
sbbb
sbb
push
add
and
adc
sub
push
cmp
outsl
hlt
inc
adc
xor
mov
adc
xor
xchg
push
and
adc
pop
jne
xlat
pop
mov
cmp
or
inc
sub
adc
sarb
and
pop
push
data16
push
or
adc
scas
shll
mov
pop
call
xor
and
adc
fs
addr16
jmp
add
into
ja
bound
dec
and
add
push
mov
icebp
adc
daa
jmp
lret
pop
dec
subl
add
mov
test
cmc
nop
and
pop
dec
ljmp
push
mov
loope
mov
or
repnz
inc
inc
fbld
sub
shl
add
push
pop
sub
dec
cmp
and
cltd
xchg
enter
add
mov
hlt
push
in
ds
fbstp
push
aad
test
push
push
rorb
push
dec
cmc
add
or
adc
or
inc
cli
lock
add
xor
mov
and
jecxz
lods
mov
push
sub
int
push
pop
shlb
jl
xor
mov
mov
xor
xcrypt-cbc
cmpsl
adc
adc
cmpsb
mov
push
push
addl
inc
cltd
sbbb
jnp
push
add
ds
jb
add
or
int
pop
mov
mov
fwait
add
stos
test
fnsave
and
leave
sbb
add
xor
repnz
xor
push
cld
lret
mov
push
dec
adc
sub
mov
or
test
fadds
ds
cmp
pop
add
movaps
push
repnz
out
push
push
sub
pop
ljmp
dec
ss
push
repz
leave
push
xor
stc
xchg
add
jl
jl
mov
push
cmp
cmp
push
in
mov
push
repnz
subb
test
sbb
call
xchg
cmpsl
dec
cmpsb
push
cld
fidivl
pop
add
shr
jnp
cmp
xor
push
je
test
add
jmp
mov
push
inc
xor
mov
pop
mov
je
xchg
iret
inc
cmp
add
pop
add
mov
push
rcrl
loop
push
sub
and
hlt
testl
or
sub
pop
xor
into
in
sbb
push
cld
mov
sub
or
insl
push
lret
sub
jge
push
or
add
jge
or
jne
movl
cmp
dec
and
xchg
dec
stos
cmp
sub
dec
sub
inc
cmpsl
cmpsl
mov
loope
or
mov
mov
and
jno
mov
stc
in
pop
add
pusha
pop
add
rcr
test
cmp
jo
sub
sub
sbb
ljmp
inc
mov
xor
pop
sbb
divb
cmp
and
cmp
shlb
popl
add
sti
out
adc
add
cmpb
adcl
and
aad
sahf
jno
ds
movsb
sbb
push
and
movsb
fildl
iret
add
or
push
add
mov
mov
push
xor
sub
add
cmp
xchg
les
cmc
pop
mov
mov
aad
or
test
cmpsb
xor
jo
push
movsl
lock
push
adc
por
push
pop
popa
pop
dec
mov
mov
or
cmp
cmp
cmp
pusha
push
inc
mov
sbb
fs
scas
mov
cmpsb
loope
push
clc
mov
mov
and
mov
cmp
je
push
jp
add
cmp
dec
inc
cmp
popf
popa
mov
push
mov
fwait
into
sub
xor
pop
call
mov
aaa
sub
inc
adc
cs
and
fs
test
roll
out
roll
cwtl
add
push
stc
cmp
lea
enter
mov
sub
pop
xor
fsubs
dec
push
mov
test
or
stos
or
push
dec
loope
push
mov
int3
sarb
pop
jge
rolb
mov
movsb
adc
pop
mov
push
loopne
testb
scas
fs
popl
int3
nop
xor
mov
xor
dec
dec
push
into
ja
in
or
push
lret
nop
xchg
sbb
testb
push
ret
lds
xlat
cmp
push
inc
sbb
fists
push
mov
or
xchg
xor
jl
jp
enter
add
or
cltd
or
icebp
sub
pop
jae
add
pop
mov
and
dec
test
std
call
out
push
mov
push
pusha
adc
add
xchg
pop
inc
and
mov
xorl
sub
nop
push
adc
adc
or
jne
push
push
xchg
jl
cmp
sub
nop
negl
or
leave
shlb
pop
sbb
inc
or
xlat
nop
cmpsb
jb
adc
adc
roll
out
sbb
rolb
sub
cltd
pushf
cwtl
adc
and
adc
jl
and
cwtl
fistps
cltd
test
sbb
push
push
cltd
movsb
imul
and
xchg
and
adcl
mov
add
mov
xchg
pop
inc
and
pushf
ror
cmpb
jecxz
cmp
adc
js
movsb
rorb
adc
xor
or
xor
dec
sbb
jg
adc
scas
mov
out
cwtl
add
ss
jo
dec
or
je
inc
xchg
mov
push
push
push
enter
inc
and
and
loope
pop
jl
std
fs
fsubrp
fs
push
into
add
add
rclb
repnz
add
sti
les
mov
jge
or
mov
aam
sbb
add
dec
pop
loopne
sub
test
inc
and
movsb
mov
lock
popa
push
into
lds
lret
roll
mov
dec
loopne
dec
js,pn
cmp
in
or
jno
sbb
push
sbb
in
mov
loopne
jl
insl
rcll
pop
fisttps
insb
and
leave
jmp
ja
push
sub
cs
cltd
cwtl
repnz
setne
adc
out
cmp
mov
stos
or
xchg
dec
dec
push
push
lea
fistpl
jne
jecxz
ret
nop
xor
test
pop
nop
push
shrl
or
sti
push
test
mov
es
and
push
sub
lea
sub
cmp
into
fwait
lods
out
push
mov
int3
aam
push
add
pop
rolb
inc
fidivrs
adc
jmp
xor
adc
xor
fnstsw
or
sbb
cmp
jmp
je
mov
pushf
test
and
outsl
push
inc
lcall
sbb
cmp
dec
cs
mov
ljmp
and
lret
add
lea
repz
es
xor
or
add
sbb
mov
push
int3
inc
sti
push
sub
rcll
arpl
pop
mov
pop
mov
push
mov
shlb
adc
dec
xor
mov
or
jns
and
and
jl
mov
mov
imul
pop
push
push
xchg
xchg
fwait
enter
movsl
push
adc
mov
shrl
jnp
jne
out
adc
in
nop
dec
mov
leave
push
add
aas
mov
stos
and
clc
and
or
jge
adc
aaa
fsubrs
pushl
adc
lcall
adc
scas
and
jle
clc
jg
loop
sub
or
dec
incb
or
sub
lds
bound
add
jp
xor
aas
loopne
push
test
add
add
jne
jns
movsb
into
add
pop
jmp
push
sbb
in
push
dec
inc
push
sbb
imul
mov
mov
mov
push
xchg
mov
fstl
inc
ljmp
add
dec
lods
clc
push
loop
or
inc
add
ja
shrb
add
sub
and
add
cmp
pop
loop
ret
jge
stc
in
inc
je
dec
js
mov
and
mov
push
cmp
sbb
mov
mov
pop
test
mov
std
imul
fisttps
xchg
jno
sbb
shlb
kshiftlb
jecxz,pt
jo
cmp
dec
add
dec
mov
stos
jle
sub
mov
xchg
push
leave
inc
and
les
jg
mov
cmp
sbb
xor
in
clc
test
dec
ss
cmp
adc
sarb
hlt
jge
ret
fmuls
outsl
pusha
add
dec
movsl
inc
and
testb
js
mov
cmc
dec
inc
addr16
sbb
loop
inc
fbld
out
inc
lcall
xchg
rcrb
in
jo
clc
sahf
in
add
mov
mov
ret
add
sbb
inc
pop
ret
push
push
sbb
iret
mov
test
insb
jo,pt
aam
push
xchg
sub
mov
xlat
jecxz,pn
add
mov
decb
loopne
fcomps
incb
jle
mov
mov
xor
push
mov
incl
ss
pop
add
scas
jo
jmp
adc
hlt
add
hlt
xor
sbb
sbb
jae
add
clc
xor
push
mov
js
cmp
mov
push
xchg
push
jle
pop
cmp
push
loopne
mov
inc
nop
insb
xchg
push
inc
pusha
pop
push
es
ret
pusha
ja
stos
stos
mov
add
mov
lcall
jle
aas
js
mov
out
jge
sbb
orl
add
mov
jo
sbb
sbb
mov
pop
add
dec
adc
xor
add
add
xchg
xchg
mov
push
sbb
mov
lea
inc
xor
cmp
into
sbb
push
call
jp
ret
fldl
js
pop
ret
cmpsb
pop
pop
mov
pop
pop
jecxz
and
xchg
push
clc
jmp
enter
das
xor
add
push
inc
das
mov
jmp
daa
mov
test
adc
mov
int
subb
pusha
test
js
les
xorb
or
cmpsb
adc
push
imul
adc
add
and
add
dec
add
test
out
enter
cltd
jmp
stos
inc
mov
cmpsl
adc
popf
rolb
push
dec
xor
sub
mov
or
insb
jecxz
dec
outsl
pusha
xor
dec
xchg
jnp
and
jmp
sub
or
sub
das
cmp
rcrl
cmpsl
push
fstpl
sbb
add
mov
sbb
pop
sbb
stos
mov
je
pop
adc
fs
push
aas
push
in
neg
call
and
jmp
push
cmp
test
loopne
push
pop
jb
push
insl
popa
pusha
inc
or
stc
cmp
cmp
cmc
out
add
lods
jbe
adc
scas
push
adc
push
push
sub
jno
dec
dec
sub
and
xchg
out
mov
and
mov
xchg
lods
or
jmp
mov
add
fdivs
jne
cwtl
clc
sub
mov
sete
add
push
cwtl
xor
pop
fcompl
ficompl
test
or
xchg
dec
loopne
pop
adc
add
mov
push
cmc
sbb
and
and
jle
dec
and
adc
addb
jne
test
ret
ret
mov
adc
sbb
pushl
sub
push
add
jo
push
mov
subl
xor
popa
push
jg
inc
sahf
add
pop
pop
or
adc
sub
insl
cmp
mov
nop
mov
mov
es
jl
add
sahf
sti
mov
sub
inc
mov
sbb
dec
cmpsl
jo
sub
scas
push
xor
fwait
out
and
sbb
or
mov
pop
or
or
dec
and
ret
jnp
push
cmp
jb
rcll
xor
sub
add
push
rorl
movzwl
sbbl
add
popf
shlb
mov
sahf
dec
xor
cmp
add
sarb
lock
sarb
lock
jle
jl
sub
or
cmc
fmuls
xchg
dec
enter
or
adc
sbb
xchg
add
inc
xor
les
fcoml
mov
mov
mov
sub
lahf
or
ret
pusha
sbb
jg
and
test
push
push
and
or
or
push
jno
push
or
fwait
movsb
inc
adc
inc
push
mov
sbb
lret
stos
lcall
jle,pt
sbb
or
or
or
dec
cmpsb
cmp
dec
leave
push
jno
jmp
not
sti
mov
cmp
dec
aaa
push
and
add
push
inc
and
and
xchg
adc
adc
stos
call
or
or
cwtl
sbb
or
ret
inc
xchg
inc
xor
stos
jns
pop
adc
movsl
jo
lods
insb
cmpsb
xor
mov
stc
mov
push
push
icebp
fsubl
and
sbb
lahf
mov
pop
je
push
leave
xorl
lea
mov
enter
adc
sub
imul
pop
push
mov
jno
pop
fidivrl
xchg
aam
movb
outsl
or
test
sbb
jbe
add
sub
inc
testl
dec
divb
out
mov
pop
fmuls
ret
mov
xor
or
mov
imul
loope
aas
fstpl
test
std
cmp
shlb
adc
and
pop
dec
rorl
xchg
push
mov
mov
movzwl
aam
xchg
out
rol
xor
pop
aam
ss
xor
push
jmpw
jbe
loopne
mov
push
loope
cli
pop
dec
adc
je,pn
cld
push
mov
lods
xor
xor
adc
rorl
jbe
pop
jb
mov
add
je
push
push
or
popf
testb
jg
mov
sti
jg
xor
hlt
cmp
jne
or
push
inc
les
into
lock
out
ja
bnd
add
add
cmp
popf
cmpsl
adc
aaa
shl
out
mov
stc
aaa
testl
in
push
mov
cmpb
jbe
int
sbb
cwtl
sbb
and
pop
adc
xor
dec
lea
adc
add
sub
or
lea
cld
popf
mov
jge
push
push
push
imul
xor
mov
aas
push
add
pop
push
push
inc
sub
aam
push
fidivrs
sub
jle
incb
jne
mov
push
push
mov
sub
and
aam
in
mov
sbb
sbb
pop
jmp
lret
mov
jae
cmp
out
inc
mov
pop
cs
dec
push
inc
or
sbb
inc
leave
gs
das
xchg
int
addl
push
jae
push
je
cmp
adc
fisttpll
loop
jbe
js
xor
je
cmpb
pop
loope
cmc
mov
add
inc
shll
push
push
mov
mov
sub
out
add
out
loop
push
pusha
mov
xor
fsub
outsb
scas
lret
lret
add
cmp
push
cmp
pop
or
push
cmpsl
cmp
jge
arpl
pusha
scas
cmp
add
or
inc
cli
xchg
cmp
data16
inc
lds
cltd
xrelease
leave
push
es
out
jno
int
mov
enter
push
and
jno
pop
sbbb
pop
mov
push
sahf
jl
mov
push
jg
push
adc
push
repz
push
ret
rorb
in
jo
lahf
call
sub
loope
add
ds
lea
mov
push
call
sbb
test
dec
jno
icebp
orl
push
hlt
sub
push
popa
inc
xchg
or
push
pop
ret
cwtl
dec
into
add
stc
jbe
xorl
jo
add
or
test
scas
jo
insl
test
imul
jns
push
adc
pop
xchg
pushf
or
or
jg
and
mov
cmp
add
rcrl
adc
outsl
lods
es
add
mov
pop
dec
mov
push
mov
adc
stc
jo
test
push
outsb
test
and
ljmp
inc
jle
leave
cli
mov
add
ret
aas
jo
and
cmp
js
or
or
orl
jns
aam
orl
nop
push
cmp
outsb
add
pop
enter
outsb
ret
mov
xchg
scas
pop
cmp
and
and
xlat
sbbl
push
adc
imulb
push
ret
dec
es
popa
jne
adc
sbb
and
adc
add
dec
and
ret
lcall
mov
jl
mov
and
adc
cmp
in
add
lock
xchg
mov
cmp
jne
loop
mov
pop
pop
outsl
push
mov
add
lret
or
xchg
add
into
pop
das
mov
sahf
mov
mov
xor
shlb
aas
addl
int
and
out
push
push
cmp
or
pop
xchg
lret
push
add
and
scas
sbb
push
dec
fidivs
shr
pop
inc
xorb
xchg
jae
lea
mov
mov
fsts
sbb
mov
and
inc
cmpsl
pop
mov
mov
rol
pusha
add
mov
addr16
aas
outsb
aas
lock
pop
cmpl
push
movb
sbb
or
sbb
adc
inc
mov
fisubl
pop
mov
xchg
push
dec
cmpsl
push
inc
mov
xor
addb
mov
add
in
sub
or
aaa
mov
push
add
inc
inc
dec
pop
add
sbb
pop
js
push
mov
iret
ret
or
mov
add
sub
mov
xor
jle
push
andl
xor
or
sub
mov
jg
jns
add
cmp
test
shll
push
push
loopne
lods
jno
xor
mov
or
pop
mov
xor
pop
push
push
jnp
fsubs
jo
sub
add
aam
test
adc
and
push
lds
or
ret
inc
rcll
add
ss
out
movsl
pop
cmp
nop
sub
rcrl
push
pop
mov
mov
test
shl
paddusw
add
divl
sub
scas
sti
push
sbb
jmp
push
popa
mov
add
add
aam
les
add
dec
add
add
fcomi
xor
sub
adc
add
sub
dec
or
mov
shlb
mov
rcrb
je
jbe
pop
daa
xchg
xchg
cld
jle
mov
daa
sub
nop
or
cmp
xlat
pop
add
sub
pop
push
push
push
or
xchg
mov
push
cmp
push
mov
add
sub
cmovg
lock
sub
sbb
add
push
xchg
sbb
or
dec
xchg
call
or
inc
fldl
add
adc
sub
mov
pop
inc
rcrb
jnp
adc
xchg
sbb
and
adc
adc
pusha
repz
ret
leave
cwtl
mov
adc
fmul
lret
rcll
in
in
sbb
pop
sti
addr16
inc
lahf
lock
push
jle
push
shrl
dec
dec
mov
inc
sarl
cmp
fsubrs
enter
testb
mov
adc
es
aam
cli
pop
push
mov
xchg
into
add
add
adc
or
pop
sbb
mov
push
movsl
aaa
or
arpl
xor
inc
xchg
pusha
xchg
cmp
xchg
push
iret
ljmp
fldenv
int3
and
loopne
daa
adc
cwtl
sbb
add
je
es
adc
add
sub
sbb
mov
add
cmp
jb
add
cmp
rcl
inc
repz
push
xor
ret
mov
or
jo
pushf
sub
inc
mov
sub
adc
pop
nop
scas
subb
push
dec
daa
add
cmp
dec
aad
or
sub
or
sbb
sahf
sub
and
and
out
inc
stos
cmp
xor
sub
fxch
nop
sub
inc
add
dec
xchg
mov
in
psllq
push
mov
pop
and
add
push
mov
add
insl
jle
pop
jne
ret
push
inc
insb
inc
push
add
xchg
popf
adcl
cs
sbb
add
loope
mov
adc
flds
adc
and
fsts
lock
sub
push
ss
leave
and
mov
or
push
loope
adc
aaa
and
or
mov
sbb
pop
or
jno
or
jo
add
repnz
fsubrl
sbb
push
cmpsl
and
ret
adc
add
ljmp
loope
or
mov
and
and
addl
sti
in
pop
pop
jg
push
test
stos
jg
call
inc
xchg
fcoms
lahf
xor
std
adc
mov
add
and
jo
and
pushf
mov
and
idivb
jp
add
push
sub
mov
cli
mov
push
movsb
sub
pop
cltd
dec
add
pusha
xor
xor
add
push
push
cwtl
call
ret
and
lock
xchg
push
loopne
loope
adc
sbb
push
insl
push
lea
loopne
mov
jo
pop
daa
add
shll
mov
adc
and
and
pop
adc
out
dec
mov
xchg
dec
pop
push
repz
pop
xor
or
lods
movsl
mov
int
adc
dec
inc
add
lea
test
mov
mov
inc
add
xor
stos
mov
push
add
cwtl
in
xor
push
mov
inc
jmp
dec
rorl
loopne
adc
iret
xchg
mov
mov
push
test
push
les
out
xor
dec
add
punpckhbw
add
mov
mov
ds
scas
push
inc
push
push
add
aad
inc
cmp
and
push
and
and
sub
in
dec
scas
add
jl
jno
pop
mov
sbb
std
mov
js
sub
push
xor
mov
shl
or
add
dec
and
ret
sub
mov
test
lret
or
int
and
je
cmp
inc
dec
push
in
mov
inc
insb
push
and
or
in
mov
fucomi
cmpsl
push
inc
push
sub
jb
je
add
imul
pop
xor
dec
jno
jb
or
push
repnz
dec
add
jecxz
stos
test
mov
and
loope
pop
shrb
xor
jg
pop
and
mov
or
mov
xor
ret
push
fs
mov
sub
adc
push
or
pop
or
xchg
sbb
fcmovne
addr16
je
lea
add
rcr
shll
pop
sub
sub
add
xor
pop
cmp
cli
clc
jb
pop
pop
js
nop
je
and
adc
push
add
inc
sub
sarb
add
xchg
cmp
outsb
fidivs
cmp
add
jl
mov
mov
jle
orb
std
imul
mov
in
incb
clc
in
enter
filds
push
cld
mov
sub
or
jge
ss
cwtl
lret
xor
add
push
pop
out
cmp
mov
scas
cmp
sahf
pop
push
push
sbb
push
cmp
into
or
call
loopne
imull
adc
fbstp
lea
add
pop
push
push
push
push
cmpb
test
push
push
addb
idivb
xchg
push
add
add
push
movb
mov
adc
xor
leave
andl
mov
push
and
cwtl
xchg
jge
iret
js,pn
jg
int
sbbb
mov
sbb
ds
lcall
inc
movsl
dec
dec
cmp
addl
sub
fs
sub
and
and
adc
push
cld
scas
xor
sub
sub
icebp
mov
call
jle
inc
push
rorb
sbb
sub
adc
outsl
sub
or
dec
repz
sub
mov
push
pop
xor
or
jge
daa
mov
xchg
dec
dec
rorb
fwait
pushf
or
shll
je
xchg
scas
add
cmpsl
sub
fildl
or
adc
mull
push
cld
push
pusha
out
or
insb
mov
add
pop
adcb
inc
add
fldcw
jnp
add
add
and
sbbl
scas
rol
add
cmp
push
call
cmp
add
mov
bound
jo
test
aam
pop
xchg
loopne
mov
fidivl
push
push
gs
mov
pop
push
push
ds
sub
push
es
pop
and
and
sub
pop
adc
add
pop
loopne
pop
inc
in
sbb
mov
test
jne,pt
mov
add
cmpb
or
mov
pop
das
pop
addb
pop
nop
or
adc
dec
mov
push
js
or
clc
jl
push
mov
sarb
pusha
push
sahf
mov
pop
cmp
inc
sbb
icebp
add
cmp
cmc
sub
push
push
xlat
jge
in
shlb
sub
sahf
ret
push
shrl
push
push
mov
popf
inc
and
les
pop
inc
and
add
fldl
sbb
inc
cld
xor
negb
cmp
add
sbb
sbb
adcb
enter
scas
ja
and
sarb
mov
xor
dec
scas
neg
push
cmp
in
xor
and
mov
inc
and
aam
push
or
or
rol
dec
ficoms
mov
pop
or
insb
shlb
mov
stos
pusha
and
push
add
cmp
pop
sbb
mov
lahf
popf
loopne
add
push
or
rcl
das
and
lock
push
pop
inc
mov
sbb
hlt
es
dec
cmp
xor
addr16
xor
mov
jbe
pop
lret
or
pop
ret
pop
push
jb
fistps
shrl
mov
add
or
adc
or
push
push
fisttpll
inc
scas
or
inc
clc
xor
add
lds
jae
gs
cmp
adc
enter
or
js
mov
retw
add
dec
incb
push
push
mov
xor
das
lock
mov
lock
jo
cs
sbb
sub
push
inc
aam
lods
inc
sbb
imul
sti
push
jmp
pop
pop
fnstenv
add
cld
jle,pn
or
jnp
jae
mov
les
pop
call
aad
cmp
sbb
add
dec
jb
pop
lea
popa
push
popf
add
rcrl
movups
insb
jl
mov
cmp
and
shlb
sahf
sub
cmp
mov
pop
in
mov
sbb
test
and
push
inc
add
sbb
scas
pop
loope
sti
scas
ret
jge
movb
imul
adc
enter
inc
inc
roll
add
jmp
add
cmp
lea
jne
xchg
mov
adc
mov
das
clc
arpl
jl
cmpsb
mov
mov
shl
mov
mov
ja
or
loop
add
mov
movsb
xchg
lret
cli
pop
pop
or
subb
or
mull
add
pop
movl
out
ss
jb
ja
movsl
inc
decl
stc
add
pop
add
dec
add
nop
pop
mov
mov
sbb
mov
xchg
shlb
in
imul
xchg
loopne
or
outsb
mov
ja
adc
inc
roll
jg
cmp
jb
or
add
mov
add
or
or
xchg
aas
add
nop
dec
pop
and
ja
and
push
or
lret
mov
add
add
mov
mov
inc
pushf
dec
sahf
into
fcmovbe
xor
in
dec
sbb
fistps
notb
int
clc
mov
mov
repnz
mov
xor
cs
das
je
or
xorl
outsl
or
jne
icebp
pop
cmp
mov
inc
je
mov
lea
dec
jae
popa
adc
sahf
inc
clc
xchg
mov
decl
cmp
or
jmp
jbe
xchg
test
jg
push
and
add
or
add
add
pop
sub
inc
jmp
inc
and
and
orl
mov
mov
js
nop
mov
ds
jnp
push
jne
sub
cmp
mov
dec
lcall
sbb
sub
and
add
adc
pusha
mov
push
dec
and
add
shlb
outsb
push
es
sub
cmp
or
jne
cmp
sbb
mov
jl
lock
xorl
dec
adc
or
movsb
cmp
mov
cmp
ja
inc
push
fcomip
cmpl
cmp
jne
mov
cld
push
push
adc
pop
jge
add
jmp
lret
add
inc
xchg
mov
cli
and
or
add
mov
fs
outsb
cli
inc
cmp
jb
pushl
std
push
cmp
ja
pushw
shlb
xor
sub
cmp
ja
and
or
fwait
shr
aaa
movzwl
jmp
cmp
xor
add
in
out
cmp
test
mov
sahf
add
fcmovnbe
mov
jnp
leave
enter
pop
mov
ret
fsubr
push
cwtl
aas
xor
and
lcall
fildl
mov
je
add
stos
jne
ret
inc
or
push
test
ja
aaa
push
or
scas
incl
jae
mov
jmp
push
jo
andb
aas
adc
jo
jne
pop
xchg
js
adc
test
dec
call
inc
jnp
mov
or
and
xchg
lret
insb
les
dec
adc
mov
outsb
test
aas
and
test
adc
je
test
jne
jmp
sub
jb
adc
jmp
cmp
and
xor
add
add
inc
inc
inc
add
ss
notb
roll
pop
mov
add
xchg
out
test
scas
jnp
pop
mov
inc
and
inc
dec
outsb
and
movl
xor
int3
pushf
lods
out
dec
imul
adc
push
mov
jae
add
jbe
and
lea
push
pop
ja
ret
scas
aad
cmp
test
sbb
cwtl
pop
push
aad
push
scas
xchg
xchg
jge
sbb
jge
insb
jl
pushf
inc
mov
adc
aam
ret
ret
es
sub
pop
pop
mov
das
loopne
push
add
ja
cmc
sahf
test
pop
jg
fiadds
push
imul
imul
aas
xor
sti
scas
sbb
mov
pop
add
repz
lock
cmp
mov
adc
aam
push
fidivl
lock
mov
or
push
jge
add
cmp
sti
lods
cmpb
and
in
pushf
pop
fiaddl
inc
fs
dec
out
add
sbbb
jg
lea
fdivs
inc
ficoml
push
sub
fsubl
push
jo
lea
inc
movsl
aam
test
adc
add
push
and
mov
sub
dec
loopne
mov
push
xchg
adc
je
cmp
je
xchg
jae
lock
or
and
or
int
pop
push
es
and
xchg
xchg
or
push
fcompl
jb
pop
jmp
jle
add
mov
dec
int
data16
xor
aas
mov
or
stos
test
stc
pop
add
push
divb
lea
sbb
xchg
adcb
add
out
les
jle
inc
orb
in
add
test
push
xor
leave
mov
push
adc
mov
mov
mov
xchg
pushf
mov
or
notb
je
push
rcll
xchg
mov
stc
add
roll
add
jns
adc
and
add
mov
xchg
mov
xor
xor
ljmp
add
outsb
jmp
pushf
cmc
icebp
pop
pop
inc
cmp
jb
mov
push
jb
icebp
xor
adc
push
das
mov
clc
pushf
cmp
je
lea
mov
popa
mov
mov
dec
mov
adc
mov
sub
cltd
clc
push
push
lahf
test
jecxz
mov
mov
add
adc
fsubl
or
xchg
arpl
inc
mov
inc
int
xor
dec
lea
adc
push
les
lods
pop
test
loope
mov
lds
sub
and
jmp
push
push
lea
inc
xchg
mov
cmp
addl
addb
incl
test
add
xor
xchg
and
es
enter
mov
push
leave
and
pop
push
lea
nop
jl
pop
or
mov
inc
jg
test
adc
xor
jmp
pop
fs
jns
movsb
add
mov
mov
cmp
xchg
inc
and
mov
inc
inc
leave
test
xor
and
cmc
or
adc
mov
mov
and
test
sub
or
adc
fbld
mov
xor
mov
mov
dec
jecxz
pop
sub
nop
cli
mov
stc
sub
sbbl
fdivrs
jne
addl
jne
fisubl
cmpsb
mov
add
sbb
add
or
iretw
lcall
adc
add
mov
addb
cmp
add
pop
mov
or
rolb
adc
mov
loopne
addb
and
cmp
je
insl
aas
mov
cli
orb
push
inc
inc
mov
jne
pop
movb
mov
mov
outsl
insb
mov
push
push
rol
mov
mov
decb
jbe
add
and
xor
sbb
or
into
out
push
xchg
cltd
cld
leave
fstpl
idivl
iret
xor
je
inc
jle
cmpsb
out
jne
stos
and
and
push
es
das
clc
jmp
aad
stos
insb
push
push
xchg
push
push
pop
cmp
ret
fmuls
inc
shll
cmpl
push
cmpb
cmp
jne
mov
push
jne
cmp
fbld
or
pop
addl
inc
inc
inc
inc
inc
mov
arpl
inc
cmp
ja
addr16
test
adc
or
xchg
scas
gs
cwtl
call
iret
dec
dec
movsb
xchg
mov
out
shrl
xor
jae
cmp
je
cmp
mov
or
pop
insb
pop
inc
inc
mov
int
mov
jl
pop
mov
rorb
and
incl
xchg
and
jo
cmp
inc
jbe
sub
mov
shr
add
std
pop
and
or
inc
arpl
inc
inc
adc
push
enter
inc
ror
xchg
enter
je
or
sbb
mov
pop
jne
shr
sbb
rorb
adc
adc
sub
inc
jmp
ud1
dec
lcall
xchg
outsb
lods
mov
subb
in
dec
sub
xor
out
aas
xchg
cmp
or
rorl
add
nop
dec
sbb
int3
aam
sub
lea
ss
push
cmp
outsl
jne
push
out
cmp
std
push
lea
xchg
dec
pop
xchg
xchg
loop
inc
and
or
in
test
or
sti
inc
lds
inc
xor
xchg
lret
in
xor
cmp
pop
mov
cmp
jb
dec
adc
mov
insb
and
push
inc
rclb
ret
push
add
mov
sbb
sub
test
jo
cmp
mov
or
rolb
orb
inc
mov
pop
cmp
fcoml
and
outsb
or
loope
add
or
pop
ficoml
pop
mov
cld
sub
and
loop
push
push
push
push
ds
xchg
popf
adcb
push
or
or
lret
and
fimuls
push
adc
push
fildl
adc
inc
ds
add
or
push
rorb
push
xchg
mov
adc
mov
or
cmp
dec
sub
ret
cltd
fmuls
or
lods
inc
insb
cmp
add
ja
fisttps
dec
sti
es
push
sbb
push
mov
jo
mov
sti
dec
mov
je
push
push
or
xlat
cmp
jb
adc
cmp
xor
call
mov
xor
sbb
or
pop
push
pop
in
stc
push
sbb
mov
jle
mov
je
dec
inc
inc
or
dec
xor
xor
push
ds
daa
xor
popf
sub
mov
lret
aam
sbb
in
dec
mov
push
ljmp
inc
decl
add
rclb
shrb
leave
hlt
pop
in
add
lds
cmp
inc
dec
data16
adc
mov
or
sbb
dec
add
adc
pop
ret
adc
push
lds
jb
pusha
shrb
push
ffreep
and
and
sub
jle
or
ret
dec
xchg
push
pushf
push
mov
or
xchg
popa
test
add
or
clc
stc
dec
xchg
xor
jne
dec
cld
les
sbb
sub
adc
push
push
dec
jmp
sub
outsl
test
jb
js
add
mov
push
sub
out
cmp
xor
push
adc
sub
ljmp
into
fimull
rcl
cmp
add
sub
mov
mov
push
imul
pop
add
ljmp
lock
mov
or
ds
cmp
inc
sub
pop
adc
insb
into
xor
add
push
ficomps
pop
adc
js
pop
stos
or
cmp
sbb
loopne
fisubl
dec
pop
mov
in
xchg
and
adc
add
test
jne
xor
pop
or
pusha
sbb
jno
pop
cwtl
inc
adc
mov
xchg
iret
pop
scas
fs
lret
int3
mov
cmp
push
add
in
mov
sbb
test
push
add
jo
cmpsb
adc
ja
xor
add
bound
pop
aaa
or
or
push
inc
imul
xlat
dec
fildl
or
xlat
push
inc
push
pushf
cmpsb
or
mov
inc
and
mov
jnp
mov
pop
add
and
jo
push
and
dec
data16
pop
ret
xor
mov
js
jb
push
pop
jmp
mov
mov
loope
adc
aad
adc
add
add
sub
sbb
add
cmp
adc
fwait
and
decl
xchg
pop
and
repz
add
mov
out
psrad
inc
and
cmpsl
leave
mov
pop
push
xchg
in
dec
mov
scas
jl
imul
sub
and
mov
pushf
fistps
lock
sub
pop
push
fcmovnbe
iret
adc
mov
mov
sbb
xchg
pop
mov
or
mov
loopne
data16
jno
xor
push
or
lret
mov
repnz
jns
inc
fldt
jno
les
inc
and
sbb
mov
fdivl
push
imul
or
jecxz
add
and
jbe
inc
inc
jnp
push
pop
jbe
sbb
push
dec
dec
sbb
mov
hlt
in
mov
xchg
lock
lea
jnp
xchg
sbb
jl
ja
lods
push
sbb
hlt
inc
adc
and
js
stos
xchg
hlt
sbb
js
push
xchg
lahf
in
fsubr
mov
adc
sub
sbb
shlb
fnstenv
push
dec
push
push
test
sbb
fsubp
cmpsb
push
nop
and
mov
js
dec
out
add
fimuls
jmp
and
rcr
testb
sbb
pop
loopne
pop
or
es
mov
enter
add
pusha
movsb
enterw
and
xlat
andb
and
xchg
or
xlat
push
ret
add
pop
mov
mov
mov
sub
or
mov
add
or
sbb
push
ja
adc
jecxz
in
inc
orb
inc
mov
sti
pop
mov
pusha
push
pop
add
cld
lods
mov
mov
add
xchg
mov
cwtl
jne
xchg
add
inc
outsb
adc
push
xor
pop
fisubs
xor
push
aam
jecxz
jno
loopne
jl
cmp
aaa
lea
stos
nop
rcrb
and
pop
je
adc
mov
adc
lds
or
sub
or
lcall
divb
movsb
add
pushf
push
xchg
mov
sbb
inc
inc
aas
imul
dec
push
xchg
pop
add
mov
es
arpl
sbb
orl
push
int3
dec
rcr
int
pop
push
pop
xchg
sbb
sti
jle
inc
rolb
out
lods
jp
adc
rorb
test
inc
stc
sub
cmp
push
xor
push
leave
jae
inc
add
xor
xor
lock
add
sti
test
or
loopne
pushl
xchg
popa
cmp
or
mov
adc
and
shlb
sub
mov
xor
notb
sbb
pushf
mov
jns
mov
fnstcw
inc
mov
sahf
sbb
ss
ja
out
insb
push
iret
insb
push
and
pop
adc
sbb
outsb
ret
movsl
or
mov
neg
add
fs
aam
push
addr16
jbe
sbb
dec
or
mov
and
fs
sbb
fldl
adc
sete
mov
cmpsl
repnz
xchg
lods
clc
mov
xor
pop
lock
mov
fsubl
inc
xor
push
mov
testb
or
pmaxub
dec
subb
cltd
je
push
mov
inc
jge
push
inc
jle
std
incl
mov
clc
mov
push
adc
nop
or
jecxz
cmpsb
fwait
pop
sub
dec
inc
sub
mov
cmc
loop
push
mov
mov
repz
pop
xchg
popf
or
push
stos
jnp
xor
push
test
or
and
mov
test
add
loop
fdivl
lea
enter
mov
pusha
dec
rol
add
aaa
adc
jmp
xchg
in
mov
out
mov
and
xor
xor
xor
pop
push
lret
and
mov
lcall
fcoms
addr16
push
into
push
lods
push
movsb
icebp
pop
add
adc
jge
out
lock
clc
push
adc
sbb
mov
jl
cmp
add
in
test
cmpsb
lahf
xor
sub
push
faddp
movsl
and
test
adc
adc
and
jns
pop
or
loopne
cld
inc
out
pop
xchg
add
clc
add
and
movsl
rorl
adcl
test
xor
pop
push
mov
add
insb
and
negb
mov
mov
enter
pop
push
test
push
ljmp
sbb
addr16
pop
push
movsb
pop
adc
andl
inc
and
cmp
jnp
insb
add
ljmp
or
std
cmp
push
cmp
sub
push
adc
xchg
ret
cmc
sub
negb
pop
leave
or
push
xor
pusha
push
xchg
and
and
jns
adc
test
push
jl
mov
repnz
lret
hlt
add
dec
cmpsl
test
mov
repz
sbb
adc
push
cmp
xor
mov
jmp
jns
inc
fs
in
or
fsubs
fwait
mov
sbb
fidivl
fwait
add
jne
mov
or
rorb
add
nop
enter
fisttps
cmp
mov
add
and
jnp
test
test
mov
push
lds
and
loopne
jl
jmp
jbe
dec
jo
jl
into
xor
aas
scas
and
add
repz
in
pushf
xor
ss
leave
cmp
pop
sete
fnstsw
pop
ljmp
scas
push
xor
push
orl
mov
adcl
add
insb
xchg
sbb
mov
aaa
and
xchg
add
and
push
movsl
push
adc
sbb
daa
sub
mov
push
inc
addl
mov
sub
mov
sub
sub
add
push
sub
out
sub
stc
out
sub
inc
int
jle
fisttpl
push
fstpt
pop
and
sarl
and
xor
popa
sub
pop
adc
and
fldt
std
loope
rcrb
pop
jne
mov
mov
pop
dec
bnd
and
lock
add
sbb
mov
loope
push
dec
mov
pop
inc
loope
jne
add
pop
push
sub
sbb
movsb
xor
sbb
aaa
mov
aad
mov
sbb
insb
and
mov
in
sub
ja
adcb
sbb
sbb
cmp
xor
lea
scas
dec
scas
sahf
or
data16
clc
add
add
mov
mov
fmull
loopne
jae
dec
addb
push
jmp
sbbl
sub
mov
cmp
pusha
cmp
out
fiaddl
mov
mul
add
or
or
adc
dec
cmp
cmpl
lock
dec
mov
add
mov
dec
ss
loopne
xor
pop
aaa
dec
sbb
adc
imul
inc
fs
push
adc
stos
inc
bound
adc
and
mov
adc
test
jne
pop
sub
inc
mov
pop
cld
mov
mov
sbb
dec
adc
or
lahf
dec
mov
dec
cmpl
out
outsb
sub
fbld
cmp
and
mov
adc
xchg
mov
sbb
or
and
cmp
loope
xchg
mov
sub
push
mov
pop
xor
in
cmp
xor
into
mov
leave
es
mov
enter
and
mov
jmp
pusha
add
outsb
imul
jg
mov
and
sub
les
adc
xor
mov
orl
or
cmp
xor
inc
add
pop
xor
icebp
lods
mov
xchg
iret
mov
shll
mov
imul
add
sbbb
pop
ret
sub
out
push
push
pop
ficomps
mov
pop
imul
dec
and
inc
roll
mov
xor
mov
les
lret
add
mov
sbb
dec
cmp
lock
dec
sub
push
sbb
nop
outsl
popf
pop
and
dec
xchg
push
cwtl
add
sub
cmpsb
mov
push
lea
aas
das
mov
orl
mov
add
nop
adcb
sub
adcb
push
pop
movsl
sub
pop
push
pop
xchg
cmc
insl
push
inc
stc
sete
inc
or
pop
filds
jnp
sbb
aaa
sbbb
movsl
sbb
nop
sbb
push
add
and
dec
stc
and
dec
push
or
sbb
jl
sbb
pop
sub
jge
xor
add
jae
movsl
sub
orl
jnp
or
decb
cmpsl
rclb
add
out
stos
cltd
test
test
sbb
imul
push
push
mov
stos
xchg
in
ja
nop
or
shlb
shrl
popa
push
insb
jne
movsl
or
or
shrl
daa
sbb
push
dec
je
je
or
inc
mov
push
lret
aam
cmpsb
fsubl
and
ret
jb
ss
pop
dec
or
fildll
test
sub
push
mov
gs
cwtl
jmp
test
adc
jp
punpcklwd
das
or
adc
push
adc
out
pop
cltd
sbb
sub
out
dec
and
pop
test
test
pushf
call
sub
dec
add
xchg
xchg
inc
in
inc
sub
and
lods
xchg
mov
dec
ljmp
subb
fisubrs
loop
flds
xor
mov
lock
loop
pop
fidivl
add
pop
rolb
lahf
jge
inc
aaa
bound
xchg
aaa
cli
pop
xchg
and
sub
cs
add
pop
cmp
jae
inc
sbb
and
insl
fs
adc
mov
pop
xor
inc
push
mov
testl
push
or
fcoms
dec
xor
add
sub
dec
insl
jl
sub
movsl
jo
pop
cwtl
test
jbe
dec
xor
dec
xor
lcall
or
les
daa
clc
icebp
push
jmp
inc
or
gs
sub
adc
jmp
add
and
mov
and
push
aam
xchg
hlt
lock
inc
sar
out
xchg
lock
inc
icebp
add
add
mov
subb
adc
je
jmp
sub
mov
out
sbb
fcmovbe
or
scas
das
jecxz
orl
xchg
adc
add
adc
fcomi
je
or
push
mov
sub
lea
rcl
jne
sahf
and
jge
in
out
adc
pop
xor
jne
push
rcr
cmp
ror
pop
push
fldt
push
cld
jmp
lea
mov
aam
jb
call
test
ret
rorb
out
subl
decb
pusha
and
call
pop
inc
and
sbb
inc
dec
adc
mov
cmp
data16
bswap
add
ret
imul
jge
clc
popa
add
mov
inc
bound
mov
sbb
das
stos
jl
pop
jecxz
sub
cld
xchg
out
cmp
lret
hlt
adc
add
data16
xchg
adc
xorl
sarb
inc
hlt
js
les
pusha
lds
imul
mov
repz
xchg
add
repz
push
inc
and
adc
aam
mov
mov
adcb
loope
xor
pusha
stos
bound
ljmp
dec
push
adc
and
and
xchg
cmp
push
or
sbb
sbb
push
sub
push
mov
imul
adc
xor
mov
cmp
sub
andl
dec
aas
popa
add
or
lret
sahf
lahf
inc
pop
pusha
movsl
mov
adc
sbb
insl
aad
mov
aaa
andb
or
sub
dec
mov
cmp
aas
sbb
sbb
jb
inc
adc
or
out
dec
call
jmp
sbb
lea
adc
fadd
addr16
push
in
jecxz
pop
xchg
fdiv
adc
mov
mov
or
fidivrl
push
jecxz
sub
pop
or
pop
push
push
xor
push
lahf
nop
ret
pusha
xor
xor
or
outsl
sbb
mov
cmp
sbb
pop
enter
cmp
add
movb
bound
xor
jecxz
ljmp
test
es
lcall
es
ret
pop
sbb
jns
lods
cmp
lahf
in
nop
jae
push
aas
jae
cwtl
sub
add
nop
iret
jns
jo
paddb
shufps
rorb
lds
or
lods
in
pop
jp
inc
jg
inc
xchg
xorl
or
cmp
test
and
or
or
adc
or
mov
loopne
inc
xchg
iret
mov
add
dec
mov
push
jnp
ret
add
mov
dec
je
sarl
cmp
rorl
xor
xchg
pop
push
cmp
mov
add
jmp
daa
orb
pop
push
cltd
sbbb
mov
push
add
xchg
add
push
lea
je
add
mov
mov
movl
inc
sub
push
or
pop
mov
jo
or
jg
rclb
popl
roll
shlb
sbb
push
lahf
xchg
int
sub
inc
cmp
add
sub
inc
cmp
call
add
adc
fsub
mov
mov
push
add
mov
lret
jo
pushl
xor
mov
or
mov
pop
movsl
fadd
pop
and
mov
xchg
into
fwait
xchg
adc
push
pop
das
sbb
jge
push
mov
or
xchg
adc
xor
popf
add
adc
das
pop
mov
pop
inc
xchg
movsl
insl
mov
push
adc
orl
push
fisttpl
sub
arpl
subl
mov
fbld
cmp
cmp
jbe
cmp
jbe
and
sbb
xchg
nop
mov
test
push
stc
sub
inc
pop
addr16
fisttpll
bound
xorb
in
xor
fildl
mov
jge
popf
les
mov
xchg
test
sbb
jo
and
cmp
enter
or
adc
shrl
or
sarl
ret
fiadds
lea
push
adc
mov
cmp
mov
or
sahf
test
addb
popa
cmp
sbbl
fildl
jns
int3
xor
or
es
mov
rclb
push
mov
fdivrs
orl
jg
lock
mov
aad
xor
loopne
je
sub
cltd
xlat
insb
mov
inc
jl
sahf
lods
daa
lret
mov
and
push
pusha
jno
pop
sbb
aaa
in
sbb
xchg
or
push
push
test
mov
lock
les
lock
inc
rorl
push
mov
lock
ljmp
incl
push
lea
push
inc
push
mov
add
lods
dec
cmp
add
insb
daa
sbbb
add
fadds
inc
cmp
aaa
jp
sbb
push
mov
mov
and
dec
stos
push
pusha
mov
jbe
pop
test
jge
inc
dec
add
jns
shlb
mov
xchg
pop
pop
mov
cmp
jae
movzwl
add
push
adc
in
or
xlat
push
inc
shrb
mov
sub
jne
jae
jbe
and
lahf
movsl
push
sub
add
and
shll
add
sti
mov
inc
add
jb
push
dec
fadds
or
lret
add
push
or
rcr
mov
jmp
aas
mov
inc
dec
adc
add
fsubrl
mov
pop
aad
aas
aad
lahf
mov
push
je
sub
adc
cmpsl
and
adc
mov
cwtl
dec
pusha
mov
adc
add
inc
or
sub
lods
pop
ret
or
and
and
sub
jmp
sub
add
int3
mov
out
jo
jbe
jge
mov
loopne
fidivs
cmp
lret
movsl
or
scas
and
pop
mov
lods
xor
sub
mov
pop
lea
adc
lcall
xor
or
sub
mov
xchg
add
imul
inc
mov
adc
jne
data16
xchg
ds
and
lret
stos
pop
mov
sub
push
push
sbb
mov
cmp
adc
add
popf
out
mov
xchg
lea
mov
ret
pop
loope
movsl
and
lea
dec
loope
and
inc
dec
adc
jae
and
and
sbb
sbb
jnp
and
sbb
dec
sub
xor
xor
lea
or
in
je
xchg
int
sbb
scas
bound
and
xor
flds
fmull
test
cmp
ljmp
jne
mov
fs
ret
add
sarl
notl
fisttps
insl
or
popf
mov
cmp
lret
call
dec
push
push
mov
add
shll
shlb
mov
orl
lea
shlb
xor
xchg
lods
shlb
bound
in
fstps
dec
and
push
add
into
push
xchg
mov
decb
push
mov
mov
mov
dec
cli
adc
dec
jge
add
xor
fwait
sti
shlb
jnp
stc
cs
addr16
sub
cmpl
pusha
cmp
call
adc
inc
hlt
cmpsb
jo
test
insl
adc
dec
lock
mov
jbe
nop
fwait
jecxz
pop
cmp
mov
mov
pusha
add
or
or
or
adc
mov
mov
xchg
imul
mov
add
jle
push
push
adcl
sarb
clc
push
push
adc
sti
jge
inc
cmp
pusha
jle
mov
push
xchg
mov
data16
jo
mov
jl
cmp
jg
mov
aaa
lea
push
xor
std
inc
adc
and
push
add
lret
mov
or
call
add
push
xchg
inc
cmp
mov
mov
or
add
adc
mov
xor
stos
out
jmp
mov
leave
cmp
aam
sqrtps
pop
stos
mov
and
data16
loope
fwait
inc
xchg
decl
xchg
and
or
adc
xchg
inc
cmp
adc
and
add
std
vmulpd
cmp
adc
adc
push
push
dec
in
push
mov
lock
or
fs
sub
pop
loope
int3
rolb
add
push
xor
push
and
shlb
cmpl
cmp
cmp
jo
pop
push
sbb
enter
mov
inc
or
decb
dec
and
rclb
imul
cs
scas
push
fsubp
jbe
repz
out
decb
cwtl
cmp
add
push
add
lahf
add
jl
cmc
imul
jne
jne
sti
in
pushl
aad
loop
push
je
cmp
add
and
aaa
inc
and
jle
scas
dec
lea
fmul
in
push
push
and
xchg
ja
test
repz
fisubl
push
addr16
into
push
adc
jo
fidivrs
cmpl
xor
mov
sbb
fildl
push
adc
and
into
add
enter
fsts
pop
fstl
jnp
scas
cld
jo
ret
pop
movzwl
pop
inc
das
add
leave
rclb
dec
add
jmp
adc
and
test
jbe
sahf
push
movsl
mov
nop
clc
dec
loope
push
cli
dec
and
pop
stc
call
cmpsb
stc
xor
lock
gs
cld
adc
outsl
jmp
xor
ret
pop
psubq
push
inc
fldcw
aas
push
dec
test
dec
fiadds
or
int
mov
insl
imul
sub
mov
and
jo
mov
sub
data16
adc
add
movsb
or
pop
pop
lcall
lea
pop
aaa
mov
push
push
aaa
pop
outsl
inc
iret
movsl
test
adc
pop
xchg
push
in
inc
push
pop
stos
dec
cli
dec
cmc
icebp
sarl
and
push
into
test
fbld
cmp
jbe
pusha
cmp
or
adc
sbb
pop
fildl
repnz
cmp
jb
sahf
shrl
jle
data16
hlt
cmp
jne
xchg
ljmp
shrd
sbb
cmp
lds
cli
sub
push
pop
rcll
sub
jl
sbb
dec
sbb
jno
jg
cmpsb
inc
pop
clc
sbbb
fnstenv
js
sbb
xchg
clc
jge
je
mov
roll
push
rclb
mov
xchg
not
jge
adc
jl
mov
xor
stos
imul
clc
or
je
sbb
or
orl
mov
add
inc
call
in
mov
adc
shll
adc
xor
jmp
inc
cld
jne
push
push
mov
push
gs
add
orb
inc
dec
add
mov
or
or
adc
dec
xor
or
lret
cmpsb
adc
xor
xor
mov
sbb
adcl
insb
enter
jl
inc
test
cmp
add
mov
cmpsb
pop
adc
lret
and
stc
test
je
pop
adc
call
es
xor
pop
mov
sbb
test
cmp
fsubr
or
pop
cmp
cs
adc
and
xchg
push
test
add
stc
xchg
lods
push
lock
or
mov
mov
and
in
and
push
popa
lds
sbb
or
mov
inc
out
or
loope
push
mov
sbbl
or
xor
jbe
jmp
push
mov
lcall
sub
icebp
cmp
scas
pop
pushf
ljmp
mov
cltd
mov
pop
mov
mov
mov
or
scas
adc
popa
push
insl
mov
sbb
test
rcll
aam
jmp
std
roll
or
enter
push
inc
or
es
outsl
out
adc
push
adc
jmp
xchg
fadds
cmp
fst
mov
fxch
add
ds
mov
add
cld
ljmp
or
ret
insb
push
fcoms
lcall
cmp
je
adc
add
push
lock
fmuls
dec
mov
mov
dec
sbb
in
mov
test
aam
in
push
jno
add
out
inc
in
mov
mov
icebp
ret
xchg
or
and
jge
dec
in
lea
jb
movsb
push
fadds
jbe
wrssd
cltd
jo
pop
sbb
inc
lea
sahf
ss
ljmp
fisubrs
inc
call
sub
test
mov
mov
or
loopne
cmp
xchg
sbb
ss
insl
testl
sub
mov
jmp
jae
push
movsb
ret
std
aam
push
sub
or
inc
fwait
sub
pop
and
add
add
push
adc
mov
adc
push
inc
clc
push
add
add
and
mov
scas
shr
adc
inc
add
add
dec
faddl
adc
cltd
push
repz
adc
or
outsb
pusha
sub
cmp
jge
mov
and
or
jae
mov
lock
or
pusha
pop
xor
inc
mov
pop
ds
lods
mov
xlat
and
fists
mov
shl
add
inc
add
mov
xor
ficoms
push
push
pop
sub
fildl
enter
cmc
push
fadds
or
jl
add
lods
fstps
inc
fldcw
inc
js
int3
mov
sbb
jno
jecxz
mov
jbe
roll
fidivrs
shlb
mov
mov
push
jbe
shrl
clc
and
lahf
iret
out
push
add
pop
cmp
and
mov
call
stos
jle
pop
mov
jae
loop
pextrw
jno
dec
int3
sub
aad
and
fistps
xchg
sub
and
ffree
lahf
pop
xchg
xor
divl
loopne
add
arpl
bound
xchg
lods
or
sub
sbb
sub
shlb
and
lock
push
or
cmp
aam
dec
pop
je
push
push
popf
adc
lods
mov
sub
pop
xchg
jo
add
sbb
push
popf
xchg
pusha
movsb
jp
imul
add
jle
stos
xchg
mov
pop
jb
add
dec
sbb
jg
ret
push
js
add
jns
lock
mov
mov
shlb
push
cmp
outsb
cmp
imul
fistps
cmp
roll
xchg
xchg
hlt
sub
push
push
sbb
gs
push
dec
push
push
adc
fwait
lahf
push
inc
inc
std
add
sti
jmp
inc
and
movl
sub
ret
or
jns
fsubrl
and
mov
fsubrp
cli
adc
adc
mov
sarb
sub
sbb
outsb
cmp
je
add
push
clc
add
fs
jp
mov
push
cmp
in
push
cld
test
sbb
pop
and
sub
xchg
mov
repz
shr
sbb
xchg
out
cld
jle
sub
push
sbbl
mov
mov
cmp
and
pop
scas
movsl
pop
push
xor
add
add
pop
clc
lret
inc
jbe
or
pop
xor
jno
out
loop
push
sub
arpl
leave
and
loopne
pop
call
xor
test
jbe
xchg
cli
mov
or
xor
addl
mov
in
sub
pusha
shll
loop
mov
or
lret
test
inc
pusha
add
sbb
add
push
mov
and
cltd
dec
cmp
out
mov
cmp
and
cmp
movzwl
lea
cmp
je
dec
in
stc
push
push
enter
adc
xchg
sub
fcomp
cmpsb
and
pop
in
inc
hlt
push
push
shll
inc
push
jbe
icebp
pop
inc
or
jecxz
dec
outsl
popf
es
cwtl
in
mov
add
sahf
lock
hlt
mov
push
lahf
iret
popa
add
jns
jge
inc
jo
push
xchg
lds
push
push
cwtl
xchg
and
int3
outsl
cmp
push
or
fmuls
sub
dec
pop
fmull
cld
adc
dec
cwtl
daa
dec
mov
pop
dec
std
sbb
sub
aam
ret
nop
addl
das
xchg
mov
push
xor
fnsave
cmpb
hlt
icebp
andb
push
push
pop
add
dec
push
dec
into
popa
repnz
inc
push
roll
mov
pop
aad
adc
add
movsb
inc
rorb
add
or
rorb
mov
fs
es
mov
adc
imul
and
pop
rclb
fisubrs
push
adc
out
cmp
sub
push
sbb
cmp
lcall
and
in
or
xor
sub
sahf
testb
adc
and
div
push
mulb
ret
and
mov
sti
rcr
mov
fs
xchg
rcrl
or
mov
sub
dec
into
push
xlat
ss
fmulp
add
and
jbe
or
pop
out
xlat
pushf
push
cli
inc
push
cmc
aad
cmp
sbb
add
jbe
jns
mov
and
cmp
je
inc
jl
jne
add
jne
mov
in
test
inc
push
aam
or
push
xor
sbb
dec
xor
inc
out
xchg
and
sub
jo
and
pop
cmp
jbe
pop
and
sbb
fistl
daa
add
imul
xor
lock
cmp
js
cmp
jae
dec
sbb
dec
sbb
pop
and
ret
jo
sub
mov
sbb
push
adc
call
repnz
jb
adc
pop
inc
mov
pop
cli
push
loopne
cmp
sub
or
popa
jp
xor
lds
pop
xor
sbb
xchg
aaa
mov
and
push
cmp
jecxz
push
or
sbb
std
jnp
imul
cmpl
and
push
push
jae
aas
inc
adc
jne
push
mov
push
fidivrl
data16
and
mov
mov
mov
and
mov
fldt
xor
lea
adc
repnz
or
sbb
into
in
cmp
mov
inc
sub
pop
dec
add
jg
jb
stos
pusha
cmpsb
mov
and
addb
lods
or
sub
pushf
mov
nop
dec
mov
adc
test
inc
adc
xor
cmp
enter
xlat
sub
and
pop
inc
cs
and
nop
shlb
ja
and
jle
or
popf
sub
popa
sbb
lea
pop
mov
mov
in
in
adc
xor
sub
in
mov
ja
cltd
cmp
jne
mov
adc
adc
add
add
or
jno
push
pop
xor
pop
sub
mov
xchg
add
mov
mov
loopne
das
mov
xor
xchg
pop
insl
mov
cmp
es
loopne
das
push
loope
dec
or
adc
add
jmp
lea
sahf
push
and
mov
push
inc
loopne
psubsb
adc
sub
in
aam
or
dec
cmpl
inc
xchg
adc
loope
add
daa
clc
fwait
jno
cmp
ret
inc
inc
movsb
in
inc
mov
push
add
popa
cmp
inc
or
orl
cmp
out
fmuls
cmpsl
orb
add
and
push
add
push
cmp
lds
pop
mov
repz
add
aas
adc
fwait
cs
inc
jo
repnz
push
jne
nop
sarl
dec
pop
adc
xchg
fildl
stos
in
jg
cmp
sbb
flds
flds
cmp
cmp
rcrb
or
inc
fmulp
dec
leave
jg
adc
dec
and
sbb
sub
ljmp
push
cltd
dec
inc
sbb
fcomps
mov
adc
jno
subb
inc
outsl
addb
mov
test
add
xchg
mov
enter
or
xor
and
ret
add
mov
adc
push
addb
dec
mul
seto
cmp
clc
pop
pop
neg
or
cmc
lret
push
or
and
lret
fildl
pop
ret
or
filds
ror
aaa
call
dec
push
add
in
test
mov
inc
or
xor
es
or
sahf
dec
or
lar
add
xchg
rorb
add
mov
bound
jb
xchg
rcll
jle
jg
les
push
movsb
orb
mov
outsb
stc
lods
movsb
clc
xchg
fisttpl
pop
mov
adc
add
je
sub
pusha
cli
sbb
dec
and
cmp
daa
sbb
inc
adc
or
adc
sti
add
iret
jl
jmp
movb
xchg
push
dec
iret
fldt
pop
jmp
jl
pop
decb
cmp
test
loop
sbb
dec
mov
mov
orl
mov
xchg
add
das
xchg
jo
test
ret
jae
xor
cmp
in
mov
shlb
fistps
add
es
pushf
sbb
mov
lock
mov
push
mov
inc
cmp
inc
scas
push
cmp
mov
adc
nop
sbb
pop
sahf
test
mov
push
push
xlat
in
add
sbb
or
ss
push
mov
push
pop
inc
mov
cmc
adc
cmp
push
mov
inc
roll
inc
fsubs
push
and
rolb
pop
mov
ror
adc
push
mov
lret
and
dec
adc
arpl
inc
and
sbb
push
pop
pop
xchg
jno
mov
stc
or
insl
dec
fstps
data16
inc
cmp
insb
jb
jae
push
push
je
jl
push
mov
or
inc
shll
inc
inc
rorl
inc
add
mov
sbb
clc
and
inc
daa
push
sahf
xor
cmpb
clc
insl
cmp
negb
add
xchg
mov
mov
xor
dec
fldt
or
stc
xchg
jmp
jo
jmp
pop
rcll
mov
mov
inc
add
cmp
push
mov
lret
sbb
pop
push
and
scas
cmpb
add
mov
inc
push
adc
pop
add
xorb
popf
mov
sbb
outsb
mov
adc
fisttps
add
into
dec
inc
fdivs
mov
dec
and
adc
call
lock
lret
movsb
iret
test
iret
mov
sti
ret
inc
jbe
lea
mov
jne
stc
sbb
shrb
jmp
jnp
loop
in
inc
ss
testl
dec
inc
jae
xchg
in
popf
out
adc
and
ja
push
push
leave
xchg
ffree
test
pop
jo
add
cmovle
lea
test
daa
push
jl
add
adc
ss
pop
or
and
repz
inc
or
fcoml
push
push
rcrb
mov
inc
sahf
push
and
or
cmp
add
adc
lea
rolb
mov
test
dec
cmp
adc
fcomps
push
push
call
andb
jl
test
test
pop
ss
sarb
cmp
es
inc
rorb
cmp
outsb
fldl
add
psubsb
mov
add
and
and
je
xor
push
or
push
imul
xor
imul
es
mov
push
sub
cmp
fistpll
pop
lods
push
or
xchg
movsb
adc
lds
inc
inc
push
push
pop
and
inc
cmp
mov
std
push
push
sbb
pusha
inc
enter
add
loope
aam
jmp
iret
mov
dec
inc
add
scas
enter
adc
rcll
nop
rorl
sti
sbb
add
pushf
cmpb
cmpsb
jns
rorb
xor
test
nop
cpuid
pop
jne
mov
popa
shll
adcb
in
push
and
dec
in
xor
add
inc
rcrl
adc
add
dec
sbb
mov
pop
and
js
push
push
xchg
or
out
or
mov
add
dec
mov
or
inc
loopne
jb
add
dec
sub
mulb
or
shll
push
push
push
add
fucomi
jmp
sti
std
imul
cs
mov
adc
mov
je
test
mov
mov
popa
shr
inc
mov
mov
inc
inc
pop
mov
mov
out
mov
xor
mov
xchg
sbbl
and
fsubrs
jge
repz
mov
mov
jl
pop
or
lods
sbb
pop
jae
daa
test
adc
mov
sub
xor
ret
sub
cmp
jb
aam
fcmovnb
pop
in
testb
sub
push
mov
xchg
jo
adc
pop
sbb
xchg
fldl2e
xor
je
add
roll
cmp
mov
addl
ja
mov
ds
pop
adc
aam
fldpi
pop
xchg
push
jns
and
add
inc
push
or
addl
repnz
fidivrs
push
add
stos
adc
and
mov
jmp
loopne
cmp
or
push
add
call
jle
push
cltd
sub
jmp
sti
sbb
mov
es
rorb
fnstenv
mov
fadd
jb
inc
adc
cmp
jo
stc
aad
icebp
mov
inc
cmc
sub
add
out
sbb
in
or
mov
xor
cmp
sub
call
movsl
mov
jae
mov
rol
addl
sbb
push
jmp
adc
and
inc
test
frstor
inc
jmp
jmp
cld
popa
repnz
jae
lea
push
cmpb
jne
subb
rol
add
sarb
lock
ljmp
neg
sbb
and
adc
in
incb
out
pushf
dec
repz
sbb
or
cmp
push
push
or
je
sub
das
lods
inc
add
sub
sbbl
out
and
jno
mov
sbb
lods
pop
pop
xchg
imul
push
mov
inc
push
push
mov
pusha
js
das
pop
and
and
nop
shll
xchg
shl
shr
loop
jp
imul
lret
rol
jmp
jbe
and
push
pushf
mov
scas
pop
push
ljmp
mov
xchg
cld
inc
adc
faddl
mov
pop
cmp
lahf
idivl
push
mov
cmp
loop
pop
push
dec
arpl
dec
insb
and
mov
jne
mov
jne
pop
push
mov
sbb
arpl
mov
jg
addr16
cmpw
cs
lea
cmp
push
pop
test
jmp
adc
push
sub
sub
cmp
pop
cmp
mov
arpl
push
jne
adc
cmp
jmp
mov
popw
inc
mov
decl
sub
lahf
mov
xabort
inc
ret
sahf
xchg
xchg
jmp
or
dec
imul
add
cmp
sti
inc
jb
push
jae
jo
sub
movb
je
mov
push
push
popa
test
sbb
ja
insb
push
lea
loopne
nop
inc
sbb
ret
pop
stc
mov
or
jnp
jne
jb
or
adc
adc
cmpsl
cltd
adc
sbb
int
xorl
testl
cmp
add
hlt
push
ja
inc
loop
sub
cmp
push
mov
daa
sub
pop
push
push
lock
mov
add
cmc
add
fdivs
sub
fimuls
xchg
pushf
jl
lea
mov
scas
push
adc
lea
mov
lea
mov
jnp
inc
lea
js
add
push
loop
dec
mov
pop
sub
lea
imul
xchg
jge
mov
in
out
fisttpll
push
push
push
addl
push
inc
int3
cmp
imull
test
inc
jp
sbb
add
shrb
mov
pop
test
fildl
sub
inc
jge
mov
mov
pop
je
dec
sub
pop
push
push
sbb
test
or
sub
inc
lock
shll
inc
lret
hlt
je
adcl
lock
and
push
sub
iret
fdivs
sub
cs
inc
and
pop
addl
pop
jno
pop
shlb
or
xchg
rorb
enter
inc
and
imull
int
and
add
sbb
jl
sub
jo
jb
push
or
test
inc
pusha
lds
mov
xor
movsl
adc
add
dec
mov
sub
inc
je
pop
jbe
imul
xor
shl
cmp
ja
cmp
and
push
fstpl
sbb
or
or
xchg
ljmp
fists
cmp
jb
cmp
movsl
cs
xchg
add
cmp
mov
mov
hlt
adc
push
out
frstor
inc
add
je
inc
inc
es
mov
inc
loope
lret
into
xor
pop
push
fisttpl
sub
mov
or
sub
mov
cmp
lods
xor
lods
push
push
cmpsl
push
and
sbb
fmuls
cmc
daa
das
popa
sub
test
mov
xchg
xchg
lock
sbbl
sarb
gs
mov
insb
or
nop
mov
push
mov
push
lret
outsl
push
push
aas
push
sub
out
or
lds
inc
mov
adc
cmp
in
sub
mov
lds
push
mov
inc
adcb
pushf
orb
mov
cmp
bound
jl
dec
inc
cltd
es
sbb
add
inc
xchg
lods
xchg
pop
and
and
insb
loop
or
fistl
xor
add
and
enter
adcb
dec
mov
rclb
push
jg
xchg
je
mov
clc
insb
or
mov
pop
add
mov
shll
pop
js
or
mov
or
or
or
or
pop
and
inc
and
push
loope
dec
xchg
es
gs
gs
les
jb
pop
inc
mov
mov
inc
sub
cs
loop
aas
xor
mov
hlt
js
sti
and
mov
push
ss
jmp
rcrb
xlat
adc
int
rclb
adc
mov
fs
scas
outsb
add
cmp
xchg
mov
cwtl
or
inc
pop
adc
bound
mov
jbe
fisttpll
push
orb
pushf
mov
lods
iret
rorb
or
outsb
or
dec
mov
cmp
mov
clc
test
inc
adc
jae
adc
inc
push
xchg
add
adc
lods
test
adc
xchg
adc
mov
daa
test
cltd
test
imul
push
inc
sub
pop
push
es
cmp
fwait
cmp
or
fstpl
sbb
mov
inc
out
or
popf
xchg
inc
mov
push
sub
insb
jne
add
adc
das
cmp
push
aas
add
add
arpl
mov
rclb
mov
add
sbb
xorb
repz
and
pop
or
test
xor
into
sti
lret
mov
or
ret
xor
in
lahf
popf
int3
adc
push
or
lret
push
push
sub
mov
dec
sbb
pushl
push
out
cmpsl
xchg
js
add
mov
jbe
mov
push
jl,pt
push
jg
cmpb
insb
push
inc
inc
xor
dec
or
or
push
or
inc
push
ret
popf
push
sbb
pop
les
mov
das
or
push
xchg
or
add
iret
mov
push
in
daa
adc
push
jno
and
sbbl
xor
mov
xor
push
dec
or
pop
cld
push
dec
loope
fs
sbb
jmp
adc
jnp
cmpsl
mov
jp
inc
cltd
movb
adc
xchg
data16
sahf
inc
or
cmp
mov
and
add
mov
push
outsb
lea
jo
pop
add
sub
imul
ffreep
mov
add
out
mov
lea
cbtw
or
iret
pop
jmp
xchg
lahf
leave
cmp
mov
xchg
test
inc
push
nop
aas
sarl
sbb
push
shl
push
push
daa
inc
cmpsl
fisubrl
test
cltd
add
cmp
push
enter
imul
push
and
je
leave
add
push
dec
pop
test
das
fdivrl
ds
adc
movsl
mov
add
mov
mov
push
push
repnz
inc
or
daa
push
repnz
adc
xlat
lock
push
xor
lods
out
lods
add
add
lcall
adc
sahf
xor
push
xchg
mov
and
sub
adcb
shlb
cltd
or
adc
push
add
incb
add
pop
push
push
dec
mov
dec
iret
movl
xchg
test
fbstp
sub
or
lahf
adc
dec
push
mov
out
mov
in
mov
xor
mov
fsubrs
xchg
pop
mov
das
jne
inc
push
imul
mov
test
mov
aaa
test
insl
jmp
jmp
lock
push
adcl
push
dec
mov
mov
push
inc
or
push
lcall
pop
jle
xchg
fstpt
and
mov
pop
pop
adc
loopne
sbb
add
cs
mov
xchg
aaa
push
cmpl
push
sub
int3
inc
sub
inc
mov
adc
repnz
dec
gs
and
and
inc
je
movsb
sbb
lea
sbbl
clc
hlt
movb
fsub
jnp
xchg
clc
bound
push
inc
mov
and
dec
push
xchg
test
push
adc
add
dec
loop
mov
xor
pushf
fidivrl
push
dec
lea
insl
mov
les
push
mov
push
pusha
cli
or
jne
push
scas
push
imul
js
ja
adc
mov
ds
pop
push
xor
mov
sti
push
test
push
push
fisttpl
add
add
es
sbb
je
sub
mov
inc
adc
adc
mov
insb
ljmp
xor
lahf
sbb
push
rolb
or
mov
pop
adc
add
add
and
sub
test
or
adc
insl
inc
clc
adc
adc
xor
incb
mov
xlat
lock
mov
push
add
adc
cwtl
pop
and
push
enter
adc
inc
cmpsb
mov
jl
xor
push
push
fs
lea
adc
sbb
sbb
mov
dec
sbb
mov
sbb
shr
xchg
cmc
add
cld
test
incl
inc
mov
jp
mov
cmp
outsb
loopne
fldenv
cmp
fiaddl
aad
pop
sbb
pop
stos
enter
push
push
inc
cmpsl
or
loope
mov
idiv
jmp
pop
cmp
push
mov
daa
sbb
inc
mov
nop
jb
or
mov
push
cmp
add
mov
sbb
mov
dec
push
movsl
cld
rolb
xchg
and
mov
add
add
add
adc
adc
fldcw
add
cmp
sbb
nop
aaa
xor
mov
jo
imul
nop
addr16
or
add
xchg
jl
adc
add
or
push
or
xchg
or
and
cmpxchg
inc
push
shll
das
imul
add
adc
xchg
sbb
add
andb
cltd
mov
mov
ret
nop
scas
or
sbbl
fstps
add
xor
lret
add
xchg
or
sbb
mov
sbb
das
mov
ret
dec
leave
and
leave
test
stos
mov
dec
sbb
adc
and
and
sti
ficomps
ja
or
xor
adc
or
xchg
add
dec
pop
sub
sarl
dec
or
movsl
or
lock
and
pop
pop
mov
push
mov
add
inc
adc
sbb
mov
mov
mov
pop
rorb
in
mov
and
add
test
shrb
ror
mov
cmpl
lea
or
or
jne
imul
pop
dec
call
sub
pop
xchg
cmp
or
clc
or
iret
adc
add
xchg
inc
lock
xchg
xor
and
enter
jno
dec
in
mov
inc
loopne
or
add
xor
xchg
hlt
mov
push
arpl
leave
dec
jnp
pushf
push
aam
inc
pop
dec
mov
push
sub
adc
imul
jnp
inc
mov
cltd
scas
adc
test
adc
add
rclb
dec
enter
or
jp
mov
mov
inc
mov
xchg
je
mov
fld
ret
pop
js
push
pop
jae
adcb
sahf
inc
test
ljmp
insb
movsl
insl
and
or
push
lsl
test
les
enter
insb
scas
cmpsl
adc
sbb
dec
sbb
sub
mov
add
push
ds
enter
inc
dec
xor
mov
cld
adc
cmp
push
adc
js
mov
jl
jno
test
test
sahf
xchg
inc
pushf
repnz
and
sbb
bound
xchg
and
mov
dec
cwtl
adc
and
add
mov
mov
test
je
cmp
rclb
inc
js
lods
cwtl
pop
push
test
addl
pop
lock
push
or
add
negb
jb
jne
cmp
jecxz
push
fidivl
aas
push
sbb
xchg
pop
mov
cmc
add
xor
mov
je
test
mov
ret
cltd
pop
mov
lods
cwtl
mov
adc
push
xlat
rcl
cltd
and
popf
or
add
sub
jmp
rcrl
inc
loop
mov
insl
push
push
mov
ljmp
inc
mov
xor
add
pushf
mov
sbb
loopne
and
add
xchg
push
or
and
je
cltd
add
and
xchg
lods
push
push
in
sub
adc
sbb
dec
jbe
lahf
sti
pushf
sbb
cmp
and
add
add
and
roll
inc
hlt
lea
adc
lret
sub
test
sbb
cmp
jo
setns
mov
fwait
sbbb
je
sti
out
shll
dec
or
push
daa
aam
pop
lock
adc
das
inc
scas
inc
xchg
cltd
cmp
inc
mov
je
imul
and
in
sub
xor
scas
ret
dec
xor
int3
je
jne
mov
or
jne
inc
sub
sti
or
xchg
or
mov
popa
mov
cmp
mov
addb
std
xor
clc
jo
adc
jmp
sub
nop
int3
push
call
xor
push
xchg
or
les
add
adc
xchg
js
inc
in
add
decb
xchg
ss
sarb
push
in
mov
pop
adc
inc
adc
push
mov
ficoms
or
aam
lcallw
nop
add
les
sbb
enter
movsb
fnstenv
dec
pusha
mov
inc
push
push
push
mov
or
gs
push
xchg
adc
mov
les
popf
push
js
jne
cltd
add
add
adc
sub
push
mov
popa
mov
inc
sahf
xor
xchg
inc
cwtl
jl
out
sub
pop
lcall
cld
cltd
sub
stos
enter
push
insl
pusha
add
cmp
dec
rorb
sub
sub
inc
test
push
sub
sbb
adc
pop
scas
data16
ret
jl
adc
jae
push
push
sub
scas
cli
or
mov
cmp
shlb
push
outsb
pop
pop
adc
adc
aaa
pop
addl
cmpsl
popf
loope
sub
lret
mov
pop
and
sarl
adc
mov
aad
mov
das
cmp
and
sub
add
sub
rcrb
inc
pop
jne
xor
rcll
arpl
outsb
pop
dec
enter
pop
mov
lea
push
push
mov
sbb
leave
xor
and
pop
aam
add
ret
xchg
push
inc
dec
stos
dec
cld
mov
jne
lcall
xorb
jae
cmp
push
dec
sbb
pop
add
adc
cld
in
dec
je
cmp
sub
push
push
cmp
icebp
test
je
repnz
ret
pop
sbb
add
dec
mov
cmp
je,pn
mov
jle
je
add
das
inc
incl
lcall
or
pop
add
orb
aad
sti
or
pop
mov
mov
lcall
rorl
gs
fwait
adc
push
sbb
loopne
add
aaa
aaa
movsb
add
cltd
cmpb
pop
cwtl
ffreep
jbe
adc
add
xor
mov
mov
adc
adc
push
lret
repnz
ja
xor
mov
or
test
pop
sub
mov
clc
jl
mov
and
add
and
dec
add
dec
cvtps2pi
cmp
mov
orb
add
mov
inc
add
xchg
lret
adc
js
pushf
cmp
inc
scas
add
and
and
cmp
jne
mov
dec
sbb
sbb
insl
cmpsb
mov
add
sub
or
adcb
sti
and
mov
xor
test
adc
jnp
inc
pop
insl
push
loope
insl
dec
or
push
iret
mov
mov
push
dec
or
out
mov
cmp
clc
mov
sarl
push
mov
adc
pop
or
jo
int
add
add
gs
fwait
loopne
rclb
mov
jge
stos
popf
adc
sbb
adc
inc
repnz
or
xchg
icebp
cmp
in
shlb
push
repz
adc
cmp
sqrtps
mov
pop
enter
or
sub
mov
inc
xlat
jbe
dec
or
mov
popl
cmpsl
adc
push
lahf
movsb
loope
and
daa
imul
jbe
sbb
jb
into
aam
add
lock
jl
jge
fnstcw
add
and
jmp
fldl
mov
rclb
lret
pop
mov
xor
xchg
cli
bound
test
arpl
inc
jle
cmp
sbb
pop
push
sbb
sbb
and
sbb
and
push
hlt
xor
out
push
or
sti
inc
push
lret
jne
cmp
sbb
push
cmp
ret
inc
xchg
or
pop
adc
jmp
in
push
and
cmpl
xchg
dec
xchg
mov
mov
lcall
cmp
pop
ficoml
jecxz
add
add
xchg
mov
mov
mov
and
push
jns
fisubl
xor
xchg
out
adc
fisubrl
lcall
sub
inc
sbb
daa
in
xor
pusha
int3
add
xor
lcall
xor
aaa
dec
fsubrl
sbb
cmp
in
test
cmp
rorb
dec
or
xchg
add
dec
sahf
stos
in
cmp
and
ljmp
pop
pop
add
mov
add
adc
cmp
cmp
aaa
adc
aad
jmp
into
inc
push
xor
push
shrb
sbb
sbb
add
or
test
add
add
dec
add
sbb
inc
sub
lret
pop
sub
xor
or
xchg
add
cmp
add
inc
sub
inc
or
push
push
dec
cvtpi2ps
call
insb
sub
adc
mov
and
lret
movsl
popf
das
mov
adc
inc
mov
sbb
inc
enter
adc
test
loopne
xchg
mov
add
mov
or
in
mov
cmp
and
fsubrs
push
movl
incl
add
pop
mov
pusha
push
enter
fcomps
sub
fimuls
and
out
ss
imul
lods
pop
popf
jbe
lret
push
lds
sbb
inc
jae
test
jge
mov
imul
rclb
int3
imul
shlb
lahf
mov
nop
pop
push
fs
and
inc
fs
and
or
or
inc
or
rorb
and
xor
push
and
add
or
sbb
adc
rorb
and
or
mov
inc
mov
sub
and
adcb
sub
aas
rorl
xchg
sar
add
add
dec
jb
add
aaa
xor
cmpsb
popa
in
pop
sbb
inc
xor
mov
dec
leave
sbb
sub
mov
imul
add
add
sub
iret
mov
sbb
jmp
sbb
jne
orl
push
clc
jno
push
cmp
adc
clc
int
jg
dec
add
push
jne
lea
filds
xor
dec
sbb
push
stos
push
into
sbb
adcb
sbb
and
popw
push
cmp
es
push
das
sub
jae
dec
and
add
aad
cs
dec
jb
enter
addb
or
xchg
mov
xor
sub
mov
call
push
pop
sub
and
sbb
insb
or
sbb
push
sbb
pusha
pop
enter
push
sbb
cmp
dec
pop
mov
push
add
jl
inc
aam
xchg
sbb
push
mov
sub
shrb
imulb
push
dec
pop
push
push
pop
lock
cmpsl
or
sbb
inc
call
loopne
add
adc
or
daa
jmp
inc
and
fnstsw
iret
jecxz
les
mov
xor
jp
test
xchg
mov
sbb
popf
cmpsl
or
xor
repnz
hlt
pop
lock
xchg
push
fdivr
cmp
cmp
xchg
repnz
jae
push
add
jns
leave
adc
sahf
stos
jmp
and
sbb
and
mov
sbb
or
pushf
adc
or
sahf
or
dec
push
jge
lret
rcrb
push
lcall
or
sub
cwtl
fdivrl
pop
or
sub
fsubl
jmp
mov
gs
je
add
push
clc
push
adc
hlt
sub
push
xchg
or
push
and
adc
mov
adc
clc
add
jl
xchg
sub
jg
lea
cmp
push
push
push
nop
pop
mov
add
shrb
out
push
scas
int
lds
cmc
add
ss
popa
mov
test
shlb
iret
movb
push
int
adc
das
outsb
add
orl
shld
sbb
jg
xchg
mov
icebp
xor
or
imul
lock
fldl
hlt
nop
cmp
push
pop
inc
rcr
mov
mov
dec
lods
dec
les
rorb
adc
xor
lret
repz
js
xlat
lods
call
hlt
mov
loopne
clc
pop
ret
mov
push
mov
sarl
adc
dec
in
push
push
or
sub
js
addr16
xchg
adc
cmpsl
and
icebp
js
or
cmp
xor
lea
add
shll
add
inc
or
adc
mov
fcom
push
xchg
xor
dec
lcall
call
sbb
lret
add
out
xchg
push
dec
mov
push
cmp
ljmp
or
sub
out
pop
adc
or
shlb
inc
pusha
ss
push
jno
pop
adc
push
cmpb
js
sti
xchg
pop
fimull
xor
pop
std
cmp
jne
lea
daa
push
adc
adc
cmp
fsubr
adc
dec
aaa
movsb
lahf
orl
pop
and
or
fwait
addb
fisubl
adc
dec
movsl
dec
jg
fcoms
cmpsl
cld
mov
cmp
incl
jge
jae
push
lsl
jmp
mov
adc
jmp
clc
movsl
jmp
outsb
cmp
add
push
sbb
lods
or
mov
add
or
xchg
in
xor
pusha
cmp
jp
addr16
push
xchg
add
xor
loopne
and
add
in
orb
fs
adc
jo
xchg
cmp
roll
jo
repz
or
dec
incb
and
push
and
cmpl
inc
cltd
insb
pop
fs
addl
popf
negl
mov
rorl
lea
insb
mov
xchg
or
dec
sahf
fisttpl
xor
push
test
xchg
add
sub
push
mov
xlat
enter
or
dec
and
adc
push
mov
pusha
test
dec
push
mov
mov
cmp
pop
xor
mov
sub
lret
leave
inc
xchg
dec
adc
pop
leave
lds
xchg
sbb
add
lds
inc
and
and
ljmp
lcall
insb
fcomi
push
cmp
test
lret
jo
ret
xor
xchg
cmc
mov
pop
ja
and
ljmp
mov
push
inc
dec
enter
xor
xchg
jo
js
jmp
xor
push
jb
popf
je
push
adc
cmp
cld
jo
sbb
movsl
and
ljmp
push
sub
add
mov
mov
inc
fs
pop
xchg
push
int
mov
xchg
mov
imul
sbb
outsb
or
mov
cltd
dec
roll
ficompl
jle
or
jns
add
sarw
xor
dec
sbb
cltd
loopne
jle
insb
int
pop
or
add
push
iret
mov
push
xor
xchg
pusha
ljmp
lcall
jmp
and
sbb
mov
sbb
push
inc
cmp
cmpsl
pop
orb
movsl
sbb
fcoms
rclb
addb
leave
xor
sbb
fdivp
les
dec
jne
sbb
sbb
dec
pop
push
lahf
jns
sbb
movsl
pop
push
inc
pop
push
movsb
repnz
pusha
jmp
es
xchg
lret
sbb
mov
pusha
enter
push
enter
dec
cmp
pusha
sti
add
shrl
xchg
stos
push
pusha
pop
aas
inc
mov
jecxz
inc
in
data16
add
ret
lahf
test
test
cmp
jp
lds
mov
xchg
push
mov
leave
pop
lea
jo,pt
js
and
and
cmp
dec
insb
push
and
xchg
clc
mov
mov
push
sahf
or
outsl
dec
jmp
adc
in
inc
or
mov
dec
outsl
loop
mov
cld
push
test
push
std
push
and
dec
or
imul
or
hlt
pushf
dec
push
and
repz
cmp
mov
cs
stos
xchg
mov
rorl
inc
xor
cmp
cwtl
add
adc
and
ljmp
jmp
lock
mov
dec
cmp
sub
push
clc
jl
mov
add
adc
pop
xchg
xchg
and
popf
fistps
or
aas
fs
jnp
inc
adc
and
or
dec
or
dec
sbb
pop
mov
addr16
pop
mov
sbb
pop
and
mov
fwait
clc
add
push
push
stos
mov
sub
cltd
rclb
xor
sbb
mov
push
adcl
cmc
pop
or
or
pop
dec
cld
push
mov
mov
popa
adcb
sarl
test
xchg
pop
shlb
jmp
nop
add
dec
jl
aam
rclb
nop
pop
fdivrs
cmpsl
or
js
je
or
adc
inc
push
sbb
jns
andb
jmp
ret
adc
daa
dec
add
sub
xor
dec
xor
in
jns
xor
pusha
pop
push
loop
and
imulb
lcall
add
mov
cmpsb
cmp
mov
adc
jo
jp
fisttpl
ds
xor
or
outsl
outsl
lret
call
pop
adc
daa
dec
fcmovnu
cmpb
je
or
jmp
mov
mov
xor
adc
push
pop
dec
sub
lock
inc
add
lea
xlat
pop
nop
add
add
and
fcmovnbe
pop
sub
repz
or
ja
or
mov
sbb
or
data16
add
orb
cmpl
xor
shrl
pop
push
push
or
xor
fsts
pop
or
add
andl
movsb
imul
or
add
movsb
out
mov
lds
into
xchg
sbb
cmp
cmpsl
setae
dec
push
push
andl
sbb
dec
imul
cli
xor
insl
and
xchg
xchg
inc
mov
enter
fidivs
jbe
stos
fisttps
mov
adc
daa
std
add
adc
and
sub
xchg
mov
fdivs
mov
add
mov
xor
cmpb
fidivs
push
xchg
sahf
pop
cwtl
stos
adc
lret
or
loop
sahf
mov
xor
and
push
xor
aam
iret
cmp
mov
movsb
mov
sti
xchg
adc
jmp
popa
mov
lcall
pusha
pop
icebp
pusha
add
roll
push
dec
push
imul
pop
out
sbbl
fwait
push
into
loop
cmp
adc
push
or
jp
loop
cmovle
testb
shrl
xchg
dec
inc
je
add
stos
adc
xchg
mov
andb
fwait
add
js
fs
mov
or
and
subl
imul
sbb
push
mov
outsb
sub
addr16
add
adc
bound
mov
cmp
jb
push
cltd
cmp
dec
mov
enter
pop
push
or
stos
jne
adc
nop
lcall
sub
mov
mov
je
mov
mov
jle
cmp
inc
mov
dec
pop
fisttps
sahf
mov
dec
ret
inc
push
in
inc
adc
inc
pop
dec
in
push
adc
loopne
sidtl
jnp
stos
or
mov
xchg
and
sahf
ss
sub
push
dec
call
mov
gs
insb
fs
insb
inc
leave
test
ljmp
dec
mov
xor
nop
inc
push
pop
dec
popf
je
popf
pop
dec
jb
fstpt
xchg
push
adc
cmp
jae
add
sbb
ret
test
push
fcompl
xchg
and
cmp
lock
xor
xchg
fildl
bound
daa
inc
jnp
or
push
cwtl
mov
or
movsb
mov
adc
clc
es
jg
and
repnz
je
jl
sub
xor
nop
data16
sub
xchg
mov
je
pop
mov
test
and
dec
lahf
test
sub
mov
push
and
jmp
and
mov
dec
sahf
wrmsr
jmp
sarl
xlat
dec
cs
xlat
sub
mov
lods
mov
and
leave
js
sub
pop
sbb
ret
aaa
ds
cld
and
add
test
add
jecxz
pop
int
cmp
xchg
sbb
push
out
mov
lea
inc
sub
or
inc
push
pop
mov
add
mov
mov
push
dec
and
pushf
data16
xor
jno
shll
scas
mov
jge
cmp
pop
negb
test
shl
dec
jno
outsb
pop
xchg
mov
mov
ljmp
fisttps
fisttps
sub
ffree
inc
lods
sbb
cmpsl
cmp
ss
fistpll
aad
loop
add
insb
add
lods
aad
xor
push
xor
or
mov
push
stos
rorl
inc
addr16
inc
mov
sbb
shll
xor
loopne
and
ret
das
add
loope
xor
pusha
sbb
or
js
add
push
push
push
sub
js
jo
jns
fwait
adcb
mov
mov
and
cld
gs
arpl
inc
push
push
fwait
and
sub
andb
add
fadds
add
and
test
shlb
ret
xor
divb
je
mull
pop
sub
popa
add
dec
add
dec
pop
enter
icebp
sub
or
leave
jp
xor
xchg
xor
mov
push
xchg
movsb
xchg
inc
mov
mov
imul
cltd
add
mov
or
fisttpl
push
inc
mov
cmp
fs
push
cmpl
fs
mov
mov
adc
or
dec
nop
xchg
arpl
cmp
mov
mov
jbe
sbb
inc
iret
inc
pop
and
mov
daa
fidivl
aas
mov
and
push
sub
mov
fistps
jg
lock
ss
mov
fldt
push
mov
mov
inc
dec
bound
add
sarl
sub
add
or
add
push
loopne
push
push
test
mov
fwait
cmp
mov
adc
cmpsb
movsb
lods
int
or
cltd
push
pop
and
pop
push
sub
pop
cwtl
pop
mov
ret
ret
scas
repz
and
nop
push
iret
lahf
stc
push
pop
cmpsl
je,pt
adc
lock
lock
jb
push
fs
or
and
inc
xor
movzbl
xchg
fcmovne
mov
or
inc
dec
sbb
sub
dec
push
mov
xor
and
fs
out
pusha
cmp
xor
cltd
xchg
mov
inc
or
add
pop
mov
inc
in
lret
or
and
and
dec
mov
insl
xor
and
loope
in
or
loopne
xchg
cld
loopne
push
mov
push
jne
inc
loopne
push
add
mov
sub
pusha
leave
inc
andl
xchg
add
scas
insl
and
push
cmpsl
roll
les
je
repz
mov
lock
mov
mov
xor
mov
adcl
cs
mov
loopne
pushf
push
and
push
and
lods
ss
ds
sub
scas
xor
je
dec
movsl
test
push
push
xchg
psrad
xor
add
and
mov
push
clc
rcll
sub
mov
shlb
and
adc
add
push
js
scas
jb
dec
dec
cmpsl
es
pop
pop
sbb
lods
mov
bound
sub
cmp
loopne
jmp
nop
pop
pop
out
sbb
fisubl
mov
lock
popa
jl
sbbb
push
xchg
push
cmpb
shlb
mov
and
movsl
and
std
inc
ret
adc
sti
xchg
aam
push
js
adc
inc
mov
and
jb
add
add
dec
stc
cmpsl
inc
add
lret
mov
in
inc
inc
add
fimull
push
push
push
fwait
sbb
shrb
sbb
lods
push
jp
and
push
pop
and
daa
sbb
adc
int
fnsave
in
dec
lock
mov
xor
pusha
cwtl
adc
add
sbb
inc
jg
popa
cmp
hlt
jne
add
pop
cmp
adc
in
int3
inc
inc
push
push
sbb
add
push
sbb
push
dec
push
cs
outsl
pop
adc
lcall
outsl
fwait
xor
pop
inc
pop
dec
fwait
sbb
dec
sbb
jle
add
and
setge
loopne
mov
sbb
sbb
mov
sbb
cs
adc
adc
jmp
cmp
jnp
je
pop
decb
push
lret
addl
add
xor
loop
orl
inc
inc
inc
data16
dec
enter
pop
pop
add
jmp
test
cmc
inc
push
push
adc
mov
aad
add
xchg
out
sbb
mov
push
fcom
pusha
inc
pushf
insb
leave
push
call
jge
xchg
jae
mov
xor
jecxz
and
jl
fcoml
push
add
icebp
cmp
xlat
add
push
pop
sbb
in
hlt
or
mov
jle
adc
xchg
ret
movsb
pop
push
adc
pop
fs
mov
stc
dec
adc
add
cwtl
dec
or
imul
dec
out
mov
hlt
les
push
movb
pop
js
outsb
xor
and
pop
decb
cmp
movsl
lea
mov
jg
mov
adc
push
xchg
push
sbb
pop
je
xchg
sub
pop
jmp
ret
xchg
sbb
cmp
bound
sbbb
add
add
roll
into
push
add
dec
cmp
jae
nop
ficoms
mov
sub
adcl
mov
sbb
pop
cwtl
jns
addb
xor
into
or
shlb
push
or
mov
daa
or
movsb
and
cmp
popf
and
add
push
mov
cmc
and
ret
mov
stos
pop
mov
loopne
call
and
fsubrs
shlb
lret
js
inc
mov
add
add
mov
jae
sbb
adc
mov
mov
shll
inc
dec
daa
test
and
enter
add
shlb
sub
lods
enter
mov
inc
aam
add
aad
and
rcl
cmp
push
sbb
adc
sbb
inc
movsb
aas
or
stos
cmpb
mov
rclb
mov
push
dec
adc
aad
inc
lret
pushl
and
lds
add
or
jmp
ret
mov
xor
out
push
sub
movsb
jb
pop
aaa
jb
lock
test
sbb
fidivl
daa
or
adc
js
int
iret
cmc
mov
ret
jbe
stos
lret
jecxz
and
and
jle
cmp
jbe
jae
pop
or
and
add
lock
adc
ret
cwtl
sub
mov
push
and
ret
and
lods
shr
rclb
add
call
xor
shrl
add
add
sub
loop
fucomip
outsb
dec
dec
push
ja
adc
add
test
fcmovnb
inc
gs
sbb
mov
test
add
pop
fists
movsb
cmp
sbb
sbb
rorb
sbb
in
bound
pop
hlt
jle
or
add
inc
jle
sbb
mov
mov
sbbl
or
push
ret
sarb
ret
add
out
add
fcmovnu
push
cwtl
pop
sbb
pop
call
mov
sbb
in
pop
push
int
xor
add
push
pop
and
pop
ffreep
and
jecxz
pop
sub
lock
shl
leave
and
rcrl
or
jne
inc
dec
and
or
push
iret
sub
imul
jl
inc
lea
jno
add
popa
or
jecxz
sub
xor
cmpsb
imul
xchg
adc
imul
pop
xor
pop
sbb
xor
shlb
pop
cmp
push
cwtl
inc
mov
pop
in
mov
sub
sub
cmp
cmp
xchg
not
sub
adc
mov
xor
mov
clts
and
fidivrl
dec
sbb
filds
dec
adc
add
cs
pop
dec
push
cwtl
dec
in
pop
test
cmpsb
adc
cmp
pop
inc
dec
mov
or
jp
mov
adc
cld
push
dec
mov
mov
dec
lcall
push
mov
js
rorb
or
and
push
pop
insb
cmp
push
dec
fs
ret
push
inc
and
dec
pop
add
in
dec
push
or
xchg
sub
add
test
adc
roll
ss
es
sbb
jg
scas
xor
pop
gs
sub
inc
cmpsl
mov
add
xor
adc
mov
pop
ret
and
pop
scas
push
ja
pop
nop
sub
cmp
movsb
cltd
aas
mov
add
xor
add
adc
or
pop
fs
fisubs
xor
and
neg
sbb
push
movsl
seto
xchg
scas
dec
popf
xor
pop
mov
adc
and
mov
mov
mov
xchg
xor
or
pop
xor
or
mov
push
scas
fwait
in
xchg
mov
mov
xchg
cwtl
inc
inc
push
ret
xor
cmc
cld
cmp
int3
popf
inc
insb
out
add
jae
sbb
sub
adc
lea
and
aad
inc
adc
aad
jb
insl
sub
pushf
jle
prefetch
push
in
lods
mov
push
pop
cwtl
inc
jbe
lret
nop
push
lret
adc
les
bswap
sub
cmc
push
fcoms
dec
decl
mov
mov
lea
xchg
push
mov
cmp
orl
pop
cmp
pop
adc
xchg
cmp
movsl
movsl
or
test
or
add
pusha
cmp
add
cmp
dec
mov
stos
lahf
push
push
add
aas
les
cmp
ljmp
enter
cmp
adc
movsl
and
seto
adc
jae
notl
mov
imull
push
lcall
fmull
pop
stos
adc
cmp
pop
fimuls
jo
or
dec
add
xchg
xor
dec
bswap
dec
movsl
jns
add
ret
adc
nop
stos
push
filds
cmp
mov
lcall
xchg
sub
lea
jecxz
lods
cltd
dec
popf
inc
js
xchg
push
incl
daa
xchg
mov
xchg
push
push
shrb
clc
out
or
call
pop
test
icebp
add
in
ret
adc
xchg
push
jne
pusha
xchg
sahf
orb
cmpsb
push
xchg
aas
xchg
ret
cmp
mov
add
pop
mov
add
repnz
inc
and
je
cmp
mov
sub
xchg
sbb
xchg
fdivrp
push
shrb
sub
je
push
jne
lea
xchg
dec
rcll
xlat
pop
pop
and
push
add
sbb
push
mov
jg
jbe
jp
mov
adc
mov
push
mov
pop
mov
insb
andl
lock
mov
mov
adc
or
lods
bts
jne
mov
pop
sub
xchg
or
and
sbb
pop
pop
out
add
and
xchg
jle
in
add
and
lds
jno
nop
sbb
lret
sbb
pop
jae
pop
add
xchg
sbb
and
sub
rolb
add
and
adc
repnz
sub
mov
pusha
loop
jo
pop
dec
sbb
add
addl
adc
sbbl
xor
sbb
push
xor
mov
sbb
pop
dec
cwtl
and
adcb
push
lahf
lret
stc
decl
sbb
mov
inc
push
add
popf
jle
cmpb
mov
fs
repz
sub
mov
sub
push
cmp
push
aaa
and
lahf
mov
xorl
or
repnz
mov
inc
sbb
pop
bound
add
pop
xchg
pop
addr16
and
in
pushf
test
mov
add
mov
adc
mov
cmpsl
lret
icebp
xchg
fcmove
mov
or
lods
aaa
dec
sbb
imul
mov
dec
cld
pop
hlt
jo
cmpsb
cmpsb
inc
pushl
xchg
data16
andb
rcl
inc
or
shll
shrl
test
pushf
fs
sub
adc
sub
pop
je
inc
hlt
push
sbb
add
add
dec
sub
mov
nop
movnti
mov
out
out
xchg
enter
add
popw
jl
lock
ljmp
push
cmp
inc
xor
cmpb
and
xchg
jp
mov
into
insl
dec
scas
inc
xor
xorb
sbbl
pop
je
ds
lret
add
repnz
inc
sbb
push
sub
fadds
mov
pop
xor
test
adc
cmp
xchg
push
pop
push
pop
adc
cmp
ret
sbb
pop
and
xchg
stos
dec
je
mov
sub
mov
bound
repnz
jb
and
imul
push
aam
pushf
and
xchg
push
leave
shlb
and
lock
and
push
and
push
and
push
sub
addl
arpl
adc
out
dec
push
push
sbb
or
inc
inc
add
adc
mov
lock
mov
or
fld
orb
jb
pop
push
dec
daa
lods
test
nop
rcll
mov
inc
mov
insl
cltd
inc
dec
scas
scas
push
stos
and
jge
mov
test
cmpl
and
sub
push
xchg
cmp
loopne
nop
and
and
add
outsl
add
mov
mov
icebp
rcl
mov
shrb
repnz
jg
sbb
sbb
sub
sub
mov
xchg
aaa
mov
inc
sbb
ljmp
outsb
into
add
es
sub
aad
add
dec
mov
loopne
fs
adc
adc
inc
pop
je
jne
xchg
jb
sub
push
push
push
push
in
push
push
dec
push
xchg
xchg
inc
sub
push
mov
test
sbb
fwait
sub
or
xor
lods
lods
ret
sbb
sub
pop
je
xor
inc
int
sub
push
and
mov
iret
sbb
push
or
add
add
inc
imul
lss
add
mov
cmp
sbb
test
mov
xor
test
mov
sbb
cmp
push
jo
pop
je
adc
fisttpll
push
addr16
dec
test
int3
pusha
sbb
push
mov
jno
test
fidivrs
push
sub
mov
inc
inc
iret
xor
jmp
es
sahf
mov
sbb
xor
sub
push
or
pop
jmp
sub
imul
sub
inc
imul
mov
pop
or
pop
bound
xchg
rcrb
or
cmp
push
popa
scas
xor
pop
push
loopne
lea
sub
xchg
jnp
enter
push
jbe
inc
in
loopne
int
dec
pop
dec
cmpsb
cmp
leave
adc
or
lods
push
push
or
je
fstl
adc
cmp
mov
or
or
lods
or
jb
push
or
or
subb
pop
aaa
mov
or
adc
add
xor
inc
xchg
and
push
mov
or
popa
or
jmp
add
xchg
insl
jecxz
adc
subb
push
jns
rclb
and
or
push
xor
pusha
adc
pop
xchg
or
sub
add
and
push
mov
imul
arpl
push
adc
in
call
or
je
mov
adc
je
je
outsb
jle
loop
mov
cmp
pop
scas
mov
sub
test
fisubs
mov
jge
pop
push
pop
or
cwtl
ds
pop
arpl
dec
sbb
int3
dec
mov
add
inc
test
out
add
adc
dec
scas
popa
sarl
or
xor
pusha
stc
loopne
mov
push
mov
inc
adc
add
add
pop
push
sbb
sbbb
ficoms
push
push
or
in
or
mov
inc
push
cltd
inc
or
and
push
cmp
lcall
xorb
lea
sub
or
mov
jne
rcrb
icebp
push
and
pop
dec
sbb
out
pop
push
or
enter
adc
ja
aaa
mov
mov
pop
sbb
cmp
or
push
pushf
push
cwtl
sbb
repnz
aaa
sbb
add
lds
dec
xchg
lret
push
push
mov
fnstenv
xchg
adc
push
xor
xchg
add
popa
mov
inc
mov
adcb
stc
cmc
leave
leave
mov
mov
and
pusha
adc
js
sub
push
and
dec
xor
test
mov
vpperm
or
test
push
pop
fs
jg
inc
insb
or
in
cld
pop
or
xchg
or
or
fisttpl
sub
push
xchg
out
test
test
es
rclb
scas
and
dec
and
loop
inc
popa
subl
jo
ret
pusha
dec
sbb
pop
mov
addb
cmp
lahf
mov
xchg
lods
fld
adc
sbb
int
pop
jo
or
push
or
enter
xchg
nop
sbb
mov
cmp
test
adc
or
mov
xor
push
mov
test
sahf
sahf
xor
sahf
inc
push
add
push
insb
pop
sub
dec
xchg
es
xorl
fnstenv
out
int
call
das
add
push
inc
push
sbb
push
pop
add
push
adc
push
mov
inc
xchg
pop
push
add
or
jge
popf
imul
sub
adc
adc
add
push
decb
xlat
xor
jp
outsl
and
nop
xor
and
xor
jne
xchg
or
int3
fcoml
mov
or
add
adc
xchg
add
mov
and
aam
sub
dec
inc
je
aam
and
rorl
mov
incl
add
add
sub
jbe
insl
imul
aad
xchg
lret
test
test
hlt
xor
in
push
sub
lods
test
sub
mov
rcll
addr16
mov
addl
dec
mov
and
add
adc
addb
cmp
daa
pop
inc
or
subb
test
jecxz
dec
adcl
sub
stc
loope
loopne
mov
loopne
dec
dec
pop
xor
push
or
jnp
or
hlt
ss
inc
sub
xchg
dec
loop
mov
inc
lcall
and
lcall
mov
mov
lret
lock
cwtl
movsl
nop
sbb
or
addr16
or
out
jns
or
test
or
xor
inc
push
sub
loopne
sub
cmp
dec
divl
jl
mov
roll
pop
ret
mov
lret
dec
mov
add
popa
and
push
iret
sbb
cmp
mov
pop
inc
cmp
jmp
fs
inc
push
mov
sbb
int3
add
sbb
pop
mov
xchg
in
scas
fs
sbb
xchg
sbb
push
xor
shrb
pop
sbb
mov
mov
add
pop
add
sub
pop
xchg
and
and
and
nop
pushf
and
cltd
add
and
add
aam
fsubl
inc
sahf
or
enter
add
sub
sub
mov
outsb
inc
insl
testl
mov
fs
or
cmp
inc
cmp
and
or
cmpsl
or
pop
jbe
rolb
adc
movsb
jmp
push
and
je
pusha
adc
add
pop
dec
sbb
and
pusha
push
jl
call
and
les
in
cmpsb
es
pop
lods
ret
lock
pop
jae
xorb
imul
mov
jne
xchg
xor
dec
push
push
inc
push
add
inc
bound
sub
and
adc
xchg
and
sbbl
push
inc
add
data16
cmpsb
push
sbb
adc
lret
pop
int
cmp
cmc
sbb
in
mov
cmp
ja
push
daa
cwtl
or
jl
mov
mov
imul
test
inc
outsb
and
leave
cld
inc
fcomps
bnd
add
push
hlt
mov
out
add
fdivp
xchg
out
lret
pop
sbb
adc
imul
inc
jl
aas
bound
jmp
adc
in
out
dec
and
rclb
and
sbbb
sbb
dec
insl
xchg
test
and
enter
addl
fiadds
push
rolb
add
inc
mov
inc
movsb
and
inc
sahf
aas
lods
ds
sahf
stos
ss
dec
cmp
mov
enter
push
cmp
pusha
cmp
sbb
aaa
leave
dec
push
iret
inc
jge
inc
lea
cmp
push
push
lcall
xor
jne
lods
stos
into
loop
shlb
mov
lret
insl
or
add
inc
cs
cmp
dec
mov
lds
mov
inc
pop
push
enter
call
js
pop
mov
lcall
pop
dec
sub
sub
and
rcrb
or
insb
imull
jmpw
push
nopl
imul
aam
sub
dec
data16
or
jb
pop
ret
data16
cmpb
xorb
pop
jbe
pop
jnp
cmp
in
ret
mov
adc
inc
xor
rclb
pop
popa
in
icebp
add
insb
sbb
cmpsl
push
sbb
test
add
sub
add
in
loop
sti
push
inc
outsb
inc
jge
add
push
push
push
shrb
add
out
test
icebp
inc
sar
jl
in
popa
sub
sub
mov
rorb
mov
push
push
pop
std
fistps
xchg
and
loop
inc
leave
push
push
fildll
dec
jns
lods
pop
clc
push
fcomps
push
shrl
pop
orb
and
or
in
sbbb
adc
imul
pop
sub
add
mov
push
mov
and
jge
add
sbb
sbb
gs
sbb
dec
xor
orb
fmuls
enter
and
and
xor
push
pop
dec
out
aam
dec
pop
push
call
dec
dec
dec
or
inc
jno
inc
dec
dec
stos
push
mov
xor
shlb
int3
sbb
xchg
sbb
dec
fstp
inc
mov
lret
xchg
xlat
mov
push
dec
dec
mov
or
lds
cli
sbb
loopne
ret
mov
out
fnstsw
inc
pop
sub
and
pop
dec
sub
dec
cmp
and
adc
mov
cmp
and
insl
mov
mov
int
push
sbb
cmp
mov
jp
xchg
sbb
mov
sbb
push
cmp
sub
movb
addl
adc
loopne
mov
mov
xchg
push
mov
aaa
lea
jns
inc
test
sbb
sub
push
add
xor
es
fiaddl
xor
daa
xchg
inc
push
cli
push
add
xchg
mov
in
mov
cltd
xor
or
xchg
push
lret
inc
leave
adc
push
ret
pop
push
pop
mov
xchg
mov
xor
push
mov
pop
clc
popl
daa
or
inc
cmp
and
cmp
and
xchg
push
jne
fs
out
rcrb
push
rolb
jae
ss
pop
jcxz
sub
pop
add
cmp
insb
add
mov
mov
or
and
add
in
orl
sti
lret
ja
pop
push
loopne
lea
and
sub
lret
push
cmpsl
cmp
push
rcrb
out
xor
push
leave
sbb
cli
mov
cmp
imul
js
cmp
int
fistl
pop
sbb
movb
cltd
xor
xchg
push
add
dec
pop
mov
and
les
xchg
dec
add
loopne
inc
jl
cltd
dec
lcall
add
nop
out
int3
pop
xchg
out
sbb
out
jns
add
scas
xchg
push
add
lahf
ret
aam
test
lcall
int3
mov
or
cs
daa
icebp
or
xor
mov
fcompl
pusha
mov
xor
in
loopne
mov
mov
and
adc
xchg
dec
fcmovb
add
push
push
addb
mov
pop
mov
push
push
cmp
jae
call
xor
cli
push
hlt
mov
sbb
mov
imull
sbb
mov
add
push
pop
inc
jne
mov
sbb
popl
std
add
xor
push
ret
out
mov
pop
push
ja
cli
fistpl
jge
inc
pop
or
pop
inc
add
push
sbbb
in
cli
test
add
add
sbb
daa
repz
jno
push
jno
add
notb
or
jg
xchg
push
cmpb
incb
aaa
dec
jecxz
push
push
mov
mov
or
add
mov
clc
pop
stos
and
imul
or
ffreep
loope
gs
add
push
les
or
mov
and
shll
jo
loope
push
xor
mov
dec
xchg
in
xchg
and
add
les
cmp
xor
es
add
xor
sbbb
xor
add
fisttpll
jne
pop
cs
mov
and
sub
inc
inc
adc
mov
push
pop
or
jae
jo
pop
xor
pop
arpl
sbb
rcrl
mov
cmp
adc
lock
sbb
ret
add
fistl
fstl
mov
jmp
sbb
jno
jp
push
mov
lods
ds
push
sub
and
add
add
loope
push
call
notl
inc
fidivs
pop
sub
xchg
add
pop
push
imul
sub
xor
cmpsb
and
testl
xor
sbb
add
xor
pop
xor
or
cmp
cltd
xor
cs
jb
test
dec
jns
push
sub
mov
popa
das
mov
test
test
mov
push
test
fcompl
add
sub
or
sbb
jne
cmp
xchg
and
fisttpl
in
cli
cltd
push
sbb
or
and
bound
mov
add
xchg
jo
cltd
or
lcall
js
or
or
pushf
adc
xor
imul
rcrl
adc
mov
add
sub
xchg
push
sub
add
lock
inc
adc
and
adc
addl
ret
inc
add
cmp
ret
inc
std
add
or
jp
ret
pop
mov
mov
push
mov
jle
cmp
jae
mov
xorl
cmpl
cmp
jl
aad
pop
dec
or
dec
outsl
sar
std
lcall
shlb
xchg
xor
mov
mov
std
add
hlt
sbb
and
or
mov
add
and
shrb
adc
stc
test
aam
ror
push
outsl
xor
and
lods
sub
sti
inc
xchg
xchg
sar
repz
pusha
and
mov
lea
andb
movsl
xchg
dec
adc
shll
push
repnz
adc
test
sub
xor
clc
add
in
add
add
xor
inc
add
imul
inc
dec
add
in
jo
xchg
lcall
dec
fwait
and
add
xchg
rolb
leave
pop
adc
sub
and
sbb
sub
push
cmp
sbb
push
add
mov
int3
cmp
subl
and
mov
sahf
out
xor
push
mov
aas
in
insb
cmp
hlt
inc
pop
jmp
add
adc
xor
loop
mov
cmp
push
adc
mov
sub
push
sbb
sbb
mov
push
or
ss
adc
adc
push
mov
cmp
cmp
add
mov
and
jb
pop
incl
imul
test
scas
inc
xchg
adc
mov
mov
or
inc
add
popf
mov
incb
inc
sub
test
in
adc
xchg
fcoml
arpl
dec
rorl
add
test
jg
and
test
push
adc
lock
mov
fcompl
mov
clc
movsl
xchg
adc
test
jecxz
dec
push
mov
pop
and
xor
fdiv
mov
dec
mov
xchg
push
daa
jne
xchg
mov
daa
out
out
popf
xchg
jne
mov
jge
mov
adc
inc
cmp
xchg
pop
cmp
cwtl
in
adc
sub
push
pop
lock
les
or
push
fdiv
add
mov
adcl
rorb
orb
mov
dec
or
popf
scas
jl
and
mov
sub
or
test
adc
stos
pop
or
enter
jne
rclb
loopne
aam
cmp
sbbl
cmp
push
cmp
jl
sub
mov
push
and
fdivrs
ret
pop
lock
movsl
shrl
pop
mov
in
into
jp
or
push
jb
lock
or
cmp
mov
mov
out
mov
incl
adc
je
cmp
je
cmp
je
cmp
je
push
jne
cmp
mov
mov
adc
fwait
out
jle
xchg
mov
mov
lods
sar
stos
lock
subb
js
sbb
out
out
mov
inc
and
or
hlt
inc
and
popa
xor
xchg
or
adc
andb
fidivl
das
adc
mov
scas
mov
aam
ret
add
pop
lods
push
icebp
cmp
lret
and
cmovs
adc
pop
jbe
lahf
rclb
cmc
jno
out
inc
ds
sarb
add
jb
cmp
stos
mov
mov
pop
rcll
movsb
jecxz
inc
cmp
sbb
push
movsl
rol
inc
dec
movsb
push
mov
lock
shrb
test
xor
push
stos
sbb
pop
das
xchg
xor
mov
push
sbb
nop
scas
lods
mov
sbb
or
push
inc
dec
add
mov
ss
adc
clc
test
int3
mov
mov
imul
push
sti
jne
addl
and
or
and
adc
mov
adc
push
push
dec
inc
lahf
mov
addl
mov
sbb
inc
leave
mov
mov
in
push
pop
andb
mov
btr
jb
test
jge
into
dec
dec
mov
xchg
sbb
sbb
push
jno
push
sub
push
or
ja
mov
fwait
loop
cld
pslld
in
pop
cld
or
add
loopne
pusha
dec
loopne
or
xorl
loopne
xchg
movsb
or
cmp
and
data16
rcll
xchg
ret
xor
inc
adc
lcall
lods
or
mov
pop
pop
pop
xor
and
andb
enter
pusha
enter
sbb
mov
out
push
sbb
or
cmp
je
xchg
mov
or
and
arpl
les
inc
sub
lock
or
add
sbb
and
push
mov
lock
int
arpl
adc
pop
sahf
xor
adc
fdivrl
rorb
mov
add
inc
sbb
rclw
bound
rcrl
cmpsl
sub
mov
ret
sub
cmp
and
enter
xor
lret
push
sarb
push
rorb
rorb
and
adc
and
dec
ficoml
outsb
push
call
jb
mov
mov
dec
in
xor
fs
pop
bound
pop
xchg
out
sub
outsl
sub
rclb
pop
mov
inc
sub
push
dec
sub
int
or
icebp
mov
gs
add
xor
ret
imul
pop
add
jns
fimull
jge
mov
ljmp
pushf
and
sbb
push
push
pop
sbb
fists
dec
adc
in
inc
add
xchg
add
mov
bound
and
in
in
push
fstps
mov
testb
outsl
mov
shlb
inc
dec
mov
rolb
cmc
push
es
clc
shr
xchg
lea
adc
mov
sbb
outsl
addl
pushl
aaa
mov
xchg
push
xor
mov
les
dec
xchg
shlb
sub
adc
sbb
dec
dec
sbb
inc
inc
fwait
and
cwtl
cld
mov
or
cmp
je
push
inc
push
adc
ret
cltd
add
mov
xchg
scas
sbb
xor
jns
pop
cmp
inc
lret
adc
lods
cmc
push
ja
mov
push
push
mov
ljmp
dec
pusha
push
push
leave
push
mov
scas
xchg
cmp
push
cmp
mov
xor
aad
insl
or
mov
mov
xor
sub
ret
inc
imul
and
js
stos
insb
add
or
popa
dec
mov
bound
push
cmpsb
adc
add
movl
ljmp
and
pop
lea
adc
push
inc
roll
mov
sub
jl
cs
pop
mov
xchg
aam
mov
xchg
lahf
xchg
mov
lods
test
in
loope
movsb
add
int3
sbb
pusha
sbb
adc
outsl
jno
pusha
movl
stos
adc
pop
and
adc
xor
jnp
mov
sub
addb
mov
and
and
or
push
test
lahf
adc
sub
stc
adc
inc
loopne
mov
and
sub
out
inc
or
scas
or
ret
sbb
loope
sbb
sar
rcr
push
add
push
and
in
aas
or
movl
inc
add
ffree
cmpb
inc
clc
jg
add
jge
jne
cmp
jne
or
push
sbb
sub
insl
pop
or
test
mov
push
rolb
fadds
pop
dec
jge
test
pop
mov
add
icebp
push
cld
icebp
add
in
xchg
sub
fadd
sub
dec
or
push
dec
mov
bound
lea
jecxz
sub
loopne
jmp
push
sub
mov
and
pop
imul
fs
out
lcall
push
push
jo
js
inc
das
arpl
stos
lds
movsb
add
inc
rcr
in
or
aaa
mov
pop
les
add
pop
inc
mov
cmp
lods
cmp
adc
ljmp
sbb
pushf
insb
push
lock
adc
push
sbb
or
inc
adc
mov
imul
out
pop
sub
push
push
stc
bound
out
mov
stos
cli
or
mov
and
sub
scas
sarb
push
lea
sarl
cmpl
mov
ss
sub
push
sub
push
push
push
mov
mov
scas
sbb
in
push
inc
add
movb
cmp
adc
mov
and
add
xor
add
push
xchg
adc
test
push
jmp
ja
push
sti
xor
xchg
out
sbb
jmp
cmp
mov
add
inc
shrb
jo
jl
jecxz
add
push
sar
jp
or
inc
dec
add
adc
jge
pop
and
dec
pop
dec
and
js
mov
dec
cmp
lret
or
fadds
shlb
icebp
add
jg
mov
cwtl
push
dec
push
cmpsb
push
xchg
push
cmp
or
repnz
addr16
push
incb
add
add
jb,pn
cmp
clc
or
push
pop
addb
xchg
std
fld
iret
inc
jne
lcall
xchg
mov
pop
add
mov
push
sub
sbb
add
xlat
xorb
mov
jnp
call
into
mov
popf
fiaddl
cmp
sbb
mov
push
icebp
push
add
push
es
nop
add
ficoml
mov
mov
test
jo
xchg
jne
sbb
or
aad
mov
cmp
xchg
mov
push
idivb
pop
ret
inc
xchg
pop
pop
jmp
inc
pusha
or
aam
add
in
das
jg
or
dec
pop
inc
adc
dec
insl
ds
pop
in
or
inc
add
mov
dec
dec
push
xchg
cmp
loop
fiadds
push
out
loope
push
enter
hlt
xchg
hlt
lea
mov
mov
test
push
sbb
sbb
imul
add
pop
in
xor
je
cmpsl
cmp
adc
das
add
stos
loopne
rolb
push
add
shll
or
jmp
dec
add
cmp
divl
loop
test
add
dec
mov
or
dec
xchg
push
rcrb
cmp
mov
inc
or
lock
aad
mov
decb
cltd
mov
sbb
push
sub
mov
pop
mov
les
sbb
add
jo
lret
cmp
shlb
jns
cmp
mov
rolb
xor
add
pop
xchg
imul
js
or
or
or
pop
xor
jg
cmp
pusha
or
push
inc
call
and
sbb
mov
push
das
mov
je
xchg
in
xchg
xor
add
push
xchg
lock
sub
lea
hlt
sahf
into
jle
cmpsl
aas
inc
cmp
jge
ret
inc
sub
test
push
sbb
push
mov
dec
pop
fwait
jne
add
loop
add
jne
scas
cmp
test
or
mov
loopne
loopne
fs
out
lea
push
push
in
add
sarl
cmp
pop
sub
mov
cmp
xor
push
mov
xor
jnp
and
bound
sub
andl
mov
or
add
push
inc
leave
and
aam
popf
push
dec
xchg
test
lds
dec
and
icebp
xor
pusha
in
xorb
and
lods
xor
sub
xor
adc
pop
push
loope
add
mov
stos
inc
jg
add
adc
xor
xchg
test
adc
call
push
pop
pop
sub
mov
mov
aaa
add
ret
scas
mov
addl
cwtl
lods
sbb
and
sub
and
sbb
add
xor
loope
out
or
mov
lds
cmp
mov
std
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
rorl
push
setl
movzbl
out
xor
sub
push
or
or
add
sub
loop,pn
shll
shrb
cmp
xchg
mov
add
sub
ret
and
add
dec
add
push
push
rcl
shr
mov
push
lahf
jmp
push
mov
xor
jg
jle
push
inc
jnp
out
or
and
lea
in
iret
test
mov
add
xchg
xchg
dec
add
sbb
test
adc
mov
push
mov
cmp
or
and
fsubr
mov
enter
or
and
xor
fisttpl
pop
aas
gs
xchg
loope
push
push
nop
bound
pop
mov
nop
jo
xchg
movsb
push
mov
adc
adcb
push
or
sbb
js
add
add
cmc
sbb
sbb
jns
adc
push
xchg
mov
or
das
push
leave
sub
cmp
and
xor
cltd
jp
ja
je
sbb
rorl
les
add
pop
pusha
stos
mov
addl
jb
loopne
and
mov
ss
es
push
cmp
inc
adc
mov
push
xor
sub
add
pop
add
add
or
fnstenv
in
mov
add
push
imul
or
add
mov
add
aaa
sub
pop
leave
test
insb
and
or
sbb
sbb
mov
push
sbb
pop
ficomps
xor
enter
into
pusha
add
mov
mov
rol
xchg
ret
fstl
and
daa
popa
movups
xor
adc
pop
inc
sbb
pusha
pop
mov
mov
xchg
inc
daa
jno
sbb
push
inc
sbbl
add
adc
rolb
and
mov
rolb
jge
mov
and
inc
push
push
nop
adcl
xor
jle
add
lock
push
movsl
clc
cwtl
push
hlt
jg
call
add
push
mov
xchg
es
jmp
mov
inc
jo
xor
xchg
enter
subb
sahf
fnstcw
fwait
adc
test
adc
cmp
enter
dec
and
and
xlat
xchg
mov
hlt
jo
cs
js
lea
mov
add
repz
cmpb
jne
insb
or
inc
push
cmp
xor
es
stos
mov
xor
cwtl
sbb
add
push
inc
add
imul
gs
add
aad
adc
push
sbb
or
dec
and
add
mov
or
lahf
sbb
push
xchg
lods
push
sub
sbb
lret
adc
mov
dec
ret
adc
pop
cmp
enter
xor
sub
xchg
adc
sub
push
xchg
or
mov
and
dec
in
rcrb
and
inc
mov
xor
and
dec
inc
popf
insl
movsb
cmp
movsl
add
in
bound
mov
test
fstl
sbb
mov
inc
pop
outsb
adc
and
pop
xchg
in
add
inc
ljmp
call
pusha
jmp
adc
cs
pop
pop
cmp
pop
sarb
fistl
or
lret
push
ret
push
or
jl
movsb
inc
adc
xchg
lock
and
sbb
or
sbb
cmp
leave
cmc
xor
pop
ret
push
stos
gs
cmpsb
pop
push
pop
dec
sub
jne
ljmp
and
pop
add
mov
nop
adc
jnp
rorl
mov
fsubrs
shrb
fmuls
popf
aas
push
imul
mov
rclb
pusha
jo
inc
dec
call
rorb
or
adc
popa
inc
mov
js
aaa
add
add
or
enter
push
addr16
leave
inc
and
push
add
sbb
dec
jne
mov
push
push
jl
sub
xchg
add
loop
and
cli
sbb
sub
jb
add
lret
sbb
jmp
dec
sub
cmpsb
pop
and
pop
js
push
pop
pop
pop
inc
pusha
push
xor
and
in
sub
insb
popa
leave
mov
das
in
push
sbb
sbb
jnp
pusha
js
xchg
inc
mov
call
xor
js
mov
push
inc
xor
sbb
pop
leave
jo
lret
pusha
adc
and
jl
js
cmpl
inc
or
sbb
mov
test
cmpsl
add
xchg
mov
cmp
sub
cmp
je
xchg
mov
or
jae
pop
cmp
sub
insb
xor
rorb
lds
dec
fsts
mov
add
scas
push
jb
inc
mov
xchg
cmp
mov
dec
adc
and
dec
xchg
jo
and
in
jmp
jae
xchg
dec
dec
adc
subl
pop
jmp
fwait
add
test
jns
add
add
xor
inc
push
add
enter
sahf
and
and
sub
jae
inc
or
nop
push
js
jne
push
std
cmp
lock
ss
sbb
dec
aas
lret
jns
shrb
push
pop
fs
addr16
pop
or
xor
int
push
push
stc
add
inc
pusha
sbb
iret
jae
push
sbb
add
lods
adc
xchg
adc
ljmp
aas
and
inc
out
mov
aaa
cmp
mov
push
add
jmp
or
mov
adc
xchg
shrl
mov
mov
icebp
addr16
mov
sub
mov
adc
adc
andl
inc
in
sub
inc
and
pop
inc
aam
push
add
push
popf
add
or
dec
push
nop
mov
sahf
shl
push
push
and
mov
and
cltd
rol
mov
jg
outsl
xor
insl
popa
enter
adc
adc
int3
sub
aam
mov
js
xchg
push
mov
testl
add
mov
and
or
roll
faddp
sub
mov
frstor
push
pusha
add
lds
pop
sbb
and
add
rorl
sub
cmp
mov
pop
pop
rclb
pop
adc
inc
jmp
pop
add
jmp
subb
push
or
sbb
fistps
or
add
dec
mov
xor
and
pop
cmp
or
or
daa
sbb
in
and
ret
mov
mov
test
pushf
mov
jbe
outsl
jle
mov
jg
cmp
fimuls
test
out
lret
pcmpgtw
addr16
lret
sub
jge
loope
jmp
mov
aaa
xchg
add
imull
imull
cmc
jl
lea
add
dec
jo
cmc
push
aam
adc
lds
std
lahf
out
mov
clc
xorb
mov
dec
push
mov
mov
stos
dec
dec
sbb
movsb
push
push
aad
mov
stos
loope
repz
es
rclb
fcomps
xchg
sub
add
imul
pop
scas
loope
mov
push
dec
or
and
and
shrb
push
or
push
push
outsb
xor
mov
pop
ret
setne
push
push
xchg
imul
or
jo
xchg
push
adc
dec
xchg
sub
fldl
mov
dec
test
nop/reserved
and
pop
push
mov
cmp
pop
cmp
or
into
add
shll
fdivrl
movsb
pusha
lret
mov
nop
push
pop
or
fnsave
filds
jns
push
add
mov
push
inc
pop
push
lret
xor
jb
add
mov
sarb
mov
into
adc
push
dec
push
and
fsub
mov
sahf
cwtl
jne
inc
pop
push
xchg
sub
push
or
push
daa
add
jle
stos
fs
push
mov
rcl
cld
xchg
inc
lock
cmp
cmp
dec
xchg
sbbl
push
movsl
nop
or
add
scas
clc
decl
jns
imul
push
xchg
out
sahf
inc
or
xchg
or
or
jp
jne
inc
sahf
inc
inc
or
mov
mov
rcl
and
pop
push
inc
cmp
les
or
adc
add
mov
xor
dec
sub
and
push
cld
lcall
push
mov
test
add
mov
psubusw
xor
xor
test
mov
add
shll
aas
orb
pop
fld
add
cli
andb
mov
cmp
cmpl
adc
mov
cmp
sbb
fcmovb
push
test
or
mov
and
add
or
mov
xchg
je
outsb
mov
jl
rclb
jns
add
jp
cli
xlat
xchg
pop
fadd
inc
jecxz
cmp
mov
fcompl
mov
js
mov
sub
mov
jmp
dec
setp
add
mov
lret
enter
cmp
push
or
mov
cwtl
add
out
test
or
int3
into
pop
push
cmp
shlb
subb
add
inc
and
push
jle
dec
popf
cmp
mov
push
push
and
adc
call
or
shrl
push
mov
mov
add
decl
mov
ss
mov
ds
xlat
out
loopne
sbb
adc
add
dec
jecxz
jmp
cli
in
in
xchg
dec
sub
mov
xor
push
lea
and
mov
sbb
or
fwait
mov
mov
dec
push
int
cmp
mov
sbb
ficoml
push
ret
push
punpckhdq
pop
xor
mov
int3
aas
adc
xchg
push
jmp
xor
out
jmp
cmp
cmp
je
push
dec
mov
imul
pop
or
insb
mov
pop
dec
in
jne
push
push
cld
mov
cmp
pop
sub
je
outsb
pop
clc
xchg
movsl
test
inc
mov
aam
push
jbe
jg
push
aas
sbb
dec
ja
push
clc
js
addr16
add
mov
pop
jmp
xor
pop
or
push
cmp
in
decb
inc
in
mov
mov
pop
cwtl
icebp
mov
cmp
cli
xor
pushf
in
adc
dec
pop
sub
leave
add
jne
and
int
pushf
mov
mov
xlat
mov
lods
pop
dec
pop
sbb
push
xchg
push
push
mov
sbb
sarb
icebp
inc
cmpl
cmp
xchg
cld
scas
add
sbb
stos
adc
test
je
test
imul
data16
pusha
xchg
fimuls
cmpl
push
mov
push
and
push
call
hlt
add
mov
xor
cmpl
or
inc
push
lock
rclb
shl
add
mov
ss
test
out
mov
clc
ljmp
pop
xchg
leave
pop
hlt
scas
dec
add
int3
test
out
jmp
inc
jp
pop
aam
clc
add
loopne
lea
jle
jbe,pt
sub
push
adc
push
int3
ds
push
in
or
adc
jns
int3
in
adc
adc
adc
sub
mov
sbb
jbe
leave
stos
jmp
sbb
push
jecxz
lds
pop
sbb
mov
pop
shll
push
mov
imul
jb
in
lock
scas
and
cmc
jo
mov
add
call
cmpsb
mov
and
push
jae
push
sbb
jo
iret
in
outsl
insb
xor
pusha
aaa
mov
int
jne
mov
fs
sbb
xlat
sub
xor
ret
push
push
add
jle
call
mov
cmp
sub
mov
popa
or
sbb
inc
pop
inc
rcrb
pop
push
fwait
loopne
dec
add
adcb
jl
sub
into
movl
push
daa
mov
cmp
stc
and
or
ds
out
jmp
jp
ret
mov
inc
dec
pop
shlb
inc
add
and
gs
or
and
mov
mov
or
and
mov
lret
push
loopne
add
dec
mov
popl
das
add
orb
nop
pop
in
rorb
in
sbb
lock
mov
push
ds
dec
addl
mov
rolb
push
cmc
js
push
or
xor
stc
lock
aas
mov
lods
psrlw
push
dec
inc
cmp
test
cltd
push
out
mov
add
push
push
icebp
cli
fdivs
lock
aam
mov
sarb
mov
fbld
or
inc
mov
mov
inc
mov
jl
subl
je
add
insl
movsb
lock
jb
sub
rcrl
adc
call
mov
adc
add
add
aaa
in
sbb
std
loopne
xor
push
inc
jp
and
pusha
push
pop
repnz
fisubl
xchg
add
test
lock
mov
inc
add
add
or
data16
test
and
mov
hlt
sub
push
fwait
sahf
cli
sub
push
incb
add
inc
or
mov
sbb
mov
movsb
sub
mov
add
push
lea
or
fimull
ss
pop
push
adc
imul
mov
xchg
jae
adc
je
rcll
ja
lahf
dec
mov
sbbb
or
mov
rcl
stos
jnp
xchg
lods
in
int3
fst
or
shrb
fisubl
lret
shl
cmp
inc
dec
shr
lahf
sub
sarb
inc
mov
divb
aad
jae
push
out
das
push
std
jne
dec
lret
inc
bound
adc
ss
mull
inc
cmpsl
clc
sub
imul
dec
add
xor
or
add
pop
scas
and
sarb
xor
out
push
idivb
mov
mov
mov
pushf
sub
mov
lods
adc
test
inc
push
xor
mov
mov
cmp
fwait
pop
add
jo
aad
stos
cli
push
sbbb
inc
sub
ss
sub
mov
je
fsubrl
cltd
rcrb
loop
cld
je
inc
lea
data16
cmc
sbb
jb
rcll
pop
pop
cltd
imul
or
test
jo
je
pop
pop
dec
sub
inc
jbe
jns
rcr
cld
jmp
adc
cmpsb
mov
push
push
mov
push
xor
insb
push
mov
test
push
xchg
outsl
cmp
test
lea
scas
cmpsb
addb
mov
call
inc
rcrb
add
aaa
add
loopne
imul
xchg
mov
jl
push
xchg
jmp
rorl
sahf
ret
popf
lock
mov
test
imul
rorl
push
push
cmp
js
test
jbe
mov
push
jns
addl
call
ret
push
sub
data16
sbb
lea
cmp
push
xchg
dec
popl
cmpsl
push
pop
add
push
lret
pop
es
adc
add
xor
sub
pop
bound
push
stos
imul
or
mov
push
sbb
inc
pop
xor
inc
data16
sbb
lret
mov
lods
pop
call
inc
sub
cs
mov
loopne
in
inc
adc
pop
cli
cmp
push
adc
push
popa
lock
mov
pop
testb
lock
imul
pusha
inc
mov
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
pop
lock
pop
add
sub
sbb
adc
js
leave
fwait
pop
cmp
inc
andl
shlb
cmp
push
jmp
sub
add
cmp
fimull
jl
in
cwtl
push
rcrl
or
mov
push
sub
lahf
and
push
inc
jl
xchg
pop
xchg
and
lcall
in
in
hlt
mov
add
adc
mov
negb
mov
fidivl
mov
insb
mov
add
push
pop
pop
push
ljmp
cs
push
shlb
or
and
outsb
movsb
lock
jmp
cmp
xlat
mov
cs
mov
cmp
testl
push
fnsave
mov
enter
fidivrl
mov
inc
aam
xchg
sar
cmp
pop
pop
mov
stos
je
fadd
clc
aas
lods
jecxz
aam
push
pusha
push
enter
lret
fstpt
dec
xor
insl
jne
cs
add
push
cmp
sahf
out
jne
add
push
in
stc
repnz
je
inc
or
push
sub
sahf
or
and
jle
cmp
push
push
int3
sub
or
inc
jecxz
push
add
lea
pop
xchg
cmp
dec
push
jo
fbstp
or
popf
pop
cmp
je
test
push
pusha
sub
lock
mov
xor
or
or
sbb
jne
push
or
fmull
push
call
jne
sub
nop
and
pusha
xchg
add
mov
sbb
pusha
cli
shlb
mov
call
add
push
dec
jb
push
push
push
inc
mov
jo
xchg
rorb
cmpsb
and
je
clc
push
fcoms
sub
sbb
lcall
pop
inc
sbb
sbb
push
sub
sarb
xor
xor
mov
cmp
push
xor
add
ret
mov
fmull
dec
loopne
adc
fisttps
les
mov
add
pusha
je
fwait
aad
hlt
fistpll
and
ds
test
mov
cmp
or
pushf
cmp
mov
hlt
hlt
mov
mov
dec
mov
push
fisubrl
rcrb
cli
fmul
sub
arpl
dec
sbb
mov
testl
mov
lods
xchg
movsl
jbe
or
daa
bnd
mov
imul
add
cmp
imul
push
lahf
out
rorb
fsubr
mov
out
cmpsb
cwtl
outsb
sti
or
push
mov
inc
int3
xchg
lcall
shlb
scas
sub
in
and
pop
fst
cmp
add
xchg
int
xor
loopne
add
loop
xor
test
cmpsl
dec
dec
add
sub
rorb
sbb
orb
jo
enter
push
orb
lret
jbe
push
dec
shl
push
xchg
adc
stos
add
xor
cltd
push
cmpsb
sub
push
mov
jne
adc
and
testb
dec
jo
insb
mov
inc
es
mov
push
shrl
adc
dec
pcmpeqw
test
jp
test
or
bound
pop
mov
xor
popa
add
in
xchg
int3
fbld
jmp
cmp
sbb
mov
iret
fs
mov
push
xor
sbb
ror
mov
or
sbb
mov
data16
aas
or
outsb
mov
fisubs
inc
shll
mov
add
or
enter
mov
andl
es
or
je
mov
call
pop
or
shl
push
add
xor
add
test
adc
repnz
imul
dec
das
mov
inc
shll
jo
rol
inc
ficompl
shl
ret
mov
orl
test
ret
fidivrs
jge
jne
lea
add
xlat
popa
jne
adc
cmp
inc
lock
notb
sar
and
inc
sbb
mov
pop
mov
xchg
xchg
add
cmp
mov
or
or
incb
repnz
addr16
xchg
out
out
add
iret
cmp
or
sbbl
push
stc
xchg
mov
inc
xchg
lret
movsl
out
fnop
pop
jmp
roll
mov
scas
insl
adc
xor
and
sbb
je
mov
adc
jne
xor
jb
inc
xchg
ja
fwait
gs
in
inc
or
stos
movsb
subb
outsb
pop
dec
lods
pop
cmp
add
pop
enter
ljmp
jns
je
ret
in
mov
shrb
test
push
mov
inc
dec
mov
add
push
lret
clc
or
sub
loopne
cmp
jg
add
dec
scas
sahf
ljmp
add
mov
dec
xchg
in
out
sbb
xchg
lea
push
pusha
adc
ja
lret
insl
decb
push
push
sub
and
shlb
add
adc
add
jmp
ja
jnp
pop
xor
push
or
addb
stc
icebp
jle
or
test
enter
inc
mov
xchg
decl
mov
or
push
xchg
add
xor
xchg
mov
loopne
sbb
add
pusha
adc
add
int
jo
addl
and
mov
and
js
adc
orb
shrb
and
add
addr16
notl
xchg
and
adc
rcrl
lods
or
push
pushf
in
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
cmp
clc
insb
in
push
jl
ds
ret
ja
gs
loope
mov
rorl
divb
mov
add
mov
push
loope
jl
cmp
je
mov
dec
fidivl
mov
lds
sti
push
sub
inc
pop
and
pop
lea
sbb
dec
or
xor
add
pop
lcall
dec
lock
or
xchg
or
lock
xchg
xchg
cld
lock
cmpsl
fldl
ljmp
lret
push
push
sub
test
add
sbb
rcr
xor
push
mov
dec
cli
jg
jbe
mov
into
add
push
mov
out
mov
into
lea
mov
sub
lods
lock
push
pop
mov
cltd
fimull
inc
push
je
push
out
sub
mov
pop
jl
testb
into
roll
and
dec
add
add
and
in
xlat
test
test
sbb
inc
mov
xadd
out
mov
scas
fcoml
inc
jae
add
leave
dec
sbbl
xchg
mov
adc
xorl
insb
clc
push
push
xor
lds
enter
movsb
cltd
add
inc
mov
cs
push
call
popa
insb
sub
arpl
outsb
sbb
jl
pusha
lds
clc
cwtd
addr16
imul
and
pushf
cwtl
fidivrs
or
sub
push
test
sub
jo
xor
add
je
jle
js
outsl
add
js
push
fcmovb
sti
jns
cwtl
dec
push
lea
xor
push
adc
add
sbb
aam
sbb
mov
dec
push
or
lcall
add
adc
sub
xchg
fcoms
cli
les
out
or
and
pop
and
popa
lock
dec
adc
adc
mov
sub
vmaxsd
push
and
or
imul
pusha
or
and
test
std
mov
xchg
jg
loope
mov
jo
es
and
lock
push
inc
or
dec
pusha
test
jmp
and
pop
loopne
or
jge
sub
add
sti
mov
sbb
jg
mov
lods
adc
test
test
sbb
pop
cmp
adc
mov
pop
addl
or
mov
adc
sbb
or
xor
sbb
push
and
or
push
inc
jb
add
cmp
jo
sbb
push
pop
into
dec
enter
and
jecxz
mov
and
lret
insb
add
lods
mov
xchg
add
repz
inc
call
cwtl
add
cmp
add
fistl
arpl
or
adc
push
push
pop
dec
cmp
jbe
jmp
loop
fwait
cmpl
cmpb
test
sbb
loop
mov
xchg
push
shlb
sub
mov
test
jo
jo
lret
pop
mov
pusha
rcl
pop
in
mov
mov
xchg
fwait
icebp
negl
movsl
add
idivb
je
mov
pop
fs
xchg
push
pop
call
jo
loopne
push
out
jo
push
cli
rol
mov
or
mov
cltd
cli
sti
cmp
stc
shrb
lea
xor
pusha
mov
je
test
jb
xor
jmp
inc
cmp
loope
xchg
out
dec
jne
rcrb
cwtl
insl
aaa
int3
xchg
aad
jae
and
xor
push
sbb
jne
inc
lcall
dec
cs
dec
jae
push
push
push
je
add
imul
out
or
in
jbe
adc
cmp
push
arpl
inc
push
repnz
push
sbb
popf
mov
dec
sbb
jmp
sbb
jecxz
push
sub
ja
sbb
gs
lods
pop
sub
je
xchg
or
xor
dec
jne
dec
or
pop
movsb
mov
pusha
push
inc
js
loop
icebp
add
mov
sub
stos
sbb
shlb
jl
mov
sub
aaa
push
inc
mov
sti
and
mov
cmp
or
adc
orb
add
dec
xchg
ret
insb
ret
pop
cmp
inc
push
push
loopne
xor
push
cmp
xorb
push
imul
test
mov
mov
mov
xchg
stos
pop
dec
and
inc
scas
pop
push
xchg
ret
xchg
std
decl
xchg
jns
cs
fiadds
rdmsr
sarb
cmp
jmp
ljmp
addl
call
mov
xor
shlb
or
mov
nop
push
and
pop
cmp
xor
aam
xor
add
fadd
push
xor
push
or
mov
sbb
or
push
and
and
xchg
fmull
orb
add
and
lret
stc
lods
add
std
push
and
or
mov
fbld
in
sub
cmp
adc
sub
push
dec
pop
sbb
and
cmp
xor
or
cmp
sub
cmp
push
neg
adc
adcl
insl
inc
insb
js
shll
push
les
rcrb
sbb
nop
and
or
mov
push
mov
inc
add
inc
xchg
xor
jle
dec
outsl
stc
andl
pop
jecxz
xor
push
adc
inc
outsb
jl
aas
sbb
cmp
pop
push
inc
jmp
pushl
jne
push
pop
mov
lea
outsl
popf
scas
in
out
loope
cmp
lods
xor
pop
repnz
cmp
test
mov
or
xor
mov
out
pop
aaa
and
inc
mov
pop
inc
pop
pop
push
or
mov
jl
andl
jb
jb
adc
sbb
inc
fwait
dec
cld
and
mov
add
or
test
or
pop
sub
lods
xchg
fistpll
jl
dec
xor
pop
adc
push
xchg
dec
outsb
mov
lea
xor
es
data16
adc
aad
and
movsb
jae
test
loopne
add
or
test
xchg
xchg
inc
mov
fdivrl
adc
test
push
mov
loopne
pusha
jno
pop
lods
jl
dec
cmp
xchg
xlat
xor
jl
inc
aaa
adc
or
inc
sub
adc
adc
xor
xlat
push
outsl
rorl
jmp
add
mov
insb
dec
dec
adc
jecxz
xchg
pop
inc
push
inc
or
inc
push
and
rolb
and
je
push
dec
add
mov
insb
jmp
movsb
cmp
pop
pop
fldl
es
dec
ljmp
mov
movb
ret
sbb
or
test
add
jne
sbb
xor
add
adc
testb
pop
mov
mov
jno
mov
add
outsl
adc
dec
jl
loope
xor
out
sbb
or
mov
mov
inc
insb
cwtl
dec
add
adc
dec
ds
mov
pop
sbb
ret
add
cmp
sbb
or
adc
inc
lret
lret
shrl
xchg
dec
in
sbb
add
add
or
jo
jbe
movswl
add
and
cmp
add
nop
add
test
pop
add
outsl
sub
xorb
mov
cmp
mov
push
test
popa
stc
je
sbb
insb
scas
xchg
fstpt
cmp
fbstp
add
popa
test
mov
xor
mov
clc
out
push
dec
call
movhps
push
sbb
add
mov
lock
sub
adcl
push
xor
push
push
xorl
mov
pop
mov
mov
or
cmp
add
es
fcompl
mov
cld
pushw
pushf
pushfw
inc
xlat
adc
fcmovbe
or
aad
test
outsb
imul
rcl
mov
mov
push
inc
add
adc
iret
out
pop
ret
fucomp
jae
push
jo
jmp
xor
test
decb
insb
movsb
push
push
pop
cmp
mov
xor
hlt
xor
dec
cwtl
mov
mov
cwtl
mov
mov
adc
or
call
push
jne
cmpb
cmp
inc
out
mov
or
out
shrl
jno
mov
dec
test
adc
insl
jbe
nop
add
sub
mov
mov
and
aaa
nop
mov
inc
inc
mov
push
mov
push
jno
lock
add
xchg
push
lock
inc
movsb
adc
je
andl
roll
pushl
fwait
imul
outsl
inc
shrb
jle
into
add
dec
sbb
jae
movsb
mov
push
push
cmp
add
sbb
int
or
xchg
loope
sub
movsl
aam
test
mov
pop
add
add
call
inc
mov
in
out
or
push
in
inc
inc
cld
sbb
pop
mov
cmpsb
push
and
and
dec
cli
imul
mov
sti
movsl
aam
cmp
cmp
pop
jae
push
ret
jg
adc
inc
loop
push
aas
add
or
sub
insb
and
ljmp
push
in
call
data16
imull
dec
push
cmp
pushf
push
lahf
inc
test
imul
call
xor
add
cmp
mov
cs
xchg
sahf
orb
jge
adc
sbb
jecxz
adc
and
cmp
jne
mov
cmp
loope
xor
jo
cld
cmp
sbb
lret
lea
loop
enter
push
push
mov
stos
rorl
mov
and
addr16
mov
test
jbe
push
pop
and
je
cwtl
hlt
aas
xchg
int
sarl
adc
mov
cltd
insb
add
xchg
inc
cli
push
sub
sahf
test
mov
xchg
clc
jle
shl
in
jge
movl
xorl
inc
add
mov
xor
iret
inc
cwtl
repnz
imul
mov
push
mov
sub
push
insb
std
mov
decb
mov
fucom
xor
js
or
dec
shlb
lock
jle
dec
mov
lock
cmpsl
add
mov
bound
clc
inc
dec
jmp
imul
sub
push
push
pop
adc
sub
insl
xlat
dec
cmp
fisubrl
xchg
jne
add
push
aam
jp
cwtl
xor
mov
push
jge
icebp
push
shl
sbb
cmpsl
enter
dec
push
push
mov
xchg
pushf
cmp
data16
roll
stc
push
inc
or
mov
mov
imul
orb
rclb
mov
pushf
jne
mov
add
repz
jmp
lea
add
cmpl
pop
jmp
xor
out
movsl
addl
insb
ret
test
sbb
mov
xor
ud0
mov
leave
pop
sbb
cwtl
dec
push
mov
fiaddl
popa
push
sub
je
adc
mov
add
movsb
add
push
adc
sbb
add
push
sbb
mov
mov
pop
mov
enter
lea
pop
sarb
mov
addl
or
std
cmp
sub
sahf
inc
aas
mov
jmp
adc
pop
loopne
add
imulb
add
mov
jo
dec
loopne
inc
pop
in
fs
push
or
in
jbe
jo
out
cmpsb
mov
jmp
scas
xchg
sbb
sub
adc
rcr
cltd
push
pop
sbb
mov
mov
jne
js
xor
cld
jg
push
mov
mov
mov
add
lret
stos
jo
jge
stos
inc
rclb
push
adc
push
inc
push
dec
test
call
add
jb
cmp
xorl
pop
mov
stos
adc
push
call
cmp
push
jmp
jge
push
add
push
lock
dec
enter
pop
or
test
mov
shll
inc
sub
or
inc
pop
sub
inc
pusha
lock
insb
hlt
dec
cld
adc
lock
lcall
mov
pop
pop
stos
cmp
push
xchg
mov
inc
stos
or
in
loopne
pop
mull
add
out
lret
add
sahf
mov
cmpb
inc
mov
gs
and
aam
or
push
imul
or
mov
or
sbb
cmp
ds
fisubrs
jmp
or
xchg
push
cmp
dec
sub
inc
push
bound
into
lret
add
fcoml
mov
popf
pushf
mov
jl
je
sti
les
lock
mov
mull
xchg
lcall
xor
mov
push
adc
dec
or
and
jae
rorl
push
and
and
insb
dec
add
imul
or
or
or
mov
ret
add
jo
push
into
std
xchg
pop
fdivrl
sbbl
xchg
fldpi
sub
pop
push
push
in
adc
into
insb
or
add
data16
xor
mov
pop
or
jae
xchg
and
add
mov
in
dec
mov
mov
or
gs
adc
shrb
es
push
mov
stos
xor
call
mov
jae
jb
mov
push
mov
push
inc
sbb
xchg
rolb
insl
subl
int
daa
shrl
inc
and
dec
shlb
lods
pop
lods
push
push
scas
mov
sti
test
mov
rclb
ret
dec
sub
in
shlb
adc
inc
cmp
sbb
pop
lock
xor
lret
leave
xchg
test
mov
jo
ss
in
js
ret
insl
xchg
push
inc
push
mov
in
mov
repz
mov
sub
pop
mov
dec
pop
xchg
mov
pop
push
push
push
out
or
lret
pop
dec
cmp
pushl
push
push
and
sbb
lret
push
dec
dec
pop
mov
adc
outsl
das
jbe
loopne
add
ret
testb
and
les
pop
cmp
push
in
jo
push
jne
les
and
mov
fnstsw
and
out
ret
outsl
dec
cwtl
sarb
sti
dec
ja
je
or
je
pop
inc
or
sub
xchg
adc
je
pop
das
adc
jl
popl
test
add
sahf
inc
pop
ss
xor
shl
or
mov
push
jmp
cmp
sbb
pusha
push
adc
adc
xor
push
cmp
inc
cmp
push
inc
add
lds
mov
dec
sub
imul
cmp
inc
ljmp
mov
mov
icebp
cmpsl
loopne
es
push
inc
mov
or
dec
gs
add
je
jl
pop
sub
add
and
or
adc
push
test
hlt
inc
js
rolb
and
enter
mov
sbbl
xchg
push
and
inc
imul
dec
je
sub
sub
add
push
loopne
push
adc
add
push
adc
in
mov
fwait
out
mov
xor
daa
or
push
adc
stos
cs
sub
test
xchg
and
ds
in
and
mov
pop
dec
and
insl
lea
inc
mov
or
sbb
mov
mov
nop
jns
daa
pop
and
bound
out
stos
adc
pop
add
test
rorb
mov
rorb
rcrl
and
push
scas
sbb
sub
sbb
xchg
sub
sub
add
xor
out
je
and
shlb
shrb
fimull
inc
push
inc
cmpsl
dec
xor
fisubs
pusha
xor
push
fdivs
mov
fcomps
ret
in
mov
and
rcll
in
and
inc
jb
addr16
outsl
enter
xor
xchg
push
xchg
pusha
cmp
jmp
pushf
xchg
xchg
push
inc
movsb
imul
jbe
xor
lds
and
and
push
lea
pop
in
stc
rcll
mov
inc
push
cltd
mov
or
add
cmp
int
call
cmp
jae
push
lock
cs
and
and
push
fdivl
outsl
inc
cmp
jle
push
pop
jge
scas
cmp
call
mov
ret
in
inc
mov
sub
int
cmpb
and
in
imul
push
mov
and
dec
int3
aam
bound
cmpl
popa
xor
rorb
loopne
mov
pushf
pop
rcrb
jl,pn
shlb
mov
dec
jle
sahf
xchg
xor
jl
push
dec
into
mov
jmp
sbb
sahf
rorb
sbb
fimuls
and
cmp
fmuls
pop
mov
je
push
xlat
mov
adc
aad
repz
or
add
mov
sbb
jmp
xchg
mov
in
jle
sbb
dec
ret
ret
jp
push
shll
aam
push
insb
hlt
pop
inc
sub
call
rclb
and
mov
enter
mov
mov
cld
and
nop
jns
lcall
mov
fsts
movl
or
push
jne
shrb
dec
jle
andl
in
cltd
dec
rcrl
pop
in
cmp
fcoml
fsubs
test
out
mov
fcoms
or
sub
sub
outsl
adc
push
and
pop
or
xchg
inc
loopne
je
jno
push
mov
shl
movl
sub
or
js
pop
adc
adc
fwait
adc
lea
mov
and
pop
hlt
lret
sbb
sbb
lea
pop
push
or
push
cmc
lret
add
xchg
mov
add
pop
stos
inc
movsl
mov
in
push
mov
pop
ljmp
dec
loope
push
rorb
or
push
xchg
out
cmp
xor
xor
push
outsb
pop
add
fildl
inc
rolb
shl
call
sbbl
dec
pop
incl
jo
cld
cmpsl
mov
pop
pop
fcos
or
xchg
adc
dec
mov
inc
pop
clc
add
adc
in
dec
mov
dec
adc
shl
into
pop
jp
sti
xchg
mov
mov
movsb
cmp
or
loopne
sub
mov
mov
inc
sbb
inc
loope
cli
cmp
and
or
insb
add
jecxz
sahf
cmp
sub
adc
or
movsb
sarb
or
ror
pusha
or
xor
pop
mov
sub
push
xchg
int3
add
push
xchg
pop
dec
cmp
push
xor
cmp
lods
ror
mov
loopne
mov
out
fchs
fwait
std
jl
mov
icebp
add
push
pop
je
xor
ja
repnz
cmp
add
and
call
mov
jg
xlat
add
push
lock
mov
sti
andb
outsb
pop
jne
es
lods
jo
dec
add
in
or
data16
jo
test
mov
movsl
inc
psraw
rcrl
call
push
movsb
jns
add
loopne
or
add
xchg
je
push
jg
xor
ds
out
dec
or
fidivs
dec
clc
add
jl
sbb
xchg
repnz
and
push
inc
adc
fisubl
inc
add
in
add
or
jecxz
sbb
or
adc
and
sbb
sub
hlt
rcrb
adc
pop
push
aam
js
and
inc
jne
push
mov
adc
dec
mov
es
sbb
sub
pop
ret
mov
adc
pop
xchg
xor
push
adc
inc
sub
jle
dec
fisttps
push
loopne
stc
mov
les
xor
sbb
cmpsl
std
sbb
push
scas
fmull
inc
cmp
dec
dec
adc
pop
sbb
imul
push
push
jo
adc
sub
sub
or
xor
es
add
add
testb
pop
or
xor
sbb
mov
out
mov
call
je
aas
push
test
or
in
mov
or
or
adc
xchg
lret
es
pop
inc
sbb
add
add
or
ficoml
out
cli
call
jne
sub
push
adc
jnp
add
loopne
xorb
lret
push
adc
sub
inc
sub
fmull
cli
les
add
xchg
fnsave
sbb
and
add
hlt
add
dec
mov
std
add
pop
je
or
push
cmp
or
push
mov
mov
add
movsl
pop
sbb
add
leave
jp
xor
into
hlt
and
lcall
xor
inc
sub
addb
mov
xchg
sbb
sub
dec
adc
fiadds
and
pop
ss
sub
mov
loopne
mov
mov
and
pushf
push
adc
and
jp
jb
cmp
xor
push
adc
push
cld
push
sbb
adc
repz
add
fs
push
jmp
and
or
movb
test
outsl
jno
les
xchg
push
xor
gs
cmp
rcrb
sbb
cwtl
mov
sahf
je
dec
stc
cld
jge
out
add
daa
int3
adc
sub
mov
add
jns
cltd
mov
or
inc
cmpsb
nop
and
sbb
in
sar
es
push
scas
int3
push
inc
and
add
fs
ds
sub
stc
jae
and
daa
pop
push
das
add
inc
sub
lea
clc
or
xchg
add
outsb
and
andl
pop
push
sbb
push
xor
ja
inc
push
sub
xchg
adc
xchg
stos
in
xor
cmp
test
jns
in
xor
adc
xor
sbb
mov
pop
gs
inc
ret
cmp
mov
or
cmp
mov
inc
xchg
lods
or
repz
rcll
dec
add
xor
cmpl
mov
mov
mov
dec
in
lret
int3
adc
aaa
dec
mov
mov
jmp
push
bnd
push
push
pusha
jl
add
clc
rol
int
mov
mov
xchg
test
into
pop
test
ds
jae
stos
pusha
test
hlt
inc
test
mov
xchg
pop
or
test
loope
ret
dec
out
adc
push
test
jne
push
mov
dec
adc
push
test
add
add
aam
add
or
xor
fistpl
sbb
shlb
pop
jmp
pushl
sub
push
mov
and
pop
arpl
js
dec
insb
pop
lret
dec
loopne
and
lock
xchg
cs
mov
mov
clc
iret
push
sbb
push
sub
sub
adc
push
stc
fdivr
sbb
add
push
sbb
testb
sub
cmp
fmuls
testl
mov
jae
loopne
gs
popa
addb
mov
xchg
lret
je
out
xchg
jecxz
imul
and
icebp
loopne
filds
in
push
in
jb
adc
in
push
mov
call
add
cmpsl
cltd
cmp
testb
loopne
mov
orl
push
add
xor
pop
ret
xor
or
mov
loop
fldt
test
std
repz
out
dec
ds
pop
call
lock
fwait
sub
jne
pop
add
bound
aaa
adc
mov
daa
or
adc
fnstenv
lock
pop
or
pop
testl
add
lcall
xchg
dec
mov
rcrl
int3
or
jne
fisttpl
loopne
mov
pop
shlb
roll
adc
add
in
jge
sub
in
xchg
xchg
push
adc
xchg
inc
jmp
add
jbe
inc
mov
xor
jge
push
push
add
mov
mov
incl
jne
push
fs
mov
mov
fwait
push
repz
or
dec
jae
int3
push
stc
push
int3
mov
jnp
cld
xor
cmp
or
in
inc
adc
stos
and
fs
scas
and
add
sarb
jo
jb
push
jbe
push
daa
jns
push
or
xchg
jbe
jnp
jae
pop
je
inc
testl
pop
shrw
cmp
jne
pop
adc
loop
aad
insb
je
hlt
pop
adc
sub
fimull
cmp
fwait
or
sarl
inc
jmp
push
push
das
fisubrl
sbb
and
dec
push
or
add
pop
inc
lods
ficompl
hlt
loopne
jl
repnz
rcll
mov
sbb
sub
enter
xchg
mov
mov
sbb
nop
aam
sbb
sahf
or
jmp
pushf
decb
add
aad
je
jnp
and
xchg
into
push
jp
outsb
push
dec
or
mov
add
shrb
rorb
subl
sarb
sbb
gs
cld
loopne
bound
fsubs
and
aaa
scas
test
or
push
sub
pushf
lahf
rcrb
imul
fdivrs
cmp
mov
pop
push
test
add
decl
xchg
repnz
jb
inc
inc
or
dec
dec
sbb
fs
pop
xchg
jne
lods
daa
andl
imul
insb
call
enter
imul
inc
pop
cwtl
pop
add
fdivrs
test
cmp
jns
inc
push
sbb
sbb
cmp
in
and
sbb
pop
jo
push
xchg
test
mov
je
sbb
add
mov
imul
push
xor
push
lds
or
add
dec
adc
iret
xchg
ret
nop
fidivrl
popa
shrb
imul
push
or
inc
inc
jno
aaa
xor
les
xor
and
mov
inc
push
xchg
xor
inc
inc
pop
push
or
cmp
lock
add
push
inc
dec
dec
stc
add
test
jg
lahf
inc
dec
loopne
push
cmp
jo
add
mov
inc
lahf
mov
push
sbb
push
pop
out
sbb
adc
sub
test
cltd
rcrb
xchg
jbe
mov
fiaddl
fidivs
lea
xor
cwtl
lret
in
pop
adc
in
iret
mov
sbb
fwait
and
rcll
lods
xchg
pop
addr16
mov
or
test
xor
push
xor
out
adc
adcb
add
push
add
fnsave
jb
cmp
cmp
inc
adc
pop
std
xor
inc
jmp
xor
pop
fnsave
add
ja
push
push
push
inc
cmp
jle
inc
pusha
xchg
cli
or
mov
ret
clc
xor
cmpsl
push
stos
add
dec
daa
or
xchg
or
data16
dec
cmovl
testl
adc
pop
sbb
adc
lock
cltd
dec
test
andb
pop
stos
or
inc
or
sahf
rclb
xchg
cmp
add
adc
fmuls
and
xchg
sub
sbb
or
or
cmp
addb
or
test
and
xchg
mov
pushf
in
lea
lods
ret
inc
lahf
add
and
jmp
shlb
mov
sahf
enter
jo
gs
cmp
dec
leave
mov
sub
das
rcr
inc
xlat
mov
adc
push
add
add
mov
ja
or
jecxz
and
ret
repz
ret
daa
mov
inc
adc
push
cmovae
and
adc
lods
hlt
and
mov
pop
ret
lcall
scas
dec
push
adc
imul
mov
arpl
mov
dec
and
sub
xor
mov
cli
or
push
pop
gs
add
mov
or
mov
ficomps
pusha
sub
mov
int
and
sub
faddl
pop
pop
js
dec
andl
jmp
mov
outsl
mov
push
mov
repnz
add
sbb
orb
cld
push
inc
sbb
xchg
adc
lea
lea
push
pop
mov
rep
mov
mov
in
adc
inc
mov
jo
mov
xor
or
push
cmp
sbb
cmc
pop
sub
push
fs
sbb
cmp
bound
mov
nop
add
sbb
enter
idiv
ss
and
bound
mov
les
push
xor
mov
xor
and
xor
inc
mov
mov
mov
adc
sbb
clc
cmp
int3
sub
cmp
out
add
mov
push
sbb
mov
xor
add
add
pop
roll
in
cmpsb
loop
pop
or
adc
mov
push
sbb
dec
nop
mov
clc
xchg
popf
cmp
jbe
or
jl
das
lock
push
and
push
dec
int
ljmp
cld
or
sbb
sub
push
lods
mov
inc
jno
inc
xchg
repz
inc
and
jae
lods
jbe
sub
lea
ret
mov
sarl
int3
pop
shl
jne
mov
cmp
enter
in
iret
test
ss
jb
stos
das
inc
pusha
jl
cmpl
or
test
pushf
jle
cmp
rcrl
push
inc
test
push
mov
adc
pop
cmp
cli
pop
push
cld
push
or
sub
sub
sub
neg
sbb
inc
je
xor
jne
mov
mov
enter
add
outsl
pop
mov
jl
mov
inc
cs
push
jecxz
sbb
test
or
xor
adc
in
daa
orb
mov
inc
push
mov
test
pop
pop
sti
jl
test
jg
push
cmp
sbb
inc
or
mov
addb
or
jns
test
orl
jnp
pop
xchg
or
inc
inc
loop
jle
dec
add
jmp
daa
arpl
xor
cmp
sbb
shrb
add
xor
push
push
xchg
pop
mov
in
addr16
push
xor
push
ja
cwtl
stos
jmp
aaa
push
xorb
lods
repnz
in
aam
push
sub
cmp
inc
mov
enter
cmp
mov
and
in
push
addr16
dec
je
andl
or
add
jno
inc
add
aad
jo
lods
inc
movsl
push
pop
mov
push
mov
xor
decl
shlb
jg
dec
sbb
xchg
push
lods
addb
xor
les
xchg
xchg
ljmp
add
adc
test
and
push
xchg
out
sub
into
mov
push
icebp
pop
or
es
mov
scas
aaa
jmp
scas
inc
pop
jne
sbb
mov
jl
push
or
hlt
pop
adc
jb
sbb
mov
sub
push
push
dec
mov
arpl
xor
aam
mov
jbe
test
and
adc
xlat
popa
push
xchg
test
icebp
ret
pop
jbe
repz
lret
int3
je
cmp
je
cmp
cmp
push
push
dec
cmc
cld
lahf
cmp
scas
adc
cmp
and
jno
dec
sub
repnz
mov
or
or
mov
pop
dec
or
add
pop
cmp
sub
fwait
sub
lahf
push
mov
pop
fsincos
rep
bound
inc
xor
or
adc
xchg
fisubrs
jmp
sub
jae
shl
shlb
add
sub
inc
sbb
inc
push
sbb
jnp
arpl
mov
pop
push
push
push
push
pop
dec
xchg
mov
add
xchg
mov
inc
or
mov
js
fisttpll
data16
inc
sub
mov
adc
les
cwtl
or
xor
inc
xor
testb
sbb
dec
xor
jbe
ljmp
mov
mov
inc
test
cmp
mov
sub
mov
or
and
shlb
and
addr16
inc
push
cs
pop
ds
add
lret
cmpsl
jo
sbb
push
mov
dec
insb
pop
pop
mov
inc
hlt
cmp
add
orb
jns
icebp
add
mov
jmp
mov
jl
inc
cwtl
adc
popa
rcr
add
sub
push
inc
add
aam
xor
xchg
cmc
push
add
repnz
adc
rolb
pop
mov
jge
inc
rcrb
clc
pop
cmp
jmp
lret
mov
bnd
pop
adc
push
and
ret
cmp
pop
dec
in
mov
or
dec
dec
push
sar
call
mov
hlt
mov
pushf
orb
mov
push
mov
xor
and
push
xchg
pop
les
adc
mov
testl
sub
pop
inc
pop
sarb
push
cmp
push
cmp
push
adc
int3
sub
arpl
and
add
xchg
add
adc
data16
xor
int
cmp
lahf
mov
sbb
cmp
cld
loopne
pusha
mov
lods
mov
push
pusha
push
bound
bnd
shll
add
push
xchg
jo
add
cld
push
jp
cmpxchg8b
and
je
inc
adc
mov
dec
sbb
es
sub
inc
sbb
popa
cmp
jl
subb
gs
mov
ficomps
push
icebp
subb
xchg
fsubs
cmp
sbb
mov
sbb
iret
xor
xlat
dec
jo
das
shl
push
mov
into
call
js
in
mov
in
rorb
add
pop
rolb
add
inc
mov
or
adc
int3
adc
inc
jge
and
call
ja
pop
xor
mov
jge
add
insl
push
mov
testb
push
movsl
ljmp
add
icebp
mov
mov
sub
es
insl
daa
movsb
lret
insb
loope
aam
pusha
scas
insl
push
adc
rol
fsubrs
scas
or
cmp
orl
push
cmp
sub
or
push
and
add
outsb
cmp
je
shl
mov
sbb
je
out
adc
pushl
shrb
sub
sar
cmp
jbe
jmp
jb
mov
jmp
xchg
dec
inc
mov
test
andb
faddl
xchg
push
ljmp
adc
dec
cmp
or
mov
pop
adc
adc
jl
push
and
ret
shl
push
lea
mov
fdivp
pop
inc
cmp
mov
or
and
or
call
push
pop
mov
pop
in
mov
pop
mov
mov
je
add
mov
testb
add
sbb
rcrb
sbb
xlat
adcb
sbb
add
push
pop
iret
pop
mov
xchg
outsb
xor
sub
sbb
mov
and
imul
add
dec
call
jo
jnp
sbbl
enter
lret
fdiv
push
mov
and
dec
ss
cmc
push
in
push
arpl
dec
add
jne
sub
outsb
sar
lea
jp
cmp
sbb
xchg
push
adc
push
aad
jae
jb
pushl
mov
jle
fmul
pop
or
pop
jmp
xor
loopne
sahf
clc
jae
and
mov
fidivl
inc
popa
push
mov
sbbl
add
into
dec
inc
sub
pop
add
movsl
cwtl
hlt
es
push
sub
xchg
dec
push
push
mov
fs
or
inc
and
xor
pop
icebp
mov
inc
cmp
sbbl
mov
cli
lcall
and
enter
jo
pop
repnz
mov
xchg
pop
sbb
push
enter
mov
pop
or
nop
push
pop
pop
dec
pop
fisubrl
jmp
sbb
adc
sbb
mov
bound
mov
mov
mov
add
mov
in
adc
and
and
out
adc
and
sarb
adc
addr16
out
scas
repz
or
shlb
sub
sbb
cmp
in
nop
inc
add
ja
daa
in
fcmovnu
cmp
mov
dec
or
or
cmp
jnp
xchg
fcoml
sub
sub
sbb
aas
daa
add
sbb
mov
movsb
cmp
cmp
dec
pop
adc
and
xchg
sar
jl
mov
xor
mov
inc
or
loopne
mov
int3
sahf
ja
movl
xor
stc
pop
enter
push
pusha
mov
adcb
insl
cmpsb
dec
mov
dec
or
cmp
mov
mov
rol
sub
pop
jo
ss
sbb
push
out
sub
add
inc
add
fs
add
in
pusha
and
in
cmp
add
in
and
in
int3
sub
add
hlt
daa
and
sbbb
sub
sbbb
subb
lret
test
or
jmp
and
fsubrs
cmp
pop
push
sbb
inc
push
dec
pop
and
or
xor
or
xor
jne
sub
mov
mov
inc
arpl
mov
rorb
push
cmp
aad
in
or
pusha
push
movl
xchg
daa
mov
out
or
sbb
add
sbb
pop
adc
scas
movsb
and
cld
xor
or
ds
add
dec
dec
push
ret
xchg
js
test
sub
gs
add
cmp
cltd
fsubs
or
iret
in
push
inc
add
adc
add
stc
push
adc
fmull
sub
adc
ja
jecxz
loope
inc
push
mov
lcall
inc
or
xor
dec
sti
push
jno
loop
adc
fiaddl
out
dec
sub
xor
sbbb
lds
mov
sub
sub
pop
sbb
lods
shl
xchg
iret
lds
mov
ss
mov
push
and
inc
sbb
sbb
insl
test
xor
sbb
outsb
dec
andb
lret
data16
lods
xorb
push
cwtl
adc
out
push
in
push
pop
adc
out
addr16
inc
add
stos
fstps
insb
daa
lock
jbe
aam
stc
lock
jg
je
pop
or
pop
pop
add
clc
sbb
rclb
sahf
xorl
jne
push
outsl
add
es
dec
pusha
imul
in
dec
and
mov
lock
loope
mulb
sub
mov
stos
ja
sub
rcll
pop
push
dec
xor
int
lock
cmp
jne
adc
sbb
cmp
leave
call
xchg
cmpsb
loopne
test
in
inc
call
sbb
cmp
dec
mov
insb
cs
cltd
shll
push
push
fcmove
pop
ret
fildll
or
mov
push
cmpb
jae,pn
je
sbb
outsb
sbb
rolb
jecxz
and
adc
or
jmp
leave
lds
jmp
cmp
push
sahf
rclb
sbb
insl
je
pushw
xchg
mov
add
or
lds
sbb
fildl
imul
movsl
lock
lret
mov
shlb
das
jb
lock
jg
pop
cmp
sbb
int
and
add
nop
pop
fisubrl
jp
mov
adc
stos
xor
daa
adc
test
cltd
xchg
push
pop
add
addb
faddl
stc
in
call
mov
or
shll
jnp
sub
pop
jmp
cmp
cmpl
add
inc
push
push
pop
dec
sahf
pop
sbb
int3
sbb
out
dec
mov
jb
mov
outsl
sbb
dec
cmp
jmp
add
pop
stos
pop
mov
lock
test
fdiv
mov
push
jns
sub
push
or
sub
in
mov
dec
dec
or
rolb
or
mov
jmp
push
mov
lock
cmp
mov
cmp
xchg
stc
data16
mov
call
jnp
or
dec
sub
movsl
int3
pop
cld
fsubs
iret
add
adc
or
xor
subl
jmp
push
ja
aad
outsl
clc
xor
xchg
inc
ljmp
int
xchg
push
popfw
sub
fstp
cld
lock
xchg
je
call
popa
dec
in
or
sub
sub
sub
test
in
mov
daa
push
aaa
and
or
dec
psraw
jb
and
rol
scas
dec
lock
dec
rcrb
adc
cltd
add
insb
cld
lock
repz
mov
sub
je
push
mov
cmp
jl
cmp
jle
fcomi
out
adc
popa
push
jp
or
pop
inc
cmp
aas
lods
mov
scas
or
dec
inc
pop
cmp
inc
cmp
jge
mov
pop
and
cmp
outsl
and
jns
cmp
je
cmp
je
jne
xor
ret
sbbb
and
iret
pop
add
mov
lahf
rorl
ret
push
aas
and
xor
mov
testl
add
jg
mov
mov
add
dec
mov
push
sub
scas
push
lock
ret
outsb
stos
enter
adcb
jl
outsb
xchg
dec
inc
xchg
pop
lcall
clc
inc
stos
hlt
jge
mov
aaa
outsb
sbbl
lcall
mov
inc
pop
or
xor
push
push
cmp
clc
jmp
sub
lock
andb
insl
pop
leave
inc
das
dec
test
int3
mov
mov
sub
dec
or
jne,pn
cmp
pop
jg
add
into
std
xchg
cmp
add
inc
dec
pop
sar
mov
sahf
jle
vpclmulqdq
xor
pop
mov
jo
add
cmp
fsts
outsb
rcr
fistl
jo
push
pop
cmpsb
lods
xchg
int3
jnp
fisttpl
jbe
cmpsl
adc
cmp
pusha
add
xchg
sub
cmp
sub
xchg
push
insb
sbb
leave
push
mov
lea
mov
fiaddl
aas
je
xor
add
inc
sbb
and
je
lock
addl
loope
popa
mov
sbb
sbb
mov
fildll
enter
inc
and
and
sbb
or
cmp
add
add
pop
lret
js
mov
push
push
pop
xchg
test
jns
pusha
adc
or
and
cmp
fwait
jo
and
stc
insl
faddl
int3
lea
sub
cmp
xor
inc
sahf
or
inc
orl
add
ret
dec
adc
push
lods
mov
dec
je
adc
adc
icebp
push
daa
add
mov
xor
push
inc
xchg
and
scas
loope
adc
add
movsb
sarb
mov
rorl
je
push
push
in
divb
sub
push
pop
or
loop
rcl
js
std
push
xchg
ret
addb
inc
sbb
dec
mov
jle
and
xchg
shrl
sbb
push
imul
pushf
add
mov
fcmovnb
push
lds
add
sti
cmp
push
sbb
fmull
rolb
jne
lock
ds
mov
sbb
jnp
por
mov
and
add
sar
in
pop
lret
loopne
rclb
loopne
mov
sub
dec
jl
jl
pop
fucomi
jae
cmp
fistl
mov
mov
ss
insb
sarl
les
jnp
xor
adc
fdivl
jnp
jmp
in
andb
clc
add
jmp
sub
in
push
xor
add
sbb
into
test
pop
xchg
nop
test
adc
cmp
jnp
testl
sahf
repz
push
xchg
add
test
mov
jecxz
cs
in
xor
inc
imul
sbb
inc
mov
clc
out
or
mov
mov
test
je
or
je
cs
add
jg
pop
rolb
pop
push
hlt
add
dec
push
mov
std
inc
jg
rol
xchg
sbb
mov
add
pop
stos
cmp
xor
lods
sbb
push
jle
dec
pushf
test
testl
out
push
jne
inc
nop
bound
dec
into
add
pusha
movsb
or
push
inc
repnz
and
mov
arpl
mov
jnp
and
mov
push
fs
pusha
icebp
jns
inc
into
addb
imul
adc
iret
adc
rcrb
mov
mov
xchg
sahf
inc
cwtl
pusha
lcall
pop
cltd
mov
xor
ds
push
xchg
shl
aad
loop
lods
lods
dec
insb
jmp
adc
push
addl
jmp
loopne
fdivrs
and
dec
je
add
pusha
mov
adc
incb
movl
jle
enter
cmpsb
notl
stc
or
into
clc
pop
push
or
push
les
aaa
adc
inc
sub
push
pop
sbb
call
cltd
inc
hlt
pop
jnp
arpl
xchg
cli
xor
pop
movsb
xchg
or
lret
cli
pop
cmpl
hlt
jg
mov
cmp
adc
test
js
push
aas
lds
test
add
jmp
movsb
push
ret
loope
and
orps
jb
loope
cwtl
shll
sahf
inc
and
mov
test
sbb
sub
lea
pusha
mov
bound
pusha
pop
mov
or
push
cmpsl
aam
nop
xor
pop
movsb
cmp
push
push
ja
mov
pop
pop
outsb
mov
cs
adc
shrl
ds
add
add
push
mov
push
xchg
xor
pop
push
jb
lock
addl
fcmovu
mov
mov
insb
add
jge
mov
mov
data16
mov
inc
loope
jmp
mov
aaa
movsl
pop
or
push
dec
sahf
sbb
jbe
cli
jae
jne
mov
jle
ja
mov
or
mov
popa
jnp
mov
push
cmp
push
or
add
sahf
sub
sar
lea
pop
inc
mov
lea
mov
add
negb
lret
mov
xor
rcl
sti
pop
push
addr16
mov
sub
mov
add
adc
sub
add
xchg
loopne
add
lea
pushf
pop
push
or
fisubs
mov
mov
sub
shr
jmp
cmc
cmpsl
sub
shll
mov
cmp
push
push
sbb
xchg
js
dec
sbb
push
or
jae
test
divb
pop
xchg
cmp
or
push
es
inc
xor
sub
xor
push
dec
push
test
pushf
pop
jle
mov
pusha
jns
push
and
and
add
xor
push
fsubrs
dec
push
pop
je
fldl
rcll
fstpl
mov
ss
pop
data16
iret
outsl
pop
inc
jne
adc
adc
jne
push
divb
repz
cmp
clc
jne
or
jne
adc
iret
or
scas
leave
ret
lahf
ss
fldz
into
fstpl
andl
aam
add
dec
mov
cmp
enter
inc
xchg
cmp
and
dec
iret
mov
lahf
pop
and
andl
mov
lea
fstl
jecxz
scas
ret
push
mov
movsl
movsl
lea
movsl
sub
lahf
xor
cld
repz
xor
jo
xchg
lea
inc
cmp
sbb
mov
rclb
push
push
lea
test
fmulp
loopne
pop
and
out
push
jne
jo
lods
pusha
adc
clc
ret
push
or
pushl
repnz
or
inc
in
push
or
out
fstpt
or
pminub
stos
add
lcall
fmuls
lret
and
adc
push
or
mov
add
ret
mov
push
pop
push
outsb
fcmovne
cmp
mov
sub
fsubrl
pop
jbe
or
imul
sbb
nop
je
inc
pop
sbb
add
pop
mov
outsl
movsl
push
mov
test
dec
push
push
push
cld
mov
adc
fidivrs
push
push
sub
cmp
aad
enter
popa
int3
pusha
pop
leave
sub
push
leave
sub
pop
sub
pop
loopne
push
push
pop
hlt
xor
sub
push
or
mov
and
pop
call
jo
dec
mov
call
scas
pop
push
mov
push
adc
or
pop
ja
add
popa
das
inc
push
mov
push
addb
jns
or
les
addr16
lods
push
jmp
add
scas
pop
pusha
mov
fstl
push
add
lods
jns
popa
or
imul
mov
add
fmul
es
add
mov
push
xor
and
aas
mov
xor
and
nop
inc
int3
rorb
addb
pop
jno
sbb
mov
imul
add
xor
dec
inc
es
fsub
push
xchg
rorb
fs
call
rcrb
dec
xchg
sub
xchg
in
in
push
ror
enter
in
sarb
mov
test
sub
jnp
jge
push
pop
mov
pusha
cli
repz
pushf
sbb
pop
sub
ficompl
popa
pop
inc
addr16
push
sbb
rorb
push
pop
mov
mov
jns
adc
add
jl
xor
push
or
cmp
jle
push
pop
add
fcmovb
and
adc
jnp
les
xchg
add
fcmovnb
cli
mov
adc
jle
mov
jo
adc
cmp
cmp
add
add
loopne
mov
cs
pushw
js
test
mov
jbe
or
fistpl
movsl
iret
and
call
add
pop
decb
inc
xor
test
push
lahf
add
imul
cmp
and
add
loopne
ud2
sarl
std
xor
sub
fists
dec
je
mov
push
pop
in
mov
pop
movsl
mov
xchg
call
push
call
xor
in
in
add
in
pop
stos
cmc
push
mov
iret
xchg
aad
lods
dec
jb
fsubrs
jp
cmp
decl
loop
test
insb
add
xor
popf
xchg
xchg
fsubs
jne
faddl
lock
in
movsb
mov
cli
push
push
or
sbb
jns
testl
push
jmp
lea
fbstp
fistl
ret
mov
dec
insb
or
loopne
sbb
movlps
jne
jo
and
ret
pop
push
es
jbe
or
ja
dec
add
arpl
pop
ret
insb
mov
inc
mov
sub
add
dec
std
push
inc
or
add
pop
add
inc
mov
sub
insb
and
loope
mov
push
push
pop
jle
sub
call
lret
int3
inc
scas
fldl
pop
pop
inc
mov
or
inc
inc
je
and
sub
xor
pop
rorb
mov
cmp
and
dec
add
pop
push
lock
test
pusha
roll
notl
lods
or
pusha
xor
adc
test
test
out
fsubrs
movsb
push
pop
push
insl
lea
push
and
stos
hlt
out
iret
out
push
movsl
mov
hlt
mov
sub
inc
and
jo
sbb
scas
push
mov
add
sub
mov
mov
push
xchg
out
mov
pop
adc
mov
lea
xor
mov
addl
das
push
sub
jl
int3
cld
mov
pminsw
pop
iret
pop
pop
or
adc
cmp
push
pop
and
add
clc
ja
in
sub
dec
jb
clc
int3
inc
or
jo
test
inc
ljmp
pushf
push
sbb
sbb
adc
js
jmp
js
sbb
push
jo
mov
ljmp
mov
or
or
pushf
jp
fsubs
and
pop
push
cmpsl
add
sub
cmc
add
mov
push
mov
int3
push
and
popf
divl
pusha
popf
add
outsl
lods
push
stos
inc
mov
push
in
ja
cmp
adc
lahf
or
lahf
or
mov
xchg
cmp
push
les
daa
xchg
adcl
adc
xchg
mov
ret
arpl
rorb
dec
xor
lahf
and
push
je
inc
lahf
fiaddl
test
mov
movsl
mov
xchg
xor
pop
inc
push
setg
pop
add
enter
or
dec
dec
cmpsl
jo
pop
push
mov
mov
test
into
mov
ret
lock
xchg
jnp
pop
or
mov
inc
mov
add
out
lret
push
rcrb
mov
mov
adc
hlt
xor
pusha
mov
mov
test
mov
adc
dec
fistl
and
out
lock
jp
mov
sub
add
addb
mov
adc
clc
mov
les
stos
stc
sbb
movb
mov
sbb
adc
arpl
sbb
mov
sub
sbb
xor
push
arpl
mov
je
loop,pt
andb
mov
xlat
inc
mov
xor
popl
xchg
ftst
adc
mov
xchg
mov
mov
fisubrs
xor
loope
js
int3
inc
jl
jmp
aaa
cmc
lret
pop
mov
and
xor
lods
outsb
and
jecxz
pushf
cltd
mov
lcall
das
ds
push
xchg
xor
sub
arpl
data16
xchg
movb
aaa
mov
nop
add
xor
xor
ja
push
pushf
push
mov
lock
cwtl
ret
testb
dec
or
fwait
and
inc
add
mov
push
loope
adcb
jno
les
arpl
add
jo
inc
inc
mov
je
dec
aam
add
inc
or
lret
adc
cs
fmull
pop
or
sbb
pop
into
pop
add
xchg
pop
cmpsl
fdivl
jp
movsl
lock
xchg
out
fwait
les
in
aam
rorb
call
in
les
lahf
cli
mov
xlat
lods
push
subl
sub
or
lahf
pushf
mov
inc
outsl
movsl
jle
adc
leave
sub
mov
sub
xchg
push
orb
add
sub
adc
lea
pop
ljmp
mov
and
adc
add
add
mov
jo
test
mov
popf
clc
jno
fimull
sbb
dec
push
sub
or
jne
or
jne
inc
in
mov
stos
push
sarl
adc
pop
dec
pusha
repz
cmpsb
push
test
xor
pop
dec
jp
fld1
lret
dec
or
jnp
xchg
lock
pop
dec
add
jne
pop
dec
lock
sub
adcb
add
test
rorb
inc
imul
inc
add
xchg
lret
mov
add
add
cmpsb
in
outsl
or
mov
jnp
je
jmp
orb
or
jb
add
jp
in
add
dec
inc
lock
push
imul
std
jg
push
clc
or
pushl
sbb
gs
sbbb
jo
add
jmp
mov
movsb
and
dec
daa
ljmp
push
inc
jge
push
repnz
scas
add
insb
insb
xchg
ljmp
popa
mov
aad
sahf
xlat
decl
lret
shrl
lret
sbb
je
outsb
cmp
imul
imul
add
add
loope
adcb
enter
mov
pushf
pop
sbb
pusha
lods
jns
ret
std
cmpb
jo
pop
dec
adc
mov
or
mov
or
xchg
sub
movsb
or
imul
cmp
mov
and
sub
jns
jae
cmc
cmp
inc
xchg
and
cmp
push
lret
inc
idivb
leave
sbb
xchg
xor
xlat
jge
add
mov
add
mov
sbb
sub
adc
and
sbb
outsl
sub
or
popa
xchg
adc
sbb
xor
add
pop
pushf
sbb
sbb
fs
and
loopne
mov
mov
lods
je
popa
cwtl
inc
imul
in
xchg
sub
jbe
jae
subl
nop
or
adc
jecxz
mov
sbb
leave
ja
sub
or
and
xchg
push
adc
sbbb
aaa
shrb
jnp
and
lret
xor
cwtl
and
push
ss
fldcw
sub
movsb
rorl
es
dec
andl
and
push
ret
mov
lds
mov
xchg
add
cmp
xchg
jp
jmp
mov
dec
push
mov
mov
pop
mov
dec
test
add
add
std
adc
jl
inc
mov
add
test
adc
xorl
dec
loope
and
sbb
pusha
and
and
daa
jmp
je
hlt
ja
ret
mov
sub
mov
xchg
lods
adc
stc
inc
pushf
add
add
popa
push
addb
bound
sub
ss
leave
sbb
adcl
clc
fildl
mov
fcompl
je
call
aam
xchg
clc
add
or
push
clc
adc
mov
sbb
add
std
mov
jge
movl
test
inc
mov
adcb
or
test
out
call
repz
cmp
test
or
aam
je
or
stos
push
xchg
int3
fsts
and
ljmp
in
adc
sub
pushf
xchg
inc
sub
inc
jnp
cmpsl
jns
cmc
dec
jmp
and
cltd
pop
xchg
sbb
xor
or
jo,pn
jo
push
mov
add
rep
xchg
imull
arpl
lahf
lock
fstps
sbb
adc
sbb
xchg
xchg
add
pop
mov
sbb
sahf
shlb
adc
mov
push
push
push
inc
fcomip
ss
push
in
push
and
movsl
add
jno
mov
inc
jle
fldz
or
mov
adc
cmp
jne
nop
adc
pop
sar
sub
mov
cmc
orb
fsubrp
push
xor
sti
ret
out
mov
mov
xchg
enter
inc
sbb
dec
mov
in
adc
sbb
je
je
or
push
jo
pop
or
push
popa
in
outsb
dec
sti
mov
stc
icebp
clc
repnz
sub
and
pop
pushl
test
data16
addr16
test
es
inc
jl
jle
mov
cmp
pop
arpl
gs
mov
or
xor
jle
cmpl
jbe
mov
or
fsts
ds
loop
jb
adc
mov
dec
add
or
xor
popl
in
jne
aas
adc
div
inc
and
or
cmp
jae
fs
adc
test
je
inc
das
ljmp
mov
xor
push
xor
and
pop
add
jo
dec
push
jb
jge
lret
mov
rorl
inc
add
popa
add
jno
pop
or
dec
rolb
xchg
cmp
rolb
or
rclb
lods
sub
in
inc
imulb
rorl
nop
dec
into
test
sbb
mov
xchg
push
dec
scas
mov
push
cmp
je
mov
sbb
mov
mov
pop
arpl
sbb
inc
adc
icebp
sbb
and
inc
mov
cwtl
mov
add
inc
or
mov
fmuls
loope
les
test
dec
inc
cmp
mov
sbb
insb
sbb
add
adc
add
cmp
add
or
xor
sar
adc
or
sub
popa
inc
xchg
push
sbb
in
fcmovnb
incl
lahf
fwait
mov
inc
rcrb
or
and
mov
xor
inc
mov
sub
ljmp
adc
or
cmp
je
ret
mov
orb
push
push
sub
jmp
jne
push
test
adc
out
and
xlat
mov
jmp
mov
or
add
inc
add
inc
push
test
inc
xchg
test
fmull
or
jmp
pop
dec
and
inc
in
jmp
test
sbb
inc
or
xchg
hlt
jno
add
ficoml
scas
dec
cmp
movsl
pop
or
xor
das
mov
cmp
je
jge
icebp
shlb
shrb
push
icebp
lret
popa
dec
inc
cmc
xchg
fs
jno
add
insl
test
mov
in
sub
sbb
insb
push
push
push
stos
cmp
mov
or
dec
mov
outsb
jmp
loop
rolb
inc
dec
jns
sbb
mov
ja
pop
pop
jmp
popa
inc
dec
inc
outsb
call
xor
dec
loopne
mov
test
xchg
incl
sbb
paddd
insb
in
fdivl
adc
xor
ds
sbb
jg
push
jnp
aam
xor
sub
fildl
imul
inc
adc
out
add
sub
test
out
sbb
and
and
jae
sbb
jl
xchg
xchg
fstl
push
fstpl
aaa
push
les
loopne
les
adc
xchg
xchg
and
add
loopne
adcl
add
lcall
mov
pop
aas
pushf
std
jnp
sbb
mov
clc
and
insl
clc
push
adcb
mov
jge
pusha
cmp
add
fsubl
pop
fsub
pop
faddp
mov
jge
ds
mov
and
pop
idiv
and
jg
add
cs
stos
insb
and
xor
push
shlb
add
loope
adc
lret
pop
dec
je
add
inc
cmpsl
shll
adc
lock
je
call
xchg
lahf
mov
fadds
sbb
adc
push
iret
pop
xor
push
or
push
mov
dec
adc
or
adc
sub
nop
aam
sbb
fucomi
push
add
shlb
stc
subps
push
push
sbb
xor
iret
dec
sub
out
xor
jne
adc
int
fistps
movsl
push
push
xchg
jbe
sub
sub
or
jbe
and
push
cmp
xchg
jnp
and
sbb
sub
pop
sbbl
clc
dec
fsubrp
jp
adc
dec
dec
pop
push
mov
xor
mov
divl
je
sub
dec
xor
mov
xor
daa
sbb
xor
cmp
enter
mov
lret
sub
pop
push
adc
sbb
mov
inc
sbb
es
mov
push
or
xchg
xor
lret
out
pop
push
jecxz
fwait
pushf
das
xchg
xorl
xor
fldenv
enter
pop
fdiv
jb
mov
mov
lret
push
or
lea
add
sbb
mov
movsb
push
pop
and
outsl
cmp
in
sbb
xor
push
ss
movsb
or
adc
dec
or
or
ficompl
mov
push
out
pushf
push
lods
in
inc
pop
adc
das
rclb
xchg
or
or
sbb
sbb
push
push
add
mov
xorl
adc
in
mov
in
xor
and
xor
or
out
xor
push
sbb
adcb
pop
jne
aaa
in
jo
lods
es
mov
jecxz
push
pushf
mov
and
aaa
pusha
inc
xchg
push
cltd
cmp
sub
fisttpll
out
sbb
jle
mov
mov
shl
cmc
repz
repz
adc
sub
iret
repz
adcb
out
cmp
stc
or
sbb
sahf
out
cmp
out
sahf
out
mov
sarl
clc
or
sbb
and
andl
jno
test
addr16
shlb
lcall
pop
mov
lock
adc
inc
and
in
adc
and
add
xchg
sub
mov
sub
add
or
addr16
rep
mov
add
mov
in
add
sbb
push
xchg
pop
adcl
cmp
ret
xor
pop
sub
fld
daa
mov
das
sub
and
push
cmp
cwtl
sbb
shlb
sbb
jb
inc
popa
adc
pop
jnp
cmpl
inc
sbb
fisubl
outsb
cltd
inc
xchg
and
loopne
mov
add
pop
stos
push
cmp
js
mov
sub
sbbb
xchg
inc
scas
add
ret
scas
adc
bound
push
inc
daa
repz
xor
inc
fdivr
jnp
stos
pop
rcll
adc
les
sub
push
aam
leave
adc
sub
or
xchg
pop
add
mulps
scas
lds
inc
xchg
in
into
nop
js
mov
dec
mov
mov
dec
hlt
mov
movsl
enter
add
fcmovne
jbe
sub
adc
jge
push
sub
pop
jo
cwtl
movsl
xchg
add
aaa
adcl
out
in
or
jl
push
popa
add
call
call
rolb
push
jb
dec
or
xchg
xor
push
outsl
in
in
mov
mov
jecxz
inc
push
outsb
shlb
jg
cld
sub
adc
lds
jbe
dec
mov
sbb
adc
faddl
hlt
cmp
jo
into
sub
jo
cmp
repz
push
subb
sub
jg
ss
pop
imul
sub
and
ret
dec
js
sbb
jmp
and
cmp
add
in
mov
bound
sub
and
add
sub
test
adc
ffree
jne
or
cltd
dec
mov
loope
ret
or
mov
stos
jne
ret
addb
shrl
push
movsl
ret
dec
enter
imul
in
in
fsubs
cmpb
cmp
mov
jo
adc
fdivrs
dec
push
xchg
jo
adc
mov
dec
out
cltd
or
dec
adc
push
mov
mov
orb
fwait
push
leave
add
les
add
sub
add
lock
add
xchg
and
mov
addr16
test
call
xchg
push
fdivs
sub
cmp
or
pop
cmpsb
adc
and
and
mov
cmp
pop
les
cmovle
add
cmc
push
cmp
sub
rolb
dec
xor
or
push
xor
loop
add
inc
or
outsb
adc
or
fwait
movsl
xor
fsubl
insb
pop
add
pop
or
es
mov
je
sbb
stc
push
or
and
or
adc
fisubrs
or
jg
nop
pushf
sub
jg
ret
jns
adc
add
or
sbb
push
pop
leave
cmpsb
sub
lea
xchg
addl
add
add
inc
add
add
mov
pop
cmp
sbb
add
xor
aad
jne
xchg
mov
sub
jecxz
in
loope
dec
push
and
stos
mov
test
dec
movsb
cmp
ds
sub
dec
add
or
je
xor
clc
xchg
or
jmp
pop
sbb
cmp
arpl
pop
scas
adc
jns
cmp
mov
pop
leave
add
sbb
pop
enter
adc
push
push
or
fwait
xor
xor
jl
or
subl
push
enter
xchg
push
addl
aas
insl
mov
in
cltd
dec
xor
sahf
and
add
add
ret
and
into
add
ret
add
mov
roll
sub
rolb
pop
dec
movsl
mov
inc
sub
adcl
incl
and
xchg
or
cmp
push
lods
cmp
mov
xor
mov
lea
jae
cmp
int
mov
dec
nop
aas
add
xor
and
and
sbb
xor
add
add
and
and
ret
sbb
lret
add
jne
push
push
mov
insb
push
mov
mov
cmp
mov
dec
xor
ljmp
mov
or
lods
mov
inc
aad
jnp
mov
mov
mov
lret
mov
aad
sbb
pop
adc
cmp
or
neg
sbb
sbb
mov
cmpb
or
dec
je
jnp
inc
add
or
mov
dec
or
add
xchg
cmp
or
jmp
adc
inc
sub
dec
sub
ret
aam
push
sbb
sahf
add
nop
xor
or
dec
insb
push
test
shll
push
adc
sbb
sbb
arpl
or
xor
mov
inc
out
cmp
and
imul
xor
add
xchg
push
movsl
xchg
xor
adc
inc
icebp
sub
jnp
jne
fldl
jo
fadd
xor
sub
or
mov
fildl
sbb
mov
xor
lret
pop
test
jns
adc
push
rcrb
bound
js
mov
aaa
adc
push
jl
push
aas
xchg
jp
sarb
fdivrs
mov
or
movsb
lret
ret
imul
push
sbb
push
mov
xor
sbb
movsb
sbb
dec
lods
push
pusha
out
outsb
testl
or
sbb
scas
pop
test
inc
adc
loop
push
push
cmp
mov
in
cmp
or
shll
cmp
sbbb
pop
add
xchg
xor
lock
sbb
lret
enter
sub
movsb
inc
fistl
pop
dec
add
xor
push
imul
push
int3
jbe
inc
gs
push
shr
cmpsl
cwtl
push
inc
popf
adc
push
ljmp
dec
and
push
loope
xor
adc
sbb
ret
add
xor
and
jge
and
hlt
sub
push
xor
and
mov
xchg
sub
sub
int
call
xor
and
xchg
inc
add
add
push
push
fbstp
or
pop
stc
mov
mov
inc
dec
mov
shll
imulb
ret
or
adc
jl
jbe
pop
cmp
jmp
cmp
jl
or
sbb
popa
jp
ljmp
int
adc
cmp
cmp
je
mov
mov
push
add
inc
cli
xlat
adc
jmp
movb
mov
push
cltd
pop
idiv
mov
push
adc
test
dec
lock
push
les
arpl
pop
leave
or
and
pop
mov
nop
xor
mov
cmpsl
pop
push
cmpsb
stos
push
test
mov
inc
mov
mov
out
outsl
movzwl
add
or
add
dec
inc
push
lock
stc
push
lock
hlt
incb
sub
sbb
mov
cmp
iret
cmp
pop
sahf
lret
inc
mov
dec
fsubl
cmp
xchg
ds
out
lock
hlt
cmp
inc
dec
cs
push
push
dec
and
idivl
lret
xlat
xor
push
and
lret
test
loopne
add
jnp
fidivrs
push
sbb
adc
mov
mov
neg
adc
or
xor
pop
push
dec
rcrl
je
or
imul
insb
push
sub
inc
add
lods
add
push
and
dec
movsl
imul
sbb
push
jns
imul
dec
adc
in
movsb
adc
ret
adc
push
push
lods
adc
outsb
push
cmpsb
fisttpl
mov
mov
adc
ror
jbe
adc
push
push
xchg
lock
xchg
xchg
jp
sub
ffreep
clc
sub
insl
dec
add
xchg
sbb
cmp
enter
imul
cmp
push
dec
mov
push
pusha
sub
cmp
inc
push
push
insl
insb
or
mov
sbb
icebp
and
loopne
jns
cmp
les
stc
ds
repz
dec
imul
movsb
mov
push
jnp
sub
repnz
dec
mov
shrb
sbb
and
inc
jb
mov
loopne
test
pop
adcl
mov
sti
xor
mov
jl
jb
sti
es
mov
mov
fs
pop
js
outsl
sub
sub
pop
inc
adc
nop
dec
fisubs
dec
dec
inc
mov
fs
dec
nop
pop
xchg
dec
dec
es
outsb
push
leave
adc
fs
lods
cmp
cmp
mov
stos
jl
int3
cwtl
xor
pop
in
mov
das
aaa
jns
inc
std
fsubrs
ja
push
movsl
fwait
cwtl
test
in
sub
xchg
push
add
xchg
sbb
xor
cmpsl
aaa
push
pop
xchg
shl
sbb
cs
jge
jp,pn
cmpsb
fwait
push
jo
fdivrl
shlb
inc
pop
push
rorb
outsl
aam
and
in
movsb
xchg
ret
fldz
dec
pusha
int
insb
movsb
fcompl
sbb
inc
movsb
fmull
subps
add
jle
pop
xor
mov
mov
mov
jecxz
and
and
inc
call
jae
pop
call
out
test
inc
push
stos
xor
jp
scas
xchg
cmp
lcall
adc
mov
push
add
repz
inc
pop
sub
sahf
add
mov
push
jnp
push
in
loope
loopne
ds
push
mov
or
cmp
rorl
jno
ljmp
sti
or
add
or
sub
cmp
pushf
inc
hlt
ss
mov
mov
push
cmc
push
aaa
movsb
cmp
or
cmpxchg
adc
push
and
dec
mov
sarb
push
pop
pushf
inc
or
loopne
xchg
fimull
mov
mov
sbb
dec
and
fwait
jl
stos
and
fs
inc
dec
notl
pop
mov
test
add
pop
and
rorb
jae
adc
or
arpl
test
mulb
push
cmp
mov
xor
inc
xchg
pop
testl
sub
mov
sbb
and
mov
xchg
lods
loopne
and
out
xchg
xor
xor
and
dec
xchg
lds
das
jp
dec
and
lret
call
outsl
adc
pushf
add
jg
rorb
jg
mov
xor
mov
mov
enter
das
adc
and
cmp
dec
fwait
pop
fisubrs
pop
push
cmp
and
jmp
adc
push
and
sub
xor
js
mov
mov
stc
and
mov
dec
in
adc
add
cmp
push
pminsw
mov
ret
cmpsl
cltd
sub
and
dec
pop
loope
mov
pop
scas
mov
push
pop
inc
or
call
adc
je
hlt
jne
jge
cmp
sub
cmp
ja
call
pop
xchg
sbb
push
rolb
dec
int3
mov
push
leave
dec
jl
cli
sbb
push
push
lds
test
sub
and
push
jns
lret
add
dec
les
movb
aam
hlt
mov
jbe
push
xchg
int3
cmp
or
dec
shr
jb
shrb
cmp
dec
imul
pusha
sub
xchg
sbbl
xor
cmp
test
sub
ja
ret
into
or
in
mov
cmp
mov
add
push
test
and
dec
inc
daa
xchg
or
or
sbb
mov
add
cmp
in
add
lret
cmpb
cli
pminub
sarb
jmp
cmp
loopne
push
decb
imul
cli
call
xor
sbb
es
add
jge
sbb
jecxz
xchg
cmp
mov
mov
das
iret
push
add
icebp
xchg
enter
or
jp
jo
xlat
xchg
push
les
jns
adc
mov
loopne
pop
push
and
js
int3
xchg
test
mov
pop
xor
jo
adc
xchg
test
inc
std
add
jmp
cs
aaa
sub
cmp
test
inc
dec
or
test
push
cmc
cmp
push
pop
adc
aad
and
adcl
aaa
mov
and
pusha
ret
sbb
lea
xchg
call
popa
adc
fwait
push
pop
fdivs
and
adc
iret
pop
ljmp
fcmovne
fiadds
jae
lcall
push
add
xchg
enter
inc
xor
xchg
inc
push
lret
repz
call
push
jb
dec
das
test
es
enter
in
and
jecxz
adc
inc
mov
in
or
ffree
xchg
ret
loopne
inc
cmp
cmp
jo
or
add
jmp
ds
sbbb
push
mov
pop
push
loope
push
sub
mov
inc
and
xchg
es
sbb
int
shrl
rolb
cld
pop
push
xor
mov
jbe
push
cmp
pop
adc
lock
cltd
cmp
pushf
jmp
pop
mov
mov
mov
xchg
out
cmp
adc
cmp
shrb
pop
mov
aam
cmp
push
cmp
scas
dec
cmp
cmp
in
cmp
es
sub
scas
pop
sbb
adc
cmp
sub
push
mov
inc
call
push
cmp
das
daa
and
fiaddl
mov
mov
mov
rcrb
xchg
mov
cmc
adc
arpl
enter
pop
jnp
xor
cwtl
add
push
int
inc
jge
xorb
push
xor
add
sbb
rolb
xchg
sub
mov
ret
cld
jmp
je
in
cmp
and
ret
fadds
and
bound
cwtl
push
push
push
daa
rorb
decl
shll
dec
lret
and
lods
add
add
bound
outsl
lcall
dec
ret
sarb
adc
addr16
insl
dec
test
add
pop
or
and
das
inc
lret
jle
push
dec
pop
ljmp
sub
pop
adc
jmp
iret
push
test
mov
in
scas
sbb
mov
push
out
and
lock
inc
scas
xor
cmp
mov
and
xchg
pop
es
gs
inc
add
scas
dec
ja
mov
mov
loope
lods
and
mov
cwtl
inc
popl
pop
fwait
or
cmp
ret
fstpt
test
and
cld
jle
xchg
test
aaa
inc
sbb
xchg
push
pusha
and
or
sub
or
cltd
sub
jge
cmp
sub
sub
aad
std
add
mov
pop
pcmpeqd
icebp
scas
push
cltd
js
xor
push
push
push
aam
xchg
or
push
jno
and
xchg
mov
aaa
adc
fsubr
addr16
in
lcall
lods
inc
push
adc
mov
pop
or
push
xchg
add
fsubs
inc
call
dec
icebp
inc
dec
or
lods
adc
stos
int
sbb
test
or
push
les
xchg
out
adc
adc
es
enter
inc
sbb
push
mov
xchg
fstps
and
mov
and
adcl
mov
pop
push
add
data16
out
or
jge
shrb
fildl
mov
les
outsl
rcrl
inc
cmp
or
jmp
call
sub
push
mov
xchg
add
add
adcl
push
lahf
mov
in
sub
add
pusha
js
xchg
xchg
scas
dec
bound
test
daa
sbb
sbb
mov
push
pusha
sbb
out
cmp
mov
mov
gs
lret
lret
or
add
jbe
loope
mov
decb
add
sbb
out
push
addl
adc
pop
and
cmp
movsb
lock
pop
mull
add
cmp
sub
rcl
adc
pop
sbb
addl
adc
ljmp
xor
push
dec
mov
push
push
dec
into
jp
push
inc
adc
sub
incl
jae
mov
and
inc
jmp
mov
add
jmp
dec
xor
int3
push
adc
jne
mov
cltd
xchg
jne
xorb
sar
push
faddl
jp
aaa
jno
loope
popf
lods
xchg
jne
pop
push
ds
into
push
pop
pop
pop
shrl
mov
or
pop
dec
lea
jecxz
je
xchg
dec
xchg
enter
add
and
leave
jecxz
cltd
nop
or
les
out
add
jno
and
loop
ss
mov
mov
push
jecxz
test
nop
cmp
clc
pusha
sbb
dec
push
leave
imul
pushf
divl
ret
addr16
cmpsb
push
jmp
call
cld
sbb
mov
test
cltd
cmp
sub
add
mov
sbb
mov
cltd
mov
mov
jle,pn
rcll
pusha
or
lock
pop
addl
xor
test
or
push
shll
sub
mov
pop
lahf
jo
jnp
and
lock
fadds
fistps
push
dec
dec
enter
mov
cmpl
mov
or
inc
add
cmp
test
ja
add
or
or
in
dec
addl
push
out
jne
mov
fs
int
adc
pop
add
xor
sbb
xchg
sbb
xor
cmp
add
mov
addr16
pop
or
sub
adc
les
lea
addr16
adc
inc
mov
clc
sbb
andl
fs
jns
in
lock
cmp
push
fnstenv
and
movsl
xlat
push
mov
les
movsl
int
sbb
adc
mov
sbb
dec
jae
ffreep
add
cmp
xor
mov
adc
test
mov
shll
mov
and
insl
adc
inc
push
stos
iret
adcl
inc
adc
pop
inc
aam
xchg
rcr
mov
dec
add
sub
out
xor
mov
lret
or
out
mov
out
adc
in
pusha
add
cmp
mov
int3
add
out
test
add
orl
paddsw
sub
scas
imul
cmpsl
pop
movsb
jge,pn
fmul
fwait
scas
push
cmp
ljmp
out
imul
dec
xchg
scas
dec
adc
add
sub
sbb
int
loopne
or
add
outsb
pop
or
add
push
mov
ret
movsbl
mov
daa
ds
push
stos
add
mov
mov
ljmp
sbb
add
pop
fisubrs
leave
and
push
insb
addr16
test
mov
add
rorl
testb
adc
mov
mov
sbb
xor
das
addb
mov
push
xchg
orl
xor
bound
and
sub
in
push
into
and
or
xor
loop
dec
push
dec
cltd
inc
data16
add
cmp
repnz
mov
inc
or
push
mov
loope
xor
orb
jb
adc
push
add
xor
leave
xor
sbb
and
js
imul
mov
sub
jbe
stc
nopl
ret
adc
mov
xchg
rcr
adc
add
sub
jo
cmp
xchg
punpckhbw
pop
jl
dec
sbb
dec
xchg
mov
xchg
loope
adc
sbb
or
mov
sbb
sbb
xchg
add
scas
inc
or
sti
es
push
inc
sbb
xchg
andl
popa
andl
pop
add
mov
jae
push
and
mov
insb
stos
jo
add
push
or
pop
pop
xor
cmp
lock
jp
xor
cwtl
jecxz
addl
inc
aam
mov
enter
inc
out
lret
mov
cmc
and
scas
imul
push
cmp
mov
iret
out
lret
push
test
rcrl
sarb
shl
push
and
push
imul
les
sti
xor
mov
imul
std
and
loopne
inc
adc
cmpl
jg
add
pop
iret
cmpsl
and
or
mov
pusha
add
shrl
testl
add
mov
sub
and
mov
pop
dec
test
mov
push
or
xchg
xor
push
fptan
push
cmc
cli
ja
cmp
fsubr
add
addr16
popf
pop
lods
push
ret
mull
or
inc
arpl
xadd
push
arpl
xor
stos
fcompl
sub
fwait
daa
lret
inc
and
sbb
sbb
adc
push
jl
pop
inc
loope
in
lods
inc
or
icebp
push
push
sbb
sbbl
mov
je
push
test
adc
xor
or
pusha
sub
sbb
testl
jae
adc
in
or
mov
scas
pop
mov
in
xchg
popa
mov
add
dec
rcl
and
cmp
and
inc
rolb
sbb
test
imul
in
repnz
cmp
add
add
push
lods
inc
insl
push
dec
ss
dec
jmp
sub
adc
add
or
and
sbb
push
push
cmp
rclb
adc
push
cmc
rcr
pop
sub
dec
cmp
inc
cmpsb
add
dec
mov
lods
or
adc
pop
jg
xor
in
add
adc
ja
subl
or
fldenv
pop
dec
jl
repnz
inc
dec
add
push
inc
or
sbb
rorb
or
jne
xchg
mov
in
cmp
loope
sbb
xor
pop
aaa
adcb
das
lods
cld
cld
lret
pop
add
push
add
add
leave
mov
inc
or
cld
sub
test
lahf
push
outsl
sbb
mov
add
inc
add
adc
add
mov
and
insb
push
sahf
mov
pop
mov
cmpsl
mov
pop
sbb
mov
incl
jo
push
dec
xor
fldl
and
xchg
adc
fcmovnu
ljmp
gs
cmp
jp
xor
sbb
faddl
rol
or
xor
or
pop
in
rorl
adc
xor
or
ds
cmp
hlt
dec
js
and
insb
imul
mov
push
or
pop
pop
roll
sbb
lock
or
dec
aad
loope
dec
fsubl
sahf
sbb
adc
fistpl
mov
sbb
lds
pop
or
add
pop
or
dec
pop
psllw
sub
stc
addr16
imul
adc
dec
mov
rolb
out
sbb
pushf
sbb
sti
push
pusha
out
stos
fldcw
xor
push
pop
cmpl
xor
mov
push
push
sub
mov
pop
insb
inc
cmp
jb
jmp
in
testl
add
xor
and
rol
dec
jl
sar
push
jne
mov
mov
rorl
inc
sub
pusha
int3
and
addr16
enter
cvtps2pi
xor
push
adc
arpl
or
shrb
and
adc
xor
cmp
mov
sub
movsl
mov
xor
addl
dec
add
mov
insb
jae
pushf
pop
fisubl
push
add
or
or
icebp
or
mov
sbb
repz
scas
inc
fmuls
mov
xor
mov
push
dec
addr16
xor
xor
js
or
lea
cs
dec
aam
test
adc
adc
test
or
xor
ficompl
push
push
pop
aaa
push
inc
dec
lods
add
inc
pop
call
bound
stc
les
push
shlb
movsb
jge
xchg
xchg
test
mov
dec
repz
cltd
inc
scas
cmp
push
sbb
hlt
dec
pop
cmp
add
or
inc
pusha
xor
test
aas
rcr
inc
sub
add
xor
push
int
sbb
pop
add
test
push
loopne
jns
out
lret
les
popf
enter
popf
jo
rolb
ficomps
jge
jge
lcall
pusha
mov
add
jns
pop
xchg
mov
add
pop
rclb
add
mov
sub
cmp
lea
stc
cmp
adc
outsb
movsl
xor
or
mov
dec
jae
or
mov
les
popa
xor
imul
xchg
cmp
leave
add
mov
scas
cmpl
pushl
inc
sbb
frstor
sbb
sahf
adc
jo
popf
inc
sub
xor
mov
movsl
inc
int3
mov
mov
mov
or
test
aaa
add
and
fsubs
lea
mov
or
cmp
cmp
inc
dec
aas
add
inc
jmp
pushl
push
or
mov
pop
mov
mov
fsubs
or
mov
sbb
dec
aam
imul
and
cmp
jnp
cltd
nop
aam
stos
adc
dec
xor
rcr
sub
ret
xchg
shrb
lock
or
adc
popf
stos
test
call
push
pop
xchg
cmp
inc
pop
pop
xchg
lods
fadds
insl
pop
dec
inc
dec
cmp
mov
pop
in
cmp
leave
arpl
mull
inc
push
fs
push
and
xor
in
les
adc
xor
inc
sbb
and
inc
leave
and
push
mov
add
outsl
xchg
test
leave
ljmp
lods
insl
mov
push
mov
add
es
jb
inc
bound
dec
adc
lds
pop
fsubrl
mov
je
lds
mov
sbb
std
lods
push
movsb
push
stc
popa
or
fnstsw
push
add
mov
repz
sbb
push
adc
std
ret
or
popl
inc
pushl
repnz
push
inc
pop
aas
and
push
jmp
ja
xchg
push
fsubs
divl
inc
hlt
jl
outsb
ja
mov
push
out
push
push
inc
dec
push
xchg
or
arpl
bnd
pop
scas
cmp
jbe
push
in
rcrb
xchg
sbb
or
out
xor
dec
std
lcall
ret
lock
mov
jge
loope
in
and
and
pop
mov
push
test
push
and
adc
jl
pop
or
inc
add
cmp
inc
insb
imul
mov
hlt
aam
pusha
adc
jecxz
and
adc
or
jmp
mov
jmp
loopne
xchg
ret
jae
inc
cmp
aam
test
xor
sub
out
in
xchg
dec
movsl
push
in
jmp
jmp
aaa
mov
out
loopne
jbe
shrl
add
push
and
add
add
cmp
js
dec
imul
push
push
pop
sbb
jno
das
adc
jo
and
sbb
xor
push
mov
mov
fcomi
sbb
xor
insl
sbb
sbb
add
and
mov
mov
mov
movl
or
leave
in
adc
cmp
cs
adc
and
mov
subl
mov
dec
fldt
jo
add
or
insl
jbe
ret
jns
mov
adc
mov
sti
sub
mov
push
inc
sbb
and
fs
and
sub
xchg
push
and
sti
push
dec
test
out
cmpsb
adc
adcb
xlat
mov
mov
push
mov
xchg
mov
aad
inc
adc
addl
sbb
add
roll
lret
adc
clc
les
push
fstpt
jmp
xchg
mov
fstpt
mov
adc
or
or
and
aad
cmp
cmpsb
popf
fisttpll
in
adc
mov
test
sub
xor
and
jo
dec
xor
cmp
jne
aam
lea
push
add
sbb
mov
jno
lods
out
lods
fs
mov
inc
les
dec
mov
jnp
sbbl
add
loopne
arpl
mov
inc
movsl
sbb
lret
adc
sbb
test
popf
out
xchg
in
lcall
incl
mov
mov
sub
lea
les
inc
cs
add
adc
mov
jecxz
nop
movsl
sub
aaa
mov
adc
pop
adc
div
mov
or
movsl
out
cltd
movsb
popf
xor
and
aam
push
int3
andl
popa
imul
push
and
loopne
push
int
movb
lods
cmp
mov
push
adc
hlt
or
aas
mov
push
jge
popf
ljmp
rolb
cmpl
sub
movsl
rorl
xchg
lock
pusha
add
jne
or
adc
scas
shrb
xor
dec
sbb
je
pop
push
xchg
mov
mov
or
sbb
pusha
jle
pop
pop
mov
push
push
pushf
lock
cmc
inc
sub
add
push
sub
push
xor
aaa
or
sti
add
mov
push
dec
mov
aas
dec
addl
ss
dec
sahf
mov
sbb
dec
or
sbb
add
adc
push
or
inc
mov
ds
adc
adc
pop
sub
loope
dec
xchg
and
imul
jne
xchg
jecxz
les
pop
inc
mov
insl
push
add
dec
add
neg
pop
sbb
pop
inc
inc
mov
fchs
popf
mov
add
jmp
push
shl
pop
push
xchg
mov
stos
das
mov
pushl
mov
mov
call
or
pop
rcll
or
shr
mov
insl
dec
sbb
cmpsb
lret
xchg
icebp
adc
sub
mov
loopne
and
pushf
jp
mov
push
push
mov
mov
loope
mov
sub
push
or
dec
jbe
rorb
add
in
add
outsb
dec
xlat
in
js
cmp
xlat
mov
xor
stos
jge
cmpl
sub
hlt
xor
jmp
test
xor
sub
pop
add
fstpt
add
sub
loop
fidivrs
push
sbb
xchg
push
adc
pop
clc
jne
loopne
pop
push
push
mov
into
lock
lock
jge
xor
and
xchg
sub
mov
fsubp
push
adc
push
sti
and
and
test
popa
push
mov
jl
insb
jle
inc
xchg
loopne
or
adc
sahf
insb
jl
pop
out
jns
not
jo
pushf
rcrb
push
fidivl
push
fiaddl
out
out
cmp
dec
push
mov
outsl
or
scas
sarb
sahf
mov
and
mov
mov
xlat
push
imul
rol
add
enter
jmp
in
sbb
fidivrl
mov
sub
dec
int3
xchg
or
cmp
jae
sub
out
addr16
add
add
in
out
or
inc
hlt
lock
xor
clc
sbb
rcrb
mov
cs
add
push
enter
hlt
mov
push
or
mov
dec
mov
loop
mov
cmp
push
xchg
pop
cmp
aaa
push
xor
cmp
or
lcall
fldl2e
sub
sbb
sbb
in
sbb
lock
jne
add
or
cmc
movsb
add
cmp
mov
outsl
ret
xchg
mov
addb
push
sbb
fwait
push
cmp
jbe
jl
mov
and
adc
test
mov
in
mov
mov
jge
in
sub
vmread
push
mov
inc
push
mov
js
std
fistl
push
or
insl
shl
push
jmp
or
lret
pop
dec
xchg
jmp
mov
push
movzwl
inc
mov
fistpl
addl
push
jl
cmp
loope
cmp
outsb
xor
mov
rorl
mov
cmpsl
lock
push
inc
pusha
leave
pop
mov
ret
pop
inc
mov
cmp
out
inc
pop
mov
stos
sub
pusha
fdivrl
sbb
cmp
pop
adc
dec
in
stc
adc
in
add
add
sbb
xchg
mov
cmp
push
scas
inc
cmp
sub
add
push
ret
ss
hlt
or
cmp
pop
rclb
insb
xor
inc
sbb
in
mov
mov
adc
add
cmp
xchg
lock
mov
or
sbb
jno
add
outsb
lock
mov
mov
xchg
outsl
rep
movsw
push
cld
cmp
sbb
movsb
mov
cli
jg
fs
mov
shr
mov
inc
mov
mov
test
movb
cwtl
dec
cld
sub
out
push
fwait
cwtl
in
push
mov
or
jg
pusha
idivl
jne
movsbl
xor
ljmp
push
push
push
in
cmpsb
add
jb
and
push
cld
test
push
push
xor
and
sbb
jmp
dec
insw
sbb
and
mov
sbbl
pop
cmpl
mov
fisubrs
cmc
imul
fidivs
sub
push
insl
test
fs
cs
mov
jnp
and
or
cmp
and
mov
inc
mov
xchg
xor
mov
ficompl
inc
adc
ja
sub
jl
ss
jb
mov
cmp
push
add
or
pop
lock
test
sub
out
and
dec
or
cltd
ss
jecxz
mov
incb
push
gs
decl
daa
daa
in
jno
push
add
add
daa
daa
daa
daa
push
pop
or
or
jnp
or
jbe
jmp
or
fwait
insb
push
jmp
por
jmp
adc
fwait
fwait
fwait
fwait
pop
adc
push
adc
dec
adc
dec
adc
fwait
inc
push
jmp
pop
jmp
sbb
xor
fwait
fwait
xor
jmp
sbb
es
and
fwait
sbb
jmp
pop
jmp
and
or
fwait
fwait
or
jmp
and
orps
loop
dec
mov
push
inc
sarb
rcll
jns
jns
push
orl
mov
rol
jns
out
rcl
fcmovu
sahf
out
sahf
in
out
repz
std
cmp
sarl
pop
or
push
repz
repz
and
cmp
xor
ds
or
pushl
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
mov
sbb
and
aas
or
cld
repz
sbb
jle
push
mull
cli
xor
addl
inc
cld
sti
aaa
sbb
cmp
add
idivl
mov
push
mov
ja
jmp
or
mov
js
xor
sub
inc
fdivs
sub
aam
jne
popa
adc
imul
xchg
rcrl
or
xor
xchg
sbb
clc
sub
mov
filds
push
inc
cmp
jbe
fimuls
sub
dec
addr16
jae
or
inc
adc
xor
in
dec
inc
adc
and
mov
jmp
mov
mov
and
inc
jns
or
mov
push
mov
inc
js
add
dec
sahf
lock
jmp
and
enter
icebp
out
popa
inc
aaa
cmp
pushf
aad
push
jo
adc
mov
add
or
ss
jp
adc
xlat
sub
xor
dec
dec
rclb
mov
fdivs
setne
add
movsb
xor
mov
xchg
adc
push
and
inc
push
pop
dec
add
adc
cltd
loope
cmpl
adc
push
faddl
pop
mov
mov
cmc
xor
ja
daa
mov
add
mov
add
jmp
subb
mov
fisubs
addl
pop
sub
fists
ja
xor
pop
dec
and
je
xor
adc
mov
inc
dec
ljmp
fmuls
arpl
jae
mov
and
xchg
lock
sbb
dec
test
mov
push
aam
jg
xor
sbb
scas
jmp
nop
push
cmp
jbe
xor
in
push
ss
lret
cmp
xorl
jne
or
add
movsb
push
jne
fwait
ss
lahf
sbb
or
xchg
jecxz
mov
insl
xchg
pop
mov
jmp
scas
add
sbb
test
xor
lret
fldl
les
mov
adc
inc
pop
lock
mov
loopne
sbb
jns
adc
or
clc
mov
jmp
dec
pop
push
sbb
and
pop
sub
jno
ret
xchg
cld
dec
clc
bound
push
mov
je
jns
xor
xor
je
and
push
das
lock
pop
or
adc
jo
sub
cmp
push
sub
out
jno
or
or
test
rclb
push
sahf
dec
adc
shll
or
inc
add
adc
inc
test
repz
xorl
mov
and
xor
mov
jb,pt
inc
pop
je
push
mov
add
cmpl
push
add
repz
insb
cwtl
dec
mov
and
or
add
xchg
mov
loop
mov
cmp
mov
add
adc
push
sub
inc
dec
sti
test
lret
jg
hlt
cmp
jecxz
jg
pop
pusha
dec
ljmp
inc
pop
push
lcall
popl
add
stos
sbb
and
inc
add
mov
dec
adc
push
sarb
enter
fsubl
sbb
in
xor
rcl
loopne
int3
enter
stos
xchg
xor
mov
sbb
imul
and
and
push
sarl
sub
andl
loop
stos
adc
mov
xor
aas
sbb
sub
in
add
sbb
pop
sbb
cld
arpl
cmp
jne
jae
movsl
adc
sbb
sbb
add
andl
int3
mov
mov
sbb
mov
nop
push
inc
sub
ss
std
and
mov
aam
xor
pop
loop
je
insb
or
xchg
jmp
cmp
add
jne
sbbb
mov
sbb
push
negb
lock
orl
loopne
loopne
push
xor
cmp
xor
add
and
out
push
enter
mov
or
div
add
sarl
sbb
leave
test
subb
cmpb
mov
mov
push
ljmp
cltd
push
xor
sbb
or
pop
push
push
mov
dec
pop
mov
test
mov
scas
inc
movsb
sub
stos
fisubs
sbb
ljmp
xor
fld
lret
add
or
pop
sbb
sbb
add
lods
adc
or
mov
add
mov
sub
jge
xor
fisubl
push
add
mov
nop
out
fwait
sbb
dec
pop
jb
and
in
pop
adc
cmp
jle
cmp
inc
xchg
nop
jge
mov
sub
sub
sbb
shlb
test
mov
sub
lret
add
or
add
xor
ret
insl
fmull
adcb
loope
fsubl
sbb
sub
xor
pusha
and
add
cld
or
fdivrs
fcmovnu
add
adc
loopne
in
add
and
push
popf
mov
sub
cmp
cmp
pop
add
push
sbb
dec
push
sbb
pop
dec
dec
lea
push
inc
inc
or
sbb
jl
jecxz
add
xchg
je
xor
jo
add
add
pusha
call
pop
js
xor
leave
je
in
jmp
jo
loopne
ss
mov
int3
inc
inc
xchg
push
fs
cmp
cmp
sub
fcomp
mov
pop
stos
sahf
movsb
adc
xor
push
ljmp
repnz
inc
inc
popa
inc
push
push
jle
ja
mov
test
lods
cmp
dec
jne
movsb
jmp
cmp
je
mull
add
lods
inc
xchg
adc
fisubl
push
jns
inc
and
mov
testl
push
jg
in
xchg
cli
sbb
push
in
mov
mov
inc
call
push
loope
push
ljmp
jo
adc
and
into
push
pop
dec
ret
inc
cmp
add
aas
shll
xorb
test
sub
push
cmp
inc
dec
call
add
imul
jp
jmp
movups
xor
jl
xorl
test
and
add
xchg
out
pop
jo
sub
pop
and
and
xchg
lock
sub
pushf
cmp
and
xchg
sub
mov
inc
bound
inc
sbb
clc
shlb
pop
xchg
cmp
and
lcall
or
inc
mov
pusha
or
pop
sub
and
pcmpgtb
cmp
sbb
or
and
outsl
cmp
and
xor
cmp
enter
xor
or
xor
loope
xchg
cmp
adcb
push
xor
mov
push
dec
inc
fstl
in
lcall
ds
inc
add
nop
add
inc
aam
inc
sbb
inc
pop
inc
push
rcrb
push
xchg
je
push
jo
pop
js
enter
clc
cmp
enter
adc
mov
xchg
pop
push
push
outsb
xchg
lret
sbbb
movsb
pop
test
fwait
movsb
xor
mov
mov
movsb
lock
cld
inc
mov
xor
cltd
lret
paddd
xorb
push
setge
cmpb
add
pop
add
jg
and
test
xchg
fnstenv
and
insl
and
xchg
cvtdq2ps
or
jbe
or
pop
addb
incl
cmp
jl
sub
addr16
or
sbb
outsb
dec
js
mov
push
or
or
push
and
pop
pop
int
fildl
jp
jnp
cmpsb
repnz
lods
sub
xchg
hlt
shll
jne
mov
xchg
sbb
pop
jl
jmp
or
xchg
out
push
mov
xchg
sahf
mov
mov
addr16
ss
sti
and
and
and
cltd
dec
call
adc
jmp
rcrl
mov
and
loope
in
rcl
or
mov
lahf
xchg
das
sub
mov
js
push
lock
jmp
test
or
repnz
or
push
pushf
pop
pop
call
jne
xorl
lret
fsubrs
push
xchg
xlat
push
cli
jmp
shrb
pop
loop
pop
sbb
mov
lock
jg
pop
add
pop
sbb
mov
dec
mov
pop
outsl
dec
fidivrs
jle
mov
nop
mov
add
inc
pop
add
pop
pop
add
outsb
xchg
sarb
xor
cmpb
mov
out
sub
push
cmp
je
cmp
jne
push
inc
pop
inc
mov
add
push
xchg
push
sbb
cmp
push
sub
mov
add
or
xor
out
popf
hlt
sub
mov
adc
xchg
and
movsl
test
push
dec
adc
enter
cmpsb
push
pusha
popa
mov
mov
popl
add
adc
lock
aaa
movsl
pop
mov
icebp
aam
dec
repz
call
mov
outsb
mov
and
dec
push
test
xchg
pop
imul
mov
and
add
repnz
mov
mov
pop
xchg
or
jnp
divl
push
jge
mov
adc
arpl
push
out
xchg
stc
fucomp
dec
std
mov
subl
in
test
inc
movsb
mov
sahf
fs
xlat
mov
cmc
add
adc
scas
inc
and
mov
dec
mov
mov
enter
ss
ret
popl
addb
call
sbb
mov
insl
push
ss
push
push
mov
into
pop
imul
mov
jno
mov
cmp
push
jne
mov
pop
cmp
sbb
jmp
and
or
sbb
ss
push
jmp
or
mov
inc
int
jnp
daa
jne
inc
mov
lods
test
rorl
mov
jno
mov
sub
ret
mov
aas
into
xor
and
xchg
push
or
sub
dec
or
cs
andl
add
insb
xchg
int
rorl
in
xlat
and
pop
adc
out
testl
lods
push
mov
add
cmpl
push
pop
rcrl
add
mov
cmp
mov
inc
jns
sbb
imul
pushl
mov
jae
add
inc
es
add
push
add
xlat
xor
je
jp
inc
andl
jbe
sub
and
pop
dec
lea
jmp
paddb
jle
jne
insb
sarl
movzbl
in
lahf
into
pop
popa
mov
pushf
mov
nop
stos
cmc
sub
addl
daa
xor
add
mov
loopne
mov
xchg
cwtl
and
xor
mov
add
leave
loopne
das
inc
test
clc
lcall
sbb
sub
dec
add
mov
ror
sbb
and
in
pop
aam
jae
aam
hlt
loopne
dec
mov
xor
inc
jle
jo
int3
loop
push
mov
leave
adc
push
ficoml
or
and
push
inc
inc
fmuls
fcomps
rcrb
pop
pop
stc
das
add
mull
mov
icebp
loope
inc
xchg
pop
jae
scas
add
sub
xor
or
jne
mov
scas
ss
arpl
mov
rcrl
test
mov
push
mov
les
jecxz
or
pop
jne
dec
loopne
push
sub
lcall
rcrl
dec
inc
aaa
or
loope
enter
sti
dec
mov
xchg
prefetcht1
mov
inc
js
lds
shlb
dec
lds
inc
mov
lods
adc
fildl
ds
inc
int3
inc
popf
or
sub
inc
sbb
pop
cmp
or
or
cmpl
rcrl
inc
ds
fmuls
push
push
push
out
mov
xchg
out
repnz
push
mov
pop
test
nop
lea
addl
jns
in
push
ss
stc
add
inc
push
cmp
jo
sahf
jnp
mov
lock
inc
push
inc
leave
fbstp
push
cs
push
xchg
xor
and
fstl
inc
dec
movsl
and
out
xchg
shlb
push
test
push
add
or
rcll
clc
faddl
fstl
fldz
fcomp
fnstsw
outsl
or
push
cmp
or
int3
pop
fsubr
pop
faddp
je
and
insb
cmp
fwait
adc
in
lock
or
hlt
xor
and
push
push
and
adc
ljmp
xchg
or
push
test
hlt
rorl
push
test
imul
dec
inc
push
pop
movsl
mov
movsb
pop
in
iret
cmp
and
fnstsw
or
push
aam
add
pop
or
cmp
fistpl
lcall
mov
shlb
mov
fwait
movsb
ljmp
outsb
leave
lret
xchg
xchg
jp
movb
xor
popa
lcall
xlat
loop
call
imul
add
rcrb
pop
ret
mov
hlt
push
mov
cmpsl
jns
in
loop
fimuls
enter
jle
sub
loopne
jnp
les
mov
shrb
sbb
xor
push
inc
aaa
fisubrs
dec
and
hlt
mov
or
loope
jmp
cld
pop
nop
int3
outsb
xchg
stos
push
addl
fiaddl
fsubl
pop
data16
cmp
jp
rcr
adc
pop
sbb
sbb
sbb
mov
xlat
push
dec
add
add
jo
xchg
mov
jne
mov
mov
stos
mov
mov
push
sbb
jne
jo
add
or
sub
rclb
push
mov
out
push
or
cmp
mov
sub
push
add
and
clc
jnp
mov
mov
sub
add
push
jns
ret
mov
rolb
mov
clc
out
or
aaa
add
add
mov
push
cmp
and
jo
inc
pop
inc
stc
cmpsl
repnz
loop
dec
cmp
jb
push
pop
sub
cmp
and
pop
jb
in
xchg
adc
or
je
and
mov
in
adcl
adc
ret
iret
add
xchg
inc
dec
add
shl
or
mov
pushl
push
push
xor
jnp
and
sbb
lcall
pop
cmp
ret
clc
and
icebp
xor
add
sub
inc
jne
je
in
je
mov
add
int3
mov
inc
jle
xchg
int3
jo
sbb
dec
in
andb
and
sub
push
jnp
xor
push
sub
jg
in
or
es
jl
jmp
movsl
rolb
repnz
add
cwtl
pop
or
cmp
sar
dec
pop
out
adc
imul
inc
pop
push
test
movups
shll
gs
cmp
jne
js
loope
jmp
clc
add
dec
dec
lods
adc
jae
cmp
add
and
test
and
adc
pop
leave
shlb
outsb
ja
adc
rolb
pusha
inc
pusha
hlt
icebp
pop
fiaddl
je,pn
xor
push
jmp
add
mov
movsl
jo
js
or
push
add
in
lret
in
xchg
push
push
leave
test
or
loope
xchg
push
mov
je
rcl
aam
ret
ret
cmpsb
xchg
lcall
gs
int
lret
enter
xchg
push
sti
repz
or
je
cmp
insb
call
jg
and
testl
pop
jbe
insb
inc
adcb
dec
push
push
or
ret
and
test
es
inc
cltd
xor
inc
aam
adc
pop
sbb
push
jmp
push
push
dec
stc
cwtl
mov
push
dec
push
mov
sbb
lcall
cld
or
cld
mov
lret
xor
fldl
lea
rcl
push
data16
notb
xchg
mov
pop
push
lods
mov
pop
loop
pop
daa
cmp
sub
rcrb
sub
mov
or
push
pop
or
and
and
je
addl
push
dec
mulb
fnstsw
aam
stos
mov
push
lret
addr16
and
jecxz
sbb
mov
pop
xchg
in
dec
test
stos
mov
jne
mov
es
pop
outsb
cwtl
add
mov
jno
lock
sahf
popa
sbb
xchg
xchg
imul
cmp
pop
outsl
mov
push
and
pop
lock
mov
lea
fisttpll
pop
lock
add
jae
pop
xchg
add
or
in
push
adc
push
pop
sub
and
popa
repz
nop
nop
fildl
jns
lods
pop
insb
mov
sub
hlt
xor
xor
inc
sbb
inc
add
aam
lea
add
cmpsb
mov
sub
push
js
in
dec
dec
adc
sub
mov
sub
mov
or
mov
lret
jle
mov
push
cli
pop
imul
sbb
adc
pop
daa
aad
insl
inc
adc
fcoms
fcoml
add
dec
and
cmc
sub
aam
or
mov
call
cmovl
jecxz
or
or
xchg
xchg
adc
fadds
fistpl
fisttpl
dec
cmp
adc
rcrb
sbb
and
or
fwait
mov
add
lahf
cmpsl
xchg
adc
inc
sbb
pusha
inc
pop
jg
sti
push
addb
sub
add
or
sbb
mov
imul
orb
fxch
push
lahf
sub
mov
jge
imul
call
sbb
pop
cmpsl
cmp
std
jmp
push
in
inc
mov
push
push
notb
add
fcomip
push
xchg
push
testb
inc
test
fbld
add
pushf
xchg
mov
imul
movsl
add
in
jne
imul
xor
jmp
xor
mov
and
xchg
pop
adc
add
test
dec
or
adc
icebp
jmp
and
cmp
push
push
xchg
mov
imul
inc
es
xchg
xor
loope
enter
or
dec
or
cmc
cmp
enter
adc
or
movsl
pusha
push
or
sbb
inc
bound
mov
push
shlb
push
jno
inc
add
adc
iret
js
or
faddp
aad
pop
mov
test
fstl
xchg
mov
sbb
jg
push
xor
jne
lcall
dec
rcrl
add
inc
shrb
sub
sub
imul
lahf
or
pop
pop
sub
rolb
incl
in
jae
xchg
push
js
loope
pop
loopne
repnz
frstor
xchg
xor
in
xchg
add
push
cmpsl
add
sbb
adc
in
mov
sbb
jl
add
sub
addb
pop
xor
sbb
jns
clc
je
icebp
incb
or
mov
xor
loopne
fstps
lock
mov
prefetch
movsb
inc
jmp
imul
test
push
movsb
adc
out
movsb
data16
cld
dec
push
jp
dec
sbb
in
xchg
scas
mov
popf
jno
jne
pop
adc
aaa
mov
fwait
xor
add
push
cmp
xor
shrb
cli
xchg
cs
cltd
xchg
mov
dec
xchg
mov
test
inc
outsl
pop
mov
mov
or
mov
xor
or
add
add
add
pusha
pop
hlt
or
or
imul
adc
and
in
inc
js
pop
jne
enter
cmp
aam
sbb
adc
adc
in
sbb
cmp
lock
push
xor
test
push
or
ficomps
fs
mov
test
inc
mov
mulb
xor
aaa
ficoml
aam
mov
jmp
add
adc
add
cmp
out
pop
xor
push
sbbl
pusha
rclb
jp
ret
mov
xor
pop
add
sbb
jo
mov
ret
lock
pop
sbb
out
rorb
les
inc
repnz
and
xchg
loopne
ja
pushf
jo
ss
xor
or
or
loopne
lret
ss
adc
add
dec
inc
dec
movsb
xor
ficoml
out
std
inc
aam
aas
push
mov
jmp
cmp
and
cwtl
lock
shlb
push
cmpsb
in
pop
xchg
xor
xor
sbb
and
lcall
bound
loopne
ljmp
adc
inc
cmc
inc
lock
adc
aas
movl
adc
sub
mov
jne
push
sub
dec
mov
push
arpl
pop
fwait
cwtl
icebp
std
add
movsl
ror
cmpsb
push
mov
lret
pop
and
adcb
iret
xchg
dec
in
mov
les
inc
jne
mov
pushl
hlt
rclb
push
push
movsl
sbb
out
daa
and
mov
test
or
pop
mov
xchg
push
test
outsb
mov
lea
add
aas
cmp
push
sub
xchg
mov
cmpsl
fdivrl
sub
add
nop
sbb
ret
cltd
fs
push
push
push
push
je
push
jns
and
push
cmp
jne
lret
es
push
in
mov
xor
mov
pop
into
not
nop
sbb
xlat
mov
clc
jmp
adc
js
pop
dec
lock
popf
mov
adc
je
adc
dec
daa
mov
in
and
dec
pop
and
sub
push
hlt
or
sub
inc
add
sub
lods
test
fnsave
scas
es
dec
mov
ss
mov
out
je,pn
jle
lock
repnz
mov
and
ljmp
out
sub
loop
lds
insb
cmp
shrb
mov
push
jl
mov
and
pop
test
sub
sub
test
push
add
or
jnp
inc
in
mov
xchg
mov
and
rol
fistps
cmp
add
mov
or
add
hlt
dec
add
gs
repnz
call
inc
jg
cmp
xor
inc
add
rclb
mov
cmp
mov
or
or
iret
inc
add
add
mov
or
add
xor
push
test
push
mov
mov
lea
bound
pop
fwait
add
scas
sti
jp
out
hlt
rorb
push
aaa
add
cmp
mov
or
or
insb
mov
mov
sbb
mov
fs
add
mov
pop
mov
xor
push
bound
notb
mov
pushf
std
lea
lods
fs
xchg
repnz
mov
js
add
das
sbb
mov
or
ss
push
mov
inc
lea
sbbb
cmpsl
fxam
lret
test
inc
push
xchg
cwtl
hlt
add
push
jmp
pop
push
push
xor
push
push
popf
and
sbb
add
nop
popa
inc
jbe
insb
add
lods
xchg
setge
mov
and
daa
dec
jl
arpl
cmp
pop
mov
mov
lea
or
mov
roll
adc
shlb
andb
xchg
push
mov
insl
jmp
fwait
sti
lret
shl
cmp
add
jae
dec
les
divl
mov
test
idivl
pushl
cmpb
or
es
xor
pop
push
pop
sbb
cmp
push
xor
push
mov
mov
aam
adc
dec
or
adcb
orl
divb
jl
mov
mov
js
mov
fcmovne
imul
xor
out
out
dec
or
inc
adc
push
lcall
jl
shl
push
jno
xchg
pop
or
mov
xchg
fs
inc
jo
or
inc
dec
test
cld
cld
or
repz
rol
movsl
mov
inc
idivl
sbb
cs
enter
addl
jo
mov
or
lret
inc
mov
mov
xchg
jl
push
stos
xchg
ljmp
jl
jns
adc
xor
je
popa
inc
nop
cmp
lea
xor
in
int3
cmp
enter
icebp
call
jbe
cwtl
mov
rcll
and
pop
ja
les
pop
cmp
jg
xor
cs
adc
dec
lock
sbb
inc
or
add
add
sub
sarb
xchg
movl
xchg
jo
lods
or
sbb
mov
xor
cmp
cmp
mov
and
cmp
and
mov
mov
scas
and
xchg
mov
jp
insl
stos
or
sub
mov
test
rcll
adc
and
mov
mov
sti
sub
out
dec
int3
jp
xchg
pop
cmp
pop
add
hlt
nop
sub
xorb
cwtl
out
push
or
add
jae
dec
clc
test
lods
sub
lds
pop
aad
cmp
sbb
pop
fldl
loopne
push
or
push
cs
fstpt
mov
sbb
gs
rolb
sbb
sbb
in
lods
xor
shll
mov
lods
and
push
xchg
pop
shl
jo
dec
add
or
add
mov
push
popa
pop
int
das
verw
in
hlt
add
rcrl
sarb
insl
dec
or
loop
mov
push
movsl
dec
jno
lea
cmp
sbb
das
sti
nop
xchg
out
call
inc
inc
call
std
scas
test
add
push
mov
nop
sub
aad
mov
adc
add
je
or
rorb
xor
and
loop
mov
jnp
stc
sub
nop
xorb
addr16
adc
ret
dec
jo
fildll
xor
adc
inc
pusha
hlt
sbb
xchg
stc
pusha
cmp
xchg
add
dec
mov
subb
mov
subl
mov
push
inc
sub
movsb
pop
jb
push
in
cmp
or
lods
xor
test
out
sbb
repnz
cmp
xlat
mov
clc
xchg
or
adc
je
jo
push
mov
sete
add
pusha
dec
inc
in
sbb
xchg
mov
xor
mov
mov
or
ja
mov
adc
mov
xor
jge
popa
push
ja
inc
adc
aad
outsl
sbb
xchg
or
dec
call
fcmovb
adc
mov
ret
mov
add
ret
push
push
add
add
sbb
sbb
loopne
fldl
hlt
flds
xor
aad
ret
jg
mov
mov
mov
push
add
je
scas
iret
cmp
pop
pusha
adc
pop
cmpsl
mov
push
xlat
pop
pusha
enter
and
call
cmp
jge
int3
mov
notb
jg
pop
test
sarb
rcrb
mov
xor
std
push
mov
shll
inc
inc
jmp
inc
fs
sub
pop
aas
cmp
test
push
or
add
and
clc
xor
cmp
push
test
or
adc
dec
sahf
repnz
xlat
or
sub
add
iret
cltd
aam
xchg
scas
arpl
push
mov
nop
and
outsl
dec
popa
sbb
js
jecxz
shrb
in
push
je
daa
imul
ret
or
lcall
data16
xchg
jnp
pop
pop
in
mov
jo
ss
pusha
lret
in
xchg
fstpl
or
push
sbb
fwait
je
cmp
mov
sub
or
aad
push
in
mov
cmpb
imul
ret
sbb
jne
xchg
daa
xor
movsl
subl
push
cmp
or
push
adcl
add
movsb
pop
push
and
les
les
push
ficompl
enter
or
mov
in
aam
or
dec
push
es
xchg
mov
push
es
pop
cmp
lret
or
lret
and
dec
push
xchg
shlb
push
sahf
mov
fdiv
sub
xchg
or
push
ss
out
pop
daa
mov
sbb
xor
mov
push
mov
pop
js
or
pop
push
outsl
push
stos
sti
sbb
rorb
repz
mov
mov
fs
push
xorl
mov
or
xlat
cwtl
cld
mov
pop
or
push
push
pushf
mov
mov
orl
push
cmp
in
inc
inc
in
xor
popa
call
pop
add
mov
aad
adc
dec
sti
add
jo
xchg
xchg
xchg
jne
mov
jmp
test
test
add
and
dec
cmp
cmp
pop
adc
movsl
pop
decl
adcb
cltd
and
mov
fimuls
pusha
ret
cmc
mov
setne
dec
inc
pusha
sub
ret
jne
xchg
cmp
je
ret
mov
mov
cmp
push
loop
pop
xor
scas
mov
cmp
inc
testb
xchg
test
add
mov
adc
leave
int3
sub
pop
jo
or
int3
ja
mov
dec
fxch
mov
or
xor
add
test
and
aam
jecxz
das
in
mov
and
sub
mov
inc
mov
push
sub
popf
jbe
movsl
fisubl
pop
sub
subl
dec
and
cltd
fnstcw
fcomps
jo
adc
pusha
loope
jno
xlat
sti
push
mov
pushf
sbb
add
dec
cmc
pushf
mov
mov
inc
call
pop
pop
mov
cmc
movq
cmp
mov
inc
fst
aam
mov
mov
mov
out
nop
loope
popf
shlb
cli
shr
xor
mov
jb
test
push
cwtl
sub
not
cld
lea
test
xlat
movl
incl
shr
cmp
jbe
add
jmp
add
mov
pop
mov
pop
and
or
inc
push
and
lods
inc
notb
test
enter
push
lock
mov
xor
push
push
in
or
sub
mov
mov
filds
popf
imulb
xchg
fisttpl
es
push
sahf
and
mov
mov
mov
faddl
add
int3
inc
pop
dec
fidivl
mov
out
or
cmpsb
push
jb
bound
push
mov
ffreep
jne
mov
push
add
dec
gs
sbb
push
std
inc
scas
fmull
xor
dec
mov
add
imul
aam
mov
cmc
inc
push
adc
sbb
add
rol
bound
push
iret
nop
das
mov
sub
punpckhbw
push
xlat
ret
ret
nop
movups
inc
loopne
hlt
femms
jmp
into
inc
add
cmp
inc
push
dec
and
inc
stc
pushf
popa
cld
addl
popa
and
sbb
sub
les
dec
cmp
push
imul
pop
push
mov
in
add
jmp
xor
les
cmp
push
dec
je
push
xor
shll
shrl
xchg
mov
and
adc
mov
mov
jl
add
mov
test
cmc
push
jecxz
xchg
stos
fld
dec
js
shrb
adc
mov
pop
push
or
and
xor
lock
or
jmp
sbb
or
dec
inc
and
sub
dec
inc
and
fwait
insl
add
sub
rorb
pop
push
pop
aam
sub
icebp
sub
sbb
push
dec
add
push
dec
mov
inc
xor
mov
pop
or
inc
fdivl
cltd
mov
push
or
or
mov
insl
jmp
lcall
enter
fidivrs
cmpxchg
mov
dec
loope
dec
inc
push
push
je
fwait
sub
mov
nop
sahf
test
jl
adc
sub
mov
xchg
jns
pop
push
cmp
inc
dec
add
outsb
xor
or
push
push
xchg
xchg
inc
push
jo
or
sub
loope
ret
je
xor
adc
fs
mov
xor
dec
and
pop
adc
mov
in
jno
or
int
jbe
addr16
mov
out
jmp
xchg
movsb
adc
test
cmp
imul
popa
push
sub
dec
push
jbe
push
pushf
and
mov
jg
adc
pop
jne
push
sbb
insl
add
gs
sbb
dec
jmp
cmp
cwtl
test
add
cmp
xchg
adc
add
xchg
mov
iret
add
les
or
cltd
loope
or
add
add
sbb
sub
fwait
push
sub
push
scas
sar
hlt
mov
mov
mov
dec
sub
dec
sti
aam
dec
push
sub
mov
test
push
or
ret
repnz
add
arpl
add
pushf
jp
pop
lea
mov
dec
add
fbld
enter
mov
filds
insb
test
add
xor
or
dec
bound
divl
add
push
cmpsb
adc
xchg
mov
loopne
add
push
or
or
mov
imull
jmp
push
shrb
inc
adc
lcall
subb
cltd
daa
jl
push
lock
jne
mov
data16
icebp
xor
nop
daa
pushf
inc
add
xchg
push
cwtl
sub
pop
mov
push
xchg
iret
add
xor
mov
movsb
test
push
popa
pop
inc
xchg
and
mov
in
adc
xchg
out
fdivs
imul
and
iret
in
mov
or
les
ds
push
enter
int3
adc
adc
xchg
rolb
pop
jp
fs
jo
shlb
sbb
shlb
and
mov
add
rcrb
jns
decb
dec
or
mov
adc
pop
dec
inc
ss
adc
sub
pop
insb
dec
add
sbb
inc
cmp
fnstcw
mov
sbb
pop
xchg
int3
pusha
mov
push
movsb
stc
stos
push
pop
in
sub
cmpsl
in
lods
popf
arpl
add
or
push
push
lods
or
pusha
js
inc
inc
add
scas
add
dec
call
addr16
daa
adc
movsb
xor
pop
call
out
mov
loopne
pusha
cmpsl
push
adc
push
push
cld
push
inc
lock
hlt
xchg
jg
sub
outsl
lahf
push
lret
adc
adc
mov
cmp
or
adc
jl
cmp
dec
dec
stos
xor
mov
stos
and
insb
push
icebp
into
adc
mov
sub
inc
and
or
incb
or
inc
push
add
pop
jbe
aas
movsb
or
add
pop
inc
cmp
shl
mov
adc
leave
iret
sub
dec
sub
add
mov
stos
orl
pop
push
and
test
mov
js
xor
sahf
cmpsb
adc
sub
or
ret
ret
xchg
shrb
das
inc
mov
nop
rolb
dec
cmc
lret
and
cmp
add
xchg
push
rclb
pushf
jb
mov
scas
add
call
jmp
sbb
sub
js
add
aad
mov
pop
add
je
or
and
sbb
cwtl
in
inc
xor
clc
sub
jmp
inc
in
xor
lahf
nop
filds
aam
jno
add
sbb
sub
xchg
lea
mov
jecxz
adc
fdivs
aas
or
xor
cmp
out
nop
pop
insl
cmp
jne
push
inc
and
push
int3
jge
fstpl
imul
jmp
xor
or
call
pop
sbb
movsl
pop
dec
inc
sarl
or
lea
daa
mov
jb
mov
adc
outsl
jo
mov
push
inc
xchg
cmpl
andl
cs
cltd
mov
std
inc
inc
loopne
hlt
movsl
mov
xor
mov
in
and
mov
popf
sbb
inc
or
sub
jnp
pop
sbb
push
insb
push
shlb
xor
add
inc
test
xchg
adc
or
and
mov
int3
int
adc
or
cmp
or
call
inc
movsb
inc
bnd
push
add
push
std
pop
ljmp
sub
inc
lea
push
mov
push
add
icebp
adc
dec
test
inc
dec
inc
loopne
mov
mov
sti
jo
das
insb
pushf
jge
xor
xor
or
xor
test
sbb
cmp
mov
pop
icebp
sbb
sub
jmp
and
cmp
push
sub
and
push
jmp
xor
in
push
fstl
nop
into
add
xor
pop
sbb
push
ffree
jmp
inc
roll
mov
mov
jo
push
and
clts
fidivrs
inc
adc
pop
ljmp
add
lcall
mov
fisubrl
xchg
loope
mov
cltd
xchg
mov
or
dec
add
or
add
rolb
popa
mov
or
jecxz
or
roll
mov
mov
andl
pop
jmp
gs
mov
push
mov
mov
arpl
add
inc
pusha
push
xor
inc
iret
add
push
mov
and
push
pop
nop
clc
or
aas
cmp
push
adc
sub
inc
sbb
push
test
xor
stos
xchg
push
cmpsl
insl
in
push
iret
stos
mov
sahf
jmp
shll
add
roll
roll
cmpb
test
or
into
aam
add
push
data16
jns
adc
repnz
pop
mov
les
adc
mov
push
and
adc
push
lods
xchg
faddl
sub
push
inc
outsl
add
imul
sbb
pop
inc
mov
imul
in
ds
sbb
jl
stos
push
lret
xlat
sub
data16
pop
cmp
cli
addr16
pusha
hlt
push
hlt
add
xchg
enter
ja
in
aaa
xchg
nop
mov
push
adc
push
adc
mov
or
lcall
mov
out
adc
mov
imul
or
imul
sbb
pop
pop
clc
jns
adc
jge
aad
lret
ss
sarb
push
add
dec
fiadds
outsl
push
fldl
stos
push
jo
loop
push
mov
pop
aas
inc
aam
addr16
dec
xor
lock
cmp
pusha
push
inc
cmpsb
jbe
jmp
push
lods
or
sbb
pusha
mov
lods
xchg
inc
nop
shrb
add
test
jne
push
jne
add
jl
dec
loop
pushf
push
in
sub
or
or
adc
xor
xchg
mov
and
inc
and
and
je
push
sub
ss
mov
push
add
movsl
rorl
adc
pop
loopne
dec
cltd
jmp
push
xchg
push
in
and
add
inc
insl
adc
loop
cwtl
and
out
sbb
inc
stos
and
bound
fsubl
mov
outsb
mov
adc
shl
cmp
adc
push
xor
dec
rol
in
add
imul
pushf
push
stc
movsb
or
pusha
or
or
dec
lret
idivl
ret
mov
loope
push
imul
lods
add
jle
je
bound
push
nop
push
xor
xor
std
call
and
outsl
popa
sub
lret
jo
or
cmp
or
outsl
push
push
pop
xor
pop
int3
call
cld
and
push
dec
inc
push
lret
mov
or
inc
scas
push
add
jmp
icebp
inc
push
and
inc
stos
ss
push
aam
mov
mov
dec
ffree
enter
addb
jne
andl
lods
mov
sbb
adc
int3
into
jp
shlb
cmp
or
inc
es
loop
pop
pushf
es
xchg
push
cmp
fsts
out
mov
nop
pusha
mov
sbb
cmp
rcrl
in
mov
jmp
loopne
or
jo
and
adc
clc
add
loopne
loopne
jno
cmp
xor
push
mov
push
jp
imul
aam
popa
lods
adc
adc
mov
jl
imul
mov
mov
add
push
hlt
imul
cmc
ret
imul
jge
xchg
stos
mov
addl
cmpsb
cltd
sub
xchg
sub
mov
mov
add
test
orb
add
add
add
jnp
lcall
or
mov
test
add
xchg
mov
stos
xor
in
dec
pop
popa
arpl
ja
je
jo
pop
adc
jmp
push
in
xor
jg
mov
push
mov
ror
xor
shr
xor
es
mov
rol
mov
decl
or
icebp
add
add
add
mov
mov
stc
pushf
adc
fs
or
jne
push
or
and
xor
add
add
es
pop
aam
sub
jge
add
imul
sbb
push
cwtl
repnz
mov
fisubrs
jmp
iret
add
xor
and
and
xchg
push
aam
push
inc
sbb
push
imul
repnz
sub
fmull
pop
push
sarb
push
loopne
xlat
ret
rcl
mov
testl
hlt
add
and
xor
fsubr
sarb
test
xor
enter
sub
ljmp
rol
rol
out
add
in
imul
loopne
and
in
inc
lcall
or
push
shl
in
push
and
or
and
or
add
add
aaa
mov
mov
fadd
cs
call
xor
loopne
loopne
in
test
loopne
or
loopne
xor
pop
cmp
aam
push
jbe
xor
sub
inc
xchg
jge
jo
int3
xchg
add
or
push
xor
and
and
in
stos
or
loopne
or
xor
push
xor
push
test
or
dec
lock
and
inc
jo
jb
mov
ret
push
jo
ficoms
push
and
ds
movsl
pusha
xor
adc
push
clc
mov
mov
add
add
aas
inc
fadds
pop
jbe
call
adc
ret
lret
push
clc
jp
push
stc
loope
push
and
add
gs
fdivrs
xor
add
inc
fs
call
in
shlb
fsub
xchg
lret
inc
mov
pop
mov
jo
cli
dec
test
je
adcb
xor
aaa
cmp
or
data16
pop
jae
in
xor
shr
rolb
loopne
xor
inc
aaa
cli
stos
lret
xor
xor
shlb
add
push
sbb
dec
inc
test
loopne
repnz
jb
cmp
add
jo
inc
push
mov
xor
sahf
dec
cmp
pop
xchg
pop
dec
push
dec
adc
add
add
push
xor
dec
xorb
sahf
fs
and
nop
out
push
pop
inc
xchg
cmp
dec
lods
or
push
lcall
rol
dec
xor
push
push
or
adc
enter
int
dec
jae
fs
pusha
dec
cs
and
or
and
movsl
mov
repnz
mov
or
rolb
dec
sahf
mov
dec
jno
in
cmpl
in
add
movsb
shlb
test
addr16
mov
adc
lock
dec
negb
push
inc
ret
fmuls
adc
cmpsb
imul
out
pop
loopne
or
and
add
and
adc
mov
pop
cmp
leave
mov
fstpl
sub
mov
push
js
mov
jb
icebp
das
mov
lea
xor
pop
cld
sub
push
mov
inc
push
mov
mov
sub
shr
adc
and
or
dec
ret
or
mov
adc
dec
mov
adcb
cmpsb
mov
sbb
xor
loopne
lea
jmp
in
pop
jle
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
cmpb
dec
loope
lock
mull
xchg
dec
jl
sub
mov
cmp
adc
test
jbe
or
fs
cmp
repnz
add
fldt
push
jae
push
pop
fadds
rep
or
jle
xchg
lods
mov
or
fnstsw
add
mov
outsl
pop
push
sar
mov
not
int
push
xchg
or
xchg
ljmp
adc
mov
or
ret
cmc
mov
push
call
das
ss
sbb
dec
sbb
ja
adc
push
add
in
inc
add
dec
lea
out
jge
addb
sbb
cmp
sub
and
sbb
jbe
sub
mov
leave
test
pop
or
dec
pop
pop
adcl
add
sahf
jge
push
je
or
imul
sub
cmpsl
mov
dec
cmp
sub
push
lock
adc
aad
xchg
sbb
sbb
outsb
or
fs
mov
mov
pop
lock
fcmovb
testl
filds
jnp
sub
dec
cld
or
add
in
jb
and
dec
insb
fs
cmp
sbb
fildll
sti
insb
insb
sub
xchg
dec
dec
adc
or
mov
push
push
push
sbb
lods
sti
jns
pop
or
pusha
ljmp
add
dec
inc
shll
xor
pop
dec
inc
ds
andb
xchg
pop
pop
ret
addb
sbb
call
push
and
sub
mov
dec
jnp
scas
inc
andl
enter
dec
les
pop
shll
mov
lcall
adc
adc
xchg
cmp
je
cmp
ds
pop
movsb
mov
and
cmp
add
or
cmp
pop
fimuls
mov
adc
test
sub
cmpsb
mov
incl
and
adc
mov
in
lock
xchg
dec
fsubs
lock
or
dec
jle
es
mov
inc
sbb
push
js
push
rolb
push
inc
xchg
arpl
mov
push
nop
or
pop
pushf
push
push
lret
sbb
in
loope
xor
in
aas
cmpl
or
in
mov
movhps
enter
dec
fstps
ljmp
mov
jns
push
aad
scas
jle
gs
xor
mov
push
add
push
push
xor
xor
cmp
push
bound
jae
inc
xchg
mov
xor
sbb
movsb
adc
mov
in
out
or
lea
jno
repnz
cmc
cld
and
jo
mov
inc
std
movsb
mov
enter
adc
push
mov
push
and
jmp
jle
push
dec
sbb
or
test
and
test
loope
loopne
mov
rorb
inc
mov
lods
pop
or
mov
and
insb
loopne
ret
cmp
push
cld
inc
shlb
std
adcb
jecxz
add
pop
mov
mov
push
sub
test
mov
inc
aam
pop
adc
push
arpl
roll
mov
sti
into
cld
lods
mov
and
mov
jg
je
cmp
push
es
in
pop
ret
insb
shll
push
adcb
mov
loop
mov
sbb
mov
sub
cmpsl
js
adc
sub
push
out
test
cmpsb
cli
mov
push
mov
jbe
jns
xchg
sub
fs
mov
mov
xor
xchg
dec
ret
dec
and
or
cmp
and
lret
push
add
push
mov
jnp
sub
imul
sub
inc
enter
push
add
push
mov
mov
dec
push
inc
les
dec
mov
push
dec
or
fistl
dec
sbbl
add
sbb
cmp
add
push
add
sub
push
push
mov
ss
mov
sub
adc
cmp
loopne
sbbb
cmp
add
or
push
or
mov
or
xor
push
jne
mov
push
push
jle
mov
add
or
mov
scas
and
fucomip
lods
push
and
test
rcrb
pop
sub
jbe
xchg
mov
or
jo
mov
dec
push
adc
cmp
jmp
aaa
cmpl
push
push
push
pop
pop
adc
pop
pop
mov
sub
add
or
nop
push
cmp
imul
xor
sbb
dec
pop
mov
dec
push
add
push
shl
mov
imul
adc
imul
stos
or
js
in
imul
sti
add
sahf
in
push
sti
andl
jmp
and
ja
add
xor
rol
jbe
fistl
inc
jg
or
xchg
subb
inc
and
or
push
add
repnz
andb
pusha
add
or
sbb
shll
and
fiadds
loopne
loope
add
inc
push
sar
out
test
sub
shr
add
roll
xor
mov
das
jno
sub
out
add
xlat
push
mov
fdiv
mov
sub
lahf
fdivrl
jbe
test
jecxz
jno
cmp
dec
or
pop
xor
xlat
push
inc
push
ret
mov
mov
xchg
lret
and
jmp
pop
mov
sbbb
loope
adc
push
inc
cmp
jo
xchg
adc
adc
inc
cmp
loope
mov
or
ja
xchg
clc
add
movsb
mov
jns
push
cmpb
loopne
movsl
repnz
hlt
nop
mov
adc
inc
add
je
inc
add
inc
dec
addb
mov
jbe
xor
loope
cmp
cmp
xchg
mov
js
fsubrs
in
das
pop
test
lea
mov
jl
push
sbb
and
dec
cmp
inc
dec
add
mov
test
mov
push
je
add
dec
pop
mov
cld
inc
push
add
sub
push
ja
mov
add
ss
inc
enter
adc
leave
inc
dec
or
fmuls
mov
ja
jae
ss
jb
roll
sbb
adc
xlat
inc
adc
adc
jle
sub
rorb
jnp
mov
inc
mov
push
enter
or
cmp
cli
push
jmp
mov
xor
jns
mov
jmp
mov
adc
sbb
data16
jbe
pop
out
dec
xchg
mov
xor
or
scas
sub
lret
inc
mov
xchg
or
aad
inc
pop
inc
push
loope
fisttpl
cmp
ret
jmp
xchg
xchg
dec
test
fsub
fsub
mov
fidivs
xor
mov
cmp
pushf
xor
jo
mov
out
jle
cli
jp
sub
je
adc
mov
push
nop
or
sbb
ficomps
inc
cmp
mov
movb
clc
sub
mov
out
sub
sub
movzbl
cld
fnsave
inc
dec
mov
jne
movsl
insl
dec
rcrb
or
mov
aad
addl
rorl
rorl
movsb
imul
xchg
xchg
or
jl
and
push
dec
add
add
sbb
subl
std
xchg
orb
or
mov
jno
jle
push
mov
adcl
testb
outsb
jmp
and
push
inc
cmp
jl
pop
aam
dec
call
or
outsb
jle
shrb
adc
add
call
xor
leave
lock
adc
push
sub
je
or
out
push
outsb
mov
or
jle
push
sub
xor
xor
out
flds
das
add
mov
lcall
xchg
stc
pop
stos
shl
add
push
inc
arpl
adcb
nop
adc
test
aaa
pop
mov
xor
pop
push
ja
push
cmp
dec
mov
add
inc
add
push
fdivs
ss
inc
les
mov
jmp
lea
xor
bts
nop
std
pop
or
testb
jne
push
or
in
inc
xor
sub
dec
pop
lock
xor
add
xlat
mov
mov
adcb
mov
inc
in
mov
in
das
cmp
loope
and
add
mov
enter
shl
add
ret
mov
incl
add
lret
mov
fidivrl
movsw
movsb
mov
jo
les
dec
fildll
jp
jge
add
int
or
cmp
cmp
push
pop
inc
and
xor
push
imul
add
sub
sub
push
dec
scas
add
nop
or
xchg
adc
push
sub
insb
push
popa
or
sub
xorb
shl
sar
or
xor
stos
call
adc
xchg
jae
and
add
add
insl
sahf
push
pop
test
xor
mov
shlb
mov
sbb
inc
popa
pop
and
xor
mov
iret
and
sbb
lock
sbb
test
jno
jb
xchg
loope
xor
xlat
push
daa
and
mov
mov
xor
es
cmp
call
ljmp
mov
lock
mov
add
stos
mov
sub
nop
test
dec
sti
lods
or
add
scas
jmp
push
pop
push
loope
daa
shlb
push
jns
or
pop
add
imul
sub
pop
xchg
sub
sbb
leave
xchg
jno
mov
ficoms
repz
adcb
fldenv
lcall
cld
cmpsb
shrb
data16
mov
dec
or
rorl
xor
loop
xor
pop
add
xor
jecxz
inc
sahf
aaa
inc
adc
subb
dec
sub
sti
mov
mov
lock
xor
xchg
enter
subb
pop
push
pop
jbe
testb
xchg
hlt
jmp
push
js
imulb
das
sahf
roll
sub
pop
adc
in
cmp
mov
popf
pusha
or
pop
divb
in
data16
aam
jno
pop
inc
dec
add
add
cmp
dec
mov
push
ret
adc
scas
jno
imul
or
je
adc
imul
mov
jmp
sbb
lods
or
sbb
insl
xor
jmp
jae
pusha
leave
mov
lcall
lahf
testb
mov
mov
dec
fiadds
or
or
push
bound
xchg
ss
pop
pushw
jno
ficompl
or
mull
fmul
int
add
popa
adc
mov
add
sbbl
rorb
imul
in
push
or
sarl
lahf
in
orb
add
mov
lock
pop
inc
roll
stc
lods
fcom
lret
fidivrs
ljmp
and
pop
cwtl
rcrl
fmuls
add
cmp
nop
testl
fs
adc
clc
sub
ja
aad
cmp
push
sbb
cmp
dec
mov
stos
inc
pop
jmp
cmp
out
mov
or
jmp
or
loope
jno
or
push
and
add
pop
inc
mov
adc
aam
adc
out
pusha
fdivl
push
gs
jp
xor
xchg
outsl
mov
ret
cs
mov
add
fs
test
add
xor
outsb
add
and
mov
mov
mov
sbb
mov
mov
out
movsb
scas
aad
xor
jne
push
jno
mov
rcll
or
je
les
or
mov
dec
add
das
mov
xchg
sbb
addb
push
aas
loopne
negl
cmpl
and
cli
and
or
out
pop
pushf
push
pop
pop
pop
mov
pop
push
or
push
push
sub
ret
mov
cwtl
push
adc
pushf
xorl
int
or
adc
push
sarb
dec
incb
ja
and
lods
test
aam
in
cmc
jmp
lods
adc
and
jne
cmpsb
mov
mov
mov
andb
shlb
mov
sbb
inc
add
mov
inc
roll
sub
arpl
push
mov
and
or
jo
out
cmp
jle
pop
pusha
xchg
and
and
lea
movzwl
inc
cmp
in
inc
add
jne
push
aam
mov
mov
add
mov
mov
sub
push
jo
scas
push
inc
cmpsl
add
lret
push
stos
jno
jmp
or
add
pushf
add
pop
cwtl
pop
nop
pop
ret
arpl
popa
add
pop
imul
cmpsl
outsb
push
fimull
push
xor
inc
push
sbb
icebp
or
jo
addr16
add
pop
lcall
push
mov
cmpsl
shlb
test
add
addl
subb
ds
xlat
in
sarl
xlat
jmp
mov
or
mov
je
jmp
pop
mov
and
lret
jne
and
out
ret
mov
inc
push
ljmp
adc
mov
std
push
je
inc
mov
je
cmp
je
push
sbb
mov
add
pop
adc
testb
je
cmp
mov
push
ret
loop
cmp
sub
gs
xchg
jmp
sub
jge
imulb
pop
add
add
fisttpll
sub
pusha
xor
lods
rcr
popa
mov
pop
test
gs
movl
push
push
movsbl
jl
inc
xchg
sbb
sti
push
pop
mov
push
add
sub
jbe
inc
loop
jae
dec
and
rcrb
icebp
jmp
mov
cmp
sbb
dec
ret
enter
adc
in
push
or
sti
pop
xchg
jne
jg
add
inc
and
dec
hlt
jp
sbb
testb
push
lock
arpl
dec
jo
and
lock
mov
xor
or
jb
hlt
cwtl
ss
sub
mov
aam
or
leave
or
inc
mov
add
testb
jno
bound
sub
jo
jo
fmul
or
push
sbb
add
addr16
mov
or
ret
pop
and
push
xor
lcall
inc
adc
mov
rcrl
std
add
mov
loope
scas
enter
or
testb
or
push
mov
add
repnz
sbb
push
mov
pop
cmpb
leave
jmp
add
nop
insl
lea
push
sbb
or
adc
and
pusha
mov
or
jne
popw
push
int
cmp
pop
adc
cmpsl
xchg
stc
jmp
mov
add
sbb
jmp
cmpsl
mov
pop
pop
xor
cmpsb
mov
cwtl
arpl
mov
ret
pusha
mull
mov
add
and
int3
loopne
stos
aas
sub
cmp
jne
push
xchg
stos
sti
inc
fwait
push
adc
jmp
das
add
mov
xlat
jne
adcl
sub
aas
jae
jg
out
lods
cmp
jl
rcrl
xchg
inc
mov
and
jae
sbb
cmp
push
and
xor
bndldx
sbb
int
rorl
xchg
rcrb
cmp
ja
inc
mov
out
scas
shrb
sbb
sti
push
or
push
cmp
test
xchg
loopne
ret
mov
sub
mov
mov
out
sahf
inc
jo
incl
lea
fsubrl
adc
inc
fiaddl
adcl
rclb
pop
cmp
mov
inc
push
inc
and
jae
mov
mov
push
jmp
dec
and
ds
or
dec
adc
dec
pop
nop
inc
and
lods
jecxz
inc
and
sbb
jo
dec
jmp
sub
mov
cld
popf
add
cld
sub
sbb
inc
or
fimuls
loopne
mov
movb
fisubl
out
sub
cmp
mov
inc
loope
mov
push
shll
pusha
ja
pusha
dec
adc
sub
mov
stos
or
adc
aam
mov
add
das
mov
cmp
insl
loopne
cmpl
xor
fcompl
ret
ljmp
mov
or
push
ljmp
outsb
pop
repnz
xchg
mov
fisttpl
sub
aad
imul
xchg
dec
adc
mov
sub
lcall
jo
fsubs
stc
scas
adc
js
add
mov
xchg
repnz
repz
std
push
xorb
inc
inc
lds
pop
or
or
push
inc
adc
xchg
nop
ss
push
enter
std
cmp
pop
insl
in
inc
sub
push
sub
shlb
enter
or
cmp
jmp
push
jecxz
mov
sub
and
pop
xchg
or
cmp
pop
and
pop
in
mov
or
jle
dec
dec
dec
or
aam
cmpsb
dec
pop
sbb
lods
push
jl
sub
or
push
or
or
mov
push
scas
movsl
lds
cwtl
je
rolb
add
fadds
pop
push
adc
mov
mov
adc
cmp
and
push
and
daa
loopne
pop
ds
outsl
es
jb
fbstp
out
add
ja
add
jbe
ds
jae
in
fwait
dec
loopne
dec
add
push
ja
adc
pminsw
and
sbb
inc
mov
xor
sti
pushf
xor
repz
adc
push
into
mov
xor
jo
jo
and
xor
mov
mov
cmp
mov
ret
inc
mov
adc
jo
add
mov
and
add
push
lret
push
lods
adc
icebp
ss
xchg
jnp
adc
adc
gs
iret
inc
and
push
out
jb
or
sbb
mov
in
push
mov
adc
pop
xor
mov
xchg
inc
loope
ret
push
scas
sub
loopne
add
sahf
push
testb
jbe
adc
push
and
pop
shrb
mov
into
in
inc
pop
dec
sub
cld
mov
add
dec
outsl
add
pop
inc
inc
fbstp
pop
jb
cmp
dec
or
adc
daa
shll
xchg
outsb
inc
or
ljmp
push
cwtl
test
je
inc
addl
inc
add
ret
orb
pop
cld
cmp
push
xchg
push
stos
xor
mov
add
inc
cmp
je
inc
push
jne
fisubrs
pop
nop
inc
cmp
ret
push
js
in
push
mov
and
or
and
and
push
dec
mov
xor
popa
insb
sbb
test
mov
xchg
sub
cmc
stos
sbb
out
iret
jne
je
jmp
or
push
dec
push
movsb
ret
jno
push
dec
out
sbb
jns
add
sbb
jae
xchg
add
cmp
lods
aaa
xchg
jmp
adc
test
fdivr
pop
jo
clc
push
push
and
icebp
xor
icebp
jnp
pop
fnstsw
add
cmp
mov
inc
xchg
int3
push
mov
and
pushf
es
push
mov
dec
inc
pop
pop
and
pop
fstpl
gs
sub
or
mov
lods
popa
sbbl
inc
loopne
mov
push
and
or
or
movsb
ret
and
shlb
orb
inc
mov
dec
je
cmp
or
jecxz
xchg
aas
mov
les
nop
jmp
sub
xor
subb
add
push
pop
in
fld
and
jl
bnd
clc
xor
push
imul
fisubs
xchg
adc
movb
jns
cmpsl
and
adc
or
jle
xor
xchg
dec
fsubrl
xchg
add
cmp
mov
mov
xor
cmp
mov
jno
sarb
xor
popa
cmpsl
sti
mov
je
xchg
or
jle
jmp
adc
pusha
mov
push
inc
xor
dec
add
pop
sbb
adc
outsb
and
or
imul
aam
jl
mov
in
arpl
pop
jbe
test
or
jnp
jle
rcrb
js
inc
aaa
sbb
dec
xchg
cmpsl
and
arpl
jne
mov
movsb
sub
mov
push
call
ss
stmxcsr
mov
and
or
sbb
fsubrl
fisubl
add
and
clc
jg
insl
and
jmp
movq
movaps
push
mov
enter
shlb
jle
daa
fdivrl
cli
rcl
lret
outsl
add
mov
cmp
and
lret
scas
cwtl
push
or
and
xchg
ret
or
cs
jnp
mov
mov
aam
ret
or
add
adc
fldl
pop
pop
add
fadd
roll
add
dec
xorl
enter
sarb
sbb
sbb
xchg
cwtl
fisttpll
ret
movsb
cltd
and
jbe
jae
clc
ja
js
les
lods
pop
xchg
enter
xor
xor
and
xchg
push
mov
test
adc
pop
ljmp
pop
xor
ljmp
or
mov
cmp
jg
pop
loop
repnz
cmp
aad
daa
mov
ret
gs
adc
ja
and
jmp
mov
push
rorb
dec
and
mov
shlb
into
mov
xchg
sbb
sbb
mov
or
fists
dec
mov
je
add
mov
mov
mov
mov
mov
notb
cmp
push
add
cs
push
jecxz
or
sub
mov
inc
inc
jle
mov
call
jp
jle
jmp
adc
rorl
sahf
add
and
mov
cmpsb
or
push
adc
dec
enter
cmp
mov
out
cmp
je
xor
loopne
into
adc
inc
sbb
pushf
out
dec
jl
rcrb
pop
sbb
sti
push
push
or
popf
shrl
test
push
hlt
mov
aam
repnz
lock
cmp
mov
fcomi
add
mov
sub
in
cmpsl
pop
test
jp
xchg
jmp
push
mov
pop
mov
push
xor
inc
clc
shrb
pop
push
mov
lock
dec
mov
adc
inc
cmp
jne
inc
cmp
add
pop
dec
xor
jmp
mov
loope
inc
inc
in
ret
insb
push
push
adc
pop
add
inc
xchg
inc
inc
jmp
adc
or
pusha
imul
xchg
pop
inc
inc
cmp
cmp
test
add
lock
jns
inc
xor
mov
push
add
push
push
nopl
aam
adc
add
mov
add
push
inc
sahf
push
mov
mov
out
mov
pop
and
lcall
fwait
inc
hlt
cmp
jns
sbbl
mov
fsubrp
movb
jnp
sarl
sub
add
ret
test
fdivp
out
adc
loope
shlb
dec
leave
sbb
or
or
cmp
rolb
cmp
mov
mov
mull
cmc
shl
rol
inc
inc
cmp
and
dec
aam
lret
jne
sbb
pop
jmp
idivl
jmp
add
push
or
testl
out
pop
and
push
int3
in
movl
mov
cmp
pushw
and
seta
push
add
inc
xor
adc
subb
out
testb
pop
loopne
sbb
mov
push
mov
stos
hlt
pushf
pop
push
fdivl
lret
and
sbb
xor
leave
push
push
jne
add
adc
or
es
mov
test
daa
lds
sar
shrb
sbb
or
pop
adcl
add
outsb
pusha
mov
js
cmpb
cmp
sbb
sahf
movsl
fists
ja
push
into
cli
push
xor
sub
lahf
jge
fmuls
or
movl
mov
inc
ds
imul
mov
mov
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
daa
sub
lret
ret
pop
push
or
mov
push
or
or
add
cmp
mov
enter
push
cmp
loope
or
les
push
adcb
pop
icebp
ljmp
sub
mov
sti
add
jne
jnp
nop
ret
push
outsb
mov
cmpl
std
cld
jne
mov
push
cmp
jne
es
imul
in
fisubs
or
hlt
jb
jmp
stc
jns
cmp
inc
incl
dec
jmp
adc
jmp
cmp
jmp
cld
cld
ret
sahf
popf
fucomi
pmaxub
pop
sub
pop
call
dec
xchg
pop
movb
repnz
rorb
add
jb
mov
adc
pop
ljmp
das
daa
insb
inc
or
testb
imul
sub
daa
loop
scas
or
movsb
repz
inc
mov
aad
xchg
add
push
pop
std
or
in
add
or
adc
push
push
add
adc
or
adc
xor
in
or
lea
mov
sbb
stos
add
adc
outsl
cmpl
adc
cmc
cli
outsl
and
cmp
jg
add
mov
mov
dec
sbb
jno
test
sub
loopne
sbb
lock
add
dec
pushf
sub
and
movsl
jp
xchg
jmp
xchg
cltd
out
fcoml
jle
push
jbe
stos
loopne
pop
div
jb
inc
pushf
push
loopne
pop
imul
nop
enter
push
xor
je,pt
lock
subl
sub
pop
adc
push
mov
daa
clc
pop
xchg
xchg
push
mov
cmpsl
cld
xor
cmp
in
adc
dec
or
call
iret
adc
xor
mov
sbb
enter
int
sbb
mov
pop
xlat
gs
outsl
adc
test
mov
sub
mov
fildl
add
push
shlb
mov
push
jp
outsb
neg
sbb
or
jl
or
lods
push
mov
cwtl
test
movsl
out
lea
mov
and
pop
test
ja
pusha
roll
xchg
ljmp
inc
or
push
fucomp
incl
orl
jmp
adc
jne
sub
push
daa
add
add
fistps
add
test
and
cmp
push
insl
dec
mov
or
adc
mov
push
or
fildll
adc
insb
adc
pop
jne
popa
rcr
jl
add
add
lds
push
xchg
ljmp
adc
lret
or
popa
and
dec
movsb
idiv
std
scas
hlt
mov
jmp
test
mov
sub
cmp
cs
push
xor
add
cmp
jae
push
xor
movsb
cmp
sbb
cmpsb
mov
insb
dec
test
push
inc
insb
jne
je
lock
and
inc
pop
cld
imul
add
call
sbb
nop
test
jne
test
jmp
pusha
les
push
xorl
or
or
sub
orb
add
jne
test
pop
adc
into
mov
xor
in
rolb
jmp
inc
xor
pop
pop
aaa
push
push
or
xchg
cmp
jecxz
cmp
jmp
push
mov
es
popa
cmpsl
add
mov
dec
movsb
rolb
sub
pushf
inc
and
mov
loopne
stc
jmp
jo
imul
data16
jge
stos
mov
mov
test
inc
mov
push
pop
call
or
adc
jmp
jno
jbe
lea
dec
push
and
enter
cwtl
mov
iret
data16
pop
dec
push
in
jne
idivb
in
lods
sub
sbb
lods
or
push
adc
adc
inc
pop
rcrb
lods
js
pop
aad
jno
arpl
dec
popf
je
hlt
repz
test
cmp
mov
or
clc
roll
mov
sbb
and
adc
rolb
mov
jmp
push
adc
xor
es
addr16
adc
push
aas
push
repnz
jns
sub
xorl
jne
adc
push
mov
xor
mov
push
push
mov
stos
lock
dec
cmpsb
repnz
int3
mov
icebp
dec
push
jo
add
ja
aaa
les
inc
pop
adc
inc
bound
mov
popa
add
xor
jmp
mov
add
addb
ret
pop
jecxz
cmc
mov
add
push
out
cmp
imul
sbb
ss
jae
fwait
or
scas
sbb
add
xor
pop
or
nop
fsubs
or
lock
inc
aas
adc
fidivs
sub
mov
cmp
cmpps
in
push
add
loopne
je
inc
cmp
jb
in
mov
in
lea
push
adc
push
pop
dec
ss
add
xchg
nop
cmp
lahf
mov
mov
dec
pop
sahf
mov
jl
and
sbb
fwait
stc
adc
add
mov
lock
inc
jge
add
mov
cmp
or
sbb
push
add
add
add
or
xor
push
pop
test
shlb
pop
sub
dec
inc
fldl
add
jecxz
lcall
xchg
call
push
fwait
data16
psubsb
push
jo
lret
popa
sbbl
xchg
and
mov
add
push
and
hlt
add
aad
mov
add
stos
and
push
xor
or
loope
dec
and
sub
mov
inc
xor
stos
add
leave
sub
iret
mov
inc
mov
add
notb
lods
dec
inc
mov
mov
pop
imul
add
je
adc
xlat
rorl
clc
test
rcl
cmpsb
ret
pop
lahf
sbb
in
mov
lds
test
popa
cmp
and
sub
mov
addb
cmp
jns
xchg
push
mov
ficoml
add
pop
data16
push
adc
mov
aad
mov
popf
and
pop
jmp
int3
push
push
pop
clc
add
or
lock
adc
and
call
dec
adc
xchg
das
out
adc
or
in
xor
mov
insl
mov
mov
mov
cld
pop
sarb
and
lock
dec
ret
or
rolb
mov
fiaddl
js
xor
inc
mull
popa
pop
je
push
imul
push
inc
nop
sbb
lret
jae
jnp
test
and
dec
ja
sub
push
mov
mov
js
cmp
mov
pop
add
adc
mov
jg
and
sub
push
cmp
jb
sahf
mov
cmp
je
sbb
ss
jp
mov
imul
cltd
fdivr
addr16
xchg
push
add
push
cmpsb
fdivl
outsb
sub
ret
jmp
popa
pop
mov
mov
leave
out
pop
push
push
mov
lods
sub
pop
adc
mov
iret
shlb
mov
xlat
in
jecxz
movsl
sub
jnp
ret
in
add
pop
pop
dec
sub
fistl
pop
or
xchg
xor
iret
cmp
mov
mov
sub
int
lret
mov
clc
out
push
and
xchg
xchg
sub
add
lods
sbbl
test
pop
fcomps
push
cmp
rclb
cwtl
add
and
adc
pop
mov
out
pop
movb
add
cmp
sub
push
inc
jne
mov
mov
sbb
je
push
jbe
push
adcb
mov
adc
cmp
subb
dec
adc
mov
sbb
lock
outsl
mov
and
leave
stc
push
dec
mov
sub
aam
jge
pop
adc
sbb
aaa
pop
bt
xchg
lret
aaa
clc
rorl
rorl
pusha
pop
mov
or
and
loopne
das
or
pop
push
inc
iret
cli
test
jbe
push
addl
sub
fadds
outsb
or
cmpb
jne
cmpsl
or
xchg
test
mov
into
and
pop
jecxz
sahf
fcoml
lret
mov
and
cmp
gs
loop
fs
test
and
rorl
xlat
pop
jmp
or
enter
pop
repz
in
dec
or
cwtl
dec
testl
pop
jle
shr
sub
xor
mov
add
sub
xchg
or
dec
ret
ret
lea
repz
orl
add
jo
pop
add
iret
enter
add
repz
add
adc
dec
add
jle
dec
stos
jno
je
lcall
flds
add
in
mov
inc
push
xchg
pop
push
pop
iret
movsl
test
or
or
mov
dec
or
and
enter
or
repnz
or
repnz
in
add
or
or
fsubp
add
add
sbb
cwtl
push
push
mov
push
rsqrtps
adc
pusha
adc
sub
adc
nop
xchg
out
repnz
adc
ret
jns
cmpsb
adc
adc
adc
and
cltd
adc
sbbb
push
push
push
cs
enter
xor
push
nop
ja
sbb
lcall
sbb
call
iret
sbb
sbb
test
sbb
sahf
ja
je
pop
sbb
add
jns
dec
jge
sbb
sahf
pusha
push
push
inc
ljmp
nop
out
pop
pop
jne
add
add
sub
cmp
mov
and
jae
add
cmp
xchg
inc
sar
push
and
hlt
dec
inc
add
xor
push
in
jno
repnz
sub
sarb
push
adc
aad
cmp
and
xor
leave
repz
out
add
pushf
add
or
aaa
call
adc
dec
dec
cwtl
jmp
iret
enter
or
test
jmp
jmp
incb
ss
push
in
in
in
cltd
jb
mov
inc
in
sahf
and
enter
jge
mov
out
pop
lock
sbb
nop
addr16
icebp
pslld
repnz
out
std
repz
nop
repz
std
hlt
hlt
in
cmp
hlt
fwait
mov
cmc
cmc
inc
jg
ret
enter
pop
idivl
xchg
inc
enter
clc
clc
sbb
pusha
cmp
adc
inc
cmp
pop
enter
cli
cli
jb
jb
iret
sti
sbb
enter
stos
cld
cld
cld
je
adc
cld
push
setle
jns
decb
fs
jns
adc
or
aad
ret
sub
jbe
imul
push
loop
shll
nop
cmpsb
loope
in
es
jecxz
out
repnz
stos
lods
mov
icebp
inc
inc
or
xchg
mov
and
out
cltd
mov
add
add
pop
and
sti
sbb
pop
jmp
jmp
jne
rcrb
repnz
cli
popf
cli
movsb
test
cli
out
out
xlat
enter
cltd
push
lock
mov
adc
cli
push
cli
cmpsb
jb
pusha
sbb
pop
insb
nop
repz
sar
mov
stc
cmp
mov
stc
fstpl
xor
negl
fwait
push
jno
sbb
clc
add
stc
sbb
cmp
lret
sti
sti
nop
aaa
jb
cltd
mov
jbe
push
orl
xorb
cmp
and
or
sub
mov
fnstsw
jne
icebp
mul
pop
shl
bound
and
test
mov
out
out
les
out
pop
repnz
mull
mull
sti
imul
ljmp
mul
inc
repnz
notb
mov
insb
out
in
pop
xchg
out
jno
notb
leave
and
in
rcll
cs
repnz
inc
pop
lret
mov
pop
xchg
cmc
and
pop
jns
lcall
jns
pop
out
fwait
and
jns
inc
clc
clc
jecxz
repnz
jmp
popa
cmp
xchg
cmpsb
cli
cli
jno
and
jne
adc
xchg
pop
push
hlt
sbb
das
pushw
data16
mov
cmpsl
xlat
hlt
idivl
jo
sti
cs
add
pop
lcall
loope
loope
xor
loope
repz
inc
repnz
push
cmp
mov
imul
dec
in
inc
repz
adc
andl
jb
pusha
leave
push
sbb
xchg
cmpsb
jmp
mov
mov
xchg
repnz
mov
jo
sbb
out
in
cmc
inc
xlat
mov
and
add
cmpl
mov
loope
sbb
rclb
js
divb
inc
repnz
pop
repnz
lea
cmc
cmc
jb
cmp
cmc
add
jecxz
dec
dec
pop
pop
ffree
lock
pop
add
popf
lock
stc
and
mov
and
lock
pop
xlat
and
js
and
and
test
ss
movsb
pop
imul
mov
sub
out
ret
ljmp
push
add
iret
enter
add
add
jp
or
adcb
adc
adc
or
or
dec
add
sahf
adc
xchg
mov
dec
out
subl
or
and
idivb
xchg
xchg
inc
inc
add
mov
cmpsl
stc
lcall
and
stc
xor
je
xchg
dec
stc
aas
out
lcall
push
fldcw
push
ja
fstpt
mov
cmp
mov
dec
dec
sub
pop
mov
cmp
dec
popa
and
incl
or
inc
dec
sub
xlat
sahf
push
mov
mov
mov
add
add
adcl
ret
nop
aam
inc
jp
loopne
sti
sub
xor
inc
cmp
data16
push
loope
hlt
lret
cmp
adc
add
cld
flds
fdivs
mov
js
test
adc
adc
adc
sbb
add
cwtl
push
push
lock
in
into
cs
jge
push
js
inc
fcmovnu
push
sbb
push
jb
or
mov
dec
sarb
es
lea
lea
test
jo
mov
push
cmp
fmuls
mov
testb
repz
add
pop
push
sahf
mov
mov
addl
sub
inc
sub
mov
scas
pushl
imul
add
mov
push
xorl
lods
mov
fdivrs
jle
add
repnz
neg
or
sbb
int3
cld
or
mov
add
pop
testb
cld
add
or
gs
and
je
rep
mov
dec
ljmp
mov
sahf
js
lods
mov
xor
and
sbb
add
andl
in
xchg
pop
test
inc
ret
adc
arpl
xor
jle
adc
xchg
sub
cmp
push
cld
add
shlb
sbb
insl
out
adc
xor
add
pop
lcall
sub
leave
popa
cld
inc
inc
inc
inc
inc
es
sbb
dec
cmp
data16
jmp
insb
dec
push
fmul
imul
inc
and
lods
pusha
mov
push
pusha
and
sbb
unpcklps
push
cmp
jns
cmpsb
or
add
sub
push
sti
push
shll
add
fmulp
push
or
inc
inc
pop
cmp
enter
mov
and
add
sbb
push
cmp
and
fistl
inc
mov
and
or
ljmp
iret
sub
cmp
test
fists
mov
jmp
mov
scas
add
xchg
in
int
add
repz
sub
outsl
loopne
rol
xorl
iret
xor
xchg
fnstenv
add
adc
sbb
out
stos
stc
aad
xchg
lret
pop
xor
adc
sarl
add
jp
cmp
sub
mov
sbb
outsb
out
es
sbb
sbb
adc
push
lcall
add
inc
cwtl
ja
jge
dec
push
adc
add
xor
push
into
inc
pushf
in
add
push
call
sub
insb
mov
sbb
inc
xchg
jmp
lret
clc
js
iret
dec
out
or
movb
ret
aad
sub
not
jmp
stos
add
testb
add
adc
mov
sahf
add
mov
add
mov
fimuls
or
popa
jne
add
mov
push
xor
inc
adc
xor
add
mov
orb
incb
xor
dec
jp
repz
notb
mov
push
roll
fsubl
dec
pop
rolb
adc
mov
inc
fistl
pop
and
cmovs
mov
push
jb
xchg
test
adcl
rep
cmpsb
je
shr
mov
cmp
pop
inc
jb,pn
rolb
repnz
int
xor
test
or
ljmp
call
xlat
out
xchg
and
scas
adc
mov
movsb
mov
jl
add
movl
xchg
inc
add
add
imul
push
push
dec
inc
cld
lahf
out
cmp
sub
inc
in
cmp
repz
iret
repz
lock
hlt
clc
clc
cld
pop
mov
insb
add
add
sbb
mov
fldenv
jmp
sub
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
or
pop
lods
jl
adc
rcrb
enter
sub
mov
nop
and
dec
push
jo
add
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
ljmp
mov
push
int3
push
iret
repz
aam
in
hlt
pop
repz
mov
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
push
cmp
lcall
adc
js
sub
cmpl
std
scas
xor
jbe
push
out
push
mov
mov
incl
inc
decl
dec
inc
insl
cld
jne,pn
pop
pop
lods
repnz
test
cld
cmp
cmpl
jcxz
jp
jbe
push
cltd
pop
idiv
scas
push
pusha
or
or
add
inc
ja
test
dec
mov
mov
pop
and
enter
cmp
xor
sub
call
popf
jae
pop
jbe
mov
dec
jo
icebp
dec
lods
jmp
mov
adc
hlt
or
push
or
clc
pop
cmp
mov
mov
cmc
xor
sbb
add
pop
call
or
in
mov
or
dec
dec
je
push
push
pop
and
pusha
or
shrl
subl
fidivrs
insb
adc
inc
mov
xor
pop
jg
cmpsl
pop
decb
push
xchg
out
sarb
aam
cmp
sub
in
das
sbb
add
mov
xchg
jge
add
push
loopne
scas
inc
push
ret
pop
push
push
pop
mov
dec
dec
jae
push
pop
pop
test
xor
adc
pop
imul
inc
popa
movsb
mov
stos
ja
xchg
test
mov
inc
jmp
cmp
test
fsubl
ja
insl
or
aas
cld
addb
jge
push
push
cltd
pop
idiv
xchg
or
ret
lods
out
ret
insb
push
xchg
inc
out
cmp
dec
bound
outsb
fwait
hlt
jmp
or
stos
test
mov
mov
jns
imul
fs
add
dec
loopne
adc
xchg
dec
inc
sti
fs
jmp
jl
mov
sbb
mov
adc
or
loope
adc
sub
sbb
inc
arpl
inc
jb
jae
adc
cs
add
sbb
pop
and
lods
add
dec
adc
cmp
popa
xlat
cltd
jmp
incl
pop
dec
add
loop
sti
cmp
pop
sub
cmp
rorb
jmp
dec
in
clc
or
or
mov
mov
and
pop
xchg
push
cmp
mov
jge
pop
je
sbb
jno
out
cmp
jle
test
dec
fbstp
sub
mov
das
inc
ja
jo
mov
je
dec
mov
fdivl
mov
mov
fdivl
mov
or
lretw
sahf
inc
sub
bound
lcall
pop
popl
daa
xchg
or
and
push
icebp
jle
xchg
push
or
sbb
inc
inc
out
dec
inc
dec
cmp
pop
stc
pop
push
add
mov
jg
xchg
inc
lds
push
pushf
and
mov
ljmp
flds
or
je
mov
add
push
push
push
movsb
xchg
lea
mov
insl
xchg
pusha
jge
loop
or
ret
cmp
add
scas
add
je
loopne
adc
out
fdivp
adc
or
out
call
add
mov
cmp
mov
jle
call
call
lcall
xchg
rorb
cmp
imul
sub
push
push
mov
rolb
mov
adc
ljmp
mov
mov
add
test
jg
sbb
sub
gs
jbe
in
pop
mov
sbb
fstps
cld
pop
clc
mov
inc
inc
cmp
je
xchg
movsl
jmp
fs
orb
lret
daa
adc
add
rolb
imul
or
dec
popa
pusha
sbb
xchg
push
pop
sbb
mov
pushf
sub
mov
push
push
mov
incl
fdivr
push
push
mov
jo
push
push
inc
sbb
icebp
or
push
inc
ret
pop
sbb
fisubs
or
bound
inc
add
subb
outsb
or
xchg
dec
push
or
call
push
jecxz
add
les
push
or
ss
lods
mov
addr16
test
dec
sarl
adc
test
xchg
icebp
rorl
cmp
xchg
mov
inc
rol
andl
mov
add
jne
mov
andl
shlb
pop
xor
mov
int
roll
add
push
adc
sbb
frstor
mov
subb
mov
daa
iret
add
inc
sbb
mov
adc
daa
insb
jo
fildl
fcoms
enter
iret
add
jo
into
push
shll
lea
arpl
jne
jmp
pop
stc
shlb
or
push
test
sbb
das
dec
jmp
dec
clc
xor
cmp
mov
jae
leave
dec
add
mov
and
push
sbb
in
add
loopne
sub
aad
jns
push
in
cmp
push
out
mov
stc
gs
dec
movups
and
sbb
mov
adc
hlt
ljmp
lahf
jge
aam
lock
bound
and
ljmp
cmp
shlb
test
push
xchg
mov
stos
lea
cmpb
and
inc
push
jmp
cmp
add
ja
or
inc
inc
repz
dec
sahf
lcall
push
xor
fisttpl
ja
or
jecxz
jge
cltd
jmp
dec
mov
out
adc
lods
mov
xor
and
out
xor
ja
inc
or
aas
pop
xor
loopne
xchg
add
pop
add
adc
mov
enter
jne
add
add
add
push
adc
in
jge
das
fldz
push
xor
adc
stc
inc
sub
cmp
inc
mov
repnz
ja
movsl
dec
push
pop
mov
popa
adc
aam
mov
sbb
xchg
mov
inc
cltd
add
cmp
xor
add
out
stc
and
cs
outsb
roll
lock
mov
adc
gs
cld
jmp
pop
arpl
xchg
push
jno
sub
push
inc
mov
push
call
add
icebp
inc
addr16
std
mov
pop
lcall
inc
dec
adc
fwait
lods
and
add
or
stc
repnz
sbb
in
xor
dec
sub
in
js
add
inc
inc
sub
mov
add
loop
outsb
jbe
xchg
outsl
inc
push
js
adc
sarb
std
cmp
jge
and
sbb
push
push
push
adc
andl
fmull
mov
mov
bound
shll
call
cmp
and
ljmp
gs
add
insl
clc
xchg
xor
divl
nop
push
popf
sahf
enter
mov
or
rorb
int
in
cmp
int
inc
call
push
pushf
enter
push
mov
inc
out
cmp
mov
mov
shll
xchg
adc
dec
lcall
std
data16
scas
xor
mov
and
insb
jmp
jmp
loope
push
aas
sbb
adc
sbb
gs
ljmp
push
cwtl
sbb
aad
push
cmp
outsl
sbb
cld
arpl
outsl
movsl
loopne
imul
cmp
add
fsubrp
sub
sub
mov
and
ljmp
clc
xchg
in
jge
cmp
fiadds
rcrb
adc
jno
aam
lret
mov
sbb
outsl
stos
adc
ja
jbe
addl
js
or
ds
ret
xchg
lahf
sbb
sbb
lods
test
insb
pop
push
dec
xchg
jle
repnz
inc
mov
cmpb
out
jne
pop
dec
sbb
mov
icebp
push
add
cmp
imul
jmp
lea
xchg
push
rcrl
call
shl
hlt
sub
cmp
inc
sbb
inc
addr16
xor
push
mov
test
xchg
pop
pusha
sbb
in
pushf
stos
sbb
ds
push
incl
mov
fs
cmpsl
aam
pop
xor
mov
adc
inc
fs
pop
adc
gs
and
mov
pop
add
aas
addl
cli
xor
pop
aaa
push
sbb
mov
push
insb
push
lea
or
loopne
cld
adc
notb
leave
and
xchg
fucomi
repnz
mov
sbb
imul
add
cmpsl
call
inc
sub
sti
jnp
cmc
pop
ja
je
add
iret
xor
push
dec
or
stos
xor
testb
shr
mov
xor
mov
sti
sbb
stos
sbbb
add
dec
xchg
cmp
jbe
xchg
pop
fimuls
xlat
add
add
lock
adc
mov
jle
test
dec
adc
and
cmpl
mov
aam
repnz
aas
pusha
jne
cmpl
and
add
pop
movsb
mov
das
ds
outsl
out
or
pop
or
adcl
mov
sarl
orb
and
test
or
add
and
add
xor
push
jo
pop
das
fsubrp
adc
je
push
ret
sub
pop
pop
fstps
xor
adc
sub
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
je
lcall
mov
xchg
jbe
dec
pop
test
push
movl
cmp
xor
mov
dec
sarb
sbb
add
jp
mov
adc
insl
pusha
mov
cmp
adc
ja
cld
sub
jmp
push
push
out
cmp
sbb
jo
imul
sub
je
pop
push
xchg
movsb
popa
or
dec
ficoml
inc
addr16
or
xor
xchg
ja
or
push
cmp
fadds
jg
and
xor
jle
shl
or
add
jle
pusha
mov
mov
sub
mov
adc
mov
inc
dec
jne
lea
cld
mov
filds
xchg
addl
cmp
call
nop
ret
hlt
sarb
and
sti
mov
cmpb
xchg
mov
movb
or
popf
out
xor
and
ss
ja
sub
nop
out
adcb
aas
push
push
loop
xchg
jae
popa
aam
fdivr
mov
push
repnz
test
mov
fisubrs
std
push
cmp
push
push
in
sbb
enter
cmpb
into
icebp
pop
add
sbb
imulb
xchg
fucomi
adc
je
and
sbb
push
into
repnz
aad
jmp
mov
arpl
lea
mov
mov
and
test
cmp
stos
push
and
sbb
lret
add
jmp
cmp
lds
ljmp
add
ret
repnz
repnz
and
addr16
inc
jo
jg
or
push
add
push
lock
adc
dec
mov
mov
cmp
xor
cmp
push
lret
frstor
loope
or
loope
jnp
insb
push
or
mov
pop
jmp
mov
mov
pop
pop
or
and
enter
cli
mov
cmpsb
push
cmp
inc
jmp
inc
in
xor
mov
inc
std
jne
lock
sub
cmpsl
test
cmp
les
xor
mov
scas
popa
xor
sub
sub
xchg
push
divps
sbb
mov
mov
mov
pop
movq
cmp
cmp
out
into
std
fidivl
push
jmp
mov
xchg
int
call
and
xchg
clc
aad
xor
inc
sbb
and
std
push
dec
dec
rclb
push
call
dec
cltd
dec
popa
in
lea
mov
mov
dec
adc
ret
loopne
inc
pop
leave
inc
and
or
lea
pop
jo
sub
shlb
jmp
loopne
adcb
cmp
lcall
jbe
rolb
jne
outsb
cld
std
dec
rolb
add
jb
mov
sbb
sub
or
inc
or
adc
data16
std
decl
xor
inc
dec
jne
mov
inc
icebp
ds
sub
adc
add
nop
mov
hlt
xor
inc
daa
test
loopne
mov
inc
dec
jne
adc
movsb
mov
or
gs
jnp
ss
jmp
cmp
sbb
in
ss
cmpsl
or
mov
adc
add
and
jae
pop
push
loop
adcl
mov
mov
sub
dec
sbb
call
jns
movsb
faddl
jo
xor
mov
lds
adc
dec
or
inc
push
ljmp
pop
or
jbe
call
cli
pop
test
sub
daa
sbb
xor
or
push
repnz
and
fs
mov
mov
mov
test
add
out
ja
loopne
or
pop
sub
jmp
xor
jbe
or
mov
xor
add
out
add
ret
ss
push
pop
sbb
arpl
xchg
push
pop
ja
jno
es
fs
nop
jo
and
aam
add
add
jge
fmul
leave
cmpl
insl
outsl
push
and
pop
movl
mov
mov
or
outsl
cmp
es
pop
xchg
add
pushf
pop
sbb
pop
adc
mov
adc
sbb
nop
inc
mov
fcomps
xchg
lret
lahf
jno
inc
cltd
rcl
sahf
inc
inc
sbb
sub
lcall
and
rcrb
cwtl
shlb
inc
pop
cmp
mov
push
cwtl
mov
jne
out
inc
pushl
mov
lea
or
push
cmpl
push
sbb
fs
pop
mov
cld
xchg
inc
add
adc
bound
out
decl
jne
sbb
inc
xor
push
push
xchg
scas
add
push
sbb
mov
lea
and
mov
aaa
cmpl
andl
push
pop
ret
jo
testl
jbe
xor
or
lods
xor
and
xor
sahf
xchg
jo
sub
data16
fsub
mov
mov
push
mov
sbb
pop
jbe
push
in
push
xchg
fdiv
adc
mov
dec
pop
sbb
jo
loope
dec
nop
or
inc
ja
loopne
outsb
jmp
push
sub
jmp
push
ficoms
xchg
add
jno
inc
add
in
jnp
stos
sti
sbb
mov
push
cmp
push
pop
loopne
rol
add
daa
mov
mov
push
push
jne
mov
pop
pop
mov
push
xorb
out
mov
jb
or
cmc
cld
xchg
mov
loopne,pn
dec
jle
cmp
call
pop
fisubl
cwtl
cmp
inc
fsub
cmp
sub
xor
or
mov
push
fsubrs
sub
sub
aam
pop
adcb
cs
inc
pop
pop
rcrb
xchg
pusha
sbbb
mov
inc
xchg
lret
insb
push
xor
push
jo
pop
inc
push
push
inc
mov
and
pop
pop
or
push
imul
cmpsb
insb
push
mov
jae
bound
shlb
stos
fnstcw
js
sbb
outsl
mov
add
inc
sub
insb
inc
jg
pop
inc
ret
dec
push
test
xchg
xor
push
push
movsb
pushf
push
xchg
lds
xchg
or
in
dec
add
xchg
sarb
or
xor
rol
dec
outsl
xchg
shrl
push
iret
ss
imul
jne
test
test
clc
inc
and
cmp
xor
add
nop
add
mov
nop
dec
pop
cmp
pop
sub
jle
lret
rorl
sub
dec
lds
popa
std
cmc
imul
cwtl
clc
gs
shll
test
jnp
mov
insl
insl
mov
cmpsl
mov
jge
mov
sbb
inc
cmp
jbe
jae
popf
ljmp
in
jle
lods
cwtl
movsb
test
cmpl
int
leave
adcl
mov
and
daa
test
mov
jno
jns
fwait
cmpsb
jp
dec
ja
mov
add
mov
aaa
mov
xchg
imul
pop
pushf
cwtl
inc
nop
lret
pushf
das
cs
loopne
push
loope
in
dec
jnp
push
xchg
mov
mov
je
inc
add
das
nop
sbb
mov
aaa
jmp
add
mov
cmp
roll
das
mov
sub
movsl
popf
jbe
sbb
or
fsubl
gs
fcomps
int3
in
in
data16
popf
enter
icebp
out
movsl
shrb
test
nop
jo
pop
add
shll
enter
dec
cld
adc
jno
aam
sub
aam
addb
jne
push
or
jno
inc
mov
xchg
inc
mov
stos
xchg
mov
pop
cmp
shlb
test
inc
fdivr
loopne
shrb
das
pusha
loop
aas
push
mov
add
add
insb
or
icebp
aas
adc
or
sub
incl
fmuls
js
pop
sub
nop
adc
cmp
xor
or
adcb
or
andl
xchg
or
push
add
iret
sarl
lock
or
and
jmp
orl
rolb
inc
les
or
sbbb
mov
jns
imull
je
jl
test
pushf
movsb
mov
pop
jns
xchg
push
call
cld
sbbb
cltd
fsts
adc
xor
sbbb
sbb
jp
cs
push
ret
pop
xchg
outsl
es
push
cmp
js
mov
movl
sbbb
dec
sarl
jne
in
dec
inc
xor
mov
dec
cmp
jge
or
mov
or
mov
mov
rcrb
rcrl
pop
add
out
aam
and
adc
and
adc
mov
add
add
inc
or
and
or
fbld
idivl
aas
xchg
adc
adc
and
and
mov
daa
dec
jmp
inc
enter
and
pushf
rol
push
enter
popa
testl
je
loopne
popf
in
dec
dec
adc
imul
jl
xchg
dec
or
push
and
addl
imul
sbb
fnsave
push
lods
xor
and
add
add
jne
or
push
adc
adc
add
inc
jbe
jno
sub
push
bound
xor
dec
push
cmp
or
ss
inc
push
or
push
mov
pop
outsb
cmp
mov
adc
out
sub
and
outsl
push
loope
xor
inc
out
aam
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
inc
or
lock
movl
cmp
mul
rcrl
push
mov
insb
es
and
jp
pusha
in
dec
add
inc
mov
ja
and
xor
test
shl
mov
setbe
les
cld
and
and
inc
sbb
xor
add
mov
or
cwtl
lock
adc
or
mov
lea
inc
mov
into
mov
lea
inc
cmp
mov
sub
ficompl
pop
stos
test
dec
js
int
ret
mov
xchg
lret
rclb
loope
es
push
call
dec
hlt
inc
incl
inc
dec
fcmovbe
and
dec
orl
mull
test
or
push
add
jae
jbe
xchg
mov
pop
test
add
popa
sbb
or
dec
or
sub
loope
and
push
xor
push
sub
mov
test
lock
dec
lea
xchg
xlat
xor
mov
mov
mov
out
jbe
push
inc
repnz
aas
sub
fucom
and
mov
xor
inc
ret
sbb
jns
cmp
xor
jbe
test
dec
lock
fwait
mov
ds
mov
dec
dec
push
inc
xor
scas
add
dec
ret
shr
and
sbbl
or
push
sub
pop
push
loopne
movsl
lock
add
add
inc
pusha
jp
mov
mov
or
and
aas
xchg
and
and
xorb
out
sbb
and
push
push
push
fstl
sbb
push
add
jmp
and
mov
jo
xorb
xchg
sbb
fldt
dec
push
add
push
decl
inc
aaa
sbb
insl
mov
cmp
cmpl
adcb
out
adc
pop
sbb
insl
fistpll
fnstenv
jg
jne
repnz
jmp
sbb
jb
jle
aas
loopne
divl
jns
outsl
cmpl
pop
dec
mov
pop
mov
cmpsb
mov
int3
je
mov
movb
pop
fstps
rorb
popf
in
mov
in
hlt
fadd
fdivrs
fdivr
je
cmp
loope
mov
pop
push
cmpsl
cmp
fnstsw
xor
push
lods
jae
test
leave
mov
stc
lods
add
test
in
or
ret
xchg
xlat
adc
cmpsl
add
or
pop
inc
dec
pop
push
xchg
mov
rorb
lea
jle
ja
mov
movsbl
pop
icebp
pusha
loopne
enter
push
lock
js
push
sar
pop
mov
mov
xchg
inc
pop
push
iret
mov
lea
pop
mov
fdivr
cmp
and
sub
dec
jmp
add
mov
je
sbb
jne
push
lret
pop
or
mov
add
ds
cli
dec
and
mov
cmp
aam
aas
clc
loopne
mov
mov
shrb
dec
inc
lret
or
ja
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
cmp
push
push
cmpl
insb
je
lock
mov
subb
xlat
ds
loopne
sub
pop
mov
and
mov
or
xor
mov
xor
repnz
dec
xor
movsl
movw
or
xchg
out
jns
imul
imul
pop
lahf
sub
mov
push
and
xchg
push
dec
dec
sbb
pop
and
pop
sbb
push
jns
sbb
jle
inc
je
pop
push
or
ds
mov
ret
add
hlt
sqrtps
dec
fdivr
test
xchg
dec
pop
loop
and
out
in
and
jae
loopne
test
std
xchg
cli
outsb
cmpsl
popf
jle
aaa
jne
das
mov
xor
cmp
testb
pop
loopne
sub
xchg
or
test
mov
es
sub
and
lea
jnp
adcb
push
ret
subl
shlb
xchg
xor
push
addl
negl
mov
rol
hlt
dec
lret
or
push
push
ss
cmp
mov
xor
mov
mov
mov
movsl
iret
adc
pushl
adc
xchg
aas
add
pcmpgtb
imul
xchg
adc
mov
add
cmp
xor
add
or
je
xchg
cmp
jae
jns,pn
push
sbb
sub
mov
jo
add
add
call
adc
jmp
push
outsb
je
test
xchg
pop
xor
jne
popa
aas
add
fisttps
xor
shrb
ret
mov
stos
mov
add
movsb
or
sub
test
sbb
or
adcb
cmc
push
mov
adcl
jne
cmc
sti
movsb
std
mov
jne
mov
jmp
cmp
jle
iret
icebp
jmp
xor
pop
cmpsl
push
ret
xlat
mov
push
int3
push
xorl
out
mov
sub
mov
out
push
shll
call
cld
adc
ss
ret
add
jbe
sub
roll
js
mov
pop
enter
lea
stc
inc
dec
fcmove
lcall
mov
shrl
sbb
dec
jae
pop
enter
sub
test
adcl
movsl
push
pop
fs
outsb
mov
gs
jae
addr16
decb
mov
dec
inc
daa
add
or
push
shl
mov
xor
sbb
push
adcl
dec
in
push
lret
push
out
mov
test
add
xor
je
adc
mov
mov
or
dec
clc
popa
int3
je
cltd
nop
rorb
stos
or
sub
jl
mov
xor
jae
adc
mov
jecxz
nop
pop
fimull
mov
or
sbb
dec
test
pop
mov
or
jne
and
lea
outsl
sbb
sbb
dec
std
jo
mov
inc
je
mov
cltd
push
jmp
decb
popf
ret
insb
add
cmp
push
nop
xchg
clc
popf
loop
xor
add
mov
dec
jmp
pop
xchg
sub
add
movb
stos
aas
or
sarb
pop
jmp
cmp
push
sub
mov
movb
inc
jmp
push
jmp
mov
cld
and
or
rolb
inc
inc
int3
jle
and
clc
roll
je
gs
or
int
sub
mov
cld
jp
sub
sub
push
test
mov
and
loop
mov
fisubrs
popf
fcoml
or
xchg
cmp
shl
push
jp
cmp
sbb
fdivrl
sbbb
lea
or
xor
push
jbe
dec
ret
sub
push
fdivs
add
cmp
call
stos
or
nop
popa
mov
movsl
loopne
sub
pushf
test
imull
mov
jg
loope
jecxz
lea
stos
cmpsl
les
cwtl
sti
push
and
and
in
testl
ljmp
jle
adc
mov
mov
in
sub
movsb
cmp
jp
mov
lret
sub
xor
pushf
add
mov
imul
mov
imul
xchg
xchg
and
or
inc
lods
clc
dec
mov
mov
mov
mov
push
mov
dec
push
lea
cmc
pop
hlt
cmp
push
inc
adc
inc
sbb
iret
dec
or
cmpb
test
and
lcall
mov
cmp
movsl
or
cmp
aaa
add
adc
push
rcll
jecxz
jbe
insb
js
inc
jl
push
pop
data16
scas
inc
ret
push
jne
push
aas
xor
cwtl
out
mov
out
xor
pop
add
dec
dec
popf
push
cmpsb
lock
dec
jge
sub
cmpsb
movsbl
popa
cmp
ss
add
outsb
push
xor
inc
clc
lods
add
xchg
inc
cmp
ds
push
fstl
loope
sbb
ficomps
push
xchg
sbb
lea
inc
inc
imul
ret
jo
jns
push
sbb
cmp
cmp
lea
movsl
mov
xchg
test
mov
or
add
mov
or
adc
enter
pop
mov
cmpsl
sub
jb
inc
and
nop
rclb
xchg
lret
sbb
adc
loopne
sub
cld
shr
mov
imul
rorl
inc
fistpl
adc
xor
sbb
mov
mov
mov
mov
adc
mov
clc
push
adc
mov
cli
add
cmp
jbe
push
pop
pusha
clc
in
sbb
cmp
jne
rolb
mov
shr
jmp
lcall
pop
mov
scas
jp
or
sbb
lea
xor
add
push
pop
add
roll
pop
add
add
pop
xor
lahf
imul
data16
lods
xor
or
pop
clc
and
mov
push
shlb
and
sti
add
outsl
nop
pusha
xor
dec
pop
cmp
sti
mov
pusha
fcomp
mov
imul
push
jo
std
cmp
je
adc
jno
dec
cmp
shr
not
and
pop
push
addb
and
xor
cmp
push
dec
loopne
mov
xor
xor
pop
dec
add
mov
push
or
jmp
pop
dec
xchg
jge
rorl
mov
int3
jnp
cmp
dec
or
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
adc
pop
sbb
xor
pop
lret
call
testl
dec
adc
push
mov
imul
int
add
cld
or
repz
and
stos
pusha
mov
cmp
dec
or
jge
jp
push
call
aas
gs
push
or
xchg
andl
add
decb
adc
inc
inc
mov
add
and
pushl
push
push
mov
or
adc
int
mov
sub
adc
sti
lea
sbb
jl
push
cmp
mov
adc
mov
jbe
insb
das
mov
fdivrp
mov
mov
lock
data16
add
inc
daa
add
xor
jl
jmp
add
mul
inc
jecxz
pop
push
out
and
push
adc
push
and
push
jae
cwtl
pop
int3
movsb
adc
push
fucomi
fwait
orl
jo
enter
vmovaps
push
mov
add
adc
mov
je
jl
sbb
rolb
push
mov
imul
inc
clc
pop
and
int3
push
pop
add
out
pop
lock
hlt
or
add
in
sbb
ljmp
scas
int
mov
imul
inc
decl
or
sub
shr
lret
dec
clc
incl
rolb
adc
or
adc
fstpl
push
out
xchg
inc
cld
lock
call
jne
add
je
clc
add
dec
scas
inc
addb
loope
loopne
sub
fs
inc
mov
inc
fbld
sahf
pop
mov
mov
lock
mov
dec
inc
jne
or
lds
not
and
or
les
xchg
popa
sahf
movups
jne
repz
mov
pop
shr
mov
dec
cld
mov
in
xor
cmp
movsb
mov
and
pusha
sbb
mov
cmp
ret
int3
inc
xor
je
fldcw
cmp
stos
lret
orb
stc
add
mov
add
pop
fcomps
cmp
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
inc
inc
jae
dec
or
push
jns
fs
pop
sub
add
xchg
pushl
stos
subb
add
fidivrs
imul
hlt
lea
xor
pop
jg
or
xor
shll
dec
pop
pop
push
imul
or
adc
js
je
dec
data16
and
js
mov
imul
mov
insb
xor
out
inc
and
int
sub
inc
and
clc
jl
add
or
mov
imul
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
rcll
push
cmpb
sub
xchg
cmp
xor
cmp
repz
mov
test
pop
xchg
push
mov
ss
fbstp
jo
jmp
ja
dec
ficoms
add
loope
push
mov
or
dec
lea
mov
jo
ret
xchg
inc
jbe
or
ret
lods
push
cmp
lret
push
lods
decb
into
mov
in
cmp
or
push
xor
jns
dec
mov
or
add
adc
scas
psubsb
ret
lods
push
test
lock
cmp
push
push
push
sbb
adc
jge
mov
out
adc
aas
inc
adc
in
or
scas
pusha
xor
push
je
fldcw
push
nop
cmp
and
decb
xlat
jne
das
xor
or
fdivs
push
jne
mov
mov
jne
jmp
repnz
mov
jae
xor
aaa
pop
push
dec
mov
lock
mov
into
imul
cmp
dec
jle
sbbb
mov
pop
mov
je
mov
sub
jle
cmp
bnd
or
mov
dec
pop
iret
jne
shlb
addl
jno
mov
inc
dec
push
xchg
xor
jmp
fidivl
dec
mov
and
jne
mov
repz
cld
test
and
leave
inc
test
inc
push
mov
adc
pushf
mov
sub
icebp
sbb
fdivrl
xor
popf
lcall
pop
xchg
adc
iret
push
call
cmp
aam
test
dec
lret
push
decb
jne
in
hlt
andb
sub
dec
cltd
sub
mov
loopne
mull
or
and
mov
jns
jp
sbb
pop
mov
push
or
das
pop
sbb
sub
jge
ds
add
adc
cmc
or
or
dec
cld
or
sub
push
in
jb
push
push
mov
or
pop
or
rcrb
fimull
xor
adc
sbb
sbb
cmc
adc
ds
imul
sub
sbb
js
imul
aam
loopne
or
or
or
sahf
add
add
imul
xor
jbe
add
fs
and
sub
cmp
pop
xchg
push
mov
push
cwtl
and
mov
pop
mov
adc
xchg
nop
and
and
outsl
xor
movb
sti
gs
es
add
adc
push
call
in
orl
cmp
sub
add
mov
sbb
sahf
jne
jne
dec
movsb
test
pop
test
popa
imul
ss
mov
fcoms
icebp
roll
or
adc
bound
add
mov
inc
add
push
mov
in
jo
dec
lds
rcrb
fisubrl
dec
fdivs
xor
lahf
pushl
push
push
adc
xlat
lock
push
divl
pop
imul
in
push
pop
mov
std
pop
loope
mov
adc
movsl
mov
fisubl
mov
loop
mov
push
fadd
push
inc
push
sbbl
pop
jnp
mov
jge
mov
repnz
xchg
mov
dec
or
and
jo
adc
insb
int3
push
mov
sbb
iret
bound
lea
adc
fidivs
dec
gs
mov
call
movsb
and
daa
adc
pop
xor
aas
rol
pop
mov
jb
mov
dec
push
inc
adc
jge
jmp
movzwl
pop
cs
sub
in
int3
test
pop
stc
or
in
je
cmp
xorl
sbb
mov
mov
adc
xor
fmuls
addb
lcall
mov
addr16
add
xchg
and
movsb
mov
sub
mov
andl
jo
add
xchg
or
mov
pusha
cltd
add
sbb
js
fmuls
xchg
arpl
mov
pop
sbb
add
leave
sbb
insl
enter
and
pushf
ficomps
mov
or
icebp
sbb
and
push
inc
pushf
fisttps
jne
jp
shr
xor
mov
dec
jb
into
nopl
jg
add
sbb
fidivrs
xor
xor
adc
cmp
or
push
lcall
les
sub
inc
pop
std
lcall
ret
sarb
ret
in
shll
lea
jb
cltd
lret
cmp
add
adc
push
lock
add
dec
movb
mov
sti
call
push
mov
leave
enter
test
sub
mov
inc
sahf
mov
fmulp
xor
lret
and
xadd
dec
push
mov
call
pushf
pusha
repz
nop
inc
push
mov
mov
frndint
mov
mov
popf
push
stc
mov
std
push
test
dec
sub
call
mov
push
inc
cs
mov
repz
xchg
sahf
push
lods
in
dec
gs
shrb
xchg
fwait
push
call
call
dec
lods
add
xor
and
jb
fisubs
xor
loop
in
push
push
add
repz
inc
cs
in
in
sbb
test
mov
cmp
cmp
mov
clc
jmp
xchg
loop
pop
xor
xor
pop
adcl
add
push
test
repz
cmpsb
push
jle
and
sahf
xor
ss
sbb
loope
jl
jmp
daa
cmp
push
sub
jge
pop
lea
int
add
or
lret
mov
pop
xchg
test
iret
clc
xchg
ret
adc
xchg
or
mov
and
mov
fwait
rcll
je
inc
xor
into
add
or
xchg
or
fwait
loopne
xor
and
test
pop
cmp
inc
out
sarl
push
mov
and
data16
sahf
add
les
jnp
adc
sbb
push
ficoms
scas
shr
lds
gs
cmp
mov
add
add
push
cmp
ret
adc
mov
inc
push
sub
add
cmp
inc
add
xor
movsb
icebp
bound
mov
pop
lock
xchg
add
xchg
imul
je
add
push
fsubrl
add
movb
jnp
lds
add
add
add
mov
or
or
xor
and
adc
mov
cli
orb
imul
cmp
aaa
push
shrb
adc
adc
mov
inc
mov
dec
cmp
rorb
adc
xor
and
fcmove
or
fwait
add
aam
lret
not
and
sub
out
das
cmp
sub
bound
pop
sahf
cmpsb
imul
imul
dec
pushf
inc
jb
dec
popa
xor
aam
mov
mov
insb
xchg
je
pop
sbb
add
pop
test
in
rcrl
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
insb
inc
fmul
jecxz
cmp
fcomp
pop
loopne
fldl
or
fldl
or
push
sbb
aad
nop
mull
push
lcall
push
leave
pop
jmp
insl
mov
cltd
jo
push
dec
lods
mov
xor
dec
xlat
das
dec
mov
lret
xchg
dec
je
add
pop
and
and
sbb
sti
push
jns
inc
lcall
jmp
cmp
mov
sbb
add
fstps
popa
std
sub
xchg
lock
add
sbb
inc
add
jno
mov
lret
xchg
adc
adc
fmulp
stos
test
sahf
dec
addl
adc
lock
clc
lock
xchg
push
push
and
push
xchg
jne
das
and
inc
lock
mov
cmp
push
push
pop
jns
iret
rep
cli
mov
in
out
out
fistl
xchg
mov
add
and
ret
fnstcw
lds
adc
or
push
sub
jo
fs
xor
lret
xchg
lock
or
jne
ds
dec
sub
testb
push
jle
lahf
mov
pop
push
inc
or
mov
push
push
xchg
jmp
add
add
popf
fnstenv
frstor
popa
push
jmp
test
sub
clc
push
fmull
div
jae
inc
jp
cmp
test
jne
push
push
sbbl
mulb
lea
xor
pop
loop
adc
cmpl
adc
outsb
sbb
xor
pop
push
push
ret
mov
mov
adc
jecxz
xor
cmp
fisubs
adc
adc
pop
mov
cmp
xchg
xchg
mov
jecxz
dec
aam
or
rorb
lods
in
cmp
test
jb
call
lods
add
xor
inc
lods
std
mov
testb
pop
loope
cld
push
sarl
pop
pop
mov
imul
add
incb
dec
add
aam
repnz
jne
dec
sbb
jle
jg
pop
sar
lea
testb
push
aad
orb
cli
or
stc
mov
mov
popf
adc
mov
insb
stos
in
popf
jl
or
add
pop
ja
stos
dec
ss
and
push
cs
and
push
iret
xchg
std
lods
pop
mov
push
mov
pop
mov
leave
rorb
rolb
popa
mov
sub
das
in
movsbl
push
lret
and
push
pop
add
lret
mov
xchg
or
lea
push
daa
cld
mov
cmp
mov
stc
or
lods
and
push
jns
mov
xor
fildl
push
stos
mov
call
or
inc
subl
arpl
movsl
dec
cmp
inc
sub
or
rcrb
adc
mov
outsb
cmp
jne
cmpb
add
out
lods
jne
push
fistpll
inc
xor
rolb
mov
lcall
lds
pushf
cmpsb
rclb
pop
lods
add
xchg
push
mov
add
push
leave
xor
test
lods
sub
mov
jg
mov
movsb
outsl
lea
inc
push
or
or
iret
call
addb
loope
adc
popf
es
xor
xchg
or
adc
leave
jp
inc
cmp
rep
setge
std
mov
ja
inc
imul
sub
sets
dec
lods
mov
lret
add
xor
jno
sarl
add
testl
sub
rorl
mov
push
fcmovbe
jns
daa
jecxz
xlat
loopne
out
add
mov
push
inc
cld
loop
xor
in
std
sub
mov
rcr
mov
pop
mov
loopne
es
push
test
movsb
loop
mov
fildll
je
divl
push
and
dec
add
cmp
adc
jne
std
mov
sti
dec
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
jne
std
aaa
addr16
cltd
push
das
lock
fdivr
mov
adc
ret
out
pop
mov
or
mov
test
xor
dec
pusha
mov
mov
testl
cmp
xchg
and
jns
call
mov
push
mov
dec
mov
jbe
gs
xor
xor
xchg
xor
jnp
std
ffree
or
lea
stc
mov
out
test
lods
xchg
imul
sbb
push
es
dec
cmpl
roll
push
mov
scas
pusha
xchg
ja
inc
movb
cld
mov
adc
out
cli
imul
mov
push
pop
pop
mov
test
sahf
aad
test
cwtl
pop
pushf
adc
dec
xchg
jp
or
xor
inc
push
lods
sbb
and
addr16
dec
cmp
cmp
inc
fs
mov
jb
call
std
shll
sbb
lcall
mov
sbb
std
mov
and
inc
repz
jp
xchg
daa
in
mov
popa
jp
jbe
dec
push
fdivrp
or
xor
dec
ds
data16
push
sbb
sub
test
sub
dec
jmp
dec
cmc
and
xchg
mov
push
sub
lock
xor
cmpsl
mov
sbb
push
int3
stos
cmc
sub
or
sbb
jge
fsubrp
mov
int3
cmp
pop
scas
cmc
or
dec
stc
pop
addr16
dec
test
add
sarb
xlat
ds
repnz
dec
jns
lock
dec
or
inc
cwtl
cmpl
sbb
pop
bound
add
cmp
mov
movsb
adc
iret
inc
jmp
push
inc
sub
mov
cmp
xchg
sbb
cmovge
or
lods
push
jne
fdivr
das
add
loop
push
dec
pop
jno
push
fs
xor
sbb
push
ds
std
std
adc
cwtl
sub
lock
fsubrl
push
mov
xchg
cmp
jmp
and
sahf
popa
call
cld
test
dec
repz
mov
leave
and
or
and
test
mov
mov
lea
fmuls
push
lods
cmp
push
xchg
insb
push
cmp
adc
stc
pop
ja
inc
dec
jo
push
or
push
sbbb
or
push
add
iret
xor
mov
shll
xchg
int3
lock
push
ret
jno
add
push
inc
push
lock
pop
push
lea
pop
add
push
xor
imul
mov
test
cmp
pop
jb
sbb
mov
push
pop
mov
push
bound
inc
xlat
adc
and
xchg
inc
aad
mov
mov
xchg
es
mov
lods
daa
movsl
repz
or
inc
dec
aad
arpl
mov
mov
sub
ljmp
xchg
pop
xchg
push
xor
pushf
inc
repnz
sub
dec
leave
out
in
push
lods
test
enter
mov
enter
test
xchg
nop
in
in
fdivrs
dec
inc
lea
xchg
add
js
arpl
dec
sub
mov
insl
jno
push
jns
fwait
mov
pop
sbb
mov
mov
fs
lret
out
push
cld
mov
cmpsb
nop
and
dec
scas
sbb
insl
pop
pushf
xchg
mov
pop
mov
or
and
leave
xor
pop
push
jecxz
xchg
mov
adc
lret
mov
xchg
push
mov
mov
cmp
mov
mov
sbbb
push
aas
dec
sbb
adc
pop
and
leave
or
cmp
pushf
fs
cs
nop
nop
xchg
sub
pushf
lods
lea
in
lods
lods
or
dec
mov
cmp
mov
mov
je
sbb
shlb
sbb
mov
and
push
add
pop
sarl
mov
sub
daa
dec
xchg
or
enter
push
loopne
rolb
or
adc
jne
or
adc
add
les
mov
sbb
mov
inc
or
movsb
ja
xorl
or
add
sbbl
lea
js
test
jge
leave
test
adc
push
sub
or
push
and
push
and
js
dec
xor
nop
test
or
ret
add
cmpsb
idivl
movb
movsl
test
push
mov
mov
jno
test
icebp
inc
jmp
inc
divl
adc
bound
ret
js
lcall
cmp
cs
lods
xchg
and
jne
lea
popa
add
cld
pop
sub
mov
sbb
push
sahf
std
and
stos
bound
leave
push
cmp
sub
or
les
cld
es
cmpsl
lods
or
xor
push
xchg
into
and
sbb
loope
pop
mov
movl
aam
loope
adc
insl
add
adc
xor
jmp
xchg
adc
push
mov
pop
repz
lahf
and
push
call
or
or
add
sub
add
je
hlt
daa
mov
inc
push
inc
sbb
jae
mov
or
jecxz
add
repz
sub
imul
inc
jp
inc
xor
andb
idivl
jae
or
inc
add
push
mov
sbb
inc
dec
mov
mull
lsl
jmp
ja
mov
push
inc
shr
rcr
shr
rcr
or
jne
fwait
imul
hlt
div
pop
dec
adc
inc
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
cld
cmp
lret
or
fimull
adc
fxch
fadd
sbb
shlb
cli
inc
add
xchg
fimull
ja
bound
pop
nop
mov
out
sbb
mov
movb
and
stc
mov
stc
adc
xchg
or
push
inc
daa
push
add
dec
out
inc
insb
mov
in
jno
adc
sub
popa
sahf
andb
movsb
jb
xor
lsl
sbb
or
push
and
xchg
pusha
xchg
xor
pop
pusha
adc
mov
adc
and
push
mov
mov
dec
or
mov
pop
and
fcmovnbe
add
dec
dec
test
push
inc
and
xor
cmova
dec
sbb
imul
cmc
sbb
roll
lock
jne
lea
jb
or
pop
mov
aas
inc
les
adc
push
sub
test
popf
test
jne
sahf
divb
cmp
adc
popf
out
inc
adc
adc
cwtl
dec
xchg
pusha
mov
cmp
enter
adc
pop
add
repnz
das
mov
mov
jb
pusha
and
jl
mov
inc
mov
cld
sbb
in
ret
push
pop
mov
test
test
sub
push
cmc
add
mov
xchg
je
stc
adc
add
aaa
xchg
pop
popl
sub
mov
xor
jp
pop
mov
iret
add
mov
movl
dec
in
movsb
sbb
adc
mov
add
push
lea
outsl
imul
and
mov
lea
lods
add
jp
xchg
loopne
mov
or
andb
sbb
adc
xchg
arpl
push
pop
leave
lods
test
orl
ds
mov
fcoml
cmp
in
sbb
xchg
mov
lea
add
mov
testl
add
outsb
movsb
lds
loopne
hlt
pop
mov
call
add
dec
orl
cmp
push
push
cmp
or
push
ret
shl
and
adc
mov
pop
loopne
xor
inc
stc
xor
mov
clc
xchg
inc
iret
xor
ss
dec
xor
push
out
lahf
addb
jne
ss
inc
filds
push
out
cmp
je
imul
shlb
faddl
aam
xchg
pop
addr16
adc
cld
pop
push
rorl
ret
repnz
push
and
mov
mov
testb
test
popa
xor
aam
iret
push
mov
and
shrb
setl
sbb
icebp
repnz
test
ja
call
pusha
sbb
push
and
and
ljmp
jb
inc
fists
mov
inc
pop
jp
aad
mov
add
orl
mov
movsl
adc
dec
sbb
pop
push
mov
data16
lods
inc
push
mov
out
or
push
mov
dec
jo
pop
dec
or
and
pop
or
sti
jb
inc
imul
sub
or
popf
in
sub
inc
call
or
lock
push
arpl
xor
icebp
inc
and
push
xor
dec
and
pop
or
pop
jbe
test
test
ret
jmp
loop
mov
push
push
adc
scas
inc
imul
rolb
fidivl
out
imul
ret
arpl
or
sbb
fisubl
mov
sbbb
mov
dec
cmpsl
test
sub
inc
cmp
adc
or
ljmp
leave
mov
or
sub
sahf
and
leave
and
jl
push
sub
or
cmp
push
outsl
in
mov
sarl
call
cmp
sbb
insb
inc
sbbl
pop
xchg
inc
scas
or
dec
cmp
mov
test
cmp
and
cmp
xchg
push
mov
xor
roll
pop
leave
push
add
xor
or
fwait
adc
fucom
dec
mov
inc
rcrb
push
cmp
cmp
lret
div
imul
and
and
hlt
add
pop
cld
cmp
mov
add
push
ja
or
push
mov
lret
stos
or
or
repnz
mov
or
fs
jne
xlat
loopne
aaa
iret
es
pusha
pushl
mov
or
add
int
fldt
clc
jmp
xchg
cld
je
or
bound
push
je
dec
je
stos
jmp
mov
je
push
push
mov
mov
cmpsl
or
jo
sahf
pop
fdivrl
in
mov
mov
cmp
les
inc
lret
dec
pop
push
in
dec
push
call
add
add
add
dec
mov
aam
inc
fnstsw
mov
sbb
inc
mov
sbb
sub
adc
fsubr
add
cmp
jge
mov
mov
pop
xchg
mov
jecxz
inc
adc
lock
sbb
push
push
dec
jmp
xor
sbb
mov
jle
add
inc
adc
shll
gs
or
push
adc
fs
jno
mov
and
ret
sbb
cmpsb
sub
add
cmpsb
add
inc
cld
sub
das
dec
les
mov
data16
xchg
xor
pop
addl
les
imul
je
sarb
mov
insl
jne
cmpl
or
and
and
sub
push
cmp
xchg
shlb
or
jg
push
and
adc
sbb
clc
dec
and
push
dec
sbb
inc
and
ret
dec
dec
xchg
fisubs
lcall
imul
inc
frstor
daa
andb
push
pop
inc
adc
xchg
jmp
sbb
mov
and
movsb
testb
sbb
out
inc
or
mov
sbb
ljmp
mov
sahf
mov
lret
adcl
popa
loop
push
push
orb
je
mov
imul
nop
push
xor
cltd
lsl
dec
ds
movsl
fidivrs
adc
daa
push
fldl
or
dec
sti
sbb
ret
dec
add
cmp
in
lea
push
out
mov
pop
jne
pop
jb
add
add
or
mov
in
fdivs
sub
xor
and
jmp
call
mov
and
mov
push
mov
js
mov
int3
add
xchg
cmpsb
sub
inc
mov
or
mov
mov
xor
sub
test
divl
test
jne
xchg
add
inc
ljmp
push
or
fcomps
aam
cmp
ss
jmp
xor
and
rol
inc
inc
cmp
adc
add
push
mov
addb
inc
inc
pop
je
pop
es
lods
popf
dec
mov
adc
inc
cwtl
and
or
jbe
pop
push
les
dec
xor
push
sti
stc
add
xchg
sbb
sbb
add
inc
daa
stos
imul
or
dec
movsb
pop
and
or
rolb
jp
shr
mov
inc
add
xor
inc
je
int
pop
rolb
pop
add
adc
and
push
pop
pop
pop
and
lea
pop
sbb
out
imul
sbb
data16
jmp
sbb
mov
and
loope
lock
cmp
clc
lods
jge
shll
inc
stos
call
aas
jae
mov
rolb
out
stos
test
ss
mov
cwtl
or
mov
jge
loop
dec
in
push
push
orl
or
rcl
push
and
mov
inc
orl
add
clc
sbb
inc
inc
xchg
adc
jo
andl
hlt
xlat
aas
adc
mov
pop
dec
je
enter
or
jne
repnz
int3
inc
call
push
sar
xchg
adc
add
cmpsb
xor
je
mov
xchg
and
clc
rorb
mov
cld
test
pusha
add
js
or
sbb
inc
inc
add
jl
sbb
jb
or
sti
or
sub
out
int
movsb
xor
lock
mov
shr
pop
or
mov
jle
push
push
xor
mov
xchg
inc
push
pop
push
dec
push
mov
lock
or
shll
mov
xor
or
or
or
push
and
sbb
cmp
xor
inc
mov
insl
mov
js
into
mov
into
add
and
pop
cmp
mov
xor
mov
xchg
pop
pop
cwtl
scas
sbb
loopne
sarb
sbbl
add
nop
and
pop
lock
sub
andb
and
loopne
add
adc
sub
sar
sarb
jg
popf
add
dec
dec
adc
enter
lahf
add
repnz
push
mov
or
adc
dec
lods
or
and
insb
mov
ss
pushl
sar
and
shl
add
pop
push
pusha
inc
add
mov
cmp
or
dec
adc
or
inc
adcl
or
xchg
cmp
pop
push
out
xorl
sbb
incb
orb
xchg
andl
negb
add
or
ret
dec
mov
jmp
inc
aam
mov
in
push
aaa
xor
mov
mov
jne
clc
pushf
or
stos
add
or
je
push
push
cmp
and
dec
loope
adc
jl
jmp
notb
dec
sub
or
fsubs
mov
and
inc
mov
popa
call
shlb
aad
out
push
xlat
cs
inc
dec
push
xor
dec
fwait
inc
lock
shlb
pop
xchg
repnz
pop
div
sbb
or
xorb
xor
not
push
shrl
inc
or
add
enter
les
add
cs
pop
xchg
data16
ret
sub
aad
jmp
fwait
sbb
lods
add
dec
jmp
sbb
and
sbb
jg
push
test
and
inc
push
ljmp
test
mov
or
cltd
out
jo
or
sub
loop
aas
and
or
cmp
roll
ja
les
lret
sub
mov
xchg
push
xlat
loop
mov
mov
dec
push
mov
lock
ja
or
jge
hlt
rep
ss
neg
add
push
lcall
lock
push
adc
loopne
fbld
xchg
fdivrs
or
push
inc
mov
mov
push
movsl
xor
movsl
ret
mov
mov
fs
hlt
rorl
ret
and
and
xorb
cltd
lock
sub
jns
cmpb
push
inc
test
loope
add
mov
sub
jmp
pushl
xchg
in
insl
pop
add
cmp
divl
adc
and
lret
movb
in
insl
jge
test
in
jle
mov
add
inc
adc
xor
insb
xor
xor
sub
mov
adc
ds
pop
test
ds
mov
in
mov
cmp
add
mov
fsub
sbb
mov
nop
into
adc
outsl
push
push
dec
adc
push
and
jne
aas
xchg
lret
pop
outsl
inc
or
movsl
repnz
stc
jbe
jle
pushf
outsl
loope
lcall
shll
mov
scas
sbb
hlt
or
pop
mov
jo
xchg
test
pushf
loopne
loope
insb
out
mov
jb
test
into
and
call
ljmp
xchg
adc
push
sahf
dec
test
pop
call
xor
cli
lcall
clc
in
lock
rep
mov
js
xor
insl
rcll
in
in
mov
mov
mov
and
or
shrb
xchg
jmp
pop
sub
pop
rorl
mov
test
mov
hlt
push
aas
jno
js
push
sbb
call
inc
or
bound
movsl
mov
sti
or
mov
lret
lock
pop
gs
and
leave
or
sub
push
dec
enter
sbb
and
pop
dec
stos
or
repz
in
fucomi
or
sbbl
mov
xchg
sarb
stos
int3
or
and
mov
imul
mov
add
jl
pop
push
js
xor
push
push
inc
fsubr
mov
mov
and
mov
pop
pop
xchg
mov
popa
pop
mov
dec
mov
xor
mov
aas
add
jmp
ficoms
mov
inc
andb
cmp
mov
out
or
sarb
jbe
push
test
aam
sarb
ret
aas
addr16
sub
sbb
add
and
pop
mov
push
push
push
push
test
nop
int3
sarb
call
mov
bound
lret
mov
jmp
xchg
movsl
xlat
adc
outsl
jo
push
sub
testb
add
mov
jmp
or
aas
mov
pop
push
fmull
dec
push
cmp
dec
dec
sbb
push
mov
test
add
inc
test
aaa
and
fisttpl
popf
enter
mov
rorb
outsl
and
mov
ljmp
loop
rorl
sub
jl
cmp
jg
inc
jmp
mov
hlt
pop
dec
push
jp
mov
imul
lea
push
pop
xchg
or
xor
inc
sbb
xor
and
mov
adc
xor
jle
inc
push
mov
xor
sbb
cli
lds
cmp
push
loopne
outsb
outsl
ja
cld
and
add
xlat
ja
mov
mov
leave
mov
mov
pop
or
int
scas
imul
jecxz
movl
mov
dec
jnp
rolb
lock
cs
ficomps
dec
test
push
decl
mov
push
add
pop
cltd
popa
pusha
jmp
je
dec
ljmp
in
sub
lahf
dec
add
dec
inc
loopne
movsl
sbb
out
lret
sub
jo
sti
andl
mulw
mov
sbb
xor
add
aaa
or
inc
adc
sarb
jae
fidivrl
fcmovb
or
or
cmp
pop
inc
jle
cmp
inc
or
jl
in
int
dec
call
xor
push
push
or
cmc
mov
mov
ss
pushl
in
pushf
xchg
dec
sbb
mov
in
mov
aaa
adc
and
xchg
call
loop
jmp
sahf
adc
xchg
sub
mov
cmp
test
movsl
jne
cmp
or
insb
movsb
sarb
jne
inc
sbb
mov
mov
cmp
insb
xor
loop
adc
inc
loope
aam
dec
sub
cld
shrb
je
xor
lea
jg
push
push
stos
push
jle
adc
mov
inc
or
xchg
fs
mov
xor
lahf
add
cmp
hlt
push
je
je
clc
xorb
push
add
add
ret
jg
daa
push
mov
cltd
sbbb
test
jo
jle
xor
ret
add
bound
mov
push
adc
sbb
test
shlb
loopne
jg
lods
jmp
push
pop
jl
mov
dec
xchg
add
rorl
xchg
xchg
or
popf
adc
or
loopne
cmp
inc
sbb
sbb
scas
test
ljmp
or
iret
or
lock
pop
fdivs
mov
mov
cmpsb
cld
shlb
mov
fldl2t
call
push
clc
and
cmpsb
add
out
jl
js
sub
push
jp
outsl
mov
mov
rclb
cmpsl
gs
pop
xchg
hlt
cmp
push
dec
xor
or
xorb
sbb
je
push
push
mov
jg
pop
stos
filds
dec
shlb
outsb
fabs
rcll
sub
adc
add
in
push
cmp
cmp
fs
mov
mov
rcl
aaa
mov
mov
jle
mov
inc
das
and
pop
cmp
in
mov
push
mov
ret
xchg
int3
xchg
xor
mov
pop
dec
pop
inc
push
sahf
lret
sti
daa
sub
dec
or
xor
cmp
andb
push
dec
cmp
mov
cmp
mov
push
or
cld
lcall
cmp
and
bound
xor
and
and
push
push
imul
sbb
into
push
repz
mov
jo
sbb
test
je
fstps
xchg
imul
adc
jg
add
add
cmc
fwait
mov
pushf
cmp
or
fs
pop
jnp
popa
xchg
je
mov
fisubl
sbb
jmp
outsl
sub
les
push
sbb
shl
add
orb
mov
jmp
push
enter
lret
cmp
nop
ja
mov
rorb
sub
xchg
adc
push
fidivs
shlb
in
leave
mov
xor
lds
mov
and
rclb
sbb
mov
jo
cmp
push
shrl
adc
stc
out
fsubrl
and
jne
push
loope
push
add
and
xlat
shll
xchg
enter
cmpsl
sub
inc
mov
arpl
mov
cmp
cs
add
js
jns
pop
lahf
clc
push
je
or
jb
mov
cmpb
in
xor
sub
mov
xchg
test
mov
rorb
lcall
sub
xorb
cld
ret
mov
jb
pop
in
mov
jg
inc
cmp
jae
push
cmp
jl
mov
inc
fadds
adc
daa
subb
xor
jle
testb
jne
mov
jmp
pop
aaa
ret
popa
out
push
ljmp
jb
pop
add
mov
sub
or
cmp
repnz
nop
inc
jbe
enter
mov
mov
icebp
cmp
scas
mov
sub
mov
sbb
or
xor
jmp
test
lods
mov
xor
pop
push
xchg
xchg
mov
or
inc
aam
adc
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
aam
lea
ds
fs
jle
xchg
ljmp
or
pop
into
sub
inc
push
loop
movl
loopne,pn
push
lods
ja
pop
mov
jecxz
rclb
push
jle
add
orb
arpl
insb
xchg
dec
inc
inc
mov
inc
push
lock
enter
ja
sbb
cmp
jl
xchg
lock
push
add
fdivrs
aam
les
and
pusha
jbe
add
loopne
sbb
mov
sbb
cmp
fstl
orl
call
lret
pop
hlt
mov
adc
ja,pn
add
add
jmp
nop
insb
pop
hlt
xchg
test
popf
sub
push
jb
mov
pop
std
jb
addr16
imul
pop
invd
lds
test
pop
dec
js
out
cmp
jmp
sbb
notl
repnz
and
push
push
mov
or
lock
loopne
pusha
mov
in
es
lret
mov
push
mov
call
shlb
nop
add
out
imul
sbb
roll
dec
and
pop
lock
cmp
sbb
mov
xor
call
and
cmp
jb
testb
imul
data16
push
lcall
jnp
or
mov
movb
and
lds
lea
cmpl
sub
pop
adc
daa
mov
bound
add
or
add
gs
sbb
das
outsl
fdivl
jmp
pusha
adc
inc
imul
push
inc
xchg
loope
dec
pop
push
push
insl
cld
mov
mov
out
push
or
es
jmp
add
nop
add
xor
push
inc
pop
pop
rcll
les
and
bound
push
notb
sub
pop
es
sbb
xchg
bnd
loope
and
sub
sbb
into
je
ss
cli
adc
lea
lea
or
clc
add
jecxz
jbe
xor
push
sbb
jmp
fs
and
popl
cltd
mov
testb
aam
mov
call
enter
rcl
push
dec
ret
in
in
call
inc
mov
in
dec
dec
and
sbb
sbb
push
cld
rolb
and
mov
xor
mov
call
pop
shr
mov
roll
sbb
sahf
shl
mov
push
pushf
inc
jnp
sbb
rcr
cmp
push
outsb
adc
push
lea
xor
pop
pusha
lods
xor
out
leave
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
dec
or
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
push
rclb
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
inc
outsl
imulb
or
dec
fwait
push
or
and
stc
ss
sbb
cs
mov
or
call
adc
in
adc
roll
adc
dec
dec
clc
and
and
inc
inc
add
movsb
shlb
pop
xor
repnz
jne
jo
addr16
popa
loop
mov
xor
and
jne
out
je
push
lret
shlb
and
test
mov
add
ror
cli
ljmp
orb
popa
add
xchg
jb
aaa
loope
dec
sbb
push
push
test
push
xchg
mov
push
push
int3
and
cmp
and
dec
pop
lock
cli
dec
nop
sbb
mov
cwtl
scas
pop
out
jne
pop
sahf
mov
and
inc
or
hlt
rorb
dec
out
out
inc
cmp
pop
dec
xor
jecxz
lea
ss
je
sub
adc
in
and
add
aaa
xchg
pop
dec
sbb
nop
neg
add
fmuls
mov
pop
lods
in
push
popf
insb
jl
push
mov
js
outsb
xlat
or
jp
loopne
dec
pop
cmp
outsb
test
sbb
xorl
je
push
pushf
xchg
xchg
nop
movsl
mov
and
nop
jecxz
loopne
test
adc
jbe
or
add
inc
lea
push
sbb
adc
xor
stos
adc
repz
std
inc
cs
enter
add
leave
cmc
inc
cmc
push
and
cmc
outsl
push
sbb
pop
idivl
and
inc
test
push
push
add
push
lret
push
adc
cld
mov
pop
or
orb
pop
dec
loope
sbb
adc
add
and
iret
pop
or
stos
mov
out
and
mov
or
call
pop
xchg
jmp
ja
mov
adc
inc
sub
pop
les
mov
pop
les
push
clc
mov
notl
insb
jl
cmp
mov
fldt
and
cmp
inc
test
enter
xchg
lea
xor
stos
fisttps
pop
mov
loope
xor
pop
mov
orl
mov
xor
outsl
mov
test
and
subl
pop
scas
mov
sbb
mov
mov
notl
mov
mov
fbstp
aaa
lods
add
mov
add
pop
cld
pop
and
jl
shlb
cmp
adcl
daa
movsl
test
int
xor
loope
pop
lock
push
mov
push
lea
push
and
out
sar
outsb
pusha
mov
add
sar
mov
or
or
loop
sti
add
pusha
sbb
loope
in
test
mov
iret
xor
push
and
mov
and
lods
popa
rclb
jns
out
cmp
add
mov
inc
sbb
mov
les
dec
ljmp
adc
outsl
inc
pushl
mov
jns
mov
sub
xchg
dec
rclb
sub
pop
popf
pop
addl
pop
mov
mov
test
test
das
inc
sbb
addr16
mov
je
into
outsb
pop
cmp
in
lods
mov
ret
cmpb
mov
mov
mov
rorb
into
sbb
fwait
nop
inc
mov
or
out
outsb
cmp
add
jecxz
out
fidivrl
enter
push
lret
push
push
lahf
ficoml
gs
sub
loopne
call
jmp
push
dec
inc
test
dec
lea
push
pop
fcoml
inc
loop
add
cmp
fmull
sub
cmp
fsubs
push
inc
mov
mov
dec
sub
adc
xor
sarl
cmp
test
cmpl
mov
int
push
test
cmp
add
add
rcrl
mov
mov
sbbb
cmp
call
xor
cmp
rcl
shlb
popf
ficomps
int
push
jmp
inc
xchg
loop
or
mov
mov
push
je
xor
sub
add
jae
lcall
mov
fisttps
cmp
lds
les
mov
sysenter
sbb
dec
add
xchg
sbbb
cwtl
dec
adc
icebp
cmp
jmp
xchg
lods
fucomp
mov
andl
fidivrs
cmp
loop
pop
decl
or
inc
ret
popf
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
mov
inc
add
sahf
cmp
jmp
or
pushl
lock
nop
lret
cmpb
inc
cmp
mov
inc
cmp
jae
inc
inc
lods
push
orl
shll
movsl
std
pop
mov
inc
inc
sbb
or
sahf
add
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
adc
cmp
add
test
mov
and
push
xchg
jmp
insb
lret
scas
sub
mov
add
fs
std
jno
adcb
jl
fstpl
mov
test
add
push
jo
lret
jmp
or
ret
stos
adc
mov
jmp
sbb
sbb
inc
pushl
lods
adc
cltd
sub
mov
fdivrs
jne
ljmp
push
inc
jne
fsts
adc
xor
jnp
mov
pop
cmp
mov
inc
add
adcl
sbb
ret
xchg
and
sbb
icebp
pop
or
xor
loope
aas
and
add
int3
test
or
sbb
cmp
mov
je
aaa
inc
adc
and
add
sub
and
mov
mov
mov
lret
mov
or
hlt
jbe
add
xor
fmull
pop
adc
inc
dec
int3
jmp
test
xchg
sbb
addl
sub
cmpsb
mov
mov
inc
add
inc
jo
movsb
mov
and
push
push
pop
test
add
jge
mov
xor
push
in
push
sbb
out
testb
push
mov
cmpsb
adc
inc
scas
out
fidivrl
or
shll
ret
insb
add
mov
pop
and
out
xor
ret
rcll
push
mov
or
inc
js
rcrl
sahf
sbb
add
aam
addl
jg
xor
cmp
sub
rclb
xchg
divb
sub
lret
sub
pop
hlt
mov
dec
or
sbb
orl
lods
pop
xchg
adc
push
cs
mov
dec
pop
inc
xorl
arpl
sbb
pop
cmp
lods
jg
fiadds
pop
mov
xchg
xchg
ja
adc
hlt
adc
jge
les
pop
xchg
lods
inc
adc
add
push
pusha
mov
fdivp
addb
add
xor
pop
pop
xlat
sub
pop
adcb
push
icebp
sar
pop
lods
pop
cld
pop
pop
xchg
jg
mov
xor
mov
add
push
pop
xchg
clc
je
adcb
dec
lods
cmpsb
cltd
into
push
xor
cmp
lock
outsb
push
test
cwtl
clc
mov
mov
cli
outsb
xchg
push
jmp
push
and
mov
xor
je
inc
cmp
shlb
mov
pop
xchg
test
add
js
pop
sbb
dec
loop
xor
add
or
dec
popa
inc
aad
jecxz
and
add
add
mov
xor
adc
pushf
adc
push
adc
and
andb
cmp
adc
stos
rcrl
dec
or
dec
test
inc
jmp
icebp
xor
dec
iret
les
jge
mov
lcall
and
ror
bound
addr16
push
inc
xlat
add
dec
pop
pop
movsl
cmp
loop
pushl
cmp
je
mov
icebp
fcoms
popa
clc
jno
add
jnp
cmp
rcrl
cmp
inc
mov
leave
mov
push
cmp
loope
in
sub
stc
jbe
imul
ret
add
mov
in
insl
subl
pop
sub
inc
adc
dec
data16
jne
cmpb
das
mov
cs
sub
lcall
push
sbb
dec
mov
das
fsub
or
sbb
cmp
cs
aaa
sbb
fs
leave
jp
sub
sbb
sbb
outsb
or
push
subb
cld
inc
popf
push
testb
imul
mov
mov
loope
inc
and
push
xchg
fldenv
mov
fdivrp
aas
repnz
das
adc
mov
rcrb
inc
sub
rorl
jl
out
jle
and
mov
and
idivl
jmp
or
or
pop
icebp
xchg
orb
in
inc
je
cmp
sbb
gs
and
jne
or
aam
jle
inc
mov
movsb
mov
jmp
sub
inc
sbb
leave
mov
add
call
and
and
dec
or
ror
sub
inc
lds
js
push
test
cmp
push
roll
xorb
xlat
or
mov
push
decb
inc
dec
hlt
xor
mov
sub
pop
sub
je
push
popf
ds
cmp
inc
add
sbb
cmp
data16
pop
mull
add
push
mov
pop
add
sub
push
xchg
inc
cs
pop
mov
js
sbb
or
loope
mov
or
xchg
sbb
dec
ds
and
mov
xchg
test
sbb
ret
xchg
add
or
xor
in
or
nop
outsb
jg
and
shll
dec
xor
adc
jb
fcmovne
or
shr
dec
outsb
add
jmp
ds
and
por
lock
test
adc
pslld
add
adc
test
xor
and
xlat
inc
mov
xor
je
sbb
xchg
test
sub
inc
jmp
push
std
in
imul
jmp
sbb
lock
fisubl
mov
and
mov
aaa
jecxz
jge
add
or
cmpsb
mov
adc
std
cwtl
and
or
aas
fmuls
or
add
add
je
sbb
loope
flds
and
pop
es
pusha
mov
pusha
loope
pop
sub
push
mov
mov
adc
insl
dec
in
fstp
ds
popf
cmp
sbb
insb
loop
lea
dec
mov
or
hlt
es
in
mov
add
add
mov
xor
mov
js
cmc
xor
mov
dec
sub
lock
or
sub
push
push
xchg
inc
jmp
sti
xor
imulb
cmp
and
xorb
xorb
sbb
jnp
lods
es
push
and
inc
add
adc
mov
push
or
pop
push
sub
sbbb
inc
xor
out
es
arpl
sbb
and
inc
fistl
neg
or
nop
test
adcb
mov
push
lcall
ret
lret
or
inc
aam
sbb
mov
push
aaa
sbb
out
xchg
fcompl
sti
in
adc
and
les
sub
in
lods
sbb
sub
jmp
sub
xchg
out
dec
push
or
psubusw
mov
adc
mov
add
pop
pusha
popa
and
xchg
hlt
pop
sahf
fdivr
sbb
es
pop
in
adc
mov
cmp
ffree
repz
inc
mov
faddl
pop
add
mov
ret
mov
repnz
inc
es
les
push
ss
insl
in
sbb
jp
dec
in
sbb
lock
stos
cmp
fcompl
push
push
sahf
jmp
jo
and
pop
movsb
or
sbbb
in
aam
bnd
loopne
xchg
and
mov
cmc
add
inc
and
jb
inc
rorb
sub
clc
in
js
mov
push
add
pop
outsb
mov
add
and
mov
add
add
or
or
out
jmp
pop
enter
pop
movsb
int
push
and
mov
and
add
xor
lds
fs
sbb
jecxz
add
or
push
jmp
sbb
inc
jnp
add
adc
or
cmp
js
cwtl
subb
pop
adc
outsl
cmpb
mov
js
jae
push
or
jp
ffreep
lods
fsubrp
fwait
jno
mov
mov
and
push
mov
cmp
xor
rclb
xchg
adc
dec
cmp
mov
aam
insl
orl
sub
pop
jo
mov
fcoml
pusha
xor
repnz
shlb
mov
imul
incl
pushl
lea
push
push
mov
or
mov
xchg
and
incb
inc
pushf
out
xor
sbb
cmp
mov
jo
out
test
or
or
mov
jae
push
sahf
fldl
pushf
or
adc
and
add
jg
jae
movl
mov
sub
test
and
push
pop
adc
mov
data16
rcll
mov
sub
call
push
rolb
jle
lock
or
jge
and
xor
mov
popf
xchg
jno
test
add
ljmp
adc
mov
pop
addr16
pop
fadds
into
or
test
mov
cmp
add
cwtl
mov
fldt
jnp
imul
cmpsl
push
dec
dec
pop
or
mov
mov
icebp
sbb
das
mov
inc
add
fidivs
push
out
mov
pop
sbb
jne
pop
sub
inc
sbb
xor
push
add
andl
jae
shr
loop
pop
sub
dec
subb
aad
push
ffree
loopne
mov
add
pop
sti
sbb
loop
inc
fldcw
dec
lock
dec
and
fcomps
pusha
xor
or
loopne
xchg
sbb
or
sub
sbb
fcmovne
fwait
sahf
adc
xor
dec
fwait
sbb
loopne
xchg
and
jle
call
sub
xor
or
or
popa
fistpl
push
dec
mov
shlb
jo
pop
cmp
push
inc
aaa
jno
xchg
xchg
and
adc
or
and
cmp
call
mov
out
add
push
mov
aam
adc
pusha
add
dec
jmp
pusha
push
call
pop
scas
mov
fidivrs
fnstcw
movsb
shlb
inc
nop
push
sbb
sbbb
cmpsb
stos
test
push
mov
bound
push
sub
ja
mov
jnp
repnz
inc
mov
inc
js
or
push
push
movsb
xchg
pusha
lcall
add
sbb
imul
pop
sub
mov
pop
sub
xor
add
sti
jbe
add
movsb
mov
notl
xchg
lahf
adc
enter
out
or
or
add
loope
or
mov
sub
in
adc
sub
pop
xor
jne
iret
adc
das
xchg
andl
test
hlt
or
inc
repz
adc
arpl
ret
sbb
xchg
movsb
and
mov
inc
loopne
or
popf
cli
dec
push
or
add
add
jb
sbb
jmp
aas
sub
push
push
jp
add
push
mov
inc
mov
mov
pop
test
jne
or
jl
xor
hlt
mov
stos
and
test
aaa
or
jo
mov
xor
cmp
scas
sbb
rcrl
roll
xchg
daa
lock
jns
dec
mov
add
mov
pop
fmuls
mov
sub
inc
shl
mov
jb
mov
not
test
jmp
adcl
mov
jmp
push
cltd
insb
pop
and
mov
out
imul
or
inc
insb
sub
cmp
lea
xor
repnz
ror
nop
or
jb
cmp
sbb
sub
adc
repnz
push
mov
dec
mov
rorb
insb
push
mov
sarb
shlb
and
add
lea
add
in
push
sbb
sti
cmp
dec
xchg
orb
dec
stos
inc
push
mov
jo
lar
push
aam
inc
xchg
xor
cmp
mov
arpl
loop
xor
or
sar
out
lods
out
and
push
cld
not
sahf
inc
pop
lock
xor
ds
icebp
cmpsb
and
push
or
out
push
popa
adc
loope
mov
add
pop
sub
sarb
je
mov
lea
jmp
sbb
popa
pop
in
lahf
cltd
inc
dec
mov
hlt
test
jb
icebp
and
push
inc
pusha
addb
sub
stos
test
push
sub
cmp
movups
sub
loop
fs
push
pop
xor
pop
lds
xor
inc
rcll
dec
lock
imul
inc
mov
insb
inc
inc
mov
and
mov
add
jl
pushf
mov
gs
dec
xor
dec
hlt
lea
sbb
mov
push
ret
add
lods
mov
lret
xor
int
ret
jl
mov
out
and
loop
jb
subb
cld
add
or
sbb
jge
cmovbe
and
pop
scas
dec
and
rcl
jecxz
sub
rorb
lock
loopne
stc
inc
mov
mov
and
cmpsb
fiadds
stc
and
inc
sbb
inc
pop
adc
xchg
repnz
nop
sbb
cld
add
sbb
push
and
or
and
test
sbb
xchg
mov
pop
add
clc
or
pop
inc
xchg
and
xchg
and
or
or
sbb
aam
loop
movl
push
adc
lcall
add
movsb
push
pushf
call
jne
adc
push
inc
nop
and
aad
adc
add
sti
push
or
or
in
jne
inc
jmp
mov
sub
and
or
xchg
add
je
ja
lods
mov
sub
cmp
ja
push
aad
push
jo
jmp
fs
mov
mov
cmp
rolb
adc
mov
call
or
mov
push
enter
sbb
sbb
mov
jmp
sub
lods
jbe
mov
adc
add
cmp
jle
jbe
inc
jle
cmp
push
xor
vprotw
and
push
jmp
dec
push
mov
bound
xchg
xchg
mov
add
sub
cmp
and
push
jmp
ja
orb
mov
jae
jmp
sub
mov
inc
jbe
inc
mov
pop
jge
jnp
into
rorl
out
dec
loop
scas
les
nop
add
jne
enter
stos
dec
jae
imul
sbb
ds
jge
jmp
and
cmp
xor
xchg
dec
lea
out
arpl
xchg
out
push
sub
mov
or
add
in
orl
pop
das
lahf
inc
rcrb
test
stc
sub
cmp
popa
adc
sub
mov
je,pn
scas
call
inc
mov
jge
mov
enter
mov
ljmp
fmuls
cmp
adc
add
inc
testl
pusha
and
rcr
hlt
adc
hlt
dec
addl
jmp
cld
sub
sbb
and
sub
fwait
push
rolb
or
or
in
jle
jmp
mov
sbb
push
cwtl
pop
mov
add
xor
mov
dec
xchg
inc
pop
fsts
xchg
je
test
cmp
cmp
xchg
jge
neg
add
mov
orb
movsb
sub
cmp
loop
and
cmp
adc
nop
imul
scas
sbb
ret
inc
es
jge
jle
lock
push
and
adc
push
jnp
lea
out
dec
test
lods
sarl
push
cmp
and
add
mov
stos
call
cmp
jb
mov
dec
mov
cmp
dec
sbb
rorb
fs
xchg
xor
shrb
lock
and
and
adc
roll
nop
shlb
xor
mov
std
mov
or
je
jle
mov
mov
pop
js
jae
push
movb
testl
jne
enter
cmp
or
into
jne
pop
sub
pop
cmp
cmp
jne
loopne
imul
jne
cmp
xor
mov
or
pop
lods
add
add
daa
lea
rdtsc
lods
push
scas
sbb
pop
cltd
rorb
icebp
dec
push
clc
je
lock
ja
dec
push
js
subl
lcall
sub
sub
leave
sbb
push
stc
jg
add
cmpsl
lods
dec
push
aaa
bound
jne
add
xor
shll
aam
add
pop
lods
add
or
shr
loop
shll
gs
out
mov
sub
mov
jg
or
adc
inc
mov
les
add
notb
es
lods
mov
imul
pop
xchg
fcom
insl
fadd
loopne
shr
or
mov
sahf
xor
not
jne
insb
mov
xor
mov
xchg
lcall
and
dec
mov
fiaddl
pop
add
cmpsb
imul
sti
pop
pusha
and
add
fiadds
push
scas
push
stos
or
or
mov
mov
icebp
lds
mov
and
fmull
mov
inc
ret
stos
lock
cmp
inc
out
stos
or
sub
sbb
push
push
into
jmp
scas
xlat
xor
inc
imul
jae
jno
les
test
subb
jne
push
lret
bound
clc
jmp
sub
add
imulb
dec
loopne
sbb
add
pop
enter
insl
and
ret
in
or
mov
inc
mov
xchg
xchg
add
stc
mov
add
push
mov
cli
jns
int
test
mov
and
cmc
mov
gs
inc
add
fdivrs
sbb
test
pop
jne
cmp
cli
adc
inc
scas
inc
mov
mov
fcoms
pusha
mov
rorl
sahf
pop
cmp
in
push
or
test
pop
sahf
mov
stos
push
xchg
xchg
adc
inc
cs
out
add
xlat
or
ss
gs
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
add
push
add
fcompl
add
shlb
mov
xor
pop
jae
sbb
xchg
add
clc
cmp
rorb
add
xor
mov
clc
add
lahf
xor
test
outsb
or
xchg
mulb
jmp
adc
gs
das
pusha
and
jmp
and
rcrb
testb
sub
faddl
cmp
aam
add
fdivs
test
xor
jl
sub
daa
and
dec
inc
je
popf
mov
pop
clc
jmp
lahf
push
cmpl
and
paddd
clc
add
mov
and
or
mov
sub
movb
js
dec
mov
test
addr16
loopne
cmp
ficoml
leave
icebp
mov
es
push
mov
sbb
loop
lock
ljmp
lret
jmp
sub
add
add
sub
sahf
imul
fcmovnbe
lea
inc
lea
mov
pop
inc
cs
pop
je
inc
out
cs
dec
jns
pop
dec
mov
mulb
lcall
cld
xor
mov
or
add
testb
out
push
aaa
inc
in
adc
int3
inc
pusha
sub
and
sub
and
repnz
test
shrb
push
rcll
jle
aam
gs
inc
lock
mov
ja
hlt
adc
loope
shlb
enter
adc
jge
mov
sub
adc
lahf
adc
lret
xor
inc
xor
data16
cmp
add
sbb
inc
add
mov
and
xchg
mov
push
inc
int3
pop
sbb
filds
jecxz
mov
cmc
flds
xorb
sbb
stos
clc
xor
call
test
adc
imul
mov
xchg
cmp
flds
in
sub
cmp
movsb
inc
or
or
fcoml
pop
mov
add
push
inc
add
adc
fisubrl
jle
push
and
mov
lea
add
mov
outsb
adc
fmuls
js
mov
pop
or
sbb
xchg
testb
popf
jnp
dec
mov
cld
push
cmp
or
lds
inc
add
loope
enter
inc
enter
mov
mov
js
dec
jecxz
push
push
adc
jg
dec
dec
inc
xor
leave
and
add
mov
movb
adc
or
dec
mov
movsb
fwait
jo
neg
sbb
std
das
jle
jecxz
mov
jg
ret
daa
xor
or
jne
inc
inc
adc
pop
cmp
sahf
popa
mov
and
mov
or
int
scas
test
movb
and
xor
add
add
or
xlat
or
sub
jg
ja
sub
test
xchg
or
test
dec
mov
ret
push
movswl
les
dec
data16
and
bound
clc
cmp
add
mov
add
dec
pop
addb
lods
enter
fbstp
ss
jl
jne
mov
cmpsl
clc
mov
or
fisubrl
stc
xchg
stc
inc
add
dec
jmp
xor
sub
or
cmp
and
mov
adc
lahf
add
push
add
mov
rcr
loop
add
lock
popa
mov
out
shl
out
and
xor
pop
sbb
js
jg
jb
mov
sub
or
fidivrl
rorl
lock
jns
rcll
lret
sbb
ds
inc
ret
loop
add
jbe
mov
loop
shll
mov
lods
jb
fs
jae
ficompl
inc
dec
pop
or
pushf
or
leave
or
sub
pop
adcl
push
push
adc
stc
mov
mov
push
push
es
add
scas
pusha
cmp
data16
sub
pop
inc
test
jne
jo
inc
hlt
loop
call
nop
mov
out
and
mov
fs
add
cwtl
inc
ror
add
call
jmp
insb
sub
inc
sub
xchg
sarb
mov
shll
jl
xor
add
inc
add
mov
rolb
stos
rorb
ficompl
add
xchg
adcb
sbb
iret
cmp
mov
and
push
je
inc
jl
and
je
push
shl
jne
je
and
mov
add
repnz
inc
sbb
dec
xchg
sbb
or
mov
mov
enter
inc
lock
push
insl
push
jmp
insl
cmp
mov
sub
cld
jl
mov
sub
cmp
mov
inc
rolb
loop
mov
sbb
ds
add
gs
loopne
mov
pop
data16
fwait
out
mov
inc
popa
je
rcrb
enter
dec
jmp
xor
dec
jle
mov
pop
dec
adc
push
inc
shrl
rorb
or
push
rorl
cmp
sub
jmp
clc
enter
push
outsb
in
call
adc
call
jne
fmull
insl
push
pop
clc
flds
or
cltd
xchg
cmp
push
setbe
cld
test
cmp
inc
dec
rol
add
cmpsb
xor
pop
adc
add
sbb
and
or
ds
and
xor
inc
fildll
jmp
push
inc
push
add
lods
addl
inc
popf
sahf
decl
jbe
mov
cmpb
jne
adc
inc
pusha
movsl
aaa
push
ss
rcrl
movsl
xor
sub
add
hlt
and
les
pushf
and
cmp
rcll
jo
and
lds
mov
mov
sub
cld
lahf
dec
push
sub
dec
or
xor
popf
ret
rolb
push
sub
enter
movsl
aaa
popf
cltd
movsl
jg
add
mov
lock
push
mov
mov
cmp
sub
or
fs
shrb
pop
inc
mov
js
mov
adc
jmp
insl
js
push
adc
mov
cmpl
push
fwait
adc
or
push
data16
addb
dec
push
mov
ret
adc
adc
or
inc
dec
sub
call
pop
shrb
or
sbb
rolb
lret
imul
mov
je
mov
sbb
jbe
jge
lcall
push
rol
stc
loope
adc
inc
or
in
inc
cmp
fidivs
mov
les
mov
xchg
dec
out
pop
cmp
mov
mov
icebp
add
out
mov
loop
arpl
nop
add
das
adc
xor
sbb
mov
adc
dec
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
xorl
negl
lret
aad
add
and
stos
lea
cmp
sbb
mov
and
or
fdivrs
jno
add
add
mull
or
lahf
es
lret
ss
add
or
sbb
jne
in
inc
orl
gs
adc
cmpsl
mov
cltd
lea
xor
rclb
push
popa
adc
cwtl
mov
push
cld
mov
dec
dec
and
jo
xor
add
mov
jecxz
push
push
lret
imul
mov
push
arpl
mov
cmp
fs
push
and
int
or
fsubrs
push
adc
adcb
inc
rcl
dec
xrelease
xor
or
pusha
add
mov
enter
jge
test
cltd
lret
or
sbb
cli
sbb
pop
mov
je
push
inc
mov
xlat
ss
adc
sub
push
hlt
addr16
arpl
and
xor
clc
pop
rolb
cmp
sbb
inc
jmp
sbb
adc
add
fdivs
loope
cmp
inc
test
data16
sub
adc
inc
sub
push
xchg
push
enter
iret
xor
movd
adc
pop
in
cld
jo
loopne
subl
mov
or
imull
xor
outsl
fstpt
inc
in
adc
repz
sbb
xchg
and
add
andb
js
sbb
inc
pop
fsubl
jo
cmpsb
mov
mov
push
pop
mov
jge
es
push
sub
mov
dec
movsb
fabs
mov
das
sub
jmp
xorb
ret
jl
adc
sysexit
or
ljmp
inc
jmp
cwtl
loopne
imul
adc
or
sub
fcoml
sub
movb
xlat
sbb
std
lcall
pop
and
xor
add
movb
add
mov
ret
inc
push
sbb
lret
xor
adc
js
sbb
adc
aaa
mov
add
adc
arpl
adc
push
inc
xor
jmp
pushf
xor
mov
xor
or
xchg
and
inc
testb
cmpl
sbb
adc
inc
out
and
mov
pop
movsb
orl
test
test
xchg
adc
lret
decl
dec
cmp
lea
or
xor
shll
std
out
pop
add
or
push
sub
ja
or
shr
shr
or
cwtl
jns
das
mov
add
add
or
bound
scas
push
bound
imul
sub
or
mov
fildl
xchg
push
inc
int3
cld
push
aam
push
je
adc
fnstcw
inc
pop
sub
lret
popf
pop
adc
testl
sbb
cli
mov
adc
mov
or
cs
push
xor
mov
inc
rorb
cltd
repnz
orb
xchg
jb
enter
adc
out
ret
mov
inc
jbe
movb
mov
ss
cmc
jmp
cmp
shr
adc
loope
xor
shl
andl
adc
xor
test
add
ds
clc
cmp
stos
imulb
or
test
mov
cmp
test
je
mov
call
adc
and
or
dec
inc
push
pop
cmp
fisubl
or
call
fdivs
out
xor
test
push
push
sbb
sub
rcrb
jne
mov
pop
call
cmpsl
push
cld
imul
fsubrl
add
add
call
add
xorb
cmp
fiadds
mov
push
xchg
std
or
cmp
jmp
push
jle
inc
push
loopne
cld
inc
mov
xchg
sbb
or
loopne
mov
out
mov
cmp
lret
mov
and
ss
dec
cmp
lock
sti
mov
cmpb
jl
xor
xorb
decb
je
sub
mov
xchg
adc
dec
add
push
roll
sub
cmp
pop
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
push
adc
fldcw
ss
jne
aam
pop
or
stos
adc
sub
push
mov
jb
mov
jo
jbe
dec
add
pop
insl
fs
and
enter
cld
push
rorl
loope
into
jne
call
flds
and
rcrl
gs
add
je
movsl
inc
add
mov
pop
sub
add
repnz
cmpsb
mov
or
pushf
lods
pop
mov
js
or
mov
movsl
add
pop
xor
rolb
xchg
push
outsb
push
hlt
aam
xchg
or
cltd
rol
and
outsb
inc
push
or
xchg
pop
mov
push
push
enter
aas
or
inc
inc
div
fdiv
fiaddl
fidivrs
sbb
inc
ss
or
cltd
sbb
jne
and
or
xorl
sbb
fcoms
inc
lcall
jne
icebp
inc
push
test
adc
gs
and
data16
or
dec
jns
jnp
call
daa
pop
pop
pop
icebp
mov
stc
inc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
mov
stc
xchg
push
push
pop
shl
idiv
and
cld
je
xchg
pop
xchg
pop
not
je
ljmp
dec
cwtl
push
imul
sbb
mov
add
jno
scas
nop
pop
inc
adc
hlt
inc
dec
jle
jne
xchg
inc
ret
push
jp
gs
int
or
into
jbe
jns
pop
les
jmp
lock
aam
adc
out
mov
add
push
pop
in
hlt
or
adc
das
push
in
sbb
xor
pusha
adc
setle
cmp
leave
adc
adc
and
les
sub
jb
mov
mov
mov
cltd
in
or
cs
outsl
sbb
int3
push
cld
and
xor
dec
pushl
dec
push
ss
jg
aam
mov
ds
jge
int3
lret
andb
movsb
popf
lret
mov
adc
arpl
lock
rol
das
sub
leave
je
mov
loope
nop
lock
mov
into
es
mov
je
pushl
shll
movsb
and
push
cmp
ja
add
mov
adc
cmp
jne
push
pop
sbb
adc
mov
test
rcrl
and
dec
add
sub
pusha
or
mov
push
sbb
mov
push
mov
add
mov
xchg
dec
aaa
pop
fistl
mov
daa
incb
inc
neg
je
inc
lea
push
pop
mov
mov
pop
movsb
adc
pop
adc
xor
pop
sub
pop
cmp
jne
sub
mov
dec
xor
test
sbb
inc
sub
loopne
push
pop
loopne
aad
es
cli
dec
daa
pop
mov
adc
in
scas
fstl
pop
xlat
pop
inc
sbb
push
lcall
jb
sbb
hlt
inc
test
xor
inc
or
addl
adc
adc
dec
gs
or
cltd
insb
bound
adc
adc
roll
sbb
lret
add
mov
sbb
dec
cmpsb
ror
push
sahf
out
sahf
rcl
rcl
aad
ss
out
xlat
fcomp
fstpt
filds
mov
lcall
rclb
sub
mov
lcall
sbb
jno
push
pop
enter
incb
or
adc
push
lock
add
or
mov
and
sub
push
inc
out
xchg
divb
in
mov
call
pop
idivl
faddl
cmp
das
or
idiv
sbb
push
push
mov
bound
ret
pop
adc
push
lea
sbb
pop
and
fldcw
adc
jmp
fdivr
mov
mov
rorb
or
adc
fsubl
js
mov
or
lfs
cmovs
out
loop
sarl
mov
pushf
clc
into
ja
sub
sub
sbb
adc
mov
lock
cmp
sar
fisubs
add
or
inc
or
clc
or
inc
pop
lcall
out
or
xor
popa
inc
add
hlt
stos
and
icebp
cmp
push
testl
into
pop
es
sti
and
lea
pop
sbb
or
jae
dec
cmp
ja
inc
or
flds
imul
push
dec
dec
mov
jns
adc
in
ljmp
loopne
inc
or
movsb
mov
call
mov
jne
inc
jl
push
sub
pop
repz
test
rolb
push
mov
xor
push
sbb
or
loopne
dec
xchg
mov
or
or
jp
pop
enter
sub
cmp
push
mov
sub
movsb
sub
div
push
addl
mov
jge
jl
mov
inc
mov
rol
call
outsb
mov
cmp
ret
iret
jne
ja
inc
cmpsl
enter
add
xchg
loopne
cmp
sub
hlt
rorb
push
push
push
lret
pop
or
mov
mov
je
sub
inc
lods
ss
shrl
cmpl
bound
ficoms
jmp
dec
addr16
lret
inc
lods
lock
push
mov
testb
nop
idiv
cli
inc
cli
divb
mov
mov
cmpb
or
ljmp
adc
push
jnp
insl
gs
sbb
adc
cmp
lret
test
rolb
dec
push
clc
adcl
leave
mov
xor
mov
rolb
rol
les
iret
sbb
dec
dec
rolb
lock
sbb
ret
lods
cmpsl
add
dec
or
repnz
rcll
testl
sub
loop
out
push
cs
divb
bound
jb
pop
adc
mov
repnz
or
dec
call
fdivp
fcompl
dec
or
fdivrs
aam
jbe
mov
inc
inc
test
dec
ss
cwtl
mov
push
lcall
jl
mov
xor
lret
inc
push
pop
call
movsb
repnz
cmp
cld
lea
fcmovu
mov
mov
sub
cmpsb
push
inc
add
lods
lahf
mov
and
rolb
adc
aas
sbb
div
mov
test
test
jge
or
sbb
cs
and
and
jmp
add
movsb
jne
sbb
push
loopne
loopne
push
xor
mov
pop
out
jge
sub
loop
out
dec
sub
insb
sbb
adc
inc
add
inc
mov
push
xor
ret
insb
add
push
nop
cmp
call
adc
adc
adc
cmpsl
sub
xchg
pop
shr
nop
js
pop
sub
or
scas
xchg
jb
push
shll
test
jne
sbb
neg
icebp
jbe
adc
imul
adc
and
imul
cmovnp
fcomps
pop
add
and
push
cmp
paddusw
sub
jo
add
pop
sti
dec
xor
add
push
ss
rorb
mov
add
sub
add
jge
into
out
enter
loope
mov
dec
push
test
clc
mov
gs
add
enter
bound
push
shlb
add
add
mov
adc
mov
add
cld
jae
xor
or
mov
inc
ljmp
jmp
aas
push
adc
nop
dec
mov
dec
cmp
jge
push
push
and
sbb
bound
into
dec
sub
movb
dec
cmp
dec
cmp
add
dec
add
add
fadds
fwait
lcall
mov
xor
pop
and
mov
jb
int
pushf
adc
push
inc
ret
and
add
push
dec
sub
jbe
fldenv
aam
inc
or
sti
mov
add
add
add
sbb
test
out
sub
add
push
mov
ret
and
mov
mov
mov
adc
xor
jmp
mov
mov
shll
add
or
dec
push
sub
scas
add
aam
cmp
ds
imul
aam
out
and
push
ret
stos
push
pop
outsb
xchg
adc
or
jae
insb
fs
pop
pop
sbb
pop
mov
mov
iret
xor
adc
test
mov
mov
rcrl
add
mov
ret
mov
prefetchw
inc
adc
and
andl
inc
push
pop
dec
push
imul
add
cmpl
lcall
lret
sub
add
scas
movsl
or
je
dec
pop
cmc
xchg
fs
adc
xlat
aam
mov
dec
pop
lahf
push
add
mov
push
and
fabs
jo
and
and
sbb
inc
jge
xor
pusha
inc
mov
pop
jb
mov
lea
int
pop
and
cld
cld
add
push
and
je
ja
jo
enter
inc
stos
and
mov
addr16
into
xchg
sub
aam
out
mov
in
stmxcsr
adcl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
add
jbe
jle
pusha
mov
lret
je
and
sbb
inc
jg
inc
in
in
into
into
mov
stos
and
jg
or
push
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
mov
or
pop
add
mov
push
adc
lock
cmp
pop
lcall
add
add
repnz
shl
adc
add
and
enter
add
bound
or
je
test
mov
inc
sub
lcall
sub
jmp
mov
lret
in
lret
push
xor
popa
testb
or
scas
sbb
push
pop
test
xor
loop
inc
xchg
shll
pop
pop
mov
lock
xchg
cmp
mov
adc
push
and
xchg
sbb
push
out
sbb
cmpsl
pop
sub
push
leave
sbb
mov
push
sbb
xlat
jle
and
daa
imul
push
or
and
movsl
mov
loop
push
fisubl
cmpsb
pop
inc
jl
or
mov
mov
fcoms
orb
cwtl
push
mov
mov
aam
xlat
jnp
hlt
outsl
imul
cltd
fs
scas
les
inc
lock
shlb
push
mov
outsb
das
inc
push
add
push
out
je
roll
fwait
popa
mov
cmp
jbe
inc
inc
and
notb
int3
call
jle
and
ficoms
out
fwait
notl
jo
jbe
movsb
jns
jmp
pop
dec
jl
jmp
ja
lret
push
movsb
aam
fcomip
js
sbb
xor
repz
push
cmp
sbb
loope
rolb
loopne
movsl
movsl
jns
jmp
jmp
inc
xchg
fs
and
pusha
rcl
sbb
mov
jns
cmpb
sub
pop
xchg
inc
repnz
je
test
push
sub
in
xor
mov
aam
and
jecxz
pop
popf
cs
cmp
fcoms
cwtl
jo
mov
push
and
out
jge
adcb
sbb
inc
and
int3
sbb
xor
shlb
rclb
fcoml
mov
outsl
or
fmul
xor
in
stos
fisttpl
inc
sbb
rorl
xor
jmp
fs
mov
push
adc
jge
lea
jae
lret
cmovno
lods
pusha
push
pop
push
imul
fwait
inc
enter
xor
jl
and
xor
out
add
push
push
test
and
dec
add
xchg
loop
or
push
mov
fistpll
add
sub
aaa
mov
xor
imul
daa
jmp
push
push
xlat
sub
lods
xchg
jb
adc
pushf
sbb
pushf
lods
fsts
mov
or
adc
sbb
mov
repnz
dec
je
cmp
add
add
push
jne
push
inc
sbb
and
lods
movsb
cmp
outsb
xlat
lock
shr
xchg
pop
mov
push
rorb
or
test
push
mov
push
sub
sahf
add
adc
xchg
xor
add
rolb
orl
repz
mov
jno
add
jp
fsubl
pusha
jns
cmp
dec
sbb
dec
rcrl
inc
pusha
mov
and
pop
fbstp
inc
negb
mov
jg
xor
or
call
push
dec
and
mov
insb
cld
add
pop
jl
jno
cmp
lock
lea
ss
in
loopne
inc
int3
xor
add
mov
lock
mov
mov
push
mov
lret
fsubs
movsb
mov
loopne
jmp
dec
loop
and
fisttps
jmp
int
cmp
push
js
xor
mov
adc
pusha
adc
cmpsl
and
add
ret
inc
js
scas
mov
inc
sar
rorb
pusha
fcompl
xor
lea
shll
sub
add
mov
mov
movsb
rcl
orl
subb
fwait
push
and
push
adc
mov
hlt
xor
sub
add
push
add
sub
jbe
pop
popf
xchg
pop
testb
inc
mov
sbb
inc
inc
ds
adc
or
lock
push
xchg
movsb
fcomps
mov
roll
push
or
mov
sub
mov
pop
add
mov
shlb
int3
adc
test
add
daa
loopne
daa
pop
pop
test
sbbl
xchg
bound
test
std
data16
jnp
andl
inc
aam
mov
adc
pop
iret
jnp
jmp
js
in
pop
inc
and
and
sub
xor
add
add
gs
scas
mov
dec
call
pop
cmpsb
ss
scas
sub
popa
sub
outsb
out
cvttps2pi
aaa
cmp
xor
pop
and
sbb
pop
or
and
lahf
mov
cmp
jmp
not
jns
fstps
arpl
xchg
pop
ret
jmp
scas
sbb
ficoml
add
test
cmpsb
pop
sbb
add
dec
xlat
push
rolb
movsb
fucom
popa
pusha
cmpsl
push
mov
sub
add
fimuls
lock
or
dec
in
jl
addr16
outsb
push
push
repz
loope
inc
dec
or
out
aad
idiv
sbb
ret
addr16
or
enter
lock
push
inc
gs
loopne
outsb
arpl
adc
ficoml
les
add
xor
enter
mov
dec
cwtl
mov
sbb
sub
jp
loopne
imul
inc
lea
or
ror
inc
mov
test
in
test
xchg
ss
sbb
lock
in
jge
dec
rcll
jbe
imul
sbb
pop
sbb
je
or
enter
adc
clc
jle
adc
ret
repz
or
fdivr
shl
and
xor
mov
leave
iret
mov
rolb
repnz
xor
pop
cld
in
int3
dec
add
jle
and
enter
in
push
mov
leave
hlt
dec
jg
adc
fwait
in
adc
ss
in
cmp
add
inc
inc
adc
xchg
iret
in
pop
orb
dec
das
loopne
clc
pop
push
out
lcall
push
rolb
lea
xor
fsubrl
add
ficoml
movsb
pop
dec
in
dec
cmpsb
shl
and
shlb
cwtl
ss
and
jno
adc
addr16
dec
dec
fisubl
mov
or
and
mov
adcl
call
mov
les
movsb
sub
test
in
xchg
in
jb
sarb
or
mov
sub
in
ss
pop
leave
pop
shufps
mov
cmpsl
mov
addb
mov
aam
xchg
out
addb
push
lock
cmp
and
adc
fstps
add
jp
mov
in
xlat
and
mov
mov
and
fsubl
test
cmp
cmpsb
scas
inc
add
scas
push
add
insl
push
addr16
jmp
dec
or
cmp
lock
or
call
shrl
loope
mov
lods
dec
rcr
cmp
xchg
mov
test
jb
insl
stos
in
mov
es
les
test
push
xchg
into
add
push
adc
and
adc
xor
and
and
leave
and
dec
xor
and
dec
xor
inc
mov
dec
fs
fld
insb
add
jle
lahf
pop
mov
mov
imul
outsl
add
add
nop
add
aam
int
xchg
loopne
clc
hlt
gs
or
push
xchg
cld
leave
and
inc
clc
jmp
je
xor
add
adc
xchg
sbb
in
adc
mov
ret
mov
in
and
movsb
pop
adc
xchg
rorl
cmp
inc
rclb
sub
cmp
pop
mov
outsl
add
lea
xorl
out
add
adc
dec
jne
in
negb
es
lock
mov
lea
insb
popa
xchg
sbb
fwait
std
clc
call
mov
xchg
int3
lahf
mov
fwait
rcrb
aam
lods
shl
cmpsb
add
loopne
shl
and
xor
daa
sub
in
mov
cmp
jne
adc
inc
incl
test
fs
dec
inc
mov
subl
in
popa
mov
adc
lock
mov
test
adc
add
xchg
push
pop
stos
and
pop
fwait
or
call
leave
and
push
sub
dec
call
mov
xchg
jl
pop
fsubrs
push
fiaddl
push
enter
mov
cmp
cmp
xor
out
lock
xchg
cmp
insl
mov
sub
push
add
jg
gs
sbb
cmp
mov
push
inc
dec
add
nop
mov
jb
adc
jno
popa
push
cmp
nop
mov
cmpsb
les
mov
stc
mov
out
cmc
lods
int3
out
sub
sbb
add
das
push
into
je
rolb
out
mov
dec
or
sbb
arpl
ret
xor
xor
jge
adc
in
fcomp
aam
pushf
and
leave
orb
jecxz
mov
cmp
inc
mov
sub
jbe
mov
shrd
in
mov
mov
in
enter
ljmp
or
leave
xor
sbb
mov
lods
clc
mov
sbb
or
in
dec
add
or
shlb
scas
xchg
insl
pop
dec
pop
and
jg
test
popf
push
fmul
and
sub
shlb
sarl
push
mov
push
enter
or
mov
add
lock
or
fcoms
xor
and
ss
push
lods
int3
xor
adc
push
jmp
stc
push
mov
outsl
fmuls
mov
push
jns
push
sbb
mov
jecxz
mov
or
bswap
insl
jno
ret
mov
adc
in
jo
enter
je
mov
movsl
mov
add
adc
nop
dec
in
jo
mov
adc
xchg
mov
filds
dec
jg
jne
addl
pusha
add
out
inc
or
or
fildll
fcmovb
mov
xor
mov
rcrb
sub
adc
insl
fisubl
cltd
pusha
inc
add
jo
adc
cmp
jne
xchg
pusha
test
aas
mov
add
mov
je
iret
je
inc
push
pop
mov
xor
out
fbstp
xchg
or
dec
test
iret
in
jecxz
lahf
in
lock
lods
das
dec
dec
add
cmp
lahf
imul
jg
test
jbe
gs
pop
int3
roll
cmp
lock
dec
mov
aaa
je
inc
pop
ret
mov
push
adc
mov
jg
shrd
mov
push
fcomps
rclb
hlt
sbb
dec
sbb
push
sbb
add
lock
ret
mov
mov
add
lock
sub
or
and
in
inc
dec
cs
mov
fcomps
stos
aad
les
call
in
cwtl
cmpl
clc
mov
int
jns
pusha
insl
cmp
imul
pop
inc
stos
sub
and
sbb
push
mov
add
adc
cmp
nop
popa
stos
or
or
nop
inc
push
or
or
or
rcll
adc
in
daa
subb
push
sub
nop
or
mov
push
and
int
sahf
push
fiaddl
insl
pop
push
test
mov
inc
xchg
pusha
shrb
or
lcall
add
lahf
fs
xor
aaa
mov
lahf
xchg
or
adcl
daa
insl
sbb
in
test
and
pusha
lahf
icebp
ss
adc
aas
ljmp
push
jno
lahf
xchg
or
mov
dec
and
mov
jl
push
enter
mov
cmp
pop
mov
in
pop
add
enter
mov
scas
mov
into
jb
or
movsb
xchg
popf
nop
push
or
popf
lcall
sbb
push
xchg
and
lock
adc
inc
aam
cwtl
mov
sbb
or
jmp
mov
or
adc
out
pop
sbb
pop
mov
movsl
cmp
add
adc
and
leave
mov
jmp
dec
inc
mov
xchg
rorb
cmpsl
int3
divl
mov
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
cwtl
mov
push
addr16
dec
outsl
movsb
movsl
addb
orl
test
movsb
dec
mov
das
nop
or
movsl
test
aad
ret
inc
dec
enter
or
and
std
adc
int3
push
mov
lods
xchg
test
push
xchg
nop
mov
cmpb
fwait
lcall
stos
bound
in
int3
mov
mov
nop
or
mov
sub
das
je
pop
dec
mov
mov
cwtl
mov
les
pop
push
popf
inc
imull
cmpsl
and
loop
adc
fcompl
dec
pusha
xor
inc
in
or
adc
sbbb
mov
xor
sarb
sub
fbstp
test
imull
push
sub
repnz
test
sub
add
push
push
call
jg
addb
sbb
je
or
insb
movsb
jnp
sub
mov
push
in
call
lock
or
les
push
add
mov
jne
xor
cmpsl
les
mov
aas
shrd
fidivs
ucomiss
mov
faddl
cwtl
bound
pop
mov
jo
cmpsl
pop
push
test
dec
fsub
call
adc
sbb
shlb
loopne
loopne
adcb
test
in
adc
sbb
in
stos
fmuls
stc
cs
or
xor
std
mov
jae
inc
sti
and
jl
movsl
or
sub
stos
cmpl
adcb
add
inc
scas
xor
imul
les
popa
mov
adc
fsubrl
cmpl
dec
test
and
pop
aam
inc
das
mov
inc
ret
lcall
test
pop
enter
pop
iret
pop
add
mov
dec
and
jg
pop
insb
push
sub
add
lods
sbb
adcl
or
cwtl
push
sub
fwait
mov
inc
xor
pop
mov
adc
js
movsl
push
and
stc
xchg
call
incl
mov
mov
and
adc
or
jmp
js
lahf
sub
scas
rclb
jo
inc
sub
add
mov
xor
aam
or
sti
rolb
mov
lods
mov
pop
xorl
xchg
test
scas
cs
mov
into
enter
dec
enter
and
pushf
insb
xor
aad
jne
pushf
cmp
stc
mov
test
fsubl
sub
fsubr
mov
in
int3
jb
subb
inc
les
mov
inc
call
ficoml
xchg
push
or
add
jle
jnp
jg
push
rolb
sbb
mov
mov
dec
rcrl
nop
popa
adc
adc
lds
call
stos
or
aas
inc
mov
fadds
test
add
pop
and
mov
mov
fcompl
or
and
sbb
or
adc
bnd
pushf
std
push
or
cwtl
add
inc
dec
repnz
insb
test
push
nop
inc
push
cmp
in
cld
adc
push
lock
sahf
mov
inc
and
or
lock
js
fs
faddl
in
test
inc
es
sbb
lock
pop
hlt
mov
push
fiaddl
xor
mov
or
in
orl
xor
adc
in
or
daa
and
inc
xor
pop
push
xchg
les
aam
adc
pavgw
or
outsl
int3
arpl
xchg
rorl
mov
pop
mov
lds
insb
fdivr
mov
jno
pop
jb
lods
das
ret
les
enter
lock
test
xor
and
add
pop
add
bound
jae
ja
add
push
add
lgdtl
sbbb
and
out
inc
mov
push
repnz
inc
mov
or
scas
mov
es
or
outsl
pop
pop
inc
pop
mov
push
adc
aam
add
ljmp
inc
xor
decl
lahf
test
pcmpeqw
pop
es
out
sub
rcrb
and
dec
fcmovnu
lods
dec
adc
jo
dec
jae
pusha
lea
pushf
push
pop
leave
pusha
out
out
xor
add
mov
pop
inc
sti
add
cmpsb
mov
les
mov
mov
fmuls
rorb
loope
movsl
pop
pop
mov
mov
imul
or
enter
mov
pop
mov
or
mov
or
in
rclb
scas
sub
aam
test
roll
inc
xchg
les
rorl
rcrl
jecxz
arpl
rcr
pop
inc
cmp
xor
mov
das
or
test
js
and
mov
gs
mov
outsb
in
call
jg
test
xor
xchg
or
int3
popa
mov
loope
xor
and
icebp
aam
enter
inc
adc
mov
ret
cmp
ss
aad
in
xchg
pop
or
test
pushf
xor
in
pop
push
and
pop
inc
mov
rclb
jg
out
mov
movsb
sar
lods
inc
push
mov
faddl
stos
test
movsl
mov
push
aam
shlb
lds
mov
lea
in
pop
test
test
popa
adc
mov
lods
push
test
adc
ret
mov
aad
pop
stos
lea
or
cs
add
add
rorb
bound
nop
jnp
or
les
insl
les
and
adc
pop
mov
shlb
adc
inc
jne
dec
mov
jbe
mov
fwait
xchg
mov
mov
int
inc
test
mov
les
les
enter
mov
int
sub
daa
inc
imul
pop
incl
sbb
fsub
notb
movsl
movsb
nop
out
and
sub
cmp
inc
sti
pushf
or
add
rclb
nop
or
out
mov
nop
andb
lods
mov
add
inc
mov
push
and
test
add
test
aam
or
add
les
pushf
sti
insl
pop
mov
lcall
pop
enter
push
cwtl
dec
mov
fidivrs
adc
test
fucomi
cwtl
in
mov
cmp
les
push
or
push
lods
adc
or
lods
roll
rorb
pop
mov
cmp
jp
neg
out
add
pop
fsubr
out
stc
mov
fsubs
mov
add
icebp
orb
mov
adcb
dec
cmp
arpl
int3
pop
out
lret
lea
add
pop
lock
mov
nop
lret
fstpl
lock
rclb
je
push
arpl
in
lcall
test
sar
dec
fadd
pushf
fwait
lods
dec
repnz
dec
in
cmp
and
dec
cmpsb
xlat
push
andb
mov
xchg
pushf
dec
cwtl
pusha
in
dec
cmpsb
fs
push
cmpsb
push
fs
jbe
sub
fdivr
dec
or
inc
cmp
lods
mov
ja
vpclmulqdq
loopne
xor
lahf
add
push
cmp
out
leave
fwait
xor
adc
mov
add
mov
push
cltd
or
in
add
add
push
cltd
nop
sti
or
nop
or
fs
and
mov
inc
or
enter
mov
int3
fwait
ja
xor
jo
adc
xor
cltd
xchg
pop
xchg
and
pop
mov
js
in
imul
add
add
in
push
in
cmp
add
fs
xchg
or
shrl
push
das
call
add
out
pop
test
or
in
andl
rcll
lret
aaa
dec
push
in
jg
push
or
add
fsubl
std
xchg
invd
xor
aad
das
fildl
or
sbb
push
dec
shr
or
arpl
dec
sbb
sub
xor
ret
cmp
or
inc
jecxz
out
sbb
push
cld
rclb
rcll
pop
cmp
inc
sub
add
adc
je
push
pop
sbb
inc
cld
adc
and
shr
cltd
movsb
insb
add
call
pop
adc
rorl
push
push
cmp
cltd
mov
pusha
inc
or
cmp
sbb
sub
shlb
xor
ljmp
add
sar
xchg
hlt
call
mov
mov
or
dec
xor
and
xor
mov
xor
sbb
in
push
or
loopne
bound
movsl
aad
loopne
push
adc
aam
push
pop
xchg
inc
das
por
lds
mov
mov
icebp
ja
mov
and
or
inc
nop
addb
push
call
push
shll
dec
gs
mov
push
fistl
push
lea
insb
gs
insl
push
mov
xor
pusha
xchg
pushf
pop
jne
fcoms
test
xor
push
rol
jns
xor
push
pop
adc
mov
loopne
push
fldcw
imul
call
inc
sbb
xchg
sti
and
mov
jo
push
add
fwait
lods
gs
mov
pusha
cmpb
mov
jno
aas
xlat
rolb
xchg
xchg
or
pop
jle
movsl
push
mov
scas
inc
jae
setnp
mov
push
and
pushf
adc
xchg
mov
xchg
dec
xor
insl
pop
insb
hlt
dec
xor
and
push
js
leave
and
push
dec
inc
sub
scas
mov
daa
imul
mov
nop
inc
push
or
rolb
and
cmc
in
jecxz
les
fcoml
addb
addb
pop
or
dec
addr16
fs
imul
int3
enter
xchg
xor
scas
and
cmp
cmp
adc
cltd
je
mov
cmpsl
cmp
jecxz
mov
dec
mov
fidivl
sub
stos
push
repz
push
mov
test
orb
lods
mov
les
or
adc
mov
dec
enter
mov
arpl
test
jl
js
loopne
mov
push
adc
sbb
dec
jecxz
and
push
fwait
nop
rcrl
cwtl
add
mov
enter
les
lahf
adc
jg
movsb
lods
inc
loope
cwtl
loope
imul
das
dec
insb
or
daa
jns
fadds
loop
aam
lods
pop
stos
sub
jbe
push
pop
in
cmp
enter
mov
loopne
insl
jb
sbb
jmp
inc
insb
adc
xor
cmpsl
cltd
int3
cltd
jbe
xchg
inc
lock
cmpl
lock
sub
push
inc
adc
jns
lea
xchg
push
lret
jecxz
test
jno
jns
leave
dec
xchg
jb
shr
adc
lds
leave
inc
in
adc
sbbb
xor
cmc
ret
pop
test
pop
push
mov
mov
scas
inc
dec
lds
in
sub
mov
dec
nop
test
push
xor
mov
stc
lock
test
inc
mov
cld
pusha
xlat
xor
fcmovne
push
push
fcoms
mov
lock
add
outsb
pusha
adc
push
add
xor
add
xchg
and
and
fisttpll
out
sub
dec
mov
insl
adc
pop
dec
in
lock
inc
mov
sbb
push
sub
adc
mov
inc
mov
and
call
shl
orb
nop
out
rolb
lods
push
jecxz
aam
xor
sbb
lods
nop
pop
pop
sarl
add
or
insl
add
fdivrp
mov
xor
enter
sbb
cli
mov
sbb
cld
cli
scas
fs
orb
inc
dec
mov
dec
jb
hlt
add
adc
js
insb
inc
mov
pushf
movsb
je
sti
test
ss
xchg
sti
and
adc
test
pop
and
sbb
sub
inc
inc
dec
rorl
cs
adc
and
leave
inc
xchg
xchg
cli
call
lea
inc
sbb
shl
scas
movsl
adc
push
xchg
dec
cmpsb
dec
fs
pop
insb
insb
scas
js
pop
adc
adc
add
fcoms
jo
jo
mov
cmp
cltd
inc
push
cwtl
dec
push
icebp
push
xchg
add
pop
adc
pop
sbb
insl
adc
ficompl
nop
iret
faddl
es
rcr
nop
xor
jnp
push
fwait
push
enter
dec
in
mov
inc
pop
adc
or
dec
or
push
ret
aas
jo
insl
adc
dec
jl
nop
sub
mov
mov
push
bound
loop
repnz
loop
xchg
push
sbb
and
std
mov
rolb
rcr
mov
daa
sbb
pop
push
pop
fucomip
push
pop
inc
hlt
out
pop
adc
add
in
or
aaa
int
clc
pop
push
in
mov
sub
mov
divl
subb
jmp
xor
jne
vmovaps
xor
push
call
or
inc
bound
mov
movsl
inc
in
into
ja
and
xchg
cmp
push
int
jne
dec
push
scas
dec
adc
xor
dec
movsl
pop
imul
push
mov
inc
mov
push
cmp
mov
mov
repz
dec
and
fisttpl
out
fsubrp
sahf
out
cmp
int3
in
xor
add
outsb
or
adc
lcall
xchg
stos
and
xor
jns
nop
add
pop
sti
sahf
negl
push
testl
sbb
inc
add
jne
movzwl
pmulhuw
lods
xchg
pop
push
lock
inc
add
decl
ljmp
add
fistpl
or
jnp
mov
sub
stos
or
pop
and
aaa
ljmp
lahf
and
jnp
or
adc
out
leave
ljmp
adc
mov
push
cmp
repz
pop
dec
inc
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
call
push
push
push
push
mov
pop
popa
bound
gs
jmp
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
dec
incl
daa
adc
mov
rcll
xchg
adc
push
or
cmp
xchg
stc
cmp
adc
pop
push
rolb
in
stc
mov
ds
push
mov
or
mov
rorl
je
jb
outsl
arpl
fs
pop
cmp
out
sbb
push
dec
imul
pushl
fdivs
cmp
jb
gs
xor
cs
adc
iret
jg
bound
and
popa
je
outsl
outsb
jbe
mov
sbb
lock
paddsb
pop
jbe
add
incl
sub
sbbb
sahf
hlt
and
rolb
inc
outsl
jb
js
mov
imulb
push
jb
gs
cmp
or
outsl
add
gs
push
addb
push
orb
push
inc
jb
xor
popa
mov
ss
inc
jne
jb
mov
outsb
popl
dec
xor
xor
cmp
out
stos
add
dec
and
jns
out
lcall
adc
push
dec
push
inc
mov
gs
insl
bound
daa
dec
outsl
jbe
xchg
je
adc
jo
sub
xor
mov
dec
jne
xchg
mov
inc
jo
imul
bound
cmp
insb
adc
cmp
scas
cmpsl
xchg
popl
xor
pushf
jg
addr16
push
jne
imul
adc
and
daa
int3
fimuls
scas
clc
sbb
dec
into
fdecstp
push
js
push
jne
xchg
int
pushf
jae
dec
inc
ds
popa
das
jo
push
lds
ffreep
sbbb
xor
call
mov
sbb
or
loopne
push
add
sub
push
ret
and
sub
sub
cs
movsl
cmp
dec
cmp
cmp
ds
inc
das
pop
pop
dec
push
adc
jnp
jge
dec
mov
jle
add
arpl
test
js
repz
dec
add
dec
pusha
pop
imul
movl
outsb
fs
inc
insb
jae
cs
fs
pushf
cs
lcall
mov
inc
or
xor
insl
and
mov
insb
add
jbe
dec
push
push
sbb
mov
dec
dec
inc
sbb
and
push
fwait
loope
cmp
xor
sbb
push
xor
insb
imul
insl
pop
mov
pop
push
shr
je,pn
jo
xchg
mulb
or
pop
mov
and
fs
pusha
addl
imul
data16
pushf
or
xorb
inc
popa
and
mov
fidivrl
sbb
xor
mov
data16
push
xchg
or
aas
xor
loopne
fidivs
dec
mov
add
scas
lcall
mov
test
and
or
mov
sbb
jp
push
xor
ficomps
fs
xchg
jnp
mov
mov
je
and
rolb
push
ds
data16
daa
fidivrl
and
jo
fsubrs
mov
push
add
daa
sub
sub
xlat
and
das
arpl
cmp
arpl
pusha
popa
sub
mov
mov
add
inc
xchg
insb
imul
gs
inc
inc
orl
lcall
mov
pusha
and
xor
gs
ret
sub
push
fistps
push
xor
cs
aaa
mov
xchg
shll
inc
jns
cmp
pop
dec
jae
dec
add
add
inc
xor
ja
outsl
jl
dec
pop
outsl
ss
fs
jb
xor
imul
inc
inc
xchg
push
inc
cmp
mov
data16
jmp
das
mov
mov
adc
cmp
inc
jle
lcall
out
push
cmp
jo
bound
pop
enter
inc
aaa
insl
jmp
add
in
ljmp
sbb
imul
pop
or
cmp
inc
jno
rclb
mov
pusha
mov
nop
inc
insl
imul
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
test
dec
cmp
mov
pop
pop
data16
lret
inc
sub
pop
dec
mov
or
jo
and
jbe
insl
mov
inc
imul
test
and
dec
cmp
fwait
int3
outsb
inc
jg
lcall
loopne
jbe
jae
add
stc
mull
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
sbbb
gs
popa
mov
add
xor
jg
mov
outsb
popa
js
jae
je
pop
push
pop
add
add
xchg
cmp
sub
xchg
adc
add
add
adc
add
add
add
clc
jg
rolb
add
and
push
pop
pop
or
aaa
clflush
push
push
pop
hlt
and
or
pusha
add
int3
sti
lcall
sub
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
cmp
mov
push
inc
or
js
jo
xchg
out
insl
dec
rorb
sbb
xchg
xchg
lea
mov
mov
push
mov
lock
dec
sub
pop
push
adc
sub
dec
pushf
lock
pop
pop
add
ret
adc
cs
pushf
cmp
pop
or
pushf
jo
je
xorl
push
sti
repnz
push
icebp
mov
aaa
push
xor
xchg
sbb
and
and
nop
jl
add
test
sbbb
add
and
add
mov
ja
add
adc
add
add
inc
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
imul
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
and
roll
stos
sbb
decl
aas
mov
sbb
push
int
fists
outsl
ja
mov
push
jae
jb
bound
je
sub
stos
inc
ss
mov
mov
repnz
sub
daa
pop
lea
dec
mov
outsl
js
fisubrl
inc
push
mov
inc
jmp
lea
insb
gs
mov
dec
pop
movsl
outsb
jnp
mov
in
dec
imul
pop
jns
inc
mov
imul
push
inc
and
inc
jb
jns
daa
add
enter
dec
pop
jnp
jns
mov
or
arpl
stos
or
cmp
outsb
pushw
dec
add
arpl
mov
push
pusha
inc
ficompl
mov
jbe
push
push
lahf
movsb
sbbl
and
xor
dec
or
imul
cmp
or
pusha
gs
push
mov
insb
mov
dec
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
sub
sbb
inc
add
or
add
lahf
out
sahf
in
rol
mov
outsb
dec
and
inc
push
hlt
sti
aam
mov
push
js
push
movsb
mov
out
cwtl
xchg
nop
test
xor
push
jl
sub
fs
jge
lock
je
adc
push
int3
jo
jae
jnp
push
insb
push
ds
pop
add
push
out
repz
repz
inc
inc
cmp
sahf
out
lret
and
adc
jns
jg
incl
loopne
lods
mov
out
sahf
insb
dec
sub
in
dec
cmp
repz
andb
cmp
repz
cmp
add
jns
out
std
aam
mov
jl
cmp
hlt
cld
shrb
push
cmp
movsb
aam
lcallw
push
outsb
push
xor
test
ljmp
fldenv
cmpsb
bound
dec
mov
sbb
je
popf
addr16
xor
es
xchg
jp
lods
pcmpgtw
xor
add
sub
sarb
insb
xorb
dec
jae
insb
inc
gs
mov
sbb
dec
inc
dec
divl
cld
lret
inc
dec
dec
dec
push
push
mov
and
inc
dec
add
out
xor
dec
dec
inc
add
adc
sub
adc
decl
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
adc
jmp
aas
clc
lret
sbb
jb
xchg
jge
arpl
cmp
inc
incb
adc
dec
scas
jp
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
aaa
test
ds
dec
and
lods
cmp
jg
jg
xor
into
mov
pop
daa
in
pushf
pop
repnz
and
imulb
lret
es
mov
jle
add
push
dec
push
insb
ret
dec
inc
inc
or
outsb
jbe
and
add
cmpsb
push
jo
inc
scas
arpl
nop
sbb
jbe
jge
sbb
inc
push
and
repz
dec
push
dec
push
sub
mov
out
jmp
sbb
xor
inc
and
cs
pop
push
inc
inc
cmp
push
xor
cmp
pushl
cmp
inc
dec
dec
and
adc
xchg
xor
cs
sbb
pop
mov
imul
sub
pop
dec
and
and
adc
aam
jge
icebp
dec
adc
cmp
cmp
xchg
sbb
xor
push
sbb
pop
push
cmp
and
sub
sub
sti
sbb
outsb
push
es
cs
push
xor
and
dec
dec
xor
ljmpw
add
add
pop
pop
cmp
adc
subb
pop
adc
inc
push
cld
pop
pop
push
and
testl
sbb
out
inc
pop
and
outsl
fistpll
or
or
sub
push
sub
sbb
or
pop
mov
sbb
das
das
xor
or
jge
inc
xchg
pop
dec
jnp
ja
add
push
add
mov
pop
aad
sbb
and
cmp
dec
pop
adc
sub
cmp
pop
mov
sbb
push
lea
push
or
ss
sub
sub
cmp
or
lret
xchg
cmp
inc
xor
dec
and
sbb
mov
sbb
dec
and
or
das
sbb
rorb
outsb
mov
mov
xor
pop
cmp
rol
or
sbb
int3
adc
adc
push
fadds
outsl
cmp
jle
xor
out
call
inc
inc
and
and
mov
sub
mov
push
mov
push
push
push
mov
push
mov
fidivrs
inc
and
ja
pop
push
gs
out
or
ja
decl
sbb
and
and
or
and
mov
sbb
popf
push
sbb
jo
inc
and
jecxz
pop
push
inc
dec
mov
xor
movsl
sbb
std
ljmp
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
mov
and
inc
pusha
ss
pusha
jo
pop
repz
and
mov
out
lock
xor
adc
jne
loopne
inc
outsl
jg
push
xor
push
jo
cmp
inc
pusha
pop
xor
push
and
pop
div
mov
inc
cwtl
or
data16
push
ss
push
jp
cmp
outsl
insl
mov
pop
and
insb
popa
sub
push
popa
mov
push
ret
imulb
mov
bound
xor
and
testb
nop
push
push
push
lock
scas
iret
repz
xor
clts
mov
adc
inc
jo
shl
sahf
test
inc
push
mov
push
push
pop
push
jo
sarb
cmp
mov
adc
pushf
fwait
push
pop
insb
push
xor
pusha
dec
sub
xor
cmp
cmp
push
or
pop
aam
push
cmp
sbb
inc
adc
sub
js
inc
jbe
mov
or
sub
inc
sbb
inc
inc
adc
pop
iret
stos
mov
nop
inc
or
jmp
push
fstp
fsubrp
js
or
adc
inc
push
inc
lcall
jmp
pop
add
or
mov
xor
jb
adc
pop
push
insb
push
ss
pop
mov
adc
insb
pusha
cmp
fildll
sarl
sbb
pop
push
ucomiss
sbb
jp,pn
and
push
push
shll
pop
in
mov
cmp
dec
cmp
pop
dec
inc
push
out
dec
ja
ja
ret
test
out
sub
ret
cld
xor
sbb
sbb
pop
cmp
add
sbb
mov
sbb
mull
hlt
mov
xlat
push
outsb
scas
inc
dec
pop
dec
popa
or
add
test
pusha
xor
pop
pop
popa
mov
xor
xor
jo
jl
add
jae
cmp
mov
add
or
das
fwait
lcall
das
push
bound
shll
push
daa
addl
pop
and
jne
into
sahf
adc
pop
cltd
and
fiadds
xor
sub
or
mov
ss
and
and
xchg
stos
pop
sbb
and
fimuls
xor
push
jle
fiaddl
scas
pop
cld
sbb
icebp
xor
pop
inc
add
inc
mov
pop
xchg
mov
push
popa
cmp
stc
and
in
in
pop
ds
push
sbb
xchg
pop
pop
inc
sbb
and
mov
adc
xor
ja
and
in
cmp
pusha
addr16
aaa
push
push
fisubs
or
and
pop
ret
scas
pusha
push
xor
mov
xchg
iret
daa
in
sbb
mov
add
push
lods
pop
xor
and
popa
mov
cmp
mov
in
fidivs
sub
mov
mov
lret
cmp
dec
mov
push
push
scas
and
pop
lds
sbb
adc
shll
mov
sbb
test
aas
push
add
stos
lahf
and
sahf
adc
adc
add
xchg
lret
adc
pop
mov
pop
adc
dec
and
lret
and
lcall
cmpsb
sbb
xchg
xor
bound
xor
test
dec
adc
and
inc
daa
test
inc
sbb
pusha
sbbl
sarb
pop
sbb
or
or
add
add
and
mov
into
and
jo
push
scas
imul
ret
pop
pop
inc
imul
adc
decb
pop
inc
adc
adc
adc
ja
std
lock
add
sbb
xorl
and
cmp
or
rorb
push
ss
and
pushf
push
mov
mov
add
js
sub
jle
pop
jae
shrl
add
jg
addb
jae
insl
popa
imul
adc
push
push
mov
outsl
jo
dec
data16
dec
les
lahf
push
ja
or
lods
icebp
mov
push
aam
outsb
out
sahf
out
int3
add
les
mov
pop
mov
mov
lods
pop
cmp
and
add
pop
dec
jecxz
or
popa
scas
or
add
shl
pop
je
sub
stos
scas
mov
sub
push
dec
dec
dec
mov
sub
xor
dec
nop
mov
or
sub
xor
sbb
std
popf
lds
sbb
push
add
hlt
push
xor
fsubr
lds
fs
sub
or
mov
xlat
xchg
pop
lret
push
cld
add
fadds
inc
sub
rorb
inc
inc
inc
add
mov
mov
into
mov
xor
cmp
sbb
ret
sub
daa
mov
les
scas
out
pop
dec
push
add
and
aaa
xor
addr16
lock
outsb
aaa
dec
sub
pop
adc
sbb
dec
and
aad
push
cmpsl
jl
or
pop
and
data16
js
and
cmpsb
or
pop
out
and
das
sbb
sbb
lods
ret
out
sub
cwtl
pop
ljmp
push
insb
outsl
jb
bound
dec
pop
insl
cmpl
insb
push
je
and
jae
popa
jle
je
mov
mov
jmp
jle
push
das
and
xor
js
jle
mov
add
add
jae
adc
push
xchg
imul
xor
loop
cmp
call
pop
sbb
and
addr16
add
dec
mov
or
xchg
mov
mov
mov
outsb
or
adc
jns
insb
fstpt
sub
xor
inc
mov
mov
gs
mov
mov
data16
shlb
add
test
sub
fldcw
add
or
adc
fwait
int
and
add
add
fldcw
dec
str
int
cwtl
or
and
das
incl
sahf
or
and
or
push
xor
dec
mov
sub
adc
and
icebp
pop
sbb
sub
movsb
mov
sti
adc
push
sub
dec
mov
push
dec
sub
push
das
add
xor
fs
fdivl
push
test
or
aaa
loop
clc
xchg
jb
outsl
imul
flds
outsl
lods
or
inc
pop
adc
xor
nop
fsts
pop
cmp
push
inc
add
xor
adc
inc
add
incl
or
inc
pop
push
or
adc
push
pop
cmp
inc
movsb
ljmp
sbb
mov
sbb
push
cmp
aas
ja
mov
es
dec
sub
push
mov
gs
add
cmp
inc
and
adc
and
dec
cs
les
xchg
dec
fwait
jle
and
inc
xor
push
enter
jp
subl
sbb
xor
adc
mov
ss
leave
fisubl
sbb
mov
mov
lcall
inc
inc
cmp
leave
xchg
fadds
sbb
dec
adc
xchg
cmp
xlat
pop
xor
popa
outsb
jl
xor
jo
mov
imul
scas
cmp
das
pop
ja
sbb
push
mov
hlt
test
jo
cli
sbb
adc
cmp
pop
jns
mov
xor
dec
jo
adcl
not
in
in
sub
fs
sub
xlat
jo
cs
outsl
push
jo
shl
pop
pop
inc
fldt
fnstenv
sub
and
adc
es
dec
dec
inc
inc
inc
xor
adc
les
in
aaa
add
ret
pop
inc
cmp
cmp
cwtl
test
out
jbe
rorl
adc
pop
jmp
inc
sub
and
aad
test
and
inc
js
dec
cmp
mov
add
mov
dec
inc
fbld
rolb
adcb
push
push
in
sarl
push
push
inc
pop
jo
pop
daa
out
addb
push
gs
pop
adc
and
loop
sub
and
push
jo
adc
orb
xor
sbb
adc
and
call
loop
adc
lea
inc
inc
or
adc
loope
das
rolb
ret
mov
push
clc
sbbb
cmpsb
cmpsb
sbb
cmp
cmp
daa
pop
mov
adc
adc
jecxz
sbb
mov
sbb
arpl
sub
jnp
lahf
rclb
test
add
stos
pop
xor
and
sarl
push
pop
sub
and
dec
pop
call
clc
xor
pop
jne
fcoml
sub
nopl
rcrb
cmp
pop
mov
pop
and
inc
daa
xchg
pop
adc
inc
rcll
push
jnp
inc
jecxz
sub
inc
leave
inc
inc
sbb
icebp
mov
push
and
in
pop
and
sub
imul
and
or
pop
push
pop
push
pushl
sbb
cmp
mov
and
dec
xchg
push
mov
clc
xor
jle
inc
push
rolb
gs
mov
fmull
pshufw
daa
push
xor
mov
cwtl
lea
call
repnz
add
cld
mov
or
addb
test
push
or
addl
and
sbb
imul
mov
push
push
jge
push
inc
das
and
inc
das
add
push
inc
das
push
dec
das
dec
fbstp
incl
inc
sub
inc
sub
mov
inc
push
xor
or
or
pop
shrl
int3
push
inc
push
cs
lcall
adc
jbe
dec
cmp
cmp
dec
mov
shrb
xor
pop
inc
add
ss
xor
jg
scas
sbb
mov
add
cmp
cmc
pop
mov
adc
mov
dec
inc
and
and
push
adc
notl
adcl
pushf
sbb
out
pop
push
imul
out
xchg
cltd
or
imul
inc
ret
or
cltd
in
mov
negb
sbb
and
sub
das
sbb
xor
in
test
inc
sub
cmp
popa
pop
or
aaa
adc
sbb
loope
popf
sbb
fs
and
jno
fisubl
xor
sarl
pop
jae
inc
mov
daa
and
dec
pop
popl
movsl
in
in
xchg
inc
push
arpl
sub
in
add
push
lret
std
pop
fcoms
pop
mov
pop
pop
inc
sbb
insl
mov
into
mov
add
aaa
subl
inc
inc
mov
or
xchg
pop
push
inc
xchg
dec
fcoml
arpl
jg
test
daa
mov
inc
out
lods
pop
inc
cmp
loope
rcrl
inc
cmp
dec
push
sub
pop
stos
cli
inc
dec
inc
dec
adc
push
push
pop
pop
adc
push
pushf
or
movq
or
mov
testb
push
sbb
cmp
adc
nop
test
scas
inc
inc
sbb
mov
aam
loop
jne
je
xchg
daa
notl
popa
jne
fdivl
inc
sub
cld
scas
rolb
adc
cmp
pop
arpl
ds
adc
or
sbb
sbb
pusha
add
push
sub
pop
pop
xchg
lods
movsl
add
cmp
pop
mov
ss
cmp
inc
cmp
testl
jno
in
and
or
push
adc
mov
cwtl
aam
sbb
negl
sbb
push
icebp
aaa
rcrl
mov
xchg
add
aaa
loopne
add
ss
aam
pop
jae
sub
insb
gs
xchg
sahf
jg
ja
fs
gs
pop
lods
push
mov
das
mov
pop
sbb
and
jb
push
and
dec
and
movsl
xchg
push
push
inc
add
andb
cmp
sub
cs
mov
shrb
insb
ss
int
loopne
add
mov
out
sahf
idivl
es
inc
ds
inc
pusha
cmpsl
sti
push
inc
push
inc
dec
push
push
adc
in
mov
pop
inc
testb
sub
addr16
push
dec
dec
jg
push
adc
add
aaa
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
and
das
mov
sbb
mov
ds
pop
sbb
xchg
sub
subb
adc
jg
fsubs
sbb
repnz
jg
mov
pop
dec
xchg
pop
shl
dec
push
jbe,pn
and
adc
adc
pop
push
and
xor
aaa
xor
stos
mov
sbb
and
xlat
data16
mov
js
or
push
les
adc
out
xchg
xchg
aaa
in
push
dec
imul
jae
dec
pop
cmp
sub
leave
and
in
imul
dec
sahf
xchg
out
cmp
inc
mov
dec
test
dec
jl
loopne
mov
insb
inc
js
cmp
cmp
pop
rcr
dec
ds
pop
int3
pop
cmp
test
dec
or
fistps
mov
dec
dec
jnp
cmp
incl
xor
sub
sub
xor
inc
xor
inc
adc
inc
xor
scas
subb
jne
cmp
insb
push
outsb
add
addb
and
das
js
notb
jne
push
ficoms
mov
push
jb
push
scas
dec
sub
xchg
jne
lock
std
je
bound
mov
or
dec
push
or
mov
add
lahf
and
cmpsl
aaa
xchg
ja
rclb
das
lea
xlat
das
not
mov
cmp
es
inc
xor
pop
inc
xor
pop
mov
out
ja
aaa
add
mov
adc
shll
dec
push
sbb
inc
or
cli
movsl
jg
xchg
push
push
and
clc
and
xchg
xchg
adc
push
ficompl
xchg
inc
fdivs
mov
sbb
xchg
outsb
xor
or
inc
and
xchg
divb
cs
add
and
mov
outsl
aaa
movsb
test
mov
into
inc
mov
or
shrl
fistpll
in
das
inc
cli
inc
dec
das
cs
mov
sub
cmpsl
lcall
dec
mov
leave
add
addr16
inc
scas
shlb
push
sahf
int3
es
xchg
int3
pop
xchg
sahf
out
cmpsl
jge
xchg
mov
lahf
pop
mov
in
mov
lret
pop
inc
or
push
sbb
in
scas
insb
push
and
pop
cs
out
sti
mov
push
iret
in
iret
pop
movsb
xchg
insl
mov
mov
cmp
ds
jns
lods
mov
shlb
popa
jne
cmp
mov
mov
mov
cs
mov
imul
imull
pop
cmpsl
paddw
sbb
pop
dec
popw
insb
pop
pop
aam
scas
fsubs
nop
sarl
cmpsl
data16
insb
pusha
fnstcw
mov
mov
mov
dec
mov
mov
push
mov
outsl
fs
sarb
cs
push
cs
push
shrl
idivl
cmp
out
sahf
out
jns
dec
imul
pop
xor
inc
loope
fldenv
aaa
sti
xor
push
mov
mov
fcomi
sahf
arpl
mov
int
mov
rclb
mov
sub
ja
push
rolb
cmp
jns
imul
cmpsb
sti
lock
imul
pop
dec
push
mov
testb
jno
mov
fistps
mov
addl
jno
nop
insb
lahf
idivl
mov
dec
xchg
neg
shrl
fwait
push
lahf
push
dec
xchg
jge
out
es
mov
cltd
pop
mov
cmc
jns
xchg
push
mov
push
or
xchg
pop
idivl
out
xchg
mov
add
mov
sarl
xorb
sub
inc
sahf
ja
push
mov
imul
inc
cmpb
clc
sub
stos
repz
out
icebp
sbb
iret
cltd
lea
repz
add
lea
out
repz
iret
testl
or
lcall
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
test
xchg
add
sti
mov
mov
scas
int
mov
leave
loop
and
pop
in
bound
push
pop
mov
xchg
es
pop
repnz
jge
mov
sbb
pop
sbb
enter
adc
lahf
call
xchg
inc
repnz
iret
pusha
or
pop
or
add
loope
push
sub
sbb
roll
gs
mov
outsb
push
push
jae
mov
stos
push
popa
lahf
aas
inc
push
mov
int
inc
sbb
imull
test
or
aaa
mov
pop
loope
stos
cmp
inc
jnp
dec
jae
fisubl
push
cmp
out
add
test
fimuls
dec
mov
in
mov
insl
push
ljmp
cmpsb
dec
add
push
lret
aad
add
push
insb
pop
push
pop
jmp
mov
jns
push
rcr
cmp
das
push
ret
cmp
outsb
push
inc
imul
push
pop
retw
pop
test
inc
dec
or
nop
dec
js
dec
mov
ja
aam
and
mov
push
jns
enter
lods
push
push
jle
and
or
ds
adc
in
sahf
rclb
popa
insl
jo
testb
je
fisttps
adc
addr16
jo
jae
es
outsl
mov
lock
cmp
mov
cmp
js
out
into
or
cmpsb
mov
popa
pop
lcall
xchg
xor
xor
mov
rcr
xor
xor
sahf
cmp
cmp
push
xor
xor
cmp
push
add
push
push
inc
sub
sahf
xor
add
push
sbb
push
dec
or
push
sbb
add
pop
andb
or
ljmp
add
xchg
fcomps
sbb
adc
ficoms
repnz
inc
dec
fmuls
sbb
cmp
xor
mov
jle
push
xor
sbb
add
jne
and
outsb
mov
fs
aas
inc
testb
push
shrb
in
sbb
test
add
aaa
xor
pop
fildll
dec
and
adc
pavgb
and
fisttpll
cli
ret
lcall
cs
push
fadds
jno
sub
pop
push
lahf
inc
ss
daa
aas
testb
addl
jae
jbe
fcoms
sub
or
push
jbe
push
adc
mov
cs
push
xchg
sub
push
cs
adc
loope
xor
and
sbb
das
sbb
xchg
sbb
incb
and
push
push
jbe
or
daa
mov
sti
add
xor
mov
mov
push
arpl
dec
or
push
cmp
xchg
mov
dec
cmp
mov
out
add
daa
sbb
jo
pop
mov
fdiv
fnsave
lea
insl
aaa
lahf
into
mov
xchg
ljmp
sbb
daa
mov
inc
sbb
lock
xchg
mov
lods
daa
mov
mov
jge
das
inc
mov
or
mov
aaa
iret
inc
lods
and
mov
int
lods
mov
jno
insl
push
insb
pop
imul
popa
daa
pop
mov
das
dec
jbe
iret
les
dec
and
or
pop
and
repnz
jmp
adc
or
sub
or
loopne
inc
out
das
mov
push
lods
pop
scas
pop
cltd
daa
inc
rcrl
pop
xchg
ss
pop
pop
pop
add
addr16
push
addr16
jg
fsubl
pusha
push
sbb
pop
jecxz
cmp
mull
and
pop
mov
insb
sbb
pop
mov
pusha
imul
sub
aaa
outsl
push
test
sbb
sub
aas
test
xchg
rorb
popa
or
js
jl
and
add
push
push
mov
iret
loop
adc
std
popl
add
les
mov
out
adc
pop
subb
js
fnstenv
ja
sahf
test
xor
sbb
pop
inc
pop
leave
add
es
dec
and
in
or
push
mov
inc
and
and
adc
fs
fsubrs
daa
cmp
sbb
mov
repnz
sbb
xor
mov
xor
loope
into
adc
pop
scas
pusha
fstpl
mov
pop
fcompl
inc
or
adc
das
inc
adc
ja
neg
jp
es
pop
addr16
cltd
mov
push
dec
ret
mov
adc
pop
and
mov
inc
push
dec
xchg
push
lret
sbb
add
test
je
icebp
cwtl
es
das
sub
and
push
add
out
test
jbe
sbb
cmp
push
sbb
sub
mov
shrb
inc
das
xchg
leave
sub
xchg
xchg
xchg
ret
and
in
xor
add
cmp
in
lock
adc
xor
pop
enter
in
push
add
dec
cmp
mov
hlt
jbe
adc
xorb
inc
mov
shll
out
push
xor
adc
mov
std
sahf
jp
or
aaa
inc
pop
inc
adc
inc
data16
or
sbb
aaa
mov
aaa
and
push
cmp
into
xchg
xor
xchg
add
into
dec
mov
pop
fdivr
sub
aaa
pop
and
pop
and
xor
xor
jo
mov
sbb
sbb
cmpsb
mov
or
aaa
mov
pusha
sbb
fcoms
imul
dec
inc
xor
adc
mov
aas
test
mov
lahf
popa
adc
add
inc
lret
js
pop
add
dec
xor
sub
inc
and
aaa
add
mov
leave
aaa
fimull
and
sbb
addr16
sbb
adc
test
sbb
jno
test
inc
inc
addr16
dec
mov
pop
dec
push
push
std
or
pop
push
and
inc
decl
mov
push
loope
pop
dec
and
orb
das
inc
out
sahf
mov
loop
cs
mov
and
sbb
sbb
lods
push
push
in
test
inc
sbb
push
lods
shlb
dec
pop
add
mull
arpl
subps
adc
lahf
inc
add
cmp
je
and
inc
addb
mov
push
arpl
pop
dec
sub
jo
inc
jo
or
movsb
push
xor
xor
xor
add
clc
add
mov
lret
idiv
or
pop
adc
outsl
dec
jo
testb
add
es
push
pushl
pop
or
and
pop
dec
xor
decl
push
or
pop
pop
adc
pop
es
adc
cs
or
incl
add
xor
add
pop
push
push
xor
and
sub
pop
sub
sbb
dec
das
or
dec
push
dec
or
sub
and
inc
aam
adc
sbb
xor
lfs
and
pop
pop
inc
add
adc
cmp
in
xor
inc
mov
xor
push
adc
pop
es
push
aas
xchg
mov
sub
pushl
xor
dec
and
andps
cs
pop
or
adc
push
and
pop
pop
xor
ljmp
das
or
add
dec
xor
dec
xor
push
add
adc
pop
add
mov
stc
and
mov
psraw
inc
sbbb
test
push
jg
add
xor
adc
push
dec
or
and
in
jmp
adc
movb
inc
cmc
push
sbb
or
push
pop
sbb
inc
inc
or
and
mov
test
sahf
xchg
adc
inc
xor
pop
and
stos
das
dec
inc
pop
cmp
xchg
push
adc
dec
les
dec
push
outsl
inc
shlb
dec
inc
mov
jecxz
adc
and
xchg
fsubr
inc
push
les
xor
and
scas
mov
jno
jb,pn
pop
dec
sbb
push
xchg
inc
inc
add
push
push
in
inc
mov
dec
testl
push
outsl
mov
lahf
sub
mov
inc
aaa
jno
sti
shlb
ret
lods
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
adc
jge
push
je
mov
andb
fwait
rol
fwait
jg
cmp
out
popf
rorl
and
sub
sub
pushl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
lcall
cmpsl
aad
arpl
push
addr16
test
mov
cmp
sbb
cld
insl
sub
adc
decl
gs
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
mov
ljmp
dec
stos
fmuls
lret
rep
cs
arpl
test
incl
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
push
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
inc
dec
cs
jbe
and
jge
cmp
cmp
aas
xor
push
dec
xor
or
and
push
dec
dec
jo,pt
filds
sub
insb
sub
imul
xor
or
push
jl
popa
pop
jnp
pop
or
aaa
daa
test
call
pop
bound
imul
jns
jbe
push
xor
cmp
js
jno
inc
into
movl
cmp
or
daa
push
mov
jg
adc
push
sbb
add
mov
pop
mov
into
insb
ja,pt
aas
jne
pop
inc
fbstp
pop
cmp
mov
iret
daa
pop
daa
add
push
and
incb
dec
cmp
pop
sbb
leave
clc
sbb
and
aaa
imul
push
inc
add
xor
xor
mov
inc
add
inc
pop
inc
ret
into
inc
xor
and
aaa
inc
push
inc
jnp,pn
xor
pop
ucomiss
sub
ss
out
and
mov
cmp
fmul
shlb
xlat
pop
in
or
add
inc
push
add
pop
xchg
push
pop
dec
and
dec
test
cli
in
cmpsl
or
bound
push
inc
xlat
adcb
dec
push
jle
loop
loope
lds
ja
push
mov
push
and
jle
test
add
push
fistpll
and
jae
insb
mov
push
lock
adcb
sbb
push
sub
les
cmp
cs
sbb
push
sub
cmp
inc
pusha
mul
and
mov
shl
add
xor
mov
dec
cmpsl
pusha
or
mov
in
ret
push
adc
rcll
sub
sbb
sbb
mov
fsubs
loop
sub
pop
lock
add
pusha
lock
adcl
sbb
pop
cmp
scas
out
sbb
pop
inc
lret
sbb
idivl
shll
inc
and
orb
and
sbb
test
sbb
push
mov
pop
inc
popf
add
and
adc
mov
jbe
les
loop
xchg
popa
sub
cmp
pop
xor
sbbl
adc
xor
inc
mov
icebp
adc
or
dec
outsl
add
mov
setle
orl
and
xchg
movsl
ljmp
aad
ret
mov
test
and
fcoms
xor
or
addr16
imul
jo
cmp
int
jbe
jae
popa
insl
gs
cmp
mov
cmp
mov
add
and
aaa
adc
into
and
inc
aad
mov
push
ljmp
adc
sub
or
testb
rclb
outsl
insb
dec
push
popa
je
push
clc
xor
xchg
insl
cmpsl
adc
loope
rcr
push
fs
adc
notb
add
add
out
push
gs
pop
out
rorb
in
sti
cmp
or
loopne
xor
aaa
inc
push
lods
mov
or
jl
pushf
mov
insb
inc
adc
add
sbb
push
pop
sbb
xchg
add
xor
test
cmpsl
and
jae
arpl
sbb
jg
push
dec
andl
fmull
push
xor
sub
and
dec
pop
mov
pusha
xchg
rcr
lret
addr16
mov
ret
lcall
pop
sbb
and
sub
xchg
pop
pop
adc
push
das
sub
inc
and
add
fs
aad
cwtl
ds
popa
dec
lcall
ja
jb
pop
repz
mov
pop
inc
jne
mov
mov
xor
push
enter
cmp
cmp
aaa
sub
inc
jp
ss
or
jo
test
xor
negl
adc
test
mov
add
adc
adc
or
in
lock
mov
mov
sbb
enter
lock
sbb
cmpsl
xor
mov
jo
mov
or
stos
push
stos
push
ret
outsl
imul
ss
dec
mov
sub
or
lods
sub
mov
in
mov
or
add
dec
mov
das
scas
inc
push
arpl
xchg
lcall
mov
add
push
lcall
sbb
ja
add
dec
xor
jmp
cs
mov
lods
and
cmp
pop
push
test
cmp
xlat
je
sub
sahf
into
sbb
mov
sbb
or
pop
xchg
xor
adc
test
sub
pop
jg
sub
push
or
push
push
into
lds
xor
push
sub
mov
imul
data16
and
imul
gs
push
jb
xlat
es
dec
pusha
xchg
push
movsb
xor
ja
and
pop
pop
push
pop
push
adc
cmp
mov
movsl
or
dec
pop
dec
pop
in
insl
xchg
enter
pop
repz
lods
pop
cs
sbb
mov
add
sub
add
xor
mov
in
and
popf
dec
push
loopne
add
rorb
pop
rolb
aas
out
or
sub
inc
dec
loopne
cmp
inc
and
inc
pop
or
push
enterw
cmp
xor
and
jg
pop
sub
gs
push
loopne
dec
outsl
xchg
into
add
mov
es
dec
jae
push
popa
push
sub
push
dec
outsl
add
movzbl
dec
cmp
cmpsb
punpckhwd
dec
outsb
adc
je
scas
pop
pop
add
pop
das
clc
cmp
inc
dec
push
inc
pop
push
decb
push
pop
movsb
dec
sahf
adc
gs
outsl
and
fldenv
inc
outsb
fwait
addl
push
shll
jb
aas
pop
popa
mov
dec
psllw
mov
and
mov
lahf
and
and
mov
pop
jno
xchg
add
xchg
push
xorl
inc
add
ret
jb
push
adc
mov
inc
add
add
inc
pop
cwtl
dec
pop
or
and
push
jbe
inc
add
jmp
or
inc
lret
push
pop
sbb
gs
add
dec
pop
sbb
movsl
mov
dec
js
rolb
sbb
jmp
push
adc
add
mov
les
in
testb
add
sbb
cmc
dec
push
or
test
call
push
mov
fldt
pop
dec
sbb
outsl
pop
sbb
xchg
mov
lock
dec
mov
cmp
insb
dec
inc
sub
mov
xlat
xlat
push
push
les
pop
les
xor
inc
adc
lods
sbb
dec
add
push
or
outsl
or
ja
xchg
insb
mov
inc
add
inc
sti
mov
mov
push
push
xrelease
rolb
inc
das
fsubrl
pop
jbe
add
dec
inc
xadd
es
and
cmc
inc
mov
inc
mov
cmovo
add
outsb
inc
cmp
mov
add
rorb
mov
add
adc
fstpl
adc
push
inc
pop
sbb
mov
cmp
aas
add
rep
ffree
test
addr16
movsb
mov
push
daa
add
push
dec
push
fs
mov
mov
inc
add
jmp
andb
rcr
jg
daa
test
pop
repnz
dec
rcl
test
fwait
pop
fwait
inc
rclb
in
dec
add
sbb
and
aas
stc
jbe
adc
mov
lods
push
daa
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
ja
jae
add
xlat
pop
push
pusha
xchg
lcall
push
enter
pusha
cmp
out
rcrb
lcall
push
cmp
insb
lahf
out
add
sahf
out
iret
pop
pop
ds
pop
pop
pop
repz
ja
cmp
add
pop
icebp
jns
dec
or
pop
aam
pushf
pop
enter
push
push
add
dec
les
xchg
cmp
adc
xor
dec
dec
hlt
shl
inc
mov
into
xor
test
imul
and
cld
add
xchg
out
sub
add
pop
push
iret
push
int3
push
push
nop
and
out
push
mov
insl
add
jl
jmp
pop
in
ja
lods
mov
or
add
dec
mov
push
xor
mov
imul
inc
pop
pop
das
popa
sub
es
outsl
sub
mov
add
inc
test
or
inc
enter
iret
fsub
outsl
scas
in
enter
cmp
pop
ss
add
mov
push
pop
dec
xchg
push
xor
pop
scas
add
push
sbb
mov
xchg
xor
das
in
mov
pop
lods
es
pushf
xor
pop
sub
dec
shl
je
cmp
pop
scas
add
outsl
inc
mov
popa
out
pushl
inc
jb
and
leave
jae
pop
pop
enter
adc
sub
mov
xor
fs
sbb
pop
or
repnz
sub
ficomps
pushf
push
xor
testl
lahf
mov
xchg
loopne
jg
and
inc
nop
fiaddl
jg
dec
xchg
xchg
sub
ss
sub
out
or
sti
mov
pop
fildll
pop
leave
mov
fbld
pop
test
mov
nop
sub
fs
jmp
sbb
push
xor
scas
add
pop
outsl
pusha
mov
mov
mov
mov
int
add
cmpsl
xor
push
orl
sbb
pop
insl
mov
mov
jo
sbb
pop
sub
xor
xchg
ja
ret
add
bound
cmpsb
ret
insl
lahf
mov
popa
fimuls
daa
push
push
xor
adc
clc
jbe
dec
lret
push
mov
adc
xchg
mov
fsubl
repnz
sbb
push
add
dec
rcll
inc
jbe
dec
ja
popf
nop
popa
pop
popa
divl
and
nop
sub
xchg
cmp
push
outsl
jg
add
xchg
pop
call
fisubl
testl
lahf
bound
sub
data16
ljmp
xchg
rcrl
dec
push
mov
push
dec
mov
xor
sbbb
bound
xlat
or
popa
push
mov
mov
daa
push
jl
fst
or
xchg
pop
arpl
dec
leave
dec
fsubl
lahf
sub
pushf
xchg
xor
je
pop
or
mov
push
inc
outsl
and
mov
add
push
push
mov
scas
cmp
loopne
negl
rolb
fs
mov
xor
ja
leave
adc
pusha
aaa
mov
addr16
jo
xchg
add
xor
jo
or
and
in
outsl
xchg
cmp
iret
add
lea
jg
add
mov
repnz
sbb
mov
jg
addr16
and
add
jb
push
xor
dec
sub
mov
data16
push
cmp
outsl
add
out
dec
mov
test
popw
test
jno
ss
in
and
add
repnz
push
insb
cmpsb
cmp
popa
and
leave
mov
xlat
add
iret
aad
push
daa
dec
out
hlt
lahf
or
adcl
loop
or
pop
jl
push
sub
repz
scas
imul
cmp
jns
push
or
sbb
aas
dec
push
sub
cmpsl
or
xor
sub
fstps
push
outsl
add
or
cltd
inc
or
dec
jp
lcall
dec
testl
add
leave
fwait
xchg
sub
add
pop
add
imul
scas
add
insb
pop
add
pop
add
fiaddl
lahf
mov
dec
push
inc
pop
or
cmp
test
xchg
pop
insl
or
add
dec
or
push
jl
cld
push
or
enter
es
sbb
push
xor
xor
xlat
inc
addr16
mov
cmp
xlat
mov
xor
mov
daa
sub
nop
jnp
jge
cmpsl
mov
push
lock
pushf
mov
ss
shrb
push
cmp
loopne
ja
inc
bound
xchg
or
pop
sbb
outsl
dec
ficoms
xor
inc
pop
in
jne
push
push
pop
xlat
mov
cmc
loopne
filds
pop
out
iret
lds
push
test
mov
sarb
sbb
addr16
pop
mov
ja
ret
add
cmp
outsl
mov
jl
int3
inc
add
scas
jns
out
loop
insl
inc
pop
js
xor
out
movb
cmp
iret
repz
test
sahf
out
lcall
cmp
sarl
mov
cmpsl
stc
push
jno
stos
testb
ds
rcll
push
nop
sahf
out
cmp
rorl
je
dec
ja
out
outsl
xchg
xlat
sbb
jle
cmpsl
stc
cmp
popf
jbe
stc
sbb
inc
int
jns
mov
loop
sub
sahf
out
cmp
stc
sub
mov
jns
jns
cmp
push
pushf
int3
jns
out
add
push
jns
mov
repz
repz
mov
out
jge
int
jle
push
inc
cmp
out
jp
pop
jg
sarl
stc
pop
cmpb
jmp
iret
sarl
in
andb
mov
mov
xrelease
inc
sarl
gs
call
jns
iret
cwtl
or
stc
cmp
adc
adc
cmp
xor
jns
mov
push
xchg
stc
cmp
out
outsb
mov
jl
cmpsl
dec
mov
repz
cmpsl
pop
mov
repz
out
xchg
roll
jnp
sarl
push
xchg
mov
jns
out
xchg
aas
stc
insb
cwtl
repz
or
sbb
inc
push
imul
fwait
dec
mov
int
lahf
loopne
pushf
fiadds
cmp
lahf
out
mov
clc
push
lahf
nop
jns
out
fcoms
mov
sarl
mov
dec
scas
loop
out
ds
adc
jnp
movsl
scas
push
and
dec
js
cmpsb
push
cmpsl
push
sbbl
test
test
sarl
inc
popf
shr
sahf
cmpsl
stc
and
lods
jns
out
lods
dec
outsl
cwtl
jns
dec
repz
scas
push
scas
nop
fsubr
ds
repz
es
or
jns
mov
xlat
inc
mov
mov
mov
mov
dec
repz
push
jbe
sub
jns
dec
repz
mov
rcrl
int
jns
shll
xor
insl
sahf
out
cmp
fstpt
ret
mov
lcall
frstor
lds
int
jns
addr16
out
jmp
ror
add
jo
jns
jnp
push
xor
push
jecxz
iret
hlt
ds
xor
add
sahf
aam
lds
out
in
fsubrs
incl
cmp
insb
inc
das
push
je
das
jo
out
clc
jno
ds
outsb
add
add
pop
jb
dec
lahf
mov
out
addr16
add
iret
leave
fiaddl
mov
insl
lods
nop
imul
mov
xlat
add
pop
paddq
pop
adc
jb
aas
xlat
shr
xchg
or
adc
jo
cltd
adc
xorl
mov
daa
xchg
push
sbbl
and
in
and
pop
xchg
mov
pop
adc
outsl
or
sbb
shlb
rolb
xchg
dec
enter
mov
loopne
fnsave
pop
xchg
stos
cmp
mov
push
out
and
fs
bound
mov
ficompl
aas
mov
frstor
jbe
dec
bound
pop
insl
jb
fists
movsb
or
xchg
movsb
aas
movsb
pop
bound
fimull
sarb
mov
lahf
fcmovne
rcr
and
out
fisubrs
ss
aas
shl
adc
or
adc
push
iret
out
xchg
repnz
jbe
push
push
popa
push
ds
sbb
push
cmc
push
inc
jmp
mov
pop
in
jbe
popl
leave
dec
repz
jbe
or
inc
mov
repz
pop
cmc
inc
hlt
dec
and
dec
inc
testl
cmc
in
loope
lock
mov
cmpsl
in
test
xchg
cld
pop
icebp
inc
ret
adc
pop
inc
mov
insb
jnp
mov
pop
aas
fsubs
and
push
aas
mov
inc
push
inc
inc
jg
popf
bnd
pop
dec
iret
das
fiaddl
push
idivl
subb
xchg
pop
and
add
les
pop
nop
in
xor
inc
inc
pusha
mov
push
add
inc
cmove
gs
dec
movsb
jns
in
dec
xchg
jns
jns
push
jb
scas
je
cld
bound
mov
jp
mov
sub
push
out
cmp
and
pop
inc
je
fs
stos
xor
test
mov
ret
fistpll
cwtl
andl
outsb
iret
repz
add
add
xchg
cmp
outsb
and
leave
and
mov
xor
dec
and
pop
push
push
add
jp
pop
xchg
inc
repnz
inc
clc
jnp
mov
jl
scas
cmp
mov
jl
jb
pop
test
sbbl
lock
adc
stc
fidivrl
nop
inc
push
push
inc
outsl
int3
gs
iret
enter
xlat
cmp
add
jmp
dec
jge
inc
outsb
push
rorl
popa
out
mov
jns
lods
outsl
ret
or
jne
out
jmp
jle
push
daa
xor
repnz
mov
daa
xchg
dec
leave
in
or
shl
and
jg
nop
and
sbb
jg
jo
jb
pop
inc
es
jo
push
sahf
out
sahf
add
push
add
jns
push
in
out
out
jo
and
inc
xchg
push
fs
hlt
punpckldq
inc
scas
fisttpl
and
cmp
pop
cmp
pop
and
inc
in
pop
sub
mov
icebp
mov
enter
outsb
and
pop
cmp
jno
xchg
in
jns
jne
repz
in
lea
xchg
iret
leave
mov
dec
dec
dec
dec
into
fsubp
das
xchg
dec
dec
out
mov
jb
enter
jb
jb
jb
cmp
jb
jb
mov
xlat
mov
pop
je
mov
cmpsl
test
mov
mov
xor
scas
jb
cs
or
xor
adc
jbe
sbb
add
das
push
jae
xor
xchg
pop
pop
push
jo
pusha
adc
mov
mov
stos
push
mov
cmp
mov
mov
or
pushf
sbb
out
cmpsl
clc
aaa
and
inc
je
add
xchg
push
jb
lds
pushf
inc
dec
jg
test
je
or
add
dec
xor
daa
mov
mov
and
test
test
jb
js
xchg
scas
je
je
xchg
adc
je
je
insl
and
nop
test
xchg
add
leave
xor
jb
jne
jne
add
repnz
popl
repnz
inc
xor
in
in
pusha
jne
jne
jne
in
in
jne
jne
jne
jne
fsubp
in
jne
jne
push
or
out
sahf
out
or
or
out
sahf
in
or
iret
repz
adc
adc
repz
repz
adc
iret
repz
dec
adc
ds
repz
sbb
and
cmp
sbb
shlb
fimull
xchg
leave
and
xchg
mov
das
adcb
ja
aas
ja
dec
cs
addr16
ja
mov
sub
fildll
cmpsb
push
mov
xchg
lret
scas
pushf
leave
sbb
push
enter
add
hlt
adc
dec
jb
adc
js
and
mov
and
sub
js
push
popf
out
cmpb
cmpsb
aaa
add
das
mov
inc
repnz
xor
and
loopne
mov
jns
jl
test
das
inc
pop
cmp
inc
mov
iret
or
idivl
add
insb
pop
mov
push
push
jl
lahf
inc
xor
cmp
push
scas
push
pop
cmp
mov
aas
rclb
inc
sahf
out
fistl
aas
add
out
push
hlt
push
sbb
daa
xor
jns
pop
leave
dec
insb
mov
xchg
dec
cs
cwtl
pusha
les
xchg
dec
cs
and
mov
fs
pop
leave
dec
sub
es
mov
cmpsl
jno
mov
mov
adc
sbb
adc
lea
xchg
adc
jnp
lea
popf
xchg
out
jl
movaps
mov
ret
mov
ja
jl
pop
jl
jbe
shlb
xchg
xchg
mov
iret
test
lock
inc
dec
jb
mov
mov
leave
dec
dec
add
mov
mov
iret
cmp
jge
jge
leave
jae
pop
xchg
add
daa
daa
xchg
mov
mov
xchg
xchg
sub
call
in
js
xlat
es
inc
repnz
vpmaxsw
leave
sub
test
push
jb
loopne
daa
and
popa
jle
daa
sbb
nop
mov
jle
in
or
add
les
pop
pop
pop
decb
call
pop
pop
pop
clc
jle
jg
jg
jg
pop
pop
pop
sbb
jg
jg
jg
pop
pop
pop
cmp
jg
jg
leave
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
and
xchg
add
and
in
jbe
pop
jae
jle
mov
lahf
leave
xchg
mov
push
pop
push
out
cmp
mov
jl
addb
mov
cltd
sbb
test
mov
xchg
push
outsb
addr16
or
dec
cs
cltd
mov
insl
in
xorb
push
repz
ja
leave
rorl
or
testb
in
leave
loope
sbb
add
xchg
push
and
and
fmuls
sub
das
xor
ror
mov
cs
cld
push
jp
mov
mov
dec
mov
push
setl
dec
or
int3
or
jns
jns
or
paddusb
xchg
imull
mov
add
or
jne
mov
inc
sarl
push
xchg
add
pop
or
xchg
inc
pop
or
jo
mov
es
adc
adc
jmp
decl
das
pop
orb
pop
jns
xchg
out
add
sub
xchg
out
cmp
and
push
addb
and
in
test
and
add
mov
pop
icebp
jle
jl
mul
stc
add
adc
xchg
xchg
outsl
inc
mov
inc
orl
sbbl
out
and
add
add
dec
pop
insb
mov
in
in
ret
into
fsts
out
mov
cli
iret
sbb
aad
test
test
push
or
cmp
xor
or
xchg
dec
test
enter
cmp
xchg
loope
daa
adc
lret
cwtl
xchg
incb
push
xor
sub
test
pop
inc
cmovns
jns
sahf
out
push
pop
popa
or
leave
in
in
jno
jns
test
or
das
cltd
dec
ds
cwtl
lock
pop
and
fwait
dec
inc
int3
cwtl
testl
mov
inc
and
adc
daa
xchg
add
xor
pusha
xchg
cltd
andb
rorl
xlat
lahf
das
daa
add
iret
leave
leave
add
leave
inc
cmp
ror
mov
add
pop
fdivr
loopne
jns
pop
aas
sub
ja
mov
scas
mov
inc
add
mov
xor
xchg
cld
rclb
add
pop
and
fwait
outsl
dec
dec
outsb
mov
enter
mov
dec
loopne
push
xchg
xchg
sahf
fildl
push
add
mov
imul
dec
cmp
pop
mov
pop
leave
out
jns
add
add
pushf
mov
daa
adc
sti
push
mov
sbb
cmp
inc
mov
daa
pop
leave
jae
pushf
jno
mov
ja
mov
mov
mov
jo
mov
or
rcrb
mov
adc
sbb
cmp
repnz
mov
pop
mov
stc
dec
lock
jle
push
popf
in
sub
in
ret
jecxz
psllw
out
stc
mov
add
add
inc
repnz
and
pop
mov
inc
dec
push
jnp
in
jbe
inc
sahf
pop
cmpsb
iret
xchg
pop
and
add
rcll
adc
lods
add
lahf
pop
lea
jb
mov
jnp
xor
iret
mov
xchg
add
jp
mov
mov
mov
in
and
js
lea
mov
cmp
xlat
add
or
inc
cwtl
cmpsb
xchg
adcb
test
mov
lret
aad
pop
mov
lahf
push
mov
mov
mov
verw
inc
jbe
mov
mov
das
inc
jns
leave
repz
or
or
rclb
mov
sbbb
and
and
in
stos
ja
mov
pushf
aad
clc
cmp
cmp
daa
or
fmulp
inc
sub
jbe
ds
mov
cmp
push
xchg
insb
ja
add
leave
movsb
movsl
lods
jb
stos
js
mov
adc
jbe
psubw
nop
pop
stos
and
push
decl
nop
adc
jb
nop
and
fbstp
inc
scas
dec
add
push
nop
pop
jb
repnz
fs
je
lret
pop
jp
nop
popl
lret
lret
xchg
nop
pushf
nop
movsb
nop
lods
pop
jb
jb
ud2
pop
or
or
jb
pop
push
add
jb
add
mov
cmp
repz
sbb
sbb
repz
repz
cmp
leave
in
and
hlt
cmp
out
cld
and
xchg
and
lock
xchg
imull
xor
fsts
ficoml
jmp
ja
jnp
add
mov
xchg
setno
ds
mov
sub
dec
es
movsl
xlat
fists
leave
out
maskmovq
cmpsl
push
sbb
xchg
cmp
xor
inc
mov
dec
xchg
aas
outsb
popf
jae
pop
pop
imul
push
or
jo
js
or
or
jmp
push
test
add
sahf
adc
call
loopne
lock
sti
mov
fbld
sahf
aaa
jb
xchg
xor
add
add
jns
out
add
add
mov
or
cmpsb
jg
insl
ficompl
iret
mov
cmp
daa
mov
iret
mov
pop
inc
incl
xchg
or
cmp
inc
inc
push
daa
test
fs
lock
dec
jo
push
mov
xchg
jns
faddl
das
es
outsb
cs
inc
movsb
xchg
sbb
xchg
loopne
addr16
int3
push
pusha
xchg
xlat
push
inc
pop
push
and
inc
rcr
and
push
daa
test
xor
aas
xchg
xchg
dec
push
xor
xchg
xchg
mov
xchg
xchg
add
sub
xchg
push
loop
in
cmp
xchg
in
lea
pop
cmp
das
mov
cmpsl
push
fildll
push
rclb
fsub
shrd
in
call
leave
leave
insb
push
invd
adc
or
leave
repz
or
xor
xchg
out
sahf
cmp
out
sahf
dec
adc
pop
cmpsl
lcall
test
sbb
and
into
leave
jae
add
push
std
into
push
incb
xor
nop
stos
stos
outsl
mov
add
scas
hlt
pop
add
pop
dec
fimuls
or
add
loopne
sbb
in
push
enter
bound
xchg
pushf
cmp
push
add
mov
and
cld
leave
mov
pop
cwtl
imul
dec
pop
sub
add
xor
mov
push
push
or
and
jg
insb
inc
add
js
shr
arpl
push
daa
mov
out
leave
add
orb
pop
lods
push
add
in
movsb
fwait
lar
cs
les
or
or
push
cmp
in
std
push
scas
add
inc
adc
lods
sub
xor
inc
cmovo
leave
repz
dec
add
add
mov
push
or
out
daa
js
or
in
or
adc
in
cltd
jg
cmpsl
insl
in
inc
lods
not
cltd
in
xchg
xor
into
hlt
das
cltd
pop
add
pushf
push
lcall
mov
push
call
mov
mov
mov
mov
test
lcall
out
inc
aaa
in
je
enter
fisubs
and
xchg
lret
daa
add
adc
out
mov
fiadds
xchg
fwait
pushf
push
add
fwait
nop
lahf
xor
fwait
push
jo
paddusb
adc
xchg
scas
add
fmulp
repz
xchg
cmp
cmp
andb
scas
fwait
or
mov
xchg
and
faddl
sub
cmpsl
mov
jb
pushf
adc
in
inc
xor
jg
pushf
dec
pushf
xchg
and
outsl
push
pushf
pusha
pushf
imul
or
cmp
mov
popa
xchg
and
pushf
ret
pushf
clc
xchg
iret
in
mov
mov
push
enter
popf
loopne
jb
mov
xchg
mov
jo
js
sbbb
and
inc
scas
sbb
pusha
mov
out
mov
iret
adc
daa
jo
xor
add
popf
cmp
cmp
cli
cmp
sahf
or
add
mov
sahf
sbb
push
jecxz
rdmsr
or
outsb
cwtl
add
test
sahf
addr16
add
dec
dec
sahf
sahf
sahf
jecxz
cmp
xchg
jl
cmpl
shrl
negl
aas
lock
add
lahf
out
pop
xor
cmp
dec
mov
jne
inc
enter
jo
xor
fstl
scas
js
dec
pop
push
or
push
test
decl
inc
sahf
push
mov
leave
leave
mov
cmp
enter
pop
or
in
leave
inc
repz
add
or
mov
inc
mov
out
repnz
pop
cmpsl
push
lods
leave
dec
ja
orb
xchg
sub
pop
rcrl
lock
cltd
mov
leave
inc
jb
xchg
int3
icebp
sbb
xor
vmwrite
dec
add
mov
xchg
mov
mov
mov
mov
fsubrl
mov
adc
sbb
fs
icebp
lea
mov
dec
mov
out
pop
push
aaa
dec
cmpsl
and
xchg
mov
mov
outsb
xchg
mov
in
in
in
outsl
ja
movntq
fildl
push
in
je
lahf
lar
mulb
or
lret
push
add
fs
std
mov
xchg
mov
out
fsubrl
xchg
int3
outsb
pop
xchg
mov
mov
ja
mov
shrb
decl
lock
xor
pop
leave
and
movsl
in
movsb
imul
mov
jmp
iret
insl
in
daa
mov
mov
xchg
mov
xchg
add
int
cwtl
das
in
movsb
add
das
aas
outsl
hlt
movsb
cld
movsb
add
aas
add
xor
xor
movsl
movsl
movsl
movsl
add
cmp
push
add
add
enter
pop
lidtl
bound
scas
js
andb
movsl
nop
movsl
cwtl
movsl
mov
aas
test
ud2
adc
cmp
repz
mov
enter
repz
sbb
loopne
xchg
lock
push
push
in
stos
mov
inc
aad
dec
mov
xchg
pushf
in
inc
cmpsb
cmp
push
adc
pop
adc
adc
out
daa
test
jg
mov
mov
out
pop
cmpsl
mov
outsl
rcrl
cmpsb
cmpsb
xlat
call
sbb
lock
clc
cmpsb
cmpsl
pop
psubw
dec
sahf
pop
or
cmpsl
das
sbb
sbb
les
push
fcmovb
push
sub
cmpsl
addr16
addr16
repz
mov
mov
xchg
lock
xor
lahf
push
test
jns
enter
push
add
push
test
cmp
fsubrl
cmpb
xchg
iret
lcall
pop
paddd
test
fnsave
shrb
xchg
push
cmc
and
test
mov
enter
test
test
pop
jnp
lahf
out
adc
test
popf
cmp
leave
adc
push
and
dec
ds
mov
sbb
daa
adc
inc
mov
mov
bnd
daa
add
into
leave
rclb
ja
mov
daa
stos
push
add
cmp
add
add
jns
add
or
or
jnp
out
or
or
or
int
je
pop
lahf
cmp
loopne
rolb
sub
xor
xchg
insl
stos
pop
mov
stos
jge
ud1
or
lea
dec
outsb
inc
pop
out
mov
and
xlat
pop
roll
loopne
mov
xchg
or
mov
js
pushl
inc
push
js
pop
xor
lock
sbb
ja
xchg
mov
stos
call
mov
stos
xchg
jbe
jmp
in
fsubs
addr16
xchg
das
lods
lods
inc
imul
xchg
lods
dec
add
sahf
out
pop
push
or
dec
mov
outsl
sidtl
jno
orl
ret
mov
lods
mov
setb
out
pop
xchg
add
das
add
aad
dec
dec
outsl
and
pop
xchg
pop
inc
lods
push
addr16
cs
dec
adcb
les
lods
lods
repnz
fistpl
add
enter
push
jmp
rep
sahf
aaa
jb
sti
lods
add
enter
add
scas
or
push
scas
ds
fdivl
iret
punpcklbw
scas
out
jbe
inc
das
jnp
sub
push
pop
in
fwait
cmp
syscall
add
fwait
mov
and
mov
adc
movups
sbb
jle
pop
jae
jns
and
sub
mov
outsb
inc
scas
dec
scas
adc
imul
and
add
jmp
ror
jmp
scas
inc
cwtl
fs
ljmp
mov
pop
mov
jb
mov
mov
mov
mov
popf
faddl
mov
mov
or
subb
daa
rorb
fimull
jae
enter
loop
ljmp
cwtl
adc
jb
and
inc
dec
dec
sahf
out
push
imul
cmp
add
jnp
xchg
mov
in
in
mov
repz
xor
adc
in
in
jl
call
lock
sbb
mov
iret
in
or
adc
xor
pop
mov
push
and
push
and
mov
es
ss
lock
adc
out
push
add
xchg
mov
and
sub
xchg
daa
pop
leave
jae
cld
jg
jb
daa
daa
popf
mov
stos
mov
lea
mov
or
leave
inc
repnz
lret
push
cmp
add
mov
sub
cmp
repnz
mov
mov
xchg
cmp
cmp
cmpsb
cmp
repz
scas
or
repz
into
mov
add
mov
jmp
mov
xor
lret
out
cmp
pop
adc
cmp
pop
and
add
movd
in
in
pop
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
pop
ljmp
mov
mov
dec
das
das
in
mov
mov
add
or
sbb
adc
sahf
out
sub
xor
cmp
jns
out
inc
and
sahf
out
sahf
push
and
and
out
je
jl
xchg
jns
out
xchg
sub
dec
sub
stos
cs
mov
out
sub
xor
mov
pop
dec
aaa
jns
lock
push
das
dec
pushf
in
add
sbb
jns
outsl
sub
push
sbb
insb
pop
add
pop
bswap
inc
mov
pop
or
int
fs
into
mov
fs
leave
leave
enter
inc
pop
leave
leave
leave
leave
jbe
xchg
mov
cmp
leave
mov
cmp
leave
aad
dec
adc
in
emms
xchg
iret
jae
adc
mov
fucomi
sbb
pop
das
jge
iret
repz
test
dec
outsb
push
test
and
dec
sahf
out
and
add
icebp
fcmovne
rep
aas
fisubrs
out
vmwrite
leave
enter
daa
push
sub
sahf
xchg
out
arpl
imul
out
jns
scas
xor
mov
iret
xlat
out
dec
sahf
aaa
pxor
cmp
xor
xchg
idiv
mov
into
xchg
pop
cmp
pop
idivb
sbb
test
popf
fcmovne
mov
rcll
add
mov
mov
in
mov
out
in
mov
add
pushf
pushf
cmp
ror
pushf
pushf
cmp
xlat
add
out
sahf
add
in
sahf
or
or
das
pop
pushf
cmp
leave
cmp
push
pop
cmp
leave
repz
adc
iret
leave
repz
mov
xchg
mov
cmp
stos
sbb
cmp
int3
sbb
iret
loop
in
clc
and
xchg
and
mov
sbb
mov
mov
mov
adcb
xchg
mov
cld
shlb
add
out
mov
mov
repz
das
call
or
cmp
push
aas
out
fsubp
or
adc
add
or
repz
and
push
sub
xor
repnz
push
adc
push
push
adc
cmp
repz
add
push
sbb
jo
jb
push
mov
sbb
nop
sub
aam
leave
repz
xchg
into
add
dec
pop
mov
push
stc
or
ret
rcrb
js
xor
xchg
fisubs
sahf
add
push
shll
inc
repnz
cmpsl
push
in
shll
dec
push
xchg
pop
dec
push
dec
daa
add
in
cltd
rorl
xchg
leave
inc
jb
pushf
xchg
test
iret
rcl
fbld
iret
jae
out
push
testl
rcrb
ret
mov
xor
ret
xor
repnz
xchg
dec
push
xchg
gs
pop
leave
jae
jo
nop
and
dec
outsb
sets
pop
pop
ret
xchg
rcr
insl
stos
ljmp
setle
mov
push
ret
das
ret
pop
push
add
out
jns
es
cs
dec
dec
shll
ret
jg
xlat
pop
addr16
leave
in
jbe
punpckhwd
jno
mov
cmpsl
push
movsb
movsb
jae
cmp
lods
mov
xchg
daa
pop
leave
clc
pxor
and
ss
xchg
add
cmpsb
cmp
les
pop
les
cmp
inc
rclb
push
pop
les
leave
xchg
fdivrs
in
in
test
lea
movsl
pop
lods
fbstp
pop
push
dec
sahf
ja
decb
aad
clc
sbb
mov
lds
lds
leave
xchg
xor
lds
lds
in
in
cmp
inc
dec
and
rclb
jle
daa
mov
cmpsl
cmpsb
push
or
leave
jae
cltd
leave
shll
pusha
ljmp
add
sbb
shll
das
xchg
out
lea
pop
aas
add
cmp
dec
add
lods
daa
pop
leave
rclb
adc
fildl
fs
lea
dec
sahf
pop
xchg
add
leave
xchg
xor
sbb
and
mov
mov
imul
loope
iret
repz
lret
outsl
xsavec
pop
pop
pop
pop
mov
fld
mov
out
cli
pop
add
das
outsl
adc
sbb
es
in
enter
enter
in
in
enter
enter
in
in
enter
enter
pushf
je
mov
nopl
cmp
cmp
pop
cmp
cmp
push
adc
sahf
out
sub
sub
sahf
loope,pn
push
xor
mov
fs
leave
cmpsl
in
movsb
fldt
mov
bswap
repz
add
or
iret
repz
cmp
cmp
repz
aas
dec
inc
iret
repz
pop
inc
gs
jo
jns
idivl
inc
fiadds
iret
cmp
push
inc
rcr
dec
repz
dec
cs
dec
cmp
in
leave
decl
lret
dec
and
cmp
repz
sub
push
xchg
xchg
fcmovne
inc
dec
pop
push
bound
jns
xchg
insl
js
orl
daa
daa
dec
pop
mov
outsl
daa
mov
popa
jae
test
pop
or
xchg
repnz
lret
push
pop
iret
cmp
ds
xor
push
cmp
add
daa
inc
mov
jb
cmpsl
ficoms
jbe
ror
ja
cmp
lret
sarb
fcomps
pavgb
repz
pop
adc
push
adc
adc
pop
lret
ds
nop
sbb
iret
repz
sbb
cmp
in
call
xchg
int
add
clc
lret
and
filds
inc
cmpsb
int3
int3
int3
inc
push
sbb
cmp
sub
int3
dec
loopne
pop
shrb
outsl
sub
pushf
out
push
cmp
loopne
push
daa
aam
pushf
or
mov
shlb
pushf
enter
fcomps
sahf
pushf
cmp
clts
loopne
and
lret
repz
inc
sub
outsb
or
add
lds
jo
or
add
jns
movups
sbb
adc
in
dec
jne
int
pop
int
outsb
loopne
int
int
test
mov
mov
fmull
xchg
inc
ffreep
loope
mov
daa
daa
mov
daa
mov
fs
lea
fcmovne
jmp
cmp
addb
into
iret
sti
outsb
sbb
pop
push
mov
push
add
daa
inc
into
fisttps
push
in
in
xchg
into
push
or
leave
leave
leave
leave
orb
iret
scas
adc
iret
cmp
cs
and
lock
mov
rorb
sti
jg
push
sbb
sbb
sbb
leave
jae
daa
xor
cmp
dec
push
and
punpckhwd
rep
daa
je
jg
daa
mov
xor
fistl
sub
test
mov
shl
fldl
or
adc
sbb
add
and
sarb
in
pushf
mov
pusha
rclb
pop
sbb
repz
lea
mov
out
scas
pop
mov
mov
or
shlb
jb
dec
scas
fcmovbe
in
lock
in
add
jle
sahf
out
ficoms
push
adc
adc
cmp
cmp
repnz
sbb
imul
push
je
pop
jg
cmp
cmpsl
and
out
daa
iret
and
mov
rcrl
int3
roll
cmp
repz
loop
ljmp
rcl
pop
cmc
and
adc
ss
in
popf
out
cmp
xchg
push
inc
and
rcl
out
fisubrs
pop
add
cmp
xchg
addr16
jge
mov
and
or
sarb
mov
push
or
bnd
out
cmp
lock
rolb
rorl
shl
jns
dec
push
add
add
sub
pop
inc
or
jns
dec
or
pop
out
sahf
ja
sahf
or
sbb
sahf
movd
mov
jb
shll
ror
shl
inc
enter
ror
dec
aaa
inc
push
aam
out
jle
aam
sub
xor
add
cmp
sahf
cmp
push
xchg
jl
outsl
cvtdq2ps
out
or
xor
in
in
sbb
out
mov
aas
jae
je
int
invd
fsub
jo
sbb
imul
aam
stc
aam
aad
repz
into
mov
or
daa
or
xor
iret
repz
pushf
inc
push
push
pop
pop
xchg
out
cmp
jb
sbb
repz
mov
xchg
sbb
sbb
cmp
mov
and
cmpsl
jb
fcmovnbe
out
hlt
pop
ds
ud0
das
or
adc
push
adc
sub
sub
cmp
daa
inc
dec
pop
test
cs
outsl
xchg
sbb
cmpxchg
aaa
jb
adc
mov
push
sahf
out
sahf
push
fldl
call
or
iret
or
out
adc
mov
out
pop
pop
or
jns
dec
outsb
pop
dec
push
popa
adc
jns
out
adc
adc
fmull
dec
xlat
xlat
rep
mov
mov
ud1
sbb
les
iret
and
jns
leave
fimull
and
sti
sbb
repnz
cs
fcoms
fcomps
cmp
iret
jae
sub
cmp
repnz
push
cs
sub
imul
xchg
out
xor
mov
in
dec
shll
xlat
pcmpgtb
cltd
loop
fsubr
cmp
jmp
repz
nop
stos
add
jg
cmpl
or
mov
push
fnstcw
aam
push
cs
inc
push
mov
pop
repnz
les
inc
pop
stos
xor
mov
and
mov
jbe
aaa
iret
cmp
inc
das
aaa
cmp
push
add
jns
daa
add
add
add
or
or
or
or
outsb
mov
scas
or
daa
adc
fucom
push
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
insl
push
in
in
sahf
and
jb
pop
leave
in
jbe
andb
cmpb
daa
iret
jae
test
xchg
sub
daa
movsb
fbld
daa
mov
aas
xlat
sbb
data16
cmp
ds
gs
push
dec
repz
repz
inc
inc
cmp
out
cmp
sub
or
call
clc
hlt
lock
call
jns
aam
leave
repz
int3
pop
les
jns
mov
jl
jns
out
fs
pop
push
cmp
adc
scas
pusha
jg
or
adc
mov
mov
andl
add
test
test
push
add
std
sub
rolb
mov
adc
sub
jnp
add
movsb
add
cmpsb
fisttps
xchg
sub
cmp
cld
inc
jle
test
inc
push
jg
shll
cmovo
pusha
daa
mov
inc
mov
test
mov
sbb
in
call
adc
in
notl
push
ficompl
mov
xor
and
enter
loopne
jb
jle
mulb
in
clc
testl
push
rcrl
add
push
fcompl
inc
sub
adc
cli
inc
sub
pop
jle
pmovmskb
sub
or
mov
adc
das
aas
sbb
jbe
aas
jp
adc
inc
lock
aam
adc
out
mov
test
push
adc
out
adc
adc
sahf
out
sub
add
int3
in
repz
rcrl
xchg
sbb
push
pop
push
sbb
dec
pop
outsb
call
imull
pop
mov
js
push
jns
jne
repz
hlt
ljmp
mov
lcall
aam
out
xor
sub
call
mov
sahf
icebp
aas
les
inc
pop
and
js
add
iret
adc
sbb
cwtl
push
jae
mov
jo
icebp
addr16
push
push
dec
aam
stos
pop
inc
jg
pop
pop
sarl
pop
aas
push
arpl
lea
pop
xlat
ds
xchg
inc
neg
fcoms
push
sti
scas
cmp
jg
out
cmp
and
push
inc
sub
add
orb
pop
or
mov
mov
in
icebp
pop
push
sbb
jmp
inc
sbb
aas
adc
mov
or
ds
or
into
repz
and
cmovg
push
push
pop
cs
mov
lock
push
or
or
or
mov
lock
add
sahf
out
iret
call
fcoms
jns
out
rclb
enter
jns
out
shlb
lret
sahf
mov
test
xor
in
clc
mov
or
lods
pop
push
jmp
test
cmp
andl
sbb
idivb
jns
out
cmp
pop
js
mov
xor
out
repz
xor
sahf
aaa
in
insl
add
push
pop
ja
testl
jae
das
push
stos
xorb
insb
inc
jns
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
mov
loope
jp
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
and
add
addr16
aas
jno
or
mov
pop
fs
dec
lea
sbb
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
ljmp
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
icebp
incl
gs
std
orl
pop
ficomps
frstor
or
push
pop
pop
push
jns
mov
inc
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
fcompl
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
negb
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
sbb
push
sub
ljmp
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
sar
push
or
fnstenv
adc
mov
mov
bound
ficoml
jl
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
adc
ret
movsb
sti
hlt
shrl
imul
mov
sar
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
ljmp
mov
orl
mov
in
mov
mov
add
shlb
ljmp
fildl
push
fdivl
or
test
fs
ds
or
lcall
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
decl
outsl
fistpll
mov
mov
aad
mov
call
xchg
shll
push
ljmp
mov
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
jg
pusha
cld
testb
pusha
jp
out
pusha
fists
addr16
cli
out
mov
jns
imul
andl
shrb
rclb
or
clc
dec
add
mov
das
es
lds
or
add
push
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
scas
xor
imul
scas
fcompl
fldenv
filds
aad
adc
pusha
mov
jg
add
fidivrs
mov
jmp
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
mov
inc
add
push
sub
mov
or
sbb
add
sub
pop
out
pop
pusha
xor
in
mov
xor
push
dec
inc
push
or
xchg
mov
repz
inc
push
xlat
fcomp
fcmovu
cmp
repz
fstp
loop
iret
repz
repnz
call
repz
in
in
repz
repz
repz
div
clc
stc
cltd
outsb
cmp
cli
sti
cld
daa
adc
push
push
inc
cmpsl
lods
sub
xor
pop
movsl
push
aas
jnp
dec
es
inc
push
dec
bound
lods
add
inc
sbb
bound
cs
inc
mulb
arpl
inc
in
cltd
dec
or
and
inc
dec
outsl
aas
lds
xor
pop
inc
cmp
pop
bound
lods
insl
jmp
aaa
cmp
popa
arpl
cmp
arpl
or
xor
dec
insl
pushl
bound
jg
popa
push
inc
jbe
pop
insb
imul
data16
gs
push
sahf
or
add
dec
cmpsb
fimuls
dec
cmpsb
fisubs
xor
popa
or
push
mov
shlb
push
je
inc
xchg
mov
scas
ss
jbe
mov
shrb
fldl
and
in
adc
gs
inc
push
dec
js
push
adc
addl
sbb
xor
insb
inc
lds
shlb
into
pop
dec
or
test
inc
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
add
lods
fadds
or
sbb
fcoms
cltd
and
jae
insb
xchg
das
pop
mov
inc
mov
mov
and
inc
inc
push
fistpl
inc
pop
mov
je
jo
inc
inc
add
testb
cmp
popa
mov
inc
push
cmp
iret
int
push
dec
cmp
inc
mov
push
adc
sbb
mov
ret
cli
inc
inc
outsb
jne
xor
mov
push
imul
add
add
outsl
fucomi
adc
arpl
add
insl
pop
push
clc
xchg
into
pop
jo
iret
mov
inc
or
imul
aas
std
or
cltd
dec
pop
push
mov
andb
pop
outsl
add
or
cmpsb
or
bound
sbb
xor
mov
sbb
adc
adcb
frstor
cmp
lods
adc
jo
rcll
push
mov
xchg
shrl
mov
jge
pop
adc
jno
mov
or
mov
in
pop
xchg
add
sub
test
pop
cmp
arpl
cmp
or
or
mov
mov
xchg
outsl
insb
jns
das
sub
jb
push
fwait
jnp
pop
data16
inc
outsl
arpl
sbb
mov
fimull
bound
ja
inc
jbe
xor
addr16
in
je
ja
dec
xor
adc
jecxz
add
lods
jmp
ret
inc
and
push
jg
shlb
and
lods
inc
sbb
test
inc
dec
mov
dec
add
inc
dec
lock
sbb
sbb
cvtps2pd
push
fnstcw
push
inc
dec
pop
bound
outsb
arpl
mov
pop
mov
lcall
dec
push
pusha
aaa
inc
jne
insl
mov
adcl
sub
fldt
lods
mov
xor
push
daa
sub
adc
lods
and
sub
test
sub
sbb
fucomip
add
adc
push
push
push
add
fdivr
loopne
adc
add
mov
ja
push
add
fistl
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
push
add
add
pop
add
in
add
adc
add
js
jno
mov
loopne
add
jnp
imul
ds
xor
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
adc
mov
and
cmpl
push
inc
pusha
xchg
sbbb
and
or
test
inc
inc
xor
daa
add
adc
sbb
sarb
jno
repz
pushf
add
scas
fisubs
add
pop
scas
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
sar
out
xchg
mov
lock
loope
icebp
add
pop
push
mov
mov
pusha
inc
roll
adc
fiaddl
or
js
jg
or
sub
rcr
push
ret
xchg
pushl
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
cs
les
fsts
dec
ret
mov
jecxz
pushf
ret
ja
pushl
xchg
out
cmp
xor
and
fistpl
jg
add
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
mov
pusha
add
std
or
add
inc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
pop
mov
push
in
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
in
ljmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
sbb
mov
out
pop
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
sub
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
outsl
ss
test
jg
mov
lahf
cld
sub
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
outsl
lock
outsl
push
paddsw
pop
stc
out
mov
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
sti
xor
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
iret
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
leave
push
test
add
xlat
jmp
fildll
fimull
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
lcall
ficompl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
jmp
outsl
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
xchg
pop
push
adc
rolb
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
pop
mov
fsubrl
dec
add
xchg
xchg
or
add
call
pop
inc
dec
push
mov
mov
cmp
lcall
lods
int3
pop
iret
and
add
pop
jnp
push
outsl
xchg
jecxz
hlt
mov
and
pop
jno
in
iret
mov
cmp
inc
jg
sub
dec
ljmp
cmpsb
mov
jmp
adc
cmc
mov
sub
add
call
xchg
or
scas
or
jne
jg
or
and
xor
jnp
fmul
xor
inc
bound
lahf
lea
dec
stos
sbb
add
popf
sbb
jmp
gs
adc
fbstp
mov
pop
mov
test
lret
je
dec
push
push
cld
xor
mov
jbe
xchg
dec
jge
cmp
out
inc
mov
mov
ljmp
jge
dec
fsubr
fidivrs
les
cmpsl
jnp
mov
pop
int
scas
or
test
jg
pushf
xor
xorl
popa
loope
jmp
sbb
jae
mov
loope
incl
cmp
scas
adc
scas
notb
hlt
sbb
jo
sbb
les
shlb
pop
je
hlt
mov
cmp
adc
add
test
mov
push
cmp
push
mov
fiaddl
jl
stos
out
jecxz
add
adc
pop
lcall
js
fistpll
adc
jb
std
push
or
lret
cmpsb
nop
and
repnz
pushl
push
dec
mov
icebp
dec
ja
in
call
iret
pop
clc
xchg
or
test
mov
mov
fstpt
and
mov
js
mov
rorl
popf
stos
xchg
fdivs
push
xchg
sub
sub
stos
jae
ljmp
fstl
lcall
scas
or
inc
pop
sub
in
movl
mov
incl
stos
scas
push
lods
inc
mov
add
mov
shll
cmp
gs
hlt
cld
dec
cld
push
cld
xchg
pop
jmp
jo
inc
xchg
xor
mov
mov
leave
mov
jg
mov
orl
outsl
call
pop
addl
test
push
mov
and
jns
or
mov
lock
push
in
or
js
in
cmp
fnsave
and
rclb
push
push
imull
test
cmp
shrl
fisubl
call
jb
cmpsl
out
sti
movsb
sbb
cli
js
fcoml
addr16
stos
in
clc
stos
scas
pushl
into
mov
jecxz
cmpsb
mov
jbe
lcall
fisttps
in
mov
in
out
out
rcrb
pop
pop
repnz
sti
shl
es
ret
test
fwait
xor
aad
ret
lock
outsl
pop
sbb
nop
and
or
mov
add
call
ljmp
lock
mov
dec
pushf
cltd
and
pop
push
insb
fildl
icebp
xchg
or
dec
dec
xor
popa
inc
stc
int3
sahf
popa
bound
push
and
test
popf
mov
mov
bnd
pushl
push
or
or
lock
or
test
push
mov
iret
out
movsb
cmp
enter
mov
jecxz
add
jle
movsl
xchg
shl
xchg
dec
xor
jae
pop
ss
jo
incl
out
ret
sub
sub
lret
mov
arpl
imul
leave
mov
add
loop
jmp
jnp
ds
xchg
lcall
imul
mov
mov
cs
lret
iret
xchg
int
lcall
or
gs
lret
jmp
ret
push
adc
lea
sti
push
push
push
sahf
mov
fcoms
jl
incl
rclb
jle
cmp
lea
xchg
jle
shll
divl
jg
lcall
xor
mov
adc
bound
sub
push
mov
lds
and
pop
mov
cltd
adc
pop
in
mov
sub
inc
mov
jmp
xor
mov
inc
fwait
xchg
sbb
xchg
mov
pop
adc
add
loop
lcall
cmpsb
xchg
sub
rol
sub
jecxz
add
ret
stos
xor
cmpsb
shrb
and
rol
pop
xor
popa
cld
in
ljmp
jno
xor
mov
int
fs
sbb
std
ret
xor
fadd
movsb
aaa
out
outsl
das
cli
lcall
aas
sbb
out
fcompl
jge
sub
adc
sbb
or
inc
inc
jle
sbb
cld
std
xchg
pop
sbb
out
ret
dec
mov
lret
jg
push
lret
mov
push
mov
mov
cli
adc
jp
fwait
sub
popa
jmp
call
fmulp
cmp
sbb
add
lcall
and
jns
mov
or
shrb
repz
push
in
icebp
add
cmp
xor
adc
pop
mov
dec
lock
lcall
xchg
mov
inc
inc
mov
pop
and
cmpsl
cmp
enter
call
pop
xor
push
push
outsl
mov
lret
sub
sbb
and
jbe
outsl
and
jmp
jl
pop
jl
inc
movsb
inc
pop
xchg
jns
lods
lock
mov
and
push
jge
pop
std
decl
sub
xor
xchg
cld
mov
sbb
loop
add
pushf
sub
mov
fs
cli
push
insb
cmp
jge
sbb
sbb
insl
add
aad
jbe
lcall
inc
arpl
sub
push
pusha
int
test
push
mov
imul
dec
and
call
mov
insb
cs
aaa
movsl
sbb
jle
hlt
mov
inc
out
leave
mov
stos
call
mov
out
shlb
jae
mov
add
adc
or
test
pop
fwait
add
and
pushl
inc
pushf
jecxz
in
insb
cld
mov
or
pop
shll
ds
add
ljmp
sbb
lret
mov
stos
lret
out
outsl
gs
movsl
das
ret
push
and
mov
incl
xor
mov
xchg
das
pop
adc
insb
in
push
xor
or
adc
scas
cmp
fdivr
jne
leave
sahf
inc
jg
mov
cwtl
lret
jno
cmpsl
sub
xor
jecxz
or
addr16
repnz
or
call
jbe
daa
mov
sub
mov
sub
dec
sub
sbbb
call
pop
cmp
je
hlt
sahf
call
dec
subl
cmp
leave
aad
rorl
mov
push
add
inc
cmp
mov
lock
nop
fstps
push
sbb
aas
jne
fldenv
out
inc
cmp
call
mov
push
mov
and
mov
push
ss
repnz
dec
push
fisttpl
push
mov
fwait
pop
inc
das
fcomip
fcomip
jo
movsb
cld
subb
lock
cmp
push
sub
lea
mov
fistps
das
out
push
and
test
sub
or
ret
cltd
jmp
je
rcrb
loop
sti
mov
inc
sbb
popa
xor
lcall
jecxz
mov
cld
test
pop
in
pusha
fs
bound
xor
mov
lcall
push
cmp
and
test
mov
daa
ds
mov
ror
cmpl
xchg
and
push
dec
adc
lcall
fistps
fidivl
push
cmp
push
or
sbb
sbb
mov
mov
pop
mov
mov
dec
inc
add
int
mov
pop
sbb
xchg
pusha
shrb
incl
push
adc
cmp
jmp
or
mov
fbstp
mov
rcr
test
cmp
ss
ljmp
xor
aad
ljmp
rcrb
out
push
cmpsl
push
dec
popa
mov
stc
jg
incl
xor
leave
std
lret
xlat
cmp
jg
xor
ljmp
cmpsl
inc
ret
sti
and
ret
push
and
push
add
dec
push
call
pop
jmp
pop
add
sahf
sub
pop
fmuls
aaa
push
aam
cmp
call
sbb
andb
mov
mov
sub
xor
push
jno
adc
test
add
stos
add
call
scas
loopne
hlt
and
jg
pop
sete
push
cld
pop
xchg
xchg
mov
sub
iret
xor
decl
insl
sub
fsts
lcall
mov
sbb
or
sbb
shlb
pop
call
mov
popf
pop
mov
cs
lcall
xchg
or
sahf
ffree
push
push
arpl
mov
mov
std
aas
jmp
dec
push
int
or
jge
mov
iret
dec
std
mov
repnz
cmp
add
mov
ljmp
or
mov
add
xchg
jp
mov
xchg
sbb
add
mov
out
cmp
xchg
jg
mov
push
mov
jb
ja
das
jg
scas
fnstenv
mov
mov
sti
add
sbb
pop
adc
xchg
test
push
loope
dec
popf
mov
iret
xor
rorl
sbb
shrb
cmp
je
je
shrb
shr
pop
fcmovu
ljmp
mov
xchg
mov
dec
mov
adc
cmpl
cmp
decl
xor
inc
into
push
fidivl
sbb
dec
add
fcomip
lcall
insb
jg
cmp
lcall
adcl
decl
lock
sub
fsubr
push
xchg
or
mov
dec
lahf
mov
jecxz
mov
mov
imulb
mov
jge
lcall
out
mov
or
dec
inc
sub
cld
mov
call
sbb
xor
jecxz
pop
jecxz
mov
sti
inc
inc
daa
pop
push
nop
cltd
push
test
insb
mov
jge
pop
lods
imul
add
call
cld
lcall
imul
sahf
xchg
fwait
das
sbb
adc
xchg
stos
movsb
subb
mov
mov
lcall
pop
pop
push
cwtl
outsl
or
adc
dec
lret
lea
mov
cmpsl
mov
push
fistl
cmc
lcall
xchg
shl
ret
xor
andb
mov
cmpsl
mov
out
xchg
jp
and
or
cmc
fbstp
lds
js
mov
sar
fwait
jmp
mov
mov
call
sarl
xchg
das
sub
inc
jne
out
lret
decl
inc
lods
std
fnsave
scas
cmp
push
leave
fnstcw
gs
fnstsw
fildll
fdivp
loopne
jae
lock
dec
xchg
adc
mov
pushl
or
movsb
popl
or
pop
addb
into
rcll
ret
out
sbb
call
movsl
lods
mov
and
lret
adcb
lret
add
fwait
ljmp
je
mov
jb
fiadds
in
adc
ljmp
jle
jnp
mov
pop
pop
fcmove
sub
sbb
fsubs
push
loopne
mov
pop
pop
adc
test
enter
sarb
fisubrs
incl
push
adc
insl
inc
je
or
jl
loopne
gs
clc
ljmp
xchg
jae
in
out
push
cmp
fbld
sub
in
incl
das
lret
add
push
jnp
popa
stc
adcb
ss
pop
and
cmp
pushl
fldenv
idivl
pop
xor
cmp
mov
fisttpll
ljmp
leave
imul
add
and
sub
adc
and
scas
stos
in
push
jg
ljmp
cli
popf
cmp
out
pop
mov
jae
sbb
int3
in
jge
sbb
mov
adc
lock
push
add
int
cmc
sti
loope
pop
add
ljmp
out
mov
and
inc
push
xchg
lahf
dec
sarb
lcall
sub
adc
dec
dec
pop
out
sub
shll
xlat
push
insb
adc
mov
in
xchg
aam
mov
cmp
pusha
push
jnp
ret
out
xor
dec
push
outsl
inc
imul
ja
popa
push
fdivr
incl
pop
loopne
jne
mov
leave
repnz
adcb
cmpsb
incb
loope
jl
mov
xor
push
std
cmp
scas
gs
mov
cmpsl
dec
cld
mov
or
ja
jmp
mov
inc
adc
enter
pusha
mov
sarl
clc
shr
jae
and
jmp
jae
inc
sarl
ficoml
jnp
shrl
adc
pop
push
and
sbb
stos
dec
cmpl
aam
mov
jne
mov
and
repz
push
shrl
cs
inc
jle
hlt
pusha
cmpsl
pop
pop
cmp
xchg
mov
dec
add
jb
dec
pushf
call
push
mov
je
in
mov
push
lods
lea
enter
ss
imul
pop
mov
jmp
adc
or
mov
or
push
cli
lret
sub
inc
sbb
mov
aas
rol
aad
call
pop
adc
repnz
cmc
imul
int
push
icebp
jmp
push
in
pushl
cld
pop
push
fstps
and
mov
mov
xchg
fcompl
flds
popa
lcall
sbb
aaa
loopne
fs
mov
aam
mov
jo
fcomip
mov
pop
sub
sbb
mov
or
cmp
scas
pushl
fcos
dec
jne
test
nop
imul
push
mov
mov
test
ljmp
add
icebp
loopne
sbb
les
cmp
pop
adc
jo
push
decl
push
xchg
imul
sarl
add
or
setne
dec
loopne
movl
fiadds
cmp
xchg
mov
and
add
decl
or
rol
insw
pop
fiadds
das
or
daa
push
push
or
mov
mov
mov
mov
fistps
flds
mov
shlb
fbld
push
mov
fxch
fimuls
jge
in
imul
or
push
jmp
xor
cmp
int
add
repnz
jg
push
roll
fimull
xchg
xchg
aaa
fst
out
pop
imul
call
inc
fsubl
or
out
testb
enter
xchg
sub
jnp
push
lcall
pop
sbb
xchg
inc
in
pusha
push
inc
add
mov
or
das
pop
aas
aas
xchg
pop
fwait
push
or
dec
vcvttsd2si
pushl
neg
adc
movsl
cmpsl
fs
pop
dec
add
push
adcl
imul
rorl
xchg
mov
mov
push
mov
xchg
dec
mov
mov
xchg
lcall
push
xlat
nop
sbb
int
pop
lret
mov
mov
mov
mov
add
fiaddl
fnstenv
mov
stos
inc
add
jge
ret
int3
loopne
fldenv
ljmp
lret
movsl
jp
pop
sbb
sub
inc
out
mov
xchg
adc
xchg
in
ficompl
in
hlt
or
rcrb
jle
lcall
or
adc
shlb
pop
cmc
mov
fcomi
cmpsb
nop
hlt
or
jmp
fs
enter
adc
rcrb
ds
aam
or
pushl
fsubrp
movsl
sub
add
push
ret
ds
andb
sub
bound
data16
lcall
clc
sbb
scas
scas
push
mov
cmp
pop
test
jmp
pop
mov
flds
cmpsl
lods
adc
call
sub
gs
loop
xor
sub
movsl
out
sti
cld
lods
mov
test
loopne
inc
adc
repnz
fisttpll
imul
lcall
ds
xor
xchg
negb
xor
jl
scas
jl
fsubl
in
sbb
ffreep
insb
sbb
call
cld
jmp
fs
test
adc
xor
inc
addr16
incl
sub
xchg
or
andl
test
sub
subl
arpl
pushl
mov
sub
pop
repz
xchg
movb
push
sbb
or
pop
sub
cmp
jg
pushl
inc
push
ljmp
in
mov
sub
das
mov
ljmp
enter
inc
pop
mov
sbb
add
es
mov
imull
sar
decl
cs
andb
mov
inc
stos
sbb
das
pop
daa
push
jne
popf
in
mov
fdivr
cmp
incl
push
mov
iret
adc
jl
sahf
cwtl
push
jns
fldt
icebp
pop
cmp
aaa
push
sbb
pop
xchg
shlb
lcall
fwait
decl
cwtl
es
outsb
lret
sub
push
shr
pop
inc
adc
cmc
decl
shl
icebp
and
xor
fisubrs
inc
sahf
leave
dec
inc
mov
xor
or
pop
faddl
sbb
mov
out
shrl
stos
sbbb
mov
cli
mov
or
jnp
insl
push
cmp
clc
out
lds
sbb
test
xor
jb
gs
test
cmp
jmp
or
ret
ljmp
out
lock
pop
stos
fdivrp
pop
scas
decl
out
int
das
and
mov
pop
inc
addr16
or
mov
jl
mov
dec
jmp
and
rcl
adc
lds
aam
and
out
adc
mov
out
adc
incl
lahf
sub
or
sbb
test
ret
icebp
cmpl
lcall
es
dec
jb
dec
or
mov
fnsave
jns
clc
movsb
mov
jle,pt
aad
xchg
mov
es
clc
ds
leave
repnz
mov
js
adc
outsl
fdivrs
cmpsb
sbb
repz
and
xchg
ja
shlb
adc
jle
jns
lds
sub
ja
incl
cmp
xor
dec
leave
jmp
add
daa
cld
sub
push
lcall
mov
push
in
sub
sbb
ljmp
pusha
lcall
cmc
bound
idivl
sbbb
js
pop
or
push
ss
inc
ficoml
rolb
pushf
ret
ljmp
lods
sbb
das
add
call
cli
fwait
jbe
pop
sub
shrb
imul
decl
inc
mov
dec
mov
pop
adc
xor
sbb
ret
ljmp
xchg
addr16
inc
jge
aaa
xor
pop
sbb
andb
popf
push
stos
decb
jmp
xchg
or
push
dec
or
or
cli
out
lods
fidivrs
call
or
ret
int
xor
imull
jae
pusha
mov
aas
adc
data16
ljmp
out
adc
pop
lds
sub
mov
xor
or
call
pop
lock
in
fcoml
inc
movsb
xchg
stos
lock
insl
ljmp
pushl
movsl
popl
inc
dec
sbb
ds
lock
enter
push
jg
mov
mov
ucomiss
inc
pop
dec
or
decl
mov
negb
push
add
movsl
sbb
loopne
ret
jg
xor
jecxz
jge
pop
sbbb
fnstsw
cmc
push
dec
mov
lcall
mov
pushl
sbb
push
xor
jg
mulb
out
xor
sbb
add
mov
aaa
sbb
ljmp
cmp
outsb
xchg
mov
inc
xor
loop
in
idivl
xchg
add
push
add
xor
mov
push
jnp
sub
mov
jp
xor
jge
outsb
sbb
and
jne
test
inc
lea
lds
pushf
xorl
stos
inc
in
scas
clc
call
jl
shr
sbb
lods
inc
sbb
sarl
aas
mov
mov
mov
inc
jmp
mov
jle
sbb
test
incl
cmpb
inc
subl
je
push
and
mov
stos
cmp
mov
sbb
push
cmp
sbb
ljmp
roll
jle
and
mov
push
mov
sbb
mov
fdivl
aad
pushf
mov
shrl
call
add
pop
hlt
test
mov
and
inc
fxch
and
cmp
pop
inc
cld
cld
adc
ret
insl
test
push
repnz
inc
insl
xchg
and
call
dec
xor
pop
xor
cltd
das
mov
mov
das
dec
pop
or
popf
lock
mov
pushf
lcall
in
mov
mov
lds
mov
fcoml
cmc
out
cld
cld
ss
dec
stos
lds
push
sbb
mov
inc
jg
jmp
sub
repz
and
or
inc
bound
ljmp
pop
pop
add
mov
hlt
lods
xor
xchg
pusha
orb
cmp
rorb
inc
int
fwait
and
fmull
in
jg
nop
or
testb
pop
aaa
cmc
sub
decl
call
sbb
jnp
in
and
add
pushf
push
aad
mov
xchg
inc
fdivr
mov
addr16
repz
xor
shrb
push
loop
mov
or
daa
inc
and
sbb
into
cli
mov
adc
xor
jmp
rorb
mov
mov
add
incl
hlt
test
js
mov
cmp
jl
stc
xchg
outsl
mov
xchg
cld
jmp
nop
fwait
cmpsl
mov
stc
testb
pushf
stos
xor
mov
cwtl
mov
mov
insb
mov
call
adc
jg
or
bound
nop
xor
pop
mov
in
and
cltd
add
add
incl
adc
cld
xchg
scas
hlt
sbb
rorb
inc
push
mov
ja
sbb
xor
push
int
jb
incl
xor
xchg
pop
mov
add
mov
add
jae
xchg
bound
ljmp
hlt
sbb
outsb
jns
repnz
jle
adc
mov
mov
xlat
cmp
fistpll
or
jge
jecxz
aas
cmp
call
jp
dec
mov
adc
or
fsubl
out
lea
xchg
pushl
pushf
clc
mov
push
mov
int
mov
sbb
push
movsl
loop
call
fxch
xor
adc
popa
push
outsb
movsl
stc
stos
add
je
and
xchg
mov
xor
xlat
out
dec
add
imul
mov
fistps
or
mov
mov
and
xchg
pop
jp
cs
sub
xor
jp
stc
xchg
add
test
inc
pop
lds
pop
ret
push
stos
pop
sub
cmp
jnp,pt
mov
scas
fldt
shll
lea
pop
pop
mov
ljmp
cmpsb
cwtl
and
cmp
xor
mov
loope
test
iret
inc
xor
pop
cld
lcall
scas
xor
push
jnp
mov
jnp
mov
mov
or
dec
jno
xchg
scas
jl
cmpsb
mov
cmp
pop
jnp
pop
out
test
adc
out
fmulp
daa
jecxz
jb
adc
sub
movsl
inc
imul
incl
std
cmp
aam
mov
imul
das
push
and
mov
insl
clc
call
scas
idivl
inc
lret
fistpll
movsb
lret
sbb
insb
data16
bound
incl
jle
and
pop
dec
push
cs
into
ljmp
sub
imul
int
sbb
jbe
decl
dec
inc
jmp
xlat
sbb
js
mov
adc
popa
cmp
ljmp
dec
aam
xor
xor
pop
dec
jne
inc
inc
add
popf
adc
fwait
out
cmp
xor
inc
mov
mov
aam
and
push
lea
out
push
nop
xchg
loop
or
add
leave
xchg
aad
push
or
jno
mov
mov
test
out
mov
in
push
cmpsl
int3
and
cwtl
push
pop
inc
loope
movhps
ljmp
xor
shl
jbe
pop
popf
sbb
dec
push
es
inc
pop
or
mov
jg
mov
mulb
adc
jo
test
cmpsb
mov
mov
cmp
mov
pusha
stos
pop
sub
jge
test
imul
dec
subl
mov
sub
jle
js
in
fcmovnb
and
mov
icebp
cmpsb
ljmp
mov
add
out
cltd
ds
sbb
jno
adc
or
call
popf
gs
push
dec
ja
jle
mov
stc
adc
mov
pop
pushl
fstpt
mov
das
sahf
mov
loopne
xlat
cmp
xchg
dec
or
fs
inc
and
xchg
fadd
pop
stc
mov
daa
push
pop
pushf
cmc
sahf
andb
lahf
rclb
lods
xchg
sub
decl
sub
imul
sbb
pop
loope
xchg
mov
or
mov
decl
xchg
ret
and
dec
leave
gs
ljmp
fdivr
lret
mov
fisttpl
inc
jae
movhlps
and
pop
rcrl
add
in
cli
imull
je
leave
sbb
ljmp
cli
imul
testb
ret
aaa
dec
lods
sub
mov
inc
mov
stos
out
jno
jmp
inc
out
sub
sub
in
rcll
int
pop
cmc
mov
push
push
fisubl
jl
or
pop
cmc
iret
loope
test
mov
xchg
pop
movsb
ret
rorb
or
pop
sbb
mov
push
push
lcall
stos
dec
xchg
insl
lret
in
lods
dec
fists
fcmovu
shll
repz
push
push
push
std
adc
popa
das
into
ss
mov
jno
xchg
in
pop
repnz
shll
mov
push
daa
jg
mov
dec
pop
jle
inc
mov
cld
cmp
divb
inc
and
fstpl
jp
sarl
mov
jmp
lea
aad
push
sbb
xlat
jp
lcall
dec
fdivrp
in
ljmp
ds
lock
and
fnsave
sbb
lret
rorl
mov
jmp
cmp
ljmp
scas
popf
into
xchg
mov
ss
dec
dec
in
jns
and
ficoml
aam
scas
movsl
scas
inc
jne
fxch
les
xor
mov
stc
pop
loope
push
dec
mov
jmp
fistpl
in
ret
push
jle
clc
jnp
ja
lods
push
in
push
shl
cltd
incl
cmc
ret
imul
clc
adc
dec
mov
jg
inc
mov
xlat
mov
inc
lcall
std
add
aad
mov
decl
popf
mov
or
cwtl
scas
pop
xor
out
or
aas
mov
test
inc
sar
mov
push
add
push
ror
dec
mov
mov
adc
stos
jg
xor
les
xchg
stos
jge
pop
rorb
jno
sub
repz
incl
add
or
push
add
ja
jb
stc
pop
jnp
jb
dec
xchg
cld
sbb
ss
push
sbb
out
jmp
pop
and
jl
jmp
nop
push
xchg
cmc
bound
add
in
sar
mov
popa
sbb
xchg
pop
das
lods
fldl
jle
mov
les
jle
push
fsts
xchg
jns
sub
call
xchg
sub
or
xchg
arpl
cld
lds
sub
inc
jl
push
in
mull
push
sahf
incl
fiadds
inc
nop
movsb
hlt
pusha
leave
pop
mov
add
stos
push
fs
mov
js
dec
rolb
xor
sub
adc
add
rcrl
sub
pop
pop
cld
decl
outsl
cltd
cmp
inc
inc
outsb
mov
pop
fisttps
stos
mov
cwtl
incl
inc
or
fcomps
push
ljmp
scas
les
popf
stos
cmp
call
outsb
mov
mov
rcll
lock
out
xor
stos
push
std
sbbb
mov
jl
jbe
sbb
rorb
xlat
dec
shrb
inc
mov
lcall
fs
pop
add
hlt
jg
mov
push
sub
jp
sub
aad
je
out
cmpsb
out
ret
stos
pushl
pop
sbb
leave
push
fildl
mov
inc
fcom
aas
inc
dec
mov
pushl
cmp
pushf
stos
push
in
mov
mov
xor
mov
dec
icebp
out
pop
data16
xor
shll
sbb
sbb
and
notl
test
inc
stos
loopne
shrl
jmp
lcall
into
leave
outsl
xchg
pop
icebp
loopne
addb
xchg
add
in
or
pop
cli
inc
fildl
nop
jp
mov
mov
inc
sbb
stos
jo,pn
inc
rclb
pop
pop
ds
iret
ss
decl
ljmp
and
out
xchg
test
les
sub
outsl
cmpsl
test
mov
clc
mov
dec
ret
int3
mov
ret
aas
dec
dec
shlb
inc
xchg
fs
outsb
push
pop
cs
xlat
in
call
addr16
pop
jle
mov
ds
pusha
xor
fldenv
adc
jmp
arpl
fsubs
cmpsb
inc
mov
jo
inc
rorl
adcl
cmp
ficompl
or
pop
jnp
ja
xchg
mov
out
rorb
cmp
test
es
decl
sbb
push
outsl
lods
inc
cmp
subb
sbb
decl
add
iret
addr16
sub
push
push
mov
ljmp
lea
loop
dec
fs
fnstsw
jns
out
adc
sub
adc
lcall
fcmovb
pop
stos
or
push
or
push
popa
lcall
cwtl
imul
decl
sub
out
ret
dec
push
ret
incb
sbb
cmp
outsl
lods
out
rcl
ja
lcall
in
int
and
clc
adc
ficoms
idivb
outsb
jg
inc
jmp
repnz
pop
popf
add
pop
scas
mov
mov
sbbl
arpl
mov
call
std
nop
out
mov
rcll
ja
mov
cs
mov
add
mov
jp
iret
xor
jne
lods
pop
inc
mov
add
imul
cli
mov
cmpsl
sbb
push
test
jb
jg
pop
lret
movsl
push
mov
inc
mov
cs
fs
out
pop
and
and
repnz
scas
sti
or
or
ljmp
lods
in
movsl
aam
in
ss
mov
subb
or
ljmp
mov
rcrb
movl
imul
xor
xor
lcall
std
dec
xchg
inc
inc
push
push
lcall
mov
lock
cli
fildll
and
mov
out
mov
push
lock
sbb
into
imul
or
into
shll
mov
cld
dec
call
pop
stos
mov
pop
sbb
cmp
cld
incl
sbb
dec
add
stos
daa
sarb
das
push
leave
out
cwtl
mov
sbb
add
inc
cwtl
mov
cmp
call
icebp
std
lret
in
and
icebp
lods
mov
pushf
test
lds
mov
lcall
add
scas
cmc
jbe
lds
and
jecxz
pop
mov
into
pop
incb
mov
mov
clc
ljmp
or
or
imul
mov
cmpsb
and
icebp
jmp
dec
pop
cmc
fdivs
adc
or
inc
lret
pop
mov
pop
mov
call
mov
mov
push
lds
rep
adc
add
adc
lcall
cmp
mov
cmp
dec
push
mov
add
xor
mov
cmpsl
jno
ret
call
fnsave
xchg
mov
mov
js
xor
and
xor
cmp
push
sub
mov
incl
and
jmp
shll
inc
js
aad
ss
inc
int3
mov
cmp
mov
addb
and
xchg
jno
in
sbb
fidivrl
mov
adc
sti
sbb
pushl
pusha
fwait
movhps
xor
jg
lcall
mov
nop
jecxz
sbb
mov
jp
pusha
pop
test
out
xchg
divl
cmp
stos
ret
scas
call
ds
shlb
in
decl
xchg
or
enterw
mov
or
mov
popa
xchg
sbb
sbb
mov
jmp
xchg
xchg
loop
push
dec
out
adc
sub
ret
ja
push
xchg
icebp
popa
dec
popf
data16
xchg
pushl
dec
adc
mov
out
add
mov
aaa
fisubl
xor
incl
inc
idivb
push
xchg
clc
pop
jno
out
in
cli
jecxz
sub
mov
inc
pop
sub
rcr
ret
add
xchg
lods
sbb
sub
ljmp
into
loopne
mov
xchg
add
cmp
sub
repnz
push
decl
shlb
vmaxps
call
sbb
shll
pop
test
cmp
mov
xchg
xchg
test
fcomip
push
dec
or
fidivrl
cwtl
fisubl
jbe
test
in
loope
les
inc
flds
test
add
inc
daa
add
enter
call
call
xor
dec
notl
inc
iret
pop
sub
jnp
push
and
nop
push
pop
mov
outsb
pop
mov
jns
loope
adc
jnp
cli
loopne
xorb
or
call
push
sarl
mov
lds
mov
or
inc
inc
inc
daa
shll
jns
sti
decl
sub
mov
dec
out
iret
stos
stos
arpl
sub
pop
or
sbb
incl
imul
push
movsl
shll
inc
jle
shlb
leave
insb
call
jp
fisttps
frstor
mov
pop
push
lds
mov
pushf
jbe
add
adc
and
pop
cld
int3
dec
sbb
fiaddl
xchg
mov
shlb
mov
inc
stc
adc
sub
hlt
adc
out
fsubrl
sbb
incl
ret
pop
popf
mov
aas
sarb
fmuls
sbbb
adc
incl
cmc
insl
test
arpl
jle
mov
andb
sbb
and
int3
dec
xor
pushf
xchg
mov
incl
incl
xchg
or
dec
aaa
jo
fistpl
outsl
outsb
mov
pop
lods
inc
push
cmp
fdivr
push
mov
imul
adc
mov
popf
xor
mov
pusha
add
lds
mov
dec
dec
stc
and
and
fdivrs
outsl
lret
lea
addb
jmp
out
lcall
pop
loop
call
pop
popa
jbe
ljmp
mov
sub
xor
lock
jns
add
jl
xchg
push
dec
jmp
jae
push
lcall
scas
out
mov
inc
fldlg2
jbe
or
add
js
clc
stos
jmp
in
and
pop
fimuls
sub
stos
lock
jmp
cmpsb
push
adc
lea
xorb
flds
leave
add
and
mov
clc
inc
lret
jg
inc
cld
cmpsb
rcl
mov
mov
subl
call
xchg
sahf
dec
std
inc
sbb
out
ja
ret
mov
outsb
inc
lea
pop
pop
and
incl
nop
dec
xchg
fadds
fadd
pusha
fcomps
lock
pop
pop
rol
mov
in
imul
decl
xor
repnz
mov
sbb
xchg
in
mov
jecxz
ljmp
out
inc
or
cwtl
pushf
imul
xchg
sbbl
xchg
lcall
cmp
adc
inc
imulb
stc
jno
mov
dec
cwtl
lahf
dec
incl
sub
or
jns
out
imul
ljmp
push
insb
jp
fs
fildl
js
mov
mov
in
sbb
adc
sub
adc
jp
fmull
xchg
call
sub
jecxz
popf
mov
dec
and
lret
sbb
mov
fdivrs
decl
cmp
jae
sub
lcall
das
xor
clc
cmpsb
lret
fistpll
mov
dec
repz
shl
dec
lret
add
sbb
push
jmp
repnz
into
sub
push
dec
in
shl
movsl
push
call
enter
add
mov
call
dec
push
inc
mov
gs
add
insl
jno
mov
xchg
push
cmp
pop
pop
lock
jmp
out
in
dec
mov
testl
inc
aam
mov
daa
gs
aaa
pop
dec
mov
popa
dec
test
mov
sub
dec
stc
popa
mov
push
push
jg
sti
xor
bound
xor
mov
pop
mov
or
ds
outsl
clc
imul
jne
xor
mov
les
mov
fbld
mov
stos
jns
add
pop
mov
lcall
jecxz
call
push
or
loop
or
ds
cmp
arpl
dec
gs
ljmp
sub
mov
nop
xchg
dec
insb
ljmp
add
mov
out
pop
mov
hlt
test
and
jns
pcmpeqw
lock
xor
in
mov
icebp
sbb
cmc
rcrl
mov
cmp
idiv
ljmp
push
jne
orb
sub
jg
or
faddp
mov
mov
cmp
push
cwtl
adc
in
xchg
push
insb
sub
ficompl
xchg
int
cwtl
cmp
insl
scas
inc
call
icebp
cmc
pop
push
jecxz
and
cwtl
adc
mov
lcall
adc
lods
aaa
arpl
cli
fldcw
dec
jg
scas
push
mov
lcall
out
mov
clc
cmp
jnp
cmp
mov
dec
sbb
jg
hlt
xorl
incl
mov
outsb
idivb
popa
aad
pop
loopne
inc
adc
outsb
or
shlb
fldl
mov
mov
xchg
fwait
into
inc
jle
sahf
cs
fistpl
into
mov
jmp
push
ret
inc
pop
mov
jge
lea
jge
mov
mov
push
pop
jne
mov
jns
dec
pop
pop
int3
mov
cs
cltd
sub
popf
dec
mov
lcall
jbe
pop
ja
cmp
or
mov
hlt
mov
and
filds
mov
or
and
mov
sbb
inc
mov
lret
or
pop
cmc
outsl
inc
adc
cmpsb
mov
add
loope
push
mov
ljmp
mov
decb
pop
js
sbb
inc
jl
dec
je
xchg
xor
incl
movsl
dec
add
and
scas
xchg
loop
testb
jge
add
ljmp
decl
add
not
mov
stc
fmuls
pop
rclb
data16
fisttps
lcall
call
insb
fisubrl
jg
cmpsl
sub
inc
ret
sbb
call
inc
adc
jg
mov
mov
push
xor
bndldx
cmc
gs
push
aas
je
insb
lcall
das
clc
inc
or
and
mov
outsb
mov
js
pop
sub
jmp
mov
inc
xor
ret
dec
xchg
es
fdivrs
daa
adc
mov
das
cli
imul
insb
sub
push
cmp
add
cmp
xor
or
push
dec
pmulhuw
lods
outsl
sbb
outsl
roll
add
aaa
aas
out
call
lret
ds
mov
xchg
jge
int
pop
push
sbb
pushf
cmc
adc
jl
mov
ljmp
pop
push
push
lods
add
mov
stos
sbb
mov
cmp
call
rolb
or
sub
call
adc
in
pop
scas
out
mov
push
pop
dec
or
hlt
xlat
fists
ljmp
lret
push
cmp
stos
bound
mov
adc
mov
mov
call
out
sbb
sbb
adc
jmp
jbe
dec
leave
jns
lret
and
mov
push
cmp
jne
aaa
mov
push
push
hlt
loope
sbb
pop
pop
pop
push
dec
push
fisubs
mov
sti
pop
xchg
sbb
inc
ljmp
inc
cmc
mov
jge
repz
or
fwait
mov
lods
jno
xchg
add
or
in
sahf
jnp
inc
enter
xor
rorb
xorb
push
jl
loop
dec
or
rcll
add
cmp
das
loope
jbe
ljmp
scas
sub
pop
in
fstps
add
adc
leave
mov
iret
mov
lcall
jne
mov
dec
jae
xor
pushl
jp
scas
mov
mov
aas
enter
loop
cmp
shr
xor
dec
adc
iret
inc
loop
push
std
call
inc
inc
loopne
stc
cmp
inc
int
insb
insb
pushf
fwait
ss
inc
incb
jg
pushl
mov
mov
stos
pop
xchg
add
jmp
push
into
pop
sbb
sub
call
leave
stos
in
orb
cwtl
lods
mov
xor
setp
out
push
leave
scas
jg
jle
inc
movntq
scas
cmp
sub
hlt
sbb
xchg
pushl
icebp
stc
iret
pop
mov
rsm
jbe
mov
adc
mov
iret
mov
mov
cmp
push
cld
call
loop
mov
lods
xchg
inc
sbb
mov
add
mulb
jl
jo
in
dec
aas
push
add
fmuls
aaa
and
in
lcall
rcll
int
cmp
loope
insb
jmp
mov
mov
shll
call
mov
push
cmp
clc
mov
call
hlt
pushf
pop
jbe
clc
jns
jg
lea
outsb
sahf
inc
adc
loopne
jmp
dec
adc
mov
mov
mov
mov
sbb
xlat
cli
xchg
lcall
mov
fldenv
int3
mov
push
mov
xchg
repnz
dec
cmpl
jne
sub
pushl
mov
rcrb
jae
jg
js
idivb
sbb
dec
jle
cltd
incl
inc
lods
mov
mov
adc
out
xchg
loopne
je
scas
dec
sub
inc
test
ljmp
popf
pop
add
lahf
sbb
andl
fldcw
sbb
arpl
clc
out
cli
dec
js
gs
pop
fisubrs
clc
push
push
pop
imul
xlat
push
pop
cli
pop
gs
xor
les
cmpsl
insl
arpl
frstor
push
jg
ja
mov
in
fcoms
lahf
push
push
jmp
jp
test
jg
call
fdivl
adc
cmp
leave
into
insb
fs
mov
dec
gs
dec
shr
fdivrl
stc
inc
fisubrs
push
push
sbb
stos
rclb
movsl
adc
mov
fcomip
or
loopne
pop
sbb
clc
ds
icebp
xor
mov
pop
inc
mov
fxch
lods
test
push
repnz
hlt
outsl
incl
jmp
ljmp
adc
lahf
loopne
stc
into
aam
adcb
dec
sbb
repnz
cli
ljmp
dec
and
jp
test
rcl
test
xchg
loop
fisttpll
jle
clc
jb
nop
ja
fs
add
into
pop
lea
mov
call
pop
xchg
aas
dec
repnz
cwtl
fxch
out
xchg
aas
sahf
stos
inc
daa
sub
cld
repz
lcall
ljmp
cs
and
xor
sbb
push
in
les
jno
popf
ljmp
cli
mov
sub
dec
or
rolb
imul
inc
pop
sti
stos
arpl
or
jmp
cs
and
in
lods
mov
cs
xchg
sub
loopne
out
jnp
pop
jmp
decl
xlat
addr16
mov
add
insb
lods
loope
pop
inc
repnz
xchg
cmpsl
mov
sbbl
sub
mov
push
call
movb
cmp
movsl
inc
pop
rol
cmp
jmp
bnd
ret
mov
push
mov
pop
push
mull
ljmp
xor
add
in
arpl
addl
rorl
mov
lcall
into
or
ffree
xor
icebp
aam
cmp
jo
jnp
sbb
xchg
ljmp
jge
add
mov
stos
icebp
jl
add
sub
mov
scas
xchg
out
mov
xlat
mulb
mov
aaa
sbb
mov
les
mov
cmp
push
mov
mov
jg
cmp
and
mov
lcall
adc
insb
sbb
fwait
jnp
dec
jnp
mov
shrl
ljmp
xchg
dec
sub
faddl
shrb
and
fisubl
leave
adc
lcall
pop
cmp
int
or
icebp
aad
add
jg
add
lcall
enter
cmc
movsl
sbb
movsb
orl
movsl
fcomps
stos
sbb
ljmp
jb
pop
jae
sub
push
sar
incl
add
stos
sbb
sbb
mov
stc
jo
pop
adc
ljmp
fistl
ds
lret
das
inc
addr16
movsb
in
add
push
xor
mov
xor
je
xor
xor
in
adc
loop
shrb
imul
testb
push
cmpsb
decl
push
dec
jnp
aad
mov
mov
jg
mov
pushl
addl
adc
scas
loopne
sub
mov
loopne
push
or
add
sub
and
xor
xchg
lcall
and
lahf
xor
leave
or
xchg
fcompl
push
mov
sbb
call
es
fwait
ja
loopne
cmpb
mov
int3
mov
or
xchg
leave
les
xchg
or
mov
fs
pop
nop
call
std
pop
xor
mov
mov
jns
daa
jbe
sub
movsb
incl
cmp
dec
cmovs
mov
gs
imul
push
sti
xchg
lock
ljmp
mov
inc
call
pop
sbb
lret
sub
rol
lods
les
dec
int
sar
pop
xchg
loope
mov
adc
leave
and
adcb
aas
push
mov
data16
sub
fwait
in
pop
or
jbe
lcall
sbb
push
fsqrt
in
fimull
lods
scas
imul
and
cmpsb
rcrl
out
sbb
in
cmp
jbe
stos
jno
or
push
jmp
int3
flds
orb
add
cmp
or
ljmp
fsub
xchg
cld
ja
add
lock
xchg
lea
lea
es
or
fcomip
decl
sub
lods
mov
in
lcall
ja
in
mov
and
push
dec
cmpsl
sub
push
pop
dec
push
lds
xchg
cmp
mov
mov
call
push
sub
jp
decl
or
neg
in
jg
cmpsl
add
ljmp
dec
xchg
out
popf
cmp
movsl
xor
lret
cli
in
xchg
insl
mov
shlb
decl
je
idivb
inc
es
lret
add
daa
cli
cmp
mov
jmp
mov
in
js
dec
pushf
clc
sbb
insl
mov
mov
xchg
sbb
fldt
shll
inc
push
lea
sbb
test
repz
call
jb
push
call
push
fwait
adc
xor
fmuls
add
jae
push
std
ja
ds
cli
jg
pusha
jne
test
sub
outsl
mov
mov
pop
pop
xor
mov
clc
aad
lods
jne
xor
fstp
addr16
sbb
call
push
lret
aam
loop
adc
and
pusha
fmul
pop
mov
jo
lcall
inc
fnstcw
push
and
mov
out
lcall
dec
sbb
xor
jnp
and
incl
loope
cltd
mov
addr16
mov
and
mov
ljmp
mov
std
notl
pop
out
cmp
imulb
push
imul
in
int3
dec
cli
dec
and
mov
stc
push
push
shl
or
call
xchg
fcoml
push
inc
jmp
test
or
pushl
lods
mov
mov
sub
stc
subb
data16
ret
cld
cmp
mov
aaa
incl
stos
stos
or
gs
mov
nop
pop
ljmp
cmp
shll
call
or
daa
cmpsl
pushl
dec
sarb
and
cwtl
mov
ss
xor
pop
push
sbb
call
mov
movsl
add
fwait
stos
cmc
pop
cmp
dec
xor
lahf
xchg
decl
inc
cmp
inc
mov
or
std
ds
in
mov
popa
test
cmp
sub
jg
imul
pop
or
mov
fmull
mov
into
fldcw
jmp
movsb
pop
dec
and
in
jge
push
gs
push
sub
scas
add
int3
mov
and
outsl
aad
dec
lcall
arpl
adc
jmp
xor
iret
mov
daa
fldl
lcall
out
in
and
pop
stc
adc
rcll
xchg
mov
movsb
hlt
andl
popa
inc
hlt
jo
cld
xchg
out
pop
stos
cli
push
aad
pop
mov
icebp
ljmp
leave
hlt
in
and
lret
mov
das
sarl
aas
jmp
out
jl
scas
aaa
lock
jmp
jbe
jg
push
lret
ljmp
gs
ds
inc
jle
lea
push
xlat
mov
cltd
add
sar
adc
testl
fidivrl
loopne
call
pop
cltd
lds
xor
cltd
adc
out
push
lahf
stc
pop
ret
jnp
mov
mov
sub
inc
ss
divb
in
adc
cmpsl
push
das
call
int
sahf
or
addr16
sub
add
pushf
cmpl
pushl
mov
movsl
pop
push
add
xchg
push
add
ss
out
aas
jge
aas
subb
pushl
mov
jp
outsl
shlb
aaa
sub
cli
sbb
sub
add
jl
gs
loop
xor
mov
les
das
cli
and
jle
pop
adc
js
dec
jl
mov
and
incl
cmp
addr16
pop
inc
cmc
mulb
mov
adc
or
fistpll
cmp
incl
adc
adc
divl
or
in
mov
xor
lahf
lahf
push
cmp
jg
and
cmp
insl
enter
mov
and
jmp
jg
es
adc
mov
inc
dec
mov
cmc
popa
cmp
sub
jno
pop
clc
cmp
or
sub
mov
dec
pop
add
cld
xchg
pop
or
ljmp
push
test
push
and
mov
jne
aad
pusha
insb
xor
push
jl
or
cwtl
mov
je
push
mov
mov
jp
push
or
jge
popa
dec
xchg
dec
in
pop
mov
and
lcall
jbe
push
push
jo
jle
data16
lock
mov
xor
addr16
notl
sti
call
scas
ss
push
push
out
push
jge
imul
inc
cmp
adc
hlt
mov
sbb
sbbb
fidivs
movsl
pushl
fldl
into
repz
push
shlb
cmp
mov
push
jnp
mov
xor
pushl
dec
jnp
and
fucom
stos
clc
int3
es
fcmovb
loop
clc
gs
jo
xchg
xchg
mov
call
push
cwtl
cmp
and
rolb
fwait
mov
mov
lcall
xchg
mov
rclb
test
or
jbe
ds
or
int3
ret
outsl
sbb
pop
xchg
jg
in
push
pop
fistpl
clc
lods
dec
jnp
js
mov
mov
icebp
sbb
mov
pop
imul
or
mov
ljmp
cli
jb
xchg
incl
aaa
jo
loopne
mov
pop
or
cmp
xchg
jp
xor
mov
cmp
fcos
lds
push
xchg
mov
fsubr
js
sub
mov
rorb
or
jmp
pop
ret
movsb
xchg
out
or
pop
mov
add
mov
lds
push
push
and
mov
mov
stc
xlat
aaa
inc
int
ret
dec
pop
repz
sub
push
pushl
mov
mov
stc
cmp
mov
cmp
add
inc
lcall
sub
lret
lret
mov
sub
jmp
shlb
or
add
lcall
addr16
jmp
mov
cld
cld
xor
inc
popa
jnp
mov
lea
jmp
cld
pop
mov
push
inc
mov
push
cmpb
imul
or
sti
mov
fdivr
adc
add
mov
cmp
fimuls
sub
dec
test
fidivrs
bnd
stc
fsubrl
xor
pop
cmpsb
mov
xor
push
lcall
outsl
rcrb
cmc
scas
push
dec
inc
out
out
inc
adc
ljmp
inc
outsl
cmp
imul
pop
push
mov
lds
inc
addr16
ret
push
xchg
insb
test
call
stos
push
movsl
adc
adc
mov
fbld
pop
sti
nop
xchg
insl
adc
push
jmp
mov
stos
sub
cmp
xlat
popa
push
imulb
pop
and
push
shlb
pop
pop
sbb
xchg
push
mov
test
and
lcall
cmpsb
and
mov
xchg
push
xchg
mov
vpmaddwd
mov
jmp
pop
fwait
dec
lock
daa
movl
jo
scas
sbb
cwtl
cli
arpl
mov
jmp
add
inc
jp
ljmpw
mov
adc
loop
pop
test
jecxz
ljmp
ret
cmp
cli
push
pop
mov
hlt
fcoml
add
pop
ds
push
cmp
mov
or
jno
fwait
jo
sarl
shrb
or
test
loope
pop
xchg
lods
sbb
orl
ljmp
iret
xor
movl
int3
stos
fbld
xchg
lds
aam
cmc
lea
jmp
xlat
jae
in
and
push
push
cmpsb
lock
insb
jns
data16
pop
jbe
jle
xchg
jg
decl
stos
pushf
cmp
mov
faddp
cmp
mov
int
imulb
decl
dec
insb
add
sub
sub
sub
cmp
inc
int3
sahf
mov
lods
adc
sbb
inc
imul
jae
dec
adc
shlb
dec
inc
andl
popa
into
pop
xchg
push
sbb
xor
ja
imul
sbb
call
sub
iret
mov
ret
cmpsl
rorb
lock
dec
stos
in
lea
jl
adc
cld
jl
xchg
pop
pop
leave
inc
push
add
test
xchg
rcll
push
in
xor
out
cli
movsl
ret
ret
outsb
and
sub
inc
jge
popf
mov
and
and
push
mov
inc
imul
xchg
mov
dec
aam
mov
xor
and
xchg
mov
aad
jp
jnp
bnd
popf
loope
fucomi
cmpsb
out
xchg
roll
icebp
jg
cmp
xor
shr
pusha
mov
out
mov
add
std
les
mov
idivl
add
das
mov
pop
push
add
mov
aam
int
xor
loope
lret
mov
add
xchg
loop
fisttpl
aam
aam
aas
popf
je
add
outsb
inc
in
scas
dec
mov
adc
in
loopne
clc
mov
lock
jg
inc
iret
fistpll
mov
jno
cld
or
sahf
sbb
fists
insb
jo
jg
xchg
shll
mov
movsl
std
leave
sbb
cmp
filds
stos
xor
stc
xor
pusha
mov
out
enter
dec
xchg
enter
ret
ljmp
addl
test
addr16
sbb
push
dec
int3
ljmp
mov
and
lcall
test
jp
std
aad
xchg
dec
pop
nop
mov
and
xchg
mov
ffree
bound
sti
scas
push
xchg
call
divb
clc
adc
jne
aam
ret
ljmp
mov
mov
cltd
mov
leave
pushl
xor
fbld
jno
fidivl
fwait
xor
leave
xor
adc
addr16
inc
dec
pop
fimuls
pushl
ja
and
js
loop
cmp
sub
mov
mov
mov
stos
cmp
sub
out
ljmp
sarb
int
dec
and
push
sahf
pop
push
dec
xor
jle
xchg
movsb
cmp
cmpsb
leave
xor
adc
in
loope
enter
pop
loope
int
decl
pop
xlat
pop
in
mov
lahf
xchg
out
xchg
push
jnp
cmpsb
addr16
test
hlt
sub
lret
cmp
inc
js
sub
in
aaa
cwtl
jbe
fbstp
jg
cwtl
test
cmp
adc
in
pushf
ljmp
push
xor
arpl
outsb
sub
sub
andb
mov
dec
dec
jecxz
testb
jl
out
mov
aas
sbb
mov
shlb
mov
ja
rolb
daa
int
fmulp
fisttpl
mov
push
ljmp
sub
test
mov
push
test
stos
jae
pop
mov
ljmp
stos
stos
xor
scas
repz
fnclex
test
and
add
stos
int
shll
cmp
cmpb
dec
leave
or
add
mov
and
sub
dec
mov
pushl
xor
ljmp
wbinvd
shl
or
add
sarb
out
jmp
sbb
incl
aaa
call
or
aas
mov
in
and
xor
loope
bound
decl
jb
insb
test
cmp
ret
add
cltd
mov
out
andl
cmp
call
loope
xorps
lcall
jle
pushf
or
ds
xor
rclb
stos
jg
or
addr16
rcl
dec
jae
sbb
sub
rorb
js
push
mov
and
lahf
pop
xchg
and
fimull
filds
xchg
fldenv
mov
lods
les
lock
mov
decl
push
push
xchg
nop
dec
daa
and
adc
cmp
and
pop
jae
inc
inc
pushf
mov
call
in
fs
out
jne
scas
mov
test
lods
or
mov
pushl
dec
and
and
sbb
pop
sub
or
mov
daa
imul
inc
mov
pop
inc
xchg
ja
jb
insb
sbb
inc
push
pop
ds
push
incl
loop
daa
mov
nop
or
insl
sbb
or
jle
sub
lcall
cmp
insl
les
imul
ja
push
mov
outsl
loop
push
dec
push
inc
fbld
test
test
xchg
pop
incb
orl
jg
add
aam
and
aam
jb
mov
mov
loope
enter
scas
xor
mov
sbb
ds
lahf
sbbl
stos
cli
lcall
into
xor
sbb
xlat
lcall
push
ret
mov
xchg
dec
xchg
push
xor
mov
dec
sub
adcb
ss
outsl
push
and
push
add
push
push
push
inc
or
icebp
inc
dec
mov
mov
lret
addb
inc
stc
mov
adcb
bound
imul
jae
aaa
and
jne
jo
imul
in
add
push
insb
or
ds
ss
add
mov
out
jo
push
add
test
add
and
xor
add
fbld
fists
insb
push
push
outsb
popa
jo
cwtl
adc
jae
outsl
xor
jo
mov
push
orl
out
fisubl
push
or
adc
test
int
fisubl
jb
push
inc
pop
or
xor
xor
pop
push
fmuls
sub
adc
add
insb
push
testb
jne
xor
pop
inc
mov
pop
inc
xor
ret
inc
and
cmp
mov
mov
jns
push
imul
popa
jb
sbb
mov
ljmp
dec
ret
push
sbb
push
out
and
inc
test
jo
cmp
jecxz
xchg
jo
or
and
add
inc
jl
loopne
sub
and
xchg
data16
sub
xchg
adc
sub
ficomps
outsb
flds
xor
rol
pop
dec
inc
ds
sbb
out
jae
sub
das
mov
std
push
push
or
fisubs
mov
rcrb
push
pop
js
outsl
ds
insb
jne
addl
data16
mulb
xchg
adc
xor
sub
sbb
mov
add
push
fildl
jo
pop
mov
xor
push
daa
jae
sub
mov
pop
xchg
or
mov
adc
gs
das
mov
jns
mov
inc
jae
lods
mov
fcoml
pushf
push
push
push
outsl
in
shl
hlt
fs
dec
mov
jo
dec
cmp
xor
adc
mov
xor
sub
flds
push
jo
and
dec
packuswb
pop
inc
cltd
jbe
pop
mov
mov
sbb
jno
leave
arpl
pop
imull
lods
inc
and
dec
popa
and
mov
xchg
std
inc
add
push
push
xor
popa
inc
lret
popa
enter
xchg
cmp
pop
popf
fcmovu
sbb
popw
push
gs
push
stos
push
pop
insb
subl
push
movb
and
add
lock
adc
ss
sub
inc
pop
in
push
dec
jae
in
ficoml
fistpl
inc
dec
fistl
inc
dec
push
cmp
mov
push
imul
or
fs
js
std
xchg
lods
xor
fnstsw
ljmp
inc
cmpsb
or
cmpsl
insl
pop
push
call
ja
ficoml
lods
mov
cmp
and
fcompl
mov
popa
es
jp
lds
sub
popf
push
sbb
sbb
les
pusha
mov
adc
mov
mov
mov
cld
xor
outsl
jns
int
es
dec
dec
push
addl
and
imul
insl
pop
pop
repz
ss
je
push
inc
or
cmc
inc
out
sti
inc
sbbb
cltd
inc
sbb
cmp
push
mov
or
and
shll
sub
jge
faddl
flds
mov
add
or
xor
pop
stos
pushf
pusha
inc
stos
loope
adc
mov
pop
inc
cmp
scas
dec
push
sub
adc
and
xor
push
mov
push
add
ret
scas
jne
inc
push
xor
mov
mov
xchg
fists
xlat
mov
push
orl
sbb
pusha
arpl
mov
outsl
adc
pushf
inc
fwait
inc
sbb
inc
mov
or
cmp
decb
outsl
int
mov
xchg
inc
aaa
jbe
sub
jmp
lods
mov
imul
fadds
cmp
xchg
jmp
test
shll
and
and
jns
or
adc
sbb
outsb
mov
dec
orl
sbb
jne
xor
mov
pop
cmpsb
push
mov
adc
inc
arpl
xor
push
or
dec
add
jl
dec
fstl
sub
jg
pop
mov
push
rolb
lock
inc
sbb
shll
dec
xor
cmpl
and
cmp
gs
fisubl
sbbl
add
mov
imul
jp
adc
mov
adc
pop
xorl
mov
push
adc
pop
inc
mov
lret
inc
xchg
cmp
aaa
shlb
push
outsl
mov
push
add
push
and
sbb
inc
sub
lods
jns
pop
jo
inc
inc
inc
push
arpl
stos
sbb
imul
loop
fs
fdivs
mov
inc
subb
insb
icebp
leave
jmp
jle
nopl
inc
imul
mov
xchg
and
dec
jae
jno
or
sbbb
ret
stos
mov
lods
pusha
add
cmp
js
lods
push
imul
xor
or
lds
sbb
sbb
push
enter
hlt
xor
daa
jno
jecxz
ret
loop
xor
inc
dec
jnp
cltd
mov
push
pop
xor
shlb
xchg
adc
jmp
pop
outsb
inc
push
push
adc
add
adc
pop
cmp
push
jo
mov
outsb
dec
fildll
mov
stc
lock
pop
add
add
mov
xor
adc
xchg
movsb
dec
adc
add
or
movlhps
mov
mov
push
xchg
mov
cmpsl
mov
adc
in
addb
mov
jb
and
shll
insb
popa
or
add
in
and
inc
pusha
add
inc
jb
push
jb
testb
push
leave
inc
add
cmp
add
push
repz
jo
push
pop
mov
js
add
dec
sub
cmpsl
rclb
aad
fdiv
and
loopne
adc
mov
jo
mov
jle
push
pop
push
aaa
popa
push
mov
mov
cmpsb
cmpsl
push
pmulhw
mov
addl
or
xor
test
imul
gs
rcrb
push
movsb
and
fs
subb
shl
sbb
sbb
fisubs
or
sub
je
notb
and
adc
sub
adc
inc
xchg
gs
lret
add
push
repz
and
jge
and
out
test
enter
push
adc
and
paddsw
inc
xchg
mov
dec
sub
xchg
ja
xor
sbb
pop
rcll
cmp
and
or
adc
dec
mov
adc
mov
arpl
and
or
mov
mov
test
popf
add
sbb
or
or
mov
inc
lods
sub
inc
fisubl
dec
addl
in
test
lds
arpl
mov
sub
xor
push
jbe,pn
fsubr
lods
xchg
cwtl
xchg
icebp
addl
outsb
add
add
push
adc
sbb
pusha
rol
xlat
insb
and
dec
popw
lea
lds
nop
and
jnp
add
or
push
mov
mov
push
or
mov
roll
push
hlt
call
push
icebp
push
pop
fdivrl
outsl
mov
sbb
ja
addr16
lods
pop
loop
add
fldt
aam
mov
lea
adc
add
and
iret
or
call
push
push
push
inc
out
adc
add
sub
xchg
rcrl
xchg
dec
push
or
dec
jae
xchg
sbb
xchg
push
pop
loope
or
js
dec
xchg
push
jnp
mov
fstpl
add
jmp
iret
imull
int
imul
sbb
adc
pop
nop
dec
and
mov
inc
push
dec
ret
sbb
adc
dec
sbb
loopne
or
mov
xchg
jo
add
adc
pop
lcall
lret
scas
jb
cmp
pop
inc
or
stc
fistl
push
add
jo
mov
inc
jns
mov
insb
xorl
pop
cs
dec
imul
and
ss
xlat
add
and
jb,pn
outsl
sub
popa
xor
add
sub
shlb
out
inc
cs
loopne
roll
or
cld
push
rcrb
sti
pushf
mov
es
lahf
add
mov
bnd
ret
dec
adc
add
push
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
