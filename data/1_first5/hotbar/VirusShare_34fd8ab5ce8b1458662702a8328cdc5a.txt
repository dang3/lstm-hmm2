divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xorb
rcrb
dec
aaa
adc
sub
outsb
jg
pop
nop
pop
adc
mov
pop
clc
or
pop
mov
int
mov
orb
and
cmpb
outsb
outsl
je
add
adc
xchg
and
and
cs
cmpsb
mov
shrd
popa
incl
lea
in
bswap
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
ljmp
lret
cli
push
xor
out
xchg
cld
push
imul
lret
dec
testb
mov
dec
daa
loopne
add
or
or
into
sahf
insb
daa
aam
cmp
add
fcoms
add
jg
add
add
sbb
add
prefetch
pop
xor
push
test
in
sub
mov
fsubrs
js
push
loop
pop
and
rclb
loopne
add
cs
cmpb
jge
and
and
lods
add
loopne
and
jb,pn
dec
push
mov
sar
repnz
cs
mov
fs
dec
or
adc
insl
rcrb
out
and
jb
repnz
cltd
test
push
dec
sbbb
add
add
xlat
jecxz
sbb
sti
incb
adc
inc
push
rol
movb
dec
xor
or
sub
lea
push
add
cmpsb
or
and
adc
lods
insb
sbb
loop
jne
sahf
enter
add
sub
daa
sub
ss
imul
jbe
andl
push
xchg
fbld
ror
dec
fucomi
push
xor
gs
push
sti
pop
pop
faddp
ja
jne
jmp
mov
rcrb
xor
pushf
xor
in
inc
xchg
into
int3
loope
pop
sub
push
icebp
sbb
fstl
insl
adc
cmpsl
fnsave
dec
push
ja
inc
add
xor
and
movsb
or
mov
pop
xchg
clc
add
cmp
cmp
hlt
in
adc
add
stos
mov
push
mov
sbb
push
movzbl
sarl
and
nop
fadds
mov
insb
daa
ret
mov
movsl
mov
mov
cmp
jbe
mov
add
pop
and
push
sub
pop
fdivl
inc
nop
inc
cmp
jp
roll
or
lahf
or
adcb
loopne
cmp
mov
mov
adc
cltd
loopne
call
sbbb
push
add
outsb
xchg
test
sub
clc
pushf
and
push
sub
clc
aad
or
repz
mov
xor
push
inc
imul
add
adc
push
es
lods
mov
mov
pop
sub
arpl
sbb
aam
subb
nop
popa
inc
or
and
add
push
rcl
mov
adc
mov
and
out
dec
adc
loopne
shrb
mov
movsl
es
xor
jl
hlt
cld
add
lahf
inc
mov
imul
add
mov
or
enter
xchg
mov
push
stc
dec
jnp
or
mov
leave
push
sbb
fwait
les
mov
cmp
pop
add
ficomps
or
push
add
rcll
xchg
ret
push
outsl
push
sahf
push
inc
fiaddl
jp
dec
pop
push
ret
shlb
or
enter
sbb
pop
cltd
test
inc
mov
and
sub
and
sbb
push
sub
adc
or
lret
addb
mov
aam
je
inc
test
movb
xchg
sbb
add
push
mov
cmp
mov
sub
add
mov
mov
mov
or
iret
mov
andb
mov
mov
test
mov
mov
in
add
and
loopne
xor
pusha
shrb
mov
xor
mov
xlat
hlt
sahf
adcl
jne
inc
repnz
mulb
lcall
lcall
and
dec
xor
in
push
int3
out
or
movsb
sbb
mov
xchg
popf
xlat
jno
outsb
fcoml
and
jnp
mov
push
enter
pop
fiaddl
dec
divl
push
inc
push
push
insb
fcoml
xor
jo
sub
fildl
adc
lahf
push
mov
movsl
xchg
mov
push
mov
mov
xchg
xor
dec
pop
cmp
cmp
ss
or
mov
sbb
inc
rol
lcall
or
stc
jp
je
cltd
mov
push
aam
xor
push
fst
jne
ret
xlat
pop
jp
push
xor
aad
or
inc
or
adc
rclb
lahf
mov
sbb
test
ja
rclb
add
mov
and
call
xor
push
jnp
int
pop
inc
push
xor
addr16
xor
jle
gs
call
sub
cmc
mov
mov
dec
add
in
add
adc
pop
xchg
movsl
dec
insb
and
test
fsubrl
jecxz
scas
lcall
rcll
xor
sub
adc
test
and
or
mov
sub
cmp
test
or
call
test
dec
xchg
lea
xor
mov
or
pop
or
scas
in
nop
mov
add
dec
jecxz
sbb
jmp
test
sarb
inc
lock
add
mov
pop
xchg
aad
add
dec
adc
pusha
orb
shrb
mov
add
lods
or
ja
pop
mov
or
loopne
xchg
xchg
sti
push
sbb
dec
call
out
pop
into
pop
in
dec
push
inc
adc
or
mov
loopne
push
rcl
or
sub
in
and
fs
sbb
sbb
dec
shrl
cs
push
or
in
shl
or
adc
xchg
jp
cmpsb
xlat
push
inc
push
xor
jle
popa
adc
clc
sbb
cwtl
jb
shl
or
mov
add
ret
sub
or
jno
push
xchg
mov
push
std
push
pop
or
mov
pusha
pop
dec
add
addb
dec
sub
loop
je
cmp
call
ret
aas
cmpsl
call
or
shll
pop
lds
and
push
pop
lahf
sbb
stos
push
mov
movsl
gs
push
es
mov
fisubl
ljmp
bound
push
adcl
dec
pop
jg
push
hlt
push
mov
sub
out
and
pop
loop
jo
nop
adc
xor
popa
mov
lahf
ss
lret
lret
mov
push
and
and
out
dec
subb
test
and
jne
ds
sbb
push
cmp
aaa
sbb
sbb
mov
dec
xchg
xlat
fdivr
lea
jp
jb
rclb
xchg
mov
mov
push
push
dec
fdiv
lcall
fcmovb
sbb
pop
pusha
push
sub
dec
push
int3
call
xor
jns
sbb
xor
cmp
lods
xchg
rcll
aaa
subb
andb
adcl
stc
add
and
and
jo
sub
dec
fcompl
jb
call
sahf
les
aas
lds
xchg
inc
je
cmp
cmp
xchg
test
in
xchg
sbb
push
lea
adc
mov
pop
ficoml
push
cmp
sub
jp
lds
dec
pop
shlb
and
mov
mov
push
add
fisubs
rolb
fildl
or
cmp
faddl
ljmp
divb
insb
hlt
ret
xlat
call
lock
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
mov
xor
sbb
mov
jecxz
inc
pop
in
pop
mov
push
movsl
in
dec
ds
fstps
call
or
mov
int3
fldl
fucomp
or
mov
adc
lret
stos
mov
and
cmp
loope
push
adc
pop
mov
pop
leave
mov
mov
dec
repnz
enter
das
mov
mov
rep
inc
pop
jo
xor
div
movsb
push
and
or
js
arpl
je
ss
rcll
jp
fstl
adc
or
mov
es
add
gs
fbstp
add
cmpsl
js
pop
in
int3
mov
pop
jns
adc
inc
push
hlt
ret
sbb
xor
or
dec
jmp
inc
xor
push
xchg
roll
ljmp
outsl
push
jb
je
ljmp
ljmp
sbb
je
popa
andl
pop
xchg
fiaddl
das
push
sbb
in
pop
loopne
adc
mov
mov
popa
add
pop
insb
or
xchg
inc
leave
mov
cmp
repnz
in
push
adc
aad
imul
in
data16
sbb
ljmp
lcall
add
xor
lret
push
fs
mov
pop
fnsave
sbb
and
aas
js
mov
repz
mov
xor
sub
adc
lods
mov
in
or
add
push
in
movsl
and
and
scas
dec
adc
scas
add
xchg
push
fsubs
sbb
or
jae
and
cmp
sub
pop
jmp
jecxz
roll
pop
dec
pushl
jo
test
xlat
and
dec
in
in
dec
repz
push
push
add
and
and
or
jmp
jo
enter
ficomps
jle
dec
sub
push
stc
testl
xchg
loope
jo
shll
push
or
nop
dec
in
inc
sub
sti
mov
ss
in
enter
mov
pop
jno
cmp
mov
mov
cmp
adc
and
ret
leave
sub
mov
xor
in
inc
jl
xchg
lods
inc
shll
in
mov
loopne
jmp
mov
add
adc
mov
lock
inc
sub
mov
sbb
mov
in
mov
mov
je
in
in
in
enter
mov
adc
jbe
ret
mov
lcall
mov
inc
enter
adc
out
xor
ret
es
inc
fildl
cmpsl
adc
mov
fists
pop
test
sbb
jne
mov
out
inc
sbb
jne
out
inc
xor
cmp
mov
movb
push
jbe
rol
inc
xor
or
mov
dec
mov
fmul
adc
xchg
popa
xchg
cmpsb
adc
jmp
or
pop
je
data16
fcomp
inc
test
inc
popf
sbb
enter
dec
jge
cwtl
adc
cmp
mov
mov
xchg
movswl
jb
mov
fcompl
adc
daa
mov
lods
lods
dec
xlat
push
push
arpl
jecxz
repz
pop
cmp
mov
push
cs
dec
lea
jb
add
add
cwtl
add
xchg
xchg
js
in
dec
adc
or
add
or
and
cmp
lds
push
add
jne
jl
xor
fsubrl
call
add
lods
adc
movl
sub
jmp
in
test
adc
sahf
in
jne
jmp
add
xchg
sbb
lods
popa
jecxz
scas
jns
dec
or
adc
pushf
sbb
fisubrs
ss
xor
cmp
outsb
push
add
add
out
enter
addb
aaa
dec
mov
and
cld
mov
icebp
inc
xchg
xorl
pushf
hlt
inc
addr16
into
mov
mov
sbbb
mov
sub
ja
sbb
in
inc
xchg
pop
add
pop
popa
inc
dec
pop
and
je
dec
fstpl
or
je
mov
das
xor
leave
ret
cmp
adc
sub
call
adc
or
incb
jmp
sbb
sbb
xor
bound
jmp
mov
xchg
call
xor
movsb
lods
jle
sbb
int3
mov
xor
lcall
jp
ja
popf
rorl
adc
add
add
or
push
mov
push
mov
add
mov
test
lea
xor
lods
mov
push
inc
jne
xor
push
or
push
movsl
mov
outsb
orb
sahf
sbb
mov
mov
add
mov
mov
loopne
cmp
push
loopne
jmp
push
pop
ja
push
mov
mov
jge
xchg
push
inc
rolb
jbe
add
test
imul
xor
dec
inc
inc
xor
push
std
dec
fcmovnbe
or
or
shr
incl
in
out
je
bound
jnp
jo
mov
mov
std
std
and
enter
add
lea
fwait
inc
jecxz
pushf
cli
adc
inc
shrb
inc
rorl
jnp
call
sub
in
lea
loopne
or
push
push
movsb
xor
inc
adc
adc
xchg
xchg
cmovs
pop
push
dec
lret
fmull
pop
mov
lock
adc
push
ds
xor
test
xlat
outsl
mov
jne
jl
add
jne
dec
testl
sub
add
cmp
mov
and
je
jbe
and
push
mov
push
enter
cmp
jmp
mov
test
cmp
sub
add
pop
add
push
add
fmulp
mov
add
add
orb
jmp
les
xor
inc
jge
lods
mov
sbb
add
int3
add
push
push
lods
or
sbb
test
lea
stos
inc
push
push
add
or
in
idivl
cmp
pop
pop
cmp
shll
rclb
sbb
mov
xor
mov
mov
rcrl
int
lods
sarl
call
push
ret
mov
xlat
xchg
in
jbe
ret
vpmovzxbd
push
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
imul
or
jle
or
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
mov
jl
jb
cmp
xchg
ret
sarb
jmp
add
pop
sub
push
cmpsl
pusha
lods
sbb
rorb
rorb
test
dec
nop
xorb
mov
rolw
push
sbb
lock
dec
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
rcr
movsb
cmp
or
andb
push
or
or
mov
add
xor
adc
push
or
mov
push
fdivl
mov
adcl
or
add
addb
ficoms
push
add
call
out
dec
in
pop
aaa
pop
loope
xchg
mov
or
sbb
push
in
call
mov
lods
mov
ljmp
mov
test
or
adc
test
fimull
adc
mov
sbb
rolb
mov
push
mov
lea
or
pop
cwtl
pop
jbe
xchg
stos
gs
mov
fucomip
cmp
je
cmp
jbe
hlt
inc
mov
movsb
xchg
jne
add
dec
cld
mov
pusha
negl
nop
clc
push
and
std
pop
nop
or
shll
jo
mov
lock
sbb
push
mov
dec
xchg
push
inc
or
mov
clc
test
add
movsb
jae
es
xlat
pop
pushf
loop
test
or
outsb
cmp
shr
je
pop
cmp
scas
push
out
stos
fwait
add
xchg
push
dec
cmpsl
popa
test
je
jb
clc
mov
inc
lock
mov
mov
and
xor
test
jo
jbe
jbe
inc
dec
jnp
fwait
jmp
push
mov
mov
fsubr
jo
push
sbb
push
mov
push
addb
mov
into
jmp
lds
lods
sbb
aad
fwait
inc
adc
pop
stos
mov
rolb
and
adc
mov
sti
push
je
test
push
mull
xchg
sbbb
test
dec
in
lea
and
mov
js
pop
push
rolb
lds
mov
les
push
adc
jne
data16
push
push
shrl
mov
fwait
push
sbb
push
adc
call
loope
adc
je
and
push
xor
xor
xor
pop
scas
mov
je
jae
adc
lds
push
push
inc
dec
cmp
lcallw
add
or
adc
mov
mov
inc
shl
adc
aam
enter
shrl
or
or
and
sarl
subl
mov
xchg
jmp
subl
shll
mov
insb
gs
leave
jmp
add
mov
pop
push
push
push
push
adc
jo
adc
jne
clc
scas
adc
rclb
cld
push
and
push
mov
lods
mov
or
mov
jmp
adc
and
mov
xor
push
mov
pop
sub
je
shlb
or
loopne
dec
push
dec
mov
loop
loope
and
call
jbe
mov
pop
imul
push
fdivrl
push
mov
push
imul
pop
addr16
push
fld
sbb
sbb
jno
mov
sbb
jne
into
cmp
jecxz
sbb
addr16
ss
mov
dec
or
jne
push
and
and
or
je
int3
jecxz
es
cmp
mov
jns
adcl
jmp
nop
or
push
sahf
jae
adc
adc
mov
mov
jns
icebp
call
and
cmp
jmp
je
das
and
or
jnp
inc
jmp
dec
setb
popa
fsubrl
push
cmp
sbb
and
add
movsb
sbb
pop
sbb
scas
fidivrs
xchg
jl
jmp
push
and
negb
nop
mov
push
dec
xor
add
clc
call
pop
mov
jne
push
mov
cmp
movsl
mov
pusha
movl
xchg
xchg
xchg
adc
add
xor
dec
sbb
out
fidivrs
sbb
push
call
lret
and
movsb
jmp
js
sbb
pop
pop
sub
test
or
insb
adc
mov
sbbl
xor
call
int3
cmpl
icebp
mov
mov
movsl
adc
inc
pop
and
arpl
das
outsb
je
push
stc
sub
push
push
addr16
popa
or
xor
sbb
sbb
sbb
jo
or
mov
pop
cwtl
or
popf
pushf
fnstenv
cmp
or
cmp
test
inc
js
addr16
stos
push
addb
inc
loopne
fs
inc
lret
jmp
mov
incl
mov
andl
cmp
jg
push
lock
add
add
or
or
insb
stos
in
jbe
test
aas
mov
icebp
pusha
and
ret
les
inc
xchg
nop
push
decl
or
decl
dec
jne
movzbl
add
sarb
movsb
nop
in
cmpsb
mov
mov
test
jbe
jge
jecxz
lock
nop
adc
or
xchg
aad
movsb
es
and
sbb
cmp
std
and
adc
cli
sub
push
je
rcrb
adc
cmp
inc
sti
sti
pop
xorb
inc
xor
inc
pop
rolb
dec
and
popa
aas
and
or
shlb
out
add
imul
cmpsb
imul
subb
sub
loop
adc
or
sub
cwtl
push
sbb
call
push
push
call
xchg
bound
das
dec
inc
insl
sbb
ja
movb
dec
nop
lds
es
dec
mov
mov
push
or
aas
dec
jnp
movsb
sti
lds
es
mov
enter
lds
rorb
rorl
add
aas
mov
fnsave
das
repnz
xchg
adc
pop
inc
push
sub
roll
add
cli
shrl
ret
mov
repnz
rcll
add
push
shrl
add
and
adc
pop
mov
sarl
add
xor
and
push
adc
mov
imul
add
adc
pop
jecxz
add
adc
xchg
add
shll
add
add
dec
rorl
mov
or
and
sarl
cmp
adc
dec
cmp
rorb
movsb
push
dec
push
mov
stos
inc
pop
popa
pusha
sub
pop
inc
nop
dec
inc
dec
xorb
andb
icebp
sbb
aam
inc
aas
out
call
jecxz
into
ds
pop
call
call
out
cmpsl
cmp
dec
aam
inc
adc
inc
push
jns
cmp
call
subl
add
int3
pop
xchg
sbb
jmp
pop
leave
ret
adc
cmp
or
adc
add
stos
jno
ja
call
enter
scas
dec
into
dec
fwait
pop
jmp
sti
push
or
jb
cmp
jmp
mov
or
push
rcrb
xlat
xchg
adc
mov
lahf
ret
es
rolb
sub
loopne
pop
push
xor
cmp
into
cmp
xor
push
lahf
insl
push
dec
dec
jmp
sub
inc
jmp
add
push
sbb
and
ljmp
push
jmp
xchg
sbb
stos
or
insb
or
xchg
adcl
push
mov
and
jo
mov
push
add
xlat
test
arpl
out
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
inc
cmpsl
scas
fs
into
rcrb
div
shll
sub
dec
pop
sbb
jo
push
es
adc
mov
or
mov
pushf
out
outsb
iret
dec
push
and
loope
clc
push
or
in
ficomps
ret
sub
cmp
push
and
xchg
int3
xchg
mov
sbb
js
mov
and
jb
jbe
inc
push
imull
push
dec
xor
enter
xchg
inc
sub
jp
pushf
sub
ss
sbb
add
pop
cmp
push
xchg
pop
aaa
xchg
xor
mov
add
lods
pop
lea
jmp
adc
int3
push
mov
test
dec
adc
nop
inc
pusha
inc
inc
cmpb
es
inc
push
push
inc
rolb
push
cmp
call
push
mov
or
aaa
and
orl
pop
inc
add
in
das
inc
or
xor
inc
push
dec
sub
inc
xchg
dec
call
push
orl
pop
jb
jmp
lret
call
add
cwtl
or
rcl
out
das
cwtl
or
inc
stos
cwtl
xchg
sti
fidivs
cmp
pusha
nop
push
in
nop
je
int3
xchg
push
out
and
or
iret
jnp
adc
sub
cmp
repz
adc
add
add
out
out
clc
sbb
jmp
sbb
bound
cli
mov
out
adc
sbbb
jns
ja
pop
nop
add
and
dec
xchg
or
out
in
xor
out
mov
int3
xchg
mov
repz
jnp
test
mov
ror
sbb
iret
shl
out
int
add
or
push
int3
xchg
sub
add
pusha
adc
add
loopne
mov
es
outsl
mov
add
jge
xchg
or
add
sub
insb
push
add
xchg
and
add
pushf
push
pop
jmp
cmp
je
mov
add
aas
xchg
jmp
sub
or
lahf
ret
lea
dec
add
inc
xor
push
pop
leave
xor
add
repz
pop
in
add
add
rorb
dec
imul
add
jno
je
xchg
add
push
repnz
scas
mov
jb
pop
and
push
push
gs
enter
inc
or
or
leave
sbb
cmp
cld
add
cmp
push
repnz
or
test
mov
fisubs
xchg
inc
scas
in
or
sahf
xchg
sub
push
cmovp
inc
xor
adc
enter
adc
or
adc
in
add
adc
jns
mov
jns
cmpsb
repnz
add
adc
adc
adcl
scas
in
mov
in
jns
pop
pop
and
cs
sbb
xchg
sbb
pop
leave
repz
mov
and
mov
sbb
pop
push
sbb
out
sbb
push
sbb
dec
leave
repz
xor
sbb
repz
push
inc
negb
sbb
seto
jne
add
add
sub
cmp
mov
pop
movl
iret
cmp
xchg
and
lods
pop
out
hlt
add
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
dec
ficoms
in
in
sahf
addr16
sahf
out
mov
roll
in
call
mov
adc
and
mov
cmp
pop
leave
xor
ljmp
jmp
jmp
nop
cmpsb
inc
mov
in
in
in
pop
insl
in
xchg
aad
in
cmp
sub
scas
mov
out
cs
adcl
stos
or
lock
enter
dec
icebp
cmp
das
sbb
or
or
repz
std
hlt
hlt
repnz
pushf
imul
std
xor
out
cmc
cmp
pop
leave
testb
jns
gs
clc
clc
iret
enter
or
xor
and
cli
add
sti
sti
fmul
dec
in
cld
cld
cld
je
cld
push
xchg
mov
shlb
mov
xor
xchg
sub
xor
inc
ret
inc
sbb
jb
nop
xor
lahf
shll
mov
jnp
adc
pop
jmp
pop
add
jecxz
xor
pop
in
in
push
scas
stos
pop
cmpl
aam
or
enter
out
xchg
scas
and
aad
cltd
sti
add
stos
adc
cltd
or
dec
jmp
jmp
jns
xor
or
and
and
cli
or
cli
out
out
out
xchg
pop
push
and
lock
addl
xor
or
repz
xchg
sbb
add
stc
lcall
div
xchg
stos
pop
pop
divl
or
push
in
ret
xchg
stc
sbb
and
sti
sti
xchg
or
leave
sbb
cmp
jmp
scas
and
mov
cli
or
inc
push
popf
adc
xabort
sbb
dec
loop
loop
pop
push
and
jecxz
inc
andb
dec
nop
cmpsb
rorl
clc
or
pop
insl
out
fdiv
out
xchg
cmp
pop
mov
sub
or
aad
aad
ljmp
in
notl
mull
hlt
imul
in
adc
testb
or
lret
add
xchg
testb
repnz
inc
and
xor
pushf
mov
mov
movsl
test
xchg
mov
stos
mov
cmp
cmp
cmp
sbbl
or
sub
cmp
setb
push
loope
cmc
cli
hlt
mov
xlat
inc
scas
push
cmpsb
add
lock
inc
test
mov
push
mov
pop
lcall
loope
loope
inc
scas
mul
jp
cmovnp
and
pop
hlt
cmp
xor
adc
sbb
in
sub
repz
pop
jo
aam
mov
sub
or
dec
push
arpl
mov
sbb
cs
or
arpl
mov
sbb
cmpsl
repnz
adc
or
mov
icebp
das
xchg
leave
and
repnz
xchg
pop
pop
repnz
cld
icebp
cmc
cmc
mov
icebp
mov
xchg
mov
cwtl
icebp
rcrb
or
pushf
mov
xchg
cmp
cmp
icebp
movups
push
daa
or
or
add
jmp
shrl
mov
sti
outsb
xchg
push
push
sub
ffreep
push
inc
pop
das
push
or
inc
cmp
xchg
addr16
cmp
stos
adc
add
pop
pop
out
mov
pop
rol
pcmpeqw
addr16
pop
xor
jmp
xchg
inc
and
jmp
fs
popf
xchg
jmp
mov
loop
dec
int3
dec
push
nop
push
jns
jl
and
dec
push
aaa
or
push
ds
roll
scas
dec
adcl
repz
repz
mov
dec
jae
insb
sbb
push
jns
fldcw
push
in
xchg
gs
dec
movsb
repz
out
or
mov
add
addb
pop
mov
mov
dec
arpl
mov
and
or
inc
and
and
ficompl
pop
xchg
lods
inc
and
frstor
shlb
xchg
or
xchg
mov
outsb
xchg
lods
jle
cmp
dec
jmp
je
sbb
push
xorb
xchg
inc
jmp
mov
or
arpl
movsb
sub
push
sub
xchg
push
inc
inc
lock
sub
dec
xor
inc
jecxz
push
sub
mov
sub
sbb
push
sbb
pop
call
lahf
xor
add
and
adc
imul
jmp
xchg
xor
add
push
add
and
and
call
mov
mov
loope
lret
adc
jmp
adc
xchg
xchg
push
adc
insb
and
divb
jno
addb
lahf
mov
adc
mov
sub
pop
xor
sub
push
ss
push
je
or
adc
hlt
psubsw
inc
jmp
dec
sbb
enter
sub
cmp
dec
adc
jbe
lret
add
call
dec
or
and
add
outsb
adc
add
pusha
xchg
pop
and
jo
lds
adc
inc
and
push
shlb
xor
adc
and
inc
mov
push
and
dec
mov
xorb
adc
add
dec
pop
das
and
and
inc
pusha
inc
mov
inc
push
add
xorb
inc
xorb
inc
mov
xor
shlb
sub
outsl
add
pop
inc
popf
fnstenv
cmp
or
test
ds
push
xor
ficomps
fwait
push
or
movsl
xchg
push
cltd
xchg
call
add
cltd
xchg
mov
sbb
or
mov
loopw
push
dec
xorb
movsb
pop
and
imul
dec
lahf
stc
jg
and
push
lahf
push
xor
cltd
imul
push
mov
adc
outsl
and
lock
adc
frstor
sbb
dec
divb
movsb
sti
and
and
in
pusha
adc
es
jmp
jl
jmp
nop
outsb
lcall
movsb
adcb
in
outsl
pop
and
cmpsb
mov
inc
xor
ret
outsb
add
inc
out
jb
sbb
cmp
rorl
stc
inc
scas
es
lahf
aam
dec
nop
out
lds
lahf
mov
cmp
pushf
pop
es
cmp
and
nop
lahf
es
mov
xchg
and
leave
leave
leave
dec
cmp
sub
in
lret
shld
ja
pop
sbb
nop
dec
in
sub
lahf
mov
or
sbb
nop
out
sbbb
mov
xor
pusha
adc
adc
imul
shll
fbstp
lahf
inc
push
cmpsb
nop
inc
mov
pop
test
sbb
and
cmp
rcll
adc
cmp
and
jo
repz
push
jmp
enter
xor
aam
and
scas
inc
inc
add
push
enter
jmp
enter
call
fisubs
repnz
push
dec
sbbb
mov
sbb
movsb
dec
data16
push
pusha
outsl
mov
mov
dec
nop
popa
cmpsb
mov
movsb
push
push
jmp
push
cmpsb
movsl
pop
inc
mov
mov
and
sub
xor
cwtl
test
sbb
in
lea
sbb
pop
cmpsb
mov
push
cmp
fsubrs
inc
cmp
rorb
lods
cltd
fs
cmp
xorl
arpl
dec
xchg
add
sub
inc
scas
in
pop
inc
dec
xchg
and
repnz
or
inc
subl
cmpsl
lods
int3
pop
test
je
nop
clc
mov
pop
or
dec
or
das
xor
call
add
push
xchg
cmpsl
test
jecxz
adc
sub
push
mov
decl
or
jle
add
push
inc
push
popf
and
pop
mov
adc
sub
cmpsl
enter
or
add
xor
inc
xor
in
add
jle
movb
mov
dec
sbb
sbb
dec
mov
pushf
xor
test
rorl
mov
sub
jmp
mov
in
popa
fsubs
sbb
movsb
test
add
movsl
push
loop
adc
and
test
cmp
data16
data16
xor
fndisi(8087
mov
inc
mov
test
pop
iret
dec
int
dec
pop
mov
bound
pusha
push
cmp
repz
popa
aas
ss
xor
rclb
adc
nop
out
ljmp
mov
cmp
or
loopne
inc
adc
sbb
cmp
movsb
mov
and
loope
cmp
into
dec
cmc
dec
pop
xchg
vorps
rorb
sub
cmp
scas
jb
or
mov
mov
pop
push
push
rclb
mov
sbb
mov
lods
sub
lea
xor
or
xchg
mov
jl
mov
xchg
lods
sub
cmp
cltd
xchg
loope
pop
xor
nop
xchg
sub
sbb
xor
rclb
sub
loopne
rcl
pusha
or
test
mov
xor
loop
mov
data16
sub
data16
sbb
repz
mov
js
je
loopne
mov
mov
xor
ja
sbb
lahf
call
pop
iret
sub
shrb
cmp
sub
movsw
jp
push
dec
je
sbb
mov
dec
sub
nop
fst
insb
in
loope
rcl
je
cltd
xchg
sub
shr
cmpsl
xor
mov
in
sub
mov
je
inc
pop
sub
nop
dec
cmp
xor
data16
pop
fs
sub
mov
insb
mov
sub
movb
lods
cltd
xchg
jae
push
xor
sub
mov
loopne
sbb
psadbw
or
shrb
fstl
xor
mov
xor
imul
sub
nop
mov
xlat
ss
xor
dec
inc
ja
sub
sub
adc
shrb
enter
sub
sub
or
jno
nop
pop
inc
xor
jnp
rorb
shrl
mov
mov
xor
dec
iret
xor
dec
sbb
imul
dec
inc
dec
xor
arpl
jo
or
sub
lret
insl
mov
or
dec
or
cmp
out
add
sub
sbbb
decl
scas
mov
imul
jno
xchg
in
sbb
movsl
sub
pop
movsl
cltd
xchg
movsl
test
sub
cmp
call
data16
daa
rcl
xchg
sub
aam
xchg
push
js
sbb
pusha
and
xor
sbb
pop
add
sub
dec
add
mov
sub
mov
sub
add
popa
cs
data16
popa
into
mov
movsl
sub
inc
sbb
sub
sbb
mov
sti
es
and
es
jecxz
adc
loop
imul
xor
push
aam
and
sbb
sub
xor
dec
int
je
sub
xor
shrb
pop
sbb
add
or
xor
aad
out
adc
lock
and
or
cltd
xchg
sub
jns
loopne
test
rorl
add
adc
xchg
or
int
push
in
push
jl
cmp
dec
jbe
cmp
in
mov
out
cmp
dec
dec
inc
cmpsl
sbb
sbb
lods
fisubrs
add
mov
sub
inc
cmp
nop
jb
sub
rcl
sbb
imul
inc
imul
sub
mov
mov
sub
cmp
sti
lret
outsb
sbb
je
lods
out
mov
iret
sub
jbe
scas
inc
xor
jg
addb
add
cmp
jmp
and
pop
and
rcl
sub
sub
ret
imul
jp
cli
xchg
push
pop
out
dec
push
inc
stos
and
les
sub
fisubrl
xor
or
js
outsl
push
sbb
sub
cmc
dec
inc
sub
mov
jg
jae
data16
mov
orl
imul
inc
inc
inc
inc
xchg
xor
cmp
inc
inc
inc
js
push
inc
inc
inc
inc
pop
dec
dec
pop
cmp
dec
and
rcll
rcll
call
adc
xor
jo
rolb
cmp
mov
jle
sub
pushf
and
mov
pop
xchg
icebp
leave
jmp
dec
insb
ja
xor
imul
and
xchg
xor
dec
xor
inc
lds
icebp
mov
repz
push
pushf
stos
mov
in
pop
xchg
and
punpcklwd
movsb
or
rcl
mov
ficoml
dec
pop
ret
sub
outsb
cmovno
bt
sbb
jl
enter
jbe
jb
or
lods
ret
mov
sbb
xor
dec
add
popf
test
ljmp
ja
or
ja
push
dec
inc
outsb
addr16
mov
dec
inc
scas
add
pop
adc
push
loope
xchg
lcall
js
fwait
jb
xchg
add
add
roll
xor
sti
add
les
sbb
or
pop
add
mov
adc
sub
mov
fmull
inc
fldcw
faddl
pushf
or
sbb
pop
xor
jns
xor
jl
pop
add
jns
push
sub
xor
je
and
mov
sbb
cmpsl
popf
mov
cmp
es
dec
insb
cmp
mov
sbb
jno
mov
faddl
cmc
jp
jb
jae
popf
push
ljmp
xchg
stos
mov
mov
push
add
je
ret
inc
xchg
xchg
push
out
or
push
pop
add
sbb
jnp
add
cli
mov
or
sbb
pop
cwtl
add
test
pop
and
push
mov
adc
scas
lcall
cmpb
xchg
es
or
dec
sbbb
xor
fwait
sbb
and
lock
dec
inc
hlt
out
or
insl
dec
pop
jp
jmp
dec
adc
add
notb
and
ror
daa
sub
mov
sbb
or
cmpsl
repnz
cmp
in
and
sbb
rolb
psubsb
jo
and
jbe
or
or
call
fistpll
inc
cmp
or
sbb
inc
push
in
jle
rcrb
sbb
mov
pop
cwtl
fistl
xchg
fwait
jp
ret
idivb
inc
rcrb
inc
in
inc
rorb
mov
mov
jmp
inc
sub
sub
or
imul
mov
xchg
test
ljmp
xchg
xor
pop
faddl
cmp
xchg
nop
dec
add
faddl
inc
pop
mov
imul
inc
clc
cs
call
or
xchg
mov
movsb
sbb
into
dec
call
sub
loopne
add
mov
inc
mov
xchg
add
and
shrb
enter
pusha
mov
and
mov
dec
enter
dec
adc
fnsave
or
call
pop
xchg
mov
adc
sub
dec
mov
mov
call
and
mov
mov
and
inc
xchg
mov
push
in
xchg
mov
or
adc
test
and
adcb
and
das
mov
test
push
mov
jecxz
addr16
outsb
jae
lea
mov
call
adc
add
inc
push
push
pop
push
loop
call
mov
add
incl
jl
je
fs
mov
dec
dec
mov
xchg
rcl
gs
sbb
cmp
mov
adc
inc
add
test
pop
ljmp
test
mov
es
mov
adcl
pusha
addl
pop
enter
mov
aas
push
cmp
rcr
sub
pop
inc
sub
repz
call
test
frstor
arpl
add
test
enter
or
xor
xchg
dec
pop
pop
mov
adc
adc
or
add
inc
inc
pop
adc
and
cs
mov
inc
add
imul
pop
jb
push
push
mov
inc
mov
call
ret
push
inc
call
fistl
push
inc
push
ss
mov
add
fdivl
xor
outsb
sub
mov
or
jne
cmc
movsb
xchg
movb
lods
cltd
inc
add
insb
cmp
add
test
mov
cmp
inc
jmp
dec
jmp
xor
rclb
js
inc
inc
adc
scas
xchg
sub
inc
jmp
inc
inc
inc
xchg
or
loopne
je
pop
es
imulb
or
cmp
mov
add
mov
adc
pop
cld
pop
pop
sbb
push
dec
xor
add
je
iret
lock
cmp
and
cmp
mov
add
mov
sub
cld
inc
jns
fcmovnu
add
xor
inc
jmp
and
into
mov
jmp
sub
pop
pop
fstps
gs
fs
push
nopl
pop
cltd
nop
std
enter
adc
mov
pop
cld
loop
pusha
popa
push
mov
fistl
or
orb
sbb
es
ja
or
xlat
push
push
div
lods
xor
inc
shl
cpuid
adc
ss
repz
enter
fisubrs
jge
push
push
or
ds
mov
repz
push
divl
and
jp
test
das
add
ja
cmp
xor
cld
imulb
push
add
ret
push
sar
inc
push
adc
xlat
jo
dec
scas
sarl
xor
int
push
hlt
dec
roll
pop
jae
mov
push
out
cwtl
imul
es
cmc
mov
nop
je
adc
outsb
sub
addr16
mov
pop
or
imul
pop
add
fists
mov
in
cmc
add
push
add
in
add
mov
stos
add
sahf
in
push
jb
push
pop
ja
mov
das
lds
shr
das
or
add
dec
pop
jp
lock
rorl
adc
adc
loope
cs
rclb
sub
xchg
xchg
arpl
xchg
les
xor
mov
push
mov
mov
ds
loopne
add
xchg
xor
scas
mov
mov
add
add
push
stc
insl
cs
xchg
ffree
or
int3
out
mov
enter
call
push
push
inc
mov
or
cmc
fists
mov
add
test
xlat
sbb
mov
mov
and
imul
and
inc
pop
data16
and
dec
inc
aas
mov
or
xor
lcall
jb
inc
push
int3
or
push
in
cmp
lea
nop
mov
xchg
lret
shl
jge
xchg
insb
xchg
sub
inc
push
jbe
xchg
pop
add
pop
add
push
cmpsb
nop
xchg
inc
xor
into
jmp
orl
mov
in
mov
mov
jecxz
int3
push
int3
and
jmp
data16
add
loopne
lods
es
out
fs
call
movsb
mov
sub
sbb
push
in
jae
aas
testl
jmp
movsb
mov
jmp
inc
mov
push
jg
sbb
pop
movl
sub
scas
sarl
inc
cli
pop
pop
repnz
cmpsb
rclb
ljmp
xchg
fidivrl
adc
shlb
pop
inc
xchg
sub
movsb
rcll
pop
or
imul
aad
pop
cmpl
or
cmp
inc
mov
and
sub
rclb
call
jo
add
in
in
sbb
nop
jb
or
cwtl
push
push
mov
cmp
mov
sbbl
mov
nop
mov
push
push
pusha
add
xlat
test
mov
or
jns
shll
jns
daa
addb
cmp
push
inc
add
or
or
adc
xor
sbbb
das
add
and
or
cmp
cmp
in
cs
mov
or
fistpll
cmp
xor
and
push
jmp
sbb
hlt
add
mov
xor
dec
xor
lcall
xor
outsb
xor
xor
add
add
cmpsb
cmp
roll
add
fwait
loopne
outsl
pop
shlb
and
jbe
sbb
and
sub
in
jbe
add
add
int
add
mov
out
popa
leave
and
sbb
push
enter
jecxz
dec
imul
xor
imul
inc
sbb
outsb
xor
sbb
loope
scas
add
dec
in
xchg
and
aam
or
push
mov
in
jo
in
sub
cltd
push
pop
push
ret
sbb
leave
inc
inc
or
dec
push
and
pop
in
push
jno
push
in
xchg
pop
rorb
mov
adc
fwait
pop
and
mov
adc
and
in
inc
push
cmp
in
or
and
in
inc
pop
jne
jne
add
xorl
and
loopne
or
jo
test
pop
sbb
je
test
mov
sub
cmp
jmp
daa
mov
xor
outsl
and
sbb
jb
adc
sbb
test
jmp
lret
call
pop
or
stos
les
inc
mov
clc
pusha
out
aam
dec
call
jecxz
or
xor
and
sbb
imul
call
dec
icebp
sahf
add
jne
cmp
xchg
dec
adc
or
nop
mov
jno
test
and
call
enter
loopne
add
ficoml
pop
and
xchg
sub
sbb
test
jbe
or
sub
outsb
add
enter
loopne
sbb
pop
fdivrs
push
jne
sar
mov
mov
xlat
inc
rolb
je
cmp
out
push
mov
outsl
mov
inc
adc
mov
daa
lea
mov
mov
cltd
sbb
add
cmp
es
add
adc
push
cwtl
add
addr16
push
cwtl
nop
or
jb
aas
sbb
sub
call
or
addr16
mov
roll
adc
add
xchg
testl
shlb
cmp
xchg
rcrb
push
xor
adc
mov
cmp
sarb
sub
xchg
push
mov
xchg
push
sub
pushf
es
mov
les
stos
mov
adcb
push
adc
mov
ss
lds
daa
pop
sbb
daa
or
sbb
adc
je
jno
jne
int3
push
pop
add
cmp
insl
dec
dec
loope
push
xchg
mov
mov
pop
jo
fisttpl
pop
adc
shl
packuswb
fdivrl
cmp
mov
xchg
xchg
dec
and
dec
inc
or
mov
in
mov
aam
pop
call
dec
push
dec
dec
hlt
push
jp
dec
xchg
and
jnp
inc
inc
jns
sub
mov
adc
push
and
movb
jns
test
idivl
data16
and
jmp
cmp
fstl
inc
jns
mov
frstor
add
adc
add
lret
xchg
js
lods
mov
dec
push
call
mov
addl
push
and
cmp
adc
rcr
xchg
push
cmp
push
xchg
jns
int
lods
outsb
test
mov
pushf
mov
mov
lds
mov
pop
pop
xor
imul
add
adc
call
mov
int
rorb
mov
ss
mov
dec
adc
sub
jns
int3
mov
mov
ret
mov
and
xchg
pushf
idivb
jns
fadds
jp
push
jns
pop
adc
ds
popf
subb
hlt
adc
push
xchg
jns
mov
adc
jns
sub
mov
test
sbb
cs
push
jns
dec
push
inc
jns
pop
push
inc
inc
jns
and
jbe
adc
sarb
jne
or
add
sub
push
xchg
nop
jns
orb
sub
mov
sbb
test
push
lea
sub
jns
adc
stos
dec
call
or
inc
das
push
lods
inc
inc
outsb
inc
jns
aaa
inc
js
jns
mov
adc
push
inc
inc
jns
sbb
inc
push
and
lahf
jg
push
xchg
shrb
rorl
xchg
sbb
add
popa
xor
fistl
sbb
xor
push
sbb
int
mov
sub
jae
imul
lcall
inc
sbb
dec
in
test
inc
jns
jnp
or
mov
dec
call
xor
or
ficomps
jecxz
mov
les
jns
test
mov
or
or
adc
push
int
int3
sub
call
inc
push
orl
cwtl
mov
mov
je
pop
push
pop
add
xor
inc
negb
add
pop
xchg
or
in
aaa
call
leave
nop
dec
scas
pop
sub
pop
sbb
pop
test
pop
lods
xchg
mov
xchg
or
or
js
pushf
dec
xchg
and
xchg
insb
pushf
mov
test
sub
adcl
bswap
mov
cmp
je
test
pop
pop
dec
cmp
xor
cmp
sub
lods
sub
pop
arpl
je
repz
loope
or
xchg
mov
xchg
rolb
pop
pop
inc
mov
pop
cmp
or
sub
jb
call
xor
bound
pop
sbb
rorl
das
xchg
push
push
push
jns
test
xchg
das
sbb
pop
mov
cmp
pop
jb
movsl
lahf
sbb
add
roll
leave
mov
dec
dec
push
xchg
das
dec
enter
ss
inc
jbe
das
sti
mov
mov
cmc
jns
in
das
scas
sub
inc
das
call
inc
das
jle
sub
fdivr
das
sub
movsl
shlb
add
sbb
dec
das
pop
inc
add
or
adc
das
adc
xor
jp
aad
fiadds
andl
scas
jae
mov
sub
pop
or
into
pop
xchg
or
insb
call
add
mov
sbbb
leave
jle
inc
push
xchg
or
cs
mov
or
pop
mov
pop
enter
xchg
or
hlt
push
pop
and
pop
and
pop
xor
sbb
pshufw
rclb
pop
jmp
mov
mov
pop
push
fs
jbe
xchg
pop
insb
push
sub
and
inc
inc
mov
or
xchg
testl
adc
mov
mov
imul
pop
in
fs
leave
inc
mov
dec
or
mov
and
dec
sbb
test
push
lock
adc
mov
pop
test
fldl
push
sub
jnp
mov
push
es
adc
push
mov
adc
and
push
pusha
cmp
stos
ret
aas
shrl
sub
adc
or
mov
test
bound
adcb
adc
push
enter
bound
call
popf
cmc
in
outsl
nop
push
push
popa
inc
mov
mov
push
push
mov
push
push
pop
adc
inc
popa
inc
push
psubd
push
push
aad
je
fsts
add
mov
mov
xchg
or
mov
push
or
dec
mov
push
mov
cmp
rclb
pop
and
pop
ss
in
mov
std
dec
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
and
std
int
pop
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
and
cmp
call
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
inc
inc
or
push
or
push
cs
jb
inc
inc
std
insb
and
int
dec
xor
jo
xor
sahf
cld
mov
call
mov
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
and
shlb
shrb
mov
cmp
push
shrl
mov
mov
je
test
addb
lcall
mov
push
mov
daa
and
pop
pop
adc
dec
or
sbbl
stos
pop
mov
mov
xor
sub
and
pop
add
or
stos
mov
adc
sub
test
dec
aaa
adc
inc
and
and
sbb
sbb
orb
pusha
int3
adc
arpl
add
cli
cs
pop
adc
and
imul
call
xor
mov
fnsave
mov
xor
dec
mov
movsb
inc
or
inc
shlb
call
xchg
or
adc
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
aad
mov
aad
sbb
mov
add
sbb
aad
inc
or
shrb
addl
or
push
rclb
add
fwait
je
ret
stc
mov
mov
sub
or
push
pop
push
andb
pop
or
adc
adc
push
enter
aad
xchg
sub
mov
out
imul
aad
adc
or
inc
aad
mov
jp
les
or
filds
aad
cmp
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
xchg
inc
cmp
movsl
jne
sbb
pop
pop
outsb
xchg
test
je
and
mov
call
mov
sbb
adc
sbb
mov
xchg
inc
sbb
cmp
cli
sbb
lds
push
in
push
and
mov
xor
add
cmpsb
fs
cltd
shlb
mov
push
or
lods
pushf
cltd
xchg
sbb
je
pop
adc
dec
push
adc
fstl
scas
adc
add
xchg
adc
mov
adc
dec
push
ret
rcrl
xor
shlb
js
adc
cltd
or
xchg
sub
std
cmp
xchg
sub
cmp
adc
shlb
adc
push
cmpsb
adc
pop
xchg
adc
pushf
sub
xacquire
push
addr16
pop
push
gs
adc
insb
cmpsb
adc
cwtl
mov
sub
xor
adc
ret
dec
adc
add
sbb
mov
xchg
xchg
ret
or
adc
stos
inc
and
pop
rorl
push
call
jns
call
mov
xchg
adc
mov
jmp
adc
cmp
cmp
sbb
xchg
rolb
mov
inc
and
ret
test
addl
js
jmp
stos
mov
xchg
leave
sub
mov
popf
ret
testb
sub
push
ret
xchg
add
inc
lret
mov
mov
es
inc
dec
xchg
add
pop
inc
mov
addl
stos
xchg
mov
adc
mov
cmpl
orl
nop
rolb
and
lea
adc
jmp
sub
aam
sub
add
lods
loopne
addb
push
mov
subl
mov
or
inc
shrb
push
dec
repz
and
add
push
add
int
jmp
jge
insl
xor
and
gs
les
and
testl
dec
push
mov
int3
lea
addl
stos
xor
add
and
sarb
adc
and
pushf
imul
cmp
je
adc
popf
push
aaa
out
mov
xorb
lret
roll
add
adc
fsubrs
loope
jl
popa
pop
push
adc
ret
mov
in
ss
inc
cmp
enter
aaa
and
cmp
roll
aaa
xchg
jb
aaa
xor
fs
aaa
je
rolb
dec
aaa
aam
inc
ja
jbe
and
shl
adc
aam
mov
push
loopne
pop
aaa
imul
arpl
mov
stc
push
pushf
sub
insb
cld
add
mov
mov
push
dec
mov
test
int
out
call
iret
dec
push
add
push
iret
push
and
cmp
test
inc
push
cmp
add
nop
and
and
mov
loopne
les
push
movsb
repz
call
xchg
sbb
mov
js
rolb
andb
and
jmp
mov
jle
je
add
and
jp
into
shll
cwtl
and
movsb
sbb
add
ret
aaa
adc
xorl
in
push
addr16
xorb
addr16
xor
adc
addr16
xor
les
push
addr16
xchg
and
adc
add
and
push
mov
scas
rolb
mov
push
sbb
pop
pusha
loopne
pop
sahf
cmp
inc
push
pop
sbb
or
add
add
jbe
pop
jmp
rolb
and
push
mov
add
pop
rcrb
pop
shll
add
sbb
out
cmp
adc
xor
or
cmpsl
cli
push
xor
or
pop
in
in
cmp
mov
jecxz
mov
push
out
je
adcb
pop
xchg
mov
roll
adc
mov
and
xchg
scas
push
repz
lods
xlat
xor
gs
jmp
imul
je
mov
pop
dec
inc
dec
xor
xchg
xchg
add
xor
rcrb
cmp
and
loopne
jb
or
test
cwtl
mov
mov
or
xor
scas
gs
mov
mov
gs
or
or
repz
addl
repz
xor
xchg
repz
xchg
or
repz
pop
fdivl
add
sahf
adc
inc
sbb
and
sahf
sbb
or
imul
sbb
xchg
push
xor
cmpl
mov
sbb
je
mov
jg
mov
sub
in
mov
popa
push
popf
bound
push
mov
std
insl
push
mov
out
call
jno
cltd
xor
or
xor
fs
out
sbb
adc
or
inc
xor
push
adc
sbb
and
fs
xchg
stos
mov
cmp
jne
or
adc
movsb
add
add
inc
ss
push
push
or
sbbb
adc
and
sbb
sub
cmp
sti
fwait
repz
adc
mov
mov
push
jo
repnz
xlat
fwait
push
lret
mov
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
cld
inc
scas
cwtl
jge
adc
jb
inc
lcall
xor
sub
push
jnp
js
push
adcl
inc
ja
jnp
ret
test
sti
lcall
adc
xlat
ret
lcall
nop
inc
nop
adc
xchg
and
xchg
push
xchg
inc
xchg
mov
inc
xchg
cmp
jo
xorb
pushf
sub
xchg
das
daa
pop
pusha
cmp
cltd
mov
cmpsb
dec
mov
cmp
cltd
inc
and
inc
push
xchg
xchg
cltd
adcl
inc
adc
je
xchg
push
or
mov
dec
xor
jmp
rorb
and
inc
and
add
mov
les
dec
iret
iret
movups
sbb
add
sahf
cmpsl
stc
cmp
out
sbb
ret
sahf
out
sahf
mov
push
repz
out
sub
or
sbb
cmp
call
add
push
lods
push
mov
sahf
out
push
inc
push
push
sub
push
nop
cs
repz
movsb
push
push
xchg
jl
push
inc
repz
je,pt
push
iret
dec
cmp
sbb
repnz
out
lcall
mov
jle
push
pop
into
sbb
incb
add
repz
push
loop
sbb
out
aam
mov
repz
pusha
sbb
pushf
stc
cmp
repz
lret
or
out
sahf
cmpsl
and
pop
data16
out
sahf
jb
nop
sahf
lods
mov
sahf
out
rcr
in
decb
dec
jecxz
fidivs
push
inc
push
rcr
out
dec
out
jb
jle
sahf
mov
daa
mov
loop
clc
adc
sub
cmp
sahf
out
int3
aaa
je
fs
push
cmp
sahf
notl
adc
daa
pop
mov
jbe
mov
xchg
lahf
jae
jbe
push
cwtl
cmpsl
lods
int
outsl
insl
mov
iret
dec
test
sbb
repz
add
jbe
push
scas
test
addb
adc
stos
add
add
out
lcall
pop
dec
cltd
inc
pop
jle
sub
mov
divl
stos
dec
push
je
shrl
pop
outsl
subb
fwait
push
outsl
push
push
ja
pusha
inc
adc
jbe
adc
fsubs
out
or
lret
in
mov
and
daa
xor
sbb
xor
sbb
outsl
ss
mov
mov
push
pop
or
addr16
bound
pop
js
cmpsb
add
or
xor
mov
outsl
mov
mov
es
dec
cmp
lds
outsb
aas
das
in
inc
pop
sub
mov
mov
jae
lods
pop
and
gs
outsl
inc
imul
jo
add
mov
jnp
jbe
and
imul
and
adc
and
lret
and
outsb
cs
outsl
dec
mov
data16
add
jnp
fwait
test
das
cmp
mov
jg
sbb
addr16
ret
sbb
xor
incl
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xchg
jns
pop
rorb
ret
xchg
jb
inc
nop
xor
or
sbb
pop
dec
mull
lods
pop
dec
imul
mov
pop
inc
jne
outsb
je
or
mov
js
divb
lret
inc
inc
xor
jg
ljmp
sub
sub
inc
inc
xor
xor
xor
jge
negb
mov
inc
xor
xor
ss
jb
in
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
popa
xchg
test
jnp
orb
jne
test
push
jo
or
femms
inc
push
fidivrs
cmp
mov
xor
or
push
and
sti
cmp
aaa
adc
xor
inc
pop
dec
pop
and
xor
jl
movsl
xchg
ss
arpl
mov
sahf
inc
push
inc
push
dec
and
fsubrs
sti
cmp
ss
pushf
xor
add
push
adc
outsl
mov
dec
mov
cvtpi2ps
scas
push
push
gs
pop
inc
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
out
lcall
adc
inc
mov
lods
sahf
add
jns
out
movd
hlt
pop
push
rol
mov
inc
xor
add
adc
test
and
outsl
xor
imul
dec
mov
mov
js
push
lds
inc
cmp
popf
and
mov
inc
cmp
sbb
loope
enter
add
fisttpl
or
inc
cs
xchg
push
inc
sub
push
pop
or
insb
mov
xchg
mov
mov
and
outsb
ret
lret
sahf
cmpsb
mov
es
add
dec
inc
xor
or
inc
adc
cmp
in
add
or
or
add
lods
loopne
jg
jp
ss
and
xchg
out
push
and
fldl
imul
imul
or
push
xchg
loopne
jns
hlt
push
pusha
add
fs
in
push
imul
push
jo
adc
mov
jecxz
add
sbb
das
xor
movsb
inc
pop
or
pop
dec
jae
scas
jg
mov
pop
inc
cs
push
push
push
add
and
ja
adc
jnp
shlb
insb
loop
mov
popa
imul
or
cmc
sbb
data16
fdivl
shlb
dec
add
mov
mov
push
add
inc
add
repnz
add
ret
push
pop
add
mov
or
mov
and
ret
jo
jbe
sbb
push
and
addr16
fwait
or
push
nop
sub
sbb
add
popa
shrl
shrb
jmp
fadds
iret
repz
adc
orb
or
jnp
jns
add
mov
das
push
adc
jns
xchg
adcb
xor
out
sbb
sbb
jns
iret
sbb
std
sbb
push
das
negl
push
pop
nop
cld
and
out
int
cli
js
jns
stc
jp
cmp
jae
push
cld
fdivr
mov
cmpsl
ret
enter
popf
sbb
stos
lcall
popa
mov
outsl
test
xor
push
adc
pusha
lods
cvtpi2ps
into
xrelease
push
cmp
or
scas
cwtl
xchg
or
sbb
mov
dec
repz
or
cld
or
in
repz
repz
les
lea
pushf
push
xchg
call
rcll
sbbb
insb
push
iret
jnp
mov
sahf
repnz
dec
inc
inc
cmp
xor
sahf
out
xor
and
out
sahf
out
sbb
or
repz
or
cld
or
hlt
cmp
repz
enter
iret
rep
nop
jo
xor
jns
iret
adc
pop
int3
mov
sahf
out
sahf
insb
inc
sub
adc
cmp
sarl
fcom
les
js
sub
out
sahf
out
add
repz
sbb
add
call
orb
bound
pop
nop
sbb
adc
inc
jl
mov
test
cmp
inc
xor
jbe
xor
sub
inc
inc
add
inc
mov
out
adc
inc
dec
cmp
adc
adcl
sub
loopne
inc
and
adcb
scas
or
inc
add
mov
mov
sub
add
mov
adc
xor
cli
out
xchg
dec
and
pop
pop
mov
adc
or
dec
pop
dec
add
push
ja
mov
push
jmp
les
pop
shrb
aaa
and
adcl
pop
insl
popf
add
jae
fsubrs
cmp
or
cmpl
ljmp
pop
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
inc
sub
add
add
and
mov
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
loop
jo
mov
ja
jg
pop
jne
pop
xchg
xchg
lods
stc
sbb
enter
ret
jne
imul
je
pop
dec
pop
adc
push
mov
jo
pushw
loop
push
or
jo,pn
dec
add
bound
and
or
outsl
push
push
push
insb
das
inc
repnz
jl
add
cmpsl
ja
lahf
rorb
das
loopne
aaa
jns
xchg
loopne
inc
sbb
pusha
out
push
mov
push
and
test
mov
stc
data16
insb
pop
nop
or
sarb
jg
fdivrs
test
ss
push
insb
ret
sete
jo
mov
jg
jbe
int3
jl
aas
add
dec
push
mov
xlat
jns
pop
cmp
or
push
in
insb
push
lcall
lret
icebp
jns
test
adc
sbb
push
popf
jl
in
mov
push
push
aas
sbb
mov
cmpsb
jg
mov
cmp
mov
shlb
aam
pushf
sub
sarl
vmptrst
enter
je
mov
leave
and
pushf
push
sarl
jbe
insb
rcr
in
jp
pop
imul
pop
loopne
pop
repnz
dec
adc
out
imul
lock
enter
mov
sbb
xor
mov
sbb
dec
imul
add
sahf
or
inc
je
dec
imul
sbb
lahf
mov
sub
cmpl
scas
pop
push
in
sbb
and
add
ljmp
add
push
outsl
ja
xor
mov
push
sub
fsubl
push
sub
add
jecxz
mov
fsubrp
daa
movsb
and
adc
sbb
repnz
arpl
mov
add
jl
ljmp
mov
or
repz
cmpsl
fs
push
dec
push
jb
push
shll
jae
arpl
and
sbb
outsb
push
add
push
imul
out
insl
xchg
mov
jae
enter
push
jae
push
adc
or
adc
jae
push
mov
mov
mov
mov
out
adc
add
push
sub
push
inc
jno
leave
dec
sbb
dec
adcl
and
add
es
mov
inc
push
mov
dec
lods
loope
pop
das
push
mov
inc
or
cmp
push
jo
jb
jns
or
ret
mov
cltd
shlb
movsb
sbb
shll
mov
add
lods
cmpsl
xor
push
and
lock
sbb
imulb
push
divb
mov
adc
out
or
popa
jge
and
shll
das
pusha
inc
and
sahf
nop
cmpsl
and
inc
mov
rcrb
and
xchg
mov
add
jecxz
popa
mov
add
cmp
inc
add
lods
or
push
gs
or
fstpt
jnp
inc
rolb
jne
addr16
outsb
pop
add
xchg
pop
push
scas
push
and
leave
jmp
jbe
xor
nop
pop
ds
fs
dec
test
lahf
xor
lahf
sbb
dec
adc
and
icebp
ss
jge
cmp
cs
cld
adc
ret
adc
jle
and
push
loopne
ret
pop
adc
mov
outsb
xor
imul
and
sub
dec
add
or
or
sarl
pop
outsl
mov
shrb
inc
add
add
push
lcall
orb
mov
mov
xor
xor
dec
dec
pop
pop
in
inc
jmp
add
inc
jns
mov
lea
xchg
fs
lds
gs
mov
lret
arpl
outsl
inc
push
outsl
cmp
xchg
fsubrs
arpl
dec
and
roll
add
fs
xlat
or
sbb
cmp
rorb
jbe
xor
push
mov
mov
jb
sbb
or
mov
adcb
cmp
jp,pt
mov
inc
jmp
lret
mov
push
arpl
fidivl
dec
inc
dec
pop
or
aas
or
pop
outsb
inc
cmc
lods
sbb
sub
out
jnp
push
jmp
enter
push
push
push
xor
cmpl
mov
stos
sar
imul
add
jo
add
add
jo
add
outsl
inc
pop
movsb
adc
sbb
inc
push
jo
sub
loopne
ds
pusha
data16
xchg
dec
pusha
push
jo
jno
mov
mov
cmp
add
popf
inc
add
scas
into
pop
roll
xchg
add
cmpsl
es
or
ljmp
dec
imul
add
iret
cltd
push
push
xor
int
xchg
insb
imul
inc
dec
pop
imulb
add
push
mov
add
ret
push
and
mov
add
std
or
aas
cld
inc
jae
adc
add
je
add
push
data16
cmp
outsl
xor
and
add
lcall
or
push
sbb
cmp
into
insb
sbb
or
push
add
mov
inc
sub
ret
add
imul
fbld
lret
fbld
pop
rcl
scas
ficomps
mov
push
popa
or
fwait
xchg
xlat
push
and
and
inc
cwtl
aam
lcall
addr16
sub
push
pop
in
aam
pop
add
sbb
jae
push
ds
mov
add
repz
insb
push
sbbb
ret
xchg
push
punpcklbw
jnp
mov
and
add
std
adc
xchg
jns
sub
adc
test
decl
cmp
sub
pop
or
inc
dec
cmpsl
data16
fiaddl
pop
gs
cmp
inc
xor
sti
fsubrl
shrb
or
ss
aad
cwtl
inc
pusha
jmp
pop
pop
xor
mov
jo
shlb
mov
adc
xor
inc
or
mov
and
dec
push
adc
fisubs
lcall
mov
repz
adc
add
out
sahf
out
out
lock
jns
enter
mov
repz
jns
movsb
pop
mov
cmp
xchg
nop
mov
cmp
pusha
push
pop
push
inc
jns
out
cmp
and
sbb
cmp
out
cld
in
lock
mov
loopne
fcom
out
sahf
out
sarb
sahf
mov
cmp
jns
out
sub
sbb
or
cmp
out
cld
in
hlt
in
in
repz
fmul
mov
cmp
repz
push
inc
repz
imull
and
or
jmp
inc
or
mov
adc
stos
pusha
test
add
je
subl
mov
pop
testl
sbb
add
incl
pmuludq
cmp
not
lock
mov
push
nop
lods
lods
in
data16
mov
and
sub
add
shrl
adc
filds
add
mov
pop
inc
dec
pop
add
add
push
and
mull
mov
xchg
mov
sub
mov
lods
xchg
pop
dec
adc
push
movb
xchg
cmp
add
xor
push
pop
jo
add
in
pop
add
sbb
pop
push
xchg
xchg
inc
xor
outsb
or
add
mov
xor
xor
xchg
cmp
insl
jbe,pn
and
ljmp
xor
xor
ds
sbb
cmp
or
mov
fdivs
ret
mov
and
dec
pusha
inc
repz
imul
sbb
cmp
sbb
insb
and
push
and
es
or
adc
and
jb
jne
es
ret
mov
mov
popa
insb
into
dec
adc
mov
jns
das
sti
and
mov
push
sbb
jbe
sbb
inc
inc
mov
inc
pop
pop
adc
mov
add
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
incl
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
dec
xor
xchg
shll
inc
ss
decl
repnz
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
cmp
sub
ret
add
push
lock
idivl
aas
sbb
xor
xor
xor
push
xor
or
jmp
outsb
xor
popf
xor
xor
xor
xor
xor
fs
cld
pushl
imul
aam
fnsave
xor
xor
xor
out
xor
xor
xor
jge
mov
xor
xor
fidivl
scas
xor
pushl
fdivs
call
xor
jg
push
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
dec
pop
aas
out
cmp
pop
cmp
outsb
cmp
jmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
lcall
mov
cmp
push
adc
cmp
cmp
cmp
cmp
adc
cmp
jae
mov
pushf
cmp
mov
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
roll
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
push
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
fcomip
daa
xor
xor
xor
pop
xor
jo
xchg
xor
xor
ljmp
inc
xor
xor
xor
xor
xor
xor
clc
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
push
mov
xchg
aas
inc
aas
pop
aas
ja
pusha
pop
aas
adc
pop
push
or
cmp
pop
jg
pushl
arpl
push
xor
xor
xor
xor
xor
xor
xor
paddd
add
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
mov
aas
clc
out
in
xor
scas
clc
xor
cmp
dec
pop
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
pop
jl
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
push
pop
xchg
adc
sbb
cmp
xor
ljmp
cmp
ds
fidivrl
jmp
incl
xor
mov
ss
ss
xchg
cmp
aaa
cld
jmp
cmp
iret
cmp
mov
cmp
cmp
cmp
outsl
xchg
test
cmp
cmp
cmp
cmp
cmp
cmp
lcall
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
shll
and
xor
incb
xor
xor
xor
fisubrl
xor
decl
loop
xor
xor
xor
mov
xor
xor
jmp
shlb
ss
add
or
mov
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jg
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
lcall
jg
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
decl
decl
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
jg
mov
cmp
bnd
adc
sub
xor
incl
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ja
cmp
inc
cmp
pop
cmp
mov
call
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
test
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jp
repz
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
lahf
das
mov
and
sub
cmp
jb
mov
xor
xor
xor
out
cli
pushl
xor
xor
xor
mov
jl
cmpsl
xor
xor
aaa
loopne
add
lcall
xor
scas
jg
xor
xor
mov
ret
aaa
xchg
aaa
fwait
sahf
mov
scas
scas
cmpsb
mov
bound
scas
cmp
push
cwtl
scas
jp
cmp
fdivrl
aaa
cmp
ret
imul
cmp
mov
jmp
mov
cmp
cmp
cmp
sbb
xor
or
lcall
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ljmp
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
and
pcmpeqd
out
sbb
movsl
or
ja
lahf
xor
xchg
aas
push
mov
pop
cld
inc
xor
mov
xor
xor
xor
icebp
ss
ss
fiadds
aaa
ret
loopne
jmp
repnz
or
cmp
pop
cmp
aas
std
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
fdivrs
push
aas
das
cmp
mov
or
sub
decl
xor
xor
xor
dec
or
sbb
scas
repnz
aas
xor
divl
pop
xor
call
adc
es
dec
ss
outsb
notb
mov
enter
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
mov
imul
cmp
test
mov
mov
cmp
cmp
dec
cmp
cmp
ljmp
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
mov
cmp
inc
cmp
orb
cmc
decl
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
or
jo
addr16
loope
rol
mov
xor
xor
pop
xor
xor
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
pushl
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
jg
decb
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
loope
sarb
cmp
cmp
adc
jbe
cmpl
push
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
icebp
adc
sub
jne
jmp
jl
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
mov
xor
xor
ljmp
jbe
loopne
adc
adc
pushl
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
int
sahf
or
push
lock
out
xor
cmp
cmp
aaa
into
cmp
inc
inc
xchg
or
xor
xor
lcall
decb
lods
xor
int3
mov
std
mov
test
lods
xor
fwait
push
clc
jg
int3
xor
cmp
sub
sub
xor
cmp
pop
loop
incl
inc
cmp
dec
cmp
push
rcrb
cmp
jg
or
fidivs
cmp
cmp
or
lahf
pop
test
push
rcr
cmp
aad
clc
sub
fdivl
jge
jne
lock
dec
cld
push
add
or
adc
clc
das
pop
pop
stos
sbb
and
and
sub
sub
xor
aas
incb
fidivrs
inc
cmp
cmp
pop
loopne
jecxz
cmp
cmp
insb
cmp
je
jl
addb
ret
push
mov
nop
xchg
cwtl
filds
mov
aas
inc
mov
push
aas
push
aas
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
dec
mov
push
or
xor
xchg
mov
mov
xor
inc
xor
xor
sub
cwtl
xor
xor
xor
xor
cmpsb
cmp
xor
mov
insb
dec
jecxz
jb
inc
xor
andb
add
fwait
in
and
or
or
ss
call
lcall
aam
fdivs
fdivl
loopne
in
call
ss
ss
decl
lock
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
sar
inc
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
mov
pop
std
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
outsb
shlb
aaa
cwtl
into
mov
dec
mov
mov
jg
xor
enter
shlb
aam
fdivs
fmull
in
out
aaa
hlt
jl
cs
xor
aaa
hlt
add
or
adc
adc
sbb
mov
add
cmp
fdivrl
call
mov
cmp
pop
aas
std
pop
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
cmp
ljmp
cmp
jl
test
decl
cmp
movsb
cmp
mov
mov
mov
cmp
test
inc
mov
imul
push
sar
movsl
movsb
fs
lret
div
ret
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
jg
jl
aaa
stos
mov
push
lret
aaa
ljmp
gs
jne
aas
push
aaa
mov
xchg
add
xchg
repnz
xor
dec
and
addb
test
jge
push
mov
movsl
add
sarb
push
sbbl
sub
test
out
addb
nop
add
push
xchg
sub
sub
adcl
mull
sbb
or
add
or
rorb
pop
mov
mov
jmp
cltd
cmpsb
dec
repz
out
add
mov
daa
notb
add
push
sub
lcall
or
ret
ret
out
movsb
scas
aas
nop
das
es
gs
inc
xor
adc
push
gs
insb
or
and
movsb
subb
push
sbb
imul
pushf
dec
or
adc
out
movsb
jno
sbb
call
add
inc
call
std
std
xor
jbe
cmp
xchg
mov
jae
xor
inc
lods
bound
jle
cld
xor
jl
or
incl
jb
hlt
pop
and
mov
sub
dec
xor
adc
adc
add
pushf
xchg
test
xchg
mov
or
std
incb
shl
leave
jbe
call
jo
in
es
xor
in
pop
mov
add
sbb
mov
test
je
mov
sbb
pop
lret
lahf
jp
sbb
fwait
aam
loopne
and
or
sbb
jge
or
inc
fnsave
loop
push
mov
mov
xor
in
pop
popa
leave
orb
mov
mov
push
inc
ret
shrb
or
pop
and
add
pop
push
nop
dec
sbbl
loope
jae
arpl
pop
std
sub
jo
sahf
add
lret
popf
sub
mov
movsl
and
and
cmp
jne
testb
test
sbb
jmp
push
cmp
es
push
call
repz
dec
mov
lcall
mov
or
rcll
add
insl
dec
divb
cltd
adc
dec
test
add
dec
add
adc
cmpsb
xor
pop
add
mov
or
or
inc
test
dec
test
popa
lret
inc
loop
sbb
adc
jbe
dec
adc
xchg
pop
fldl
mov
push
dec
cmp
jo
pop
xor
popa
aas
lea
sbb
call
mov
pop
fsubl
cmp
or
sub
mov
xchg
test
pop
ret
mov
xchg
jo
xor
lods
movsl
xchg
xorb
lret
xchg
and
cmp
scas
add
adc
loope
adc
dec
push
xchg
fisubrl
js
jecxz
pop
add
sbb
push
stos
sbb
fimuls
and
mov
jecxz
add
mov
add
je
xor
push
and
add
xor
jne
aad
pop
add
mov
pusha
adc
cmp
insb
or
dec
sti
add
inc
imul
sub
pop
xchg
mov
or
inc
or
add
mov
adc
mov
sbb
int3
add
push
cmpb
push
ror
inc
sub
jo,pn
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
and
sub
push
mov
mov
rol
xchg
iret
popa
test
enter
stos
or
adc
adc
dec
sarb
mov
cwtl
repnz
dec
sarb
adc
fcoms
testl
out
cmp
mov
inc
push
movsb
mov
cmp
inc
lahf
cmpsl
daa
and
addl
inc
mov
outsl
inc
push
test
push
jle
mov
aad
in
mov
mov
in
dec
mov
xchg
pop
aaa
mov
sub
or
cmp
stos
lods
add
cmpsl
ret
inc
pop
push
scas
mov
stos
mov
add
aas
mov
mov
loopne
xchg
lods
jnp
lods
cmp
inc
cmp
inc
bound
or
sub
mov
mov
mov
adc
mov
repnz
push
sbb
inc
push
dec
xchg
sbb
rol
adc
imul
in
pop
cli
sbb
xchg
stc
and
push
std
pop
or
and
xor
add
mov
or
sub
sub
fucomip
dec
call
call
or
jbe
inc
mov
aaa
mov
and
inc
rolb
push
dec
push
cmp
popa
or
dec
adc
push
cwtl
fstl
pop
push
and
popf
or
cmp
push
lret
mov
call
es
add
fsubrl
xchg
sbb
mov
sbb
mov
sbb
pop
mov
push
add
mov
xorl
add
and
sbb
sub
sub
gs
fwait
stc
add
lea
sbb
push
push
sbb
sbbl
push
add
movsl
jg
gs
mov
sub
das
mov
fistps
or
mov
mov
add
cmp
or
push
sbb
and
repnz
add
push
or
mov
sbb
sbb
adc
cmp
add
add
inc
fimull
jne
mov
orb
mov
xor
mov
add
add
push
adc
fldt
sbbb
and
fdivl
insb
push
or
inc
out
sub
fistpl
xor
jp
cmp
or
ja
ret
xor
mov
pop
inc
insb
mov
sub
lret
push
fcomp
mov
fisubl
inc
cmp
or
sbb
pop
nop
and
fwait
popf
cmp
movsb
and
cmp
mov
nop
push
and
es
add
sbb
pop
addr16
addr16
mov
pop
sub
xchg
cmp
jnp
je
insb
fs
push
dec
lret
dec
inc
addr16
jmp
out
mov
addr16
dec
adc
add
jg
fsubrp
outsb
xor
pop
nop
inc
push
fs
mov
pop
pop
add
addr16
sub
mov
jns
shl
call
mov
repz
or
and
and
push
addr16
cmp
xor
jnp
inc
push
push
push
xlat
or
add
xlat
mov
cltd
jle
mov
stc
loopne
rolb
xor
add
sbb
push
cltd
and
mov
nop
cltd
mov
or
hlt
addr16
sub
shll
orb
xchg
push
stc
adc
inc
push
call
test
cs
mov
pop
or
leave
xchg
push
leave
repz
mov
lcall
add
daa
dec
cmpsl
xor
inc
es
sbb
iret
enter
daa
daa
es
shlb
daa
daa
lret
inc
xor
daa
daa
lcall
daa
daa
daa
sbb
movsb
imul
dec
push
daa
daa
daa
daa
inc
enter
sub
xchg
cmpsb
jns
sub
sub
inc
xchg
sub
dec
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
adc
movsb
sub
dec
testb
cmp
and
push
or
sbb
adc
or
add
jne
sub
and
mov
add
inc
stos
cltd
mov
psubb
and
adc
xor
push
rcrb
sbb
pop
cmc
push
lock
push
jp
or
clc
fs
dec
sbb
cmp
sbb
and
push
test
nop
subb
psubsb
cwtl
inc
xchg
outsb
test
jo
orb
inc
push
sub
push
test
and
mov
jge
mov
xchg
adc
pop
mov
sub
orl
jle
or
pop
es
mov
inc
ja
call
cvtps2pi
pop
mov
or
addr16
fldl
sub
and
out
push
add
xchg
push
or
or
stc
sbb
loopne
fs
adcb
or
daa
adc
daa
adc
adc
ret
call
dec
jae
add
mov
movsb
cmp
add
adc
add
repnz
sub
pop
add
mov
dec
and
into
or
cltd
sub
jno
dec
mov
mov
imulb
cltd
xchg
mov
nop
clc
ret
pop
cltd
cwtl
pop
push
call
or
cwtl
lret
cmp
inc
mov
inc
fdivl
cltd
fs
shlb
outsl
cltd
mov
dec
pushf
ss
xor
cltd
xchg
outsb
or
cwtl
pop
mov
xorb
add
xchg
sub
and
mov
test
or
add
sbb
test
pusha
and
mov
cltd
repnz
adc
adcb
inc
cmp
pop
xor
xor
sub
xor
xchg
cmp
adc
inc
push
pop
aam
pop
adc
pop
adc
sub
adc
test
push
imul
push
cmpsl
in
xchg
jmp
outsb
adc
dec
adc
aam
or
pop
ss
test
jb
adc
add
mov
enter
xchg
push
in
add
adc
push
adc
mov
imul
dec
mov
in
xor
imul
inc
or
adc
stos
inc
fstl
adc
adc
out
movsl
adc
pop
loopne
dec
xor
nop
and
popa
fsubrs
mov
fldenv
fidivs
push
movsl
adc
inc
call
jl
inc
cmp
inc
adc
leave
inc
pop
and
stos
rclb
fldl
pusha
adc
call
sub
ss
outsb
push
movsl
adc
pop
adc
mov
loope
cwtl
sub
stos
pop
jmp
and
push
jne
dec
adc
adc
addl
ss
es
xchg
push
adc
mov
xchg
adc
xchg
push
daa
or
pop
or
test
nop
dec
pushf
pop
adc
icebp
and
and
push
mov
rcrb
adc
fstpl
rorb
mov
mov
cs
clc
in
push
add
mov
loop
pop
pop
pop
add
push
mov
or
and
lods
sbbb
movsb
fwait
and
cmpsb
xorb
les
add
and
adc
pop
push
pop
nop
fidivs
popa
mov
inc
andl
ret
js
jae
pop
xchg
pop
push
sub
sub
push
add
pop
loope
adc
into
sti
sub
not
mov
lret
pop
mov
inc
xor
movsl
hlt
pop
xchg
cltd
mov
xor
mov
pop
mov
inc
shr
sub
pop
cmp
leave
repnz
mov
fstpl
push
pop
adc
into
call
mov
dec
adc
fnstcw
outsl
adc
fdivs
lds
pop
jmp
loop
lea
or
movsb
jne
pop
call
addl
pushf
sbb
sbbb
mov
sbb
and
addb
jne
cmp
leave
sbb
iret
imul
mov
dec
jno
cmp
dec
cmc
xchg
mov
mov
nop
andl
aas
lock
jl
fs
xor
pop
inc
stos
add
pop
out
jmp
push
addb
outsl
cmp
xor
stos
adcl
lahf
xor
cmp
xchg
adc
add
xlat
push
cmpb
aas
inc
and
stos
add
inc
cmpsb
cmpsl
pcmpgtd
pop
fstpl
frstor
loop
in
int3
pop
int3
fsubl
mov
push
aas
push
call
push
cs
pop
or
mov
loopne
int3
pop
dec
repnz
push
inc
fdivl
fdivl
fwait
pop
or
sub
lret
call
or
mov
add
lret
pop
mov
or
mov
adc
push
mov
cmpsl
sub
mov
out
out
inc
enter
sub
dec
cs
lods
mov
leave
inc
arpl
xor
ret
pop
or
les
inc
sbb
frstor
add
or
loopne
leave
repnz
je
fs
adc
dec
enter
pushf
fisttpll
push
dec
test
sbb
test
movb
repnz
mov
mov
push
inc
nop
daa
in
lea
or
rcl
sub
sub
shr
in
sbbb
daa
xchg
je
and
pusha
sub
cmp
fmul
mov
mov
mov
cmp
and
cltd
and
sub
push
inc
jecxz
cltd
push
iret
les
cmp
push
jp
lea
xchg
inc
mov
fcoml
icebp
push
adc
and
lea
mov
push
stc
cltd
mov
push
cld
lods
push
xor
push
inc
jmp
mov
cltd
in
shll
cltd
adc
xchg
and
sub
cmp
cwtl
test
inc
dec
leave
mov
mov
jb
mov
ljmp
nop
daa
scas
inc
mov
fdivr
loope
or
and
adc
lahf
mov
arpl
jle
add
xchg
xchg
sbb
mov
repz
repnz
add
sub
dec
je
sbb
adc
pop
push
daa
inc
gs
and
shlb
sub
enter
and
stos
inc
push
les
dec
lea
daa
push
rcrb
es
adc
call
inc
enter
dec
mov
ret
sbb
push
cmpsl
sub
testb
fcomi
jmp
add
ret
call
scas
pop
jnp
xchg
jbe
outsl
ret
pop
hlt
je
mov
dec
jge
mov
inc
pop
push
iret
adc
xchg
js
jl
subb
sub
andb
shll
xchg
inc
push
mov
and
inc
icebp
movsl
or
pusha
inc
mov
in
adc
and
xchg
xor
push
xchg
or
dec
mov
jno
adc
inc
dec
mov
movsl
mov
pop
pushf
inc
pop
adc
das
sub
or
sub
repnz
jno
arpl
mov
sbb
cmp
insb
arpl
lcall
pop
pop
stos
addb
mov
xchg
add
cmp
filds
sub
sbb
test
sub
push
daa
xchg
pop
xchg
mov
shl
inc
xchg
push
fcoms
push
xor
insl
ret
xchg
lahf
xchg
into
pop
addr16
mov
cwtl
cmp
and
xchg
pushf
mov
mov
xchg
fdivl
daa
mov
xchg
or
mov
insl
xchg
adc
sbb
xchg
dec
sbb
xchg
sub
sahf
fcmovb
mov
add
mov
xchg
inc
and
js
cmp
leave
push
fldcw
pushf
insl
roll
rcrb
and
ficoml
call
lret
mov
add
add
and
mov
sub
mov
add
sahf
call
mov
dec
inc
or
cmp
dec
pmulhuw
xchg
inc
mov
aaa
insl
jg
je
xchg
xor
adcl
aaa
inc
and
fs
sbb
xchg
jo
dec
xchg
push
pop
xchg
movsl
sub
dec
cmp
mov
je
xchg
xchg
ret
pop
mov
xchg
mov
add
mov
int3
dec
jmp
push
pcmpeqw
call
es
ja
xchg
data16
shrb
and
and
xchg
adc
stos
lret
adc
aam
inc
movsb
icebp
jnp
in
and
pop
mov
adc
sbb
xor
faddl
divl
cmpb
lret
int
test
aam
lret
in
push
rorl
ds
mov
in
aaa
mov
loope
scas
inc
push
xchg
clc
int
and
call
adc
push
int
mov
sub
pop
mov
das
push
in
mov
inc
int3
pop
insb
push
mov
int
out
scas
dec
pop
das
pushf
inc
ss
insl
or
mov
cmp
jmp
mov
cmp
sub
fldl
imul
sbbb
inc
fildl
sbb
enter
dec
sahf
in
stos
adc
fildl
sub
loopne
cmp
aam
pop
add
xorl
add
stos
push
nop
push
inc
enter
mov
fisttpl
cmp
loop
fucomi
fs
add
nop
fistl
push
repnz
and
popf
adc
push
pop
and
fisttpl
inc
repnz
and
xchg
mov
dec
xchg
push
push
xchg
mov
or
adc
sub
or
and
mov
into
fistpll
adcb
dec
lods
sub
or
ja
mov
fstpt
scas
scas
fucom
mov
adc
jno
rcrl
fildl
fldt
call
mov
and
inc
fistl
fistpl
adc
xchg
daa
out
cmpsb
jno
pop
jle
dec
or
push
and
inc
mov
jo
adc
dec
arpl
fsubl
shll
or
filds
pop
add
mov
sub
fucomip
in
inc
inc
inc
sub
lock
xchg
jno
iret
loope
les
int3
jns
adcb
repnz
mov
mov
and
or
add
in
mov
in
fdivrl
push
repnz
test
pop
mov
mov
pop
pop
cmpl
pop
pop
popa
mov
dec
mov
inc
mov
and
cmp
and
nop
sbbl
mov
enter
loope
mov
pop
cmp
mov
jb
sbbl
xchg
mov
dec
push
jle
jo
gs
pop
mov
push
jb
cmpl
cs
enter
or
sbb
and
mov
push
jb
mov
and
cmp
mov
mov
pushf
mov
enter
jnp
jo
gs
pop
mov
jb
sbbl
cs
dec
push
sbb
in
pop
hlt
mov
daa
test
fcmovne
or
mov
add
inc
dec
lcall
sub
mov
or
mov
or
inc
adc
adc
lcall
movsb
sbb
imul
xchg
out
cli
mov
inc
dec
lcall
movsb
sbb
les
mov
xchg
xchg
inc
inc
mov
inc
dec
mov
dec
jl
xchg
cmp
cs
dec
push
pop
dec
movsl
adc
addr16
and
add
addb
push
test
add
add
add
inc
in
xor
loopne
sub
mov
inc
inc
add
adc
push
addr16
add
inc
inc
mov
mov
stc
dec
leave
and
sub
jb
dec
repnz
dec
push
mov
or
test
jmp
add
adc
les
mov
hlt
imul
testl
pop
icebp
xor
sub
out
sub
mov
inc
pop
mov
inc
inc
add
enter
mov
daa
movsb
test
add
push
mov
sbbl
punpckhbw
xchg
mov
adc
rsm
ret
sub
cmp
dec
js
js
jmp
gs
hlt
push
mov
cs
bswap
mov
xchg
and
mov
cvtps2pi
push
shrb
jl
stos
push
xchg
pop
add
gs
jbe
mov
sub
and
mov
sarl
sub
xor
sqrtps
mov
inc
mov
je
lea
adc
xchg
and
pop
mov
repz
sete
xchg
movsl
inc
push
sbb
mov
packuswb
and
mov
dec
push
add
insb
loope
add
or
cmp
jecxz
push
call
call
gs
sub
or
jnp
xchg
mov
cmp
scas
push
scas
xchg
and
push
xchg
scas
mov
and
sbb
gs
dec
pop
pop
sbb
iret
decb
sub
test
in
sub
adc
jne
movsl
or
sub
sub
or
ficompl
and
gs
mov
pop
or
dec
pop
mov
or
dec
jbe
dec
jbe
test
inc
scas
push
adc
push
lret
lret
adcl
pop
jo
or
xchg
or
mov
mov
or
mov
fsubr
or
or
xchg
sub
sub
call
out
movsl
or
and
push
dec
or
out
push
xchg
mov
call
push
sub
adc
or
push
lret
or
movsl
mov
sbb
cmpsb
test
mov
or
jnp
mov
adc
test
mov
sub
mov
or
daa
xor
sub
pop
gs
or
es
xchg
out
sub
push
movsl
rcll
daa
andb
lcall
out
add
sub
or
or
rol
aam
data16
pop
push
or
fwait
and
movsl
sub
jmp
sub
mov
insl
stos
mov
inc
push
movsl
or
sarb
js
je
push
sub
nop
imul
inc
in
shll
rcrb
ret
pop
lret
outsl
sub
fisttpll
lcall
sub
push
movsl
sub
loopne
mov
push
cmp
repnz
lock
call
sbb
inc
test
cmp
jg
dec
loopne
aad
xchg
mov
xchg
add
xor
or
sbb
add
adc
sub
mov
and
mov
mov
dec
push
or
lret
or
gs
add
xchg
out
imul
mov
lret
inc
or
enter
jmp
cmpsl
xor
or
inc
xchg
rclb
sub
mov
pop
xor
pushf
or
pusha
stos
adc
or
ret
mov
movsb
mov
movsl
or
adc
xor
gs
call
cmp
or
push
push
sub
pop
sahf
shrl
mov
out
test
je
push
les
sub
push
loop
xorb
mov
push
xchg
mov
jne
adcb
stos
or
push
imul
or
lret
or
adcb
xor
push
xchg
xchg
lcall
or
cmpsb
les
lret
fwait
adc
gs
sub
fs
cmp
sub
pop
jmp
or
or
lock
lahf
loope
les
subb
test
or
out
cs
pop
mov
mov
adc
or
xor
or
xchg
or
add
pop
stc
pop
mov
xlat
inc
mov
pop
pop
push
je
loope
mov
leave
and
repnz
cs
pop
cmp
aaa
xchg
out
or
or
mov
pop
add
and
pop
adc
in
enter
mov
and
outsb
or
das
jmp
fstps
push
pop
ds
shll
or
ss
xchg
mov
jne
add
mov
andl
cmp
xchg
or
push
je
add
mov
in
dec
mov
dec
push
push
out
jl
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
inc
xchg
add
sbbb
push
testb
repz
rcll
sub
mov
int3
faddl
sbb
out
sahf
sub
inc
push
pop
outsb
jns
out
adcb
mov
or
push
ds
jns
out
pop
jb
mov
int3
out
push
stos
iret
repz
adc
cmp
cmp
repz
mov
out
repz
sbb
xor
iret
repz
dec
pop
insb
andb
cmpsb
add
test
dec
pop
push
adc
and
and
push
lea
ret
adc
add
iret
jnp
inc
sbb
push
push
mov
dec
sbb
mov
add
push
clc
mov
mov
es
push
lds
roll
clc
mov
cmp
jns
mov
add
iret
cmp
adc
adc
push
adc
jne
xchg
sbb
sbb
xchg
cmp
rcrl
js
or
dec
or
mov
cmpsl
xor
pop
mov
and
and
cmp
repz
xor
sbb
sahf
cmpsl
stc
cld
cmp
xor
xchg
mov
sub
push
pop
add
adc
int3
mov
outsl
test
and
test
addr16
or
push
sahf
out
sahf
cmp
adc
add
sarl
in
loopne
fdiv
cmp
repz
enter
repz
mov
mov
pushf
cwtl
xchg
nop
mov
cmp
xrelease
cmp
je
insb
push
repz
pop
push
push
dec
repz
repz
inc
inc
cmp
iret
repz
xor
sub
adc
sahf
cmpsl
stc
cmp
call
jns
out
mov
sub
cmp
repz
pusha
iret
repz
push
dec
inc
xor
or
mov
shlb
jns
cmp
int3
sbb
iret
repz
push
xor
jg
jns
mov
lock
mov
inc
adc
inc
mov
dec
xchg
movsb
and
inc
or
inc
xchg
add
dec
push
movsl
mov
aaa
xor
push
push
add
xor
dec
pusha
and
xor
pushw
push
mov
push
shlb
aaa
shlb
jbe
add
push
je
lahf
out
fdivrs
jo
mov
fdiv
xchg
popa
daa
add
and
aas
ficoml
pop
jnp
fiadds
mov
daa
cmp
xlat
push
mov
mov
inc
add
lods
pop
add
test
mov
lods
add
pop
cmpb
mov
insb
sahf
inc
pop
shll
jbe
and
dec
in
xor
mov
cmpsb
mov
mov
xchg
aas
jns
adc
and
mov
aaa
inc
pop
rcrl
xchg
xchg
push
cmpsl
fsubs
sbbb
inc
fisttps
adc
aas
dec
mov
addb
jg
dec
rorl
insb
jle
pop
xor
aas
mov
push
int3
push
push
dec
xor
andb
fsubl
xchg
mov
xchg
pop
ljmp
pop
enter
add
movnti
imul
inc
mov
xchg
or
and
mov
pushf
add
mov
test
xor
dec
jo
push
cmp
pop
stos
outsb
cs
outsb
cmp
outsl
ds
outsl
gs
cmp
push
sti
pop
enter
je
sarb
adcb
xchg
fsubl
fidivl
jbe
subb
adcb
inc
dec
and
pop
outsl
xchg
out
pop
jne
notb
imul
push
outsl
and
sbb
dec
jb
rcrb
dec
gs
lret
add
adc
movsl
mov
jae
sub
outsl
bound
mov
inc
or
adcl
imul
or
sbb
jecxz
hlt
sbb
xor
jo
dec
mov
push
pop
sub
sub
dec
adc
push
push
add
rorb
xor
mov
inc
xor
push
mov
jne
xlat
pop
mov
inc
daa
xchg
dec
arpl
rcrb
les
arpl
sub
push
inc
repz
pop
add
sbb
pop
adc
pop
les
rorl
rcrb
arpl
adc
jae
xor
pushf
sti
lahf
push
sbb
inc
arpl
lds
out
xor
pop
testl
add
pop
xor
adc
pop
add
rcrl
sbb
arpl
pop
out
fadd
push
aaa
add
ja
stos
cmp
add
xor
addr16
or
daa
jmp
ficompl
xchg
cwtl
push
pop
inc
xchg
movsb
xchg
iret
repz
jle
pushf
cwtl
xchg
nop
cmp
repz
test
out
fdivp
pop
push
pop
dec
inc
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
cld
xchg
hlt
xchg
in
push
in
jns
out
enter
out
sahf
lods
test
mov
mov
push
insb
push
fs
repnz
out
push
dec
mov
push
and
popf
out
jns
add
in
xchg
push
enter
sahf
sarb
sahf
out
nop
mov
repz
push
dec
repz
and
adc
lock
loopne
cmp
repz
mov
xchg
insb
adc
add
pop
out
pop
mov
outsl
insb
cmp
add
test
inc
xor
mov
neg
mov
xor
inc
xor
or
mov
add
repnz
or
ja
push
xor
push
pop
cs
push
or
clc
mov
fildll
add
pop
enter
add
jbe
outsb
stos
lcall
xchg
cs
pop
sbb
movl
fucomip
xchg
icebp
inc
aas
xchg
adc
adc
mov
rorb
cmp
mov
push
roll
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
xor
mov
push
adc
pop
ss
nop
ss
stos
dec
cld
dec
sub
ss
popf
xor
xorl
aaa
adc
sbb
add
cmp
stos
popa
cld
cmp
ja
xchg
xchg
es
lret
cmp
cmp
cmp
mov
dec
test
xor
ljmp
jnp
cmpl
adc
xor
cmp
cmp
decl
ds
ds
ds
fsubl
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
lcall
data16
jbe
jnp
cmpl
mov
popf
aas
movsb
aas
mov
sarl
div
dec
add
jg
aaa
lahf
push
xor
jl
xchg
cmpsb
mov
xor
icebp
pushl
sbb
xor
xor
push
inc
xor
mov
mov
xor
xor
into
das
xor
aaa
shrl
cmp
xchg
mov
cmp
xor
inc
shlb
call
xor
mov
outsb
cmp
mov
pushf
xor
xor
xor
xor
ret
fdivs
xor
dec
mov
ss
jecxz
sbb
mov
ss
pushl
sbb
xchg
mov
test
xchg
loop
cmp
cmp
add
pop
cmp
or
adc
icebp
dec
xor
sub
xor
xor
cmp
cmp
cmp
xor
adcb
cmp
outsl
shr
icebp
cmp
or
xor
inc
fdivrp
outsb
outsb
sbb
iret
cmp
idivb
cmp
cmp
cmp
dec
push
add
jle
test
push
icebp
jg
jg
cmp
hlt
cmp
inc
ds
ds
ds
enter
cs
lcall
mov
xor
xor
mov
mov
push
xor
bound
icebp
jg
xor
xor
xor
xor
xor
inc
lds
xor
jmp
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
clc
sub
clc
ss
ss
aaa
or
push
xor
enter
cmp
inc
aaa
sbb
xor
dec
adc
jecxz
or
push
cmp
mov
sbb
pop
cmpsb
test
fsubl
mov
cmp
pop
inc
std
fwait
push
in
jmp
repz
cmp
cmp
outsl
add
jg
cmp
cmp
pop
clc
mov
jno
jns
jle
xchg
mov
xchg
sbb
push
rorl
scas
cmp
fcmovb
cmp
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
pop
or
mov
xor
insl
sbb
popa
pop
shrl
pop
and
es
dec
aas
outsb
inc
cmpl
aas
ret
fcomps
dec
fmull
fdivp
xor
into
xor
jmp
sbb
xor
xor
xor
xor
or
xor
jo
in
pop
xor
xor
sbb
jg
push
or
cmp
insb
ret
clc
mov
leave
hlt
xor
or
adc
push
sbb
pop
ss
ss
arpl
stos
add
ss
ss
sar
or
outsb
adc
jne
jle
mov
decb
sbb
sub
mov
cmp
cmp
cmp
cmp
jmp
jmp
cmp
cmp
cmp
and
dec
cmp
arpl
outsb
stos
inc
sbb
ret
fnstsw
fildll
push
add
or
cmp
or
pop
lret
mov
decb
divb
data16
mov
ss
xor
xor
xor
xor
xor
ja
mov
sbb
xor
xor
xor
xor
xor
icebp
pushl
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
push
shrl
sbb
into
and
gs
ljmp
dec
xor
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
xchg
jmp
ds
imul
mov
lret
int3
and
adc
lods
cmp
add
sbb
mov
mov
cld
xor
dec
sbb
out
sub
pop
gs
cmp
dec
cmp
pop
cmp
push
fsubl
sbb
or
and
sub
ud0
xor
xor
xchg
test
orl
or
pop
dec
es
xor
mov
pop
aaa
arpl
push
pop
mov
cmpsb
xor
xor
outsb
cli
mov
cmpb
inc
sbb
ret
sbb
ret
test
pop
inc
daa
mov
insb
jb
rorl
mov
pushf
je
call
mov
dec
int3
inc
fsubl
mov
cmp
xor
pop
enter
add
push
int3
xchg
arpl
ds
insb
jb
out
xor
mov
lds
or
scas
mov
jmp
call
mov
xor
adc
adc
sbb
sbb
add
adc
xor
mov
test
push
sbb
or
push
pusha
xor
xor
orl
add
scas
lret
mov
mov
nop
xor
jo
xor
cmp
push
shlb
popf
xor
fdivs
fadds
xor
ss
sbb
lock
jbe
xor
sarl
xor
push
xor
outsb
pusha
jg
ret
jo
bound
sarb
push
push
push
sub
dec
add
push
cmp
or
jb
pop
daa
cwtl
sbb
pop
in
out
shl
ljmp
sub
and
incl
push
insb
xor
xor
xor
xor
xor
dec
fists
add
sub
sbb
std
xor
fs
xor
arpl
xchg
sbb
pusha
xor
xor
aas
mov
in
call
xor
xor
add
xor
loop
add
lahf
adcl
sbb
xor
aam
mov
inc
xor
xor
xor
push
xor
pop
xor
jle
jmp
mov
xor
xor
xor
xor
mov
lcall
mov
pushf
xor
xor
xor
xor
xor
xor
xor
add
shlb
int3
fimull
movb
mov
xor
popa
pop
mov
cmp
xchg
icebp
sbb
xlat
addb
in
sahf
sarb
daa
mov
cmp
fsubrs
adc
inc
rolb
pusha
mov
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fidivs
adc
push
adc
or
pop
sbb
adc
adc
adc
add
data16
in
cmpsb
jbe
or
rclb
pusha
add
push
mov
adc
add
add
mov
inc
mov
jb
out
sbb
ds
mov
and
inc
push
adc
pop
and
xor
inc
mov
daa
inc
mov
adc
xor
cmpb
jp
and
push
or
inc
add
adc
test
and
mov
movsb
xchg
ret
sbb
pusha
xor
inc
push
scas
add
inc
pushf
into
add
adc
cmp
jg
jne
adc
push
adc
pop
popa
jno
and
sar
add
adc
mov
or
xor
adc
pop
stos
and
loope
icebp
mov
mov
inc
roll
inc
lock
mov
fiaddl
or
jle
and
js
jo
or
call
les
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
aas
jmp
push
stc
or
xchg
jg
decl
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
push
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
jmp
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
ljmp
xchg
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jle
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
clc
pop
pop
mov
jmp
sbb
add
loope
lods
mov
out
pop
jb
mov
or
push
mov
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
hlt
push
add
stc
loope
mov
sar
subl
cmp
icebp
testb
mov
aas
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
call
jne
sbb
paddb
inc
mov
dec
adc
push
lock
jmp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
pushl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
mov
dec
fisttpll
out
aas
std
cli
push
push
fists
fstl
jg
cmp
sub
inc
scas
inc
mov
jg
decl
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
in
decl
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
adc
cmp
cmp
js
jmp
fistpl
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
mov
add
lea
jg
gs
std
xorb
jg
or
jg
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
lcall
incl
lock
or
sarb
std
pop
les
cli
mov
mov
pushl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
xchg
push
mov
adc
and
sbb
xchg
jo
and
out
test
jmp
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
mov
arpl
ret
inc
in
mov
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
clc
add
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
fisttps
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
jmp
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
std
ljmp
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
incl
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fdivr
fidivrl
lock
adc
pop
cld
addl
adc
and
jl
push
cmp
fmull
enter
jecxz
scas
jmp
jl
cs
in
pop
mov
sub
mov
dec
incb
mov
das
aas
mov
or
cld
inc
or
fsubrs
cmpsb
push
pop
jg
add
jg
mov
mov
idiv
aad
test
mov
mov
iret
js
push
push
jbe
push
sbb
stos
icebp
pop
incb
jno
aas
sub
push
inc
jecxz
sbb
sarl
adc
loopne
jecxz
jo
and
clc
xorl
xchg
push
or
add
iret
rcr
mov
aas
fsubrl
aas
rolb
sbbb
aas
sub
mov
pushf
mov
repnz
and
mov
adc
div
or
inc
aas
push
rcrl
rolb
mov
lock
jb
fistpl
adc
call
jno
pop
mov
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
jg
lcall
lahf
or
imul
xor
dec
xor
fsubr
fistps
lds
sbb
jno
fidivrl
jg
stos
pop
add
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
incl
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
adc
cmp
inc
sti
jmp
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
mov
sahf
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
add
call
lahf
mov
or
out
lcall
mov
mov
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
mov
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
mov
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
push
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
pushl
es
xchg
fidivrs
clc
cld
outsl
scas
push
aas
repz
sbb
lock
in
jmp
loope
add
out
sbb
aaa
clc
push
std
mov
cmp
or
mov
ljmp
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
mov
mov
dec
ss
lods
movsb
or
repnz
lock
pushf
imul
jl
fistps
jl
xchg
imul
pop
in
outsl
out
cmp
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
incl
ja
pop
aas
mov
jg
mov
sub
addr16
jbe
mov
cld
daa
jp
std
adc
cltd
or
mov
ret
clc
push
std
and
add
lock
pop
pop
div
cld
testl
sbb
add
stc
lahf
loope
jae
jmp
or
je
jge
fbstp
xchg
mov
stc
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
in
sub
push
das
push
jge
out
cmp
call
xor
decb
adc
jbe
mov
mov
and
call
shr
cltd
add
mov
mov
cmp
int
add
push
pop
aaa
std
lock
cltd
nop
fisttps
inc
sbb
mov
mov
aas
icebp
ret
arpl
ror
sbb
aaa
inc
mov
adc
mov
sub
mov
pop
clc
scas
xorb
ja
and
dec
jno
or
add
xlat
rcrl
xchg
fldenv
iret
fdivrl
xchg
lcall
sbb
dec
sbb
lahf
dec
or
jo
sarl
pop
imul
jno
ret
fs
sub
inc
arpl
out
jg
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
push
decl
in
sbb
xchg
imul
add
push
push
in
outsl
jmp
std
mov
daa
jmp
faddl
add
lock
mov
test
bound
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
das
inc
pop
add
fsts
sub
stos
loopne
or
add
incb
sti
push
sti
pop
inc
add
sbb
or
nop
mov
call
test
and
add
jp
and
vmovdqu
decl
lcall
mov
shlb
jle,pn
and
fbstp
rcrl
in
lock
cmp
xlat
cld
add
or
add
dec
popa
add
cmp
or
push
ja
and
jb
inc
cmpsl
jns
inc
xorb
ret
push
div
incl
fsubrs
pop
ficompl
out
sub
sub
ffree
xchg
add
js
rcrb
incl
movsb
dec
in
fldl
jecxz
inc
ljmp
jmp
dec
fsts
pop
out
sahf
dec
pop
jge
clc
imul
aas
adcb
cs
mov
or
ljmp
push
push
jmp
adc
adcb
sub
pop
mov
pop
jmp
mov
ret
lret
jne
add
jno
dec
and
stos
xchg
fisubrl
test
inc
jbe
or
dec
cmp
mov
or
xor
pushl
jl
add
add
jle
xor
cltd
mov
das
std
ja
mov
call
cld
sbb
fsubl
into
and
jne
dec
xchg
imul
addr16
aam
or
pushf
cmp
pushl
add
sub
mov
xor
sub
dec
sti
jmp
std
mov
cli
pop
mov
dec
adc
sub
dec
xor
jge
daa
mov
dec
decl
popf
mov
lds
inc
jl
fcmovne
jmp
sbb
add
js
pushl
insb
cs
jmp
fstp
orl
jbe
fldl2e
ret
loope
xchg
lcall
icebp
lret
ja
sahf
xchg
dec
arpl
xor
ret
outsl
inc
nop
jo
mov
call
xor
cmpsb
nop
outsb
fwait
cmc
inc
or
jp
cmp
jmp
stc
cli
inc
loop
dec
addr16
mov
testb
push
dec
cmpsb
push
test
inc
xorl
mov
testb
test
xchg
xor
add
adc
cmp
cmp
decl
in
loop
mov
sarl
jae
jns
inc
sbb
pop
cld
fcomip
movq
add
sub
adc
lock
jns
mov
insl
add
loopne
push
iret
test
push
cli
mov
mov
aaa
in
adc
call
pop
inc
xchg
jae
cmp
ror
mov
jbe
sbb
sub
int
call
xchg
sub
mov
push
dec
lods
inc
push
imul
call
sbb
jne
or
jmp
cmp
push
jae
add
xlat
out
dec
enter
xor
addr16
rcrb
test
int
jmp
or
xor
outsl
movsb
push
dec
jl
out
ss
in
and
in
rclb
call
jmp
lea
sub
ficomps
inc
dec
cmc
lret
aaa
cld
std
xchg
dec
idivl
inc
mov
and
lods
sbb
push
push
inc
insb
mov
test
enter
push
push
and
ljmp
je
lods
inc
mov
push
add
mov
jbe
inc
pop
in
mov
es
inc
sub
test
sbb
xchg
stos
xchg
adc
xchg
pop
sub
ljmp
inc
xlat
mov
cmp
xchg
xchg
xor
arpl
cmc
leave
inc
pop
push
lock
jmp
aaa
or
ljmp
arpl
cmpsb
into
and
into
lret
loopne
push
cmp
adc
lea
decl
cli
sar
leave
fsubp
addl
ret
xor
jecxz
clc
pop
and
lea
fnsave
mov
int
hlt
mov
ljmp
cltd
pop
mov
jmp
stos
xchg
dec
aam
sahf
sub
push
lahf
dec
sbb
inc
pop
sub
sub
jae
in
inc
mov
inc
and
ds
lods
push
loopne
jg
lahf
adc
sbb
cli
mov
insl
push
inc
pop
mov
adc
rorl
int3
call
or
push
rcrb
out
xchg
push
mov
fstpl
out
lahf
or
jge
stos
sbb
pushl
xchg
pushf
dec
inc
pop
enter
loope
mov
mov
xchg
fnstsw
dec
or
xchg
call
pop
jmp
out
insl
lea
dec
fs
es
add
add
xlat
fiaddl
push
movsb
fwait
push
das
repz
xor
int
in
nop
pop
inc
mov
cmp
mov
jmp
sbb
cmp
les
fnstenv
test
test
pop
sbb
pop
pop
sub
adc
dec
mov
cwtl
es
jmp
adc
sarl
mov
mov
jnp
test
cwtl
inc
jmp
call
popa
shlb
fwait
int
cmpsb
mov
cli
sbb
shlb
imul
push
or
rol
mov
lret
jmp
pop
rorl
pop
mov
jae
mov
lea
jmp
cmp
idivb
out
mulb
or
int
icebp
daa
dec
and
or
in
mov
fcomip
push
out
gs
mov
lods
mov
in
cs
js
dec
cld
jg
pop
ja
push
or
xor
outsw
test
call
bound
incl
jl
push
inc
movl
int3
dec
mov
cmp
pushf
or
dec
cmp
pop
aad
mov
add
in
dec
sub
popa
dec
adc
dec
stos
test
xor
mov
sub
call
cwtl
push
xor
xorb
lret
xchg
mov
add
loopne
mov
cmc
test
lcall
test
mov
mov
outsl
pop
adc
inc
loopne
test
pop
xor
mov
jmp
out
jmp
jne
mov
jns
js
aas
jl
pop
insl
mov
sbb
mov
mov
aad
mov
aad
add
dec
repnz
call
adc
lock
pop
or
inc
xor
out
sbb
sub
dec
sub
cmp
ficoms
sub
or
xchg
out
mov
daa
shl
ret
mov
imul
mov
adcb
rcll
nop
clc
mov
mov
cmp
inc
jmp
cmp
cmpsl
neg
lret
pop
call
out
mov
cmp
decl
inc
cs
fdivrp
push
xchg
xlat
popf
cmp
lcall
sub
popa
shll
jmp
loopne
push
mov
cwtl
jnp
loopne
sahf
and
jnp
das
sbb
push
push
sub
lock
decl
aad
jmp
movsl
dec
cld
xchg
loope
mov
lret
pop
ja
lcall
add
inc
mov
dec
sub
fcoml
pop
dec
stc
jno
decl
and
mov
in
jns
xor
jge
bound
mov
lcall
incl
sbb
push
lock
jno
jb
mov
xor
xor
fcomip
decl
out
mov
sbb
in
iret
mov
sbb
repnz
push
cmp
jmp
jo
imul
das
std
or
decl
push
mov
inc
bound
xor
fsubrs
out
inc
cmp
addl
lcall
sub
in
cli
lcall
rol
cli
add
pop
repnz
jmp
decl
sub
and
jl
aas
call
push
push
dec
cmp
sub
and
sub
outsb
dec
clc
mov
cld
pushl
mov
xor
out
cmp
sub
push
sbb
insl
mov
jg
pop
data16
pushl
sbb
dec
xchg
push
pop
or
push
rcrb
xchg
es
data16
cs
ljmp
mov
mov
jl
sti
pop
insb
je
mov
pop
ss
jge
inc
mov
mov
ljmp
xchg
inc
pusha
dec
sbb
jmp
mov
pop
push
mov
daa
push
cli
mov
jbe
aam
mov
jbe
loop
repz
ja
dec
cwtl
jmp
idivl
jo
lds
push
leave
scas
scas
and
loopne
daa
shl
pusha
mov
call
mov
cmp
pop
mov
andl
sbb
lods
mov
xor
pop
jns
sub
lcall
mov
or
xchg
icebp
push
mov
lock
ret
sahf
sbb
jl
lods
dec
arpl
aaa
test
push
jge
cli
pop
hlt
pushl
xlat
mov
insb
add
shl
arpl
and
ljmp
movaps
and
xor
pushf
lock
xchg
cmp
and
xchg
mov
ljmp
lds
jb
lret
and
cmp
mov
cmp
std
ljmp
lret
mov
mov
ljmp
inc
add
cwtl
rcrb
test
xchg
pop
mov
in
enter
jae
aad
mov
das
sub
adc
call
pop
loope
enter
mov
pop
cs
incl
mov
sti
iret
pop
add
push
add
push
imul
incl
push
ficomps
sti
imul
pop
pop
mov
std
pushl
pushf
add
insl
mov
mov
call
test
test
leave
cld
ljmp
jmp
and
mov
xchg
pop
xchg
jns
pop
mov
clc
int
insl
push
cld
sbb
in
call
in
xchg
icebp
paddusb
stos
adc
add
test
int3
adc
pop
ret
mov
and
push
adc
jae
pop
push
movhps
mov
imul
cld
sti
shlb
sbb
imul
sub
jl
add
pop
cmpsb
mov
jl
or
cmp
arpl
push
ret
es
rcll
scas
or
ljmp
and
mov
jo
mov
mov
push
add
and
sti
loop
sub
lods
scas
pushl
shll
pause
add
xchg
ret
movsl
xchg
push
mov
les
cmp
out
cld
inc
in
out
shrl
dec
cmp
or
push
pop
mov
mov
xchg
lret
lcall
insl
aam
or
mov
pop
andb
int3
or
sub
ljmp
sub
cli
lods
popa
sti
addr16
push
or
clc
or
xor
mov
scas
pushl
lods
clc
inc
dec
dec
mov
shrb
cmp
and
fucomp
push
loope
idiv
incl
dec
fmuls
loope
fs
mov
in
add
pop
filds
ljmp
cli
xchg
mov
das
test
mov
nop
push
insb
es
and
scas
sbb
call
int
jne
cmp
add
pusha
and
int
mov
scas
adc
cltd
aam
sub
call
cmp
add
xlat
dec
push
dec
jae
lock
arpl
call
inc
pop
push
aas
std
int
mov
pop
cmp
mov
mov
js
pop
inc
call
insb
sarb
fstpl
dec
out
sbb
mov
and
rcr
xor
ja
mov
incl
jbe
lahf
cmpsl
xor
lret
mov
pop
and
push
jp
jp
in
mov
ljmp
dec
adc
xchg
mov
cmpsb
dec
je
and
sub
cmc
fldt
loopne
mov
mul
stos
mov
pop
and
ret
test
bound
filds
jbe
jae
lret
xchg
leave
cltd
cmpsl
cli
mov
leave
fildl
in
fnstsw
jg
call
enter
mov
aaa
in
pop
mov
incl
cmp
imul
lahf
in
xor
fsubrl
mov
jmp
xor
rolb
cld
or
and
pushl
cmpsl
sbb
xor
mov
fsubl
cmpsb
movsl
sub
mov
mov
sub
lods
add
jg
xor
sahf
push
js
sub
adc
addl
sub
lcall
fbld
sbb
adc
push
test
stos
add
mov
gs
mov
ljmp
and
inc
xor
lock
push
lcall
ds
inc
mov
out
pushl
daa
test
mov
jecxz
xorl
pusha
mov
outsl
mov
cmp
push
and
dec
sub
sub
mov
data16
xchg
cld
mov
pushf
lods
xor
sarl
in
popf
sbb
mov
fbstp
nop
mov
push
mov
repnz
pop
in
fldl
ljmp
jecxz
and
mov
xor
fldl
mov
test
lcall
lret
test
jle
xor
ljmp
call
lret
xchg
fdivp
cld
mov
aas
add
repnz
iret
cmpsl
cld
incl
pop
in
test
les
lcall
mov
enter
bound
jmp
mov
ret
pushf
or
js
mov
add
test
sbb
stos
mov
or
sbb
dec
inc
add
mov
test
shll
std
aaa
mov
pop
push
cmp
mov
in
scas
xchg
loope
adc
lahf
leave
sub
fs
and
xchg
cmpsb
incl
mov
jb
jle
iret
stc
testb
nop
or
dec
push
das
inc
cmp
fiadds
mov
loopne
int3
mov
adc
push
push
fdivs
shrl
ljmp
jmp
adc
add
xor
adc
notl
push
ljmp
cmp
sub
xor
js
loop
push
movsb
fsts
fildl
sbb
cltd
aad
sahf
sub
adc
push
sti
aaa
ja
add
sti
adc
out
cli
lcall
or
xchg
loop
push
ljmp
pusha
pop
and
lods
frstor
mov
aas
cmp
push
mov
push
pop
add
xchg
or
jmp
fcomps
lret
mov
jmp
sub
fisubrs
mov
repnz
pop
and
lret
jmp
add
aad
jge
inc
pop
sti
pop
pop
pop
mov
push
sti
jmp
add
dec
inc
or
xchg
sarb
out
sbb
mov
das
std
cmc
sbb
xchg
mov
lret
and
xchg
into
stc
sbb
std
jno
adc
push
in
lock
cltd
sub
mov
dec
cmpl
aam
add
mov
out
incl
lret
inc
stc
xchg
inc
jg
and
lds
mov
ds
cmp
movl
mov
pusha
pop
imul
aas
mov
sbbb
push
mov
push
sbb
outsb
decl
jmp
ja
fdivrs
ljmp
jmp
xor
push
psubsb
int3
jp
std
lcall
pop
mov
fs
jmp
inc
mov
inc
mov
jne
mov
scas
stos
and
pop
insl
sbb
xor
adc
push
incl
shrl
sub
leave
loope
jmp
shrl
fldt
mov
fnstenv
movsb
push
push
shlb
jb
mov
lcall
sbb
xchg
xor
adc
cmc
mov
sub
mov
sub
jg
es
push
mov
pusha
repz
pop
sub
mov
cli
pop
mov
decl
adc
dec
insl
aam
mov
popf
addr16
pop
sbb
ret
decl
repz
mov
cld
xor
setae
fnstsw
leave
or
call
mov
fxch
int
sub
adc
test
lds
repnz
mov
mov
mov
scas
pusha
movsb
lcall
inc
into
aas
aad
mov
xchg
lret
adc
jns
or
or
and
push
loop
mov
mov
fimuls
pop
add
addr16
or
movsb
lods
cmpsl
pusha
cld
ljmp
push
mov
or
or
std
iret
inc
push
sbb
adc
js
arpl
cmp
ds
push
iret
lret
or
lret
cli
sub
cwtl
movsl
stos
loope
and
jmp
fwait
or
cmp
cltd
test
xor
ret
inc
aam
jno
jp
orb
jp
and
push
scas
adc
in
fdivl
ret
dec
icebp
add
roll
mov
push
les
rcrb
scas
js
into
ss
pop
mov
dec
pushf
loop
lods
sub
jmp
lods
and
cmp
lcall
push
scas
mov
mov
daa
dec
out
in
or
pop
xor
fsubp
xchg
popa
mov
cs
decl
je
shrb
mov
adc
ror
pop
nop
loopne
addr16
clc
repnz
mov
sbb
adc
hlt
lock
scas
sbb
popa
push
jb
bound
jg
or
pushl
std
xchg
fnstenv
icebp
dec
sbb
in
gs
mov
mov
fwait
cmp
fs
lret
jmp
xlat
ret
inc
inc
pop
mov
push
pop
out
jb
ret
bound
dec
jb
call
cmovbe
xchg
pushf
pop
out
mov
mov
mov
pop
test
pop
dec
filds
and
add
in
mov
push
add
insb
xor
aad
push
incl
push
push
scas
and
jp
in
xlat
mov
inc
inc
mov
cli
loope
test
mov
imul
mov
pushf
or
gs
cltd
pop
aas
dec
jns
adc
in
dec
xchg
or
incl
sbb
fidivrs
cmp
in
mov
popa
sbb
lods
mov
mov
inc
mov
outsl
mov
mov
and
jl
out
addr16
jb
aam
mov
ljmp
fisttps
push
jge
ret
add
inc
mov
outsl
dec
lcall
mov
or
icebp
mov
enter
or
pop
push
add
decl
mov
dec
dec
mov
mov
loop
adc
mov
adc
incl
xchg
mov
sbb
gs
mov
xor
notl
ljmp
sub
jne,pt
sub
test
xor
nop
test
cltd
icebp
or
loop
inc
lcall
jnp
enter
jge
xchg
add
push
test
cmp
insb
out
xchg
dec
rcrl
fsubrl
repnz
sub
lcall
ljmp
lret
dec
decb
mov
sub
xor
jno
inc
sub
push
mov
pop
mov
mov
out
aas
shlb
bound
test
push
pushl
mov
ret
ret
dec
mov
push
call
aad
int3
leave
clc
push
notb
test
pop
xlat
jl
cld
and
pop
std
popf
icebp
xor
incl
or
iret
push
add
jg
in
pop
test
or
push
or
xchg
mov
pushf
push
mov
test
cmp
push
testl
jmp
int3
imul
xchg
out
loope
out
faddl
inc
and
jmp
iret
mov
inc
loope
add
repz
mov
jne
dec
mov
dec
popf
jmp
mov
sub
fmuls
push
into
or
inc
loop
fcomps
inc
stc
mov
in
inc
aam
gs
lret
mov
stos
mov
insl
jle
lcall
std
call
xchg
xlat
mov
addl
jle
lret
pop
ja
out
mov
jbe
jg
add
dec
int3
or
popf
lods
mov
push
mov
xor
jmp
lret
mov
add
leave
push
stos
ljmp
jmp
add
decl
dec
jecxz
and
int
movsb
cmp
lret
fmuls
incl
aaa
fwait
pop
mov
mov
fwait
dec
mov
or
leave
ljmp
shrb
pop
dec
arpl
cwtl
rclb
ret
mov
shll
lahf
sti
jmp
add
ss
aas
hlt
test
adc
lret
lock
fildl
loope
int3
jne
dec
cmpsb
mov
call
imul
jno
mov
cmp
jb
jecxz
jle
sbb
orl
jnp
xchg
xor
cmp
xchg
pop
and
sbb
std
jno
push
add
fistps
jmp
adc
cwtl
sbb
inc
lds
ds
lds
leave
mov
mov
rcr
decl
outsb
inc
add
inc
les
sub
out
xchg
into
lret
mov
xor
call
mov
dec
rcrl
pop
push
hlt
mov
fwait
jnp
add
jmp
mov
push
mov
out
stos
out
in
fistps
or
es
lds
leave
mov
pop
mov
mov
pushl
loopne
and
inc
dec
lret
xchg
out
mov
or
cmp
pushf
into
and
and
in
repnz
lock
aam
scas
push
add
fbld
cmp
movsl
and
push
into
scas
pop
xchg
jo
insl
rolb
lods
icebp
in
jmp
or
mov
insb
jae
cmp
test
fmuls
data16
mov
inc
sub
sarb
testl
xor
arpl
insl
push
push
xorl
ljmp
pop
jp
mov
es
call
add
inc
xchg
data16
out
mov
add
sti
jae
fldl
test
and
add
shlb
stc
mov
mov
leave
es
outsb
pop
push
jmp
jecxz
lock
jle
push
mulb
cmc
mov
lcall
outsb
enter
xchg
mov
rcr
jnp
mov
cld
scas
cli
decl
mov
pusha
push
or
sub
iret
xchg
xchg
xor
xchg
sbb
mov
pop
sub
adc
mov
lock
incl
pop
aad
jae
loop
dec
jecxz
shr
les
adc
movsb
ret
outsl
pop
and
mov
or
clc
jmp
pusha
push
jo
clc
ret
jg
xchg
jle
fidivs
in
sub
decl
dec
rclb
cmp
jb
ss
jnp
aam
mov
jnp
and
orb
mov
in
or
inc
mov
pop
fcmove
shll
sti
repz
inc
in
adc
pushl
and
inc
jb
lcall
dec
pop
adc
out
in
jmp
xor
push
or
rol
push
out
out
fisttpll
insb
aaa
cli
lahf
mov
movl
lock
call
sbb
cmpsl
and
mov
adc
add
lret
dec
in
or
push
jbe
roll
dec
sub
dec
push
xor
sub
in
fwait
test
jnp
mov
sub
push
icebp
push
enter
aad
cmp
shrl
shlb
inc
xchg
shl
int
push
fistpll
arpl
jmp
nop
mov
push
adcb
pop
xor
push
es
fs
jmp
scas
mov
ret
sar
sahf
jbe
xor
xor
push
fwait
or
rcrl
or
ljmp
roll
push
ret
xor
xor
xlat
mov
repnz
rcll
ljmp
movsb
cld
push
xor
les
out
inc
and
sub
xchg
mov
inc
fcomip
incl
shll
icebp
mov
dec
js
mov
or
sar
ja
xor
pushf
fcoml
rcrl
mov
mov
pusha
popf
xchg
jg
mov
add
sub
inc
stos
mov
sbb
ds
hlt
outsb
push
jne
xor
pusha
jns
xor
add
dec
jmpw
sbb
inc
xor
fisttpll
or
movsb
insb
and
cmpsl
incl
je
or
test
iret
sbb
pop
call
cmp
icebp
jbe
jle
push
pusha
inc
fs
mov
incl
loop
sub
add
lds
lahf
sub
cmp
cmc
stos
jg
fbstp
movsb
pushf
add
arpl
sbb
jmp
mov
cmp
mov
call
scas
out
lods
sbb
and
out
push
sbb
out
sbb
adc
scas
clc
decl
lods
add
into
jg
and
mov
sbb
cwtl
cmp
dec
pop
adc
pop
aaa
std
call
ficompl
mov
xor
jle
mov
imul
repnz
icebp
xchg
jb
stos
lret
jmp
mov
jecxz
mov
lahf
std
add
lret
hlt
movsl
repnz
sub
out
js
jmp
dec
int
jne
sub
repnz
mov
mov
adc
cmc
push
dec
shr
pop
mov
insb
lcall
call
fadds
mov
addr16
jp
push
inc
or
jmp
mov
leave
or
dec
call
out
mov
lret
xchg
xchg
mov
sub
pushl
inc
jae
xor
push
lret
sbbl
pop
pop
movsl
xchg
outsl
mov
movsb
stos
jle
aaa
mov
pop
xchg
roll
mov
cmp
sub
sub
mov
ljmp
testl
nop
imul
jmp
pushw
lret
lcall
and
out
rol
bound
sti
cmpsl
notb
xchg
scas
lcall
fisttpll
mov
cwtl
ret
fldt
lcall
ljmp
or
xchg
cmc
xor
jnp
sub
jl
mov
xchg
shll
or
fdivl
stos
sub
mov
out
mov
mov
jns
bound
out
push
mov
pop
leave
testb
or
std
lcall
cwtl
cmp
jge
clc
bound
aas
mov
jge
mov
ljmp
sbb
sarl
outsb
jne
aam
mov
pop
sub
int
cmp
dec
clc
mov
or
lret
jae
jmp
into
dec
fidivs
std
call
sti
mov
in
cwtl
into
sti
xor
cmp
add
fwait
cmp
fcomip
pop
sbb
sti
sbb
dec
adc
les
push
inc
push
mov
pushl
outsb
push
sbb
pop
mov
ficomps
iret
inc
add
ljmp
ss
pop
xchg
or
sub
fcmove
jb
jl
lcall
mov
mov
inc
shll
dec
xor
ret
ljmp
push
fildll
std
clc
cmp
lods
rcrb
add
cld
outsb
cwtl
sub
stc
data16
jb
push
iret
xchg
ret
mov
test
insl
out
sbb
les
movsl
shll
and
popa
push
pop
in
adc
xor
jmp
xor
stos
loopne
lods
cmp
jecxz
test
adc
test
inc
loop
fwait
xor
aas
sub
dec
dec
sahf
sbb
xor
xchg
jno
pop
mov
imul
adc
addr16
push
dec
or
fdivrl
fs
inc
imul
mov
push
mov
cltd
push
add
mov
xor
inc
pop
mov
mov
test
sbb
sbb
popa
sbb
arpl
xor
jp
jg
push
divb
faddp
xchg
dec
xor
pop
pop
imul
or
icebp
jmp
inc
cmp
cmc
inc
clc
xchg
pop
push
adc
filds
cmp
cmp
xor
xor
inc
out
aad
daa
test
dec
hlt
or
ljmp
out
sarl
fldl
xchg
inc
rcrb
into
mov
fcomip
ljmp
mov
mov
out
repnz
xchg
lahf
out
lret
ror
dec
cmp
lcall
mov
mov
sbb
dec
pop
mov
lcall
inc
in
inc
mov
mov
pushl
test
xchg
fidivl
daa
xchg
outsl
dec
mov
mov
xchg
decl
packsswb
js
cmp
scas
and
mov
fisubl
dec
xor
fildll
hlt
ret
ljmp
stos
add
xchg
cmp
imul
lret
dec
pushl
or
sti
mov
ja
jne
fcmovne
push
pop
and
test
incl
leave
jl
shlb
xor
std
popa
pop
sbb
sbb
and
adc
add
xorl
xor
in
lods
cmp
cs
sub
sbb
jecxz
call
cld
lcall
inc
call
sbb
out
mov
pop
mov
pop
arpl
mov
cmp
push
sahf
js
sbb
aaa
outsb
popf
jecxz
sbb
pop
subb
sub
out
inc
pop
mov
iret
push
inc
call
dec
jne
xor
mov
insb
xchg
out
inc
decl
jbe
pop
push
and
xchg
std
call
repz
pop
std
sti
xchg
lds
pop
lret
loopne
ja
mov
mov
sbb
aam
cli
jmp
lcall
ret
mov
inc
call
cwtl
fst
inc
push
xor
jecxz
cli
mov
sub
add
adc
pop
imul
aad
out
mov
push
cmp
std
push
xor
lods
popf
sbb
xchg
in
cmp
mov
lods
pop
outsl
jne
insb
outsb
cmc
lret
decl
inc
jge
mov
or
jg
stc
mov
mov
cmp
xorb
mov
call
xor
mov
cmpsb
and
aas
fisttpll
outsb
sub
xchg
enter
xchg
xchg
jno
push
and
call
ret
cltd
out
pop
and
pop
or
es
mov
inc
push
pop
add
incl
fadds
icebp
mov
sbb
push
push
adc
movsl
imul
jmp
ficoml
mov
push
or
icebp
aad
loop
adc
adc
div
mov
push
pop
dec
lcall
lods
mov
fdiv
inc
xorl
mov
xchg
popf
pushf
lcall
inc
std
call
clc
inc
adc
mov
jno
pop
ret
adc
fildl
pushl
mov
in
cli
pusha
cmpsl
inc
scas
pop
jno
cmpsb
sbb
mov
jbe
fstl
inc
inc
ds
incl
sbb
les
pusha
and
inc
inc
or
movsl
xchg
push
in
in
dec
je
ret
mov
mov
adc
sbb
dec
out
jnp
xchg
jle
adc
mov
scas
insl
lock
decl
jl
push
scas
dec
rcrb
fucom
shlb
cmp
aaa
dec
stos
lret
sub
hlt
and
incl
pop
or
test
insb
sub
cwtl
nop
xchg
nop
mov
lahf
mov
adc
addr16
jno
outsl
jg
callw
jae
mov
inc
rol
adc
je
cs
fdivr
jmp
push
out
add
xchg
sbb
inc
das
push
ja
mov
dec
loop
sbb
pushl
cltd
loopne
in
mov
xchg
jle
dec
ds
mov
push
push
fldt
call
jg
or
jmp
shll
sbbl
sti
scas
fcoms
add
repnz
push
mov
or
mov
test
push
test
incl
cli
sub
jb
and
sahf
xchg
mov
cmp
or
xlat
xlat
popa
cmp
repnz
decl
mov
push
lods
daa
mov
dec
insl
inc
ja
orl
out
in
inc
adc
jl
in
dec
fdivs
mov
inc
lods
xor
icebp
clc
xchg
out
xchg
inc
jg
and
ret
fmulp
stc
sbb
incl
repnz
or
mulb
and
loop
push
jle
lcall
rolb
xchg
jns
pop
sbb
mov
cltd
push
cmp
fxam
imul
or
add
pushl
cmp
int3
or
fwait
insl
aaa
repnz
fisubrs
ljmp
repz
ljmp
int3
les
loop
jmp
adc
sbb
jge
loopne
and
and
test
ljmp
cld
pop
std
xchg
jmp
xchg
nop
jbe
jne
fstps
dec
je
test
cwtl
inc
ljmp
aas
lcall
mov
fcmovne
orb
add
ds
jmp
inc
xor
lock
test
xchg
addb
outsb
dec
mov
int
lret
incl
fstps
mov
in
adc
pop
shld
add
std
sub
xor
call
xchg
mov
and
in
cltd
adc
out
cli
or
cmp
sub
mov
mov
ljmp
out
mov
sub
sub
mov
jne
inc
and
xchg
mov
jmp
push
xor
mov
xchg
push
ret
aad
out
fldl
cmp
lods
cmp
rolb
cli
shll
pop
pushf
pop
xchg
imul
testb
fxch
add
push
or
mov
jmp
loop
jmp
aaa
test
shr
push
cwtl
scas
xor
call
dec
dec
adc
mov
in
test
fs
xor
mov
mov
adc
jg
es
mov
mov
insl
jb
test
movsb
and
fstpt
pusha
hlt
sub
mov
mov
mov
hlt
mov
jg
mov
insb
mov
bnd
jae
or
sub
incl
push
lds
cwtl
pop
mov
xchg
pop
in
pop
xchg
mov
ret
mov
cmp
or
icebp
inc
sub
idivl
pop
out
xor
das
iret
les
sub
ljmp
dec
pusha
cmp
stos
imul
or
int3
ljmp
call
sbb
adc
pop
add
or
sub
cmp
fidivs
incl
int
jb
and
xor
mov
insl
push
in
adc
fdivrs
fldcw
add
ds
js
xor
pushl
cwtl
xchg
ja
jb
test
inc
push
rorl
in
xor
and
jl
test
push
and
dec
pavgb
test
mov
xor
jmp
es
cmp
ret
add
fildll
nop
xlat
xor
jmp
ljmp
lea
stos
and
pop
pop
cli
jl
cmp
xor
push
xor
call
xchg
in
lret
int3
std
aad
add
mov
cltd
pop
rorl
jne
xchg
and
add
incl
pusha
cmp
fdivrs
mov
sahf
fldt
jp
lcall
dec
out
xchg
lea
pop
push
not
add
and
test
inc
dec
push
adc
aam
push
jbe
dec
cld
call
mov
fsubr
bound
test
jl
mov
cmp
loopne
cmp
aas
push
ds
xor
call
push
pop
xor
cwtl
adc
jae
adc
scas
mull
les
loop
cmp
incl
dec
into
frstor
scas
sti
adc
stos
ss
fildl
jns
jnp
add
sar
incl
mov
and
sbbl
and
shll
ffree
jg
fisubrs
push
or
mov
jp
lret
mov
pop
fadd
adcl
add
std
jmp
jae
push
outsl
clc
cmpsb
cs
call
into
mov
sbb
call
andw
lea
rcll
cmp
and
in
shll
sub
inc
and
mov
add
loopne
push
fs
xor
adc
xchg
jne
pop
inc
arpl
dec
mov
xlat
repnz
test
dec
pop
decl
cmc
inc
jp
int
vmovq
cmp
xchg
es
mov
push
fiadds
inc
or
jg
shlb
pusha
jns
cld
int
or
into
dec
fcomip
lcall
or
inc
mov
mov
jmp
out
pop
jns
stc
negl
push
orb
fs
dec
into
jne
in
xor
lcall
sub
lea
push
or
out
pop
inc
mov
ljmp
decl
push
popf
in
pushf
jmp
rcrl
lret
jmp
fs
pop
mov
jo
mov
pop
pushw
call
sub
jg
pop
test
arpl
iret
lcall
push
scas
dec
test
aam
and
mov
cli
mov
sub
sbb
hlt
sbb
js
or
or
idivb
push
loopne
mov
popf
inc
xlat
je
inc
fwait
in
mov
adc
out
mov
pop
ja
adc
aas
stos
mov
jecxz
xor
pop
mov
pop
subl
decl
addb
jle
jmp
or
andb
dec
fwait
out
ljmp
pushl
insl
mov
dec
dec
jp
sub
es
sbb
sub
sbb
jp
lcall
mov
xchg
xchg
cmp
mov
das
scas
jae
or
ret
call
mov
popa
and
inc
jnp
push
loop
pop
cmp
push
xor
lock
push
dec
mov
mov
ljmp
clc
and
jmp
movsb
stos
insb
call
jge
stc
jg
stos
insl
sub
and
pushl
fistps
notl
pop
mov
add
in
mulb
mov
ud0
or
mov
call
fsubp
lret
jmp
es
cli
lcall
dec
mov
or
in
hlt
call
dec
repnz
adcl
pop
add
shlb
lcall
fisubrl
js
xor
sbb
mov
jne
and
push
lahf
mov
movsl
add
mov
push
sahf
loope
test
iret
add
jbe
push
dec
sti
lcall
pushl
xor
notl
xchg
jl
jmp
cmp
inc
pop
outsb
das
fdivs
int
lds
adc
jno
lock
ljmp
sub
mov
ljmp
or
dec
hlt
push
dec
or
pop
divb
std
adc
fildll
push
popa
ljmp
mov
incb
int3
shrb
mov
std
push
ss
ret
fdivr
ljmp
sbb
mov
in
lock
sahf
and
flds
pop
mov
add
sub
inc
jmp
popa
mov
sub
adc
fadds
into
sub
mov
roll
pushl
jbe
popa
mov
or
jns
cltd
cmp
or
out
incl
mov
scas
int3
js
outsl
pop
fstpl
les
xchg
out
bound
mov
fistps
cmp
inc
sub
movsl
fisttps
mov
or
or
mov
fmuls
dec
adc
push
mov
jg
hlt
das
push
adc
das
cmpsb
mov
push
sub
ljmp
dec
les
lret
mov
xchg
inc
pop
aad
repnz
addr16
daa
mov
jmp
xchg
cmp
sbb
cwtl
int3
cmp
inc
call
cmp
inc
add
mov
sbb
inc
andb
jecxz
cmp
cmpsl
pop
cmp
add
outsl
cmp
mov
dec
fimuls
out
pop
jne,pn
dec
push
in
inc
and
ret
xchg
mov
mov
jb
dec
pop
add
cmpsb
or
fwait
jmp
aas
jns
lock
and
or
decl
and
and
stc
arpl
ljmp
push
lahf
sub
fidivl
pop
push
pop
sub
test
testl
jmp
push
inc
pop
fldln2
rcrl
xchg
iret
enter
jp
jb
fcomps
call
mov
pop
clc
clc
adcb
xchg
xchg
push
std
and
lcall
lcall
sti
mov
adc
je
jno
sbb
cmp
cmp
sbb
loopne
cmp
pop
cmp
sub
mov
shll
sbb
xchg
fldenv
xchg
call
fdivrp
sub
dec
sub
adc
pop
cmp
nop
inc
jo
aam
inc
mov
test
xchg
jmp
andb
sub
rcr
addr16
lea
xlat
pop
pusha
gs
jno
out
clc
mov
mov
pop
xchg
xchg
adc
jo
aas
lahf
push
pop
adc
ja
jl
mov
es
xchg
adc
fldcw
add
and
xchg
mov
in
xor
mov
fucomip
dec
loope
jb
addl
push
fs
sbb
cld
push
xchg
iret
mov
sbb
and
jmp
jae
sub
ljmp
lock
xorb
popf
jmp
sbb
sub
sbb
call
and
filds
sub
inc
dec
rorl
out
outsl
outsl
xor
addb
sub
incl
cmp
pusha
pop
out
jnp
xor
jae
insl
in
jne
mov
dec
cmp
adc
incl
test
nop
dec
push
hlt
mov
adc
js
sbb
fwait
sbb
lcall
sub
jbe
pop
out
pop
adc
and
xor
push
add
fimuls
cmc
mov
xchg
ds
mov
mulb
jecxz
andl
mov
jbe
ljmp
add
sub
inc
push
xlat
test
ljmp
fnstcw
jp
stos
stc
push
pop
pushf
bound
enter
push
fucom
nop
call
ret
mov
inc
cwtl
push
mov
imul
movsl
scas
outsb
pop
je
das
or
iret
loopne
jecxz
pushl
rcr
es
sbb
loope
fldenv
iret
xchg
xorl
cmpsl
add
inc
loope
xchg
mov
mov
sbbb
jmp
fistl
mov
xor
imul
sbb
fcmovne
test
loop
xchg
rcrl
ljmp
je
movsb
jge
xchg
and
jne
dec
aam
test
xor
call
pop
mov
aaa
out
repz
mov
das
sbb
movl
jo
sbb
dec
sbb
test
push
sub
push
shll
rcl
mov
push
xchg
and
sahf
daa
sub
jg
mov
enter
cwtl
dec
cmpsl
inc
push
jg
call
pop
dec
push
jp
xlat
add
push
hlt
scas
mov
xchg
movsb
pop
in
jmp
mov
in
dec
rolb
popl
cmp
ljmp
mov
rcrl
xchg
mov
adc
aad
pop
dec
mov
ljmp
push
jno
adc
arpl
adc
mov
adc
rcrb
inc
inc
repnz
xchg
popa
jbe
shll
es
pop
out
xchg
incl
jg
sub
add
mov
xor
and
sub
sahf
dec
dec
mov
or
stos
and
movsb
mov
enter
fwait
bound
ljmp
out
inc
xlat
fbld
jnp
pushl
mov
sbb
mov
fcomp
pop
sub
je
sar
pushl
push
mov
sti
ret
enter
jp
xchg
jge
cmpsb
xor
sub
out
push
adc
pushl
iret
sbb
nop
mov
pop
jmp
mov
inc
inc
push
bound
sub
in
add
shlb
jno
sti
inc
xchg
aas
mov
decl
loop
pop
adc
mov
dec
pop
ret
popa
decb
ficoms
cmc
call
std
incl
push
sub
dec
dec
sbb
outsb
in
and
lahf
mov
mov
clc
fisttps
and
jns
push
jmp
inc
cmpsb
or
or
fidivrs
aaa
jmp
stc
add
push
add
xorl
mov
pop
jmp
outsl
fistpl
push
rorl
mov
jne
in
mov
pop
sbb
fstpt
test
lret
inc
pushl
stos
jb
adc
xchg
aas
sbb
repz
cltd
mov
push
lret
out
clc
inc
ret
pop
ror
push
cmpsl
xchg
shrl
lods
push
js
jbe
out
add
add
sub
sbb
sbb
data16
mov
jl
mov
sub
lock
incl
adc
push
popf
cmp
test
sub
sub
jbe
jmp
lret
test
ljmp
iret
sub
adc
jecxz
or
fsts
sarb
sahf
mov
mov
or
ds
adc
test
ffree
xor
jmp
je
fnstsw
push
in
xorb
jmp
ss
mov
loope
jmp
rolb
pop
inc
xor
inc
inc
pop
int3
mov
decl
in
dec
sub
or
and
jle
stos
cmp
jnp
inc
mov
ljmp
cld
pop
and
clc
mov
sbb
and
shlb
loop
inc
mov
pushf
lock
pushl
sub
pop
xchg
std
cmp
test
xchg
mov
jae
das
nop
jmp
cmc
decl
ret
insl
stos
in
ret
je
add
out
stos
xchg
stos
mov
sbb
cld
hlt
hlt
jmp
les
jg
lcall
inc
cmpsl
xchg
and
fstps
push
cmp
cmpsb
and
xchg
add
incl
dec
pop
adc
in
jg
outsl
sbb
rorl
mov
and
aam
dec
add
ja
clc
jmp
adc
test
int3
jmp
pushf
lcall
dec
mov
or
movsb
mov
fwait
scas
mov
aas
loope
xor
jbe
lcall
pop
sbb
push
or
push
jge
icebp
pop
nop
loop
data16
fidivl
sub
gs
das
shlb
sti
gs
push
adc
and
decl
and
ja
dec
imul
daa
add
hlt
insl
sbb
jg
pushl
jb
adc
subb
jg
imul
add
imul
xchg
sub
loopne
mov
cmp
xchg
sbb
push
outsl
fwait
mov
inc
clc
dec
xchg
lcall
scas
loope
jle
dec
in
pop
in
aad
loopne
aad
call
jns
push
out
dec
inc
sub
pop
cmp
xchg
pop
fsubrs
inc
push
pushl
pop
jge
sbb
ljmp
xorb
xchg
or
sbb
inc
ljmp
sub
and
jge
test
adc
jle
call
js
adc
adc
decl
clc
dec
stc
mov
out
ret
fiadds
and
fistpll
imul
mov
lods
pop
add
jmp
sbbl
daa
roll
mov
pushl
mov
roll
out
into
fs
or
lret
cmpsl
cs
jmp
adc
js
jle
bound
unpckhps
pushf
aas
push
inc
iret
sub
push
lds
call
mov
test
clc
decl
lea
daa
popa
pop
xchg
int
dec
and
testl
dec
xor
and
lods
std
popa
gs
rcrb
jg
stos
incl
sti
mov
pop
add
das
movsb
imul
sub
ja
dec
ljmp
rorb
xchg
cmc
xchg
adc
dec
add
insb
movsl
mov
cmp
jmp
mov
arpl
add
dec
add
lret
in
pextrw
cmc
aam
jmp
mov
mov
popf
cmp
or
add
cmp
xchg
arpl
jns
cmpsb
pushl
mov
cltd
shll
stos
into
scas
inc
jbe
pop
xchg
hlt
ljmp
or
data16
fstl
aas
cmp
cmp
push
inc
fstl
lock
call
sbb
aaa
jp
pop
and
inc
lock
mov
push
inc
pop
imul
jne
ljmp
mov
movsl
shrb
ret
push
or
test
mov
ficoms
popa
fsin
adc
in
adc
pop
hlt
arpl
nop
add
ss
lods
icebp
xchg
adc
pop
rorl
in
or
mov
ret
add
dec
mov
jg
push
xchg
xor
aas
dec
fcomps
push
mov
mov
xchg
sub
in
in
mov
push
jb
inc
or
pop
daa
dec
jo
or
imul
sub
push
add
pushl
out
cmp
loopne
out
jge
das
xchg
mov
and
pop
mov
pushw
jg
or
cmc
cmpsb
aam
dec
cmpsl
jl
xchg
aas
jmp
xchg
or
jmp
cs
jp
rolb
or
mov
pop
movsb
jns
mov
sti
mov
xor
mov
lods
cld
mov
dec
fcoms
fcmovnb
jle
sbb
cltd
bound
ret
out
fsubr
incl
leave
cmp
push
mov
loopne
decb
cmp
fists
fdivrl
mov
add
incl
mov
call
std
adc
call
xchg
les
push
cmp
or
fisttps
outsb
les
pop
in
cmp
xor
push
sbb
outsl
inc
fcomi
sub
mov
adc
adcl
ss
test
cli
dec
movsb
pop
xchg
sub
lcall
out
push
fadds
and
push
mov
cld
or
insb
push
cmpsl
cmp
push
das
cs
ljmp
rcl
pop
dec
and
xor
jmp
insl
inc
xchg
lahf
adc
stos
mov
ret
cwtl
add
inc
jne
cltd
xchg
sub
das
jp
jbe
mov
das
add
fwait
enter
push
fwait
fwait
jl
mov
inc
sbb
je
and
sbb
xchg
cmpsb
clc
push
cmp
sar
stos
jmp
push
shll
test
sbb
xchg
sahf
and
sti
stc
sbb
xchg
nop
mov
sti
lea
and
popa
push
std
fisubrl
xor
and
clc
ret
pop
ljmp
fwait
dec
adc
xchg
cltd
pop
or
lcall
idivl
imul
ljmp
icebp
jp
inc
jmp
je
lock
xor
cmp
and
lret
jmp
adcb
push
stos
xor
and
insb
push
ret
popa
lcall
andl
lcall
xchg
sub
test
mov
int
pop
pop
push
pop
orb
daa
inc
repnz
rorb
mov
mov
data16
mov
dec
xchg
loopne
lcall
mov
scas
test
mov
jmp
push
xlat
sub
test
movsl
repz
les
mov
and
je
je
xor
lcall
jmp
cmp
out
push
adc
mov
push
xchg
ljmp
fs
mov
movsb
ficompl
incl
xlat
sub
stc
test
sbb
jg
into
cs
sar
cmp
sbb
loopne
les
fs
call
sub
pushl
insl
xchg
bound
adc
xchg
mov
lahf
add
not
inc
js
out
cmpsl
mov
ss
outsl
aam
shr
xor
xor
lret
clc
mov
dec
out
out
push
sbb
xchg
mov
pop
dec
fidivl
mov
decl
mov
lahf
adc
jmp
mov
fildll
xchg
add
mov
es
outsb
mov
div
loope
cmp
push
in
push
and
cmpsb
add
jae
sub
sub
in
rclb
mov
in
bound
cli
dec
push
stc
xchg
nop
jge
add
add
cltd
pop
aam
js
adc
sbb
stos
ret
inc
xchg
mov
push
or
aas
imul
cmpsl
jne
mov
cmp
arpl
jg
cmp
jecxz
mov
lret
icebp
sbb
movsb
lock
gs
lcall
incb
push
add
aam
lcall
push
cmpsl
clc
jae
or
arpl
inc
or
inc
les
jo
xchg
mov
stos
mov
jl
push
ret
popa
mov
incl
aas
adc
test
addr16
push
pop
ficomps
inc
mov
pop
addr16
mov
fwait
or
lcall
movsb
loop
flds
fnstsw
int
mov
ret
in
dec
scas
xchg
cmp
ljmp
sbb
addl
test
push
jbe
mov
decl
rclb
std
test
mov
loope
cmp
xor
adc
jmp
inc
popa
std
mov
cmp
sbb
scas
scas
insb
rol
ret
pop
outsb
out
mov
and
call
test
test
int
shlb
mov
sub
dec
dec
pushf
into
pop
rclb
jl
mov
out
inc
push
jmp
scas
xor
push
int
fsts
rcrb
and
mov
push
mov
sbb
mov
ljmp
or
test
pop
and
cld
mov
push
inc
bound
dec
adc
adc
mov
int
and
add
lcall
scas
les
in
out
mov
or
shl
test
and
sti
fisubrs
sub
dec
xchg
mov
sbb
in
ret
je
lods
cwtl
adc
decl
jno
jg
or
je
jns
iret
push
mov
xchg
inc
test
movsb
mov
dec
decl
fstl
pushf
dec
cmp
or
repnz
xchg
ret
aas
adc
fcomp
call
push
adc
mov
mov
sbb
std
mov
iret
sub
incl
cmp
xorl
add
add
test
cltd
adc
decl
inc
fisttpl
cli
mov
mov
xchg
rclb
mov
inc
clc
shrl
pop
es
mov
cs
adc
pop
js
cmc
mov
sahf
int3
out
inc
aas
add
mov
and
stos
dec
insl
cmp
out
mov
adcb
pmaxsw
out
jbe
lret
and
mov
in
arpl
sbb
mov
cld
push
loope
xlat
or
pop
aad
inc
jbe
or
cmp
ficompl
jne
pushl
repnz
fdivl
cwtl
pop
test
xchg
mov
push
rorb
popl
cmp
hlt
mov
inc
mov
leave
dec
fs
icebp
call
insl
jo
sti
push
ja
mov
lods
lds
rdtsc
repz
sbb
xchg
xor
pushf
shll
jle
repnz
or
int
xchg
pusha
mov
add
sar
pop
mov
sub
push
xchg
sbb
mov
pop
ja
mov
xchg
in
add
cltd
jb
pop
movsl
ret
jb
or
push
jmp
popa
sbb
push
fisubrs
out
jp
lock
das
fs
sti
push
sub
cmp
inc
jmp
jmp
xor
mov
call
rol
ret
mov
in
mov
cs
out
and
call
lahf
push
jns
sub
fistpll
inc
sti
and
inc
sub
pushf
packssdw
aad
pushl
xchg
js
into
xorb
test
mov
adc
mov
dec
xlat
mov
decl
jb
push
leave
imul
aaa
fildll
jl
xor
nop
pop
mov
and
jbe
movsl
sub
dec
mov
mov
sbb
xchg
rolb
ljmp
ret
je
xor
out
add
sub
or
outsl
clc
call
mov
adc
les
out
push
xchg
xor
dec
adc
imul
enter
push
adc
popf
lods
insb
xor
cmpsb
cmpsb
xor
jge
movsb
cld
insl
ljmp
xchg
rcrb
fldenv
mov
inc
out
fisttps
imul
pop
adcb
push
jg
mov
cmp
push
xchg
sahf
sub
ss
outsb
adc
jbe
pusha
lcall
pop
out
xchg
dec
incl
jb
inc
mov
in
jg
gs
mov
popf
mul
jecxz
in
xor
jg
orb
leave
ljmp
sar
inc
pusha
inc
jle
jnp
cmpsb
lret
push
or
test
xchg
jecxz
mov
std
repz
ret
iret
mov
lcall
ror
gs
fdecstp
or
and
push
xchg
mov
iret
in
out
gs
or
out
andb
mov
jno
stos
incl
inc
stos
cmp
xor
frstor
add
std
stos
xchg
in
xchg
pop
cmp
push
lret
call
xor
sbb
cmp
jo
push
into
or
loopne
cmp
sbb
cmp
cmp
jmp
lds
mov
xor
push
dec
ret
scas
cmp
ja
fmull
in
push
adc
add
outsl
pop
cltd
push
mov
mov
pop
test
pusha
push
aas
icebp
lret
cmp
lcall
lcall
jecxz
adc
pop
inc
int3
loope
fs
out
or
ljmp
sub
test
jae
lock
fildll
cmp
mov
aas
int3
jmp
or
lret
std
or
rol
sar
enter
dec
in
pop
lods
out
ljmp
clc
call
in
mov
adc
cmp
pop
insl
out
jnp
jo
sbb
in
sbb
ret
adc
push
jmp
into
xchg
mov
and
or
cmp
loopne
ja
loop,pn
fbstp
jns
mov
add
shl
rcrl
stos
lcall
inc
call
shlb
adc
dec
inc
inc
movsl
pusha
and
and
adc
jmp
cmpsl
movsl
lods
mov
incl
xlat
shlb
test
insb
ja
mov
jp
ss
mov
or
mov
jns
insl
dec
inc
jl
mov
push
movsb
loop
sbb
inc
mov
mov
lcall
sti
fnsave
push
aas
push
cmpsb
repnz
dec
cld
xchg
aad
pusha
int
pop
sub
lcall
imul
pop
xor
pop
sbb
ret
mov
jg
jnp
lret
outsb
mov
xchg
xchg
loop
repnz
and
in
push
push
cmpsb
cmp
pop
cmc
decl
add
pop
jp
jb
mov
int3
bound
jmp
mov
insb
stos
or
rolb
dec
nop
pop
cmp
pop
push
sbb
mov
bound
and
int
push
popf
in
hlt
inc
add
xchg
cmpb
or
sbb
xchg
fdivrl
stos
dec
push
pushf
or
jmp
iret
gs
push
xchg
out
inc
sub
ljmp
sahf
aaa
adc
adc
loopne
nop
mov
dec
xchg
idiv
push
movsb
clc
flds
mov
jge
in
xchg
xchg
call
insl
orb
pop
inc
nop
icebp
repz
mov
lds
std
xor
adc
or
test
incl
repnz
imul
lods
cli
sbb
fs
ret
data16
jmp
pop
dec
cwtl
test
call
shr
enter
xor
icebp
icebp
in
dec
imul
mov
lods
bound
in
adc
notl
pushf
mov
gs
adc
cmp
incb
push
or
xor
arpl
cmp
popf
mov
push
jbe
inc
arpl
add
xchg
xchg
push
cmp
rcll
xor
sbb
out
clc
add
int
inc
aam
loope
pop
stc
rolb
aas
push
cmp
call
jne
movsb
push
test
aam
and
xor
cmp
je
fsubp
pop
cmp
mov
add
jae
push
dec
test
jb
sbb
popa
mov
jmp
js
mov
fisubl
test
nop
fbstp
aam
push
push
push
sub
movsl
ljmp
lret
cs
xchg
jl
sbb
neg
popf
nop
mov
dec
add
lahf
and
das
jecxz
pushl
mov
cmp
jo
xor
mov
xchg
arpl
adc
inc
icebp
push
cwtl
push
add
dec
std
add
fldl
inc
sbb
fists
xorb
mov
mov
and
xor
shll
mov
or
lods
addr16
incl
xor
xlat
adc
mov
sub
cmp
repnz
call
push
jno
sbb
dec
loop
cmp
cmp
loopne
or
stos
fisubrs
stos
pop
mov
ljmp
loop
imul
outsl
cmp
test
cmc
fcomip
jg
sbb
cmp
jmp
fbld
fdivs
imul
filds
movsb
mov
inc
pop
in
pop
pop
xchg
daa
dec
es
repnz
or
cmpsl
mov
jmp
jle
sub
bound
xorl
inc
and
push
cmpl
jp
sub
ja
jae
hlt
or
ja
xchg
rol
pop
cmp
push
xchg
xor
push
push
sbb
dec
rep
inc
and
inc
xchg
sub
xchg
shlb
nop
pushl
lcall
aad
or
and
push
mov
sub
or
or
pop
push
inc
jmp
fnstcw
aam
sahf
xchg
incl
pop
mov
add
rclb
jecxz
sbb
jle
mov
lahf
mov
xorl
fs
pop
pop
in
pop
xor
pop
test
fdivrs
decl
jg
rclb
add
sub
push
dec
ds
sbb
popa
sbb
jmp
fst
arpl
push
fnstenv
sub
insl
and
or
or
cmp
or
mov
enter
aas
push
mov
add
ficoml
pop
mov
add
and
jnp
jecxz
lcall
lahf
add
mov
lods
inc
sarb
rol
ret
mov
out
sbb
xchg
aas
xchg
xorb
rclb
ljmp
push
jbe
xchg
sbb
pop
jmp
and
cmpsb
leave
pop
mov
mov
sbb
pop
icebp
incl
adc
nop
mov
jae
xchg
push
xchg
push
mov
dec
loopne
in
xlat
insb
out
cmp
add
push
push
loope
cmpsl
test
lret
xchg
rorb
and
decl
mov
mov
cs
outsl
and
js
or
subb
lcall
js
repnz
push
adc
sarl
cs
popl
and
imul
pushl
inc
or
mov
jl
outsb
push
sbb
sub
inc
ja
out
fistps
fnstcw
lcall
ds
inc
adc
loopne
or
std
push
sti
xor
lds
in
aas
pop
jno
ja
pushl
add
repnz
daa
aas
enter
sbb
mov
loope
ds
out
les
adcl
out
inc
aam
or
jp
loope
stos
aas
shrb
aam
adc
adc
mov
pusha
leave
ss
jmp
insb
jno
push
sbb
mov
or
out
xor
dec
or
enter
or
sarl
lds
data16
xor
push
pop
dec
mov
mov
addr16
push
xor
ds
ficoml
out
lcall
mov
mov
jp
add
lret
cmp
jo
mov
push
mov
pop
xor
add
popf
imul
sub
movsb
out
adc
pop
lret
and
incl
pop
ret
mov
test
pop
pop
insb
aad
movsb
test
incl
ficomps
movsb
cwtl
in
clc
sbb
dec
shll
bound
adc
push
or
incl
popf
xchg
or
xchg
push
xlat
lds
adc
inc
or
inc
mov
and
je
sub
dec
pop
mov
imul
je
test
adc
dec
stos
mov
xchg
add
pushl
push
pop
dec
add
inc
decl
sbb
aaa
mov
repnz
or
or
jb
shr
mov
popf
jge
push
fstps
loope
cltd
inc
ficoms
mov
add
rcr
gs
lcall
outsl
xor
outsl
outsb
mov
cli
jle
lods
stc
fidivs
sbb
loop
lock
ljmp
int3
mov
push
jae
dec
out
fdivrp
stos
js
push
lea
in
cltd
xchg
pop
in
push
and
jns
in
push
jb
stos
adc
fucomip
dec
pop
nop
popa
add
push
push
cwtl
push
dec
or
push
jp
cld
movsb
pop
das
adc
sub
add
or
dec
inc
mov
outsl
xchg
decb
out
pop
inc
sub
cmp
mov
sarl
and
mov
loope
loopne
fimull
xor
inc
scas
push
out
mov
lret
add
or
dec
sti
mov
cmp
sbb
arpl
clc
inc
arpl
mov
mov
inc
jne
jnp
jae
ljmp
inc
ja
mov
rcll
xchg
pushf
inc
in
aas
pop
sbb
cmp
das
mov
jg
push
mov
je
push
add
jbe
mov
flds
mov
and
add
out
icebp
ja
pushl
dec
popa
xor
ret
mov
inc
mov
ljmp
add
lahf
insb
dec
pop
or
adc
dec
mov
adc
pushf
cwtl
or
decl
sbb
or
icebp
aam
or
lods
jp
daa
jge
sarb
psubusw
push
clc
lds
add
jae
mov
dec
aam
xor
pop
mov
sub
or
cmc
ljmp
jmp
jp
xor
leave
ljmp
out
lret
lcall
or
sub
mov
icebp
xlat
jns
and
fwait
sbb
into
cld
int
jg
jmp
ret
addr16
mov
push
in
std
outsl
push
lcall
fldl
outsb
sub
mov
gs
cmc
lea
or
scas
enter
incl
xlat
add
outsl
dec
rcrl
icebp
sub
cmp
add
mov
and
adc
aad
aad
mov
orl
outsl
mov
lret
jg
les
nop
lds
ljmp
inc
mov
ds
ret
xchg
aaa
sub
pushl
test
loope
mov
sti
push
sub
das
cmp
hlt
sarb
lock
push
xor
lock
mov
adc
mov
imul
sub
cltd
nop
lfs
adc
mov
lcall
outsb
adc
imul
dec
or
push
outsl
cmp
mov
lcall
push
outsl
and
xor
and
dec
popf
lahf
cs
push
xor
mov
pop
sub
incl
cmp
add
jne
xchg
jns
xchg
je
xchg
imul
sar
cmp
shr
stc
sahf
movsl
loope
hlt
iret
ljmp
xchg
std
adc
push
xchg
jmp
adc
out
jb
push
int
pop
addr16
mov
xorl
icebp
mov
ds
add
ss
jle
sti
cmpsb
xchg
mov
pushl
dec
cwtl
xchg
sub
sub
add
sub
mov
xchg
or
out
jmp
sbb
into
in
push
out
lret
sbb
push
int
sbb
aaa
addr16
pusha
test
mov
sti
outsl
pop
loop
and
popf
mov
negl
xchg
leave
jg
hlt
lcall
mov
cmpsb
add
fmuls
fs
pop
inc
out
addr16
into
jns
aas
mov
lcall
popf
ret
pop
fmul
jb
cmp
mov
bound
ss
cmp
inc
push
popa
mov
jmp
int
loopne
subb
test
lcall
cli
pushl
shl
movsl
enter
mov
fldl
sub
xchg
pop
jnp
test
jmp
mov
jmp
fists
add
xchg
sbb
fdivl
and
jne
push
inc
ljmp
mov
or
xchg
pusha
bound
mov
inc
mov
or
cmp
test
cmp
test
in
dec
sbb
mov
decl
push
cmp
stos
stos
and
xchg
and
sub
mov
xorl
pop
in
or
lcall
aad
dec
int3
xchg
es
mov
mov
dec
dec
stos
dec
loopne
je
into
addb
outsl
push
fcomip
and
mov
sub
xchg
xor
pop
cmp
xchg
or
lcall
mov
out
dec
and
int3
xchg
jecxz
aam
xor
repnz
hlt
mov
sub
fsubs
pushl
mov
movsb
adc
loop
xor
add
xor
add
jns
subb
ljmp
out
add
pop
daa
fimull
mov
ret
sbb
ret
fiaddl
inc
pop
xlat
decl
xor
sahf
mov
sbb
dec
add
iret
test
pop
jo
lcall
inc
mov
fwait
mov
test
dec
mov
mov
movsl
insb
xor
adc
sti
push
cmpsb
sub
pushl
movsl
subb
adc
dec
adc
lahf
mov
sbb
in
stos
in
sub
dec
lods
mov
pop
mov
push
ja
clc
jne
or
popf
nop
lock
xor
mov
cwtl
mov
divl
cmp
xor
jl
mov
sbb
fnsave
fwait
dec
jl
pop
hlt
mov
inc
fstl
scas
mov
cmpsb
mov
sub
add
ror
jle
lcall
lret
cmp
mov
inc
insb
jbe
sbb
loop
ret
shrl
xor
and
xchg
cltd
ljmp
jl
iret
mov
push
xor
and
or
inc
pushl
mov
sub
pusha
xor
jb
dec
jnp
push
push
push
jl
bound
ljmp
xchg
jl
cmpl
or
lret
xchg
rclb
loope
cmp
and
ret
rolb
and
xor
shll
xchg
lcall
daa
ret
movsb
xchg
add
mov
pop
xchg
in
xor
test
pop
lock
inc
mov
pop
test
xor
fs
mov
sahf
nop
pop
sbb
jg
xor
fwait
jl
xlat
jo
sub
jns
jle
inc
lock
jmp
cmc
lock
lret
or
push
lods
add
cmpsb
inc
sub
jbe
push
lcall
clc
jns
out
sub
mov
cmp
pop
cmp
dec
repnz
mov
scas
aas
mov
scas
stos
jmp
sbb
outsl
adc
add
cld
call
jg
hlt
pop
test
xor
stc
scas
or
testl
cwtl
imul
pop
cld
push
push
cmp
call
mov
ja
mov
add
jo
mov
mov
arpl
inc
jp
call
mov
mov
xchg
js
incl
pop
cwtl
dec
pop
jg
xlat
mov
push
xchg
mov
xchg
xorb
and
test
and
xchg
fsubrs
sbb
or
insb
pop
push
movsb
dec
call
call
repnz
rol
jnp
outsl
dec
loopne
pusha
mov
sub
test
dec
dec
jnp
clc
in
decl
mov
mov
out
dec
pop
fmull
pop
je
xor
pusha
sbb
cmp
sbb
mov
inc
or
adcl
pushf
xchg
stos
lret
bound
adc
mov
inc
rsm
cwtl
and
jns
mov
out
xchg
fbld
incl
push
sbb
sbb
lcall
pop
sub
adc
sub
dec
das
outsl
mov
mov
jnp
sar
pushl
inc
sub
jle
loop
fimuls
sbb
fildll
sbb
jbe
pop
push
scas
push
test
jl
push
ljmp
das
stos
inc
inc
cwtl
add
ss
sbb
testb
jmp
ret
fs
pop
pop
mov
cmp
lcall
fstpl
jae
push
adc
add
push
mov
out
and
leave
clc
call
daa
inc
cmp
int
cmp
lret
xchg
imul
out
aad
push
mov
add
mov
cld
mov
mov
mov
push
cli
nop
hlt
mov
ja
iret
push
pushl
or
stos
pop
test
xor
or
ficoms
cmp
mov
es
incl
fdivrl
outsb
les
cmc
cli
pop
arpl
add
lcall
std
hlt
es
cmp
or
xchg
dec
and
mov
popf
dec
mov
pusha
cli
push
sti
mov
das
sar
xor
sbb
push
pusha
scas
pop
lret
popa
cs
inc
mov
incl
and
cmp
jo
int
jl
push
mov
mov
jmp
sub
push
xlat
adc
stc
aam
dec
cld
cmpsb
and
frstor
inc
cli
data16
in
sbb
mov
and
cltd
mov
lcall
sar
pop
loopne
dec
mov
fdivrs
fists
mov
adc
shl
mov
push
xchg
mov
mov
aaa
cld
push
pusha
add
sti
pop
inc
mov
mov
xchg
cmp
pop
jp
pop
call
jno
imul
dec
adc
mov
std
sbb
pushl
fimull
and
cmc
lahf
dec
cmpl
test
lds
in
and
pop
andb
lahf
negb
fstpt
stos
shrl
fdivr
jmp
lods
call
popl
mov
ja
cmp
xor
sub
out
pop
push
loope
mov
add
or
lea
mov
ljmp
jno
fnstcw
pop
add
dec
push
inc
fs
sub
push
out
jnp
xlat
arpl
sub
lcall
daa
cld
lds
mov
icebp
fadds
ror
cld
lret
or
mov
and
scas
mov
or
in
jge
jg
fucomip
sub
out
stos
outsl
outsb
jl
mov
ret
mov
ss
call
cld
and
xchg
stos
mov
mov
pushf
mov
xchg
inc
ret
pop
xchg
pop
lcall
push
ja
push
outsl
sbb
jns
push
xchg
lea
popa
pop
push
sbb
jmp
push
mov
adcl
cmp
mov
ret
arpl
fwait
xchg
cmp
sbb
call
cwtl
add
mov
adc
cwtl
mov
dec
mov
mov
adc
rcl
fdivrp
lcall
adc
out
dec
sbbb
pop
cld
out
mov
in
pop
push
out
pushl
jnp
movsl
ret
xor
push
push
in
adc
sbb
rcrl
pextrw
adc
jl
fdivr
jg
cmp
ds
jno
ja
mov
mov
in
mov
cmp
and
adc
js
jmp
xchg
sub
fisubrl
mov
sahf
jae
sub
rcll
mov
jmp
mov
inc
push
adc
add
ljmp
dec
mov
adc
mov
mov
and
lret
fcomps
pop
push
jnp
cmp
arpl
insw
aaa
fwait
adc
push
addl
xor
ljmp
insl
sbb
out
push
dec
mov
imul
jg
sub
in
ljmp
in
jns
jl
push
stc
xor
enter
sti
sar
pushl
cwtl
inc
fs
xchg
ret
fsubr
std
mov
out
pop
cmc
jle
push
mov
jg
jg
jg
sbb
out
xor
sahf
push
xchg
cmp
insb
mov
test
lret
sbbl
adc
clc
test
or
mov
cmp
popf
pushw
mov
loope
sbb
insl
pusha
stos
and
add
mov
pop
call
mov
sub
mov
test
jge
sub
call
adc
cld
ja
push
fcoms
js
imul
ss
push
int
push
xchg
pop
aam
daa
inc
fsubl
out
or
sub
or
clc
inc
popf
xor
jmp
pop
sub
push
sbbl
lret
aam
shll
hlt
filds
jmp
inc
pop
iret
mov
es
mov
jmp
push
sbb
fidivrl
jno
or
push
pushf
imul
xor
push
fstpl
mov
inc
cmp
out
cli
add
jg
xchg
hlt
adc
jae
fnstsw
dec
bound
ret
ljmp
mov
mov
movsb
rorb
xor
pop
jg
repz
push
or
lock
mov
pop
mov
jo
dec
and
enter
jae
dec
mov
cmp
xor
fsubrl
divps
inc
lods
inc
push
fildll
inc
js
or
iret
jne
test
pop
ljmp
fs
sub
rcr
jecxz
jb
push
xor
cmpb
adc
out
fstps
dec
hlt
cli
leave
inc
mov
mov
or
in
push
sbb
push
sarb
jns
xchg
ljmp
idivl
dec
xor
dec
pop
fcompl
lock
jg
mov
imul
inc
in
mov
test
decl
fdivrl
repz
pop
and
mov
test
enter
bound
call
adc
ss
add
or
ljmp
add
lcall
pop
jl
dec
loopne
sbb
sbb
out
or
jg
sub
ljmp
mov
stos
jns
sub
cwtl
rorl
push
push
add
aam
cld
ljmp
jo
out
call
aas
push
adc
insb
repnz
mov
lods
xchg
jg
dec
sub
lcall
ljmp
call
test
stc
pop
pop
shll
jmp
lods
test
adc
dec
iret
inc
call
pop
ds
mov
and
mov
jl
jae
insl
xchg
push
mov
lcall
xchg
cmp
data16
or
rclb
lret
movsb
js
nop
stc
dec
xor
xchg
jae
out
sbb
pushl
add
or
mov
icebp
dec
rcll
dec
in
cs
cmpsb
aam
sub
jmp
sahf
hlt
in
es
pop
jecxz
sahf
mov
mov
mov
incl
addr16
xor
call
pushf
into
lret
push
pop
jns
repnz
jbe
fwait
repnz
fildll
jg
dec
popf
loop
add
jo
ret
inc
addl
xchg
or
pop
shl
das
adc
repz
sbb
sbb
push
fbstp
bound
and
and
clc
xor
ljmp
clc
incl
call
xchg
imul
xor
daa
arpl
movsl
stc
rorl
push
dec
fimuls
xor
dec
adc
ret
out
jge
add
outsl
decb
or
movsb
cmp
and
daa
push
mov
test
add
pop
mov
nop
adc
hlt
and
lret
or
sarl
js
dec
rcrb
jle
jecxz
push
bound
jns
xor
pop
add
out
jbe,pt
add
out
fbld
mov
cs
xchg
repnz
jmp
jb
les
insb
or
mov
push
jmp
or
rorl
or
fcomps
adc
jg,pn
jg
rol
and
fwait
out
fs
cltd
pop
add
addr16
cmp
xchg
in
xor
jl
mov
ljmp
icebp
adc
or
jo
fists
std
cmpsb
cmp
inc
call
cli
inc
mov
or
into
enter
pop
in
jbe
popa
lahf
ljmp
pop
lahf
jle
int3
jmp
push
orb
jge
lds
mov
pushl
and
and
cmpsb
cmc
mov
push
ret
lret
test
popa
cmpsl
mov
popf
or
lock
test
lock
mov
pushf
pop
fs
xchg
mov
push
mov
call
lods
mov
loope
push
aam
testl
aam
stc
push
pop
incl
push
orl
sbb
and
cs
pop
loopne
lcall
fldcw
pop
xor
adc
cs
adc
lds
pushl
loopne
mov
sti
inc
add
dec
out
sbb
in
and
dec
divl
jbe
dec
jnp
jno
imul
mov
ret
outsb
inc
insb
mov
adc
incl
pop
bound
xor
sarl
cwtl
jnp
leave
ja
fcoms
or
or
sub
or
lret
out
adc
ljmp
jl
lock
jle
add
add
jno
push
add
in
std
mov
ljmp
mov
or
pop
ss
std
jo
addr16
negl
in
xor
rcl
stos
test
lcall
push
or
cwtl
sahf
pop
arpl
ss
mov
sbb
push
dec
mov
push
mov
fwait
and
sub
pop
or
not
sti
decl
ljmp
incl
jno
fldt
sbb
sub
loope
imul
mov
mov
out
movsb
lea
sub
jo
loope
sbb
sub
fdivrl
mov
sub
jle
cmp
mov
popa
movsb
iret
jo
sub
movsb
sub
sub
aaa
cmp
push
es
incl
test
fmull
mov
mov
mov
inc
dec
cltd
js
mov
or
inc
subb
ret
cmp
sbb
adc
imul
dec
dec
add
mov
scas
jmp
xchg
dec
pushfw
mov
xor
sub
mov
jne
outsb
cmp
inc
jecxz
sbb
lahf
inc
in
add
cmp
es
jne
ljmp
jbe
popa
jp
in
dec
xor
dec
mov
sbb
jle
mov
mov
mov
cmc
fucomp
sbb
dec
and
aad
xor
jnp
mov
decl
cld
nop
or
xchg
xchg
mov
mov
jns
stc
je
mov
out
dec
movsl
xchg
and
mov
out
inc
fistps
jecxz
dec
aaa
sub
sub
rcll
adc
int3
inc
outsl
out
inc
lods
pop
or
or
push
fwait
adc
dec
adc
cli
mov
incl
scas
andl
data16
adc
adc
lods
pop
fbstp
loopne
inc
icebp
mov
lcall
or
repnz
movsl
xchg
or
jbe
aad
bound
mov
ds
sub
decl
bound
jae
sub
xor
pop
nop
lret
out
cltd
mov
mov
mov
andl
pop
pop
add
stos
dec
mov
or
addr16
sub
fdivr
push
and
popa
fists
sahf
lret
insb
dec
ret
pop
shl
faddp
xchg
add
out
mov
sbb
and
sub
pop
lds
pop
add
sar
sub
xchg
aad
cmpsb
nop
inc
xchg
pop
jle
fidivs
mov
mov
jecxz
lret
lds
pop
add
outsl
fsubrs
ds
out
sub
push
jmp
pop
xor
std
ds
lds
call
fst
adc
rcrl
dec
adc
fldenv
sahf
push
push
or
jnp
ljmp
dec
incb
mov
pop
enter
mov
lods
insl
jns
ficoms
jns
pop
sub
and
jmp
or
loopne
push
or
fisttpll
push
xchg
sbb
xor
test
dec
adc
dec
or
fstpl
xchg
cmp
test
addr16
fisttpll
cmp
or
call
mov
inc
wrmsr
cli
xorb
lea
rclb
mov
shlb
movsl
push
ds
incl
jno
hlt
cmpb
dec
mov
jp
sahf
adc
or
pop
pop
push
repz
cwtl
or
inc
and
pushf
fcomip
decl
and
enter
gs
stc
mov
xor
adc
jmp
loope
pop
les
movsl
xchg
in
lcall
lahf
in
pop
lds
in
hlt
pop
mov
clc
mov
lock
cwtl
inc
out
jb
sbb
sub
sbb
adc
inc
shrl
fmuls
adc
pop
std
adc
sub
dec
into
xchg
lock
icebp
in
lahf
test
adc
and
js
arpl
push
adc
xor
mov
negb
aaa
add
incl
leave
sub
js
call
cmpsb
jle
sbb
xchg
xor
shlb
arpl
inc
iret
pusha
mov
add
push
add
lret
repz
jp
ljmp
lcall
shrb
in
cmp
jle
push
pop
lea
rcrl
rcrl
cmpsb
lods
sbb
sbb
fs
mov
sbb
incl
call
inc
fistpl
sub
cmp
fimuls
incl
or
imul
jns
jne
or
imul
mov
das
clc
jmp
outsb
and
sbb
sub
mov
mov
jnp
dec
insl
lcall
cmp
pop
mov
push
je
cmp
test
jmp
inc
xor
sti
jne
lret
mov
mov
pop
lods
mov
inc
jg
cmp
mov
icebp
and
int3
iret
movsl
xchg
inc
cmpsl
xchg
bound
push
fisubrs
xor
add
sbb
sbb
xor
jbe
mov
int3
mov
hlt
into
push
dec
in
sub
es
inc
xchg
pop
cs
repnz
shrd
jbe
adc
incl
mov
dec
pop
mov
imul
cmp
lret
push
outsb
subl
call
xor
add
shll
mov
iret
sbb
xlat
loop
add
xor
aaa
cmp
pushl
xchg
mov
daa
xchg
in
es
mov
ja
or
mov
mov
pop
inc
int3
dec
outsb
cmp
testb
pop
pop
push
mov
out
mov
inc
nop
fcomip
popf
fmuls
hlt
dec
mov
loop
dec
mov
pop
loopne
xlat
movl
add
gs
movsl
ss
push
xchg
cmp
sarb
xor
lcall
cs
into
test
xchg
imul
xor
adc
imul
or
int
and
or
fists
mov
jl
std
jno
decl
sbb
sbb
jns
mov
sub
mov
xchg
dec
jmp
outsl
outsl
ret
pop
aam
in
mov
push
scas
fdivrl
or
imull
lcall
pop
mov
incl
jns
sub
test
xchg
xchg
test
pop
mov
mov
int3
mull
pushl
inc
dec
roll
flds
cmp
jno
inc
dec
xchg
mov
add
add
incl
lcall
loopne
sub
lahf
adc
pop
ror
mov
dec
int
mov
or
sbb
mov
fisubs
jns
call
and
add
cmp
bound
dec
shrl
xchg
xor
data16
cmc
loope
jmp
std
outsl
leave
pop
fwait
rol
push
sti
aad
int
addb
in
jp,pt
into
ja
xchg
mov
or
test
in
push
push
fsubs
jecxz
cmp
ljmp
lcall
mov
test
jb
push
idiv
mov
outsb
sbb
out
aad
std
pop
cmc
stos
insl
imul
sti
fs
sub
or
sahf
push
push
sar
ljmp
mov
aaa
testl
scas
loop
push
subl
in
addr16
gs
fcomip
xchg
pop
cmp
mov
cs
rcll
cmpsb
icebp
xor
pushl
sub
mov
cmpsl
push
rclb
data16
mov
es
icebp
jnp
sub
ljmp
popf
in
out
in
fnstsw
mov
cmp
sahf
cmp
ljmp
hlt
sub
subb
pop
mov
mov
ljmp
push
neg
into
sbb
xchg
sbb
add
repnz
and
lahf
mov
push
out
shr
fcoms
in
mov
cmpsl
pushf
push
jae
hlt
loope
push
into
fs
cmp
inc
es
je
push
pusha
push
nop
clc
xor
ret
dec
xchg
dec
sub
jmp
test
bnd
xor
jno
aaa
mov
cmpsb
xchg
mov
pop
lock
and
inc
or
mov
hlt
pop
scas
or
lea
lock
fsubrp
push
rorb
pushl
lcall
xor
push
cmp
or
xor
cmp
cwtl
xchg
mov
sub
jns
lfs
imul
push
inc
or
fisttps
ja
push
mov
pop
adc
out
mov
dec
mov
inc
mov
mov
fidivrs
incl
ljmp
loope
inc
sub
push
fldcw
jg
mov
adc
inc
xchg
fadd
push
lret
rcl
mov
call
mov
inc
mov
dec
enter
sti
xchg
fadds
lcall
add
sbb
adc
dec
sub
sub
mov
cmp
pushf
es
arpl
call
adc
mov
dec
xor
ljmp
jne
sbb
sbb
ret
mov
mov
fcomi
jae
sbb
cltd
shrb
div
mov
decl
pop
orb
xor
aaa
xchg
or
sub
sub
add
lods
hlt
cmp
xlat
daa
ljmp
mov
aam
fiaddl
xor
and
lcall
push
in
test
jl
xchg
das
jnp
out
shll
dec
adc
mov
jnp
mov
add
notb
test
test
lock
fidivrs
fnstcw
out
cld
outsb
sti
xchg
dec
add
inc
xor
or
out
xor
xchg
mov
cmpsb
sbb
or
cltd
sub
sti
ljmp
fcomps
sbb
mov
movsb
sahf
insl
push
dec
in
jmp
jo
pop
notb
pushf
jns
fcompl
xchg
add
aad
mov
sub
gs
cld
call
addr16
pusha
pop
bound
dec
pop
aas
mov
aad
mov
popf
push
mov
call
cmp
bound
idivb
adc
outsl
mov
jge
xor
mov
mov
dec
scas
mov
push
and
push
xor
sti
mov
mov
negb
jno
outsb
mov
or
cmp
lea
mov
sahf
gs
loope
popa
iret
xlat
jmp
lods
mov
dec
data16
pushl
mov
mov
xlat
or
or
xor
int
call
jge
adc
stos
jae
repnz
push
adc
mov
xchg
cmp
movsl
fcomip
call
cmp
pop
rcrl
pop
adc
inc
jbe
and
push
mov
mov
aaa
std
decl
sub
lds
lods
jecxz
es
xor
cwtl
cmc
daa
xchg
ljmpw
incl
test
and
or
cmp
cmc
outsb
gs
imul
arpl
jl
popa
sbb
and
mov
cld
aam
in
add
rcrl
mul
cmpsl
int3
fbstp
add
lea
addr16
insb
mov
inc
mov
mov
pop
sub
lahf
lcall
lds
ljmp
cmp
mov
dec
lahf
xor
fdivp
sub
cld
sahf
xor
mov
pushl
sub
add
adc
sbb
inc
cmc
imul
xchg
cmp
gs
add
pushl
sahf
decb
cltd
mov
int
int
add
loopne
cmp
test
ds
pop
outsl
mov
mov
leave
test
xor
mov
pop
stos
scas
adc
inc
bound
mull
shlb
pop
mov
inc
pop
lock
mov
inc
push
jae
fcmovbe
add
push
cli
dec
mov
in
push
push
lcall
clc
or
pop
mov
ljmp
incl
popa
push
mov
or
sbb
xchg
pop
dec
sub
sub
mov
or
std
fwait
incb
xchg
imul
and
dec
ret
mov
jmp
pop
push
imul
repz
pop
js
sub
cmp
mov
es
and
push
imul
lcall
ret
fcmovne
sar
pusha
das
sub
xlat
and
mov
cmpsb
dec
outsl
fdivs
adc
mov
cmpsb
inc
add
jmp
or
or
jge
jns
mov
test
or
xchg
clc
movsb
gs
lret
decl
or
xchg
js
fisubl
icebp
mov
push
into
jmp
push
or
pop
movsl
mov
xchg
jg
jbe
mov
cmc
imul
push
xor
ljmp
xchg
fxch
sahf
scas
aam
adc
pop
xlat
xchg
push
xlat
pop
inc
in
dec
sbb
insl
cmpsl
pop
sbb
popa
call
xchg
jno
mov
push
xor
aad
pop
cmp
sub
or
jmp
out
arpl
dec
jbe
fs
outsb
outsl
jmp
mov
add
mov
xchg
dec
shlb
lock
icebp
jnp
mov
cmpsb
sub
es
pushf
sarb
xchg
cmovle
cld
sbb
loope
lds
sbb
outsb
sahf
fwait
mov
cwtl
pushf
adc
sub
data16
inc
sti
aas
mov
xchg
mov
jne
inc
cli
add
iret
pop
jl
mov
std
jg
lds
ljmp
add
sbb
cmp
stos
add
xor
daa
adc
mov
cmp
ljmp
push
out
sarb
push
add
movsl
sub
push
mov
or
stos
or
decl
negl
in
jne
mov
loopne
push
mov
jo
vmovdqu
pushl
enter
inc
xchg
sub
popf
and
add
ljmp
inc
scas
or
inc
mov
jle
sbb
fs
pushl
sub
mov
sub
mov
mov
rcrb
bound
incl
lods
xor
inc
fdivl
mov
outsb
pop
cmp
adc
mov
ss
jmp
imul
ret
popf
jno
stc
dec
shlb
stc
or
rep
ljmp
xorl
dec
xor
rcrl
pop
sub
sbb
jns
popa
cwtl
enter
add
mov
loopne
jge
jns
xchg
pop
loop
xchg
loopne
cs
pop
mov
pop
mov
ss
ss
push
or
lcall
cmp
xchg
iret
jb
push
scas
data16
xchg
mov
mov
decl
imulb
addb
cmp
lods
sub
clc
enter
xchg
fdivrp
decl
inc
outsl
adc
and
mov
insb
inc
movsl
les
and
sahf
pop
and
push
inc
xchg
js
pop
outsb
loop
mov
mov
hlt
pop
adc
insb
sub
popa
dec
cmpsb
push
std
jmp
jle
mov
jg
stc
jnp
jae
pusha
lea
fcomip
decl
inc
mov
push
pop
pushf
jg
sbb
popf
rol
repnz
mov
pop
and
ljmp
sbb
insb
jo
inc
and
lods
dec
mov
add
pop
xor
inc
les
inc
test
jg
xchg
lcall
jle
fwait
adc
movsl
push
sub
xchg
xchg
insb
xlat
in
test
dec
je
inc
ljmp
lcall
xor
shll
loopne
adc
cs
movsl
fcoms
incl
stc
push
push
xorb
jae
mov
mov
test
pusha
repnz
dec
ss
inc
push
cmp
lock
andb
lret
xlat
push
testl
imul
push
jl
cwtl
aaa
pop
arpl
dec
inc
adc
lcall
movsb
into
ja
and
loopne
mov
xlat
xchg
mov
jns
push
hlt
add
jmp
push
repz
xchg
dec
fcom
xorl
sub
idivb
and
insl
rcrb
dec
dec
or
das
mov
je
aas
ja
mov
addr16
xor
outsb
incl
push
jl
mov
xor
pop
pop
sub
or
cmp
xor
movsl
mov
out
dec
and
sbb
sbb
adc
ss
decl
or
in
rcll
fst
repz
cmc
xchg
jl
mov
push
xchg
std
mov
clc
cmp
xlat
ljmp
sti
xchg
inc
jnp
mov
jmp
pop
mov
add
movsb
cmc
shlb
jmp
and
xchg
aad
outsl
cli
ljmp
lds
in
test
out
pop
pop
fdivrp
rcrb
loopne
mov
sub
lret
xchg
sub
or
and
push
outsb
fcomp
fcomip
and
xchg
jl
ffreep
into
cmp
push
ja
addb
movsb
out
dec
jmp
pushl
std
into
dec
test
jp
das
fwait
lahf
in
aam
and
cld
cmpsl
mov
pop
lcall
mov
in
adc
in
xor
jb
aam
mov
mov
sbb
adc
or
ret
shll
mov
fcoms
mov
cmpsb
jno
insl
cwtl
lcall
or
out
adc
fs
insb
sbb
popa
fs
pop
add
cmpsb
add
mov
jg
jmp
mov
or
and
fimuls
lds
push
mov
mov
xchg
stos
jb
repz
inc
xchg
out
out
or
daa
ljmp
iret
sub
int
iret
cli
imul
adc
jno
ss
adc
jno
shlb
js
testl
outsl
jge
inc
fldenv
fcmovbe
xchg
mov
and
cmp
mov
sar
pop
fcos
pushl
mov
sbb
sub
pop
lret
fcoml
mov
out
fwait
test
stos
lea
push
insb
add
lcall
push
iret
movsl
mov
fcmovnb
mov
jg
or
lods
loopnew
xchg
add
jbe
jmp
rcl
dec
sarl
lods
sub
cmpsb
shll
jns
out
add
pop
sar
cmp
popf
lahf
sar
das
and
cmpb
out
and
addr16
sub
scas
cmp
bnd
push
aad
incl
pop
popf
lret
enter
fmuls
sub
add
adc
xchg
push
xor
in
out
imul
jg
cmp
mov
call
and
in
xor
or
mov
jns
adc
jg
incl
add
adc
bound
inc
adc
daa
stos
mov
jecxz
loop
pushf
popa
call
sar
insb
push
push
scas
push
insb
testb
test
sbb
sahf
inc
inc
adc
dec
xchg
or
testl
push
dec
shl
xor
inc
push
jbe
xor
dec
dec
add
lods
dec
push
fildll
out
cmp
incl
mov
cmp
in
std
push
mov
jl
test
push
popf
sbb
jmp
popa
and
enter
sbb
cmc
mov
jmp
sub
or
loope
int
loope
js
decl
jmp
cwtl
jae
sub
or
pop
es
orl
sahf
out
mov
xchg
mov
xchg
xchg
mov
sub
push
and
ss
test
dec
aad
jg
idiv
sbb
adc
xorb
push
inc
cmpsl
and
test
jmp
repnz
pop
jb
mov
jg
lret
xor
and
adc
inc
ror
ficompl
fcomip
ss
inc
sbb
mov
push
stc
cmp
or
imul
mov
xor
cmc
add
xor
rcrb
js
mov
mov
idiv
ljmp
dec
xor
lods
icebp
adc
dec
cltd
sbb
popf
fidivrl
gs
xor
xor
cmp
mov
xor
sbb
xor
dec
cli
ret
mov
add
pop
jb
int3
mov
pop
inc
sti
addr16
and
jg
jns
mov
call
cmpsl
jp
cmp
cmp
fwait
pop
mov
or
mov
leave
test
push
insb
cltd
push
mov
mov
pop
push
push
fucom
pop
mov
pushl
sub
pop
inc
sub
push
loopne
mov
jae
mov
adc
inc
ss
mov
jg
sub
cli
xchg
cli
bound
push
ss
ja
cmp
inc
adc
xchg
in
insl
test
pushl
movl
add
mov
and
jge
push
mov
cld
call
clc
insl
ficoml
jmp
dec
mov
and
repnz
jmp
test
mov
pop
in
out
mov
cmp
push
pop
call
stc
idiv
pop
push
imul
in
dec
dec
dec
inc
sbb
nop
ret
ljmp
cs
lods
and
dec
xor
push
mov
pop
or
and
mov
push
and
push
or
pop
lods
mov
dec
lds
jne
mov
fimull
hlt
sub
pushl
inc
scas
add
aas
lret
test
xor
inc
js
subb
sub
and
fdiv
sbb
cmpsl
xlat
sub
fwait
test
jp
pop
cmp
mov
test
iret
ret
xorl
out
test
inc
inc
inc
es
sub
push
cmpsl
mov
imul
ret
in
fsincos
inc
add
jmp
cmp
call
pop
xor
xchg
js
or
inc
sarl
pushl
call
add
jmp
test
ss
gs
mov
cltd
mov
outsb
ret
js
push
mov
inc
std
fldenv
mov
cmc
je
out
xchg
pop
test
inc
sub
adcb
sub
popf
rcrl
and
cli
xchg
movsb
insl
dec
lcall
push
mov
pop
dec
mov
adc
sbb
aas
push
dec
lea
pop
inc
das
push
out
mov
ljmp
popa
cltd
inc
icebp
nop
loop
lock
imul
mov
daa
pop
sbbb
or
adc
sbb
jp
mov
adc
out
xchg
adc
dec
inc
dec
rorl
sar
sar
xchg
sub
jg
cs
fmull
jl
jno
jg
jno
xchg
sbb
cmp
mov
or
xchg
nop
inc
xor
aad
pop
xchg
ja
cwtl
inc
ud0
dec
push
push
ss
push
pop
mov
test
test
fsubl
lcall
pop
cli
inc
dec
int
call
shlb
inc
inc
ljmp
outsb
rcl
jp
inc
mov
jmp
mov
inc
stc
mov
test
je
and
jle
dec
xchg
cltd
or
addb
popf
pushf
jno
push
mov
andb
push
and
loope
mov
adc
test
push
int3
insl
je
and
push
adc
and
cld
insb
aam
push
adc
push
nop
cmc
inc
mov
xchg
or
mov
inc
mov
out
push
pushl
das
add
fsubrl
lds
sbb
fs
sbb
scas
idivb
cli
lcall
adc
inc
cltd
jg
inc
out
mov
sub
dec
fistl
std
mov
out
loopne
xor
ret
or
dec
shll
aaa
int
test
jg
stc
aam
gs
cld
iret
pusha
add
fbstp
cmp
cli
ljmp
mov
cmp
lods
js
mov
push
ljmp
pop
in
das
mov
lahf
movsl
stos
adc
hlt
mov
xchg
ljmp
das
in
pop
jmp
push
sbb
dec
mov
lock
cmp
push
ljmp
addr16
or
aas
jecxz
add
pop
mov
ret
mov
pop
cmc
mov
push
or
or
fisttpl
sbb
dec
cmp
cmpsl
cmp
mov
pushf
lods
or
das
mov
mov
inc
insl
mov
flds
pop
jge
pop
mov
divl
ret
xchg
mov
adc
addr16
jl
bound
sahf
dec
sub
lcall
rcll
jns
out
mov
pop
outsl
mov
lcall
and
mov
sub
xor
ret
jmp
je
pop
jmp
and
add
stos
leave
jp
or
stos
push
ljmp
inc
stos
shlb
cs
jmp
fwait
sub
xlat
in
hlt
cld
out
insl
bound
ja
push
jns
into
add
xchg
jmp
xchg
inc
decl
iret
gs
pusha
mov
cmp
jecxz
xchg
push
into
nop
push
fists
outsb
xor
push
push
sar
pop
cld
lcall
cmp
mov
sti
jge
sub
fidivrl
incl
cld
aad
mov
scas
in
add
mov
stos
pop
roll
jg
dec
inc
filds
inc
imul
out
mov
mov
mov
cs
lock
push
ss
pushf
fdivrl
repz
imul
mov
sbbb
fidivl
jmp
icebp
xorb
rorl
push
ljmp
sbb
mov
push
mov
out
or
js
dec
fsub
in
lcall
sub
push
sti
stos
or
outsl
and
aaa
cwtl
sbb
outsl
and
outsb
jb
add
jmp
push
jecxz
dec
mov
cmc
adc
sbb
pushl
or
out
popf
mov
frstor
and
arpl
js
mov
mov
lahf
add
sub
xchg
out
dec
inc
addb
jle
or
cli
jmp
imul
mov
insl
pop
add
push
sub
jle
mov
scas
xor
xlat
sbb
xchg
pop
cmpsb
imul
dec
cltd
aam
xchg
jge
mov
call
test
lea
pop
xor
adc
mov
adc
rol
aad
js
push
mov
mov
outsb
and
fists
movsb
xchg
lret
pop
incl
loop
nop
ds
cltd
mov
mov
pop
ja
scas
adc
jns
stc
mov
das
clc
jmp
nop
jo
in
jle
cwtl
xchg
enter
aas
push
int
xorb
mov
imul
pop
inc
mov
loop
sbb
lret
jae
mov
inc
sbb
pushf
ficompl
cmpsb
mov
sbb
inc
xchg
inc
inc
mov
or
mov
sti
and
fdivr
jmp
in
mov
test
jae
pusha
out
mov
shll
into
out
jb
ljmp
jle
loopne
movsb
jmp
and
jg
in
es
fs
xor
mov
decl
data16
cmp
cmp
aam
dec
leave
mov
cmp
mov
or
lods
repz
xchg
xchg
enter
push
xchg
cli
cmc
decl
mov
outsb
xorl
jae
xor
cs
jge
or
ss
mov
sarb
es
xor
sbb
jnp
fs
in
ud2
ret
lods
jae
rcr
add
pushf
arpl
sbb
das
outsb
mov
jge
es
and
and
xchg
incl
inc
cltd
call
insb
push
nop
and
rcl
rcrb
je
mov
fs
fiadds
adc
push
push
in
pop
cmp
fisubrl
mov
inc
nop
dec
xchg
je
xchg
jne
decl
mull
imul
sub
cmpsl
ja
mov
or
pop
jne
stos
dec
ljmp
cli
cmpsb
sbb
test
psubq
fnsetpm(287
xor
bound
stc
lods
pop
stos
and
loopne
jno
test
adc
mov
aaa
pop
xor
or
notl
lcall
pop
adc
pop
repnz
push
daa
cmp
iret
inc
cld
stos
xor
sbbl
out
dec
test
jg
out
shll
push
xor
cmp
mov
iret
clc
fisubrl
inc
cmp
dec
and
imull
jb
or
or
xor
mov
xchg
xchg
jae
out
mov
lcall
inc
dec
pop
xchg
and
lock
pop
mov
mov
mov
call
popa
imul
out
mov
push
jmp
lcall
pop
pop
push
movsb
daa
das
mov
mov
cmpl
mov
sub
cmp
mov
mov
pushl
dec
sbb
stos
or
bswap
mov
push
movsb
mov
push
push
std
scas
out
iret
adc
cmp
dec
addr16
and
call
decl
cmc
add
mov
cli
lds
rcrb
pop
dec
dec
inc
cmpsb
dec
xchg
and
push
inc
xchg
lea
lods
jmp
inc
xor
fadds
aam
loopne
xchg
loope
adc
repz
xlat
lret
daa
mov
clc
xchg
mov
push
stos
push
jl
push
add
xor
fsubs
ret
dec
dec
mov
out
push
movsb
xchg
ds
mov
inc
cmc
or
pushl
push
ret
or
and
stc
ds
rolb
movsb
cmp
or
incl
cmp
pushf
insl
pusha
gs
aas
mov
adcl
aas
popf
fimuls
inc
ret
xor
pushf
mov
scas
test
cmpsb
push
call
in
sub
jmp
es
aaa
pop
mov
outsb
xchg
movups
andb
js
xchg
insl
mov
lret
jg
jnp
and
and
fs
jb
and
xchg
out
ds
pop
adc
call
movsl
push
jl
xor
jecxz
push
jmp
xchg
addb
pop
mov
cmpsb
jo
inc
sar
call
outsl
iret
mov
jge
jnp
pop
sub
mov
clc
lcall
imul
pop
clc
lcall
andb
shlb
out
mov
incl
mov
sti
mov
push
mov
mov
sbb
push
adc
out
mov
clc
mov
dec
jp
sub
inc
lret
in
vpmaddwd
and
push
insb
cmp
push
sub
sub
pushl
loope
pop
fisubl
dec
dec
or
imull
adcl
or
ljmp
push
sbb
jb
mov
xchg
jge
mov
jno
jg
cmp
js
mov
aas
mov
ror
adc
push
and
sbb
dec
jg
stos
mov
enter
mov
cmp
xlat
rolb
pop
cmp
pop
sub
xor
repz
mov
cmp
lcall
cmpsl
aad
cli
xchg
cmpsb
mov
loope
jbe
mov
add
jl
inc
inc
ret
mov
mov
mov
addr16
bound
push
or
std
xchg
mov
pop
jg
mov
addl
add
fwait
divl
dec
sub
push
jmp
cmp
adc
dec
lcall
pop
jge
mov
pop
mov
cs
sarb
gs
ss
jg
pop
mov
std
mov
repz
sbb
push
dec
xor
push
pushl
adc
gs
cmp
enter
add
aaa
jmp
sub
loopne
jbe
or
loope
mov
inc
popf
arpl
cmp
xor
loop
mov
inc
dec
jns
scas
jmp
into
jg
decb
pop
mov
xchg
sbb
adc
out
xchg
pop
std
and
and
and
lods
fiadds
inc
stc
add
push
ljmp
popa
sub
add
push
pop
or
mov
inc
push
sbb
cmp
sbb
cmp
push
cmp
mov
jl
push
pushl
pop
add
mov
add
repnz
cmp
jle
mov
in
rcrl
mov
clc
adcl
mov
xchg
inc
push
in
addr16
jns
xor
dec
std
incl
and
push
dec
fsubrs
sub
inc
dec
add
inc
xchg
push
mov
add
mov
dec
cld
adc
fadds
pop
mov
push
nop
imul
andl
jns
inc
in
jo
roll
sbb
pop
or
call
mov
outsb
ret
inc
rolb
arpl
cmpsb
inc
push
loope
adc
movsl
xor
call
loop
dec
or
add
movsb
cwtl
mov
out
pop
xchg
aam
dec
repnz
inc
jo
stos
push
icebp
mov
ficoml
cmc
lahf
out
lcall
pushl
mov
push
mov
shrb
std
aad
cmc
dec
fistl
into
push
mov
push
inc
xor
inc
incl
popa
xlat
jne
outsl
xor
mov
shll
cmp
cmp
jno
loopne
addl
mov
aas
and
pushf
js
cmpsb
pop
cltd
mov
inc
xchg
jl
rcrl
jl
es
mov
push
mov
xchg
pop
mov
and
out
cli
call
adcl
pop
sub
out
fldcw
xor
std
lcall
loop
jno
add
lods
pop
push
fwait
cs
sub
jge
mov
pushw
xor
dec
push
mov
push
mov
lret
clc
pushl
sbb
cmc
lock
cmp
insb
fwait
jb
mov
nop
pop
call
addr16
incl
repz
out
repnz
push
xor
scas
andps
out
dec
jne
shll
ds
sar
mov
movsl
sti
mov
mov
push
in
add
sbb
mov
dec
inc
jl
leave
fbstp
sub
mov
pop
call
test
add
nop
sbb
cld
inc
xchg
jmp
ljmp
and
daa
cmc
decl
call
push
xor
push
out
adc
push
stc
lret
xor
mov
lret
ret
lcall
mov
or
lcall
or
enter
adc
call
or
loop
nop
movb
ret
xor
mov
dec
decl
leave
sub
add
out
dec
cmpl
setb
sub
fcmovu
jo
sub
call
jne
cmp
std
jl
inc
popf
jno
jp
add
mov
inc
dec
imul
std
cmp
fs
call
leave
ljmp
mov
lods
pop
lcall
rorl
loopne
jb
js
lods
data16
jg
test
jbe
push
aaa
xchg
shll
test
or
cmpsb
js
lcall
gs
popa
stos
lahf
cld
xorb
xchg
sbb
lcall
pop
mov
inc
lock
sub
pop
xchg
das
loopne
incl
add
rorl
xor
outsl
pop
hlt
xchg
dec
lods
or
dec
dec
sbb
xchg
ud0
push
mov
cwtl
push
out
lds
sarl
or
sbb
lods
ret
push
jl
mov
addr16
mov
stos
lcall
or
je
je
sub
dec
pushl
out
sub
ds
pusha
sbb
addr16
clc
add
lcall
call
loop
je
pushf
popf
push
mov
jno
jmp
test
jmp
add
xor
adc
xor
repnz
bound
dec
ljmp
cmp
jb
call
xor
jmp
push
mov
push
jl
imul
jnp
jmp
push
adc
and
outsl
in
xchg
addb
call
cld
cmp
pop
push
mov
lods
pop
and
cld
incl
lods
xor
ds
loopne
test
movsb
xchg
push
mov
inc
cli
xchg
dec
stos
inc
ljmp
std
je
push
mov
or
xlat
cltd
mov
mov
and
push
fcomps
inc
call
sbb
daa
jle
or
xor
mov
lds
mov
jmp
mov
sub
int
xor
sub
cmp
hlt
mov
cld
inc
cmp
lahf
push
inc
xlat
in
push
xchg
in
je
add
push
add
dec
push
xor
xchg
push
jg
cmp
addr16
decl
cmp
xor
cmpsl
and
ret
sub
adc
jmp
and
mov
and
out
rcll
out
movsl
pop
pop
pop
test
aas
mov
call
cmc
mov
inc
push
adcl
lods
lret
ja
ljmp
outsl
clc
sahf
scas
in
inc
int3
inc
les
dec
std
out
push
or
mov
pop
dec
scas
sub
decl
xlat
sarl
sahf
inc
popf
fstl
cmp
lock
das
or
lret
mov
sub
jmp
inc
in
xchg
outsb
scas
ljmp
xchg
pusha
jle
mov
dec
dec
std
push
mov
loopne
mov
jl
push
test
lcall
push
fisttpll
scas
pusha
dec
ret
sbb
adc
ret
ret
push
mov
cmp
xor
xchg
lret
in
sbb
mov
mov
pop
mov
mov
pop
mov
decl
lock
or
pop
in
movsb
adc
xchg
insb
imul
daa
mov
ss
add
popa
sub
mov
jg
jmp
stc
rcrb
cmpsb
jb
add
lock
jg
mov
or
ljmp
fincstp
fidivrs
jns
jg
movsl
aad
mov
lock
pop
xor
ret
enter
inc
rclb
inc
dec
out
push
pop
or
andl
adc
add
ljmp
xchg
mov
fstpl
inc
daa
insb
test
in
xor
push
push
mov
andb
sub
cmp
xchg
cmp
shlb
inc
adc
sbb
adc
pop
or
jle
cltd
jns
mov
mov
fimuls
aaa
ret
xchg
out
sarb
inc
ds
sub
xor
lcall
mov
imul
mov
std
mov
fdivp
insl
xchg
xchg
xlat
cmp
ljmp
cmpsb
movsb
xor
xchg
xorl
je
adc
add
rcrl
stos
mov
into
in
xor
jbe
push
testb
aaa
cld
decl
hlt
xchg
fcomps
xchg
mov
cld
pop
into
out
sar
int3
in
mov
mov
add
aaa
push
and
add
loope
xchg
sbb
sbb
incl
cmp
insb
mov
call
cs
ficoms
dec
and
das
mov
lcall
iret
mov
lret
jl
xchg
movsl
jae
outsl
stos
inc
jle
aaa
push
andb
add
adc
shlb
jns
push
cmpsb
arpl
in
test
fcomps
repnz
call
popa
add
lret
cltd
adc
cmpsl
dec
add
cmp
ja
sub
decl
cs
push
stos
jg
cmp
fisttps
bound
add
decl
cld
lods
xchg
int3
cwtl
js
sub
cmpsl
pop
mov
mov
and
pushl
jge
sub
push
mov
ret
adc
out
jns
add
mov
pushl
inc
lods
xor
fdivr
divl
sbb
adc
push
pushf
ss
popf
add
pop
hlt
rolb
lcall
in
xor
xlat
or
push
inc
jge
push
inc
call
jmp
stc
push
insl
fwait
div
jecxz
stos
jbe
mov
pop
loopne
jecxz
sti
popa
sbb
dec
push
xlat
mov
mov
xchg
push
js
inc
sahf
stos
ss
aam
push
sub
dec
out
idivl
xchg
push
jecxz,pn
inc
push
or
je
sahf
or
loopne
adc
ljmp
rcl
xchg
pushl
stos
push
mov
fwait
mov
jo
jecxz
call
jb
xchg
mov
mov
jnp
fs
cmpsb
mov
jno
in
lods
jmp
push
jmp
aad
inc
sbb
call
insb
xor
jne
inc
outsl
inc
xchg
mov
dec
incl
je
lea
gs
insl
sbb
push
iret
aaa
jno
jae
incl
inc
mov
nop
sbb
and
push
test
cmp
add
cmp
adc
push
sbb
pusha
jns
add
aas
sahf
movsl
mov
outsl
loopne
xor
daa
cld
lahf
scas
mov
or
dec
cld
outsb
add
aas
mov
lea
and
inc
jmp
inc
icebp
outsb
mov
ljmp
adc
cmp
mov
cmc
push
cmp
jl
pop
jle
loope
jg
js
pushl
out
add
and
xchg
mov
dec
inc
ret
pushf
ret
mov
mov
jae
dec
add
lcall
iret
bound
jo
clc
inc
cltd
or
fwait
push
je
loopne
pop
add
jge
out
test
sub
pushf
movsl
push
and
mov
cli
adc
ret
clc
das
adc
and
leave
ret
ror
dec
mov
mov
dec
mov
xchg
adc
dec
or
xor
js
int
fnstenv
fstpl
jns
jb
lcall
push
arpl
lret
jne
add
mov
sub
pop
in
add
xlat
ljmp
push
dec
imul
dec
fsubrs
pushl
nop
cmp
mov
or
std
jmp
add
sar
mov
lcall
cmc
arpl
idivl
jo
mov
or
xor
mov
dec
loopne
ljmp
mov
pop
cld
cmp
fildl
xchg
dec
mov
adc
push
pop
es
mov
movsb
mov
adc
fistps
mov
pushl
cmpsl
push
sbb
fnsave
mov
lahf
sbb
and
inc
pop
mov
call
adc
addb
pop
jbe
cli
push
shlb
xor
inc
icebp
fidivrs
jmp
aam
ljmp
mov
out
out
mov
mov
les
push
or
je
mov
or
or
push
add
icebp
sbb
push
adc
lcall
mov
scas
cmpsl
scas
xchg
sbb
mov
dec
fbstp
push
pusha
daa
outsb
inc
mov
jl
idiv
adc
inc
sti
pop
lahf
rcl
in
mov
int3
dec
dec
push
mov
pop
adc
adc
loope
fisttpll
xchg
clc
ss
mov
and
cmp
mov
je
xor
clc
mov
adcl
push
paddusw
mov
loopne
mov
maskmovq
mull
call
aas
fcmovu
movsb
pop
adc
push
movsb
popa
stos
sub
ret
sub
xchg
fdivr
jmp
jg
and
mov
shlb
lock
lea
sub
shll
shr
xor
out
mov
pushl
stos
push
jo
cmc
cmpsb
push
jl
sub
mov
in
lea
or
xchg
out
mov
mov
pop
jae
or
pop
outsb
iret
xchg
cld
cmp
mov
mov
mov
nop
jg
and
adc
dec
sbb
dec
fpatan
pop
repnz
lds
mov
mov
pop
out
repz
lret
cmpsl
call
dec
ja
std
pushf
jb
sbbl
sarb
xor
aad
xchg
add
pushl
rcll
popa
mov
sub
aas
lds
mov
sub
leave
push
jle
sahf
ljmp
mov
hlt
scas
mov
sbb
pop
add
fdivp
adc
jno
pop
adc
test
jmp
jg,pt
push
mov
mov
mov
pusha
mov
mov
jecxz
inc
xchg
imul
clc
and
cmp
pop
adcb
test
cltd
mov
push
mov
xor
jg
imul
test
into
cmc
faddp
sbb
fistl
subl
bound
sbb
mov
sbb
jle
cmpsb
loopne
pusha
adc
jmp
repnz
jno
pop
cld
sub
nop
jle
jmp
fists
mov
cmp
bound
jg
jmp
mov
inc
scas
pop
lds
sbb
mov
lea
sbb
js
pop
inc
imul
lret
xor
popa
mov
outsl
scas
mov
jmp
and
adc
and
call
sub
xor
add
test
loop
pop
mov
leave
outsl
in
jg
push
adc
or
adc
push
adc
and
push
xor
mov
aas
jo
mov
cmp
sbb
or
call
or
jecxz
ret
xchg
sub
adc
jecxz
sbbl
mov
pushl
sbb
adc
xor
fimuls
pop
xorl
fcomp
subl
data16
inc
mov
fidivrs
jecxz
mov
lcall
xchg
dec
inc
or
inc
xchg
push
test
xchg
in
dec
ss
fnstsw
mov
pcmpgtd
dec
mov
rcrb
fdivs
dec
push
add
repnz
fsub
comiss
xchg
mov
call
mov
pop
das
jo
mov
mov
popf
testb
aad
pushf
jns
mov
lods
insb
push
enter
aad
cs
sub
push
cmp
call
movsb
dec
decl
lock
pop
fcmovbe
out
loop
jnp
fldcw
mov
cld
pop
mov
xchg
icebp
inc
mov
fsubs
jo
gs
xor
dec
sub
xchg
jg
decl
adc
push
scas
cltd
mov
aaa
ret
vorps
adc
pop
xor
fistpl
adc
push
call
test
jbe
faddl
cli
dec
loop
cld
fadds
arpl
stc
mov
dec
mov
pop
push
enter
cwtl
jo
or
fcompl
les
sub
incl
sbb
xor
popa
nop
add
push
mov
cld
je
out
sbb
loopne
pop
and
push
push
inc
cmpsb
hlt
out
cld
sub
jmp
cmp
xchg
imul
cmp
mov
out
ja
add
call
pusha
adc
out
sub
in
insb
in
in
cli
adc
sbb
dec
pushl
mov
push
inc
inc
outsb
cwtl
out
add
mov
ret
repnz
rorl
jne
aam
jg
ljmp
mov
clc
or
pushf
std
pop
sub
outsl
repnz
mov
out
cld
mov
inc
xor
jmp
stc
pop
and
shrl
incl
out
fs
xlat
push
stos
sub
mov
pop
rcll
sahf
clc
inc
sahf
cwtl
shrb
jg
incl
and
pop
or
jmp
out
into
int3
push
and
test
or
incl
sbb
mov
mov
push
cmpsb
and
lcall
xchg
or
subb
cld
dec
push
shrl
sahf
push
popf
inc
mov
mov
xchg
movsl
sub
iret
mov
divl
mov
shl
sub
add
incl
les
out
psubsw
repz
movsb
mov
adc
mov
in
jl
and
xlat
lds
mov
stos
enter
lcall
push
in
fimuls
sahf
inc
add
call
lds
fimull
ret
xor
xchg
mov
ljmp
pusha
and
sub
fmuls
in
out
out
ret
or
xchg
repz
jmp
in
pop
scas
je
push
mov
es
cli
cmpsl
lret
in
or
dec
movsl
sbbl
or
subl
cmpsl
pushf
jecxz
pop
jbe
fcmovne
fbld
inc
inc
cli
adc
call
xchg
sub
ljmp
push
push
out
mov
xor
mov
sbb
dec
cmp
jbe
aas
data16
call
in
dec
jno
test
mov
add
xor
popa
sub
mov
add
push
cmc
incl
inc
cld
lock
inc
int3
jnp
mov
decl
or
lahf
cmpsb
psubq
xor
jbe
push
in
pop
gs
fwait
sbb
xchg
ds
or
push
sub
inc
xor
je
out
and
out
mov
sub
sbb
aaa
incl
jae
push
outsl
out
sbb
mov
ljmp
xchg
decl
cmpsb
xorb
and
or
add
jbe
fs
inc
hlt
jne
daa
ljmp
add
pop
cwtl
mov
std
jo
jns
jecxz
lcall
decl
ss
jmp
push
adc
bound
roll
pop
loope
scas
mov
push
dec
cld
punpckhwd
ljmp
jmp
cmc
mov
rcrl
jmp
test
outsb
add
push
jecxz
mov
lock
ret
addl
pop
push
jg
lcall
subb
loope
push
jg
push
mov
outsl
xchg
and
jb
and
lcall
add
in
mov
mov
psrad
pushl
nop
adc
fimuls
cmpsl
mov
mov
les
addr16
inc
ljmp
cmp
dec
and
cmp
cwtl
fsubrs
das
push
cltd
push
in
aas
adc
in
lcall
and
and
sub
lock
jmp
dec
gs
lods
push
out
test
lahf
das
add
fwait
jnp
cmp
dec
lcall
add
add
mov
andb
out
sbb
ja
mov
cmp
inc
sbb
cli
ret
sbb
push
pusha
sub
and
les
js
cwtl
or
or
mov
scas
and
mov
movsl
loopne
adc
cmpsb
mov
mov
xor
inc
pop
leave
pop
icebp
push
or
lds
jmp
mov
add
ret
movsl
mov
push
aas
pop
int3
sub
mov
pop
int3
int3
pop
test
pop
mov
mov
clc
dec
inc
test
pushl
inc
fisttpl
xor
add
mov
mov
sub
mov
jbe
es
dec
mov
imul
insb
daa
hlt
lcall
pushf
pusha
adc
movsl
mov
jecxz
movsl
mov
loop
in
adc
test
out
dec
mov
mov
inc
or
sbb
and
jmp
jg
call
cmp
pushf
sub
int3
out
mov
cmp
add
cmp
incl
bnd
xlat
or
imul
sahf
lahf
jae
lds
adcl
jecxz
xor
std
dec
std
sbb
add
add
in
lock
inc
filds
pop
outsb
dec
or
xlat
arpl
pop
jno
dec
les
xor
mov
sub
testl
incl
clc
int3
mov
xchg
jmp
ficoml
mov
add
std
xlat
pop
dec
repnz
mov
or
push
popa
fcomip
lods
pop
aad
fcomip
rcr
dec
mov
pop
mov
inc
push
jbe
mov
jg
sti
mov
out
cwtl
psllw
jno
cwtl
test
dec
movsb
scas
xchg
inc
fsts
inc
repnz
test
outsl
pop
cld
jmp
inc
mov
dec
push
incl
or
sbb
push
mov
ljmp
mov
punpcklbw
mov
sbb
cmp
in
int3
pop
jmp
mov
lock
jle
pop
push
sub
fst
and
loopne
inc
or
mov
scas
pop
call
out
in
and
in
outsl
fs
sub
sub
push
mov
mov
cmp
xchg
les
lahf
lcall
das
inc
jecxz
test
lods
jp
jl
fcmovnu
test
mov
out
xchg
pop
enter
dec
mov
push
shl
fcoml
pop
sub
sub
dec
add
out
repz
mov
pop
loopne
dec
popf
xor
imul
inc
xor
pusha
jmp
out
xchg
scas
ds
sub
cli
aaa
out
xlat
lret
ror
jne
inc
shrl
lods
into
cmp
fsub
push
mov
lock
out
fscale
aas
sahf
or
xchg
mov
addr16
rcr
das
imul
nop
mov
lock
dec
mov
je
cld
ljmp
cli
popf
sub
push
test
scas
dec
lods
adc
xor
pop
jg
ja
fucomip
sbbb
sub
jnp
xchg
inc
in
add
imul
call
mov
out
sahf
push
lods
xor
xchg
hlt
loopne
addr16
jne
jmp
sbb
stos
jmp
stos
push
iret
mov
into
jbe
pop
lods
jns
dec
pop
cmpsb
aaa
jbe
jl
inc
lret
out
add
xchg
mov
xchg
inc
repnz
jmp
clc
pushl
mov
push
push
into
add
mov
pop
mov
loope
and
shll
push
adc
cmp
mov
dec
scas
mov
xlat
popf
xchg
cltd
pushl
jg
mov
push
sub
cmp
test
in
xor
test
je
mov
mov
pop
popf
inc
dec
addr16
js
cld
add
or
inc
ret
adc
mov
mov
lret
mov
and
jne
cmp
jle
dec
es
jmp
daa
sarl
cld
pushl
push
adc
inc
push
outsb
aas
mov
sbb
pop
out
aad
dec
or
pushl
mov
fxch
out
xor
in
jmp
jns
adc
inc
gs
fcmovbe
cmpsl
sar
inc
xchg
mov
jecxz
jg
inc
inc
lods
ljmp
jmp
iret
sub
pop
add
loopne
mov
mov
pop
and
ljmp
sub
inc
pusha
dec
mov
std
mov
jno
or
mov
movsl
lret
stos
mov
cmp
int
xlat
jmp
lret
and
mov
and
out
cs
push
movsb
jmp
add
test
mov
scas
ljmp
lds
xchg
sbb
insl
mov
xor
mov
inc
jns
sbb
enter
sbb
bnd
mov
int3
dec
push
cltd
mov
dec
mov
pop
dec
hlt
call
setbe
pop
add
mull
arpl
or
jmp
test
lret
or
xchg
push
xchg
or
adcl
roll
ja
decl
incl
repz
dec
xor
push
push
outsl
mov
sub
scas
or
stos
call
sarl
adc
dec
dec
cmp
xchg
mov
push
stos
xchg
cmpsb
dec
mov
cmp
rcrl
out
rclb
mov
cmp
int3
mov
pop
mov
cltd
out
jbe
sahf
inc
cmp
pushl
iret
jo
and
jmp
insb
cld
cmp
adc
mov
dec
ljmp
pusha
pop
mov
sbb
test
sub
xchg
jae
fs
incl
imull
loop
sub
lret
mov
int
es
adc
dec
cmp
loop
and
sahf
cmpsl
imul
push
rorl
call
decl
test
or
pushf
inc
sub
in
andl
lcall
outsb
adc
push
aas
or
cmovbe
cld
call
add
aam
mov
loopne
mov
dec
out
jno
adc
sbb
cmp
push
pop
div
ds
es
shlb
adc
push
pop
mov
call
repnz
cmp
sbb
push
lods
jecxz
fiaddl
stos
idiv
notb
in
add
cld
jmp
xor
adc
movsl
mov
call
ljmp
cli
xchg
xchg
out
repz
adc
jno
mov
jmp
mov
lcall
negb
jl
ljmp
out
aam
xorl
sbb
outsb
mov
mov
sbb
std
lret
cmpsb
push
cmc
decl
out
push
cmp
inc
xor
mov
or
add
stos
je
cld
dec
cwtl
ret
cmpl
pusha
bswap
out
mov
and
jmp
xchg
neg
xor
incl
jb
rcrl
or
mov
cmp
pop
hlt
pop
push
cmp
mov
std
call
aam
sub
jns
cmp
shrl
xor
sub
les
pushf
aaa
cld
mov
call
pop
mov
xchg
pop
mov
pop
xchg
cli
ficoml
push
out
aad
adcb
ret
push
hlt
outsb
loope
pusha
add
mov
decl
cmp
mov
sub
stos
pop
dec
stc
pop
loopne
imul
push
incl
cld
call
push
popf
mov
rep
pusha
and
les
gs
sbb
lcall
jle
mov
outsl
imul
or
adc
stos
call
sbb
xor
into
test
in
movsl
add
pop
xor
ljmp
jo
rclb
cmp
aaa
adc
push
pop
inc
ret
fcomip
cli
or
jbe
imul
in
es
sbb
jmp
jmp
push
cmp
icebp
jmp
gs
jb
sar
mov
int3
stos
xchg
inc
addr16
ja
out
daa
gs
mov
push
or
mov
push
inc
xchg
pop
inc
cmp
pop
and
icebp
test
jns
mov
pusha
xlat
jmp
clc
cmpsl
aam
mov
cwtl
jmp
outsb
inc
inc
sbb
xor
mov
push
xor
mov
es
leave
dec
pop
ja
cld
xor
cmpsl
xchg
adc
leave
jne
in
jmp
adc
movsl
sar
lock
adc
aam
in
data16
lds
push
mov
cmp
sti
outsl
mov
sar
add
lahf
pushl
and
mov
out
push
stc
dec
inc
jmp
push
add
mov
add
inc
ds
and
jecxz
inc
fsqrt
stos
scas
cli
jmp
xchg
shlb
jne
push
cmp
pop
int
push
and
loopne
sub
xlat
decl
inc
cmpsb
sbb
mov
cmpsl
cmpsl
fisttpll
data16
push
push
sub
push
lcall
ljmp
popa
mov
pop
adc
push
ss
decl
imul
inc
or
incl
mov
jmp
into
and
cmpb
mov
mov
mov
pop
cmc
loop
repz
mov
fimull
imull
js
icebp
push
fsubrl
pop
lahf
mov
mov
xchg
loope
xchg
rcrb
cmp
stos
scas
clc
ljmp
inc
xchg
mov
jp
ret
data16
adc
mov
nop
mov
pushl
or
adc
pop
mov
or
out
pop
pushf
xlat
dec
cwtl
jecxz
pop
inc
cli
lcall
fcompl
xor
jae
mov
repnz
aas
sub
ljmp
pop
test
cmpsb
mov
push
imul
decl
les
enter
jmp
pop
xacquire
mov
mov
bound
mov
js
lcall
ljmp
mov
xchg
push
or
inc
push
into
icebp
cmpsb
bound
adc
les
jne
cmpsb
js
xchg
das
jmp
andb
push
pop
movsl
adc
mov
mov
add
lahf
sub
call
or
jne
push
testb
sub
and
into
add
mov
sahf
inc
mov
mov
and
ja
lea
arpl
pop
ja
mov
aas
test
clc
js
sahf
and
fs
test
mov
sbb
stos
data16
jmp
stos
cmp
icebp
sbb
jle
cs
out
mov
gs
mov
pushf
movsl
dec
je
stos
setae
ss
sbb
inc
loopne
jb
pushl
push
mov
jmp
ret
icebp
mov
inc
mov
ret
jmp
sbb
decl
sbb
mov
mov
jmp
repz
push
xchg
push
mov
int
ljmp
xor
icebp
adc
jo
mov
or
aaa
sbb
dec
sti
mov
dec
gs
incl
or
mov
push
or
xor
cmpsb
jbe
sub
test
outsl
clc
lcall
sbb
cltd
xchg
insb
jg
dec
in
std
pop
push
cmp
call
jl
xlat
cmp
bound
loope
iret
mov
add
inc
imul
jle
lahf
sbb
sbb
xchg
mov
pop
xlat
xlat
sbb
mov
shrl
lcall
rcrb
sbbl
jmp
sbb
decl
cmp
and
add
in
xchg
adc
jg
cmpl
popf
shr
bound
mov
mov
sub
les
ljmp
add
shlb
scas
testl
inc
pop
sbb
movsb
jle
call
movsl
fsubrl
negl
mov
xchg
cmpsb
imul
sbb
jmp
dec
mov
sbb
push
and
mov
push
push
test
test
push
lods
sub
icebp
add
pushl
fstpl
inc
inc
cmpsl
dec
xor
test
aad
clc
neg
cmpsb
xor
cmp
pop
imul
add
mov
addb
out
rorb
movl
lcall
lcall
popf
mov
ja
add
jle
jle
int
mov
inc
jg
call
aad
ja
pop
jae
or
sti
sub
arpl
or
jne
push
test
jo
stc
fnstenv
test
jo
fidivs
inc
bswap
aas
jmp
sti
adc
mov
sbb
movsl
cli
iret
icebp
mov
fistpl
and
add
push
xor
ljmp
and
xor
sub
xor
inc
aad
and
lods
mov
dec
mov
jnp
push
mov
mov
cmp
sbb
mov
push
out
adc
mov
mul
pop
xor
adc
out
jns
out
addb
ljmp
and
or
push
addr16
sbb
add
daa
sbb
jmp
cld
call
cmp
ja
cmp
or
inc
and
js
cli
inc
scas
push
incl
mov
mov
or
pop
and
xor
xlat
jb
outsb
push
test
stos
es
push
dec
imul
je
xor
pushl
dec
add
enter
sub
test
imul
lcall
mov
call
mov
add
sti
cmc
fimull
cmc
push
xor
jp
aaa
sbb
cmp
push
add
loop
les
xor
mov
pop
loop
jo
lock
das
clc
ljmp
out
and
std
mov
clc
rcrb
xchg
xchg
out
cld
incl
sbb
in
mov
add
outsl
adcb
les
sub
pop
testl
pop
pop
ljmp
push
push
or
sbb
inc
mov
sub
add
lcall
inc
add
push
jmp
cmp
sub
fstpl
outsb
sahf
incb
pop
xchg
sbb
adc
aas
insl
imul
ss
and
cwtl
push
push
decl
add
jle
jne
cmovp
inc
or
dec
jl
cld
call
jecxz
inc
movsb
xorl
es
test
jne
insb
xor
mov
add
cwtl
ja
mov
cmpsb
push
dec
pop
or
std
lret
and
ficompl
into
mov
sbb
sub
jne
jno
cld
or
ljmp
mov
jo
test
xchg
xchg
fldenv
clc
push
jb
lcall
jmp
sbb
addb
or
xor
xchg
pushl
stos
repnz
daa
imulb
or
mov
jl
push
sub
loopne
lcall
stc
test
lcall
mov
or
dec
test
das
adc
jns
sbb
push
bound
ljmp
push
add
mov
pop
or
xor
push
mov
inc
in
cmp
jnp,pt
cmp
into
call
xlat
mov
and
jae
pmovmskb
decl
repnz
and
sbb
repz
mov
daa
arpl
es
rolb
int
jg
ds
stos
movsb
cmpsb
pusha
out
add
mov
push
cmpsb
push
aad
or
fimuls
jno
rclb
les
test
ficoml
out
cli
das
mov
pop
adc
das
push
mov
enter
js
mov
add
jmp
call
xchg
pop
push
jg
sub
jge
jbe
lahf
xor
dec
fwait
mov
xchg
jge
arpl
cmp
xor
mov
mov
mov
add
test
fs
lret
sbb
es
jge
xor
push
xlat
in
or
xchg
cld
incb
cld
pushl
pop
sarl
sbb
stos
daa
xchg
in
cld
call
aaa
stos
jg
jl
loopne
lock
xor
rorl
jno
add
shrl
pushl
or
shll
mov
push
mov
addr16
sub
decl
icebp
popf
mov
mov
int
out
je
cwtl
xor
sub
push
xchg
pushl
imul
movsl
popf
mov
mov
and
stc
movsl
int
scas
call
cmp
shlb
sub
xor
pusha
adc
sbb
xchg
insb
jb
ret
iret
jl
fwait
jo
mov
ss
jle
sarl
mov
cli
aam
mov
jg
jg
push
pusha
ret
mov
jp
jae
inc
xor
rcl
lock
ljmp
lds
xor
and
mov
pop
add
cwtl
cmp
test
sub
outsl
imulb
mov
rclb
lods
sbb
test
mov
fisubs
call
popf
cmc
sti
sbb
sbb
orb
jno
outsl
fmuls
cld
fcomps
inc
sti
mov
decl
mov
cltd
lret
xchg
mov
ss
mov
sub
repz
inc
add
cmp
pop
mov
aam
mov
cwtd
rcll
sub
sub
in
je
jge
out
rcr
mov
jns
movsb
shll
or
cmpsb
shrb
and
sbb
mov
hlt
sub
sbb
arpl
jmp
scas
clc
jmp
jle
xchg
add
in
sub
stc
lock
jge
dec
pop
out
cmp
decl
bswap
inc
push
cmc
jmp
fbld
ret
cs
sub
pop
rolb
call
cmpsb
fiadds
lret
mov
outsl
inc
xchg
std
notrack
cmpsb
in
sub
xchg
inc
jmp
bnd
dec
jae
int3
incb
pop
xchg
mov
inc
stos
popf
adc
adc
inc
sar
mov
or
hlt
mov
mov
insb
rcrl
xchg
popa
xor
jg
xor
pop
jle
sub
xchg
and
pushf
sahf
out
cmp
inc
repnz
call
pop
nop
hlt
repnz
cmp
out
cmp
pop
leave
sbb
test
sbb
ljmp
call
xor
stos
fdivrs
sub
cmp
xor
add
inc
cs
pop
cmpsb
test
test
mov
inc
cmpsl
popf
leave
jg
mov
addr16
shlb
push
fimull
aad
push
mov
repz
xchg
xchg
pusha
iret
ret
insb
mov
mov
pop
pop
call
das
int3
ja
sbb
and
lret
clc
mov
lcall
inc
xchg
dec
xchg
mov
cmpsb
cwtl
in
and
cli
mov
xchg
jo
xlat
add
lcall
cmc
push
push
pop
inc
mov
push
adc
pop
cld
incl
mov
add
and
sahf
push
xor
pusha
push
scas
ljmpw
decl
lds
es
and
xchg
das
xchg
sub
xor
jae
push
fistpl
iret
in
hlt
sarb
ljmp
push
xchg
pop
in
mov
jmp
push
test
repz
and
rorl
decl
jnp
cltd
cld
mov
daa
push
les
jne
sbb
jbe
test
mov
lcall
and
mov
cmpsb
shrl
inc
arpl
adc
add
dec
cld
ljmp
lods
inc
mov
cmc
push
jg
add
shlb
fwait
push
ret
popf
mov
lcall
cld
add
sub
orb
mov
enter
insb
inc
les
sbb
je
dec
xchg
sbb
sbbl
xor
dec
jno
adc
adc
bound
adc
inc
ja
mov
das
cli
push
ret
fbstp
rorl
pop
adc
inc
in
xor
xchg
push
out
clc
add
dec
mov
and
push
outsb
adc
enter
loopne
lcall
xchg
dec
or
mov
popf
aaa
outsl
add
pusha
cld
jecxz
loopne
fmul
inc
cmp
call
cmp
sub
pop
fldl
movsl
jns
jmp
dec
mov
cmc
or
mov
ja
mull
jl
xchg
mov
jle
imul
push
test
jo
pop
nop
int
test
lcall
add
fcoml
xor
pusha
mov
sub
push
pushl
and
mov
aad
hlt
test
fs
insl
lock
cmc
push
jg
adc
jmp
xchg
and
sub
inc
lea
loop
jae
aas
loopne
or
adc
fyl2xp1
pop
cmp
xchg
mov
dec
mov
lret
mov
push
pop
mov
ss
popa
and
sbb
push
inc
cmp
jne
aas
sub
out
sbb
inc
xor
inc
fs
mov
sub
adc
mov
pop
mov
ds
enter
aaa
mov
icebp
ljmp
addr16
xchg
test
inc
loopne
push
enter
mov
sbb
mov
popf
ret
pop
sbb
lods
and
jbe
das
cli
jmp
shll
lahf
test
iret
lret
sbb
mov
insb
inc
push
call
mov
mov
inc
push
push
rolb
jp
pop
out
and
pop
jmp
mov
loop
xor
pop
or
decl
inc
push
xor
or
aam
jmp
xchg
ss
sbb
ljmp
orb
das
push
inc
pop
notl
xchg
adc
sbb
mov
pop
mov
dec
xor
jmp
xlat
movsl
gs
movl
inc
push
and
mov
push
sub
add
std
inc
adc
mov
mov
out
cmp
mov
das
pusha
add
in
pop
outsb
mov
sarl
inc
inc
mov
push
xchg
imul
test
pushl
xchg
pcmpeqb
test
aas
std
inc
jnp
adc
aam
out
pop
jae,pn
xchg
hlt
stos
jmp
sbb
dec
sbb
or
sub
and
mov
aam
adc
mov
call
addr16
das
cmp
mov
test
dec
xor
push
out
jns
pop
mov
fisttpl
jno
aaa
ret
flds
push
pusha
or
add
mov
sahf
incl
scas
mov
xor
mov
not
sub
adc
push
lods
push
lock
repnz
call
or
shrl
sahf
lds
nop
xchg
xchg
popf
mov
push
sbb
ljmp
stos
shlb
and
test
icebp
inc
xor
sbb
push
xor
nop
leave
sbb
or
daa
dec
imul
aas
ds
aas
pop
cmp
cltd
decl
nop
and
mov
lods
sbb
xor
or
cmp
insb
pop
icebp
ljmp
mov
and
push
pop
fimuls
xor
xchg
jb
sar
incl
int3
test
cwtl
xchg
inc
fidivrl
xor
and
in
aam
call
adcb
arpl
xchg
add
popf
inc
pop
push
jns
stc
lahf
outsb
mov
pop
insb
adc
xchg
mov
jbe
cmp
jge
pop
xor
mull
repz
lods
mov
xchg
pushl
cld
sti
add
pop
call
jns
inc
adc
push
push
cmp
sbb
and
ljmp
movsb
movsl
mov
mov
fisttpl
aaa
enter
add
iret
add
aaa
push
loop
call
fcoml
inc
fdivrl
rcl
in
xchg
in
adc
mov
sti
clc
adc
jp
xchg
cld
enter
jne
mov
fidivrs
jmp
or
testb
pop
xor
sbb
xlat
test
scas
shl
cmp
decl
sub
dec
xor
xor
or
or
jbe
dec
mov
mov
fisubs
ret
mov
aaa
xor
mov
xor
fnstenv
pop
cmp
jmp
or
adc
cmp
icebp
inc
xlat
cmp
push
imul
and
cmp
and
dec
sub
int
hlt
insb
mov
pop
jge
in
push
mov
fildl
filds
sahf
stos
and
add
lret
dec
lret
testl
lcall
aas
test
jp
icebp
sbb
in
dec
jno
leave
ja
fcmovne
sbb
mov
lock
jg
pop
lods
mov
jle
mov
mov
mov
jbe
mov
pushl
dec
mov
jge
sahf
push
xchg
mov
or
clc
lcall
mov
ljmp
xchg
das
jmp
xchg
push
xchg
push
sub
xchg
jg
mov
xchg
and
adc
xor
push
or
pushl
pop
or
add
shrb
jmp
shrl
outsb
cmp
push
fbld
pop
fistpl
sar
sub
mov
push
cmp
mov
push
lods
xchg
jecxz
ljmp
bound
fwait
cwtl
notl
pushf
bound
push
pop
test
test
pop
icebp
jbe
pusha
scas
mov
fs
fistpll
mov
call
pop
add
mov
inc
aad
movsl
repnz
mov
push
jns
push
inc
stc
jo
in
out
xchg
ss
cmc
cld
cmc
arpl
arpl
decl
mov
into
dec
out
pop
ret
shr
cmpsl
cwtl
and
cmc
push
push
adc
xchg
imul
loopne
mov
decl
sub
jmp
mov
outsl
pop
inc
push
sbb
scas
dec
inc
push
lcall
stos
mov
mov
pop
mov
or
sbb
cmp
ret
push
xor
jno
lcall
insb
inc
repz
into
cli
sbb
mov
iret
loop
or
pop
cmp
ljmp
clc
inc
testl
les
das
mov
rorb
inc
add
add
ret
test
arpl
jle
or
test
js
call
dec
adcb
in
sbb
xchg
pop
imul
ljmp
sbb
rolb
xor
test
cmp
movsb
ljmp
decl
push
and
in
bound
adc
fpatan
int3
cmp
adc
loope
mov
dec
mov
icebp
and
gs
cs
rep
xchg
xchg
mov
pop
sub
ljmp
xor
mov
ret
jne
or
pop
mov
cmp
negl
jg
ret
and
cs
div
lret
fsubs
ss
sahf
test
ja
icebp
call
mov
movsl
fs
xchg
fsubp
popa
iret
xchg
sub
pop
or
jp
out
and
lock
push
pop
cltd
call
jg
stos
shr
adc
inc
inc
push
pop
js
push
scas
out
hlt
dec
les
lahf
or
mov
cld
xor
jp
adc
outsb
outsl
mov
jne
jne
shll
daa
mov
or
int
jecxz
call
stos
nop
daa
jo
jns
movsl
fdivrl
sbb
outsl
jg
in
lret
lcall
out
sub
jl
ret
xchg
and
int3
int3
push
xchg
mov
incl
push
jnp
and
pop
cmp
adc
in
jg
inc
enter
jecxz
jg
xchg
icebp
cmp
lcall
mov
lcall
popf
in
lcall
add
pushf
pusha
das
stos
cmpsb
ljmp
aas
jmp
cmp
pop
xchg
lock
cwtl
push
testb
or
loopne
aad
pop
subl
jnp
test
mov
mov
mov
mov
jle
mov
into
cvtps2pd
sar
aaa
pop
clc
dec
mov
es
scas
iret
mov
inc
fcoms
sar
incl
test
push
insb
pop
push
pusha
lods
adc
scas
das
sub
pushf
cmpsb
lcall
cli
add
aas
lock
les
pop
popf
pop
int3
jg
pop
mov
pop
aaa
call
lcall
pusha
add
iret
sbb
lods
jne
pop
or
imul
nop
ret
jmp
push
addr16
pop
mov
clc
daa
outsl
insb
add
bound
mov
or
xchg
xchg
call
aam
out
test
mov
sub
xor
mov
movsb
pop
mov
icebp
jg
rcll
xchg
push
daa
js
fstl
mov
aam
xchg
mov
mov
mov
add
fsubs
xor
int3
mov
adc
add
dec
lcall
adcb
inc
mov
mov
xor
or
call
lods
repnz
fldt
mov
add
fdivrp
jg
sbb
ss
ljmp
push
or
push
test
or
cmp
pop
aas
notl
fildl
mov
dec
icebp
jge
pop
sub
mov
push
jle
jne
xor
cmp
pushf
pushl
cld
dec
push
loope
stc
cltd
xchg
in
push
or
and
mov
push
cmp
mov
lcall
pop
fdivl
xlat
inc
icebp
xor
jbe
lock
pushf
push
ss
cmpsb
mov
push
in
ljmp
push
mov
inc
pop
push
xchg
enter
and
mov
frstor
sti
inc
pop
sbb
cmpsb
cltd
decl
mov
ljmp
idiv
cmp
addr16
cmc
jno
dec
adc
pop
cmpb
iret
out
xchg
aas
or
repnz
add
rcll
fldt
mov
jge
scas
call
shl
out
sahf
or
lock
clc
sub
mov
rcl
cmc
call
mov
sbb
inc
adc
lret
add
adc
stos
jmp
jne
mov
or
sub
sti
and
pop
outsl
repz
jmp
les
jae
inc
push
mov
stc
inc
int
pop
push
lret
dec
pop
and
xchg
push
fs
hlt
outsl
insl
lock
incl
mov
dec
fisubrs
adc
cli
mov
mov
dec
xor
shrb
int3
add
jl
push
mov
daa
dec
test
inc
and
cli
mov
ljmp
or
xor
or
xor
mov
mov
xor
or
or
popf
fdivrs
push
mov
call
hlt
pop
push
jae
lcall
cltd
mov
movsl
and
xor
mov
int3
cwtl
sti
inc
stos
movsb
incl
ds
loopne
dec
js
xor
adc
cwtl
jne
cwtl
das
bound
aad
lcall
out
jecxz
push
inc
mov
push
sub
xor
out
mov
js
mov
push
xchg
cld
pop
lock
sub
jae
dec
sub
idivl
cmp
mov
inc
sbb
pushl
fiaddl
push
push
enter
notb
loop
jne
add
jnp
and
mov
bound
jmp
and
xchg
jle
dec
imul
mov
insl
pop
pop
jge
lret
adc
sbb
xchg
push
add
pop
rclb
gs
repz
out
call
mov
or
inc
add
test
mov
out
negl
add
mov
loope
fwait
rcll
stc
xor
add
fisttpll
push
jb
fiaddl
xor
lcall
lods
cmp
dec
arpl
in
add
shlb
xor
inc
clc
and
add
test
xor
dec
fcomip
jg
nop
mov
pop
mov
inc
pandn
sbb
std
aad
fidivrs
mov
lock
xchg
sarb
mov
inc
test
add
decl
aaa
loopne
repz
test
out
arpl
fiadds
dec
jle
xor
repnz
incl
jl
addb
ja
lahf
sbb
mov
sbb
mov
in
mov
jg
call
sbb
movsl
test
push
mov
inc
mov
inc
dec
jo
scas
cli
push
mov
int3
mov
xchg
push
sbb
fs
jb
decl
nop
or
jb
cmpsb
inc
cltd
dec
jne
cli
pop
mov
inc
insl
xor
mov
pop
cmpsb
lods
outsb
xchg
jmp
sub
cmp
in
inc
jae
into
call
sub
pop
and
mov
dec
mov
nop
mov
and
jno
adc
sbb
fcomip
ljmp
xchg
mov
cmp
pusha
inc
movsb
ds
push
mov
mov
shlb
call
dec
sbb
dec
outsb
jecxz
loopne
nop
ret
push
jns
loopne
pmaxub
push
mov
call
and
int
mov
jge
jge
xor
sbb
xor
mov
into
outsl
sbb
jmp
pushl
pushf
aas
and
enter
rorl
js
stos
insl
xor
mov
das
jno
lds
cmp
inc
ds
leave
ljmp
call
outsl
xchg
in
mov
sub
lock
pop
xor
dec
and
lock
inc
sahf
in
jl
das
decl
or
cltd
jmp
sub
iret
aas
adc
push
and
in
and
aaa
fdivrl
mov
or
fsub
cmp
adc
ret
sarb
shrl
jae
pusha
into
incl
aas
cltd
decb
push
addr16
mov
mov
rcll
sbb
outsl
call
loopne
xor
cmp
in
aas
insb
in
xchg
jb
sub
lock
in
jl
mov
decl
lcall
push
mov
pop
pusha
mov
push
sarl
jmp
and
cld
inc
aas
hlt
je
mov
xchg
inc
push
rolb
fwait
clc
mov
dec
in
xor
add
cmp
int3
mov
pusha
and
sub
add
fwait
ss
ds
incl
sub
mov
idiv
cld
jp
out
imul
iret
dec
mov
loope
sti
mov
ljmp
int
stc
dec
movsl
jo
movsl
xchg
lcall
xchg
data16
fmull
call
ljmp
cli
cltd
fucom
jmp
andb
mov
ja
mov
int3
xchg
inc
hlt
mov
lock
loopne
hlt
push
testb
jg
mov
call
lahf
adc
mov
dec
sub
popf
mov
dec
inc
pop
mov
ljmp
push
mov
enter
mov
addl
push
out
mov
mov
dec
incl
sbbl
push
mov
xchg
lret
xchg
stc
aam
arpl
dec
fimull
sbb
jne
dec
jbe
jmp
sub
ja
scas
push
sbb
imul
es
jmp
cmp
incl
push
add
aaa
ficoml
inc
or
adcb
sbb
inc
stos
out
pop
fildll
call
scas
mov
into
icebp
pop
imul
decl
pop
mov
cmp
popa
popa
jb
leave
mov
dec
sub
call
nop
push
in
je
test
aad
mov
push
movsl
out
or
sbb
or
rolb
jle
or
add
mov
adc
lret
mov
call
mov
xchg
loope
push
inc
test
popf
pop
jns
xor
adc
jns
xchg
dec
fnsave
lock
fnstenv
pop
mov
mov
dec
xchg
movsl
jl
inc
jl
mov
dec
adc
ja
add
push
testl
int
inc
sub
ljmp
nop
sub
mov
xor
adc
cli
mov
or
loopne
dec
pop
pushf
dec
adc
adc
jnp
clc
cltd
test
cwtl
mov
fbld
js
flds
xchg
xor
adc
movsl
dec
lcall
lods
in
iret
adc
in
test
test
lock
fisttps
push
sub
nop
and
xchg
jg
jmp
lock
sub
push
mov
pop
push
sub
xchg
sbb
data16
ljmp
in
ret
subb
push
pop
inc
daa
popa
xchg
or
daa
pop
inc
sbb
andl
rcrl
decl
pop
adc
clc
dec
ljmp
jnp
pop
push
inc
call
pop
test
ljmp
popf
mov
pusha
mov
rcl
das
mov
scas
adc
aad
aaa
dec
adc
mov
lcall
mov
push
jle
shl
loop
jmp
out
loopne
cld
mov
ljmp
pusha
push
mov
iret
insb
scas
iret
fsub
dec
addr16
push
testl
incl
add
daa
out
adc
fsubl
negl
sub
inc
dec
adc
pushl
in
dec
outsb
jg
adc
ja
sahf
aaa
movsl
jmp
jne
or
ljmp
and
ret
lods
fcoml
rcr
or
or
sar
jmp
sbb
pusha
xchg
dec
add
in
inc
mov
into
aaa
push
call
mov
out
pop
sbb
inc
mov
aad
xor
mov
adc
jmp
push
and
pavgw
mov
ss
mov
aad
popl
pop
adc
decl
push
jl
pop
push
adc
sub
test
ja
cmpb
mov
mov
cmp
xchg
cmp
inc
cmp
pop
push
fldt
push
les
test
lret
inc
aam
lahf
add
std
cmc
or
adc
push
lahf
adc
cmp
mov
call
stos
add
cmp
mov
pop
sti
out
inc
call
and
popa
in
stos
jno
clc
jecxz
pushf
leave
pop
pop
add
arpl
decl
jns
pop
jecxz
jnp
jns
lahf
lock
std
adc
hlt
push
stos
lods
jmp
cmp
push
adc
xchg
popa
mov
mov
mov
and
stc
cld
pop
scas
add
jmp
fwait
bound
cmp
in
fdivrs
in
pop
shrl
pop
aaa
andl
fidivl
lcall
or
ret
xlat
push
or
incl
dec
addr16
mov
xchg
rcll
fnstcw
jae
mov
cmp
mov
mov
xchg
push
test
mov
gs
popf
mov
push
cli
cmp
fbstp
pushl
negl
mov
mov
jo
mov
loop
add
out
adc
inc
lock
push
test
scas
lahf
inc
cmp
insb
jmp
push
pop
outsb
jno
pop
xlat
stc
sbb
outsb
je
add
jnp
add
mov
and
dec
das
addb
mov
ljmp
sarb
jbe
add
ljmp
push
cmpsl
mov
push
sbb
enter
add
mov
adc
or
fidivs
cmc
repnz
shl
jle
fbld
jb
daa
aad
cltd
insl
insl
cmp
out
clc
pop
cli
pop
out
ret
xchg
iret
inc
test
xchg
dec
les
xchg
xchg
inc
and
push
mov
dec
push
fnstenv
jmp
dec
jp
mov
stos
mov
rolb
aam
sarb
mov
outsl
cli
pop
cli
iret
andl
mov
in
std
aaa
pop
or
daa
cli
mov
aaa
cld
incl
push
movsb
lret
jno
inc
lar
pop
inc
ret
jg
mov
inc
pop
inc
push
mov
or
push
sbbl
mov
iret
inc
ljmp
mov
xchg
or
dec
fs
pop
sub
fildl
inc
outsl
mov
pop
fistpl
or
inc
or
dec
int3
out
in
xor
pop
jge
xchg
subb
test
incl
movsl
cs
add
jae
xor
push
movsb
cmp
mov
inc
pop
jmp
rcr
in
int
movsb
cmp
push
movsl
jbe
or
mov
cli
sahf
movb
jnp
add
push
sbb
or
cli
and
aad
mov
lock
fwait
jg
jnp
in
mov
clc
scas
jg
loopne
cmpb
or
cmp
ds
insb
pop
jecxz
sbbb
jnp
pop
ss
xchg
loope
out
push
insb
daa
pop
jmp
clc
shlb
or
dec
test
push
sub
ds
adc
pop
add
andb
sbb
addr16
js
cmpsl
pop
cli
xchg
rolb
mov
bound
push
jb
insb
push
and
es
mov
lcall
cs
xchg
daa
and
or
mov
mov
int
push
pop
mov
mov
sahf
push
push
stc
outsl
clc
jmp
cmp
lret
clc
nop
sub
ljmp
jg
incl
push
ret
in
sub
xchg
dec
mov
cmp
sti
jmp
out
pop
inc
std
pop
xchg
fldt
dec
int
imul
xchg
and
mov
mov
aad
jae
and
sbb
sub
mov
push
addl
lcall
dec
xchg
ficoml
adc
sub
ja
jle
cmpsl
fistpll
ljmp
test
ljmp
adc
mov
xor
cmp
lret
ror
pop
jg
les
jge
push
imul
js
int
negb
push
jecxz
add
cmpsl
lock
dec
mov
loop
xor
mov
fildll
cld
mov
cmp
idiv
jg
je
xchg
adcb
mov
sub
imul
and
xchg
sbb
jmp
xlat
aad
push
insl
aad
fistpl
adc
aas
in
popf
sub
fsts
insl
jae
jl
sbb
test
pop
fcomi
dec
xor
lret
movsb
and
add
mov
in
pushl
dec
lea
add
loop
aad
fcoml
das
adc
imul
jge
popf
in
imull
mov
add
shlb
xchg
aaa
popf
add
std
xor
ljmp
cli
dec
mov
or
inc
adc
sbb
inc
push
sarb
inc
das
cli
pop
cmc
loopne
test
or
cmpsb
orb
sbb
jecxz
push
aad
test
sbb
and
in
xchg
mull
or
popa
jns
cmpsl
shlb
mov
mov
and
outsb
or
and
cli
into
xchg
decl
repnz
gs
adc
inc
pop
rcll
movsl
incb
add
inc
decl
add
pop
pop
sahf
mov
test
into
lds
pop
push
dec
call
adc
xor
out
fst
adc
cmp
subb
scas
jmp
pop
int3
dec
or
pop
mov
repnz
lcall
sub
sti
cmc
movsl
iret
nop
ds
add
pop
pop
bound
aas
scas
jne,pn
inc
add
inc
sar
ljmp
lock
and
imul
clc
push
fsubl
pop
imul
call
sub
fs
push
inc
test
lds
arpl
cmp
pop
out
cmp
call
pop
fiadds
enter
jns
out
insb
pushf
dec
outsb
xchg
pop
xchg
pop
push
jno
xlat
xchg
repnz
xor
lock
ljmp
and
data16
lret
inc
cli
adc
sahf
inc
pop
andb
push
ljmp
xchg
mov
inc
pop
sub
cs
call
jecxz
mov
repnz
gs
sub
aas
pop
fstl
xor
mov
stos
mov
xchg
cmp
ljmp
pop
inc
inc
adc
lock
mov
lahf
scas
mov
and
lods
stc
and
incl
sub
sbb
andl
sub
lcall
aas
lds
or
cld
mov
sbb
push
inc
mov
and
pop
push
lods
cmp
call
out
add
int3
xchg
and
lcall
hlt
repnz
push
ja
sbb
iret
sub
sbb
cmc
sti
ljmp
sbb
ljmp
imul
into
xor
pop
mov
jg
pop
icebp
cmp
mov
jne
jnp
out
pop
pop
cmp
movsb
jmp
clc
adc
mov
jb
lret
std
loope
decl
xchg
fdivl
jle
xlat
mov
pop
mov
sbb
lds
mov
test
push
lret
pop
mov
es
pop
mov
icebp
ja
incl
fiadds
popa
cmp
stos
outsb
push
fcmovu
adc
cmpsb
adc
sbb
lcall
enter
mov
jne
and
iret
loop
out
jnp
mov
mov
aam
pop
inc
dec
sub
loope
xchg
incl
push
outsl
jb
int3
dec
adc
jmp
jae
inc
movsl
test
decl
scas
outsl
sbbb
test
enter
loop
ficomps
ja
inc
lcall
shr
es
add
mov
cltd
ss
mov
mov
arpl
call
push
inc
jge
xchg
aad
icebp
or
addr16
ds
or
nop
cmpsb
jg
push
stos
push
lret
xor
mov
outsb
jmp
dec
outsb
pusha
or
ljmp
pop
and
mov
inc
out
ficoms
jns
fucomi
push
stc
adc
jge
leave
cwtl
push
ljmp
xchg
lock
cmpsl
or
push
gs
insl
and
pop
es
mov
mov
in
fbld
lds
xor
pop
push
xchg
popf
outsb
ljmp
sbb
out
icebp
inc
or
mov
xchg
imul
test
fistpll
out
mov
inc
mov
inc
mov
ret
scas
or
jo
ss
call
cmp
lock
mov
cmpsb
addb
xor
int
roll
pop
rorl
dec
push
es
sbb
call
cmc
jp
vmovups
inc
lahf
icebp
pop
sub
ds
add
decl
shrl
int3
push
fdivrs
cld
movsl
push
orb
ljmp
jmp
sbb
inc
inc
dec
lret
cmp
paddq
test
xchg
jmp
mov
or
movsb
arpl
call
or
out
iret
add
add
cmp
push
hlt
imul
pop
scas
fsubs
aad
push
dec
push
pushl
nop
shlb
push
aaa
pop
outsl
mov
fwait
sbb
rcrb
xchg
jp
imul
fldcw
icebp
mov
sbb
push
popf
aam
jge
jge
push
inc
lcall
incl
loope
rcll
ret
fstp
or
inc
repnz
rep
dec
add
xchg
add
xchg
xchg
dec
loop
cmc
repnz
fsub
in
out
and
int3
inc
out
xchg
movsl
scas
in
fmul
mov
stos
ret
in
dec
incl
push
scas
xor
insl
mov
mov
mov
or
subl
lcall
sub
das
lods
je
jae
out
push
rcrb
decl
fwait
inc
addr16
or
cmp
scas
mov
into
cmp
decl
dec
push
cmp
inc
inc
or
iret
pop
and
adc
jg
mov
xchg
adc
sbb
xlat
mov
mov
decl
je
loop
push
pop
dec
jo
loope
adc
mov
sub
push
xor
mov
daa
xchg
pusha
lods
xor
loope
decl
in
jp
lods
dec
lea
loop
lcall
push
sbbl
clc
clc
inc
loopne
pop
xchg
and
inc
rcrb
ljmp
out
fwait
mov
fdivl
es
inc
mov
aaa
icebp
pop
sarb
lcall
push
cld
mull
les
loop
mov
inc
rclb
jae
lret
xor
mov
incl
jmp
lods
andb
and
xchg
sub
cmp
pop
push
mov
rcr
jg
inc
test
popf
jno
decl
shl
in
add
mov
push
inc
leave
insb
aaa
sub
ficoms
xchg
mov
incb
dec
mov
inc
aaa
sbb
inc
sti
mov
cmpsb
es
xor
jmp
repz
fstpt
in
aad
in
push
xchg
mov
inc
cli
out
rorb
mov
stos
add
popf
icebp
jmp
lcall
mov
mov
xchg
movsb
rcr
jbe
add
call
je
cmpsb
shll
out
outsl
mov
jp
add
enter
dec
in
mov
cmp
call
xchg
enter
icebp
jne
push
ds
cmp
aad
or
aaa
pop
fadds
xorb
and
adc
rcll
sub
jnp
jae
dec
ret
push
xchg
push
mov
fcompl
ret
stos
in
incl
fstps
xchg
mov
dec
icebp
mov
call
adc
in
gs
test
pushl
cld
fisttpl
lock
inc
push
hlt
mov
stos
adc
mov
sar
stos
fists
or
xchg
dec
popf
pop
jp
scas
pop
add
ret
sub
stc
mov
cltd
cwtl
push
cmp
insl
movsl
mov
cmp
movsb
mov
add
int
addb
push
push
or
cmp
jb
add
arpl
data16
pushl
and
fs
push
popa
add
jp
pushf
ret
or
jle
lret
dec
fwait
aaa
xchg
dec
mov
pop
dec
sbbl
or
js
decl
mov
mov
mov
or
addr16
mov
push
jg
cmp
sbb
cli
dec
in
fwait
push
stc
sbb
repz
std
in
lock
mov
loop
pop
adc
mov
inc
xchg
rcr
dec
inc
jge
out
push
sti
idiv
incl
jne
jo
fcomi
lcall
sbb
cmp
or
adc
mov
cmp
push
call
je
mov
daa
punpckhwd
inc
daa
adc
pop
movsl
loop
out
lret
push
and
cmp
jg
jmp
xor
xchg
lret
ds
test
xchg
mov
mov
xchg
push
mov
std
cmp
in
and
inc
push
pop
arpl
push
pop
add
sbb
decl
mov
adc
sub
sub
scas
call
xchg
xchg
icebp
call
ret
bound
shl
push
test
jl
ja
mov
jg
ja
add
jge
pop
xchg
test
sub
cmpsl
add
in
mov
mov
popa
jl
pop
cli
stc
cmp
jl
xchg
or
inc
filds
jno
pop
ret
lret
fiaddl
jg
mov
mov
push
dec
lods
dec
dec
es
xor
repz
lds
incl
flds
imul
out
xorl
jecxz
sub
pop
les
dec
test
mov
and
push
mov
shll
adc
pop
sarl
test
mov
lcall
and
mov
push
aam
cwtl
cmp
dec
in
popf
jae
pop
add
adc
and
dec
bnd
and
jmp
xchg
mov
cmp
je
das
or
inc
in
mov
lcall
outsb
inc
icebp
loope
outsl
xor
fimuls
fstl
jg
arpl
add
popa
jecxz
stos
mov
push
push
push
cmp
xor
jmp
sahf
mov
or
inc
hlt
add
adc
inc
xor
in
jle
cmp
jmp
lods
jmp
or
lods
jmp
pop
aam
fisttpl
decl
pushf
xchg
stc
mov
inc
das
in
jp
add
loopne
popf
inc
push
add
mov
jb
scas
mov
pushl
cmp
aam
lds
in
xorb
push
push
icebp
or
mov
xor
lods
out
fs
addr16
nop
jo
nop
mov
lret
popa
inc
in
jge
jecxz
insb
push
add
mov
dec
fs
pop
out
mov
mov
aad
jg
mov
incl
fmuls
or
pusha
xchg
ljmp
jnp
mov
cmpsb
sub
cld
adc
inc
fs
nop
mov
test
mov
mov
jge
mov
pop
jnp
push
incl
cmp
inc
dec
push
xor
lea
sub
dec
and
cmpsl
mov
call
cmp
pop
sarl
aas
dec
pop
pusha
sub
adc
dec
push
dec
mov
sub
hlt
fsts
loopne
popa
pop
pusha
sti
rcrl
outsl
call
inc
mov
lock
inc
dec
sti
loope
add
jne
ror
rclb
push
mov
inc
or
sbb
decb
mov
mov
xchg
arpl
divb
sub
xchg
cmpb
push
xor
pop
movsl
nop
lcall
dec
int3
and
or
cmp
fs
xchg
cmp
call
jge
sbb
xchg
je
loop
call
add
shlb
popa
sbb
call
test
fstpl
ja
adc
aaa
icebp
and
rcll
pop
dec
xchg
cmp
test
call
lds
inc
push
dec
daa
jns
fnsave
add
jg
adc
movsl
scas
pop
imul
jg
mov
xchg
sbb
or
inc
add
xor
cmp
add
xchg
mov
loope
mov
and
jmp
arpl
fidivrl
push
adc
ds
dec
xchg
fdivl
xchg
adc
lcall
jno
in
negl
call
cltd
shrb
enter
scas
in
mov
lods
test
pop
mov
pushl
popf
stc
subb
xlat
or
negb
ss
adc
jg
jnp
and
xor
lcall
ds
jecxz
sub
sub
sub
imul
decl
add
pop
fldenv
jb
lock
cld
jbe
sub
test
fists
mov
sbb
cmp
cs
push
rol
adc
cmpsl
sbb
adc
cli
pushl
mov
mov
add
aas
filds
test
adc
mov
frndint
scas
pop
mov
push
shrl
lret
xor
jne
imul
jns
out
or
add
out
and
jmp
clc
lcall
sub
dec
repnz
cli
jle
mov
incl
inc
out
lcall
js
cmpsb
jp
aas
aam
xchg
cmpsl
and
addl
ljmp
or
sbb
xor
sahf
cmp
add
ficoms
add
ljmp
cmp
inc
xor
daa
mov
shll
ds
gs
push
fstps
add
or
sbb
fidivs
sbb
add
fdivl
pop
push
dec
inc
lahf
mov
ljmp
sbb
popa
mov
gs
cmc
fsubrl
out
mov
cli
decl
aam
sub
push
sub
inc
mov
dec
jb
sbb
jp
or
mov
and
inc
sbb
bound
call
mov
ja
push
jnp
xor
test
mov
into
pushf
cmp
shl
outsl
dec
push
int3
xchg
add
lret
leave
add
sar
rcl
mov
pop
mov
xchg
test
jbe
mov
insb
push
xor
or
sbb
pop
fisubl
mov
mul
pop
fbstp
xchg
cwtl
das
test
mov
add
xchg
pop
sub
mov
insl
iret
lret
lods
and
inc
and
incl
adc
jmp
sub
pop
movsb
test
sub
hlt
dec
fidivs
fs
push
inc
cmp
ret
sti
outsl
mov
test
pop
comiss
mov
pop
in
add
pushl
sbb
ret
push
sti
inc
loop
ds
cwtd
mov
cmp
mov
lret
test
and
pop
icebp
sbb
cmp
js
push
inc
into
addb
jo
pop
push
stos
or
adc
jb
ja
cld
stc
ja
push
call
jmp
dec
out
por
and
cmp
pop
imul
clc
mov
je
add
jae
jo
xchg
cld
or
lret
jns
hlt
jp
pop
lret
ja
lods
xchg
stos
inc
int3
lret
or
ljmp
adc
cld
cltd
or
xor
repz
xchg
fldt
sar
decl
cmp
int
pop
stos
das
pop
sbb
pop
aam
lea
xor
adc
ljmp
mov
inc
lea
sub
sub
sub
cwtl
sub
fdivl
and
or
daa
out
mov
mov
test
lret
sahf
pop
sbb
xor
jmp
add
test
cmp
aaa
std
call
or
or
pop
xlat
out
jge
arpl
pop
sahf
or
fdiv
jg
popa
ljmp
push
cmp
and
cmp
dec
jg
pushf
test
in
sbb
dec
cli
fldenv
iret
jns
sub
sbb
xchg
mov
fwait
cld
pushl
dec
and
add
pop
cmp
test
jne
add
ret
je
nop
mov
xor
lcall
or
push
ja
lock
cmp
and
icebp
cmc
and
arpl
lret
fldenv
pop
cmp
ja
popf
push
push
adc
ret
push
insb
xor
std
es
or
out
sbb
ljmp
cmp
jo
add
stc
lds
lock
lods
adc
push
mov
iret
stos
decl
ds
or
cmpsb
xlat
inc
push
add
mov
and
xchg
add
ja
das
clc
inc
sahf
inc
int
imul
or
cmp
pushl
cmpb
enter
add
sub
jecxz
out
mov
mov
movsl
sahf
mov
ret
popa
cltd
mov
inc
shll
xchg
gs
and
sbb
jl
mov
arpl
in
pop
jle
mov
add
xor
fcmove
bound
mov
out
out
adc
xchg
and
sbb
xchg
jno
mov
jmp
push
jnp
orl
adc
jnp
shlb
fildll
mov
into
jecxz
shll
ss
loope
sbb
movsl
mov
jg
frstor
jmp
mov
sbb
dec
xor
push
push
xor
inc
cmp
decl
sarb
stc
adc
aas
call
je
les
sbb
call
aad
lea
pop
xchg
sbb
insb
jge
stos
push
popa
ds
sar
pop
cmp
xchg
adc
mov
push
fdivs
js
fstpl
sbb
or
and
test
rcrl
pop
repz
jmp
mov
enter
out
daa
pop
ret
jb
mov
addb
sub
imul
shl
or
mov
sbb
aad
push
mov
jge
shlb
outsb
test
ror
sbb
cmpsb
jno
push
mov
pop
dec
mov
out
and
adc
lret
sti
int3
mov
inc
faddp
mov
mov
push
adc
jecxz
icebp
imul
xchg
jge
test
add
jg
das
pop
sbb
cltd
pop
xor
mov
add
xor
mov
psubq
dec
push
dec
xlat
adc
inc
xlat
nop
jo
cmc
scas
cltd
sbb
pop
xchg
and
shr
jg
sbb
out
sti
decl
lock
xchg
xchg
stos
call
negb
xor
ficoms
jg
mov
push
xchg
ret
daa
xor
xchg
sti
pop
fwait
std
xchg
aas
ja
fs
inc
xchg
xor
pushl
xor
and
jecxz
pop
sub
loopne
sub
jae
ja
jns
jnp
loopne
adcl
in
mov
dec
popf
xlat
test
push
xor
cwtl
and
rorb
cld
mov
je
fiadds
sub
stc
mov
loope
pushl
fbstp
mov
imul
pop
ja
lcall
std
call
sub
jg
mov
int3
std
and
into
stos
test
add
jbe
aad
mov
repz
loopne,pn
loope
sub
lods
jg
mov
pushf
enter
pop
stc
adc
movsb
dec
mov
inc
fs
inc
jnp
mov
outsl
and
and
xor
repz
cmp
imul
mov
sub
pop
xor
loopw
xor
mov
pushf
mov
adc
clc
std
add
decl
add
and
aam
mov
add
fs
out
std
fiaddl
mov
rclb
inc
jmp
jecxz
loop
xlat
sub
pop
lds
fcompl
mov
test
out
das
dec
das
mov
mov
cmc
pop
jnp
lcall
std
jl
or
popa
imulb
add
fidivrs
pop
mov
imul
mov
out
lods
mov
jmp
push
in
jp
out
dec
push
fwait
pusha
incb
sbb
incl
lock
push
insb
loopne
loop
push
popa
arpl
push
arpl
and
cmp
add
cld
ds
scas
inc
fcoms
dec
push
add
test
andb
call
cmp
sti
sbb
or
fstp
iret
es
lods
jecxz
and
mov
adc
dec
add
inc
mov
ljmp
jo
cwtl
pop
shll
pop
subb
rcrl
cwtl
dec
pushl
shrl
add
pop
mov
popa
jle
rcl
xchg
ja
adc
clc
ljmp
cld
cmp
sti
sub
ret
sub
inc
scas
push
push
inc
ss
cmp
jge
icebp
incl
testb
in
into
sub
sbb
lods
in
push
insb
mov
cmp
testb
shlb
inc
es
mov
jp
mov
fbld
mov
dec
ret
and
push
pushf
adc
cmpsb
mov
lcall
or
mov
mov
mov
xor
outsl
outsl
clc
mov
mov
arpl
push
imul
xor
pushl
and
lahf
pop
cmp
pop
dec
jg
int3
cmp
mov
and
cmp
decl
jecxz
repnz
jg
push
or
out
push
cs
mov
and
mov
enter
ljmp
lahf
inc
cmp
add
lods
sbb
sahf
cwtl
xor
mov
lcall
repz
and
pop
sbb
stc
inc
cmp
hlt
sbb
fdivrp
pushf
fnstenv
nopl
or
in
pop
insl
aad
cmp
out
dec
cmpb
lds
icebp
xor
and
sbb
jl
xchg
test
imul
ja
cli
call
arpl
pop
jb
mov
test
lock
xchg
ljmp
stos
cwtl
pop
or
aad
mov
sti
xchg
sbb
push
and
ljmp
cmp
incl
fldl
test
mov
xchg
pop
insl
decl
mov
dec
rclb
lock
lock
push
out
dec
sub
lods
ljmp
cli
and
jecxz
inc
cmp
xorl
testb
add
iretw
push
fwait
jnp
incl
repnz
jne
mov
inc
insl
xchg
call
inc
aas
sarl
out
add
push
push
or
cmpsb
in
aad
push
je
cli
mov
sbb
out
xor
cmp
scas
sub
push
loop
push
mov
ret
push
inc
xor
into
mov
cmp
pop
sub
mov
loopne
push
cwtl
mov
cmc
push
jle
mov
stos
mov
mov
push
jmp
xor
xlat
stos
or
push
stos
andl
ljmp
rolb
btr
add
cmpsl
pop
loope
xor
ljmp
dec
rorb
jmp
pop
pop
push
insb
rorl
insl
out
int3
jmp
adc
jg
shr
xchg
arpl
insb
movsl
add
das
push
jle
lcall
aam
lcall
mov
aad
or
out
insb
imul
out
pop
jmp
outsl
add
lcall
sbb
div
sti
repnz
dec
dec
xor
sbb
pop
lods
lods
cmp
push
jmp
mov
and
push
inc
sbbl
out
scas
mov
sbb
push
pop
jb
imul
and
mov
es
mull
jg
push
and
into
xchg
rcll
cmc
or
sbb
in
mov
and
mov
mov
mov
pusha
or
rolb
adc
cld
bound
decl
push
mov
rolb
les
mov
mov
clc
hlt
pop
clc
cmp
jmp
push
mov
je
push
cmp
jl
in
sub
test
aas
jb
mov
sbb
jmp
jae
es
sbb
dec
push
loopne
insb
sarb
decl
lock
and
test
outsl
cmp
in
xchg
cli
imulb
shr
mov
cld
dec
jl
mov
sbb
popf
shll
cmp
pop
sub
icebp
or
pushf
pushl
sarb
xor
and
in
in
lods
mov
push
ret
icebp
push
pushf
jno
ljmp
xchg
adc
lcall
cmpsb
test
pop
arpl
mov
adc
cmpsb
ljmp
inc
into
mov
add
pop
jns
lcall
das
jl
cmp
mov
in
lds
lea
mov
insl
or
sarb
sub
cmp
pushl
or
outsb
gs
dec
in
call
jg
sahf
xor
call
jbe
xchg
xchg
add
adc
or
loopne
repnz
xchg
or
and
ljmp
cmp
or
imul
aaa
push
xchg
lahf
and
test
push
jecxz
daa
imul
incl
call
nop
sbb
iret
add
dec
insb
lods
mov
dec
test
fists
stc
call
xor
pop
fwait
cmp
sbb
xchg
and
int
addr16
aad
inc
cmp
cmp
cld
cmp
jne
xchg
fnstcw
or
jo
rcrb
mov
out
add
jg
mov
pop
ret
inc
push
call
push
shll
push
ret
int
rcl
mov
jle
nop
mov
inc
jg
sub
dec
test
fldt
cmpsb
movsb
mov
adc
movsb
shlb
cmp
pushl
mov
lcall
jp
das
push
push
adc
add
inc
scas
addl
ljmp
jnp
sbb
mov
lods
loopne
push
jnp
repnz
insl
xor
les
decl
test
leave
adc
adc
add
mov
pushl
mov
lea
mov
outsb
add
jmp
pusha
xchg
add
inc
xchg
push
mov
fwait
mov
out
cmp
dec
or
fsubrl
add
hlt
mov
mov
lock
adc
sbb
fistpl
xor
jmp
mov
cmp
std
pop
mov
aam
and
aam
iret
fiadds
push
icebp
out
jno
in
lea
test
fcoml
popf
js
jo
rcl
xchg
sbb
jp
incl
cld
dec
add
das
cmpsl
xchg
jbe
das
add
repnz
add
out
xchg
dec
dec
fcomip
decl
push
mov
sub
adc
mov
or
add
sbb
call
mov
bound
outsb
xchg
hlt
addl
or
cmp
xor
decl
xor
dec
cmp
pop
data16
ljmp
loop
ror
ror
mov
call
adc
mov
pusha
and
inc
xchg
dec
and
push
pop
imul
cmp
jg
dec
fists
mov
fs
dec
aaa
test
aad
dec
push
incl
jge
inc
xchg
imul
push
cli
or
lock
insl
nop
cmp
decl
nop
jnp
sub
repz
popa
fidivrs
ljmp
inc
rcrl
push
outsb
mov
insl
mov
sahf
scas
sub
rclb
dec
notb
test
inc
cmc
push
jns
std
inc
cmp
repz
lcall
inc
sbb
ret
adc
mov
xchg
pop
lods
aam
jno
jp
xor
or
mov
decl
sti
mov
add
add
rclb
push
xchg
insb
sub
les
jmp
jne
pop
sbb
popa
cld
test
dec
scas
pushf
cmp
cmp
pushl
insb
ficompl
jno
lret
daa
sti
movsb
sarl
jo
jecxz,pt
push
mov
jmp
mov
jne
push
mov
js
clc
sub
push
rorb
jecxz
sbb
jnp
mov
call
cmp
lock
sbbl
ret
dec
out
push
insb
aad
and
outsb
push
adc
clc
pop
add
fidivrl
gs
mov
jo
test
imul
incl
fs
out
and
push
sbb
cli
jae
pop
nop
imul
mov
sarb
aas
sub
mov
jle
out
mov
loopne
mov
xchg
or
outsl
cli
ljmp
sub
subb
or
outsl
mov
push
and
mov
ss
call
mov
psubusb
fs
cmp
adc
adc
cmp
scas
xchg
ret
sub
lcall
ja
rcrb
mov
scas
xchg
fwait
je
mov
neg
or
push
adc
decl
enter
imul
pop
es
mov
pop
push
pushf
push
add
sub
mov
jg
jne
and
popa
xchg
xor
rcr
call
lcall
mov
cmp
popa
in
fwait
xchg
lods
push
sti
xor
cmp
jmp
stc
notb
cmpsl
repz
inc
in
jb
sbb
push
pop
shll
gs
ljmp
loope
and
cmp
clc
movsb
ja
or
mov
cmp
ljmp
mov
mov
sbb
inc
pop
xor
mov
mov
aad
sbbl
jmp
dec
pop
mov
out
adc
inc
test
mov
dec
bound
mov
pop
fcmove
mov
hlt
or
mov
inc
out
jno
les
scas
adc
fcomip
add
xchg
jbe
sub
cmp
out
and
ja
ljmp
sub
popa
sarb
mov
or
call
mov
mov
jl
shll
adc
clc
pop
inc
addr16
cmpsl
jecxz
jmp
and
call
std
jns
or
dec
and
out
movsb
cli
and
out
add
and
lock
and
das
clc
call
jmp
dec
mov
addr16
cmp
fwait
bound
xchg
mov
jg
or
sbb
jl
mov
jg
insl
clc
sbb
push
movsl
insb
loopne
inc
sbb
into
mov
test
jmp
dec
out
mov
mov
cmp
icebp
dec
or
testl
pop
add
sbb
sahf
call
ds
out
sub
pusha
daa
in
ret
push
add
push
fcom
dec
pusha
decl
add
lret
sub
ret
pop
inc
enter
adc
cmp
scas
pop
cmp
clc
and
addl
and
mov
pusha
stos
sbbl
decl
inc
bswap
aaa
std
aas
les
fs
mov
ja,pn
mov
orl
loopne
incl
xor
fwait
inc
fsubr
andps
adc
jg
fisttps
mov
fdivs
daa
ljmp
add
mov
andl
dec
inc
jg
decl
cmp
mov
jne
repz
dec
inc
mov
decl
cmp
sbb
mov
sahf
jbe
mov
jge
mov
cld
add
popa
pushl
fnstcw
movl
sbb
and
mov
pop
and
inc
mov
inc
stos
and
outsl
inc
cli
in
sub
xor
dec
sub
sub
mov
sub
sarl
movsl
dec
pop
mov
sub
sbb
inc
nop
jb
cmpsl
outsl
cli
decl
adc
rcr
mov
hlt
mov
mov
js
jecxz
dec
cmp
mov
xchg
scas
xchg
movsb
ljmp
pushf
aam
cmc
dec
mov
sbb
call
movsw
dec
cld
jg
xchg
sub
mov
shl
pop
lret
sahf
ja
clc
jg
cmp
cld
insb
loope
pop
ljmp
lcall
pop
insb
push
cli
sub
ljmp
movsb
push
out
jae
adc
dec
sub
rcr
or
pusha
in
lcall
xor
push
dec
lods
jle
mov
jmp
adc
pop
clc
icebp
out
gs
adc
std
push
dec
adc
andl
leave
lods
sbb
sti
mov
call
stc
filds
test
call
imul
fdivrl
ficoms
cmpsl
cmc
call
orl
push
inc
mov
ja
mov
imul
das
mov
pop
or
xchg
inc
lret
sti
xchg
imul
int3
cmpsl
ja
call
loope
xor
leave
rolb
inc
dec
inc
cmp
in
pop
outsb
iret
ret
lcall
jno
xchg
das
mov
loope
cld
or
stos
and
or
jecxz
rcrb
cmp
jl
push
paddw
mov
push
arpl
sub
and
pop
mov
decl
or
sub
dec
pop
insl
jno
sub
stos
pushl
insl
adc
add
std
add
fidivl
adc
adc
jo
lret
lcall
cmc
aam
and
mov
xor
sbb
jb
mov
or
lahf
test
ljmp
jae
jbe
jle
xchg
stos
vpmacsdqh
fnsave
fsubr
jecxz
loope
cmp
mov
call
roll
lcall
mov
jo
inc
inc
ffreep
lods
incl
out
fadds
in
jb
cmp
cmpsl
adc
sti
sub
push
das
adc
dec
sbb
mov
inc
ds
pop
jle
jno
mov
xor
call
sbb
push
inc
pushf
das
xchg
jp
inc
popf
cmc
ret
lret
out
daa
xor
xchg
jg
inc
xchg
test
jne
or
xor
fstps
cs
cwtl
inc
aaa
imul
lcall
mov
leave
imul
fs
popf
jle
sahf
ds
out
push
call
test
pop
dec
or
pop
mov
xor
ret
or
or
fmuls
lds
lcall
push
out
outsl
adc
mov
sub
test
pop
mov
out
call
hlt
sbb
jno
enter
insl
imul
or
hlt
aad
jp
mov
shll
sahf
das
clc
jmp
addr16
pop
test
jecxz,pn
jns
shlb
jg
mov
xor
ljmp
jo
pop
and
sbb
sbb
dec
xchg
test
mov
ret
jle
push
mov
lcall
adc
movsb
popl
dec
js
dec
xor
in
hlt
inc
int3
mov
jns
or
decl
in
jp
cmp
mov
cs
jmp
jmp
lods
pop
xchg
cmp
call
xor
loop
dec
in
fisubrs
pusha
loop
decl
outsb
xchg
shll
imul
data16
mov
jne
int
fwait
lods
cmc
sbb
imul
outsb
inc
jl
sub
add
xchg
push
fs
aad
addr16
jge
xlat
and
es
cmpl
lcall
hlt
test
pop
jno
sbb
fiaddl
fwait
les
xor
call
loopne
ret
adc
sub
cld
notl
mov
inc
pop
mov
ret
call
or
lods
aam
jae
rcrb
insl
int
mov
std
mov
repz
fcomip
inc
pushf
in
push
jecxz
inc
pop
mov
std
loope
dec
mov
lcall
jmp
out
cmc
jle
shl
adcb
cmp
pusha
push
push
mov
adc
jb
ljmp
and
call
jb
mov
aas
rcll
out
int3
adc
call
popa
je
mov
mov
jecxz
repnz
inc
ss
adc
jnp
lahf
out
call
gs
adc
xchg
stos
pop
mov
pop
sarl
dec
in
jp
mov
adc
fdivrs
and
into
cltd
fmull
int3
sub
or
cmp
test
inc
in
xchg
test
jle
and
in
inc
xor
xor
or
lret
pop
push
das
shrb
sahf
mov
dec
fs
dec
add
fcomip
jmp
xor
out
inc
rolb
faddl
xchg
int
cs
sar
jmp
mov
ret
dec
inc
push
orl
fs
jbe
add
add
jne
push
in
inc
aaa
std
push
jo
neg
add
push
daa
mov
xor
jg
mov
jns
call
sbb
mov
adc
loope
xchg
push
or
xlat
out
or
dec
jle
das
sar
mov
pop
loope
aam
and
jae
test
push
push
xchg
pushf
sub
jg
jmp
fdivrl
or
sbb
cmp
sbb
pop
test
pushl
mov
and
adc
cmp
push
pop
xor
call
mov
xchg
push
dec
cmp
les
cmp
out
ljmp
sarb
call
dec
lock
mov
xchg
cmc
push
lcall
pop
mov
fistpl
and
push
push
stc
cmp
pop
push
cltd
int3
cmp
pushl
pop
xchg
push
lea
stos
fisubs
dec
out
and
popf
xor
int
mov
mov
sbbb
inc
sar
pushw
je
pushf
orb
pop
fidivs
clc
sub
mov
lcall
pop
lcall
adc
dec
into
dec
xchg
mov
pop
jnp
lahf
xor
call
cmp
adc
jb
mov
pushf
inc
push
enter
dec
repz
add
ret
fisttpl
call
sarb
push
adc
outsl
gs
push
cld
xchg
push
lcall
dec
pop
cmpsb
pop
ja
decl
sub
in
jbe
repz
add
mov
and
ja
mov
mov
push
test
les
outsl
mov
rclb
mov
sar
ret
and
lret
sub
pop
dec
xchg
out
sbb
icebp
iret
mov
cli
lcall
cwtl
cwtl
mov
cltd
jecxz
outsl
cmp
jge
jbe
leave
push
aad
ss
jg
cmp
out
or
sbb
jns
push
std
add
scas
lock
pop
sub
in
decl
pop
cmp
xchg
mov
cmp
rorb
dec
push
xor
decl
pshufw
shrb
sub
cmpsb
mov
push
jns
loope
incl
cld
popf
mov
or
xchg
push
cltd
inc
je
xchg
clc
inc
cmp
call
cmp
xchg
jmp
std
dec
mov
out
or
aaa
push
loopne
sbb
and
adc
mov
lcall
popa
sbb
icebp
pop
test
out
js
cli
or
mov
cmc
test
fwait
rcr
pop
out
pop
icebp
outsl
clc
xchg
add
repnz
or
adc
xor
adc
lea
insl
mov
add
sbbl
sub
ss
dec
pop
cmp
xor
cmpsl
lret
ljmp
fwait
lods
incb
inc
jnp
mov
loopne
adc
sti
fldcw
repz
ret
ljmp
and
and
enter
aad
pop
or
pushf
aaa
std
jg
cli
jbe
cli
adc
jo
inc
jne
stos
cmp
rcrl
test
mov
icebp
ljmp
les
add
mov
lea
ret
pop
dec
idiv
std
bound
dec
mov
xchg
mov
fstl
cmp
push
sbb
jg
pusha
jl
add
ror
in
pop
repz
and
out
out
jae
dec
jb
and
movsl
lock
cwtl
roll
pop
nop
dec
dec
ljmp
test
cmovp
inc
imul
sub
jg
pushl
movsb
cs
fmull
jae
mov
ljmp
notl
mov
add
inc
fisubs
dec
jno
incl
or
mov
jae
popf
add
add
imul
aam
xchg
arpl
inc
dec
fs
mov
lds
pushl
jnp
push
and
pop
xchg
outsb
enter
inc
and
test
lcall
push
mov
cmp
xor
pop
jb
xor
dec
xchg
divl
mov
mov
loope
mov
pop
addr16
and
or
add
ljmp
mov
mov
sti
xor
mov
in
mov
movsl
pop
xchg
int
ljmp
xor
ds
jp
mov
sbb
scas
add
cli
xchg
js
out
outsb
inc
xchg
ss
std
and
pusha
in
pushl
adc
jle
jns
pop
enter
nop
out
and
sahf
ss
mov
add
int
movsb
imul
addr16
dec
rorl
cs
rorb
sub
lcall
stos
loopne
cmp
test
je
repz
mov
mov
dec
mov
dec
jle
jle
aad
push
in
cltd
mov
pop
and
mov
xchg
out
or
xor
bound
ret
cld
out
or
sbb
inc
sar
push
add
out
movsb
rorl
sahf
or
lahf
in
cwtl
outsb
or
movsb
pushf
into
sub
call
mov
and
dec
pop
sbb
and
pop
in
mov
mov
jae
mov
loop
mov
ljmp
push
or
pop
sub
or
mov
pop
mov
arpl
gs
cmpsl
add
add
test
push
inc
testb
xchg
add
into
jl
xchg
add
inc
jmp
and
inc
xor
sahf
loopne
ss
inc
sbb
in
fstpt
jmp
aaa
push
jno
rcll
push
or
out
lret
sub
js
mov
xchg
nop
mov
jmp
adc
lods
cwtl
xor
lds
or
xchg
add
test
lods
mull
lcall
aam
or
pop
inc
sbb
repnz
imul
xchg
mov
inc
sub
xchg
pop
std
and
xchg
lods
push
in
add
sub
dec
adc
inc
in
pop
lcall
jge
cmp
lea
adc
loope
mov
sbb
dec
pusha
lret
jmp
or
sub
fstl
stc
divl
aas
pop
loop
loop
sub
sar
decl
xchg
and
sbb
out
pop
and
mov
fists
jmp
enter
jno
out
enter
jmp
mov
and
add
mov
pop
jno
dec
movsl
add
fabs
mov
cld
sub
xor
xchg
dec
adc
cs
sbb
ds
and
cmp
in
sbb
cmp
push
cld
popf
fwait
insb
and
pop
incl
dec
test
ljmp
outsl
lahf
jbe
movsb
push
roll
sar
ljmp
repnz
out
jno
stos
mov
mov
hlt
lea
jle
inc
mov
fildll
xor
inc
mov
mov
ror
loop
ljmp
scas
xchg
mov
mov
lret
pop
mov
jno
das
pop
jge
stos
adc
les
pushl
inc
inc
mov
pop
sbb
scas
lea
out
fdivl
imul
inc
sbb
dec
btr
sbb
push
jmp
ror
lahf
scas
cmc
loopne
cld
mov
ljmp
push
cmp
ret
leave
clc
and
mov
lock
pop
inc
inc
jns
dec
lahf
lods
mov
andb
sahf
add
and
in
or
std
enter
insl
lret
aaa
mov
jmp
sub
repz
daa
fs
cs
add
add
or
out
fs
cld
dec
insb
mov
ljmp
mov
mov
test
sub
pop
insb
call
negl
std
push
xlat
in
sub
pop
xchg
mov
sub
clc
push
mov
lods
insb
popl
sub
in
repnz
xor
xchg
mov
lea
sbb
push
incl
sbb
push
mov
ret
or
pop
adc
add
into
xor
jmp
sbb
push
cli
in
cmc
shr
jno
add
lahf
and
dec
xchg
daa
decl
cmp
pop
xchg
leave
ret
xchg
xor
mov
xchg
adc
mov
cmp
push
stc
sbb
sbb
out
andb
xchg
imul
dec
add
outsb
sbb
xchg
fidivs
call
iret
call
in
sbb
cltd
loopne
outsb
mov
push
pop
sti
imulb
push
jle
arpl
out
clc
cmp
or
in
fcoml
dec
pushf
mov
cmp
sub
rcll
scas
jmp
dec
test
adc
jg
sahf
lret
pop
sub
test
lock
fmuls
les
mov
pushl
pop
std
cmpsl
fistps
mov
xchg
fwait
ret
pop
cli
test
call
and
outsl
cs
push
jns
test
scas
mov
pop
inc
sub
mov
repnz
xor
lret
push
fnstsw
in
fwait
mov
jbe
cs
xchg
pop
dec
gs
pushl
hlt
arpl
jno
mov
adc
xchg
jne
inc
jmp
push
mov
popa
fsubrs
mov
and
mov
loop
incl
mov
mov
aaa
and
jl
cmpsb
in
jne
test
ljmp
jle
imul
or
mov
dec
sub
loop
mov
pop
lcall
decl
push
push
mov
xor
sub
test
xor
mov
mov
test
xchg
loopne
xchg
xorb
call
or
fdiv
push
mov
int
rcl
mov
xchg
sub
jg
sub
pop
mov
push
inc
and
cmp
and
cs
and
cld
mov
and
es
repz
sub
scas
dec
ljmp
mov
mov
ficoms
and
inc
dec
int3
cmpsb
xchg
inc
lods
fsubrl
adc
ljmp
dec
cmpsb
icebp
subb
bound
push
roll
pop
shl
cmp
mov
outsl
inc
mov
out
test
cmp
lods
jle
adc
sub
decb
or
in
decl
push
loopne
icebp
div
lret
mov
jnp
mov
xor
adc
mov
hlt
lcall
outsb
cs
and
popf
rcrb
mov
push
xor
lcall
push
cltd
outsl
push
daa
sbb
jo
sub
xor
mov
cmpsl
stos
push
dec
adc
dec
and
sbb
mov
das
mov
fmull
sti
mov
add
lret
das
lcall
movb
or
gs
inc
and
out
jns
mov
xchg
shrb
incl
xor
xor
pop
jmp
mov
inc
mov
jge
out
jle
xchg
adc
mov
outsl
sub
pop
lock
inc
inc
xor
mov
inc
jno
stos
or
jle
stos
dec
inc
mov
sbb
jmp
pop
test
inc
or
or
jge
imul
adc
lret
sub
test
stc
enter
sbb
sbb
jp
xor
outsb
sahf
inc
adc
jmp
ds
int
imull
andl
das
cmp
inc
jbe
inc
insb
dec
push
sti
sbb
xchg
adc
popa
pop
test
aaa
pop
rcrl
out
mov
incl
xchg
push
hlt
xor
iret
lret
imul
cmp
jne
hlt
pop
mov
push
mov
fstps
sbb
or
dec
divb
cmp
mov
das
insl
je
in
mov
pop
and
lcall
mov
stc
fiadds
cmp
in
jp
adc
inc
mov
mov
pop
rorb
incl
inc
pop
and
fistpll
dec
pop
lods
ljmp
call
loope
mov
ds
ret
and
jge
push
fcmovbe
dec
or
and
pop
fisubl
fwait
add
add
jl
xor
cmp
inc
mov
add
xchg
mov
insl
xchg
cwtl
sub
insb
xchg
pop
stos
push
les
rorl
sbb
adc
mov
call
mov
loopne
or
outsl
cmp
jmp
xchg
mov
push
dec
shl
mov
cwtl
stos
ficompl
test
add
scas
out
ret
test
incl
add
std
or
das
loop
push
dec
cmp
cmp
cmpsb
out
add
lcall
dec
sbb
push
inc
hlt
out
je
mov
cmp
incl
and
repz
loopne
sbb
test
and
inc
outsb
rolb
fstps
out
push
fucomi
push
out
pop
pop
in
arpl
jecxz
es
mov
jno
xlat
dec
rcll
mov
push
dec
xchg
les
xchg
ror
and
outsl
xlat
mov
mov
jle
gs
mov
pushl
lds
fucomi
mov
into
or
pop
addl
ds
daa
sub
jns
cmp
fcomip
outsl
mov
or
insb
xchg
jg
push
xor
xchg
sbb
xor
out
pop
add
mov
loopne
and
test
sbb
pop
jg
jl
inc
in
int3
dec
es
push
out
lock
sarl
inc
lret
pop
xchg
cli
mov
sub
lcall
jge
std
fistps
out
outsb
les
sub
dec
dec
loopne
pop
scas
xor
imul
dec
adc
and
decl
movsl
xchg
xlat
cmp
bound
xor
stos
sahf
clc
ljmp
test
fnstsw
sbb
shl
dec
out
pop
out
dec
insb
xchg
dec
scas
cli
das
rcr
cmp
add
pop
rorl
or
inc
incl
ljmp
xchg
insb
cmc
lods
sbb
add
mov
mov
jnp
mov
mov
into
mov
jno
in
scas
pushf
jbe
in
incl
adc
int3
movsl
jecxz
ja
in
jle
xor
ret
cmp
pop
push
sub
outsl
clc
incl
mov
mov
insb
sbb
jb
push
add
fists
into
jns
popf
xor
pop
jmp
sbb
mov
add
jmp
xchg
fbstp
pop
fisubrs
pop
push
cld
stc
jle
mov
in
ljmp
je
sarl
sti
filds
mov
pop
popa
clc
orl
sarb
enter
int3
or
jl
mov
movsl
enter
call
in
imul
cmp
xor
movsb
ret
arpl
add
scas
mov
arpl
mov
pop
push
das
inc
lcall
pop
lret
call
mov
cmp
pushf
movsb
xchg
std
push
inc
nop
and
lret
adc
jns
pop
lahf
call
and
push
xchg
bound
or
inc
dec
pop
insl
imulb
jmp
rolb
xchg
nop
out
outsl
imul
mov
ljmp
loopne
hlt
popf
jb
mov
pop
lret
icebp
or
out
and
ret
and
mov
cmp
jno
lcall
aas
add
lods
xor
sbb
mov
xchg
fnstenv
pop
cmp
loope
cmp
inc
or
sub
scas
dec
push
add
add
outsb
js
cli
mov
ljmp
pop
rcll
jno
fsubrp
add
push
leave
xor
ja
hlt
adc
int
and
and
jg
fwait
mov
fs
inc
push
inc
ret
dec
es
fdivp
bnd
scas
xorb
pop
hlt
decl
xchg
mov
sti
and
jg
jp
push
repz
push
cld
ljmp
sub
push
xor
inc
je
in
or
pop
cwtl
notl
cmp
lcall
sbbb
mov
clc
sti
xchg
and
and
lds
addr16
push
push
jb
aaa
cwtl
ret
inc
xchg
sub
iret
mov
jne
push
out
enter
mov
pushf
int
mov
shl
push
cwtl
insb
jp
inc
testb
loopne
lret
push
xchg
neg
cmpl
pop
in
cs
adc
call
add
xchg
inc
fistpl
std
mov
xor
mov
ds
mov
lods
ret
mov
ret
jnp
push
call
ret
shrb
ja
push
cmp
xchg
enter
movl
cmp
jg
pop
sub
fs
ljmp
xor
jae
pop
cs
adc
call
sbb
bound
pop
lods
mov
pop
mov
out
pop
dec
jmp
cmp
push
jge
cbtw
sahf
cmpsb
mov
adc
fdivp
inc
data16
pop
add
lcall
push
add
cmpsb
dec
lock
cmp
jecxz
or
lods
push
in
sahf
outsl
pop
add
and
ljmp
pop
push
testl
inc
call
push
ja,pn
mov
test
movsb
lcall
mov
fbstp
cmpsb
jl
fbstp
jg
adc
sub
push
ret
cmpsl
ret
stc
xor
lcall
xor
mov
xor
dec
repnz
add
addr16
fdivrs
int
stc
arpl
xorb
mov
push
xchg
adc
xchg
stc
sub
xchg
or
mov
into
dec
dec
adc
test
mov
mov
push
adc
or
mov
aad
call
stos
mov
or
jl
cwtl
shl
nop
sbb
popf
out
pushf
cs
pusha
iret
lods
cwtl
nop
stos
insb
cmpsb
repz
fcomp
push
enter
int
or
popf
stc
pop
mov
out
or
scas
fmul
push
fadd
and
lcall
and
mov
movsb
xor
jae
test
adc
pushl
mov
gs
sub
cmp
out
lret
mov
imul
stos
pop
push
mov
mov
add
jmp
cs
xchg
or
add
imul
or
sub
mov
loop
jmp
add
adc
cmpsb
lcall
js
add
fldcw
enter
subl
ljmp
aam
add
sub
imulb
sbb
orps
sub
dec
adc
movsl
std
jmp
cmpb
dec
ljmp
add
push
fmuls
lcall
adc
lock
adc
scas
mov
ljmp
aad
jo
in
jbe
sub
lret
lcall
pop
xchg
sbb
stos
mov
pushf
stc
mov
cmpsl
int3
shlb
aam
lcall
jp
xor
dec
cltd
repnz
mov
scas
inc
ret
mov
retw
aas
icebp
pop
or
data16
test
rep
adcb
push
incl
cmp
jbe
ljmp
sti
rorl
sub
sbb
jmp
mov
inc
inc
push
int3
imul
addr16
repz
ljmp
cmp
dec
mov
notl
stos
leave
jle
pushf
fwait
in
inc
in
push
loopne
pop
mov
mov
cmp
jns
sti
aam
fistpl
in
test
dec
cmpsl
cltd
test
repz
cmc
aas
incl
mov
test
fcomp
lret
xor
mov
pop
imul
stc
fildl
cld
pop
cmc
or
sub
int3
insl
mov
loopne
lock
fmuls
dec
stos
mov
xchg
adc
incl
cmp
outsb
sbb
push
in
jmp
in
mov
jo
orl
jl
popf
jmp
out
inc
add
and
mov
add
add
sbb
jge
or
lcall
stos
cmp
fidivrs
xor
orb
test
jnp
push
insb
mov
popa
shll
loop
mov
sbb
push
dec
lea
pop
adcb
outsl
mov
test
push
scas
js
sbb
fcomi
cli
in
cwtl
into
scas
pushf
add
or
cmp
stc
lcall
or
cmc
pop
cwtl
xor
gs
dec
xor
je
mov
in
stos
jg
add
lock
rorl
jp
jns
pop
call
lock
inc
push
inc
data16
inc
int3
ret
ret
dec
sbb
jg
ljmp
push
iret
int
mov
lahf
push
push
cmp
cmp
mov
scas
xchg
test
inc
subb
enter
decl
sbb
shll
and
push
inc
push
sbb
jae
scas
bound
inc
cli
std
shlb
mov
pop
imul
mov
xorl
cwtl
mov
lcall
pop
xchg
aaa
pop
lret
mov
lods
sub
fmuls
dec
pop
sub
push
cmpb
cmc
shll
sub
push
and
adc
dec
jne
movsb
movl
imul
dec
lea
movsb
jp
out
mov
fsubr
pop
xor
inc
mov
testb
inc
and
ljmp
sub
push
daa
sar
jmp
mov
mov
shll
test
push
or
das
pop
adc
xor
inc
repnz
rorb
ds
cli
je
push
out
sub
mov
pop
lea
ljmp
les
xchg
lahf
sbb
notl
push
mov
mov
stos
jecxz
ret
popf
nop
decb
sahf
outsb
loope
loope
sbbb
cld
cmp
decl
sahf
out
outsl
add
repnz
jge
scas
push
dec
popf
add
sub
sub
dec
decl
hlt
push
cld
sub
loope
arpl
xor
cmp
inc
pop
push
in
jae
sbb
ret
inc
es
std
fdivrs
lahf
dec
in
xchg
jg
add
push
jbe
cmp
adc
pop
add
and
decl
aaa
fwait
xchg
mov
lcall
jmp
incl
adc
fdiv
mov
cltd
outsb
js
pop
mov
mov
aaa
pop
addr16
mov
pop
push
jg
ljmp
jno
sbb
insb
popl
jg
jbe
cmp
fsubs
or
dec
add
jle
ret
mov
sbb
bound
imul
inc
nop
hlt
into
mov
mov
mov
xchg
repz
fcmovne
xchg
clc
sbb
xchg
js
daa
xor
movsb
fwait
xlat
add
adc
and
or
push
cmpsl
sub
sub
bound
dec
and
add
push
mov
push
pshufw
cld
in
jmp
cmp
cmp
cwtl
iret
inc
mov
das
fsubl
sub
std
movsl
ljmp
repz
clc
in
sbb
xor
sub
mov
aam
mov
scas
jecxz
inc
sub
mov
push
pop
jnp
ljmp
insb
cmp
sub
cwtl
stos
sub
mov
sbb
mov
ror
jno
mov
subl
or
mov
stos
ss
mov
mov
mov
les
mov
addb
das
push
ja
xor
push
cmpsb
fwait
cmp
call
push
mull
nop
inc
jecxz
popa
fmuls
push
outsl
ret
cld
cmp
lcall
es
out
push
inc
mov
pop
out
lret
mov
daa
mov
gs
dec
xchg
sub
lcall
mov
adc
cmp
push
sub
mov
mov
js
pop
icebp
push
pop
lahf
ljmp
aad
pusha
jo
cmpsl
adc
mov
fwait
jmp
scas
mov
mov
fidivs
mov
into
inc
sub
mov
mov
push
dec
sub
ffree
clc
pop
and
lcall
iret
add
xchg
and
push
sub
pop
jl
xchg
push
incl
inc
fistps
rclb
mov
pop
sub
xlat
sub
inc
xchg
xor
call
arpl
push
loop
sbb
jb
shl
hlt
out
dec
ret
sahf
es
and
jo
movsb
jg
dec
push
shlb
js
cli
scas
dec
sahf
cmp
mov
gs
fwait
lods
scas
sub
inc
push
xlat
xchg
pop
lahf
cmp
sub
mov
dec
jl
mov
push
mov
fimuls
cltd
in
sub
arpl
retw
fisttps
popa
or
jnp
insb
das
arpl
jp
cmp
xor
cmp
ljmp
aas
arpl
outsl
push
stos
pusha
scas
imul
in
adc
insb
mov
popf
shlb
sbb
mov
adcb
jecxz
xchg
sub
lock
stc
out
jae
repz
sub
lret
lcall
fisttps
push
jmp
cld
mov
mul
push
push
mov
push
jne
jle
add
stos
neg
pop
test
ljmp
jb
or
adc
mov
nop
xchg
testl
and
dec
js
inc
xor
inc
addb
dec
and
scas
xacquire
bound
imul
aad
out
cmp
xor
stos
jg
mov
in
leave
xor
stos
cmp
adc
and
repnz
insl
mov
insb
sub
xchg
mov
movsl
lock
imul
jmp
pop
testl
mov
sti
mov
xor
jge
sub
out
insl
pop
ud0
lcall
stc
mov
mov
dec
pop
push
adc
add
sub
mov
pushf
andl
sbb
stc
dec
out
sub
outsb
mov
jp
adc
pop
lret
sbb
ljmp
mul
sub
popa
loopne
add
incl
stos
ljmp
mov
mov
stc
or
mov
pop
into
incl
shr
jbe
js
add
imull
xchg
xorl
or
mov
mov
pop
push
inc
stos
bound
ret
xchg
or
aad
shl
pop
add
push
cli
incl
mov
mov
mov
mov
lcall
adc
or
sub
mov
mov
test
and
test
daa
push
mov
jbe,pn
movsb
int
xchg
lcall
rcrb
pop
xor
adc
mov
jns
scas
loope
out
inc
mov
xchg
push
or
sub
andl
cmp
xor
jns
jmp
and
cmc
ror
je
sbb
lahf
ret
push
ja
decl
sbb
adc
outsb
lock
out
lret
xlat
pop
in
jg
push
je
iret
imul
dec
and
fmulp
int
fdivrs
in
xlat
sbb
jg
jmp
packuswb
adc
dec
insb
or
xor
mov
scas
jg
push
lods
mov
sub
ficoml
xor
test
jle
pop
jb
push
sti
ret
cmp
fldcw
mov
xchg
sub
push
arpl
dec
test
mov
incl
or
pusha
lock
push
dec
mov
mov
in
negl
dec
cmpsb
ficomps
test
cmc
cmp
fsubr
daa
out
jp
ficoms
aaa
dec
ja
nop
jnp
dec
cmp
jmp
pop
sub
jge
jo
adcb
and
mov
push
idiv
out
cmc
and
push
fiadds
sbb
in
loope
xor
cltd
std
out
jg
sub
inc
push
jcxz
push
call
repnz
sub
jg
test
mov
pushf
movsl
fmull
or
push
out
add
pop
dec
test
das
ljmp
aam
rcrb
fisttpl
cmp
pop
rclb
mov
incl
pop
imul
push
push
adc
xchg
mov
mov
ljmp
pop
cld
sub
out
pushf
mov
insl
inc
hlt
test
or
pushf
xor
jmp
roll
inc
int3
es
cmp
dec
inc
js
std
adc
push
push
in
mov
rclb
loope
mov
mov
inc
out
dec
insb
fdiv
adc
fadds
jecxz
std
sub
rcrl
xchg
ljmp
or
pushl
call
lds
mov
jae
imul
scas
adc
stc
ret
jge
mov
dec
sbb
mov
decl
lret
jne
scas
out
in
cwtl
bound
lods
jge
jne
je
mov
ljmp
call
or
lock
es
jl
push
mov
mov
outsb
adc
ss
shll
mov
incl
mov
enter
ret
dec
lock
inc
inc
xchg
popf
inc
cmc
divb
iret
cmp
incl
sub
cmp
mov
sti
fwait
pop
adc
jg
aas
sti
sahf
dec
sbb
test
jo
jmp
outsb
daa
mov
mov
mov
jge
bound
jns
mov
sub
decl
xlat
gs
leave
xchg
mov
pop
xchg
arpl
inc
mov
mov
incl
in
popf
dec
or
or
lds
enter
sbbl
shlb
ja
pushl
pop
cli
fisttpl
add
dec
xlat
cmc
add
incl
insb
aaa
mov
jnp
xchg
jns
xchg
flds
xlat
test
dec
outsb
out
enter
test
call
fisubrl
push
jge
adcb
mov
pop
ljmp
fldl
inc
xchg
pop
leave
and
jl
insl
outsb
shrl
rorb
incl
pop
jle
into
loop
pop
stos
dec
fcompl
insb
jecxz
and
ss
inc
das
mov
xor
dec
call
or
xchg
sti
push
and
or
stos
xchg
adc
in
xchg
mov
out
lret
rorb
test
cmpsl
incl
mov
jno
mov
dec
ja
cld
test
xor
push
outsb
pushl
pop
adc
popa
cmp
les
subl
push
stos
push
lcall
jbe
push
clc
jmp
nop
inc
inc
movsb
jmp
stc
pop
loopne
dec
cltd
cmp
rclb
fisttps
lds
push
fs
lret
sub
push
cmp
decl
stc
jne
jne
pop
fmul
mov
pusha
mov
mov
dec
xchg
fidivrl
mov
adc
mov
mov
icebp
sbb
xchg
xchg
loope
ljmp
pop
and
sbb
roll
adc
out
mov
call
sub
mov
xchg
inc
mov
incl
mov
cmp
cmc
push
movsl
cwtl
push
aad
sub
movsb
push
cwtl
pop
testb
call
hlt
inc
fwait
stc
cltd
xchg
push
push
jmp
sbb
subl
adc
mov
fistpl
xchg
pop
lds
ret
out
icebp
nop
inc
filds
mov
push
fisttps
cli
mov
js
cmp
orb
mov
or
jae
icebp
pushl
shrl
push
jnp
sbb
pop
dec
es
xchg
call
in
push
inc
adcb
dec
shll
xchg
mov
repnz
xor
mov
mov
cmp
mov
pop
xchg
pop
cmp
sbb
decl
lock
mov
popa
das
mov
jnp
les
test
nop
subb
ljmp
xchg
lret
mov
mov
sub
mov
sahf
aas
int3
fcomip
add
push
adc
mov
out
sub
sbb
sub
dec
adc
outsl
ljmp
out
and
lcall
ret
ljmp
xor
jg
decl
dec
mov
push
mov
insb
mov
ljmp
mov
mov
adc
xchg
fsubrs
sti
or
fdivl
or
or
call
push
mov
xor
dec
dec
and
xchg
sub
pushl
cwtl
pop
cltd
jmp
sbb
loopne
cmp
out
xchg
add
pop
icebp
inc
or
dec
push
leave
pop
mov
inc
mov
test
jmp
stc
jmp
jnp
pop
lret
and
rcl
imul
iret
pop
jb
pop
rcrb
jecxz
decb
lock
mov
sbb
jecxz
insb
lcall
or
out
loopne
inc
addr16
call
cmp
sub
push
popa
adc
cmp
sbb
add
jmp
mov
in
rclb
push
sub
jmp
sbb
sub
cmp
add
jnp
mov
mov
call
dec
daa
in
jne
cmpsb
push
mov
xor
das
lcall
mov
or
xor
add
ja
mov
xlat
int3
out
jge
scas
rcrl
cmpsl
in
fisubrs
pushl
or
movsb
mov
mov
movsl
pop
push
inc
call
daa
mov
fisttps
cmp
gs
ret
repz
and
xor
jae
cmp
sub
int
cmp
clc
pop
adc
insb
dec
dec
pop
and
dec
cld
decl
jmp
mov
jne
pop
cmp
xchg
add
inc
pop
sbb
ret
xchg
sub
aad
and
loopne
xchg
jle
sub
lea
mov
scas
cli
jne
dec
mov
call
pop
aas
sub
xchg
push
jl
push
adcl
jb
lea
test
add
cld
mov
jbe
adc
mov
and
dec
movsl
push
out
mov
int3
aam
mov
push
adc
jle
inc
cltd
inc
xchg
in
inc
pop
xchg
nop
dec
mov
add
mov
arpl
xchg
lcall
and
gs
out
stc
add
cwtl
fsts
sbb
or
jo
sbb
mov
lock
dec
ja
sub
dec
addb
jmp
gs
push
pop
shrb
adc
loopne
out
or
pushf
mov
dec
lcall
pop
jg
adc
rol
fildll
mov
lock
jb
iret
sbb
dec
mov
push
popf
out
xor
sub
imul
push
das
loope
pause
mov
jecxz
decl
daa
nop
push
jo
mov
dec
jnp
cmp
cmp
nop
hlt
popa
cli
dec
pop
loope
out
cltd
push
push
mov
push
adc
cmpl
loop
push
adc
mov
decl
call
cli
fadd
or
mov
stc
aas
push
jecxz
incl
mov
xor
sub
daa
sti
mov
jbe
sbb
sbb
jbe
sbb
mov
adc
add
xchg
lahf
jecxz
cmp
mov
mov
dec
clc
mov
cmp
xlat
jl
hlt
mov
push
lods
lret
mov
cmp
jle
ret
ljmp
xor
stos
fsts
cli
into
ret
aad
mov
push
out
adc
jg
inc
imul
pop
lea
lods
pop
xchg
lcall
inc
pop
push
or
daa
dec
xchg
mov
aas
sarb
icebp
loop
lods
ljmp
clc
inc
fsubs
pop
iret
lahf
lea
sub
push
out
adc
push
int
lcall
hlt
inc
mov
mov
push
xchg
xchg
add
dec
mov
push
call
fstps
dec
inc
dec
stc
in
mov
jg
mov
movsl
ds
mov
out
popf
push
pop
repnz
ds
cmp
sbb
pusha
fiaddl
outsl
push
mov
lret
jb
es
jmp
mov
out
mov
cwtl
push
adc
jp
xchg
lcall
mov
std
lret
clc
mov
pop
or
rcrb
std
mov
xor
nop
push
mov
ljmp
xchg
ljmp
mov
rolb
push
dec
movsl
fsubrl
leave
in
in
jne
cld
jmp
mov
xchg
mov
int3
mov
xor
push
mov
ss
addr16
mov
lret
call
jbe
ret
out
mov
fsubrl
or
mov
insb
pop
int3
mov
movsb
pop
push
daa
pop
inc
test
mov
sti
push
jb
cmpsb
mov
mov
lcall
cmpsb
mulb
mov
sub
les
adc
data16
js
adcl
gs
cld
movsb
lods
not
imul
jo
or
ret
xchg
std
push
push
mov
ljmp
or
test
ret
inc
and
jne
pop
test
inc
sbb
ljmp
call
pusha
insl
mov
and
mov
jo
jp
popf
shr
call
mov
and
ds
adc
test
test
sbb
sub
scas
sub
mov
aad
add
cmp
out
ljmp
lods
mov
mov
xor
mov
daa
mov
ret
in
mov
xchg
pop
inc
inc
test
add
lock
loopne
enter
or
fisubs
xchg
mov
dec
jg
cmpsb
jp
loop
xchg
mulb
jl
loope
bound
sbb
cmpsl
xchg
add
push
jno
pop
cmc
pop
cmp
fldt
negl
int
push
movsl
inc
cmp
loopne
sbb
aam
iret
and
dec
dec
fldt
or
pop
clc
mov
lds
dec
scas
ja
mov
bound
pop
dec
xchg
and
mov
ret
pop
fidivl
inc
pop
mov
inc
and
sub
xchg
sahf
jmp
push
repnz
mov
and
into
cmpsl
pushf
in
pop
dec
or
arpl
decl
lock
pop
sub
mov
push
sbb
mov
sub
and
ja
fidivrs
and
sahf
fwait
xor
inc
shr
js
push
bound
imul
pop
adc
add
mov
mov
push
lods
fnstcw
jno
mov
mov
sbb
out
ljmp
push
imul
lret
jnp
pushl
sbb
xchg
jbe
ljmp
lahf
push
dec
call
sub
iret
cmp
jle
lods
mov
pushl
pop
inc
cmp
xorl
sub
push
mov
arpl
cmpsb
mov
cmp
rcl
sub
ljmp
mov
mov
inc
enter
int
push
lods
push
lock
xchg
cmc
lock
jmp
sti
bnd
cld
shl
xchg
pop
icebp
jl
pop
scas
mov
ficompl
incl
jle
cmp
outsl
lock
lock
ljmp
cmpsb
in
js
xchg
jb
mov
pushf
mov
inc
cli
sbb
and
or
pushl
cmpsb
sti
cmp
nop
mov
adc
dec
jp
scas
cmp
xchg
mov
pop
std
jmp
cmp
cmc
or
stos
andb
cli
lcall
add
out
ret
ljmp
add
cmpsb
add
dec
cmc
xor
sbb
call
mov
sub
rclb
fildll
push
push
sbb
lds
sub
and
push
clc
mov
inc
lret
and
subl
mov
push
mov
cmpb
mov
sbb
ds
jns
lret
sub
sub
mov
cmpsl
pusha
arpl
jnp
iret
pop
mov
cli
lcall
xchg
xchg
stos
pop
aaa
sub
enter
and
int3
imul
and
hlt
mov
jmp
jg
sub
insb
dec
shrl
add
jns
test
lcall
xchg
fdivs
lret
adc
outsb
imul
mov
sub
stos
daa
call
arpl
out
push
mov
lahf
push
int
pop
mov
mov
repnz
or
jmp
mov
push
mov
cld
repnz
or
mov
jle
fistpl
jle
jno
addr16
mov
push
lret
pop
push
jmp
popf
ss
lret
pop
faddl
or
aad
daa
pusha
mov
ljmp
and
mov
jmp
stos
mov
or
or
jb
add
inc
stc
cmpsb
cli
mov
jae
pushl
lret
and
mulb
cltd
les
add
jo
push
mov
jnp
mov
cmp
push
sub
add
pop
out
jg
mov
cmp
pusha
in
je
or
in
in
mov
cld
loopne
arpl
jge
push
loop
daa
sub
cli
decb
cmc
mov
sbb
jmp
push
mov
pop
enter
ja
inc
jg
cmp
sar
push
fnstsw
add
popf
outsl
and
xor
xor
mov
push
pop
sbb
inc
or
stc
and
mov
outsl
cmp
incl
aas
in
ljmp
mov
sti
xchg
pop
jae
nop
sbb
inc
mov
mov
mov
incl
and
dec
pop
push
xor
sub
fimuls
cmp
inc
mov
js
xorl
movsb
and
fnstsw
movl
adc
jge
mov
incl
aad
repz
test
sbbb
fs
adc
adc
aas
mov
je
adc
mov
jns
push
inc
pop
push
test
repnz
rorb
cmp
adc
incl
push
mov
pop
pop
stos
mov
lock
fisttps
in
adc
mov
mov
mov
adc
xor
mov
pushf
call
rolb
xchg
or
flds
jmp
outsb
imul
mov
mov
push
movl
out
popa
idivb
push
xor
dec
xchg
pop
ret
inc
sub
fcmovnbe
clc
out
mov
inc
add
adc
loopne
dec
call
iret
or
cmp
sub
les
add
outsl
jle
jno
shrl
das
clc
in
shl
leave
adc
xlat
mov
inc
fxam
add
dec
cld
and
fdivrp
adc
jecxz
push
pop
call
out
cmpsl
dec
ud1
xor
fbld
or
stos
xor
xor
ss
inc
and
mov
fistpl
mov
jmp
int3
popa
stos
cmp
in
xor
push
std
sbb
inc
outsl
call
xor
xchg
xchg
xor
mov
imul
xchg
push
push
fsubrl
jmp
icebp
sbb
in
fildll
and
add
orb
fistps
add
ret
fs
dec
repnz
mov
inc
rorb
out
shrl
lret
sub
outsb
clc
in
insb
cmp
ljmp
imul
xlat
xchg
xor
or
inc
or
imul
mov
add
cmc
decl
dec
ja
and
movsl
or
cltd
call
mov
and
push
out
std
testl
popa
add
or
decl
xchg
out
jle
mov
push
adc
mov
xchg
pop
ret
or
pushl
sbb
xor
push
shrb
sub
pop
or
sar
incl
lds
rcl
mov
pop
dec
mov
jne
dec
jbe
mov
ljmp
pop
fucom
pop
inc
jo
roll
pusha
jmp
adc
push
or
fists
add
and
inc
shll
daa
in
adc
call
mov
push
out
enter
jge
and
pop
adc
scas
push
add
incl
xchg
insl
pop
and
lods
mov
inc
insl
mov
cmpsb
into
aas
mov
cmpb
jp
ljmp
out
inc
leave
repz
cmpsl
decb
sbb
mov
cli
arpl
mov
mov
movsl
sbb
cld
call
and
loopne
mov
ficoml
xchg
les
mov
in
sti
or
jg
add
je
dec
pushf
addr16
decl
add
xchg
push
movsb
test
sbb
pop
cmp
mov
sub
test
decl
mov
js
sbb
inc
out
ret
outsl
xacquire
push
xor
jg
ljmp
lret
ret
sbb
adc
shl
mov
fisubrl
pop
faddl
stos
subb
decl
incl
loop
insb
cmp
jg
in
fisttpll
pushl
outsl
call
sub
mov
adc
jl
cmc
gs
mov
push
inc
sti
sub
mov
js
xchg
sbb
mov
outsb
in
loope
add
xchg
jmp
ds
push
pop
fldcw
cmp
dec
pusha
popa
sbb
lcall
fldl
or
mov
adc
mov
mov
loop
fdiv
mov
sub
or
imul
push
xor
sbb
mov
mov
xor
lods
adc
popa
inc
dec
out
ljmp
shl
icebp
aam
pusha
test
jae
mov
les
xor
cli
imul
imulb
add
pop
inc
in
ds
repnz
pop
mov
jmp
movsl
outsl
orl
movsb
fwait
icebp
dec
xor
mov
dec
sti
repnz
fstl
scas
mov
fildll
jbe
pushl
add
ljmp
mov
sbb
pop
cmc
pop
or
rcrl
ja
xchg
shlb
lock
hlt
decl
xlat
cmc
out
jg
cli
jno
rolb
incl
and
aaa
add
das
xchg
call
dec
jmp
xchg
add
pop
lods
ret
sub
jge
xchg
adc
fsubrs
ljmp
lahf
pusha
dec
cmp
cmovae
into
pushf
cmovb
pop
and
mov
incl
pop
push
das
mov
shll
sbb
icebp
pop
aad
lock
pushl
cmc
and
mov
out
mov
or
or
enter
cmp
inc
push
je
add
mov
jmp
sub
aaa
dec
loop
fmull
mov
and
outsl
lods
inc
incl
pop
imul
dec
cmp
fistpl
lock
outsb
pop
push
fsubrl
pop
jg
ljmp
jg
mov
out
push
mov
ret
push
push
stc
cmp
subl
inc
cmpsb
sbb
push
shrl
sar
decl
in
fiaddl
xor
aad
push
or
jecxz
mov
sbb
dec
pop
push
es
out
lcall
push
push
adc
jno
and
call
jns
push
nop
dec
mov
or
das
notb
cs
mov
jle
cmp
mov
sti
xlat
mov
inc
test
faddl
pop
ficomps
lcall
out
fdivl
fisttpll
jno
popa
orb
mov
rcr
cli
mov
jg
cmp
test
cmpsb
scas
cltd
xor
push
mov
and
xor
dec
sti
xor
adc
mov
call
icebp
ret
popf
mov
lods
cli
cmc
mov
dec
das
pop
mov
pop
pop
pop
sbb
ljmp
js
mov
jl
enter
ror
push
iret
xlat
int
nop
orl
nop
pop
add
sbb
loop
xchg
dec
fsubr
pushf
mov
pop
push
sar
lcall
push
daa
add
je
aad
arpl
fstpt
inc
iret
repnz
loopne
mov
xor
inc
stos
addr16
testl
rcll
or
repnz
dec
sbb
js
jg
repnz
jne
fidivrl
mov
lea
int3
add
ficoml
aaa
js
filds
test
dec
and
jge
ffreep
sbb
cmpb
xchg
movups
lahf
jg
sub
repnz
shrb
jge
sub
fnstsw
push
xchg
cmc
fisttpl
ljmp
or
out
aad
pop
mov
and
jmp
push
lock
pop
into
scas
sub
dec
hlt
cmp
or
aaa
inc
inc
pushf
inc
nop
daa
sub
scas
scas
clc
shlb
mov
cmp
cltd
iret
aaa
jge
jns
xchg
call
push
xchg
mov
shrl
cld
jg
shl
clc
mov
and
addb
dec
sub
lods
lcall
mov
leave
insl
push
leave
imul
pop
int3
jge
mov
jl
cmc
lcall
and
jmp
pop
inc
cmp
push
and
pop
inc
es
inc
or
mov
in
jno
fidivrl
mov
rcr
fnstsw
xchg
fcomi
outsb
jmp
pushl
dec
inc
xchg
and
fmul
xor
dec
adc
out
daa
adc
sarb
fidivl
add
cmp
cmpb
mov
sub
adc
outsb
fsubs
xchg
xor
fucom
cmp
xchg
mov
inc
int3
cmp
and
mov
imull
enter
jl
jmp
lret
jmp
jle
cmp
push
lea
sbb
cwtl
jae
das
rorl
aam
imul
cmp
mov
jle
xor
push
outsb
pusha
stos
xchg
pop
movsb
lods
movsb
pop
jne
jo
add
pushl
xchg
push
lea
sar
add
fidivrs
add
cmp
lret
aaa
fdivr
rolb
dec
xorb
bound
jg
jmp
pop
push
out
sub
bound
add
repnz
incl
gs
and
cwtl
sub
mov
lods
jns
enter
clc
cmpsb
test
out
hlt
or
mov
or
in
repz
adc
insl
pop
cwtl
clc
lcall
and
enter
mov
mov
or
cs
in
jae
jbe
cmp
pushf
outsl
jmp
cwtl
jbe
nop
adc
shrl
add
mov
jmp
mov
mov
jmp
pushf
mov
pop
xor
xorl
fdivrs
clc
pushl
adc
hlt
push
les
jmp
adc
test
ljmp
inc
sbb
dec
fnstsw
push
inc
add
in
adc
and
out
leave
jmp
add
out
aaa
sub
pop
faddl
into
test
insl
fmulp
sbb
lcall
lds
add
or
ret
push
pop
jb
enter
push
cmp
cmc
xchg
int
cs
sbb
lcall
pop
scas
dec
add
pushl
shrb
pop
scas
dec
xchg
mov
cmp
xor
outsl
pop
test
sbb
iret
mov
sbb
jecxz
popa
mov
push
lods
jmp
loop
stos
xchg
add
push
lcall
loope
imul
sti
js
cmp
cwtl
lods
fsubrl
inc
xchg
icebp
jg
cmpsb
outsl
mov
outsl
fldl
int3
inc
mov
inc
cmc
addr16
fildll
outsl
iret
jbe
in
mov
ljmp
repz
sbbl
decl
mov
arpl
xchg
cmpsb
cmp
cmp
push
add
xchg
cmp
fxtract
cmp
xchg
push
fcomps
in
push
cmpsb
mov
dec
loope
xchg
inc
mov
mov
call
sub
stos
lods
test
mov
ja
xor
sub
xchg
test
dec
aas
mov
lcall
jmp
pop
inc
add
xor
filds
add
xorl
addb
outsl
cli
jmp
adc
and
xor
or
sti
or
fisttpll
decl
int
pusha
aam
push
and
sub
push
pop
xor
fsubrs
sub
add
decl
shll
popf
xor
jl
adc
movsl
rol
mov
cmp
std
dec
mov
lcall
sbb
cmp
frstor
mov
cmpsb
pop
sbb
sub
out
push
test
jmp
jns
in
mov
sub
dec
ss
mov
xor
cltd
xchg
mov
xchg
ljmp
mov
adcl
aad
test
mov
or
xchg
mov
and
sbb
add
dec
neg
out
jmp
ljmp
mov
lods
mov
lea
nop
test
popf
cmpsb
adc
add
xchg
aam
cltd
mov
cli
aad
aas
inc
div
xor
call
scas
or
int3
pusha
popa
jo
addr16
inc
push
cmp
jp
test
dec
in
jne
clc
jecxz
sub
inc
xchg
jge
and
fcmovbe
sti
xchg
lcall
mov
sub
cmp
lods
arpl
inc
or
shll
aaa
mov
adc
and
sar
incl
add
and
or
fisttps
and
mov
stos
jg
xorl
jnp
add
push
sbb
xchg
dec
fidivrs
call
andb
cwtl
stos
sbb
add
cmpsl
ja
fwait
fwait
sbb
lds
pop
je
pop
adc
push
push
cmp
cmp
mov
or
rcll
cltd
or
rclb
cwtl
push
sahf
jne
lock
lods
jmp
adc
inc
add
push
mov
xor
cmp
out
in
lret
pop
mov
dec
mov
pop
divl
cli
cmp
shll
test
out
push
test
aaa
fmul
ljmp
xor
xchg
mov
mov
incl
mov
sarl
data16
mov
mov
popa
out
cli
mov
inc
pop
jp
sbb
cld
jl
aad
cmp
call
test
lcall
loope
xchg
mov
fnstcw
rol
lret
sbb
popa
xor
cmp
stos
mov
iret
mov
dec
and
in
rclb
out
inc
xchg
pop
mov
test
lea
test
in
mov
inc
fs
mov
test
aad
and
test
scas
clc
sub
pop
mov
lret
mov
cltd
adc
jl
outsl
sbb
sahf
out
dec
inc
scas
outsb
jg
in
pop
mov
in
jno
pop
and
pop
outsl
mov
in
inc
ret
out
xchg
dec
es
rclb
xor
out
jp
mov
or
add
jecxz
jg
shlb
jnp
inc
incl
mov
adc
xlat
xorl
in
or
gs
test
jl
and
hlt
cmp
fcomip
pushl
aaa
inc
xchg
sub
sarb
pop
into
push
fcompl
arpl
mov
es
jmp
mov
mul
inc
fidivs
in
rclb
scas
jecxz
xchg
out
xchg
cld
movsl
add
insl
sub
call
pop
lods
inc
pop
dec
inc
xchg
shl
shl
xchg
movb
es
movsb
cmp
sar
cltd
cwtl
lcall
std
call
jo
ljmp
dec
push
sbb
ror
or
gs
enter
dec
rol
loope
mov
jg
imul
xchg
leave
out
cmc
lcall
cmpsb
mov
fistl
sub
rorb
std
jne
adc
pop
jae
xchg
hlt
push
mov
or
mov
pushl
test
pop
xorl
sbb
inc
aam
iret
mov
sbb
lcall
or
jle
add
add
int
es
bound
mov
mov
cmp
fsts
int
inc
and
jnp
ret
popa
nop
inc
jae
adc
ljmp
mov
gs
test
or
mov
sarb
inc
jae
jp
into
dec
sbbl
sub
add
mov
ljmp
das
popf
pushf
pop
std
inc
xchg
in
mov
jbe
movsl
add
or
shll
mov
mov
fcomip
incl
and
mov
inc
std
outsb
inc
popa
push
cld
jno
adc
call
jg
shl
mov
cld
popa
push
subl
jle
xor
add
jns
xchg
lea
pushl
sahf
movsb
into
and
push
jg
pop
lret
or
not
pop
push
mov
iret
aad
loope
das
movsb
xchg
call
fildl
das
movsl
or
dec
loopne
sub
rcrb
push
int3
pop
ret
sar
mov
sub
pop
or
inc
sbb
and
xchg
add
pushl
inc
rcrl
fadd
fiaddl
mov
mov
loop
xchg
iret
xchg
decl
aas
jg
pushf
mov
push
cltd
or
sub
lcall
jmp
sbb
add
insb
je
sbb
dec
imulb
xchg
incl
or
dec
push
lcall
cmp
lahf
mov
jmp
jno
and
mov
mov
push
aam
or
adc
in
add
pop
cmc
lahf
adc
xor
movl
inc
or
pop
lods
xor
cmp
icebp
call
or
repz
cmp
das
clc
add
enter
adc
pop
or
sti
out
jp
add
pop
insl
sub
xor
fisubrs
inc
and
lcall
fisubs
or
test
inc
cwtl
fmulp
sbbl
lret
insl
ret
add
xchg
mov
add
inc
push
mov
pushf
pop
fisttps
sbb
orl
incl
or
jmp
mov
pop
enter
lcall
pop
push
jmp
decl
push
mov
fwait
adc
mov
push
dec
je
mov
ljmp
dec
mov
cmp
jnp
mov
cs
es
mov
or
in
push
sbb
pop
mov
xorb
inc
mov
inc
mov
xchg
cli
mov
scas
pop
mov
inc
lahf
cwtl
mov
cmpsb
ret
mov
mov
rcrl
and
jl
dec
mov
enter
adc
or
dec
push
jno
cmpsb
and
inc
pop
push
dec
push
cltd
and
xchg
mov
imul
fsubrl
fsubs
jbe
pop
stc
lcall
cmp
mov
clc
call
cmp
add
mov
addr16
sahf
call
daa
jns
cmp
sub
xchg
sub
xchg
lods
cmpsl
add
sub
xor
fst
adc
add
push
and
lret
stc
push
in
xchg
lock
lock
incl
enter
jp
jnp
jae
sar
outsl
andl
clc
scas
jno
rolb
push
iret
test
cwtl
sahf
jbe
lret
insl
fwait
jmp
test
mov
mov
mov
loope
lcall
and
mov
jb
jb
imul
mov
mov
mov
pusha
daa
in
mov
dec
sbb
ljmp
or
cs
jl
inc
xor
sbb
push
aaa
fisttpll
lcall
fisttpl
push
outsb
jp
imul
outsb
add
insl
nopl
decl
inc
jg
aas
and
sbb
jle
test
or
arpl
add
jns
lahf
inc
incl
fwait
cltd
sub
jnp,pn
xchg
mov
jle
aad
icebp
aaa
cld
outsb
pop
xor
loop
in
xchg
pop
push
icebp
push
fists
fimull
insl
pop
rcll
pop
js
pop
gs
in
scas
ja
add
fistps
mov
and
adcb
push
mov
adc
aad
add
mov
popl
ljmp
inc
xchg
shlb
lods
shll
jmp
movsl
lock
mov
in
mov
mov
pop
imul
loop
fimuls
push
xchg
lret
mov
pusha
xor
ljmp
push
push
xor
xor
xor
xchg
push
push
sub
insb
cmp
adcb
jnp
sub
clc
fnstcw
inc
ja
lret
adc
lret
pop
sbb
add
pop
call
scas
test
pushl
ljmp
push
pusha
dec
in
loop
xor
addr16
xchg
inc
test
fistl
test
das
pop
add
test
ljmp
sub
ffree
push
add
jl
xchg
and
lcall
pop
fimull
xor
stos
int
push
pop
lret
lds
in
loope
inc
jb
xchg
test
mov
lcall
ret
es
inc
pop
xor
sbb
test
push
daa
nop
mov
arpl
mov
lcall
push
mov
push
inc
fisubrs
mov
addr16
or
push
jg
cmpb
lahf
mov
je
pushl
sti
stc
in
sub
adc
into
jno
lods
dec
or
or
addr16
cli
test
and
mov
loop
sbb
xorb
testb
scas
leave
cwtl
sbb
das
lcall
dec
clc
loopne
dec
cmp
enter
icebp
adc
cmp
cmp
mov
fdivrp
das
clc
ljmp
fbld
test
shll
jl
push
mov
fisubl
out
insb
lcall
cmc
data16
repnz
adc
jge
bound
outsl
cli
dec
cld
pop
or
xor
insl
testb
inc
mov
cld
sbb
pusha
stc
jbe
mov
inc
lret
js
xchg
lea
pushf
jns
decl
mov
mov
sti
popa
jnp
cwtl
lock
fisttps
movsl
mov
out
std
incl
shll
scas
stc
inc
nop
leave
dec
cmpsb
add
fists
add
mov
fisubs
mov
add
push
or
lcall
inc
adc
stos
push
sub
mov
add
stc
mov
mov
test
mov
cmp
jo
mov
add
stc
and
lcall
and
push
mov
or
mov
adc
test
jns
push
lahf
jnp
aaa
mov
dec
lock
mov
pushf
xchg
ret
add
scas
push
clc
push
sbb
jmp
rclb
pop
shlb
rcrb
or
rsqrtps
test
xor
scas
cli
decl
call
jne
nop
xor
lcall
dec
shll
add
cli
cmp
scas
cmp
inc
ljmp
ss
nop
sub
pop
lock
lock
insb
cs
popa
push
mov
add
rorb
cmp
or
sbb
stos
mov
fadds
aaa
lret
mov
in
or
int
mov
pushl
mov
mov
call
inc
push
outsb
lods
add
mov
adc
jmp
fwait
ds
adc
and
pushf
lods
dec
and
cmp
and
data16
flds
or
mov
fdivp
decl
mov
int3
jno
shrl
lahf
das
mov
dec
mov
sbb
jg
mov
stc
push
mov
push
adc
adc
rcr
loope
in
or
cmpl
inc
dec
fidivl
lods
test
mov
mov
jmp
out
pushf
push
cli
sub
xchg
notl
pop
mov
mov
es
in
jmp
or
mov
pop
adc
mov
shrb
mov
ljmp
cli
dec
rorb
les
loopne
and
sar
in
rcrb
mov
cmc
jne
mov
or
out
jmp
mov
mov
mov
fnstenv
stos
out
dec
loopne
pop
call
leave
xchg
enter
ljmp
inc
xor
add
fs
cs
in
ret
mov
stos
add
push
pushl
int
test
sbb
and
icebp
lods
lea
insl
xchg
mov
std
clc
js
loop
cltd
nop
inc
scas
imul
dec
xchg
fisubrl
lods
lock
out
cli
movsb
xchg
adc
loop
rcrl
inc
pop
cld
cs
adc
jg
cmovg
ljmp
xor
insb
xor
or
out
imul
js
decl
jle
gs
mov
das
inc
and
add
xor
jb
das
out
or
xchg
mov
nop
cmp
js
nop
pop
mov
cmpsl
cmp
jmp
xchg
movsb
jae
jecxz
adc
adc
fisubrl
out
pop
insl
pop
bound
dec
scas
mov
cmc
pop
sahf
stos
xchg
xor
das
xchg
cwtl
push
enter
clc
mov
sahf
jge
sarb
jae
inc
popf
dec
xor
iret
adc
pushl
addl
xor
pop
cmpsb
loope
adc
dec
sbb
les
test
shr
ljmp
out
cwtl
pop
scas
jge
insb
iret
sbb
lret
sub
stos
push
incl
xchg
js
iret
lods
incb
sub
movsb
pop
pop
or
jg
fwait
les
cld
jl
sarb
pop
push
fstpt
xchg
xchg
sahf
xchg
ljmp
mov
xchg
mov
call
lods
mov
popf
fwait
in
loop
aas
xchg
mov
bound
sti
out
or
lcall
push
aam
or
arpl
dec
cwtl
mov
sub
mov
inc
loopne
cmp
dec
movups
in
cwtl
push
xor
cwtl
shll
aam
imul
lcall
dec
cltd
movsl
popa
lret
fdivl
cltd
out
icebp
jmp
jmp
lret
pushl
mov
jg
loop
add
movsl
pop
xor
mov
dec
or
cmp
mov
decl
mov
xchg
popa
bound
pop
callw
pop
xlat
jns
pop
ljmp
incl
je
ss
mov
inc
mov
adc
lds
mov
or
inc
dec
les
mov
call
mov
jno
mov
ljmp
cmp
in
mov
inc
pop
adc
negb
test
jo
std
cltd
js
pushl
imul
push
lahf
lcall
sbb
jno
cs
mov
push
mov
pop
insb
std
cld
fiadds
add
rcrb
push
xlat
xor
rol
js
or
or
adc
or
clc
pop
aaa
or
lds
incl
jl
loopne
lret
imul
sub
push
xchg
or
add
sub
xlat
adc
pushl
ljmp
fistps
data16
xchg
scas
and
addr16
sbb
and
das
and
inc
sbb
call
movsb
adc
mov
sub
pop
xlat
inc
mov
insb
xchg
add
pop
icebp
in
jmp
cmp
pop
or
mov
lcall
jbe
ds
push
call
mov
cli
lcall
jb
jmp
xor
add
inc
and
int
jl
out
or
adc
insl
cli
push
cmp
pop
into
mov
push
addr16
cvtpi2ps
lahf
dec
das
pop
push
xchg
sbb
inc
xor
jge
fisubrs
jne
and
push
jge
jp
mov
call
jmp
jmp
lret
clc
scas
in
das
push
xchg
ss
lcall
add
or
sahf
sub
and
mov
push
les
jmp
add
ds
andb
adc
and
xor
orb
loop
cltd
fwait
xchg
add
ljmp
dec
mov
stos
out
test
lcall
push
xor
aad
lock
pop
push
out
popa
arpl
cmc
sub
xor
cmpsl
loope
push
cmp
pushl
out
push
sbb
pushf
cltd
push
mov
fnstsw
mov
cmc
jmp
jg
mov
insl
sub
in
lret
mov
or
movsb
sbb
jg
fs
pushf
jge
pop
cmpsl
fdivr
test
xor
mov
popa
in
sub
jb
inc
cli
cld
ljmp
test
jno
cmp
jmp
and
lret
inc
scas
sub
sbb
les
pushl
js
cmc
je
div
lods
div
pushf
popl
loope
sub
sti
call
and
cld
mov
outsb
ficoml
dec
jb
push
inc
jmp
rcll
stos
cltd
jbe
sub
and
cs
push
out
insl
xchg
adc
dec
jp
pop
das
add
dec
fsincos
fistpll
jl
insl
nop
out
cmp
outsb
add
mov
cmpb
outsb
lahf
push
js
test
daa
xchg
ljmp
sbb
sahf
xchg
and
pushf
push
hlt
je
pop
popa
in
sti
xlat
loopne
ret
mov
lods
add
fcomip
xor
imul
mov
cli
in
inc
cltd
cltd
mov
add
call
incl
mov
cmp
jecxz
add
lods
pop
insl
or
js
lcall
cli
repz
rclb
les
mov
xor
mov
jbe
fwait
decl
dec
push
repz
filds
daa
pushf
cmpsb
movsl
inc
dec
mov
mov
pop
dec
mov
mov
cmp
je
fidivs
jmp
stos
insl
imulb
xchg
lret
jae
sub
bound
bound
cmp
cli
add
pushl
insb
cs
daa
jae
lods
out
add
xor
insl
mov
sbb
iret
sub
addr16
push
cltd
pop
push
mov
sahf
pop
out
dec
pop
mov
xor
ret
pop
inc
sub
fstl
jge
pop
and
mov
icebp
push
push
mov
adc
pushl
std
pusha
ret
jp
fnstenv
xor
shll
outsl
repnz
fucomi
cltd
dec
mov
fadd
out
adc
mov
lcall
xor
in
mov
hlt
das
add
and
ja
cmc
or
xlat
dec
movntq
and
mov
ljmp
add
test
xchg
mov
lret
pop
add
mov
mov
repnz
shlb
inc
or
iret
cmc
jmp
mov
or
jmp
into
ja
les
cmpsl
mov
out
hlt
daa
and
pop
ret
xchg
adc
call
jle
pop
add
mov
call
jno
sbb
push
inc
mov
xchg
shlb
fcomip
push
pusha
bound
inc
popa
jl
cmp
pop
mov
daa
mov
mov
fs
push
inc
jge
pop
and
adc
pop
popf
add
xor
mov
sub
call
addr16
xchg
xor
mov
sbb
and
rcrb
cld
movsb
adc
dec
mov
insl
push
pop
arpl
addr16
sbb
mov
rcl
lret
jmp
xor
mov
ja
mov
push
fsubrs
pop
test
lods
aam
insl
fnsave
mov
fildll
cmp
pop
mov
negw
mov
pop
outsb
push
sbb
fs
nop
sub
cmp
gs
inc
sub
test
ljmp
pusha
cmp
movsb
in
pushf
adc
add
push
insb
popa
mov
xor
incl
mov
or
xchg
flds
push
in
sub
dec
mov
out
mov
imul
cmpsl
mov
push
jl
xor
cmp
js
icebp
jl
dec
ret
pushf
fsubs
shlb
cltd
xchg
adc
lcall
fsubl
repz
pop
fildll
sti
push
movsl
pop
pop
inc
jmp
mov
pop
push
ss
push
mov
jle
fldl
fsubrs
push
xorb
sub
fidivrs
xor
mov
adc
call
icebp
js
cs
and
jo
adc
cmp
push
dec
cmp
mov
jmp
pusha
mov
add
mov
cli
pop
inc
clc
sbb
pop
xor
cltd
test
push
dec
jno
sbb
roll
call
lret
imul
fstpt
out
pushl
loope
jns
pop
movsb
out
xchg
in
xchg
hlt
cmpsl
rcrb
in
je
cld
mov
ljmp
lods
jnp
mov
adc
push
push
idiv
mov
sbb
out
mov
ljmp
jb
orl
cmp
jbe
xor
aad
filds
int
scas
pusha
arpl
jg
out
sbb
sahf
jbe
jns
arpl
shl
push
mov
notl
pop
xchg
dec
push
lcall
fsts
mov
out
mov
decl
dec
cs
xor
icebp
cmp
js
or
out
ret
jmp
sub
jmp
or
sbb
int
jne
sti
pop
ljmp
cmp
stos
sub
ret
push
jle
lcall
dec
xor
mov
insl
pop
insb
std
popf
jl
cmp
pop
aam
push
or
enter
lock
incl
sub
and
hlt
lods
js
dec
push
ret
lcall
call
cmp
cmp
mov
loopne
repnz
fs
jp
ljmp
mov
imul
mov
scas
add
rcrb
roll
nop
mov
call
ret
pop
sarl
fdivs
adc
lcall
jbe
dec
imul
or
or
cmp
push
insl
fcoms
and
xchg
mov
dec
pop
xlat
pop
aad
leave
push
push
and
addl
xlat
cmpsb
pop
or
add
inc
jb
sahf
enter
call
fisubs
ret
repnz
dec
xlat
pop
data16
push
and
out
cmp
pop
test
in
in
pushl
dec
mov
jmp
bound
mov
xor
imul
call
fsubs
dec
std
loopne
adc
fiadds
xchg
test
sbb
imulb
das
and
jno
rcr
lcall
sub
not
push
or
shll
sbb
push
lcall
cld
xor
dec
les
xchg
dec
mov
test
stc
repnz
enter
mov
inc
push
repnz
leave
sub
fiadds
cmp
mov
loop
dec
stos
dec
ljmp
popa
cld
js
pop
loopne
fcoms
setbe
mov
lcall
mov
push
inc
setne
aam
lods
mov
jmp
adc
jg
dec
ja
jmp
mov
mov
adc
mov
push
into
enter
xor
jmp
addr16
cmc
jnp
mov
iret
pop
fiaddl
mov
cmp
sbb
incl
cld
mov
test
in
adc
pop
pushf
pop
and
enter
mov
lcall
sbb
adc
pop
jo
pop
test
xor
cmp
or
fcomip
cmc
mov
lea
lret
sbb
ret
mov
mov
xchg
bound
sbb
fldcw
cmp
rorb
hlt
pop
loop
and
xchg
mov
push
dec
cld
jmp
lcall
adc
dec
adc
xlat
ja
shrl
shrl
outsb
pushl
je
xchg
push
mov
pop
mov
mov
inc
popf
push
test
xor
lcall
pusha
repz
adc
mov
jmp
sub
addb
push
fstp
daa
cmp
jns
in
xchg
or
test
int
pop
rol
repnz
cmp
push
mov
mov
sbb
mov
inc
imul
sub
sbb
jmp
add
fucomp
stos
lock
jmp
mov
mov
mov
lcall
outsb
adc
ret
lock
decl
lock
sbb
pusha
jg
jle
es
pop
ret
adc
xor
jg
shr
adc
adc
clc
mov
stc
pop
sahf
arpl
pop
mov
inc
stos
cmpsl
bound
in
into
mov
cmp
jp
pop
mov
adc
inc
add
fs
adc
lcall
or
mov
xchg
movsb
mov
ljmp
scas
add
push
jle
dec
out
cmp
adc
lret
cmpsl
dec
push
dec
add
jge
ljmp
imul
inc
iret
cmpsl
or
and
shrl
cmp
in
pushl
or
sbb
test
hlt
push
xor
ret
cmp
dec
loope
xlat
mov
decl
cli
int
in
push
int
xchg
push
inc
or
ret
jecxz
mov
out
sub
decl
insb
cwtl
adc
call
fld
data16
das
out
pop
mov
ds
xlat
xchg
pop
jge
add
inc
xchg
xchg
push
pusha
xchg
sub
cmpl
div
xchg
or
push
cmpsl
cmpsl
jp
in
in
call
sub
in
xor
cmp
decl
push
out
sbb
in
dec
loopne
stos
je
cltd
push
lcall
push
mov
xchg
test
ret
mov
int3
sbb
mov
sbb
movsl
adc
sti
jbe
fincstp
push
pop
mov
push
adcl
push
push
cmp
incl
pushf
cmp
sub
push
add
cld
mov
jne
shlb
cwtl
add
flds
mov
into
adc
cmpsb
xchg
cmp
lcall
push
mov
and
call
xchg
add
test
scas
fimuls
sbb
lea
mov
push
mov
xlat
jno
push
cmp
outsb
aaa
sahf
lods
xor
xchg
cmp
xchg
mov
call
sti
dec
scas
mov
pop
lock
sti
popa
add
inc
sbb
fcompl
dec
fistps
filds
cmpsl
cmp
lcall
xor
sbb
iret
lret
push
lcall
out
bound
push
loopne
xchg
push
dec
jbe
jl
cs
rcrl
pusha
call
loopnew
incb
adcb
mov
jnp
or
inc
mov
pop
daa
inc
movsb
int
outsb
push
jmp
pop
sbb
in
or
test
daa
push
cld
leave
adc
jns
popf
out
cmp
icebp
into
je
icebp
jle
leave
pop
add
data16
sub
ds
leave
mov
dec
imul
mov
outsb
iret
leave
jb
inc
xchg
outsb
cwtl
push
and
scas
js
mov
inc
inc
push
popl
cmpsl
xlat
inc
int3
inc
jmp
fisttpll
imul
stos
add
dec
pop
fldt
push
adc
lcall
xor
mov
mov
ss
fldenv
jge
addr16
dec
mov
decl
xor
mov
outsb
or
nop
repz
lahf
pop
push
stos
mov
pop
cli
les
push
loopne
fsts
js
jp
mov
pop
mov
and
mov
test
shrl
repnz
mov
jns
mov
mov
dec
jae
dec
jno
mov
sbb
mov
mov
push
shr
nop
xchg
push
lds
fbld
sbb
daa
sub
xor
lods
dec
ss
and
jne
repnz
ljmp
data16
shll
lods
shll
repz
mov
ja
incl
fsub
or
sbb
jae
jg
jmp
pop
mov
pop
fldl
push
out
aaa
iret
push
add
inc
xor
imul
mov
mov
mov
push
xchg
push
repz
jl
pop
add
dec
jae
mov
push
loopne
incl
jp
fs
push
or
mov
lea
loopne
fisttps
adc
in
arpl
xchg
mov
je
shrl
or
ja
pop
inc
decl
xchg
in
mov
icebp
xchg
jecxz
jge,pt
xor
stc
dec
mov
dec
mov
lret
jecxz
hlt
movsl
xchg
inc
jb
mov
push
or
std
inc
cmp
dec
in
inc
push
mov
cs
jmp
cli
fcmove
es
mov
or
in
gs
pushl
lsl
inc
sbb
xor
imul
jge
add
push
or
xchg
fisubs
jg
xchg
pop
test
lret
xchg
stos
xchg
jnp
loopne
cmp
inc
mov
mov
decl
lock
dec
sub
pop
loopne
pop
cltd
jmp
xchg
jl
sbb
test
push
incl
inc
push
sub
scas
xor
lock
sbb
mov
pop
and
push
addr16
jmp
popa
pop
jmp
shr
in
xchg
lock
aad
and
push
mov
cli
cmc
mov
scas
or
xor
mov
ja
test
xchg
sbb
cmpsb
jecxz
fs
push
cli
mov
cld
fcomip
lcall
repz
movsl
mov
push
mov
inc
shrb
outsl
int
sbb
ljmp
mov
fidivrl
orb
push
mov
pop
and
jmp
mov
cmp
data16
gs
cld
mov
xchg
dec
rcl
push
cmp
and
decl
inc
inc
mov
push
aad
pop
mov
pop
and
xchg
fisubl
mov
clc
roll
xor
lods
sti
ficomps
push
and
jmp
aad
cmp
dec
cltd
stos
dec
inc
or
cmc
add
subl
addr16
push
and
mov
jl
sub
loopne
sahf
or
cld
negl
test
or
mov
jg
or
mov
sbb
bound
call
fsubrl
aas
addr16
push
pushf
cld
sti
imul
lahf
out
adc
dec
push
and
mov
xor
push
inc
push
pop
lcall
jmp
mov
mov
out
test
sbb
js
add
loop
cmp
add
das
cli
ljmp
neg
pop
dec
out
cmpsl
in
sub
lods
push
mov
ja
ja
sbb
popf
aam
popa
pop
andb
into
jl
jecxz
ret
lcall
jecxz
fisubrs
xchg
mov
imul
rol
fwait
sahf
aas
cmp
clc
out
incl
or
out
stos
clc
xchg
out
or
insw
stos
xchg
ja
ret
lcall
sbb
sub
dec
jecxz
xchg
insb
insl
add
bound
or
jns
mov
inc
cli
decl
lret
scas
sub
xlat
or
mov
cli
ljmp
outsl
pop
mov
mov
add
mov
pop
cmc
pushl
pop
lds
xor
xor
sti
nop
dec
add
and
int
es
add
call
mov
sbb
movsl
stos
mov
fsubl
sbb
ljmp
insb
inc
add
js
loop
lahf
lcall
xor
idivl
or
fisttps
push
sub
in
les
in
push
out
popf
jmp
pop
es
pop
mov
call
cmp
je
ljmp
imul
ret
fsubrl
push
push
jmp
push
negl
or
aam
pop
mov
int
push
sub
pop
sub
aas
sub
flds
or
pop
sahf
jnp
cmp
movsl
mov
push
loope
pop
in
mov
mov
lcall
adc
cltd
or
fmull
pop
xchg
imul
xchg
repnz
adc
leave
pop
xchg
push
and
out
and
ljmp
imul
mov
icebp
decl
pop
inc
xor
jl
fidivl
xchg
stos
inc
pop
dec
cmp
mov
mov
sar
jmp
or
insl
scas
or
cwtl
pop
mov
xchg
or
mov
mov
icebp
adc
mov
push
inc
out
pop
ret
insl
mov
lock
inc
nop
and
jmp
fs
push
data16
out
add
and
jae
dec
pop
dec
jmp
inc
out
stc
inc
cli
popa
rep
out
cmp
inc
mov
loope
stos
mov
adcb
fdivrs
adc
and
push
clc
sbb
push
xor
cld
mov
popf
adc
inc
xchg
test
jmp
setp
push
test
or
mov
clc
fwait
and
mov
push
cmpsb
lcall
std
ficoml
jb
lahf
push
xlat
pop
inc
adc
dec
arpl
fnstsw
call
incb
xor
mov
aad
xchg
pop
sub
and
ljmp
xor
cmp
flds
add
push
mov
loope
popa
sub
mov
mov
decl
imul
or
xor
pop
insl
pop
xchg
inc
mov
dec
in
jecxz
es
pushl
sub
inc
das
addr16
out
sbb
mov
sahf
scas
mov
lahf
sar
push
lcall
mov
rolb
inc
pop
sbb
mov
pop
cmc
rorl
adc
dec
mov
loope
mov
ljmp
ja
nop
jp
pcmpeqb
test
das
dec
push
clc
divb
mov
lcall
pop
inc
fdivs
pusha
idivl
gs
loop
ret
fistps
in
sub
lods
push
mov
fisttpll
test
ss
xlat
add
jnp
outsb
adc
movsb
iret
loope
mov
loop
call
xor
push
sub
int3
scas
or
cld
not
xchg
notb
xor
lcall
or
repz
cs
data16
and
sub
mov
pop
dec
xchg
pop
push
push
repnz
das
test
cmp
mov
sub
out
movsb
add
jb
inc
jo
mov
jle
mov
sti
inc
lcall
dec
shll
ret
ret
dec
pop
xor
mov
sub
daa
sbb
fld
inc
sub
cli
sub
notl
out
fnsave
out
mov
mov
outsb
sub
jno
jl
push
cli
mov
aas
jmp
and
pushl
xchg
cli
movsl
jns
sbb
hlt
mov
push
cld
dec
enter
jnp
movsl
push
cmp
jl
cmp
dec
cs
les
rcll
ljmp
pop
adc
sub
movl
inc
push
xor
adc
mov
hlt
xchg
xor
call
in
jne
shll
sub
aas
insl
shr
mov
ret
gs
mov
lds
fcomip
cmp
dec
mov
mov
jp
loope
cltd
ret
loopne
sbb
js
repnz
sbb
mov
fisubl
mov
mov
imul
pop
mov
ljmp
shlb
sub
mov
mov
cmp
scas
hlt
incl
mov
sbb
das
xor
push
pop
inc
mov
call
fs
out
mov
repz
jmp
xchg
ss
add
test
add
lahf
pop
dec
aas
inc
push
enter
out
movsl
repnz
sub
xchg
cmp
int3
cmpsl
adc
das
icebp
xchg
addr16
pop
call
inc
xor
add
shl
in
dec
dec
jmp
rol
xor
xchg
outsb
mov
pop
test
in
sar
or
loop
jmp
and
cmp
push
pop
cs
fldenv
daa
inc
push
ljmp
fsubs
and
out
in
test
shll
jnp
or
lcall
xor
lds
fdiv
add
sti
lds
leave
sub
aas
cmpsl
es
pop
mov
mov
out
cmp
imul
push
fcmovnb
int3
repz
mov
in
jmp
ret
ret
xor
test
cmc
push
mov
jmp
ja
lcall
orb
cs
iret
pop
xchg
pop
push
imul
xorl
lods
pushl
scas
pop
popf
cmp
scas
pop
mov
inc
xchg
lods
push
in
or
sub
xchg
in
dec
jnp
add
mov
pop
inc
dec
fsubrs
cmpsb
decl
pop
sub
fmuls
jne
cmpsb
push
mov
scas
xor
sti
and
jg
in
jns
js
or
mov
imul
les
stos
jbe
sbb
jle
ret
and
das
addl
repnz
pushl
insb
and
pop
into
in
adc
test
fstpl
aas
mov
mov
daa
mov
lcall
pop
ja
insb
loope
aad
stc
loop
mov
pop
imul
dec
sub
pop
and
decl
fildl
xor
mov
cld
cmp
scas
pop
idivb
sub
sbb
ljmp
arpl
int
mov
das
inc
pop
push
adc
mov
mov
mov
dec
mov
sahf
clc
dec
dec
lock
mov
sub
add
inc
sbb
fdivrp
hlt
std
xchg
sbb
push
pop
mov
leave
and
aas
xor
addr16
or
lahf
fwait
mov
push
adc
sub
push
outsb
mov
movsb
sub
icebp
jge
mov
jl
dec
xchg
sbb
add
or
mov
xor
and
je
dec
sbb
movsb
push
xor
mov
iret
xor
mov
aas
roll
cwtl
fimull
lret
inc
jmp
repnz
in
decl
inc
sub
jno
xchg
sbb
std
mov
iret
xor
fiaddl
pop
loop
orl
incl
jb
sbb
neg
add
cmpsb
add
je
adc
in
lret
lcall
lahf
add
fsubs
mov
push
sarb
push
xor
add
cmc
jb
imul
jmp
int
fcmovne
mov
xchg
fadd
sub
add
mov
cmp
xorl
incl
mov
lcall
scas
cmp
ja
das
loope
daa
lods
into
inc
jbe
mov
jg
lcall
jns
leave
push
test
push
jl
push
movsb
push
call
cmc
jmp
mov
test
xchg
push
dec
push
scas
ret
or
sbb
test
pop
inc
jl
popa
and
out
cmc
jns
push
add
decl
test
cmp
movsl
xchg
dec
sub
sbb
rcrl
addr16
incl
aas
mov
inc
jne
pop
mov
jo
call
decb
repnz
jg
mov
scas
dec
les
sbb
test
push
adcb
sub
jmp
fimuls
inc
jg
cli
xchg
xchg
jge
in
push
cld
sbb
xor
push
mov
cmp
mov
lahf
jns
dec
lods
push
inc
sbb
int3
mov
std
or
push
out
push
cld
stos
incl
lods
sub
enter
stos
fdivl
pop
dec
in
or
sbb
call
notb
or
lcall
jae
inc
pop
inc
rol
mov
outsb
jle
push
sub
loopne
cwtl
cld
cmpsb
dec
mov
aam
sti
stos
aam
add
faddl
gs
lods
mov
loop
js
inc
cmp
std
mov
lds
jne
xchg
sub
add
mov
mov
repz
cmp
xor
inc
pop
adc
decl
sub
sbb
mov
push
dec
mov
sub
inc
xor
mov
idivb
movsl
cmc
or
pop
mov
mov
sbb
fdivl
jp
pop
ret
notb
decl
xchg
add
or
push
std
mov
nop
test
rorb
into
or
cmp
lds
xchg
and
push
mov
jp
cmp
jle
aam
pop
inc
hlt
dec
sti
pop
add
sbb
mov
pushf
cmp
stos
sub
cli
xor
sbb
mov
ret
ret
pop
aam
pop
clc
les
pushl
fwait
lret
dec
mov
fwait
inc
stc
inc
cmpb
xor
inc
push
jbe
sub
outsl
push
sub
fidivrs
out
pop
xchg
sub
jge
push
add
inc
cmp
ljmp
cmc
cmp
bound
push
mov
rclb
rorb
mov
fidivs
jno
adc
adc
lock
ss
pop
stc
xor
call
xchg
mov
jg
mov
dec
xor
xchg
inc
loopne
fstps
sti
call
test
sbb
rorl
cmp
sub
hlt
clc
aam
mov
sbb
jo
out
dec
inc
fimuls
adc
lods
lret
inc
insl
jl
jle
daa
in
dec
push
inc
and
in
pop
mov
jg
std
rorl
push
xlat
inc
jp
ret
out
repnz
pop
or
pop
lea
adcb
mov
push
iret
mov
das
cli
ljmp
cmc
fnsave
loop
add
lods
xchg
inc
pop
ret
scas
ljmp
inc
cld
pop
test
repnz
add
mov
cmp
int3
rcr
mov
lock
sub
xor
sub
int3
inc
ret
pushl
ss
shrl
dec
lret
mov
cmp
push
outsl
daa
add
cmp
jg
ja
cltd
lods
or
in
adcl
push
imull
pusha
xchg
call
in
adc
add
aam
pop
aam
test
dec
xchg
and
ljmp
dec
sahf
pop
jecxz
stos
das
ds
inc
out
dec
in
jge
jmp
std
stos
push
cmp
cmp
or
imul
fmulp
cld
push
mov
jmp
and
test
xchg
pop
mov
jg
js
scas
scas
jle
iret
xchg
clc
inc
dec
int3
fisttps
jecxz
and
push
outsl
cmp
add
aas
lahf
xchg
outsb
pop
in
add
fmuls
nop
fs
fwait
imul
ds
mov
sbb
sub
jg
div
mov
mov
in
xor
out
cmp
lods
movsb
pop
xchg
decl
sub
movsb
mov
push
das
push
mov
push
or
ljmp
loop
mov
sar
jmp
xchg
push
repnz
ds
cmpsb
shlb
inc
sbb
dec
mov
fwait
xor
ds
aad
rol
adc
dec
mov
pop
scas
pop
adc
adc
cmpb
jmp
addl
into
push
arpl
mov
incl
jns
dec
add
xchg
insl
jmp
outsl
mov
dec
mov
dec
std
in
push
pop
mov
jl
loope
call
adc
dec
sti
cmp
jns
mov
push
lea
sub
lcall
test
push
scas
pop
outsb
into
outsb
jb
push
stos
mov
mov
scas
dec
xor
iret
int3
push
add
decl
adc
outsl
mov
sar
xchg
sti
dec
adc
or
mov
or
jge
cltd
push
sti
das
pop
xor
loopne
cmp
xchg
daa
fstps
inc
mov
jmp
and
inc
aas
push
xchg
popf
icebp
and
pop
push
pop
fidivrs
cmc
mov
clc
decl
sub
loopne
fsubs
mov
push
jb
mov
call
mov
fsubr
xchg
rcr
push
add
or
repz
ljmp
mov
incl
repz
lret
out
fsubrp
loop
testb
mov
pop
cmpsb
arpl
cld
dec
or
decl
push
mov
push
outsb
dec
dec
dec
mov
mov
out
call
mov
hlt
xor
mov
imul
mov
mov
stos
fisubrs
in
cmc
pop
mov
mov
bound
les
or
fcomip
decl
les
sub
dec
imul
stos
push
aam
aam
call
and
notb
pop
std
imul
into
cmp
incl
psubsw
inc
call
mov
test
inc
outsl
sub
jmp
xor
andnps
addr16
inc
push
sub
inc
jae
cmpsb
mov
xor
inc
pushl
mov
movsb
hlt
pop
popa
cld
pop
aad
push
rorl
popf
mov
ds
mov
aaa
xor
lcall
rorl
dec
mov
mov
popf
mov
inc
mov
scas
insl
rep
jmp
mov
xorb
test
sets
sub
or
dec
mov
push
dec
lods
rcr
jmp
mov
mov
flds
pop
cmp
in
lret
xchg
mov
pushl
jl
shlb
xorb
mov
pop
and
lcall
xchg
prefetch
or
push
inc
icebp
leave
cmp
sbb
decl
test
cltd
mov
sti
mov
ror
mov
dec
insl
std
mov
enter
xor
movl
add
gs
test
lcall
shlb
cmp
jnp
ror
lods
pushf
bound
jmp
push
pop
mov
jbe
in
add
mov
cwtl
or
das
push
mov
out
pushl
push
jg
xor
cld
fidivrl
xchg
es
push
jmp
fsts
xchg
stos
sbb
cmpl
out
aas
addl
cs
fcom
andb
mov
sti
jmp
mov
xor
xchg
xchg
mov
mov
xchg
pop
and
mov
daa
test
call
test
outsb
test
pop
xchg
mov
mov
jle
dec
adc
jnp
inc
pop
mov
leave
lds
push
in
jmp
jae
rorb
data16
jae
jns
jl
sub
inc
sahf
mov
std
jmp
rorl
push
leave
adc
xor
mov
xchg
test
mov
ljmp
sarl
or
call
ret
lcall
cwtl
lods
add
jne
dec
adc
bound
notl
xor
and
add
subb
dec
xchg
shr
arpl
mov
dec
jmp
xchg
mov
jl
cltd
xor
pop
mov
jl
or
inc
inc
push
push
cld
pop
gs
sub
mov
jg
incb
add
adc
int3
dec
mov
les
pushl
or
push
lea
or
insl
xchg
sbb
insl
jbe
orl
roll
pop
in
and
movsb
clc
incl
cli
xchg
sub
xchg
loopne
pop
in
movsl
cmpsb
mov
mov
sbb
ret
cmp
jnp
push
add
lcall
push
daa
xor
stc
sarl
into
push
pop
jmp
xor
mov
cmp
sbb
cwtl
pop
and
decl
decl
insl
pop
cmpsb
mov
stc
shlb
mov
jmp
mov
mov
ljmp
insb
pop
out
sbb
fs
scas
nop
and
iret
or
mov
daa
loopne
ljmp
pop
popa
mov
out
add
sub
lds
adc
fisubs
lea
lods
jmp
call
inc
dec
add
popf
cmpl
add
ljmp
dec
push
ljmp
call
jnp
mov
push
cs
call
ljmp
vmovd
or
out
adc
xchg
pop
add
mov
or
in
ret
mov
hlt
ljmp
lock
and
cmp
xlat
in
ret
lret
push
mov
leave
cld
fsubrs
imul
push
in
mov
fldenv
or
mov
jbe
call
inc
ss
sub
shrb
mov
inc
and
clc
aaa
cmpsb
cs
call
ret
lret
mov
mov
inc
roll
inc
lock
call
icebp
mov
loop
adc
test
xor
sbb
int3
cmpsb
test
loop
aad
lret
push
xlat
adc
lcall
jae
out
or
fdivrp
pop
mov
push
xor
nop
pop
sbb
mov
jg
lock
mov
in
movsb
xor
lds
xor
js
push
in
mov
out
push
imul
xchg
stos
in
jecxz
mov
fidivrl
mov
decl
add
into
pop
es
mov
pushf
xchg
aas
push
repz
ficoms
inc
push
pop
das
add
lcall
test
test
mov
jno
fcomps
xchg
mov
loop
gs
lret
push
call
decl
shrb
fbld
scas
faddl
test
test
or
inc
sub
imul
cli
lods
outsl
out
stos
clc
in
outsb
xchg
or
mov
sti
addr16
fildl
jecxz
or
movl
rolb
enter
jbe
repz
arpl
pop
out
fsubs
mov
fisubl
dec
faddp
fiaddl
popf
mulb
xchg
rcll
pushl
mov
push
fsubrs
insb
pop
pop
popa
xchg
sbb
sub
jb
loopne
xor
cmp
dec
push
adcb
or
mov
frstor
adc
xor
mov
xchg
popf
mov
dec
fnsave
xor
pop
addb
pcmpeqd
jmp
mov
mov
pop
mov
mov
sbb
push
pusha
fiadds
pop
push
outsb
jg
incl
int
test
jbe
aad
adc
out
aaa
das
jae
aas
movsl
push
lods
rclb
stos
cli
xchg
jae
adc
xor
ljmp
mov
pop
mov
pusha
sbb
xchg
push
push
pop
and
les
cmpsl
aad
call
jae
inc
mov
mov
jmp
mov
xchg
pop
int
inc
mov
aaa
inc
and
in
daa
rorl
pop
cmp
lcall
xchg
dec
push
pop
scas
cmp
jns
fdivrs
sbb
cmp
lret
out
out
call
incl
aam
int
repz
std
sub
scas
push
push
es
ljmp
jmp
xchg
das
loope
cmp
sub
and
ss
loop
dec
pop
js
mov
add
lahf
bound
cmp
loopne
icebp
fwait
jnp
cli
sbb
sti
enter
pusha
cmc
xlat
cmp
jle
pop
lret
xor
mov
rorb
dec
or
mov
jl
cmpsl
shl
incl
mov
add
mov
inc
inc
pop
jmp
mov
call
sbb
push
cld
fisttps
dec
inc
fs
cmpb
pop
and
jbe
rorb
mov
cld
inc
gs
fwait
sub
xchg
fdivr
lahf
adc
inc
popl
mov
adc
lret
adc
mov
add
ret
jl
call
call
adc
mov
jmp
scas
push
adc
jnp
mov
cld
add
mov
fmul
mov
cmp
push
out
fs
adc
or
mov
mov
add
xchg
inc
adc
sub
inc
mov
scas
mov
cs
imul
jg
cmp
and
inc
daa
outsb
dec
mov
loop
scas
lock
in
aaa
inc
xor
or
orb
pop
mov
and
jge
push
xchg
test
dec
and
or
adc
dec
imul
lret
pop
test
or
popa
ret
adc
jae
incl
mov
sub
repz
push
and
jns
loope
cmpsb
push
fildl
call
mov
inc
push
mov
or
inc
and
jecxz
ds
xor
pop
xlat
and
fwait
decl
call
or
les
sub
cmp
in
test
dec
daa
repz
insl
testl
stos
jno
das
pop
sub
dec
mov
cwtl
xchg
inc
mov
sub
jo
mov
loopne
pop
std
out
jno
push
arpl
xchg
mov
arpl
mov
ljmp
insb
aam
sub
nop
mov
xchg
scas
mov
call
icebp
push
xchg
loopne
mov
inc
xor
clc
jmp
xchg
pop
pop
mov
sahf
hlt
ljmp
or
pushf
sar
push
stc
adc
pushf
xor
lock
jmp
in
ss
jne
or
call
outsb
lahf
fadd
and
push
mov
std
dec
test
mov
mov
sahf
fucomp
pop
or
fwait
mov
fs
xchg
sti
sbb
mov
mov
rcll
das
mov
push
and
lcall
ret
sahf
pop
and
icebp
ja
push
lods
cmp
pop
mov
push
inc
sub
xchg
dec
xchg
mov
or
ljmp
dec
lret
lds
or
push
or
fcomps
std
fisubl
mov
in
arpl
in
popa
push
jl
out
jg
jb
add
mov
call
loopne
cmp
inc
cmp
fcoms
scas
daa
jmp
dec
cmpb
aas
mov
sub
jbe
sbb
dec
mov
loop
loopne
inc
movsb
xor
out
jnp
punpcklwd
xlat
imul
sahf
fiaddl
imul
mov
outsb
mov
push
and
cmp
pushl
push
aad
xchg
push
xchg
incl
int3
gs
test
sbb
flds
call
push
sbb
shlb
adcb
add
adc
lahf
pop
imul
ljmp
daa
fildll
in
mov
dec
hlt
cmp
fldl
mov
jae
pop
sub
in
cmp
sub
cmpb
test
mov
sahf
push
inc
xor
jg
sahf
call
push
mov
sbb
decl
outsl
adc
movsl
int3
cmp
and
push
ja,pn
xor
fidivrs
lcall
xlat
fs
xchg
jb
pop
push
push
sbb
gs
mov
loopne
cli
add
fisttps
sbb
or
jnp
inc
icebp
xor
adc
add
pop
and
mov
push
cltd
jl
fstl
cmp
decl
or
loope
dec
jbe
xchg
pusha
adc
in
pop
push
cmp
decl
xor
mov
push
insb
mov
push
das
xor
jb
es
data16
in
jl
jp
fwait
jmp
cmp
mov
in
scas
jle
lcall
lret
xchg
in
push
popa
inc
out
fdivl
jb
dec
add
cmc
mov
push
in
cmp
decl
out
mov
push
dec
add
cmc
fildll
rorl
es
ljmp
push
popa
test
pushf
fadds
cmpsl
sub
xor
data16
lods
push
jnp
jg
cmp
lcall
stos
fcompl
fstl
add
aad
xlat
clc
decl
mov
out
mov
dec
fwait
add
xchg
jg
ja
xor
jle
hlt
pushl
fxch
lds
mov
out
nop
icebp
xchg
or
lcall
jmp
movsb
test
mov
in
xor
ds
incl
push
jecxz
stos
xor
and
mov
loope
aaa
fwait
arpl
add
push
outsl
push
popa
inc
xchg
arpl
mov
mov
jmp
insl
dec
and
fbstp
cwtl
xchg
ficoml
mov
jg
add
cmp
mov
sub
sbb
xchg
popa
scas
push
mov
aam
es
xor
inc
aaa
stos
cmp
pop
mov
fucomp
push
cwtl
arpl
lret
decl
fisttps
mov
scas
jecxz
std
daa
and
insl
mov
and
outsl
fdivrp
mov
je
in
ss
sub
add
out
out
cmp
incl
sbb
scas
psubsw
movsl
jg
aaa
xor
scas
or
popf
filds
mov
mov
cmp
int
lret
xor
xchg
mov
push
or
incl
fisubrs
sbb
cltd
lcall
sbb
cld
pushl
push
sbb
rcrb
sahf
push
lret
fcmovu
lret
sub
testb
inc
ret
mov
jae
sbb
cmc
faddl
sbb
cmpb
mov
ljmp
ljmp
stc
nop
mov
js
incl
dec
jmp
dec
les
cmp
xchg
adc
mov
jmp
insl
cmc
lret
xchg
call
stos
jmp
fmull
cld
scas
in
sbb
test
mov
cli
fmuls
stos
push
imul
aad
pop
or
ljmp
ja
roll
bound
mov
ret
lods
push
sbb
lcall
pop
and
or
xchg
pop
ret
cltd
clc
xchg
mov
jl
insl
pop
loope
scas
mov
outsl
nop
adc
je
ja
xchg
in
movsb
mov
in
ljmp
fs
or
fisubrs
mov
popf
mov
fsts
out
inc
xchg
daa
inc
ja
pushl
or
xchg
mov
xchg
pop
or
pop
push
jnp
sbb
popf
mov
inc
inc
scas
jp
adc
cld
ret
imul
adc
jnp
pop
sub
hlt
addr16
jge
jge
dec
bound
inc
inc
xor
mov
lds
test
jl
and
pop
hlt
sbb
pop
repnz
mov
mov
xchg
sub
dec
out
pop
add
test
je
lods
ljmp
cmp
out
clc
sub
add
roll
pop
push
jne
xor
jmp
jmp
jl
pop
mov
in
adc
push
mov
pushl
inc
jb
cmp
mov
mov
inc
mov
clc
int
insl
scas
mov
mov
lcall
les
orb
push
lahf
sub
stos
cli
pop
inc
adc
movsl
cwtl
sbb
hlt
hlt
out
pushl
in
les
sub
jnp
pop
cs
rol
lret
incl
inc
rorl
aaa
cmp
inc
and
outsl
aaa
push
mov
push
pop
and
incl
ds
sbb
xchg
adc
mov
push
xchg
mov
sub
jne
and
daa
test
scas
incl
loop
xchg
jp
cmpl
inc
push
xor
pop
push
hlt
lea
pushf
aaa
xlat
push
inc
cmp
outsb
xchg
sbb
fucomp
mov
sbb
inc
cmp
mov
mov
push
or
call
jp
out
das
testb
movsl
movsl
sub
dec
es
fcos
je
jecxz
call
ljmp
mov
testb
ret
dec
cmp
rol
sarl
enter
call
pop
xchg
repz
cmpsl
dec
shll
cmp
cs
ss
test
cmp
adc
add
pusha
xchg
or
sarb
lcall
pop
sbb
and
ret
flds
repz
and
fnstenv
insb
cmp
fisttps
lcall
pop
repz
sub
push
lods
inc
mov
mov
decl
add
gs
orl
xchg
lods
jns
push
decl
mov
std
lock
cmpsl
cs
stos
mov
pop
mov
fs
mov
test
xchg
popl
sar
jp
pop
shrb
cmp
or
ljmp
adc
inc
mov
inc
es
cmc
or
data16
xchg
cmp
in
push
call
jo
jge
mov
test
fldcw
popf
movsl
mov
sbb
cmc
push
ljmpw
ljmp
mov
ljmp
imull
cmp
repnz
pop
push
or
mov
cmpsb
ret
inc
cmp
push
mov
pop
mov
nop
sub
jno
fwait
jle
pop
inc
rorb
and
xchg
in
sarb
test
pop
cmp
mov
push
sub
rcr
adc
insl
cmp
call
inc
xchg
pop
inc
out
or
int
out
mov
loop
jb
hlt
sarb
lahf
add
lcall
gs
pop
mov
loope
and
insl
insl
mov
push
inc
andb
push
lods
shlb
adc
inc
dec
dec
loope
push
add
lret
es
xchg
jmp
pop
adcb
dec
mov
outsb
sbb
sub
ljmp
inc
mov
fimuls
pop
sbb
notl
sub
sub
mov
cmp
call
insb
jo
xor
out
sub
in
mov
je
mov
sbb
jg
das
shlb
cs
es
and
lcall
ljmp
pop
and
push
mov
mov
imul
or
xchg
in
adc
decb
sar
push
jno
rcrb
mov
push
dec
adc
jle
cmp
das
movsb
inc
outsl
mov
jg
xor
pusha
jecxz
pop
dec
mov
push
mov
repz
xor
jns
or
inc
xchg
movsb
pushl
dec
test
pushl
jg
daa
cmpsl
loop
xchg
out
dec
stos
pop
pusha
loopne
pushf
xchg
repnz
add
jg
push
into
dec
into
push
push
push
push
dec
sbb
pop
mov
dec
pop
loop
out
nop
movsb
dec
adc
jle
incb
lods
mov
dec
cs
fisubs
jno
jmp
inc
adc
and
je
dec
outsl
pop
push
add
lock
icebp
lcall
testb
pop
ja
xchg
push
ljmp
dec
ja
pop
jle
jb
push
pop
shl
or
outsl
rcll
sbb
pop
roll
bound
sub
es
cs
sbb
mov
lret
mov
cmpsl
xor
push
mov
sub
lahf
enter
call
jg
sbb
data16
fsubs
cwtl
rcr
rorb
je
dec
jno
sbb
nop
mov
fcompl
cmp
movsb
add
jge
or
addb
clc
shr
or
inc
mov
mov
fisubs
jmp
pop
add
shlb
cld
ljmp
push
pushf
xchg
sbbb
roll
sub
iret
rcr
dec
fwait
push
insl
call
incl
ljmp
test
sub
sbb
cmp
rclb
xor
pushl
sub
stos
mov
dec
xchg
pop
inc
out
lods
cmc
sub
sbb
test
jmp
lcall
pop
push
dec
lret
ret
dec
div
mov
push
jge
arpl
mov
data16
outsl
cmp
push
fsubr
or
decl
push
mov
mov
loopne
lahf
in
pop
pop
xor
inc
adc
push
pop
ror
ret
insl
push
push
and
push
lds
jecxz
arpl
decl
mov
cwtl
dec
mov
mov
cwtl
mov
add
das
call
inc
test
in
ret
stc
outsb
pop
add
pop
inc
leave
mov
fimull
sti
fsubrs
sub
repnz
sub
sub
pop
cld
jne
xchg
and
scas
pop
and
push
cmp
cmp
push
mov
dec
push
aaa
fdivr
call
jno
stos
mov
dec
adcb
subl
add
mov
push
cld
call
sub
pop
repnz
fisubrl
xchg
and
pusha
mov
mov
adc
jmp
subl
sti
and
inc
push
jnp
sahf
xchg
xor
jb
mov
dec
call
pushl
mov
mov
jb
iret
pushf
pop
push
xchg
push
adc
xor
lcall
test
pushf
dec
xchg
pop
jmp
flds
aam
andb
mov
mov
lcall
mov
mov
pushf
adc
push
inc
pop
pop
jl
repz
jmp
insb
roll
sub
cs
inc
stos
xchg
push
repnz
xchg
jb
add
or
dec
push
cmp
mov
xchg
inc
outsb
push
fisubrs
mov
ljmp
push
push
aaa
mov
pushf
cld
rep
clc
mov
xor
cltd
xchg
push
daa
fdivl
push
fs
jg
sub
rcll
fcomp
lods
test
jl
mov
lock
test
fcom
sub
push
cmp
ljmp
ljmp
sbb
cs
jge
movaps
dec
inc
mov
in
xchg
and
mov
xlat
and
adc
lods
aas
das
enter
or
dec
mov
popa
push
xor
ljmp
sub
mov
mov
shrl
fistpll
mov
cmp
pop
lret
xchg
les
pop
add
sti
jae
pop
jl
sti
push
xlat
fisttps
push
pop
jae
push
testb
xorl
mov
push
ja
aaa
std
call
jae
mov
push
xchg
xor
stos
jae
mov
out
insb
cmc
gs
xor
ret
mov
pop
pop
jecxz
std
lcall
ret
jg
pushf
xor
sub
xor
jo
mov
mov
aaa
jge
insb
repnz
pop
dec
xor
rol
test
scas
cli
lock
icebp
or
push
cli
or
and
add
dec
jge
and
scas
js
ror
inc
or
lcall
cmp
stos
rcrb
xchg
icebp
movsb
push
popa
mov
mov
or
ljmp
pop
mov
mov
mov
outsl
addr16
popf
shll
push
jecxz
sbb
adc
call
ljmp
fstpt
push
sub
and
popa
dec
fwait
mov
test
lds
push
mov
mov
js
jns
dec
daa
mov
rclb
mov
mov
out
xchg
ficomps
dec
mov
in
sbb
lret
add
scas
mov
push
aad
cwtl
lods
sbb
dec
lret
rcrb
and
sti
arpl
pop
pop
ss
push
push
in
and
sub
mov
push
mov
nop
mov
cmp
sub
dec
or
popf
insl
and
fs
push
and
lcall
adc
je
jge
arpl
xlat
jge
imul
mov
push
shlb
sbb
mov
lahf
push
inc
neg
cld
int3
dec
enter
inc
lcall
sbbb
loope
imul
mov
sarl
add
jns
push
fadds
push
dec
fdivr
mov
mov
cmp
push
inc
arpl
mov
push
jnp
andl
movsl
js
sbb
push
xorb
xchg
cltd
jge
outsl
fsts
leave
cmp
call
dec
push
mov
xor
ficoms
pop
icebp
cmc
bnd
pop
push
push
mov
mov
mov
decl
into
ss
jle
jns
sub
lds
repnz
dec
or
outsb
into
xchg
cmp
pop
pop
test
mov
dec
insb
cmpsl
fisubrl
mov
outsb
outsl
mov
daa
lods
add
aaa
cmp
pop
aaa
jecxz
cmp
push
jge
mov
mov
sub
mov
aaa
dec
xchg
push
stos
xchg
cwtl
adc
les
cmpsl
ljmp
push
sahf
and
aaa
rcrl
sub
dec
into
xlat
arpl
cli
pushf
cmp
mov
mov
sbb
mov
aad
pushl
std
fdivp
and
lods
sahf
adc
daa
insl
xchg
sbb
cmpl
push
insl
rolb
cwtl
push
add
mov
and
cmp
push
mov
jmp
jnp
inc
push
rol
test
or
add
aaa
pop
pop
rcl
in
sub
mov
inc
int3
int
jmp
cmp
cmc
sub
jg
mov
stos
aam
push
fistl
icebp
push
bound
or
jg
xor
out
cmp
aas
mov
jl
lahf
icebp
add
inc
gs
lcall
dec
xchg
dec
je
inc
lret
mov
addr16
adc
lods
pop
xor
sub
ret
xor
iret
mov
imul
xchg
push
mov
mov
sbb
scas
out
clc
mov
and
xchg
and
mov
push
sti
cmp
call
or
adc
add
push
xor
iret
insb
popf
out
pop
adc
jl
popl
push
iret
xor
stos
xchg
adc
mov
mov
je
push
insl
push
lcall
adc
fs
ds
outsl
mov
in
ds
lcall
std
lock
pushl
and
and
or
dec
xchg
adc
popf
mov
repnz
js
dec
lcall
cmpsl
xchg
cwtl
push
scas
in
sub
mul
decl
aas
sub
cmc
out
mov
xchg
lahf
pushf
insb
jle
jne
sahf
push
ljmp
mov
ret
jno
push
push
mov
popa
call
push
mov
std
push
lock
mov
mov
fbstp
loope
lahf
jecxz
scas
jnp
fmull
mov
dec
bnd
xchg
mov
jne
pop
cld
iret
and
lea
shlb
inc
inc
inc
or
sub
sbb
jl
ljmp
js
mov
imul
sbb
sub
mov
int3
xchg
out
mov
es
fdiv
jo
fiadds
pop
mov
mov
mov
in
pushf
push
rcl
and
sbb
test
enter
sub
push
outsl
aam
incl
es
sbb
pop
push
push
aas
inc
sub
mov
imul
clc
data16
call
repnz
or
rclb
push
jmp
and
ja
xchg
orb
push
lcall
repz
lcall
es
xchg
icebp
sbb
cmp
mov
ja
jecxz
sub
daa
jbe
jbe
daa
jae
fidivrs
enter
call
stos
push
mov
jg
lahf
cmp
mov
das
xchg
inc
jp
shll
dec
daa
sti
iret
and
jp
sbb
std
adc
out
inc
push
pusha
mov
mov
inc
mov
cld
sub
jge
mov
xchg
test
js
and
adc
mov
fprem
push
call
inc
mov
cltd
shl
pop
sbb
ficompl
call
das
pop
or
in
rolb
in
jno
xchg
pop
movups
sbb
lea
adc
jecxz
ljmp
push
mov
cld
xchg
mov
fdiv
in
js
add
cmp
jb
add
stos
jmp
adc
jbe
lret
sbbb
stos
push
inc
adc
ss
cmp
pushl
addr16
cld
data16
pushf
aas
divl
dec
inc
lods
dec
adc
je
fildll
cmpsl
lret
shl
shll
add
inc
adc
lods
call
or
out
sbb
rcrb
icebp
leave
ljmp
lock
decl
lock
or
imul
rep
adc
mov
setno
mov
call
xor
lret
xchg
insl
movsl
test
aaa
cmp
jl
inc
popa
ja
jae
les
decl
aad
xor
pop
cmpsb
xor
xlat
mov
mov
ss
jge
cltd
jae
xchg
leave
sti
je
fldpi
push
sbb
movsl
andb
jge
stc
cmpsl
adc
adc
sub
lret
pop
test
pop
cmp
std
cmpsb
ror
add
arpl
pop
cmpsl
jno
mov
incl
in
aam
inc
leave
pop
sahf
lods
andl
sbb
sbb
fisttpl
int
xor
mov
dec
cld
inc
xchg
sbb
mov
dec
push
rcrl
fdivr
mov
loop
je
stos
mov
stos
sbb
and
add
cmp
sti
andb
outsl
sbb
testb
out
add
inc
insb
adc
fs
push
dec
popa
add
xlat
mov
xchg
mov
cmp
fldl
xchg
pushf
test
fimuls
jl
imul
outsl
mov
fcomi
out
xchg
call
jmp
push
aad
jbe
imul
ficomps
lret
and
int3
fisubl
pop
mov
mov
push
scas
xchg
jo
stos
scas
pop
cli
jp
cli
incl
nop
jo
lea
pminsw
je
or
cmp
pushf
outsb
lcall
mov
xchg
and
ficomps
jo
ret
and
pop
movsl
pop
push
sar
jo
mov
test
pop
mov
dec
lods
xchg
mov
sub
cs
mov
pop
int
cmp
in
add
fmuls
xchg
push
leave
inc
ficompl
cmp
fisttps
pop
mov
test
push
cwtd
ljmp
push
adc
inc
sti
outsb
jp
paddusb
out
pop
sti
cmp
dec
mov
in
sar
inc
std
mov
leave
outsb
xchg
dec
hlt
sti
sbb
mov
pushl
push
dec
fs
jge
xchg
push
and
decl
cmp
sub
in
inc
and
fcmove
cli
pop
out
push
fldenv
call
imul
aas
cmp
lahf
inc
mov
jb
mov
cmp
mov
in
faddl
gs
js
lods
repz
dec
sar
call
insl
popf
fidivrl
inc
aas
adc
cmpsl
cld
mov
inc
test
cwtl
cmpsl
cmp
pop
std
jmp
js
jns
and
mov
fldcw
cs
mov
dec
ljmp
icebp
rclb
into
adc
addr16
mov
mov
dec
xor
out
pop
add
mov
add
inc
mov
or
push
jne
mov
ja
scas
push
lret
jae
daa
mov
inc
movsl
ret
mov
and
mov
sbb
mov
or
ds
out
and
jb
push
dec
repz
lret
call
loop
icebp
pop
mov
xor
sbb
decl
cmp
push
cmpsl
push
sahf
ret
xchg
mov
rclb
call
jns
popf
das
mov
test
int3
fldl
js
outsb
mov
ret
push
mov
lret
adc
push
ret
faddl
xchg
mov
dec
inc
sub
mov
out
sbb
in
adc
sahf
rcrb
cs
rcll
xchg
mov
sbb
jp
lcall
and
hlt
cmp
jo
ret
hlt
adc
dec
lds
inc
repz
cmp
xor
jmp
jmp
push
test
mov
sub
jmp
pop
adc
xchg
pop
sub
imul
aas
and
sahf
jl
int3
ret
push
pop
add
cli
decl
fwait
in
sub
cmp
pop
push
mov
aaa
clc
hlt
xchg
ljmp
cli
out
dec
frstor
add
jle
jo
push
hlt
outsl
cmp
ljmp
fld1
mov
aad
scas
push
push
and
shll
sahf
sub
into
repz
cmp
pushl
dec
test
mov
enter
mov
stc
pop
popf
out
jg
sbb
mov
hlt
mov
pusha
sub
outsb
jbe
out
jne
cmp
jmp
call
add
add
int
fmull
pop
push
fimull
lcall
test
divb
std
add
pop
or
mov
jae
dec
sahf
mov
sub
mov
jmp
inc
test
int
test
into
or
sahf
pushf
add
outsb
cmp
mov
fidivs
in
and
mov
out
ds
xchg
arpl
ljmp
dec
jmp
clc
aad
lods
arpl
sub
push
fsubp
lahf
mov
push
bound
push
mov
push
das
adc
xchg
dec
mov
scas
ror
inc
inc
inc
fdivrl
xchg
push
incl
into
pusha
inc
es
dec
add
add
xlat
jmp
lea
dec
mov
call
sbb
pop
xor
cmc
mov
popa
fwait
sbb
stc
in
mov
fcoml
decl
decl
jg
pop
inc
popf
inc
add
cmp
mov
ficoml
call
fwait
stos
push
xchg
jle
shl
out
pop
ds
jg
adc
inc
scas
ja
xchg
and
dec
inc
cmp
jmp
int3
js
xchg
shr
stc
mov
cmc
push
roll
add
ljmp
mov
daa
jmp
xor
jb
daa
and
jno
dec
pushf
mov
mov
call
mov
jb
repnz
sbb
fbld
rol
and
jmp
cmc
pushf
ffreep
xchg
add
mov
fbld
inc
jl
sub
es
call
xor
divps
ret
les
dec
sub
loop
jne
int3
push
push
jg
ljmp
lods
repz
out
lods
push
inc
and
mov
bound
call
addb
and
fldenv
fstpt
shr
mov
adc
xchg
fwait
nop
dec
insl
inc
mov
push
incl
xchg
push
and
xor
add
lods
idivb
nop
movsb
adc
pushl
sbb
and
shrb
inc
popa
xor
adc
xchg
and
leave
fstl
bound
sbbb
sbb
scas
in
mov
dec
jl
pop
dec
mov
imul
cmp
mov
call
lods
or
mov
stos
std
xchg
aad
icebp
lods
mov
inc
push
bound
dec
inc
mov
add
je
dec
aam
sbb
pushl
sbb
scas
xchg
lret
sti
mov
fst
jno
nop
mov
lcall
mov
mov
push
insl
lret
movsb
pop
jo
and
adc
mov
aad
mov
pushl
out
ss
imul
push
mov
mov
inc
cmpsl
incb
xchg
jg
jmp
mov
dec
sbb
jg
iret
xchg
cs
pop
ds
dec
stc
addb
ljmp
jle
push
sbb
dec
inc
cmp
and
notl
je
mov
jmp
pop
pop
mov
dec
pop
push
jp
pop
shll
fdivs
cmp
sahf
iret
cmpsb
mov
decl
or
cmp
imul
mov
xor
xchg
stc
jae
mov
rcr
call
add
mov
out
mov
cli
mov
outsb
notl
jge
mov
cmp
sub
mov
stos
ret
call
push
scas
lahf
repz
cmc
cmp
xchg
cmc
and
aad
mov
mov
xor
mov
push
dec
push
out
ja
fcomip
shrl
aas
js
iret
cmp
jp
shll
inc
outsl
fcomp
je
ss
arpl
mov
gs
fucomp
clc
xor
out
xchg
fistps
jae
imul
pop
lahf
add
mov
sub
pushf
pop
pop
outsb
das
xchg
xor
mov
cmc
fdivl
push
xor
jmp
mov
movsl
add
in
ljmp
pop
scas
insl
leave
or
fldenv
sbb
cvtps2pi
shl
icebp
adc
pop
cmc
cmp
xor
loope
insb
sub
and
mov
frstor
loopne
xor
add
dec
mov
xor
mov
sahf
xor
xlat
sahf
adc
test
inc
jg
incl
or
xor
xchg
fistl
mov
dec
incl
pushf
mov
mov
aad
pop
push
aam
lcall
xchg
jecxz
ds
pusha
lcall
xchg
push
sbb
scas
imul
test
mov
pop
aas
cmp
inc
call
cmp
in
push
xor
and
xchg
jge
shr
mov
sub
pop
mov
stos
aas
mov
mov
in
daa
mov
clc
jbe
jge
pop
xchg
or
stos
in
mov
xchg
out
sub
sbb
mov
mov
push
addl
out
jmp
sahf
inc
xchg
shll
push
adc
mov
add
jle
punpcklwd
es
inc
lahf
jne
jb
jmp
cmp
aaa
jbe
aaa
and
or
pop
cmp
jmp
dec
cltd
nop
pop
sahf
mov
pop
and
scas
mov
and
sub
push
jmp
mov
xchg
cmp
jle
or
ja
sbb
les
jae
rcr
push
outsb
loope
pushl
mov
xchg
or
cmc
loopne
or
mov
jle
push
or
pop
cld
xchg
mov
das
push
aad
pop
scas
push
rorb
pop
popl
popl
mov
add
les
sbb
and
filds
orps
pop
out
add
popa
adc
inc
lahf
cmp
adc
inc
pop
repz
shr
push
push
shrb
cs
in
push
adc
scas
cmp
pop
mov
pushl
enter
cld
sub
mov
jnp
lret
lea
cmc
popa
cmp
cmp
loopne
call
pop
pushl
lahf
out
inc
enter
faddl
jge
sbb
add
sbb
out
incb
roll
jp
je
cmp
pop
mov
push
jge
push
sub
in
inc
mov
movsb
pushl
dec
clc
lahf
push
arpl
clc
js
jmp
push
cmc
testl
mov
pusha
cld
push
push
es
aas
incl
ss
jle
jecxz
dec
mov
and
lods
iret
or
sbb
xlat
mov
ljmp
cli
ds
push
repnz
push
lret
jg
push
push
sbb
dec
test
stc
imul
mov
jae
adcl
push
pop
in
cld
dec
ret
adcl
jne
or
incl
xchg
xor
and
sahf
in
pushl
add
cmpl
xor
loope
ljmp
mov
pushl
dec
inc
ret
fnstenv
xor
cs
adc
cmp
sbb
arpl
lea
push
movsb
and
arpl
mov
jp
adc
daa
lods
jg
sbb
xor
outsl
dec
jp
cld
call
sti
rcll
jns
les
outsb
cs
inc
sub
imul
into
and
imul
mov
xchg
je
sahf
repz
dec
sbb
rcr
add
mov
jo
mov
repnz
inc
sub
addr16
xor
xor
pop
push
pop
push
int
xchg
mov
ljmp
hlt
jg
xor
sub
xor
push
and
iret
shrl
out
sub
repz
jg
es
cmp
sti
mulb
mov
cmp
mov
hlt
decl
repz
dec
push
addb
out
fs
call
addl
cli
lods
test
fistps
addr16
jmp
xchg
dec
xchg
lret
push
mov
in
inc
mov
les
sbb
insb
ss
inc
decl
mov
sub
xor
test
cmp
ja
sbb
out
and
mov
push
mov
push
sbb
xchg
pop
cltd
jb
push
mov
jp
and
ljmp
xor
pop
call
mov
stc
lods
jl
mov
pop
xorl
dec
xchg
cli
cmp
cmp
and
sbb
xchg
push
test
pop
sbb
pop
push
inc
pusha
out
cwtl
or
mulb
call
loope
xchg
aas
mov
icebp
jp
xchg
push
inc
jmp
cmpsl
mov
add
sbb
ret
dec
pusha
lods
sarb
insb
movsl
bound
das
les
je
fnsave
lds
mov
outsb
pop
pop
xchg
or
mov
loop
or
ss
cld
jl
ljmp
and
cmpb
mov
leave
add
mov
inc
popa
jle
in
push
mov
decl
mov
loopne
pushf
pop
rorb
dec
imul
out
in
jmp
js
ds
negl
xchg
imul
imul
mov
mov
mov
aaa
out
pop
inc
jmp
cmc
push
push
inc
cmp
sub
sub
mov
and
sbb
xor
jmp
insb
in
into
push
dec
jno
sbb
test
inc
call
or
inc
adc
xor
pushl
decl
mov
inc
xor
mov
sub
ss
push
adc
pop
ljmp
pop
push
in
cld
push
xchg
mov
inc
push
mov
and
fwait
not
xor
fnstenv
and
test
jno
cmc
movsl
jo
or
jbe
popf
loope
or
cmp
aam
push
lock
mov
hlt
out
add
push
jp
stos
dec
add
jecxz
cli
ljmp
jle
mov
jle
jo
cmp
add
push
dec
fcompl
imul
jo
call
push
pop
jae
xchg
lcall
dec
cmp
lock
pusha
test
jbe
mov
cmpsb
jle
popf
rcll
pusha
cmpsb
and
pop
sub
cmpsb
mov
lds
loop
ror
rorb
sbb
xor
mov
mov
loop
repnz
xchg
mov
push
aad
mov
decl
or
mov
test
mov
cmpsl
fdivrs
xchg
sub
jg
mov
es
push
mov
push
push
cltd
push
pop
jbe
jo
rolb
call
int3
push
pop
add
icebp
inc
jnp
cmpsb
movsb
addr16
inc
imul
outsl
inc
push
sarl
pop
fcmovb
adc
sbb
popa
mov
cmp
dec
pop
in
popf
hlt
nop
sbb
inc
icebp
ret
stos
inc
mov
call
adcb
xchg
mov
add
lods
mov
pop
cmpsb
xchg
int3
and
rorl
dec
inc
popa
lcall
add
cld
loope
and
out
incl
sti
mov
push
movsl
sbb
dec
adc
adc
pushf
out
mov
insl
push
loope
lcall
push
and
lock
nop
adc
pop
add
mov
mov
push
mov
movsl
dec
lcall
fisubrl
jge
cli
add
inc
orb
repnz
sahf
loopne
jg
mov
jb
data16
or
or
out
adc
inc
dec
add
cld
xchg
mov
imul
shlb
and
sub
push
pop
adc
scas
mov
cltd
lret
sub
aaa
idivb
add
repz
or
jmp
pushf
in
and
lods
jbe
xchg
sbb
sub
sub
pop
mov
repnz
ret
into
dec
jmp
shrb
and
inc
and
ds
sub
lods
mov
mov
inc
pop
daa
decl
lock
mov
cs
xchg
lahf
insb
cmpsl
stos
jae
dec
push
and
dec
pop
mov
mov
pop
lods
cmp
pop
sbb
push
or
lods
mov
xchg
cmpsb
pop
pushl
sbb
in
mov
jg
push
adc
incl
movsb
aam
std
aam
jg
sar
push
ds
loopne
ss
dec
push
insl
out
clc
out
inc
insl
rorl
mov
sti
sar
cmp
push
cmp
pop
add
push
jbe
pop
or
sub
stos
cli
mov
hlt
xor
add
movsb
lcall
fimull
pop
mov
add
jmp
cwtl
fwait
and
loop
ret
mov
in
and
lcall
sub
mov
movsl
xchg
adc
mov
addr16
push
mov
decl
pop
sub
pop
push
add
jg
sbb
frstor
fs
out
nop
mov
aas
iret
insl
xor
aas
or
sbb
fwait
or
cmpl
inc
rcr
push
mov
and
out
sbb
mov
repnz
mov
icebp
insb
sbb
mov
popa
sbb
stos
mov
xchg
mov
add
pop
into
mov
mov
jb
push
mov
outsl
mov
outsl
dec
scas
fstl
ds
dec
sbb
insb
incl
ja
lock
inc
pop
pop
xor
jns
sub
pop
loope
sub
xor
inc
sar
call
out
fs
mov
push
pop
mov
popa
iret
shll
mov
sarl
nop
adc
das
cli
ljmp
shrl
fistpl
push
test
in
mov
jbe
lcall
aad
cmp
movsb
aam
int
stc
or
vsubsd
stos
fistpll
add
decl
dec
scas
cmp
push
ljmp
push
test
pop
and
push
or
ljmp
cld
jmp
enter
out
jno
pop
push
js
outsb
xchg
pop
mov
icebp
jno
sub
cmpsb
fstpl
push
and
pop
leave
aad
pop
mov
cwtl
int3
ljmp
pcmpgtd
jmp
lock
pop
cmp
aas
sahf
movsb
mov
sysenter
fcomip
lcall
and
in
roll
mov
xchg
movsbl
cli
mov
xchg
leave
sarb
pop
sbbl
call
push
adc
and
fiaddl
xlat
or
int
inc
mov
pusha
adc
shl
nop
ja
and
mov
decl
and
repz
push
vpunpckhdq
mov
mov
ljmp
cmp
xor
xor
pop
xchg
mov
data16
arpl
cld
rcrl
lods
sub
pushl
test
pushf
and
jg
adc
stos
inc
scas
pusha
mov
adc
dec
sbb
inc
jge
stos
insl
aaa
mov
add
sub
jg
fsub
jbe
mov
roll
and
mov
cwtl
repnz
adc
dec
dec
call
cmpsb
push
inc
iret
add
rclb
xchg
add
nop
jmp
push
add
and
add
push
or
dec
jnp
or
add
mov
add
insl
mov
and
ja
or
js
push
jg
add
pop
jg
insb
dec
push
js
add
add
dec
orb
in
add
sub
iret
nop
cmp
push
adc
enter
scas
jle
pop
sub
add
push
nopl
or
jo
scas
dec
pop
mov
push
xor
popf
jno
mov
insb
push
add
xchg
movsl
push
daa
add
xchg
dec
and
cmpsl
jnp
jnp
push
and
cs
push
movsb
push
movsb
inc
into
iret
cmc
ljmp
push
and
stos
push
and
push
test
and
xchg
imul
push
inc
pop
pop
add
stc
out
push
mov
pop
sbb
add
mov
popa
push
add
push
ds
les
push
adc
fs
mov
insb
or
lret
imul
imul
fldt
punpckhwd
into
mov
mov
sbbb
jae
nop
js
int
pop
stos
pop
stos
mov
inc
jb
ss
add
jo
mov
push
shll
add
outsl
push
jo
ss
shll
fidivrl
iret
outsb
or
push
fcmovnbe
ja
ret
je
fidivrs
out
jge
aam
mov
push
xorb
ljmp
movsb
push
add
movzbl
stc
mov
shlb
mov
dec
sub
add
jne
imul
push
ret
add
mov
lods
pop
add
push
pop
dec
add
fsubrl
jo
push
data16
inc
lahf
ja
sbb
cs
push
shlb
pop
rep
push
lret
stos
aas
add
ja
outsb
lods
sti
out
push
push
xlat
jne
add
ja
fsub
mov
push
aad
push
xlat
ja
js
push
ds
jns
push
jp
jp
inc
push
fidivrl
sub
or
sarl
ja
fldl
lds
inc
jmp
ljmp
insl
xchg
sub
xchg
in
xchg
sub
xor
ja
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
testl
push
pushf
cmp
popf
inc
mov
pop
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
push
pop
xchg
dec
out
out
iret
repz
stc
cli
sti
lock
iret
repz
std
incb
jecxz
arpl
mov
insb
lea
add
jo
imul
es
add
pop
add
pop
add
int3
data16
pop
cltd
and
inc
add
mov
mov
add
ja
inc
push
add
or
add
add
outsb
add
outsl
or
or
xlat
ds
cld
test
test
or
push
lods
sbb
add
pop
adc
rcll
adc
lods
add
fwait
pop
mov
pop
stos
femms
lods
lods
pop
insl
addr16
mov
add
scas
loopne
imulb
adc
add
lods
adc
sbb
mov
scas
scas
scas
out
in
scas
sbb
mov
mov
dec
repz
and
mov
nop
inc
and
cmpsl
and
or
xchg
mov
and
pop
and
pop
mov
inc
jo
fsubs
pop
sub
pop
sub
mov
pop
and
mov
cld
and
mov
jns
push
mov
aaa
pop
aas
cmp
subb
pop
cmp
pop
idiv
adc
inc
mov
xor
xor
fstps
push
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
add
dec
jnp
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
pushl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
aas
adc
add
pusha
pop
pushw
dec
dec
cmpb
mov
add
mov
mov
fcos
mov
pushf
fwait
lcall
mov
mov
sub
inc
xchg
push
dec
ja
jns
dec
push
bound
js
adc
xor
jne
je
shll
imul
sbb
jae
add
pop
pop
scas
lods
pop
popa
mov
sub
dec
jle
xchg
pop
push
dec
add
mov
mov
dec
and
cmpsb
push
mov
xor
mov
sti
dec
xor
ja
push
ja
jb
cs
xor
mov
sub
mov
mov
out
insl
mov
sbb
and
mov
imulb
xchg
jo
push
inc
mov
cmp
mov
inc
fcmovu
or
add
xchg
jp
inc
xor
aaa
or
popf
inc
mov
aaa
add
xchg
jno
lret
push
out
mov
bound
mov
mov
inc
idiv
jns
sahf
mov
insb
add
outsb
add
xchg
xchg
aas
in
insl
fistpl
test
cmpsb
dec
push
dec
push
movsb
jae
jg
sub
ret
jb
shll
outsl
pop
xlat
pushf
push
rorb
add
fwait
imul
lcall
outsb
mov
mov
push
add
ja
sahf
jbe
fistpl
imul
rolb
stos
push
add
and
es
ja
pop
movsb
js
mov
data16
shrl
jge
xlat
popf
insb
pop
outsb
push
outsl
ror
push
loopne
fiadds
ds
jno
add
jge
push
jg
ficoms
fisttpll
lock
clc
andb
in
or
test
mov
add
movsb
out
xor
push
iret
sahf
mov
divb
add
jb
out
in
push
jle
mov
orb
push
fnstcw
aad
push
divb
fildl
lahf
cmpsb
sarb
addb
push
sbb
sbbl
test
test
sbb
popf
int
inc
test
in
mov
push
xchg
nop
and
mov
xchg
in
xchg
lock
sub
sub
cmpsb
jge
add
scas
outsb
out
xchg
das
push
xchg
pop
fldt
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
push
cmpsb
pop
cmp
sub
sbbb
push
cmpsb
scas
jo
or
sahf
repnz
jbe
stos
nop
outsl
into
shll
lgs
int
rcll
sub
shll
rcr
rolb
mov
ret
data16
adc
into
add
addr16
dec
sbb
cmp
out
je
dec
rolb
inc
daa
add
mov
inc
fisubrs
add
or
pop
nop
mov
pop
push
adc
push
add
add
in
or
ds
add
mov
mov
ret
ds
mov
mov
mov
mov
fsubrs
mov
add
and
push
imul
scas
mov
rcrb
aas
and
aas
insb
xor
or
aas
repnz
and
aas
cmp
cmp
sub
adc
js
pop
mov
sbb
inc
jbe
sbb
mov
incl
jle
cmp
scas
xor
dec
mov
idivl
dec
jle
aas
adc
cmp
jge
dec
xor
dec
inc
test
fidivs
scas
add
mov
xor
pop
mov
ds
lods
stos
inc
clc
std
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
in
lods
lcall
sub
sub
add
add
mov
sub
dec
and
pop
mov
mov
push
push
push
push
push
imul
push
pop
push
push
push
add
ret
mov
pushl
jne
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
jne
shlb
nop
negl
rolb
add
mov
add
or
incl
ja
push
push
add
cmc
repz
dec
xor
mov
add
aas
add
xchg
pop
cmp
test
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
out
add
addr16
add
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
insl
fisttpl
push
nop
sub
sub
xchg
insl
cmp
push
nop
sub
xchg
xor
push
insl
mov
xchg
outsb
lcall
jnp
es
jbe
negl
fcmove
int3
out
shlb
iret
push
lret
loopne
push
std
mov
and
fdivrp
neg
insb
lea
test
jg
or
add
jge
xchg
pop
mov
push
decb
jns
dec
dec
dec
dec
dec
dec
add
pop
fbld
incl
add
dec
or
adc
cmp
adc
dec
or
fcmovnu
dec
inc
add
push
adc
add
or
pop
int
in
pop
cmovg
inc
push
dec
sbb
lahf
mulb
inc
adc
inc
inc
adc
sbb
dec
add
mov
mov
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
sbb
and
add
dec
ss
xor
sub
sub
inc
and
lods
mov
fwait
test
mov
add
mov
mov
mov
mov
fnstenv
mov
add
outsb
mov
push
add
sarl
push
add
adc
pop
test
roll
outsl
mov
cmpsl
add
mov
inc
sarl
orb
jmp
adc
mov
fstpl
incl
andb
outsb
sysret
mov
es
xor
dec
ret
jmp
sbb
lock
pop
inc
jb
hlt
cmovbe
push
or
push
jg
push
and
ja,pn
pusha
inc
add
int3
inc
sbbb
jg
sbb
ret
push
push
lds
add
out
cli
mov
xor
pop
cli
fists
adc
adc
and
addr16
test
mov
inc
xchg
jg
fdivrs
das
sti
jb
adc
mov
jle
sbb
sbbl
sti
add
xchg
and
jg
inc
and
inc
jg
pop
cmp
mov
inc
idivb
inc
cs
push
cld
jg
loopne
add
jle
in
and
cmpsb
std
ja
nop
pop
inc
add
adcl
and
std
dec
dec
mov
pop
jg
enter
jle
add
inc
pop
data16
enter
sub
xchg
mov
push
decl
add
add
add
jg
add
arpl
mov
jg
pusha
xor
sub
add
jg
push
pop
add
pop
mov
fsubs
sbb
inc
jmp
sbb
scas
incl
add
incl
repnz
mov
lret
imul
add
add
mov
adc
stos
push
add
pop
add
andl
rorb
push
data16
mov
sub
jg
rorb
inc
shrb
dec
inc
in
inc
cmpsb
and
add
jg
adc
add
pop
adcb
dec
jg
mov
mov
fldcw
pop
push
stos
pop
stos
sbb
mov
pop
daa
aas
or
mov
aaa
pop
pop
add
xchg
pop
jle
add
inc
push
je
or
mov
daa
mov
fstl
cwtl
adc
xchg
push
bound
add
pop
cmp
mov
insl
jnp
jae
pop
daa
push
arpl
fmuls
mov
push
mov
fcmovnbe
out
decl
cmp
push
dec
push
or
inc
pushf
push
xor
ljmp
fs
sbb
test
mov
push
and
or
dec
lcall
fnstenv
add
push
jne
pop
or
sarl
push
jbe
out
adc
mov
jnp
push
jp
push
out
popf
insl
js
dec
jbe
pop
add
mov
fdivrs
popf
nop
popf
adc
push
outsb
ds
or
cs
jle
into
or
dec
incl
or
ljmp
lcall
adc
xchg
dec
ja
mov
mov
nop
neg
xchg
jp
int
push
push
mov
test
fwait
adc
sahf
inc
out
and
push
xchg
insl
mov
popf
inc
push
pushf
cmp
sub
roll
cltd
mov
neg
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
and
xchg
cs
mov
mov
cmp
xor
mov
push
mov
xchg
jg
pop
fnsave
xor
inc
inc
jae
pop
sahf
movb
es
sbbb
xor
inc
pop
and
ja
dec
inc
stos
fnsave
push
xchg
movb
pinsrw
mov
mov
push
ja
add
adc
repz
adcb
push
rcrb
xchg
pop
xchg
adc
bound
mov
dec
sahf
or
push
aas
push
adc
pop
push
pop
cmpl
inc
jno
out
mov
jns
imul
mov
sbb
test
push
lock
cmp
mov
icebp
jp
adcl
add
mov
test
fdivrp
decl
out
pop
xchg
cmpsl
pop
add
jmp
sub
and
outsl
daa
push
push
sbb
xor
sbb
push
idiv
inc
addb
or
add
jmp
syscall
mov
sub
xchg
add
lods
push
xchg
lahf
or
pop
lcall
or
mov
sub
sub
pop
test
jmp
test
lcall
push
ret
std
out
syscall
test
popl
adc
sbb
mov
sti
ud0
adc
decl
mov
test
ljmp
inc
popa
or
lcall
lcall
out
call
sbb
inc
rorl
lods
lcallw
sub
sub
or
mov
sqrtps
and
push
add
enter
sbb
and
iret
fcmovne
shlb
inc
sti
out
jo
mov
call
test
rorb
dec
decl
add
rcrb
shrb
sbb
xlat
fdivrp
call
sub
mov
sti
push
std
push
dec
mov
adc
test
call
decl
and
mov
pop
stc
smsw
cwtl
inc
push
call
jg
ret
out
cli
notb
xchg
outsb
jmp
xchg
call
sbb
call
push
push
jmp
fcmovnu
in
inc
pop
fcmovbe
pop
pop
mov
mov
inc
xorps
aaa
mov
decl
push
and
js
shll
roll
inc
fiaddl
sub
ret
in
es
adc
jmp
ljmp
in
fwait
inc
lahf
inc
inc
push
inc
inc
pop
sbb
jbe
pop
mov
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
and
inc
cs
dec
dec
ljmp
jmp
fistl
insl
push
rcl
xchg
je
fwait
outsb
shrb
es
cltd
dec
pop
ss
jb
imulb
cltd
dec
mov
insl
pop
daa
lcall
jmp
push
push
push
xchg
push
push
ljmp
inc
dec
sub
sahf
decl
lcall
pop
int
repnz
jge
es
cmpsb
popfw
cmp
aas
dec
lcall
lahf
push
dec
xchg
imul
and
int
push
aaa
push
lcall
mov
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
ljmp
ljmp
cs
jmp
mov
cwtl
in
fimuls
jmp
or
std
faddl
sub
fstpt
push
jnp
jp
or
or
jns
jl
push
jge
pusha
mov
movq
es
jbe
adc
fidivrl
jg
mov
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
fwait
outsl
mov
push
mov
jnp
jge
hlt
in
add
int3
sub
negl
add
stc
mov
pop
add
sub
stos
outsl
lahf
or
jne
push
adc
adc
rep
fstpl
int
push
addb
jnp
lahf
dec
es
addl
mov
sysret
jg
and
xchg
fisttps
sub
iret
out
mov
cli
jmp
iret
fisttpl
idiv
sarb
inc
sub
jg
mov
icebp
test
insl
dec
pop
cld
inc
js
mov
fstpt
mov
icebp
out
jbe
adc
daa
jg
repnz
mov
ja
loope
xchg
mov
jp
es
xchg
pusha
or
inc
aaa
xor
stc
sti
cmpb
jmp
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
add
sub
mov
jmp
xchg
jmp
mov
into
insb
mov
push
xchg
mov
loop
adc
ljmp
xchg
jmp
mov
lret
jg
out
mov
mov
push
jp
push
mov
or
jmp
xlat
push
cmovno
jae
mov
adc
add
push
pop
out
and
mov
mov
adcb
mov
add
push
or
inc
lahf
aaa
orb
lret
adc
call
sub
gs
pop
xchg
push
jb
fnstenv
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
stos
test
add
push
add
xchg
fcmovb
mov
nop
mov
es
bound
inc
sub
add
stos
dec
lgdtl
inc
push
gs
jo
xor
push
sbb
push
lret
or
and
xchg
test
xor
xor
mov
xchg
js
adc
xchg
inc
xchg
mov
sbb
fimuls
inc
lret
push
add
lock
inc
jmp
lahf
jo
das
aam
je
popf
sbb
sbb
popa
imul
cltd
inc
mov
insl
pushf
es
aas
add
push
adc
add
jno
jns
xchg
dec
dec
add
add
add
add
push
mov
add
adc
xchg
sbb
mov
adc
adc
insl
lods
add
mov
jo
push
xchg
dec
movsl
pop
xor
in
sbb
mov
push
popa
shlb
xor
lods
xor
cmp
jb
inc
inc
mov
jae
andb
shlb
xchg
je
filds
movsl
sbb
insb
adc
add
adc
add
sbb
pop
xor
adc
inc
loop
xchg
and
pop
testl
lahf
push
sub
sbb
cmc
add
adc
roll
jo
xor
fcoms
dec
push
outsl
loop
and
in
sbb
shlb
sub
lcall
fildl
insb
inc
fstpt
push
out
inc
imul
sbbl
inc
push
shll
adcb
adc
mov
in
orb
inc
loop
or
adc
popa
sbb
pop
adc
cs
add
bound
add
cmp
inc
cmp
fldl
jne
arpl
add
add
jbe
or
push
js
inc
sti
popf
xchg
adc
or
icebp
icebp
popa
xchg
aad
dec
jl
insb
cmp
add
pop
add
les
jnp
xor
popa
negb
cmp
jo
je
push
dec
mov
sbb
in
xchg
sbb
push
dec
inc
sub
mov
push
cmp
les
roll
adc
lcall
add
adc
pop
loopne
pop
adcl
fiaddl
xchg
mov
leave
test
push
addb
dec
cwtl
and
jmp
lock
jne
rcrl
ret
pop
jecxz
je
bound
mov
pusha
jnp
test
cmp
jae
andl
xchg
xchg
push
mov
or
or
pop
cmp
or
shl
adc
icebp
add
mov
and
daa
cmp
or
outsb
jne
mov
sub
sub
xchg
mov
xorl
dec
gs
jae
xor
push
subb
add
mov
mov
mov
dec
cmp
das
xchg
inc
imul
ja
loop
mov
sbb
and
mov
pop
inc
and
inc
jg
stos
popa
je
les
xchg
jl
mov
inc
jl
js
jne
inc
mov
mov
jae
loop
cmp
in
outsl
mov
movaps
mov
mov
add
push
add
inc
fwait
pushf
fldenv
dec
or
and
testl
mov
das
sub
cli
xor
cs
sub
xchg
pop
sub
pop
dec
xchg
mov
mov
les
mov
cmp
xor
xchg
jnp
push
inc
shlb
mov
push
pop
imul
xchg
insb
jne
ret
or
into
arpl
jae
adc
and
rcr
inc
es
inc
or
xor
xlat
fstps
test
imul
fimuls
mov
fimull
xor
jne
fs
scas
mov
inc
or
push
popa
rcpps
mov
js
push
jb
addb
inc
inc
xchg
or
jbe
stos
mov
imul
rol
mov
ja
pop
and
insb
sahf
daa
lods
push
push
and
push
cld
mov
mov
notl
fwait
push
mov
dec
orl
stos
dec
inc
adc
add
sub
js
hlt
lock
dec
loopne
and
test
ljmp
sub
std
addr16
or
orl
mov
and
adc
nop
jne
outsb
inc
sbb
push
pop
and
int
fcomps
je
insl
dec
outsb
dec
xchg
mov
and
das
dec
shrb
xor
sub
push
push
js
add
pop
add
cmpsb
mov
dec
add
sbb
mov
movsb
dec
shll
or
or
xor
movhps
mov
shll
mov
jl
fidivrl
es
pop
add
inc
add
movsb
outsl
xchg
add
and
lock
xchg
cmpsb
dec
pop
push
and
or
roll
shlb
es
push
out
test
or
int3
popf
stos
daa
or
inc
push
push
imul
mov
pop
imul
insb
scas
cli
enter
test
mov
jo
jno
sbb
loopne
xchg
out
pop
xchg
jecxz
xchg
les
push
int3
arpl
sbb
add
dec
xor
out
pop
loopne
push
mov
jo
or
rolb
mov
call
dec
mov
push
pusha
or
sbb
icebp
rclb
lock
subl
push
imul
loope
push
hlt
and
ret
movsb
and
dec
sbb
insb
sub
ret
mov
outsl
inc
inc
xor
mov
dec
pop
lret
inc
lock
sub
arpl
mov
mov
xchg
xorb
pop
xlat
adc
or
mov
ret
adc
and
inc
xorb
in
and
sbb
in
inc
aaa
outsl
and
mov
cmpsl
inc
ret
and
mov
test
cmpsl
adc
mov
mov
push
mov
pop
outsb
xchg
dec
insl
dec
adc
fs
adc
mov
sub
xchg
or
push
jo
cld
addr16
loope
push
arpl
test
cwtl
inc
push
pop
xor
xchg
cwtl
push
and
arpl
inc
add
cmpl
inc
push
mov
nop
fs
mov
cmp
jns
sbb
dec
and
jp
in
inc
cmp
push
pop
mov
and
push
xchg
lods
jmp
mov
push
fdivs
or
rcrl
shlb
fadds
aas
insl
inc
sub
bound
xchg
mov
nop
shrb
dec
inc
addr16
test
add
push
sbb
repz
mov
or
push
inc
inc
cmp
movsl
int3
js
xor
sbb
adcl
xchg
cmp
lcall
mov
out
inc
pop
inc
jmp
test
imul
shll
add
aaa
js
in
and
out
sub
push
sbb
outsl
test
cmp
inc
xchg
sub
xchg
jl
addr16
roll
cli
add
test
insl
push
inc
push
daa
adc
xor
add
dec
and
add
nop
mov
add
insb
inc
and
pop
sub
movl
add
add
int3
clc
add
mov
and
xlat
add
enter
je
mov
cmp
cwtl
sub
pushf
push
xlat
addb
out
repnz
dec
out
or
or
jp
add
mov
mov
dec
inc
add
cmp
dec
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
