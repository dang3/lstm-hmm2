divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
sti
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
ret
pop
inc
push
adc
and
std
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fstpt
xor
cwtl
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
add
push
adc
mov
add
sub
dec
rcrb
mov
or
fsubs
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
push
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
mov
aaa
sub
jmp
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
xchg
push
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
sbb
add
shl
push
push
push
iret
bound
pop
sub
inc
pop
pop
ljmp
ss
xor
push
mov
cmp
or
jge
dec
add
gs
sti
mov
mov
xor
mov
xchg
jmp
arpl
rcrl
js
push
pop
imul
sar
sub
inc
sub
inc
clc
sub
enter
xorl
ss
shll
inc
jmp
fs
pop
or
sbb
adc
stos
mov
jecxz
fdivr
or
js
mov
cmp
jg
mov
adc
loopne
or
ret
shrl
push
and
pop
outsl
jmp
xchg
dec
add
sbb
dec
hlt
sub
push
mov
idiv
loope
sar
xor
cmp
ja
adc
sub
clc
add
push
push
lds
adc
scas
sbb
and
push
jo
add
stc
clc
mov
loop
lds
iret
jle
mov
cmpl
or
icebp
xchg
sub
sbb
push
inc
jle
add
pop
cltd
sub
shr
enter
mov
sarl
dec
jg
push
test
cmp
jl
cmp
jne
aaa
loopne
or
incb
add
xor
std
shlb
adc
add
add
movsb
loopne
filds
or
add
push
push
lea
sub
fld
push
xor
out
jle
mov
pop
hlt
into
mov
aam
out
rorl
cmp
cmpsl
jmp
mov
mov
cld
fsubrs
xchg
xchg
leave
mov
mov
mov
or
test
jle
cmp
mov
or
test
jne
clc
test
mov
pop
pop
lds
loope
push
push
xchg
jo
jecxz
decl
mov
jns
mov
jmp
push
mov
inc
pop
xchg
sub
aad
dec
pusha
or
loopne
es
add
xchg
andl
mov
sti
adcb
or
or
inc
cmpsb
pusha
cmp
adc
out
scas
cmp
push
sar
push
push
adc
cmp
fsubr
jle
mov
out
lock
lret
add
cmp
cmp
jae
add
lods
sub
sbb
andl
ret
add
adc
jb
pop
add
xchg
pop
cli
in
das
push
leave
ret
lea
ljmp
xor
aaa
cmp
ret
push
push
sarb
or
adc
or
ret
push
cmpsb
imul
pop
xor
lods
lods
jo
and
and
inc
sub
test
aad
aaa
stos
shl
pushf
pop
orb
pop
pop
or
cmp
pop
mov
push
mov
lea
cmp
jne
push
xchg
jp
outsb
insl
sbb
lock
push
add
adc
pusha
js
push
push
add
pop
pop
pop
sub
ret
or
cmp
xor
mov
and
sub
jo
test
test
dec
fadd
mov
fcmovnu
lods
add
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
jne
mov
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
adc
stos
or
or
mov
push
or
sbb
dec
push
movl
lret
or
inc
sub
lea
dec
push
xor
push
mov
xchg
pop
in
icebp
add
imul
imul
push
add
add
filds
push
dec
lods
xchg
cmpl
popf
lea
push
add
push
outsb
scas
sbb
lret
lret
xor
cs
sbb
inc
push
stos
mov
adc
loopne
scas
cld
xor
xor
call
ss
cmp
push
popa
cmp
je
stos
xchg
out
xchg
adc
sub
lea
imul
cmc
mov
pop
mov
popf
ret
mov
xchg
jbe
into
mov
sbb
ret
ljmp
adc
into
sti
cmp
out
js
mov
aam
or
or
movsl
jl
cmp
lock
idiv
std
or
adc
jge
xor
and
add
or
inc
lock
cmp
or
mov
inc
je
outsb
mov
sbb
mov
mov
add
adc
or
push
lock
add
enter
movsb
popa
imul
push
jl
add
mov
mov
or
sub
xchg
ret
ret
out
enter
or
stos
ret
out
ljmp
adc
xor
mov
loop
sarl
lds
xchg
inc
lea
lods
pop
or
enter
mov
js
std
jae
ja
sub
je
dec
je
push
adc
or
or
inc
shll
mov
lea
push
adc
sub
loope
bound
cmp
rcll
inc
or
jge
popf
aas
add
loopne
hlt
in
push
push
mov
add
in
push
cmp
addb
mov
xchg
sbb
mov
add
incb
mul
and
jl
xor
mov
sbb
adc
or
mov
leave
ljmp
lret
pop
mov
pop
push
test
push
addr16
jge
pop
pop
aad
xchg
lods
xchg
add
insl
push
sub
out
rol
inc
rorl
or
dec
divb
sub
js
and
adc
dec
clc
xlat
cmp
fwait
add
adc
in
dec
fsubl
daa
in
or
pushl
insl
bound
call
sar
inc
pop
xlat
andb
add
or
cmpb
lea
not
sbbb
sub
dec
mov
mov
movsl
mov
je
pop
ds
pusha
das
dec
pop
fsubrp
adcl
adc
mov
jl
cmp
jmp
call
push
jo
pusha
cs
adc
aaa
pop
sbb
xchg
or
nop
add
sarb
lock
mov
js
jl
pop
adc
mov
shll
fmuls
js
xor
mov
cmp
js
or
dec
js
xchg
fimuls
movsl
cmp
xchg
addb
movsb
sub
jo
daa
xchg
and
into
or
or
mov
je
mov
or
sbb
or
add
fs
push
xor
data16
mov
pop
add
sub
aas
ret
fadds
inc
roll
jo
fsts
in
jae
in
sub
adc
adc
bound
and
cmp
xorl
das
and
lahf
jne
adc
nop
adc
push
push
mov
loop
or
mov
xor
add
outsb
mov
lea
call
aad
stos
or
xchg
xor
cmpsl
add
xchg
sbb
dec
jmp
mov
pop
clc
jl
dec
in
or
mov
push
inc
fstps
lock
jmp
xor
mov
inc
call
push
adc
cmpl
das
pop
sub
ficoml
in
xchg
add
in
sbb
dec
push
cmpsl
flds
loopne
jp
add
pusha
jp
dec
push
mov
adc
mov
into
sahf
mov
ret
jmp
repnz
je
mov
in
mov
shll
xchg
xor
add
in
test
lahf
lock
jmp
xchg
sbb
loope
adc
xchg
cmp
mov
aam
jge
xlat
pusha
push
inc
adc
pop
fsubr
out
add
push
and
clc
nop
lock
out
rcrb
jle
push
loopne
imul
mov
je
outsb
cltd
fimuls
popa
nop
push
cmpsl
sbb
mov
add
fstl
decl
and
add
add
fldt
pop
roll
jbe
inc
pop
je
in
repz
adc
push
shll
adc
mov
loope
cmp
mov
fstl
movsb
sarl
test
sbb
mov
xor
pop
push
sbb
jmp
neg
sbb
pop
les
ret
je
arpl
mov
loope
jmp
rcr
ret
mov
cmp
or
push
cwtl
or
cwtl
mov
mov
dec
repz
test
dec
call
rcll
nop
out
je
and
aaa
je
adc
or
sbbb
add
mov
mov
xchg
pop
cltd
mov
mov
push
sahf
fs
in
iret
lcall
das
adc
add
mov
push
xor
sub
aad
mov
fcoml
cmp
ficomps
out
jge
jne
outsb
out
sti
shrb
shlb
lret
adc
mov
pop
or
movsl
lcall
nop
sarb
xchg
xchg
inc
adc
sarb
xor
adc
cmp
xchg
xchg
ret
movsb
pushf
nop
and
cmp
pushf
pushf
xchg
out
out
mov
mov
add
cmp
xchg
push
repnz
pop
enter
enter
and
fadd
sbb
nop
and
rol
cltd
xchg
out
mov
sarb
adc
mov
push
hlt
xchg
mov
pusha
jb
int
sbb
inc
xor
push
dec
mov
mov
aas
add
xor
add
and
xchg
inc
pop
sbb
adc
push
push
jl
cmpsl
mov
stos
lfs
nop
xchg
jo
aaa
fcoms
fmuls
call
insb
shlb
push
rorl
dec
sub
push
push
ficoml
xchg
adc
push
push
mov
sub
push
imull
pop
push
xor
sbb
mov
mov
push
inc
cld
out
add
stc
test
loope
lock
xchg
and
fdivl
aam
lret
xlat
cld
xor
in
sbbb
call
nop
and
cwtl
and
adc
jg
loop
or
and
push
ficoml
push
jle
inc
sbb
jne
mov
daa
or
push
mov
loopne
mov
aaa
fiadds
mov
xchg
arpl
nop
test
jmp
xchg
adc
sti
popw
xchg
sti
shlb
mov
mov
pushf
sub
adc
pop
add
je
ds
dec
jae
fsubl
add
je
or
push
data16
jl
scas
jmp
lcall
jne
mov
mov
fcmovne
push
pop
sahf
push
addb
nop
enter
imul
pusha
and
decb
push
and
test
inc
or
adc
jbe
ja
das
clc
dec
or
mov
pop
sbb
mov
into
push
sbb
and
lea
cmp
dec
push
or
jecxz
dec
mov
stos
or
lret
adcl
movsb
mov
aaa
adc
mov
rcrb
icebp
aad
insb
inc
adc
lret
jl
ret
movsw
jno
shll
or
fsub
sbb
repnz
into
adc
cmc
xor
inc
adc
push
sbb
xchg
mov
pop
cmpsl
add
push
hlt
sub
mov
adc
push
adc
imul
fstl
sub
or
loop
ss
mov
fistpl
jne
dec
cmp
inc
test
push
ds
inc
push
pop
push
hlt
push
jmp
xchg
fs
popf
pop
mov
sbbl
je
mov
shlb
sahf
les
loopne
pushf
pop
nopl
sbb
sbb
sub
testl
sub
clc
add
mov
mov
xor
push
push
pushw
or
popa
or
movsb
in
inc
pop
cmp
in
xchg
adc
push
adc
and
xlat
or
add
ret
or
add
fstl
mov
jl
cmp
cmp
xor
rorb
js
and
fldt
sbb
aaa
push
push
pop
and
lock
insb
sbb
test
subb
pusha
lock
pop
mov
sub
int3
cmp
cmp
leave
dec
test
adc
jg
push
pop
mov
jne
data16
adc
xor
cmp
and
shl
and
cltd
add
test
inc
mov
and
and
pop
add
sahf
inc
and
add
xorl
pop
leave
mov
cmpsl
and
add
and
add
mulb
incb
and
jp
mov
sub
jb
and
push
es
or
js
add
fnstcw
cmp
push
add
scas
sub
pop
sub
push
ljmp
sub
push
xchg
adc
jecxz
adc
jno
xor
xchg
ret
inc
lret
ret
test
lret
xchg
push
or
jmp
je
cmp
push
stos
add
adc
and
outsl
mov
clc
push
insb
push
daa
and
mov
ss
pusha
insb
adc
mov
sbb
or
data16
stos
mov
jne
and
adc
mov
or
int
nop
out
cmp
inc
inc
sarb
ror
xchg
sbb
das
sub
cmpsl
add
pusha
mov
lock
jg
push
jg
add
rclb
call
mov
inc
in
inc
dec
push
push
push
out
push
mov
and
cmp
jo
shlb
dec
orb
fcomps
test
dec
and
test
test
sub
lret
ret
shlb
cvttps2pi
inc
mov
cmp
dec
add
cmpb
negl
cmc
pusha
or
jge
sarl
pop
leave
xor
xor
mov
call
dec
or
cmp
add
gs
ficompl
push
cmp
outsl
inc
push
lods
testl
push
inc
repnz
loopne
cmp
and
and
movsb
ret
and
xor
stc
pop
outsl
dec
dec
xchg
xor
ficoml
cmp
and
sbb
or
cmp
mov
inc
inc
or
daa
pop
or
cmp
mov
nop
addr16
and
mov
xchg
and
xor
and
or
fucom
jae
das
adc
js
or
jne
gs
xchg
pop
into
inc
inc
mov
int3
ds
movsb
sbb
js
mov
push
adc
and
fs
dec
pop
sub
jl
pop
pusha
inc
push
pushl
stos
stos
jnp
adc
and
test
and
pop
inc
fisubl
jnp
xchg
jbe
ret
push
je
ds
and
sub
into
jbe
jno
jge
adc
je
mov
fists
call
add
xchg
inc
inc
push
dec
adc
mov
cmpsl
add
cltd
call
jl
adc
jne
push
sub
call
or
push
lods
je
inc
mov
rorl
movsl
jmp
cmp
push
jl
orb
add
adc
repnz
mov
dec
sarb
jmp
mov
xchg
lock
sbb
adc
insb
stos
push
inc
das
and
popf
adc
pop
xor
xor
fwait
and
add
ret
push
pop
xchg
or
inc
repz
test
push
and
add
mov
scas
outsb
lret
shl
popf
push
pushf
lods
mov
xchg
outsl
in
cmp
shl
call
sub
or
into
out
add
sub
out
arpl
loopne
dec
ret
lcall
setne
or
in
and
mov
movl
push
fisttps
jne
or
je
sub
loopne
cld
xor
xchg
mov
inc
aaa
xchg
fcoms
mull
sub
push
sbbb
inc
faddl
dec
orl
pop
test
mov
insl
cmpsl
sbb
hlt
fsubrp
test
jne
cmp
jo
or
xchg
cmp
addl
add
loopne
std
mov
not
add
mov
repz
je
pop
mov
jp
shlb
sbb
push
or
fsub
push
out
shlb
insb
inc
out
add
inc
aad
xor
add
fstps
add
jecxz
lds
test
mov
push
jo
xor
add
xor
mov
inc
inc
cmpsl
sarb
push
mov
or
fimull
aaa
les
or
das
cmp
fisubrl
mov
or
jge
push
faddl
pop
out
call
imul
ds
test
mov
inc
mov
lock
jmp
xor
dec
dec
je
sub
jmp
bound
jge
imul
sahf
cs
fs
adc
movsb
add
xlat
pop
ror
mov
loope
rcrl
dec
popf
insb
lock
pop
nop
xor
pop
push
cmp
arpl
or
jbe
das
aam
pop
dec
cld
xchg
stos
call
rolb
or
imul
push
mov
xor
inc
mov
sarl
cmp
lods
push
jbe
inc
addb
push
push
or
mov
jle
in
bound
into
movsl
push
sbb
aaa
icebp
push
cld
push
pop
push
push
mov
xchg
ds
lahf
add
pop
sub
in
paddusb
mov
jle
pop
or
push
cmpsl
sarb
add
movsb
mov
inc
dec
sarb
pop
adc
jae
scas
dec
das
sub
xorb
sbb
call
scas
fwait
or
hlt
jge
lea
loopne,pt
call
insl
or
daa
test
subl
pop
lahf
or
add
sbb
push
mov
or
in
inc
flds
lods
add
mov
cmp
mov
call
mov
fwait
push
int3
add
or
jne
sbb
insb
mov
mov
pusha
ss
add
bound
arpl
int3
mov
push
add
jge
mov
add
or
inc
repnz
cmpsl
xchg
cmp
cwtl
movsb
ljmp
call
add
or
or
nop
dec
pop
test
push
and
or
fsubrl
rolb
test
imul
loopne
pop
cld
loopne
add
and
enter
ficomps
dec
mov
lahf
call
push
pusha
lcall
mov
sbb
xorl
or
pop
inc
arpl
into
and
xchg
movsl
mov
cmp
cli
in
mov
mov
mov
cmp
adc
mov
jp
dec
dec
xchg
in
fsubl
mov
push
mov
lret
sbb
jno
bound
sbb
and
mov
xchg
or
inc
mov
adc
cmp
sbb
shrb
sbb
ret
push
sbb
push
call
mov
adc
push
jp
je
fs
addr16
outsb
stc
add
popl
negb
call
push
inc
mov
call
jge
out
mov
inc
aaa
jbe
orb
subb
push
jo
aas
xchg
addl
pop
loopne
sbb
jge
and
in
fcoms
dec
mov
dec
xor
orb
loopne
and
fdivrp
inc
push
and
add
pop
sahf
mov
adc
add
xor
mov
rolb
mov
push
mov
les
pop
int3
insb
and
mov
rclb
sbb
inc
fcoms
clc
pop
ss
fsubl
in
mov
loopne
data16
xchg
xor
mov
fwait
inc
mov
pushl
push
js
mov
cmp
ret
shr
movzbl
push
adc
push
ret
push
push
inc
push
add
mov
sbb
sbb
insl
mov
shr
mov
popf
cmp
in
xor
add
and
or
pop
pusha
mov
pop
mov
insb
mov
mov
push
xor
add
pop
or
into
push
jb
or
mov
sbb
add
sti
jle
or
ds
aaa
xchg
inc
push
push
sbb
dec
decl
jg
mov
mov
jmp
add
pop
xchg
mov
dec
arpl
shl
mov
ljmp
adc
popa
jns
mov
mov
jae
pop
mov
ss
jae
adcl
sbb
aaa
outsb
sub
cmp
subl
adc
sbb
inc
loop
jo
xor
ret
xor
mov
mov
push
stc
add
mov
and
push
sbb
shlb
ficomps
stos
or
add
sub
jne
xor
dec
movsl
cmp
adc
lock
mov
xor
clc
cmp
cmp
cmp
jae
mov
aad
cld
inc
hlt
lea
ja
xor
pop
add
test
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jo
in
cmp
jg
push
push
push
jnp
shrb
stos
adc
cmpsb
mov
clc
shll
into
popa
nop
add
mov
int3
sub
xor
adc
call
lea
ljmp
daa
loopne
sbb
incb
xor
jo
fnstenv
fcmove
pop
in
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
inc
insl
fsubrl
cmpsb
hlt
pop
pop
outsb
pushf
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
je
inc
and
sub
pop
movb
push
push
inc
inc
xor
xchg
add
xor
add
inc
pusha
push
push
mov
insb
sbb
adc
mov
cmp
mov
aaa
outsb
loope
mov
fdivp
add
mov
or
cmp
jl
push
cld
testb
push
or
mov
enter
sbb
je
xor
cld
inc
aam
ret
or
fnstenv
push
pop
jbe
sub
mov
test
pop
or
xchg
bound
je
sub
mov
push
std
jns
lods
sarl
push
mov
push
and
add
or
cmp
mov
ret
je
mov
jmp
ret
mov
push
mov
pop
test
test
dec
mov
stc
sbb
or
or
out
mov
cmp
clc
pop
pop
jecxz
mov
or
mov
and
outsb
rolb
enter
mov
mov
fcomip
ss
jae
dec
mov
ficomps
ljmp
mov
jge
mov
add
movb
xchg
jle
adcl
ljmp
push
fs
imull
and
or
idivb
sub
fsub
pop
lcall
pop
mov
fs
jne
cmp
je
jbe
decb
cmp
or
and
add
lea
or
or
sbb
mov
pop
xor
push
ss
rol
or
insl
adc
test
fdivp
or
pop
pop
mov
pusha
add
scas
setne
shlb
mov
in
xor
pop
lret
ljmp
cmp
js
lcall
divb
psrad
mov
lahf
or
push
dec
pop
mov
push
mov
push
push
push
push
adc
add
and
cmp
jle
decl
or
lret
or
add
add
arpl
jl
shrl
sar
jmp
jnp
xor
orb
sahf
pushf
mov
push
cmp
sbb
pop
add
scas
mov
cld
ficoms
xor
push
add
imul
jb
stc
add
mov
mov
and
std
pop
sub
push
cmp
movb
hlt
sub
ljmp
mov
lcall
je
in
loopne
test
cs
jb
push
pop
push
incb
ret
insb
cld
cmp
lea
jbe
mov
dec
or
push
push
test
push
mov
cld
arpl
inc
test
add
add
inc
das
ds
movl
xchg
jns
dec
add
and
jmp
sbb
loop
jg
es
cmpb
add
es
inc
loopne
daa
or
xchg
inc
cmpsb
pusha
inc
jnp
jecxz
and
add
inc
push
mov
dec
mov
mov
lea
sbb
and
pop
mov
mov
cmp
add
fsts
push
xor
sbb
push
pusha
or
aaa
sbb
aas
lods
sub
loope
jo
imul
inc
fcoms
sub
add
dec
scas
xor
dec
imul
pop
sub
movsl
into
add
dec
roll
shrl
push
nop
push
push
aad
sbbb
in
jo
push
and
mov
cmpsl
dec
or
jne
call
mov
mov
subl
cmp
data16
cmp
daa
xchg
test
lret
pushf
xchg
mov
cmpsl
fnstcw
je
sub
inc
or
pop
test
inc
jl
nop
add
mov
push
jo
xchg
add
sbb
clc
adc
sarb
call
push
popa
inc
mov
inc
add
ljmpw
rol
popa
add
mov
sub
xchg
inc
mov
inc
inc
add
or
or
pop
nop
mov
add
outsl
and
mov
imul
movsl
and
fs
pop
jecxz
mov
fisubl
jmp
push
pop
jnp
imul
addb
mov
out
mov
and
xchg
hlt
jecxz
and
inc
or
fwait
jns
dec
test
add
or
in
jmp
imul
test
inc
sbb
lods
mov
pop
clc
loope
lret
cmp
andl
in
inc
stos
lock
shlb
popa
sbb
inc
leave
push
adc
sbb
and
and
rcll
dec
cwtl
adc
xchg
inc
imul
test
ror
lea
mov
add
adc
lcall
sbb
xor
mov
ret
pop
sub
sbb
pop
ret
mov
add
movsb
and
mov
pop
sub
and
sbb
shrb
adcl
push
adc
jge
gs
lea
addr16
gs
adc
imul
mov
or
and
repnz
xchg
cs
sbb
sbb
inc
cwtl
mov
ljmp
sahf
pop
insl
shll
and
xor
insb
push
cmpsb
add
pop
jmp
xchg
xor
cmp
adc
je
jl
and
stc
adc
cmp
popf
cmpl
in
or
lock
push
mov
jg
jo
push
cltd
pop
negl
mov
add
cmp
je
pop
add
push
adc
mov
lcall
popa
inc
bound
cmp
push
jbe
dec
fists
cmp
cmp
sbb
outsb
ja
dec
jmp
sub
dec
je
into
adc
mov
es
test
jb
xchg
or
das
jmp
jmp
mov
mov
mov
mull
enter
jmp
pop
jne
pushl
in
add
popa
adc
rclb
sar
call
popl
push
fsubl
or
mov
mov
fildl
sub
push
or
into
out
fildll
pop
push
mov
mov
fs
idivl
dec
jge
add
pushl
cld
ret
loopne
push
or
add
pop
mov
pushl
js
mov
inc
ret
lea
test
xor
sub
mov
shl
fistps
shr
cmp
je
cmp
xlat
shrl
sub
fs
sbb
leave
std
cld
xchg
cmpsb
adc
cli
mov
sbb
fstpl
cmp
jmp
sbb
fldcw
sbb
jmp
and
mov
xchg
sbb
mov
push
dec
xchg
push
pop
ret
cmp
out
shl
cld
dec
pop
inc
repz
repz
js
sbb
shlb
mov
pop
cmc
scas
and
pushw
and
sub
movsl
shrl
stc
insb
fstl
lea
jecxz
xor
sub
or
popa
mov
fmuls
xchg
add
fsubp
cmp
sbb
sub
imull
sbb
push
mov
bnd
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
cmp
ret
mov
call
or
sbb
mov
xor
add
sbb
imul
push
sbb
push
je
xchg
cmpsl
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
stc
xchg
test
xor
ret
lods
mov
rcrb
dec
adc
dec
adc
or
push
cmp
in
add
mov
push
int3
jno
jle
ss
dec
ljmp
jp
mov
push
sub
cmp
es
insb
mov
mov
add
xorb
mov
jns
andl
add
ret
push
or
xchg
inc
add
mov
mov
je
xchg
and
lcall
adc
imul
out
call
inc
scas
mov
adcl
call
mov
add
shl
loop
xor
pop
push
xchg
pop
lea
test
insb
jno
push
mov
jne
data16
push
push
dec
pop
add
jnp
push
inc
push
cmp
cwtl
mov
cld
mov
loop
jl
sbb
or
rolb
mov
lea
inc
jl
sbb
xor
jecxz
jbe
pop
cmp
xchg
add
rol
sbb
push
xchg
pop
js
fbld
push
aam
das
in
sbb
in
dec
inc
jl
sub
jne
int3
push
sub
and
roll
aam
mov
call
dec
fildl
cmp
shr
ds
xchg
inc
add
xchg
mov
and
std
ret
rcll
sub
rclb
adc
les
in
mov
jne
push
sub
xor
or
js
mov
xor
dec
je
lea
push
loopne
add
dec
mov
lret
jo
sub
ret
or
mov
pushl
pushl
adc
xlat
push
or
adc
dec
mov
in
or
aam
or
lds
addr16
les
jge
pop
lcall
dec
lock
div
push
dec
cld
daa
icebp
xorl
cmp
lods
ret
lea
lods
sub
sub
adc
pop
sub
aaa
push
sub
in
lcall
mov
add
mov
inc
adc
dec
bound
mov
xor
jno
dec
lret
loope
push
in
add
adc
and
or
and
rcr
clc
sub
or
fisubs
sbb
fcoms
fistps
cmp
and
jo
mov
popa
adc
les
mov
lret
xor
xor
in
and
dec
dec
outsl
notl
cmp
loop
adcb
push
iret
ss
push
imul
mov
cld
pop
mov
mov
neg
sbb
and
push
push
or
cmp
sbb
cmpl
lods
mov
iret
inc
call
jge
pushl
mov
add
push
inc
and
clc
dec
or
popa
adc
jmp
sbb
mov
imul
or
pusha
push
sti
aas
xor
notb
adcb
pop
jge
les
mov
test
das
and
sar
fcomip
pop
adc
adc
adc
ja
pop
pop
es
dec
sbb
push
cs
rorb
xchg
lds
loop
mov
adc
nop
jmp
sbb
push
push
push
add
dec
sub
mov
add
cwtl
push
test
lret
inc
ljmp
sti
je
cmp
mov
jo
pushf
sbb
repz
or
xchg
mov
mov
pop
inc
lret
ja
arpl
or
test
cmp
insb
xor
clc
xor
sbb
push
jne
movb
clc
mov
cmp
jne
popf
movsl
cmpsl
adc
fldz
xor
push
mov
movb
notb
addr16
dec
aas
mov
xor
xchg
dec
ja
push
lea
fcoml
mov
sub
xor
pop
outsb
test
and
lea
or
popf
sub
mov
sbb
dec
sbb
faddl
mov
es
sbb
test
push
mov
shlb
jl
imul
push
adc
enter
xchg
and
push
cltd
add
xor
nop
sub
push
imull
rorb
or
addl
int3
ja
adc
dec
popa
mov
pop
xchg
mov
sbb
add
push
push
cmp
push
loop
push
adc
test
mov
cs
pop
push
or
dec
popf
cmpsl
rcll
nop
out
sbb
mov
dec
mov
and
jge
inc
imul
fwait
jnp
sbb
test
add
mov
lcall
inc
mov
inc
pusha
fsubrl
xchg
push
pop
mov
dec
and
mov
push
push
push
push
aaa
movsl
cmp
outsb
add
mov
stos
jl
cltd
mov
adc
add
out
ja
out
andl
mulb
add
add
fs
out
sbb
pop
into
popa
xor
cmp
in
ja,pt
pop
pop
or
lea
sbb
insb
fsubrs
jge
adc
mov
add
fmuls
xor
add
repz
or
mov
loopne
cmc
jmp
mov
adc
fs
mov
sbb
fs
xlat
push
pusha
sub
adc
jo
movsl
repnz
cmpb
xor
je
push
pop
pop
sub
or
mov
mov
push
inc
shlb
cs
sbb
mov
or
add
jmp
adc
sbb
mov
fidivrs
and
repz
in
cmp
mov
bound
dec
insl
mov
inc
xchg
sbb
xor
das
pusha
mov
pop
test
push
fsts
sbb
call
jmp
pop
push
popa
push
sbb
sub
push
jecxz
nop
or
pop
and
sbb
pop
jnp
or
out
push
movsb
insl
lea
outsl
sbb
mov
xchg
cmpb
movsb
pop
ficompl
mov
loopne
sbb
add
scas
pop
jl
mov
cltd
mov
lea
mov
cld
in
mov
or
and
into
sbb
ja
pushf
dec
ret
add
out
sti
enter
add
mov
idiv
push
mov
push
push
adc
ret
xor
idiv
xchg
push
add
push
in
cli
lret
jp
lds
add
shrb
xor
rolb
mov
imul
xchg
sbb
push
dec
inc
not
mov
aas
add
add
push
and
push
lock
and
or
out
pusha
fstpl
push
pop
aas
push
cld
fistpll
mov
sub
clc
je
jg
xorb
sbb
mov
dec
push
into
jp
xor
or
pusha
js
fistpll
popa
jg
fs
sub
jl
movl
adc
test
stos
int
dec
mov
lahf
xor
std
pop
negl
pushf
movb
sbb
sbb
xchg
dec
lea
add
mov
iret
ds
xchg
sub
cmp
or
xlat
std
scas
nop
or
out
insb
mov
cmc
mov
inc
hlt
mov
test
jns
faddl
pop
or
or
mov
fdivrp
mov
sub
rcr
lea
int3
mov
mov
hlt
mov
inc
les
movsl
shl
jmp
into
push
jbe
mov
jge
je
into
clc
fidivl
jmp
loopne
xor
push
xchg
cli
cli
sbb
mov
ret
or
out
out
pop
jne
pop
pop
movb
push
xor
xor
mov
push
inc
xchg
pop
in
hlt
lcall
rorl
daa
or
fmul
mov
lock
mov
xchg
cmp
adc
gs
xchg
push
gs
bound
fstps
or
xchg
jne
push
andb
jmp
sbb
test
mov
out
push
pop
pop
inc
movsl
and
into
pop
leave
testl
add
int3
ljmp
pop
insb
call
add
mov
push
and
cltd
add
push
pushf
inc
repnz
ret
in
push
mov
int
sbb
loope
pop
inc
mov
sub
arpl
xor
mov
inc
jne
sti
mov
adc
mov
pop
test
jmp
xchg
lea
punpckhdq
leave
fs
leave
xor
jnp
pop
xor
sbbb
sub
mov
lea
hlt
ret
std
or
sbb
inc
mov
push
push
pop
in
lea
adc
mov
fnstsw
xor
mov
dec
or
dec
or
add
fisubrl
loopne
insl
or
adc
mov
imul
andl
push
setp
sbb
mov
mov
add
add
mov
les
mov
sbb
popa
add
mov
mov
add
sbb
leave
add
push
sbb
lahf
sub
jbe
shlb
mov
mov
push
pop
cmp
sbb
add
stc
pusha
dec
sbb
push
push
and
dec
and
inc
cli
cwtl
push
nop
lret
and
cmp
roll
aaa
sbb
cmpb
inc
and
mov
adc
xor
and
mov
mov
data16
adcl
rcrl
sbb
add
push
mov
cmpb
clc
setb
test
enter
enter
mov
or
dec
adc
data16
push
lea
push
or
cmp
icebp
sub
or
jmp
insl
push
mov
cs
cld
mov
dec
dec
mov
pop
push
mov
arpl
push
inc
hlt
pop
call
and
sub
in
fcomp
gs
shrl
inc
mov
xlat
das
push
mov
jp
pop
mov
js
jo
and
sbb
es
or
sbb
icebp
xchg
xor
jbe
add
shr
sub
pusha
sbb
popf
inc
bound
adc
sub
sub
mov
in
aas
jmp
lds
test
xchg
addr16
add
sti
in
aas
mov
pop
push
and
xor
js
add
or
pop
pop
lock
gs
add
xor
and
add
pusha
pop
and
aas
push
and
das
inc
xor
inc
shrb
into
xchg
mov
addr16
mov
mov
sbb
add
jl
cmpsl
fisubl
jno
sbb
and
jecxz
loop
jb
dec
gs
sub
movb
cmp
je
stc
mov
push
add
idivl
inc
sbb
cmp
loop
jp
pop
push
dec
in
out
enter
leave
xor
or
xadd
and
push
mov
aam
inc
add
adc
or
adcb
dec
int3
add
nop
testb
jne
add
pop
rol
xor
out
cmp
fstl
sbb
adcl
test
xor
cmp
mov
jle
stos
mov
pop
hlt
dec
xchg
pop
pop
je
sarb
addr16
adc
sbb
test
imul
pop
je
or
mov
xchg
add
or
jb
pop
add
xchg
loope
aam
and
pop
mov
cmp
movsb
stc
outsb
mov
push
outsb
scas
les
xchg
sub
inc
cwtl
xor
push
in
adc
shlb
pop
push
sbb
adc
mov
adc
xchg
mov
add
xchg
mov
xchg
or
mov
adc
fisubs
daa
jne
mov
aaa
xorl
dec
sbbl
push
xchg
push
jl
pushl
push
lret
jmp
scas
mov
xchg
andl
mov
cmp
mov
sbb
inc
ret
sbb
in
jae
xchg
mov
ja
fnstsw
test
je
stc
loop
dec
mov
jmp
dec
mov
pop
mov
jmp
imul
and
mov
test
dec
add
xor
inc
pusha
inc
xor
rcl
xchg
shlb
lcall
fmulp
js
cmp
jge
mov
mov
mov
cmp
add
sbbb
cmp
jle
movsl
jne
sbb
pushl
inc
mov
or
and
xchg
fsubr
mov
lcall
je
fidivrl
xchg
mov
or
in
sbb
aam
xor
or
jae
push
test
mov
cmp
jg
repnz
in
mov
add
and
cmp
cmovbe
testb
xchg
add
shlb
xorb
mov
hlt
mov
stc
stos
push
push
fsubs
or
lahf
push
cmp
cli
jno
dec
dec
ficoml
out
mov
pop
add
scas
sbb
and
mov
xchg
je
or
in
bnd
cwtl
movsb
push
loopne
mov
fcompl
add
mov
sarl
lock
pop
push
cmp
insb
sbb
js
and
add
fwait
mov
clc
sar
push
dec
lock
or
sub
push
shrb
jno
mov
or
cltd
mov
dec
xchg
insb
or
push
jo
std
mov
arpl
mov
lcall
cld
jnp
test
ja
fcoml
ss
add
add
dec
andl
into
sub
daa
push
cltd
pop
dec
or
test
xchg
popa
sti
add
in
das
adc
sbb
or
nop
or
aam
jns
pop
outsl
mov
jne
repnz
int
adc
push
pop
pop
or
pop
adc
cld
mov
int
andl
xor
fisubrs
lock
popa
sbb
in
repnz
push
mov
lock
and
sub
sbb
inc
lea
pop
popa
cmp
mov
xor
or
stos
and
rclb
lock
cmp
xchg
inc
sahf
jge
popf
push
push
insb
sti
add
xchg
jle
jge
ret
pushf
adc
pop
mov
or
insb
mov
je
dec
push
inc
add
shll
xchg
mov
jno
or
ss
xchg
push
popa
ror
jae
jb
pop
inc
mov
pop
add
cmpsl
adc
sub
call
cs
cmp
out
stos
lock
mov
hlt
add
cmpsb
lock
and
jnp
clc
incl
dec
push
push
hlt
lret
xchg
shlb
jle
nop
jb
and
clc
lock
mov
xchg
add
mov
lods
hlt
cmp
jmp
inc
hlt
mov
std
in
dec
jo
or
jbe
into
push
push
add
push
rorb
sbb
gs
mov
cmp
push
hlt
loopne
add
in
testb
sbbb
hlt
hlt
insl
inc
inc
in
popl
jl
jb
sbb
xor
pop
clc
jg
mov
cwtl
add
ret
shlb
ja
addr16
pop
enter
inc
dec
rorb
add
and
sub
pop
or
pop
pop
mulb
cmpb
add
clc
icebp
cmp
pop
sbb
push
mov
sarb
inc
adc
push
xor
xor
cld
and
xchg
test
movzwl
lods
or
xor
fdivrl
inc
push
adcb
cwtl
push
lea
push
cmp
incb
push
roll
pop
adc
mov
jbe
pop
push
mov
cmp
jo
fnsave
cld
pop
mov
xor
jo
and
sbb
test
add
jg
sarb
loope
and
or
sbb
cmp
cs
xchg
scas
loop
call
testb
enter
cmp
daa
sub
mull
test
xor
and
jbe
mov
lods
cli
sbb
push
inc
inc
push
test
cld
xchg
add
in
jbe
sub
sub
add
mov
adc
mov
push
xchg
push
leave
ret
xchg
push
outsb
and
cmp
sub
jle
xor
andl
ret
mov
xchg
pop
and
lods
jo
mov
sarb
addr16
movl
lock
xchg
dec
cmpsl
inc
jle
sub
jmp
imul
xor
push
mov
clc
push
xchg
arpl
xor
sub
inc
push
cmp
lret
xchg
mov
enter
dec
test
xchg
sub
xchg
mov
rorb
ja
add
jb
push
hlt
jle
aas
fbstp
lret
imul
aaa
adcl
xlat
outsb
xchg
and
xchg
cmpsb
mov
add
jle
jg
lds
int3
jmp
mov
dec
aaa
or
xchg
jbe
rorb
push
inc
call
fisttpl
add
test
mov
shr
aad
add
xchg
pop
add
shrl
adc
sbb
ljmp
xchg
adc
xchg
mov
cmp
mov
test
mov
dec
xor
in
adc
sbb
test
add
js
icebp
or
jno
sahf
mov
dec
subw
fs
adc
fs
mov
push
jnp
mov
or
mov
stos
orb
aam
add
movl
int
pusha
xchg
add
fdivs
andb
mov
mov
inc
and
out
xchg
push
add
pop
mov
jns
add
pop
lret
xchg
inc
mov
add
imul
iret
outsb
cwtl
out
add
adc
in
call
adc
nop
sbb
pop
pop
ds
adc
in
lea
aad
dec
nop
add
or
push
repz
push
mov
lea
xor
or
pop
ds
xchg
sub
jg
dec
sbb
fstps
pop
les
rclb
jbe
sbb
mov
sbb
inc
or
lcall
out
sbb
sub
xchg
lock
jecxz
mov
fimull
mov
fwait
or
mov
sub
test
loopne
outsb
cmp
test
or
sub
add
xchg
repz
iret
nop
lea
pop
push
outsb
mov
testl
dec
or
push
std
rcr
jge
or
xchg
test
mov
xchg
dec
ljmp
gs
cmpb
aad
push
or
pop
lea
negl
roll
scas
lea
lods
aad
push
or
push
and
and
insl
dec
add
lcall
or
pusha
push
ret
je
fcompl
pusha
enter
xor
add
cmp
or
push
dec
or
adc
mov
ficoms
mov
adc
jge
lcall
add
fldl
and
push
mov
dec
push
push
cmp
nop
push
subl
mov
je
data16
xchg
mov
jle
jns
dec
xchg
mov
js
adc
jnp
movsb
fwait
orb
hlt
mov
mov
js
adc
sub
adc
pop
rcll
loop
jne
repz
dec
sub
push
int3
push
jo
ds
push
sti
lcall
cmp
in
popl
gs
xchg
dec
mov
fsub
add
cmp
test
pop
rcrb
inc
cmpsl
aaa
stos
mov
mov
and
aas
icebp
fdivl
add
popa
repz
or
lret
jne
fmull
sub
jae
pop
sti
in
cmp
or
adc
sbb
add
sbb
inc
adc
mov
cld
xchg
or
jmp
xor
jl
adc
imul
jl
nop
and
fiadds
pop
mov
sbb
rorb
add
adcb
xor
add
pop
loope
xchg
fwait
aad
add
xlat
test
push
loope
int3
dec
in
add
cmp
adcl
push
aad
stos
sub
cmpb
cmp
cli
jle
add
adc
rorb
mov
mov
fwait
lea
mov
pop
pop
mov
shrb
in
popf
cld
mov
xchg
arpl
test
dec
sbb
pushf
jbe
cmp
cwtl
cltd
jecxz
ja
xchg
mov
test
push
cs
roll
rorl
push
adc
inc
or
ja
push
lods
sti
mov
repnz
mov
push
mov
ds
outsl
test
fs
data16
xchg
orb
outsl
push
lock
lcall
cmp
ret
subb
mov
cmp
lahf
cmp
adc
adcb
notl
test
adc
xchg
ret
hlt
lock
ret
jno
pop
movsl
jne
and
push
mov
xorl
lret
dec
popa
and
pushfw
mov
in
in
inc
adc
sub
inc
add
enter
es
sbb
in
incb
add
mov
aaa
mov
cmp
mov
mov
outsl
sbb
loopne
mov
inc
loopne
out
loopne
sub
cli
insl
sub
roll
roll
dec
jo
dec
ret
imul
sub
push
loop
lret
test
ljmp
sarb
popa
lea
mov
pop
xchg
inc
xor
clc
jecxz
add
mov
add
inc
out
cli
sbb
dec
iret
aam
or
mov
popl
cmp
outsl
jmp
ss
xchg
jne
mov
push
add
and
push
jb
push
sub
aas
fcom
add
cs
out
add
jnp
enter
push
outsl
mov
jne
jge
or
enter
fs
enter
cmpsl
addl
xor
or
or
jns
jno
bound
and
fisttps
xchg
popa
in
outsb
stos
push
gs
or
mov
lea
fs
adc
in
imul
and
add
xchg
leave
cmp
imul
daa
xor
adc
sbb
push
pop
cmp
jo
push
or
sbb
mov
in
leave
adc
xchg
add
adcb
dec
movsl
or
and
jne
adc
add
movsb
mov
adc
adc
mov
mov
pop
test
sahf
push
imul
xchg
adc
je
sbb
rcrl
add
orl
jecxz
push
jmp
in
push
mov
xlat
int
or
daa
xchg
daa
add
push
push
loopne
and
cmpsl
mov
jne
cmp
add
pop
loope
add
icebp
mov
lea
jge
leave
pop
add
fstl
and
cwtl
loop
cmp
testl
call
mov
adc
leave
cmp
and
fninit
test
je
enter
inc
push
cmpsl
pop
pop
lahf
pop
out
ret
push
cmp
push
mov
or
out
xchg
adc
scas
jmp
test
sbb
xor
or
pop
xchg
lods
xlat
sbb
aad
lcall
adc
sbb
stc
mov
xor
in
imul
rcrb
cmc
lds
mov
call
push
push
pop
cmp
je
es
mov
xor
xlat
jno
add
or
or
sbb
rcll
xor
sbb
or
pop
add
test
pop
and
pop
pop
test
adc
pop
cmp
jge
fisttpll
and
orl
mov
sub
mov
add
stos
mov
sbb
adc
nop
xlat
and
add
sub
fsubrl
test
jge
inc
sub
jnp
fidivl
push
mov
shlb
sub
dec
loopne
xchg
dec
testl
push
sub
aas
aam
lods
daa
das
popa
call
std
xor
das
jns,pn
cmp
add
icebp
and
sbb
mov
add
jns
shll
into
int3
xor
insb
dec
push
rorb
pmaddwd
mov
leave
push
xor
mov
jge
sub
pop
and
jns
fdivr
sarb
cwtl
inc
add
mov
and
pusha
dec
jae
enter
push
popf
call
xchg
xchg
mov
lods
and
sub
mov
jmp
add
push
or
loopne
xor
mov
jbe
fldl
ja
xor
mov
xchg
je
loopne
lock
add
loopne
out
cmova
pop
pop
mov
push
jbe
add
faddl
mov
adc
xchg
add
add
mov
sti
adc
mov
pop
push
orl
cld
and
pushf
cli
lea
pop
and
out
pushf
sbb
lret
rorb
push
fdivl
xchg
mov
insl
push
or
out
or
lds
cwtl
lock
xchg
rcrb
inc
les
insb
mov
nop
sub
or
jb
sub
js
or
das
les
rcr
jge
test
outsl
add
ret
ljmp
cmp
dec
test
divb
mov
add
mov
jnp
popa
movsl
xchg
or
and
jae
fildl
enter
adc
jge
sbb
adc
ss
int3
push
or
or
xor
lret
xchg
js
sub
lcall
fldl
insl
xlat
xchg
adc
mov
es
and
data16
add
pop
roll
das
add
cmp
sub
add
test
les
and
jmp
test
jae
loope
or
pop
pusha
cmpb
push
mov
mov
or
rolb
dec
mov
shr
add
cmp
xchg
mov
jp
roll
sub
adc
pop
mov
icebp
or
push
sub
mov
mov
jo
mov
pushf
sbb
add
mov
lock
push
aaa
lods
int3
fisubrl
add
insl
jmp
and
cld
dec
hlt
sub
push
je
xor
lods
lea
jo
jno
in
add
push
sub
je
iret
cmp
add
lds
or
push
xchg
movsb
cmp
sub
sbbb
test
into
mov
or
hlt
sub
fnstenv
add
adc
and
cmc
add
inc
cmpl
adc
into
in
mov
jbe
loope
js
adc
out
or
or
jl
xchg
fstpt
inc
bound
mov
push
ret
xchg
xchg
push
xorb
pop
js
adc
iret
push
in
scas
jl
pop
cmc
cmp
or
dec
in
adcb
cmp
push
inc
add
add
fmuls
lds
or
enter
sub
inc
or
mov
loop
ljmp
inc
jp
lock
imul
xchg
pusha
xchg
mov
loope
push
fidivs
push
mov
xor
faddl
add
mov
pop
push
pop
leave
add
adc
fiadds
adc
stos
sub
mov
leave
test
sub
ljmp
pop
arpl
pusha
adc
scas
fsubr
add
je
cmpb
jne
mov
jmp
ret
push
mov
xorps
push
ss
je
jl
clc
aas
cmc
sbb
stc
sub
lea
push
lea
mov
loope
inc
push
in
fwait
push
mov
movsb
ret
test
lret
insb
ficoml
gs
arpl
fldt
lret
fidivrl
jl
test
cmp
jle
pop
sub
loopne
test
lcall
jne
jns
imul
push
add
imul
rcr
jmp
int3
jo
push
sub
dec
cmp
je
sub
xlat
pop
xchg
shlb
stc
cmp
outsb
jns
fcmovnu
js
add
lock
shufps
adc
push
sar
xorb
mov
adcl
xchg
pop
adc
in
push
xchg
pmulhw
xchg
fldcw
fisttps
js
dec
or
push
dec
sub
in
out
xorl
mov
mov
daa
or
sbb
insl
jbe
xchg
xor
ja
push
or
or
ja
cmp
call
hlt
jmp
lock
test
mov
push
popf
mov
or
add
xor
clc
and
jbe
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
cltd
lods
inc
sub
xchg
decl
call
cmp
xor
jle
incl
testb
sub
mov
fbstp
or
mov
xchg
inc
repnz
test
outsl
outsl
rolb
inc
or
pop
pushl
sub
and
mov
mov
adc
jbe
push
movl
dec
xchg
decl
xchg
js
xchg
push
or
cmpsb
dec
or
lret
push
rcl
add
and
bound
mov
inc
shrl
popa
add
rorl
and
adc
adc
push
lahf
add
stos
test
pusha
arpl
popa
adc
call
inc
add
sbb
repnz
pusha
mov
ret
dec
bound
movsb
cs
sub
or
xor
pop
leave
push
cmp
je
xor
sbb
mul
pminsw
dec
ret
mov
enter
fucomp
imul
dec
push
jmp
cmpsl
mov
rclb
pop
sbbl
xchg
jecxz
shl
dec
test
mov
add
adc
outsl
sub
popa
out
inc
add
cmp
mov
mov
cwtl
fldl
jae
subl
loopne
xor
rcll
pcmpeqd
and
data16
inc
inc
jecxz
or
xor
add
gs
fs
xor
adc
in
or
mov
push
pop
xchg
xor
adc
cmpsb
xor
fidivrl
mov
shr
push
sahf
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
cmp
lock
adc
loop
add
ds
adc
dec
cmp
repnz
jae
aaa
xor
sub
or
mov
lahf
cmp
faddp
jmp
ret
lahf
mov
pop
push
test
je
cli
jmp
mov
loope
pop
fwait
inc
jno
cmp
push
inc
cmp
jae
xor
test
cwtl
scas
cmp
push
add
push
pop
jbe
ja
xchg
jl
ret
sti
jne
mov
pop
jl
pop
add
cmpb
xor
mov
ss
push
inc
jmp
imul
mov
pop
cmp
cmp
imul
loopne
cmp
out
mov
pop
or
pop
push
adc
mov
je
adcl
pop
or
mov
push
or
and
mov
inc
mov
dec
adc
push
push
loope
mov
push
adc
mov
sbb
inc
or
add
mov
call
xchg
lock
fmul
sbb
in
adc
shlb
mov
pop
mov
cmp
jae
data16
inc
inc
pop
pop
orb
pop
leave
and
lcall
sub
popa
inc
sbb
filds
lea
push
mov
and
roll
negb
sti
or
xchg
sbb
push
je
sti
jp
push
and
pop
mov
test
cwtl
outsb
pop
into
xlat
jl
cld
inc
push
jge
push
sub
icebp
dec
push
sub
cld
sub
push
clc
pop
in
imul
sbb
push
xchg
cmp
jecxz
imul
add
xchg
fstpl
movsl
ja
and
and
add
jp
stc
bound
insl
daa
mov
in
push
loopne
jns
test
add
imul
add
mov
neg
push
cmp
ret
into
mov
push
rorb
jne
insl
and
mov
jge
mov
push
je
mov
jmp
mov
push
mov
push
fwait
repz
inc
push
mov
xchg
cmp
add
rcrb
gs
mov
andl
pop
ret
push
test
push
add
imul
pushf
pop
outsl
ret
xchg
pushf
add
dec
cmc
inc
and
popf
xchg
xor
mov
push
orb
xchg
test
outsl
mov
ja
dec
sbb
jo
fdivs
xchg
pop
inc
add
cmc
and
imul
aad
cmp
xor
fmull
inc
dec
lock
je
and
es
and
inc
movl
mov
push
or
imul
jno
into
jbe
jle
adc
test
nop
js
fidivl
fidivl
sbb
pop
in
movsl
inc
roll
mov
pop
sbb
insb
mov
inc
push
je
push
xor
pop
mov
test
js
jl
orl
lods
inc
iret
repz
int
sahf
aad
add
imul
cmp
push
add
push
sub
pop
jg
pop
sti
or
mov
push
or
xchg
pop
sub
mov
loope
je
jo
pop
bound
in
dec
pushf
fsubrl
enter
movaps
shr
mov
nop
jmp
cmp
push
ret
ret
push
xor
subl
repz
xor
cmp
mov
and
sub
sub
inc
js
test
sub
push
sbb
push
jae
or
dec
adc
movsl
mov
lret
jno
rcll
or
push
rcrb
cmp
je
mov
aaa
pop
jno
dec
sbb
mov
mov
fdivl
inc
mov
mov
dec
fistl
rolb
scas
mov
sub
mov
add
cmp
push
adc
push
inc
orl
lock
adc
push
jnp
sub
xor
repz
ror
sub
xor
jge
lcall
jg
sub
sbb
sub
inc
dec
js,pn
inc
sub
sub
sbb
inc
lcall
mov
jnp
inc
and
xor
sbb
adc
das
mov
mov
in
lods
pop
imul
call
loopne
repz
imul
lods
orl
add
mov
adc
popf
or
xchg
mov
out
mov
cmc
mov
repz
in
cmp
push
push
jnp
jbe
ficoms
insb
cmc
and
fcom
xorb
ret
sub
enter
mov
xor
ror
mov
scas
jae
add
scas
imul
sbb
lret
xlat
sub
loopne
push
xor
xlat
push
dec
xor
js
cmp
mov
push
push
add
add
cmp
push
lock
pushl
mov
cmp
mov
dec
movsl
daa
loopne
and
sti
sbb
sbb
adc
pop
cmpsl
xor
jge
add
pop
hlt
gs
dec
push
pop
or
cmp
int3
mov
scas
push
shlb
xchg
push
xchg
hlt
lea
push
cmpsb
sub
mov
xchg
adc
cmp
insl
lds
mov
sub
inc
loopne
pop
jns
rolb
inc
pop
pop
dec
and
inc
or
movsl
cs
xchg
pop
dec
inc
cmpsb
fnsave
push
ret
sti
and
inc
or
sbb
aas
leave
mov
xchg
ja
mov
xchg
add
xchg
dec
repnz
mov
sbb
sbb
push
mov
mov
xchg
inc
movsb
leave
mov
inc
int
sbb
movsl
and
shrb
addr16
push
stc
fdivr
faddp
push
xchg
pop
outsl
cmpb
add
pop
or
pop
loopne
fisttpl
inc
inc
mov
adc
jb
add
lcall
push
pop
aad
or
mov
mov
mov
adc
sub
add
shl
xor
daa
std
dec
inc
or
test
push
sbb
cmc
and
add
popa
add
ret
dec
adc
into
and
hlt
aad
loope
jbe
stc
mov
cld
sbb
mov
aas
ret
and
sub
pushl
mov
pop
ret
frstor
repz
mov
adc
add
scas
lock
mov
and
adc
sub
fwait
out
inc
test
mov
daa
insb
test
mov
and
test
mov
lret
inc
fstpl
push
xchg
pop
je
mov
pop
xor
mov
in
pusha
jmp
xor
icebp
sub
push
fcmovb
cmp
in
jmp
jns
rorb
mov
in
test
sbb
mov
icebp
xchg
inc
xor
rclb
dec
sar
js
loop
inc
jge
test
outsb
cmpsl
mov
in
lea
out
lock
int
xchg
jp
jne
adc
pop
push
negb
dec
hlt
add
push
imul
push
rcr
ret
pushl
lret
mov
out
sub
movb
inc
jb
imul
lds
rorl
cmp
ret
xchg
stos
inc
cmp
xor
adc
aaa
sub
lea
mov
cmpb
pusha
jo
inc
insb
pop
push
cmpb
test
add
sbb
or
mov
push
test
mov
mov
sbb
mov
inc
push
add
adc
adc
or
sub
add
cmp
dec
ret
in
mov
jo
ja
sbb
xor
add
push
je
push
mov
and
in
jmp
leave
inc
jno
or
jo
notl
mov
push
loope
mov
push
stos
stos
jne
je
popa
sub
push
mov
xchg
sbb
or
cmp
andl
mov
adc
dec
aas
mov
sbb
lcall
push
pusha
fstpl
das
cmp
xchg
aad
cmp
test
test
push
fnstsw
movsb
jecxz
sub
or
test
imul
cmp
ds
jne
fadd
mov
into
or
dec
icebp
mov
mov
rorl
dec
add
shlb
xor
sahf
ficompl
js
test
cli
push
push
pop
in
sbb
mov
les
negb
add
ret
cmp
sbb
loopne
daa
in
in
mov
rorl
add
add
xchg
push
sub
adc
movsb
push
movsl
neg
test
dec
int3
add
enter
add
iret
outsl
mov
xchg
adc
mov
sbb
int3
xor
cmp
add
or
xor
push
adc
push
sub
adc
mov
js
xor
nop
leave
add
pushf
mov
in
cmpsb
xlat
push
adc
mov
push
adc
loop
mov
fwait
adc
dec
int3
mov
cs
or
mov
movl
ja
mov
nop
fsubs
test
icebp
jne
xchg
loopne
cmp
lods
mov
out
test
loopne
and
je
cmpb
jmp
js
sbb
mov
int
xor
fcomps
out
jnp
adc
xchg
decb
call
shlb
mov
and
xor
mov
ror
sub
inc
pop
cmp
sahf
jl
decl
add
xchg
inc
ret
mov
mov
cmp
subps
test
mov
es
xor
sub
ja
mov
cmp
lea
decl
or
push
push
loop
add
jl
sbb
adc
push
inc
dec
inc
xchg
add
loopne
add
dec
lods
scas
or
adc
icebp
push
cli
cmp
pushf
push
clc
push
jmp
inc
sub
lods
gs
cmp
inc
loopne
pushf
push
sbb
les
dec
fdivs
push
inc
push
ss
cs
fsubr
shr
add
jne
inc
sub
fsubs
enter
add
inc
dec
ds
sub
and
setg
or
rol
test
jmp
fcompl
inc
cwtl
inc
jmp
jmp
rclb
mov
jg
insb
push
push
push
cmc
nop
roll
xchg
sbb
or
adc
mov
arpl
push
das
xchg
sbb
sbb
popf
mov
dec
out
mov
adc
adc
and
pop
push
or
pushl
and
xchg
sub
pusha
scas
in
cmp
inc
adc
xchg
iret
loopne
sbb
xor
clc
xchg
jmp
sbb
in
nop
add
in
adc
or
adc
xchg
push
sub
adc
and
pusha
and
adc
adc
inc
adc
push
sbb
jmp
dec
mov
mov
les
enter
sub
xor
or
into
cmp
es
daa
sub
cmp
popa
xchg
xchg
add
add
loopne
data16
mov
dec
or
fistps
loope
cmpb
loope
cs
movsb
sbb
sbb
or
inc
xchg
push
cmp
lret
push
push
rorl
cmp
inc
jmp
mov
pusha
clc
sbb
cmc
mov
add
mov
inc
xor
mov
xchg
orl
lret
inc
add
push
in
and
lret
sbb
adc
jmp
and
daa
in
or
cmp
cmp
scas
pop
fstpl
cmp
dec
in
jno
lea
lea
mov
mov
mov
dec
and
or
imul
mov
imul
loop
mov
imul
test
aam
push
sbb
cmc
mov
jmp
nop
das
pop
mov
add
sbb
js
movsl
mov
data16
repnz
mov
sbb
daa
jo
jno
or
sti
cmpsb
shl
leave
mov
lods
into
cmpsb
sbb
cs
and
mov
cmp
cmpb
adc
subl
test
and
and
mov
mov
xchg
jo
std
dec
cmp
inc
test
lods
call
sbb
or
hlt
call
mov
add
jno
mov
xor
mov
ret
ret
mov
mov
and
and
adc
out
pop
movsl
in
movsl
fdivr
roll
ret
scas
lods
outsb
xor
aam
lds
cwtl
shl
nop
imul
adc
sahf
add
pop
xchg
mov
into
movsb
add
jl
jmp
rcrb
rolb
dec
xlat
loope
ja
scas
sub
popf
jb
sbb
mov
fildl
pop
insl
push
or
push
lea
aam
ss
add
loop
out
cs
ficompl
jne
dec
ljmp
shlb
sarb
ret
fstl
add
mov
cltd
fwait
jns
push
lock
jge
and
push
mov
cmp
stos
add
fiadds
xlat
out
andl
mov
ss
pop
movsb
add
add
sahf
adc
mov
jmp
shl
pop
jp
push
xor
dec
push
je
dec
jne
xor
mov
xor
xchg
shr
and
push
cmc
lahf
mov
movsl
nop
pop
push
mov
rcr
xchg
xchg
push
fst
das
pushf
mov
test
pop
repnz
ficoms
cmp
je
cltd
imul
ret
lock
push
add
aaa
or
movl
or
inc
add
daa
xor
mov
mov
lea
cli
jb
adc
into
and
orb
or
pop
dec
popa
inc
dec
fsubr
jge
push
adc
das
lahf
pop
ja
xor
adc
xchg
aas
pop
and
lds
mov
sar
sub
push
data16
mov
test
popa
test
nop
xchg
or
jecxz
cmp
sbb
and
push
and
ss
cmp
adc
and
or
fcmovnb
out
push
push
lods
and
cmpb
or
add
and
jo
frstor
cmp
testb
inc
je
and
push
push
xor
ja
loop
ds
je
outsb
rorb
mov
jge
and
test
mov
insl
lcall
sub
outsb
lock
sbb
xor
lahf
mov
adc
jmp
sub
icebp
xchg
inc
lea
push
sub
add
fmuls
ja
dec
hlt
xor
cmp
mov
dec
dec
sbb
sub
aaa
push
xchg
nop
enter
cld
leave
fildll
jle
jmp
cmp
je
aaa
jns
jo
add
rcrl
inc
push
pop
fiadds
int
mov
xor
xor
jmp
jmp
adcb
jno
sbb
dec
shr
add
ret
cmpsb
inc
lcall
pop
sub
lea
xchg
pop
popa
add
fcmovnb
ss
cld
incb
lds
or
mov
xchg
iret
sbbl
xorb
pop
add
iret
mov
push
inc
mov
mov
adc
js
loop,pn
adcb
adc
fisttpl
dec
das
bound
lret
sub
sbb
leave
adc
sub
sub
jbe
les
loope
imul
lret
jg
jge
or
add
mov
and
xor
adc
push
xor
add
sub
inc
fmuls
and
inc
in
mulb
rcll
dec
pop
fwait
dec
les
push
mov
jns
ret
xchg
or
ljmp
bound
mov
and
rorb
nop
cld
data16
sbb
and
jg
ja
jge
icebp
mov
mov
or
adc
fdivrs
and
fldcw
imul
dec
add
sbb
imul
xor
adc
popf
and
add
pop
aam
mov
dec
jmp
jo
enter
insb
mov
mov
fsubrl
lea
rorb
mov
rcr
inc
adc
and
mov
movsl
gs
js
push
lret
sub
fs
inc
mov
xor
mov
dec
pop
insl
jae
inc
lret
fmul
add
shrb
jns
xchg
add
xchg
sbb
push
mov
sub
popf
mov
inc
cmp
addb
add
mov
sbb
ss
rcr
push
jae
adc
mov
push
sub
push
xchg
cmpsb
mov
lods
or
fdivrl
inc
lods
loope
insb
xchg
inc
adc
push
cltd
pop
or
sub
and
or
mov
inc
std
fs
rcr
movsl
popf
mov
and
das
fmuls
mov
movsl
and
push
push
lret
mov
imul
lret
mov
rorb
sub
in
dec
repz
or
adcl
das
add
movsl
push
xor
push
or
adc
aam
into
ret
inc
dec
adc
add
mov
das
jl
sub
mov
jae
outsb
fistpl
movsb
in
push
mov
loopne
mov
mov
xchg
fnsave
mov
adcb
xchg
imul
push
faddl
adc
stos
pop
dec
je
mov
sbb
mov
inc
enter
push
sub
jns
mov
push
and
mov
psubsw
mov
inc
inc
dec
xor
aam
dec
inc
pop
mov
and
dec
inc
or
mov
lods
test
cli
dec
mov
popa
addr16
and
jae
sub
lea
add
dec
test
adc
adc
adc
fildll
push
aad
shlb
push
outsl
ja
mov
mov
cmp
mov
insl
cmp
cmp
mov
bound
in
push
push
mov
stc
push
stc
sbb
adc
dec
cwtl
cmp
mov
mov
mov
or
sbb
or
and
cmp
cmp
popf
or
aas
dec
cwtl
push
inc
pop
subb
jnp
inc
jo
or
inc
dec
jle
push
mov
test
mov
fstl
fs
nop
filds
sub
sbb
es
cmp
pop
dec
dec
and
add
add
pop
push
in
mov
push
out
push
inc
add
fstps
movsb
lods
leave
cmpsl
and
and
push
mov
roll
jmp
lgdtl
jmp
sbb
add
cmp
lods
sarl
imul
test
push
stc
mov
inc
sub
xchg
and
jl
mov
sub
xchg
mov
mov
push
je
sbb
or
es
fidivrs
push
out
pop
push
lock
mov
adc
jb
add
adc
dec
sbb
orl
lret
cmp
adc
cmp
pop
orl
add
fistps
xor
mov
andb
push
mov
fwait
loopne
lahf
push
mov
sub
movsl
adc
push
adc
xor
or
movsb
jb
fwait
dec
pop
add
xchg
inc
cs
pop
add
ret
and
aas
movl
pop
cmp
mov
pushf
sub
cwtl
popf
push
sti
push
dec
sub
xchg
push
mov
xor
xchg
das
jnp
push
arpl
sbb
push
sub
imul
jo
cmp
mov
xor
and
imul
jns
add
addb
pusha
mov
cmp
int3
js
pop
sub
daa
jmp
pop
lea
out
test
jns
or
aaa
sub
dec
xor
jne
jmp
pop
cltd
adcl
jo
cmp
jl
lea
mov
jp
subl
mov
out
lret
cmp
inc
dec
nop
out
nop
sub
das
adc
or
inc
xor
xor
xor
add
lea
enter
mov
xor
and
dec
inc
pop
push
rorl
popf
push
movsb
mov
pop
popf
adc
nop
or
or
sbb
pushf
inc
aaa
adc
ljmp
and
cmp
dec
xor
jae
mov
out
adc
jno
mov
push
stos
pop
jb
in
mov
addl
xor
or
loope
cwtl
movsb
or
jne
lea
xor
psubw
lds
xor
rclb
mov
test
adc
sarb
outsl
mov
fldl
sub
adcb
or
dec
fiaddl
scas
rcll
daa
int
add
add
pop
dec
cmp
lea
cmpsl
jne
push
or
xchg
cmp
mov
cmp
cmpsl
negl
adc
cmp
or
mov
cmpsl
jl
cli
pop
inc
push
and
scas
xor
xor
inc
xor
imul
fs
and
lcall
dec
mov
testl
mov
insb
inc
or
sti
xor
sub
lahf
jb
loopne
adc
aad
jb
xor
ds
or
add
dec
inc
fldl
inc
pop
mov
fisubrs
mov
int3
cmp
mov
fcmovnb
ljmp
jbe
pop
xchg
test
stc
push
lea
popf
lea
dec
out
inc
inc
repz
daa
call
adc
lret
shlb
fildl
inc
jo
dec
negb
cmpsb
into
or
xchg
bndstx
pusha
mov
jmp
ds
pop
xlat
not
imul
xchg
add
iret
xor
mov
popf
xchg
mov
dec
or
sbb
pop
or
je
idiv
xor
iret
xor
icebp
add
add
inc
and
or
mov
xchg
add
iret
adc
xchg
dec
int
lea
dec
and
negl
cltd
add
mov
push
and
add
in
fadds
dec
cmp
popf
or
cwtl
cmp
xchg
add
push
xlat
sub
mov
sbb
xor
stos
xchg
test
lcall
outsl
pop
sbb
mov
cmp
push
pop
jge
loop
cli
orl
lret
outsb
mov
pop
sub
jo
mov
inc
adc
mov
jae
xchg
dec
inc
cmpsl
mov
xchg
inc
subb
jno
fisubrs
push
xor
sbb
mov
insb
cmp
dec
mov
rcll
cmp
push
push
xor
add
arpl
add
and
lds
and
xchg
cmpsl
jle
rorb
or
enter
ret
out
lea
jae
xchg
mov
bound
int
nop
dec
jb
lock
or
daa
loopne
andl
add
cs
add
and
and
xor
and
push
andl
mov
push
jne
mov
ret
dec
and
es
cmp
lds
sbbl
leave
adc
daa
xchg
pop
push
pop
mov
jmp
sub
pop
xor
sub
leave
mov
jae
sub
dec
dec
and
sub
sub
sbb
cmpsl
nop
sub
js
xor
adc
sub
mov
push
stos
notb
inc
dec
push
push
sbb
dec
or
nop
adc
loopne
das
and
in
xchg
lods
jae
icebp
dec
and
mov
sub
leave
mov
dec
adcl
push
add
mov
rorb
and
xor
rcl
xor
xchg
andb
pop
jns
lcall
push
movsb
or
lea
fadds
movsb
jns
push
adc
and
sbb
sbb
dec
xor
add
add
xor
mov
out
add
pop
sti
xchg
sub
xchg
inc
testl
xchg
and
sub
push
inc
pop
or
fldenv
pop
in
sbb
pushf
jle
or
cmp
add
fs
inc
movsl
test
in
mov
ds
inc
repz
testb
or
and
sbbb
cmp
push
dec
sbb
ret
fcomp
jno
lock
daa
mov
loopne
lock
imul
and
push
jp
aaa
dec
xchg
sbb
and
insl
push
add
inc
sbb
into
fcoml
sbb
testb
adc
adc
adc
test
sbb
pop
addl
push
lods
movsl
or
subl
test
out
or
inc
xor
mov
shrb
stos
lret
nop
xchg
lock
fisttps
mov
inc
pop
push
xor
mov
adc
jp
push
dec
daa
pop
dec
cld
nop
and
xor
testl
aam
xchg
lock
pop
cmpl
test
push
push
icebp
or
xor
ds
add
sbb
call
xor
scas
cmpsb
sarb
je
inc
xlat
adc
hlt
insb
dec
push
push
xchg
ret
dec
push
lds
stc
mov
add
addb
or
rol
push
sbb
add
stc
pop
add
xchg
dec
add
ja
mov
push
je
cmp
ror
or
and
call
adc
imul
bnd
je
cmp
mov
stos
loop
fidivrs
or
fs
or
xchg
inc
or
mov
insl
rol
test
xor
dec
je
push
les
lods
test
or
fcomp
inc
mov
fwait
xorb
pop
fucomp
and
orl
loopne
jmp
icebp
std
movsb
xchg
nop
push
pushl
and
lahf
dec
cmpb
fmuls
push
nop
aaa
lock
pop
loopne
jp
inc
out
repz
sbb
shll
or
repnz
fadd
mov
sbb
mov
dec
ds
dec
call
mov
shufps
cmp
punpckhdq
loopne
ja
scas
mov
xor
mov
jge
mov
mov
cld
mov
jne
sbb
jnp
sbb
aaa
add
xor
xlat
aaa
add
es
and
add
stc
push
andl
or
xor
movl
sbb
sbb
inc
cs
mov
movsb
xchg
outsl
mov
outsl
adc
pop
add
imul
jns
aad
adc
and
les
ffree
inc
or
push
adc
mov
xchg
das
inc
aam
xchg
lods
sbb
push
inc
mov
js
jns
mov
ret
icebp
jae
jle
pop
xchg
sbb
adc
push
mov
lea
into
mov
push
sub
bound
pusha
jl
loop
int
das
pop
jmp
in
and
fwait
pop
cmpsb
add
cwtl
pop
inc
mov
in
shl
dec
xlat
sbb
dec
or
cmpl
inc
jo
mov
jmp
mov
push
sbb
or
dec
fcoms
xor
adc
mov
mov
adc
mov
push
jmp
sub
ds
movl
stos
xor
inc
sbb
xchg
add
mov
push
dec
add
add
movsb
inc
shll
push
stos
mov
xchg
lcall
std
mov
mov
sbb
lcall
pop
mov
mov
inc
outsl
and
mov
push
add
aam
pop
xor
cmpsl
or
sbb
jbe
aas
or
sub
les
inc
or
bound
fcoml
mov
aad
xchg
sbb
cmc
push
or
push
aad
popf
dec
clc
test
and
pop
push
in
mov
and
pop
mov
in
inc
sub
sbb
jg
loop
enter
jae
inc
add
outsb
mov
loopne
outsb
loope
sbb
and
loopne
ret
and
daa
cmp
sbb
ficomps
or
faddl
outsl
fiadds
inc
jbe
sub
dec
sbb
inc
lret
jp
cltd
add
and
lock
js
add
into
sbb
js
mov
push
loopne
dec
sub
stc
mov
icebp
repnz
pop
inc
push
add
sub
cmpsl
mov
lods
add
push
rcl
leave
ss
mov
cmpsb
jle
aaa
stos
xor
dec
loopne
sub
sub
adc
dec
pop
jmp
sbb
es
lar
in
dec
add
dec
add
lea
enter
add
push
add
test
popa
jns
inc
lods
jp
pop
push
inc
cltd
add
add
js
ficoms
nop
lea
dec
cmp
or
pop
dec
dec
inc
or
bound
or
sub
cs
or
sub
or
sti
cmp
push
in
push
add
adc
das
mov
and
or
lcall
movl
adc
add
popa
scas
add
dec
adc
xor
xchg
or
mov
mov
xor
xorl
call
rcll
or
adc
adc
cmp
adc
adcl
dec
adc
push
jl
sbb
ret
xchg
jbe
scas
jne
test
dec
and
das
lock
nop
cmp
inc
push
xor
sarb
inc
movl
sub
lret
adc
sti
in
xor
loopne
in
stos
inc
cmp
dec
inc
mov
xor
ljmp
lock
xor
mov
inc
lea
lods
or
inc
lret
and
push
inc
xor
popa
xchg
ret
push
aas
jmp
adc
and
push
imul
and
adc
push
or
push
inc
nop
or
fcmovne
movsl
or
add
mov
xchg
jo
cmp
adc
dec
jl
mov
out
popf
sbb
mov
adc
hlt
mov
sbb
dec
scas
enter
push
pop
sub
push
xchg
sbb
add
cmp
mov
xor
jl
lea
pop
push
inc
test
dec
sbb
sbb
push
daa
mov
sbb
jle
xchg
sahf
incl
push
sbb
push
das
inc
lds
lock
mov
cmp
push
fdivr
loope
add
cmp
cmp
dec
rorl
jno
inc
adc
sbb
loope
adc
inc
mov
incl
shll
rol
sub
push
sub
or
cmp
xchg
inc
lcall
mov
test
pusha
bound
cwtl
sbb
stos
psubusb
add
ljmp
adc
push
loopne
pusha
jns
adc
xlat
mov
add
cmp
sarb
mov
shr
ffree
xchg
insl
or
inc
test
add
hlt
popl
mov
js
jecxz
fistpll
push
mov
rcrl
hlt
call
or
and
aas
and
notb
or
or
lea
push
pop
or
lods
test
jmp
test
testb
lock
xchg
adcb
xchg
adc
xor
inc
cmpsb
out
sbb
xchg
add
jo
adc
xlat
aam
popa
push
mov
sbb
push
inc
test
dec
mov
sub
mov
out
fiadds
mov
cmp
inc
push
fldenv
repz
inc
adc
sbb
sub
pop
pop
sahf
dec
add
leave
mov
popa
scas
loope
rorb
mov
popa
addb
cli
add
cmp
or
fwait
cmc
gs
adc
stos
push
xor
mov
add
jmp
inc
push
mov
add
scas
fisttpll
sub
sbb
dec
or
xchg
add
push
ret
pop
inc
aaa
jecxz
mov
jecxz
and
insb
jo
fwait
in
sbb
and
les
fdivrs
je
rclb
mov
pop
sbb
mov
adc
inc
jl
sbb
jle
movl
popa
jns
lods
sbb
adc
mov
test
xchg
or
or
scas
inc
movb
mov
inc
insb
push
mov
aas
sbb
add
test
fsubrs
icebp
in
icebp
or
insl
pop
jns
push
fldt
and
sbb
lea
jg
push
sti
and
cwtl
call
mov
cmp
push
shlb
push
sbb
mov
add
adcl
xchg
shrb
cmp
mov
sbb
mov
xorl
add
add
xor
push
ret
lock
xor
int3
pushf
aaa
rclb
jnp
repnz
jge
mov
movsl
in
sbb
mov
add
mov
sub
mov
sub
call
repz
rorb
out
movsl
and
sbb
pop
bnd
sbb
xor
subl
subps
xchg
mov
outsl
leave
test
lods
inc
mov
imul
shlb
fmuls
sbb
xor
test
cld
mov
add
mov
xor
add
roll
outsb
add
nop
push
in
or
lods
mov
dec
mov
cmc
adc
test
subl
mov
ret
test
add
push
push
push
push
out
push
cmp
lret
pop
rorl
iret
push
fsincos
push
loopne
inc
sbb
dec
and
mov
mov
and
xchg
fwait
ret
or
sbb
sub
push
dec
or
pusha
popf
adc
cmpsb
into
jo
in
add
add
int3
add
pusha
jne
add
pop
je
or
addb
shlb
mov
adc
adc
adcl
add
jmp
mov
inc
out
push
push
xor
loope
cmp
and
push
pop
jecxz
mov
dec
dec
inc
std
je
mov
int3
shrb
add
cmc
cmp
or
pop
xor
adc
mov
xchg
fwait
jp
pop
push
adc
and
push
decl
lods
dec
out
add
dec
arpl
adc
std
add
movsbw
ds
dec
inc
outsl
jno
jne
and
or
xchg
or
fwait
dec
inc
push
xchg
icebp
ds
add
mov
adc
xchg
mov
cmp
mov
hlt
push
inc
xchg
sub
sbb
inc
mov
pop
dec
cmp
adc
and
fmull
sbb
cs
mov
cld
adc
push
aad
sbb
jo
punpckhwd
sub
dec
and
fisttpl
aam
push
test
lea
stc
lock
fwait
ja
lea
out
cmpsb
pop
pop
dec
lods
repnz
xchg
sbb
xor
movl
mov
cmp
mov
popf
or
jne
pop
pop
iret
gs
in
js
gs
fwait
shrb
shll
push
sub
in
test
dec
sbb
jns
std
lock
mov
xchg
gs
and
inc
and
and
or
mov
adc
das
push
and
ficoml
faddl
loope
ficomps
sub
push
add
mov
insb
or
add
inc
pop
test
jmp
loop
adc
mov
ret
mov
pop
rorb
and
inc
loope
out
jmp
sbb
leave
inc
mov
push
rorb
sbb
and
jo
adc
add
or
sub
push
or
and
xor
adc
push
cmp
inc
mov
sub
jne
mov
das
push
mov
jmp
mov
ret
test
mov
adc
repz
mov
and
mov
clc
add
mov
mov
adc
xchg
add
imull
shrb
cld
leave
daa
ret
test
dec
xor
or
lds
lret
or
int
orl
cld
cmp
mov
clc
sbb
mov
lock
xchg
pop
dec
fsubs
mov
lods
fstps
fs
jne
loope
jnp
push
xor
repz
jno
mov
in
lret
xchg
sub
or
in
lds
pop
pop
dec
mov
mov
hlt
in
mov
add
movl
stos
mov
mov
gs
jo
and
mov
iret
es
jb
push
mov
mov
test
xchg
lock
mov
cmp
xchg
aaa
enter
fcomps
sub
mov
or
call
adc
add
push
inc
xor
jecxz
adc
adc
cmp
not
and
jne
or
and
jg
mov
movl
ficomps
inc
dec
inc
pop
inc
or
mov
scas
mov
inc
outsl
les
int3
arpl
sarb
insb
loope
add
push
repz
pusha
loopne
popa
push
ss
xchg
pop
adc
popf
mov
cmp
inc
xor
sbb
jmp
sub
and
jge
add
cmpl
cld
pop
bound
movsl
add
sbb
or
add
rol
pop
repnz
or
popa
rolb
push
cwtl
inc
aas
test
repnz
cmc
mov
inc
hlt
pop
test
and
sub
sub
cmp
aaa
xor
clc
mov
add
push
push
push
push
popa
call
mov
xor
mov
push
xchg
mov
sub
or
insb
jne
mov
nop
call
sub
lcall
lret
cmp
jne
lods
dec
fsubrs
mov
test
lcall
popa
add
xor
add
lahf
rclb
push
mov
test
stos
mov
pushw
dec
dec
xor
jecxz
jo
adc
push
inc
mov
lcall
adc
insl
mov
sbb
xchg
lret
and
mov
dec
mov
add
sub
mov
xor
cmp
dec
fists
scas
movsl
das
mov
jle
jmp
push
inc
cwtl
lcall
imul
imul
lea
inc
add
inc
lea
in
imul
push
lret
lods
fnstsw
mov
mov
imul
jb
pushf
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
dec
insb
enter
xchg
scas
dec
mov
adc
push
aas
lret
jnp
pop
push
subb
sbb
push
movsl
mov
add
ss
cmp
and
ljmp
mov
add
dec
insl
push
rcr
pop
adc
js
xchg
inc
shlb
add
sub
xchg
mov
test
cltd
lock
pop
push
imul
enter
cmp
xor
pop
xor
add
adc
and
push
jne
jecxz
dec
jbe
and
inc
xchg
push
sarl
push
popa
shlb
adc
outsl
stc
mov
movsb
adc
insb
enter
mov
mov
xchg
push
cli
shll
and
cmp
push
frstor
fwait
cmp
inc
jne
loop
imul
clc
jo
or
jnp
add
scas
jl
mov
sbb
lods
and
aas
adc
cwtl
lea
and
shll
lea
xchg
add
adc
fstps
add
outsl
nop
mov
jecxz
rol
out
jg
xor
cmp
push
jo
inc
jbe
sbb
test
add
nop
cs
ja
mov
les
mov
jmp
adc
add
xchg
mov
std
arpl
xor
rcrb
mov
xchg
outsl
sbb
and
jge
scas
bound
enter
or
ficompl
pop
jnp
les
add
push
mov
lcall
xorl
nop
cmp
cmp
pavgw
in
jp
mov
add
fdivrs
pop
dec
pop
or
pop
mov
add
les
outsb
aam
adc
or
pop
int3
je
mov
clc
xchg
and
pop
push
loopne
loope
jbe
in
loopne
sti
push
pop
ret
iret
jmp
xchg
xlat
add
shll
in
sbb
or
dec
add
lcall
ret
xchg
adc
mov
push
daa
dec
mov
test
insb
xor
pop
cmp
test
jle
jno
xchg
pop
repz
dec
leave
or
fsubl
pop
sbb
loop
dec
test
and
add
pusha
or
dec
loope
sub
fstpt
sub
mov
sbb
lret
test
inc
adc
inc
pop
xchg
or
cmp
dec
adc
inc
test
mov
adc
lock
mov
repz
xchg
into
push
push
mov
push
shll
mov
cmp
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
cmp
pop
rolb
mov
jnp
lret
mov
sbb
scas
aad
inc
xchg
sbb
out
mov
push
xchg
push
adc
nop
stc
jle
add
cmpw
stos
andb
sbb
cmpb
push
sbb
push
pop
add
ss
push
push
mov
add
sar
push
loopne
inc
jmp
xorb
jns
adc
pop
xor
ljmp
dec
jo
pop
xor
jb
test
mov
add
cld
xchg
cltd
lock
pusha
jne
dec
dec
push
sub
jl
sub
jmp
aad
mov
lcall
dec
movzwl
cmpl
push
adc
rorl
cltd
or
and
add
add
sbb
push
cs
jmp
sbb
add
mov
or
fimull
lea
jae
dec
xchg
sub
mov
mov
cmp
mov
cs
sub
test
mov
adc
and
pop
and
loope
mov
punpckldq
hlt
jne
jb
fs
and
dec
push
push
insl
add
shl
ret
add
pop
push
pop
push
dec
xor
jo
cmp
inc
and
lock
leave
dec
mov
mov
cmc
and
lret
add
sub
mov
and
pusha
sub
push
imul
or
test
or
lock
sbb
pop
loopne
gs
mov
or
sbb
or
inc
adc
xor
ret
inc
dec
and
lock
xor
add
sub
call
pop
xor
add
xorb
sbb
sub
out
push
inc
sub
pop
test
shll
xor
jmp
mov
xchg
int
mov
sub
or
sub
xchg
sbb
adc
xor
add
xor
inc
and
mov
dec
dec
or
add
adc
jb
xchg
adc
mov
js
stos
mov
cmp
rclb
stc
orl
fcoms
cmp
sub
sbb
ret
and
mov
push
sar
pop
movsb
or
shrb
pop
dec
daa
outsl
adc
imul
pop
je
or
jnp
jne
xor
push
and
xor
test
leave
or
dec
dec
xor
mov
cli
push
mov
inc
in
mov
shl
iret
jl
jne
lods
nop
mov
or
enter
dec
inc
sbb
sub
mov
mov
stos
mov
dec
pop
jne
mov
test
lret
xchg
xchg
or
mov
mov
push
rcll
ret
scas
adc
add
daa
xor
xor
mov
mov
jle
push
sbb
scas
xor
add
push
idiv
call
mov
ja
mov
inc
icebp
jmp
sbb
fmuls
xchg
sbb
jg
fadds
add
xor
test
lea
out
pop
adc
sbb
mov
push
jne
movsl
incl
cli
dec
xor
int3
and
mov
jge
mov
adc
lahf
in
jle
jb
adc
inc
mov
adc
clc
popf
fidivl
iret
inc
push
sub
nop
dec
and
pop
mov
mov
movsb
shll
outsl
and
test
mov
shrb
push
jecxz
push
xchg
inc
dec
cld
mov
rclb
aaa
pop
dec
sti
pop
or
jmp
push
push
das
popa
lret
addl
jmp
loop
jmp
je
or
push
mov
push
sub
inc
sti
pop
or
mov
mov
or
test
shrl
and
call
mov
add
test
xchg
xor
mov
add
pushf
xchg
xor
add
pop
jns
daa
add
or
jns
or
and
add
xchg
divl
adc
mov
sar
xchg
cmp
pop
ret
test
mov
les
aas
mov
push
dec
sub
push
or
push
in
add
jmp
sbb
adc
cmp
inc
inc
jmp
fwait
mov
jmp
sub
out
jnp
add
mov
jns
in
dec
inc
inc
dec
cmpsl
jno
push
inc
jne
mov
aas
and
adc
call
sbb
sub
sbb
or
dec
ja
xorl
mov
lock
inc
sub
adc
and
xchg
push
pop
ficomps
movsl
inc
xor
sbb
ret
push
hlt
lea
mov
arpl
call
fidivrs
movsb
pop
pop
movsb
xor
adc
jae
lret
dec
shlb
loopne
nop
mov
sbb
mov
aaa
lret
xor
ret
inc
int3
cmp
xchg
lahf
into
pop
mov
inc
inc
pop
cmp
jnp
sahf
sub
push
call
sbb
mov
pop
addl
dec
arpl
cmpl
movsl
push
addb
lahf
call
in
jl
pop
sub
imul
inc
lahf
outsl
loopne
pop
mov
xchg
add
dec
add
dec
shr
inc
enter
scas
sub
inc
movsl
cmp
mov
rolb
push
jb
rolb
cwtl
call
adc
ret
inc
mov
into
adc
and
add
in
int3
icebp
xchg
and
cmp
jno
push
pop
test
add
loop
dec
lock
jmp
add
gs
syscall
pop
lea
sub
dec
inc
leave
js
adc
xor
pop
lds
lea
push
push
mov
test
jne
cmp
pop
jae
mov
es
fucomp
adc
push
loope
mov
and
sbb
roll
cwtl
xor
icebp
mov
adc
leave
adc
gs
adc
mov
loop
or
adc
aad
push
pop
repz
cmpsb
adcb
jl
cmp
push
cmp
or
ret
push
je
adc
mov
push
adc
cmp
jmp
mov
lods
mov
jg
lods
clc
repz
cmp
out
push
xchg
cmpsb
sbb
push
iret
adc
out
xchg
or
mov
xchg
and
clc
fwait
in
lock
popa
loop
sub
cmp
sahf
push
jbe
ja
sahf
push
sbbl
test
mov
ss
cli
and
roll
rcl
shl
dec
push
loopne
push
mov
push
sub
jbe
enter
dec
jns
mov
hlt
hlt
lea
ret
mov
inc
dec
add
lock
ret
mov
and
or
inc
or
add
pop
incl
outsl
sbb
or
mov
inc
sbb
or
adc
rdtsc
cs
or
push
sub
inc
push
sbb
lret
push
mov
xor
lret
in
adc
lea
loope
int
repnz
les
cmpsl
mov
dec
fwait
mov
sbb
mull
or
pop
iret
or
aaa
dec
cli
push
aaa
mov
leave
cmc
in
push
mov
arpl
aam
sbb
sub
push
sar
fadds
shl
icebp
subb
lock
scas
test
inc
add
or
mov
sbb
fs
shl
jp
jne
mov
sbb
inc
loope
pushf
lea
mov
push
mov
push
mov
jne
push
inc
inc
icebp
lea
mov
xchg
xchg
add
sbb
lea
ret
rol
roll
sbb
or
or
jb
sub
xor
test
sub
in
and
xor
adc
cmp
int
roll
insl
pusha
les
push
mov
xorl
mov
xchg
push
or
dec
sbbb
mov
or
xchg
push
or
in
or
push
inc
mov
mov
insb
loopne
push
popf
mov
or
pop
sbb
push
pushl
pop
pushf
push
sbb
xlat
sbb
ja
test
icebp
adc
and
push
push
push
jecxz
mov
xor
add
lock
mov
icebp
loope
push
or
pop
inc
pushf
cwtl
add
lds
cmp
xchg
xchg
mov
in
or
popa
ret
jecxz
in
test
mov
mov
pop
xchg
aad
and
sub
cmp
test
mov
xor
adcb
xor
cmpsl
lret
mov
sub
leave
movsl
cmpsl
adcl
add
test
xchg
add
pop
add
adc
iret
pop
inc
prefetchnta
in
jmp
cmpsl
bound
mov
rcr
mov
call
dec
dec
mov
pushf
mov
mov
cs
idivb
push
or
imull
pop
or
cmp
push
add
aaa
pop
xchg
adcl
push
sub
pop
inc
loopne
push
cmp
movsl
fadds
pop
lea
daa
movsb
je
push
cmp
push
popa
cmpsl
mov
and
rorb
or
sub
pop
in
push
jmp
mov
inc
rorb
push
inc
dec
push
test
scas
cmp
cwtl
lods
sti
sub
andl
sbb
jb
lret
and
fwait
mov
mov
cmc
sbb
xor
bnd
pushf
pusha
pop
xorl
in
es
push
divb
xor
inc
and
mov
mov
movsb
inc
sub
push
daa
es
xchg
cwtl
pop
jns
int
jl
push
aad
push
add
and
sub
add
test
scas
jns
popf
cld
icebp
roll
dec
pop
sub
jge
xchg
jl
in
repz
or
sbbb
sbb
sub
cmpsb
into
shlb
adc
mov
pop
jmp
mov
cmp
sub
test
sti
inc
sub
popa
loope
shlb
sbb
rcr
test
je
insl
fwait
clc
add
cmp
and
adc
dec
or
add
mov
cmp
rorb
lea
and
fcom
mov
fisttps
and
sub
xchg
and
insl
add
jnp
xchg
mov
xchg
add
sub
sbb
add
and
xchg
daa
das
mov
add
aad
je
sbb
sub
inc
sbb
and
add
push
and
sbb
imul
push
or
and
mov
add
add
xchg
or
test
jne
insb
or
mov
xor
call
and
test
cmpsb
sub
cmp
fdivs
sub
fcoml
jns
sbb
sbb
push
dec
inc
lahf
nop
jge
les
and
sbb
imul
lock
add
mov
dec
out
push
inc
repz
adc
mov
mov
push
xor
xor
sbb
push
jge
sbb
cwtl
xchg
imul
in
and
pop
inc
dec
sbb
cmpsl
pop
test
and
test
and
jnp
dec
inc
rclb
outsl
mov
or
jno
cmp
shr
cmp
dec
mov
mov
inc
add
adc
lods
add
fldl
sbb
push
daa
mov
lods
sub
test
cwtl
pop
sbb
jl
mov
inc
hlt
xor
outsb
cmp
decl
dec
and
add
movzwl
add
pop
movsb
cmpsl
push
lock
sbb
mov
sbb
pusha
add
test
inc
or
pushl
rcrb
test
mov
lods
jns
sbb
fiadds
sub
daa
jne
mov
mov
xor
adc
in
or
jo
cltd
pop
xchg
xchg
mov
push
idivb
mov
mov
movsl
scas
repz
into
out
sbb
dec
fimull
add
adc
pushf
jbe
pushf
dec
mov
es
mov
or
xor
adc
out
jo
test
cmp
xor
inc
push
mov
clc
out
or
sub
push
pop
push
xor
lods
mov
sarl
fmuls
fidivs
cld
gs
cli
add
jl
adc
in
cmpsb
sbb
sbb
push
into
xlat
jp
setb
add
in
sbb
icebp
mov
loopne
and
daa
in
ret
add
xor
adc
in
inc
adc
push
adc
add
rcl
pop
lcall
jbe
mov
jno
push
jmp
pop
push
pop
or
mov
mov
adc
scas
xor
int3
mov
mov
movsb
pop
orl
add
sub
sbb
jecxz
push
xlat
or
adc
ret
les
arpl
push
and
cmc
test
or
ss
jl
push
and
adc
sub
jo
and
cmpsb
js
orl
ficompl
call
je
loop
cmp
add
add
push
arpl
push
adc
pop
stos
aaa
jno
jne
and
adc
mov
jle
cmp
jp
add
sub
dec
pop
divl
nop
or
scas
jns
insl
sbb
cmp
inc
icebp
adc
mov
test
sbb
push
inc
es
repnz
xorl
xor
cmp
sbb
gs
inc
cmpsl
add
pop
sbb
add
enter
cmp
stos
inc
es
and
lea
mov
or
or
sub
ficoms
mov
adc
mov
sbb
push
jmp
mov
mov
lds
dec
add
lock
jge
mov
push
add
dec
cmp
or
dec
cmp
inc
push
ds
or
ja
punpcklbw
cmp
push
in
aam
loope
mov
sbb
inc
daa
cmp
mov
mov
fdivl
mov
js
and
and
xchg
push
and
or
jb
repz
sub
addl
sbb
add
mov
push
or
pop
inc
lret
push
pop
and
notb
lock
add
cs
cmpsl
and
rcll
mov
inc
es
pop
jge
pop
jns
std
add
push
push
mov
jp
push
jno
filds
jne
mov
fwait
cmp
out
or
lds
mov
mov
je
mov
or
insb
enter
push
cli
push
dec
inc
push
and
bts
test
pusha
mov
xor
hlt
and
sbb
and
jae
adc
aaa
je
lds
dec
push
adc
ret
inc
and
mov
push
addl
inc
and
inc
pushf
or
xchg
add
test
dec
test
pushf
out
sub
test
sbb
adc
or
cwtl
adc
test
daa
fs
mov
pop
push
dec
pop
push
shlb
mov
jnp
sub
pop
or
xor
adc
scas
xor
fldz
sarb
ja
xchg
cmp
rorb
lods
in
js
clc
aaa
je
sbb
adc
xor
pop
cltd
pop
or
inc
in
or
mov
int3
aam
or
jns
add
and
fimuls
ret
or
adc
lea
push
or
sbb
xchg
sub
sbb
pusha
sbb
xchg
test
jnp
mov
insb
fcoml
inc
sub
cmp
js
roll
repz
sbb
out
and
cltd
fldt
test
add
fisttpll
mov
lds
leave
mov
lret
stos
xchg
mov
mov
and
push
push
sbb
pusha
mov
xlat
popf
ljmp
cmp
out
inc
adc
push
mov
cmp
and
iret
or
test
dec
int3
xchg
push
push
sub
xchg
mov
add
nop
cmpsb
jl
ret
xchg
leave
rolb
xor
leave
lahf
jne
scas
ja
add
das
or
pop
add
pop
pop
and
push
jle
jne
das
lds
jo
sbb
push
adc
sahf
add
jg
push
add
cmp
pop
aam
les
pop
pop
mov
sub
push
push
adc
sbbb
icebp
jne
mov
int
inc
pop
add
push
je
movsb
xor
popa
push
pop
cmpps
jb
xor
mov
push
popa
mov
add
cmc
cmp
test
mov
lods
pop
or
jbe
mov
sub
sub
or
pop
adc
movsl
addl
push
push
sub
xchg
push
inc
imul
scas
mov
or
inc
and
ret
sub
inc
sub
es
sub
push
stos
in
addr16
sbb
mov
sbb
pop
mov
mov
cmpsb
push
stos
sub
data16
fldenv
adc
push
addr16
ja
ret
inc
or
pop
subl
lcall
adc
cli
mov
dec
mov
in
add
nop
mov
jo
cmpsb
adc
inc
dec
jcxz,pn
xor
sbb
or
sub
popf
sub
ret
lcall
aas
mov
jb
iret
push
sub
lea
push
push
or
sbb
outsl
inc
movups
mov
pop
jo
sub
push
leave
mov
ret
xor
hlt
mov
ret
sti
mov
and
cmp
test
push
ret
in
les
insl
mov
cltd
ss
fcoml
es
or
and
rolb
pop
out
enter
inc
mov
inc
stos
fisubs
push
pop
xor
jne
repz
and
popa
add
int3
mov
pop
adc
push
and
rcrl
pop
ret
das
cmpsl
lea
lods
adc
test
outsb
inc
mov
fstl
sub
gs
imul
mov
lock
mov
pop
arpl
push
idivl
push
les
lahf
dec
call
es
add
mov
in
adc
stos
pop
ret
jno
cmpsl
and
cld
adc
jnp
fwait
testl
leave
pop
cmp
jbe
inc
pusha
push
adc
push
repnz
push
jb
lods
mov
andl
test
jbe
jl
adc
into
inc
push
adc
mov
call
inc
dec
ds
push
aas
inc
sub
inc
adc
imul
fldz
and
add
and
cmp
and
scas
jge
add
sub
pop
xor
cmp
sbb
fidivs
xchg
rcr
ss
push
add
sbb
testb
cmpsb
or
fidivrs
mov
xor
jecxz
add
enter
sub
ficoml
mov
rcrb
or
adc
addr16
pop
fmuls
mov
incb
push
data16
add
sub
movsl
les
dec
movsl
mov
or
add
call
cwtl
xchg
pop
fwait
pop
lahf
xor
xchg
push
inc
sbb
jle
push
add
outsb
scas
in
faddl
cmpl
push
or
fsts
add
cmp
jle
lds
jl
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
cmp
mov
mov
push
add
inc
jmp
pop
or
push
movw
and
mov
push
mov
idiv
iret
mov
dec
fwait
inc
or
fs
pop
idiv
imul
call
inc
andl
clc
std
adc
and
mov
jnp
add
inc
jbe
mov
mov
je
loopne
jno
push
mov
outsb
push
push
hlt
cmpsl
test
imull
mov
fldt
mov
or
mov
int
sub
je
rcl
inc
sbb
cmp
sub
dec
addr16
cs
push
cmp
adc
adc
or
sbbl
inc
outsl
int3
cmp
fdivs
pop
int
cmp
push
mov
xor
mov
ds
addr16
lahf
add
xchg
in
cmp
push
into
aas
adc
inc
jb
push
iret
cmp
push
fs
ds
jne
pop
adc
pop
or
popf
mov
imul
push
dec
adc
insl
or
andb
or
insl
add
or
add
ss
cwtl
std
imul
or
sub
and
ja
sub
pop
je
das
loopne
fcompl
stos
outsl
mov
jl
mov
pop
adc
adc
pushf
xchg
mov
mov
add
push
data16
add
sub
sub
in
cmp
adc
or
cmp
and
sbb
stos
sub
lcall
and
nop
or
in
pop
popa
adc
enter
xor
insl
add
push
cwtl
outsb
cmp
arpl
jb
sbb
ret
inc
js
sub
jg
sbb
and
push
rcr
leave
enter
sbb
les
and
sbb
fs
dec
popa
mov
pop
cmpsl
sbb
jnp
fwait
mov
es
ds
inc
and
add
subb
inc
add
dec
scas
loopne
pop
sub
fnsave
pop
adcl
ljmp
movsl
inc
and
mov
dec
cs
cmp
in
push
aad
sbb
test
in
xchg
call
sbb
or
nop
sbb
cmp
sbb
popf
or
inc
adcb
sbb
jb
pop
jmp
or
adc
pop
rcll
or
add
or
in
hlt
inc
add
sub
xchg
adc
mov
push
cltd
or
or
or
test
and
sub
fldl
in
push
push
xor
mov
add
outsb
sbb
push
dec
mov
add
fsts
xchg
xor
fwait
loope
inc
mov
inc
mov
or
pusha
les
xchg
lahf
rol
jo
xor
and
and
or
adc
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
mov
shrb
es
insb
mov
dec
rcll
mov
nop
add
or
in
adc
mov
sub
outsl
popa
addl
add
lods
push
bswap
lods
add
pop
fadds
or
lock
nop
adc
add
xchg
sbb
fiadds
or
adc
push
lea
sbb
mov
push
and
pavgb
ja
outsl
fsubr
fdivrl
push
or
outsl
push
jp
add
ror
pop
sub
fadds
push
pop
sbb
and
pop
loopne
pop
das
sbb
jbe
test
roll
or
and
insl
mov
rcr
add
aam
imul
push
lret
mov
les
push
insb
add
gs
pop
fsubs
sbb
push
popa
popa
inc
cmp
jne
stos
or
mov
sub
sub
push
push
xchg
add
xlat
hlt
pop
xor
fildl
xchg
pop
enter
orl
inc
idivl
inc
dec
sbb
jne
or
shll
xlat
and
add
repz
leave
push
pusha
xchg
jae
xor
dec
cmp
cmpsl
movsb
push
nop
imul
popa
jmp
pusha
add
add
sbbb
pop
pop
mov
pop
xor
hlt
das
adc
adc
lea
mov
cld
aaa
add
jo
lea
ret
mov
ret
mov
xor
jecxz
add
mov
jbe
roll
adc
loopne
pop
mov
lods
pop
cmp
cmp
jge
add
mov
pop
cmp
inc
xorb
inc
push
aas
rorl
mov
push
xor
pop
mov
mov
out
mov
sub
movsb
add
testl
or
xchg
outsb
push
sub
xchg
cltd
std
jg
jo
loop
fcompl
fnstsw
test
je
add
aas
repnz
movl
xor
push
sbb
std
jbe
ds
incb
fstpl
and
fstpl
add
mov
fstpl
pop
cltd
mov
mov
das
or
mov
fcompl
mov
jo
add
adc
pop
fsub
pop
fsubrp
mov
enter
rorb
and
fcoml
cmp
pusha
mov
dec
pop
lds
neg
jbe
imulb
aaa
inc
xorl
xor
mov
sub
add
movsl
sbb
push
or
push
adc
shll
inc
dec
mov
adc
jns
stc
jge
sahf
adc
je
das
inc
sbb
into
mov
and
mov
cwtl
pop
and
pushf
sub
adc
sbb
iret
mov
fldt
jns
call
js
dec
adcl
aaa
push
adc
sarb
and
sub
mov
les
or
in
add
in
lret
and
inc
or
mov
and
mov
mov
mov
jo
add
mov
add
push
adc
jp
lock
pop
add
out
stos
xor
shld
add
ja
jb
clc
ltr
ja
lea
push
push
and
add
push
je
popa
pop
sbb
mov
leave
adc
mov
push
adc
push
push
push
mov
or
mov
or
cli
insl
adc
pop
mov
push
testb
push
outsb
leave
and
lea
inc
insl
sub
cwtl
int
push
mov
adc
mov
push
mov
push
ja
ja
fmull
test
inc
fadds
ja
inc
ja
add
adc
push
orb
das
test
jb
incl
mov
cmpw
jne
fbld
inc
cld
cmp
filds
inc
push
jge
mov
insl
ljmp
insl
lea
cmp
or
or
sbb
leave
out
psrld
pushf
or
xchg
inc
xchg
divl
push
push
nopl
dec
inc
test
cmp
inc
push
dec
ret
movsl
dec
scas
mov
dec
lds
nop
in
insb
jge
sub
or
xchg
mov
mov
xchg
dec
xor
rclb
push
sbb
fidivl
adc
add
add
xor
jle
cmp
mov
mov
mov
std
jnp
rcl
adc
push
or
fs
pusha
sub
stos
insl
sbb
ja
fnstenv
movsl
jne
add
mov
mov
lahf
push
pop
imul
es
test
mov
stos
dec
xor
adc
mov
mov
mov
jae
movsb
std
sub
adc
les
int
cs
xor
imul
movsl
jl
out
push
adc
add
pop
ss
xchg
dec
daa
and
adc
pushf
scas
or
mov
or
and
adc
or
push
inc
add
xor
jg
fmuls
idivl
out
xchg
lods
js
inc
addb
cwtl
push
insl
nop
add
xchg
sti
pop
je
push
addr16
push
and
enter
ret
pop
add
sbbb
dec
ds
xorb
push
pop
loop
in
mov
test
mov
pop
wrmsr
int3
xor
add
pop
mov
aaa
lahf
sub
inc
ret
inc
add
inc
das
jge
add
inc
adc
sub
rclb
or
test
pusha
xchg
aas
fidivrs
cli
push
mov
or
push
adc
ret
ljmp
or
xchg
or
test
cmp
xchg
sbb
and
movl
pop
in
outsb
ljmp
js
arpl
cs
push
or
outsb
add
xchg
sub
lock
cmpb
popf
xor
push
inc
les
push
and
adc
xchg
adc
stos
mov
push
push
push
cmpl
outsb
or
dec
and
int
scas
sub
popa
sub
push
popa
jge
push
pushf
aam
loope
ljmp
jno
dec
jmp
mov
xor
orb
stos
add
cmp
mull
xor
mov
fs
or
xchg
jl
fwait
cmpsb
std
fildl
int3
and
je
add
sbb
dec
ja
dec
ljmp
jmp
or
xchg
or
xchg
jmp
or
fsubs
push
push
insb
imul
dec
mov
out
out
sub
and
or
jmp
or
mov
mov
jmp
jge
jmp
or
xchg
sbb
lea
scas
imul
fmul
test
loopne
cmp
hlt
push
jb
inc
mov
or
enter
push
je
nop
sbbl
loopne
or
cmp
xor
cwtl
xchg
and
int3
fcoml
push
xorl
pop
push
cld
dec
sbb
enter
dec
jo
jb
and
nop
inc
push
dec
adc
fs
inc
push
cmp
and
cmp
fdivr
dec
sbb
sbb
enter
nop
sbb
enter
lock
orl
lahf
inc
mov
cmp
adcb
push
and
dec
xchg
cmp
push
inc
push
push
pop
outsl
out
sahf
out
orl
sahf
stos
mov
leave
repz
cmp
rep
push
pop
adc
and
repz
push
popa
iret
repz
imul
xchg
popf
cmp
repz
mov
cmp
repz
in
notl
add
push
xchg
sbb
and
xchg
scas
cs
pop
push
jae
push
aaa
add
loopne
push
mov
aaa
sub
dec
mov
xor
adc
cltd
inc
je
push
addr16
mov
out
lea
imul
roll
sub
lock
or
ja
jo
hlt
adc
xor
std
mov
lahf
fwait
jmp
jl
mov
mov
cmp
pop
lock
je
and
inc
mov
push
mov
mov
out
faddl
ud1
leave
mov
nop
faddl
push
jne
popf
dec
mov
fsubl
cmp
js
insl
xlat
cmp
xor
or
cmpsl
xor
int3
loope
dec
shlb
xor
mov
nop
pop
dec
addr16
pop
test
test
adc
push
outsl
les
jecxz
xchg
popa
lcall
add
dec
mov
xor
push
adc
jg
cmpb
jge
jnp
inc
pop
push
cmp
push
xchg
or
mov
mov
adc
xchg
icebp
add
idivl
jg
dec
xor
filds
ja
or
inc
inc
and
rcr
sub
pushf
mov
dec
je
call
push
push
xchg
cmp
dec
fxch
mov
sbb
ret
test
fadds
shrb
enter
sub
push
add
pop
xor
adc
sar
or
sub
push
jmp
sbb
test
out
jmp
cmp
loop
orl
sbb
jb
loope
fadds
test
ficoml
pop
jp
push
enter
scas
sub
lahf
and
or
and
aad
push
arpl
jae
insb
mov
xchg
dec
sub
movhps
adc
mov
or
push
out
mov
sbb
xchg
sbb
les
push
and
inc
jg
jne
mov
je
mov
repnz
loop
mov
out
push
cmp
or
sub
add
rolb
sub
push
jb
xor
mov
mov
icebp
push
and
adc
insl
mov
lahf
sub
pop
mov
fs
push
in
mov
shlb
dec
jl
cs
and
xchg
sub
mov
pusha
cwtl
nop
negb
sub
xor
fwait
nop
and
xor
imul
or
jle
icebp
xlat
jno
xor
xor
mov
jbe
sbb
enter
and
int
int
jo,pn
jl
and
sub
sub
dec
mov
in
mov
pop
ss
js
mov
mov
lds
stos
int3
jl
mov
test
dec
stos
push
adc
shlb
lret
pop
enter
mov
xlat
pop
inc
pop
mov
sbb
imul
les
xchg
pop
pop
pop
and
mov
js
add
in
add
and
nop
cmp
int
lahf
pop
inc
push
mov
imul
lods
jl
add
inc
add
in
lock
sbb
cmp
push
xor
dec
push
mov
mov
inc
xchg
mov
xchg
and
push
add
int
sbb
sub
movsb
jmp
sbb
es
test
mov
adc
or
adc
dec
pusha
xchg
orl
bound
cmp
pop
push
mov
cmp
inc
xchg
jnp
hlt
pushf
or
pop
cwtl
xchg
enter
addl
nop
imul
cld
test
cmp
rorl
mov
fmul
dec
roll
lret
lret
cmp
in
mov
sub
dec
pop
movsb
jne
jne
aas
pop
test
mov
sbb
push
add
xchg
jnp
jb
and
test
inc
lock
and
test
inc
push
adc
daa
cmp
dec
xor
in
push
inc
adc
push
popa
lds
inc
push
add
fsubr
test
and
pop
cmpsl
fwait
shl
xchg
jo
cmp
cmpl
inc
cmp
dec
jno
sti
daa
dec
or
inc
arpl
sbb
fmull
out
and
sahf
inc
sub
imul
nop
mov
scas
or
sub
jmp
push
sub
vpunpcklbw
aad
stc
nop
cwtl
mov
lea
push
cmp
pop
dec
push
dec
in
xor
mov
mov
dec
add
mov
pop
ljmp
sbb
ret
popa
jnp
push
cmp
call
mov
push
js
js
out
sbb
int
dec
fs
shrb
sub
pushf
add
movsl
or
push
or
lcall
addl
add
and
mov
push
add
inc
add
nop
faddl
loope
mov
mov
pop
int
push
fidivrl
inc
mov
lcall
dec
dec
push
movsl
sub
add
enter
into
sub
or
mov
dec
iret
les
mul
mov
or
fld
add
fidivl
mov
rol
rcrl
or
leave
nop
push
cwtl
int3
outsl
leave
jae
paddusb
adc
push
adc
mov
lahf
imul
xchg
out
or
es
mov
lock
push
push
imul
mov
cmp
add
jae
push
pop
xchg
cwtl
and
fcoms
je
lcall
nop
sbb
sbb
mov
movsb
imul
jo
push
imul
pop
pop
mov
cmpsl
mov
js
mov
lcall
push
mov
outsb
xor
leave
xor
push
add
addl
mov
inc
sbb
push
pop
xchg
xor
sub
daa
cmc
rolb
xor
adc
cs
imul
imul
test
cwtl
mov
xor
inc
or
imul
xchg
xchg
and
jo
push
pop
pusha
push
pop
and
or
fmul
xor
dec
push
inc
xor
aad
into
and
or
pushl
mov
les
arpl
or
push
cs
push
mov
pop
pusha
rolb
add
lock
outsl
push
pop
sti
mov
jne
rcll
imul
test
pop
aaa
mov
test
xchg
faddl
xor
mov
shlb
xchg
mov
pushf
int3
push
repz
xchg
call
push
or
push
jbe
js
mov
jp
mov
jge
rclb
push
or
xor
add
mov
mov
dec
add
lea
jmp
pop
mov
jl
jp
lds
and
std
inc
add
jge
and
subl
adc
push
adc
xor
je
mov
inc
mov
push
fadds
jbe
movsl
pop
pop
pop
push
shll
dec
lods
pushl
mov
fists
mov
mov
mov
lods
mov
sbb
mov
cwtl
sbb
pop
inc
sbb
push
sbb
or
mov
roll
inc
ss
mov
and
les
ljmp
xchg
and
cmp
mov
pushf
cwtl
mov
push
adc
int
pop
xchg
add
int
insb
or
daa
adcl
sub
mov
jbe
enter
dec
cmp
push
lret
pop
je
jo
add
flds
int3
pop
arpl
mov
jbe
push
xor
xlat
cmpsl
push
cmp
sub
mov
pop
mov
dec
mov
mov
sbb
sub
mov
jo
movsl
xchg
insb
mov
mov
add
and
and
andl
and
stos
out
int3
xchg
sbbl
enter
sbb
sbbl
push
add
pop
pop
or
sbb
push
adc
or
adc
cmp
xchg
push
sub
bound
or
aas
add
xor
mov
dec
push
jmp
and
xchg
push
sub
lea
add
imul
outsb
pop
lea
add
add
dec
mov
inc
rolb
test
and
mov
add
rclb
clc
out
aaa
clc
cmp
movsb
and
push
aas
daa
lea
sbb
shll
push
ret
adc
stos
push
cmp
sub
notl
into
add
test
stos
sbb
xchg
fcoms
mov
or
add
dec
loopne
cmp
inc
cmpsl
and
test
cmp
cmp
jbe
clc
add
fcoml
pop
push
pop
push
jmp
and
aas
xchg
jp
ljmp
xchg
sub
aad
sbb
adcl
inc
daa
movups
and
ss
out
inc
jl
and
xchg
add
cmp
inc
adc
pop
jo
pop
inc
jg
sbb
stos
mov
cmp
and
pusha
ljmp
clc
sbb
xchg
or
sub
jb
mov
fsubp
js
mov
sbb
je
push
addl
and
repnz
fnstcw
add
leave
js
mov
pop
cmp
add
icebp
fisttps
jbe
mov
xchg
cmp
jne
inc
add
jb
jl
les
xor
inc
popa
pop
add
hlt
subl
adc
aam
or
iret
jne
pop
fiadds
push
jnp
movsb
repz
jae
inc
add
nop
cmp
cmc
mov
and
je
mov
dec
rcl
or
mov
scas
push
inc
loope
xchg
pop
mov
adc
imul
shlb
xchg
aad
pop
test
popf
inc
xor
into
add
test
fadd
xor
cltd
sahf
jo
ret
gs
dec
xlat
aad
xor
or
add
imul
mov
sbb
adc
pop
inc
ljmp
cs
add
jp
or
or
shlb
daa
sbb
add
add
call
xchg
pop
dec
call
xchg
and
scas
and
add
fadds
and
jno
stos
arpl
dec
ds
sub
and
dec
lret
add
aaa
xchg
jmp
cmp
jl
or
je
cmp
pushl
or
and
mov
movb
movsbl
shr
mov
pop
mov
and
mov
nop
inc
mov
into
push
adc
leave
jne
pop
push
movsl
nop
fidivrl
xor
jmp
add
pop
jne
push
sub
sbb
add
mov
loopne
mov
dec
mov
out
insb
loop
clc
xchg
cmc
int
jo
je
push
stc
dec
mov
movsb
aaa
jns
jge
test
add
adc
add
push
ror
test
add
dec
sbb
lret
loopne
and
lods
shrb
jnp
orl
lock
and
inc
sbb
or
je
dec
and
add
xchg
mov
mov
mov
mov
das
mov
mov
or
mov
popa
shlb
lock
int
jge
push
cmpsl
mov
bound
pop
test
add
push
enter
or
sub
pushf
nop
xchg
insb
ja
imul
jns
in
je
and
xlat
add
adc
xchg
push
test
repnz
hlt
and
mov
ss
idivl
mov
decl
sbb
and
jmp
cmp
pop
cmpsb
xchg
hlt
cmp
fcomps
push
les
out
xor
mov
clc
test
push
mov
cwtl
jb
dec
shlb
sahf
dec
mov
pusha
mov
xchg
jl
mov
cmpsl
or
dec
xchg
add
out
cmp
shl
mov
addr16
jl
or
xor
mov
decb
dec
nop
pop
or
daa
pop
dec
pusha
mov
inc
daa
inc
nop
push
popa
lcall
mov
jecxz
leave
dec
loopne
sbb
adc
faddl
mov
and
inc
dec
and
leave
add
add
out
imul
sbb
push
repnz
mov
inc
and
or
hlt
push
addr16
sub
dec
mov
and
and
addr16
mov
lcall
sbb
insl
xchg
sub
insl
inc
in
sbb
mov
sub
shll
pop
ret
or
leave
inc
dec
mov
lcall
mov
outsl
mov
imul
mov
jne
repz
lret
dec
sbb
ret
and
mov
xor
push
xor
inc
js
mov
sub
repnz
jne
or
push
push
add
dec
jns
adcl
cmovl
pop
nop
xchg
xchg
mov
xchg
sbb
cmp
pusha
arpl
xchg
xchg
add
cmp
movsl
push
fistl
fistps
xchg
adc
lods
insb
orl
jle
call
mov
dec
test
add
add
or
jnp
imul
out
rolb
adc
pop
push
add
test
dec
shll
push
adc
or
movsb
mov
test
sbb
test
lods
push
push
scas
nop
mov
call
lea
jnp
ljmp
xor
enter
rcl
fwait
jns
lods
aam
lea
xchg
pop
xor
or
iret
int3
adc
xchg
ret
jp
ret
or
sbb
xor
or
xor
gs
sub
stos
mov
fstpt
and
lret
rclb
cmp
xchg
sbbl
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
data16
and
gs
sub
xorl
jp
xchg
mov
and
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
sbb
push
xorb
leave
mov
movsb
mov
in
and
cmp
je
push
les
xlat
cmp
iret
ljmp
je
insl
dec
sbb
and
adc
shl
les
sbbb
hlt
popa
mov
and
and
xchg
sub
mov
insl
pop
shr
jecxz
cld
xor
jl
das
scas
movsl
push
cli
shrl
dec
sbb
test
in
test
in
cmp
out
clc
adc
dec
push
dec
rcl
mov
xor
jne
add
add
je
inc
dec
cmp
jl
jl
mov
js
jge
popf
imul
hlt
add
sub
scas
test
int3
ret
push
mov
shlb
and
les
nop
cs
cmp
xchg
aam
ret
push
pop
sub
dec
leave
add
cmpsb
movsb
enter
inc
cmp
icebp
xor
xor
mov
adc
lea
std
jo
mov
cmp
inc
jne
xchg
out
sub
in
pop
and
jl
andl
adc
pop
pop
inc
daa
inc
scas
loopne
mov
xor
or
push
lahf
mov
dec
xchg
call
setl
mov
sbb
dec
mov
add
mov
xor
lods
in
push
push
aad
or
xchg
adc
inc
das
je
jge
sti
and
jg
mov
sub
inc
sbb
push
test
xor
nop
xchg
mov
mov
cs
in
lret
movsl
in
jle
cmp
call
jo
pcmpeqw
jno
loope
jle
fisubs
inc
sbb
mov
out
int
pop
imul
mov
xchg
insl
mov
inc
push
sub
sub
xchg
xchg
push
fisttpll
cmp
xor
sbb
sbb
cmc
jno
rorb
jmp
inc
inc
stc
sbb
lret
and
inc
and
adc
or
cli
sti
test
mov
ljmp
jne
ja
mov
jbe
cmp
push
or
pop
inc
inc
cld
push
insl
roll
mov
mov
call
jl
push
loop
test
jns
cld
pop
add
xchg
sbb
adcl
pop
ret
hlt
add
jmp
es
pop
pop
pop
ret
pop
pop
test
add
push
rclb
adc
daa
mov
dec
out
push
fldl
xor
mov
lahf
inc
sbb
inc
data16
into
outsl
inc
add
out
jne
daa
bnd
adc
cmp
iret
repz
jne
or
jne
or
je
and
dec
sahf
push
push
and
int
js
nop
ret
add
pop
mov
bound
popa
imul
mov
push
lea
mov
fistpl
inc
dec
iret
clc
ja
push
inc
inc
pop
sub
push
jl
mov
lea
repnz
or
fstpl
lea
cmp
mov
mov
or
xchg
xor
orl
cmpb
ret
mov
sbbl
jl
lds
clc
sub
sub
xor
or
adc
movsb
insb
dec
cmc
mov
adc
addr16
cmc
int3
imul
push
shll
je
movsl
jne
adc
xor
adc
cmp
and
popf
or
pop
fstl
jmp
int
inc
sub
fcom
loopne
ror
sti
gs
inc
lea
jo
adc
xchg
shll
popf
add
dec
jl
icebp
loopne
mov
sbb
push
ss
ret
lock
shlb
loopne
movsb
lock
sbbl
push
xchg
insl
mov
adcl
jmp
orl
outsl
pusha
cmp
pusha
inc
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
fs
xor
add
fs
pushl
pop
add
icebp
les
mov
dec
dec
push
xor
sbb
push
popa
xor
jl
adc
or
mov
pop
nop
idiv
or
add
inc
sub
cwtl
call
or
into
testl
int
mov
sub
dec
filds
xor
jnp
loopne
mov
add
enter
repz
add
dec
pop
addr16
or
test
rol
lods
fs
push
or
sub
pop
xor
and
push
mov
mov
fdivl
push
jb
clc
sahf
mov
push
add
pop
mov
pushl
dec
cltd
jge
mov
or
sub
cmp
pop
add
andb
leave
or
mov
inc
dec
mov
addl
add
or
sub
pop
inc
inc
xorl
movsl
mov
add
or
inc
cmpsl
rep
mov
scas
fcoms
push
xchg
pusha
sbb
daa
das
sbb
jo
xor
js
jmp
xorl
in
push
les
and
push
dec
das
test
sbb
xor
call
cmp
push
or
push
nopl
and
adc
xor
mov
leave
and
inc
adc
fmuls
arpl
and
adc
lds
cmp
inc
adc
fadds
dec
enter
or
dec
add
xchg
outsl
push
adc
sbb
adc
sbb
repnz
jae
push
sbb
aam
inc
lcall
test
sti
loopne
push
inc
and
daa
inc
mov
das
and
inc
es
daa
ret
sbb
jmp
add
hlt
data16
sbbb
cli
or
adc
add
and
dec
dec
repz
pop
cmpsb
push
mov
sub
or
mov
insb
and
imul
cwtl
add
push
or
sbb
in
pop
js
xchg
xchg
dec
mov
lods
xchg
inc
adc
add
imul
shlb
inc
or
pop
adc
sub
xor
and
js
adc
adcb
add
push
xchg
pop
lea
fs
or
sbb
fdivrl
sub
testl
push
lahf
test
xor
sub
xor
jne
xchg
loopne,pn
in
aam
cmpsb
test
mov
dec
add
and
push
push
jo
movsb
sbb
ret
push
add
sahf
pushl
ljmp
hlt
fsubrl
pop
dec
pop
inc
sbb
les
je
lcall
xchg
fldpi
lods
or
in
call
xchg
add
mov
out
or
mov
xor
sbb
cmpb
pusha
adc
mov
jge
jecxz
mov
shlb
sub
or
dec
pop
inc
pop
xchg
andb
dec
sub
and
inc
je
aas
roll
mov
sbb
mov
or
push
call
outsb
sub
mov
fcomip
add
mov
pop
emms
fsts
out
sub
repnz
ja
xorl
test
or
lahf
sub
out
add
xor
cs
repnz
aaa
push
cmpsl
adc
adc
scas
inc
cld
and
push
inc
or
xchg
add
jne
pop
mov
inc
cmpsl
test
inc
fsubrs
mov
and
jne
sub
or
jmp
sub
jle
xor
adc
sysexit
adc
sub
cmp
js
sbb
push
xor
bound
xor
pop
aaa
add
cmp
push
sub
add
enter
sub
and
fdiv
add
in
inc
inc
sub
movsl
push
popa
mov
aas
dec
ret
dec
shlb
add
cld
dec
icebp
mov
ret
daa
add
js
les
cmp
pop
push
mov
je
adc
stos
cmp
ret
rcrb
sub
imul
mov
push
test
xchg
dec
loope
es
mov
mov
pop
hlt
pop
xor
push
inc
hlt
add
add
enter
sti
mov
loope
les
xor
ret
stos
loopne
psubd
mov
sbb
call
inc
ja
pop
jmp
out
je
loop
jmp
call
mov
fisubrl
add
pop
adc
dec
subb
cli
and
sbb
jne
add
mov
test
add
nop
xchg
rcll
xor
xor
push
fisttps
and
add
or
pop
je
xchg
movsl
test
pusha
shlb
stc
sbb
jo
pop
cmpsb
pushf
jmp
mov
xor
mov
inc
or
subl
inc
pusha
mov
aam
addr16
pusha
pusha
inc
imul
sub
cmpsl
sbb
push
es
inc
add
mov
inc
xchg
add
jo
ror
rol
addb
mov
add
xchg
push
mov
push
aas
lret
mov
pop
nop
mov
repnz
mov
in
add
mov
pop
lock
sarl
adc
aam
jno
outsb
jo
and
add
dec
ret
push
je
movsl
ja
leave
pushf
dec
or
cmpsl
mov
mov
leave
cmp
je
mov
cmp
adc
rolb
sbb
sete
cmpsb
mov
aam
xor
pusha
push
cmpb
adc
lret
js
hlt
outsb
clc
or
jae
movsbl
sbb
inc
mov
pusha
rcrb
lahf
cwtl
es
or
jmp
cmp
cwtl
ds
jmp
cmp
lcall
inc
incl
cmc
decl
or
jecxz
or
add
inc
cmp
jl
cmpl
xchg
cltd
and
add
xor
adc
sar
add
sub
clc
xor
fldcw
loopne
ss
cmp
jecxz
sbb
inc
jbe
lahf
lock
enter
adc
or
dec
lock
out
mov
pop
pop
sahf
leave
sbb
pop
push
lock
arpl
push
les
push
pop
dec
ficompl
mov
jbe
pushl
shld
lea
roll
inc
adc
roll
pop
adcb
fisubrl
stos
test
std
popa
push
push
jecxz
xor
cmp
jl
aam
jle
insb
aas
mov
loopne
ret
mov
out
cmp
out
mov
mov
add
fcmovnb
and
xchg
cmp
pop
aam
sarb
mov
ds
lahf
push
ret
or
mov
adc
mov
dec
fs
pop
mov
pop
enter
push
adc
std
push
inc
push
fwait
imul
mov
mov
jl
sbb
add
adc
stos
xor
mov
adc
or
and
inc
jmp
fwait
xor
fldt
mov
cmpsl
loop
repnz
sahf
or
stos
sub
fildl
outsb
dec
or
add
nop
cmp
add
fsts
rclb
lahf
rolb
mov
jecxz
dec
sbb
pop
mov
movsb
mov
movsl
push
push
outsb
rcrl
sbb
out
fcomps
jbe
data16
pop
pop
rorb
add
jnp
sbb
sub
xchg
in
jl
dec
sbb
add
add
out
nop
aad
pop
dec
dec
mov
in
inc
or
or
pop
flds
fs
add
idivb
dec
es
push
and
push
lahf
mov
pop
ss
jns
push
push
xor
mov
inc
sub
addl
stc
pop
sar
xor
sub
inc
xchg
fildll
fists
sahf
lea
inc
das
in
popa
test
jge
and
rorl
mov
adc
mov
iret
push
cltd
pop
add
inc
sub
lds
sarb
or
mov
mov
jmp
mov
or
and
or
adc
scas
rol
rcll
adc
dec
test
or
pushf
cmp
je
aaa
mov
sub
ret
into
das
call
aam
ret
dec
xor
dec
push
lret
or
inc
xchg
lahf
mov
je
call
xchg
xchg
ss
hlt
add
int3
nop
les
add
pop
outsl
aaa
xchg
push
push
daa
lret
je
mov
or
push
aam
mov
addr16
test
push
shll
adc
imul
aam
imul
jno
leave
and
adcb
aam
cmc
stos
rorb
mov
orb
or
ja
or
mov
jmp
mov
inc
adc
adc
roll
inc
pop
adc
push
cmp
xchg
mov
or
aad
loope
cmp
pop
mov
int3
add
mov
loope
sbb
sbb
clc
pop
bound
cmp
sarb
mov
je
mov
pop
pop
dec
fmuls
pop
adc
add
mov
push
inc
sbb
pusha
and
incl
mov
cmp
insl
bound
xchg
orb
adc
enter
and
mov
lret
xor
daa
test
xchg
xchg
or
push
inc
aam
add
or
rclb
add
adc
xchg
xchg
xchg
roll
add
pop
mov
lret
mov
cmp
jl
cwtl
loopne
shl
jge
push
mov
xchg
loope
cs
clc
push
sbb
outsb
xor
push
daa
movsbl
shl
call
sbb
ss
call
inc
loopne
jmp
mov
out
test
mov
mov
test
fadds
sbb
lret
movb
sub
sub
rorb
rclb
pop
add
shrb
daa
jecxz
pop
cmp
adc
fadds
cwtl
inc
je
cmp
adc
rorl
nop
movsb
add
cs
xchg
lcall
adc
ret
xchg
stc
mov
adc
les
sub
mov
mov
iret
popf
dec
pop
or
mov
or
or
es
add
call
pop
add
or
adcb
ja
push
scas
inc
inc
mov
inc
mov
pop
dec
jmp
or
and
cmp
fcmovu
stos
rcl
add
pushl
or
mov
mov
ljmp
mov
add
mov
adc
clc
sub
imul
or
mov
inc
or
jo
jecxz
pop
jl
hlt
mov
add
dec
mov
mov
mov
add
mov
add
movzbl
cmp
outsl
push
mov
inc
mov
mov
cmp
jl
mov
fldenv
mov
ffreep
aam
sarl
sub
pop
jae
lea
or
orb
or
sti
or
add
add
push
mov
jp
insl
push
nop
and
or
ljmp
cld
push
leave
push
xor
mov
inc
call
jne
jecxz
scas
pop
arpl
sbb
fwait
jb
and
into
in
mov
ds
xchg
call
hlt
sbb
pop
add
orl
xchg
arpl
repz
js
test
icebp
xchg
in
aaa
ret
push
notb
mov
rcll
sub
sbb
fistl
jno
mov
inc
pushf
mov
cmp
mov
aas
and
into
sub
js
xor
inc
iret
test
adc
imul
imul
sub
mov
inc
imul
push
jo
adc
or
adc
dec
cmp
mov
jae
and
mov
nop
mov
push
sbb
pop
mov
and
enter
rcr
popf
and
pop
sbb
push
push
fldcw
dec
mov
mov
je
in
loop
rclb
mov
sbb
scas
mov
sbb
or
iret
pop
orb
xchg
push
adc
push
call
or
cwtl
mov
stc
sub
jmp
mov
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
pop
pushf
dec
mov
ljmp
into
xchg
iret
and
insl
mov
lcall
add
dec
outsb
jnp
invlpg
xor
test
push
movl
test
ss
cmp
out
mov
mov
push
fsubs
iret
push
call
push
push
aas
cltd
jp
push
cmp
and
and
add
hlt
sbb
test
mov
jmp
ret
and
enter
sub
lds
mov
subl
mov
shlb
aam
mov
js
scas
bound
cmp
cmpsl
js
sti
lea
ss
add
xchg
push
push
xchg
xor
or
push
subl
jnp
lods
or
addr16
std
pop
or
cmpsb
mov
icebp
adc
pop
in
mov
into
mov
mov
xchg
aam
jne
xor
pushf
adc
fcomps
mov
out
or
jo
aas
jb
push
sub
add
adc
sub
pop
inc
pop
add
pop
adc
lcall
adc
xor
inc
adc
aam
lds
in
adc
adc
add
and
push
subl
pop
xchg
xchg
cmpl
jp
mov
pop
stos
pop
and
sub
test
aam
push
or
aas
add
add
jnp
push
shl
and
mov
pop
xor
test
adc
ss
xchg
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcll
fisttpl
push
loopne
mov
pop
inc
jp
sti
dec
stos
aam
dec
orl
ret
mov
enter
sub
test
or
add
insb
ss
scas
add
push
aam
push
or
inc
mov
xchg
shrb
or
cmp
shrb
adc
test
icebp
jg
repnz
jo
jae
mov
je
cmp
rcpps
mov
ficomps
roll
and
mov
negl
test
fnstcw
int3
mov
aaa
push
call
std
inc
mov
lea
push
push
dec
mov
movl
aas
clc
and
fs
or
xchg
shlb
stos
mov
jge
cmp
pop
jle
add
mov
xchg
outsl
pop
fdivl
pusha
xchg
adc
inc
add
leave
push
aaa
and
insb
or
sub
add
cmpsl
cmp
cmp
mov
pop
fadd
add
pop
je
aam
or
testl
andl
popf
cmpl
aad
or
mov
sub
pop
fs
stos
sub
push
add
lcall
in
hlt
sbbl
jge
loope
rolb
or
orb
jmp
sti
movsb
and
sbb
inc
incl
imul
mov
pop
add
xchg
aad
push
ss
and
jmp
ret
sbb
fsubl
jmp
push
aad
xchg
loopne
test
sbb
hlt
pop
inc
bound
pop
push
push
jbe
jp
lods
lods
mov
cld
mov
sub
nop
mov
jne
and
sbbb
ret
test
lahf
ret
je
pop
imul
rcll
ja
cmp
loope
mov
sub
out
jg
ss
sub
cmp
pop
push
sbb
nop
ds
mov
jb
add
fisubrl
lret
ds
push
loopne
cmpsl
or
cmp
jmp
sub
push
xor
jmp
cmp
jne
mov
push
cmp
adc
call
loopne
pop
mov
rolb
pop
leave
test
fistps
add
je
in
xor
and
or
sbb
jle
push
and
cmp
sbb
adc
push
push
call
cmp
sbb
mov
sahf
and
in
add
or
int
jmp
jg
pop
lods
push
pop
or
cmp
add
rorb
shll
push
or
jmp
add
mov
dec
enter
jbe
xor
or
or
popa
fcompl
push
add
cmp
pop
and
and
repz
in
inc
dec
mov
sbb
pop
mov
cmp
dec
xchg
mov
sub
add
andl
jns
pusha
dec
add
mov
stc
and
inc
add
add
into
ret
push
mov
sub
daa
and
call
dec
ds
and
xor
jnp
jae
inc
mov
cmp
fbstp
pop
jmp
cmp
cmp
into
adc
nop
pop
or
lea
rclb
and
fcoms
pusha
xchg
or
sahf
mov
dec
pop
test
dec
xor
test
inc
lcall
or
sbb
leave
das
andb
inc
jle
or
addl
push
and
jl
push
or
test
push
sub
pop
pop
sub
or
inc
mov
inc
adc
jle
or
andl
ret
loopne
movsl
jae
shrl
sbb
in
add
cwtl
xorb
sub
stos
stos
dec
or
popa
and
lods
les
cltd
loope
sbbb
das
data16
mov
or
inc
mov
ja
add
or
jl
jae
push
lods
mov
xchg
stos
push
fs
add
mov
fnstenv
pop
xor
dec
pop
movsl
sbb
std
divl
sbb
inc
push
mov
mov
xchg
or
lea
or
out
sub
pop
xchg
adc
or
and
jnp
mov
pop
adc
and
pop
dec
adc
sbb
adc
std
adc
test
movsb
cmp
sub
mov
dec
shlb
sub
adc
sbb
in
dec
adc
pop
pushf
les
mov
push
mov
sbb
jnp
fcompl
dec
jnp
xchg
and
aam
inc
mov
inc
cmp
dec
jg
mov
and
ds
in
ret
ficomps
and
pop
movsl
fmul
push
inc
or
adc
xchg
pop
loope
pop
jns
mov
xchg
push
mov
ja
push
sub
sub
pop
pop
sub
push
fwait
popa
cmp
sti
mov
inc
pop
push
add
cs
inc
rclb
mov
add
mov
inc
andl
aaa
xorl
filds
mov
ror
sarl
inc
push
adc
fidivl
test
fs
punpckhdq
cmp
jecxz
rcr
sub
jbe
or
jle
fdiv
jne
jmp
pop
jecxz
sub
jnp
add
pushf
in
add
leave
cmp
lret
aam
mov
imul
cmp
mov
mov
push
lea
iret
in
js
rclb
sbb
clc
dec
dec
mov
push
stos
or
adc
mov
and
sub
arpl
xor
dec
out
in
dec
lea
fnstenv
add
movb
lock
ss
int
cmp
jb
cmp
inc
int
rorl
sbb
inc
aaa
popa
xor
loop
mov
mov
je
add
push
sbb
sbb
pop
mov
jl
xchg
push
push
pop
push
inc
adc
add
stc
hlt
insb
cmp
or
cltd
clc
dec
je
in
loopne
jbe
jmp
aaa
in
xor
imulb
dec
filds
or
mov
cmp
addr16
je
cmp
add
std
jne,pn
mov
sbb
sbb
dec
lea
out
es
mov
pop
dec
xor
or
out
mov
cmpsb
mov
sub
inc
adc
je
testl
lods
and
in
cmp
jbe
lahf
inc
mov
add
inc
cmp
je
and
incl
sub
inc
jmp
inc
and
test
hlt
adc
test
fistpl
cld
pop
iret
bound
mov
xor
lods
dec
cmpsb
repnz
je
fs
out
aam
mov
push
push
adc
adc
add
inc
jmp
loop
pop
cli
sbbb
push
ja
sub
cld
inc
xchg
cmp
add
dec
insl
shll
hlt
cmpb
pop
pop
xchg
adc
je
lret
ljmp
jbe
jb
fdivs
js
sub
subb
sbb
es
and
push
add
loopne
sbb
lods
sub
loop
mov
push
pushf
mov
sahf
pop
jmp
push
push
jno
loopne
jne
mov
mov
jbe
in
pop
mov
xchg
pop
add
je
aam
add
inc
add
jae
movl
pop
inc
shrb
shl
loope
sti
add
fsubr
adc
aas
insb
sti
and
cmpsb
and
sbb
xchg
pushf
or
in
mov
js
fs
jne
xor
or
lock
mov
mov
inc
rorl
call
cmp
dec
jge
jno
shlb
fsubrl
push
jo
add
push
addl
call
addl
fs
int3
push
jp
sarb
jbe
add
cmp
or
out
out
jle
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
cwtl
inc
test
jbe
lea
cmp
jbe
push
adc
loopne
hlt
pop
arpl
pop
add
inc
adc
je,pn
test
jne
pop
push
adc
cmp
std
sub
jb
clc
add
push
xor
stos
dec
cld
lods
xor
adc
movb
inc
adc
adc
xchg
leave
ret
test
xor
test
pop
rorb
xchg
data16
mov
inc
and
dec
sub
sbb
push
adc
mov
js
inc
xorl
adc
cmp
add
sbb
jp
sbb
push
je
mov
cmp
lock
out
xchg
lea
xor
fs
lods
adc
movhlps
dec
jae
mov
dec
cs
adc
mov
mov
lea
rorl
repz
inc
push
mov
popf
dec
jl
and
ret
add
aas
and
add
lret
jne
mov
test
xor
jle
inc
sahf
test
push
push
push
imul
xor
inc
inc
xchg
mov
imul
ja
cmp
addl
ljmp
and
cmp
int
cmp
jae
xor
or
add
sbb
lock
adc
push
mov
or
inc
fsubr
push
sbb
andb
ja
test
add
pop
fisubrs
add
sbb
jmp
sahf
mov
loopne
sbb
and
ss
cmp
dec
mov
jmp
andl
imul
cltd
aaa
jp
call
mov
hlt
dec
nop
imul
sub
ret
decl
pop
cmp
out
cmp
pop
push
movl
push
adc
loopne
fisttps
jb
push
push
lahf
and
add
add
insb
cli
clc
jle
push
incb
push
mov
mov
adc
int3
add
cmc
jo
jb
mov
hlt
mov
mov
cmp
push
jg
loopne
jmp
ds
rcrl
lret
pop
outsb
je
pushl
xchg
jne
mov
lea
outsb
fsubr
jae
std
jo
cmp
inc
cmpl
push
addb
shrl
psubd
jge
cmp
lea
jb
dec
shlb
dec
movsb
push
mov
shlb
xor
and
jbe
out
in
lea
jge
push
gs
popa
iret
icebp
add
inc
inc
fwait
cmp
insl
dec
cmp
pop
pop
outsb
orb
push
out
cmp
je
cmpsl
popf
dec
or
aad
or
cmc
inc
mov
pop
cmp
xchg
jl
pop
mov
pop
adc
xchg
sbb
cmp
pop
je
test
dec
sbb
jmp
pusha
add
call
xorl
adc
add
push
push
lock
mov
pop
adcl
icebp
in
clc
mov
pushf
mov
nop
testb
addl
jecxz
sbb
inc
push
in
sub
cmp
push
or
add
lahf
shll
fdivs
aaa
pusha
xchg
sub
cmp
cwtl
push
add
add
pop
ja
mov
cwtl
cmc
stos
int3
sbb
outsb
enter
es
adc
sub
sbb
ret
or
sti
pusha
jb
outsb
lock
ficoms
mov
adc
repz
rol
add
cli
mov
in
jbe
push
adcl
fisttpl
mov
cmp
adc
sub
xchg
sarb
das
mov
and
gs
imul
inc
push
subl
mov
rolb
inc
push
jbe
loop
sti
into
mov
arpl
xchg
fimull
inc
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
dec
cmpsb
xchg
xchg
movsl
mov
inc
lea
or
dec
addr16
loope
fstpl
frstor
fwait
xchg
imul
in
cmp
sbb
shll
push
fsubs
and
dec
je
cmc
call
pop
and
cmp
xor
add
fmul
ja
je
shl
enter
mov
xchg
push
mov
clc
add
inc
xchg
lcall
imul
push
or
sbb
pop
xlat
jge
ds
cwtl
cmpl
je
xor
xor
cmpsl
mov
lret
or
jne
mov
sti
rclb
cmp
adc
add
movl
add
js
sub
cld
sub
rcrb
mov
out
in
andl
aas
sub
inc
or
pop
dec
fs
pop
fcmovu
inc
cs
xchg
and
add
lahf
jmp
jnp
add
bound
and
push
cmp
dec
inc
mov
sbb
add
push
sbb
or
ds
inc
push
push
cmp
or
sbb
jno
jmp
sbb
xchg
stos
ja
adc
iret
push
addl
dec
cmp
adc
push
adc
mov
sub
add
into
cmp
test
pop
jnp
jbe
pop
sbb
xchg
jne
sbb
mov
icebp
cmpsl
lods
bsr
xchg
test
cmpsl
mov
out
inc
mov
dec
xlat
push
aas
je
cmp
cwtl
dec
ret
in
push
pop
jne
aam
imul
sbb
imul
and
icebp
pop
jne
pop
call
cmp
xchg
test
pop
add
insl
in
xor
in
cmp
jne
jmp
sbb
into
shlb
call
cmp
push
add
mov
sub
mov
cmp
pop
scas
sbb
or
mov
je
pop
in
addb
add
xchg
scas
loop
je
imul
repz
jecxz
inc
div
jmp
pusha
mov
jae
xchg
fisttpl
add
mov
add
jne
daa
mov
testb
mov
sub
incb
je
add
cmpl
lock
pop
xchg
mov
orl
sbb
or
pusha
push
scas
or
inc
decb
cmp
push
scas
or
or
lock
push
add
add
push
jo
jge
mov
push
cmp
aas
mov
std
push
mov
test
dec
adc
push
inc
fdivs
les
pusha
add
test
xchg
and
pop
pop
xchg
sub
mov
push
xchg
rcll
xlat
push
mov
push
push
pop
pop
xchg
lret
in
pop
pop
pusha
pusha
fs
ret
mov
jbe
inc
pop
ja
xor
add
sbb
push
add
adc
dec
sub
pop
inc
xchg
int3
mov
push
pushf
subb
and
sti
cmp
adc
and
fildll
sbb
jmp
push
adc
push
lret
mov
cltd
sbb
push
add
jne
or
push
or
inc
adc
dec
jns
xor
int3
adc
aad
fs
pusha
sbb
popa
mov
scas
stos
add
or
or
cmpsl
stos
gs
add
daa
mov
cli
xor
leave
xor
pop
jo
cmp
sbb
ljmp
sbbb
or
incl
pop
inc
push
sti
cli
jp
push
pop
jmp
mov
in
int3
mov
je
mov
or
sti
and
add
mov
push
or
mov
and
push
push
fwait
sbb
pop
loope
inc
je
lock
test
lock
and
popf
hlt
or
push
xor
inc
ss
sti
es
sti
in
cmpl
push
mov
push
xor
sub
nop
and
mov
sbb
sbb
test
mov
cmp
fucomp
push
push
data16
je
pusha
cmp
inc
enter
push
jo
jg
mov
je
mov
cmp
jne
ss
lock
adc
in
sbb
xlat
loopne
test
out
or
je
jg
mov
cmp
mov
xorb
cmp
test
nop
mov
mov
pop
sbb
pop
outsb
mov
mov
add
pop
xor
pop
add
clc
cmp
adc
sbb
arpl
cmp
nop
pop
fisubl
test
into
sbb
je
jnp
jbe
push
adc
ds
adc
pop
jne
lods
outsl
jecxz
add
adc
jp
and
add
in
insl
out
add
xor
shlb
sbb
jne
adc
pop
insb
jecxz
add
pop
jbe
jo
insl
sub
push
adc
adc
dec
ret
movsl
mov
mov
sbb
ret
add
es
cs
mov
or
jae
xchg
adc
sbb
pop
adc
add
incl
cmp
test
pop
sbb
adc
sub
or
jne
sub
mov
sbb
jne
dec
stc
in
sub
or
mov
adc
hlt
cmpsl
adc
cmpb
in
je
divb
mov
arpl
mov
adc
out
xor
lea
inc
add
xor
and
data16
into
andb
sub
rclb
jge
jb
xor
aaa
imull
xchg
rorl
inc
hlt
shlb
cli
hlt
inc
adc
adc
arpl
add
cltd
adc
add
mov
sub
ljmp
add
pop
enter
das
xor
adc
add
xor
mov
jecxz
mov
pop
adc
mov
mov
xor
ret
and
add
mov
xchg
jg
fcoml
mov
mov
add
shl
sbb
orl
int
jp
jmp
pop
outsb
xchg
in
inc
jne
addr16
mov
push
mov
adc
test
lea
add
das
je
aaa
add
lock
mov
out
adc
sbb
dec
add
pusha
scas
xchg
add
push
lcall
push
rolb
add
lock
and
mov
movsl
movsw
lret
test
call
adc
mov
sub
sbb
inc
es
mov
int3
mov
jb
fsub
push
adc
js
lods
popf
pop
sbb
push
bswap
mov
push
test
pusha
rorb
je
adc
repnz
or
mov
sbb
mov
dec
clc
jmp
sub
mov
pushf
loop
cmp
push
inc
ret
orl
shlb
mov
sub
sbb
in
dec
dec
popf
cmpsb
adc
je
cld
fcom
and
add
jo
andl
pop
add
int3
mov
adc
inc
pop
push
push
ss
orb
mov
loopne
mov
pushf
and
add
pop
dec
sbb
xor
jl
push
inc
mov
sbb
or
loope
adc
lds
in
xchg
cmp
mov
jmp
xchg
cmp
test
rolb
es
jp
arpl
xchg
push
movsb
mov
adc
lret
shlb
rcrb
cmp
lret
inc
dec
fsubrs
aaa
and
add
stc
mov
xor
sbb
sub
rclb
aam
lea
and
push
mov
dec
cmp
nop
rorl
rcll
gs
and
and
scas
ljmp
sbb
test
out
ret
push
mov
daa
inc
mov
das
xchg
inc
cmp
jl
jmp
ret
outsb
xor
add
lock
or
stos
cmp
clc
sbb
add
ret
add
push
mov
lds
mov
pop
cmpsl
test
into
ret
and
xchg
out
push
cmp
addl
mov
xor
clc
data16
add
push
xchg
int
mov
mov
lock
insb
xor
testb
pop
add
xor
sbb
and
jl
and
push
rep
clc
int3
subb
adc
add
cmp
lods
orb
jmp
and
lock
aaa
loop
lea
inc
push
xor
rol
jns
and
inc
ds
js
pop
jo
test
push
push
adc
fistps
clc
inc
lods
or
jmp
push
mov
cmp
add
mov
push
addr16
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
push
ret
outsl
sbb
push
sbb
hlt
sub
xor
aas
pop
daa
sbb
divb
pusha
xchg
sbb
sbb
adc
adc
fnsave
jle
clc
inc
push
enter
notb
aad
es
ss
mov
add
sbb
mov
or
popa
pop
leave
sub
std
mov
clc
pop
mov
cmp
js
test
fstps
or
fs
adc
add
cmp
mov
mov
out
inc
or
jmp
push
daa
lock
mov
cmp
repnz
dec
rcr
shll
fdivs
add
pop
jge
rolb
jne
and
dec
nop
push
add
xor
lock
push
push
in
out
mov
fnsave
or
pop
ret
pushl
push
add
fcmove
mov
ja
cmpsl
mov
add
iret
add
clc
mov
repz
inc
inc
pop
into
cmp
pop
jg
pop
and
sub
add
lcall
sbb
addr16
clts
test
loopne
mov
pop
sub
iret
mov
mov
dec
push
stos
pop
movsb
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
xchg
test
sub
inc
jle
dec
jecxz
or
push
xchg
inc
mov
push
outsb
jns
in
xor
scas
sub
jmp
shlb
ja
arpl
jecxz
inc
mov
outsb
bound
xchg
icebp
loopne
out
xor
xchg
xchg
or
add
mov
stos
cmpsl
dec
add
stos
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jbe
push
leave
loopne
push
mov
sub
push
outsl
adcb
iret
or
xor
pop
mov
push
in
adc
scas
sub
popa
adc
pop
sbb
dec
sahf
loopne
pop
ud0
adc
ja
in
outsb
cmc
pushf
push
and
xlat
mov
push
pop
sbb
adc
or
leave
jb
inc
inc
sbb
adc
push
mov
inc
dec
js
pop
inc
sub
testb
adc
ret
rcrl
add
push
mov
add
push
adc
pop
and
sbb
xor
cmp
and
je
pop
sub
cltd
inc
cmpsb
add
cmp
cmpsl
or
sbb
mov
pusha
pusha
ljmp
arpl
add
cmp
inc
xor
scas
sbb
add
jo
movsl
push
fidivl
jns
pushf
mov
pushf
pop
fmuls
push
lds
pop
sahf
add
or
pop
cmp
pop
leave
or
fadds
sub
jle
sbb
ss
test
jns
cmp
or
or
test
lods
add
mov
mov
shl
outsb
cmpb
pop
es
add
dec
cmp
popf
fcomp
jnp
lds
or
lea
rorb
repnz
bound
sbb
dec
sub
sub
lret
das
push
jge
add
movl
leave
mov
clc
or
jo
push
std
and
addb
adc
inc
push
and
mov
adc
dec
xchg
bound
jnp
or
push
cmp
addr16
and
inc
sbb
test
xchg
push
out
cmp
rol
inc
lock
mov
or
mov
sti
xor
fistpl
or
addl
cmp
fiaddl
and
push
inc
mov
fs
cmp
cmp
or
repz
and
sub
shll
sahf
loopne
adc
insl
rcr
dec
push
cltd
xlat
mov
or
jno
dec
or
mov
sub
ret
adc
jnp
inc
cmp
lcall
pop
adc
pop
dec
imul
and
dec
cmp
dec
jbe
popf
sub
mulb
mov
dec
add
sub
dec
repnz
cli
outsb
aam
mov
and
push
pop
adc
aaa
and
and
inc
in
hlt
movsb
fistpll
subl
sbb
dec
mov
and
test
fwait
jl
add
push
je
outsb
xchg
sbb
mov
adcl
mov
or
jmp
or
pop
and
pop
fldenv
sbbl
popa
dec
mov
das
push
movsb
inc
mov
loopne
mov
test
inc
jg
xchg
mov
add
xchg
cmpl
add
addl
in
push
or
cmpsb
call
inc
in
mov
jne
adc
push
mov
ds
inc
and
not
ficoms
mov
and
xor
pop
ss
add
mov
pushf
js
mov
or
mov
inc
lods
add
xor
dec
lods
or
jns
mov
mov
loope
sbb
or
mov
sbb
jge
and
xor
jmp
sbb
rolb
push
sbb
or
push
sub
and
clc
push
in
mov
mov
dec
xor
or
jmp
adc
push
xchg
sbb
int3
add
adc
test
lods
xchg
lods
scas
jge
and
and
push
and
clc
xchg
dec
push
lock
inc
add
int
and
out
repz
addb
adc
addr16
data16
jle
pop
add
jecxz
adc
cmp
inc
loopne
sub
test
xchg
popf
xchg
pusha
fbld
sub
pop
push
nop
fmul
sub
sbb
pop
jbe,pn
fdivl
ret
mov
jbe
test
dec
sbb
mov
je
mov
jo
adc
push
pusha
push
dec
mov
pop
mov
in
mov
jno
enter
mov
inc
sbb
jne
cmp
push
fsubr
adc
std
nop
outsb
mov
and
scas
dec
bound
loopne
movsb
rorb
test
mov
les
lea
add
rolb
cli
cmp
add
cmp
fucompp
mov
sarl
popa
incw
cmp
and
leave
andb
test
xor
iret
jmp
mov
nop
mov
push
nop
addr16
mov
sbb
dec
cmp
push
push
pop
test
or
scas
ds
jo
jne
xchg
dec
lds
cltd
cltd
push
or
loopne
push
push
jmp
movsl
adc
subl
loope
or
mov
mulb
sub
and
inc
std
pushf
mov
push
pushf
fs
bound
js
mov
inc
add
sbb
js
xor
call
xor
cmpsb
mov
rcrb
out
add
inc
and
and
fst
jne
jne
popf
cmp
lcall
leave
jle
pop
mov
xorb
sbb
bound
xor
lods
push
inc
hlt
or
add
mov
sarl
mov
sbb
sub
add
rolb
movsb
push
mov
fcoml
or
add
popw
mov
rol
xchg
inc
push
sarb
es
ss
jb
jnp
lods
mov
ja
imull
push
rorl
lods
orb
lods
jbe
jne
mov
push
es
aas
xor
or
mov
xor
cmp
loopne
inc
jbe
addr16
mov
push
jp
ds
in
ret
enter
je
hlt
sub
add
jb
cmp
xor
add
dec
add
pop
ss
push
add
pop
mov
dec
cmp
rorb
aaa
add
sbb
mov
xor
xorb
mov
rolb
mov
ret
add
or
cmp
je
push
sub
jbe
movsb
lcall
push
call
pop
fldcw
fcoms
loope
imul
push
inc
and
push
imul
or
adc
leave
and
adc
inc
shrb
inc
dec
xor
in
stc
jmp
arpl
sub
lods
fisubrs
cmc
out
add
mov
lods
cld
jmp
test
push
jl,pt
jne
lds
add
ficomps
testb
xchg
icebp
fisttpll
cld
add
ds
ss
clc
mov
mov
add
outsb
add
sbb
mov
stc
in
mov
xchg
test
sbb
jge
call
hlt
cmpsl
cld
adc
rcll
xlat
arpl
mov
cmp
inc
mov
lods
testb
jo
jae
enter
adc
in
enter
adc
adc
test
jb
in
adc
adc
enter
adc
adc
movb
jno
mov
sub
mov
xchg
add
aas
js
repz
push
mov
cmpw
je
xorl
mov
out
xchg
lock
add
cltd
mov
push
xor
xchg
leave
and
xor
jmp
dec
test
push
mov
xchg
adc
cmp
icebp
lret
adc
cwtl
mov
sbb
in
test
pusha
popf
mov
iret
pushf
std
sub
jl
inc
and
das
jmp
cmp
push
add
sbbb
shrb
sub
cmp
bound
pop
jns
out
enter
adc
mov
jno
es
lret
cmp
pop
or
mov
add
fdiv
xchg
into
mov
add
fbstp
jbe
addr16
dec
sub
shlb
pushf
out
outsl
lret
fistl
mov
test
add
xor
pop
push
adc
mov
push
fimull
push
xor
xor
or
or
mov
sbb
mov
pop
mov
es
mov
inc
mov
jb
in
dec
call
out
adc
rolb
loope
push
dec
jecxz
sub
push
gs
jecxz
cmp
inc
xchg
push
xchg
mov
lar
movsl
mov
push
push
mov
cld
add
out
pop
sub
into
jp
fsubrs
aam
mov
imul
mov
push
mov
inc
or
daa
popa
stos
aam
in
pop
adc
fwait
insb
into
jmp
xor
dec
cmp
lea
add
roll
in
insl
cmp
cmpb
aad
mov
and
xchg
push
jae
inc
dec
notl
jne
call
ss
inc
test
dec
jno
mov
mov
mov
push
stc
inc
dec
and
jns
in
fucomp
push
push
cmpl
insb
js
imul
addl
sti
inc
xor
cmp
cmp
pop
fistpll
add
ja
jno
cmp
xchg
in
hlt
jmp
sbbb
xchg
daa
pusha
lds
je
jl
push
mov
mov
sub
lfs
out
push
and
push
insb
out
inc
push
int3
push
sahf
cs
push
or
inc
jecxz
loope
adc
ror
push
jo,pt
syscall
test
ret
pop
lock
fcom
mov
ds
inc
enter
add
push
mov
and
mov
popa
mov
and
pop
add
jecxz
clc
add
mov
rcrb
out
xorb
fs
aad
stc
ss
xor
push
and
and
dec
pop
test
mov
out
cmp
and
inc
js
pop
push
rorb
movsb
test
and
incb
push
lods
xor
orb
fwait
mov
popa
inc
xor
sbb
leave
dec
jmp
adc
push
pop
push
ret
or
inc
arpl
inc
repnz
in
popa
xchg
push
inc
insl
aad
mov
jecxz
xchg
adc
xchg
jo
stc
call
shlb
push
popa
lea
xchg
jp
rolb
inc
pop
ret
add
add
pop
adc
sbb
repz
lcall
es
dec
adc
roll
push
push
xlat
lcall
outsb
cmpl
push
mov
shlb
inc
sbb
lret
arpl
fdiv
sbb
sahf
cmp
dec
popf
dec
inc
rcll
outsl
push
cmc
fistpl
mov
or
dec
test
inc
jmp
subl
xchg
stc
and
push
cmp
xor
xchg
inc
call
xor
std
ss
psubw
ds
cmp
mov
add
scas
dec
sarl
scas
push
ljmp
and
inc
aaa
call
push
pop
and
das
in
xor
mov
shlb
fs
fsubrl
jo
push
cmpsb
xchg
pop
cld
xor
ret
sbb
pushf
imul
add
das
mov
pop
sub
shrl
mov
mov
xor
mov
mov
mov
ja
push
push
sbb
mov
mov
orl
mov
sbb
repnz
jge
outsb
cli
sbb
sbb
cmpsb
xorl
dec
faddl
xor
mov
mov
pop
cmp
orb
push
ret
mov
pushf
fimuls
mov
pop
xor
fdivrs
mov
lock
mov
xor
stc
cmpsb
lea
push
cmp
mov
mov
imul
push
pushf
push
push
ret
test
nop
out
int3
mov
push
pop
out
mov
bound
and
xchg
add
dec
xchg
enter
push
iret
pop
jmp
jne
pop
mov
dec
aas
jl
in
xchg
or
std
stos
pop
sub
adc
mov
test
adc
inc
shlb
sbb
inc
fucomp
inc
ret
xor
mov
jmp
adc
incl
das
add
add
or
sub
push
jecxz
inc
jl
inc
rorl
xor
loope
insl
xor
xchg
xor
add
xor
adc
dec
adc
and
sbb
fs
nop
cmp
jmp
pop
inc
mov
or
adc
loope
ds
sub
mov
outsb
insb
push
pusha
xor
jle
pop
xor
je
dec
iret
or
jns
xor
jmp
inc
lcall
jl
pop
add
pop
dec
inc
rcrb
fisttps
outsl
fildll
adc
or
je
inc
cmp
jbe
repnz
mov
push
xlat
test
nop
test
or
add
lods
movsb
jmp
mov
in
inc
sbb
into
rcll
mov
pop
lahf
std
scas
or
lret
xor
jbe
adc
xchg
lock
or
pop
mov
add
lods
hlt
sbb
add
sbb
cwtl
cs
daa
xchg
dec
add
lret
mov
mov
inc
jo
pop
stc
xchg
ja
sti
loopne
shlb
push
push
jnp
pop
rol
pop
adc
cmpsb
add
popf
sbb
or
or
or
pop
mov
add
lret
test
or
or
orb
adc
bnd
lea
jl
lea
cmp
jb
je
bound
add
add
cmp
mov
aam
push
pop
ss
shll
popa
mov
and
pop
push
add
icebp
sub
and
cmp
movsl
push
je
cwtl
xchg
pop
dec
sub
sahf
sub
xlat
cmp
lock
mov
fdivs
jbe
stc
xchg
test
dec
xlat
mov
outsb
or
rclb
pushl
xchg
test
or
roll
push
dec
mov
fisubrl
lods
fimuls
test
inc
mov
dec
jp
aam
pushf
loop
jmp
xor
add
fwait
sbb
inc
leave
lods
packuswb
scas
sbb
mov
or
addl
ja
je
and
dec
mov
inc
and
cmc
std
cmp
mov
add
dec
enter
mov
adc
or
sarb
mov
push
or
dec
pop
add
out
add
xchg
push
pushf
dec
and
pushl
push
xchg
or
inc
mov
outsl
adc
mov
or
in
mull
mov
cwtl
sub
ret
dec
mov
scas
mov
xor
push
testb
or
add
lahf
mov
cmp
testb
aaa
jbe
out
sbb
ja
pop
or
outsl
jnp
cmp
inc
pop
add
push
push
cmp
data16
loopne
dec
push
push
jmp
test
push
or
je
test
dec
iretw
mov
out
jne
mov
push
test
push
or
or
sub
or
lock
es
add
aas
pop
push
enter
sbb
xchg
or
leave
and
jns
test
js
or
jp
cmp
pop
pop
cmp
subb
cmp
jae
pusha
or
test
sub
sbb
roll
jne
push
js
jle
mov
loopne
fnstenv
fadd
inc
or
mov
cmp
cwtl
push
cmpsb
add
orl
out
or
lahf
or
cmp
pop
mov
in
dec
mov
or
popa
clc
lea
cmp
cltd
pop
inc
jb
pop
fimull
push
fs
xchg
jbe
inc
mov
push
hlt
imul
sbb
shlb
shl
jo
movzwl
mov
push
adc
add
add
xchg
cmpl
test
or
daa
mov
mov
sarl
xlat
imul
add
mov
add
add
jecxz
add
xor
into
out
xchg
pushf
jp
insb
fcmovnu
adc
mov
lcall
arpl
sti
ret
rolb
jne
cmp
jbe
or
fidivrs
jne
add
mov
cld
inc
cmp
xchg
add
add
scas
ds
data16
push
xchg
sbb
inc
cmc
jmp
pusha
adc
jno
addl
out
push
pushf
ja
mov
jp
inc
adc
in
push
out
xchg
ja
cwtl
sbb
add
sub
sub
xchg
mov
jne
pop
orl
cmpsl
rclb
out
lea
push
mov
or
inc
pop
fisttpll
jmp
enter
movsl
push
rorb
js
cmp
movsl
cmpsl
add
xor
xor
andb
push
mov
jo
or
add
mov
inc
dec
loopne
push
lds
and
clc
cmp
call
adc
xlat
adc
cmp
sbb
daa
rcrl
lds
stos
push
gs
ds
adc
outsb
add
outsb
inc
sbb
pop
xor
mov
fisttpl
cmpl
xor
or
jle
push
jp
ret
out
pushf
out
mov
and
rcl
xor
popa
mov
or
xlat
pop
lahf
icebp
sub
or
pop
push
andb
ljmp
rolb
add
jmp
pusha
mov
mov
pusha
adc
xchg
push
dec
iret
decl
insb
ja
cmp
jae
cmp
xchg
dec
mov
sbb
cmp
cld
cmp
sbb
inc
xor
or
orl
or
cmp
mov
or
pop
movsb
jb
push
jae
repz
xchg
xchg
insb
add
and
and
pop
imul
inc
cld
test
cmp
daa
orl
adc
out
add
lret
std
xlat
ret
cs
incl
or
sbb
popf
lea
add
dec
jno
outsb
push
jmp
mov
std
fs
sub
int
rorb
outsl
mov
push
js
test
add
popf
ret
xor
mov
jbe
fimuls
insl
cmpsb
movsl
pop
xchg
xor
ds
incl
cmp
sahf
negb
sbb
cmp
push
sarl
lea
mov
dec
and
fnstcw
adc
cli
xor
arpl
sub
test
sahf
pop
lock
test
pop
addl
or
call
jmp
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
loopne
cmp
sbb
xchg
repnz
xlat
ja
loopne
xor
jp
and
loopne
dec
lods
pop
jl
das
sbb
push
and
mov
mov
and
adc
xor
pop
and
xchg
xchg
inc
sub
aam
sbbb
add
pop
xchg
and
pop
push
jno
push
leave
rcll
fsin
pop
loope
jecxz
faddl
pusha
insl
je
mov
jbe
sbb
jp
or
xor
lods
mov
or
xchg
cmp
aam
out
pop
inc
inc
fcomps
add
cmpsl
jne
fsubs
popf
sbb
fsub
add
dec
mov
jle
fisubs
mov
ret
xchg
mov
add
add
je
dec
loope
mov
xor
adc
sti
mov
xor
fdivs
subl
gs
push
cld
and
test
pushl
mov
std
dec
add
call
mov
popa
andl
popf
mov
sarb
ret
jns
mov
mov
xchg
push
mulb
arpl
cmp
jb
mov
jb
mov
mov
sub
or
ret
cmpb
test
insl
addr16
dec
mov
fistpl
cmp
add
mov
cmp
imulb
cmp
scas
jl
mov
add
pop
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
test
out
jmp
mov
pushl
popa
pop
push
jb
and
mov
daa
pop
lock
movl
add
fdivrl
sbb
pop
push
sub
jle
dec
or
dec
mov
or
lea
pop
out
hlt
fwait
pop
jae
aam
xor
xor
xor
jmp
push
inc
sub
sub
and
dec
rcll
push
xchg
xchg
mov
bound
lsl
mov
pusha
pusha
sbb
xchg
incb
cltd
rcrb
cmpsb
pop
push
sbb
shrl
and
mov
inc
lea
lods
xor
pushl
add
adc
cmp
jmp
imulb
loopne
cmc
inc
sub
inc
mov
pop
das
dec
and
cmpsl
and
sub
inc
push
lods
inc
bound
fs
and
jne
lret
ljmp
add
in
jle
sub
sub
popf
in
xchg
stos
or
or
adc
fisttps
cmp
clc
or
pushf
into
je
fsub
add
push
nop
add
add
xor
push
pop
int3
add
cmc
ret
xchg
and
pop
lahf
mov
and
lret
xor
jo
xor
loop
pop
mov
cld
sbb
mov
dec
or
or
inc
out
inc
cmpl
in
add
adc
pop
movsl
sbb
sbb
xorl
mov
inc
and
data16
or
lock
xor
sbb
xchg
sub
fcoms
sub
je
xchg
jne
in
dec
add
pusha
jmp
les
orl
or
clc
std
incl
add
xchg
rcrb
test
add
inc
xchg
cmpsl
ljmp
daa
aam
cs
pop
adc
sbb
ja
or
jno
jo
push
push
push
mov
daa
bnd
mov
insb
adc
mov
js
dec
ret
push
xor
lea
push
sub
sbb
les
adc
add
popa
stos
pushf
dec
fistps
inc
ja
test
ret
cmp
or
xchg
lods
fdiv
loopne
dec
sti
xor
leave
pusha
clc
pop
sarb
mov
cmp
lcall
add
out
push
cmp
cmp
arpl
test
lea
ficoml
mov
and
movb
or
push
xchg
iret
ja
hlt
fdivs
sub
xchg
out
push
cmpsl
xor
sti
xor
push
mov
repnz
jp
testb
mulb
testb
mov
cmc
dec
in
sti
sbb
cmpsb
or
popa
pop
mov
jo
cmp
sub
dec
mov
dec
shll
adc
mov
add
jecxz
push
negb
adc
testb
cmp
adc
mov
lret
adc
fistpl
inc
mov
xlat
push
fnstcw
jnp
xrelease
push
aad
xor
fmull
or
mov
push
inc
xor
adc
cltd
push
mov
sbb
inc
jbe
add
cld
or
je
into
shlb
cmp
cmp
or
aam
add
lahf
mov
inc
mov
jb
inc
mov
lock
mov
adc
inc
add
pop
mov
cmp
cmp
jmp
pop
and
push
bound
inc
or
add
stos
adc
es
clc
loop
push
lcall
test
sbb
adc
xchg
addb
ret
cmc
imul
addl
push
stc
xor
jb
arpl
arpl
addr16
xchg
cmp
push
imul
sbb
shlb
mov
jno
test
inc
sbb
mov
adc
stos
xor
and
jbe
and
dec
adc
cld
repz
add
enter
mov
add
inc
add
mov
fcoml
sub
adc
or
loopne
mov
push
jo
and
cmp
or
jno
mov
sbb
addl
push
push
xor
sarb
cmp
add
shrb
rolb
movsb
sbb
or
inc
jp
aad
sub
xchg
pusha
mov
or
adc
ss
in
pop
add
or
repnz
xor
dec
sbb
xorb
fisttpll
loope
or
dec
xchg
frstor
movb
jl
dec
sub
xor
fs
clc
add
mov
pop
repnz
adc
mov
aas
roll
or
mov
add
mov
add
pop
mov
adc
andl
incb
push
xchg
or
cmpl
mov
jne
pushl
imul
push
fsts
jno
cltd
pusha
jo
lret
or
dec
adcl
mov
js
push
cmp
inc
mulb
in
pop
es
sbb
ficoml
add
or
shlb
and
dec
cmp
pusha
and
mov
or
fimull
data16
mov
xchg
aaa
ljmp
inc
push
mov
sub
inc
mov
adc
add
les
sbb
inc
in
ja
rcl
dec
sar
shlb
loope
mov
orl
and
adc
or
or
push
aam
jbe
jo
sbb
push
fs
mov
mov
or
ja
outsl
pop
inc
test
and
push
pop
push
lret
mov
pop
sbb
sub
mov
repz
sub
mov
mov
cmp
xchg
mov
mov
sarb
pusha
scas
test
rol
push
dec
repz
popf
fildl
sub
or
add
sub
xchg
mov
mov
mov
inc
je
stos
cmp
mov
adc
adc
fldt
imul
sarb
ret
mov
pop
push
push
int3
adc
mov
lock
mov
inc
inc
add
in
test
xor
adc
adc
or
loopne
mov
or
pusha
hlt
test
cmc
in
std
pop
leave
adcl
push
sub
adc
out
movsb
push
clc
or
aad
inc
test
ficoml
or
inc
push
mov
push
or
ret
ret
clc
arpl
or
dec
or
out
scas
or
push
add
or
push
or
lahf
inc
xchg
sarb
leave
push
and
mov
add
dec
daa
jmp
seto
push
jmp
sub
aas
adc
push
fisttpll
fs
pop
lea
pusha
mov
xor
out
sub
xchg
adc
cs
mov
jmp
mov
sbb
adc
jo
loop
xchg
scas
dec
shlb
and
pop
fwait
sbb
leave
sbb
mov
push
loope
push
push
out
jle
das
hlt
das
aam
cmp
insb
cmp
sub
das
xchg
adc
movzwl
test
je
test
dec
jp
or
push
or
jo
test
cmpsb
loopne
push
pop
push
mov
out
mov
xchg
daa
push
cmpl
imul
dec
sub
pop
loope
pop
das
jmp
cmp
add
mov
jbe
adc
mov
fdivrl
fdivrl
sub
push
loopne
jecxz
fistl
sub
dec
rorb
fwait
add
cs
pop
dec
jo
add
pop
jl
pop
xor
push
jecxz
clc
shrb
mov
push
dec
and
test
adc
and
sbb
adc
push
push
cld
dec
or
add
movsl
mov
inc
sub
push
ret
insb
popa
repz
rcrb
call
adc
pop
mov
movsl
hlt
mov
mov
or
stos
and
in
je
or
add
jle
mov
mov
adc
or
cmp
pop
sbb
push
sbb
jno
push
mov
add
inc
ret
dec
jno
cmp
int
or
stos
cmpl
nop
add
int3
movl
pop
cli
cld
lea
push
leave
inc
stos
enter
pop
sbb
mov
push
test
daa
xchg
pop
dec
les
sub
sbb
test
push
mov
loop
jl
clc
push
cld
sbb
repz
je
push
adc
cld
fsubs
pop
xchg
mov
nop
pop
mov
add
sti
dec
nop
stos
or
clc
xor
inc
outsb
in
lods
add
lahf
mov
jne
orb
mov
xchg
stos
ret
mov
cs
or
rcr
sbb
and
mov
popa
push
lret
enter
mov
adc
sub
push
xorb
and
jecxz
lds
daa
jge
adc
imul
mov
sarl
lock
cmp
adc
mov
das
bound
frstor
inc
subl
call
sbb
gs
testl
xchg
outsl
push
mov
aam
mov
testb
sub
int
ljmp
inc
test
xchg
mov
mov
sub
push
movl
push
dec
add
inc
or
mov
jp
orb
mov
js
lret
xchg
xorb
loop
pop
call
repnz
lret
sbb
es
or
push
push
cmp
into
dec
dec
push
cmp
pop
push
outsb
and
mov
rcl
mov
push
adc
pop
mov
sub
ret
out
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
push
mov
lock
scas
push
cmp
ret
push
mov
je
adc
sbb
das
outsl
push
xor
inc
pop
mov
inc
add
sub
dec
jl
mov
leave
add
sub
jne
sahf
daa
hlt
inc
pop
aas
lea
pop
ss
cmpsb
clc
sub
ffree
sti
add
pop
adc
or
push
shrb
push
ret
imul
inc
add
jmp
nop
rclb
rol
mov
rorl
fdivl
dec
in
sbb
roll
mov
inc
sub
dec
mov
inc
ret
mov
dec
setb
pop
and
dec
mov
jbe
lahf
add
xchg
or
sbb
pusha
loop
adc
bound
mov
loop
or
loopne
repz
sbb
or
add
lcall
lret
sbb
mov
push
push
call
rorl
mov
js
call
and
pop
inc
test
aam
sbbb
fwait
dec
push
inc
push
xor
adc
mov
jb
dec
fmuls
sahf
mov
js
enter
dec
push
or
dec
sub
and
push
shrl
cmp
daa
bound
xchg
je
jno
inc
in
mov
or
jne
pop
test
aaa
sbb
inc
adc
scas
jne
and
push
push
mov
enter
sub
push
mov
inc
adc
lds
add
or
add
pop
sti
scas
shrd
push
pop
bswap
inc
addr16
clc
inc
mov
mov
les
ffreep
test
add
mov
rcll
or
add
in
cmp
mov
or
insl
xor
jne
push
push
leave
js
jne
mul
jb
adc
or
outsb
pop
sbb
jne
out
xchg
test
pop
ja
dec
mov
les
mov
jl
movsb
loop
pop
add
fists
lahf
std
rcl
test
call
push
sub
push
lret
fcoms
ds
sbb
xlat
loopne
or
insl
repnz
cld
pushf
testb
add
in
dec
add
mov
mov
xchg
rorb
push
cwtl
pop
mov
clc
ja
aas
adc
jle
inc
mov
jge
push
inc
mov
dec
and
xor
cmp
sub
push
mov
adc
scas
cmp
pop
push
jge
mov
mov
mov
pop
lea
push
or
and
outsl
jp
or
mov
out
fs
sbb
sbb
addr16
mov
dec
scas
lcall
inc
inc
push
testb
fbstp
adc
dec
lock
jg
sbb
xchg
pop
push
or
sbb
mov
push
out
rcll
cmp
push
sbb
push
icebp
dec
lock
cmp
sbb
leave
push
xchg
nop
call
dec
cmp
stc
pop
test
or
push
ret
dec
aam
push
rorb
sub
orb
fdivs
cmp
ret
mov
sbb
rolb
push
jne
dec
scas
mov
cmpsb
cli
or
pop
sub
sbb
jne
int
movsl
jns
dec
push
jns
sahf
sub
or
sbb
sub
movsl
dec
insb
jne
data16
mov
adc
test
inc
xor
fiadds
push
pop
push
dec
and
fs
pop
or
cmp
je
add
orl
loopne
dec
jp
fadds
adc
rcl
adc
fsubs
imul
data16
cmp
inc
fists
jnp
push
dec
addr16
cmp
cmp
fsubl
mov
cmp
jl
mov
mov
loope
divl
fmulp
les
jae
int3
ds
lret
pop
sbb
in
adc
cmp
push
imul
cmp
fcomps
outsb
rcr
rcrl
push
test
pop
push
push
or
jmp
inc
inc
sbb
icebp
pop
aaa
jecxz
stc
mov
loopne
adc
or
lea
dec
loope
les
inc
loopne
pop
jge
inc
frstor
jge
and
add
jmp
ds
pushf
or
mov
inc
fsubl
sbb
add
sub
test
addb
xchg
aaa
pop
add
icebp
sub
js
inc
add
outsb
add
les
or
shlb
xchg
lock
incb
mov
clc
inc
adc
push
push
push
inc
jbe
and
mov
xor
add
mov
adc
xor
sub
add
pusha
shll
jo
repz
orl
and
test
cmp
or
mov
enter
dec
inc
in
sub
js
imul
mov
scas
sub
dec
xor
addr16
adc
push
or
int
adc
and
nop
in
jle
movb
sbb
dec
mov
or
das
push
nop
sbbl
add
je
insb
add
nop
add
xchg
add
nop
pusha
push
cmp
xchg
cmpsb
loop
cmp
push
test
xor
xchg
add
add
sbb
dec
lock
cs
pop
sbb
inc
adc
push
mov
sub
and
test
mov
mov
pop
mov
scas
xor
pop
adc
xor
push
les
add
mov
pop
adc
cmc
lea
add
push
das
or
and
jne
sbb
jb
mov
int
rcll
sbb
mov
push
ret
pushl
pushf
mov
push
push
sbb
popf
loop
sbb
rcrb
mov
js
xor
test
loope
shlb
push
mov
inc
inc
bound
pop
pusha
inc
mov
sub
shll
sbb
and
test
and
xchg
add
add
lock
pusha
and
loop
add
je
sub
sub
jne
das
xorl
jne
roll
je
loopne
jne
orl
cmp
loop
xchg
test
xor
aas
jb
cli
xchg
mov
leave
or
call
mov
adc
jge
mov
stc
frstor
sar
lds
add
cmp
mov
sub
popf
mov
out
cltd
imul
mov
dec
sub
add
xchg
stc
push
jne
mov
sub
inc
icebp
shrl
xchg
and
sbb
cmp
je
xor
stc
mov
xorl
fwait
jle
or
imul
and
add
xlat
lods
xor
add
or
into
js
pop
test
sub
or
invd
inc
pop
cmp
rcrl
dec
add
sbb
into
cmc
add
dec
mov
xor
leave
or
rorl
out
popf
lock
aas
push
or
sbbl
inc
mov
lahf
rcll
mov
mov
pop
mov
sub
pop
ret
push
xchg
mov
andb
dec
adc
adc
or
inc
pop
push
addb
inc
loope
jge
and
dec
adc
xlat
insl
adc
test
es
sub
mov
add
test
je
and
and
repnz
push
push
dec
push
mov
bound
je
andl
push
adc
lea
add
bound
sti
in
push
fdivl
and
mov
adc
jno
orb
inc
test
faddl
call
lock
lea
ja
and
or
pushf
add
je
mov
push
or
sub
fs
push
sbb
pusha
pusha
insb
insb
faddl
scas
les
rcrb
out
movsb
xor
stc
inc
cmp
mov
testl
je
cmp
je
inc
cmpsl
test
loop
lds
arpl
push
ret
cmp
lea
mov
hlt
sti
push
sub
cmp
pop
fwait
inc
and
cmp
dec
jne
sub
or
sub
add
sub
xor
push
outsb
dec
adc
pop
push
mov
jnp
lock
jb
cld
lock
int3
inc
mov
cmpsl
dec
dec
jmp
icebp
loope
jmp
mov
pop
xor
sbb
sbb
lods
lcall
jo
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
mov
push
lock
ret
sub
mov
sbb
cmc
jecxz
rorl
push
flds
pop
adcl
push
push
test
sbb
push
scas
test
xor
fs
out
add
into
roll
push
and
jle
test
shll
jp
and
jne
adcb
cmp
xchg
xchg
out
sbb
jns
cmp
jno
xchg
mov
jo
popa
ret
popf
or
shl
nop
mov
inc
dec
leave
call
dec
add
je
push
jge
dec
scas
mov
lock
cmp
fstpt
stos
or
sub
pushf
cwtl
fidivrs
or
sub
sub
cmp
jge
cmpb
fwait
sbb
add
xor
add
js
push
push
fisttpl
and
dec
push
lea
rcrb
push
out
add
adc
mov
dec
push
or
mov
dec
pop
lock
shrb
int
pushfw
pop
fcoms
push
notl
pop
aam
popa
add
in
add
ret
out
xchg
inc
mov
push
rcll
or
sub
and
push
push
ret
imul
xor
sbb
aaa
cmp
das
shlb
cmp
rcr
ret
pop
add
mov
fs
dec
jle
dec
dec
pop
cmp
jne
popa
fs
inc
cmp
mov
inc
ret
jge
int3
mov
ds
push
lock
add
push
mov
xor
cli
shl
adc
or
add
adcb
push
popa
and
pop
cmp
lods
out
fimull
xor
repz
jno
and
adc
dec
sub
cmpsl
mov
shl
jo
mov
adc
xor
shrb
and
adc
mov
adc
cmc
rcr
test
and
xor
cli
sub
popa
dec
enter
lcall
cltd
or
js
push
push
push
push
ja
pop
mov
cmp
adc
fiadds
mov
mov
adc
js
cmpl
iret
inc
gs
push
fmuls
lods
mov
cwtl
fcmovbe
cmp
f2xm1
imul
inc
je
push
or
xor
jb
push
cmpsb
hlt
xor
pop
pop
ret
inc
into
lcall
xor
xor
dec
mov
xor
mov
movsl
add
jl
mov
sbb
sbb
and
cmp
xor
push
adc
out
xchg
jmp
daa
ret
xchg
rcl
mov
lock
lods
jmp
xchg
adc
or
mov
scas
ret
xor
xchg
mov
sbb
loop
xchg
mov
dec
sbb
ficoms
push
shl
fdivp
sub
mov
or
test
fimull
int
pop
and
daa
mov
push
imul
divl
jne
mov
aas
and
test
sub
adc
insl
lea
add
inc
push
js
xchg
add
mov
aam
mov
sbb
sub
inc
sbb
push
mov
inc
jnp
pop
mov
and
js
outsb
outsl
inc
aas
adc
fsubl
jb
inc
add
and
shl
jbe
sbb
add
insb
subl
mov
mov
lock
cmp
test
movb
push
fwait
jp
mov
push
adc
stc
fcomps
in
xchg
jo
or
cmp
jge
push
cld
push
ljmp
and
lock
je
pop
flds
mov
push
lods
sbb
mov
lea
popf
push
and
cmp
xor
or
xor
nop
xchg
pop
pop
push
inc
jge
cmp
push
add
mov
pop
add
and
sub
pop
dec
xor
call
addb
add
sahf
push
mov
pop
or
inc
jo
and
jge
or
sub
cmpsl
mov
leave
xor
and
mov
or
or
push
jbe
jp
mov
push
mov
sarl
dec
int3
add
add
xchg
push
sbb
dec
sbb
das
inc
mov
jbe
push
push
nop
ss
sub
add
dec
and
ss
sti
test
push
inc
xor
push
xor
addb
adc
lock
jg
add
fwait
cmp
lock
cmp
xchg
lock
ss
add
add
sbb
js
jg
icebp
dec
loope
mov
push
sub
icebp
push
inc
xor
jle
loopne
lret
iret
leave
adc
std
jmp
and
add
ljmp
dec
ss
incb
testb
pop
dec
pop
test
mov
cmp
push
inc
in
mov
dec
add
and
je
xor
sbb
mov
aas
xchg
sbb
pushl
jmp
push
pop
mov
pop
add
ret
rol
bound
mov
mov
loope
dec
push
inc
push
roll
add
sarl
sbb
pop
wbinvd
dec
cwtl
mov
test
and
pop
mov
inc
negb
jmp
mov
jl
orl
jle
add
xchg
add
pop
rcll
pushf
pop
and
cltd
ds
filds
dec
cmpsb
popf
mov
jecxz
inc
mov
repnz
jo
push
dec
jo
sbb
adc
fmuls
xor
push
ret
push
fcoml
dec
aaa
adcb
jo
dec
push
inc
inc
or
loop
clc
pop
adc
pop
adc
inc
fmuls
adc
cmp
cmpsb
shlb
xor
rclb
ds
xor
jl
push
push
or
and
test
xor
je
push
adc
push
cmp
int3
sub
xor
pop
push
sbb
jmp
and
push
cs
sbb
pop
mov
push
mov
mov
xor
inc
add
rcrl
push
mov
ret
cwtl
pop
lcall
hlt
movsb
add
pop
pop
sub
xor
xor
cs
xor
pop
lock
cwtl
sub
lds
sub
pop
mov
outsl
movsl
cmp
cmp
mov
mov
xor
add
mov
testb
je
sbb
mov
aaa
into
or
lock
mov
dec
jl
loope
xor
push
ret
sbb
adc
cmp
roll
and
or
rorb
inc
mov
arpl
adc
xchg
lcall
mov
in
cmp
test
sbb
roll
or
lret
add
cli
jo
out
ret
add
inc
push
dec
mov
pop
popa
add
movsl
mov
movsl
sarl
aaa
add
pop
leave
adc
cmp
jle
ja
jno
movsl
push
push
js
xorb
arpl
aaa
and
or
or
xchg
push
xlat
inc
decb
add
push
test
push
out
dec
inc
mov
in
push
rol
jmp
lcall
mov
xchg
add
xlat
pop
mov
mov
data16
loopne
push
xchg
or
mov
mov
call
mov
cld
pop
adc
xchg
neg
adc
loopne
out
jmp
xor
daa
out
nop
or
mov
inc
pushf
jmp
insl
jl
ja
mov
dec
fwait
or
mov
imul
test
imul
cltd
idivl
push
addl
sahf
ja
mov
lea
push
loop
xchg
int3
jmp
sbb
mov
js
cmp
add
or
push
pusha
mov
add
inc
mov
pop
pop
sub
push
out
xor
and
dec
inc
adc
sub
xor
and
xor
mov
rorb
sbb
add
inc
adc
xchg
fdivs
inc
dec
mov
xchg
cmp
js
pop
arpl
add
push
jge
faddp
jns
mov
mov
add
sbb
mov
nop
sub
adc
mov
insb
sub
push
push
jns
adc
test
sub
cwtl
push
add
outsb
sub
push
pop
or
push
push
cli
cltd
sub
push
sbb
rcll
mov
xor
mov
push
pop
push
or
jae
mov
testb
lods
mov
fnstcw
clc
cwtl
add
sbbl
xor
lahf
ss
data16
negl
sub
mov
pop
dec
mov
sbb
add
adc
in
adc
sbb
adc
fs
cmovle
jge
adc
sbb
dec
sti
into
add
push
cmp
jmp
jno
mov
xor
sub
add
fldcw
cwtl
or
not
push
xor
jo
add
mov
push
and
add
jnp
xor
aas
aad
pop
jmp
mov
mov
jae
mov
int3
and
aas
orb
movb
sub
pop
cli
test
pop
adc
inc
insb
shr
xor
stc
push
ljmp
adc
adc
pusha
sbb
add
hlt
dec
sbb
or
pusha
insb
std
adc
mov
cmp
mov
std
dec
mov
psllq
iret
arpl
or
imul
jge
and
jae
movsl
push
pop
in
stos
in
or
hlt
sbb
xchg
or
or
sbb
sub
repz
push
push
pop
adc
add
cld
push
cwtl
sub
jns
inc
sbbl
mov
int
dec
jae
fsubp
add
xor
adc
push
push
pop
adc
js
or
js
and
and
xor
aam
std
arpl
push
not
bound
sub
or
test
ds
adc
fldl
fs
mov
and
insb
insb
test
lds
popw
cmpb
xor
ficompl
add
call
out
movb
mov
push
adc
mov
mov
ljmp
dec
jne
dec
mov
jno
sbbb
rcrb
aad
lret
xor
xor
lock
push
jne
cmp
dec
adc
push
pop
mov
sbb
rclb
pop
mov
sub
xchg
pop
adc
xor
addr16
mov
pop
sbb
push
ret
jbe
daa
pop
fsts
xchg
push
mov
adc
cmp
or
pusha
bound
and
sbb
sub
fisttpl
xor
cs
aas
adc
inc
dec
hlt
daa
add
nop
jg
and
inc
das
push
cmp
loopne
fwait
or
jmp
mov
out
ljmp
xor
pusha
pop
mov
jp
clc
rorl
inc
adc
mov
and
sub
sti
xor
cmp
loop
cmovge
or
dec
popf
inc
js
dec
jp
dec
pop
inc
or
lea
mov
stos
xor
jp
je
jl
adc
adc
push
daa
andl
mov
or
sbb
pop
rorl
fwait
pop
and
xlat
xorl
lds
incl
rorb
push
adc
xor
xchg
fs
xor
mov
les
scas
jbe
jnp
mov
pop
test
fs
adc
sub
repnz
pop
testl
and
dec
cmp
ja
call
dec
mov
or
add
out
add
adc
fisttpll
cmpsb
or
sbb
loop
jb
add
and
jno
push
dec
dec
sub
es
jmp
hlt
lret
shlb
jbe
push
pushf
jne
adc
mov
jl
ret
cmc
je
add
adc
jge
lret
ret
shl
dec
jnp
aas
jnp
mov
adc
or
ret
add
and
ret
dec
jae
loope
rcll
adc
mov
add
add
loope
dec
js
imul
adc
pop
iret
jo
jo
pusha
pusha
jp
push
cwtl
push
and
daa
fs
movl
pop
pop
push
push
je
js
sbb
out
test
in
dec
inc
xor
pop
loopne
mov
loopne
mov
push
xor
call
int
sbb
mov
ljmp
rolb
xchg
andl
pop
loopne
mov
mov
lret
lods
call
sub
mov
jbe
and
sub
mov
sbbl
loope
cmp
imul
cmp
mov
push
cwtl
add
mov
imul
add
rorb
adc
pop
pop
xchg
adc
inc
mov
mov
subb
push
js
jecxz
mov
cmpsb
or
das
in
daa
xchg
les
add
rcrl
sbb
xor
xor
mov
cmc
adc
inc
mov
outsb
push
or
lea
push
cmpl
push
cmp
imul
test
pop
cld
push
mov
je
pop
xor
inc
shl
fwait
adc
add
cmpsl
lock
xchg
adc
es
adc
aaa
test
pop
adc
and
cmc
xor
outsb
adc
je
cmpsb
jne
ret
jae
outsb
decl
ja
je
or
je
add
sub
sub
jno
mov
adc
jge
sub
jb
xchg
push
or
test
cmpl
movsb
xchg
add
or
xor
sbb
sahf
pop
jnp
add
popa
jbe
push
jmp
cmp
mov
pusha
push
adc
adc
push
xor
inc
dec
sbb
inc
adc
fdivs
rorb
mov
xor
mov
dec
ret
adcl
lock
xchg
call
cmp
xor
lea
test
aam
inc
daa
inc
lods
stos
inc
mov
loop
rclb
enter
add
sbb
or
repz
std
dec
cmp
jmp
ret
andl
mov
ljmp
add
add
xchg
cmpsb
push
cld
mov
or
sbb
lock
mov
je
sub
mov
sub
or
jbe
hlt
add
loop
lods
and
sbb
in
push
fs
fwait
mov
mov
or
ret
push
adc
dec
add
sub
sbb
jbe
pop
aas
in
and
push
insl
inc
fidivrs
or
inc
adc
and
imull
adc
and
ljmp
cmp
mov
mov
and
pop
fidivl
push
icebp
dec
test
and
in
outsb
inc
cmp
dec
inc
push
popa
pop
and
loope
cld
adc
pop
fsubl
test
loopne
pusha
push
int
je
push
rorl
adc
clc
and
rorb
sub
or
xor
loop
insl
mov
push
add
xchg
inc
pop
mov
adc
add
push
aam
cmp
jb
lods
sqrtps
jge
push
packsswb
jmp
dec
mov
pop
push
xchg
dec
add
shl
fcompl
sub
shrl
sbb
mov
dec
push
dec
aas
lods
adc
cltd
inc
lea
pop
pop
gs
push
xchg
xchg
inc
add
add
add
add
orb
and
pop
pop
jb
mov
and
push
and
cmp
shll
fdivrl
gs
mov
jge
mov
les
data16
cmp
js
or
mov
xchg
sbb
fcoml
jo
cmp
fsubrp
push
xor
rcrb
int
push
ret
sbb
fmuls
and
inc
nop
andl
iret
pop
bound
add
pushw
ds
xchg
jno
sub
loope
mov
call
jno
sahf
aas
jl
sub
sbbb
je
cltd
xor
sbb
in
mov
sub
add
loope
roll
sbb
mov
push
fidivs
or
jmp
cltd
negb
popl
movsb
inc
jb
std
decl
jns
sbb
or
adc
push
cmp
adc
or
or
xchg
test
sub
mov
mov
addr16
pop
jl
je
es
jbe
sub
pop
adc
lock
fdivrs
mov
das
pushf
mov
dec
jo
nop
jne
mov
sub
jns
test
xchg
out
add
or
pop
push
fcoml
fnstsw
fsubl
pop
hlt
or
popf
icebp
test
inc
stos
sbb
pop
mov
imul
or
pop
sub
inc
and
nop
outsl
dec
pop
je
outsb
or
push
daa
xor
cmpsb
rorl
add
dec
sub
cmp
mov
or
or
dec
repz
rclb
or
mov
rol
push
lcall
mov
pop
cmove
and
sub
jl
sahf
pop
push
sbb
bound
add
andl
or
lret
enter
inc
sbb
pop
orl
pushf
push
pop
lcall
pushf
fstl
push
add
or
adc
mov
fsts
ret
xor
in
cmpsb
push
mov
in
mov
nop
mov
push
fmull
push
inc
leave
ss
int
je
rcl
add
pop
test
xor
cmp
adc
sub
or
icebp
add
jge
push
sub
sahf
xor
push
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
or
xor
xor
pusha
sub
test
and
cs
lret
fadds
cltd
inc
add
pop
in
push
add
loop
nop
cmp
sbb
lock
mov
mov
mov
arpl
mov
pcmpeqb
bound
jb
or
pop
adc
jl
push
decb
cmp
inc
and
arpl
and
add
jle
sub
test
xchg
adc
aad
mov
stos
enter
inc
jecxz
cmpsl
or
int3
mov
inc
xor
movsl
or
push
mov
cmp
jne
cmpsl
inc
or
lock
movb
icebp
popf
adc
cld
adc
inc
cs
sub
inc
adc
jp
push
mov
cmp
or
pop
jmp
add
dec
bound
or
jnp
mov
adcl
xchg
add
xchg
cmp
test
sbb
pop
dec
pop
les
pop
jne
xor
adc
or
movsl
enter
jge
ss
pop
mov
imul
sbb
js
repnz
test
inc
cmp
push
xchg
inc
fstpt
adc
jge
lock
mov
arpl
sti
or
sbb
push
sbb
xchg
mov
sbb
cmpl
imul
cwtl
or
push
addb
outsb
and
jp
sub
adc
sbbl
lret
movsl
pop
fwait
xor
sub
add
jnp
cmc
add
aad
xor
loop
sub
adc
push
inc
and
pusha
push
js
sti
popa
and
divb
jg
ret
inc
sub
into
jle
sti
push
arpl
sub
jb
mov
mov
lea
pusha
aad
mov
sbb
lcall
sbb
adc
nop
adc
xchg
fiadds
call
add
push
sub
jo
in
xlat
adc
xor
sbb
roll
bound
das
imul
nop
nop
cmp
cwtl
sbb
jns
out
adc
or
sbb
add
mov
add
adc
arpl
in
or
sysexit
addr16
push
lods
ret
cmpsl
int3
shrb
popa
pop
sub
cmpsl
repnz
test
mov
loope
mov
cmp
lods
repz
lock
cltd
sahf
inc
add
test
cmp
mov
pop
cmp
and
xchg
enter
or
or
push
movsl
repz
sub
xchg
pop
add
add
test
lret
dec
or
rorl
stc
or
pop
add
repnz
subb
cmp
andb
jg
je
cmp
je
rclb
push
mov
insb
xchg
test
in
dec
mov
mov
dec
adc
push
or
mov
and
aad
inc
adc
roll
and
dec
push
repnz
jmp
add
cmp
and
sbb
cs
mov
pop
push
cmpsl
push
or
fsubs
cld
push
mov
arpl
jecxz
hlt
sbb
leave
ljmp
mov
push
outsb
jmp
cmp
pop
adc
adc
outsl
and
cmpb
outsl
test
loope
push
data16
and
mov
dec
loop
jp
inc
add
jmp
in
cmpsb
xorl
inc
pop
jg
adc
push
cld
out
xchg
into
insl
test
popf
std
pop
jl
push
in
shl
in
enter
stos
cltd
push
dec
orl
clc
add
andl
sbb
push
lret
add
stos
pop
jmp
sbb
xorb
test
lret
inc
scas
outsl
cmp
bnd
add
jne
and
adc
flds
sbb
jbe
push
outsb
cld
and
jmp
lret
jae
and
sub
jae
or
pop
sub
lret
add
push
frndint
sub
cmc
push
cwtl
outsb
xchg
xchg
cmpsl
sarb
push
mov
enter
push
adc
ja
jb
cld
xor
sub
and
cmp
cs
and
xor
cmp
iret
inc
push
inc
cmp
inc
mov
sub
lret
sarl
cmp
inc
push
and
push
dec
xchg
pop
ja
add
inc
gs
or
imul
sahf
out
dec
jmp
outsl
test
dec
mov
jmp
insl
test
sub
int
xor
push
out
lcall
int
addr16
sahf
xchg
pop
pop
inc
jge
add
inc
mov
call
dec
sub
jne
adc
push
push
imul
adc
test
push
and
hlt
add
add
mov
js
rcll
sbb
pop
adc
and
adc
dec
test
push
fs
sub
arpl
add
push
js
dec
inc
pop
jbe
sbb
pusha
test
fsubl
nop
rclb
movsl
inc
lods
pusha
push
movsl
jb
inc
ret
add
insl
or
insl
lret
dec
push
orb
jo
int3
outsb
mov
sbb
clc
scas
inc
and
sbb
cmp
push
dec
fdivrl
jg
or
sub
inc
jecxz
pop
icebp
xchg
dec
je
cltd
fdivl
inc
in
xor
mov
add
xchg
sub
cs
jmp
dec
pop
in
test
orl
add
sbb
push
out
call
cmp
lods
xchg
cmpsb
mov
lahf
loopne
outsb
js
add
mov
xchg
loopne
loop
add
jb
lret
cmp
jne
cmc
add
loope
sahf
rolb
imul
xchg
into
popf
std
lcall
das
adc
add
sub
ret
dec
in
adc
and
roll
jl
jne
pusha
push
push
int3
sbb
jne
pushf
sbb
popa
add
inc
push
or
pushf
xlat
aaa
add
popa
lret
loopne
sub
pop
andb
shlb
add
mov
subb
in
push
adcb
cmp
add
add
imul
push
or
cmp
push
gs
add
xchg
push
shl
in
inc
fmuls
add
in
xchg
loopne
scas
mov
or
je
repnz
mov
inc
leave
xchg
cld
jno
push
push
mov
jge
cmp
js
add
cmpsb
jbe
push
lahf
pusha
int
and
xor
jge
cltd
inc
pushf
mov
scas
push
or
notl
stc
add
pop
ret
pop
cwtl
pop
cmp
jne
sbb
int
outsb
push
add
je
or
xchg
pop
cmp
pop
ljmp
mov
lea
insb
addl
push
lahf
cld
xlat
push
dec
adc
stos
stc
or
push
lods
jle
inc
xor
stos
sbbb
orl
jge
add
shlb
pop
push
mov
xchg
xchg
add
call
mov
or
jmp
jo
or
pop
cmp
xor
fsubr
in
or
sub
loop
mov
mov
dec
push
mov
jo
ja
xchg
adc
sbb
sbb
cwtl
sub
fucomip
inc
push
jmp
push
fisubrl
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
sub
cmpsl
and
mov
sub
cmp
das
jo
jmp
arpl
popa
add
addr16
xchg
dec
icebp
call
xchg
fmull
sbb
xor
and
je
dec
push
push
cmpsl
cmc
int
ja
xorb
adc
arpl
or
rcrl
sarb
push
sub
sbb
subl
jns
pop
clc
or
stos
add
push
xor
andb
das
icebp
cmp
mov
push
jb
or
in
mov
cld
lcall
out
shll
push
leave
push
xor
pusha
sbb
add
cmpb
imul
imul
jns
add
sbb
rorb
lock
push
add
adc
sarl
sub
leave
cld
sbb
xor
push
sbb
nop
and
rclb
test
test
stc
jne
dec
stc
add
pusha
xchg
fstps
sub
adc
jnp
lea
add
mov
cmp
push
loope
mov
cmp
push
pop
pop
jmp
or
xchg
push
adc
outsb
push
or
pop
iret
test
xchg
or
loopne
ret
xor
push
lea
xchg
xor
add
xor
push
sub
xchg
and
cmp
fistpl
test
fs
enter
sub
int3
or
repz
adcl
test
out
inc
cltd
xchg
std
xchg
add
lret
ja
push
pop
push
add
inc
enter
rorl
adcl
cli
adc
jg
mov
add
insb
fdivs
andl
inc
cmpb
mov
ja
inc
mov
cmpsb
daa
scas
les
add
add
jnp
rcrb
ret
pop
jne
stos
call
aam
ja
dec
adc
ret
mov
mov
aaa
loopne
xor
pop
and
mov
xor
and
cmc
addr16
repnz
scas
or
jle
jbe
lods
pushl
clc
or
icebp
or
cwtl
mov
sbb
inc
loopne
pop
nop
add
jb
cld
push
push
filds
push
push
pusha
adc
add
int3
ss
mov
mov
in
test
sbb
push
int3
cmp
addl
mov
mov
shll
ficoms
and
dec
leave
mov
dec
adc
sarb
push
sbb
adc
add
push
jo
cmp
out
lods
shl
jae
movsb
enter
adc
cmp
adc
pusha
xor
into
cmp
dec
or
lret
or
in
sti
hlt
inc
lods
sbb
hlt
mov
mov
adc
or
push
dec
stos
rcrb
pop
inc
add
pusha
pop
cld
int3
add
jae
stos
jns
add
lock
and
andl
mov
jg
lahf
add
ficompl
mov
in
ds
rolb
lcall
or
mov
stc
pop
adc
push
mov
or
sarb
stc
pushf
adc
sub
mov
add
je
adc
fmull
andb
adc
leave
insb
and
lods
rclb
pushw
cs
adc
loope
xchg
imul
call
push
decl
xchg
les
push
sbb
ret
test
aaa
mov
pop
push
jae
sbb
nop
or
test
or
push
sbb
sub
mov
jo
adc
dec
dec
dec
loope
jecxz
push
pop
pushl
mov
or
inc
shrl
inc
lret
fimull
adc
icebp
push
hlt
mov
pop
mov
pusha
pushf
ljmp
notl
in
insb
hlt
je
jb
je
mov
mov
sub
movsb
pusha
dec
mov
adc
ret
sbb
xchg
sbb
inc
or
push
pushf
push
push
pop
dec
mov
hlt
lock
dec
ret
nop
jo
cs
adc
xchg
push
dec
pop
loop
jl
push
clc
shr
call
or
clc
xlat
repz
fsubr
insb
cld
sub
cld
dec
loope
pop
repnz
pop
add
lock
ja
and
jbe
sub
orl
int3
lea
ret
sub
imul
ljmp
outsl
lock
push
cmp
xor
sub
punpckhwd
jno
mov
leave
nop
sbb
cmpsl
orb
cmp
loopne
or
test
sbb
dec
push
push
sbb
add
push
push
rolb
push
xchg
lahf
sbb
add
inc
push
inc
xor
sti
jl
test
jg
cmp
add
mov
ret
mov
sbb
loop
adc
pop
mov
pusha
cmp
nop
inc
incb
and
out
sub
addr16
dec
add
jmp
or
movsb
cmp
mov
test
out
lock
and
movsl
xor
in
xor
push
idivb
xchg
cmp
sbb
addr16
jns
push
fsubs
xor
xor
jnp
adc
sub
mov
call
or
sarl
pusha
dec
shrl
dec
aam
fwait
aam
shlb
add
sbb
mov
xchg
push
scas
jmp
movl
movl
movsl
mov
in
pop
lret
mov
incl
dec
cmp
leave
add
decl
sub
mov
add
or
or
jp
clc
lcall
lea
push
xor
in
mov
push
mov
and
lea
rep
push
sub
add
mov
pop
scas
movl
mov
mov
cmpsl
jmp
mov
pop
jne
mov
or
jmp
add
and
inc
mov
mov
push
or
inc
movsl
jae
add
fs
push
and
push
or
repnz
hlt
mov
dec
cmp
and
cmc
cmpl
mov
pop
sub
inc
xlat
and
dec
mov
xchg
cmc
sub
cmp
push
mov
pop
rclb
and
mov
and
add
or
dec
and
mov
dec
sub
and
sub
push
xor
adc
cmp
xor
cmp
mov
out
mov
jecxz
dec
hlt
cmp
test
dec
ficompl
les
jg
sti
rep
loop
xor
int
push
jl
sub
or
sbb
cmp
loope
or
jae
inc
shlb
add
inc
fwait
xor
arpl
mov
outsb
jnp
and
jne
push
push
int3
mov
lea
push
push
mov
out
int3
mov
push
push
mov
or
loopne
adc
nop
inc
cld
mov
sub
dec
rorb
inc
test
pop
adc
or
fadd
aas
mov
mov
imulb
cmp
fsubs
adc
shlb
pushf
sbb
fildl
fcomps
outsb
sub
adc
mov
xchg
test
repnz
addb
mov
dec
repnz
scas
push
iret
test
and
push
int3
jl
or
jnp
inc
loopne
mov
push
push
push
xchg
cmp
xorl
je
aas
and
inc
push
mov
loopne
xor
jb
movsb
shll
push
push
push
insb
add
lock
movaps
test
inc
mov
push
sbb
cmp
push
push
enter
jl
push
ret
imul
cmp
push
notl
movsb
stos
mov
xchg
dec
xchg
push
aam
pop
pop
lea
in
sbb
mov
adc
bound
cmpsl
pop
arpl
mov
add
test
inc
insl
lods
push
loop
rolb
imul
sarb
dec
jne
mov
lock
es
add
pop
wrmsr
push
inc
sbb
andb
mov
adc
adc
dec
imul
outsb
push
ss
mov
sbb
add
jg
movups
ret
xchg
clc
or
int
lea
add
mov
jns
add
inc
adc
add
adc
push
or
call
push
cmp
and
fs
jnp
pusha
cmp
mov
pop
inc
mov
testb
add
cmpsb
nop
mov
and
popf
es
or
push
inc
dec
dec
loope
stos
movsb
dec
add
test
cmp
mov
adc
pop
inc
cmp
xorb
add
xor
test
add
xor
subb
adc
mov
aas
cli
sub
sar
jo
faddp
lds
or
add
rcrb
mov
xchg
js
dec
lahf
mov
and
dec
mov
add
jecxz
xchg
sbb
or
es
xlat
and
and
in
popf
sub
or
push
lcall
outsl
mov
ret
sahf
ja
xchg
push
lret
shrb
addr16
mov
lds
add
filds
cmp
push
in
roll
cmp
mov
popf
lea
je
pusha
inc
and
mov
shr
mov
shlb
lods
ss
cmp
sarl
mov
std
pusha
js
int3
jge
notb
je
mov
std
cmpsl
sub
xor
push
jo
insl
pop
jl
jno
sbb
push
cmp
ret
mov
jle
push
loopne
add
jbe
call
or
fwait
insl
jne
pushf
sbb
and
icebp
dec
or
add
pop
add
inc
pop
enter
mov
adc
adc
jle
stos
push
orb
mov
sbb
dec
add
jne
sub
outsb
int
and
incb
push
jp
cmp
mov
push
mov
rcr
mov
ror
push
iret
jmp
mov
hlt
jae
imul
add
pop
pushf
inc
sbbb
ret
stos
sub
push
or
icebp
sub
sbb
sub
in
push
loop
inc
inc
push
inc
and
push
loop
sbb
test
in
cmp
or
roll
adc
orl
push
xor
push
mov
mov
pop
cmp
rol
jae
cmp
add
push
sbb
sbb
sbb
mov
sub
jbe
adc
je
sbb
daa
or
cmp
nop
out
nop
and
addb
push
cmp
nop
or
and
fsubl
xchg
arpl
adc
cmp
pop
fwait
dec
and
adc
cltd
nop
and
dec
mov
mov
mov
and
je
mov
mov
jae
jmp
xor
add
orb
dec
mov
icebp
ja
xchg
or
or
sub
sahf
icebp
xor
js
push
sub
inc
jnp
adc
add
mov
mov
imul
or
dec
push
cmp
lods
pop
mov
ret
or
and
sub
adc
sbb
pop
inc
sub
addr16
inc
adcb
jo
out
xor
xchg
mov
mov
dec
dec
and
mov
test
and
nop
sub
call
xchg
sub
outsl
sbb
cmpsb
and
jg
fs
cmpsb
fs
es
cmpsb
fs
cmpsb
sub
inc
cmpsb
fs
cwtl
sub
dec
cmpsb
les
jo
ja
xchg
dec
ja,pn
aas
gs
mov
cmp
xor
push
inc
pop
loope
xor
xchg
dec
inc
test
and
sti
frstor
or
xor
mov
lock
mov
mov
fnstsw
push
aam
lea
leave
add
push
cld
or
int
ret
pusha
adc
add
and
pop
daa
adc
aad
sbb
adc
sbb
sbb
inc
inc
daa
addr16
test
test
adc
repnz
mov
jp
sbb
scas
adc
lea
push
push
add
fiadds
sub
mov
fadds
pop
xorl
xchg
or
and
add
xchg
fldl
xchg
fdiv
push
mov
loop
mov
pop
mov
xor
xor
repz
inc
mov
sar
dec
repz
fimuls
enter
sarl
loopne
cwtl
adc
in
aam
and
cwtl
test
loopne
push
repnz
mov
jo
adc
ret
mov
jns
xchg
hlt
unpcklps
hlt
mov
add
cmpl
mov
popa
pop
loopne
loope
les
inc
out
mov
inc
lahf
mov
mov
test
jae
cmpl
sub
adcb
or
sub
adc
mov
pop
lock
and
test
adc
mov
jle
sbb
mov
jne
push
or
ret
mov
loop
or
and
imul
insl
push
jl
mov
iret
lcall
and
sbb
test
add
xor
repnz
testl
jg
cmp
jle
mov
or
ud2
inc
adc
add
cmp
sbbl
and
addb
insb
outsb
or
movsb
js
jmp
cmp
leave
ja
popf
in
jne
sbb
mov
jmp
cltd
mov
jb
pop
lods
jmp
dec
xchg
jmp
xor
cmp
lds
cmp
jmp
pop
or
cmp
cmp
int3
pushl
leave
test
mov
dec
lea
jl
ret
lods
inc
sbb
or
gs
xchg
ret
jge
popa
or
jo
mov
in
or
or
scas
inc
cmp
addr16
aam
add
sti
cmp
and
mov
mov
sub
xchg
ret
pop
cmp
and
shl
push
fwait
sub
push
jo
sbb
pop
add
dec
sbb
xchg
lahf
and
aam
push
or
ret
adcb
mov
fucomi
inc
adc
or
jnp
pop
or
push
xor
lcall
insl
fcoms
mov
fcomps
aam
popf
cmp
jmp
pop
and
call
lock
addr16
add
pusha
stos
ss
push
mov
cmp
icebp
je
mov
fisubl
jae
sbb
and
inc
cwtl
jmp
popf
jge
and
sub
jmp
je
sub
pop
jnp
adc
jp
dec
inc
jns
pop
ret
and
adc
pop
inc
dec
and
inc
mov
jmp
inc
fcoms
fdivr
aam
add
pop
adc
fcomps
gs
mov
rcr
out
jl
mov
push
sub
push
test
push
add
push
mov
or
inc
jl
jb
or
sti
fwait
sub
push
inc
pop
clc
jl
mov
adc
adc
ficomps
or
test
jbe
jmp
pop
movsb
lock
lahf
pop
je
lds
xor
push
mov
mov
ljmp
pop
mov
or
and
add
mov
scas
or
mov
out
cmp
ja
sub
lock
add
ret
hlt
sub
outsb
test
pop
jge
mov
adcb
dec
movsb
or
push
sub
shrb
clc
fs
popf
data16
jno
cmp
rorb
in
mov
pop
xchg
fwait
pop
add
loope
fsubrs
lahf
add
mov
push
arpl
icebp
mov
loop
call
scas
sub
pop
dec
fsubl
clc
mov
mov
pop
or
dec
and
divl
push
adcb
jb
pop
shlb
jns
and
push
je
push
es
inc
inc
push
fistl
sbb
rclb
insl
mov
xchg
push
das
daa
clc
mov
sub
daa
lahf
xchg
in
fcoms
jle
lock
icebp
stos
dec
popf
mov
push
xor
out
insl
or
and
bound
rdpmc
dec
cli
or
cmp
or
stc
pop
pushl
loope
mov
cmpsb
add
inc
daa
mov
inc
push
mov
push
ljmp
or
push
enter
pop
nop
push
int
loopne
cmpsl
inc
pop
shll
sub
xchg
push
in
jge
mov
xor
cmp
ss
dec
ss
movsl
aam
dec
lcall
rclb
imul
adc
imul
loopne
dec
and
lea
pushf
jne
movsb
pop
shll
into
sbb
pop
add
cmp
sub
lods
mov
or
pop
fwait
sub
shlb
jo
dec
adc
fmull
insb
icebp
mov
and
rorb
push
pop
ret
mov
or
sub
insl
leave
aam
sbb
xacquire
or
pusha
push
jl
or
cmc
fs
out
loope
xor
dec
add
and
ret
loopne
pushf
lea
dec
test
cs
aas
sti
movsl
loopne
jae
pop
enter
mov
lock
or
mov
movsl
mov
jbe
adc
push
sub
adc
xor
into
push
outsl
loopne
sbb
xor
mov
add
aas
mull
xor
xor
inc
je
lods
or
push
das
hlt
xchg
inc
xor
and
xchg
jp
mov
adc
rcrl
arpl
in
or
mov
mov
setl
push
xor
adc
or
jne
and
fs
adc
das
sub
or
lahf
rol
mov
push
test
dec
int3
pop
push
test
pop
xchg
xor
lock
push
inc
inc
push
repz
inc
pop
test
mov
dec
inc
cmpsl
add
add
cmp
lock
push
adc
pop
dec
sbb
shlb
gs
mov
enter
outsb
shll
push
fdivs
push
adc
adc
mov
or
dec
lock
cmp
xor
or
xor
pop
add
scas
inc
ljmp
sbb
mov
popa
push
add
mov
mov
inc
ljmp
xchg
or
rclb
push
push
adc
push
sbb
inc
add
mov
daa
in
rcl
scas
mov
xchg
xor
mov
add
add
cmpb
orb
xchg
hlt
shll
xor
mov
dec
mov
push
mov
daa
inc
nop
adcl
dec
dec
mov
addl
xchg
test
add
ret
mov
popa
lds
mov
push
adc
fxch
jne
test
cmp
jle
xor
dec
adc
lock
xchg
xor
mov
sub
mov
xchg
adc
loope
call
add
pop
lea
cmp
and
sbb
or
movsl
rcrb
dec
in
pop
or
call
mov
and
pop
lods
test
adc
lods
mov
pop
cmp
test
push
mov
pop
xor
sbb
jns
cmp
into
sub
pop
enter
add
lods
inc
hlt
inc
or
stos
inc
jmp
in
push
or
add
iret
xor
in
enter
or
push
mov
add
int3
sbbb
pop
inc
push
inc
imul
or
mov
outsl
push
add
ds
in
pop
dec
clc
je
adc
je
sub
push
movsb
jo
or
jmp
push
and
jl
test
jl
and
mov
nop
xchg
imul
dec
mov
mov
insb
adcl
sub
jp
pop
inc
and
add
add
das
fdivrl
pushf
rcl
mov
dec
mov
sbb
out
sub
mov
fimuls
loopne
shlb
inc
xchg
loop
fidivrs
mov
inc
push
arpl
lods
jmp
dec
xlat
and
fidivl
lea
add
push
xchg
inc
pop
cmp
add
aaa
inc
addr16
fs
mov
push
js
or
add
out
lea
insb
and
mov
fs
mov
push
addb
test
pop
scas
outsl
push
pop
lcall
cltd
xor
jge
mov
dec
push
in
test
mov
jmp
adc
add
xor
cmp
sub
mov
xorb
mov
jne
testl
mov
hlt
dec
or
negl
pop
cs
add
rcrl
push
push
push
push
jbe
and
outsl
shl
cmp
jl
jmp
jnp
cmp
add
mov
imul
sbb
push
call
cmp
pop
xorl
les
and
ljmp
addr16
mov
adc
cmpsb
outsl
xlat
sbb
pop
push
push
repz
adc
lea
mov
lods
lcall
je
rcrl
sub
push
xchg
ret
push
movsl
xchg
loopne
add
or
mov
enter
test
in
push
shl
andl
xlat
sbb
filds
lods
pusha
sbb
xlat
add
sbb
fwait
movsb
or
jo
mov
xor
ret
pushf
pop
dec
or
ds
jbe
mov
jo
xor
inc
mov
fbstp
es
push
ljmp
dec
xchg
mov
adc
or
mov
mov
add
lds
call
jo
jne
push
sub
add
dec
and
sar
dec
sbb
mov
dec
mov
lcall
fildl
push
jl
mov
dec
xchg
stos
dec
xchg
ret
or
pop
mov
sub
xor
sub
mov
inc
xchg
lock
lods
adc
sub
jge
adc
xor
sub
inc
repnz
mov
add
push
and
and
sub
mov
sbb
mov
jnp
sub
nop
mov
mov
xchg
insb
dec
jno
mov
repnz
xchg
sub
insb
inc
rcr
or
inc
push
mov
ljmp
adc
add
mov
sahf
ja
dec
mov
inc
fdivl
add
icebp
mov
ret
icebp
sbb
jae
or
lret
mov
push
mov
sbb
popa
and
add
pop
dec
push
sbb
dec
loop
out
cs
sbb
decb
adc
inc
fs
push
sbb
jl
aaa
enter
jmp
outsb
lock
cmp
sbb
enter
jno
ret
sbb
jno
dec
or
insb
es
dec
cltd
sbb
xor
leave
pop
in
fnstcw
fs
hlt
lret
add
js,pt
mov
and
pusha
or
mov
push
cmpsl
daa
add
enter
inc
jns
lock
mov
test
lods
cmp
je
fs
fnstsw
mov
adc
je
imul
add
jmp
adc
mov
inc
ja
stos
ja
push
fcmovnu
mov
jg
outsb
adc
mov
insl
jbe
or
inc
sub
jge
iret
sbb
jle
xchg
lock
cmp
out
push
outsb
and
pop
bound
jne
jge
fsubs
sbb
fistpl
inc
outsl
push
lock
notb
sbb
je
push
cmpsb
xchg
dec
imul
push
sbb
sbb
mov
dec
fs
inc
jmp
inc
jo
scas
mov
add
addr16
and
jne
je
dec
add
loop
add
daa
mov
clc
nop
and
sbb
out
shrl
mov
jne
add
or
iret
daa
js
lret
jmp
pop
cmpsb
mov
sbb
dec
ret
mov
adc
or
rcll
mov
test
or
cmp
arpl
test
fs
rcll
dec
lcall
clc
loope
cmp
pop
jbe
push
add
sbb
pop
adc
push
mov
es
mov
mov
mov
fsubp
jmp
and
add
fdivl
dec
lret
cmc
je
loop
aam
xchg
pop
mov
sub
push
or
jne
pop
sbb
out
push
shlb
movsb
push
rolb
push
and
daa
movsb
jecxz
sub
negb
test
adc
in
xor
sbb
fcomp
sbb
push
adc
xchg
dec
call
or
mov
sbb
les
xchg
popa
aaa
ja
andl
enter
or
or
popa
test
adc
pop
adcl
ljmp
adc
mov
imul
js
lea
int
add
movlps
lcall
xorb
je
das
mov
sub
aad
xorb
inc
sub
nop
cltd
pop
js
adcl
dec
cwtl
sub
pop
cmp
test
mov
jle
inc
inc
lcall
and
pusha
pop
outsl
mov
mov
inc
add
fldcw
adc
jl
fsts
cwtl
adc
add
fsubs
sub
cmp
inc
rclb
jl
dec
insl
test
aaa
mov
mov
test
inc
dec
xchg
and
inc
mov
dec
fstl
clc
sub
and
cmp
xchg
outsb
adc
fwait
mov
mov
mov
xlat
subb
xchg
adc
xchg
add
and
cmpsl
fldt
jl
mov
test
push
mov
mov
adc
mov
gs
mov
clc
lds
iret
cmp
and
inc
sbb
push
cmp
push
mov
inc
mov
adc
jae
or
inc
movsb
decl
or
daa
dec
push
xor
xor
lods
mov
inc
gs
enter
cmp
xor
clc
shrb
pop
sbb
or
and
arpl
xchg
mov
inc
push
stos
push
add
jo
mov
xlat
jl
inc
sbb
mov
lds
cmpsb
sbb
cmp
cmp
xchg
add
mov
mov
xor
push
pusha
push
pop
mov
adc
pop
imul
lret
mov
in
fdivrs
fmuls
and
jge
jge
add
call
pop
push
addb
push
add
jbe
add
inc
cmp
clc
add
sub
lret
dec
jle
add
cld
in
out
mov
xor
loop
xchg
xor
shr
inc
or
add
sbb
mov
clc
adc
not
dec
cmp
out
popa
testb
call
add
aaa
jmp
add
pop
fwait
orl
and
jns
dec
loop
inc
dec
inc
pusha
jg
adc
mov
mov
andl
dec
xor
aaa
lds
mov
outsl
jo
or
jb
xor
dec
jo
jo
mov
jno
inc
or
mov
mov
push
adc
arpl
inc
out
dec
mov
cmp
add
in
test
and
mov
imul
gs
push
and
lret
loope
and
into
cmpsl
mov
fwait
cmp
cmp
dec
mov
sub
adc
stos
aas
jl
rcll
aam
lock
daa
mov
inc
push
or
inc
popl
stos
loope
mov
into
or
scas
fstps
into
aaa
fisubs
int3
lods
pop
sub
andl
jo
testl
cmp
mov
sbb
lods
mov
enter
cwtl
arpl
inc
sub
mov
or
cmc
jg
ljmp
sbb
mov
jmp
mov
andb
into
add
add
call
jmp
jg
test
mov
adc
xchg
adc
dec
test
insb
fcomi
push
push
inc
cwtl
ljmp
push
shlb
dec
cmp
mov
je
sbb
movsl
arpl
adc
shlb
les
push
lock
dec
mov
xor
push
xor
mov
cmp
sub
stos
call
xor
adc
cs
mov
add
pop
push
cli
dec
aam
test
loopne
add
sti
cmp
push
push
add
enter
fnsave
call
or
insl
in
adcl
jne
xchg
inc
push
nop
iret
xor
adc
push
insl
inc
stos
pop
or
shll
jne
std
cmp
addl
ret
push
std
dec
mov
mov
pusha
je
cmpsb
mov
or
fmul
outsb
and
jle
xor
orb
push
xor
adc
xor
shrb
inc
rolb
sbbl
xor
adc
sub
ss
adc
cmp
fcompl
mov
mov
pop
adc
fcoms
xchg
jnp
or
scas
in
inc
js
xlat
or
push
xchg
test
mov
mov
push
test
leave
mov
mov
rol
cs
call
rcrb
les
push
adc
popa
xchg
or
xor
imul
inc
roll
cmpsb
es
das
aam
fiaddl
test
adc
icebp
ret
icebp
xor
scas
xor
jecxz
insb
roll
pusha
imul
les
loope
faddl
mov
pop
mov
mov
sbb
pop
push
jbe
and
push
xor
clc
sub
sbb
divl
push
push
pop
inc
rep
test
jns
or
lcall
es
sbb
repnz
test
push
push
pusha
lret
add
lock
and
outsl
xor
je
push
mov
sub
lds
jl
push
cli
jmp
addr16
jno
push
ret
inc
sub
fsts
call
cmp
orb
fs
rcl
adc
jle
xor
push
add
adc
dec
push
into
idivb
sub
dec
loopne
arpl
ret
je,pt
es
pop
inc
jge
mov
pop
mov
push
add
push
mov
xchg
xor
inc
dec
repz
push
ret
jp
hlt
push
loop
jne
inc
lock
push
sbb
scas
ret
lret
push
add
lds
icebp
movsl
push
and
rcrl
and
test
imul
and
cli
scas
mov
pop
dec
push
xchg
add
sub
lods
dec
rcrl
add
and
mov
mov
pop
add
ficoml
mov
sbb
push
jns
cmpsl
lods
pushf
mov
mov
cmpsl
jns
int3
mov
in
adc
or
sub
mov
fdivl
add
mov
sub
lock
jmp
push
jl
test
clc
test
add
xlat
ret
pop
push
arpl
cmpsl
sbb
bound
pop
cmc
pushl
orb
xor
mov
mov
mov
stos
xor
mov
mov
fdivs
jg
scas
mov
inc
sahf
cwtl
addl
into
xchg
dec
test
jl
es
add
cs
push
in
inc
add
fisubl
es
sub
nop
add
adc
push
add
add
pop
push
dec
outsb
nop
fsubr
xchg
add
popa
push
and
mov
fistpl
inc
cmp
push
addr16
push
mov
es
clc
mov
lds
inc
sbb
lea
pop
nop
mov
std
xchg
and
cmp
and
ret
jo
fcom
scas
ret
pop
cmp
sbb
sub
lret
lcall
lods
sub
in
sub
inc
pushf
je
push
out
cwtl
xor
cmp
imul
or
bound
adc
dec
push
fyl2xp1
adc
movsb
sbbb
dec
adc
jecxz
les
icebp
mov
add
push
or
and
das
shl
subb
mov
mov
jl
mov
sub
aam
insb
pop
fwait
lcall
pop
push
into
mov
adc
ds
out
movsl
cmp
aam
mov
cs
mov
pusha
stos
pusha
cmpsl
mov
insb
inc
and
xchg
mov
ret
cmp
les
test
and
jo
pmaxsw
test
sub
push
loope
je
incl
js
push
mov
pop
push
cmp
mov
imul
icebp
gs
mov
add
mov
inc
pushf
arpl
outsl
xlat
and
inc
lea
add
outsl
mov
mov
jbe
lcall
mov
jp
xchg
loop
adc
adc
lahf
adc
xchg
cmp
lret
and
loop
mov
mov
jno
mov
sbb
sbb
subb
sub
sarb
gs
jge
dec
inc
mov
push
imul
xchg
xor
xchg
add
inc
mov
pop
out
mov
push
scas
out
adc
inc
push
pop
out
pop
and
adc
sub
sub
and
mov
jmp
pop
xorl
jg
or
rclb
push
push
es
cltd
pop
mov
cmpb
dec
popa
adc
sbb
dec
and
jns
aaa
sub
push
add
add
popa
and
mov
add
push
jecxz
push
std
mov
add
test
push
inc
dec
dec
and
add
mull
mov
sub
test
xchg
or
mov
call
lcall
call
jo
dec
je
inc
sbb
repz
scas
mov
add
int3
mov
sbb
pop
sbb
pop
mov
jmp
mov
jo
in
jmp
rcll
and
call
cmp
es
mov
icebp
sbb
aas
or
movsl
push
push
movsl
add
sti
push
xchg
faddl
fstl
mov
loopne
mov
mov
fsubr
pop
faddp
andl
xorb
dec
or
shrl
mov
ja,pn
test
pusha
lods
mov
inc
loopne
pusha
mov
scas
sub
adc
data16
dec
or
shl
dec
or
adc
std
inc
rolb
fdivrs
inc
adc
subb
rcll
nop
mov
pushf
inc
add
ss
mov
jg
jnp
push
clc
sub
sub
and
or
or
or
xchg
push
ds
cmp
dec
push
xor
std
pop
cltd
test
sbb
flds
iret
pop
aam
mov
dec
cmp
mov
mov
inc
in
dec
mov
int3
dec
sbb
pop
sbb
mov
lock
push
sub
sub
mov
jne
pop
in
sub
mov
add
and
scas
xor
cld
push
jmp
mov
cmp
jge
mov
push
sub
mov
mov
in
adc
push
push
xchg
ret
repnz
xorb
add
jb
adc
lcall
test
repnz
inc
cwtl
lods
cmp
jg
cmp
add
cmp
ficoms
or
pop
mov
in
add
shrl
into
inc
add
xchg
addr16
cmpsb
sbb
xchg
or
jns
mov
es
push
mov
dec
rorb
mov
imul
pop
pop
imul
mov
mov
push
fwait
mov
scas
mov
pop
and
repz
mov
stc
movsb
and
shrb
ja
les
push
mov
nop
hlt
or
ret
incl
dec
cli
jnp
fdivs
hlt
mulb
dec
or
jne
sbb
xchg
xor
pushf
jecxz
inc
mov
mov
nop
les
test
lahf
clc
and
aas
add
and
mov
lahf
mov
js
mov
xchg
dec
fwait
mov
dec
add
sub
or
adc
add
cmc
sbb
pop
sbb
xor
in
in
mov
adc
pop
mov
add
cmpb
test
jmp
add
dec
dec
test
repnz
loop
test
rclb
pop
out
pop
pop
loopne
sub
and
xor
mov
push
mov
push
push
mov
push
mov
cmovo
scas
fnstenv
popa
and
insl
adc
fmull
popa
nop
fidivrl
adc
and
and
fsubl
push
push
and
ret
lock
ds
roll
mov
dec
sbbl
dec
push
or
faddl
push
das
popa
xor
ret
aad
or
movsb
lret
add
andb
popa
and
arpl
imul
sbb
push
add
adc
or
nop
pop
out
mov
nop
mov
xchg
push
lret
icebp
mov
bound
xchg
pusha
lea
xchg
clc
xor
lock
sbbb
dec
ss
negl
mov
lock
clc
and
bound
repz
add
mov
sub
cwtl
adc
push
mov
lret
adc
mov
in
xor
add
ret
jp
adc
jne
mov
pop
cs
out
enter
mov
loop
inc
push
nop
dec
adc
arpl
je
cmp
sbb
xor
pushf
loop
leave
addb
sbb
fs
mov
mov
jbe
test
je
pushf
or
leave
mov
xchg
xchg
cmp
leave
addb
lods
mov
in
inc
inc
dec
push
mov
dec
or
popf
jp
lods
jmp
cltd
movsl
inc
sti
gs
mov
in
sbb
add
add
sub
add
push
inc
out
cmp
inc
sub
push
lea
jge
ret
outsl
cmpsb
pop
cmpsl
movsl
sti
add
sub
outsl
inc
xchg
ficompl
pop
xchg
mov
pop
sbb
pop
mov
push
mov
adc
call
sub
scas
aad
pop
cmp
or
lods
in
xor
push
loopne
dec
pop
dec
dec
sub
add
ljmp
rcll
fstl
jb
in
cmp
sub
jne
or
xchg
push
cmpb
push
lods
dec
or
inc
mov
pop
and
aad
lods
xor
loopne
loopne
test
jbe
jp
sub
call
testl
jne
and
mov
sbbb
mov
xchg
sarl
mov
test
inc
add
sub
push
xor
push
hlt
fnsave
subb
xor
jle
test
test
and
push
jmp
jecxz
not
cmp
push
or
xchg
rcr
xlat
jmp
xor
mov
outsb
pop
adc
or
and
adc
sub
push
dec
test
je
loopne
mov
inc
adc
scas
pop
adc
enter
push
cmp
mov
cmp
lock
ljmp
cmp
call
mov
adc
cmp
sub
dec
lock
lcall
mov
xchg
cmp
inc
push
inc
ds
popf
bound
xchg
xor
add
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsl
dec
pop
pop
xor
aas
mov
cmp
push
mov
cs
lock
inc
push
loopne
xchg
aas
nop
push
mov
clc
jne
and
lock
nop
or
clc
lret
fimull
ret
sbb
pop
rolb
adc
addl
push
add
xchg
setl
and
or
mov
jnp
add
inc
inc
mov
movsl
inc
pop
outsl
js
cmc
es
leave
lock
shr
mov
add
jmp
pop
js
xchg
call
ffreep
ljmp
loopne
sbb
jnp
cmp
adcb
in
inc
pop
pusha
inc
fistps
out
aam
mov
add
les
cmp
push
stc
es
clc
popa
test
sbb
mov
mov
popa
inc
in
in
xor
push
mov
ja
fmuls
xchg
jne
int3
jo
loopne
mov
add
aas
dec
imul
push
test
pop
icebp
insl
or
mov
pushf
inc
mov
ror
ret
and
enter
add
lods
xor
mov
test
push
inc
or
add
std
and
jb
aaa
enter
push
stos
mov
rolb
jmp
or
mov
clc
test
clc
jl
add
inc
ret
dec
sbb
rorl
rcrb
shll
add
dec
leave
loopne
push
sbb
sbb
cmp
add
add
add
mov
and
or
testl
add
sbb
daa
pushf
xor
or
ljmp
mov
pop
rcl
aaa
add
loope
add
and
or
mov
repnz
aaa
lahf
cmp
shrb
stos
stc
inc
xor
stos
push
mov
pop
push
daa
cmpsl
dec
sbb
push
sub
stc
cmc
bound
sub
mov
ficoms
dec
ret
loop
enter
xor
leave
or
jnp
pusha
gs
idivl
push
mov
cmp
dec
lahf
rcrl
add
mov
adc
addr16
mov
inc
and
clc
stos
push
push
add
push
hlt
jge
inc
adcl
push
aas
sti
cltd
inc
or
or
xor
push
call
xor
sbb
jns
xabort
in
cwtl
popa
out
adc
or
leave
faddl
lcall
call
addl
loopne
xchg
add
movsl
pop
jmp
test
fdivs
daa
mov
add
and
rcrl
pop
ret
xchg
sbb
xchg
inc
jbe
test
in
push
out
mov
fld
sbb
mov
roll
cmp
int3
sub
sbb
mov
sahf
cmp
or
clc
imul
cmp
dec
loop
out
enter
mulb
and
push
decl
es
psubsw
loope
das
enter
out
or
ljmp
rcll
pop
loopne
or
push
decb
inc
sub
jnp
pushf
rorl
push
sbb
leave
or
sbbl
add
push
xor
and
push
cwtl
dec
loopne
jg
sub
lods
into
lds
push
add
or
xlat
sub
cmp
pop
add
cltd
pop
mov
aas
add
sub
push
int
test
imul
inc
pop
sub
inc
test
and
dec
or
fs
sbb
inc
pop
dec
shrb
pop
inc
jmp
push
cmp
inc
inc
cmp
cpuid
outsb
and
jl
add
lea
xchg
push
xor
inc
nop
mov
mov
or
xor
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
sbb
mov
dec
xor
loopne
sbb
push
add
pop
cmp
xor
lret
inc
pop
add
outsb
sub
in
iret
repz
dec
jl
push
inc
inc
dec
loopne
leave
les
push
mov
push
push
or
push
cmp
sbb
pop
sbb
jbe
and
and
push
xchg
add
jl
inc
push
pop
lea
popf
add
push
clc
mov
roll
gs
cmp
sub
or
in
adcl
insb
pop
or
xor
inc
add
jb
pop
add
jnp
xchg
cmc
and
pop
add
sbb
and
aas
xorb
lahf
cld
jmp
push
xor
mov
or
adc
mov
pop
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
push
and
cmp
sub
and
and
add
sbb
into
imul
dec
je
das
movb
pop
movb
or
xchg
xlat
ret
pop
mov
inc
loope
jne
imul
xchg
movsb
xchg
add
pop
out
push
pop
and
pop
sar
add
or
incl
push
inc
pop
adc
sbb
and
push
and
test
cs
push
lea
sbb
mov
cmp
nop
push
push
inc
mov
xchg
mov
xor
pop
fisubl
popa
dec
mov
jbe
aam
ret
inc
mov
cmpxchg
or
dec
fcomps
test
sbb
inc
sbb
sbb
ds
add
jo
sbb
ret
adc
pop
push
cltd
insb
jbe
xorb
sub
insb
mov
pcmpgtb
adc
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
fimuls
jne
or
cmp
pop
sti
outsb
addb
cmpb
mov
mov
into
jl
insl
jecxz
inc
sti
push
pop
enterw
es
sahf
aam
pop
out
std
jg
mov
push
pop
je
push
mov
cmp
adc
outsl
and
les
jl
jmp
or
sub
push
xor
and
lahf
push
rcl
mov
inc
and
addr16
or
jns
pop
sbb
repnz
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
jl
mov
mov
les
mov
dec
push
jge
lret
xor
leave
in
sub
insb
lea
roll
cs
pushf
pop
pop
sub
sbb
xchg
and
ret
or
loop
or
add
pop
popa
mov
pop
fidivl
or
stc
cltd
rcrb
xor
or
inc
loop
xor
nop
xor
cmpl
shrl
std
or
push
push
jno
inc
imul
xchg
mov
mov
lods
call
add
fs
stos
or
aas
add
or
push
test
push
and
pop
js
pusha
xchg
dec
jnp
add
dec
add
xor
addl
inc
adc
adc
or
add
add
add
mov
das
jle,pn
add
and
mov
push
iret
aas
jb
pop
xchg
sbb
adc
and
stc
mov
sub
test
pop
dec
push
pop
sub
in
mov
jg
mov
push
or
xor
insl
popa
adc
mov
jne
mov
jge
pop
or
mov
jge
dec
inc
adc
add
xchg
jb
icebp
adc
shr
jecxz
pusha
pop
adc
or
push
xor
push
cmp
fidivl
ret
mov
popw
push
mov
jne
loop
dec
adc
add
mov
fldcw
sbb
ss
movsl
dec
mov
mov
or
cmp
aam
stos
lea
dec
adc
inc
mov
dec
or
xchg
cmc
adc
mov
rclb
and
rorl
fdiv
je
inc
add
mov
fimull
lock
add
sub
ss
adc
cmpb
jne
push
jmp
cmp
xchg
mov
push
and
scas
mov
push
and
bound
js
insl
dec
test
add
or
inc
sub
cmp
xor
inc
and
and
xor
add
lock
inc
or
sub
int
inc
enter
mov
cld
push
imul
and
push
adc
push
add
cmc
add
aaa
aaa
or
or
add
call
shlb
fiaddl
mov
mov
nop
adc
pushf
fmul
xchg
mov
push
add
rol
mov
ss
shlb
jne
imul
test
pop
and
pusha
dec
inc
add
sub
mov
aam
and
jnp
and
adc
inc
and
lds
push
in
imul
fstl
nop
and
or
mov
or
add
push
sub
pop
and
push
sbb
dec
mov
mov
add
adc
lahf
popf
push
cmpb
ss
fimuls
orl
mov
stos
sub
add
jne
jp
jp
insl
dec
popa
add
rcrb
aad
jno
mov
cmp
xchg
pop
sub
or
push
mov
mov
cmpsb
cmp
dec
mov
dec
sbb
ja
inc
adc
pop
jp
pop
xchg
shrb
push
mov
xor
adc
int
sbb
rorb
and
ljmp
cmp
xlat
rcl
xor
mov
jne
rclb
loopne
push
xor
fisttps
inc
adc
add
sub
or
push
enter
inc
rcrl
dec
pop
xchg
jmp
test
test
insl
in
nop
jmp
jo
xchg
add
lahf
fstpt
sbb
or
rolb
pop
shlb
test
inc
push
out
jbe
or
xchg
dec
mov
daa
movsb
jnp
into
mov
imul
xchg
es
hlt
cmc
int
test
add
insb
sbb
add
push
or
clc
lret
and
out
cmpsl
sub
adc
adc
loope
flds
or
scas
jbe
and
and
adc
and
dec
or
pop
mov
movsl
jg
cmpl
popf
shrb
jo
lods
or
mov
pop
add
jl
inc
mov
movl
push
inc
popa
xchg
or
in
cmpl
lahf
sub
xchg
repz
jo
and
add
add
ds
icebp
adc
cmpb
clc
clc
jnp
sti
fdivl
jmp
inc
lahf
inc
sbb
mov
xlat
and
mov
adc
dec
hlt
jl
push
push
push
add
mov
fiaddl
mov
inc
pop
and
les
xor
loope
in
push
outsl
inc
mov
xor
hlt
adc
test
cli
ret
stos
adc
adc
movsb
and
and
scas
xor
dec
in
pusha
jne
mov
push
and
hlt
mov
jl
subb
in
ficoml
pop
dec
rorb
imul
shlb
add
jp
push
jg
je
rcrb
and
popf
xchg
or
dec
or
call
fucom
adcl
inc
dec
add
mov
pop
je
cmovbe
inc
cwtl
sub
and
inc
inc
jae
test
scas
cmp
push
insb
jb
sub
pop
movsb
xor
pusha
push
push
cltd
js
lds
faddl
faddl
sbb
or
out
inc
dec
add
mov
xchg
adcl
nop
inc
push
call
sbb
or
and
aaa
mov
fadds
test
hlt
mov
mov
mov
jne
imul
mov
xlat
xor
insl
pushf
or
add
pop
add
mov
cmp
fs
in
or
mov
aam
lea
faddl
test
jecxz
movsb
xor
lea
jmp
call
add
mov
cmp
xchg
adc
mov
inc
dec
push
enter
dec
inc
mov
jmp
lods
nop
push
in
sahf
sub
mov
or
sbb
push
adc
sbb
dec
jne
fsubs
cmp
and
lret
dec
adc
rclb
or
or
push
rolb
push
push
sbb
pusha
push
push
xor
or
roll
or
cmpl
aaa
jo
or
or
add
or
mov
sub
or
data16
push
mov
jg
cmp
subb
scas
and
push
dec
push
cli
pop
jb
cmp
xor
adc
mov
cmp
pop
enter
std
add
inc
arpl
in
cmp
shrb
scas
orb
pop
push
inc
xchg
inc
insb
jno
pop
call
xchg
icebp
push
add
add
aad
adc
adc
mov
mov
dec
add
inc
or
rorb
loopne
arpl
inc
js
push
test
sbb
jae
push
inc
addr16
test
adc
inc
leave
test
adc
add
and
inc
pushf
or
in
lock
xchg
addb
lcall
mov
mov
loope
in
jmp
add
cltd
rorl
int
adc
imulb
mov
adcb
cmc
cmp
sbb
pop
movsl
add
pop
adc
jo
in
iret
dec
sbb
aad
notl
xchg
add
addl
rcrb
subb
mov
cmp
lret
test
dec
inc
in
in
lock
jo
sub
add
xor
jbe
push
dec
add
xchg
push
in
push
lea
mov
sub
jns
or
or
pop
jmp
jo
mov
lods
push
cld
xchg
cmp
sbb
jne
test
add
fdivrl
scas
fmul
sbb
or
add
cmpsl
inc
or
outsl
nop
aam
sbb
dec
pop
inc
inc
sub
pop
lret
faddl
adc
fstl
xchg
fdivrs
mov
push
sub
data16
push
fistpll
cmp
imul
add
rclb
mov
ljmp
inc
mov
push
out
xchg
out
mov
add
xchg
mov
add
push
jo
shl
mov
inc
daa
fs
pushf
cs
shl
popf
mov
adc
and
and
adc
mov
or
shll
push
jecxz
sahf
xor
iret
jl
sbb
pop
cmpb
fwait
movups
jo
or
xchg
or
pushf
and
sub
pop
mov
scas
mov
push
xor
or
fiaddl
movsb
push
push
xor
or
gs
popa
mov
mov
mov
rorl
sti
into
imul
jo
imul
xchg
out
sub
pushf
stc
in
cwtl
sub
call
inc
sub
int3
xor
push
sbb
mov
lea
push
cmp
lea
cld
int
add
cmp
jnp
push
or
shll
mulb
out
test
test
and
add
and
push
pop
push
lods
adc
push
data16
cmp
stos
ds
push
add
adc
jb
addb
jo
sbb
das
and
mov
mov
int
lea
shr
push
pop
mov
jg
and
add
jp
mov
lods
stos
mov
lods
cmp
fiaddl
push
mov
push
enter
pop
iret
add
push
and
jbe
in
lods
shl
mov
push
roll
cs
movl
inc
and
movzwl
xor
insb
mov
mov
sbb
fsubs
or
out
mov
dec
fnstcw
sahf
jecxz
aaa
sarl
pop
mov
sbb
into
adcl
push
es
cmp
xchg
mov
cmp
pop
pop
sbb
shrb
mov
sbb
fsubr
rcll
adc
inc
adc
mov
mov
add
movsl
rcrb
mov
sbb
js
rolb
movb
push
popf
hlt
or
cmpb
xchg
push
clc
sar
fs
xchg
ror
int3
inc
cmp
out
fcmovb
xor
mov
cld
mov
sbb
and
add
xchg
test
mov
sbbb
repz
ret
cli
push
call
sbb
movsb
das
insl
or
sbb
cmp
ficomps
mov
shr
mov
mov
les
jb
adc
jmp
xchg
test
or
adcb
or
jg
push
ljmp
mov
fstps
jo
and
sub
jne
movsbl
pop
push
jbe
sub
cmp
mov
adc
and
je
xor
mov
std
pop
es
loopne
add
or
and
push
fcmovnb
ror
movb
add
pop
adc
in
nop
sbb
pop
ret
je
or
jle
fmul
and
or
mov
stos
push
pop
xchg
pop
jnp
push
cmp
jl
cmp
fists
mov
je
mov
add
dec
lods
lea
push
add
adc
imul
push
cltd
dec
add
adc
or
mov
pop
push
rcr
mov
hlt
push
push
dec
ja
and
gs
xchg
ss
jg
and
std
bnd
pushf
pushf
pushf
mov
push
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
push
and
and
cmp
pop
test
adc
sub
xchg
mov
xchg
incl
sahf
out
mov
push
icebp
fsub
in
hlt
cld
out
sahf
imull
add
or
sbb
sahf
out
sahf
sub
xor
cmp
jns
dec
push
push
pop
out
sahf
out
gs
je
out
sahf
jns
orl
jns
pushf
mov
add
push
pop
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
rolb
and
aas
push
adc
pop
lahf
lcall
imul
andb
fwait
inc
sub
xor
pusha
xor
push
movsl
jge
cmp
xor
in
test
jo
test
subl
sub
out
addl
insb
mov
sub
lea
sbb
orl
xor
push
mov
decl
jne
shll
sub
pop
cmp
lock
cs
bound
add
xor
xchg
mov
jns
push
fcoml
xlat
mov
jbe
mov
lret
outsl
push
fldenv
add
jo
fdivrl
lock
js
lods
cmp
xchg
adc
xchg
shll
loopne
pushl
inc
jmp
xchg
add
shll
outsl
add
mov
scas
iret
icebp
push
xor
fucom
shlb
pop
push
setns
es
jbe
bound
cmp
push
jl
je
dec
rclb
pop
adc
sbb
ljmp
and
lods
xchg
and
sbb
xor
mov
mov
adcb
xor
stos
mov
cmp
js
cmp
psubq
fadds
pop
xchg
pop
adcb
inc
lret
ja
lret
dec
popa
pop
or
and
shr
cmp
ret
xchg
mov
sbb
jbe
jb
int
dec
adc
dec
mov
mov
push
add
ss
jge
imul
sarb
jnp
ret
dec
sub
lea
daa
cmp
adc
push
movb
daa
mov
subb
add
movl
movsb
ret
xor
movsl
cmp
jbe
mov
or
inc
or
repnz
ret
dec
sbb
fdivl
xlat
push
es
xor
scas
fbld
leave
in
jg
lret
stc
ja
lea
imul
lret
push
shlb
and
stos
addb
cmp
or
fcomip
or
push
mov
inc
or
inc
adc
or
adc
in
lcall
pop
or
adcb
sti
or
xor
pop
scas
imull
add
jnp
jp
add
pop
mov
push
and
icebp
ret
xor
add
push
andl
nop
mov
inc
adc
sbb
fsubrs
pop
stos
xchg
sbb
or
ss
int
enter
xorb
and
inc
or
lahf
add
mov
jno
dec
mov
xchg
nop
lret
xchg
push
popf
adc
push
cmp
lcall
mov
mov
add
sbb
add
lcall
add
out
push
stc
imul
fdivs
mov
rorb
sbb
and
adc
pop
movsb
pop
pop
dec
daa
lret
and
pop
lret
nop
sbbb
ljmp
mov
xor
push
sub
loopne
jno
das
xchg
jb
aam
ja
inc
cmovo
adc
xor
nop
adcl
pop
xchg
ss
call
in
mov
inc
cmp
jl
xchg
orl
fdivr
add
scas
mov
cmp
rclb
cmp
add
cli
fisttps
jmp
jne
lea
cmp
sub
or
jne
fbld
outsl
or
js
movsw
jl
js
xorl
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
lret
jne
insl
mov
or
nop
jmp
sarb
and
dec
mov
jmp
and
movzbl
xchg
or
jle
pop
pop
testl
dec
clc
pop
push
adc
jmp
mov
pop
addl
inc
mov
push
inc
jecxz
addl
jl
pusha
js
ret
call
leave
sbbb
int
hlt
mov
sbb
mov
jne
xchg
lock
outsl
aad
lahf
cltd
ja
jmp
fidivl
lcall
xchg
mov
loope
xchg
cmpsb
mov
cmpsb
mov
pusha
ret
or
pusha
sub
mov
insb
nop
imul
add
cltd
ret
fadd
add
ss
pop
mov
push
fiadds
js
jne
or
xchg
mov
cmp
push
imul
sbb
adc
mov
gs
jae
mov
jecxz
test
dec
sti
js
adc
add
test
int3
mov
sub
add
pop
and
mov
and
rcll
stos
std
mov
mov
inc
or
or
nop
js
orb
xchg
xchg
rorb
aaa
or
nop
pop
cltd
sub
arpl
push
cmpsb
add
rolb
fsubrp
push
subl
mov
inc
and
aam
sbb
add
mov
push
sbb
inc
add
mov
test
cwtl
mov
fs
jnp
mov
data16
jno
mov
cmp
jge
mov
out
je
mov
pop
ja
scas
jne
push
ljmp
mov
adc
fisttps
sub
push
test
cli
imul
jne
repz
and
clc
and
loop
lea
push
js
js
sti
inc
add
je
jmp
xor
xchg
or
neg
imul
nop
jle
outsb
imul
adc
push
pop
jo
jp
call
cmpsb
or
xor
enter
push
cs
jno
push
or
insb
mov
or
push
mov
inc
insl
push
jle
jmp
jae
fisttps
push
jns
or
add
push
sbb
jg
sar
mov
inc
mov
fndisi(8087
test
inc
mov
cmp
or
ret
das
cltd
aad
int
lea
cmpsb
out
jo
je
inc
call
clc
xchg
mov
xchg
push
push
mov
das
mov
jno
and
sbb
fcmovb
sbb
aam
jg
adc
lret
into
sbb
addr16
in
inc
dec
cli
push
xchg
sub
xorl
fcoml
mov
or
test
dec
xor
mov
jnp
pop
cmp
cmp
mov
push
scas
pop
jmp
sub
jae
cwtl
push
inc
lds
daa
pop
push
loope
lods
push
cltd
pop
add
xchg
push
dec
pop
dec
jb
fiaddl
sub
adc
nop
jmp
movsl
xor
dec
repnz
vandnpd
add
cld
ja
sahf
push
js
stos
mov
out
cmp
and
adc
push
inc
adc
rorb
pop
or
pop
addl
xor
pushf
xor
call
or
inc
inc
pop
inc
inc
shll
int
sub
xchg
jbe
or
subb
jle
jp
xor
fiaddl
imul
pop
das
mov
fwait
adc
clc
ret
sub
fstl
adc
shll
cs
xor
adc
cltd
jae
xchg
pop
push
dec
or
cld
cmpl
xchg
repnz
adc
out
or
sbb
in
lds
test
xor
cli
pop
sarl
xchg
mov
in
jl
pop
push
xchg
ret
or
sbb
mov
je
inc
mov
data16
inc
pop
and
cli
lock
add
inc
pop
in
je
xorl
xor
sub
test
jno
adc
or
inc
push
push
mov
adc
inc
jo
sub
enter
test
ljmp
pop
je
mov
cmp
sub
or
add
push
and
sbb
ja
lcall
jae
xor
xchg
shlb
dec
cmp
push
xchg
adc
pushf
jnp
sub
dec
insb
loopne
test
adc
test
pop
mov
adc
xchg
je
or
mov
sbb
mov
or
pop
jecxz
xchg
fstps
stc
xchg
inc
popa
fcompl
outsb
mov
ds
je
rorl
mov
xchg
jne
cmp
xchg
or
mov
pop
inc
lock
icebp
mov
push
xor
insb
mov
mov
insb
cmp
add
sbb
je
sti
call
bound
daa
clc
imul
xor
lea
xor
in
scas
and
addl
cli
xor
js
fimull
hlt
push
and
out
push
push
add
out
sub
cltd
sbb
and
jg
hlt
js
lds
push
and
jl
leave
inc
imul
aam
push
mov
movsl
test
popf
xor
aaa
pusha
adc
inc
jb
cmpsb
xchg
dec
in
pop
enter
or
or
and
adc
sbb
insl
je
xor
mov
cli
dec
sbb
cs
and
cmpsb
imul
pusha
mov
add
push
pop
xchg
sbb
sbb
pop
add
pop
insl
fdivl
fcmovne
leave
sbb
xor
int3
push
ret
movb
and
stos
jne
push
cltd
or
daa
js
out
mov
out
cmp
sbb
js
jle
jecxz
add
repnz
add
jp
ret
arpl
outsl
dec
lea
push
lds
mov
mov
test
mov
sub
jg
popf
fildl
daa
popf
ret
inc
out
mov
pop
mov
adcl
insl
dec
dec
sbb
int
cmp
jle
cmp
call
mov
push
push
and
les
std
mov
inc
fimuls
cmp
je
cmp
push
addl
push
push
push
nop
cmpsb
xchg
sbb
sbb
xchg
push
sub
adc
shll
icebp
or
mov
and
pop
ljmp
add
test
loopne
sub
sbb
add
jb
ret
test
mov
jmp
fstpl
fcmovnb
adc
bound
popf
and
push
leave
imul
xchg
mov
pusha
lods
push
stc
dec
lods
push
mov
addr16
adc
cmp
mov
push
push
adc
jo
pop
mov
add
xchg
and
xchg
jae
add
cwtl
and
aaa
fs
add
mov
push
push
xorb
dec
xor
or
xor
or
cmp
pusha
leave
mov
cmp
jb
mov
roll
in
xchg
cmpsb
les
push
jl
mov
mov
lea
jg
push
cs
mov
ljmp
shrl
push
cmp
jge
mov
hlt
push
pop
mov
inc
inc
mov
add
push
mov
push
push
icebp
add
fadd
mov
mov
adcb
lock
clc
clc
cld
jmp
cld
xor
mov
push
xchg
dec
gs
add
add
add
and
imul
add
adc
cmp
incl
lret
orb
mov
mov
or
push
gs
sub
or
xchg
call
or
mov
adc
std
testb
adc
je
dec
je
pop
pop
and
out
loop
popf
or
mov
rep
add
lret
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
arpl
roll
xor
lock
inc
inc
mov
cmpb
popf
xor
or
gs
lret
idiv
inc
inc
imul
pop
lret
pop
and
clc
jb
addb
sarl
lahf
fnstenv
push
add
rorb
sbb
aas
cmp
mov
imul
cmp
or
push
inc
arpl
xor
lock
ja
sahf
cli
cmp
je
mov
pop
jbe
inc
test
jmp
movsl
enter
pop
cld
mov
sarb
in
clc
jge
pop
test
xchg
imul
jae
insl
mov
ljmp
xor
mov
pop
repnz
dec
push
clc
mov
cmp
je
cmp
push
cmp
jne
inc
jne
xor
push
in
stos
pusha
or
dec
pop
jns
stos
add
insl
xorb
xor
jb
mov
je
dec
cmp
fnstcw
jne
push
dec
add
sub
add
ret
adc
cmp
arpl
cmp
add
add
push
incb
orl
sub
jmp
jp
jl
or
jg
mov
sti
sub
jmp
and
push
jmp
jg
in
inc
jl
inc
jg
aaa
jp
add
shl
dec
xor
jmp
mov
into
enter
repnz
les
outsl
adc
test
or
inc
xchg
xor
in
xchg
adc
rol
push
sbb
mov
push
inc
pop
pusha
push
pusha
js
test
test
js
sub
lods
push
pushl
out
or
cmp
je
jl
pusha
mov
jg
pop
fs
jmp
rolb
or
xor
xorb
inc
lods
iret
dec
jl
aaa
lcall
shll
jl
xor
popa
addl
fldt
pop
das
movsb
add
push
lods
xor
xor
fsubs
inc
cmpb
aaa
inc
pop
inc
mov
mov
shrb
idivb
call
daa
mov
in
rorb
arpl
outsl
mov
push
push
dec
lods
dec
push
scas
std
cs
pop
cmovbe
sti
test
adc
push
cmp
mov
push
inc
xor
sub
jnp
cmp
jnp
ja
lret
pop
and
cmpsb
test
adc
push
js
and
mov
inc
mov
mov
arpl
outsb
add
jne
mov
mov
add
insl
movsl
cld
cmp
mov
xor
inc
mov
add
imul
roll
je
xor
leave
out
lret
rcll
xchg
or
test
jne
xchg
push
mov
ret
dec
jg
loop
sbb
punpckhwd
add
push
mov
dec
dec
out
mov
inc
cwtl
add
or
xchg
push
add
dec
mov
aaa
mov
xchg
lea
inc
mov
inc
sti
adc
mov
aam
shlb
jne
jmp
mov
inc
je
and
sbb
pop
push
add
js
shll
lcall
dec
inc
inc
loop
xor
fimull
xchg
mov
xchg
push
adc
in
movsl
les
ficoml
iret
das
dec
arpl
adc
shl
cmp
push
lahf
add
dec
push
std
jbe
and
adc
data16
ss
pop
or
jmp
push
rolb
mov
lea
fstl
inc
add
cwtl
sbb
jl
adc
fmuls
inc
inc
or
leave
imul
or
jl
and
xchg
xor
or
add
add
mov
xlat
loop
xor
pop
adc
insb
jecxz
pop
jne
push
movb
xor
add
xor
arpl
cmovg
push
cmp
jmp
cmp
addr16
dec
cmp
aaa
sbb
push
lock
jmp
imul
add
push
xor
pop
stc
cmp
cmp
or
notl
xor
cmp
outsb
xor
sbb
push
or
insl
inc
or
or
movsb
jne
sub
cs
sbb
and
or
ss
or
flds
jmp
and
lcall
das
add
jg
cmpb
jne
leave
jb
lods
insl
sbb
imul
shlb
int3
adc
sbb
outsl
dec
ror
sub
ja,pn
or
dec
ret
and
dec
mov
cmp
movsb
xor
mov
adc
mov
mov
adc
or
dec
jnp
stos
cmp
sub
xchg
xchg
xchg
ds
test
push
outsl
xor
add
push
and
mov
rolb
cmp
push
push
clc
gs
mov
lea
jb
pop
sub
jo
repnz
test
arpl
mov
adc
pop
adc
add
sbb
xor
dec
adcb
fwait
mov
mov
adc
xchg
dec
dec
and
jne
push
cmp
ret
push
mov
sub
cmpsb
add
mov
loope
pop
or
or
push
inc
insb
je,pt
rcr
enter
push
clc
and
subl
pop
cmp
hlt
dec
push
sbbl
lea
push
sub
inc
sbb
cmp
leave
jl
sbb
mov
adcl
mov
cwtl
push
mull
add
pop
sbb
pop
adc
sub
xlat
adc
mov
sbb
roll
or
movsbl
ret
push
pop
pop
shl
inc
call
xchg
pop
sub
cmpl
push
cmp
xchg
and
cli
xchg
sub
call
inc
repz
loop
out
pusha
call
out
addr16
rcrb
mov
mov
or
xorl
inc
inc
outsl
sub
mov
mov
jmp
aam
push
adc
leave
sub
sbbb
sahf
xchg
fsubrs
bound
pop
and
xor
lea
lcall
pushl
cmp
jb
dec
jmp
push
arpl
lds
mov
inc
sti
fnstenv
dec
insl
pop
and
sbb
out
sbb
js
ss
push
or
fidivl
addl
hlt
adc
lock
je
pop
mov
xchg
pop
push
cmpsb
add
inc
ljmp
mov
xchg
cli
push
mov
sahf
dec
jne
add
and
sub
aas
inc
je
dec
adc
mulb
rcll
insl
jne
xchg
test
or
dec
cmpb
xor
xor
pusha
outsb
jb
inc
push
scas
push
xchg
xor
push
mov
mov
mov
dec
lods
add
inc
sbb
add
pusha
js
test
orb
or
outsl
ds
push
jecxz
mov
jo
fildl
jmp
push
filds
push
adc
lret
and
xchg
nop
xchg
jo
pop
pop
in
or
sahf
dec
hlt
push
add
mov
in
in
inc
pop
pusha
add
add
dec
and
rolb
iret
test
and
xorl
cmpsb
orb
aaa
mov
or
inc
inc
fsts
daa
pop
xchg
mov
or
cmpsl
cmp
jne
sbb
add
push
bound
sahf
icebp
xchg
cltd
lods
jle
sbb
jno
iret
andl
xchg
out
data16
jge
and
add
into
je
mov
rcrl
enter
pop
pop
push
mov
sub
andl
jmp
sbb
cmp
cmp
test
mov
loopne
mov
in
roll
movsl
lcall
stos
push
cmp
faddl
or
inc
mov
mov
cmp
ret
addr16
loope
add
xchg
mov
pop
push
loopne
jle
dec
inc
sbb
adc
cmc
in
sbb
xor
jo
cmc
jno
or
lods
adc
jmp
push
mov
or
or
push
data16
jno
dec
mov
jns
ret
add
cmp
ds
and
xor
add
cmp
bound
leave
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fsubs
inc
push
push
and
inc
cmp
sahf
push
mov
nop
pop
adc
hlt
xchg
sbb
or
add
js
sbb
fsubl
scas
push
pop
or
test
mov
sub
mov
imul
out
mov
xlat
call
cmpl
popf
add
in
lock
inc
jmp
pusha
push
jae
aad
sbb
adc
and
add
push
addl
imul
add
lahf
mov
dec
ret
mov
push
adc
sub
mov
daa
and
ja
movsb
xor
add
and
shrl
fwait
or
int3
xchg
and
jns
shrb
mov
xchg
push
cmpsl
ret
and
xor
movsb
xchg
fdivrl
inc
fsubrl
test
pusha
lock
push
roll
out
fmull
push
pop
andl
and
adc
rorb
mov
sub
fiaddl
add
pop
in
fadds
dec
pop
hlt
insl
adc
and
and
dec
xchg
lahf
lea
or
and
insl
out
cwtl
pusha
popa
icebp
mov
mov
cs
cmp
inc
adc
cmpsl
insl
cmp
sub
push
xor
xor
mov
xchg
dec
inc
push
xor
pop
mov
mov
and
sub
jle
jle
icebp
and
jg
add
sub
fld
aaa
cli
jmp
data16
or
sub
inc
dec
test
jmp
shlb
adc
xchg
sub
cmp
jmp
mov
or
jbe
pop
adc
push
mov
imul
jp
push
jle
sbb
ret
outsl
and
lea
daa
pushf
jecxz
cmp
dec
push
pusha
cmp
mov
and
popf
jo
js
sbb
rcrb
js
push
dec
push
mov
cwtl
push
popf
pusha
enter
lds
rol
and
xor
fldcw
pop
jl
pop
jmp
rorb
ljmp
lret
fildl
je
dec
push
mov
and
out
cmpsl
sub
adc
dec
ss
adc
add
popa
repz
cmpsb
hlt
or
out
adc
adc
movl
outsl
roll
outsb
in
inc
or
and
dec
in
sub
sbb
int
movsb
pop
jmp
fisttpl
mov
and
adc
inc
jns
and
jo
sti
roll
push
pop
sub
rorb
dec
or
or
push
ret
push
dec
sub
subl
sub
sbb
adc
push
and
imul
lods
or
adc
mov
clc
mov
mov
repnz
out
daa
push
cld
cmp
jge
sbb
je
out
inc
add
add
xor
addr16
adc
dec
adc
jne
push
pop
mov
cmp
cmpl
push
pop
scas
cmp
jne
pop
push
xchg
ret
jae
cmp
jmp
sbbb
sbb
pop
pop
jae
test
and
ds
cli
push
sub
psrad
cmpsl
lea
iret
fmuls
shl
push
jmp
lea
outsb
jecxz
daa
sbb
in
pop
dec
xor
call
mov
mov
clc
adc
sbb
pop
jne
inc
adc
sbb
xor
inc
dec
sub
dec
lock
fwait
dec
mov
popa
popa
arpl
and
pop
and
scas
test
cmp
jge
loopne
mov
js
mov
pop
inc
sub
loopne
scas
xchg
nop
sarb
mov
push
sbb
shll
mov
cmp
test
sub
es
loopne
fsub
jl
jp
pop
jmp
sarb
or
or
rcl
xchg
and
jecxz
cli
mull
adc
pop
or
insl
mov
sub
mov
std
out
jae
cmp
pop
mov
mov
fiadds
cmp
adc
add
fcomps
bound
insl
cmp
jg
dec
fbstp
rorb
or
shr
rep
adc
fiadds
pop
insb
movsl
sbb
mov
cmp
jnp
cmp
jb
lret
add
push
jmp
pop
add
cmp
mov
pop
scas
stos
pop
jg
sub
mov
adc
mov
or
inc
jae
xchg
call
loopne
outsl
testb
add
fs
jg
push
or
sbb
decl
lods
mov
pop
ret
push
mov
rorl
cli
or
pop
pushf
les
lods
adc
adcb
jmp
inc
sarl
pusha
sub
fucomi
adc
daa
movsl
mov
fwait
jne
xor
lods
ret
je
lds
cmp
ljmp
xchg
cmpsb
mov
push
mov
or
fwait
neg
adc
add
push
loopne
adcl
arpl
xchg
mov
ret
jg
jb
addb
rcl
cltd
clc
sbb
and
mov
je
dec
xchg
scas
or
dec
and
call
imul
jne
ror
push
fsubrs
pop
xchg
pop
adc
dec
sbb
mov
rcrb
sbb
cmpsl
aam
mov
sbb
shrl
sub
in
jo
scas
movsb
sbb
repz
sub
addl
subb
adc
add
xor
loopne
inc
mov
xchg
adc
push
pusha
divb
inc
ret
or
cmp
cmp
daa
leave
call
sub
aas
pop
scas
ret
cmp
pop
in
mov
ljmpw
sub
adc
xchg
rcll
in
andl
or
jp
xor
inc
pop
lds
aaa
push
test
aam
clc
push
mov
insl
imull
lret
and
ss
fstps
mov
sar
dec
xor
add
hlt
push
or
je
verw
dec
shlb
cld
sbb
xorb
sti
mov
push
mov
out
jne
or
inc
inc
push
dec
jae
mov
pop
cltd
iret
adc
cwtl
add
cmpsl
adc
pop
mov
inc
fimuls
push
mov
inc
cld
je
sar
xor
adc
push
mov
cwtl
js
enter
lock
mov
push
dec
bswap
mov
cmpsb
ficomps
ds
jg
ret
subb
clc
push
lret
inc
imul
or
xchg
dec
cmpsl
push
movsb
mov
je
push
mov
lds
loope
sbb
mov
inc
push
popa
or
push
cs
push
adc
andb
dec
pop
popf
nop
and
inc
mov
pop
sub
sub
add
or
or
jle
jmp
add
rcrl
lds
cmp
sbb
lret
push
popf
fadds
push
pushf
mov
mov
pop
push
cmp
clc
jmp
nop
sub
cs
sbb
or
or
push
mov
nop
int3
lock
pop
inc
add
sbbl
loop
loop
data16
inc
xchg
mov
in
jge
dec
mov
stos
xchg
test
fs
dec
insb
xchg
or
push
cmp
push
adc
js
xchg
dec
dec
jo
mov
clc
cli
mov
cmp
fcmove
dec
aas
scas
xchg
ja
push
cld
mov
jo
ljmp
fnstenv
outsb
js
ja
js
cmp
xor
loop
rclb
cmp
call
push
adc
mov
jb
and
push
add
add
mov
mov
pusha
push
adc
or
pop
ja
shll
popf
std
xchg
dec
mov
sbb
push
rolb
cmp
mov
jp
jne
mov
lret
pop
aas
adc
jne
mov
adc
fcomi
ss
cmp
es
in
das
pusha
pusha
jle
push
xor
pop
div
xchg
cmpl
inc
or
fwait
cmp
inc
mov
ljmp
lock
lods
push
dec
dec
sbb
movsb
adc
inc
cmpb
loope
push
adc
data16
add
push
adc
lea
outsl
in
shl
jmp
jp
xor
xchg
mov
push
or
cmp
cs
cmp
fsubl
andl
gs
sub
lods
andl
lock
or
rorb
jne
or
cmp
sbb
push
inc
mov
fucomp
shrl
ret
jo
shlb
adc
sub
cmp
insb
hlt
sub
jne
bound
adc
mov
rorl
cmpsl
test
jle
movsl
movsb
insb
clc
int3
add
sub
fisubs
cmp
inc
mov
mov
push
mov
mov
loope
mov
test
cmp
jb
neg
and
je
sub
outsl
push
icebp
fisttpl
jmp
loopne
add
jnp
std
je
adc
and
jmp
stos
mov
dec
jnp
lahf
xor
rcrb
add
imul
add
hlt
inc
add
shrb
repz
leave
xchg
cs
movsl
popa
xor
mov
or
pop
sbb
fimull
jo
adc
xor
xchg
adc
je
mov
xchg
call
or
add
pusha
sub
jb
mov
popa
jbe
scas
pop
push
loop
test
pop
and
pop
or
fnstcw
xchg
loopne
lods
cs
and
clc
jg
fs
in
jno
add
movd
movaps
out
cmp
enter
shlb
jle
adc
mov
push
add
lret
sti
sub
je
cmp
and
lret
or
aaa
xchg
ljmp
pop
xor
cmc
and
in
add
call
adc
or
hlt
adc
sbb
mov
pop
add
ffree
roll
jbe
and
fnsave
addps
int
sub
fcmovb
sbb
adc
push
dec
adc
pop
jo
pop
test
sar
in
sbb
and
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
les
mov
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
movsl
or
test
mov
fwait
mov
dec
aad
mov
cmpsb
pop
mov
inc
dec
pusha
imul
jbe
loope
pusha
mov
sub
and
test
push
loopne
aad
incb
ficoms
shr
les
and
inc
sub
clc
ja
mov
sbb
mov
push
ljmp
je
cmp
jne
inc
cmpb
out
addb
and
add
or
adc
add
aam
dec
sub
in
push
or
mov
mov
ret
daa
xchg
ljmp
daa
popa
dec
cwtl
inc
push
ss
adc
mov
cwtl
mov
xor
dec
fs
mov
lret
nop
nop
stos
dec
xchg
mov
js
pop
decl
xor
mov
pop
mov
xor
inc
stos
add
scas
xor
adc
adc
jmp
and
pusha
adc
push
mov
lods
push
cmpb
mov
jmp
jns
movsl
pop
loopne
popa
test
inc
push
adc
inc
aam
and
mov
bound
movb
sub
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
test
pop
out
inc
mov
enter
cmp
push
rolb
mov
inc
xor
add
inc
add
jno
hlt
addr16
movsb
jnp
shlb
jp
leave
icebp
xor
cmpsb
js
in
insb
mov
dec
sti
and
and
test
or
jp
fldl
pop
cmp
jmp
push
and
fnstenv
add
scas
or
fistpll
out
push
mov
or
inc
jmp
std
add
jnp
hlt
push
mov
pop
or
loope
ja
hlt
jle
inc
imul
and
nop
sbb
stos
fimuls
push
push
mov
jmp
inc
cmp
xor
push
sbbb
jl
push
out
sub
out
in
imul
sub
je
pushf
sbb
shlb
lock
sub
imul
inc
jb
sbb
mov
pop
ja
movsb
dec
mov
jb
adc
xchg
or
push
inc
sahf
aas
data16
lret
add
xchg
fldln2
xor
pop
xchg
out
lret
push
push
ret
add
je
jae
enter
addr16
aam
or
sbb
movsb
push
popa
jo
inc
push
jns
arpl
sbb
repz
cmp
js
pop
shr
arpl
or
mov
icebp
mov
sahf
rcl
add
cmp
push
push
cs
mov
adc
adc
cmp
lea
bswap
aaa
mov
inc
push
test
dec
and
jne
insl
cmp
xlat
test
jmp
jp
outsb
loop
sarl
jne
out
call
adc
inc
xor
mov
ds
loope
cmp
xor
es
loope
or
js
lret
jne
dec
jmp
shl
out
xor
jne
inc
aaa
xchg
fcomps
mov
jmp
loope
jns
inc
shlb
jmp
sub
sub
pop
shr
test
inc
dec
push
jmp
stos
std
lea
jno
int3
mov
test
dec
cmpsb
sahf
mov
mov
cmp
jo
xchg
fsubs
stc
repz
ret
in
adc
out
dec
xor
jno
pop
jne
rcl
sbb
dec
ret
stc
or
rep
jmp
ss
rolb
jb
imulb
mov
add
test
cmp
adcb
add
es
push
shl
rcl
scas
and
repnz
and
lods
repnz
test
dec
mov
pop
lea
push
dec
add
dec
cmpsb
nop
inc
xor
mov
add
sahf
out
push
dec
inc
cmp
testl
mov
mov
push
sahf
out
sahf
call
lock
out
hlt
hlt
clc
clc
cld
cld
lods
mov
mov
add
jns
shll
jmp
or
jecxz
clc
mov
nop
inc
push
fildl
inc
cmp
sbb
lea
dec
scas
mov
pop
and
std
fmull
fwait
pop
cld
out
aas
or
ds
push
daa
stc
sub
adc
nop
push
and
inc
insb
fiaddl
dec
gs
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
rcrb
mov
addr16
mov
bound
rolb
jnp
out
rcr
loopne
lock
repz
lds
ss
sbb
iret
repz
adc
adc
or
and
repz
or
out
iret
and
sbb
and
dec
push
adc
add
dec
adc
pop
mov
pop
push
xor
jmp
leave
cli
shrb
jmp
imul
mov
mov
or
or
inc
nop
push
jl
negl
ret
adc
fidivs
sub
loop
fists
pop
xorb
ror
lea
adc
jp
sub
and
mov
iret
mov
mov
rcrb
mov
addb
inc
test
or
popa
lds
mov
push
jecxz
xchg
daa
fistpl
andl
cmp
or
js
adc
xor
insl
inc
pop
fisubl
int
pop
mov
shl
rol
pop
orb
sbbl
enter
je
and
inc
ret
jb
loope
jmp
inc
and
xor
xchg
cltd
inc
popf
jb
and
in
fmuls
dec
jno
icebp
repz
and
popa
sbb
lock
cmp
jle
test
arpl
fisttpl
dec
push
outsb
ret
jbe
sub
inc
aaa
xchg
cmp
xor
push
add
push
add
lea
cmp
fisubrs
out
cli
lret
sub
cmp
jne
fnstsw
testb
pop
or
add
sbb
fcompl
add
stos
or
sbb
dec
stc
dec
push
add
call
push
mov
add
mov
sbb
je
jne
aad
inc
js
cmc
lock
cmp
and
mov
push
cmp
jg
inc
xor
mov
or
inc
mov
xorl
push
jbe
mov
add
xchg
adc
adc
jp
stc
ss
add
push
arpl
pop
and
jb
leave
fistpll
cmpl
jge
adc
xorb
mov
jo
xchg
or
les
and
mov
add
sub
inc
les
xchg
test
mov
aaa
or
adc
push
pop
loope
cmp
jne
cmp
or
or
push
push
and
loopne
add
sub
pop
movsb
leave
inc
or
sbb
adc
sub
inc
sbb
bound
mov
add
dec
rclb
jne
dec
mov
aas
mov
frstor
xlat
repnz
lods
loopne
out
pop
js
push
ljmp
in
push
fisubrs
lods
jne
adc
jmp
push
sub
mov
jo
mov
jecxz
xor
fs
or
sti
imul
xor
lods
call
pop
gs
push
fisubrs
push
adc
xchg
mov
fadds
shl
mov
sbb
fcoms
es
sub
push
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
inc
pop
data16
data16
push
sbb
fwait
shlb
cld
jb
push
clc
jbe
xchg
xchg
sahf
and
and
xor
push
jmp
prefetchnta
js
inc
dec
adc
jmp
cli
lret
test
jne
test
cmp
orl
jl
or
push
jnp
adc
divb
cld
cmc
je
mov
sbb
add
pop
push
cmpsb
sub
arpl
cmp
xor
negl
cld
test
out
inc
popl
adc
outsb
xor
pop
dec
mov
fs
push
ds
or
xor
jo
cld
cmc
inc
lahf
jp
test
xchg
and
jmp
adcl
push
sub
add
loopne
adc
add
mov
js
xor
add
or
or
leave
inc
dec
jns
xor
push
rolb
push
test
shlb
out
rol
sub
outsb
jl
push
pop
sbb
lods
cmp
iret
mov
fiaddl
pushf
or
dec
ret
out
lods
jmp
or
push
loope
pmaddwd
push
push
or
xchg
pop
rcrl
fs
push
sbb
xchg
rolb
test
aam
ret
mov
repnz
pop
and
xchg
clc
dec
jne
jmp
stos
repnz
mov
jl
ret
cmp
dec
jne
mov
shlb
sahf
xchg
frstor
jl
xchg
push
mov
data16
xor
enter
test
sub
rcll
inc
mov
das
insb
dec
insb
push
sarb
cld
rclb
sub
outsb
into
aam
add
or
push
int
sti
scas
in
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
loopne
mov
aam
orl
jb
scas
test
inc
incl
dec
or
adc
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
rol
nop
adc
adc
inc
inc
inc
enter
push
or
push
mov
mov
pop
add
push
or
and
inc
ljmp
push
adc
repz
mov
mov
rcrb
push
mov
jns
or
andl
mov
xor
or
pop
std
andl
adcl
pop
pop
sub
nop
pop
pop
or
data16
inc
xor
ror
popf
cmovno
lock
mov
adc
sbb
test
or
add
add
or
cwtl
js
out
sbb
pop
adc
lret
movb
jmp
add
hlt
xchg
aaa
add
fmuls
add
cmp
xchg
inc
and
jg
add
mov
dec
mov
mov
das
mov
mov
clc
arpl
push
push
push
push
daa
mov
sub
rolb
and
mov
adc
adc
mov
jae
out
dec
out
or
jb
lea
inc
and
add
sub
push
mov
sbb
mov
jmp
adc
adc
pop
xorb
or
sbb
outsl
mov
sub
push
pushf
adc
adc
mov
cmp
adc
dec
pop
adc
inc
mov
or
push
xchg
clc
push
mov
push
cmpsl
or
xchg
xor
mov
sub
das
in
mov
mov
lret
xor
iret
int
or
push
push
dec
mov
ljmp
or
adc
or
fsubs
mov
add
idivb
ja
add
not
and
sub
mov
add
sub
inc
or
outsl
xchg
mov
push
sub
call
push
push
add
add
test
adc
push
adc
loope
add
cltd
xor
pop
mov
push
ja
inc
inc
lcall
sti
das
add
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
sbb
or
add
jmp
or
mov
adc
push
mov
or
add
scas
mov
pop
add
mov
inc
cmp
jb
stos
orb
jae
add
data16
dec
ja
add
sbb
pop
ret
and
xchg
xchg
subl
ret
add
or
fiadds
jge
push
push
sub
or
lcall
or
mov
lret
imul
dec
stc
addl
xlat
shr
xor
jo
and
or
xchg
roll
fsub
ret
js
jne
dec
mov
inc
cld
dec
ss
out
cmp
je
repnz
cmp
inc
aam
adc
add
aam
xchg
pop
addr16
mov
dec
std
cld
sbb
and
inc
pop
loop
adc
xor
test
add
in
lea
inc
sub
ror
dec
inc
or
jl
and
lret
adc
mov
mov
cmpl
pop
ss
dec
sbb
mov
xor
jecxz
popa
xor
inc
jmp
cmp
mov
add
add
sub
xchg
mov
push
pop
mov
xor
adc
cmp
fcoms
mov
push
ss
js
or
mov
adc
in
jne
pop
int
mov
add
lods
adc
mov
pop
or
mov
mov
and
cmp
rolb
push
lret
sbb
popa
loopne
loopne
xor
mov
sub
or
or
daa
js
test
jbe
push
or
rolb
and
dec
movsb
xor
sbb
rclb
push
adc
rorl
push
push
cltd
jecxz
xchg
adc
sub
xchg
sbb
sbb
inc
xor
or
pop
sbb
movsb
shl
inc
mov
add
mov
sbb
lds
popa
jmp
les
inc
mov
pop
push
xor
jne
mov
hlt
pop
inc
add
mov
mov
inc
mov
add
mov
jne
fs
add
add
adc
pop
cmp
shlb
aas
push
roll
test
add
dec
mov
lds
push
nop
add
insb
jne
inc
adc
int3
push
xor
adc
sbb
dec
or
push
jns
push
fidivrl
adc
test
je
push
ljmp
jne
test
cwtl
or
push
and
add
jecxz
sti
jno
pusha
mov
jp
je
inc
fldl
icebp
lea
push
adc
or
mov
aaa
xchg
adc
cmp
ret
add
clc
mov
imul
mov
and
jbe
and
or
adc
xor
pop
and
test
or
or
out
fldt
sti
or
test
fadds
or
adcb
inc
dec
movb
xchg
mov
sub
push
xor
sub
movsb
mov
lret
xchg
xchg
mul
dec
mov
or
imul
push
mov
mov
add
mov
adc
xor
ret
pop
pusha
mov
sub
mov
push
ja
xor
stos
mov
pushf
popa
inc
fistpl
or
sub
cmpsb
adc
cmp
inc
hlt
dec
and
repnz
aad
jecxz
ret
push
inc
sub
sub
add
inc
sarb
fdiv
lret
repnz
mov
inc
xor
inc
movsb
sar
add
test
cmp
pop
sub
push
or
sti
or
gs
shlb
add
sbb
rcll
inc
pusha
data16
push
or
cmc
mov
and
jmp
add
jl
adc
loop
or
imul
mov
xchg
sbb
jne
ja
rdpmc
mov
jp
fmuls
xor
test
subb
out
sbb
shrl
andb
lea
cld
dec
sbb
mov
push
jge
arpl
adc
dec
sarb
in
jmp
movl
pushf
out
loopne
in
rcrb
mov
int
je
push
insb
push
lretw
push
cmp
pop
addl
dec
jecxz
adc
or
jne
pop
fldt
or
push
dec
cltd
pop
mov
pop
aad
sti
decl
mov
pop
xor
cli
add
pop
sub
movsl
ljmp
xor
inc
xorb
rol
pusha
or
xchg
xor
mov
inc
aad
or
loopne
dec
ficompl
pusha
add
rclb
aam
mov
push
xchg
xchg
stos
and
mov
adc
dec
or
mov
hlt
rol
add
push
in
sbb
inc
iret
repz
push
repnz
add
add
adc
clc
push
fstpt
mov
loopne
js
pusha
test
test
push
inc
sti
inc
add
push
imul
fcoms
xchg
in
loope
sub
mov
or
jle
adc
cmp
add
or
jg
jb
sbb
cmp
add
pop
iret
or
je
mov
paddusb
idiv
rol
or
jg
mov
adc
aam
or
addl
shr
or
daa
loope
or
push
sbb
jmp
dec
je
add
or
pop
pop
jnp
jmp
pushf
bound
insl
sbb
fstp
inc
add
sub
sbb
and
imul
sub
push
push
fildll
push
lea
push
test
mulb
dec
push
dec
pushf
add
sbb
cmp
xchg
lcall
push
push
addr16
jne
mov
mov
pop
add
dec
into
lahf
orb
inc
jne
pop
sbb
lcall
test
jl
xchg
push
je
cmp
and
jnp
dec
xchg
cmovp
arpl
pop
or
or
jg
mov
mov
imul
mov
iret
or
sub
js
jbe
leave
add
mov
add
jmp
rorb
add
clc
push
and
sub
aad
dec
dec
les
push
pop
inc
and
rorb
or
push
fdiv
and
add
add
jecxz
cmp
into
and
lock
lods
orb
add
arpl
pushf
add
mov
push
mov
adc
sbb
das
xlat
mov
push
add
int3
inc
sub
mov
jmp
lcall
sbb
pop
sub
dec
rolb
sub
adc
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
cwtl
addb
popa
or
mov
pop
jle
mov
cmp
aaa
push
pusha
ss
cli
or
lea
inc
xchg
xchg
and
dec
pop
shll
push
scas
mov
cmp
add
mov
push
decl
das
ficomps
dec
cmpsb
pushl
sub
xor
add
sub
push
add
clc
pop
pop
out
outsb
dec
mov
mov
sub
or
orb
sarb
sbb
xchg
hlt
push
push
dec
push
mov
sbb
mov
add
adc
lret
push
push
add
dec
cmpsb
mov
push
inc
lods
movsl
fldl
push
stos
sbb
mov
rol
scas
sub
cmp
push
mov
mov
push
sarl
inc
xor
bound
pop
icebp
lahf
out
jnp
jns
add
inc
cmp
pop
stos
fdivrl
xchg
clc
push
mov
stc
mov
rorl
mov
int
imul
add
cwtl
jmp
loopne
inc
shlb
pop
adc
push
lods
mov
aaa
dec
or
je
ret
mov
sbb
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbbl
or
pop
mov
push
je
xor
sub
shrb
popa
cmp
jne
or
push
cltd
pop
jne
push
dec
pop
sets
xchg
fisubl
mov
int
push
mov
jg
pop
das
in
add
aam
int3
push
push
add
pop
loope
mov
inc
fdivrs
mov
fs
lret
inc
dec
out
jo
add
scas
push
jne
push
adc
mov
xlat
and
xor
lahf
mov
mov
cwtl
jge
orb
add
inc
jns
das
scas
aaa
jb
jae
push
fstpt
mov
cwtl
hlt
enter
orl
mov
push
pop
and
jmp
inc
and
ss
mov
push
je
lea
cltd
inc
jl
jge
sahf
lods
add
outsl
ljmp
pop
movsb
adc
xor
xor
aam
pop
lret
movsb
sbb
dec
add
push
mov
test
adc
test
iret
fs
xchg
lcall
dec
in
cmp
and
in
jl
pop
imul
test
push
add
jmp
shll
inc
stos
ret
lahf
or
orb
out
div
lods
addr16
sbb
outsb
loopne
cmp
inc
or
adc
rcrl
dec
cld
jmp
adcb
pop
push
movlps
and
xchg
add
push
shr
and
mov
scas
sub
ja
pop
push
ja
or
mov
rorb
add
mov
inc
dec
call
cmpsl
dec
inc
pop
sub
xchg
and
cmp
push
inc
popf
jmp
mov
pop
mov
dec
pop
in
push
leave
cmp
xlat
mov
push
lahf
repnz
jle
mov
cmpsb
mov
std
fsubrl
xchg
ret
pushf
sar
jmp
dec
mov
rcrb
adc
icebp
movsl
ljmp
jbe
pop
jne
mov
in
les
sahf
addr16
jp
arpl
add
add
inc
repnz
xor
aad
jae
add
mov
mov
fidivl
jae
aad
lods
xchg
cvttps2pi
xchg
pop
push
mov
pop
push
leave
pop
les
adc
sar
add
add
gs
fdivrp
mov
add
nop
or
inc
adc
mov
dec
jmp
jns
lods
xchg
push
aam
mov
jns
les
add
loop,pn
sahf
push
or
call
mov
fisubrs
xchg
pop
nop
push
mov
mov
lcall
pop
rolb
fidivrs
mov
push
dec
jns
out
push
pop
pusha
push
loop
inc
repz
push
movsb
mov
or
pop
inc
xchg
inc
lods
cmp
inc
push
test
les
push
mov
or
push
pop
cmp
int
adc
sub
pushf
adc
mov
shlb
push
inc
fmuls
testb
jne
push
fldcw
sbbl
lock
dec
jle
rol
cli
add
push
pop
pusha
add
loopne
jmp
push
mov
jne
lods
and
push
stc
sbb
xor
fcoml
add
mov
inc
and
cmp
mov
jne,pn
out
or
push
scas
push
andl
and
rep
addr16
push
pop
sbb
or
popf
push
andb
xor
inc
notb
cmpl
fbstp
jle
in
push
fnstsw
and
jns
orb
inc
cmp
in
add
daa
ljmp
popa
xor
popa
add
mov
insl
mov
iret
add
test
add
inc
enter
daa
dec
sbb
push
adcb
push
adc
xchg
mov
jns
adc
xor
add
int3
or
int
xor
adc
test
add
sbb
pushl
sbb
in
jge
push
lock
daa
pop
call
test
mov
rcrl
cmpsb
and
enter
lcall
and
dec
mov
movb
jmp
ret
shrl
leave
sub
std
add
mov
aam
mov
mov
xchg
push
rolb
mov
subl
shll
lock
adc
or
cmp
adc
cmp
sub
inc
test
orb
jge
mov
xor
jne
std
pushf
mov
cwtl
or
mov
push
sub
movsl
jge
stc
pop
pushf
nop
clc
lods
test
add
divl
mov
add
fdivl
scas
mov
and
push
adc
imul
mov
imul
shl
jle
sti
rolb
out
lock
xor
jb
test
mov
add
xchg
aaa
push
and
pushf
sub
lea
xor
mov
test
and
pushf
xchg
andl
or
jo
mov
sub
mov
xor
std
gs
fcoml
shrb
mov
jle
clc
or
cmp
das
das
test
movsl
shrb
les
add
hlt
mov
cld
xor
xor
adc
pop
in
xchg
sbbl
stos
clc
jno
insl
push
jne
daa
aad
insb
repnz
jmp
cli
inc
in
jo
imul
push
inc
hlt
insb
ss
ljmp
cmp
add
call
ja
int3
lcall
in
add
and
add
test
clc
or
add
fimuls
and
shr
pop
xchg
outsl
and
dec
lods
jecxz
xchg
push
mov
adc
test
jge
mov
xor
push
loopne
xor
push
inc
fisubrs
fdivs
scas
je
and
or
inc
rolb
fmuls
jp
movsb
notb
loope
pop
divl
push
js
mov
aaa
push
inc
pushf
mov
dec
inc
adc
call
sbb
pop
pushf
call
jns
stc
adcb
add
jbe
mov
mov
lods
add
add
inc
test
push
cmp
or
ret
sti
cmpb
and
jle
or
push
push
mov
cmp
inc
or
fimuls
or
jns
mov
aam
test
sub
push
in
das
dec
sbb
cmpb
lret
in
mov
loopne
mov
cs
hlt
fdivrs
pop
sub
cmp
movsb
sub
xchg
push
cmp
mov
or
in
xchg
shrb
stos
jp
test
popf
out
rclb
xor
lods
call
sbb
sbb
or
sbb
lahf
into
pop
add
cmpl
sar
cltd
lea
jbe
bound
jo
ja
cmp
mov
repz
shlb
inc
sbb
dec
cld
push
sar
pop
mov
loop
cwtl
cmpsb
xchg
push
jp
push
sbb
lea
in
jmp
clc
xor
push
fisubl
lret
adc
or
je
or
lea
mov
ds
enter
jnp
pushf
pop
or
add
xchg
arpl
rcll
mov
sub
cmpsl
push
push
adc
loop
dec
pop
mov
and
arpl
push
cwtl
and
shlb
movsl
mov
in
inc
cmpsb
mov
hlt
adc
test
sbb
outsb
mov
lock
or
inc
insb
test
test
ss
adc
or
inc
cmc
ds
xchg
pusha
sub
xlat
scas
popa
sbb
pop
and
outsb
ss
js
add
movb
inc
xor
push
jbe
popf
movsl
cld
incl
xchg
cmpsb
or
adc
outsl
int
mov
js
in
imul
mov
sbb
call
test
xchg
or
pusha
add
das
add
imul
jb
mov
inc
je
pop
push
lcall
add
cwtl
cs
adc
repz
movsb
dec
insb
popf
adc
dec
or
push
lcall
lea
and
arpl
imull
shll
shll
call
dec
xorb
ja
mov
cmp
in
push
mov
or
xor
rorl
mov
push
add
xchg
testb
jb
push
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
nop
xor
cmc
pushf
daa
rcrb
addl
dec
mov
sbb
ss
cmp
mov
sub
loope
adc
push
sbb
or
test
nop
stc
pop
loop
push
mov
icebp
daa
rorl
jnp
aas
dec
pop
jmp
mov
inc
lods
roll
lret
mov
mov
dec
mov
adc
sub
mov
movswl
mov
addr16
insb
cmp
mov
pop
mov
push
test
adc
imul
mov
add
addr16
lea
pop
stos
pusha
je
or
sub
rol
mov
fsubrs
scas
imul
xchg
adc
clc
aaa
gs
or
xor
mov
sbb
mov
push
adc
inc
fisttps
mov
sbb
or
and
push
cmpsb
cmpsl
shl
cmpsl
add
push
add
mov
push
jne
add
mov
hlt
jmp
cmp
jle
lahf
jecxz
popf
imul
push
test
pop
push
mov
dec
movsb
sbb
pop
and
fimull
movsl
jo
jbe
aam
or
dec
nop
cmp
jmp
jl
js
pop
jb
mov
jp
cli
mov
mov
nop
mov
mov
and
jl
push
add
push
push
mov
sbb
inc
sbb
cmpb
jne
and
push
jg
je
data16
jecxz
hlt
mov
jae
cmpsl
dec
pop
ljmp
xlat
ja
jo
inc
daa
add
and
adc
push
push
decb
mov
push
into
xor
cmp
bound
scas
xchg
shl
je
and
sub
sbb
mov
ret
dec
mov
cltd
jmp
xchg
sub
cltd
andb
xchg
aad
in
adc
jl
jae
xchg
push
and
sbb
fidivrl
adc
mov
jnp
or
jno
psrlq
adc
dec
xchg
clc
les
mov
or
mov
sbb
push
popa
lea
inc
mov
push
inc
mov
mov
stc
cltd
push
push
push
jmp
jl
shll
aas
repnz
jl
in
cmp
sahf
add
jmp
sub
dec
sub
cmp
adc
cmpb
je
pushf
pop
sub
or
call
data16
movsb
aas
mov
es
cld
mov
fsubrs
aas
sar
or
dec
fs
test
or
mov
sub
push
add
sub
adc
push
nop
adc
jl
add
mov
mov
ja
shrl
mov
cmp
out
test
jne
jmp
and
addr16
js
dec
adc
or
push
pop
scas
dec
and
fidivrs
dec
or
push
into
test
or
mov
shrb
adc
iret
or
mov
imul
fs
aam
in
xorl
popa
jo
or
push
adc
movsb
sub
mov
ret
and
fsubrl
dec
loopne
cltd
fst
add
mov
jg
jmp
adc
fldl
and
scas
pushf
adc
cwtl
mov
je
gs
das
fwait
pushf
jp
sbb
filds
jnp
mov
pop
mov
cli
mov
adc
mov
mov
or
enter
mov
jge
mov
jmp
adc
stc
pop
sahf
insl
mov
ret
js
bound
jo
jle
iret
mov
xor
sbbl
or
adc
inc
aam
mov
xor
push
mov
stos
adc
outsb
cmp
xlat
popa
cmc
xchg
pop
pop
imul
pop
adc
int3
shl
rcrl
cmc
add
adc
clc
incb
gs
xchg
mov
add
insb
daa
adcl
cmpb
rcrl
pinsrw
and
inc
pop
popa
lea
lea
push
insl
sub
lods
subb
or
and
inc
idivl
in
or
xchg
xchg
push
dec
add
or
mov
mov
cli
and
test
lods
movsb
sub
jl
aam
jbe
pop
stos
adc
jo
pop
mov
add
dec
pop
ret
pop
or
adcb
inc
inc
pop
not
inc
xchg
add
call
int3
je
mov
or
mov
dec
call
cmp
mov
pop
and
fistpl
sub
push
rolb
adc
lahf
sti
adc
pushl
insl
and
in
pop
call
lahf
and
add
push
fnsave
mov
fisttpll
add
stos
clc
push
faddl
or
notl
adc
jmp
shlb
imul
loopne
stos
mov
loopne
jge
xor
rcl
sub
jmp
les
mov
or
dec
pop
add
addr16
jl
popa
into
push
repnz
sbb
pop
xor
xchg
je
add
les
inc
add
jge
int3
loopne
lods
aam
jle
lds
dec
mov
or
jb
jne
mov
lds
sbbb
pop
push
xor
jbe
push
push
and
sub
lahf
addl
insb
add
add
dec
pop
and
imul
sub
push
xchg
addb
pop
rorb
popl
icebp
or
lcall
fcoms
push
jnp
mov
sbb
inc
xor
rclb
sahf
or
btc
ds
xor
xor
xchg
es
ss
divps
pop
jae
sub
add
sbb
cld
sub
inc
roll
notb
mov
stos
sub
mov
xchg
mov
mov
sub
jne
int3
sub
xor
in
xchg
push
into
xchg
popa
mov
push
pop
movd
add
cli
loope
hlt
arpl
lret
fcoms
jl
inc
inc
xchg
cmp
inc
mov
sbb
cmp
jo
pushf
or
loop
lea
out
and
or
cmc
xchg
imul
jo
pop
leave
inc
dec
inc
add
aad
xchg
add
sub
adc
add
lea
sbb
icebp
pop
cmpsl
push
jns
inc
cwtl
cmp
mov
mov
inc
push
stc
inc
add
xor
cmp
jb
pop
jl
jmp
fnstcw
xchg
mov
xor
push
aas
fisttpll
test
cmp
fidivrl
insb
fldl
pushf
fisttpll
fwait
dec
jl
loopne
xor
test
mov
cmpsb
ss
lock
sbb
lock
addr16
dec
fadds
leave
mov
mov
xor
dec
adcb
jb
adc
xorb
lock
xor
push
sbb
pop
imulb
sbb
cmc
xchg
dec
call
push
cld
mov
and
sti
insb
and
rolb
dec
xchg
inc
addl
sub
xchg
mov
jp
sbbb
dec
call
fnstenv
jg
dec
jl
outsb
fiadds
sbb
push
test
hlt
and
scas
or
leave
cmp
or
mov
add
lcall
das
mov
outsb
mov
xchg
push
and
aad
push
pop
and
jle
mov
je
rcrl
mov
xchg
push
adc
mov
adc
loop
dec
mov
fistl
fdivs
cmp
dec
adc
lret
test
mov
lea
popa
mov
add
inc
mov
push
fmuls
test
push
out
inc
pop
xchg
mov
xor
mov
pop
inc
pop
inc
push
add
cmp
adc
inc
shlb
xor
dec
add
pop
adc
cmpb
cmp
lcall
aas
sub
das
pop
pop
jg
jmp
ret
add
pop
jo
test
lods
addr16
dec
xchg
dec
popf
in
jbe
xchg
dec
lods
clc
hlt
mov
mov
adc
mov
popf
rcrb
and
insb
jne
dec
sub
iret
xchg
mov
dec
cs
call
sub
loopne
bound
rcrb
pop
ficomps
cmp
js
mov
movzbl
xchg
hlt
lods
add
or
test
cs
push
dec
iret
adc
pop
addr16
repnz
mov
ja
in
cmovae
lods
imul
stos
out
sahf
dec
and
pop
les
and
shll
fcom
ljmp
push
fstpl
in
fwait
pop
add
sbb
lea
lds
adc
cmp
add
pusha
adc
lods
aaa
in
mov
aas
jno
insb
imul
jb
mov
and
fistpll
and
mov
icebp
xchg
push
inc
sbb
pop
enter
insb
jne
mov
sbb
lods
imulb
mov
insb
jg
mov
sbb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
cmp
pushf
sub
sbb
jo
dec
jae
push
rcrb
dec
mov
in
je
mov
sbb
add
or
mov
mov
je
sub
lock
pop
xchg
jecxz
lea
and
ja
sbb
dec
push
enter
mov
mov
iret
outsl
fstps
adc
fcmovne
jo
dec
inc
mov
ja
lret
nop
mov
mov
jne
rcrl
imul
sbb
js
and
lods
add
xchg
sub
pop
popa
adc
cmpb
lds
sarb
and
fidivrs
pop
enter
outsb
and
outsb
in
popa
sbb
je
jno
sbb
mov
cli
sbb
call
add
jns
ljmp
out
jb
mov
jg
incl
fimuls
cld
mov
push
mov
push
push
dec
adc
call
lea
je
out
test
sbbl
xor
push
cld
dec
cs
jecxz
pop
pop
dec
popf
push
push
ja
mov
loopne
inc
push
aas
cmp
and
push
stc
in
mov
jg
fdivs
call
pushf
push
into
sbb
inc
sub
or
cmpsb
mov
push
pop
push
mov
lret
je
adc
push
popa
imul
pop
aaa
mov
lods
in
in
jae
sub
adc
loopne
jb
xor
cmpb
or
jns
rorb
dec
push
add
leave
lds
dec
xor
add
fsub
outsb
lea
jns
dec
xor
add
test
lea
rclb
and
push
leave
add
mov
aam
inc
push
and
aam
jbe
fists
pop
in
and
sahf
mov
js
and
pop
mov
test
cmp
add
pop
add
cmc
or
adc
fisttpl
test
test
push
fdivp
cmp
add
mov
xlat
hlt
adc
scas
aaa
nop
pop
xchg
lret
jbe
mov
cld
dec
pop
js
xchg
imul
sub
mov
lea
xchg
aam
repz
push
dec
dec
mov
clc
mov
ret
xchg
adc
sub
in
mov
fwait
rcll
outsb
repnz
jmp
mov
mov
inc
jle
push
mov
pusha
das
mov
das
add
add
adc
dec
fdivrs
or
dec
add
inc
push
dec
jno
adc
loope
mov
dec
shr
lds
sub
movb
or
popa
mov
mov
jne
or
cmp
and
or
sti
inc
add
sub
or
mov
xor
shlb
fisubrs
sbb
jo
sbb
sarl
int
add
xchg
push
sbb
in
jp
push
add
add
ja
mov
xor
or
mov
and
outsl
cvttps2pi
or
adc
cmp
dec
test
lock
push
cld
aas
xor
sub
ret
fs
add
or
or
jb
jne
fs
add
push
pop
pop
sub
mov
mov
inc
pushf
push
in
add
sbb
stc
daa
or
or
dec
add
add
cwtl
cli
fmull
addb
add
cmc
mov
mov
pop
jmp
sbb
push
popf
out
cli
out
lea
addb
push
sub
mov
outsb
mov
xchg
or
sub
add
gs
or
cld
dec
add
push
notb
imul
push
into
push
mov
sub
cmp
fsubrl
addr16
sbb
dec
and
mov
push
orb
mov
lods
jmp
and
and
sub
pop
mov
xlat
mov
arpl
mov
leave
sub
mov
mov
lea
and
mov
and
lea
cli
sbb
fcmovnbe
or
jmp
dec
addl
dec
add
clc
ja
mov
add
insb
adc
fidivs
in
cmpsb
adc
das
mov
imull
movsl
add
pop
mov
fdivrl
xor
loopne
jo
and
mov
xchg
mov
mov
xor
out
pop
insb
push
jo
xchg
adc
mov
shll
xor
jb
inc
shl
jne
movl
inc
inc
outsb
pop
pop
inc
cmp
std
jne
sahf
adc
sti
mov
pop
mov
jmp
add
jmp
xchg
and
and
leave
hlt
xor
pop
pop
xchg
sbb
lea
push
notl
cmp
push
mov
movb
or
sbbb
cmp
into
std
cmpsb
movsl
frstor
jmp
inc
in
movsl
mov
mov
das
push
and
push
aaa
inc
pop
les
rolb
jnp
cmp
push
cmp
or
push
call
pop
jmp
mov
lock
test
sbb
pop
inc
inc
sub
inc
sbb
int
and
lea
outsb
push
subb
xchg
mov
enter
stos
jmp
adc
imul
loopne
cmpb
or
lcall
or
faddp
add
shlb
inc
into
jge
rol
fnstsw
add
jb
mov
scas
popa
add
inc
push
push
loopne
jl
xchg
in
mov
adcb
push
fadds
fstpl
dec
push
dec
jne
mov
dec
out
xchg
push
dec
loopne
leave
jle
sbb
jecxz
call
inc
jbe
mov
dec
or
inc
dec
jne
adc
sahf
cld
scas
stos
mov
jmp
add
cmpsb
addr16
jnp
inc
mov
jmp
cmp
enter
push
add
es
pop
fwait
mov
lcall
push
or
sub
adc
loop
in
cmp
inc
popa
push
test
cmc
das
test
xor
jb
mov
and
add
pop
jno
jmp
or
jmp
xchg
pop
push
dec
jbe
cmp
dec
stos
pop
push
aam
xor
xlat
testb
insb
ljmp
add
add
ljmp
sti
lock
or
xor
bound
ss
add
icebp
std
insl
xor
rorb
call
imul
or
mov
mov
add
scas
add
pusha
sbb
aaa
test
ljmp
insl
adc
jno
daa
ljmp
xchg
loope
xor
int3
and
cmp
adc
pop
push
push
mov
js
aam
jle
pop
xchg
sbbb
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
mov
or
aas
test
jnp
xor
int3
mov
mov
aaa
cmpl
ret
das
dec
cmp
adc
orb
fcoml
xchg
mov
outsl
jmp
aaa
xor
test
sbb
enter
clc
aas
cld
dec
rcrb
ret
je
mov
xorb
mov
arpl
pop
and
loop
imul
pushl
imul
lcall
adc
jno
inc
inc
sbb
sub
xchg
xchg
lods
or
sub
and
adc
xor
test
cwtl
daa
cmp
sbbl
lea
dec
xchg
mov
or
inc
call
pop
cld
adc
fadds
sub
jns
add
cmp
inc
push
xor
mov
sub
jbe
add
stos
cwtl
cmp
cwtl
stc
or
mov
cltd
pusha
sub
dec
mov
aam
test
xchg
lock
jle
test
push
add
mov
mov
insb
leave
lcall
pop
fwait
gs
pop
push
out
daa
cwtl
add
pop
clc
ret
or
mov
test
sub
les
hlt
mov
test
jl
mov
inc
test
scas
dec
mov
or
rcr
push
push
scas
push
lret
repnz
sub
inc
inc
movl
outsb
xor
shlb
jo
lods
mov
insl
inc
or
imul
jg
jo
mov
lahf
xchg
pushf
xchg
clc
rcll
ret
mov
scas
subl
bound
pop
dec
pop
arpl
and
push
imul
repz
sbb
dec
mov
sub
pop
cmp
shlb
xchg
cmp
ds
xorl
test
adc
mov
out
fnstenv
not
call
xchg
push
adc
lret
or
xor
pusha
mov
mov
inc
sub
enter
xor
inc
push
enter
dec
pop
cmp
dec
and
jle
jmp
sbb
jmp
cmpsl
bound
push
dec
sahf
push
cli
mov
and
jbe
and
daa
add
pop
cmp
aaa
push
sahf
xchg
mov
mov
jg
mov
push
adcl
add
fnstenv
push
or
subl
mov
gs
jnp
xor
movsb
cmp
and
scas
push
iret
aam
inc
push
daa
inc
or
aam
add
mov
or
adc
jo
jle
mov
stos
idivl
ja
mov
adc
or
adc
mov
pusha
sub
push
fs
in
push
inc
pop
fldt
stos
add
call
push
xchg
arpl
xorb
aas
fwait
sub
stos
popf
out
shlb
es
xlat
xchg
sbb
pop
mov
push
add
mov
adc
ds
add
sub
aam
cmpb
mov
test
mov
jmp
or
jmp
add
imul
int
jmp
inc
ja
xchg
sbb
xor
fs
filds
sub
add
sbb
enter
or
xor
dec
sub
adc
pcmpgtd
out
rclb
cli
or
cmp
jg
loop
shr
je
je
xchg
rcr
jg,pt
push
inc
adc
and
push
test
int3
sbb
loope
lea
shlb
pop
add
add
mov
adc
divb
xor
daa
add
vcvtdq2ps
sub
jne
push
je
sbb
inc
cli
pop
pop
ret
inc
fcmovne
outsb
pop
sbb
rcrl
push
mov
bound
add
cli
shll
mov
pop
sbb
pop
jge
mov
or
or
jb
std
into
loopne
notb
xchg
mov
or
add
mov
jbe
push
adc
mov
push
movsl
sar
fistpll
shll
enter
or
push
dec
add
sub
mov
mov
je
cli
xchg
jle
push
adc
inc
popf
dec
in
push
mov
and
pop
mov
data16
sbb
add
lods
lods
test
ds
movl
add
mov
inc
xorl
dec
fnstenv
mov
push
push
mov
cwtl
in
or
add
inc
or
data16
int
push
fldl
or
mov
sarb
add
jle
fs
or
mov
in
imul
or
xchg
out
js
cmpl
mov
jb
fnstenv
pop
add
into
das
add
pop
test
dec
pop
pusha
mov
add
and
sbb
xor
insl
adc
jmp
adc
jmp
add
xchg
out
pusha
push
push
lahf
icebp
jmp
stos
mov
fs
or
sbb
imul
sbb
pop
jae
pop
stc
cmpsl
xor
rcll
jae
jno
fwait
xchg
jmp
lahf
fnstenv
aam
orb
dec
popw
les
ror
mov
adc
subl
ret
fstl
mov
icebp
lds
mov
pop
adc
loop
aas
mov
jns
fists
call
sahf
int
movsb
or
adc
xor
inc
add
cld
pop
xor
pusha
sti
daa
xor
push
sbbb
es
mov
outsl
mov
jne
inc
pop
or
pop
test
pop
adc
xchg
out
and
inc
and
ret
add
pusha
ja
push
push
cltd
jmp
inc
faddl
xorl
dec
test
sti
push
jmp
push
push
fdiv
clc
sti
lcall
inc
inc
jp
xchg
and
ret
and
push
push
test
fs
mov
es
lock
sbb
adc
arpl
mov
rcl
dec
std
outsl
mov
test
cld
divl
adc
jnp
jmp
je
inc
mov
sbb
mov
adc
jne
lea
mov
shrb
icebp
sti
ja
add
les
mov
push
mov
shll
add
fucomip
stos
bound
shlb
loopne
add
sbb
or
ds
ret
loopne
sub
pusha
mov
or
lock
popa
jne
es
mov
sub
scas
movsb
mov
aad
add
sub
or
movsb
jbe
inc
dec
repz
mov
jb
pop
lock
int3
ret
std
and
mov
std
pop
mov
ljmp
mov
pop
mov
xchg
mov
lea
lret
and
stc
dec
mov
dec
ret
push
xlat
mov
fldcw
rorb
mov
loope
fadds
mov
cmp
mov
ljmp
mov
mov
loopne
or
sub
cmp
mov
sbb
xchg
sub
mov
xor
sti
shlb
ret
mov
xchg
lret
int3
lock
pop
push
and
sub
push
dec
dec
lret
xlat
sub
push
pop
add
adc
xor
add
sbb
xchg
cmp
fistl
sahf
test
notl
mov
xor
leave
test
call
clts
test
mov
dec
jne
add
push
or
or
popa
sub
push
inc
sub
pop
aad
jmp
ficoml
pop
and
push
cmpb
and
ja
cmp
inc
pop
inc
addr16
movsl
cmp
inc
cmp
push
ds
ss
js
cmp
es
push
mov
sub
add
test
cmp
xor
arpl
shrb
pop
inc
in
mov
adc
inc
sahf
scas
test
pop
movsl
pop
xor
sub
mov
or
xor
aad
stos
sub
push
js
xchg
lods
lock
mov
dec
sub
cmpsl
cmp
jb
dec
push
add
adc
jmp
adc
std
dec
mov
testl
scas
icebp
ret
xchg
lret
jnp
or
xchg
stos
loopne
mov
cmp
aam
jo
jecxz
lcall
pop
aam
jmp
mov
rcrb
push
sub
jno
call
mov
rorb
xchg
daa
lods
cmp
dec
adc
lea
add
cmp
pop
pop
sbb
test
add
and
mov
cs
xor
adc
cmpb
jne
ljmp
ja
imul
cmp
push
mov
adc
adc
out
or
mov
fcmovnbe
and
aaa
inc
shl
scas
imulb
or
pop
lea
orb
dec
loopne
mov
call
sub
pop
fs
adc
push
cmp
add
push
jno
or
cmp
scas
aaa
mov
sahf
test
fbstp
inc
mov
push
cwtl
stos
xchg
std
test
popa
ffree
cmp
out
or
pusha
push
inc
notl
sbb
cmp
sub
into
out
cmp
push
dec
cmp
call
cmp
loope
pop
in
test
mov
enter
in
dec
or
ret
cmp
inc
movsb
lds
lcall
push
adc
cs
scas
or
push
lods
lret
inc
adc
adc
sub
mov
sbb
adc
inc
dec
sub
fcoms
neg
ret
cmpsl
add
cmp
aas
jmp
das
out
test
movsl
lea
je
das
pop
enter
adc
in
cmp
cmp
xor
push
mov
sbb
xchg
fadds
bound
add
add
dec
rcr
mov
in
or
ss
sti
xchg
mov
mov
enter
add
dec
xchg
inc
dec
gs
push
mov
xchg
cmp
xchg
push
sub
mulb
jl
jmp
call
adc
mov
xor
out
ljmp
jl
sub
sbb
fwait
or
mov
pushl
sahf
xchg
or
lods
cmpsl
sub
in
or
adc
jmp
rcl
xchg
mov
xor
adc
les
je
jb
xchg
jne
push
mov
popa
add
lea
push
xor
in
add
nop
sbb
mov
cmpl
mov
dec
ficoml
jbe
cmpsb
jmp
sbbl
or
popa
ja
in
dec
pusha
dec
push
add
je
push
mov
inc
imul
jnp
fists
ffreep
mov
jle
pop
mov
mov
ficoml
push
dec
js
lcall
addr16
cmpsl
movsl
adc
push
sbb
test
test
xchg
jns
rcr
cs
push
testb
stos
imul
cmp
loop
add
add
loopne
enter
sbb
sub
or
or
or
and
leave
nop
test
jb
test
mov
add
sbb
push
mov
adcl
push
pop
lea
pop
or
pop
out
rolb
movsl
or
jo
mov
mov
and
xchg
jno
push
popa
repnz
push
pop
sbb
fisubrl
push
movsl
pop
add
lea
or
dec
les
movsl
outsb
fs
das
scas
movsl
push
cmpsl
in
fnstsw
mov
mov
cmpsl
xor
scas
aad
cmpsl
mov
adc
and
inc
dec
aaa
outsb
shll
enter
xor
test
or
xchg
stos
arpl
dec
es
push
xor
push
test
xchg
pop
jb
mov
and
sti
mov
inc
sbb
call
movsb
mov
push
cmp
mov
sub
push
lods
daa
xchg
fidivrs
call
xchg
add
dec
addb
add
movsb
or
in
inc
fucom
sbb
stc
decb
cld
push
inc
fcompl
cwtl
cmpsl
and
xor
sbb
add
or
mov
test
dec
inc
mov
push
mov
and
cmp
push
mov
mov
addr16
push
leave
dec
mov
add
arpl
push
nop
inc
dec
mov
cmp
stc
movsb
repnz
inc
push
dec
push
cwtl
pushf
dec
push
dec
xchg
nop
dec
mov
push
pushf
nop
add
cwtl
add
leave
mov
cmp
punpcklwd
negb
ret
insb
lcall
hlt
arpl
xor
in
sub
dec
jle
cmpb
mov
xor
stos
mov
xchg
sbb
notb
aas
dec
loopne
mov
roll
xchg
sub
sub
clc
jmp
mov
inc
js
addb
shrb
pop
inc
mov
xor
mov
xchg
rolb
add
add
test
popl
or
sub
imul
sbb
push
icebp
adc
jmp
and
xor
mov
out
mov
push
jmp
sub
cwtl
add
adc
jbe
push
jg
mov
dec
stc
sbb
les
dec
or
subl
push
xor
fmuls
insl
sub
testb
enter
shlb
add
aaa
dec
ljmp
or
outsb
cltd
pop
and
or
into
rcrb
push
daa
lea
xchg
test
mov
in
sbb
popl
popf
adc
pop
or
les
dec
stos
or
dec
icebp
loope,pn
and
ljmp
iret
idiv
pop
outsl
push
push
dec
adc
push
and
fwait
out
mov
pop
outsl
dec
clc
jl
inc
or
jbe
jle
cmpl
cmpsb
outsl
ja
jo
jle
daa
ret
jge
jne
push
push
int3
sbb
in
mov
adc
jg
ffreep
lea
lea
inc
out
lret
and
sub
fwait
mov
shrb
mov
xor
dec
jo
mov
or
mov
push
inc
inc
push
negl
ret
mov
mov
shrb
lret
ret
mov
sar
jae
call
jecxz
and
inc
dec
xor
test
outsl
and
pop
into
sbb
adc
pushf
jbe
jmp
sbb
and
sbb
push
push
dec
or
ror
loope
sub
push
lret
add
sub
leave
sbb
inc
bts
jmp
mov
sbb
test
push
or
out
xchg
les
pushf
imul
incb
cmpl
jne
inc
adc
xchg
mov
xchg
sbb
and
cmp
sub
add
orl
call
adc
or
push
cmp
rol
push
mov
cwtl
out
add
adc
jae
xor
ror
mov
jns
mov
jne
rclb
sbb
and
popl
mov
mov
pusha
xor
icebp
orb
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
and
scas
roll
test
jmp
rcll
adcb
pop
cwtl
sbb
pushf
xor
adc
add
xchg
xchg
sub
ja
mov
hlt
sub
sbb
mov
mov
out
pop
inc
ja
adc
fsubl
or
out
cmpb
push
ja
jo
xor
adc
out
add
adc
stos
fisubrs
stc
out
movsb
inc
push
sbb
pop
adc
fcomps
mov
or
jmp
inc
fmuls
outsl
mov
jbe
add
les
fisubs
jle
jno
inc
inc
sbb
out
dec
call
xor
pop
add
incl
dec
and
mov
pop
pop
ljmp
dec
adc
add
inc
imul
adc
pop
andl
mov
shrb
imul
inc
push
push
push
adc
cld
add
push
ret
cli
gs
fndisi(8087
arpl
cld
enter
or
jne
dec
dec
insl
sub
dec
decb
push
call
out
mov
add
xor
fidivrl
movsl
insl
inc
loop
adc
jmp
or
loopne
inc
cs
je
cmp
cmp
dec
mov
mov
js
and
cld
xchg
mov
int3
ljmp
popa
push
pop
jle
add
and
mov
add
sbb
cwtl
inc
pop
xchg
or
push
mov
jnp
or
adc
inc
inc
call
lods
ds
and
mov
out
mov
cmc
jmp
push
shlb
fcomi
pop
xor
loop
cmp
add
scas
decb
mov
pop
clc
int3
int3
xor
ljmp
push
cmp
mov
jbe
pop
gs
xor
lea
add
add
push
xor
fstl
icebp
inc
cmp
lea
sahf
push
xchg
dec
call
loope
xor
pop
negl
sbb
pushf
dec
and
js
and
adc
call
sub
lea
push
fnstenv
or
push
loope
xor
popa
out
and
pop
dec
cmp
sbb
push
std
push
push
pop
push
int
sarl
leave
xlat
lea
xchg
ror
add
ss
dec
lock
mov
adc
mov
std
ffree
inc
and
xor
dec
inc
cld
outsb
mov
mov
movb
push
add
mov
mov
mov
xchg
call
push
add
pop
out
sub
add
mov
ja
fidivrs
cmp
or
inc
ja
aad
aas
or
add
arpl
push
daa
faddl
add
pusha
pop
orb
add
cmp
or
nopl
into
sub
shll
hlt
or
xor
jl
ljmp
hlt
jb
add
pop
push
push
or
sbb
or
dec
or
or
aaa
cld
adcl
mov
and
ret
add
xor
in
jmp
lret
push
pushf
adc
and
sub
shlb
cmp
cmovo
incl
clc
inc
add
push
sbb
dec
out
scas
fildl
xor
aaa
inc
sti
push
push
orb
jmp
mov
add
or
cmpsl
dec
mov
cmpsl
loop
adc
cmp
push
aaa
xor
mov
mov
jne
jmp
xor
mov
mov
je
push
mov
daa
mov
cld
inc
lds
addb
adc
out
sub
fildll
sbb
sarb
mov
push
pop
mov
fmull
inc
pusha
rcrb
addr16
push
sbb
mov
out
mov
js
call
adc
mull
inc
aas
es
addb
je
lahf
jmp
adc
sbb
outsb
mov
aam
int
test
xor
and
jbe
and
out
repz
fadds
inc
jl
inc
or
not
push
shrb
out
shlb
jb
jae
addl
scas
test
pushl
std
push
pusha
push
sbb
ret
fdivp
pop
pop
push
sub
push
lock
daa
mov
or
sub
lea
daa
pop
dec
xor
and
add
out
add
or
or
xor
test
das
inc
xchg
xchg
das
fisubs
push
push
jb
pop
sbb
addr16
xchg
lahf
inc
add
add
jnp
nop
xchg
iret
icebp
incb
cmp
fmul
loopne
daa
jg
xor
xor
add
stos
mov
in
daa
cld
fmul
and
mov
fmuls
xchg
out
jl
cmp
cmp
inc
lret
out
insb
pop
push
lods
inc
xor
fmul
in
sahf
dec
enter
push
adc
mov
int3
insb
xchg
cmp
fnclex
int
into
adc
pusha
and
inc
ja
mov
iret
jmp
addr16
add
sbb
push
shlb
cli
data16
leave
test
rcll
clc
stc
push
hlt
andl
mov
xchg
add
mov
cmp
cld
mov
enter
inc
adc
add
add
js
andb
jns
mov
aam
dec
test
or
and
mov
ja
add
leave
js
xlat
out
pop
add
xchg
or
adc
lret
push
js
leave
add
testl
pop
outsl
or
mov
push
adc
jb
not
in
mov
sbb
inc
push
sbb
or
and
or
push
rorl
js
aam
adcl
inc
loopne
in
idivb
je
das
faddl
test
mov
cld
sti
std
mov
iret
hlt
cmp
aas
mov
dec
test
hlt
jmp
scas
cltd
push
pop
out
fdiv
in
int3
add
fcmovnbe
loopne
sbb
repz
inc
jno
inc
pop
rclb
push
inc
enter
mov
hlt
mov
jno
jno
mov
jp
jle
jns
cmp
push
test
movsb
je
movl
dec
loop
sbb
testl
inc
jo
div
lret
jb
pusha
stos
add
mov
or
push
out
test
pusha
dec
mov
out
xchg
dec
add
sbbb
loope
js
out
pop
lea
mov
inc
mov
addl
lcall
aam
pop
jl
and
sbb
sarb
les
test
mov
pop
xchg
fadds
ret
sub
jae
jmp
pop
push
sub
mov
stos
or
rcr
pop
imul
or
fcoms
or
mov
mov
mull
lsl
jmp
push
pop
add
push
inc
shr
rcr
shr
rcr
or
mov
sbb
ljmp
out
jb
cmp
or
cmp
or
xor
sbb
sbb
adc
lods
mov
loopne
neg
inc
lret
out
mov
fxch
pop
ret
adc
cmp
je
or
outsl
jbe
push
sub
mov
inc
pop
mov
cmc
inc
in
sbbb
mov
mov
fcomip
xchg
jbe
xchg
or
les
sub
mov
lds
mov
mov
sbb
cs
or
push
mov
stos
dec
or
popa
and
lahf
and
mov
push
mov
notb
push
icebp
sbb
push
inc
inc
and
fcmovbe
cmc
lahf
xlat
mov
cmp
icebp
lcall
sarb
addl
pop
xor
loopne
adc
imul
sbb
sbb
dec
fcomps
and
adc
or
inc
inc
mov
and
add
add
shrl
push
xor
ret
cwtl
push
push
pop
lret
xchg
xchg
sbb
add
jo
or
in
fiaddl
test
rcll
scas
pop
pop
jne
push
add
or
fnstsw
xor
jmp
inc
cmp
mov
pop
adc
and
rolb
add
jle
enter
push
mov
push
pop
dec
pop
dec
xchg
inc
or
loope
adc
jmp
popa
movsl
mov
pop
fs
add
add
jl
mov
nop
in
mov
test
push
push
enter
pop
rcrb
pop
or
outsb
cltd
into
push
call
ror
cs
inc
adc
and
jae
jb
pop
lods
fsubs
sub
decl
jge
pusha
es
mov
cwtl
into
clc
adc
cmpsl
sub
xor
ss
outsl
push
mov
jo
push
adc
add
or
pop
bound
dec
mov
addr16
mov
mov
cmp
sub
cmp
cmp
xchg
dec
out
inc
jb
dec
push
add
xor
lds
sub
or
popa
inc
in
lds
mov
je
jo
sarb
cmpsb
in
mov
push
mov
sarb
ret
ret
cli
je
mov
mov
inc
outsl
fsubr
push
fisttpl
add
add
shlb
fs
sub
cld
lods
adc
rcrl
es
insl
testb
jmp
adc
outsl
push
cmp
mov
in
or
imul
adc
ret
scas
rcll
int
adc
sar
fsubs
add
xchg
nop
aam
sarb
and
mov
lcall
xchg
push
mov
sub
xor
inc
out
fstpl
rol
inc
sbb
inc
mov
xor
cmp
cmp
adc
out
mov
lds
in
add
cmp
and
inc
push
dec
mov
jge
aas
sbb
lea
or
mov
and
out
inc
je
push
pusha
mov
je
insb
lock
or
lock
cmp
icebp
xor
fildl
in
dec
sub
add
adc
and
or
incl
mov
ljmp
mov
addb
pop
cmp
push
cmp
jge
mov
shrl
jae
shlb
push
and
dec
and
mov
sbb
test
imul
push
ficoml
pop
stc
sbb
mov
inc
shlb
xor
mov
movsb
idivb
cli
and
shl
sbb
pushf
xor
popa
cwtl
fists
cmp
and
cmpsb
ljmp
and
mov
add
xor
jno
cs
mov
and
cli
lea
ja
mov
sub
movzwl
ret
rcll
orl
dec
jo
push
fadds
and
and
adc
push
fldcw
loopne
jl
pop
int3
orl
inc
ljmp
je
repz
cmp
fadds
lahf
mov
sub
rclb
lock
ja
xlat
push
insb
lods
sbb
dec
push
imul
xor
or
clc
xor
xchg
add
fs
es
xchg
add
decl
fs
mov
fmull
pop
or
xor
mov
xor
cmp
add
in
das
mov
lea
lea
or
sub
stos
add
ret
and
mov
mov
push
add
popl
or
sahf
inc
add
or
mov
pop
add
xor
sub
pop
shrb
adc
in
push
and
mov
mov
mov
fsubs
and
pushl
add
jno
push
lods
jne
adc
test
push
pop
mov
ljmp
out
cmp
leave
ds
sbb
ud0
ficoml
xchg
add
dec
aad
enter
shlb
jns
imul
out
ud2
and
push
jl
movsl
rolb
shrb
aad
add
jns
adc
outsl
and
cmp
and
mov
sub
sub
pop
mov
cli
add
add
xchg
push
xorl
ds
js
fs
add
fwait
sbb
cmp
pop
fmull
mov
scas
mov
or
mov
or
or
cmp
and
pop
aam
sbb
test
sbb
sub
ljmp
sbb
in
push
add
movd
adc
cmpl
or
lods
stos
jl
dec
or
or
loopne
mov
das
xor
shll
inc
adc
addl
js
or
call
sbb
mov
roll
cmp
ret
rolb
adc
sbb
adc
int
fcompl
push
lea
cwtl
sub
fmuls
mov
rolb
dec
cmp
fcoml
push
push
test
ss
push
les
adc
sysexit
daa
inc
fdivrl
popf
rolb
test
cli
popf
pushl
leave
cli
ret
setno
sarb
faddl
push
jo
inc
mov
daa
add
sub
or
cmp
cli
push
mov
push
add
nop
sub
mov
cwtl
shll
test
mov
dec
mov
cmp
arpl
aas
enter
mov
mov
cmp
add
or
or
inc
sti
jmp
push
mov
cs
push
or
xchg
sub
iret
dec
aaa
push
ljmp
push
mov
mov
push
cmp
hlt
add
nop
leave
jnp
je
jp
or
into
subb
movsb
incb
iret
jbe
movsb
andl
jmp
mov
and
popf
add
scas
mov
and
push
clc
mov
cmp
jle
jle
sub
cmp
loope
sbb
xor
mov
or
cmp
cmp
push
jle
jae
out
fistpll
adc
sbb
adc
sbb
mov
xorl
jmp
adc
insl
pop
jge
mov
mov
add
jge
movsb
es
dec
jae
imul
sbb
enter
jmp
and
scas
shlb
xchg
shr
sbb
xchg
lods
leave
pop
push
sub
cs
or
popa
or
shll
ficomps
mov
stos
mov
dec
pop
stc
sub
cmp
mov
adc
mov
sub
mov
loopne
pop
loopne
je
mov
enterw
jge
nop
mov
or
cmp
ret
mov
add
testl
mov
jecxz
fldl
pop
sbb
test
push
dec
dec
or
cmp
xor
and
fdiv
lea
cwtl
pusha
sti
rolb
jg
cmc
jecxz
icebp
shll
jmp
cmp
mov
icebp
sub
add
and
mov
dec
hlt
add
ljmp
adc
and
mov
ljmp
dec
aaa
dec
adc
sbb
mov
and
cmp
adc
and
loopne
jmp
js
adc
ja
insl
fwait
jge
jle
xchg
inc
xor
jne
add
sbb
add
push
push
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
jge,pt
movsl
add
test
lea
enter
les
mov
or
jne
mov
or
and
or
test
out
inc
dec
jnp
aaa
mov
adc
pop
stc
jne
aas
mov
push
or
mov
rcrb
ja
mov
call
hlt
pop
inc
testl
out
jne
or
loope
mov
in
int
rorb
dec
inc
jne
inc
or
test
and
pushf
and
cmc
int3
mov
xchg
pop
dec
es
loopne
nop
mov
lock
cwtl
xchg
test
push
pushf
fdecstp
lea
add
test
or
or
adc
mov
es
sub
push
adc
jb
xchg
add
push
mov
inc
ja
ret
lods
incw
cmpl
insl
mov
xchg
pushf
xor
mov
mov
sbb
sti
jg
add
inc
or
push
aaa
loop
arpl
or
sub
call
shr
mov
add
or
shr
xchg
pusha
push
es
or
push
mov
push
mov
dec
sub
inc
movsl
or
add
lcall
or
insl
fadd
loopne
shr
or
mov
shl
call
pop
jne
mov
mov
mov
test
aam
loop
fwait
push
test
or
and
sub
rcr
cmp
lea
orb
mov
ljmp
jmp
push
jnp
or
fisubrl
icebp
mov
push
push
and
popa
mov
mov
jl
dec
int3
int3
jmp
cmp
or
daa
mov
adc
jmp
lods
fdivrs
mov
rolb
pop
sahf
dec
and
les
cmp
jo
lods
add
sub
addb
jne
fsubrs
jp
lret
das
sub
test
sbb
xchg
daa
sbb
movups
mov
sbb
les
mov
inc
mov
jne
inc
mov
push
push
pop
adc
sbb
fstpl
push
neg
inc
jae
lock
rep
filds
sbb
lock
push
mov
or
sub
or
add
testb
push
push
xchg
shrb
sbb
mov
filds
loopne
das
jle
pop
outsb
sbb
cmp
xor
jo
and
faddl
lock
insb
pop
in
mov
mov
adc
xchg
dec
inc
adc
popa
and
xchg
sub
dec
mov
add
dec
mov
popa
in
ret
loopne
dec
or
rcl
repz
and
or
push
mov
push
bnd
jbe
outsl
pop
imulb
es
jecxz
mov
pop
push
mov
mov
pusha
xchg
in
in
push
mov
and
pusha
mov
mov
ja
jbe
inc
je
push
add
sbb
xor
inc
adc
adc
in
ss
aaa
jnp
test
pop
inc
insb
test
push
lock
adc
shl
adc
sar
push
or
icebp
outsb
lretw
cmp
push
adc
jno
inc
enter
iret
and
rcll
andb
push
xchg
pop
dec
cmpsl
xor
aad
xchg
sub
push
sbb
mov
in
push
add
ror
mov
mov
cmovl
test
and
jne
jo
std
in
or
mov
loopne
sbb
jmp
sub
jmp
pop
push
xchg
or
dec
mov
mov
cld
add
shrl
in
cmp
xchg
add
js
inc
mov
pop
inc
mov
push
lea
add
std
incb
leave
sar
mov
aas
or
clc
roll
adc
push
inc
arpl
jmp
popl
call
cmp
inc
popf
or
psadbw
cli
jo
xor
lcall
loop
pop
ret
adc
and
insb
rclb
loopne
mov
jl
add
inc
pushl
mov
jns
pop
dec
lahf
mulb
or
xor
push
push
aas
cmpsl
sbb
subl
es
cli
xchg
push
cmp
jb
inc
mov
fimuls
mov
pop
mov
iret
fsubl
push
add
and
mov
mov
mov
andl
and
dec
and
jae
jmp
pusha
aad
imul
push
xor
push
test
cmp
cmp
es
lock
jmp
mov
ret
inc
outsb
test
mov
inc
adc
hlt
lea
rol
xchg
lods
jnp
inc
cmp
jns
cmp
mov
add
inc
je
add
gs
notb
mov
pop
add
sbb
or
ja
mov
and
mov
cmp
mov
add
ss
push
test
shrl
mov
push
add
icebp
cmp
inc
cmp
test
sub
popa
add
xor
psrld
scas
sbb
and
repz
lahf
ficomps
push
daa
jne
adc
pusha
dec
iret
test
add
sub
sbb
push
adc
push
sbb
fistps
scas
fisttps
cmp
js
lahf
std
in
bound
mov
sbb
add
dec
xor
repnz
movntps
shlb
cmp
pop
ret
xchg
dec
xor
jae
add
ret
inc
inc
mov
cli
or
xorps
sub
movb
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
adc
push
ds
add
rcl
dec
cmp
ret
sub
sub
insb
pushl
push
int
shlb
jbe
fs
pop
clc
dec
sbb
jns
adc
fiadds
into
insl
push
jle
jg
sbb
mov
pop
cmp
mov
test
push
mov
or
and
cmp
popa
add
nop
or
daa
jo
push
andl
adc
cmp
push
or
add
sarb
shlb
push
xlat
add
shrb
push
or
test
jmp
mov
push
es
dec
push
or
sub
or
stos
outsb
subl
or
mov
add
fidivs
lret
jmp
inc
mov
pop
and
orl
xchg
jecxz
stos
xchg
aas
push
jae
sbb
fcoml
adc
mov
cmp
sub
fstps
jne
adc
sub
negb
add
adc
fidivrs
or
xor
mov
sbb
jne
mov
sub
inc
and
outsl
rcll
and
add
mov
pop
subl
js
pop
test
push
out
mov
push
ret
xchg
clc
xor
push
dec
or
mov
xor
fnstcw
and
mov
add
and
inc
outsb
int
int
pop
inc
or
mov
push
xchg
and
in
int3
or
xor
and
popa
xor
sti
popf
sbb
mov
mov
int3
inc
fstpt
flds
mov
mov
pop
loopne
mov
nop
fs
mov
and
cmp
mov
jns
add
shlb
mov
out
push
cmovnp
aaa
loop
movb
jmp
xor
add
inc
jbe
shlb
inc
outsb
ds
xchg
push
mov
push
jmp
mov
push
adc
enter
jl
and
testb
or
or
mov
add
mov
mov
cmp
add
and
out
mov
mov
mov
jb
and
add
inc
mov
lahf
and
cmp
push
popf
addr16
dec
cmp
shlb
cmp
les
sbb
pushf
xchg
loope
int
pop
shlb
jge
push
dec
push
push
dec
ret
pop
add
lret
xor
xor
gs
mov
or
jle
push
jl
or
aam
dec
js
cli
xchg
ret
push
or
sub
adc
gs
cmp
xchg
pop
add
sbbb
inc
dec
loope
xchg
data16
or
lods
mov
hlt
add
adc
mov
add
push
fisttpl
sub
xor
nop
stos
xlat
dec
pop
icebp
lock
shl
mov
cmc
les
ja
cmpsb
lea
pop
mov
mov
andl
mov
mul
jo
es
rcrl
push
andl
jo
cmpsl
ljmp
in
mov
movl
rcl
push
mov
decb
cmp
or
js
fcoml
int
sbb
jne
push
aas
mov
inc
sar
xor
pop
dec
adc
lret
rorb
inc
ret
icebp
adc
cmp
cmp
aas
fcoms
ss
push
fiaddl
add
jne
es
aad
push
jg
add
pop
push
pcmpeqw
pop
pop
or
inc
add
mov
jmp
repz
adc
or
nop
or
shll
lea
loop
xchg
xor
es
int
ss
imul
test
dec
ljmp
push
cmp
inc
add
sub
imul
add
scas
jb
imul
dec
or
ret
mov
clc
mov
or
add
das
aad
outsl
fwait
or
jg
test
add
mov
push
or
jne
jne
lea
clc
push
and
xor
add
push
pop
inc
inc
or
sub
rcr
push
mov
je
pop
or
xor
je
ja
mov
jge
sub
pop
jl
jmp
int3
dec
mov
push
adc
adc
jno
mov
jge
add
sbb
pop
loop
push
aad
and
xchg
cs
cwtl
or
dec
lcall
xchg
les
fnstsw
mov
sbb
inc
mov
setge
fcoml
les
sbb
in
jge
mov
mov
and
mov
jmp
mov
adc
pop
add
jmp
pop
and
pop
jmp
cwtl
enter
lcall
mov
sub
data16
push
adc
fs
clc
adc
or
inc
mov
inc
jp
inc
arpl
mov
cmpl
and
dec
sbb
mov
add
adc
jae
bound
mov
loop
jno
pop
add
and
sbb
test
jb
arpl
flds
and
add
int3
lahf
push
xchg
mov
nop
aam
mov
or
int3
push
inc
mov
adc
mov
add
fadds
jo
push
cs
xchg
inc
and
addb
out
mov
cmp
insb
jecxz
pusha
insb
loop
dec
fisttps
pop
cmp
addl
nop
and
push
aaa
add
mov
in
test
mov
push
insl
cmp
cld
xchg
push
jne
or
iret
fwait
sub
nop
push
or
nop
fidivrl
cli
push
xor
jb
cltd
cmp
insb
xchg
push
cmp
adc
cmp
pushf
mov
in
sub
inc
cmp
mov
or
test
push
sub
dec
shrb
xorl
movsb
mov
loop
imulb
mov
cmp
xchg
cmp
int3
mov
mov
ja
cwtl
sbb
inc
movsb
cmp
sarb
fstl
out
or
shlb
mov
jl
and
inc
mov
inc
push
mov
dec
jne
stos
out
rcr
sbb
and
add
inc
or
test
outsl
xor
jle
add
sub
pop
mov
push
cmpsl
fisubs
sbb
cltd
pop
push
add
cmp
xchg
into
sbbl
test
in
adc
shl
xchg
mov
jle
cmpl
xchg
mov
ret
or
xor
sbb
jae
fidivs
pop
sbb
dec
sbb
loope
rol
pop
and
adc
dec
jbe
subb
or
xor
leave
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
inc
add
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
rclb
xchg
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
xchg
addr16
dec
es
cltd
ss
sarb
fs
dec
loopne
call
in
aam
xchg
dec
es
hlt
clc
cld
adcb
or
gs
imul
adc
sbb
es
fs
and
sub
cltd
fs
dec
xor
cmp
or
inc
gs
dec
xor
mov
dec
mov
leave
and
dec
pop
pop
pusha
add
jg
lahf
aam
lock
or
inc
pop
add
test
and
xor
mov
mov
inc
bound
inc
shll
movsl
pop
test
mov
adc
sbb
mov
pushf
and
xchg
pop
mov
and
sti
mov
inc
rolb
pop
cs
enter
push
inc
inc
dec
enter
pop
inc
loopne
add
adc
insl
sub
loope
clc
push
or
sbb
je
icebp
or
shll
mov
jbe
ret
loop
loopne
add
push
or
iret
and
pop
add
ficoms
and
sahf
add
add
and
test
and
mov
and
xorl
mov
and
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
xchg
add
repnz
je
xchg
inc
and
mov
or
sub
or
call
add
push
add
mov
sbb
lock
in
shr
inc
and
mov
and
fsubrl
jg
jecxz
sbb
add
or
jmp
add
ret
xchg
pop
and
jmp
loope
cli
xor
adc
mov
jge
aaa
jge
je
mov
loope
flds
and
pop
adc
pusha
daa
movsb
mov
loope
pop
sub
xor
sub
xchg
add
adc
fnstsw
pusha
pusha
fldl
cmp
adc
lds
pop
dec
push
mov
inc
testb
lret
push
inc
adc
lret
sub
add
add
out
out
test
fistpll
inc
xchg
sub
mov
ffreep
push
push
or
sub
jo
jmp
push
and
movsl
pop
adc
sbb
and
or
fcmovbe
inc
pop
and
sbb
mov
les
sub
and
or
in
fisttps
inc
push
fstps
jmp
fisttpll
pop
xchg
adc
jp
xchg
fndisi(8087
inc
add
adc
jb
ds
or
pop
sub
jmp
push
xchg
dec
push
xchg
adc
xor
dec
and
test
js
adc
or
push
inc
inc
xchg
push
aaa
loope
jle
sbb
out
cmp
push
xlat
xor
xchg
nop
lock
aaa
mulb
sub
sub
sbbl
mov
lret
or
jmp
fldcw
sarb
imul
bound
mov
enter
xor
mov
dec
pop
and
mov
andl
test
mov
cli
cli
adc
push
adc
adc
jmp
scas
in
and
test
push
cli
repnz
movb
cld
fs
mov
test
jle
ret
cli
shrl
push
pop
orl
scas
dec
stos
nop
loopne
or
push
push
pop
jmp
pop
cs
sub
push
icebp
insb
roll
adc
mov
inc
outsb
mov
cwtl
ja
xor
jle
push
xor
sub
add
jns
mov
sbb
cmpsb
lret
add
pop
adc
popa
and
test
add
ss
mov
add
outsl
push
fsubrl
clc
cmp
je
rorl
or
fidivrl
jns
add
or
xchg
imul
push
hlt
pop
dec
daa
adc
and
pushf
sub
dec
xor
ds
or
movsl
jae
loope
jp
add
xchg
mov
mov
fcomp
add
cld
jmp
jno
scas
popf
dec
inc
and
mov
lock
or
popa
orb
fisttpll
dec
pushf
stc
and
inc
add
testl
adc
mov
sbb
loopne
add
ret
in
push
mov
and
push
pushl
bound
and
and
mov
das
adc
jecxz
incb
loopne
int3
imul
mov
jne
nop
mov
add
jl
push
sbb
mov
mov
orl
cmpb
jo
mov
loopne
jecxz
into
je
mov
add
sub
xchg
pop
xor
cmp
or
mov
movsl
pop
lret
lock
or
sbb
incl
cmp
decb
mov
das
cld
fsubs
into
pop
sbb
mov
jmp
sbb
nop
pusha
fcomps
adc
ret
jecxz
pop
dec
sub
enter
push
dec
out
fld
fucomp
pop
pop
fldenv
out
mov
das
add
jne
orl
dec
pop
and
mov
xchg
das
fstps
insl
shrl
push
or
fidivs
push
or
push
out
mov
and
jne
pop
je
xchg
flds
aad
xor
push
and
lock
sbb
sub
adcb
or
push
push
test
push
mov
dec
ljmp
adc
fnstsw
movswl
xor
or
loop
inc
fldenv
outsl
dec
test
sub
sarb
xor
fmull
or
leave
push
in
fldcw
push
push
mov
inc
shrl
or
sub
fwait
out
and
cld
test
fsubs
outsb
fwait
sbb
add
adc
repnz
adc
nop
call
movsb
fldpi
xor
enter
sub
mov
aad
mov
lds
je
sbb
scas
ss
add
jp
mov
popf
nop
ret
pop
andl
add
mov
or
jmp
and
imul
rclb
mov
sbb
sbb
adc
or
push
fcmovnb
orl
int3
cmpsl
jne
push
lock
insb
add
je
or
adc
mov
sub
push
and
cld
sub
add
movsl
mov
pop
inc
dec
or
inc
xlat
int3
cmp
orb
sub
add
adc
add
xchg
es
xor
out
nop
lret
je
push
mov
cltd
xor
out
pop
inc
push
sti
jbe
xchg
or
test
lock
mov
jb
std
jle
mov
enter
or
add
loope
jge
push
push
or
inc
or
add
loope
rcrl
cmp
pop
stos
or
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
pop
or
cmovnp
orl
test
sete
add
jl
xchg
adc
jmp
sbb
lock
stos
jp
pop
pop
fcmovbe
xor
xor
cmp
cmp
add
lea
pop
add
pop
pop
and
scas
scas
adc
pushl
ret
dec
or
inc
lea
pop
mov
lret
rolb
adc
mov
call
loop
shrb
push
inc
jmp
cmpl
orb
add
pop
and
ss
out
mov
out
mov
inc
adc
iret
rcr
xor
jbe
dec
mov
add
mov
pop
aam
cmp
jb
cmp
sbb
dec
cmp
inc
fwait
loopne
sub
data16
jae
adc
mov
pusha
add
add
inc
and
jo
test
jge
fcompl
mov
sub
jle
jge
je
inc
push
adc
xor
or
scas
cmp
stos
inc
push
mov
test
sub
dec
ljmp
jl
push
mov
movsl
fiaddl
ss
nop
push
loopne
push
out
push
out
and
push
fdiv
pop
lock
sbb
loopne
pop
popf
jb
mov
and
dec
ds
push
or
faddp
scas
and
aam
out
push
sub
or
es
in
inc
mov
pop
sub
loope
sub
xchg
lahf
or
das
adc
adc
dec
lea
push
shlb
faddl
icebp
add
jnp
out
test
popa
inc
or
xor
xchg
orl
inc
rcrl
dec
xor
mov
cli
sbb
or
push
jb
add
inc
subl
les
mov
dec
jns
cmp
and
jo
ss
hlt
push
arpl
sub
cmp
inc
mov
cmp
fstpl
movsb
adc
add
adc
cwtl
xor
xchg
loopne
push
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
orb
jecxz
rolb
jle
or
fildl
pop
lock
sbb
cwtl
cmp
push
adc
pop
js
jmp
clc
pop
push
lock
and
adc
mov
adc
cmpsb
mov
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
stos
imul
add
mov
mov
fcomp
enter
cmp
les
pop
jb
adc
mov
push
inc
mov
mov
test
adc
or
repz
inc
rclb
adc
push
mov
shlb
mov
xchg
xchg
adc
inc
mov
cs
or
ss
cmp
je
or
dec
loope
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
lods
inc
lock
movsb
int
call
pushf
lret
adc
and
aaa
sub
inc
mov
ficompl
dec
add
adc
or
wrmsr
xchg
cwtl
cmp
adc
push
sub
or
push
add
adc
jno
adc
mov
cmp
cmpsb
add
lods
inc
mov
xlat
mov
or
jbe
or
add
in
cmp
cmp
xor
ret
push
pop
sbb
lea
push
push
movsb
dec
in
xor
adc
sub
je
add
mov
adc
and
imul
mov
popa
addb
add
adc
pushfw
cld
mov
pop
push
mov
cli
sbb
sbb
mov
faddl
lock
lcall
add
stos
dec
cmp
cmp
inc
inc
jecxz
ljmp
dec
addb
mov
sbb
mov
neg
movb
pop
add
ret
js
cltd
push
enter
xor
or
or
add
lahf
and
add
enter
into
nop
or
mov
xor
jmp
daa
jns
mov
unpckhps
rorl
or
push
lea
sbb
inc
xor
cmp
hlt
std
dec
xchg
mov
iret
ret
jmp
daa
pop
clc
dec
and
pusha
push
or
sub
loope
fs
adc
adc
movsb
push
push
adc
shlb
mov
sub
pop
or
lret
dec
fcoml
adcb
andl
jne
mov
pop
bswap
add
and
push
fadd
lret
mov
das
push
cld
pop
adc
xor
into
jge
pop
dec
fcoml
and
call
movb
fdivs
push
xor
add
push
mov
jp
add
out
les
push
lret
xchg
call
es
push
mov
push
imul
mov
lea
add
xchg
ret
fadd
dec
or
divb
addl
mov
add
sub
test
sbbb
add
mov
jo
subb
fists
dec
addr16
mov
loope
add
insb
movb
test
daa
push
enter
insb
mov
neg
sbb
rcrb
and
fwait
sub
mov
ret
pusha
or
xchg
or
jne
bound
xor
xor
add
subb
mov
and
dec
sub
out
jmp
inc
xor
mov
jb
adc
aam
lcall
push
mov
mov
mov
mov
jle
or
push
hlt
nop
inc
push
and
sub
adc
mov
and
sub
pop
addr16
mov
fsubrs
rcll
jl
xor
rcr
cmp
pop
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
push
daa
xor
xchg
inc
scas
xor
sbb
clc
cwtl
mov
add
data16
cli
ss
inc
and
xor
out
add
cmp
or
lea
or
rol
jo
mov
adc
push
ljmp
test
rcr
lock
sbb
cmp
in
and
popf
aam
sub
pop
sbb
js
jg
popa
mov
xor
jmp
mov
sub
mov
pop
sbb
das
cmp
sarl
jg
pop
clc
push
shll
xchg
sub
or
pusha
mov
push
lock
or
add
jnp
sub
dec
dec
inc
dec
pop
dec
and
or
or
jo
ficomps
or
cmp
sarl
jnp
in
ja
push
add
dec
fnsave
rolb
xor
and
jbe
add
adc
mov
sbb
movw
lcall
push
jle
sbb
push
sbb
mov
inc
jnp
push
jmp
lock
sahf
fwait
xor
mov
xchg
enter
neg
call
pop
sahf
mov
ret
aaa
push
mov
xor
pop
inc
mov
pop
mov
push
in
add
adc
lock
je
aad
add
or
jbe
inc
sbb
rcrl
push
addl
inc
roll
push
sbb
dec
cmp
inc
nop
xor
sbbb
jne
mov
mov
nop
pop
push
pop
sbb
xchg
cs
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
and
xchg
popf
mov
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
rolb
aaa
inc
popa
je
inc
je
dec
push
repnz
out
xor
sbb
pop
adc
sbb
dec
loopne
mov
mov
or
mov
popa
fwait
rorb
out
dec
orl
gs
xor
loope
mov
mov
ret
arpl
ret
pop
cmp
mov
sahf
and
sub
inc
and
out
pop
and
adc
push
lcall
cmp
fdiv
jp
adc
shufps
rorl
ss
inc
cmp
or
mov
or
hlt
ja
inc
popa
sub
jne
cltd
inc
fstpl
cmp
cli
jge
mov
adc
sbb
je
add
ja
mov
mov
mov
xor
mov
xlat
loopne
int
sub
xchg
jmp
icebp
add
roll
adc
ret
or
loope
or
call
cmp
xchg
call
push
inc
xor
mov
sub
and
es
test
push
xor
inc
jmp
adc
or
notl
push
leave
xchg
movsb
mov
mov
and
fidivrs
aam
jbe
sbb
push
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
test
mov
insl
fwait
lock
xchg
sub
jns
or
inc
arpl
hlt
jo
push
pop
ficoms
cmp
mov
fisttpl
mov
jmp
adc
or
xor
push
mov
pop
lret
or
push
push
rorb
dec
imul
pop
mov
scas
and
icebp
je
in
jb
pop
stos
andl
adc
or
mov
mov
lret
je
dec
je
dec
push
push
jmp
or
jmp
es
enter
mov
or
lcall
ss
dec
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
test
int
or
add
inc
lcall
cmp
inc
push
es
cmp
pop
mov
popa
push
shll
jne
adc
aas
and
cmp
je
mov
mov
and
cmp
add
and
jbe
push
pop
xor
dec
adc
xor
mov
shlb
pop
inc
sub
into
sub
mov
repz
mov
mov
movsb
and
mov
pop
lods
or
cmpl
xchg
xchg
mov
and
mov
xor
add
lret
je
sbb
sub
inc
xchg
in
mov
cmc
imul
or
or
cmc
xor
les
sub
jge
shr
add
or
sub
pop
or
mov
outsl
fistps
dec
call
and
add
mov
mov
notb
pop
mov
cmp
mov
mov
popf
add
jp
mov
pop
add
dec
inc
cld
shr
mov
je
inc
jl
in
sbb
cmp
dec
es
or
dec
pop
xor
mov
out
or
sti
and
push
es
dec
fidivrs
or
out
bound
xor
or
mov
into
clc
xorb
push
pop
shll
cli
test
add
pusha
ss
lock
ss
and
or
roll
mov
ja
push
add
mov
imul
xchg
push
shlb
icebp
sbb
pusha
push
loope
pusha
or
fsubrl
add
xchg
popf
push
jne
jne
dec
push
rcrb
roll
and
or
xchg
or
mov
je
data16
sub
sub
pop
aaa
popf
push
ja
mov
pushf
xchg
mov
loope
das
pop
add
sbb
add
je
out
leave
jp
cltd
mov
sub
push
sub
out
loope
outsl
stos
pop
loop
dec
inc
aaa
xchg
dec
ljmp
add
adc
ret
cmc
sbb
sbb
dec
leave
dec
testb
js
daa
loope
adc
push
stc
dec
and
adc
add
test
rclb
and
loop
or
daa
mov
mov
jo
mov
stos
mov
pusha
sbbb
popa
movsl
punpcklbw
sub
xchg
and
aam
mov
pushf
sub
outsl
xor
jecxz
inc
pop
outsl
inc
add
sub
outsb
and
and
out
add
jb
nop
xor
or
and
clc
sbb
fistpll
add
inc
lds
add
icebp
scas
jecxz
fsubr
add
add
pop
je
xchg
cs
outsb
mov
and
aaa
mov
push
add
loop
add
push
rolb
inc
sub
jge
test
push
xorb
sub
mov
pop
call
push
ds
push
sbb
inc
fidivl
pusha
push
ljmp
arpl
cmp
test
roll
pop
lods
push
inc
addr16
cmp
push
shlb
in
xlat
lods
aas
mov
cmp
jle
inc
and
inc
pop
xchg
test
pop
cmpsb
sbb
or
xor
dec
dec
cwtl
test
filds
jmpw
adc
cmpb
jl
or
das
xor
inc
xor
mov
add
inc
aam
push
fstpl
sahf
nop
scas
jns
cmp
xor
jmp
cmp
or
dec
imul
mov
ds
mov
cld
or
dec
mov
sub
ljmp
jmp
pop
jne
cmp
jne
adc
xchg
jne
jmp
dec
add
adc
aas
adc
adc
rorb
push
or
jp
or
loop
aam
sar
roll
leave
add
orl
mov
iret
adc
pusha
xor
xchg
cmpsb
cmc
sbb
test
mov
mov
jne
or
iret
lock
xor
mov
cmp
adc
mov
add
test
inc
sbb
inc
adc
add
sub
add
add
rclb
cld
addl
inc
push
out
adc
neg
neg
sbb
sub
sahf
dec
ficoms
sbb
or
fmull
mov
adc
sbb
push
inc
shl
push
inc
and
fldenv
xchg
dec
shll
test
lret
enter
sbb
mov
loopne
add
dec
jns
sub
in
sarb
pop
pop
mov
adc
aam
lods
jae
or
jae
inc
lds
ljmp
shr
add
or
sub
adc
push
idiv
and
maskmovq
add
inc
clc
cld
lock
je
push
loop
jmp
rolb
cmp
mov
sbb
dec
or
into
add
lods
pop
lods
jae
or
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
inc
adc
test
or
push
xchg
and
mov
jecxz
jae
shrl
or
inc
cmp
js
decl
cs
pop
movsb
lods
or
add
ljmp
sbb
pusha
lea
fs
cs
ljmp
cld
inc
ss
nop
aaa
dec
pop
rolb
mov
imul
jns
cmp
cltd
movsb
cmp
mov
pop
cmp
lods
test
sub
add
jge
xchg
sbb
pop
ss
mov
cmp
test
adc
inc
sbb
lahf
push
dec
adc
jo
or
loopne
adc
shll
es
mov
je
adc
mov
out
push
cmp
ja
add
cmp
adc
cmp
jne
cmp
daa
dec
xchg
xor
adc
mov
sbb
add
jl
pop
pop
sub
cmp
test
fs
testb
jb
dec
lea
call
rclb
mov
subl
aam
pop
dec
insl
insl
sti
aas
cs
push
sbb
add
xchg
pop
mov
movsb
iret
pop
js
je
insb
xbegin
mov
inc
call
pusha
callw
sti
movl
add
cmp
and
int
movsb
pop
xchg
xor
jno
mov
divb
jne
push
adc
jp
adc
sub
sti
stos
sub
mov
mov
mov
dec
js
insb
stos
sarb
sbb
leave
in
push
add
push
add
fwait
xor
add
aas
setbe
and
adc
sar
adc
call
inc
imul
lea
jmp
mov
dec
cmc
dec
jmp
into
movswl
xchg
fcmovnu
cmp
mov
es
ljmp
cwtl
es
mov
out
mov
mov
push
fimull
js
xorl
push
out
mov
fdivr
add
popf
addr16
cwtl
mov
xor
and
mov
and
les
dec
and
mov
mov
loopne
jo
mov
adc
mov
mov
sub
and
and
lea
inc
xor
andl
ss
cmpb
in
cmp
xor
mov
shl
leave
out
and
inc
call
in
ljmp
push
inc
mov
cmp
cld
inc
xor
and
lea
add
in
push
sub
sbb
xor
loop
dec
or
xchg
rcr
sbb
lcall
dec
push
adc
mov
nop
movsb
movsb
repnz
dec
sahf
or
ret
movsb
jae
pop
fldt
mov
pusha
push
imul
insb
xchg
mov
mov
xor
pushf
insb
jl
push
lods
aas
lods
fwait
cmpsb
and
rorb
xchg
jle
cmp
bound
mov
fiadds
add
shr
or
and
frstor
lock
sbb
push
lret
out
imul
or
mov
lods
inc
addb
lahf
std
mov
shrl
loope
shr
or
mov
push
testb
dec
mov
jp
out
inc
jp
jnp
lock
dec
subl
jnp
repnz
mov
add
nop
xchg
out
cli
div
mov
push
mov
cmp
test
and
xor
and
out
mov
sahf
test
sbb
adc
and
push
jnp
pop
fisubrl
xchg
insb
mov
push
jne
in
cli
fidivl
fldenv
enter
jg
or
lret
enter
xchg
dec
rolb
lock
mov
dec
xchg
stos
cmp
or
pushw
sbb
loop
pop
cmp
dec
mov
test
sahf
sub
push
popl
sti
and
aam
daa
sbb
aam
push
testb
cmp
pop
and
adc
jne
fdivrs
pop
xchg
add
jbe
sbb
dec
sub
sbb
fstpt
push
mov
add
int
push
adc
add
or
fmull
or
cmpsl
add
mov
sbb
pusha
mov
fnstcw
dec
add
pop
popa
cmp
mov
sbb
add
pusha
inc
je
jge
inc
xchg
adc
jg
or
orl
mov
in
sub
or
jge
add
mov
and
movsb
loopne
cld
icebp
jmp
add
jne
pop
push
jns
fnsetpm(287
loopne
orb
pushf
pusha
mov
ljmp
xor
xchg
insb
sbb
psubq
shl
inc
add
inc
mov
insl
push
aad
xor
cmp
jle
push
pop
outsb
call
add
add
inc
sbb
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fadds
outsb
pusha
lea
push
and
mov
push
in
out
add
pop
fisubs
les
add
lock
sar
sub
ja
into
inc
les
enter
xor
jb
lret
stos
inc
push
sbb
ss
or
sti
je
clc
rolb
lods
add
pop
push
outsl
dec
enter
sahf
mov
add
cmpsl
outsb
and
dec
int3
sub
test
cli
pop
add
sbb
testb
sbb
or
mov
inc
ljmp
jmp
add
cwtl
dec
inc
pop
cmc
cmpsl
mov
cmp
jge
sub
cmpb
or
add
dec
ja
fiaddl
aam
inc
dec
add
add
fadds
add
adc
rorl
mov
lock
jmp
add
or
or
push
adc
cmp
test
inc
test
jbe
subb
and
add
push
add
inc
mov
mov
or
or
dec
push
imul
ret
lcall
add
push
mov
mull
or
push
push
mov
test
or
adc
or
repz
add
pop
jne
xchg
rcl
or
push
pop
scas
in
inc
xor
je,pt
push
ret
sbb
adc
mov
je
mov
rcrb
xchg
adc
and
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
pusha
or
fs
and
sub
and
pop
pop
jo
pop
popa
and
or
prefetchwt1
mov
inc
ret
or
adc
push
loopne
add
stos
push
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
dec
std
add
or
ret
and
and
cmp
test
mov
adc
xchg
test
sbb
sbb
or
push
scas
inc
jo
push
orl
mov
shll
xchg
add
sub
daa
mov
loopne
mov
rorb
adc
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
adc
lret
or
push
mov
pop
sub
push
pop
loopne
ficoms
add
add
insb
test
or
sbb
stos
ds
inc
nop
or
mov
fs
ljmp
pushf
hlt
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fwait
stos
mov
sbb
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
xchg
add
add
clc
xchg
add
mov
into
lret
dec
gs
mov
scas
push
or
inc
shl
hlt
inc
push
fcom
add
fiaddl
jns
je
adc
cmp
jo,pn
mov
cmp
repz
sbb
ficompl
insb
mov
add
lock
adc
je
dec
sub
icebp
call
cmp
je
mov
scas
push
sub
shl
mov
cmp
pop
adc
mov
lret
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
aas
or
leave
mov
mov
mov
ret
into
das
add
jecxz
inc
mov
mov
and
inc
xor
aam
add
test
nop
xor
fcoml
orl
adc
or
sub
pop
cmp
inc
scas
sub
mov
mov
push
push
mov
mov
and
xchg
sub
test
xor
cltd
in
inc
lcall
sbb
push
push
rclb
mov
test
cmpb
cmpsl
in
cmp
je
inc
and
add
xchg
and
test
sbb
cmp
xor
sub
pop
mov
dec
add
test
or
sbb
ret
cmp
ret
pop
add
jne
rorb
xchg
sbb
sar
xchg
pop
inc
std
aam
jmp
mov
or
and
push
inc
mov
mov
scas
ret
adc
xchg
jl
out
or
sub
lahf
inc
xrelease
loope
ret
add
jne
imul
add
call
ja
ss
mov
mov
push
sbb
fwait
dec
cmp
test
inc
insb
cmp
pop
and
pop
jo
arpl
mov
lea
outsb
rcr
push
mov
and
sbb
lds
dec
in
inc
mov
adc
cli
fildll
test
sahf
cmpl
xor
lret
lock
and
xor
lcall
push
mov
dec
lea
in
add
enter
push
aas
in
add
inc
inc
add
lock
dec
mov
mov
lock
cmp
mov
jmp
dec
push
sub
movsb
fisttps
xor
ja
or
cmp
subl
push
js
xor
sub
xor
cld
adc
or
mov
out
push
xchg
inc
insl
cltd
or
push
push
lds
pushf
iret
aam
mov
dec
pushf
xor
mov
sub
add
sbb
in
xorl
dec
hlt
mov
push
pcmpeqb
jg
fs
adc
aam
push
push
ds
inc
jnp
btc
cmp
jbe
inc
mov
push
les
pop
sub
pop
sub
mov
pop
aas
push
sbb
in
mov
inc
pusha
loopne
inc
cmpsl
cmp
test
pop
lods
lea
add
jb
mul
mov
notl
fcomps
sbb
insb
sub
dec
repz
fdivrl
and
les
ds
push
sub
sbb
lret
pop
mov
cmpsl
rcll
xchg
andb
jnp
xchg
mov
jl
push
mov
add
push
xor
adc
outsb
xchg
add
xchg
dec
dec
movsl
dec
in
add
or
xchg
pop
shlb
lock
imul
inc
int
ret
rol
push
xor
mov
ret
data16
sub
mov
push
sar
xor
sbb
dec
pop
push
and
mov
and
pop
sub
add
pop
push
dec
jnp
rol
shl
inc
mov
mov
ret
popa
xchg
push
andb
stc
push
out
xor
in
jecxz
and
adc
cmpsb
jmp
or
andb
and
inc
add
stc
fs
add
pushf
ret
sub
ss
adc
push
icebp
push
add
shr
ljmp
fadds
sbb
pop
or
jo
sbb
xchg
xchg
shl
or
insl
loop
push
loopne
je
ja
pop
pop
xchg
loopne
inc
fdivrs
popa
sbb
pusha
sub
les
hlt
jno
mov
loope
pop
mov
adc
ret
add
test
rorl
cld
adc
pushf
dec
cwtl
mov
xor
pop
call
dec
lret
or
push
mov
jp
mov
inc
mov
xor
jns
js
rclb
orl
shl
adc
dec
xor
add
dec
push
xchg
lock
pop
stos
pop
inc
fwait
mov
repnz
pop
cmpsb
add
and
pop
xor
inc
fisubrl
clc
ret
mov
gs
rcrl
and
aad
sar
addb
mov
sar
shll
enter
icebp
dec
pop
sub
cmpsb
mov
dec
inc
sub
or
push
nop
xchg
pop
fisttps
xor
cld
mov
std
data16
xor
inc
and
pusha
add
jo
jmp
push
pop
xchg
imul
inc
in
adc
imul
adc
adc
lds
test
iret
push
mov
jo
int3
dec
xorb
insb
xchg
cld
arpl
imul
fidivrl
cmp
ja
add
fsubrp
sub
lock
dec
inc
imul
add
xchg
jge
cmp
add
inc
or
movsl
jge
adc
loopne
or
ja
push
test
fnsave
add
jle
dec
mov
sbb
jae
push
inc
scas
inc
mov
clc
cmp
or
jnp
or
test
jg
add
divb
pop
lock
mov
dec
lcall
mov
pop
lods
adc
push
pop
pusha
adc
shlb
sub
inc
pop
xchg
push
into
lock
fadds
in
jbe
mov
dec
mov
enter
daa
hlt
sar
push
cmp
pop
pop
mov
mov
pop
enter
dec
add
inc
dec
push
mov
cmc
jb
lea
clc
adc
rorl
push
lea
and
xor
add
pop
fs
mov
sbb
in
sub
sbb
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
int3
rclb
jle
sbb
sahf
inc
ret
mov
cmpsl
aas
inc
adc
jg
mov
fdivl
or
imul
or
bound
jo
jp
ja
adc
push
xor
push
add
rorl
mov
pop
pushl
mov
sbb
jl
xorl
out
cltd
xchg
mov
adc
rcrl
or
mov
ret
inc
cmp
xor
inc
imulb
lods
adc
and
and
inc
jle
adc
or
jl
lea
imul
inc
call
inc
jbe
cltd
aam
jno
test
and
sbb
inc
push
hlt
popa
ret
leave
or
sub
mov
es
js
sub
loopne
jo
push
or
add
add
or
xorl
adc
xchg
dec
push
int
loopne
xor
sbb
mov
rorl
icebp
pop
je
push
push
push
add
mov
mov
and
dec
dec
rcrl
xchg
loopne
gs
inc
add
inc
adc
pop
jl
in
mov
aaa
cmp
test
xchg
call
rcll
je
mov
pextrw
mov
xchg
loope
xor
loope
sub
cwtl
fldcw
or
ret
push
inc
inc
mov
les
add
imul
mov
scas
lret
insl
sbb
pushf
fucom
adc
aaa
gs
mov
cmp
cmp
jge
push
cmp
pop
and
fildll
lods
call
adc
cmpsb
mov
rcl
filds
mov
dec
pushf
pop
adc
sbbb
jae
cmp
cld
push
test
jle
cmp
jg
dec
dec
rolb
or
out
dec
xchg
daa
mov
test
add
aam
insl
push
test
loope
ret
inc
outsb
fcoms
fmuls
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
xchg
out
mov
rorl
add
dec
jno
sub
sbb
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
repnz
mov
mov
xchg
or
leave
xor
xlat
mov
and
sub
add
into
mov
dec
movb
orb
xlat
fisubs
or
aam
scas
or
jg
or
xchg
add
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
pusha
push
mov
negl
pop
and
loopne
pusha
lret
mov
or
jbe
cmp
cmp
adc
adc
xor
leave
push
dec
dec
je
dec
jne
push
pop
and
dec
stos
ja
fcoms
test
pop
jmp
xor
adcb
cs
sub
and
jge
je
adcl
cli
outsl
inc
sub
jne
push
sub
imul
les
dec
rcl
insl
add
cli
inc
cs
arpl
mov
loop,pn
scas
clc
mov
pushf
call
lea
stos
add
in
loope
inc
sbb
jne
mov
jecxz
jmp
jmp
pop
xchg
inc
mov
xchg
lods
rolb
popa
pushf
push
push
testl
loop
movsb
mov
push
fstpl
fwait
add
jae
popf
clc
push
lea
je
add
aaa
jl
xor
mov
add
fimuls
mov
je
cmpb
sub
or
imul
add
xchg
into
mov
push
pop
clc
popf
jbe
mov
fcmovb
mov
sub
jb
pop
xor
aaa
mov
push
or
cmp
cmp
adc
scas
mov
push
cmp
fnstsw
andb
ret
inc
mov
stos
mov
orl
xor
das
rcll
or
add
adc
or
leave
sahf
jecxz
sub
push
add
add
dec
mov
sbb
jne
pop
add
movups
fisttpl
or
push
mov
out
gs
mov
mov
fs
mov
pop
out
jle
add
icebp
sbb
les
jbe
or
or
shl
jne
inc
je
push
scas
pop
dec
je
sub
or
imul
pop
loop
and
push
or
ss
add
cmp
mov
cmp
jbe
dec
inc
out
lock
inc
jp
lock
mov
adc
push
cld
and
fldt
lea
push
push
mov
and
test
faddl
sbb
mov
cmp
fstl
push
and
mov
mov
jg
xchg
movsl
mov
adc
add
add
and
cmp
mov
ljmp
cmp
ret
jae
jb
or
adc
mov
push
fiadds
pop
aaa
pop
pushf
and
xor
loop
mov
pop
scas
mov
push
loope
jno
and
scas
xchg
arpl
scas
push
xor
dec
and
ret
es
data16
adc
gs
add
es
pop
push
outsb
stc
rolb
pop
sti
push
pop
dec
test
insb
and
js
sub
sub
xor
jg
jns
or
jge
inc
pop
mov
mov
xlat
je
cmp
add
adc
mov
testb
fwait
inc
sbb
xchg
testb
ds
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
push
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
inc
push
js
xchg
push
cmp
call
and
mov
sarb
mov
repz
push
addl
pop
xor
mov
sbb
rcrb
fstpl
sahf
test
pop
jmp
mov
sbb
inc
pop
pop
or
scas
cmc
pop
jnp
hlt
sub
mov
mov
in
push
mov
sbb
ret
gs
add
imul
mov
in
fstpl
nop
xor
aad
lods
jmp
push
xchg
jne
dec
jns
mov
inc
dec
test
add
add
cmpsb
jg
pop
movsb
fidivl
xor
jb
sbb
add
add
dec
xor
subsd
rcll
xlat
int
out
ja
ljmp
push
movups
jne
xchg
jo
stos
inc
sub
adc
mov
ljmp
sbb
stos
xchg
in
fbstp
popa
mov
fld
fldcw
xorb
insb
or
xor
fsubrp
cmp
mov
fstps
icebp
pop
js
cmp
xor
mov
sub
das
fcoms
cmp
test
lea
sbb
bound
pop
push
add
inc
mov
and
mov
and
or
lea
mov
mov
mov
sbb
xlat
jo
test
faddp
jg
movsb
leave
push
pusha
jns
cld
nop
xchg
xchg
mov
jp
or
fmull
jb
fnstcw
lock
add
enter
shl
and
insb
jns
in
cld
xor
insl
or
pop
cmpsb
nop
adc
add
outsl
jns
mov
cmpsb
arpl
imul
xchg
call
adc
cmp
or
mov
dec
sarl
pop
pushf
pop
cmp
lock
rcr
xchg
mov
test
pop
cld
push
and
add
mov
enter
jo
push
repnz
dec
fistpl
test
rclb
xchg
fsubrl
add
sbb
dec
xchg
roll
mov
dec
rcll
dec
pop
cmp
jb
pop
inc
push
add
inc
pop
fmuls
cmpsl
mov
aam
out
mov
jbe
loopne
add
sbb
jno
mov
fists
inc
je
fisubrs
add
ret
addr16
or
push
or
ficoms
mov
mov
mov
mov
rorl
inc
in
inc
cltd
fsubs
adc
add
in
fidivrs
adc
cmpb
popa
or
sbb
and
xchg
scas
xor
fsubr
dec
dec
push
out
pop
or
sbb
loope
in
mov
jne
fs
inc
loopne
xchg
lcall
and
pop
pop
pushf
pop
inc
rorl
jl
push
js
fcoml
adc
int3
loopne
in
and
mov
xchg
push
and
xor
call
or
rolb
les
jb
test
mov
imul
gs
rcrb
add
and
in
orl
fsubs
icebp
jecxz
in
lahf
cmp
outsb
lods
push
jno
xchg
dec
mov
xchg
dec
es
insb
jo
add
cltd
fs
add
mov
fsubr
es
rol
adc
lock
test
pop
shrl
add
adc
movsb
imul
lods
lea
int3
lea
outsb
xor
ret
adc
shrb
mov
enter
repz
daa
fmuls
jecxz
jns
and
jecxz
rolb
dec
lock
lea
adc
cmp
sub
or
mov
jno
push
icebp
out
ret
sbb
mov
add
ss
and
js
js
fisubrs
mov
cmp
mov
push
xor
xor
cmp
and
pop
push
inc
and
iret
in
shl
imul
mov
outsl
mov
hlt
enter
cmp
sub
aam
in
daa
jns
and
or
or
aad
adc
daa
push
in
ret
or
or
cwtl
mov
inc
lock
icebp
xor
sbb
sub
pop
push
dec
pop
pop
out
adc
aam
pusha
push
and
es
mov
fcomps
xchg
in
and
out
call
jmp
xchg
mov
pop
insl
dec
or
mov
shlb
dec
add
aam
jge
inc
fsubrl
ljmp
movsb
or
lock
xor
inc
sbb
xchg
jmp
push
xchg
jmp
and
popa
cltd
ds
jb
sub
ljmp
pushf
loopne
and
mov
jecxz
push
push
ret
jno
fsub
pop
lods
jmp
cmpxchg
mov
or
adc
add
hlt
mov
add
sbb
out
add
xchg
sti
cmpsb
mov
sub
jl
mov
sub
mov
arpl
inc
jmp
or
jnp
or
insb
or
in
hlt
xor
push
mov
and
mov
dec
hlt
mov
xor
mov
ret
lods
lods
add
inc
lds
mov
adc
inc
jb
or
ret
pop
sub
sub
popf
jecxz
es
hlt
or
out
and
inc
mov
sub
xlat
rcrl
scas
mov
in
xor
popa
sbb
lods
add
inc
add
add
cltd
ja
in
or
push
out
fmull
sub
mov
add
pusha
pop
push
aad
in
cmp
fcomps
push
rclb
loopne
sub
scas
cmp
mov
xorb
xchg
fldcw
outsl
mov
xchg
sbb
lock
test
fs
sti
js
pop
cmpsb
nop
or
lock
loopne
faddl
xorb
adc
mov
sub
xchg
inc
jmp
xlat
dec
dec
ret
and
nop
xchg
movd
sbb
cmp
inc
imul
rcrl
in
in
leave
adc
or
or
or
pushf
jl
mov
loopne
test
fcomp
jl
add
sti
sbb
or
xchg
movsb
sti
repnz
inc
scas
cmp
inc
cmpsb
fs
shlb
shrl
mov
adc
push
xor
add
repz
add
repz
in
mov
aam
inc
sub
movnti
in
cmp
lock
dec
xchg
pop
cmp
sti
add
stos
push
hlt
test
popw
push
movsl
aam
test
movsl
es
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
jecxz
je
cmc
xor
xor
xor
cmc
outsb
into
xor
mov
imul
mov
cmc
int3
and
or
or
stos
pusha
leave
or
and
adc
inc
orl
pop
pusha
rolb
dec
arpl
mov
add
aaa
adc
scas
xor
xor
sarb
xchg
jno
xlat
sbb
pop
adc
sbb
data16
lea
rclb
movsb
xor
xchg
faddl
mov
mov
fadds
push
sbb
push
push
lods
adc
add
js
clc
fs
fdivl
iret
nop
fists
ret
xchg
xchg
dec
ficoml
add
aas
cld
clc
int3
jno
daa
xor
movntq
out
seta
pushf
cmpsb
stos
mov
in
and
sbb
inc
imul
ret
adc
sbbl
fmuls
das
rcrb
gs
sbb
stc
aam
imul
cmovae
call
fwait
in
xor
insb
adc
sub
movsl
subb
lods
lods
lds
inc
sub
adc
adc
outsl
mov
lret
sub
xchg
shll
sti
pusha
sbb
or
xchg
insb
add
out
in
bswap
test
push
fdivrs
pop
enter
loopne
and
dec
sbb
loopne
sub
ret
jns
mov
arpl
jno
mov
fs
pop
and
mov
inc
mov
mov
or
cld
inc
adc
insl
or
or
mov
dec
jl
or
and
adc
js
pop
std
mov
adcb
call
je
mov
rorb
jb
mov
fdivs
jge
lods
loop
inc
aas
aad
adc
stc
lahf
mov
movsl
loopne
sub
mov
adc
dec
push
fcoms
js
mov
dec
cmp
call
xchg
inc
dec
popa
jb
xchg
aas
or
rclb
scas
push
test
pop
add
aas
sbb
adc
nop
popa
rclb
repnz
dec
out
lock
js
mov
adc
cmp
mov
push
fs
push
or
or
pop
mov
xor
pop
push
mov
jne
add
cmp
add
cmp
rorl
adc
mov
add
in
lcall
pop
push
loopne
into
div
cmp
cmp
add
pop
cmp
add
mov
in
clc
push
add
cwtl
stc
mov
mov
jae
and
xor
push
leave
sbb
sbb
inc
or
je
rorl
adc
mov
push
loope
mov
add
inc
dec
bound
add
mov
insl
int3
pinsrw
imul
pop
inc
int3
ss
inc
xor
iret
shll
mov
jb
mov
push
add
cmp
aam
dec
inc
or
jg
pushf
je
rclb
outsl
xchg
mov
cmp
xchg
mov
int3
insb
in
sbb
sub
jb
lcall
mov
jmp
sbb
add
dec
lea
cs
mov
rcr
cmp
loopne
cmp
dec
js
pop
pop
std
setp
icebp
stos
or
test
insl
inc
les
test
lahf
int3
das
rsqrtps
cmp
sbb
dec
popa
cmpsl
aas
mov
pop
sub
cwtl
adcl
sbb
dec
mov
cmc
leave
xchg
push
lret
adc
cmc
sub
mov
adc
cmc
in
cmp
mov
and
pushf
mov
in
mov
cltd
fwait
lret
arpl
add
mov
dec
xchg
sub
nop
add
cwtl
pusha
sub
outsl
test
cmp
imul
fwait
aaa
inc
lods
insl
mov
cmpsl
mov
fcmovb
lods
pop
mov
movsl
pop
outsl
mov
sbb
push
and
movsb
fdivr
sbb
call
mov
ss
fnstcw
and
in
in
lea
call
call
cmp
pop
aam
xchg
or
imul
cmp
fadds
imul
sbb
leave
or
cwtl
popa
pusha
mov
xchg
add
pand
adc
sbb
dec
or
mov
sbb
cmp
es
mov
pop
shlb
push
or
aas
adcb
adc
adc
dec
or
popf
testl
movsl
or
bound
or
movsb
push
sub
iret
adc
push
cmp
add
sbb
xchg
and
push
jo
xchg
push
mov
aad
jns
xchg
lcall
in
insb
adc
dec
inc
push
loopne
loope
pop
call
mov
cmp
dec
cmovs
inc
lods
les
mov
sbb
pop
jmp
inc
dec
jno
add
js
test
mov
cmp
and
jno
and
add
sub
or
mov
mov
xchg
jno
jne
jne
mov
push
mov
inc
xchg
push
rolb
mov
push
mov
push
adc
inc
shlb
sbb
arpl
add
pusha
add
std
jg
xor
xchg
jae
sti
or
xchg
adc
fs
lea
addr16
mov
xor
jmp
fsubrl
push
dec
faddp
sub
adc
push
lds
sbb
sbb
fisubrs
or
loopne
call
cmpsb
sub
pop
adc
shrb
or
cmpsl
adc
addb
add
xor
xor
fs
mov
adc
call
adc
xchg
int3
inc
aam
fsubrs
enter
aad
insl
push
aam
xor
loopne
push
adc
fwait
cmp
call
aad
in
and
call
ret
mov
rcl
dec
xor
sub
adc
ja
dec
sbb
mov
adc
bound
dec
xchg
xor
jb
lret
adc
int3
sbb
mov
lea
or
push
inc
mov
and
mov
testl
int3
push
sub
movsl
rolb
xchg
fs
in
pop
jnp
pushf
mov
leave
cs
iret
sub
mov
inc
inc
mov
sub
jb
mov
push
scas
xorb
xor
call
in
and
test
jb
sbb
sub
divl
outsl
loopne
jb
notl
push
js
push
popa
and
pop
data16
pop
mov
cmp
lock
push
arpl
mov
mov
inc
inc
insb
mov
dec
pop
adc
push
nop
or
adc
pop
push
sbb
push
sbb
add
sub
sbb
dec
outsb
pop
rcrl
xchg
in
jne
fiaddl
cmpsl
ud1
cmp
test
loopne
mov
or
test
je
sbb
repz
fwait
adc
aas
cmp
and
or
nop
mov
adc
push
jb
adc
or
inc
xor
jmp
add
pop
sbb
jno
sbb
cmp
scas
sbbb
stos
sbb
and
insb
shrl
inc
mov
add
mov
jb
dec
or
test
shlb
xor
inc
ret
orl
mov
lods
mov
mov
jge
cwtl
ss
adcb
popf
ret
or
imul
inc
dec
leave
sub
mov
or
mov
add
and
and
adc
xor
sub
test
aaa
lods
inc
mov
fcoms
clc
lea
dec
and
lcall
cmp
cs
xchg
xor
ret
jbe
js
int
fcoms
mov
dec
subb
popf
jo
jbe
cltd
push
sub
test
dec
inc
sub
add
in
mov
ret
nop
adc
jl
ret
jo
sub
and
cmc
push
inc
pop
mov
push
sub
fs
mov
mov
lods
pop
mov
pop
cwtl
push
and
adc
dec
shlb
or
in
inc
bound
xchg
dec
add
mov
shl
inc
push
or
test
and
sub
mov
movsb
jge
add
mov
adc
push
bound
push
test
and
jne
test
lods
lcall
sub
test
aas
add
cltd
in
loopne
or
je
and
shlb
fsubrl
mov
and
add
test
mov
pusha
sub
pop
cwtl
adc
and
mov
sbb
in
test
jp
jno
inc
jne
adc
add
and
test
xchg
jnp
push
cmpsl
push
add
cmp
fdivs
ljmp
sarl
xchg
ja
or
add
cwtl
dec
enter
cmp
mull
hlt
jp
idivl
cmpsl
std
movsl
push
mov
leave
add
adc
mov
insl
sbbl
lret
adc
xor
mov
adc
leave
and
and
sbb
and
dec
sbb
inc
and
dec
xor
inc
sub
dec
shrl
pop
jo
sbb
das
fdivr
daa
pop
icebp
dec
cmp
call
dec
inc
or
sub
jne
jmp
in
jne
leave
and
add
movsb
mov
sti
das
push
or
sbb
or
or
insl
xchg
dec
test
sbb
in
addb
sub
or
mov
xor
sub
fldt
mov
and
fdiv
or
jne
xor
inc
sbb
and
and
dec
and
sub
adc
mov
dec
mov
sub
or
in
inc
adc
or
addr16
mov
int
sub
add
mov
or
fmull
int3
ret
int3
adcl
int3
rorb
jns
outsl
inc
push
or
fs
inc
xchg
sbb
xor
nop
cmp
sbb
sbb
ret
add
nop
inc
ljmp
popf
pop
orl
rdtsc
pop
sub
mov
aas
out
mov
xor
inc
push
inc
sub
test
xchg
sbb
sub
fsub
and
pop
pop
fsubrs
xor
adc
xchg
mov
insb
mov
cs
push
mov
and
pop
lea
leave
loopne
and
push
das
or
call
out
das
or
add
xorl
dec
xchg
test
adc
mov
pop
shll
mov
push
cmp
mov
push
xor
test
mov
mov
xor
mov
xchg
and
inc
pop
jnp
mov
push
nop
xchg
mov
mov
es
int3
das
and
push
xor
adc
rdmsr
xor
mov
lret
lcall
mov
pop
mov
and
sti
inc
xor
mov
xor
push
in
ja
jno
push
stos
sub
push
pop
int
or
pop
lea
xlat
les
in
or
stos
sub
inc
xor
fadds
and
rcrb
imul
enter
lock
sub
mov
xchg
leave
ret
mov
inc
aam
push
xchg
adc
xor
pop
dec
jmp
hlt
adc
mov
push
xor
cmpsl
sbb
push
jns
cmp
pushl
flds
test
sub
ret
std
add
cmpsb
in
enter
add
aaa
add
dec
ret
add
adc
and
mov
cmpsb
push
sub
loope
xchg
loopne
or
mov
nop
rcrb
pusha
pop
rcr
or
fiaddl
jg
mov
xorl
cmp
cmc
cmp
pop
pop
xor
sub
xchg
adc
cmp
adc
push
adc
pop
or
stos
fldl
pop
in
in
aam
mov
push
in
sbb
out
fildll
mov
das
aam
sub
movsb
rorl
mov
jg
orl
int3
les
sbb
push
inc
lret
sbb
sbb
repz
push
add
lcall
lods
cmp
lock
add
lods
mov
popa
mov
pop
fsubl
inc
sub
push
mov
pop
les
cltd
push
push
mov
or
jge
xchg
mov
movsb
insl
lahf
xor
xchg
sbb
fs
push
jo
xchg
nop
cwtl
cmp
nop
arpl
mov
inc
push
mov
sbb
int3
adc
push
pushf
shlb
lods
test
sub
mov
lods
xchg
xchg
fucomi
mov
pushf
leave
leave
insl
xchg
pop
xchg
bswap
enter
leave
sarb
push
dec
outsb
push
or
leave
add
fsubl
xor
jnp
mov
leave
and
dec
pushf
pushf
push
xor
inc
sbb
lret
xchg
or
iret
push
push
jns
sub
mov
xor
aam
out
inc
rorl
jl
mov
jecxz
inc
sbb
leave
adc
push
je
enter
pop
sar
dec
push
je
das
sub
ret
or
enter
jge
inc
or
jo
inc
lret
lcall
push
nop
mov
test
rcrl
pop
pop
pop
enter
rolb
mov
xor
or
jmp
or
dec
sub
ret
mov
ja
dec
sbb
inc
inc
or
dec
test
jo
pop
enter
cwtl
test
jb
inc
call
inc
sbb
adcb
mov
nop
mov
pusha
pop
mov
in
dec
dec
imul
cltd
and
xchg
in
pusha
shrd
pop
sbb
or
and
arpl
shlb
and
popf
gs
sub
es
cmp
cmp
xor
rorb
adc
sbb
and
dec
and
push
roll
mov
jecxz
repnz
dec
push
adc
aad
sub
or
imul
dec
push
and
fimull
xor
sub
pop
adc
scas
sub
and
dec
add
faddl
mov
jecxz,pn
dec
shrb
xchg
imul
mov
sbb
pop
dec
rcr
in
push
or
in
popa
or
mov
aas
outsl
fsubrs
aam
shrb
inc
sbb
popf
pop
inc
fs
mov
std
shrb
sbb
mov
nop
mov
int3
or
mov
pop
mov
xchg
xor
mov
ret
enter
push
ss
test
rolb
pushf
cltd
jbe
leave
mov
and
xchg
or
add
mov
fmul
stc
mov
dec
xor
das
mov
enter
mov
movsb
and
jl
imul
enter
fs
xchg
sub
or
xchg
sbb
or
adc
mov
jb
pop
aas
mov
pushf
sbb
orl
mov
pop
mov
jno
or
leave
sbb
addl
and
fwait
movsb
sbb
movsb
adc
mov
fsts
sahf
mov
mov
and
mov
shrl
sub
lcall
scas
add
insb
mov
and
rcl
das
sbb
dec
push
mov
movsb
xchg
ds
fadd
mov
cmp
or
push
or
push
mov
std
jo
mov
xor
mov
je
jo
loopne
dec
jno
jecxz
add
repnz
dec
pop
and
and
outsl
xchg
cmpsb
in
out
or
in
mov
adc
xor
in
adc
cld
sub
push
test
pop
fisubrl
pop
and
adc
xor
inc
je
add
mov
xchg
test
sub
adc
fldl
adc
and
dec
xor
sbb
sub
adcb
les
sbb
push
clc
mov
lea
pushf
in
cld
icebp
out
or
mov
push
nop
inc
inc
adc
icebp
dec
es
mov
inc
inc
mov
xchg
leave
fcompl
int3
sti
rolb
pop
aaa
xor
xor
cmp
stos
pop
leave
rcl
aas
pop
inc
pop
bound
stos
add
rolb
scas
dec
mov
ret
inc
jle
xor
enter
pop
xor
push
lods
add
fwait
add
and
mov
aas
out
and
and
hlt
add
call
outsl
sbb
lods
push
movsl
jmp
cmp
leave
cmpsl
adc
cmpb
test
dec
cmp
sbbl
inc
cmp
xchg
loopne
dec
scas
sbb
rorb
adc
inc
pop
xor
push
movsb
adc
ret
inc
ja
imul
or
add
popf
test
pop
push
sbb
test
pop
inc
or
inc
stc
sub
inc
adc
aam
push
lret
in
jnp,pn
out
adc
sbb
test
test
test
mov
in
call
sbb
lods
notl
sub
or
cmp
push
imul
lods
lea
xchg
add
pop
mov
popa
test
aam
insl
push
or
adc
aam
dec
aad
icebp
pushf
sub
test
xlat
add
in
xor
mov
xor
sbb
sub
js
icebp
add
add
repnz
insb
loopne
fbstp
inc
clc
add
mov
aas
mov
mov
add
andl
add
pop
push
xor
inc
push
adcl
rolb
push
xchg
mov
sbbb
push
insl
mov
call
rolb
mov
jne
incb
bound
fcompp
and
push
rorb
dec
cwtl
xchg
movsb
sub
mov
mov
lret
xor
icebp
lods
cmp
xchg
xor
addr16
je
cmp
insb
mov
ret
inc
xchg
xor
xor
mov
gs
or
and
xchg
jno
ret
add
mov
cmp
js
or
lret
cwtl
jo
nop
dec
xor
mov
sbb
mov
inc
sahf
das
icebp
and
sub
fs
inc
xchg
mov
jb
cmp
fwait
dec
and
add
push
arpl
sub
ds
dec
adc
pusha
inc
mov
inc
mov
scas
int
mov
xchg
neg
rolb
push
mov
sbb
nop
imul
cmp
xorl
adc
orb
or
mov
insl
ret
inc
add
cmpsb
aam
adc
cmc
rorb
push
jb
pop
and
mov
rolb
leave
xchg
lcall
adc
lods
adc
xor
sub
nop
movsb
mov
dec
enter
adc
pop
repnz
pop
test
loop
push
test
mov
sbbl
fimull
int
loop
push
push
mov
daa
popa
mov
add
adcb
cmp
cmp
mov
xchg
sub
mov
mov
jnp
int3
inc
out
rcrb
xchg
faddl
dec
in
out
lods
xor
test
and
fsubr
addb
sub
mov
sub
or
jecxz
cwtl
jmp
fistl
testl
push
and
add
pop
and
push
pop
movl
outsb
adc
fs
xchg
xchg
out
jae
push
sub
xchg
lret
daa
and
sbb
add
pusha
or
xor
in
xchg
push
fcmovnbe
sub
push
pop
inc
call
popf
leave
int3
or
test
sub
icebp
ds
fimull
lret
incl
rolb
fcomp
and
xor
aam
push
or
adc
xchg
cmpb
sbb
jl
shlb
mov
sbb
dec
clc
rcrb
inc
jl
pop
push
or
lret
loope
push
es
xor
and
pushf
sub
iret
mov
push
or
in
mov
push
xchg
mov
add
pop
inc
add
fyl2xp1
mov
push
aaa
inc
pop
jns
addr16
ror
jmp
fldenv
ss
insb
sbb
cmp
xchg
int
jnp
sub
push
cwtl
push
mov
jle
int
ss
add
lods
fsubrs
int3
pop
shrb
orb
clc
jnp
mov
add
adc
mov
rcll
xchg
adc
or
jmp
cmp
rclb
cmpl
test
add
nop
add
into
pop
iret
jnp
in
adc
test
and
push
and
and
addr16
mov
add
push
pop
push
dec
loope
jb
push
cs
pop
jbe
sub
aas
rdpmc
add
vmwrite
in
aad
incl
sub
jmp
bound
and
insb
outsl
arpl
imul
mov
cmpsb
or
sub
popa
arpl
jne
scas
popf
xchg
jb
outsb
je
add
insb
jo
insl
adc
or
rolb
jb
fstpt
je
jb
gs
add
or
outsl
add
add
add
add
jne
les
inc
cs
out
out
pop
and
jb
dec
push
add
add
pusha
pusha
daa
add
aaa
or
mov
add
add
fdivr
push
add
aas
push
add
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
repnz
mov
fs
add
out
js
inc
mov
or
enter
sub
in
xchg
das
in
enter
sub
mov
in
mov
clc
sbb
inc
cmp
ljmp
repnz
enter
js
jns
jp
xchg
jo
cmp
lcall
pusha
dec
aaa
add
mov
test
mov
jp
mov
in
cs
push
push
mov
dec
jb
fcmovne
or
jne
sbb
cmp
mov
loope
cltd
out
xchg
ja
cmp
mov
shll
cmpsl
pop
dec
sbb
push
fwait
cmp
mov
xor
outsb
das
pop
add
and
add
das
das
and
pop
mov
mov
dec
inc
and
sbbl
popa
jmp
je
dec
idivl
stc
lock
aas
dec
inc
lea
sbb
popa
jnp
outsb
clc
ds
daa
outsl
and
pop
pop
dec
and
pop
xor
neg
fsubrs
out
iret
jns
out
shr
arpl
iret
and
mov
push
arpl
pop
cmpsl
imul
jp
jae
push
and
sti
ss
dec
jne
dec
pop
mov
push
ds
test
iret
mov
pop
ret
sbb
jg
cmp
cmp
sub
fs
dec
and
push
das
das
jns
push
dec
push
arpl
arpl
bound
dec
outsl
jbe
pop
mov
testl
jo
sub
addr16
push
dec
jne
xchg
outsb
xchg
inc
jo
cmpl
jb
jg
bound
out
mov
adc
pushf
jnp
cmp
xchg
fnsave
out
addr16
popa
je
jb
xor
std
adc
jae
push
gs
sbb
insl
mov
outsb
and
jbe
out
pop
dec
inc
aas
add
inc
arpl
jnp
mov
dec
add
insb
jae
push
push
mov
push
popa
insb
jne
inc
inc
sbb
dec
xor
mov
ljmp
sub
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
pop
sub
dec
dec
dec
dec
dec
dec
cs
push
mov
pop
adcl
shl
mov
arpl
addr16
insl
outsb
outsl
jo
add
hlt
mov
jns
jnp
jge
jg
adc
incl
dec
popw
loopne
pop
ds
jnp
add
orb
sar
lret
jno
std
aas
incl
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
inc
pushw
outsl
das
cmp
std
jae
push
add
jo
xor
popa
js
addl
jne
pop
dec
pop
sbb
out
sbb
adc
je
sub
sbb
adc
adc
add
add
add
add
and
dec
movsb
jo
push
pop
push
add
xor
mov
addr16
hlt
and
add
pusha
push
mov
pop
js
or
cmp
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
jg
dec
dec
add
push
push
outsb
imul
outsb
and
push
xor
add
pop
insl
sub
test
cli
and
test
rorb
add
in
in
lea
mov
nop
xchg
and
mov
add
xchg
ja
mov
sahf
or
or
shr
hlt
int3
shrb
pop
popf
dec
out
add
aad
mov
lods
mov
mov
push
sbb
push
pop
sbb
mov
push
inc
sub
dec
inc
pop
dec
test
jge
dec
inc
dec
inc
adc
notl
mov
je
fs
je
rcr
add
dec
dec
bound
je
outsb
data16
mov
insl
xor
ss
out
je
xor
outsl
push
add
push
xchg
daa
pop
push
sti
iret
xchg
lea
mov
outsl
js
push
inc
fstpt
xchg
das
cs
and
insl
jo
jo
and
ficoml
int
dec
xchg
shlb
aaa
insb
les
dec
imul
mov
xor
inc
cmp
dec
inc
jb
cmpsb
and
daa
pop
and
ss
jns
mov
insb
rcrb
arpl
je
and
inc
inc
imul
push
jbe
fisubs
jo
or
jb
and
fldt
je
xchg
pusha
inc
jbe
sbb
push
lahf
fs
adc
mov
lods
jp
ret
es
xchg
pushw
popl
mov
imul
pop
or
jo
sbb
pop
daa
mov
mov
mov
mov
push
outsb
mov
pop
pop
pop
push
push
jae
or
jno
mov
cmp
scas
add
call
push
sub
cmp
gs
mov
adc
jbe
mov
mov
dec
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
push
pop
or
filds
or
jge
inc
test
ds
jle
jb
shl
subl
inc
call
mov
or
cmp
push
jo
pusha
inc
in
xchg
xor
mov
gs
sbb
mov
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
sti
cmp
mov
pop
pop
cmp
cmp
cmp
ds
and
sub
or
fst
inc
jl
push
addr16
jle
sahf
imul
add
out
stc
cmp
sub
pop
or
in
mov
push
jb
mov
aaa
and
push
mov
in
mov
xchg
xchg
imul
pop
pop
jne
stos
addr16
push
jbe
jmp
push
add
ss
xor
add
jb
addr16
xor
hlt
dec
sbb
sahf
cmp
pop
sub
popa
loope
mov
sub
iret
sti
or
out
sub
cmp
xor
sahf
int
cmp
adc
out
call
sahf
ja
push
enter
push
sahf
out
sahf
mov
pushf
repz
out
cwtl
xchg
nop
mov
test
cmp
push
jl
rcrl
je
jo
popf
xlat
mov
pusha
aas
pop
push
sahf
out
sahf
push
push
dec
dec
inc
inc
jns
out
cmp
xor
sub
jns
out
adc
add
call
fmul
test
push
cmp
add
call
out
jl
push
dec
inc
rep
sahf
out
adc
cli
cld
in
into
repz
shlb
test
push
int3
stc
xchg
stc
mov
xor
out
fstpl
jg
and
fdivrp
inc
clc
jle
mov
push
aad
ja
add
enter
xchg
sbb
mov
mov
add
and
push
mov
addb
push
sbb
add
and
push
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
ud2
or
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
std
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
or
mov
and
mov
stos
test
sub
and
dec
lea
popa
and
mov
outsb
gs
popa
data16
pop
mov
cmpsb
pop
jns
push
xor
movsl
xor
data16
add
in
les
jo
dec
arpl
jne
insl
aas
inc
insb
fs
sbb
mov
cmp
mov
or
lahf
push
outsl
lods
push
setl
gs
xor
push
inc
adc
push
fdivrp
xlat
add
push
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
mov
inc
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
shrl
andb
leave
hlt
mov
sahf
xchg
dec
add
les
lods
dec
lock
xor
pop
mov
pop
aas
and
in
repnz
and
push
jle
es
sbb
jne
popa
xor
mov
pushf
subl
sbb
adc
or
pusha
push
jmp
fildl
add
sarb
into
mov
xchg
and
lahf
paddsb
decb
add
dec
xchg
ffree
aaa
and
pop
xchg
mov
das
fwait
imul
ret
es
jae
hlt
adc
lret
out
and
data16
scas
add
sub
out
push
test
sbb
bound
pop
xor
fs
femms
fiadds
jne
sti
or
sbb
mov
jmp
daa
frstor
rcr
daa
je
xorl
mov
add
push
fisttpl
cmp
imul
push
xchg
lret
xchg
push
cmp
fcomi
aad
mov
add
cs
sbb
or
sub
inc
and
jb
ret
arpl
fidivs
jae
insl
jle
xorb
cmpsl
mov
and
cld
push
push
adc
jg
xchg
jo
cmp
repz
mov
push
fsubr
fbstp
out
mov
push
mov
jb
push
mov
jbe
fimull
popa
mov
add
add
mov
pop
ret
jae
sbbb
sti
sbb
sbb
dec
jns
outsb
xlat
cs
js
dec
jg
jg
push
dec
dec
sub
lock
adc
mov
mov
jne
aas
cmpsl
and
mov
inc
or
outsl
and
mov
pop
mov
adc
push
shrl
push
imul
sti
jo
es
es
sti
cmp
divl
cmp
nop
sbb
out
sbb
sub
jmp
inc
sub
insl
ret
dec
mov
rclb
dec
jp
xchg
loope
or
aaa
pop
jecxz
jno
imul
dec
ret
adc
pusha
inc
mov
pop
inc
addr16
daa
fildll
addr16
je
insl
int
inc
and
aas
cmp
insl
aaa
arpl
daa
pop
arpl
add
gs
jne
xor
cmpsl
jo
out
push
lret
xor
addb
cli
pop
fistps
pop
inc
cmp
jbe
mov
add
pop
xorb
imul
add
shrl
xchg
test
fmull
sub
test
daa
ss
push
loopew
scas
or
mov
mov
aas
mov
ret
ds
jecxz
mov
je
jb
push
or
push
mov
push
pop
call
inc
inc
mov
mov
rolb
adcl
or
xor
das
bound
out
jnp
adc
out
inc
push
ja
in
mov
pop
xchg
pop
xor
push
push
mov
dec
stos
ja
push
outsl
push
sub
or
mov
mov
dec
psllw
out
mov
inc
pop
divl
mov
add
dec
xor
dec
imul
call
call
ds
xchg
js
test
push
arpl
push
add
pop
jecxz
test
mov
cmp
jg
xchg
push
sbb
sbb
xor
pop
or
and
jle
pop
push
jnp
aas
ds
inc
mull
jae
push
shl
fiaddl
mov
addr16
lret
and
fidivl
fbstp
jg
bound
dec
outsl
xor
testl
aas
jmp
adc
shlb
inc
addr16
add
aaa
aas
ja
mov
cs
xlat
pop
shr
pop
adc
ja
es
ss
ret
addl
push
inc
jnp
sbb
xchg
jnp
arpl
dec
insb
xchg
ja
in
pop
inc
inc
sbb
sbb
inc
sarl
pusha
imul
inc
ss
mov
and
fdivrl
dec
sbb
jno
push
pop
je
or
cmc
iret
pop
pop
por
scas
adc
pop
sbbl
sub
inc
bound
outsl
mov
andb
lock
mov
cmpsl
xchg
inc
arpl
cmpb
pop
pop
push
jb
inc
jle
inc
cs
or
mov
mov
fadds
jmp
pop
fucomip
mov
imul
sbb
lock
out
mov
lret
sbb
mov
repz
mov
mov
jl
cmp
bnd
ret
aad
jnp
gs
jl
sbb
fwait
jno
jecxz
push
jo
ja
jl
pop
jnp
mov
ret
jmp
es
arpl
cmp
mov
pop
in
pop
pop
ja
outsb
mov
popf
outsb
cs
pop
out
cwtl
dec
lea
shlb
jno
dec
loop
xchg
imul
lret
jl
pushf
add
bound
jns
clc
mov
mov
adc
pop
aaa
aaa
mov
lods
sub
iret
imul
jge
jl
xchg
jl
fdivs
repnz
out
adc
jle
es
flds
xchg
js
nop
and
push
push
pop
pop
incl
outsl
or
stos
push
dec
xchg
add
pop
fstpt
mov
test
clc
pop
daa
mov
pop
push
movb
fs
bound
inc
sub
or
scas
dec
adc
lea
pop
jg
pop
mov
add
mov
outsb
xor
pop
pop
xlat
aad
push
iret
xorl
pop
sbb
divl
push
xchg
insb
mov
test
inc
aas
popa
jbe
add
aaa
mov
pop
sub
jg
test
addr16
xor
aaa
push
pandn
insl
xchg
mov
dec
daa
push
les
or
push
dec
or
push
divl
pop
inc
mov
push
sub
fwait
inc
fwait
ss
xor
out
insl
insl
rolb
pop
inc
inc
inc
push
mov
pop
loopne
imull
mov
and
or
int
xor
inc
push
inc
sbb
fldenv
inc
push
jbe
xchg
int3
inc
or
mov
jg
mov
ds
mov
fimuls
push
or
pop
mov
dec
xor
add
jo
adcb
testb
mov
pop
add
push
inc
lret
dec
or
cmp
shlb
dec
pusha
repz
insl
iret
jg
push
popa
popf
outsl
jle
popf
iret
repz
mov
scas
pop
dec
out
cmp
outsb
dec
sti
ficoms
inc
iret
pop
aaa
dec
and
cmp
inc
ja
lcall
jg
cli
out
ret
and
xorl
mov
mov
mov
aam
es
push
and
arpl
jmp
insl
lret
out
fwait
adc
add
adcl
popa
push
inc
sbb
push
and
outsl
les
loopne
gs
insl
pusha
push
popa
jne
or
jge
or
imul
bound
xor
scas
popa
sbb
pop
cmp
arpl
arpl
sahf
mov
mov
adc
jns
out
aas
outsl
xchg
jns
out
lahf
gs
push
pop
es
dec
out
ss
test
mov
shlb
fwait
pushf
push
xchg
push
lret
ds
cli
sbb
enter
dec
cld
cmp
gs
je
cmp
test
mov
jo
jb
fidivl
add
cmp
ss
mov
into
inc
sbb
and
and
arpl
arpl
xor
cmp
fs
adc
push
loop
jo
loop
or
and
jne
je
ret
adc
decb
mov
imul
sbb
popf
push
fdivs
adc
cmp
jae
movsl
sbb
push
mov
ljmp
divl
fwait
push
cmpsl
adc
pop
push
pop
loop
xchg
scas
ja
inc
push
ja
push
adc
dec
push
ltr
mov
xchg
scas
inc
orl
push
sub
ss
pop
xlat
and
mov
push
push
dec
aam
and
dec
insl
aaa
cmpsl
add
pop
jecxz
lcall
adc
adc
add
cmp
mov
dec
out
add
leave
jbe
ds
pop
push
add
add
mov
iret
add
popf
rclb
or
mov
aad
sbb
cmp
sub
rclb
pop
mov
les
and
fs
bound
and
push
cmp
fiadds
fcmovnu
fbld
inc
and
sarb
pop
or
data16
xor
fiaddl
add
roll
jnp
les
dec
inc
iret
push
sbb
pop
sahf
mov
shll
add
xchg
and
pop
mov
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fsubrl
pop
repz
scas
subb
sbb
xchg
dec
shll
pop
js
push
fiaddl
mov
das
add
lcall
add
lcall
call
scas
and
mov
cmp
repz
pop
push
popa
add
adc
push
imul
mov
imul
in
add
pop
mov
jp
arpl
sub
add
dec
xor
aaa
pop
bound
shlb
bound
arpl
add
inc
outsl
dec
je
icebp
xchg
jb
fs
les
xchg
int3
js
jbe
jae
cs
js
inc
sahf
iret
mov
fwait
stos
jbe
cmpsb
fsubr
out
add
dec
push
mov
sbb
lret
pushf
fcompl
or
add
mov
add
lahf
xor
adc
jecxz
pop
insl
push
jg
test
xor
jae
adc
inc
or
out
lcall
fiaddl
popa
xchg
addr16
dec
pop
mov
inc
mov
dec
mov
add
stos
call
inc
jg
push
fisubrl
sahf
xor
sbb
repnz
inc
and
out
ss
mov
sub
stos
pminub
jo
icebp
scas
mov
lahf
orb
insl
fwait
ja
nop
lcall
mov
out
popa
insl
sbb
dec
xchg
push
aaa
lahf
push
les
fisubl
push
push
lock
or
xchg
pop
push
sub
test
jb
or
ljmp
outsl
movsl
inc
cwtl
sub
or
mov
cmpsl
push
and
add
cs
and
cmpsl
push
sahf
cmp
shlb
aaa
sbb
je
inc
or
ljmp
nop
sbb
and
pop
in
adc
pop
push
repz
adc
xor
imul
inc
push
imul
pop
pop
xor
jae
sbb
pop
aaa
cmp
mov
pop
dec
shlb
ret
and
popa
int
cmp
xorb
adc
sub
shlb
shrl
pop
ret
shlb
jno
push
in
xchg
cmp
sub
mov
ret
fistl
and
lret
outsl
add
fistpll
ja
add
out
dec
xchg
mov
jnp
mov
lahf
arpl
movsb
insl
adc
jmp
xchg
mov
ds
xlat
mov
pop
sbb
iret
xchg
sub
inc
outsb
cmp
loop
mov
ficomps
fiadds
addb
mov
scas
xchg
push
fsub
push
lods
arpl
mov
pop
xlat
cmp
dec
inc
push
movsl
adc
mov
sub
jnp
jb
xlat
loope
push
outsl
pop
push
ficoms
mov
cmp
inc
test
add
dec
out
mov
ret
sti
xor
pop
shr
je
lahf
aas
xor
push
push
sub
sbb
cmp
pop
inc
outsl
daa
mov
sub
push
mov
cmpsl
sub
pop
mov
test
cmpsl
pop
test
fildll
xchg
je
cmp
int3
sbb
jge
inc
int
rclb
fsubs
pop
int
out
adc
pusha
pop
add
out
cmp
arpl
stos
cs
xchg
clc
and
imull
sbb
sbb
imul
ret
mov
je
push
cwtl
or
mov
js
xor
sub
in
sbb
xor
das
es
lds
inc
dec
aaa
inc
mov
add
add
das
add
ret
sbb
xlat
adc
fsubs
test
sbb
xor
popf
outsl
push
movq
lcall
pop
pop
inc
sahf
inc
rcll
dec
das
movsb
add
rol
insl
scas
je
cmp
lahf
fsubrs
mov
xchg
jmp
les
mov
je
push
sti
xor
add
sbb
mov
cmp
push
xlat
dec
mov
push
mov
mov
xorl
adc
cmp
arpl
inc
mov
and
and
xor
cmp
arpl
or
inc
lcall
xchg
out
and
out
addr16
pop
push
ret
lods
pusha
scas
mov
sbb
les
dec
adc
es
mov
add
and
out
test
scas
push
push
jl
mov
pop
minps
xor
or
lahf
xorl
and
and
jl
mov
push
pop
mov
dec
push
mov
stos
push
scas
inc
mov
jp
add
mull
cmp
cmp
adc
cmp
push
das
outsl
iret
jp
pop
ja
dec
pop
dec
add
cmpsb
or
rcll
adc
fistpl
add
mov
xchg
scas
rol
fistpll
cmp
out
sbb
aaa
ja
daa
push
movntq
insl
and
in
aad
clc
int
jns
dec
arpl
stc
sub
test
dec
pop
cld
insb
sahf
int
cs
push
add
cmp
fnstcw
push
push
pop
mov
jns
fwait
jmp
mov
test
test
or
mov
and
fwait
and
and
es
sahf
pop
pop
bound
xchg
mov
push
jno
pushl
mov
jne
pop
dec
or
icebp
jbe
cmp
les
popa
xor
loope
mov
jo
xchg
add
jae
push
sub
push
cmovg
mov
add
and
loop
sahf
xchg
add
das
add
pop
cmp
jne
pop
jmp
lods
fdivs
add
sti
scas
daa
cmp
cvtps2pd
pop
aas
mov
mov
mov
movsb
lret
push
sub
clc
outsl
out
jns
fidivl
jnp
test
sti
push
xor
out
sbb
cmpsl
iret
or
bound
mov
scas
aas
aad
and
xor
mov
or
mov
pop
aaa
push
sar
pop
lods
ret
pop
adc
adc
xlat
imul
jp
das
daa
and
mov
mov
aaa
jbe
push
mov
push
lods
jae
push
mov
jecxz
cmp
lahf
les
imul
cmp
sti
jnp
jge
popf
pusha
lods
mov
mov
sub
push
xor
and
fs
icebp
pop
jno
jecxz
das
outsb
sbb
aad
daa
daa
aaa
cmp
sbb
push
insl
xor
add
sbb
dec
sbb
test
inc
cmp
cmp
fisttpl
push
insl
arpl
notl
bound
or
pop
pop
mov
or
loope
fcoml
and
mov
xor
xor
dec
scas
xchg
notl
movb
push
jb
pushf
scas
in
pushf
scas
xchg
push
leave
dec
scas
cld
lods
in
mov
push
leave
test
cmp
cmpsl
xchg
stos
in
sbb
enter
and
in
stos
aam
push
dec
scas
xor
mov
pop
and
xchg
inc
in
cmp
push
push
stos
pop
cmpsb
clc
inc
sub
push
stos
fs
ljmp
xchg
movsl
movsl
add
movsb
mov
push
jb
pusha
fildll
xchg
stos
mov
cmp
int3
push
leave
push
aad
mov
mov
inc
mov
cltd
ljmp
stos
mov
stos
imul
stos
in
sahf
cwtl
fildll
dec
popf
popf
test
rorl
and
sub
xchg
adc
int3
pop
and
mov
inc
cs
outsl
xor
pop
pop
rorb
dec
mov
xchg
ret
pop
dec
fildl
sti
inc
mov
fistl
mov
or
dec
inc
inc
sbb
fsubs
aaa
dec
aas
adc
das
inc
xlat
dec
pop
dec
sub
xor
jo
xlat
push
aas
pop
sub
mov
xchg
outsb
xchg
nop
arpl
imul
adc
aas
inc
dec
and
shl
fildll
or
xchg
pusha
aam
ss
not
adc
push
cmpsl
inc
or
pusha
shlb
mov
adc
dec
cmove
pusha
push
xchg
jae
adcl
push
inc
sub
lcall
movsl
mov
dec
xor
push
das
mov
outsl
lods
add
mov
int
add
pop
push
scas
addr16
xor
adc
neg
xor
and
inc
push
mov
scas
push
inc
rcrl
lahf
adc
inc
sub
add
pop
lea
add
push
push
test
loope
nop
cmp
pop
and
push
incl
nop
pusha
das
out
aaa
or
iret
xchg
scas
pusha
add
movl
mov
aaa
outsl
lods
and
lea
mov
pop
adc
gs
add
out
push
fwait
aas
outsl
or
sar
addr16
jg
aaa
pusha
rcrb
out
mov
pop
adc
pusha
scas
pop
dec
inc
mov
iret
inc
daa
adc
ficoms
dec
rcll
sbb
loop
cmp
push
push
dec
cld
js
outsl
outsl
jbe
jno
push
dec
inc
xchg
push
cmp
jae
add
ja
lret
xlat
sub
or
add
dec
arpl
popa
xor
dec
pop
lea
inc
pop
add
add
sti
push
jnp
pop
or
pop
in
mov
movhps
ficoms
out
sbb
add
inc
es
popa
and
popl
xor
fstpt
mov
cmp
shl
pop
jne
addr16
bound
fsubrl
je
or
jae
je
push
cs
sub
cmp
cmp
dec
imul
aam
cmpsl
jno
mov
mov
add
les
jae
ss
dec
fiaddl
imul
dec
js
mov
adc
arpl
in
and
cmp
add
iret
jno
or
and
mov
aad
arpl
xchg
or
jae
jl
adc
push
or
cmp
repz
adc
sbb
cmp
xor
mov
sarl
push
cltd
fwait
int
stc
or
xchg
add
pop
push
aam
pop
dec
sub
add
mov
jns
and
sub
xor
inc
jnp
fldcw
mov
mov
mov
add
add
shrb
ss
int
ret
sub
shrb
xchg
pop
adc
insb
push
adc
pop
add
mov
sbb
lret
ltr
mov
shlb
stc
das
es
inc
mov
data16
popf
add
inc
push
xor
pop
addr16
jo
test
push
push
cmp
repz
lcall
sbbb
pop
push
fisubl
inc
jle
xchg
dec
pop
dec
in
xor
dec
das
xchg
sti
rorb
and
bound
pop
jb
and
lods
adc
inc
xchg
incb
inc
fimull
bound
imul
pop
pop
rolb
pop
push
ret
inc
pop
inc
pusha
adc
movsl
jno
pop
cvttps2pi
lods
test
inc
das
je
adc
fstl
sarb
aam
xor
dec
cmovno
das
or
cltd
ss
cmp
adc
lcall
pusha
adc
mov
test
mov
ficoms
cwtl
add
add
pop
pop
dec
and
je
mov
mov
push
arpl
aam
iret
cmp
xor
aaa
ffreep
mov
push
or
mov
ja
push
shlb
mov
ficompl
push
addl
movl
je
mov
sub
out
or
cmp
push
cs
cmp
out
xor
jnp
and
out
es
add
das
lret
insl
xchg
pop
loopnew
loop
xchg
cmp
fidivrl
xor
jae
fs
out
jns
push
dec
sub
into
xor
pop
sub
pop
xlat
dec
shlb
push
lret
jnp
or
inc
or
xlat
dec
sar
js
xor
inc
cmp
mov
inc
outsl
sub
aaa
jbe
dec
or
inc
push
loop
imul
jb
ss
push
dec
mov
bound
xor
xor
sarl
xor
cs
lret
mov
outsb
jb
loop
push
jo
push
push
cmpsb
xchg
ja
retw
mov
mov
mov
mov
lret
shlb
mov
sbb
cs
fs
inc
and
lock
cmp
add
into
sti
fidivrl
mov
pop
js
inc
clc
pop
mov
and
imul
pop
pop
jae
fidivrs
mov
push
es
ss
outsb
pop
push
ret
div
mov
jb
das
inc
pop
arpl
out
dec
es
das
add
out
sti
push
fisubs
data16
inc
pop
push
sysexit
mov
iret
jns
dec
cs
sahf
push
outsl
js
dec
gs
push
mov
mov
push
scas
push
insl
mov
fidivrl
push
inc
ja,pn
xor
push
jp,pt
ret
repz
push
fimull
mov
jg
dec
das
xor
mov
pop
outsl
pop
sarl
js
push
into
roll
outsl
enter
imul
sbb
pop
push
imul
in
xchg
dec
sub
arpl
movb
daa
xchg
mov
add
lods
inc
pop
lahf
loope
es
jg
mov
cmp
je
pushf
jle
pop
push
adc
adc
sub
mov
add
psrld
imul
mov
xchg
fst
dec
pop
mov
push
orb
aad
rclb
xchg
push
and
mov
loop
jmp
dec
pop
mov
xor
adc
movsb
dec
lret
bound
xchg
ja
pusha
push
adc
std
ret
inc
add
mov
arpl
lock
lea
cwtl
adc
or
fsubrs
mov
lret
mov
and
add
pop
xor
pop
dec
daa
fimull
jmp
push
sub
and
dec
mov
dec
dec
or
xor
sbb
mov
test
mov
ret
cmp
mov
or
push
xor
xchg
test
in
mov
pop
xor
mov
add
dec
into
insb
outsl
popa
fs
outsl
insb
pusha
adc
addps
rolb
push
sbbl
mov
inc
ret
mov
pop
push
dec
mov
xlat
lcall
jmp
popa
cs
add
data16
aam
dec
outsl
addr16
sbb
push
xor
jo
leave
outsl
add
data16
jmp
jg
ja
aam
cmp
push
outsb
jno
pop
push
xor
or
mov
bound
mov
repnz
xchg
add
mov
mov
pop
jo
imul
fs
arpl
sub
jle
pop
pop
ja
xor
add
fnsave
xor
push
adc
movb
mov
add
jnp
arpl
or
test
les
jmp
adc
cs
mov
fwait
add
jae
fdivs
sbb
lret
add
outsl
adcb
test
or
jnp
push
pop
outsl
cld
shlb
cli
fisubrs
lahf
lcall
aam
in
cmc
fildll
push
pop
adc
outsl
xchg
add
push
mov
sub
mov
mov
imul
jp
sbb
fistl
and
ret
push
das
xchg
xchg
stos
arpl
mov
inc
clc
jle
pop
popa
fldt
push
xor
repz
dec
lods
sbb
mov
push
lods
push
adcl
mov
xchg
sbb
mov
inc
pusha
pop
pop
ds
jns
mov
out
sub
ret
add
sub
xchg
leave
arpl
and
jbe
inc
sbb
jl
insl
lods
outsl
call
inc
insl
push
repz
or
xor
insb
aam
sub
push
fs
push
inc
inc
push
mov
sbb
sub
ljmp
xorb
out
push
sarb
add
imul
data16
movsl
ss
inc
aas
push
lock
mull
fisubrl
lahf
jo
add
sub
mov
adc
add
test
int3
add
or
data16
add
mov
inc
outsb
adc
leave
push
lret
mov
dec
mov
add
test
push
ss
nop
and
mov
mov
idivb
add
sbb
ljmp
mov
decl
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
lcall
or
mov
sub
sub
test
std
mov
mov
sbb
mov
ds
pop
sbb
lods
sub
and
jle
jo
fsubs
pop
ljmp
sbb
mov
pop
dec
xchg
inc
lock
mov
pop
add
pop
mov
jg
pop
push
mov
movsb
or
add
aaa
push
dec
sub
and
pop
xchg
and
add
adc
or
lods
inc
and
cmp
jb
xchg
add
dec
pop
and
in
das
cltd
dec
cmp
sub
xchg
dec
cs
sbb
jl
and
jns
cld
xor
xor
cmp
pushf
int3
inc
mov
xchg
mov
outsl
or
cmp
repnz
rcrb
xorb
lahf
adc
stos
xchg
out
out
inc
shrb
pop
dec
xchg
aaa
cmpsl
shr
sbbl
dec
sub
xorl
test
into
pop
fwait
mov
pop
jecxz
stos
pop
shl
jnp
cmp
idivl
ficompl
cmp
sub
adc
inc
push
mov
inc
xlat
or
addr16
mov
icebp
mov
push
xchg
adc
aas
imul
add
and
nop
stos
adc
inc
dec
jp
and
xchg
imul
outsl
jne
cmp
popa
outsb
imul
add
inc
dec
mov
dec
dec
pop
cmp
add
scas
aas
pop
shlb
daa
jnp
je
dec
aas
aaa
push
lahf
nop
mov
fidivrl
aas
jae
push
mov
pop
mov
adc
adc
cmp
dec
nop
pusha
insl
xor
push
scas
mov
fidivl
aaa
test
iret
test
mov
xor
or
addr16
cmp
dec
out
pop
fisubs
mov
push
xlat
rclb
sarl
push
jne
fnsave
xor
add
mov
mov
add
mov
and
shlb
out
xor
pop
jb
pop
insl
mov
or
pop
pop
outsb
repz
and
adc
push
push
pop
jmp
mov
jmp
test
add
add
jno
jbe
adc
outsl
dec
xor
cmp
rorb
aaa
sets
dec
inc
arpl
jl
cs
mov
fnstenv
or
push
cwtl
es
hlt
jns
and
xor
orb
addr16
mov
pop
pushf
outsl
inc
loopne
mov
fiadds
inc
fcoml
test
leave
stc
pushl
or
repz
mov
xchg
int3
mov
ds
inc
fiadds
add
push
insl
mov
sahf
scas
mov
and
mov
adc
add
jbe
aaa
pop
lock
push
and
push
mov
mov
push
push
cmp
nop
xchg
in
repz
sar
es
cmpsb
call
xchg
imul
in
push
jl
mov
push
push
xlat
cmpsb
sahf
mov
jnp
imul
push
push
ss
sti
into
sub
sub
cs
icebp
sahf
out
jp
mov
int
pop
inc
sub
andl
push
outsb
loopne
xchg
mov
lret
jnp
push
fisubrl
push
call
in
aas
and
push
jb
movb
iret
out
xchg
pop
mov
push
mov
fidivs
pop
aaa
push
dec
fistpl
iret
cmpsl
inc
inc
enter
testb
cmc
cmp
push
or
sahf
xchg
cld
jno
aaa
sub
inc
push
dec
int3
out
out
push
js
shrb
outsb
ss
out
iret
inc
push
mov
push
cmp
insb
outsb
jmp
xchg
push
bound
push
cmp
dec
repnz
movb
mov
outsl
jns
rorl
das
inc
jl
push
mov
repz
mov
or
out
sahf
int
xor
inc
popa
xchg
push
repz
ss
sahf
push
push
jbe
insb
sahf
outsl
and
xchg
cmp
mov
mov
pop
iret
out
sahf
jl
shr
adc
rep
fistpll
sahf
cmp
sbb
repz
push
outsb
mov
jns
cmp
pop
inc
mov
add
iret
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
jmp
push
mov
xor
adc
mov
pop
in
pop
mov
clc
pop
mov
idivb
mov
pop
int3
push
and
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
fadd
lea
das
add
pop
adc
pop
or
inc
in
push
sub
leave
cld
inc
or
jno
cmpb
mov
leave
sarb
outsb
jp
xor
cmpl
js
xor
int3
inc
adc
insl
seto
in
cmp
xor
push
inc
mov
mov
arpl
pop
sub
imul
push
xor
add
xchg
mov
pop
push
dec
loopne
or
les
popa
je
test
add
jnp
jmp
push
pop
or
aam
cmp
mov
movsb
sub
pop
push
ficoml
pop
fs
mov
jae
stc
push
les
jb
push
dec
push
add
or
inc
rorl
imul
inc
mov
stos
mov
pop
mov
pop
addr16
push
dec
rcrl
and
or
pop
outsl
xlat
popf
hlt
dec
shlb
push
fidivrl
jl
jo
inc
sub
mov
les
pop
pop
inc
jecxz
inc
shl
outsb
insl
xchg
xor
cs
lret
in
mov
pop
xchg
push
sbb
aaa
fs
out
jb
lea
xor
scas
jne
sub
lods
or
sub
xor
pop
add
outsb
sysexit
ja
mov
bswap
inc
mov
jg
mov
add
jbe
jo
xor
mov
xchg
push
cli
jle
sbb
outsb
push
jnp
or
inc
rorb
xchg
push
das
aaa
inc
inc
pusha
sub
lahf
lock
dec
enter
or
lods
mov
adc
or
pop
pop
push
mov
adc
xor
repnz
sbb
and
fisubrl
aas
sbb
iret
inc
xchg
iret
mov
sbb
inc
addr16
xor
add
gs
ljmp
frstor
inc
out
aam
fisubrs
cmpsl
je
rol
xchg
xor
pop
xchg
push
mov
fmuls
xor
fisttps
test
jae
fs
adc
sbb
das
decl
psubq
test
mov
ja
jo
jno
insl
dec
xlat
das
aas
and
fcomi
push
pop
adc
mov
sub
pop
pop
mov
jbe
push
mov
daa
mov
rcl
outsl
aaa
imul
xchg
das
testl
mov
lock
jb
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
jne
setbe
add
mov
pop
pop
sbb
push
jecxz
jo
add
pop
jmp
lods
add
and
arpl
out
jbe
inc
mov
inc
pusha
pop
push
out
inc
insb
or
xchg
aas
add
stos
sbb
push
push
push
sub
aas
rcl
loopne
repz
xchg
push
push
test
sbb
aas
xor
cmpsb
push
arpl
ret
add
roll
aas
mov
sbb
add
jbe
adc
xlat
orb
inc
and
outsl
jmp
subb
dec
imul
cli
jg
mov
inc
inc
push
inc
xchg
sbb
repnz
cli
cmp
dec
push
xorl
popl
pop
or
scas
in
lods
mov
jno
mov
dec
inc
mov
psrld
bound
sub
pop
dec
mov
inc
mov
clc
les
xchg
inc
pop
lahf
mov
xor
lock
out
dec
add
shlb
xlat
or
mov
into
shlb
inc
iret
pop
pop
pop
test
jno
lret
push
aaa
adc
jg
iret
or
pop
and
out
mov
adc
and
or
or
shr
jbe
es
insl
jo
je
add
addr16
aas
jo
jae
daa
pop
jno
outsl
xor
cmp
es
jg
mov
add
pop
pop
jg
inc
dec
sub
cmpsb
jns
je
loope
sub
jne
or
lcall
mov
pop
aas
adc
out
test
mov
mov
jae
mov
xchg
mov
mov
dec
dec
inc
pusha
rcrl
mov
icebp
dec
inc
push
punpckhwd
arpl
dec
outsb
or
test
gs
lods
mov
sti
inc
rolb
das
mov
ret
push
divl
cmpsl
pop
inc
dec
adc
and
movsb
push
outsb
loope
cmovns
inc
mov
test
adc
test
jmp
into
dec
inc
or
push
xchg
push
and
pop
dec
sub
jo
das
cmpsl
test
cli
push
stos
outsl
fistps
insl
push
push
addr16
hlt
push
push
adc
aam
jns
jb
jo
add
mov
arpl
mov
inc
mov
mov
outsl
outsb
or
aaa
aad
or
inc
insb
enter
mov
dec
daa
lahf
lret
pusha
jecxz
pop
cmpsb
jb
fdivs
push
mov
push
pop
add
push
mov
cmpsl
pop
pop
outsl
inc
push
dec
inc
dec
push
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
jnp
and
loop
test
pop
outsl
or
xor
das
ds
das
sbb
out
dec
push
adc
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
add
or
imul
pop
xor
nop
insb
pop
gs
lea
loopne
xor
popw
push
add
dec
aaa
push
addr16
bound
push
mov
adc
add
push
adc
mov
stc
mov
sbb
pop
rorl
fdivs
sbb
jns
pop
sub
sbb
int3
pop
sbb
lahf
fidivs
jbe
push
lret
push
ds
jnp
fstps
sbb
subb
mov
pop
rcr
ja
add
loopne
into
xchg
add
and
clc
shll
add
pop
outsl
add
mov
adc
bound
outsl
xlat
icebp
mov
or
cmpsl
push
or
incl
int3
and
pop
xchg
jmp
out
nop
fsts
and
xchg
or
jnp
cmp
or
test
xchg
jb
fildl
adc
ja
out
push
imul
inc
outsl
arpl
popa
push
testb
outsl
and
and
arpl
mov
into
sub
je
push
inc
fsubrl
xchg
je
and
je
mov
popa
stos
orl
nop
dec
cs
inc
fcompl
and
xor
and
mov
jo
mov
dec
inc
dec
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
andl
jne
imul
das
dec
pop
adc
add
or
addr16
and
push
mov
pop
gs
inc
and
adc
push
loope
pop
inc
popa
imul
xor
aaa
sbb
outsl
jo
popa
imul
xor
gs
mov
cmp
orb
inc
or
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
wrmsr
xchg
pop
pavgb
or
push
scas
sti
inc
roll
cmovne
jecxz
bound
push
xorb
add
push
sbbb
pop
mov
pushf
sbb
mov
in
loope
insl
add
mov
es
inc
ss
cltd
insb
hlt
push
cld
push
sbb
add
in
pop
xchg
cmp
fisubl
aaa
sahf
dec
incl
push
daa
xchg
les
xorb
daa
xchg
mov
or
xchg
xchg
mov
pop
daa
xchg
outsl
call
int
and
and
aam
pop
jnp
add
fsubrl
shl
inc
test
pop
xchg
cmp
cmp
insl
ss
dec
mov
imul
jbe
or
enter
mov
sbb
mov
outsl
xchg
ret
aad
jmp
or
lock
pop
insb
andb
push
push
jb
pop
fsubl
pop
xchg
and
mov
xchg
cwtl
push
movsb
cwtl
rolb
xchg
test
xor
and
aam
mov
and
and
or
fidivrl
js
sahf
or
xchg
movsb
insb
jl
inc
cs
dec
movsb
insb
movsb
or
out
mov
inc
scas
xorb
fs
add
add
andb
fs
daa
outsl
or
daa
mov
fsts
out
inc
sahf
mov
push
xchg
movsb
xchg
mov
or
and
mov
mov
push
add
idivb
lcall
pop
enter
xor
or
mov
mov
mov
adc
outsl
das
scas
dec
and
pop
repnz
sub
lock
cld
xor
ss
add
in
aaa
adc
fwait
daa
dec
jo
pop
mov
negl
inc
data16
or
mov
add
lahf
inc
fisubrs
rorb
out
call
nop
int
mov
insl
in
push
xor
addr16
fimuls
push
pushf
jo
jl
or
jae
iret
add
enter
les
daa
lods
fimuls
jns
cltd
and
popf
add
inc
in
add
jnp
xchg
cld
popf
sub
sarl
add
or
xor
jo
je
rol
test
mov
pop
popf
int3
push
roll
inc
dec
add
mov
jb
ja
sbb
sub
rolb
lahf
lcall
insb
jl
lahf
or
in
xor
or
inc
sahf
mov
mov
lahf
pop
and
sti
mov
iret
mov
lahf
pop
insb
dec
xor
xlat
ja
enter
mov
pop
repnz
iret
test
in
pop
repnz
fistpl
test
les
mov
bound
pop
pop
cmpb
out
sahf
cmp
add
imul
clc
xchg
mov
stos
or
mov
cmpsl
mov
test
mov
repnz
jg
mov
mov
lods
push
cmpsl
mov
cmp
jb
in
in
inc
sahf
int
mov
popf
nop
or
pushf
and
cmpsl
sub
dec
fisubrs
in
push
cmpsl
jg
dec
fnstcw
repnz
nop
or
mov
lock
enter
ja
jp
mov
inc
push
sub
lahf
mov
iret
sub
jb
pop
enter
iret
test
clc
aam
hlt
enter
clc
aam
test
and
and
xor
inc
mov
jnp
lahf
dec
lahf
ja
test
lahf
push
je
xchg
enter
push
je
test
aam
call
orps
cmpsl
les
out
test
sbb
hlt
push
cmp
push
cmpsl
test
mov
cmpsl
loopne
xor
iret
jl
addr16
cmpsl
nop
out
pop
insb
sahf
adc
test
shl
addr16
cmpsl
mov
nop
or
inc
cmpsb
adc
xor
push
cmp
iret
mov
shll
testb
cmpsb
js
mov
sub
ja
movsb
adc
enter
es
dec
push
add
out
cmpsl
or
sbb
xor
push
cmpsl
jg
pop
jmp
cmpsl
lahf
jg
cmpsl
jo
jb
sub
aas
push
cmpsl
pusha
iret
test
pop
mov
fcomps
adc
daa
lds
test
adc
jnp
sub
ja
rcrb
enter
rcrb
jae
lock
test
lea
mov
add
test
and
or
dec
add
cld
dec
jbe
inc
mov
pop
jo
mov
inc
pusha
push
inc
jg
stos
pop
add
js
inc
mov
add
inc
ja
inc
aaa
and
mov
pop
adc
push
fisttpll
fiadds
lahf
push
sub
inc
ja
add
mov
lock
inc
movsb
mov
push
mov
mov
inc
mov
push
clc
lahf
dec
add
call
test
push
pop
call
mov
inc
inc
jg
jo
pop
dec
sbb
sahf
pushf
jo
dec
dec
adc
inc
cwtl
cwtl
adc
jns
push
pushf
add
push
inc
mov
int3
jbe
add
inc
xlat
and
scas
mov
addb
ret
nop
movsb
iret
mov
push
xorb
xchg
ss
sahf
in
fwait
or
lods
and
sarb
lods
xor
dec
das
dec
dec
adc
push
inc
jg
insl
adc
js
sahf
mov
pusha
and
cs
inc
mov
sahf
fsubr
iret
push
shrb
ja
adc
inc
scas
sub
in
inc
mov
fimull
lahf
mov
inc
ljmp
pop
enter
add
test
rcl
inc
add
pop
xor
jb
ja
scas
and
xor
add
lahf
mov
and
test
mov
pop
enter
mov
test
rcl
fisubrs
pop
mov
and
lahf
mov
push
and
and
push
lahf
mov
in
pusha
jo
lahf
and
test
mov
mov
inc
push
pop
jb
je
notl
bound
mov
xchg
je
dec
fimull
outsl
aas
data16
jns
push
outsb
pushl
push
jbe
pop
mov
orb
out
js
sbb
add
pop
clc
data16
mov
push
and
inc
xchg
outsl
add
adc
addr16
mov
mov
add
jns
add
jo
test
sahf
or
aam
mov
add
or
mov
aas
sahf
mov
aad
addr16
mov
popf
or
mov
push
pushf
push
mov
xchg
arpl
cmpb
mov
sbb
daa
mov
sahf
out
es
enter
js
adc
mov
scas
movsb
or
and
dec
pop
pop
outsb
insb
popw
and
dec
dec
dec
xchg
inc
sahf
sbb
data16
lods
rorl
pop
in
movsl
and
xchg
sbb
mov
push
adc
mov
addr16
addb
pop
out
arpl
mov
jb
xchg
int
clc
mov
dec
inc
push
jb
push
inc
cmp
sub
and
add
xor
push
scas
push
fwait
negl
mov
push
or
lock
fnstcw
les
ss
les
iret
sti
out
es
pop
mov
mov
jns
pusha
inc
xchg
iret
popf
mov
ds
mov
fs
sub
int
jns
mov
loopne
cmp
jo
scas
fsubs
mov
or
cmp
xchg
mov
mov
xchg
inc
iret
jo
inc
add
int
test
stos
dec
add
pop
mov
mov
add
mov
pop
pusha
push
hlt
js
out
add
sbb
add
jle
push
arpl
in
pusha
and
ja
jb
pop
push
xchg
dec
or
push
outsl
enter
vmread
or
add
mov
pushf
dec
mov
add
inc
xchg
xchg
outsb
add
jb
fwait
or
mov
add
enter
in
and
pushf
outsl
cmp
cmp
or
mov
or
aam
scas
add
enter
inc
jo
outsl
jl
xor
movsb
ret
xchg
cld
fbstp
aam
pop
jp
aas
aaa
or
push
push
pushf
fs
sub
and
scas
add
outsb
nop
out
testl
xor
dec
dec
xor
mov
adc
cmp
mov
outsl
sub
sarb
add
mov
bnd
mov
jmp
aaa
mov
mov
or
repz
fcompl
mov
mov
and
jle
lods
in
add
mov
mov
scas
sbb
ja
push
sbb
popf
rolb
out
ja
cmp
outsl
add
add
or
and
outsl
and
dec
js
mov
mov
mov
nop
outsl
leave
mov
test
dec
and
aad
cmp
sub
xchg
cs
jp
add
fcom
cmp
mov
mulb
nop
out
jl
mov
inc
testb
mov
push
pop
leave
in
adc
add
lods
in
movl
jnp
iret
pop
sahf
ror
fcomps
xchg
jg
dec
and
pop
cmp
and
scas
clc
add
dec
aaa
mov
add
sbb
mov
lds
test
sar
test
and
nop
ja
scas
cmp
mov
xchg
push
out
and
add
xchg
mov
movsb
jbe
rcrl
or
int
pop
shll
hlt
push
lds
cmp
xchg
sbb
ret
push
rcr
xchg
fmuls
movsbl
mov
js
test
fcoml
enter
xchg
or
dec
stos
dec
or
mov
ret
jne
daa
xlat
or
sbb
lds
add
daa
or
push
mov
pop
ret
rorb
pop
ret
and
inc
outsl
and
and
dec
ss
add
insb
add
addl
jnp
pusha
push
call
inc
data16
aaa
aad
push
bnd
addr16
rolb
ror
aaa
outsb
fsubl
push
outsl
push
cmpsb
mov
sub
or
and
xor
add
nop
testb
jmp
movsb
mov
jbe
daa
in
cmp
jg
lock
xchg
cmpl
nop
sbb
mov
nop
push
pushf
push
mov
filds
aaa
pop
int3
pop
pop
cmpsl
or
clc
aaa
nop
imul
push
sub
or
add
subb
push
sbbb
xchg
xchg
and
mov
shll
addr16
lahf
iret
and
nop
and
daa
out
dec
sub
es
sbb
add
call
aas
sbb
sub
movsb
push
push
push
idivl
mov
enter
cmp
add
les
xchg
or
je
push
or
aaa
or
push
xchg
es
pop
outsl
in
lods
add
or
mov
sub
movsb
xchg
xchg
cmp
xchg
xor
sub
add
test
mov
aaa
enter
xor
enter
or
mov
pop
scas
add
sub
or
adc
in
sub
sahf
andb
and
mov
mov
or
add
dec
enter
sbb
and
xor
inc
xor
push
cmp
das
addr16
and
call
sub
mov
adc
mov
inc
xchg
addr16
xchg
icebp
dec
lret
dec
idivl
shll
xchg
insb
pop
and
xchg
hlt
lret
add
es
add
test
ja
adc
lret
inc
push
push
aaa
xchg
xchg
inc
test
in
nop
out
adcb
mov
sahf
mov
in
mov
lea
int3
dec
xor
xchg
inc
ja
jno
insl
outsl
xchg
hlt
pushl
pop
rolb
mov
push
mov
xchg
xchg
lock
pop
lcall
shrb
adc
jl
out
fs
lret
stc
sbb
repz
roll
mov
sahf
out
jo
pop
mov
pop
jno
push
mov
shlb
jb
jge
cmp
repz
add
dec
jne
imul
je
jb
cmp
repz
es
jbe,pn
mov
ja
cmpsl
ret
cmp
repz
mov
add
jns
cmpsl
xor
xchg
mov
call
mov
ds
jnp
push
dec
fs
cmp
ds
fsin
sub
mov
enter
mov
stc
cmp
repz
jle
lods
loope
jg
jns
cmpsl
sub
cmp
add
inc
dec
repz
orl
cmp
sub
iret
sarl
cs
cmp
out
out
xchg
lret
adc
repz
jmp
mov
or
mov
mov
in
mov
mov
xchg
roll
cmpl
jns
iret
repz
lret
fs
cmp
out
sub
sarl
ds
out
lcall
mov
hlt
iret
xchg
inc
xchg
scas
out
stc
cmp
cs
outsb
stos
cs
push
out
jl
jno
adc
repz
and
lcall
aam
push
fwait
sbbl
loope
iret
sarl
push
lahf
rclb
imul
push
iret
sarl
in
mov
sarl
out
mov
sarl
aam
movsb
lods
filds
ret
jns
movsl
insl
mov
incb
cmpsl
stc
cmp
pop
shl
cmpsl
iret
sarl
call
in
out
ds
test
ds
sarl
jno
jmp
ds
repz
jecxz
lcall
jns
scas
lcall
inc
cltd
hlt
xor
subl
fwait
iret
rep
rorb
mov
mov
jge
cmpsl
stc
pop
mov
jp
adc
pop
push
mov
out
repz
mov
out
jl
out
mov
push
movsb
loopne
mov
xor
cmpsl
stc
and
iret
mov
add
dec
repz
mov
push
xchg
sahf
cmpsl
stc
cmp
shrl
fwait
iret
sarl
mov
les
and
insb
mov
enter
ss
xchg
outsb
dec
data16
fwait
into
xchg
sarb
aad
idivb
int
xlat
jmp
push
pushf
fcompl
imul
xor
pop
loope
hlt
sub
xlat
in
cld
out
fistl
pusha
icebp
outsl
int3
add
pop
add
popf
push
aas
aam
inc
mov
sub
sub
movsb
aaa
repnz
cmp
shlb
scas
add
xchg
pop
orb
mov
pop
mov
out
addl
mov
xchg
push
add
aas
inc
xor
daa
imul
sbb
pop
push
mov
pop
mov
aas
scas
mov
inc
adc
ficoml
lahf
and
xchg
cld
jg
in
imul
aas
pushf
xchg
pop
mov
ficompl
mov
adc
outsl
lahf
fstl
fmul
out
mov
out
outsl
mov
inc
out
mov
mov
idivl
push
dec
aas
repnz
sar
or
push
aaa
aas
add
lds
and
and
sar
in
inc
pop
push
sbb
flds
lea
lahf
pop
daa
ret
inc
fwait
jge
rcl
sub
pop
jl
mov
push
adc
dec
add
scas
leave
aam
movsb
mov
xor
dec
adc
dec
rolb
fcompl
mov
push
rcrl
jb
cmp
dec
xlat
pop
out
notb
push
filds
rorb
inc
push
dec
cmp
pop
adc
add
mov
cmp
push
push
push
push
dec
je
and
lret
fmuls
sbb
add
dec
aaa
lock
lods
add
fnstsw
jb
inc
or
add
mov
test
pop
push
addr16
xchg
testl
jmp
fcomp
pusha
mov
dec
fmul
daa
call
lret
push
dec
add
sub
fldenv
ffreep
ja
je
leave
jg
fbld
mov
fbstp
in
out
int3
mov
jo
pop
adc
fiaddl
push
pop
and
pop
aaa
sub
mov
xchg
in
and
add
fidivs
and
test
leave
inc
mov
adc
inc
fdivp
sar
stos
shl
add
sbb
cmp
fstpt
leave
inc
jb
cs
jno
out
je
jl
or
xlat
cmp
sub
jnp
push
faddl
hlt
daa
adc
mov
pusha
rclb
and
fmull
and
xchg
push
push
movaps
jbe
push
sbb
testl
mov
iret
nop
daa
rolb
pushf
sbb
xor
push
aas
aam
cmpsl
ljmp
and
or
scas
push
fstpl
js
or
jo
mov
in
mov
lret
xchg
pushf
fimuls
in
inc
sbb
jb
pop
push
bound
add
add
add
xor
lea
cmpsl
push
xor
js
dec
or
xchg
mov
pop
ficomps
addr16
dec
adc
bound
xlat
inc
shll
out
jmp
adc
mov
and
filds
in
loopne
jb
hlt
je
sbb
test
mov
dec
push
iret
mov
add
in
adc
daa
cld
out
dec
shr
gs
add
xchg
loopne
xlat
insl
outsl
pop
mov
and
xchg
imulb
addr16
pushf
pop
idiv
fs
add
lsl
xchg
and
add
xchg
xchg
mov
leave
fsubs
fs
xchg
xchg
xchg
xchg
push
pop
bound
add
loope
lea
fistl
shrd
mov
addb
pushf
pop
inc
loopnew
repz
incb
or
add
pop
push
sub
xor
inc
mov
or
arpl
daa
xchg
xchg
push
aaa
push
loope
gs
popf
cmp
add
mov
cmp
mov
out
lds
je
gs
data16
rorb
sbb
and
xor
addr16
jecxz
add
or
in
and
jecxz
jecxz
daa
push
mov
pop
mov
in
or
rclb
and
push
lret
add
add
repnz
in
add
add
pop
xor
lea
clc
insl
cmp
push
out
addr16
out
pop
push
addr16
mov
aaa
in
push
subb
jbe
das
outsb
fmull
in
in
daa
fmuls
mov
xchg
pushf
in
in
daa
xor
stos
fwait
and
pop
inc
push
test
sbb
and
sbb
add
add
stc
push
inc
lods
xlat
out
dec
or
cwtl
adc
push
adc
rolb
pop
cwtl
daa
es
je
daa
push
ss
push
mov
sbb
and
mov
les
mov
lock
imul
out
jl
in
out
daa
dec
out
jp
mov
xchg
out
daa
movsb
cmp
loopne
imul
call
xchg
aad
push
fstl
into
adc
push
in
pushf
inc
jb
call
popf
call
push
inc
mov
cmp
inc
add
inc
jb
mov
enter
pushf
pushf
pushf
jge
lea
add
adc
inc
mov
jmp
leave
dec
dec
push
dec
push
jmp
adc
push
fadd
lds
mov
imul
add
aas
ljmp
or
xor
leave
add
add
nop
xchg
xchg
dec
js
push
mov
rol
sbb
es
ja
imul
fidivl
imul
xchg
mov
hlt
out
daa
sub
sbb
and
iret
cmp
cmp
dec
pop
mov
adc
add
cmpsl
jmp
cmpsl
jmp
daa
cltd
xchg
pop
push
call
mov
rorl
in
in
out
mov
out
inc
jb
mov
mov
shl
insb
insl
push
inc
mov
lahf
push
and
das
push
xchg
xchg
and
pop
inc
push
jg
das
xchg
dec
or
insl
subl
in
mov
imul
shlb
xor
sbb
insl
push
inc
out
enter
outsl
outsb
adc
mov
sbb
out
inc
ja
inc
dec
cs
imul
outsl
jb
popf
negb
jns
xchg
mov
movsb
push
lods
enter
pop
in
out
add
xchg
imul
ljmp
push
pop
cs
dec
cs
test
sbb
mov
and
and
imul
push
inc
jo
pop
cmp
jo
fbstp
scas
pushf
and
enter
les
mov
add
dec
lock
in
inc
jb
jno
fcomip
cmp
setl
fidivs
push
jp
fcomip
fs
jb
movsl
test
dec
and
pop
out
aam
cmp
inc
mov
aaa
das
lcall
repnz
adc
mov
daa
sub
and
pusha
push
mov
lahf
mov
sbb
jno
and
daa
mov
add
dec
mov
repnz
daa
adc
jb
stos
cmp
repz
jbe
inc
jo
xlat
jnp
addr16
aas
cmpsb
scas
add
mov
aam
fsts
in
or
inc
mov
xchg
cli
or
jbe
and
inc
pop
ljmp
outsl
xlat
cs
add
hlt
dec
dec
xor
sahf
hlt
dec
add
xchg
pcmpeqb
enter
push
popa
add
mov
jb
add
in
and
pop
mov
je
dec
dec
adc
hlt
loopne
je
jb
adc
cmc
push
jne
aas
jne
xchg
outsl
shl
xor
popl
pop
cmc
test
lea
pop
fistpll
push
insb
add
mov
inc
lock
pop
in
divb
lock
jbe
dec
mulb
mov
jbe
jbe
pushf
push
pusha
punpckhwd
fs
push
jae
jge
das
rcrb
cltd
mov
inc
xor
rcl
dec
je
xchg
jbe
emms
add
xchg
dec
into
addr16
pusha
cmp
inc
addr16
aaa
pop
leave
dec
movsl
push
fs
xchg
pop
jbe
dec
fimull
ret
int
clc
and
and
mov
clc
out
adc
fimull
scas
js
xchg
in
adc
daa
leave
leave
inc
mov
or
mov
add
lock
popf
fmull
cmp
jns
xor
add
jns
repnz
pop
push
and
sbb
out
pop
cmpsb
lods
iret
push
into
lret
enter
out
mov
pop
clc
jg
adc
mov
das
jp
pop
daa
add
mov
jns
add
push
push
pop
stc
or
out
jp
dec
dec
fisubrs
mov
push
xchg
xchg
daa
and
movsl
ret
enter
inc
adc
pop
test
push
push
push
cmovnp
sbb
push
dec
lods
xchg
push
xchg
mov
mov
pop
push
mov
ror
add
inc
mov
mulb
jl
add
or
add
sbb
jb
add
adc
push
jle
cld
jl
dec
daa
mov
xlat
imul
test
into
test
sbb
imul
cld
aam
push
push
pusha
aas
jge
xchg
inc
sub
jge
ds
notb
std
inc
std
sbb
jns
and
push
incl
call
and
std
std
sbb
fmull
jge
push
inc
dec
jnp
mov
cmpsl
mov
and
out
test
lods
subb
scas
inc
daa
fildl
in
push
je
ret
in
add
cmc
std
mov
xchg
cwtl
jle
push
sub
leave
enter
add
add
ja
fimuls
push
push
pop
iret
or
cmp
fistpll
incl
mov
jg
dec
dec
scas
shr
repnz
cli
mov
mov
jg
add
or
push
adcb
jmp
inc
jg
jg
dec
push
sbb
fiaddl
or
adcl
sbb
mov
cmp
jns
jg
jg
add
fbld
into
sti
or
mov
push
movl
xchg
xchg
pop
outsl
xchg
and
mov
xchg
enter
scas
add
and
loope
xlat
add
pop
dec
sbbl
cmp
and
add
dec
add
pop
push
addr16
jne
or
sahf
call
dec
push
push
add
rcr
ja
int3
xlat
ja
dec
iret
repnz
emms
push
sbb
push
leave
dec
aaa
and
repnz
dec
pop
jmp
movsb
or
xchg
mov
add
mov
mov
inc
iret
aam
fmul
es
shr
paddsb
add
insl
cmp
mov
push
pop
in
xchg
daa
daa
add
add
add
aas
push
inc
dec
or
sahf
mov
or
or
or
jg
xchg
leave
xchg
lahf
adc
sbb
scas
adc
mov
sbb
push
test
add
sub
add
jns
inc
pop
cmpsl
push
add
out
jbe
jb
imul
cs
xchg
add
fmulp
mov
outsl
add
in
and
push
str
pop
data16
add
pop
test
mov
fmuls
mov
into
jg
ja
pop
in
in
fimuls
out
testb
fs
decb
xchg
inc
fiadds
or
add
invd
addb
push
add
pushf
jbe
pop
fs
adc
push
gs
data16
popf
add
push
movsb
dec
testb
push
mov
fsubp
xor
shlb
sarb
adc
sbb
cmova
in
rcrl
dec
in
pop
inc
fisttps
in
adc
pop
jo
pop
push
daa
subb
loop
or
xchg
sub
fcomps
cmp
adc
das
mov
xchg
dec
adc
or
pop
cmc
nop
idivl
das
pop
fildl
lods
adc
push
outsl
sbb
xchg
in
pop
sti
ja
cmp
push
pop
push
pushl
cltd
rolb
shlb
cmp
xlat
xchg
incl
jbe
or
gs
in
and
in
and
or
dec
dec
fcoms
cwtl
cmpsb
mov
mov
dec
out
les
push
loopne
enter
out
push
incb
mov
or
jb
sbb
sub
addb
mov
mov
mov
jb
jns
mov
xchg
and
mov
rorl
loope
mov
push
or
in
inc
and
push
or
xor
add
daa
repnz
hlt
mov
pop
mov
pop
pop
mov
add
xchg
data16
orb
sahf
decl
xor
mov
dec
or
inc
fistps
mov
ja
and
in
and
mov
or
add
out
and
sbb
enter
or
mov
mov
xchg
cmpsb
or
cmpsl
rcl
push
adc
mov
orl
cltd
add
ss
and
pop
in
shlb
negl
je
or
mov
mov
cmp
rorb
or
insl
cmpsb
imul
in
leave
leave
inc
test
insl
ja
leave
rcrl
dec
sub
push
pop
mov
inc
movsb
xor
or
add
xchg
dec
push
cmp
pop
imul
addr16
or
mov
mov
and
enter
stos
out
mov
popf
mov
push
mov
adc
mov
outsl
mov
jg
jbe
mov
lea
enter
add
cmpsl
ds
xchg
mov
cmpsl
push
cwtl
dec
ja
jb
jb
ja
daa
daa
pop
leave
in
mov
in
adc
in
jb
mov
cmc
std
das
mov
pushf
dec
dec
adc
mov
insl
rorb
outsl
mov
ja
gs
rorl
inc
mov
sub
mov
push
mov
adc
shlb
pop
pop
jb
cs
adc
pop
jo
ret
aaa
mov
pushf
pushf
mov
add
mov
cmpsl
nop
pop
movsb
jb
addr16
xchg
mov
mov
ja
add
push
add
das
pop
add
das
xchg
xchg
mov
cmpsl
lahf
mov
mov
pop
leave
mov
cmpsl
in
repz
cmp
adc
adc
pop
cwtl
ljmp
xchg
testl
insl
add
in
in
fs
aas
js
das
orl
jnp
jb
or
mov
jns
pop
push
lds
shlb
pop
adc
inc
ds
dec
xchg
out
push
push
add
mov
es
inc
sahf
pushf
cs
ds
add
imul
adc
fimuls
and
mov
sbb
dec
inc
lcall
in
fdivp
add
xchg
add
inc
mov
or
adc
daa
and
sub
inc
inc
lds
lahf
adc
push
data16
cmovle
xchg
outsb
addr16
stos
mov
add
sub
and
xchg
aas
jnp
sub
sbb
xor
dec
cmp
push
add
cmp
jae
pop
pop
mov
dec
ja
xchg
dec
mov
popa
add
movsb
mov
maxps
pop
xor
repnz
add
das
add
sbb
pop
aas
xlat
or
xchg
pushf
orb
dec
es
add
popf
movsl
pop
movsl
movsb
rcrb
mov
iret
cmpsb
lods
push
mov
mov
fmuls
loopne
outsb
daa
mov
pop
call
push
mov
daa
cmp
dec
and
scas
xchg
xor
and
mov
xchg
xchg
fs
sbbl
daa
xchg
add
sbb
test
jb
inc
xor
test
xchg
pop
add
lar
dec
popw
pop
pop
sbb
xchg
fcmovne
leave
mov
pop
and
xchg
pop
add
jge
cmp
popf
test
lea
fisubl
in
ja
xchg
xchg
loopne
aaa
xchg
pushf
sbb
std
push
or
jge
sahf
adc
push
and
repnz
xor
cmp
or
leave
push
pop
data16
arpl
xchg
inc
sub
mov
mov
aam
xchg
pushf
jbe
xchg
sub
imull
emms
add
xor
leave
dec
in
add
fbld
insl
loopne
xor
nop
aas
sbb
xchg
fucomi
inc
cltd
mov
mov
or
dec
lcall
sbb
out
mov
add
xchg
xchg
das
lcall
sub
sbb
or
xor
dec
outsb
pop
in
hlt
ja
setbe
test
sbb
outsb
mov
out
rorl
frstpm(287
in
adc
jmp
je
in
mov
push
sub
cmp
inc
dec
mov
push
movsb
pop
aas
fwait
mov
add
lods
add
inc
ret
add
mov
dec
jb
out
pop
push
and
pushf
adc
push
iret
xchg
xchg
dec
cmp
loopne
in
pop
add
outsb
jbe
inc
xor
sysret
rcrb
mov
das
bnd
pop
rorl
fdivl
pslld
pushf
cmp
cmp
add
or
add
sahf
int3
sahf
mov
sub
pop
xor
or
addr16
inc
dec
push
or
xchg
xchg
daa
daa
jl
adc
adc
mov
lahf
ret
ror
pop
fcom
sbb
or
adc
mov
xchg
mov
push
ds
xor
pop
cmovbe
cmp
out
imul
addr16
out
pushf
pushf
in
test
add
cmp
fs
push
mov
dec
inc
mov
or
fmull
in
pop
stc
add
pop
lahf
push
push
lahf
push
les
lock
inc
popw
enter
arpl
loopne
dec
dec
test
pop
add
adc
inc
push
mov
daa
pushl
mov
ret
or
add
add
fiaddl
loop
pop
ljmp
sbb
pop
mov
sbb
and
adc
mov
daa
out
and
add
orl
shrb
pushf
pushf
fmull
mov
mov
fcompl
push
fcoml
in
pop
or
cmp
xor
ret
adc
and
dec
cmp
lcall
jo
jb
jae
pop
pop
in
and
fcomps
pushf
and
leave
rorl
sbb
in
fldcw
and
dec
jae
cmpsl
mov
mov
or
jb
leave
adc
add
add
arpl
fisttps
mov
fildl
dec
dec
out
add
add
daa
mov
and
in
jno
inc
ja
cmp
push
pop
mov
add
fimuls
push
pop
test
mov
or
cwtl
pop
jg
jb
loop
push
inc
in
mov
cmp
mov
outsl
inc
add
dec
pop
pop
fs
enter
add
jb
in
nop
or
fwait
or
mov
mov
fisttpll
in
xchg
and
adc
adc
adc
or
adc
pop
adc
and
pop
inc
sbb
jb
jb
push
sbb
sbb
jb
jb
push
adc
jb
adc
adc
pop
popa
jb
push
or
xchg
sub
push
movsb
xchg
add
pop
add
pushf
pop
movsb
movsb
add
lods
in
mov
mov
pop
daa
in
daa
mov
dec
mov
iret
fsts
fcomip
out
add
test
pop
inc
cmp
dec
sub
push
sub
daa
nop
lcall
pop
push
movsl
and
inc
movsb
or
push
sbb
loop
incl
sub
xchg
popf
sahf
and
inc
mov
push
flds
loope
jmp
enter
add
aaa
enter
or
sub
inc
mov
addr16
fwait
cmp
push
sub
iret
mov
push
inc
mov
cmp
jo
repnz
ja
out
add
leave
xchg
adc
movsb
cmpsl
and
fucomi
xor
inc
add
and
jo
cs
mov
sub
mov
stos
pop
mov
sub
xchg
jo
jg
add
out
rclb
idiv
add
dec
test
push
add
in
or
or
cs
popf
mov
ss
dec
sub
aas
inc
mov
sub
add
jns
loopne
pushf
subl
mov
test
xchg
jo
jb
add
fildl
out
loopne
sub
cmpsl
adc
sub
daa
ljmp
sbb
add
add
xchg
daa
and
ss
leave
enter
or
subb
and
xchg
jno
out
fildl
pop
aas
sub
xor
sub
iret
test
push
lods
add
xchg
add
enter
pop
imull
out
stos
or
inc
and
daa
dec
push
addps
pusha
jb
mov
mov
add
pushw
xchg
xchg
ss
xor
xchg
jl
das
xor
adc
xchg
dec
out
stos
inc
dec
dec
fisubrl
dec
cs
fdivrl
push
loop
aaa
xor
pushl
cmp
add
mov
push
add
dec
add
cmpsl
lods
sbb
fimull
sub
cs
or
scas
lahf
or
test
xor
pusha
xchg
cmp
imul
addr16
cmpsl
xor
rorb
push
xchg
add
mov
stos
lahf
lods
mov
out
push
jb
leave
enter
flds
add
jmp
xor
push
add
stc
lods
add
mov
movups
sbb
subb
xor
into
pop
mov
dec
divl
pop
mov
mov
mov
out
out
or
cmp
rcrb
imul
popf
aas
scas
sub
xor
in
add
add
dec
jb
jb
push
pop
addr16
cmp
jns
or
mov
popf
pushl
add
cmp
scas
shrb
ss
jmp
scas
insl
push
or
push
call
cmp
push
pop
push
inc
add
dec
mov
add
or
jge
mov
dec
mov
sahf
aas
punpcklwd
scas
shll
add
hlt
and
cmp
lahf
mov
add
mov
cmc
add
loopne
clc
fistpll
push
bswap
in
dec
mov
das
add
mov
mov
dec
fbstp
pop
cmpsl
dec
jp
into
pop
mov
sub
ss
mov
mov
xor
cmp
xor
out
mov
mov
mov
mov
movsb
add
addr16
popf
pushf
mov
addr16
mov
leave
inc
xor
cmpsl
push
pop
pop
scas
loopne
enter
pop
mov
pop
mov
cmp
shll
inc
dec
punpckldq
in
and
dec
cs
xchg
add
sub
roll
leave
mov
or
inc
sbb
mov
lahf
jb
in
mov
push
add
pop
add
mov
pusha
add
add
dec
dec
dec
add
add
xchg
and
or
popa
in
leave
or
nop
adc
pop
adc
mov
or
pop
cmp
mov
mov
sbb
sarb
lsl
add
add
mov
in
and
or
or
test
fs
mov
mov
jb
pop
sub
pop
sahf
sub
rorb
jg
daa
pusha
rcrb
ljmp
popf
xchg
setp
mov
mov
adc
cmp
adc
adc
push
leave
in
in
mov
or
adc
fs
sbb
sbb
sub
xor
pop
cmovb
and
cltd
cmp
pop
pop
bound
jnp
jnp
es
jb
sub
sub
inc
mov
sub
fs
xchg
sub
mov
jns
in
mov
cmp
bound
mov
push
inc
test
enter
and
mov
or
sbb
pcmpgtb
add
mov
add
jmp
sub
push
cmp
mov
inc
add
cmp
cltd
cmpsb
push
jo
mov
aas
in
adc
test
push
fsub
enter
loopne
add
add
repnz
cld
or
cmp
pop
sbb
sub
xor
adc
adc
jle
mov
xchg
and
adc
sbb
jb
mov
sbb
sbb
sbb
sbb
jb
enter
and
push
and
inc
mov
and
jb
enter
daa
pusha
sub
jbe
sbb
je
jl
aas
xchg
pop
outsb
mov
in
pushf
jg
lahf
scas
mov
inc
into
fdivrp
and
shlb
ficompl
loop
in
xchg
push
ljmp
mov
mov
adc
sbb
in
xchg
and
adc
xchg
adc
jb
adc
popl
out
mov
inc
andb
dec
mov
sbb
mov
testl
movl
in
cmp
in
icebp
or
or
and
sbb
or
inc
jb
enter
adc
adc
sbb
push
push
xchg
in
xchg
and
sbb
sbb
sbb
sbb
and
pop
out
and
sbb
jb
mov
adc
inc
mov
sbb
sbb
sbb
jb
enter
pop
push
push
pop
adc
push
jb
jp
xorb
xchg
adc
push
inc
mov
mov
or
and
or
or
pop
mov
push
out
add
cmp
dec
inc
dec
aas
or
cmp
push
and
fucomi
push
mov
pop
insb
pop
testb
arpl
imul
jnp
or
or
fistpl
xchg
or
jbe
jb
stos
adc
in
xor
lret
adc
fstpl
in
xor
in
negl
mov
stmxcsr
and
inc
and
in
xchg
in
out
pop
add
push
fs
add
xchg
xchg
fcmovne
mov
enter
ror
repnz
adc
cli
adc
mov
jb
or
in
in
sub
cmp
in
push
sbb
add
and
push
mov
mov
lods
add
xor
int3
add
pushf
sbb
cmp
psadbw
incb
or
int3
sahf
mov
pop
push
push
add
and
adc
ss
push
stc
xor
ds
inc
leave
mov
push
mov
jb
in
addl
add
add
scas
push
mov
in
xchg
and
or
mov
shrl
repz
decb
das
or
psadbw
cmp
pop
xor
pop
enter
push
popa
pop
ja
xor
fs
sbb
cmp
jns
sbb
and
sahf
fisubl
in
and
xchg
mov
and
push
and
daa
daa
daa
mov
daa
xor
cmp
daa
daa
pop
imul
ror
jg
pop
xor
cmp
test
add
inc
mov
add
add
add
repnz
xchg
add
roll
fnstcw
fisttps
and
pushf
pushf
mov
sahf
pushf
pushf
pushf
dec
push
pop
adc
dec
inc
insl
jne
jge
test
pop
dec
dec
push
xchg
adc
mov
sbb
adc
mov
and
xor
push
rcr
repnz
dec
dec
dec
mov
add
adc
in
sbb
dec
ret
xor
sbb
iret
inc
shr
push
mov
ret
js
int3
into
cs
add
pushf
daa
pop
pushf
pushf
test
mov
iret
ret
or
or
ret
add
or
enter
pop
add
mov
jnp
adc
dec
adc
push
mov
les
sbb
xchg
and
outsb
sbb
sbb
in
xchg
xchg
and
mov
mov
mov
mov
seta
sub
enter
sub
sub
cmp
das
out
xor
xor
add
mov
xor
xor
xor
enter
aas
ds
dec
cmp
cmp
cli
lds
outsl
and
sbb
dec
ds
cmovns
inc
in
fs
push
ja
test
fistpl
add
dec
popa
orl
lahf
dec
cmp
add
dec
aas
mov
in
enter
pop
sti
ffreep
jb
in
sub
adc
sbb
sub
pushf
cmp
aas
dec
or
push
or
outsl
pop
jp
xchg
enter
xchg
pop
adc
in
adc
scas
push
repnz
ficoms
jb
sbb
or
adc
cmp
jns
sbb
and
in
jbe
push
and
dec
loopne
dec
es
repnz
dec
int
aad
fbld
cmp
sbb
pop
enter
push
fisttpll
lidtl
add
dec
add
add
mov
push
or
pop
or
pop
xchg
fnstenv
pop
jge
dec
xchg
fs
xchg
push
sahf
pop
adc
rorl
adc
adc
adc
sbb
push
in
pop
clc
sbb
add
and
and
pop
sbb
das
and
das
daa
daa
mov
cmp
cmovne
in
xchg
daa
pop
and
jno
outsl
adc
and
popf
sub
sub
dec
enter
sub
loop
movsb
repnz
dec
add
daa
in
mov
pop
lret
inc
add
mov
jb
add
add
jbe
popf
je
jl
test
mov
dec
int3
jb
cltd
mov
mov
dec
dec
dec
cs
lock
xchg
mov
iret
bswap
push
or
or
sbb
imulb
or
fsts
push
adc
mov
adc
pop
add
inc
inc
mov
mov
sbb
int3
pop
lahf
push
mov
and
push
rcrb
frstor
sbb
in
ljmp
daa
and
sbb
or
mov
int3
inc
sbb
push
int3
cmp
sbb
pop
int3
pmaddwd
push
xor
or
subl
scas
jb
movsb
or
pminub
mov
add
int
xchg
and
adc
pop
push
or
or
jb
enter
or
pop
or
data16
adc
inc
xchg
adc
xchg
fnstenv
outsl
fmuls
jecxz
mov
and
lock
into
push
movups
test
dec
inc
ds
pop
std
push
dec
add
dec
dec
pop
lahf
into
jne
sbb
mov
jge
test
lea
dec
inc
dec
or
daa
and
lods
or
enter
outsb
aas
rorl
fistl
pop
jecxz
adc
inc
inc
into
psllq
aaa
cmpsb
iret
iret
jg
sbb
and
in
enter
sbb
sbb
cmp
jb
in
inc
push
cmovl
push
and
xchg
push
sbb
push
gs
or
iret
dec
iret
xorb
scas
btc
sbb
add
mulb
std
or
or
inc
dec
mov
or
or
sub
leave
enter
adc
adc
in
fs
adc
das
jbe
and
mov
jg
lahf
jbe
aas
sbbl
xchg
sbb
jb
idivb
and
fildl
pop
mov
out
icebp
and
and
repnz
push
sbb
aaa
push
sub
js
or
das
fidivrl
ret
push
aam
push
les
movsb
pusha
shlb
push
jbe
mov
xchg
shll
cs
pop
xchg
ss
sub
insb
out
movsb
sarb
push
xchg
adc
dec
inc
dec
mov
leave
xchg
and
or
push
or
leave
add
xchg
mov
in
jne
orb
pop
lods
adc
leave
enter
pop
push
fs
lret
fsts
shll
pop
cmp
pop
inc
cmp
repnz
sbb
sbb
jae
inc
mov
jle
pop
stos
and
mov
dec
out
and
cli
aam
and
adc
sbb
daa
xor
pop
cmp
outsb
outsl
daa
cmp
cmp
das
sub
sub
push
pop
das
pop
push
xchg
jae
aas
jae
das
jle
mov
fsts
lahf
stos
bswap
fs
xchg
push
shl
cmp
or
sbb
jns
add
aas
es
and
push
js
decl
sarl
dec
aad
addr16
adc
daa
and
cmp
inc
push
cmovle
data16
or
inc
sahf
xchg
lahf
das
stos
sahf
mov
rclb
adc
popf
int3
psraw
das
stc
add
mov
sbb
sbb
jns
jb
dec
push
push
pusha
mov
cmp
jbe
andl
popf
fistpl
mov
mov
xlat
pop
sub
xchg
daa
mov
jbe
das
orl
xor
mov
ret
xor
sbb
xchg
fucomi
xor
aas
cmovp
sbb
repnz
movsb
push
in
dec
inc
push
test
or
push
fcomps
mov
add
daa
pop
outsb
dec
dec
inc
das
aaa
inc
pop
or
rcpps
pcmpeqd
insl
lahf
fdivrs
push
mov
mov
pop
push
in
pop
or
inc
jbe,pn
jnp
sbb
push
loopne
mov
xchg
mov
xor
imul
daa
mov
dec
pop
pop
rolb
daa
enter
jne
add
or
adc
or
push
xorb
js
lret
cs
inc
push
test
mov
inc
or
inc
scas
pop
inc
add
cmp
insl
or
pop
aaa
xlat
add
push
xchg
ja
cs
mov
sahf
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
xlat
xchg
fistl
add
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
loopne
xor
sbb
fadds
adc
jmp
add
xchg
adcb
push
dec
inc
add
ljmp
mov
test
inc
test
clc
add
add
pusha
pusha
cmpb
mov
inc
fldenv
cmc
ja
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
cmpsl
in
jle
push
ficompl
push
pop
fisubrl
xor
fsubrs
xchg
in
fsubp
stc
jb
jle
out
aas
dec
xchg
hlt
jl
js
sahf
out
sahf
jo
push
sahf
out
dec
inc
xor
and
jns
out
sbb
or
fidivs
or
repz
push
clc
hlt
in
jns
out
call
iret
repz
repz
mov
cmp
repz
test
sub
das
mov
out
inc
cmp
sub
jns
negl
push
in
fadd
out
sahf
out
mov
iret
jnp
cmpb
push
iret
repz
dec
inc
xor
mov
icebp
clc
push
in
fcoml
mov
out
mov
mov
or
add
add
leave
pusha
and
adc
bound
mov
xor
test
pop
sahf
xchg
in
insl
push
fcom
cmp
mov
xor
add
ja
sbb
inc
ja
pop
mulb
daa
mov
pop
orb
add
sub
push
xorb
mov
call
push
mov
outsl
inc
mov
push
pop
popa
cmpsl
popa
add
andps
add
loopne
inc
movl
add
sbb
arpl
mov
add
pushf
push
mov
mov
imulb
pop
mov
add
iret
sub
sbb
xchg
pop
xchg
push
into
push
cs
insb
add
push
enter
adcl
pop
or
add
add
out
std
inc
mov
es
or
sub
pushf
movups
add
add
add
enter
and
das
cmp
jb
cmc
clc
or
adc
xor
cmp
push
das
mov
mov
addr16
mov
or
adc
mov
and
adc
adc
or
sbb
repnz
pop
pop
clc
and
and
and
and
in
and
jo
or
or
imul
daa
xor
dec
testb
es
incl
xorl
fistl
cmp
out
push
pop
js
mov
jnp
add
xor
dec
insl
out
fidivs
ja
fidivs
js
mov
bnd
das
push
dec
or
sub
dec
push
repnz
pop
pop
mov
xchg
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
decl
lock
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
add
int
add
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
lcall
movsb
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
dec
gs
std
orl
pop
ficomps
frstor
test
cmc
add
sbb
and
dec
adc
sbbb
xlat
add
pop
repnz
push
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
or
cmp
mov
mov
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
cmp
pop
push
aas
dec
insb
imul
addb
cmp
adc
mov
adcl
push
inc
dec
push
mov
dec
shr
jo
jb
push
inc
rorl
out
add
xor
gs
gs
daa
mov
and
inc
ds
arpl
adc
push
pop
sti
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
sub
and
xorb
aam
push
xchg
push
mov
push
mov
add
pop
das
push
fs
or
sbb
aas
pusha
push
or
dec
imul
ret
inc
dec
daa
daa
and
imul
dec
jae
imul
xor
inc
jg
in
sbb
inc
inc
jns
dec
lahf
push
lcall
push
cmp
jmp
adc
data16
jns
add
inc
ljmp
cltd
dec
in
inc
movups
out
dec
push
dec
imul
orl
push
stos
sub
push
dec
test
push
mov
inc
adc
int
cmpsb
dec
inc
add
iret
push
xchg
inc
pop
dec
popa
jne
arpl
test
push
shrb
dec
pop
repz
adc
mov
add
sub
ja
inc
xchg
push
cmp
loopne
shr
js
cli
dec
sub
push
ss
push
sub
dec
negl
push
testl
imul
pop
arpl
outsl
push
mov
jbe
lds
das
sbb
test
outsb
or
lock
push
push
and
gs
stos
and
sbb
outsl
stos
push
pop
mov
push
push
adc
movsb
pop
cmpsl
pusha
out
ret
pop
jg
push
sub
outsl
xchg
andb
xchg
lock
in
and
hlt
or
push
add
andb
insb
and
xchg
pop
ja
andb
ja
sbb
sub
pop
sbb
and
roll
stc
lahf
fsubrs
scas
movsl
cmpsb
shll
xchg
push
dec
scas
mov
adc
add
inc
dec
or
stos
pusha
mov
add
sarb
jg
pop
jb
add
loopne
mov
iret
aas
jmp
pushf
add
stos
mov
adc
cmp
cmpsl
push
aad
arpl
test
inc
xchg
dec
xchg
mov
dec
dec
lret
test
fmuls
inc
lods
xchg
jae
popf
fimull
mov
ja
ret
outsb
push
dec
push
stos
loopne
jle
push
jne
les
outsl
jo
lock
adc
imul
outsl
addb
aad
iret
fwait
mov
pop
les
pop
shll
aaa
mov
push
movsb
out
jg
repz
add
inc
sub
xchg
sahf
out
sahf
lock
test
js
fwait
out
pop
inc
or
hlt
cwtl
xchg
push
inc
sahf
outsl
push
push
add
pusha
ds
sbb
js
and
decl
lahf
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
call
add
cmp
or
pop
adc
in
pusha
aad
jno
mov
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fsqrt
fdivs
jne
filds
or
shrl
cmp
fdivrp
decl
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
test
add
or
or
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
incl
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
lcall
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
jmp
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
decl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
call
mov
sahf
fldcw
ret
es
pushf
mov
insl
add
ss
decl
push
jmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
decl
aad
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
call
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
incb
pop
mov
xchg
jg
rolb
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
sub
add
fildl
push
lcall
xor
cli
push
cmp
jns
shl
sub
mov
dec
inc
js
inc
insl
bound
add
or
loopne
add
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
mov
push
dec
inc
sbb
add
ror
mov
cmp
ret
dec
mov
add
fs
pop
or
ss
jbe
in
gs
cmp
or
inc
aas
push
inc
movsb
push
xchg
stos
popa
fs
inc
jle
inc
rcl
bound
sub
mov
getsec
pop
orl
insb
popa
jns
push
add
ljmp
push
push
mov
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
inc
ljmp
sahf
bound
push
inc
adc
stos
aaa
inc
and
sbb
inc
pop
jnp
adc
pop
es
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
sti
mov
push
jge
xor
fidivs
adc
arpl
add
aaa
mov
test
push
push
add
pop
inc
cmp
xlat
scas
inc
adc
add
imul
push
shrb
orb
and
mov
lahf
push
mov
dec
jo
fisubl
pop
mov
xlat
mov
push
and
pop
xchg
loopne
cmpsl
sbb
inc
jb
iret
or
mov
dec
popa
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
mov
inc
bound
adc
in
push
andl
test
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
popl
pop
push
outsl
inc
xchg
stos
shrb
fcom
aad
inc
and
pusha
adc
sahf
mov
stos
cmp
insb
daa
sub
mov
adc
inc
xchg
jne
xor
jg
rcl
movsl
divl
arpl
sbb
xchg
add
adc
js
fmuls
pop
sub
sbb
jg
imull
add
cmp
add
jo
imul
pop
and
movsb
push
xchg
mov
outsl
xchg
fisubl
add
pusha
and
and
rcll
push
or
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
inc
lds
aas
pop
inc
mov
or
and
add
push
inc
sbb
adc
cmpsl
add
push
ret
push
add
nop
aaa
mov
popa
add
clc
test
aaa
sbb
and
aas
add
sbbb
add
sub
je
add
jne
and
mov
insl
xchg
cs
cmpsb
dec
shrd
mul
sub
pop
repnz
lahf
jg
cld
bswap
mov
out
ud0
jmp
in
out
out
repnz
in
push
pusha
ljmp
lret
cli
add
mov
cld
push
imul
andb
es
add
dec
imul
add
sbb
xlat
sub
aam
cmp
add
pop
sti
xchg
int3
aam
sub
out
nopl
mov
add
sbb
add
prefetch
pop
xor
push
test
mov
mov
fistl
pop
subb
or
loop
jno
xor
push
pusha
push
add
pop
add
cld
roll
cs
and
lahf
or
and
lods
add
jb,pn
pusha
inc
add
mulb
inc
ficoms
lret
cs
mov
sub
mov
or
loopne
outsb
inc
rcrb
loope
jl
out
add
jb
out
iret
add
xor
dec
sbbb
or
xchg
push
inc
pop
sub
clc
add
push
dec
sbb
mov
inc
jmp
xor
sub
add
inc
jg
ds
lea
add
or
sbb
cwtl
clc
dec
jne
sahf
mov
mov
ret
or
add
push
aas
stc
jbe
fcmovbe
push
and
xor
or
mov
inc
mov
int3
fucomi
gs
add
jmp
ja
jne
jmp
mov
popa
jbe
das
sbb
call
cltd
xor
pop
push
xchg
jb
into
int3
loope
aas
pop
inc
shr
jnp
clc
dec
dec
cmpsl
outsb
sbb
mov
insl
adc
shr
andb
jl
les
fcoml
sbb
xchg
add
mov
push
inc
dec
pop
ficompl
clc
mov
jle
cmp
or
pop
pop
jge
mov
sbb
push
movzbl
loope
sti
call
nop
fadds
mov
mov
add
pop
ficompl
ret
in
cmpsl
cmp
jbe
mov
lret
hlt
pop
aad
pop
aam
call
outsl
add
ret
inc
nop
and
jge
test
outsl
rcrl
sub
in
test
push
push
ret
pop
sarb
mov
mov
pop
add
mov
xor
add
outsb
mov
or
fdivr
pushf
and
fisubrl
push
clc
aad
or
jns
jne
push
inc
imul
add
adc
cmpsb
and
xor
pop
insb
popa
arpl
addb
in
inc
dec
outsb
ret
mov
and
mov
lock
call
dec
dec
inc
adc
adc
shrb
mov
test
add
mov
push
movsl
pop
jl
cltd
clc
popa
mov
roll
push
imul
or
scas
xchg
fcmovne
adc
push
push
adc
push
or
out
in
dec
in
push
leave
push
ja
push
cmp
dec
inc
cmp
pop
add
nop
push
jp
add
or
push
mov
or
inc
push
ds
mov
cmp
je
pop
push
ret
adc
mov
rorb
add
pop
cltd
jle
add
lods
and
fcomp
cmpsb
in
sub
jle
sbb
push
xchg
add
dec
nop
sti
gs
dec
packuswb
push
mov
es
decb
aam
pop
inc
test
movb
or
fidivrs
dec
adc
add
push
mov
idivb
aam
lea
dec
out
or
lds
mov
loope
inc
add
pop
adcl
push
jno
data16
in
fldenv
adc
roll
dec
lock
or
rclb
mov
pop
xor
ljmp
js
push
cmp
mov
xor
mov
repnz
mulb
insl
jmp
movsl
mov
add
xor
inc
pop
jne
jge
in
push
insb
mov
push
test
popa
fs
adc
xchg
popf
jl
add
fcoml
and
add
jo
jno
js
inc
add
push
enter
lock
mov
dec
call
push
push
add
xcrypt-ofb
cmpsl
insb
fdiv
sub
or
lahf
push
push
or
sub
daa
push
xor
enter
xor
add
loopne
mov
push
xchg
movsl
sbb
pushf
in
mov
push
stc
call
mov
push
pop
inc
fwait
jp
rcll
mov
cmp
jp
push
or
mov
or
out
jge
add
and
dec
mov
addr16
xchg
sbb
test
ja
in
pop
aam
pop
rolb
imull
push
call
data16
cmp
int
sbbl
lret
xchg
aaa
jl
or
std
imul
push
cmc
je
mov
and
add
in
add
inc
or
ljmp
and
or
and
pop
movb
test
xchg
rcll
gs
or
push
or
push
sbb
inc
cmp
mov
cmc
loope
inc
sub
cmp
push
push
call
call
push
fldcw
jne
xchg
lea
sbb
lds
ljmp
js
test
adc
ss
xchg
cmpsl
sbb
jmp
test
xchg
jno
push
dec
inc
lock
ret
push
mov
pop
pop
adc
pop
fsts
adc
call
shrb
lds
lods
ds
ss
ja
pop
mov
xchg
out
andb
xchg
xchg
mov
sbb
push
inc
into
xor
in
dec
push
inc
dec
roll
or
or
sub
in
mov
rcr
push
fs
sbb
sbb
mov
and
mov
cmp
fsubr
shl
or
in
je
inc
push
xchg
push
jp
cmpsb
rolb
xor
loop
push
repz
sbb
adc
xchg
aad
pop
idiv
hlt
or
add
ret
sub
or
pop
iret
mov
mov
push
ret
aam
shl
inc
movzbl
fcmovb
aad
rdrand
scas
and
xor
mov
mov
add
call
ret
aas
jbe
pop
mov
rorb
mov
sbb
and
push
pop
lahf
movb
gs
cmp
mov
push
mov
ljmp
bound
sub
lcall
push
mov
fistl
sti
xchg
and
loop
jo
add
and
pop
adc
cmp
ss
lret
lods
xchg
xor
mov
in
mov
shll
xor
add
sbb
sbb
push
sbb
add
lock
sbb
sbb
loop
or
das
sarb
mov
cmp
mov
imul
fdiv
xchg
mov
mov
loopne
sbb
pop
pop
pusha
push
sbb
lods
xor
call
pop
push
add
jge
cmp
in
sub
pop
dec
jl
add
jo
fwait
das
fimull
andb
xchg
xor
stc
and
add
addr16
fcompl
jb
call
daa
outsb
xor
test
xchg
xlat
rolb
mov
lds
je
xchg
xchg
test
sbb
jne
in
push
xor
xchg
inc
push
adc
inc
jbe
cmp
or
lret
pop
leave
movb
inc
xchg
xchg
dec
mov
inc
mov
lcall
fildl
imul
push
faddl
imul
push
push
hlt
mov
hlt
fdivrp
mov
insb
fnstenv
xor
pop
sub
loop
loop
ret
add
and
xor
enter
decb
mov
mov
ds
dec
leave
enter
xor
call
mov
fildll
mov
mov
mov
add
mov
xor
rorb
adc
pop
dec
xor
mov
pop
pop
push
adcb
dec
sbb
pusha
inc
sbb
sub
mov
rep
xor
sbb
movsb
push
lock
lods
arpl
push
mov
sub
je
ss
rcll
pop
mov
and
adc
flds
or
adc
add
movsb
out
inc
xchg
mov
icebp
pop
cmpsl
lds
mov
xor
fsqrt
loope
cmp
inc
shlb
clflush
mov
xor
rolb
push
pusha
arpl
cmp
dec
pop
stos
adc
call
ljmp
pop
pop
stos
and
push
popa
pop
mov
and
fiaddl
nop
add
mov
add
fcomi
and
sub
sahf
pop
jns
mov
or
push
inc
push
std
and
movsb
bnd
sbbl
jae
xlat
in
jb
adc
xchg
pushf
mov
ss
imul
and
into
rcl
cmp
push
mov
lret
xor
mov
sbb
cmp
insl
jb
int3
sbb
in
int3
xchg
and
mov
ficoms
in
xor
push
adc
push
push
or
insb
or
and
jno
mov
scas
dec
adc
push
dec
adc
cwtl
push
scas
xchg
sbb
cmp
shrl
push
jae
and
outsl
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
lcall
and
add
lret
pop
or
jmp
sbb
inc
inc
ficomps
imul
or
stc
divl
scas
loope,pt
and
dec
in
or
xchg
bswap
push
xchg
in
enter
xor
pop
jno
push
mov
imul
and
inc
xchg
cmp
scas
imul
out
sub
mov
pushf
popf
adc
or
inc
inc
rcr
in
push
cmp
aam
mul
jmp
mov
loopne
lahf
cmp
mov
stos
repnz
cltd
bound
out
popf
je
inc
mov
mov
mov
cmp
mov
jne
je
in
sbb
lret
xchg
in
in
mov
ss
ret
outsb
repz
mov
jge
fcomps
imul
mov
imul
inc
inc
pop
bound
sbb
test
fbld
cltd
mov
fists
cmc
push
test
shrb
sbb
jne
mov
adc
sbb
jne
lods
lods
push
les
fnstsw
inc
std
fidivrs
push
jbe
xor
sbb
push
ljmp
dec
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
cmp
fcomp
inc
test
jecxz
test
inc
enter
hlt
or
sbb
data16
xor
lods
mov
jbe
les
push
pop
rcr
test
out
into
mov
mov
lods
lods
aad
mov
xlat
push
push
mov
jecxz
repz
out
je
sub
or
lea
mov
push
call
add
adc
cltd
in
dec
adc
fcmovu
mov
or
and
xchg
push
aas
cmp
call
rclb
dec
andb
out
cmc
js
les
cld
xor
shrb
add
pop
adc
add
ss
ret
sahf
in
jne
imul
xorb
sbb
jecxz
scas
jns
dec
lret
xor
pushf
sbb
fisubrs
ss
mov
xor
cmp
outsb
push
add
add
out
enter
addb
popa
dec
mov
and
cld
mov
jno
xchg
xorl
pushf
hlt
inc
addr16
into
mov
mov
sbbb
mov
sub
ja
sbb
in
inc
xchg
pop
add
pop
popa
inc
dec
pop
and
je
dec
fstpl
or
je
mov
das
xor
leave
ret
cmp
adc
sub
call
adc
dec
dec
or
inc
mov
sbb
fimull
pop
sbbl
xor
bound
jmp
mov
xchg
call
xor
jge
lods
jle
sbb
int3
mov
and
lcall
jp
push
pusha
popf
rorl
adc
add
add
or
push
mov
push
mov
add
mov
test
lea
xor
lods
mov
push
cmp
xor
xchg
inc
insl
nop
push
movsl
mov
outsb
orb
sahf
sbb
mov
mov
mov
mov
mov
loopne
cmp
push
loopne
jmp
push
pop
ja
push
mov
mov
jge
xchg
push
inc
rolb
jbe
add
mov
imul
xor
dec
inc
inc
xor
push
std
imul
or
or
shr
incl
in
out
je
bound
jnp
jo
mov
mov
std
std
and
enter
add
lea
or
mov
inc
push
popa
sbb
mov
ret
mov
mov
mov
mov
loopne
or
push
push
movsb
xor
inc
adc
adc
xchg
xchg
cmovs
pop
push
sub
in
fcompl
jecxz
adc
std
adc
push
ds
xor
lods
cmp
outsl
mov
jne
jge
setae
cmp
bound
pop
mov
cmp
add
mov
add
or
push
in
sub
jl
mov
push
ljmp
inc
fcoms
sub
subl
push
fiadds
popl
mov
add
or
cmpb
sub
fisubrl
les
xor
lahf
subb
mov
add
add
push
pop
sahf
or
sbb
mov
lea
addr16
push
push
pop
add
xchg
icebp
daa
js
cmp
out
jle
adc
cmp
or
inc
xor
hlt
nop
popa
xor
popf
mov
push
into
mov
pushl
movsl
xor
cwtl
inc
jecxz
push
mov
push
enter
call
xchg
mov
ds
ret
sub
es
pop
in
jbe
or
xor
push
fldcw
sbb
pusha
mov
ret
push
cmp
in
jle
clc
push
or
enter
andb
xor
adc
std
jmp
and
xor
insb
call
inc
jmp
in
lods
sbb
jle
or
pop
lret
jnp
mov
fadds
cmp
mov
pusha
cmp
xchg
adcb
rorl
add
enter
cmpb
fs
das
add
pop
sub
inc
aad
jno
mov
mov
or
inc
aaa
jbe
mov
test
dec
or
xor
repz
test
mov
cmp
ror
xchg
mov
cmp
cmp
jl
pop
jne
mov
mov
jmp
or
mov
or
add
or
or
into
pop
add
mov
xor
in
je
arpl
or
mov
or
mov
push
mov
xchg
and
loopne
addb
add
call
push
pop
loope
ljmp
ljmp
sbb
pushf
inc
mov
shll
fstpl
push
mov
test
inc
cltd
cmp
fwait
xchg
jmp
aam
inc
mov
pusha
pushf
data16
push
mov
dec
jmp
lea
cmp
sub
stos
push
fucomip
cmp
je
adc
jbe
movsb
add
cli
xchg
jne
cli
jnp
subl
and
std
pop
jbe
inc
cmp
jne
or
mov
inc
push
in
adc
dec
xchg
push
mov
jae
hlt
pushf
cli
adc
popf
lods
and
jae
pop
pushf
loop
aaa
adc
shr
and
sub
je
imul
sbb
fwait
shll
imul
mov
mov
loope
mov
mov
clc
or
mov
paddb
mov
pop
fwait
jmp
push
inc
das
loope
mov
call
jo
push
sbb
and
mov
lret
sub
call
or
sarb
adc
push
adc
add
and
lods
stos
loopne
sti
push
dec
nop
imul
ljmp
addb
and
xchg
push
test
imul
sub
loop
fbstp
pop
push
lea
mov
jno
mov
push
loop
enter
jne
jge
aad
sub
push
cmp
cmpsb
aam
dec
mov
push
in
sbb
clc
icebp
lds
popa
fsubrl
call
xchg
loopne
xor
je
and
push
adc
mov
push
xorl
mov
add
fwait
jae
js
lret
dec
push
push
lea
mov
add
add
or
push
mov
cmp
aam
sbb
sbb
or
in
add
shrl
in
rcll
mulb
mov
jmp
js
lock
rcll
mov
aaa
jmp
add
loope
in
mov
scas
or
int3
dec
push
mov
cmp
adc
gs
add
mov
ss
clc
mov
cmpb
push
sbb
inc
dec
add
push
xchg
mov
and
mov
outsb
jmp
sub
inc
roll
rcrl
dec
roll
sub
shl
and
or
subl
sbb
shl
test
lret
pop
mov
add
sbb
call
lea
mov
pop
mov
push
imul
pop
addr16
fimull
imul
sbb
in
xor
sbb
jne
into
cmp
mov
jae
addr16
ss
movb
es
xchg
loopne
mov
or
je
int3
jecxz
fwait
pop
in
decb
outsl
pop
pop
icebp
pushf
xorl
jmp
nop
xor
orb
push
sahf
jae
sbb
inc
pop
inc
shrl
outsb
jns
icebp
call
cmp
cmp
scas
sub
ljmp
in
push
setb
sbb
cmp
xrelease
add
movsb
sbb
call
jp
leave
std
inc
lcall
dec
jl
js
es
push
negb
sahf
out
mov
dec
xor
adc
jecxz
fxtract
jmp
pop
sub
popf
jecxz
sbb
inc
or
mov
or
fisubrl
pusha
movl
push
cmp
sbb
add
shlb
pusha
mov
out
jnp
jp
xchg
jne
add
push
call
sbb
pop
fucomi
movsb
jmp
js
sbb
insb
jns
je
and
insb
negb
adc
mov
sbbl
int3
je
call
int3
add
or
jbe
icebp
mov
roll
mov
push
sub
mov
stc
sub
sbb
inc
push
test
call
aam
cmp
push
sbb
mov
fdivl
or
mov
cwtl
or
popf
pushf
or
fucomi
les
mov
and
xor
loopne
fs
inc
mov
cmpsl
mov
clc
inc
mov
mov
add
lock
push
ret
cs
lea
adc
sub
orb
mov
mov
xor
mov
icebp
mov
add
dec
mov
std
sub
push
cmp
fadds
dec
jne
movzbl
stos
adcl
ds
loop
mov
andb
add
add
stos
jmp
movsb
cmp
add
nop
sbb
push
xor
sub
and
jmp
lods
jmp
test
lods
and
adc
cli
sub
mov
xor
or
and
gs
adc
ja
xorb
adc
inc
xor
inc
pop
rclb
mov
into
inc
rcrb
out
add
add
sub
in
push
push
pop
xchg
call
stc
loopne
and
mov
inc
add
add
push
xchg
imul
popa
es
pop
or
mov
dec
sbb
rclb
dec
dec
leave
push
xor
jnp
inc
je
cmp
or
or
mov
push
inc
inc
mov
dec
jnp
rcll
jnp
sbb
aaa
jnp,pt
sbb
rcrl
mov
jno
xor
jmp
dec
mov
pop
or
mov
rcrl
shrl
leave
ss
cwtl
rcrl
rorl
xchg
inc
push
shll
add
cwtl
pusha
rcrl
ret
pusha
xor
sarl
xor
mov
or
rcrl
imul
mov
loopne
lds
shrl
lea
pop
adc
insb
arpl
mov
sbb
dec
shll
or
lods
inc
dec
mov
mov
mov
xchg
jmp
nop
dec
lods
and
cli
dec
imulb
pusha
or
nop
dec
fcmovb
and
pop
js
addr16
pusha
xchg
cli
or
or
add
pop
out
call
sti
cmp
push
callw
pop
call
call
lahf
mov
cmp
dec
aam
insb
mov
cwtl
inc
push
jns
cmp
call
mov
call
int3
pop
cli
mov
push
xchg
ss
jbe
movsb
dec
pop
leave
sti
dec
or
out
pop
cmp
or
fildll
add
psubsb
add
jge
call
jmp
das
arpl
mov
pushl
cmp
jmp
inc
cmpsl
mov
sbb
sub
inc
xlat
xchg
shlb
xor
pop
imul
clc
push
cmpsl
enter
pop
push
into
cmp
cmp
push
sub
fimull
jmp
dec
jge
sbb
lds
rolb
add
push
rclb
outsl
sbb
inc
cs
adc
xlat
pop
xchg
scas
xchg
sbb
repnz
es
cmp
or
adc
leave
test
add
cld
dec
or
pusha
lock
sub
pop
arpl
lods
mov
inc
fiadds
sub
incb
mov
mov
es
cmpsb
add
add
ret
movsl
push
and
add
into
stc
insl
bound
sbb
repz
push
push
es
inc
and
push
shufps
pop
filds
outsb
pop
ss
iret
dec
push
and
or
in
ficomps
or
xorb
mov
js
ljmp
int3
rcrl
xor
ror
dec
fidivl
push
imull
push
xor
adc
xor
dec
sbb
adc
js
movsb
movsb
fists
sbb
shlb
inc
scas
sub
jle
repnz
xchg
pop
aaa
movl
mov
xor
adc
add
inc
pop
int3
pop
and
adc
and
inc
inc
inc
pop
or
nop
rcrb
push
inc
push
adc
inc
adc
call
mov
push
fisttpll
mov
and
sbb
fs
pop
inc
jno
nop
dec
das
inc
loope
mov
sti
and
sub
loop
mov
in
sub
sbb
fs
lret
inc
movsb
repz
loope
jmp
xor
rol
push
pusha
dec
out
lods
mov
push
inc
scas
outsb
sbb
out
inc
out
jnp
data16
pusha
nop
push
in
nop
je
mov
push
out
xor
add
inc
dec
out
out
fldl
inc
or
push
sub
call
adc
add
add
sahf
xlat
loopne
jmp
imul
mov
adc
pushf
adc
or
out
inc
daa
inc
out
fstpl
add
and
dec
inc
shrb
shrb
lret
out
mov
or
push
mov
ror
mov
out
aaa
ret
add
or
push
adc
lret
sarb
out
xchg
fadds
int3
add
addl
lcall
nop
add
lea
pop
and
add
mov
loop
or
insb
and
adc
dec
pushf
push
pop
jmp
add
sbb
cmp
je
mov
add
sub
cs
cmpsb
jle
or
lahf
ret
lea
jbe
call
xor
push
pop
add
or
add
add
xchg
out
add
sysret
mov
lret
leave
repz
jo
cmp
je
xchg
add
mov
add
addr16
push
push
push
gs
rcrb
pop
inc
or
aaa
jb
out
or
in
mov
or
and
scas
fisttpll
or
dec
push
cmp
mov
enter
xchg
or
or
leave
or
cmp
push
push
bsr
adc
pop
adc
sahf
xchg
stos
xchg
or
adc
in
add
adc
in
repnz
push
adc
dec
adc
adc
adc
jb
pop
and
pop
leave
xor
push
inc
pop
lcall
sbb
xchg
sbb
mov
cmp
sbb
sbb
inc
scas
in
mov
test
sbb
je
push
adc
sbb
ja
cltd
xchg
out
sbb
iret
fwait
xchg
push
inc
negb
pop
sub
movsb
pop
jne
add
sahf
cli
adc
pop
ljmp
pop
movl
xchg
fucomip
add
pop
sbb
cwtl
xchg
push
in
push
in
fisubs
je
repnz
sub
rcl
ret
cmpsl
rclb
xlat
in
in
xchg
cmp
mov
in
addb
call
call
adc
repz
jmp
cmp
sbb
dec
adcl
in
in
mov
xchg
aad
in
cmp
mov
mov
out
and
and
out
or
sbb
lock
sub
push
dec
icebp
cmp
jb
je
das
jnp
or
xor
repz
std
hlt
aad
cmp
hlt
xchg
in
iret
in
std
cmc
cmc
cmp
addr16
mov
cmpsb
repnz
mull
clc
xchg
stos
pusha
nop
clc
clc
or
sahf
stc
stc
and
in
mov
sti
xchg
fwait
lret
cld
cld
cld
je
jns
aaa
mov
push
push
nop
shlb
mov
xor
pop
repnz
xor
ds
xor
lahf
sub
jb
mov
shr
cmc
mov
and
or
fwait
or
push
imul
xchg
pop
leave
mov
cmp
push
pop
push
mov
cmp
xor
mov
aam
stos
or
out
xchg
leave
or
sti
adcb
adc
or
dec
jmp
jmp
push
push
daa
in
cltd
mov
inc
repnz
jmp
inc
or
test
scas
ss
xchg
mov
and
cmp
adc
enter
xchg
sbb
push
cli
stc
xchg
adc
mov
mov
xchg
xchg
xchg
pop
push
and
cltd
jb
or
sbb
xor
sti
sti
sti
xchg
mov
cld
cmp
jmp
inc
scas
jbe
mov
adc
test
mov
inc
xabort
shl
stos
mov
loop
test
scas
ss
arpl
loope
push
and
inc
clc
and
add
add
or
fisubl
out
fdiv
out
nop
mov
sahf
notl
sub
jnp
ljmp
xchg
push
pop
leave
or
pop
in
rcll
sub
pop
push
lret
into
mul
scas
testb
and
push
xor
insl
repnz
repnz
repz
testb
inc
or
mov
out
div
testb
push
ja
xchg
mov
sub
cmp
or
stos
stc
jmp
push
pop
lcall
test
cmc
loope
cmc
adc
push
cli
hlt
or
je
lock
jne
pop
add
xchg
add
sbb
sti
mov
loope
pop
in
mov
loop
dec
pop
jo
pop
hlt
cmp
sub
sbb
dec
jo
imul
mov
repz
adc
mov
or
rclb
mov
insb
repz
repz
or
or
in
mov
in
repnz
or
test
jns
lcall
inc
pop
xchg
stos
xchg
pop
adc
xchg
repnz
cld
icebp
cmc
cmc
push
xchg
adc
mov
and
push
cwtl
icebp
mov
jne
cmp
movsl
stc
mov
jne
xor
movups
mov
out
lock
adc
adc
xchg
cmpsl
icebp
ret
sub
mov
ret
push
pop
stos
adc
insb
loope
iret
enter
cmp
cmp
sub
mov
fcoml
mov
xorb
mov
jne
stc
xor
jmp
dec
mov
xchg
dec
add
movsb
dec
enter
or
incb
insb
adc
dec
int3
dec
push
nop
push
cmp
inc
fdivrs
adc
aaa
or
push
add
int
sarl
sub
push
jecxz
repz
repz
dec
mov
sbb
fnstcw
in
push
push
aad
in
xchg
gs
iret
repz
dec
outsb
or
mov
dec
gs
inc
incb
lea
mov
or
push
and
lea
inc
cmp
and
dec
or
lret
test
pop
dec
dec
int
fisttpll
movsb
popa
inc
mov
rorb
xchg
sbb
int
jg
push
xor
push
orb
push
and
or
push
or
mov
push
mov
xor
movsb
sub
push
aaa
cmp
aaa
jecxz
sbb
sub
icebp
sahf
sbb
xlat
pop
mov
or
xchg
mov
mov
daa
mov
clc
push
rclb
push
sbb
adc
sbb
ret
test
pop
jmp
sbb
pop
add
push
push
and
fsubl
call
sarb
xor
jo
xor
lret
adc
xchg
movsb
test
jmp
pusha
icebp
or
les
divb
icebp
inc
int3
xchg
in
lock
rcrb
popf
adc
lds
icebp
js
pop
fldl
inc
xor
stos
adc
push
adc
or
adc
lret
add
rcll
sarl
cmp
xchg
dec
int
jb
sub
and
mov
add
add
shr
inc
add
xchg
inc
pop
xor
fadds
aaa
or
nop
add
add
or
rol
sub
js
data16
loopne
movsb
mov
mov
add
rorl
add
xor
pop
and
add
jo
mov
mov
sbb
orb
outsb
inc
adc
jno
xchg
mov
fsts
push
add
pop
pop
and
cmp
pop
and
or
add
xor
sbb
gs
repz
pop
inc
cmp
je
andl
ds
xor
add
or
movsl
jg
inc
sub
call
inc
pop
adc
dec
ss
or
orb
pop
or
cmp
adcl
call
or
and
les
stc
push
xor
xchg
pop
lahf
push
xor
push
mov
add
rcll
mov
sahf
mov
mov
aaa
inc
mov
divb
mov
xchg
push
and
mov
in
adc
es
pop
add
call
add
test
add
fwait
lahf
adc
cli
xchg
inc
cs
in
pop
xchg
add
and
popa
xor
mov
out
jb
hlt
push
sbb
cmp
inc
pop
out
or
lahf
aam
nop
out
inc
lds
addb
inc
cmp
mov
jmp
inc
lahf
imul
inc
leave
leave
dec
and
lret
and
shld
cld
push
out
lcall
in
sbb
mov
lahf
mov
mov
adcb
mov
adc
adc
pop
and
add
lahf
rolb
cltd
adc
adcb
les
rclb
nop
outsb
fbstp
xchg
in
mov
test
xchg
cmp
inc
test
mov
icebp
jo
jmp
push
jmp
lods
loope
xor
adcb
inc
inc
jb
sahf
dec
cmpsb
nop
xchg
jmp
lods
nop
loopne
call
adc
sub
aaa
and
loopne
xor
or
push
pop
outsl
mov
mov
cmp
dec
jne
or
dec
les
add
daa
jmp
push
mov
sub
mov
mov
and
in
sub
mov
enter
cmp
in
pop
adc
pop
popf
push
push
cmp
add
cmp
inc
cmp
dec
mov
and
mov
pusha
or
pop
enter
test
mov
xchg
or
inc
in
add
adc
pop
xchg
das
inc
or
sbb
shlb
pusha
arpl
movsb
lahf
xchg
clc
mov
mov
and
dec
xor
or
aaa
sub
repz
pop
cmpsl
or
or
imul
mov
scas
sub
sub
or
add
sti
hlt
jle
and
inc
push
popf
add
xchg
or
jmp
push
cmp
or
cmc
cmpsl
or
dec
push
mov
inc
pusha
pop
add
lods
jo
xor
mov
sub
movb
mov
mov
add
dec
loop
loopne
jne
sbbl
sahf
leave
mov
xor
clc
or
sti
jmp
mov
pop
popa
fsubs
push
and
test
adcb
sbb
cmpsb
inc
test
negl
shr
data16
data16
pop
or
loope
test
shlb
test
or
dec
int
bound
out
fimull
pusha
push
cmp
push
or
xor
scas
popa
shlb
je
sub
scas
mov
and
cmp
loopne
or
mov
test
inc
adc
inc
inc
dec
aaa
cmp
cmp
int3
cmp
adc
dec
cmp
or
push
daa
dec
push
adc
mov
xor
cmp
jb
xchg
movsb
daa
or
loop
mov
push
dec
rcrb
mov
ss
sbb
mov
imul
lea
or
movsb
xor
mov
mov
mov
push
lret
xchg
lods
mov
dec
mov
fs
int3
xchg
xchg
add
nop
sbb
subb
cmp
cwtl
add
sbb
push
adc
xor
sub
mov
sub
or
mov
xchg
mov
pop
rolb
ds
mov
xor
add
mov
popf
pop
add
call
add
mov
jp
addb
or
push
dec
je
inc
scas
pop
jl
pop
dec
fs
outsl
sub
in
loope
je
xor
mov
xorb
mov
add
sub
mov
inc
out
inc
pop
add
sub
shlb
rcll
loopne
sub
cmpsb
insb
mov
sbb
sub
push
sub
sub
mov
loopne
and
pusha
scas
test
shl
and
or
cmp
adc
sub
adc
rolb
sub
nop
dec
push
add
shl
ss
sub
push
add
mov
cmpsl
inc
ljmp
sarl
cltd
je
inc
sub
sub
mov
jno
adc
sub
mov
sbb
mov
lods
add
sub
jmp
add
fsubrs
or
sub
sub
fs
mov
sub
mov
mov
mov
cmp
sbb
xor
in
dec
adc
sub
rcl
pop
imul
jno
nop
mov
js
lods
adc
or
push
cmp
test
sub
addr16
push
ds
pop
jmp
inc
inc
sub
rcl
rcr
clc
rolb
xor
js
and
push
or
mov
inc
xchg
push
pop
sub
nop
rclb
pop
adc
sub
and
in
into
mov
push
inc
inc
sub
dec
stos
mov
inc
sbb
adc
rclb
add
pop
mov
jmp
push
rclb
shl
or
mov
adc
aam
cmp
mov
or
dec
add
or
pop
sbb
xor
aad
mov
adc
lahf
lock
and
or
test
inc
dec
mov
add
int3
sbb
lock
push
inc
sub
fildll
cmp
int
jl
push
in
push
cmp
shlb
add
cmp
mov
pop
inc
inc
sub
ret
inc
inc
inc
cmpsl
or
sub
add
sub
jbe
jno
or
or
or
pop
sub
je
imul
sub
inc
adc
loop
sub
cld
add
sti
lret
outsb
sbb
add
cmp
xchg
and
xchg
push
mov
jne
add
sbb
andl
or
push
not
add
sub
hlt
sbb
ret
cmp
jp
out
and
cmovs
je
adc
les
add
sub
sbb
test
sub
js
xchg
dec
stos
or
jle
xchg
add
shrb
xchg
into
imul
mov
mov
mov
sub
sbb
sbb
xor
cmp
sbb
sbb
inc
push
pop
pop
sbb
sbb
pop
cmp
shlb
cmp
push
inc
sub
jmp
inc
loope
push
call
popa
push
add
lods
cli
leave
sbb
cmp
cmp
or
xchg
sub
fdivs
push
ds
sub
aaa
imul
mov
push
les
movb
daa
imul
mov
mov
inc
adc
mov
in
pop
xchg
xchg
mov
cmp
xlat
or
inc
out
push
mov
int3
inc
inc
add
bound
ret
sub
and
mov
push
cmp
lock
push
ret
mov
sbb
or
popf
add
test
stos
ja
pusha
xorl
mov
add
or
jl
nop
sub
pop
add
pop
adc
inc
add
pop
sbb
subb
sbb
add
sbb
add
xchg
xchg
dec
adc
jae
mov
adc
or
rcl
les
sbb
or
mov
aam
mov
xchg
inc
pushf
or
jo
lcall
or
addr16
in
in
or
push
and
out
dec
dec
orb
or
dec
je
add
js
cmp
lcall
add
cmp
es
dec
insb
cmp
push
ffreep
nop
dec
sbb
fsubr
lds
xchg
fdivs
test
add
xchg
pushf
push
movsl
pop
testl
leave
and
mov
pop
ljmp
dec
mov
shr
aam
rolb
jl
add
sub
aam
in
cli
xchg
movsl
push
loopne
mov
pop
or
inc
pop
jg
or
scas
pop
mov
push
dec
jo
outsb
and
pop
test
ja
or
leave
xchg
movsb
adc
mov
and
adc
das
mov
xchg
arpl
inc
inc
hlt
out
or
inc
enter
pushf
dec
adc
push
js
inc
add
notb
and
mov
inc
lcall
cltd
int
sbb
or
inc
cmp
das
jmp
push
ret
adc
xchg
test
pop
call
fisubs
push
fisttps
call
sti
dec
inc
jmp
and
inc
mov
add
inc
push
cwtl
test
adc
mov
inc
cwtl
ret
sub
fwait
jp
pop
inc
xchg
ret
test
sbb
inc
movsl
xor
rolb
push
push
out
sub
dec
mov
or
roll
sub
or
sub
sub
or
inc
mov
and
lahf
stos
xor
xchg
push
inc
xor
adc
je
inc
xor
xchg
loopne
inc
nop
dec
add
xchg
inc
jmp
xchg
adc
push
mov
inc
pop
pop
inc
clc
sub
out
dec
call
stos
xor
sub
dec
call
loopne
add
sub
inc
sub
cmpsb
push
mov
subb
sub
or
add
mov
inc
outsb
add
push
sub
push
mov
out
pop
test
sub
pop
mov
test
mov
adcl
mov
cmp
push
test
mov
push
and
call
and
test
mov
popf
out
das
push
test
push
mov
nop
push
ss
outsb
jae
lea
jle
jbe
dec
rcll
adc
add
cmp
jmp
call
movsb
add
incl
xor
cmc
out
jl
je
add
and
and
dec
adc
insl
sbb
pop
xchg
cmp
sbb
imul
jge
imul
test
mov
cmp
jmp
pusha
adc
and
sbbb
fdivl
enter
jns
push
out
mov
pop
cmp
xor
insb
or
sub
rep
out
call
in
clc
pop
and
dec
enter
push
inc
outsb
imul
xchg
inc
dec
push
adc
out
lret
mov
dec
mov
repnz
shrb
insb
or
adc
rcrb
jne
mov
nop
inc
and
cmp
pop
mov
mov
inc
mov
hlt
sbb
push
inc
call
inc
outsl
inc
pop
inc
rcr
sahf
add
push
ljmp
add
fsubl
add
test
je
dec
or
jne
push
movb
add
mov
cmp
add
cmp
inc
jmp
dec
jmp
xor
rorl
fimuls
inc
inc
lea
add
mov
inc
jmp
inc
inc
inc
pop
je
pop
es
inc
sub
add
cmp
push
and
xor
cmp
mov
pusha
inc
mov
cld
pop
mov
js
ret
je
inc
or
xchg
cmp
fadds
pop
and
cmp
leave
or
andl
mov
xor
inc
jmp
and
into
mov
jmp
or
cwtl
sub
enter
sbb
pop
mov
mov
inc
mov
psubb
mov
xor
mov
rcrb
xchg
add
lock
dec
fdivrs
call
xlat
push
sub
hlt
fs
sub
lods
inc
inc
shl
cmove
je
pop
jb
cmp
repz
nop
fisubrs
jge
push
push
or
jge
mov
out
shll
je
push
xor
jmp
cmp
xor
clc
in
push
add
and
push
add
ret
push
sar
inc
lret
es
adc
xlat
loope
xchg
sarl
xor
int
push
hlt
dec
xchg
or
mov
jbe
fcomip
inc
adc
sub
rcl
jbe
or
orl
nop
mov
stos
jmp
dec
sbb
xor
push
addr16
sbb
and
push
mov
xor
pop
and
and
test
adc
add
add
test
test
in
add
lea
or
jb
add
push
dec
pop
push
push
in
mov
adcl
and
out
mov
push
das
sub
xor
orl
cmpsl
dec
lock
dec
enter
and
ret
sub
cmp
push
lret
ret
icebp
push
cltd
add
xor
mov
lret
adc
stc
mov
or
cmp
iret
xchg
xor
scas
mov
mov
add
bndstx
stc
shrl
xchg
xchg
ffree
or
int3
out
mov
enter
call
push
push
sbb
fists
mov
push
mov
cmpsl
or
xlat
sbb
mov
mov
and
gs
push
and
inc
pop
sbb
and
dec
dec
aas
mov
or
xor
lcall
jb
sbb
push
in
cmp
lea
nop
mov
xchg
lret
shl
jge
xchg
insb
xchg
sub
sbb
insb
push
add
pop
add
push
cmpsb
push
xchg
inc
xor
into
jmp
andl
mov
lods
xchg
or
testl
push
int3
and
jmp
out
and
push
out
fs
call
xchg
mov
ljmp
sbb
push
in
jae
aas
testl
jmp
xchg
mov
jmp
inc
mov
mov
pop
movl
sub
scas
sarl
inc
cli
pop
pop
repnz
cmpsb
rclb
ljmp
xchg
fidivrl
orb
shlb
pop
inc
xchg
jmp
mov
cmp
cmovb
rcl
pop
gs
into
roll
and
mov
jns
test
jno
add
daa
daa
ja
sbb
nop
mov
movsb
repnz
mov
sub
pop
cmpsl
or
mov
xchg
mov
sub
addb
addl
stos
movsb
mov
jecxz
mov
outsb
xor
jns
ror
cmpsl
or
cmpb
jae
push
and
cmp
sub
inc
jb
movsl
or
ret
or
scas
and
and
inc
nop
nop
loopne
xor
cwtl
sahf
das
add
and
into
in
adc
ljmp
fbstp
in
repz
jecxz
push
ljmp
xchg
leave
leave
fdivl
mov
jne
or
and
lret
shll
xchg
sub
cs
xchg
roll
and
sbb
mov
push
add
jbe
sbb
cmpsb
call
nop
loope
and
gs
clc
add
insb
enter
nop
mov
movsb
jns
mov
adc
xchg
lea
mov
jecxz
or
insl
cmp
inc
or
cmpsb
sbb
rcrb
fucom
loope
pop
pop
lret
xchg
mov
sbb
mov
lcall
nop
loopne
mov
pushf
dec
pop
push
ret
adc
leave
mov
xchg
lret
inc
dec
and
xchg
mov
pusha
pop
in
or
and
rolb
lods
daa
pop
xor
adc
fwait
imul
xchg
pop
xchg
adc
loop
mov
sub
in
in
mov
aad
mov
inc
stos
push
adc
shrb
push
cs
loopne
push
jo
test
test
test
xchg
orl
sti
pusha
cmp
and
or
jmp
push
daa
outsl
and
ret
xchg
test
xor
fldt
mov
lret
call
xchg
ja
jae
pop
in
popf
fsubs
xor
push
popf
fstpt
loope
or
and
addb
scas
push
cmp
mov
or
dec
sub
jne
push
sub
cmpsl
adc
mov
xchg
mov
xchg
call
sub
xchg
int
cmp
pop
and
mov
lds
call
test
jbe
pop
sub
enter
outsb
pop
adc
insb
jge
push
sbb
pop
jnp
sbb
iret
les
shlb
lea
je
push
mov
cwtl
dec
call
addr16
cwtl
daa
lea
xor
mov
sbb
inc
dec
and
mov
push
rolb
ds
xor
adc
adc
loopne
add
addr16
push
call
push
mov
in
mov
mov
cmpsb
mov
lock
testl
loope
add
adc
sub
daa
push
xor
mov
cmpsl
or
or
mov
mov
mov
mov
fisttpll
mov
mov
mov
cmp
pushf
mov
xchg
xchg
lods
mov
daa
jl
dec
push
mov
ss
push
sub
pop
sbb
or
and
scas
shl
int3
push
ret
lea
and
or
pop
push
xchg
fstl
push
movl
push
dec
pop
dec
xchg
push
aas
adc
addr16
jp
push
loopne
add
push
mov
jnp
and
push
inc
or
pusha
aaa
push
pop
mov
aam
pop
call
push
push
dec
hlt
push
fcom
jmp
mov
xchg
and
jp
int3
jns
mov
cmp
mov
inc
dec
imul
mov
enter
cmpsl
lea
je
jns
data16
adc
sub
jns
push
test
loopne
cmp
lea
idivb
rcrb
rorb
xorb
aad
sbb
fcompl
inc
js
dec
push
call
test
xor
add
inc
xchg
rcll
pop
mov
ret
lods
xchg
cmp
ret
call
mov
std
lds
or
xor
xchg
xchg
jns
mov
jne
and
call
mov
int
rcl
imul
mov
xor
jns
or
bound
fxch
in
mov
sbb
jns
std
xor
jb
or
mov
jns
fadds
adc
jns
pop
mov
mov
adc
hlt
jno
mov
adc
daa
jp
bound
mov
push
xchg
sbb
xor
add
sub
movsb
inc
lea
jns
lea
mov
jns
mov
mov
rcl
mov
jns
add
adcb
lcall
adc
sbb
jns
xchg
adc
pusha
adc
jns
inc
push
fs
inc
mov
je
push
inc
lea
jns
mov
mov
jns
mov
out
jns
mov
dec
jmp
jns
cmpsl
repnz
add
shrb
jns
xchg
sbb
adc
sbb
into
xchg
push
sbb
mov
mov
imul
and
inc
dec
inc
dec
in
mov
and
push
outsb
out
jae
lea
lds
adc
or
or
into
aad
pushf
sbb
sub
mov
adc
nop
adc
jns
lea
movsb
mov
rcll
cmpsl
loopne
les
call
add
adc
jns
mov
mov
cwtl
mov
mov
sbb
pop
xor
sbb
insb
sub
inc
sbb
sbb
insl
call
adc
add
pop
sbb
pop
test
rol
inc
sbb
call
or
js
rcrb
pop
pop
and
cmp
jp
sub
adcb
xor
or
repnz
sbb
cmp
pop
mov
xchg
dec
pop
rorb
cmpsl
cwtl
cmp
or
sub
xchg
shlb
xchg
adc
call
or
jge
xchg
pusha
bndldx
fiaddl
pop
loop
xor
les
fucomi
inc
and
adc
cwtl
pusha
push
mov
loope
sbb
dec
cs
xor
xchg
call
push
push
lret
push
lcall
or
pop
jb
add
and
xor
adc
push
sub
xor
add
sub
ss
popf
adc
sti
mov
mov
mov
mov
pop
sub
mov
inc
sub
shrb
push
sub
push
jle
ljmp
adc
and
fs
and
pop
xor
sub
testb
mov
or
ja
sub
cmp
inc
das
les
fisttpl
aad
ficoms
add
or
imul
cld
dec
jae
or
int3
int
dec
mov
inc
push
add
sbb
or
and
and
sbb
sbbb
icebp
jle
sbb
sbb
pop
adcb
sbb
xchg
enter
adc
sbb
sbb
inc
or
inc
inc
mov
loop
mov
sbb
data16
jl
xchg
rcrb
int
sub
adc
xor
push
rcrl
sub
push
mov
or
xchg
notl
mov
adc
ret
div
mov
pop
loop
pop
mov
mov
mov
test
loope
decb
or
rorb
fs
adc
in
adc
push
xchg
rolb
cs
es
push
loopne
mov
dec
push
cmpsb
rolb
mov
adc
mov
dec
and
aas
push
pop
push
or
add
and
lahf
adc
test
push
add
bound
adc
call
mov
cwtl
push
mov
rcrb
in
outsl
nop
dec
and
xor
push
fwait
dec
push
add
or
push
mov
dec
and
adc
out
adc
gs
int3
je
adc
sbb
lds
mov
mov
stos
sub
and
fwait
dec
call
push
mov
rcrb
out
out
call
push
or
inc
stc
imul
call
adc
das
stos
out
scas
pusha
shlb
call
lret
xchg
das
jg
and
adc
call
mov
call
lock
call
adc
pop
cmp
fdivr
repnz
outsl
int
inc
call
mov
lret
pop
shll
call
repnz
call
fs
lret
xchg
das
pop
insb
call
je
adc
pop
jl
push
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
pop
and
xchg
adc
aam
pop
and
insb
and
mov
xor
sahf
inc
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
movl
shrb
xorb
cmp
xor
dec
adc
or
insb
jmp
pop
mov
adc
and
inc
and
xor
and
mov
pop
mov
push
or
pop
or
ljmp
push
arpl
pusha
add
jne
or
mov
adc
popa
mov
shlb
test
fldt
aam
lods
and
sbb
jp
lods
dec
fadds
push
sub
pop
mov
or
stos
add
pusha
ret
adc
inc
cld
scas
add
add
in
pop
call
call
jae
sbb
xchg
das
imul
sub
inc
movsb
inc
shlb
call
inc
or
ffreep
sbbl
jp
ret
push
and
dec
dec
mov
dec
testl
pop
xchg
or
mov
mov
jb
mov
pusha
push
mov
dec
and
shrb
adc
adc
inc
mov
shl
pop
mov
pop
push
mov
stc
mov
xchg
or
ja
mov
in
sub
pop
push
or
dec
shll
dec
xor
dec
enter
inc
xchg
or
call
mov
dec
enter
or
or
repz
jne
rcrl
movsb
xchg
xor
fs
or
sbb
xor
and
push
adc
pop
xor
lea
rorl
stos
test
aam
test
jne
push
jmp
adc
outsb
cmc
mov
shll
sub
fld1
or
push
inc
cmp
push
rcrl
mulb
rorl
xchg
pop
shrl
mov
cli
inc
pop
lods
test
pop
push
ja
push
push
in
lret
je
pop
mov
xchg
sub
rcll
cmp
mov
adc
movsl
and
imul
jb
and
adc
inc
push
adc
xchg
xchg
adc
loop
sub
add
movsl
adc
xchg
xchg
adc
dec
push
arpl
adc
mov
add
inc
push
adc
and
shll
cltd
adc
mov
add
sub
and
sbb
cmp
inc
push
jp
adc
xchg
xchg
out
xor
adc
and
adc
dec
dec
adc
movsb
fs
jle
adc
jns
adc
dec
jmp
mov
adc
adc
add
sub
xor
adc
dec
imul
dec
mov
lods
inc
mov
xchg
fwait
shlb
push
cwtl
or
lcall
test
inc
mov
adc
or
pop
xchg
xchg
cmp
sti
aaa
xchg
or
call
adc
lds
xchg
or
adc
adc
mov
pop
add
test
jno
push
jge
mov
xchg
jmp
rcrb
cmp
leave
lods
push
sbb
dec
inc
clc
testb
or
jnp
inc
int
nop
rcrb
push
pusha
inc
nop
dec
or
push
inc
ret
mov
or
push
and
rorb
push
inc
add
cwtl
jmp
adc
movsb
inc
and
dec
mov
mov
lds
shlb
and
lea
imul
xor
push
sub
mov
nop
outsb
add
mov
enter
push
mov
or
jo
push
dec
repz
mov
out
dec
mov
nop
push
nop
inc
xlat
popa
pop
int
or
scas
ret
pop
jge
les
cmp
gs
outsb
push
lods
and
and
pop
xlat
mov
push
add
jnp
dec
push
mov
lea
dec
inc
cmp
mov
fldl
imul
xchg
mov
out
xor
aaa
adc
push
adc
adcb
aad
sub
lcall
lcall
add
ret
loope
cmpsb
popa
pop
ss
adc
mov
mov
in
cmp
sub
and
aaa
gs
and
test
mov
jb
lcall
or
xor
aad
aaa
ja
push
rorb
jbe
push
dec
inc
aaa
mov
and
shl
adc
mov
loopne
aaa
imul
arpl
insb
mov
push
cld
add
jo
sub
mov
push
negb
mov
cld
jb
sbb
out
push
psubsb
or
dec
push
adc
fs
iret
or
mov
iret
sub
iret
cwtl
sub
imul
mov
inc
and
leave
sbb
and
mov
jp
iret
out
rol
lods
or
add
call
addr16
xchg
adc
fisttpll
push
push
add
mov
sub
mov
mov
into
add
call
mov
sbb
or
dec
fwait
addr16
movsb
ret
adc
dec
add
lea
addr16
sub
imul
hlt
es
xor
sub
jno
sub
adc
xchg
ret
or
inc
add
addr16
adc
and
push
inc
pusha
shrb
xor
lds
cmp
pop
sahf
cmp
mov
pop
mov
sbb
pop
fldl
in
jmp
adc
dec
xor
loop
mov
movsl
les
nop
mov
adc
outsl
cmpsb
sbb
jo
fldl
xor
pop
mov
push
pop
rcrb
inc
or
push
pop
test
loope
in
push
in
cmp
mov
imul
out
cmp
adc
and
jns
mov
jg
push
mov
je
arpl
and
dec
and
test
pop
pop
rep
xchg
call
push
add
pop
xchg
sbb
add
xor
xlat
sub
xor
mov
xor
pop
and
or
mov
lock
or
mov
mov
sbb
repz
repz
jb
repz
nop
inc
pop
repz
sbb
sbb
repz
add
repz
xchg
or
cmp
sbb
repz
loopne
out
stos
lock
sub
sahf
and
jmp
adc
sbb
jmp
hlt
cltd
jmp
fistpl
test
mov
or
mov
sub
mov
arpl
les
adc
and
out
call
mul
loop
mov
xor
aam
xor
scas
mov
mov
stos
xor
inc
loope
cmpsl
dec
adc
cld
push
xor
adc
jb
jmp
mov
insb
sub
fistpl
sub
insb
jmp
lock
call
movsl
cmpsl
or
mov
sbb
sub
jb
cmp
movsb
jbe
mov
sub
fwait
repz
adc
insb
outsl
push
jo
repnz
xlat
fwait
push
xchg
mov
add
sub
dec
mov
jbe
mov
adc
xchg
fwait
clc
sbbl
fwait
test
cwtl
insl
adc
inc
sub
les
inc
inc
push
jnp
icebp
jo
mov
shl
add
sub
jge
add
stos
cwtl
or
jnp
lcall
adc
xlat
ret
xor
adc
pop
icebp
in
adc
sub
leave
or
jmp
cltd
loope
addb
sub
sbb
adc
lcall
add
xchg
pop
dec
mov
cmp
cltd
js
nop
dec
test
and
inc
mov
nop
push
push
xchg
inc
sbb
out
push
cmp
cmp
mov
jmp
dec
xchg
lcall
ret
int3
or
add
inc
ret
push
mov
mov
pop
and
pop
cmp
add
and
cmp
repz
out
sbb
ret
cmp
repz
mov
push
out
cmp
ds
or
sbb
out
jns
call
add
push
lods
push
mov
idivl
jnp
push
push
sub
push
nop
cs
out
fisubl
push
inc
out
out
jns
cmpb
push
push
sahf
dec
cmp
sbb
repnz
cmp
repz
into
mov
mov
push
pop
into
sbb
incb
add
out
out
repnz
loop
sbb
cmp
mov
out
outsb
pusha
sbb
pushf
repz
out
lret
or
iret
repz
and
pop
data16
iret
repz
nop
sahf
lods
mov
cmp
repz
in
decb
nop
repz
shlb
jb
jle
sahf
mov
daa
sarb
jns
loop
clc
adc
sub
cmp
cmp
cmp
push
push
cmp
cmp
lods
clc
adc
daa
pop
mov
jbe
insb
stos
push
in
add
push
cwtl
cmpsl
pop
fwait
ret
fisubrs
add
das
out
iret
dec
test
xor
push
repz
add
jbe
push
scas
test
add
fimuls
and
cmp
pop
push
rcll
push
aaa
jo
inc
dec
push
outsl
jne
sbb
inc
sub
push
inc
dec
push
xlat
out
imul
push
dec
ja
cmp
test
push
inc
mov
push
ja
ret
addb
loop
and
test
lahf
mov
lret
and
daa
xor
pusha
enter
jae
mov
ss
xor
add
pop
js
notb
inc
push
xor
jns
fucomp
mov
pop
fists
rorl
pop
or
aas
das
jmp
xchg
aaa
or
mov
mov
ret
fbld
inc
filds
mov
mov
jae
pcmpeqd
cmp
sbb
or
cmpsl
inc
insb
jmp
dec
and
sti
sub
subl
fisubrs
cmpl
pop
data16
add
mov
cmp
mov
jg
or
ret
je
aad
add
jmp
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
push
push
out
add
mov
jb
inc
adc
sbb
or
xor
jae
ficomps
imul
cmpsb
jo
inc
jne
outsb
je
shll
in
fcomip
pop
inc
js
fcmovnu
scas
add
lret
inc
inc
xor
sub
sub
inc
sti
in
sub
inc
inc
xor
xor
xor
jge
mov
fstpt
xor
cmp
inc
stos
xor
ss
xor
cmp
fsubl
std
xor
xor
aaa
clc
inc
inc
xor
mov
adc
popl
xchg
lret
out
inc
cwtl
jne
test
sbb
cmp
inc
inc
movsb
ss
in
jg
in
xor
or
push
and
inc
aaa
adc
add
lock
xor
dec
outsb
adc
or
mov
push
mov
xor
dec
and
cmp
ss
inc
pusha
mov
pushf
xor
add
aam
cmp
mov
dec
pop
adc
ret
sbb
test
sub
push
push
sub
hlt
imul
subl
pop
mov
jle
out
inc
out
adc
push
sub
out
popf
out
push
das
jmp
divb
add
movd
fsubr
cmpsb
push
hlt
adc
pusha
jg
jo
addr16
add
jg
push
mov
and
jo
ss
insb
outsl
xor
imul
movsb
gs
inc
je
push
push
mov
ss
inc
cmp
add
jbe
in
cmp
sbb
xchg
xchg
test
and
outsl
xor
adc
cs
cmp
sbb
insb
mov
xchg
and
outsb
ret
rol
or
cltd
pop
inc
and
xor
or
pop
sysenter
adc
cmp
rcrl
sub
pop
pop
xorb
repz
mov
cwtl
mov
push
jp
ficoml
out
dec
mov
dec
popa
jae
push
je
and
inc
push
imul
test
jne
add
loopne
jns
mov
pop
subl
mov
gs
cmp
ret
ss
popa
fs
jo
movsl
dec
cmp
jmp
mov
add
push
sub
mov
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
mov
cs
push
push
push
add
rcll
je
dec
sub
outsb
outsl
push
popa
imul
push
sbb
xor
lods
cwtl
add
push
push
add
add
cmpb
inc
adc
pop
and
data16
sbb
rolb
push
push
adc
push
sbb
dec
sarb
inc
or
jbe
out
pushf
add
sbb
push
mov
cmpsl
inc
adc
out
xchg
andb
add
dec
insl
or
ret
out
or
fadds
adc
adc
sahf
out
sub
loopne
adc
jae
mov
das
push
adc
cmp
jae
xchg
adc
push
sbb
sbb
stc
enter
sbb
std
iret
jae
rcrl
push
das
push
pop
nop
imul
cmp
js
imul
push
jns
stc
jp
push
cld
popa
pushf
out
fdivr
mov
out
sbb
fwait
divl
out
repz
aad
lahf
mov
and
mov
es
arpl
test
dec
aaa
push
adc
mov
push
lds
push
dec
sbb
or
lahf
pop
test
adc
push
cld
or
repz
in
int3
fdivrs
iret
repz
out
xor
mov
jns
out
mov
jns
insb
push
pop
repz
repz
push
dec
dec
inc
sahf
out
iret
inc
cmp
xor
sub
sahf
out
sub
sbb
out
sahf
out
adc
add
repz
add
or
hlt
call
cmp
enter
stc
cmp
repz
xor
lock
out
sahf
cmpsl
int3
mov
insb
inc
int
jns
sub
adc
cld
push
fdivrs
repz
les
repz
sub
aam
mov
xchg
jo
sbb
add
cmp
int
call
cwtl
jl
push
cwtl
mov
inc
lret
sbb
pop
imul
subl
sub
dec
les
cmp
inc
xor
dec
adc
neg
imul
arpl
inc
inc
add
adc
xor
mov
xlat
add
sub
mov
imul
add
adc
xor
out
sbb
shl
xor
cmpsb
mov
xor
jo
and
mov
mov
mov
rcrl
imul
push
jmp
mov
pushf
xor
and
sbb
mov
jbe
or
sub
ljmp
js
shrb
mov
pushf
andb
rolb
pushl
fs
addr16
adc
and
add
decl
push
inc
push
xor
xchg
cld
inc
inc
mov
add
add
out
mov
les
jg
pop
jne
pop
add
sbb
cmc
pushl
add
jne
imul
nop
pop
dec
and
adc
arpl
imul
or
aas
mov
jo
push
or
popf
or
scas
pusha
cmp
inc
push
push
xor
filds
insl
out
push
push
push
insb
das
inc
dec
pop
mov
dec
outsl
jl
add
cmpsl
ja
lahf
add
js
jg,pn
das
loopne
xchg
es
lds
loopne
out
or
push
addr16
mov
xor
sub
ret
xor
mov
xor
and
insb
pop
sarb
pop
xor
das
jg
fcoms
das
cltd
nop
cmp
mov
ss
mov
mov
sete
int3
or
pop
data16
ljmp
add
mov
jns
pop
rcr
cmpsl
nop
pop
or
push
lcall
pushf
setl
lret
add
les
mov
or
stos
lea
popf
jl
in
push
jno
rcll
lahf
jg
pushf
push
loop
dec
insb
xchg
mov
test
mov
adc
sbb
aas
jo
enter
pop
outsl
jb
cmp
iret
fcmovnbe
fwait
adc
inc
mov
aas
jbe
in
fwait
in
push
sbb
mov
push
aam
insb
adc
sub
pop
loopne
dec
lea
mov
adc
sarl
sahf
loopne
daa
lock
ja
dec
mov
outsb
pop
and
imul
cmp
in
sti
pop
add
inc
je
dec
imul
divl
xor
add
insb
push
mov
daa
and
cmp
dec
dec
add
push
mov
dec
jae
outsl
ja
xor
xchg
and
push
jle
jb
nop
mov
sub
push
add
faddl
movsb
and
and
add
fiaddl
adc
daa
outsb
outsl
dec
jmp
inc
lods
neg
pop
and
ljmp
mov
pop
xor
add
xchg
mov
dec
push
jb
mov
adc
inc
add
insl
jo
js
scas
mov
push
add
negl
xchg
add
push
mov
add
jae
add
add
adc
mov
push
push
insb
or
inc
gs
popa
adc
addr16
out
adc
pop
pusha
das
sub
push
inc
sbb
into
sub
repz
push
lds
add
and
add
es
bound
dec
sub
push
mov
dec
or
cmp
push
jo
jb
jns
ficoml
and
adc
sahf
add
lods
cmpsl
xor
push
addr16
sbb
outsb
sbb
push
into
xchg
ja
inc
popa
test
popf
cmpl
mov
inc
and
into
adc
and
inc
imul
mov
testl
mov
push
mov
cmp
inc
add
fbld
jne
gs
inc
or
test
addr16
subb
jno
and
es
rclb
inc
jecxz
and
and
push
nop
rorb
pushf
pop
ds
fs
sbb
push
dec
sub
jecxz
xor
dec
xor
ret
push
inc
cs
gs
push
adc
pop
bound
jle
and
push
adc
push
cmp
pop
adc
and
je
lahf
outsb
xor
cmp
dec
ret
inc
pop
sbb
sarl
inc
xchg
das
pop
outsl
mov
pop
lods
js
shrb
aad
xchg
stc
add
lcall
orb
mov
mov
push
dec
dec
dec
pop
add
mov
arpl
fs
lds
cmp
bound
sub
sub
push
outsl
jl
xchg
add
roll
sbb
fs
jmp
sbb
push
mov
xor
add
lock
lret
out
ffreep
add
mov
sbb
out
jb
mov
popa
addl
add
fldenv
inc
jmp
je
ja
enter
inc
js
aaa
dec
imul
pop
or
aas
inc
cwtl
inc
dec
lret
cmc
in
sbb
or
push
and
adc
enter
xlat
add
xor
inc
and
mov
stos
add
jg
iret
add
jo
add
add
add
push
jno
inc
pop
mov
jo
sub
add
ds
dec
push
int3
or
pusha
push
jo
jno
cmp
lret
and
arpl
and
pop
roll
in
js
and
xchg
popa
ljmp
dec
imul
add
iret
pop
sub
int
xchg
into
insl
push
sub
cmpsl
add
jmp
push
mov
imul
push
push
and
adc
mov
cld
lods
pop
loope
inc
jae
adc
add
je
insb
inc
add
outsw
or
pop
xor
and
loopne
xor
imul
bound
out
into
insb
sbb
jae
push
add
and
lods
out
inc
push
push
out
pusha
sbb
imul
js
lret
fbld
pop
xor
cli
int3
ficomps
mov
push
popa
out
push
popa
shrb
and
fiaddl
aam
push
dec
mov
cld
jecxz
out
pushf
add
inc
push
pop
in
aam
xor
fbstp
ret
pop
add
jge
sti
pop
pop
push
insb
push
sbbb
scas
inc
sbb
punpcklbw
fucom
jns
iret
icebp
pop
and
add
xchg
mov
std
loope
cmpb
inc
test
jmp
pop
pop
pop
add
mov
add
add
in
aam
inc
inc
cmp
inc
xor
add
fsubrl
xor
pop
jbe
addr16
pusha
nop
stos
cmp
hlt
movsl
inc
roll
pop
and
mov
or
and
push
add
push
inc
sub
pop
push
enter
mov
adc
add
daa
jns
ret
mov
jns
out
or
clc
out
iret
repz
lock
cmp
repz
mov
lods
test
jns
mull
sahf
out
sahf
nop
mov
repz
pusha
push
pop
push
inc
cmp
cmp
repz
sbb
mov
in
lock
repz
pop
call
ror
iret
repz
sarb
iret
repz
push
cmp
sub
cmp
repz
adc
add
jns
out
in
hlt
in
in
outsl
idivb
int3
mov
xchg
push
mov
out
push
js
push
inc
sub
fdivr
cmp
and
or
jmp
mov
mov
cwtl
inc
adc
rclb
add
lods
push
cmp
divl
mov
clc
negb
push
orb
out
pop
sbb
dec
not
lock
push
movsb
xorb
nop
add
push
repnz
lock
aaa
andnps
adc
add
cwtl
call
add
inc
and
cmpsb
fisubrl
mov
add
neg
add
dec
pop
addb
shlb
sub
lds
cmc
inc
or
scas
decl
clc
adc
jae
adcl
orb
xchg
add
mov
inc
xchg
mov
push
pop
jo
add
in
or
gs
jae
mov
and
mov
mov
dec
cmp
insl
xor
sub
jbe,pn
add
sbb
and
scas
mov
mov
xor
ds
je
cmp
inc
pop
mov
in
pop
jbe
outsl
jb
imul
pop
and
addr16
or
sbb
jo
cmp
dec
add
ja
sub
and
pop
sub
add
or
adc
jne
test
add
jae
popaw
insb
into
push
in
imul
stc
das
sti
ss
shrl
sbb
ja
xchg
inc
add
inc
pop
pop
adc
fcmovbe
add
les
pushl
or
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
pushl
xchg
shll
inc
ss
ss
es
dec
aaa
push
pushl
pushf
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
data16
es
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
mov
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
jg
xor
xor
xor
xor
xor
mov
xor
xor
lcall
jae
xor
out
xor
xor
xor
xor
xor
xor
incl
mov
les
fnsave
ljmp
divl
jno
cltd
ss
jmp
pushl
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
decl
cmp
loopne
jmp
cmp
ret
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
call
sarb
rcrb
das
jo,pt
test
mov
loope,pt
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
aas
sbb
jge
xorb
xor
pushl
mov
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
pushl
jns
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
call
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
icebp
or
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
loop
inc
test
xor
paddd
xchg
pop
xor
push
xor
xor
xor
xor
xor
xor
incl
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
pushl
pushf
xor
xor
xor
scas
clc
xor
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fnstcw
fnstsw
loope
in
in
cmp
cmp
std
cmp
cmp
mov
xchg
adc
sbb
push
ljmp
cmp
cmp
ds
fidivrl
jmp
fcomip
add
and
cmp
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
outsl
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
clc
fstpt
mov
movsb
xor
add
jmp
inc
pop
mov
fisubrl
xor
loop
xor
hlt
aad
pushl
cmp
xor
mov
xor
xor
scas
std
xor
pop
jg
data16
ss
add
or
aaa
and
pushl
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
das
cli
outsl
clc
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
sbb
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
jmp
jmp
popa
cmp
cmpb
cmp
push
stos
cmp
cli
jmp
mov
cmp
cmp
cmp
cmp
cmp
repnz
scas
xor
adc
sub
xor
cmp
cmp
dec
cmp
call
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
scas
jmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
decl
cmp
addr16
lea
scas
cmp
jg
cwtl
lcall
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
outsl
sahf
jo
mov
mov
rclb
xor
dec
scas
insl
stos
lcall
popf
xchg
cmc
xor
xor
mov
and
sub
cmp
call
xor
mov
xor
xor
xor
xor
xor
xor
aaa
loopne
pop
mov
jl
cmpsl
xor
xor
scas
jno
xchg
out
cli
push
cld
xor
xor
xor
cmpsb
pushl
xor
xor
pushl
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
decl
scas
cmp
outsl
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
and
push
cmp
sbb
add
or
xor
cmp
decl
aaa
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
incl
cmp
ja
lahf
xor
xchg
aas
cmpb
pop
inc
xor
mov
xor
xor
xor
xor
xor
jl
jl
mov
aaa
mov
ret
aaa
jmp
repnz
incl
dec
or
cmp
pop
cmp
jge
mov
loopne
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
idiv
jg
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
std
incl
or
mov
fwait
xor
xor
lock
push
repnz
aas
xor
jge
sub
divl
pop
xor
fsub
adc
es
incl
cmp
dec
ss
outsb
notb
ss
in
and
cmp
mov
aaa
cmp
cmp
mov
push
loopne
or
sbb
cmp
pop
jge
jmp
push
imul
cmp
test
mov
ret
jg
push
cmp
dec
cmp
cmp
jae
aam
fnstsw
jecxz
js
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
push
loopne
cmp
mov
and
push
cmpb
scas
decl
mov
ret
idivl
add
sbb
addr16
adc
inc
inc
loope
rol
add
push
jl
xor
xor
pop
xor
xor
cmp
or
xor
mov
xor
xor
mov
xor
push
jmp
lcall
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
mov
aaa
mov
cmp
mov
cmp
aaa
cld
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
ljmp
adc
jbe
cmpl
cmp
cmp
adc
adc
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rolb
xor
adc
xor
sar
jae
cmp
jne
jg
xchg
xor
xor
xor
popf
pusha
shll
js
xor
xor
ljmp
pushl
jo
adc
adc
sbb
sbb
sub
sub
nop
cmp
cwtl
cmp
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
loope
or
into
cmp
inc
xor
xor
add
jl
mov
mov
xor
les
int3
mov
xor
xor
xor
xor
cmp
sub
sub
xor
jg
add
cmp
inc
cmp
cmp
cmp
inc
pop
rcrb
cmp
add
scas
fidivs
cmp
cmp
push
inc
mov
test
enter
aam
fdivrs
fsubrl
in
call
dec
cld
inc
stos
scas
push
add
or
adc
sbb
loopne
cmp
cmp
sub
sub
xor
cmp
inc
jg
icebp
cmp
cmp
pop
cmp
cmp
clc
add
cmp
cmp
cmp
outsl
pop
push
cwtl
mov
sub
lcall
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
mov
sub
aas
fdivrs
loopne
clc
jbe
jmp
cmp
pop
bound
jg
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
lock
test
cmpsb
cmp
xchg
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
lahf
jle
sahf
ss
sahf
int3
shlb
aam
fdivs
fdivl
jg
loopne
in
call
ss
ss
add
add
or
or
adc
adc
call
sbb
and
and
sub
sub
xor
cmp
cmp
mov
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
dec
jl
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
das
ret
mov
dec
mov
mov
mov
xchg
clc
inc
aaa
enter
shlb
aam
fdivs
fcompl
in
or
push
out
aaa
hlt
xor
aaa
hlt
add
subb
cmp
sbb
cmp
into
ret
fdivrl
call
mov
mov
cmp
cmp
cmp
cmp
cmpsl
and
sub
cmp
cmp
cmp
cmp
push
cmp
sbb
mov
xchg
jmp
cmp
mov
mov
cmp
or
mov
adcb
lods
in
jle
jg
mov
dec
pop
idivb
or
or
decb
mov
mov
ljmp
mov
cmc
push
and
mov
push
mov
dec
jle
mov
push
pushf
xchg
cmpsb
rolb
push
lret
push
je
in
addb
add
pop
lods
out
test
insb
and
add
jmp
daa
out
inc
or
or
loop
inc
lcall
sbb
imul
sub
sub
outsb
jns
dec
push
and
dec
mov
sub
in
out
imul
cmpsb
rcrl
add
xchg
adc
add
pop
mov
out
and
pop
or
sbb
jmp
shrl
inc
fisttpl
shlb
add
shlb
mov
inc
and
jle
scas
add
dec
popf
push
gs
je
sbb
sub
mov
push
and
hlt
and
out
lock
dec
cltd
adc
and
xchg
lea
enter
pop
in
push
out
pop
inc
add
pop
sbb
jne
push
mov
jmp
mov
les
cmp
fistpl
add
mov
enter
rcr
loopne
adc
mov
outsb
and
je
xor
pushf
sbb
inc
xor
dec
and
lods
dec
xor
fwait
xorb
jge
push
add
daa
and
pop
call
sbb
pop
push
push
xchg
xor
roll
sub
in
test
test
fisttpll
jns
addl
mov
mov
sbb
push
pusha
pop
sub
je
cmp
outsb
int3
push
es
dec
shl
inc
jp
add
cs
and
xor
bound
insb
std
mov
inc
mov
mov
cmp
and
and
jae
pop
orl
mov
jne
jge
cmp
rcr
popf
pop
inc
lahf
xchg
fildl
cltd
xchg
add
pop
push
push
adc
sbb
cmpsl
mov
cs
dec
pop
outsb
push
push
and
push
or
adc
lea
push
push
pop
jb
mov
inc
jp
cmp
fs
js
mov
or
icebp
imull
mov
call
inc
push
push
call
mov
and
shll
jp
push
dec
inc
push
mov
mov
push
nop
lahf
fidivs
inc
cmp
andb
call
cmp
and
cmp
js
mov
add
cmp
mov
mov
es
inc
xor
and
loop
shll
mov
adc
inc
and
lret
jmp
add
mov
pop
xor
sti
mov
dec
test
mov
js
or
and
lock
cs
push
loop
fs
add
adc
add
adc
es
rcll
jg
pop
add
addb
push
adc
push
or
add
inc
add
dec
test
push
ja
imul
dec
cld
sub
or
jge
insl
cmp
mov
or
xchg
xor
loope
add
xchg
mov
inc
or
movsl
sub
and
cmp
push
push
fldt
or
je
outsl
adc
lock
fldt
pushf
add
clc
or
add
lret
das
or
add
and
jo
pop
pop
or
or
leave
xchg
add
mov
or
rorb
mov
pop
add
fyl2xp1
jbe
popf
jnp
dec
test
sbb
and
push
mov
pusha
xor
loope
loopne
dec
adc
or
inc
mov
inc
sub
xchg
adc
pop
sbb
dec
push
rorb
pusha
lret
push
mov
push
sbb
inc
adc
loope
push
movb
push
imul
adc
and
inc
adc
dec
pop
add
push
pop
adc
pop
pop
hlt
sub
inc
test
sbb
dec
mov
push
test
sub
imul
adc
dec
out
mov
cmp
lret
mov
mov
pop
cmp
xor
or
mov
pop
test
outsl
pop
mov
test
adc
pop
cmp
loopne
or
push
lea
clc
idiv
dec
nop
xchg
repz
mov
and
jbe
loopne
sub
jl
pop
xor
push
pushf
mov
push
ljmp
mov
rorl
mov
push
add
mov
pop
addr16
xchg
cmpsb
xchg
mov
cmc
mov
jge
xlat
call
add
fdivp
add
mov
add
rolb
push
jp
aas
pop
sub
mov
rclb
and
adc
cltd
loopne
dec
and
add
movsl
adc
or
mov
xchg
test
dec
add
pop
push
in
mov
xor
sub
add
sbb
push
add
sub
or
aaa
test
lods
and
ret
inc
mov
dec
or
and
mov
or
sbb
sarb
add
mov
mov
mov
orb
mov
icebp
push
or
loope
add
pop
adc
push
or
leave
aaa
adc
jo
jne
add
xor
pop
adc
lea
or
cmp
push
orb
popa
leave
lea
jmp
add
adc
inc
pusha
cltd
jl
in
add
lods
push
add
mov
xchg
mov
adc
les
sbb
or
filds
push
adc
ffreep
adcl
add
pop
mov
cmc
push
arpl
rorb
xor
dec
push
mov
flds
out
mov
push
sub
lret
jp
test
fadds
in
fldl
inc
pop
test
movsl
aaa
push
pop
xchg
mov
popa
pop
test
xchg
mov
ja
xchg
push
push
pusha
pop
aaa
les
outsb
test
mov
cmp
jmp
jno
clc
push
lcall
popa
cmp
mov
add
push
xchg
add
mov
xor
or
sub
sbb
and
lret
scas
sub
addb
or
pop
xchg
mov
das
adc
in
pop
sub
lret
sbb
adc
imul
jge
jge
sbb
nop
jne
and
jne
scas
je
scas
xor
fs
adc
push
aas
add
jno
inc
sbb
call
xchg
outsl
and
call
mov
and
push
jo
scas
add
adc
sbb
insb
divb
call
mov
jl
mov
fcoml
dec
mov
or
lret
nop
in
inc
xchg
mov
mov
cmp
jo
push
negl
pop
call
or
sahf
pop
lea
imul
dec
pop
ret
call
decb
mov
jl
lret
mov
movsb
dec
xchg
loopne
inc
push
pop
xor
or
mov
push
add
adc
xchg
cmp
and
xlat
inc
sbb
inc
inc
shrl
sahf
lds
add
xchg
cmpsb
inc
adc
sbb
xchg
ss
popl
inc
push
and
loope
lds
loop
mov
push
adc
sub
inc
pop
dec
mov
or
sbb
pop
xor
lret
lret
scas
mov
sbb
or
and
dec
stc
mov
cmp
add
inc
sub
sarb
rcll
inc
cmpsl
fstpl
xor
fimuls
xor
add
mov
adc
mov
andb
outsb
sub
aaa
ds
enter
pop
inc
jo
mov
mov
sub
xchg
pusha
es
dec
ret
xor
ret
call
mov
and
out
es
xchg
lea
fnstcw
and
inc
int3
mov
and
test
xchg
and
out
push
fidivs
push
adc
rolb
hlt
add
cmp
ljmp
adc
sub
ja
cmp
jnp
fs
pop
push
dec
inc
jo
cmp
cmp
pop
scas
roll
push
movsb
lds
jg
mov
pop
int3
and
loopne
gs
and
mov
nop
xor
push
push
jl
rolb
add
pop
push
pop
mov
pop
pop
mov
push
fdivrs
out
push
loopne
lock
add
mov
pop
repz
or
inc
pop
sub
lods
inc
pop
add
in
out
sbb
or
sbb
and
sbb
and
rolb
push
jns
adc
jb
jns
sbb
sub
enter
or
inc
inc
daa
cwtl
and
jns
sub
or
rorl
data16
filds
pusha
mov
pop
or
cmp
pop
pusha
hlt
push
hlt
push
push
pop
mov
cmpsl
and
inc
xor
inc
push
enter
sbb
sbb
sub
inc
lcall
dec
push
inc
sub
shll
sub
inc
xorb
cmpsb
imul
or
add
sub
xor
in
sub
sub
enter
sub
imul
lcall
dec
push
sbb
sub
sub
and
xorl
sbb
and
sbb
fs
jo
mov
dec
cwtl
sub
inc
dec
push
sub
adc
dec
jp
add
pop
rolb
lret
add
out
adc
or
sub
pop
rcrb
pop
lods
hlt
cmp
or
adc
ret
insb
dec
in
fsts
sahf
sbb
rclb
addb
aaa
push
and
inc
psubsb
push
xchg
outsb
xor
inc
and
mov
shrb
or
mov
pop
mov
sub
and
shlb
push
je
add
mov
mov
mov
sbbl
add
or
inc
jo
or
hlt
ds
inc
iret
push
sub
jno
xchg
in
pop
rorb
nop
adc
mov
pop
push
mov
inc
pop
iret
inc
pop
les
mov
or
inc
ficomps
inc
sahf
xchg
sbb
or
test
rclb
xor
into
out
sbbb
inc
loopne
addl
inc
jmp
cmp
dec
mov
pop
shrl
ret
call
inc
inc
add
bound
cltd
int
mov
jp
jne
and
repnz
push
filds
pusha
and
mov
loop
inc
jns
mov
cld
add
fwait
in
jns
push
mov
mov
and
xchg
mov
jns
dec
adc
cmp
push
dec
faddl
pushf
push
lahf
js
roll
and
cwtl
jns
andb
outsl
jns
dec
and
sbb
xor
inc
adc
pop
sbb
fldl
jns
cmpb
sbb
aaa
xchg
jns
sbb
lcall
pusha
and
xchg
fsubrs
sbb
adc
mov
jecxz
dec
jns
and
loope
jns
ljmp
icebp
sbb
adc
adc
icebp
ljmp
popa
sbb
popf
shrb
fbstp
aam
push
addr16
push
outsl
cmp
in
shlb
xchg
jmp
outsb
cmpsl
ffree
pusha
push
addr16
fs
addl
inc
dec
outsl
xor
call
les
addr16
movsl
pop
mov
adc
adc
stos
add
addr16
aam
les
rol
cmp
enter
sbb
pusha
push
mov
mov
sub
jne
addr16
lcall
push
test
sbb
sbb
les
mov
fbld
andl
sbb
addl
mov
sbb
push
push
in
fisubs
and
insl
jl
or
mov
lret
mov
loopne
sbb
pop
add
adc
fnsave
ret
call
enter
mov
xchg
nop
dec
lea
inc
mov
push
stos
xchg
shlb
or
inc
inc
mov
push
mov
push
lods
pusha
and
xorb
mov
sbb
sbb
mov
inc
inc
pop
daa
mov
aam
push
das
push
nop
in
jno
addr16
mov
and
dec
or
push
or
jnp
dec
cmpsl
std
pop
ret
or
mov
nop
dec
testl
xchg
out
rol
and
inc
mov
or
fcoms
nop
pop
fistl
pop
mov
les
sub
nop
std
add
push
rolb
sub
mov
mov
andb
or
nop
out
lods
xorb
inc
mov
je
push
xor
in
fimull
orl
test
iret
inc
cmp
mov
pop
mov
or
mov
xor
ret
mov
loope
into
cwtl
pop
push
ds
bound
out
jnp
nop
mov
loope
xor
shlb
mov
push
jns
arpl
mov
es
mov
cltd
sbb
arpl
cmp
inc
cmp
sub
inc
cmp
and
es
ds
or
nop
mov
dec
das
adc
fcomip
add
es
jo
inc
shlb
mov
es
addr16
mov
mov
scas
call
je
mov
or
cmp
inc
dec
pop
call
add
std
jo
or
jns
inc
aam
nopl
jo
mov
test
jmp
leave
test
mov
add
push
aad
mov
cmp
mov
test
jge
mov
cmp
mov
cmp
sub
cmp
aad
lock
jl
mov
xor
or
enter
pop
cmp
dec
jg
call
movsb
ja
pop
push
aad
adc
enter
or
xor
add
adc
sub
xchg
gs
jns
xlat
add
cmp
xor
pusha
pop
cmpsb
mov
ficoms
ficoms
rclb
push
mov
xchg
cmp
push
mov
mov
js
mov
pusha
mov
in
shlb
hlt
or
pop
sbb
sub
imulb
sbb
inc
or
mov
mov
xor
push
inc
mov
pop
xor
or
xchg
shlb
lcall
and
push
mov
dec
lock
mov
or
push
lret
or
scas
mov
sub
sarl
shlb
mov
and
nop
adc
mov
jno
mov
add
add
jp
lahf
daa
lret
add
hlt
push
dec
loope
adc
aaa
cmp
lahf
call
and
das
shl
lcall
dec
push
repnz
loopne
out
pop
nop
mov
inc
push
jbe
fcoml
xorb
rclb
add
xchg
xchg
dec
rcll
jnp
xchg
and
mov
roll
push
dec
jge
inc
arpl
loopne
call
adc
sarl
adc
ret
pop
xor
ljmp
bound
dec
push
pop
stc
push
fdivs
mov
mov
sub
push
stc
outsb
jno
js
stc
pop
cmpsl
inc
pop
mov
xor
sbb
stc
xchg
ds
in
dec
push
call
repnz
or
and
std
lea
in
fisttpll
dec
leave
out
clc
adc
frstor
addl
xchg
push
pop
or
js
adc
or
daa
fnstsw
and
pop
push
icebp
fdivl
push
add
aas
mov
or
jne
ret
pop
jmp
xchg
popa
pop
movsb
jmp
pushf
rorb
add
sub
fisubrs
lahf
in
je
add
fcmovnu
fistpl
frstor
fistl
adc
out
aas
dec
or
push
mov
lock
sbbb
or
and
adc
and
iret
aam
cmp
adc
push
inc
adc
call
lahf
ret
insb
mov
jecxz
loop
lods
or
lcall
repnz
pop
and
adc
fldl
out
ret
call
dec
mov
and
fdiv
je
mov
and
sarb
test
jb
imul
js
jl
test
mov
subl
andb
xor
js
inc
push
and
rcrl
in
scas
lock
mov
or
rcr
jae
adc
cmpb
xchg
scas
pop
sarb
mov
jo
shll
push
shrl
sbb
cmp
cli
pop
pushf
or
mov
rcrl
sbb
shrl
jno
bnd
shll
mov
sbb
mov
push
add
les
add
ja
xchg
fnstenv
adc
mov
jp
or
or
sbb
push
push
test
sub
sub
and
daa
pop
cmp
dec
in
xchg
pop
shl
sbb
adc
push
fadds
andl
xor
pop
addr16
lahf
repz
into
cmp
adc
cmp
mov
pushf
data16
fdivl
daa
mov
repnz
lret
add
jge
push
adc
adc
loopne
popa
pop
adc
loopne
popa
sub
sbb
andb
pop
into
cmpb
jp
fxch
and
rcll
pop
rcll
dec
dec
sbb
arpl
xchg
shrb
or
movsl
shlb
mov
add
push
and
pop
dec
add
movsl
adc
or
shll
test
xor
lock
ss
mov
cwtl
insl
add
shrb
mov
fiadds
push
outsb
fcmove
rclb
das
mov
xchg
adc
mov
xchg
cmp
stc
outsb
sub
pusha
pop
js
shrb
push
xor
fstpt
push
adc
adc
dec
adc
movsl
fwait
or
push
pop
cmp
dec
adc
cmp
or
out
mov
inc
cli
xchg
out
sub
or
adc
fcoml
dec
fidivs
xchg
dec
inc
dec
adc
adc
jnp
in
fs
push
sbb
sarl
ja
jne
mov
aam
stos
dec
fcoml
push
lret
pop
lret
pushf
adc
ss
or
push
inc
or
out
shll
and
dec
in
inc
scas
push
dec
cmp
sub
cmp
dec
push
aam
push
jo
sarb
jb
out
sti
mov
pop
mov
push
dec
pop
insb
push
scas
push
filds
fcmovnbe
push
mov
fldenv
lock
cmp
subl
mov
cmp
sub
ffree
aas
insl
sub
sbb
lds
mov
gs
test
xor
dec
push
aaa
test
sahf
in
jno
cmp
inc
loopne
mov
cmp
outsb
push
dec
addr16
push
xor
mulb
call
fstpl
sbb
in
pop
repz
lods
aaa
test
test
outsb
pop
mov
cmp
ja
or
cli
fcoml
pop
push
mov
xorl
jns
pop
outsb
ret
pop
xchg
in
cmpb
and
inc
pop
push
xchg
push
je
pop
sub
sub
stos
pop
pop
pop
sbb
rorl
sbb
pop
jp
outsb
push
data16
test
in
mov
or
rolb
push
aaa
pop
lods
sub
aam
loopne
enter
imul
sarb
in
mov
jno
pop
frstor
hlt
xchg
outsb
push
push
pop
imul
mov
push
and
mov
mov
or
mov
and
fsubl
and
add
mov
pop
jle
and
fstps
or
iret
add
test
xchg
add
orb
add
mov
pop
and
insb
sbb
pop
and
jmp
adc
inc
jecxz
call
loopne
jno
in
loopne
dec
test
je
xchg
leave
jecxz
int3
adcb
dec
shrb
out
dec
pop
or
repnz
push
bound
repnz
mov
cmp
xor
sbb
adc
sti
mov
lock
fdivrs
sarb
mov
pop
mov
test
mov
pop
pop
pop
nop
mov
js
pop
cmp
dec
push
pop
mov
in
dec
mov
push
jb
mov
and
cmp
adc
nop
sbbl
mov
enter
sarb
in
pop
cmp
jb
sbbl
cmpb
push
push
pop
mov
and
dec
mov
push
jb
subl
sbb
cmp
dec
add
stc
mov
in
jecxz
fdivrs
mov
and
cmp
lods
mov
nop
sbbl
mov
enter
push
pop
mov
pop
cmp
cmp
sbb
mov
inc
daa
inc
or
mov
hlt
and
or
roll
and
or
mov
inc
jle
scas
mov
adc
ja
adc
cmp
dec
sbb
push
data16
sbb
inc
and
xchg
xchg
adc
and
sbb
cmp
or
out
movsb
sub
mov
lcall
imul
ret
mov
xchg
cmp
mov
dec
jecxz
add
sub
movl
ret
sub
or
cmp
repz
sbb
es
shlb
xor
cmpsl
in
sbb
stc
mov
cmp
popl
imul
cmp
mov
mov
rol
call
mov
pop
dec
sti
testl
push
lcall
lcall
sub
inc
cmpsl
mov
add
movsl
adc
cmpsl
push
add
shl
aam
imul
add
subl
scas
into
fs
adc
and
pop
add
add
dec
lods
out
popl
push
das
in
mov
movsl
pop
mov
hlt
mov
lea
adc
mov
xor
sub
js
mov
fs
mov
or
add
jl
pop
add
push
push
and
and
mov
fs
jb
subl
leave
sarb
or
mov
movsl
sbb
movsl
mov
subl
sbb
enter
xor
push
popl
push
and
pop
inc
nop
and
push
js
jmp
or
and
call
sbb
adc
shlb
in
and
scas
mov
inc
mov
nop
movsl
cmp
sbb
andb
mov
rcrb
int3
push
inc
adc
popl
scas
sub
pop
cmp
cltd
mov
sarb
and
add
or
xor
mov
sub
cmp
fwait
add
fstl
mov
stos
push
pop
subl
jb
sub
subb
call
adc
orl
jb
das
push
fcoms
ror
mov
outsb
push
pop
mov
shrl
adc
sbb
call
add
xchg
mov
mov
movsl
nop
add
ret
dec
dec
pop
sbbl
bound
push
sbb
inc
sbb
rclb
fidivs
enter
out
push
lock
or
push
and
or
adc
xchg
inc
and
or
add
jl
call
nop
movsl
cmp
es
lods
push
enter
add
sub
dec
or
add
sbb
sub
icebp
and
sbb
and
lret
xor
xor
inc
clc
or
sub
add
fs
je
nop
sahf
mov
sbb
in
fadds
pop
jb
jae
and
sub
enter
pop
sbb
xchg
cmp
ret
xor
push
jbe
scas
inc
scas
scas
push
fwait
addb
test
imul
sub
pcmpgtb
loopne
ret
les
xor
rcll
or
xchg
add
fs
push
dec
add
cmp
popl
and
add
or
pop
movsb
movsb
add
xchg
ja
mov
push
sbb
dec
inc
dec
orl
push
inc
and
clc
aad
dec
imul
push
inc
and
stos
addb
rorb
xor
fs
nop
movsl
cmp
in
subl
adc
mov
add
add
push
popl
push
call
repz
pop
jp
and
dec
sub
jmp
mov
and
sbb
sbb
push
loop
sub
pop
cmp
shrb
mov
add
inc
and
pop
mov
inc
stos
popl
mov
push
pop
ret
add
test
or
icebp
or
xchg
fstl
ja
xchg
or
adc
inc
xchg
push
orb
jmp
inc
and
lahf
sub
add
adc
leave
mov
push
sbb
out
mov
fsubr
sbb
subl
jp
popl
and
imul
mov
pop
push
inc
xchg
jo
mov
in
dec
popa
nop
int
into
xchg
push
xchg
inc
bswap
add
mov
or
andb
adc
xor
adc
mov
mov
call
lds
movsl
pop
scas
mov
nop
movsl
pop
adc
bound
dec
testl
clc
xchg
adc
mov
add
mov
ss
scas
ret
inc
daa
lcall
mov
or
dec
or
adc
xchg
test
mov
xor
pop
adcl
inc
mov
add
cmpsl
sbb
or
cmp
add
testl
add
out
imull
mulb
inc
lahf
dec
mov
jbe
adc
js
mov
xchg
cmpsl
jns
out
push
cs
pusha
jo
jl
out
aam
add
adc
repz
cmp
bound
mov
repz
cmpsb
mov
out
out
add
jns
out
jb
cwtl
cmpsb
int
jns
mov
fdiv
or
push
cmp
repz
ds
pop
data16
repz
cwtl
scas
out
ds
loopne
push
stos
and
out
sahf
inc
push
pusha
insb
jbe
rcrb
mov
xor
aas
adc
jge
fnstenv
daa
adc
adc
push
int
xor
and
dec
mov
sbb
imul
adc
sub
push
outsb
ds
imul
push
clc
mov
insl
sbb
mov
insl
cmovge
pushf
aaa
add
subb
clc
mov
push
mov
sahf
dec
or
add
test
adc
fcoml
adc
push
adc
xchg
sbb
call
jl
repz
sbb
mov
stc
sahf
push
pop
sahf
mov
and
and
cmpsl
stc
pop
cmpb
sbb
cmp
out
cld
cmp
xor
aam
or
adc
add
jo
pop
addr16
inc
xor
insb
pop
popa
add
xchg
iret
repz
or
xor
sbb
add
out
ds
xchg
hlt
call
out
aam
enter
jns
out
mov
out
sahf
mov
mov
out
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
sbb
sarl
or
nop
in
les
repz
test
out
pop
testl
mov
sahf
pop
dec
dec
inc
xor
dec
repz
clc
mov
int3
lods
stc
cmp
repz
in
lock
cmpsl
enter
xor
jg
push
add
in
mov
mov
stos
add
add
push
inc
enter
dec
or
gs
mov
xor
push
push
add
popf
popa
add
xor
push
cmpsl
or
sub
mov
out
mov
ja
ffreep
fs
ss
js
dec
inc
or
inc
mov
in
cmp
jnp
or
sbb
daa
xchg
sahf
xor
push
and
aas
pop
pop
mov
xchg
or
les
push
daa
insl
out
jge
fs
jo
mov
inc
add
outsl
mov
iret
test
jge
imul
lahf
add
mov
iret
mov
xor
addr16
pop
push
adc
enter
inc
fildl
and
test
mov
push
jl
enter
push
ja
inc
dec
mov
aas
jb
rclb
and
mov
fsubrs
out
cmp
jge
xor
cmp
cmp
pop
pop
inc
fbstp
inc
out
aas
dec
adc
dec
sbb
dec
lahf
add
mov
lds
dec
mov
inc
cmp
cmp
fdivs
repnz
xchg
pop
jo
sbb
add
ja
mov
dec
clc
push
dec
sar
jne
sbb
adc
mov
cli
ud0
xor
lods
lret
xchg
cmp
jl
pop
int3
das
les
xchg
nop
imul
dec
push
fildll
push
mov
dec
insl
sbb
lock
aaa
add
aam
mov
adc
in
outsb
jbe
aaa
xchg
neg
insl
iret
push
sbb
or
jno,pn
clts
xor
inc
mov
or
push
xchg
movsl
add
cltd
loop
mov
loop
data16
or
jne
mov
mov
adc
cltd
jbe
xchg
xchg
adcb
pop
icebp
cld
andb
xchg
mov
pop
or
sarb
inc
aas
cmp
jne
push
push
aas
gs
in
imul
or
imul
push
xor
inc
sbb
mov
xor
cmp
gs
adc
inc
mov
sub
filds
movsb
adc
or
mov
push
sbbl
aaa
outsl
add
push
or
mov
sub
xchg
inc
bound
push
pop
sub
sbb
andl
mov
mov
pusha
mov
or
push
sub
sbb
mov
movb
mov
mov
sbb
mov
sub
jae
rol
xchg
inc
and
or
shl
add
or
mov
mov
mov
push
sbb
or
adc
and
addb
xchg
mov
aaa
pop
mov
add
nop
add
pop
or
dec
inc
mov
sbb
roll
inc
jns
loopne
xchg
movsb
xchg
testb
out
sahf
out
xchg
nop
mov
je
pop
push
pop
dec
repz
repz
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
xchg
hlt
xchg
cmp
jnp
in
push
in
enter
repz
adc
jl
cmp
push
insb
push
fs
push
dec
fcomip
cmp
mov
push
and
add
in
xchg
repz
cmp
enter
iret
repz
test
cwtl
nop
mov
js
jo
pop
inc
repz
and
adc
out
sahf
out
xchg
loopne
mov
sahf
test
insb
pop
adcb
inc
dec
test
mov
dec
pop
fisubrl
mov
jo
cwtl
into
xor
and
push
push
jne
pop
das
rorb
fs
push
lret
adc
adc
xchg
cs
call
leave
pop
jg
in
push
adc
pop
enter
loop
pop
pop
xchg
outsb
stos
lcall
xchg
cmpsl
insl
push
ret
ret
push
mov
xchg
pop
mov
iret
dec
push
or
mov
incl
inc
adc
adc
add
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
sar
and
push
xor
xor
xor
aaa
fbstp
incb
aaa
arpl
cmp
cmp
test
popf
xor
push
cmp
andb
bound
clc
stos
mov
cmp
sahf
fdivrs
jmp
cmp
cmp
xchg
lahf
cmp
mov
mov
ficoml
and
pop
ds
ds
mov
fs
imul
aas
jecxz
call
push
xchg
mov
and
sub
xor
jecxz
xor
fs
cmp
out
jg
mov
push
out
xor
repnz
xor
xor
and
in
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
cmpsb
inc
fistps
test
mov
xchg
xor
mov
out
xor
xor
and
sub
sub
xor
incl
ljmp
mov
repnz
ss
and
lcall
xor
xor
xor
xor
xor
push
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
and
sub
insb
ss
xorl
enter
out
push
inc
sbb
aaa
jp
aaa
cmp
insb
cmp
cld
pop
or
cmp
sbb
sbb
and
and
loope
popa
xchg
xor
jp
test
mov
mov
aas
and
cmp
pop
dec
cmp
test
stos
push
fistpll
cmp
arpl
cmp
dec
cmp
cmp
mov
inc
idivb
cmp
cmp
cmp
cmp
orl
cmp
test
ljmp
ds
ds
cmp
dec
jno
mov
aas
leave
mov
aas
repnz
movsl
imul
inc
xor
xchg
lock
mov
jle
xor
popa
adc
xor
repnz
xor
aaa
lret
aam
fimull
xor
xor
cmpsl
or
cmp
repz
sbb
pop
add
test
lret
push
add
ss
pop
aaa
mov
aaa
in
xchg
push
outsb
pop
xchg
sub
cmp
inc
push
xor
clc
js
jle
xchg
mov
test
icebp
cmp
into
in
adc
js
adc
ss
cmp
ret
dec
idivb
xchg
or
cmp
cmp
cmp
jecxz
test
dec
push
cmp
jne
jnp
addb
or
cmp
cmp
adc
nop
loope
test
clc
outsl
es
in
jmp
lock
ljmp
sbb
jecxz
inc
jp
insb
cmp
cmp
mov
stos
cmp
cmp
sub
ds
ds
ds
clc
sar
sbb
or
adc
and
dec
aas
push
aas
insb
mov
sbb
pop
aaa
mov
fidivl
test
sub
incb
loop
cld
test
mov
shll
xor
xor
xor
cmpsb
pop
popa
js
data16
xor
mov
lcall
xor
cli
xor
cld
ja
mov
loope
xor
aaa
jnp
xor
popa
mov
es
aaa
add
or
cmp
inc
fs
jo
adcb
bound
push
sbb
sub
sbb
mov
mov
icebp
sbb
pop
cmp
outsl
incl
mov
cmp
or
cmp
cmp
cmp
push
ret
clc
cs
cmp
scas
push
addr16
cmp
cmp
cmp
pop
cltd
cmp
cmp
cmp
test
aaa
leave
sbbb
sub
jo
call
ret
sarl
outsl
or
js
lock
or
or
sbb
loop
pop
pop
and
mov
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
das
ss
or
call
mov
mov
aaa
pop
dec
pop
cmp
and
lret
and
jg
cmp
cmp
cmp
mov
jg
fisubl
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
arpl
inc
cmp
aas
iret
aas
loope
filds
aam
add
cmp
xor
test
mov
fbstp
icebp
mov
inc
xchg
push
push
push
mov
push
cmp
hlt
xor
ss
aaa
gs
pop
and
sarl
icebp
cmp
cmp
cmp
cmp
pop
sbbb
jo
test
fsubp
xor
xor
pop
out
test
xor
ss
jle
cmp
fiaddl
loopne
cmp
inc
cmp
push
inc
data16
das
rorb
cmp
cmp
shlb
dec
pusha
or
or
adc
and
ret
aaa
ret
mov
xor
je
jl
cmp
ja
fwait
mov
nop
sbb
cmp
cmpsl
test
pop
mov
insb
lcall
mov
ljmp
aam
popa
je
data16
hlt
inc
xchg
xor
cmp
int3
enter
out
pusha
orl
xchg
jno
xor
sub
shlb
mov
and
stos
les
xor
out
adc
sub
sub
gs
sub
or
xor
adc
lea
inc
xor
clc
push
jg
xor
xor
xor
insb
cmp
lret
push
je
jl
hlt
lsl
xor
movsb
xor
mov
xor
je
call
fsubs
loopne
clc
lods
aaa
mov
je
xor
xchg
jno
and
jp
cmp
xor
jo
mov
xchg
jmp
xor
cmp
rol
inc
dec
add
mov
addl
jb
pop
daa
cwtl
out
fdivr
cmpsb
or
adc
mov
xor
xor
sub
fs
xor
xor
jnp
jno
inc
sbb
add
jecxz
mov
xorb
out
xchg
shrl
movsb
inc
shlb
adc
sbb
popa
xor
xor
call
fmull
xor
xor
xor
and
addb
add
pop
sbb
sub
xor
jb
xor
sbb
sbb
cld
cmp
inc
xchg
dec
xchg
push
push
pop
pop
lcall
insb
xor
jp
xor
xor
pop
pushl
xor
xor
xor
xchg
rcrb
ret
and
xor
push
xor
loopne
fiaddl
sarb
adc
pop
inc
sub
pop
jle
arpl
jo
nop
ljmp
inc
add
fdivr
sub
and
dec
inc
dec
inc
movsb
add
jo
cmp
add
add
or
fisttps
or
pop
push
or
or
or
or
or
adc
adc
push
jg
sbb
adc
add
or
pop
sbb
adc
fnsave
mov
add
or
adc
pop
cld
push
lods
pop
adc
inc
add
or
xchg
mov
and
add
sahf
add
add
cmc
add
inc
mov
jb
dec
mov
jge
ljmp
add
push
adc
pop
and
xor
inc
mov
adc
shl
and
bound
js
or
pop
sub
sbb
or
bound
push
cmpsl
xchg
adc
lea
popa
jecxz
and
inc
or
adcb
rcrl
xchg
scas
pushf
pop
add
add
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
inc
repz
lods
or
xor
adc
sbb
loope
icebp
mov
mov
add
or
push
xor
js
adc
std
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
inc
adc
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
sbb
add
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
cmpsb
jp
push
out
or
cld
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
xchg
lods
mov
out
pop
jb
mov
or
push
mov
lcall
int
inc
fwait
sbbb
mov
dec
jp
push
gs
idivb
jg
hlt
push
add
stc
loope
mov
sar
andl
fstp
adc
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
lcall
icebp
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
cmpl
fbld
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
hlt
es
or
icebp
aas
std
cli
push
push
jg
je
idivl
cmp
sub
inc
scas
inc
mov
jg
cs
pushl
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
mov
lcall
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
push
xor
jmp
lcall
pop
hlt
lret
movsb
add
filds
lea
jg
gs
std
xorb
jg
das
sar
aad
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
lcall
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
pushl
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
pop
cld
pushl
xchg
or
mov
stos
dec
lods
xor
jg,pn
jg
loopne
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
call
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
idiv
jmp
shrl
icebp
ja
xor
cmp
xchg
mov
cwtl
push
sbb
lcall
ftst
jbe
xchg
and
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
lock
jo
aas
repz
sbb
lock
in
jmp
test
or
out
sbb
aaa
clc
push
std
mov
jmp
test
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttpl
out
rolb
pop
or
or
fidivrs
les
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
incl
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cltd
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
cld
testl
sbb
scas
stc
adc
insl
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
incb
into
out
icebp
mov
loope
mov
cmpsl
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
decb
adc
cmc
decb
dec
adc
call
imul
popf
dec
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
push
xor
xor
outsl
adc
iret
fdivrl
xchg
lcall
jo
and
pop
gs
sub
jo
sarl
pop
movsb
and
jno
ret
fs
or
sbb
jmp
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
aaa
dec
std
lcall
int3
xchg
imul
in
add
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
fsts
mov
or
add
clc
or
push
sti
pop
inc
add
outsb
nop
cltd
push
push
nop
mov
incl
test
and
add
dec
push
imul
ljmp
cmc
daa
push
dec
jl
divb
dec
incb
mov
test
push
pop
dec
ljmp
mov
add
jle
xor
push
test
jb
mov
xor
jmp
out
ljmp
mov
fwait
popf
popl
es
mov
fsubr
aam
fdivl
test
insb
shll
repz
outsl
adc
sub
pop
push
fisttps
test
dec
inc
lods
dec
idiv
jae
cmp
push
outsl
adc
in
jg
add
lods
loopne
xor
xchg
aaa
lret
fbstp
sub
in
ret
ds
push
jg
rcl
dec
stos
stos
mov
jmp
mov
mov
dec
lcall
adc
loop
jge
mov
testl
dec
and
pop
int
add
cld
mov
sbb
mov
push
pusha
test
cmpl
inc
clc
or
inc
and
fwait
cmp
inc
ds
data16
incl
add
push
pop
mov
adc
inc
push
inc
jns
xchg
mov
call
mov
xor
cmp
dec
aaa
je
clc
inc
jg
jbe
jns
jecxz
push
push
inc
or
cli
pushl
int3
fwait
mov
std
add
lcall
sub
jmp
cmp
decl
and
add
icebp
adc
xlat
ljmp
shll
jecxz
ljmp
mov
ljmpw
dec
inc
shrb
lock
pushl
sub
sub
xor
dec
test
mov
add
sbb
icebp
or
ljmp
cld
out
sbb
arpl
fimuls
lahf
aad
int3
daa
cmp
sbb
incl
popf
push
add
sub
jb
sub
push
push
loopne
add
mov
ret
ret
ss
incl
in
jae
lds
inc
sbbb
push
mov
or
rcl
fcos
ljmp
or
daa
sbb
pushf
add
jecxz
and
ljmp
loope
pop
and
subb
sub
mov
aas
ja
daa
out
outsl
pop
dec
sarb
jmp
or
daa
and
or
repnz
insl
lods
mov
mov
adc
fcmovu
decb
pushl
jnp
inc
lods
and
xor
dec
inc
xchg
shll
pop
hlt
jmp
ja
imul
arpl
pop
jae
inc
xchg
ficompl
fsubl
jge
orb
push
shll
mov
inc
les
ja
out
clc
pushl
aam
xchg
pusha
pop
xchg
pop
sbb
dec
sub
ljmp
push
loopne
clc
sbb
add
imul
aaa
ljmp
and
mov
in
incl
int
pop
add
fnstenv
fnstsw
and
and
pop
cmpsb
fsubrs
jl
add
lds
cmp
sbb
stos
ret
movsb
clc
ret
mov
lret
mov
decl
jne
mov
cmp
std
add
and
test
sub
pop
adc
decl
lahf
mov
inc
testb
pushf
xchg
pop
es
push
fildl
pop
mov
xchg
std
pop
mov
aad
loop
adc
clc
mov
scas
loopne
cmpsl
xor
cmp
ljmp
out
jne
fsubr
or
sub
stos
mov
ljmp
mov
inc
jne
fwait
add
test
push
es
mov
rcl
loope
pop
mov
outsb
stos
pop
imull
lahf
jo
or
cld
rcrl
cwtl
ljmp
jp
test
aaa
pop
inc
mov
inc
dec
or
lea
add
repz
jo
daa
sub
xor
inc
or
mov
dec
pop
cmp
xchg
fstpl
popa
lods
pushl
addr16
shrb
inc
jmp
mov
xlat
mov
fildll
ds
mov
shrb
mov
and
mov
incl
das
or
pop
push
lret
hlt
icebp
mov
sbb
jge
xor
scas
adc
gs
cwtl
cli
lcall
leave
add
in
aad
or
ljmp
xor
fbstp
adc
push
or
mov
xor
mov
mov
xchg
iret
pop
test
fwait
dec
push
pushl
pop
or
jno
mov
loope
inc
mov
add
push
xchg
and
fcomip
movsb
mov
leave
sbb
push
cmp
mov
jbe
aas
xor
incl
adc
adc
imul
jecxz
enter
dec
sbb
ss
loop
decl
cld
fldcw
push
lret
es
and
lea
in
nop
dec
cmp
cs
jne
dec
bound
xchg
lahf
aaa
lds
push
rcr
ljmp
mov
sub
es
and
lcall
out
aas
mov
sub
std
decl
sub
cmpsl
add
adc
or
cld
popa
jb
push
dec
push
arpl
lds
pushl
ds
xchg
flds
imul
outsl
and
dec
fcoms
mov
jge
pushl
in
cltd
lcall
cmp
movsl
mov
sahf
popf
lods
out
lret
sar
loopne
popa
xchg
fsubrs
popf
and
outsl
cwtl
loope
out
jmp
sbb
cmp
inc
arpl
pop
call
stos
adc
pop
jp
in
loop
add
incl
movsb
inc
jo
rolb
movsl
lcall
ficoml
dec
mov
pop
inc
adc
cld
decl
sbb
dec
stos
es
mov
std
push
push
aam
flds
mov
cmp
ljmp
lods
sub
push
inc
mov
mov
loop
and
sbb
mov
and
cmp
cmpl
outsb
lret
sbb
mov
movsl
rorl
pop
jns
lcall
mov
es
pushf
add
jae
leave
push
xchg
insb
push
popa
aaa
add
repz
push
push
mov
and
jge
test
push
cwtl
jae
dec
mov
mov
andl
stos
bound
jg
xor
fsubrs
pop
pop
inc
pop
add
add
jl
jmp
lahf
jl
jne
jp
ja
push
lahf
or
sbb
lcall
adc
clc
pushl
ljmp
and
pusha
mov
xor
dec
mov
inc
scas
notb
int
inc
jne
push
loop
inc
xchg
js
dec
addr16
call
test
test
mov
dec
push
inc
sti
js
xchg
inc
mov
aad
fcom
incl
fs
inc
loope
mov
cmp
jp
jns
cmp
fstpt
test
lods
xchg
jmp
jmp
xchg
inc
in
hlt
or
pop
int
push
ljmp
or
and
fdivr
pushl
cmp
push
shlb
push
add
cmp
ret
push
and
test
mov
decl
inc
sub
cmp
bound
int
dec
lea
pop
pop
jge
jb
sbb
inc
jmp
iret
dec
add
loopne
cmc
insl
ret
incl
jno
cmpsl
sbb
out
sub
pop
inc
sbb
sub
mov
mov
xlat
jae
jge
sahf
sbb
pcmpgtw
shlb
cs
xor
stos
pushl
popa
mov
adc
cmpsl
in
or
cmp
mov
pushl
inc
xchg
cmc
mov
ret
xchg
andl
lret
setb
sbb
lcall
rcr
mov
lret
mov
je
mov
aad
ljmp
sub
pushl
ljmp
jo
push
ja
lret
mov
inc
push
cltd
out
subb
pop
adc
clc
jo
push
decl
ljmp
aas
mov
and
orb
add
add
icebp
test
call
sarl
pop
popf
clc
push
inc
in
sbb
ja
xchg
push
ja
adc
push
out
mov
cli
fwait
repz
mov
insl
dec
les
pushl
mov
test
dec
addb
stos
pop
in
mov
fadds
mov
jmp
into
jecxz
mov
fs
cmp
test
or
js
cmp
lcall
inc
pop
test
xchg
lds
xchg
int
repnz
mov
dec
mov
xchg
inc
sbb
incl
sbb
xor
fs
cmpsb
sub
je
pusha
mov
ja
push
push
imul
sbb
jb
adcb
mov
test
mov
mov
lahf
ficoms
push
xor
mov
xchg
cmp
push
mov
xor
loope
add
lea
cmc
fistpl
sbb
mov
je
xchg
sahf
cs
mov
and
xchg
outsl
ss
cmp
cli
decl
sti
iret
add
cmpsl
sub
fdivp
adc
mov
test
dec
int3
sub
pusha
hlt
enter
imul
jg
push
cli
or
int3
ret
sar
mov
push
jo
movsl
sar
add
popa
bound
and
sti
daa
mov
or
mov
int3
mov
daa
das
jge
xchg
mov
repz
add
sbb
enter
pop
nop
incl
add
inc
mov
addr16
jb
sti
ljmp
ret
pushl
dec
lret
xor
out
ret
pop
popa
repz
cmp
pop
and
incl
mov
into
out
mov
data16
cmp
mul
cmpsl
and
xchg
cmpsl
xor
ja
adc
test
shl
xlat
lods
sub
pushl
and
insb
sti
inc
outsb
xchg
push
xor
rorl
mov
popf
repnz
mov
or
call
fs
cld
sbb
addr16
lock
and
mov
in
mov
cmpsb
sub
repnz
rclb
into
pop
push
mov
and
ret
dec
pusha
repz
incl
das
inc
fadds
in
jns
fstps
sbbl
incl
pop
xchg
xor
es
ficoms
out
jp
pop
insl
sbb
fs
push
dec
ja
xchg
rclb
mov
inc
cmp
lods
mov
sbb
in
mov
or
add
lcall
in
sub
ror
fwait
ljmp
je
pop
cltd
sbb
loopne
stos
mov
call
sbb
aad
xor
test
push
mov
inc
mov
jns
jl
out
sti
movsb
cli
mov
and
xorl
mov
stos
fstl
cs
lock
jne
pushl
sbb
cltd
rorl
xor
xchg
and
mov
xchg
filds
push
or
call
inc
mov
pop
fwait
cmpsb
push
movsb
add
jne
push
and
cld
push
push
call
or
cli
jecxz
and
jle
mov
mov
fs
js
lea
and
mov
mov
call
negb
dec
pop
xor
repnz
scas
pop
fsts
sar
call
and
mov
xor
push
mov
push
mov
or
pop
outsl
enter
jl
sti
push
xor
dec
in
and
int3
xchg
fsubrs
mov
ret
adc
aas
or
xchg
sar
cmp
or
add
mov
mov
push
es
jg
pop
sub
sub
divl
in
mov
mov
inc
jecxz
shl
loope
bound
adc
adc
push
dec
push
or
lret
in
ror
les
in
mov
or
outsl
cli
dec
incl
sbbb
icebp
aaa
adc
mov
xchg
sar
shll
out
fucom
push
adc
and
incl
ss
icebp
inc
dec
ja
out
sti
pop
mov
cwtl
sbb
fidivrl
push
incl
neg
mov
push
inc
xchg
inc
fisubl
into
dec
aas
addr16
std
cmpl
adcb
and
push
xor
in
or
out
arpl
shl
incl
movsb
push
push
pop
jo
mov
jo
and
test
sub
push
xchg
xor
add
cmc
pushl
popf
xor
xchg
pop
add
jno
cmp
add
add
call
pop
adcb
ret
xor
incl
mov
pop
jp
jge
and
ljmp
sti
sbb
or
aaa
test
mov
out
imul
int3
adcl
imul
adc
and
shl
sbb
add
out
dec
adc
gs
pushl
stos
mov
add
scas
nop
insl
cmc
xchg
xor
jno
lods
outsl
fnstenv
mov
call
ds
call
imul
imul
add
incl
scas
mov
lods
dec
cmc
out
jae
xlat
stos
into
and
ljmp
add
xor
rcrl
test
aad
pop
popl
dec
or
daa
subl
or
leave
aad
sub
inc
into
fnsave
jge
push
repnz
shll
cltd
or
inc
jns
decl
mov
ror
mov
jmp
mov
mov
mov
add
fidivs
idivb
push
jbe
or
pop
jge
sub
outsb
dec
std
es
push
loope
mov
add
jmp
adc
adc
adc
inc
js
pop
or
jmp
addr16
idivb
mov
ret
scas
jge
addl
xor
loop
ret
jg
adc
mov
cmpsb
insb
jl
sub
lahf
cli
cmp
ja
call
mov
test
xor
inc
jne
cmp
out
outsb
data16
call
adc
and
movsl
xchg
xchg
pusha
negb
push
repnz
inc
push
cmc
and
ljmp
clc
cmc
adc
scas
ljmp
or
mov
pop
mov
js
cwtl
outsl
fnstsw
fsub
jge
mov
repz
mov
sub
fdivr
push
adc
fisttps
and
lea
stos
ds
icebp
sub
or
jg
dec
test
in
sahf
je
fidivl
adc
enter
in
cmp
dec
xchg
xchg
adc
pop
lock
lcall
dec
jne
mov
stos
jle
add
bound
xor
xchg
int
mov
test
repnz
lcall
sub
test
mov
stos
cmpsl
outsl
mov
enter
shlb
jnp
call
adc
int3
dec
mov
xor
test
test
loopne
cmpsb
stc
lahf
dec
popa
out
pushl
mov
jae
sti
jo
push
pop
mov
xor
inc
push
movsb
jb
sbb
xchg
lret
xchg
call
sbb
xorl
rclb
sbb
dec
inc
insb
mull
pop
mov
gs
orl
jmp
jle
mov
xlat
jae
jp
in
pop
cmpb
adc
decl
push
jle
push
jno
adc
test
sub
idivl
std
test
jg
lods
int3
out
sub
xchg
jle
mov
or
ja
out
sbb
dec
cld
cmpsb
pop
xchg
dec
jge
mov
xchg
cmp
sti
scas
push
or
xchg
inc
cmp
add
out
jecxz
icebp
fcomip
inc
push
shlb
filds
jne
cmc
loopne
jo
xor
sbb
or
sub
mov
je
mov
or
repz
cmp
cli
jbe
mov
sbbl
cld
decl
mov
add
mov
pop
aam
insl
adc
dec
aaa
sarb
push
bound
mov
jo
inc
jbe
push
fisttpll
sbb
sar
incl
inc
das
sub
fsubrs
leave
out
mov
sbb
and
popf
xchg
mov
lcall
in
mov
and
scas
jno
fidivl
and
adcb
adc
jle
mov
or
mov
jle
test
bound
clc
fdivr
decl
xchg
push
je
cmp
call
jecxz
xor
inc
mov
call
sbb
and
mov
lods
adc
jge
adc
dec
sahf
es
pushl
or
andb
stc
dec
bound
add
leave
pop
movsl
fistps
mov
out
out
push
test
cmp
call
mov
subb
adc
lds
jecxz
iret
cmp
mov
in
adc
add
cmc
ljmp
repnz
lds
adc
sbb
push
cmpsb
mov
push
js
outsl
pop
lahf
and
dec
xor
jle
hlt
stos
sahf
add
fbld
popf
pusha
mov
adc
push
pop
dec
popf
adc
scas
jge
fwait
shrb
sub
push
push
jnp
ret
call
addr16
mov
mov
push
push
jle
mov
pushf
ret
out
jmp
mov
stc
xchg
lret
repnz
data16
xor
adc
test
or
je
decb
mov
cwtl
test
jg
ljmp
loopne
or
or
repz
std
pop
mov
sub
jmp
arpl
cmp
mov
jnp
xor
or
stos
aas
xorl
pop
push
cmp
xchg
xorl
push
pop
push
inc
sahf
mov
lods
add
ljmp
or
stos
pop
cwtl
call
pushf
xorb
decb
pushf
das
call
fchs
ljmp
popf
dec
neg
fistpl
aaa
insb
shll
pop
cwtl
pop
je
cli
mov
icebp
sahf
adc
filds
jecxz
rorl
xorb
mov
cmp
sbb
lods
add
decl
lods
sbb
pusha
lock
jl
shrb
rclb
stos
sar
adc
push
loop
into
push
pop
adc
lds
jl
cmp
mov
call
adc
sub
sarb
and
jl
ljmp
aam
jae
imul
mov
pop
arpl
mov
xchg
jo
je
ljmp
add
or
xor
fcoms
xchg
push
jmp
lea
imul
mov
je
xor
loop
lods
aaa
popa
stos
popa
cmp
ror
sahf
pusha
call
jl
mov
popa
cmpl
sub
dec
cmp
mov
push
inc
and
incl
lods
repz
test
std
clc
sbb
mov
and
dec
ljmp
lea
jo
pop
mov
inc
int
mov
mov
push
sbb
sbb
inc
call
mov
xchg
movsl
cs
sbb
ss
xchg
into
cmp
ljmp
mov
xchg
mov
or
outsb
scas
jge
and
push
cmp
push
jg
jmp
repz
into
mov
mov
pop
fwait
mov
fwait
lock
int3
addr16
inc
push
mov
js
dec
rorl
cmp
lret
hlt
sub
jmp
mov
cli
call
loop
jbe
inc
mov
fldl2t
jbe
out
test
inc
pushl
daa
mov
and
xchg
jb
test
inc
nop
mov
add
inc
or
push
and
mov
cwtl
out
cli
push
loopne
aaa
xchg
xchg
or
xchg
cltd
jg
inc
test
lods
jo
sahf
lods
ljmp
fsub
lock
scas
pop
cs
dec
pop
mov
cmc
and
shll
push
incl
xor
xchg
loope
xchg
ljmp
bound
sub
dec
jo
sar
fidivrl
pop
out
insl
insl
pop
dec
lahf
repnz
fidivs
cmp
push
aas
mov
loopne
xchg
jae
add
std
ljmp
mov
mov
pushf
scas
cmp
inc
popf
inc
jo
pusha
cmp
sub
lret
loop
mov
mov
pop
test
sub
das
ret
popa
addr16
inc
mov
sbb
jae
adc
loopne
xor
ljmp
gs
jo
call
xchg
repz
add
repz
aam
pop
cmp
lcall
aaa
jbe
and
cmp
push
sbb
loopne
cmp
outsl
out
and
pushl
dec
or
pop
jo
jl
pop
push
movsl
jge
loope
inc
ljmp
outsl
mov
jmp
ret
push
sbb
lods
jl
aaa
cmp
mov
or
mov
ljmp
cmp
out
jns
mov
xchg
jnp
scas
xor
xor
aad
push
decl
fiaddl
into
scas
test
mov
js
das
xor
sbb
loop
add
addr16
in
push
out
test
jg
xchg
lcall
mov
hlt
jg
sub
dec
outsl
push
mov
inc
pop
mov
pop
cmp
outsb
ret
sbb
cs
sub
hlt
mov
fs
loopne
lcall
sub
adc
add
std
dec
mov
add
sbb
xchg
cmpsl
add
out
call
mov
imul
ss
ret
cmpsl
decl
pop
pop
mov
sbb
jg
call
lret
cmp
and
rorl
movsl
cwtl
pop
jo
mov
cmp
fcomip
jmp
pop
jp
fidivs
add
js
or
sub
xchg
mov
mov
aam
cs
mov
neg
jecxz
popf
enter
push
in
test
lods
testl
repz
ja
push
adc
popa
test
cs
inc
jecxz
call
lahf
insl
leave
add
sbb
push
mov
mov
bound
xor
adc
incl
inc
and
cmpsb
xor
es
xchg
test
cmp
lock
dec
mov
xlat
movsl
xorl
fdiv
xor
sub
mov
mov
or
incl
loope
cld
dec
dec
add
cli
mov
jnp
adc
push
adc
ficompl
decl
fxam
jb
subb
jne
pop
es
fld
cmp
or
lret
jmp
lods
mov
ljmp
xor
add
jl
in
das
popf
cmp
lret
insl
jnp
add
jmp
mov
scas
mov
add
leave
and
mov
mov
enter
lock
incl
fwait
inc
clc
jne
sub
stos
mov
sti
pop
lods
pop
xchg
sbb
cmc
jg
fs
jmp
jmp
mov
lods
aaa
cmpsl
cld
lcall
push
fildll
inc
test
sbb
xchg
xchg
cmp
xchg
dec
mov
push
xlat
or
insb
inc
or
xor
ds
jp
sub
loopne
jg
test
add
jnp
pop
cld
call
pop
mov
arpl
mov
pushf
jp
mov
je
add
mov
iret
sub
int3
jp
imul
or
jmp
out
test
mov
mov
nop
lret
subb
lret
push
mov
xor
or
push
xchg
hlt
out
je
scas
jno
mov
test
gs
push
ljmp
inc
subb
lods
add
push
pop
push
aad
movsb
popf
mov
dec
inc
stc
mov
imul
clc
push
xor
fwait
adc
and
jecxz
fprem
ds
add
mov
or
inc
dec
jmp
aaa
cld
mov
sbb
fwait
lret
add
cltd
xor
ljmp
sarb
xchg
nop
leave
lret
and
ret
movsl
cli
push
das
in
incl
and
pop
mov
dec
sbb
mov
jmp
xchg
dec
scas
push
rorb
das
mov
aam
dec
pusha
push
sbb
and
mov
cwtl
aad
incl
push
jnp
inc
push
push
jg
and
test
jge
fistl
jle
mov
adc
pushl
dec
inc
xor
ret
je
and
mov
jp
lcall
sbb
stos
and
and
fdivrp
in
mov
mov
cmpsb
clc
movsl
push
jmp
fildll
and
f2xm1
das
sarl
ja
lds
rclb
adc
decl
dec
mov
mov
aam
test
xchg
ss
sub
lea
inc
push
out
jl
stc
sub
ss
jae
mov
jo
add
scas
cli
call
pop
pop
push
int3
loop
mov
mov
cmp
and
in
inc
cmp
cli
pushl
es
xchg
sarb
arpl
sbb
sub
and
pop
call
add
mov
movsl
cmpb
lret
lcall
inc
fdivp
rorb
push
sbb
pop
call
enter
mov
mov
cmp
adc
sbb
ficomps
lock
xor
mov
ret
test
decl
sbb
dec
push
fisttpll
jne
cmp
push
stos
mov
dec
jle
mov
sbb
push
mov
lods
mov
adc
pusha
fldenv
jmp
pop
pop
jl
xor
xchg
add
popf
ret
sahf
pop
xchg
adc
pop
or
cli
or
fptan
mov
mov
fs
push
roll
adc
cltd
mov
fcoml
cwtl
push
fmulp
lods
aam
jnp
pusha
adc
dec
cs
fs
loop
fwait
rcrb
and
sub
mov
mov
push
jecxz
mov
add
sub
mov
shrl
sbb
call
pop
inc
std
mov
imul
out
sarl
inc
cmovae
outsb
sub
sub
call
sub
ljmp
imul
cmp
cmp
jo
mov
fcompl
lock
loope
xchg
jae
pop
mov
mov
jge
sub
movl
or
test
mov
out
inc
xchg
jg
push
inc
addl
inc
repz
andb
inc
lds
and
lods
testb
jmp
sahf
iret
decl
dec
test
std
sub
sub
add
inc
movsl
inc
in
ret
adcl
scas
push
jg
inc
mov
repz
or
xchg
clc
jns
aaa
pop
nop
lea
outsb
sahf
clc
lock
pushl
jb
sbb
je
mov
daa
push
imul
jbe
jne
jmp
jbe
push
into
addr16
xlat
inc
push
xchg
lock
sahf
jno
ja
movsl
loopne
rcrb
jne
aam
aaa
cld
incl
sar
pusha
cmp
jmp
push
repz
xchg
js
pop
adc
flds
cmpsl
mov
xor
cmp
clc
mov
lock
cmp
ss
mov
stos
xchg
iret
sub
ror
push
decl
sahf
pop
imul
pop
sbb
push
lcall
and
repz
rcll
or
and
roll
ret
jge
pushl
dec
or
dec
and
mov
pop
sbb
xor
lods
loopne
pop
std
decl
jbe
inc
ja
bound
in
push
jecxz
cltd
adc
xchg
insb
mov
fsubrs
shll
mov
data16
push
mul
adc
jg
dec
xor
filds
and
jecxz
ja
inc
cmp
mov
fwait
and
and
ljmp
movsl
sub
jmp
jno
dec
adc
lea
push
cmp
sahf
jp
call
ret
jl
cmp
jmp
cmp
loop
out
jg
fcoms
cli
jae
shll
add
jmp
in
xor
adc
sbb
lds
lcall
imul
push
mov
and
xchg
mov
rcrb
xor
lahf
incl
nop
xchg
mov
add
or
scas
and
enter
cmc
or
decl
xchg
inc
es
push
int3
lods
fwait
stos
test
jbe
js
roll
jno
test
mov
sub
adc
jle
iret
mov
mov
cmpsl
push
and
or
mov
incl
insb
pop
pop
adc
xor
and
pop
pop
lock
mov
xor
leave
pushf
sub
add
je
mov
cmp
mov
cmp
iret
xlat
call
jl
cmp
cmp
aas
pop
fcoml
sub
icebp
mov
adc
icebp
fnstcw
andb
bnd
xor
xchg
dec
nop
mov
mov
add
test
aam
mov
fists
loopne
cmp
xor
adc
subb
fidivl
cltd
shlb
and
mov
loop
sub
incl
jo
je
cmp
xlat
test
faddl
lods
lcall
cli
lock
lock
jg
mov
xor
insb
lds
and
shll
add
adc
test
test
sbb
dec
aaa
sbb
out
sub
pop
sub
xor
inc
mov
call
test
iret
sub
pop
pop
mov
negb
lret
lds
pop
test
movsb
fists
sub
fcos
lcall
pop
and
test
sbb
clc
call
stos
cmp
push
fs
xlat
push
shrb
out
mov
xchg
aas
cli
notl
xchg
mov
sub
lods
insb
xchg
mov
pop
loopne
call
dec
mov
xchg
popf
daa
sub
add
insb
xchg
testb
sahf
mov
or
mov
ja
aam
mov
lds
adc
lcall
es
mov
cmp
test
js
test
or
inc
pop
jl
inc
in
jae
stos
push
aaa
std
ljmp
pop
cmp
lock
test
xor
stc
sub
dec
mov
pushl
fdiv
pop
stc
sub
sub
sbb
aad
andl
clc
jmp
lcall
xor
add
sahf
mov
lahf
pop
inc
pop
cmp
mov
pop
fsubr
and
pop
inc
and
pop
xor
insl
movsb
mov
aaa
push
lods
xlat
and
mov
pushl
lret
mov
in
cltd
cmpsl
addr16
insb
lret
and
sbb
add
sub
jecxz
decl
rolb
int3
hlt
jns
jmp
test
xchg
jle
jecxz
jne
aas
adc
lret
rorb
mov
js
adc
fldenv
pop
xchg
lods
cmp
mov
dec
cld
movsl
inc
fdivl
push
or
je
in
or
ds
sub
pop
icebp
jmp
cmp
xor
mov
scas
cmp
jg
aad
icebp
shlb
rcrb
mov
jmp
add
decl
push
sub
sbb
lds
dec
mov
clc
xchg
in
lcall
icebp
pop
inc
add
add
mov
sarb
icebp
jle
rolb
cmp
dec
in
fwait
loopne
lcall
pop
xchg
bound
adc
ja
dec
push
jb
test
gs
call
sub
test
push
pusha
xor
mov
out
clc
xchg
addr16
dec
xchg
and
iret
decl
loope
ljmp
or
shlb
cwtl
lods
xchg
xor
add
ljmp
mov
out
sub
pop
js
sbb
inc
mov
repnz
scas
add
push
add
dec
sub
add
xor
dec
notl
iret
push
xchg
sahf
jnp
outsb
sbb
lcall
fwait
lret
xchg
in
popa
into
pop
mov
inc
mov
arpl
mov
cmp
out
push
inc
outsb
outsb
lock
out
aad
cltd
jge
nop
adc
fcompl
outsb
ret
clc
ljmp
leave
dec
stos
lret
lret
sbb
icebp
ljmp
popa
add
ja
add
test
insb
aaa
push
add
mov
filds
sar
xchg
adc
aam
gs
xchg
and
inc
fwait
xor
je
in
xchg
lret
int3
jmp
loop
ret
mov
js
insb
shll
jmp
fildll
xchg
add
enter
add
loopne
or
xchg
cs
decl
test
push
stos
sahf
ret
outsb
roll
cmp
popa
xor
out
cli
pop
aas
loop
cltd
int3
push
test
push
fiadds
pushf
xchg
sbb
rep
dec
cmp
outsl
enterw
fnstcw
popw
dec
jge
in
bound
add
push
jbe
enter
insb
adc
jb
incl
ret
int
fistl
xor
fs
fs
outsl
js
pop
imul
repz
cld
jo
mov
xchg
cmp
jp
xor
outsl
jo
mov
int
daa
push
push
nop
movsl
or
push
pop
cmp
jb
sbb
pop
dec
fucomip
jmp
push
inc
lret
insb
xchg
jg
decl
arpl
mov
clc
xor
jb
fnstsw
adc
adc
loope
push
mov
pop
outsb
pop
xlat
movsb
jae
popa
movsl
out
and
incl
sbb
lods
push
add
mov
mov
out
fildll
pop
sub
jne
pop
push
inc
arpl
inc
pushf
pop
out
inc
or
fwait
cwtl
sbb
aad
stos
add
decl
xchg
clc
add
dec
adc
jnp
ret
push
adcb
stc
fsubrl
stos
lret
insb
popf
insl
shl
mov
xor
aad
pop
leave
mov
jns
and
enter
and
loop
jp
fildll
mov
pusha
mov
jmp
shlb
jmp
outsl
xor
inc
pop
jnp
loop
sub
and
test
aaa
std
decl
xchg
call
imul
and
mov
mov
mov
add
and
inc
pushf
icebp
sti
mov
cmp
xlat
mov
mov
jmp
and
lcall
sti
lahf
push
sarl
add
rorl
ss
mov
scas
pop
mov
aam
mov
jbe
inc
pop
mov
scas
call
incl
bound
xchg
lret
fmulp
mov
test
sbb
jbe
andb
mov
sub
flds
mov
lcall
push
mov
mov
iret
xchg
cmp
sbb
inc
ja
mov
inc
inc
imul
dec
xchg
clc
cld
pop
das
out
pop
push
cld
decl
adc
xchg
mov
gs
mov
into
sbbb
ljmp
pusha
lock
mov
fwait
mov
movsb
jns
mov
lcall
adcb
xor
movsb
and
add
cmp
mov
cmp
not
adc
mov
aas
sub
jmp
sub
xchg
fwait
lret
sub
add
bound
sti
data16
call
pop
adc
aaa
fcomip
ljmp
cltd
mov
aas
push
mov
mov
scas
cmp
jmp
sub
aad
popf
fldl
sbb
xchg
leave
xor
test
mov
pushl
into
fcmovne
and
mov
jb
inc
shrl
xchg
dec
out
out
lds
loop
rcl
push
jmp
sti
mov
adc
cmpsb
cmp
adc
fdiv
inc
xchg
xchg
mov
mov
decl
xchg
aaa
shrl
mov
int
or
push
xchg
mov
insb
mov
decl
insb
arpl
movsl
sub
ret
mov
dec
mov
dec
xor
clc
std
and
push
adc
mov
and
clc
out
xchg
ror
int
or
jmp
repz
fwait
clc
cmp
xor
sbb
jg
push
mov
in
test
jg
bound
fldenv
sub
loop
iret
sbb
rdpmc
outsb
and
dec
out
les
lock
lods
pop
cmp
xchg
and
dec
test
mov
jmp
dec
mov
cmpsb
stos
cmp
jp
mov
and
inc
sbb
cmc
sbb
popa
sbb
mov
mov
xchg
dec
in
imul
mov
and
push
cmp
sbb
aaa
jae
ljmp
cli
ja
adc
in
stc
xor
setb
and
hlt
pop
pop
lods
cmp
decl
push
jle
mov
adc
les
push
leave
adc
xchg
adc
cmpsb
push
cmp
jge
imul
push
jo
jno
mov
push
fwait
into
data16
mov
decl
fwait
xchg
sahf
ljmp
pop
pop
scas
push
lods
push
fisttpl
notl
negl
push
std
jns
mov
cld
divl
mov
not
mov
jmp
pop
enter
inc
nop
das
shlb
pop
clc
adc
stos
lods
xor
lret
xor
incl
sti
outsb
icebp
js
cs
icebp
sahf
cli
adcl
push
iret
pop
add
pushl
movsl
jmp
push
push
loopne
popa
mov
bound
jb
jns
mov
bound
adc
adc
add
mov
lea
lcall
jl
lock
faddp
cli
jp
popa
out
dec
dec
nop
in
xor
dec
pushl
sbb
sahf
mov
negl
es
or
mov
imul
ror
scas
push
push
outsl
xchg
into
mov
pop
pushl
notl
push
xor
sbb
daa
mov
cs
je
decl
pop
dec
adcl
cmpsb
xchg
into
mov
lcall
add
add
movsb
fdivrp
jmp
repnz
ss
mov
je
xchg
fldcw
jecxz
add
xor
push
mov
lcall
or
js
popf
mov
lret
bound
cmpsb
xor
int3
out
scas
and
add
ficomps
xor
out
rcl
clc
mov
dec
ljmp
pop
inc
aad
inc
insb
cmp
dec
cmc
mov
ret
popa
lcall
sbb
push
lcall
dec
mov
add
mov
mov
jecxz
mov
pop
icebp
jo
dec
pusha
jmp
pop
inc
aas
mov
jno
ror
imul
mov
es
mov
xchg
or
call
fwait
hlt
orl
shll
push
subb
outsb
and
inc
test
lea
jns
mov
fisubrl
fiadds
call
in
cltd
jl
push
movsb
js
inc
mov
imul
jb
jmp
xchg
xchg
test
push
test
repz
call
loope
mov
movsl
pusha
movb
test
xor
or
fwait
inc
inc
decl
fwait
cli
dec
rorl
lods
jne
rcrb
ja
dec
or
outsb
push
lods
pop
jp
or
pushl
cmp
cmp
pop
dec
mov
pop
sbb
jnp
dec
das
jg
data16
movsb
push
pop
addl
lcall
loopne
aad
testb
mov
ds
movb
and
ds
jmp
xchg
lds
push
jge
mov
loopne
shl
jb
pop
dec
outsl
ret
dec
andl
adc
test
jl
test
cli
or
xchg
mov
lret
dec
ja
outsl
sbb
call
ficoms
movsb
cld
std
cmp
or
mov
fdivl
scas
add
adc
arpl
dec
pushw
pop
test
fnstenv
mov
sub
in
flds
cmpsl
enter
gs
es
jmp
into
int3
jo
dec
pop
cwtl
push
cmpsb
add
push
sbb
decl
sub
xor
icebp
int
in
xlat
inc
or
and
xchg
sbb
stos
mov
mov
push
add
sbb
jge
jo
add
cs
pop
shrb
inc
push
call
aaa
test
pop
xorl
bound
sbb
inc
pop
lret
bound
add
sahf
mov
dec
subb
arpl
loop
xor
mov
sbb
jp
ja
clc
and
ja,pt
adc
jnp
fiaddl
add
jmp
jne
enter
xchg
ljmp
jecxz
mov
add
dec
repz
dec
jns
push
mov
decl
es
pusha
xchg
fbld
push
add
mov
aam
bnd
lcall
loopne
hlt
ret
imull
lods
xor
dec
sti
rcrb
xchg
in
jbe
test
ljmp
jecxz
call
jnp
out
popa
test
rol
bound
int
into
inc
arpl
cmp
sub
dec
das
dec
outsb
or
mov
adcl
cmpsb
adc
xchg
sbbb
dec
sbb
fwait
add
ljmp
aas
icebp
pop
mov
cmp
dec
out
xor
ljmp
movsl
ja
xchg
cld
xlat
mov
sbb
push
out
mov
push
pop
imul
mov
in
jp
and
cmp
inc
mov
adc
mov
or
fs
loopne
call
rcrb
xor
enter
incl
loopne
adc
sbb
add
cmp
outsl
fimuls
lcall
aaa
js
jno
icebp
das
push
mov
or
and
pop
popa
or
push
addr16
int
jne
movsb
push
sub
adc
stc
sahf
dec
push
leave
dec
ret
xor
xor
push
leave
icebp
mov
inc
jbe
testb
test
decl
sbb
out
push
aad
dec
jmp
imul
outsl
clc
mov
adc
out
add
das
inc
xor
fs
int
scas
cmp
xchg
mov
mov
push
nop
call
ret
pop
ljmp
pusha
sub
or
decb
xor
pop
cmp
sbb
jnp
stos
or
jle
loopne
cmc
lret
lods
pushl
pop
mov
in
mov
adcb
inc
stos
fildll
push
xchg
xchg
mov
call
xchg
iret
mov
inc
call
nop
pop
lods
test
int3
scas
push
lcall
fldl
jecxz
fbstp
pop
xor
xchg
rorl
leave
sub
add
push
cli
sar
call
in
lcall
insb
in
enter
adc
bound
jmp
or
mov
mov
push
mov
shlb
unpckhps
xor
test
ljmp
sti
shrb
mov
inc
sarl
push
mov
cmp
sbb
xor
call
dec
test
cli
xchg
pushf
inc
loopne
add
lcall
pop
jmp
je
div
pop
mov
push
ret
in
lcall
insl
imul
enter
adc
mov
pop
out
sahf
fdivs
xchg
pop
lret
cmp
fcomip
lds
jnp
into
cmp
mov
push
pop
out
inc
jl
pop
sbb
pushl
mov
inc
cs
add
push
dec
jns
push
js
in
filds
add
jg
das
push
pop
aad
add
sysret
cltd
shl
js
xor
andb
lcall
scas
xor
cmpb
push
xor
je
adc
mov
test
decl
in
inc
mov
fildll
push
xchg
pop
sub
inc
pop
mov
jmp
push
pusha
cltd
inc
rcll
mov
and
into
push
nop
mov
fisubrs
mul
fwait
mov
mov
cmpsb
mov
xor
adc
pop
pop
out
xlat
daa
rcrl
ss
cmp
js
call
ret
sahf
jmp
cwtl
cld
test
xor
stos
fcoml
push
cli
sub
cmpsb
pushl
out
xor
pusha
cmp
std
hlt
dec
xchg
cs
or
or
pop
cmp
jmp
adc
sbb
sub
or
in
iret
mov
out
aam
xorl
das
cli
repnz
sarl
dec
dec
pop
ja
push
jb
push
jle
sub
cmp
mov
jb
add
push
shrb
pop
pop
push
test
jge
lcall
in
addr16
test
fwait
mov
gs
outsl
xchg
xchg
aaa
cmp
mov
in
jmp
pop
cmc
push
push
sbb
cmp
jb
fisubrs
or
incl
dec
pop
mov
aad
aaa
sbb
jnp
mov
dec
jle
daa
add
mov
or
inc
insb
sub
call
xor
add
pushl
insl
add
mov
mov
ficomps
addr16
fnsave
xchg
or
jmp
cmc
mov
popa
lret
in
pusha
scas
xchg
adc
mov
call
loope
adc
adc
mov
in
fsubs
inc
test
dec
mov
repz
inc
mov
inc
push
or
jg
movsb
pop
and
mov
dec
xlat
mov
loope
mov
sub
cli
mov
push
fidivl
adc
mov
cmp
cwtl
ja
ss
pushl
sbb
cmp
push
push
sub
mov
out
sbbl
in
scas
cltd
sti
pushf
movsb
mov
dec
mov
test
lahf
in
cld
addr16
mov
push
pop
mov
stos
mov
repnz
xchg
out
lret
orb
push
faddl
je
dec
lds
mov
and
xchg
fdiv
into
pop
dec
sbb
call
pop
lods
cmpb
sbb
sbb
inc
sub
xor
mov
adc
add
ljmp
cmp
sub
lea
dec
scas
dec
addr16
pop
decl
imul
sbb
mov
test
cmp
iret
mov
cmp
movsl
lcall
sbb
scas
and
xor
push
xchg
les
add
aas
aam
mov
test
lds
out
push
call
aas
in
or
jo
pushl
sarl
mov
cmp
fwait
xlat
ffree
pop
jb
in
add
jno
and
lcall
jmp
nop
fsubrl
test
hlt
jle
insl
scas
mov
jb
std
dec
mov
add
pushf
imul
dec
pushl
and
push
xchg
pop
bound
fldl
ret
inc
pop
sub
xchg
mov
mov
jp
clc
mov
clc
inc
xchg
mov
jns
incl
cli
jle
arpl
jnp
xor
movsb
fmull
mov
pop
mov
push
das
sar
sbb
sub
ret
scas
xchg
in
daa
jnp
dec
xchg
mov
in
ljmp
inc
mov
scas
int
mov
je
imul
mov
sarl
subl
jmp
inc
jl
and
pop
mov
decl
or
or
jge
and
repz
or
ljmp
add
cmp
rcrw
and
iret
xorl
pop
pop
faddl
icebp
push
decl
push
xchg
push
and
sub
dec
pushl
mov
xor
test
add
xchg
adc
cltd
or
decl
adc
pop
lahf
cmp
sbb
nop
mov
sub
adcl
mov
mov
xor
addb
inc
mov
fsubrl
mov
cmp
nop
and
mov
xchg
pop
xchg
test
xchg
sub
iret
dec
ret
decl
adc
mov
jg
addr16
loop
insb
jb
pop
lcall
mov
xlat
rclb
ret
sub
pop
aam
jbe
xor
ret
mov
cmpsb
or
pushl
std
mov
sbb
mov
cmp
and
xchg
cmp
xchg
fwait
aaa
mov
mov
mov
mov
adc
dec
addr16
pop
popf
cs
call
cltd
sub
iret
imul
adc
mov
loope
mov
add
dec
hlt
jg
push
or
dec
adc
push
out
xchg
cld
mov
ret
mov
mov
es
stc
mov
ds
add
iret
nop
inc
pop
adc
call
lods
dec
test
push
mov
leave
sbb
inc
xor
into
mov
mov
jmp
xchg
call
std
test
jns
sti
push
mov
sub
jb
test
subb
insb
loope
nop
jg
cltd
aad
scas
cli
sub
pusha
fwait
jb
xchg
outsb
mov
ds
mov
rolb
xchg
out
jge
sub
add
ds
ret
or
bound
mov
std
aaa
dec
inc
push
scas
scas
pusha
int3
cmc
push
dec
mov
pop
es
nop
xchg
add
push
movsl
push
mov
sub
ror
mov
adcb
jg
jmp
mov
and
enter
or
cwtl
inc
scas
push
popa
sbb
fiadds
rorl
sub
incl
jae
insl
arpl
ss
aas
sarb
mov
lcall
stos
lods
or
and
or
mov
das
orb
xor
cmp
stos
cltd
xchg
pop
mov
add
pusha
fdivr
lock
cmp
cmp
icebp
mov
ljmp
std
andb
sbb
pop
dec
and
popa
mov
insb
xor
data16
incl
xchg
fs
iret
sub
stos
stos
dec
push
sbb
cltd
out
and
ds
jmp
mov
lahf
std
xor
add
mov
cmp
sbb
adcl
dec
mov
dec
and
xor
dec
mov
std
jne
rorl
jle
cmpsl
jns
int
aam
scas
mov
call
jge
xor
lret
pop
xor
icebp
pop
fisttpll
xchg
sahf
data16
adc
xchg
jae
int3
loopne
mov
and
aas
mov
sub
or
mov
xchg
inc
inc
adc
mov
jo
idiv
incl
jmp
jge
add
mov
ss
cld
pushf
nop
ficompl
scas
sub
pop
enter
mov
lcall
shr
add
shlb
aaa
cld
stc
cmp
clc
int3
lahf
call
dec
push
cli
call
lods
test
lahf
sar
cmp
jnp
leave
jo
mov
xchg
sbb
jo
cmp
mov
sbb
jmp
cmc
and
cmpl
out
mov
fistl
sbb
pushl
cmp
fisubrl
dec
enter
or
sub
stc
call
popa
rcrl
hlt
cmpsl
jno
pop
mov
test
dec
jae
nop
ds
in
jmp
jg
lods
sub
mov
xchg
hlt
scas
sbb
adc
mov
dec
xchg
pushf
repz
jp
dec
je
inc
xor
xlat
mov
jns
cwtl
jbe
je
add
adc
fists
scas
sub
decl
cmp
out
pop
adc
pusha
mov
lea
cmp
sbb
jmp
leave
ss
cs
fucom
es
jo
dec
mov
cli
sbb
fxch
cmp
ljmp
nop
ret
sbb
push
subl
or
lret
jecxz
test
push
pop
movsl
stc
and
mov
call
cli
popf
adc
sbb
incb
fwait
stos
out
dec
jmp
mov
ljmp
in
mov
sub
add
xor
aaa
clc
flds
ret
je
jg
xor
pop
inc
sti
rorl
ljmp
ds
daa
fnstsw
jmp
and
push
pop
xchg
jo
out
sub
dec
loop
jbe
jnp
and
inc
mov
inc
sbb
imul
xchg
arpl
sbb
sub
mov
imul
decl
iret
mov
add
sub
dec
or
jae
sub
clc
out
cli
out
movsl
hlt
lcall
out
ss
call
cmp
lret
rorb
ljmp
pop
lret
and
push
mov
ficoms
icebp
push
loopne
les
lds
mov
xor
fwait
mov
sbb
adc
frndint
pushl
movsl
adc
shrl
test
imul
ja
sub
inc
xor
jge
incl
dec
and
push
ret
mov
add
inc
mov
fisttpll
mov
ret
lods
shlb
jg
aas
mov
or
mov
mov
cmpsl
mov
dec
aad
data16
enter
out
mov
lcall
mov
cmp
popf
or
mov
sbb
xchg
adc
cmp
inc
push
jmp
adc
sub
add
mov
mov
loope
fistpl
push
repnz
push
sahf
xchg
icebp
adc
push
incb
push
sbb
push
dec
pusha
aam
jmp
imul
mov
pushl
shrl
or
pop
lock
addr16
in
loope
mov
ret
xchg
test
fcmovbe
incl
js
inc
inc
adc
mov
stc
sub
sbb
dec
fidivl
inc
or
mov
ljmp
fstps
enter
idivl
xor
pushf
sbbb
pop
sub
and
or
jmp
rcll
or
out
in
dec
mov
fwait
inc
imul
js
lcall
popa
xor
mov
jnp
xchg
sahf
cli
xchg
cmpsb
mov
add
jl
pop
stc
mov
int3
cmp
jmp
cmpsl
mov
rcrl
sbb
in
aad
inc
fistps
push
xor
jnp
imul
xchg
cli
inc
jb
cmp
jmp
fucomi
lret
cmpsb
loope
jns
xor
lret
cmp
jle
clc
or
and
cmpsb
sbb
and
fcoml
decl
lock
out
add
adc
ja
sbb
bound
cmp
xlat
pushl
popa
arpl
jle
mov
outsb
daa
cmp
lods
sbb
in
scas
mov
jg
test
lods
or
ja
push
decl
inc
and
scas
adc
sahf
dec
mov
cmp
mov
pop
cmp
pop
fldcw
addr16
aaa
shrb
xchg
and
sub
scas
sbb
hlt
sbb
dec
xchg
in
adc
ljmp
add
in
and
adc
lods
dec
mov
fcmovnbe
fmuls
mov
push
out
xchg
cmp
cmp
cwtl
cmp
out
faddl
repz
inc
jns
bound
push
lea
add
push
jmp
cmp
roll
test
call
mov
dec
cmpsl
adc
push
lahf
xchg
cmpsb
cmpsb
pop
shlb
clc
mov
mov
mov
rol
popw
mov
sbb
leave
push
push
adc
in
cmpsb
stos
xchg
or
incl
inc
inc
pop
in
jo
add
jae
push
inc
inc
xor
into
mov
prefetch
or
stos
xor
loope
scas
push
mov
push
add
call
call
xchg
mov
in
dec
or
stos
sbb
dec
and
aam
or
loop
aad
fbstp
mov
adc
cmp
faddl
xlat
je
push
faddl
adc
out
or
pop
lods
adc
orb
add
aad
jmp
mov
or
js
int
jmp
into
add
xor
xorb
dec
inc
push
mov
mov
nop
push
outsb
sbb
or
out
dec
rolb
adc
push
mov
xchg
ret
jg
sub
int
pop
inc
push
mov
adc
jg
cmpsb
iret
aaa
pop
pop
ljmp
fdivrl
pop
fcoms
testb
xchg
xchg
sahf
push
lods
enter
incl
mov
mov
mov
jle
sbb
hlt
dec
or
push
inc
push
xlat
mov
popa
add
lcall
imul
int
and
jbe
imul
inc
mov
mov
lods
dec
jg
xor
pop
sub
enter
cmp
jmp
mov
adc
call
mov
out
sbb
ds
cmp
push
out
jb
jmp
xor
or
sub
out
ja
cmpb
jp
pop
sub
clc
call
and
pop
pop
inc
jne
mov
dec
std
cli
xlat
roll
add
mov
lret
cld
shlb
icebp
jne
cmp
outsl
cli
xchg
xor
mov
lahf
es
ret
mov
jmp
mov
jno
cmp
sbb
scas
lods
add
xor
repnz
sbb
jmp
add
pop
push
addr16
xor
mov
inc
pop
aaa
fmuls
jp
aaa
cmpsl
inc
call
cmp
mulb
pop
outsl
out
lods
xchg
aad
repz
push
jo,pn
ljmp
cmp
inc
sub
test
mov
mov
mov
pop
in
ret
call
sbb
iret
and
sbb
or
int
mov
scas
mov
adc
gs
pushl
dec
dec
dec
sub
xchg
fiadds
rorl
repnz
jge
lret
dec
pop
push
or
jg
lock
imul
incl
insb
shrl
outsl
aam
adc
jp
push
pop
or
scas
xor
in
xchg
lods
ja
xchg
lcall
xor
data16
cmpsl
mov
sub
in
push
jns
inc
mov
cmp
jbe
fmul
aaa
out
sarl
or
es
imul
lods
pushf
pop
in
iret
add
dec
popf
and
mov
lcall
mov
outsl
inc
adc
dec
notl
fdiv
xchg
mov
imul
xchg
adc
pop
das
ret
test
sbb
cmp
adc
jno
call
pusha
mov
inc
jmp
je
imul
lock
jnp
aad
into
xchg
das
sbb
imul
jp
mov
nop
xchg
or
and
into
stc
pushf
jl
mov
cmp
jl
in
dec
fwait
sub
incl
jno
fmuls
fiaddl
lea
push
sub
pop
inc
adc
ljmp
data16
ljmp
or
mov
arpl
cs
nop
pop
insb
sub
pushl
push
sti
jbe
lock
mov
test
jb
js
xchg
mov
xchg
mov
mov
adc
add
mov
pop
addr16
pop
imul
jge
loopne
mov
pop
repnz
pop
es
les
daa
incl
outsl
pop
mov
adc
pop
lahf
inc
aad
xor
xor
inc
push
in
decl
fwait
dec
push
cmpsb
es
xlat
sahf
xor
mov
clc
adc
jg
pop
push
mul
add
and
fldt
push
subl
jl
vmaxsd
icebp
pop
cs
imul
roll
ljmp
daa
fisubrs
movsl
jae
mov
es
mov
push
xor
sub
cmp
fmul
jae
cwtl
imul
cmpsb
scas
xor
xchg
sarl
mov
stc
loop
aad
test
pop
lock
dec
test
xchg
xor
sahf
test
or
ljmp
and
push
out
or
dec
xor
jle
cltd
jbe
push
jbe
cmp
or
aad
fbld
mov
or
addr16
jne
std
stos
jle
mov
mov
and
insb
jg
shll
call
jae
or
xor
pop
pop
cmc
cmp
jo
lock
bound
inc
inc
adc
or
inc
push
cmp
cmp
and
shlb
xchg
pmulhuw
decl
jg
mov
mov
inc
cltd
cwtl
mov
sub
ss
jno
lcall
loopne
cs
out
or
inc
ds
les
in
sarl
cmp
inc
mov
sub
mov
jo
sbb
and
jne
xchg
out
comiss
sbb
pushl
jp
out
lret
nop
fidivrl
adc
das
imul
ljmp
adc
mov
inc
mov
aad
aad
fcompl
icebp
sub
add
jg
inc
fsubr
cmp
or
dec
int3
adc
push
lock
mov
scas
ljmp
ljmp
lods
aaa
movl
push
insb
jnp
mov
dec
testb
jp
sbb
or
insb
clc
call
enter
loop
pop
jle
dec
xchg
cmp
xor
mov
fimull
jo
adc
xchg
clc
insl
mov
decl
xchg
sub
pusha
cmp
out
iret
aam
hlt
decl
push
lret
lods
pop
or
loopne
imul
orl
fdivrs
repnz
fisttpl
push
std
pusha
xlat
sub
in
decl
repz
fidivl
inc
push
movsl
add
jmp
mov
fidivrl
decl
sub
and
mov
add
cmp
fstpl
cmp
decl
test
or
aad
xor
xchg
sarl
mov
leave
push
dec
mov
pop
std
negl
lcall
in
push
xor
scas
cmp
xchg
shll
jmp
out
jmp
sub
rolb
outsb
out
in
das
sub
cmp
sbb
pushl
test
aam
cli
adc
mov
mov
push
lods
mov
pushl
dec
mov
cmp
adc
and
jbe
pop
mov
lcall
repz
mov
add
push
lock
sbb
nop
adc
sbb
xchg
cld
call
inc
dec
mov
fwait
dec
dec
cwtl
xlat
sub
ret
jmp
mov
call
cmp
xor
fyl2x
mov
xor
or
push
pop
mov
jmp
push
push
cld
lret
or
adc
inc
xchg
pop
out
loope
idiv
ljmp
lahf
add
mov
mov
icebp
mov
in
push
mov
push
pop
mov
push
test
decl
test
inc
jge
pop
pop
pop
adc
ljmp
stos
jge
mov
sarl
movb
mov
lods
call
mov
inc
das
pop
out
hlt
sub
daa
dec
add
in
ret
xor
ljmp
jle
in
push
jae
shrb
pop
sbb
je
fnstsw
pop
aam
push
test
incl
lods
leave
jmp
cmp
pop
fsubs
and
jg
push
fs
movb
and
and
retw
hlt
cmp
ret
decl
or
aaa
hlt
adc
inc
xchg
ficoms
mov
cmp
mov
int
mov
xchg
mov
jecxz
mov
fsubs
mov
mov
les
in
sbb
sbb
or
ljmp
xorl
mov
push
add
jg
xor
aaa
pop
in
bound
decl
xchg
xor
xor
ss
sub
ret
pop
lahf
repnz
lock
add
dec
jne
rcr
xchg
jae
ljmp
inc
arpl
xchg
push
ss
fcmovnbe
push
int
mov
sub
lcall
lods
or
xor
clc
and
decl
push
sbb
ljmp
push
fwait
stc
fisubrl
lcall
lret
lock
fcomip
cli
push
or
loope
aam
jp
fldl
imul
pushl
ljmp
clc
ss
jmp
xorb
sub
xchg
out
mov
mov
pop
and
lods
sub
loopne
jle
jp
jae
add
jo
mov
pop
lock
fsts
push
ret
pop
xchg
adc
push
mov
clc
push
add
lea
fistl
push
mov
insl
ss
push
lcall
xor
jg
out
sbb
or
pop
mov
inc
out
iret
mov
sar
rclb
ds
add
xchg
cmp
stc
stos
xor
decl
mov
std
ror
insl
fnsave
testl
mov
rep
push
push
sub
or
rcrb
push
movsl
pushf
adc
jmp
push
ds
jmp
data16
std
mov
sahf
cmpsl
out
push
popa
push
add
movsb
imul
jbe
pop
std
incl
into
stos
xorl
les
cmc
cmp
daa
pop
outsb
dec
cmp
pushl
incl
mov
rcrl
loop
lret
aam
mov
mov
cmpl
inc
mov
loopne
jp
mov
push
js
and
loope
mov
pop
or
mov
call
shll
push
outsb
jo
bound
or
pushf
stc
dec
test
cmpb
xchg
fldenv
mov
popa
mov
push
dec
incl
jl
in
fstl
ja
push
je
fnstcw
mov
scas
int3
out
jle
jmp
inc
lcall
int3
std
dec
mov
fistl
pop
pop
dec
mov
mov
mov
push
xor
out
pusha
mov
cmp
iret
dec
bound
adc
mov
aad
jb
pop
jg
jp
decl
push
loopne
push
imull
mov
fnstenv
push
cmp
pushl
add
out
jbe
stc
cmpsb
out
je
xchg
pusha
mov
mov
enter
xchg
xchg
int3
jae
mov
std
decl
sub
sub
mov
mov
sbb
insb
insb
test
decl
test
pop
cmp
fists
xchg
int3
inc
mov
xchg
jl
push
je
std
dec
shl
mov
mov
sub
adc
les
data16
ficoml
call
dec
mov
jae
sahf
lcall
add
je
js
rorb
stc
push
fisttpl
shrb
fcmove
cmpsl
lods
xchg
dec
push
mov
fldt
sbb
ds
enter
cmp
imul
clc
mov
test
cmp
jae
divl
lods
pop
addl
shr
std
add
aas
push
pop
jo
dec
jl
movsb
pushf
xor
mov
xchg
or
xor
pushl
cli
dec
jmp
ja
mov
aaa
jl
inc
mov
inc
mov
testl
ljmp
or
pusha
popa
mov
xchg
pop
fcomip
sub
scas
scas
sbb
aad
and
inc
ror
jl
jl
sub
in
jp
std
mov
pop
dec
loop
jp
dec
add
ret
sub
dec
loope
mov
dec
clc
sbb
xchg
and
lret
inc
bound
xorb
incl
pop
xor
adc
push
repnz
push
mov
mov
stos
inc
or
jae
addr16
jle
iret
mov
call
sub
or
clc
call
mov
jmp
pushf
shrb
sbb
sbb
loop
or
push
sub
fucomp
fstpl
inc
xchg
decl
shl
jbe
push
loopne
outsb
push
add
mov
adc
cld
mov
xchg
xchg
es
xchg
pop
in
cmpsb
jl
sbb
inc
lcall
call
mov
xchg
leave
mov
sub
leave
pushf
test
adc
mov
out
jmp
xchg
inc
mov
inc
xor
and
ret
mov
mov
push
filds
xlat
aam
sub
push
mov
and
mov
xchg
aam
push
lahf
mov
hlt
gs
iret
sbb
js
lds
stos
xchg
mov
sahf
mov
incl
cwtl
cmpsb
sub
or
push
mov
sub
and
jmp
call
in
jne
mov
cmp
jle
rolb
xchg
add
or
dec
push
insl
out
dec
roll
call
add
push
xor
xor
outsb
inc
pop
lcall
add
pop
dec
mov
fisttpll
es
jo
xor
cmp
call
add
cli
and
mov
std
sahf
cmp
sbb
adc
imul
sar
div
in
rcrl
push
cmp
sahf
pop
js
lods
stos
and
into
push
stos
or
mov
pop
hlt
or
pop
xchg
xchg
cmp
lock
or
aaa
ret
scas
lret
incl
ret
mov
arpl
add
mull
mov
stos
dec
test
add
inc
es
dec
push
lret
outsl
and
sar
jl
in
add
pop
xchg
mov
or
in
add
pop
mov
incl
jne
insl
nop
xchg
js
fildl
icebp
cmp
pop
pavgw
cmp
xchg
and
pop
icebp
decl
or
sbb
jne
adc
dec
inc
out
push
inc
xchg
and
stos
lcall
fidivl
inc
int
xchg
mov
xor
lret
call
call
adc
dec
cmp
loope
cmp
mov
aas
pop
fwait
jecxz
push
mov
push
or
push
sub
mov
cli
jns
mov
test
push
cmpsl
int
pop
fcoms
xchg
mov
push
test
mov
popa
inc
add
inc
call
fcoml
sti
mov
lods
pop
xchg
jmp
mov
dec
or
pushl
pusha
mov
popa
xchg
cld
pop
cli
rorb
pop
lcall
xchg
mov
jmp
push
lret
in
adc
fmull
call
jl
pop
pop
decl
pop
std
in
or
jns
push
pop
fidivrl
add
mov
pushl
xor
loop
decl
out
inc
insl
loope
push
test
lret
movsl
mov
add
cwtl
push
ja
pop
lock
and
ret
movsb
rcrb
scas
pop
cmp
decl
lahf
adc
jae
test
push
dec
loopne
push
adc
popl
and
add
iret
mov
fmull
lock
nop
jmp
call
test
mov
outsl
shlb
add
fdivrs
add
push
xchg
push
icebp
test
mov
sbb
popf
mov
dec
xor
push
mov
mov
pop
and
bound
jae
inc
enter
lcall
push
pop
mov
sbb
in
mov
push
int3
imul
push
sbb
push
pop
and
jmp
pop
xchg
cmp
inc
fiaddl
insb
inc
sub
incl
cld
add
xchg
icebp
cld
push
lods
xor
lods
or
pop
icebp
call
stos
pushf
leave
and
shlb
jge
push
push
outsb
fisttpll
adc
mov
aaa
dec
decl
out
inc
mov
inc
out
dec
mov
mov
outsb
outsb
adc
ds
clc
js
fstpt
jge
push
jmp
push
mov
outsb
push
in
leave
and
fadds
pop
xlat
mov
pushl
sbb
jne
mov
test
mov
imul
loopne
sub
mov
xor
xor
and
pushl
dec
enter
inc
mov
jmp
das
hlt
push
cmp
mov
jg
sbb
nop
je
pushaw
add
ljmp
inc
add
mov
and
mov
repz
adc
loop
and
mov
call
incl
add
lahf
or
sbb
cmpsb
mov
mov
aam
divb
adc
call
outsb
dec
jne
aaa
cmp
les
aas
notl
leave
lret
adc
xlat
fadds
pushl
ds
arpl
push
push
xchg
inc
hlt
jle
push
pop
fwait
test
and
and
pop
popa
add
icebp
out
or
dec
jge
jbe
stc
dec
movsl
sub
jge
xorl
sar
xor
nop
jnp
pop
loopne
pushf
fsubp
pop
push
je
lcall
decl
lahf
or
cmp
into
mov
push
in
cmp
xlat
ds
sti
inc
lret
cli
ds
fidivs
sbb
fcmovbe
jp
and
adc
test
lds
xchg
push
jo
lods
mov
pop
lock
mov
fidivrl
clc
enter
out
jo
cmp
mov
pop
or
jnp
gs
and
mov
mov
incl
jb
aad
out
bound
dec
and
sbb
sbb
xchg
sub
pushl
pop
push
adc
shr
mov
or
cli
mov
mov
mov
mov
jg
dec
mov
loop
aaa
call
inc
dec
mov
xchg
aad
mov
ret
mov
lret
test
fcoms
xor
and
in
cs
push
out
test
or
ljmp
cmp
cmp
fnstsw
lds
shrb
mov
pop
hlt
arpl
int
lock
pushl
and
lret
movsb
fdivs
add
fmulp
mov
jp
fcomip
pushf
adc
jb
les
shlb
int
fdivs
cmpsb
leave
jg
mov
pop
out
cli
jg
ljmp
scas
jo
cmpl
pusha
pop
outsb
sti
repz
fisubl
outsl
out
aam
vunpcklps
shrb
dec
and
aad
loopne
int3
push
adc
sbb
dec
pushl
xchg
push
test
mov
cs
and
push
fdivs
mov
dec
testl
sti
sbb
xchg
inc
adc
jmp
cmpsl
sbb
ljmp
xlat
in
inc
lock
pop
mov
js
out
shrb
lret
ljmp
jno
ret
insl
sti
sahf
xor
or
mov
aaa
ljmp
loop
jnp
xchg
aaa
mov
pop
insl
test
andl
outsb
mov
out
mov
mov
fdivrs
lods
jmp
lods
sub
addb
test
cmp
adc
lcall
lahf
test
push
sti
gs
int3
cs
push
sbb
add
mov
cmpsl
std
pushl
lcall
test
icebp
fdivs
nop
mov
sub
adc
rorb
sahf
call
enter
pop
jnp
pop
ficomps
sbb
cmp
jno
repz
jns
push
nop
cmp
call
ljmp
fiadds
and
mov
iret
jecxz
xor
fildl
incl
or
out
jmp
and
fsubs
sub
lods
in
sub
mov
or
and
mov
mov
fildll
ljmp
div
bound
push
push
sbb
pop
xor
fstps
mov
cmp
idiv
decl
sbb
jns
push
sub
aad
fisubrs
in
and
xchg
mov
sbb
rcl
test
hlt
call
divl
outsl
and
and
jae
call
stc
cmp
ja
jmp
shrb
or
jnp
push
sbb
pop
push
mov
outsl
mov
shrb
in
cwtl
pusha
jg
and
mov
test
sub
inc
xlat
popw
aas
divb
xchg
test
pushl
gs
xor
jp
push
popf
sbb
sub
test
cld
stc
mov
push
stc
fisubrs
mov
lret
outsb
rorl
int
mov
enter
push
or
aam
cmc
int3
lea
jns
mov
imul
pop
push
adc
stos
push
cs
lds
test
call
push
in
mov
je
cwtl
push
fwait
pop
xchg
xchg
push
xchg
push
and
ficompl
std
je
int3
ljmp
jne
mov
sbb
push
movsb
xor
sub
xchg
rorb
insl
dec
sub
pushl
push
lods
stos
lods
lret
or
lret
or
mov
cmp
gs
or
jmp
clc
cmpb
nop
loop
xchg
loopne
mov
pop
imul
jns
add
into
call
ds
orb
jle
arpl
xor
call
fidivrl
in
ds
sub
xchg
daa
inc
sbb
paddsw
or
adc
es
jecxz
cmp
jl
mov
ja
je
ss
pop
icebp
repnz
inc
out
mov
incl
push
add
jge
clc
adc
jmp
push
push
and
and
cmpsb
jge
lcall
popa
sub
push
insb
or
lcall
arpl
add
fidivrs
jmp
sbb
cli
sub
fcomip
xchg
push
adc
and
aad
ljmp
loop
call
data16
das
jne
iret
cmpsb
inc
add
fimuls
sub
cmp
ljmp
pop
mov
data16
mov
push
leave
mov
pop
hlt
loopne
xchg
bound
dec
adc
adc
test
cmp
cwtl
jle
and
jmp
and
insl
out
and
call
std
xchg
aad
or
ljmp
inc
jp
sar
xchg
jae
jl
or
or
cmp
dec
pop
jbe
fsubr
push
push
stc
iret
push
les
add
and
push
and
out
inc
add
scas
ljmp
inc
xlat
sbb
inc
sbb
cmp
je
xchg
mov
loop
xor
pop
adc
and
pushl
sti
mov
mov
decb
add
inc
mov
test
mov
mov
mov
add
scas
pop
xor
jge
out
cli
or
push
push
dec
and
cmp
jo
or
jne
pop
xchg
bound
fisubs
cld
loop
ss
lahf
mov
jg
rclb
in
add
repz
pop
pushf
arpl
decl
mov
arpl
xchg
ljmp
sarb
adc
incl
sbb
mov
fwait
outsb
mov
insb
lock
mov
adc
bound
dec
fcomip
call
dec
std
loope
pop
shl
mov
aad
das
or
or
pushl
loop
xchg
sbb
mov
fwait
mov
stos
loop
mov
lea
sbbb
in
faddl
add
cli
cmp
push
sub
call
fcom
push
mov
mov
xchg
push
out
cld
inc
dec
or
addr16
inc
dec
add
in
sti
mov
jl
xchg
dec
and
data16
popa
and
pop
push
cli
pop
call
jmp
mov
in
lcall
adc
shlb
and
pop
clc
std
call
ss
pop
ret
cmp
test
cld
outsb
xchg
into
pop
push
xchg
push
jle
pushl
jmp
hlt
rclb
lret
lahf
jecxz
scas
repnz
scas
rolb
mov
lcall
sbb
jno
js
xlat
and
iret
std
mov
xor
mov
jg
aam
test
dec
fldt
imul
mov
xorl
lcall
add
cs
pop
mov
xchg
rcr
cmp
clc
mov
jmp
xchg
mov
and
xor
mov
rclb
sub
lock
push
lods
imul
xchg
pop
push
pop
or
xlat
dec
mov
adc
dec
dec
jmp
aas
ficoml
xor
repz
incl
repnz
pop
loope
fistpl
push
fcmovnbe
sub
in
shrl
ljmp
pop
fwait
rclb
insb
adc
lret
adc
jmp
insb
mov
aaa
std
jnp
jno
dec
cmp
test
and
add
decl
mov
jecxz
hlt
call
mov
test
sub
sub
jo
dec
cmp
incl
nop
cmpsb
dec
pop
push
std
js
pop
cmp
gs
sbb
xchg
adc
call
mov
sub
push
test
jle
jg
sub
mov
leave
sbb
sbb
mov
push
decl
ret
vmovss
arpl
lcall
inc
leave
lahf
inc
std
add
stos
call
aad
jns
les
fsubs
pop
add
out
add
ljmp
repz
xchg
xchg
fildll
mov
pushf
jnp
xor
jg
dec
mov
in
pop
into
mov
sar
mov
push
jp
inc
mov
movsl
inc
addr16
decl
sbb
cld
data16
pop
mov
pop
je
dec
popa
sti
icebp
or
and
fnstsw
cltd
mov
and
jge
stos
push
mov
and
incl
push
les
dec
push
add
xor
daa
pushl
mov
js
jmp
outsl
sub
cmp
mov
sahf
stos
js
or
ljmp
out
jmp
enter
xor
add
dec
pop
lea
inc
push
push
daa
nop
leave
inc
out
call
ret
fcomip
scas
mov
xlat
pop
sbb
add
cwtl
cwtl
push
lret
mov
dec
mov
xchg
decl
lock
cwtl
call
jl
add
fs
dec
add
out
ds
mov
movsb
lret
push
test
or
jge
sub
out
inc
rclb
fmull
push
jmp
jl
and
mov
cwtl
loope
stos
sbb
mov
jge
adc
fdivs
sbb
fistpll
aad
jno
int
xor
das
inc
xchg
or
xchg
jnp
outsb
prefetch
lcall
into
pop
lret
mov
scas
sub
mov
push
nop
roll
jg
push
xchg
or
cmp
jnp
inc
mov
and
icebp
adc
push
jp
sbb
jae
fcmovnb
jmp
mov
cmp
daa
jp
fsubrs
cltd
int3
push
incl
je
mov
std
cmpsb
or
adc
cmp
aad
pop
cli
jp
sub
ljmp
jg
cli
inc
xor
gs
imul
and
stos
dec
shll
mov
mov
mov
in
movsl
call
daa
lcall
xchg
inc
xchg
mov
mov
fsubrs
mov
imulb
xchg
loop
mov
insl
fisttpll
fs
add
dec
mov
rolb
hlt
jns
shl
mov
test
jmp
cmp
lcall
jmp
pusha
js
add
call
lahf
sub
inc
sub
jp
jnp
xchg
mov
jae
mov
jae
ljmpw
xchg
push
lahf
bound
or
inc
inc
lahf
cmpsl
lods
arpl
mov
pushf
and
shlb
call
dec
fistl
cmp
test
cmpb
jb
lock
pushl
adc
adc
addr16
xor
ret
and
mov
adcl
data16
pushl
xor
sbb
js
dec
aas
and
call
inc
add
test
sbb
cld
jg
popa
inc
push
xor
jo
sar
cli
icebp
or
mov
ret
rcr
push
sti
gs
lea
jo
dec
adc
push
xor
jecxz
xchg
push
rcrb
shlb
adc
mov
test
xor
xchg
aad
jge
mov
lcall
adc
push
mov
lods
sar
fisubs
xchg
sbb
mov
mov
out
or
pop
sub
dec
addr16
jle
les
mov
mov
ror
loopne
xor
inc
stos
sarl
adc
cmp
in
mov
push
dec
push
loopne
mov
dec
arpl
mov
jl
imul
mov
inc
xchg
mov
movsb
inc
daa
fdivl
mov
cmp
mov
aaa
push
pop
jg
jecxz
decl
in
and
cmpsb
lret
adc
lret
and
lock
ljmp
dec
pushw
ja
add
repz
mov
sub
or
dec
fcoms
push
push
jmp
lcall
scas
push
xchg
push
testb
loope
ljmp
jp
pop
test
call
or
in
xor
iret
popa
in
mov
incl
cld
mov
or
mov
fildl
push
rorb
leave
mov
mov
out
clc
ljmp
cmpsb
das
fs
shl
xchg
inc
xchg
mov
rolb
sarb
sbb
fs
scas
jb
adc
pushl
xchg
push
fimull
loope
lret
sub
lock
inc
push
and
xchg
ds
incl
movsb
mov
and
xchg
add
and
jno
jo
inc
adc
ficomps
cmp
mov
cltd
push
push
stos
xchg
repnz
jns
cmp
test
insl
clc
mov
cmp
loopne
xchg
inc
test
mov
fucom
and
inc
aaa
mov
pop
dec
fwait
mov
das
fbstp
or
call
pushl
hlt
jne
dec
mov
mov
push
jecxz
iret
cltd
enter
add
pop
fcomp
or
fcomip
imul
insb
sarl
jge
iret
mov
lcall
cli
jg
pop
mov
addr16
xchg
cmp
scas
or
lds
ljmp
lcall
fwait
pushf
mov
test
aad
adc
push
mov
loope
mov
xorb
enter
and
cmp
ficoml
sbb
pop
jbe
pushl
mov
stos
and
mov
dec
das
inc
mov
lahf
push
jnp
in
ljmp
jg
adcl
cltd
cs
movsb
adc
and
dec
rolb
jne
jns
sub
stc
in
mov
adc
push
mov
dec
pop
mov
sub
adc
lock
std
cmpl
nop
fsubrs
pop
cli
inc
add
call
cmc
mov
mov
es
orb
pushf
push
push
jmp
test
mov
mov
fisubs
fmull
jnp
sbb
and
jb
jno
inc
jmp
mov
or
xchg
and
or
ss
cmp
pushf
jae
out
mov
in
lahf
adc
sub
cmc
clc
dec
pop
stc
lahf
dec
and
fisubl
push
cmp
inc
std
mov
outsb
adc
adc
out
pushf
data16
and
pusha
lds
push
dec
mov
subb
aam
sbb
lcall
pop
arpl
cld
cld
sbb
mov
jo
jmp
add
mov
jmp
iret
add
pop
inc
add
xor
mov
xchg
adc
cmp
sub
jg
insb
push
shr
jge
cmp
or
cwtl
adc
inc
call
mov
add
jb
scas
mov
in
popf
ja
test
mov
and
decl
cltd
out
fdivrl
inc
insl
lret
and
sarb
pop
repnz
lock
les
pushl
jp
bound
pop
xor
jne
sub
lock
test
sbb
decl
push
cld
lret
dec
jge
cmp
mov
inc
rcrl
jae
popa
push
jg
push
cmp
inc
sub
xchg
fwait
pop
mov
imul
pop
loope
jo
xchg
repz
cmp
lahf
or
scas
and
push
insl
loope
inc
lret
add
leave
cmpsl
cs
add
jo
mov
pop
sbb
mov
cmp
call
xchg
push
mov
push
or
adc
xor
int
ficoms
cmp
out
jle
push
sub
call
fsubrl
sbb
pop
dec
inc
add
call
arpl
pop
hlt
adc
jle
incl
cmp
cwtl
dec
inc
rcrb
stos
cld
sti
add
jg
and
mov
and
out
adc
stos
bound
cltd
loop
mov
ret
sub
jmp
test
jb
notb
and
xchg
jno
les
pop
movsb
test
pushf
in
or
mov
cld
jns
enter
xor
adc
out
mov
cmp
cmp
and
jmp
out
mov
mull
mov
call
xchg
imul
cwtl
frstor
lods
dec
and
jg
inc
cwtl
mov
mov
jl
mov
jg
push
data16
andl
sahf
push
sti
lcall
mov
add
jmp
jnp
adc
jbe
mov
sub
mov
notb
lcall
aas
cmpsl
push
std
iret
mov
mov
decl
adc
jge
pop
mov
or
mov
mov
mov
outsb
nop
bound
ljmp
ret
sub
xchg
pop
jmp
mov
das
loop
out
fmul
out
fisttps
add
push
push
mov
add
pop
fistps
shrl
sbb
mov
imul
repz
test
loope
popa
test
call
popa
das
lret
xchg
pusha
xchg
clc
test
pop
loopne
sub
push
sbb
lahf
mov
lcall
iret
or
mov
mov
in
stos
hlt
mov
cmp
lcall
ret
cmp
aaa
cs
pop
pop
enter
das
leave
inc
xor
arpl
mov
adc
incl
jb
pop
add
mov
dec
repnz
mov
out
xorb
jmp
incl
int
stos
dec
loope
add
lock
jb
pop
lcall
jmp
arpl
or
rcr
mov
andl
mov
shr
jmp
faddp
fimuls
jb
fwait
push
mov
adc
jns
push
sbb
pushl
jecxz
push
out
push
inc
adc
fcomip
dec
push
out
or
adc
add
ljmp
repz
add
pop
dec
dec
fstpt
orl
inc
in
cs
aaa
cld
pushl
jno
cmp
xor
adc
fs
sub
lahf
dec
inc
xorb
out
jle
mov
pop
fisttpl
push
divb
movb
jge
jmp
xchg
inc
shll
add
dec
xchg
imul
mov
insl
mov
int
test
cmp
cmpsb
pop
test
pushf
sbb
or
cmp
dec
mov
cmp
daa
test
xlat
pop
inc
loop
ret
dec
sub
movsl
fildl
push
ljmp
aaa
cmp
enter
mov
pop
sub
inc
movsb
scas
mov
pushl
outsb
or
cmp
rcll
movsl
out
mov
xchg
lock
sbb
ds
das
sub
mov
jge
mov
sub
xor
ds
jmp
jno
sub
std
and
pop
xchg
je
xchg
fldenv
mov
adcl
ret
cmc
fimuls
decb
aas
fsubl
cli
mov
test
pop
mulb
dec
repnz
ljmp
clc
pop
and
arpl
mov
mov
aad
inc
mov
add
arpl
cld
pop
and
decl
fwait
dec
sbb
sbb
dec
mov
push
loop
incl
or
sub
pop
shrb
lea
push
push
orb
pop
sbb
lods
stc
loope
xchg
pushl
call
jle
inc
push
les
sub
xchg
or
dec
pop
in
movsb
push
clc
in
inc
cli
jle
push
mov
and
sti
xor
sub
mov
pop
test
jmp
and
pushl
jns
rorb
ja
lahf
inc
loopne
cli
ret
add
xchg
and
insl
cld
testl
ljmp
cs
push
ds
cmpsl
sti
outsl
testb
mov
jb
mov
mov
cli
lcall
and
inc
xlat
mov
outsb
push
rcl
cltd
dec
jnp
jnp
lcall
push
outsb
mov
inc
outsb
stc
pop
inc
in
jae
test
jp
push
ret
cmp
setns
adc
decl
decb
fcompl
pop
add
stos
adc
and
cltd
out
mov
std
dec
in
cmpsb
cltd
fisttpl
xchg
sub
inc
aam
and
mov
lahf
data16
hlt
jno
lds
rclb
cmp
aaa
je
leave
push
pushl
jmp
xchg
xchg
bound
out
enter
sti
mov
jae
mov
popf
ret
and
ljmp
adc
fnstenv
lahf
popa
dec
rolb
inc
mov
enter
mov
jb
lret
cli
mov
lcall
mov
or
inc
lds
call
xlat
ror
jnp
xor
fistl
dec
add
push
subl
js
sahf
pop
nop
adc
outsl
ljmp
mov
mov
jmp
push
aad
call
cmpsl
js
andl
jg
xlat
xchg
data16
in
jne
in
ja
js
lret
cli
jg
int3
ret
mov
jecxz
std
xchg
xchg
imul
dec
mov
jmp
cmp
xchg
inc
mov
movsl
fwait
out
stos
fsubrs
popf
mov
mov
push
sub
loope
push
pushl
clc
mov
in
shrl
pusha
icebp
idivb
loop
shlb
cmp
loop,pn
fdivr
cwtl
mov
jg
adcb
nop
sti
mov
jnp
jmp
ja
call
enter
movsb
hlt
ljmp
fistps
adc
stos
into
insl
add
mov
arpl
pop
xchg
jg
loop
dec
pop
xor
mov
aas
jae
movsl
lret
ja
icebp
fwait
sti
aaa
pop
sti
ljmp
xchg
pop
nop
jae
jns
lret
and
or
xlat
mov
loop
ljmp
jg
gs
or
fistps
lahf
outsb
test
lret
and
adc
cld
shll
int3
mov
cmpsb
push
dec
notb
xchg
sbb
imul
mov
ret
sub
call
leave
int
push
call
inc
or
hlt
out
mov
xor
cli
ja
push
mov
rcr
xorb
aas
adc
into
clc
enter
xchg
jno
dec
or
add
sarb
call
lds
outsl
sahf
and
xor
mov
push
jo
ss
mov
or
jns
jg
call
mov
mov
pop
rcrl
daa
stos
leave
test
jmp
lcall
rclb
push
mov
sbb
push
mov
lcall
call
adc
mov
cmc
testb
adc
cltd
sbb
xchg
jmp
in
push
jg
and
inc
fisttpl
in
fcoml
adc
lcall
pushf
test
out
adc
xchg
shlb
mov
decl
xchg
push
icebp
xchg
mov
std
aad
dec
vmovaps
in
xchg
xor
outsb
add
xchg
incl
lcall
or
mov
pop
dec
mov
and
dec
add
icebp
inc
popa
stos
push
mov
mov
idivb
int3
xchg
mov
repz
pusha
push
lock
xor
push
jl
loopne
cmp
jg
ljmp
and
inc
mov
sub
inc
xchg
and
sbb
fdivr
jg
cmp
sar
or
enter
xchg
jle
out
jno
pop
int3
arpl
push
decl
popa
mov
addb
inc
mov
jg
jmp
jae
ret
add
decl
sbb
stos
dec
enter
mov
fidivrl
iret
shl
jp
mov
sub
adc
in
xor
pop
popa
mov
aaa
insb
repz
adc
dec
scas
xor
or
jl
jns
pop
mov
or
xor
cmp
jb
add
cld
hlt
cmp
sub
repnz
adcb
into
sub
and
jmp
push
mov
add
fcmovbe
insb
pop
jmp
test
push
mov
jmp
ficomps
cli
fstpt
jg
pushl
ja
cmp
jmp
adc
mov
or
mov
mov
decl
mov
dec
in
inc
inc
pop
in
add
cmpsb
jmp
gs
icebp
push
clc
dec
cmp
inc
mov
mov
enter
ja
sbb
dec
imul
mov
aam
pop
xor
push
fucomp
sbb
int
das
das
cmc
cli
aam
pop
fbstp
ljmp
ret
enter
cmp
cmp
icebp
mov
in
inc
movsl
cmpsl
lcall
dec
xor
push
pop
cmp
lcall
mov
sti
sub
incl
lahf
and
xor
push
sub
int3
jge
lret
cmp
jmp
lret
lods
xor
je
cmp
push
mov
xchg
lahf
cld
out
ret
scas
cmp
call
ret
mov
fwait
stos
sbb
xchg
cmpb
test
sbb
sub
lcall
sbb
xchg
pop
mov
scas
test
adc
je
scas
mov
mov
jl
fs
fsubp
sbb
movsb
and
fwait
lods
imul
mov
push
dec
fs
inc
imul
adc
aas
inc
adcb
or
inc
jge
cmp
ljmp
call
fisttps
ficoml
js
test
jne
mov
jp
jg
jbe
xor
repz
mov
lret
adc
lea
or
mov
lock
ljmp
cli
inc
and
imul
jb
lret
mov
push
inc
push
dec
movsl
into
and
jmp
push
scas
ja
pop
sti
cwtl
cmp
pusha
pushf
inc
mov
clc
ljmp
js
stos
f2xm1
cmp
lds
and
or
repnz
mov
lock
call
aam
scas
aad
int
fwait
inc
test
cmpsb
into
sbb
jmp
pop
addl
or
jp
movsl
movsb
xchg
cmp
pop
sbb
xchg
fmuls
mov
cmp
or
aas
cmc
shl
push
ljmp
shrb
in
xlat
sub
pop
jg
push
jb,pn
push
cmp
inc
jno
xchg
mov
sub
mov
adc
adc
mov
fcmovnb
xor
mov
mov
mov
dec
jge
ror
mov
lods
push
clc
mov
jo
fstp
pop
ljmp
loop
decl
out
pop
jo
jo
jl
scas
inc
cmp
lret
into
cmp
pushl
xor
enter
cs
movsb
inc
adc
ds
aad
es
sbb
call
mov
repz
or
outsb
mov
rol
fistps
ret
rol
decl
sub
jmp
test
jmp
push
int
data16
sar
mov
out
xor
cmc
in
ljmp
mov
mov
mov
out
shlb
sub
test
cmp
ljmp
jo
cmp
adc
lods
loopne
xchg
rolb
pushl
repz
aam
mov
mov
ffree
cmc
scas
mov
xchg
cmp
sbb
mov
xor
arpl
popf
inc
fldl
xchg
sub
jae
and
je
jle
and
jmp
push
lcall
xor
andb
lea
bound
pop
jg
ljmp
inc
aas
xchg
sub
fidivrl
repz
add
or
pushl
add
add
rorl
push
mov
jmp
cld
icebp
jge
scas
and
pop
dec
nop
clc
pop
mov
push
mov
jg
cltd
fidivrs
sub
xchg
cltd
push
ljmp
fimuls
and
or
push
bound
incl
cmp
das
mov
xchg
out
add
xor
xor
lcall
rclb
xor
cmc
and
cmp
xchg
testl
call
push
lock
add
decl
xchg
or
cmp
mov
add
jle
cwtl
lods
ret
jmp
divb
or
mov
lahf
inc
fsubrl
insl
mov
push
inc
fucom
inc
fcompl
mov
pop
and
jl
ljmp
dec
cmp
icebp
and
cmp
int3
scas
mov
clc
ljmp
in
mov
shrl
sub
cli
lods
bnd
mov
std
jg
jg
mov
test
inc
daa
addl
sbb
mov
aaa
or
pushf
cmp
cmp
mov
repnz
pop
pop
adc
dec
je
je
or
fimull
jp
cmp
adc
mov
push
rorl
dec
pop
sub
test
ljmp
mov
xlat
xchg
rolb
cmp
lcall
daa
lods
es
add
jns
lahf
leave
mov
cmp
and
add
loope
dec
fmuls
or
idivb
out
xor
in
jg
leave
into
xchg
jmp
fwait
or
pop
xlat
ljmp
in
mov
sbb
or
fisubl
ret
xor
pushl
cmp
mov
jg
sbb
xor
je
ljmp
pushl
popa
xor
in
outsb
lods
je
adc
outsb
push
mov
das
push
stc
test
sbb
mov
sbb
incl
jecxz
xchg
aas
mov
add
adc
inc
mov
es
pop
lds
std
jmp
ret
sub
adc
sbb
movsb
adcb
ljmp
mov
cmp
sub
sub
jae
insl
js
add
subb
rolb
enter
call
jecxz
orl
sbb
mov
jo
insl
out
adc
insb
add
mov
aam
xchg
addr16
jb
pop
sbbb
dec
lea
call
inc
fsubl
xchg
mov
sub
mov
inc
dec
sarb
jl
inc
call
mov
and
add
outsl
std
icebp
stos
jne
lcall
ljmp
lcall
lret
jecxz
xchg
fldcw
fnstsw
ret
gs
scas
push
push
stos
lods
cmp
les
incl
mov
push
popa
int
out
pop
sbb
dec
push
mov
push
mov
xchg
pop
mov
in
leave
fstpl
push
cli
fidivl
push
subl
lea
or
incl
xchg
push
out
xchg
pop
int3
aas
out
jae
jno
aaa
cmp
sub
push
repnz
lock
lcall
or
call
dec
xchg
jno
xchg
insl
or
icebp
sbb
mov
lcall
inc
faddp
int3
insl
adc
sub
stc
jmp
pop
popf
push
mov
xchg
adc
clc
das
mov
mov
icebp
push
adc
imul
or
rorb
xor
jg
fs
cs
push
or
clc
dec
jle
lcall
insb
hlt
adc
stos
std
add
outsl
xor
xor
movsl
out
icebp
aas
push
std
pushl
xor
je
push
or
icebp
mov
icebp
pop
push
lods
push
jne
lret
incl
xchg
stos
lret
and
xor
pusha
push
and
decl
sti
je
or
mov
in
and
orb
leave
mov
decl
adc
pusha
xchg
xchg
mov
ss
mov
mov
pop
sub
test
mov
and
fildl
test
rcrl
inc
gs
leave
in
shlb
cmc
in
inc
mov
fisttpll
xchg
fsubrl
inc
and
adc
push
push
mov
jecxz
mov
rclb
das
repz
subl
repz
jmp
fucom
call
mov
inc
jnp
push
mov
js
mov
inc
add
or
pushl
sbb
fucomp
cmp
jecxz
cld
jns
sub
inc
cmp
popf
jbe
aaa
std
incl
lock
xor
push
pinsrw
push
mov
jge
inc
into
sub
cmc
push
lods
xor
bound
cmc
arpl
inc
push
rorb
xor
mov
call
mov
inc
lea
sbb
adc
adc
in
dec
int
sub
sbb
aad
mov
pop
jmp
sbb
cmp
jle
lods
mov
inc
cmp
xchg
mov
pop
push
pop
jl
push
mov
incl
lock
jmp
enter
inc
xchg
mov
lods
scas
faddp
or
jg
test
mov
push
fdivrp
incl
xor
push
lock
inc
push
lret
out
testl
decl
push
inc
ljmp
fsubrl
stc
mov
dec
insl
adc
jecxz
lea
mov
jge
xchg
mov
lock
decl
arpl
out
add
xchg
fmuls
jmp
jno
rcrl
dec
cmpsb
push
mov
stos
call
push
pusha
cltd
push
bound
sbb
or
enter
popf
and
scas
data16
lcall
adc
xchg
ret
jmp
daa
push
and
dec
sub
and
pop
mov
ljmp
inc
push
lcall
cli
enter
cmpsb
mov
fcomip
pop
push
jl
push
imul
sbb
sub
xor
outsb
das
pop
push
and
incl
dec
outsb
cmp
js
mull
in
fstps
sbb
ror
xchg
mov
decl
rolb
pusha
fbld
lahf
lods
adc
test
push
aad
mov
lcall
jbe
ss
int3
cwtl
mov
leave
cmp
inc
jnp
lods
dec
mov
ljmp
popf
pushf
imul
and
jle
and
movsl
cmp
jle
mov
clc
mov
cmp
adc
mov
fbld
or
stos
sbb
jle
daa
orb
mov
adc
fisubrs
ffree
decl
aaa
push
xor
pop
cli
inc
ja
icebp
sbb
xchg
pop
push
ljmp
fstpl
jo
and
add
push
repnz
out
mov
mov
push
add
sbb
mov
sub
pop
loopne
mov
jg
mov
pop
mov
test
lods
sub
dec
add
movsb
int
pop
add
push
aam
into
jmp
nop
aam
and
bound
jge
out
pushl
iret
rorb
cltd
inc
push
adc
pusha
cwtl
fwait
out
pop
push
cmp
add
in
add
jg
scas
test
mov
outsb
into
popw
fcomip
jmp
scas
cmpxchg
sub
cmpsb
hlt
xor
xlat
test
jp
inc
mov
mov
push
mov
xor
pop
imul
jae
jg
push
into
sub
or
clc
testb
fisubl
push
out
dec
mov
movsb
push
sbb
and
movsb
test
fisttps
mov
and
jmp
rcl
push
int3
dec
stos
xchg
out
jmp
inc
cwtl
call
loopne
push
push
out
in
mov
xor
movsb
xor
int3
jg
ds
xor
std
xor
jmp
leave
add
les
sbb
lret
cmpl
in
inc
int3
fmuls
lcall
mov
xor
mov
cmp
cmp
out
pop
bound
mov
ljmp
sbb
xor
and
leave
rcll
sahf
mov
pop
jo
or
leave
dec
out
bound
loop
mov
dec
add
das
jb
ja
aad
cs
sbb
ljmp
jle
mov
mov
out
mov
out
les
std
insb
js
sub
cmp
dec
incl
jmp
hlt
in
loop
pop
std
adc
sbb
cmp
pushl
lcall
fnsave
es
or
xor
and
ljmp
sbb
mov
xor
dec
mov
cmp
shll
js
xlat
pop
pop
xor
fwait
lahf
push
ljmp
xlat
or
aad
push
xchg
insl
enter
pop
pop
jl
loope
ljmp
xchg
lods
dec
faddl
nop
mov
paddusw
fldz
push
ja
pop
push
fwait
or
pop
adc
push
inc
and
pop
int
clc
add
xchg
test
cmp
shrl
cmp
mov
clc
adcb
mov
cmpsb
pop
punpckhbw
pushl
pop
mov
or
hlt
sbb
filds
inc
ret
shlb
outsl
jl
and
movsl
jbe
cmp
mov
inc
push
xlat
pop
movsb
mov
icebp
ret
add
add
add
call
cmp
outsb
lcall
pop
fnstcw
xchg
push
das
repnz
cmpsb
push
aad
inc
xchg
cs
xchg
mov
clc
jmp
les
jb
cs
int3
pusha
lcall
movsb
mov
pushl
and
add
add
mov
mov
icebp
js
pop
sbb
sahf
inc
in
mov
sub
or
ds
loopne
call
movsb
clc
stos
dec
sub
or
mov
call
insb
imul
lcall
jecxz
xor
es
xchg
pop
mov
inc
popa
mov
sub
add
decl
dec
outsl
add
sahf
out
clc
mov
pop
dec
or
adcl
scas
pop
pop
or
decl
and
push
sahf
andb
popa
ret
sbb
pop
mov
xchg
mov
fdivr
xchg
daa
mov
xor
inc
loope
xor
jbe
incl
cli
add
or
movsb
sub
cli
imul
sbb
stc
and
pmaxub
pop
call
aam
ljmp
xchg
sbb
insb
rorl
imul
lods
test
cmp
enter
dec
xlat
add
imul
decl
in
cwtl
out
shl
movsb
lods
into
or
loope
jbe
and
push
mov
fstl
sbb
call
clc
lcall
arpl
insb
mov
jecxz
cltd
or
inc
jnp
call
push
out
lcall
shlb
stos
out
sbb
jmp
and
stc
dec
aad
fwait
mov
nop
lcall
pop
cmp
test
mov
movb
rcll
mov
scas
mov
and
fs
jbe
repnz
cmc
into
and
jmp
cli
mov
dec
out
cld
std
ss
ds
out
push
stos
dec
push
cs
add
fdivrs
pop
add
jne
test
push
cltd
jp
lods
stos
cmp
xchg
repnz
out
add
dec
ljmp
mov
test
inc
pop
pushl
mov
mov
imul
mov
gs
bound
outsb
icebp
outsb
mov
ret
inc
push
jo
push
ljmp
test
ror
mov
pop
cmp
pop
add
mov
pop
rcll
sub
add
push
notl
iret
mov
xchg
scas
jg
fldenv
cmp
scas
roll
sub
xor
pushl
sarb
cmp
cmp
cmp
pop
mov
add
mov
cwtl
adc
pushl
test
push
pop
xchg
sarb
pop
outsb
pusha
shlb
das
call
mov
push
popa
pop
test
repz
test
jle
xor
in
xchg
or
decl
fcmovne
mov
dec
dec
pop
jecxz
pushf
popf
movsl
cmp
push
ror
dec
mov
push
mov
push
xchg
and
inc
mov
enter
fldenv
dec
and
mov
sbb
ljmp
test
add
out
lahf
push
adc
adc
hlt
jl
mov
pop
out
pushl
push
push
inc
fstp
loope
push
add
add
arpl
add
jns
decl
fisttpll
loopne
xor
das
pusha
mov
dec
fwait
sub
ljmp
sub
fisttpl
nop
jmp
sbb
push
mov
or
fdivr
mov
inc
dec
mov
shlb
add
mov
or
push
and
pushl
and
pushf
and
pop
xchg
mov
pop
sbb
inc
mov
cmpsb
out
pop
push
or
dec
pop
cmpsl
or
incl
xlat
ljmp
mov
sbb
ljmp
call
lret
mov
pop
das
lods
push
call
cmp
push
jg
in
push
pop
push
pop
mov
aam
pop
pop
cld
or
sahf
jno
xor
xchg
fwait
pop
mov
int
dec
adc
call
leave
add
ss
sbb
push
movsl
cmp
les
lds
scas
mov
xchg
hlt
xchg
decl
mov
mov
push
lea
sub
lahf
sti
inc
pop
ja
cmp
daa
mov
dec
popa
ljmp
enter
out
fmull
sub
enter
rolb
adc
xor
add
ljmp
xchg
push
jp
clc
roll
sbb
je
dec
push
push
call
jl
mov
add
cmpsb
xor
rcll
out
mov
push
or
sbb
in
xor
clc
jnp
sbb
xchg
subb
movsl
int3
fistps
push
jl
aaa
push
test
fsin
ss
mov
jle
loop
lahf
xchg
mov
movsb
jmp
jecxz
arpl
mov
pop
jg
incl
xor
lods
mov
aam
lcall
das
adc
push
mov
in
dec
inc
leave
sbb
dec
aaa
rorl
std
jg
pop
adc
rcr
ljmp
push
mov
movsl
sti
aad
sub
pop
std
sbb
and
out
jne
jg
dec
xchg
rcrl
ljmp
aas
sbb
or
lret
fwait
inc
jo
out
lcall
xchg
adc
iret
push
nop
cmc
sbb
insb
cmpsl
mov
mov
fsts
lret
pop
dec
out
mov
lcall
mov
mov
stos
enter
xor
iret
sbb
es
decl
outsb
and
cmpsb
ds
lock
decb
call
aas
lcall
pop
cld
lcall
lret
pop
dec
int
pop
js
out
cmp
imul
fildl
xor
loop
pop
clc
shrb
imul
jg
dec
pop
or
repz
dec
rcrb
ljmp
mov
mov
sbb
test
imul
sbbb
inc
sarl
lret
scas
or
or
cmp
into
inc
inc
add
test
xchg
int
mov
mov
sub
out
fs
shrl
fldt
fdiv
lods
mov
cwtl
push
nop
inc
lods
jge
xchg
call
mull
stos
xlat
xchg
sbb
cmpsl
cmpsl
into
leave
inc
xor
insb
sub
mov
repz
pop
mov
inc
test
adc
insb
jno
aam
mov
xchg
mov
pop
mov
test
outsb
xchg
cmp
nop
push
test
fucompp
fstpl
cmpsb
add
js
cmp
test
cmp
into
mov
fucom
rclb
int
decl
adc
mov
push
arpl
aad
inc
xchg
stc
xor
push
jmp
mov
fdivr
ljmp
pushf
mov
mov
rcrl
lret
sub
jne,pt
scas
fstpl
ljmp
jmp
push
adc
or
cmp
mov
repnz
mov
rol
xor
shlb
mov
push
orl
cli
jg
test
cmpsb
ja
pop
aam
mov
bnd
sbb
loop
in
stc
stc
out
mov
push
cmp
push
mov
cmp
hlt
call
lcall
add
and
xchg
and
or
call
sbb
mov
cs
and
mov
ja
cmpb
mov
jecxz
test
jmp
cmpsl
aaa
mov
sub
aam
adc
pushl
arpl
mov
das
sbb
ljmp
xchg
dec
stos
xchg
lods
inc
ds
jg
arpl
push
fistpll
mov
addb
aas
fwait
enter
fsubr
in
inc
test
xor
jmp
stos
push
pop
mov
or
sti
das
pop
mov
mov
xlat
gs
push
mov
sub
stc
aad
cmp
fidivs
lcall
iret
movsb
ljmp
adc
mov
mov
shlb
sti
int
sub
jmp
out
push
add
add
xor
adc
and
pushl
xchg
fsubrs
fimull
std
or
and
sub
mov
das
sar
push
mov
int
xchg
jo
aas
out
orl
inc
cmp
int
mov
lods
fldt
imul
jl
and
inc
mov
jecxz
fs
call
add
xor
mov
lods
sbb
imul
clc
mov
push
call
xor
lret
and
repnz
decl
dec
sbb
adc
add
sbb
loop
mov
ja
ja
pusha
jmp
sub
mov
jmp
sub
loop
jg
mov
repnz
inc
js
inc
fwait
cmc
pop
orl
incl
sahf
cld
lret
sbb
sbb
loopne
inc
nop
dec
repnz
cmp
ljmp
xchg
push
adc
push
inc
ljmp
xchg
outsb
sub
int3
mov
jmp
adc
mov
mov
pushf
push
mov
hlt
movsl
imul
pop
xchg
jle
int3
sbb
scas
xchg
and
ds
jge
lret
aad
lret
decl
test
mov
mov
and
sarl
mov
push
clc
ret
rcrb
incl
clc
lds
dec
push
rcrl
repz
fisttpl
lds
mov
stos
into
push
add
mov
push
ljmp
push
fists
popa
mov
icebp
jo
scas
sarl
imul
stc
cmp
jl
in
push
fs
xchg
cs
iret
stos
scas
sahf
sahf
lcall
popa
loop
mov
dec
je
jle
push
adc
test
adc
fstl
test
call
loopne
mov
movb
frstor
dec
test
sahf
popf
mov
sbb
aaa
push
xor
ja
cmp
cmp
cmp
inc
call
jl
xchg
repz
inc
pop
cmpsb
inc
sbb
or
sub
or
enter
dec
in
sub
ja
cld
orb
push
pop
stos
lahf
xchg
icebp
enter
sbb
push
add
outsl
cli
out
push
jmp
cltd
lret
push
xor
ret
repz
mov
inc
cld
sub
sti
jo
out
aas
cmp
pop
jno
stos
scas
test
jecxz
jmp
test
jecxz
pusha
out
clc
movsb
jno
pop
adc
jp
dec
cwtl
sub
in
aas
lcall
call
fmul
loop
add
nop
inc
xor
dec
add
js
cs
jmp
xchg
imul
outsl
push
cmp
aas
push
push
mov
and
call
lret
push
adc
incl
jmp
les
imul
mov
or
ljmp
nop
hlt
jmp
dec
ret
in
xchg
jb
add
adc
and
std
add
lret
sarb
mov
outsb
fdivp
inc
aas
loope
adc
push
fsubrs
scas
mov
lcall
shrl
adc
push
cmpb
jle
fadds
pop
std
lret
fnsave
jl
clc
js
inc
pop
std
jmp
test
cli
pop
aad
data16
cmp
das
cli
lcall
es
xchg
add
scas
loop
adc
aam
lahf
movsl
ret
in
gs
incl
movsb
testl
cs
add
xor
lods
xchg
rcl
jmp
fdivrl
in
pushf
mov
loop
rclb
daa
pop
and
pusha
push
pop
std
cmp
popa
mov
jns
sbb
je
cld
subb
mov
sub
mov
cmpsb
fdivr
std
xchg
lods
push
sbb
mov
jmp
repnz
cmp
shr
andl
scas
or
incl
repnz
xor
das
loopne
fs
mov
mov
cmp
mov
jmp
xchg
cmp
fstl
xorl
cli
jg
xor
mov
and
or
iret
fildll
push
test
xchg
andl
xchg
inc
test
scas
mov
adc
pop
sbb
outsl
call
pop
mov
adcb
cwtl
fnstcw
and
daa
push
clc
enter
orl
lcall
dec
inc
aaa
inc
ljmp
xchg
int
inc
pop
iret
xchg
jo
jl
cmp
push
add
mov
inc
je
cs
ja
repnz
adc
inc
push
movsl
ljmp
dec
loope
aaa
jl
add
fcmovnb
fmuls
dec
mov
mov
bound
push
mov
sti
rcl
stos
add
add
repz
popf
das
cmp
xchg
jl
aad
dec
jnp
aas
mov
jbe
cmp
cmp
dec
stos
xor
mov
out
cli
ljmp
loop
xchg
and
add
inc
xor
sbb
adc
mov
dec
jns
sub
incl
jecxz
sbb
add
xchg
and
idiv
push
push
jl
pop
mov
sar
xchg
jns
incl
popa
movl
outsl
out
or
je
nop
daa
dec
ficompl
cli
jg
ret
mov
sbbl
adcl
or
and
jmp
inc
and
add
mul
push
or
sbb
nop
cmc
pushf
sbb
int3
mov
ret
or
pop
stc
ficoms
pop
shrl
sbb
mov
mov
mov
push
and
jb
inc
pop
shll
inc
lods
sub
push
pop
inc
jg
inc
nop
cli
sub
out
cmp
pushl
fwait
pop
pop
mov
jns
scas
jp
pop
ror
pop
jb
mov
rol
push
repz
cmp
mov
xor
add
int
fs
sbb
mov
xchg
mov
or
fsubrp
and
mov
imull
pop
cmc
stc
dec
cltd
and
in
cmp
jl
dec
add
sub
cmp
fwait
mov
mov
loopne
outsl
xchg
ret
mov
adc
call
dec
into
int3
pop
ficoml
frstor
pop
outsl
ljmp
push
insl
fimuls
jl
mov
imul
in
mov
fdivl
in
std
sbb
push
call
loopne
xor
int
int3
test
adc
jae
lods
dec
jp
mov
int3
mov
shl
enter
xorl
int
fidivrl
mov
and
leave
jg
cltd
sub
insb
out
mov
cmc
inc
or
loop
fadds
mov
ljmp
mov
cmp
mov
mov
inc
es
push
lcall
fnstenv
stos
out
xchg
xchg
sbb
in
pop
mov
ljmp
mov
push
inc
fwait
leave
dec
pushf
mov
jle
lods
fadds
and
lcall
push
adc
in
cmpsb
imul
rcrl
insb
xchg
ret
cmp
cmp
fsts
fistl
std
xchg
sahf
cmp
adc
mov
aam
dec
nop
stos
mov
lcall
ss
stos
and
xor
lods
out
insb
ja
fmuls
mov
stos
into
aaa
add
jnp
aaa
cmp
ljmp
xchg
or
cltd
sub
sub
out
pushl
fidivrl
daa
jae
xor
dec
inc
test
jp
dec
xchg
xchg
lods
popa
ret
adc
lcall
mov
js
or
bound
inc
test
addr16
cmc
loopne
decl
imul
lahf
cmp
add
inc
pop
mov
int3
and
cmp
xchg
ss
lcall
popf
sub
fistpll
and
mov
inc
mov
pop
inc
sub
jo
mov
into
jae
out
cmpsl
pop
cli
stos
in
add
ljmp
in
push
dec
pop
imul
jle
jbe
mov
std
pusha
mov
incl
cmp
or
nop
inc
js
insl
or
inc
cmp
shl
ret
pushf
sub
pushl
dec
xchg
pop
sti
es
shlb
xor
enter
jecxz
outsb
sbb
lcall
mov
xchg
call
jle
mov
movsb
cmp
inc
push
pop
jg
decl
das
test
jbe
add
push
push
shrb
push
movsb
sbb
int3
mov
sar
push
xchg
push
jns
lret
pop
mov
pop
or
push
jg
lret
leave
faddp
pop
das
xchg
in
out
adc
mov
iret
xchg
decl
mov
fidivrl
mov
fmul
jp
inc
ficoml
and
xor
jmp
cli
sbb
lods
jge
insb
aad
popf
icebp
xlat
and
inc
jo
loop
mov
lock
xchg
insl
sub
repz
fucomp
loop
aas
mov
dec
adc
outsb
adc
ljmp
jle
and
mov
jns
sbb
cs
pop
imul
jbe
mov
iret
iret
and
aad
cmp
ss
push
int
mov
in
dec
push
adc
mov
inc
push
cmp
mov
inc
jge
jl
lahf
incl
cmp
xchg
repnz
xor
jb
push
inc
push
jmp
lcall
mov
xor
mov
in
loopne
test
sbb
jp
cwtl
lcall
insl
cmp
or
stos
push
loop
cltd
add
lea
dec
mov
call
push
iret
and
push
pop
lods
stc
add
rcrb
sbbb
sub
xadd
fwait
rcl
incl
push
int3
popf
push
fildll
sar
mov
hlt
pop
pop
aam
mov
pushf
mov
jg
insl
add
sub
xchg
test
add
jno
in
int3
adc
loopw
xor
mov
scas
imul
jl
push
clc
into
fstl
inc
cmpsl
sbb
es
xchg
or
push
adc
pushl
cltd
in
xchg
jae
adc
dec
fwait
jmp
sbb
fnstenv
and
fstpl
push
lds
dec
nop
cmp
cmc
sub
or
mov
pop
xchg
pusha
fbstp
jge
call
push
cmp
cs
pop
shr
ret
popf
mov
cmp
xor
xor
loop
incl
dec
ja
sbb
lds
and
fsts
mov
repz
pusha
lcall
jno
incl
xchg
xlat
pushf
pop
pop
fisttps
fsubrl
sar
sbb
in
div
mov
mov
fdivrl
movb
inc
push
daa
jbe
xchg
fsubrs
pushf
push
mov
fs
incl
inc
addb
rolb
xor
cmp
mov
and
call
movsb
pop
imul
and
mov
loop
sub
stos
push
sbb
pushl
dec
outsb
mov
rolb
lcall
stc
es
pop
xchg
adc
lret
push
ljmp
xor
fdivl
mov
mov
je
stc
cld
adc
push
stos
int
dec
or
rolb
ljmp
sbb
std
in
iret
xor
mov
dec
jle
jbe
out
sub
aaa
cld
lcall
repnz
or
mov
repz
mov
andl
dec
stos
add
mov
hlt
pop
mov
jl
adc
pop
cs
enter
ficoms
lea
adc
outsl
adc
fisubl
pop
xchg
mov
inc
mov
div
mov
aad
xchg
inc
sarl
cmp
call
cmp
jae
movsl
mov
add
test
aas
sub
add
jg
pop
or
mov
mov
outsl
mov
mov
push
dec
mov
pop
fdivs
scas
adc
xchg
xchg
pop
stc
inc
cmp
outsl
pop
jmp
mov
xor
out
sub
xorl
mov
notl
add
mov
les
dec
loope
push
stos
movb
xor
int3
cmp
mov
into
mov
mov
insb
mov
mov
or
push
push
adc
pushl
push
cmpsl
add
and
notl
fstp
sbb
mov
mov
call
push
adc
jnp
xor
rolb
jne
inc
mov
je
adc
jae
stc
call
push
pop
adcb
mul
and
fisttps
sub
xchg
mov
je
mov
incl
add
les
aas
clc
sub
pop
inc
stos
loop
dec
rclb
call
pop
cmp
sbb
fldcw
push
or
scas
xor
inc
scas
inc
xchg
insw
gs
mov
outsl
fisttps
test
sub
imul
push
mov
pushl
std
cmp
push
sub
push
lahf
pop
in
fdivrl
subl
dec
pushl
push
xor
mov
pop
imul
loope
ljmp
cltd
cmpsl
mov
fisubl
stc
push
sub
push
sbb
push
mov
arpl
pop
out
xlat
mov
push
xor
push
jge
notb
inc
andl
shl
xchg
add
xchg
lods
call
mov
or
dec
adcl
imul
inc
jmp
adc
stos
push
ficomps
cli
arpl
pop
or
sub
leave
push
push
movsb
jge
ljmp
aad
and
pop
dec
loope
adc
loope
jg
and
mov
aas
lds
fcomip
mov
push
out
pop
das
dec
add
xchg
enter
scas
clc
pushl
mov
js
repz
imul
mov
lcall
inc
out
mov
jmp
push
mov
and
hlt
jp
xchg
push
pop
sub
cmp
fwait
dec
in
je
and
daa
xchg
cs
sar
jecxz
pusha
mov
jg
cmp
adc
in
andb
cmp
icebp
test
sub
decl
lahf
cmpsb
stos
xchg
sub
aam
push
data16
shll
pop
inc
fadd
sbb
cs
outsb
sbb
xchg
int3
push
jmp
adc
mov
pop
imul
decl
and
mov
repz
ror
adc
sbb
jmp
out
sarb
pushl
in
js
or
pop
pop
sub
mov
fstl
jno
incl
les
pop
daa
and
les
fs
push
pusha
cs
inc
adc
pop
pop
imul
int3
dec
sbb
incl
mov
push
movsl
pop
mov
push
popf
aad
xchg
mov
je
adc
mov
rcrb
inc
cmp
mov
jecxz
pop
cli
scas
adc
jo
sti
sbb
mov
incl
push
jp
mov
insb
mov
jle
push
mov
sub
aad
cmp
dec
pushl
jne
hlt
adc
cmpsb
or
and
sub
stc
in
and
mov
ficoml
lret
xlat
xor
inc
jmp
call
mov
sbb
inc
out
push
sub
pop
push
push
jg
cmp
clc
daa
mov
xchg
and
and
inc
cmp
inc
mov
incl
mov
repz
mov
mov
push
and
cmc
push
sub
icebp
mov
int3
std
popa
push
inc
lea
pop
dec
xchg
xchg
xchg
push
inc
bswap
fidivs
cmp
icebp
mov
sub
arpl
stos
aam
ljmp
movsb
jmp
jmp
xlat
divl
xchg
adc
loop
inc
mov
inc
push
mov
in
inc
mov
test
adc
inc
lods
mov
pop
aad
cmp
aas
cmp
mov
xchg
push
dec
push
pop
test
push
shll
outsb
inc
loope
pop
mov
in
mov
mov
dec
mov
cmp
orb
je
and
push
into
arpl
idiv
sub
inc
pop
or
push
imul
and
xchg
sar
mov
cmp
cmpsl
mov
pushf
dec
pop
mov
cmp
mov
xor
cli
mov
cli
lcall
lret
flds
mov
add
outsl
fcomps
push
ljmp
insb
lahf
cmp
scas
mov
jmp
add
push
inc
add
jmp
adcb
dec
pop
cmp
mov
mov
lret
pop
roll
cltd
mov
gs
mov
xchg
rcrb
mov
stc
into
mov
scas
ljmp
jb
inc
and
xchg
into
jp
and
mov
push
jecxz
jg
stos
inc
mov
mov
cwtl
pop
pop
movsl
rorb
xor
or
cmp
and
mov
fdivl
xchg
lcall
int3
popa
es
xchg
scas
ljmp
ljmp
cmp
decl
xor
addr16
mov
xchg
cli
in
cltd
lods
loop
jg
push
cmc
ja
je
enter
cmc
idivb
nop
cs
cmp
adc
pop
pop
incl
dec
cmpsl
or
adc
inc
lret
insb
js
or
test
push
pop
mov
cwtl
fistps
lcall
cmp
sbb
dec
lret
outsl
cmp
jns
idiv
fprem
incl
sarl
sti
inc
mov
rcrb
add
ljmp
dec
mov
jge
or
je
mov
fildl
jbe
hlt
loopne
xlat
rcl
loopne
or
ret
pop
inc
xlat
mov
shrl
ds
jmp
cmp
incl
pusha
mov
push
jg
cmpsb
lods
stos
into
jo
in
xor
jg
fcomp
lret
cld
sbb
push
ljmp
lock
cmp
lahf
pop
call
shlb
inc
fidivrs
ss
mov
pop
ret
cmpsl
and
sti
fldt
movsb
jmp
ja
lcall
mov
or
add
lcall
aas
scas
push
loope
jmp
stos
mov
jge
push
stos
xchg
rorl
fisubrl
add
pop
imul
je
mov
scas
test
clc
popf
push
or
or
incl
ffree
add
and
add
cwtl
mov
js
aad
lret
push
cli
xchg
push
lahf
pop
in
mov
sahf
ljmp
ficoml
stos
lcall
in
popa
daa
sahf
es
fwait
pop
sar
pushl
mov
dec
arpl
jge
mov
mov
mov
push
clc
aaa
sbb
movb
sar
ljmp
mov
por
popa
pop
mull
data16
out
frstor
add
mov
lcall
sarl
pop
push
mov
xchg
mov
in
out
sub
jmp
data16
cmpsb
cmpsl
sbb
rcll
cmpsl
ds
jg
int
push
pushf
aaa
adc
adc
mov
lret
rcr
mov
pop
inc
cmp
lcall
lahf
sbb
aaa
xchg
cmp
mov
cmc
push
leave
icebp
or
ljmp
mov
jns
sbb
adc
mov
outsb
mul
mov
add
decl
inc
lcall
mov
idivl
call
cwtl
xor
ljmp
sub
fadds
xchg
or
adc
mov
decl
xchg
shll
lcall
push
xchg
cld
mov
or
aam
das
or
fcomip
out
mov
enter
imul
or
mov
in
lcall
cmpb
punpckhwd
std
rorb
sbb
inc
add
sub
lcall
dec
mov
popl
xor
negl
adc
jmp
push
call
inc
and
cmpsb
data16
pop
mov
mov
push
lods
dec
jo
pop
in
cmp
mov
pop
push
sbb
sbb
in
test
call
ja
mov
adc
shll
mov
int3
je,pn
adc
jg
in
mov
cmp
shrl
cli
lcall
dec
pop
lock
leave
sbb
jecxz
cmp
push
sbb
pop
rcll
faddp
xor
out
in
fs
or
popa
sbb
test
notb
popa
or
ja
ret
pop
xchg
call
jl
mov
lods
sahf
fnclex
imul
fcoml
repnz
fiaddl
jp
aas
popf
lcall
jo
outsl
call
scas
add
loopne
notb
xchg
shlb
clc
mov
fcomip
shr
jge
mov
cmp
fcompl
mov
pop
shl
popa
or
js
jg
mov
shll
insl
xchg
pop
mov
adc
jge
or
or
call
test
imul
roll
mul
push
int3
mov
fdivrp
jmp
xchg
jnp
out
sub
mov
mov
pop
pop
mov
jo
xor
xlat
aam
std
cwtl
jecxz
add
mov
mov
xor
sub
loope
test
ljmp
push
adc
dec
fxch
aam
daa
inc
pop
or
inc
cwtl
cmc
add
imul
push
movsl
orl
dec
mov
scas
insb
fcmovbe
out
pop
or
scas
fwait
pop
push
inc
dec
dec
sub
mov
and
push
mov
or
in
mov
iret
sub
mov
fidivrs
push
mov
mov
lea
fnstenv
jbe
cmc
pushl
gs
fimull
add
sbb
xchg
xor
xor
decl
pushf
icebp
scas
dec
mov
jb
insl
jg
ja
icebp
jb
cmp
es
addr16
pop
mov
mov
jmp
je
std
mov
aaa
daa
loop
xchg
movsb
jecxz
orl
xor
icebp
xor
inc
orps
scas
out
fsts
outsb
sbb
add
lahf
xor
jl
cmpsl
or
fchs
test
int
fmuls
imul
jmp
add
mov
mov
fwait
idivl
cmc
nop
clc
out
aas
fisubrs
neg
in
incl
test
pusha
cmpsl
inc
pop
imul
jne
xor
scas
mov
dec
pop
sahf
lods
dec
pushl
frstor
add
pop
enter
lret
jnp
dec
sub
or
decl
cmpb
pcmpgtw
stc
add
sbb
repz
sub
dec
xchg
inc
lret
push
jmp
arpl
sub
or
mov
aas
mov
mov
xchg
repnz
jmp
push
mov
or
jae
lahf
nop
aam
add
lcall
loop
push
jae
dec
sti
lods
push
mov
pusha
shll
std
add
rcr
outsb
aam
inc
iret
pop
in
push
in
lock
decl
cmpsb
sbbb
jge
push
fwait
scas
sub
stos
jns
mov
cmp
jmp
pop
popf
and
pushf
daa
pop
out
sub
lea
scas
movsb
adc
adc
inc
mov
insb
pop
out
ljmp
pop
out
icebp
dec
jne
fimuls
fmull
cmp
mov
out
repz
xlat
jo
outsl
or
popf
mov
cmpb
rclb
loop
push
scas
xchg
ljmp
jecxz
loope
sbb
cli
outsb
popf
jge
mov
add
mov
sub
jmp
jl
daa
mov
mov
idivb
ds
out
jne
add
rol
jp
jmp
repnz
gs
cmp
subb
and
adc
lret
cmc
pop
aas
insb
je
pushf
scas
sub
mov
scas
clc
fstl
test
mov
or
out
rcl
push
jecxz
sbb
dec
mov
dec
gs
popf
ds
xor
and
fistpll
out
rcrb
flds
jnp
hlt
jne
fidivrs
mov
jmp
mov
adc
xchg
adc
fcmovnb
ds
jle
ljmp
mov
mov
jno
into
fwait
lods
lock
jg
dec
rclb
xchg
stc
push
outsb
jb
lret
mov
pop
xor
lcall
aam
push
stos
push
and
mov
ljmp
push
lahf
sbb
jp
js
pop
sub
aad
mov
cmpb
cmp
push
pop
or
pop
sub
loope
dec
or
cmpsb
dec
and
arpl
cld
pushl
mov
jl
jb
mov
call
jae
xor
jg
insl
ss
mov
push
jmp
cmc
movsb
lods
jnp
sub
dec
mov
pop
jge
mov
sub
sub
mov
imul
add
sbb
dec
lret
enter
or
popa
mov
pusha
inc
neg
fs
and
cmp
sub
fwait
incl
cld
movsb
rclb
push
pop
pmulhw
lock
xor
fldenv
dec
mov
aam
addr16
fs
sti
mov
inc
sahf
cmp
jg
sub
repz
sub
and
lcall
sbb
push
rorb
xor
in
jle
js
call
rorl
xchg
in
cmpsl
arpl
iret
or
subb
popa
pop
roll
lcall
mov
loopne
or
mov
aas
lret
mov
pop
lods
mov
jno
xchg
mov
in
jmp
out
cmp
daa
rcrb
xchg
push
insb
out
out
repnz
pop
pop
and
adc
dec
sbb
push
dec
frstor
daa
test
enter
add
sbb
xchg
and
jbe
xlat
cld
jmp
mov
insb
dec
pop
fsubrl
dec
not
inc
jo
fistl
fsubs
fcomps
gs
incl
mov
jmp
and
push
add
sahf
cs
out
movlps
jb
aad
dec
xchg
roll
xor
call
gs
adc
pop
sbb
sub
aad
jg
decl
xor
not
mov
inc
cmp
aaa
fsub
fsubr
movsl
push
popf
adc
mov
dec
ret
pop
iret
hlt
scas
mov
push
loopne
dec
data16
cmc
push
das
or
push
jl
adc
sub
fs
repnz
add
push
arpl
or
lcall
lret
ret
lea
js
inc
cmp
push
imul
xchg
sub
hlt
fadds
movsl
repz
sbb
push
pop
mov
pushl
cmpsb
xlat
or
icebp
jge
xchg
lret
mov
daa
mov
add
insl
outsl
pop
jle
movsb
or
jecxz
ljmp
pop
in
cltd
sbb
cmc
xchg
fistl
inc
dec
pop
loopne
xchg
dec
test
incl
push
test
fst
dec
fidivrl
aad
pop
fldt
mov
fsubr
fiaddl
lahf
std
insl
adc
rolb
into
or
lcall
pusha
aas
jecxz
xor
and
lods
pop
jl
divb
ljmp
or
xor
inc
push
jmp
js
scas
pop
negb
mov
les
xlat
and
decl
cmpsb
scas
roll
xchg
bound
lods
lcall
ss
and
mov
mov
push
scas
enter
mov
xor
mov
push
in
movsb
shlb
xor
push
dec
xchg
outsb
sahf
sub
or
sahf
sbb
test
inc
xchg
decl
movsb
std
fwait
lret
and
dec
push
mov
add
out
incl
push
push
addl
inc
test
push
andl
in
cmp
scas
shlb
push
xchg
or
adc
jp
xlat
add
and
mov
mov
cmp
and
call
mov
decl
ljmp
je
and
mov
testb
call
mov
jb
stc
push
cmp
cmp
int
loop
stos
jb
dec
xor
mov
and
jmp
xor
add
add
in
mov
adc
ffree
dec
sub
jg
xchg
or
loop
mov
inc
sahf
movsl
lock
mov
pop
scas
fucomp
shl
repz
cli
cmpb
mov
and
pop
jle
xchg
add
dec
sub
dec
test
in
cmpsb
and
lret
adc
pop
inc
mov
jmp
jg
xor
add
nop
mov
pushl
mov
adc
shlb
int3
test
sbb
mov
push
mov
popf
loopne
jmp
aam
cmp
add
leave
adcb
fdivr
lods
pop
xchg
clc
jnp
mov
sub
mov
mov
addl
push
inc
add
mov
pop
cmpsb
pop
and
and
incl
mov
cmpsb
ret
shl
cwtl
dec
or
aad
sub
and
jp
and
xor
into
mov
aam
cmpb
mov
aaa
or
movsb
dec
mov
je
aam
loop
not
xlat
xchg
incl
jmp
jmp
fcoml
scas
push
and
call
push
inc
ret
sbb
dec
imul
mov
stc
ja
orb
arpl
jae
jg
jmp
lea
pop
popf
pop
into
jno
xchg
mov
and
bnd
adc
decl
dec
out
lock
sti
cmp
cmp
push
xchg
test
cwtl
mov
inc
xor
decl
jno
cmp
add
or
sbbl
add
cmpsl
cli
ljmp
xchg
sbb
ret
mov
mov
flds
cmpsl
push
repz
out
fadds
sarl
or
sub
ret
fiaddl
adc
xchg
jnp
ljmp
xor
mov
sbb
in
mov
mov
xor
or
testb
lahf
cld
inc
mov
inc
int3
pusha
jge
lret
push
adc
lahf
sbb
jg
movsl
inc
cmpsb
jecxz
into
andl
jge
lcall
rorb
mov
in
add
aas
scas
pandn
or
movsl
loope
sbb
dec
pop
fdivrs
loop
popa
mov
cmp
clc
sbb
mov
jo
pop
pushl
and
ljmp
cmc
inc
xor
fistpll
or
mov
push
jle
xchg
enter
push
push
stc
out
or
minps
pop
insb
sbb
cli
cwtl
xor
pushl
pop
or
imul
push
xchg
dec
xor
xchg
cwtl
mov
pop
lock
jno
fldl
sbb
mov
pop
or
push
ja
push
sbb
bt
scas
pop
mov
lahf
aam
les
rcrb
out
xchg
stos
or
pop
xor
ret
mov
aad
fbstp
lcall
add
movsb
xchg
loop
and
es
push
test
addr16
push
ljmp
aam
in
rorb
pop
add
sti
mov
xchg
imul
hlt
mov
mov
xchg
mov
popf
mov
xchg
scas
mov
adc
adc
data16
and
decl
inc
dec
xchg
lcall
ljmp
and
decl
imul
fsubl
pushf
push
jmp
std
and
repz
ss
ja
pop
gs
call
inc
test
hlt
xchg
add
mov
cmp
dec
push
cmpsl
js
jo
jg
xor
in
ljmp
jne
xchg
sub
and
shlb
sbb
jne
push
inc
and
decl
es
mov
inc
push
daa
in
jno
mov
sbb
pop
cmc
incl
in
data16
sbb
scas
stos
and
lret
or
pushl
out
out
jno
adc
push
adc
out
loop
testb
sub
push
ljmp
jecxz
adc
in
or
pop
add
ljmp
or
out
stos
push
mov
decl
outsb
es
inc
pop
shr
xchg
xchg
lock
mov
dec
mov
jo
adc
sar
push
mov
hlt
mov
cld
jns
push
jl
or
sbb
fcmove
call
lds
cmp
pop
cmpl
hlt
lret
mov
dec
popf
std
mov
push
adc
mov
fisubl
rclb
pop
call
jne
push
outsb
scas
inc
pop
mov
outsl
sub
and
inc
pop
push
push
inc
jae
test
fdivl
movsl
sbb
decb
repz
mov
xlat
icebp
mov
pop
fldt
lcall
push
cmc
test
test
adc
loop
movsl
pop
lea
inc
stc
and
lds
call
insb
sbb
or
cmpsl
imul
jecxz
cmp
fsubs
dec
dec
pushl
popa
out
xor
mov
jecxz
lods
and
pusha
pop
ror
call
ljmp
dec
lock
pop
in
push
ja
movsl
jle
mov
js
jns
xchg
mov
jmp
sti
nop
aam
lret
add
and
pop
xchg
cmp
lods
ja
or
out
incl
popa
daa
fimull
sbb
cmp
jne
in
push
pop
push
imul
jg
inc
sub
ljmp
pop
outsb
rorb
mov
fbstp
jecxz
xor
add
xor
or
ss
pop
push
out
test
push
hlt
pushf
scas
fists
dec
cmpsb
ret
adc
mov
and
lds
call
and
sub
cs
xchg
push
lock
sti
mov
aam
std
call
cli
pop
cmpsb
cwtl
inc
sahf
adc
mov
cmp
jp
and
mov
pop
dec
cmp
pop
push
stos
sbb
subb
clc
jg
push
mov
adc
pusha
rcrb
cld
and
inc
mov
das
incl
push
mov
sahf
and
inc
lret
pop
fucomp
push
pop
mov
call
lcall
lcall
lea
in
and
ljmp
sbb
sub
mov
cltd
pusha
sbb
jnp
add
add
hlt
fnstsw
insb
imul
jg
sbb
stos
rclb
or
push
fsubs
mov
ljmp
lcall
sbb
jle
in
fwait
lock
push
cmp
xchg
pop
mov
xlat
dec
mov
leave
add
in
icebp
xchg
and
xchg
stos
out
jmp
ds
sub
enter
icebp
pop
clc
and
push
pop
test
jg
les
mulb
pop
scas
mov
movsb
into
mov
je
fists
pushf
rcr
imul
push
and
mov
inc
add
mov
movsw
aad
xchg
pop
ljmp
adc
xchg
fs
add
mov
adc
fimull
loope,pn
jbe
arpl
adc
dec
int
mov
mov
push
movsl
test
in
dec
out
sbb
sbb
push
add
scas
fsts
iret
shrl
push
shll
shlb
sbb
mov
push
decl
mov
nop
gs
insb
xchg
in
bsr
sub
or
mov
xor
inc
sub
mov
and
cli
and
pop
outsl
or
jmp
fcomp
add
fdivrs
fidivrs
fmull
mov
sub
sub
sbb
call
stos
cmp
jge
adc
loope
adc
pop
bound
and
je
jmp
ret
sbb
and
inc
xchg
rcr
sub
xor
decl
loopne
test
jno
and
sub
add
mov
jb
xor
ss
sti
mov
call
inc
adc
inc
clc
mov
jp
fld
mov
jno
dec
push
incl
mov
dec
xor
or
out
cmp
push
cld
mov
out
int
fdivrp
decl
adc
scas
sbb
mov
rolb
aaa
adc
data16
sub
pushl
xchg
push
out
sbb
les
in
stos
or
pusha
jle
fdivl
bound
push
xchg
mov
ficomps
decl
inc
ret
and
add
fdivl
mov
stos
mov
pop
fnsave
decl
repz
fistps
jns
in
and
ljmp
jmp
in
mov
and
mov
pop
outsb
xor
popl
mov
mov
add
or
or
jl
xchg
jo
movsb
mov
mov
in
cmp
pop
test
mov
jmp
push
jp
adc
and
adc
call
rol
repnz
ficompl
loope
ljmp
cmpsl
jbe
cld
dec
fstps
or
leave
inc
cltd
sub
pushl
cmp
pop
xchg
xchg
insl
inc
stc
mov
movsl
add
mov
int3
and
call
pop
mov
jmp
dec
decl
mov
shr
les
lahf
xor
je
es
mov
jl
cwtl
in
pop
xor
call
jns
pop
ljmp
and
jmp
xor
mov
jp
mov
push
fdivr
lcall
pop
hlt
fldt
pop
testb
dec
aas
push
xchg
mov
lcall
std
pushl
pushf
es
fidivl
sbb
loop
sarl
dec
xor
and
jne
jnp
cmp
test
push
sbb
mov
lret
aad
inc
xor
xchg
out
adcl
lcall
add
cmc
nop
sbb
mov
das
inc
xchg
mov
push
call
popf
mov
rorb
or
imulb
ret
inc
popf
cmp
sub
cmp
xchg
cli
incl
stos
insl
lret
out
imul
test
pop
mov
icebp
outsl
cli
cmp
fsubl
cli
lds
jecxz
mov
dec
push
test
andb
xchg
lods
push
xchg
and
idivl
movsb
or
lds
add
and
ljmp
ret
nop
lods
xor
fisttpl
pusha
inc
xchg
sbb
mov
dec
test
mov
pop
sti
sbb
dec
or
xor
pushl
dec
out
movsb
loop
jae
hlt
repnz
sarl
test
into
mov
pop
cld
xchg
mov
adc
incl
std
subb
xchg
imul
in
pop
fadd
shrl
clc
inc
enter
fdivs
int
cmp
in
pop
sbb
mov
fcmovnb
mov
mov
mov
inc
jecxz
in
jg
xchg
jg
mov
lcall
mov
mov
jg
and
andl
idivb
adc
and
sub
mov
jmp
push
xor
cmc
mov
loopne
test
rclb
sar
incl
fldl
adc
les
jge
add
and
xchg
aam
xchg
scas
mov
xor
mov
cmp
icebp
int
in
mov
incl
in
cld
push
sub
jnp
cli
inc
and
or
dec
hlt
mov
jnp
ljmp
ds
inc
inc
jg
push
leave
push
ss
cmp
push
sbb
or
mov
add
or
mov
pop
push
loopne
loop
xor
push
cmp
fistps
enter
mov
adc
dec
decl
test
movb
clc
push
aas
pop
and
jae
enter
or
sbb
enter
inc
inc
test
mov
jmp
sti
mov
mov
lcall
dec
xor
pushf
cmp
lret
inc
dec
jbe
jmp
xor
and
xchg
lods
pusha
xchg
into
inc
std
cld
in
out
lcall
cmp
cmpsb
jg
add
das
mov
stos
gs
cmpb
sbb
outsl
clc
push
std
and
xchg
cmp
jge
enter
mov
lock
decl
jp
push
adc
mov
test
push
jp
decl
out
ficoms
aam
mov
adc
ror
pop
ret
mov
lret
ljmp
rolb
sub
xchg
pop
inc
mov
ljmp
and
lock
insb
add
outsb
movsb
add
out
loopne
imul
imul
ljmp
int
test
add
aas
or
cmp
pop
sub
mov
movsb
rcrb
push
pushl
pushf
sub
bound
cli
adc
and
in
inc
sbbl
push
iret
loope
aas
adc
mov
push
insl
adc
fs
dec
inc
mov
in
adc
inc
test
pop
mov
pusha
inc
aam
out
test
inc
or
ljmp
loop
fldt
push
pop
inc
adc
and
lcall
or
aaa
insb
sti
pop
jmp
mov
frstor
inc
das
push
pop
inc
inc
aam
iret
pop
mov
jmp
mov
lds
and
mov
pop
sbb
fsts
xchg
jno
adc
std
mov
adc
cmp
pushl
lcall
loopne
mov
in
sub
cli
mov
or
jnp
cmp
cmc
out
fisttpl
mov
iret
fisubrs
nop
sub
push
arpl
jmp
sti
sar
pop
xchg
fstpl
int3
push
sub
and
push
andl
fcomip
mov
fimuls
dec
stc
rolb
test
fistl
mov
nop
pop
pop
cmp
cmp
js
cmpsb
es
iret
pushf
fimull
imul
or
popf
in
loope
js
in
int3
leave
pop
mov
jmp
jg
xor
pop
dec
jno
fidivrl
in
decl
das
int3
insb
mov
decl
sub
sub
adc
imul
cmp
fs
mov
cmc
mov
mov
sub
decl
andl
lret
xchg
popf
iret
sahf
xchg
mov
lock
jmp
insl
and
add
iret
mov
or
stc
jecxz
scas
pop
inc
aam
push
dec
push
pusha
lcall
add
push
fbstp
push
jnp
int3
pushf
in
fs
std
mov
scas
std
repz
xor
jmp
jmp
test
dec
add
test
fwait
pop
xor
or
pop
add
push
dec
mov
pop
pop
cmpsb
bound
in
jae
mov
or
aaa
cmp
fsubl
cmpsl
inc
dec
in
mov
pushf
add
incl
sub
shll
dec
xchg
inc
aas
jbe
inc
xchg
andl
outsb
out
sbb
jmp
push
mov
movsl
mov
lea
xchg
or
jnp
mov
sub
jg
out
sti
adc
sbb
add
dec
jo
dec
scas
hlt
push
dec
mov
xchg
cmp
sub
rcll
ficomps
test
cmp
sbb
mov
mov
mov
inc
xor
imul
in
xlat
mov
jbe
and
pop
rcrl
clc
jmp
mov
call
adc
jne
pop
mov
jbe
push
dec
sbb
mov
adc
sbb
mov
cltd
cs
mov
je
stos
push
data16
test
pusha
xorb
inc
testl
ljmp
enter
jo
xchg
scas
adc
inc
lods
shlb
ljmp
or
and
test
nop
inc
stc
jl
pop
outsb
pusha
dec
jg
loope
dec
jg
jl
cmp
mov
add
out
cwtl
or
push
out
bound
cmpsb
push
and
in
sub
jb
fsts
xchg
inc
call
xchg
addr16
inc
aas
or
insl
arpl
jmp
imul
push
leave
mov
data16
mov
pop
loope
pushf
push
push
pusha
hlt
call
mov
lcall
mov
in
fbstp
xchg
xchg
sub
sub
orb
incl
lret
push
inc
shl
lds
mov
cmp
adc
sbb
bound
lods
push
ljmp
jle
sbb
mov
lcall
lahf
jns
mov
mov
mov
fstl
dec
xor
jae
lods
lcall
mov
jo
call
jae
add
mov
push
aam
adc
xchg
cmp
lret
pop
cmp
cli
out
cltd
outsl
and
cmp
and
das
gs
call
dec
push
ja
dec
add
mov
jnp
test
mov
xchg
inc
cmp
cwtl
sub
ljmp
mov
push
lret
cmpsb
loop
push
imul
jns
or
sarb
decl
push
es
in
out
cltd
pop
push
or
les
mov
xchg
aad
daa
sbb
aas
loop
incl
mov
mov
clc
xor
push
cmpl
mov
sbb
movsb
cld
movaps
incl
cmp
scas
ficompl
in
pushf
push
mov
push
out
cmp
jbe
sbb
in
aam
imul
jmp
aaa
push
dec
inc
dec
cmp
xor
mov
lock
fdivr
scas
clc
ljmp
mov
push
cmp
jnp
adc
mov
loope
call
aad
std
lcall
enter
lcall
add
aam
pop
pop
push
mov
inc
out
cld
or
decl
or
inc
and
and
add
pop
sahf
and
shl
cmc
dec
pop
cmp
pushl
xchg
imul
data16
std
imul
adc
dec
aad
rcrb
push
lods
jns
xchg
xor
fsts
outsb
lcall
stc
inc
into
dec
mov
leave
sti
in
adc
push
pop
cmpb
mov
mov
pop
mov
pushl
mov
xor
lcall
xchg
jmp
test
ss
aad
push
fwait
jmp
or
pop
push
xor
lea
and
add
fcoms
add
movsb
fiaddl
scas
push
aaa
jnp
lods
mull
sti
adc
or
add
aaa
sar
fcomip
call
cmpsb
iret
mov
add
jno
stos
pushf
fildll
ljmp
test
int
and
adc
xlat
adc
insb
das
jl
insb
scas
sbb
lahf
in
insb
les
les
ljmp
ret
pop
adc
ds
out
insl
adc
sbb
bound
adc
dec
std
dec
test
xchg
es
loop
sbb
in
ja
pop
push
add
mov
cmp
lds
pushl
add
push
pop
mov
and
lds
jns
inc
cli
fisttpl
rorl
ret
aas
mov
pop
orb
sbb
cmp
xchg
test
leave
leave
xchg
out
jg
ljmp
test
arpl
push
cmpsb
lds
bound
pushl
push
cmp
cli
sbb
das
add
push
sbb
push
fs
jge
pop
popa
stos
cli
ljmp
pop
cmp
idivl
xchg
jnp
stos
sti
decl
push
mov
int
xchg
sbb
pop
idiv
fwait
push
mov
jle
iret
call
pop
xlat
sahf
adc
sub
shlb
ffreep
out
fs
aas
decl
adc
in
inc
arpl
out
cmp
fisubl
rol
lret
inc
jg
negb
test
and
jmp
insl
xor
pop
add
xor
incl
mov
lcall
or
ret
cld
mov
sbb
cwtl
outsb
or
jne
push
and
xlat
inc
dec
inc
cwtl
and
mov
test
dec
push
mov
xchg
mov
call
adc
js
and
or
fprem
stos
movsb
sahf
nop
fistps
jge
sub
xor
add
pop
dec
shlb
mov
or
mov
or
jmp
and
jo
ret
adc
insl
test
fstp
call
jmp
lods
xor
stc
push
pop
push
mov
std
insb
test
aas
loope
popa
sar
call
mov
enter
rcr
cmpsb
xchg
popf
ds
jp
mov
push
sbb
mov
xlat
leave
or
mov
mov
jmp
out
cwtl
push
xchg
les
stos
inc
or
xor
xor
jmp
and
test
jo
shr
jl
imul
adc
pop
mov
pushl
mov
cmp
dec
jg
aam
sub
in
cmp
xor
enter
push
jmp
out
jge
ds
int
int
faddl
jp
ljmp
adc
lcall
pop
sub
je
js
ret
rcr
cmpsb
int
movsl
ja
insl
cmp
jle
in
outsl
xor
push
aad
mov
nop
mov
stos
dec
arpl
pop
xchg
add
mov
xor
sbb
js
and
addr16
and
decl
sahf
popf
scas
lds
jecxz
js
clc
aas
ret
lods
mov
dec
test
pop
fmul
or
and
inc
push
sahf
mov
sub
inc
pop
or
outsl
xorl
cmpsb
incl
dec
aaa
into
sbb
rolb
stos
aam
mov
repz
sbb
sbb
cltd
shrb
lcall
mov
jo
in
fs
data16
sarb
jmp
dec
xchg
lods
stos
pop
mov
jne
push
sarl
pop
dec
pop
jo
pop
dec
int
push
call
iret
scas
imul
popf
sbbb
jnp
lds
jns
cmp
testb
adc
rorl
out
sub
cmp
add
mov
jns
sub
inc
in
aaa
mov
aas
mov
pop
cs
inc
insb
ret
xchg
dec
jne
out
repnz
gs
lcall
hlt
inc
dec
mov
call
shl
push
popa
dec
aas
mov
mov
push
in
xor
dec
fsubp
mov
add
stos
es
mov
decb
mov
cmp
js
xor
pop
jne
mov
repz
jb
test
add
jg
call
mov
scas
int
pop
out
mov
and
push
mov
fdivrl
ljmp
pop
ljmp
xchg
bound
jmp
fsubs
movsw
xor
pushl
mov
fdivr
xchg
insl
lret
push
mov
jmp
push
add
mov
mov
cltd
popa
ja
dec
daa
repnz
les
movsb
fs
add
sbb
adc
sbb
jg
pusha
aas
push
cmp
fcmovu
in
clc
push
ljmp
adc
dec
pop
dec
dec
xlat
mov
pop
cwtl
push
or
dec
lcall
jmp
jmp
bound
push
lock
decb
jmp
out
sbb
pop
sar
cmp
pushl
sbb
sub
rclb
notb
movl
ljmp
jae
loop
xchg
push
ss
popf
cld
outsb
pop
pop
and
outsl
pop
ficompl
int3
jle
xchg
pushl
inc
sti
add
xchg
push
adc
adc
and
mov
sbb
xor
std
stos
ret
lcall
lods
imul
add
mov
cltd
lods
jg
push
inc
fsubrl
hlt
std
mov
jmp
dec
jmp
and
fs
pushl
cmpsb
frstor
push
cmp
call
sbbb
push
lret
sar
incl
inc
cmpsb
test
rclb
int3
mov
jecxz
adc
cmp
out
scas
cli
pushl
jnp
fidivrl
icebp
xor
sub
into
jecxz
jb
loope
add
scas
add
hlt
ljmp
stc
in
outsl
mov
ljmp
test
icebp
sbb
es
sbb
std
pushl
in
xchg
mov
inc
pop
psubusw
aad
mov
pop
adc
inc
pop
or
lock
cmp
fstps
scas
jg
inc
jno
ja
inc
sti
jae
sub
mov
fstpt
pop
lahf
or
push
fldenv
cmp
adc
in
dec
cwtl
scas
mov
xchg
jbe
jmp
adc
inc
aaa
mov
shlb
inc
mov
ss
call
jae
daa
cmpsb
out
ljmp
das
adc
xchg
test
dec
rorl
repz
lahf
inc
out
data16
outsl
lcall
jge
insb
ret
ss
pop
and
sbb
aad
in
mov
jg
push
in
xchg
mov
sbb
push
incl
jmp
pop
into
fcompl
test
or
call
adc
adc
jns
xorb
lcall
ret
negl
add
mov
xchg
pop
xor
xor
push
xor
inc
int
nop
fistl
call
arpl
loop
xorps
jnp
adc
inc
xchg
push
cltd
jmp
fbstp
cmp
decl
push
sbb
imul
fnsave
mov
popf
mov
stc
cmp
fs
lcall
dec
xchg
mov
movsl
xchg
mov
cmp
cltd
fs
and
sub
cmc
incl
pusha
cmp
int
mov
pop
jnp
test
adc
push
and
popa
dec
decl
push
sbb
xorl
push
inc
jmp
call
adc
lcall
and
cmp
pushl
lods
pop
ret
addb
test
cwtl
into
or
add
test
pop
jbe
insl
ljmp
push
push
jle
out
loope
mov
aam
popf
test
addr16
jns
outsb
ljmp
out
pushl
repz
xchg
addb
dec
cli
push
jb
pop
xor
adc
add
adc
jg
xor
decl
decl
cli
dec
lcall
js
xor
mov
insb
push
shll
outsb
mov
cmc
adc
mov
jmp
fisttps
popf
repz
in
and
enter
test
jno
std
pop
data16
ficoml
mov
lahf
sub
pop
in
sbb
adc
push
adc
adc
inc
or
leave
xlat
sub
insl
icebp
mov
call
and
dec
xor
or
mov
push
daa
in
mov
mov
fsubl
hlt
call
movsl
sub
fucom
fiadds
pop
sub
lds
ljmp
movsl
jge
stos
jno
in
sti
ret
repnz
jb
stos
ret
jmp
imul
or
stos
inc
clc
pushf
sub
in
es
out
movsl
sub
pusha
int3
add
jmp
push
adc
sbb
pop
or
cmp
mov
loop
jno
lahf
popa
outsl
dec
lret
loopne
clc
add
xor
mov
jecxz
movl
xchg
jno
mov
fldenv
push
pop
cmc
jecxz
xchg
pop
ja
decb
sbb
repnz
mov
ret
hlt
cmpsl
cmc
cmp
mov
inc
jne
and
xor
add
dec
push
mov
flds
popf
lods
fldenv
xor
lahf
xchg
adc
call
pop
sub
lret
enter
out
insl
xor
xor
lods
decl
jl
xor
cmpb
add
push
cmp
cmp
mov
call
test
mov
mov
xor
inc
add
test
scas
xchg
dec
mov
adc
jmp
jecxz
push
loop
mov
stc
rorl
loop
push
decl
lds
fnstcw
jns
xor
and
push
lock
lcall
stos
nop
sub
dec
idiv
iret
or
mov
outsl
out
roll
jp
adc
incl
cld
mov
andb
xchg
in
xorl
mov
rol
mov
ljmp
and
icebp
mov
jp
cmp
and
in
jle
fninit
jne
jge
int3
or
jg
inc
insl
cmp
dec
xchg
push
adc
call
imul
nop
push
lds
or
lret
cmpl
cmp
and
clc
cld
in
repz
adc
out
cli
call
faddl
notb
cmp
cmc
mov
repnz
decl
ror
rcl
test
xor
in
mov
push
addr16
sub
clc
idiv
aas
mov
fcomps
shr
sbb
test
xorl
jl
pop
adc
xor
imul
mov
sbb
jp
cmp
cs
addr16
out
mov
jecxz
imul
adc
bswap
mov
dec
and
xor
in
sub
sub
adcb
out
decl
mov
testl
mov
out
bound
or
imul
pop
aam
mov
xchg
pop
out
jecxz
add
xchg
and
and
mov
cmc
scas
incl
sbb
je
mov
jecxz
pop
xlat
mov
mov
push
mov
adc
icebp
decl
pushf
pop
movsl
push
inc
dec
xor
jmp
dec
jmp
inc
inc
xchg
xor
rcr
dec
mov
pop
push
jecxz
dec
nop
decl
incl
pop
aas
pop
insb
sub
dec
mov
ret
insb
mov
das
cli
jmp
pop
push
lods
pop
sub
das
mov
jo
add
mov
cmpsl
test
out
pop
jle
jmp
ss
cltd
adc
in
cmpsb
mov
xorl
fwait
sahf
daa
mov
stc
fcoms
dec
lock
outsl
cld
xor
sub
push
xchg
and
jne
xor
aad
sbb
cltd
into
mov
push
pop
shlb
pop
pop
aam
repz
mov
loope
ds
jg
jb
and
sbb
adc
cmpsl
loope
sbb
add
sub
lcall
xchg
ds
jo
xchg
xchg
and
mov
imul
sbb
inc
shl
jbe
push
mov
mov
dec
test
sarl
push
imul
pop
pop
pop
pop
sub
sar
fsubl
lret
add
fists
cmovo
je
mov
fstpl
sbb
mov
adc
cmp
adc
ret
mov
ret
repnz
incl
jle
xor
fdivrp
mov
lea
daa
mov
ljmp
xchg
xor
gs
in
popf
xor
fisubl
je
cld
inc
mov
sti
xor
dec
aam
fsubl
repnz
mov
flds
jns
hlt
call
inc
scas
out
mov
jae
aam
les
mov
stos
sbb
jmp
ret
mov
sbb
cmc
push
jno
movb
in
and
neg
inc
jge
jne
ljmp
sar
sub
movsl
jle
orl
je
clc
fdivrp
in
scas
mov
dec
and
push
cmp
jge
imul
jge
mov
icebp
fwait
xchg
call
ja
ds
cmp
cmc
or
sub
inc
xlat
gs
lds
in
clc
and
xlat
int3
or
adc
add
test
insb
nop
cmp
sbb
decl
lock
adc
sar
pop
ret
pop
scas
pop
dec
inc
pop
xor
lcall
aad
mov
je
mov
mov
sbb
popa
shll
loope
mov
or
out
divb
in
lods
out
mov
mov
add
sar
test
lcall
fidivs
enter
sbb
mov
or
loop
cmpsb
lret
mov
and
into
gs
add
mov
mov
jmp
into
jns
cmp
daa
push
pushl
dec
add
imul
mov
lds
adc
xor
fnsave
inc
sub
pop
sub
fnstenv
mov
cmp
mov
jnp
cmp
lea
pop
mov
pop
movsb
jmp
dec
aaa
stc
mov
in
jnp
in
pop
out
notb
xor
xchg
repnz
adc
cmpl
sbbb
pop
inc
xchg
push
sarl
leave
in
push
lods
xor
stos
aaa
jnp
enter
mov
jmp
arpl
cmp
lds
xor
loopne
jmp
adc
xlat
loop
repz
xchg
mov
mov
xchg
outsl
outsb
cmc
das
inc
jne
add
push
outsl
jo
sbb
add
lock
fdivr
jmp
leave
outsb
or
sbbl
push
mulb
xchg
pop
mov
cltd
hlt
cli
pushl
inc
movsl
es
xor
jb
xor
xor
lods
jecxz
add
sub
mov
dec
in
xor
mov
jecxz
hlt
adc
and
xor
jl
addb
cli
jmp
je
mov
adc
or
call
incl
inc
orl
lret
dec
aaa
pop
rcr
int
outsl
sbb
mov
pushl
push
sub
xchg
adc
jae
outsl
scas
dec
cmpsb
or
mov
xorl
iret
popf
sbb
cmpsb
sarl
jb
cmc
addb
rorb
mov
jge
popa
je
push
call
dec
cli
mov
sbb
xchg
aam
xchg
inc
or
out
xchg
mov
mov
fmulp
hlt
pop
sbb
pushl
push
repnz
enter
adc
jle
subb
jmp
pop
ljmp
jmp
push
mov
arpl
and
fcmovnu
sbb
fs
ljmp
loopne
cs
stos
push
in
push
inc
mov
sbb
lods
push
loop
lcall
pushf
sbb
fdivrl
add
pushf
es
jo
add
aad
cs
inc
jl
js
mov
push
cmp
inc
ljmp
xor
cltd
cmp
xchg
push
add
jae
jmp
call
jmp
push
pop
lcall
ja
das
inc
dec
loop
aas
push
sub
mov
mov
cmp
movsl
inc
loop
arpl
call
sbb
loopne
add
mov
test
fldl
hlt
add
dec
ficomps
fcoml
pop
adcl
enter
xlat
dec
sbb
fsubrs
sub
sar
mov
insl
mov
les
popf
daa
lock
inc
ret
jg
out
sub
adc
call
mov
clc
mov
jb
lock
and
adc
std
aam
xor
out
cli
jge
xchg
mov
jp
lds
shld
push
pop
sub
sub
ljmp
bound
jne
lods
sub
stos
mov
in
hlt
push
mov
dec
pop
arpl
incl
inc
sbb
xchg
adc
pop
push
jmp
daa
fwait
aam
lret
lret
mov
inc
mov
rol
push
les
frstor
xor
cmp
sbb
incl
cwtl
sub
into
out
jmp
int3
fisubrs
jb
mov
cmpsb
fisubl
mov
or
and
fidivs
mov
push
sub
fcompl
ljmp
sti
cmp
sbb
push
and
xchg
popf
rolb
int
mov
pushl
mov
sub
inc
div
sti
inc
sub
push
or
leave
add
repnz
roll
fistl
insb
xchg
push
inc
neg
push
shll
jo
mov
ljmp
mov
mov
cmp
dec
stc
rcl
fsubl
and
jbe
fwait
jg
push
mov
sti
and
dec
into
js
mov
cmpsb
mov
outsb
shlb
je
lcall
or
fcomps
fidivl
xchg
subb
jle
loope
daa
adc
adc
incl
cld
or
xchg
jo
xchg
and
sbb
orl
pushl
lret
aad
scas
pusha
in
ljmp
lahf
stos
and
fisubs
inc
orb
js
mov
xor
jg
mov
popa
fnstenv
nop
pop
lahf
pop
stos
xchg
pop
or
lods
pop
or
push
pop
clc
xor
sub
ret
cli
sti
dec
and
pop
mov
xchg
cmp
imul
in
or
pop
push
cmp
jp
push
push
loopne
inc
std
and
xchg
xor
ds
sub
push
add
mov
repnz
cmc
mov
sbb
cltd
and
je
call
xchg
imul
loopne
lcall
incl
add
add
fbld
push
mov
mov
sub
mov
mov
mov
fwait
jno
popf
iret
daa
mov
push
mov
dec
lret
mulb
dec
bound
pop
xor
push
iret
cmp
into
loope
mov
mov
sub
jmp
mov
lock
jl
mov
int
lods
jg
mov
add
push
and
sti
sub
lret
push
outsb
xorl
subb
push
jns
push
jmp
sbb
ret
loopne
fcoms
pop
bound
jmp
dec
jecxz
leave
pushf
mov
scas
add
gs
mov
ret
andl
jae
in
jge
subl
and
xlat
adcb
xlat
sbb
clc
call
or
in
or
mov
xor
mov
mov
lret
lcall
and
adc
sub
call
lds
xchg
fstpt
cld
push
cmp
scas
push
dec
push
jge
test
leave
mov
mov
pop
push
lea
fcmovu
mov
cmp
jb
stos
les
or
incl
movsb
and
and
mov
add
or
roll
fcmovnb
pop
push
jbe
cmp
xchg
lods
push
add
pushl
jno
outsl
sub
in
cmp
mov
mov
mov
pop
push
or
pop
fadd
push
jle
and
jno
cmp
mov
push
and
sbb
aaa
push
cmp
sub
repnz
add
sti
mov
mov
adc
cmpsb
mov
add
lcall
cmc
cmpsl
sub
adc
cmc
cmp
push
stos
mov
cmp
stos
xchg
lret
adc
ljmp
pop
inc
imul
mov
mov
pop
xor
lahf
jae
pushf
mov
cmpsl
push
jnp
mov
rorl
mov
rclb
cld
sub
iret
call
stc
xor
rcrl
jp
mov
in
inc
nop
clc
incl
hlt
ret
or
mov
jp
fstpt
jmp
push
je
jae
xor
cmp
hlt
ret
inc
jne
or
lret
dec
lret
push
jge
sub
xor
sbb
xor
les
decb
or
jns
in
ss
adc
jg
rcrl
fdivs
or
loopne
cmp
dec
mov
bound
pop
arpl
fadd
orb
pushl
mov
stc
aas
jmp
aaa
daa
test
icebp
mov
movsl
leave
sub
push
loop
std
jle
pushf
inc
aad
and
out
jle
fldl2t
lahf
mov
xor
cmpsl
fildll
push
xor
or
sbb
inc
int3
dec
push
mov
pushl
aad
dec
adc
push
xlat
dec
jg
fstpt
jae
jge
jbe
lods
xor
mov
dec
cmpsb
fisubrs
jmp
cmpsb
or
or
fwait
jo
call
inc
pop
gs
ret
sub
lcall
and
scas
mov
imul
inc
insb
add
sti
add
incl
jns
push
imul
imul
adc
add
ljmp
push
sbbl
pusha
pop
fs
push
or
lcall
pop
inc
loop
popa
adc
popa
adc
xor
int
loopne
cltd
adc
mov
std
das
cli
shr
into
pop
fimuls
jmp
loope
or
lcall
pop
mov
jg
sub
push
fstpt
jb
cmpsb
sahf
mov
incl
popa
cmc
pop
mov
and
jle
push
adc
clc
pop
mov
push
pop
inc
xor
ds
mov
dec
leave
fsubrs
xchg
enter
lcall
push
ja
stos
rclb
filds
mov
nop
in
shlb
inc
out
lret
sar
pushl
ret
int3
movsb
sub
pop
movsb
ret
or
in
jns
xor
dec
jno
test
es
fbstp
mov
fdivl
test
push
jmp
ret
push
mov
jecxz
mov
mov
cmp
mov
call
mov
out
outsl
scas
lahf
push
int
jmp
jnp
cli
call
add
leave
xchg
mov
ljmp
push
cld
das
clc
decl
xor
stos
mov
loop
in
enter
sbb
fwait
call
cmp
sarl
sti
xor
out
jb
arpl
or
xchg
fsubl
test
jns
sar
ret
test
cmp
lcall
pushf
cmp
push
mov
ds
mov
inc
orl
mov
xor
push
out
rcll
xchg
ljmp
mov
mov
mov
call
mov
sbb
mov
cmp
dec
mov
rol
out
imul
pusha
mov
fcomip
incl
and
push
imul
sbb
repz
cli
shlb
dec
fimull
dec
stc
mov
add
iret
es
mov
add
call
outsl
and
jmp
jb
out
aaa
jmp
mov
pop
nop
push
and
fidivrl
jg
lock
repz
jg
test
mov
cmc
ljmp
scas
inc
out
jmp
add
leave
fsubrl
lds
repnz
inc
and
sbb
sub
mov
pop
repz
dec
cmp
mov
adc
filds
ljmp
and
out
mov
dec
dec
xor
or
outsl
add
mov
cs
ljmp
inc
mov
out
or
push
inc
pop
pop
xchg
gs
stc
mov
fildl
nop
js
out
call
sub
fbstp
mov
negb
jge
mov
bound
lcall
inc
xor
clc
cmpsb
inc
adc
xlat
add
int3
shrb
add
pop
jle
push
call
leave
call
fs
cwtl
adc
ret
lahf
and
repz
jmp
pop
add
cwtl
mov
cli
jmp
loope
push
je
pop
mov
js
xor
loop
pop
nop
adc
jecxz
adc
ljmp
push
xlat
sub
test
icebp
or
or
push
out
fistpl
mov
add
push
stc
shlb
xchg
pop
fstpl
inc
stc
fwait
aaa
dec
push
mov
ss
test
call
es
out
mov
icebp
insb
jp
mov
pop
icebp
jmp
mov
push
inc
filds
out
andl
xor
xor
sub
call
lahf
iret
xchg
inc
popf
test
cwtl
fwait
inc
test
pop
fwait
pop
sub
movsb
insl
fidivrl
call
xchg
dec
dec
pop
mov
dec
popf
sbb
xchg
insb
pop
push
pop
jb
in
js
enter
call
add
jbe
movsb
scas
mov
sub
push
pusha
call
nop
test
jmp
xchg
sub
mov
mov
je
cmp
mov
jmp
mov
aad
fadds
pop
rorb
xchg
sbb
imul
pop
in
adc
aad
jg
loope
lock
fs
push
xor
decl
in
movsb
xchg
mov
push
pop
adcb
call
adc
or
decl
fs
cmp
adc
xchg
push
fcmovb
into
mov
cltd
lahf
cmc
push
add
sbb
push
dec
and
xchg
cmp
dec
scas
daa
pop
inc
test
fwait
ljmp
and
xor
das
scas
std
into
push
jnp
adcb
push
fwait
push
jbe
push
mov
arpl
shll
adc
inc
cmpsl
mov
fnstcw
xchg
decl
cmp
mov
mov
cmp
mov
jns
and
mov
arpl
incl
jl
icebp
xchg
pop
push
arpl
add
mov
lret
ss
mov
xor
dec
mov
das
pop
mov
mov
fcompl
sahf
jne
dec
push
or
imul
jmp
cs
loop
mov
movsl
icebp
sbb
out
jno
mov
pushl
aaa
jge
lahf
jne
outsl
adc
aad
or
sub
mov
cltd
pusha
xchg
mov
ret
jne
aam
fcomip
dec
pop
stos
aam
xchg
or
les
shll
inc
arpl
in
addl
fnstenv
faddl
imul
xor
movsl
out
pop
repz
outsb
sahf
les
decl
outsl
sbb
dec
lret
imul
jae
mov
out
ja
js
clc
sti
aam
incl
into
stos
icebp
ja
stos
jge
mov
data16
stos
repnz
or
jbe
incb
scas
adc
inc
jmp
xchg
sbb
scas
sub
xchg
sub
mov
ljmp
pop
outsb
pushf
jbe
jmp
adc
es
shlb
lea
xchg
pop
xor
jg
loopne
lea
lcall
test
mov
fcomps
jbe
or
mov
jp
push
mov
xor
cmp
test
xchg
jmp
stos
mov
dec
sub
push
cmp
pop
mov
mov
int
loope
fwait
mov
fdivrs
decb
adc
add
lcall
ss
cmpl
movsl
mov
pushf
in
and
ror
pop
cs
sbb
xor
ljmp
out
out
lcall
ljmp
sub
mov
sbb
and
inc
enter
popa
sbbl
jns,pt
jne
mov
ja
adc
mov
push
ljmp
cld
cmpsb
sbb
jne
cld
jl
sub
sub
call
gs
mov
mov
inc
shll
mov
jecxz
decb
loop
mov
mov
push
jb
fistl
inc
mov
test
call
loop
mov
gs
mov
mov
add
lcall
adc
jl
sub
sub
mov
pop
adc
xor
mov
aas
lea
ljmp
fstp
psrlq
sbb
cs
fwait
outsl
dec
ja
sbb
incl
adc
jp
loope
cmpsb
pusha
addr16
adc
mov
sub
mov
push
les
data16
ja
cld
in
pop
in
cmp
je
cmpsl
fsubs
push
jb
mov
sub
lea
lcall
inc
cmp
or
mov
push
add
ljmp
push
js
movsl
or
divb
movsb
pop
cltd
mov
inc
lds
ja
mov
jne
inc
arpl
sti
lret
pusha
in
mov
int
adc
ljmp
xchg
rcl
add
fldz
or
dec
lcall
xchg
and
sbb
loope
std
or
call
push
pop
jbe
daa
inc
jecxz
xlat
sahf
pusha
cli
jge
int3
lods
push
mov
insb
or
and
jg
push
dec
inc
fldl
cltd
ljmp
repz
mov
pusha
lahf
mov
lea
shlb
das
filds
push
add
and
jns
pop
testb
xor
dec
jle
pop
lret
mov
flds
sar
lcall
mov
pusha
mov
jae
test
dec
xchg
cmp
xchg
jge
hlt
xor
arpl
out
shrb
add
test
pop
mov
sub
bound
adc
int3
cmp
incl
addr16
addr16
ljmp
rcll
mov
addr16
sahf
hlt
add
clc
call
call
dec
mov
mov
shr
mov
mov
sbb
aad
mov
pop
cmp
jp
andb
sub
fcomip
push
sub
pop
test
repnz
orb
cmp
cmp
push
pushf
inc
xor
push
data16
adc
ret
sub
mov
stc
adc
scas
add
and
sar
stc
sbb
mov
je
mov
jmp
cmp
dec
push
or
rolb
or
or
pop
cmp
lret
popf
movsb
cmp
xchg
mov
hlt
sbb
test
sbb
arpl
jg
decl
jmp
dec
clc
dec
ret
mov
xor
mov
and
decl
mov
imul
mov
xor
cmp
std
mov
sub
cld
jmp
lret
kmovb
sub
sub
dec
mov
dec
addr16
sbb
inc
mov
rorl
test
add
fdivrl
mov
push
or
pop
mov
call
aad
push
sbb
mov
dec
cmp
pop
xchg
jbe
dec
xor
sarl
das
sub
pop
outsb
insl
and
cli
or
in
mov
outsb
push
clc
call
loopne
cmpsb
cmpsl
sub
cmpsb
adc
popf
repz
ficoml
dec
jg
pusha
std
xchg
in
and
jmp
loop
sbb
incl
adc
adc
in
jle
or
out
push
push
sub
lods
cli
jg
pop
mov
jb
mov
stos
adc
bound
in
inc
xor
pushl
in
in
call
pushf
js
mov
inc
pop
dec
push
scas
cmp
in
bound
xchg
ljmp
pop
in
sbb
dec
mov
lds
add
mov
fcomi
incl
outsb
adc
gs
or
sbb
sub
rol
fisubrs
pop
push
hlt
xchg
jge
cwtl
cs
ljmp
leave
dec
mov
pop
lcall
pop
jmp
stos
inc
sahf
arpl
lods
lcall
cmpsl
mov
mov
sbb
mov
jae
add
xchg
nop
out
inc
dec
or
call
inc
or
into
popa
addr16
movsl
jns
push
fucomi
enter
sbb
cs
push
cmpsb
lcall
test
add
add
mov
inc
cli
rorb
dec
dec
sbb
dec
enter
pop
or
pop
andl
cmpl
dec
add
jb
mov
rorl
outsb
rolb
cmpb
enter
pop
addb
cmp
roll
ljmp
rclb
and
fcmove
xor
sbb
sub
add
out
adc
out
lret
ja
repz
add
cld
and
insl
add
js
les
shlb
fs
inc
jle
repnz
jle
decl
pop
or
aad
and
ss
insl
inc
and
xchg
cli
in
test
mov
pushl
pop
inc
fisubs
sub
push
mov
fsubr
and
lcall
in
inc
pop
dec
mov
push
out
imul
je
xchg
out
fnstsw
call
jno
js
aam
mov
loopne,pt
and
hlt
lahf
addr16
jmp
or
pop
fstps
xorb
pushf
mov
mov
dec
out
repnz
decl
sbb
cs
sub
xchg
push
mov
jae
sbb
hlt
dec
or
add
in
repnz
out
lods
and
adc
xchg
aad
rol
xchg
and
or
cmp
stos
in
imul
cltd
push
mov
pop
das
stos
cli
lods
leave
lcall
push
xor
repnz
mov
sub
sar
aaa
pop
decl
fisubs
and
push
mov
adc
lahf
push
cmp
pusha
sub
repnz
nop
int3
sbb
xchg
inc
pop
mov
jg
xor
lods
rolb
add
dec
mov
add
pop
ret
hlt
sti
cmp
cld
rcrl
fisubrs
mov
fcomip
insb
pop
testb
sub
cmp
ficompl
pusha
lcall
lcall
js
aas
sub
push
or
push
fs
pop
and
adc
push
and
mov
test
lods
jecxz
sub
lock
outsl
inc
push
cmp
stos
sahf
insb
xchg
out
add
dec
gs
xchg
push
jge
or
lds
push
adcl
jnp
addr16
loopne
repz
inc
shll
addps
or
sub
mov
mov
xor
outsl
sbb
xor
dec
fsubrp
aas
adc
ljmp
sub
cmc
in
xchg
aaa
rorl
dec
test
incl
add
pop
mov
jo
out
pop
cmp
pop
ret
pop
push
es
repz
test
jmp
lods
mov
jbe
add
int3
int
fldcw
xor
imul
dec
mov
fdivp
mov
ljmp
sar
cmp
sahf
dec
daa
xchg
cmp
mov
mov
movsl
add
sar
pop
loopne
jo
js
jge
stc
xchg
sbb
mov
or
outsl
call
incl
aaa
dec
lds
or
test
push
lcall
add
fcomip
in
mov
mov
pop
and
inc
movsl
inc
scas
mov
mov
incl
enter
pop
xchg
cmpsb
rcrb
xchg
lds
adc
lods
stos
jge
int
mov
decl
movsb
enter
imul
add
sahf
jl
or
call
call
add
out
iret
ret
sahf
mov
add
xchg
mov
fimull
sub
mov
loope
outsb
add
idivl
mov
sbb
out
ds
addb
jmp
cld
adc
push
sub
adc
icebp
or
gs
adc
push
push
ja
pushl
decl
mov
jo
pop
dec
push
pop
and
das
leave
stos
loopne
push
jo
xor
jp
jnp
mov
dec
int
sarb
sub
js
mov
sub
push
mov
call
cli
jl
aam
xsha256
cmpsb
adc
jl
cli
add
push
jmp
dec
cmpsb
insl
lods
addr16
push
adc
cmp
jg
dec
mov
sub
xchg
loope
dec
les
fwait
jo
inc
lea
add
sbb
ljmp
jb
in
jmp
dec
jl
mov
cltd
into
push
notb
mov
jp
outsb
mov
call
imul
push
jge
hlt
lock
xchg
push
repnz
scas
leave
jns
es
cmpsl
hlt
jmp
pop
or
jno
xchg
sbb
mov
mov
fwait
imul
mov
sbb
nop
out
xlat
enter
orb
into
inc
fiaddl
jmp
sbb
and
mov
cmp
nop
pusha
jp
jl
xchg
sbb
outsb
xchg
in
pop
push
insl
xor
pushl
lret
js
lcall
adc
inc
sti
xchg
cmp
jmp
shl
sub
jg
cmp
cmc
mov
or
jl
jbe
sbb
test
decl
and
jle
test
push
stos
xchg
mov
jae
mov
xchg
mul
push
incl
imul
call
out
aam
fnstenv
bound
mov
incl
in
into
or
ret
fildl
mov
and
xchg
add
sub
push
pop
call
or
mov
aad
aam
outsl
rolb
out
int
jp
push
sbb
lcall
jne
and
mov
das
je
push
outsb
xor
scas
arpl
sub
call
jle
movsb
pop
sbb
mov
mov
ret
lds
je
and
lcall
ja
repnz
sub
scas
sti
int
mov
test
cmp
or
movsl
push
jb
ljmp
jge
sbb
pushw
mov
movsb
cwtl
pop
sbb
push
xor
popa
pop
pusha
outsb
or
sbb
insl
adc
mov
ja
mov
and
jb
inc
xchg
xchg
or
test
loopne
sbb
mov
push
arpl
xor
pushl
sbb
mov
aad
arpl
xchg
xchg
mov
cli
out
fdivs
in
pop
mov
cmp
sbb
bnd
nop
xchg
insb
ljmp
push
or
mov
hlt
add
faddl
lods
mov
incl
and
jmp
scas
repnz
dec
rol
mov
mov
sti
lcall
lret
dec
insb
inc
xor
test
sub
mov
push
scas
ret
dec
or
ret
cli
sub
loopne
dec
popa
mov
inc
mov
addl
cld
pushf
push
cmp
fbld
xchg
pop
setp
pop
mov
push
dec
add
xor
pop
lock
jns
push
inc
addr16
in
std
xor
mov
call
std
std
jp
scas
scas
cmp
pushf
pop
insl
jmp
sahf
rorl
insb
fwait
xchg
test
jmp
enter
sbbl
insb
out
popf
mov
and
ljmp
rolb
imulb
pop
jae
pop
mov
mov
pop
cli
aas
in
in
mov
mov
gs
xor
cs
dec
and
inc
int
push
aas
xchg
mov
xchg
dec
rcrb
andl
jne
lcall
jb
popa
push
and
mov
jno
das
lret
mov
sbb
decl
fs
fistpl
test
jne
cld
mov
lea
movsb
jg
lcall
mov
xlat
pusha
push
loopne
mov
or
sub
ret
mov
cmp
jne
imul
ljmp
rolw
shlb
icebp
call
sbb
cmp
ss
mov
loope
push
ljmp
sub
ljmp
sbb
out
shlb
mov
xchg
insb
mov
pushf
ret
cmp
fs
mov
jg
decl
enter
jno
and
inc
fwait
pop
sub
mov
inc
mov
jmp
leave
cmpl
inc
xor
add
jmp
inc
popl
push
mov
in
dec
out
ss
xchg
mov
jmp
mov
ljmp
popf
jmp
jb
lret
jbe
xchg
push
xor
mov
call
subl
ficoml
and
push
mov
xor
leave
insl
inc
push
cs
mov
cmp
stos
mov
sub
out
ffree
insb
fdivp
call
movsl
ljmp
push
sbb
orb
movsl
cmp
lcall
mov
ljmp
ret
xlat
ret
jp
and
xchg
jg
subb
jge
sub
das
cwtl
and
imul
xchg
movsl
dec
push
mov
ds
cwtl
out
lods
pusha
scas
enter
out
nop
mov
testb
rolb
decl
daa
add
cwtl
sarl
jae
out
and
jb
or
hlt
sbbb
scas
aas
hlt
ljmp
nop
test
inc
jb
leave
pop
or
and
stos
inc
push
imul
icebp
fistpll
lea
stos
xchg
push
cmp
mov
ja
loop
call
push
es
push
fists
icebp
inc
dec
rcrl
fs
xor
and
inc
iret
nop
mov
daa
inc
bound
add
lret
lods
cld
ljmp
push
jge
mov
sbb
pushf
fstps
rorl
xchg
inc
add
aas
and
incl
outsb
mov
and
cmp
or
mov
lcall
xchg
push
jmp
mov
aad
stos
cltd
cwtl
xlat
ss
movsl
xor
shlb
cmc
arpl
pushl
push
sub
mov
cltd
mov
mov
push
fsubrs
fistpll
or
mov
xchg
loope
sarb
lahf
outsl
adc
adc
lahf
cs
adc
jns
jl
test
push
movsb
pushl
lods
push
rorl
mov
sbb
addl
dec
xlat
rep
adc
lret
jg
loopne
decl
push
loope
lret
mov
sbb
jnp
dec
in
dec
lcall
cmpsb
loopne
mov
cmp
dec
xor
and
insl
jne
fwait
push
pusha
xchg
pusha
xor
xchg
jb
int3
ljmp
shrl
inc
scas
lcall
roll
dec
mov
push
insb
test
pushf
push
jge
ss
fs
aad
cmpsb
xchg
imul
cmpsb
mov
jae
pusha
icebp
jbe
lcall
push
je
xchg
mov
push
mov
cmp
scas
or
call
push
lods
fldcw
mov
cmp
lods
fucom
and
pushl
sahf
pushf
inc
sbb
pushf
scas
rcl
xor
xor
jo
cwtl
arpl
or
hlt
repz
cwtl
cmp
lret
jmp
fistl
jne
add
aam
mov
dec
jmp
mov
mov
push
in
repz
mov
in
cmp
movsl
and
popa
sti
mov
mov
add
push
pushl
push
or
dec
neg
push
sub
je
sbb
sbb
pushl
or
sti
lret
dec
lods
add
push
push
pop
sbb
scas
fbstp
loope
inc
dec
fdivp
or
cmpsl
pop
mul
mov
mov
push
pushl
inc
inc
push
mov
mov
add
in
icebp
xor
jl
cmp
and
jmp
lods
dec
loope
ret
pop
or
push
test
mov
into
imul
outsb
ror
out
xchg
mov
mov
mov
mov
push
sbb
popf
jl
xor
pushf
adc
xchg
sbb
mov
jg
inc
and
adc
dec
dec
pop
inc
dec
nop
mov
movsl
mov
movb
sbb
cltd
mov
ljmp
repnz
out
iret
push
mov
xlat
add
daa
sbb
mov
xor
dec
sarb
jecxz
xchg
jp
jmp
push
or
mov
xor
in
mov
sub
sbb
cmpsl
mov
movsl
xor
push
in
push
decl
arpl
cmpsb
jns
stos
xchg
pop
rolb
loope
mov
mov
testb
subl
sbb
movsb
sub
js
mov
inc
mov
popa
mov
incb
cltd
push
rolb
stos
or
movsb
pop
jg
lcall
iret
mov
sub
mov
push
push
nop
jnp
mov
fldt
sahf
je
jp
out
lcall
lea
cs
xchg
popa
js
popf
push
lahf
mov
xlat
mov
mov
flds
or
lds
js
fldpi
pop
xor
cmpsb
sbb
sub
movsl
jge
cmp
jmp
sbb
xor
ljmp
clc
add
adc
push
enter
popf
sub
adc
js
ljmp
xchg
lods
negb
in
or
out
lea
fs
push
aaa
xorb
jns
fistps
pop
jb
decb
cmpsb
ret
and
mov
insb
loopne
sub
std
decl
aam
outsb
push
rorb
xchg
mov
nop
loopne
scas
cmp
nop
xchg
and
and
dec
sar
rorb
xor
jnp
insb
push
push
pop
xchg
mov
pop
mov
out
cli
jmp
loope
jbe
mov
stc
out
adc
fists
jne
les
xchg
jg
fisubrl
fmul
aas
lcall
xchg
adc
sbb
call
in
push
or
push
xchg
adc
sbb
and
lret
cmp
call
test
fidivrl
pop
xchg
arpl
mov
jecxz
cmp
iret
jne
ret
xchg
hlt
jp
push
mov
int
in
aad
xor
std
sbb
mov
mov
inc
in
xor
loope
rorb
lcall
sbb
cmp
xchg
das
gs
hlt
mov
jns
stos
mov
sbb
incl
nop
jae
add
fisubs
rorb
dec
jecxz
push
in
mov
mov
inc
pop
pop
adc
call
in
mov
sub
lcall
sti
pop
cli
aad
pop
xor
lcall
cmpsb
cmp
scas
cmp
jg
mov
into
push
mov
aad
insl
in
adc
pushl
cwtl
lods
lods
xor
fadd
push
icebp
mov
cmp
mov
push
icebp
aaa
jmp
pop
into
aam
mov
mov
mov
xor
xchg
nop
cmp
ds
push
ret
cmpsb
jmp
jp
pusha
sti
lahf
lods
aam
ror
fwait
lock
adc
push
addr16
loop
in
ds
inc
lock
sahf
or
mov
hlt
jbe
jg
mov
pop
lahf
outsb
cmp
ljmp
and
mov
cmp
test
push
stc
push
pop
mov
dec
push
cld
push
pop
or
jmp
daa
std
cmp
jo
jo
jno
inc
and
jbe
decl
mov
sahf
arpl
jb
jecxz
adc
lods
loope
cmp
add
outsl
mov
fdivrp
incl
sub
sti
inc
sbb
mov
adcb
gs
aad
aam
pushl
clc
je
and
or
jecxz
pop
jnp
push
push
arpl
movsl
pop
sar
in
into
xchg
ja
jmp
and
repz
mov
mov
daa
push
kmovb
incl
loop
movb
and
jne
adc
test
or
lods
test
lods
stos
out
xor
mov
inc
mov
inc
jle
bnd
pop
out
inc
ja
xchg
sbb
lret
push
incl
jnp
fcmovne
inc
sti
dec
or
mov
sti
cmc
std
and
and
adc
cli
or
lods
fists
std
push
sbb
movl
fisttpll
ljmp
inc
or
leave
sub
int3
lcall
stos
sbb
pop
mov
clc
xor
jg
call
insl
pushl
stos
jo
out
mov
cli
shrb
xor
sbb
lods
call
mov
and
pop
push
lds
and
cmp
adcl
or
jecxz
mov
fbstp
cmp
ja
lcall
rcrl
fprem1
adc
push
cmp
cmp
mov
xor
faddp
test
xor
mov
fwait
push
std
mov
sub
adc
scas
incl
jmp
adc
mov
push
and
jo
cmpsl
int
in
jg
dec
pop
lcall
lcall
mov
bound
jge
and
nop
aaa
push
test
not
dec
std
scas
cli
lcall
cmc
mov
inc
cmp
cmp
dec
stos
in
push
push
lret
shl
mov
clc
pop
icebp
mov
popf
addl
inc
ss
rcr
fidivrl
sub
rcll
ljmp
lcall
xor
shrl
fs
pop
mov
loop
dec
pop
and
inc
rcll
and
push
mov
fsubr
sub
mov
jns
aaa
fbstp
loope
push
addr16
mov
jb
jle
push
aaa
pop
mov
xchg
mov
lods
dec
loope
jo
mov
mov
imul
xchg
dec
sub
clc
rcrl
daa
dec
daa
mov
mov
add
stos
fbld
jnp
mulb
inc
add
cmpl
or
xor
and
xchg
daa
push
cli
sub
sub
mov
push
xor
jns
jg
jmp
dec
pop
mov
xchg
or
stos
mul
dec
add
cli
ja
cmp
sub
push
mov
fs
cltd
mov
xor
ss
lcall
adc
sub
dec
lods
popl
fcom
jg
dec
or
repz
jmp
or
mov
test
mov
in
xchg
adc
insl
cmp
call
push
test
jmp
push
or
adc
cmp
shrl
clc
pop
mov
pop
decl
inc
call
inc
rorb
sbb
push
jbe
aad
pop
mov
jmp
mov
jns
push
adc
aas
ss
movsb
les
mov
jp
bound
cmp
pushl
lahf
push
mov
ficomps
out
cmpsl
scas
jae
adc
mov
aad
call
or
sbb
pop
inc
mov
jne
pushf
movsl
mov
je
mov
call
adc
dec
inc
cltd
insl
cmp
arpl
lea
sub
and
mov
lcall
mov
lock
or
jbe
dec
clc
inc
ja
xor
mov
fistps
in
out
orb
push
cld
call
mov
lret
dec
adc
addl
jns
shlb
push
lods
rorl
es
insb
inc
and
sbb
push
aad
cmp
repnz
lcall
dec
addr16
scas
mov
inc
jmp
je
ss
rorl
mov
cmpsl
sbb
ljmp
adc
repz
and
sbbl
pop
outsl
aaa
decl
movsb
dec
imul
mov
push
inc
lahf
out
adc
lods
cmp
jp
ljmp
xchg
scas
pop
lea
push
call
sub
inc
xchg
push
dec
jmp
push
inc
xor
add
lcall
in
aas
subb
pop
mov
push
add
loopne
imul
call
push
pop
adcl
fs
sbb
nop
mov
fdivl
cmp
add
std
add
sti
push
rcrb
outsl
stos
es
sti
hlt
cmovb
ja
dec
dec
xor
inc
jne
dec
mov
decl
jns
outsb
jae
mov
movsl
ljmp
or
out
and
add
jnp
mov
push
std
outsl
ljmp
daa
push
inc
adc
shrl
loope
push
xor
ljmp
out
xchg
movsl
into
data16
in
jg
andl
mov
mov
pushl
stos
ror
stos
lods
icebp
fdivs
push
loope
jmp
cmpsb
sbb
in
inc
dec
in
incl
or
ljmp
mov
adcb
xchg
dec
xchg
gs
xchg
cli
dec
cld
cmp
cmp
dec
xor
mov
call
outsb
push
insb
pop
push
pop
mov
pop
xchg
ljmp
add
xor
call
pop
movsb
jp
jge
gs
popf
sbb
pop
or
and
std
out
cmp
cmp
mov
in
adc
jae
int
int3
push
mov
call
pop
or
and
out
orl
fwait
cs
mov
add
test
into
push
movsb
popf
sub
pop
aad
inc
shl
inc
cld
xlat
call
push
push
mov
ja
or
test
int3
out
mov
mov
call
sbb
lret
pop
push
jo
loopne
adc
rorl
push
xchg
push
jae
mov
mov
jmp
mov
pop
xchg
rol
cmpsb
pop
xlat
decl
mov
das
adc
jns
mov
push
sbb
push
xchg
loope
mov
xor
fsubr
cld
incl
enter
adc
je
std
test
pop
les
jne
decl
jmp
nop
sub
lods
and
je
push
mov
shrb
in
mov
data16
jmp
dec
sarb
sbb
pop
mov
jmp
push
pop
out
les
decl
pop
aas
or
pop
repz
sub
adc
data16
lcall
cmp
mov
or
ljmp
and
lret
adc
inc
popf
incl
mov
mov
inc
sahf
cld
dec
movsl
mov
mov
sbb
lods
sbb
fsubr
mov
das
mov
faddp
sti
jb
outsb
imul
cli
xor
pop
int
das
sar
sub
pushl
xchg
mov
jne
stos
scas
inc
imul
decl
inc
and
std
adc
mov
pop
or
add
sbb
stos
clc
incl
repnz
hlt
aad
loop
faddl
mov
bnd
test
nop
test
scas
cli
pop
add
sub
inc
or
push
xchg
xchg
mov
nop
popa
cmp
jo
push
in
daa
mov
jg
fcoms
inc
cld
or
shll
push
inc
leave
sbb
lret
push
dec
pushf
popa
call
xor
mov
std
sub
xor
fidivrl
lcall
dec
daa
adc
fstpl
lret
dec
and
test
and
and
mov
lret
sti
popa
push
inc
mov
out
cli
pushl
mov
add
push
pop
insl
push
cmp
lcall
push
push
fsubrl
adc
inc
fidivl
sub
sbb
pushf
sub
mov
mov
imul
add
das
lcall
bswap
sbb
mov
xor
mov
adc
outsb
sar
push
ret
pop
mov
lret
pop
mov
sbb
lret
mov
inc
mov
or
decl
aam
pop
leave
ret
sti
les
mov
lret
aad
push
push
repnz
arpl
mov
push
pop
push
test
fsub
fnsave
pop
or
dec
fcomip
fwait
clc
popf
stos
out
imul
cmpsl
inc
dec
push
jge
sub
sbb
jne
jge
and
inc
test
sbb
rol
sbb
pop
out
insl
pop
jmp
sbb
jae
pop
add
repnz
xchg
or
outsb
mov
pusha
pop
sbb
sti
xor
pushl
mov
test
and
xor
mov
pop
jmp
jg
inc
jmp
lret
cmp
push
leave
dec
pusha
mov
add
js
jnp
repnz
mov
icebp
push
jb
dec
pop
inc
ss
fcmove
test
addl
sarl
lcall
xchg
ficoml
mov
nop
xor
adcl
dec
fwait
cmp
fsub
lea
gs
lcall
xchg
popa
and
adc
sbb
pop
ror
sbb
or
fimull
or
fisttps
or
mov
inc
addr16
dec
int
jg
adc
cli
adc
scas
stos
mov
scas
and
std
mov
out
cmpb
int3
adc
int
inc
fdivl
fbstp
jmp
out
aam
daa
mov
cmpsl
push
mov
xchg
dec
mov
fldl
rcr
sub
sar
addr16
sbb
decl
imulb
imul
shll
cmp
and
xchg
xchg
push
lcall
pop
cltd
mov
loopne
xor
add
mov
daa
cmp
mov
incl
cwtl
xchg
lea
aaa
jg
loop
sub
aam
inc
sbb
sub
hlt
mov
call
fstp
and
mov
jnp
pop
dec
sub
lcall
scas
add
xor
pop
fucomi
dec
stos
sbb
add
incl
cli
loopne
mov
cmpsb
mov
test
shlb
mov
fldpi
xor
pop
mov
cltd
pop
repnz
insl
sahf
push
xor
out
movsl
ds
ljmp
incl
cmp
sbbb
adc
stc
dec
inc
pop
call
lock
add
loopne
inc
inc
sbb
adc
adc
pop
dec
push
and
mov
outsb
pop
inc
jecxz
fbld
cwtl
pop
push
pop
aam
push
push
pop
and
xchg
xor
decl
push
insl
shr
test
rep
mov
fnstsw
mov
test
pushl
dec
ficompl
sbb
cmc
aam
or
xchg
dec
js
cmpsb
jo
jl
shl
hlt
pusha
out
xor
push
imul
jge
les
in
stos
fldt
jle
adc
mov
cmp
inc
cmp
add
icebp
lock
mov
mov
enter
mov
mov
lcall
data16
sbbb
pop
repnz
dec
test
push
test
stos
mov
add
outsl
aam
jmp
data16
std
push
fstpt
lock
fadds
call
xor
xor
mov
jl
es
mov
test
cmp
pop
cmp
cwtl
fsubrp
test
int3
cmp
in
mov
out
xchg
je
cmpsl
leave
daa
push
notl
clc
xchg
mov
pop
addr16
gs
push
in
outsl
dec
enter
inc
pop
outsb
in
mov
mov
pop
dec
jl
shll
xor
loopne
test
add
inc
sub
pop
incl
push
in
popf
insb
pop
add
push
xor
js
push
mov
jb
or
mov
into
dec
mov
jae
adc
iret
xor
movsb
xchg
push
jns
adc
sub
in
incl
xchg
xor
add
mov
addr16
lea
mov
movsl
dec
jle
dec
push
mov
sub
sub
lock
nop
clc
xchg
lcall
dec
ret
icebp
cmp
inc
or
mov
rorl
xchg
sarb
cli
sub
jecxz
pushl
xchg
sub
xchg
icebp
and
adcl
add
movb
inc
dec
cmp
push
jnp
dec
jg
inc
add
pop
mov
lods
stc
rcrl
fbld
scas
das
and
pushl
loop
jmp
ja
or
pop
cmp
xor
jo
or
pushf
test
inc
aaa
cld
pop
cmc
jbe
jp
xchg
nop
std
js
psrld
xchg
sub
mov
std
repz
jnp
fcom
and
das
or
xor
sub
jg
cmp
dec
mov
pusha
notl
mov
pop
xchg
je
mov
jns
cmp
mov
pushl
test
lret
subl
in
fisubs
and
sub
xchg
xchg
test
dec
mov
cmp
adc
outsb
push
arpl
pop
mov
scas
pop
and
shl
lock
data16
iret
mov
filds
stos
iret
push
cmpsb
in
xchg
push
ljmp
jecxz
movsl
inc
jp
clc
mov
test
mov
add
add
fcomps
out
cli
xor
jnp
addr16
mov
clc
aad
adc
subl
arpl
or
xor
jne
stos
jmp
mov
fsubrp
outsl
dec
cmpsl
add
push
lret
push
pop
cmp
addr16
cli
jnp
iret
and
in
sti
fistl
fcomip
ja
movsl
or
ljmp
outsl
cmpsb
pushf
or
push
lods
call
and
pop
icebp
je
sbb
and
pop
cld
lcall
loop
cmpsl
cmp
xchg
xchg
loope
pop
loope
push
mov
pop
icebp
mov
or
call
push
lods
pop
cli
cld
pop
cmc
aas
lea
mov
bound
loop
mov
jg
jmp
je
movsb
sarb
mov
and
fwait
inc
dec
dec
or
mov
sub
movsb
outsb
mov
jbe
push
cwtl
out
cmp
pop
xorl
push
mov
ficompl
lahf
dec
out
xchg
pushf
lcall
jecxz
pusha
call
mov
cmp
jl
pop
pop
cmc
adc
sti
out
mov
or
aad
jb
adc
decl
lret
jecxz
jb
or
iret
mov
mov
mov
mov
mov
jmp
xor
jb
sbb
dec
scas
popa
std
test
push
cmp
jle
mov
dec
ss
ja
outsl
pop
aas
movsb
into
fidivrs
lcall
xor
dec
xor
add
mov
sbb
fyl2xp1
pop
fnsave
dec
add
fsubs
sub
xchg
and
xchg
mov
idiv
jl
in
pushf
mov
push
cmp
insl
shr
out
sahf
dec
out
call
jl
cmp
loop
adc
das
jnp
xor
mov
mov
rclb
rorb
cmp
and
adc
and
dec
scas
sub
dec
mov
xchg
jecxz
test
cmpsb
decl
pop
jbe
clc
mov
sti
mov
pusha
xchg
cmp
fsubr
jae
arpl
cmp
sar
cmp
push
leave
xlat
pop
inc
sub
pop
xchg
test
das
sbb
icebp
out
xchg
sbb
loop
inc
push
cmp
pop
jmp
push
das
roll
inc
jp
out
cmp
rolb
lods
or
lcall
xor
loope
repnz
cmp
pop
orb
into
push
mov
inc
addr16
or
xchg
in
push
and
incl
sub
pop
xor
jo
outsb
lock
xor
pusha
icebp
mov
in
fldenv
adc
loope
lcall
shr
out
push
jmp
pop
mov
out
cmc
mov
jl
enter
cwtl
mov
mov
and
pop
lods
in
or
xor
and
push
call
data16
pushl
xor
outsb
mov
arpl
cmp
stos
or
cmp
std
fildll
sub
mov
outsl
je
push
mov
lock
hlt
xchg
dec
out
push
mov
leave
test
mov
jo
subl
push
xchg
cmp
mov
sbb
imul
add
inc
test
insl
hlt
mov
frstor
lcall
pop
mov
dec
outsb
int
mov
add
mov
xchg
mov
cmpsl
push
xchg
and
mov
lret
sub
mov
push
test
pop
dec
pushf
jns
mov
add
inc
cld
aaa
cld
scas
test
fsubs
cwtl
popf
pop
hlt
aaa
cld
pop
mov
clc
jg
mov
lock
sbb
imul
cmc
push
sub
scas
mov
test
sbb
lret
mov
or
shl
mov
jge
sbb
sub
sahf
subb
dec
andb
jg
stos
shrb
adc
cli
nop
push
in
call
lcall
decl
adc
or
pop
or
outsb
data16
stc
sub
inc
jns
vmovups
ljmp
mov
std
enter
mov
dec
sahf
xchg
and
cvtpi2ps
gs
push
fsubl
push
pushl
shr
xor
mov
fimull
shrb
scas
out
adc
fstl
dec
inc
and
call
adc
push
dec
lea
xchg
in
scas
clc
stos
inc
cli
add
hlt
arpl
inc
xor
loop
popa
call
inc
mov
mov
inc
add
jbe
push
pop
mov
out
sahf
jecxz
cmp
jmp
xchg
sub
lock
rcrb
xchg
and
mov
es
dec
into
in
ss
sub
ljmp
jle
les
mov
test
in
xor
mov
mov
inc
inc
test
and
sub
add
cmp
dec
cmpsb
mov
xor
jmp
mov
adc
jne
sub
call
cld
fwait
arpl
inc
scas
adc
imul
cli
sub
cld
insl
int3
xor
mov
push
push
les
mov
xchg
xchg
das
or
mov
ss
fld
jl
test
aad
cs
pop
dec
mov
fdivr
jns
sub
int3
ja
add
mov
rclb
repz
mov
decl
sbb
xor
sbb
jg
xor
mov
repz
cmp
xor
cltd
mov
pop
dec
test
sbb
out
fsubrs
scas
in
add
adc
push
or
jecxz
lods
xor
call
pusha
xchg
and
xor
mov
fmul
push
jmp
cmp
aaa
sbb
ret
push
frstor
jmp
dec
hlt
mov
aad
outsb
xchg
pop
cwtl
mov
cmpsl
cmpsb
pop
faddl
mov
pushl
pop
dec
outsl
aam
push
pop
rcrb
sub
inc
sti
xorl
jno
xor
jmp
mov
mov
push
adc
and
loope
push
and
xchg
pop
pop
scas
jg
jle
or
les
pushl
push
xchg
enter
out
adc
adc
inc
push
push
push
shll
or
cmpsl
pop
maxps
incl
enter
push
add
push
mov
cli
into
push
data16
ljmp
xchg
pop
fs
mov
sub
ror
jl
and
incl
loopne
sbb
adc
pop
and
push
push
das
fs
pop
jmp
in
sbb
xchg
cmp
mov
push
int3
rorb
insb
cmp
das
clc
lcall
insb
in
notl
fisttpll
inc
das
rclb
push
jb
cs
xchg
jmp
mov
das
lahf
punpcklwd
xchg
mov
dec
xor
mov
outsb
shlb
ljmp
dec
test
jne
repz
sub
lods
cmp
mov
loopne
std
or
lock
adc
inc
inc
jnp
xchg
cmp
mov
jae
cmpl
lods
sbb
fsubr
pop
cmp
rcl
test
cmp
dec
dec
call
int3
cmpsb
and
int
daa
aaa
cmp
cltd
push
movsb
outsl
clc
decl
popa
repz
mov
lods
push
pop
push
aaa
rolb
fcoml
hlt
inc
cltd
push
call
and
cmp
sbb
or
xchg
lea
jae
mov
ja
pusha
fdivs
cld
popa
fldt
dec
in
andl
lcall
jmp
sub
sub
mov
out
fs
mov
es
xchg
adc
sti
incl
push
fdivrl
fdivp
sub
cld
outsb
in
cmpsl
in
repnz
into
dec
push
call
lds
add
sub
lods
sub
fmuls
imul
jae
pop
add
hlt
aad
jge
mov
dec
test
xchg
les
mov
outsl
cmpsb
hlt
cltd
je
test
or
mov
cwtl
push
std
addl
mov
mov
pop
aas
ss
call
out
mov
sub
pushl
pushf
dec
outsl
call
cmp
stos
ljmp
cld
or
pushf
mov
sub
fcomip
call
ret
inc
xchg
sub
dec
test
mov
clc
clc
cmp
jmp
inc
lods
orb
fs
fdivr
or
hlt
and
mov
test
std
cmp
dec
jne
or
icebp
xor
inc
lcall
imul
dec
sub
into
std
or
or
jns
mov
stos
dec
mov
es
cmp
cmpb
shll
mov
int
dec
mov
or
cmp
mov
mov
daa
xchg
cmpsb
push
leave
mov
outsl
jge
test
imul
call
lret
push
jl
inc
hlt
xchg
cmp
fisubrl
repnz
sub
das
incl
aam
mov
fdivrs
jb
mov
cmpl
cmpsb
push
dec
cmpb
pop
push
add
ljmp
push
mov
cmp
sub
inc
cmp
pushf
adc
sub
sbb
lods
jns
les
arpl
ljmp
cli
or
cwtl
push
mov
adc
push
push
gs
mov
fs
xor
adc
ljmp
jb
adc
cmp
addr16
daa
cltd
pop
dec
lahf
fs
loop
leave
cmpsb
ffreep
sahf
ret
ljmp
pop
pop
xchg
add
mov
push
inc
push
sbb
bound
pop
pop
push
jle
sub
xchg
inc
ret
xchg
and
aam
dec
lods
and
ljmp
call
pop
pop
sbb
xchg
loope
pop
stos
push
into
mov
gs
lcall
xchg
imulb
mov
jg
mov
pop
cmp
sub
adc
popf
ljmp
enter
cmp
add
sbb
jae
inc
in
shll
div
add
jg
call
or
pusha
mov
gs
jp
push
orl
orl
jmp
outsb
push
mov
loop
mov
push
adc
cld
sbb
out
js
xchg
ja
enter
jmp
iret
ret
int3
repz
cs
pop
adc
pop
jae
fistpl
dec
leave
sbb
push
mov
shrl
insl
outsl
pop
and
cwtl
aas
jmp
fidivrl
jg
enter
sub
daa
and
xor
xor
mov
jo
in
mov
insb
mov
mov
or
pop
movsb
cld
mov
test
pop
adc
fists
pop
push
mov
imul
insl
mov
sub
pop
mov
jg
loope
xchg
fcomp
xchg
sub
or
ret
cwtl
sub
js
fisubs
in
jne
lret
call
pop
jo
mov
clc
jo
pop
xchg
in
pop
push
xchg
ds
clc
outsl
sub
ljmp
sub
aad
jp
jl
into
cld
subb
and
xlat
andl
lret
imul
pop
dec
push
in
inc
or
test
fdivrp
pop
pop
lcall
ljmp
repz
lods
or
push
in
cltd
test
jg
aam
dec
in
xor
fwait
lcall
movsb
pushl
enter
gs
in
fidivs
lcall
adc
aam
loope
fmull
lods
dec
xchg
mov
into
push
les
push
mov
pop
mov
dec
ss
cmc
mov
mov
xor
jno
xorl
sbb
in
shlb
add
inc
sbb
lcall
adc
mov
les
movsl
pop
cmpsl
insl
adc
neg
rorl
test
or
decl
jle
sarb
adc
arpl
cmpb
dec
je
or
jmp
stos
pop
das
es
cld
mov
xchg
lds
repz
xchg
cmp
jmp
and
stos
inc
scas
pop
pop
xlat
rorb
cld
mov
popf
sub
test
mov
aam
lds
call
aas
sbb
cmpsb
shr
movb
pop
sub
xor
bound
adc
pop
lds
jns
sahf
lcall
dec
jg
cmpsl
mov
gs
into
ret
std
ds
sahf
lret
call
add
fmulp
push
out
pop
push
popf
lods
pop
popa
dec
lret
cmp
inc
inc
push
jmp
dec
or
lods
adc
sbbb
mov
jo
js
scas
popf
and
lret
adc
call
mov
ficoml
xchg
or
clc
jmp
mov
test
cld
pop
sub
mov
jecxz
and
xchg
aaa
outsb
push
dec
or
leave
jnp
push
add
cmp
pop
mov
orb
lds
enter
jae
mov
imul
ljmp
dec
xchg
sbbb
xor
jmp
mul
xchg
push
paddq
pushl
cmp
sub
ss
mov
mov
adc
mov
push
in
out
jle
xchg
fcoml
and
cmp
andl
pop
mov
push
stc
nop
add
xor
jbe
inc
inc
and
aas
in
jmp
fldcw
sbb
adc
scas
stos
shl
ds
ljmp
subb
mov
fcmovb
add
lcall
mov
sbb
inc
lods
lret
je
nop
add
mov
insl
and
mov
mov
push
pop
jg
test
pop
lcall
sub
popf
mov
idivl
lcall
cmp
push
jp
jmp
xor
outsl
js
mov
std
jmp
add
xchg
shr
lods
pop
or
mov
sbb
sub
ja
mov
cmp
push
les
data16
push
into
aaa
jne
pushf
fstpt
mov
mov
jmp
rcrl
ret
inc
xchg
cmpsl
popf
and
rcrl
loop
mov
out
jg
pop
cmp
inc
mov
addl
mov
xlat
push
and
nop
lock
adc
ljmp
rolb
sbb
pusha
cltd
and
lods
xchg
pop
mul
cmpb
call
or
xchg
cmp
adc
or
jge
arpl
add
push
xchg
jecxz
incl
out
mov
and
xchg
stos
and
fcomip
jg
mov
fidivs
iret
outsb
data16
je
inc
lahf
dec
nop
out
push
ja
testl
dec
cmc
int3
cmp
out
xchg
jge
mov
xchg
rolb
mov
cmp
dec
fcmovnu
and
scas
adc
inc
sbb
mov
mov
aaa
and
sbb
aas
or
adc
jb
iret
xor
sar
ljmp
loope
xchg
adc
rclb
push
loopne
jmp
out
add
adc
sbb
push
mov
rorl
ljmp
sarb
push
xchg
xor
aas
xchg
inc
xor
lret
add
sub
ljmp
fxsave
leave
add
cltd
repnz
jp
dec
jle
jp
std
mov
test
stc
incl
dec
fsubs
sub
je
or
mov
int3
xlat
cmc
fisttps
call
mov
sub
ret
ljmp
lcall
xchg
imul
adc
ret
mov
je
sti
cmp
pop
lods
jbe
decl
lock
sub
enter
cmp
fsubs
fwait
and
inc
mov
mov
or
mov
shlb
popf
fsubrs
adc
insb
dec
lret
incl
mov
std
cwtl
lods
stos
mov
fwait
push
aam
or
loope
cmpl
out
sbb
sbb
in
loopne
xor
repnz
enter
add
out
outsb
sub
lcall
and
jge
push
mov
aaa
sub
inc
and
test
in
rclb
push
dec
mov
cs
sbb
sbb
data16
adc
lcall
pushl
add
int3
cmp
pushf
ds
aas
pop
jae
push
xchg
cmpsl
sub
mov
xor
decl
push
add
inc
push
pop
leave
negl
mov
stc
push
lods
push
dec
in
popf
test
decl
add
cld
mov
in
mov
mov
scas
jmp
mov
pop
cmc
fstl
ret
xchg
fnstsw
jge
mov
mov
mov
xchg
jg
and
ss
out
inc
cmp
mov
xchg
ret
jmp
ljmp
push
adc
lods
ljmp
rol
std
insb
lahf
cmp
xchg
insl
sub
clc
neg
mov
lcall
and
cmp
xchg
shl
sbbb
stc
out
and
mov
js
jmp
scas
js
ljmp
enter
nop
gs
sar
je
fmuls
lock
xchg
fwait
cmp
lcall
imul
faddl
inc
iret
jl
push
mov
jl
push
pop
out
ljmp
mov
or
inc
lret
stos
lahf
std
push
test
in
push
lock
ljmp
rorl
adc
nop
iret
inc
mov
jp
cmp
lcall
mov
movb
or
lock
cmp
or
mov
das
ret
repnz
push
pop
adc
ds
push
in
fs
sti
jns
jbe
sbb
pop
mov
imul
pushf
imul
lret
out
xor
decl
pop
mov
jp
or
iret
cmp
repnz
enter
mov
movsl
stos
cli
enter
mov
cmpsb
pop
test
adc
jo
int
cmp
lock
lcall
inc
cmpsb
in
lds
rorb
sbb
pop
sbb
push
repnz
hlt
std
add
fildll
sub
pusha
out
pusha
subl
incb
out
ss
push
sahf
pop
call
push
loopne
sub
lcall
movsl
jecxz
or
mov
jmp
pushf
popl
cmc
inc
xchg
push
or
pop
pop
lods
jns
das
pop
mov
incl
sub
adc
xor
dec
lods
test
xchg
arpl
pop
adc
lret
mov
push
mov
iret
std
push
push
jnp
inc
inc
jo
sub
jp
dec
push
lods
in
outsl
roll
jnp
das
movsl
sti
andb
pop
sar
jp
mov
aam
aas
in
popf
shlb
mov
dec
setae
push
test
cwtl
jge
cmpsb
jns
mov
push
dec
notl
inc
clc
dec
lret
sbb
call
out
divl
cltd
xchg
push
fisttpl
cmpl
add
jge
mov
dec
and
jmp
mov
aas
pop
movsl
loopne
pushf
popf
dec
sub
test
pop
sarb
push
push
push
pop
cmpl
sar
sbb
out
push
shrb
mov
cltd
aas
int3
call
lahf
fidivs
imul
pop
lret
int3
cmp
scas
stc
push
push
and
mov
pop
call
mov
repz
loop
outsb
cmp
ljmp
inc
test
mov
mov
stos
int3
es
fprem
lods
jecxz
jp
jg
in
xchg
jmp
jle
loopne
sahf
rorl
inc
imul
out
shlb
cmp
loope
fisttps
jo
sub
push
pop
clc
pushl
fistpl
imul
icebp
ds
cmp
xchg
xor
pop
rcrb
and
dec
and
sub
shrl
shrb
incl
cld
fistpll
jns
dec
push
cmpsb
cmp
imul
rcrl
iret
repnz
lcall
lods
mov
cmp
rorb
cmpsb
int
lret
es
mov
or
in
cmpsb
cwtl
je
movsb
decl
jne
push
xor
cld
mov
dec
pop
add
adc
inc
push
or
and
ret
daa
jb
jge
sbb
push
add
mov
dec
jmp
pop
out
sbb
lahf
or
call
cmp
push
rcrl
cmp
std
xchg
imul
sub
enter
mov
push
jb
cmp
add
pop
push
dec
clc
loope
cmp
mov
shlb
fsubrl
fsubrl
adc
hlt
cmp
ret
addb
pop
pushf
push
pop
scas
mov
insl
jg
mov
movsl
adc
jns
jo
push
pop
sbb
out
pop
aad
mov
jo
mov
loop
cltd
sub
shll
call
in
push
add
pusha
adc
sbb
lds
idivb
ljmp
lods
adcl
push
hlt
sarb
lods
add
add
rcll
cmc
inc
jns
stos
mov
mov
push
and
add
imul
nop
je
in
inc
pop
gs
mov
ja
test
fcoms
jae
pop
roll
or
movsl
fs
xchg
sahf
xor
xchg
pop
outsl
in
push
jbe
mov
ljmp
stc
mov
and
test
xchg
pcmpeqb
jae
add
gs
mov
sub
insl
push
das
mov
inc
pop
or
pushf
repnz
decl
enter
mov
inc
in
add
sbbb
ljmp
xchg
xchg
sub
add
repz
add
pop
addr16
dec
push
stos
adc
in
or
xor
mov
ficomps
daa
ucomiss
fbld
mov
lcall
popf
shll
das
orb
js
mov
out
xlat
mov
push
sub
xchg
in
mov
push
push
mov
stos
dec
fbstp
and
adc
adc
divb
pushl
add
cld
out
fimull
sbb
test
xchg
in
shlb
loopne
scas
sbb
lcall
cld
gs
and
and
sti
jle
rolb
adc
aad
call
mov
cmp
movsb
mov
js
dec
jp
push
fdivrp
mov
sbb
push
lea
stos
fucom
call
daa
xchg
jae
sar
ljmp
aaa
inc
mov
and
addr16
div
push
outsl
adc
xrelease
sahf
fisubs
push
sti
rorb
add
out
jmp
fildl
frstor
scas
not
fisubl
test
ret
mov
sbb
addr16
mov
stos
xor
nop
enter
jne
flds
test
test
js
shll
mov
push
pop
jl
cmpsb
ret
scas
pusha
mov
sub
dec
inc
mov
cmp
popf
movsb
xchg
add
sub
sahf
jmp
add
sub
jg
push
xchg
lcall
xor
mov
jl
add
jle
jl
icebp
inc
sbb
daa
xchg
lods
movsl
xor
dec
mov
lahf
add
decl
int
push
jecxz
icebp
test
push
xor
mov
or
and
pop
cs
adc
xlat
clc
or
imul
aaa
test
cs
jo
shlb
mov
fistl
pop
sub
mov
or
push
jns
lcall
js
adc
mov
inc
out
scas
inc
pop
dec
test
repnz
pop
add
sub
incl
cmpsb
xor
mov
cmc
aad
mov
mov
fdiv
pop
sbb
and
andb
icebp
xor
decl
and
nop
sbb
pop
lret
loope
insl
xor
popf
enter
pop
iret
ds
call
add
out
aas
ds
push
sub
fdivr
aas
or
and
ja
sub
pop
shll
xchg
das
inc
dec
and
cmp
xchg
adc
pushl
mov
jae
mov
cmpsb
fst
cltd
push
dec
js
or
sub
cmp
jl
movsl
cltd
sub
jbe
into
mov
adcl
push
pop
test
adc
mov
mov
xor
inc
lret
sub
sbb
or
out
and
xor
outsl
xor
pop
ljmp
cli
jle
adc
popf
xchg
mov
cmpsl
mov
leave
fs
movsb
fs
faddl
mov
push
add
pop
xor
lret
sub
imull
mov
jmp
cmpb
add
mov
data16
push
jae
popa
out
cmp
xor
ret
mov
and
jge
loopne
sbb
lds
sbb
mov
dec
movsb
jmp
scas
mov
push
adc
inc
jo
mov
cmp
aaa
ss
insb
out
scas
addr16
mov
and
insb
push
push
and
cmp
add
ja
mov
jmp
mov
outsl
out
bound
dec
mov
adc
xchg
xchg
pop
pop
incb
imul
fmulp
sub
int
popf
addr16
push
mov
xchg
cs
lea
sub
push
in
pop
and
xor
iret
xchg
outsb
mov
ljmp
mov
insl
dec
std
or
lock
aam
sub
or
aaa
dec
xor
dec
lcall
mov
cmpl
xor
out
es
decl
lahf
dec
dec
jo
pop
mov
jne
dec
adc
test
fdivrp
xor
mov
cld
cmp
mov
add
mov
sti
mull
pop
sbbb
ljmp
cli
arpl
and
inc
push
scas
imul
mull
daa
out
cli
jl
inc
popa
pop
pop
mov
mov
jne
or
mov
mov
int
xchg
and
lcall
sbb
dec
adc
movsb
cmpsb
sub
cmpsb
sub
lret
cmp
push
std
and
cmp
lcall
mov
ljmp
paddb
xchg
mov
iret
push
jg
mov
out
pushl
out
sub
in
inc
pop
or
call
sahf
loop
fnstcw
ljmp
adc
nop
call
cld
dec
sti
jae
push
inc
xchg
lea
jle
jno
fdivr
incl
fisubrl
adc
and
imul
fistl
sahf
jg
jnp
mov
mov
cmp
add
decl
mov
and
and
pop
cmp
sub
and
fdivr
push
pop
push
adc
mov
xor
ficoml
fldenv
adc
stos
mov
xchg
outsb
mov
xor
push
xor
xor
jb
push
ds
pop
xchg
js
jl
jnp
pop
fwait
mov
cltd
std
sti
push
cs
mov
inc
xor
jno
inc
jg
lods
mov
mov
lcall
std
mov
iret
lcall
fists
jbe
mov
sti
test
dec
lret
aas
mov
loope
jno
cmp
sbb
rcrl
sarb
loop
imul
ljmp
hlt
je
lock
add
mov
jg
loope
leave
add
pshufw
aad
test
aas
mov
aas
gs
in
pop
les
ss
jnp
or
sar
mov
pop
fnstsw
fdivl
sarb
sub
cmp
push
pushf
mov
das
sti
adc
fldenv
xchg
sahf
lret
fs
add
mov
mov
jb
xor
xchg
push
jl
fmulp
mov
dec
pushl
mov
mov
xlat
push
push
push
leave
cmp
cmpsb
lods
xor
pop
in
bound
mov
mov
jmp
ret
xchg
enter
insl
repnz
fcoms
repz
ret
xchg
iret
xchg
push
divb
mov
popa
jl
std
jl
jns
ret
test
mov
pushl
xor
stos
ja
jns
sbbb
ja
and
jbe
pop
clc
ljmp
rcr
shl
es
add
pop
pop
pop
movsb
inc
lock
push
pop
xor
decl
insb
ja
xor
inc
push
lcall
adc
sub
incl
xchg
inc
mov
mov
mov
enter
sbb
mov
sub
jle
fcomip
lcall
insb
add
mulb
ss
in
adc
mov
gs
test
sub
sub
cli
xchg
inc
mov
jl
fs
pop
daa
fcomip
decl
loope
inc
mov
lret
adc
dec
hlt
je
pop
insl
add
push
and
xor
shlb
xor
scas
fisttpll
jg
sbb
mov
jg
cmc
lret
mov
cwtl
add
mov
in
arpl
add
jmp
mov
dec
jns
std
mov
dec
push
in
adc
cs
cwtl
mov
xor
aaa
mov
aad
cmpsl
sub
test
pop
mov
adcl
mov
out
mov
dec
rorb
sub
push
scas
mov
pop
movsl
add
in
das
clc
mov
push
push
and
xor
push
incl
dec
jb
ds
sub
add
ljmp
cli
aas
icebp
shr
lret
ds
pop
clc
adc
jae
bound
sti
decl
out
shrl
test
stc
clc
lea
sti
xlat
test
xrelease
lock
loope
nop
jp
xlat
push
or
mov
xlat
mov
dec
push
testb
ret
jno
lahf
and
push
incb
push
ljmp
rcl
push
mov
or
sti
jnp
jbe
leave
cmp
setb
jg
movsl
mov
dec
aam
pushl
xorb
in
mov
or
scas
fcoml
cmp
mov
pop
xchg
add
loope
call
push
cmp
popl
imul
cmp
jmp
jecxz
add
clc
fwait
mov
cld
adc
add
cwtl
std
xorl
jns
test
or
incl
enter
mov
add
lcall
aam
test
gs
push
push
mov
xor
int3
cwtl
inc
dec
push
push
mov
xor
ja
cmp
ficomps
cwtl
out
jmp
xchg
lret
and
filds
int
lods
mov
out
push
cmp
mov
imul
jno
je
jge
push
movsl
jno
nop
outsw
mov
ja
mov
clc
idivb
std
test
jmp
pop
mov
mov
mov
jnp
pop
pushl
sub
fsubl
push
mov
sub
adc
mov
jb
shlb
cmpsl
dec
movsl
push
mov
inc
mov
pop
movsl
lahf
mov
mov
es
mov
jnp
push
rolb
in
jecxz
pop
mov
ljmp
jp
fisubrs
incl
cld
aam
jg
mov
add
jmp
movsb
nop
dec
mov
xchg
fnstcw
fidivs
xlat
das
ds
inc
js
fcomps
push
sub
inc
cmpsb
push
loope
cld
jmp
fsubrs
jnp
sahf
cli
sbb
insl
add
aas
ljmp
or
hlt
fbld
outsb
push
inc
xchg
arpl
inc
int
inc
or
and
pop
rol
jg
jmp
das
dec
cmp
jge
sub
mov
xchg
repz
jl
or
shlb
dec
movsl
mov
test
push
cmc
push
mov
xchg
imul
inc
stc
push
ds
insb
decl
ds
icebp
test
lahf
xor
add
lods
loopne
push
lahf
cmp
push
shll
scas
pushl
jecxz
mov
inc
lods
rorl
pop
or
loope
xchg
incl
inc
lock
cmp
int3
or
add
out
sub
and
fdivrs
std
or
cmc
cmc
scas
and
and
jnp
adc
popa
pop
mov
adc
jmp
int
hlt
jecxz
or
lods
or
cld
scas
or
or
clc
cmpsl
imul
pop
out
ss
mov
aad
or
sub
and
test
cld
pop
adc
int
in
pop
mov
movsl
jge
xchg
notb
lcall
pop
jmp
addb
into
or
mov
mov
and
pop
pushl
pusha
push
sbb
add
push
jmp
enter
pop
into
cli
filds
inc
movsl
repnz
xor
call
push
mov
fdivrs
sub
dec
pop
dec
mov
pop
xor
mov
leave
paddw
sub
add
mov
js
add
inc
out
sarb
and
cs
mov
xor
decl
rclb
jg
and
mov
repz
lret
add
push
pop
adc
inc
push
inc
loop
test
ja
and
mov
fidivl
pop
inc
movl
xor
mov
pop
lds
stos
pushf
out
sub
adc
negb
jnp
out
add
xchg
mov
dec
sbb
sbb
jmp
jno
adc
pop
mov
mov
mov
adc
add
sub
fdivrl
rorl
sbb
dec
sbb
pop
jns
enter
mov
incl
into
mov
pop
fists
sti
int
pop
roll
stos
mov
xor
fcomip
pushl
lds
mov
and
mov
dec
pop
hlt
sbbl
mov
lcall
call
test
dec
pop
xor
add
iret
inc
add
fsubrl
add
jg
mov
inc
insb
rcrb
xor
add
adc
push
arpl
call
sahf
mov
decl
inc
cmp
lea
fsts
fildl
push
and
fbstp
mov
pop
add
mov
mov
fs
into
js,pn
gs
sbb
pop
aas
insb
pop
insb
fs
ljmp
aaa
and
mov
int
jl
or
loop
and
iret
push
dec
enter
lcall
xor
xchg
fsubs
leave
inc
push
and
sub
fildl
cld
pop
test
sbbb
adc
out
decl
pop
sbb
mov
loopne
ss
jmp
lret
jns
mov
aas
jg
mov
xchg
dec
xorl
push
add
or
shlb
arpl
daa
in
in
push
jb
mov
and
adcb
add
mov
push
test
jmp
inc
mov
sbb
add
bound
ljmp
jbe
push
stos
sub
jecxz
out
jle
ljmp
and
pop
sbb
mov
jmp
icebp
mull
xlat
imul
adc
imul
mov
shrl
test
lods
scas
cmp
call
test
or
mov
ss
repnz
out
lret
dec
xchg
or
dec
lret
pushl
faddl
das
lret
or
imul
setns
je
hlt
push
cmp
xor
push
jg
ljmp
mov
pushf
test
out
test
push
nop
ficomps
imull
inc
loope
inc
mov
dec
mov
pusha
or
cmp
aad
hlt
add
inc
cmpsb
jl
cmp
incl
sti
push
sbb
out
push
or
push
pop
cmc
lods
and
add
and
xchg
cmp
je
ljmp
mov
jo
mov
movsb
dec
sbb
mov
mov
movsl
dec
mov
xchg
inc
outsb
mov
push
cli
bound
lcall
roll
das
popa
cmpb
push
imul
sbb
lcall
imul
inc
outsb
push
ds
adc
inc
mov
divl
in
or
pop
out
lds
add
cmc
jnp
pushf
stos
adc
mov
dec
sbb
lcall
mov
fs
repz
aad
adc
ja
xor
mov
mov
aam
mov
lock
mov
add
lods
pusha
out
out
scas
jmp
xchg
pusha
jb
push
ds
addr16
lods
lahf
jecxz
stc
cmp
cmpsb
jae
and
lcall
jp
testl
mov
rorl
sub
dec
jg
add
fnstsw
pop
fs
addb
inc
adc
add
xchg
repnz
popf
jno
ja
incl
xor
xor
das
or
rcll
dec
pop
lcall
dec
incl
xor
pop
or
mov
std
inc
adc
cmpsl
aam
test
test
xchg
leave
sti
in
push
jp
int
dec
icebp
add
call
cmp
scas
xchg
scas
fildll
js
cwtl
sbb
pop
call
add
inc
incl
cli
xor
out
aaa
dec
popf
fcmovbe
icebp
lods
mov
pop
mov
out
xor
ss
or
mov
and
scas
loopne
js
push
mov
pop
sub
cmp
mov
int3
jns
mov
and
or
fisttpl
mov
ljmp
add
xchg
mov
push
popa
dec
enter
jg
sub
std
cmp
xchg
int
ficoml
daa
sbb
inc
or
mov
ljmp
mov
sub
inc
roll
outsl
inc
jb
cmp
mov
cli
out
cli
call
into
mov
xor
cmp
jmp
xchg
or
mov
rolb
out
and
psubusb
sahf
add
sub
ljmp
daa
dec
imul
sbb
call
clc
adc
cld
stc
cmpl
xlat
lcall
decl
addb
mov
inc
pop
shrb
mov
fwait
mov
jmp
call
cmpsl
inc
ret
push
push
cmpsb
inc
iret
hlt
sub
mov
call
aam
dec
incl
push
shrb
sub
rol
adc
loope
add
lock
fnstsw
mov
cmc
xchg
insl
xchg
or
cwtl
mov
mov
jecxz
daa
out
mov
pop
cltd
std
lahf
dec
lods
test
incl
jl
outsb
jo
in
sbb
lret
repz
cmpsb
inc
orb
loope
sub
out
test
adc
xchg
ficoml
in
das
xchg
incl
push
push
test
les
pop
adc
out
insl
lcall
clc
xchg
sub
call
test
xchg
ljmp
sarb
jbe
shlb
shl
jle
out
js
xchg
jne,pn
decl
inc
fsts
decb
xor
les
xchg
daa
mov
int
ret
clc
jmp
push
cmp
and
ucomiss
cmp
lret
pop
scas
stos
sbb
test
and
or
inc
xchg
pop
sub
lcall
pushl
jno
push
clc
jle
inc
push
mov
push
test
sahf
mov
test
pushl
sub
add
xchg
loopne
sbb
xor
into
lret
repnz
frstor
jmp
rcll
push
mov
fs
jl
push
aad
mov
ljmp
les
jge
pop
lret
ret
or
adc
aas
push
ficoml
fisubs
push
pop
nop
and
pop
test
ljmp
cmp
je
fnstsw
test
lcall
xor
adc
shll
mov
dec
or
adc
mov
lods
aad
mov
call
int3
arpl
pop
sbb
das
icebp
mov
pushw
adc
jge
hlt
inc
add
hlt
adc
call
nop
xchg
jmp
inc
mov
mov
pop
addr16
adc
mov
cmc
fsubrl
mov
sbb
rolb
incl
xor
mov
imul
stos
mov
push
cmpsb
cmp
cmp
das
xor
jb
pop
sub
pop
sub
pushl
jb
adc
stos
xlat
outsl
jmp
dec
or
mov
bound
mov
add
das
in
lcall
jae
or
lahf
int
stos
enter
and
jnp
xchg
lret
pusha
sub
sbbl
jmp
pop
dec
cmpsl
push
in
call
xchg
test
out
inc
jle
leave
add
lcall
loope
or
mov
xchg
push
std
ret
sub
mov
iret
push
xchg
mov
push
push
fdiv
out
xchg
adc
xor
sbb
imul
add
mov
xor
out
in
aaa
repnz
imul
call
out
pop
movsb
mov
shll
jb
fisubrl
cmp
imul
movsb
hlt
dec
jae
dec
mov
pop
mov
bound
sar
push
or
inc
lahf
stos
xor
aaa
in
xor
jns
imul
enter
int
xchg
aaa
bound
movsl
aas
cmovb
xchg
es
adc
pop
xor
add
sub
call
dec
mov
mov
fsubr
mov
sub
xchg
sub
push
push
xchg
sar
pushl
ret
fisttpl
add
mov
call
mov
sbb
mov
or
ljmp
aad
adc
fcompl
push
enter
dec
sbb
call
in
jns
cmp
and
fdivr
scas
stos
inc
add
lcall
mov
mov
stos
scas
dec
inc
fwait
sbb
in
pop
fcmove
mov
or
test
fisttpll
mov
ds
es
mov
repz
mov
push
jae
ljmp
mov
push
cmp
fistpll
inc
inc
jb
daa
ja
ljmp
xchg
bound
sub
jg
bound
gs
pop
daa
std
pop
loopne
loop
negl
lock
call
mov
sbbl
push
movsl
int3
and
cmp
test
das
ret
lods
and
das
pop
hlt
pop
nop
aad
push
sbb
push
dec
ss
stos
ds
jmp
les
es
jns
fcomp
mov
inc
pushf
add
rcl
rol
xchg
pop
xchg
push
call
std
dec
jne
icebp
or
ljmp
jb
push
sub
fcoms
in
cmp
ljmp
out
cmp
and
dec
mov
or
mov
inc
sub
push
mov
sub
nop
outsl
pop
rol
lret
mov
scas
std
cltd
ss
incl
scas
test
shll
dec
addb
push
pop
jecxz
xchg
cmpsb
out
cs
sti
xor
call
jecxz
pusha
xlat
sbb
lods
cli
ffreep
cld
mov
shll
mov
pop
push
mov
cmc
push
push
nop
pushf
jae
xorb
popa
mov
dec
fdiv
fldcw
sbb
nop
xchg
ja
fnstsw
imul
movsb
cmc
fisubs
popa
lcall
int3
push
jno
pop
out
jmp
arpl
xchg
jbe
testb
push
or
jp
test
std
xchg
mov
arpl
jle
nop
inc
or
in
mov
jecxz
jbe
das
clc
decl
cmp
imul
jns
leave
enter
push
inc
or
pop
push
repz
js
jle
ss
cmpsl
subb
shl
rorb
jge
enter
push
push
inc
sbb
pushl
mov
cs
mov
testb
xlat
add
orl
cmpsl
inc
and
ljmp
enter
insl
mov
cmp
mov
pushl
lock
lcall
mov
and
pusha
mov
ljmp
jle
psllw
cmp
ror
divl
lcall
cltd
cltd
mov
incl
adc
jge
cmp
dec
jo
ja
mov
daa
imul
arpl
loopne
cli
pushl
repnz
test
aad
loop
in
and
in
inc
fimuls
inc
jmp
aas
aam
or
cmpsb
xor
lret
fadd
test
dec
dec
dec
call
ret
xchg
fcompl
cmpsb
lahf
iret
out
clc
leave
pop
mov
add
ret
decl
xlat
int
adc
and
ret
sub
pop
pop
lds
pop
push
sar
cltd
mov
lahf
ja
fs
mov
aad
incl
mov
cwtl
jge
nop
lcall
add
xchg
gs
ljmp
aad
inc
inc
mov
push
jp
repnz
rorb
rcl
adc
shlb
call
mov
inc
sar
call
fisttpl
mov
xchg
xchg
cmpsl
jbe
jne
xchg
iret
mulb
bound
pop
or
ja
call
scas
ds
and
push
int
pushf
xorl
jmp
adc
and
cwtl
mov
pop
cmp
push
int3
cwtl
fstps
frstor
mov
or
or
in
add
sbb
dec
mov
dec
xor
push
jae
xor
das
mov
add
sbb
adc
add
xchg
cld
aaa
cld
jmp
pop
cld
xchg
shll
jle
aaa
sbb
cs
jbe
in
call
pop
ret
xchg
enter
add
cwtl
inc
aad
into
aaa
cld
decl
xchg
jle
mov
sarb
inc
and
mov
mov
cmp
jmp
cmp
pushl
lret
mov
sub
jno
sarb
push
in
jg
std
jmp
daa
xor
cmp
fnsave
pushf
ret
mov
mov
add
lcall
push
lods
flds
popf
inc
arpl
xlat
ljmp
int3
xor
ljmp
scas
xchg
dec
in
or
pop
jl
mov
adc
xor
sbbb
cmc
push
loopne
xchg
or
in
loop
call
shl
xchg
repnz
fisubrl
or
hlt
popl
stc
dec
add
mov
push
dec
imul
ljmp
pop
daa
int3
addr16
xlat
or
mov
outsl
lret
push
into
jo
sar
pop
test
andl
or
jmp
cmp
lock
add
push
pop
and
clc
xchg
test
and
xchg
subl
fbstp
mov
xchg
dec
sbb
call
or
mov
repz
push
repnz
shrl
nop
negl
mov
out
sub
pop
lcall
icebp
mov
add
bound
pop
lcall
add
sarb
push
movsb
jmp
mov
scas
hlt
xor
fmul
mov
inc
cmp
ljmp
cli
pop
xchg
or
jns
mov
or
xor
ja
inc
aas
in
addr16
lcall
icebp
inc
lahf
stos
mov
cmp
sbb
push
stc
leave
cmc
out
cli
xchg
mov
fdivr
mov
pushl
jle
push
divb
pop
shl
out
inc
dec
pop
dec
hlt
or
push
or
push
mov
imul
mov
push
ljmp
sbb
lahf
mov
into
pop
sbb
sub
in
pop
nop
mov
pop
jl
push
aad
lcall
xor
ret
cmpsl
xor
mov
mov
pop
sub
xchg
divl
dec
and
inc
xorl
mov
sub
std
lods
inc
test
aad
hlt
xchg
cmp
jbe
fcomip
sub
fwait
sbb
insl
mov
loop
dec
sub
push
lods
mov
enter
or
mov
mov
insl
inc
push
popf
push
sub
pop
les
cmp
scas
cmp
and
sbb
inc
jbe
icebp
sub
enter
clc
pusha
jne
pushf
in
sbb
ljmp
xchg
and
mov
or
xchg
test
jo
movsb
cmp
test
pop
push
push
sub
cmc
scas
xor
add
mov
and
jns
les
jmp
fmull
repz
sub
xchg
push
adc
rcrb
mov
push
fcomip
call
and
adc
sbb
rol
addr16
xchg
outsl
xchg
jg
call
jmp
mov
fisttps
jle
cmp
lret
xor
les
xor
jmp
cmpsl
ficoml
cmp
enter
mov
mov
mov
inc
cli
push
pop
mov
test
push
mov
cmpsb
sbb
fs
movsb
daa
mov
imul
lea
call
ret
xchg
xor
insb
adc
xor
gs
adc
inc
jns
nop
sbb
inc
and
jle
push
pushf
jl
cs
xor
shr
ficoml
pop
add
pop
std
lea
mov
incl
mov
divb
inc
inc
das
fs
std
std
jp
insb
and
pop
inc
pop
std
dec
push
mov
push
jo
adc
xchg
mov
rcrl
iret
mov
or
push
ljmp
mov
loope
ljmp
jge
xchg
add
and
cmc
sub
ret
addb
ret
call
icebp
pop
push
dec
sahf
cwtl
fldl
push
pushw
rep
stos
cwtl
call
sar
jg
cmp
es
mov
imul
movsb
mov
xchg
cmp
mov
repz
pushl
test
or
pop
cmpl
ljmp
pop
sub
adc
gs
and
mov
xor
push
cltd
xor
test
mov
sbb
add
adc
jbe
inc
lods
testl
es
push
dec
in
sbb
or
cmovae
int
mov
cmp
ja
pop
pop
in
and
cmc
sbbb
pusha
add
lcall
or
and
sub
sbbl
es
mov
scas
sarl
mov
int
xor
jl
mov
ljmp
int
in
sub
repz
mov
cli
push
testb
outsb
adc
outsb
pop
cmpsb
inc
or
dec
fmulp
xchg
jg
aaa
ret
sahf
mov
jmp
push
inc
and
es
and
and
pop
add
ljmp
xor
sub
scas
bound
arpl
mov
movsl
les
xchg
lcall
iret
dec
nop
adc
loop
push
mov
mov
sub
and
popf
sub
dec
push
inc
pushl
push
je
bound
popf
pop
and
cli
mov
loop
inc
inc
mov
adc
push
pushf
mov
nop
lods
pushl
adc
and
inc
test
pop
out
xor
mov
fisttps
and
dec
adc
sbb
add
decl
test
sbb
les
and
fidivrs
mov
pop
xchg
ljmp
inc
in
mov
mov
aaa
jge
out
and
mov
addr16
incb
movsl
fiadds
inc
xorl
push
cwtl
or
hlt
test
cmc
mov
xor
loope
insl
das
cmp
cltd
call
stc
lret
mov
incl
inc
inc
sub
cmp
dec
pusha
in
popf
xchg
fwait
test
out
jl
push
imul
jmp
sub
add
ljmp
enter
sbb
pop
stos
pop
mov
cmp
mov
hlt
lahf
xchg
popf
mov
dec
inc
add
mov
lret
lods
and
xchg
mov
jp
pop
bound
incl
sub
cltd
fwait
cltd
repnz
mov
push
mov
push
sub
jg
mov
ljmp
or
fidivs
lcall
sbbl
jmp
enter
repz
int
push
rorl
mov
sbb
ljmp
inc
stos
pop
popa
and
add
sbb
incl
push
loop
inc
xlat
decl
add
sub
insl
nop
mov
xlat
push
sti
cmp
stos
jo
ljmp
lods
push
fnclex
xlat
add
and
fstpt
pushl
inc
cli
scas
movsb
sub
outsl
add
lret
or
cli
and
dec
mov
std
pushl
cmp
scas
pop
in
lahf
in
pop
cmp
jg
outsl
js
mov
jmp
add
inc
and
je
push
xor
jmp
mov
dec
out
push
scas
movb
mov
cmp
stc
lahf
or
mov
mov
dec
xchg
jle
push
or
mov
inc
lcall
movsl
pushf
out
jns
push
divl
sub
pop
mov
add
sub
cli
sar
add
ljmp
or
ret
icebp
xchg
inc
movl
jmp
xchg
inc
cmp
icebp
lcall
mov
cli
push
repnz
lods
decl
data16
mov
fisttpll
cmp
js
mov
mov
mov
clc
mov
xor
mov
hlt
mov
lret
int3
or
sbb
cmp
mov
ljmp
leave
loop
inc
call
loopne
es
xor
adc
call
fildll
xchg
mov
dec
fistpl
jo
lcall
rol
aam
and
lcall
mov
xchg
lods
and
test
mov
inc
sub
decb
incl
adc
pcmpgtw
out
inc
jecxz
iret
mov
loopne
inc
loopne
ljmp
add
mov
into
in
inc
sub
es
push
jo
jle
pushl
gs
cli
shlb
out
hlt
dec
push
std
lds
fldlg2
mov
cmp
jb
pushl
ja
sbb
outsl
ljmp
sbb
aam
pop
out
cli
test
or
sbb
clc
call
mov
adc
fidivs
outsl
pop
mov
out
and
in
xor
ljmp
mov
fiaddl
xchg
adc
lds
push
ss
jmp
adc
cltd
dec
adc
xlat
insb
stos
in
lds
push
add
out
sti
repnz
enter
call
repnz
and
mov
icebp
add
mov
lcall
movsb
das
cwtl
fimull
rclb
sub
mov
leave
clc
jnp
dec
add
aas
cmp
lret
add
dec
mov
jp
ljmp
dec
xchg
into
mov
loopne
mov
aas
cmp
fidivs
call
dec
jno
lock
js
mov
in
mov
std
jnp
lcall
push
pop
mov
ljmp
pop
adc
xchg
out
ds
ficompl
adc
push
dec
adc
mov
rclb
pop
sbb
sahf
adc
mov
scas
xor
out
aaa
repnz
rolb
jl
jp
fnsave
ljmp
xchg
popa
test
dec
sti
pop
das
in
js
dec
mov
pop
sub
jmp
xor
inc
loope
push
mov
pusha
push
and
inc
int3
scas
jg
adc
adc
cmp
incl
test
xchg
jmp
test
adc
and
mov
cmp
fs
cmp
ds
mov
sarb
idivb
pop
mov
jp
repz
jae
push
and
sub
repz
pop
nop
js
in
lea
mov
mov
imul
mov
decl
sbb
clc
add
mov
pop
insb
lods
mov
fcomip
decl
pop
or
mov
mov
lcall
dec
divl
sub
xor
mov
and
xchg
fildl
fistl
shrl
mov
call
rcrl
adc
or
adc
iret
push
xor
adc
pop
loopne
loope
test
sahf
ja
movsl
mov
push
lods
jno
sbb
add
lcall
hlt
cwtl
lcall
mov
lods
fdivr
mov
xchg
ss
adc
aad
pop
xchg
ja
and
xchg
movsl
xor
mov
test
jbe
sbb
pop
stos
pop
and
sbb
xchg
stos
mov
fstl
cmp
fisttps
pop
dec
pop
mov
or
cmpsl
movsl
or
sbb
add
or
cmp
sti
in
ror
fcompl
out
popf
pop
dec
mov
or
sti
negb
cs
mov
insl
xchg
xchg
cld
ss
pop
push
outsl
ljmp
test
fadd
in
and
in
sbb
jmp
gs
mov
test
aad
outsl
call
leave
test
dec
pop
sub
xchg
and
mov
orb
sarl
mov
es
jnp
cmp
cmp
mov
cld
cmp
out
insb
fdivrs
call
adc
jle
lock
pop
sub
add
pop
jg
out
pop
and
jae
lds
ljmp
cmp
repnz
adc
push
mov
jmp
je,pt
repnz
repz
mull
adc
and
jne
lods
out
mov
adc
add
jl
mov
xor
fsubrl
mov
repz
inc
jmp
jge,pn
sarl
jne
in
mov
jbe
jmp
sub
ljmp
jo
bound
push
mov
jp
int
sub
cld
sub
call
rcrl
inc
mov
sbb
lret
shll
bound
cmp
adc
lock
orb
dec
fsubp
sbb
addb
or
xchg
inc
add
jmp
xchg
out
ds
cmp
in
lcall
xlat
mov
repnz
jmp
rcr
xchg
ljmp
test
stos
jecxz
fldt
adc
jle
nop
mov
cmc
dec
jp
adc
jle
adc
sbb
rcrb
fiaddl
lods
sub
out
xchg
imul
mov
aad
add
push
push
bnd
fisttps
xchg
xor
mov
mov
insb
js
push
lods
je
dec
loopne
mov
ja
push
rcrb
pop
mov
bound
insb
incl
call
in
mov
into
add
push
push
dec
and
test
decl
lock
lcall
rol
jbe
int
push
sub
xchg
cmp
cwtl
pop
test
push
cli
and
push
out
cmpsl
mov
and
scas
sahf
aas
cwtl
push
cwtl
mov
cli
incb
pop
fidivrl
hlt
dec
mov
outsl
jns
sbb
pushl
sub
cmp
and
decl
mov
push
xchg
hlt
js
adc
in
loop
xor
call
fcomip
push
jp
js
mov
popa
push
xchg
stc
fistps
jns
cli
lods
scas
ds
lods
in
dec
fwait
decb
in
in
insl
jo
pop
pop
mov
or
fiadds
decl
inc
jbe
jge
cmp
sbb
jg
addr16
jno
cmp
test
sub
out
es
jge
push
dec
sbb
dec
in
adc
xchg
mov
xchg
stos
jg
xchg
pop
popa
mov
push
sub
hlt
pop
scas
out
nop
add
cmp
jg
fcmovnb
sahf
inc
or
sti
das
or
sbb
cmpsb
mov
incl
ljmp
loope
mov
xchg
push
cmp
or
xchg
test
or
mov
lcall
popf
scas
adc
lcall
or
jmp
repz
call
pop
mov
jbe
xchg
sbb
sbb
decl
pusha
inc
sub
xchg
sbb
inc
push
lcall
roll
mov
cltd
cmp
ljmp
dec
push
pop
leave
mov
data16
dec
lods
sbb
xchg
stos
push
pop
test
or
xlat
sbb
out
rorl
dec
das
test
sub
push
in
lcall
pop
ja
test
mov
shrb
stos
movsb
and
lds
inc
add
gs
push
fwait
mov
xor
dec
repz
mov
mov
iret
out
imul
je
gs
and
imulb
mov
xchg
or
adc
jnp
xor
imul
mov
data16
adc
dec
dec
jbe
das
mov
inc
mov
jge
xlat
imul
hlt
xchg
outsl
adc
fnsave
ljmp
sbb
mov
mov
push
popf
movsl
mov
insl
pusha
jno
jmp
incl
sbb
lock
or
sub
mov
aad
daa
ss
mov
mov
jge
incl
jmp
iret
sbb
lods
adc
pop
push
mov
fs
int3
lods
cmp
imul
pop
test
aam
in
jl
add
popf
xlat
outsb
in
jne
or
imul
dec
mov
call
fildll
add
icebp
fwait
jbe
mov
push
xchg
mov
call
lret
dec
int
scas
pop
xchg
dec
das
ret
jl
ds
dec
cmpsb
inc
std
xor
in
dec
outsl
xchg
push
fcomip
call
std
adc
mov
sbb
sbb
mov
sti
sub
orl
sarl
add
decl
fsqrt
jp
dec
add
push
cmp
mov
in
ret
pop
push
movsb
pushl
dec
loopne
std
adc
jmp
add
lahf
fidivrs
inc
push
inc
fldl
adcl
jns
fnstenv
rep
jmp
mov
movsl
sub
dec
bound
add
call
jp
roll
dec
sub
dec
lea
sbb
adc
fnstcw
jg
fstpl
fstl
cld
pop
mov
pop
add
mov
loopne
mov
fwait
and
xor
test
xor
loopne
ljmp
cmp
push
mov
stc
roll
adc
outsb
adc
cltd
loopne
pushf
sub
xchg
mov
or
lret
ret
jmp
icebp
mov
push
and
fcomip
adc
cmp
testl
mov
jb
hlt
incl
fmull
or
shrb
nop
mov
lcall
mov
xchg
test
mov
and
mov
adc
jns
push
testb
or
imul
decl
add
mov
addl
out
sbb
imul
idivl
aaa
add
pushl
insl
cmpsb
or
inc
imul
inc
lcall
lods
incl
sahf
std
loopne
mov
and
inc
sbb
scas
loop
xchg
popf
mul
inc
iret
pusha
rol
lret
xchg
ficomps
sub
and
push
out
xchg
add
mov
cmp
mov
push
push
loopne
clc
out
jb
add
jle
dec
xchg
sub
std
lcall
scas
xchg
ret
mov
pop
dec
and
inc
test
sub
std
ljmp
push
fbstp
sub
cmp
iret
enter
xchg
push
int3
xchg
cmp
cmc
ljmp
push
enter
cli
out
repz
cmp
nop
inc
rolb
frstor
sub
cmp
sahf
xchg
jg
and
ds
fisttps
in
xchg
push
test
pop
enter
push
pop
lock
cmpsl
adc
xor
lret
cmc
pop
daa
aam
or
jo
mov
mov
sbb
and
ja
std
test
sbb
and
movsb
lahf
pusha
repnz
out
cli
ljmp
xchg
push
fstps
adc
out
pushf
arpl
cli
ljmp
cmp
push
or
cmp
inc
insl
jns
xchg
lret
loop
adc
push
jp
out
stos
stos
enter
js
pop
xchg
dec
adc
mov
scas
clc
notl
pop
lods
inc
ds
js
xor
aaa
cld
jg
int
inc
inc
xchg
inc
mov
jbe
add
fmul
push
mov
and
sti
dec
push
stos
push
pop
jmp
add
jp
ljmp
cmp
lods
das
pushf
insb
mov
mov
jmp
aam
in
or
scas
sti
notl
ss
iret
sti
lods
lods
fwait
sbbb
mov
jmp
sarb
add
leave
push
xor
ds
jo
cmp
push
mov
pop
push
add
lods
stc
lea
loop
add
loope
mov
xchg
dec
cmpsl
mov
lahf
or
sub
aaa
lcall
mov
test
hlt
lcall
in
decl
lahf
sar
incl
pop
mov
pusha
pop
das
cmp
in
and
xchg
sbb
sbbb
lea
inc
in
hlt
xor
mov
sub
add
pop
das
mov
arpl
jecxz
rcl
out
clc
xor
inc
and
stc
or
movups
repnz
xor
out
aas
mov
xor
jbe
aaa
fistps
dec
or
call
xchg
mov
fisttps
rorl
rsm
test
add
sub
inc
cs
outsl
clc
decl
sbb
sub
sub
mov
inc
sub
imul
outsl
pop
cmc
cmp
es
inc
cmp
sbb
leave
arpl
call
out
xlat
dec
repz
mov
adc
or
dec
xchg
mov
sar
incl
dec
lret
mov
mov
lret
sar
inc
xchg
pushf
and
add
cmp
mov
mov
mov
mov
mov
vminsd
js
mov
xchg
into
xor
out
adc
incl
jecxz
jne
xor
cmp
in
cs
sbb
push
les
adc
insl
xchg
ret
ljmp
mov
sbb
dec
mov
add
lds
dec
das
mov
pop
fdivrs
push
xor
ljmp
mov
dec
in
sub
adc
jno
mov
mov
xchg
jmp
jmp
outsl
test
cmp
cmc
cmpsb
clc
sub
xchg
call
jle
xlat
mov
mov
jle
fwait
inc
and
cwtl
loopne
test
cmpsl
je
ljmp
mov
int3
sbb
jmp
nop
cs
jge
fistpll
dec
mov
pop
shl
push
xchg
cli
mov
ljmp
test
cli
call
inc
adc
sub
jecxz
add
mov
jmp
mov
or
rclb
imul
lcall
aaa
adc
loope
ljmp
dec
in
imul
loopne
jg
mov
adc
mov
push
adc
push
rorb
cmp
lds
jmp
inc
shl
mov
ja
xor
mov
and
roll
pop
ret
cmp
cmp
jl
and
jg
cmpsb
clc
push
das
sbb
iret
pop
pop
dec
or
jnp
pop
pushl
xlat
jbe
add
xchg
mov
mov
paddusb
push
insl
incl
lret
xlat
fsubrs
add
mov
inc
xchg
cmp
pop
pushf
adc
push
decl
sub
jae
repz
fisubs
enter
adc
jo,pn
fwait
mov
jp
pop
idiv
dec
rcr
or
ss
cld
outsl
mov
dec
fdivr
cs
jo
jmp
add
movsb
pop
pextrw
pushf
pop
cld
incl
scas
mov
test
inc
jmp
test
stos
adc
decl
lods
cmpsb
dec
pop
out
inc
jecxz
mov
jns
inc
out
fiaddl
dec
in
daa
insb
aam
inc
push
das
scas
mov
in
push
sti
dec
pushl
push
push
les
and
jecxz
into
stc
jmp
push
mov
pop
jecxz
int
icebp
or
pushf
out
add
loope
mov
pushl
rcrl
test
pop
jle
int
jg
adc
mov
stc
pop
popa
dec
incl
mov
test
outsl
neg
dec
sub
adc
popa
xor
xor
cli
xchg
lret
cld
call
or
test
inc
aad
mov
addr16
sbb
and
dec
or
decl
adc
fsts
or
jecxz
pop
sub
imul
lea
das
sahf
mov
xor
add
inc
xlat
cs
movsl
xor
call
imull
fiadds
jnp
ss
pop
test
xorb
xor
xchg
adc
add
push
sbb
pop
inc
xorb
and
add
addb
mov
and
incl
or
add
fcom
push
mov
add
mov
jg
add
pop
in
dec
add
ret
add
add
rcr
or
dec
orb
push
test
push
test
iret
push
and
or
scas
jle
roll
lock
pop
pop
imul
pusha
das
call
mov
mov
jnp
xchg
movsl
push
idiv
int
daa
add
xchg
dec
and
cmpsl
push
and
cs
mov
push
movsb
push
movsb
inc
scas
push
and
stos
push
and
in
cld
pop
push
push
test
and
imul
push
icebp
in
push
push
inc
pop
pop
add
mov
pop
sbb
add
mov
cmp
push
ds
les
push
jg
adc
fs
mov
insb
or
lret
imul
imul
imul
push
sub
flds
jbe
fstps
jae
cmpsl
fldcw
pop
stos
pop
stos
mov
add
jb
ss
mov
push
mov
push
shll
add
outsl
push
shll
push
fidivrl
iret
outsb
or
push
cs
adc
jns
out
jge
fisttps
fists
xorb
ljmp
movsb
push
add
insl
imul
stc
mov
shlb
mov
pushw
arpl
push
push
push
add
insb
pop
roll
jne
push
aam
push
ret
gs
or
mov
push
pop
dec
ficompl
pushf
addb
jbe
push
data16
jne
notl
inc
xchg
cs
xlat
cmp
out
shlb
lret
stos
aas
jmp
cmp
add
ja
push
push
xlat
jne
add
pop
jbe
fdivs
push
aad
push
xlat
ja
outsb
fiaddl
mov
or
jns
push
jp
jp
mov
or
push
fidivrl
sarl
ja
pop
mov
les
je
jmp
fisttpll
cs
ljmp
xchg
in
xchg
sub
rolb
cs
xchg
xor
xchg
push
setbe
fstpt
dec
fisttpl
push
sahf
in
jge
lcall
push
cmp
pushf
cmp
iret
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
std
scas
fst
lahf
mov
mov
push
scas
add
mov
movl
out
push
hlt
cmp
repz
stc
cli
sti
cld
and
iret
repz
incb
jecxz
arpl
inc
leave
insb
ss
jae
add
imul
fwait
push
add
pop
add
pop
add
test
mov
pop
sub
push
lds
mov
add
or
or
mov
add
add
inc
repnz
add
aam
pop
sti
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
adc
rcrb
pop
stos
shrd
outsb
push
lods
lods
pop
mov
stos
mov
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
push
mov
push
pop
scas
sbb
scas
scas
scas
nop
aaa
xchg
sbb
mov
mov
nop
fwait
and
and
int
pop
push
mov
push
xor
sbb
mov
in
and
pop
and
mov
and
add
test
pusha
fwait
pop
sub
mov
xchg
popa
xchg
cld
pop
sub
and
mov
or
add
aas
pop
aas
imul
pop
cmp
cmp
add
call
mov
xor
xor
pop
or
out
addr16
add
pop
pop
std
mov
pushl
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
pushl
in
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
insl
or
call
xor
jbe
cmp
jl
jge
jno
dec
loopne
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
mov
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
push
divl
jb
adc
xor
mov
mov
pop
or
pop
inc
jg
ret
fmuls
xorb
ror
lsl
rcr
pop
scas
aas
mov
push
outsl
dec
aas
out
sti
jle
xchg
pop
push
dec
add
push
mov
mov
push
mov
xor
xor
ja
and
in
out
push
jb
cs
xor
mov
add
scas
fwait
pop
jbe
dec
sbb
and
jge
popf
mov
pop
jo
push
ficompl
mov
add
sub
xchg
jae
xchg
jp
inc
xor
aaa
or
popf
inc
mov
aaa
add
xchg
jno
lret
push
out
mov
bound
mov
mov
inc
idiv
jns
sahf
mov
insb
add
outsb
add
xchg
xchg
out
test
pop
push
data16
cmpsb
dec
push
dec
push
insb
ljmp
movsb
jae
add
jb
shll
outsl
sub
decl
pop
xlat
pushf
push
rorb
add
out
sbbb
rcrb
pop
into
dec
neg
aad
mov
add
ja
sahf
jbe
fistpl
imul
std
add
ds
push
add
and
es
js
fwait
std
and
mov
shrl
insb
out
sarl
ror
push
aaa
mov
aam
sbb
mov
add
xchg
fisttpll
rclb
push
lock
add
sbb
pop
mov
add
test
and
push
loopne
iret
sahf
mov
sahf
add
jb
out
in
push
cmp
or
jecxz
or
push
lcall
divb
fildl
adc
push
subl
sbbl
sbb
sbbl
push
faddl
in
mov
or
pop
nop
and
out
xchg
in
xchg
dec
add
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
fbld
fistpl
es
pop
rorb
ss
cmp
aam
or
cmpsl
push
cmpsb
scas
jo
test
sahf
sti
insl
inc
xchg
mov
into
shll
pop
mov
mov
int
mov
mov
sarb
dec
rcr
rcl
mov
movsb
pop
adc
ret
data16
add
addr16
cmp
out
je
add
imul
or
mov
mov
femms
or
or
fdivrp
or
or
es
push
adc
push
add
jg
adc
adc
ds
add
sarl
mov
xor
ds
xchg
push
mov
stos
mov
sbb
mov
push
add
mov
mov
and
cs
repz
lods
scas
mov
aas
and
add
mov
xor
or
cmp
aad
aas
aas
cmp
enter
cmp
mov
mov
sbb
inc
fiaddl
stos
loopne
scas
cmp
inc
jle
js
push
cmp
dec
jbe
mov
dec
jle
aas
popf
idivb
adc
ds
xor
dec
jns
in
fadds
inc
scas
add
xlat
push
fadds
mov
addr16
mov
jecxz
jmp
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
call
dec
test
mov
mov
ds
xor
sub
sub
sub
ss
pop
sub
add
in
ljmp
dec
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
mov
imul
fistpll
sub
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
jmp
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
scas
adc
lds
dec
adc
mov
add
add
incl
out
aas
sub
or
push
push
add
cmc
repz
dec
pop
out
dec
xor
jae
aas
add
xor
mov
xchg
pop
cmp
test
add
mov
add
mov
inc
clc
pushl
fnstsw
repnz
idivb
addr16
add
pushf
add
mov
push
repz
lcall
or
mov
pop
insb
push
fmull
push
dec
lret
js
into
xchg
mov
fwait
jp
add
mov
mov
test
mov
in
fistl
out
cwtl
nop
sub
sub
fcmovne
insb
pop
xchg
push
sub
nop
sub
xchg
xor
mov
out
xchg
xor
xchg
outsb
lcall
leave
outsl
mov
sahf
jbe
negl
fcmove
fst
es
or
mov
push
lret
loopne
push
std
lods
and
into
fdivrp
imull
and
xchg
add
test
jg
jle
and
xchg
and
incl
dec
dec
dec
dec
dec
dec
add
pop
divb
push
dec
or
adc
cmp
adc
dec
or
add
in
testb
adc
add
or
pop
pop
pop
repz
cmovg
inc
push
dec
sbb
in
cmpsl
std
inc
adc
inc
inc
adc
sbb
dec
add
in
decl
dec
sub
cmp
cmp
cmp
cmp
daa
and
sbb
sbb
ret
and
adc
sub
xor
xor
sub
sub
xor
mov
xchg
push
lcall
pop
mov
mov
mov
mov
xor
in
inc
add
outsb
mov
push
ds
mov
inc
and
mov
xor
outsl
mov
cmpsl
rorl
jbe
inc
and
incl
cld
or
push
inc
xlat
sbb
add
pop
outsb
sub
pop
in
sysret
mov
es
ds
dec
inc
xchg
mov
pushf
cmp
jnp
pop
in
lock
addl
test
mov
adc
ja,pn
aaa
and
shrl
add
mov
sbbl
push
mov
sbb
cli
mov
add
pop
cli
fisttps
add
call
les
cli
adc
adc
xor
add
mov
jg
das
sti
mov
sbb
add
jle
add
dec
sti
jg
shlb
xchg
mov
cmpl
push
adc
push
mov
adc
xor
jg
cld
mov
nop
or
adc
roll
ja
jg
and
adc
jns
and
jg
jg
adc
or
dec
push
adc
push
pop
jg
push
add
add
push
data16
sub
inc
inc
or
addr16
lods
cmp
push
inc
addl
sar
data16
xchg
or
mov
jg
add
lea
jg
insb
or
sbb
fsts
xchg
pop
shrb
add
int3
push
mov
scas
sub
mov
xchg
sub
push
incl
shl
lods
jle
lret
imul
scas
xchg
adc
lods
adc
mov
lcall
sbb
pop
sbb
call
jg
pusha
sbb
data16
xor
jg
jg
lods
lea
add
xor
adc
cmpsb
push
add
jg
ss
les
inc
pop
add
mov
ljmp
call
ljmp
stos
insl
in
popf
testb
pop
add
daa
aas
xor
mov
pop
pop
add
in
push
pop
pop
jle
add
xor
push
rolb
sub
or
lahf
mov
pushl
push
jle
push
dec
xchg
push
bound
add
mov
mov
insl
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
insl
xlat
out
mov
decl
dec
push
and
decl
inc
lds
ljmp
xchg
push
ds
sub
mov
inc
lea
push
dec
jl
jge
idiv
fnstenv
add
push
jne
pop
test
jbe
out
push
dec
or
jnp
push
jp
push
js
mov
jbe
pop
add
call
fdivrs
jne
jbe
push
outsb
ds
cmp
jle
cmp
aam
dec
incl
sub
jp
dec
test
xchg
dec
ja
xchg
subb
je
sahf
jns
fs
adc
xchg
call
push
mov
adc
outsl
inc
jbe
sahf
inc
out
scas
cs
aas
and
push
pushf
cmp
cmpsb
test
cltd
mov
insl
fstpt
xchg
xor
xchg
xor
sub
sub
nop
daa
xchg
sarb
ss
cs
mov
enter
xor
stos
test
mov
sbb
jg
pop
fnsave
xor
test
push
inc
or
or
es
or
ss
cs
rcl
push
add
or
mov
ja
dec
push
test
movb
aas
adc
ja
divb
mov
add
ja
add
in
adc
push
addb
and
insl
mov
add
dec
dec
push
outsl
adc
pop
or
adc
scas
adc
pop
push
xorl
cmp
mov
cwtl
mov
jmp
push
imul
mov
sbb
test
push
lock
cmp
push
jmp
pop
cmp
icebp
call
xor
in
add
mov
mov
pushl
add
dec
out
pop
dec
sahf
jbe
idiv
mov
or
push
call
push
sbb
xor
cmp
jle
mov
sti
std
adc
mov
syscall
mov
sub
xor
or
pop
aad
xchg
ds
mov
add
inc
int3
push
fadds
das
pop
push
push
shlb
jmp
push
inc
dec
and
lcall
or
in
std
out
ud2
or
orb
lcall
or
mov
sti
ud0
call
outsb
lea
push
ljmp
test
push
pushl
and
lcall
out
jmp
decb
or
xor
xor
lcallw
sub
push
outsb
decb
mov
push
mov
add
or
nop
mov
xor
push
inc
bswap
jle
cltd
mov
inc
sti
out
loope
adc
ud0
incb
enter
dec
decl
add
add
iret
mov
incl
pushl
aaa
mov
xlat
fdivrp
rclb
jns
add
pop
sti
push
std
sub
jmp
call
add
push
lcall
or
pop
cmpsl
cld
in
mov
add
in
adcl
xlat
jg
test
and
cli
imulb
movsb
and
nop
inc
roll
cmp
xor
call
or
mov
leave
iret
inc
pop
fcmovbe
pop
pop
imul
xorps
aaa
mov
dec
push
push
rorl
icebp
sahf
mov
push
mov
roll
test
incl
call
adc
jmp
ljmp
fcmove
jnp
lahf
inc
inc
push
inc
inc
pop
ss
in
inc
pop
mov
insb
mov
sahf
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
lcall
cs
dec
xchg
aam
imul
push
lahf
mov
add
push
shrb
rcl
outsb
es
shll
push
xor
add
das
xor
insl
pop
daa
outsl
xor
imul
and
push
push
movsb
sub
lcall
decl
pop
xor
movsl
pop
int
repnz
cli
mov
and
popfw
cmp
aas
call
push
cwtl
xor
dec
inc
push
xchg
push
dec
jp
in
push
aaa
push
lcall
imul
xchg
xchg
cltd
notb
sub
call
aam
mov
scas
jmp
jmp
sbb
xor
fimuls
sarb
fcmovbe
js
std
faddl
push
fstpt
push
jnp
jp
or
int
push
jl
or
jl
push
jge
shrb
adc
push
jbe
adc
fidivrl
jg
data16
dec
push
dec
repnz
repnz
jae
pop
fidivrl
cld
aaa
fbld
mov
jnp
jge
hlt
in
add
int3
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outsl
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
addl
adc
xchg
in
orb
jg
and
xchg
push
sbb
out
push
sub
iret
out
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
movsb
addr16
orl
mov
icebp
idiv
lcall
push
faddl
rolb
push
and
lahf
inc
push
int3
decl
pop
jle
mov
fidivrl
arpl
clc
jbe
fidivs
jmp
mov
push
pop
push
pop
nop
jbe
nop
push
pop
or
and
mov
mov
push
int
push
jns
or
pop
test
sub
mov
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
add
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
push
test
or
iret
sbb
push
mov
add
lahf
aam
jp
stc
inc
or
xlat
mov
push
cmovno
jnp
jbe
cmp
adc
xor
push
or
call
sub
add
mov
add
imul
aaa
orb
lret
adc
call
sub
add
xchg
push
or
jbe
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
stos
test
add
push
add
xchg
sbb
cmpsl
dec
adc
mov
pusha
mov
inc
ret
add
lock
xchg
icebp
inc
push
gs
jo
push
icebp
or
pop
push
insb
dec
add
popa
test
adc
add
lret
push
push
jno
sub
loopne
iret
adc
aaa
xchg
adc
scas
add
dec
test
fiaddl
add
movsb
xchg
inc
jmp
lahf
jo
das
fidivl
sbb
sbb
testb
movsb
outsl
jb
aaa
inc
jge
cmp
insb
insl
lret
push
iret
add
or
subb
fidivs
sub
mov
sbb
add
add
add
lcall
jbe
adc
cs
add
add
and
jo
ljmp
js
popf
in
sarl
shlb
xor
adc
jb
jecxz
lea
mov
or
push
fcomps
inc
xchg
fists
xor
or
pop
gs
mov
add
ss
push
xor
roll
repz
les
or
lcall
lahf
push
add
add
xchg
push
sti
jo
xor
dec
push
outsl
loop
lods
jge
xchg
push
pop
cmp
les
pop
xor
xchg
popa
jnp
lea
pop
arpl
loop
insb
out
inc
imul
sbbl
inc
pusha
pop
pushf
push
mov
shll
in
push
adc
dec
aam
fwait
lods
adc
xchg
popa
sbb
add
sbb
ret
or
add
xor
arpl
jnp
mov
adc
push
test
lea
popa
add
add
fiaddl
popa
add
xchg
cmp
push
mov
scas
subl
loop
test
add
cwtl
stos
push
add
and
cmp
sbb
lret
es
je
push
mov
arpl
sbb
sub
push
add
mov
xor
add
push
add
das
sub
outsl
and
and
adc
or
cmp
pop
adcl
pop
mov
jbe
lret
cmp
xor
and
sarl
xchg
lea
mov
pusha
lcall
mov
arpl
pop
xchg
arpl
push
and
pop
lds
gs
adcb
arpl
btc
dec
addl
movlps
sub
jecxz
cmp
cmp
push
stos
push
add
mov
pusha
sub
xchg
fstl
rorl
popf
jo
jae
add
movl
push
insl
jb
cmp
rcll
int
push
pop
lods
fisubrl
in
dec
inc
imul
adc
mulb
insb
and
pop
inc
and
movsb
and
imul
lock
nop
std
xor
pop
lock
mov
xor
add
daa
mov
dec
fnstenv
adc
int3
push
and
fsts
and
jno
sub
pop
rorb
sub
jae
xor
sub
add
sub
push
push
loopne
jb
out
xor
sub
and
push
scas
es
fbld
push
inc
imul
fistpl
imul
mov
jnp
pop
arpl
insl
sti
dec
rcrl
xchg
mov
xchg
cmp
xchg
inc
sbb
psubsw
sbb
push
ds
in
or
sub
inc
insb
cs
cmove
mov
dec
push
jb
test
das
sub
mov
xchg
sub
fs
dec
inc
imul
jecxz
insb
push
sbb
xchg
xor
in
sahf
daa
push
inc
jo
add
sbb
outsl
jo
jb
mov
jbe
adc
fwait
push
mov
test
dec
stos
dec
inc
mov
stos
dec
and
stos
xchg
lea
fmul
fsubrl
push
popf
js
hlt
and
je
cwtl
imul
push
sbb
mov
popa
push
imul
shr
fwait
mov
inc
lret
faddl
addb
and
js
pop
mov
adc
mov
inc
jne
outsb
inc
sbb
notb
sbb
pop
and
or
lea
je
insl
dec
push
dec
and
arpl
insb
mov
fsubl
movhps
loop
pop
imul
lcall
or
movsb
cmp
adc
or
movhps
mov
lcall
fs
adc
pop
cmp
faddl
cmp
jo
mov
lods
in
cmp
inc
lahf
imul
and
test
insb
inc
shlb
sbb
and
lret
and
sub
mov
push
imul
pmulhw
inc
insb
je
loope
jmp
out
mov
jg
push
popl
and
iret
dec
pop
mov
addb
sbb
add
ret
mov
xchg
les
inc
push
adc
sbb
add
push
inc
mov
sarb
mov
or
das
inc
cmp
mov
enter
test
add
mov
inc
mull
dec
insb
mov
jbe
jmp
fs
push
scas
shll
cltd
lock
js
push
xor
stos
mov
imul
rclb
dec
pop
insb
sub
stos
outsb
jle
inc
mov
mov
cmc
dec
pop
lret
inc
rolb
push
mov
mov
outsb
popw
xlat
adc
xor
and
insl
dec
or
mov
sbb
cmp
push
fs
and
loop
adc
sbb
rcl
pop
cmp
insb
mov
and
pop
pop
xor
test
cmp
push
adc
push
insb
sbbl
in
mov
outsb
push
je
fisubl
sub
pop
outsl
cs
push
dec
shll
sbb
scas
or
fsts
inc
lods
mov
cmp
adc
test
bound
enter
push
pop
or
outsb
aam
rol
hlt
mov
cmovno
sub
sbb
mov
nop
fs
mov
mov
mov
popa
push
arpl
pop
inc
enter
cmp
push
test
in
js
push
xchg
push
inc
jmp
mov
outsb
dec
push
adc
fildl
scas
inc
xor
jmp
imul
jbe
roll
test
jnp
pop
mov
add
push
mov
imul
jnp
movsl
pop
inc
push
push
inc
sbb
add
sub
push
and
xor
insb
aam
pop
or
push
addr16
arpl
xchg
xchg
and
lock
cmp
xor
xchg
dec
mov
imul
movl
js
movsl
pop
sbb
sbb
outsl
test
cmp
sbb
push
push
mov
adc
sub
or
add
and
lock
add
fidivl
or
and
adc
add
push
add
push
or
in
ud2
push
add
adc
mov
sbb
sub
mov
push
or
push
or
ja
mov
and
xor
sub
adc
push
inc
pop
adc
neg
add
push
sub
push
push
inc
sbb
sbb
cs
or
out
outsl
lcall
xor
and
lea
bndldx
add
xor
call
out
sbb
push
add
add
adc
cmp
jg
add
add
and
xor
int
jnp
ds
or
push
or
mov
pop
add
adc
ss
sbb
subps
inc
pop
sbb
push
sub
or
and
sbb
or
sbb
add
mov
dec
adc
and
adc
adc
sbb
mov
pusha
loop
and
and
idiv
in
pop
xor
sbbb
push
and
daa
push
or
xor
or
or
shl
daa
or
add
dec
mov
xor
push
cmp
pop
lock
sub
mov
ljmp
sti
adc
dec
pop
pusha
mov
jae
or
fisubrl
push
fimull
xchg
push
adc
jbe
xchg
cmovne
xor
fcmovnu
das
add
or
daa
add
es
xor
xor
daa
or
cmp
out
repnz
sub
aas
sub
and
sub
mov
cmc
decl
cmp
es
xor
dec
sbb
das
push
bswap
add
cld
aas
or
das
adc
adc
or
push
push
lods
adc
jg
sub
push
sub
push
push
or
pop
aaa
adc
pop
dec
xchg
adc
adc
daa
adc
or
xor
push
sbb
xor
sbb
and
es
mov
xchg
daa
cmp
xor
and
or
or
outsl
lods
inc
and
or
add
mov
test
prefetch
xor
or
or
pop
adc
ret
decl
pop
and
or
or
outsb
sbb
lock
inc
decl
sub
sub
jg
lock
jg
adc
lock
inc
sbb
xor
das
addb
pop
aaa
add
mov
lock
or
dec
sub
sbb
sbb
sbb
push
adc
add
adc
or
pop
cmp
sub
push
or
bound
jo
or
or
decl
sub
sbb
xor
and
aas
push
sbb
xchg
jb
xor
push
cld
jle
cmp
adc
es
xor
jp
cmp
adc
sub
mov
dec
add
cmp
incl
adc
lock
sbb
add
mov
call
and
mov
lock
xor
cmp
sub
or
adc
cmp
mov
unpckhps
sbb
cmp
mov
clc
inc
addr16
xor
mov
outsl
dec
adc
push
add
ret
mov
sub
fisttpl
out
cmp
push
fwait
mov
lock
add
push
nop
jle
pop
adc
adc
outsl
mov
outsl
and
xor
testb
addr16
mov
or
and
inc
sbb
adc
call
push
inc
mov
fwait
push
inc
or
jo
lcall
xor
sub
and
pop
icebp
lcall
cmpsl
or
dec
inc
outsb
fadd
shll
xor
bound
adc
sbb
add
or
add
insl
fmull
and
adc
cwtl
and
push
or
cmp
adc
movzbl
adc
push
and
push
fcoms
psubsb
sub
lds
jnp
or
and
jno
xor
ja
mov
or
and
push
sbb
incl
add
dec
mov
mov
inc
addr16
aas
dec
pop
pop
imul
push
lods
xor
sub
and
lock
add
incl
push
hlt
push
inc
inc
push
scas
adc
andb
jno
mov
ret
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
mov
mov
das
lcall
adc
xor
xor
daa
dec
sbb
pop
cmp
sbb
push
push
sbb
sbb
adc
aaa
and
or
aaa
push
sbb
sbb
xor
adc
hlt
cwtl
or
adc
cmp
dec
jnp
ja
and
and
adc
arpl
sub
or
inc
and
sbb
mov
adc
lock
add
jb
jns
push
cmp
bound
inc
aam
adc
sbb
idiv
jmp
adc
xor
push
pop
pop
and
inc
lock
mov
pop
lds
add
inc
jg
adc
inc
push
mov
cmpsb
notb
push
fdivs
rolb
pop
jno
and
and
cld
sbb
xorl
sub
bound
test
pop
xor
pop
ret
mov
sub
xchg
sbb
nop
jle
adc
sar
lahf
push
push
inc
xor
and
xor
sti
shlb
and
add
push
or
scas
mov
aaa
push
xor
push
pop
and
jae
out
adc
jo
xor
add
xor
fistl
or
movsb
push
xor
adc
dec
lahf
add
filds
dec
dec
dec
push
push
and
sbb
and
loopne
or
pop
ud2
adc
lret
sarl
clc
lcall
pop
cs
push
cmp
adc
sub
adc
push
xor
out
cli
ljmp
sahf
mov
push
jne
dec
sbb
daa
inc
adc
push
or
sub
sub
sbb
pop
add
add
out
sbb
add
sbb
out
push
push
jno
pop
inc
and
movsl
or
outsl
push
push
jp
add
sti
add
sbb
sbb
dec
add
loopne
jae
shl
mov
lock
fdivrp
pop
mov
lock
fisubs
sub
push
add
inc
push
sbb
adc
ja
jge
es
add
sbb
adc
daa
pop
adc
ljmp
xchg
adc
aaa
dec
or
inc
push
and
fcmovnu
rorl
dec
scas
dec
dec
push
sub
push
adc
rcll
js
xchg
daa
sbbb
dec
add
cmc
mov
inc
inc
jg
popf
and
ficompl
imul
or
dec
pop
cmp
test
or
testl
and
sbb
mov
mov
add
adc
pop
sbb
add
lock
add
sbb
addr16
pushf
sbb
xlat
adc
movsb
nopl
sbb
push
movhps
sbb
sub
ja
adc
and
lock
or
jmp
or
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
clc
decl
add
pusha
je
xor
lock
mov
or
push
pop
fs
or
xor
insb
inc
and
scas
clc
rorl
scas
xor
xor
sbb
pop
add
push
push
pop
push
sbb
cld
stos
or
or
das
mov
mulb
add
mov
enter
ljmp
push
pop
sbb
sbb
sub
adc
lock
inc
std
add
lock
add
add
pop
or
add
mov
add
or
sbbb
sbb
aaa
cmp
in
push
sbb
adc
pop
or
and
test
push
adc
or
push
sbb
cmp
pusha
unpcklps
cmp
push
sub
or
and
inc
or
ret
sub
fimull
adc
or
or
stos
jle
or
push
or
sbb
fidivs
jae
aas
adc
push
push
ss
icebp
push
std
sub
adc
pop
sbb
pop
xor
and
mov
cli
or
mov
dec
test
out
ds
push
mov
dec
outsb
jle
lock
lea
sbbb
scas
fsubrs
xchg
pop
sbb
leave
add
movlps
out
std
pop
adc
sbb
add
and
push
pop
push
jb
pop
sub
push
inc
ljmp
cs
fs
mov
dec
in
movswl
dec
inc
add
pop
xor
hlt
fwait
pop
icebp
add
add
and
add
ljmp
cmpl
or
movntps
push
pop
adc
adc
push
mov
adc
mov
jne
sub
push
loope
incl
sub
sub
sbb
inc
push
push
inc
or
mov
cmp
and
adc
sub
jmp
pop
pop
cmpsb
pop
invd
or
daa
push
cs
sub
jg
mov
or
or
or
adc
pop
daa
or
insl
or
cmpsl
ljmp
add
and
pop
push
xchg
movsl
adc
pop
sub
bound
sbb
outsl
js
adc
js
or
xor
lcall
push
or
adc
in
push
sbb
lock
inc
push
adc
push
subb
lock
add
cmp
cld
and
wbinvd
push
and
lock
push
dec
xor
dec
adc
pop
or
jbe
scas
xor
sbb
nopl
or
and
sar
inc
pop
je
sbb
jb
inc
inc
cmp
test
adc
cmp
mov
or
xlat
xor
popa
pop
sbb
out
bound
aam
repnz
dec
adc
popf
clc
jmp
sbb
inc
cmp
pusha
push
mov
sub
dec
pop
adc
adc
outsb
js
dec
ret
and
adc
imulb
ss
push
xor
inc
push
jg
dec
mov
inc
xor
pop
lock
xor
push
xor
test
or
xor
ja
mov
add
sub
push
or
push
das
mov
adc
fcoms
jecxz
aas
push
cmpsb
push
inc
pusha
push
nop
adc
incl
cmp
loopne
inc
push
pop
dec
sbb
cmp
fdivrp
sgdtl
aam
pop
mov
jb
sub
insb
das
sbb
add
or
test
add
pop
sub
xor
das
pop
mov
mov
xor
dec
and
sub
or
adc
sbb
pop
sub
data16
pop
add
sbb
push
lock
sbb
clc
rcll
adc
push
push
sub
dec
mov
add
repnz
sub
xchg
sbb
and
mov
cmc
test
out
and
add
dec
jmp
lds
and
push
inc
inc
sub
das
sbb
dec
mov
lods
inc
in
les
add
and
xor
bswap
test
cmp
loopne
cli
xor
lea
pop
push
sub
push
aaa
dec
adc
cwtl
jg
inc
inc
pop
lcall
aas
adc
outsl
jp
mov
ds
cmp
and
sbb
add
dec
movsb
or
dec
pop
sub
xor
adc
adc
mov
lea
adc
jle
sbb
push
or
adc
ds
adc
pop
adc
outsl
scas
and
test
adc
sub
or
push
adc
sub
sbb
sbb
adc
pop
and
add
inc
dec
adc
sbb
imul
sbb
add
and
insl
lods
jbe
out
js
and
add
xchg
std
or
push
inc
or
add
xor
cmp
adc
nop
and
cmp
cmp
jp
mov
or
inc
or
bound
dec
inc
push
pusha
adc
clc
pop
mov
dec
rorb
or
push
insb
add
call
idivb
mov
inc
push
sbb
arpl
mov
push
arpl
sbb
sbb
pop
lock
add
mov
dec
cmp
adc
or
bndldx
adc
adc
iret
adc
andl
xchg
sbb
ds
sbb
and
cmovp
dec
fmuls
pop
ds
rorb
xchg
or
pop
adc
sub
imull
lock
xchg
xor
adc
mov
clc
scas
ljmp
pop
cmp
aam
inc
or
or
push
adc
adc
lock
add
xchg
aaa
popa
push
sub
pushl
add
push
inc
adc
adc
das
sub
pop
xchg
mov
popa
lahf
pop
sub
mov
adc
and
and
pop
inc
adc
mov
or
ljmp
and
cmp
data16
cmp
scas
fisttpl
xchg
orb
call
cld
dec
mov
add
sub
sbb
sbb
adc
dec
pop
shlb
aas
lds
inc
push
aaa
stos
add
bound
cmp
daa
inc
add
incl
and
jae
sbb
pusha
and
out
imul
mov
or
sub
and
decl
cmp
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
in
out
subb
and
daa
push
sbb
add
lcall
sbb
pop
mov
and
or
outsl
dec
dec
sub
clc
ljmp
rclb
add
daa
cmp
add
outsb
xor
pop
mov
add
decb
push
sub
xor
dec
mov
scas
ret
push
xor
call
sbb
pop
jno
cmp
sbb
ja
jge
inc
sbb
or
sbb
push
mov
adc
pop
or
xor
lahf
push
sbb
dec
sub
and
and
or
cli
pop
lock
add
jo
pmuludq
outsb
cmp
pop
inc
or
push
jo
sbb
lock
add
xor
add
mov
lock
jl
add
sbb
aam
es
pop
loope
push
sbb
adc
sub
jo
add
mov
mov
add
or
adc
push
push
lock
add
or
lret
es
clc
stos
push
mov
add
adc
xchg
sbb
adc
scas
lea
push
lock
lock
add
cmp
incl
pop
and
aad
lea
cwtl
add
rcl
ss
or
jb
test
dec
push
loopne
outsl
pop
adc
or
xor
gs
fdivp
sbb
enter
aad
mov
insb
adc
xchg
dec
or
push
pop
notb
add
clc
ja
fisubs
push
adc
or
adc
or
add
adc
xor
push
dec
or
out
sbb
fcmove
sbb
jmp
and
mov
inc
cmp
inc
jmp
dec
rcll
add
cmp
pop
mov
jo,pn
adc
or
or
sbb
adc
dec
fwait
sbb
xor
outsl
pop
je
aam
pop
push
or
add
dec
dec
dec
push
ret
js,pn
or
cmpsl
test
int3
add
pop
inc
pusha
xlat
or
adc
les
inc
push
inc
popa
incl
jp
or
or
sahf
movsl
sbb
lahf
sub
or
adc
in
shl
xor
xchg
push
and
movsb
ja
and
sbb
adc
sbb
and
or
data16
pop
test
lcall
or
clc
outsl
sub
pop
add
adc
arpl
xchg
fisubl
lods
pop
int
js
fildl
sbb
negl
movsb
mov
adc
je
sbb
mov
adc
and
sbb
aas
cmp
or
sbbl
es
frstor
cmpsb
inc
push
shrb
sbb
mov
mov
ds
into
sub
add
das
adc
aam
cmp
cltd
shl
les
les
cmc
push
sub
sbb
fwait
ss
sbb
sbb
adc
or
and
xor
xor
in
or
sahf
add
adc
adc
fidivs
femms
das
dec
or
bound
lock
or
dec
dec
xor
add
add
sbb
lcall
xchg
pop
mov
push
pop
sub
fcmovbe
xor
popfw
decl
pop
jne
and
and
mov
adc
movsb
outsb
das
pop
or
pop
push
adc
clc
push
and
sbb
faddl
and
inc
push
push
adc
push
popa
xor
or
mov
out
push
push
xor
cmpsl
cwtl
and
or
sbb
mov
jle
cltd
lock
adc
adc
pusha
ret
sbb
addl
or
adcb
jg
sub
and
dec
or
push
xchg
mov
add
mov
cwtl
push
mov
sbb
sub
lock
add
or
adc
or
push
ss
and
push
mov
or
adc
and
sbb
cs
or
and
or
cmp
or
add
lock
out
clc
add
mov
outsl
dec
outsl
add
adc
movsl
add
cltd
cmpsb
dec
adc
push
sysenter
add
pop
cmp
jg
pop
mov
sbb
push
adc
inc
push
adc
and
xor
push
mov
incl
and
adc
lock
xor
lock
add
add
lock
ret
xor
outsl
pop
xor
sbb
es
outsl
or
arpl
and
and
cmp
sub
inc
in
ja
or
xor
pop
sbb
es
sub
dec
dec
push
mov
fbstp
push
and
sub
and
inc
mov
cld
dec
inc
push
and
sub
and
mov
mov
and
and
xor
imul
add
inc
dec
gs
aad
sub
or
stos
jle
dec
xor
xor
ds
push
and
fnstcw
mov
cmp
cmp
cmp
nop
cmp
lock
pushl
jp
jle
xchg
and
cmp
fildl
xor
outsl
lcall
shl
xor
inc
sub
push
ds
dec
xor
dec
and
incl
push
push
push
lret
xchg
cmp
movsl
xor
test
jbe
or
inc
pop
ret
sub
dec
jne
and
fs
cmp
push
sub
cmp
adc
dec
stos
data16
cmp
stos
fs
pop
inc
sti
xchg
cmp
and
inc
dec
add
cmp
test
sub
fwait
xor
cmp
xorl
lock
mov
inc
aaa
sti
aaa
cmp
fdivrs
push
add
push
push
sbb
xchg
xor
push
loopne
addl
aaa
lock
xchg
les
cmpb
push
sub
add
aam
lock
push
add
addb
int3
loop
lret
xor
cwtl
mov
dec
rclb
add
jbe
or
cs
cltd
stos
sbb
test
inc
sub
in
test
mov
fisttpl
jl
add
lock
add
push
push
outsl
pop
inc
xorb
test
in
adc
jl
mov
scas
lock
jnp
lock
add
add
mov
pop
test
add
adc
icebp
lock
or
jo
or
add
or
lock
fiadds
pop
xor
or
or
add
cwtl
mov
add
mov
add
push
cmp
xchg
cmp
xor
xor
mov
dec
dec
sub
dec
inc
mov
in
adc
or
sti
mov
adc
sbb
adc
mov
adc
or
das
xchg
bound
xchg
fidivl
xchg
inc
mov
push
and
add
inc
adc
or
mov
icebp
add
and
movsb
or
mov
inc
mov
adcb
add
push
xor
push
in
add
xchg
jbe
adc
cmp
mov
mov
adc
and
pop
mov
mov
lret
rclb
pop
sub
mov
mov
push
pop
push
push
mov
sbb
sub
fimuls
push
cmc
stc
leave
xchg
xor
fisubs
cmp
shl
jae
add
lcall
add
push
adc
mov
mov
sbb
add
insl
int
sbb
sub
adc
insb
fsubrp
mov
data16
xor
cmp
pop
ljmp
and
add
or
add
push
xor
fnstsw
sub
xor
inc
mov
popa
fwait
sub
and
or
push
cmp
and
test
mov
xor
or
jbe
cmp
xchg
xor
rcrl
insb
add
or
fcoms
adc
pop
cmp
mov
mov
js
icebp
cmp
xchg
daa
fisttpll
ret
xchg
bound
adc
fildll
pusha
outsl
pop
movl
sbb
mov
mov
in
add
cltd
jne
xor
testl
mov
and
pop
test
adc
add
insl
out
push
clc
mov
scas
arpl
or
push
ret
lcall
bound
shl
pusha
add
shll
stos
test
or
daa
pop
shrl
xor
cmp
movsl
leave
or
xchg
pop
sbb
aaa
das
and
adc
mov
out
push
insb
jge
xor
push
idivl
xchg
cmp
add
ja
lea
mov
xchg
mull
fisttpll
movsl
and
push
xor
in
sub
mov
mov
sbb
sub
cmp
sbb
dec
add
xchg
fwait
imul
inc
stc
cmc
sbb
pop
and
jae
mov
mov
mov
inc
sbb
push
push
add
cmp
inc
pop
adc
cmp
mov
xchg
fwait
lds
push
cmpsb
sub
xchg
jno
mov
adc
or
addb
and
add
xor
and
and
add
adc
sbb
faddl
shrl
mov
daa
into
outsl
jo
add
adc
hlt
js
shrl
mov
imul
fidivrl
sub
xor
and
add
dec
add
xor
push
add
and
addr16
out
fldt
sub
cmp
xor
sbb
or
push
push
cmp
or
int
ficomps
or
sbb
xor
or
push
and
mov
and
sbb
pop
inc
and
add
push
sbb
sbb
jbe
insb
fsubrl
pop
push
inc
add
nop
test
add
pop
insl
popa
jge
inc
pop
cmp
jne
and
mov
jno
add
es
push
sbb
inc
or
inc
mov
inc
sbb
push
rcl
pop
enter
dec
mov
add
push
js
and
pop
roll
ss
sub
inc
dec
dec
push
andl
add
mov
mov
add
xchg
push
loopne
je
inc
sbb
or
data16
push
imul
sub
pop
mov
sbb
xor
mov
popa
xchg
dec
cmp
jns
mov
xchg
inc
add
fisubs
jle
inc
inc
inc
pop
xchg
or
and
add
inc
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
