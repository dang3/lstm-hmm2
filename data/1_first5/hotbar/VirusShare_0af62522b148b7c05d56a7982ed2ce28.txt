divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
movl
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
scas
adc
jg
filds
mov
add
inc
jne
sub
sar
inc
je
insb
jo
or
ret
push
repz
adc
insl
fists
mov
xor
jl
xor
sub
mov
push
mov
call
pushl
mov
cwtl
adcb
sarl
cltd
data16
cmp
jle
mov
andl
sbb
adc
xlat
cwtl
hlt
cs
popf
adc
push
adc
xchg
fmuls
cmp
sbb
sub
dec
rcrb
in
or
ja
jl
push
mov
dec
out
imul
in
sbb
push
push
mov
or
int
push
call
sub
add
xlat
or
pop
mov
call
ret
add
in
sbb
into
lahf
mov
adc
shl
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
xchg
mov
js
adc
cmp
push
in
popa
and
add
mov
push
sbb
sbb
push
or
sbb
push
push
cmp
jmp
jge
jne
sub
fimull
jae
push
mov
jge
pop
pop
push
jno
pop
add
pop
jb
mov
push
sbb
mov
jb
push
pop
xchg
mov
movl
bound
scas
jp
aaa
xchg
xor
fidivl
lea
xor
push
mov
cmp
or
clc
cmp
jge
insl
cmp
gs
clc
jg
push
hlt
mov
xor
mov
pop
ret
push
inc
or
dec
rol
push
pop
jae
cmp
jne
xchg
pop
inc
sub
inc
clc
sub
rol
push
js
enter
push
dec
ss
addb
fdivl
or
jne
pop
adc
inc
test
jne
xchg
pop
cmp
stos
add
jmp
pop
and
clc
jg
mov
adc
pop
cmp
pop
dec
ds
jp
rcr
ss
movsl
pop
enter
cs
rclb
mov
sub
push
mov
sar
scas
mov
packssdw
jge
ja
adc
dec
dec
clc
cmp
loop
adc
adc
in
xor
imul
leave
addb
loopne
add
push
adc
out
orb
ret
scas
mov
sub
adc
cmc
mov
iret
jle
mov
cmpl
or
push
stc
jmp
aas
rorb
es
stc
dec
inc
jle
sbb
or
add
pop
cltd
xchg
add
push
push
scas
inc
repz
or
movsb
push
inc
cmp
jl
cmp
jne
mov
sar
rolb
jmp
mov
push
jbe
mov
adcl
inc
mov
inc
add
or
decl
lea
push
add
push
push
lea
mov
cs
cmpsb
inc
es
xor
mov
pop
hlt
into
mov
aam
dec
cmpsl
out
sbb
fdivrs
cmpsl
mov
lret
adc
cld
fsubrs
hlt
jbe
mov
or
pusha
ficomps
decb
clc
or
test
jle
cmp
mov
push
pop
fld
inc
sahf
mov
pop
std
ret
or
icebp
push
pop
popf
pop
bound
ficoml
add
lock
pushf
jmp
pop
daa
ret
pop
jno
mov
jmp
push
sarl
lea
inc
push
push
test
pop
sub
or
loopne
es
and
fisubrl
add
adcb
out
ja
aas
jbe
jle
hlt
jg
sbb
dec
pusha
cmp
jae
xchg
and
les
push
xor
push
push
sar
push
push
adc
cmp
shlb
jle
mov
out
cld
mov
xor
pushf
cmpl
je
push
cmp
cmp
jae
inc
and
push
cmp
pop
xchg
push
and
pop
lret
push
addr16
pop
push
add
jb,pt
pop
add
xchg
fistpl
js
leave
ret
lea
ljmp
je
cmp
aaa
cmp
sub
push
push
fldt
rcrb
or
adc
or
mov
cld
pop
add
mov
fsubp
and
and
inc
sub
adc
out
ret
aad
aaa
sbb
push
loopne
fmuls
ficomps
or
cld
fbld
cmp
ds
lea
cmp
jne
push
push
cmp
lock
push
add
adc
pusha
movl
mov
or
pop
aad
loopne
pop
pop
pop
xchg
lret
push
stc
or
mov
xchg
xor
sub
out
je
add
adc
sub
dec
mov
neg
into
subl
add
fistpl
cwtl
mov
mov
test
and
mov
lret
pusha
mov
push
sti
cmp
lret
xchg
mov
pop
test
mov
lret
rol
dec
sbb
sbb
idivb
je
push
xchg
mov
pop
dec
push
sbb
dec
push
movl
xor
es
cmp
pop
pop
lea
sbb
xor
cmp
push
pop
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
outsb
mov
push
dec
adc
or
popf
lea
push
add
push
dec
in
push
outsb
fsubs
pop
xor
push
cld
mov
ficoml
or
psubb
icebp
in
push
loopne
scas
dec
sub
push
call
es
out
lods
cmp
cmpsl
jp
clc
cmp
je
ret
mov
jmp
lea
jno
aaa
or
pop
addr16
push
adc
addr16
adc
in
sbb
fsubs
mov
push
arpl
addl
out
fsubrs
loope
cmp
or
mov
ret
mov
or
out
test
jge
cs
jne
jns
aad
add
or
inc
push
or
aaa
out
or
syscall
xchg
jl
dec
je
outsl
xor
or
and
in
xchg
ret
mov
add
push
inc
mov
push
adc
lock
xchg
repz
cmp
shld
or
lahf
push
insl
or
xchg
ret
jno
push
dec
arpl
call
pop
ljmp
adc
xor
mov
loop
rcr
inc
sub
call
sub
inc
lea
lods
pop
or
enter
in
inc
js
std
jae
ja
sub
je
dec
je
push
adc
or
or
inc
xlat
movsb
call
mov
sbb
clc
adc
sub
loope
bound
push
popa
xor
pop
dec
lahf
fldl
push
dec
mov
push
sbbl
shr
push
mov
fadds
mov
xor
and
jl
call
andl
sbb
add
aam
test
rcrb
lret
mov
fs
mov
rcl
loope
fsubs
lcall
xchg
ljmp
mov
femms
mov
lea
movsl
or
mov
lret
or
sub
js
and
retw
adc
pop
add
xor
in
cmp
fbstp
adc
add
je
and
out
neg
sbb
inc
inc
pop
xlat
cmp
xchg
pop
add
or
cmpb
mov
sbbb
inc
dec
cmpb
mov
movsl
mov
les
sbb
dec
mov
das
adcl
call
xchg
scas
mov
lock
jecxz
or
jecxz
pop
jo
lahf
cmp
sbb
adc
adc
loopne
aaa
pop
sbb
loope
xlat
mov
pop
cmp
push
js
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
ja
mov
push
pop
push
movsl
repnz
lock
cmp
movsb
sub
movsb
repnz
or
into
shl
push
or
mov
je
mov
shll
scas
mov
or
mov
and
mov
pop
pop
pushf
sub
cmp
fcoms
and
adc
mov
lds
adc
adc
leave
cmpl
imull
pop
adc
lahf
das
mov
inc
cmpsb
xchg
jl
outsb
push
push
or
mov
xor
add
rorl
clc
lea
or
push
xchg
xor
es
dec
repz
add
dec
jmp
lock
dec
in
or
out
fimuls
dec
sub
jo
sahf
mov
jo
jne
clc
or
add
dec
adc
js
das
cmc
inc
addr16
cmc
call
pop
add
push
daa
pop
sbb
jo
test
jnp
repz
jp
dec
add
push
pop
mov
scas
dec
jg
in
inc
repz
leave
pop
push
pop
mov
lret
in
and
fsubrl
jbe
push
xlat
or
inc
mov
cmc
out
mov
dec
push
mov
scas
and
lock
out
cmp
add
daa
stos
loopne
aas
nop
cmp
clc
adc
push
addr16
mov
mov
mov
push
push
cld
das
cmp
setno
out
add
loopne
jl
and
jp
xor
push
xor
adc
push
aam
mov
jl
in
or
jle
cmp
or
mov
sbb
sub
in
add
add
and
sar
adc
add
add
fldt
pop
js
inc
pusha
je
fidivl
sub
lock
adc
and
mov
add
dec
pop
push
cmp
push
stc
in
push
xor
and
movsb
std
dec
test
shlb
sbb
and
pop
push
mov
lock
neg
sbb
pop
les
imul
mov
or
and
rcr
ret
out
out
mov
add
cwtl
cmp
cwtl
jns
imul
add
dec
and
movsb
nop
sbb
lock
xor
push
or
inc
test
and
nop
or
lods
mov
push
jb
push
mov
into
cmp
mov
sbb
jge
mov
in
je
adc
mov
insb
fisttps
jbe
cmp
pushf
daa
adc
pop
mov
push
aas
mov
or
cmp
mov
int
shlb
mov
cmp
rclb
addb
adc
push
stos
sbb
int
dec
movsl
test
inc
push
imul
rcl
sbb
dec
rclb
mov
sbb
xchg
xchg
ret
fs
out
pushf
push
pushf
inc
lcall
fs
sahf
pop
mov
int3
sbb
jae
loope
xchg
pop
enter
orb
adc
mov
rcrb
rcrb
sbb
mov
xor
mov
mov
xor
dec
shr
jle
pusha
sbb
xchg
push
jo
mov
fcoml
adc
cmp
sub
jo
add
mov
ja
push
sbb
orb
je
mov
clc
rcrl
popl
add
mov
popa
adc
jmp
mov
add
sbb
push
addb
sub
cmp
xor
sbb
mov
inc
push
inc
adc
in
fwait
nop
jnp
ds
fwait
nop
push
lret
sbb
add
aam
fldt
inc
dec
xlat
addl
test
and
dec
lahf
addr16
and
adc
loop
or
push
rolb
ds
icebp
jle
orl
ficoms
clc
fs
cmp
xchg
nop
push
mov
int
xchg
jns
sbb
insl
or
sti
outsb
pop
movsl
ret
dec
imul
cmp
loop
push
or
cmpl
pop
add
je
ds
daa
add
je
or
dec
out
adc
leave
scas
loopne
pop
or
lcall
dec
data16
pop
jne
mov
fcmovne
push
aad
add
fcoms
shlb
mov
xor
lret
and
sbb
and
cmpsb
loop
and
test
popf
adc
mov
iret
xor
subb
push
add
inc
insl
jmp
or
shll
mov
mov
push
scas
jmp
push
lea
inc
test
add
or
movsb
mov
in
mov
in
lret
adcl
inc
das
xchg
std
mov
dec
mov
pop
int
shl
sbb
jb
add
push
pop
lret
jnp
movsl
jno
outsl
movsl
sub
sbb
jne
shll
push
fsubr
into
adc
cmc
xor
popa
jmp
jno
loopne
adc
xchg
cmp
cmc
cmp
rorl
sub
rcrb
push
insl
rclb
sbb
pushl
mov
neg
pop
dec
jne
xchg
mov
ret
repnz
inc
test
enter
jbe
sub
sbb
cmp
popf
scas
inc
dec
push
ret
shl
pop
insl
jge
je
mov
sahf
les
in
sbb
pushf
pop
nopl
repnz
stc
or
mov
mov
testl
in
mov
push
cmp
je
or
je
xor
push
push
data16
lock
push
mov
jecxz
push
cmp
filds
data16
pop
cmp
in
add
xchg
cld
xchg
adc
and
push
or
jecxz
and
sbb
ret
fldl
fs
mov
xchg
cmp
lods
lock
xorb
and
fisttpl
mov
mov
loopne
out
negl
je
push
push
pop
in
pop
push
ja
jbe
test
pusha
mov
dec
add
clc
sub
and
jb
int3
and
pusha
cld
cli
adc
and
or
int3
add
jmp
add
adcl
ret
pavgb
shlb
stc
mov
and
test
push
and
cmp
into
bound
push
pop
and
dec
cmpl
dec
popf
push
mov
cmpsl
and
xchg
cmpsb
std
daa
mov
and
mov
je
aas
push
cmp
mov
cmp
test
test
mov
xchg
fdivrs
mov
sti
scas
sub
pop
or
fldt
sub
sub
adc
jnp
cwtl
sub
jno
dec
inc
lret
jno
bnd
inc
lret
ret
test
ret
nop
stos
inc
lret
or
mov
mov
add
jb
xchg
jne
add
lods
mov
push
insb
movsl
jp
iret
out
aad
mov
stos
out
pusha
insb
adc
mov
lods
mov
loope
mov
ret
fsubs
jne
scas
add
and
mov
sub
pop
int
nop
out
rcrb
cmp
clc
sbb
sub
lret
xchg
dec
adc
sub
push
sub
sbb
add
mov
mov
cmp
jl,pt
dec
push
push
sbb
fidivs
cmp
movsl
loopne
sti
and
push
rcr
popf
clc
or
or
jmp
jecxz
cmp
sub
sub
cvttps2pi
out
cmp
dec
testl
cmp
jne
rcll
pop
xchg
cmp
sti
addb
xor
xor
in
jmp
xchg
dec
xlat
mov
xchg
cmpl
inc
mov
gs
ficompl
push
add
outsl
inc
xor
pop
out
jmp
cmpsl
xchg
loopne
cmp
and
mov
mulb
add
or
xchg
stc
pop
cs
ficoms
push
push
add
adc
sbb
cmp
aad
or
xor
mov
add
push
imull
and
inc
add
int3
mov
sub
test
and
sub
inc
mov
xor
int
or
push
jmp
xchg
push
ficomps
test
rol
pop
lds
imul
ds
bound
popf
filds
jl
mov
aaa
shrl
mov
sbb
enter
mov
rcrb
mov
leave
push
sbb
push
testl
jecxz
add
andl
mov
inc
ret
push
je
iret
fsts
add
mov
xorb
jge
adc
pop
out
mov
push
push
iret
add
jne
xchg
gs
adc
adc
inc
mov
in
stc
or
pop
les
bound
push
sub
jp
pushf
lahf
mov
push
das
sbb
stc
xor
sbb
jmp
cmp
push
fbld
sbb
test
mov
jmp
mov
repz
in
xchg
les
mov
xor
popf
push
adc
add
adc
add
jne
jmp
inc
loop
pop
test
fcom
in
loop
je
movups
dec
cmp
in
push
popf
push
push
dec
pushf
mov
leave
inc
in
icebp
inc
lock
jecxz
jns
cmp
sub
test
mov
subb
mov
fnsetpm(287
mov
mov
and
inc
dec
mov
xchg
inc
and
push
jne
mov
pop
cmp
mov
sbb
decl
sub
sarb
pop
out
jne
or
je
push
xor
aad
out
jl
clc
mov
out
jl
sub
xor
out
xor
mov
push
inc
fmull
and
add
jecxz
clc
push
mov
pop
pop
mov
std
inc
pop
mov
cmpb
out
insl
dec
testb
add
add
ljmp
push
add
xor
call
ficoml
not
add
repz
je
adc
lods
jge
pusha
ret
jl
pop
cld
sub
loop
xchg
push
push
out
inc
out
add
and
call
push
outsb
imul
or
add
pusha
mov
pop
inc
mov
leave
push
inc
sahf
cmpsb
xor
fidivl
mov
es
imul
push
jg
push
adc
dec
pop
mov
or
les
or
das
pushf
inc
int3
add
mov
or
mov
mov
call
mov
loopne
insl
adc
mov
movzwl
test
and
adc
dec
je
sub
mov
and
jge
imul
push
adc
scas
int3
jmp
push
xchg
mov
in
in
mov
int3
fcmovnbe
loopne
dec
scas
mov
and
fsub
pop
push
adc
or
fdivrs
clc
enter
inc
stos
mov
dec
mov
jecxz
cmp
mov
xor
inc
mov
out
lock
jle
rcll
aad
adc
mov
xor
sub
ret
jle
pushf
mov
and
sbb
aas
mov
xor
pop
jg
fiadds
daa
cmp
mov
mov
repnz
or
mov
out
fiaddl
jl
int3
sbb
add
and
add
sub
dec
pusha
pop
adc
mov
push
movsb
mov
aaa
push
scas
scas
sbb
roll
fisttpll
notl
add
loope,pt
mov
xor
xchg
daa
sahf
loopne
aas
add
jge
dec
push
jne
orb
sub
or
sub
nop
lea
and
enter
outsl
jnp
inc
sbb
sahf
call
setns
jo
movsl
imul
push
popa
xor
cmp
sub
add
divb
divb
dec
test
push
add
pop
jp
sbbl
lock
mov
jnp
shlb
es
mov
cmp
add
or
or
movsb
rolb
adc
and
lret
dec
fmull
je
fsubrl
rolb
icebp
pop
imul
jg
jmp
loopne
pop
cld
loopne
cmp
add
pop
fbstp
sub
cltd
call
xchg
aam
push
loopne
inc
ja
dec
or
nop
or
cwtl
push
dec
test
cmove
or
imul
loopne
ret
mov
and
aaa
jne
cwtl
test
inc
rcrl
mov
adc
add
stc
lock
mov
mov
pop
xchg
and
scas
sbb
cmp
sub
add
xor
nop
imul
push
cmp
xor
dec
test
cmpsb
add
in
fs
add
push
add
shll
addl
jnp
out
fs
inc
add
add
adc
pop
call
push
inc
adc
or
sbb
mov
subb
subb
js
add
xchg
sbbl
je
push
pusha
lret
cmp
or
shr
inc
adc
loopne
pop
cmovns
cmovne
sub
xchg
add
dec
dec
sub
test
aas
mov
adc
call
cmpsl
loop
idivb
mov
mov
mov
insb
int
int3
mov
rclb
sbb
int
fnstcw
fcoms
fsubl
sbb
xchg
or
orb
pop
push
xchg
xor
inc
mov
pushf
jo
ret
dec
js
lret
sbb
shr
movzbl
push
adc
pop
insb
fmull
ret
push
push
inc
les
movsb
xlat
sbbb
mov
mov
in
xchg
mov
mov
sbb
je
inc
cld
popf
cmp
cltd
popa
xchg
mov
dec
ds
addr16
adc
gs
pop
addr16
cmc
add
xor
mov
xlat
sti
push
xor
push
cmp
je
push
add
and
inc
xor
lret
pop
dec
jmp
sub
jle
cli
dec
enter
cmc
inc
push
push
mov
cmp
jg
mov
lret
inc
adc
out
enter
sbb
arpl
and
push
mov
sbb
enter
jno
adc
lret
sub
or
cmpsl
xor
cmp
mov
scas
fsubs
sub
mov
subl
sbb
sbb
adc
adc
push
pop
jmp
mov
push
sbb
arpl
inc
pop
es
pop
inc
cmp
popf
push
sbb
test
add
push
sub
xor
aaa
mov
and
addb
inc
cmp
jae
jg
jmp
mov
incl
xor
inc
add
pop
ficomps
push
ds
jmp
lea
mov
pop
jb
cmpl
mov
push
add
sub
and
scas
pop
clc
add
je
mov
cmp
jg
and
push
mov
mov
sbb
cmp
cmp
mov
cld
ret
sbb
divb
add
mov
int
push
xchg
sub
xor
int3
add
lea
in
add
inc
movsb
adc
push
push
nop
or
shrb
or
cmp
mov
xchg
add
hlt
inc
xor
pop
lock
mov
mov
sub
cmpsl
mov
dec
cld
push
or
jbe
xorb
dec
and
ljmp
stc
xchg
clc
push
aas
cmpsl
mov
test
js
in
or
hlt
jg
in
xor
add
cs
je
sub
dec
jmp
sbbl
push
inc
inc
xor
jae
xor
fidivl
jmp
dec
inc
pop
push
push
mov
add
push
sar
test
xchg
cmpb
mov
pop
loop
lock
dec
inc
mulb
pop
repz
jg
jns
push
or
add
cmp
cmc
fmul
lock
sbb
cwtl
test
or
mov
pushl
dec
inc
push
and
push
fdivs
lods
pop
mov
push
xchg
or
mov
dec
cwtl
nop
insl
popf
xchg
fucomi
lcall
hlt
lea
adcb
mov
jbe
lods
stos
cmpsl
pop
mov
mov
or
stos
shl
shrl
inc
aas
ljmp
rep
aam
or
add
mov
leave
xor
cmp
lret
inc
xor
icebp
pop
pop
push
or
pop
push
popa
cld
push
enter
add
ds
sub
loopne
je
cld
mov
ss
jae
dec
fs
into
push
dec
mov
orl
outsb
ljmp
ljmp
movb
adc
xor
movsl
push
push
arpl
sub
insl
in
or
mov
mov
mov
xchg
sub
pop
in
aaa
push
mov
sub
clc
jne
mov
jmp
cmp
je
pushl
movb
imul
adc
shlb
cmp
xchg
mov
lcall
out
lock
mov
push
add
lea
fwait
es
or
add
xchg
or
and
movsb
scas
push
dec
loopne
jne
outsb
pop
mov
call
adc
cmp
js,pt
jo
jg
push
mov
inc
mov
jbe
jp
adc
push
repnz
and
std
dec
or
jne
std
hlt
push
push
cmp
mov
adc
outsl
aad
mov
rorl
js
push
xchg
lret
and
jo
add
adc
test
dec
push
movsb
daa
jl
sar
loopne
cmp
flds
jmp
je
sbb
jmp
push
add
addb
add
loope
inc
lods
fdivrp
rol
fmul
test
dec
mov
ljmp
mov
fwait
xor
pop
inc
pop
js
test
popl
lock
add
call
push
push
pop
nop
adc
or
rorb
push
stos
mov
orb
inc
inc
mov
loope
fisttpl
jno
inc
push
out
incb
mov
sub
notl
inc
pushf
mov
sar
mov
je
mov
mov
mov
xor
enter
jl
add
insb
cld
sub
lea
jbe
mov
push
push
or
outsl
cmp
inc
loope
sub
or
adc
jge
push
add
sbb
lock
inc
and
add
fstps
xor
add
add
loop
and
aaa
adc
es
inc
call
or
push
adc
rorl
dec
push
leave
test
or
test
dec
scas
cmpsb
decl
lea
xor
sub
sbb
push
mov
scas
mov
rcll
push
cmpsb
jp
sti
in
sbb
push
rcrl
sub
pop
inc
nop
or
lods
xor
fmull
or
xlat
dec
les
xchg
sub
incl
popa
testl
imul
pop
sub
movsl
into
add
push
cmp
imull
inc
push
nop
push
push
aad
sbbb
hlt
cmp
and
bound
cs
pop
mov
call
cmp
add
xchg
fsubrs
xchg
test
jno
leave
add
call
mov
enter
adc
and
adc
test
repnz
test
add
pop
jo
sbb
enter
clc
inc
and
jg
mov
push
jp
jle
pshufw
mov
scas
cltd
popa
add
dec
push
and
leave
mov
adc
and
enter
cmpb
stc
inc
sbb
dec
daa
push
and
mov
cmp
sbb
cmp
push
into
je
dec
movsb
movsl
lock
push
push
or
fwait
cmp
adc
mov
fldl
sub
mov
leave
add
fwait
hlt
dec
fwait
arpl
fwait
or
push
mov
xchg
lcall
push
adc
test
inc
jo
sbb
lods
sub
mov
mov
cmp
xor
icebp
inc
and
push
repnz
cmpsb
sbb
mov
cmp
popa
jg
inc
dec
leave
scas
and
add
xor
cmp
mov
mov
sbb
push
xor
loop
sarl
mov
add
or
and
cmpsb
in
out
jb
add
push
adc
pop
or
sbb
mov
mov
cmpsb
mov
mov
fstpl
lcall
or
or
adc
and
cmp
lea
xor
aam
pop
push
adc
sub
dec
adc
leave
rorl
xchg
adc
cmp
pop
in
mov
push
and
in
fmul
mov
inc
sbb
cmp
and
sbb
sbb
movsb
outsl
push
cmp
sahf
push
cld
sub
stos
js
sbb
pop
inc
sub
push
jle
js
mov
add
stos
mulb
cmp
adc
sti
fistl
or
je
cmp
popf
or
scas
sti
cmpl
push
cmp
mov
fmull
shrl
pop
negl
sbb
add
add
cmp
add
push
fmull
je
jmp
push
jle
mov
jge
adc
dec
xor
sub
test
fcompl
pop
push
push
iret
pusha
mov
pop
and
fistps
pop
data16
sub
dec
je
fdivrs
je
sub
test
cwtl
inc
jg
ss
mov
pop
jmp
mov
mov
mov
mov
lret
leave
jmp
jl
jecxz
imul
popa
popf
in
rclb
sar
xor
jg
call
repnz
sti
push
jmp
xor
rol
inc
loopne
je
fcomps
xchg
xorl
push
mov
mov
sar
pop
orl
xchg
and
pushl
push
or
xor
in
sbb
push
push
daa
pop
pushl
js
aam
and
lea
sub
jae
int3
sub
mov
in
movsl
popa
rorb
dec
sbb
jae
mov
imul
jmp
inc
sbb
iret
pop
imul
fldz
andl
mov
cmp
jmp
sbb
shlb
in
sbb
je
movsl
js
mov
xchg
sbb
sub
push
jl
cmp
out
repnz
add
cmp
data16
mov
jnp
push
sbb
or
adc
and
pop
push
in
or
push
inc
sbb
movsl
shrl
fstl
lea
pop
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
push
push
or
movsl
cld
js
xchg
xchg
pop
jge
cmc
mov
ds
lds
inc
push
mov
push
cld
ja
aam
in
push
pop
push
lea
push
push
push
push
subl
fs
shll
lea
cmp
xchg
or
add
enter
dec
mov
pop
addb
lahf
aam
lcall
lea
xchg
aam
or
loopne
sbb
hlt
mov
inc
xchg
sahf
add
ljmp
in
mov
sbb
enter
jbe
and
mov
jae
jnp
sbb
push
aam
xor
mov
mov
and
inc
xor
add
stos
jne
dec
jns
test
fiadds
inc
push
add
popa
mov
add
cmp
sbb
mov
mov
addr16
shll
in
add
xchg
call
cmpl
and
lock
jmp
mov
xchg
add
rcll
insb
push
es
es
add
and
aas
inc
dec
rol
cmc
jne
push
movsl
test
or
or
es
mov
fcoml
lcall
inc
sbb
cmp
les
es
ret
dec
test
popa
xchg
in
mov
pop
dec
jae
cmp
xor
xchg
rolb
int3
push
lahf
aam
imul
push
mov
push
sub
adc
push
push
and
push
fs
cmp
sti
fidivs
jl
sbb
pop
fmull
sub
inc
jl
sbb
or
add
mov
and
jg
cmp
lods
nop
jecxz
sub
popa
rclb
push
loopne
xchg
pop
mov
pop
mov
das
in
sbb
push
jne
nop
jecxz
ds
push
push
add
out
fcoml
les
dec
fildl
cmp
push
loopne
xchg
inc
add
sbb
fsubrl
fcoml
sub
pop
movsb
imul
adc
jg
cmp
les
mov
cmp
jne
push
sub
or
jb
push
in
pop
fsubrs
pusha
add
xor
cld
test
pop
lea
push
loopne
add
mov
fmulp
mov
mov
enter
idiv
loope
mov
pushl
call
push
or
ljmp
mov
int
and
les
shrb
les
inc
push
mov
lock
rcl
dec
div
push
dec
je
dec
push
push
inc
sub
xchg
pop
in
jge
fidivrs
sub
sub
in
dec
jmp
sub
or
mov
in
jmp
mov
add
mov
xor
mov
add
inc
inc
dec
cmp
fs
xor
sub
call
or
sar
adc
jge
rep
out
in
mov
mov
jl
call
js
mov
ds
insl
sbb
dec
neg
sbb
or
and
and
mov
add
and
xlat
insl
xor
in
sbb
dec
notl
xor
cmp
fmuls
adcb
mov
js
push
ss
sub
lock
cmpsb
push
rorb
leave
and
push
push
ss
scas
in
sahf
sub
adcb
ret
push
repnz
mov
test
push
and
mov
jge
pop
xchg
add
or
sahf
icebp
ss
sti
outsl
and
push
shr
lock
pushl
and
adc
in
push
movl
jo
pop
mov
and
mov
inc
push
sbb
xchg
in
pop
loopne
xchg
dec
js
lret
push
int3
dec
or
mov
jge
add
pushl
push
jo
nop
inc
sbb
push
cs
push
int
jl
adc
xorl
push
ds
fcoml
in
jmp
cwtl
push
add
movsl
xchg
or
dec
cwtl
bound
std
dec
dec
add
or
ret
cmc
cmpsl
push
addl
adc
pop
cmp
mov
cmpsb
mov
push
andb
lcall
pop
pop
lods
and
pop
std
shll
fdivs
popa
sbbl
sbb
imul
xor
adc
push
jne
movb
add
cmp
jne
xchg
adc
mov
fldz
xor
pop
mov
xor
push
loop
jo
movb
jle
pop
ret
dec
aas
mov
xor
jl
outsb
jmp
test
cmp
or
rcll
xor
scas
xor
jl
rcrl
xchg
fimull
popf
sub
mov
sbb
mov
pop
push
dec
or
push
sbb
adc
nop
push
stos
out
add
push
jns
mov
xor
mov
xchg
cmp
iret
push
adc
enter
clc
add
mov
push
movsb
dec
xchg
hlt
push
add
stos
cmp
lods
test
mov
cmp
add
add
mov
loope
add
cmp
xor
xor
mov
sbb
cld
push
push
add
push
push
lea
sbb
out
push
sub
test
dec
pop
xor
xor
enter
mov
dec
jl
xchg
repnz
push
jbe
xor
movsb
pop
sbb
lea
adc
jge
mov
es
sbb
test
fbstp
jmp
inc
mov
fisttps
inc
inc
fldl
fsubrl
movsb
clc
roll
jl
out
pop
je
pop
xchg
push
xchg
push
push
push
aaa
cmp
sbb
or
dec
stos
jb
cwtl
mov
jno
xchg
fiadds
fldl
andl
xchg
add
jno
jae
push
and
negl
sahf
andl
in
lods
test
sbb
lea
ss
adc
adc
ret
jae
xor
jo
popf
test
je
or
call
add
repz
or
pop
test
pop
jo
add
jmp
mov
push
xor
inc
adc
roll
push
xlat
push
adc
push
xor
repnz
cmpb
xor
je
push
pop
cmp
sbb
mov
push
inc
fdivs
fstps
fildll
sub
sub
push
push
mov
adc
jbe
out
xor
and
repz
lods
jp
mov
bound
pop
loopne
jb
xchg
sbb
ret
mov
or
push
das
pusha
mov
pop
adc
insb
push
push
xor
push
call
jl
in
mov
push
sbb
aad
lret
rclb
loopne
xchg
fbld
je
sbb
or
out
push
out
mov
sub
outsl
sbb
xchg
scas
icebp
add
shrb
cmc
sbb
cmp
pop
in
mov
inc
clc
sub
negb
mov
cltd
mov
iret
dec
jecxz
lea
push
rol
or
dec
adc
sbb
test
xor
repz
mov
cmp
jge
adc
idiv
push
mov
test
fstp
push
push
mov
ret
xor
loopne
loop
idiv
and
cli
cwtl
jo
shlb
aam
fstpt
adc
xor
xlat
pop
sbb
mov
jnp
loope
mov
pop
adc
sub
ss
and
repnz
add
or
scas
pop
mov
lock
std
push
fstpl
push
pop
pushl
mov
sub
sbb
xor
sbb
jbe
std
lea
cltd
idivl
add
pop
and
inc
cmp
fwait
daa
add
fsubl
mov
ds
jg
out
sbb
dec
fs
or
xchg
arpl
mov
loope,pt
test
jle
cmp
xor
addr16
in
sbb
cmp
lea
jae,pt
jl
xchg
sub
cmp
mov
dec
nop
or
out
insb
mov
pop
sub
hlt
mov
test
jns
clc
std
not
faddl
or
mov
fdivrp
dec
ja
and
dec
sub
mov
test
clc
ret
mov
out
mov
xchg
pop
jl
jmp
into
push
call
mov
push
ret
outsl
fildl
into
clc
fidivl
jmp
push
arpl
sbb
xchg
cli
jle
fstpl
push
pop
mov
pop
movb
add
cmp
mov
jmp
pop
in
mov
push
clc
mov
mov
cmp
xchg
pop
loopne
xlat
and
cmpsl
je
out
or
pop
jne
push
gs
pop
mov
lret
je
or
pop
and
lods
xchg
sbbb
shrb
dec
dec
lods
pop
jo
push
push
pop
pop
into
pop
leave
mov
orl
lds
cwtl
aad
daa
cmp
sbb
nop
sub
pop
add
in
jne
in
add
mov
cmp
xor
imul
test
or
mov
pop
iret
addr16
dec
jns
and
cmp
pusha
xchg
xor
push
sti
add
pushl
in
outsl
lods
jl
adc
push
leave
pusha
pop
leave
or
mov
push
xor
sbbb
aad
addb
out
pop
xchg
lea
push
mov
push
pop
push
or
lea
filds
add
shll
push
push
ficoml
inc
or
inc
adc
mov
imul
andl
push
setp
sbb
scas
jle
jae
add
outsl
out
gs
cmpsb
jb
jb
or
sbb
fcoml
add
pop
and
mov
and
adc
bound
sbb
jmp
leave
ja
push
pop
int3
out
pop
pop
inc
or
mov
and
stc
lock
or
test
mov
addr16
inc
cli
and
push
xor
jge
orl
and
fs
scas
mov
add
push
and
pusha
sbb
push
inc
pop
adc
ss
cmp
add
dec
push
jmp
sub
clc
fs
clc
setb
test
adc
iret
sub
cmp
push
jl
outsl
in
je
xor
dec
adc
data16
push
lea
push
mov
pop
sbb
aaa
orb
sub
or
and
insl
addb
out
mov
and
push
jo
dec
dec
mov
mov
push
mov
hlt
mov
mov
jae
in
loopne
incl
fisubl
push
inc
mov
das
pop
js
in
mov
push
scas
pop
mov
imul
jg
pop
pop
rcrl
incb
mov
inc
test
jne
sub
pop
jmp
ds
push
arpl
sbb
add
or
adc
addr16
sub
pusha
sbb
add
fidivs
adc
icebp
mov
push
add
in
aas
jmp
cltd
shlb
jb
jmp
mov
pop
cld
jno
arpl
loopne
sub
push
mov
je
rolb
lods
jns
add
insl
cmp
js
xchg
and
dec
inc
xor
adc
xchg
and
push
jle
rorl
sub
out
sbb
js
lahf
retw
insl
sahf
inc
add
mov
mov
jne
push
sub
int3
jb
pushl
cmc
xchg
or
push
call
pop
bound
push
cmpsb
add
pop
or
mov
cwtl
jecxz
push
pop
push
sub
enter
sahf
inc
fmuls
xadd
cli
dec
xchg
jecxz
xor
push
das
add
scas
cli
or
add
xor
mov
add
mov
push
add
pop
add
sbb
or
iret
sbb
fstl
stos
xor
push
test
cmpsl
adcb
jle
pop
rorb
aaa
or
mov
adc
iret
xor
aam
inc
imul
addr16
adc
sbb
pop
pop
xchg
dec
test
je
sub
test
mov
xchg
lcall
xchg
sub
pop
pop
xchg
push
or
xchg
loope
fsubl
or
mov
popa
imul
fidivl
jnp
dec
inc
cwtl
sbb
push
in
rcl
adc
mov
in
sbb
mov
adc
cmp
mov
outsb
push
adc
mov
mov
xor
dec
enter
jmp
and
testl
adc
jp
adc
jne
mov
cmpsl
adc
adc
loope
clc
push
xchg
pop
pushl
outsl
in
sub
pop
aaa
or
mov
addb
lahf
push
sti
cmp
mov
sbb
faddp
test
je
iret
fidivs
loop
mov
test
je
jne
jg
cmp
push
dec
mov
jmp
dec
mov
sub
aam
insb
js
push
mov
lcall
scas
add
cs
pusha
inc
cs
adc
xchg
sub
ss
sub
in
mov
cmp
jge
mov
mov
mov
cmp
sbbb
or
aaa
or
push
pusha
jle
call
push
pop
inc
mov
and
mov
fsubr
inc
lcall
sbb
ljmp
jnp
mov
cs
mov
sbb
andl
sbb
push
inc
shlb
and
mov
cmp
in
mov
insb
dec
clc
mov
sub
inc
sete
adc
loope
das
insl
add
and
sbb
sbb
outsl
and
in
sbb
addr16
popf
sarl
test
data16
in
adc
mov
in
sbb
adc
or
add
and
mov
mov
arpl
dec
push
repnz
dec
add
push
add
int3
js
mov
push
cld
push
mov
pop
push
push
inc
xor
pop
jns
add
sti
push
dec
lock
sbb
loope
sub
mov
mov
and
adc
push
fistps
dec
mov
push
mov
jo
sbb
pop
addr16
ds
insb
orl
and
xor
dec
test
iret
frstor
sbb
add
out
cmp
push
xchg
push
movsl
test
in
fwait
jle
push
pushf
lret
xor
add
jmp
mov
xchg
or
push
mov
push
jne
stc
outsb
nop
data16
adc
push
pop
pop
test
cmpsb
add
pop
dec
loop
mov
clc
shlb
push
in
adc
sbb
stos
and
outsb
cmp
inc
or
in
repz
int3
arpl
in
call
inc
sbb
lock
and
adc
or
pop
mov
pop
daa
jl
arpl
mov
rorb
and
loopne
cmp
sbb
dec
es
jge
je
dec
xchg
jle
jge
cwtl
jge
inc
adc
or
insb
je
test
jg
neg
or
addl
fimull
je
jb
xchg
dec
insb
imul
xchg
add
pop
xadd
add
sub
push
and
ret
in
pusha
setge
aam
stos
adc
push
lods
inc
inc
jmp
xchg
cmp
push
gs
xor
inc
cld
cld
mov
hlt
mov
push
hlt
add
adc
xchg
adc
lock
pop
pop
test
imul
jo
incl
cmpsl
mov
js
std
inc
pusha
popf
or
lea
jle
pop
jle
mov
mov
clc
lock
mov
cmc
add
push
cmp
dec
mov
in
jmp
sbbl
shr
mov
add
sub
add
push
push
add
push
jne
push
ja
test
or
jbe
cmp
xchg
movb
or
add
and
push
pop
jns
in
add
jo
inc
add
push
loopne
inc
in
jb
js
inc
incl
cmp
jg
mov
cmpsb
aas
or
push
add
mov
sbb
aaa
mov
pop
push
jb
pop
pop
sub
push
push
movsb
clc
cmp
add
and
push
pushl
insl
and
popa
dec
adc
pop
add
clc
add
add
sub
dec
mov
ss
fs
push
xor
xor
cmp
je
sbb
je
push
rcrb
xchg
subl
int
dec
lods
sbb
push
cmp
jbe
lea
movl
push
bound
sub
push
or
mov
adcb
pop
push
push
sbb
sbb
je
xchg
fwait
jo
mov
pop
mov
andl
add
inc
xchg
out
add
lea
lods
arpl
fcomip
add
xchg
xchg
mov
subl
sbb
push
inc
cmp
fwait
gs
and
in
mov
js
in
adc
xchg
xor
and
jbe
mov
aam
insl
in
cli
add
inc
push
aas
add
cld
mov
repnz
fnstsw
push
sub
xchg
and
push
sub
mov
xchg
push
leave
ret
xchg
push
rolb
jne
jp
cmp
cld
or
sub
ja
andl
xchg
mov
xchg
pop
inc
fcompl
push
int
mov
push
hlt
xchg
daa
inc
addr16
movl
pop
jbe
cmovg
xchg
dec
sub
pop
push
std
shrb
xchg
es
sub
dec
mov
cmp
loop
inc
insl
push
pop
push
les
cmp
stc
movsl
or
cmp
out
cmp
xchg
mov
and
call
mov
fistpll
mov
push
pop
inc
add
hlt
jle
mov
xor
outsb
pop
cmp
lcall
or
lds
inc
pusha
pusha
mov
mov
incb
jmp
mov
ror
add
shll
push
pop
jecxz
out
nop
jbe
cmp
add
stos
js
sbb
jmp
push
add
mov
adc
sbb
test
subl
call
pop
shlb
add
rorb
je
pop
sbb
cmp
adc
das
cmp
and
jae
in
sub
sbb
not
cmp
test
popf
mov
movsl
xor
rclb
fimull
testl
push
data16
clc
jnp
mov
pop
cmp
sbb
push
adc
push
add
pop
sub
xor
xor
pop
std
fdivs
test
mov
inc
loope
pushf
pop
xorl
sbbl
jle
sub
push
imul
add
stos
sub
imul
adc
push
sbb
pop
mov
dec
jecxz
test
pop
es
in
xchg
clc
xchg
mov
add
push
inc
loopne
shlb
nop
add
fisubrs
and
pop
ss
daa
xor
push
push
movsb
mov
or
imul
movsl
ds
clc
add
fldenv
std
std
dec
sbb
fstps
pop
int3
xor
adc
sbb
push
enter
movl
mov
mov
sbb
sub
push
pop
mov
sub
sbbb
jmp
mov
xchg
mov
mov
mov
fwait
or
pop
ja
and
test
mov
aaa
xchg
mov
xor
js
test
rclb
xchg
push
out
inc
mov
lea
sub
sub
jmp
push
testl
push
setne
jb
and
test
andl
adc
test
popf
xchg
test
cmp
rorb
stc
pop
negl
rorl
push
or
add
or
enter
adc
dec
es
mov
mov
test
popw
push
lcall
xor
xor
out
nop
and
leave
or
push
xor
and
or
out
pop
mov
fists
cmc
js
orb
xchg
and
mov
les
loope
clc
mov
and
popf
push
push
jnp
cs
lret
mov
sub
and
jnp,pt
scas
mov
mov
mov
push
dec
push
lea
sbb
cmp
jp
adc
lret
cmp
mov
sbb
ja
stos
jmp
add
sti
xor
dec
gs
push
dec
cs
ds
fsub
or
in
test
pop
enter
sbb
adc
pop
or
jae
xchg
jae
aad
mov
inc
popa
repz
loopne
dec
jne
repnz
test
iret
lods
pop
sti
in
test
jmp
dec
hlt
nop
pusha
nop
nop
or
mov
xchg
or
xchg
addr16
cs
nop
xor
and
adc
adc
lock
nop
inc
es
xchg
fiadds
pop
xchg
dec
push
fs
sbb
and
sub
pop
incl
and
add
jne
push
cmp
xor
ss
js
pop
jmp
mov
adc
ss
sbb
pop
xor
push
data16
lds
jb
dec
jle
xor
add
xor
outsb
mov
loope
mov
movzwl
jb
add
mov
cld
or
mov
push
cmp
jge
lods
les
adc
imul
push
jp
fidivl
push
mov
mov
mov
leave
mov
dec
adc
mov
push
test
or
mov
push
fdivrs
testb
push
mov
sbb
xor
add
sti
test
fs
mov
push
rolb
lock
or
repz
mov
cmp
js
sarl
inc
and
fistpl
aas
pushf
mov
cmp
pop
jnp,pt
in
add
adcb
jl
out
sub
adc
xchg
mov
xlat
jbe
and
and
push
mov
fcoms
mov
push
addb
mov
push
add
lea
lea
or
test
pop
mov
lea
push
scas
enter
addr16
or
inc
and
sahf
out
test
lea
xlat
mov
xchg
lahf
xor
xchg
push
cmc
mov
sbb
pop
xor
cmp
add
fdivr
insl
sub
insb
or
sbb
push
hlt
roll
ret
mov
mov
push
aam
pop
inc
and
rorb
rclb
clc
andl
or
or
aad
jnp
and
mov
clc
pop
adcl
incb
inc
out
xchg
das
ss
in
cmpl
xchg
jecxz
push
ret
mov
jmp
test
jg
mov
das
push
sbb
ja
mov
lock
idivb
add
repz
jb
negb
out
lret
test
pop
pop
data16
sbb
sbb
dec
insl
scas
fisubs
rolb
inc
dec
mov
add
inc
lret
pop
cmp
bound
ljmp
aaa
xchg
rcl
std
push
movsb
sbb
mov
fidivs
call
push
rcrb
jno
adc
add
jns
aaa
mov
mov
add
xchg
pushf
jo
cmpsb
pushf
jl
outsb
cmp
jns
in
adc
repz
or
mov
dec
cli
imul
mov
xchg
cmp
push
mov
jo
jae
in
add
call
xchg
aaa
or
xorb
popf
push
stos
inc
push
xchg
mov
mov
dec
lea
push
mov
or
xchg
push
or
or
in
dec
loop
pop
test
nop
insl
fbstp
test
test
movsl
jno
std
cmp
sbb
inc
push
pusha
scas
push
aaa
push
cwtl
add
xchg
xlat
mov
push
fneni(8087
push
mov
daa
fadds
fisttpll
loopne
xor
sub
or
movl
insb
inc
repz
pop
loope
xchg
shlb
xchg
mov
jge
sbbb
shrl
and
les
inc
sub
mov
pop
popa
testl
aam
orps
test
insl
je
int3
and
inc
jne
pop
negl
ljmp
mov
stos
and
je
pop
add
push
sub
gs
sub
imul
fistpl
nop
pop
sbb
adc
cmc
sbb
sbb
stc
or
outsl
sub
or
rcrb
pop
pop
or
jno
cmpl
xchg
add
shll
mov
rorb
xor
jo
testl
sbb
or
dec
xor
rorb
fists
and
test
jae
lea
nop
das
mov
icebp
test
adc
imul
sbb
cmp
or
cmp
mov
and
push
mov
mov
es
sub
loopne
es
test
push
cmc
fsubrl
mov
sub
jl
sub
adc
data16
inc
in
jge
call
xor
loopne
outsb
and
fcoms
aas
aam
pop
or
daa
das
and
rcrb
xchg
das
outsb
leave
les
nop
jbe
or
sbb
andl
insl
scas
outsb
repnz
int3
xor
dec
adc
orl
jmp
cmp
cs
xor
repnz
sub
insl
faddl
inc
repnz
rolb
xor
xchg
out
in
sub
sub
rclb
mov
out
adc
mov
mov
pop
jmp
cmpsb
jo
loopne
pop
adc
loopne
or
lods
cwtl
ret
insb
pop
loope
mov
out
ljmp
in
add
mov
shlb
or
daa
xchg
push
mov
jl
adc
out
mov
les
dec
repz
sbb
push
leave
mov
xor
mov
push
addl
push
pop
pushf
les
push
adc
inc
fcompl
cmp
add
andl
mov
incl
push
or
js
mov
push
rolb
push
jl
push
cwtl
lock
xchg
mov
sub
int3
xchg
sbb
xor
push
and
in
pop
leave
mov
sub
lods
ss
movsb
dec
pop
or
or
shrl
mov
or
add
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
popa
movsl
or
mov
enter
ja
fisttpl
rclb
dec
jge
mov
adc
int3
pop
push
or
ja
lcall
insl
jns
sete
push
jae
fldl
call
mov
and
mov
es
data16
add
mov
das
add
mov
xchg
adc
enter
and
test
jae
or
mov
push
loopne
push
rorl
cmp
or
es
mov
mov
ljmp
mov
xchg
adc
mov
push
mov
adc
sub
scas
add
inc
pop
mov
lcall
cmp
mov
addl
adc
jge
lret
ds
and
insb
and
lahf
mov
outsl
push
insl
pushf
add
pop
imul
enter
sub
push
arpl
xor
movsb
sbb
jno
pop
add
add
sbb
xor
jo
xchg
xchg
adc
push
out
adc
lock
sub
mov
jns
cmpsl
shll
outsl
cmp
sbb
adc
call
ja
add
jb
rorb
add
lret
push
in
and
into
mov
enter
jo
adc
push
iret
int
int3
ror
cmp
or
xchg
sub
scas
ja
and
pop
or
pop
repnz
jns
pusha
pop
stc
push
movzwl
mov
adc
jl
push
int3
cmp
mov
inc
inc
and
pusha
das
adc
mov
cltd
xchg
push
pop
cmp
add
enter
sbb
add
fsts
adc
cmp
inc
iret
arpl
jle
mov
rcr
inc
xchg
mov
adc
push
push
add
inc
add
push
xchg
add
push
insl
add
mov
add
push
or
add
loopne
xchg
leave
test
adc
xchg
jnp
sahf
or
faddp
jmp
ret
mov
ss
rorl
cld
je
cmpb
addr16
shrl
lds
xorps
mov
xchg
loope
clc
je
imul
dec
clc
mov
sti
lea
push
lea
push
inc
push
and
cltd
jecxz
popf
push
bswap
cltd
scas
add
ret
fsts
sahf
popa
push
data16
std
inc
cltd
jno
lret
cmp
jl
xchg
mov
int3
xor
sarl
pop
sub
pushf
jle
addr16
and
cmp
jne
popf
mov
xor
push
add
icebp
imul
sti
push
ss
xchg
stos
aad
jns
mov
out
orb
sbb
stos
adc
sub
push
push
cmp
leave
loope
aaa
pop
fcmovnu
loope
in
js
add
fstps
sti
push
or
cmpsl
fnstenv
sub
xor
jmp
scas
repnz
in
pop
adc
popa
fimull
lahf
in
xor
jecxz
fldcw
fisttps
movsl
loope
out
push
dec
or
in
out
and
xorl
dec
loope
fwait
test
stos
mov
inc
jae
add
adc
loopne
leave
jo
faddl
pop
sub
mov
pop
xchg
push
clc
arpl
or
cmpl
jge
and
and
into
insb
push
xchg
cmpsb
cmp
ret
sbb
inc
add
push
cmc
or
dec
xor
fimull
lahf
and
div
jbe
paddb
mov
lea
push
ljmp
jne
fistpl
adc
roll
add
cli
hlt
dec
or
in
push
rorb
lds
sbb
inc
addl
push
ret
jb
gs
arpl
add
leave
add
inc
jo
imul
push
insl
clc
daa
adc
adc
popa
or
dec
push
add
repnz
mov
out
scas
dec
ret
aam
in
sbb
fisttpll
outsb
inc
aaa
jl
jmp
pop
and
leave
add
dec
sbbl
xor
test
cmp
test
shlb
cmp
cmpb
push
ss
xor
xchg
cmp
je
push
jg
or
mov
and
and
dec
push
jle
add
cmp
dec
addb
repz
decb
incl
adc
aam
sub
push
dec
lods
push
faddp
loope
rol
jmp
test
push
sub
sbb
jmp
mov
jno
mov
push
inc
cmp
jae
add
mov
test
cmp
fadds
pop
ret
pop
sbb
inc
cmp
xchg
ret
mov
in
loop
push
add
lea
jmp
push
sub
jbe
mov
ljmp
jbe
sub
xchg
dec
add
fildl
lret
inc
call
or
lock
cmp
add
jae
and
add
cmp
fcmovnu
aaa
cmp
mov
orl
cmp
mov
adc
aad
sarl
cld
mov
inc
ret
fcoml
sub
push
push
jle
mov
sub
repnz
push
or
jmp
addr16
or
setno
or
int
daa
jb
push
lock
imul
sub
pop
pop
leave
cwtl
icebp
or
inc
arpl
ret
pop
and
lea
push
mov
cmp
je
dec
pop
add
add
jp
jno
xchg
sbb
nop
push
xor
mov
mov
xchg
inc
push
and
popa
cmpsb
xchg
mov
daa
icebp
pop
hlt
inc
push
jge
mov
popf
scas
push
sub
mov
or
pop
push
popa
ja
pop
clc
pop
in
jl
push
mov
xchg
int
mov
add
fadds
inc
mov
xchg
insb
jl
lea
ss
push
sub
loopne
jmp
mul
ljmp
jl
sahf
push
xor
in
jbe
jbe
mov
fimuls
sbb
ret
sub
add
mov
loopne
out
jne
test
es
dec
xor
push
je
jno
les
inc
jmp
cmpsb
mov
int
jns
xlat
mov
daa
push
lcall
gs
add
cmp
lahf
adcb
ja
xorl
and
xchg
sbb
lods
xchg
sub
sbb
lods
jnp
xchg
loope
sbb
scas
xchg
lcall
in
test
adc
jo
out
in
push
jne
andl
jnp
stc
push
or
dec
xor
fs
fstpl
xor
push
ret
mov
or
adc
int3
sub
popa
mov
or
add
add
out
cmp
inc
add
xchg
cmc
dec
and
jae
push
or
pop
push
add
test
jge
inc
adc
notb
mov
js
mov
cmp
jmp
sub
fs
adc
sbb
jecxz
cmpsb
pop
in
xor
inc
push
dec
dec
outsb
adc
dec
fstpl
add
mov
imul
popf
xor
xor
adc
add
xor
andb
sbb
pop
pushf
pop
andl
add
sbb
pop
mov
mov
or
mov
push
or
insl
rclb
pop
xchg
pop
sub
nop
inc
mov
insb
or
cmp
push
pushf
fsubrl
enter
movaps
lret
jmp
jmp
inc
mov
popf
outsl
loopne
leave
ret
push
mov
repnz
inc
mov
cmp
mov
test
xchg
mov
mov
inc
js
test
sub
movsb
dec
popf
xchg
push
cmpsb
or
dec
adc
int
push
loope
movsl
insl
mov
dec
dec
add
sub
push
jmp
je
mov
xchg
mov
or
mov
jg
pop
cmpl
mov
jne
iret
test
xor
cmp
dec
jecxz
sbb
js
sbb
push
pop
gs
popf
dec
fcmovnbe
mov
rolb
cmp
addl
mov
andb
xchg
rorb
loope
mov
xchg
lods
mov
nop
add
push
ficoml
daa
mov
adc
lods
push
iret
cmp
and
test
cwtl
popf
mov
mov
xorl
push
jns
xor
cltd
nop
and
adc
mov
dec
sbb
adc
inc
add
cmpl
fcmovnbe
adc
cmp
jbe
mov
add
or
pop
repz
popf
rcrl
xchg
mov
jb
cli
iret
mov
push
pop
lea
dec
nop
loopne
pop
and
or
int
test
repz
xor
and
adc
cmp
repnz
push
aam
and
in
insb
xor
mov
sbb
sub
jle
rclb
shrl
loopne
lret
bswap
lea
xchg
loopne
stos
ljmp
hlt
enter
xlat
fdivs
js
lcall
js
add
push
inc
or
fadds
push
cmp
aaa
cmp
mov
pushl
sahf
mov
mov
jge
pop
add
mov
aas
jecxz
mov
and
sub
jmpw
xor
lcall
gs
dec
mov
bswap
mov
jp
aas
ljmp
rcrb
stos
push
hlt
lea
push
or
sbb
cltd
sbb
insl
aaa
and
push
mov
mov
loop
mov
xor
cmpl
ret
dec
and
inc
or
mov
dec
inc
cmpsb
fnsave
dec
ret
sbb
inc
adc
add
arpl
sbb
lock
jo
leave
mov
cwtl
cltd
iret
clts
push
push
push
pop
xchg
dec
repnz
pop
pop
pop
sbb
sbb
repz
mov
fwait
mov
xor
dec
pushf
sbb
sbb
in
sbb
sbb
movsb
adc
nop
add
push
icebp
mov
faddp
je
adc
imul
ret
fisttpl
rolb
inc
inc
xchg
lods
movsl
xor
sub
mov
ss
aad
mov
sub
and
adc
xchg
xchg
inc
and
cmpb
xor
daa
std
push
cmpsl
and
loopne
cmc
and
mov
dec
or
ret
dec
adc
mov
inc
ja
mov
cld
mov
ljmp
adc
pop
adc
xchg
cmp
mov
mov
jbe
or
sbb
inc
push
adc
push
adc
add
ljmp
adcb
pop
sub
inc
add
les
xor
enter
ffreep
adc
call
mov
sbb
push
xor
les
lea
adc
pop
fwait
daa
and
cmp
lods
ja
test
or
or
sbb
mov
subl
lcall
pop
outsb
dec
call
jnp
or
scas
add
lea
mov
clc
js
cmc
lret
in
mov
ss
cmpsl
pop
hlt
lea
shlb
imul
ss
shlb
jne
pmullw
adc
shrl
out
hlt
xor
in
add
push
addr16
insl
push
mov
daa
pushl
xor
leave
add
add
xchg
jo
and
rorb
pop
xor
rorb
mov
movsl
sub
inc
xchg
test
in
and
lea
mov
jmp
pop
or
mov
inc
insb
pop
stc
sbb
jecxz
mov
loope
outsb
call
xchg
add
mov
test
inc
mov
adc
mov
inc
push
mov
mov
cmp
setne
mov
cmp
out
mov
cmpsb
adc
pop
push
add
jp
mov
push
nop
in
xor
or
dec
adc
or
mull
mov
or
int3
push
adc
xchg
jo
jmp
mov
push
nop
lock
jo
adc
jl
scas
push
outsb
xlat
out
pop
int3
mov
cmp
mov
mov
daa
lods
push
fsubrs
push
lea
vsqrtpd
add
cmp
sbbl
inc
mov
mov
ficomps
andl
cmp
pop
mov
mov
jle
or
inc
fisttpll
stos
xor
in
test
mov
mov
cs
or
decb
loope
inc
ss
dec
mov
cmpsl
cmc
or
lds
imul
outsl
sbb
mov
out
adc
fdivs
mov
nop
dec
pop
add
xlat
sahf
sub
mov
inc
cmp
fwait
sbb
js
jnp
add
das
mov
push
subl
pop
mull
imul
inc
in
mov
mov
into
hlt
mov
call
xor
and
out
xor
mov
jl
lock
mov
imul
mov
fwait
jae
bound
inc
orb
push
jo
sbb
add
popa
insl
xchg
xlat
push
adc
mov
adc
mov
push
adc
fwait
mov
rcrb
aam
test
mov
sbb
insl
xor
sub
movsb
dec
es
sbb
xor
lea
and
test
mov
add
in
cmpb
mov
imul
xchg
push
xchg
hlt
mov
call
shlb
ret
dec
adc
cld
outsb
fwait
inc
sub
mov
inc
push
inc
pop
cmp
sahf
push
cmp
jne
pop
sbb
sub
mov
cmp
sub
cmp
or
out
xor
and
lahf
and
shrb
jne
cmp
and
push
adc
add
sbb
fwait
scas
push
pop
xor
in
fcompl
andl
push
and
sysret
push
pop
push
mov
cmp
loope
ret
xchg
aas
push
sbbl
inc
cmp
pushf
or
jle
lods
add
les
dec
fdivs
orps
sub
jmp
fsubr
rcrb
jl
add
sub
push
pop
into
jp
ret
fiaddl
enter
pop
test
sbbl
sub
ret
sub
push
ds
add
test
cmc
dec
faddl
inc
lcall
hlt
aaa
in
dec
rclb
dec
insb
push
push
push
pop
loopne
mov
cmp
outsl
or
jns
inc
and
cmpsb
dec
mov
xchg
adc
roll
rcl
cltd
sub
push
xchg
add
mov
sub
aas
in
inc
das
shl
insl
lds
push
xor
inc
js
pushl
imull
pop
mov
pusha
scas
adc
mov
xchg
movsb
adc
pop
or
inc
xchg
or
inc
sbb
ret
and
adc
or
orb
pop
inc
inc
mov
inc
sahf
dec
adc
xchg
inc
mov
pop
adc
xor
or
sub
orl
insl
es
jnp
ror
pusha
inc
fsubs
mov
mov
xor
lea
cmpb
fsubl
mov
imul
divl
ljmp
add
insb
cmpsb
jmp
mov
pusha
inc
mov
fildll
sbb
pop
shlb
pop
sbb
fcompl
and
xchg
clc
push
inc
gs
jp
pusha
inc
cmp
mov
xor
push
insl
mov
pusha
xor
xor
sub
jl
adcb
ret
add
pop
ficomps
mov
dec
add
inc
inc
xorb
push
fmuls
aad
sbb
adc
dec
dec
pop
xlat
pop
or
push
cmp
clc
scas
mov
xchg
sbb
fisttpll
pushl
lea
lea
push
mov
ret
test
and
pop
imul
and
nop
imul
leave
int3
out
or
mov
mov
outsl
add
pop
inc
and
add
das
test
test
orl
inc
pop
in
cwtl
icebp
mov
sbb
sbb
js
movsl
mov
pop
movsl
cmp
cmp
lock
xlat
clc
mov
aad
into
pop
sub
or
sbb
inc
mov
sbb
lods
cmpb
mov
dec
jo
ret
mov
rorb
test
std
test
icebp
jae
add
mov
mov
idiv
sar
cmp
lods
call
or
adc
std
inc
add
or
xor
add
fisttpl
add
sub
dec
ret
cs
test
xchg
in
js
popa
lahf
aas
lods
pop
fdivr
roll
mov
aam
lock
call
lds
into
push
sub
into
movsb
add
les
jl
loopne
mov
jmp
ja
out
xchg
cmp
dec
xlat
scas
sub
popf
mov
loope
jb
sbb
subl
adc
je
xor
inc
mov
push
movl
or
cmp
sbb
push
lods
sbb
add
jmp
push
in
dec
fidivrs
loope
or
imul
jge
add
sub
jge
in
and
add
in
inc
ret
imul
fnstenv
lock
mov
rcr
les
loop
cmpl
cmp
shl
aam
outsl
sub
je
dec
jne
je
adc
and
push
jnp
cmc
les
jmp
and
pop
bound
lcall
enter
add
stos
test
add
aam
insl
leave
fwait
jmp
aaa
lock
repz
fisttps
ret
ror
pushl
pop
xchg
add
mov
sbb
andl
cmp
or
inc
test
mov
mov
std
sub
dec
mov
lea
cli
jb
lea
or
cwtl
inc
int3
and
aas
filds
hlt
stos
jmp
lea
or
or
pop
ja
xchg
shrb
or
je
mov
mov
push
data16
fs
and
mov
mov
test
adc
pop
enter
push
and
pop
int3
push
xorl
insb
bound
and
push
imul
rcrb
imul
lock
aam
pop
jo
push
cmp
testb
adc
sub
xor
ds
mov
daa
mov
dec
push
pop
adc
sbb
mov
sub
test
adc
push
lcall
mov
add
int3
or
call
jge
sub
mov
jns
icebp
lea
push
sarl
xlat
mov
lods
xor
xchg
cmp
sbb
mov
sbb
push
cmp
in
and
nop
enter
shr
and
pop
fildll
push
je
aaa
jns
shll
andl
movsl
mov
sbb
fsubl
es
mov
sbb
or
adcb
cltd
jmp
pop
dec
stos
sbb
xchg
lock
add
and
xor
popa
mov
ss
xchg
sub
xor
add
add
leave
adc
and
push
mov
test
popf
iret
ja
sub
add
sbb
cmc
or
bound
push
and
cmp
mov
inc
adc
sub
pop
adc
fildl
adc
adc
adc
pop
mov
cmp
or
push
add
jnp
adc
sahf
sub
jbe
push
xchg
mov
fdivl
inc
sub
mov
test
mov
loopne
push
xor
ficoml
push
and
sub
push
pop
popf
test
push
inc
cmpl
addb
dec
pop
imul
dec
add
xchg
sub
push
mov
pop
int
pop
sbb
mov
popf
sbb
fmull
movsb
and
push
leave
mov
sbb
and
ja
das
mov
divb
sahf
adc
inc
cmp
jl
xchg
notb
inc
pop
out
out
sbb
dec
add
lods
inc
nop
inc
ret
pop
pop
jno
and
mov
ds
sbbl
pop
aam
mov
mov
xorl
insb
mov
mov
in
mov
lea
rorb
mov
dec
xor
adc
cmp
pop
mov
test
ja
push
lret
sub
andl
fidivs
sarl
push
pop
jae
inc
fmull
add
int3
add
adc
xchg
adc
or
sbb
mov
cld
add
inc
mov
xchg
cmp
cmp
je
imul
popf
cmp
push
xchg
xchg
ret
and
push
inc
imul
movsb
lea
inc
lods
push
ret
testb
call
sbb
or
es
cmp
or
mov
aam
push
cmc
imul
fisubrl
inc
sahf
cld
subb
xor
adc
or
jle
jle
sub
jae
lret
mov
dec
lret
rolb
xchg
shrb
adcb
push
add
cmp
push
xchg
sbbl
add
outsb
or
add
inc
stos
roll
mov
das
jl
sub
push
and
int3
sbb
outsb
fistpl
sub
push
mov
test
or
loopne
cmpsb
mov
cmp
mov
mov
subl
int
or
iret
sbb
sbb
testl
lock
aam
sbb
add
inc
pop
aaa
xchg
push
enter
mov
test
cmp
int
cmp
xor
aam
outsb
xchg
shrb
dec
and
dec
inc
or
lret
mov
or
adc
test
ret
into
sbb
mov
lea
pop
out
sbb
sub
aaa
xchg
sti
push
lea
add
dec
rcl
aaa
cld
push
jae
cld
pop
adc
sub
add
ljmp
mov
ja
sub
mov
or
mov
push
dec
cmp
cmp
mov
pop
sbb
adc
adc
push
add
sbb
mov
inc
ljmp
push
test
push
mov
add
push
iret
imul
cmp
fldt
dec
cwtl
rcll
pop
stos
ds
push
jg
xchg
icebp
pop
pop
dec
or
inc
fstl
test
dec
movsb
xchg
sub
fstl
push
sbb
xchg
filds
xchg
mov
dec
aas
cli
insb
cmp
rol
push
or
add
test
add
dec
pop
pop
adc
mov
push
out
cmp
jge
fstps
movsb
sbb
sub
jo
outsb
xchg
cmp
stc
add
test
add
inc
cmp
sbb
add
in
and
sarl
lcall
inc
mov
sbb
test
mov
dec
jl
dec
push
loop
xchg
mov
leave
insl
sub
jecxz
jmp
add
imul
pop
rcll
sbb
mov
xchg
cmc
add
adc
pop
loopne
dec
adc
cmp
adc
popa
or
add
loopne
sub
xor
shr
sbb
and
pop
xchg
int
inc
and
sub
fwait
sub
and
and
inc
push
adc
cmp
or
push
test
add
sti
dec
in
dec
pop
add
shll
aas
movl
repnz
push
pop
mov
xchg
loopne
shrl
pop
mov
mov
and
push
out
orl
sub
dec
sbb
pushf
jl
dec
push
imul
jmp
sub
orl
and
andl
popa
movsl
push
xchg
xor
dec
sbb
mov
or
imul
mov
pop
ret
dec
js
pop
sub
xor
pop
dec
daa
daa
or
jp
leave
or
aaa
sub
sbb
mov
jno
jnp
jmp
pop
cltd
adcl
dec
and
loope
xchg
inc
mov
movsb
or
and
call
jmp
mov
out
nop
out
mov
sbb
adc
push
jo
xor
jecxz
mov
mov
nop
je
out
xchg
sub
in
inc
push
mov
mov
xor
and
shrl
mov
add
add
pop
pusha
adc
popa
ror
pushf
inc
aaa
stos
xor
or
dec
cmp
je
xlat
gs
sbb
mov
bound
int3
jno
pop
aad
and
stos
adc
je
mov
push
adc
cwtl
xlat
dec
and
mov
pop
imul
cwtl
movsb
imul
inc
jg
orb
push
rcll
xor
shlb
mov
pop
or
icebp
adc
add
stos
shrb
mov
and
sub
or
test
xor
cmp
rcrl
mov
sub
dec
lcall
sbb
imul
outsb
xchg
sbb
lods
lds
sub
ja
inc
movsl
add
dec
out
mov
cmp
or
mov
dec
stc
sbb
pop
inc
push
and
test
imul
sbb
sbb
in
sbb
or
es
cmc
jbe
aam
shrb
testl
mov
lcall
adcb
adc
aam
mov
or
add
sbb
add
cmp
fisttpll
fcomps
iret
mov
je
adc
mov
push
xor
xchg
popa
stc
push
frstor
or
xchg
xchg
or
dec
pop
dec
xchg
lahf
shr
repz
xchg
adc
shlb
or
inc
call
pop
cltd
push
xchg
or
sbb
cmp
xchg
jnp
sbb
jmp
pop
jnp
mov
mov
xor
cmp
or
adc
mov
jl
stos
jp
add
jo
push
push
cmp
mov
lea
aad
mov
inc
inc
ret
push
orb
sub
pop
loope
adc
push
iret
mov
movsl
sbbb
dec
movb
addr16
lea
xor
cwtl
shl
jbe
shll
dec
loopne
pop
sbb
in
fadds
lret
xor
adc
xchg
cwtl
cmp
mov
add
sub
divb
mov
rcrb
lea
jmp
adcb
pop
aam
cmc
insl
fcmovnb
add
pop
jge
pop
xchg
testl
in
adc
mull
ss
adc
dec
xchg
or
or
aam
mov
fdivp
xchg
ret
imul
pop
cs
xchg
and
push
xor
jne
into
xchg
lods
cmp
mov
cmp
aaa
loop
cmp
inc
sub
xor
test
sbb
xchg
sub
filds
lds
and
xchg
cmpsl
jle
rorb
or
enter
ret
out
lea
jae
xchg
mov
bound
int
nop
dec
jb
clc
sbb
or
daa
loopne
inc
xor
cs
and
add
pop
test
and
leave
and
and
xor
and
push
andl
mov
push
jne
mov
ret
dec
and
es
cmp
lds
sbbl
leave
adc
daa
xchg
pop
push
pop
mov
jmp
sub
pop
xor
sub
leave
mov
jae
sub
dec
dec
and
sub
sub
sbb
cmpsl
nop
sub
js
xor
adc
mov
push
stos
notb
dec
dec
push
push
sbb
dec
or
nop
adc
loopne
das
and
in
xchg
lods
jae
icebp
dec
and
mov
adc
leave
mov
dec
adcl
outsl
jle
dec
mov
rorb
and
xor
rcl
push
pop
mov
pop
push
push
or
lcall
push
movsb
or
lea
xlat
sub
fadds
adc
and
sbb
sbb
dec
xor
add
sbb
mov
xor
jns
push
add
adc
test
inc
in
adc
adc
xchg
insb
loop
mov
hlt
sbb
test
in
out
cld
push
inc
jl
insb
push
push
movl
js
repz
jp
add
and
shl
push
dec
movsl
stc
cmp
sarl
pop
lock
mov
adc
push
daa
cmpsb
loopne
xchg
mov
push
rolb
push
movsb
call
cmpsl
test
and
lds
or
push
shrb
or
or
in
dec
xlat
pop
jecxz
pop
adc
jae
cmp
jne
insb
int
add
and
mov
cs
lods
jge
adc
test
out
xor
hlt
dec
sub
fildl
add
add
arpl
pop
push
test
shlb
daa
insl
cmp
mov
loopne
js
in
stos
stos
adc
or
stos
push
stos
jge
iret
push
int
lods
push
inc
push
int3
aaa
loope
daa
mov
shrb
inc
sbb
push
mov
mov
add
loopne
cmp
add
inc
aam
push
lock
cld
xlat
push
xchg
pop
jecxz
je
lahf
lods
cltd
dec
sub
das
add
les
cmp
push
ss
orb
mov
add
lea
int
cmp
popf
sbb
xor
or
adc
pop
call
cmp
lods
lods
jp
jl
ret
sbb
pop
push
les
or
xor
xchg
and
lods
ss
sti
rol
cltd
sbb
enter
mov
test
xor
xlat
lcall
lds
cmp
jmp
lods
jge
arpl
add
inc
inc
add
test
jl
pop
cmp
push
dec
dec
mov
aas
les
pop
and
das
sub
nop
decb
add
ja
cmpb
lods
or
push
fdivrs
je
add
aam
mov
dec
mov
add
repz
mov
or
nop
stc
sbb
push
sub
push
pop
xchg
cs
sbb
mov
lock
das
adc
and
inc
jne
push
test
or
xchg
mov
jge
mov
ja
mov
jne
rcr
jmp
popa
add
add
aaa
xchg
mov
aaa
add
rcrl
sub
inc
inc
pusha
or
xchg
pop
inc
jo
mov
inc
and
sbb
xor
mov
add
imul
xchg
or
loopne
adc
mov
shlb
lods
es
loop
or
fisttpl
dec
movsb
outsb
add
adc
pusha
test
and
inc
or
dec
mov
unpckhps
pushf
aaa
jne
inc
cmp
mov
jae
jle
ds
pop
pop
icebp
scas
and
adc
pusha
cmp
sbb
pop
mov
mov
pop
sub
push
pop
insb
and
es
ret
test
fs
daa
lahf
push
in
and
lret
sbb
dec
sub
dec
inc
in
mov
loope
clc
cmpsb
dec
or
cmpl
inc
push
mov
pop
inc
jmp
mov
sub
xor
jo
dec
jo
xor
bound
pop
mov
mov
adc
xor
jmp
sub
movsl
loope
sbb
popa
nop
popf
in
pusha
inc
sbb
cs
stos
or
dec
push
mov
popa
ja
movsb
inc
stos
mov
out
pop
add
jae
and
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
rcrl
push
popf
movsb
mov
cmp
inc
sbb
xor
clc
enter
and
add
cmp
push
mov
in
inc
sub
outsl
mov
lret
xchg
push
divl
dec
push
pop
ret
mov
test
xchg
shlb
or
or
ja
clc
pusha
sbb
aam
inc
and
sar
test
cmp
jle
cld
jae
inc
add
outsb
mov
pop
je
xlat
into
sbb
and
loopne
ret
cwtl
cmp
add
sub
cmp
cmp
loope
js
aam
jmp
js
xor
xchg
add
sbb
add
dec
sub
lret
jle
cltd
adc
inc
ret
pusha
jmp
stc
int
rolb
les
add
out
sub
stc
adc
stc
bnd
lods
add
push
inc
push
enter
dec
dec
sub
push
xor
sbb
ss
mov
mov
mov
addr16
push
sarb
mov
sub
adc
xchg
mov
lret
xchg
mov
sub
nop
add
xchg
mov
repnz
jmp
add
movsl
push
add
adc
nop
push
notb
inc
mov
lea
xorb
leave
add
lock
test
jnp
mov
pop
or
pushf
pushf
inc
or
push
cmp
sub
and
adc
sti
jo
int3
cmp
push
testl
or
xor
xor
dec
mov
in
movl
or
add
andl
bound
fsubp
mov
mov
and
cmovg
inc
mov
xor
add
shl
cmp
out
inc
fsubrs
adcb
or
push
xor
loopne
ja
lock
cmpsl
adc
cmp
and
test
adc
cmp
inc
sbb
mov
sbb
mov
inc
push
adc
das
clc
gs
push
add
push
xor
loopne
enter
aaa
pop
add
leave
xor
mov
dec
ss
xor
mov
or
les
cmp
pusha
xor
call
pop
movsl
inc
inc
mov
inc
pop
xor
adc
push
jmp
inc
mov
inc
rorb
ret
outsb
pop
dec
xor
push
sub
push
cmp
dec
sbb
adc
and
ds
add
stos
mov
dec
cmp
adc
outsl
lret
lahf
inc
inc
xor
push
add
xor
and
sbb
into
xor
and
xor
lret
adc
mov
mov
loop
mov
jo
jl
and
push
sbb
ja
dec
pop
sub
push
js
leave
rcrl
cmp
aaa
sti
and
test
jle
pop
push
push
dec
xchg
cli
mov
mov
roll
sbb
aad
push
cmc
push
dec
mov
shll
je
stos
incl
aaa
imul
add
fistl
out
adc
lods
popa
or
dec
inc
leave
cmp
jns
sbb
orb
jbe
push
push
xchg
push
pop
or
or
movsb
adc
adc
fistpl
or
mov
icebp
pop
pushf
jl
shlb
sub
and
mov
dec
cmp
lcall
cmp
repnz
dec
sbb
es
mov
or
mov
sbb
jnp
inc
or
js
int
repz
cs
imul
mov
adc
mov
sbb
pop
test
add
adc
pop
popa
or
mov
popf
lods
cmp
adc
adc
stos
lods
sub
adcl
mov
js
dec
inc
jg
xchg
cmp
jge
xchg
inc
sub
add
xor
adc
pop
inc
js
out
es
inc
mov
movsl
hlt
sub
cmp
push
pop
in
xchg
jmp
or
mov
fucomp
push
push
inc
push
fidivrl
and
ljmp
xor
xchg
and
jb
jmp
xchg
push
dec
test
rclb
fiaddl
pusha
push
inc
stc
xor
icebp
fcmovne
adc
lods
and
roll
xor
mov
mov
cld
add
js
pop
loope
jo
or
or
daa
out
sbb
popa
aas
jmp
das
mov
push
popf
xor
cwtl
rcr
lret
sbb
pop
popf
add
lods
dec
stc
sbbl
sbb
addr16
or
push
mov
lcall
sti
inc
push
mov
add
cmp
add
imul
push
add
mov
push
imul
insb
push
xorl
in
xchg
popf
shlb
push
fwait
mov
sub
orl
sub
sub
adc
pop
imul
xchg
or
or
inc
lret
fistpll
movl
sbb
xchg
js
pop
jb
movsb
arpl
add
aam
push
shll
xorl
add
insb
push
sbb
aas
sbb
mov
mov
pop
ret
add
jmp
xchg
mov
insl
sub
movl
or
mov
push
add
cmp
test
call
mov
cmp
nop
cmpsb
sti
mov
push
sbb
xor
cmp
fists
and
push
leave
sbb
sbb
pop
call
and
cmp
movsb
pop
pusha
loope
fs
push
dec
movsb
sbb
nop
sbb
loopne
dec
push
adc
fs
and
mov
ljmp
movsl
in
sbb
lods
pop
and
movsb
mov
mov
mov
aas
repz
subb
insb
cmp
dec
inc
mov
repnz
pop
push
mov
ja
push
repnz
add
or
mov
inc
add
clc
mov
add
in
inc
mov
shrl
xor
push
imul
bound
jne
jbe
adcl
inc
clc
or
add
pop
add
or
in
mov
loopne
or
inc
mov
or
mov
sahf
subl
fadds
cld
inc
test
rorb
popa
xchg
sbb
push
inc
mov
scas
iret
push
add
mov
jge
mov
mov
cmp
mov
and
xchg
into
icebp
cmpsb
cltd
mov
sub
sub
sub
lods
lods
xor
test
pushf
mov
add
lea
movsb
mov
imul
in
and
rclb
jne
pop
ret
sbb
sbb
adc
adc
out
push
cmp
mov
movsb
loope
pop
inc
and
lods
adc
rclb
add
dec
cs
pushl
sarb
jl
int
push
fisttpll
sbb
pop
fs
inc
mov
dec
arpl
jne
data16
or
mov
or
sbb
add
jne
and
outsb
or
je
adc
fwait
dec
mov
push
pop
add
adc
sub
outsl
adc
mov
rcrl
sarb
xchg
cmp
ds
cmp
sub
rcll
mov
cmp
sbb
cmovg
les
pop
imul
leave
and
pop
and
cltd
into
and
jmp
push
out
xchg
popl
mov
call
xchg
das
push
pop
fsubl
mov
mov
and
test
jle
fsubrs
xor
mov
inc
cmp
ss
out
repnz
xchg
push
xor
mov
and
addr16
cmp
mov
fstpl
pop
jmp
orl
xchg
and
popf
notb
out
sub
mov
das
jmp
pusha
mov
xor
inc
sahf
cs
sub
and
add
and
xchg
ficompl
adc
and
and
mov
loop
inc
dec
ret
mov
call
loopne
mov
xor
aaa
push
pop
mov
pushf
cs
push
mov
ret
mov
and
push
pop
rcrb
and
aam
daa
cmp
sbb
and
pop
leave
inc
loop
pop
push
adc
mov
jg
sbb
and
xlat
add
mov
mov
mov
sti
fisubrl
je
sub
inc
aas
test
jne
push
notb
cltd
cmc
push
cld
ret
mov
iret
subb
inc
shrl
dec
pop
adc
repnz
cmp
mov
hlt
imul
pop
push
hlt
xchg
lea
cmc
fldl
add
xchg
adc
popa
int
cmc
int3
xor
cld
int
and
ret
xor
adc
sub
out
out
pop
add
in
out
inc
test
add
nop
out
adc
clc
lea
adc
jnp
lcall
or
pop
jle
lods
dec
fnstenv
outsb
jae
aam
ret
jne
fnstsw
jnp
je
mov
xor
adc
cli
dec
or
in
arpl
cmp
mov
pop
fadds
inc
dec
or
sbb
outsb
shl
mov
mov
add
movl
adc
push
mov
gs
mov
cmp
mov
lret
xlat
stc
xor
ret
pop
add
nop
adcb
dec
clc
ss
ss
adc
jmp
or
cmp
adc
dec
and
push
xor
xchg
andb
sti
sub
or
adc
add
push
mov
movl
push
test
frstor
adc
inc
nop
addb
jb
or
les
shl
sbb
addl
add
andb
imul
push
add
push
test
and
ja
ja
push
adc
xor
shrl
bnd
add
sub
pop
or
jne
movsl
add
inc
sbb
shll
inc
rclb
subb
aas
jns
in
pop
adc
push
and
or
or
js
sub
mov
add
sub
std
pop
mov
stc
and
push
push
push
push
xchg
scas
adc
popa
in
pop
xor
mov
mov
lcall
mov
shl
mov
nop
call
test
inc
ret
popa
xchg
adc
cmp
jne
movhlps
rcll
andb
ss
and
pusha
movsb
cmp
add
insb
adc
push
and
adcl
adc
push
dec
sub
ja
mov
xchg
nop
mov
pop
cmp
aaa
sub
into
fisubl
ja
nop
data16
and
inc
jmp
sbb
cld
jmp
push
sub
mov
xchg
js
cmp
shll
into
movsl
das
pushf
lahf
pushf
cmp
push
inc
cwtl
lcall
fimull
ficoml
pushf
ljmp
fptan
inc
add
hlt
lea
in
pop
or
adc
fnstsw
mov
shl
rolb
cwtl
jmp
sti
jg
push
pushf
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
xor
jb
push
popf
movsb
arpl
scas
enter
adc
stos
mov
jnp
in
push
xlat
cltd
inc
mov
dec
sbb
push
pop
lahf
add
lea
and
cmp
xchg
aas
dec
push
mov
add
push
mov
inc
shll
xor
int3
add
inc
inc
cmpsb
fcomps
or
or
stos
into
lods
imul
enter
test
or
push
push
mov
jb
in
jae
push
and
subb
in
ljmp
sbbl
adc
pop
mov
fcomip
insb
xchg
data16
das
movsl
hlt
punpckhdq
pop
cmp
sti
jbe
cmp
lcall
mov
xchg
inc
jne
jge
mov
jb
or
add
xor
mov
pinsrw
push
push
mov
fsubl
sbb
xlat
lea
jge
and
jecxz
stc
aam
cmp
aas
add
in
jg
xor
fstps
or
outsb
mov
les
xor
sbb
in
xchg
push
adc
push
test
push
push
mov
movsl
iret
jmp
addb
mov
xchg
xor
pop
push
insb
rorb
xlat
shr
inc
addb
pop
sti
pop
sarb
mov
enter
or
jp
jmp
and
dec
mov
fimull
in
push
int3
and
xorl
xchg
push
loopne
add
xor
hlt
jno
xor
mov
in
sarb
lcall
cmp
pop
dec
inc
rcl
mov
jg
jmp
sbb
or
pop
int3
je
loope
and
ss
int3
pop
push
fcoml
in
and
cmpsl
pop
ret
jmp
pop
je
daa
or
add
hlt
filds
and
mov
ret
cmp
inc
or
ror
daa
dec
test
arpl
jbe
test
cmp
je
inc
addb
popa
roll
decb
ret
arpl
mov
inc
sub
popa
test
sbb
add
pop
pop
mov
mov
les
xor
aas
pushf
inc
insb
sub
test
adc
mov
adc
dec
sub
or
xorb
mov
daa
outsb
dec
sub
push
sub
dec
mov
scas
rcll
cwtl
xor
fcomps
jle
xchg
mov
push
shrl
xchg
push
icebp
cmp
fchs
jmp
test
shll
xchg
or
inc
loopne
pop
adc
in
mov
xchg
push
push
push
icebp
jle
mov
insb
lea
lret
mov
pusha
sbb
ret
mov
aam
push
and
adc
out
mov
jmp
xchg
mov
mov
push
leave
cmpw
ss
mov
sti
sbb
cmpb
push
add
ret
ss
push
pop
mov
decl
add
stc
inc
push
je
add
dec
jp
xorb
jns
adc
pop
jns
lret
cmc
mov
add
xor
dec
cmp
int
mov
pop
pusha
jne
add
test
dec
dec
push
sub
jp
jg
jl
sub
jmp
iret
xor
lcall
dec
movzwl
jmp
jnp
add
pop
or
popa
dec
sahf
pop
add
add
sbb
nop
cmp
adc
les
mov
and
xlat
js
jo
add
lods
or
mov
or
add
aad
fwait
add
mov
cs
movsb
pusha
xchg
gs
or
pop
and
jnp
mov
cmp
mov
add
jne
dec
push
js
lods
inc
cmp
add
inc
push
mov
push
pop
push
dec
stos
data16
jo
cmp
and
and
imul
ss
pop
adc
inc
mov
cli
mov
test
sub
leave
addl
xor
icebp
push
inc
or
inc
jge
pop
or
add
sbb
xor
jbe
sbb
pop
sub
adc
subl
push
jae
push
movsb
pop
pop
adc
push
sarl
cmp
push
add
dec
mov
rcrl
push
sub
add
cmp
xor
mov
xor
xor
sub
xor
mov
adc
aaa
xor
jge
mov
add
and
js
sbb
ss
sbb
mov
frstor
ds
add
mov
rcrl
pop
push
or
mov
scas
or
xor
nop
and
lods
rcrl
mov
rcll
and
loopne
sbb
nop
lret
sbb
push
outsb
push
add
fimuls
or
enter
jecxz
add
or
sbb
add
push
cmpl
and
or
je
or
out
push
and
xchg
adcl
fldcw
mov
aad
inc
inc
lahf
and
sbb
or
cmpsl
add
out
jl
push
mov
fiadds
sub
aam
test
insl
call
insb
test
pop
jne
or
imul
les
cmp
jnp
xchg
andb
je
push
and
test
pop
shrl
xor
icebp
test
mov
adc
ljmp
push
fnstsw
inc
subb
movsl
clc
fdivrs
mov
loopne
out
std
dec
stos
les
jmp
sarb
fcomps
jge
insb
jo
adc
andb
in
cmp
imul
sbb
test
lgs
or
stc
mov
mov
jmp
dec
mov
cli
dec
ljmp
cmp
sbb
lock
adc
lahf
in
cld
sbb
in
in
mov
and
jmp
cmc
inc
imul
pop
xchg
inc
in
out
inc
mov
flds
shr
jbe
das
inc
das
add
aaa
jb
or
jae
sub
sub
mov
rclb
aaa
idivb
adc
jecxz
rorl
push
push
xchg
add
cltd
das
pop
pop
jo
add
xchg
testl
or
xor
jb
les
cltd
jbe
push
sub
fucomip
inc
sti
push
loop
sbb
in
inc
xchg
push
pop
or
inc
push
pop
test
mov
mov
and
or
pusha
adcl
je
and
xor
inc
add
ja
mov
xor
fs
pop
jns
add
add
cmpsb
or
mov
inc
push
and
testl
sarb
inc
pop
jo
cmp
sub
sbb
lcall
push
adc
dec
clc
inc
insl
jg
icebp
pop
sub
push
or
jmp
cmp
shlb
sbb
or
adc
sub
mov
pop
sub
pop
dec
mov
fisubl
dec
inc
inc
push
jns
inc
dec
dec
sbb
fs
fstpl
and
call
xor
add
sub
add
ja
jne
sub
lock
test
aam
outsb
inc
sub
idiv
fdivs
inc
xor
fbstp
mov
test
ret
push
dec
push
mov
arpl
call
jp
movsb
adc
xor
or
xor
jno
mov
lret
loopne
or
dec
xor
or
jns
orl
in
jmp
popa
or
enter
inc
int3
mov
ror
sub
xor
add
movsl
mov
sbb
shl
mov
mov
push
inc
clc
repnz
nop
stos
aad
call
test
lods
xchg
add
call
xor
aam
call
or
cs
imul
dec
add
push
test
mov
add
stos
cmp
imul
add
rcr
jae
add
ja
push
and
in
cmpsb
or
enter
inc
nop
daa
out
in
int
leave
inc
and
loopne
add
xor
and
cltd
icebp
jmp
add
js
or
and
loop
lea
inc
aad
pop
icebp
or
cwtl
or
rorb
pop
dec
cltd
clc
pop
jne
cmp
cmp
lea
push
paddq
fdivl
xor
adc
mov
and
cmp
sahf
xor
out
mov
hlt
mov
sbb
pop
adc
sub
pop
testb
rclb
mov
mov
or
push
push
loop
mov
pop
mov
jb
push
xor
sbb
nop
fadds
mov
std
incl
or
dec
inc
negb
je
cmp
jbe
adc
fcmovnu
lods
cmp
jmp
push
jg
lods
push
repz
cmp
icebp
inc
out
pop
mov
add
mov
pop
and
daa
or
cwtl
push
out
and
mov
or
push
sub
dec
and
das
popa
pop
pop
notb
test
icebp
ret
movsl
cmp
je
push
xor
mov
pop
pop
test
seto
neg
or
push
inc
aaa
xchg
aaa
daa
pushf
sti
adcb
adc
mov
push
sub
push
loope
sub
shl
push
adc
jmp
pop
ret
je
rorl
not
or
cmpl
data16
or
mov
xor
imul
push
lods
or
es
mov
cmp
outsb
imul
rol
cmp
push
insb
adc
ja
in
lcall
ss
pop
mov
pop
or
xor
cwtl
sbb
mov
lret
je
mov
idivl
inc
inc
mov
es
pop
jecxz
push
xor
insl
popf
or
inc
pusha
mov
test
and
xor
jne
xchg
and
xchg
pop
out
decb
mov
shrd
push
xchg
shlb
je
insb
mov
pop
or
inc
xor
sub
lret
roll
dec
adc
inc
mov
shll
xor
and
adc
xchg
adc
adc
pop
add
popa
sbb
verr
arpl
push
enter
mov
lret
lea
push
and
cmpb
cwtl
sbb
adc
mov
push
push
and
les
add
hlt
andl
inc
outsl
adc
mov
nop
sbb
add
push
in
add
mov
flds
fcomp
dec
xor
sti
dec
pop
mov
adc
mov
negb
push
sbb
clc
adc
xchg
test
adc
pop
aas
add
test
inc
cmpsl
addr16
or
pop
ret
mov
push
leave
push
leave
jp
fld
push
inc
pushl
aaa
test
movsb
rcll
mov
fcoms
add
push
add
roll
mov
rorl
sbb
inc
repz
adc
push
push
cmp
inc
and
sub
mov
dec
bnd
lea
mov
mov
insl
pop
scas
and
push
cmp
movsl
adc
and
jne,pn
aad
and
pop
inc
add
or
test
sbb
lea
jae
xchg
adcl
xchg
in
mov
and
cmp
push
cmpl
mov
pop
mov
cmpb
dec
cltd
or
or
imul
daa
add
push
or
enter
mov
pushf
or
daa
inc
mov
and
jno
or
test
or
lret
clc
outsb
add
pushl
or
add
push
pop
ja
push
sbb
xor
test
lock
rorl
mov
xlat
fiaddl
popa
lea
adc
fmul
dec
pop
pop
pop
inc
pushf
cwtl
aaa
and
cmp
cmc
or
pop
or
add
push
loopne
in
negb
int3
xchg
test
dec
cmp
adc
mov
or
adc
inc
adcl
ret
push
xchg
popf
nop
and
mov
dec
adc
adc
sbb
dec
mov
add
pop
pop
xor
and
repz
repnz
sbb
lea
and
ds
or
jbe
pushf
sbb
mov
cmp
sub
les
dec
pop
pop
xchg
inc
sbb
les
sbb
push
xor
dec
clc
imull
mulb
add
cmp
dec
popa
inc
aaa
lret
fs
push
movaps
inc
xorl
ljmp
fwait
mov
movsl
pop
cmpsl
cwtl
and
dec
imul
jbe
leave
sub
push
ret
popa
outsb
sub
lahf
int3
rolb
test
adc
and
xchg
adc
lds
das
sub
or
inc
or
push
lret
push
stos
or
push
les
sbb
cmp
orl
test
ss
enter
xor
mov
dec
mov
movsb
xor
pop
mov
xchg
movsb
inc
xor
push
push
sbb
shll
push
aad
movsb
mov
inc
mov
jp
dec
mov
sub
dec
push
mov
stos
in
fwait
jb
jge
cmp
or
into
sbb
cmp
mov
data16
xchg
mov
add
mov
mov
push
xchg
subl
rorb
adc
adc
cmp
jmp
add
adcb
flds
mov
add
adc
cmp
ljmp
outsl
notl
pop
nop
dec
rorl
nop
and
cmp
cmp
sbb
test
add
xchg
xchg
ficoms
fdiv
pop
push
push
xchg
in
mov
xor
cmp
orl
or
lods
push
xlat
test
adc
bound
and
add
add
add
aaa
ret
or
or
xlat
in
cmp
outsl
jns
pop
insb
pusha
call
adc
lock
inc
das
or
stos
mov
dec
push
fs
cmp
add
and
dec
js
push
jns
imul
nop
push
sub
mov
test
or
mov
and
cmovno
push
pop
dec
pusha
push
or
mov
mov
dec
pop
sar
call
xor
push
inc
cmp
pop
or
mov
and
pop
and
push
pushf
xchg
sahf
xchg
sub
in
test
mov
push
or
jno
cmp
mov
cmp
xchg
inc
add
inc
pop
mov
jno
inc
test
lods
jbe
fs
mov
cmc
xor
popf
or
pop
sbb
imul
pop
jo
mov
sbb
push
roll
shll
push
loope
movzwl
add
push
sub
pop
pop
sbb
mov
mov
rolb
test
push
push
inc
sbb
inc
nop
in
mov
or
pavgb
repnz
test
push
push
add
mov
fnstsw
sub
daa
jne
pop
or
mov
jge
adc
aas
or
mov
inc
jo
cltd
lock
push
outsl
arpl
xor
scas
fidivl
or
push
add
cmp
inc
jno
xor
or
mov
jecxz
dec
mov
jg
dec
pusha
mov
or
xor
xor
pop
cmp
test
and
jns
mov
out
add
arpl
fstl
xor
xchg
psubsw
sarl
xor
and
insl
sub
sub
add
adc
in
cmpsb
or
add
push
into
rcrl
add
lock
loopne
and
sub
add
xor
adc
in
inc
adc
push
adc
add
rcl
pop
lcall
jbe
mov
jno
push
jmp
lock
pop
or
mov
mov
adc
scas
xor
add
push
and
pop
add
mov
jp
jb
sub
sbb
ja
sub
or
adc
adc
das
repnz
in
sbb
pop
jae
or
xor
push
pop
orb
lock
aam
dec
mov
jae
shll
fcoml
sbb
xor
loop
adc
pop
push
and
insl
add
dec
cmp
sbb
icebp
sbbb
add
mov
insb
push
adc
ret
jno
jecxz
test
rcll
sub
adc
jl
adc
add
sub
dec
scas
sti
sbb
je
sub
scas
int
mov
jns
das
icebp
clc
cmp
jl
nop
cmp
sbb
popa
iret
sub
shll
push
mov
sbb
icebp
xchg
jno
adc
cmp
sbb
insl
mov
inc
cmpsl
add
fwait
sbb
add
enter
cmp
stos
inc
es
and
lea
mov
and
aaa
or
sub
ficoms
mov
adc
leave
js,pn
push
jmp
or
pushf
pop
xor
jns
loopne
xchg
jbe
inc
jge
mov
add
mov
sbb
aas
adcl
cmp
add
jl
inc
push
ja
loopne
jl
rorl
test
jmp
sbb
adc
cmp
imul
mov
inc
imul
jo
xchg
push
and
add
mov
add
insl
xchg
inc
sbb
idivl
out
add
pop
push
or
xchg
shr
push
ret
mov
pop
sub
mov
pop
or
das
rorl
clc
push
sub
cli
add
push
push
mov
mov
mov
lods
test
test
pop
jp
fnstcw
or
ja
lds
cmp
mov
subb
aad
scas
cli
push
dec
jmp
bts
enter
jmp
xor
add
pop
and
sbb
enter
adc
jno
xchg
dec
dec
inc
test
test
faddl
adc
or
sbbl
push
xchg
dec
or
jae
add
ret
xchg
add
inc
pushf
imul
sub
and
sub
add
sbb
pop
std
jge
add
adc
cmp
cmc
test
int
inc
and
cmp
imul
pop
mov
scas
or
add
hlt
imul
movsb
daa
mov
push
mov
and
clc
jecxz
or
jle
in
daa
adc
jmp
adc
addl
mov
cmp
add
jg
or
jns
add
push
sarb
or
dec
dec
popa
add
adc
or
enter
adc
sbb
fwait
sbb
adc
mov
sbb
daa
call
int
inc
push
push
loope
lds
orb
cmpsl
and
loopne
add
pop
or
fcmovnu
ljmp
fs
adc
pop
pushf
sub
mov
add
cmpsb
adc
xchg
into
mov
test
inc
mov
cmp
popa
ljmp
mov
mov
fs
or
sbb
or
loope
dec
js
push
push
lret
sub
into
push
adc
insb
jge
add
sub
repnz
xchg
mov
xor
shrb
add
arpl
movsb
lea
inc
push
jle
cs
stc
jne
das
fdivs
fst
outsb
insl
and
ficoml
addr16
outsl
fadds
push
jg
push
pop
sub
xchg
mov
pop
daa
lock
pop
hlt
leave
mov
cli
dec
push
adc
or
icebp
jne
mov
int
add
adc
push
sbb
dec
es
wbinvd
cmp
fsub
push
pop
cmpsb
jle
test
cmp
add
or
jl
add
cmp
test
add
sub
pop
or
loopne
xchg
or
mov
or
xor
add
pop
push
push
xchg
aad
pusha
cmp
or
pop
test
push
push
pop
test
fnstenv
fiaddl
mov
pop
aas
ds
xchg
dec
bound
dec
pop
and
mov
and
fadd
imul
jmp
push
jmp
aam
shlb
push
inc
cmp
mov
loope
inc
inc
pop
nop
mov
inc
jecxz
sub
popf
je
mov
pop
jp
adc
sbb
outsl
aaa
mov
and
and
movsl
sbb
call
pop
loope
xchg
call
cmp
dec
sbb
xchg
mov
mov
jnp
cmp
inc
mov
jb
addb
dec
push
sub
lea
push
dec
mov
insl
mov
push
pop
cmpsl
adc
sbb
and
push
sbb
add
cs
hlt
cmpb
sbb
sub
insl
in
push
mov
jge
into
and
push
sbb
jno
mov
mov
es
jbe
adc
pusha
xlat
cmpsl
js
or
fsubs
insb
outsl
push
mov
inc
mov
test
fwait
inc
stos
push
or
aaa
movsb
jne
in
mov
mov
icebp
js
pop
ret
lods
cmp
stos
pop
sbb
sahf
ss
push
lock
rorl
arpl
imul
scas
pop
insb
inc
dec
push
xor
mov
lret
inc
test
pop
xor
add
xor
xor
shl
mov
stos
add
cli
dec
loop
xchg
xor
dec
adc
inc
adc
cmc
sub
loop
push
pop
in
adc
sub
pop
loop
mov
xchg
or
clc
push
or
mov
leave
pop
jns
in
xor
pusha
push
sub
in
or
sar
pushf
jb
xchg
adc
test
in
push
stc
popfw
insb
into
inc
push
adc
xorb
lods
das
ja
icebp
pop
or
inc
cmpb
mov
push
daa
andb
and
pop
imul
sbb
es
and
sub
fstpl
push
or
inc
pop
push
push
cmp
and
inc
fidivl
mov
testb
leave
xchg
ret
push
xchg
bound
pop
xor
push
push
andb
adc
jns
adc
push
xor
sub
push
andb
mov
rcll
mov
adc
addr16
pop
fmuls
mov
jmp
push
data16
add
mov
fsubs
and
dec
movsl
mov
sbb
call
adc
xor
add
ss
outsb
sbb
jge
rolb
xchg
cltd
jg
in
int
faddl
cmpl
push
mov
fsts
add
outsl
mov
add
push
cmp
push
cmp
jle
cmp
jp
cmp
repz
cmp
cmp
cmp
mov
mov
push
add
mov
jmp
stos
push
movw
enter
popa
mov
in
daa
rcrl
sbb
sbb
dec
fwait
inc
or
fs
pop
idiv
hlt
sub
test
adc
adc
xor
add
dec
outsl
adc
sub
mov
xchg
push
and
jnp
sub
jb
fldcw
or
lock
add
inc
cmp
push
outsb
push
push
ret
sbb
insl
push
jecxz
pop
addr16
lret
pop
pop
mov
enter
pop
xchg
pop
push
int
jg
sbb
pop
out
sbb
sbb
cmp
xor
adc
and
test
push
add
push
sub
insl
sub
dec
sbb
cmp
push
jl
xor
mov
mov
ds
push
loopne
cmp
in
and
add
xchg
cld
aad
add
into
aas
sbb
xor
jb
inc
or
inc
cmpsb
in
lock
cmp
xchg
nop
fdiv
fstps
pop
test
loopne
scas
les
in
add
aas
insl
or
cmp
inc
adc
aam
add
add
add
cmp
sti
jb
sbb
push
rcl
insl
or
test
adc
pushf
xchg
je
pop
lock
out
pusha
jl
outsl
mov
mov
pop
adc
dec
pushf
jno
adc
fistpl
add
push
data16
xorb
in
cmp
pop
xor
mov
pushf
or
daa
add
and
push
jb
lock
jmp
and
pusha
dec
and
dec
or
shll
xchg
pop
adc
cmp
add
inc
mov
and
mov
enter
adc
adc
pop
pop
inc
sub
xchg
mov
in
or
and
sbb
and
cltd
sbb
in
xchg
loope
mov
add
rcrl
test
inc
fsubl
lcall
add
xchg
add
cmp
stc
outsb
and
jmp
mov
push
fstp
or
add
lea
sub
and
lds
in
push
in
jo
std
cmp
push
test
jmp
in
inc
adc
addb
rolb
dec
add
adc
sub
adc
leave
inc
addl
lret
sbb
mov
mov
loopne
aas
pop
add
hlt
inc
add
adc
inc
ds
rorl
test
test
sub
fnsave
in
push
lea
pop
and
idivb
lret
sub
jo
or
or
push
push
loope
push
and
loope
adc
jmp
inc
les
and
mov
repnz
ret
inc
js
inc
mov
mov
push
repnz
and
adc
sbb
and
push
add
xchg
mov
or
push
sub
nop
add
aaa
testl
test
inc
sbb
rolb
leave
stos
mov
jmp
sbb
test
lock
ds
xor
fs
add
cmpsl
andb
or
add
outsl
insb
mov
dec
insl
orl
and
enter
add
mov
dec
aaa
in
mov
lock
aad
adc
xchg
sbb
fiadds
or
adc
icebp
jns
arpl
jne
fstps
pminsw
mov
sbb
or
outsl
movsb
pop
fiaddl
xchg
cmpb
sub
mov
and
push
push
pushf
adc
xor
add
jmp
cmc
inc
add
add
jb
and
and
inc
cmpsb
adc
inc
insb
jl
or
and
inc
cmp
adc
mov
fdiv
push
loop
dec
lcall
xor
sbb
sbb
dec
sbb
fildl
test
lea
ret
mov
stos
popa
xchg
mov
rcll
sbb
push
add
sub
sbb
push
leave
adc
xchg
add
push
jb
add
es
mov
add
loopne
das
gs
and
push
pusha
rcl
daa
xor
scas
dec
adc
add
pop
or
jmp
ficoml
jnp
push
lds
jle
dec
dec
dec
jnp
adc
lods
and
dec
lods
popa
adcl
jmp
add
rolb
pop
pop
inc
push
add
enter
and
mov
adc
pop
sub
push
lea
mov
loop
jmp
inc
pop
or
aaa
rcrl
ret
sarb
je
cmp
jle
push
addr16
outsl
add
ffreep
jecxz
add
roll
outsb
mov
jl
push
pop
pushl
adc
xchg
and
cmp
mov
jle
inc
pop
ret
xchg
xchg
imul
inc
push
sub
mov
sahf
jbe
mov
xor
in
orb
or
out
mov
jle
dec
or
sub
orb
call
fnstsw
mov
test
je
push
jl
cwtl
add
cmp
fisubrs
xchg
cmpsl
push
push
fldl
push
sbb
icebp
neg
loope
arpl
fstpl
and
pop
jg
cmp
into
fstpl
mov
incb
fcompl
mov
jo
mov
xchg
add
lods
and
loope
fsubrp
xchg
push
mov
or
sub
pop
scas
dec
or
adc
inc
aaa
stos
shlb
dec
inc
fdivrl
cmp
enter
aaa
inc
jns
inc
jl
push
add
gs
sub
push
orb
ljmp
loopne
jns
stc
jge
negl
je
into
jl
fiaddl
mov
mov
adc
pop
mov
enter
popa
sbb
push
mov
iret
mov
add
jnp
ja
roll
aaa
and
pusha
insb
rclb
mov
sahf
in
and
sbb
mov
xor
sbb
inc
add
jecxz
andl
and
cmp
fadd
dec
sub
jnp
out
popf
or
mov
inc
sarl
push
cmp
add
lret
jb
push
inc
cli
cmp
roll
sahf
ja
jb
incb
inc
or
lea
push
push
pusha
leave
mov
and
popa
pop
movsl
mov
or
add
push
leave
adc
mov
push
adc
push
push
shrl
cmp
out
in
jle
or
cli
sbb
push
testb
mov
leave
and
fs
sub
arpl
shlb
aam
call
repz
mov
shlb
or
pop
push
jne
in
pop
and
ja
push
adc
push
cmpsb
push
xor
cmpb
lds
inc
jle
push
cmpw
jne
scas
adc
inc
inc
cld
jge
pop
outsl
cmp
dec
push
push
out
mov
stc
jge
mov
push
lea
mov
sti
jg
stc
std
mov
or
sahf
mov
out
data16
push
sbb
inc
js
push
push
push
push
dec
inc
sarb
shll
xor
cwtl
mov
stos
es
mov
sub
mov
adc
iret
adcb
sbb
dec
roll
sbb
jp
popa
xchg
sub
or
pop
clc
add
jnp
sbb
int
hlt
inc
push
mov
in
add
fcmovb
and
repz
inc
inc
add
push
shrl
push
adc
or
pop
test
ret
mov
inc
pop
pop
or
push
pop
inc
flds
movsb
push
stos
adc
xor
mov
mov
hlt
into
xchg
adc
or
std
push
scas
imul
lcall
push
dec
or
rolb
int3
fisttpl
adc
add
cmp
shll
cmp
popa
cltd
imul
xchg
jl
and
loop
sub
jno
mov
add
addl
dec
xor
cmp
or
inc
mov
push
xchg
mov
enter
je
jbe
mov
mov
pop
ret
pop
push
xchg
sub
add
je
lods
push
jno
ja
cli
or
push
xchg
aaa
mov
xor
fidivrl
mov
or
or
aaa
jmp
mov
fdivl
sbb
fnstenv
and
ffree
and
pusha
xchg
filds
mov
mov
pop
rorl
mov
int3
addl
and
movsb
outsl
xor
mov
outsb
ljmp
add
jge
sarl
jmp
leave
sub
adc
jae
movl
test
in
incl
fmuls
xor
push
sti
outsb
push
movsb
add
push
or
adc
mov
or
mov
inc
inc
int3
push
arpl
adc
mov
inc
sub
mov
and
xlat
adc
insb
lods
mov
add
mov
test
inc
imul
lahf
fsubrs
loope
outsb
and
popa
jbe
je
std
mov
sbb
mov
in
or
fdivr
adc
xor
rclb
inc
jg
stos
gs
pop
sub
int3
and
incb
sbb
dec
jge
cmc
dec
jne
lret
ret
adc
or
and
or
aas
pop
adc
adc
adc
push
jmp
loopne
push
xchg
push
bound
mov
mov
xchg
dec
jmp
pop
xchg
push
jmp
in
rcr
dec
shll
push
pop
fisttpll
jmp
or
adc
mov
or
mov
scas
push
xlat
rorl
mov
scas
xor
and
mov
inc
inc
pop
inc
xchg
sbbl
cmpsb
inc
int3
arpl
adc
push
mov
dec
xor
and
adc
and
orl
clc
incl
imul
sbb
mov
inc
sbb
aam
pop
pop
in
stc
sub
adc
sub
in
add
sub
movsl
cmp
and
int3
push
mov
cld
in
and
push
dec
inc
jnp
insb
push
ja
mov
addr16
test
es
popf
sub
nop
loopne
fcoms
test
dec
testb
inc
fidivrl
pop
js
push
sub
dec
sub
aaa
in
mov
rorl
jg
xor
dec
cmpsl
test
aas
fisttpll
mov
push
adc
cmp
push
mov
out
rcr
in
div
cmp
mov
add
adc
daa
iret
repz
xor
cmp
repz
fwait
cmpsl
mov
repz
repz
in
out
sahf
int
push
add
jns
sub
arpl
xchg
out
insl
ja
adcl
xchg
ret
lods
pop
add
jl
std
and
push
push
push
repz
lds
mov
negl
mov
and
mov
dec
dec
mov
add
lea
mov
push
or
arpl
cmp
movsl
mov
dec
mov
jo
lea
mov
push
pop
pop
lock
aaa
outsb
xor
inc
mov
push
notl
mov
popf
cmp
pusha
and
cmp
jmp
sbb
or
test
sub
mov
mov
pop
fsubl
sarb
mov
cmp
xchg
sbb
xchg
or
cmpsl
loope
cs
inc
sub
xor
and
nop
push
dec
test
adc
adc
icebp
and
xchg
bound
pop
out
test
test
push
les
sti
sub
push
cmpb
paddusw
test
push
pop
sbb
inc
and
clc
add
sbb
push
insl
add
xchg
ljmp
loop
repnz
adc
fdivs
or
mov
orl
pushf
mov
mov
or
push
push
ret
or
movsl
bound
enter
xchg
sub
loope
add
in
enter
rclb
icebp
sub
xchg
sub
adc
sar
jmp
cwtl
loop
sub
call
imul
in
add
andl
adc
add
sbb
sbb
dec
add
test
pop
pop
adc
inc
hlt
mov
test
lahf
and
inc
jl
bound
lret
test
mov
add
adc
pusha
mov
pop
mov
dec
push
inc
das
ror
or
and
push
push
les
and
mov
shl
jne
les
add
jnp
sub
test
das
xchg
mov
xchg
fwait
je
mov
cmp
fiaddl
je
in
sub
xchg
push
xor
pusha
and
int3
inc
imul
and
cmpb
sarb
rol
icebp
push
xor
rcr
dec
jp
and
push
xor
push
sub
insb
sbb
jb
pop
lahf
fwait
adc
fdivrp
xor
pusha
les
jnp
jnp
push
and
cmp
push
das
mov
push
cs
push
arpl
and
call
mov
pop
rcll
sahf
inc
mov
mov
rclb
xor
jle
mov
xor
in
scas
jecxz
and
fcompl
xor
xor
lcall
jo
dec
lcall
dec
lcall
nop
mov
int3
add
popa
lea
add
hlt
push
icebp
mov
jl
ljmp
test
mov
lret
ror
loope
mov
xlat
movsb
pushf
testb
dec
xor
sub
inc
sbb
mov
pop
fisttps
or
lret
orb
stos
jb
into
sarb
dec
mov
bnd
jo
pop
push
sbb
mov
sbb
jae
jae
enter
inc
addr16
sbb
orl
xchg
inc
xchg
push
mov
cmp
dec
add
movsl
xor
jns
add
and
and
fists
and
lea
xchg
lock
loop
and
pop
adc
pop
jne
sbbl
sbb
jb
push
mov
inc
sub
or
or
or
mov
xchg
push
sub
xchg
dec
lds
orl
in
pop
and
outsl
hlt
mov
aaa
rorl
mov
fmul
push
jo
mov
mov
adc
xchg
mov
pop
movsb
xlat
cmc
aam
aas
pop
mov
mov
inc
rolb
adc
aas
mov
ds
cmp
adc
aaa
loope
lret
jo
mov
nop
mov
mov
inc
adc
aaa
cmp
pusha
call
pop
icebp
push
std
sbb
das
push
rcrb
ljmp
scas
ret
adc
js
sub
xchg
jle
in
shrb
rcrb
push
pusha
inc
jg
xchg
push
add
testb
testl
imul
push
inc
sub
pop
add
je
or
scas
or
in
insl
lods
jmp
push
sub
sbb
outsb
push
mov
mov
popa
and
addr16
pop
dec
pop
add
adc
adc
add
dec
add
push
and
xchg
push
push
cmp
lods
dec
std
rorl
outsl
inc
mov
aas
je
imul
das
nop
mov
pop
ret
and
sub
pushf
add
je
sbbb
add
adc
inc
pushf
and
arpl
add
add
icebp
test
mov
push
lret
or
inc
ret
call
repnz
mov
and
xor
or
inc
and
xchg
cmp
mov
pop
cmp
sarb
fcompl
xor
pop
pop
pop
scas
pop
xor
inc
sahf
ss
sbb
rcrl
or
in
push
cwtl
dec
sahf
inc
sahf
int3
paddusb
and
pop
lret
adc
jno
jbe
lds
mov
movsl
jns
add
adc
imul
push
and
inc
adc
addl
test
xchg
mov
fcoms
je
sbb
aam
sbb
sbb
nop
inc
lcall
xlat
and
jbe
sub
test
pop
pop
mov
mov
mov
mov
pop
jb
popf
mov
jb
test
stos
and
mov
jl
xchg
push
or
movsb
xchg
sbb
shl
xor
int
aam
sbb
sbb
jo
or
add
nop
imul
jo
fistl
loope
xchg
or
adc
mov
mov
push
push
filds
sbb
test
or
pusha
pusha
dec
xor
push
pop
inc
es
std
fsub
xchg
dec
sahf
imul
xor
jge
and
and
pop
movsb
jns
aas
or
add
or
xor
push
push
fsubrl
test
cmp
xchg
jno
popl
push
cmp
lock
enter
jle
mov
inc
movsl
xchg
cmc
test
cmpsl
test
sarl
mov
test
xchg
push
and
add
mov
pushf
mov
es
xor
pushf
int3
push
mov
mov
push
xchg
call
repnz
adcl
rcrb
push
imul
movsl
mov
xor
push
xor
push
cmp
xor
or
inc
lea
call
jbe
mov
rcl
scas
stc
fwait
or
ret
aad
lods
push
and
and
sahf
test
ss
and
adc
sbb
mov
int
and
sbb
in
in
rcrb
das
adc
jbe
movsl
loopne
sub
movsl
pop
cmp
jno
push
pushl
cmpsb
ljmp
stc
fists
jne
xchg
aam
xor
nop
lods
mov
mov
repnz
js
arpl
rclb
cmp
lods
sbb
push
sbb
invd
shlb
push
insb
lea
scas
push
push
dec
test
push
mov
and
inc
int3
inc
and
add
push
xchg
and
shlb
in
mov
xchg
push
mov
mov
cs
adc
mov
xor
lods
push
sub
xchg
push
sub
mov
inc
xchg
cmp
dec
lahf
ss
xchg
scas
xchg
je
jnp
jo
xlat
addl
or
add
dec
mov
cmp
repnz
rolb
loopne
push
inc
sub
xorl
add
es
mov
mov
or
sbb
push
or
adc
and
stos
cmpsb
add
pop
inc
push
in
push
sbb
sbb
sbb
in
push
sbb
pop
cmp
push
dec
xchg
inc
adc
adc
adc
add
cmpps
xchg
push
loopne,pn
sub
fistpll
faddl
mov
mov
push
int3
pop
movsb
adc
shrb
or
cmp
test
inc
and
mov
ret
inc
or
ss
lcall
mov
add
fadds
jo
jp
or
cmp
push
test
inc
ja
lea
test
ret
repnz
cmp
jle
jge
das
mov
add
test
test
adc
xor
sbb
retw
sahf
jo
movsb
and
leave
inc
xchg
mov
pop
push
cmpsl
mov
pop
call
jbe
in
mov
push
pusha
push
jmp
xor
mov
jp
ljmp
adc
out
mov
and
jmp
xlat
sub
ret
push
adc
inc
inc
jl
fs
add
adc
cmp
loope
sub
movsb
sbb
pop
xchg
mov
push
push
xchg
lock
push
xor
adc
mov
fildl
mov
fidivrl
js
mov
add
add
jb
movsl
adc
shll
and
leave
inc
ja
pushl
rcrb
adc
push
sbb
adc
ja
xlat
jbe
mov
xchg
cmp
jne
inc
or
jb
jl
add
push
inc
mov
push
hlt
subl
or
iret
jne
add
jne
pop
fiadds
repz
fmulp
inc
cmp
jae
inc
add
nop
cmp
dec
mov
and
je
mov
dec
shll
pop
dec
jmp
mov
mov
push
and
fsubrl
imul
mov
rolb
inc
inc
adc
loop
imul
push
shrb
add
mov
jo
sbb
and
and
lahf
loopne
lods
dec
or
ds
imul
mov
and
push
sbb
shlb
xchg
fiaddl
xor
jmp
jne
lretw
mov
add
jno
ret
sbb
sbb
cmp
ret
push
jo
xchg
pop
xchg
sub
loop
sbb
mov
or
stos
ss
int3
rolb
stos
arpl
in
dec
and
or
cld
dec
je
rolb
jg
aaa
cmc
jmp
cmp
jl
or
je
test
fistpll
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
cmp
add
pop
dec
add
shll
jne
pop
adc
ret
movsl
xchg
in
les
and
and
or
sbb
jbe
sbb
pushf
pop
or
mov
dec
mov
out
cmp
shlb
push
scas
orb
repz
ja
lret
add
lock
js
add
stos
in
inc
pop
add
sti
enter
cmp
mov
pop
shl
rolb
sub
ret
loopne
xchg
faddl
or
out
cmp
je
dec
and
sbb
or
andl
lods
sbb
or
imul
into
xor
mov
test
testl
add
aad
and
jne
cmp
push
ret
inc
pop
push
inc
xor
jb
imulb
or
scas
loop
jbe
cmpsl
in
pushf
imul
add
xor
and
add
aaa
scas
adcl
movd
jl
lret
cld
mov
jp
lcall
mov
xor
and
jmp
cmp
cmp
loop
xchg
xor
scas
xor
push
decb
outsl
les
int3
cld
xchg
pusha
fs
sbb
nop
adc
jbe
inc
cmp
sti
daa
add
push
adc
adcb
add
pop
punpckhdq
cvttps2pi
in
mov
faddl
or
or
sub
hlt
push
lock
addr16
sub
dec
movsb
add
arpl
movsl
xor
rorb
movsb
push
rcrl
sbb
inc
mov
push
sbb
sbb
lret
mov
push
mov
push
dec
rcrl
or
movsb
xchg
lret
orl
jmp
inc
movsl
scas
jns
lods
xor
shrb
jns
lahf
xor
push
inc
rorl
xor
aas
adc
push
xchg
inc
out
xchg
decb
fcomps
cmp
data16
loopne
jne
or
in
add
add
or
mov
sbb
jbe
movsb
paddq
repnz
or
sbbb
pushf
xchg
or
fstl
add
push
or
fldl
rcrb
cmp
jb
or
adc
gs
or
add
jmp
in
jp
rclb
sub
test
clc
sub
mov
or
or
inc
test
enter
and
loope
or
and
test
ret
inc
sbb
mov
popa
jl
les
sbb
xor
in
lock
jnp
ljmp
enter
js
cltd
jecxz
mov
aam
lea
xchg
cmp
rorl
adc
int3
and
push
mov
out
adc
xor
xchg
xchg
xor
add
sub
jge
sub
cmp
inc
push
enter
lret
adc
and
sbb
sbb
cmp
jo
addl
lock
cmp
pusha
push
jmp
gs
jmp
test
test
orl
push
and
clc
cmpsl
je
stos
mov
das
test
lock
push
push
outsl
insl
dec
pop
cmp
xor
push
sub
xorb
leave
mov
arpl
cmp
in
and
push
les
inc
or
les
sub
push
jge
dec
sbb
jmp
xor
push
shl
les
inc
push
frstor
data16
jmp
pusha
xor
push
mov
mov
imul
sahf
ret
shrb
sub
sbb
push
or
xchg
or
leave
adc
in
js
lods
xor
cmc
dec
pop
leave
js
inc
nop
shr
outsl
cmovs
push
xor
jne
je
inc
dec
test
lret
jl
push
sub
out
sarb
pop
fwait
mov
add
sub
cmp
scas
cmp
subb
fcoms
movsl
insl
shll
fdivrs
pop
xchg
and
pushf
pop
sub
rolb
add
enter
filds
fstpt
sbb
add
je
in
std
fsubl
aaa
jo
pushf
mov
dec
mov
je
lods
inc
jne
les
xchg
in
pop
shll
pop
add
xchg
add
cmp
daa
scas
loopne
leave
pop
fdivs
mov
xor
or
mov
xchg
call
lahf
push
mov
dec
ds
push
sbb
sbb
mov
rorb
xor
movsl
mov
and
loope
xor
inc
and
jnp
das
je
jge
dec
xchg
rorl
outsl
and
dec
es
outsl
das
mov
inc
sahf
fsub
mov
cs
in
cmp
test
jne
es
cmp
lea
adc
das
jno
in
call
mov
sbb
or
mov
cmp
and
xchg
call
dec
sub
sub
push
or
lea
mov
bnd
sbb
cwtl
insl
xchg
push
je
cli
pop
inc
or
mov
inc
fwait
out
xlat
push
xor
gs
or
sbb
or
cli
pop
enter
mov
push
cmp
stos
add
ja
mov
and
mov
test
popa
pop
pop
or
mov
les
xchg
adc
inc
add
inc
or
or
push
mov
push
inc
sub
pop
add
or
sbb
inc
addl
scas
ret
out
jl
xchg
pop
sub
imul
or
xchg
repz
push
push
mov
enter
jp
or
push
fldl
or
or
inc
sbb
inc
data16
cmp
mov
inc
add
out
jne
daa
bnd
adc
sahf
out
stc
hlt
jne
or
jne
or
cmp
sbb
mov
add
enter
inc
pop
mov
mov
mov
aad
sub
push
lea
into
cmp
and
inc
dec
mov
pop
xor
push
jl
mov
lea
repnz
pop
xor
dec
cmp
lcall
es
shlb
xchg
mov
rorl
iret
ret
pop
and
xchg
add
mov
clc
xchg
sahf
subb
mov
mov
xor
cmpl
or
and
int3
adc
lea
or
das
pop
aas
fnstenv
clc
adc
dec
popf
or
gs
fstl
push
sub
fcom
loopne
sarb
loopne
data16
jb
adc
mov
add
into
adc
cmp
jge
js
andb
lahf
push
ss
and
dec
pusha
push
xchg
dec
js
pusha
cmp
loopne
nop
sbbl
push
xchg
insl
rol
cltd
mov
add
pop
jmp
orl
rolb
pusha
pusha
sbb
test
mov
add
jb
fs
push
jns
and
jne
sahf
into
xor
xor
mov
dec
ficoml
mov
add
fwait
mov
mov
mov
fisubs
test
dec
mov
mov
rcl
sub
or
jg
outsb
or
outsb
cmp
mov
fiadds
fnsave
adc
call
jmp
rorb
int3
or
inc
je
push
into
inc
or
pop
gs
test
in
dec
sbb
mov
add
inc
cld
sbb
mov
in
iret
arpl
in
add
es
icebp
fs
je
pop
push
or
mov
rdpmc
sub
sbb
popa
int
fadd
test
loopne
or
insb
xchg
stos
int
push
pushl
push
and
adc
mov
and
ret
add
rcrl
pop
movsb
loope
lahf
mov
inc
push
cs
les
adc
in
cmc
imul
orl
xlat
or
jle
or
xorl
and
addr16
pushf
adc
and
mov
push
dec
or
mov
jl
lods
popa
dec
xorl
out
and
and
xorl
icebp
push
cmpsl
lcall
xor
push
or
aas
cmp
mov
mov
mov
pop
adc
adc
mov
adc
adc
arpl
enter
adc
cmp
in
lds
sub
test
pop
enter
pop
xor
push
sbb
sbb
enter
adc
pop
repnz
dec
inc
xor
or
lcall
test
inc
arpl
aas
inc
and
or
mov
xchg
inc
and
add
jmp
shlb
hlt
sbb
cli
or
lea
pop
ss
fwait
add
roll
arpl
dec
dec
repz
sub
cmp
sub
loop
or
bound
je
insb
and
rcrl
sbb
sbb
push
xchg
add
lods
out
addr16
inc
sti
xor
xchg
ret
aas
push
lock
jo
sbb
adc
xchg
inc
or
lret
add
and
js
jp
hlt
jg
outsl
xchg
je
push
xchg
pop
lea
je
pushf
add
sbb
mov
jno
shl
lods
sbb
push
jne
xor
imul
cs
negl
int
sbb
leave
mov
and
add
add
push
stos
sbb
addb
add
fwait
add
fwait
fs
in
fsubl
outsb
test
mov
add
cmp
call
sbb
xchg
jg
in
jne
jne
jno
in
call
cwtl
add
rorb
add
jecxz
xchg
arpl
sub
int
jo
js
inc
inc
add
cld
inc
cmp
push
mov
lahf
popf
sub
js
jge
jecxz
mov
loopne
or
arpl
pop
sub
std
xor
fldenv
inc
inc
scas
js
loopne
je
leave
pusha
sub
outsl
mov
dec
ret
dec
pop
mov
int3
add
push
call
jle
adc
out
cmc
add
emms
xchg
mov
sbb
mov
or
add
sbb
jno
or
fadd
scas
sub
dec
adc
mov
adc
add
add
add
pop
adc
fcoml
add
lds
push
push
cmp
ds
stos
mov
inc
fadds
es
je
and
jne
sub
test
incl
add
sub
jecxz
xor
jmp
jne
cmp
push
cmp
push
xor
out
aaa
xor
and
push
pop
lret
adc
in
dec
inc
cmpsb
pop
add
daa
fcoml
jecxz
push
sbb
mov
jne
dec
add
xchg
test
mov
or
clc
imul
and
cmp
cld
pop
push
mov
mov
adc
and
inc
cwtl
add
jle
pop
xchg
add
cmp
out
push
or
mov
jecxz
rolb
push
ret
int3
add
pusha
add
pop
xchg
test
sub
pop
cld
and
push
inc
jmp
fsubp
aaa
out
movsl
rcll
dec
les
xchg
stos
loopne
dec
xor
mov
ja
loop
call
jmp
cmc
jb
pop
ljmp
sbb
add
adc
loopne
adc
adc
int3
subb
out
fadd
rorb
popa
jne
mov
sbb
add
fistl
fldl
movsl
repz
push
fisttps
fisubl
sbb
cs
push
or
fcmovnb
sahf
leave
or
stc
sbbb
or
jo
pop
icebp
dec
loope
jbe
jmp
sub
loopne
inc
scas
pop
rol
adc
pop
popa
mov
insl
sbb
insl
adc
pusha
xor
stos
insb
pop
jge
outsl
push
cmc
sub
call
inc
or
add
inc
mov
sbb
push
sbb
dec
loopne
dec
inc
fistpl
add
sub
mov
sbb
add
inc
and
aas
stos
adc
jecxz
adcb
psllw
sbb
add
cli
mov
shrl
mov
inc
jo
inc
jo
aad
jb
lret
addr16
jno
mov
jo
sub
mov
xor
push
je
movsl
ja
or
and
or
mov
xor
cmp
je
or
js
aam
nop
in
rolb
sbb
xchg
outsb
lods
mov
test
mov
adc
push
cmpb
ret
sarb
js
hlt
jae
movsbl
push
mov
mov
inc
mov
mov
sub
or
sbb
out
loop
pop
jmp
enter
ret
incl
jmp
mov
jmp
shl
or
add
inc
cmp
popl
loopne
jl
push
lcall
push
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
into
lret
shr
mov
or
jne
mov
ss
into
xor
pop
xorb
mov
cmp
cmpsb
and
push
rcr
mov
stc
inc
jp
dec
add
jbe
jo
shld
ret
or
inc
adc
jne
push
add
sbbl
dec
pop
and
jno
ljmp
or
test
sub
add
rcr
jge
cmp
pop
inc
cli
js
inc
mov
andl
cli
movb
jne
cmp
inc
arpl
cmp
inc
or
shl
sbb
jge
out
add
or
addb
and
adc
fbstp
rcrb
rorl
xchg
enter
pop
shlb
inc
push
lods
or
xlat
cwtl
or
pop
arpl
add
outsb
mov
loopne
xor
push
in
push
xor
mov
pop
dec
mov
pop
cmpsb
inc
pop
sbb
adc
repz
shl
jo
lock
repnz
sub
push
dec
or
add
je
add
sbb
add
pop
adcb
pop
push
jmp
dec
fistl
adc
push
fcomi
push
push
jb
dec
out
fcomps
adc
aas
pop
sarl
jmp
push
and
jb
in
add
push
or
add
cmp
xor
add
out
nop
aad
pop
push
dec
mov
in
inc
or
dec
or
xor
mov
add
js
es
aam
cmp
and
mov
hlt
dec
clc
pop
cmp
jns
sbb
icebp
or
mov
lahf
mov
es
jmp
add
int3
cmp
cmpsl
dec
xor
leave
pop
enter
adc
lea
das
sub
aam
add
out
es
std
dec
add
idivb
cmp
push
cwtl
dec
cmpsb
adc
pop
cmp
daa
sbb
inc
add
rcrb
sub
mov
inc
testb
enter
add
mov
push
xchg
push
cmp
pop
inc
jo
pusha
test
fwait
sub
inc
cmp
push
mov
je
in
das
push
mov
or
hlt
or
adc
dec
push
cmpsl
cmp
sub
mov
pushf
add
mov
pop
das
pop
frstor
in
cltd
inc
push
daa
lret
je
dec
arpl
or
push
les
test
cmp
bnd
addr16
dec
cs
mov
xchg
imul
jno
and
test
aam
rorb
inc
mov
cmc
jo
jne
bound
or
push
jmp
mov
daa
adc
rol
or
xlat
push
inc
pop
xor
jmp
cmp
xchg
adc
pop
mov
fcompl
aad
loope
cmp
add
aaa
jno
pop
mov
add
cmp
jecxz
mov
pop
cmp
mov
and
cmpsb
je
jecxz
add
adc
cmpsl
call
out
cltd
shrb
das
sub
pop
fsts
pop
mov
push
bound
fsubs
loope
adcb
add
insb
add
and
mov
and
inc
rcl
daa
add
dec
xchg
xchg
jle
adc
cltd
fdivs
dec
aam
loopne
mov
mov
ret
cmp
jl
cwtl
loopne
sbb
mov
inc
sub
nop
xchg
rorl
push
sbb
sbb
je
cmp
daa
movsbl
shl
loope
arpl
call
mov
call
mov
or
test
fsub
inc
jg
mov
test
and
lret
movb
les
push
mov
gs
inc
adc
add
add
cmp
mov
nop
or
inc
sub
mov
mov
and
pop
xchg
push
push
roll
popf
sbb
and
xor
test
ja
ss
movsl
or
cli
stc
mov
cld
lret
dec
jmp
xor
rclb
iret
popf
ds
pop
addl
xor
cmp
mov
cmpsb
jmp
mov
lcall
adc
stos
or
xorl
inc
push
out
or
pop
cmpsl
cmp
into
push
xor
add
jmp
push
mov
stc
mov
aas
cld
jnp
mov
clc
pop
mov
js
clc
sbb
xchg
sub
push
clc
jge
mov
push
sub
movsl
arpl
inc
or
out
push
fs
hlt
mov
pop
push
dec
mov
mov
fmull
xor
adc
add
movzbl
mov
inc
mov
mov
cmp
jl
mov
add
mov
xor
and
sbb
iret
push
icebp
or
orb
mov
mov
add
add
push
dec
fisttpl
mov
nop
and
mov
add
or
cld
push
leave
push
xor
mov
inc
inc
and
or
cs
fwait
jb
les
fimuls
or
adc
and
call
mov
xchg
and
imul
xor
or
push
push
nop
xchg
arpl
repz
and
or
xchg
in
daa
ret
push
notb
cmpsl
add
pop
sub
sbb
jecxz
jno
mov
inc
movsb
mov
cmp
mov
aas
sub
dec
sub
js
xor
inc
iret
test
adc
pop
dec
or
sbb
mov
popa
adc
les
and
stc
imul
pushf
jo
loopne
cli
ret
xor
call
xor
and
adc
sub
movsb
in
add
xchg
adcb
push
xor
mov
or
sbb
push
or
cmp
mov
cmp
cltd
mov
lds
movsl
mov
pop
jns
add
mov
iret
xchg
pusha
dec
push
sub
test
mov
sub
clc
call
fdivs
lret
lea
cmp
jbe
cmp
jbe
mov
aad
lret
mov
pop
and
jle
add
in
mov
and
insl
mov
jp
mov
sub
adc
dec
add
and
add
sbb
test
add
inc
ret
pop
icebp
cmp
pop
pop
cli
inc
push
adc
push
fsubs
adc
call
push
push
das
dec
cmp
gs
adc
loop
lock
out
mov
mov
add
mov
cmpsb
hlt
enter
nop
nop
sbb
cmp
push
mov
test
ret
mov
jne
fmull
sar
mov
fisubrl
bound
js
sti
lea
adc
add
xchg
push
in
cmpsl
in
push
xchg
pushf
adc
dec
sub
std
movsb
adc
jbe
pop
mov
fdivr
cmpsb
mov
or
add
bound
in
mov
cmp
in
into
xchg
jnp
adc
push
int
dec
test
movsb
ljmp
lea
and
sbb
dec
lock
movsl
add
fcoml
xchg
inc
shlb
mov
cmp
mov
test
scas
es
mov
mov
dec
mov
xchg
adc
ljmp
and
rorb
add
push
and
and
pusha
sbbb
dec
mov
je
xchg
cmpl
pop
and
cmc
sbb
sub
cmp
jmp
push
loope
mov
jl
lcall
add
and
test
pop
xor
xlat
jg
adcb
je
daa
sub
mov
mov
mov
mov
mov
inc
ljmp
add
enter
dec
mov
loopne
mov
sub
outsl
dec
sti
dec
test
dec
sub
mov
push
shrb
stos
jle
add
dec
add
sbb
add
push
aam
lock
adc
lcall
adcl
jl
dec
or
xchg
and
lea
mov
je
test
punpckhwd
sbb
les
shlb
mov
add
mov
and
maxps
xchg
aam
test
sub
mov
cmpl
adc
dec
push
push
out
rcrb
aam
mov
pop
mov
pop
adc
xchg
rolb
push
fldenv
aaa
aas
mov
or
jecxz
outsl
pop
fdivl
mov
cmp
adc
inc
add
sbb
cmc
leave
sbb
mov
push
insb
or
sub
add
and
sub
add
adc
xorb
xchg
mov
mov
add
dec
jnp
or
jnp
ret
ret
or
pop
insb
ret
xorb
insl
add
mov
dec
lea
lret
xchg
mov
ret
out
or
or
icebp
pop
gs
adc
sbb
incl
xchg
shrb
test
mov
inc
fdivrs
clc
add
xchg
jmp
ret
xchg
int3
es
and
sbb
adc
adc
mov
or
lahf
ss
scas
xchg
pop
push
push
mov
aam
inc
mov
mov
xor
and
lahf
imul
jo
stos
ret
push
pushl
or
lock
idivl
lcall
or
hlt
sub
cmpsl
sar
cmp
pop
push
sbb
lahf
test
pop
out
add
cmp
fists
fisubl
xchg
or
cmp
add
push
xor
jmp
cmp
jns
pop
clc
jne
mov
or
fs
add
insb
mov
mov
leave
lea
push
adc
out
shr
shlb
or
test
mov
pusha
jo
cmp
fldt
popa
push
fstps
imul
push
push
call
cmp
sbb
lea
clc
mov
mov
loop
jmp
cmpsl
loopne
mov
pop
pop
or
sub
lret
test
les
add
jae
adc
add
or
mov
dec
jl
inc
or
jl
xchg
jmp
xchg
popa
in
cmp
push
xor
les
adc
enter
test
or
dec
jge
movsb
xchg
mov
dec
mov
clc
add
mov
xor
std
inc
and
push
fs
movsb
stc
pusha
shrd
movb
push
xchg
add
and
into
inc
mov
pop
add
pop
mov
or
add
xchg
dec
ds
jno
repnz
mov
jae
shlb
pop
shrl
dec
mov
jmp
xor
push
adc
dec
add
nop
pop
pop
sub
mov
xchg
rclb
mov
mov
das
xchg
sbb
mov
test
pop
or
cwtl
cmpsb
loope
sbbl
mov
sbb
or
push
adc
das
sub
adc
stc
push
sbb
andl
push
cs
add
push
or
push
js
xchg
push
or
add
and
sub
xor
sbb
into
loopne
js
xor
xchg
push
sub
cltd
jae
cmp
stos
push
and
sbb
stos
and
fwait
les
sub
adc
movsb
and
xor
fwait
xor
xchg
sbb
sbb
repnz
adc
xor
add
cmp
inc
adc
iret
adcl
push
and
push
dec
cmp
pop
rorb
mov
mov
cld
jnp
ret
push
jae
bound
in
daa
inc
rolb
arpl
jo
push
dec
aam
ret
mov
push
movsl
add
push
and
sub
adc
cli
add
imul
inc
dec
cmpsl
movsb
xchg
push
jmp
or
inc
inc
bound
jge
leave
xorl
loope
enter
and
xor
sbb
jo
xchg
dec
or
mov
fnstsw
or
jb
test
sbb
test
call
repnz
ret
pop
js
arpl
xchg
leave
dec
cmpxchg
mov
ret
int3
dec
xor
roll
ret
popa
sub
push
sub
mov
jb
xorl
out
sub
mov
adc
jbe
jp
jge
inc
and
iret
dec
mov
mov
inc
lea
inc
lods
or
or
pop
cmp
inc
jne
loopne
pop
ret
popa
adcl
mov
add
int3
add
shlb
subl
or
mov
pop
push
mov
pop
mov
and
xlat
fsubrl
and
or
fsubrl
aaa
xchg
jle
into
add
sub
or
loopne
gs
xchg
std
loopne
clc
sahf
sub
cwtl
add
bound
mov
push
lea
iret
je
and
ljmp
and
cmp
xor
or
adc
inc
pop
and
xchg
xor
push
dec
aam
call
movsb
subl
push
push
mov
xor
cmp
xor
rcrl
aaa
popa
pusha
and
leave
push
ret
push
push
fisubrl
push
add
push
sbb
mov
lock
into
or
push
push
pop
push
inc
adc
sbb
hlt
iret
arpl
je
sub
loop
fisubrs
xorl
mov
mov
mov
filds
or
mov
cmp
addr16
arpl
shl
cmp
jne
mov
sbb
add
pop
dec
lea
mov
mov
pop
dec
xor
ret
in
push
cmpsb
mov
sub
inc
adc
je
testl
lcall
sbb
lods
aam
or
dec
ret
inc
cmp
je
sub
inc
jmp
inc
and
dec
xor
rcrb
lods
mov
mov
adc
or
rol
mov
mov
add
je
aam
mov
and
push
adc
into
xor
push
mov
xlat
shl
hlt
add
mov
les
das
pop
dec
cld
inc
cmpb
jne
xchg
fiaddl
cmp
outsb
hlt
cmpb
add
sbb
adc
je
in
aad
dec
shll
jb
int3
ja
js
jno
jne
sub
out
dec
xchg
push
xor
xlat
push
push
bound
push
push
ret
scas
sarb
xor
push
xor
loop
push
lds
loopne
jne
mov
sbb
inc
in
popl
add
inc
std
mov
movzwl
data16
je
pop
ljmp
rol
add
iret
data16
inc
shrb
shl
add
jmp
dec
iret
lock
and
cmpsb
and
or
adc
rorl
test
jne
xor
lock
mov
test
mov
or
push
fdivrs
push
mov
jmp
dec
shl
ffree
or
test
jne
sub
push
movhps
icebp
pop
mov
push
add
push
or
int3
pop
mov
std
lret
int3
inc
jg
fistl
add
or
jge
ljmp
fwait
fwait
sub
jle
sub
sub
and
pop
or
lods
and
pop
jle
pusha
mov
stos
sub
mov
loopne
pop
jbe
push
hlt
dec
jo
addps
adc
adc
lock
je,pn
test
jne
pop
inc
add
cld
jb
push
or
xor
xchg
mov
adc
movb
inc
mov
sub
mov
pop
test
xchg
mov
data16
mov
inc
and
dec
add
adc
jbe
arpl
inc
push
jmp
mov
ja
loopne
add
daa
sbb
packuswb
push
adc
cs
mov
mov
je
push
mov
sar
int
popa
mov
mov
cld
mov
scas
mov
out
mov
fmull
pop
hlt
inc
xchg
loopne
add
mov
ret
mov
pop
ret
dec
int
mov
mov
lahf
mov
paddsb
sub
rorb
push
push
imul
ret
inc
lar
lods
inc
xchg
mov
jg,pn
jl
mov
cmp
addl
and
jbe
push
das
test
pop
add
test
push
push
jecxz
pushf
mov
lods
jp
adc
adc
push
mov
test
push
xor
insb
dec
and
les
popf
sti
dec
cmp
add
outsb
pop
mov
add
sbb
cmpsb
loope
stos
repz
lar
jne
lret
mov
imul
std
scas
add
jecxz
push
andl
xor
lcall
jp
mov
jne
sbbb
sbb
push
inc
popa
xchg
stc
ret
push
pop
ficompl
scas
ret
push
pop
fdivl
xchg
mov
cli
push
pop
mov
xor
push
push
sbb
lahf
jbe
sub
push
outsl
push
pop
cli
idivl
test
push
incb
push
mov
nop
mov
int3
add
addl
shlb
enter
add
adc
cmp
mov
jmp
int
mov
shl
ds
lret
inc
xchg
sbb
push
pushl
aas
mov
lods
mov
cmp
cmp
jne
fsubr
jae
pop
push
or
mov
shrl
hlt
inc
add
cmp
pop
cmp
rorl
cli
push
dec
lea
mov
rcrb
dec
cli
enter
in
into
mov
xor
and
jbe
mov
jge
iret
out
in
das
push
gs
add
insl
dec
sbb
inc
inc
fwait
cmp
cld
pop
dec
mov
pop
nop
push
mov
sbb
aas
cmpsl
popf
sbb
jo
and
mov
push
movsl
xchg
clc
sbb
add
xchg
sbb
mov
test
dec
xor
inc
inc
jmp
roll
shlb
xor
shrl
dec
adc
jb
inc
lcall
jo
or
push
or
cmp
mov
or
mov
icebp
in
clc
mov
lret
inc
mov
push
add
pusha
addl
js
cmp
inc
push
in
mov
add
pop
cmp
push
or
add
sahf
cmp
sbb
mov
push
aaa
mov
jl
inc
jns
clc
push
add
add
rol
pop
iret
mov
fiadds
add
and
outsb
shl
ret
mov
pusha
adc
ret
or
sti
pusha
jb
add
ret
inc
orl
xchg
push
pop
jbe
inc
inc
mov
push
rorb
jbe
mov
mov
mov
das
push
push
mov
gs
or
and
or
push
ljmp
pop
idivl
loopne
pop
scas
lock
mov
sti
sub
into
mov
inc
insl
xchg
ficoml
popf
test
xchg
lret
leave
and
add
xor
sbb
adc
ja
jb
dec
mov
or
aas
or
push
fisttpll
frstor
inc
bound
or
xchg
pop
pop
test
xchg
fs
xchg
add
xchg
push
bound
inc
jecxz
and
icebp
leave
jae
cmp
dec
inc
in
outsb
pusha
jns
dec
or
int3
call
xlat
enter
or
xchg
push
add
add
dec
push
test
mov
in
push
fcomps
ret
scas
jmp
sets
loop
push
es
xchg
cmp
pop
loope
mov
push
push
lret
mov
jne
mov
fnstsw
fcom
mov
jnp
das
movl
and
js
mov
into
cmpl
arpl
es
andl
push
add
inc
fs
xor
fcmovu
cmpsb
adc
adc
rolb
lods
loope
push
bound
and
out
jno
fstps
cmp
mov
jo
sub
nop
inc
mov
sbb
jne
pop
popf
jne
cli
add
inc
push
push
cmp
mov
sbb
fimuls
rolb
mov
pop
enter
sbbl
cmp
adc
adc
mov
xchg
lods
repnz
jbe
je
out
or
pop
mov
sbb
jne
mov
je
mov
icebp
cmpsl
lods
fwait
dec
ds
sbb
cmpsb
shlb
cmpsl
mov
dec
mov
mov
aas
je
cmp
push
pop
jne
insl
pusha
sub
jne
scas
and
pop
jne
pop
push
test
mov
icebp
clc
test
xchg
jbe
insl
in
xor
ret
lret
sbb
outsl
jne
jmp
sbb
sub
sbb
add
mov
icebp
lcall
adc
test
fsubrp
outsb
and
inc
jmp
cmp
pop
pop
cmp
mov
or
and
pop
lock
in
sub
mov
push
imul
mov
cmp
fcomi
jmp
pusha
mov
jae
scas
daa
test
add
and
xor
add
test
aas
inc
repz
sub
decb
adc
cmpl
andb
push
xchg
cmp
bound
orl
fmull
pop
lods
pop
cs
fs
push
cmp
push
mov
scas
or
add
andb
ret
push
adc
ret
push
push
ret
orl
push
mov
ret
rclb
push
mov
lcall
push
adc
push
movsl
adc
popa
fistpll
add
inc
arpl
add
pop
ja
xor
xchg
sub
inc
bound
push
jno
pop
push
push
sahf
xchg
lret
in
mov
mov
cs
pop
pusha
pusha
or
popf
pop
or
test
and
xor
popa
push
sub
add
xchg
or
push
pop
mov
ret
and
sahf
mov
add
adc
dec
and
mov
dec
push
sub
fidivrl
or
jmp
push
dec
shll
or
push
adc
add
inc
cmpsb
adc
push
mov
sbb
or
inc
adc
jae
cltd
push
sahf
int3
adc
pusha
sbb
shlb
jae
in
push
sbb
stos
stos
insb
or
or
add
daa
mov
pop
test
les
pop
xchg
scas
sbb
mov
mov
ljmp
shr
sbb
inc
push
cli
inc
fwait
inc
jp
push
pop
jmp
shr
je
cs
mov
je
into
or
sbb
add
mov
add
or
mov
or
push
cmp
mov
fstpt
aam
repz
popf
or
mov
and
cmpsb
insb
xor
sti
es
sti
cmp
addr16
pop
push
mov
pop
movsl
mov
mov
mov
out
pop
mov
mov
inc
paddd
add
test
cmpsl
xchg
inc
cmp
cmp
popf
ret
mov
je
sub
adc
rorb
adc
add
ss
mov
sbb
in
or
push
pop
loopne
lahf
add
or
and
adc
adc
andb
shr
push
sbb
sbb
mov
pushl
cmp
je
push
pop
push
jl
cmpb
add
pop
cmp
test
sbb
pop
add
jecxz
mov
push
or
push
in
adc
popl
sbb
shr
add
push
adc
ds
or
js
jae
mov
add
add
in
mov
adc
pop
lock
cmp
jne
or
jbe
jecxz
jne
adc
inc
jbe
incb
sbb
jo
mov
lcall
out
movsl
shlb
orb
daa
jae
cmp
or
xor
lods
enter
add
incl
cmp
sub
sbb
fisubs
push
adc
inc
stos
cmp
hlt
ret
sub
mov
push
adc
mov
clc
jne
in
sub
or
mov
sarb
testl
mov
add
add
jne
call
negl
fistpl
jle
or
nop
xchg
add
addr16
adc
jbe
push
test
jge
jb
xlat
orl
lea
adc
test
mov
lock
add
je
mov
add
mov
call
loop
inc
inc
mov
cli
add
push
shl
cmp
enter
stos
outsb
push
pop
jb
les
and
add
sbb
mov
add
pop
call
add
mov
mov
and
lock
xor
addb
insl
inc
push
push
popa
lea
test
scas
jmp
xchg
orl
int
rcrl
push
pop
push
xchg
fcomi
cmpl
adc
shrl
push
rclb
hlt
test
inc
add
shrl
je
add
sbb
loope
or
jb
fisubl
mov
inc
pusha
scas
pop
lods
xor
xchg
push
cmpb
jns
add
rclb
mov
fisttpl
cmp
out
push
add
sub
xor
sub
orb
sub
cld
lret
mov
push
adc
pop
sbb
push
ja
dec
lock
add
sbb
mov
inc
je
adc
xchg
addb
and
adc
movsl
sub
mov
push
sub
cmc
cmp
shrb
mov
push
addl
test
jp
mov
sub
push
lcall
xchg
cwtl
cmp
test
and
clc
mov
xor
push
jmp
mov
outsl
add
clc
and
and
sbb
mov
pop
lods
insb
xchg
orb
mov
shll
sbb
dec
or
pop
dec
dec
jne
jns
bound
pushf
sbb
xor
call
sbb
hlt
jg
xor
daa
adc
lds
in
and
jmp
mov
add
cmc
and
mov
cmp
xchg
ficoms
lods
dec
imul
rolb
mov
dec
fdivs
inc
or
push
inc
sbb
loopne
mov
pop
cmp
loopne
and
aam
or
lds
and
outsb
mov
loop
xor
dec
loop
roll
out
daa
movsb
dec
insl
mov
fsubrp
push
mov
sbb
test
adc
cmc
daa
dec
ret
inc
mov
sar
cmp
jl
jmp
pop
lods
mov
or
mov
push
fidivrl
jl
movl
mov
aas
mov
pop
mov
push
cmp
notl
xlat
push
jge
xor
into
jne
shlb
push
shl
testb
leave
insb
xor
lea
mov
sub
lea
jp
sbb
and
add
or
in
dec
adc
stos
sbb
clc
int3
mov
subb
sub
lock
or
loop
lea
inc
push
jge
and
xor
mov
pop
jo
jmp
inc
ds
lret
add
or
push
push
xor
ret
insb
daa
call
jmp
push
xor
and
add
push
mov
ficompl
or
pop
int3
or
mov
or
jl
and
sbb
xor
mov
mov
add
hlt
push
push
push
aam
pop
cmpsl
into
mov
lods
fs
loope
aas
in
sbbb
pusha
scas
sbb
call
sub
rolb
jp
jecxz
inc
outsb
inc
push
and
dec
adc
inc
aad
es
add
mov
rcl
mov
sbb
or
or
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
lock
icebp
pop
fdivs
cmp
inc
ljmp
cmp
push
lock
and
fmuls
ret
testb
repnz
xor
stos
dec
adc
rolb
jle
jne
test
dec
nop
push
add
jl
adc
loopne
out
addr16
mov
xchg
mov
and
shr
test
adc
add
fcmove
cwtl
pop
ja
cmpsl
mov
add
iret
add
clc
mov
repz
inc
inc
inc
pop
into
cmp
pop
jg
icebp
and
sub
add
mov
xlat
dec
adc
jo
aam
in
cmp
pop
iret
mov
inc
jge
call
sbb
pop
movsb
mov
push
jo
ret
push
and
adc
jo
add
or
mov
mov
loopne
popa
add
sub
mov
sar
or
push
jne
daa
pop
inc
adc
in
or
sahf
add
enter
or
lret
ja
mov
fdiv
mov
bound
daa
mov
inc
out
xor
xchg
mov
mov
stos
call
sahf
cmpsb
add
sub
loop
push
das
mov
push
outsb
gs
push
jle
push
popa
xchg
addr16
add
xchg
xchg
cld
jp
dec
xchg
hlt
push
leave
fdivl
dec
subl
sub
adcb
iret
or
adc
pop
adc
in
adc
add
popa
adc
pop
test
divps
inc
fcomip
pushf
loopne
adc
ja
push
and
xlat
sarb
mov
push
pop
sbb
cmpsb
inc
xor
rolb
mov
cmp
push
cld
rcrl
pop
inc
sub
inc
movl
pop
ret
add
pop
mov
add
in
lock
or
adc
enter
xor
xor
cmp
and
and
or
je
dec
and
insl
stos
add
mov
addr16
sbb
sbb
iret
fdivrs
jne
cmp
push
imul
pop
cmp
inc
xor
add
jo
test
dec
jns
fwait
nop
sbb
jecxz
ret
lea
lds
jb
lods
syscall
inc
or
lret
adc
xlat
rorl
push
push
add
sub
push
mov
or
dec
push
rol
and
rorl
loope
and
adc
jns
fsubs
mov
stc
add
push
int3
test
outsb
out
sbb
jno
push
stc
dec
imul
jle
fsubs
aaa
and
movb
enter
test
adc
inc
nop
imul
ret
test
repnz
sub
mov
rcrl
adcl
fnstcw
or
jmp
or
pop
leave
mov
clc
or
mov
xchg
xchg
addb
pop
movl
cmp
inc
dec
andl
fisubrl
xor
dec
jne
and
or
and
add
test
pusha
cmp
fists
inc
pop
ret
cmp
fs
jp
ret
call
inc
iret
in
dec
mov
ret
cmpsb
cmp
mov
xor
push
inc
mov
movsb
or
xor
dec
push
or
sub
and
movsb
push
sbb
sub
adc
mov
pop
ss
push
mov
sub
jo
psubusw
mov
pushl
inc
int3
sub
mov
dec
jnp
fwait
pop
add
sub
mov
push
lods
inc
or
and
and
movsb
cmp
sbb
int
mov
imulb
rcrl
add
sub
dec
leave
addr16
pop
and
push
dec
adc
aaa
ficompl
out
sahf
xchg
je
inc
fisttpl
push
adc
rclb
and
mov
and
xchg
jl
aaa
ret
outsb
insb
neg
inc
mov
sbb
mov
inc
cmp
sbbl
push
jnp
nop
jmp
jge
in
jmp
arpl
add
fildll
xor
mov
mov
scas
push
aaa
push
movsb
mov
into
loopne
inc
xchg
aaa
mov
mov
xor
mov
or
adc
and
in
mov
sbb
imul
mov
jnp
add
sbb
push
fs
inc
and
int3
lea
in
mov
and
cmp
pop
ss
inc
pushf
subb
xor
popf
repnz
inc
lods
add
dec
lods
or
movsb
dec
add
sbb
xor
mov
inc
loope
push
popf
inc
sub
add
and
enter
jmp
sbb
fs
sbb
sbb
push
sub
enter
push
jecxz
mov
sub
inc
mov
insb
or
mov
je
cmp
xchg
push
sbb
shll
adc
movsb
mov
jge
bound
or
sub
and
and
cmp
cmpsb
mov
fistps
fcoms
data16
xchg
push
lahf
pop
aaa
incb
or
fbstp
dec
clc
jle
xor
sbbl
mov
push
sahf
inc
loopne
orl
jae
xchg
popf
fistpll
sbb
push
push
gs
cmp
aam
fadds
jbe,pn
fdivl
ret
mov
adcb
insb
ds
xor
xchg
mov
add
mov
shll
push
push
loop
push
es
mov
loopne
cmp
jbe
out
orl
mov
cmp
jne
cmp
lcall
jmp
std
cwtl
je
add
jo
adc
lock
or
adcb
or
iret
jae
test
inc
loopne
jne
cld
cs
inc
or
xchg
cmp
xor
pop
xorb
pop
ss
stos
mov
dec
mov
mov
sarl
popa
in
push
cmp
pop
clc
ret
dec
xchg
cmpl
adc
add
jb
jmp
mov
nop
cld
adc
addr16
mov
sbb
dec
cmp
mov
ret
mov
push
add
scas
mov
scas
sub
lds
cltd
cltd
push
or
jo
push
push
out
dec
and
jecxz
jge
mov
jo
push
adc
mulb
xor
cmp
fiadds
cli
pushf
mov
xchg
fs
mov
mov
addb
lock
mov
pop
push
pop
adc
pop
or
mov
pop
in
pop
mov
xchg
jne
mov
les
sti
adc
push
sbb
xchg
jle
pop
imul
sbb
pop
inc
mov
sub
push
pusha
cwtl
add
jle
aad
shll
sub
cmp
rcrb
rclb
add
roll
sub
cs
movsb
push
pop
or
add
lds
xchg
push
mov
xchg
mov
inc
push
mov
push
pop
cmp
jb
mov
push
jne
cmp
push
adc
sub
add
mov
xchg
push
sbb
mov
jge
xor
lods
cltd
int3
cmpl
mov
js
mov
hlt
shrb
sbb
push
jge
hlt
sub
add
out
xor
addr16
dec
add
ss
or
mov
in
pop
in
cmp
push
and
fistpl
orb
or
add
cltd
es
out
aaa
adc
pop
add
out
ret
test
xchg
cmp
sub
int3
adc
call
or
adc
push
dec
int
imul
inc
mov
adcl
ret
nop
or
and
adc
jecxz
adc
insl
outsl
leave
and
pop
inc
shlb
roll
in
jmp
add
ror
loop
jno
jle
clc
xor
incb
cmp
or
push
pushl
push
movsb
scas
inc
loopne
push
push
cmp
neg
sbb
inc
icebp
fnsave
jne
jnp
ljmp
cmp
mov
mov
mov
sar
aas
mov
sarl
add
dec
push
adc
add
shl
add
jp
divl
lret
out
in
cld
adc
push
sbb
xor
xlat
ficompl
inc
add
inc
sbb
popf
xchg
and
xor
jae
or
mov
adc
sbb
in
jecxz
adc
push
es
adc
adc
and
adc
adc
mov
icebp
inc
fs
adc
idivb
pop
xor
cmpw
je
or
inc
mov
cmc
lea
mov
mov
cltd
sbb
or
xor
fs
add
sbb
and
or
test
repnz
sti
xchg
jo
add
lret
add
inc
mov
notl
loop
test
sbb
fists
in
cmp
jl
inc
and
das
jo
pop
jmp
cmp
push
sub
cmp
bound
add
out
mov
enter
movsl
pusha
cmp
js
enter
mov
adc
mov
mov
out
cld
mov
test
jge
cmp
sub
sbb
pop
pushf
out
dec
movsl
rcll
lret
mov
inc
mov
push
push
add
mov
push
sub
jbe
movsl
popf
loopne
mov
xor
xor
loopne
lock
popf
jle
xchg
sbb
test
mov
push
mov
inc
ja
jmp
and
sbb
dec
jle
jmp
xlat
lea
lahf
add
jge
popf
xor
xchg
jb
pop
add
push
dec
jne,pt
sub
pop
fmull
add
pop
mov
mov
cli
add
dec
mov
nop
mov
add
test
insb
aam
jg
out
adc
mov
inc
or
adc
test
pop
movsb
jmp
xor
dec
cmp
mov
adc
lods
addb
and
faddl
loope
rol
adc
fadds
push
daa
ss
jmp
clc
mov
mov
adc
jno
sub
mov
jp
or
sahf
out
mov
add
arpl
sub
push
shr
lahf
jmp
mov
pop
nop
insb
aaa
xor
cmp
xor
jg
idivb
into
or
pop
add
ja
clc
imul
jmp
cmp
adcb
or
push
cmp
push
inc
cmp
lahf
insb
mov
fisttpll
sbb
repnz
and
cmpsb
dec
idivb
sub
mov
lahf
into
testb
push
ds
jmp
pop
and
or
lock
mov
and
and
test
jno
movsl
sbb
sarb
lock
inc
push
and
and
mov
pop
xor
mov
fs
jne
push
cli
sbb
cmpb
mov
adc
mov
adc
and
adcb
ret
or
adc
sbb
cltd
push
jl
clc
push
adc
jae
out
orl
stc
jle
sub
fcomi
push
or
mov
inc
lock
add
std
stc
ljmp
js
xchg
std
sbb
and
repnz
sahf
addl
jno
stc
mov
adc
inc
push
push
pop
xor
loopne
push
xchg
rorb
cmc
mov
adc
xchg
add
add
outsl
or
add
mov
fcmovb
repz
lcall
inc
pop
inc
popa
adc
sub
push
fldl
test
push
cmpsl
pop
mov
or
stc
fmull
int
jne
ret
mov
popa
lea
add
dec
pop
add
and
push
jno
mov
inc
andl
mov
into
stos
xchg
repz
or
notl
dec
adc
roll
aad
loope
push
push
mov
cmpl
push
mov
in
mov
lret
fnstcw
or
sub
jle
sub
ljmp
orb
lret
fisubs
outsl
pop
rorl
or
cmp
into
or
mov
je
daa
pop
stc
adc
in
xor
jp
xor
movsb
push
pop
inc
out
into
mov
xor
psubw
popa
fwait
ja
xchg
sbb
addl
scas
dec
pop
js
or
mov
pop
sbbb
pop
out
mov
push
mov
push
in
inc
sbb
cs
xor
insb
jne
js
sbbl
jno
xchg
pop
push
shr
sbb
push
lods
sbb
mov
daa
mov
lods
add
sub
add
imul
bound
push
inc
pop
jno
mov
insl
sub
dec
jmp
lea
adc
mov
push
push
pop
test
orl
jecxz
mov
hlt
or
repnz
cli
adc
jmp
insl
mov
adc
lods
add
popf
mov
faddp
lea
insb
fwait
push
inc
mov
ja
mov
pop
cmp
test
out
daa
and
outsb
adc
dec
sbb
cli
cltd
push
mov
mov
roll
daa
ret
jo
pop
addl
xor
dec
stos
lea
and
adc
pop
lret
jecxz
mov
jns
push
inc
push
imul
pushf
pop
sti
test
mov
call
inc
xchg
bound
pop
mov
add
push
and
add
push
pop
enter
pop
lcall
imul
and
xor
jl
push
cmp
jne
add
stos
pop
sub
test
adc
xchg
mov
loope
cmpsl
scas
mov
and
popa
rcrb
pushl
sbb
popa
rolb
pop
add
or
adc
jecxz
dec
or
enter
lahf
bound
mov
call
sbbb
leave
das
aam
inc
add
xchg
iret
mov
adc
in
adc
cld
mov
dec
xchg
loopne
andb
ss
adc
sahf
mov
and
sbb
out
les
rclb
and
fcmovne
enter
shll
jmp
inc
scas
and
inc
mov
xchg
or
leave
or
push
sub
cld
lock
push
ss
mov
or
insb
aad
sub
and
dec
pop
cmc
or
push
jmp
enter
inc
orl
jbe
pop
add
push
or
pushl
xlat
icebp
mov
add
rol
jae
lea
jmp
cmpl
or
inc
cmp
jbe
ljmp
cwtl
std
mov
push
imul
shlb
mov
cmp
jl
in
movsb
sbb
pop
or
fisttpl
xor
cmp
adc
pop
shl
xchg
icebp
sbb
push
fildll
xchg
incl
stc
add
imul
mov
add
icebp
jne
push
or
add
fmuls
xchg
addr16
fs
dec
rol
sub
add
jbe
jb
or
and
xor
cwtl
sbb
or
add
lcall
sub
lods
or
sub
or
add
sbb
inc
roll
popa
repnz
and
lea
xchg
test
mov
sbb
mov
xor
ljmp
push
jcxz
pusha
iret
dec
mov
add
and
repnz
out
mov
adc
push
ljmp
dec
cmp
lods
jbe
and
hlt
loope
notb
push
mov
push
inc
cltd
fbld
push
or
push
xorb
cs
mov
or
push
stc
xchg
jns
shll
test
push
sbb
ja
push
ret
add
add
push
inc
push
addl
xchg
outsl
pusha
adc
inc
add
jnp
adc
imul
or
and
sti
mov
mov
xor
and
nop
and
sahf
and
pop
or
xchg
add
nop
and
xor
mov
bound
cmpl
inc
popf
adc
inc
dec
jp
push
pushf
pop
add
jbe
push
pop
mov
nop
movsl
mov
adc
rcll
mov
jmp
div
push
dec
lea
sbb
dec
arpl
mov
stos
call
mov
adc
adc
lahf
cltd
test
push
push
addb
cmp
adcb
gs
cmp
add
mov
push
cmp
xchg
xchg
loop
test
insl
adc
pop
jbe
or
je
test
aad
in
push
jns
add
jne
mov
jle
addr16
push
test
cmp
dec
or
sub
dec
addl
adc
sub
pop
dec
int
pop
sbb
xchg
sbb
xchg
and
hlt
hlt
cmp
xchg
stos
jns
or
inc
nop
mov
pop
pop
pop
xor
push
adc
jae
scas
and
lret
fxtract
jne
shr
sub
pop
fistl
and
sub
jne
mov
pusha
lods
push
mov
arpl
fcoms
dec
sub
sbb
out
mov
or
ja
push
cmp
ss
pop
rolb
cmovg
sub
add
push
push
xchg
testb
or
loope
pop
cs
push
push
mov
out
orl
shl
jo
mov
fwait
xchg
movzwl
push
adc
adc
rcrl
cmpl
imul
fistl
insb
adc
aam
sti
pop
repnz
cmpb
jb
dec
mov
fucomi
adc
mov
or
dec
fistpl
mov
imul
std
jg
faddl
pop
cmp
jbe
or
jne
fidivrs
loopne
fisttpl
dec
cld
cmp
test
sarb
clts
add
mov
gs
mov
push
jmp
cmp
jl
add
repnz
inc
xchg
sarb
jecxz
xchg
adc
sbb
arpl
ds
cmp
adc
call
xor
shr
sbb
jp
cmp
insb
sub
jl
cmp
or
cmpsb
insl
pop
or
adc
sbb
mov
sbb
cld
cmc
shlb
or
adc
hlt
or
dec
pop
push
cmpb
and
inc
jecxz
ret
inc
lcall
mov
enter
cmp
fwait
sbb
out
mov
jnp
aad
adcb
and
sar
faddp
pop
leave
fiadds
test
sub
daa
sbb
test
outsb
inc
fwait
std
das
fwait
rolb
mov
call
adc
das
or
add
and
pop
sub
lret
in
jge
jo
xor
ret
daa
out
aas
sub
pop
cmpsb
inc
js
push
push
cmp
mov
orb
ficomps
xor
or
cmpl
hlt
jl
jmp
mov
push
pop
shlb
loopne
push
add
sbb
xor
mov
imul
mov
in
dec
push
dec
aad
loopne
addr16
jle
test
ljmp
cld
fs
int3
lock
adc
in
bound
sub
mov
pop
shlb
xchg
add
adc
in
insl
cmp
popf
in
out
mov
mov
jb
addr16
je
mov
shll
sub
rolb
fnstenv
add
sbb
ret
cmp
mov
or
mov
dec
xor
jb
push
jae
sbb
cmp
or
pop
mov
add
pop
inc
cmc
mov
inc
dec
nop
lock
dec
mov
inc
cmp
arpl
out
add
clc
inc
adc
push
ja
push
sbb
dec
push
push
sub
sbb
mov
xchg
sbbb
mov
std
stos
push
sbb
popa
jae
loope
dec
shlb
mov
in
cmp
je
push
or
pushf
and
or
shlb
and
ds
mov
jb
popf
or
cltd
xchg
pop
sbb
sbb
shll
push
call
dec
mov
or
pushf
or
pop
lods
outsl
jecxz
mov
lret
mov
add
jle
dec
loopne
hlt
test
or
pop
xchg
and
mov
jo
jge
cmp
cmp
sahf
lds
packsswb
test
je,pn
or
xor
inc
scas
lods
rol
xor
and
leave
ret
xchg
es
add
pop
xlat
or
in
jmp
and
shlb
jl
xor
mov
and
mov
inc
jae
cmp
xchg
sub
xor
inc
subb
lea
cmp
inc
rol
sub
sbb
sub
pop
push
mov
push
mov
ret
adc
mov
xchg
sbb
mov
mov
and
stos
adc
xor
fdivrl
mov
or
and
out
push
aam
cmp
or
hlt
fcomps
add
imul
sbb
fdivrl
shll
push
jle
ja
js
xchg
mov
push
cmpb
and
adc
outsl
add
pop
or
in
mov
mov
jmp
lea
sbbl
fdivrs
cmp
and
cli
and
add
xchg
popa
aas
fdivrp
xor
dec
in
mov
mov
mov
pusha
push
mov
outsb
mov
pushf
mov
fisttps
fsubl
mov
rcrb
sub
pop
popf
cmp
mov
adc
mov
add
pop
lea
fistps
xor
pop
pop
sub
xor
test
sbb
add
popf
pushf
in
sub
je
xor
sub
cmp
or
and
sbb
ficomps
adc
add
xor
inc
dec
ja
cmpb
jne
lret
push
fidivl
mov
sti
inc
cmpsl
jge
lea
sub
push
ss
stc
inc
inc
push
mov
push
sub
add
pop
mov
lea
out
or
mov
sub
pop
push
mov
testb
xor
ret
xor
cmp
jae
sti
add
out
aam
xor
jae
leave
jmp
push
and
sub
dec
and
dec
rol
push
xchg
add
sbb
sub
lsl
mov
mov
dec
and
add
xchg
cltd
nop
pop
cmpsb
xchg
loop
sahf
pop
push
sbb
adc
xor
out
mov
je
xchg
sub
orl
pushl
adc
roll
sub
testb
out
dec
mov
sub
inc
push
lods
adc
push
sbb
push
data16
loope
jmp
xorl
push
lea
cmp
sub
ret
jle
movsl
sub
popf
nop
mov
xchg
cwtl
jb
pop
adc
fildll
pushf
cmp
nop
and
into
je
clc
or
fsub
add
or
add
add
xor
or
adc
pop
xchg
push
dec
lahf
iret
data16
aaa
popf
test
push
addl
repnz
cmc
pop
adc
fsubr
movl
aam
mov
mov
repz
push
lret
pop
lea
xor
inc
and
data16
dec
add
flds
call
jns
sub
lods
adcb
cmc
dec
subb
dec
add
sbb
jmp
add
idiv
incl
mov
rcr
outsb
sbb
jmp
int3
xchg
mov
pushl
insl
pop
icebp
inc
add
repz
arpl
and
xor
pop
call
dec
pushf
push
mov
mov
in
adc
dec
out
cmp
inc
js
sti
jbe
dec
ret
push
jae
lea
push
sub
sbb
incb
cmpsb
fucomi
ret
push
in
stos
pop
icebp
daa
dec
push
inc
ja
lret
xchg
mov
ljmp
test
push
aaa
repnz
fdiv
loopne
jge
sub
loopne
insb
les
mov
fdivl
cmpb
xor
fldl2t
scas
jmp
out
push
cmp
cmp
sub
push
sbb
ss
adc
cmp
add
testl
cmp
insb
add
mov
lcall
fdivs
sub
iret
dec
into
xchg
jmp
push
sti
shll
jp
mov
mov
call
mull
cmc
dec
in
add
in
sbb
adc
sbb
or
mov
push
sub
ja
aam
dec
mov
mov
lsl
cld
jb
or
mov
pushf
test
cmp
aam
popf
xchg
mov
jae
xor
mov
xchg
int3
or
cmp
cmp
push
mov
xchg
or
out
jmp
push
sbb
ljmp
cmp
inc
cmp
nopl
jmp
imul
or
xchg
imul
into
shlb
loope
cmp
cmp
mov
sbb
sbb
cmpsl
mov
cmp
jb
inc
dec
mov
ds
unpckhps
add
into
pop
mov
cmp
sub
push
inc
or
add
mov
inc
inc
es
adcb
xchg
je
ret
pop
imul
and
mov
test
lahf
out
jp
push
std
std
jno
dec
add
daa
test
bound
inc
mov
outsl
add
pop
and
arpl
imul
mov
rclb
pop
outsb
outsb
adc
scas
addb
in
test
or
cmpsl
test
dec
push
test
loopne
jbe
dec
rclb
std
push
es
adc
enter
sub
mov
mov
mov
sarl
shll
add
add
push
cmp
cmp
jmp
adc
es
jecxz
jmp
inc
pusha
sub
inc
add
push
mov
pop
add
xlat
inc
adc
sbb
rep
fadds
loopne
loopne
pop
imul
mov
xor
subps
push
lock
lock
lock
jge
xchg
push
mov
mov
cmp
sbb
ret
lahf
push
cwtl
dec
sahf
clc
mov
inc
and
pushl
add
inc
mov
mov
pop
lret
pusha
dec
jae
jo
adcl
xchg
and
test
test
pop
fiaddl
sbb
rsqrtps
push
loopne
lea
test
outsl
xchg
iret
cmp
daa
sub
add
dec
or
xchg
xor
test
mov
mov
ds
imul
push
pop
gs
fstl
lret
push
mov
adc
sbb
inc
mov
add
add
les
sbb
jecxz
rol
bound
lods
pop
rcll
orl
ss
aad
adc
or
xchg
or
push
xor
sbb
sarb
mov
or
mov
gs
mov
inc
add
push
pop
pop
sbb
dec
shlb
lret
icebp
pop
loope
repz
in
xchg
mov
xchg
out
xchg
sbbl
notl
ss
mov
int3
adc
rcl
pop
cmp
adc
adc
xchg
push
les
mov
push
pop
jge
shlb
adc
cmp
pop
xorb
push
stos
pop
adcb
pop
je
add
leave
scas
jle
jne
mov
mov
cmpsb
lahf
ret
in
popf
add
loop
hlt
cwtl
mov
or
lock
pop
xchg
pop
mov
inc
mov
add
mov
shrb
aad
mov
cmp
nop
add
pop
leave
imul
sarl
push
push
add
cmp
fst
cltd
pop
mov
adc
adc
out
mov
push
or
je
icebp
mov
or
dec
pop
inc
push
test
and
cwtl
mov
push
shlb
aas
ret
or
leave
push
out
push
lods
xchg
xchg
push
fwait
xor
or
imul
movb
adc
push
push
pop
fwait
dec
or
xchg
jp
xor
push
dec
fnstsw
xchg
adc
data16
jnp
mov
mov
jo
or
inc
imul
mov
adc
pop
fwait
ret
mov
popf
mov
push
cmp
push
out
sahf
flds
repz
cmp
and
lock
cmp
mov
add
cmpb
add
push
xchg
or
jo
sbb
xchg
pop
push
pop
fimuls
push
push
mov
xchg
loope
lock
imul
lea
cmpl
push
or
std
and
sar
jmp
cmp
jl
call
push
mov
mov
adc
daa
jnp
fwait
lods
fdivrl
sub
push
pop
push
adc
xor
jl
adc
lock
rcl
adc
mov
lock
xchg
or
pop
pop
and
dec
fbld
push
jecxz
sbb
adc
xor
dec
or
mov
js
fistpl
jb
and
mov
xor
cs
xchg
push
leave
mov
inc
or
sbb
push
movsl
xchg
shlb
pusha
pop
adc
pop
cmp
int
push
in
fwait
ljmp
or
mov
cld
mov
inc
int3
gs
or
dec
and
push
push
sbb
cmp
fldl
push
mov
dec
mov
lret
cwtl
jg
or
push
lea
adc
mov
lea
ret
or
lea
enter
sbb
mov
fs
inc
stos
popa
push
rolb
mov
sbb
pop
inc
and
xor
push
cli
and
pop
gs
xchg
scas
and
or
cmp
inc
jmp
lahf
dec
sub
push
adc
cld
jbe
push
mov
insl
cmp
insb
push
add
sti
dec
in
add
clc
xor
adc
orb
push
adc
out
mov
in
lock
cmp
mov
ret
adc
stos
push
and
hlt
popa
clc
lret
orl
adc
inc
cmp
and
loop
das
and
jge
adc
jno
xor
cmp
mov
js
outsb
test
es
adc
mov
dec
ret
inc
shl
pop
jecxz
pop
jl
sbbl
add
cmp
rcrb
cmp
fisubrs
lea
sub
dec
and
jle
jne
std
mov
push
jp
jg
jle
and
adc
ja
rcl
jmp
sub
push
sub
push
movl
into
dec
add
inc
or
mov
dec
mov
xchg
ffree
inc
push
inc
daa
adc
xchg
push
repnz
cltd
ss
jo
pop
nop
mov
adc
push
dec
push
cmp
adc
test
jb
call
mov
daa
dec
mov
jo
mov
pushf
xlat
dec
pop
lods
movsl
inc
scas
jbe
loope
mov
mov
jmp
into
out
add
in
loope
roll
dec
xor
xor
cld
or
xor
mov
ficomps
pop
das
outsl
push
pop
scas
or
je
sahf
add
inc
dec
jl
rolb
push
or
jle
jl
mov
leave
sbb
xor
insb
es
cmp
lea
fdivl
mov
cmpsb
stos
sub
inc
sub
dec
dec
jns
adc
lret
outsl
dec
pop
js
push
shrb
mov
adc
adc
shlb
inc
add
jmp
xchg
shlb
ror
mov
xor
dec
neg
add
mov
xor
jg
sub
add
dec
inc
pop
pop
mov
cli
setb
rcll
pop
and
add
imul
sahf
or
sbb
jle
add
pusha
loop
adc
lcall
dec
sahf
jmp
imul
adc
pop
add
pop
sub
dec
and
lock
sbb
sub
push
xchg
sub
lcall
in
sbb
js
mov
out
js
dec
or
outsl
imul
cmp
xor
or
mov
and
nop
jo
pushl
sub
mov
sbb
xor
rcrb
push
dec
rclb
cs
add
rol
push
xchg
inc
in
mov
sub
mov
iret
cmp
ffree
cmp
fwait
jp
adc
repnz
push
xchg
push
dec
enter
mov
push
jecxz
loope
mov
daa
xchg
psubb
dec
pusha
pop
out
inc
sbb
pop
loop
cmp
pop
enter
and
cld
jp
rorb
popf
les
pop
pusha
pop
ffreep
test
add
and
repz
xchg
cmp
cmp
lock
pop
or
fidivrs
mov
jne
push
push
leave
js
fdivrl
jne
adc
or
push
xchg
pop
push
jne
or
jne
sub
lods
dec
sbb
icebp
loopne
scas
decl
adc
int3
ljmp
sub
fists
je
mov
lahf
cmp
or
scas
jmp
lea
cmp
pushf
push
lret
fdivrs
sbb
ret
push
xchg
or
mov
push
cld
notb
ficoms
cmpsl
popa
inc
add
in
sub
add
xchg
rclb
out
aad
push
mov
xchg
clc
add
dec
ja
inc
mov
fwait
movsb
lahf
lret
push
mov
adc
mov
lahf
mov
adc
lea
pop
push
jge
mov
adc
repz
adc
test
sbb
lods
or
sbb
push
sbb
cmpl
scas
fdivrs
mov
lcall
sbb
fbstp
popl
mov
jg
push
or
and
push
push
inc
pop
insb
xchg
pop
mov
lds
pop
push
cmp
push
pop
clc
adc
jl
and
sub
insl
cmp
sbb
or
and
sub
adc
or
pop
push
lock
ret
dec
aam
push
rorb
sub
es
dec
andb
xor
adc
andl
mov
fs
rolb
push
jne
dec
scas
mov
cmpsb
cli
or
pop
sub
sbb
jne
int
movsl
jns
dec
push
jns
sahf
sub
or
sbb
sub
movsl
dec
insb
jne
data16
jne
scas
ss
or
jmp
idivl
mov
cmp
and
fs
nop
or
cmp
je
add
orl
push
or
loopne
addr16
sbbb
xchg
lods
xlat
push
rcl
adc
fsubs
imul
data16
mov
ljmp
xchg
or
push
aaa
push
jnp
push
dec
addr16
cmp
cmp
fsubl
mov
cmp
jl
mov
mov
loope
mov
mov
jae
int3
ds
xchg
arpl
pop
sbb
in
sbb
cmp
push
pop
fdivrl
and
fstl
jns
inc
inc
push
outsl
fsubr
jl
test
sub
stc
xor
loop
mov
loopne
adc
or
lea
insl
incb
dec
mov
mov
mov
mov
out
xor
push
mov
add
and
sahf
jge
add
dec
or
sub
inc
push
loopne
jge
sbb
cmc
sar
and
js
roll
outsb
sbb
cld
xchg
push
jnp
inc
adcl
dec
add
leave
outsb
dec
stc
verr
sub
mov
roll
sbb
and
out
push
jecxz
in
or
jle
adc
dec
roll
adc
rcrl
adc
push
dec
shll
jo
arpl
fdivs
jl
aaa
adc
mov
and
pop
andl
xor
or
mov
dec
insl
jbe
mov
mov
sub
sub
xorb
sbb
jbe
adc
add
loopne
nop
in
movsb
jp
jle
pop
movb
sbb
push
mov
repz
dec
add
aas
jae
fmuls
rorb
sbb
orb
jo
enter
push
orb
jbe
rclb
mov
jp
ljmp
jns
add
add
sbb
dec
lock
sahf
out
inc
pop
sbb
inc
adc
test
lds
mov
pop
pop
and
divl
pop
movsb
dec
adc
mov
sub
adcl
addb
mov
or
test
mov
sbb
jo
cli
or
or
aam
jge
cmp
sub
mov
sbb
ret
push
dec
cmp
dec
push
adc
sbb
push
fs
jecxz
push
ret
pushl
loop
cs
push
jb
nop
jo
sbb
shrb
xor
push
mov
repz
mov
dec
insl
repnz
dec
and
fadds
push
push
fcoms
adc
push
imul
shl
ret
mov
sbb
add
jl
xor
sub
outsb
mov
sub
sbb
insl
mov
sub
pop
sbb
sub
daa
inc
dec
adc
int
clc
jnp
pop
sub
iret
xor
pop
pusha
pop
dec
test
or
call
mov
jge
mov
cmc
dec
mov
stc
cmp
lods
push
fldl
sar
lds
sti
cltd
in
add
xor
enter
stc
xchg
out
cltd
mov
imul
sub
add
sti
roll
xchg
stc
push
jne
mov
clc
loopne
mov
sub
mov
icebp
loope
mov
sbb
xchg
loopne
inc
cmp
lea
lods
xor
ja
add
fwait
fwait
dec
lahf
ret
aas
jo
cld
addb
dec
mov
cmp
add
or
push
ljmp
or
shrd
mov
movsb
aaa
mov
dec
or
sbb
inc
jl
or
lcall
lock
jne
cmpl
lods
dec
std
push
pusha
cli
out
fidivrs
add
addr16
dec
fnstenv
scas
or
cmovo
test
adc
pop
or
or
add
and
push
sub
je
xor
sti
insl
cwtl
sub
pop
adc
jne
in
mov
pusha
jp
lock
cmc
inc
xchg
dec
sub
enter
push
nop
loopne
repnz
js
mov
data16
mov
or
push
outsb
dec
jb
sbb
xchg
outsb
adc
lea
dec
std
sbb
or
mov
mov
and
sbb
jno
orb
xor
int3
lock
inc
das
xlat
sbb
inc
lock
adc
sub
jne
or
sub
in
nop
gs
inc
mov
fs
xchg
pusha
pusha
insb
insb
ret
sbb
scas
les
add
mov
or
mov
icebp
test
testl
je
cmp
je
popf
sbb
add
or
push
mov
sub
inc
and
lea
xchg
push
push
hlt
sti
push
sub
inc
adcb
and
orb
or
add
inc
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
prefetcht2
out
jecxz
push
push
pop
xor
cwtl
popa
fsubrs
sbb
rorb
xor
mov
mov
sahf
mov
add
pop
sbb
mov
sarb
pop
push
cmp
xor
cmp
mov
sbb
or
jle
sahf
push
flds
pop
cmp
cmp
test
mov
scas
xor
dec
loop
jp
arpl
addb
and
jle
or
sbbb
adc
jbe
or
adcb
jb
jl
subl
iret
push
sbb
jns
xor
jae
xsavec
popa
sti
popf
pop
ret
jecxz
mov
sarb
jmp
pop
xchg
shrb
loopne
hlt
je
push
das
adc
mov
shrb
mov
pusha
xlat
cmp
fldlg2
fsubs
pushf
cwtl
fidivrs
inc
mov
imul
sub
popw
int3
mov
sbb
rcl
push
add
js
push
shl
add
dec
push
lea
mov
cwtl
push
out
add
add
lea
or
lret
push
or
push
lret
add
sbb
fcomps
adc
pop
fcoms
push
testl
in
lret
ret
mov
add
icebp
and
push
mov
or
pop
cwtl
or
pop
arpl
and
dec
xchg
imul
jbe
test
xor
loopne
dec
movups
or
sbb
inc
adc
mov
pop
add
dec
pop
pusha
inc
dec
mov
bound
data16
movsb
scas
js
aaa
jbe
sbb
mov
inc
mov
mov
popf
fnstcw
int3
mov
stos
push
js
xchg
and
add
xor
call
sbb
sbb
es
adc
or
add
subb
shlb
xchg
mov
sahf
adc
adc
xor
adc
push
mov
push
imul
shrb
pushf
cwtl
adc
xor
cmp
push
adc
xor
sbb
mov
and
js
sub
adc
ds
shrl
ret
and
sub
loope
lock
pusha
xchg
dec
mov
in
sub
cmpsb
push
push
push
push
or
ja
mov
mov
inc
jbe
lock
cmpl
pop
jp
gs
es
cmpsl
imul
push
jmp
jno
pop
jle
pop
cmc
je
push
rolb
imul
dec
mov
pop
mov
orl
xor
xor
dec
jo
mov
pusha
xor
mov
movsl
add
mov
jl
out
mov
sbb
and
jo
popa
subb
push
adc
adc
jmp
daa
out
sub
xor
loopne
inc
ljmp
cmp
and
mov
fwait
ret
xor
in
cmovg
sbb
push
lds
add
mov
dec
sbb
fdivp
movsl
lcall
sub
repz
ficoml
and
daa
ja
movsl
jns
push
roll
je
or
outsl
movsl
aas
and
push
cmpsl
pop
inc
adc
insl
lea
cmc
add
mov
xlat
or
sahf
iret
push
sub
adc
push
sub
inc
sbb
push
inc
mov
jnp
mov
subl
and
jl
bswap
int
adc
fsubl
dec
into
cmp
stos
adc
sbb
sub
and
je
or
cmp
test
sbb
push
pop
rcll
mov
adc
fdivl
test
pop
cmp
je
in
cmp
push
pop
scas
push
mov
dec
jnp
out
push
js
add
xchg
add
sti
cmp
push
add
int
call
shrl
push
and
adc
leave
loopne
push
arpl
adcb
cmp
cmp
push
push
mov
push
pop
jb
xor
xchg
push
and
js
pop
dec
xor
call
add
or
pop
mov
jns
jnp
dec
loopne
inc
or
imul
dec
cmpsl
fcomp
test
xchg
push
xor
stos
jo
je
or
xorb
jbe
pop
rcll
cmp
sub
rorb
add
add
sbb
lret
pop
jmp
inc
add
or
ja
xchg
jnp
cwtl
xchg
add
and
dec
shlb
loop
and
xor
xor
rclb
loopne
adc
jg
or
cmp
add
fwait
xchg
cmp
inc
and
add
and
js
xor
mov
mov
push
test
lahf
inc
xor
lret
add
loopne
leave
lret
adc
and
outsb
jnp
cmp
xor
notl
incb
jno
pop
mov
dec
and
cmp
in
and
sbb
add
jle
je
mov
cmc
js
aas
fimuls
dec
dec
stos
jmp
pushl
mov
stos
fucomip
mov
pop
add
ret
sub
rol
fmull
shll
loope
push
rcrl
add
lods
pop
test
cwtl
lahf
or
into
ficompl
pop
mov
popa
mov
mov
sub
mov
jl
andl
mov
jle
mov
jns
pop
js
or
loopne
stos
in
cltd
mov
cmp
jae
xchg
dec
cmpsb
cmp
flds
lds
repnz
jo
push
dec
cwtl
lea
cmc
adc
push
loope
mov
ret
dec
adc
push
fcoml
in
js
mov
nop
jo
or
fimuls
test
sbb
testl
gs
adc
shlb
xor
rclb
ds
xor
xor
inc
push
push
or
and
test
xor
je
push
adc
push
cmp
int3
sub
xor
pop
push
sbb
jmp
and
push
cs
sbb
pop
mov
push
mov
mov
xor
inc
add
fcomps
push
mov
cwtl
pop
sub
rorb
cld
movsb
add
pop
pop
sub
xor
xor
cs
xor
pop
lock
or
add
inc
jnp
push
or
jle
cmp
cmp
sub
dec
ja
imul
lock
ret
inc
sbb
clc
fcoms
mov
pop
or
pop
fdivr
int
dec
or
dec
jl
loope
xor
push
not
lds
addb
adc
or
add
shrb
push
loopnew
jbe
mov
sub
or
inc
mov
leave
pop
adc
xchg
pop
gs
cmc
mov
mov
out
or
cmpsl
sub
add
mov
inc
and
pop
push
and
repnz
rolb
inc
push
jb
mov
popf
fstl
sarl
aaa
add
dec
scas
inc
add
xor
lret
jecxz
mov
movsl
push
repz
mov
mov
movsb
shll
cmp
pop
rclb
push
test
cmpl
in
mov
mov
dec
sbb
add
jae
mov
subl
mov
data16
xchg
mov
xchg
imul
mov
mov
inc
mov
mov
pop
neg
adc
cmp
out
jmp
lods
fwait
daa
out
nop
or
inc
dec
push
mov
inc
pushf
jmp
cmpsl
jl
dec
add
in
inc
ficoml
push
push
push
inc
nop
push
call
jbe
imul
cltd
idivl
push
inc
and
ja
mov
lea
push
loop
xchg
dec
cmc
lods
inc
add
push
ret
lds
mov
pop
sub
add
or
xor
mov
daa
jne
pop
scas
xchg
mov
push
jae
cwtl
addr16
xorl
and
sbb
movsl
add
shlb
xor
mov
pusha
and
mov
add
add
xchg
in
xrelease
fsubrs
icebp
insl
sub
test
jge
or
adc
lea
add
xor
xor
testl
sub
fs
inc
add
pop
push
xchg
das
outsb
movsl
or
popl
mov
lcall
in
clc
push
add
ss
ljmp
xor
bound
dec
pcmpeqd
arpl
test
test
cmp
or
sbb
mov
aaa
pop
outsl
push
inc
outsl
push
or
and
lock
push
add
lock
jmp
jae
orl
sbb
in
imul
dec
sub
fst
insb
pop
je
xor
add
addb
ficoms
mov
lock
adc
push
dec
mov
iret
inc
out
push
cmp
adc
sbb
jle
cmp
and
jp
pop
mov
xor
mov
xlat
pop
add
fildll
xchg
push
jnp
and
push
push
fcmove
mov
add
adc
pushf
and
and
cmp
fcmovnb
cmp
cmp
pushf
jbe
or
cmpl
ljmp
out
movb
add
or
fucom
pmuludq
pop
adc
inc
insb
shr
inc
add
mov
mov
call
loopne
adc
inc
ret
cmp
arpl
add
jp
scas
sbb
pusha
insb
std
popl
daa
and
cmp
push
mov
jo
dec
add
repnz
mov
bound
jge
sbb
and
fsubs
cmp
or
hlt
sbb
push
pop
xlat
adc
arpl
pop
push
sub
inc
lock
mov
add
xchg
push
cwtl
sub
sbb
inc
pusha
and
ja
idivb
add
xor
mov
dec
push
cmp
adc
sti
jno
add
push
sbb
mov
sbb
push
jp
inc
add
jno
adcb
idivb
rcrb
inc
addb
inc
imul
adc
add
or
mov
jmp
xor
sub
push
adc
aaa
and
xchg
insb
insb
sbb
lods
adc
lcall
cmpb
add
pushl
fadds
cmp
xor
sarl
sahf
xor
je
jbe
inc
add
insb
adc
sahf
or
jg
aaa
pop
lock
and
aad
mov
sub
cmp
add
je
push
push
jo
dec
int
push
adc
pop
mov
pushf
push
lea
nop
cmpsl
cmovae
clc
add
sbb
movb
cwtl
cmp
add
addr16
mov
fs
sbb
jbe
daa
pop
push
mov
enter
push
xor
repz
mov
pop
fimull
adc
xor
sub
jne
adc
jo
add
je
lcall
or
pop
or
test
push
or
cmp
push
or
insl
add
mov
adcl
inc
arpl
mov
cmc
cld
inc
or
xchg
cmp
pop
cli
imul
daa
ss
inc
adc
dec
imul
or
mov
lea
cld
add
and
andl
push
or
and
mov
stos
push
adc
pop
fs
xor
and
loop
mov
add
inc
inc
dec
outsb
inc
push
xor
add
cmp
and
ja
in
sub
sbb
les
fs
call
pop
cmp
lock
pop
nop
fs
lock
loopne
pop
testl
xchg
inc
inc
dec
es
push
push
adc
clc
call
dec
mov
fldl
dec
and
add
lods
pop
roll
xchg
adc
dec
or
ja
aaa
sbb
adc
loop
mov
jmp
or
lock
sub
inc
in
dec
or
add
into
or
mov
insb
push
pushf
add
fidivs
pop
mov
jl
adc
xor
mov
les
lock
sahf
testl
dec
jle
xor
push
fmulp
adc
or
ret
sbb
int
fdivl
arpl
and
inc
nop
push
insl
jne
test
push
imul
pop
pop
clc
push
add
jo
jo
pop
adc
jo
pop
jbe
xorl
sbb
sbbl
sub
pop
push
push
jl
adc
push
and
dec
and
jnp
xor
mov
push
call
and
mov
xor
fisttpll
mov
ficoms
cmp
lock
fsubl
inc
jmp
andl
insb
loopne
add
adc
ret
adc
mov
lods
xchg
inc
testl
daa
inc
fiaddl
loope
xchg
sbb
dec
adc
dec
push
mov
cmp
cs
jnp
orl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
nop
xor
test
stos
sti
jb
sbb
rolb
rolb
adc
pop
cs
daa
nop
in
or
and
push
xchg
inc
mov
fwait
inc
push
jne
push
jl
cmp
mov
jl
or
lea
loop
sbb
cmp
push
or
mov
and
pop
jo
pop
cld
push
sbb
adc
popf
mov
loopne
stos
adc
add
cmpsl
lock
mov
es
push
sbb
pop
repnz
adc
and
mov
mov
outsb
adc
test
adcl
cmp
ja
je
or
je
add
sub
sub
jno
mov
adc
jge
sub
orb
or
test
cmpl
movsb
xchg
adc
or
xor
sbb
sahf
imul
enter
push
jmp
cmp
mov
jbe
adc
push
xor
inc
sbb
inc
adc
mov
fmul
ja
adc
or
mov
ret
xorl
add
movsb
call
cmp
xor
push
dec
push
arpl
xor
mov
stos
xorb
or
add
inc
xor
or
pop
pop
pusha
jg
mov
push
xor
mov
test
mov
andl
outsl
orl
aad
or
lods
movsl
test
loop
and
pop
ret
push
and
leave
outsb
inc
imul
add
sub
or
sub
adc
push
inc
jmp
addl
adc
mov
test
sarl
fwait
into
daa
or
ret
push
adc
push
add
das
inc
dec
xchg
fwait
adc
in
dec
imul
mov
push
insl
inc
or
pop
std
inc
or
push
test
cmp
and
push
int
cmp
and
lcall
loopne
flds
ja
jne
push
or
adc
pop
and
in
outsb
inc
sahf
shrl
dec
popa
pop
xchg
lahf
loope
push
xlat
pushf
mov
push
fsubl
js
add
xor
out
je
push
xchg
rclb
sti
clc
dec
das
dec
enter
add
xchg
ds
push
cmp
or
or
push
or
push
pop
jo
or
push
fsubs
stos
test
push
scas
adc
xchg
xchg
test
xchg
sub
push
or
pusha
lcall
out
add
xchg
dec
arpl
shrl
loopne
mov
push
xchg
sbb
sbb
dec
push
dec
pop
aas
lods
xchg
lea
movsl
hlt
push
arpl
add
add
dec
and
push
push
add
cs
jns
xor
in
inc
inc
scas
dec
in
clc
dec
mov
in
test
lret
leave
cli
fidivrl
mov
sbb
aam
adc
dec
xchg
js
inc
cmp
cmp
fildl
fcoml
loope
jns
loop
push
xor
cmpb
ret
xor
jno
stc
fcoms
inc
insb
dec
fsubrs
dec
push
les
bound
inc
inc
paddq
sub
dec
sbb
lcall
xor
loop
cmp
stos
iret
add
cmpsl
add
dec
fmuls
test
cwtl
xor
popa
cli
jo
in
js
in
and
add
ret
mov
inc
sbb
mov
adc
fisubrl
movsb
sbb
in
mov
movsb
jno
scas
std
decl
lret
repz
or
adc
push
cmp
dec
pop
repnz
sbb
inc
sub
push
mov
scas
xor
popf
inc
rorb
fildl
adc
ffreep
ja
mov
and
ret
sub
mov
add
jne
mov
push
adc
push
fisubrs
add
dec
xchg
cwtl
out
and
jge
sbbb
loope
in
cli
sbb
rorb
push
loop
xlat
mov
stos
inc
sbb
mov
sbb
push
sub
jb
jmp
pop
xchg
dec
test
outsl
add
dec
dec
dec
mov
movsl
fcompl
dec
stc
int3
sub
sbb
jp
cmp
test
imul
xchg
lcall
pop
adc
sbb
cs
arpl
sub
sahf
mov
push
inc
sbb
jecxz
adc
pop
xchg
mov
push
add
inc
inc
inc
test
inc
ss
mov
or
or
add
popa
aaa
sub
adc
push
and
clc
cmpsb
popf
fabs
pop
push
xor
and
push
int3
cmpsb
add
pop
lret
in
mov
aaa
mov
nop
gs
mov
enter
leave
je
ss
int
rcl
add
pusha
or
adc
cwtl
ljmp
or
xchg
push
sub
sahf
sub
insl
icebp
add
push
inc
xor
pop
movsl
call
adc
xchg
pop
aaa
in
mov
jo
dec
cmp
hlt
and
inc
adc
pusha
mov
push
add
popf
and
pop
adc
nop
cmp
sbb
ficomps
mov
sub
jo
push
call
mov
test
enter
mov
mov
mov
adcl
or
mov
testb
dec
ret
lods
sub
pop
inc
pop
pop
adc
out
pop
and
rclb
out
aas
dec
xchg
scas
mov
adc
jne
popf
cwtl
loop
push
mov
push
add
xchg
add
lock
je
add
outsb
adc
sub
push
pop
or
cmp
mov
and
or
mov
or
les
xchg
ds
ss
jnp
mov
jnp
mov
test
xorl
dec
adc
lahf
inc
cmp
pushf
pusha
sub
push
jl
int3
pop
jne
xor
adc
les
cmp
dec
bound
cs
xchg
push
jne
test
xchg
or
push
loope
pop
shrl
push
js
je
add
ret
inc
or
sarl
arpl
sti
fiadds
sarb
sbb
xchg
sub
movsl
rolb
sbb
jmp
ret
rcr
std
and
adc
dec
dec
pop
test
inc
movl
dec
adc
and
add
cmp
sub
adc
pop
cmp
icebp
inc
fldl
or
enter
add
orb
jnp
cmc
add
push
inc
lret
mov
loop
lods
adc
lcall
and
sbb
loope
in
popa
and
divb
cld
add
sub
into
jle
out
dec
mov
loope
pop
jp
xor
adc
mov
insl
dec
pusha
aad
call
sbb
and
xchg
mov
rcll
sub
test
mov
in
add
scas
jae
and
xor
loopne
fdivs
clc
pop
push
das
and
bnd
pop
stc
push
cmp
xor
push
sbb
sbb
add
cmpsb
push
xor
mov
add
mov
loopne
sbb
or
femms
push
fs
lods
arpl
test
arpl
in
pop
mov
pop
rcrl
icebp
in
lods
ret
dec
jbe
cmp
nop
inc
dec
xchg
repz
lock
sahf
xor
jecxz
jne
sbb
mov
fcomp
add
xchg
add
ret
ret
jns
call
mov
nop
adc
roll
emms
dec
or
add
and
repnz
rorl
shlb
and
push
lret
cmp
je
sub
pop
add
adc
push
adc
cmpsl
mov
dec
pop
addb
mov
adc
add
rorl
and
fistpll
and
xchg
hlt
das
mov
push
repnz
pop
je
mov
add
outsb
je
cmp
jnp
call
fistpll
loopne
cmp
push
push
dec
mov
cld
xchg
mov
adc
mov
adc
pop
mov
leave
inc
add
or
add
mov
rcrb
ret
and
lds
push
cmp
sti
ss
or
ja
cmpb
mov
push
data16
jo
lods
add
pop
mov
mov
loop
jp
sbb
adc
and
xor
outsb
movsb
adc
in
sub
lea
faddl
inc
sar
mov
lds
cltd
push
das
pop
orl
repz
mov
or
sub
jns
outsb
adc
add
dec
sti
or
iret
neg
push
je
adc
xor
cwtl
sbb
adc
xor
cmp
xchg
dec
sbb
hlt
and
fwait
add
fs
repnz
sbb
push
sub
int
add
xor
lea
dec
dec
ja
xchg
sub
test
repnz
mov
nop
jb
cmp
add
push
xor
fwait
xor
nop
lret
jae
cmp
mov
sbb
cmp
jo
inc
push
in
add
add
gs
jne
sbb
rolb
in
in
xchg
gs
pusha
dec
mov
mov
jl
add
push
insb
and
fldl
xchg
cmpsl
mov
ret
les
mov
and
add
push
mov
repz
sub
mov
mov
sbb
push
mov
xchg
pop
push
in
sub
jne
push
add
inc
icebp
test
call
and
push
add
sahf
add
or
sbb
xchg
mov
test
and
pop
call
pop
pop
push
sub
xchg
es
insb
mov
adc
lret
pop
add
movsb
ret
lods
jp
dec
inc
sbb
sbb
rclb
movsl
push
movsl
jb
sbb
sbb
mulb
clc
dec
push
dec
test
test
rorl
adc
ja
cmp
outsb
and
imul
dec
faddl
mov
mov
inc
cmp
xchg
or
dec
arpl
je
cltd
push
stc
mov
fdivl
data16
lock
das
cwtl
icebp
mov
jae
imul
call
test
dec
push
jl
dec
pop
in
push
testb
inc
sbb
sbb
mov
cmp
rcr
mov
dec
loopne
loopne
pop
in
pusha
add
mov
xchg
loopne
loop
and
rorl
or
cltd
cmp
add
add
cmc
add
cmp
push
enter
icebp
nop
push
aas
push
xchg
outsb
popf
std
lcall
loop
sbb
popf
add
sub
pop
sub
adc
or
jne
pusha
jle
int3
adc
jb
mull
mov
aaa
add
or
loopne
and
scas
pop
dec
sbb
in
scas
mov
call
or
adc
or
cmp
test
je
add
mov
shll
xor
add
mov
and
movss
xlat
sub
test
fcom
add
fdivl
outsl
jmp
fwait
out
adc
arpl
dec
rcll
inc
cmp
pop
mov
in
cmp
mov
push
cmp
dec
cmp
jb
mov
aaa
push
cltd
pop
and
cltd
adc
pop
mov
data16
inc
jge
dec
or
pop
pop
or
cmp
jne
int
rcl
sbb
mov
mov
mov
add
fisubrl
cmpsb
test
add
sbb
fcoml
and
test
or
fstl
test
inc
xor
jb
add
popa
or
gs
rcrb
push
js
fidivrl
or
mov
jb
xchg
dec
and
push
and
pop
or
xor
jp
clc
leave
fadds
in
or
enter
cld
bound
cmp
aad
imul
leave
lods
mov
cmp
xchg
enter
enter
inc
xchg
sub
movsl
jbe
adc
sbbb
adc
push
loopne
mov
sub
fnstcw
inc
mov
sub
mov
xor
cmpsl
jo
and
cmpsl
push
and
mov
adc
or
xor
addr16
add
dec
push
das
mov
push
jnp
nop
or
stos
fdivrs
add
lods
cwtl
cmp
mov
mov
outsl
inc
or
test
gs
sbb
adc
sub
push
add
adcl
mov
enter
ret
pusha
lock
xor
mov
add
scas
repz
aad
mov
test
jbe
shll
cmp
push
xor
cmpb
rcr
sbb
cmp
mov
push
shll
je
dec
jno
mov
scas
inc
lock
add
and
leave
mov
xchg
xor
cmp
push
xor
cmp
push
sbb
xchg
mov
sub
adc
test
push
push
dec
stc
add
mov
xchg
adc
jo
add
mov
cmp
adc
cmp
push
cmp
push
pop
sub
loope
pop
jmp
sub
adc
andl
mov
sbb
pop
mov
mov
or
sub
xor
jle
push
lea
cmpsl
sub
xchg
pusha
cmp
push
adc
xchg
pop
dec
jo
mov
adc
test
or
pop
enter
sbb
int3
xor
lock
enter
adc
lret
aas
xchg
std
aaa
aas
ja
push
inc
loopne
add
inc
ficompl
aam
lock
popw
mov
inc
imul
sub
mov
and
fimuls
mov
push
ljmp
push
loop
sbb
mov
jnp
rol
xlat
shll
call
out
pop
cld
je
dec
adc
sbb
shr
mov
aaa
loopne
sub
aaa
lret
test
sbb
and
xchg
repnz
xchg
insb
inc
inc
and
and
int
imul
clc
ret
jecxz
icebp
push
xchg
adc
movsl
push
nop
add
imul
push
and
jecxz
mov
addl
sub
nop
nop
mov
and
add
insb
inc
aad
dec
aam
and
fstpt
aad
enter
sar
jecxz
cmp
push
lea
or
jnp
imul
sbb
fwait
inc
je
and
xor
popf
push
je
or
xor
mov
inc
jae
or
cmp
fs
ds
xor
xor
nop
fstp
xlat
clc
mov
cvtps2pd
inc
inc
or
shlb
vmovntdq
in
imul
stos
lret
stos
mov
sbb
dec
outsl
push
add
inc
jmp
cmp
pop
cmp
rorb
data16
ret
dec
add
sub
clc
scas
or
jle
adc
and
pop
cmc
mov
pop
scas
fcoml
arpl
and
pop
les
xchg
arpl
xchg
test
lock
xchg
insb
pop
jo
inc
and
pop
sub
in
repnz
and
faddl
pusha
bound
add
xchg
cmp
push
aas
push
insb
sbb
adc
push
push
adc
aad
roll
ds
push
dec
lock
rep
sti
mov
lds
pop
mov
pop
rclb
aaa
xor
ret
dec
mov
in
sbb
or
jns
mov
push
push
dec
loope
jecxz
js
pushl
mov
or
and
in
sbb
popa
call
push
hlt
jp
ds
imul
sbb
push
jmp
jne
jb
je
pop
inc
inc
push
xor
lods
das
push
push
ja
dec
xor
push
lret
xor
adc
lock
push
andps
add
js
cltd
fistps
xor
push
call
jae
sbb
or
adc
mov
nop
pop
xorb
push
loop
call
outsb
push
clc
shll
pop
mov
xlat
repz
fsubr
pop
cld
sub
jge
loope
pop
inc
mov
pop
add
adc
ret
sub
lea
ljmp
sub
push
cmp
push
adc
adc
lods
in
inc
cmp
cmp
xchg
outsl
inc
gs
imul
cs
sbb
cmp
repnz
adc
pusha
or
sarb
adc
cmp
rolb
sbb
adc
mov
hlt
out
push
add
sub
jl
test
lock
xchg
jg
cmp
sbb
enter
fmuls
or
and
inc
push
push
out
push
clc
mov
jle
dec
add
jmp
sbb
xchg
fdivrs
push
ror
fsubrs
sbb
out
mov
ret
push
es
xor
push
dec
ljmp
and
lds
pop
push
arpl
and
inc
xor
jnp
xor
sub
leave
xor
repz
xor
cmpsl
jns
out
or
sub
inc
jp
cmpsl
jns
dec
jl
int3
arpl
inc
test
aaa
test
lahf
xchg
push
movl
movq
movl
loopne
lds
and
inc
mov
mov
decl
jno
jne
scas
jmp
adcl
push
ss
add
xor
mov
push
mov
add
mov
shrb
pusha
add
xchg
imul
sub
mov
cltd
or
cwtl
lds
jb
out
jnp
inc
push
pop
jne
inc
jb
shr
inc
adc
cmpb
icebp
and
pop
xor
or
add
add
dec
call
fisttpl
in
inc
insl
gs
mov
and
call
mov
fs
and
adc
add
js
push
data16
bound
pop
out
shll
and
jae
push
std
adc
inc
mov
mov
xchg
insl
popa
test
mov
outsb
dec
and
inc
xor
jle
dec
sub
cmpsl
or
sbb
and
jbe
fnsave
xor
je
pop
cmp
inc
loop
xchg
sub
fwait
sarb
sbb
popa
push
and
les
push
sti
rep
mov
xor
repz
pusha
or
sbb
jmp
sub
add
cmp
jae
pop
shlb
add
cmp
ja
sbb
lcall
mov
fwait
fs
push
jo
mov
jae
push
push
cld
into
insb
lds
push
and
push
mov
pop
cli
lcall
inc
or
je
mov
sub
das
adc
pop
mov
ds
adc
sbb
mov
and
xchg
mov
cmpb
adc
mov
lahf
movsb
js
push
push
popa
lea
xor
call
mov
imul
addr16
mov
into
and
fs
repnz
push
mov
push
pop
push
iret
test
out
mov
xor
aam
add
dec
xchg
and
mov
push
push
push
sub
inc
cmpsl
adc
mov
xchg
arpl
add
outsb
add
xor
dec
hlt
lock
popf
inc
pusha
cld
pop
mov
push
push
push
push
sub
add
pop
and
sub
mov
ret
and
jl
cmp
inc
xlat
push
push
mov
dec
xchg
push
aam
xchg
aad
adc
sub
mov
and
jae
adc
sub
sub
cmp
add
les
or
sbb
pop
pop
or
xor
cmp
mov
loopne
mov
push
pusha
push
loopne
bound
adc
push
inc
adc
sub
xchg
add
dec
push
sub
outsb
push
push
ret
adc
in
or
call
cmovg
out
xchg
adc
ret
xchg
sub
sbbl
mov
es
sbb
pusha
je
cmp
and
lahf
mov
and
sbb
pop
rclb
inc
les
nop
jle
jnp
nop
or
fs
and
ret
adc
push
daa
xchg
dec
dec
testl
shll
js
test
and
mov
adc
inc
cmp
xorb
add
addb
cmp
inc
pop
fcoml
icebp
cld
sub
sar
mov
or
add
rcrb
mov
xor
push
sub
and
shrb
inc
jae
sub
jecxz
pop
es
sub
es
mov
dec
bnd
lahf
or
jmp
mov
outsl
call
rcrl
sub
add
sahf
ja
gs
mov
call
adc
pop
adc
dec
icebp
or
push
fwait
dec
iret
test
push
rol
insl
mov
mov
push
arpl
or
xor
adc
icebp
mov
shr
add
or
adc
or
fistpll
adc
mov
sbb
je
je
cmpsb
cs
mov
rcrb
enter
jl,pn
jno
xor
jo
mov
mov
jle
cmpsb
rolb
mov
xor
pop
mov
es
jne
pushf
sbb
testl
dec
inc
lock
pop
inc
or
xchg
enter
adc
adc
push
fwait
inc
jg
jmp
dec
ss
js
imulb
mov
stc
jne
sub
outsb
sar
insb
mov
je
jp
cmp
ja
call
adc
jae
ror
dec
push
jmp
pop
or
repz
hlt
jae
xorb
xchg
and
push
jmp
add
and
icebp
add
repnz
adcb
add
mov
push
push
sbbb
sub
stos
in
adc
cs
and
sbb
pop
dec
ss
add
movsb
insl
push
cmpb
cmp
gs
and
scas
xchg
ljmp
leave
add
cmp
pop
sbbb
xor
sbb
sbb
loope
dec
mov
lret
daa
push
pmulhw
jle
movsl
push
shll
les
bound
push
pop
or
lods
test
sbb
add
clc
rol
int3
sub
pusha
dec
inc
insl
or
dec
cmp
jbe
dec
push
xor
fbstp
push
or
imul
pop
push
adc
push
clc
das
adc
jle
ret
subl
daa
rcrb
adc
mov
mov
cmp
dec
ja
ja
bound
outsb
fldt
add
js
dec
adc
ss
or
outsb
xchg
fisttpl
mov
mov
arpl
lahf
sahf
mov
fstl
fisubrs
pop
adc
and
inc
in
adc
inc
cmpb
js
lcall
or
pop
xor
pop
das
adc
mov
or
cmpsl
jne
in
neg
lret
sub
cmp
or
dec
sub
mov
cli
xchg
popa
lret
sbb
or
inc
cmp
or
cmpb
ss
adc
push
xor
push
dec
scas
orl
pop
inc
ja
xchg
mov
outsb
loopne
xor
push
and
and
in
outsl
adc
inc
cmpsb
xor
cmpsb
es
sub
fs
pusha
daa
fs
cmpsb
fs
sub
jo
jae,pn
nop
xchg
ja
or
push
cltd
xchg
out
jmp
cmp
xor
cltd
lcall
push
cmpsb
movsb
jl
and
mov
xor
or
xor
mov
mov
int3
aad
scas
mov
push
rorb
sbb
xchg
or
or
jae
mov
in
pusha
adc
pop
mov
std
jbe
or
xchg
out
jnp
mov
or
add
fxch
inc
imul
sbb
mov
test
ror
push
mov
mov
mov
hlt
adc
loope
jo
insb
push
insl
popa
xor
aam
shlb
sbb
mov
test
sbb
pop
xchg
or
imull
sub
sub
add
push
mov
stos
in
sbb
mov
pop
mov
ja
xchg
imul
out
dec
repz
in
loop
dec
rorb
fimuls
enter
push
xor
loopne
in
aam
add
mov
repnz
mov
jo
pop
mov
aam
outsl
adc
sub
mov
ret
xor
adcb
or
xchg
pop
cmp
addr16
out
mov
roll
and
pop
add
sbb
add
adc
ret
push
mov
pop
insb
fcoms
out
xor
pop
sub
add
jne
pop
lock
jl
lahf
and
rolb
fiadds
xchg
sbb
inc
movb
add
push
lds
dec
and
arpl
or
adc
lock
pavgw
jno
xor
cmp
js
push
push
mov
les
sub
or
mov
icebp
stc
adc
fcoml
or
and
mov
xor
icebp
adc
add
dec
adc
dec
mov
mov
js
lock
enter
jbe
js
jmp
cmp
fldl
jne
sbb
sahf
jge
add
lods
jmp
add
mov
neg
fucomp
xor
dec
xor
jb
cmp
adc
add
sub
mov
icebp
adc
lret
dec
lea
nop
test
es
dec
pop
inc
in
add
jne
std
mov
and
je
loop
pop
adc
jne
xor
dec
stos
inc
add
mov
or
and
pop
mov
je
in
sub
leave
stos
icebp
inc
sub
lds
inc
push
add
insb
cmp
es
jo
or
dec
repnz
js
cmpsl
xchg
add
notb
popa
or
fistpl
loope
ficompl
fisttpl
lds
jo
fmull
inc
sbbl
pop
ror
push
in
adc
xchg
cld
xor
stos
mov
and
in
adc
call
loope
insl
or
fs
xchg
faddl
addr16
mov
or
push
mov
cmp
aam
icebp
je
mov
jle
rcrb
mov
xor
cwtl
jmp
popa
inc
inc
inc
jno
gs
jmp
ret
mov
jge
dec
inc
rcrb
jns
outsl
adc
push
test
addl
imul
je
cmc
adc
fsubs
adc
cmpsl
aas
jne
cli
inc
cmp
jmp
mov
mov
sbb
jnp
rolb
mov
push
in
dec
cmp
jno
or
mov
lret
or
jg
movsl
adc
sbb
clc
jl
mov
dec
or
mov
pusha
ficoms
test
jbe
jmp
xchg
adc
aas
stos
jle
mov
cmpsb
test
mov
jbe
cld
add
cmp
cmp
cmp
cmp
ljmp
sbb
test
ja
mov
inc
xchg
push
mov
lods
pop
push
notl
push
pop
adc
push
sub
mov
or
ret
fwait
pop
push
ss
test
inc
pop
dec
mov
mov
mov
fmuls
in
mov
pop
pop
xchg
faddl
lea
or
lea
pop
push
xchg
jmp
cwtl
cmp
push
mov
dec
outsb
adc
mov
inc
sbb
push
insl
mov
cld
popa
out
je
push
inc
mov
dec
ljmp
aas
and
or
adcb
popf
and
push
jp
mov
iret
or
or
mov
popa
mov
hlt
ljmp
ljmp
cld
es
aad
sub
ror
mov
ljmp
dec
dec
jmp
jp
bound
pusha
lods
or
xor
rcrl
mov
loope
cmp
or
lock
inc
push
mov
daa
nop
loopne
call
xor
or
xor
js
ror
daa
loopne
sub
and
and
xchg
inc
xor
pop
push
push
xor
popa
mov
xchg
fcomps
dec
and
add
rol
mov
lods
rolb
ret
mov
sbb
loope
add
lods
pop
dec
jae
jb
stc
into
test
incb
mov
out
sub
ja
cmpl
int3
and
and
mov
movsb
jmp
fadds
out
or
pop
cmpsb
sub
add
mov
lahf
loope
sub
negl
mov
or
pusha
xchg
xor
rolb
rorb
lock
xor
mulps
jno
fistpl
addr16
inc
add
je
icebp
mov
push
xchg
sub
cwtl
cmp
xchg
js
mov
xchg
sbb
lea
jbe
fimull
fnsave
adc
adc
outsb
mov
scas
pop
outsl
das
dec
loopne
loopne
sbb
outsl
push
stc
push
popw
inc
push
mov
loope
and
inc
cmpsb
cltd
scas
adcl
es
or
add
nop
cmp
jmp
push
arpl
xchg
and
sub
sbb
xchg
addb
add
push
add
inc
fistps
push
xchg
sub
sub
or
loope
jbe
dec
mov
xchg
aam
enter
or
add
lcall
pop
jns
mov
nop
mov
add
pop
or
push
js
fdivrl
addb
push
out
dec
inc
mov
mov
js
xchg
add
push
adc
es
sbb
sub
adc
adc
xchg
mov
cmp
enter
mov
push
inc
mov
popa
adc
xor
cmp
jge
int3
push
and
adc
and
dec
lret
add
test
fisttpll
pop
sbb
xor
fmul
cmp
or
jo
sbb
xchg
enter
or
rclb
push
push
adc
in
insb
and
mov
cmp
mov
dec
in
pop
dec
mov
add
add
add
sub
adc
dec
jecxz
outsl
cmp
cmp
mov
mov
test
push
adc
mov
push
mov
adc
mov
mov
ss
pop
xlat
movsl
or
test
inc
iret
add
scas
dec
dec
sub
adc
sub
and
jle
pop
cltd
adc
xor
insl
sbb
push
clc
cli
add
pop
xor
xchg
xchg
stc
ret
bound
cmp
add
adc
in
movsb
test
jp
imul
clc
ret
mov
xor
pop
pusha
lea
cmp
sub
mov
jns
xchg
ret
pop
or
ret
push
call
sbb
pop
fdivrl
sbb
xchg
in
push
cmc
sub
mov
cmpb
ljmp
pop
lret
je
or
push
mov
inc
dec
pop
cmp
and
mov
lods
pop
hlt
sbb
cltd
imul
ret
or
ljmp
shr
or
rolb
jo
enter
jnp
push
lods
out
inc
or
imul
pop
or
pusha
mov
out
stc
shrb
pop
dec
mov
dec
je
adc
imul
and
mov
mov
jb
inc
or
push
dec
or
dec
mov
or
push
or
cld
mov
mov
mov
dec
jp
scas
ret
rcrl
pop
add
orb
fidivrl
movsl
lods
enter
or
inc
add
popf
mov
mov
movsb
rclb
dec
test
std
mov
and
or
popl
add
jmp
sarb
icebp
fidivl
nop
jo
cltd
iret
lea
and
cmp
jle
dec
pop
dec
mov
dec
jge
aam
into
decb
fld
or
jno
lods
test
push
dec
rcrl
js
dec
mov
jl
mov
cmp
push
ljmp
movsb
outsl
push
pop
ret
cmpsl
xchg
mov
test
pop
out
cltd
or
test
jl
or
popf
test
outsl
cmp
push
idivb
xor
mov
and
mov
xchg
outsb
xorb
mov
jle
push
mov
add
out
or
into
cld
fwait
lods
mov
sbb
and
test
xchg
add
loop
lds
and
jbe
or
add
das
mov
adc
push
dec
andl
cmp
ror
popf
jnp
jns
mov
mov
push
movsb
addl
pop
jbe
inc
or
and
push
jge
je
orl
sbb
cmp
sbb
cmpsl
jne
cwtl
cmp
inc
or
adc
loop
xlat
push
and
mov
repz
adc
push
push
fwait
insb
addl
rorl
cmp
cmp
sbb
dec
or
or
std
and
adc
adcl
sub
in
and
lock
xlat
movsb
stc
fisttps
sbb
sbb
push
popa
mov
lret
stos
cmp
push
cmp
loop
enter
cmp
lods
xlat
in
andb
stos
es
add
mov
ret
movsb
movsb
add
mov
stos
mov
or
mov
daa
add
and
jnp
mov
mov
push
neg
mov
cmp
sub
push
pop
cmp
loop
mov
lret
cmp
jge
mulb
adc
shrb
mov
ret
xor
or
pop
mov
pop
pop
inc
xor
bound
sbb
lock
and
sbb
sbb
jno
adc
lds
inc
add
test
rol
cmp
xchg
pop
cmpb
cltd
or
pop
push
mov
scas
rol
xchg
sub
pop
pushf
jnp
adc
add
ljmp
jmp
mov
mov
mov
push
inc
sub
and
inc
test
sub
lret
add
or
jne
adc
add
and
add
mov
push
fs
dec
add
jnp
imul
cld
jl
lahf
xchg
loopne
test
sbb
xchg
popa
and
paddw
dec
or
add
addr16
fldl
setnp
enter
pop
fidivrl
jmp
outsb
lock
dec
es
loopne
inc
sub
push
push
adc
xchg
cmpsb
loop
push
mov
or
test
lds
jecxz
inc
in
mov
cmp
sbb
das
and
js
mov
xchg
mov
push
lods
inc
or
inc
cmp
cmp
lock
pusha
std
push
dec
cld
and
stc
sub
adc
and
out
sub
addl
jmp
hlt
jle
mov
cmp
jg
outsb
mov
add
adc
lods
cmp
or
outsb
mov
inc
sub
jge
push
cmp
fidivrs
xchg
push
or
mov
jl
jp
outsb
and
pop
bound
mov
jge
mov
xor
inc
outsl
push
lock
jb
jmp
or
push
lcall
cmp
mov
shlb
jp
sbb
add
xor
fs
inc
and
out
jmp
inc
jo
add
incb
je
jmp
dec
and
jne
sbb
pusha
xor
lock
push
and
add
sub
mov
ds
or
les
push
add
repz
jne
lods
lret
mov
sbb
jmp
pop
cmpsb
gs
mov
xchg
movsb
lahf
ret
sub
add
arpl
or
lret
fnsave
call
arpl
dec
sbb
out
pop
push
and
mov
pop
hlt
add
xchg
pop
push
out
inc
push
pop
cmc
inc
rcrb
movsb
aam
adc
push
mov
jp
leave
sub
mov
cmp
sub
push
adc
in
mov
lret
cmc
jl
loop
in
lods
rcl
lods
sub
movsl
sub
mov
sbb
decl
pop
push
int3
adc
pop
ror
push
lcall
lcall
inc
testb
push
lea
push
push
in
mov
fsubrs
dec
jecxz
pusha
and
jl
rolb
les
aam
andl
sub
rorb
pushf
je
or
push
repnz
mov
lea
adc
loop
mov
add
loopne
xor
bound
popf
or
push
das
adc
repnz
rcr
add
xchg
je
das
lods
sbb
subb
xor
nop
jno
mov
xchg
sbb
popa
pusha
sbbl
lcall
pusha
xchg
icebp
and
jnp
and
inc
mov
daa
orb
pop
adc
mov
outsl
mov
subb
sbb
adc
pop
jbe
enter
inc
and
out
test
out
and
jo
jo
and
and
push
adc
lods
adcl
dec
mov
cmp
das
insb
mov
inc
dec
loopne
and
inc
cmp
je
dec
sbb
xchg
xor
and
mov
mov
jecxz
jl
rclb
pop
pop
add
mov
fcmovnb
movsb
rcl
pop
aas
mov
test
mov
dec
pusha
pop
ja
nop
loopne
dec
add
stc
es
adc
or
mov
push
mov
adc
lods
push
xchg
and
add
ret
les
je
cmp
push
push
jne
int3
std
ret
dec
push
xor
xor
jns
out
je
cltd
test
fdivl
pop
dec
pop
cmp
mov
jno
shrb
faddp
mov
ret
ljmp
and
inc
push
stos
push
add
inc
cmp
in
jl
inc
js
loope
fisttps
xor
cmp
inc
add
cmp
inc
mov
pop
push
xor
push
push
adc
push
pop
cmp
lret
movsl
xor
push
xor
in
fdivs
popf
ss
pop
lcall
jo
mov
call
and
jb
into
test
sbb
jp
testl
cmp
insl
scas
dec
xchg
rorl
loop
xchg
cmpsb
into
divb
rolb
adcl
xor
shr
xchg
sbb
test
ret
cmp
jb
not
dec
pushl
inc
cmp
pop
jl
ret
shr
cmp
jbe
dec
or
add
aaa
jmp
add
pop
shr
fisttpll
sbb
and
dec
loop
dec
loopne
mov
dec
loopne
jl
and
fsts
mov
mov
lahf
push
xchg
ret
jmp
xchg
fld
adc
jo
aam
add
or
fstl
loopne
les
leave
movups
jno
mov
lock
dec
mov
add
test
shll
gs
jo
and
loop
iret
and
ret
cmpsb
imul
hlt
jge
fwait
pop
fs
mov
sar
add
fisubrs
xchg
xor
lret
add
dec
push
add
pop
aaa
enter
ljmp
mov
outsl
jecxz
jp
fstp
push
pop
movsl
test
sub
xchg
mov
pop
adc
les
cltd
pop
and
aaa
sub
pop
mov
lea
adc
popa
dec
rcrl
loope
pop
in
aaa
adc
push
jb
bound
rclb
adc
sbb
xor
add
jo
sub
inc
inc
ds
scas
iret
or
adc
push
pop
push
cltd
jp
and
stos
je
loope
xchg
adc
sbb
addr16
mov
and
test
sbb
fwait
loope
loope
and
in
bts
push
mov
mov
stos
mov
adc
add
and
sti
or
lret
or
push
scas
inc
jecxz
call
sbb
je
jge,pn
xor
popf
mov
ret
ret
int3
mov
js
movsb
shl
fistps
push
sbb
mov
sti
add
bound
cmp
or
add
mov
xchg
push
lods
mov
mull
pop
adc
xchg
dec
push
xchg
dec
loopne
mov
test
in
push
add
frstor
add
xor
or
push
adc
insl
add
and
sub
jle,pt
or
adc
out
inc
lods
push
or
jne
jle
xchg
shrl
inc
lret
jmp
sub
jo
ss
push
push
xlat
aam
in
push
or
adc
shl
xchg
lock
push
femms
lcall
pop
sbb
xor
jp
add
adc
adc
lahf
mov
outsl
fst
faddp
push
mov
push
jnp
fwait
jb
adc
or
inc
jne
cmpb
lods
arpl
push
pop
out
aam
mov
fcoms
xchg
adc
pop
lret
pusha
mov
inc
rclb
xchg
imul
mov
mov
and
jle
xchg
in
mov
push
nop
les
push
fcoms
dec
je
enter
mov
aas
ret
jge
dec
repz
mov
lods
mov
xor
add
push
inc
popa
mov
fildl
notb
cmp
xor
push
or
test
shl
shll
mov
pop
xor
and
movsb
adc
lret
add
bound
mov
cs
sbb
hlt
push
sub
sub
and
hlt
or
push
pop
jle
mov
jnp
stos
or
pusha
add
insb
in
cmpb
adc
mov
xchg
and
mov
pop
mov
add
mov
jg
push
pusha
cmp
sub
je
push
rorl
aaa
and
mov
aam
push
orl
gs
hlt
int3
ret
pop
leave
fwait
cs
inc
sub
jp
and
repz
fs
pop
jle
inc
push
add
adc
mov
lret
cli
into
idivb
and
push
sbb
lea
or
inc
dec
mov
or
jbe
shr
mov
dec
push
add
add
sbb
xor
call
test
dec
sbb
jne
inc
or
xchg
es
mov
ret
lret
push
add
add
roll
mov
test
push
mov
insb
and
xchg
xor
sbb
push
push
xchg
add
cmp
cmpsl
imul
fs
sub
dec
inc
fdivrs
jmp
adc
insb
dec
nop
sarl
or
mov
mov
mov
mov
fcoms
xor
les
xor
dec
lock
xor
js
add
add
cmp
arpl
test
shll
add
ret
push
dec
lock
push
jns
jp
loope
into
push
test
fisttpl
das
dec
fisttpl
sahf
push
add
mov
jbe
adcb
gs
sbb
jb
adc
test
aam
xor
mov
pop
lods
jne
cmpsb
cwtl
orl
inc
fimull
push
push
mov
xchg
jl
dec
es
jl
es
popf
pop
add
in
inc
js
js
fisubl
adc
mov
mov
inc
add
cwtl
adc
add
aam
sbb
movsl
movsl
call
mov
xor
shll
inc
cmp
lcall
inc
and
push
ss
add
sbb
insb
je
inc
cli
add
sbb
mov
test
and
push
mov
rep
or
sbb
mov
pop
lock
xlat
sbbl
or
nop
out
xchg
testb
xor
jno
pop
push
pusha
shlb
sbb
mov
jmp
xor
sub
shrl
sbbb
push
push
inc
sti
adc
mov
pop
and
add
add
outsb
cmp
pop
xchg
sbb
les
cmp
repz
test
mov
clc
jmp
xchg
les
push
sbbb
shlb
js
adc
mov
push
inc
cmp
cmp
hlt
or
repz
cwtl
push
ljmp
fstp
xor
in
cmp
popa
lock
lds
ret
inc
adc
dec
jno
hlt
pop
test
sub
rclb
repz
imul
sahf
fs
or
lock
imul
mov
inc
pop
cmp
xor
das
sub
shrl
mov
sub
sbb
and
inc
imul
and
test
stc
es
mov
rcrb
inc
mov
movsl
lret
in
shll
bound
mov
push
push
inc
dec
or
loope
mov
and
pop
push
mov
adc
icebp
mov
aaa
xchg
mov
daa
insl
and
dec
ljmp
pop
mov
ss
mov
mov
jns
mov
imul
inc
aaa
adc
push
rcll
cmp
inc
ret
int3
fnsave
dec
jb
es
push
iret
adc
vpsubsb
sarl
pop
in
or
or
fistl
push
jmp
pop
andl
sbb
mov
sbb
sbbl
push
shlb
pop
mov
cmpb
dec
popa
adc
jns
push
and
in
repz
mov
cmp
adcl
add
adc
push
xor
leave
jne
xor
pop
test
mov
xchg
cmpsl
mov
jge
xchg
inc
and
loope
pop
rolb
pop
nop
cwtl
inc
rdmsr
cmp
gs
push
subb
fdivrs
cmove
push
in
mov
add
xchg
push
aad
inc
mov
stc
inc
popf
test
sbb
repz
xchg
or
jno
test
int3
pop
pop
or
inc
sbb
into
jne
cmp
jp
mov
jmp
xadd
test
rcll
enter
loope
addr16
lock
push
call
nop
mov
ja
sarb
rcr
roll
sti
inc
hlt
fstl
mov
loopne
std
mov
fldl
pop
fsubr
pop
faddp
andl
sbb
and
or
outsb
add
mov
mov
sub
mov
pop
mov
in
dec
inc
adc
adc
scas
add
or
ret
or
push
or
xchg
or
mov
or
adc
clc
cwtl
cmpsb
pop
sbb
inc
add
loope
fcmovnb
test
iret
sub
xor
xor
push
or
ds
cli
mov
push
inc
test
dec
xorl
psrld
push
inc
std
call
mov
fidivrl
insl
fsubrl
add
dec
add
nop
std
push
jle
lock
push
jo
pop
sub
xlat
add
mov
jne
pop
in
ja
jecxz
sub
stos
adc
add
bswap
enter
mov
cmp
jge
loope
mov
sbb
ret
jg
mov
pop
push
adc
push
dec
or
jmp
mov
cltd
add
push
lret
popf
imul
add
cmp
or
fsubrs
push
add
pop
add
cmp
xchg
adc
xchg
rolb
fsubl
aaa
icebp
inc
dec
test
shrl
into
inc
add
jb
add
incb
dec
jns
mov
mov
add
xchg
int
xor
jp
dec
dec
mov
dec
fisubs
push
pop
mov
mov
pop
fisubl
sti
mov
cmp
pop
sub
push
inc
rolb
adc
jmp
nop
pop
add
test
push
xchg
out
pop
ret
inc
xchg
daa
lock
inc
stos
inc
mov
decl
inc
adc
xor
ret
mov
xor
and
mov
xchg
xor
jo
gs
xor
inc
jp
loope
popf
mov
bound
pushl
pop
sub
xchg
mov
xchg
in
mov
sbb
cmp
sbb
je
daa
lock
les
push
or
or
adc
add
pop
fs
das
cltd
push
jno
rolb
sbb
call
test
push
xor
xor
or
pop
clc
xlat
dec
or
ja
jp
movb
and
xchg
push
mov
push
cmp
add
add
and
lcall
add
and
inc
je
adc
add
int3
daa
jne
mov
loope
adc
add
adc
add
mov
pusha
add
xor
ret
sub
mov
inc
mov
or
or
rorl
mov
and
insl
adc
arpl
ja
xor
arpl
and
jno
and
popa
clc
xor
mov
push
sbb
sbb
jo
icebp
scas
push
imul
sbb
adc
sub
inc
lret
clc
dec
push
push
sbb
pop
mov
add
push
sub
loop
and
lock
mov
rcl
bound
repz
gs
data16
hlt
daa
inc
jns
push
movsl
lock
cmp
adc
in
push
sub
xchg
push
inc
pop
leave
scas
lea
arpl
mov
inc
daa
dec
mov
stos
enter
xchg
repz
in
mov
push
push
add
sbb
or
les
lods
gs
jecxz
shll
mov
flds
add
nop
test
xorl
dec
jl
mov
leave
and
or
je
and
mov
mov
inc
cmpsl
es
fsubs
xor
jmp
movsl
jmp
mov
add
sbb
add
add
add
sbb
ret
and
inc
pop
xchg
xor
ret
xchg
cltd
push
add
xchg
lods
imul
ss
pushf
inc
iret
in
dec
int3
adc
sbb
pop
jmp
fmuls
push
adc
sbb
adc
roll
dec
in
pop
cmp
test
out
xor
sbb
cmp
pop
dec
stos
jno
xchg
jl
jp
mov
inc
aaa
test
xchg
jmp
sub
push
cwtl
push
imul
mov
mov
pop
xlat
movl
loopne
mov
and
test
push
dec
mov
inc
call
xor
mov
jno
sbb
jb
jmp
subl
xchg
sarl
add
mov
fbstp
xor
push
test
loopne
scas
cmp
or
cmp
sub
clc
loope
mov
sbb
lods
cmp
add
cmpsb
and
add
ret
xchg
dec
push
add
sahf
dec
jo
or
popa
add
je
mov
pop
push
in
adc
mov
fdivl
lea
pop
aam
cmp
inc
ds
lret
fmuls
loopne
or
xor
pop
fcomps
jne
fdivrl
cmp
xor
dec
pop
sbb
xchg
cmp
ret
dec
xchg
adc
enter
xchg
push
push
ds
addr16
aam
rclb
mov
or
push
gs
or
stos
xchg
push
movsl
scas
jg
jns
loopne
xor
sbb
aaa
push
in
jo
add
push
cmp
addl
packssdw
clc
ret
mov
or
lock
test
inc
cli
jmp
mov
dec
push
arpl
or
outsb
and
push
shll
jno
or
outsl
jnp
push
mov
inc
lcall
sbb
filds
lock
sbb
shlb
shlb
inc
call
pop
sbb
insb
lahf
loop
and
sbb
lret
dec
push
or
in
sub
push
sbb
push
mov
lret
xchg
inc
push
inc
lahf
or
or
test
mov
mov
or
test
or
xor
xor
in
arpl
cs
fmuls
xchg
sbb
push
sub
or
push
fcompl
push
mov
jne
lcall
rclb
add
adc
pop
xor
xor
dec
test
repnz
or
xor
es
dec
mov
sar
and
in
or
jb
cmp
inc
inc
test
ss
and
dec
cmp
mov
loopne
clc
jl
adc
or
dec
sbb
and
and
add
rolb
aam
leave
loopne
xor
sbb
fwait
sbb
repnz
les
in
push
les
xchg
cmp
xchg
add
or
and
add
sbb
lahf
jo
sbb
jmp
xor
dec
aaa
or
inc
or
or
mov
leave
inc
pop
fstpt
shlb
xor
stc
pop
push
sahf
pushf
cmp
push
sub
stc
cmc
bound
mov
add
xchg
push
ficoms
sub
mov
inc
add
or
jp
adcl
aas
orl
roll
and
test
sbb
scas
add
clc
cmp
jge
inc
sti
jge
mov
pop
shll
int3
pop
rorb
call
aaa
pop
or
push
xor
clc
fmulp
inc
mov
out
jns
test
pop
xor
inc
cwtl
popa
sub
aad
fmull
cmp
outsl
jl
loopne
cmpsb
xchg
fwait
cmc
inc
dec
add
add
loopne
ret
das
fdivs
mov
xchg
mov
sbb
mov
fs
mov
fldcw
inc
aad
sbb
adc
fsubrl
mov
jmp
call
xchg
ret
aad
sbb
test
lret
in
mov
add
xchg
roll
adc
inc
and
mov
jmp
push
rclb
pop
jmp
das
rolb
cmpsl
cmp
cs
or
jo
jl
outsb
pop
cs
mov
inc
sub
or
add
xor
or
or
dec
push
mov
and
lods
cs
fdivs
sub
hlt
pop
jae
cmp
push
inc
xor
sub
xor
add
aas
add
rclb
aaa
push
cmp
push
xor
pop
push
and
imul
cltd
sub
push
adc
pop
lret
mov
xchg
cmp
and
sbb
test
fistpll
pusha
movsb
adc
sub
sbb
sub
inc
inc
andl
mov
and
jl
hlt
mov
xor
adcl
mov
cmpsl
adcl
cmp
sbb
xchg
jge
imul
cmp
loop
data16
out
add
insb
lods
or
das
push
dec
xor
lock
push
add
sub
add
ja
mov
sub
push
xor
add
mov
xor
mov
jnp
inc
in
lret
push
inc
inc
inc
cltd
call
pop
inc
xlat
ss
aas
cld
jl
jecxz
pop
sbb
jbe
inc
pop
sbb
inc
andl
or
xchg
mov
pop
lea
pop
add
mov
mov
lcall
icebp
jns
or
out
inc
sub
arpl
ret
fcomps
inc
push
push
sub
loope
out
nop
xchg
jmp
cmp
push
and
test
add
inc
xor
jno
aas
sbbb
daa
loop
adc
cmp
cmp
inc
push
imul
sub
aam
push
mov
push
push
inc
xor
in
or
std
sub
push
cmp
cmp
in
in
jl
xor
push
xor
fdivs
and
repz
adc
add
xchg
pop
or
or
ret
jb
or
ret
and
cmp
and
mov
inc
cmp
dec
iret
mov
add
jge
push
mov
popa
leave
push
push
pop
popf
pushf
aad
or
dec
sarl
and
jo
jecxz
aam
js
cmpsl
push
inc
ss
add
movsb
nop
outsl
lcall
and
inc
sar
adc
jbe
incl
push
inc
pop
jo
add
adc
or
aam
adc
shlb
mov
sbb
loop
sbb
xchg
push
push
inc
push
inc
jp
pop
ja
jl
and
rcrb
sbb
enter
mov
and
xchg
mov
xor
aaa
and
test
test
pop
mov
dec
add
jb
sbb
ret
adc
pop
mov
cmc
bound
dec
imul
adc
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
ficoms
jne
sub
cmp
pop
sti
outsb
addb
cmpb
sbb
into
jl
shl
pop
inc
sti
insb
push
pop
enterw
xor
sahf
aad
iret
sub
jg
mov
push
pop
je
push
mov
cmp
adc
add
and
inc
inc
cmp
or
popa
add
ja
jns
push
aam
mov
inc
and
addr16
or
jns
pop
sbb
cs
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
jl
mov
mov
or
gs
xor
leave
in
sub
rorb
mov
loope
sub
pushf
pop
pop
sub
sbb
xchg
mov
loope
movl
xor
push
push
sbb
outsl
pop
pop
sbb
popa
jb
into
sar
mov
push
in
lcall
xor
insl
sarl
das
js
add
ss
or
add
iret
push
test
popa
cld
rcrb
arpl
lock
push
push
fiaddl
fs
stos
or
jg
push
push
clc
mov
and
inc
test
jbe
push
aaa
push
mov
js
mov
add
outsl
hlt
add
addl
inc
adc
adc
or
jnp
mov
shlb
xor
das
jle,pn
and
shlb
and
or
lcall
xchg
jmp
adc
inc
sbb
lods
cmpsl
stos
dec
sub
jo
mov
cmpl
mov
mov
push
std
int3
pop
dec
sbb
mov
pushf
cmp
cmp
cs
cmp
dec
inc
or
mov
xor
in
or
cmp
push
pusha
mov
inc
pop
inc
pop
adc
fcomps
or
inc
xor
push
cmp
insl
aaa
mov
sbb
test
mov
aas
jne
inc
imul
mov
add
mov
fiaddl
mov
sub
mov
test
out
mov
movsl
cmp
sub
adc
call
sbb
push
add
push
pop
and
movsb
dec
cs
inc
mov
adcb
mov
push
pop
fdiv
je
or
adc
xchg
shl
or
push
sbb
jmp
adc
add
leave
jne
push
jmp
stos
xchg
movsb
aad
popa
xchg
lods
dec
push
movsl
xchg
adc
popa
hlt
js
sbb
test
add
xor
add
cmpl
sbb
enter
movsb
inc
and
xchg
popa
cmp
adc
dec
dec
cmpl
add
sbb
test
repnz
jl
xor
mov
outsl
repz
icebp
and
xrelease
loope
pop
addb
mov
cltd
movl
xorb
shrl
dec
cmp
shlb
inc
sahf
dec
test
xchg
mov
or
mov
je
jns
ror
fwait
mov
jne
add
jne
add
jb
push
faddl
and
xor
lea
adc
xor
inc
ret
out
shr
adc
scas
and
or
ret
dec
inc
out
fstp
inc
mov
xchg
mov
cwtl
add
stos
dec
xchg
or
fisubrs
or
mov
adc
jecxz
pop
pop
sub
and
or
icebp
pushl
or
test
ss
ss
fiadds
push
adc
inc
sbb
mov
addb
loope
loopne
and
rol
pop
dec
push
jmp
adc
mov
mov
sbb
fcom
inc
inc
or
add
movsl
ret
push
xchg
ljmp
push
aad
negb
inc
adc
dec
and
or
jo
movsb
push
push
cmp
add
mov
add
shlb
add
xchg
mov
std
jmp
add
icebp
push
fildll
adc
jg
pop
scas
dec
sub
loopne
push
push
fistpll
inc
sbb
loop
in
pop
das
inc
loope
shll
jo
or
push
insl
and
sub
mov
or
pushl
fistpl
test
ret
sub
ret
jno
jns
inc
neg
aam
mov
insb
out
or
adc
push
jne
idivl
push
jbe
xor
mov
insl
sub
lahf
outsb
and
stos
mov
xchg
aas
fldl2t
adc
je
mov
xchg
inc
mov
inc
jle
adc
in
call
idiv
dec
clc
mov
push
imul
adcl
xorl
or
jns
test
inc
lock
adc
rorb
jo
mov
xor
popf
shrb
pop
rcrb
lock
les
dec
pop
add
or
clc
xor
imul
cmp
in
push
inc
cltd
rcrb
popa
ret
cmpl
lahf
sub
test
sub
xlat
and
and
and
fnstsw
icebp
add
lahf
jns
mov
fisttpll
lahf
xchg
stos
mov
pop
dec
inc
js
cmp
jl
push
push
push
add
adc
addb
add
cmpl
mov
and
mov
es
hlt
and
xchg
or
outsl
sbb
adc
rcll
push
add
xlat
dec
in
xchg
mov
jnp
add
das
movsb
imul
jmp
cmp
jne
sub
sbb
jno
cmp
sbb
int
nop
push
or
add
ret
sub
fldcw
xor
fisttpll
xlat
adc
jecxz
xchg
inc
push
loope
jae
dec
add
loopne
adc
mov
sbb
cwtl
pop
pusha
adc
daa
or
orl
je
pop
movsb
jb
xlat
sub
pop
push
cltd
je
orb
pop
inc
insb
add
sbb
mov
add
test
sbb
popa
pop
mov
pop
test
dec
lret
jmp
pusha
xchg
jp
or
push
outsb
xchg
or
mov
icebp
paddsw
outsl
and
mov
and
int3
and
inc
adc
adc
mov
fldl
xor
push
add
push
pop
xor
lahf
ficompl
repnz
jnp
jb
ja
test
test
lea
dec
jecxz
lea
jmp
and
test
push
xchg
jb
iret
cmpsl
or
sbb
xchg
addr16
out
add
push
lods
cwtl
sub
xchg
mov
mov
out
push
adc
jne
fsubs
mov
test
mov
jb
lret
dec
or
pop
lods
rclb
push
push
lods
xor
or
js
aas
jo
cmp
xor
or
orb
jb
bound
jns
pushl
jo
adc
or
in
or
or
pop
and
andl
or
js
add
push
push
dec
push
cli
push
in
jo
xor
adc
sbb
cmp
mov
std
cwtl
sub
daa
in
jp
arpl
jb
inc
pop
add
adc
or
test
popl
push
pop
jmp
das
jg
add
jae
add
stos
std
adc
adc
mov
jne
add
inc
or
add
and
popf
sub
scas
push
adc
es
inc
push
inc
sbb
xor
and
jmp
push
adc
sbb
pop
mov
test
subb
cmp
pusha
pop
inc
mov
popa
add
jmp
jle
repnz
mov
in
insb
movsb
shll
add
push
inc
or
jns
fisttpl
test
test
dec
mov
inc
mov
and
xchg
stos
pop
mov
push
mov
hlt
in
iret
dec
sbb
push
cmp
adcb
add
int
jmp
push
add
inc
ss
and
mov
pusha
rorb
jb
lock
jo
sub
add
sbb
ss
addb
push
lea
mov
push
adc
cs
or
add
fs
rorl
xchg
or
mov
jle
bound
dec
inc
sub
mov
scas
fcom
or
and
xchg
testl
mov
ret
and
inc
dec
mov
fcoml
gs
outsb
sub
and
pop
mov
call
or
outsl
mov
imul
add
rclb
mov
ljmp
fcmovnb
pushw
out
xchg
out
out
mov
lds
pushfw
test
stos
mov
in
adc
rorl
scas
fxtract
mov
cmp
sbb
pushf
sub
gs
and
adc
add
mov
jb
or
or
imull
or
xchg
fstpt
jecxz
lock
adc
mov
imul
fdivl
jnp
daa
test
movsl
xor
sarl
pop
bound
pop
mov
ljmp
adc
and
push
xor
or
mov
or
adc
pop
push
shl
movups
mov
pop
sbb
jo
cltd
addb
pop
xchg
aas
xchg
popf
iret
cmp
pushf
lea
rcr
sub
mov
xorb
xor
es
std
and
pop
jl
popf
push
jp
push
fstpt
clc
lea
or
pop
cmp
sub
lods
push
pop
shll
xorl
add
shrb
movsl
mov
xchg
or
stos
cs
push
fsubs
subb
outsb
outsb
dec
adc
fdivrl
cmp
mov
fldcw
loop
int
lea
cmpsl
sub
mov
push
jb
mov
in
loopne
std
push
rcrb
and
pushf
or
jno
push
mov
in
mov
push
enter
sahf
repnz
push
and
shl
out
in
repnz
push
dec
mov
inc
lcall
in
movzwl
pushf
mov
adc
jmp
mov
mov
add
aad
ja
sahf
jno
movsb
rolb
icebp
add
outsb
sbbb
adc
mov
pop
push
mov
jp
in
cmp
ja
enter
xchg
iret
iret
and
popa
popa
mov
lods
push
xchg
jbe
lret
cmp
pop
adc
adc
pop
imull
mov
js
adc
adc
add
or
mov
scas
jp
mov
sbb
out
movb
fcompl
cmpb
orl
int3
inc
cmp
adc
mov
jecxz
xor
das
inc
jle
mov
and
add
addl
mov
into
sub
test
pop
jo
popa
popa
push
or
je
and
cld
movsb
popa
add
out
mov
das
mov
mov
shr
mov
mov
jb
adc
jmp
xorb
mov
adc
ss
adc
push
stos
mov
mov
fsts
shlb
dec
movsbl
mov
pop
test
shl
xchg
out
adc
and
je
outsb
shll
push
mov
popf
imul
mov
xor
pusha
mov
movsb
push
sbb
adc
das
sub
or
call
mov
sbb
mov
jge
add
mull
js
inc
add
ret
jle
loopne
fs
dec
adcl
outsl
or
xor
ret
push
xchg
pop
cmp
push
pop
cmp
jl
and
and
aas
sbb
fisttps
pop
push
inc
push
mov
mov
inc
iret
add
stos
or
inc
cmpsl
hlt
add
mov
cmpsl
cmc
xor
adc
add
das
mov
jmp
dec
or
mov
rcl
xchg
mov
xchg
int
add
adc
jmp
loop
lar
xchg
imulb
repz
add
xchg
xchg
xchg
add
int
xchg
or
jmp
or
jmp
or
jno
int
int
jmp
push
jmp
por
jmp
adc
int
int
pop
adc
push
adc
dec
adc
dec
adc
jmp
push
jmp
pop
jmp
sbb
xor
int
xor
jmp
sbb
es
and
jmp
push
jmp
pop
jmp
and
or
movsb
jmp
and
jecxz
imul
ret
loope
fstpl
cli
xor
out
rolb
dec
push
cmp
repz
decb
push
push
push
push
push
es
repz
dec
iret
repz
push
push
pop
pop
imul
js
xor
iret
xrelease
cmp
mov
mov
mov
add
and
lcall
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
sbb
js
aas
push
int
sub
and
fdivr
pop
push
das
fs
mov
dec
xchg
xor
inc
inc
sbb
adc
and
xchg
dec
jns
ds
add
js
cmp
jge
xlat
sarb
inc
pushf
les
repnz
inc
add
mov
fwait
mov
cmpsb
inc
lods
jo
out
imul
mov
pop
or
lea
popf
testb
fwait
xor
mov
fisttps
ret
sbb
mov
inc
cmpsb
and
xor
negl
xchg
or
lea
sub
add
pushf
daa
add
js
daa
enter
into
jo,pn
lea
sub
mov
xor
js
lods
cmp
or
rcrl
add
mov
cmp
je
faddl
and
xchg
sbb
add
add
mov
ss
or
fwait
nop
fstps
fsts
es
pop
push
test
pop
jae
sub
mov
mov
sbb
ljmp
jns
inc
and
inc
jge
lea
pop
push
add
push
fidivrl
dec
and
jnp
cmc
or
xchg
lea
adc
inc
push
in
sbb
clc
scas
pusha
xor
js
ret
movl
test
pop
lods
cmpsl
or
sahf
aas
pop
inc
mov
idivl
push
pop
or
add
add
xchg
adc
rorb
shr
add
xchg
add
push
push
mov
sub
mov
nop
pushl
push
or
add
lret
dec
stos
fsubl
add
scas
mov
stos
add
shrb
cmp
sbb
dec
xchg
or
lock
loopne
add
or
inc
adc
or
pop
xor
es
insl
fs
andb
sbb
orb
or
push
xorb
scas
mov
add
add
inc
cmp
and
shrd
xor
and
inc
inc
adc
out
jge
inc
pop
test
shlb
push
jnp
inc
fucom
nop
inc
pop
stos
xchg
ret
cwtl
inc
mov
test
add
std
add
add
scas
pop
lds
nop
mov
andb
lock
dec
adc
jo
dec
rclb
outsb
push
cmp
xor
faddp
add
add
mov
add
sbb
xchg
add
lock
std
lret
out
push
push
adc
mov
xchg
mov
arpl
sbb
inc
lock
fisubrl
and
cwtl
out
aas
sub
and
and
in
jns
nop
insb
ljmp
push
in
add
and
sub
icebp
popa
and
xchg
mov
pop
mov
push
inc
jnp
inc
pop
nop
inc
adcl
ss
sbb
lods
in
mov
cmp
jl,pn
cmp
inc
mov
sar
add
cmp
add
cmp
jbe
cli
es
lea
cmp
or
popa
insb
jg
and
or
js
mov
movsl
insb
or
sbb
mov
add
mov
inc
mov
or
adc
shrb
dec
cmp
jl
dec
movsb
std
jge
push
sahf
cmp
push
insl
js
je
jae
ds
dec
repz
sub
and
mov
dec
daa
pushf
cwtl
jmp
and
sub
mov
decb
scas
dec
icebp
or
jecxz
js
mov
jmp
mov
inc
mov
sbb
pop
push
inc
in
ss
sbb
dec
je
push
cmp
inc
mov
movl
mov
sub
jp
inc
and
lahf
mov
sbb
adc
jbe
stos
mov
fwait
aaa
adc
mov
rolb
dec
inc
in
sbb
or
add
addr16
cmpsb
add
ret
push
mov
or
sbb
sub
test
inc
js
jne
ja
add
or
stc
and
mov
sbb
cld
pop
sub
pop
clc
clc
adc
jp
sub
bound
and
jmp
bound
pop
or
lahf
push
jae
cmp
adc
jle
stos
cmp
jne
mov
cmp
add
push
js
andb
out
xchg
rorb
out
int3
push
xchg
xchg
xchg
pop
cltd
sub
bound
cmpsl
rolb
xchg
movl
jg
add
testl
add
mov
fiadds
sbb
roll
sub
mov
notb
cmp
ror
mov
leave
shr
cmp
push
jo
rcr
sbb
xor
divl
pop
sub
rorb
sbb
jmp
das
adc
nop
sub
pop
xchg
lock
hlt
outsb
jle
xor
push
add
es
mov
pushf
mov
xchg
out
cmp
cltd
clc
je
jmp
xor
mov
bound
mov
fs
fistl
jne
push
movsb
inc
fs
add
mov
shlb
sahf
int
js
js
sub
in
push
or
cmpsl
inc
push
mov
mov
cmp
jmp
sub
cmp
mov
sbbb
inc
push
push
aam
jg
fcmovnb
jb
enter
or
pop
add
sbb
dec
or
clc
fsts
dec
cmp
jecxz
dec
subl
jo
je
ss
pushf
lret
add
inc
adc
mov
cmp
ret
or
cwtl
push
jmp
sbb
xor
dec
sarb
adc
mov
shrb
xor
test
ficoms
ret
xchg
mov
ljmp
fiadds
jnp
pop
inc
and
inc
daa
rcrb
push
nop
fmuls
pop
int
test
out
pop
sbb
cmpsb
icebp
adc
cmp
or
mov
es
pop
pop
push
lods
or
js
jb
pop
or
mov
xor
dec
add
lea
and
sub
loopne
loope
push
insl
push
lcall
and
and
pop
add
and
hlt
push
pop
test
pusha
popa
pop
icebp
mov
or
xor
or
lret
clc
or
jge
rcrl
cmp
or
push
inc
pop
inc
inc
aad
or
imul
xor
stc
push
or
inc
add
add
cmc
pop
or
xor
dec
cmpsl
jno
rclb
icebp
jno
mov
stc
sbb
cs
insl
mov
cmp
xor
and
or
sub
fs
cld
cmpl
shlb
add
or
xchg
push
push
sbb
mov
mov
pop
adc
rcrb
sbb
daa
sbb
ret
and
cmpsb
jmp
lods
je
inc
mov
rorl
dec
inc
inc
and
xor
imul
pop
in
je
dec
xorl
xor
mov
and
xorb
fdivs
inc
push
jp
into
or
mov
jle
or
sub
inc
xchg
sub
ljmp
shl
mov
fnstcw
jle
or
cmp
mov
fnsave
das
adc
test
mov
enter
sbb
rorl
ss
sbb
pop
out
pop
jnp
sub
js
sbb
rclb
int3
mov
pop
movsb
ror
jno
mov
adc
cmpb
xchg
add
inc
lret
dec
icebp
and
jmp
mov
pop
cmpl
and
pop
and
xchg
inc
popa
in
xchg
push
ds
sbb
xor
sbb
pusha
lods
and
xor
daa
push
sbb
xchg
or
cmpsb
xchg
pop
enter
xchg
add
sub
push
js
sbb
and
mov
insb
js
add
aas
dec
or
imul
sbb
pop
bound
popl
imul
mov
adc
ss
and
xchg
sub
push
shll
xchg
ss
imul
inc
push
adc
movsb
hlt
push
out
push
push
lods
add
sub
jbe
pop
and
and
jno
push
aas
jg
mov
xor
xchg
xchg
sub
imul
stc
and
addr16
dec
sbb
mov
inc
lods
mov
sub
push
out
lea
xor
or
nop
adc
ja
jl
insb
mov
or
or
sbbb
sbb
sbb
mov
push
and
and
andl
jle
sbb
cmp
push
push
dec
adc
cmp
int
outsl
pop
add
pop
fcmovne
leave
sbb
xor
sbb
pop
es
rcl
mov
and
mov
dec
sbb
movsl
push
mov
mov
xchg
mov
pop
insb
xchg
adc
mov
jecxz
js
mov
lea
push
mov
jb
movsl
jp
pop
aam
inc
pop
and
arpl
pushf
movsb
and
or
mov
fildl
daa
popa
dec
loope
dec
adc
sti
aas
sub
mov
sub
mov
xor
jbe
dec
sbb
int
cmp
jne
and
gs
sti
cmpb
mov
call
decb
or
mov
je
cmp
push
jne
pusha
xor
jo
push
xor
dec
and
aaa
inc
mov
rcll
and
nop
xor
outsl
inc
fimull
test
ds
cmpb
pop
or
orb
stos
jle
sub
pop
pop
add
or
adc
xchg
sbb
mull
jnp
cmp
inc
fstpl
inc
mov
bound
push
or
aad
push
dec
ficoms
into
dec
or
adc
or
xor
xor
mov
arpl
jo
xchg
push
pop
js
in
xor
inc
mov
iret
add
inc
and
fstps
add
ss
add
mov
int
or
movsb
or
je
or
stos
adc
push
push
cmp
jne
lock
pusha
cmp
mov
or
push
fimull
mov
les
add
push
xor
mov
pusha
mov
cs
lret
cmp
cmp
xchg
and
sub
push
cmp
jge
mov
ret
add
add
inc
inc
cwtl
xchg
cmp
mov
add
xor
sub
test
cmp
hlt
mov
test
mov
inc
add
repnz
cmpsb
or
lock
clc
clc
cld
adc
subl
cs
add
add
jl
push
add
add
or
dec
leave
xor
decl
add
dec
je
add
adc
cmp
dec
or
mov
shr
decl
mov
sbb
loopne
lret
ljmp
xor
lea
dec
addr16
orl
push
xchg
mov
mov
cli
or
cli
sub
or
mov
ret
adc
je
dec
je
push
add
fld
es
loop
adc
out
insb
test
repz
add
lret
sub
movsb
orb
push
add
jne
sbb
idivb
jne
adc
rolb
add
xor
add
xchg
xorl
fildl
sub
popa
out
add
inc
jmp
sbb
lock
cltd
idiv
inc
inc
imul
fiadds
jb
add
pop
jmp
outsb
sub
je
mov
aaa
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
int3
pop
jbe
inc
push
and
fiadds
daa
pop
out
and
add
jle
aad
xor
repnz
cld
insl
addr16
jae
lret
ficompl
inc
jmp
jp
pop
repnz
mov
dec
decb
inc
sub
cmp
je
cmp
pop
cmp
je
cmp
sub
jne
jne
mov
sub
enter
mov
adc
aad
fisttpl
jb
mov
nop
cmp
sbb
daa
sbb
cmp
jne
xor
cli
sub
test
rolb
js
ret
fmuls
cmp
arpl
adc
push
push
rclb
testb
xor
call
jmp
push
jl
or
jg
mov
jmp
fdivrl
and
push
jmp
inc
jl
sti
scas
mov
aaa
push
add
shl
dec
mov
sub
imul
mov
or
es
mov
les
outsl
adc
test
or
pushf
xor
out
push
es
or
clc
rol
pop
pop
fimull
sbb
pop
push
jecxz
js
xor
sub
inc
lods
push
pushl
cwtl
push
sbb
mov
push
mov
inc
movsb
jl
pusha
mov
jg
sub
xlat
cmc
ret
fs
imul
mov
mov
rcll
addb
stos
xor
daa
lcall
iret
orb
sub
les
xor
and
mov
loope
arpl
pop
das
xchg
rcr
xor
fsubs
inc
cmpb
call
mov
dec
loopne
mov
push
idivb
fsubr
icebp
les
rolb
out
jmp
xor
push
inc
inc
in
adc
push
adc
inc
pop
rclb
or
cmpsb
call
sahf
lea
rorb
or
adc
cmp
cmp
dec
adc
dec
pop
xor
jbe
mov
cmpsb
decl
cmp
je
cmp
je
add
andb
loop
jne
xor
mov
mov
adc
xor
inc
mov
pop
icebp
sub
jne
mov
clc
push
xchg
cld
adc
or
inc
pop
pushf
imul
adc
je
and
jne
ret
or
pop
mov
fistpl
jp
ret
adc
les
add
add
jmp
pop
sbb
bound
imul
dec
insl
adc
cmc
clc
andl
lods
or
dec
xor
ror
push
in
mov
xchg
gs
inc
inc
hlt
in
ds
push
lock
sub
jge
jne
ljmp
repnz
push
sbb
pop
push
add
repz
adc
and
sub
xor
cmp
sahf
adc
test
jg
test
mov
insb
xchg
clc
rcrb
mov
addr16
ljmp
stos
fildll
adc
js
addb
pop
shl
js
cmp
inc
push
pop
xchg
add
jl
add
je
sbb
shlb
xchg
jg
rorl
je
mov
movsl
dec
inc
inc
or
dec
cmp
jle
or
cmpsl
in
je
pusha
or
add
sbb
push
mov
inc
inc
ret
decl
jne
mov
movb
push
ficompl
mov
xor
orl
push
cmp
add
fs
mov
ss
adc
xor
cmp
fs
xchg
add
pop
je
icebp
push
pop
push
push
shrl
push
pop
cmp
les
ret
mov
stc
cmp
inc
inc
movsl
cltd
in
mov
sbb
mov
cmp
push
in
and
xor
addr16
or
pop
xor
repnz
call
mov
nop
lcall
mov
enter
mov
pop
and
movb
jbe
xchg
sub
xor
sbb
push
sub
loopne
jmp
cmp
push
cmpb
jne
popa
pop
bound
testl
bound
adc
cs
sbb
rolb
sbb
insb
pop
clc
sub
xor
sbbb
js
add
lods
lret
inc
or
je
inc
push
inc
or
mov
bound
test
sbbl
sbb
jae
enter
push
adc
jecxz
push
mov
filds
sub
sahf
lea
enter
lock
xchg
int3
pop
repnz
jo
sub
or
arpl
mov
mov
push
addb
rcll
lret
or
inc
ret
or
jnp
in
fldl
adc
lods
mov
mov
add
pop
jnp
dec
or
in
nop
movsl
mov
in
xchg
rorb
adc
and
push
cmove
jle
out
loope
into
loopne
xor
adc
and
push
inc
insb
je,pt
inc
rolb
xchg
bound
pop
xchg
xchg
loopne
xchg
dec
scas
add
lcall
loopne
adcl
cmpsb
xor
cmp
aam
sub
or
lcall
add
inc
add
cmc
pop
lock
scas
add
push
sbb
adc
pop
jo
mov
xlat
add
sti
fcmovnbe
push
pop
cmp
lret
push
jo
outsl
add
jnp
fnstcw
jle
push
push
pop
cmp
in
shlb
mov
push
push
cmp
shlb
icebp
xchg
xchg
cli
xchg
call
nop
call
inc
daa
pop
mov
out
loop
inc
push
sub
mov
addr16
ret
loop
and
inc
loope
and
add
pop
ja
push
inc
pop
outsb
cmc
imul
cmp
sbb
insl
test
mov
stos
imul
stos
lret
sahf
dec
push
movsl
loope
fsubrs
jp
push
jae
out
lret
dec
fdivl
jbe
lea
adc
xor
cmp
jb
ret
or
pop
and
pop
and
dec
ret
lcall
adc
xor
or
add
daa
mov
sub
hlt
lods
loopne
call
xchg
mov
dec
add
sub
push
mov
fdivs
pusha
mov
cwtl
pop
dec
jne
shl
test
je
cmp
or
mov
pop
stos
jne
cwtl
push
cmp
inc
daa
sbb
cmpb
rcll
sub
push
lahf
push
inc
push
rcll
push
jge
sbb
mov
pop
leavew
test
adc
les
xor
xor
cld
adc
add
and
lods
fists
jbe
or
xor
push
inc
outsb
es
mov
mov
sti
fnstenv
push
mov
push
or
fstp
and
mov
pop
add
sub
and
pop
ret
add
daa
sti
mov
cmpsb
je
cmp
stc
cmp
mov
out
cmp
je
adc
daa
jne
xor
in
mov
jmp
cmp
jne
sbb
jge
lea
pop
adc
jmp
mov
xchg
lock
inc
mov
hlt
in
push
xor
mov
daa
mov
pop
mov
jne
ljmp
sub
lods
xchg
sbb
sbb
pop
dec
pusha
mov
cmp
pop
push
ret
dec
aaa
pop
sbb
xorb
rclb
sub
gs
jb
dec
inc
popa
in
stos
push
push
mov
inc
and
cli
jne
adc
in
cmpsb
jmp
adcl
movsl
pop
ficoml
arpl
jno
sbb
movl
jo
dec
sub
or
insb
test
mov
or
test
push
into
mov
mov
mov
cmp
mov
js
mov
xor
dec
dec
je
js
sbb
das
or
lahf
cs
mov
sub
xchg
dec
loopne
add
add
sbb
push
sahf
je
loop
mov
stc
mov
sbb
push
sbb
in
out
cs
add
or
ret
lods
push
ja
xor
jno
roll
mulb
xorb
loope
adc
test
add
sub
sub
sbb
xlat
or
cmpsb
and
xor
cs
sub
xchg
movsb
andl
mov
addl
das
and
addb
add
mov
orb
sub
cmp
pop
lds
push
popf
add
out
addb
test
fsubr
and
sarb
inc
test
push
jmp
xchg
call
adc
adc
outsb
inc
daa
pop
ljmp
hlt
add
push
mov
pop
or
and
mov
sub
add
jno
outsb
push
sbb
and
rcrb
js
sbb
add
js
add
add
adc
push
test
enter
or
rorl
orb
int
sti
cli
aam
mov
mov
pop
hlt
cmp
fadds
insl
adc
xchg
in
shll
je
scas
mov
add
pusha
dec
or
mov
test
or
pusha
add
loop
mov
jl
inc
inc
push
sub
pop
call
pusha
mov
lret
pusha
lahf
mov
pop
cs
insb
cmp
adc
or
mov
dec
xor
sarl
inc
or
sub
in
xor
sbb
add
clc
mov
call
push
mov
inc
dec
dec
and
loopne
sub
and
mov
dec
imul
adc
cmp
cli
mov
sarb
or
or
test
inc
bound
and
pop
push
ret
sbb
outsl
fincstp
add
daa
cwtl
jecxz
int3
adc
cmpsl
pusha
cmp
mov
les
jne
movsb
push
or
xor
sbb
mov
mov
xchg
or
adc
dec
loop
shll
fs
adcb
jl
cmovbe
pusha
add
lea
inc
stos
push
pop
xchg
jns
or
ret
sbb
add
xlat
xchg
and
push
aam
insb
es
adc
cmpl
and
push
popa
jnp
add
mov
dec
mulb
icebp
xchg
fimull
fbstp
repz
or
cmp
enter
and
sub
sbb
int
adc
popf
or
dec
mov
push
xor
mov
pop
ss
cli
and
sub
adc
test
ficompl
or
push
lods
sbb
orl
repnz
inc
dec
int3
adc
sub
notl
ret
pop
or
call
push
and
insl
out
inc
mov
sbb
mov
scas
xor
cmp
je
push
shll
add
das
cmp
or
cmp
test
lahf
sub
aam
test
adc
enter
mov
cmp
cs
jle
jne
pop
push
adc
outsb
add
jmp
jl
aam
cmp
and
call
cltd
push
loop
pop
lcall
or
sbb
adc
fdivrs
fiadds
dec
mov
sbb
mov
sub
dec
daa
adc
in
dec
pop
std
mov
dec
and
or
inc
inc
adc
sbb
cs
mov
xor
add
push
add
movsl
push
mov
das
div
or
dec
movsl
inc
popa
dec
dec
int
in
mov
pcmpgtb
xor
rolb
fidivs
mov
js
in
inc
jne
mov
sub
fsubl
push
pop
mov
fdivs
decl
jecxz
ss
mov
fwait
jl
outsl
and
cmp
add
cmp
jmp
jne
repz
data16
std
mov
adc
pop
aad
mov
jl
aam
pop
mov
jae
cmp
pop
mov
orl
jae
pop
push
fsts
pop
and
adc
xor
add
dec
mov
pop
cmp
cmp
add
pop
mov
xor
ret
push
and
movsl
dec
xorb
inc
sub
je
jp
sub
test
aaa
mov
fistpl
push
dec
ss
add
add
lods
or
mov
shl
roll
jmp
or
cmp
jecxz
rcrb
or
dec
sbb
in
fisubs
inc
add
fists
into
ja
or
and
ficomps
pusha
inc
mov
pop
aaa
xor
jle
mov
dec
sbb
in
in
dec
fcomp
push
fisttpl
addb
rcrl
loopne
outsl
in
jb
pushf
loope
dec
sbb
push
or
sbb
ljmp
adc
ret
data16
mov
push
roll
or
and
les
mov
push
and
pop
mov
add
xchg
push
insb
inc
ja
inc
xchg
andb
or
add
notl
lahf
mov
lcall
cmp
or
test
add
mov
cmpl
je
pop
cmp
add
push
or
jg
and
add
pushf
dec
jl
or
sub
jmp
xchg
scas
sbb
adc
mov
fisttpl
sub
aad
pop
or
insl
mov
sub
mov
add
loope
add
sub
sbb
pop
cmp
sbb
int3
sub
ss
and
and
sbb
repz
pop
mov
xor
or
loopne
or
jmp
xchg
adc
xor
cltd
mov
mov
add
push
movhpd
inc
ret
or
cmp
je
xchg
add
loope
cmp
add
test
pop
test
pop
cmp
xchg
aam
fcomps
mov
out
sub
test
pop
int
sub
hlt
fidivl
inc
jmp
frstor
shl
addb
lock
add
push
and
push
clc
imull
mov
das
popa
pop
sub
cmp
jecxz
andb
shl
dec
cli
pop
mov
cmp
cmpb
adc
sub
push
or
insl
jo
jb
in
sub
push
jmp
jae
adc
xor
ret
mov
jmp
cmpsl
xchg
nop
repnz
adc
mov
inc
je
sar
xor
out
dec
mov
loope
mov
inc
rcll
pop
cwtl
jle
push
mov
ud1
ficomps
jmp
jg
subl
addr16
jp
stos
cwtl
arpl
xchg
adc
sahf
cmpsb
call
jp
mov
ret
push
push
jno
mov
clc
addl
jb
pusha
mov
adc
add
jo
xchg
mov
push
adc
pop
btc
test
mov
xorb
jmp
add
xchg
lret
inc
xchg
mov
push
cmp
je
cmp
jbe
push
add
dec
ret
subb
fsubr
loop
lret
clc
imul
xor
test
aaa
and
push
mov
cltd
lods
lock
sbbl
test
loop
xor
je
inc
xchg
push
push
je
cmp
mov
cltd
jle
filds
pushf
add
insb
pop
adc
push
sarb
push
and
cltd
fmuls
sub
decl
rcrb
sub
scas
xchg
lods
loop
mov
inc
jo
ljmp
jno
push
sub
cmp
push
push
test
movl
adc
mov
aas
xchg
xor
addb
jb
sub
xor
data16
pop
shrb
sub
cmpsb
sbb
shll
nop
add
or
dec
jbe
inc
pusha
shll
add
jne
push
xchg
lea
mov
cmp
pop
das
bound
jne
xchg
outsb
mov
cmp
cmp
jae
jmp
pusha
jle
push
xor
mov
div
stos
jb
lea
inc
jbe
mov
mov
divps
icebp
or
push
andl
push
dec
notb
aaa
sbb
addl
adc
lds
out
ret
xchg
mov
adc
mov
jo
gs
pop
push
ljmp
dec
push
xchg
test
fwait
xchg
das
adcb
sbb
andl
or
xor
xchg
dec
xchg
push
mov
dec
add
add
jne
or
test
jle
dec
mov
cmp
mov
adc
insl
ss
dec
sub
sub
jne
bound
xchg
push
push
adcl
repz
fiaddl
fsubrs
les
xchg
arpl
add
shrb
pop
sahf
pop
inc
dec
jle
lahf
mov
sti
push
mov
add
adc
stmxcsr
std
or
dec
add
cmpb
sbbb
mov
psubusw
stos
add
and
clc
jg
fs
mov
fnsave
add
movd
movaps
out
mov
aaa
out
push
enter
shlb
jle
xor
pop
jle
sar
push
ror
test
decl
data16
push
sub
jge
repz
or
jg
mov
neg
dec
mov
xchg
ret
adc
jnp
mov
loop
adc
add
adc
push
dec
test
fwait
jo
and
jmp
pop
fxch
mov
fadd
roll
sti
or
mov
mov
mov
int
pop
loopne
ret
rolb
adc
jo
pop
mov
hlt
rcl
add
and
movsb
jecxz
push
mov
movsb
gs
sti
jo
lea
inc
dec
pusha
lahf
ret
push
jp
rorl
pusha
sub
mov
jg
jb
jo
mov
lods
mov
push
sub
adc
lods
js,pt
and
and
inc
sub
clc
ja
mov
mov
pop
cltd
pop
pushf
je
cmp
add
fisttpl
addb
push
repnz
andb
test
mov
inc
or
inc
and
adc
or
bound
insb
or
mov
push
dec
ret
daa
imul
inc
orb
xor
mov
rcrb
adc
imul
movsl
mov
and
and
xor
xor
incl
adcb
xor
arpl
leave
mov
xor
mov
add
push
test
jo
lock
dec
and
les
dec
mov
push
jns
inc
pop
or
adc
mov
dec
add
in
mov
inc
push
jne
push
pop
loope
and
std
daa
mov
dec
ficoml
sbb
movb
or
ret
sbb
pop
leave
ret
and
addr16
sbb
adc
leave
adc
jo
or
push
xor
sub
pop
arpl
pop
stos
in
mov
ja
arpl
push
fisubs
mov
out
mov
iret
inc
test
cmp
jmp
push
add
pop
sbb
das
out
fbstp
dec
inc
mov
push
js
fidivrs
orl
xchg
mov
xchg
fildl
pop
mov
aam
loope
es
jle
adc
into
int3
popl
adc
sbb
or
add
sub
adc
xchg
inc
mov
cmp
fstpl
fisttps
xchg
test
pop
cmp
mov
ljmp
sbb
fists
jae
push
jb
add
push
cli
adc
inc
mov
sub
lods
cmp
and
or
into
fldl
dec
gs
pop
mov
sub
sub
shlb
sub
aas
sub
add
ret
pop
xor
data16
addr16
mov
das
sti
insl
enter
jle
or
mov
pushf
push
enter
sub
add
xchg
pop
test
ja
les
dec
je
jns
adc
lock
xchg
pop
shr
arpl
loopne
sbb
loop
icebp
mov
cs
add
inc
push
cmp
rcl
mov
das
cmp
adc
aaa
xchg
cwtl
adc
xbegin
pop
inc
inc
adc
cmp
and
adc
cmpsl
add
cmp
sbb
mov
sub
out
rol
cmp
cmp
mov
add
sbb
adc
rcrl
es
add
or
lret
jne
dec
jmp
sarl
sbb
and
mov
jne
in
or
push
lds
mov
push
loope
sbb
xor
xor
xchg
hlt
test
mov
xchg
call
inc
stos
jne
or
sbb
jae
add
pop
outsb
mov
inc
imul
xchg
push
add
pop
or
mov
das
inc
fs
sub
adc
fisubl
add
push
pop
xor
add
dec
fimuls
and
sbb
add
mov
push
stos
push
rcll
sub
loopne
mov
movsl
arpl
cmp
push
sti
daa
inc
push
mov
pop
pop
in
mov
mov
jns
jmp
sbb
sarl
in
in
push
les
repz
jecxz
or
pop
jne
jb
ret
enter
mov
push
or
test
aad
rorb
test
mov
jbe
cmp
jb
and
mov
dec
or
jno
cmpsl
add
cmp
sbb
adc
xor
aad
ljmp
repnz
rol
push
arpl
fistl
pop
popa
adc
jbe
sub
mov
cmp
pushf
mov
cmp
into
lea
sbb
lret
sub
in
mov
jne
push
adc
or
sbb
mov
or
pop
sub
sbb
test
add
mov
add
sti
ds
loope
push
xor
add
imul
lret
das
in
add
pop
jo
cmp
xchg
rolb
out
orl
mov
mov
inc
ljmp
jmp
xorl
push
jbe
adc
imul
mov
call
or
jns
pop
mov
sbb
cmp
dec
adc
xor
lds
xor
jle
jns
jl
pop
adc
jl
jo
dec
or
and
or
loope
pop
pop
inc
sarl
les
cli
dec
mov
and
repnz
xchg
call
filds
pop
mov
mov
push
and
or
sarb
loop
add
add
pop
sbb
in
in
leave
in
movsl
pop
xchg
lret
in
out
push
ret
imul
dec
pushf
std
jmp
sub
push
or
inc
mov
repz
jg
mov
xor
aaa
push
ljmp
in
sub
push
xchg
adc
jmp
push
sub
add
roll
xor
sub
movb
mov
je
or
sub
sbb
mov
pop
gs
and
pop
sbb
add
repnz
popa
jae
mov
push
add
xchg
in
push
lcall
pop
jbe
lea
adc
sbb
nop
sbb
int3
jp
sahf
shl
add
pusha
out
mov
xchg
cld
jb
push
stos
aaa
movsb
out
jbe
add
and
adc
mov
enter
cmp
popf
sub
popa
xor
lock
jmp
test
or
add
sbb
add
xorl
ja
lcall
pop
int
mov
pop
je
hlt
push
lcall
scas
insl
in
and
add
pop
test
cmp
popa
dec
mov
pop
adc
jecxz
gs
xor
inc
add
pop
push
or
outsl
popa
cmp
mov
xchg
ds
adc
popa
outsb
sbb
push
mov
js
hlt
cmpl
push
add
pop
pop
loopne
adc
dec
add
js
mov
add
or
sbb
or
mov
dec
push
rolb
push
test
push
mov
rol
sub
les
adc
sbb
lods
cmp
test
sub
pop
pop
mov
loopne
dec
ret
out
jne
out
xor
push
sbb
adc
rclb
adc
inc
dec
push
inc
rolb
int3
sbb
sbb
mov
test
xchg
push
repnz
sub
cmpsb
jl
daa
dec
jne
jmp
aam
sub
shl
or
adc
xchg
dec
es
jne
mov
dec
xor
test
push
push
mov
dec
pop
xor
enter
add
daa
fldt
mov
cmp
mov
inc
push
rclb
add
jae
outsb
into
add
sbb
adc
dec
push
cmp
jne
mov
push
cmp
rcr
cmp
jne
es
jne
call
aam
subl
test
ret
inc
incl
dec
loop
aas
scas
or
adc
jmp
std
jae
aas
scas
push
xor
cld
cld
jmp
fldt
pop
or
adc
inc
inc
inc
int
jl
shr
outsb
add
and
or
repnz
aas
inc
cmp
mov
jae
daa
jmp
mov
stos
movsl
lods
sub
loope
rcl
dec
and
jbe
pop
leave
ret
add
pop
pop
inc
push
lock
es
inc
dec
lea
add
xorb
add
adc
add
imul
adcl
and
dec
push
inc
or
es
sub
pop
pop
lods
shlb
enter
push
pusha
sbb
cmp
push
sbb
jnp
test
sbbl
dec
loope
pop
or
dec
rolb
rorl
je
xor
rclb
shl
adc
movb
jmp
xchg
gs
and
iret
je
mov
sarb
and
jg
add
mov
jo
sub
loopne
lret
add
shlb
jnp
lods
call
push
push
shlb
sbb
int
and
mov
in
adc
ja
jae
sbbb
jo
int
mov
fadds
add
lea
sbb
lret
in
int3
nop
outsb
xor
xorb
jmp
add
repz
ljmp
clc
addl
pop
in
pop
lock
adc
sub
es
adc
cmp
add
cmp
add
inc
cltd
dec
lds
pop
push
xchg
and
sub
mov
push
sbb
test
cmp
inc
push
push
icebp
das
in
mov
aam
pop
les
mul
es
inc
lods
adc
add
push
sbb
mov
rorb
mov
adc
or
fsubrl
mov
or
add
fbld
push
ja
add
not
and
sub
dec
sub
clc
adc
inc
mov
les
insl
dec
cmp
loope
add
stos
and
mov
sbb
push
lock
test
dec
jne
lcall
push
lcall
xchg
jmp
dec
sar
stc
and
pop
inc
je
adc
movb
test
fmuls
pop
sbb
or
add
jmp
or
mov
inc
inc
dec
testl
or
push
outsl
cmpsb
or
scas
mov
pop
add
mov
inc
cmp
test
cmp
jb
adc
pop
shrl
dec
dec
jl
inc
mov
ret
pop
ret
lea
in
les
push
test
sub
in
mov
movsb
lock
jno
ret
adc
add
lods
fsubr
xor
push
sub
or
mov
cmpsb
sbb
shl
push
adc
jle
mov
nop
mov
lock
sbb
xor
jo
xorl
sbb
or
or
shl
out
jne
hlt
add
add
fisttps
ss
out
cmp
je
test
je
jns
cmpsl
xchg
repnz
faddl
jns
add
aam
xchg
pop
addr16
outsb
or
xchg
sbb
xor
inc
adc
dec
adc
mov
jle
xor
sbb
pop
sahf
dec
and
mov
and
lret
push
cld
rcrb
push
pop
add
inc
mov
cmp
inc
out
in
inc
dec
add
xor
inc
jnp
cld
sub
jmp
cmp
sbb
jmp
adc
sbbb
sub
sub
xlat
fcmovnbe
hlt
mov
into
mov
cmp
rcll
rclb
mov
cmp
je
cmp
push
scas
repnz
clc
aaa
repz
adc
pop
rorb
fmuls
sbb
adc
mov
and
int3
fimuls
adc
jg
mov
and
je
lret
sbb
inc
dec
hlt
les
pop
adc
sbb
mov
jmp
clc
add
push
push
jp
aam
sub
push
add
stos
inc
pop
test
lcall
mov
mov
call
adc
shl
cld
std
nop
dec
inc
lea
sbb
sbb
test
mov
imul
xor
mov
shll
mov
inc
imul
mov
xchg
cli
xorl
bound
sub
cmpsb
jg
aaa
mov
lock
mov
fbstp
or
push
jne
fs
add
pusha
and
stos
add
add
sbb
push
push
lock
and
cmp
and
and
lds
push
jne
inc
xor
add
xor
fiadds
or
arpl
mov
add
pop
push
xor
in
insb
sbb
xor
lea
loopne
cmp
cmp
jne
and
adc
aam
or
inc
test
or
fildl
outsb
add
clc
xorb
testb
jb
lea
push
adc
cwtl
inc
sti
outsb
or
adc
out
push
pop
cmp
out
mov
mov
mov
mov
and
in
or
pop
cmp
popl
arpl
sbb
daa
jne
adc
push
add
xor
jno
sbb
jmp
gs
xchg
jb
jno
popa
cmp
inc
and
or
es
inc
arpl
mov
push
imul
and
or
xchg
jo
lahf
sub
push
mov
push
cwtl
cmc
and
cmpl
push
add
jmp
or
sub
add
jo
and
stos
mov
jo
insb
xchg
mov
jp
in
dec
xor
enter
dec
mov
xor
jecxz
inc
sub
add
inc
push
cmp
add
inc
fdiv
fsubrp
sbb
add
sub
mov
mov
inc
sar
add
pusha
leave
test
adc
adc
or
pop
push
or
sti
pop
frstor
push
filds
cmp
adc
mov
xor
and
push
pop
push
or
push
into
cwtl
lock
and
jmp
xor
or
test
dec
movsb
dec
fisubrl
scas
jle
mov
les
ja
punpcklbw
hlt
push
inc
mov
inc
push
clc
test
scas
cmc
inc
jne
push
inc
sub
xchg
cld
dec
xchg
xor
out
push
mov
rclb
sub
in
inc
popa
push
fnstsw
mov
cmpsb
push
inc
popa
loopne
pop
jno
push
je
push
insb
push
data16
sbbb
addl
lcall
jne
pop
leave
aaa
inc
scas
mov
push
mov
pop
testl
decl
mov
push
push
lock
mov
pop
into
cmovp
stos
mov
xor
adc
addr16
test
cmp
add
ficoml
stos
lahf
adc
dec
loopne
dec
mov
jne
xor
pusha
add
mov
mov
es
sbb
mov
and
dec
or
addb
fisubs
adc
push
jnp
push
rcll
push
xchg
inc
adc
or
mov
cmp
repnz
add
or
xor
mov
and
xchg
loopne
mov
add
xchg
rolb
jecxz
add
jp
or
push
push
sahf
push
shll
dec
pusha
cmpsl
rcrb
mov
adc
and
lods
add
addl
xchg
jg
mov
and
or
push
loopne
pop
jecxz
mov
mov
and
mov
mov
idiv
adc
sub
and
jmp
jge
in
sbb
adc
lahf
mov
sbb
popa
push
dec
cmp
pusha
call
mov
push
je
add
aam
shrl
dec
jne
push
pop
push
int3
push
or
jae
ds
sbb
add
jmp
sub
scas
mov
push
push
cmp
dec
ja
es
mov
sbb
pop
inc
jae
push
es
lea
and
aam
push
test
xchg
in
fwait
icebp
push
add
add
add
xchg
push
rorb
push
push
in
shll
mov
pop
add
loopne,pn
orl
xchg
or
stc
push
shlb
adc
clc
push
je
cmp
and
mov
cmp
cmovp
lds
xchg
or
mov
pushf
push
push
sub
insl
jne
push
add
icebp
loopne
pop
iret
or
js
jbe
pop
jns
imul
out
pop
sti
xchg
pop
lods
rorb
add
dec
push
add
jmp
sub
ret
inc
mov
dec
mov
lret
push
pop
clc
orl
inc
sbb
sub
and
adc
cmp
push
scas
xchg
or
jp
or
decl
pusha
push
sbb
aas
cmp
jae
push
movl
push
mov
sub
js
sub
add
cmpsl
hlt
push
add
int3
inc
sub
mov
loop
aam
mov
add
add
sub
pop
sbb
and
in
cs
xchg
add
pop
call
jbe
cmp
adc
add
sub
je
or
sbb
int
dec
and
push
mov
clc
mov
mov
jle
push
dec
jae
ss
cli
or
lea
jle
xchg
nop
xchg
xchg
and
dec
pop
mov
jns
jae
jo
addr16
add
dec
or
int
jmp
arpl
add
or
mov
jl
sub
sti
add
lahf
push
pop
pop
into
hlt
lahf
or
outsb
dec
inc
push
pop
sub
xor
jp
sub
jmp
fidivrl
cmp
push
call
sti
add
sbb
movsl
rcll
mov
inc
into
cmp
lret
push
cmpsb
mov
pusha
sbb
push
inc
lods
scas
push
jo
movsl
stos
sbb
adc
lret
insl
or
cmp
mov
ret
rcl
jl
jb
bound
pop
rcrl
data16
push
inc
cmp
fdivrl
fsts
stc
xchg
clc
push
mov
stc
mov
stos
xor
mov
cmc
mov
notb
imul
add
lods
jmp
loopne
lods
pop
lcall
push
xchg
testb
pop
dec
or
je
xchg
xchg
mov
cs
add
sub
pop
lock
mov
les
mov
jmp
dec
or
pop
movsb
cmp
pop
inc
mov
andl
mov
shlb
test
mov
sbb
shlb
xlat
je
xor
fs
add
mov
stos
dec
sub
pop
lret
pop
cmp
push
loope
pop
cmp
int
push
mov
js
in
push
add
dec
loopne
js
aam
aad
sbb
mov
pop
insb
adc
movsb
lret
inc
dec
movl
or
ja
test
pushf
aam
icebp
or
cmp
arpl
lock
mov
jge
insl
bound
jl
xor
mov
jb
jecxz
in
cs
mov
xchg
test
push
popa
mov
test
push
mov
dec
fwait
and
sbb
xchg
imul
je
cltd
and
repnz
test
icebp
adc
cmpsb
jmp
aam
pop
sbb
cmpsl
lret
movsb
sbb
mov
inc
xchg
sub
leave
push
shrb
cmc
adc
and
std
fs
push
or
and
push
push
test
mov
xchg
cwtl
aam
and
jbe
in
dec
pop
pop
aaa
lock
push
hlt
push
lods
aaa
cmp
inc
cwtl
xlat
xchg
adc
xchg
cmp
dec
or
or
fsubrs
stc
and
add
sub
dec
cld
jmp
cmp
movsl
aas
adcb
rclb
pop
and
inc
push
push
adc
cmp
mov
add
mov
push
ja
or
mov
or
rorl
or
jmp
dec
inc
movsb
hlt
mov
lock
imul
push
mov
leave
pop
lods
cmp
sub
leave
cmp
sbb
repnz
jle
push
mov
xor
das
add
sar
mull
adcb
jnp
adc
loopne
rcll
inc
xor
into
je
fstpt
pop
jne
mov
pop
inc
or
mov
loopne
adc
enter
add
stos
ret
or
sbb
push
pop
out
push
iret
xchg
or
aad
dec
lret
repnz
and
sub
mov
push
cmpsb
dec
ds
sub
mov
and
inc
leave
mov
push
pop
push
add
push
inc
leave
pop
mov
pop
lods
push
cwtl
adc
pop
jge
int
incb
add
cmp
sub
jb
cmp
loopne
inc
mov
inc
mov
cld
loop
es
pop
pop
jne
out
das
test
jge
rcrl
sub
movsl
jmp
adc
xchg
add
pusha
rorb
fwait
mov
ret
in
add
test
mov
loopne
pcmpgtb
dec
jne
clc
push
inc
and
repnz
xor
mov
or
lods
adc
pop
repnz
push
dec
add
nop
dec
pop
push
dec
add
lcall
repz
mov
push
lods
movsb
pushf
repz
aas
iret
xchg
mov
inc
in
iret
repz
call
hlt
cmp
repz
clc
clc
cld
faddl
xor
clc
jo
shll
jmp
adc
fisubs
aam
rcrl
and
or
inc
and
and
fcompl
lea
jl
cld
pop
and
int
loopne
std
cld
out
bound
shll
out
bound
daa
stc
sub
mov
inc
insb
nop
push
addb
int3
ficoml
jl
mov
add
sahf
inc
push
cs
mov
loop
addr16
mov
cmp
loop
mov
and
sahf
out
sahf
sub
cmp
push
sahf
out
js
ss
sbb
jns
out
adc
adc
or
jns
out
or
add
cmp
cmp
xchg
imul
push
add
pusha
mov
sub
and
inc
ja
jp
and
xchg
or
popl
or
cld
cmp
or
call
jg
arpl
xchg
or
je
mov
dec
sbb
testb
jne
hlt
cmpb
aaa
lock
inc
cli
mov
sar
xor
inc
push
pop
mov
or
xchg
add
lods
mov
jne
push
sbb
push
pop
adc
sar
push
loopne
pop
mov
inc
and
cmp
or
push
and
stos
jne
or
jle
adc
pop
movsl
push
mov
add
xor
arpl
sbb
adc
push
add
jmp
mulb
cmp
push
fldl
jecxz
nop
jbe
aaa
orb
cmc
and
sbb
or
popa
jo
loope
push
xchg
mov
fsubs
and
pop
add
jns
push
inc
xchg
jae
std
inc
push
pushf
arpl
fs
cmp
sub
call
mov
and
cld
add
cld
add
adc
xor
int3
std
call
inc
int
pop
add
xor
in
and
sbb
ret
push
jp
push
lock
daa
insb
frstor
xor
rcrl
sub
fcoml
sub
cltd
je
mov
jp
pop
popa
inc
aaa
inc
adc
pop
jmp
mov
xor
mov
faddl
inc
mov
push
jo
add
test
sbbb
movsl
call
sar
mov
rcl
sbb
or
repnz
addb
test
or
adc
mov
xchg
pushf
pop
rolb
jl
dec
cwtl
in
imul
xchg
cmp
dec
push
cs
add
mov
cmp
xor
add
cs
add
testb
jmp
mov
sub
rorl
lret
je
rep
test
mov
dec
ljmp
jns
in
jle
and
mov
fcoml
je
or
jne
std
cld
jo
cmp
cwtl
or
mov
inc
push
pusha
dec
dec
stc
imul
lods
test
add
or
add
sete
nop
jo
xor
cli
sarb
sti
inc
mov
js
std
or
adc
add
test
fs
hlt
fsubrl
pop
inc
enter
pop
sbb
rcl
xor
aam
inc
mov
lds
mov
adc
pushf
pop
sub
aad
pop
xchg
sti
sbb
andl
stos
xor
pop
add
pop
sbb
pop
add
frstor
loopne
push
push
push
ds
fcoml
shl
mov
or
repnz
enter
shrb
les
add
pop
jae
dec
hlt
fbld
add
mov
xor
push
adc
or
into
or
and
in
xchg
pushw
clc
jno
lret
lock
push
jne
cld
inc
adc
sarl
test
insb
mov
pop
mov
fwait
mov
popa
cmpb
push
pushf
in
push
mov
ljmp
out
inc
xchg
out
add
and
aam
jmp
addps
ret
pop
test
pop
or
cld
subl
xlat
mov
or
enter
push
or
fsub
test
xchg
out
and
push
mov
adc
jbe
ljmp
test
jle
hlt
inc
push
enter
or
inc
sbb
jno
jbe
out
cltd
test
dec
dec
test
out
push
pop
divl
cmp
mov
callw
dec
mov
dec
cmp
sbb
xor
dec
ljmp
jns
lock
stos
mov
roll
insl
xchg
mov
add
outsb
mov
push
push
pop
xchg
and
inc
jl
sbb
and
push
pop
cmp
cmp
jmp
insb
or
push
popa
leave
mov
push
push
pop
push
push
push
adc
push
test
out
out
sub
inc
fmull
orl
or
hlt
mov
cmp
push
mov
cs
dec
lds
push
test
outsb
out
or
shlb
pop
cs
fdivrs
adcl
xchg
push
jne
inc
lret
push
shll
cmp
dec
pop
push
xor
lods
call
in
or
cld
or
call
and
mov
ss
add
cmpl
add
in
lea
inc
rolb
pop
ja
mov
mov
loopne
icebp
mov
ret
push
sar
pop
pop
dec
add
dec
add
in
mov
jbe
sub
mov
cwtl
sti
or
xchg
fdivr
cmc
lcall
dec
or
je
or
popa
adc
mov
sbb
pop
or
shll
fs
addl
sbb
sub
es
mov
cld
lss
adc
push
push
ffreep
arpl
mov
lock
loop
rorb
lea
ja
test
movsl
mov
mov
cmp
leave
hlt
adc
movsl
hlt
ss
dec
je
sahf
es
or
inc
insb
push
and
test
jo
test
in
or
loope
insb
repnz
pop
ret
mov
sub
adc
and
js
add
aaa
mov
cmpb
and
xor
movsl
je
in
cmp
inc
fs
aaa
imul
imul
dec
jae
sbb
adc
lret
mov
xor
dec
je
sar
pop
arpl
gs
jns
add
or
sbb
sahf
cmp
fidivrl
inc
je
pop
push
sarb
filds
cwtl
adc
push
jne
pop
mov
imul
mov
je
push
arpl
test
xor
sub
outsl
push
ljmp
jnp
add
clc
ds
dec
and
in
lock
or
add
pop
mov
add
pop
mov
add
cmp
adc
notb
push
cmpsl
add
push
insl
cmp
add
lahf
jl
xor
and
popa
lock
cmc
pushf
sub
jne
jecxz
in
imulb
mov
repnz
cmpsl
add
aam
test
inc
sbb
out
outsl
inc
dec
mov
or
cmpsl
and
ret
and
lock
sti
and
jmp
mov
xor
xlat
mov
pop
test
hlt
mov
dec
sahf
mov
sbb
stos
mov
mov
push
out
pop
cmp
jns
push
sbb
ret
push
test
sub
push
jo
cmc
loopne
add
mov
mov
or
jno
outsb
je
sbb
sub
mov
fdiv
xor
dec
je
xor
aaa
gs
mov
test
mov
dec
xchg
andl
adc
sub
fstps
lds
mov
std
dec
cmp
test
sbb
jbe
pop
push
add
mov
call
jne
add
xchg
hlt
jmp
lahf
out
pop
mov
imul
sbb
and
pop
push
sbb
add
adc
cmp
andl
out
mov
movsl
jo
dec
lock
inc
cld
adc
jb
movsbl
leave
shl
ffree
pop
xor
adc
adc
sbb
sbb
mov
sbbb
add
push
inc
outsl
add
adc
bound
cmpb
jne
and
adcb
jg
repnz
movsb
loop
inc
data16
mov
sub
or
imul
jmp
ja
jo
inc
daa
add
sbb
pusha
add
adc
fiadds
push
push
into
frstor
mulb
mov
mov
lock
and
pop
mov
jo
jle
mov
or
add
pusha
dec
sbb
lods
xor
pop
jl
jae
add
nop
test
negl
xchg
sbb
adc
or
fsubrl
jnp
or
psrlq
sbb
jge
clc
les
daa
mov
or
sbb
push
and
lea
sub
fstps
or
inc
mov
push
cwtl
add
mov
popa
mov
stc
cmp
push
dec
jmp
jno
out
adc
xchg
sub
inc
cmp
shlb
fwait
movb
and
or
inc
jmp
push
imul
pusha
daa
mov
mov
add
jbe
sub
xor
int
mov
or
test
sti
inc
xor
sub
push
xor
add
push
sub
push
repnz
xlat
jne
adc
js
ret
sub
and
pop
out
test
jne
jmp
and
popa
test
dec
adc
xorb
scas
je
fiadds
les
pop
sbb
gs
sbb
lods
or
das
adc
sub
pusha
mov
cmp
cmpsb
xchg
cmpl
push
popa
jo
adc
movsb
add
mov
dec
stc
dec
push
sub
and
xor
cltd
fst
add
outsb
idivb
fmuls
loopne
jno
and
scas
dec
or
mov
pop
jo
xor
xchg
dec
dec
jne
sbb
notl
sbb
mov
arpl
mov
or
mov
ja
mov
pushf
addr16
sbb
jge
dec
pop
add
pop
xor
stc
add
ret
loopne
iret
rep
mov
push
imul
adc
enter
jns
movd
int3
int3
pop
sub
nop
adc
ja
js
and
das
ja
nop
or
push
je
pusha
or
or
sahf
neg
xchg
testl
js
out
les
pop
sbb
jmp
push
sbb
pop
or
enter
jns
lock
inc
pushf
nop
push
mov
aam
or
xor
mov
pop
push
pop
repz
push
push
pop
pusha
shl
iret
push
iret
popa
add
sahf
lods
cwtl
and
push
mov
fcomps
mov
rcll
mov
mov
adc
ret
sbb
pop
inc
mov
adc
int3
and
xchg
repnz
sub
adc
je
mov
dec
stc
add
mov
sbb
dec
gs
xchg
repz
jb
or
mov
je
pop
push
cli
mov
dec
add
shll
mov
mov
xorb
pop
mov
push
or
and
dec
jbe
in
movsl
enter
jp
push
xlat
pop
cli
cwtl
dec
add
test
mov
fisubrs
or
xchg
xor
push
dec
dec
sbb
xchg
add
inc
out
lret
mov
cltd
sbb
rcll
fadd
andl
sub
xchg
cmpsl
or
and
add
and
int3
aam
ficoml
rcrb
add
push
int3
enter
jne
pop
and
stos
fdivrs
push
ja
int3
scas
call
jge
testb
mov
mov
pop
in
sbb
pushl
insl
and
mov
call
lahf
and
add
loop
fdivs
mov
pop
mov
test
faddl
dec
jmp
jae
fstl
adc
jmp
cmp
mov
inc
loopne
or
or
loopne
jl
das
sbb
fldcw
jmp
lret
sbb
imul
add
sar
or
stc
and
cmp
enter
sbb
rcrb
test
sbb
or
jl
int3
mov
sbb
xchg
or
jb
add
add
add
add
shlb
push
divb
sbb
shrb
call
ds
add
add
fstps
lods
mov
cmp
jnp
clc
xchg
cmpb
shrl
jmp
cmp
clts
hlt
icebp
or
xor
pop
fdivs
pusha
sbb
inc
dec
lods
add
push
xor
andl
jle
mov
xor
add
outsl
xchg
xor
mov
sub
sub
lea
aam
mov
sub
inc
sar
xchg
push
ss
ret
repnz
mov
int3
loopne
push
push
clc
jne
pushl
adc
xchg
push
sub
idiv
mov
cli
loope
mov
arpl
idivb
jl
inc
les
mov
shll
inc
sbb
adc
lock
lret
pop
fdivrl
or
in
and
or
pop
inc
loop
cmc
jo
in
in
pop
lods
push
jb
clc
jecxz
shrb
sub
ret
add
push
cvttps2pi
sti
inc
dec
push
pop
scas
push
shrl
mov
or
scas
leave
adc
pop
dec
mov
pop
lahf
mov
pop
jl
leave
mov
fsubrp
jle
xchg
enter
or
mov
insb
enter
stos
or
pop
push
int3
add
out
mov
adcb
imul
push
lea
loopne
sub
push
fnstenv
mov
push
mov
imul
sub
aad
and
sbb
lock
push
ret
push
jmp
adc
xor
ret
out
test
mov
mov
xor
ja
andb
add
pop
push
test
sbb
lea
add
sub
push
cld
mov
adc
sti
sbbb
inc
insl
and
pop
ret
shr
adc
push
ret
jnp
push
call
adc
push
and
dec
loop
into
pop
and
loop
xor
push
cmp
insl
xor
add
jmp
add
jle
cmpl
in
cpuid
add
push
mov
cmp
jnp
jbe
dec
dec
cs
jo
pop
fisubl
pop
dec
add
lahf
or
shr
dec
pop
sub
repnz
mov
sbb
mov
insb
jno
mov
dec
add
fsubrp
adc
hlt
loopne
ret
testb
faddl
scas
xchg
and
jbe
fldl
out
jle
sub
push
jmp
loopne
jle
inc
loopne
and
push
inc
mov
add
mov
lcall
aas
sub
out
push
or
aas
das
pop
pop
jg
cld
insl
loopne
pushf
add
sub
add
icebp
or
cmp
in
dec
movsl
adc
and
pop
pop
mov
inc
stos
add
mov
pop
mov
pop
mov
or
inc
lods
fcmove
or
call
les
push
xchg
loopne
rolb
pop
pop
pop
inc
jns
cmpb
bound
inc
cld
inc
sahf
pop
ret
jo
xchg
imul
call
xor
nop
push
icebp
cmpsl
ds
add
aas
je
mov
xchg
mov
fdivr
sahf
sub
sbb
xor
mov
mov
rcr
inc
fadds
mov
or
mov
xor
mov
lea
dec
sbb
test
mov
sbb
shlb
popa
mov
xchg
dec
rorb
add
scas
and
hlt
push
xor
hlt
hlt
icebp
inc
push
jns
xor
int3
mov
aas
insb
jne
stc
xor
jbe
or
pop
and
adc
and
dec
fcoml
mov
add
xor
cmp
cmp
xor
cmp
cmp
and
loopne
xchg
out
push
rcrb
push
add
mov
sbb
add
or
push
ret
inc
dec
stos
mov
jb
rcrb
lea
out
sbb
mov
cmp
xchg
mov
hlt
test
mov
xor
mov
adc
mov
nop
out
fildl
adc
test
mov
test
scas
fildll
sub
push
jecxz
xchg
insl
hlt
adc
inc
xchg
shll
push
add
adc
mov
add
test
inc
cmp
push
adc
lds
mov
adc
push
sub
in
sbb
xchg
int
outsb
and
divb
sub
jno
rol
test
stos
add
push
or
add
push
cmp
add
mov
jmp
adc
add
mov
mov
add
mov
jp
jne
xor
dec
mov
jb
xchg
dec
cmc
lea
adc
hlt
test
enter
add
inc
lock
xor
pusha
cld
in
push
rclb
xchg
popf
jecxz
push
mov
fildl
and
add
aas
inc
pop
pop
sbb
pop
xchg
mov
cltd
sub
jg
fsubr
jb
lock
lds
movsb
lods
loopne
imul
or
adc
fs
popf
sub
aas
mov
jb
add
or
pop
add
sub
adc
inc
loopne
sbb
xchg
cmp
stos
or
adc
lret
push
add
xchg
inc
add
xor
sbbb
adc
nop
dec
push
jns
and
aam
nop
sub
mov
rclb
mov
or
adc
pop
and
aam
push
jns
mov
lea
cmpb
test
pop
in
nop
adc
jmp
sbb
mov
pop
mov
lock
adcl
mov
add
add
nop
mov
std
test
test
subl
or
test
lahf
scas
sub
sub
inc
jmp
or
lahf
je
jbe
fnstcw
xchg
sub
lock
cmc
mov
adc
test
or
mov
in
jbe
mov
shrl
mov
xor
mov
nop
adc
jmp
leave
push
scas
mov
inc
insl
add
mov
cmpl
cmp
rclb
add
push
sub
icebp
dec
inc
add
sahf
pop
mov
jmp
mov
push
dec
pushf
xor
add
dec
das
addb
jne
aam
fldt
or
and
or
adc
add
sub
add
fmuls
cmpsb
xor
rclb
sbb
jo
sbb
rcll
aad
add
mov
jp
fstpl
scas
push
add
add
call
mov
imul
mov
push
pop
rolb
or
das
repnz
cmp
or
push
or
push
xor
inc
pop
sbb
xor
sbb
mov
or
enter
add
add
shrl
adc
rorl
sbb
push
stos
add
cmp
mov
mov
inc
jl
sub
or
adc
or
dec
sub
sbb
int3
mov
addb
jo
sbb
outsl
loopne
roll
add
jecxz
push
sbb
mov
mov
jno
dec
popf
out
cli
in
add
fwait
or
ja
sub
and
push
mov
xchg
or
int3
test
mov
push
dec
out
mov
xchg
ficoms
add
ja
push
push
sub
gs
push
pop
push
sub
mov
imul
in
inc
inc
cld
jnp
jno
fisttps
arpl
out
decl
dec
push
sbb
lods
sarb
and
and
lahf
nop
mov
adc
jo
xlat
mov
cmp
lahf
or
pop
mov
mov
add
lea
cmp
ja
mov
push
imul
or
divb
inc
loopne
jmp
movb
cmc
shll
or
jo
aaa
clc
mov
insl
pusha
and
insb
ljmp
insb
push
lods
jmp
cmc
push
mov
inc
lock
xchg
dec
sbb
js
test
jno
sahf
mov
mov
mov
addr16
dec
mov
insb
mov
mov
shll
add
push
imul
fcoms
jne
movl
inc
inc
outsb
pop
pop
push
cmp
std
jne
xchg
sti
mov
sub
add
jmp
stos
mov
inc
add
bound
imul
mov
or
arpl
mov
fwait
xchg
push
mov
add
xor
rcrl
out
jb
or
std
mov
in
push
jmp
lock
fwait
mov
adc
pop
push
and
shlb
xchg
js
daa
mov
aas
rolb
cmpsl
mov
jae
cmp
jbe
mov
rcll
ficompl
sbb
pop
inc
test
leave
inc
xchg
sti
lea
bswap
imul
mov
add
inc
xchg
sub
mulb
test
cmp
mov
cmp
js
jne
ljmp
pop
nop
shlb
inc
dec
pop
clc
sti
push
loopne
xorb
movsl
adc
out
xor
push
cld
inc
out
shll
and
leave
inc
cwtl
push
sti
arpl
sub
icebp
mov
dec
or
movl
sbb
fnsave
mov
shrb
inc
jbe
mov
inc
dec
jne
fbstp
shrl
jmp
add
push
jnp
cmpsl
cmp
mov
iret
cs
imul
lea
aam
loopne
sbb
inc
inc
sub
in
mov
pop
sub
repnz
sub
adc
and
jne
lock
mulb
and
mov
lds
xlat
xor
sub
push
xlat
pop
push
or
cmp
sub
xor
xlat
testb
pop
pop
fwait
push
ljmp
push
add
and
sub
or
xor
mov
sbbl
out
pop
mov
sbb
jmp
xor
or
mov
mov
repz
ret
aaa
mov
push
test
out
imul
mov
sbb
dec
push
xlat
mov
popf
jmp
or
cmp
pop
xor
add
das
lods
push
add
pop
std
ss
and
xor
add
pop
push
mov
push
or
xorb
rclb
lea
or
push
jle
cmpl
cwtl
popa
mov
cmpl
ret
push
nop
jo
adc
addb
outsl
xchg
push
or
cmp
xor
or
sub
leave
addl
xor
dec
jg
xchg
adcb
je
mov
jo
push
arpl
pop
and
lds
rcrb
mov
mov
adc
sbb
adc
pop
loopne
mov
xor
sbb
xor
jno
inc
inc
sbb
sub
xchg
xchg
pop
sbb
dec
xor
and
sub
bound
test
cwtl
daa
jno
jbe
sbb
aas
ljmp
inc
mov
faddl
or
add
cmp
inc
and
aad
jns
or
xchg
cmp
xor
and
or
sub
dec
arpl
loope
sbb
sbb
cmpsl
xchg
lahf
rolb
nop
cwtl
roll
inc
push
pop
cltd
sub
dec
lock
test
push
jb
add
orb
sub
mov
mov
insb
leave
cltd
mov
jp
sub
lcall
jle
sub
pop
clc
ret
or
sbb
int3
xlat
add
hlt
rcr
rol
test
enter
inc
je
push
push
push
inc
movsl
jmp
test
or
push
in
cmp
das
add
stos
insb
cwtl
repnz
psubb
lret
hlt
cmpb
inc
pop
arpl
mov
insl
or
inc
cmp
nop
push
or
pop
add
add
lahf
xchg
fwait
jbe
ret
xchg
mov
sub
bound
xchg
loope
arpl
in
push
sbb
add
cli
lock
rorb
je
and
or
dec
mov
ja
fs
mov
push
add
inc
ds
cmp
lock
sub
aam
loopne
xor
fsts
cmp
not
call
xor
or
mov
cld
or
xchg
and
in
add
sbb
xor
in
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
and
ds
push
adc
jecxz
adc
xor
jns
insb
and
pop
cmp
xchg
xchg
mov
ret
inc
insl
jg
jne
lds
fldenv
or
lcall
inc
mov
nop
xor
xor
sbb
xlat
jne
cmp
daa
inc
ljmp
or
cmp
scas
and
mov
adc
fsubrs
push
mov
ja
fidivl
xchg
push
sbb
sti
into
xorb
push
or
enter
pop
clc
fiadds
jl
fbld
mov
xchg
arpl
push
fiaddl
pop
fwait
jo
mov
stos
inc
lahf
xor
xchg
sbb
jp
add
pop
leave
sbb
movsl
lret
mov
or
add
pop
fisttps
mov
dec
pop
push
mov
sbb
jmp
rcr
fnstcw
std
jle
and
lret
test
repz
fs
insb
test
lock
inc
lsl
sbb
or
xor
in
sub
dec
loope
daa
pop
push
push
bound
ret
mov
loope
adcb
add
bound
sti
mov
or
shll
enter
or
push
inc
scas
dec
dec
mov
push
in
sub
je
cmc
add
rolb
mov
pop
inc
add
mov
mov
sbb
push
add
lods
sub
sub
test
sarb
adc
push
les
xorl
jne
aam
mov
sbbb
fcompl
add
or
and
push
fldl
or
jecxz
sarb
adc
pop
mov
cltd
jnp
enter
in
imul
or
xchg
out
js
cmpl
mov
jb
fnstenv
pop
add
into
das
add
pop
mov
dec
adc
cmp
sbb
xor
insl
adc
jmp
adc
jmp
add
out
pusha
push
push
sahf
mov
rcr
popa
pushaw
iret
jp
call
addl
xchg
jg
fmull
scas
stc
xchg
stc
cmpsl
xor
pusha
or
mov
jmp
fucomp
fsts
decl
adc
loope
sti
xchg
dec
popw
les
ror
mov
adc
subl
ret
fstl
mov
icebp
lds
hlt
xchg
jne
lea
jnp
add
loop
inc
mov
jns
in
cmc
mov
cmp
pop
ja
outsb
sub
xor
and
cld
cmp
loope
add
push
pop
rclb
add
mov
and
es
aad
push
mov
mov
outsl
test
push
inc
push
and
cmpsb
sub
sbbb
and
inc
ds
add
bnd
push
dec
pop
mov
inc
faddl
add
or
add
insb
repnz
xor
xchg
inc
jp
xchg
and
ret
and
push
push
test
sub
daa
shr
mov
inc
sub
add
and
xorb
and
sbb
mov
and
mov
mov
into
add
mov
call
inc
cld
aaa
add
in
and
xor
sub
outsl
push
je
jmp
fmulp
jb
and
sub
ret
adc
std
cld
orb
in
adc
adc
xorb
mov
jmp
or
pushf
divl
adc
in
testl
pop
or
mov
rcll
pop
fs
pushl
lea
mov
sbb
and
mov
jl
push
hlt
sbb
je
jmp
bound
aam
sahf
add
loopne
pop
or
inc
mov
gs
sub
push
test
inc
push
lods
push
mov
popa
popf
jne
or
mov
ret
xor
pop
js
xor
ret
movsb
ret
cmpl
push
push
fdivp
sub
mov
sub
in
je
aad
add
pop
or
cmp
in
test
jb
int3
mov
push
int3
sub
dec
mov
lods
mov
pop
mov
sub
test
lock
sub
add
lea
mov
dec
ret
sub
cmpsb
loop
test
cli
ret
or
mov
jle
mov
lret
mov
ficomps
lods
cmp
jns
pop
cmp
mov
nop
rcrl
dec
push
or
shll
shll
mov
jb
int3
lock
push
jb
xchg
mov
repz
dec
xor
xor
pop
or
add
push
enter
mov
repz
mov
and
mov
insb
mov
pushf
sub
testl
mov
dec
enter
call
mov
cmpsl
loopne
call
mov
or
inc
dec
mov
data16
mov
insl
push
push
sub
push
inc
rol
fisubrl
in
aad
pop
scas
pop
adc
and
push
cmpb
jb
or
ret
add
cmp
je
mov
fucomi
int3
ret
lret
cmp
push
ds
push
imul
mov
push
lcall
ficompl
mov
pop
loopne
fcoms
add
push
mov
scas
fmull
pop
inc
lcall
lcall
das
mov
stos
add
cs
nop
sar
je
push
or
stos
adcb
xchg
call
stos
shl
mov
loopew
ret
sahf
add
inc
nop
jbe
stos
sub
mov
mov
xor
adc
std
jnp
dec
jb
xchg
repz
fwait
test
and
push
aam
cmp
sub
outsb
jg
shl
mov
shrb
je
or
add
aam
push
xor
pop
or
sti
insl
add
movsb
mov
pop
mov
fdivs
mov
xor
shlb
cmpsl
dec
cmp
lea
jp
dec
pop
add
dec
adc
xchg
sbb
adc
pop
pop
cmp
cmp
pop
mov
mov
out
jl
out
cmp
push
xor
jle
push
xor
test
add
into
and
ret
jo
nop
mov
adcl
push
jnp
arpl
out
jecxz
inc
fnsetpm(287
call
loopne
jecxz
shrd
imul
out
ret
mov
mov
pop
js
push
sub
adc
inc
out
mov
cmp
lods
movq
stos
subl
aad
mov
insl
dec
jmp
mov
out
sbb
loope
push
xor
std
test
js
roll
ljmp
sub
sbb
sub
pushf
inc
flds
sub
ror
pop
or
loopne
sbb
fistl
testb
rorb
cmp
mov
js
pop
dec
cmc
popl
cmc
xor
inc
push
in
xor
aad
test
stos
scas
xchg
vunpcklpd
dec
sbb
add
adc
fcoms
neg
ret
lds
cmp
fucomp
xchg
nop
sbb
das
in
popf
movsl
lea
enter
sub
sub
and
ret
xlat
mov
rolb
shll
xchg
fcomp
bound
into
adcb
fimuls
movb
inc
jmp
dec
cs
push
ss
js
xchg
sti
nop
jmp
dec
sub
jle
fiadds
push
pop
jl
aam
add
xchg
xchg
out
or
sub
ret
clc
sbb
jmp
out
adc
xchg
or
int3
icebp
scas
fdivp
mov
mov
sub
mov
xor
pop
sar
xlat
shll
call
icebp
mov
ja
pushl
cmp
sbb
cmc
mov
fstpl
iret
jmp
mov
inc
sub
les
push
popf
aas
je
or
mov
into
cwtl
loop
adc
testl
nop
sbb
mov
hlt
push
jo
sub
dec
clc
push
or
ficoml
and
sbb
popa
or
mov
push
push
mov
test
ret
je
jecxz
outsl
mov
adc
daa
pop
mov
dec
cwtl
mov
mov
dec
cmc
ret
lea
mov
clc
sub
cmpsb
mov
sub
fldl
out
jns
int
fsubl
cs
jo
xchg
xchg
inc
xor
movsb
pushf
or
add
cmpb
je
and
fsubrs
sbb
xchg
mov
lea
stc
or
clc
out
pusha
pop
pop
aas
ret
into
mov
mov
mov
mov
lock
fs
xchg
repnz
xchg
dec
xchg
cltd
mov
popa
push
aas
pop
add
mov
arpl
xor
sbb
xorb
aaa
aas
pusha
aas
sbb
push
jo
outsb
stos
inc
scas
adc
mov
inc
fmull
inc
mov
push
xor
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
mov
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
mov
and
mov
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
mov
negl
decb
cld
push
test
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
test
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
lcall
mov
mov
mov
nop
add
in
inc
dec
ret
enter
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
mov
shr
sarb
or
hlt
stos
sbb
insb
pop
sbb
mov
push
mov
mov
arpl
sahf
out
loop
sub
jp
jns
add
enter
or
pop
cmpb
mov
mov
xor
gs
mov
rcrb
sub
stos
addb
ret
pop
inc
mov
xor
addl
add
insl
and
addb
arpl
sbb
pop
in
pushf
inc
and
sbb
push
icebp
add
mov
and
rcrb
mov
out
mov
push
jmp
and
cwtl
add
adc
jbe
push
jg
mov
push
int
dec
ss
fidivrl
xor
testl
movsl
adc
sub
testb
ret
call
inc
cltd
add
pop
inc
push
xchg
in
lock
inc
adc
or
hlt
mov
test
add
fsubl
mov
mov
inc
sbbb
add
inc
push
mov
add
inc
outsl
sub
push
xchg
pop
push
fdivs
mov
loope
addr16
dec
or
in
roll
pusha
dec
and
push
outsl
loopne
push
push
dec
or
shll
jb
or
stos
mov
dec
add
add
xor
bts
jmp
insb
mov
cmp
push
xor
mov
pop
or
push
xchg
aas
inc
js
jmp
adc
jne
ja
sbb
add
cmp
and
cmpsl
inc
sub
xor
pop
and
or
es
lea
push
out
inc
shrb
rcll
fs
cmp
rclb
mov
push
out
add
xor
mov
push
rol
sbb
lahf
xor
add
test
loopne
add
add
mov
inc
xchg
mov
test
movd
andl
or
stc
mov
fsts
mov
inc
addl
sti
jle
nop
pop
subl
xchg
test
xchg
test
lret
push
cmpb
popl
cs
mov
lea
mov
pop
mov
mov
rolb
xor
pop
rcll
ret
push
pop
js
mov
xor
rcrb
or
mov
addb
add
sub
sbb
and
lret
adc
cs
jmp
inc
or
add
jge
xchg
sbb
mov
mov
cmp
pusha
pop
rorl
outsl
out
test
imul
jne
pop
das
mov
and
mov
gs
jmp
fwait
shll
js
cwtl
mov
pusha
add
call
std
fldl
lea
pop
add
inc
call
and
test
cmp
pop
pop
mov
sub
dec
out
dec
adc
rclb
lret
nop
outsl
inc
sub
xchg
or
repnz
mov
xchg
test
inc
push
add
pop
mov
ret
add
loope
test
gs
arpl
cmp
enter
or
and
or
dec
xchg
dec
push
push
push
out
mov
dec
add
mov
add
sub
fidivrl
movsl
adc
incl
jp,pt
add
inc
xchg
addl
idivb
cmp
fstpt
sub
add
pusha
add
or
sbbl
push
dec
popa
inc
shll
push
pop
jle
in
addl
insl
and
cld
add
inc
sbb
sbb
in
jne
push
insl
push
mov
lods
jle
ret
adc
push
cli
mov
cmp
pop
and
das
les
xor
mov
inc
aaa
pop
cmp
inc
enter
xchg
jo
scas
jecxz
push
and
lea
int3
jmp
fisubs
dec
push
ror
rorb
jae
push
in
cli
arpl
lods
jae
lea
outsb
add
pop
inc
cmp
mov
daa
orl
or
dec
pop
test
pop
loope
or
pop
mov
sti
mov
negl
jo,pn
mov
mov
adc
subb
clc
push
sub
sti
add
mov
or
xor
push
xor
xchg
mov
jg
test
dec
in
push
push
pop
push
jmp
int
sarl
push
daa
loope
mov
insb
ret
loopne
mov
dec
lock
hlt
ja
incb
add
mov
adc
movb
xor
shr
xchg
pop
dec
inc
pusha
subl
int
push
push
dec
mov
xchg
lods
inc
call
adc
add
pop
mov
rclb
jl
cmp
sbb
mov
add
addl
pop
lret
imul
faddl
add
xor
mov
cmp
or
rorb
test
mov
rclb
or
pushf
lds
adc
pop
ret
jb
in
add
add
inc
cmp
xchg
jnp
dec
or
or
push
decl
testl
push
add
jp
jno
mov
adc
or
mov
outsl
adc
incl
clc
sbb
dec
test
mov
repz
push
orb
outsl
xor
jmp
mov
jmp
lea
or
loop
orb
test
aaa
insb
sbb
cmp
aas
mov
mov
jne
sti
push
scas
inc
jmp
dec
add
or
bound
inc
je
push
mov
movl
jl
add
adc
out
push
push
pushf
adc
sub
cmp
mov
adc
sti
aam
push
jo
adc
lcall
pop
cmpsb
dec
dec
out
mov
lods
jp
test
notl
inc
mov
xor
dec
and
dec
aad
xor
pop
sbb
lock
jnp
paddq
dec
sub
inc
xor
and
notl
mov
sbb
repz
sub
movsb
or
or
and
jnp
mov
hlt
pop
push
xchg
push
es
aam
jp
jb
jae
add
add
pop
ret
mov
shll
in
cltd
sbb
pop
push
std
and
fisubrs
rcll
jb
mov
daa
mov
dec
jbe
pop
orl
add
nop
add
adcb
rorb
scas
or
arpl
mov
xchg
xchg
das
push
push
inc
fisubs
jnp
sbb
addr16
out
xchg
lahf
add
add
jnp
incb
outsb
nop
xchg
adc
dec
movsl
jb
daa
jg
xor
xor
mov
mov
fmuls
pop
bnd
daa
cld
xor
and
mov
push
call
out
pushf
sub
xor
idivl
pop
xor
jbe
xor
adc
xchg
int
adc
movsl
mov
lret
test
cld
nop
sahf
and
fnclex
aas
xchg
or
sbb
loope
les
or
mov
dec
or
jne
adc
cmpsl
add
aaa
adc
xor
push
clc
add
inc
mov
rorb
mov
lea
and
in
sub
outsb
lock
xor
scas
and
push
or
shrl
adc
addb
add
adc
push
adc
lods
push
test
or
out
lahf
add
or
adc
imul
inc
pop
push
xchg
sub
dec
sbb
and
add
inc
lcall
sbb
cmp
jle
pusha
mov
cmp
mov
test
pusha
ss
sbb
push
pushf
sub
jge
inc
push
sbb
clc
dec
fdivrs
pop
and
or
ror
call
hlt
cmp
jp
adc
and
clc
and
or
add
xchg
mov
or
cld
sti
cld
jb
fs
adc
pop
and
adc
popf
push
xorl
out
pop
hlt
loopne,pn
ja
out
fcmovnbe
loopne
mov
es
mov
jl
fcmovnbe
mov
mov
and
and
and
daa
push
mov
jno
jno
mov
and
mov
dec
ja
inc
loope
mov
movl
cmp
jmp
ja
arpl
mov
mov
clc
lock
jb
add
mov
jne
or
push
test
pusha
sbb
mov
inc
add
sbb
fldcw
out
pop
lea
adc
inc
inc
sbb
mov
int
add
sbb
lret
adc
fcomps
enter
cld
add
add
jb
mov
pop
xchg
fsubr
xlat
mov
sub
jmp
jnp
mov
push
test
push
or
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
mov
pop
mov
repz
dec
fs
mul
pop
jb
cmp
or
cmp
or
lret
sub
sbb
adc
stos
sub
jle
neg
and
hlt
lret
scas
rcrl
pop
or
pop
and
fbld
sar
rcll
popa
mov
gs
sub
inc
arpl
and
cwtl
pop
inc
push
fldcw
mov
cmp
xor
sub
xor
jbe
xchg
or
dec
adc
dec
inc
jbe
popa
loope
jb,pt
mov
push
cmp
repnz
aam
adc
and
or
or
add
lret
cmp
sub
testb
test
push
inc
cli
and
xor
mov
mov
in
push
cmp
mov
test
xor
pop
add
insl
or
jmp
push
push
sbb
hlt
adc
insl
push
clc
sbb
jmp
dec
and
mov
xor
mov
jmp
or
push
push
jo
shrl
xchg
call
or
lret
jo
add
ficomps
mov
adc
test
inc
adc
xchg
int3
jne
jg
ret
jne
jl
dec
enter
and
ljmp
mov
andb
pop
xorb
rcll
enter
push
repnz
inc
incb
push
pop
dec
pop
dec
rolb
out
inc
dec
or
dec
js
hlt
hlt
xchg
sbb
mov
push
cs
sbb
mov
ljmp
mov
add
push
rorb
loop
outsb
dec
flds
mov
rorl
mov
fcompl
lret
lods
fcomps
shrb
adc
lcall
or
lcall
or
add
adc
cmp
jne
lods
roll
push
adc
and
mov
mov
cs
addr16
jmp
mov
pop
push
mov
cmp
cs
jns
pop
leave
aas
add
fst
xor
sti
stos
or
sub
xchg
inc
out
pop
xchg
je
in
inc
mov
ret
imul
jl
or
cmpsb
cmpsb
pusha
adc
cmp
or
mov
sub
or
sbb
fisubrs
sub
push
fisttpl
sub
test
fstl
sub
cld
sbb
movsl
psubusw
mov
jne
test
adc
push
stos
mov
outsl
push
pusha
jae
push
cmp
pop
adc
jo
imul
or
mov
adc
push
sub
inc
mov
push
nop
aam
lahf
mov
lods
insb
inc
inc
ficompl
pusha
xchg
mov
dec
mov
add
sub
pop
enter
mov
jno
nop
pop
adc
aaa
shr
sub
cmp
inc
jmp
inc
pop
or
adc
sbb
cmp
imul
jecxz
inc
push
or
jge
push
sbb
cmp
jecxz
inc
enter
insb
dec
dec
ret
sbb
adc
push
in
add
cld
mov
rorl
xor
test
mov
cmp
mov
ja
rorl
xchg
push
adc
and
push
ja
incl
mov
sub
int
rol
inc
ljmp
jg
ljmp
jl
int
movq
push
dec
adc
push
and
out
cmp
and
push
jg
idivl
lahf
out
outsl
inc
or
jbe
jle
xor
in
lahf
iret
jg
jg
jg
jo
mov
std
xchg
mov
mov
mov
pop
ffreep
lea
add
in
lea
inc
out
fmuls
loopne
mov
cmp
pop
xor
dec
clc
and
lret
push
or
cs
sti
cli
inc
inc
push
negl
ret
mov
fisubrs
shrb
lret
ret
mov
rcrl
dec
xor
and
loopne
sbb
add
cmc
mov
adc
out
dec
js
mov
push
cmp
jge
mov
inc
push
cltd
inc
push
in
mov
and
adc
sub
into
sbb
aaa
adc
scas
sub
or
cmp
sbb
sub
lea
jl
push
pop
inc
mov
ret
sti
jg
mov
cli
and
shl
sbb
xchg
push
mov
inc
cmp
cmpb
adc
call
ljmp
jmp
adc
mov
sbb
cmpsl
mov
repnz
lea
ja
orb
outsb
lods
mov
orl
push
cmp
std
adc
jge
push
pop
fcmovnbe
or
orl
notb
gs
jl
lods
pop
pop
cmp
or
sub
mov
push
pop
ja
mov
dec
adc
movsl
stc
loopne
adc
mov
dec
pop
xchg
xchg
loopne
adc
push
ds
sub
xchg
add
addb
adc
push
xchg
inc
fs
cmpsb
fadd
push
popf
sti
xor
and
or
test
pop
sub
sbb
cmp
fnsave
adc
lea
lea
lret
inc
mov
cmp
int3
or
and
hlt
ret
out
and
push
sbb
int
test
dec
pop
movb
add
inc
add
mov
fwait
xor
mov
sbb
les
inc
mov
loopne
fcompp
or
mov
ret
stc
dec
and
pushl
and
sub
sbb
loopne
loop
mov
mov
adc
and
jp
mov
rorl
add
imul
shl
ret
add
fldenv
insb
push
and
fwait
mov
insb
enter
xor
and
or
out
out
cltd
les
stos
or
adc
lock
loopne
push
sbb
xor
add
cmp
and
mov
mov
push
or
dec
sahf
stos
add
scas
pusha
pop
push
pop
js
cmp
xor
arpl
or
add
bound
dec
sbb
les
das
daa
fcmovbe
pop
adc
je
dec
andl
out
data16
add
pop
pop
sbb
dec
xchg
pop
mov
add
test
shlb
push
dec
sub
out
mov
push
sti
push
push
mov
aas
and
outsb
pusha
jnp
addl
loopne
gs
lret
lcall
ljmp
roll
and
cld
inc
shlb
das
xor
aas
xchg
adc
add
dec
pop
aam
outsl
adc
xor
adcl
mov
lods
ror
sub
orl
sbb
or
mov
and
adc
mov
lcall
lahf
enter
jbe
mov
and
or
cmp
or
js
and
push
push
push
repnz
sysexit
add
inc
sarb
inc
fsubr
xor
push
pop
jp
inc
jmp
hlt
cli
popf
pushl
inc
push
ret
cmp
iret
mov
and
or
jo
add
sbb
jl
xchg
xor
roll
cmc
or
pop
inc
push
push
nop
lcall
fcomps
movsb
les
mov
cmp
xchg
inc
push
loop
cmpsb
rol
push
cmp
fimuls
inc
testb
or
push
mov
cs
mov
xchg
and
xchg
lea
and
repnz
push
addb
mov
mov
sub
add
add
mov
cmp
je
stos
cmpsl
mov
rorb
push
xchg
inc
xchg
mov
mov
andl
jmp
mov
stos
mov
add
scas
push
cmp
and
aaa
xchg
icebp
popf
cmp
cmp
jle
aaa
xor
fs
xor
adc
mov
jne
ret
push
in
jbe
mov
std
xchg
lods
jae
out
pop
push
mov
fimuls
jmp
jo
adc
sbb
insl
mov
sub
jmp
adc
clc
pop
jge
jnp
jae
push
mov
add
add
jne
dec
dec
jae
imul
sbb
aad
cmp
loope
jmp
and
outsb
mov
rclb
bound
fisubrs
sub
dec
mov
orl
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
xchg
xor
inc
stos
loopne
lea
pushl
mov
jge
js
mov
es
mov
inc
imul
jbe
xchg
call
incb
dec
mov
and
lret
jmp
pusha
xor
push
adc
or
pusha
adc
movsl
js
clc
cmp
pop
dec
jl
and
sbb
lea
cmp
xchg
sarl
jecxz
push
push
push
fs
inc
jmp
cmp
pop
mov
icebp
sub
dec
mov
dec
push
xor
int3
and
std
jne
add
aad
aad
sbbb
popa
cwtl
jge
add
mov
pop
push
sbb
test
aaa
icebp
inc
and
cmp
adc
ss
sub
xchg
rolb
ret
dec
adc
jge
jle
xchg
xor
fucomp
xor
jne
loopne
adc
inc
test
lods
cld
or
stos
fsubrp
lods
sarl
add
dec
js
pop
mov
mov
sbbl
sbb
mov
jb
aam
add
add
enter
aam
push
mov
or
add
adc
pop
mov
mov
roll
imul
nop
inc
cmp
xlat
jae
cmpsb
adc
pop
mov
push
or
mov
or
xor
push
pop
and
pop
aaa
or
inc
int3
adc
jne
or
out
imul
loopne
lock
inc
or
cmp
jl
xchg
push
and
notl
jp
xchg
nop
dec
sub
sbb
mov
cwtl
xchg
test
sti
inc
pop
fcoms
bound
inc
add
fldt
test
mov
adc
mov
add
sub
test
xor
cmp
jb
inc
pop
clc
xchg
add
mov
ja
mov
pop
cmpl
insl
mov
jbe
jp
mov
insb
sbb
sti
in
xchg
mov
jg
add
aaa
dec
sbb
or
sub
xor
shll
shr
mov
add
or
shr
shrl
aas
or
push
call
pop
mov
dec
sub
cs
mov
xchg
call
test
lods
jg
inc
push
cmpsb
push
shrl
shl
or
shr
or
mov
sahf
dec
mov
xchg
addl
mov
aam
sub
push
push
mov
mov
dec
cmp
push
rcr
mov
add
inc
add
ljmp
push
out
jmp
or
lods
mov
mov
sub
ret
nop
mov
mov
xchg
jl
dec
int3
xor
and
jmp
out
or
daa
mov
ja
push
dec
into
jmp
add
mov
lods
pushf
shl
cmpxchg
jno
pop
jo
add
and
push
test
mov
ficompl
push
lret
das
push
mov
mov
loop
dec
loopne
sbb
movups
ret
and
jo
mov
inc
mov
inc
in
xchg
add
inc
or
iret
mov
outsl
xor
jne
fstl
inc
mov
aam
sub
loope
mov
cmc
popa
daa
mov
rcll
adc
pop
imul
orb
aaa
mov
sbb
mov
xor
fildll
push
push
addr16
add
xor
jg
mov
push
mov
cmp
xchg
mov
shr
push
add
pusha
rcrb
pusha
jo
scas
push
nop
inc
das
jl
push
cmp
pop
in
inc
and
xchg
aad
ljmp
sbb
jne
jo
jo
or
pop
inc
or
dec
pop
insl
jb
dec
in
adc
ror
push
es
repz
cwtl
or
mov
fisttpll
orb
sub
sub
mov
and
mov
and
in
lcall
mov
mov
fwait
icebp
pop
or
mov
popf
cmp
mov
mov
shr
pxor
cmpsb
rcr
bound
inc
jne
mov
xchg
out
pusha
pop
je
and
jmp
adc
and
hlt
repz
out
inc
inc
inc
jo
mov
sarb
aaa
mov
jnp
testb
adc
divb
punpckhdq
fistl
sub
push
ret
xchg
loopne
inc
mov
inc
inc
cli
pop
pop
ret
push
into
fsubs
sub
dec
push
mov
bound
mov
inc
dec
cli
shr
add
mov
pop
test
xor
mov
stos
dec
pusha
xlat
mov
js
sbb
cmpxchg
inc
rcrb
popl
ja
pop
test
jmp
aaa
andl
cld
push
or
cmp
and
push
adc
xchg
iret
lea
push
andb
addl
aad
push
mov
xchg
andl
mov
mov
outsl
rorb
jo
sbb
lea
dec
xor
push
mov
xchg
sbb
sti
xlat
rol
in
hlt
xchg
push
loopne
sbb
jmp
gs
out
insb
pop
aas
dec
rcll
and
mov
pushf
out
ret
in
cmp
xor
in
outsb
enter
cmp
test
push
mov
inc
add
leave
sar
mov
std
cmpsb
mov
add
sarb
adc
pop
call
mov
dec
push
cli
jo
mov
pusha
or
pop
popa
cmpsl
sub
pop
ret
popa
popa
sub
stc
insb
or
xor
or
ljmp
inc
pushl
mov
jns
je
push
cmc
imul
xor
popf
push
aas
mov
lcall
sub
es
addb
adc
testl
push
or
or
lock
repz
idiv
inc
xchg
mov
mov
mov
andl
jl
add
and
dec
and
mov
stos
pop
push
lea
or
out
lret
add
cld
cmp
fsubs
add
movsb
into
add
xchg
lock
inc
call
jmp
les
inc
outsb
pop
mov
pop
push
dec
hlt
mov
lea
lods
inc
cmp
fwait
jnp
push
imul
or
scas
lea
cmp
mov
je
test
jnp
sbb
pop
add
xchg
mov
cmp
sbb
mov
add
push
or
sbb
mov
inc
mov
sarb
adc
add
xor
rol
sbb
fisubrs
movsl
dec
out
int
push
push
jmp
push
daa
add
pop
dec
pusha
dec
iret
les
pop
lock
inc
aad
mov
pop
add
adc
outsl
or
stc
xchg
jbe
shr
push
mov
inc
mov
adc
dec
xor
test
enter
mov
jns
sahf
popl
xchg
lret
loope
inc
or
adc
ss
fs
xor
jae
mov
jno
outsl
imul
lods
stos
in
inc
mov
push
addl
xchg
push
addr16
xchg
and
lahf
fwait
mov
add
in
push
inc
xchg
mov
daa
ret
sub
pusha
mov
or
les
or
cwtl
jne
push
sbb
je
pop
jbe
test
lea
jns
subb
fiadds
into
jg
sbb
mov
fnop
push
loopne
data16
sub
mov
test
sub
and
inc
mov
imul
popa
add
and
movsl
jne
roll
xor
int
lahf
cmp
jmp
add
add
mov
test
and
push
or
mov
push
movsl
adc
mov
add
add
ficoms
stos
mov
and
push
test
int
mov
jg
jmp
inc
gs
adc
adc
push
outsl
sbb
sbb
push
adc
ret
ret
and
fstpl
lcall
scas
lahf
adc
sub
jne
popa
xchg
mov
fidivrs
jno
xchg
cwtl
inc
je
adc
sub
cmpb
aas
and
addr16
dec
xor
or
jmp
sub
jecxz
push
cmp
pusha
out
aas
adc
push
cmp
push
test
jg
pop
test
gs
dec
mov
xlat
sbb
cmp
or
aam
orl
xor
scas
inc
sbb
dec
popa
inc
ss
xor
sbb
dec
lods
dec
and
add
xchg
fwait
test
cmpsb
adc
adc
push
sub
rorl
cmp
inc
leave
dec
pop
int
xchg
daa
add
and
mov
testb
pop
pushf
push
inc
ljmp
push
mov
adc
and
jg
add
jns
add
mov
imul
adc
pop
cmp
pop
out
jmp
xor
pop
loop
add
hlt
lea
cmp
dec
mov
out
add
push
jmp
test
push
scas
mov
rcll
pop
jl
stos
jmp
scas
inc
pushf
std
addl
js
pop
sbb
jmp
ret
or
cwtl
or
adc
add
pop
mov
pop
add
pop
mov
es
les
add
push
pop
call
inc
xchg
xchg
adc
add
cli
adc
push
in
pop
cwtl
pop
or
xor
mov
or
xor
dec
xorb
jp
dec
inc
jae
pusha
pop
inc
jmp
xor
aaa
jge
mov
outsb
inc
add
add
or
inc
cmp
mov
pop
sar
out
adc
adc
gs
cmp
pushf
sub
xor
xchg
data16
adc
lock
sbb
sbbb
sub
add
push
mov
mov
adc
pop
shl
mov
subb
cmp
les
add
pop
and
dec
mov
or
adc
sub
or
jno
fidivl
and
rcrl
push
andl
cmp
ret
jnp
push
mov
or
mov
push
enter
rcll
add
push
add
mov
push
jne
push
mov
out
int
sbb
out
pushl
fs
xor
cld
add
cmpl
mov
int3
xor
xlat
push
std
shlb
ret
cmp
or
push
ret
xchg
push
pcmpeqw
lods
mov
add
mov
ds
push
rolb
repz
adc
add
push
push
lea
add
adc
xor
arpl
enter
cmp
inc
stos
fwait
les
int3
push
cmp
sarb
cli
icebp
imul
add
cmp
imul
dec
or
out
inc
or
mov
pushl
pop
inc
aas
aad
fistps
cmp
jg
cmpb
jne
xor
and
or
jne
push
clc
push
scas
rcll
push
cmc
mov
push
push
shr
push
cli
and
pop
ds
mov
pop
push
nop
test
rcrb
je
jae
out
dec
imul
mov
push
pop
jl
bound
xchg
lret
test
push
jno
insb
pop
mov
jo
loopne
fnstsw
sbb
pop
push
push
in
pop
shl
xchg
sahf
cld
cwtl
scas
orl
out
ss
or
mov
outsl
add
inc
pusha
jne,pn
sbb
inc
fs
mov
sub
outsb
dec
fcoml
les
ljmp
sbb
test
cli
fsubr
fnsave
and
xchg
sbb
mov
sbb
cmp
js
inc
mov
aaa
sub
jbe
push
pop
sbb
inc
and
or
xor
xchg
inc
cmp
roll
and
xor
adc
in
cmp
pop
and
ret
dec
bound
inc
mov
jno
mov
loopne
jno
call
inc
pop
and
xchg
stc
jb
push
fsts
or
sub
test
gs
cmc
add
shlb
or
clc
jnp
and
and
pop
ss
jo
jo
lods
push
test
sbb
xor
or
push
add
inc
and
or
push
outsl
inc
repz
and
push
push
nop
adcl
jo
push
je
or
aad
ljmp
pop
js
xor
lock
inc
mov
push
lret
ret
adc
push
cmp
mov
sbb
cs
xchg
xchg
in
nop
push
dec
or
pusha
cli
fmul
fnsave
xor
pop
insb
mov
push
mov
in
inc
mov
daa
pushf
mov
or
gs
or
add
lods
stos
int
test
movsl
fiadds
jo
addr16
fld
aaa
mov
sbb
cld
cmpsb
imulb
cmp
mov
fcomps
xchg
cmp
pop
imul
cmp
out
in
ja
cwtl
bsr
mov
nop
daa
loop
add
push
ja
incb
cmp
cmp
mov
push
or
pop
pop
adc
hlt
stos
out
rorl
dec
add
or
xchg
cmpsb
or
lahf
testl
je
or
and
outsl
xorl
and
sbb
nop
lret
adc
sbb
inc
add
dec
jg
cmp
mov
jo
xor
xchg
sbb
mov
bound
or
ror
add
imul
pop
icebp
and
dec
xor
jae
dec
aaa
mov
and
popf
mov
add
push
aaa
xor
sbb
arpl
daa
daa
daa
sub
adc
outsb
and
sbb
sbb
pushf
pushf
pushf
sub
xor
pushf
pushf
pushf
sbb
cmp
popf
mov
jnp
and
inc
cmovs
cmp
cmp
pop
dec
dec
dec
cs
dec
dec
dec
dec
insb
jo
js
adc
jl
xor
and
sbb
mov
xchg
cwtl
and
dec
xor
leave
test
rorb
enter
and
sarb
es
fsub
in
es
fs
fs
lock
clc
cld
dec
jb
dec
add
add
add
or
adc
dec
sbb
fs
dec
es
sub
dec
es
xor
xchg
sub
inc
and
push
fs
dec
mov
dec
xor
push
pop
pop
pusha
add
loope
sbb
jl
add
push
push
push
jo
outsl
sbb
in
leave
in
js
mov
mov
movsb
sbb
and
xchg
or
xchg
lret
and
adc
in
leave
in
mov
mov
nop
and
pop
xchg
pop
cmp
in
lods
inc
mov
pop
jb
in
dec
mov
mov
cmpl
pop
push
adc
add
fsubs
inc
cmp
and
fbld
or
incl
mov
lcall
mov
or
add
push
subl
pushf
adc
xchg
and
lcall
cs
fadds
and
cmp
or
mov
push
and
push
not
xor
loope
xor
xchg
sbb
and
shr
dec
jb
nop
add
jmp
clc
inc
sarb
test
btc
js
lock
or
adc
pop
push
jmp
and
es
add
shll
mov
add
or
or
mov
mov
add
jg
xor
leave
add
in
push
ficoms
sbb
lock
and
mov
outsb
jg
in
and
aaa
jecxz
sbb
add
fsubrl
jmp
xchg
jmp
adc
xor
adc
loopne
fstpl
lods
jp
or
aaa
jge
je
outsl
mov
xchg
flds
and
rcr
ja
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
dec
adcl
pop
xorl
pusha
mov
pop
cmp
out
rcrl
sarl
push
pusha
clc
inc
testb
ret
lret
adc
sti
add
add
or
out
test
fisttps
mov
incl
aaa
mov
das
movsl
or
sub
shrb
lcall
loopne
xchg
pop
notl
in
push
add
out
and
sbbb
sbb
sbb
sub
and
or
aaa
and
add
inc
flds
fstps
jmp
fisttpll
push
inc
arpl
pop
add
vmsave
in
inc
push
movsl
pop
sbb
hlt
adc
orb
arpl
incb
imul
adc
cmp
fsubrs
add
sti
mull
or
xor
inc
mov
and
pop
dec
push
aaa
ret
mov
fldz
sbb
scas
mov
fstl
pop
dec
jmp
sub
sub
jmp
cmp
mov
sub
push
sub
xchg
or
jmp
fldcw
movsb
jns
add
adc
rcrb
std
sbb
or
lds
mov
nop
cmp
mov
loop
mov
or
or
mov
cli
hlt
and
stc
sbb
fstp
dec
and
repz
lret
mov
rorl
add
repnz
ss
cld
leave
stos
je
mov
xchg
test
cld
mov
in
shrl
orl
pop
xchg
push
nop
loopne
or
cmp
pop
jmp
pop
push
push
push
rolb
sbbl
cmpsb
leave
or
adc
daa
sbb
jae
push
pop
movsb
out
or
and
jle
push
add
pop
sarb
shll
fistps
and
pop
mov
popf
mov
adc
push
repnz
aaa
mov
add
sbb
add
push
fstpl
and
and
mov
push
je
and
jl
add
shll
adc
sbb
test
cld
sbb
hlt
or
dec
jo
movsl
and
dec
sbb
push
mov
nopl
add
and
or
adc
pop
xor
fucomip
jmp
addr16
aad
inc
jnp
inc
pop
and
loopne
inc
adc
xor
fstl
ret
pusha
sti
orb
leave
or
jo
sbb
inc
sub
jnp
cmp
xchg
cmc
lods
lock
in
sub
insb
es
mov
dec
add
mov
lods
pushl
sub
fadd
or
add
and
incb
das
ss
shll
inc
fimuls
out
int3
mov
add
mov
arpl
add
ffree
sbb
jge
jl
push
jnp
rcll
sub
add
push
subl
and
jo
xorl
mov
xlat
into
dec
iret
add
sbb
inc
push
jo
jo
push
mov
xor
roll
or
mov
stos
push
lret
lock
or
cltd
jge
mov
imul
decb
mov
mov
fsubs
into
pop
loop
mov
cmp
sbb
fs
or
cmpb
mov
push
enter
mov
rcr
pop
fchs
xchg
pop
or
mov
mull
lods
push
xor
test
cmovge
and
mov
nopl
jp
rcll
pushf
fisubl
push
or
loop
shl
dec
or
push
or
push
out
mov
or
and
push
sahf
std
push
or
push
and
andb
fisubl
sub
cmp
cmpsl
mov
push
push
adc
pop
gs
lret
dec
ljmp
mov
movswl
xor
or
loop
inc
fldenv
arpl
and
sarb
xor
fdivr
or
leave
push
in
fldcw
push
push
mov
pop
or
loopne
fldt
fwait
test
cltd
loopne
fsubs
outsb
fwait
sbb
pop
fcoml
repnz
call
movsb
fldpi
xor
sbb
push
inc
rcl
scas
or
loopne
loopne
je
lret
pop
testl
inc
scas
xsaveopt
sub
xor
or
push
mov
ja
or
out
andl
orb
pop
out
add
or
mov
adc
les
mov
adc
test
loop
sub
sbb
inc
nop
shlb
fwait
jg
or
test
loopne,pn
mov
test
loop
push
lock
jbe
add
mov
inc
arpl
jg
adcb
lret
push
or
outsl
lock
adc
xor
sub
sarl
pop
xor
scas
xor
adc
add
pop
and
cld
push
inc
adc
adc
push
mov
jae
nop
lret
je
xchg
inc
xor
repz
push
sti
jbe
inc
mov
pushf
test
or
push
cmp
mov
xor
xchg
or
or
loope
aaa
fs
push
or
inc
add
loope
rcrl
cmp
or
xor
dec
or
fstps
imul
dec
push
or
jle
pop
inc
dec
add
aas
mov
xor
inc
push
and
cmp
idivb
pusha
adc
loopne
test
rolb
fisubrs
stos
jp
pop
pop
push
push
outsb
sub
rorb
sub
inc
test
push
adc
ss
adc
scas
inc
jns
inc
insb
incl
inc
lea
pop
xor
lret
xlat
xor
scas
rolb
sub
lret
loop
rolb
cmpl
popa
or
repz
sti
std
or
inc
pop
pop
and
mov
out
lret
fsub
fwait
mov
inc
adc
iret
andl
mov
mov
cld
push
inc
loopne
cmp
jb
cmp
adc
pop
pop
xor
dec
cmp
imul
pop
nop
jae
adc
decb
and
rcr
sarb
add
push
and
and
enter
inc
insb
cmpl
add
xchg
and
xor
idivl
pop
or
inc
stos
inc
push
inc
push
pop
sub
or
inc
aam
xchg
jl
xor
cmp
loope
inc
rorl
rcrl
add
loopne
clc
jae
lret
sub
sub
testl
loopne
pop
popf
jb
mov
and
cmpsb
es
sahf
pop
ds
push
or
and
mov
lock
shl
mulb
xor
aad
scas
inc
shl
fcomps
into
push
out
jo
enter
je
lahf
pop
pop
xorb
jmp
sub
lea
and
test
lods
and
and
out
test
sbb
dec
cwtl
rorl
loopne
rcrl
dec
xor
jecxz
add
cli
or
and
fsubr
pop
pop
push
push
jb
mov
add
rcrb
aam
dec
jns
stos
xor
adc
shl
xor
aas
mov
sbb
outsb
and
mov
and
fs
and
jle
xchg
xchg
and
mov
loopne
push
ret
arpl
pop
stos
rclb
add
xchg
pop
dec
xor
xchg
mov
mov
lock
add
imul
icebp
pop
test
lea
out
mov
or
sub
mov
in
xchg
jge
xor
or
xchg
dec
sahf
sarb
shl
test
or
pop
mov
or
push
cmp
push
cwtl
cmp
and
jb
cmp
pop
push
push
lret
jne
and
dec
xor
int3
movsl
pusha
add
adc
push
test
inc
sbbl
inc
inc
inc
dec
in
adcb
push
mov
cmp
jmp
dec
inc
push
nop
sub
jecxz
add
push
sub
movsl
xlat
fbstp
js
sbb
jmp
inc
inc
ss
jnp
pop
les
cmp
and
mov
dec
mov
enter
push
mov
rorl
arpl
test
repz
add
insb
or
jnp
stos
xchg
xchg
xchg
adc
inc
cs
or
lods
std
pop
inc
ss
cmp
je
or
out
mov
dec
aas
rol
data16
mov
cmp
pop
cmpb
mov
inc
inc
mov
mov
int3
pop
add
and
fcompl
sbb
mov
jp
jb
test
hlt
dec
adc
push
sub
xchg
imul
or
addl
in
movsl
add
push
mov
adc
push
add
adc
sarb
pop
jmp
adc
in
and
jmp
addl
inc
bound
fistpl
sub
ret
fdivl
or
add
sub
and
push
pop
sbb
lods
jnp
rorb
adc
or
cmp
fildll
rorl
aas
sub
or
into
add
xchg
push
dec
in
fmuls
cld
mov
inc
or
pop
push
test
lret
add
imul
add
fbstp
jmp
sub
add
cmp
cmp
dec
inc
dec
jecxz
je
adcb
bound
pop
push
jo
das
push
dec
jns
neg
sbb
fisubl
cltd
push
cmpsb
xor
cs
pushw
test
xchg
or
add
add
pusha
clc
pop
dec
in
add
add
add
sub
mov
push
push
stos
daa
push
add
push
mov
push
stos
popa
or
or
pop
push
push
loope
aaa
test
in
rclb
movsb
inc
sub
mov
rol
jmp
adc
jmp
stos
or
shll
gs
adc
sbb
push
adc
shlb
int3
cmc
mov
sub
sub
das
sbb
sbb
or
fildl
and
fsubrs
adc
mov
mov
pop
push
js
cmp
movl
add
mov
mov
jl
cmp
jge
jecxz
push
loopne
icebp
and
call
rcrl
push
ret
cmc
or
mov
enter
inc
pop
xchg
push
aas
and
mov
add
lret
jne
movl
add
or
sbb
fdiv
gs
pop
dec
add
pop
aaa
or
roll
add
sub
negb
inc
xor
add
mov
push
bound
cli
pop
mov
dec
sub
leave
and
add
pop
mov
in
insb
movb
mov
ret
enter
dec
ja
ss
popf
neg
sbb
mov
push
movb
nop
ret
mov
sbb
jne
bound
xor
cmp
add
xor
adc
xor
add
xchg
in
jmp
inc
xor
mov
xor
adc
xor
cmpsl
inc
arpl
or
mov
sbb
ja
or
xchg
pusha
int
xchg
hlt
nop
or
frstor
add
dec
movsb
and
lret
rcl
add
mov
addb
clc
dec
insb
dec
imul
sarl
dec
jge
mov
push
sub
clc
hlt
shrd
sbb
ljmp
inc
jge
sbb
faddl
inc
clc
cwtl
xor
jge
xlat
xchg
cmp
inc
cltd
pop
jg
add
dec
jmp
cwtl
cld
lea
fisubrl
mov
or
rorl
fs
and
ljmp
pop
cmp
mov
lret
out
gs
xor
push
in
ljmp
shrl
xchg
pop
mov
js
jg
jb
xor
mov
or
fbld
shl
fimull
jl
sub
or
xor
jb
insb
mov
xchg
xchg
sub
in
lock
sarl
push
jg
mov
or
mov
cmp
scas
mov
or
or
mov
xchg
push
sbb
xor
rcll
lock
push
jnp
add
ja
fldenv
jecxz
mov
mov
cmp
push
test
sbb
sbb
jbe
push
adc
lods
push
push
stos
pop
mov
mov
add
dec
mov
in
push
mov
ss
jmp
aam
mov
inc
or
push
inc
sahf
fwait
adc
jmp
decl
mov
xchg
inc
or
or
ret
imul
aaa
push
lods
leave
loopne
roll
push
sbb
push
insb
xchg
mov
or
das
push
testb
vmread
fdivs
and
pop
sub
add
sub
or
sub
mov
mov
sbb
and
stc
sbbl
pop
push
inc
es
divb
push
cmp
or
pop
pop
daa
out
push
or
push
xor
data16
cmp
leave
xor
enter
or
push
sub
inc
daa
push
repnz
jmp
pushf
in
jl
or
lea
inc
or
pop
pop
push
stc
mov
push
add
jmp
xor
lea
sahf
clc
gs
or
pop
addb
aaa
data16
or
sbb
push
inc
je
std
bound
sbb
push
jns
xor
push
test
pop
pop
js
loope
popf
sbb
pop
data16
sbb
pop
lock
push
sti
push
inc
das
popa
sub
or
cmpb
adc
cmpl
mov
lods
pusha
mov
out
push
push
aaa
lock
lods
inc
movsl
push
imul
ret
insl
add
daa
push
adc
sub
cmp
jnp
jp
testl
or
xchg
sarl
ss
jmp
xchg
nop
mov
add
push
add
hlt
mov
cmp
mull
cmp
je
mov
sti
fs
lahf
sub
pusha
mov
mov
sub
or
int
xor
adc
out
add
cld
jl
sbb
das
sub
push
cwtl
js
push
xchg
and
dec
push
pop
movsb
mov
pop
jg
sbb
movsb
jbe
dec
cld
jg
je
xchg
push
push
and
vmovq
ret
out
iret
movsb
push
push
push
leave
adcb
std
fcom
popf
add
mov
pop
sub
fidivrl
int
insl
adc
push
cmp
shrb
sub
mov
push
dec
mov
push
pop
js
and
adc
cltd
xor
adc
loopne
lds
mov
cmpl
inc
add
push
or
push
pop
jo
push
sbb
les
mov
lahf
and
xlat
dec
loopne
imul
pop
pop
pop
pop
pop
rcl
mov
dec
imul
lcall
or
nop
scas
nop
icebp
jb
inc
mov
and
loopne
cmc
jg
or
sbb
dec
je
dec
add
outsb
fbld
push
jmp
or
jmp
inc
jg
clc
ja
or
lcall
xor
inc
jmp
dec
ja
sub
push
push
jno
ret
fisttps
add
sbb
adc
leave
or
int
dec
xchg
aam
or
add
cwtl
ss
push
add
and
js
sub
loopne
shlb
sbb
jmp
push
jae
dec
xchg
adc
mov
hlt
ss
outsl
je
mov
mov
call
push
adc
lea
inc
jbe
frstor
subb
inc
adc
add
adc
mov
fiaddl
into
cmpsb
push
fisubrl
xor
loope
push
push
movsb
les
push
adc
push
loopne
sbb
mov
adc
push
sbb
or
add
aaa
or
xchg
call
in
sub
call
pusha
movsb
inc
or
or
inc
jg
movsl
push
xor
cwtl
jge
shr
add
loop
inc
rorb
cs
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
gs
mov
pop
jp
push
add
mov
sbbl
inc
jl
in
sbb
cmp
loopne
les
or
dec
pop
add
push
in
and
sti
and
pop
or
cmp
or
test
bound
xor
and
into
clc
subb
cltd
xchg
mov
push
mov
shll
cli
and
test
fidivrl
and
xor
mov
xchg
pushf
adc
pop
cmpsb
and
xchg
add
mov
or
xor
push
or
lock
icebp
sbb
fistl
xchg
data16
push
loope
inc
jl
mov
mov
stos
scas
sub
cli
jne
dec
jp
mov
push
add
push
or
or
xchg
jp
pop
sub
pop
inc
mov
shll
inc
mov
shll
or
fidivl
nop
outsb
sbb
sbb
and
add
mov
or
je
push
sbb
mov
leave
inc
sbb
sub
inc
loope
pop
repnz
lret
pop
shr
xor
xor
cmp
push
pop
or
and
jne
dec
sbb
jecxz
add
lret
dec
test
sbb
xchg
sub
daa
jno
jo
push
dec
adc
cmp
sbb
movsb
sbb
mov
and
stos
pop
or
int3
inc
and
enter
sbb
fs
adc
xor
jns
and
add
dec
and
mov
rolb
int3
pop
ror
mov
adc
loop
mov
inc
popa
cmp
fimuls
inc
fnsave
movsb
xor
rorb
test
xchg
push
test
clc
sbb
inc
mov
pop
nop
repnz
jno
or
clc
out
add
aam
sbb
add
pop
je
add
les
inc
mov
sub
sbb
xchg
je
enter
fsubs
mov
loope
mov
push
lds
push
xchg
outsb
cmp
sub
push
add
ljmp
mov
cmp
pop
ds
jge
add
add
call
pusha
push
ljmp
and
cmp
test
push
push
call
cmp
push
movsl
mov
loopne
push
fdivs
mov
cmp
imul
jle
inc
and
xchg
mov
hlt
int
ret
sbb
insb
xor
mov
sti
and
and
xchg
fcoml
adc
cmpb
jl
ss
fstl
je
jp
rcrb
push
incl
adc
push
push
push
push
or
push
test
jmp
scas
push
insl
fwait
add
gs
push
dec
orb
in
test
inc
and
inc
and
cmpsb
sahf
push
loopne
ljmp
mov
jne
cmp
jne
xorb
dec
add
mov
add
mov
and
adc
rorb
push
cltd
pop
adcl
fprem
rcrb
add
add
mov
in
or
adc
or
shlb
je
je
fcomip
mov
push
cmp
adc
cmpsb
addl
movsl
xchg
pop
add
sti
mov
inc
jle
and
loopne
outsb
add
adc
mov
xchg
test
add
push
cld
imul
sub
inc
inc
push
neg
neg
sbb
out
adc
sbb
inc
sbb
dec
sbb
xchg
xor
sbb
mov
sbb
push
push
rorl
out
and
fsts
dec
icebp
sbb
adc
test
lret
adc
sbb
mov
and
fwait
test
xchg
and
dec
jne
pop
pop
pop
scas
mov
xchg
and
or
pop
adc
ret
loope
shr
dec
rorb
sub
adc
cli
mov
idiv
and
maskmovq
cld
lock
push
js
ret
test
bound
das
add
jecxz
mov
sbb
dec
or
into
add
in
fildll
xchg
lea
lods
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
inc
movsl
int3
cmpsb
mov
daa
push
andb
mov
adc
push
inc
jnp
inc
arpl
adc
push
cmpsb
cmp
movups
xchg
add
stc
mov
inc
dec
push
push
mov
insb
add
sbb
ret
sbb
cs
cs
out
pop
inc
add
cld
inc
ss
inc
cmp
or
cmpsb
jnp
in
or
inc
jns,pt
cmp
xchg
je
test
aam
jne
pop
inc
add
sbb
cmc
jmp
xor
ror
les
cmp
daa
in
xor
cmp
test
push
push
mov
push
xchg
mov
inc
pop
adc
icebp
pop
sbb
es
mov
je
adc
js
dec
and
jb
sbb
add
daa
lea
cmp
adc
cmp
jne
cmpsb
pop
adc
adc
mov
nop
and
inc
jl
pop
pop
je
adc
jmp
push
pop
sub
jmp
sbb
lea
push
and
shlb
test
int
or
fdivr
aas
loop
lods
in
pop
push
movb
jmp
or
pop
nop
sahf
and
nop
aaa
sbb
cmp
pusha
sub
loopne
test
push
mov
or
xchg
pusha
movw
jb
add
hlt
cmp
loopne
mov
pop
mov
into
testb
sbb
cmp
push
add
add
cmp
inc
ja
dec
je
or
sub
subb
push
mov
rolb
push
std
mov
xchg
out
add
fwait
or
push
pushf
sahf
aas
inc
sarb
dec
fadd
call
mov
imul
lea
sar
call
mov
insb
pop
cs
pop
neg
push
jnp
cmpsb
xchg
push
ljmp
cwtl
fiaddl
popf
or
mov
and
sbb
jnp
xor
rol
push
push
call
rcll
lea
pop
lods
xor
add
jl
jbe
test
in
or
dec
jle
xor
sbbl
or
scas
adc
loop
or
mov
mov
and
lea
inc
xor
xchg
andl
enter
mov
ja
mov
inc
or
and
or
jnp
iret
leave
inc
call
lods
cli
fldcw
fs
inc
or
cmp
push
xor
inc
addr16
jne
lea
mov
add
sub
sbb
mov
push
xchg
pusha
add
lea
mov
xchg
push
push
or
and
aam
xchg
dec
push
lock
lea
movsb
sahf
fcomi
xor
or
ret
movsb
sub
pop
in
pusha
les
mov
xchg
mov
mov
adc
repnz
lods
fwait
cmpsb
and
rorb
xchg
jle
cmp
mov
shll
mov
add
shr
or
and
rorb
sbb
push
lret
mov
mov
adc
mov
jp
cwtl
shrl
loope
shr
or
fdivrs
or
dec
mov
lret
pop
cli
push
sti
mov
cmp
adc
loope
sub
movsb
stc
repnz
add
cli
cli
inc
cli
test
shl
repnz
fmul
add
fadds
loopne
fcomp
inc
push
imul
mov
cli
adc
and
fisubrl
popa
fimull
pop
incl
xchg
mov
push
fidivl
fldenv
enter
scas
push
and
mov
insb
pop
lcall
dec
shlb
enter
lock
in
fmuls
add
out
rcrb
stos
aaa
sahf
inc
repnz
pushw
jmp
or
clc
out
jge
cmp
mov
and
and
adc
insb
in
mov
inc
daa
adc
mulb
push
or
aaa
mov
out
jne
fdivrs
aam
sub
jbe
dec
sub
cmpsl
or
shlb
dec
dec
adc
add
test
xor
adc
or
jns
sahf
or
lret
fcmovu
add
mov
jmp
test
cli
mov
int3
js
sbb
add
add
add
into
clc
adc
adc
adc
jg
or
xchg
mov
lock
jge
or
dec
add
enter
and
jge
lock
or
cmp
jne
jne
inc
sub
add
inc
out
nop
sbb
lret
ljmp
je
cwtl
setae
xchg
sbb
sub
mov
roll
movb
aad
xor
call
pop
outsb
call
xchg
sub
gs
and
or
pop
inc
sbb
in
pop
call
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
push
jmp
loopne
cs
dec
loopnew
fadds
outsb
pusha
lea
push
and
mov
push
in
out
add
mov
sahf
in
add
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
add
push
sbb
ss
or
sti
je
clc
rolb
lods
add
pop
push
outsl
dec
enter
sahf
mov
add
cmpsl
outsb
and
dec
int3
sub
test
cli
pop
add
sbb
testb
sbb
or
mov
inc
ljmp
jmp
add
dec
ret
cmpsl
mov
cmp
jge
sub
cmpb
or
add
dec
ja
fiaddl
aam
inc
dec
add
add
fadds
add
adc
rorl
mov
icebp
out
jmp
add
or
or
xchg
adc
popf
test
inc
test
jb
subb
and
add
push
add
inc
mov
mov
or
or
dec
push
imul
ret
lcall
add
push
mov
mull
or
push
push
mov
or
adc
adc
or
repz
add
pop
jne
xchg
lcall
scas
in
inc
xor
je,pt
push
ret
sbb
adc
mov
je
mov
rcrb
xchg
adc
and
add
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
pusha
or
push
int3
push
cmpsb
sub
and
pop
pop
fimuls
testb
or
pop
ret
mov
adc
push
loopne
add
sub
rolb
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
push
lock
or
scas
les
nop
jo
and
mov
add
sbb
nop
add
mov
test
subb
sbb
push
out
adc
push
scas
orl
sub
or
or
ret
ljmp
out
or
mov
scas
add
pop
movsl
xor
repnz
test
pop
into
or
add
or
cltd
xchg
data16
add
lret
enter
sub
mov
sbb
inc
jg
into
ljmp
or
or
jg
or
loopne
nop
pop
sahf
pop
or
faddp
mov
jl
jle
and
or
sbb
and
and
cmp
fs
loopne
mov
hlt
cmp
leave
lahf
pop
xchg
out
into
enter
add
movsl
ds
and
or
push
es
into
mov
jp,pn
lods
and
cltd
and
mov
cwtl
sbb
rorl
sbb
fsub
movsb
jb
jmp
test
cmpsl
ljmp
cwtl
xchg
pop
mov
adc
sub
incl
mov
stos
sub
mov
dec
or
mov
popa
scas
enter
fsts
inc
xchg
sbb
push
pop
jbe
inc
lock
mov
push
roll
adc
xor
in
hlt
add
mov
ljmp
fldenv
and
add
jo
push
sahf
add
jp
jle
sbb
adcb
popa
sbb
je
cwtl
or
call
dec
cs
je
mov
loop
test
shl
mov
cmp
jb
push
test
dec
es
mov
push
xchg
cwtl
sub
aam
insb
or
imul
scas
gs
push
push
or
push
mov
inc
ret
shrl
inc
fwait
repz
nop
mov
fsts
mov
jne
add
cs
faddl
and
push
aam
loopne
cmp
add
test
mov
aad
xor
mov
mov
and
or
xchg
loope
push
or
add
adc
or
sub
mov
cmc
test
lret
cmp
roll
pop
add
jg
dec
popf
push
aam
dec
ljmp
lock
pop
ljmp
into
push
test
cs
fldl
aaa
sbb
dec
popf
test
add
jmp
sbb
or
push
mov
cmp
push
js
addb
mov
fldcw
add
into
push
adc
pop
jmp
mov
test
in
jno
sahf
mov
and
clc
or
push
xor
test
adc
and
fadd
adc
orl
inc
test
rorb
mov
add
cs
call
push
outsb
xchg
push
ret
js
mov
lods
cmp
push
or
inc
mov
cmp
pop
andl
inc
mov
mov
inc
cmp
mov
test
mov
and
sbb
rcrl
in
push
insl
test
push
clc
cli
mov
lret
lret
stos
jne
in
fimuls
mov
ret
sti
test
add
push
mov
addr16
enter
mov
xor
jae
pusha
sub
enter
xchg
xlat
add
inc
dec
mov
add
insl
jae
scas
mov
out
cmpsb
loopne
jmp
dec
inc
add
jnp
mov
pop
push
mov
ss
subl
push
js
enter
push
xor
mov
sbb
leave
inc
insl
fs
push
push
adc
rcr
jp
pushf
xor
clc
andl
movb
dec
in
sbb
add
cmp
test
out
push
xchg
loopne
sbb
cmc
sbb
je
subl
scas
sbb
rol
pop
sbb
xlat
and
aas
pop
cmp
clc
dec
aam
jbe
aad
push
mov
imul
mov
mov
inc
push
fisubl
cmpl
sbb
in
push
and
jl
dec
gs
shrb
mov
add
push
or
les
icebp
mov
fcomps
insl
adc
push
imulb
push
pop
adc
in
cmp
sbb
iret
les
test
rorl
iret
ret
sbb
lret
pop
xchg
and
dec
xor
je
push
push
out
cmp
xchg
cld
jmp
andb
mov
push
push
xchg
sbb
outsb
push
pusha
xor
enter
leave
movsl
dec
in
pusha
or
adc
das
add
and
sahf
push
test
mov
push
xor
sahf
insl
call
test
pop
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
sbb
pop
sbb
outsb
dec
sub
pop
rorl
sarl
stos
es
mov
cmpsl
or
ret
xchg
xchg
mov
add
jecxz
aam
jmp
add
mov
jecxz
push
jge
pop
jo
cltd
fildl
popa
mov
mov
mov
pop
in
dec
push
pushf
ret
inc
adc
push
push
add
dec
push
push
nop
shrb
push
iret
int3
jmp
rcl
dec
sbb
jae
cmpsl
xchg
xor
or
insl
loop
daa
lods
xchg
loopne
pop
pop
xchg
sub
inc
inc
add
ret
in
int3
or
pop
rolb
aas
clc
rorb
xor
inc
popa
fadd
les
cmp
add
imul
rorl
adc
inc
dec
mov
xchg
cltd
sbb
lret
sbb
dec
lret
or
push
mov
jp
xor
inc
mov
xor
jns
js
rclb
subl
adc
push
dec
sarl
scas
dec
or
lock
pop
stos
pop
inc
fwait
mov
repnz
pop
cmpsb
add
inc
pop
dec
sbb
lock
rorl
and
outsb
mov
shrl
pop
gs
push
or
popf
iret
dec
stos
rorb
xor
and
push
inc
xor
sbb
cmp
xor
enter
test
fwait
mov
mov
imul
test
xchg
rclb
push
fisttps
ds
movsb
loope
sar
leavew
loopne
mov
movl
arpl
jmp
push
in
lock
sbb
adc
adc
imul
or
or
mov
add
adc
dec
adc
push
jo
lods
arpl
imul
fidivrl
testl
fdivrl
fsubrp
sub
ret
addl
orb
cmp
inc
add
movsb
pusha
lds
jp
movsl
jge
adc
mov
sbb
cmp
ja
jbe
adc
xorl
push
roll
xlat
cwtl
mov
add
mov
sbb
cmp
jmp
sub
repnz
fidivrs
test
jg
adc
sub
xchg
pop
lock
xchg
or
add
lahf
icebp
cmp
push
pop
or
xlat
cmp
mov
inc
mov
aam
dec
rol
movsl
into
lock
fadds
in
jecxz
cmp
jecxz
add
push
push
dec
and
pop
fdiv
sub
in
fiadds
aam
and
jp
and
jb
loopne
sahf
orb
cld
nop
xchg
push
ljmp
testb
xchg
jbe
testb
bnd
fcmovu
fsubrl
test
or
imul
xchg
xchg
sub
call
inc
loopne
pop
cmp
cmp
vmwrite
out
gs
and
mov
mov
shr
adc
jg
mov
inc
inc
jae
or
into
dec
lret
inc
cmp
bound
and
cmpsb
xor
sahf
lret
test
popf
cmpl
insb
mov
adc
mov
aaa
pushl
mov
jge
into
in
sbb
adc
mov
out
jno
dec
mov
adc
ret
push
sub
cmp
imul
pop
and
lcall
inc
sbb
and
std
push
sub
xor
sbb
dec
xchg
sub
sbb
adc
mov
sbb
push
xor
sbb
push
mov
dec
jae
xor
adc
cmp
mov
popf
das
sbb
add
popa
mov
add
das
cmp
add
inc
inc
sub
cmp
std
adcl
pop
sub
mov
pop
jle
push
je
pop
sbb
sbb
aam
and
push
push
dec
cld
add
dec
xor
xor
dec
dec
fcomp
daa
addl
push
cmc
insl
hlt
addl
pop
jl
in
mov
add
pop
cmpxchg
mov
hlt
xchg
or
rcll
shr
push
mov
js
xchg
push
xchg
loope
sub
test
cmp
dec
cmpsb
lcall
or
les
scas
adc
dec
sti
fsubs
mov
mov
jmp
aaa
loope
fdivs
movb
in
inc
repnz
dec
push
jns
push
cmp
and
dec
outsl
imul
adc
rcl
mov
cmpl
push
cld
mov
daa
cmp
jae
cmp
cmpb
lret
cmp
out
jbe
add
dec
ror
add
dec
loopne
popa
sub
in
cmp
or
pop
add
fs
cmpsb
clc
xor
out
cwtl
or
cmp
pop
dec
pop
mov
das
inc
lret
adc
inc
or
rcrl
sbb
fwait
inc
cmp
mov
ret
adc
or
push
jle
int3
dec
add
jmp
sar
and
jge
push
or
dec
inc
add
mov
or
test
pop
xchg
out
add
or
movups
scas
fldl
fidivs
pop
sbb
mov
call
loope
int
pop
push
cli
dec
or
dec
daa
fldcw
pushf
push
outsb
push
cmp
or
addr16
aam
scas
push
push
or
or
jg
outsb
adc
or
inc
cmpsl
jl
out
add
cmp
add
popa
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
inc
arpl
div
pop
add
cli
inc
popf
inc
dec
dec
push
mov
push
ss
pop
and
scas
lock
lret
repnz
test
jbe
pop
cmp
sbb
xchg
adc
jmp
ret
xor
je
dec
jne
push
and
sbb
ja
test
pop
pop
fcoms
jmp
xor
add
add
inc
sub
cmp
sub
push
cmp
pop
fmull
bound
gs
cmp
jle
push
icebp
rol
ficoms
cs
orb
mov
clc
daa
cmp
pop
cwtl
xchg
jns
lea
inc
pop
or
stc
cmc
movsb
in
pop
loope
inc
sbb
sub
lea
cmpb
adc
sbb
push
xchg
adc
adc
push
xor
push
lock
das
xor
mov
push
fmuls
and
popf
or
insb
add
mov
inc
pop
inc
mov
jno
in
add
or
push
cmpb
sub
add
and
add
xchg
adc
clc
jge
popf
cmp
lret
imul
add
push
and
sbb
push
sub
push
pop
cmp
and
or
cmp
stos
insl
inc
enter
pop
cmp
ljmp
mov
sbb
push
xor
cltd
imul
or
mov
mov
add
adc
roll
pop
add
leave
sahf
jecxz
shrl
dec
mov
inc
adcb
std
fiadds
insb
sbb
and
pusha
jae
add
or
push
fldenv
mov
and
aaa
rcrb
fs
mov
out
jle
nop
dec
add
push
xchg
mov
inc
fsubl
jecxz
push
inc
inc
bound
scas
pop
dec
or
dec
pop
icebp
pop
adc
fmuls
int3
and
xchg
jne
jg
add
inc
sbb
add
jbe
in
inc
test
rcrb
pop
into
add
xchg
shrl
mov
jg
adc
dec
cld
add
pusha
cmp
jle
out
orb
adc
push
mov
and
push
clc
dec
adc
add
sbb
mov
cmp
sbb
insl
jg
jmp
add
into
inc
adc
je
lods
pusha
add
and
and
fsubl
or
adc
cmp
or
loopne
mov
scas
dec
fadds
pop
jnp
pcmpgtw
pushf
and
lret
adc
dec
aad
pop
mov
jae
scas
or
addb
pop
and
mov
push
inc
bound
sub
push
fwait
lock
adc
cmpsl
adc
and
mov
stos
add
mov
lret
stc
pop
cmp
insb
and
inc
test
shrl
and
lods
jg
jns
pusha
mov
loopne
jo
mov
xlat
je
cmp
pop
je
mov
and
mov
testb
out
push
xchg
testb
cmp
sub
add
cmp
add
push
jmp
inc
lds
add
sbbl
je
cmp
out
jns
sbb
sub
pop
adc
daa
clc
push
push
or
inc
add
push
cmpsb
dec
adc
xchg
push
leave
shlb
jmp
das
xor
mov
outsl
fcoml
mov
repz
push
adcl
aam
pop
mov
pop
es
mov
mov
test
pop
pop
cmc
xchg
mov
nop
outsl
pop
jg
pop
push
sub
mov
mov
push
dec
or
pop
mov
stos
ret
gs
in
leave
dec
inc
stos
fstpl
or
push
inc
mov
jne
sub
in
cmp
stc
add
push
xor
add
xor
add
aam
leave
in
add
cmp
cmc
std
and
mov
add
dec
mov
enter
aaa
push
ja
xor
adc
mov
push
nop
inc
aas
jo
sbb
mov
inc
adc
mov
ljmp
sbbb
xchg
movsb
pop
lahf
je
shll
stc
pop
and
fld
fldcw
xor
insb
jmp
xor
fsubrp
cmp
mov
fstps
icebp
pop
js
jnp
push
rolb
mov
int3
jmp
cmp
fcoms
cmp
test
lea
sbb
bound
pop
je
test
mov
dec
ja
in
in
mov
in
or
lea
mov
mov
mov
test
add
cmpb
lods
push
faddp
jg
mov
or
xor
lret
and
arpl
testl
jno
xor
in
in
lock
add
push
lock
imul
jl
cld
mov
sub
jo
mov
xchg
or
adc
repnz
mov
mov
jge
in
add
dec
jbe
inc
xchg
jbe
rcr
call
or
xchg
dec
es
inc
adc
leave
lock
int3
xchg
dec
or
pusha
cld
loopne
push
and
neg
sub
or
pop
add
in
inc
fildl
adc
pop
xor
xchg
fcoml
andb
xlat
dec
dec
roll
loop
mov
cmpsl
rcr
adc
movsb
fwait
dec
fdivr
lds
inc
shl
mov
sti
add
inc
lahf
fsubr
dec
dec
jb
lahf
in
std
stos
loopne
sbb
ljmp
jge
movsb
or
lock
xchg
push
add
ret
bound
or
int3
jnp
add
or
aaa
call
jmp
jnp
mov
mov
dec
mov
shll
inc
mov
sub
test
popa
adc
in
adc
adc
filds
or
inc
nop
sub
fldcw
imul
fs
inc
xor
xchg
out
sbb
ffreep
pop
nop
pop
inc
jne
fs
sbb
in
pop
es
mov
leave
sbb
inc
push
js
xlat
leave
test
andb
or
cmp
enter
jmp
call
adc
loope
les
dec
fisttpl
test
sbb
push
pop
and
cltd
adc
pop
es
xchg
adc
mov
movsl
loop
pop
fwait
ja
and
out
repnz
outsl
pop
push
jno
pusha
fs
xor
and
insb
jo
leave
and
je
jl
or
sbb
dec
or
inc
call
xchg
xchg
loop
lea
push
lea
fidivrl
xchg
dec
loopne
rcll
nop
dec
shlb
shlb
mov
sub
jbe
mov
fdivrs
popf
jecxz
cmc
jecxz
imul
lock
mov
sbb
cmp
stc
sahf
mov
jo
mov
adc
mov
xor
mov
or
mov
mov
jo
mov
inc
popa
js
lods
add
icebp
cmp
orb
stos
fwait
mov
ret
in
add
fldcw
inc
jl
lret
out
or
insb
cwtl
icebp
adc
cmpb
add
imul
les
pop
add
xchg
or
out
mulb
pop
aad
xor
push
lds
lock
aas
loope
push
out
jns
out
enter
popf
mov
or
sbb
mov
pop
in
sbb
push
fs
test
mov
out
mov
mov
enter
cmp
lock
enter
xor
dec
insl
push
dec
or
add
mov
insl
loopne
cmpsl
dec
jge
inc
mov
fdivl
jne
jmp
push
jl
fldl
stos
sbb
es
mov
in
aam
sbb
sbb
sbb
lret
sub
xchg
dec
mov
and
jle
adc
or
in
in
and
ljmp
leave
sub
add
imul
testb
adc
fiaddl
ret
jb
mov
pop
add
or
xchg
test
test
pop
in
add
inc
add
xchg
fucomip
cmp
fisubl
adc
ja
insb
movsb
add
jl
push
or
rcrl
xchg
stos
xor
jmp
es
jne
jmp
mov
fildl
stos
adc
adc
xor
testl
fs
add
sub
ret
or
add
testl
test
out
cmp
mov
mov
mov
pushf
cmp
movsb
mov
add
pusha
nop
sub
je
add
or
cmp
stc
sbb
lock
or
push
xor
movsl
sub
or
aas
pop
scas
pop
aaa
fucomp
inc
jl
mov
test
insl
and
push
loopne
aam
orl
fwait
lock
sub
in
adc
xor
sub
cmp
or
push
aaa
or
sarl
sbb
movsl
sbb
in
mov
mov
fdivrl
lock
in
xor
add
icebp
rolb
inc
adc
pusha
sbb
jo
inc
xlat
call
sbb
adc
adc
sub
sbb
xor
and
clc
or
mov
nop
nop
inc
repnz
andb
icebp
loopne
ss
movsb
in
pop
push
in
in
cmc
or
push
or
dec
pusha
loopne
loopne
or
cmp
fmuls
xchg
push
test
sbb
xor
test
mov
or
xchg
adc
in
push
and
rep
xor
cmp
add
cltd
dec
pop
repz
adc
fmull
adc
mov
test
ret
cmp
pop
lcall
xchg
and
out
xor
inc
mov
or
adc
std
cmc
xchg
pop
mov
or
enter
or
and
dec
aad
sbb
lock
cwtl
dec
enter
xor
jns
cmc
movsb
punpckhwd
icebp
adc
mov
cmpl
mov
enter
notb
orl
stos
xchg
negb
testb
arpl
adc
add
bound
jnp
add
or
rcll
pop
lcall
cwtl
xor
in
push
fst
dec
pop
idivl
inc
testl
dec
or
in
gs
add
mov
fnstsw
or
fdivl
xlat
add
mov
mov
xlat
addr16
add
mov
call
push
test
rol
adc
fcomp
adc
imul
dec
or
loopne
lods
sar
aas
xchg
adc
inc
sbb
dec
call
mov
ljmp
je
and
popl
jo
popf
enter
xchg
out
mov
enter
mov
dec
fmuls
das
rcrb
push
xor
mov
cli
sbb
adc
stos
add
call
psubsb
scas
dec
jb
and
js
fs
test
in
adcb
adc
movsl
subb
inc
lds
adc
mov
mov
inc
cltd
test
jo
sti
insb
in
movsl
mov
jmp
sar
inc
in
andps
push
sti
in
loop
xchg
mov
loopne
pusha
fiaddl
lock
mov
mov
fldl2e
mov
add
std
jno
mov
jb
in
inc
mov
shl
inc
data16
sub
sbb
sti
pusha
xlat
adc
jb
adc
fstpt
push
jno
std
cwtl
cmpsl
std
lock
inc
push
and
sbb
add
je
stos
loopne
imul
jne
lock
or
mov
pop
xchg
call
cwtl
mov
mov
jmp
jmp
aad
int3
orb
pushf
mov
call
int
push
xchg
dec
es
sbb
or
pop
js
or
push
pop
dec
les
xchg
pop
mov
or
xor
dec
jae
sub
mov
push
leave
adc
in
insl
lock
subb
je
cmp
pusha
xor
adc
pop
xchg
inc
push
mov
js
fstpl
int3
aam
mov
push
add
push
mov
jne
enter
push
add
and
sbb
stc
ret
sbb
xchg
andb
cmp
sar
js
mov
or
mov
add
inc
dec
sbb
rcl
andb
mov
jae
les
or
daa
int3
pinsrw
in
test
mov
int3
insl
stos
mov
pop
aam
subb
enter
mov
mov
and
jb
and
adc
adc
ss
pop
inc
nop
mov
add
sbb
xchg
mov
dec
popf
pop
pusha
insb
dec
dec
dec
repnz
jge
and
add
lods
lea
push
movsb
and
fs
inc
es
aam
es
or
sbb
in
fcoms
or
add
adc
je
mov
sub
push
dec
push
push
cmc
dec
and
rsqrtps
sarb
unpcklps
fcomps
movsb
imul
test
stos
mov
push
jb
jo
lea
repz
and
negb
and
fsts
cmc
mov
or
cmc
lcall
out
fstpl
sub
and
mov
jno
or
inc
adc
mov
outsl
mov
inc
fwait
sub
inc
adcb
sbb
sbb
aaa
test
pop
inc
outsb
and
cmp
sub
imul
aas
pop
pop
lods
insl
mov
ja
sbb
dec
sub
push
lcall
movsb
fdivr
enter
stos
rep
or
lahf
adc
or
test
dec
lret
pop
in
daa
fisttpl
call
call
pop
movsl
and
imul
mov
mov
xor
mov
vpaddusb
and
or
sub
int
dec
es
push
and
sbb
jmp
cmp
xchg
fimull
inc
fs
rolb
inc
pop
lcall
push
int3
daa
adc
sub
inc
fsts
adc
popf
inc
inc
push
mov
inc
test
and
pop
sbb
nop
and
dec
lods
in
pop
lea
and
mov
cmp
pop
adc
push
xor
xchg
push
cmp
adc
sub
nop
jno
sbb
pop
jae
les
mov
cli
cmp
in
and
notb
ret
cmp
sbb
das
push
loop
inc
mov
push
lea
leave
or
in
les
jns
dec
fiaddl
pusha
jnp
movsl
inc
sar
mov
mov
pop
in
dec
xor
adc
out
jno
pop
add
in
mov
or
rcll
test
sbb
outsb
cmp
mov
adc
in
mov
shlb
mov
enter
lods
add
fs
sub
nop
or
sti
or
aad
cs
mulb
nop
inc
pop
mov
test
xchg
adc
test
lods
dec
in
mov
ret
xchg
cmc
mov
fsubl
faddl
imul
xchg
fdivs
xlat
shll
insl
adc
orl
lock
jae
in
push
flds
or
enter
dec
subb
jl
outsb
and
mov
mov
stc
int3
incb
fldl
jge
int3
adc
mov
mov
movsb
xchg
addl
fadds
rclb
push
roll
add
add
adc
mov
adc
mov
jmp
cltd
add
rorb
push
pop
daa
push
pop
iret
call
sbb
push
jb
or
out
enter
add
xchg
lret
sbb
stc
jmp
shlb
push
fdivrl
adc
cwtl
inc
xchg
rclb
les
int3
gs
sbbl
not
repnz
mov
adc
jnp
mov
cs
lcall
jge
movsl
and
mov
inc
enter
loopne
sub
mov
test
ror
dec
cmp
fnsetpm(287
les
shlb
call
sbb
outsb
pop
pusha
pop
test
test
inc
pop
clc
stos
lock
adc
dec
sahf
sub
ret
inc
mov
roll
in
push
mov
dec
mov
sbb
sbb
push
sbb
test
in
sti
lock
popa
movhps
inc
mov
test
lret
push
jne
test
add
xchg
push
pop
aas
cmp
scas
cmp
and
dec
xchg
add
xchg
and
add
mov
loopne
enter
cmpsl
sbb
adcl
sbb
shll
pushf
in
ret
mov
shll
xchg
int3
std
mov
nop
dec
dec
jo
lods
pop
es
test
ret
push
scas
cmpl
xor
sub
ret
sbb
add
mov
xor
jge
addb
imul
movsb
jmp
andl
mov
sub
icebp
mov
dec
mov
jne
push
push
push
sub
sub
push
cwtl
outsb
sub
adc
sbb
lea
fadd
hlt
push
aam
xchg
stc
repnz
push
pop
lds
sbb
clc
popf
mov
int
adc
xchg
dec
repz
inc
addb
mov
push
popf
test
mov
sbb
pop
cs
in
sbbb
nop
adc
cmpsl
adc
jo
enter
and
call
push
push
loopne
mov
xchg
cmp
mov
gs
imul
adc
xor
add
aam
shlb
add
jns
jo
mov
or
xchg
push
movsb
jge
divl
mov
and
lods
dec
cmp
cld
in
fadds
call
xor
loopne
sub
in
aam
mov
and
jne
jmp
xchg
fsubr
mov
mov
movsl
pop
mov
cmp
or
test
add
xorb
and
push
add
sub
mov
fs
imul
sub
repz
push
cmc
or
mov
mov
adc
rcll
xorl
clc
mov
xor
pop
mov
nop
sti
xchg
mov
jp
idivl
and
inc
sbbl
inc
sub
lea
fs
push
insl
pop
mov
push
pusha
cltd
fs
imul
cmp
xchg
dec
es
sbb
inc
dec
es
cmp
jmp
xor
pop
loopne
cmp
cli
daa
inc
cmp
push
jmp
jecxz
out
shlb
jne
jb
pop
decl
loop
sub
sbb
adc
movsb
sub
lea
xor
mov
dec
and
dec
cmp
in
in
or
or
or
stos
add
and
adc
test
push
xchg
faddl
or
shlb
fbstp
add
cmp
sub
jno
loopne
jge
xchg
and
inc
sub
adc
add
and
mov
or
jmp
movsb
sub
lock
xor
test
pop
ret
xchg
adc
adc
sbb
mov
movsl
sbb
in
push
sub
mov
jl
mov
pop
adc
enter
cltd
inc
fmull
inc
int3
fildl
pop
int3
leave
les
cmp
adc
aam
addr16
imul
test
scas
cltd
or
xor
push
pop
adc
shll
push
cmp
sub
xchg
rorb
pop
jnp
aad
pop
aas
out
arpl
xchg
ss
or
cs
and
in
fsubrl
popf
fdivs
pop
push
sbb
xlat
out
repz
daa
adc
mov
adc
xor
adc
sbb
xor
pop
push
sbb
and
xchg
xor
dec
push
xor
mov
push
lcall
pop
sbb
adc
xchg
dec
test
add
imul
mov
lret
movsb
lods
imul
xor
test
or
mov
push
mov
jne
outsl
int3
jmp
pop
xor
jnp
and
push
sub
inc
mov
inc
int
out
jl
adc
xor
and
add
push
popa
sar
test
add
das
loopne
loop
rclb
pop
push
mov
lcall
aam
in
xor
mov
in
int3
daa
in
rorb
pop
cmp
xorl
notl
sbb
enter
xor
xor
inc
inc
test
mov
in
fcmovb
mov
inc
fsubl
adc
lret
push
inc
and
and
mov
insb
jo
ja
ss
sbb
mov
jns
and
gs
xchg
xchg
imul
int
push
ffree
sub
xor
add
and
test
mov
ret
add
aam
adc
and
ja
sub
je
icebp
and
or
mov
icebp
adc
nop
inc
fistl
fiaddl
mov
or
mov
xchg
test
push
subb
imul
inc
popa
insb
lret
out
adc
mov
lock
cmp
mov
xor
mov
push
pushf
cmp
das
pop
bound
aaa
pop
aam
mov
pop
in
loopne
fsubr
fistpll
aam
aaa
es
adc
int
pop
in
cmp
pop
rorb
dec
sub
dec
sub
inc
test
push
add
or
push
push
pushf
mov
adc
or
or
dec
push
rolb
test
mov
xchg
fsubl
add
pop
mov
lds
rcrl
inc
sbb
sub
test
mov
idivl
inc
addb
inc
xor
add
xchg
add
jo
mov
orb
mov
mov
push
cmp
jb
int3
adc
push
pushf
shlb
lods
test
mov
sbb
mov
fs
mov
test
lods
mov
and
pop
daa
daa
mov
xchg
bswap
enter
daa
daa
mov
dec
dec
outsb
lds
mov
imul
xchg
xor
mov
aad
xchg
xchg
pushf
mov
and
cmp
pushf
pushf
pop
lds
or
in
add
jne
stc
mov
lret
inc
inc
sub
mov
iret
jns
sbb
jmp
adc
out
or
jae
cmp
mov
push
jl
in
sbbl
pop
sbb
and
mov
sub
or
pop
movsl
adc
popa
pop
xchg
push
inc
lret
push
scas
adc
orl
dec
nop
rcrl
or
inc
mov
lods
lea
dec
popf
and
cmp
movsl
mov
xchg
mov
stos
inc
lods
adc
lret
push
adc
and
pop
xor
cmp
jmp
sbb
mov
sti
insb
in
or
adcb
mov
add
lahf
pusha
jo
lods
popa
lea
in
xchg
and
repz
pusha
xchg
jl
shrd
les
clc
mov
arpl
movsb
pop
test
cmp
inc
and
mov
jno
cmp
imul
adc
fs
dec
sbb
adc
daa
cltd
push
pusha
mull
or
push
test
cltd
adc
in
test
out
and
sub
inc
xor
pop
sub
sub
ss
into
lds
dec
cltd
pop
scas
add
pop
rorl
insl
dec
xchg
dec
and
mov
inc
clc
jecxz
mov
enter
loop
fldl
in
inc
cwtl
xor
stc
dec
fcom
add
btr
adc
insl
aas
outsl
fdivs
aam
shl
loope
xor
inc
push
or
fmuls
stc
les
std
rcrb
loopne
nopl
arpl
xchg
xlat
and
es
nop
mov
fdiv
inc
test
mov
rcll
imul
in
sbb
xchg
sbb
fwait
or
enter
shlb
pushf
imul
fs
enter
and
jo
scas
rclb
fmul
stc
dec
mov
add
das
mov
xor
mov
movsb
jb
and
sbbb
adc
es
xchg
xorb
lds
rclb
and
fcoms
xchg
xor
aas
mov
loope
push
enter
push
sbb
subl
or
leave
and
inc
xor
mov
movsb
adc
or
adc
in
stos
xchg
add
fs
repnz
adcb
in
ficompl
push
mov
sub
push
repnz
pusha
shll
mov
and
jl
cltd
fs
add
add
addr16
inc
pop
mov
stos
push
mov
std
jo
pop
dec
mov
inc
push
fadd
mov
dec
adcb
cmp
or
mov
std
call
cmp
insl
hlt
daa
or
cmp
aad
xor
in
adc
es
push
and
fcmovu
aad
adc
lea
add
or
jg
insl
insb
imul
leave
push
or
and
add
and
pop
movsb
bound
lds
push
add
sbb
cltd
scas
ss
xlat
cltd
add
icebp
rcl
pop
adc
clc
xor
repz
in
bound
mov
test
orb
in
dec
outsl
sub
int3
shlb
xorl
pop
mov
pop
leave
shll
and
pop
bound
pop
roll
shrb
scas
ret
inc
pop
leave
and
jle
sub
mov
jg
cmp
mov
inc
mov
jbe
lods
test
mov
fmuls
push
adcb
adc
and
or
dec
rcll
hlt
neg
out
call
rcrl
xchg
sub
cmp
sub
sbb
pop
enter
test
dec
and
lea
nop
push
jb
inc
cmp
add
dec
test
and
sbb
mov
dec
jmp
insl
push
popa
aam
xchg
push
andb
rolb
sub
shrb
mov
adc
test
adc
sub
adc
mull
shl
fwait
roll
lods
pop
divb
enter
mov
test
fadds
mov
inc
jnp
sub
mov
rep
negl
and
movsl
enter
and
sbb
mov
or
push
test
adc
test
push
sbb
scas
insl
xor
cltd
adc
or
pushf
sub
or
dec
daa
adc
sub
pop
mov
xorb
adc
cltd
fistpl
push
mov
sub
cmp
repnz
mov
xorl
push
add
sub
aas
ret
in
sbb
xorl
cmp
pop
cmp
jno
dec
imul
movsb
mov
fs
sub
repnz
pop
push
enter
insl
mov
lods
jbe
push
popf
mov
sbb
jns
and
cli
inc
mov
jmp
cli
jg
xchg
and
enter
push
add
scas
test
push
leave
repz
cwtl
fildl
enter
cmp
je
sbb
std
and
cmpsb
shlb
sbb
xor
mov
das
sub
gs
sbb
andb
xor
scas
pusha
cmp
jns
or
cmp
or
shlb
clc
mov
xchg
inc
adc
lods
bound
mov
sbb
cmp
es
je
jns
and
pop
sbb
cmp
add
fdivr
mov
jbe
inc
int
mov
sub
stc
jb
imul
pop
sbb
mov
je
mov
mov
sub
xchg
adc
mov
sbb
pop
roll
add
or
jbe
sub
insl
lods
subb
push
rcrb
not
xchg
adc
adc
lods
adc
xchg
cwtl
mov
icebp
movsb
pop
inc
jno
mov
jae
push
pop
mov
xchg
inc
mov
adc
mov
push
push
xchg
mov
inc
xchg
fidivrl
mov
adc
nop
mov
adc
jle
int3
add
add
jmp
bound
mov
pop
add
adc
fnsave
cmc
sub
fcomip
jbe
push
aaa
cmp
fmul
sarb
add
dec
add
fnsave
inc
pop
xor
lret
popa
imul
xchg
sbb
fsubrl
xor
xchg
mov
leave
and
call
ja
xor
es
mov
sub
addr16
fistpll
and
movl
out
mov
add
call
je
add
pop
sub
xor
rorl
push
std
pop
inc
push
cmp
into
or
pop
in
fcmovnbe
cmp
xchg
lea
push
and
scas
add
pusha
mov
mov
pop
mov
mov
aas
dec
inc
lret
cmc
push
movsb
or
sub
inc
push
fs
aam
rol
pop
fs
adc
xor
add
xor
arpl
notb
movsb
in
mov
add
scas
push
push
xchg
and
lcall
stos
pushf
jmp
loope
scas
push
pop
push
mov
mov
popf
jl
dec
aaa
fucomip
xchg
mov
addb
iret
sar
mov
jns
mov
sahf
addr16
lock
pop
jns
out
imul
jns
in
dec
pop
push
and
insb
fildl
add
push
xchg
mov
sti
fsubr
mov
shrb
xor
std
iret
cs
loopne
and
sarb
outsl
clc
jnp
mov
add
or
adc
mov
rcll
xchg
adc
mov
or
outsl
cmp
adc
mov
test
add
nop
add
mov
in
pop
adc
test
and
jns
mov
or
add
cli
in
push
pop
jo
add
dec
mov
sbb
xor
insl
fiadds
jnp
pop
sub
lahf
push
mov
popa
and
insb
outsl
arpl
imul
jg
sub
jb
sub
popa
arpl
jne
jb
outsb
je
add
divl
add
push
insl
adc
mov
out
and
outsl
jb
js
je
jb
gs
sahf
jg
mov
add
jb
add
add
add
imul
jne
les
inc
and
jb
daa
test
fisttpll
add
dec
add
sbb
or
es
add
inc
xor
inc
push
call
inc
aas
push
add
in
fidivl
dec
add
sub
push
insl
rol
pop
xchg
je
je
and
jae
divl
dec
adc
fistpll
fildll
push
or
bound
jns
push
jne
imul
or
jbe
out
divb
insb
jp
outsl
or
out
fisttpl
or
imull
lret
aas
and
outsl
jmp
xchg
out
mov
arpl
xor
mull
lret
stos
insl
sub
push
imul
nop
loopne
ja
cmp
cs
jne
inc
push
data16
or
idivb
sbb
fs
or
mov
repz
pop
or
ret
lahf
popa
push
outsb
pop
inc
arpl
or
mul
fidivl
daa
dec
jbe
mov
fbstp
outsb
bound
ret
jge
adc
sbb
jo
pop
lock
outsl
fistpl
xor
scas
test
fbstp
mov
mov
xor
or
ret
fidivrl
cs
sub
adc
shll
sbbl
mov
jg
lock
or
shll
outsl
xchg
lahf
mov
jg
dec
nop
add
pop
mov
stos
dec
fbstp
jne
jbe
jb
xor
jae
pop
rorl
inc
jnp
pop
stos
bnd
das
ret
mov
mov
sub
fsubs
fistps
or
scas
jne
add
sbb
fdivs
xchg
orl
sti
je
jecxz
stos
fs
imul
arpl
mov
pop
es
paddb
mov
xor
add
mov
xchg
stos
jne
mov
pop
and
pop
stos
pop
dec
jnp
mov
lret
je
scas
cmp
loope
test
fisubs
mov
scas
data16
adcl
adc
mov
int3
push
addb
ja
xor
add
js
cmp
lret
and
out
enter
sub
das
inc
mov
adc
mov
sbb
jmp
sbb
cmp
push
ljmp
and
enter
fdivrs
jns
jp
mov
jae
cld
pushf
lcall
clc
mov
cmp
aaa
add
sbbl
sub
push
push
push
mov
out
fcmovne
or
pop
mov
pandn
out
xchg
ja
fbstp
or
shll
cmpsl
push
negl
pusha
fwait
cmp
loope
sbb
add
cmp
pop
add
and
add
stos
and
and
or
jbe
testb
push
push
sub
test
dec
inc
jmp
aad
or
je
dec
idivl
adc
xchg
mov
mov
jmp
ds
daa
outsl
sbb
rcr
and
fadds
pop
neg
outsb
fucomi
iret
jns
out
out
dec
outsl
sbb
and
mov
inc
pop
pop
cmp
jmp
jp
jae
push
and
fdivs
jne
dec
fcmovnu
dec
mov
pop
divl
mov
insl
mov
cld
inc
fdivrs
cmp
cmp
stc
imul
dec
and
mov
cmpsb
mov
das
das
jns
push
dec
push
inc
pop
sti
arpl
bound
dec
outsl
jbe
dec
arpl
add
jo
sub
addr16
cld
inc
jnp
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
cmp
out
popf
inc
popa
outsb
adc
out
jae
xchg
popl
ja
out
mov
je
jb
xor
outsl
in
push
push
gs
sbb
out
sti
cmp
push
jne
xchg
popf
jbe
cmp
inc
aas
add
ds
xor
jnp
mov
out
add
insb
jae
push
push
shlb
popa
insb
jne
inc
inc
and
test
dec
adc
es
sub
sub
ljmp
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
aam
sar
dec
dec
dec
dec
dec
pusha
push
push
dec
xor
sbb
pop
pop
pop
pop
pop
xor
or
bound
gs
imul
jo
add
jbe
pop
movsb
pushl
jns
jnp
jge
jg
adc
lcall
mov
and
add
popa
fistpll
orb
sar
lret
jno
loop
stc
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
sbb
outsl
das
cmp
jmp
add
jo
xor
popa
js
addl
ret
dec
pop
sbb
out
loopne
sahf
pusha
ret
ret
sub
imul
stos
mov
mov
push
add
add
add
loop
push
pop
and
push
pop
push
add
xor
mov
push
add
hlt
and
add
pusha
push
fsts
js
or
cmp
add
std
fcmovnu
xor
sbb
addb
add
xchg
imul
addb
add
orb
daa
push
cmpb
push
and
sub
ja
xor
int3
push
jo
rolb
add
xchg
push
outsb
imul
jo
adc
dec
or
les
pop
adc
mov
fcmovu
and
sbb
add
lea
xchg
pop
jb
mov
leave
and
sub
add
movsl
and
jo
mov
dec
fsub
hlt
add
push
cli
pop
lods
mov
push
stos
in
add
ror
jmp
sbb
cmp
rcrl
arpl
push
push
inc
sub
dec
push
sub
dec
inc
pop
dec
dec
inc
dec
inc
adc
sbb
cwtl
notl
fs
je
or
cmp
dec
dec
bound
je
outsb
sbb
xor
push
jbe
dec
out
je
cmpsb
add
xchg
daa
negb
mov
outsl
js
jg
pop
scas
push
inc
cs
and
insl
jo
movsl
into
mov
jo
and
and
daa
aas
inc
lock
insb
les
dec
imul
imul
mov
ds
cmp
dec
dec
dec
insb
jnp
jb
jns
daa
pop
and
aaa
xchg
mov
jne
aas
je
and
arpl
je
and
mov
outsb
jle
dec
aaa
push
fdivl
or
fchs
mov
jb
and
xor
mov
push
push
lahf
es
cmp
insl
and
lods
jp
ja
andb
xchg
pushw
jbe
xor
imul
aas
pusha
gs
xor
and
pop
inc
push
dec
adc
adc
popa
push
outsb
pop
popa
jnp
mov
push
jae
jecxz
push
or
cmp
aam
subl
mov
push
subl
gs
and
mov
or
xchg
inc
push
push
push
push
dec
test
dec
push
jne
repnz
push
mov
fistps
outsb
les
push
ret
add
loope
shrl
push
imul
call
sbb
jae
nop
shll
xor
rclb
xchg
das
gs
sbb
mov
push
inc
jg
aaa
mov
subl
push
or
lods
sbb
pop
das
je
xlat
arpl
outsl
xchg
daa
xchg
mov
fisubl
daa
popw
pop
cmp
neg
idivb
or
ds
and
sub
inc
jl
push
addr16
jle
roll
add
repz
je
add
sub
jo
jnp
pop
or
sbb
das
push
jb
sbb
movsb
ret
aaa
aaa
and
push
call
xchg
ds
scas
ficomps
jne
stos
addr16
push
sbb
jbe
sbb
jo
shl
or
ss
gs
imul
xchg
addr16
dec
sbb
lods
test
add
inc
pop
sub
adc
push
jl
pop
mov
push
out
sub
cmp
fwait
out
sahf
xor
sbb
add
clc
or
repz
call
outsl
and
push
enter
iret
repz
mov
lods
test
iret
repz
cwtl
xchg
nop
mov
jnp
out
mov
cmp
or
cmp
pusha
push
pop
out
sahf
out
push
push
dec
dec
sahf
out
sahf
inc
inc
cmp
xor
jns
out
sub
adc
add
cmp
mov
call
addr16
push
call
les
sahf
out
inc
xor
or
cld
repz
repz
shlb
sti
into
cmp
stc
lock
int3
stc
xchg
out
fstpl
mov
jg
and
fdivrp
inc
clc
push
push
sub
out
jb
test
and
sub
sbb
mov
adc
test
addl
add
add
sbb
push
and
add
adc
adc
xchg
push
and
add
mov
enter
add
dec
add
pop
dec
add
adc
pusha
jnp
adc
mov
xor
xchg
jle
add
decl
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
lcall
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fdivr
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
sub
stc
cli
sti
cld
std
jmp
add
push
stos
cmp
push
test
adc
loop
and
cli
jg
pop
outsb
gs
popa
data16
pop
repz
xchg
shlb
cmp
xchg
cli
xor
data16
add
add
jns
outsl
dec
arpl
aad
mov
inc
insb
fs
sbb
fidivrs
repz
xor
jg
mov
pcmpgtw
xor
cmp
adc
push
jns
pop
add
push
xor
push
dec
inc
dec
cmovns
add
jmp
sbb
adc
sub
adc
dec
mov
mov
lcall
xor
jnp
inc
loop
mov
ds
cmp
pusha
pop
adc
clc
lret
sbb
jb
xchg
jge
arpl
cmp
jg
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
aas
sbb
incl
mov
out
fcoml
mov
or
insb
mov
les
dec
out
leave
ljmp
orb
mov
jle
dec
mov
incl
and
repz
xor
aas
mov
pop
dec
enter
repnz
and
mov
sahf
mov
fcompp
add
add
dec
sbb
adc
dec
add
mov
dec
vmptrld
dec
daa
xor
jmp
loopne
sub
fildl
sub
mov
add
andl
add
dec
jns
lock
xchg
pop
and
dec
dec
aaa
pop
fwait
imul
outsb
addr16
pop
shl
es
jae
lret
sub
mov
test
push
data16
scas
addl
adc
xchg
push
cmpps
cmp
adc
jg
push
call
aaa
pcmpeqw
mov
mov
sti
or
jo
pop
daa
fisttpl
daa
je
and
jae
insb
lods
pop
call
lahf
loopne
pop
or
jmp
xchg
loope
add
lret
xchg
ret
out
addb
testb
sbb
lock
pop
mov
jg
push
les
push
pop
lahf
test
mov
jae
jae
insl
loope
lock
jle
fs
mov
pusha
in
pop
cmpsl
mov
adc
jmp
movswl
mull
repz
out
fistpll
pop
out
mov
mov
mov
loope
and
xchg
cmpsl
lods
mov
mov
cwtl
ret
jecxz
adc
out
jo
loopne
sti
sbb
jns
rorl
jg,pn
mov
fisubs
mov
push
xlat
adc
jmp
call
js
sub
popa
mov
aas
cmpsl
out
sbb
inc
add
sti
sahf
test
cmp
pop
pop
mov
loope
insb
xchg
dec
push
lods
mov
push
imul
emms
inc
es
es
sti
cmp
divl
cmp
mov
daa
out
xchg
nop
bound
fldl
insl
ret
pop
inc
or
dec
dec
mov
aas
xchg
gs
xchg
lea
dec
jp
xchg
add
ja
pop
jecxz
push
lahf
data16
mov
dec
insb
push
pop
adc
or
pop
inc
addr16
mov
xlat
addr16
je
or
je
and
arpl
jbe
aas
arpl
daa
pop
arpl
dec
aaa
pop
addb
gs
jne
or
das
xor
and
ret
or
and
pop
stos
pop
inc
andl
mov
add
add
imul
add
ja
stos
sarl
inc
sub
inc
mov
daa
jmp
push
out
ss
scas
or
sti
mov
jo
add
mov
sbb
into
ds
mov
addr16
push
mov
adc
sbb
pop
call
inc
mov
arpl
mov
jl
or
dec
popa
jae
or
enter
or
xor
push
js
jae
ja
cmpsl
inc
loope
out
out
inc
pop
enter
adc
aaa
pop
fistpl
jnp
or
add
pop
mov
jp
jne
dec
outsl
push
sub
sub
stos
or
jle
and
divl
mov
add
dec
adc
aas
cmpsb
pop
aas
dec
imul
push
pop
jmp
inc
call
loop
js
pop
out
push
mov
js
mov
arpl
loopne
xor
inc
outsb
aad
or
mov
jb
sub
pusha
push
sub
outsb
sti
mov
and
jle
pop
cmpsl
mul
jecxz
stos
inc
mull
jae
cmp
pop
mov
addr16
lret
and
js
or
pop
scas
mov
aaa
jno
jo
and
pop
testl
aas
jmp
adc
shlb
inc
addr16
add
aaa
aas
ja
mov
cs
xlat
pop
shr
pop
adc
ja
es
ss
ret
addl
push
inc
jnp
sbb
xchg
jnp
arpl
dec
insb
xchg
ja
in
pop
inc
inc
sbb
sbb
inc
sarl
pusha
imul
inc
ss
mov
and
fdivrl
dec
sbb
jno
push
pop
je
or
cmc
iret
pop
pop
por
scas
adc
pop
sbbl
sub
inc
bound
outsl
mov
andb
lock
mov
cmpsl
xchg
inc
arpl
cmpb
pop
pop
push
jb
inc
jle
inc
cs
or
mov
mov
fadds
jmp
pop
fucomip
mov
imul
sbb
lock
out
mov
lret
sbb
mov
repz
mov
mov
jl
cmp
bnd
ret
aad
jnp
gs
jl
sbb
fwait
jno
jecxz
push
jo
ja
jl
pop
jnp
mov
ret
jmp
es
arpl
cmp
mov
pop
in
pop
pop
ja
outsb
mov
popf
outsb
cs
pop
out
cwtl
dec
lea
shlb
jno
dec
loop
xchg
imul
lret
jl
pushf
add
bound
jns
clc
mov
mov
adc
pop
aaa
aaa
mov
lods
sub
iret
imul
jge
jl
xchg
jl
fdivs
repnz
out
adc
jle
es
flds
xchg
js
nop
and
push
push
pop
pop
incl
outsl
or
stos
push
dec
xchg
add
pop
fstpt
mov
test
clc
pop
daa
mov
pop
push
movb
fs
bound
inc
sub
or
scas
dec
adc
lea
pop
jg
pop
mov
add
mov
outsb
xor
pop
pop
xlat
aad
push
iret
xorl
pop
sbb
divl
push
xchg
insb
mov
test
inc
aas
popa
jbe
add
aaa
mov
pop
sub
jg
test
addr16
xor
aaa
push
pandn
insl
xchg
mov
dec
daa
push
aam
or
push
cmp
loop
aaa
or
dec
outsl
movsl
scas
xchg
ss
or
jle
adcl
popl
add
jnp
mov
arpl
jge
sub
shr
cmp
mov
xor
cwtl
push
inc
add
inc
fistpl
sahf
lds
jno,pn
xchg
rol
iret
jbe
fisubs
push
mov
inc
dec
jge
ss
cmp
test
dec
js
adc
iret
push
dec
aas
mov
inc
cltd
dec
aaa
pop
xorb
xchg
cld
data16
daa
push
sbb
fimuls
push
sub
jns
repz
scas
push
mov
sub
adc
mov
cmp
out
push
shl
dec
test
pushf
sahf
xchg
aad
dec
test
mov
dec
and
mov
je
jg
test
jg
fwait
cmc
and
mov
arpl
ret
ret
mov
aaa
dec
and
arpl
or
add
and
scas
push
outsl
jae
mov
mov
jae
pop
pop
imul
outsb
arpl
push
jo
jle
gs
insl
pusha
push
popa
jne
or
insb
ret
cmpsl
out
and
dec
bound
xor
xor
jle
cmp
insl
push
inc
arpl
sub
mov
sahf
int
stc
std
fs
pop
shrl
sahf
out
mov
lahf
push
sub
inc
pusha
addr16
iret
rep
data16
test
out
insb
push
in
ds
sbb
clc
ljmp
jb
jno
sub
cltd
insb
je
cmp
out
push
or
push
jo
jb
sahf
jb
pushf
mov
add
and
inc
sbb
subl
xor
and
and
and
arpl
les
sti
xor
cmp
fs
adc
adc
loop
imulb
mov
outsb
je
orl
imul
dec
outsw
sub
ja
or
cmp
sbb
aaa
push
movsl
add
aas
push
mov
popf
mov
ljmp
mov
inc
fwait
push
cmpsl
xchg
push
scas
out
pop
loop
ja
inc
push
ja
push
pop
inc
push
adc
add
dec
fsubs
sub
orl
ss
stos
pop
pop
and
xlat
jp
and
pop
push
and
cmpl
arpl
lcall
add
jl
adc
rorb
sbb
negb
jbe
fcompl
push
xchg
push
add
push
sbb
ja
add
ja
gs
push
sahf
or
mov
or
imul
push
lret
aad
mov
ja
push
stos
add
and
fs
fstpl
bound
sahf
call
mov
fisttpl
movsl
inc
lods
sbb
sarb
and
mov
fisubl
testb
shll
pop
dec
les
dec
push
jnp
iret
pusha
ljmp
mov
mov
sbb
lods
push
push
adc
push
adc
pop
arpl
mov
push
adc
call
jg
jp
lock
dec
stos
sti
dec
push
mov
mov
gs
repz
iret
and
sub
inc
and
mov
es
mov
sahf
pop
inc
outsl
mov
or
not
lods
xchg
add
outsl
mov
xchg
movsl
shll
push
inc
mov
xor
mov
add
adc
and
xor
iret
imul
mov
das
pusha
jae,pn
out
jb
sbb
data16
add
loope
test
dec
fbstp
pop
bound
icebp
adc
call
outsl
cmp
jb
fs
test
inc
jbe
mov
imul
inc
sahf
iret
pop
test
or
xchg
fwait
jbe
out
add
push
int3
fdivr
out
call
or
adc
and
pop
sub
add
mov
push
loopne
lahf
xor
mov
add
mov
mov
jg
mov
push
adc
or
pop
push
addr16
sub
out
sti
add
sub
mov
or
pop
xchg
lods
mov
inc
jg
push
imul
sbb
add
rolb
out
fadds
adc
movhps
xchg
addr16
xor
mov
jo
add
xorb
jns
dec
dec
jp
out
out
test
cmp
push
cmp
lahf
push
adc
dec
push
dec
imul
rorl
mov
push
pop
push
lods
js
jb
jb
or
stos
inc
cmp
mov
sub
or
loope
dec
cmpsl
push
mov
pop
push
lahf
and
cmpsl
mov
dec
xchg
movb
neg
push
fdivs
imul
outsb
jae
sbb
adc
mov
inc
or
mov
mov
sbb
push
sbb
outsl
cmp
lods
addr16
push
imul
subl
mov
jae
mov
aaa
mov
xchg
mov
push
fldcw
and
push
in
lods
data16
das
rolb
imul
jecxz
imul
ret
rclb
pop
cmpsl
je
push
push
dec
push
es
sub
mov
shr
imul
add
dec
cmp
shl
testb
mov
lret
jmp
mov
inc
add
movsb
insl
scas
lcall
mov
ds
push
sub
dec
in
daa
fists
loope
sub
fs
fiadds
push
xchg
ja
ljmp
out
js
je
push
arpl
dec
mov
ret
in
mov
push
pop
mov
push
andb
jnp
jb
out
push
roll
inc
arpl
loop
jp
lahf
ss
xor
add
test
adc
xchg
adc
xor
je
arpl
cmpsl
lahf
dec
xor
aaa
xor
push
push
sub
es
xchg
add
popa
outsl
inc
loopne
clc
jp
outsl
aaa
dec
shll
mov
ja
jae
cmpsl
push
jle
scas
lahf
sub
or
pop
xlat
sbb
adc
mov
imul
pop
xor
inc
lahf
out
fwait
arpl
iret
and
lods
pusha
mov
jmp
add
push
xor
test
jecxz
mov
test
xchg
aaa
push
xchg
adc
fs
sub
add
jne
arpl
imul
aas
in
or
sub
or
pop
push
inc
mov
sbb
inc
sub
mov
xchg
sub
aas
xlat
mov
aas
das
outsl
push
fwait
cwtl
test
dec
inc
add
dec
stos
pop
xlat
mov
ss
add
cmp
xor
sub
test
mov
fs
cmpsb
inc
sub
push
cmp
rorl
outsl
stos
js
push
or
lahf
pop
pop
sub
lods
adc
xor
das
je
add
cmp
pop
sbb
mov
inc
mov
pop
rcrl
push
xadd
rorb
cmpsl
and
sbb
inc
inc
add
ret
out
jo
jo
mov
push
nopl
push
mov
cmp
push
jae
shlb
adc
bound
mov
inc
jmp
loope
xchg
jae
arpl
out
pop
mov
adcb
adc
mov
sbbb
scas
xor
movzwl
sbb
xor
sub
sub
popa
adc
mov
es
rsqrtps
testb
inc
das
jb
pop
mov
push
push
mov
andl
jo
sbb
push
adcl
fisubs
jle
dec
mov
jmp
pop
repz
sbb
dec
push
mov
lods
inc
scas
inc
add
vmovdqu
mull
aaa
lock
dec
gs
mov
outsl
aas
outsl
iret
ds
call
outsl
and
fldl
mov
jnp
sbb
sbb
jmp
scas
pop
or
adc
xchg
mov
sub
inc
push
pusha
adc
rcrb
rep
mov
lock
test
div
notl
insl
lods
xchg
xorl
pop
pop
add
cmp
and
insb
fucomp
popa
push
add
fnstcw
add
dec
stos
add
ss
xchg
push
xor
loop
pusha
or
mov
pop
add
fwait
out
insl
mov
push
es
dec
pop
outsb
bound
cmpsl
sbb
mov
dec
inc
das
dec
or
js
xor
cmpsl
arpl
xorl
push
lret
pop
inc
lods
mov
sbb
incl
jno
inc
divl
dec
pop
add
push
fbstp
sbb
sub
pop
pop
jo
subl
sbb
dec
xchg
add
shlb
inc
lods
sbb
ret
outsl
sti
int3
push
insb
pop
arpl
mov
push
daa
cmp
pop
lods
sbb
aas
fcoml
stos
mov
mov
pop
or
lret
mov
adc
jg
xor
adc
aam
mov
sbb
add
xor
adc
cmpsl
iret
push
cs
pop
add
inc
sub
mov
dec
jmp
adc
scas
das
and
add
iret
pop
jne
sbb
jecxz
pop
popa
lods
mov
repz
or
das
pop
xlat
mov
push
shll
xchg
sub
mov
push
addl
pop
inc
jbe
push
inc
imul
xchg
pop
and
dec
adc
pusha
inc
xorl
add
sbbb
jge
popf
jo
fcos
push
fisubrs
and
or
clc
scas
mov
outsb
sbb
push
xchg
aaa
aaa
sahf
nop
push
jge
add
insl
cwtl
or
add
sbb
es
mov
xchg
ljmp
add
jmp
xchg
push
insl
arpl
bound
add
mov
test
pop
fwait
in
jge
dec
pop
push
adc
daa
and
das
inc
pushf
dec
sub
lods
cmpsl
xchg
stos
in
or
mov
push
push
lods
les
dec
scas
and
jl
stos
mov
mov
push
jb
stos
in
xor
test
pop
test
xchg
stos
in
clc
movsb
push
jb
mov
fisubrl
or
pop
and
push
xor
adc
movsl
dec
mov
leave
movsl
movsl
adc
movsb
rcl
mov
push
leave
push
mov
pushf
dec
dec
mov
in
push
mov
mov
cmp
dec
jne
mov
push
mov
aad
dec
scas
cwtl
mov
in
push
jb
sahf
test
sahf
pop
push
lods
xchg
pop
fistps
dec
xlat
jno
adc
and
cwtl
pop
and
inc
mov
push
and
jg
loop
daa
movsb
sbb
pop
rorl
rol
out
xchg
ret
imul
inc
popl
insl
sub
inc
jb
lds
pusha
fbld
das
inc
xlat
dec
pop
dec
sub
xor
jo
out
aas
pop
sub
mov
xchg
outsb
xchg
nop
jae
imul
adc
aas
inc
dec
and
shl
fildll
or
cmpsl
pusha
aam
ss
not
adc
push
cmpsl
inc
or
pusha
shlb
mov
adc
dec
cmove
pusha
push
xchg
subl
dec
aas
push
inc
sub
lcall
movsl
mov
dec
xor
push
das
mov
outsl
lods
add
mov
int
add
pop
push
scas
addr16
xor
adc
neg
xor
and
inc
push
mov
scas
push
inc
rcrl
lahf
adc
inc
sub
add
pop
lea
add
push
push
test
loope
nop
cmp
pop
and
incl
nop
pusha
das
out
aaa
or
iret
xchg
scas
pusha
add
movl
nop
imul
push
adc
inc
jecxz
roll
xor
lahf
sbb
pusha
lods
mov
xorb
aas
jg
mov
pusha
pushl
mov
jg
aaa
xor
adc
ja
push
inc
or
or
pop
aaa
xchg
shll
iret
inc
aaa
push
sbb
pushf
test
jecxz
cmp
push
push
push
adc
push
outsl
outsl
jbe
inc
insl
inc
cmpsl
push
ret
dec
call
xchg
add
std
and
xlat
pop
or
loopne
fcomps
and
pop
inc
inc
aaa
pop
pop
add
sub
jnp
add
mov
pop
sub
xor
rol
xchg
out
push
xchg
mov
push
into
bound
es
or
bound
fndisi(8087
outsb
cmp
cmp
add
std
pop
jne
addr16
bound
ja
je
or
iret
mov
fdivl
cs
sub
cwtl
js
jo
cmp
adc
lods
push
push
pop
imul
xor
lds
les
in
push
xchg
add
ss
pop
dec
dec
mov
popa
jae
js
outsl
dec
js
mov
xor
xor
inc
bound
mulb
mov
daa
xor
fisubl
iret
and
pusha
rcl
inc
mov
stos
add
fiadds
or
adc
out
pop
sbb
jns
out
push
andl
popf
rorl
add
stc
xor
xor
add
pop
push
aam
pop
adc
xor
pop
das
adc
jns
insb
fstpt
sub
xor
inc
mov
mov
gs
mov
mov
sbb
push
popa
xchg
add
shrb
ret
sub
ss
int
shrb
xchg
pop
adc
int
shll
pop
add
xchg
mov
insb
mov
push
push
dec
str
jne
cwtl
gs
shlb
stc
das
jmp
jns
roll
mov
dec
push
mov
ja
int3
std
mov
sahf
int
push
sub
notb
outsb
ss
mov
aam
in
add
adc
xlat
rorb
pop
mov
cmp
push
insb
dec
hlt
xchg
ljmp
orl
mov
ja
jb
add
jne
inc
push
inc
lods
arpl
xchg
add
adcl
jne
fwait
lahf
jne
inc
and
or
mov
stos
mov
inc
lods
inc
movsb
pop
daa
lahf
xor
or
sub
adc
aas
into
jl
mov
divl
mov
cs
shr
rcll
dec
movzbl
add
rol
es
cmp
adc
pop
daa
push
es
and
or
ret
pxor
add
addr16
nop
mov
lret
mov
fiadds
push
inc
mov
test
xchg
xchg
push
loope
je
xchg
adcl
fisubrl
iret
cmp
bound
pop
adc
loope
inc
pop
lds
ja
lods
or
xorl
mov
push
jbe
xorb
ja
dec
jecxz
aad
es
sub
shr
jmp
push
sahf
push
cs
cmp
out
xor
in
mov
aaa
out
es
add
jns
out
xchg
out
jne
mov
push
xchg
cmp
jnp
xor
jae
fs
clc
lock
xchg
push
je
xor
pop
loop
push
cmp
pop
xlat
dec
shlb
outsl
mov
testl
inc
jle
jl
add
js
xor
inc
cmp
and
fwait
xchg
jbe
call
or
inc
push
loop
inc
mov
jbe
push
dec
mov
bound
cltd
js
shll
aam
mov
jp
inc
cs
lret
mov
cmp
push
sysret
out
pusha
cmpsb
xchg
ja
retw
jnp
imul
fidivs
fidivrs
sbb
mov
out
mov
out
out
inc
mov
ret
iret
cmp
push
dec
dec
daa
out
push
call
mov
cs
sub
dec
xor
imul
pop
pop
mov
ja
mov
dec
ss
outsb
pop
push
push
jl,pt
fbstp
daa
dec
jb
das
inc
pop
dec
cmp
dec
das
add
and
mov
or
sysexit
mov
mov
dec
sahf
push
outsl
div
push
push
push
sub
jnp
mov
xor
push
scas
push
insl
mov
inc
js
mov
xor
push
jp,pt
jp
cmp
lods
add
ds
fiaddl
loopne
fldt
xor
ret
jnp
jp
pop
outsl
pop
outsl
sbb
pop
orl
js
push
into
xor
pop
sub
pop
and
imul
leave
add
push
mov
dec
xor
dec
imul
cmp
aaa
dec
test
movsb
mov
outsl
xlat
lret
outsl
scas
mov
scas
outsb
add
sub
inc
push
ret
pop
add
sub
sarb
incl
push
inc
inc
fistpl
sbb
popf
clc
addb
mov
adc
xchg
or
out
adc
es
xchg
lds
xchg
mov
ret
xchg
jg
mov
cmp
pusha
lahf
shlb
lret
xor
adc
xchg
ja
push
mov
mov
in
pop
addl
mulb
les
subb
outsb
push
arpl
adc
add
shrl
lret
mov
pop
mov
lahf
push
mov
add
mov
rcll
lahf
sub
mov
sbb
jmp
inc
jo
dec
dec
push
sbb
mov
sahf
xor
dec
outsb
mov
cs
mov
push
lods
xchg
mov
inc
aaa
push
xchg
test
sub
add
psubsb
insb
outsl
popa
fs
outsl
jl
mov
aas
add
lods
push
testl
testb
daa
cmpsl
add
push
add
pop
mov
adc
adc
scas
dec
mov
aam
cs
add
jbe
fs
mov
gs
sbb
push
xor
orb
add
xor
movq
ja
movsb
jae
arpl
fstpt
xchg
or
xchg
cmc
mov
add
cmp
pushf
pop
test
inc
pushf
add
jl
in
nop
add
mov
xchg
xchg
push
cmp
jo
sub
xor
add
fstpl
pop
ja
xor
xor
push
inc
test
mov
pop
mov
or
int
push
arpl
jmp
je
test
xor
lds
sbb
mov
sbb
ss
lret
outsl
adcb
sub
das
adc
stos
out
mov
mov
fisubrs
cld
mov
lahf
fsubr
cmc
cli
sbb
sub
pop
adc
aam
xchg
add
jmp
xorl
fisubl
push
test
sub
cmpsb
adc
xchg
bound
mov
das
aam
stos
ret
dec
inc
mov
adc
pop
pop
popa
fldt
xor
sbb
lods
sbb
iret
mov
push
mov
lahf
lods
push
sbbl
sub
imul
fstpt
aad
shrb
scas
sbbl
dec
inc
daa
jns
or
subb
sub
dec
push
arpl
out
xchg
daa
jbe
sbb
dec
int
lods
inc
outsl
call
addr16
das
repz
xor
insb
aam
or
call
inc
inc
enter
mov
add
sub
test
mov
mov
adc
jle
push
sarb
mov
add
das
mov
ja
mov
inc
aas
lock
inc
neg
sub
imul
lahf
sub
fsin
jo
mov
add
int
push
mov
fstpl
push
int
push
shl
outsb
push
enter
mov
jbe
or
das
mov
dec
mov
shlb
faddl
adc
xlat
pop
insb
and
and
incl
aam
adc
and
mov
add
in
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
sti
je
adc
cli
mov
sub
sub
jg
sbb
mov
sbb
mov
ds
pop
sbb
mov
or
xor
mov
dec
fsubs
pop
insb
pusha
pop
sbb
mov
pop
dec
xchg
loopne
mov
jecxz
dec
push
pop
inc
jbe,pn
adc
adc
outsl
call
mov
push
in
or
imul
pop
test
scas
or
mov
cmpsl
and
mov
mov
or
dec
repnz
imul
inc
sub
xchg
dec
dec
xor
and
repnz
mov
hlt
xor
leave
dec
dec
in
aam
les
dec
es
dec
xchg
inc
lods
adc
pusha
outsl
shl
add
fbld
into
pop
mov
das
mov
decl
aaa
mov
inc
dec
cmc
mov
sbb
pop
js
pop
jae
pop
jnp
or
sbbb
xor
bound
mov
ss
cmp
sub
pop
xor
inc
adc
inc
push
addb
sbb
inc
addr16
sbb
jnp
addl
cmp
jl
pop
dec
cmp
mov
testl
add
add
pop
es
xchg
imul
bound
je
bound
imul
add
cmp
xchg
pop
in
stos
test
add
lock
and
insb
push
imul
pop
inc
aaa
push
jg
and
push
test
xlat
adcl
test
popl
das
popa
aam
push
cs
aam
xlat
push
dec
inc
andl
pop
dec
push
push
jmp
or
scas
mov
je
or
shld
or
mov
xchg
outsb
ljmp
inc
lods
xor
xlat
xorl
sbb
push
add
inc
add
sarb
push
add
or
clc
sahf
push
ss
lcall
fmuls
out
add
push
mov
fists
loopne
mov
test
push
dec
in
dec
repz
or
cs
ljmp
mov
lcall
inc
shlb
aam
and
dec
ljmp
or
xchg
lret
outsl
add
push
lods
aaa
dec
inc
xchg
cld
orb
test
ficoms
sbb
add
push
clc
es
jbe
jnp
push
andl
cmp
pop
cld
outsl
lock
dec
repnz
cmp
movsl
rclb
push
iret
repz
fcmovnb
pop
enter
addr16
repz
xchg
fsubrl
pop
sti
mov
rorl
lds
jbe
push
insl
mov
iret
add
mov
mov
adc
add
and
outsl
jo
push
std
jno
inc
sub
pop
fisttpl
fsubrp
and
outsl
push
mov
aaa
pop
ds
rcll
or
roll
mov
cmpsb
dec
mov
cmp
data16
push
data16
cmpsb
jge
lock
jnp
imul
mov
push
out
ss
jl
sub
out
cmp
cs
ret
data16
add
inc
pop
cmpsb
in
loop
fiadds
addb
jg
fidivl
xor
cld
push
test
adc
mov
cmp
fdivp
insb
sahf
insl
jge
mov
fidivs
push
inc
xchg
add
es
cmp
cmp
xchg
mov
jl
icebp
ds
adc
sub
aaa
dec
mov
test
call
cmp
aaa
jb
cltd
out
mov
push
push
adc
es
jns
inc
outsl
enter
jnp
mov
inc
push
cmp
mov
jo
ds
iret
repz
cs
inc
mov
adc
mov
mov
add
push
mov
int
insb
xor
fnstenv
jns
push
jl
mov
jae
and
jecxz
lods
insb
fidivrs
out
mov
push
xchg
mov
push
outsl
jle
sahf
int
fwait
jmp
ja
cmp
repz
repz
andb
call
xchg
negl
push
bound
mov
stc
cmp
cmp
dec
jbe
mov
test
bound
xor
dec
sbb
scas
adc
cs
adc
ljmp
and
rcrb
push
push
mov
xor
adc
outsl
mov
add
mov
fcomps
pop
mov
leave
loop
and
push
pop
or
bound
mov
je
jmp
inc
idivb
and
pop
incl
mov
ds
adc
or
or
repz
adc
daa
or
jl
add
add
insb
aaa
push
adc
repnz
xchg
sti
test
adc
mov
addb
addb
andl
in
leave
shr
test
ja
outsb
outsb
lcall
push
push
js
xor
xor
push
imul
sarb
cmp
cmp
or
addr16
sub
lret
pop
daa
outsl
subl
dec
fildll
push
imul
adc
cmpsl
iret
and
push
dec
clc
inc
add
cli
inc
outsl
aam
push
popa
je
mov
mov
or
push
pop
ret
and
mov
in
inc
imul
push
pop
pop
out
adc
pop
lcall
mov
adc
sbb
stos
movsl
push
aaa
inc
inc
or
add
dec
pop
in
daa
mov
insb
and
xlat
pop
lea
push
jg
inc
push
jno
fsubrl
push
aaa
xor
les
pop
movsb
pop
add
outsl
xlat
xchg
jecxz
jmp
push
jo
inc
adc
aad
dec
aas
xor
add
or
mov
xchg
xchg
jno
sbb
in
mov
dec
xchg
push
sbb
inc
fs
insl
pushf
and
mov
out
sub
pop
lock
shrb
bound
add
xor
sysexit
ja
gs
fadd
fisttpl
dec
sub
iret
outsl
dec
call
xchg
jbe
jo
sub
xor
movsl
sbb
outsb
push
jnp
sbb
xchg
mov
or
aas
add
push
icebp
aaa
dec
push
scas
lahf
inc
inc
es
pop
add
test
rorb
inc
imul
xchg
xorb
push
xchg
movsl
mov
pop
dec
popf
push
out
xlat
dec
sub
aas
sbb
roll
iret
inc
add
adc
out
adc
inc
imul
and
gs
jmp
add
es
das
mov
xchg
push
xchg
xchg
push
mov
dec
les
jae
pop
pop
jmp
push
rcr
mov
inc
lods
pop
aas
jae
adcl
es
jmp
inc
lea
sub
mov
pop
or
mov
mov
lcall
and
pop
pop
add
shl
jbe
lock
daa
data16
mov
mov
cs
lea
add
mov
mov
das
testl
mov
xchg
jb
add
pop
sbb
xor
mov
mov
xchg
rcrb
inc
loopne
and
jecxz
shlb
adcl
fistpl
sbbb
and
arpl
out
jbe
inc
fwait
jo
fcoms
mull
fildl
imul
and
add
sub
sub
aas
jo
xor
cmpsl
adcl
add
push
and
test
lds
add
test
aas
lods
add
inc
adc
sbb
outsl
xlat
mov
pop
jno
dec
sbb
xor
jmp
ja
add
ficoml
pop
cs
cmpsb
inc
inc
push
inc
mov
mov
cli
cmp
dec
push
pusha
pop
mov
pop
or
or
or
in
lods
inc
fimull
cmpl
mov
sbb
data16
mov
lea
push
pop
addr16
sub
xchg
inc
pop
ja
cs
inc
dec
inc
xor
mov
dec
add
lods
ljmp
add
lods
and
mov
xor
fldl
testl
dec
sbb
lret
push
add
jns
je
ret
dec
es
and
jno
xchg
adc
xor
in
and
add
je
fisttpll
popa
insl
jo
je
add
addr16
out
std
lea
aas
jo
jae
daa
pop
jno
outsl
xor
dec
mov
insb
roll
pop
pop
xchg
adc
sub
cmpsb
jns
mov
push
jne
or
incl
push
inc
pop
aas
test
test
das
dec
out
loope
insl
das
mov
jae
in
lret
and
push
pop
cmp
dec
dec
inc
pop
mov
mov
mov
mov
imul
dec
loope
outsb
push
sbb
jmp
pop
inc
daa
inc
sti
inc
je
sbb
shll
insl
cmpsl
lock
push
imull
cmpsl
rclb
add
pop
stos
pop
push
push
pop
mov
ret
bound
cmp
dec
fmuls
jg
sub
jo
pop
adc
adc
pop
into
dec
rcrl
mov
aad
jmp
or
pop
dec
push
dec
cmpsl
mov
pop
ds
ljmp
dec
fwait
push
push
addr16
or
les
jns
jb
and
xchg
push
or
rclb
dec
xlat
mov
push
outsl
outsb
or
cmc
fs
inc
insb
enter
lock
pop
daa
test
in
pop
cmpsb
jb
fdivs
push
mov
push
pop
add
push
mov
cmpsl
pop
pop
outsl
inc
push
dec
inc
dec
push
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
jnp
and
loop
test
pop
outsl
or
xor
das
ds
das
sbb
out
dec
push
and
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
add
or
imul
pop
xor
mov
jo
movsb
shll
ds
loopne
xor
popw
push
pop
or
rcrl
aaa
push
lock
lret
int3
inc
ljmp
adc
add
jg
add
data16
lock
push
add
sbb
imul
lahf
outsb
xchg
jbe
mov
mov
insb
sti
push
pop
xchg
sbb
lcall
jnp
sbbl
push
add
faddl
lret
push
sbb
xor
out
rcrb
sbb
and
mov
cmpsb
dec
push
aaa
xchg
add
mov
pop
and
add
push
add
mov
or
or
icebp
mov
cmpsl
push
daa
adc
inc
sahf
not
mov
movsb
sbb
sbb
into
or
or
ud2
imul
ficoms
sbb
jb
ljmp
pop
rolb
les
adc
outsl
arpl
popa
lock
xor
je
and
and
arpl
push
es
or
push
cmp
jns
movsb
je
mov
popa
mov
movsb
outsl
je
mov
popa
stos
inc
fisubl
add
loop
sbb
and
xor
and
inc
cld
sarb
loop
dec
inc
pusha
lahf
cltd
mov
add
jne
mov
or
push
js
outsl
fs
pop
mov
jo
jns
iret
inc
mov
or
sub
outsl
insl
pop
sbbl
jne
pop
sbb
add
or
xchg
or
cmp
and
mov
pop
gs
adc
pop
jbe
mov
jns
insb
mov
inc
inc
into
loop
outsb
mov
xor
fidivrl
pop
xor
gs
fcoms
jnp
adc
or
inc
cld
outsb
xadd
sbb
inc
cmovo
divl
cmpb
aas
vphaddudq
nop
jo
maxps
loopne
mov
pop
adc
mov
imul
imul
sub
pop
in
daa
ss
add
push
sbbb
lea
push
mov
cmp
inc
inc
lods
std
push
jns
inc
es
add
add
fdivs
inc
add
repnz
pop
xchg
dec
aaa
mov
or
pop
push
mov
xchg
mov
daa
cwtl
xchg
mov
outsl
cmp
inc
xchg
xchg
lods
call
mov
push
outsl
clc
push
xchg
xor
xor
lods
in
addr16
scas
mov
and
ss
fisubs
and
add
mov
inc
pop
mov
xchg
testb
shll
mov
fiaddl
das
outsl
jnp
cwtl
adc
outsl
xchg
adc
jl
fcmovu
sbb
xchg
cmpsl
add
pop
call
mov
pop
cmp
mov
push
es
lahf
xchg
test
adc
dec
cwtl
loopne
add
and
hlt
enter
mov
xchg
cmp
jns
in
pop
push
inc
dec
xchg
xchg
inc
cs
nop
out
jl
cwtl
cs
mov
fisubl
enter
pop
xor
ds
enter
inc
ss
adc
in
and
outsl
xchg
rolb
inc
ja
outsl
pop
daa
mov
mov
ds
pop
in
enter
movsb
mov
shlb
xchg
mov
lock
lcall
pusha
cwtl
dec
add
lock
lahf
push
or
in
lods
aas
lcall
mov
or
int3
inc
outsl
mov
nop
inc
sub
les
in
push
dec
dec
loopne
cld
fwait
or
add
jnp
adc
cld
out
inc
lock
cwtl
xor
inc
fwait
push
push
mov
loopne
cmp
fwait
jl
cmpb
addb
out
and
xchg
xchg
loopne
inc
es
clc
aas
loopne
dec
enter
sub
in
lods
ss
addr16
mov
jo
pushf
adcb
mov
mov
int3
aam
addl
insb
mov
fwait
cltd
popf
add
daa
push
push
and
cmp
cmp
adc
shlb
scas
cs
rcl
dec
pusha
mov
pushf
aas
popl
int3
pop
popf
faddl
in
orb
dec
add
int3
rcrb
sahf
sub
cmp
rorb
outsb
imul
inc
sahf
jl
hlt
pop
repnz
nop
insb
lcall
cmp
dec
lahf
adc
lahf
or
and
lahf
sub
push
cs
movsl
ja
jl
insb
cs
or
jl
mov
lods
mov
int3
test
pop
and
pop
mov
or
and
out
inc
es
cld
jle
cmpsl
in
sahf
out
je
cld
jns
jnp
jg
fwait
sub
enter
nop
or
push
cmpsl
movsb
push
fdivs
in
mov
sbb
push
clc
js
jns
idivb
cmpsl
pop
jo
xchg
xchg
inc
js,pn
cmpsl
out
nop
out
mov
pop
enter
mov
fdiv
mov
enter
lods
add
hlt
mov
adc
cmpsl
pop
rcr
out
test
cmpsl
and
sub
pushf
mov
shrb
add
or
push
lock
jle
mov
push
fs
outsb
imul
lahf
mov
xchg
movsb
mov
nop
or
mov
cs
hlt
movsb
add
aaa
push
enter
dec
in
adc
movsb
xor
movsb
inc
push
rclb
in
sub
pop
repnz
and
enter
mov
movsb
aam
in
clc
cltd
pusha
sub
cmpsl
aam
and
movsl
cmp
adc
push
rorl
cmpsl
pop
repnz
jg
sarb
sub
cmp
pop
aaa
xor
sahf
daa
shlb
loopne
addr16
cmpsl
mov
nop
or
xor
adc
push
iret
mov
shll
testb
cmpsb
mov
cwtl
lahf
pop
pop
movsb
and
xchg
adc
fsubr
out
or
dec
push
inc
enter
mov
cmpsl
sbb
sub
inc
xchg
pusha
xchg
sub
push
cmpsl
jg
int
mov
inc
cmpsb
jo
push
lds
xchg
aas
push
cmpsl
enter
jo
les
call
pop
enter
ds
jno
ja
test
push
cmp
inc
aas
ja
mov
pop
enter
mov
push
cmp
out
enter
adc
rcr
add
xchg
mov
sbb
ficoml
ja
js
andb
inc
test
add
lea
push
inc
and
add
mov
or
inc
mov
enter
stos
add
icebp
push
and
push
inc
lock
fistl
jg
mov
inc
inc
sahf
fs
add
inc
loopne
loop
nop
movsb
mov
push
inc
or
movsb
aam
enter
clc
stos
or
dec
add
adc
pop
insb
dec
adc
call
jg
shll
cmpsl
pusha
pushf
inc
lods
pop
and
lahf
pusha
inc
ja
enter
mov
mov
mov
pop
lods
adc
and
mov
xchg
lcall
mov
es
adcb
and
lods
lea
cmpsl
nop
fisubl
les
mov
xor
pop
dec
dec
add
pop
push
jbe
inc
lods
inc
push
rorl
ja
iret
mov
jg
orb
sahf
cwtl
fistps
inc
lods
fcom
and
or
fcoms
adc
cmp
fdivrl
lahf
mov
loop
scas
mov
mov
outsl
push
add
pop
xor
loopne
test
xor
shr
fwait
nop
int
scas
and
sub
ja
enter
jl
adcb
jo
and
test
shl
pop
enter
rcl
fimuls
fnstenv
xor
aam
lahf
movsb
daa
pop
repnz
lods
pusha
lahf
jo
dec
out
fcomps
mov
xor
or
inc
sbb
fs
outsl
aas
scas
jbe
movsb
dec
pop
addr16
inc
faddp
ljmp
insb
lods
cwtl
aas
popl
pop
enter
fdivs
inc
add
inc
call
and
sub
cwtl
inc
xchg
outsl
rcrl
movsl
or
fsubrs
xor
xchg
hlt
xor
sub
push
add
fsub
nop
or
insl
popl
xchg
enter
mov
and
sub
mov
aas
addr16
or
insb
push
lods
pop
mov
add
xchg
jmp
sub
xlat
sbb
mov
daa
mov
jmp
pop
fcoms
pop
ficompl
mov
dec
mov
xor
ja
jl
fisubl
inc
insb
pop
outsb
jl
inc
loopne
pop
dec
dec
cmp
xor
dec
movsb
pop
data16
adc
adc
cmp
sbbb
xchg
daa
fs
mov
push
and
adc
inc
adc
ja
mov
and
scas
call
and
cmp
and
and
and
sbb
jb
fldt
mov
mov
cmp
sbb
mov
cwtl
repz
aam
sub
adc
sahf
mov
jo
sahf
cmp
cmp
pop
sahf
mov
mov
in
enter
iret
je
cmp
mov
sahf
sub
lock
enter
or
js
int
das
push
lock
leave
or
test
add
stos
and
mov
add
dec
movsb
mov
pop
mov
xchg
mov
mov
push
fistpll
dec
addr16
pop
or
rorl
pushl
jg
jb
fidivl
xchg
dec
in
fimuls
adc
aaa
outsl
enter
add
inc
lods
push
inc
inc
mov
nop
mov
and
fbld
outsl
inc
in
popf
or
mov
mov
add
cmp
outsl
cmp
ss
or
in
add
into
cmp
scas
fadds
xchg
add
xorb
add
xor
fbstp
pop
jp
mov
ja
aam
mov
or
fisttps
pop
scas
add
jns
outsb
mov
stos
outsl
push
pushl
inc
mov
nop
fsts
add
add
sbb
add
push
dec
sub
fsubl
adc
out
dec
push
push
mov
mov
jnp
push
rcrb
add
push
or
jle
ja
mov
mov
dec
out
pop
ja
lds
jle
sub
push
aaa
out
stc
fimuls
fcomp
outsl
add
nop
pop
add
and
and
and
outsl
and
test
lock
and
mov
or
fists
or
outsb
xchg
out
cwtl
inc
outsb
push
dec
ss
sbb
aad
flds
xlat
xchg
cmp
mov
push
xchg
es
out
mov
js
push
idivb
aaa
cmp
pop
fs
mov
popa
pandn
ss
lea
call
push
and
negb
mov
push
fdivp
push
call
push
dec
push
inc
push
adc
scas
call
rolb
adc
xchg
cmpsb
cmp
lds
orl
daa
nop
ja
divl
sub
rolb
push
and
add
push
fistpll
out
rcrl
es
ds
or
push
ret
mov
lds
rolb
sub
or
lock
enter
and
nop
mov
daa
cwtl
scas
push
and
shr
xchg
or
dec
mov
pop
pop
push
ret
or
pop
mov
push
nop
dec
les
push
ret
xchg
inc
push
mov
pop
mov
lds
ret
ret
or
adc
inc
enter
outsl
and
cmp
cwtl
inc
adc
repz
sbb
ret
jo
clc
test
mov
adcl
addr16
je
ja
aaa
outsb
in
jno
addl
add
cmpsb
mov
les
les
add
add
je
jle
movsb
pop
test
jg
mov
les
or
jg
push
mov
add
sbb
mov
cmp
add
mov
dec
xchg
cwtl
pop
aaa
mov
push
lods
imulw
aad
lods
scas
nop
aaa
pop
ja
js
mov
or
imul
pop
aaa
push
cmp
sbb
subb
xchg
daa
fs
movsb
xchg
or
pushf
popa
jo
mov
addr16
lahf
fcoms
daa
sub
es
sub
mov
add
mov
or
cmp
mov
repz
jbe
fs
enter
dec
enter
sub
fadds
push
mov
or
add
test
add
adc
push
jo
hlt
push
fildll
popf
mov
enter
outsb
rorb
outsl
add
or
cltd
inc
or
jl
xchg
addr16
xchg
cmpsb
or
aad
sbb
aaa
aam
inc
enter
dec
lods
fs
inc
mov
out
sbbl
add
sahf
nop
push
mov
mov
dec
push
or
inc
xor
inc
sub
test
or
add
adc
addr16
fdivrs
lret
dec
aas
das
sbb
sbb
push
cmp
push
mov
xor
outsb
pop
cmp
mov
les
dec
fistl
or
ja
push
xlat
fimuls
push
adc
nop
add
je
lock
adc
xchg
push
pusha
rclb
enter
ja
pop
repnz
and
enter
or
jae
loopne
sbbl
adc
dec
rcll
mov
inc
ja
into
mov
outsl
xchg
in
dec
fisubl
decl
push
adc
icebp
or
xor
push
in
pop
iret
repz
pusha
insl
jnp
mov
jns
outsb
pop
mov
repz
push
andb
notb
jo
jp
repz
out
in
jno
pop
out
ds
jge
or
repz
xchg
mov
add
cmpsl
stc
cmp
add
jne
ds
repz
mov
cmp
out
fdiv
push
ja
mov
sahf
out
fiaddl
js
push
test
jl
out
ret
jns
cmpsl
stc
cmp
popa
movsb
jmp
out
sahf
mov
repz
out
pop
cmpsl
int3
sti
das
jl
stc
cmp
dec
jo
sub
push
pushf
fidivrl
sahf
cmpsl
stc
cmp
sbb
xchg
cmp
out
mov
and
out
scas
or
push
sahf
fistpl
andb
sbbl
dec
test
ds
sarl
dec
xchg
lds
xchg
imul
stc
cmp
rcll
mov
xor
cmpsl
cmpl
cmpsl
xchg
sar
mov
cmp
repz
repz
lea
push
cltd
mov
lcall
sahf
out
add
sahf
out
jl
xchg
push
sub
mov
jl
xchg
aad
xchg
pop
out
idivl
pop
xchg
incb
jnp
sarl
cmp
cwtl
arpl
imul
cltd
pop
popf
iret
sarl
jmp
lcall
lcall
pushf
lcall
adc
jns
mov
jns
out
loopne
lahf
pop
stos
jl
dec
repz
mov
mov
sar
dec
mov
ds
rcrl
call
jl
out
frndint
pop
cmpsb
mov
frstor
cmpsl
arpl
frstor
ds
xchg
mov
lcall
push
mov
dec
stos
mov
push
lods
dec
sti
xor
out
lods
pop
scas
int
scas
es
daa
mov
push
mov
repz
out
mov
mov
push
mov
ja
data16
mov
subb
mov
or
xchg
idivl
xchg
les
pushl
push
and
pop
mov
out
ds
mov
ds
out
add
stc
dec
mov
aam
sub
lcall
imul
cli
sarl
shll
ret
jns
iret
fistps
jge
cld
imul
inc
mov
ja
dec
repz
int
and
push
fnstcw
pop
aad
xlat
jns
fstps
ficompl
fsubl
loopne
hlt
insb
push
jl
loope
pop
in
out
adc
mov
add
fcmovne
nopl
sub
inc
mov
and
sbb
in
sub
xchg
add
push
xlat
adcl
pop
aaa
pop
mov
xchg
aas
and
xor
push
rclb
sbb
aas
fs
and
aas
jnp
fdivrs
pop
push
arpl
scas
mov
mov
in
inc
sahf
aas
xchg
repz
pushf
dec
jle
jg
lds
adc
aas
fwait
je
orl
in
adc
ss
inc
fbstp
dec
aad
lahf
adc
mov
lahf
out
cmp
push
in
out
outsl
xchg
adc
repz
testb
cmc
push
test
fidivrs
pop
add
stos
push
aas
add
flds
leave
and
and
push
enter
sbb
in
inc
cmpsl
test
cwtl
icebp
push
lods
add
sbb
pop
mov
or
inc
jl
add
mov
pushf
push
adc
cltd
rorl
in
adc
push
in
lods
adc
loopne
and
dec
dec
mov
lahf
and
dec
push
push
lahf
dec
sub
enter
dec
xlat
pop
xlat
insb
fildl
add
add
fistpll
push
mov
add
dec
push
dec
addr16
mov
pop
aas
loop
dec
add
jns
add
xchg
mov
mov
fnstenv
loopne
inc
mov
add
xchg
outsl
inc
into
mov
xor
popa
jg
mov
pop
mov
js
pop
nop
addr16
dec
add
xchg
loopne
outsb
push
addr16
lods
fucom
sub
mov
add
dec
jbe
leave
test
fsubs
clc
scas
enter
pop
sbb
fiadds
push
rolb
jmp
insl
inc
into
iret
ja
divps
leave
inc
shlb
cmp
jb
pop
push
mov
leave
jle
movsb
pop
jb
dec
ficoml
push
cmp
pushf
pop
adc
in
cmc
std
movsb
mov
pop
ficomps
add
mov
mov
lods
push
add
in
dec
fdivrs
in
mov
push
inc
xchg
js
push
leave
jmp
fwait
pop
jb
pop
push
mov
push
xchg
pop
loope
jmp
fldt
repnz
push
fucomi
scas
enter
fsubl
cld
xchg
pusha
sub
cmp
pusha
xor
aas
pusha
dec
fdivl
xchg
adc
js
shrl
xchg
rorl
dec
outsb
push
jo
pop
mov
daa
movsb
daa
aam
mov
ret
stos
push
jb
mov
and
fisttpll
xor
add
iret
scas
vunpcklpd
pop
sbb
add
add
out
or
xor
xchg
push
lock
adc
pop
fisubrs
shll
daa
pop
imul
sbb
mov
push
push
mov
add
pop
mov
mov
roll
andb
leave
mov
pop
xlat
inc
mov
fildll
popf
in
rcll
mov
dec
sbb
data16
dec
roll
mov
daa
inc
inc
cmpsl
cmpsb
xorb
mov
call
pusha
daa
jg
mov
loopne
pushl
dec
jb
and
arpl
push
add
xchg
dec
dec
dec
xchg
push
cmp
fsubrl
xchg
xchg
push
in
shlb
pushf
loop
repnz
pop
and
sbb
cmpsl
fs
xor
popf
mov
mov
xchg
fidivl
xor
pop
fs
mov
imul
mov
cmp
push
mov
enter
or
or
or
aaa
add
push
repnz
es
lock
push
xor
sbb
add
push
cmpsl
add
loop
gs
add
rolb
in
jbe
push
jecxz
loop
daa
sbb
dec
scas
in
fs
enter
je
std
and
mov
imul
push
add
xchg
and
add
add
add
cmp
inc
add
imul
je
or
or
popf
movsl
mov
cmp
out
in
push
xchg
push
ret
add
aaa
in
jb
jecxz
in
daa
call
push
inc
dec
in
pop
xor
enter
push
add
push
add
in
in
add
add
out
bound
mov
push
aaa
filds
cmpsl
loope
pop
fistps
mov
or
mov
scas
and
sbb
mov
in
adc
paddd
out
push
pop
and
addr16
daa
dec
dec
fisubrl
push
rolb
xchg
cmp
into
out
out
les
inc
mov
cmp
test
out
out
daa
dec
adc
mov
lcall
push
xor
xchg
in
sub
push
xor
jo
push
popf
call
leave
sub
roll
inc
jo
call
in
xchg
out
pop
push
test
mov
xchg
add
cmpsb
imul
mov
leave
rcr
loope
shll
cmp
jne
iret
inc
or
jmp
jmp
cmp
in
sub
cmp
cmovs
jb
push
bound
rcll
leave
ljmp
dec
insb
out
mov
ljmp
jecxz
dec
popf
push
lahf
add
jne
leave
test
mov
cmpl
pop
adc
ss
jmp
jmp
and
jo
push
call
xorps
cmp
mov
imul
xchg
lret
mov
xchg
lahf
add
fsubrl
xchg
in
out
in
cmp
mov
ja
out
mov
mov
or
sbb
jp
test
adc
add
mov
paddsb
cmpsb
in
fs
in
daa
jae
or
inc
and
out
mov
leave
test
mov
jb
add
add
add
add
std
push
insl
or
adc
and
or
int
xorb
inc
out
jnp
sub
mov
mov
add
iret
jg
test
dec
sbb
cmc
lcall
je
imull
outsb
jg
and
and
mov
fildll
outsb
pop
je
in
and
adc
xchg
push
add
xchg
mov
pop
rclb
add
dec
cmp
push
jo
xor
cmp
clc
mov
pop
lock
mov
and
and
pop
in
xchg
lods
mov
in
adc
mov
pushf
mov
fisubl
scas
cmpsb
in
pop
and
push
push
dec
jnp
es
xchg
pop
mov
fidivs
mov
leave
and
xchg
jnp
push
mov
ss
mov
dec
and
add
sbb
lock
add
mov
bnd
pushf
mov
push
repnz
cmp
jnp
push
addl
mov
add
les
daa
pop
jg
leave
aad
jnp
scas
movsb
xchg
dec
jo
jo
das
sti
xlat
jae
in
inc
aaa
addr16
xor
in
add
add
add
mov
push
add
or
pop
inc
jp
hlt
and
add
jae
xchg
sbb
add
pushf
jg
mov
add
int3
mov
xchg
add
fmull
pop
mov
add
add
in
xchg
and
add
add
je
cmc
jno
dec
je
je
cmc
pushf
ret
xchg
insl
push
dec
mov
or
pop
mov
movl
xchg
cmp
pop
cmc
lock
jo
and
fucomip
cmp
into
pop
je
jne
idivb
movsb
fwait
pushf
sub
movsb
sbb
cs
xchg
out
mov
add
dec
in
psubsw
or
pop
jbe
jns
mov
das
jbe
push
sbb
popf
dec
sub
outsb
or
jbe
je
xchg
push
pcmpeqd
leave
dec
sbb
xchg
test
mov
inc
mov
push
mov
in
adc
xchg
pop
jb
pop
cmp
sbb
rcrb
iret
add
jo
inc
jo
out
mov
rcrb
repnz
jecxz
out
cld
sbb
jb
ja
inc
js
js
cmpsl
jmp
xor
xchg
stc
cmp
ja
outsb
mov
test
xchg
mov
pushf
mov
call
xchg
jns
stc
iret
mov
dec
jns
push
inc
iret
push
dec
enter
push
add
add
outsb
sahf
pop
cli
inc
mov
pushf
pop
cmpsl
add
mov
fidivrs
add
daa
jmp
decl
iret
pop
jp
das
jp
or
and
push
xchg
xchg
daa
and
inc
adc
ror
adc
adc
in
push
pushf
dec
jp
mov
stos
outsb
pop
mov
mov
ja
push
scas
jp
push
in
push
jns
addr16
add
addr16
sbb
sahf
pop
push
cmp
inc
dec
add
sahf
mov
pop
push
out
or
adc
pushf
mov
mov
sbb
aam
pop
mov
testl
in
addr16
and
sub
xor
std
or
push
test
pusha
xchg
inc
inc
push
leave
add
mov
je
cmp
test
add
je
std
int3
std
mov
daa
fcoml
mov
xchg
adc
pop
xchg
pushf
xchg
pop
stos
jo
push
mov
adc
inc
daa
pusha
iret
jl
ud0
in
pop
jge
jge
cwtl
enter
dec
jg
xor
xchg
fsts
dec
add
push
sbb
outsb
mov
pop
fs
or
rorl
inc
xchg
pop
incl
adc
jg
fiadds
sahf
cld
add
jle
add
adc
test
sbb
and
das
or
leave
jle
decl
jge
out
lahf
jle
dec
push
add
loopne
mov
stos
sahf
pushf
mov
add
into
faddl
test
test
inc
aaa
inc
mov
adc
or
add
sbb
movsb
xchg
pop
pop
xchg
mov
jb
jbe
cmpl
mov
call
pop
in
xor
add
push
add
xor
orb
push
push
add
xor
add
andb
ja
inc
shll
cmpb
xchg
pushf
pushf
mov
mov
fisubl
jecxz
adc
jmp
and
pop
push
call
fsubrp
inc
xorl
inc
test
iret
add
out
enter
subl
add
cmp
mov
add
sahf
mov
or
and
or
or
in
in
adc
cld
adc
cmp
repnz
pop
or
adc
out
cmp
sbb
outsb
sbb
push
leave
push
add
dec
pop
into
jno
jg
orb
in
imul
add
mov
push
push
sub
incl
stc
push
xor
aas
lahf
dec
cs
outsb
xchg
jmp
loopne
mov
popf
test
cmpsb
scas
add
movsb
cmp
add
xchg
mov
jbe
cwtl
outsl
test
movsb
cmp
xchg
fucomi
dec
xlat
add
iret
nop
fnstenv
or
out
dec
adc
fs
jg
sbb
es
jne
pavgw
mov
dec
add
gs
testb
nopl
into
aas
xchg
hlt
bound
xchg
pop
testl
dec
pop
incl
jo
or
pop
ja
leave
push
adcb
adc
cmp
popa
mov
daa
mov
jns
xchg
dec
or
jecxz
pop
and
adc
xor
pop
inc
jle
cmp
jbe
push
xor
addr16
cmp
xchg
add
daa
xchg
mov
xor
xchg
scas
mov
inc
in
add
dec
inc
push
jmp
sbb
loopne
sub
jnp
sbbb
push
or
fstpl
jbe
jb
sub
or
cwtl
or
leave
add
in
leave
in
jg
out
lea
lea
jb
push
movl
loopne
movq
or
mov
xor
lahf
xchg
jb
sti
daa
push
inc
add
pusha
add
inc
mov
add
add
in
xchg
pop
stos
or
pop
sbb
aam
fisttps
push
or
sbb
and
daa
in
push
mov
sub
push
or
mov
or
xor
xchg
add
test
dec
push
pop
leave
dec
scas
in
out
mov
fsts
add
nop
xchg
nop
cwtl
add
cs
sub
loopne
popf
or
daa
sbb
mov
cmp
cmp
lret
call
or
jp
cmp
daa
insl
push
lods
or
inc
cmp
fisubl
adc
test
xchg
mov
inc
cmp
mov
daa
pop
add
adc
sbb
jnp
push
addr16
orl
sbb
pop
clts
cmp
lea
ror
cwtl
int3
sahf
rolb
psubusb
insb
jbe
dec
xchg
push
pop
test
jmp
testb
add
cmp
mov
aad
or
mov
add
xchg
push
adc
add
cmove
daa
and
add
or
daa
jbe
shll
mov
jb
xchg
pop
inc
mov
mov
dec
movsl
sub
xor
mov
psubsb
inc
fisubl
add
dec
cmpsl
fcmovne
mov
adc
sbb
jo
adc
movaps
xor
mov
add
xor
popf
mov
orb
leave
inc
lds
rorl
or
stc
lea
dec
and
sbb
or
sub
fisttpll
xor
das
inc
out
andl
xchg
dec
adc
movsb
cmp
ja
incl
shl
and
mov
in
orb
mov
mov
mov
out
inc
dec
aaa
jb
pusha
add
push
mov
je
push
add
xchg
pop
jb
fdivr
add
adc
movsb
mov
push
push
add
jb
cs
cmpsl
push
daa
daa
pop
leave
push
xchg
jp
xchg
mov
mov
jbe
jnp
out
add
into
das
add
dec
lock
add
fsubrp
add
push
xor
enter
cmp
add
inc
jb
dec
cmpsl
adc
cmovbe
mov
mov
psrld
add
add
add
lret
xchg
xchg
add
decb
xchg
or
cmp
cmp
pop
pop
or
xor
pushf
push
inc
cmovnp
leave
lret
adc
fcoms
roll
mov
xchg
cltd
add
sbb
add
test
lcall
dec
xchg
ja
adc
xchg
sbb
xchg
sbb
adc
ss
add
xchg
mov
xchg
jl
add
repnz
nop
add
add
pushf
sbb
mov
mov
mov
adc
adc
push
add
mov
xchg
pop
push
add
add
pop
push
sbb
scas
push
pop
fbstp
mov
rcr
add
fists
out
stc
pop
pop
xchg
movsb
rcr
push
xchg
adc
sbb
or
leave
mov
dec
pop
add
movsb
mov
mov
xchg
in
fucomi
lcall
pusha
movsb
mov
xlat
or
and
pushf
imul
and
and
cmpsl
push
mov
mov
push
cvtdq2ps
daa
mov
pop
arpl
jae
push
test
sbb
cmpsb
xchg
inc
mov
scas
xchg
outsb
adc
lods
dec
cs
mov
loopne
xorl
xchg
setbe
xchg
xchg
daa
dec
push
daa
das
add
cmp
leave
enter
dec
mov
andl
aas
jp
add
xchg
xchg
lret
xchg
lcall
mov
in
sbb
repnz
xchg
add
or
add
dec
dec
mov
pop
sbb
xchg
cmp
sub
xchg
pop
mov
das
xchg
jle
xchg
dec
sbb
add
sub
dec
scas
push
mov
test
cmp
add
loope
mov
or
mov
sbb
add
jb
mov
dec
in
and
jp
xchg
xchg
lret
mov
enter
lods
mov
sbb
addr16
pop
xchg
mov
fsubrp
adc
ret
fistps
or
adc
sbb
cmp
mov
cltd
inc
pop
inc
add
jg
push
add
push
inc
mov
pop
popw
outsb
or
xchg
mov
loopne
dec
test
sbb
in
jbe
pmaxsw
lcall
sbb
leave
dec
push
push
sub
cmp
inc
dec
cmpsl
push
pushf
pushf
int3
sahf
pop
jb
add
pushf
pushf
mov
movsl
pop
mov
xchg
sbb
jg
out
out
mov
and
das
fwait
add
kmovw
add
xor
xchg
sbb
ds
jg
jbe
dec
fwait
iret
push
addl
mov
test
mov
mov
push
sbb
cmpsl
or
add
pushf
movq
xor
dec
sbb
cmp
add
push
pop
or
addr16
jge
or
setne
mov
mov
and
aam
outsl
fucomip
mov
lahf
cmc
popf
add
ud2
dec
insb
das
xchg
dec
sbb
popf
jnp,pt
data16
xchg
xchg
imul
push
xchg
pop
popf
and
jmp
add
insb
out
in
iret
iret
testl
inc
mov
add
add
out
repnz
xchg
pop
testl
or
sbb
movhps
mov
xchg
dec
and
adc
inc
mov
lahf
sahf
xchg
jno
xor
sahf
mov
ret
add
xor
sbbl
push
and
daa
or
lahf
stos
sbb
paddw
ds
pop
adc
and
sbb
je
inc
mov
mov
add
lahf
push
pushf
add
pop
push
mov
mov
les
and
dec
dec
outsb
cmpsl
lahf
out
out
idiv
and
mov
mov
push
bsr
pop
pop
out
or
xor
jb
out
inc
mov
mov
xchg
mov
pop
xchg
setle
scas
pop
pop
fcom
in
jbe
rcr
psraw
loope
and
push
incl
and
add
cmp
les
dec
mov
add
add
xor
imul
inc
dec
out
xchg
cmove
enter
aas
add
aam
movsb
jnp
and
daa
test
popf
rcrb
test
inc
invd
cmpsl
fdiv
outsb
popl
sub
push
daa
jl
out
sbb
push
inc
mov
gs
push
and
ja
pop
jbe
jnp
mov
orps
mov
repnz
add
add
inc
into
sahf
cwtl
or
mov
in
xchg
xchg
or
iret
or
cmp
adc
adc
and
adc
daa
adc
xor
cmp
sbb
daa
inc
mov
imul
daa
daa
push
adc
daa
daa
adc
adc
xchg
es
daa
push
or
outsb
sub
mov
addr16
mov
adc
mov
add
in
and
in
daa
mov
test
dec
mov
fcmovb
not
fsts
movntq
out
out
testl
pop
daa
aad
add
jp
fildll
dec
push
mov
daa
pop
pop
sbb
sub
test
je
sub
in
dec
xchg
jb
addr16
mov
movsl
jmp
movsl
jnp
mov
enter
cmp
add
jmp
add
xchg
and
add
or
daa
or
aaa
movsl
xor
daa
pop
in
xchg
dec
movsb
addr16
daa
pop
leave
and
xchg
shlb
adc
rclb
add
cmpsb
mov
xchg
or
xchg
fsts
inc
add
imul
int3
xchg
orl
pop
mov
dec
sub
ja
out
and
fucomp
out
pop
testl
push
and
cs
enter
add
pop
add
pop
cmpsl
jne
sbb
push
call
lods
fbstp
int3
paddq
in
in
jbe
fsub
pop
in
in
or
sbb
or
test
or
or
pop
adc
sbb
aas
sbb
dec
in
ficoms
sub
enter
push
inc
add
cwtl
test
test
sub
aaa
fsts
xchg
popa
in
fwait
add
add
add
out
inc
cvtps2pi
mov
adc
pusha
xchg
in
mov
add
add
dec
or
adc
pop
and
enter
or
or
pop
imull
xchg
mov
outsb
mov
and
mov
cmp
or
sub
jb
test
push
addb
xchg
lcall
stos
xchg
leave
dec
sbb
int
mov
inc
rdmsr
bnd
stos
sbb
dec
pusha
pushw
stos
pop
out
in
popf
das
sbb
adc
add
popfw
in
pop
jb
cwtl
iret
fldenv
add
repnz
ljmp
in
ss
out
stos
and
mov
pop
jb
in
mov
push
add
mov
xor
repnz
mov
outsb
flds
psraw
loope
addb
xor
stos
icebp
dec
in
inc
pop
das
std
xchg
adc
pop
xor
mov
daa
adc
aaa
es
dec
dec
dec
fimull
adc
cmp
cmp
jnp
pop
push
push
jp
sbb
repnz
dec
dec
sahf
mov
and
lods
mov
dec
test
les
push
int3
adc
in
sbb
push
lods
sbb
dec
cwtl
inc
pop
add
ja
int3
insb
out
jbe
mov
pop
mov
and
inc
mov
add
add
frstor
daa
daa
daa
in
imull
add
or
sbb
dec
ret
leave
and
leave
xchg
and
scas
push
scas
pop
scas
pusha
mov
xor
xor
jbe
jmp
xchg
pop
popf
inc
jbe
push
lods
xor
scas
shrb
mov
and
lret
add
loope
xchg
sbb
xchg
daa
das
out
push
or
leave
enter
or
cs
sub
mov
xor
out
sbb
shrl
xchg
add
dec
pop
punpckhdq
mov
das
add
dec
popf
int3
psrld
mov
jno
pop
push
faddl
push
xchg
dec
xor
daa
test
or
or
pop
xor
out
and
mov
mov
mov
imul
cmpsl
xchg
out
in
mov
dec
pop
cmpsl
or
pop
xchg
push
aas
push
jl
adc
scas
pop
mov
cs
pslld
test
sbb
in
and
xor
mul
and
bndldx
mov
aaa
mov
mov
lahf
rorb
cmp
cmpxchg
daa
das
mov
mov
push
add
pushf
pushf
pushf
add
add
and
or
ror
xchg
or
and
sub
adc
test
dec
add
pop
daa
insl
shlb
xchg
and
add
leave
scas
add
mov
or
iret
or
sahf
or
cmp
pop
mov
fs
add
mov
pop
adc
sbb
ret
bound
push
mov
ficomps
popf
cmp
xchg
jp
jg
mov
jno
scas
mov
push
push
xor
in
xchg
jbe
push
cmp
dec
adc
cmp
jb
adc
adc
daa
daa
mov
xchg
pop
lcall
mov
mov
in
leave
ret
psrld
and
mulb
and
ljmp
cli
lfs
push
sub
sub
sub
sub
sub
sub
xor
cmp
inc
test
rsqrtps
cmp
inc
sub
pop
popf
xchg
push
pop
inc
adc
popl
pop
cmp
adc
and
js
adc
testl
cs
test
cmp
sub
mov
or
cmp
mov
movsb
cmp
sub
loopne
xor
xchg
cmp
mov
mov
outsl
ja
cmp
fs
jp
inc
mov
or
mov
or
lds
out
psadbw
jb
enter
push
adc
adc
adc
mov
sub
dec
sbb
enter
sbb
push
jb
sbb
sbb
enter
lcall
cmp
mov
and
inc
mov
daa
lock
sub
add
or
sub
inc
mov
sub
xor
aas
and
and
enter
and
bound
mov
jb
pop
jb
jp
sbbb
and
sbb
jnp
in
sbb
sbb
jb
adc
adc
adc
or
out
out
scas
mov
push
push
leave
dec
inc
mov
add
mov
mov
add
push
add
xchg
push
addr16
je
orl
mov
fwait
or
enter
push
adc
adc
adc
adc
adc
xchg
and
add
sbb
jb
and
sub
sbb
sbb
sbb
in
jb
jg
mov
fistpl
ror
jb
jbe
ror
aam
paddusb
pop
mov
out
out
adc
adc
enter
adc
adc
adc
cvtpi2ps
xor
and
or
push
or
jb
pop
or
jae
jle
and
inc
mov
fwait
dec
sub
daa
movsl
das
iret
mov
adc
fildl
lcall
sbb
ds
xlat
push
push
repz
push
mov
or
adc
fildl
push
and
sub
xor
cmp
bnd
jb
adc
cvtdq2ps
in
xor
pop
jne
xchg
jno
xacquire
xchg
scas
dec
daa
xchg
lret
mov
pop
fiadds
inc
mov
cmpsl
push
call
add
shl
add
and
mov
fldt
rdtsc
cmp
inc
dec
daa
daa
daa
daa
push
pop
popa
imul
je
jg
adc
mov
fcmovne
xchg
popf
shld
daa
daa
mov
xchg
daa
daa
fucom
sbb
test
mov
pop
and
cwtl
dec
pop
inc
pop
mov
xlat
push
cmp
inc
dec
pop
push
enter
pop
add
enter
jle
xchg
mov
mulb
xchg
sahf
push
pop
cmpsb
fcmovne
in
in
scas
dec
mov
pop
mov
adcl
nop
mov
ss
aas
mov
jb
enter
add
add
add
aas
push
dec
pop
push
pusha
or
or
or
mov
orl
setns
divb
jb
adc
rorb
fistl
repnz
icebp
paddb
xor
adc
pop
sbb
sahf
mov
sbb
xchg
daa
and
and
and
leave
enter
and
leave
in
fs
bswap
fdiv
in
leave
jecxz
stc
rolb
imul
inc
push
rorb
add
in
xchg
add
jno
jns
fwait
mov
addl
pop
leave
enter
mov
leave
leave
leave
in
mov
aad
leave
leave
leave
fucom
in
cmc
adc
jnp
fs
roll
xchg
out
bound
and
in
sub
cmp
xor
and
dec
dec
lcall
xchg
dec
dec
dec
dec
pushf
movsb
lods
mov
in
sbb
mov
sub
sbb
por
sbb
notb
cmpunordps
mov
sbb
repnz
inc
pop
push
or
in
iretw
ret
or
test
jg
outsl
mov
mov
mov
adc
fists
in
push
test
enter
sbb
sbb
sbb
cltd
sbb
sbb
pop
and
popf
mov
cmp
push
lahf
jb
cmp
les
les
inc
mov
xor
cmp
sub
enter
sub
mov
jb
xor
xor
inc
into
iret
stos
xor
shll
into
aaa
in
xchg
and
cmp
je
jg
cmp
repnz
mov
les
lods
ds
sahf
mov
aas
ret
into
adc
inc
sahf
in
out
inc
cli
inc
lds
inc
adc
das
sub
vmovaps
lds
test
add
bound
jg
je
je
lahf
dec
inc
ja
push
mov
push
mov
fsubrl
xchg
mov
mov
xchg
sbb
mov
outsl
push
mov
push
addr16
inc
mov
pop
iret
fimull
movntq
enter
repnz
or
pop
push
pop
and
xor
adc
adc
sahf
pushf
mov
adc
jb
popf
int3
pop
lcall
cmp
jns
sbb
and
jb
cmp
clc
movl
lret
and
es
mov
pop
add
or
outsl
add
mul
movsb
jbe
lahf
stos
add
mov
cmp
cmp
rolb
sbb
or
testl
and
push
and
outsl
daa
mov
cmovg
inc
sqrtps
xchg
daa
and
pop
adc
adc
jb
jge
mov
xchg
cmp
sbb
test
cmp
lret
leave
dec
loopne
bound
pushf
aas
jmp
mulb
add
psrad
insl
or
pop
daa
das
and
sub
xor
inc
mulps
daa
mov
orl
sbb
lods
dec
leave
mov
enter
add
add
add
jmp
inc
lcall
inc
leave
jecxz
adc
dec
ror
outsw
mov
outsl
xor
add
dec
push
dec
inc
into
fmulp
pop
add
adcb
or
in
leave
lods
or
das
aas
jmp
lret
jnp
dec
pop
push
sti
lret
push
pop
add
pop
or
cmp
adc
nopl
aas
daa
sbb
rolb
push
sbb
jb
dec
sbb
insl
and
pushf
mov
xchg
and
and
or
iret
loope
addr16
incl
sbb
mov
sub
fisttps
addr16
dec
dec
daa
shlb
dec
scas
enter
push
scas
int3
push
push
repnz
in
add
mov
cmp
or
or
or
daa
testb
int
adc
jnp
jb
sbb
and
das
cmp
pop
in
in
jbe
inc
push
outsl
pop
punpckhbw
das
shr
fs
sbb
lret
test
clc
int
pushf
pushf
mov
add
in
cmp
xor
cli
pop
into
add
pop
sahf
mov
and
in
cwtl
int3
aas
sub
fucomi
fs
dec
aas
pop
punpcklbw
pop
leave
enter
jo
vmread
fisttpl
sbb
cmp
leave
push
xchg
and
psrlw
fldenv
loope
push
leave
dec
xchg
jg
push
adc
rclb
push
sub
cmovo
fs
push
push
popa
pop
insb
ja
pop
cmp
jb
or
or
sbb
push
scas
ud1
les
xchg
xchg
daa
and
ficoml
in
daa
mov
lock
sti
adc
femms
sbb
enter
push
sbb
sbb
sbb
mulb
sbb
pop
dec
sbb
jb
push
and
add
jbe
daa
and
andl
shrd
sub
push
push
mov
mov
and
aam
push
les
in
mov
sti
pop
add
add
or
adc
sub
push
sahf
mov
pop
push
jb
cmp
mov
jb
jb
mov
mov
jb
ret
or
or
or
inc
dec
dec
add
fisubrs
daa
cli
das
rolb
adc
adc
adc
pop
push
mov
rcrl
pushf
cmp
loop
sbb
clc
sbb
roll
pop
push
pop
xor
das
push
xchg
daa
mov
je
pop
jg
and
in
xchg
xchg
mov
sub
divb
rol
rcll
sub
jnp
jb
sub
in
xor
das
pop
xor
add
iretw
inc
push
das
aam
ss
and
xchg
mov
fmull
push
das
imul
xchg
fsts
xchg
mov
les
sarl
xchg
jbe
push
lcall
daa
mov
shl
cmp
jg
cmp
jns
or
and
das
xor
cmp
pop
inc
adc
adc
in
in
jbe
data16
jle
mov
pop
fucomi
fs
sbb
leave
enter
iret
ficompl
in
in
fcomi
psubq
push
and
fs
pusha
pop
adc
cmp
jbe
subl
push
stc
cmp
push
xlat
adc
sbb
dec
dec
data16
daa
xor
pop
cmp
outsl
and
mov
cmp
mov
iret
xchg
jbe
cmp
lahf
pop
iret
push
imul
insb
call
add
and
in
add
add
mov
movb
or
popa
mov
psubusb
setg
cwtl
inc
fcomp
push
sbb
xor
cwtl
lock
inc
out
pop
or
ss
jo
ret
insb
pop
cmpl
or
das
add
test
movsb
jne
mov
cwtl
pop
imul
daa
enter
sub
imul
adc
or
add
push
xorb
outsl
or
aas
inc
push
adc
sub
dec
pop
lods
xchg
fdivrs
orb
scas
pop
inc
xorb
xchg
adcb
movl
out
xchg
add
iret
repz
add
daa
iret
repz
or
or
mov
or
xchg
adc
jbe
daa
aaa
pop
pushf
fmull
das
and
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
pop
dec
dec
sahf
out
sub
pushf
cmpsl
mov
into
aas
xlat
mov
data16
add
test
mov
mov
les
adc
jmp
add
add
xchg
mov
adc
decl
mov
and
adc
push
sbbb
js
or
andb
fisttps
mov
movsl
sbbl
sbb
fisubl
inc
ja
add
mov
inc
mov
fildll
in
iret
mov
in
call
adc
repnz
pop
ficompl
pop
fisubrl
xor
aaa
mov
neg
fsubp
stc
jb
jle
repz
jl
js
iret
repz
jo
push
iret
repz
inc
xor
and
cmp
repz
adc
or
out
cmp
or
repz
push
clc
hlt
idivb
repz
out
sahf
ja
les
mov
out
sahf
xchg
mov
xchg
jge
or
cmp
repz
inc
cmp
sub
cmp
sti
into
sbb
repnz
push
in
fadd
repz
repz
cwtl
nop
mov
js
pop
push
out
push
dec
inc
xor
ficoms
clc
push
in
fmul
jp
out
mov
ja
mov
push
push
test
icebp
xor
stos
loopne
add
arpl
pop
into
rolb
add
pop
push
fcom
sub
mov
mov
add
scas
aas
mov
pop
mulb
adc
push
orb
mov
sub
xchg
push
jae
xorb
mov
call
push
mov
pop
inc
mov
in
pop
pop
xchg
lahf
pop
rolb
or
or
call
or
adc
or
push
sbb
add
roll
divb
add
mov
push
xchg
pop
das
mov
cltd
insl
outsl
iret
test
lret
pop
xchg
enter
iret
fildl
pop
insb
in
shll
out
add
add
out
jg
xchg
add
enter
movups
add
add
and
dec
adc
cmp
into
decb
cmc
clc
or
adc
xor
movaps
das
mov
mov
in
enter
or
adc
cmp
in
sbb
adc
adc
or
and
sbb
pop
pop
clc
and
and
pusha
in
xchg
and
and
dec
scas
inc
psubb
mov
shlb
pop
imul
daa
xor
leave
push
xor
aaa
repnz
add
push
scas
fistl
iret
repz
cmp
pop
js
mov
sti
mov
enter
insl
add
sahf
out
cmp
pop
ja
mov
cmp
jae
das
push
dec
les
mov
insb
dec
aas
in
pop
pop
pop
mov
jl
xchg
push
ret
cmovno
enter
adc
xchg
aas
repnz
sbb
into
sbb
rorl
jmp
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
jmp
mov
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
call
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
pushl
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
rolb
int
mov
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
in
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
int
cmc
call
cmp
mov
sbb
repnz
incl
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
inc
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
xor
lahf
into
ror
add
cmpsb
fmuls
scas
test
or
loop
cmp
inc
mov
loop
add
inc
je
addl
nop
inc
inc
push
dec
inc
mov
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
lds
cmp
call
push
inc
dec
inc
jo
inc
popa
adc
mov
pop
imul
pop
pop
mov
insl
outsl
mov
aas
dec
insb
imul
push
xchg
fsubs
and
push
pop
jno
subl
dec
rcrb
push
jo
jb
inc
add
push
inc
inc
inc
test
out
dec
inc
gs
add
push
pop
inc
fmuls
arpl
mov
adcl
jae
outsl
test
fcomp
push
dec
pop
mov
cmp
xchg
xchg
xchg
add
xorb
test
cmpsb
das
fmuls
inc
ds
rolb
das
rclb
idivl
dec
sbb
xor
dec
inc
dec
outsl
daa
sbb
daa
daa
dec
jae
imul
mov
inc
inc
inc
jg
inc
jns
lcall
push
rcl
lods
rol
push
cmp
push
pop
outsl
xchg
jb
jns
mov
inc
push
jns
adc
dec
in
inc
or
sbb
out
dec
push
dec
dec
ss
sti
xchg
in
bound
jbe
dec
dec
pop
dec
mov
xchg
push
inc
push
mov
xor
or
cmpsb
dec
daa
add
iret
sub
mulb
push
les
dec
pop
xlat
push
sub
push
adc
add
sbb
inc
xchg
push
jbe
fidivl
mov
dec
add
mov
sbb
xorb
push
mov
imull
or
jg
notl
jo
cmp
mov
push
outsl
push
jb
add
sub
add
das
push
adc
mov
push
xorl
push
dec
adc
push
mov
and
gs
and
repnz
insl
shll
outsl
push
inc
arpl
push
lods
fcmovb
push
push
cmpsl
lea
mov
adc
pop
jg
adc
test
xchg
add
mov
pop
xchg
inc
addb
mov
add
stos
test
cmpsl
outsl
outsl
mov
mov
ja
fs
pop
ja
mov
or
ja
sbb
mov
arpl
pop
pop
cmp
test
pop
push
stc
clc
rorb
lahf
icebp
cmpsb
roll
scas
std
stos
sub
lea
pusha
stos
scas
xlat
and
fsubrs
test
dec
lahf
add
leave
add
mov
sub
cmp
and
push
lds
add
pop
adc
mov
push
adc
push
cmp
out
mov
push
test
push
xchg
dec
hlt
daa
sub
js
push
outsb
sbb
jnp
xor
aam
mov
add
push
dec
push
pop
push
jne
xchg
das
les
outsl
loopne
addb
call
dec
outsl
addr16
push
or
cmpsb
iret
inc
dec
fistl
pop
mov
mov
jno
xlat
out
cmpxchg
push
sahf
out
xor
xchg
clc
fmul
repz
enter
fs
gs
cld
mov
fiadds
movsb
xor
cmp
addb
or
and
jg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
pushl
inc
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
fsqrt
fldenv
cmp
fiadds
mov
pushl
cltd
xchg
mov
mov
or
or
ljmp
mov
jl
das
adc
stos
sbb
data16
inc
jecxz
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
stc
fnstsw
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
clc
incl
push
fdivl
or
test
fs
push
jg
test
or
or
push
in
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
jmp
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
ljmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
xlat
inc
or
sub
mov
hlt
inc
fs
mov
in
jp
outsl
inc
jne
shlb
dec
je
push
insb
imul
xchg
xlat
decl
xor
lahf
pop
inc
jbe
push
jns
arpl
arpl
mov
mov
pop
ja
adc
push
inc
insl
jns
pop
stos
pusha
jnp
jne
outsl
insl
addr16
mov
mov
mov
test
xchg
cmp
inc
push
iret
sbb
hlt
push
xor
rcr
mov
js
inc
insl
bound
es
or
sbb
inc
inc
js
sbbb
push
dec
orl
jno
jg
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
outsl
insl
sti
pop
xor
xor
or
xor
bound
pusha
xor
popa
push
inc
and
jl
insl
pop
sbb
xchg
xor
inc
shlb
addb
or
popf
dec
and
or
push
insl
push
fbld
int
sub
mov
push
jbe
arpl
sub
or
inc
aas
cltd
cmp
mov
pop
or
mov
push
adc
js
push
add
aaa
cmp
inc
movsb
push
xchg
insb
popa
xchg
push
dec
insb
adc
push
icebp
popa
xchg
cmp
je
aaa
sbb
inc
push
lret
adc
aad
add
and
jae
popf
sbb
pop
int
pop
cmc
adc
in
inc
aas
dec
push
inc
lea
mov
aaa
inc
sub
sbb
inc
pop
mov
jo
inc
inc
add
rclb
push
ds
xor
add
iret
int
push
dec
dec
lea
xchg
xorl
fs
adc
cmpl
insl
lret
and
jne
mov
jge
xor
xor
mov
sahf
add
or
add
mov
push
push
push
fdivs
or
pusha
add
mov
cltd
dec
out
imul
dec
push
outsl
add
pop
mov
lahf
jo
mov
roll
or
xchg
imul
adc
pop
xchg
add
cmp
daa
inc
jb
addr16
sbb
dec
popa
jo
or
push
lahf
or
add
push
outsl
outsl
test
and
pusha
add
adc
pop
in
xor
xor
pop
in
jno
cwtl
sbb
test
pop
cmp
pop
xchg
push
test
sarl
jo
push
xor
or
jns
mov
inc
les
popa
jb
add
test
in
nop
adc
insb
aas
inc
mov
bswap
inc
push
bound
lock
arpl
jmp
cwtl
mov
divl
sbb
xchg
xor
mov
cmpb
jns
add
push
jecxz
jg
imull
lock
and
sub
ja
add
add
imul
jecxz
push
testb
and
aam
adc
mov
pop
movsb
andb
mov
sub
test
lret
and
or
cs
mov
mov
jb
add
or
inc
push
inc
inc
xchg
and
push
add
push
or
adc
fildl
adc
inc
mov
dec
pop
nop
daa
ss
push
xchg
ret
mov
or
outsl
ss
pop
mov
int
mov
jle
fadds
and
popa
insl
add
pop
add
outsb
outsl
je
or
imul
jl
inc
dec
jg
inc
jmp
cs
cmpsb
dec
shrd
adc
in
sub
pop
lea
in
jl
lret
mov
out
ud0
jmp
repnz
addr16
in
push
pusha
ljmp
lret
cli
add
jle
push
cld
push
imul
mov
pop
fadds
mov
daa
in
imul
insb
daa
aam
sub
adc
adc
add
sti
xchg
int3
dec
orl
mov
jns
inc
sbb
add
pop
or
push
test
mov
mov
push
mov
subb
adc
bound
push
loop
dec
enter
pusha
push
add
sbb
adc
pop
add
cs
cmpb
add
les
lods
add
push
jb
adc
dec
push
mulb
inc
inc
dec
lret
sar
inc
cs
mov
insl
dec
mov
or
rcrb
dec
adc
out
add
out
cltd
and
dec
addb
repnz
push
inc
sbb
xor
cmp
gs
mov
movb
push
es
add
das
pop
inc
push
mov
lea
ss
mov
or
or
mov
jecxz
sub
jle
mov
xchg
les
cmp
jbe
xchg
les
jno
xor
imul
push
jno
int3
fucomi
gs
add
add
andps
mov
jmp
mov
pop
daa
roll
sbb
push
pushf
xor
cmpsl
lret
or
loope
add
jnp
popf
push
adc
outsb
sub
hlt
mov
enter
or
dec
push
es
mov
adc
outsb
movsl
inc
test
sti
adc
push
push
pop
jns
adc
or
xchg
or
cmpsb
icebp
add
jnp
sub
rcll
aad
sarl
in
fstpt
movzbl
or
rcll
add
les
pop
fcmovnu
leave
lds
scas
cmp
jbe
mov
repz
push
out
xchg
pop
arpl
lret
nop
hlt
dec
add
cmc
test
or
mov
dec
pop
push
xchg
test
jbe
or
mov
dec
imul
movsl
mov
loopne
push
insl
sub
sbbb
push
add
or
sbbb
cmp
cli
push
call
mov
clc
pushf
and
aad
or
imul
push
inc
imul
add
int3
gs
out
fcmovu
push
imul
sti
and
lds
outsb
ret
mov
fwait
in
inc
dec
and
sbb
and
in
rorl
insb
push
inc
adc
sbb
roll
cmpsb
loopne
rorb
mov
movsl
loop
inc
daa
test
cld
add
adc
push
add
jbe
leave
fs
xchg
sub
mov
push
jne
mov
mov
add
dec
in
push
leave
mov
pop
pop
jmp
cmp
pop
add
fstl
sub
cmpsb
ds
jmp
test
cmp
or
or
jo
sbb
dec
pop
push
sbb
xchg
rorb
sub
nop
sbb
mov
cltd
test
sti
lds
lea
mov
xor
jo
cmpsb
aam
imul
aas
mov
mov
es
call
aam
je
inc
test
mov
in
jecxz
push
add
sbb
add
push
mov
jl
in
aam
lea
cs
or
lds
mov
inc
scas
lds
push
pop
orb
add
bound
arpl
scas
lea
nop
in
add
and
mov
push
or
fiaddl
add
repnz
cs
je
xlat
daa
movsl
mov
xor
push
repnz
mulb
ds
add
xor
pop
jne
jge
in
push
out
or
jae
sbb
mov
aas
adc
xchg
popf
xlat
icebp
movsb
loopne
push
dec
or
mov
popa
movsb
mov
inc
and
push
ljmp
imul
pop
not
push
jo
push
dec
inc
push
push
insb
fcompl
push
xor
hlt
sub
mov
lahf
push
mov
movsb
in
sbb
sub
and
sbb
fcoml
or
popa
xchg
xlat
addl
jno
mov
dec
jl
sbb
lcall
or
stc
jp
xchg
and
jg
mov
push
mov
cmp
push
or
inc
or
sbb
pop
jl
fidivs
pop
xchg
sbb
push
xchg
inc
pop
test
ja
mov
and
inc
push
rolb
add
add
roll
push
jnp
insb
imul
fwait
xor
sub
das
mov
pop
call
ret
cmp
add
and
pop
push
fwait
pop
add
mov
add
pop
xchg
and
and
add
fwait
nop
add
push
lret
fldl
inc
adc
sub
enter
clc
icebp
shlb
mov
push
dec
call
jge
pop
push
call
push
mov
clc
call
jne
xchg
inc
dec
mov
lea
ret
les
push
imul
cld
sub
sbb
sbb
jmp
mov
add
push
sub
lock
push
xchg
addl
call
jp
mov
or
or
ja
pop
add
or
jmp
xchg
out
sti
add
ja
sbb
mov
inc
into
pop
in
dec
push
inc
mov
pusha
or
dec
push
push
or
or
sub
in
mov
loopne
push
fs
sbb
inc
mov
mov
and
mov
push
or
in
shl
sbb
jmp
xor
push
inc
clc
mov
adc
clc
sbb
lret
lcall
std
mov
add
ret
sub
cmpsl
sub
mov
jnp
in
push
push
jecxz
inc
movzbl
jno
lds
insl
testl
icebp
cmpsb
mov
ss
adcb
pop
ret
mov
sarb
popf
or
lds
and
pusha
stos
pop
lods
push
pop
lahf
mov
movsl
bound
mov
je
push
push
je
sub
pop
push
push
cmpsl
imul
shlb
jbe
sub
daa
dec
add
loop
inc
and
push
jo
dec
in
inc
sub
xor
jl
pop
ss
lret
jmp
lds
sub
or
lcall
adc
pop
mov
ds
shlb
sbb
sbb
sbb
pusha
loop
fdivr
ds
leave
pop
jb
push
into
or
cltd
push
fidivl
sbb
push
dec
fdiv
loop
and
cmp
loopne
ja
gs
pop
pop
pusha
push
inc
sub
int3
call
sbb
push
jecxz
xchg
mov
mov
cmp
testl
xchg
fimull
andb
xchg
cmpl
insb
cmp
adc
cmp
cmp
loop
fstl
ds
xlat
cmp
not
inc
cmp
cmp
loope
jne
in
rol
jne
push
lea
adc
inc
jno
test
cmp
mov
movsl
insb
sub
add
je
mov
das
and
mov
scas
sub
daa
rol
fcmovnbe
jbe
lods
add
cmp
xchg
add
cmpsb
imul
andb
pop
xlat
call
sbb
xchg
popf
xor
xor
shrb
dec
mov
ret
push
jl
cmp
fsubl
mov
add
stos
pop
mov
mov
jmp
mov
jl
enter
xor
call
pop
hlt
mov
int3
or
mov
xchg
mov
mov
push
add
mov
jns
rorb
adc
and
pop
aas
pop
mov
pop
add
mov
lds
xchg
imul
cmpsb
icebp
add
rep
and
rep
push
scas
or
push
mov
and
jne
cmpsl
push
shll
jle
rcll
aas
mov
and
xchg
cmpsl
sarb
in
rep
loopne
push
inc
or
cmpl
shlb
sub
js
orb
inc
mov
cmpsb
push
sbb
push
push
das
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
sbb
push
in
pop
fisubl
je
cmpl
sbb
je
mov
cmp
scas
sbb
mov
sbb
call
add
stos
pop
insb
or
and
leave
push
mov
jp
push
xor
adc
stos
out
or
testb
sbb
and
into
rcr
shll
fiaddl
mov
jnp
ret
lret
push
xor
adc
pop
cmpsl
cmp
sub
inc
mov
aas
js
mov
push
cwtl
lret
mov
std
sub
imul
enter
push
adc
sub
and
or
insb
fs
fimull
and
scas
dec
adc
call
cwtl
push
addb
push
xchg
pushf
add
and
cmp
jle
mov
and
jmp
adc
jp
cs
dec
pushl
push
sub
loopne
cmovbe
dec
in
in
push
add
xchg
mov
push
and
pop
pushf
pop
cs
cmp
inc
xlat
or
mov
pop
dec
sub
xchg
cltd
mov
or
jge
cmp
or
ds
nop
dec
in
xchg
or
xchg
in
jo
pop
enter
pop
adc
imul
jbe
insb
cmp
and
pop
into
leave
and
xlat
sub
mov
jp
mov
cmp
xchg
lods
inc
shrl
test
in
mov
add
sbb
lahf
bound
roll
inc
cltd
stos
repnz
cmp
cmp
cltd
je
inc
mov
or
mov
sub
in
mov
inc
jle
shl
aam
fsub
insb
sbb
cmp
mov
popa
mov
xchg
mov
lcall
mov
adc
or
push
imul
es
jnp
notb
adc
push
fisttps
arpl
pop
movsb
push
ljmp
pop
mov
cmp
xor
lods
nop
mov
cmp
pushf
arpl
jbe
in
sub
xor
lret
xchg
sbb
push
lcall
dec
mov
mov
jle
xchg
popa
xchg
cmpsb
adc
jmp
repz
mov
out
fcomp
inc
test
cmp
inc
enter
nop
cli
imul
inc
mov
xor
pusha
movswl
sbb
pushf
push
aad
es
mov
lods
lods
dec
xlat
push
push
push
lods
mov
repz
mov
push
jg
scas
pop
test
push
call
out
jns
add
sub
mov
in
dec
adc
or
and
rorb
int3
je
js
mov
push
inc
push
cld
je
rclb
jl
cmp
inc
pop
push
test
notl
movl
pop
in
and
sahf
lods
daa
push
popa
in
jne
xor
mov
test
or
add
mov
pushf
sbb
push
sbb
icebp
or
gs
ljmp
push
add
add
out
rolb
sahf
enter
xchg
or
xchg
sbbl
or
lock
pcmpeqb
es
into
sbb
popf
ss
pop
fbstp
ja
inc
out
add
inc
xchg
adc
inc
dec
pop
and
aam
or
je
or
or
je
mov
mov
cmp
adc
xchg
mov
dec
or
inc
outsb
or
cld
inc
mov
or
adc
xor
bound
jmp
push
ss
loopne
mov
aad
mov
adc
xor
movsb
movsl
lahf
pop
sbb
mov
mov
cli
dec
cltd
cmp
popf
rorl
xlat
cltd
insb
cld
adc
test
add
or
mov
clc
push
mov
add
adc
rorb
scas
push
movsl
jns
lods
jbe
adcl
iret
nop
stc
nop
push
add
outsb
orb
adc
into
jae
test
mov
push
push
sbb
daa
cmp
adc
mov
mov
mov
push
loopne
int
rolb
hlt
repnz
insl
jns
xor
adc
dec
popa
sbb
inc
inc
xor
fstp
mov
or
shr
pushl
icebp
mov
jnp
mov
fbstp
call
cmp
imul
xor
mov
cli
ret
push
inc
shll
cmp
cmp
call
mov
and
aas
mov
jmp
mov
dec
xor
mov
add
inc
adc
xchg
xchg
adc
dec
mov
mov
pop
push
fdivrl
aaa
inc
repnz
dec
adc
std
lahf
incb
push
adc
push
push
ds
push
ret
cmp
or
adcl
nop
test
bound
addl
dec
add
mov
and
aam
xchg
push
or
jb
sahf
or
push
mov
sub
push
sarb
adc
popf
into
cmc
push
sub
subl
push
outsl
addb
add
int
mov
add
or
sub
orb
xlat
jmp
cmp
push
xor
dec
shlb
mov
addl
daa
mov
inc
out
pop
inc
inc
push
push
add
dec
insb
nop
stos
daa
mov
cmp
cmp
pop
pop
cmp
jmp
ret
xor
popf
mov
fisubrl
loopne
sahf
cmpsb
ja
inc
jecxz
push
mov
enter
call
pop
ret
lea
jno
sub
push
fadds
scas
popa
xor
dec
sub
sub
xchg
sar
add
clc
popa
cmpsl
fisttpll
or
enter
dec
adc
push
in
insl
mov
mov
pushl
dec
jo
and
push
in
lcall
sub
js
xor
xchg
cmp
sbb
jno
mov
mov
add
mov
push
ds
adc
inc
jl
push
or
fnstenv
ss
adc
lods
mov
test
dec
mov
rolb
pusha
cmp
imul
sbb
mov
add
rcrb
sbb
jp
mov
cmp
push
push
std
fwait
and
adc
jne
mov
jmp
mov
add
or
inc
int
les
or
or
inc
sbb
lahf
dec
sete
int3
add
shll
or
mov
xchg
mov
push
sarl
and
and
outsb
mov
call
out
pop
test
dec
xchg
ljmp
sbb
sbb
push
or
cmpsb
and
mov
iret
mov
cmp
ss
mov
loopne
mov
test
mov
sbb
call
mov
adc
mov
mov
xor
xor
push
adc
mov
lea
adc
jae
outsl
mov
das
stos
push
fucomip
cmp
enter
je
cmp
jbe
or
cmp
xchg
mov
mov
jg
nop
mov
push
and
std
pop
jbe
add
lock
push
loope
jnp
sbb
push
in
jo
daa
dec
xchg
xor
adc
jo
sub
and
ret
loop
test
add
loopne
inc
jmp
rolb
xor
lea
stos
fwait
add
xchg
loope
je
test
inc
xchg
clc
mov
mov
rorl
xchg
mov
xor
test
push
aaa
jbe
jbe
fwait
jmp
jl
mov
push
mov
mov
in
fsubr
jo
push
sbb
test
pusha
and
cmp
decl
fsts
or
xchg
push
inc
adc
add
mov
lods
stos
loopne
sti
xor
je
xchg
push
or
xor
dec
jle
test
and
jns
xor
sub
mov
jl
push
adc
or
push
lea
or
and
pop
xorb
push
xchg
das
mov
xor
int
mov
cmp
push
push
cmpsb
xchg
lods
dec
pop
aam
in
aas
mov
cmp
cwtl
popa
fsubrl
call
pop
subl
shlb
xchg
and
push
call
add
sbb
je
fmull
js
push
push
push
movsl
sbb
cmc
xor
add
add
or
pusha
adc
sub
push
and
mov
inc
cmp
push
movsl
and
and
in
dec
mov
rol
mov
push
push
mulb
sbb
popa
mov
jmp
adcl
sbb
pop
imul
adc
mov
mov
jmp
outsb
das
mov
addps
fidivl
lock
dec
push
hlt
sub
push
adc
mov
add
iret
mov
jne
clc
and
cmp
test
adc
push
sbb
mov
mov
pop
add
jmp
sub
push
or
and
or
or
mov
fsts
xchg
or
orb
push
rcrb
or
loop
call
push
pop
mov
movsb
sti
adc
iret
call
fucomp
and
lea
mov
or
test
pop
ficompl
add
pop
sbb
shll
sbb
sbb
jne
mov
cmp
jmp
in
dec
shll
inc
cmp
jne
push
mov
and
or
je
int3
and
iret
hlt
jecxz
decb
fadd
jns
outsl
xorl
adc
jmp
nop
xor
adc
and
cmp
shlb
jns
icebp
add
jp
call
rcrb
test
ljmp
pop
cld
push
mov
setb
push
pop
lcall
jmp
repnz
arpl
fs
sub
pop
enter
lcall
dec
jl
js
negb
and
test
sbb
xor
mov
fxtract
sbb
xchg
shr
pop
xorb
movsb
imul
inc
or
mov
or
clc
pusha
movl
xchg
add
add
lcall
mov
or
xchg
jne
fcomp
sti
xlat
add
push
call
in
movsb
jmp
in
cmp
js
sbb
addr16
aad
test
or
mov
mov
sbbl
cmp
pusha
and
int3
jbe
mov
lock
mov
scas
or
push
mov
and
movd
je
push
stc
shl
sub
xchg
fcompl
inc
xlat
add
push
adc
and
push
sbb
cs
fdivl
or
mov
daa
mov
sub
cld
outsl
sbb
inc
test
test
rcrl
and
sbb
loopne
fs
inc
mov
in
and
cs
mov
dec
dec
andl
cmp
pop
mov
push
dec
lea
shrb
pop
mov
orb
insl
xchg
popf
jbe
test
aas
mov
call
mov
or
scas
and
pop
icebp
xchg
fcoms
mov
cmp
fadds
dec
and
xchg
or
aam
nop
adc
mov
test
lods
test
ret
sbb
lea
xor
lret
rclb
flds
movsb
add
mov
or
je
mov
push
cli
sub
subb
sbb
and
ja
push
mov
lea
inc
xor
inc
pop
cwtl
or
rorb
in
adc
shlb
inc
xor
out
add
mov
pop
xchg
cmp
call
xchg
loopne
and
movsb
pop
and
cmp
mov
sub
dec
and
loope
or
push
call
push
add
das
dec
test
inc
mov
push
scas
hlt
cs
test
dec
dec
testb
je
shrl
xchg
clc
cmp
or
mov
push
sbb
std
push
popl
xor
imulb
enter
dec
fistpl
xchg
pop
sbb
add
mov
inc
imul
mov
sti
adc
pop
inc
pop
sub
insl
or
pop
imul
mov
push
imul
or
inc
push
insl
or
mov
ret
pop
pop
mov
pop
cmp
out
xor
faddl
ficompl
mov
dec
inc
adc
mov
xchg
loopne
shlb
push
cmp
sub
pop
sbbl
imul
insl
fcoml
xor
push
imul
stos
mov
and
sub
in
mov
adc
rorb
push
dec
icebp
mov
xor
pop
popa
pusha
inc
mov
sbb
nop
dec
es
shll
xor
mov
cli
or
sbb
mov
jle
mov
flds
mov
xor
jmp
call
mov
dec
sarl
aam
inc
adc
cmp
lock
iret
call
and
pop
dec
adc
int3
pop
mov
xor
xchg
mov
jmp
pop
leave
inc
mov
cmp
or
aas
insb
and
mov
jae
out
sti
pop
call
clc
scas
pop
fs
andb
insb
mov
pushl
cmp
jmp
cmp
daa
fs
xchg
sbb
push
or
xchg
rcrb
xchg
addr16
cmp
pop
push
les
imul
fimull
ljmp
lds
shl
mov
and
add
sbb
push
mov
sbb
bnd
and
cmp
or
adc
leave
test
js,pn
aam
cld
dec
mov
adc
add
loope
xor
cmp
jge
call
and
arpl
inc
mov
dec
incb
mov
es
cmpsb
add
movsl
adc
and
cs
aam
repz
lahf
insb
adc
decl
dec
shl
sbb
rcll
es
out
add
sbb
inc
jmp
jg
mov
dec
push
add
or
in
inc
cmp
ficomps
cltd
inc
clc
add
dec
test
push
xchg
sbbl
js
push
into
mov
nop
inc
dec
rolb
imull
push
movsl
imul
dec
adc
jp
js
xor
pop
adc
fdivs
inc
scas
mov
jle
repnz
xchg
pop
aaa
movl
mov
adc
adc
add
and
adc
in
roll
adc
cmp
xchg
rcrb
push
daa
adc
daa
adc
call
mov
push
fisttpll
mov
and
dec
and
les
pop
daa
xor
popa
and
jnp
mov
sub
bound
mov
in
sub
dec
and
addr16
lret
daa
mov
lret
call
or
push
dec
inc
daa
or
push
inc
scas
dec
adc
fs
out
jnp
data16
pusha
nop
push
in
nop
je
mov
push
popf
es
mov
inc
dec
cmp
fldl
inc
or
push
sub
call
adc
add
add
dec
sbb
loopne
jmp
imul
mov
adc
pushf
adc
or
lock
daa
inc
out
fstpl
add
and
dec
inc
shrb
pop
nop
sbb
imul
lcall
out
or
push
mov
ror
cmp
cmp
fidivl
ret
add
or
push
adc
lcall
fadds
int3
add
addl
rolb
inc
pop
test
insl
inc
xchg
dec
dec
inc
fidivrs
loop
or
insb
and
test
cli
dec
pushf
push
pop
jmp
mov
xor
xor
sub
nop
test
setg
fidivl
test
inc
xor
push
pop
add
or
add
add
cmovno
movsb
dec
inc
lret
mov
cmp
je
xchg
add
mov
add
mov
push
gs
xor
or
pop
inc
or
lea
or
cs
in
or
add
or
sahf
xchg
sub
or
psrld
mov
jb
out
or
or
or
push
or
iret
enter
movq
adc
pop
adc
or
adc
in
add
adc
jns
cmp
adc
adc
push
adc
adc
adc
leave
ror
adc
push
repnz
push
inc
pop
out
cmpl
jns
sbb
xchg
sbb
cmp
sbb
xchg
sub
sbb
mov
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
lds
xor
sbb
jns
push
inc
negb
movsb
incb
enter
add
add
sub
mov
enter
mov
add
cmp
xchg
and
lods
pop
repz
add
cwtl
xchg
push
in
push
in
imul
rol
adc
and
xor
mov
out
mov
pusha
and
sub
call
je
call
idivl
jmp
cmp
dec
push
inc
jmp
jmp
dec
push
mov
in
repnz
ss
xchg
aad
in
cmp
xchg
cmp
push
mov
out
pop
enter
out
or
je
push
imul
in
fmulp
dec
icebp
cmp
das
mov
jnp
or
add
hlt
hlt
jns
addr16
imul
std
sbb
cmp
scas
in
mov
sbb
movsb
test
clc
clc
addr16
sbb
or
mov
cli
add
scas
add
sti
insb
in
repnz
cld
cld
je
cld
push
dec
fdivrp
or
ss
xor
enter
sbb
xor
cs
xor
jb
enter
lahf
roll
or
fwait
or
jecxz
addb
jecxz
xchg
xor
cs
in
stos
xlat
aad
cmpl
aam
or
in
xorl
xchg
scas
inc
repnz
sti
andb
adc
or
dec
jmp
jmp
mov
in
cltd
or
adc
nop
jmp
push
dec
cli
out
out
out
or
lock
rcll
cli
or
aas
repz
jb
repz
sbb
add
stc
dec
in
xlat
imul
mov
xchg
and
aad
cltd
jb
jb
popa
leave
push
stc
sbb
nop
cmpsb
sti
sti
sti
xchg
or
cmp
jmp
push
xchg
stos
pop
mov
jge
add
test
stos
dec
or
xabort
or
sub
dec
loop
loop
stos
xchg
stos
shll
loope
xchg
pop
leave
inc
clc
and
loopne
add
or
scas
ss
fdiv
out
dec
push
and
mov
xchg
adc
push
push
ljmp
and
notl
notl
inc
mov
hlt
imul
jb
or
xchg
into
testb
mulb
pusha
leave
nop
testb
repnz
inc
nop
mov
sub
dec
push
sub
out
int
rclb
testb
fsts
loope
cmp
clc
clc
cmp
jmp
in
adc
cmc
pop
leave
or
fiadds
xchg
hlt
or
stos
add
push
data16
test
adcb
push
jo
adc
xchg
add
sbb
mov
loope
jo
pop
in
loope
jp
setbe
pop
pop
hlt
cmp
imul
hlt
in
pop
dec
jo
pop
repz
mov
mov
push
dec
adc
mov
insb
repz
cmp
repz
or
mov
in
cmp
cmp
repnz
daa
or
stos
jns
lcall
inc
pop
xchg
pop
adc
repnz
sbb
cld
icebp
cmc
cmc
mov
icebp
mov
sub
and
icebp
movsl
mov
stc
stc
and
inc
lea
shlb
icebp
movups
aad
dec
adc
icebp
adc
add
jmp
cmpsl
sub
dec
neg
sub
push
sub
ffreep
push
inc
mov
loope
inc
cmp
and
ret
pop
push
sub
adc
mov
push
mov
testb
add
jne
stc
mov
cs
dec
icebp
dec
add
movsb
xchg
push
dec
and
jmp
enter
jmp
and
add
int3
dec
push
nop
push
jns
stc
cmp
inc
adc
aaa
or
push
jl
int
add
jp
fwait
int
shrl
cli
push
jecxz
repz
mov
xor
pop
insb
sbb
push
repz
mov
push
aad
in
xchg
gs
dec
dec
out
iret
outsb
or
mov
add
adcl
dec
mov
sbb
fisubl
or
xchg
mov
mov
and
dec
push
dec
lret
test
inc
pop
ffree
push
movsb
popa
sub
pop
xor
xchg
lods
jle
je
mov
sbb
test
fists
push
subb
sub
jmp
inc
xorl
or
push
nop
sub
push
pop
cmp
pop
cmp
push
addb
lea
jnp
or
popa
and
pusha
imul
xor
daa
data16
call
punpcklbw
add
in
and
shr
ror
pop
mov
imul
jp
pop
xchg
xchg
es
adc
mov
xor
jo
lret
adc
jmp
adc
dec
dec
xchg
movb
in
mov
test
push
rcrb
xor
adc
das
pop
xor
adc
fldl
stos
adc
sub
push
or
adc
ret
lret
hlt
psubsw
xchg
hlt
cmp
inc
sub
mov
jb
pop
xor
or
and
mov
jbe
gs
adc
inc
add
movsl
mov
pop
xor
aaa
or
add
xor
and
adc
add
and
out
sbb
xor
mov
add
or
and
adc
mov
mov
adc
addb
inc
dec
pop
adc
xchg
pop
out
and
adc
mov
rcrb
pop
test
inc
andl
add
xor
out
add
lea
movsl
aaa
mov
fnstenv
xchg
xor
test
add
or
mov
ret
inc
pop
jg
adcl
or
jbe
lea
mov
or
jg
cmp
je
stos
push
inc
in
or
orl
call
les
stc
xchg
aas
or
leave
rclb
xchg
pop
roll
inc
adc
mov
ja
push
jle
lock
or
fcomps
movsb
sti
and
jb
xchg
push
mov
and
adc
es
jmp
jl
jmp
nop
outsb
lcall
movsb
adcb
in
outsl
pop
and
mov
xor
scas
inc
ss
hlt
inc
out
jb
sbb
cmp
inc
inc
inc
out
or
inc
scas
push
inc
ja
mov
out
lds
ja
addb
pop
push
inc
cmp
and
nop
ja
inc
mov
andl
mov
jbe
leave
leave
dec
cmp
sub
in
lret
shld
ja
pop
sbb
nop
dec
in
addr16
mov
inc
nop
outsb
or
sbb
nop
out
xorb
rcr
xchg
mov
in
push
jno
dec
pop
push
cltd
pusha
adc
adc
rolb
or
addb
fbstp
ja
shrl
pushf
nop
adc
or
xor
addb
push
mov
icebp
jo
mov
add
push
jmp
nop
cmp
xor
aam
inc
xor
add
cmpsb
nop
xchg
push
jbe
ret
lods
nop
dec
loopne
call
pop
lods
jbe
dec
sub
and
loopne
frstor
and
add
test
xor
mov
cli
and
add
mulb
jne
push
jmp
push
sub
add
fldenv
mov
pop
mov
test
cwtl
test
and
xchg
xchg
push
rclb
fwait
or
push
push
cmp
ret
push
add
orl
fwait
std
lods
and
and
lea
enter
xorl
arpl
dec
or
or
jno
jb
in
inc
sbb
pop
mov
shlb
ret
inc
pusha
arpl
jb
movsb
xor
nop
lahf
push
mov
jecxz
mov
call
movsb
repz
inc
push
push
jg
imul
scas
sub
ja
data16
decl
cs
hlt
jle
rol
dec
sub
add
faddl
cmp
cmc
cmpsl
mov
push
xor
add
xor
rorb
inc
mov
pusha
aaa
test
sub
or
xor
xchg
dec
and
pushf
mov
and
pushf
nop
sahf
sub
in
add
clc
or
inc
daa
sub
jmp
mov
in
popa
fsubs
add
je
nop
xchg
or
and
movsl
inc
sbb
addb
xor
loopne
jg
pop
lea
data16
cmp
andl
or
and
and
stos
jbe
sub
pusha
push
cmp
jl
out
in
aaa
popa
aas
ss
ret
and
xor
mov
add
outsb
inc
outsl
or
nop
outsl
add
and
outsl
inc
std
es
loopne
inc
fnsave
rclb
outsl
cmp
push
adc
and
int3
xchg
dec
sub
test
sti
dec
aaa
push
daa
dec
mov
sbb
dec
outsl
xor
cwtl
loopne
movsb
outsl
scas
xor
test
jb
movl
mov
push
repz
and
repz
xorl
ret
or
cmp
loop
mov
mov
mov
mov
repnz
xchg
imul
sbb
inc
inc
and
mov
loopne
subl
imul
inc
imul
sbb
xchg
push
sub
push
insb
cmp
mov
js
je
loopne
mov
mov
rcl
fucomp
sbb
lahf
call
jge
push
enter
xchg
mov
jno
xchg
ljmp
pop
notl
xor
dec
push
jbe
in
loope
inc
inc
addr16
je
or
pop
subb
inc
stos
lahf
aam
sbb
test
imul
inc
pop
dec
adc
je
cmp
rclb
sub
or
sbb
sub
mov
rol
xchg
cmp
sub
inc
leave
loopne
sub
sbb
add
cli
enter
or
add
cmp
lods
xor
add
rorb
cmp
xlat
ss
cs
inc
test
xchg
jp
rclb
je
jg
adc
shrb
rclb
ret
subps
or
jp
imul
mov
mov
mov
push
dec
add
sbb
pushf
push
rclb
addl
inc
inc
imul
or
imul
into
xchg
dec
or
dec
or
mov
imul
aad
add
xor
out
imul
pop
sbb
dec
add
imul
ss
add
ds
push
jbe
call
pop
adc
daa
rcl
cmpl
sub
push
xor
push
and
and
jb
adc
push
je
add
imul
rcrb
or
sbb
or
imul
cs
sbbb
imul
pop
sbb
addb
imul
inc
out
dec
jmp
rcl
dec
sub
rclb
mov
pop
je
aam
jp
adc
imul
fwait
sub
imul
test
enter
imul
imul
adc
jae
or
add
xchg
data16
int3
sbb
lock
xor
insb
jo
jb
or
xchg
movsb
fcmovbe
enter
jbe
mov
mov
push
int
in
mov
mov
xor
or
addb
sbb
lods
mov
ss
or
pop
rclb
rcrb
pop
imul
imul
imul
cmc
jmp
push
shlb
adc
lret
outsb
sbb
pop
xor
sub
lods
andb
imul
addb
lahf
xchg
sarb
cmp
and
pop
enter
imul
mov
call
sbb
xchg
imul
adc
xchg
push
dec
push
inc
call
movsb
les
sub
lods
fiaddl
sub
add
js
or
inc
or
sbb
rcrb
mov
rolb
mov
mov
sub
imul
xor
cmp
inc
inc
inc
inc
inc
push
pop
push
inc
inc
inc
dec
dec
pop
cmp
je
cmp
push
shrb
dec
push
mov
pop
dec
push
inc
add
imul
daa
adc
loop
sbb
imul
jno
ds
addr16
leave
jmp
xor
xor
insb
ja
push
les
xor
xor
daa
icebp
mov
repz
mov
in
pop
xchg
movsb
and
jle
nop
leave
mov
out
push
mov
jae
rolb
bsf
sub
in
outsb
push
mov
inc
push
xchg
adc
jmp
jbe
sbb
or
ret
mov
cmove
pusha
pop
or
outsl
cmpsl
iret
popf
test
jbe
ljmp
mov
ja
addr16
int3
add
push
fs
ret
jl
dec
inc
pop
inc
scas
add
pop
push
nop
add
push
mov
inc
gs
xchg
sbbb
xchg
add
fs
test
jae
mov
test
push
xor
les
push
shrb
dec
jo
adc
mov
mov
dec
ud1
push
sub
in
jo
pushf
lods
in
adc
or
sbb
and
lods
cmp
mov
jl
pop
add
and
mov
sahf
and
or
je
add
js
dec
xchg
je
test
jae
dec
xchg
jg
add
pop
mov
push
jg
cmp
ljmp
fdivrl
push
cmc
hlt
movsl
jp
add
xchg
adc
xchg
jmp
jg
inc
push
and
or
or
leave
xchg
call
mov
xor
jl
rolb
movsl
aam
in
cli
fs
sbb
push
lcall
or
rorb
fwait
test
pop
push
add
jae
xchg
es
adc
add
pusha
stos
add
fwait
fwait
ss
shrl
xchg
fmul
nop
inc
hlt
out
or
inc
shrb
cmpsl
enter
cmpb
xor
adc
xor
cli
testb
ja
data16
sbb
or
nop
dec
in
cmp
fisttpl
mov
sbb
xor
hlt
mov
pop
call
sbb
aad
fimuls
call
mov
and
inc
mov
and
movsb
inc
push
cwtl
fnstcw
shll
rolb
mov
push
inc
xchg
ret
cmc
pusha
into
add
mov
inc
rcrb
orb
rcrb
rcrb
hlt
or
adc
rorb
sub
pop
adc
inc
aaa
adc
rorb
inc
mov
jnp
add
push
fs
inc
and
mov
push
inc
xor
push
mov
xor
loopne
movsb
mov
inc
xchg
and
or
pusha
jmp
mov
imul
mov
jecxz
xchg
cs
call
sbb
gs
fs
sbb
pushf
dec
call
sub
rolb
mov
test
xchg
push
int3
inc
inc
jne
and
inc
inc
jne
nop
rolb
inc
ja
pusha
mov
nop
nop
sbb
jne
and
inc
jne
frstor
insb
jo
je
or
call
and
jne
in
jne
jne
adc
and
adc
popa
add
jne
fs
jne
call
mov
sub
mov
mov
jne
pusha
add
or
cmp
daa
jne
inc
cmpsl
cmp
push
test
jmp
les
mov
sbb
jae
lea
push
rol
jle
push
mov
cwtl
adc
add
ljmp
call
xchg
mov
movsb
add
incl
jl
enter
je
add
inc
in
xchg
mov
sbb
rolb
idivb
inc
push
push
adc
test
jp
lds
mov
sbb
adcl
pusha
addl
pop
push
ja
or
push
cmpl
pop
inc
sub
pop
add
add
in
out
call
cmp
and
add
adc
loopne
adc
adc
add
push
sbb
ljmp
or
cmpsl
lcall
popa
push
add
cs
mov
sbb
jmp
incl
fimull
add
jb
jecxz
out
nop
xor
push
inc
call
add
pop
inc
jbe
mov
ss
call
mov
rcr
xor
test
mov
jne
push
movb
pop
inc
cmp
std
insl
imul
cmp
push
inc
jmp
dec
jmp
xor
sbb
push
inc
inc
jmp
adc
push
inc
aaa
mov
inc
inc
inc
pop
je
pop
es
add
dec
aas
sub
sbbb
and
pusha
xor
mov
add
rorl
stc
push
sub
in
add
mov
int
adcl
je
inc
or
je
jl
push
hlt
cmp
rol
clc
and
cmp
leave
or
pop
or
ror
call
sbb
out
xor
inc
jmp
add
sbb
arpl
jmp
and
insl
pop
cmp
movsb
rcrl
sbb
loop
or
add
mov
adc
push
mov
cwtl
dec
imul
notb
pop
ret
movsl
rcr
call
xchg
push
fdivl
in
or
or
jb
cmp
negl
shl
pop
fisubrs
jge
push
push
sub
std
dec
mov
pop
xor
xchg
aam
aam
cmc
cld
aaa
or
jmp
cmp
xor
jnp
add
lock
push
add
lret
sub
push
cld
jb
cld
addb
call
dec
sub
movsl
mov
xor
lods
sub
hlt
mov
mov
fcompl
fcomip
inc
adc
sub
pop
fimull
or
nop
mov
daa
stos
sbb
fwait
cs
or
ret
andb
xorb
or
add
push
imul
or
sbb
lcall
icebp
popa
add
push
mov
imul
in
push
popl
cmp
mov
shlb
push
add
lock
adc
adc
or
out
add
jo
adc
lret
dec
push
fnop
shlb
stos
insb
enter
test
xor
rol
js
mov
mov
je
mov
add
ljmp
iret
mov
mov
dec
js
or
lret
lret
or
test
lock
call
hlt
jae
call
sub
cmc
fists
add
or
xchg
xlat
sbb
cmp
mov
test
testl
stos
pop
data16
pop
movsb
mov
fbstp
adc
les
dec
cmpsb
fbld
ja
xchg
or
or
ret
pop
pop
xchg
push
lea
nop
mov
or
shl
jge
xchg
or
testl
pop
add
pop
shrl
out
jmp
inc
out
xor
and
mov
add
or
xchg
pop
lea
dec
xorl
push
pop
bound
fnop
xchg
add
xor
mov
mul
or
emms
sarl
mov
dec
xor
mov
xor
jb
lret
mov
jae
mov
jne
aas
mov
lret
sar
and
pop
shll
dec
pop
and
inc
mov
mov
jg
add
dec
ss
sbb
pushf
mov
xchg
jg
inc
cli
pop
sub
pusha
pop
repnz
ljmp
jne
js
call
lret
xchg
shr
add
mov
xor
xor
xchg
ss
rcl
and
cmp
inc
fistpll
or
mov
fwait
gs
cmp
daa
xchg
call
mov
pop
mov
jb
nop
sub
mov
in
pushf
shlb
dec
push
lret
nop
stc
pusha
mov
and
or
xor
test
mov
fidivs
in
nop
dec
shr
jecxz
mov
mov
inc
push
jecxz
jns
icebp
pop
lret
nop
je
jns
sub
cwtl
cmp
rolb
insb
pop
inc
and
or
in
mov
inc
loopne
xor
push
xor
inc
inc
mov
add
gs
cmp
in
adc
rorl
adc
xor
outsl
xor
and
push
jmp
dec
sahf
pushf
cmp
mov
inc
test
push
faddl
and
and
push
push
fdivl
xor
add
sub
jb
ret
mov
mov
loope
add
jbe
sbb
es
sbb
sbb
sbb
mov
repnz
push
in
clc
add
xchg
push
inc
repnz
dec
lcall
sbb
ffree
adc
xchg
lea
insb
push
pusha
or
jecxz
cmpsb
leave
xchg
fildl
fsubrl
sbb
sbb
loope
pop
mov
pop
xchg
lret
mov
lret
nop
sbb
push
mov
mov
or
pop
push
dec
dec
bswap
ret
sbb
mov
add
sbb
pop
int
sub
test
sarb
mov
test
mov
adc
pop
xchg
adc
sbb
and
loopne
in
daa
sbb
rol
ljmp
xchg
dec
ss
in
xchg
dec
xchg
or
inc
pop
out
or
or
mov
xor
mov
ret
lcall
mov
or
jmp
xchg
daa
outsl
and
mov
xorl
push
mov
dec
test
mov
scas
stos
ss
or
mov
aam
dec
call
xor
jg
dec
mov
addb
scas
xor
xor
push
dec
mov
dec
dec
dec
sub
test
cmp
jl
adc
mov
sbb
nop
mov
fsts
dec
call
and
push
fstps
adc
cmp
pop
and
push
mov
daa
pop
sub
insb
nop
sbb
out
xor
lret
fdivs
std
dec
cmp
push
xchg
mov
iret
shll
rolb
je
push
mov
mov
arpl
cwtl
daa
add
or
out
pop
sbb
add
cltd
sbb
roll
mov
push
pop
and
cmp
mov
pop
or
add
xor
pop
cmp
cmp
and
mov
push
call
add
push
mov
mov
aaa
add
xchg
adcl
rorb
loope
sub
lock
adc
sub
daa
push
xor
inc
fcoml
cwtl
test
dec
sbb
push
dec
mov
fwait
cs
adc
mov
xor
es
and
sub
xor
std
stos
mov
push
dec
mov
and
movsl
addr16
inc
adc
xchg
pop
mov
rcl
stos
or
dec
push
xor
cmpsl
xor
mov
and
aam
scas
test
pop
push
mov
movl
dec
pop
and
addr16
mov
loopne
add
aam
mov
insb
jmp
sub
fimull
ja
mov
aam
pop
leave
xchg
aam
call
xlat
test
push
xchg
and
outsb
xchg
and
rclb
adc
mov
push
mov
out
mov
test
notl
pushf
cmpsl
movsb
mov
int3
cmp
inc
es
add
push
sub
mov
cs
or
push
dec
aad
push
test
lods
and
call
nop
mov
add
xchg
and
xor
gs
xchg
push
jp
in
push
mov
int
lods
outsb
test
mov
pushf
push
test
movsb
movsl
or
lds
mov
pop
pop
xor
inc
or
pop
dec
adc
gs
call
mov
xchg
mov
inc
mov
movsl
or
jo
dec
adc
int3
dec
xor
into
mov
sbb
gs
pushf
shl
mov
gs
fadds
dec
push
mov
pop
mov
mov
adc
fildl
push
mov
adc
jp
dec
adc
test
sbb
cs
xchg
and
push
sub
push
sub
xchg
sub
pop
sbb
test
jmp
or
movsl
or
movsl
or
lcall
mov
test
pop
and
andb
and
inc
or
sbb
movsl
or
xor
call
popf
adc
gs
inc
das
push
movsl
lods
inc
outsb
inc
sub
inc
js
sub
mov
inc
aaa
out
gs
xchg
and
lahf
mov
test
add
push
push
rclb
insb
fldl
adc
sbb
xorb
push
sbb
mov
jae
outsb
dec
sub
mov
sbb
xchg
stos
in
inc
push
sub
movsl
or
inc
call
mov
xor
sub
aad
les
mov
sbb
sub
xchg
and
in
xchg
and
mov
pusha
xor
inc
jo
sbb
js
int
call
push
adcl
sub
mov
ja
ret
mov
mov
push
xor
push
insb
mov
fildl
call
sbb
scas
inc
testl
dec
xchg
dec
sbb
mov
mov
popf
mov
and
cmp
pop
cmp
dec
sub
mov
mov
movswl
cmp
ret
mov
call
pushf
xor
sub
xor
gs
call
popf
xor
cmp
loope
inc
negb
jge
xchg
add
fiaddl
pop
adc
test
in
xchg
fucomi
add
jae
add
or
mov
aaa
or
push
fwait
pop
test
aas
sbb
subl
call
push
sub
pop
sbbl
dec
jae
lahf
sbb
inc
cmpsl
or
xchg
inc
sub
nop
add
pop
test
push
pop
cmp
shlb
test
push
mov
sti
mov
sbb
inc
enter
xchg
sbb
nop
lds
call
push
sbb
push
fwait
jle
lcall
mov
into
push
push
push
sbb
mov
sbb
adc
or
push
mov
push
jp
fistpl
dec
hlt
mov
mov
andl
or
push
cwtl
pusha
cmp
daa
or
jb
add
imul
fistl
lret
push
jno
fildl
mov
jle
jo
nop
sub
sbb
loopne
nop
mov
mov
sahf
adc
xor
enter
nop
add
rorb
push
sbb
cmc
fistpl
sbb
pop
daa
or
jmp
sbb
or
xor
xchg
xchg
fildl
xchg
push
mov
dec
and
push
subl
inc
and
xchg
testl
adc
sbbl
xchg
mov
imul
pop
out
cmp
in
mov
les
sub
and
xchg
push
dec
sbb
enter
lock
and
stos
inc
inc
in
push
xchg
sarb
mov
jb
inc
push
inc
inc
out
xor
daa
mov
push
inc
inc
cmpsb
rclb
pusha
cmp
dec
call
mov
mov
adc
and
sti
adc
test
add
add
push
or
out
and
call
pop
in
outsl
nop
push
and
push
inc
mov
dec
push
add
push
inc
pop
pop
push
and
adc
out
adc
aad
je
adc
jo
enter
mov
mov
stos
sub
and
stos
dec
call
inc
mov
rcrb
out
out
sub
call
mov
aaa
unpcklps
das
stos
out
scas
pusha
shlb
call
lret
xchg
das
jg
and
adc
call
mov
call
lock
call
adc
pop
cmp
fcomp
repnz
outsl
int
inc
call
mov
lret
pop
shll
call
repnz
call
fs
lret
xchg
das
pop
insb
call
je
gs
repz
call
xchg
dec
mov
adc
cmp
jb
pop
sub
mov
nop
sub
adc
pop
pushf
cli
lret
sub
in
fsts
adc
test
lods
int3
out
rcrb
mov
xchg
mov
xchg
mov
jle
jae
lret
loopne
in
call
push
in
inc
aam
xchg
lret
lock
movsl
jb
pop
clc
sbb
adc
sub
add
leave
or
or
leave
gs
loope
xchg
dec
in
adc
rclb
cs
and
and
sub
mov
jle
push
cs
dec
jae
push
push
mov
inc
dec
aaa
dec
in
cmp
xor
jb
pop
mov
sbb
xchg
lret
pop
add
test
movsb
xorb
xor
xchg
je
mov
xor
sahf
inc
call
and
mov
je
data16
js
adc
inc
dec
lcall
movsb
sbb
imul
mov
imul
cmp
in
sbb
inc
test
adcb
dec
cli
dec
lcall
mov
add
ljmp
out
shrb
or
or
les
inc
outsl
add
inc
inc
dec
daa
js
fcmovnbe
jae
mov
cmp
je
je
xor
jae
push
and
mov
pop
inc
movsl
or
test
mov
or
inc
pop
pop
mov
jno
or
inc
popf
push
aaa
pop
mov
and
pop
lea
or
into
jp
inc
inc
shlb
mov
adc
mov
inc
scas
and
insl
mov
cmp
movsb
adc
insl
pop
and
sbb
fsubrs
adc
insl
sbb
or
xlat
cmp
add
popa
adc
insb
sbb
sbb
inc
aam
add
lret
adc
mov
and
stos
mov
adc
jae
sbb
and
jb
xchg
das
inc
push
shrl
or
popa
dec
sub
fsubrp
addb
pop
adc
es
ret
push
mov
mov
sbb
xor
or
mov
add
jo
mov
test
test
shll
xchg
or
rol
inc
scas
roll
adc
pop
rcrl
aam
sub
push
mov
and
outsb
sar
mov
mov
jb
stos
xor
push
pop
push
or
pushf
or
or
adc
rcll
shll
mov
dec
or
pushf
or
adc
or
xchg
shl
es
jmp
pop
push
rcr
call
fs
jmp
jmp
push
and
nop
fs
xchg
xchg
mov
dec
push
cmc
or
xchg
adc
jne
push
inc
xchg
pop
in
ss
or
outsb
in
lods
adc
lret
push
fld1
inc
cmp
and
sbb
rorl
jg
pop
sbb
in
cmpb
xchg
adc
in
pop
scas
mov
jecxz
scas
ljmp
and
xchg
mov
add
adc
rorl
dec
sub
rorb
lods
loopne
and
dec
dec
outsb
fwait
and
push
sub
cld
and
cmp
adc
pop
ljmp
xchg
rorb
dec
movsb
hlt
insl
rorl
add
pushf
adc
dec
dec
lahf
mov
loopne
lods
cmp
cltd
divl
xor
adc
sub
je
dec
dec
adc
sahf
movsb
adc
fisttpll
xor
pushf
movsb
je
adc
dec
jmp
xchg
or
jo
add
repnz
push
sub
mov
inc
daa
adc
and
adc
cwtl
mov
xor
shlb
mov
sub
cmp
in
pop
hlt
or
adc
mulb
shlb
adc
dec
jmp
or
pop
mov
sbb
stos
rorl
adc
and
and
sbb
adc
fistl
call
call
sbb
jmp
adc
sbb
sbb
inc
sbb
sub
or
inc
adc
push
adc
rcrb
sbb
inc
adc
push
sbb
pop
es
xchg
leave
jecxz
sub
lods
daa
clc
dec
inc
je
testb
fs
sub
daa
int
nop
orl
adc
mov
daa
adc
mov
add
test
sub
daa
add
sbb
daa
sub
rcrb
and
inc
pop
dec
mov
pusha
sub
push
pop
test
inc
nop
in
inc
xchg
add
je
cmpsb
insl
pop
pusha
and
dec
adc
subb
lods
loopne
push
cwtl
or
mov
sbb
lcall
nop
andb
mov
xchg
and
dec
repz
sub
inc
cmc
or
imul
out
lcall
mov
mov
inc
lods
and
repnz
fsubrs
pop
add
jnp
dec
push
mov
and
add
lea
test
jecxz
xor
dec
push
sbb
sarb
adc
or
out
push
rolb
xchg
and
shrb
aad
pop
call
add
xchg
jo
sub
nop
cmpsb
sub
cwtl
adc
mov
popa
pop
add
pop
inc
mov
outsb
inc
cmp
orb
pop
gs
bound
idivb
sub
push
pop
imul
jmp
adc
inc
pop
inc
aaa
add
dec
fstl
jbe
mov
jb
nop
pop
add
je
push
imul
aaa
pop
imul
arpl
push
stos
adc
xchg
or
ds
mov
negb
dec
inc
aaa
lds
push
fcomps
subb
push
push
hlt
push
stos
jo
inc
sub
test
lret
xor
ja
stos
dec
inc
and
and
mov
push
sbb
pushf
mov
call
pop
mov
icebp
sbb
fisttpll
inc
adc
or
inc
jp
sub
and
movsb
inc
mov
inc
sbb
mov
jle
xchg
and
loopne
mov
sbb
cwtl
incb
and
adc
fwait
and
sub
adc
andb
lea
movl
dec
xor
outsl
add
xor
mov
adc
xchg
ret
add
dec
jno
and
push
push
pop
pop
scas
push
add
push
rolb
fs
sti
cmp
pop
sahf
cmp
loop
data16
pop
mov
cmpl
dec
jmp
xchg
xor
rclb
adc
and
nop
mov
pop
dec
int3
sti
nop
pop
dec
mov
data16
pop
shll
pop
rorb
addl
push
sti
pop
mov
add
pop
rorl
push
out
push
pop
or
into
and
xchg
mov
inc
adc
mov
fnstcw
mov
push
out
cmp
add
dec
adc
shr
add
cmp
xor
sahf
jg
push
mov
pop
cmp
and
push
rclb
sar
test
movsb
xchg
dec
testl
inc
xchg
mov
dec
xor
fst
cmp
push
xor
mov
mov
pop
and
or
faddl
lods
mov
mov
fs
mov
or
inc
xchg
test
push
test
and
or
and
rcll
xor
rcrl
shll
inc
and
cmp
shll
sahf
psrad
cmp
xor
dec
sbb
and
cmp
cmpl
jmp
hlt
mov
mov
cmp
jg
xor
nop
imul
push
test
sbb
arpl
sub
sub
int
adc
je
push
call
aas
cs
jae
fdivrs
lea
dec
leave
cmp
xchg
xchg
out
loopne
or
mov
and
push
xchg
adc
or
cld
sbb
or
call
shrl
adc
mov
or
ljmp
flds
adcb
jae
imul
addl
jb
test
shrl
sub
movsb
arpl
fwait
repz
push
cmpb
jno
divb
repnz
xlat
fwait
push
jnp
cltd
imul
add
dec
mov
bound
jb
adc
xchg
fwait
mov
enter
adc
jb
inc
dec
jae
insl
adc
add
xor
pop
mov
sbb
pop
cmp
lock
adc
inc
call
sti
mov
in
xchg
adc
adc
popf
pusha
xlat
ret
out
push
sub
icebp
in
jb
xchg
stos
out
out
mov
nop
out
push
dec
xlat
or
sbb
add
mov
lret
inc
mov
jae
add
repz
add
and
push
or
mov
int
mov
mov
dec
mov
cmp
cltd
inc
mov
add
out
add
outsb
nop
add
mov
mov
nop
out
movsl
cs
push
dec
out
push
cmpsl
or
jmp
es
or
or
or
mov
adc
fwait
dec
sub
sbb
and
inc
xor
push
dec
and
sbb
out
sbb
cmp
repz
scas
sahf
mov
cmp
repz
sub
out
lcall
repz
add
int3
cmp
cmp
inc
push
push
sub
out
fcomip
push
nop
movsb
push
push
xchg
jl
out
sahf
fs
inc
cmpb
out
sahf
out
push
iret
sarl
push
repnz
fmulp
mov
test
mov
ret
into
out
out
sbb
incb
add
es
loop
repz
sbb
sbb
lcall
pusha
sbb
sahf
out
mov
int
cld
or
and
iret
repz
pop
data16
nop
sahf
cmp
repz
mov
fsubrp
iret
repz
decb
ss
inc
push
shr
pusha
inc
sbb
jb
jle
sahf
out
int3
mov
daa
rol
loop
clc
out
pusha
idivb
cmp
aaa
je
fs
push
mov
repz
sub
daa
pop
cmp
mov
lahf
jae
jnp
lods
cli
jbe
push
cwtl
cmpsl
insl
mov
iret
mov
test
add
xor
xchg
push
jbe
push
sbb
les
test
pop
js
sub
pop
daa
xor
inc
jo
jne
lret
pop
pop
or
sub
scas
lea
orl
stos
adc
pop
mov
pop
jb
pop
push
cwtl
repnz
mov
fiadds
icebp
push
ja
pop
add
or
loop
pusha
lahf
es
out
lcall
and
xor
jae
outsl
adc
test
ss
mov
cmpsl
add
bound
mov
inc
push
out
xor
jbe
les
mov
push
jl
push
dec
cmp
ud2
outsb
aas
das
fisubrs
rcr
imul
add
les
push
jle
filds
and
lods
stos
dec
testl
pusha
mov
pcmpeqd
and
mov
jecxz
imul
cmpb
jmp
jae
loop
xchg
stos
outsl
and
jnp
ret
pop
data16
add
ja
mov
mov
xchg
push
mov
aas
add
and
ret
je
lcall
push
inc
pop
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
cltd
aaa
mov
and
cmp
pop
inc
push
fisubs
das
fadds
cmp
pop
dec
jg
jmp
inc
jae
pop
dec
imul
pop
jp
pop
test
jb
outsb
mov
fwait
ret
jecxz
inc
js
jg
inc
fwait
add
lret
inc
inc
xor
mov
outsl
push
sub
sub
sub
inc
inc
xor
xor
xor
adc
mov
inc
xor
xor
ss
sub
sub
cmp
xor
clc
inc
inc
xor
mov
xor
push
cltd
pop
add
push
push
add
sets
aad
lret
push
jo
mov
mov
push
lock
fidivrs
cmp
push
xor
mov
inc
inc
push
and
inc
aaa
adc
xor
inc
addl
jl
addb
pop
push
arpl
xor
std
xchg
inc
push
inc
push
dec
and
cmp
ss
pop
or
mov
xor
add
outsl
cmp
dec
add
dec
add
dec
popa
ret
pop
adc
push
pop
inc
mov
pop
fwait
dec
hlt
imul
mov
adc
dec
sub
inc
push
imul
inc
out
adc
push
sub
out
ds
cmp
adc
inc
mov
fs
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
pop
mov
xchg
insb
or
add
jg
call
and
outsl
xor
fiadds
pop
adc
and
lods
insb
loop
mov
push
inc
cmp
add
rorl
sbb
xchg
mov
mov
ljmp
xchg
mov
mov
inc
arpl
insb
les
cmpxchg
and
outsb
ret
or
fmuls
push
adc
sub
inc
and
mov
inc
data16
or
pop
jne
insb
loope
sahf
push
xchg
pop
pop
add
lock
gs
and
pop
cmp
stos
inc
out
daa
sub
fstl
dec
popa
jae
inc
nop
mov
jnp
inc
push
imul
jg
cmpsb
push
imul
imul
mov
jp
scas
je
dec
fs
imul
push
insb
ret
popa
fs
jo
test
pop
ret
addb
push
test
movsb
jmp
inc
dec
jae
outsl
push
pop
arpl
push
cwtl
xlat
aas
inc
cs
push
push
push
add
ja
lcall
outsb
addl
outsl
push
popa
imul
inc
outsb
popa
shlb
push
sbb
fadd
mov
pop
add
adc
dec
aas
dec
rorb
pop
add
orb
push
bnd
add
add
add
lahf
sbb
and
jg
jo
sub
jbe
sbb
ret
push
mov
cmpsl
sub
inc
fwait
out
dec
push
nop
shrl
or
sbb
adc
push
loope
add
orb
lcall
adc
adc
push
adc
lahf
out
scas
xchg
adc
push
sbb
sbb
lcall
call
out
jns
push
das
push
pop
nop
cld
sub
negl
push
and
jae
out
jns
stc
jp
push
cld
fdivs
repz
mov
out
inc
ret
enter
xchg
popf
sbb
mov
ds
xor
aad
scas
pusha
lods
test
xchg
cwtl
xor
xor
xchg
xorb
xor
cmp
add
out
stos
xor
adc
push
cld
or
in
int3
les
movsb
xor
xchg
call
mov
cmp
repz
idivl
push
pop
push
jns
out
push
dec
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
cmp
repz
add
out
sahf
out
or
hlt
call
sahf
aam
mov
nop
jo
lahf
out
push
xor
lock
int3
repz
repz
insb
inc
sub
adc
cld
push
fcomps
les
out
sub
aam
mov
repz
sbb
add
jno
out
call
cwtl
jl
les
adc
inc
push
cltd
les
pop
lahf
bound
js
or
repz
push
in
mov
add
fisubrs
cmp
xor
sub
fidivrs
adc
add
adc
inc
dec
inc
push
mov
xor
mov
sub
sbb
insl
orl
or
popl
adc
push
jecxz
sub
sbb
sub
cmpsb
mov
xor
push
jo
out
dec
and
adc
sbb
xchg
lahf
dec
dec
add
sbb
push
cwtl
xchg
es
ja
aas
push
les
mov
aaa
adc
mov
shrb
jno
add
inc
orl
push
cmpl
sti
sub
sbb
call
js
shrb
mov
pushf
andb
rolb
ret
sbb
loop
jns
inc
mov
inc
andb
add
sar
mov
push
xor
xchg
cld
inc
inc
mov
jnp
out
js
pop
cmpb
cmpl
jne
pop
mov
sbb
mov
lahf
xchg
push
je
imul
sbb
les
ds
imul
pop
mov
pop
push
or
stos
adc
bound
or
push
push
cmpsl
sub
inc
das
pop
leave
jmp
outsl
jl
add
cmpsl
ja
lahf
add
add
jg
das
loopne
xchg
fucom
mov
loopne
popa
fsubs
mov
adc
dec
test
fimull
mov
lds
data16
inc
sub
aas
repnz
es
das
fcoms
mov
and
ss
inc
es
sete
int3
jns
mov
data16
aas
ljmp
js
and
es
dec
xlat
jns
pop
shr
repnz
fisttps
push
test
aas
in
setl
lret
out
test
adc
outsl
or
push
popf
jl
in
sub
xor
push
aas
sbb
daa
call
mov
mov
xor
mov
nop
shlb
aam
aas
jno
loopne
vmptrst
enter
sarl
mov
and
or
iret
fcmovnbe
jae
popf
dec
mov
aas
jbe
mov
dec
arpl
adc
aam
outsb
movsl
xor
adc
fs
loopne
jno
jnp
dec
mov
push
sahf
loopne
daa
in
xor
mov
push
dec
mov
insl
pop
les
inc
insl
imul
lods
cmp
dec
jnp
or
je
dec
imul
or
jle
ltr
insb
ja
or
and
addr16
or
push
dec
dec
add
dec
cld
mov
push
push
add
push
outsl
ja
xor
cli
dec
sub
jno
in
sub
add
mov
daa
movsb
and
sbb
inc
sbb
dec
inc
repnz
popf
imul
repnz
cmc
adcb
or
inc
xor
xchg
rorl
xchg
dec
push
jb
mov
adc
inc
add
insl
jo
loopne
ja
dec
pop
outsb
push
add
pop
adc
add
push
pop
mov
cli
add
jae
and
add
adc
xor
mov
push
push
loope
movsb
mov
add
imulb
mov
out
adc
or
movsl
sub
push
inc
sbb
cmp
jl
cmp
dec
add
es
mov
inc
push
mov
and
das
push
mov
or
cmp
push
jo
jb
jns
sti
xor
gs
movsb
sbb
roll
push
push
lods
cmpsl
xor
push
mov
pop
sbb
imulb
push
fcmovb
pop
xor
inc
popa
sarb
and
inc
xlat
lods
mov
cmp
jns
out
push
inc
rcll
dec
jnp
and
xchg
icebp
mulb
xor
inc
xchg
or
mov
add
fbld
jne
mov
jnp
or
insl
jmp
mov
into
test
aad
addr16
mov
pop
push
scas
mov
and
and
push
fiaddl
ds
fs
and
dec
add
jecxz
xor
test
inc
divl
int3
cs
adc
dec
or
fidivrl
and
push
sbbb
cmpsl
call
fs
inc
lahf
outsb
xor
cmpsl
lea
ret
inc
sub
jne
es
pop
outsl
mov
adc
scas
inc
shlb
add
fiaddl
sub
xor
in
and
mov
aam
xor
xor
dec
dec
pop
addr16
lods
add
jns
rcrl
gs
lds
inc
xchg
shrl
mov
lea
inc
push
outsl
pushf
dec
xchg
mov
roll
push
pop
aaa
or
sbb
cmp
xchg
aaa
inc
push
lock
fyl2x
rcrb
add
mov
or
inc
out
jb
mov
add
add
adc
and
jp
mov
inc
jmp
cs
pop
enter
inc
js
sub
inc
dec
pop
or
aas
xor
imul
or
push
movsb
cmp
lret
sbb
cmp
xor
add
shll
sub
iret
add
jo
add
add
or
inc
pop
xchg
push
loopne
mov
fs
mov
addb
push
adcb
adc
dec
sbbl
enter
cmp
arpl
scas
into
pop
roll
dec
add
cwtl
push
xor
inc
sbb
xor
dec
imul
add
iret
cmp
rcrb
lret
xchg
mov
sbb
out
outsl
inc
cmpsl
cmp
mov
mov
adc
mov
push
push
and
ret
jns
insb
cmc
and
cld
inc
jae
adc
add
je
or
testb
outsl
add
jecxz
xor
and
pushf
and
lds
or
cmp
cmp
into
insb
sbb
gs
push
add
cmpsb
aad
sub
or
xor
sbb
sbb
iret
fbld
lret
fbld
pop
dec
pop
lahf
mov
push
popa
push
sub
inc
std
fwait
xchg
pop
pop
nop
loopne
ja
cwtl
aam
push
imul
push
aam
nop
pop
adc
clc
and
mov
add
mov
pop
push
insb
push
sbbb
or
dec
xchg
push
punpcklbw
out
cs
and
add
xchg
xor
std
sbb
nop
push
jns
sub
add
test
ljmp
bound
pop
add
jbe
add
add
lcall
imul
push
and
insb
dec
dec
stos
insb
jns
fs
push
push
xchg
out
adc
sbb
imul
fwait
and
or
adc
addr16
mov
or
mov
push
and
or
scas
inc
mov
push
adc
iret
repz
or
clc
out
jns
out
lock
jns
out
mov
iret
repz
test
pop
mov
cmp
pause
mov
leave
push
inc
sahf
out
sahf
cmp
and
sbb
xchg
adc
cld
in
lock
out
sub
push
loopne
fcom
enter
jns
mov
jns
out
pusha
push
cmp
sahf
out
sahf
sub
sbb
or
cmp
sarl
hlt
in
in
int
iret
repz
mov
xchg
iret
repz
push
mov
js
push
inc
sub
lahf
out
jle
sbb
loopne
push
adc
xchg
addb
xchg
or
pop
mov
push
push
divl
xchg
mov
negb
mov
pmuludq
mov
dec
pop
shl
scas
adc
push
jo
nop
rcr
sahf
data16
fidivrs
je
and
jp
and
adc
add
sti
insl
and
mov
pop
inc
dec
pop
xor
sbb
pusha
dec
adc
or
mov
inc
jle
and
scas
pushl
sub
sub
jae
adcl
pop
sbb
andb
repnz
xor
dec
push
pop
jo
add
in
cmp
add
mov
mov
les
shll
mov
dec
cmp
insl
xor
xchg
sub
shlb
clc
jbe,pn
and
scas
adc
mov
lahf
xor
xor
ds
je
pop
pusha
dec
dec
mov
pop
ror
xor
jae
sub
arpl
imul
xchg
cmp
dec
inc
loopne
add
insb
and
add
or
adc
jne
js
subb
mov
popa
insb
cmpb
rclb
stc
das
sti
fmuls
jmp
divb
lahf
ds
inc
add
inc
pop
pop
adc
adc
add
inc
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
jmp
jp
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
xor
xchg
shll
inc
ss
ss
es
dec
aaa
dec
ljmp
lea
pushf
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xchg
ret
add
push
lock
idivl
or
ljmp
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
clc
add
or
adc
xor
xor
xor
xor
mov
xor
jg
pushl
xor
xor
xor
out
xor
xor
xor
xor
jg
lock
xor
fidivl
scas
xor
shlb
jecxz
push
es
xor
divl
jno
cltd
ss
fnstenv
loop
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
jg
fdivrl
inc
cmp
loopne
jmp
cmp
lcall
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
jg
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cli
pushf
cmp
adc
das
jo,pt
incl
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
incl
add
movsb
pop
xor
xorb
xor
lcall
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
ret
lcall
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
jg
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
das
mov
xor
xor
push
aaa
push
sub
ss
clc
loop
cmp
out
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cld
cmpsb
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
cld
dec
mov
pusha
pop
push
or
cmp
sar
xchg
pop
xor
push
xor
xor
xor
xor
clc
mov
xor
xor
ret
xor
xor
lcall
xor
xor
xor
xor
xor
test
mov
mov
nop
xor
jmp
call
out
in
xor
scas
clc
xor
cmp
pushl
fbstp
pop
lods
cmp
cmp
cmp
cmp
cmp
jg
aad
fnstcw
fnstsw
loope
in
in
cmp
cmp
std
cmp
clc
inc
jno
cmp
push
lcall
mov
cmp
ds
fidivrl
jmp
jle
outsb
xor
xor
mov
ss
ss
fcomip
call
mov
cmp
iret
cmp
mov
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
cmpsb
sar
jg
outsl
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
sti
inc
xchg
push
movsb
xor
add
jmp
aas
clc
or
mov
scas
xor
xor
xor
loop
xor
ljmp
xor
cmp
xor
mov
xor
xor
scas
std
xor
jmp
decl
ss
ss
add
or
aaa
and
incl
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
dec
aaa
repz
xor
cmp
xchg
outsl
cmp
xor
lods
jecxz
jmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
aas
cld
jg
cmp
popa
cmp
cmpb
cmp
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
push
es
adc
sub
xor
cmp
cmp
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
fcomip
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
loope
inc
cmp
pop
cmp
mov
cltd
cmp
jp
ljmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
int
push
aas
stos
aas
mov
mov
rclb
jmp
insl
stos
lcall
xchg
les
fidivl
in
or
adc
and
jg
sub
cmp
jb
mov
xor
xor
xor
xor
xor
cld
mov
mov
jl
cmpsl
xor
xor
scas
pop
filds
xor
xor
xor
cmpsb
pushl
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
mov
cmp
scas
hlt
or
cmp
fdivrl
aaa
cmp
mov
xchg
cmpsl
loope
data16
dec
ljmp
mov
push
cmp
jg
aas
sbb
xor
or
xor
cmp
lcall
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
aas
cld
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
sarb
ja,pt
lahf
xor
xchg
aas
lock
xchg
cs
mov
insl
xor
mov
push
xor
xor
xor
xor
jl
out
rcrb
fiadds
aaa
ret
aaa
jmp
hlt
filds
sbb
cmp
pop
cmp
jge
mov
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
mov
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
outsl
js
ljmp
xor
call
cmp
dec
ss
outsb
notb
ss
in
and
sbb
xchg
cmp
cmp
mov
jl
andl
lock
test
imul
cmp
test
mov
ret
sar
or
cmp
dec
cmp
cmp
jae
aam
adc
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
das
cli
or
cmp
orb
pop
and
push
aad
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
test
loope
rol
loopne
cmp
xor
aad
out
cmp
or
pushl
xor
xor
xor
xor
xor
mov
xor
push
incl
pop
lcall
dec
aaa
pop
add
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
pop
test
xchg
cmp
cmp
cmp
adc
jbe
cmp
xchg
cmp
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fmull
pop
cld
aas
loop
out
out
pop
rclb
sub
fwait
lock
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
dec
pop
cli
shlb
xor
fdivr
xor
xor
push
scas
adc
xor
jbe
loopne
aas
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
jnp
cld
cmp
cmp
cmp
ljmp
sbb
scas
xor
aaa
dec
and
jg
cmp
inc
xor
xor
lcall
decb
lods
xor
hlt
das
ret
mov
xor
xor
loopne
dec
mov
int3
xor
cmp
sub
sub
xor
mov
outsl
sarb
inc
cmp
cmp
cmp
call
cmp
fidivs
cmp
cmp
mov
lahf
adc
cmp
rcr
loopne
jo
cmp
mov
cmp
cmp
mov
cmp
rcl
aad
inc
lock
dec
cld
push
add
loopne
push
pop
stos
sbb
and
and
sub
sub
clc
add
xor
cmp
inc
cmp
cmp
decl
pop
sahf
cmp
insb
cmp
je
mov
cmp
cmp
lods
or
mov
sub
xor
inc
mov
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
std
je,pt
fdivrs
loopne
clc
jbe
push
or
xor
out
ret
xchg
xor
xor
xor
inc
xor
xor
loope
incl
cwtl
xor
xor
xor
xor
cmpsb
je
jle
cmp
mov
fbstp
add
xor
pusha
xor
mov
and
fimuls
xor
ss
call
les
aam
fdivs
fdivl
loopne
in
call
pushl
hlt
ss
ss
add
add
or
or
adc
adc
aaa
sbb
and
pop
std
aaa
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
ret
pushl
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
fisttps
xchg
aaa
cwtl
into
mov
incl
dec
mov
mov
mov
aaa
enter
shlb
aam
fdivs
fsubrl
adc
out
aaa
hlt
xchg
mov
aaa
hlt
add
or
adc
push
or
cmp
sbb
cmp
ficomps
mov
fdivrl
call
clc
cmp
pop
push
jg
sahf
jl
cwtl
cmp
cmp
sub
cmp
stos
add
cmp
cmp
cmp
push
cmp
pushl
loopne
test
mov
mov
cmp
mov
mov
cmp
loopne
cmpsl
add
adc
adc
add
in
mov
dec
psubq
jge
or
or
mov
cltd
or
std
repz
or
incl
and
imulb
mov
mov
mov
out
out
lods
andb
xor
pushf
xchg
cmpsb
rolb
push
lret
push
je
in
addb
add
pop
lods
fstps
out
test
insb
and
add
jmp
daa
out
inc
or
or
xor
inc
lcall
sbb
imul
sub
sub
outsb
jns
dec
push
and
dec
mov
sub
in
out
imul
cmpsb
rcrl
add
xchg
adc
add
pop
mov
out
and
pop
or
mov
push
dec
not
mov
loope
sub
out
inc
and
mov
inc
and
jle
or
orb
gs
je
sbb
sub
mov
push
and
hlt
and
out
lock
dec
cltd
adc
and
xchg
lea
enter
pop
in
push
out
push
dec
add
pop
sbb
jne
push
mov
jmp
mov
les
cmp
push
addb
movsb
mov
dec
mov
enter
rcr
loopne
adc
inc
mov
cmp
and
je
xor
pushf
sbb
inc
xor
dec
or
cltd
adc
xor
roll
push
xor
sub
and
pop
call
sbb
pop
push
inc
xchg
xor
mov
jne
fimull
push
call
in
imul
adc
xor
inc
mov
cmp
test
sbb
sbb
lcall
mov
cmp
outsb
int3
push
mov
add
cmp
shll
push
pushf
or
xor
test
das
insb
outsb
in
imul
ja
inc
mov
mov
cmp
and
and
popf
pop
rcrl
push
lea
add
jne
jge
cmp
pop
inc
lahf
xchg
fildl
enter
add
cmp
mov
je
addb
outsb
push
push
sbb
mov
fldt
call
lea
push
push
pop
jb
addb
jl
fidivl
cmp
dec
or
or
mov
call
inc
push
push
call
in
dec
out
movsl
xor
lods
bound
add
mov
push
mov
inc
push
mov
mov
mov
lahf
fidivs
fistpl
call
shl
inc
and
cmp
js
xor
and
adc
add
std
cmp
mov
mov
xor
adc
sbb
and
jne
adc
mov
inc
cli
sahf
insl
jmp
push
inc
jmp
roll
push
ja
push
adc
inc
sti
mov
test
mov
mov
call
lock
adc
stos
cs
push
loop
inc
push
orl
clc
add
adc
es
int
or
add
fmuls
fmuls
push
adc
aad
jo
jl
push
ja
add
push
jnp
test
ja
dec
cld
sub
mov
lret
fwait
cmp
and
push
xchg
xor
xchg
mov
push
test
xor
xor
cmp
push
push
aad
lods
sub
or
mov
lea
out
fildl
pop
or
and
clc
xorb
add
fnstenv
inc
hlt
das
add
pop
add
push
addr16
or
or
leave
mov
sbb
mov
add
push
xchg
popf
outsl
popf
jnp
cmpsl
test
xchg
and
fsub
rcrl
loope
movsbl
sarb
out
call
inc
sub
jo
insb
adc
jg
add
jb
dec
push
rorb
push
mov
push
cmpsb
in
mov
sbb
inc
mov
daa
inc
sbb
or
imul
inc
sub
or
loop
aaa
add
xchg
push
jmp
sub
shlb
sbb
hlt
sub
pop
xchg
stos
fs
sbb
adc
ret
call
ret
xor
dec
sbb
cmp
enter
loop
or
jecxz
fmull
mov
cmpsl
or
xor
or
mov
jae
dec
sbb
dec
adc
inc
or
in
cmp
dec
add
dec
out
pusha
add
stc
jbe
and
sub
jl
or
in
cltd
pop
xor
cmp
xor
nop
push
pop
mov
mov
add
mov
jno
cmpsb
out
cmp
xchg
mov
lods
xlat
call
scas
adc
xor
aaa
cmpb
mov
loope
adc
push
ja
not
outsb
mov
sbb
test
mov
adc
or
jmp
negl
dec
jecxz
push
in
not
mov
sub
add
add
mov
inc
int3
push
add
les
add
test
mov
inc
sub
leave
xchg
jo
rol
add
pop
sarb
add
lock
pop
bound
cmp
imul
imul
cmp
imul
adc
jno
pusha
orl
pop
push
mov
jo
add
sbb
push
imul
cmp
in
ja
cmp
or
fildl
into
adc
or
inc
inc
adc
jo
ror
xor
test
enter
nop
adc
pop
mov
dec
pop
push
sub
repnz
inc
movb
add
mov
add
push
mov
push
sub
rorb
mov
push
mov
add
sub
mov
mov
pop
call
pop
dec
push
sub
movsl
mov
mov
pop
or
or
sbb
mov
xchg
jne
imul
or
and
adcl
push
mov
push
xchg
ret
pop
dec
push
inc
pop
outsl
push
push
cmp
and
xchg
outsl
scas
xchg
mov
pusha
addb
add
sub
lret
lea
out
scas
outsb
xor
ret
rorl
sbb
mov
pop
das
adc
adc
adc
sbb
sbb
push
dec
bound
mov
add
adc
xlat
andl
je
dec
and
add
adc
pop
adc
push
push
inc
sbb
testb
call
call
jns
sbb
mov
jmp
add
bound
add
ss
or
push
dec
scas
fcoml
dec
mov
add
mov
and
call
pop
push
ja
mov
and
orb
dec
jo
dec
rorl
call
jne
jno
inc
pop
call
dec
sbb
sahf
add
fst
and
es
inc
xchg
lcall
pusha
lods
lock
call
je
xor
nop
popl
dec
and
pop
mov
inc
inc
push
pop
and
mov
or
inc
leave
adc
xlat
in
sub
inc
inc
shrl
dec
and
outsb
or
stc
inc
sbb
nop
inc
inc
sbb
outsl
sub
popl
js
jg
inc
dec
pop
insb
xor
lods
sbbl
or
mov
inc
lahf
sbb
add
inc
fucomp
xchg
cmpb
xor
adc
xor
and
cld
sub
mov
sbb
mov
sub
or
add
mov
pop
or
push
mov
pop
add
xor
mov
cmp
fwait
adc
adc
mov
cmpsb
add
andb
ds
lret
pop
loopne
movsb
adcl
cmpb
push
mov
leave
inc
ja
adc
or
dec
ss
test
xor
jno
insb
mov
mov
push
fnstcw
mov
mov
xchg
sbb
inc
pop
xchg
pop
mov
and
pop
in
fwait
popf
xchg
and
cmp
nop
nop
push
adc
test
pop
movsb
rolb
hlt
pop
cwtl
cmpsb
add
daa
dec
pop
cmp
fldl
ja
fs
pop
push
ljmp
xor
push
rolb
mov
movsb
mov
pop
sbb
lret
std
add
fsubrp
outsb
sbbb
inc
pop
nop
xor
push
inc
pop
test
push
jl
add
push
jno
jb
pop
sahf
out
fdivl
loopne
lock
jns
add
push
fimuls
loopne
inc
sub
xor
mov
repz
inc
pop
loopne
lea
out
shrb
dec
int3
mov
stc
mov
xor
shlb
sub
and
mov
rclb
mov
je
cmp
lods
and
xchg
nop
mov
lahf
push
mov
pop
adc
inc
in
pop
pusha
cmpsl
or
divl
pusha
hlt
test
test
cwtl
push
test
cmpsl
ret
popa
add
pusha
adc
xchg
add
test
imul
in
movsb
sub
xor
andl
dec
shrl
sub
sub
cmpsb
xor
sub
sub
and
sub
sub
pop
mov
pop
and
repz
sub
or
or
sub
imul
inc
lcall
xor
sub
sub
sub
adc
ljmp
scas
push
xchg
js
sbb
adc
mov
add
jp
mov
ljmp
call
mov
add
je
push
mov
int
sub
inc
inc
fistl
stc
aam
cli
pushf
push
scas
or
push
lret
mov
insb
push
sahf
sbb
mov
jle
adc
bound
nop
or
call
aaa
sbb
rolb
pop
shrb
sub
or
scas
pop
filds
inc
repz
mov
adc
inc
adc
out
pop
rcrb
inc
sub
stos
inc
sub
orl
mov
es
mov
xchg
in
nop
inc
ja
call
cvtps2pi
pop
mov
inc
roll
fldl
sub
and
out
mov
sbb
xor
sub
mov
out
inc
inc
cmp
cmp
inc
add
jmp
in
pop
inc
out
shll
ret
call
mov
add
and
mov
cltd
mov
add
mov
sbb
repnz
je
fbld
and
xor
mov
sub
jns
mov
inc
and
pop
inc
ret
push
sti
jns
mov
sbb
jns,pn
pop
dec
and
popa
add
js
and
inc
lret
rorb
stos
roll
mov
adc
andb
and
mov
sbb
adc
sbb
and
mov
inc
loop
and
orb
in
jns
sbb
lret
fwait
jns
sbb
daa
insb
aaa
dec
and
or
dec
sbb
nop
pushf
dec
js
bound
adc
inc
loop
jns
xchg
lret
xchg
jns
ljmp
icebp
sbb
inc
adc
scas
mov
push
cmc
xchg
pop
dec
aam
ljmp
aam
test
fbstp
sub
xor
mov
mov
daa
fisubrl
xchg
jmp
outsb
cmpsl
mov
push
fs
scas
lret
inc
mov
test
call
les
and
sbb
cs
dec
gs
adc
bound
gs
stos
sub
dec
xchg
daa
lret
daa
rol
mov
add
sbb
pop
mov
xor
push
push
mov
pop
lcall
push
pop
aam
push
daa
sbb
daa
les
fbld
mov
and
test
ljmp
mov
push
in
pop
push
push
fisubs
cwtl
mov
mov
jl
loope
and
add
push
lea
or
inc
adc
call
push
in
mov
testl
xor
and
aad
mov
lea
push
xchg
inc
daa
adcb
xor
mov
or
and
mov
mov
ljmp
popf
mov
inc
into
or
or
sub
jnp
ret
jnp
movsb
rorl
mov
mov
mull
dec
cmpsl
mov
dec
popf
arpl
inc
movsb
fwait
and
sbbl
mov
nop
test
push
out
es
scas
mov
xor
iret
cs
nop
xchg
imul
nop
pop
clc
add
enter
pop
dec
mov
mov
dec
ja
ss
or
mov
inc
cltd
and
les
add
test
adc
and
or
and
push
lahf
mov
xor
adc
shl
push
ds
dec
ja
mov
sub
mov
shlb
mov
js
adc
hlt
mov
dec
jae
jno
sbb
enter
xor
cmp
enter
inc
cmp
loop
enter
cmp
and
daa
dec
inc
xchg
mov
dec
push
arpl
pop
lock
bound
je
mov
movsb
mov
jg
cmp
enter
jno
mov
jno
mov
scas
call
out
mov
or
call
add
sbb
jmp
add
bound
aam
bt
jo
mov
pop
rolb
aam
scas
aaa
and
sub
nop
pushf
adc
inc
aad
test
inc
dec
jno
cmp
mov
fidivl
and
aad
aad
aad
xlat
test
dec
jl
xor
in
nop
inc
pop
fistpl
mov
call
popf
adc
pop
push
xchg
or
aad
inc
test
mov
dec
adc
cmp
adc
xlat
xor
xor
push
or
add
sub
add
push
mov
add
push
push
mov
leave
add
add
inc
sub
xor
add
imul
push
add
das
mov
popa
push
sub
add
frstor
in
fisttpll
xchg
or
lods
lret
call
add
inc
xor
dec
inc
or
dec
pop
out
and
sbb
lcall
and
push
mov
dec
jo
cmp
mov
add
push
and
in
push
shr
mov
fmull
rclb
or
mov
or
inc
jnp
jecxz
sbb
mov
movb
jnp
enter
jp
pop
hlt
push
dec
loope
add
dec
cmp
lahf
call
enter
shl
data16
nop
jnp
rcll
out
pop
movsb
and
xchg
cmp
pop
jbe
fcoml
and
dec
xchg
push
jne
jb
xchg
xchg
dec
cs
adc
xor
adc
xchg
enter
roll
pop
dec
jge
rcrl
stc
loopne
mov
adc
xor
pop
or
pop
arpl
ret
pop
or
stc
or
push
mov
pop
stc
push
fdivs
mov
mov
push
stc
pop
pop
xor
aas
stc
pop
sub
xchg
mov
inc
jmp
icebp
push
stc
stc
xchg
lods
xor
call
inc
ret
or
xchg
call
mov
adc
and
jns
fisttpll
push
repnz
inc
clc
adc
frstor
sbbl
stc
sub
xor
and
fnstsw
dec
pop
xchg
inc
icebp
fcoml
or
push
xor
repnz
jmp
jmp
pop
int
aaa
jno
lcall
xchg
je
add
fildl
stc
mov
add
fcmovnb
add
inc
aas
mov
inc
enter
icebp
xchg
inc
inc
aas
adc
adcb
push
test
aas
iret
aam
mov
push
inc
adc
call
or
ds
dec
add
test
sbb
sti
mov
xchg
aad
sub
jmp
lods
negl
sbb
ret
call
outsb
and
mov
xchg
and
xchg
cmpsb
push
iret
fdiv
je
pusha
mov
jge
je
mov
push
ret
push
mov
mov
inc
push
sub
sbbb
roll
xor
and
repnz
shrl
inc
mov
push
rol
aad
push
sub
or
jl
gs
dec
jl
mov
add
shll
sbb
add
in
cli
pop
lret
cmp
pushf
rcrl
sti
adc
or
adc
imul
stc
adc
mov
mov
jo
fsts
jne
xchg
mov
lea
xchg
adc
mov
in
mov
mov
xor
inc
inc
inc
pop
cmp
adc
arpl
dec
in
xchg
pop
sarb
into
adc
push
fmuls
xor
xor
pop
adc
repz
adcl
hlt
xchg
pushf
mov
movsb
adc
fdivl
daa
into
imul
adc
mov
sbb
or
adc
sbb
add
adc
sbb
add
adc
adc
jp
add
xchg
aam
fldcw
aam
sahf
sbb
in
roll
ftst
inc
leave
test
sub
repnz
fst
sbb
xchg
lods
adc
xchg
sbb
movsl
shrb
pop
pop
adc
sub
pop
xor
pop
dec
adc
sbb
adc
sub
and
lock
movsl
adc
and
popl
dec
movlps
mov
cmpsb
das
mov
push
adc
sti
xchg
sub
adc
adc
cmp
inc
adc
adc
mov
adc
sub
lea
dec
pusha
inc
movsl
movsl
adc
dec
dec
and
adc
int3
mov
rclb
inc
cli
inc
imul
adc
jmp
mov
bound
in
or
add
adc
icebp
jnp
in
pop
nop
dec
cmpsb
sbb
push
push
daa
jb
fmull
test
popf
xchg
dec
enter
push
lret
pop
adc
mov
dec
aam
dec
inc
in
ds
sbb
adc
call
dec
in
mov
cmp
sub
dec
xlat
dec
fisubs
sarb
aad
mov
push
in
dec
das
lcall
mov
push
add
dec
dec
out
mov
lds
mov
pop
pop
outsl
les
outsb
cmp
vpsubusb
jb
lds
inc
fdivl
or
fsubl
test
pop
cmp
sahf
in
insl
jne
pop
inc
loopne
adc
test
cmp
mov
push
pop
and
ljmp
sbb
pop
or
pop
dec
frstor
pop
enter
call
outsb
pop
aam
mov
loop
ljmp
push
repnz
cli
inc
aaa
sub
aam
xchg
ret
pop
xchg
in
aam
cwtl
pop
mov
test
inc
rcrb
xchg
sub
push
aaa
pop
pop
dec
mov
cmp
lods
mov
inc
jb
fsubl
jno
pop
jp
outsb
and
pop
mov
mov
or
rcrb
push
aaa
lods
sub
daa
mov
xor
mov
aaa
out
jns
adc
pop
mov
test
movsl
aad
pop
hlt
aam
jmpw
imul
mov
and
pop
aam
test
dec
jecxz
loopne
lret
pop
and
bound
sub
cmp
test
jle
pop
inc
cs
dec
or
iret
shlb
adcb
xchg
push
stos
sub
and
pop
mov
mov
jmp
adc
jo
js
in
dec
leave
in
sbb
push
xchg
leave
add
int3
stc
sbb
in
xchg
mov
adc
dec
pop
or
mov
mov
push
mov
dec
mov
xor
sub
adc
or
lock
xchg
xchg
xchg
mov
fdivrs
xchg
mov
mov
xchg
xchg
mov
cwtl
mov
xchg
mov
js
enter
push
pop
mov
pop
cmp
ds
sbbl
sbb
enter
mov
sbb
and
out
fstpt
xchg
add
mov
lods
mov
mov
mov
cmpb
jb
mov
and
cmp
dec
mov
xchg
sbbl
mov
enter
add
stc
mov
pop
cmp
mov
jb
sbbl
mov
lods
mov
mov
mov
cmpb
xchg
sbbl
mov
enter
xor
and
mov
inc
or
mov
data16
or
rcll
and
or
out
in
mov
mov
scas
nop
mov
xchg
data16
add
adc
inc
dec
lcall
movsb
sbb
imul
data16
and
sbb
cmp
or
in
mov
xor
adcb
dec
cli
dec
lcall
cmp
mov
adcl
lock
add
or
into
aad
push
dec
dec
rol
in
add
push
and
add
sbb
or
mov
mov
stc
dec
dec
leave
and
or
push
sub
jns
or
data16
add
sub
push
mov
hlt
imul
dec
push
leave
sti
testl
arpl
pop
scas
aas
inc
and
sub
lcall
push
addr16
inc
int3
cmpb
sub
pop
or
aam
and
and
imul
mulb
sbb
data16
ss
and
addb
into
outsl
nop
and
xchg
dec
mov
addr16
jo
shll
outsl
in
orb
subl
bound
fs
lea
xor
sbb
mov
inc
dec
aam
outsl
sbb
test
nop
movsl
add
push
mov
push
outsl
and
jb
dec
aam
outsl
fbld
outsl
leave
shlb
or
je
outsl
mov
dec
outsl
cmpsb
sub
push
subl
dec
leave
pop
subl
pop
xchg
out
sbb
and
loopne
inc
outsl
xor
enter
scas
sbb
inc
ret
sub
out
inc
xchg
aam
outsl
xor
jmp
lods
mov
and
and
dec
imul
and
iret
scas
sbb
push
pop
outsl
mov
mov
add
roll
lcall
sub
dec
or
lret
fisubl
dec
ja
outsl
mov
shrl
mov
and
mov
xchg
adc
fs
push
js
sub
pop
outsl
xor
inc
xchg
outsb
and
sbb
jbe
ljmp
and
add
outsl
pop
mov
inc
loopne
jae
push
inc
sbb
outsl
sub
mov
cmp
ljmp
dec
scas
and
les
outsl
and
xchg
adc
fcoms
ror
pop
fdivl
idivl
sarb
jbe
dec
cld
sbb
call
xor
outsl
xchg
or
jge
and
xor
rclb
les
pop
ret
subl
sbb
push
sbb
push
pop
mov
adc
test
xchg
outsl
fisubrs
out
dec
inc
inc
pop
adc
add
and
addl
dec
mov
xchg
inc
add
and
ss
shl
call
subl
dec
aaa
pop
lods
outsl
sub
inc
xchg
push
add
or
xor
aaa
ret
jmp
imul
and
mov
push
pop
mov
lret
xor
mov
or
push
subl
dec
xor
xchg
outsl
stos
and
mov
sahf
sbb
rcl
sbb
in
ret
ds
jae
sub
pop
lcall
fcompl
outsl
subl
xchg
cmp
lea
push
xor
push
jbe
je
jp
push
fstl
outsl
inc
test
dec
push
subl
inc
adc
and
xchg
add
sbb
sbb
xchg
jge
jae
or
xor
or
xchg
sbb
and
push
movsl
outsl
cmp
outsl
push
outsl
push
pop
mov
and
loop
movsb
and
pusha
int3
mov
arpl
and
inc
dec
inc
pop
sbb
push
inc
sub
add
outsl
clc
aad
push
dec
inc
subl
cwtl
or
pop
outsl
stos
adc
outsl
sbb
xor
outsl
and
test
ffree
outsl
in
outsl
sbb
xlat
sbb
js
hlt
addr16
xor
xchg
push
outsl
xchg
fs
aad
sub
ja
jp
and
pop
jp
subl
cltd
dec
cmpsl
push
outsl
nop
mov
add
rolb
loop
pop
subl
mov
sbb
test
push
test
divl
outsl
pop
push
or
xor
outsl
sbb
movsb
mov
mov
sub
outsl
xor
shll
dec
mov
and
xchg
bnd
or
xor
jo
mov
subb
push
mov
jmp
add
pop
outsl
lahf
pop
and
loopne
dec
adc
and
push
sarl
out
mov
outsl
fsubr
jecxz
sbb
add
outsl
sbb
xchg
and
dec
addr16
nop
and
nop
movsl
cmp
addr16
xchg
or
mov
nop
int
into
mov
nop
sbb
int
push
test
rolb
sbb
lods
nop
xchg
scas
add
push
mov
jmp
push
scas
push
mov
pop
scas
movsb
add
cmp
cmp
sti
add
mov
fwait
enter
add
mov
rorl
ss
jbe
mov
inc
daa
lcall
int
fucomp
dec
or
adc
pop
test
in
xor
mov
xchg
inc
add
aaa
stos
lea
cmpsl
rcll
mov
add
movl
sbb
movb
cmp
sub
xchg
cmpsb
inc
lahf
bound
mov
in
js
mov
cmp
lcall
cmpsl
push
iret
repz
cs
pusha
jo
sahf
out
cmp
in
add
adc
jns
out
push
bound
mov
jns
out
cmpsb
mov
xor
out
add
cmp
repz
test
iret
repz
or
push
out
sahf
out
ds
pop
data16
out
sahf
jo
cwtl
scas
loopne
dec
repz
push
stos
and
repz
repz
pusha
insb
jbe
sub
iret
xchg
movsb
mov
mov
adc
jge
or
adc
push
int
xor
and
ljmpw
sbb
jns
repz
fcoms
sbb
aad
outsb
repz
repz
jl
push
clc
mov
insl
sbb
mov
push
insl
inc
mov
aaa
pop
add
inc
es
mov
adc
clc
push
mov
sahf
testl
mov
sarl
das
push
adc
xchg
sbb
imul
xchg
js
out
sahf
sbb
sbb
mov
int
push
pop
sahf
mov
and
and
repz
pop
cmpb
sbb
out
ds
cmp
loop
jno
push
push
cwtl
rclb
or
imull
adcb
adc
test
roll
and
xchg
or
out
push
xor
sbb
add
cmp
repz
xchg
hlt
call
cmp
aam
enter
cmp
repz
mov
movsb
mov
pushf
cwtl
xchg
nop
mov
repz
mov
iret
repz
insb
push
iret
repz
pop
push
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
sbb
jns
out
or
nop
in
out
sahf
out
test
cmp
sarl
shlb
repz
dec
inc
xor
jns
iret
add
mov
int3
lods
int
jns
test
in
enter
cmp
js
xor
outsl
sbb
add
in
mov
mov
push
add
inc
sub
mov
sub
push
inc
adc
sub
std
pop
push
notl
xor
push
push
push
popf
popa
add
xor
push
cmpsl
or
sub
mov
out
mov
ja
ffreep
fs
ss
js
dec
inc
or
inc
mov
in
cmp
jnp
or
sbb
daa
xchg
sahf
xor
push
and
aas
pop
pop
mov
xchg
or
les
push
daa
insl
out
jge
fs
jo
mov
inc
add
outsl
mov
iret
test
jge
imul
lahf
add
mov
iret
mov
xor
addr16
pop
push
adc
enter
inc
fildl
and
test
mov
push
jl
enter
push
ja
inc
dec
mov
aas
jb
rclb
and
mov
fsubrs
out
cmp
jge
xor
cmp
cmp
pop
pop
inc
fbstp
inc
out
aas
dec
adc
dec
sbb
dec
lahf
add
mov
lds
dec
mov
inc
cmp
cmp
fdivs
repnz
xchg
pop
jo
sbb
add
push
fsubl
dec
clc
push
dec
sar
jne
sbb
adc
mov
cli
ud0
xor
lods
lret
xchg
cmp
jl
pop
int3
das
les
xchg
nop
imul
dec
push
fildll
push
mov
dec
insl
sbb
lock
aaa
add
aam
mov
adc
in
outsb
jbe
pop
xchg
neg
insl
iret
push
sbb
or
jno,pn
clts
xor
inc
mov
or
push
xchg
movsl
add
cltd
loop
mov
loop
data16
or
jne
mov
mov
adc
cltd
jbe
xchg
jne
xchg
cmpsl
daa
scas
xchg
add
icebp
cld
andb
xchg
mov
pop
or
sarb
inc
aas
cmp
jne
push
push
aas
gs
in
imul
or
imul
push
xor
inc
sub
mov
xor
cmp
gs
adc
inc
mov
sub
filds
movsb
adc
or
mov
push
sbbl
aaa
outsl
add
push
or
mov
sub
xchg
inc
bound
push
pop
sub
sbb
andl
mov
mov
pusha
mov
or
push
sub
sbb
mov
movb
mov
mov
sbb
mov
sub
jae
rol
xchg
inc
and
or
shl
add
or
mov
mov
mov
push
sbb
or
adc
and
addb
std
mov
aaa
pop
mov
add
nop
add
pop
or
dec
inc
mov
sbb
roll
inc
jns
loopne
xchg
movsb
xchg
testb
out
sahf
out
xchg
nop
mov
je
pop
push
pop
dec
repz
repz
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
xchg
hlt
xchg
cmp
jnp
in
push
in
enter
repz
adc
jl
cmp
push
insb
push
fs
push
dec
fcomip
cmp
mov
push
and
add
in
xchg
repz
cmp
enter
iret
repz
test
cwtl
nop
mov
js
jo
pop
inc
repz
and
adc
out
sahf
out
xchg
loopne
mov
sahf
test
insb
pop
adcb
inc
dec
test
mov
dec
pop
fisubrl
mov
jo
cwtl
into
xor
and
jno
jne
pop
das
rorb
fs
ja
cmp
inc
add
and
xchg
cs
call
leave
pop
jg
in
push
adc
pop
enter
aad
pop
pop
xchg
outsb
stos
lcall
cs
cmpsl
insl
push
ret
ret
push
mov
or
dec
push
or
add
add
leave
rolb
mov
pop
xor
xor
jecxz
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
aaa
sar
rclb
xchg
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
call
push
cmp
andb
fs
cmp
mov
cmp
pop
enter
mov
cmp
dec
cmp
xchg
cmp
mov
jg
ficoml
and
pop
ds
ds
xor
mov
aas
imul
aas
jecxz
call
aas
clc
mov
and
sub
xor
cmp
or
push
sarl
fs
out
push
out
xor
jg
mov
repnz
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
jmp
xor
adc
sbb
sbb
mov
and
sub
sub
xor
in
incl
xorb
xor
xor
ss
xor
xor
xor
xor
fbld
jecxz
xor
push
mov
mov
mov
xor
xor
sbb
pushl
xor
xor
and
sub
insb
ss
xorl
aaa
enter
aad
push
jp
aaa
cmp
sbb
cmp
cmp
popa
cld
pop
or
cmp
cmp
and
and
jmp
stos
xchg
xor
jp
test
mov
mov
repnz
cmp
aas
and
cmp
stos
push
arpl
fistpll
cmp
cmp
dec
cmp
cmp
cmp
orl
sbb
scas
xchg
insl
xor
cmp
mov
mov
cmp
scas
test
ds
ds
ds
cmp
dec
xchg
jno
mov
mov
aas
repnz
push
sbb
movsl
and
inc
xor
xchg
lock
xor
xor
jle
xor
repnz
xor
aam
fisubl
aaa
lret
xor
xor
cmpsl
pop
or
cmp
repz
outsl
test
lret
clc
sub
movhps
mov
mov
sbb
push
lret
outsb
clc
xchg
popl
xchg
sub
cmp
inc
js
jle
xchg
push
xor
mov
cmp
cmp
js
test
into
in
adc
aas
adc
inc
dec
ss
cmp
insb
push
cmp
jb
cmp
cmp
dec
push
or
outsl
test
insl
cmp
jnp
subb
cmp
cmp
adc
cmp
and
es
in
sbb
clc
jmp
lock
ljmp
sub
outsl
or
jp
insb
cmp
cmp
cmp
cmp
cmp
sbb
mov
and
cmp
push
ds
ds
clc
xchg
ljmp
or
adc
and
dec
aas
push
aas
or
mov
xor
aaa
mov
fidivl
test
clc
xor
mov
daa
loop
jg
mov
test
es
cmc
xor
xor
sar
cmpsb
pop
popa
data16
xor
mov
test
inc
mov
cli
xor
adc
ja
loope
xor
aaa
jnp
test
or
add
or
cmp
mov
sbb
inc
sbbb
cld
jo
cmp
xchg
cmp
xor
sub
dec
sahf
inc
cmp
mov
mov
pop
shll
nop
icebp
cmp
outsl
ss
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
jl
push
ret
scas
push
addr16
cmpb
clc
cmp
cmp
cmp
cmp
call
sbb
aas
sub
pushf
cmp
jecxz
ret
shrl
xor
lock
xor
mov
loop
pop
push
cmpsb
xor
pop
and
mov
icebp
add
xor
xor
jno
jns
mov
out
push
adc
sbb
das
ss
mov
mov
pop
or
inc
aaa
pop
dec
pop
cmp
jg
mov
fdivp
cmp
cmp
cmp
and
jg
cmp
jo
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
ljmp
aas
loope
pusha
add
fistps
xor
xor
test
xchg
xchg
mov
int
fbstp
icebp
push
push
mov
inc
push
push
mov
jecxz
jge
hlt
xor
ss
aaa
gs
lcall
sarl
icebp
cmp
cmp
cmp
cmp
jo
pop
sbbb
test
fsubp
xor
xor
xor
ss
loopne
out
test
cmp
fiaddl
shl
pop
inc
cmp
push
inc
dec
dec
js
das
ljmp
mov
cmp
aaa
or
or
adc
and
sub
jo
je
jl
add
add
mov
nop
sbb
mov
cmpsl
test
pop
mov
sbb
push
loopne
mov
movsb
ret
mov
lret
aam
mov
pop
hlt
jno
xchg
push
add
stc
int3
out
enter
pusha
scas
push
xchg
jo
js
jl
arpl
xchg
mov
push
into
test
mov
or
mov
bound
xor
out
gs
sub
loopne
call
pop
sub
or
adc
xor
cmp
add
dec
cmp
push
xor
pop
lret
clc
push
xor
insb
add
gs
je
jl
enter
nop
xor
movsb
xor
jecxz
aas
scas
mov
mov
and
shlb
mov
clc
lods
divb
xchg
mov
inc
shl
pop
sahf
add
jle
jp
jno
and
cmp
xor
loope
test
push
inc
xchg
xchg
int3
xor
cmp
dec
add
lret
fmull
pop
pop
pop
daa
cwtl
out
fsubrs
or
inc
xor
xor
sbb
xor
xor
xor
jnp
mov
add
sub
outsl
cs
pop
xor
xor
out
xchg
sar
movsb
inc
shlb
add
sbb
test
xor
daa
pop
xchg
aas
mov
call
dec
out
fsubl
andb
add
sbb
push
fstps
sbb
xor
cld
cmp
sbb
sbb
inc
xchg
dec
xchg
push
lcall
pop
mov
jo
js
jl
xorb
mov
xor
ret
pop
xchg
rcrb
loopne
sub
xor
test
loopne
xchg
xlat
mov
arpl
pop
and
pop
jle
pop
jo
nop
ljmp
and
adc
push
dec
inc
dec
inc
cmp
jo
cmp
add
or
pop
pop
push
or
fcomi
decl
or
or
or
or
adc
adc
push
adc
mov
adc
add
or
pop
sbb
adc
adc
adc
fnsave
jbe
or
pop
cld
push
inc
add
or
xchg
xchg
fildl
add
les
mov
add
inc
mov
mov
add
jge
add
incl
push
adc
pop
and
xor
inc
mov
adc
xor
adcb
sbb
sbbl
les
movl
icebp
jecxz
ret
aad
and
inc
inc
or
lahf
add
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
mov
inc
repz
adc
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
adc
adc
mov
pushl
cld
pop
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
outsl
inc
push
push
stc
or
xchg
jg
or
insb
sub
addr16
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
sbb
cmp
fisubrl
in
mov
orb
int3
lcall
fisttps
jle
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
cmpsb
lcall
leave
mov
jp
push
out
or
mov
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
push
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
incl
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
mov
std
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubrl
add
fisubl
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cmp
jp
adc
push
or
jle
or
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
lock
repz
sbb
lock
in
jmp
out
jmp
mov
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
les
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
shrl
popf
dec
or
add
fs
inc
add
loop
out
mov
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
insl
push
xor
sbb
and
insl
lock
adc
jne
push
cmp
repz
pop
and
sub
jo
sarl
pop
out
jg
jno
ret
movsb
and
loope
cmpsb
inc
arpl
out
inc
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
int3
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
mov
push
inc
dec
or
add
push
sti
pop
inc
add
or
nop
mov
test
incl
add
dec
ds
outsb
push
sub
mov
call
xor
push
inc
sbb
jmp
xor
push
nop
shlb
inc
ret
and
sbb
dec
out
je
adc
adc
adc
inc
xor
in
lcall
xlat
subps
inc
js
inc
andb
dec
and
into
jae
mov
sub
outsl
mov
pop
cmp
adc
enter
test
jmp
mov
aas
jle
imul
push
jno
or
jnp
mov
jmp
dec
jl
jmp
addr16
push
mov
fs
jbe
push
dec
test
stc
cmc
pushf
daa
jbe
ljmp
lcall
add
jl
mov
dec
xchg
test
sti
sub
call
rcrl
pop
mov
divb
push
adc
call
lret
imul
mov
xchg
popa
cmpsl
sbb
rcl
cmp
adc
jg
pushl
mov
in
sub
dec
int3
xor
or
mov
jmp
cmpsl
psubsb
movsl
sub
sub
out
mov
in
js
test
divb
decl
ja
mov
shll
xchg
or
sbb
pop
or
repnz
pop
push
out
cmp
js
jmp
rolb
mov
stos
pop
out
out
hlt
nop
dec
out
data16
ljmp
mov
or
or
imul
inc
enter
pop
mov
adcl
and
incl
push
jnp
mov
push
sub
lret
mov
dec
mov
sahf
push
mov
insb
push
scas
rcll
and
shll
in
xlat
push
pushf
push
xchg
int3
loope
push
cmp
cmp
idivb
adc
jo
stc
or
or
mov
negl
mov
mov
push
mov
jl
mov
dec
mov
mov
pushl
mov
fmull
dec
scas
xchg
movsl
cmpsl
adc
lods
ss
jl
adc
mul
and
faddl
sub
push
inc
jb,pt
outsl
mov
sub
xchg
scas
dec
xor
mov
stos
sub
outsl
push
test
xchg
call
push
js
or
lret
shll
push
leave
call
push
pop
xor
push
mov
ret
adc
xor
lcall
clc
fld
shlb
js
cltd
xchg
outsl
fst
andl
cmp
ljmp
mov
std
mov
inc
sbb
cmpsl
call
sub
sub
adc
cmc
mov
pushl
dec
das
jle
mov
shrb
inc
lods
cltd
ljmp
or
fucom
call
and
push
fmul
ja
faddl
daa
addl
pusha
cltd
loop
xor
mov
xor
pop
push
icebp
decl
dec
sub
imulb
and
inc
subb
fcom
arpl
jg
lcall
sbb
bound
and
push
lock
sbb
xor
std
xchg
test
mov
popa
mov
fdivr
jmp
sahf
dec
and
mov
push
pushf
sahf
cmp
loopne
jo
sub
push
aad
inc
jmp
cltd
andl
pop
dec
and
out
mov
xchg
jnp
push
into
js
mov
pop
das
lods
ja
int
decl
fsubrs
jl
movsl
mov
rol
push
in
mov
mov
outsl
jns
xchg
pop
push
sar
outsl
cli
push
mov
mov
movsb
cmp
imul
incl
aam
adc
pop
cmpsb
nop
jmp
fcmovnu
cmp
jg
sub
pop
dec
data16
pushl
xor
mov
lods
sti
rorl
pop
push
ficoml
test
cltd
pop
nop
clc
fwait
out
fisttpll
sbb
inc
sar
adc
bndldx
cmp
ljmp
pop
es
lahf
lock
je
testl
xor
xlat
push
push
outsb
push
xchg
fldt
cli
pushl
xchg
mov
xor
out
push
cs
jnp
inc
test
aam
dec
in
and
push
imul
scas
or
imul
push
pushf
sub
add
and
nop
aam
call
mov
movsl
stos
or
and
adc
lods
mov
mov
xchg
aaa
les
jl
outsb
xchg
inc
push
fnsave
and
fwait
testl
pop
cmp
inc
push
jle
cli
lea
scas
xor
stos
test
incl
cmpsb
push
lahf
lds
sbb
jl
les
push
test
loop
std
movsl
inc
sti
stos
push
adc
cmp
xor
pushf
inc
fninit
idiv
mov
scas
fldl
push
outsl
inc
daa
mov
fs
decl
adc
xor
mov
fldcw
dec
cmp
mov
pop
mov
cli
inc
imull
sub
jp
insb
in
or
scas
call
jl
subb
incb
xchg
mov
ret
mov
stos
bound
cld
jl
dec
cmp
loopne
push
mov
cmp
ret
out
jg
incl
call
ds
adc
popf
jb
ret
pop
and
mov
stos
push
movsl
xchg
pop
scas
pop
in
mov
popf
mov
out
clc
dec
inc
sbb
xchg
inc
jno
xor
mov
xor
jg
fistpll
jne
mov
lahf
pop
aaa
mov
pop
mov
out
out
inc
mov
push
pushl
leave
stc
dec
repnz
andl
push
add
sbb
ljmp
ret
mov
adc
push
inc
and
outsl
dec
push
jmp
aas
sub
add
ljmp
lret
mov
cmp
jp
out
add
xchg
scas
out
popa
inc
test
mov
outsl
xor
xlat
jl
shll
stos
repz
mov
mov
aad
addr16
cmp
in
outsl
pushl
pop
cmp
daa
dec
in
or
ljmp
sub
adc
add
insl
sbbb
jmp
and
mov
popf
lahf
notb
mov
sbb
mov
loopne
js
nop
xchg
sbb
lcall
test
in
mov
fdivl
insb
xchg
aad
adc
nop
xor
sahf
jae
sbb
add
cltd
incl
dec
loop
jno
mov
and
cwtl
insb
push
sub
sub
xor
lcall
icebp
inc
data16
mov
dec
jns
sbb
data16
les
aam
gs
adc
jns
dec
popf
sti
xchg
sbb
call
pop
outsb
lret
scas
aam
ror
sub
xchg
cwtl
loop
or
xlat
pop
hlt
mov
ja
in
rep
sbb
mov
dec
es
mov
xchg
std
pushf
out
int
loope
jmp
fadds
add
push
mov
lods
xchg
xchg
ret
push
jmp
push
push
mov
test
cmc
insb
iret
test
push
fwait
xlat
mov
or
jg
inc
jg
push
aas
sbb
dec
cmpsb
inc
scas
movsb
sbb
pushl
mov
or
out
je
push
inc
pushw
pushf
xchg
arpl
pop
std
mov
lcall
add
addr16
inc
push
movsb
pop
jle
push
cltd
subl
dec
pop
mov
adc
jg
mov
xor
mov
fs
int3
sahf
jle
test
aaa
fldenv
jnp
mov
mov
mov
pop
push
dec
movsb
add
mov
xlat
ja
pop
pop
addr16
mov
sarl
sbbl
jae
call
inc
in
scas
pop
cmp
cmpsb
sbb
push
into
inc
mov
xchg
dec
fs
add
mov
jg
ljmp
pop
enter
imul
imul
arpl
xchg
cmpsb
movsl
lahf
pop
push
dec
adcl
cwtl
je
mov
mov
and
daa
out
pop
into
lods
mov
adcb
clc
into
mov
out
sbb
fdivr
jmp
or
mov
lret
inc
int
loop
sbb
lea
sub
fcomps
aaa
mov
jecxz
fs
jne
pop
mov
inc
repnz
jl
loop
xchg
popa
push
cld
mov
daa
lcall
sub
xchg
sub
adc
decl
andl
jle
inc
xchg
out
loope
gs
push
rol
dec
dec
sahf
jbe
jnp
out
cmpsb
xlat
sbb
xchg
inc
mov
test
mov
sbb
xchg
aas
std
push
jp
push
cs
das
in
sub
pop
lods
add
mov
daa
test
inc
cmp
call
rcll
jg
ret
jg
imulb
pop
fmuls
je
xchg
sti
cmpsb
aam
pop
mov
decl
outsl
xor
into
arpl
sbb
xchg
cs
cmp
call
mov
lret
icebp
adc
andl
or
jo
jae
mov
pop
je
decl
dec
xor
and
inc
jmp
in
or
loopne
push
xchg
jg
aad
mov
sbb
aad
inc
push
fisubrl
cmpsl
inc
push
dec
xchg
in
push
out
mov
cmp
ds
test
jo
pushl
loope
test
lea
mov
fwait
cltd
xor
shll
add
fistps
test
es
fbstp
fmull
pop
out
or
adc
xchg
add
icebp
jle
out
sub
ja
mov
pushl
das
jae
sbb
iret
mov
out
outsb
mov
mov
jmp
pop
mov
cld
ljmp
or
xchg
pop
out
push
or
dec
stos
mov
push
sbb
je
xor
xlat
fs
jge
lcall
cld
dec
cwtl
add
or
xlat
adc
fnsave
lock
and
sbb
sbb
mov
call
test
jg
cmpsb
aad
inc
out
mov
fldpi
bnd
jns
add
out
jmp
push
fsubrl
jo
out
mov
loopne
lret
lcall
inc
rolb
push
jne
mov
xchg
xchg
push
mov
cmp
mov
outsl
push
ljmp
xlat
push
xchg
push
cli
incl
xchg
cmp
iret
pop
fwait
pushf
add
mov
aaa
mov
call
inc
sub
or
cmc
pop
and
js
cmp
xchg
insb
scas
xchg
imulb
hlt
jmp
push
push
scas
and
repz
mov
aaa
std
sbb
dec
push
jae
lods
jo
jl
ss
jae
ljmp
push
pop
rolb
test
ja
xchg
push
jl
addr16
loopne
xchg
movb
pushl
fsubl
in
adc
mov
and
stos
fmulp
inc
iret
cmpsl
cmp
push
ljmp
sub
dec
or
sar
jge
test
dec
pop
rcrl
or
xor
lds
sbb
js
and
imul
inc
mov
ffreep
xchg
push
push
push
sbb
mov
dec
lock
jmp
add
aaa
and
or
pcmpgtw
push
mov
pop
roll
imul
pop
leave
lcall
cmpsb
jne
loope
push
add
and
dec
jmp
jmp
mov
adc
pushl
xchg
lods
lcall
jl
mov
jp,pn
or
jb
cmp
nop
incl
mov
lret
rcrb
and
arpl
aas
fiaddl
int
push
pop
mov
in
push
add
mov
mov
jecxz
nop
xchg
add
dec
imul
jg
outsb
in
mov
inc
sti
lret
imul
jg
xor
xorb
or
inc
lods
sbb
test
cs
insl
jg
ljmp
dec
fidivrs
or
mov
stos
jp
jecxz
dec
fsub
sub
jp
push
sub
out
dec
dec
push
mov
std
daa
out
and
aaa
insl
call
sub
push
and
gs
fidivl
and
out
cltd
sbbl
ljmp
dec
out
adc
sub
dec
sub
ja
push
jg
pop
in
test
in
clc
dec
scas
adc
ror
js
scas
mov
jmp
dec
jl
mov
dec
std
and
movsb
jmp
call
jg
imul
in
bound
mov
push
jae
ret
adc
add
pushl
fs
jno
jle
xchg
mov
test
add
jp
outsl
je
or
call
scas
mov
sub
xor
cltd
cmpsb
jno
and
dec
pop
fistps
in
rcll
push
cmp
or
inc
dec
je
add
into
push
jmp
fidivs
shrl
mov
fmuls
je
ljmp
inc
adc
call
pop
mov
sbb
outsb
xorb
repnz
shlb
adc
divb
jb
in
data16
in
fidivl
fidivrl
adc
ret
jns
mov
xchg
pop
stc
int3
cwtl
inc
mov
lret
mov
and
dec
fisubrs
test
pop
icebp
bound
push
or
decl
imul
or
cmpsb
adc
cmpl
pop
pop
in
out
lods
push
jecxz
mulb
mov
stc
stos
pop
dec
aad
cmp
xlat
mov
aam
loope
call
xlat
jns
sti
fisttps
or
call
add
and
mov
and
jle
lahf
rcll
sbb
test
jg
addl
fdivl
bound
sahf
sub
push
sbb
hlt
xchg
in
jb
ljmp
xor
popa
or
cld
inc
jmp
pop
sarb
ljmp
pop
mov
fwait
add
insb
sahf
inc
and
rorl
pop
mov
sub
xlat
test
out
pop
adc
loop
inc
daa
cmp
pop
xor
pop
aam
sub
mov
jg
cs
jmp
push
mov
test
xor
mov
cmpsl
movsl
pushl
add
ficomps
mov
add
rcrl
fstpt
sbb
incl
fnstcw
xchg
and
jmp
bnd
xchg
mov
mov
je
ja
gs
repnz
rcl
insl
addr16
call
jp
sti
push
mov
aam
xchg
movsl
lcall
sahf
fwait
mov
je
sar
call
in
xchg
sub
dec
cmc
ljmp
adc
cmp
int3
dec
mov
mov
call
xor
rolb
xchg
ljmp
jns
xchg
shlb
inc
leave
mov
push
arpl
ljmp
outsb
mov
jmp
repnz
mov
pop
testl
movsb
call
xor
cmp
add
mov
jns
stos
adc
ljmp
lret
mov
xchg
xchg
pushf
push
fstl
cmc
movsb
dec
hlt
jns
pop
lret
clc
mov
jmp
pop
or
xor
ljmp
inc
data16
shlb
loope
lcall
repz
lock
in
cs
into
shrl
push
and
mov
call
and
push
mov
inc
mov
ljmp
fldcw
push
mov
dec
pop
out
mov
jmp
add
repnz
notb
mov
sub
mov
subl
and
pushl
sub
mov
dec
and
dec
dec
push
jae
mov
call
dec
jb
xor
or
gs
int3
icebp
xchg
in
xchg
sti
cltd
mov
out
mov
lds
pop
mov
outsb
or
lcall
mov
jnp
push
xchg
add
scas
ljmp
iret
push
xor
pop
cmp
xlat
incl
popf
push
and
push
inc
xchg
nop
inc
dec
fiaddl
xor
mov
fs
std
jg
nop
cmp
cmpb
xchg
pop
push
lret
lock
in
mov
je
and
repnz
mov
add
adc
jb
idiv
mov
decl
lahf
nop
mov
sti
mov
mov
cli
cltd
push
cmp
push
dec
push
lcall
fstl
mov
jl
stos
xchg
lahf
shrb
cli
pop
fiaddl
jmp
pop
out
clc
xlat
jne
mov
inc
insb
mov
push
sub
inc
mov
sbb
jmp
addr16
jo
add
stos
clc
sub
sub
stc
mov
inc
jns
xchg
mov
xchg
lock
dec
sbb
aaa
jo
fdivl
pop
popf
mov
je
sahf
mov
jnp
adc
inc
xchg
adc
pop
fwait
es
xchg
mov
test
sub
cmp
int
cmp
decl
sbb
xor
xor
mov
sub
fadds
out
test
add
jno
std
shrb
add
pop
mov
call
mov
or
mov
stos
imul
lcall
shlb
call
mov
mov
xchg
jl
sbb
ljmp
inc
cs
mov
ret
gs
jg
jmp
mov
ljmp
mov
jbe
fiadds
in
ljmp
sub
mov
out
orl
push
add
lods
call
cmp
hlt
loop
mov
out
mov
pop
data16
sub
cltd
or
out
or
adc
cld
popa
dec
outsb
sbb
adc
jo
sub
nop
or
rcll
mov
shll
and
aam
xchg
out
inc
test
stc
mov
cmp
loop
xchg
scas
mov
ss
iretw
add
clc
inc
popf
stos
incl
imul
iret
scas
es
inc
ss
push
jmp
out
mov
xchg
inc
dec
lahf
fwait
rclb
out
mov
cs
rcr
insb
in
outsl
pop
clc
leave
push
xlat
in
lcall
mov
pusha
ror
xchg
cmc
fidivs
jns
and
sub
inc
pop
stos
jle
call
mov
imull
and
test
shrb
outsl
in
add
decl
cmpsb
add
enter
pop
std
lds
jecxz
enter
add
mov
xchg
sbb
pop
xchg
fsubr
mov
mov
inc
inc
push
in
sub
add
shr
mov
pop
xchg
call
stc
mov
and
fbstp
cltd
mov
cs
and
push
xchg
popa
incl
push
ret
xor
jmp
mov
mov
sbb
mov
std
jl
insb
mov
sbb
lods
mov
cmp
inc
bound
repnz
out
inc
sbb
ja
adc
jo
xor
xor
push
mov
sbb
out
enter
lret
int3
jae
incl
iret
push
stos
xor
popa
push
stos
jno
xchg
icebp
ljmp
mov
repz
data16
adc
mov
icebp
mov
movsb
outsl
pop
dec
aam
jp
repnz
mov
sub
popf
adc
xchg
icebp
push
xor
jne
aam
rorl
enter
sub
jmp
or
movsb
orl
push
sahf
jle
in
add
adc
pop
xchg
gs
cli
pop
es
xchg
clc
fnstsw
decl
jge
movsl
mov
jecxz
out
dec
out
repnz
rcrb
push
fisubrl
cwtl
or
stos
inc
sahf
push
cltd
shl
push
mov
sbb
dec
lea
xor
test
lcall
test
int
cwtl
dec
xchg
insl
fstpl
lret
jge
sbb
cmp
inc
lcall
ljmp
fcomi
pop
lea
mov
les
cmpsl
jge
scas
sbb
sbb
das
lret
dec
ret
loope
sar
inc
lcall
jmp
xchg
pop
fwait
pop
push
mov
loopne
sbb
or
push
xchg
js
pop
lcall
add
mov
mov
fstl
dec
inc
call
and
xchg
push
bound
mov
call
js
mov
cmpl
jp
add
fsubrp
mov
aam
fwait
dec
mov
inc
inc
fstps
jg
jmp
decl
aam
jnp
bound
cmp
mov
inc
mov
mov
push
mov
and
mov
push
push
je
inc
jle
enter
sbb
and
inc
and
stos
cmp
sar
inc
xchg
add
pop
popf
mov
mov
fcomps
and
sbb
movsl
fcmovnu
nop
cmp
decl
adc
insl
pop
subl
dec
jne
and
por
loopne
mov
scas
inc
add
loop
cli
call
cmp
push
and
jbe
scas
push
pop
ss
dec
xchg
decl
gs
and
out
cmp
cmp
xchg
loop
mov
rcrb
mov
jp
jmp
in
aad
rcll
push
popa
xchg
in
mov
jo
sub
push
add
call
repz
jns
mov
dec
push
mov
lods
stc
cmc
lret
xchg
mov
inc
push
xchg
les
mov
inc
xor
les
jb
xor
or
fadd
out
inc
out
add
xchg
mov
shrb
push
jno
dec
lods
sub
lock
aas
stc
lret
cmpsl
add
cmova
sahf
push
lods
movsl
incl
jo
stos
cli
push
and
inc
dec
sar
dec
and
icebp
jl
test
js
into
je
or
mov
xchg
mov
dec
and
stos
mov
jo
push
push
push
das
call
cmp
ss
mov
jno
xchg
cmp
jl
jmp
test
rcrb
ficoms
pop
or
and
mull
xchg
aam
mov
pop
cli
shl
and
pop
sbb
xor
insl
jmp
or
xchg
outsb
scas
ljmp
lcall
sub
outsl
movsl
xchg
sub
popf
mov
mov
in
xchg
mov
inc
mov
adc
les
push
movsb
mov
push
xchg
ljmp
popf
imul
imulb
imul
insl
jns
divl
cli
ret
enter
lods
icebp
mov
rorb
ret
cmp
out
cmp
cmp
push
ljmp
int
xor
add
out
jmp
sub
jg
mov
lds
loopne
push
fdivr
pushl
mov
fbstp
xchg
nop
test
lds
ror
jle
xchg
rcr
sub
push
stc
mov
inc
loop
loopne
mull
add
shlb
pop
clc
enter
push
lods
cld
popa
add
arpl
sub
dec
mov
scas
pop
mov
iret
inc
mov
inc
sub
jmp
xorl
stos
not
cwtl
test
pushf
push
lcall
pop
out
les
orl
pop
add
jne
sbb
cmp
push
cli
mov
and
out
inc
inc
ljmp
js
clc
daa
dec
fldl
cmpsb
mov
or
sbb
out
ss
adc
cli
push
add
ret
mov
lahf
fsts
push
cld
mov
jp
movsl
adc
adc
ljmp
push
cmp
mov
or
ret
fs
fldz
outsl
add
pop
fcmove
arpl
sti
lods
leave
jo
ljmp
fidivs
bound
xor
cs
mov
or
mov
ljmp
cmpsl
pushf
or
js
cs
sub
je
aam
fdivrs
sti
pushl
pop
mov
mov
or
cmp
push
mov
jmp
mov
xchg
mov
sub
pop
sahf
or
push
jg
add
dec
aam
cmpsl
rcrl
xor
mov
ljmp
hlt
mov
cli
ret
cmp
pop
stc
and
lcall
adcl
xchg
push
add
addr16
dec
mov
xchg
stos
shll
push
pop
imul
shrb
mov
jmp
call
ds
lds
xchg
xchg
sub
xor
lods
push
fs
mov
data16
iret
ss
jmp
call
push
fistpl
pushf
bswap
dec
sbb
lcall
adc
outsl
daa
mov
test
sub
cmpsb
cltd
and
cli
fs
adc
cmp
xor
call
jae
inc
and
in
add
mov
xchg
mov
fbstp
loopne
add
xor
mov
in
and
and
outsl
clc
jg
add
push
imul
imul
jecxz
dec
push
push
cmp
mov
dec
fdivr
jmp
xor
sbbl
cltd
cmp
std
jle
sbb
add
mov
lcall
or
mulb
pop
xchg
add
sub
ljmp
mov
decl
rcrl
add
mov
push
or
popf
push
int
lock
xchg
lret
sub
out
call
shlb
arpl
andb
or
loope
ja
rolb
cmp
scas
out
cmpsb
xor
jnp
popa
sbb
gs
fstps
out
cmp
gs
cmc
les
adc
movsl
insb
cli
cmp
mov
inc
shr
shrb
cli
andl
and
das
cmp
sbb
pushl
stc
and
adc
xchg
and
call
inc
push
jmp
out
lock
test
movb
or
push
dec
mov
mov
stos
ljmp
daa
cmpsl
dec
jmp
jecxz
mov
divl
iret
outsb
jnp
jmp
cltd
aam
pop
mov
jb
add
adc
push
rol
xor
cmc
lods
xchg
stos
add
dec
xchg
sbb
and
decl
subl
in
loope
sahf
push
jg
ficompl
xchg
pop
mov
xor
pusha
andnps
bound
sub
mov
in
lret
jne
std
mov
xchg
in
xlat
or
or
cmpsb
hlt
xchg
lret
jle
in
popf
jno
push
inc
mov
inc
andl
adc
fwait
inc
cmp
cmp
es
incl
lds
mov
aam
pop
mov
fisubrs
mov
out
bound
test
lcall
lock
dec
adc
mov
pushf
fucom
dec
ss
sub
xchg
jns
jmp
sub
pop
aad
cmpsb
rorb
push
and
sub
in
shll
xchg
cmp
fnstenv
pushl
ret
enter
pop
jo
dec
add
push
adc
and
scas
out
clc
jmp
call
sbb
push
sub
popf
push
pop
xlat
lods
arpl
jmp
lahf
aad
loopne
jne
ret
dec
mov
mov
mov
sub
mov
cmp
xchg
loope
loopne
jmp
stos
pop
push
cs
dec
jns
out
push
nop
cmc
dec
pop
or
call
mov
or
adc
loopew
mov
stos
pop
xchg
mov
add
incl
xchg
adc
adc
add
xchg
mov
inc
cld
cwtl
dec
lcall
push
cld
sbb
lods
jg
sarb
je
jecxz
loope
inc
ja
int3
data16
andl
scas
push
iret
xor
sarb
test
inc
push
flds
cmc
inc
jnp
rcll
outsl
cli
pushl
cmp
hlt
sbb
scas
dec
loope
push
or
mov
sub
push
sbb
js
je
decl
lahf
and
xchg
shlb
ds
and
jae
int3
jmp
shl
and
push
inc
in
xchg
jg
pop
mov
and
call
or
out
lret
pushl
in
cmc
jne
cs
mov
dec
mul
cmc
pop
shll
pop
xlat
je
sti
lock
std
call
sbb
dec
ja
lcall
mov
mov
push
cmp
xlat
pushl
imulb
mov
fbld
pop
xchg
insl
nop
pop
cmpxchg
ror
jns
pop
icebp
jmp
xchg
jp
data16
dec
sub
dec
inc
jno
and
inc
and
call
sub
pusha
popw
and
mov
fcmovne
cmc
leave
div
hlt
pushf
das
xchg
arpl
xor
push
mov
stos
mov
loope
std
and
pop
fst
cmp
or
sbb
cmpsb
xor
addr16
inc
cmp
fcomps
scas
and
sub
sbbl
mov
mov
push
xor
outsl
pop
push
mov
fcomip
dec
repz
xchg
pop
lcall
cmpsl
cmp
mov
mov
mov
inc
mov
xor
stos
mov
in
repz
mov
jbe
fsubrs
sbb
xchg
enter
xchg
ss
cs
inc
jo
call
inc
leave
jbe
sti
fdiv
stc
out
cld
mov
in
pop
aad
cltd
mov
ret
xor
dec
cmpsb
sub
inc
ljmp
out
pop
test
loopne
cmpsl
mov
xor
out
add
dec
or
fwait
xchg
jnp
lcall
sbb
js
mov
and
outsl
imul
mov
pop
jmp
sbb
call
push
inc
cli
jmp
shll
scas
sbb
mov
ljmp
das
cmp
sub
aas
or
into
inc
mov
out
daa
insb
dec
sti
call
jge
data16
out
jb
in
mov
push
clc
cmp
cmp
addl
inc
and
adc
insb
xchg
add
pop
cmp
mov
pop
stc
pushl
out
fucomp
sbb
dec
iret
cmp
mov
insl
or
mov
xor
cmp
insl
ds
bound
jle
cmp
xchg
jns
xor
cmc
xchg
pop
mov
cmp
out
flds
jmp
push
adc
jo
inc
bound
xor
push
std
clc
sub
push
jmp
and
or
mov
mov
cmp
xchg
test
test
sub
ljmp
stos
mov
or
imul
dec
dec
jge
inc
cmpsl
int3
mov
mov
pushf
icebp
addr16
in
out
stos
outsb
xlat
push
mov
ret
mov
sub
dec
and
std
stc
push
insb
int
jle
push
jmp
add
roll
or
inc
push
cltd
and
mov
jnp
jmp
lds
int
imul
mov
mov
mov
lds
cmp
fidivs
push
mov
aad
sbb
inc
mov
xor
mov
sub
dec
xchg
or
int3
into
mov
inc
mov
push
shr
aas
xchg
xor
pushl
inc
pusha
xor
or
xchg
mov
ja
or
sbb
dec
mov
inc
rorl
fmull
sbb
neg
pop
insl
mov
adc
jbe
ljmp
test
mov
pop
push
scas
popa
mov
ljmp
and
cs
nop
fisubl
cltd
mov
mov
std
inc
mov
loopne
lods
xchg
out
xchg
pop
ret
inc
xchg
ljmp
dec
sbb
je
xchg
enter
stos
cmp
inc
xchg
xlat
seta
sub
test
or
push
aas
add
into
mov
fildll
push
and
shr
and
fnstenv
xchg
lret
js
mov
jge
push
jl
subl
push
adc
call
and
inc
jno
inc
mov
shl
movsb
mov
je
xor
lcall
mov
pop
cmp
loop
mov
pushf
and
data16
scas
pushl
jle
jno
fsubrs
pushl
stos
adc
aaa
jnp
adc
pop
add
scas
push
jg
and
push
dec
xchg
pop
outsl
popa
ja
jecxz
popa
aad
int3
adc
mov
sahf
jmp
mov
inc
xchg
push
sub
outsb
ljmp
push
mov
jp
out
sar
mov
push
xchg
std
xchg
fnsave
bnd
or
push
sbb
fs
sbb
pushl
dec
push
sbb
into
imul
out
adc
cmpsb
idiv
jo
adc
adc
loopne
jnp
bound
dec
stos
rcl
ret
jecxz
movsb
scas
enter
sbb
test
adc
dec
xor
addr16
fisubrl
movsb
js
stos
fldenv
enter
ficoml
movsb
lret
push
inc
ret
sbb
dec
lcall
xor
sub
subb
mov
and
inc
stos
push
test
xor
add
js
nop
movsl
pop
fstpl
jae
decl
inc
xor
cmp
cmp
fldt
call
ljmp
xchg
jns
mov
popf
jecxz
jae
push
jns
or
or
ljmp
bound
inc
icebp
aad
push
inc
or
mov
push
or
xor
pushl
mov
cmp
cmpsb
in
pop
mov
out
fimuls
rcrl
add
maskmovq
mulb
or
lods
push
xchg
jl
jnp
or
mov
stos
movsl
imul
jg
add
test
sub
in
mov
loopne
xchg
movsb
repz
decl
pop
test
clc
push
ret
jae
cmp
sbb
mov
pushl
mov
dec
mov
gs
xchg
in
mov
inc
mov
mov
mov
mov
sub
pop
push
mov
adc
inc
popw
sbb
mov
jnp
je
mov
pushl
in
ret
test
dec
jns
rol
mov
jns
pop
test
xor
inc
add
mov
pop
out
popf
pop
add
mov
mov
jo
mov
std
fwait
xor
xchg
inc
adc
push
pop
incl
pop
imul
imul
mov
fnsave
test
inc
mov
cmp
pushl
mov
inc
mov
xchg
fadds
jno
dec
les
int
ret
push
aad
imul
sub
fbld
adc
jp
and
mov
mov
loopne
imul
xlat
in
add
mov
jmp
mov
xchg
push
ds
mov
xchg
and
hlt
cltd
cli
aad
lds
push
out
xchg
add
ret
movsl
dec
test
mov
or
or
ljmp
daa
rcll
inc
mov
pop
sbb
adc
and
inc
in
lods
mov
incl
cmc
pop
sarl
fcompl
sub
inc
aas
sarl
dec
imul
test
or
jo
ljmp
or
jle
ror
push
cltd
cmp
loop
and
push
and
inc
pushl
push
xchg
fcoml
lds
mov
out
add
call
mov
hlt
mov
cmp
shll
sbb
ss
out
data16
pop
or
test
sub
mov
decl
mov
outsl
repnz
xor
add
rclb
add
adc
push
pushl
cld
jmp
repz
in
frstor
rcll
sbb
push
iret
outsl
fstpt
jbe
in
jo
rcll
pop
dec
ss
call
cmpsl
int
xchg
decb
xchg
pop
jg
test
dec
imul
call
mov
mov
inc
xchg
aas
add
mov
push
mov
bound
fs
incl
movsl
adc
incb
fs
ljmp
xor
das
shrl
mov
ljmp
dec
shl
out
mov
mov
xchg
dec
push
aaa
ror
data16
call
sub
push
adc
or
repz
pop
adc
subb
incl
fs
test
push
cmp
addr16
mov
lret
ret
mov
arpl
outsl
in
push
leave
xchg
sub
jg
mov
lock
add
int
push
dec
and
inc
mov
adc
movsl
fidivrl
iret
and
lds
incb
jg
jp
icebp
stos
inc
sar
fisubrs
sub
cmp
mov
dec
sbb
xchg
pop
adc
add
cltd
push
into
ficoms
in
js
sub
dec
mov
popf
fsts
pop
lahf
push
sbb
adc
mov
or
iret
xchg
mov
jle
or
out
lock
dec
inc
adc
inc
pop
loope
cmp
or
fwait
sub
adc
pop
cmp
ljmp
ljmp
push
lea
inc
dec
fsts
fcomp
and
pop
xor
sbb
add
mov
xor
cmpsl
aas
fsubrl
jg
xor
imul
or
imul
fwait
aaa
call
subb
push
in
dec
popa
lods
arpl
jg
call
xchg
mov
adc
imul
pop
inc
outsl
cmp
in
xor
gs
jo
cli
mov
mov
sti
xchg
das
lret
ret
in
sub
pop
lcall
je
push
mov
es
ljmp
jno
adc
imul
mov
fcmovb
xchg
add
rcll
je
sub
std
subl
testb
push
add
or
pop
fmull
mov
inc
outsl
cli
leave
jp
mov
push
out
xorl
bound
pusha
xchg
xor
mov
inc
push
loopne
cmpsl
inc
dec
xlat
lds
mov
mov
repnz
mov
jle
xor
ljmp
ds
jl
shlb
mov
cmpsb
dec
stos
jg
cmc
add
jecxz
fsts
mov
pushl
ja
inc
rclb
sbb
cld
and
xor
xchg
addr16
inc
hlt
aas
adc
ficompl
fildll
mov
pop
shrl
mov
addr16
ljmp
repz
jmp
cmp
imul
adc
adc
jl
je
cmpsl
fstl
mov
mov
faddl
sbb
add
out
repz
decl
jne
imul
iret
fwait
jbe
aas
lret
dec
cmp
int3
outsb
xchg
in
das
ja
pop
ss
ljmp
test
mov
js
arpl
enter
cmp
js
push
cmp
incl
mov
pop
incl
lahf
and
mov
mov
jg
adc
jns
sahf
cmc
cmp
fildl
subb
add
jno
mov
fwait
inc
ljmp
clc
stos
rcrb
pop
pop
repz
sbb
in
dec
mov
pusha
popa
lcall
cmp
outsb
pop
scas
xor
mov
xchg
ja
enter
js
fstps
dec
push
jge
notb
adc
inc
mov
lods
pop
shll
xchg
test
and
sahf
xchg
and
xor
ljmp
or
into
cmc
pop
test
sti
mov
xor
nop
lcall
inc
jnp
insl
rolb
test
mov
insl
lods
popa
jl
xchg
fwait
pushl
std
decl
out
mov
and
cmp
pop
cmp
aaa
mov
call
ljmp
mov
mov
cmc
fcom
ljmp
mov
incl
in
cmpsl
fsubrs
sub
inc
test
gs
xor
sbb
or
fdivrs
lcall
loop
fidivrs
push
mov
adc
adc
and
shll
mov
decl
mov
fwait
shrl
adc
or
mov
inc
xor
add
data16
loopne
jns
mov
and
push
add
imul
lret
pop
xchg
mov
dec
pushl
mov
int
sahf
pop
mov
rcrb
inc
imul
jns
outsb
xor
mov
aam
pusha
test
cmp
fmulp
cs
mov
jbe,pn
sub
mov
dec
mov
xor
insb
jno
jmp
or
pop
xchg
es
xlat
or
mov
imul
scas
pop
sbb
clc
ljmp
cmp
mov
decb
xlat
inc
jl
add
sub
test
jbe
pop
dec
xor
add
lcall
and
mov
das
or
ljmp
out
mov
jl
xchg
int3
adc
inc
push
add
sbb
in
loopne
mov
jg
xchg
mov
xchg
out
ret
shlb
cli
fistps
pop
mov
incl
mov
es
and
int
lea
adc
rcrl
addr16
push
in
insb
sub
ljmp
pop
mov
stos
sub
cmp
lcall
int
sbb
dec
les
xchg
sbb
push
outsl
cmp
pusha
daa
dec
out
fdivrp
or
jp
orl
or
pop
mov
lret
mov
cltd
dec
incb
lcall
sub
and
cmp
clc
mov
mov
sarb
xchg
lods
mov
arpl
test
mov
or
and
out
mov
scas
push
ja
popf
test
cld
popa
inc
xor
dec
inc
and
rcr
fldcw
cmp
pop
imul
mov
dec
push
scas
repz
jg
adc
cmp
in
mov
jmp
test
sub
adc
mov
cmp
pop
sahf
push
mov
hlt
loope
add
fmul
ja
dec
xor
mov
xor
stos
mov
push
dec
dec
inc
movsb
fbstp
jle
popa
jmp
pop
daa
or
pop
jae
xor
cmpsl
or
out
add
sub
mov
xchg
lahf
sahf
push
pop
sbb
or
mov
es
call
outsl
sarl
fisubrl
fistpll
or
rcr
rcr
mov
pop
hlt
sbb
fwait
ret
jmp
push
mov
aaa
js
ljmp
insl
cmp
mov
jge
lret
sarl
cli
arpl
sub
xlat
cltd
ljmp
push
xchg
sbb
out
cmc
call
xor
outsl
mov
mov
arpl
das
clc
sbb
adc
jl
daa
fwait
insl
or
mov
jns
call
jb
addr16
jb
jp
sub
cmpsl
mov
lret
pop
mov
add
sti
icebp
nop
pop
scas
mov
lret
jae
lea
add
and
rcrl
lret
sar
cmp
adc
test
lcall
add
jp
scas
mov
dec
insl
out
orb
mov
fisttpl
leave
jmp
mov
jecxz
mov
mov
jbe
fldt
call
loopne
mov
lock
imul
mov
rorb
cmp
mov
jb
out
ja
pop
add
dec
xor
popf
dec
add
lret
mov
add
push
cmpsl
jns
pop
in
scas
xchg
push
cmpsb
xchg
and
add
ds
shl
inc
sbb
and
add
fisubrs
andl
ljmp
jg
pop
xor
sbb
sub
enter
mov
test
jmp
call
jbe
mov
xor
or
xchg
out
mov
arpl
xchg
jno
lcall
jg
pop
int
roll
mov
jmp
lods
xchg
clc
and
xor
fcos
call
pop
xchg
jb
or
pusha
jne
add
mov
push
jo
icebp
xor
mull
mov
decl
push
nop
mov
sub
pop
and
mov
call
movl
cmc
fcmovnu
and
xchg
stc
adc
leave
test
call
jnp
iret
xor
jmp
fs
xchg
dec
or
rclb
xor
lret
mov
jbe
xorb
imul
fisubrs
scas
jnp
js
mov
shlb
fisttpl
imul
inc
xor
inc
loopne
add
inc
dec
sbb
inc
pop
daa
bnd
imul
mov
gs
popa
xchg
mov
js
je
cli
cmpsb
movsl
aad
cmp
fcomps
lds
pop
and
jb
fiadds
cmp
imul
inc
cmpsl
test
call
xlat
iret
mov
mov
les
out
xchg
sahf
push
jg
sbb
or
fwait
push
xchg
cs
mov
decl
push
xor
orb
mov
or
inc
sti
les
shr
mov
repnz
filds
or
sti
push
adc
out
fcoml
in
daa
in
call
jle
xchg
lods
mov
inc
and
scas
pop
add
dec
xchg
stos
xchg
mov
jecxz
sub
pushl
pop
shl
sbb
sub
mov
data16
xchg
fstl
dec
or
push
sub
xchg
xchg
mov
ret
es
in
stc
dec
cli
mov
jb
jg
rcrb
call
icebp
push
insb
mov
inc
aam
inc
lret
pop
mov
rclb
out
ljmp
and
clc
pushl
mov
pop
and
lds
dec
jb
pop
mov
loopne
push
and
loope
sbb
pop
lods
push
cmp
xchg
inc
push
xchg
int
adc
ficompl
decl
mov
mov
repz
xorb
adc
or
les
decl
mov
scas
ss
push
mov
mov
inc
or
push
mov
fisubrl
loopne
pushf
or
popa
cltd
xor
iret
push
jae
push
test
lock
shlb
shrb
je
test
pop
mov
jmp
loop
lcall
lea
pop
test
and
xor
out
pop
mov
incl
lock
daa
sbb
aas
and
pop
xchg
and
dec
stos
mov
adc
mov
pop
cmc
inc
push
jl
outsb
aam
mov
ljmp
mov
daa
insb
dec
cmp
mov
pop
xchg
or
sbb
dec
pop
or
pop
ret
push
xorl
push
sub
mov
add
out
clc
dec
cltd
je
push
fwait
xor
add
xor
fimull
fsubl
mov
push
inc
xchg
fiadds
jne
jp
in
aam
insb
inc
lods
adc
add
incl
jle
pusha
jo
test
aad
cmc
in
push
inc
js
jo
inc
push
ljmp
aam
arpl
bound
and
out
test
call
xchg
mov
xor
jne
clc
pop
clc
ljmp
mov
leave
ljmp
movsb
xchg
mov
ja
sbb
adcl
fs
jbe
test
mov
jecxz
decl
aas
scas
repnz
pusha
or
inc
inc
xchg
or
lock
mov
or
inc
xchg
cmp
mov
aas
sub
cwtl
push
push
pushf
fidivrl
imul
call
sbb
xchg
add
sahf
insl
outsb
std
xchg
fwait
pop
push
fnstcw
cmp
mov
call
cmpsb
adc
mov
gs
movsb
xor
arpl
call
insl
mov
jp
ret
add
ljmp
fisttps
leave
stos
les
ret
pop
js
cmp
sahf
mov
in
pop
jb
js
arpl
loop
push
mov
lcall
ss
inc
add
xchg
mov
lods
adc
xchg
icebp
lds
cs
repz
push
mov
decl
push
aaa
or
inc
out
lret
pop
dec
aad
cmc
ss
mov
push
mov
jge
pushl
inc
sub
inc
and
xchg
lahf
insb
sbb
add
inc
jg
push
and
call
shlb
mov
arpl
jle
aas
inc
test
or
fnstenv
ljmp
pop
mov
cli
sbb
jmp
add
aas
js
sbb
cmp
aas
push
sbb
mov
jecxz
sahf
rorl
cwtl
mov
xor
jg
test
or
xlat
and
inc
in
sub
mov
fistl
jo
inc
pop
or
out
xchg
repz
xor
xchg
ja
jo
ja
push
movsb
pop
push
and
sub
ljmp
shlb
out
sbb
pushl
ficompl
adc
data16
xchg
inc
ss
xor
hlt
jp
mov
test
adc
fsts
xor
int
cmp
dec
pop
mov
cmc
or
mov
xchg
into
dec
cmc
in
cmpsl
movsb
aad
addr16
cmp
jle
ficomps
inc
cmpb
out
shlb
add
jge
dec
fsubrs
adc
sahf
adc
xor
in
in
data16
mov
mov
xchg
adc
or
incl
imul
lods
daa
fldcw
cmpl
dec
cmp
xchg
mov
int
sub
jmp
push
lods
scas
jne
cwtl
clc
xchg
sbb
insb
pushl
enter
movsb
push
dec
xor
mov
ret
ds
jns
orl
sar
jg
jnp
xor
xchg
lea
inc
xchg
loope
int
sub
mov
jg
hlt
cmp
mov
lds
gs
adc
cmp
mov
scas
test
decl
jb
sbb
fs
stos
int
mov
vmovaps
cmp
jo
call
jg
push
xchg
daa
inc
cs
sub
imul
out
adc
mov
push
dec
popf
aam
pop
std
js
shlb
mov
dec
mov
roll
push
stos
dec
push
jnp
push
nop
ret
cmp
fmull
out
xor
leave
add
pushl
xchg
inc
sbb
insb
sbbl
jecxz
stos
and
int3
inc
mov
incl
int
mov
fwait
dec
xor
movsb
in
pop
flds
stos
jno
pop
cmp
xor
sub
popa
call
pop
dec
flds
sub
push
sub
hlt
sbbb
dec
das
mov
xchg
pushl
mov
mov
mov
cli
ret
push
mov
mov
movsb
icebp
pushl
cmp
or
mov
or
outsl
pop
push
test
fistpll
push
cwtl
pop
jge
shll
out
aas
mov
and
mov
or
xchg
push
push
jno
add
add
out
and
fdivl
push
lea
xchg
pop
hlt
add
mov
in
lfs
sbb
xlat
aam
icebp
xchg
inc
out
clc
mov
popa
and
cmp
sarb
inc
stc
mov
arpl
mov
lret
js
orb
pop
adc
mov
repnz
sar
mov
dec
shll
aas
cli
cwtl
enter
mov
leave
ss
mov
mov
jg
cmp
lea
les
cmp
xor
out
fsubrl
pushl
out
setg
and
jne
icebp
jecxz
adc
fimull
and
adc
mov
test
scas
push
rorl
cmp
movsb
pop
jne
cld
dec
xchg
mov
mov
and
cmp
out
outsb
lret
fisubrl
subb
negb
add
call
rorb
xchg
dec
lods
xchg
nop
xchg
push
jge
xchg
incl
sub
bound
sub
push
test
and
mov
cmp
lcall
cmp
push
out
jg
test
outsb
xorb
js
inc
or
inc
fldcw
add
and
sbb
xchg
adc
jb
sub
sub
fimull
or
xchg
mov
mov
pushl
ret
rorb
mov
stc
cwtl
les
popa
push
stos
vmovdqa
jecxz
mov
stos
mov
scas
inc
mov
xchg
sub
inc
cmp
push
mov
les
int3
ja
jno
cmpsl
jno
push
aad
xchg
push
jnp
add
lahf
jp
add
cmpsl
cld
mov
dec
add
insb
enter
loopne
add
jp
fstps
mov
dec
es
mov
lds
push
xor
out
cmp
and
add
jo
push
push
lcall
aaa
fidivl
adc
inc
out
jp
cmpsl
aas
das
xchg
add
sbb
jmp
mov
orb
mov
into
addr16
in
inc
or
test
hlt
dec
decl
adc
dec
sub
pop
aas
jne
ljmp
mov
mov
out
sub
xor
or
incl
or
adc
jnp
out
xchg
and
jle
jle
adc
out
adc
adc
jae
icebp
jb
push
call
sub
push
pop
sbb
shr
aaa
loop
adc
andl
dec
jb
jns
jb
jno
sar
mov
pushf
xchg
clc
lret
pop
push
pop
std
or
enter
dec
clc
inc
mov
ljmp
bnd
sbb
clc
mov
neg
xor
sbb
incl
mov
int3
ljmp
jge
je
aad
or
or
aam
pop
loope
add
call
sub
adc
cmpsl
sti
ret
lcall
pushf
lcall
iret
push
stos
xchg
dec
cmp
fnstenv
adc
jnp
cltd
mov
sti
push
test
ret
fdivrp
pushl
cmp
cs
js
cmc
lds
xchg
out
jge
and
mov
rcpps
aad
incl
pop
inc
jecxz
out
orl
imul
rcr
and
stc
imul
fmulp
ss
je
jp
jle
out
xlat
testb
mov
or
movsb
and
sbb
mov
dec
mov
sbb
jg
jae
lcall
mov
pop
stos
out
mov
das
movsb
std
mov
mov
lahf
push
pop
in
add
outsb
imul
cmpsb
dec
sub
push
dec
or
int3
sti
int3
aaa
mov
mov
jae
in
mov
incl
xchg
test
orb
mov
xchg
lock
frstor
mov
xchg
vorps
mov
xchg
dec
inc
jecxz
or
jmp
stos
pop
dec
test
call
les
mov
sbb
mulb
jns
xchg
ret
jns
std
clc
mov
adc
nop
rolb
enter
push
cmpsl
sbb
push
icebp
sub
add
fdivrl
mov
mov
jle
in
test
mov
push
call
mov
pop
repz
outsb
lret
call
pop
call
cmp
xchg
xor
adc
fidivs
jmp
hlt
pop
outsl
add
dec
test
addr16
movsl
jge
jae
fidivl
mov
pop
rolb
jne
mov
ret
dec
fwait
push
xchg
xchg
dec
sbb
pop
fs
lcall
shr
inc
cltd
rcl
cmp
not
sbb
lods
mov
dec
add
filds
mov
syscall
addr16
es
enter
jns
push
sti
mov
sbb
daa
rclb
sub
sbb
or
and
loope
scas
clc
call
mov
adc
out
xor
into
pop
xchg
cmp
ss
and
je
ljmp
jge
scas
mov
sbbl
mov
sub
mov
dec
push
scas
loope
mov
or
pop
pop
inc
xor
mov
push
jo
movsb
or
cs
jno
clc
cmc
add
cmp
dec
fiaddl
cmp
pop
leave
ret
xor
loope
pop
ja
in
decl
adc
adc
popf
push
jecxz,pt
outsb
fisttps
lcall
dec
cmp
cmp
cmp
add
mov
sub
jmp
adc
jmp
sbb
int3
test
and
cs
xor
pushf
push
std
and
cmc
mov
jmp
popa
out
out
or
inc
int
cmp
ss
dec
aas
jmp
or
pusha
decl
test
jns
idivb
ja
cmp
push
mov
out
cmp
pop
adc
aad
mov
fwait
in
inc
mov
call
jg
hlt
daa
loope
out
aad
mov
mov
fdivs
push
cwtl
mov
pop
sub
and
jecxz
push
imul
ja
sub
pusha
jmp
push
xor
ficompl
and
jg
mov
push
lcall
loopne
inc
popa
cmp
loope
pushl
std
pushl
aad
in
dec
das
out
pop
call
xchg
stos
sarl
mov
mov
incl
shrb
push
mov
inc
sahf
imul
and
jmp
insl
pop
test
mov
mov
and
add
push
aad
popl
repnz
add
mov
sbb
decl
push
add
mov
add
xchg
pop
push
int3
cli
out
repz
jmp
lods
or
loopne
mov
js
lcall
cmp
ljmp
ss
or
aas
lock
sarb
nop
lcall
mov
fcos
jg
out
xchg
rolb
inc
push
daa
push
fstps
test
repz
pop
push
std
cmp
into
mov
shlb
pop
dec
push
das
push
test
jns
cmp
sbb
rcll
mov
xchg
xchg
std
xlat
data16
int3
push
lods
jl
or
imul
roll
ljmp
mov
movsl
xor
decb
int
out
adc
out
out
enter
sub
call
push
rcll
fistpl
adc
pop
and
sbb
cld
jl
test
pushl
xchg
out
mov
bound
insl
movsl
xchg
xor
rorb
sar
incl
fs
jbe
cvttps2pi
mov
cmpb
mov
shlb
xchg
jnp
add
jmp
pop
mov
mov
ja
pop
iret
jo
rol
fsub
push
out
cmpb
and
fistps
in
inc
jne
insl
fcomps
test
call
xor
xchg
cmc
repnz
adc
adc
sbb
inc
jl
mov
sti
mov
dec
dec
add
cld
xor
inc
xlat
adc
cli
fbld
fucomip
jp
jnp
xchg
jg
aas
les
dec
scas
push
add
pushf
cmp
lret
lds
add
mov
cmp
test
mov
cmp
dec
fcmovnb
jnp
in
out
cltd
adc
icebp
ds
sarb
inc
data16
push
jo
pop
xchg
dec
lea
mov
xchg
xor
pop
and
sti
scas
andl
cld
ljmp
jmp
aaa
jbe
xor
xlat
dec
inc
mov
inc
mov
mov
sub
sub
xchg
loop
sub
loope
ja
push
clc
aas
mov
ljmp
lret
mov
add
imul
pop
test
andl
jmp
ret
push
fs
addr16
cmpsl
sar
out
out
mov
pop
in
insl
fisubrl
xchg
std
lcall
leave
sti
sub
xchg
jno
mov
cltd
lds
mov
call
or
clc
insl
jle
sbb
jne
aas
adc
fcompl
sbb
cmp
call
push
sar
or
movsb
mov
lcall
notl
mov
push
ret
movb
xor
mov
jle
cli
hlt
sbb
es
cmp
lret
mov
clc
jmp
shll
ljmp
mov
sbb
enter
lds
push
addl
jge
push
jno
es
lcall
inc
and
ja
ficoml
sub
in
sub
mov
imul
inc
incl
mov
fdivrp
fisubrs
pusha
outsl
stc
pop
pop
outsb
adc
xchg
aaa
cmc
xor
jmp
ljmp
and
xorb
out
cmp
sbb
mov
cmp
cmc
xor
fs
sbb
cwtl
movsb
fbstp
xchg
sahf
ds
pop
rol
roll
popa
fwait
out
ljmp
dec
aam
or
clc
push
outsl
push
inc
lods
pop
adcb
fisubrs
fwait
outsb
mov
and
mov
inc
cmp
adc
ficoml
pusha
push
adcb
pushl
repnz
mov
das
jne
ret
imul
test
pop
push
nop
out
mov
ffreep
pop
loopne
cmp
in
sbb
imul
jo
decl
jecxz
and
mov
add
push
in
jmp
cs
sub
test
jg
call
sub
out
ljmp
mov
or
lods
add
incl
lcall
jmp
adc
jp
jnp
hlt
js
sub
fstps
dec
push
hlt
ror
std
mov
std
push
jge
sbb
mov
jmp
cmp
fistpll
leave
icebp
and
lahf
lahf
dec
mov
cmp
mov
imul
mov
push
in
push
xchg
xor
pushl
std
incl
sub
cltd
pop
mov
push
insl
xchg
rcrl
mov
jg
ljmp
stos
loop
jbe
loope
hlt
inc
push
cmc
xchg
call
mov
ja
lods
in
mov
decl
stc
js
lea
loop
mov
push
dec
xchg
sub
lods
fldt
shrl
mov
mov
pop
imul
outsl
mov
jmp
sbb
icebp
pop
lret
lret
push
std
sbb
or
adc
add
jnp
push
shrl
popa
leave
lret
and
pushl
sub
mulb
int
dec
push
loopne
aad
mov
movsl
lea
aaa
xor
repz
jmp
loope
mov
mov
push
push
lcall
pusha
jg
and
out
cwtl
add
xchg
sub
incl
dec
enter
je
jbe
inc
inc
cmpsb
iret
outsb
rcll
mov
mov
lret
scas
mov
shll
pop
mov
push
cmp
dec
pusha
adc
ljmp
jle
sahf
arpl
add
ret
pop
test
or
adc
scas
sub
inc
icebp
decb
iret
pop
enter
pushl
xchg
or
mov
jbe
loop
ljmp
jmp
lcall
jle
dec
or
cmp
fs
or
jecxz
test
leave
pushl
incl
cli
loopne
push
incb
loope
ja
jns
adc
fcoml
lahf
jl
movsb
mov
mov
xchg
out
daa
test
test
cmp
mov
jmp
std
shr
fsubr
ljmp
push
inc
lahf
jnp
testl
jae
dec
sub
xor
inc
inc
push
test
movsl
movsl
lock
into
sbb
dec
call
repnz
decl
lret
testb
sbb
in
mov
mulb
aad
adc
das
fwait
cld
popf
jle
hlt
lcall
lcall
push
loopne
mov
loop
mov
or
mov
add
call
or
insl
mov
push
testb
mov
pop
push
push
std
sub
xchg
dec
add
pop
cmpb
js
and
jg
mov
jp
loop
fmul
mov
mov
es
add
ja
ljmp
fcomps
repnz
test
out
aad
dec
sar
jne
jb
call
test
xor
mov
or
lcall
mov
in
lods
fidivrs
pushf
push
sbb
ja
addr16
mov
aas
xchg
push
xchg
outsb
lock
fidivs
aad
pop
cmp
mov
clc
cmp
push
pop
shlb
sub
aad
and
enter
decl
pop
jnp
inc
cmpsl
je
cli
jecxz
jne
xchg
pop
mov
push
lods
sub
inc
call
sbb
movsl
pop
lods
rorb
int
inc
int
sub
cmp
cmp
push
in
scas
cmpsb
lcall
inc
cmc
rol
mov
jmp
inc
jp
mov
loop
outsl
mov
bound
stc
inc
jge
or
mov
xchg
mov
insl
faddl
xchg
push
sbb
mov
cwtl
dec
in
inc
jecxz
mov
push
imul
int3
xor
lcall
ss
lea
clc
shrl
sahf
in
xchg
dec
mov
fldcw
push
scas
pop
pop
lods
and
decl
fisttpl
add
dec
sarl
lahf
xor
pop
movsb
push
bound
mulb
stc
mov
lahf
insb
xchg
nop
pop
push
movsl
scas
pop
xchg
adc
xor
loopne
clc
into
mov
jno
clc
pushl
mov
fnstenv
push
popf
ss
jle
pop
rcll
leave
cmpsb
call
insb
push
cs
mov
rolb
inc
pusha
or
xchg
sbb
pop
mov
gs
inc
dec
les
inc
je
jecxz
ret
add
inc
dec
fwait
out
lahf
jecxz
pop
call
repz
pop
pop
sub
std
jmp
roll
mov
inc
aad
jge
sbb
mov
mov
jae
stos
jbe
insb
push
sub
test
jae
stc
mov
decl
movsb
mov
add
inc
in
iret
dec
leave
test
dec
or
and
call
dec
jno
jae
movsl
mov
inc
cmpsb
pop
push
and
mov
pop
fisubrl
mov
pushl
pop
sbb
pop
push
xchg
popa
cli
lahf
jl,pt
out
push
push
stc
mov
mov
aaa
in
mov
cmp
cmp
fadds
aas
loop
fdivrs
ret
iret
loop
mov
sar
cs
ljmp
test
loopne
add
stos
inc
bound
pop
xor
xchg
or
dec
stos
push
cld
call
incb
imul
dec
jmp
mov
jnp
jne
test
pop
add
mov
incl
clc
xor
cmpb
enter
incl
stos
or
out
in
and
jge
rol
dec
inc
ret
es
push
call
pop
and
add
out
mov
push
pop
push
les
test
adc
nop
inc
jp
mov
xchg
dec
pushf
or
pop
xor
lret
dec
ret
sub
call
aas
add
dec
das
iret
push
fwait
push
imul
jno
in
or
jmp
lds
outsl
rorb
add
imul
imul
push
push
xchg
fnstcw
clc
ljmp
pop
sbb
jns
jge
and
out
jae
movsl
xchg
cli
ret
mov
cltd
lret
jns
ljmp
pusha
out
jbe
into
js
cmp
popf
jb
cli
cwtl
jecxz
jle
jmp
shl
pushl
sbb
mov
pop
pop
stos
rol
inc
jle
movsl
push
int3
adc
sub
push
or
out
rcr
adc
data16
mov
popf
or
lcall
push
add
stos
pop
idivl
jg
lcall
sub
stc
cmpsb
push
xor
outsb
repnz
jge
mov
out
jmp
call
cli
movsb
push
mov
jo
cmp
adc
jmp
mov
sbb
incl
sar
push
or
mov
mov
and
sbb
and
mov
mov
sub
jns
pop
in
dec
out
cmc
stos
int
add
or
mov
ljmp
in
je
pop
fadds
divl
mov
mov
xchg
clc
push
roll
sub
or
sub
out
clc
lcall
int
or
cld
mov
pop
addr16
scas
xchg
jno
rorl
xchg
pop
add
aas
mov
lods
mov
sub
ret
scas
arpl
jne
push
mov
or
ffreep
or
mov
xchg
pop
repnz
test
inc
lock
in
mov
ficoml
rorl
clc
incl
add
bound
aaa
pop
out
cld
mov
cld
nop
mov
dec
dec
mov
lea
icebp
mov
lock
adc
lcall
sub
aad
jno
test
bound
mov
call
mov
aas
dec
fistpl
gs
mov
xchg
ja
mov
jg
jmp
daa
cmp
push
pop
or
jo
out
ret
lcall
sbb
xchg
pop
cmp
sub
bound
stc
mov
inc
sub
push
call
out
dec
ss
fstpt
das
pushf
das
je
fwait
xchg
ljmp
stos
push
minps
call
mov
mov
adc
in
mov
imul
push
xor
mov
add
jns
mov
and
adc
leave
xor
sahf
and
test
jns
mov
mov
ret
mov
popf
dec
scas
mov
pop
jb
jecxz
xchg
ffreep
mov
jg
push
dec
loopne
xor
cmp
leave
popf
and
cmpsb
pop
aas
mov
cmpsb
fstl
lcall
mov
mov
mov
push
sub
hlt
pushf
push
mov
mov
pop
repnz
loopne
mov
cltd
mov
inc
or
scas
nop
and
clc
push
or
cmp
sbb
mov
fcoms
lock
popa
mov
mov
incl
mov
call
or
pop
in
jae
and
dec
sti
add
inc
repnz
lcall
js
sub
xor
jl
lahf
aas
cmc
dec
cltd
aam
adc
or
dec
sub
cmp
jmp
movsb
fcomi
shl
gs
jb
ret
mov
mov
inc
or
sub
call
mov
sub
sbb
out
push
add
or
push
ret
push
pushl
and
mov
aad
data16
rcr
inc
inc
mov
mov
lcall
mov
test
cwtl
imull
mov
or
out
push
inc
aam
in
mov
pushl
jb
or
cmp
subl
jmp
mov
cli
mov
lods
cmp
xchg
and
nop
jecxz
jno
and
decl
divb
or
jecxz
cltd
jb
leave
push
and
adc
fstpl
ret
ss
imul
inc
call
pop
call
inc
or
jne
hlt
imul
push
inc
jns
out
in
out
adc
cmp
leave
mov
sbb
outsb
sub
add
insl
inc
xchg
repz
lds
mov
lcall
and
sbb
aad
jae
sbb
mov
mov
push
incl
dec
push
test
leave
jmp
sbb
inc
mov
add
jg
ljmp
xchg
insb
push
lret
scas
inc
or
stos
push
fdivrp
jg
nop
jnp
sbb
inc
movsb
xchg
imul
cmc
push
dec
ljmp
sti
jnp
and
notl
jae
fisubrs
outsb
xlat
ss
fcmovu
push
data16
incl
jp
xorl
add
cmp
pop
std
scas
fcompl
xor
cmc
pop
xchg
hlt
pusha
loope
in
ja
incl
out
adc
inc
mov
pop
clc
gs
ljmp
jle
repz
popa
loope
incl
mov
es
insb
scas
and
subb
fcmovbe
cmc
xchg
mov
lea
sbb
or
cwtl
mov
pop
sub
in
or
push
inc
ret
push
outsb
repnz
scas
nop
mov
pop
shrb
adc
inc
shrl
cld
fidivs
mov
frstor
and
incl
inc
je
into
push
movsl
stc
inc
fstps
dec
jnp
sub
sbb
fidivl
imul
faddp
mov
je
jge
cmpl
pop
xchg
mov
movb
pop
ljmp
decl
push
rclb
jmp
jo
shlb
sbb
pop
adc
mov
ljmp
push
inc
pop
cs
mov
and
out
jne
adc
push
push
jmp
xchg
or
push
lds
outsb
or
ja
sbb
inc
lods
pop
scas
out
adc
incl
rcl
ret
jge
loop
in
jo
daa
pop
cmc
and
ljmp
pop
jg
pop
pop
test
mov
insb
pop
scas
std
test
ljmp
inc
dec
pushf
pop
mov
out
mov
dec
xchg
mov
lea
test
jg
fwait
adc
icebp
cmp
in
xor
xor
inc
xchg
cmpb
xchg
mov
xlat
lcall
cmp
in
jecxz
pusha
mov
pushl
pushl
push
test
mov
out
pop
int3
jno
dec
mov
jae
add
dec
adc
sbb
inc
mov
iret
inc
lcall
popf
ja
push
jae
shlb
popa
cmpsl
jb
decl
es
test
and
mov
in
add
sbb
and
mov
lds
decl
sbb
mov
pushf
fnsave
jo
push
xchg
mov
lcall
in
loop
leave
xchg
jmp
pop
fmull
jle
icebp
sbb
pop
push
cmc
cmp
icebp
repnz
insb
ja
in
ljmp
xlat
addr16
jmp
lock
sub
jae
insl
bound
inc
xchg
es
ljmp
mov
iret
std
sbb
cmpsl
and
lods
xlat
les
loop
mov
cmc
sbb
sarb
incl
dec
scas
decb
das
add
inc
mov
sub
lods
scas
pop
ja
fstps
cmpsl
decl
rcrb
push
aaa
dec
mov
push
cmp
add
lahf
into
sub
mov
sbb
shrb
mov
mov
les
mov
add
rcll
hlt
in
pop
rcrb
pushl
pushf
jne
sbb
mull
pop
xchg
push
push
in
das
mov
int3
or
pop
test
mov
cmpb
sub
xchg
out
mov
gs
std
cmp
dec
pop
pop
pop
xor
les
decl
dec
or
mov
pop
popf
xchg
push
mov
sub
repz
push
or
enter
icebp
je
jno
stos
int
inc
and
xor
or
inc
and
push
jge
ret
ljmp
cmpsl
nop
and
mov
mov
xor
inc
stos
rcrl
dec
inc
fwait
or
enter
js
pop
fidivrs
mov
daa
movsb
cmp
negb
cmp
pop
jb,pt
loope
filds
arpl
pop
lds
int3
das
xor
ret
mov
inc
out
es
jecxz
in
iret
add
fimull
push
shll
sahf
mov
incl
add
pop
iret
testl
xchg
arpl
xchg
movsb
stos
dec
nop
fisubrs
call
xchg
mov
xchg
adc
inc
cmp
cmpb
out
out
mov
add
mov
divb
sti
ret
mov
sub
xor
test
outsb
call
add
xchg
or
adc
ret
dec
roll
nop
fisttpll
xchg
sub
mov
xchg
xor
int3
push
xchg
aam
cmp
adc
in
xlat
or
push
rcr
in
adc
call
jnp
dec
into
adc
aad
shrl
or
cmpb
pop
sub
xor
call
aas
mov
loope
iret
push
call
push
lcall
jg
inc
test
mov
dec
jecxz
into
cltd
jmp
clc
mov
fstpl
sub
add
pushf
or
ja
cld
fbstp
mov
dec
das
fcomp
pop
fsubl
dec
push
sbb
mov
jmp
shrl
cltd
cwtl
loopne
jmp
stc
nop
cli
and
das
inc
jnp
adc
ret
mov
jbe
icebp
mov
push
mov
jno
pusha
scas
mov
fdivl
xchg
cmpsb
and
add
imul
jmp
adc
in
adc
and
or
not
imul
addr16
pop
addr16
sub
inc
loop
mov
push
inc
mov
mov
sbb
test
mov
lods
std
std
shll
arpl
dec
idivl
cmpl
mov
cmp
call
mov
fdivrl
and
pop
repnz
js
testb
adc
in
negb
aam
adc
cld
xchg
push
mov
push
xchg
into
imul
out
push
pop
mov
loop
icebp
cld
mov
mov
inc
sub
fcoml
xor
test
data16
mov
xor
jg
fs
push
pop
adc
cld
sbb
sbb
inc
cli
js
shll
dec
push
mov
stos
sarb
call
pusha
mov
fistpll
popa
scas
cmp
mov
jge
dec
pusha
mulb
mov
call
jmp
push
je
icebp
icebp
into
mov
pop
inc
enter
xchg
scas
adc
fidivl
in
mov
leave
orl
or
incl
jnp
in
adc
cmp
in
mov
cwtl
push
xchg
xor
xchg
mov
dec
mov
mov
data16
fimuls
movsb
inc
push
mov
lahf
cld
stos
push
dec
mov
out
outsb
lcall
push
nop
rcll
push
add
stos
ss
iret
cmp
cmp
lcall
inc
lea
ret
mov
inc
inc
cmc
inc
push
pushf
ud0
pop
push
jbe
mov
imul
add
js
xor
call
outsl
mov
lret
xchg
ja
mov
pop
mov
mov
xchg
in
sbb
mov
xchg
addb
insl
push
roll
mov
scas
xor
pushf
xor
ss
aaa
cld
call
mov
jae
movsb
inc
andl
adc
xlat
lods
push
lcall
incl
divl
sub
push
stos
sub
mov
incl
js
add
ja
inc
addr16
mov
push
scas
inc
jne
jl
sub
mov
mov
push
arpl
gs
in
popf
pop
adc
adc
jnp
test
int3
jp
scas
mov
push
xchg
jmp
mov
xor
xchg
cld
test
mov
call
jge
jl
add
test
push
push
cmp
and
xor
addb
call
decl
xchg
mov
xchg
lcall
mov
cmpsb
xlat
mov
lods
jns
mov
mov
aas
pushf
cmpsb
jmp
cmp
mov
cmp
push
pop
xchg
cmpsb
repnz
and
stc
mov
ljmp
repz
das
dec
or
mov
incl
cmpsb
inc
xchg
mov
pop
dec
gs
push
js
mov
push
push
pop
les
imul
mov
sbb
not
mov
xor
jl
jne
cltd
pushf
xchg
mov
jo
call
lcall
aam
mov
dec
unpckhps
xchg
iret
inc
stc
cltd
mov
mov
std
cmp
pushl
mov
xchg
and
outsl
or
pusha
shll
cmpsl
sbb
add
jmp
lcall
popa
test
cmp
inc
jge
lahf
adc
pop
jle
jns
push
cmp
lods
incl
test
cmp
jmp
mov
pop
pop
add
daa
or
in
or
mov
jo
ljmp
mov
or
call
or
shl
jb
ljmp
test
xchg
xor
add
out
mov
pop
test
je
jnp
loope
sqrtss
lcall
cmpsb
mov
test
pushf
or
push
ds
loopne
test
sub
fisttpl
inc
jns
inc
push
or
xchg
cli
data16
pop
xlat
gs
add
jmp
repnz
pop
jle
pop
sub
lods
or
sbb
mov
mov
pop
xchg
inc
out
stos
pop
xchg
shr
mov
inc
loopne
adc
loopne
popf
sub
incl
sub
sahf
xchg
or
rcr
stos
inc
xchg
repz
aam
push
cmp
jle
decl
jb
stos
mov
jnp
jns
in
push
add
sub
jge
xor
mov
ljmp
fwait
jmp
sub
insl
push
xchg
lods
js
jp
in
daa
das
icebp
fmul
sar
adc
xor
popf
cld
cmp
pop
dec
roll
loopne
cltd
mov
sub
test
daa
inc
adc
clc
das
fsubl
push
hlt
insl
xorb
mov
inc
loop
cmpsl
pushf
stos
inc
gs
ljmp
jns
mov
dec
fptan
lret
xlat
mov
lock
pop
sbb
fidivrs
jne
adc
lods
inc
cli
push
pop
iret
les
adc
rolb
push
adc
decl
jl
mov
sbb
pop
lods
push
or
shl
imul
lcall
frstor
adc
adc
das
push
fisttpl
jmp
call
mov
fstps
inc
push
cmpsl
cmpsl
or
aam
cmpsb
xor
push
ljmp
mov
push
iret
jl
push
xchg
pop
jmp
test
inc
mov
je
loopne
and
and
cvtdq2ps
incl
mov
icebp
scas
xchg
mov
push
out
push
stos
push
mov
push
fidivrl
cmp
or
push
in
insl
es
pop
stc
add
lahf
sbbl
add
lcall
sub
lret
xchg
sbb
mov
cmp
cmp
adc
pop
movsb
xchg
decl
cmp
jge
nop
lock
jl
jnp
mov
or
pop
push
or
cmc
xchg
xor
mov
decl
jo
push
clc
fucomip
xor
dec
xlat
dec
daa
cmp
or
sbb
in
jmp
rolb
push
jne
insb
add
and
jns
enter
or
mov
xor
lcall
push
xchg
clflush
pop
popf
push
mov
outsb
xchg
out
adc
pushl
mov
je
repnz
jmp
es
mov
incl
mov
add
movsb
add
into
movsb
insl
fs
ror
push
fdivrp
pushl
xchg
adc
dec
je
mov
xchg
xor
lcall
iret
sti
lea
cltd
sahf
fs
jcxz
pop
sbb
test
call
scas
ljmp
mov
mov
imul
xor
xchg
push
lds
push
pushl
mov
test
in
mov
lods
nop
cmc
pop
jnp
jmp
cmp
lahf
rol
fwait
push
mov
lock
ljmp
and
in
pop
xchg
xchg
sbb
cmpsl
sub
pop
cltd
and
std
call
ljmp
jo
pop
pop
gs
out
loope
shrl
enter
pop
jg
pop
repnz
xor
sarb
cwtl
cmp
aas
cld
push
repz
decl
popa
popa
lcall
lock
mov
mov
test
loopne
push
push
scas
sub
adc
insb
scas
mov
cltd
jecxz
push
scas
js
movsb
xor
push
adc
xor
lcall
jb
pushf
xor
int3
dec
jmp
rcrb
mov
in
lcall
aad
cmp
push
lret
fwait
in
mov
pop
ljmp
jmp
int3
lcall
add
add
xor
or
mov
inc
sbb
lcall
insb
mov
dec
add
outsl
lcall
jo
pushf
aam
mov
out
scas
xor
imul
roll
push
test
neg
int
jge
mov
jecxz
lahf
icebp
hlt
test
stos
push
sbb
loop
inc
sbb
insl
push
inc
and
mov
sbb
pop
xchg
push
or
sbb
fidivl
std
shrl
adc
mov
xor
mov
fimull
aaa
stc
mov
out
das
fidivrl
mov
arpl
aad
dec
aaa
arpl
leave
jns
in
cmp
jne
test
dec
mov
jb
inc
push
rcrb
sbb
decl
mov
mov
stc
dec
js
add
movsl
xlat
adc
xchg
lods
enter
ljmp
ror
mov
fisubl
mov
lret
cmp
scas
push
xchg
sub
sub
bound
test
pushl
nop
add
data16
jl
int
fnstenv
xchg
pusha
ret
mov
lret
jmp
or
xchg
inc
hlt
sub
dec
pop
xchg
jg
fs
addr16
and
mov
fiaddl
inc
cli
lcall
push
stos
in
repz
mov
std
test
dec
shll
sbb
push
pop
fstpt
rol
jecxz
pop
or
xorl
jb
arpl
lcall
call
inc
outsl
cmp
inc
pop
jg
xor
adc
cmp
pop
lcall
repz
psubusb
lret
jne
dec
lock
xor
pusha
and
dec
aam
sbb
cmp
inc
pop
dec
push
lea
repnz
fs
jmp
jmp
icebp
lret
pop
shr
push
aaa
or
jb
incb
outsl
fdiv
jmp
jmp
jae
ret
xor
push
add
sub
cmc
sar
call
imul
or
or
mov
stos
mov
adc
jg
clc
addb
sbb
into
or
xor
lods
and
addb
and
jg
add
rcll
loopne
adc
xchg
xor
fcoml
sub
cmp
incl
test
out
adc
movsb
inc
jp
xor
mov
rcrb
aaa
es
pushl
js
or
mov
xchg
das
add
fcoml
rorb
push
mov
xor
test
in
pushl
fs
dec
mov
xchg
or
fnstcw
jp
jno
jbe
jmp
xlat
dec
movsl
test
sbb
jmp
bound
mov
jl
sti
sub
adc
pop
jnp
xor
enter
stc
push
scas
daa
push
adc
pop
jnp
cmp
arpl
cmc
pop
sub
jbe
test
push
push
aaa
das
outsl
add
push
fwait
mov
jnp
das
cli
inc
lss
ret
and
mov
ds
mov
mov
xchg
sbb
mov
stos
daa
jno
fmull
rcl
fs
pop
jmp
not
jg
pop
loopne
or
pushf
jnp
mov
dec
sub
xor
xor
xor
push
push
into
xor
and
rcll
enter
enter
mov
scas
xchg
jb
lret
cmp
pushl
in
cmc
push
stos
mov
stc
xchg
loopne
pop
sub
stos
sbb
cmp
fnstenv
dec
inc
mov
pushl
inc
cs
fists
roll
cli
pusha
pop
imul
into
dec
mov
sahf
sub
pop
xchg
dec
pop
mov
sarl
dec
adc
cmp
cmp
jg
call
mov
shll
mov
cmp
adc
stos
in
push
or
mov
sti
pop
push
dec
stc
inc
test
inc
xchg
rsm
and
cmpb
in
inc
scas
stos
mov
add
leave
mov
cmpsl
fbld
xor
mov
imul
subl
dec
pushf
pushl
cmp
xorl
imul
cltd
or
adc
outsb
in
lcall
mov
jne
sti
mov
add
stos
push
inc
mov
and
pusha
add
mov
insl
call
and
jo
jmp
clc
popa
and
fcmovnu
ljmp
jmp
ret
iret
or
fldenv
xchg
xor
xor
xchg
push
sarl
jne
jae
push
cltd
or
pop
mov
mov
add
js
adc
push
xor
cli
scas
cli
pop
icebp
out
xchg
mov
cwtl
subb
pushf
jecxz
icebp
mov
rorl
fcoml
xor
call
mov
ljmp
aaa
pop
repz
icebp
inc
sub
and
out
lret
xlat
ret
ja
sub
in
call
mov
sbb
adc
push
loop
imul
scas
icebp
jbe
push
es
add
cmp
shll
bound
out
push
out
sti
ljmp
add
add
lahf
in
xchg
xor
mov
lds
js
nop
test
int
add
call
pop
rcll
fcomps
lahf
lock
add
cmp
decl
sbb
and
pop
cmp
jae
cmp
call
mov
enter
bt
mov
stc
sbb
push
mov
decl
mov
adc
jbe
sarl
jl
push
dec
insb
rcrl
add
jmp
jecxz
sarb
icebp
jmp
loopne
sub
ss
cmc
lcall
sbb
jl
incl
js
pop
cmp
mov
and
mov
std
in
mov
push
fldt
jg
call
or
pop
sahf
xor
xor
je
jmp
test
idiv
jmp
in
faddl
sub
sahf
out
inc
mul
xchg
lcall
jno
xor
rcll
adc
add
push
leave
xor
sub
mov
jge
jl
push
sbb
shll
jmp
pop
or
dec
decl
lock
mov
push
sbb
lea
push
in
dec
mov
ljmp
xor
xor
cld
dec
lahf
out
ret
pop
adc
loope
mov
mov
sub
mov
inc
mov
push
sub
mov
fstps
mov
icebp
inc
mov
data16
lock
jne
call
push
sub
loopne
pop
jns
das
sar
xchg
mov
push
insl
imul
gs
je
es
call
inc
xchg
lock
mov
push
imul
sarb
jo
stos
jle
imul
in
lock
mov
inc
fwait
xchg
xor
into
sbb
mov
adc
pop
ja
call
adc
ja
out
enter
add
cmp
lret
sub
flds
sbb
or
mov
xchg
cmp
push
faddl
nop
push
test
in
mov
cmpsl
orl
rcl
fistps
xor
push
hlt
mov
sar
call
out
fisttpll
and
or
inc
and
inc
push
mov
pop
call
aas
mov
mov
sbb
cs
int
mov
dec
std
inc
sbb
nop
call
or
mov
outsb
jmp
popa
add
repnz
arpl
es
cmp
and
mov
inc
hlt
ljmp
fildll
or
mov
in
add
js
jnp
xchg
mov
filds
fbstp
rcrb
loop
mov
push
mov
jno
loope
and
insb
je
outsb
movsl
int
ljmp
xchg
jecxz
mov
push
push
and
push
sub
jecxz
and
clc
adc
lds
add
incl
push
daa
pusha
push
dec
ss
mov
xchg
scas
cmp
jle
std
mov
pop
jmp
lea
xchg
sahf
xor
cmpsb
or
or
xorb
cltd
mov
arpl
call
int3
mov
dec
rcr
repz
fsubp
dec
aam
mov
fs
mov
stos
inc
dec
or
jmp
fwait
inc
pop
mov
out
pop
out
loop
lret
mov
fisttps
dec
pusha
xchg
mov
scas
lock
xchg
jle
mov
push
mov
xchg
fwait
sbb
repz
scas
fwait
adc
mov
call
dec
jb
xor
inc
and
mov
push
inc
xor
mov
push
shll
scas
cmc
xchg
shl
scas
jb
dec
andl
inc
adc
adcb
dec
push
xlat
shrl
sbb
adc
mov
pop
decl
cmp
sbb
das
mov
cmp
push
pop
mov
sar
ljmp
cmp
push
xor
cli
scas
movsl
out
iret
cmp
inc
sbb
mov
lcall
sbb
hlt
add
xorb
repz
pop
sbb
xchg
jo
push
clc
fcom
push
movsl
and
adcl
mov
jns
in
mov
inc
inc
jae
jmp
jp
pop
popa
push
cmp
jmp
hlt
popf
mov
rcrb
rcrb
lds
fwait
mov
js
rol
lcall
or
jp
mov
inc
and
adc
gs
mov
jmp
js
mov
mov
cs
and
sarl
jp
pop
iret
lahf
pop
loop
in
mov
cmc
shll
sti
mov
aam
or
add
enter
lcall
jmp
inc
ficoms
imul
push
push
addr16
xchg
or
cmpsb
out
ljmp
or
mov
test
push
sub
add
or
xchg
xchg
push
pushf
mov
jne
dec
sti
rcrl
xchg
fistpl
sub
adc
cli
decl
mov
gs
mov
adc
pop
cmc
call
cmp
fidivl
arpl
insl
popf
adcb
and
or
inc
inc
aaa
mov
push
lea
sbb
daa
mov
icebp
xchg
loope
mov
fmul
jbe
incl
lock
dec
rcrl
xor
imul
inc
nop
cmpsl
jo
jne
roll
ljmp
test
aam
mov
mov
cmpsl
jae
inc
dec
mov
or
lock
sub
ljmp
push
push
shl
mov
clc
sub
and
mov
lret
lcall
insl
jl
aaa
pop
jae
cmpsb
push
int
mov
lcall
cmpsb
aad
cltd
int3
xchg
push
mov
cld
rdpmc
jle
add
sub
ret
mov
fcmovnbe
mov
out
push
xchg
and
jp
jns
mov
out
push
out
jg
js
or
in
movsl
pushf
push
add
daa
inc
inc
xor
loopne
mov
incl
push
sub
mov
and
cmp
inc
sti
orps
shr
xchg
rcl
sub
stc
mov
adc
jns
sbb
sbb
out
cli
sbbl
out
inc
stos
push
clc
into
inc
dec
mov
dec
cwtl
clc
jmp
mov
ss
add
idiv
jmp
jmp
adc
xor
push
popa
cmp
je
push
jbe
inc
mov
jmp
or
cmc
outsl
cltd
dec
lea
pop
cmc
push
bound
xor
jp
test
sbb
aam
icebp
jg
or
adc
xor
dec
ljmp
mov
xor
aaa
fsubl
pushf
adc
pop
xor
aas
cmpsl
sub
push
or
add
call
outsb
stos
dec
fwait
sbb
aaa
imul
push
lret
xlat
movsl
dec
mov
ja
ljmp
out
repz
mov
pop
inc
mov
push
lret
sbb
sbb
cmpsb
jp,pn
outsl
add
mov
push
iret
add
je
inc
mov
jg
nop
xchg
ja
push
mov
push
push
push
xor
repnz
lds
push
je
stc
dec
sub
and
int
int3
or
pop
in
xchg
and
hlt
jae
decl
cmc
sub
xor
push
and
inc
cwtl
mov
sub
fists
sbb
xchg
push
or
in
in
fisubrs
pop
sbb
rclb
lock
incl
inc
dec
movsl
xor
adc
xor
cmpsb
jne
fistpl
into
arpl
decl
mov
or
xchg
test
mov
sahf
sti
incb
pop
sub
into
jne
add
ljmp
jg
pop
loopne
outsb
cmp
adcl
clc
enter
dec
mov
stos
std
push
bound
sbb
mov
adc
movsl
cmp
and
daa
inc
fists
in
arpl
push
pop
mov
ss
sub
xchg
ret
mov
push
insl
cld
dec
repz
dec
scas
fldcw
jmp
or
stos
fidivs
ljmp
mov
outsl
push
push
mov
notl
movsb
sbb
loop
lahf
cmp
sbb
jecxz
fldt
scas
enter
adc
push
mov
test
out
pop
dec
scas
loopne
loopne
sbb
aad
mov
repnz
out
ret
jp
pop
inc
bound
cmp
push
mov
ljmp
ja
and
push
fldz
dec
out
fsubrl
mov
fistpl
iret
inc
mov
shll
mov
outsl
stos
and
dec
add
in
test
fdivp
aam
mov
clc
add
cmp
idivb
pop
or
shlb
frstor
outsb
add
jne
jo
roll
fmulp
insb
out
vpcmpgtw
adc
push
pop
lds
call
or
sbb
shlb
cltd
lds
push
out
nop
xor
xor
fs
ljmp
inc
add
jle
popf
bound
jp
inc
mov
add
call
call
lods
xchg
cmp
pushf
shll
dec
setb
fdivl
adc
cmp
call
cld
lret
push
scas
sbb
mov
mov
jg
mov
test
cmpsl
xchg
push
push
popa
pop
arpl
add
or
push
mov
cs
sahf
ret
mov
dec
sti
jle
sahf
push
imul
jecxz
push
cwtl
icebp
fwait
mov
push
cmpsb
test
jecxz
xchg
decl
inc
outsb
aad
lea
vphaddubq
sub
adc
scas
sbb
incl
mov
add
pop
pop
sbb
lods
out
rorb
orb
loopne
std
ffree
jb
xlat
mov
aad
imul
sbb
or
xchg
pushl
pop
xchg
add
and
inc
je
lret
movsb
cmp
cs
out
je
ljmp
insl
or
bound
test
xchg
adc
jns
dec
push
ljmp
out
lret
or
or
inc
push
pop
mov
ljmp
sbb
insl
jae
mov
push
movsb
shrl
or
stc
xor
ja
inc
mov
adc
pushl
jge
leave
fsub
enterw
add
mov
cmp
sbb
push
cmc
test
xor
stos
arpl
adc
xor
jmp
orl
cld
mov
push
stc
jns
and
jl
xor
jns
hlt
jns
mov
jge
mov
cmpsb
sti
out
adc
sbb
add
lods
les
out
fcomip
sbb
sub
hlt
inc
nop
jns
hlt
std
dec
jnp
gs
mov
pushl
shlb
das
test
cltd
insb
push
std
inc
aad
push
mov
int3
inc
add
mov
das
add
shrl
mov
mulb
adc
pushl
pop
adc
pop
enter
sub
test
xor
gs
jg
pushl
add
shr
mov
cltd
cmp
aaa
out
rcl
pop
xor
push
lret
cmp
jmp
jp
xor
and
mov
mov
push
push
jle
mov
repz
push
cld
fbstp
or
inc
dec
pop
iret
xor
jg
fnstenv
xchg
out
pushl
subb
sub
rorb
subb
ja
add
inc
add
jl
push
and
lock
call
outsl
call
inc
es
outsb
movsb
inc
roll
xchg
hlt
incl
push
minps
mov
repz
insb
aas
shrl
mov
pop
jno
sahf
mov
push
jl
iret
jnp
dec
testb
fwait
mov
jle
xor
pop
fstpt
pop
mov
decl
and
ret
xor
addb
cmp
push
mov
mov
bts
fistps
mov
xor
add
cmp
loope
mov
leave
sub
lret
xor
push
inc
mov
xchg
sub
inc
push
cmc
stos
aad
add
cmp
xor
jmp
movsb
sub
mov
jo
xchg
xor
aaa
xchg
xor
pop
mov
lcall
pop
cmp
test
cmp
and
mov
aad
dec
repz
faddl
pop
call
adc
mov
push
cs
dec
xchg
inc
sub
andb
movsl
insl
dec
lcall
pop
je
mov
sahf
fs
xlat
push
xlat
ja
dec
adc
add
xor
sbb
push
jg
mov
aam
mov
jns
incb
xor
lds
ljmp
decl
fwait
sbb
push
loopne
repnz
pop
test
push
push
jae
test
rcll
sub
test
jmp
pop
popa
je
xor
aaa
loop
roll
push
cmp
jg
insb
je
mov
jecxz
fwait
mov
jle
xchg
inc
jecxz
jg
into
mov
jb
lahf
push
and
sbb
mov
push
aaa
xlat
mov
pop
or
decl
xor
add
dec
add
pop
mov
lock
push
mov
daa
mov
pushl
jbe
jl
loop
cmp
adc
sbb
mov
push
mov
je
dec
jno
fisttps
adc
sub
sbb
jnp
outsb
push
sbb
es
push
shrb
sub
jno
xor
xchg
std
scas
or
cmpsb
dec
shll
lds
in
dec
test
push
repnz
cwtl
jecxz,pn
jo
sbb
pop
fisubl
xchg
mov
mov
bound
aam
addb
cwtl
mov
push
mov
jmp
pop
adc
imul
mov
jecxz
mov
iret
repnz
icebp
cmp
or
or
lret
fcos
add
call
fidivl
sbb
outsb
call
les
mov
adc
enter
icebp
xchg
mov
lods
scas
dec
add
loop
push
ljmp
cmp
fstps
enter
inc
lret
sbb
or
outsl
daa
inc
into
mov
cs
das
adc
cltd
call
add
icebp
movsb
scas
pop
ffreep
rorb
xchg
jmp
mov
in
sti
int
es
push
xchg
or
lcall
push
test
push
aad
sbb
xchg
jo
jg
jno
adc
sbb
xchg
push
inc
xchg
lcall
into
dec
pop
outsb
lods
out
dec
arpl
lods
adc
call
sub
hlt
jmp
jge
movsl
push
mov
incl
jns
mov
dec
icebp
mov
fwait
jmp
xor
xchg
aas
and
jg
icebp
in
xchg
ficompl
xor
fwait
jns
icebp
call
jo
lods
sahf
jle
push
inc
bound
pop
lret
pop
mov
mov
or
sub
aad
sub
addr16
push
mov
sbb
mov
mov
mov
mov
loop
or
sbb
pop
cli
cmc
mov
loop
incl
ja
mov
xlat
push
mov
pop
lods
insl
jno
daa
loope
or
call
mov
popa
jbe
xchg
sbb
push
ret
das
clc
test
cmp
movsl
js
pop
cld
jmp
loop
je
pop
testl
cmp
scas
sbb
stc
je
jne
sub
stos
mov
mov
pop
fisttps
mov
and
or
incl
test
xor
test
xor
pop
jp
mov
das
push
xlat
jns
pop
test
decl
stc
sub
push
xor
cmp
push
lea
and
pop
out
inc
inc
shrl
fdivr
jmp
orb
sub
movsb
cltd
pop
or
outsb
adcl
pop
stc
lcall
and
addb
inc
inc
lret
push
test
out
cli
ret
call
ds
incl
xchg
movsb
xor
push
pop
daa
pop
fisttpl
in
sbb
add
add
loop
incl
scas
push
or
lcall
jbe
mov
dec
pop
scas
rclb
mov
pushl
addr16
jp
jl
mov
mov
mov
sti
xor
enter
mov
sahf
movsl
pushl
sbb
push
pusha
dec
jp
ret
xchg
fldl
inc
sahf
mov
cmpsb
loopne
insb
lea
repz
pop
mov
ljmp
sub
xchg
pop
call
frstor
adc
incl
int3
dec
pop
sbb
outsb
adc
push
jecxz
sbb
in
xchg
ljmp
rorb
mov
lods
in
push
test
sub
lret
jecxz
push
or
mov
lcall
out
pusha
aaa
inc
pop
fimull
repnz
pop
mov
adc
cld
ljmp
ret
or
cmp
rclb
push
dec
or
stos
inc
scas
inc
outsl
mov
xor
inc
mov
cmpl
sub
in
ljmp
xor
imulb
jge
lahf
inc
cltd
mov
push
mov
popa
sub
pusha
sbb
repz
push
sbb
jae
clc
sub
mov
loope
mov
ds
jmp
cltd
mov
push
lret
and
movsl
sub
ret
sbb
adc
test
lret
incl
dec
loopne
push
in
je
jnp
pop
test
xchg
ds
pop
loop
cmpl
stc
xchg
push
inc
shrl
mov
xlat
xchg
int3
sarb
sbb
adc
mov
jl,pn
ljmp
xor
mov
mov
push
or
xorl
repz
decl
shl
int3
push
mov
rolb
fnsave
jns
pop
add
int
xchg
mov
pushl
gs
out
push
push
int
faddl
dec
sti
and
lret
scas
test
stc
cmp
pop
faddl
cld
lcall
cmc
sbb
sub
imull
in
into
divb
pop
int3
add
icebp
mov
cmpsl
data16
mov
incl
jl
test
mov
test
mov
gs
push
std
sub
incl
pcmpeqd
dec
add
mov
incl
dec
insl
pop
mov
pop
push
cmpsb
loope
pusha
out
adc
imul
ljmp
add
mov
cmpsb
sbb
stc
aas
dec
or
inc
sbb
mov
fnstcw
sub
sbb
jb
les
jge
rclb
rorl
add
jle
or
xchg
xchg
or
inc
mov
ja
or
cmovg
stc
pop
inc
iret
bound
test
andb
mov
lods
dec
adc
jb
cld
push
or
movsb
shrl
and
sub
pushf
hlt
dec
mov
jb
dec
sbb
cmpsb
incl
test
jmp
pop
xor
into
push
lods
lret
daa
xchg
jb
imul
lcall
aad
add
lret
push
pop
test
pop
sbb
mov
mov
int3
in
jge
cmc
jge
jbe
pushl
inc
adc
cmp
ret
call
add
and
cmpsb
inc
sbb
insb
out
cli
call
inc
pop
lcall
dec
pop
cwtl
ljmp
jg
cs
xor
lock
ljmp
aad
xor
sbb
dec
aad
loope
mov
mov
fisttps
test
cmpsb
xorb
or
movsl
ljmp
xchg
mov
xchg
jmp
inc
push
ja
sbb
dec
cld
sahf
lret
mov
adc
pushl
or
xor
mov
cmp
fimuls
addb
inc
or
lcall
push
imul
neg
sbb
or
sbb
mov
ljmp
imull
or
sbb
and
ss
scas
and
mov
sbb
push
xor
mov
call
cmp
lods
mov
push
fnstenv
xor
mov
xor
xor
in
call
jnp
das
lods
aaa
repnz
cmc
push
repz
dec
jp
fld
mov
jmp
cwtl
movsb
inc
cmp
aas
test
cltd
std
pushf
ds
pop
loope
push
mov
pop
inc
std
jp
jl
sbb
inc
inc
fwait
sub
scas
jmp
incl
fwait
pop
inc
pop
inc
insl
xchg
pop
sbb
jmp
and
pushf
xchg
jno
cmpsb
mov
adc
call
jb
xor
inc
scas
movsl
dec
shlb
dec
cli
xchg
repnz
mov
das
addr16
ljmp
iret
or
shlb
out
inc
out
and
fcmovu
ljmp
cmpb
mov
jne
cmp
push
sub
lods
push
bound
pop
inc
aad
xchg
adc
xchg
lods
push
aad
mov
lcall
pop
or
pop
inc
fdivrs
cwtl
aaa
mov
jno
cmp
incb
adc
fisubs
ljmp
gs
pop
adc
and
add
push
push
mov
in
std
mov
lret
ljmp
cmp
clc
fcoml
dec
in
ss
imul
call
std
aas
inc
imull
sbb
fisubrs
inc
ljmp
mov
or
pop
adc
dec
mov
cltd
or
cmp
push
loop
outsl
inc
mov
sbb
and
in
sbb
and
dec
cmpsl
sbb
test
aad
mov
adc
sbb
imul
out
jae
or
xor
in
mov
push
pop
out
jno
mov
push
push
mov
rcrb
nop
jmp
xchg
gs
fsubrs
inc
push
mov
dec
fs
fcomip
dec
fcmovu
inc
or
fsts
mov
shll
or
dec
das
sarb
nop
je
pushf
push
out
xchg
call
or
std
iret
jno
mov
jge
push
stos
mov
lret
jbe
cmp
es
push
mov
ja
cmp
pusha
add
and
das
dec
push
xchg
pushf
sti
les
incl
lock
xchg
insb
mov
lahf
stos
repnz
and
lods
ss
mov
add
mov
mov
jo
popf
mov
inc
lahf
or
mov
cmp
cmp
jg
ljmp
fidivl
insb
fisubs
outsl
insb
xchg
xchg
and
pushl
or
and
inc
fcoml
mov
cwtl
stc
push
hlt
jp
bound
xchg
lret
cmpsl
test
clc
nop
movl
and
push
push
in
in
call
lock
sbb
je
push
mov
into
adc
lret
lods
or
add
adc
ljmp
repnz
add
xor
aas
sbb
add
repz
push
cmpsb
add
iret
ss
ficompl
inc
cltd
int3
or
shlb
jne
test
lahf
sbb
scas
mov
ljmp
fcom
or
jne
cmpsb
or
dec
dec
aad
call
and
test
push
outsl
sub
nop
xchg
and
into
fwait
or
sahf
aad
mov
cli
outsb
adc
dec
adc
push
adc
sbb
sbb
and
rclb
incl
fstpl
out
rol
and
fbstp
popf
fisttpl
and
call
ljmp
lea
sbb
fimull
mov
adc
sarl
incl
inc
mov
lret
movsl
pop
adc
xorb
xlat
notb
dec
adc
jg
sub
dec
adc
pop
mov
stos
out
jg
xlat
test
jo
xor
decl
mov
and
sub
int3
cli
jecxz
mov
mov
push
je
jecxz
pop
cmp
jg
mov
sarb
ret
mov
insl
aad
mov
dec
push
test
mov
cld
mov
cmp
xchg
jb
out
dec
push
orl
sub
mov
mull
dec
int3
adc
ds
mov
adc
xor
pop
ret
sahf
mov
aas
mov
jecxz
ret
sti
inc
jbe
dec
xor
jbe
loope
add
mov
pop
test
xchg
mov
inc
testl
ljmp
cltd
push
xor
mov
movnti
sub
adc
int3
inc
cmp
call
mov
das
loopne
insb
stos
lea
mov
repnz
xor
cmp
push
or
decl
lock
popa
mov
es
inc
cmc
test
daa
or
ljmp
push
les
inc
aas
or
cmp
mov
iret
mov
jg
call
out
sbb
repz
aas
outsb
push
mov
call
sbb
faddp
lahf
dec
clc
fs
push
test
fsub
mov
pop
push
inc
and
or
daa
gs
push
out
fsubl
ss
out
jb
aam
adcl
push
sti
subb
outsl
ds
mov
ljmp
shrl
cmp
fstps
mov
lea
lret
inc
or
jg
test
cmp
xlat
cmp
mov
js
loope
dec
rcl
test
repnz
lcall
xchg
rcl
mov
stos
jle
push
ds
add
dec
iret
lds
sbb
call
lcall
fiadds
mov
xor
fsub
les
inc
mov
incl
pop
lahf
mov
and
jno
sub
je
push
inc
gs
incl
and
leave
enter
movswl
aad
test
out
mov
mov
in
xor
pop
dec
add
inc
inc
rcll
mov
xor
xor
push
mov
les
mov
or
cmpsl
push
in
jp
aam
or
mov
dec
ljmp
dec
push
xchg
dec
cli
cwtl
fwait
loope
inc
pop
inc
bound
fdivrs
iret
lock
fcos
jmp
xor
lods
mov
push
push
shrb
sar
push
xchg
leave
inc
cmpsl
inc
test
xchg
sete
cmpsb
inc
adc
out
xchg
or
cs
mov
arpl
inc
outsl
nop
mov
xor
jns
decb
lods
and
aad
stc
jno
call
cld
push
leave
outsb
data16
mov
neg
cli
pop
in
pop
cltd
jp
daa
push
addb
jmp
int
xchg
jmp
xchg
or
rcr
mov
jl
mov
aas
mov
mov
pusha
xchg
movsl
clc
xor
ljmp
clc
ret
fbld
or
dec
popf
mov
aas
cmp
cmp
cmp
rclb
add
sub
lods
scas
stc
addl
leave
sbb
xor
in
incl
rcll
out
and
inc
mov
clc
stos
jnp
and
aas
shl
in
aam
cmpsl
insl
adc
scas
imul
inc
jbe
cmpsl
aam
jbe
out
adc
or
es
es
mov
push
sbb
rcrl
lcall
cmp
pushl
std
xor
aad
mov
shll
scas
mov
or
daa
push
pop
sbb
push
xchg
jg
rol
sar
dec
mov
mov
addb
mov
fsts
loopne
decl
sarl
pop
call
mov
dec
es
pop
jb
idiv
pushl
mov
js
adc
test
es
aaa
shr
add
and
lcall
mov
xchg
add
pop
stos
mov
push
and
pop
mov
repnz
mov
inc
jmp
jne
add
and
xchg
cltd
pusha
dec
xchg
sub
pop
fdivr
dec
notl
pop
cld
inc
dec
testl
bsr
lods
inc
mov
adc
decl
stc
push
add
sub
xchg
das
xor
mov
jl
inc
sahf
fwait
inc
lret
cmp
in
add
lcall
mov
lret
jbe
cli
mov
cmc
xlat
out
jmp
data16
mov
xor
xchg
orl
daa
xchg
out
sarl
xor
ljmp
cld
repz
jecxz
pop
cmp
rolb
nop
add
xlat
cmpsl
jmp
in
ljmp
mov
nop
out
fldt
jmp
mov
push
push
jg
incb
xor
and
lret
mov
dec
or
mov
arpl
pop
rcrb
or
enter
push
loope
mov
stos
or
pop
outsl
flds
cli
mov
jg
mov
test
jle
dec
lock
push
enter
jnp
and
ror
adc
pop
ljmp
dec
xchg
cmp
inc
or
mov
cmp
cmp
xlat
push
lods
add
mov
fildll
lock
xchg
dec
xor
mov
dec
bound
insl
jmp
ret
repnz
add
repz
sbb
dec
imul
cmp
clc
lret
push
push
push
clc
mov
cmp
pop
scas
or
lds
add
sti
xor
decl
mov
pop
xchg
loopne
sti
movsb
int3
sbb
lret
mov
inc
rorb
test
int
iret
mov
shrb
xchg
push
test
fidivrl
subb
inc
xor
bound
arpl
movsl
inc
cld
adc
les
stos
xchg
call
push
and
mov
movsl
ret
rcl
mov
sub
jmp
pusha
in
rcr
repz
or
rcr
adc
jge
rorl
push
jmp
ret
push
or
aas
jecxz
mov
mov
out
mov
dec
ficoml
ljmp
mov
jl
push
insb
push
xor
test
mov
sahf
add
call
pushf
inc
imul
fisubrs
mov
sub
cmp
adc
jg
cmc
out
movsl
out
inc
xchg
xor
fcmovb
test
and
push
fdivrs
insl
and
mov
ret
stos
adc
inc
pop
push
sbb
stos
mov
sbb
xor
sbb
pop
mov
dec
xlat
inc
movsl
icebp
xor
push
mov
cmpsl
aaa
stos
mov
shlb
clc
push
xchg
mov
adc
mov
leave
jg
fdivr
jmp
aad
inc
or
mov
mov
fsubl
in
cmp
jno
mov
jmp
cwtl
or
ljmp
push
fnstcw
push
ret
fdivl
xor
jne
in
jmp
mov
outsb
out
mov
sbb
jge
fdivs
lock
mov
idivl
call
or
mov
xchg
in
sbb
addb
xchg
int
push
mov
cld
mov
jmp
jb
mov
and
scas
cmpsb
lcall
inc
xadd
dec
fcom
popf
pop
pop
ljmp
insl
lock
inc
push
lods
or
cmp
xor
loopne
jmp
dec
mov
jmp
sub
data16
repnz
adc
hlt
cmp
flds
out
ja
es
out
inc
in
push
addl
lock
push
les
dec
xlat
call
out
lahf
popa
dec
xchg
jnp
jo
mov
sti
es
rorl
je
adc
add
pushl
mov
sbb
imul
les
scas
adc
sub
jl
mov
mov
in
cmp
lret
das
inc
dec
inc
mov
adc
ss
decl
inc
push
pop
rclb
add
scas
dec
or
sub
push
jp
sbb
test
std
push
jmp
mov
aam
add
adc
std
lcall
mov
jne
subb
jg
jg
xchg
push
mov
enter
js
cli
sub
dec
add
dec
imul
mov
in
in
inc
cmpsl
xchg
xor
mov
ljmp
sar
ljmp
add
dec
adc
stos
notb
jne
jmp
sarb
add
jge
push
js
adc
call
lods
cltd
mov
mov
loop
mov
test
lods
int
cld
fs
outsb
aaa
bound
cmp
dec
insl
pop
mov
in
xchg
rcr
add
lods
dec
insl
lcall
pop
jno
sar
pushl
mov
add
pop
add
test
ficompl
fdivrs
lcall
jmp
and
adc
movsb
push
push
adc
jae
xor
adc
jmp
call
or
mov
lods
mov
dec
mov
insb
negl
mov
loope
sub
pushl
repz
dec
xchg
out
jbe
mov
insl
pop
jns
pop
jmp
lcall
int
loopne
push
pushl
mov
jmp
ja
or
sub
cld
mov
es
push
fistpll
fs
lcall
std
stos
xor
pop
xor
insb
mov
sbb
mov
aad
aaa
push
mov
mov
loope
test
mov
clc
hlt
decl
adc
jo
inc
out
int
xor
fwait
rclb
data16
jg
mov
ds
fbstp
pop
ror
aas
push
push
sub
adc
xchg
lock
jg
mov
aam
or
mov
and
jmp
call
cmpsb
dec
mov
ljmp
xorb
leave
push
loope
mov
xor
clc
dec
decl
adc
nop
into
shll
nop
push
cmp
scas
mov
push
fildl
inc
in
and
decl
or
inc
aaa
push
mov
mov
sub
shl
xchg
lcall
adc
sub
into
add
and
enter
and
pop
aad
sahf
bnd
lock
jecxz
mov
sbb
sti
in
inc
scas
pop
cmp
clc
cmc
jg
xor
test
in
mov
rol
or
mov
pop
push
mov
in
in
incl
sub
iret
inc
out
leave
lcall
push
nop
das
iret
cltd
daa
fldenv
out
mov
imull
in
lea
pop
shll
pop
sbb
jg
outsl
jp
rolb
xor
out
nop
cmpsl
mov
out
xchg
jle
out
xor
ljmp
mov
cmpsl
lret
inc
jae
decl
sub
xrelease
mov
adc
cmpsl
dec
cs
push
push
push
int3
mov
push
cmpsl
sub
cld
lcall
xchg
xchg
hlt
insb
inc
fwait
mov
fs
add
fildll
xchg
data16
imul
cli
lods
mov
xor
dec
fsubrs
mov
jmp
ds
mov
rolb
inc
fnsave
clc
mov
bnd
add
jo
call
mov
or
rcrb
js
clc
fs
leave
daa
sahf
ret
xchg
mov
jg
addr16
mov
push
mov
out
inc
cmp
or
sbb
jle
jo
dec
incl
inc
cmp
push
das
cmc
mov
imul
sbb
pop
cmc
incl
cmp
test
enter
adc
inc
xchg
and
sub
mov
lock
push
std
jo
cmp
pop
aam
cmp
xor
test
std
fisubl
loop
outsl
and
mov
xor
mov
jle
icebp
push
dec
inc
ss
mov
mov
pop
xchg
jae
pop
insb
mov
lods
push
and
pop
inc
imul
fisttps
decl
and
nop
xor
xchg
and
ljmp
xchg
rorl
adc
bound
ret
arpl
cmpsl
mov
addb
out
mov
xchg
lcall
cmp
decl
sub
leave
cwtl
inc
lods
arpl
mov
out
xchg
and
or
xchg
rcrl
pop
jl
add
aaa
jl
out
add
cmp
out
lret
cmp
sbb
sub
pushf
incl
int3
xor
out
inc
pop
ret
gs
dec
push
xchg
mov
loopne
pop
adc
xor
dec
rcll
sbb
push
cmp
mov
jo
icebp
pop
sbb
outsb
mov
xchg
add
psubsw
cmp
in
mov
testl
jno
enter
inc
sbb
popa
es
sti
and
jecxz
jmp
lods
dec
pop
in
and
call
cmpsb
cs
mov
mov
arpl
add
pushf
pusha
dec
pop
and
out
pushf
mov
call
mov
mov
leave
mov
sub
repnz
sahf
and
push
mov
push
decl
adc
ja
popf
jle
adc
cmp
inc
test
pop
cmp
mov
dec
aaa
sbb
shrb
push
inc
ret
loop
scas
xor
add
cmpsb
cmp
lret
lods
add
mov
insl
add
mov
decl
aad
mov
mov
cmp
test
popa
lds
ljmp
lock
ljmp
cmc
imul
ja
cmp
xor
incb
iret
xchg
pusha
ss
push
movsb
push
repz
xchg
test
int3
mov
mov
adc
add
test
call
sub
jecxz
and
or
mov
or
add
dec
sub
dec
pushf
sbb
xchg
pop
adcb
enter
popa
jnp
aad
sbb
jmp
jg
mov
mov
lds
lahf
scas
in
dec
pusha
push
lcall
mov
aaa
arpl
adc
ret
ljmp
add
stos
mov
out
fnstsw
insl
or
sbb
lods
movsb
pop
ss
lds
xor
pop
push
outsl
dec
or
fldcw
mov
out
and
lcall
or
decl
ret
cmp
cmp
xor
ljmp
xor
arpl
stos
das
mov
arpl
lret
mov
les
mov
loop
jle
add
xchg
xchg
cmp
jl
ss
jne
and
clc
ljmp
test
sbb
mov
dec
out
aas
mov
jo
or
push
dec
bound
test
jmp
stos
adc
push
adc
sub
call
jnp
cmp
sub
mov
cli
incl
call
sub
mov
mov
fisubrs
insb
call
inc
int3
out
xor
rolb
xor
scas
negb
incl
sahf
repnz
pop
cmp
idiv
call
and
stos
cld
bound
fwait
pushf
rcrl
aas
neg
mov
jns
call
adc
das
mov
addr16
mov
push
insl
and
inc
loop
es
fldl
pop
lods
pop
cmc
jns
mov
imul
cwtl
test
xchg
js
jne
push
dec
cltd
mov
pusha
aaa
sbb
mov
ret
scas
cmp
mov
test
adc
aas
std
jmp
mov
pop
inc
jno
add
mov
cmp
leave
sub
fdivrl
pushl
xchg
mov
mov
push
in
in
cmp
pop
pop
or
push
test
pop
cmp
and
sarb
mov
or
jne
push
fdiv
jns
fbld
outsb
jl
xlat
icebp
scas
xchg
xor
rcr
cmpsl
pop
mov
ret
mov
popa
inc
push
or
clc
stos
add
nop
ficompl
push
dec
mov
dec
add
jle
neg
add
lods
jo
or
icebp
lahf
pop
pop
sub
cs
call
cld
roll
cltd
clc
hlt
jl
jmp
bound
aad
out
loope
call
pop
movsb
addr16
fistpll
push
lds
adc
cmpsb
or
cmp
jne
dec
or
ljmp
cli
aaa
dec
sbbb
mov
out
fmull
pop
xor
incl
jmp
pop
or
or
mov
loop
mov
jb
cmp
clc
lcall
xor
and
mov
jno
lahf
fdivr
pop
fs
fdivrl
push
addr16
inc
jmp
lcall
hlt
sbb
clc
pop
sbb
movsb
stc
repnz
out
mov
mov
adc
pop
ss
fwait
call
ljmp
mov
subps
xor
out
pop
enter
cli
ljmp
repnz
ud0
adc
push
stos
xor
jl
fs
jmp
aas
add
cwtl
push
sahf
fsts
cmp
mov
add
jmp
je
mov
mov
and
push
mov
pop
loop
imul
cli
addb
rorb
sbb
add
inc
aad
jmp
mov
and
mov
jle
out
add
xor
push
aaa
or
jg
sarb
out
jp
add
aaa
int
sub
mov
jmp
jae
dec
xor
add
pop
or
fcmovbe
outsl
cwtl
or
into
hlt
decl
mov
fs
mov
jb
imul
mov
xor
aam
add
adc
jmp
mov
stc
in
fpatan
jno
das
movsb
cld
and
jl
pusha
mov
sub
enter
mov
mov
pop
adc
nop
jne
test
jae
sub
xor
call
xor
xor
stos
jge
outsl
pop
loope
int
loope
and
jle
iret
jmp
test
cmc
adc
lcall
lahf
or
cmpb
mov
push
cld
pushl
ss
dec
xchg
rorb
mov
or
xchg
sbb
fcoms
pop
dec
decl
jo
pop
xchg
or
adc
test
sub
lcall
scas
dec
aas
jmp
scas
dec
jbe
js
sahf
in
movsl
cwtl
stc
outsl
repnz
cmpsb
xlat
arpl
xchg
adc
decl
xchg
sbb
les
sti
mov
lods
jle
fs
jnp
repz
fildll
xchg
ret
inc
out
lods
fldt
xor
mov
decl
xchg
inc
mov
mov
xchg
loop
stc
ud2
or
in
lret
pop
mov
inc
add
cmp
pushf
jge
repnz
out
xor
jns
cld
xchg
lcall
mov
addr16
icebp
imul
mov
cmpsl
hlt
stos
push
sbb
aaa
adc
lods
sbb
xchg
mov
out
pop
xchg
fistpll
cmp
cmp
rcl
call
shll
pushl
push
fnsave
popl
es
popa
sub
scas
sbb
in
xchg
ret
aam
sbb
cld
fistpl
pop
cmpsl
mov
fiaddl
fcomip
fst
dec
rcll
fs
add
addb
pop
fbstp
les
incl
cmpsb
sbb
xorl
pop
in
in
js
stos
xlat
imul
pushl
mov
js
xchg
lcall
inc
and
mov
pop
push
mov
call
mov
out
out
push
call
or
mov
mov
xchg
adc
sub
ret
fldcw
or
mov
test
jbe
iret
push
insb
iret
insl
cld
arpl
fs
dec
fisubrs
adc
jno
jae
out
das
test
or
inc
insl
cmp
sti
cmc
nop
int3
cmp
pop
add
lcall
ljmp
movl
daa
outsl
in
sahf
stc
lds
cmp
lahf
cmpb
mov
dec
pop
mov
mov
orl
daa
test
mov
jmp
ljmp
mov
and
popf
aad
popf
pop
adc
fwait
scas
pushl
inc
pop
adc
and
imul
fadds
inc
push
int3
xor
mov
dec
jnp
inc
test
inc
test
incl
repz
out
adc
xor
mov
insl
data16
lcall
push
mov
out
inc
add
mov
jbe
or
mov
jbe
ror
lahf
jns
jb
push
gs
rep
cli
lcall
in
and
xchg
sahf
push
jg
push
mov
outsb
loopne
add
popf
mov
ljmp
pop
mov
mov
sbbl
aam
or
add
cs
ljmp
jns
stos
adc
dec
ja
mov
loope
mov
sahf
jbe
lods
clc
jmp
xchg
gs
inc
repz
push
xchg
mov
mov
outsl
out
aad
jg
mov
and
jp
ljmp
fidivrs
fcos
incl
mov
push
leave
arpl
pop
jmp
popa
in
sub
or
xchg
orl
jbe
bound
imul
push
ficoms
or
in
or
sbb
decl
test
repz
mov
outsl
sbbl
mov
xor
scas
cld
shlb
push
jbe
jmp
repz
mov
ret
scas
xchg
mov
scas
xchg
sbb
mov
stos
xchg
imul
mov
iret
jp
addr16
into
fmull
add
xor
xchg
xor
inc
mov
cli
fisttpl
pushl
jae
sub
mov
cwtl
test
jbe
mov
mov
imul
push
jp
ljmp
cmp
inc
sub
pop
mov
xor
jp
adc
scas
mov
out
cmp
ss
ljmp
push
rcrb
cbtw
cmp
cmp
jns
sbb
sbbb
pop
cld
xor
jecxz
das
mov
js
adc
add
pop
pop
aam
mov
cmp
xchg
jne
pusha
add
movsl
loopne
popf
dec
jle
icebp
xlat
cld
int
cld
call
adc
add
add
xchg
icebp
sarb
push
sbb
mov
inc
lcall
jo
pop
sbbb
add
cmp
pushl
cmpsb
cmpsb
cmp
sbb
iret
push
inc
jne
sahf
jl
lcall
sbb
jmp
std
insb
mov
or
sbb
push
aaa
shlb
fwait
out
lcall
or
loope
mov
jo
mull
cmp
mov
jmp
ljmp
add
lods
cmp
out
push
mov
icebp
jg
fisttps
rorb
mov
mov
mov
pushf
in
test
cmp
adc
adc
call
popl
push
aas
adc
inc
mov
out
ljmp
in
lcall
mov
scas
fcomps
add
mov
xchg
mov
xor
inc
addr16
push
addl
fwait
mov
mov
lea
cmc
icebp
xor
push
loope
ljmp
imul
lea
and
and
nop
cltd
mov
jo
std
push
mov
stos
mov
pushl
push
sbb
and
jecxz
idivl
out
adc
adc
decl
movsb
mov
ds
or
cmp
and
push
insl
mov
call
lds
xchg
out
icebp
mov
mov
jnp
imul
lcall
mov
dec
add
daa
inc
inc
loope
inc
jns
pop
addr16
sbb
fadds
test
mov
cmpsb
xchg
sbb
cmpsb
and
pop
outsl
sahf
test
ljmp
outsb
lcall
daa
not
frstor
mov
cmc
sahf
pusha
pop
or
adc
lahf
nop
enter
scas
pusha
aas
lods
enter
and
adc
cli
sti
lds
push
mov
jmp
fistpll
push
je
push
outsb
fwait
jg
mov
es
hlt
clc
jmp
fnstenv
pop
iret
cmp
aas
ljmp
cli
daa
js
into
add
lcall
pop
inc
and
movsl
dec
fimuls
lds
pop
sub
rolb
mov
pushl
add
sub
pop
je
lods
push
pop
lds
adc
mov
pushl
push
and
cli
lods
mov
mov
adc
xchg
xchg
jle
mov
fcom
arpl
addb
lret
dec
push
ja
sti
sbb
lcall
push
push
pop
or
inc
jp
inc
push
push
push
mov
inc
clc
scas
test
test
rcr
pushf
ror
jg
or
std
mov
mov
and
hlt
jmp
cmpsb
mov
daa
je
pop
nop
xchg
xlat
jo
repz
inc
movsl
lret
pop
das
add
shrb
inc
incb
mov
and
lret
out
clc
decl
ds
jle
push
xor
jns
out
inc
nop
inc
into
in
or
mov
outsl
xchg
mov
sub
pop
mov
ljmp
fsubl
mov
scas
and
cmpsl
xchg
cmpsl
mov
cli
mov
arpl
jne
lds
call
mov
aaa
mov
in
mov
jle
push
jae
adc
fcompl
cmp
imul
ljmp
pop
jl
jne
pop
scas
dec
sub
jo
mov
pop
xlat
xchg
lcall
in
push
push
popa
push
aas
cmp
ds
lret
mov
xchg
decl
pop
enter
clc
inc
push
adc
mov
xor
cmp
je
add
mov
inc
loop
mov
insb
dec
clc
outsb
inc
xor
jmp
aad
ja
test
inc
xchg
sbb
ljmp
int
jmp
xchg
or
and
cmpsb
and
test
call
jbe
xchg
aas
cli
dec
xchg
inc
shll
mov
sub
and
in
loope
sbb
inc
jmp
popf
roll
notl
mov
pop
fucomip
or
repz
pushl
lock
and
or
mov
inc
mov
dec
pushf
sub
int3
dec
add
incl
jl
lcall
das
cmp
outsb
dec
and
icebp
nop
sti
jecxz
int
mov
add
rcrl
pusha
mov
inc
xchg
sub
jg
int3
shl
jle
cld
mov
push
or
iret
das
push
or
sbb
loop
sbb
notb
fs
xchg
sub
and
stos
cmp
xor
gs
jl
clc
inc
sub
sub
test
mov
dec
inc
jp
push
xchg
repnz
mov
pop
mov
xchg
divl
aam
jg
lcall
loope
xchg
jp
cs
pop
inc
lock
bound
in
shl
mov
mov
mov
inc
cli
mov
aam
arpl
mov
jmp
cld
inc
aad
bound
push
outsl
mov
stos
and
cmp
xchg
mov
clc
jg
repz
lods
push
mov
lret
adc
cmp
pop
std
roll
jne
jge
fs
mov
adc
and
lods
decl
outsb
mov
or
inc
adc
inc
push
push
out
cmp
pushf
mov
pop
pop
xchg
or
cld
call
ljmp
aad
sti
ret
cmpsb
jge
call
mov
ret
cmp
mov
fwait
cmp
in
ljmp
jmp
push
lcall
mov
push
adc
test
fcomps
jmp
jno
lods
in
lods
out
loope
das
stos
inc
cmp
pop
dec
mov
xor
loopne
repz
leave
xchg
rcrl
push
in
movb
insl
inc
repz
mov
jle
pop
repnz
loope
mov
in
ljmp
dec
js
jecxz
mov
nop
jge
mov
jo
nop
cltd
pushl
cmp
lods
mov
xlat
fstl
dec
lea
sbb
push
xor
inc
dec
sbb
jmp
push
add
int3
cmp
mov
and
repnz
lahf
mov
push
int3
lock
push
fisttpll
in
sbb
jne
mov
jmp
incl
xor
outsl
in
jo
sub
arpl
cmp
ljmp
loop
xor
inc
repz
push
es
cmp
loope
sahf
mov
adc
out
adc
call
insb
mov
mov
aas
rorl
push
fsub
cmp
xor
lcall
ret
out
call
dec
cs
fnsave
add
les
loopne,pt
pushl
xor
lret
rcrl
in
fildll
adc
js
mov
pop
pop
dec
shlb
ljmp
imul
jne
lret
clc
test
lret
insl
and
jns
int3
sti
clc
or
decl
scas
lret
stos
into
jmp
jge
rorl
cwtl
stos
out
pusha
fnstcw
push
loop
jnp
fisubrl
or
mov
data16
stos
adcb
xor
lahf
push
aas
push
jmp
fstl
xor
mov
rcrl
scas
in
dec
cmpsb
jb
mov
outsb
pop
jne
stos
or
fidivs
cli
mov
repz
ljmp
incl
xsaveopt
cld
mov
jmp
xchg
call
sar
jmp
lds
dec
fmul
repz
shll
dec
inc
sti
das
popa
das
inc
fwait
jnp
xchg
mov
popa
rcrl
inc
ret
insb
cmc
mov
push
fimuls
loope
or
sbb
call
stc
fsts
adc
pusha
sbb
xchg
adcl
std
cmp
clc
ljmp
lods
mov
jno
gs
shrb
ljmp
add
fld
outsl
cmpb
add
add
call
lods
cmpsl
sbb
jp
mov
add
notl
shrb
sub
out
cli
mov
dec
inc
cmp
push
in
or
lret
iret
or
fbstp
ds
fs
loope
push
loope
dec
push
sbb
xchg
ljmp
and
insb
stc
test
dec
and
aaa
mov
xchg
stos
decl
jmp
pop
ljmp
pop
addr16
and
out
into
and
call
jge
dec
and
fcmove
imul
mov
imul
mov
addr16
cs
stc
fdivl
imul
lds
fisubrs
cmpsl
add
cvtps2pd
and
movsl
push
add
adc
les
push
push
bound
popf
pop
jg
in
rorl
cmp
add
and
adc
enter
jge
fstpl
push
call
push
ljmp
fdivs
and
adc
push
call
xchg
lcall
ds
mov
sub
cli
ja
fwait
lahf
adc
mov
das
out
cli
cmpsl
lahf
stos
cmc
xor
ljmp
clc
mov
sahf
xchg
adc
popa
ret
int3
cltd
mull
jecxz
lock
dec
sub
loop
insl
out
xchg
addr16
decl
testl
add
jno
pop
outsl
mov
das
bound
fs
test
call
mov
sarb
mov
lods
cmp
push
lea
gs
js
call
xor
jmp
add
das
das
ret
and
or
movsl
pop
in
push
clc
fs
fcomip
dec
test
orb
mov
mov
int
std
adc
jp
enter
negb
sbbb
fucomi
std
lea
xorb
lret
jne
arpl
sbb
incl
jb
push
xor
leave
xor
jecxz
pop
sahf
jmp
ja
ljmp
xchg
xor
jns
cmc
int
stos
in
xchg
pop
int3
aam
pop
clc
add
mov
or
dec
aad
fnsave
cmp
mov
lea
push
mov
jmp
cltd
in
jne
icebp
cmp
testb
jno
int
pop
fs
mov
js
add
iret
lock
js
stc
test
cmp
sub
pop
imul
stc
pop
push
es
or
ljmp
test
out
stos
mov
je
pusha
mov
and
das
adc
shll
fdiv
lcall
test
fstpl
mov
sub
pop
sub
adc
cmp
add
stc
pop
fidivrl
push
or
popf
test
fstl
decl
cli
jecxz
ja
mov
das
and
xchg
arpl
out
dec
push
lock
lcall
pushf
xchg
or
leave
xor
int3
adc
mov
xor
sti
or
xchg
test
jb
stos
and
pop
mov
lret
jg
jbe
cs
push
pop
ljmp
scas
push
pushl
mov
or
repnz
cmp
sub
sbb
inc
ret
mov
ljmp
xchg
push
dec
ja
pop
cmp
loop
insb
test
stos
mov
call
lods
aad
adc
incl
mov
cmp
scas
mov
add
in
pop
cmpsl
dec
fisttpl
lods
fisubs
inc
push
andb
es
xor
and
dec
dec
aas
pop
lds
sbb
push
test
inc
xlat
pop
push
shl
cltd
and
xor
pusha
fs
test
repnz
insb
sub
aas
cmpsl
sub
mov
hlt
dec
inc
push
int
outsb
jmp
push
pushf
xor
fldenv
mov
jecxz
xor
idiv
call
push
insl
divb
lcall
cwtl
sub
enter
int3
icebp
pop
iret
cmp
jle
popf
inc
dec
or
outsl
cmp
jecxz
pop
sub
xlat
mov
mov
pushl
enter
inc
int
pop
out
xchg
ljmp
fildll
cmpl
negb
aad
ret
jbe
add
sar
incl
adc
or
popa
test
sbb
mov
push
fcomps
je
inc
add
hlt
incl
jp
xor
jl
push
and
sub
pop
mov
adc
or
test
daa
sub
in
das
sbb
daa
jmp
fwait
jbe
mov
dec
sub
push
xor
out
mov
push
insb
nop
xchg
mov
repnz
insl
ljmp
loopne
test
ljmp
and
or
movsb
out
test
pop
or
mov
imul
add
inc
add
orb
decl
insl
push
xchg
sub
adc
xchg
pop
inc
sbb
std
cmp
int3
rorb
pop
xor
fs
and
pushl
jnp
std
xchg
dec
les
test
inc
mov
or
out
mov
xchg
fdivrp
lcall
js
gs
dec
mov
jnp
xchg
push
and
dec
xor
call
movsb
jno
scas
je
jp
lds
mov
cmp
xor
xor
cmp
ja
stc
cmp
ljmp
cmp
scas
pop
stc
mov
push
push
les
decl
inc
ja
int3
cmp
push
sub
arpl
in
mov
fcom
sub
cmpsl
push
out
mov
add
icebp
push
loopne
and
jns
stos
sbbl
cmp
add
loope
adc
fisttpll
push
pop
jbe
adc
xchg
xor
and
ljmp
imul
or
mov
fildll
mov
mov
mov
jmp
or
out
jbe
icebp
stos
sub
outsl
lret
in
rcl
pop
outsl
fdivs
scas
cli
jmp
out
iret
xor
xor
outsb
cmpsb
mov
sbb
sahf
stos
faddl
jmp
mov
sbb
add
ror
jmp
mov
sbb
ss
ret
rcrb
jmp
adc
jmp
idivb
ret
dec
insl
mov
pop
test
push
test
cmp
or
cmp
jg
decl
sbb
imul
outsb
push
mov
hlt
add
mov
xor
outsb
lcall
dec
inc
mov
push
es
cli
jg
pushf
xchg
movsb
lret
or
lods
mov
jae,pn
xor
js
ret
addl
xchg
ror
cld
jmp
jae
xchg
pop
cli
cmc
mov
pop
test
dec
or
lret
jnp
lcall
jmp
fldl
fisubrl
decb
jge
loopne
jb
aas
stos
and
mov
mov
call
mov
shrl
push
in
cmpsb
js
or
imul
inc
outsl
xchg
ljmp
clc
scas
push
or
mov
mov
xchg
pop
xchg
cwtl
imul
fldl
rcrl
clc
push
outsb
sbb
mov
mov
outsl
leave
inc
mov
int
jecxz
sub
mov
sub
mov
push
inc
je
lahf
popa
pop
pop
lcall
sub
push
fdivl
sbbl
sbb
xchg
push
dec
shl
cmc
int3
dec
mov
lcall
pop
push
loop
shll
jae
and
out
aam
jp
out
in
loop,pn
sbb
mov
iret
fxch
stc
mov
outsl
dec
lret
dec
in
dec
lea
incl
xchg
jns
cltd
mov
pop
mov
lret
lret
je
lods
in
loope
je
add
ret
jmp
lods
mov
cld
icebp
inc
repnz
mov
pushf
shll
pop
push
sub
out
push
pop
jecxz
gs
jg
cwtl
icebp
pop
popa
insl
mov
xchg
cli
dec
sbb
add
incl
aam
inc
insb
in
lret
xlat
ljmp
xchg
mov
xor
in
sub
mov
jg
sub
dec
add
stos
pop
add
mov
jle
mov
xchg
test
ja
sahf
lcall
jg
adc
and
push
inc
mov
mov
cmp
sbb
stos
call
or
push
cmp
inc
cltd
in
mov
jg
das
inc
mov
nop
mov
mov
sarb
sub
out
fildll
ljmp
insl
roll
dec
scas
pop
push
arpl
fwait
pop
aad
push
mov
or
incl
nop
leave
mov
rol
push
or
js
cs
in
xor
xchg
sub
lret
mov
cmp
cmp
pop
gs
lcall
rclb
fstps
push
loopne
cli
xor
stos
decl
enter
sbb
stos
cmp
sub
imul
xchg
adc
cmpsb
fidivs
mov
test
or
ficoml
int
and
js
and
push
stos
negb
outsl
out
jl
mov
push
adc
pop
jmp
jo
jne
mov
enter
xor
ret
xchg
xchg
lea
mov
js
leave
mov
jno
add
inc
and
mov
push
lods
push
add
int
mov
lret
lcall
loope
sub
pop
das
cmp
pushl
lsl
jnp
ffree
add
mov
mov
popa
aam
leave
sbbl
popa
sar
or
outsl
mov
inc
mov
push
xchg
sbb
lcall
ds
clc
lds
leave
mov
push
rol
xchg
int
es
pushl
push
sbb
xlat
out
add
in
xor
dec
inc
fisubrl
dec
imul
stos
xor
jmp
insb
movsl
pop
in
sub
enter
mov
outsb
mov
xor
movsb
je
and
xchg
inc
ret
jge
cmpsb
lock
mov
xchg
xor
stc
lret
pushw
scas
fmuls
xlat
mov
repz
cltd
jb
adc
mov
js
in
jnp
arpl
jne
shrb
stos
fiadds
sbb
mov
jb
cmpl
in
mov
sbb
dec
mov
jg
outsl
repnz
and
arpl
lcall
jp
sbb
jge
adc
nop
push
mov
inc
pop
lds
push
lret
push
fwait
cmp
pushl
cld
imul
sbbl
push
in
rcll
sbb
inc
cmp
imul
lret
and
jge
popa
inc
pop
pop
mov
cltd
mov
pusha
iret
jb
repnz
mov
push
fbld
mov
fs
xor
loop
cmc
dec
frndint
cwtl
jmp
popl
xchg
dec
negl
xchg
jno
cmp
ret
inc
push
adc
cmp
and
xor
enter
inc
jne
enter
js
push
dec
jmp
test
je
xor
xor
cs
lods
int3
and
inc
or
cmp
sub
syscall
and
sbb
stc
stos
sahf
sub
lods
sub
jg
mov
sub
sbb
rcll
inc
pop
xor
push
lcall
adc
add
push
ss
fidivl
mov
ret
inc
xchg
rorb
cmp
mov
into
xchg
std
in
jmp
cmp
cmp
into
es
adcb
cwtl
and
mov
sbb
call
ljmp
lcall
in
push
mov
push
repnz
mov
sub
ljmp
js
mov
push
inc
stos
add
cmp
pop
loopne
leave
adc
cltd
adc
pushl
or
jmp
mov
dec
lock
adc
xor
shrb
mov
inc
push
pop
stos
aaa
mov
dec
movaps
cli
pop
pop
sub
sbb
sbb
adc
adc
scas
mov
decl
scas
mov
outsb
cmpsl
adcb
mov
xor
movsl
cmpsl
mov
add
sbb
ljmp
jle
hlt
cld
es
sub
subl
jnp
lds
shlb
les
lcall
or
lods
daa
adc
pop
pop
cmc
xchg
adc
in
xchg
decl
mov
cmp
sub
lods
cs
stos
out
mov
adc
add
adc
shrl
lret
clc
jg
add
push
mov
fadd
add
data16
mov
lods
fdivrp
out
sub
or
adc
mov
jecxz
mov
fs
cmp
out
jle
and
popf
dec
je
push
mov
mov
pop
push
cmp
jp
or
lock
incl
loop
cwtl
pop
cmpb
lock
mov
addr16
fidivl
mov
out
pop
loope
push
pop
out
jae
dec
xchg
mov
xchg
sbb
ljmp
sub
repz
or
scas
mov
clc
and
fwait
in
jg
cmpsb
mov
gs
clc
add
xchg
mov
aas
sub
incl
lret
xlat
popa
lea
in
sub
ljmp
inc
insl
push
jbe
pushl
push
mov
stc
pop
sub
gs
gs
ljmp
rcrl
test
fcoms
nop
pop
xchg
fs
jbe
ljmp
jp
or
lock
in
es
mov
inc
sahf
fnsave
mov
inc
rcrb
popa
cmpsl
je
pop
call
and
in
cwtl
adc
hlt
sub
int
sub
push
and
not
push
arpl
sbb
incl
ret
das
xchg
sub
xchg
adc
sub
sti
dec
inc
mov
sar
pop
imul
call
in
test
enter
mov
or
dec
and
jmp
dec
xor
addr16
popf
insb
ljmp
iret
pop
imul
call
shlb
cmpl
pop
push
push
adc
push
pop
jmp
push
leave
adc
call
popf
out
movsb
mov
imul
inc
mov
inc
lods
mov
std
inc
int3
and
stc
std
icebp
sub
jmp
or
lods
fcmovne
cld
popf
ljmp
push
jge
jo
pop
cli
call
jns
dec
sarl
daa
jl
lret
je
dec
sub
mov
in
ret
jg
mov
sbb
dec
inc
outsl
cli
jge
jo
add
decl
iret
inc
dec
sub
cli
lahf
sarl
ja
jg
xchg
in
lcall
pop
insl
adc
fists
idivl
push
mov
popa
mov
in
mov
push
sbb
decl
outsl
sbb
pop
outsb
jns
dec
repz
mov
mov
incl
jle
mov
mov
andb
jg
sbb
notb
pop
scas
xor
mov
cld
iret
mov
adc
pushl
push
jbe
stos
ss
test
pop
or
movsb
cmp
clc
inc
leave
stos
sarb
movsl
dec
or
incl
cld
call
je
fcoms
cmp
fs
mov
add
decl
clc
and
andl
test
les
popa
dec
cmpsl
ljmp
aas
jne
les
orb
stc
xor
je
sub
adc
loopne
dec
jbe
lods
dec
xchg
ss
popa
inc
cmp
cli
outsl
cli
push
es
sub
movsb
sub
outsb
push
jae
and
lock
ljmp
jo
cmp
xchg
imul
jnp
sbb
xchg
push
js
outsb
repz
push
std
data16
push
call
push
ljmp
push
arpl
mov
cmp
stos
ljmp
jns
fnsave
pop
icebp
pushl
rcll
mov
mov
hlt
pop
add
jp
ja
and
pop
jmp
push
ljmp
lds
push
sub
sbb
rcrb
subl
xor
mov
and
or
pop
aas
aas
mov
push
dec
ljmp
shlb
xor
add
jnp
roll
push
adc
mov
xor
dec
sbb
or
fiaddl
into
sahf
xchg
jae
cli
out
mov
movsl
cmpsb
stos
lcall
decl
dec
test
insb
in
data16
push
adc
fiadds
pop
jle
pop
xchg
push
inc
cmp
outsl
sub
pop
jo
xchg
fidivs
and
push
lock
ljmp
lds
pop
loopne
adc
inc
mov
mov
mov
in
lock
pop
icebp
pushl
in
and
add
mov
jecxz
cwtl
ss
ja
call
dec
pushf
adc
mov
mov
test
mov
int3
mov
ret
loopne
mov
outsb
sbb
sahf
insb
cmp
cld
movsl
sub
aas
push
dec
pop
ljmp
adc
mov
xchg
xchg
decl
adc
lret
dec
mov
dec
xchg
pop
lea
data16
popf
cwtl
mov
jmp
push
jl
and
mov
sub
pop
adc
clc
pop
xchg
cmpsl
popa
dec
cld
insl
dec
les
scas
les
je
pop
ret
hlt
stos
jle
andb
in
out
inc
push
mov
mov
dec
sub
cmp
in
outsl
inc
push
fwait
jmp
rorb
incl
aas
std
sub
inc
scas
or
lods
mov
pushf
jae
cmp
mov
push
mov
inc
mov
ljmp
mov
push
or
add
dec
xchg
jns
into
push
cmp
clc
inc
push
dec
push
lcall
cmc
mov
sub
sub
popa
popa
inc
outsb
data16
ret
mov
pushf
jle
push
pushf
dec
std
add
cwtl
lcall
sbb
dec
sbb
stos
inc
int3
lods
jge
lcall
xchg
insb
sbb
test
ret
pop
movsb
mov
in
inc
in
cmp
jmp
and
orps
int3
push
sbb
inc
loopne
mov
test
xchg
add
lcall
cmp
negl
movsl
jo
pushf
insb
push
aad
cmp
jmp
inc
pop
jo
es
test
loope
inc
idivb
lahf
cltd
mov
or
cmpsb
jl
clc
sbb
pushl
jb
cmp
shll
cld
xor
xor
out
xor
daa
daa
adc
pop
pop
cmpsl
inc
call
push
and
mov
stc
pop
sbb
ficomps
push
cli
sbb
hlt
ss
push
lcall
incl
mov
and
xlat
xchg
fdivrs
push
fdivr
out
cmc
mov
decl
cmp
xchg
test
push
mov
das
stos
mov
das
xorl
lcall
in
jp
pop
or
cld
jmp
dec
lret
hlt
fcom
xchg
jg
js
popf
jae
pmaxsw
daa
arpl
dec
cs
cmp
scas
lods
fwait
mov
incl
add
jle
xchg
fadds
push
and
out
inc
xchg
dec
mov
jle
stc
ss
inc
out
popf
testl
into
ljmp
adc
ficoml
int3
jecxz
mov
mov
sub
ret
pushl
in
test
data16
in
call
push
inc
mov
xor
xchg
test
mov
or
nop
arpl
push
mov
incl
add
test
lahf
rcl
imul
paddusb
aad
or
lods
pop
js
jg
sub
pop
into
fmul
mov
jne
push
add
icebp
cmp
adc
inc
cmp
pop
mov
mov
jecxz
cmp
pop
pushf
sbb
push
jmp
in
or
ss
jmp
in
call
stos
icebp
or
xchg
es
xor
into
ja
xchg
mov
test
mov
push
mov
int
pusha
lods
cs
test
into
sub
sbb
mov
push
aam
les
lock
cmp
movsl
mov
fstpt
sub
sarl
repnz
decl
cmp
jns
ret
in
xchg
cmpl
rorb
pop
shrl
push
js
pushl
mov
push
mov
sub
cwtl
out
test
sbb
cs
mov
or
ljmp
andl
push
inc
sub
xchg
dec
and
inc
mov
cmp
mov
sbb
sahf
and
adc
test
push
or
ljmp
cld
rolb
mov
repz
bound
incb
pop
add
dec
mov
jae
addr16
and
out
jbe
sub
adc
loop
incl
imul
sub
adc
xlat
jecxz
lahf
cmpsb
inc
test
cmpsb
sub
fucomip
sti
push
dec
jmp
inc
push
jl
mov
outsl
pushf
push
adc
jl
rol
cld
inc
fisttps
das
int
sub
xchg
arpl
ds
fistpll
push
addr16
inc
add
add
ljmp
pop
stos
push
mov
lock
jle
inc
insl
lret
call
cltd
xchg
ja
push
xchg
aas
inc
push
shrb
js
push
loopne
cmp
fwait
ds
mov
loopne
std
inc
add
inc
in
xchg
pushf
in
or
fbld
mov
cmp
lods
in
xchg
inc
push
aad
adc
out
scas
pushl
out
adc
inc
inc
outsb
andb
in
sbb
int
inc
lock
ljmp
or
pop
aaa
inc
sarl
and
imul
jg
mov
mov
xchg
xor
les
mov
xor
jmp
xchg
filds
xchg
out
lock
mov
sub
push
xor
decl
gs
mov
idivl
adc
jnp
xchg
dec
add
mov
in
sarb
lea
imul
mov
lcall
lcall
stos
ja
fs
cmpsb
jno
cwtl
aad
gs
in
js
lcall
adc
ja
stos
lret
pop
or
sbb
xchg
and
mov
decl
imul
js
in
aad
dec
or
mov
sti
int3
dec
popf
mov
mov
pop
icebp
iret
mull
push
lret
test
imul
sub
decl
lahf
mov
push
stos
loope
hlt
sahf
mov
cmpsb
bound
inc
xlat
lcall
imul
push
xchg
mul
ja
les
sar
mov
mov
popf
mov
cmp
mov
add
xchg
pop
cmc
jg
mov
lds
mov
xor
inc
sub
sar
int
scas
pop
pop
in
ret
insb
xchg
push
inc
dec
shll
jns
popf
cmp
ljmp
jecxz
mov
lahf
lock
push
push
incl
jmp
adc
mov
ret
int3
jno
xchg
mov
repz
cld
repnz
mov
ljmp
testb
pop
pop
leave
add
jle
call
repz
inc
adc
aaa
sar
lcall
pop
or
fs
ja
arpl
out
jg
imul
insl
mov
mov
jmp
popa
and
cmp
incl
xor
mov
sub
pop
mov
lods
jo
push
adc
cmp
decl
jb
sbb
xchg
add
daa
dec
xchg
pop
fldl
pushf
cmc
xor
sar
adc
aam
jb
lods
jae
call
dec
in
data16
xor
mov
outsb
movsl
jge
repnz
or
filds
mov
jg
ss
pop
test
shrb
push
jmp
lahf
test
cmp
jmp
jnp
jge
push
mov
clc
or
dec
push
pushf
adc
scas
cmp
arpl
and
incl
mov
popa
jbe
pop
shlb
push
push
stc
xchg
pop
dec
ljmp
std
lods
push
jg
enter
mov
mov
mov
fisubl
and
decl
add
aaa
lret
jmp
mov
pushl
and
mov
and
stos
and
outsl
scas
adc
in
call
ljmp
xchg
in
fnstenv
in
mov
cmp
mov
scas
stos
sti
cmp
aaa
push
inc
inc
iret
ret
mov
popf
dec
mov
sub
loop
sar
ljmp
mov
mov
movsl
insl
mov
sub
cmp
mov
aaa
jmp
pushl
int3
scas
shll
xor
dec
lcall
inc
loopne
push
xchg
pushf
pushl
inc
pop
cs
dec
push
mov
xchg
fs
jb,pt
inc
mov
in
xor
or
ljmp
push
mov
out
xchg
push
or
loopne
xchg
sbb
in
xchg
outsl
lret
mov
sub
in
or
hlt
xchg
call
mov
cmp
pushl
pop
subb
mov
xlat
xor
bound
cmc
imul
call
aas
push
lods
outsb
mov
shrl
xor
lock
xchg
cmc
dec
mov
mov
jno
fbld
ljmp
push
mov
arpl
ljmp
cmpsb
jp
mov
cmc
inc
or
cmpsl
push
or
push
lea
xchg
decl
and
or
push
lret
lock
inc
bound
aam
icebp
loop
fidivl
push
test
pop
pop
inc
mov
pushl
iret
adc
cmp
xor
cs
sbb
mov
stos
dec
decl
loopne
aad
jle
fs
or
stos
xchg
enter
outsb
sub
call
in
loop
cmpsb
in
cwtl
pop
jecxz
rcr
les
fcomps
sbb
ss
sub
pushl
iret
lds
sahf
sbb
in
into
imul
xchg
sub
outsb
and
jmp
add
js
push
jo
orl
push
push
leave
sbb
lods
mov
sub
ljmp
scas
mov
mov
xor
mov
push
outsb
inc
inc
dec
sti
insb
shrb
dec
test
pushl
fists
or
lods
test
mov
test
nop
setae
cmp
mov
xor
mov
push
loopne
lds
decl
dec
insl
movsl
icebp
js
xor
mov
dec
pop
sub
or
je
cld
and
adc
push
fsts
inc
dec
xlat
sbb
jnp
lea
lds
or
neg
jne
call
jnp
fimuls
adc
lods
outsb
lods
lahf
mov
cmp
cmp
sar
int
adc
add
test
out
repnz
lcall
into
mov
mov
or
inc
cmp
rclb
loope
mov
pop
aad
das
mov
adc
or
inc
ret
lds
ss
lods
cld
push
cmp
sti
pushf
xchg
cmp
aam
call
jecxz
aaa
push
sarl
xor
push
xor
pushl
rolb
xor
inc
popa
pcmpgtd
or
sarl
fistps
gs
roll
mov
ja
or
pushf
adc
sbb
in
xor
mov
cmp
xlat
sbbb
es
out
ret
insb
loop
sbb
insb
pop
loope
dec
cmp
sarl
mov
ljmp
es
adc
sub
shrl
mov
and
mov
scas
das
mov
jmp
pushf
pop
dec
popf
call
addr16
imul
pop
pop
push
push
mov
enter
mov
or
jbe
pop
insb
es
mov
jle
fbld
shlb
outsl
push
filds
divl
xor
incl
cld
xchg
add
movsb
pop
adc
fcoml
mov
lret
mov
outsl
pop
mov
mov
push
dec
adc
sub
dec
das
sub
mov
dec
iret
add
out
or
ljmp
ret
push
lret
inc
fcomi
popa
sti
xor
or
pop
jnp
lret
negl
decl
dec
adc
jle
in
scas
mov
call
cs
and
sub
in
add
decl
pop
fmuls
outsl
das
inc
jle
movsb
mov
push
mov
mov
decl
or
jmp
cld
imul
rcrl
ljmp
and
rorb
cltd
das
sbb
lds
cli
aaa
xor
push
test
sarb
scas
xor
insl
je
data16
jg
frstor
inc
arpl
pop
pushl
mov
into
sbb
fisubrl
jmp
jmp
out
rorl
mov
dec
push
divl
mov
sub
inc
dec
jle
pop
dec
and
rolb
call
xor
test
and
jbe
sbb
jo
xor
ror
xor
mov
xchg
in
aas
jns
shlb
fnstcw
xor
xchg
stos
movsb
sbb
mov
xchg
dec
jl
lods
mov
outsl
jo
jno
mov
sub
sub
sub
or
sub
fsubp
add
clc
jns
adc
jle
out
jb
xor
incl
ret
mov
outsb
hlt
push
pop
xchg
xor
dec
mov
inc
test
inc
std
jl
call
sahf
inc
icebp
sub
push
pop
enter
inc
add
xor
bound
xor
decl
ret
adc
aam
arpl
sbb
xor
inc
mov
jp
lea
pop
sub
jbe
or
jmp
test
mov
mov
mov
lcall
stos
xlat
pop
insl
cmp
in
dec
inc
shl
adcl
int3
mov
jmp
out
bound
int
in
sti
xchg
cmpsl
xchg
xchg
pusha
push
pop
int3
mov
movsb
or
mov
xor
adc
jle
sub
dec
pop
in
jmp
pop
fwait
test
lea
scas
dec
pop
popf
mov
mov
aas
mov
sbb
jle
xrelease
pushl
movsb
mov
mov
js
out
cmc
test
cmp
cmp
stos
rcll
push
cld
insl
mov
mov
mov
outsl
cwtl
or
xchg
dec
push
bound
and
lock
ds
sar
pusha
push
xor
out
sbb
push
pop
hlt
decl
ja
jb
jge
mov
cmpsl
fisubs
adc
sbb
ret
divl
jle
jo
mov
repnz
in
adc
adc
iretw
insb
ljmp
int3
add
cmp
mov
test
orl
insl
mov
loope
lds
pusha
mov
pop
cltd
push
loope
pop
sbb
sahf
sub
push
cmp
call
xor
inc
repz
test
test
lret
mov
sbb
mov
add
fisubl
ds
dec
movsb
push
daa
mov
dec
cld
jg
in
es
jl
jl
push
adc
jno
mov
sar
stos
mov
iret
in
addl
rep
jne
xchg
pop
cmp
call
pop
jbe
sahf
mov
jno
xchg
popa
xchg
rcrb
cmpsl
pop
mov
decl
lret
mov
push
pop
push
loopne
xchg
arpl
incl
stos
mov
push
push
aam
cmp
inc
smsw
mov
sub
mov
stos
jmp
lret
pushf
decl
adc
je
cs
jae
int
push
mov
fildll
push
ret
out
clc
push
jg
mov
out
push
push
xchg
xchg
andl
push
sub
jmp
xchg
pop
adc
dec
and
sub
inc
xor
add
out
loope
sub
ljmp
fists
cltd
xchg
mov
xchg
mov
cmp
xor
mov
inc
ss
hlt
pop
sub
cmp
xchg
pop
mov
adc
pushl
jmp
sbb
outsl
dec
test
divb
fsubrp
pop
pop
cli
mov
mov
fs
sbb
adc
sub
xor
pop
adc
mov
jmp
int
popa
jmp
lods
jo
sbb
jmp
popa
inc
or
jae
push
push
jns
sbb
bound
stos
loop
sub
addb
mov
add
hlt
sti
xchg
mov
inc
push
mov
into
fsubrl
scas
sub
adc
in
pop
jle
pop
arpl
xchg
orl
js
and
jmp
push
xchg
negl
add
xchg
es
or
mov
fs
push
jb
incl
test
pop
inc
loope
and
rcl
pop
adc
sbb
movsb
sbb
decl
or
sub
push
out
push
add
faddl
mov
adc
popf
xchg
icebp
xchg
fisttps
addr16
adc
add
dec
cwtl
cmp
ds
lods
pushf
mov
mov
lret
mov
mov
ljmp
adc
movl
and
pop
sbb
adc
lods
loop
lcall
shr
ds
hlt
mov
or
pushf
daa
scas
or
mov
mov
jg
insb
cli
mov
shrb
insl
or
xor
push
not
arpl
fcoms
hlt
sbb
push
sub
rcr
loopne
jbe
mov
enter
lcall
xchg
jae
and
xor
mov
sbb
repz
push
js
cmpl
call
push
mov
cs
or
jge
pop
pop
sub
jmp
insb
push
sbb
xorb
cli
lahf
inc
lahf
and
negl
sbb
outsl
jo
into
mov
es
push
push
mov
pop
and
dec
xor
xchg
pop
jg
xchg
or
aaa
movsb
movsb
add
mov
insb
mov
mov
or
and
mov
cmpl
das
rcrb
repnz
sahf
in
imul
aaa
je
out
jmp
mov
adcl
mov
dec
lret
arpl
decl
jb
shll
inc
jns
lahf
ss
mov
out
lret
mov
inc
decl
test
dec
aad
ljmp
and
and
lahf
lret
lcall
xor
add
les
loop
add
mov
arpl
aam
push
addr16
jle
pop
inc
adc
ja
add
add
stos
leave
and
call
mov
push
lds
je
mov
decl
push
outsb
es
xchg
or
mov
or
mov
push
das
mov
adc
adc
sub
sti
lcall
lods
vdivpd
imul
push
mov
daa
lcall
push
clc
addr16
cmp
ja
rep
fistpl
shrd
sub
pop
jnp
push
or
loopne
repnz
and
popa
xchg
leave
scas
xchg
movsb
call
outsl
mov
ljmp
mov
std
loope
adc
rcrb
jl
adc
push
nop
xor
xchg
pop
and
lcall
loop
loope
sbb
stos
jnp
in
test
call
out
hlt
repz
xchg
fcompl
mov
ljmp
sbb
fwait
xor
jmp
inc
jnp
daa
icebp
out
push
in
jbe
test
mov
push
daa
sub
cmp
incl
jns
in
push
test
cs
aas
cmp
hlt
iret
adc
xor
icebp
lea
pop
jmp
sar
incl
cmpsl
adc
rcrl
sbb
sbb
fwait
ret
sub
lahf
inc
push
add
daa
arpl
xchg
ljmp
mov
int3
shlb
pushl
mov
pop
mov
icebp
movsl
xor
inc
movsl
leave
rcl
xchg
dec
les
jg
outsb
dec
test
addr16
xchg
aas
pop
mov
js
inc
cltd
jae
lds
jne
stos
out
or
jmp
ret
adc
out
or
cli
iret
pop
jae
enter
pop
add
mov
jae
jmp
xchg
cmp
xchg
jmp
jb
xchg
fstl
mov
cld
inc
nop
xchg
orb
loop
leave
mov
add
out
inc
push
stos
and
pushl
cs
inc
sbb
psrlw
jecxz
xchg
lahf
mov
lahf
jg
pop
int
jo
jg
push
xchg
cs
insb
xchg
cwtl
inc
rcrl
adc
sbb
mov
jecxz
xor
jbe
mov
incl
imul
in
sarl
ss
push
pop
sbb
jl
fildll
jl
fidivrl
ja
inc
push
adc
push
dec
jmp
jmp
add
test
fcoms
adc
xor
cmp
shlb
xlat
in
call
inc
mov
jecxz
insl
or
mov
pop
and
xchg
jecxz
adc
ljmp
call
in
cltd
and
jns
push
push
out
xchg
iret
jge
fsubl
cs
cld
test
xor
decl
push
loopne
repnz
mov
jmp
lods
push
int3
jg
pop
push
fadds
std
rcrl
pop
inc
int
sarb
inc
xchg
pop
out
dec
mov
xor
jmp
lret
pop
and
popa
out
shrb
xchg
icebp
cmp
addr16
xorl
lcall
pop
pushf
pushf
mov
fisttpll
cld
insb
fisubl
data16
dec
add
cli
jnp
mov
sub
call
mov
lcall
xchg
sbb
andl
cli
pushl
icebp
call
imulb
bnd
adc
and
out
mov
daa
daa
lods
mov
div
and
stos
ja
jo
push
cli
mov
out
cmp
push
xchg
jns
mov
mov
jmp
inc
mov
sbb
enter
sbb
arpl
clc
pusha
lods
push
lock
jmp
pushl
mov
stos
arpl
push
xsaveopt
sbb
inc
mov
add
lcall
cmpb
mov
cmpsl
jb
sub
pushf
jmp
and
pop
mov
adc
sbb
or
jmp
shlb
cmpsb
rorl
pop
dec
pop
mov
mov
fisttps
sub
decl
xor
fbld
mov
dec
push
push
sub
xor
incl
mov
mov
rcr
inc
mov
cmp
jb
jo
ret
lcall
jmp
lock
xlat
mov
cmp
xchg
cltd
mov
ljmp
add
sub
pop
call
mov
adc
imul
push
in
mov
lods
shrl
mov
jmp
ret
inc
daa
sbb
clc
pop
jb
fisttpll
mov
adc
aas
pop
movsl
pop
int3
xchg
add
cmp
adc
popf
mov
incl
popf
test
stos
jo
stos
ljmp
push
cs
adc
sub
or
lret
ljmp
mov
adc
jp
clc
fimull
push
fildl
mov
ljmp
lock
inc
rcrb
lock
or
sbb
repnz
decl
dec
mov
hlt
dec
ss
cmp
mov
add
push
and
mov
call
lock
shll
pop
push
aad
scas
add
pop
adc
mov
iret
loopne
dec
mov
mov
jg
mov
jne
out
dec
rolb
rolb
ret
mov
popf
and
test
mov
cmp
es
decl
mov
stos
push
cmp
jp
fisubrs
arpl
movsl
mov
ljmp
sbb
ja
sahf
sbb
mov
pop
sar
jg
xchg
sub
dec
loope
sub
jae
pop
sub
jg
dec
int3
repnz
adc
adc
sahf
push
call
lods
sub
loope
outsl
clc
es
mov
inc
imul
jne
push
push
ret
and
popa
xchg
sbb
pop
ret
movsl
mov
addr16
cmp
mov
cli
add
into
repz
jge
dec
int3
xchg
std
add
push
outsl
mov
xchg
pop
rolb
add
andl
lcall
add
orb
cmp
xchg
es
scas
inc
and
mov
inc
dec
mov
xchg
adc
cld
leave
mov
or
jecxz
mov
jg
aas
fistps
ljmp
or
insb
sub
stc
fcmovne
dec
push
cmp
jb
dec
or
jns
push
mov
jle
enter
cmp
call
movsb
stos
or
sbb
xchg
les
mov
sub
and
ljmp
icebp
and
and
xor
call
imul
mov
mov
ffreep
cli
sub
xchg
cmc
mov
cmp
dec
jns
mov
mov
scas
arpl
mov
pop
cmpsl
aaa
add
or
orb
mov
xchg
jo
cmp
mov
mov
es
inc
cli
jmp
sbb
dec
shl
out
add
in
xchg
dec
and
and
sahf
pushf
dec
call
inc
and
jg
or
aam
mov
or
xchg
aaa
out
pop
sub
mov
mov
inc
sbb
fwait
sub
aad
arpl
jp
xor
push
out
loop
cmp
mov
push
jle
cmp
cmpsb
fwait
sub
add
adcb
mov
incb
decl
xor
mov
mov
mov
inc
nop
push
cli
cld
and
ss
std
outsb
call
jg
dec
mov
mov
fisubs
ret
icebp
into
pop
outsl
jmp
push
popa
daa
xor
incl
out
mov
jg
sub
pusha
and
sbb
push
mov
fsubl
dec
dec
mov
stos
pop
rolb
sub
mov
das
push
xchg
cmp
call
dec
jmp
daa
shlb
push
arpl
cli
ljmp
and
cmc
fmuls
sti
pop
fcoml
pop
iret
sbb
mov
decl
lea
push
pop
adc
adc
movsl
imul
dec
int
jmp
or
or
rcrl
daa
shl
mov
fmuls
mov
in
push
test
lock
call
jae
xchg
sub
int
rclb
rorb
movsl
repnz
jg
or
xchg
mov
mov
inc
fcompl
pushl
std
decl
jl
mov
int3
dec
pushf
adc
jne
loope
insl
jp
and
dec
mov
ljmp
push
push
pop
or
clc
mov
push
gs
movsb
xchg
imul
pushl
cmc
sub
cli
cmpsl
xor
cs
loope
lcall
aas
rcr
pushl
dec
fdivr
inc
movsb
or
test
jmp
xchg
pop
push
pushf
stos
repz
mov
lcall
iret
xor
xor
xor
lret
or
jl
pop
into
notl
pop
js
mov
adcl
call
movsl
cmc
lcall
push
jp
xchg
adc
xchg
jecxz
sbb
incl
int3
out
mov
xor
lock
out
jns
inc
jecxz
loopne
std
lcall
push
lods
loope
fldl2e
push
mov
push
xchg
mov
mov
mov
fwait
test
jae
xor
or
xchg
jmp
jecxz
push
mov
jnp
decl
loope
mov
ss
jbe
imul
fadd
outsl
xchg
pop
dec
adc
xchg
or
inc
loop
jb
lods
test
fsubrp
aaa
pop
decl
inc
out
cwtl
fs
dec
and
and
xchg
jnp
test
pushl
fsubrs
mov
adc
bound
imul
mov
arpl
das
clc
push
enter
sbb
std
jge
pop
xor
or
lcall
jmp
incl
leave
movsb
jecxz
scas
push
jne
enter
add
pop
mov
xor
insl
push
sar
lcall
scas
and
aas
mov
and
or
push
add
subl
xchg
ljmp
or
inc
dec
dec
psubd
lret
lods
lahf
aad
into
add
mov
cld
add
sar
xor
jns
mov
cltd
adc
xchg
xchg
lods
push
nop
mov
scas
clc
ljmp
fcom
icebp
pop
int
adc
pop
shlb
xchg
jecxz
cmp
lods
mov
add
jl
sub
cmp
mov
pushl
push
arpl
repnz
pop
test
test
sarb
lret
pushl
cld
mov
pop
mov
jle
push
repnz
outsl
push
je
xorb
mov
mov
into
sbb
imul
std
push
das
outsb
inc
pop
ss
push
xchg
mov
sub
jg
mov
mov
imul
mov
mov
lea
jb
add
and
jae
xchg
dec
shlb
rclb
jo
pop
enter
inc
leave
in
cmp
cmpsl
insl
xchg
mov
std
fildll
push
cvtpi2ps
lcall
lcall
jne
mov
cld
xchg
divb
and
or
lock
mov
mov
lcall
repnz
out
iret
out
jmp
inc
int3
and
dec
push
jmp
pop
push
add
decl
outsl
adc
mov
lds
xchg
mov
adc
lock
jle
ljmp
pop
divb
mov
cmpsl
fsubrl
mov
push
jae
int
stos
inc
sub
cmp
lcall
add
jle
popa
xlat
shll
test
pop
jg
call
cmp
adc
call
cltd
mov
mov
imul
mov
jae
in
fisubs
bound
test
lds
lcall
inc
sbb
es
in
mul
pop
mov
mov
hlt
insb
loope
pop
jg
jle
jno
rolb
xchg
and
fs
sub
cs
imull
imul
call
jb
push
pop
mov
lds
fstps
mov
or
fwait
xor
shlb
jmp
sbb
in
jno
sahf
call
add
cmp
cmpsb
enter
inc
shll
cmp
inc
push
adc
rorl
decl
inc
mov
sahf
mov
outsl
vpmacsdd
mov
lock
or
xchg
fldenv
cs
sbb
incl
xchg
adc
jmp
sub
push
lret
mov
adc
sbbl
mov
rorl
mov
sub
mov
push
jo
lret
add
pushf
push
enter
icebp
mov
cmpsl
cld
push
adc
push
std
ljmp
mov
lcall
jns
pop
fsubrl
movsb
jmp
push
in
cltd
in
adc
jmp
stc
lea
pop
inc
and
add
sti
clc
push
js
int
push
dec
leave
call
cli
add
mov
mov
push
jno
in
push
and
fwait
add
lods
add
push
dec
inc
mov
mov
mov
mov
xchg
jae
test
mov
mov
push
fwait
out
cltd
fistps
push
dec
xorl
pop
cwtl
sar
xor
lds
decl
cmp
jo
dec
jbe
mov
sub
push
sub
aas
mov
cmpsl
adc
shl
stos
and
in
daa
inc
jg
paddsb
pop
outsl
add
inc
in
test
mov
xchg
xchg
push
add
and
scas
cmpl
add
push
iret
push
aam
pushl
cld
dec
pop
fnstcw
jmp
xchg
into
add
sbb
fsubrs
and
call
test
sbb
dec
in
cmp
mov
lret
repnz
mov
testl
incl
sbb
ja
mov
subl
in
ficomps
jb
adc
push
cld
mov
push
pop
xor
scas
das
sbb
in
or
pop
cmp
lcall
xor
push
pop
testb
inc
or
jecxz
pop
faddl
sbb
insl
ljmp
cmp
push
rcpps
or
cld
outsl
push
ficomps
out
pop
lcall
inc
adc
nop
mov
push
hlt
mov
aad
into
dec
bnd
push
fidivrs
and
ljmp
fsubrs
pop
mov
jp
pop
adc
xchg
cmpsb
xchg
es
or
xchg
pushl
xchg
sbb
push
push
mov
adc
popf
jl
das
lods
loop
lcall
daa
dec
jno
inc
inc
insl
je
mov
roll
ljmp
pop
pop
repz
idivb
pop
rorl
or
mov
xchg
stc
pop
incl
dec
dec
jle
cmp
adc
sahf
inc
loope
xor
nop
mov
or
decl
inc
aam
daa
lret
je
dec
xchg
call
mov
xchg
or
pop
pop
sub
cmp
lock
mov
lock
push
sahf
out
and
cmp
cmpsb
loope
xchg
decl
dec
js
ja
pop
jp
fdivr
sti
ret
mov
mov
addr16
clc
and
fidivrs
les
stos
and
mov
das
adc
arpl
push
cmp
nop
pop
shlb
call
mov
push
sub
daa
fwait
sbb
dec
dec
mov
pop
das
push
adc
lret
imull
push
mov
sub
ret
cmp
dec
adc
add
mov
movb
push
mov
pushl
dec
pop
push
in
sub
addr16
loope
push
mov
jnp
adc
jg
and
imul
mov
and
cmpsl
jb
inc
push
fidivrl
dec
loopne
call
mov
cmpsl
mov
cmp
mov
das
clc
lcall
push
jecxz
loopne
dec
sub
jb
popf
fmuls
loop
ljmp
add
pop
outsl
pop
negl
lea
ljmp
sbb
ljmp
xchg
movsb
outsl
test
rolb
pop
add
jbe
call
push
loopne
xchg
or
cmp
mov
pusha
jle
sub
enter
or
ret
inc
lods
cmp
jmp
test
out
and
call
push
xor
xor
sub
mov
ds
push
aas
lods
push
ja
loop
dec
negb
sbb
scas
fcomp
insl
mov
pop
sbb
or
or
or
lcall
jmp
leave
xchg
int3
mov
in
pop
roll
xor
in
push
add
int
jnp
and
ljmp
nop
pop
into
jno
mov
ljmp
aad
ss
mov
mov
and
add
sahf
add
xchg
sbb
lcall
cmp
inc
jo
fnclex
in
push
push
cmp
inc
lea
xor
sub
mov
cmp
dec
sub
push
inc
cmp
decl
xchg
enter
pop
gs
sbb
inc
xchg
fs
imul
divl
incl
int
and
xchg
popf
fucom
dec
lcall
cmpsb
dec
and
ljmp
ret
lcall
mov
push
fnsave
pop
mov
add
inc
out
jnp
and
mov
fnstcw
sbb
inc
xor
call
ret
jb
lods
cwtl
jae
xor
ds
in
mov
lahf
cmp
xor
rolb
mov
pop
int
shl
in
out
mov
insb
push
insl
xor
scas
inc
or
cmp
cmp
in
mov
sbbl
xchg
repz
je
incl
popf
cmp
pop
mov
rorl
push
dec
mov
and
jecxz
and
mov
movsl
add
cmc
and
addr16
adc
jge
jg
mov
mov
mov
or
sarl
testb
push
jp
imul
fildll
sti
dec
bswap
lock
jns
adc
push
xchg
mov
mov
push
jg
adc
lret
xorl
inc
out
inc
pop
lock
push
and
push
lahf
push
mov
cld
decl
je
and
or
add
push
cmp
push
pop
adc
and
mov
fsubs
aaa
fisubs
iret
cltd
mov
fistps
jno,pn
xchg
ret
lret
and
hlt
jbe
in
cmp
data16
and
mov
sahf
adc
movsl
xor
jl
or
das
lock
mov
hlt
sub
outsb
xchg
stos
or
pop
pop
push
lahf
test
mov
icebp
shrb
push
dec
cli
inc
out
mov
lcall
jge
sbb
cli
add
cltd
ljmp
mov
sbb
test
mov
xchg
add
fsubp
inc
cmp
xchg
out
cmc
jno
decl
stos
loop
or
std
xchg
mov
cmp
mov
into
out
jno
inc
cltd
jmp
std
jle
pop
out
enter
les
push
mov
shlb
incl
mov
and
inc
das
jle
daa
pop
lcall
push
adc
mov
ljmp
jbe
pop
push
test
and
dec
push
mov
xor
cmp
mov
dec
loope
fbstp
hlt
decl
fwait
inc
fnsave
ret
test
adc
mov
mov
popa
mov
fbstp
pop
mov
push
sub
into
mov
add
rcrl
dec
ljmp
mov
inc
cli
scas
rol
xor
adc
jno
mov
outsl
pop
mov
sbb
jg
push
stos
mov
incl
xchg
iret
push
add
idivb
push
adc
lcall
orb
fldcw
out
mov
sbb
push
push
lret
lea
in
sbb
jl
cli
sub
pushl
pop
dec
in
aam
test
lea
mov
push
xor
test
sub
and
out
push
lcall
cmpsb
mov
jnp
and
aaa
popl
mov
rcrb
xchg
push
enter
cmp
ret
jmp
call
mov
pop
lods
push
lods
lcall
in
cmp
add
imul
fdivr
incl
xor
pop
dec
leave
inc
adc
shrl
mov
fs
mov
add
rorb
inc
mov
mov
dec
sub
incl
nop
cmpsl
aaa
std
mov
ret
jmp
int3
pop
lea
call
or
lcall
rolb
ja
lods
inc
mov
lret
push
mov
adc
fisttpl
ljmp
repnz
and
xor
gs
xor
fmulp
sbb
jle
xor
cmp
cmp
fcos
fcomip
dec
in
lret
mov
pushf
inc
mov
in
xchg
in
jb
mov
and
jmp
and
jo
outsl
mov
or
mov
jo
xchg
subb
fcomip
incl
or
ret
and
pop
out
dec
jg
cmp
decl
rolb
mov
popa
and
repz
adc
lret
mov
push
sahf
sbb
lock
call
test
push
pop
pop
sbb
fbstp
hlt
std
adc
je
or
mov
rol
sbb
jge
jl
push
inc
lcall
pop
sub
movsb
fdivrs
or
scas
xchg
push
fidivrs
jb
mov
xorb
cmp
inc
sar
jp
mov
roll
mov
mov
push
pop
or
pushl
mov
push
clc
and
inc
and
mov
addr16
ljmp
jl
ljmp
dec
push
add
mov
dec
add
xchg
or
push
stos
mov
mov
jecxz
out
ds
in
loopne
ljmp
shl
xchg
ss
sarb
in
inc
jp
sahf
add
pop
cmp
movsb
jns
inc
pusha
mov
push
insb
add
and
stos
std
pop
mov
loopne
adc
out
cmpsb
decl
dec
mov
sbb
xchg
xor
inc
jbe
push
push
cmp
fldenv
std
ljmp
jge
sbb
and
or
jmp
jl
fs
cmp
stos
decl
loop
xchg
ror
and
pop
out
mov
js
dec
mov
pop
or
jg
out
mov
stos
or
lock
or
dec
sbb
inc
fisubrs
dec
movsl
incl
scas
stc
xlat
scas
in
lret
mov
or
xchg
cmc
jmp
scas
inc
jge
mov
fistl
rcrl
pop
inc
pop
in
mov
mov
xor
bound
mov
lock
out
decl
xchg
inc
dec
out
orl
and
xchg
clc
sbb
int
sbb
pushl
and
lods
enter
enter
mov
and
pop
sub
push
jno
incl
inc
cmp
adc
test
mov
movsl
notl
lret
dec
daa
push
lret
mov
ljmp
inc
or
push
sub
or
jmp
out
add
call
xchg
clc
jae
pop
mov
and
bound
cmpsl
cmp
cs
jp
inc
xchg
ljmp
jnp
fistpl
mov
sub
lcall
nop
dec
test
incl
add
mov
loop
mov
dec
inc
pop
jle
mov
aad
pop
iret
js
xchg
mov
dec
mov
and
jnp
insl
rcll
sub
sub
loopne
popf
cmpl
popf
ret
add
lcall
loope
xchg
test
mov
mov
xchg
sbb
test
enter
pop
xchg
repnz
jnp
push
lods
aam
lret
pop
movsb
fisttpl
mov
call
insb
mov
pop
sahf
push
imul
mov
je
pop
pop
xchg
dec
int
ds
std
jmp
test
cs
sub
mov
loope
dec
xchg
gs
incl
out
pop
lret
and
adc
push
out
popf
in
sub
insl
and
gs
jg
add
add
mov
addr16
lret
mov
repz
lcall
daa
cltd
pushf
adc
jnp
xchg
xchg
or
add
sbbb
aam
bound
adc
xchg
and
adc
add
repnz
xchg
mov
jmp
sbb
ss
mov
int3
js
xor
pop
sub
sbb
ds
lcall
call
sub
inc
sub
jle
and
roll
into
test
sahf
adc
or
aaa
lcall
inc
push
cli
cmc
xchg
cmovg
lret
inc
or
call
adc
mov
jmp
mov
mov
mov
cmpsl
in
sarl
pop
jp
pushl
mov
push
mov
sub
dec
mov
out
imul
jle
clc
aad
adc
mov
int
es
fdivr
sarl
cmpsl
jne
xor
addr16
jmp
xchg
mov
mov
fldlg2
mov
xchg
cmp
pop
fdivrp
incb
fcomps
push
and
mov
push
shll
cmpb
lock
dec
cmp
jmp
out
adc
add
scas
ljmp
popf
sub
inc
movsb
std
call
jae
jg
sub
in
xlat
push
adc
pop
sbb
bound
cmpsb
mov
sbb
push
in
fcmovnbe
jns
cmp
cli
jecxz
cld
push
inc
cmpb
pop
into
add
mov
xor
vmovlps
mov
repnz
push
popa
mov
jecxz
push
bound
in
fcmovnbe
into
loop
or
mov
pop
cmp
cmp
faddl
hlt
je
rolb
mov
dec
jmp
insl
inc
loope
pop
sbb
rclb
aam
push
das
fsub
jns
fadd
jg
mov
out
rcll
and
sub
mov
lcall
pop
clc
in
std
add
jmp
movsl
je
out
inc
pop
jne
pop
and
clc
cmpsb
mov
dec
mov
outsl
dec
dec
ds
pushl
movsb
mov
push
pop
pop
inc
das
les
or
repnz
loopne
push
ret
psllw
fcmovnb
fimuls
incl
mov
dec
mov
adc
pushl
lock
dec
aas
and
fsub
mov
out
dec
dec
lds
decl
mov
leave
xor
adc
nop
les
rorl
sub
jb
dec
jecxz
outsl
stos
and
test
mov
cmp
mov
ljmp
jl
and
cs
sbb
mov
jns
push
sub
pop
inc
xor
test
sti
push
sahf
fwait
and
jg
pop
mov
push
pop
ret
add
sub
mov
jle
repnz
adc
mov
and
cli
in
shlb
and
cli
call
pop
inc
mov
lahf
mov
in
repnz
push
outsb
fimull
cli
call
loop
adc
pop
out
inc
outsl
aas
rcll
xchg
and
subl
ljmp
xlat
cmpsb
js
fcomi
jnp
fcmovne
inc
insb
pop
inc
mov
push
cmpsl
scas
xor
sbb
jmp
shll
js
adc
shr
test
ret
int3
inc
mov
add
push
push
adc
seto
ret
or
xor
out
into
and
xor
aad
jecxz
pop
lcall
xorl
lcall
jns
pop
push
pushl
pop
std
xor
dec
xor
xchg
mov
push
mov
out
js
mov
in
pop
jle,pt
mov
repz
inc
test
icebp
mov
sti
sbb
mov
cmp
pushl
pop
orl
add
sarb
dec
dec
and
dec
xchg
adc
ss
lcall
and
lcall
add
xchg
cmp
mov
jg
clc
dec
insb
aam
inc
incb
cmc
mov
inc
call
in
imul
mov
mov
fwait
xchg
xchg
pop
lret
int3
std
xchg
mov
frstor
pop
pop
call
mov
fsubrp
scas
mov
dec
arpl
or
push
gs
add
inc
ret
dec
mov
subb
outsl
repnz
sahf
add
mov
jg
stos
push
lds
idivl
mov
sbb
pop
adc
shlb
hlt
jge
lcall
adc
cmp
jae
fwait
mov
push
bound
loopne
sahf
into
mov
push
mov
call
or
pop
jnp
pop
pop
xchg
or
add
loope
or
imul
dec
jno
nop
add
xchg
mov
xorl
ja
dec
cs
jb
and
cmp
inc
xchg
icebp
dec
cld
call
mov
sarl
jnp
stos
sbb
lea
pop
push
ds
iret
dec
mov
cmp
sbb
push
sub
add
mov
clc
lods
sti
rcll
push
imul
lahf
cmpl
in
stc
dec
dec
sbb
popa
jecxz
cmpsl
cmpsl
xchg
mov
stos
lahf
sub
and
imul
cmp
out
cmp
cmc
and
push
inc
cmp
mov
negl
pushl
push
js
xchg
pop
add
test
pop
mov
iret
pop
mov
stc
outsl
clc
ljmp
bound
xor
jg
mov
mov
push
incb
xlat
push
lods
call
and
outsl
movsb
stos
shrl
fsubl
mov
aam
mov
fimull
cmp
dec
xor
xchg
call
push
popf
mov
repz
movl
testl
jl
jl
mov
cmp
cmp
imul
stos
xchg
test
push
xchg
ret
stc
scas
jge
cmp
test
sub
outsb
cs
mov
leave
enter
pusha
push
mov
mov
lcall
fcomp
jl
mov
pop
jg
jb
lods
jnp
mov
ljmp
jns
dec
inc
sbb
push
or
orl
push
repz
jecxz
xchg
pop
and
aaa
pop
dec
mov
and
inc
pushf
or
imul
lods
leave
in
in
mov
paddb
ds
aad
dec
mov
mov
cmp
xchg
push
icebp
pop
add
shll
sbb
call
adc
cld
lret
jmp
jmp
and
cmpsb
out
testl
mov
add
jmp
outsb
fistpll
dec
mov
in
jae
hlt
jns
jg
jmp
add
sbb
xor
inc
and
mov
incl
and
inc
xor
mov
pusha
stc
mov
jp
rorb
mov
decl
cs
lcall
call
sub
rdtsc
cmp
orl
cmp
cmp
mov
cmp
test
sti
xchg
and
or
inc
jge
mov
or
xchg
inc
inc
ret
xchg
inc
cld
orl
mov
mov
outsb
out
jne
sub
adc
mov
std
push
jns
jno
shr
mull
dec
into
cmpsl
out
push
stos
repnz
lock
xchg
sub
call
and
in
inc
xchg
out
adc
out
xor
and
fdivl
leave
pop
and
or
jecxz
lea
or
dec
aam
dec
lds
ss
test
mov
dec
dec
add
adc
ss
mov
movsl
add
insl
cld
push
jbe
push
xchg
mov
jo
mov
fdivrl
cs
jmp
pop
ficoms
mov
dec
inc
lods
lods
pop
and
push
scas
idiv
fdivr
xor
movlps
loop
and
int
daa
into
pop
es
jns
xor
lods
out
sub
sbb
mov
mov
cmp
into
xor
jae
xchg
orb
or
add
out
in
cmp
adc
incl
adc
adc
sahf
and
jmp
xchg
sti
addr16
inc
sbb
in
jmp
mov
pusha
cmpsl
shll
sbb
ret
xor
xor
mov
in
hlt
out
mov
fdivr
xor
jae
pop
mov
xchg
sub
fbld
xor
ret
mov
push
lea
mov
lret
sbb
push
rol
into
xchg
or
xlat
mov
arpl
jmp
sub
nop
fstp
jge
xor
insb
loopne
lcall
jecxz
xor
jp
jne
mov
not
xchg
into
mov
mov
ret
ret
std
pop
aad
inc
pop
enter
lcall
fs
leave
mov
push
call
inc
rolb
sbb
in
call
sti
cmp
rorb
sub
call
jg
imul
fwait
push
push
push
jb
lcall
pop
movsl
lds
inc
mov
cmpsl
push
jle
xchg
dec
sub
pop
movsb
jb
mov
pushl
and
arpl
movsb
loope
mov
inc
loope
jmp
cmp
dec
jp
incl
mov
sbb
mov
sub
jmp
popa
push
adc
lcall
test
les
jb
inc
leave
adc
addb
and
iret
cmp
ss
out
jmp
cmp
push
push
sub
movsl
lods
pxor
out
in
cmpsb
xor
into
pusha
mov
shl
cmp
xchg
cmpsl
pop
pop
test
jg
sti
push
and
jmp
fsubrp
add
dec
decl
mov
mov
jnp
jg
mov
das
push
ds
pushf
call
imul
call
into
cli
sbb
ljmp
or
subl
outsb
addb
icebp
ss
out
sbb
xlat
mov
mov
cld
mov
enter
into
push
xor
xchg
jl
xor
out
cli
pushl
dec
mov
nop
xchg
jne
call
test
scas
call
out
adc
cmpsb
pop
and
popf
lea
dec
movl
or
lods
inc
icebp
and
pop
mov
pop
movsl
mov
jmp
adc
jbe
out
cmp
mov
orb
fwait
inc
adc
pop
mov
jmp
js
insb
stos
or
inc
pusha
daa
sbb
in
dec
dec
loopne
mov
insl
stc
mov
into
aaa
add
lcall
mov
xchg
push
adcb
sahf
mov
andl
adc
in
sbb
xor
adc
imul
xchg
lret
pop
jno
stos
mull
xchg
pushl
and
push
leave
push
adc
mov
pop
aaa
mov
jbe
repnz
clc
rol
sbbl
subl
cmc
inc
das
orl
adc
fs
cltd
and
stos
jnp
dec
dec
movsb
pushl
push
xor
mov
mov
int3
push
rclb
out
jb
decl
scas
and
pop
pop
sbb
lcall
sub
pop
loope
dec
mov
jmp
ja
loope
jbe
jne
adc
arpl
lret
push
mov
sbb
decl
mov
lock
pop
dec
test
ficoms
push
mov
iret
pop
xlat
inc
add
jmp
faddp
xlat
cmp
cmp
push
pop
push
push
xor
mov
inc
movsb
push
lea
into
jnp
push
mov
out
mov
mov
mov
xchg
push
push
dec
adc
fists
jns
dec
xchg
mov
ljmp
jmp
lcall
sbb
subb
adc
adc
pusha
ljmp
jb
test
mov
pop
jl
cmpb
fwait
hlt
aas
lea
incl
loope
loope
push
sbb
loope
mov
outsb
pop
adc
loope
imul
add
imul
dec
add
das
out
incl
scas
jne
mov
ljmp
and
push
inc
clc
ret
inc
mov
cmpsb
nop
mov
leave
push
ljmp
leave
movsb
dec
push
adc
imul
jg
subb
pushl
jge
shrd
in
adc
add
pusha
sarb
mov
and
cmpsb
jmp
dec
sbb
adc
shlb
cs
push
sbb
les
lret
js
mov
cld
std
sub
mov
dec
dec
or
testb
xchg
in
inc
sbb
cs
jecxz
mov
ljmp
sub
push
pop
jl
lcall
adc
pop
jbe
add
leave
xor
jmp
mov
push
jmp
test
psraw
dec
cmp
cmp
ficoms
mov
sahf
xor
aam
shlb
pop
sahf
fcomip
std
stc
jne
mov
bound
push
dec
insl
or
lcall
inc
sar
pushl
cmpsl
sar
in
das
int3
dec
dec
gs
push
pop
incl
in
cld
in
push
into
push
fdivs
jmp
adc
cwtl
loop
rcll
stos
and
push
xor
clc
adc
dec
and
js
add
add
xchg
dec
ljmp
xchg
sbbb
mov
pop
cld
test
out
stos
jmp
mov
rol
dec
les
xchg
fsincos
jns
mov
in
sahf
pushl
std
dec
xchg
movsl
in
pop
sbb
out
jg
gs
fldenv
movsb
sub
adc
clc
ja
fs
iret
lods
es
subb
sub
decl
cmp
xor
xchg
jg
test
int
movsl
inc
jo,pt
ja
aas
mov
or
xchg
dec
dec
mov
jns
out
cmp
push
out
incl
not
fdivrl
cmp
dec
jge
mov
das
mov
sub
dec
js
or
ljmp
sub
xor
jnp
lods
or
dec
mov
push
pop
push
pop
repz
pop
out
rorb
cmp
xchg
jns
ljmp
cmpsb
lret
or
fcmovu
mov
nop
and
filds
mov
ljmp
ss
mov
dec
insb
sub
cli
xorl
or
pop
sbbb
cli
lret
loope
les
fisttps
js
jbe
shrl
jmp
lds
icebp
bound
adc
testl
cld
xlat
in
push
or
testl
lock
fstpl
frstor
aas
shr
test
add
cld
lcall
lcall
xchg
push
xor
mov
rcrl
and
push
aam
mov
in
jmp
jbe
adc
cli
xchg
mov
xchg
popf
out
lea
sbb
aaa
sbb
and
decl
lds
xchg
jp
das
rolb
es
push
out
add
mov
add
enter
jmp
cmpsl
clc
or
mov
cli
test
inc
push
loopne
mov
push
les
out
sbb
dec
xchg
pop
in
incl
sbb
data16
or
rorl
lret
roll
mov
jmp
aad
and
pop
in
lods
sbb
sbb
daa
ljmp
pop
fsubl
popf
in
sub
sub
icebp
popa
cmp
enter
push
stc
out
mov
loop
pop
add
pop
gs
push
popf
ljmp
jge
test
push
or
dec
inc
arpl
ret
adc
mov
call
aaa
movsb
and
mov
aam
dec
pop
into
cmc
mov
repz
dec
addl
cld
lcall
pushf
mov
mov
dec
xchg
xor
pop
jo
lcall
negl
out
enter
jns
xor
outsb
je
rcll
int
sbb
push
jle
enter
cmp
daa
xlat
ljmp
mov
ficoms
shrb
ss
fistps
lcall
ja
push
outsb
pusha
pushl
repnz
push
xlat
movsl
rcll
lds
fwait
add
es
mov
int3
stos
sbb
pushl
pop
mov
outsl
loop
inc
aad
rclb
popf
js
shl
sbb
mov
sbbl
adc
addr16
lock
fwait
adc
ljmp
daa
or
je
add
lcall
rclb
mov
push
mov
lret
iret
jl
xor
dec
jae
test
and
loope
pop
loope
lods
mov
mov
outsl
dec
pop
fcom
xchg
rorl
cld
adc
jno
jno
filds
std
cli
loopne
mov
dec
and
xchg
sub
mov
mov
jl
mov
adc
sbb
adc
loop
int3
decl
cli
dec
and
arpl
mov
or
fmuls
lcall
pushf
or
push
sbbb
and
mov
sub
ja
lds
test
decl
inc
dec
push
stos
ret
enter
and
daa
fadd
fwait
incl
out
adc
test
loope
loopne
mov
pop
icebp
push
stc
or
push
cmpsl
mov
dec
fisubl
ret
nop
and
lods
push
mov
pushl
cmp
aad
adc
ja
push
ss
sbb
add
xchg
xchg
mov
js
mov
adc
jecxz
shrl
dec
or
or
js
push
sub
mov
jg
jne
cltd
iret
pop
xchg
jle
mov
ljmp
imul
jae
cld
insb
add
inc
sar
hlt
in
mov
jno
in
movsl
xchg
and
jnp
sbb
pushl
inc
clc
ret
dec
or
add
push
or
inc
fdivrl
push
std
aas
add
jmp
add
stos
scas
push
pop
lcall
sbb
out
data16
ljmp
js
inc
out
lret
sub
into
pop
hlt
aad
loopne
lea
imul
aaa
std
lcall
add
xchg
cs
jae
fstps
sub
or
xchg
clc
fiadds
dec
incl
insl
movb
outsb
iret
jge
arpl
shl
insb
aad
xlat
leave
and
add
in
test
pop
xchg
jae
mov
mov
pop
or
xchg
sub
lcall
sbb
mov
push
sub
push
sbb
mov
pushl
sub
in
push
daa
je
cmp
lcall
xlat
paddd
popf
dec
repnz
mov
leave
and
jo
xchg
adc
cli
ljmp
and
jae
jmp
addr16
jbe
mov
outsl
in
ss
xchg
les
data16
sarl
dec
xor
mov
and
ficompl
scas
in
adc
or
ja
inc
dec
imul
fisttpll
pop
and
xchg
jmp
pop
adc
pop
lds
xor
sbb
insb
xchg
xchg
or
fs
movsb
hlt
outsb
mov
mov
divl
ret
shl
sbb
scas
push
in
iret
sarb
cmc
cmp
aam
push
incl
adc
dec
jmp
notb
imul
cmp
aaa
dec
mov
pop
mov
popa
hlt
leave
jp
push
jge
xor
jl
hlt
scas
repnz
test
subb
stos
push
sbb
lcall
in
sbb
mov
gs
adc
psllq
jbe
stc
rcll
push
cld
aaa
sar
push
add
adc
push
dec
sub
pop
cmp
inc
jmp
push
shl
cmp
popa
paddsw
es
int3
cli
scas
push
mov
push
mul
cli
push
and
xchg
sbb
loope
dec
insb
mov
sub
lods
ljmp
data16
loopne
hlt
data16
push
xchg
dec
jg
jbe
jnp
jmp
fwait
stos
loopne
mov
jle
sub
mov
and
xchg
lods
lcall
push
push
dec
out
ss
mov
pop
mov
shlb
fwait
ljmp
clc
jmp
push
xchg
push
test
pushf
hlt
addb
sub
cmc
sub
jne,pn
jmp
cmp
and
xor
cmp
mov
fstps
repz
mov
inc
mov
inc
mov
test
push
mov
push
in
push
out
and
and
dec
stos
in
pop
cmc
pushl
stos
or
sti
or
fs
dec
jg
fsubl
ss
pop
incl
and
mov
out
or
cmp
scas
jle
xchg
leave
stc
lcall
pop
xchg
xor
inc
inc
ficomps
fisttpl
mov
sub
mov
shrb
subb
cltd
fidivs
je
mov
cld
adc
xchg
ds
mov
push
aas
rcrl
dec
mov
dec
cli
dec
and
out
jge
fwait
lods
jmp
mov
jg
icebp
fisttpll
mov
push
ljmp
and
dec
sbb
idivb
xor
xchg
test
sub
xchg
cmp
cmpsb
clc
jo
sbb
inc
xchg
data16
lcall
shll
scas
jo
sbb
sbb
jo
js
cmp
add
ljmp
rolb
mov
icebp
xor
push
imul
test
cmp
mov
jp
pop
fbstp
mov
cmpb
scas
add
jae
sub
scas
ja
xchg
call
and
ljmp
dec
add
bound
inc
lret
sbb
dec
nop
mov
cld
dec
cmovge
add
dec
push
ljmp
lods
or
xor
cli
xlat
pop
and
sbb
inc
pushf
in
jg
mov
jb
les
fisttpll
sbb
enter
push
add
sub
push
adc
leave
mov
mov
xchg
push
sbb
fldt
sub
call
pop
fs
lret
cmpsb
bound
dec
scas
mov
xor
push
cmp
and
pop
mov
pushl
inc
sbb
loop
sbb
dec
jb
mov
hlt
in
jae
decl
sub
inc
dec
mov
dec
fucomip
push
push
in
les
dec
sbb
push
dec
add
sti
xchg
mov
in
push
jl
imul
sti
jmp
js
fstl
xor
ljmp
ja
inc
push
inc
negl
jne
cs
or
push
cld
sub
push
push
ljmp
cmp
cmp
xchg
insb
add
sbb
das
and
mov
pop
call
adc
lds
cs
mov
xchg
xchg
mov
add
sub
incl
xor
add
movsb
nop
cwtl
adc
xor
mov
clc
into
dec
repnz
push
mov
push
inc
xchg
fimuls
movups
dec
inc
xor
out
jnp
repz
out
or
mov
sub
outsb
xchg
cmp
shr
lods
es
sub
mov
lcall
dec
cmp
add
push
rol
xor
cmp
mov
inc
shrb
pushf
sti
adc
pop
ja,pn
mov
add
incl
mov
fimuls
mov
scas
dec
out
push
hlt
push
scas
pop
cmp
loope
movl
ss
enter
mov
or
pop
dec
leave
sbb
data16
add
push
cmp
ljmp
push
aam
nop
out
xchg
fmull
fcoml
push
mov
lcall
divb
mov
pop
inc
mov
xor
mov
test
scas
repz
sbb
add
into
mov
cmp
jno
jp
stos
mov
loope
stc
lahf
jge
mov
movsl
ds
jg
montmul
cmpsb
add
mov
dec
data16
jns
shl
hlt
sarl
jp
test
das
enter
cmc
dec
cmpl
inc
aaa
xor
xlat
nop
dec
das
les
mov
in
decl
lock
add
insb
pop
sub
push
int3
push
mov
pushl
dec
jp
pop
loope
cli
cmpl
sbb
mov
lods
bound
inc
cmp
clc
cmp
mov
or
nop
loopne
add
cmp
incl
adc
imul
mov
fsubrs
in
xor
call
jmp
cs
rolb
je
scas
add
divl
mov
inc
mov
outsl
jo
call
push
adc
or
insl
sub
out
pop
lods
mov
dec
xchg
mov
ljmp
lahf
xlat
mov
cmp
sub
cwtl
out
jbe
mov
loopne
cmp
cli
aas
dec
iret
mov
inc
push
decb
decl
mov
scas
lret
js
lahf
cs
jg,pt
jg
test
ror
outsl
movsb
cltd
push
and
aam
fwait
out
repnz
lcall
and
jge
jl
mov
sbbb
repz
les
sub
call
fstpl
sub
aas
jo
adc
cmp
into
lods
shl
ds
fcmovnb
mov
push
mov
cmpps
sub
insb
cmp
sbb
and
cmp
jb
inc
pop
adc
movl
jp
je
sbb
sbb
sahf
arpl
sbb
cmpsb
xabort
cmp
add
inc
incl
cmp
add
fadds
jl
cmp
pop
idiv
decl
loopne
adcl
sub
sbb
loope
dec
cwtl
in
cltd
jg
ljmp
sub
push
es
popa
cli
ret
sub
mov
daa
cmc
imul
dec
mov
xchg
adc
rcl
mov
jo
jbe
mov
pop
pop
push
pop
push
fnstcw
fidivs
jnp
js
xchg
sbb
inc
cmp
cli
lahf
jl
dec
dec
mov
xor
lcall
lods
gs
push
lods
and
sbb
call
push
sti
sub
mov
rclb
push
test
jb
mov
in
jmp
les
shll
jo
loopne
les
push
jno
int
test
sbb
mov
mov
mov
push
pop
subl
daa
add
xchg
lock
call
mov
xchg
pop
sub
cltd
pop
xor
ss
es
lcall
std
xor
movsl
addb
call
xchg
incl
data16
add
imul
push
jb
and
lret
daa
inc
sbb
nop
popa
scas
add
jmp
mov
sub
lcall
xor
push
sbb
cmp
jg
stos
jns
inc
stos
xchg
and
pop
and
loopne
add
mov
adc
jmp
movhps
ja
mov
imull
psubusw
ljmp
push
int3
xlat
sahf
jmp
in
xchg
pusha
cltd
adc
pushf
stos
xor
or
aas
adc
popf
popf
mov
sbb
out
inc
push
pop
loopne
shll
cmp
pop
insb
sbb
or
xchg
mov
add
cmc
cmp
lods
inc
mov
shll
sahf
pop
ret
aad
adc
lcall
lea
std
fucomp
call
jle
push
fs
and
in
or
mov
test
in
iret
movsb
mov
ljmp
insb
enter
sti
fcoml
xchg
cltd
xlat
in
push
mov
movsl
jbe
lcall
lret
psubusb
dec
jae
clc
leave
pop
sub
lcall
les
jg
jge
sbb
loopne
ljmp
adc
adc
lret
fcomip
push
mov
mov
out
movsl
jle
call
insl
faddl
inc
mov
xchg
sti
popa
lea
test
aaa
and
mov
adcl
jns
mov
adc
into
dec
mov
fisttpl
and
lret
out
sbb
jno
arpl
call
jns
xchg
push
iret
mov
call
pop
in
les
mov
aaa
imul
xor
fistpl
cmpsl
cmp
fbld
clc
fs
outsl
cmp
adc
adc
xchg
lahf
adc
orb
sbb
mov
jbe
mov
sub
jl
insl
out
in
aas
popf
pop
jae
inc
mov
fistpll
into
mov
lods
pushf
lds
push
out
roll
in
mov
hlt
sbb
fwait
popa
aad
call
jge
sub
gs
sbb
hlt
push
and
sahf
sti
inc
xchg
push
scas
rolb
sub
clc
in
mov
out
fnstenv
cmpb
xlat
xor
pop
cmp
lock
pop
dec
push
sbb
push
cmpsb
or
jno
add
adc
pop
shlb
mov
in
add
loopne
push
push
dec
mov
mov
push
ds
lods
xor
lods
cli
xchg
das
mov
sub
insb
and
xchg
lock
push
mov
aas
sbb
sbb
mov
cmp
adc
hlt
stc
test
iret
popf
mov
jb
mov
decl
imul
out
inc
inc
cmc
sbb
mov
inc
dec
push
enter
jmp
jle
and
popa
mov
xchg
cmp
repnz
sub
sti
push
cmp
mov
dec
push
mull
sub
rcl
call
and
mov
outsl
xchg
ljmp
or
pop
cmp
jg
out
je
in
outsb
aam
scas
pop
cwtl
cmp
push
arpl
icebp
dec
ja
jge
inc
pop
imul
into
cld
popa
clc
or
dec
or
or
or
adc
xchg
cld
outsl
cli
mov
pop
inc
xchg
push
icebp
imul
push
mov
mov
fstl
sub
es
popf
push
push
movsl
fisttpll
xor
sub
xchg
sub
push
mov
jmp
test
push
push
icebp
xchg
filds
out
fwait
test
fbstp
lcall
or
jo
ljmp
out
repz
push
xchg
or
pop
cmpsl
aam
mov
stc
xor
mov
lods
arpl
add
fcompl
mov
and
mov
and
and
pop
mov
nop
insb
out
jle
js
aaa
or
aas
jmp
mov
mov
bnd
in
xchg
mov
mov
add
mov
aad
or
push
dec
xor
push
int
or
xchg
xor
xor
mov
hlt
cs
das
mov
add
out
mov
pop
inc
lcall
popf
movsb
aad
sarb
out
sarb
mov
clc
movsb
ret
jns
mov
fld
cmp
sbb
pop
pop
jb
subl
and
sub
in
cld
inc
jg
sbb
sarb
dec
pop
pop
jle
ja
nop
mov
std
lock
lods
incl
push
mov
es
dec
mov
sbb
or
mov
fistpll
mov
or
incl
mov
popf
add
lock
dec
adc
jp
mov
scas
inc
xlat
imul
pushl
pop
add
aas
pop
and
pop
stos
mov
or
mov
clc
ljmp
lahf
inc
les
and
nop
or
xchg
mov
push
adc
ljmp
lea
add
and
mov
xor
out
jae
out
mov
jp
and
push
lock
rcll
repz
mov
fisubs
push
xor
jle
arpl
incl
cmpsl
sbb
cmp
rcrb
mov
xchg
sti
repz
stc
sub
jmp
jns
fsubrl
push
testb
pop
or
jne
xchg
inc
xchg
std
inc
sbbl
adc
fcomip
jmp
or
out
sub
mov
loopne
pop
shl
roll
cwtl
cwtl
inc
inc
shrl
pop
xchg
sbb
fcomi
jl
mov
sahf
jge
cli
scas
clc
mov
lcall
scas
sahf
aas
leave
enter
cmp
std
jmp
lret
roll
pop
roll
fwait
mov
outsl
mov
std
in
jle
mov
mov
push
pop
mov
add
jmp
test
jo
int3
das
js
inc
sbb
fwait
int
lds
jg
jp
jg
cltd
adc
jp
mov
dec
sbbb
mov
mov
imull
in
nop
mov
imul
jge
inc
mov
fsubl
outsb
dec
mov
mov
pop
loop
push
cvtdq2ps
fwait
out
sbb
repnz
jb
leave
xchg
aad
dec
enter
hlt
es
dec
movsl
cmp
mov
ds
sub
push
and
dec
add
cltd
stos
sub
mov
loopne
or
ss
jge
addr16
mov
into
mov
or
sarl
and
xchg
call
dec
repnz
push
pop
inc
cld
jmp
mov
hlt
xchg
ds
xchg
aas
dec
fidivrl
xchg
jb
xchg
dec
inc
cmp
mov
ljmp
rolb
inc
add
pop
scas
jb
add
inc
jno
or
jmp
call
lahf
xchg
push
pop
jno
add
xor
fs
push
xchg
in
mov
mov
mov
mov
mov
inc
jmp
outsb
fmull
pop
jno
dec
aad
cltd
xor
hlt
sub
jnp
and
or
test
jbe
inc
adcl
dec
xor
call
fildl
mov
scas
lods
stos
push
rcrl
fidivl
cltd
and
ljmp
out
push
pop
std
into
pop
inc
sbb
daa
repnz
mov
xor
sbb
cmc
lcall
mov
fidivl
lea
sbbl
mov
add
xor
stos
mov
clc
idivl
jno
mov
push
fbstp
cmpsl
pushl
mov
lds
lcall
lds
stos
pop
pop
shrb
pop
xchg
cmp
jg
mov
add
inc
xchg
insb
lods
test
mov
mov
push
insb
adc
push
pop
push
jle
jbe
data16
call
std
lods
pop
cmp
sbb
sub
xchg
mov
push
sbb
cli
fcomip
jmp
test
fs
xchg
mov
xor
das
enter
fldenv
xchg
and
mov
jno
mov
and
hlt
std
fistl
mov
js
adc
test
push
popf
sbb
pop
adc
xor
mov
incl
fdiv
adc
jp,pn
shll
test
mov
dec
aas
decl
push
movsl
iret
ja
bound
sub
popa
nop
mov
in
imul
cmpsb
decl
sbb
fsubs
cmpb
cli
call
mov
xor
int3
or
aad
xor
sub
pushl
std
in
sub
les
cmp
mov
ljmp
jb
dec
jo
decl
adc
sub
clc
out
js
inc
repnz
mov
push
sahf
ljmp
sub
fildll
cmpsl
adc
imul
inc
pop
inc
add
or
sub
sar
call
add
jmp
stc
fsubrp
pop
mov
and
fcomip
xor
icebp
jl
jns
addr16
mov
lcall
aaa
fcoms
ds
loopne
cmpsb
test
sahf
incl
sub
or
mov
test
mov
jns
les
ja
outsb
mov
pushl
xor
int
insb
jge
mov
xor
and
pop
out
clc
adc
dec
aam
fbld
push
jnp
in
insl
dec
rcrb
jecxz
ljmp
and
sub
inc
mov
call
test
dec
xchg
cmpl
xchg
mov
mov
sub
sbbb
jp
clc
imul
call
mov
fisttps
lret
iret
pop
adc
mov
nop
push
add
cmp
fsubr
xchg
jnp
mov
arpl
jl
mov
push
in
shr
xor
pushl
roll
jg
ret
iret
mov
cwtl
jnp,pn
ja
or
repnz
lcall
fildll
int
addb
dec
xchg
clc
and
xchg
gs
jle
call
or
jmp
push
out
push
cli
movsb
enter
shr
mov
sbb
lea
ljmp
jmp
xchg
ja
lcall
notl
shlb
xor
sub
das
fcomip
cltd
mov
in
mov
mov
mov
mov
jne
push
push
lret
xor
jmp
adc
lahf
jge
push
mov
je
insl
movsb
mov
mov
out
mov
mov
adc
push
cld
sbb
lret
or
loopne
std
jg
inc
sbb
test
push
xchg
lret
inc
int3
aad
cmp
jae
sahf
test
mov
jmp
fcomps
in
gs
add
xchg
jnp
inc
or
cmp
scas
addr16
ljmp
fisubs
fs
adc
pop
jp
push
mov
js
xor
cmpsb
sub
pop
shl
dec
push
hlt
nop
int3
push
ja
push
jo
sbb
xor
add
fbstp
jno
mov
scas
call
je
in
sbb
xor
aaa
adc
faddl
dec
incl
inc
pop
cmp
push
add
and
fisttpll
cmc
addb
cwtl
aaa
cltd
and
dec
or
fcomps
enter
popa
add
and
clc
inc
jmp
mov
inc
std
pop
addr16
ljmp
dec
sbb
push
leave
and
ret
ss
hlt
jnp
lcall
gs
mov
sub
pop
adc
gs
cmp
inc
cmp
push
sub
xchg
arpl
and
das
adc
cmp
lods
call
jge
push
sub
push
cld
call
popa
xchg
loop
mov
cwtl
xor
lcall
xor
mov
sbb
stos
push
and
sbb
inc
into
ljmp
lods
cs
jg
popa
cs
xchg
int3
mov
in
repnz
push
scas
cli
incl
leave
and
imul
xchg
ret
dec
and
sbb
insb
sbb
fcomip
push
in
jle
or
fcompl
insb
fisubl
mov
call
out
leave
push
and
stos
add
mov
xchg
scas
pop
shll
lea
jnp
and
pushl
or
call
adc
and
mov
jae
cwtl
mov
adc
orb
add
movsb
adc
pusha
test
inc
movsb
outsb
add
push
ret
imul
mov
loope
int3
ud0
pushf
das
and
iret
dec
bound
je
test
es
in
imul
mov
xor
insb
or
xchg
inc
jae
dec
pop
mov
add
mov
xchg
cld
rol
ret
cwtl
out
pop
loopne
incl
xor
mov
cltd
cmpsl
mov
outsb
lods
shrb
cmpsb
inc
incl
jo
fimuls
cmp
fsubl
andb
mov
addr16
push
jnp
dec
popf
ljmp
es
icebp
es
sbb
dec
inc
sub
push
gs
out
sbb
decb
fdivr
clc
out
sub
pop
xchg
sbb
xchg
sub
decl
fisubs
adc
test
cmc
hlt
out
movsl
xchg
cltd
inc
push
fs
nop
clc
inc
clc
sbb
and
stos
in
int3
jnp
fdivrs
pop
incl
filds
dec
ja
mov
das
add
and
push
stos
fisubs
cmp
or
jmp
push
sbb
xorl
push
and
dec
mov
inc
das
aaa
gs
cli
ljmp
cld
mov
bound
and
sbb
iret
jecxz
cmpb
mov
push
movsb
out
mov
lock
sbb
sahf
sar
bound
pop
jne
mov
out
sub
ret
fimuls
call
xchg
jns
xchg
inc
jae
add
mov
mov
mov
fisttps
push
jo
dec
jae
cwtl
fsubrp
repnz
call
pushl
add
in
pop
xchg
rorl
push
cmc
xor
ljmp
addr16
push
outsl
jecxz
push
into
test
in
fistps
adc
call
fdivs
gs
sub
out
cmp
cltd
sarl
pop
call
aaa
loop
movsl
das
jp
lcall
dec
call
lods
lahf
xor
mov
inc
adc
push
dec
insl
enter
scas
popa
call
ljmp
add
or
bound
sahf
mov
inc
jnp
or
fstp
mov
insl
add
lret
pop
ljmp
sbb
sarl
pop
push
mov
jg
pushl
cmp
or
mov
add
dec
loope
jl
inc
jno
and
push
inc
mov
stc
mov
inc
mov
pop
mov
test
sub
cmp
push
in
pop
cld
lcall
int3
inc
std
ja
jb
repnz
insb
mov
sti
adc
or
daa
out
out
pop
test
jmp
lods
outsl
xor
mov
jmp
out
cmp
lcall
hlt
lds
sbb
into
sbb
jmp
xorb
test
adc
cwtl
fisubrl
das
sbb
pop
dec
and
decl
push
fildll
cmpsl
push
push
jl
imul
xchg
add
jecxz
lcall
lret
aad
sub
iret
repz
push
repnz
sti
adc
stos
or
stos
inc
aam
ss
inc
xchg
inc
loope
jmp
cmc
cmp
in
pop
popf
xlat
insl
ds
insb
ret
ss
leave
sbb
aaa
xchg
or
insl
fildll
out
mov
add
sub
divb
sub
jmp
xchg
js
cmc
arpl
sub
mov
cmpsl
leave
and
into
xchg
xchg
jl
mov
ret
call
cmp
aam
fildll
and
addr16
ja
inc
mov
imul
sbbb
out
cli
cmp
xor
das
xor
adc
cmc
lods
xchg
leave
cmp
daa
insl
xchg
fistpl
push
sub
dec
xchg
and
fistl
mov
jl
call
scas
cmp
das
xchg
xor
mov
je
mov
repz
sub
mov
nop
xchg
and
insl
cmpsb
mov
addr16
jp
push
sbb
inc
dec
xor
movsl
lods
cs
lea
or
jle
call
mov
rol
aaa
push
push
xor
push
fstpl
sub
clc
xor
jl
add
pop
inc
inc
jbe
push
cmp
fstpt
jmp
mov
jge
nop
adc
aas
loopne
mov
fldcw
or
or
add
lcall
shll
or
jle
mov
xchg
dec
add
inc
pushf
push
adc
shlb
decl
out
mov
mov
rorb
pop
rolb
cwtl
ja
incl
xor
dec
xchg
addl
mov
add
popf
loope
les
clc
jbe
in
das
sub
decl
mov
std
sub
mov
cmp
rdpmc
nopl
push
cli
fsin
mov
call
ss
test
cmp
shll
std
ljmp
ret
lock
mov
mov
sbb
mov
pushl
push
jp
into
aam
sbb
xchg
ljmp
xchg
mov
inc
xchg
insb
nop
jg
fdiv
repnz
rcr
pop
jns
insl
sub
pusha
push
js
sti
nop
mov
mov
das
jp
aad
aaa
addr16
ret
pop
outsb
xor
jge
testl
pop
rorb
xor
add
ljmp
in
decl
xchg
jle
bound
mov
lret
adc
mov
imul
push
fdivr
jmp
xchg
add
stc
loopne
fldz
inc
nop
outsl
fnsave
aad
pop
std
arpl
ds
ljmp
lods
xchg
jg
popw
lahf
lods
inc
mov
sbb
adc
and
xchg
xor
cmpsb
sbb
int
jg,pn
mov
inc
scas
xlat
aad
call
mov
shlb
pop
pop
cmp
lret
sar
pushl
mov
inc
outsb
les
mov
cld
aaa
mov
mov
sbb
lcall
mov
aam
add
sbb
aad
std
enter
xor
push
notl
push
aaa
jae
lcall
mov
imul
push
lods
fsubl
mov
inc
lods
outsl
js
stos
insl
xchg
adc
lret
dec
mov
call
scas
cmp
sub
in
incl
push
stos
in
ret
inc
ja
mov
aaa
xchg
rorl
out
pushl
call
and
lcall
test
xchg
mov
decl
jl
jp
imul
xchg
pop
sub
mov
pop
inc
mov
push
mov
dec
pop
sub
clc
test
xchg
cwtl
int3
in
popf
sbb
xor
stos
pusha
rcr
aam
sbb
mov
sbb
rclb
ret
dec
lret
pop
add
jno
push
jmp
imul
adc
decl
xorl
jecxz
gs
mov
ss
cmp
xchg
dec
mov
sbb
test
sub
jmp
ds
into
imul
dec
iret
addr16
inc
push
call
push
add
push
test
shrb
movsb
popa
ljmp
mov
imul
stc
inc
idivl
je
push
pop
jne
and
or
call
push
outsl
mov
pop
add
mov
out
addr16
test
aam
in
jne
fnstcw
ljmp
sarb
or
inc
xchg
iret
and
xor
ror
je
or
add
call
in
add
ret
xor
pop
sub
adc
je
cmp
mov
jg
xor
cli
cltd
jne
jge
imul
icebp
in
scas
or
outsb
sub
ljmp
out
add
shufps
scas
mov
sub
stos
pop
add
popf
and
fmull
addb
ljmp
mov
mov
rcrl
sarb
cmp
outsl
adc
adc
sub
or
cmp
push
insb
fdivs
xchg
sub
call
and
push
jp
push
sbb
push
out
icebp
or
push
cmp
call
fmuls
cmc
xchg
or
ret
andb
mov
sti
fidivrs
ljmp
adc
sub
adc
sbbl
push
xor
sbb
cmp
pop
cmc
decl
and
ret
sbb
cmp
inc
int
ret
add
shll
in
jbe
dec
clc
inc
pop
mov
sbb
dec
test
retw
fstp
clc
jnp
sahf
pop
pop
jp
lret
ljmp
xchg
mov
into
sub
subl
lcall
enter
mov
ljmp
test
pop
data16
inc
push
and
mov
loopne
jmp
inc
xor
jl
xorl
xlat
mov
addl
rcrb
imul
fiadds
lcall
andb
push
cs
outsb
out
mov
rorb
fbstp
adc
sahf
decl
xor
jge
push
outsb
lahf
sbb
mov
shlb
shlb
call
vpmuludq
mov
pop
cmpsb
jbe
cltd
pop
sub
sahf
xor
lcall
bound
inc
jne
sbbb
popf
adc
jg
inc
cmp
insl
xor
jnp
ljmp
xchg
fcompl
pop
int3
mov
add
cltd
aad
cmp
push
lret
cmc
out
jmp
jnp
mov
insl
inc
sbb
rcl
xor
int
rcrb
add
xchg
jb
adc
inc
xor
iret
push
or
jmp
mov
add
arpl
adc
icebp
filds
add
rolb
sarl
push
mov
xlat
add
repz
lahf
or
jg
pushl
loopne
jo
fdivl
fmuls
cmp
adc
in
popf
idivb
sub
cmp
in
test
sbb
dec
cmp
cli
int3
xchg
stos
add
subb
push
lcall
push
mov
lock
mov
cmp
lret
mov
mov
inc
push
add
in
lcall
ldmxcsr
dec
ja
dec
cmp
dec
mov
les
pusha
xor
test
mov
fcomps
fimuls
out
clc
out
jb
mov
mov
xchg
and
decl
lods
hlt
xor
mov
mov
js
lea
cmc
and
dec
sbb
xor
mov
xchg
mov
pop
push
cld
sarl
rcrl
movsl
or
push
jbe
cmp
outsl
lods
sbb
jno
push
or
outsb
cli
fidivrs
lret
mov
cli
ds
push
xor
cwtl
flds
fistpll
or
xchg
lock
sub
mov
in
jmp
pop
cs
jl
xchg
call
cmpsl
inc
stos
cmp
pop
inc
test
xchg
popa
mov
cmp
call
popa
imul
inc
push
and
lahf
jmp
into
xchg
loopne
xchg
inc
aas
and
xor
jp
push
hlt
decb
mov
fadds
lea
and
loopne
pusha
fwait
mov
add
stc
push
lods
lcall
lahf
inc
inc
lods
jb
dec
std
add
jp
mov
jbe
and
jmp
mov
cmc
test
add
orl
ret
and
in
add
dec
fsub
rclb
call
ud0
unpcklps
repz
xchg
cltd
pop
cltd
es
rcr
jnp
jno
aas
les
jbe
or
mov
xor
xchg
das
fdivp
sub
cld
mov
cmp
jno
jns
enter
cld
ss
loopne
call
ljmp
lahf
xchg
hlt
cmp
pop
adc
mov
mov
out
clc
inc
jo
imul
imull
push
arpl
sbb
jle
pushl
jbe
push
not
loope
mov
push
bound
test
mov
mov
lds
jecxz
xchg
push
rolb
stc
xchg
sub
out
xorb
inc
lahf
cld
sti
cmp
ret
test
pushl
les
shlb
lcall
test
cmp
inc
movsl
lcall
subl
inc
movsb
aas
add
rcrb
call
sbb
hlt
sub
sbb
mov
in
mov
lret
mov
cwtl
pop
rolb
scas
test
inc
mov
inc
sar
dec
sbb
mov
cli
sbb
dec
xor
call
jp
aas
fwait
mov
mov
jge
jnp
enter
gs
fstpt
ds
decl
lret
nop
pushf
push
ds
insb
sbb
lods
inc
add
rorb
and
inc
in
push
test
push
out
dec
sbb
and
rolb
sti
pop
call
jge
cmp
shll
cmp
inc
jecxz
out
add
jo
adc
out
outsl
pop
insb
andb
loopne
popf
sub
jmp
mov
icebp
inc
mov
dec
sub
addl
or
lds
je
xor
int
and
add
int
fcmove
arpl
jmp
inc
sbb
sub
xchg
jne
mov
aas
inc
inc
mov
dec
addr16
push
fs
cs
movl
push
pop
and
mov
jns
stc
push
or
add
xor
into
stos
jmp
jo
add
cmpl
enter
lcall
mov
loop
test
mov
lret
jg
rcll
dec
orl
pop
mov
loop
jg
xchg
dec
pop
cmpsb
mov
adc
aaa
int3
jo
xor
adc
imul
ljmp
or
loop
jl
cmp
iret
cmpsl
jge
mov
ja
repnz
clc
xchg
ret
ret
dec
sarb
int3
cs
rclb
call
rcll
ljmp
mov
sbb
adc
mov
sub
add
pop
cmp
cmpsb
mov
xor
push
pushl
mov
sarl
mov
mov
mov
jg
cltd
mul
adc
mov
pop
inc
push
mov
or
das
in
in
rcr
pusha
xchg
aas
mov
mov
movsb
fucom
fisttps
in
dec
and
pop
sbb
stos
sub
mov
jecxz
in
xchg
and
xor
pop
mov
mov
inc
nop
adc
stos
mov
mov
mov
xchg
loop
jae
dec
idiv
sbb
xchg
fadds
mov
lock
mov
call
and
in
and
insb
adc
mulb
incl
push
inc
negb
adc
ds
cmpsl
dec
and
ljmp
jb
mov
call
movb
fistl
jg
jp
aam
push
in
jmp
aas
int
xchg
lret
xor
xor
mov
adc
cmp
jmp
push
daa
jb
lods
cmp
xchg
js
pop
jg
dec
pop
fildl
ss
sbb
mov
mov
dec
mov
pushw
inc
std
xor
enter
sbb
pop
cmc
call
les
dec
sti
stos
rcrb
ret
nop
add
andnps
pushl
cmc
cltd
xchg
pop
mov
test
or
sub
pop
sub
test
subl
cwtl
lahf
jle
pop
cmp
mov
adc
dec
or
sahf
clc
and
call
and
or
jno
pop
dec
sbb
cli
inc
jge
or
mov
pop
mov
test
cmp
mov
into
pushf
outsl
jno
mov
scas
inc
ja
mov
and
aaa
sbb
scas
outsl
lcall
rcr
xor
push
add
mov
inc
stos
dec
in
outsb
jnp
int
push
clc
sbb
rcrb
pusha
es
faddp
jmp
dec
out
cmp
xor
nop
inc
cmc
mov
mov
nop
movsl
fdivrs
ds
inc
leave
jg
je
xchg
in
cmpsb
ds
cwtl
aaa
mov
decl
aas
cmpsl
arpl
cmpsb
dec
out
dec
xor
call
call
ds
cli
jno
popf
mov
inc
xchg
hlt
sbb
sub
in
jno
decl
icebp
imul
loope
rolb
andb
mov
mov
or
mov
dec
lret
cmc
add
mov
stc
in
call
lods
sbb
jae
mov
push
add
push
fbld
mov
adc
sub
pushl
jno
cltd
add
imul
fcomps
cmpsl
ljmp
pushf
cs
pusha
cld
call
jecxz
mov
pop
push
mov
jl
dec
pusha
popf
inc
stc
int3
jbe
loopne
in
fsubr
dec
cmp
decl
aam
or
ret
int3
pop
lock
xchg
dec
dec
fcomip
push
or
pextrw
push
or
jge
jbe
jmp
pop
addr16
shll
fisttpl
fldcw
xor
sub
cmpsb
cmpsl
in
adc
je
inc
sbb
pusha
dec
pop
sbb
xchg
mov
jmp
inc
outsb
ljmp
ficoms
or
lods
outsb
add
and
scas
jmp
ds
add
sub
xor
pop
mov
adc
push
loope
ljmp
pop
aad
push
mov
and
scas
inc
pushf
fildll
xchg
test
xchg
rolb
sbb
xor
lock
ret
cmpl
push
scas
and
shrl
mov
mov
scas
clc
and
lcall
aam
adc
cld
test
mov
mov
ljmp
push
adc
pop
shll
cmp
dec
out
jmp
jno
movsb
mov
pop
ds
outsl
pop
cld
pop
nop
mov
cmp
push
repnz
fildll
mov
mov
or
rolb
ja
ss
outsl
movsl
fcompp
enter
jae
dec
mov
inc
dec
bound
push
inc
jg
mov
add
outsl
dec
add
sub
insb
mov
sti
cmp
mov
pop
je
jp
push
add
inc
lahf
sbb
shlb
decl
arpl
movsl
popf
imul
push
cmc
movsb
negl
decl
jl
rcl
jl
mov
jl
insl
xor
aam
orl
ja
push
or
mov
fcomps
shll
adc
insb
les
outsl
or
or
and
sbb
call
fldlg2
addr16
out
lods
int3
arpl
scas
push
repnz
add
fstps
jg
stc
cmp
jp
aas
in
push
mov
sahf
arpl
test
cmp
add
call
and
adc
pop
add
push
sub
and
fildll
cwtl
mov
or
rclb
lock
decl
mov
dec
mov
sarl
mov
lahf
inc
fcomip
pop
cwtl
push
movsb
and
inc
mov
cli
mov
cmp
pop
mov
cmpsb
fstps
shrl
inc
xchg
adc
xor
xchg
pand
outsl
and
aam
sub
aam
sbb
push
mov
inc
fbstp
cld
xchg
es
sub
shll
loop
mov
aad
pop
call
xchg
push
xchg
jle
adc
cld
pop
or
xchg
mov
je
clc
in
movsl
jb
lcall
xor
push
jle
nop
in
mov
add
cltd
jne
rolb
out
popf
or
jg
subl
pop
pop
mov
jmp
xchg
add
xchg
adc
mov
pop
cmp
xchg
jmp
in
cs
in
xchg
xchg
dec
test
aam
mov
hlt
sub
pop
jecxz
mov
and
jge
sti
push
loope
inc
outsl
pop
in
dec
mov
std
decl
bound
jmp
std
jecxz
lcall
int3
fwait
call
ret
push
cmp
testb
jnp
insb
mov
mov
fwait
add
scas
add
aad
test
sub
mov
pxor
inc
push
jl
lea
and
add
cmp
je
cli
ljmp
in
cli
or
fldenv
subb
mov
in
and
aam
in
ljmp
std
es
pop
dec
xor
mov
lock
in
xor
jo
and
and
faddl
add
dec
stos
fisubs
lods
xchg
inc
mov
daa
inc
inc
sbb
das
xor
mov
adcl
fs
xchg
cltd
cwtl
je
jbe
pop
fwait
ljmp
gs
into
dec
js
xor
shrb
sbb
push
pushl
scas
pop
out
jo
rorl
inc
std
or
pop
ljmp
cmpb
add
mov
and
xchg
cmp
jnp
dec
sub
in
lcall
andw
movsb
stc
or
call
jg
cmp
imul
mov
out
jp
dec
xchg
mov
adc
jl
test
decl
pop
push
lahf
sti
and
cmpsl
mulb
dec
jmp
cwtl
pusha
inc
out
insl
mov
arpl
fsubs
bound
mov
fistpl
cli
add
cmp
mov
in
add
ljmp
sub
jmp
inc
xor
lret
cmp
mov
cmc
or
call
sub
push
test
sbb
xchg
stos
movsb
cs
popa
cwtl
and
cmp
scas
call
andl
cmc
mov
pop
or
aaa
pop
ret
jbe
fiadds
decl
and
in
out
jno
out
scas
sub
aaa
xchg
adc
pop
xor
out
aam
sub
test
rcr
xorl
loopne
cmc
ficoml
jmp
pop
es
sub
jmp
ds
int3
mov
dec
mov
into
pop
scas
in
add
repz
push
scas
clc
lcall
or
xchg
mov
adc
mov
dec
cmp
call
cld
je
adc
xor
ffreep
lret
ret
scas
mov
sti
faddl
push
jo
sti
jmp
cmc
stos
sbb
aam
cmp
sbb
shll
push
loop
ss
mov
jl
jg
test
push
jmp
mov
imul
cwtl
enter
mov
pop
loopne
pushl
mov
and
rclb
jne
mov
decl
repz
incl
popa
scas
shll
or
and
insl
jmp
pop
ss
jl
aas
sar
incl
out
sub
inc
cmpsl
xor
mov
mov
push
mov
mov
mov
lea
enter
adc
mov
mov
dec
dec
dec
adcl
or
fdivl
xor
sbb
inc
pop
and
mov
call
inc
fwait
xor
rcrb
cs
fcompl
sub
xor
decl
orb
pop
lret
jnp
aam
push
push
ja
push
xor
xchg
stc
aaa
cmpsl
xor
lcall
inc
out
imul
mov
mov
ja
lcall
call
sbb
dec
sub
mov
xor
shl
jecxz
sub
ljmp
push
cli
ret
daa
mov
mov
shr
jg
sub
push
mov
and
mov
fcomip
arpl
out
adc
mov
nop
cmp
mov
inc
sbb
adc
jmp
push
fildll
iret
fwait
ret
jle
or
mov
pop
adc
sbb
shlb
sbbb
push
dec
repz
negb
test
leave
jg
mov
decl
in
cmpb
imul
nop
rcl
or
insl
pop
lahf
pop
dec
or
shll
ljmp
push
and
dec
or
loopne
jge
shll
push
scas
mov
xor
ljmp
jl
xor
pushf
lods
in
add
and
jo
aaa
stc
pop
add
sub
mov
pop
ljmp
sarb
loopne
lcall
ror
xor
push
inc
loopne
stos
dec
push
pop
loopne
jb
call
xor
adc
cmp
test
int3
loopne
adc
inc
mov
cmpsl
adc
lock
pushf
push
roll
sub
mov
or
dec
ficoml
xchg
jmp
sbb
pusha
je
xchg
divb
stos
pushf
mov
iret
lret
cs
sub
lcall
repz
xchg
cmp
cmp
es
adc
sub
shr
movsb
jle
push
fs
push
loope
jmp
stos
cmp
mov
push
mov
hlt
stos
cwtl
insl
je
dec
enter
lahf
inc
cwtl
outsb
ljmp
shlb
scas
sahf
ret
push
xor
ret
sti
mov
daa
xor
mov
push
pop
test
push
pop
test
add
cmpsb
xchg
dec
sub
mov
lret
mov
xchg
xor
mov
lods
mov
inc
call
inc
jb
jg
inc
leave
mov
xchg
adc
movsl
out
cmc
mov
xor
pop
xchg
xchg
pushf
inc
mov
sahf
ljmp
sbb
das
cmp
arpl
cmp
and
sub
cmp
clc
aad
dec
int3
std
pop
adc
loopne
arpl
insl
pop
jp
in
jbe
mov
cmp
hlt
xorb
daa
sbb
rolb
or
mov
in
nop
jecxz
out
dec
xor
fcomip
push
inc
mov
xor
push
sub
fdivrs
push
sub
xor
jmp
out
test
jne
jp
mov
jg
push
mov
mov
xchg
jnp
test
scas
shll
negl
arpl
inc
inc
sbb
lods
xor
lcall
sbb
lea
add
mov
push
in
iret
jle
mov
jbe
mov
hlt
jmp
add
ljmp
int3
in
testb
mov
mov
jg
ljmp
fidivrl
add
jb
adc
mov
cli
and
inc
adc
add
fmulp
lods
push
nop
add
sbb
adc
inc
addr16
outsl
call
fisubrl
sub
dec
sti
mov
out
popf
fdivl
call
out
fcoml
push
ljmp
ljmp
sub
pop
aam
arpl
sbb
mov
jecxz
mov
movsb
test
call
inc
aam
rsm
xlat
xorl
fsub
push
mov
hlt
dec
in
lret
out
clc
ljmp
pushf
mov
fcomps
sbb
xor
xlat
sub
scas
xchg
decl
mov
mov
pop
xchg
cmc
dec
cwtl
jns
sti
icebp
out
xor
cwtl
push
pop
or
roll
data16
push
cmpsl
mov
jg
aam
push
rolb
or
xchg
jae
mov
addr16
sti
push
adc
jg
pushl
cmpsl
adc
imul
sbb
ljmp
mov
sub
push
cld
call
adcb
adc
dec
inc
pusha
sbb
pop
mov
dec
mov
ljmp
popf
addr16
ja
pop
sbb
in
jg
mov
rolb
push
push
out
xor
xchg
jecxz
and
and
sub
mov
cmp
pop
enter
pushl
jne
rcll
adc
sahf
mov
addr16
mov
inc
adc
in
lea
or
ljmp
adc
aas
ret
fidivrl
je
lods
mov
xor
mov
cmp
fbstp
sti
xchg
xlat
test
lret
jecxz
xor
and
movb
inc
lahf
leave
ficomps
adcb
xchg
decl
mov
movsb
mov
daa
xorl
shl
shr
stos
add
cltd
and
loope
xlat
xchg
inc
cmc
or
cmc
insl
mov
cmp
jmp
add
arpl
decl
push
lcall
decl
sahf
arpl
out
test
imul
mov
xchg
ds
ljmp
cmpsb
rcrb
jne
mov
in
jne
add
mov
popf
shll
jg
cmp
dec
imul
andl
test
aas
imul
dec
out
call
add
fnstenv
jmp
mov
test
xor
adcl
leave
repz
jmp
rclb
sarl
inc
and
jl
cmpsl
mov
test
add
inc
shlb
in
fsts
fistl
jl
repnz
mov
incl
rclb
cmc
jp
mov
mov
mov
push
repz
insl
mov
loope
pop
dec
push
outsl
leave
repnz
mov
and
decl
pusha
add
jle
push
je
sub
mov
mov
stc
lock
hlt
insb
test
cmp
cmp
mov
ficompl
lcall
aas
cmpsb
in
xor
xchg
aad
adc
stos
jp
insl
sbb
push
push
mov
out
xchg
mov
mov
int3
push
jne
push
ret
clc
mov
push
out
negl
pop
pop
pushl
clc
jl
adc
ret
or
adc
push
cltd
jbe
sbb
pop
bound
jmp
repz
jo
fisubrs
dec
fldt
shlb
dec
movsb
cmp
aaa
cmp
fimull
dec
add
xchg
pop
pop
and
cmp
in
xor
sbb
mov
xchg
dec
movsb
pop
pop
push
xor
call
rclb
roll
jp
xchg
xor
and
out
dec
inc
push
pop
jle
sub
imul
scas
popf
push
jmp
xchg
mov
clc
xchg
push
mov
insb
out
inc
push
xchg
mov
or
fisttpl
es
pushl
mov
mov
cli
loopne
mov
sub
popf
jo
inc
les
mov
pop
icebp
incl
pop
addr16
scas
push
ds
or
shrl
jp
or
fildll
sub
call
and
pop
mov
outsl
cld
mov
xor
test
inc
add
jns
xchg
or
jmp
int3
mov
int3
add
dec
sbb
jbe
or
out
cmp
int
fwait
jbe
sahf
or
jmp
mov
clc
mov
or
push
jnp
ljmp
cmpsb
sbb
and
in
call
mov
pushl
push
arpl
nop
ret
shlb
and
jne
adc
pop
inc
add
and
pcmpgtw
pop
add
imul
addb
imul
cmp
incl
pushf
mov
and
cmp
mov
js
or
mov
jg
add
pop
dec
leave
rcll
pop
test
roll
pop
dec
orb
adc
inc
test
mov
mov
add
adc
jle
movq
add
nopl
into
shll
jns
mov
in
pop
and
mov
jnp
xchg
movsl
push
daa
add
out
stc
fwait
push
xchg
dec
and
cmpsl
push
and
cs
push
movsb
jg
movsb
push
movsb
inc
scas
push
stc
mov
and
push
test
and
imul
push
push
inc
pop
pop
add
mov
pop
sbb
mov
sbb
add
mov
pusha
scas
ja
in
sbb
mov
adc
and
adc
mov
insb
or
lret
imul
negb
push
sub
lret
xchg
mov
mov
jbe
fstps
fdivs
mov
stos
pop
stos
mov
jo
jb
ss
add
mulb
shll
add
outsl
push
shll
push
fidivrl
iret
outsb
or
push
cs
adc
jns
out
jge
fisttps
fists
xorb
ljmp
movsb
push
add
mov
or
jae
shlb
mov
pop
rorl
out
push
push
push
add
jne
push
aam
jle
push
add
mov
sub
ss
pop
dec
add
pop
neg
sbb
data16
inc
xchg
fnsave
add
push
push
shlb
lret
fcmovnbe
cmp
stos
aas
add
ja
push
mov
xlat
jne
add
ja
push
pop
mov
sub
xlat
ja
js
push
or
fidivrl
push
jp
jp
inc
push
fidivrl
lds
ja
fldl
cs
mov
ret
jmp
ljmp
fcmovnbe
fisttpll
in
xchg
sub
xchg
xor
or
push
setbe
xor
fstpt
cwtl
aaa
push
lcall
xchg
sahf
in
push
cmp
pushf
cmp
popf
xchg
fst
insb
fistpl
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
repz
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
ss
out
mov
xchg
out
out
add
mov
or
outsl
aas
fldt
or
or
test
test
lods
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
int3
pop
pop
adc
lods
add
pop
add
add
pop
mov
insb
pop
mov
add
scas
insl
adc
pop
lods
pop
pop
adc
and
adc
sbb
repnz
sbb
scas
scas
scas
scas
sbb
sbb
mov
and
mov
movsb
imul
mov
add
mov
shlb
and
mov
lock
and
mov
mov
pop
and
movsb
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
insl
push
mov
cmp
pop
aaa
cmpsb
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
push
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
inc
shrb
jg
sub
push
sbb
push
and
imul
sbb
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
mov
push
jb
cs
xor
mov
add
jne
outsb
pop
jbe
dec
sbb
and
jae
push
mov
xchg
jo
sti
or
mov
inc
mov
cmp
mov
inc
add
jae
xchg
jp
out
inc
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
cmp
jle
bound
mov
mov
inc
aas
out
push
sahf
mov
insb
add
outsb
add
xchg
cmpsl
mov
push
test
cmpsb
dec
push
dec
push
movsb
das
pop
mov
jae
add
jb
shll
outsl
pop
xlat
pushf
push
testl
pop
add
fwait
imul
lcall
outsb
mov
xchg
lcall
sahf
adc
jg
jbe
fistpl
imul
mov
int
stos
push
add
and
es
js
mov
testb
mov
shrl
insb
pop
outsb
lret
repz
outsl
ror
push
ds
adc
aam
sbb
jg
add
xchg
fisttpll
lock
pop
mov
mulb
add
les
push
es
bound
out
arpl
push
loopne
iret
sahf
mov
jb
call
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
repz
mov
fldt
faddl
jge
dec
adcl
sbb
addl
mov
push
test
test
sbb
test
mov
push
xchg
nop
and
pusha
out
shr
in
xchg
lock
sub
sub
fwait
testb
xchg
das
push
xchg
repnz
insb
insl
mov
push
cmc
sahf
xor
lcall
sbb
mov
mov
or
aam
jle
push
cmpsb
scas
jo
test
sub
sub
shrb
into
shll
lgs
int
mov
mov
mov
or
sarl
push
aad
jle
data16
add
add
push
dec
and
add
sbb
add
mov
mov
fstpt
out
femms
or
or
or
es
testb
filds
adc
push
add
add
fisubrl
in
sbb
add
mov
adc
sbb
xchg
push
mov
and
sbb
add
jle
mov
add
and
jle
mov
loopne
ds
mov
aas
and
sub
xor
lcall
or
nop
cmp
cmp
or
mov
pusha
adc
inc
jbe
orl
inc
inc
jle
cmp
scas
xor
dec
mov
mov
aas
adc
ds
xor
dec
inc
test
fiaddl
cmp
mov
ds
add
adc
ds
mov
ds
lods
stos
test
cmpsl
mov
add
test
lret
fidivrl
lods
lcall
sub
sub
add
add
mov
sub
dec
and
inc
mov
jg
pop
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jmp
nop
cltd
mov
mov
nop
test
aas
xor
pop
xchg
jns
jle
dec
lcall
scas
jnp
jbe
jb
jae
jo
outsb
pushf
sti
add
insl
push
lds
push
rolb
add
add
add
or
out
or
push
std
mov
cli
cmc
repz
dec
xor
aas
add
incl
xchg
pop
cmp
test
add
mov
add
mov
push
mov
push
mov
add
cmc
repnz
mov
xchg
addr16
add
pushf
add
mov
push
in
lcall
mov
push
arpl
mov
push
push
std
add
jae
js
into
xchg
add
adc
clc
cmpsb
mov
xchg
mov
incl
in
and
out
or
sub
sub
xchg
push
sub
nop
sub
mov
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
iret
insb
fst
es
push
lret
loopne
push
decb
inc
sub
std
into
fdivrp
int
or
add
jg
jle
jge
or
nop
xchg
dec
dec
dec
dec
dec
add
jg
pop
or
add
push
dec
or
adc
cmp
adc
pop
mov
dec
dec
dec
inc
add
push
adc
add
or
inc
fmuls
pop
cmovg
inc
push
dec
sbb
imul
adc
inc
inc
adc
sbb
jg
aas
mov
adc
inc
ds
cmp
cmp
cmp
decl
jmp
and
sbb
adc
adc
sub
xor
pushl
cs
xor
sub
sub
push
test
rorl
and
push
pop
subl
mov
mov
andl
mov
push
outsl
sbbb
pop
add
sbb
outsl
loopne
inc
fimuls
adc
cs
jmp
fists
fstpl
inc
sahf
push
jo
outsb
sysret
adc
or
mov
and
pop
stc
sysret
adc
lock
pop
xor
hlt
xorps
jg
ja
mov
outsl
or
addb
sahf
jg
inc
adc
test
test
into
jg
insb
add
mov
cli
test
inc
mov
pop
jg
add
inc
jle
cli
add
adc
push
xchg
jg
pusha
add
mov
inc
lock
pop
das
sti
mov
leave
sar
scas
inc
pop
jo
dec
sti
jg
xor
sbb
jg
sbb
push
add
add
loope
cmpsl
idivb
pusha
adc
jg
or
stos
add
pop
orl
mov
or
out
roll
push
jg
dec
les
xchg
test
orl
data16
mov
inc
incb
or
pusha
mov
call
adc
xor
xor
push
incb
and
fidivrs
jg
inc
arpl
adc
sbb
add
loope
push
jbe
sbb
jno
sub
jmp
sbb
scas
incl
add
jmp
pop
xor
in
jle
lret
imul
adc
adc
add
sbb
lcall
popa
mov
add
mov
addr16
add
push
adc
lea
data16
mov
add
jg
and
cmpsb
incl
addb
mov
movb
sub
xor
jg
pop
push
pop
je
mov
insb
push
inc
cmpsb
ljmp
stos
lea
pop
add
daa
push
fcmovu
mov
aaa
pop
pop
add
jle
add
lock
stos
pop
inc
push
cmp
adc
mov
sbb
out
or
or
push
dec
xchg
push
bound
mov
scas
popf
add
mov
mov
in
mov
arpl
xor
test
pop
push
mov
insl
xlat
out
incl
push
dec
stos
test
jmp
test
ljmp
xchg
sbb
jle
ljmp
dec
dec
mov
fnstenv
add
push
jne
test
jbe
out
or
push
push
jp
mov
into
mov
js
dec
jbe
pop
add
fnstsw
mov
dec
enter
push
outsb
test
mov
iret
out
cmp
test
fs
ljmp
ljmp
fisttpll
xor
ja
push
movsl
test
mov
dec
neg
xchg
mov
push
mov
inc
out
or
sahf
inc
out
fwait
adc
scas
cs
aas
in
fnstenv
popf
inc
push
pushf
cmp
xchg
nop
imul
jnp
fisttpl
xchg
xor
xchg
xor
sub
sub
nop
adc
out
mov
ss
cs
or
insl
sahf
mov
xor
push
xor
call
mov
inc
push
jg
pop
fnsave
xor
or
mov
sahf
movb
and
int3
nop
es
lcall
push
pop
mov
or
aad
cltd
push
xchg
movb
bound
pop
ja
divb
push
push
imul
pusha
add
add
or
push
orb
pop
inc
xlat
jno
add
or
shlb
iret
or
sub
push
adc
pop
scas
inc
sahf
out
orl
repz
mov
mov
xchg
inc
and
cmp
lock
cmp
xchg
cmp
cmp
icebp
mov
xor
in
add
mov
push
add
incl
push
inc
sbb
leave
shrl
dec
push
mov
adc
mov
push
push
sbb
xor
or
cli
push
mull
adc
sti
xchg
std
add
out
or
and
add
sub
incb
add
pop
xchg
iret
add
outsl
pop
lcall
or
mov
sub
mov
pop
das
pop
push
adc
callw
shll
pop
add
popa
sti
daa
std
out
jb
orl
out
lcall
or
mov
sti
ud0
cmp
mov
pop
arpl
ljmp
mov
decl
or
lcall
mov
ljmp
rorb
mov
dec
or
push
lcallw
sub
adc
decb
mov
test
jns
xor
sbb
adc
punpckhbw
or
iret
jle
adc
inc
mov
inc
sti
out
paddq
push
lcall
add
pop
dec
incl
pop
or
push
outsb
push
ljmp
add
or
push
je
sub
pop
lds
adc
push
std
jmp
insl
or
push
add
or
andb
mov
decl
jg
dec
aaa
push
popa
cli
idiv
loop
add
imul
adc
xchg
decl
push
xor
incl
fcmovbe
inc
xorps
aaa
mov
xor
push
shll
adc
jne
roll
dec
hlt
pop
and
sahf
ret
incl
lcall
ljmp
lahf
inc
inc
dec
mov
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
stos
int3
jnp
fwait
push
popf
inc
cmpsb
dec
dec
inc
negb
dec
mov
shlb
int
insl
push
shrb
rcl
outsb
shrb
fwait
dec
mov
jb
inc
mov
push
iret
insl
jmp
daa
outsl
pop
imul
push
push
dec
stos
xchg
dec
push
cmp
lcall
xchg
dec
dec
pop
add
adc
push
repnz
jmp
insl
popf
cmp
aas
decb
xor
fs
xor
data16
leave
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
jnp
leave
cmc
xchg
ja
dec
dec
sar
pushl
and
incl
int3
jb
test
ficoms
leave
les
mov
push
add
or
outsl
aad
or
faddl
jge
push
rep
iret
data16
jp
or
jl
or
push
fimull
fdivrl
jge
jg
es
fldcw
xor
jbe
adc
fidivrl
push
dec
push
mov
fistpll
push
repnz
jae
pop
fidivrl
push
mov
or
out
add
in
add
int3
outsb
nop
mull
dec
adc
pop
mov
stc
sbbb
rclb
outsl
mov
push
adc
adc
int
out
in
push
addb
jnp
lahf
dec
es
addl
orb
aas
lds
jg
and
xchg
out
push
sub
iret
in
xchg
mov
cli
pushl
clc
xchg
stc
push
jb
jmp
fnstsw
mov
icebp
dec
pop
cld
sti
ffree
and
jno
sub
jg
or
mov
movl
je
daa
jg
mov
mov
jns
dec
loope
xchg
cld
xchg
pop
jle
dec
es
xchg
aaa
cld
jge
add
and
mov
jg
dec
stos
push
andb
sarb
mov
dec
and
movsb
push
jmp
decl
pushl
push
fsub
pop
shlb
push
int3
fstl
adc
mov
fidivrl
cmp
jbe
mov
cmp
pop
nop
cmp
scas
jmp
test
ds
or
lcall
jns
mov
subb
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
stos
in
dec
jg
out
mov
or
cmp
inc
add
ja
cmc
in
daa
cmc
inc
or
cvtpi2ps
add
inc
and
loop
mov
xchg
mov
push
push
inc
or
fsts
popf
shr
add
mov
or
add
push
inc
pop
dec
test
and
or
fwait
call
adc
adc
sub
dec
push
test
pop
idivb
add
push
sbb
push
aaa
imul
insl
jnp
or
push
push
movl
inc
push
adc
nop
push
add
mov
adc
mov
and
push
pop
sbb
sub
push
loope
or
gs
jo
add
cwtl
sub
push
add
push
dec
pop
push
inc
ret
and
xchg
sub
loope
imul
lods
insb
loopne
scas
enter
scas
add
dec
test
add
movsb
xchg
inc
in
or
imul
jo
pushf
xor
das
std
sbb
add
popa
imul
mov
pop
or
ret
sub
push
fadds
sbb
adc
push
pusha
add
pop
xor
aad
add
in
shlb
jmp
ret
xor
xor
cmp
add
insl
popa
or
faddl
in
jnp
mov
push
popa
shlb
xor
into
xchg
jno
jb
sbb
insb
adc
jae
or
push
add
adc
filds
inc
imul
mov
gs
adc
push
pop
and
lea
popa
add
push
push
pop
mov
negl
lret
stos
lcall
lahf
push
and
push
test
inc
mov
xor
xchg
testb
xor
push
outsb
dec
push
outsl
push
or
and
jnp
sti
xor
pop
sub
mov
fwait
and
inc
mov
xchg
bound
pop
dec
insb
out
adc
jbe
cmpl
loope
sbb
add
mov
jne
fcmovnb
shll
in
in
test
and
fwait
add
pop
and
inc
mov
xor
or
lea
cmp
pop
fmuls
arpl
popf
mov
adc
sbb
nop
arpl
push
mov
mov
xor
inc
sti
cmpsb
or
insl
pop
push
jl
addb
xchg
pop
pop
xorb
cmp
or
pop
mov
ret
add
aam
das
negb
lret
es
dec
rcrl
cmp
dec
in
push
push
insb
sbb
mov
push
lahf
lods
pop
or
xor
cmp
dec
sub
and
aam
jbe
dec
outsl
dec
nop
xchg
mov
inc
and
in
sbb
xchg
leave
ss
cmp
cmp
xor
and
rcll
add
lcall
cmp
arpl
pop
aad
inc
jecxz
and
mov
ficoml
mov
dec
add
jbe
mov
mov
add
mov
aad
loopne
lea
xor
subl
xor
push
jp
pop
inc
test
enter
jo
jae
xor
call
rolb
push
mov
mov
lods
pop
test
popa
mov
leave
arpl
in
sub
sbb
adc
or
test
test
xchg
inc
jg
add
xchg
mov
inc
hlt
test
cmp
adc
mov
icebp
xchg
gs
add
dec
push
jne
cmp
insl
and
mov
int3
js
loopne
mov
arpl
mov
arpl
adc
xchg
data16
or
pop
pop
sub
push
shrb
sbb
xor
sub
mov
imull
push
mov
inc
push
push
pop
imul
mov
rcrb
cmp
dec
mov
sub
mov
jnp
cmp
inc
dec
jnp
fstps
push
inc
rcrl
adc
cs
inc
dec
inc
insb
addb
popa
rcpps
jb
or
pop
mov
inc
inc
jno
icebp
push
jo
add
inc
fists
test
push
pop
mov
sbb
nop
fcmovu
dec
insb
sahf
daa
push
popl
lods
fs
push
outsl
jo
jb
mov
push
fwait
push
mov
pop
nop
push
pushf
dec
cmpl
jae
mov
mov
sarl
call
imul
push
sbb
insb
xchg
dec
movsb
data16
push
les
std
std
aaa
inc
or
cmpb
inc
pop
lock
xchg
xor
mov
adc
or
jne
outsb
inc
sbb
pop
sbb
sbb
pop
and
and
test
outsb
dec
rolb
arpl
lods
mov
sub
shlw
push
js
loop
fidivs
lcall
dec
add
sbb
mov
cmpsb
imul
sub
xor
jnp
or
push
adc
or
mov
fidivl
es
cmp
add
inc
fnstsw
sbb
or
insl
and
imul
fisubs
inc
jo
sbb
inc
cwtl
or
test
push
stos
daa
nop
out
inc
es
ret
mov
push
push
imul
jg
add
add
inc
imul
test
push
fs
lods
inc
jecxz
addl
sub
scas
add
xchg
les
fs
ret
gs
sbb
add
rcll
sarb
test
and
jno
sbb
out
loopne
inc
gs
jno
adcb
arpl
xlat
mov
in
sbb
pop
loopne
push
jge
ret
scas
shrl
sub
push
ss
ret
adc
sbb
stos
lret
cs
insb
sub
fcmovb
outsl
inc
inc
xor
add
dec
pop
lret
inc
lock
sub
scas
mov
push
hlt
mov
add
mov
dec
rcrl
pop
xlat
adc
or
sbb
or
push
jg
mov
mov
cmp
rcr
push
enter
nop
and
pop
xorb
and
lds
mov
cmpsl
inc
ret
adc
test
cmpsl
adc
pop
add
push
mov
mov
mov
xchg
aad
insl
dec
inc
cmp
push
inc
push
inc
daa
movsl
and
nop
push
xor
add
mov
mov
arpl
xchg
test
pop
xor
push
adc
xor
cli
xchg
cwtl
jb
inc
adc
sbb
mov
nop
fs
mov
inc
fdivrs
sbb
dec
and
inc
cmp
inc
cmp
mov
fs
out
xchg
jne
pop
push
cmp
jnp
mov
add
hlt
cmpsl
insl
inc
sub
lods
xchg
sbb
mov
pop
lods
mov
jecxz
or
xor
add
loop
fisubrs
mov
sub
inc
push
push
inc
sbb
add
faddl
icebp
sub
sbb
pop
push
or
idivl
and
jbe
mov
pop
mov
imul
adc
cmpsl
dec
dec
ja
imul
shll
add
aaa
lock
fiaddl
out
sub
sbb
mov
inc
ss
fimuls
dec
lea
push
cmp
and
loope
sub
push
push
or
scas
std
call
inc
and
cmp
or
sbb
add
add
and
jmp
outsl
imul
or
cmp
adc
add
push
add
push
or
idiv
push
add
adc
mov
sbb
push
xor
daa
add
pop
mov
or
push
or
ficoms
xor
pop
push
adc
push
inc
pop
adc
neg
add
push
sub
push
push
inc
sbb
sbb
cs
or
lcall
cmp
sub
or
sbb
add
xor
gs
decl
aas
push
add
add
adc
cmp
std
add
sub
sub
and
sbb
std
data16
add
or
push
or
or
add
mov
ss
sbb
subps
inc
pop
sbb
push
sub
jg
in
or
and
sbb
or
sbb
add
sub
sbb
cmp
fbld
lods
add
adc
adc
sbb
shll
test
in
and
and
pop
test
push
adc
sbb
push
or
and
sbb
or
sbb
fildl
push
and
adc
dec
mov
enter
cmp
mov
mov
pop
mov
in
sbb
aas
cld
sub
cmp
pop
or
in
wbinvd
push
ljmp
xchg
pop
adc
jbe
xchg
mov
xor
add
or
xor
add
push
xor
xor
or
cmp
outsl
ljmp
daa
aas
sub
and
sub
or
cmp
add
push
jmp
aas
xor
dec
cs
ds
push
bswap
add
push
call
das
adc
adc
or
push
push
lods
adc
adc
or
lea
push
pop
aaa
adc
adc
adc
daa
adc
or
pop
sbb
sbb
or
or
es
mov
xchg
daa
cmp
ljmp
and
or
inc
and
or
add
mov
call
sub
or
or
or
pop
adc
and
xchg
or
or
outsb
sbb
lock
push
hlt
out
call
sub
sub
jg
lock
cld
ja
lret
dec
lock
inc
sbb
xor
das
xorb
clc
mov
lock
or
inc
pop
and
and
push
sbb
lock
push
push
adc
push
inc
adc
or
cmp
or
push
sub
adc
aaa
jo
or
or
adc
incl
pop
and
or
push
sbb
xchg
jb
xor
cmp
adc
sti
incl
ja
xor
jp
cmp
adc
sub
jg
mov
lock
adc
lock
add
adc
push
jle
mov
lock
orl
push
or
adc
or
adc
jecxz
mov
daa
push
aaa
mov
or
xor
mov
outsl
dec
adc
out
mov
lea
sub
fisttpl
push
std
cmpsb
outsl
fdivl
je
movsl
push
sbb
lock
add
push
jle
push
pop
cld
or
adc
add
inc
mulb
sbb
xor
dec
xor
aam
push
jae
testb
addr16
push
push
push
and
inc
push
cld
stos
negb
adc
inc
mov
add
lcall
push
or
cmp
or
mov
add
cmpsl
or
dec
inc
jno
pop
icebp
outsb
fadd
rcll
xor
bound
adc
inc
mov
outsl
jg
clc
add
insl
fmull
and
pop
adc
cwtl
and
push
or
cmp
adc
shl
adc
push
and
add
adc
call
adc
cmp
adc
jno
xor
outsl
xchg
and
adc
and
adc
xchg
mov
or
or
jb
ljmp
push
pop
pop
imul
lods
xor
sub
and
lock
jmp
or
adc
inc
cs
scas
lock
call
cmp
add
ss
cmp
arpl
adc
cs
jecxz
or
and
pop
xor
xor
daa
cmp
mov
call
xor
femms
push
sbb
sbb
adc
aaa
and
or
aaa
jl
test
sbb
lock
adc
lock
or
out
fdivr
call
and
jge
dec
jnp
jne
and
adc
sub
outsb
sbb
xchg
adc
and
sbb
xor
adcb
das
adc
lock
add
jb
dec
push
data16
sub
push
cmp
push
xchg
push
sbb
loopne
xor
adc
xor
push
pop
pop
and
inc
lock
add
out
lcall
sub
add
inc
jg
adc
ss
mov
cmpsb
mov
fdivs
rolb
sbb
adc
sub
push
push
add
add
lock
push
sub
sub
pop
pcmpgtb
ret
mov
sub
xchg
sbb
xchg
jle
adc
sar
lahf
inc
push
inc
xor
and
xor
add
ret
add
push
or
lret
add
or
sub
adc
dec
xor
add
in
outsb
adc
push
and
push
add
fists
dec
inc
and
and
loopne
lahf
mov
and
pop
ud2
adc
lret
ljmp
dec
sarl
sub
aaa
push
cmp
adc
sub
adc
shrl
scas
adcb
movsb
mov
push
jne
and
inc
adc
push
out
xchg
add
sbb
sub
add
push
and
testb
or
or
mov
daa
mov
or
sbb
loope
outsb
add
inc
and
movsl
or
ljmp
ja
ds
sbb
cmp
loopne
jae
fildl
cld
inc
and
pop
aad
or
and
out
call
and
sub
push
add
inc
push
sbb
adc
es
add
push
pop
adc
daa
pop
adc
cli
lret
mov
shll
aaa
dec
or
inc
push
and
test
je
mov
push
adc
dec
pop
pop
dec
xchg
daa
sbbb
inc
add
push
lcall
push
adc
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
jl
outsl
in
mov
and
sbb
add
adc
mov
in
pop
sbb
add
lock
add
sbb
addr16
pushf
sbb
call
pushf
nopl
sbb
push
movhps
sbb
sub
fistpl
or
cmp
lock
or
or
dec
sti
in
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
add
mov
mov
js
mov
or
inc
adc
aas
bound
adc
rorl
scas
xor
ljmp
xor
sbb
pop
add
push
push
pop
push
sbb
or
push
adc
pop
aaa
and
es
aas
enter
lcall
inc
cs
pop
sbb
sbb
sub
adc
lock
lock
add
das
cli
push
cmpsb
add
add
pop
or
add
orb
jmp
pop
ss
xchg
adc
cmp
adc
pop
or
and
lcall
push
sahf
adc
adc
sbb
cmp
unpcklps
cmp
outsb
clc
decl
sub
or
and
inc
or
ret
sbb
adc
pop
icebp
adc
or
or
sbb
pop
cmc
pop
sbb
fidivl
jbe
aas
adc
push
push
sub
adc
int3
dec
or
mov
jb
fmuls
dec
test
out
imul
outsb
adc
inc
in
dec
lock
xor
out
jo
incb
xchg
pop
sbb
leave
add
pop
sbb
jnp
push
xchg
sbb
dec
lock
add
jbe
pop
sub
clc
lcall
cmp
or
dec
das
cmp
cmp
lret
cmpsb
inc
add
mov
add
xor
lock
lock
ret
and
add
imul
xchg
dec
xor
pop
or
decb
sub
push
pop
adc
mov
adc
inc
mov
rorb
or
jne
sub
adc
sub
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
pop
dec
jmp
mov
mov
and
sub
decl
mov
or
daa
push
cs
sub
or
sbb
jg
sub
mov
or
adc
pop
daa
or
dec
prefetch
lock
and
pop
push
xchg
mov
adc
pop
sub
pop
add
sbb
or
mov
xor
xor
pop
icebp
jg
xor
or
adc
testb
adcb
ret
add
adc
push
subb
jmp
and
wbinvd
push
adc
inc
adc
fildll
rolb
scas
xor
sbb
nop
jg
xchg
cld
inc
sbb
and
shlb
sbb
sub
inc
inc
cmp
out
cli
mov
sub
cmp
mov
xor
popa
pop
sbb
aaa
sub
ret
es
arpl
dec
adc
incl
and
sbb
inc
cmp
pusha
pop
pop
jl
call
xchg
testb
adc
adc
outsb
js
dec
mov
adc
or
imulb
bound
xor
inc
push
jg
dec
ret
sub
inc
xor
pop
lock
xor
push
xor
test
or
xor
ja
mov
add
sub
push
or
push
das
xchg
cmp
fcoms
jecxz
aas
push
mov
inc
pusha
push
lcall
xor
or
dec
pop
add
inc
cmp
fcompl
mov
adc
pop
pop
mov
je
bound
push
or
sbb
jb
push
sar
mov
adc
es
and
or
scas
in
decl
adc
and
sub
or
adc
sbb
pop
sub
data16
xor
sbb
add
andl
mov
sub
xor
sbb
adc
adc
push
sub
dec
dec
add
bnd
jbe
add
sub
pop
ret
push
xor
lock
add
repnz
and
add
xor
adc
push
inc
inc
sub
das
sbb
scas
sub
mov
add
and
inc
and
leave
xchg
push
adc
sti
inc
push
sub
push
aaa
dec
adc
or
mov
sbb
aas
adc
adc
pop
cmp
and
sbb
outsl
mov
or
sub
xor
adc
add
xor
lea
adc
jle
sbb
sbb
jle
adc
sarb
adc
pop
adc
pop
pusha
sar
call
or
and
adc
sub
cmp
sbb
in
das
adc
adc
and
add
inc
dec
adc
sbb
shll
sbb
and
inc
and
jb
jge
pop
sbb
or
inc
and
pop
or
or
push
inc
popa
dec
xchg
add
xor
cmp
sar
or
je
pop
cmp
cmp
jp
ffreep
adc
or
inc
or
pop
pop
insl
dec
lds
clc
pusha
adc
inc
clc
xor
cld
or
or
sti
arpl
insb
mov
jnp
mov
inc
push
mov
or
cld
incl
test
cmpsb
daa
push
arpl
sbb
sbb
and
cld
add
dec
cmp
adc
or
fisttps
jne
ds
adc
cmp
ret
jmp
imul
pop
sbb
and
push
dec
fmuls
pop
add
ds
rorb
xchg
or
or
negb
loopne
add
lock
xchg
mov
adc
mov
sub
fistpll
adc
sbb
inc
or
adc
push
push
adc
add
add
mov
popa
push
sub
aaa
pop
jb
add
inc
adc
adc
sub
pop
popa
lahf
pop
sub
mov
adc
and
and
loope
clc
es
inc
adc
cmp
sub
sbb
sbb
ficomps
or
ret
cmp
data16
cmp
sub
push
pop
icebp
stos
or
or
push
es
cmp
sbb
data16
xor
adc
dec
pop
and
lds
add
push
aaa
cmpsb
inc
aas
add
bound
cmp
daa
cmp
and
jae
sbb
push
and
call
fildll
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
std
mov
xor
and
push
cmp
pusha
add
sub
push
sbb
paddd
push
sub
sbb
dec
mov
sbb
pop
lcall
cmp
sub
sbb
cmp
add
rcr
hlt
ljmp
insb
inc
cmp
mov
faddl
sub
sub
aaa
sbb
aaa
pop
xor
add
inc
nop
sbb
xor
mov
and
push
mov
mov
or
sbb
push
push
pop
adc
pop
or
rorb
push
dec
push
ljmp
jl
das
push
pcmpgtw
or
lahf
add
jo
push
leave
lea
add
mov
xchg
or
add
das
dec
sbb
mov
aam
adc
xor
movsb
mov
adc
das
jl
add
fldl
push
or
out
mov
mov
or
mov
js
data16
or
pop
and
testb
sbb
lock
sbb
push
inc
clc
mov
xchg
add
lock
lock
add
sbb
sub
pop
arpl
dec
iret
dec
push
dec
pop
sub
sub
dec
xchg
jmp
pop
and
aad
lea
push
popw
pop
movsb
jo
mov
or
aaa
cltd
push
inc
adc
push
movhlps
or
mov
add
xchg
jmp
inc
add
push
push
bound
lock
jne
scas
cmp
or
cmpsb
and
adc
cs
or
sbb
sahf
push
cld
cmp
push
adc
or
inc
sbb
sbb
xor
adc
daa
pop
push
dec
or
and
sbb
sbb
jmp
out
arpl
sahf
inc
sbb
xor
jo
imul
incb
cmp
sbb
adc
or
pop
int3
or
or
or
and
xor
outsl
pop
aam
add
or
sbb
sub
sub
mov
push
ret
js,pn
push
xchg
sub
pusha
xlat
into
add
or
adc
and
test
lahf
sub
es
or
or
pushf
mov
pop
adc
rolb
xchg
push
and
neg
mov
push
sbb
sbb
xor
addb
dec
sub
push
inc
sub
sbb
inc
jo
ud0
sub
mov
adc
or
jno
and
xchg
cmpsb
cltd
add
add
notl
xor
sbb
cs
mov
add
aas
cmp
or
or
gs
enter
push
add
fnstsw
adc
and
add
bound
and
sub
iret
mov
or
aam
std
dec
cltd
shl
filds
mov
pop
add
push
leave
add
sbb
negb
adc
outsl
fiaddl
or
or
lods
es
pusha
enter
scas
xchg
movd
and
fidivl
movlps
push
or
jg
lahf
bound
lock
dec
xor
add
pop
ret
dec
add
sbb
lock
add
pop
mov
or
xchg
pop
mov
mov
mov
xor
fs
cmp
and
push
dec
dec
mov
loope
das
adc
or
pop
push
push
and
sbb
fmull
dec
je
push
and
enter
clc
adc
add
popa
pop
mov
lret
lods
inc
outsb
repnz
std
push
dec
add
sbb
mov
jle
cltd
lock
jl
inc
rolb
adc
addl
or
jo
pop
lock
sub
and
dec
or
push
xchg
mov
add
pop
std
or
mov
add
lock
hlt
jmp
shl
add
adc
pop
and
les
xor
call
sbb
sbb
push
sub
jg
sbbl
pop
sub
ss
cmp
or
xor
test
push
out
clc
add
mov
mov
sub
sbb
movsl
add
inc
outsl
cmpsb
add
adc
push
les
pop
cmp
mov
adc
sbb
pop
or
push
adc
and
xor
push
mov
fwait
sub
and
adc
lock
xor
pushf
or
add
add
lock
ret
xor
outsl
out
and
shll
xchg
sbb
mov
sbb
add
cmp
sub
inc
push
sbb
sbb
jbe
out
clc
pop
xor
xor
sub
dec
dec
push
mov
xchg
push
sub
in
mov
dec
sub
and
inc
les
mov
and
xor
push
and
outsl
outsl
add
imul
dec
xor
inc
sub
or
push
sub
dec
xor
sub
fcomi
xor
ds
dec
push
and
or
insl
mov
sarb
into
sbb
pop
lret
pushl
and
cmp
sub
orl
xor
decl
pop
shl
xor
cmp
sub
sub
and
xor
jg
cmp
dec
xchg
xchg
pop
dec
push
push
push
lret
xchg
cmp
movsl
xor
mov
lods
mov
sub
cmp
pop
enter
call
cld
xor
aas
dec
jne
fs
cmp
test
lods
cmpl
outsl
push
dec
mov
lock
add
cwtl
sub
lcall
test
xchg
xchg
cmp
and
mov
jle
sti
in
cmp
cmp
xor
cmp
xorl
lock
or
dec
inc
add
mov
add
in
mov
push
push
sbb
xchg
lock
shrl
lcall
sub
add
push
stos
mov
add
push
add
lods
cmp
adc
dec
push
mov
cwtl
pop
aam
adc
inc
and
mov
add
push
in
push
push
add
or
jbe
inc
xor
or
or
int
outsb
or
inc
cld
test
pop
push
mov
add
push
push
add
xchg
sbb
or
add
insb
add
lock
rcrb
insb
fwait
adc
push
or
sub
test
les
aam
mov
lock
or
mov
in
ss
or
mov
add
les
stos
mov
shlb
add
dec
add
mov
sbbl
movsb
sub
mov
jmp
dec
or
pusha
dec
inc
and
aad
aam
sbb
or
adc
in
fcmovnu
negl
daa
adc
adc
or
mov
mov
sbb
mov
adc
test
mov
adc
mov
and
xor
or
inc
xor
adc
adc
or
mov
inc
mov
adcb
add
push
xor
push
in
add
xchg
jbe
adc
cmp
mov
mov
adc
and
pop
mov
mov
lret
rclb
pop
sub
mov
mov
push
pop
push
push
mov
sbb
sub
fimuls
push
cmc
stc
leave
xchg
xor
fisubs
cmp
shl
jae
add
lcall
add
push
adc
mov
sbbb
push
add
insl
int
sbb
sub
adc
insb
fsubrp
mov
data16
xor
cmp
pop
ljmp
and
add
xor
and
mov
adc
sbb
or
sub
insl
out
insl
in
outsl
mov
sub
jno
lidtl
stos
xor
sbb
in
out
rcrb
mov
repz
sbb
pop
cltd
pop
in
shll
pop
jge
mov
pop
pop
incl
fnstenv
jae
and
or
mov
sub
push
ja
cltd
cmc
mov
insl
sbb
xchg
ja
add
jae
cmp
inc
pusha
lahf
and
in
and
mov
pop
js
push
or
and
xor
les
or
mov
call
sbb
fldt
orl
andb
sbb
pop
jnp
sti
insl
sbb
pop
sbb
or
cmpsb
mov
push
cmp
stos
pop
add
mov
and
push
sub
pop
dec
sbb
and
or
loope
pop
xlat
mov
jne
mov
call
sub
adc
ja
xor
fdiv
pop
lea
push
add
js
arpl
lods
stos
mov
popf
das
push
push
and
testl
jne
or
addr16
add
or
inc
and
and
stos
popf
push
or
popf
jnp
test
pop
fcmovb
push
inc
sbb
inc
pop
sbb
pop
or
ret
or
mov
cmc
xchg
aaa
les
adc
ljmp
inc
loopne
cmp
inc
pop
lods
lea
adc
shrl
push
or
push
popa
or
and
adc
jo
loopne
xor
push
jg
adcb
jb
mov
add
adc
lock
and
sbb
int3
add
add
daa
mov
fsubl
int3
outsl
jo
add
push
push
bnd
sbb
imul
mulb
insl
jle
sub
xor
and
add
add
dec
add
and
jbe
in
add
sub
cmp
xor
sbb
or
push
push
cmp
or
addr16
orb
sbb
or
sbb
xor
test
jecxz
test
push
and
fldt
sbb
pop
inc
and
divl
sub
push
sbb
sbb
mov
cmp
je
inc
cmp
in
add
adc
test
add
pop
test
imull
cmp
push
add
icebp
pop
dec
add
lock
pop
jno
inc
and
push
inc
push
push
pop
imul
push
enter
fsubrl
mov
mov
movsb
add
dec
push
sbb
cmp
add
pop
imul
lock
add
xchg
push
loopne
test
push
rolb
or
loopne
inc
jbe
addb
rcrb
in
mov
inc
lret
sbb
jns
sbb
fistl
jbe
pusha
jo
or
and
daa
ljmp
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
xchg
inc
add
add
