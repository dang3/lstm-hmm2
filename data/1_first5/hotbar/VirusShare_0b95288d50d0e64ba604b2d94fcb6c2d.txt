fcomp
decl
andb
lea
push
mov
or
adc
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
jbe
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
jle
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
and
pop
push
adc
mov
mov
pushf
push
push
cmc
aaa
stc
sbbl
popf
out
std
ficoms
jno
and
push
add
scas
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
loop
sbb
mov
mov
sbb
hlt
push
push
adc
push
push
notl
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
mov
fidivrs
sub
or
and
xor
push
add
mov
and
in
adc
outsl
cs
imul
mov
push
xchg
pusha
pushf
dec
add
cmpsl
push
test
push
push
call
cmpsb
orl
xor
sub
sete
into
mov
mov
lahf
mov
mov
lcall
cmpsl
xchg
cmp
lods
mov
push
push
jp
dec
enter
fs
inc
pop
or
leave
les
enter
and
push
or
jb
inc
add
fdivrs
fs
in
int3
xor
pop
repz
and
inc
les
xor
push
push
dec
push
mov
lea
mov
pop
mov
dec
sub
leave
and
push
sahf
push
dec
xor
les
loope
hlt
or
add
pop
in
mov
inc
xor
imulb
or
cs
icebp
or
in
and
mov
mov
xchg
jmp
push
lea
mov
clc
pop
jge
mov
xchg
pop
pop
xchg
mov
pop
ret
xor
aad
cmp
mov
dec
dec
push
inc
and
add
insb
sbb
push
fcoml
hlt
pop
cmp
jl
jns
push
sbb
add
inc
sbb
scas
push
in
push
jl
mov
mov
sbb
pusha
or
in
push
in
sti
push
push
or
sub
mov
cmpl
pop
movsb
jne
sub
out
pop
shrl
mov
jae
adc
incb
cltd
mov
sbb
fsubr
scas
fildl
test
or
adc
push
jne
mov
mov
add
xor
push
adc
incl
hlt
call
mov
test
je
mov
or
scas
xchg
repnz
adc
dec
fdivrs
pop
repnz
pop
mov
sub
dec
arpl
sbb
jl
push
jecxz
add
push
sub
cmp
sub
xchg
jl
addr16
sub
add
std
inc
jb
push
mov
push
and
sub
in
js
xor
cwtl
add
add
cmp
mov
add
sahf
and
inc
inc
ret
inc
daa
jnp
aam
popa
sti
add
incl
pop
sub
negl
push
cld
dec
call
push
repnz
xor
add
jg
clc
int3
enter
pop
imul
lahf
push
push
je
xchg
je
jae
pop
rorb
pop
daa
or
xchg
cmpsl
or
fiadds
or
ret
stos
add
push
lea
jp
xchg
or
arpl
xchg
pop
ds
push
push
sub
cli
and
mov
mov
scas
leave
pop
pushf
hlt
dec
pop
test
or
lock
sub
push
sbb
int3
mov
sbb
push
jo
push
lahf
push
mov
pop
aas
sbb
sub
add
enter
and
ja
mov
or
mov
pop
pop
mov
popf
icebp
mov
adc
push
loop
adc
bound
lea
add
cmp
mov
clc
jle
push
add
add
push
xchg
cmp
mov
out
in
and
xchg
popf
jbe
push
sub
sub
jo
mov
test
test
jp
push
sbb
sub
pop
leave
jae
and
xor
ret
push
popf
out
adc
aad
loopne
pop
insb
xor
push
repnz
jns
into
sbb
push
cmp
pop
and
les
inc
scas
pusha
dec
jp
stos
fnsave
inc
in
adc
xor
add
inc
dec
cs
inc
cwtl
push
sub
sbb
pop
dec
jnp,pn
jmp
jnp
and
xor
loopne
or
or
xor
push
test
pushf
adc
xor
adc
push
mov
or
push
push
in
and
push
mov
and
or
pusha
cmp
movaps
jo
or
add
rorb
aad
dec
outsb
bound
xorl
push
mov
fcoms
cld
and
sub
enter
enter
or
adc
lret
inc
sbb
std
adc
sbb
add
in
pop
mov
xchg
fs
sbb
xchg
and
das
outsb
or
das
addb
mov
jns
jbe
mov
and
pop
mov
sub
sbb
jae
mov
cmpsl
popf
dec
cmpsl
and
mov
int
orb
bound
and
xor
mov
mov
and
call
int3
lcall
test
lods
mov
lcall
push
mov
std
jno
jae
xor
mov
inc
push
push
mov
mov
and
dec
fisubs
roll
inc
adc
xchg
cmp
mov
pop
mov
jno
xor
cmp
icebp
mov
outsl
add
xchg
ficoml
mov
popa
mov
cli
lea
adc
push
or
mov
nop
mov
sar
push
rolb
test
xchg
or
out
adc
dec
adc
add
adc
das
rclb
jp
adc
call
cmp
cld
shrb
movsl
test
lcall
xor
dec
mov
popa
je
push
add
cli
mov
nop
mov
adc
je
add
push
adc
das
mov
push
orl
sub
adc
push
adc
lahf
mov
jbe
scas
inc
mov
sbb
dec
in
bound
fnstcw
aas
push
inc
pop
xor
jo
clc
daa
lea
je
ret
orb
inc
dec
pop
pop
or
xor
dec
mov
adc
add
push
pusha
jne
es
and
mov
movaps
rolb
test
jg
jmp
pusha
sub
cmc
lea
mov
flds
pop
and
add
add
mov
gs
push
push
aad
or
cmp
pop
fs
jb
inc
mov
mov
push
and
in
push
xor
les
xchg
add
inc
cmp
mov
cltd
iret
inc
add
add
add
mov
aas
loopne
ljmp
cmp
adcl
dec
test
push
dec
lods
loope
adc
add
fldenv
sbb
push
popf
cmp
je
sub
inc
sbb
scas
xchg
add
sahf
sbb
rol
or
and
insl
mov
add
test
mov
lret
loopne
push
std
pop
adc
mov
push
imul
sti
int3
add
sbb
add
push
mov
clc
daa
lods
push
push
incl
call
push
adc
call
inc
mov
or
cmp
jl
inc
ret
outsb
lea
jne
push
push
aaa
in
leave
js
jne
cmp
cmc
jbe
pushf
push
xor
sbb
mov
call
and
imul
rolb
rorb
and
out
loopne
cmpsb
pushl
movzwl
push
lods
mov
mov
es
int
jl
sbb
lcall
sbb
test
jne
sub
mov
push
mov
inc
xchg
out
hlt
sbb
add
adc
pop
mov
push
jne
lods
push
mov
pop
cmc
jbe
xchg
ret
jo
add
adc
mov
inc
fistpll
loopne
add
xor
mov
cwtl
or
add
testb
cmp
jl
xchg
fldl
xchg
push
fcmovnb
mov
sub
mov
jb
andl
adc
fdivrs
mov
jecxz
mov
and
addl
adc
add
push
popa
pop
mov
pop
inc
or
inc
inc
es
lahf
push
mov
ljmp
hlt
mov
sub
push
jge
mov
or
adc
and
xor
cmp
jle
jb
cmp
xlat
cmp
pop
pop
test
shl
mov
lea
sub
or
jge
mov
xor
fisttpl
add
jmp
add
call
push
push
add
sbb
ret
push
push
daa
pusha
jl
pop
mov
add
test
outsb
adc
add
add
mov
or
lret
pop
loope
pop
loope
push
ret
out
je
cmpl
in
xchg
in
jge
sub
add
jle
movl
or
adc
insb
lds
leave
push
mov
fbstp
rcl
mov
or
jge
add
push
ret
fimull
push
jnp
or
pop
fs
lods
jne
dec
dec
pusha
fldcw
fcomps
xchg
jb
xor
in
mov
or
ja
inc
jnp
cmp
ja
push
push
sbb
pop
in
jmp
arpl
or
clc
push
cmp
mov
mov
fwait
mov
sub
xor
fcmovb
lahf
ss
jecxz
add
pop
les
push
mov
popf
or
outsb
inc
movsb
pop
int3
adc
push
jbe
or
fstpt
xor
push
inc
jnp
add
das
aas
sbb
orl
out
movb
into
ret
add
enter
jl
xor
hlt
mov
push
jbe
push
mov
mov
js
dec
loope
adc
rclb
test
icebp
loope
mov
ret
mov
sarl
movsl
mov
mov
inc
add
stos
addr16
push
mov
inc
xchg
push
adc
push
jle
xor
xor
je
cmpl
outsb
mov
lea
jl
mov
push
jne
push
int
repz
jge
dec
test
push
jp
jb
fstpl
lds
pop
pop
fcompl
cs
in
sub
push
sti
pop
push
dec
adc
or
inc
clc
outsb
mov
adc
or
push
push
add
loope
scas
in
lahf
fcoms
mov
or
shlb
adc
cmpl
rcll
bound
loope
or
js
push
loope
lock
inc
adc
push
scas
add
jno
cmc
push
gs
and
pop
pop
push
push
mov
mov
and
add
jmp
pop
out
xor
mov
jno
xchg
jle
sahf
mov
xchg
cmpsb
add
ret
js
lcall
add
dec
adc
lock
or
push
scas
mov
lea
mov
test
push
mov
lret
test
mov
shrb
enter
add
les
jle
push
add
push
in
out
test
mov
clc
mov
cmp
add
rolb
xor
pop
jge
dec
and
push
rol
add
adc
loopne
jmp
push
ljmp
xor
into
ret
popf
push
test
cmpb
jae
push
mov
dec
lock
jge
cmp
mov
jle
cmp
push
cmp
or
cmp
lcall
inc
pop
and
lahf
add
pop
add
sub
dec
and
or
dec
ss
jbe
push
xchg
in
pop
pop
pop
lock
fisttps
inc
pop
pop
out
xor
scas
aas
loope
or
jmp
decl
push
clc
addl
sub
push
pop
pop
pop
pop
out
mov
sbb
rolb
dec
xor
pop
pop
mov
insb
lahf
sub
les
lret
stos
push
imul
addps
sbb
mov
mov
adc
xor
mov
repnz
cltd
ret
fwait
lahf
imulb
scas
dec
or
or
sbb
push
clc
jl
rorb
adc
adc
loopne
je
and
or
and
lock
and
xchg
or
pop
and
xor
mov
add
pop
add
mov
loope
or
in
fidivl
mov
ja
mov
lcall
xor
mov
add
mov
or
add
sbb
push
sahf
aam
outsb
into
ret
jne
xor
daa
ss
mov
lea
mov
inc
cmp
iret
push
cmpsb
aaa
pop
mov
or
sbb
jbe
aas
cmp
inc
and
push
pop
sahf
imul
aas
dec
jb
sbb
aas
or
xorl
or
pop
adc
shrl
mov
xor
add
outsl
jnp
mov
push
jl
add
or
lahf
adc
or
lahf
sbb
mov
xchg
sbb
and
pop
and
in
jg
sbb
or
pop
add
add
add
ljmp
into
jb
or
mov
jno
and
add
lods
call
cli
xchg
nop
add
je
fiaddl
add
xchg
or
mov
movsl
les
clc
and
je
or
scas
or
fimull
sbb
test
subl
push
add
fisubl
jo
outsb
and
xchg
scas
xchg
ret
sbb
mov
mov
xchg
stos
push
adc
sub
fsubr
lahf
out
dec
cmp
in
cmpl
mov
mov
sbb
decl
data16
jmp
sar
mov
shr
add
jne
and
sarb
shll
or
repz
jecxz
fdivrs
push
inc
pop
and
or
or
mov
je
inc
adcl
jmp
rcrl
je
mov
sar
xchg
out
imul
aas
pop
xchg
mov
mov
or
cmp
ret
sbb
je
iret
fwait
imul
inc
dec
adc
mov
push
add
lds
call
or
and
add
inc
fwait
loopne
aam
dec
push
mov
lods
mov
sub
mov
rclb
push
mov
in
pop
xor
inc
test
mov
neg
sbb
and
das
dec
rcrl
xchg
push
pop
sbb
sbb
xlat
dec
mov
push
cmpb
or
or
daa
adc
ret
and
sbb
cmp
cmpb
fcmovnu
imul
xor
icebp
stc
dec
sbb
inc
push
cmpsb
pop
fsubrs
adc
xor
fcomp
arpl
fstpl
mov
push
sbb
lret
movsl
mov
mov
sub
and
xor
orl
push
adc
lds
clc
jns
out
push
clc
pop
cmp
aas
dec
out
sahf
out
shl
jo
or
lcall
inc
sbb
add
mov
or
fstpl
adc
leave
cmp
xchg
push
mov
lea
adc
ja
fwait
sub
popf
icebp
mov
rcrl
add
and
lret
in
loop
adc
scas
add
insl
lahf
popf
out
cmpl
int
xchg
inc
dec
push
dec
mov
pop
push
lea
push
push
call
shll
lea
psrlw
ret
icebp
xor
cmp
aam
les
and
imul
inc
pop
fdivrl
enter
and
movl
sbb
sbbb
sub
mov
add
cli
cmpb
jbe
xchg
in
aad
adc
in
and
add
add
add
lock
push
imul
sub
add
pushf
pop
mov
mov
pusha
mov
push
and
cmp
or
or
push
pop
adc
sub
popa
pop
leave
mov
jle
mov
adc
pop
sbb
mov
adc
sub
sbb
add
fcoms
mov
xchg
sbb
movsb
shl
inc
dec
or
pop
pop
and
out
sbb
imul
mov
inc
push
mov
and
sbb
pop
out
dec
rcll
sub
add
or
jmp
push
setne
push
movl
cld
jno
dec
push
mov
int
pop
dec
in
dec
lds
sbb
push
push
push
push
cmp
inc
pushf
cmp
je
movsl
push
push
xchg
iret
or
push
inc
xchg
mov
xchg
pushf
push
imul
lahf
gs
jle
dec
in
mov
sahf
mov
push
mov
movsl
rorl
das
sub
add
lock
jne
mov
cli
adc
pop
and
test
aam
mov
imul
push
or
out
pop
push
lea
push
inc
sub
mov
push
mov
mov
insb
push
dec
dec
mov
push
add
xor
push
push
lea
sbbb
jge
sub
insb
sbb
rcrl
rcrl
mov
lea
sub
mov
shrl
imul
inc
add
mov
cmp
sbb
inc
push
xor
lahf
dec
js
xor
movb
push
inc
jp
or
push
out
xchg
sbb
sbb
push
adc
iret
idivl
xor
cmp
inc
or
clc
cmp
aas
push
aaa
jle
mov
cs
lret
cmp
mov
js
jmp
mov
inc
neg
sbb
into
and
gs
push
add
js
push
mov
push
into
sbb
sub
lcall
push
adc
lock
xor
push
fnstsw
push
ret
clc
mov
cld
sub
inc
xchg
jno
push
add
addb
mov
add
les
mov
push
mov
adcb
push
xchg
out
xor
sahf
lods
sahf
imul
push
sub
push
pushf
mov
dec
push
add
push
inc
push
data16
add
cwtl
add
jle
and
push
lret
xor
push
push
push
and
jbe
push
inc
pop
xor
out
aas
cs
jo
lret
push
xchg
sub
xorb
push
and
xchg
mov
insl
mov
and
loop
pop
add
sub
enter
rol
incb
je
cmp
jl
dec
xchg
aad
outsl
call
clc
in
push
or
aad
sbb
jmp
lods
mov
pop
or
scas
mov
cwtl
jbe
pop
stos
or
rcrb
pop
repnz
mov
mov
mov
jb
inc
je
pusha
imul
dec
es
pop
inc
cmp
add
enter
xor
mov
mov
xor
add
push
xchg
mov
mov
cmp
sub
incl
jne
push
mov
sahf
sub
inc
and
roll
dec
pop
sub
lea
mov
push
push
cmp
sbb
pop
push
fstpl
shufps
inc
lea
push
push
stos
fisttpll
pushl
sub
adc
leave
int3
shll
sub
sub
lods
and
push
mov
xor
and
mov
je
ficoms
add
cs
sbb
rclb
jb
push
push
sub
sub
push
addb
mov
inc
lahf
push
rclb
ret
pop
push
pusha
lock
insl
movsl
jne
push
push
push
sarb
sub
push
push
lea
mov
mov
adc
js
jg
mov
add
and
add
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
test
cmp
add
inc
mov
mov
cmp
ror
add
xchg
pop
inc
push
or
xor
lret
movb
cmove
push
push
push
xor
outsb
xchg
stc
daa
jo
sbb
cmp
leave
xor
outsl
mov
inc
ja
mov
inc
push
mov
repnz
stos
aaa
faddl
sub
inc
imul
inc
inc
fldl
fmull
ret
mov
push
mov
cltd
or
es
push
adc
jns
mov
adc
imul
add
scas
add
inc
addl
loopne
iret
dec
ds
dec
js
inc
pop
gs
push
fimuls
insb
xlat
aaa
adc
and
inc
cmp
aas
out
mov
add
xchg
and
mov
sbb
pop
pop
dec
push
add
push
mov
call
js
inc
push
imul
inc
popl
xor
inc
and
or
cs
dec
push
loope
add
pop
mov
movsb
xor
adc
mov
xor
in
inc
bound
insb
cmp
cwtl
sub
ficompl
movsb
mov
mov
add
sbb
push
and
push
push
cs
push
sub
cld
add
xchg
inc
sub
rorl
cmp
jge
lods
lock
push
loopne
sarl
sub
sub
push
pop
inc
movsb
mov
fs
insb
pop
int
dec
push
mov
fcomps
aaa
loope
cmpsl
ret
bound
push
ss
jo
loope
ret
xor
inc
jo
rclb
insb
push
and
sub
sbb
mov
shrl
int3
addr16
push
push
repz
xchg
outsb
andb
cwtl
cmpsl
cld
inc
sbb
mov
data16
enter
push
sub
sbb
movsb
shl
mov
pusha
ret
cwtl
add
lea
mov
ja
jge
lds
out
add
cmpb
sbb
leave
enter
es
test
jo
adc
jb
inc
sub
test
arpl
add
cmp
sbb
mov
sub
jl
mov
cltd
and
push
dec
add
sar
lock
and
daa
jl
push
or
nop
lret
jecxz
fbld
fwait
adc
add
mov
ds
sti
mov
imul
sar
mov
shr
add
mov
imul
push
aas
or
push
lret
insb
adc
fisttpl
or
fisttpll
adc
dec
fdivs
je
repz
mov
outsl
out
and
add
mov
jo
mov
sub
sub
sarb
jo
jbe
divl
jg
test
outsl
or
xor
jne
adc
and
xorb
xchg
sub
movsl
jmp
cwtl
insb
mov
hlt
push
arpl
fdiv
shll
js
push
mov
and
mov
lea
xor
or
push
pop
push
in
loope
sar
xor
add
inc
je
lea
mov
adc
adc
sbb
sub
inc
or
out
inc
fstpl
push
int3
cld
or
sub
nop
xchg
mov
jl
mov
insb
xchg
lcall
add
pop
add
aaa
es
idivl
mov
push
sbb
sahf
imul
push
push
add
jl
fnstsw
sbb
insl
arpl
mov
push
jle
cmp
or
jbe
add
enter
xchg
aaa
push
popa
xchg
or
dec
add
popf
fucomp
imul
cmp
or
jbe
repz
sub
jge
jmp
mov
add
fistpl
dec
nopl
mov
add
mov
enter
mov
fdivrp
shll
mov
test
sbb
lahf
mov
mov
xchg
add
cmp
jns
inc
cmp
outsb
cmp
sbb
addb
es
mov
rorb
out
fidivl
or
or
mov
mov
sahf
add
mov
xor
fucomp
enter
movb
xor
mov
leave
jge
adc
inc
cli
enter
xor
push
pop
shll
push
ficomps
rcrb
and
cmp
rclb
stos
mov
sbb
adc
xchg
xchg
loopne
punpckldq
adc
xor
in
and
cmp
dec
loopne
fildll
jo
add
xor
daa
gs
sub
fmuls
xchg
pop
cwtl
shll
cmp
xchg
push
xor
dec
inc
faddl
inc
cmp
lea
xor
invd
and
xchg
mov
lea
or
inc
xchg
xorb
mov
pop
les
and
mov
xchg
outsl
fdivs
call
pushf
test
sbb
js
iret
lds
or
loope
test
inc
mov
cmp
enter
xor
xor
pushf
or
pop
clc
sub
pop
xor
or
subl
push
mov
or
les
push
pop
sub
mov
rcll
leave
mov
push
jo
ss
and
test
push
test
lea
push
push
pusha
sub
mov
mov
adc
inc
ljmp
cltd
dec
andb
mov
movl
sahf
adc
pop
or
mov
in
jl
add
movsb
xchg
mov
and
sbb
inc
mov
int
aas
pop
mov
mov
mov
mov
sub
lea
es
jo
pop
add
cmp
push
mov
popa
or
pop
cmovns
mov
mov
movsb
test
sbb
mov
jns
and
sbb
or
or
lahf
or
mov
pop
push
fwait
and
cmp
pop
mov
add
xor
adc
setb
out
push
mov
sub
cmp
stos
mov
xchg
rcrb
out
push
mov
mov
mov
push
or
dec
loope
fnsave
mov
mov
and
dec
sub
pop
dec
repz
cmp
mov
push
or
mov
movntps
fs
aad
push
movsl
shlb
pop
pop
pop
fstpt
je
rol
aaa
loopne
lock
mov
mov
push
mov
mov
dec
inc
push
hlt
adc
or
add
sbb
mov
pop
add
add
int
jp
inc
ss
push
inc
cmpsl
test
dec
push
sbb
or
lahf
and
jns
sub
hlt
lret
in
or
idivb
xchg
push
movb
fwait
int
decl
lcall
pop
jg
clc
push
ja
movzbl
push
lcall
lahf
outsl
ret
into
xchg
lods
mov
ds
jnp
out
dec
push
push
popa
imul
mov
add
add
push
add
push
jo
add
popa
mov
out
push
inc
cmp
pushf
cwtl
test
incl
xchg
fstpt
test
pop
ret
aas
or
sbb
adc
rol
push
jl
or
adc
movsl
cld
lea
push
dec
jmp
jmp
fs
mov
pusha
jmp
bswap
addb
or
sub
int3
hlt
repnz
xor
aas
inc
xor
xchg
push
add
aad
xchg
mov
popf
aaa
cmp
test
jns
add
popa
push
out
sarl
stos
jle
rorb
jae
push
rorb
add
sbbb
xchg
sarb
push
pop
add
xchg
xor
lcall
dec
add
push
call
add
xor
addb
push
cmpb
jge
push
test
enter
ret
clc
add
dec
stc
lea
xor
push
pusha
leave
andl
adc
mov
je
dec
dec
or
mov
in
or
imul
jo
sbb
and
or
sub
test
add
mov
jmp
push
adc
cs
cmp
subps
sbb
push
pop
or
ret
and
adc
mov
cmpsl
sbb
add
xchg
push
dec
xchg
subb
xchg
pop
pusha
mov
push
cli
shll
loop
or
cmp
mov
mov
fisubrl
je
xor
push
test
jecxz
je
shll
out
in
scas
cld
and
clc
jg
mov
mov
sub
fs
mov
sub
and
dec
sub
push
pop
iret
movsl
dec
enter
mov
or
loopne
push
push
and
sbbb
fmuls
dec
cmp
stc
nop
inc
mov
push
cli
dec
push
fdivl
jge
pushf
dec
pop
xchg
dec
mov
scas
sub
fwait
dec
push
pop
dec
or
rcrl
cs
mov
and
push
xchg
push
xor
mov
mov
and
and
dec
sub
add
or
and
ja
mov
add
bswap
les
push
push
push
push
add
pop
cli
js
pop
mov
xchg
lods
sub
enter
mov
ljmp
push
dec
sbb
pop
and
jg
dec
jb
je
and
mov
jmp
xor
out
jae
pop
in
mov
nop
int3
aad
add
ret
scas
dec
adc
fsubs
jl
add
pop
or
ljmp
arpl
dec
enter
and
lock
dec
sub
or
cmp
or
scas
ret
add
mov
jge
gs
mov
push
fdivrl
or
sbb
mov
cltd
loope
loopne
imul
enter
and
insl
sbb
or
cltd
or
incl
add
push
push
mov
lahf
and
lods
leave
mov
mov
xchg
mov
imul
xchg
mov
inc
es
dec
cmp
mov
test
add
and
pop
xor
or
sbb
mov
cmpl
pusha
sub
xchg
pop
bound
inc
push
mov
repnz
xchg
add
cli
testl
mov
adc
adc
push
movsb
pusha
scas
loopne
push
sub
and
jne
add
in
cli
icebp
xor
movsl
pavgb
mov
sub
mov
jg
dec
adc
cmpl
movsl
pop
jl
sub
adc
jae
push
jns
vpmacssdd
rcll
retw
popf
push
pop
pop
out
rcrb
sbb
jl
sbb
jo
sbb
dec
mov
sub
sbbb
sub
and
push
fmul
pop
adc
popf
mov
dec
xor
mov
inc
push
pop
fwait
sti
sbb
pop
and
pusha
mov
mov
ss
adc
pop
fnstcw
test
xorl
adc
push
mov
mov
andb
cmp
adc
shld
pop
and
cmpl
sub
cmp
mov
out
data16
and
rorb
mov
inc
and
adc
pop
nop
mov
movsb
in
or
cmp
scas
jns
jne
sub
mov
test
stos
leave
andl
popa
push
and
mov
xor
push
jge
mul
ret
mov
mov
cltd
push
push
pop
sub
xchg
sub
push
orl
lods
or
cwtl
mov
sbb
in
add
cmp
or
mov
mov
inc
and
fdivs
push
movsb
not
frstor
test
mov
jb
loope
mov
adc
popf
and
cmp
sbb
jle
fisttps
cld
cmp
sub
jne
ret
cwtl
pop
sbb
or
imul
shlb
pop
insl
out
mov
enter
pop
mov
cmp
sbb
arpl
and
push
cli
sub
xchg
jb
and
sbb
mov
cmp
push
pop
cmp
aad
cmp
sarl
pop
ret
add
xor
push
add
dec
pshufw
test
cld
call
push
sbb
aad
add
mov
dec
in
je
or
add
orl
and
pop
sub
pushf
cld
or
push
mov
and
push
adc
sub
loope
sub
in
cmp
xor
xor
adc
test
int3
pop
jne
and
shrb
pop
cs
mov
addl
and
imul
push
ljmp
bound
jmp
add
xor
add
adc
ss
leave
and
xor
mov
and
fwait
lods
inc
adc
push
push
xor
push
xchg
xchg
sub
sti
std
stc
dec
cmp
filds
add
jo
jno
mov
mov
dec
push
clc
pop
adc
repnz
sub
rclb
rcrb
lock
adc
cli
adc
js
push
test
xchg
push
add
pusha
add
mov
mov
js
xorl
popf
cmp
aam
sbbl
jp
enter
pushf
imul
sub
push
adc
ficoms
mov
add
mov
pop
pop
push
push
lahf
and
pop
in
inc
and
sahf
adc
rorb
pop
pusha
nop
and
push
add
cld
sbbl
push
add
bound
es
repnz
and
ds
dec
jle
adc
das
push
fs
and
stc
jl
dec
xor
add
mov
iret
cmpsb
sub
xor
push
cld
xor
push
or
cld
mov
pusha
jecxz
sbb
pop
adc
push
sub
pop
pushf
push
mov
adc
jne
adc
jmp
pop
add
and
shll
sub
xor
adc
push
call
pop
and
outsb
push
push
cld
push
sub
addr16
xor
push
pop
push
mov
xor
inc
dec
add
aam
dec
call
shrb
sbbl
add
cltd
sub
ret
xchg
or
inc
push
jmp
jp
sbb
loop
dec
or
insl
pop
jge
or
scas
or
rolb
call
or
push
and
and
xchg
cmp
pop
sub
and
mov
cmp
pop
pop
lcall
lods
rcll
sbb
enter
pop
add
jne
stos
inc
mov
popa
jo
insl
mov
out
sub
sub
or
xor
mov
jle
inc
pop
es
inc
movb
xor
cmp
mov
xor
in
adc
cmp
cmp
aam
jo
mov
lret
xor
jmp
jbe
mov
cwtl
push
cli
and
fbld
sbb
xchg
call
lds
add
jl
mov
cld
in
push
mov
push
mov
pop
mov
push
outsl
add
popf
test
adc
fisttpll
scas
mov
sub
inc
mov
dec
adc
jmp
mov
pop
popa
xor
adc
pop
sbb
sub
or
sub
inc
xorl
pusha
cmpl
pop
lret
add
lock
mov
mov
mov
cmpsb
sub
push
inc
sub
and
jns
into
mov
jns
pop
loope
fiadds
rcrb
mov
push
sti
xchg
stos
mov
jo
pop
lahf
popa
leave
fadd
mov
or
dec
fmull
mov
sbb
or
pusha
daa
repnz
add
sbb
mov
adc
mov
loopne
xor
xchg
sub
or
push
xor
push
mov
jo
push
std
add
jg
push
sub
xchg
or
sbb
into
lret
repz
ror
inc
mov
rorb
loopne
pop
nopl
sbb
mov
sub
loopne
scas
mov
mov
jo
rolb
mov
pop
push
mov
push
loopne
push
test
je
popf
and
test
or
xchg
in
push
movsl
mov
cmpsb
jle
je
dec
dec
push
insb
pop
shlb
or
icebp
jns
xchg
sub
jo
adc
mov
and
push
ja
push
mov
or
jl
pop
push
or
sbb
imul
out
test
xorb
or
xchg
addl
push
xchg
add
std
shrl
test
mov
bnd
add
roll
add
cmpsb
nop
pop
outsb
mov
std
sti
push
inc
es
pop
jo
out
sbb
inc
or
cmp
or
mov
or
xor
pop
scas
xchg
xor
orb
and
dec
adc
sbb
mov
out
and
scas
mov
int
pop
xor
and
test
and
jns
test
push
aad
or
jecxz
imul
fiadds
inc
and
cmp
jo
adc
and
rep
mov
adc
and
repnz
mov
nop
adc
or
push
jns
test
jns
mov
jp
sub
rolb
and
gs
add
inc
mov
ret
test
decb
push
or
nop
dec
enter
or
add
ret
cmp
pop
cmp
inc
sahf
ds
adc
add
dec
dec
sbb
dec
xorl
cmp
add
and
mov
push
push
xchg
mov
mov
dec
adc
jo
pop
sbb
xlat
mov
mov
and
mov
push
subl
fdivr
cld
daa
sbb
lahf
rcrb
push
mov
iret
into
lea
cmp
sbb
inc
push
jl
test
in
sub
inc
leave
pop
pop
cwtl
add
sbb
mov
rcl
xor
ficomps
cltd
data16
into
ds
push
adc
add
std
push
js
mov
xchg
dec
xchg
in
mov
sbb
sbb
inc
push
push
adc
imul
sbb
inc
xchg
cmp
orl
add
lds
cwtl
cmp
adc
and
sbb
movsb
xchg
leave
mov
or
add
sbb
xorl
fdivrs
cmp
lods
or
or
jg
mov
repnz
pop
pop
int
outsb
add
adc
pop
push
push
pop
mov
jmp
cwtl
xchg
cld
out
adc
mov
push
add
ss
adc
adc
leave
jne
lahf
mov
test
daa
les
mov
bound
imul
pusha
xchg
inc
loope
loopne
mov
shlb
popf
cmp
outsb
adc
and
push
adc
xchg
pop
push
cmp
push
sbb
jbe
or
push
and
push
lds
bound
mov
shrl
pop
xchg
js
cmp
popa
dec
add
stos
mov
jle
dec
outsl
add
cmpsl
clc
aas
sub
test
jge
mov
sub
pop
out
fs
add
test
push
or
mov
lahf
mov
jg
stos
dec
add
or
aaa
adc
xchg
pop
jl
iret
sbb
ljmp
xor
nop
mov
inc
popf
es
xchg
fidivs
int3
adc
pop
push
cmp
push
dec
cmp
inc
fiadds
cld
imul
push
movsl
int3
imul
and
cmp
cli
stos
scas
dec
je
std
mov
mov
xchg
lcall
js
or
cmp
lea
mov
add
lock
sbb
movsl
sahf
out
push
jae
push
mov
insb
adc
jle
shll
xchg
nop
and
test
add
jb
sbb
lsl
rorb
mov
sbb
shlb
inc
sub
add
fldcw
dec
add
stos
in
add
inc
aaa
adc
dec
adc
movsb
inc
xor
lods
mov
inc
add
bound
aas
jne
add
sbb
jle
xor
push
ss
cmp
or
popa
inc
add
test
mov
rclb
push
push
iret
pusha
add
or
mov
arpl
cs
inc
or
cli
cmp
dec
sub
push
add
mov
add
or
xor
mov
xlat
mov
inc
jmp
cmp
outsb
push
push
jl
mov
inc
mov
jl
push
lods
cmpsl
rorl
shrl
pusha
arpl
test
add
mov
xchg
das
shll
jecxz,pn
mov
sbb
mov
mov
cmp
jle
mov
cmpsl
adc
mov
shll
add
andl
jl
test
jecxz
dec
scas
testb
jno
sbb
aas
sbb
arpl
ljmp
and
popa
inc
cmp
sbb
sarl
out
mov
push
imul
and
cltd
shlb
push
xor
xor
pop
push
loopne
jb
and
mov
out
dec
mov
add
scas
insb
jle
inc
add
int3
lahf
add
pop
sbb
imul
jp
add
outsl
into
dec
jb
cld
xchg
rol
cmp
mov
cmp
fstpt
int3
cltd
popa
dec
std
or
repz
loop
aas
xchg
dec
mov
fsts
sub
movsl
mov
call
sbb
xor
js
inc
out
adcl
adc
and
xor
or
in
in
pop
mov
mov
pop
std
or
mov
test
dec
add
pusha
adc
and
push
pusha
adc
aas
inc
cmp
cmp
pusha
sub
or
dec
or
pop
xor
outsb
sub
mov
in
dec
inc
leave
adc
loopne
mov
sbb
mov
push
test
push
stc
mov
jo
xor
sbb
or
xchg
mov
xor
or
fsubs
jne
js
lock
xor
push
mov
cmp
je
add
mov
push
sub
aad
mov
pop
hlt
data16
je
loopne
add
sbb
push
insb
cs
push
jmp
addr16
pop
or
lea
xchg
daa
mov
xor
std
push
call
jmp
mov
inc
add
out
and
push
xrelease
add
cltd
movsb
adc
xchg
mov
adc
xor
push
je
sahf
xor
lds
adc
and
xchg
sub
add
xor
jmp
lods
xor
xor
sahf
push
jge
inc
inc
xchg
test
pop
into
and
and
or
push
add
inc
testl
pop
in
or
push
adc
add
inc
add
scas
addl
sbb
shll
add
cmpsb
push
fsubs
mov
sahf
fdivrs
or
loope
syscall
sar
or
in
scas
and
dec
add
clc
je
sbb
mov
std
and
push
or
cmp
or
push
and
pop
mov
xchg
adc
inc
hlt
and
or
cmpsl
mov
dec
sbb
and
sub
loope
adc
dec
pop
and
aaa
xchg
xchg
adc
or
loop
cs
push
xchg
icebp
out
push
cwtl
or
push
jmp
mov
rorb
popf
add
lea
enter
insb
cmpsl
mov
jg
push
jne
pop
repnz
pop
adc
dec
loope
or
xchg
movl
sub
jge
adc
adc
push
mov
test
and
movsl
xor
shlb
mov
add
enter
je
add
dec
inc
and
js
pop
adcl
push
push
or
scas
xchg
sub
adc
cmc
mov
add
stos
aaa
jnp
push
insb
insl
xor
adc
dec
lods
add
sbb
adc
mov
or
in
mov
adc
xor
add
xchg
xor
sbb
repnz
icebp
lea
mov
xlat
ja
int
push
push
dec
fimuls
mov
cmp
inc
push
push
cmp
gs
test
adc
ret
mov
or
movsb
mov
pop
fiadds
inc
sub
or
cli
pop
out
test
pop
dec
push
leave
sbb
sbb
dec
scas
aam
outsl
or
scas
push
push
mov
ret
cmp
mov
push
jne
adc
mov
or
aas
rcrl
inc
into
jo
movsl
fnstsw
adc
or
mov
pop
mov
mov
add
push
loop
add
and
shlb
mov
push
out
push
shl
mov
stos
mov
push
inc
es
pop
call
loope
pop
je
push
mov
leave
lods
mov
mov
ret
sbb
repnz
add
sub
ja
add
jmp
xor
add
cmpl
cmpsl
pop
sbb
inc
sahf
pop
mov
xchg
sbb
sbb
es
jp
mov
mov
mov
aaa
out
push
test
daa
lods
adc
pop
shrb
cmp
std
xchg
sub
adc
xchg
jne
mov
lea
mov
mov
mov
lea
mov
lea
jge
mov
adc
push
xor
pushf
lret
add
out
call
add
ret
pushl
cmp
jne
mov
pushf
cmp
mov
or
dec
das
hlt
lds
bound
jmp
push
cmp
dec
push
and
and
bound
insb
mov
adc
sbbl
fsubp
sub
add
mov
or
inc
loopne
pop
pop
mov
mov
rcrb
loopne
pusha
mov
jp
cs
pushl
mov
sub
sub
push
in
gs
xor
jle
aam
pop
dec
and
hlt
sub
stos
pop
call
adc
sahf
adc
add
fcomip
lea
add
cmp
scas
adcl
in
add
sub
add
jnp
int
std
shlb
ljmp
ret
repnz
push
sub
sti
mov
sbb
cmp
jge
addb
in
push
dec
test
flds
inc
push
clc
shl
inc
push
das
mov
xchg
mov
shll
es
mov
xchg
je
enter
subl
push
es
or
in
popa
add
sahf
jl
add
loopne
mov
push
jg
push
add
push
dec
lds
push
ret
pushf
fcmovnu
adc
fst
adc
sbb
pop
or
adc
dec
dec
popa
mov
jae
pop
roll
mov
cmp
in
push
jns
push
add
mov
les
dec
push
fsubs
decb
ljmp
subl
mov
lcall
push
adc
sbb
loopne
cmp
push
lods
roll
cmp
adc
sbb
mov
sbb
sbb
pop
mov
sub
and
adc
add
lds
cwtl
btr
mov
xor
xchg
mov
cli
xor
inc
gs
jle
jg
loopne
std
mov
inc
cmp
sub
sbb
inc
push
or
xor
xor
adc
push
loope
and
push
cmp
add
cmpsl
leave
add
bnd
inc
inc
add
cmp
mov
inc
clc
push
mov
adc
jge
inc
jo
pusha
sarl
and
xor
or
outsl
jg
adc
cmp
jle
pusha
sub
cmp
jle
lcall
or
lea
pop
add
sbb
rcll
xor
sbb
fnsave
push
sbb
ficompl
enter
pop
sub
add
cmp
add
cmp
pop
xchg
lret
sbb
add
push
push
loope
xchg
mov
into
mov
push
add
and
push
pop
call
xchg
cwtl
in
rcrl
xchg
mov
fisubl
inc
pop
add
cmc
dec
or
clc
cmp
jbe
ffree
jp,pt
mov
inc
add
add
shrl
pop
sbb
or
mov
xor
pop
ret
jl
fadds
push
aaa
inc
add
call
inc
mov
pop
mov
cmp
add
cmp
insb
imul
push
cmpsb
xchg
subl
test
rolb
xchg
xchg
aam
inc
adc
fs
sub
rolb
test
ljmp
scas
popa
and
adc
hlt
inc
or
add
and
add
adc
inc
adc
xchg
aam
lods
ret
mov
add
or
pop
adcb
mov
xor
or
add
mov
test
int
add
loop
mov
mov
fadds
pop
xchg
jo
add
mov
xor
enter
es
test
push
rorb
je
or
push
dec
push
jb
push
in
pop
sub
enter
pop
stc
add
movsb
leave
xchg
jl
and
and
add
cmp
push
outsl
sbb
adc
notb
inc
fiadds
scas
xchg
fwait
dec
xor
push
push
sbb
aam
push
fs
fdivs
or
ds
xchg
sbb
xor
fwait
push
cmp
nop
or
xor
xor
xchg
les
jg
ja
jmp
fwait
pushf
mov
cltd
xor
test
inc
push
xor
imul
cmp
push
cs
or
xor
js
dec
adc
xchg
movsl
lock
inc
mov
mov
fwait
push
lods
dec
cmp
into
aam
cwtl
pop
and
dec
loopne
jae
cmp
enter
sub
push
jecxz
sub
fidivs
inc
popl
sbb
popa
sbb
add
fstl
inc
mov
adc
xchg
test
or
cmp
inc
push
dec
pop
mov
enter
or
inc
repnz
jo
push
add
test
imul
ret
movsb
push
sub
je
insl
aaa
or
loopne
loopne
add
xchg
sub
or
in
adc
sbb
and
xchg
adc
cmp
add
or
pop
sub
xchg
call
pop
mov
cmp
inc
test
add
sub
xchg
xor
adc
pop
cmpsb
sub
nop
lahf
sahf
sub
test
imul
xor
sbb
pop
sub
sbb
adc
and
leave
jnp
push
fisubl
jns
movsl
push
movsb
adc
cmp
pop
add
fs
xchg
or
sbb
cmp
sub
xor
mov
adc
sub
adc
test
push
pop
pop
push
cltd
and
jp
add
popa
sahf
orb
sub
bound
cmpsb
xchg
jge
stos
jb
cmpl
loop
pop
dec
test
or
sbb
cwtl
out
ds
cld
sub
add
pop
inc
lock
int3
pop
push
adc
xlat
jmp
dec
sar
xorb
jl
push
inc
push
scas
lock
lds
adc
mov
dec
and
sbb
push
add
mov
add
mov
and
push
jb
sbb
jo
xor
adc
adc
enter
and
mov
adc
push
push
cmp
sub
mov
filds
pushf
pushf
jne
push
push
push
add
sbb
repnz
jl
outsb
cmp
cld
sbb
adc
test
daa
sub
inc
sub
movb
push
cmp
pop
or
inc
ret
in
jle
xor
mov
loopne
jno
insl
or
mov
outsb
movl
push
push
push
inc
sahf
dec
add
cs
jnp
mov
add
mov
or
orb
add
pop
inc
sahf
push
mov
push
adc
and
mov
outsb
out
je
mov
leave
mov
inc
dec
inc
mov
sbb
push
inc
mov
mov
push
bound
xchg
sub
push
ficomps
or
mov
add
addb
or
sub
int
out
lock
sub
es
pop
adc
insl
or
inc
rorl
cmc
push
aam
push
jae
sub
xor
fsubs
cmp
push
dec
pop
cld
add
mov
adc
mov
pop
inc
mov
inc
sbb
movsb
decl
push
es
inc
stos
cmp
cmp
jbe
push
lea
ret
adcl
push
mov
add
pop
cmp
pop
jo
and
sahf
xor
mov
xor
or
cmp
inc
fst
sub
movsb
push
lods
sub
inc
add
imul
leave
cmp
adc
dec
push
jns
outsb
push
adc
lret
addb
insb
in
les
pop
or
mov
repz
pushf
inc
or
cltd
inc
loopne
incl
or
dec
cwtl
add
and
push
popf
mov
jne
push
mov
dec
mov
sub
cmp
inc
nop
add
sbb
dec
cwtl
or
aam
lcall
imul
test
xchg
inc
sbb
pop
outsl
push
push
pop
sub
cwtl
shl
mov
mov
push
mov
add
push
and
add
inc
aas
and
rorl
inc
push
mov
mov
push
adcb
popf
bswap
xor
jg
adc
mov
das
dec
and
lods
adc
enter
loope
and
ljmp
mov
fnstcw
test
pusha
aad
test
add
mov
clc
lea
sbb
sbb
inc
mov
mov
push
pop
xchg
clc
inc
mov
or
mov
xchg
cmpsb
movsb
sbb
dec
cmp
leave
xor
xor
mov
testb
int
dec
clc
ljmp
call
dec
cmp
dec
push
cltd
in
push
push
ret
xchg
xor
push
cmp
std
lds
hlt
rol
or
pop
lods
bound
lcall
dec
add
jmp
add
pop
and
add
imul
mov
add
imul
or
call
and
test
dec
bound
xchg
adc
ret
add
mov
add
addb
lcall
test
inc
ja
js
xor
adc
push
lahf
add
rcr
fistl
mov
cmp
add
jb
mov
pop
clc
jg
mov
lds
adc
test
push
inc
sub
add
fsubs
push
jnp
lea
cmp
jb
or
in
fbld
cli
adc
imul
add
in
mov
adcb
aaa
or
sub
mov
push
jbe
jle
lea
adc
add
mov
loopne
pop
push
aaa
sub
sub
sub
loopne
loopne
out
pop
add
pop
push
out
add
push
push
pop
out
ret
and
ljmp
into
notl
add
add
xchg
sarl
adc
adc
int3
insb
sub
and
andb
punpcklbw
or
add
movsb
outsl
pusha
sbb
push
test
cmp
xor
decb
out
fnstsw
clc
repnz
inc
dec
mov
mov
ret
xor
xor
loope
shll
add
sbb
or
test
int3
push
mov
jmp
fmull
or
lea
ret
pop
test
jp
std
insb
outsl
add
jb
push
pop
call
and
arpl
mov
pop
ja
ljmp
frstor
mov
ja
cwtl
push
fdivl
jmp
or
inc
stos
enter
and
jl
or
pop
movl
pop
dec
add
popa
xchg
cmc
sub
cmpl
mov
add
sub
add
xor
movzwl
adc
lock
sub
call
ljmp
hlt
and
test
push
or
in
jae
or
push
adc
xor
and
add
inc
aad
cld
add
xor
pop
push
push
pop
sbb
jns
mov
jge
lock
add
pop
das
pop
loop
pop
xchg
fwait
rorb
fadds
adc
rolb
jg
push
je
out
cmp
cld
dec
add
shll
pusha
mov
or
cltd
sbb
dec
inc
push
imul
out
xor
sbb
cwtl
push
xorb
xlat
push
nop
fmuls
mov
push
out
push
rorl
push
push
mov
mov
movsb
pop
push
pop
xor
push
add
loop
cmpl
sbb
inc
cld
xor
negb
repz
add
sbb
inc
jno
leave
sbb
lea
ret
dec
and
pop
aas
dec
jmp
xor
push
cmp
push
mov
mov
cmp
and
fimull
mov
pop
push
xor
or
rclb
ret
shl
cwtl
pop
pop
js
jbe
call
pop
adc
sti
sbbb
lret
lea
push
pop
push
rcll
push
bound
sub
sbb
dec
cmpsb
fsubs
xlat
outsb
and
sarb
std
loop
rclb
pop
ffreep
sub
mov
push
lcall
ret
mov
push
push
dec
inc
loop
lea
mov
lds
lcall
es
mov
movl
adc
movl
inc
add
xchg
loopne
add
inc
in
inc
push
lock
push
dec
jbe
inc
dec
pop
aam
cmp
xor
jnp
rorb
popa
lret
loope
stos
or
pushf
das
jp
push
inc
pop
fsts
inc
inc
jnp
cmp
and
or
xchg
mov
loop
mov
sub
lahf
sbb
jg
orl
je
cmpsb
cmp
mov
jl
mov
sub
xor
and
cltd
add
or
add
ret
mov
mov
rclb
sbb
jg
xchg
sbb
and
add
sbb
int
ret
push
into
mov
cmp
ret
dec
imul
rorl
cld
nop
mov
or
pop
or
add
push
cmp
decl
cmp
lea
jne
push
push
mov
hlt
push
orb
add
cmp
adc
shl
push
ret
xchg
psubb
ret
loope
insl
repnz
in
mov
les
sub
add
mov
sbb
testl
pop
movl
lea
or
sbb
jl
sbb
leave
mov
mov
cmpsb
js
xchg
sub
jbe
add
dec
maskmovq
imull
xor
sbb
cmp
pop
and
pop
sbb
dec
sahf
xor
pop
push
scas
adc
es
add
add
mov
popa
pop
sahf
mov
prefetch
or
jne
jb
enter
ret
and
xor
lcall
pop
mov
lea
lods
movsb
push
sbb
push
sub
lods
out
xor
aaa
rcr
popf
or
sub
in
leave
faddp
mov
lcall
outsb
add
movl
and
inc
inc
sub
sbb
push
mov
push
hlt
sbb
xchg
lea
push
jle,pn
inc
in
push
mov
fcoml
js
or
sbb
popa
sbb
mov
jmp
cwtl
jmp
pushf
repz
roll
ss
sbb
push
cmpsl
inc
mov
jo
shrl
mov
sbb
add
loopne
rcrb
add
sub
cmp
mov
pusha
enter
hlt
inc
clc
push
mulb
jne
dec
xchg
shll
add
push
sbb
mov
jo
xor
add
insb
ret
sub
inc
scas
in
sbb
es
add
dec
mov
fisubrs
jbe
mov
ret
push
aas
bound
daa
negl
into
mov
ja
dec
adc
imull
repnz
jge
fs
outsb
add
mov
divl
or
dec
pushf
xchg
xchg
fsubs
aas
dec
repnz
and
sub
push
push
add
sbb
mov
ret
enter
mov
rol
cltd
inc
imul
repnz
in
dec
fmull
sbb
and
xor
shrl
stos
rorb
insl
sarl
mov
aam
outsb
aad
and
movsl
sbb
inc
add
subb
lods
rol
ret
sarl
test
add
add
stos
push
add
insb
push
push
ds
push
fisubl
ja
mov
sub
push
add
repz
mov
or
test
pusha
fisttpl
enter
or
lods
push
push
insb
imul
loopne
pop
test
lds
mov
or
sub
cs
dec
or
call
lods
jo
adcb
aaa
loopne
push
mov
jno
mov
add
xor
mov
mov
dec
sbb
pop
add
push
push
stc
add
pusha
sub
mov
sbb
jns
sbbb
imul
repz
xor
inc
gs
aas
pop
dec
push
or
das
imul
mov
rorl
je
sub
sbb
jl
sbb
inc
mov
xchg
loope
pusha
leave
and
mov
or
add
mov
push
inc
or
and
adc
sub
test
mov
sbb
mov
insl
jo
mov
cmp
jo,pt
cmpsl
push
loopne
mov
xchg
mov
mov
xchg
adc
lock
jae
adc
push
sub
aaa
xchg
jb
inc
sub
and
lahf
adc
push
or
aaa
pusha
bound
dec
fiaddl
xor
out
sbb
hlt
add
cld
adc
test
push
mov
sub
or
sbb
test
cmp
xchg
fcoml
mov
lds
jne
dec
call
les
dec
or
repz
cld
xchg
push
or
jle
lret
mov
dec
cmpsl
xor
mov
adc
stos
ds
adc
jno
shll
jmp
pop
pushf
aam
mov
nop
push
scas
push
pop
xchg
xchg
popa
push
addr16
mov
into
repz
or
push
inc
daa
mov
cmp
push
data16
xchg
push
fistpl
mov
dec
mov
xchg
jge
push
add
cs
add
fmuls
xor
insl
movl
nop
mov
dec
adc
popf
mov
xor
and
fidivrs
aaa
fmuls
cmp
sahf
add
cmp
movsb
cmp
sbb
test
testl
mov
mov
scas
fstpl
add
xchg
xchg
pop
or
movsb
adc
push
push
loop
sub
insb
xchg
sbb
stc
lods
lea
shll
mov
push
push
mov
les
lea
pusha
xor
imul
je
mov
cld
es
cmp
scas
cmc
mov
rclb
xchg
js
sbb
push
sti
ds
xor
orl
or
jae
lea
aas
sbb
mov
mov
add
dec
sbb
adc
pop
cmpsb
dec
imul
imul
and
push
xor
inc
or
and
xor
or
xchg
cmp
mov
cmc
and
cltd
bound
and
imul
les
pop
lods
movsb
mov
es
pop
daa
rorl
jmp
mov
jae
mov
sbb
add
in
pop
pop
or
je
and
xchg
ss
push
sub
pop
and
pop
mov
add
aad
push
jge
lea
mov
lret
push
pop
xchg
jmp
outsb
sbb
rol
push
addl
shll
sub
int
push
pusha
mov
pushf
dec
push
mov
shll
fadds
stos
leave
cmp
add
sub
insb
ljmp
call
or
xor
das
js
daa
inc
imul
dec
imul
loope
in
insl
repnz
fnsave
push
repnz
xor
js
xchg
pop
lds
leave
stos
pusha
inc
in
xchg
inc
sub
xchg
sbb
ds
and
xchg
xor
fistps
or
lods
pop
fwait
push
sub
repnz
loop
add
or
xchg
xor
jbe
add
or
out
xor
mov
ss
mov
jns
jg
test
push
cltd
mov
push
push
push
mov
push
cmpl
shrb
inc
sub
aaa
flds
loope
jl
int3
and
cmpsb
popa
inc
mov
mov
sbb
cmp
or
xchg
fwait
sti
sub
xchg
cmp
inc
stos
cmpl
add
push
jo
or
jb
lahf
bound
pop
push
adcl
mov
cmp
jnp
imul
testb
int3
xor
cmp
jo
mov
push
mov
jb
imul
inc
fs
pop
insl
or
jnp
popa
loopne
jge
leave
and
cmp
push
mov
inc
rorb
or
cmp
daa
xchg
test
lods
add
jecxz
xchg
or
xchg
nop
cmp
jmp
jo
out
dec
pop
pop
adc
inc
fildl
sub
jo
inc
sahf
add
sub
cmpsl
bound
inc
aad
add
adc
call
xchg
outsb
mov
xor
decl
insb
push
sbb
add
and
pusha
xchg
decb
xchg
or
sbb
out
dec
cmpl
fwait
push
outsb
sub
out
and
ds
aaa
mov
jae
call
add
mov
inc
shrl
inc
outsb
mov
setb
insb
jne
leave
and
repz
mov
stos
arpl
ss
xor
or
and
ret
and
push
jl
ret
adc
mov
ja
jnp
lods
inc
inc
mov
jecxz
push
inc
dec
nop
rcl
loopne
mov
cmp
pop
ds
pop
mov
jp
in
test
push
xchg
ret
xor
inc
pop
andl
push
fmuls
inc
add
dec
inc
popf
out
cmp
cltd
sub
mov
cmp
dec
js
rcr
or
push
hlt
enterw
loopne
roll
cmp
fsubs
adc
cmp
xlat
fsubrl
mov
or
and
mov
rcrb
pop
jns
nop
add
popa
adc
jmp
xlat
and
dec
push
inc
outsl
cmpsl
dec
jo
sbb
daa
lods
pop
pop
add
add
push
aas
aam
sbb
adc
js
mov
out
xor
iret
cmp
loopne
jo
test
sbb
mov
xor
and
and
xchg
sbb
sub
pop
sbb
in
mov
inc
or
fnsave
cltd
cmp
in
push
pop
daa
imul
pop
sbb
pop
or
inc
pusha
dec
lcall
or
pusha
adcl
mull
insb
sbb
scas
mov
in
in
pop
test
cmp
mov
repnz
add
sbb
push
cmpsl
jo
js
fistpll
xchg
mov
adc
push
sub
rcpps
ret
js
dec
and
xor
insb
outsb
xor
xor
iret
push
mov
sbb
jmp
mov
xchg
out
call
sbb
stos
push
ret
test
jmp
push
sbb
mov
lods
addb
push
push
and
push
pop
add
cmp
inc
sbb
mov
pop
scas
jb
ss
adc
sub
adc
cmpsl
imul
push
ffree
sbb
or
push
ja
xor
push
in
adc
or
orl
add
mov
adc
push
jg
imul
mov
dec
ret
add
xchg
das
rorl
cs
xor
add
stos
xchg
adc
sub
mov
cwtl
stc
cmp
jbe
push
or
clc
rorb
push
movsl
jne
push
hlt
lock
test
xor
rolb
and
add
mov
test
sbb
add
add
outsl
pop
mov
loopne
add
add
xchg
leave
jnp
test
in
jbe
orl
and
add
in
xchg
cmpl
sbb
cmp
mov
aas
inc
out
push
push
inc
inc
dec
pushf
loopne
sarb
and
mov
mov
into
aad
jmp
lea
push
push
popa
or
pop
call
push
pop
insb
or
lock
addl
jge
jge
rol
je
cld
call
sub
call
sbb
dec
pop
and
push
sub
cmpsl
jne
jge
push
aas
addb
pop
xor
mov
ret
enter
enter
mov
jb
cmpsb
popa
enter
pusha
inc
mov
adc
xor
xor
and
cld
pop
and
adc
sub
pop
and
mov
or
push
push
push
je
pop
jo
dec
inc
lock
enter
outsl
bound
in
push
ret
add
fiaddl
adc
and
filds
jae
addl
fstl
lahf
push
rclb
icebp
lcall
or
arpl
in
stos
sub
cmp
dec
iret
cltd
inc
aad
and
and
mov
and
adc
or
pushf
pop
and
sub
pop
jne
cmp
push
mov
imul
movsl
cmp
push
jmp
adc
cmp
adc
sub
lods
inc
movaps
gs
cmpsb
incl
movsb
sbb
addr16
and
mov
pop
inc
push
sub
xor
cmp
and
into
aas
cmp
pop
inc
adc
sahf
dec
iret
xchg
or
xchg
push
push
out
add
sbb
lea
cmp
je
pusha
mov
mov
jecxz
imul
xor
adc
mov
sahf
cmc
insl
mov
adc
push
push
rcll
push
jge
sbb
cmpsb
icebp
pusha
cmp
dec
push
and
test
imul
lds
cmp
leave
xchg
pop
and
sbb
jno
mov
xor
pusha
adc
and
test
mov
dec
aam
pop
push
jbe
push
sahf
or
je
out
int3
mov
pop
inc
jl
jg
jne
lahf
xor
mov
adc
mov
mov
nop
jle
or
pop
mov
iret
popa
and
test
insl
push
push
sbb
mov
in
sbb
xor
test
mov
mov
add
dec
popa
and
jne
ds
mov
sub
dec
test
and
sbb
dec
test
cld
scas
push
xchg
sub
sbb
loope
or
lods
dec
aas
inc
dec
push
push
shlb
push
and
cmp
aas
pop
dec
aam
xchg
mov
cmp
addr16
adc
mov
inc
fistpll
lea
dec
scas
pop
shrb
push
mov
loop
ds
add
dec
mov
push
cmp
in
and
push
adc
or
cld
jg
enter
and
jne
push
dec
push
pop
adc
mov
xor
ret
add
sub
and
jmp
daa
fists
inc
dec
loope
fstpl
push
pusha
sub
cmp
jmp
in
mov
add
lea
je
rolb
je
cmp
inc
push
sbb
and
call
andb
test
faddl
push
insl
pusha
pushf
jo
popl
adc
ret
jo
ljmp
and
cmpsl
xor
stc
sub
inc
cmp
pop
xchg
clc
push
push
xor
inc
cmp
lahf
popa
inc
push
sub
adc
call
sar
add
jo
mov
push
add
add
fbstp
mov
out
icebp
mov
movsbl
push
rcrl
pushf
push
cs
stos
imul
push
sbb
push
sub
pop
sbb
mov
jl
jb
mov
test
jl
repz
add
fwait
lods
cmpsl
pop
ret
mov
and
ret
pop
faddl
test
cs
push
lds
lock
xor
js
hlt
sub
mov
mov
push
mov
jge
incl
test
repz
push
lea
loop
lock
push
mov
sub
leave
fs
cmpsl
std
mov
dec
push
adc
lods
adc
sarb
add
cltd
aas
adc
add
or
xor
cmp
cmp
jmp
sbb
pusha
add
xchg
outsl
xor
fcmovnbe
pusha
js
jns
aaa
xchg
cmp
add
mov
xchg
sub
js
mov
aaa
or
pushf
es
sub
xor
inc
dec
jo
cld
fistpl
cmc
and
fldl
adc
jo
mov
lods
je
mov
push
mov
dec
mov
repz
add
or
cmp
imul
inc
sbb
mov
jo
dec
lods
stos
cwtl
js
nop
imul
mov
or
mov
outsl
cmpb
jne
ljmp
bound
or
or
xchg
xor
jne
lods
repz
mov
push
sbb
rcrb
mov
jg
lea
or
cmpsl
xor
sbb
jbe
test
daa
pop
inc
test
xor
sub
sbb
push
cs
mov
pop
aaa
xor
sbb
push
nop
or
sbb
cmp
mov
jg
loope
mov
jg
lock
add
jo
xor
jecxz
popf
mov
sbb
movsl
mov
roll
lds
bound
push
inc
or
adc
pop
xor
in
jns
inc
add
sub
push
xchg
jno
xor
xor
xchg
jmp
cmp
stc
mov
pop
test
cli
mov
push
lea
dec
imul
out
mov
pop
fdivs
jbe
dec
xor
mov
int
lods
or
mov
into
loope
popf
adc
jns
mov
sbb
out
arpl
and
imul
scas
mov
jo
popf
jne
sbbl
sbb
adc
add
xchg
or
dec
add
pop
enter
ret
pop
nop
mull
sub
mov
mov
add
xchg
add
push
push
dec
and
testb
ds
inc
push
add
nop
out
stc
push
pusha
add
dec
and
test
mov
xor
mov
push
jae
pop
repnz
popa
test
lret
inc
hlt
inc
les
push
cs
jno
adc
aad
dec
xor
sub
sub
sahf
push
popa
test
test
jp
or
adc
ret
inc
mov
xchg
loope,pn
es
and
lcall
dec
add
push
shll
out
pop
int
mov
push
mov
and
test
popf
add
sbb
add
test
push
mov
push
pop
inc
or
inc
jecxz
das
jne
addl
mov
mov
fldenv
popa
push
aaa
bound
dec
adc
add
or
popa
mov
or
xor
pusha
je
cmpsl
mov
push
sub
mov
and
ret
nop
mov
pop
fdivp
nop
push
add
push
mov
jb
mov
lods
add
or
pop
loope
mov
cmpsl
jmp
mov
xchg
or
inc
adc
in
dec
sbb
and
jl
adc
mov
adc
and
loopne
add
imul
daa
nop
push
and
mov
movsb
sbb
mov
or
jne
fiadds
add
popl
add
inc
mov
or
pop
push
xor
jno
or
add
adc
add
enter
or
std
cli
lock
shr
lret
push
test
push
rolb
lea
xor
sub
dec
pop
and
jne
jo
xor
shl
adc
push
je
ret
mov
mov
and
add
sub
push
pop
test
or
es
bound
sbb
push
dec
push
ljmp
cmp
es
sub
push
fdivrl
lret
das
mov
cmp
jmp
add
mov
sti
or
nop
out
add
adc
add
push
shl
sbb
adc
sbb
and
mov
cmc
sbb
les
add
test
into
out
adc
sub
rolb
test
cmpsl
nop
mov
aam
sub
stos
dec
inc
xor
into
cmp
add
add
add
mov
jge
xchg
fsubrl
adc
pop
cmc
dec
lods
or
and
ret
xchg
push
sti
mov
rcrl
gs
inc
xchg
cmpsl
dec
push
in
adc
push
icebp
andb
je
add
mov
icebp
leave
jne
mov
dec
jne
sub
mov
inc
add
or
mov
addl
push
fsubrl
xor
mov
mov
sub
or
js
daa
enter
push
or
shlb
xchg
divb
add
rclb
push
push
jno
ret
xchg
dec
push
adc
fstpt
and
imul
inc
movsb
in
fs
rclb
add
add
xor
add
sti
or
sub
add
adc
or
xchg
mov
adc
mov
push
pop
xchg
or
or
je
ja
push
or
movl
in
push
stc
cmpl
test
hlt
xchg
xchg
jl
adc
sub
inc
adc
mov
and
test
repnz
fbld
dec
or
sub
sbb
aam
add
mov
cmpl
loop
xchg
cld
add
or
cmp
xchg
mov
jg
mov
push
pop
cmc
push
mov
adc
mulb
mov
adc
das
pop
add
gs
push
cmp
lods
int3
and
jno
xchg
cmpsl
or
test
mov
in
push
push
or
addb
pop
add
pop
stos
shlb
dec
addb
lods
insl
inc
leave
test
fcoms
sti
push
fdivrl
dec
insl
sub
jbe
lahf
jbe
loopne
mov
lea
mov
inc
dec
leave
dec
mov
stos
push
adc
push
lret
aam
popa
xchg
cmpsb
dec
sbb
add
dec
and
shr
adc
ljmp
add
ret
pop
sbb
lock
int3
nop
or
adc
stc
pop
int3
cmp
pop
loopne
dec
enter
out
add
das
lcall
xchg
dec
sbb
push
add
stc
pusha
adc
push
push
push
or
pusha
icebp
lea
call
xchg
dec
fists
ret
push
mov
pop
push
add
adcl
push
adcb
pop
pop
cltd
sub
dec
loop
dec
lret
inc
adc
mov
sbb
pop
addb
jecxz
loop
addl
rorl
pop
clc
ret
mov
or
adc
test
push
cli
and
mov
pushf
push
jno
sbb
add
inc
or
fwait
stos
lock
je
sbb
imull
je
cwtl
adc
cs
in
sbb
pop
adc
mov
mov
add
addr16
ljmp
jp
lods
xchg
loopne
add
sbbb
mov
scas
ret
outsl
fs
add
lea
cmp
jne
cmp
imul
iret
push
sbb
fs
pop
push
mov
mov
xor
xchg
dec
jo
mov
loopne
push
push
add
jge
jmp
cwtl
mov
sbb
nop
sbb
ret
xor
xchg
cltd
mov
mov
cmp
cmp
dec
jne
adcb
push
sbb
push
out
xor
bound
fidivs
push
xchg
mov
push
and
imul
je
inc
add
cmp
jl
jmp
jge
dec
shl
cmpb
hlt
cmc
dec
xor
test
ret
sbb
mov
and
mov
push
mov
add
nop
inc
mov
xor
lods
rcrl
add
testb
sub
inc
or
add
movb
cmpsl
add
cltd
sub
out
push
sub
lods
push
rorb
cmp
mov
shrl
aam
add
out
push
xchg
sbb
cmp
js
ficompl
jge
nop
in
push
sbb
test
inc
mov
test
adc
jne
std
and
inc
test
mov
push
movsb
jle
or
aaa
and
sub
je
jne
sbb
xchg
or
fs
mov
or
xchg
push
xor
add
add
cmp
and
sbb
sub
jmp
enter
call
jge
adc
in
push
and
add
sbb
mov
mov
sbb
xchg
adc
int
in
mov
in
dec
int
call
rcrb
je
nop
loopne
push
mov
pop
loopne
or
and
or
xor
mov
stos
sahf
addb
xchg
mov
xor
dec
sub
jg
push
pop
inc
nop
clc
adc
push
and
or
dec
push
sbb
inc
add
cmp
jmp
mov
popf
in
add
add
cs
js
or
and
js
sbb
sbb
push
dec
stos
test
femms
popa
mov
mov
ret
notb
loopne
mov
faddl
pop
push
mov
sub
test
push
pusha
mov
cmp
sub
mov
rolb
adc
daa
shll
and
stc
jp
pop
mov
adc
cmpsb
and
adc
and
push
cli
cmpsl
stos
push
shlb
cs
sub
das
mov
add
inc
clc
push
and
lahf
push
aaa
popa
xor
or
ljmp
push
xor
cmp
nop
or
mov
xchg
and
dec
sahf
cs
add
pop
shlb
movsb
hlt
cmp
xor
ret
jg
cli
and
push
cmpsl
pushf
xorb
lret
push
pop
xor
xor
cmp
outsb
add
jb
mov
mov
test
push
pop
mov
and
mov
sbb
shlb
adc
add
adc
add
fwait
lods
ja
cmp
jne
cmp
jb
sbb
out
mov
add
cmp
jae
or
jmp
xor
or
xchg
enter
stos
add
ja
push
push
push
xor
push
sbb
mov
jl
mov
pop
call
adc
dec
and
ret
mov
cmp
das
andb
das
inc
sub
pop
push
or
push
jmp
inc
or
aad
ds
mov
add
cs
mov
mov
push
cmp
loop
sbb
pop
jl
jl
fs
cmp
fmuls
push
movb
add
mov
push
repnz
push
push
cmp
xor
mov
push
and
clc
pop
out
inc
add
xchg
dec
or
test
mov
inc
lods
inc
mov
sarb
push
aas
mov
sub
mov
jbe
jo
daa
pop
or
mov
xchg
sbb
xor
and
sub
dec
or
iret
insb
inc
cmp
das
inc
add
mov
add
cmp
push
orl
das
add
inc
ret
pop
add
push
inc
and
push
movsb
mov
cmpb
fldt
call
mov
sbbl
and
dec
out
or
and
aas
out
mov
loope
iret
cmp
cmpsb
aad
adc
dec
or
add
outsb
pop
mov
sti
pusha
push
or
aam
push
fimuls
sbb
call
mov
mov
ret
or
or
jecxz
and
filds
mov
lds
add
adc
pop
push
cmp
aaa
jge
mov
sarl
inc
fimuls
push
sbb
adc
in
add
push
push
cmp
std
and
andl
sbb
push
imul
sqrtps
or
jb
mov
and
push
adc
mov
jbe
cmp
push
fistl
jae
rcl
cmp
or
lret
pop
jmp
pushl
and
mov
push
and
inc
lock
xchg
xchg
xchg
roll
es
adcl
rolb
pusha
inc
or
adc
xor
sbb
hlt
mov
je
leave
adc
popa
add
sbb
xor
clts
push
push
push
dec
call
and
mov
mov
ficoml
cld
jg
sub
lods
mov
adc
pop
inc
add
imul
cmpsl
test
mov
test
aad
mov
jge
cs
dec
pusha
in
jecxz
out
fwait
jmp
sub
dec
inc
mov
mov
pop
je
mov
add
push
call
inc
push
adc
xor
adc
mov
cmp
inc
pop
adc
jmp
mov
mov
or
xor
or
je
js
xor
lea
xor
mov
mov
dec
xchg
pop
aas
fimuls
imul
sti
adc
sub
inc
jne
dec
dec
add
add
push
repnz
add
cmp
sbb
sub
xchg
cmp
shll
popa
stos
das
xor
cwtl
pop
jb
sbb
add
dec
mov
and
sbb
push
rclb
sbb
or
xchg
add
push
xor
add
inc
sub
dec
add
add
and
and
push
push
nop
pop
sub
xchg
add
add
sub
dec
gs
inc
or
inc
push
push
push
nop
lret
adc
and
cli
cmpsb
sbb
add
sbb
mov
into
xchg
into
jg
adc
add
aas
or
inc
in
xchg
xor
int3
enter
rcl
pusha
outsl
aas
inc
loopne
pop
add
dec
mov
or
jbe
ja
fsubl
dec
adc
sub
pop
jge
ja
ja
pusha
add
pop
mov
xor
mov
mov
mov
or
mov
or
sub
adc
test
dec
and
leave
ret
cmp
sbb
ret
cmp
movsl
int
push
dec
rorl
aam
rclb
jae
push
int3
adc
enter
xor
push
add
aas
inc
inc
mov
or
lea
push
or
pcmpeqw
push
cmovbe
lcall
mov
or
movsb
sbb
cmp
or
sbb
mov
lcall
mov
add
movsb
sbb
adc
add
pop
sub
adcl
cmc
jmp
fcomip
mov
cld
add
add
lods
xor
add
adc
xor
dec
sbb
xchg
mov
pop
insb
icebp
mov
xchg
or
push
inc
lcall
cs
pop
push
mov
sbb
aam
push
arpl
jne
orl
insb
mov
push
mov
xchg
jno
int
and
sbb
lea
or
rcrb
shlb
add
stos
aam
and
dec
movsl
push
mov
cmp
add
or
jae
sbb
push
xor
add
roll
enter
mov
loope
je
ret
sbb
sbb
sbb
xorb
dec
push
mov
mov
jbe
add
add
outsb
pop
jb
and
add
mov
mov
push
add
loope
and
cmp
int
test
mov
xchg
mov
xor
adc
or
lea
mov
dec
sub
lds
or
shl
or
xor
daa
add
sbb
adc
push
fwait
test
pop
mov
int3
or
push
inc
mov
aam
jmp
mov
cmp
dec
push
push
push
ret
dec
hlt
pop
aad
cmp
or
sbb
test
call
pop
lock
mov
inc
insb
and
adc
in
xchg
rcl
jne
inc
jns
mov
rorl
rolb
sub
xor
sub
xorb
mov
or
and
add
lock
xchg
xchg
jmp
je
mov
push
sbb
adc
jo
mov
jmp
sub
pop
and
add
push
sbb
mov
sbb
xor
shr
cmp
fs
mov
push
stos
pop
and
push
or
mov
push
sbb
push
sbb
or
sahf
test
mov
and
iret
stos
adcl
xor
inc
jecxz
and
dec
fsubrl
push
jl
je
xchg
adc
hlt
rcrb
push
sbb
cmpsl
ror
andb
pop
and
sub
int3
and
sub
clc
add
scas
push
js
sub
mov
lods
push
inc
into
push
lcall
push
mov
add
outsl
sub
movl
in
pop
cld
rcrl
inc
mov
cmp
or
test
test
shrb
xchg
dec
xchg
pop
js
mov
outsb
push
jno
mov
out
adc
pop
lss
jg
inc
test
scas
in
xorl
cld
add
xchg
rcrl
imul
sbb
adc
inc
fadds
fisttpll
jne
bound
xchg
adc
ds
cmp
sub
fcoml
lock
loop
outsb
lods
inc
loopne
dec
push
pop
inc
loop
and
push
loopne
in
sbbl
pop
in
push
mov
cmpsl
adc
sub
push
pop
gs
out
in
sarl
mov
cmp
mov
mov
sbbb
pop
or
or
into
cltd
or
lret
lods
inc
mov
cmovs
add
sbb
rorl
push
or
inc
pushf
sub
sub
dec
push
dec
inc
fadds
mov
test
mov
add
push
adc
jne
xchg
push
cmpb
bound
int3
movb
mov
and
jmp
stos
fxch
xchg
add
jo
clc
adc
testl
xchg
cmp
icebp
xchg
inc
adc
pop
mov
fbstp
xchg
or
dec
mov
fiaddl
cmpl
lahf
push
and
jle
mov
fmull
sbb
jge
decb
lock
adc
sbb
sti
jmp
mov
and
insl
cltd
push
inc
jg
xchg
dec
pop
jo
xchg
add
loop
and
push
cmp
xchg
dec
xchg
pop
push
mov
insb
xor
dec
inc
daa
jbe
fucomp
lea
push
in
jb
inc
push
movsb
xor
add
push
sbb
inc
repz
mov
xchg
jo
add
inc
mov
add
orps
gs
or
dec
js
pop
or
stos
mov
jo
mov
jo
and
add
pop
mov
and
inc
and
sub
dec
ja
xor
adc
inc
inc
add
cmp
adc
inc
or
adc
imul
leave
int3
and
sub
xor
adc
ss
jne
stos
inc
mov
add
aas
and
int3
xor
sbbb
jo
and
mov
sub
mov
ss
adc
das
or
inc
mov
lods
add
les
in
mov
ds
sbb
pop
lcall
sub
sbb
sbb
cmp
sub
cmp
lock
test
jg
mov
movb
mov
or
adc
pusha
fldl
dec
adc
add
sbb
pusha
cmp
push
pop
push
jl
jl
pop
xor
into
pop
daa
ret
loopne
jbe
ret
sbb
pop
adc
xchg
mov
sub
mov
lcall
es
mov
inc
loop
dec
iret
aaa
ret
xor
lea
cmp
shrb
adcl
les
push
inc
or
ret
add
adc
cmp
add
je
mov
inc
adc
ja
or
dec
mov
adc
pop
adc
stos
mov
push
fstps
or
adc
push
cmp
dec
push
cs
sub
dec
add
inc
test
adc
sub
arpl
adc
icebp
push
and
push
sbb
xchg
push
add
sti
pop
xorb
cmp
jl
mov
and
mov
mov
sbb
add
xchg
hlt
outsl
cwtl
mov
fdivr
into
adc
mov
add
int3
sbb
push
rolb
push
or
or
jmp
cs
sbb
pop
pusha
loopne
dec
push
mov
aam
sbb
movsl
mov
insl
ret
xor
jg
mov
jo
movsl
mov
call
test
push
mov
push
inc
sub
jbe
cs
mov
js
push
xor
mov
out
mov
pop
fidivrs
pop
ret
jl
loopne
dec
jge
cmp
mov
rcrb
sbb
inc
and
sub
sub
sub
dec
xor
sub
xor
xor
sub
mov
sbb
push
mov
cmp
push
in
ja
ljmp
sbb
fsubrs
pop
sub
adc
add
in
push
jl
lock
pop
mov
roll
adc
xchg
orb
fdivl
jg
xlat
rorl
push
leave
addb
cmpsl
adc
into
pop
lea
pop
cmp
add
add
mov
in
adc
cwtl
mov
mov
add
loopne
lea
sahf
mov
xchg
dec
les
es
and
dec
mov
dec
cmp
adcb
loopne
clc
sub
xchg
adc
add
mov
jmp
add
sbb
rorb
data16
test
or
sbb
es
fcos
add
rolb
aam
add
push
and
or
lds
jmp
and
lret
test
or
mov
pop
in
push
jle
dec
push
mov
pop
dec
cmp
xor
test
incl
mov
sub
ja
xor
icebp
inc
jl
sbb
add
sbb
pop
clc
fmull
int3
int3
xchg
dec
mov
pop
pop
adc
push
mov
cmp
lret
xor
and
ds
insb
xor
mov
add
jmp
neg
pushl
push
xor
stc
cld
push
inc
imul
push
push
test
cmp
imul
enter
cmp
stos
fisubrs
mov
je
or
mov
cli
movsb
nop
aam
std
nop
xchg
cmp
fmull
sub
dec
push
shrb
xlat
cli
daa
je
xchg
test
add
jl
dec
je
out
data16
cwtl
mov
inc
call
mov
pop
scas
jl
sti
decl
orl
mov
sub
add
pop
dec
sub
pop
mov
in
push
movsb
inc
adc
push
mov
push
nop
mov
mov
jb
and
push
loopne
ss
dec
jns
xchg
sub
add
addr16
and
adc
mov
inc
cmp
and
and
adc
xor
adc
xor
pop
dec
pop
addl
push
pop
push
push
lcall
out
daa
daa
movsb
sub
lods
inc
sub
and
or
or
aaa
dec
push
fs
js
xchg
dec
aas
pop
mov
pop
push
pop
leave
nop
push
mov
push
sbbb
xor
pop
add
dec
add
add
or
jne
insl
xorb
aas
aad
push
xlat
push
out
iret
lds
imul
cmc
adc
push
mov
mulb
cmp
pop
mov
jmp
sbb
ret
shrl
dec
push
nop
inc
cmp
mov
enter
outsl
add
inc
jb
adc
inc
and
adc
jo
cltd
in
shrb
dec
adc
add
or
aad
ficomps
sub
sbb
adcb
add
add
cmpsl
and
or
pop
cmpsl
ret
sahf
pop
in
push
sarl
pop
sbb
mov
ss
insb
lea
ret
das
add
mov
mov
pop
in
add
add
hlt
lret
popa
stos
adc
dec
loop
imul
mov
xor
xchg
testl
inc
faddl
lcall
and
js
mov
fcmovnb
fs
cmp
push
mov
lret
xor
mov
and
or
movsb
fs
je
adc
push
stc
fs
arpl
pop
mov
incb
fstl
mov
lds
or
cmp
or
add
inc
mov
cmpsl
inc
cld
cwtl
and
inc
add
repz
push
jae
enter
cwtl
mov
sbb
repnz
fs
push
orb
dec
or
or
mov
adc
or
push
push
cli
mov
int
add
bound
insl
sbb
ret
sbb
and
enter
mov
dec
out
inc
dec
push
sbb
pop
dec
int3
push
and
out
and
stos
int3
rorb
dec
adc
mov
iret
fdivl
push
std
les
insl
fldcw
jb
ljmp
cmpsl
test
jle
mov
ficomps
push
pop
or
sbb
leave
fisubl
dec
xchg
ss
jmp
out
aaa
push
xchg
pusha
add
adc
xor
or
add
mov
sbb
fcomps
inc
and
icebp
push
pop
enter
push
add
inc
push
xor
mov
xor
sbb
pop
mov
dec
sbb
and
or
inc
dec
pop
sub
sbb
inc
push
dec
push
pop
enter
fs
and
pop
sahf
cmpl
adc
cmp
inc
or
bnd
push
inc
nop
out
test
inc
es
adc
add
push
sbb
or
ss
stc
cmp
jns
pop
je
hlt
push
and
dec
adc
dec
adc
inc
pop
push
mov
jmp
add
test
adc
imul
insb
leave
nop
mov
add
add
sbb
adc
add
and
sbb
pop
loope
push
push
pop
push
pop
mov
mov
jp
lea
xor
cmp
xchg
pop
inc
cmpb
xor
frstor
mov
cmp
inc
test
jae
inc
fistpll
sub
repnz
je
loopne
sub
clc
xor
fucomip
jb
cmc
bound
inc
add
xchg
push
mov
adc
add
cli
inc
sbb
lret
call
mov
js
or
mov
pop
je
fcoml
test
add
cmp
jb
test
cmp
scas
fsubrs
push
lds
pop
imul
sarb
stos
mov
and
lock
ss
xchg
mov
push
push
or
xchg
mov
arpl
fldt
mov
push
rclb
in
push
insb
mov
sub
pop
sbb
adc
push
lret
and
xorl
sub
adc
daa
nop
adc
add
mov
pop
push
daa
mov
and
add
pop
dec
add
adc
adc
adc
test
adc
inc
imul
add
orb
or
dec
xchg
fisttps
inc
lods
mov
popf
xchg
add
mov
pop
sbb
or
add
xchg
dec
daa
jge
pop
cmpl
inc
fsubl
out
cs
cmp
sbb
xorb
divb
add
xchg
int
rclb
jge
add
mul
push
dec
or
jo
sbb
cmp
clc
xchg
jp
xor
aad
mov
mov
lea
and
adc
inc
movsl
inc
inc
dec
aaa
or
dec
sbb
add
mov
outsb
adc
ret
sti
jnp
push
mov
mov
jl
xor
mov
dec
mov
les
cld
adc
cmp
mov
lods
mov
inc
imul
stos
pop
adc
push
add
push
sub
mov
push
sbb
daa
mov
add
mov
mov
jecxz
ja
or
add
dec
cmp
scas
and
adc
and
sbb
lock
les
fwait
imull
cwtl
jns
mov
push
push
lcall
iret
jne,pt
pop
push
or
aaa
cltd
les
jns
inc
or
mov
pop
add
and
adc
in
repnz
lds
push
mov
mov
shrb
xor
mov
inc
or
pusha
and
lret
pop
sbb
cs
dec
xor
sub
jle
push
xchg
adc
nop
xchg
inc
imul
stos
and
add
inc
subl
xchg
cmp
push
push
and
cmp
mov
int3
scas
jge
movzbl
bound
add
xor
dec
imul
call
xchg
pop
or
or
ds
insb
lds
push
lea
and
push
xor
push
aad
faddl
aaa
mov
push
test
test
sbb
test
cmp
je
push
dec
cmp
js
aad
push
xchg
mov
add
cmp
sub
cmpb
mov
test
sbb
jle
xor
adc
aam
and
inc
pop
imul
and
je
sub
pop
or
stos
imul
mov
popa
loop
push
push
adc
push
mov
adc
movsl
les
inc
lahf
ja
out
add
fisubl
push
jae
loopne
mov
jge
fstps
push
mov
mov
cmpsl
xor
mov
mov
jno
shll
mov
and
inc
mov
or
inc
cmc
nop
inc
mov
and
and
sarl
and
lcall
pop
cmpb
or
adcb
outsb
xchg
push
outsl
and
cmp
jg
lcall
xor
movsb
imul
arpl
pop
xor
pop
mov
mov
pop
adc
or
sub
enter
testb
push
sti
xchg
or
mov
cmp
adc
and
sub
in
faddp
mov
lret
nop
add
repnz
mov
arpl
jle
cld
sbb
insb
popf
outsb
cs
and
and
scas
or
dec
inc
mov
sbbl
sbb
or
imul
or
jl
dec
ds
sbb
js
or
movsb
sbb
jo
insb
es
push
dec
cmp
pusha
xchg
inc
pop
add
int3
pop
dec
push
or
cwtl
imul
add
andl
dec
cmp
arpl
push
mov
and
add
leave
sub
mov
pop
lea
cmp
inc
adc
mov
pop
inc
mov
test
enter
sub
enter
repz
add
xor
add
add
mov
inc
out
dec
lea
ffree
in
shll
xchg
andb
xor
mov
or
add
mov
test
adc
fbstp
jg
cmp
mov
dec
sbb
push
jae
sti
out
jno
jo
jne
jne
mov
fcoml
inc
lock
xor
adc
jg
movsb
cmpsb
mov
test
icebp
out
inc
xor
cmp
bound
mov
xor
orl
lea
add
pop
mov
loop
jno
xor
sti
jle
cmpsb
cmp
hlt
jl
or
sbb
pop
push
aaa
inc
ss
je
adc
pop
iret
mov
shl
xchg
cmp
dec
ret
pop
popa
sub
mov
decl
or
inc
jp
std
cwtl
dec
sbbl
or
jno
sub
shll
mov
adc
lods
es
stc
in
jb
adc
sti
cmp
add
vmread
inc
es
push
sbb
adc
jae
mov
and
inc
leave
test
movsb
xor
cmp
xor
cmpsl
push
cs
inc
jne
xlat
sub
loop
js
xor
and
mov
incw
mov
scas
and
xchg
xor
sub
sub
add
fisubrs
mov
and
enter
push
popf
jae
aas
xor
lea
mov
jno
mov
add
jnp
mov
add
and
push
cmp
inc
mov
xor
sub
je
push
jne
lea
pop
mov
dec
xor
cmpb
fists
dec
cli
stos
bound
adc
jbe
push
add
xchg
ss
cmp
jne
jo
cld
xor
data16
int
adc
sbbb
push
cmp
je
xor
adc
in
outsb
pop
xor
adc
sbb
orl
push
jl
xor
cmpsl
bsr
mov
out
inc
sbb
arpl
pop
dec
aam
and
dec
incl
out
es
jle
vmovhps
and
lods
js
adc
lahf
cmp
scas
mov
sbb
sub
add
push
dec
jno
mov
mov
push
pushf
and
and
cmp
fcoml
ret
mov
outsb
cmpsl
push
cmp
sub
insb
mov
xchg
add
inc
push
push
cmp
int3
sti
sbb
jle
addb
data16
push
icebp
sbb
out
pop
fs
fs
cwtl
aam
mov
cmpsb
xchg
cmp
adc
or
sbb
push
sbb
ror
push
and
adcl
loopne
ret
mov
adc
and
add
je
jecxz
jno
cmpsb
pop
clc
cli
pop
push
adc
insb
cmpl
cmp
insb
sbb
adc
sarl
inc
jl
sbb
inc
mov
mov
and
lea
js
push
jo
fcomps
and
xchg
adc
xchg
sub
and
or
and
test
xchg
add
xor
push
sbb
out
nop
dec
fsubrs
mov
adcl
xchg
xor
or
jl
mov
add
push
add
pop
inc
incl
out
jno
dec
sub
test
arpl
imul
orb
pop
push
and
pop
es
stos
push
push
pusha
leave
sbb
inc
or
xor
mov
inc
or
mov
jbe
mov
push
shrb
lods
cmc
lea
jg
sbb
stc
xchg
dec
insl
mov
pop
and
cmp
push
fs
lahf
nop
jb
out
mov
lea
add
data16
pushf
loope
fldenv
je
inc
mov
enter
pop
dec
mov
andl
test
pushl
inc
cmp
add
adc
or
flds
sub
loopne
jecxz
movsb
pop
push
or
xor
push
xchg
xor
and
inc
push
insl
or
inc
pop
push
outsb
inc
push
je
fistps
mov
mov
imul
jo
jbe
test
jno
xor
daa
push
mull
cmpsb
mov
jno
pop
push
in
and
push
adc
or
inc
cs
and
and
xchg
and
sbb
scas
xchg
and
and
xor
xlat
imul
fldenv
test
add
dec
push
std
and
lds
cmc
dec
push
xchg
clc
pop
dec
or
inc
inc
add
es
push
je
cmpb
or
insb
mov
lock
les
jne
inc
add
pop
sbb
int3
mov
push
xchg
into
es
nop
xchg
mov
daa
push
and
movsl
icebp
outsl
mov
and
lcall
ljmp
dec
aam
stc
xchg
push
xchg
cmp
loopne
orb
jmp
pop
mov
test
xchg
sub
stos
inc
pusha
lods
sbb
enter
mov
in
lahf
xchg
or
or
test
push
and
sub
push
cmp
push
mull
loop
movsb
push
sub
add
fld
inc
mov
jne
mov
push
jno
imul
dec
adc
inc
dec
inc
inc
sub
xor
push
inc
test
mov
pushl
fwait
push
push
in
and
xor
in
sub
xor
fldl
xchg
xchg
or
fwait
and
and
sub
adcb
cmpl
dec
or
into
pop
and
jo
insb
xchg
push
sub
sahf
cmp
sub
into
xor
inc
ss
mov
xor
inc
outsl
test
mov
ret
adc
xchg
movsl
sbb
xchg
pushf
or
or
and
clc
mov
sbb
cmp
mov
pop
push
xchg
mov
inc
sub
push
dec
adc
loope
je
into
js
add
inc
push
fldcw
enter
xchg
push
enter
add
xlat
aam
and
outsb
xchg
sub
repz
and
cmpsl
adc
add
add
push
jns
adc
iret
sub
inc
xor
test
fs
test
fmuls
js
add
insl
mov
mov
mov
and
js
adc
scas
cmp
inc
cmp
adc
jle
sub
or
xchg
test
mov
adc
test
push
and
bswap
call
lret
and
xchg
jb
rcrl
cmp
out
or
add
add
outsb
and
pop
or
cwtl
cltd
mov
sub
aad
mov
mov
sub
sub
daa
je
inc
aam
sub
or
push
push
adc
dec
pop
pop
and
sub
inc
pop
ret
sub
xlat
add
or
or
sub
inc
lahf
dec
aaa
inc
jg
or
jp
inc
push
out
daa
mov
jo
xor
sbb
and
cmp
sbbb
or
add
or
xor
sbb
jecxz
adc
inc
mov
sub
sub
push
jo
inc
inc
add
add
dec
adc
sbb
popl
push
adc
ret
sbb
mov
in
mov
inc
fidivs
lock
ret
aam
pop
mov
aaa
sbb
fistl
jl
inc
jl
add
in
dec
push
adc
jp
and
sbb
or
sub
dec
jb
push
adc
adc
adcb
lea
lods
or
adc
call
jb
or
adc
add
cltd
fs
or
repnz
or
adc
inc
sub
lods
stos
dec
sbb
sbb
push
fisttps
ficompl
repnz
stos
and
mov
nop
loopne
fs
icebp
pop
inc
sub
jge
sbb
mov
mov
jno
add
andl
bound
sbb
leave
and
add
sbb
jge
add
sbb
xrelease
out
into
xchg
sahf
xor
iret
mov
cmp
dec
movsl
loope
out
sub
and
mov
lods
stc
inc
pop
push
xchg
xchg
xchg
inc
mov
and
or
nop
sti
shll
pusha
mov
inc
and
and
movsb
add
and
in
dec
mov
and
ljmp
out
rcrl
divb
inc
insb
adc
jb
pop
das
pop
or
mov
mov
xchg
popf
mov
cmpsb
xchg
cmp
jns
dec
mov
es
and
inc
push
add
pusha
inc
call
add
insb
insb
push
add
lret
and
or
dec
lcall
and
mov
xor
in
mov
or
xor
and
loope
add
mov
jne
loopne
inc
push
mov
cli
subb
xchg
sbb
enter
stc
fnstsw
call
inc
mov
dec
and
imul
lret
rcll
add
add
lds
and
mov
and
cmp
mov
inc
adc
loope
cmp
rcrl
xchg
je
mov
fs
push
pop
nop
dec
gs
lock
add
push
inc
pop
push
pop
push
add
add
xchg
inc
mov
add
fnstcw
dec
cmp
hlt
push
add
push
xor
mov
add
lea
test
pop
sbb
orb
cs
add
push
push
jne
mov
push
pusha
popf
or
xchg
cmpsl
and
pop
xchg
int3
mov
mov
inc
movsl
jmp
test
roll
roll
movsb
mov
add
fldenv
jno
pop
movsl
or
cmp
mov
pop
and
and
pop
push
xchg
pop
in
xorl
ret
and
pop
dec
dec
outsb
movsb
popa
sub
test
testl
daa
adc
fs
cmp
dec
and
movsb
add
pop
les
lods
shlb
inc
sahf
fdivs
or
in
daa
ss
in
push
fmuls
mov
inc
fists
mov
and
or
pop
in
es
push
hlt
add
jnp
push
mov
mov
sbb
cmp
insb
aam
mov
sub
sarb
pop
scas
call
enter
xchg
ljmp
push
repnz
and
and
add
and
cltd
loopne
loope
mov
xor
add
cmp
test
adc
mov
rcrb
push
imul
push
cmpsl
cmp
xchg
les
adc
aam
frstor
push
cmp
sbb
sub
mov
lea
xor
call
rcr
xchg
push
mov
add
push
push
and
xor
xchg
push
int3
sbb
mov
mov
xchg
fcomp
dec
push
xchg
add
push
dec
push
in
xchg
sbb
push
dec
push
in
sbb
sbb
shrl
les
leave
mov
push
dec
es
add
add
adc
js
or
and
repnz
and
mov
cmp
es
enter
sarb
iret
sub
dec
subb
and
leave
xor
enter
mov
je
lcall
adc
jo
mov
cs
jae
cmpl
sub
jo
mov
pop
or
push
aam
sbb
std
mov
and
leave
mov
lock
xlat
inc
es
jne
ret
add
adc
xchg
addr16
add
add
andb
jmp
wrmsr
shll
xor
sarl
xorl
ljmp
dec
or
jl
jo
pop
mov
mov
lret
sub
dec
sbb
lcall
scas
push
xlat
push
mov
popf
pop
mov
sub
repnz
loope
jns
loopne
insl
sub
fs
push
push
push
pop
or
nop
fcoms
das
inc
inc
stos
inc
and
fcoms
inc
hlt
cli
xor
cltd
dec
cmpsb
les
xor
adc
inc
loopne
mov
push
xor
xchg
pop
pop
call
nop
add
dec
jo
lret
pop
xor
pop
ss
test
add
stos
adc
movsb
ret
cmp
adc
inc
or
cmp
xchg
mov
push
ret
test
pop
cmp
dec
or
es
std
pop
popf
je
in
and
sbb
xchg
aaa
arpl
repz
xchg
mov
iret
insb
inc
push
arpl
dec
cld
cld
imul
add
inc
arpl
enter
pusha
adc
or
inc
sbb
roll
mov
inc
adc
sbb
or
cmp
inc
adc
cmp
push
pop
push
push
or
sbbb
inc
pusha
in
stos
je
xchg
imul
ja
rcrb
inc
push
inc
sahf
or
add
inc
cwtl
aas
nop
addr16
pushf
movsb
push
in
test
cmp
jno
cmp
cmp
add
add
xchg
test
xchg
mov
ss
jnp
xchg
sahf
push
rolb
or
and
lret
inc
pushf
xor
jb
mov
fildll
jge
mov
or
or
sarb
outsl
mov
push
js
jmp
outsb
adc
inc
test
insb
adcb
mov
ds
faddl
or
xchg
xchg
fiadds
lods
lret
pop
leave
add
mov
inc
dec
lcall
adc
rcrl
aam
push
and
std
xor
orl
mov
pop
pusha
cmp
aam
sub
add
pusha
daa
out
and
mov
mov
movsb
jns
dec
lock
dec
push
add
xchg
fstpt
dec
dec
and
stos
adc
test
ds
sbb
cmc
add
dec
dec
cmp
movsb
cmp
sbb
jns
shrb
test
push
sbb
push
sbb
push
inc
dec
lods
dec
or
dec
pop
addr16
daa
mov
and
mov
sahf
mov
aaa
and
or
aas
mov
int3
or
and
sub
and
inc
xor
push
std
adc
xchg
jo
test
fs
mov
sqrtps
xchg
mov
push
adc
jo
call
subb
lret
xor
leave
repz
cs
aaa
cld
xlat
xchg
adc
lock
aaa
nop
mov
inc
and
cltd
adc
push
jge
push
or
jo
adcb
cltd
push
mov
addr16
sub
mov
test
rorb
sbb
dec
lds
pop
cmp
lds
fcoms
mov
rcrb
push
adc
pop
or
lahf
push
xchg
test
mov
sbb
pop
dec
aaa
sbb
and
js
sbb
dec
or
xchg
jp
push
jb
adc
pop
sbb
arpl
test
mov
sub
pop
pop
and
insb
dec
int3
mov
push
loopne
lods
mov
out
sbb
pop
inc
int
aaa
and
add
decb
into
je
push
movsl
sbb
jns
push
enter
pop
pop
sub
aad
pop
lahf
push
dec
push
cltd
jge
cmp
xchg
fistpl
sbb
add
or
mov
xor
push
cmp
inc
mov
xor
add
js
mov
xchg
bound
mov
movsb
push
sub
popa
push
dec
pusha
pop
mov
adc
pop
dec
std
aam
pop
rcll
pusha
lea
mov
dec
ficoms
jo
adc
insb
mov
cmp
test
inc
mov
aad
pushf
test
xchg
xor
dec
push
adc
xor
xor
or
sub
add
dec
les
pop
push
dec
add
push
cmp
add
add
push
pusha
rcrl
pop
enter
ja
push
outsb
les
adc
xchg
test
in
adc
xchg
cmp
pop
push
dec
mov
adc
pop
mov
scas
or
outsl
or
push
inc
sbb
mov
mov
es
xchg
or
adc
add
arpl
outsl
imul
fidivl
sbb
jb
adcb
sbb
mov
pop
cmp
xchg
jb
sbb
pusha
add
out
mov
dec
sbb
jno
sbb
xchg
pop
gs
jae
imul
jmp
xchg
inc
stc
add
or
and
icebp
push
xchg
mov
je
pop
pusha
outsl
push
sub
add
xchg
rcrb
or
test
mov
pop
and
mov
adc
pop
xor
push
lock
dec
cmp
movb
jmp
es
xor
jg
and
sub
push
inc
jo
push
shrb
adc
sub
dec
ljmp
std
dec
loop
mov
pop
and
inc
pop
xchg
or
lods
jb
xchg
and
or
lods
adc
orl
nop
or
pop
repnz
inc
or
add
pop
sub
add
stos
add
aas
cwtl
push
push
add
mov
add
test
nop
xlat
xor
inc
inc
add
inc
inc
push
in
sbb
add
sbb
in
shll
lea
sbb
cmp
clc
xor
cwtl
or
sahf
test
add
mov
ret
sbb
jnp
mov
adc
xor
mov
sub
ds
aaa
mov
rorb
pop
and
sub
lods
pop
jo
sbb
inc
mov
add
inc
inc
xor
and
add
mov
popf
mov
and
adc
cmp
xchg
rcr
pop
aaa
and
push
mov
xchg
fwait
sbb
inc
add
lahf
mov
pusha
push
and
daa
cmp
mov
sub
cmp
jmp
add
pop
dec
sub
push
mov
or
dec
ret
or
or
and
adc
cmp
mov
inc
inc
sbb
push
leave
inc
cmp
xor
xor
sub
aas
push
mov
jge
adc
or
daa
movsl
jb
adc
add
add
push
adc
adc
inc
imul
jmp
push
and
push
jb
dec
push
fwait
jnp
nop
push
pop
xor
bound
lahf
mov
adc
and
dec
adc
and
cmpsb
nop
and
xor
and
adc
cmpsl
adc
pop
dec
call
cmpb
cli
imul
out
nop
adc
iret
dec
jle
cmp
jae
mov
xchg
rorb
and
adc
push
sbb
std
jl
in
pushf
inc
clc
jo
dec
push
imul
pusha
aas
bound
mull
mov
add
push
ret
add
insl
xor
add
test
les
xchg
jle
loop
push
jo
and
cmp
dec
imul
jb
movd
mov
mov
aam
mov
lret
sbbl
inc
pop
push
popa
insl
fs
mov
insl
lock
add
jb
incb
insb
jnp
and
enter
jb
mov
test
inc
aam
mov
movsb
jg
or
loopne
adc
fadds
inc
lret
movb
pop
dec
xor
pusha
mov
push
push
aas
sub
mov
fdivs
roll
xchg
sahf
fcompl
add
test
push
imul
inc
xchg
pop
je
push
leave
jl
push
sbb
push
cmp
inc
adc
sbb
lahf
or
fwait
lea
dec
mov
add
lods
xor
je
cmp
inc
xor
jb
add
imul
add
push
pop
pop
pop
push
cmpb
flds
ds
dec
imul
push
sub
mov
push
inc
pop
add
shrb
lret
lcall
adc
lods
popf
lods
xor
sub
or
sub
ja
lcall
push
sbb
sahf
mov
push
mov
mov
xlat
js
push
pop
shrb
push
or
push
jb
rclb
iret
mov
adc
add
les
test
ficompl
cmp
xlat
sub
sarb
push
insb
insb
mov
xor
xlat
pop
pop
filds
ljmp
es
mov
inc
cmp
cmp
add
jmp
lods
push
nop
ret
js
test
nop
mov
and
xchg
or
xor
out
adc
lea
mov
into
iret
lret
xchg
mov
test
inc
add
jns
pop
inc
nop
mov
xchg
mov
mov
dec
stos
jecxz
sbb
inc
out
inc
jns
iret
inc
xor
mov
inc
mov
pop
rolb
iret
or
cmc
and
int
adc
fdivl
xor
xchg
sbb
scas
test
pop
push
mov
aas
mov
or
rol
int3
int3
mov
xchg
fwait
aaa
and
inc
cmp
pop
push
pop
push
lock
jmp
cmp
xchg
add
outsl
push
dec
dec
push
xchg
lods
rcrb
sbb
mov
scas
pop
push
xorb
movsl
mov
pop
imul
in
adc
addb
cmp
mov
inc
js
mov
out
mov
movsb
add
fmull
jle
ss
adc
lock
xor
movb
shl
and
or
enter
sub
add
push
das
lea
lahf
inc
fimull
push
mov
push
push
push
inc
push
jp
and
rcrl
loop
sbb
or
sbb
mov
js
or
jo
cmp
out
aas
add
mov
dec
iret
sti
call
adc
je
cmp
je
cmp
je
cmp
je
push
inc
cmp
or
pop
xor
jnp
hlt
jne
lds
cli
outsb
push
rorl
dec
pop
dec
rorb
lock
stos
lods
scas
dec
out
test
aad
jp
dec
inc
ds
sub
sbb
out
xor
pop
push
adc
and
sub
test
enter
mov
mov
enter
adc
cmp
push
aam
cld
out
sbb
shlb
sbb
adc
sbb
nop
adcb
cltd
add
jno
adc
and
rcll
lock
test
sbbb
cmp
outsb
sub
sbb
lods
mov
cli
xchg
mov
ds
sub
int
xor
or
mov
mov
push
lcall
orl
inc
sub
dec
aam
cmp
test
aam
sbb
xchg
xor
jle
test
out
das
add
mov
in
orl
sbb
sub
dec
sbb
mov
xor
js
or
and
fsubl
clc
mov
mov
jno
mov
and
push
adc
adc
in
ljmp
movsb
or
and
fwait
xchg
jmp
add
xor
and
pop
xchg
cmp
loope
ja
nop
clc
clc
popf
gs
and
pop
leave
lds
cmp
push
push
sub
mov
stc
pop
pop
int
sub
lock
xor
sahf
and
hlt
mov
or
mov
aam
jne
dec
outsl
adc
mov
fists
and
out
pop
out
xor
es
add
popa
push
push
movsl
je
adc
daa
dec
les
fisubrl
or
adc
test
jmp
frstor
mov
out
dec
or
insl
mov
mov
or
adc
dec
or
xchg
lock
jne
jns
sbb
pop
add
xor
jne
xlat
push
aas
test
and
fimuls
cld
adc
imul
adc
mov
insl
or
call
adc
mov
pop
and
sub
dec
in
icebp
mov
xor
adc
inc
mov
aam
mov
divl
mov
inc
rclb
pop
mov
inc
cld
int3
inc
sub
and
aam
aas
sub
xorl
std
mov
addr16
pop
js
cwtl
cmpsb
mov
outsl
or
ficoms
in
push
jp
rorl
pop
clc
jge
dec
xor
arpl
frstor
push
test
and
movb
fisttpll
popf
xchg
dec
loopne
jg
xor
dec
add
popa
aad
movsl
mov
test
jo
mov
je
xor
scas
mov
scas
jne
dec
fcomp
mov
and
scas
ret
test
cwtl
mov
mov
jnp
xchg
ljmp
shr
pushf
pop
mov
in
jbe
cmp
repnz
ds
xor
pop
or
dec
pop
push
bound
adc
adc
dec
pop
push
sub
sbb
or
mov
mov
rorb
adc
cli
cwtl
mov
inc
push
add
inc
cmp
xor
mov
loop
jo
ret
dec
call
stos
and
mov
mov
fsubs
mov
cmp
je
and
imul
or
cmp
jne
xchg
stc
xchg
inc
inc
xchg
xlat
pop
jns
in
addl
inc
les
mov
ja
mov
cmp
push
jge
adc
inc
xor
cld
inc
push
mov
mov
mov
and
sub
xchg
insb
push
cmp
mov
sbb
sbbl
les
nop
sub
mov
ret
sub
daa
add
pop
rcrl
xchg
and
and
mov
lcall
dec
adc
movl
add
cmp
rcr
mov
lea
dec
ss
cmp
movb
mov
lahf
adc
add
add
imul
and
inc
mov
shrb
mov
inc
push
sbb
aas
sub
cs
xchg
sti
test
add
push
je
dec
nop
insl
inc
lea
icebp
sti
push
cmpsl
addr16
sub
inc
sbb
pop
cmpl
lock
add
add
xchg
in
xor
pop
inc
xor
xor
in
push
inc
dec
add
rcrl
pop
ret
jl
or
mov
sub
push
shr
push
and
ret
sbb
sar
push
add
push
lret
add
mov
stc
push
pop
aaa
inc
decl
es
lret
mov
mov
loopne
mov
call
ss
push
cmp
jne
int3
jns
push
sbb
pop
enter
idivl
cmpsb
aad
jge
jno
lock
and
and
inc
jg
adc
and
sbb
loop
popa
sub
cmp
push
xor
insb
out
push
add
push
mov
cmp
pop
movsl
push
jp
cltd
add
or
push
les
ljmp
fs
lock
pop
jae
popa
push
lret
push
adc
and
pop
sarb
add
addr16
test
jno
rcll
jo
js
inc
scas
mov
ss
in
into
inc
rcl
movaps
mov
cmp
test
mov
add
add
xor
push
sahf
push
sbb
xchg
xor
or
ljmp
sbb
data16
insb
inc
or
hlt
sbb
sub
pop
cmp
sbb
enter
stc
data16
pop
add
mov
cmp
or
mov
addl
mov
xchg
push
lea
pop
xor
into
lods
mov
mov
ss
icebp
push
push
push
sub
adc
inc
adc
push
add
test
add
movb
lcall
push
or
push
clc
lods
pusha
or
lea
add
rcrb
out
test
jmp
into
mov
push
and
pop
fiadds
cmp
inc
add
inc
shl
xchg
push
pop
test
nop
sahf
jl
aad
or
out
jae
sahf
ficomps
dec
add
pop
adc
xchg
fwait
xchg
and
add
imul
inc
outsb
add
rorb
imul
loopne
shlb
mov
mov
mov
aam
cmp
push
pop
addr16
lea
flds
add
add
lcall
cmp
sub
add
flds
icebp
xor
sub
add
jp
jo
and
jnp
sbb
inc
inc
ljmp
add
shll
sbbl
or
filds
rcr
jge
jnp
push
mov
cs
inc
lock
aaa
push
cld
call
cmp
jne
test
je
mov
cmp
push
movsb
add
test
add
push
fcomp
test
jo
sbbl
jne
jle
sbb
sbb
jbe
insb
loopne
inc
pushf
push
pop
or
sub
pop
sub
rolb
xor
mov
dec
sbb
push
sarl
add
push
push
inc
add
mov
dec
punpckhbw
pop
out
cmp
inc
inc
dec
adc
scas
lcall
lret
mov
jge
mov
movss
loopne
jbe
or
add
dec
shrb
jmp
jge
arpl
or
fists
adc
dec
add
xlat
sbb
pop
dec
add
mov
dec
push
add
addb
or
je
add
mov
sub
sbb
nop
or
andb
cmp
inc
into
xor
or
lock
loopne
mov
cmpsl
fmull
lods
mov
inc
xor
and
pop
sub
imul
pop
jmp
push
add
cmp
add
mov
rclb
push
push
xchg
aam
sbb
cmp
mov
sub
xchg
cmpsl
add
xor
xor
pop
testl
pop
adc
imul
sub
adc
push
adc
cmp
mov
add
mov
xor
cmpsl
add
xchg
inc
out
xchg
popa
mov
pop
sbb
dec
push
push
cwtl
daa
mov
sbb
mov
dec
hlt
out
into
or
aas
fucomp
lcall
sub
push
pushf
xchg
scas
ds
aam
dec
or
mov
cmpsl
or
sbb
stos
or
adc
mov
imul
pop
pop
imul
dec
movsl
pusha
push
or
add
cld
cmp
loopne
mov
sub
dec
sbb
push
add
pusha
ja
and
pop
ror
cmp
jl
add
and
xor
pop
xchg
jno
orb
and
mov
inc
cmp
test
ret
and
ret
dec
arpl
fldcw
cmp
pinsrw
faddl
mov
add
add
jb
xchg
sub
cmc
or
inc
cmp
call
les
scas
fistpl
gs
and
inc
mov
dec
add
push
adc
mov
addl
hlt
rcrl
or
xchg
lods
and
sub
lods
and
popa
xchg
sbb
sbb
add
cmc
mov
jne
cmp
aaa
shll
shr
push
dec
movzwl
dec
pop
cmpl
inc
cmp
jg
setl
movzbl
dec
mov
icebp
sbb
push
mov
and
and
xchg
imul
aas
lods
xor
and
pop
cmp
and
je
and
or
in
ljmp
push
push
push
shll
or
in
push
ret
xchg
and
jmp
push
xor
lea
jns
shrb
or
mov
mov
bound
mov
push
cmp
xor
test
enter
mov
mov
push
mov
cmp
or
sub
cmpl
mov
fldenv
bound
pusha
and
sbb
aas
or
lock
pop
push
mov
sbb
push
push
je
pop
jnp
push
inc
je
mov
pop
add
add
sbb
scas
sbb
xchg
adc
mov
adc
push
mov
sub
inc
mov
xchg
and
adc
loope
adc
push
push
shl
or
add
sbb
cmp
dec
sub
mov
ret
jge
sbb
push
xchg
jb
clc
adc
adc
dec
mov
iret
das
pop
or
sbb
es
or
and
inc
inc
jno
push
fisubs
sbb
xor
aam
push
and
pop
cmc
dec
lods
nop
pop
sbb
jae
jae
test
test
dec
or
mov
inc
sub
sub
nop
addl
adc
or
sbb
in
xor
rcrb
nop
faddl
adc
or
push
xor
push
push
pop
dec
rcr
enter
ret
sbb
xchg
pop
mov
shlb
jl
cmp
aas
jns
xor
rcrb
jle
ss
test
pop
jl
sti
sub
lock
push
fsts
push
sbb
test
fnstenv
mov
jge
pop
lods
imul
sub
test
in
sbb
add
add
push
cmp
push
push
dec
inc
cmpsl
jbe
fmull
fbstp
jne
add
push
push
lsl
push
mov
inc
imul
fdivrl
rorb
xor
jmp
jecxz
stc
mov
adc
call
fwait
adc
inc
cmp
call
or
sbb
std
rcrb
ret
adc
add
sti
cmp
int
pop
lea
cmp
jl
outsl
adc
cmpb
jne
fildl
adc
nop
xor
cmp
inc
mov
and
sbb
xor
sbb
lgs
arpl
push
inc
ljmp
push
mov
mov
sub
sbbl
xchg
fsubrl
dec
push
dec
add
pusha
xchg
arpl
push
add
lea
push
jge
dec
inc
cmp
imul
push
enter
inc
movb
and
outsl
clc
push
pop
xchg
cmp
decl
push
sbb
test
mov
add
or
mov
cmp
push
and
cmp
xchg
adcl
sub
inc
jno
sbb
adc
sub
test
inc
fwait
mov
add
dec
lahf
sbb
pop
or
mov
push
arpl
mov
push
fcmovb
test
lea
shl
pop
dec
imul
subb
add
adc
lock
xor
adc
pop
adc
enter
xchg
jg
rcrb
dec
ljmp
pop
mov
add
mov
pop
daa
push
adc
push
push
js
push
push
jg
sub
jne
mov
mov
jg
push
inc
out
add
lock
xchg
pop
repz
jge
mov
mov
xor
sub
mov
cmpsl
in
aas
push
imul
pusha
jnp
xchg
dec
aas
mov
inc
sbb
xor
call
fisubrl
adc
or
adcb
xor
ss
fdivl
sbb
cs
add
imul
sub
in
push
inc
cmp
add
dec
and
pushf
inc
mov
dec
daa
pop
sbb
test
pusha
and
dec
sub
pop
push
inc
or
ds
std
xor
fisttps
sub
dec
jne
loop
add
mov
aam
push
xor
pop
or
push
insl
add
mov
dec
jl
mov
inc
ja
fadds
add
cmpsl
inc
jnp
cmp
inc
sub
fadds
xchg
dec
cltd
inc
dec
adc
or
push
add
dec
imul
push
test
xor
jo
loopne
movsb
add
dec
je
pop
mov
dec
lods
or
std
pop
or
jno
iret
xchg
and
daa
add
push
rol
loopne
fucomp
into
xchg
mov
push
movsb
jb
push
inc
je
lea
and
xor
push
orl
jb
jp
aas
xchg
mov
adc
repnz
xor
ds
pushf
push
rolb
sub
add
mov
cli
add
or
dec
inc
sahf
stos
in
lahf
push
cmp
enter
dec
pushf
push
jl
xchg
push
data16
sub
and
xor
addr16
movsb
push
adc
jae
cmp
aas
pop
cwtl
pop
xor
add
push
fdivrs
sub
and
and
into
int3
sarl
dec
adcl
ret
repnz
enter
push
and
and
add
adc
inc
aad
sub
aas
push
std
sbb
push
dec
int
scas
mov
leave
dec
push
shll
pop
push
adc
shll
cmpsl
cmp
xor
inc
mov
stc
sub
sbb
push
or
aaa
imul
or
mov
sbb
push
inc
test
cmp
jmp
mov
sub
xorl
jne
testb
cmpsb
aam
push
jmp
inc
push
jae
and
shrb
sbb
lea
add
xchg
mov
and
daa
add
mov
cwtl
cmp
clc
sub
sbb
cmp
mov
mov
push
push
push
in
cs
xchg
out
pusha
push
dec
sub
add
fldl
mov
or
cmp
mov
lret
sub
pop
je
push
and
shrl
inc
leave
loope
or
sub
inc
pusha
daa
cmpb
je
jne
mov
inc
add
add
pop
movsb
cmp
mov
sbb
push
pop
test
gs
pop
test
gs
out
cmp
dec
add
test
sbb
call
mov
imul
jmp
jb
mov
cmp
add
jne
arpl
mov
aam
stc
daa
incl
mov
aad
lret
adcb
orb
outsl
mov
add
sbb
cli
fildll
jl
je
test
jl
add
ja
aam
clc
jg
mov
das
inc
popf
repz
fadds
mov
imul
cmpb
je
cmpb
dec
push
mov
mov
push
sbb
sub
js
cmp
push
push
shlb
out
and
repz
adc
push
adc
clc
dec
aad
nop
sub
or
pop
inc
push
dec
shlb
popf
xchg
push
pop
adcb
jae
push
dec
cmpsl
filds
shl
sbb
jg
nop
mov
icebp
mov
out
lods
and
add
or
dec
adc
sti
push
push
xchg
stos
lea
sbb
cld
pop
ret
test
nop
or
lods
sbb
push
push
adc
xchg
mov
sub
loopne
mov
ret
div
or
xor
cmp
sbb
dec
sbb
cld
dec
xchg
out
addb
xchg
xor
xchg
push
daa
int3
lods
sarb
pusha
pop
or
jbe
dec
subl
jnp
xchg
or
push
xor
cmp
mov
xor
push
or
dec
sub
or
popa
inc
fisttps
jmp
add
pop
or
mov
lcall
jg
add
pop
sahf
repnz
cmp
jb
pushf
push
insb
jecxz
rcl
push
sub
dec
push
xchg
roll
out
mulb
ret
jnp
dec
inc
add
lods
push
mov
or
sub
mov
add
adc
stos
out
mov
dec
and
and
daa
fbstp
andb
pop
stos
sub
sbb
adc
lock
and
shll
inc
xchg
mov
or
push
jmp
mov
cwtl
push
push
lds
jp
jbe
sub
fisttpll
cmp
xor
add
fs
push
xor
loopne
in
hlt
adcb
add
push
jnp
mov
jae
xchg
push
cltd
pop
sbb
push
repnz
or
pop
adc
inc
push
rclb
nop
cmp
inc
in
pop
loope
daa
mov
sbb
outsb
mov
adc
rcl
push
push
cwtl
mov
sub
jecxz
cmp
xor
or
pop
sbb
out
and
mov
rorb
popa
ss
sbb
jb
sbb
push
dec
cmp
add
pop
mov
fildl
mov
fadds
sub
jno
fldcw
mov
xor
data16
fldcw
jl
xor
pop
lcall
push
loop
or
adc
filds
push
aad
add
adc
stc
dec
fisubrs
mov
jne
inc
and
adc
push
pop
loope
pop
inc
sub
cli
add
push
push
xchg
fwait
push
xlat
inc
loopne
out
pop
inc
shll
push
and
rol
loop
sarl
hlt
int3
cs
sub
pushf
imul
mov
stos
mov
out
push
mov
push
jmp
mov
call
push
clc
adc
dec
sbb
mov
push
movsb
mov
dec
or
cmpsb
push
jge
hlt
mov
lcall
clc
cmp
jbe
shrb
dec
pop
or
out
xlat
jl
add
dec
mov
xchg
pop
jnp
and
push
movsb
sub
or
mov
sub
sbb
jge
xchg
inc
nop
jne
push
in
push
mov
pop
mov
pop
out
fildl
std
cmpsl
lret
sbb
flds
flds
cmp
loop
pop
dec
les
fmulp
lret
leave
std
dec
iret
in
sbb
sub
fmuls
jno
aad
push
sbb
sbb
test
adc
fdecstp
xor
cli
push
adc
push
jns
pop
hlt
add
pop
jae
inc
movl
mov
or
cmp
fstpl
xchg
cmp
jne
cmp
push
add
mov
or
dec
or
ljmp
jb
cmp
jg
jl
cmp
adc
sarb
fldl
ss
movb
dec
add
fwait
inc
cld
add
inc
cmp
call
pusha
call
jge
mov
jmp
mov
popf
push
cltd
jp
sarb
mov
cmc
lret
sarb
xor
mov
adc
adc
or
insl
mov
lea
into
aaa
sub
mov
cs
cmp
push
push
adc
data16
pop
add
push
push
and
push
add
shrb
xor
cmpsl
xchg
or
push
xor
filds
push
mov
push
call
test
sbb
aaa
cmp
sub
and
ds
push
sub
cld
imul
lea
jb
mov
test
cmp
test
rcll
xor
xor
leave
andl
cmp
pop
ret
push
punpckhdq
pop
js
mov
adc
adc
out
mov
inc
lret
pop
je
push
dec
mov
stos
push
sub
repnz
mov
inc
imul
pop
push
push
cld
mov
lds
cmp
je
sbb
fcom
add
adc
cltd
cmovb
in
pop
adcb
add
fdivrl
jg
mov
jg
adc
mov
pop
jmp
fistpll
sub
add
push
jg
push
inc
mov
or
inc
inc
cwtl
popf
mov
jmp
push
out
mov
mov
add
dec
in
sbb
sub
inc
in
shrl
jne
and
out
and
or
fsubs
add
dec
loopne
imul
or
inc
cmpl
lea
pop
rcr
scas
sbb
ds
add
imul
push
cmpl
push
data16
adc
call
push
mov
push
push
call
cli
jae
push
jmp
cmpl
clc
xlat
xor
das
cmp
cmpl
or
shrb
inc
push
inc
push
lock
sub
or
add
mov
xchg
mov
rcr
pop
test
mov
mov
push
popf
inc
fs
or
test
nop
add
clc
add
loopne
lea
push
push
and
adc
daa
mov
ds
mov
adc
adc
sbbl
adc
cs
sbb
xchg
mov
jmp
push
and
push
jecxz
sbb
xchg
or
or
push
lock
mov
dec
mov
jmp
cld
sti
mov
andl
fisubrs
push
mov
add
shrl
mov
and
push
out
sub
sbb
in
call
inc
incl
je
inc
jmp
push
xlat
sub
popa
dec
in
jne
pop
jle
mov
add
mov
pop
sub
xchg
cmpsl
stos
and
dec
add
sbb
inc
and
or
fwait
lock
pusha
and
dec
lcall
xchg
push
xor
testb
and
repnz
pop
sar
xor
call
inc
ljmp
inc
adc
push
cli
push
icebp
and
sub
add
push
adc
inc
orb
cld
sbb
jo
pop
sbb
mov
push
or
fsubp
mov
cmp
data16
jne
popf
push
fdivl
or
orl
xor
and
add
pop
add
and
in
adc
sbb
in
or
orl
xor
in
mov
dec
xor
pop
mov
insb
je
push
cmpsl
iret
fists
lock
jne
arpl
push
in
out
cld
lea
push
push
aaa
mov
out
mov
rcll
push
icebp
test
lods
add
inc
orb
cmp
mov
xorb
adc
xchg
inc
mov
lock
inc
rcrb
fdivrl
insl
movsb
lock
jb
sub
sbbb
adc
jl
jle
add
call
xor
in
data16
insl
inc
push
shr
add
shlb
sbb
jmp
shrb
sub
repnz
inc
xor
inc
push
push
js
adc
and
rorb
cmp
cmp
cmp
loop
push
and
mov
sub
insb
ljmp
stos
cmp
out
orb
or
mov
cwtl
nop
cmpsb
ljmp
leave
lock
mov
sbb
mov
push
add
or
fcompl
adc
aad
pop
test
xchg
pusha
lahf
stos
aad
cmp
inc
mov
jp
jmp
mov
mov
je
rcll
add
push
adc
add
pop
ret
rcrl
data16
mov
int3
fst
inc
xor
mov
enter
and
jmp
pop
test
dec
fdivrs
cmp
ret
ljmp
add
data16
lret
jnp
push
xor
add
bound
lds
add
cmp
pusha
jo
mov
orb
mov
and
cmp
add
pop
in
mov
mov
out
push
divb
sarb
mov
cmp
add
test
cmc
adc
in
xor
dec
jmp
xchg
jne
insb
xchg
test
popf
aad
xor
mov
aaa
ret
mov
sub
ljmp
loopne
cmp
or
pop
mul
xor
add
sub
add
add
xchg
shlb
push
or
pop
int3
lcall
or
test
in
lea
je
pop
inc
pop
inc
mov
rcll
jns
push
jmp
adc
or
mov
sub
ret
imul
add
mov
insb
out
mov
or
jno
sub
pop
rorb
call
or
xchg
pop
sub
push
add
add
lea
loopne
mov
xor
pushf
mov
js
pop
pop
scas
out
push
rorl
sahf
ret
mov
mov
test
adc
stos
inc
xor
in
push
sbb
or
add
scas
adcl
mov
push
jns
cmp
adc
sub
pop
mov
or
data16
sbb
ror
xor
jmp
push
or
cmpsb
mov
lret
lds
daa
fs
add
add
out
in
inc
xchg
and
sbb
pop
bound
sub
push
push
imul
add
add
subb
lods
js
add
mov
in
jnp
jne
push
mov
mov
mov
mov
jecxz
icebp
mov
fidivl
cmp
jb
push
adc
loop
in
loopne
or
imul
mov
xor
fwait
mov
fs
loope
lahf
pop
push
daa
ds
cs
jl
push
add
lock
inc
lret
jl
aaa
jo
adcb
fwait
pop
inc
addl
mov
mov
je
mov
sbb
test
ss
rclb
insb
or
pusha
push
out
cmp
push
add
test
xor
cs
inc
jl
and
shlb
in
jle
add
fs
in
push
push
mov
adc
xor
rcrl
inc
push
fisubrl
xor
xchg
push
add
loopne
es
je
pop
fs
in
loopne
shlb
and
push
cmp
xor
jmp
inc
add
xlat
mov
clc
pop
mov
scas
jl
ss
enter
push
sbb
adc
bound
or
or
jmp
mov
rcr
movb
clc
rclb
aam
push
pusha
aas
sarl
cmp
xor
insl
jne
iret
repz
cs
add
push
jae
arpl
jl
sahf
das
push
je
inc
das
iret
mov
push
or
xchg
adc
or
into
push
push
or
aaa
jge
sbb
add
jecxz
test
cmp
dec
push
in
mov
jecxz,pt
popf
pop
cmp
jp
or
cmp
ss
in
pop
mov
push
or
int3
cmp
je
push
inc
test
jp
jne
push
clc
int
rolb
fcoml
cmp
and
push
nopl
cmp
mov
fadd
add
sub
add
add
fnstsw
lods
jo
mull
jmp
push
pop
icebp
inc
mov
sahf
xchg
rorb
dec
cmp
jl
les
push
loopne
and
pop
push
sbb
cmp
push
sbb
push
sub
jo
adc
xor
xor
out
out
push
push
test
mov
add
ret
mov
call
or
ja
dec
loopne
adc
les
fstpt
jno
out
inc
add
inc
loopne
pop
je
mov
jg
mov
add
cmp
rcl
ret
fmull
dec
or
push
cltd
mov
sbb
in
nop
push
out
shr
mov
insl
inc
cs
add
popf
popa
pop
mov
out
add
push
mov
mov
loop
subb
or
jb
mov
aam
pop
push
aas
adc
cmpsb
imul
lcall
jo
js
rcll
lods
fmuls
stc
stc
mov
andl
push
sti
or
push
mov
inc
int3
imul
xor
addr16
imul
scas
sub
push
and
pop
les
out
jmp
adc
and
ds
add
pop
ret
ret
int3
or
mov
cmpsl
xchg
in
test
jl
or
orb
jo
or
subb
or
fs
push
xor
push
or
and
sub
adc
inc
stos
dec
and
cld
sbb
leave
cmp
jne
sbb
into
clc
adc
and
divb
cmp
jne
mov
xor
test
cltd
icebp
out
pcmpeqw
add
aaa
in
cmp
cmc
cld
and
lods
mov
pop
mov
cltd
or
jne
cs
fistps
lock
cmp
sbb
loopne
das
rep
jne
sbb
jle
xorb
and
test
jg
ss
xor
xchg
add
push
ja
adc
pop
cld
sbb
jne
mov
pop
cmp
jb
mov
push
mov
xchg
sbb
jmp
or
push
stos
or
loope
push
pop
xor
shl
test
add
pushf
pop
pusha
js
shl
mov
mov
inc
mov
pusha
push
in
movsl
ror
mov
and
mov
shr
and
test
add
xchg
add
jge
repz
pop
jne
lea
orl
testb
dec
or
adc
popf
inc
push
out
addr16
imulb
add
clc
or
ret
inc
sbb
mov
fdivrs
js
flds
ror
adc
ljmp
inc
imul
add
or
imulb
pop
repnz
sbb
iret
push
dec
sar
stc
or
push
ljmp
push
clc
out
or
inc
xor
insl
jmp
rclb
out
movsb
add
mov
imul
mov
sub
or
clc
loopne
xchg
and
addr16
je
insl
mov
psllw
xor
jb
inc
xchg
ja
fldenv
push
or
or
pop
dec
loop
into
scas
sub
and
pop
xor
popa
bnd
add
daa
ret
adc
mov
adc
cmp
dec
mov
add
push
lret
clc
mov
cmp
jp
sbb
mov
lcall
loop
pusha
scas
or
sbb
jle
icebp
out
cwtl
dec
xchg
in
lea
or
lods
shlb
std
push
pop
sbb
cli
or
aam
mov
js
dec
inc
int3
add
jp
add
push
cmp
scas
adc
adc
inc
cmp
out
fsubr
adc
pop
push
push
or
jo
in
or
add
outsl
icebp
mov
pop
cltd
test
enter
push
popa
add
inc
mov
xchg
decl
push
push
mov
cmp
xor
sub
push
mov
push
lea
jmp
scas
jnp
ss
and
mov
and
out
mov
mov
adc
adc
cmc
dec
xor
lock
mov
orb
or
mov
and
and
sbb
nop
gs
je
or
mov
xor
enter
push
push
cmpsl
push
adc
aaa
clc
push
mov
int
aam
xchg
ret
ja
cmp
mov
loope
es
pop
cmp
je
testb
jne
mov
cmp
mov
adc
iret
je
xor
dec
inc
pop
push
mov
push
loop
fdivs
sti
push
sub
inc
pop
push
jmp
lea
or
repnz
dec
leave
imul
andps
js
push
add
lock
adc
inc
cs
dec
lock
lock
jmp
addb
movsl
and
push
adc
jmp
mov
cmp
jo
fs
ss
mov
jbe
mov
lcall
leave
add
add
push
mov
out
sub
lea
mov
sub
cs
mov
pop
cltd
jecxz
mov
lods
push
mov
inc
push
je
or
dec
popf
orl
mov
shl
pop
or
add
lods
sub
fcoml
cmpsb
sbb
test
ret
or
mov
add
sbb
inc
and
out
jecxz
outsb
scas
mov
adc
adc
mov
jae
sbbl
adc
mov
jns
insb
lds
push
jge
jne
enter
inc
mov
mov
inc
mov
dec
push
movsb
cltd
cs
cmpsb
call
in
mov
lock
outsb
and
das
pushf
arpl
cltd
push
mov
xchg
stos
or
enter
pusha
pushf
cwtl
fidivrs
pop
inc
lods
sub
push
test
sub
mov
sarb
je
sbb
mov
cmp
popw
out
out
push
and
dec
push
lea
push
jo
dec
loope
add
lea
subl
add
sbb
lods
add
adc
imul
or
outsl
cli
negb
rclb
out
xchg
pop
xor
pop
and
popa
lock
mov
push
adc
pop
add
mov
rcr
mov
pop
arpl
and
addl
movsb
inc
sub
faddl
into
inc
std
mov
sbb
jp
lea
push
cmp
je
push
adc
aad
movsb
lods
bound
cli
je
cltd
mov
push
cmp
je
ss
faddp
xor
ss
es
sti
and
sbb
jg
inc
jae
or
sbb
xlat
dec
sbb
std
in
pop
mov
and
pop
xor
call
pusha
mov
inc
ret
adcl
enter
pop
push
or
adc
pop
or
push
pop
into
jecxz
inc
cs
lock
xchg
sbb
in
cmp
sub
cld
xor
sbb
data16
lret
sub
push
repz
inc
cmp
lea
shl
dec
lcall
sub
fistl
xchg
sbb
loope
inc
push
mov
add
jmp
fiaddl
loopne
movsl
pusha
jle
loop
test
push
jmp
pop
test
xchg
mov
and
sub
mov
insl
pop
jmp
inc
cmp
mov
mov
xchg
mov
pop
mov
movsl
add
idivb
je
jns
fdivr
mov
add
add
and
cmp
adc
add
jo
push
cli
divb
mov
cmp
push
rcr
sahf
test
lods
cmpsb
fisubrl
loopne
lock
test
push
and
mov
jo
sbb
mov
test
ss
insl
aaa
push
scas
into
sub
add
les
aas
ljmp
mov
stos
mov
jne
dec
sarl
add
in
imul
insb
pusha
and
je
or
cs
or
xchg
inc
cmp
adc
push
arpl
push
jo
sbbb
insl
push
inc
iret
out
lret
sbb
push
imul
out
fldt
xchg
mov
pop
cs
mov
mov
inc
dec
or
test
aas
andl
mov
out
std
sub
stos
daa
or
sbb
cmp
pop
add
js
ficompl
jp
inc
addr16
add
ret
sti
and
and
je
cmp
or
jno
xchg
ret
add
jmp
xor
cmpsb
pushf
aas
push
mov
xor
fisubrs
sbb
movsb
sub
subb
ret
mov
inc
sub
nop
adc
pop
sub
ret
int
pop
cmpsl
inc
clc
xchg
test
dec
add
ljmp
and
xchg
sbb
rcl
les
stc
scas
push
push
mov
xchg
fdivrl
pop
addl
call
mov
xlat
adc
pushw
push
inc
test
nop
push
mov
gs
mov
test
add
jge
xor
popa
mov
repnz
add
and
xchg
fldl
or
mov
mov
test
stos
rclb
lret
lret
in
lods
jno
std
push
and
fbld
les
ret
mov
sub
sub
mov
and
neg
sbb
push
cmp
ret
inc
es
xor
and
adc
lock
fcoml
sbb
sbbl
insl
inc
insb
js
js
adcb
je
xor
sbb
cmp
lea
xorl
and
push
inc
cwtl
test
pusha
adc
xor
pop
inc
xchg
dec
jle
adc
ljmp
or
lret
inc
clc
push
jno
jl
aas
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
ret
cmc
ss
fldl
pop
cmp
rcll
outsb
test
push
adc
xor
ret
fidivrl
dec
and
xor
testb
jge
jns
andl
pop
loopne
lods
mov
mov
jl
andl
xchg
mov
les
sbb
and
sub
add
inc
or
xor
ret
jecxz
fistpll
sub
adc
push
push
ret
xchg
dec
outsb
mov
mov
jbe
mov
cmp
je
lahf
add
or
dec
lods
mov
inc
movsb
pop
ljmp
dec
and
push
test
adc
and
inc
cmp
cwtl
cs
sbb
mov
loopne
or
inc
clc
test
inc
dec
cmp
jp
xor
jl
or
inc
loope
inc
sub
adc
orb
push
sbb
not
loopne
push
cld
shr
pop
add
in
sbb
adc
cmp
outsb
adc
push
inc
adc
inc
push
and
fdivs
or
adc
xor
pushf
pop
imul
add
stos
dec
lret
pop
fstl
repnz
shlb
mul
add
push
pusha
push
scas
and
arpl
mov
xchg
je
rorl
adc
insb
aaa
incl
cmp
cmp
cmp
cmp
xorb
xchg
xor
add
sbb
std
incb
testb
je
and
pop
and
add
mov
add
add
pushl
dec
jl
loope
xor
xchg
xlat
rorl
movzbl
fcoms
or
insb
sub
push
xor
mov
inc
jnp
inc
lret
mov
lahf
sbb
dec
ds
addl
aas
fcomp
dec
mov
mov
rorb
jge
push
fadds
and
popf
add
jmp
aaa
add
add
jb
pop
add
fistps
mov
js
xchg
cmp
mov
test
pop
pop
add
sar
je
insb
aad
push
cltd
scas
xchg
push
cmp
filds
jbe
add
sbb
cmp
lea
inc
xor
cli
adc
push
push
lret
push
xor
mov
testl
push
push
dec
push
test
mov
pop
dec
inc
push
nop
mov
test
jge
cld
nop
jmp
gs
fcompl
pop
xchg
push
pushw
pushf
pushfw
inc
xlat
adc
push
aam
mov
push
mov
imul
push
mov
mov
xor
sahf
and
leave
lock
add
imul
xor
push
jo
jmp
xor
mov
mov
bound
push
mov
pop
cmp
sbbb
or
dec
cwtl
xchg
pop
dec
sbb
mov
insb
mov
cwtl
mov
test
mov
adc
or
adc
and
jp
pop
sub
inc
out
or
push
sbb
sarl
addr16
xor
add
mov
mov
xor
cmp
inc
leave
and
aaa
push
push
xor
add
add
xchg
cmp
and
add
je
push
xchg
je
lock
pop
les
movsb
adc
lock
daa
add
xchg
xor
ss
adc
pushl
xor
xor
dec
or
push
push
pushf
push
push
jle
into
add
aam
add
xchg
movsb
popf
jo
push
ret
lock
clc
test
mov
out
sbb
xchg
sub
movsl
aam
test
mov
pop
add
add
push
mov
push
inc
mov
in
out
or
push
in
inc
inc
cld
sbb
pop
or
cmpsb
push
and
and
in
dec
sbb
leave
sub
mov
sbb
mov
xchg
in
push
or
jae
out
inc
lret
and
mov
push
aas
add
lret
push
sub
orl
pop
add
xor
cmp
pop
andl
scas
shrb
dec
push
push
jp
loope
dec
insb
add
int3
mov
xor
cmp
pop
sub
mov
testb
cli
orb
jge
adc
or
xchg
add
testl
cmp
mov
inc
addps
cmp
and
inc
adc
fmuls
push
lea
loop
mov
movsb
mov
xor
push
or
sbb
xor
cmp
aas
xchg
das
je
sbb
xlat
adc
or
movups
test
loope
xchg
inc
cli
push
cld
mov
or
aas
mov
jg,pt
lahf
outsl
jge
movl
shr
inc
add
lea
loop
arpl
adc
loop
repnz
ret
adc
push
sub
cmp
insb
std
mov
decb
push
dec
fucom
dec
or
sbb
sbb
lock
test
lock
mov
clc
pop
and
inc
add
push
sbb
dec
stc
dec
push
push
pop
adc
mov
inc
hlt
rcl
xchg
jne
xchg
mov
imul
in
jne
mov
dec
jnp
jge
xchg
addb
sbb
dec
insb
or
xor
adc
mov
or
sbb
pop
push
push
shl
and
and
pop
xor
orb
rclb
in
loop
mov
and
pop
dec
scas
xlat
or
pop
pushf
sub
adc
push
mov
jbe
arpl
out
movsl
addl
insb
cs
mov
cmc
mulb
or
jg
call
dec
fmulp
dec
mov
inc
add
loopne
push
add
inc
xor
loop
hlt
or
xor
je
mov
dec
sub
add
adc
push
add
mov
inc
or
stos
das
push
ret
jnp
adc
push
push
sub
push
pop
mov
jmp
push
lea
mov
or
inc
xor
inc
aaa
jbe
jecxz
xor
out
push
mov
sub
or
out
pop
cmp
adc
push
clc
pop
adcb
lret
sti
addb
mov
xor
pop
jmp
inc
lahf
or
mov
hlt
out
jmp
dec
dec
jmp
mov
movsb
or
mov
adc
inc
lods
jo
in
shrl
leave
or
pop
adc
push
pop
adc
jmp
sbb
cmp
or
jp
orb
jno
pop
rolb
inc
mov
cmp
call
sub
jp
adc
in
lea
mov
repnz
ret
push
dec
ds
xchg
push
push
adc
enter
in
cmc
lret
sub
pop
fs
les
pop
mov
or
mov
or
adcb
lea
out
xor
or
jo
mov
stos
test
dec
out
fisubl
lcall
test
pop
pop
stos
sbb
mov
stos
or
loopne
pop
neg
add
orl
out
aas
adc
mov
or
js
push
push
add
and
or
push
mull
cmp
or
dec
or
xchg
clc
xchg
fadds
fcompl
movsb
fsts
or
inc
lcall
sbb
mov
fdivrl
dec
jmp
mov
and
push
mov
lret
jmp
adc
add
je
nop
adc
fistpll
shr
adc
je
add
push
jge
mov
testl
in
push
rolb
mov
push
in
adc
pop
xor
or
fcoml
jmp
mov
cmpsb
add
mov
adc
imul
or
or
and
xchg
push
mov
add
lret
aaa
mov
push
cwtl
lock
fs
movl
pop
pop
push
push
je
cmp
dec
lcall
in
xor
roll
lea
outsb
mov
dec
mov
test
mov
bound
ret
shlb
clc
push
add
outsl
push
testl
mov
iret
jae
sbb
outsl
adc
pop
adc
inc
movsl
push
rolb
arpl
testl
pop
dec
call
lods
push
and
push
mov
jge
and
mov
mov
or
aaa
adc
and
pushf
testb
int3
sti
push
xchg
add
mov
mov
dec
arpl
rcl
push
cmp
xchg
into
mov
push
and
pop
or
push
aad
in
in
testl
das
add
or
scas
push
gs
xor
xchg
mov
sub
push
in
sub
pop
into
loop
pop
dec
xchg
sbb
jbe
push
push
add
cmp
ss
mov
loopne
add
ret
testb
cmp
cmpsl
add
mov
pushf
mov
push
adcb
mov
mulb
and
jo
into
mov
ret
outsl
or
jbe
popl
sti
dec
ja
je
or
je
or
sbb
out
je
sub
scas
adc
cmp
cmp
stos
add
jl
pop
push
or
add
and
or
lcall
mov
push
jmp
cmp
fidivl
adc
adc
xchg
xor
inc
adc
add
sub
add
scas
add
mov
or
jbe
bound
fildll
call
or
push
ret
hlt
and
jmp
mov
push
fisubrl
out
or
add
je
call
or
popl
daa
or
pop
fidivrs
test
movsl
and
addb
sbb
add
pop
pop
lea
dec
or
adc
cmpsl
mov
sub
jg
dec
je
sub
sub
adcl
adc
add
push
adc
ljmp
or
mov
or
push
adc
inc
pop
xchg
pop
jo
mov
fs
dec
fbld
dec
test
fidivrs
inc
or
add
movsb
push
xchg
sbb
adc
nop
jns
mov
or
xor
push
aam
adc
rcpps
dec
and
rcrl
cmp
pop
inc
call
dec
mov
xor
inc
inc
das
mov
mov
add
and
stos
incb
mov
je
inc
sub
scas
sbb
inc
push
inc
push
dec
mov
dec
sub
cmpsb
dec
sub
cltd
adc
inc
fsubs
xor
mov
mov
push
jecxz
fs
push
stc
popa
mov
stos
xor
ret
xor
or
sbb
xchg
adc
jo
loope
add
adc
mov
into
mov
inc
add
xchg
les
cmpb
out
xchg
sub
sub
or
test
nop
adc
sbb
pusha
adc
add
jb
cmp
xorb
push
lock
movsl
call
push
push
call
push
fdivr
outsl
fdivrl
mov
cli
rcrb
xchg
pop
xchg
pop
scas
dec
sbb
dec
inc
push
sbb
add
adc
xchg
fcoml
in
dec
jae
and
and
in
call
sbb
xor
aam
movsb
sbb
int3
aam
mov
sub
mov
sbb
rolb
push
sbb
addr16
arpl
sahf
mov
adc
cmp
pop
dec
pop
addb
or
adc
jae
inc
rcll
subb
dec
fisubl
mov
sbb
cmc
or
insl
inc
sub
je
adc
pushf
popa
push
icebp
repz
jnp
mov
adc
or
add
jp
sbb
or
adc
mov
mov
or
push
xor
inc
rorl
push
shlb
js
mov
xchg
pop
mov
dec
fisubl
and
and
pop
mov
mov
les
movsb
cs
add
icebp
insl
lret
lcall
fldt
daa
daa
pop
adc
push
xor
inc
enter
test
inc
push
jne
jle
inc
mov
mov
mov
dec
in
ss
in
cmp
in
nop
in
adc
shlb
test
cmp
shr
fcoms
push
sub
and
sub
in
jb
subb
daa
mov
push
and
fucomip
add
shlb
orl
lahf
xorl
dec
das
mov
or
test
or
adc
xchg
dec
sub
jnp
addr16
cmp
in
cmp
clc
cmp
xor
or
xchg
push
push
xchg
mov
add
cmp
push
jo
cmpsb
xor
xor
enter
cmp
dec
inc
mov
add
jg
sbb
aas
xor
xchg
add
adc
in
add
js
aad
shl
call
pop
incl
push
dec
cld
sbbl
add
jl
xchg
fdivr
or
dec
mov
mov
pop
add
add
orb
clc
mov
pop
mov
out
pop
jp
movsb
mov
mov
mov
cli
outsl
xchg
shlb
les
lea
shlb
xor
dec
mov
push
jecxz
cli
mov
sub
sahf
and
ds
jae
ret
ja
daa
inc
addl
inc
or
aam
loopne
or
or
cmpsl
sub
jl
push
xchg
or
xchg
pop
push
addb
fs
or
sub
push
mov
inc
dec
stc
jae
mov
dec
and
or
push
jge
add
filds
sub
push
cmpb
dec
xchg
inc
rclb
inc
adc
sub
lock
sub
or
push
cmp
in
cmp
enter
lds
es
push
add
aam
xor
lret
dec
or
or
dec
sbb
and
fcmovnb
mov
mov
cs
sbb
ret
shl
push
movsb
jns
lock
mov
fidivrl
scas
mov
push
jg
push
jl
pop
out
dec
or
xchg
xchg
cmpsb
or
outsb
sarb
sub
inc
xchg
sarl
adc
add
xchg
add
and
add
insl
mov
aad
pop
pop
jecxz
dec
adc
and
rol
cmpl
sub
pop
into
pop
add
adc
pop
jle
or
xor
movsl
mov
mov
adc
add
sbb
aad
jae
cs
or
inc
adc
lret
mov
adc
xchg
sub
xor
loop
sbbb
rorb
dec
push
inc
add
out
mov
push
in
and
lods
mov
adc
inc
mov
adc
pop
sbb
mov
xchg
or
push
cmp
mov
push
sub
xchg
push
sti
loopne
xchg
xchg
loopne
inc
add
notb
idivl
inc
les
sbb
pop
loope
jecxz
sahf
add
pop
fisubrs
fldl
push
test
or
in
aaa
stos
xchg
mov
mov
push
xchg
add
jge
xchg
push
mov
xchg
mov
es
lods
mov
je
adc
add
adc
insl
sub
call
sarl
mov
push
adcb
or
xchg
call
dec
sbb
jne
or
sub
clc
xchg
mov
pushl
add
adc
add
sti
and
add
adc
xchg
shlb
sub
mov
mov
je
cmp
aas
js
push
rorb
push
xor
sub
jno
mov
pop
sub
push
fldenv
mov
cmp
sub
or
aaa
pusha
mov
push
jmp
movsb
or
sub
xchg
out
xchg
sbb
sub
dec
sub
in
add
cs
jnp
jle
sub
xor
or
inc
push
add
lods
dec
mov
cmpsl
fidivrs
add
adc
and
loope
imul
push
ds
adc
push
cld
push
cmp
ret
sti
mov
inc
shl
mov
jmp
cltd
push
xchg
or
push
cld
push
jg
mov
lcall
adc
adc
cmp
sub
out
dec
std
fnstenv
or
je
dec
push
push
push
inc
push
fs
shrb
cs
xor
fs
mov
inc
sbb
inc
push
cmp
sbb
push
pusha
inc
sub
daa
pop
jns
mov
add
xchg
xlat
inc
xchg
or
enter
push
inc
sub
lea
outsl
cmp
out
fnsave
clc
fs
xor
test
data16
in
adc
enter
inc
xor
repz
enter
in
xor
dec
xor
adc
in
push
sahf
sbb
bnd
add
or
or
movsb
jnp
ret
and
or
and
lahf
pop
inc
xor
inc
xchg
or
xchg
adc
subl
add
stos
push
mov
jae
fs
inc
dec
out
pop
orb
push
nop
xchg
je
dec
dec
sub
scas
sahf
dec
jmp
push
rdtsc
dec
mov
jl
jb
push
push
mov
adc
addr16
jmp
cmpsl
insl
pop
add
leave
ss
adc
push
pop
movsb
test
and
aaa
aaa
cmp
stc
pop
cmp
pop
or
test
loope
ret
dec
push
adc
pop
test
jne
push
dec
mov
daa
call
adc
xchg
es
les
push
sbb
or
sbbl
or
nop
cs
ficoml
sbb
mov
inc
sbb
lret
test
cmp
dec
loopne
roll
mov
idiv
stos
ret
and
mov
push
rorl
rcrl
pop
xor
sbb
sbb
push
cmp
mov
pop
xchg
out
push
arpl
dec
fmuls
or
jecxz
cmpsl
add
loopne
loop
inc
jmp
mov
mov
and
cmpsl
jbe
popa
cmpsl
je
movups
mov
hlt
out
loopne
and
mov
push
in
movsl
pop
sub
xchg
call
add
jns
cmp
testb
mov
xor
jne
orl
arpl
mov
lock
xchg
rcrl
sbb
add
std
repz
int3
pushf
pop
pop
inc
out
pop
jo
mov
sub
pop
add
pop
add
push
scas
orb
mov
mov
adc
mov
xchg
add
push
adc
and
push
pop
xchg
mov
sub
dec
xchg
lock
pusha
pop
das
sub
int3
or
pop
outsb
lods
xchg
rcrb
pop
mov
fmull
add
add
sub
mov
jb
arpl
jae
lods
and
sbb
sbb
in
inc
test
mov
add
loope
jne
lret
xchg
push
mov
js
in
jge
dec
jecxz
shll
mov
xchg
dec
cld
jge
adc
add
test
test
lods
imul
mov
ficoms
add
inc
cmc
jae
test
jns
cmp
and
sti
fbld
adc
jne
push
push
or
mov
lcall
or
jb
sub
inc
mov
push
pushl
scas
in
or
add
add
fs
mov
xor
out
push
out
pop
cmp
jne
sub
aaa
loopne
call
sti
jecxz
adc
cmp
dec
pop
mov
mov
popf
int
adc
cmp
or
mov
cmp
jge
ja
movsb
add
stos
jmp
call
bound
sahf
jp
or
sub
push
sbbb
push
and
or
js
jns
sbb
je
aam
adc
inc
mov
add
push
int3
loopne
cmp
push
int3
mov
and
mov
je
push
gs
xor
cmp
mov
jle
cmp
adc
mov
sbb
push
cmp
and
mov
add
fdivrs
sti
adc
add
push
outsl
sbb
or
cmp
dec
das
dec
movsb
bound
pop
jb
push
or
add
xchg
lods
out
pop
enter
decl
mov
das
popf
aas
push
xchg
inc
pusha
cmp
mov
add
ja
add
xor
out
pop
xchg
sbb
and
cmp
pop
fcomps
shr
push
inc
sub
pop
andl
push
add
xor
into
std
decl
call
jbe
push
xlat
push
fsubrs
cmp
div
jne
sbb
adc
into
jmp
and
lods
fldcw
dec
sbb
cmpb
dec
sbb
adc
mov
insl
imul
sub
adc
imul
push
outsb
jns
mov
dec
shlb
rolb
mov
jle
adc
rcrb
jmp
or
adcb
sbb
xlat
sbb
add
repnz
xor
sub
mov
mov
cmpb
imul
icebp
sub
mov
sbb
push
movsl
dec
inc
add
and
inc
jb
leave
add
sbb
sbb
xor
jmp
push
das
test
inc
push
xchg
xchg
adc
and
push
shlb
push
and
in
mov
stc
add
aas
xchg
jbe
iret
mov
leave
add
push
outsb
cld
cmp
jbe
cwtl
jnp
push
jl
push
or
jmp
aaa
pop
out
test
push
loopne
rolb
and
shrl
xchg
add
lret
add
push
xchg
adc
push
in
pop
lret
in
cltd
imul
and
push
pusha
out
push
or
sub
pop
std
nop
sub
add
out
sub
or
daa
rclb
xor
adc
test
dec
push
push
or
loopne
cmpsl
or
mov
push
push
cmp
outsb
pop
fidivl
lea
cmp
cmp
std
popf
inc
mov
rdmsr
or
aaa
push
test
cmp
movsb
push
shl
je
cmp
mov
loopnew
push
inc
sub
or
jmp
ficompl
or
fmuls
subl
push
movb
ret
movsl
inc
notl
push
lock
fdivs
andl
lea
push
push
xchg
je
jmp
sbb
std
xor
iret
or
clc
pop
inc
test
mov
cs
push
test
fcomp
adc
out
cmp
leave
fcmove
pop
enter
jns
jo
dec
push
sbb
lea
mov
jl
push
push
lcall
mov
add
pop
or
out
mov
arpl
add
xchg
jno
xor
inc
adc
movsl
aad
sbb
jle
bound
add
loop
or
mov
mov
pop
sbbl
adc
mov
xchg
adc
cli
ret
das
sub
add
push
imul
scas
and
rorb
lods
mov
sbb
movsb
cmp
dec
adc
push
pop
and
dec
and
or
mov
cli
or
pop
inc
add
or
stos
xchg
lock
fucomip
ljmp
int3
ja
add
add
je
pusha
xchg
add
dec
fsubrl
pop
mov
jp
sub
sub
lds
mov
push
mov
push
test
sub
jns
lods
ror
inc
inc
movsb
loopne
pop
imul
push
adc
add
aam
push
adc
push
sbb
push
add
mov
rep
cmpsl
mov
push
call
mov
mov
jle
movl
lret
push
pop
dec
leave
or
fisttpl
push
sbb
xor
add
jmp
push
jge
loopne
lods
loopne
adcb
dec
jnp
pop
push
dec
adc
sbb
jns
pop
ret
push
mov
mov
inc
imul
push
addb
loope
in
xor
or
test
pop
popl
dec
and
add
loop
stos
mov
adc
and
rolb
mov
sbb
cmp
pop
mov
xor
andl
cmp
sub
mov
cmp
fdivl
mov
enter
add
je
arpl
pop
cmp
std
add
imul
outsb
push
clc
rcrl
vmread
mov
cs
adc
js
push
call
clc
sub
popf
mov
mov
cmc
sbb
and
cmp
sbb
mov
add
push
push
push
inc
fildl
cmp
loopne
in
xchg
movq
cmp
filds
pop
leave
sub
mov
xchg
icebp
cmp
in
imul
cltd
cmp
pop
fadds
lret
test
pop
int
lea
mov
jo
add
cld
cs
pop
push
xor
cmp
ja
cli
sbb
je
mov
imul
jne
jno
mov
enter
cmp
mov
adc
xor
dec
test
inc
jecxz
mov
sbb
test
cmp
movsb
pop
xchg
imul
push
pop
push
insb
aaa
push
sbb
jl
test
sub
cmp
cmc
or
shl
inc
or
mov
sub
mov
mov
and
or
jl
sbb
mov
xchg
and
mov
shr
mov
rcrl
push
aas
push
sbb
lret
popa
jbe
out
and
shll
movsb
pop
flds
push
xor
dec
jle
and
mov
lock
cmpsl
call
in
daa
mov
or
and
sub
pop
push
mov
and
cmp
pop
jo
pop
pop
inc
jo
xchg
dec
in
loopne
add
add
es
or
add
pusha
add
sbb
add
dec
add
test
inc
sbb
sub
dec
push
addr16
int3
push
mov
dec
add
data16
jno
jns
inc
inc
jg
aaa
arpl
cmpb
mov
and
sub
add
add
adc
sbb
mov
and
imul
pop
sub
icebp
pop
or
mov
adc
insb
insl
inc
push
imul
testl
inc
pop
stos
ret
jp
shl
sbb
mov
or
push
xor
pop
adcl
test
call
pusha
jl
jecxz
cwtl
pop
loopne
mov
mov
jns
sub
mov
mov
cltd
gs
ret
das
bound
jmp
or
je
cmp
jae
add
mov
add
push
mov
in
adc
cmp
lcall
sub
or
cmp
dec
or
adc
lock
mov
stos
daa
pop
cmp
mov
pop
inc
test
inc
dec
dec
sbb
pop
dec
insb
jbe
cmp
movsl
bound
cmp
and
adc
jmp
sub
jae
adc
incl
not
and
mov
inc
sbb
andl
mov
adc
pop
push
push
jae
push
rolb
les
dec
jecxz
sbb
int3
loopne
fsubrs
adcb
je
cwtd
fiaddl
sub
pop
in
jl
adc
or
pushf
mov
xor
cmp
pop
inc
inc
mov
xchg
testb
daa
xor
ljmp
fiaddl
mov
jb
and
cmp
sub
scas
push
xor
pop
jmp
xor
andl
test
jb
push
and
loopne
push
lock
lret
adc
jge
hlt
and
push
mov
sbbb
mov
or
cmp
sete
fsubs
sbb
xor
test
sarl
out
dec
ret
shlb
add
and
cld
sub
test
and
xchg
ds
jbe
mov
inc
call
pop
mov
js
add
pop
shl
add
xor
add
lret
cld
lret
cmpsl
shl
add
jnp
pop
adc
push
push
mov
mov
cmp
notl
pop
adc
mov
inc
xlat
mov
nop
call
push
push
adc
push
popa
cld
cmp
push
or
test
mov
fmulp
cld
ss
adc
add
mov
adc
inc
jnp
divl
incl
pop
sbb
rcl
cmp
js
clc
int3
sub
fcmovbe
mov
adc
arpl
and
mov
push
push
add
or
bound
cmp
cltd
add
lock
stos
cmp
push
and
sarb
dec
jne
or
and
mov
lods
pop
sbb
xor
push
insb
addb
inc
sbb
or
pop
mov
jo
movsl
pop
aam
shlb
push
pop
cmc
ret
cmpl
popa
xor
and
je
or
push
mov
mov
sarb
testl
loopne
mov
jl
pop
sbb
add
jo
lods
test
sub
subb
les
and
jb
push
mov
adc
xor
xlat
dec
cmp
xor
bound
shl
push
sub
xor
call
adc
mov
jmp
push
inc
loopne
adc
inc
mov
cmpsl
and
mov
mov
xchg
hlt
or
jl
movb
shr
clc
adc
mov
adc
fstps
in
jge
rolb
es
pusha
adc
pop
repnz
xor
cli
add
push
jmp
add
inc
adc
add
movsb
dec
aad
add
daa
mov
or
pushf
ret
or
dec
dec
xchg
insb
loope
insl
es
mov
mov
or
cmp
orl
adc
imul
sbb
dec
or
inc
pushl
cmp
je
and
je
or
outsl
out
adc
jg
mov
rol
add
clc
jbe
or
add
jp
mov
jmp
shll
sub
lret
dec
inc
jg
orb
sub
insl
jl
int3
jecxz
out
add
dec
mov
loopne
add
js
cld
mov
dec
rdmsr
push
lahf
pop
mov
inc
rol
inc
mov
dec
js
fiadds
add
mov
fsubs
lock
lea
mov
fdivp
sbb
inc
sbb
mov
push
xor
xchg
in
pop
movsl
jo
rcll
sarl
xchg
pop
mov
enter
in
stos
or
xlat
mov
and
lea
lea
mov
or
xlat
sbb
push
jns
dec
adc
or
and
stos
xchg
pushf
mov
inc
dec
imul
sub
dec
shll
push
xchg
pop
adc
and
addb
or
rolb
call
shl
leave
jb
adc
or
xor
daa
or
pop
pushf
stos
mov
dec
xor
jmp
dec
jnp
push
shll
arpl
dec
add
jne
in
aas
aad
sub
lea
jp
cmp
add
push
popf
sub
aas
cmp
jb
pushl
mov
sbb
xchg
pop
or
pop
jmp
xor
inc
loop
jae
adc
add
and
in
and
mov
xchg
adc
adc
insb
mov
aaa
ja
fcoms
dec
push
cs
aad
dec
mov
dec
cmpsl
pop
xchg
arpl
lock
pusha
cmpb
adc
dec
notl
jle
movsl
test
sub
shrb
dec
push
mov
add
neg
and
ret
pop
lock
pop
xor
jmp
test
inc
movsl
push
dec
sub
sub
xor
dec
adc
sbb
inc
and
pop
mov
imul
and
dec
add
add
jno
imul
jo
ffreep
cld
ds
jb
cmp
cmp
mul
sub
and
scas
sarb
sbb
daa
or
cmp
sbb
insl
xchg
or
and
cmp
mov
daa
dec
shlb
or
dec
or
inc
jo
and
push
or
in
adcb
sub
in
jb
cmp
inc
adc
adc
ja
enter
dec
adc
xchg
jl
aaa
add
add
sar
add
or
mov
push
mov
fildll
jo
daa
xorl
in
faddl
xor
je
pusha
cmp
adc
inc
loopne
roll
adc
push
repnz
jb
mov
cmp
cmpsb
cwtl
jp
cmpsb
sbb
mov
sahf
xor
fimuls
fsub
push
insb
push
add
and
and
add
and
add
add
in
cmp
and
add
push
sub
in
daa
lods
in
cmp
sub
sub
cmpb
cs
lahf
lret
test
das
jmp
push
push
push
xor
push
xor
scas
inc
push
xchg
push
fcmove
xchg
xor
or
xor
mov
push
and
cmpb
push
fistl
lea
xchg
mov
jmp
xchg
cmpl
and
sbb
or
out
pusha
push
cmp
xor
dec
push
add
jge
jnp
adc
or
leave
adc
mov
adc
pop
sbb
xchg
adc
add
and
je
add
or
dec
js
ds
inc
adc
lods
mov
mov
inc
and
dec
lds
and
xor
pop
rclb
pop
movsl
in
adc
adc
adc
shrl
jmp
pop
int
xor
adc
inc
xchg
add
jae
add
lea
lret
fisttps
or
dec
mov
rcpps
jne
aad
jbe
mov
dec
icebp
aaa
cs
jb
push
jmp
out
push
sub
and
sbb
test
fs
or
daa
or
pop
jmp
fldl
push
add
mov
mov
mov
xor
dec
out
lcall
iret
mov
bound
jmp
int3
ja
push
adc
push
outsl
addr16
lods
xorb
jo
ljmp
test
pmaxub
stos
lea
or
jle
imul
ret
push
je
xchg
or
sbb
inc
add
shrl
test
rorb
jne
push
test
adc
shll
dec
sbb
ss
add
imul
movsl
and
xor
or
jno
lock
cwtl
or
dec
xor
inc
lock
repz
mov
pop
inc
sbb
pop
call
call
dec
push
jo
sbb
inc
call
arpl
out
cmp
je
in
dec
mov
pop
dec
sub
inc
mov
aas
cld
push
into
mov
ret
filds
push
cmpb
jae,pn
arpl
ret
outsb
pop
int3
ret
inc
push
in
loope
lahf
adc
cmp
inc
or
int
sub
sbb
push
jmp
cmp
cmp
mov
je
insb
lock
jmp
sbb
cs
or
mov
inc
mov
adc
cmpsl
pop
shl
sti
int3
in
or
clc
cmp
jg
outsl
inc
sbb
daa
and
sub
add
cs
push
or
inc
dec
mov
adc
push
inc
pop
and
prefetchnta
dec
outsb
pop
xorb
pop
mov
clc
add
cmp
jmp
push
xchg
mov
stos
es
outsb
je
cmpb
clc
dec
or
pop
and
loopne
mov
inc
and
int3
imul
add
shll
out
jmp
es
pop
add
or
scas
test
push
pop
or
cmp
bound
push
or
and
andb
movl
xchg
fsubrl
add
fs
repnz
mov
arpl
jmp
mov
lods
rcrb
jl
or
movsl
lock
orl
jbe
xor
or
mov
roll
stc
push
xor
inc
dec
mov
mov
add
je
push
pop
test
outsb
xchg
pusha
mov
rolb
push
pop
xor
pusha
movsb
adc
dec
push
test
and
jmp
cmpsb
rclb
pusha
test
cs
aaa
js
jo
mov
or
dec
pushf
xchg
lods
adc
or
or
push
shl
pusha
mov
dec
pushf
adc
mov
in
aaa
adc
add
jmp
shl
ss
push
stc
mov
dec
flds
inc
or
sbb
gs
aas
add
aad
inc
push
sar
scas
adc
out
mov
cmp
jl
cmp
jle
cmp
outsb
xlat
mov
or
pop
ret
aas
stos
mov
sub
iret
sub
pop
cmp
nop
cmp
jge
mov
pop
and
cmp
jl
clc
sub
adc
pop
je
push
dec
push
sbb
dec
rorb
dec
imul
fcomps
and
pop
and
hlt
aad
xor
inc
sub
add
push
sbbl
push
lret
cli
mov
cmp
incl
inc
hlt
mov
cmp
movb
push
inc
add
jl
mov
xchg
mov
mov
mov
ret
rol
pusha
dec
pop
add
jne
outsb
fiaddl
cmp
iret
push
or
lds
xchg
popf
das
inc
add
mov
add
cld
lock
mov
jmp
jnp
inc
dec
mov
or
cmp
mov
sbb
dec
xor
or
and
in
sahf
sbb
stc
rorb
add
sbb
call
mov
loope
cmp
cmp
outsl
push
dec
imul
movsl
pop
or
negl
mov
out
add
mov
ret
xchg
push
pop
cwtl
jne
sub
cmpsl
mov
clc
pusha
add
out
mov
jo
sub
jb
stc
movsb
mov
pop
fmuls
push
shll
inc
in
xor
inc
xor
dec
add
cmpsb
ret
cmpl
insb
dec
mov
xor
movsb
dec
lea
out
insb
decb
call
add
pop
hlt
jg
xchg
stos
pop
adc
xchg
ret
or
xor
jp
test
mov
add
popa
dec
adc
mov
pop
xor
ret
and
xor
das
or
sbb
sbb
inc
jb
adc
adc
push
push
pop
mov
js
pop
pusha
fs
sub
and
pusha
repz
loop
pusha
nop
mov
lods
enter
sbb
sbb
pop
outsb
rep
mov
ds
inc
dec
adc
add
add
mov
xchg
mov
and
cmp
push
cs
sbb
sub
pop
orb
negl
mov
shrl
mov
xorb
xor
call
test
jge
imul
push
pop
jne
inc
mov
xor
cli
lret
jae
shlb
addr16
xchg
add
jbe
jns
lret
push
xlat
int3
mov
pop
jp
sub
jle
and
imul
sub
jb
scas
lock
test
and
mov
and
push
push
cmp
and
inc
push
sbb
loopne
subb
das
xchg
push
ljmp
and
movq
mov
jmp
cmp
and
js
inc
inc
adc
xchg
cld
pop
lods
out
cmp
mov
lds
jmp
inc
shrb
jmp
cmp
dec
sti
insl
lds
popa
or
mov
orb
cmp
xchg
cmpsb
xchg
adc
or
popf
sbb
sahf
push
mov
add
cmp
push
or
lret
pop
cs
or
pop
ret
mov
les
pop
je
fmull
add
fldl
add
pop
sbbl
fisttpll
and
fwait
lds
mov
sti
movb
aaa
sbb
add
das
imul
pop
cs
hlt
dec
dec
xor
movsl
mov
cmp
xchg
mov
lea
inc
daa
loope
inc
xchg
dec
je
int
decl
in
stc
and
daa
je
cmp
sub
adc
and
call
push
add
pop
and
ret
sbb
inc
lea
jle
cmp
nop
add
mov
jmp
lock
xor
cmp
pusha
mov
fs
push
jle
mov
pop
pop
dec
add
and
jne
pop
in
mov
xor
pusha
movsb
or
push
push
outsb
sub
inc
bnd
mov
sub
stos
mov
mov
in
fstps
and
inc
and
repnz
call
fs
inc
bound
lcall
sbb
cmp
and
lea
cmp
dec
test
push
lds
cld
test
add
xor
xchg
aam
xchg
add
mov
repz
insb
mov
mov
pop
enter
sub
inc
xor
push
xor
mov
ret
cs
fdivs
iret
pop
fwait
inc
mov
sub
cmp
lods
push
clc
inc
icebp
jle
xchg
pushf
rcrb
add
fidivrs
je
cmp
ss
jb
push
add
cmp
fcomp
sub
sub
add
sub
sub
inc
mov
push
cmp
in
or
push
lds
cmp
ret
pop
push
sbb
pop
ret
stos
xchg
push
add
add
mov
fadds
jl
or
and
pop
push
out
add
pop
jecxz
pop
xchg
and
sub
iret
adc
pop
push
pmulhw
adcb
push
inc
adc
mov
and
pusha
dec
or
pop
js
inc
push
fldcw
hlt
push
sub
dec
pusha
fisttps
jb
pop
pusha
pop
mov
inc
dec
inc
cmc
ret
mov
push
pop
mov
shlb
es
cmpl
sub
jo
jg
mov
push
push
rclb
jae
addl
rorb
inc
add
ficoms
or
jnp
or
fcomps
inc
loopne
or
mov
dec
cmpsb
mov
insb
add
jnp
adc
or
add
gs
sub
adc
adc
aaa
jg
out
xchg
lcall
pop
mov
dec
mov
frstor
insl
fcomps
divps
xchg
mov
sub
fwait
cwtl
cltd
mov
xchg
int3
cmp
movl
jmp
test
imulb
pop
dec
cmpsb
shrb
inc
add
xor
jmp
andl
lret
inc
dec
loope
mov
push
arpl
mov
mov
ljmp
push
shrb
or
push
mov
addl
rolb
pop
sub
sub
in
jmp
add
jnp
adc
and
cmp
push
lea
pushf
mov
dec
repnz
sahf
out
call
inc
bound
je
inc
ljmp
xchg
cmp
ret
pop
orl
xchg
or
hlt
mov
inc
mov
daa
xor
pop
jle
dec
je
adc
or
lcall
push
loop
add
fsubrs
cmc
dec
sub
fldl
insl
push
push
out
pop
push
push
fstpl
add
fistl
cld
testl
jne
adc
adc
cld
cmp
iret
jne
push
divb
or
jne
add
repz
jne
or
push
ss
rorl
out
sub
cmc
inc
push
fstpl
andl
push
sub
push
or
pop
rcrb
std
dec
lods
dec
xchg
and
or
mov
add
cmp
aam
arpl
test
cmpsb
fstl
jecxz
outsl
push
and
mov
and
mov
sbb
cmp
lahf
ss
imull
inc
popa
dec
mov
inc
cmp
sbb
fsubs
in
aas
jae
dec
dec
push
lea
je
rcr
push
sbb
psrad
sub
aam
mov
mov
pop
loope
fwait
or
pushl
mov
push
jmp
inc
aam
push
or
out
fstl
or
pminub
inc
ja
lcall
lods
mov
push
jnp
fs
mov
and
shll
push
dec
mov
mov
jb
push
pop
insl
repnz
push
pushf
sbb
enter
cmc
mov
add
nop
add
fcmovbe
leave
add
mov
sbb
jge
scas
add
shlb
pop
aad
dec
iret
sti
cmpsl
ljmp
pop
push
push
orl
inc
rol
popf
mov
enter
movl
ljmp
sub
pusha
inc
pop
add
and
loopne
sahf
pop
adc
sbb
stos
dec
ja
adc
add
insb
scas
and
or
or
xchg
xor
scas
push
out
and
leave
addl
jl
mov
lds
push
push
repnz
cmp
xchg
cmp
adc
and
jne
adc
lock
add
xor
clc
sbb
cmp
les
je
fsubrs
jno
int
push
adc
adc
inc
inc
mov
or
mov
mov
or
imul
inc
fidivrs
shll
enter
sbb
repnz
add
push
mov
or
pusha
xchg
xchg
or
or
fmuls
and
dec
inc
fmuls
inc
pop
add
mull
inc
jo
loopne
adc
and
ss
call
dec
jecxz
adc
in
test
dec
dec
dec
pop
push
ror
enter
dec
dec
sarb
mov
test
pcmpeqb
int
sbb
adc
mov
xor
sbb
mov
push
repnz
add
call
xchg
push
adc
insb
sub
sbb
push
pop
out
pop
adcb
mov
ret
cs
push
es
fwait
push
push
rcll
sub
jge
add
les
mov
xchg
call
or
repz
mov
repz
push
add
sti
jle
decb
xchg
dec
xor
data16
jnp
repnz
add
add
shrb
cs
sbb
cmp
js
filds
addr16
pop
outsl
test
jl
push
mov
pop
and
je
add
add
xor
lods
adc
push
cmp
adc
push
call
or
or
xchg
pop
add
xor
aam
inc
adc
or
fwait
xchg
loope
repz
push
fildl
or
ret
pushf
mov
push
mov
mov
mov
sbbl
lret
stc
mov
xor
add
inc
sbb
insl
mov
push
push
lods
or
lret
cmc
lret
cwtl
outsb
mov
cmp
gs
into
orl
add
xchg
scas
cmpsl
test
xorl
leave
rorl
imul
in
lret
andb
insl
xchg
and
in
pusha
push
push
xor
or
fisubrl
adc
push
sub
xlat
dec
stos
jbe
roll
in
pop
fdivs
divl
das
add
inc
sbb
fs
int
sbb
divb
mov
cmpsb
sbb
and
leave
inc
mov
inc
add
sbb
inc
push
shrb
add
xor
pop
pop
cltd
adc
cmpb
je
xchg
adc
adc
mov
inc
daa
aam
xor
rolb
adc
orl
cld
pop
xchg
addl
pushf
xor
dec
insl
popa
test
repnz
xchg
adc
xchg
cmp
hlt
mov
lock
cs
sbb
push
pop
ret
lock
add
into
pop
and
sub
and
gs
or
stos
and
adc
mov
popa
mov
sub
gs
inc
dec
jo
andl
fsubrs
mov
out
jbe
iret
xlat
clc
sub
push
or
inc
mov
shrb
sbb
and
add
or
pmaddwd
xor
inc
sbb
adcb
cli
pop
lea
sbb
cmp
lcall
andl
dec
cld
data16
in
pop
mov
rorb
ljmp
ret
dec
clc
aam
divb
inc
or
rep
push
in
xor
jp
test
into
loopne
pushf
jecxz
dec
pop
sbb
xchg
js
pop
sub
ret
jl
lds
cmp
mov
adc
and
jb
gs
push
icebp
adc
jle
hlt
dec
mov
and
sbb
pop
sbb
andb
jge
sub
in
mov
jmp
jl
dec
push
mov
pop
adc
jne
mov
popf
mov
imul
add
rcll
adc
xchg
cmp
adc
lods
cmpl
push
push
popf
mov
pop
movsl
and
test
jge
inc
fisttpl
push
dec
add
add
stos
xchg
add
pop
add
imul
mov
lods
repz
mov
xchg
mov
leave
in
xchg
mov
fwait
in
cmp
cmpsb
add
rcrb
adc
or
int
or
jmp
or
inc
cmp
es
sbb
in
xor
pop
and
inc
sbb
and
add
push
iret
cmpsl
lock
icebp
adc
cli
add
call
jbe
in
rolb
mov
mov
lea
imull
xor
idivl
int
shl
in
js
or
sbb
cmp
lcall
pop
in
sub
pushf
push
jg
ss
sub
rclb
leave
push
and
pop
sbb
pop
popa
lods
push
or
dec
ret
mov
mov
sub
aaa
test
pusha
lds
fildl
xor
cmp
xchg
xchg
or
sbb
test
lock
cmp
sub
add
xchg
rcll
aaa
jno
pop
add
repz
and
mov
daa
ret
adc
es
orl
sbb
jbe
addr16
sbb
push
jne
inc
push
pop
jg
jge
stos
mov
insl
in
lds
push
add
repnz
xchg
imul
mov
movsl
lock
les
add
dec
cmc
mov
or
inc
adc
rorl
pop
jnp
mov
ret
arpl
sub
fmuls
es
ret
andb
fistps
test
pushf
lods
add
in
aam
push
add
and
jae
mov
cmp
xchg
lock
cwtl
inc
bndstx
ret
and
sub
movsl
ror
ret
lea
adc
lods
push
sbb
cs
in
mov
dec
inc
mov
lds
test
push
xchg
stc
xor
stos
mov
inc
or
mov
pusha
incl
mov
scas
dec
ret
popa
int3
jo
sti
jnp
xor
dec
sbb
sbb
or
push
jg
push
pop
shrb
test
and
dec
add
cmpb
je
insl
addb
jne
cmpsl
clc
jno
or
dec
nop
and
mov
addb
jne
sbb
adc
and
jne
inc
mov
in
stos
push
shrl
arpl
adc
add
aaa
lock
test
and
iret
sbb
cmp
add
adcl
xchg
into
cld
and
outsl
push
test
mov
lds
push
orb
jle
mov
cmp
mov
mov
testb
and
push
loopne
mov
or
out
jo
xor
or
dec
dec
mov
imul
es
rclb
les
les
jo
test
dec
push
addb
jp
cwtl
add
andl
aad
sbb
fs
xor
xchg
sbb
movsl
xchg
fidivs
dec
add
push
imul
pop
fisubs
mov
push
dec
cmp
in
test
add
movsl
xchg
add
out
push
dec
dec
and
push
das
xchg
inc
push
cmpsb
pushf
push
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
movsb
jb
jo
pop
enter
orb
movsl
xchg
sbb
xchg
jp
sub
cmp
sbb
or
imul
in
iret
and
sub
sbb
fs
out
pop
hlt
cmp
sbb
imul
and
les
inc
imul
inc
mov
adc
je
js
scas
sbb
shll
cmp
or
shll
cmp
loop
mov
xchg
pop
cs
sub
add
enter
je
stc
add
and
jp
mov
jbe
push
and
push
test
sbb
inc
fidivl
sbb
pop
out
sbb
pop
push
lock
or
es
xchg
or
adc
jmp
and
and
mov
push
xor
lret
mov
out
add
xchg
or
xchg
inc
sub
shl
mov
and
xchg
lea
push
sub
daa
xchg
adc
insb
test
nop
lret
add
and
in
sub
and
mov
sub
adc
les
test
out
or
mov
fisubrs
cmc
and
pop
cs
js
or
sbb
xchg
repnz
dec
sbb
and
dec
addb
adc
sahf
mov
xor
lahf
js
xchg
jl
test
pop
sbb
adc
dec
add
xor
pop
adc
pop
ss
cltd
test
outsb
int3
and
push
inc
jg
test
mov
xor
mov
leave
addl
lds
testb
push
xor
add
addl
push
das
call
aaa
jne
and
jge
daa
pop
mov
xor
sub
nop
shlb
mov
and
xor
or
add
mov
in
push
adc
or
pop
cmp
pushf
add
loopne
inc
movsl
mov
data16
adc
dec
out
faddl
sbb
iret
insl
gs
int3
add
lods
inc
loopne
arpl
in
out
cmpb
fisttpl
cs
jnp
push
sbb
push
xchg
outsb
in
jne
call
out
xchg
pop
ret
stos
mov
xor
test
sbb
inc
dec
inc
cwtl
sbb
add
cs
pop
add
aam
inc
push
insb
xchg
add
mov
or
es
jo
out
cmp
adc
loop
pop
push
xchg
int3
fistl
cwtl
lret
jbe
sbb
sub
orl
push
sub
hlt
mov
insb
xor
mov
xchg
push
inc
mov
push
cmp
pop
pop
repz
fwait
movsb
inc
pop
xchg
xor
dec
fcoms
sbb
mov
pop
ja
sarb
adc
ds
mov
call
dec
lock
mov
pop
add
outsb
mov
mov
add
jmp
ret
les
add
jmp
repnz
dec
scas
mov
xchg
inc
sbb
jb
xor
nop
add
stos
push
push
test
sub
loop
jae
xor
dec
or
popa
lods
icebp
mov
xlat
jae
dec
lea
call
inc
adc
aaa
xchg
or
pusha
mov
push
mov
sub
jne
test
jle
ret
add
test
test
stc
pop
dec
fdivrs
add
fildl
pop
ret
lods
fdivs
adc
js
xor
and
pop
popa
popf
push
sbb
jb
adc
ljmp
imul
movsbl
add
inc
mov
ret
imul
add
test
fcoms
cmp
je
cmp
or
mov
cmp
aam
or
add
inc
dec
add
movsb
or
adc
cmpsl
outsl
cmp
jne
jmp
js
test
jg
mov
fisubl
jno
and
movb
and
and
push
les
dec
jns
ja
pop
mov
push
incl
jmp
inc
pushf
xchg
sub
outsl
pushf
imul
pop
mov
stos
incl
insl
imul
test
shl
or
dec
or
adc
inc
sbb
cmp
or
popf
mov
outsb
push
and
repz
lods
mov
or
inc
fstp
push
adc
add
add
dec
fcmovu
fnstsw
test
je
and
cmp
inc
xor
aam
mov
sbb
fldl
add
cmp
insl
aas
mov
mov
sbb
fsubrl
push
sbb
jno
add
mov
fldz
out
cmp
inc
add
dec
and
pop
fsub
pop
fsubrp
and
pop
clc
jge,pt
and
loope
out
shlb
xor
jg
repz
add
xor
dec
add
inc
rcrb
adc
and
mov
mov
aas
inc
aad
int3
cmp
je
add
movsb
popf
inc
shll
adc
pop
mov
sti
andl
repz
inc
sbb
lock
inc
and
push
adc
add
les
cmp
sbb
push
sub
xor
mov
mov
xchg
lea
fdivrs
ja
and
mov
xchg
out
xor
imul
lret
out
stos
mov
outsb
xchg
xor
mov
ss
adc
fisubl
pop
in
mov
or
add
jns
enter
aad
xor
push
cwtl
rolb
xchg
out
je
ja
mov
fsubrs
cld
nop
mov
lret
xor
lock
xor
and
push
in
xchg
and
xchg
adc
sbb
stc
aaa
notl
lret
mov
push
xchg
repnz
nop
mov
mov
cld
or
aam
sbb
adc
loope
lahf
pop
or
add
shll
sub
and
push
loopne
leave
addl
rcrb
ret
jns
enter
and
push
and
movhps
add
sbb
enter
test
jns
jns
push
push
xor
sub
sub
das
jns
enter
adcb
daa
bswap
ja
pop
sahf
or
and
and
jl
cmp
push
or
pop
pop
aam
and
pop
je
shlb
ja
push
jns
gs
and
orb
adc
xchg
and
sub
movsb
pop
in
fstl
push
call
lret
xor
xor
outsl
ficoml
and
fisubs
fists
xor
mov
mov
jp
xor
push
xchg
sahf
xlat
icebp
popf
add
push
cmpsb
mov
sahf
out
enter
or
repz
rcrl
iret
repz
cltd
stos
mov
cmpsl
stc
cmp
adc
lahf
out
push
gs
mov
sahf
out
mov
sahf
ja
mov
push
ret
jb
xchg
fdivr
add
je
add
sbb
jp
or
sbb
xor
add
leave
jle
xcrypt-cfb
cmpsl
in
lods
push
xchg
hlt
fs
lock
or
sbbl
dec
add
cmp
pusha
test
js
repnz
mov
sbb
test
xchg
push
add
push
push
call
and
xchg
pop
lret
subb
call
adc
xchg
push
jl
imul
pop
outsl
jle
out
jnp
shr
lret
cmp
sbb
xor
ret
pop
cmp
cmp
mov
jo
sarb
in
pop
push
or
or
xchg
cmpsl
jge
cmp
push
sub
sbb
aaa
dec
std
push
jge
nop
mov
and
add
push
and
adc
orl
shl
mov
mov
xchg
adc
scas
inc
scas
add
adc
xor
rorl
sub
push
fsub
sbb
rolb
pop
add
add
push
or
jno
lods
aad
cmp
shll
test
or
and
xor
inc
pop
push
stos
mov
in
fwait
mov
repz
sbb
nop
mov
aas
and
aam
hlt
mov
mov
jo
mov
ss
in
and
rolb
incb
pop
sub
test
jle
flds
xor
or
sbb
push
in
loopne
icebp
pop
enter
ret
call
test
and
push
or
pop
sub
inc
leave
push
in
dec
sbb
inc
ret
sub
loope
sbb
dec
mov
add
or
add
mov
stos
out
add
inc
adc
stos
adc
nop
add
xchg
inc
push
stc
push
cmp
cmpb
test
test
fisubs
add
inc
push
dec
mov
push
popa
mov
xor
cld
dec
push
out
or
adc
mov
test
add
cmp
mov
xlat
push
inc
sub
or
out
add
xor
sub
outsl
jb
xor
lcall
cmp
jns
imul
dec
les
je
push
push
mov
ret
pop
inc
cmpsl
mov
mov
outsb
sbb
test
cwtl
nop
sbb
push
sbb
adc
jl
add
or
leave
adc
add
and
divl
leave
xchg
adc
push
push
push
jnp
inc
ljmp
das
dec
adc
sbb
out
lds
mov
pop
dec
mov
xor
icebp
dec
jbe
mov
cmp
sub
pop
pop
push
inc
lock
xor
push
xchg
and
insl
adc
mov
jns
mov
jb
dec
push
sub
adc
mov
adc
xor
outsl
jo
adc
sarl
add
add
xor
push
push
loopne
addb
cmp
xchg
xor
adc
add
inc
rorb
or
jb
dec
dec
push
pop
or
jecxz
pop
popa
pop
push
in
jns
orl
frstor
sub
orb
fwait
popf
mov
xor
imul
les
or
xor
test
adc
popa
add
add
cltd
lock
sub
mov
hlt
add
outsl
jno
sbb
test
add
add
adc
cld
sbb
jno
ljmp
and
scas
std
ret
adc
jg
das
pop
or
or
cwtl
loopne
or
push
xlat
mov
notl
insl
and
ljmp
and
enter
sub
push
es
xor
pop
adc
push
mov
pop
bound
sub
sarb
mov
dec
and
data16
and
push
in
add
or
dec
sub
mov
or
push
insb
and
test
or
jns
xchg
subb
push
test
cmpsb
or
or
leave
int
pusha
sbb
int
orb
and
and
cmp
push
add
adc
and
addr16
mov
dec
leave
sbb
or
jo
stos
push
inc
notb
je
adc
popa
call
push
mov
cmpsl
xchg
xor
pop
pop
sub
cmpsl
mov
pusha
add
gs
stos
bound
test
inc
add
cs
push
cmp
add
jecxz
inc
inc
jmp
adcb
repz
cmpb
lods
mov
and
jge
cmp
sbb
insb
xor
stc
and
cmpb
add
inc
insl
ret
aaa
xchg
pusha
adc
pop
nop
nop
and
in
andb
mov
push
imull
cmp
pop
xchg
adc
clc
adc
push
adc
push
fdivrs
inc
shrl
cmpb
push
test
push
xchg
loop
adc
sbb
sub
or
pop
fsubrs
stos
iret
or
or
clc
sbb
mov
clc
sbb
push
sbb
insb
mov
pop
pop
cmp
arpl
push
outsl
xor
fcomps
jp
sbb
pop
adc
mov
mov
adcb
or
test
mov
outsl
aaa
add
je
push
icebp
aam
movsb
or
push
pop
fs
es
cmp
leave
rcl
arpl
notb
sbb
sub
test
lret
addr16
dec
mov
jl
sub
aad
fstpt
fldl
lock
and
fmull
pop
imul
cli
insl
loope
cli
mov
xchg
sbb
je
cwtl
jl
push
mov
sbb
cmp
and
test
and
js
aam
push
sbb
or
push
push
icebp
movb
add
xchg
sub
pop
mov
nop
sub
dec
cmpsb
mov
cmpl
jbe
lea
cmpsl
addl
es
add
adc
in
iret
xor
mov
adc
jo
lds
inc
shlb
add
cmpsl
mov
ljmp
mov
or
dec
mov
push
movsl
xchg
aam
addr16
sbb
lret
stos
loopne
loopne
mov
lock
add
jmp
mov
cmc
test
imul
jne
je
sbb
xchg
hlt
adc
cmp
test
and
adc
inc
stc
nop
push
cmp
lcall
jno
pop
xchg
dec
out
pop
cmpsb
push
ret
lods
mov
aas
pop
ret
jb
push
mov
jecxz
pop
pop
call
aam
sbb
sti
popf
gs
sbb
adc
stos
mov
les
adc
push
stc
mov
loopne
pusha
aam
dec
jg
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
or
sbb
popa
jp
adc
add
and
jg
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
pop
hlt
das
out
push
cltd
pop
idiv
mov
push
cwtl
pop
fsubrl
cmpsl
xor
push
xor
inc
fiadds
mov
mov
push
push
shlb
frstor
dec
cmpsb
fldcw
test
add
xor
push
push
lods
loop
sti
movzwl
add
adc
dec
add
sbb
push
lock
in
in
incb
push
in
adc
mov
sarb
cmp
inc
repnz
push
mov
dec
aam
aaa
cmc
mov
enter
std
loope
jne
mov
push
push
add
test
fsubrs
idivl
xchg
enter
ja
pop
jns
dec
jmp
add
dec
sub
mov
sub
out
shll
and
inc
sub
push
adc
push
adc
into
adc
jbe
fistpll
adc
or
adc
xor
cmpsl
jns
mov
mov
push
or
sbb
rorb
jnp
insb
popf
push
mov
lahf
lods
dec
test
fisubs
pop
and
pop
in
movsl
mov
sarb
xchg
mov
xor
andb
sar
adc
add
push
clc
stos
sub
scas
adc
pop
push
push
aaa
inc
adc
lahf
jg
push
ret
fdiv
push
pop
push
adc
lds
dec
lock
mov
cmp
push
inc
push
jge
jo
into
into
ret
mov
in
jns
xor
xchg
jg
jo
rcrb
jl
sbb
xchg
mov
js
leave
enter
push
push
imul
enter
sbb
sbb
in
mov
inc
mov
mov
mov
push
scas
pusha
inc
inc
pop
inc
imul
pushf
dec
shlb
gs
movsl
adc
enter
pop
lcall
and
dec
es
cltd
frstor
rclb
fsubrs
push
or
or
in
push
xchg
in
lods
jno
adc
in
dec
inc
lcall
leave
mov
mov
addr16
lock
daa
jns
sub
enter
es
sub
fs
stos
subl
enter
mov
adc
dec
outsb
andb
and
xchg
mov
cmp
insl
incl
dec
xor
and
jo
stos
mov
xchg
push
insl
movsb
setl
test
fsubrs
xchg
push
cmp
enter
inc
and
in
jnp
or
lahf
loopne
push
rcl
sub
mov
mov
setne
loopne
mov
mov
add
les
mov
push
cmp
cs
popa
sbb
push
popa
mov
orb
push
push
dec
mov
xlat
adc
ds
mov
aam
xchg
out
ss
aam
mov
mov
sbb
mov
dec
mov
pop
les
add
clc
mov
and
inc
outsb
leave
adc
add
into
ret
mov
adc
jmp
clc
cmp
in
call
outsl
loope
rolb
rclb
test
cmc
aad
push
gs
scas
fsub
cmc
pop
mov
mov
fsubrs
xor
mov
rol
adc
sahf
ja
pop
push
inc
adc
adc
xor
push
lea
cmp
lcall
adc
pop
xor
inc
loopne
jg
or
repz
add
arpl
mov
and
rcl
xchg
mov
cmp
cmp
push
pop
push
lock
inc
sbb
stc
enter
cmpsl
or
pop
push
into
dec
push
outsl
add
and
roll
jbe
xor
jno
push
mov
jne
xor
fwait
dec
orl
mov
mov
xchg
mov
mov
mov
xchg
or
mov
cmp
lea
inc
and
and
rclb
ss
sahf
sub
fsubrs
sub
and
ds
shlb
ss
imul
push
int3
and
repnz
add
pusha
pop
orl
inc
jb
std
push
ds
sbb
xchg
inc
test
dec
ficomps
xor
sbb
add
inc
test
mov
adc
inc
mov
mov
and
loope
out
rcll
insl
subl
ficompl
mov
mov
push
test
xchg
inc
mov
enter
rcl
ljmp
imul
adc
outsb
adc
sub
and
ret
jbe
pop
test
add
dec
push
add
add
or
add
add
scas
add
bnd
insl
cwtl
gs
xchg
sub
fsubrs
ja
jmp
mov
mov
jns
and
add
jne
pop
jge
sub
mov
add
loope
pushf
push
fcmovnb
add
or
cmp
or
mov
xor
popa
xchg
dec
xchg
mov
adc
aaa
sub
push
aas
adcb
jo
add
cs
in
cmp
movsb
pop
push
in
pop
mov
add
sbb
aad
insb
cmp
cmp
lock
xchg
inc
push
add
cmp
mov
mov
aas
hlt
add
mov
or
ficomps
and
adc
adc
pusha
adc
dec
scas
cmp
push
movsb
pop
pop
test
lock
jge
fsub
call
jne
cmp
loopne
push
sarb
sbb
jl
cli
pop
imul
out
es
add
rolb
mov
gs
sbb
cmp
mov
xor
adc
xchg
xor
pop
addr16
test
add
jne
iret
push
call
jae
out
add
aam
or
leave
lds
mov
fcoms
adc
xchg
adc
xor
adc
js
sti
enter
leave
mov
adc
fcomp
add
pop
pop
xorb
push
add
ficoml
lret
fs
loopne
cmp
xchg
push
mov
cs
lock
aam
cmc
clc
pop
jmp
sub
sbbl
pushl
jo
jo
es
fldt
push
jb
pop
dec
and
adc
push
push
cltd
push
jns
cmp
pusha
add
cltd
push
pop
subb
leave
hlt
mov
leave
sbb
rorl
popf
sub
sbb
pop
aaa
inc
mov
fs
sbb
ror
push
in
fidivrs
jecxz
adc
and
shr
or
shlb
adc
fisubl
es
add
cmpsb
push
lock
sbb
push
ret
pop
push
daa
int3
lock
adc
add
mov
les
push
xchg
das
ret
sbb
leave
mov
mov
mov
jge
add
or
imul
inc
pop
addl
out
pop
lahf
cmp
popf
incl
out
push
xchg
dec
iret
adc
or
jae
shrb
gs
xchg
sub
push
cmp
dec
cmp
in
cmp
xor
ljmp
pop
es
sbb
dec
lret
adc
cmp
cmp
jo
push
or
xor
cs
loop
dec
cs
adc
add
cltd
aam
push
push
jge
cmp
push
xor
push
insl
lds
pusha
and
sub
inc
js
shrb
loop
lods
push
mov
push
push
dec
clc
inc
adcl
cli
cmp
mov
push
ret
add
ja
jle
cmp
loopew
adc
fistpl
or
jl
cmp
jne
bound
ror
leave
or
or
shll
push
cltd
dec
inc
jecxz
xchg
mov
add
push
adc
cmp
mov
call
daa
add
lret
lock
ljmp
push
xor
sbb
adc
ss
cmp
loop
add
pop
lahf
ss
mov
xchg
test
add
xchg
or
out
movsb
adc
or
mov
nop
and
sub
movsb
sbb
scas
test
mov
add
iret
sbb
pop
mov
and
in
pop
or
jp
aam
mov
push
xchg
mov
cmp
and
jl
sbb
push
add
mov
push
inc
push
lock
ja
push
pushf
or
and
stc
in
faddl
mov
roll
push
fmulp
and
or
push
pop
test
or
pop
test
or
inc
hlt
cmp
add
push
aam
leave
xchg
adc
push
sub
dec
sub
iret
unpcklps
icebp
xchg
push
mov
dec
daa
xchg
or
sub
imul
or
mov
jmp
mov
jb
pop
scas
pmulhw
insl
sub
shlb
loop
test
insl
int
dec
rolb
or
in
sub
lods
imul
fcom
sbb
add
test
add
mov
movsl
dec
fdivrl
popf
xorl
mov
adc
or
hlt
push
inc
add
push
mov
adc
add
test
inc
adc
addb
jg
add
push
push
add
inc
ret
sbb
mov
push
lods
rclb
lcall
adc
xor
es
test
inc
in
fs
test
cmp
or
mov
mov
jne
pop
pusha
daa
adc
add
push
add
cmp
shrb
outsb
mov
jge
jbe
mov
add
pusha
data16
sub
xchg
in
out
dec
jo
subl
insb
pop
sbb
push
add
or
inc
sub
mov
movsl
and
in
mov
adc
jg
add
aad
xor
inc
mov
jne
movsb
ret
nopl
sbb
add
lcall
cmpsb
ljmp
push
or
or
sbb
add
ja
jne
ja
add
addl
pusha
jb
or
sub
ret
mov
enter
fmull
push
adc
cmp
cmp
popa
fs
dec
mov
pop
rorb
addl
idivb
ret
dec
xchg
stos
cmc
imul
or
add
xchg
and
mov
mov
jg
pusha
inc
cmp
jae
mov
sub
mov
mov
mov
jmp
pop
sbb
sub
adc
scas
mov
push
incb
jne
mov
stos
cli
push
fdivrl
nop
roll
in
mov
jb
cmp
clc
hlt
push
pop
pop
pop
imul
fldl2e
xor
cmp
inc
and
sub
mov
fnstcw
add
inc
jmp
mov
stc
leave
jns
test
xchg
stos
jge
test
sub
sub
mov
xchg
xor
stos
xor
jecxz
push
push
aad
mov
fnsave
cmp
sbb
les
or
adc
hlt
test
insb
add
xor
dec
push
dec
add
xor
das
sbb
sbb
insb
sub
xchg
out
pusha
xchg
movsl
dec
xor
mov
bound
addb
xchg
push
sub
xlat
cmp
xchg
mov
mov
or
or
sbb
and
adc
rol
mov
int3
mov
aam
pop
pop
dec
fnstsw
in
xor
or
cmp
jg
push
sub
xchg
xor
jp
sub
mov
dec
outsb
jne
ret
jmp
sahf
mov
xchg
inc
jne
add
sbb
fcmovnbe
mov
out
cwtl
adc
idivb
das
into
sbb
add
dec
ja
pop
pusha
or
add
inc
cwtl
or
or
mov
int
fdivrl
mov
add
inc
sahf
out
lcall
adc
repz
adc
jmp
push
shll
in
sbbb
add
jns
cld
add
and
imul
cs
sahf
and
outsb
adc
and
adc
and
pop
cmp
cmp
adc
xor
lcall
movnti
mov
xor
push
stos
add
xlat
mov
inc
addl
inc
add
nop
add
rcll
xor
dec
in
jp
mov
add
mov
insb
mov
repz
push
lock
leave
sbb
dec
repnz
or
in
mov
cs
mov
sti
push
rolb
mov
mov
cmp
add
dec
adc
pop
stos
add
cmp
mov
dec
into
lahf
push
sbb
pop
mov
pushf
ljmp
sbbb
and
cli
push
dec
cmp
dec
and
sub
pop
ja
add
adc
fs
pop
js
and
jmp
and
ret
push
es
push
nop
mov
dec
vpacksswb
in
adcl
into
dec
inc
adc
lret
sub
and
inc
and
add
or
or
mov
in
repnz
pop
popf
add
loop
sub
mov
or
orl
aad
pusha
lahf
xchg
iret
and
ss
mov
sbb
pop
sub
and
and
cmpsl
push
in
movsb
add
inc
inc
shlb
sbb
sbb
xchg
cmpsb
inc
cs
cmove
rorb
mov
js
inc
lods
inc
sar
icebp
loop
adc
xor
insb
or
xchg
sub
mov
dec
pop
mov
add
stos
test
push
sub
into
sti
and
push
adc
xor
ret
and
mov
sub
adc
push
mov
das
int3
inc
or
adc
andl
test
xor
pop
jg
es
xor
out
or
mov
sbb
popa
add
mov
inc
scas
adc
adc
punpckhbw
sub
call
cmp
pop
adc
test
cmp
mov
or
vmread
jp
sbb
mov
popa
cmp
pop
sub
leave
mov
faddl
lcall
add
lret
or
add
push
pop
push
jae
shlb
in
cs
and
or
lret
adc
jo
int3
jo
cmp
fs
and
or
js
rorb
cmp
loopne
sub
pop
lods
ret
sahf
lods
sub
mov
mov
lock
test
decb
push
or
push
bnd
sbb
pop
xchg
dec
mov
jno
add
or
jecxz
add
inc
xor
push
xor
xchg
inc
xor
popa
jb
xchg
push
jl
or
push
imul
sbb
xor
dec
xor
jns
dec
push
push
cs
sbb
pop
mov
jo
iret
jmp
and
inc
mov
sub
nop
or
push
js
dec
add
sub
sbb
jnp
push
bound
mov
inc
adc
lret
and
dec
adcb
push
mov
imul
xor
xor
or
jmp
sub
pop
fdivl
fdivl
dec
xor
in
xchg
mov
cwtl
movsb
dec
pop
jo
sarb
and
outsl
lcall
sahf
push
add
jl
pop
dec
hlt
jecxz
adc
push
mov
stc
clc
sub
xor
addb
cmc
cs
je
or
and
pop
mov
pop
in
xor
and
shlb
loopne
push
call
daa
dec
ficomps
insb
jno
cli
and
incl
xchg
stos
dec
pop
inc
jo
leave
jae
inc
xor
xor
mov
ficomps
pop
or
enter
loop
jbe
mov
sub
lea
in
add
jp
and
je
flds
add
xchg
push
adcb
push
jne
sbb
pop
and
mov
adc
rclb
cmp
jns
sub
pop
in
lea
add
sbb
sub
xorb
and
push
sar
in
and
mov
shlb
pop
dec
add
scas
push
sarb
adc
dec
test
fisttpl
ja
xchg
cmp
pop
jbe
jo
fwait
or
test
adc
addr16
shrb
idivl
jle
push
inc
add
rorb
cld
andl
inc
add
mov
lahf
pop
in
fcomps
xor
add
loopne
sbb
into
jecxz
shlb
jmp
or
js
das
out
mov
insl
data16
movsb
sti
sub
icebp
sub
or
push
inc
jge
sbb
mov
fdivl
scas
adc
push
and
insb
lock
mov
push
jmp
mov
xor
repz
mov
push
popa
xor
mov
andb
and
sub
mov
ja
fistpl
jne
gs
cmp
pop
push
fstps
decl
xor
inc
insb
push
or
aam
xor
sub
ja
adc
sbb
and
jmp
cmp
movsb
dec
dec
loop
out
inc
push
and
test
adc
mov
lock
ja
or
cmp
je
cltd
ja
add
ret
mov
mov
mov
inc
adc
xor
fs
xor
jl
xchg
mov
cwtl
in
and
setle
push
adc
dec
movups
stc
mov
pop
fidivs
cmp
inc
sub
test
jmp
andb
push
in
push
cld
jmp
adc
jno
loopne
sti
stos
add
inc
popa
mov
js
loopne
aas
test
cmp
inc
mov
test
xchg
and
push
aam
nop
cmp
bound
cld
or
jb
call
xchg
cmp
cmpsb
xchg
out
inc
xchg
add
fdivs
sti
dec
rol
pop
push
jne
mov
mov
mov
or
inc
fbstp
into
and
jne
mov
or
xor
sub
mov
add
and
mov
xor
mov
rcrl
fimull
adc
cmp
movsl
movsb
jo
loopne
jb
in
shll
dec
cmpb
test
xchg
dec
jae
dec
das
insl
xor
cmp
andl
push
mov
sbb
inc
jno
inc
jo
inc
fmuls
idiv
sbb
inc
and
jns
arpl
dec
pop
mov
or
lea
mov
push
outsl
pop
inc
insl
adc
roll
shl
sbb
rcr
inc
add
xor
cld
movsb
popf
test
rclb
jb
call
in
push
mov
lods
add
dec
push
mov
inc
enter
mull
jmp
sbb
sahf
pop
in
or
add
scas
add
push
xor
push
hlt
dec
pop
or
jns
fistl
das
in
inc
inc
lea
sbb
in
mov
sarb
fistps
push
pushf
adc
in
jl
dec
ds
ss
adc
test
lock
lock
add
adc
cmpsb
and
loopne
call
sbb
pop
adc
sbb
mov
push
out
sarb
call
push
sarl
orl
fdivr
mov
cmp
add
into
push
cs
push
push
mov
jo
aaa
into
in
pop
jb
pop
mov
fldl
aam
mov
or
jge
cwtl
fcoml
push
or
push
dec
arpl
adc
adc
nop
mov
push
iret
out
sbb
mov
cmp
lock
inc
lea
mov
or
lea
push
or
add
pop
in
xchg
cmpl
loopne
and
mov
mov
mov
out
and
pop
inc
scas
cmpl
pushl
xchg
incl
inc
jmp
lea
inc
sub
movsb
mov
movsb
test
and
ret
ret
mov
add
or
or
mov
test
adc
adc
add
pop
push
sub
loopne
inc
xor
int
pop
cmc
je
mov
push
nop
cltd
pop
and
xchg
push
cmp
cmp
rorb
clc
das
add
cmc
incl
push
out
imul
orl
mov
jnp
aam
scas
mov
or
sub
jp
sub
cmpsl
dec
aaa
push
shr
fimull
or
pop
inc
add
or
mov
pop
add
or
sarb
aaa
lea
cmpsb
sbb
aad
or
inc
jb
push
ds
and
fst
sub
test
loop
xor
rclb
xor
sub
jb
mov
aas
mov
push
aad
enter
mov
add
mov
add
jmp
mul
mov
loope
add
or
and
cmp
fldcw
or
sbb
rolb
loopne
loopne
mov
jo
aaa
push
dec
addl
add
and
or
mov
push
rcr
sbb
or
sub
or
mov
and
sbb
or
ret
enter
jns
cmp
adc
cmp
push
mov
pusha
xor
jmp
ret
adc
dec
pop
pop
jl
cmp
pop
xor
cltd
inc
lods
repz
test
scas
sbb
adc
adc
in
sahf
fs
out
mov
fadds
gs
pushf
inc
jecxz
xlat
cltd
mov
adc
je
daa
hlt
add
jl
faddl
rcll
cmp
and
pop
scas
cmp
dec
xchg
xor
cltd
lret
in
ror
add
jp
sub
and
sbb
in
push
push
outsl
pop
push
xchg
scas
or
fimuls
in
frstor
pop
setge
jge
mov
add
lret
dec
dec
xor
aam
or
sub
pop
xorb
mov
cmp
ss
add
mov
push
cmc
dec
je
dec
in
push
dec
lock
or
xchg
or
andb
fwait
ret
push
frstor
and
jno
mov
xchg
dec
shlb
or
sub
rorb
fs
jmp
mov
out
loopne
int
inc
dec
aas
enter
xor
das
inc
jo
mov
out
push
dec
movsl
push
jns
out
in
in
jmp
outsb
sub
dec
out
mov
lods
fsubr
xchg
in
cmp
jo
daa
shll
or
adc
and
fldenv
pop
daa
roll
ja
mov
lock
fsubrs
jne
push
lods
in
mov
hlt
and
imul
xor
subb
mov
pop
stos
xchg
inc
cmpsl
outsb
sub
popa
sub
clc
andl
mov
bound
jle
movl
rolb
xchg
push
lea
sub
rolb
or
mov
xchg
into
pop
jmp
mov
or
or
mov
jge
add
mov
cmpl
or
jge
mov
ja
scas
cmp
cmp
jbe
cmp
jbe
mov
sbb
and
jle
add
into
adc
mov
mov
jp
clc
cltd
popa
add
sub
push
mov
test
add
or
insl
and
xlat
dec
mov
mov
sahf
jnp
add
pusha
mov
aad
sbb
mov
in
push
mov
lock
mov
and
sub
js
xchg
jle
scas
jge
add
jmp
or
cmp
jb
fsubrs
stos
mov
or
or
push
cmp
pop
dec
mov
mov
xor
or
mov
cli
jbe
pop
xor
inc
cmp
or
pop
test
nop
sbb
mov
jbe
adc
loop
mov
nop
pushl
push
push
popa
adc
mov
dec
imul
dec
and
lret
orl
movl
lcall
sbb
les
dec
jl
adc
jbe
fwait
ljmp
insl
push
or
push
mov
mov
lcall
or
and
xor
mov
and
shl
call
sub
aaa
sarb
push
mov
xchg
add
mov
and
adc
or
int3
arpl
add
xlat
cli
mov
lcall
and
testl
cwtl
outsb
popf
push
mov
push
jb
outsb
xchg
ljmp
aad
jmp
adc
xchg
dec
adc
sbb
cld
adc
xor
cmp
xor
icebp
into
lea
xor
sbb
call
lcall
push
fsubs
mov
push
adc
adc
jno
mov
jp
sarb
ja
add
jo
add
andb
aam
push
push
hlt
jne
mov
add
mov
loopne
jb
pop
sbb
test
call
into
and
sbb
xchg
pop
rorb
or
ret
movsb
ret
repz
inc
jo
sarl
jle
rol
test
cmp
lods
sbb
adc
mov
or
fadds
jle
loopne
bound
orl
inc
or
xchg
push
jae
lea
outsl
out
sbb
mov
jmp
sarl
adc
popa
insl
ja
mov
movsl
and
mov
pusha
mov
movsl
add
xchg
and
pop
mov
pusha
and
popf
test
lahf
enter
nop
rcl
int3
sbb
int3
and
cli
add
mov
pop
pop
ret
and
js
add
fistps
mov
test
push
inc
fimuls
in
orb
cmc
sub
repz
mov
movb
mov
mov
inc
lea
push
dec
fdivs
hlt
movsb
jmp
daa
test
or
int
mov
insl
dec
enter
js
xchg
dec
arpl
mov
mov
cmp
push
decb
out
jns
inc
sbb
cld
ss
add
add
push
sub
scas
mov
sub
ret
test
jo
xchg
aas
cmp
shlb
fmuls
inc
lock
sti
loop
adc
or
sub
push
inc
jmp
mov
cmp
andl
les
and
pop
adc
shrl
pop
hlt
push
pop
loope
lcall
xlat
add
jmp
and
cmp
orb
mov
push
lods
bnd
xchg
rcrb
mov
xor
add
dec
stos
js
pop
push
mov
ret
xchg
sub
mov
cmp
sti
enter
cmpsl
xor
pop
push
xor
test
inc
test
mov
cmp
xor
outsb
fisttpll
aam
pop
cltd
std
inc
rorb
fcomps
rcrb
inc
push
xchg
rcl
repnz
mov
adc
push
incl
daa
cmp
sub
pop
adc
cmpsl
loope
jae
dec
mov
mov
ret
jnp
adc
fsubs
mov
dec
xchg
or
stos
push
daa
dec
insb
shrb
flds
push
jb
lahf
push
fildl
fmull
push
sbb
adc
and
xor
push
push
push
mov
call
push
xchg
shlb
clc
adc
cmpb
ja
imul
aad
test
add
pop
ss
movsb
js
jno
pop
push
and
mov
nop
clc
lcall
push
clc
lods
add
hlt
xor
jmp
add
sbb
lahf
adc
mov
rorb
xor
dec
push
adc
arpl
rolb
out
adc
pop
clc
jne
loopne
push
adc
jmp
cmpl
adc
cmp
jge
repz
loopne
xor
sub
or
inc
cmp
stos
ret
adcb
rclb
loopne
test
sbbb
inc
mov
leave
and
pop
add
orb
jnp
fwait
pushf
int3
sbb
cmp
dec
call
push
or
mov
enter
ja
inc
enter
aaa
sbb
xor
push
sbb
fsubrl
add
cmp
das
loopne
or
xor
clc
xlat
push
clc
xchg
hlt
and
push
fsubr
or
mov
push
ret
sahf
not
fcmovb
mov
sub
sbb
jmp
push
clc
lcall
or
mov
loop
pop
xor
mov
ds
andl
and
sub
lock
mov
push
lea
js
jmp
imul
or
movsl
pop
cmp
sub
jnp
jo
cmc
xor
cmp
adc
push
push
jo
dec
rclb
jg
mov
jmp
sbb
repnz
add
mov
or
std
mov
xchg
fcompl
pop
xchg
pop
sbb
push
cwtl
aas
push
mov
dec
adcl
jge
aam
fwait
push
cmp
pop
jg
out
jbe
mov
call
adc
mov
mov
mov
pushf
cmp
js
xchg
dec
stos
mov
enter
jl
js
dec
mov
and
loope
divl
mov
pop
in
mov
add
sub
decb
cli
mov
adc
adc
insl
scas
adc
push
jl
cmp
shr
fisttps
adc
and
cmp
lds
or
push
lahf
test
push
out
or
pushf
push
ja
lret
sub
or
sub
or
inc
shrb
sbb
repnz
adc
xchg
ret
loopne
add
and
test
cli
mov
push
push
test
push
fmull
hlt
or
cmp
and
mov
mov
mov
test
inc
cmp
and
int3
std
inc
cmp
push
outsl
and
cld
mov
inc
into
adc
iret
add
sbb
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
xchg
jecxz
mov
cmpsl
call
pop
or
mov
shr
mov
inc
mov
mov
adc
movb
mov
and
pop
in
push
ret
mov
mov
cmp
movsbl
aam
dec
fdivs
and
push
out
shrb
sbb
jb
and
push
cwtl
jnp
xchg
cld
je
push
push
ret
inc
and
sbb
add
loope
loopne
idivb
mov
xchg
and
pop
repz
out
push
test
mov
push
insl
loope
fiadds
add
sbbl
cmpb
mov
shrb
subl
sub
fimuls
sbb
and
cmp
jl
add
fwait
inc
out
cmp
mov
or
xchg
xor
xchg
and
fistpl
push
cmp
aad
cmc
rcll
out
add
xchg
push
mov
sub
add
sahf
mov
adc
adc
add
jb
mov
decb
das
and
xchg
inc
mov
mov
inc
hlt
xchg
je
add
or
mov
or
cmp
adc
push
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
outsl
loopne
int
add
adc
out
sti
popa
sub
popa
jmp
lea
mov
or
push
imul
adc
fs
loope
icebp
and
es
cs
repz
inc
dec
push
pop
data16
cmp
repz
js
addb
xchg
xchg
fwait
mov
movsl
stos
scas
mov
mov
ret
enter
repz
repz
out
icebp
pushl
add
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
ret
mov
xchg
inc
and
test
sub
add
loope
push
and
scas
data16
push
and
dec
test
test
add
mov
fs
pop
mov
mov
pop
push
push
mov
imul
ljmp
stos
xchg
push
dec
fstps
inc
iret
leave
lea
add
sbb
sub
adc
cmp
mov
xor
loope
pop
xchg
mov
cmp
movsb
jbe,pn
es
shl
push
subl
push
push
adc
sbb
mov
push
cwtl
jnp
lock
dec
and
sub
push
repz
mov
fildl
xchg
sti
adc
cs
adc
or
cwtl
push
sbb
xchg
jns
or
jne
pop
and
repnz
adc
push
test
adc
mov
and
jg
adc
mov
add
mov
xor
jmp
stc
mov
mov
pop
mov
int
adc
or
out
pusha
dec
add
pop
sub
ja
negl
inc
inc
clc
ljmp
inc
dec
push
inc
adc
mov
xchg
ja
mov
add
and
imul
mov
dec
add
lods
xlat
andb
cltd
adcb
pusha
mov
add
dec
inc
push
addb
es
incl
mov
je
mov
arpl
dec
repnz
test
fildl
gs
andl
xchg
adc
fidivrl
and
dec
xchg
mov
push
push
push
imul
or
add
mov
pop
popf
cmp
jo
addl
dec
les
pop
add
push
mov
add
or
test
inc
inc
adc
nop
inc
lods
adc
fs
das
add
add
push
or
or
inc
fmull
xchg
icebp
or
gs
es
inc
and
xor
push
in
jno
xchg
mov
inc
adc
cmpb
je
push
push
cmpsb
clc
or
or
jge
aaa
js
cmpsb
shlb
pop
or
adc
cmp
cmp
pop
inc
mov
shl
or
mov
mov
cmp
or
sub
sbb
mov
cld
pop
pop
or
xorl
xchg
rol
push
int3
inc
push
adc
in
jnp
lahf
leave
je
pop
add
push
int3
sbb
push
cmpb
mov
lock
dec
push
lea
mov
xchg
push
jno
push
xchg
lods
push
add
push
xchg
cmpsl
sub
enter
or
or
loopne
and
fstpt
or
jl
lock
cs
push
dec
mov
test
mov
ljmp
in
pop
cmp
lods
aad
mov
pop
repz
xchg
loopne
les
jmp
add
mov
es
sub
inc
scas
test
xor
lret
push
mov
lret
loopne
popa
imul
in
imul
pop
mov
sub
fs
or
and
or
andl
pop
jne
popa
aam
mov
fmull
xchg
xchg
addl
mov
aas
sbb
inc
lods
mov
jp
cmp
int3
xchg
push
and
rolb
cmp
cmp
push
rorb
hlt
dec
enter
xchg
sbb
bound
pop
repnz
push
or
std
popa
push
jmp
xor
or
je
mov
adc
add
inc
cmp
andb
shll
sub
mov
cld
sar
sbb
cmp
dec
push
cltd
nop
loopne
loopne
sub
xor
sahf
enter
push
sbb
dec
jae
int3
or
inc
sbb
idiv
add
enter
das
sti
std
sbb
cmpsb
xchg
dec
shl
stos
sub
cmpsb
mov
rcll
rolb
push
sbb
cmp
pop
push
test
adc
push
mov
inc
push
xor
pop
mov
mov
popf
pusha
rcrb
mov
int3
out
mov
pushl
lock
lock
jno
jnp
popa
fs
cltd
addb
out
xchg
push
push
mov
xchg
loop
or
pop
icebp
sub
add
outsl
add
cltd
test
arpl
in
lret
dec
or
call
push
mov
inc
daa
gs
inc
push
mov
shll
cmc
and
lahf
push
and
addb
and
stc
jno
mov
and
sbb
mov
fmuls
divb
jp
cs
je
mov
sbb
push
fsubl
pop
add
mov
repnz
sbb
repz
adc
sbb
cmpsl
mov
xchg
cs
push
dec
pop
test
cmp
mov
and
aas
paddsw
ds
dec
mov
cs
or
aas
add
inc
pop
or
mov
fidivrs
pop
add
testb
cmp
add
je
cmp
fdivl
inc
add
pop
sbb
mov
sub
ja
dec
and
push
cmp
or
dec
inc
mov
push
dec
adc
call
jge
mov
addr16
xchg
test
mov
xor
lret
add
sub
mov
push
popa
sbb
enter
repnz
jae
call
fcmovnu
mov
dec
orb
cli
or
adc
in
or
hlt
inc
sti
and
orb
pop
dec
or
jle
mov
add
mov
jne
jno
cmc
das
out
jmp
cmp
je
rclb
mov
jl
btc
adc
jae
lock
mov
adc
mov
insb
in
pop
aas
sbb
dec
xchg
repz
cmc
inc
jns
pop
scas
xchg
mov
jge
in
addl
pop
xchg
or
dec
adc
xor
jge
jae
add
addb
cmp
xor
ja
rorl
stos
out
xor
push
cmp
sub
imul
adc
outsb
push
push
sbbl
or
cmp
xchg
xor
mov
clc
xchg
and
and
adcb
pop
imul
xchg
add
ja
aaa
gs
cmp
data16
lds
adc
or
mov
add
xorb
pop
add
push
mov
cmp
cltd
lcall
addl
inc
add
repz
or
jns
nop
xchg
inc
jns,pn
adc
or
sub
or
xor
test
xchg
push
pushf
add
aas
lsl
xchg
and
push
fs
sub
push
adc
sbb
inc
insl
mov
lcall
cmc
jmp
push
cltd
pop
or
imul
ret
pop
add
push
and
repz
dec
jecxz
sahf
sbb
movb
xor
mov
xor
mov
pop
or
xor
cmp
jle
outsl
test
push
stos
je
push
inc
addr16
jmp
icebp
lods
mov
fwait
sub
add
lea
cmp
jae
out
mov
push
mov
lock
jne
pop
movsb
xchg
shll
adc
sahf
cmp
pop
jp
sub
movsbl
mov
cmpsl
mov
dec
icebp
jbe
test
push
insb
imul
insb
adc
mov
mov
or
repnz
sub
push
dec
ffree
inc
add
shl
inc
sar
and
add
aam
xor
enter
cmp
inc
xor
dec
ja
push
aas
dec
push
cmp
push
pop
pop
push
pop
cmp
mov
daa
fs
jecxz
push
inc
cmc
inc
push
inc
mov
mov
es
aam
dec
sub
pushf
push
pop
addb
mov
lret
mov
add
andl
cmp
mov
ficoms
inc
cmp
lods
jge
dec
les
push
pop
and
rolb
add
adc
and
je
sub
pop
push
mov
jg
or
in
es
pushl
incl
cmp
jl
sub
sarb
iret
cmp
cmp
jne
inc
repz
cmp
xor
sti
je
jle
je
out
xor
xor
add
imul
mov
jl
jmp
sub
adc
or
pop
add
addl
fdivp
xchg
sub
sub
aad
push
aas
enter
iret
or
mov
jb
add
sbb
xor
sbb
and
es
mov
jmp
fcmove
inc
sbb
hlt
push
jl
in
sti
and
mov
add
shll
jmp
xchg
orl
inc
jmp
imul
sahf
xor
cmp
imul
xchg
js
xorl
cmp
mov
xor
sbb
aas
mov
repnz
sub
or
and
mov
mov
cmpsb
popa
aas
add
mov
add
cmp
jge
adc
lret
jl
jle
push
loopne
mov
mov
push
in
add
test
pop
jmp
pop
sbb
xor
imul
and
cmpsb
jle
mov
inc
stos
sbb
incb
pop
add
pusha
sub
sub
int3
push
push
pop
pushl
std
enter
xor
mov
js
add
pop
jne
push
inc
addl
or
push
movsl
xchg
pusha
push
subb
testb
cld
mov
xchg
jo
cmp
push
inc
rclb
push
clc
mov
dec
ret
adc
icebp
ss
pusha
xor
ss
shlb
mov
and
shrb
clc
xor
inc
lds
add
xor
ds
rcrb
ljmp
or
adc
pop
dec
jns
xor
jmp
add
add
jle
cmp
dec
fsub
dec
and
aad
mov
call
xchg
dec
not
rcrb
into
push
icebp
jecxz
sbb
imul
aad
mov
sbb
xchg
stc
addb
add
sbb
pop
jae
repnz
dec
xor
daa
push
inc
es
daa
addb
jecxz
jo
enter
xchg
scas
push
mov
pop
mov
pushf
pusha
cmpsl
mov
mov
inc
arpl
sbb
pusha
sbb
movsl
mov
sub
inc
jo
add
mov
pop
fs
inc
popf
pop
neg
call
testl
jne
and
loopne
xor
and
ss
or
andl
rorb
inc
fsubs
cmp
jne
lret
jmp
inc
mov
xchg
rorl
jne
jge
ret
xorb
insl
push
fbld
push
push
lock
in
sub
xchg
ljmp
push
dec
pop
fldl
add
sub
sbb
mov
test
imul
data16
and
nop
dec
sbb
fisttpll
cwtl
popa
push
jp
cmp
and
xor
sbb
leave
fisubs
scas
rcrb
or
pop
ljmp
xchg
and
inc
popf
cmpsl
xchg
adcb
mov
inc
or
gs
imul
cmp
je
and
jae
xor
flds
cltd
mov
daa
add
and
push
or
ret
mov
sahf
lock
sarl
fistl
mov
push
pusha
push
jo
jno
add
mov
mov
jmp
jmp
mov
push
push
fnop
jmp
and
dec
mov
je
add
ret
lret
inc
out
add
inc
sub
sub
les
neg
push
fildl
pop
or
jne
or
mov
push
and
lahf
add
or
imul
jle
movsb
dec
and
xor
aad
dec
gs
repnz
push
add
shll
enter
add
or
fs
test
and
jecxz
test
and
or
jg
nop
jno
or
inc
push
and
mov
ss
add
dec
jge
in
inc
jo
shl
or
xor
mov
lock
add
sarb
mov
aas
cmpsb
test
pop
movsl
lcall
push
cmpl
or
mov
sarl
mov
loop
icebp
cmp
push
nop
popf
fstl
cld
shrl
jmp
inc
or
xor
repz
mov
dec
add
jb
push
aad
cld
cld
jno
mov
test
push
cmp
dec
sub
loope
or
adc
push
cmpsb
mov
loopne
mov
mov
adc
aaa
mov
lea
les
sbb
or
and
xchg
out
sub
cld
and
xor
stc
mov
mov
and
sub
les
stc
lods
xlat
adc
sbb
in
push
fsubs
mov
push
push
add
andb
cwtl
sar
into
sbb
testl
xchg
inc
push
clc
push
inc
xor
cs
xor
lahf
adc
sub
stc
aas
push
mov
outsl
dec
xor
push
cwtl
imul
lea
inc
std
add
repz
in
cli
add
xor
inc
sub
hlt
mov
mov
inc
cmp
mov
jl
pop
jno
jl
cmp
cmp
movb
mov
add
flds
jecxz
nop
sub
movzbl
adc
mov
pop
cwtl
xor
xorb
pop
xor
xchg
or
push
sub
cmp
in
and
or
mov
insl
add
pop
inc
add
ret
pop
jnp
add
or
mov
mov
test
add
and
or
mov
test
adc
add
and
jmp
fwait
or
mov
dec
push
pop
sar
cmp
or
sbb
pop
addb
pop
cs
call
test
cmp
jl
pop
popa
movsb
mov
subb
cmpb
mov
add
mov
pop
icebp
push
xor
aaa
movsb
jle
movsb
push
and
mov
sub
ja
or
jle
cmp
aaa
mov
jmp
xor
idivl
and
or
mov
icebp
lea
pop
pop
xor
and
bound
int
mov
sahf
ffree
pop
loop
movsb
push
daa
and
dec
orl
test
aam
xor
pop
mov
insb
mov
and
bound
mov
fsubrs
cs
or
out
incb
push
jl
iret
arpl
popf
test
addr16
cmp
or
fidivs
jecxz
adc
push
lcall
xor
mov
jl
adc
ja
cmp
jne
adc
dec
cmp
dec
adc
add
je
cwtl
pop
movsl
sub
jno
add
sub
mov
test
push
aaa
aad
and
inc
enter
jmp
push
mov
or
adc
ret
add
xchg
push
mov
jb
push
cltd
jp
sbb
fwait
roll
jmp
push
lds
xchg
popa
cwtl
loopne
mov
inc
xorb
xor
fbstp
sub
jbe
mov
clc
pop
push
xchg
mov
jne
fisubrl
pop
jmp
cmpsl
adc
repz
push
out
aam
outsb
shlb
or
sub
das
jne
inc
popf
cmpb
inc
sub
fistl
lea
pop
or
mov
pop
lret
mov
jl
mov
mov
mov
rcr
loopne
shl
and
add
or
cld
inc
jmp
add
and
shl
xor
mov
mov
jne
movsw
movsb
sbb
ret
mov
add
cli
arpl
lods
jge
ja
mov
fists
cmp
cmp
inc
cmp
or
add
sbb
push
outsl
mov
mov
add
das
loope
xchg
dec
sbb
xchg
xchg
push
in
adc
mov
and
or
inc
mov
cmpl
sbb
xor
insl
push
dec
es
fiaddl
loope
insb
xor
ljmp
xor
or
sbb
and
adc
fldz
fcomp
add
js
push
lods
shrb
faddp
andl
push
les
add
push
adc
or
sub
shl
or
insb
enter
mov
sbb
lds
inc
sbb
lock
inc
es
lock
pop
xchg
dec
xchg
hlt
jbe
mov
movl
mov
inc
clc
xor
push
sbb
lret
sbb
jge
cmp
mov
mov
jge
frstor
cmp
fistpl
mov
pop
inc
cmp
adc
or
push
mov
sbb
jb
pop
and
out
out
and
jne
aad
test
lock
sub
popa
mov
sub
xchg
dec
pop
dec
arpl
cmp
in
jnp
lock
insl
jmp
fldl
dec
rol
sbb
test
jmp
lcall
xor
xor
mov
fisubrs
cld
mov
push
enter
fs
nop
jp
out
shr
aam
pop
clc
cmp
jne
mov
inc
lret
iret
outsb
cmp
inc
xchg
push
push
sarl
pop
aam
sub
cmp
std
add
pushl
jnp
mov
dec
xchg
pusha
jbe
mov
add
outsb
and
and
fldl2e
push
addl
sub
mov
sti
or
lret
mov
inc
call
cltd
mov
ds
pop
pop
pop
sbb
dec
dec
jb
push
cltd
mov
sbb
push
mov
jo
fstpl
cld
aas
cwtl
add
xlat
inc
ret
cld
push
and
fdivrl
push
or
adc
rolb
pop
inc
test
xchg
add
mov
xchg
arpl
mov
loopne
add
jecxz
loope
loopne
cmp
adc
pusha
or
rolb
push
add
mov
mov
add
ss
je
push
jne
mov
xchg
mov
pop
mov
pop
xor
out
fwait
sub
add
mov
and
movsl
jge
mov
mov
and
dec
and
fisttps
or
mov
sbb
in
sahf
rcll
mov
push
pop
dec
push
cmp
outsb
add
fldt
dec
and
add
data16
mov
inc
mov
pop
mov
xchg
mov
or
dec
add
mov
pop
push
mov
adc
and
xlat
add
pop
sbbb
dec
adc
sub
sub
inc
sbb
dec
sbb
or
push
lock
inc
inc
jecxz
mov
mov
or
add
sbb
xor
jb
ss
jbe
pusha
loopne
nop
mov
mov
out
or
ss
mov
jb
sarb
mov
dec
lods
nop
pop
movq
mov
pop
adc
pop
cltd
sbb
mov
hlt
xor
enter
es
mov
dec
adc
add
add
gs
add
jno
lods
push
add
fisubl
pop
adc
push
sub
outsb
and
add
sbb
push
jge
out
shlb
sbb
push
jmp
cmp
mov
pop
add
cmp
in
movsl
jl
or
nop
fidivs
sub
adc
sbb
xor
mov
fdivs
mov
sbb
imul
in
jne
mov
dec
movsb
iret
or
adc
or
loope,pt
sbb
je
cmp
jb
cmp
in
pop
sbb
pop
lods
add
push
jbe
inc
add
cmp
pop
mov
int
in
es
inc
imul
sbb
inc
mov
sbb
push
fsts
push
push
push
push
dec
scas
mov
sbb
or
push
dec
adc
adc
or
movsb
sbb
leave
enterw
push
arpl
add
cmp
stos
js
fucomp
nop
testb
cmpsl
popa
mov
pop
hlt
je
add
bound
mov
jbe
cmp
push
inc
rolb
cmp
stos
mov
cmp
testl
or
mov
dec
aas
mov
sbb
push
jb
push
and
xor
xor
ret
enter
daa
xor
enter
rcrb
insb
ud1
je
or
jl
mov
sbb
pushf
push
push
inc
xchg
nop
push
mov
fs
mov
adc
negl
pop
icebp
pusha
test
cmc
das
xchg
stos
jne
mov
in
cmp
lock
mov
xchg
add
push
sbb
push
jmp
lock
push
ja
clc
xchg
movsb
add
in
cmpsl
clc
adc
repnz
icebp
adc
scas
adc
int
pop
push
xchg
enter
xchg
or
push
sbb
lret
and
mov
push
aam
mov
inc
lock
jmp
fstpt
mov
and
push
adc
mov
adc
loopne
dec
pop
jb
push
add
inc
roll
xor
add
movsb
data16
xchg
sbb
and
daa
cmp
push
aam
sub
adc
fadds
imul
push
dec
cwtl
or
add
mov
inc
scas
aam
sbb
and
or
dec
or
addl
xor
mov
stos
adc
add
sbb
sub
dec
sbb
arpl
xchg
pop
pusha
in
mov
or
dec
arpl
mov
push
ljmp
lea
jbe
sub
test
push
mov
or
es
enter
out
add
cmc
sub
adc
sbb
fiaddl
out
jge
dec
mov
sbb
pusha
inc
xchg
fldt
push
mov
cli
cmc
jmp
push
in
insl
or
mov
pop
je
push
add
mov
xor
rorb
add
mov
jecxz
push
pop
in
adc
adc
call
cmc
xchg
add
es
xchg
div
rcrb
jo
imul
cmp
xor
movsb
cmc
sbb
fs
add
cmp
pop
rolb
sti
cld
movsb
push
or
mov
mov
loope
ja
add
in
sti
inc
push
or
and
dec
or
sbb
xlat
outsl
cmpsb
xor
lods
cwtl
call
in
out
push
push
fwait
shrb
ret
xchg
push
jmp
add
push
shrb
push
inc
and
cmp
inc
inc
cs
bound
ja
or
fcomps
adc
mov
push
or
lock
fbstp
add
add
cmp
pop
mov
mov
rorl
sbbl
xor
cmp
push
pop
mov
push
push
jb
addl
mov
mov
sub
jle
or
lods
push
or
lret
and
push
sbb
cmp
sub
jl
sbb
xlat
fdivrp
pop
or
call
pop
repnz
bound
dec
jg
in
and
mov
push
stc
jae
test
jmp
repz
dec
inc
aaa
imul
mov
call
loope
addl
pop
adc
sub
or
mov
xor
lret
pop
and
xchg
add
or
jb
dec
xor
inc
sahf
sbb
or
and
jnp
sub
in
aam
sub
clc
mov
sbb
and
testb
fisubrs
and
xor
es
loop
sub
or
aam
jecxz
les
imul
test
addr16
loope
test
fdiv
xor
xchg
lea
in
fimuls
push
adc
std
add
ss
push
mov
fisubrl
adc
daa
icebp
subb
addl
xor
imul
push
call
and
mov
add
or
add
shr
or
lret
notb
pushf
and
aam
imull
loopne
leave
inc
imul
and
adc
inc
mov
sbb
sbb
repnz
adc
rcll
adc
cs
sub
sub
inc
or
sbb
jo
xor
or
adc
pop
or
movsb
xchg
test
mov
nop
mov
mov
push
adc
jae
dec
add
movsb
movsl
mov
add
fisubrl
adc
push
ljmp
imul
fs
or
fs
js
cs
call
repz
sub
cwtl
dec
add
js
mov
lcall
lock
cs
and
jp
sbb
aaa
fimull
add
jle
pop
loopne
test
xor
loopne
sbb
adc
js
scas
je
sbb
addb
pop
dec
sbbb
je
lock
sbb
orb
shlb
pop
add
ror
leave
cmovno
insb
ljmp
loope
cmp
dec
mov
cmc
movsb
test
pop
daa
and
inc
in
outsb
push
lods
out
and
push
rcrb
adc
dec
xor
out
mov
subl
pusha
push
out
push
push
sbb
clc
sbb
jne
adc
jo
mov
or
sbb
movsb
xor
ja
mov
sbb
jo
movhps
and
pop
fldenv
mov
insb
and
mov
jp
je
push
aam
insl
mov
sahf
cmp
jns
bound
out
mov
push
or
jp
push
insb
mov
jne
test
dec
fmull
fcoms
cmpsb
js
pusha
int
pop
cltd
mov
leave
xor
or
xchg
fiaddl
xorb
cmp
cmp
fidivrs
sarl
add
fsubl
in
sbb
test
fcom
je
dec
push
push
loope
push
je
dec
add
fimull
and
add
enter
sub
and
mov
or
dec
inc
arpl
call
add
adc
jnp
ljmp
pop
loopne
or
les
sbb
push
or
mov
in
and
pop
icebp
xchg
xchg
sub
lea
test
bound
enter
loopne
leave
loopne
mov
or
adc
inc
jp
jge
in
sub
add
ja
es
mov
or
jb
ds
nop
loope
cld
cmp
mov
xor
cmp
dec
ljmp
mov
sbb
add
adc
pop
sub
cld
jl
mov
sbb
shll
jb
daa
add
lahf
bound
xchg
loopne
test
fs
sub
addr16
or
sbb
inc
pusha
scas
push
inc
idivb
inc
mov
test
and
dec
add
dec
xor
mov
test
in
test
push
or
cwtl
mov
mov
inc
out
movsb
dec
cmp
or
inc
cs
and
lock
xchg
lea
or
cmp
test
insl
add
es
and
mov
and
aaa
les
dec
sub
and
xchg
xchg
repnz
cmp
mov
xchg
cmp
pop
dec
xorb
adc
sarb
aaa
inc
inc
cmp
and
je
or
loop
add
cmpl
jne
jl
adc
shll
add
adc
mov
in
xchg
lock
loopne
addl
std
lds
lods
push
aam
add
add
mov
cld
cmp
or
pop
mov
stos
aad
add
mov
scas
push
pop
aam
push
pop
sub
cmp
pop
cmp
je
cmpsl
test
mov
push
cmp
add
enter
js
xchg
or
pop
mov
xchg
inc
mov
xor
mov
jecxz
push
xor
nop
addr16
inc
pusha
add
cmp
lahf
lahf
lret
divl
movl
je
adc
adcl
cmpsb
jo
or
jo
push
sub
js
push
mov
push
pop
push
xlat
in
mov
push
xor
sbb
push
mov
popf
cmp
fwait
adc
jl
cmp
popf
ja
and
cmpsl
mov
dec
jl
test
adc
xrelease
sbb
fldl
pop
cmpb
es
cwtl
xchg
xorl
jge
fsubrl
xor
movsb
or
movsb
adc
ss
nop
pushf
aam
movsb
popf
adc
xchg
mov
movsl
adcb
pop
pop
mov
push
sbb
aaa
iret
inc
test
out
int
mov
jne
lea
dec
insl
mov
js
movsb
and
sti
jecxz
scas
ficompl
or
mov
jge
test
xchg
and
es
ret
or
xor
ret
dec
test
or
rep
mov
ds
shll
jne
adc
sbb
pusha
pop
rolb
inc
and
cld
add
lret
inc
mov
inc
dec
into
fiadds
jl
push
stos
xchg
insl
jne
cmp
add
adc
xor
call
shll
mov
push
jno
jle
push
aad
testl
jae
mov
cmp
inc
jg
jbe
lods
mov
cmp
test
inc
pop
cmp
loop
rorb
mov
imul
push
adc
xor
lret
jmp
push
mov
imul
xor
notl
xchg
mov
lods
dec
test
or
mov
xor
pop
xchg
dec
icebp
aam
movsl
inc
cs
ja
and
nop
cwtl
inc
iretw
pop
sub
ret
mov
sbb
push
mov
mov
mov
sub
and
fcoml
xchg
jmp
mov
or
std
loopne
imul
fld
push
adc
test
imul
mov
lea
out
sbb
pop
cmpsb
cmp
or
popa
mov
mov
scas
adc
scas
rcrb
push
lea
and
loopne
sub
cmp
jae
xor
test
lret
xorb
movsb
pop
cld
or
fdivrl
add
dec
xchg
dec
arpl
inc
push
adc
aam
rcrb
mov
orl
fmuls
xor
adc
in
add
leave
xchg
mov
daa
test
dec
repz
push
test
cld
mov
adc
imul
cli
in
push
pop
hlt
add
je
jns
in
add
mov
jns
sbb
add
loopne
add
inc
push
ljmp
push
sub
add
push
push
cmp
stos
push
xchg
ljmp
pop
mov
mov
dec
lahf
test
xor
or
shlb
dec
imul
mov
push
mov
inc
outsl
lret
sbb
mov
mov
pusha
or
das
leave
xchg
fs
mov
test
push
fs
movsb
lds
pusha
mov
mov
push
pop
push
and
mov
sti
mov
push
cmp
pop
sub
sub
lods
or
fsubs
xchg
inc
ret
pop
jecxz
int3
addl
push
jle
pop
xor
sub
je
adc
outsl
or
lret
sete
lea
add
mov
or
pusha
dec
inc
loopne
add
sbb
xor
pop
mov
pop
pop
int
or
cmpsb
sub
adc
xor
imul
xor
mov
pop
addr16
cs
xchg
arpl
call
sub
xor
mov
fs
push
xor
mov
pop
movb
ds
mov
notl
push
pop
adc
sub
fstpt
or
mov
cmp
jg
rcrb
jg
mov
mov
cmp
push
or
inc
sub
sahf
ja
push
xlat
inc
adc
pop
movsb
mov
push
ja
or
outsl
shlb
dec
hlt
cmp
out
out
pop
out
jl
imul
xor
rcrb
and
rcrb
movsl
test
leave
std
fs
mov
je
cmp
jne
inc
inc
jmp
inc
fs
push
mov
pop
cmp
leave
hlt
in
inc
repnz
pop
repz
int3
cmpsl
je
insb
inc
in
test
inc
or
dec
mov
dec
adc
jnp
dec
xchg
or
sub
lahf
loope
pushf
enter
mov
sbb
adc
jae
or
jnp
xchg
push
js
paddsb
jl
jecxz
iret
add
xchg
and
roll
sbb
testb
movsb
es
pop
ret
aam
pop
movsb
pusha
push
mov
lret
pop
cltd
push
jmp
xor
dec
and
or
scas
mov
mov
xchg
mov
pushf
nop
mov
hlt
push
cmp
pop
rorb
push
inc
mov
les
out
sub
lods
add
inc
test
gs
test
pop
clc
addb
pusha
xor
inc
pop
or
hlt
xchg
ljmp
mov
sbb
arpl
jbe
cmpsb
les
in
aam
inc
adc
lret
xchg
movsb
mov
or
aas
or
mov
es
stos
mov
sbb
sahf
inc
sbb
aam
je
push
leave
push
mov
pop
aam
cmp
adc
sub
das
pop
jb
or
movsl
push
or
mov
dec
addl
push
fldt
mov
test
repz
xor
insl
pop
push
sbb
push
test
cmp
fs
push
mov
pop
rclb
xchg
addr16
outsl
or
or
repnz
add
xchg
add
sub
push
mov
clc
nop
add
pop
dec
pusha
andb
cmp
add
and
imul
leave
xor
call
push
aad
add
add
mov
cmp
nop
inc
pop
xor
add
add
orb
es
inc
call
sub
dec
xchg
fucomp
insl
nop
shlb
push
out
and
cmpsb
jno
in
or
sbb
sub
inc
mov
stc
pop
mov
xlat
and
sbb
and
jne
rclb
in
sub
jne
ss
imul
xor
scas
cmp
dec
rorb
pop
cmp
xchg
sub
mov
int3
mov
out
orl
jnp
add
and
cmp
inc
stos
mov
dec
sub
sti
movsb
adc
mov
fistpl
jl
bound
inc
xchg
dec
dec
daa
sub
xchg
pop
mov
sub
xor
fstpt
fcomps
jo
adc
dec
jl
jno
xlat
push
mov
and
fcompl
add
nop
out
movsb
add
mov
imul
mov
cmpsl
inc
cmp
mov
sub
icebp
sbb
mov
mov
divl
sbb
xor
xor
jno
or
shr
xor
adc
or
mov
sar
lea
test
test
sbbl
jb
call
add
aaa
jmp
add
mov
pop
mov
mov
mov
movsb
add
inc
push
xor
or
imul
orb
xor
mov
cmp
sahf
push
dec
int3
pop
adc
loop
adc
xorb
cli
subb
push
aaa
pop
ret
push
inc
test
adc
add
inc
xchg
or
sbb
subb
adc
mov
xor
inc
mov
add
add
jl
jecxz
call
mov
jb
test
mov
stos
ljmp
insb
xchg
lcall
xchg
inc
loopne
mov
or
pop
xorb
sbb
cld
add
in
sbb
insl
jmp
or
push
test
jb
cmp
and
subb
lods
inc
stos
notl
add
sub
data16
pop
les
and
test
pop
sub
popf
addb
fs
push
adc
and
inc
jg
jp
pop
add
pop
dec
jns
and
sbb
sar
je
pop
jb
dec
sub
bound
add
or
xchg
into
movsl
das
and
pusha
pop
aaa
sbb
movsb
test
pop
out
fidivs
cmp
or
and
mov
ret
jge
cmp
sub
aas
test
les
inc
dec
sub
sbb
hlt
nop
rcrl
imul
mov
push
adc
add
add
sbb
sub
popf
add
cmp
jg
in
xor
pop
push
adc
pop
xchg
cmpsl
and
movsl
push
fldenv
and
jecxz
add
into
jmp
push
insl
addl
push
jg
push
js
xchg
push
or
sub
push
sahf
and
in
add
add
push
cmp
inc
adc
adc
sbb
push
adc
outsb
or
je
subl
mov
xchg
and
inc
xor
add
fwait
push
add
sahf
ljmp
ficoml
push
pop
and
shrb
aad
cmp
sub
rorb
cmp
or
jge
js
outsb
add
daa
clc
adc
and
int3
or
pushf
cmp
pop
adc
xor
hlt
fiadds
inc
mov
mov
or
pushf
push
adc
shr
inc
mov
or
lods
aam
xor
add
aam
sbb
or
pusha
cmp
or
fnstcw
push
push
mulb
fwait
orb
into
pop
cmc
and
pop
inc
fwait
insl
inc
push
ds
in
shll
sbb
cmp
adc
xchg
test
dec
in
mov
mov
or
and
add
inc
dec
jne
sbb
sbb
daa
cli
sbb
hlt
cmp
pop
push
icebp
lods
jno
mov
movsb
adc
insl
push
sbb
push
pop
mov
add
lea
adc
clc
push
aaa
cmp
jne
pop
inc
cs
add
xchg
push
xchg
adc
and
sti
sbb
mov
xchg
movb
rol
push
lods
aam
cmp
add
inc
lret
adc
dec
loopne
bound
push
mov
push
dec
sub
mov
je
and
add
jbe
adc
or
ret
sbb
insb
and
sbb
or
and
pop
lahf
add
in
jo
call
aaa
call
cmp
fadds
fmuls
test
and
add
pop
pushf
dec
push
add
mov
and
mov
jbe
cmp
mov
dec
cli
rolb
push
stos
jnp
ror
pop
jmp
sar
add
adc
xchg
clc
aad
lahf
sub
les
out
jns
mov
dec
sti
pop
movsb
cmp
fisubs
inc
xor
inc
mov
xchg
rolb
fiaddl
ss
inc
mov
push
adc
inc
adc
sahf
ret
mov
daa
lret
in
lods
pop
nop
push
xchg
sub
sti
jo
cwtl
lahf
dec
or
xor
sbb
push
xchg
pushf
std
sub
bnd
mov
movsb
test
add
mov
mov
lods
push
mov
cmp
in
fdivs
mov
push
or
mov
mov
cltd
or
lcall
push
rcl
jnp
sbb
cmp
inc
add
mov
jne
into
je
push
rol
je
faddp
sbb
pop
jp
jle
push
je
or
frstor
inc
bnd
imul
fs
add
or
adc
adc
xchg
or
imul
xor
and
sarb
pusha
inc
push
sbb
clc
mov
or
push
aam
sbb
dec
add
and
shlb
push
push
sbb
mov
and
out
cmp
sahf
add
je
push
push
add
jne
fwait
sbb
lods
sbb
dec
or
test
jne
or
add
mov
jo
jg
mov
add
inc
call
arpl
inc
pop
sub
sbb
rolb
or
outsb
daa
scas
dec
hlt
clc
mov
push
sahf
mov
inc
sub
add
lret
or
mov
fdivrl
sarb
jge
xchg
sbb
sbb
dec
inc
sub
lods
les
pop
jmp
je
pop
mov
xorl
arpl
mov
cmp
or
psrad
push
fists
inc
shl
mov
pop
pop
add
add
pop
rcll
add
clc
and
fs
inc
pop
mov
xor
imul
cmp
loop
cltd
test
add
add
clc
andb
pop
aas
push
mov
repz
aaa
add
pop
jp
mov
jns
push
xchg
cmpsl
mov
push
inc
push
pushf
cmpsl
add
cs
aad
sbb
and
mov
inc
seta
adc
movsb
out
sub
push
imul
test
loopne
push
js
mov
test
dec
cmp
fsts
pushf
lcall
repnz
mov
ds
outsl
test
sub
hlt
jl
lea
nop
pop
xor
sub
push
loopne
cmp
shlb
dec
aam
aam
popl
dec
fildl
mov
sahf
jb
jo
add
clc
rolb
ljmp
mov
rclb
inc
rorl
xor
rcr
push
icebp
ljmp
inc
imul
push
les
pop
imul
bswap
seto
dec
add
test
sub
cwtl
pop
or
dec
inc
addl
xor
pop
pop
clc
xor
cmpsb
push
sbb
pop
mov
andb
cmp
xchg
jne
andb
push
insl
pushf
or
repz
pusha
daa
add
mov
push
or
and
imul
jle
push
cs
sbb
or
xchg
jno
or
cli
adc
xor
add
imul
andb
enter
jae
push
sar
add
jmp
add
lahf
jle
add
repz
decl
hlt
lret
sub
sub
inc
lea
pop
mov
push
add
dec
cwtl
sbb
push
add
ljmp
cmp
dec
pop
mov
or
lods
sbb
mov
mov
inc
scas
inc
xchg
subb
jl
and
lret
dec
addb
nop
cld
pop
cmc
cmpsb
stos
jmp
add
sub
hlt
mov
mov
test
adc
cmp
pop
sarl
adc
adc
sbb
aam
xchg
xor
sbb
je
pop
jb
lods
mov
dec
test
icebp
add
clc
test
loope
mov
ss
mov
mov
dec
fldl
test
push
or
fs
mov
dec
das
jb
rolb
or
je
adc
push
pop
andb
fisubrl
pop
dec
leave
sbbl
inc
mov
pop
popa
mov
dec
xlat
add
xchg
fmull
sub
jle
mov
sub
es
adc
dec
cmpsl
add
cld
insb
push
sub
pop
hlt
movsl
push
jne
jecxz
and
or
sahf
ret
aas
and
outsl
xlat
jecxz
decb
popa
dec
pusha
xchg
lea
fadds
cmpsl
js
sarl
cltd
add
subl
add
push
push
xlat
sub
jnp
pop
dec
add
adc
jns
cld
mov
movsb
or
arpl
xchg
loope
jle
sub
movb
cmpsl
cmp
rcrb
imul
inc
add
inc
mov
arpl
xor
and
mov
xchg
lock
cld
push
jge
inc
push
inc
xlat
pop
cmp
add
adc
push
hlt
or
jle
mov
push
mov
adc
ret
loope
push
push
inc
aas
inc
adc
daa
mov
or
int
and
call
cmp
cs
sbb
scas
xor
add
mov
push
loop
pop
sub
fcmove
bound
lods
xor
movsb
test
into
nop
jmp
ss
push
pusha
sbb
add
xchg
adc
pop
ss
rcpps
dec
add
test
jne
filds
jbe
popa
dec
push
jb
mov
mov
sbb
lock
push
pushl
xchg
jl
or
mov
addb
shlb
pusha
fldl
xchg
ficoml
ja
jl
jo
xor
cmp
or
pop
dec
or
fs
movb
lret
je
push
lea
mov
xor
cwtl
push
inc
imul
or
adc
sbb
inc
adc
push
sbb
pop
arpl
in
or
cmp
les
dec
in
xchg
push
repnz
lods
in
push
mov
push
jnp
adc
xlat
cmp
cwtl
loop
cld
push
faddl
mov
jle,pn
cmp
push
jmp
test
and
mov
cld
push
repz
sbb
jmp
inc
dec
jb
int3
rcrb
addr16
xor
push
or
jge
xchg
ss
sbb
sbb
mov
mov
pop
xchg
or
push
push
fdivr
adc
xor
dec
xchg
mov
and
push
dec
inc
pop
push
dec
adc
or
decl
nop
dec
dec
pop
jmp
repnz
sub
das
and
sbb
test
push
jb
lods
out
and
ds
mov
and
mov
adc
movl
test
adc
mov
shlb
push
mov
mov
or
insb
mov
test
sub
xchg
add
aam
mov
jbe
es
movsb
jae
clc
cmp
js
mov
sbb
sub
aas
loopne
jecxz
or
add
jmp
xor
jnp
jp
pop
mov
inc
arpl
imul
xchg
fidivl
cwtl
lock
icebp
ret
int
imul
ret
imul
add
sbb
mov
push
push
mov
mov
mov
in
adc
inc
popf
dec
enter
sbb
mov
call
aam
push
mov
out
jo
adc
cmp
or
mov
and
push
andl
xor
lea
pop
jno
jo,pt
add
pop
leave
jo
add
jne
mov
call
push
sbb
test
push
push
in
xor
jo
mov
mov
rol
mov
ror
xor
shr
xor
xor
sti
decl
xor
shr
xor
add
add
add
mov
sahf
dec
or
cli
fs
or
pop
cmc
pop
ja
push
or
and
fiaddl
sti
add
jo
fs
sub
jge
jl
stos
or
repnz
std
aas
pop
mov
fisubrs
jge
xor
and
and
jo
shrb
push
cltd
xchg
aaa
cmp
mov
repnz
lcall
mov
movsl
or
push
or
xlat
ret
mov
in
rcl
add
add
imul
enter
rcl
call
call
dec
xor
push
lcall
rol
rol
out
dec
shll
add
push
xor
sbb
pop
fsub
in
js
xor
jae
in
aam
nop
xchg
lret
shl
pop
mov
push
cmp
jns
adc
or
add
cmp
sbb
les
shll
fadd
mov
call
in
imul
in
loopne
cmp
rorl
pop
cmp
aam
jecxz
and
xorl
or
int3
lcall
in
push
xor
sub
and
out
mov
jbe
into
add
and
xor
add
sbb
adc
inc
and
mov
jb
mov
inc
jo
ret
push
jo
ficoms
add
mov
movsl
pusha
je
xor
mov
iret
push
loop
mov
imul
add
add
pop
jbe
sti
rcll
call
lretw
stc
loope
in
push
clc
jp
push
and
add
gs
fmul
add
push
cmp
enter
call
stc
xor
add
fcoms
pop
jo
cli
stos
adcb
aam
aaa
cmp
imul
in
in
mov
xor
out
rolb
inc
aaa
lret
loopne
xor
xor
dec
push
sbb
inc
xor
roll
add
loopne
or
jb
call
inc
bnd
add
push
inc
or
add
sahf
dec
pop
xchg
pop
mov
rorb
push
and
dec
xorb
and
nop
out
fs
push
pop
xchg
or
mov
pop
push
lcall
push
xor
push
fimuls
rol
push
or
enter
movsb
pop
add
jae
pop
fs
and
inc
pusha
test
push
pop
and
xchg
movsl
and
xchg
or
repnz
rolb
dec
sahf
xor
dec
shr
and
add
shlb
stc
test
addr16
stc
mov
adc
rorb
inc
add
mov
inc
mul
dec
shll
adc
adc
mov
loopne
or
and
add
add
shll
inc
mov
add
dec
mov
cld
mov
pop
add
sub
mov
or
inc
loopne
xchg
mov
lret
jb
jmp
decb
lea
push
add
sub
imul
inc
push
adc
into
add
decl
sub
inc
ret
xchg
sarb
rol
ret
out
rorb
or
or
mov
adc
mov
xchg
jo
jae
mov
nop
mov
mov
sbb
sub
aas
lea
jmp
lods
push
push
xchg
in
push
sub
pop
add
dec
or
mov
dec
jne
pop
add
loope
daa
push
cmpl
inc
jl
add
mov
call
clc
aaa
jbe
or
xorl
test
push
jae
push
pop
push
dec
mov
fadds
rep
or
adc
ljmp
scas
or
outsl
mov
mov
outsl
pop
loopne
ror
xchg
lods
mov
or
xchg
ljmp
adc
mov
adc
movb
adc
cmp
jb
cmp
ja
xor
dec
sahf
jbe
call
aaa
popa
mov
in
push
insl
mov
mov
push
add
je
add
push
sbb
sub
or
imulb
pop
push
inc
adc
and
dec
shlb
ljmp
fistps
pop
cwtl
je
mov
mov
inc
or
xchg
in
das
je
or
cwtl
adc
daa
sub
jne,pn
jb
fs
sbb
cs
dec
fdiv
jle
inc
lea
inc
mov
pop
dec
xor
push
movsb
outsb
add
fs
sub
and
testl
sti
sbb
loop
fimuls
and
cmp
inc
fsubrs
outsb
fs
dec
inc
push
inc
and
or
and
inc
jp
cltd
sub
pop
cwtl
cmp
sbb
add
clc
lahf
inc
insb
cmp
inc
std
push
xchg
out
mov
lea
lea
lock
movsb
insb
hlt
and
or
inc
add
xor
inc
sbb
pop
sahf
lods
pop
cmp
jne
in
xor
andb
mov
pop
xor
adc
je
sti
adc
inc
in
xchg
sub
sbbb
add
jne
rorl
dec
inc
stos
push
push
inc
das
jbe
imul
lods
popa
loop
jne
xor
xchg
ss
sarb
inc
inc
xchg
fsubs
jbe
es
jb
aaa
jb
imul
pop
iret
int
inc
jecxz
add
jmp
cwtl
aas
les
jle
rcll
xor
je
fs
jne
sahf
dec
mov
lock
sub
dec
or
incb
inc
call
cmp
dec
push
push
push
test
xor
push
sub
sbb
sub
push
push
mov
or
inc
call
shl
nop
lds
push
sub
es
lret
cmp
jg
or
jge
and
int
int
aaa
and
es
sub
sub
jp
jle
jmp
cmp
jl
pop
jle
pusha
push
sub
mov
inc
test
jbe
jp
jb
xor
jbe
mov
test
fwait
and
repz
jne
or
je,pn
test
jne
je
pop
or
jae
and
push
mov
roll
je
xor
pop
bound
add
into
push
insb
jp
ret
and
aam
adc
xchg
aas
xchg
adc
scas
push
push
mov
shll
inc
and
je
fsubrs
sbb
xor
mov
or
jae
add
inc
es
adc
cwtl
adc
pop
push
mov
push
xor
roll
movsl
push
jg
or
xor
push
xchg
mov
adc
xchg
push
add
add
insb
or
call
out
mov
bound
test
sub
dec
xchg
xor
sbb
sub
arpl
mov
xor
orb
cli
cli
incb
test
sahf
sub
xor
push
push
push
pop
movsb
mov
pop
jb
sbbl
fwait
incb
cmp
mov
mov
mov
loopne
inc
arpl
div
das
mov
or
xchg
sbb
mov
mov
pop
cwtl
xor
mov
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
pop
out
pop
movsb
cmp
je
test
adc
dec
in
xchg
push
fsts
sti
mov
mov
pop
fisttps
ret
jbe
pop
mov
xor
add
jle
jbe
arpl
or
add
push
ss
add
rclb
dec
loope
pusha
pop
aas
lret
inc
andb
mov
fidivs
jbe
lret
mov
lidtl
es
xor
push
sbb
mov
data16
mov
jg
scas
push
or
mov
cmp
lock
xchg
mov
test
hlt
inc
sub
xchg
cmpl
data16
pushl
clc
xchg
push
pop
imul
sti
pusha
jb
xor
mov
dec
js
rorl
es
add
insb
mov
inc
fisttpl
add
xchg
out
push
adc
xchg
cltd
push
lods
pushl
or
cwtl
push
movsb
push
addb
inc
push
outsb
mov
shrl
and
mov
shll
mov
push
xor
lahf
dec
into
push
push
jne
addl
xchg
xchg
jnp
ret
lock
gs
or
mov
ds
push
leave
shl
push
mov
push
xor
or
and
and
sbb
test
and
adc
icebp
das
dec
add
psubsb
pop
add
cmp
movb
fs
rclb
jnp
push
out
cmp
jne
sbb
fwait
sbb
and
push
loopne
jne
mov
rolb
in
and
sub
cld
push
shr
inc
adc
push
psubusb
sub
mov
dec
xor
das
or
lea
push
das
bound
add
lret
into
cmpl
and
xor
xchg
inc
cmpl
add
xor
mov
movsb
imul
add
cmpsb
xor
cmp
je
mov
cmp
out
lds
add
inc
fwait
mov
loope
jge
pop
and
aaa
mov
popf
das
lods
lock
lds
sbb
sbb
mov
push
lcall
add
adc
jmp
xchg
sbb
fnsave
rorb
push
outsl
push
push
and
pop
sub
in
fs
rolb
fucomi
outsb
insb
jne
jl
sub
add
fdivrs
sbb
lret
jo
call
or
pop
inc
cld
inc
xchg
les
enter
sti
lock
jne
les
aam
adc
daa
and
pop
cmp
cmpsb
or
or
fld1
ret
sti
and
enter
mov
insb
jmp
test
movsb
push
adc
cltd
test
jge
cmpsb
mov
imul
jg
xor
or
addb
jmp
add
or
and
and
or
pop
stc
jnp
sahf
cmpb
je
test
dec
jno
loope
nop
jmp
inc
push
pop
fidivrs
mov
cmp
je
pop
in
mov
daa
or
lock
push
orl
push
mov
clc
adc
add
jne
mov
xchg
outsl
inc
cmpb
mov
cld
and
pop
cs
out
or
xor
pop
pushl
cmp
or
in
fmuls
imul
ret
push
pushf
sbb
push
cmp
lret
adc
push
ds
pop
sarl
push
mov
imul
cmp
cmp
es
int3
cmp
jbe
fiaddl
mov
cmp
mov
xor
dec
dec
lret
mov
push
sub
sub
xor
lret
in
xor
cmp
dec
dec
ret
sub
daa
adc
adc
ret
xor
mov
inc
or
push
push
adc
test
inc
imul
imul
es
aas
inc
mov
push
subb
and
mov
sbb
push
push
shll
adcb
stos
insl
fsubs
aam
cmp
and
push
les
push
push
out
jle
call
push
int3
sbb
push
call
cwtl
popf
daa
or
test
jbe
mov
inc
push
je
add
push
dec
and
dec
sub
adc
sbb
mov
js
xlat
sahf
or
or
add
loope
pop
dec
push
or
cmpl
scas
pop
or
mov
daa
and
in
xor
xor
jne
aas
out
jne
sbb
dec
insl
cmp
jb
adc
add
fadds
sbb
clc
rclb
movzwl
push
inc
fisttpl
lock
fwait
jnp
inc
dec
mov
jnp
jne
xchg
fstl
mov
test
insb
jbe
mov
sub
add
sbb
hlt
xchg
mov
shr
and
inc
shll
js
xchg
xor
cmc
inc
sbb
fisubs
xchg
mov
push
pushf
pusha
inc
insl
cmp
mov
xchg
inc
sbb
add
lock
push
jmp
shrb
push
jbe
data16
push
sbb
push
xor
push
mov
pop
lods
sbb
fs
and
mov
popa
xchg
orb
inc
ret
and
xlat
shlb
fstl
cmp
insl
or
sbb
sub
cld
lock
pop
data16
mulb
test
iret
xchg
pop
pop
daa
clc
aam
or
add
enter
roll
ja
pop
loope
push
movsb
or
and
sbb
addl
sahf
lds
lea
lahf
movsb
adc
inc
cwtl
lea
roll
push
imul
or
inc
jo
and
inc
pop
dec
mov
aam
fimull
xor
and
add
loopne
sbbl
frstor
lods
in
xorl
imul
repnz
xchg
add
mov
adc
adc
pop
or
adcl
cmp
inc
imul
add
jge
aaa
jbe
push
and
cld
fs
sub
push
pop
sbb
xor
rorb
loop
push
out
sbb
xor
jecxz
inc
andb
push
pop
mov
mov
mov
or
add
push
dec
xor
js
add
push
adc
dec
imul
cmp
inc
js
mov
xor
dec
loopne
popa
and
mov
or
iret
sbb
cmp
aaa
in
movsb
adc
inc
add
dec
lea
push
mov
pop
mov
divl
jo
adc
add
int
std
dec
adc
dec
outsb
adc
xchg
or
mov
lcall
and
xchg
aas
or
fldenv
in
adc
or
mov
mov
jo
push
jae
dec
push
pop
push
mov
mov
add
push
fisubrs
xchg
popa
faddp
sti
pop
mov
andl
sbb
inc
jge
dec
loop
inc
dec
sub
addr16
add
in
and
dec
insb
jo
sbb
ja
push
jo
xchg
out
xchg
or
push
sbb
xchg
or
add
or
adc
inc
sbb
icebp
mov
or
ljmp
data16
sub
jp
dec
xor
sbb
xor
orb
mov
movsl
mov
adc
add
jp
jbe
adc
push
and
sub
call
dec
push
es
mov
inc
inc
push
xor
sub
fisttpll
inc
mov
aam
stos
add
hlt
rcl
add
enter
dec
aas
or
sbb
dec
mov
lret
or
pop
xchg
sbb
cmp
or
pop
cmp
inc
mov
xchg
rcr
mov
adc
incl
inc
mov
test
repnz
xchg
rorb
sbb
and
inc
and
xor
push
inc
mov
rorl
xchg
mov
inc
inc
je
sahf
dec
sub
arpl
pop
inc
xlat
push
push
adc
notb
loop
sbb
and
xor
pop
and
pop
shlb
rorl
xor
inc
and
mov
in
addl
sbb
sahf
insl
icebp
jmp
jmp
cmpsl
jmp
inc
adc
pop
and
inc
enter
or
das
dec
outsb
push
mov
adcb
repz
mov
in
push
inc
pop
lock
push
fcmovnu
mov
daa
rorb
outsb
push
js
std
adc
jbe
jno
pop
and
inc
movsb
cli
and
cmp
mov
sbb
mov
test
mov
sub
je
stos
jge
xor
inc
sub
pop
inc
rolb
sbb
imul
testb
push
pusha
and
jne
mov
xor
fiadds
inc
pusha
adc
xor
pushl
inc
cmp
inc
jmp
mov
mov
das
orb
rolb
push
insl
mov
aaa
lea
inc
je
add
sub
lock
sahf
es
or
mov
inc
and
je
cmp
push
push
add
mov
add
fildll
inc
xor
push
inc
aaa
test
bound
push
pushf
in
mov
mov
imulb
adc
mov
mov
push
jbe
adc
sub
xchg
xchg
and
inc
pop
pop
cld
aaa
push
jo
je
cmp
jbe
lds
xchg
pusha
mov
jbe
mov
xor
add
lock
xchg
enter
push
push
jp
xchg
insl
xor
add
in
and
inc
push
xlat
mov
mov
jnp
test
js
sbb
dec
xchg
bnd
push
pop
movsb
jmp
push
sbb
pop
movsb
orl
mov
cmp
lea
les
in
push
jbe
push
es
or
mov
cmp
cmp
out
push
add
and
push
push
jnp
je
sub
cmp
push
cmp
pop
add
icebp
pushaw
repnz
or
adc
insl
mov
mov
lea
ret
pop
xchg
test
pop
mov
jmp
mov
or
push
push
loopne
lahf
mov
std
out
jbe
shrb
incb
cmp
jae
push
add
fs
cmp
sub
ss
inc
sbb
lret
xor
mov
push
jo
adc
scas
lret
es
es
mov
test
test
lock
cmp
pop
jp
notl
cltd
push
pusha
sub
roll
fidivrl
mov
dec
adc
and
push
mov
imulb
scas
dec
adc
push
jle
hlt
pop
mov
mov
cmp
jne
ss
and
int3
lock
push
and
in
rep
loop
sub
sub
mov
mov
and
xor
adc
imul
adc
and
in
xor
push
adc
add
orl
cmpsb
in
add
push
leave
sub
cmp
cmp
jbe
sub
add
mov
xchg
push
addl
xor
lds
jg
push
fwait
or
jbe
ljmp
inc
out
jno
add
shrb
cmp
jb
add
andl
ret
pop
lock
stc
mov
pop
je
mov
sbb
add
push
mov
mov
push
add
stc
pop
dec
insb
xor
push
scas
les
data16
or
pop
lea
inc
cmp
fisttpll
ret
xchg
mov
cli
mov
xor
in
sbb
lods
push
inc
lock
jo
mov
ja
repnz
sbb
in
nop
push
mov
clc
movsb
test
jl
cmpsb
cmp
fldt
or
or
mov
movsl
jg
xor
jp
mov
popf
pushf
add
fwait
repz
stos
fwait
xchg
jo
sar
add
mov
add
pop
imul
pop
push
int3
jnp
jne
popa
mov
jne
add
or
jmp
mov
sbb
and
dec
cmc
push
xchg
pop
pop
mov
inc
cmp
enter
shrb
mov
mov
adc
aam
or
dec
ret
aam
je
dec
xchg
add
dec
pop
cmp
mov
add
mov
cmp
icebp
outsl
stc
add
lea
sbb
cmp
push
sbb
push
dec
clc
xchg
in
lea
cmp
jl
pusha
pop
mov
lcall
jmp
add
pop
inc
ss
cmp
push
add
xlat
arpl
stc
ja
sub
shll
ss
jb
movb
mov
pop
jne
mov
hlt
ror
mov
inc
or
sbb
ret
push
loope
out
add
fisttpl
pop
push
jmp
xor
mov
andb
sbb
inc
bound
jmp
xchg
aas
xor
pop
divl
dec
xchg
daa
mov
movsl
iret
jge
lea
sbb
jnp
stos
sub
mov
jmp
or
aas
and
and
in
pop
pop
mov
stc
mov
loopne
lahf
les
push
imul
mov
sbbl
inc
aaa
jmp
clc
add
push
cltd
xchg
aam
xor
add
cwtl
ret
push
jae
add
cmpb
and
leave
fsubrs
sbb
add
rcr
js
push
pop
movsb
mov
mov
jbe
pop
mov
mov
arpl
clc
mov
add
test
mov
lock
sbb
pop
push
in
push
jbe
lret
xor
or
dec
adc
add
dec
addr16
int
test
cmp
push
test
stos
cmp
js
pop
pop
movsb
mov
sub
xor
dec
sbb
test
clc
dec
popf
add
sbb
pop
jg
lea
ds
scas
mov
sbb
jbe
xor
or
jle
cld
mov
jecxz
or
int
rolb
loope
inc
das
js
orb
cmp
ljmp
and
push
push
orl
add
sub
roll
xchg
add
sub
and
adc
mov
jmp
inc
scas
mov
and
out
or
or
mov
xrelease
mov
gs
push
cmp
pop
mov
fistps
push
arpl
jg
cmp
and
jle
cmp
into
or
sbb
sti
add
and
mov
pop
fcompl
sub
shlb
push
jge
mov
and
shll
clc
and
sbb
shl
adc
sar
mov
xor
mov
ret
je,pt
pop
xor
scas
mov
jmp
push
push
adc
xchg
adc
sub
cwtl
xor
sub
mov
jle
or
insb
mov
add
dec
pop
clc
lds
mov
mov
push
cmp
inc
xor
inc
pushf
addb
call
push
sbb
pop
sub
jl
cmp
push
ss
jnp
xor
push
je
add
push
in
fstps
add
fcoms
add
lock
or
pop
lret
inc
mov
dec
popa
rorl
add
and
or
cli
std
cmp
or
mov
popa
loop
ret
sub
jle
lret
ret
jbe
fs
push
adc
or
fwait
sbb
add
cmp
jb
daa
xchg
xchg
pushl
shrb
and
rol
xchg
inc
push
pop
dec
xor
mov
dec
inc
sbb
in
int
jo
ficoms
sub
inc
addb
call
scas
push
sbb
push
or
sub
call
mov
and
adc
outsb
dec
mov
das
inc
xchg
jne
adc
add
mov
add
add
cmp
rclb
testl
shll
xor
and
cmp
and
xchg
xor
test
add
mov
packsswb
push
cmp
pop
fildl
callw
dec
cmp
addb
lock
test
push
ret
stc
jmp
idiv
add
push
sbb
frstor
in
mov
push
ss
ret
xor
sarl
data16
pusha
adc
ds
fstl
test
divl
insb
in
jno
scas
xchg
xchg
or
and
andl
jmp
jbe
xchg
mov
ret
xor
push
loop
js
mov
dec
dec
add
data16
add
test
jae
getsec
leave
ret
pop
mov
mov
mov
sarl
add
fisttpll
sub
dec
in
call
and
adc
xorl
sbb
pop
dec
push
push
in
popa
cmp
ficompl
push
xchg
popa
or
cmp
test
pop
ss
or
stos
stc
adc
mov
cmp
mov
clc
dec
in
mov
stos
or
fldl
imul
or
ret
sub
pop
xor
mov
and
ds
sbb
nop
sbb
inc
adc
or
sub
adc
fmul
mov
int3
push
lds
xchg
push
rclb
inc
out
icebp
sub
mov
jge
and
ds
mov
mov
arpl
push
adcl
imul
aam
les
jne
add
pushl
lret
das
scas
push
adc
test
movsb
int3
mov
mov
inc
call
rolb
cmp
out
imul
push
add
inc
mov
push
out
fs
xchg
mov
or
mov
or
cmp
call
pop
lea
int
aam
mov
iret
jle
mov
jmp
test
pop
push
inc
adc
add
inc
movsl
push
or
and
lock
jge
xchg
add
cs
add
xchg
or
push
dec
insb
and
adc
or
test
add
insb
lock
pop
icebp
arpl
xor
xor
adc
mov
dec
nop
in
ds
cmp
cmp
pop
cmpsb
inc
mov
cmp
pop
jl
jmp
test
add
fcoms
mov
in
stos
mov
cmp
or
mov
cld
je
dec
je
dec
sbb
insb
inc
pop
xor
sarb
jl
sub
fsubr
dec
and
icebp
incb
and
dec
adcb
jmp
cmpl
faddl
je
inc
mov
pop
and
ret
dec
sbb
cmp
leave
fists
mov
insb
xor
mov
pop
xor
sub
scas
sbb
inc
lret
and
insl
insl
loop
adc
adc
fists
nop
cmp
daa
mov
hlt
or
shl
jo
dec
adc
in
es
iret
outsl
pop
pop
push
jo
sbb
jmp
addr16
into
jno
jns
ffree
inc
push
push
cmpsl
dec
cmpsl
inc
or
xor
loopne
jb
sbb
jge
cmp
pop
adc
int3
adc
add
jl
add
xchg
or
pusha
sub
sbb
cmp
sub
xchg
or
mov
xchg
pushf
in
mov
add
jb
add
jne
or
fbld
imul
adc
mov
iret
rcrb
cmp
cmpl
mov
movsb
xchg
mov
mov
push
inc
jno
insl
and
and
nop
sub
mov
popf
cmpl
mov
loopne
xor
add
gs
ffreep
in
cmp
je
rolb
je
mov
pushf
inc
or
jmp
sub
in
in
addb
repnz
jbe
jbe
divl
test
mov
or
call
jne
mov
in
or
adc
push
rolb
ljmp
xchg
or
mov
or
sbb
pop
mov
lds
dec
ret
and
xchg
cld
adc
sub
std
les
xchg
adcl
mov
xor
sub
sbb
or
test
shll
mov
cmp
add
cmp
inc
add
xchg
mov
enter
std
inc
bound
push
and
cs
xchg
dec
jo
xchg
loopne
mov
push
nop
rorl
dec
xor
inc
dec
dec
push
or
js
xchg
dec
test
cs
inc
outsb
fisubrs
jno
lea
pop
lods
roll
adc
lock
push
cmp
iret
pop
stos
sub
pop
pusha
pop
xor
testb
fdivs
rcll
or
sub
mov
cmp
xlat
fdivs
cmp
jo
pop
mov
inc
xchg
insb
in
cmp
dec
shll
dec
fsubrp
cltd
testb
cmp
cmp
cmp
add
lock
or
insl
mov
dec
sbb
xorl
mov
movsb
mov
hlt
hlt
out
jb
jns
or
test
pop
test
add
sahf
sbb
xor
outsb
cmp
loope
mov
call
add
sbb
fxtract
jne
sbb
adc
push
js
fistl
dec
or
cld
loopne
fnstenv
mov
push
ret
mov
ret
sbb
repz
add
or
rorb
add
lock
mov
clc
pushl
add
adc
sahf
mov
les
or
mov
cmp
iret
inc
pop
cs
test
cmp
stc
mov
pop
add
cmp
sbb
mov
xchg
xor
out
inc
mov
or
lret
mov
insb
imul
mov
fldl
adc
rclb
inc
mov
test
or
shrb
sbb
test
pop
add
iret
lea
pop
mov
es
push
pop
mov
ret
adc
call
adc
outsb
cmpl
jne
cmp
cmp
in
cmp
jne
push
test
or
cltd
ljmp
test
clc
sbb
mov
sub
pop
enter
sahf
cmpsb
jmp
xor
push
les
mov
sub
das
mov
and
lea
repz
ret
jp
pop
je
sub
cmc
add
lock
inc
sub
xor
shlb
das
loopne
pop
and
cltd
mov
add
and
jne
mov
jl
pop
leave
les
rorb
iret
cmp
rcrb
mov
sub
jecxz
cmp
lods
sbb
inc
or
adc
sti
jne
fdivrs
cld
or
bound
clc
mov
jge
or
leave
jge
dec
inc
sub
dec
inc
cmp
fnstenv
cmp
loop
cmp
add
jl
cltd
insb
or
js
repz
xor
or
adc
add
dec
daa
mov
nop
pushl
aam
shl
jmp
call
ret
lea
int3
rorl
frstor
push
xlat
cmp
mov
add
jl
adc
dec
or
jae
cmpsl
adc
mov
push
fs
adc
aad
gs
adcl
push
mov
jo
add
jno
and
test
call
insb
leave
sbb
mov
pop
mov
mov
or
jg
cwtl
addb
rcrb
jmp
mov
xlat
lea
mov
ret
imul
jmp
mov
jns,pt
jo
sub
in
pop
adc
or
shlb
push
cwtl
cs
add
shrb
dec
sub
cld
leave
add
adc
shr
stos
sbb
insl
lea
lret
ret
rolb
pop
push
add
mov
addr16
adc
push
and
cmp
pop
xlat
fmulp
aam
add
clc
and
cs
jb
sub
cmp
add
xchg
add
jb
push
push
push
mov
adc
xchg
out
inc
pushf
and
push
or
int3
push
shl
les
push
out
insb
sub
call
fidivs
mov
enter
dec
sub
imulb
inc
addr16
jg
jl
imul
iret
and
inc
add
mov
adc
xor
movups
push
add
pushf
add
ret
int
push
cmp
dec
je
subl
xchg
sub
scas
mov
mov
in
rcr
xor
or
cmc
jp
addr16
cs
dec
jmp
push
mov
loopne
push
xchg
xchg
or
mov
fistl
push
mov
push
orl
or
mov
test
punpcklbw
jbe
cmp
add
inc
push
jns
adc
sub
into
pop
call
sub
add
out
in
jl
sarl
aam
rolb
cmp
sti
adc
mov
decb
enter
pusha
lcall
stos
ss
bound
call
out
xchg
popl
out
aaa
sub
ds
clc
add
clc
mov
add
pop
mov
addl
popf
pusha
shll
repz
lds
in
sbb
or
enter
sbbl
outsb
push
or
cmp
mov
inc
adc
lods
arpl
call
dec
les
popf
rol
test
jge
lea
and
ficoml
aam
or
loope
jne
dec
fadd
xor
push
in
ret
adc
in
xchg
ret
fldenv
filds
inc
cmp
pop
lds
push
faddp
test
pop
push
mov
shl
and
jmp
sbb
mov
fwait
sub
cmp
jbe
sub
loope
pushf
test
adc
jle
xchg
pushl
jmp
mov
into
pop
das
xor
xor
in
cmp
adcl
fcompl
in
add
pop
ret
imul
jnp
push
outsb
push
lea
dec
pop
cmp
sub
jbe
nop
ret
push
dec
add
mov
mov
adc
xchg
push
xlat
movb
lds
roll
add
mov
sti
dec
andl
dec
je
fs
lret
lret
in
dec
or
sbb
inc
nopl
in
je
dec
adc
push
pop
sbb
jo
mov
jg
inc
and
adc
add
call
rcll
out
inc
jbe
rcrb
pop
fcomps
or
sub
out
jo
sbb
mov
test
mov
jmp
cmpsl
lea
and
mull
inc
int
sbb
xchg
imul
xchg
xchg
mov
int
or
int3
rcrw
inc
sub
xor
add
insl
push
fcomi
push
orb
outsb
lret
add
imul
addb
adc
adc
aas
or
incb
mov
xor
jle
pop
leave
push
in
mov
ss
hlt
fildl
cs
lock
jae
sub
ja
lea
dec
or
xchg
pop
jle
ljmp
jecxz
xchg
loope
add
pop
aas
push
enter
adc
push
mov
imul
rclb
push
test
inc
addl
push
scas
das
fildl
push
pop
push
nop
or
add
add
xor
cmp
fbstp
adc
mov
icebp
jne
cmp
insb
mov
rcrb
xor
pop
int3
adc
or
lods
jecxz
jp
push
mov
mov
mov
sbb
cmpsb
xorl
repz
icebp
xchg
outsb
mov
imul
sahf
mov
rorl
jge
xchg
or
insl
rcr
mov
ret
or
add
cmpsl
lock
xchg
cmpl
mov
inc
lret
jmp
lods
xor
sub
push
mov
xorb
iret
testb
sub
jo
add
ret
mov
int
jae
jno
shrb
add
ljmp
push
jae
lea
push
das
imul
cs
push
imul
mov
ja
push
sub
mov
or
jo
jbe
push
or
call
adc
inc
xor
mov
push
shrl
cmp
push
jno
je
cmp
jae
inc
jmp
push
jp
sub
ret
xor
mov
jae
and
ret
roll
lods
movb
addb
ret
cmpsb
addb
fsub
sub
clc
andl
repnz
push
add
cmp
in
mov
inc
imul
add
shl
push
or
push
push
ss
andb
data16
and
cmp
pusha
xchg
adc
pushf
dec
mov
cwtl
add
decl
negb
mov
jl
cmp
cmp
cmp
insl
mov
pop
ficompl
push
push
fsubrs
cmp
add
mov
push
add
adc
jns
jp
adc
jb
or
cmp
jl
ljmp
cmp
je
scas
xor
jbe
call
jae
and
add
cmpb
push
frstor
pop
xor
sbb
pop
jb
ljmp
icebp
lret
inc
dec
sub
push
inc
movsb
pusha
jo
clc
invd
enter
or
or
cmp
sbb
pop
push
inc
or
add
dec
adc
bnd
add
pusha
and
inc
into
and
add
aaa
jmp
mov
mov
adc
shlb
lea
cli
ja
cmpb
outsb
xor
xor
call
das
dec
sub
mov
ret
sbb
or
sbb
in
mov
push
and
sbb
lea
fstl
out
dec
cmpsb
imul
imul
or
add
je
iret
in
inc
fstl
xchg
divl
enter
jbe
push
popa
daa
cld
cmpsb
jne
and
or
dec
jecxz
in
hlt
pop
out
aaa
lods
pop
ret
or
push
xor
inc
or
add
or
push
mov
cmp
xchg
sbb
int
add
jmp
test
adc
div
sbb
pop
sbb
push
mov
popa
adc
test
xchg
add
movsl
sub
push
adc
fsubrl
push
int
loopne
cmpsb
mov
mov
sub
jecxz
add
mov
nop
xor
xor
add
inc
push
pusha
cmp
fs
adc
dec
or
xor
cmpl
pop
sub
cld
fisubrl
mov
mov
cmp
mov
fnstcw
jle
cmpl
jmp
sbb
scas
cltd
mov
sbb
cltd
negl
cmp
insb
inc
dec
xor
cli
mov
mov
lea
cmp
mov
add
dec
inc
test
shrl
adc
gs
inc
enter
add
or
fcmovu
test
nop
sub
jne
add
pop
pop
sub
or
push
jae
aas
aaa
inc
mov
push
andb
mov
inc
add
adc
mov
mov
pushl
sub
push
push
cmp
shlb
sub
ja
sbb
fstps
lods
fdivl
imul
repnz
insb
sub
mov
fcoms
pop
fwait
mov
fcmovnu
sbb
popf
jg
fwait
mov
mov
mov
imul
mov
sub
into
pop
rclb
add
adc
mov
xchg
rcrl
mov
jo
jl
add
sahf
lgs
jo
push
pop
hlt
sbb
mov
adc
mov
lea
pop
add
outsb
pusha
mov
fwait
adc
xchg
add
jle
jne
sbb
jne
cmp
lahf
gs
cmp
xchg
pop
adc
inc
arpl
sub
dec
das
add
add
push
mov
push
lea
jl
lods
mov
sbb
mov
ljmp
adc
jne
adc
xchg
pop
rolb
and
or
push
fdivs
or
add
fsubl
inc
xchg
or
lods
fcoms
sbb
or
lret
jge
jmp
imul
xchg
xchg
dec
cmp
or
mov
pop
jl
in
push
xchg
leave
push
mov
add
ret
mov
faddl
xor
sub
push
shrd
in
add
addr16
dec
xor
ret
aaa
inc
adc
inc
lret
gs
dec
sub
jecxz
add
ss
adc
push
fidivrs
push
cli
jbe
ss
jmp
push
leave
ret
push
mov
jmp
das
inc
testl
inc
cmp
cli
sub
inc
int3
adc
push
cmp
add
add
adc
data16
cmpsb
popa
add
in
add
or
sbb
clc
ss
cmp
cmpb
push
sbb
in
add
pop
push
ret
push
pop
jbe
es
jno
jecxz
cmpsl
mov
sub
pusha
cmp
pop
add
or
inc
fcmovnbe
jmp
sbb
lret
hlt
xchg
fcomps
nop
mov
bnd
lcall
testb
push
test
dec
cwtl
and
pusha
add
jecxz
into
repz
movsb
std
imul
or
mull
lods
fmull
pop
pop
ret
adc
lock
pop
jmp
rorb
imul
sarl
jno
xlat
add
add
inc
push
xchg
in
or
add
test
dec
movsl
aas
ss
ror
push
inc
sub
lods
and
pop
push
mov
andl
add
daa
stos
jo
pop
or
xchg
inc
sahf
or
or
fcomip
inc
add
outsb
sub
mov
int
aam
jno
popa
es
stos
xlat
xchg
test
mov
jns
call
lds
inc
flds
jb
out
cmpsl
or
push
and
adc
sub
pop
or
test
aam
dec
and
movups
sub
sbb
inc
mov
popa
mov
push
sbb
or
mov
xor
xor
push
jne
mov
or
sbb
pop
js
push
mov
mov
adc
inc
push
idivl
push
cmp
sbb
mov
lods
rcrb
ret
sub
dec
in
sub
push
mov
push
das
popf
bound
scas
inc
imul
cmpl
fimull
daa
mov
push
sti
pop
push
mov
cmp
push
xor
jmp
fsts
push
adc
andb
push
xchg
pop
pop
sbb
jecxz
xchg
dec
add
mov
pop
adc
insb
es
push
and
mov
add
jb
mov
nop
add
cmp
xchg
dec
adc
sbb
cmp
scas
mov
mov
cld
and
pusha
adcb
fs
add
sub
ffree
cmpsb
pop
nop
mull
inc
cmp
jo
and
cmp
jle
push
jb
mov
inc
movzwl
inc
cmp
in
mov
loope
mov
dec
rcrl
cmp
aaa
cmp
adc
loop
jo
push
mov
add
dec
add
pop
mov
cld
movsb
sbb
jne
repz
add
clc
mov
mov
arpl
shlb
dec
int
dec
insb
mov
and
pop
push
insb
mov
rorl
pop
fmull
aam
dec
nop
loopne
add
rolb
cmp
push
sahf
imul
add
jno
ljmp
testb
jne
addl
mov
mov
scas
outsl
add
out
push
inc
xchg
ds
test
inc
sbb
jne
cmpsl
push
add
push
adc
in
jnp
pop
cli
call
xor
hlt
daa
adcl
cmp
and
mov
fldl
imul
je
push
and
sub
sub
cli
testb
je
cmp
mov
arpl
pop
ror
cmp
add
ret
sub
dec
rcrl
xchg
aam
adc
add
add
inc
mov
shrb
ror
push
mov
shr
and
dec
xchg
pusha
xchg
addb
lods
xor
jl
js
inc
dec
sbb
add
pop
mov
push
add
sub
fdivrl
adc
jae
dec
and
jo
out
data16
jmp
dec
sbb
faddp
mov
mov
int3
jg
lock
jne
jg
add
adcb
rol
or
xor
inc
mov
out
fisubrs
xor
pusha
dec
jo
and
or
scas
push
pop
pop
aam
std
xchg
xchg
inc
hlt
push
push
mov
mov
or
leave
or
inc
or
push
pusha
testb
push
xor
sar
fwait
lret
and
add
push
push
inc
xor
or
sub
pop
sub
push
hlt
cltd
outsb
or
loop
into
and
scas
rcrl
std
add
ror
outsl
scas
inc
lock
or
testb
or
scas
mov
cmp
sbb
icebp
jb
or
sbb
roll
add
inc
outsb
lock
cmpb
leave
jmp
pop
adc
push
sbb
pop
xchg
and
jne
adc
or
lods
sub
leave
pop
xor
scas
lret
into
jne
data16
sbbb
pop
jl
out
adc
stc
loope
add
xor
mov
jmp
push
dec
pop
pop
xor
jmp
sub
mov
notb
mov
pusha
daa
jmp
jo
icebp
ds
icebp
stc
stos
aas
sub
cmp
jne
push
imul
jge
xorl
lods
bound
dec
cwtl
fwait
call
xor
shll
les
jae
popf
test
dec
push
in
sub
xchg
fldcw
leave
and
cmp
add
shlb
sbb
mov
cmp
xor
adc
jb
jmp
sahf
in
sti
jnp
lea
ja
mov
mov
pop
sbbl
or
lock
mov
push
mov
pop
jmp
and
add
mov
mov
roll
cmp
push
pop
fwait
sbbb
insl
add
inc
push
and
xlat
adcb
and
lcall
add
mov
sbb
and
jmp
int
or
inc
cmpsb
rorb
sub
pop
lahf
mov
and
mov
nop
sub
jne
movsb
push
xlat
cmp
push
nop
mov
cmp
mov
loopne
aam
adc
or
adc
jo
ljmp
rcr
test
add
xor
or
jbe
push
fwait
cld
pusha
dec
adc
mov
push
add
adc
adc
in
or
sub
std
add
enter
cmp
insl
loopne
cli
pusha
sar
imul
jle
es
adc
fidivs
movsb
adc
mov
repnz
clc
fistpl
daa
push
or
push
lock
or
popf
jmp
xchg
mov
sbb
adc
add
jne
stc
add
scas
jl
es
les
repnz
pop
inc
add
inc
xorl
or
xorl
inc
mov
sub
loopne
cmp
mov
sub
push
mov
inc
mov
inc
mov
inc
push
or
insb
mov
adc
push
fs
and
pop
cmp
push
pop
popa
lods
xor
jp
stos
sahf
dec
dec
cmp
xchg
and
loopne
ljmp
fadds
pop
xchg
aam
or
shr
inc
add
push
xchg
jmp
inc
dec
xchg
and
add
cwtl
data16
pop
or
mov
mov
nop
xchg
aaa
in
insl
cmp
add
inc
cmp
je
je
aaa
cmpsb
je
adcl
dec
hlt
pop
js,pt
jb
push
fisubrs
fbld
jbe
insb
out
push
ja
lds
dec
push
test
outsl
ds
jae
mov
popa
xor
add
add
mov
pmulhuw
adc
inc
je
sar
loopne
fdivrs
xor
shll
adc
push
or
inc
sbb
or
jo
scas
icebp
xchg
adc
mov
test
push
js
xorl
daa
ficoms
sub
ret
push
add
lds
xchg
out
add
call
add
popa
push
push
dec
jnp
shlb
push
adc
cmp
gs
inc
push
adc
adc
push
and
jmp
in
es
pushf
cs
mov
lods
sub
or
scas
pop
xchg
mov
dec
cmpsl
cld
xor
xchg
mov
jbe
test
push
fmuls
sbb
lods
push
gs
cs
mov
mov
gs
adc
movsb
jbe
or
cmp
les
mov
inc
inc
cwtl
lock
xchg
inc
cmp
in
pop
clc
cmpl
lahf
ja
shll
test
daa
add
push
orb
js
lret
je
stos
cmp
pop
mov
jge
pop
add
pop
and
loop
sbb
push
cmp
push
bound
aas
or
jno
inc
jb
lcall
and
repnz
ret
rol
push
jg
js
add
jne
mov
sbb
push
push
imul
dec
lock
sbb
adc
adc
movsl
or
nop
and
jns
or
pop
je
jmp
or
push
je
cs
push
dec
push
or
and
mov
cs
sbb
xchg
push
push
mov
int
loopne
cmp
push
inc
dec
icebp
popa
push
cwtl
jne
and
inc
fucomi
cmp
xor
and
pop
icebp
jnp
mov
bound
dec
mov
and
sub
aaa
mov
scas
pushf
cmp
xchg
mov
fstl
leave
pop
sbb
outsb
dec
inc
pop
pop
and
push
sbb
and
cmpb
bound
and
and
inc
adc
pop
or
inc
cli
mov
or
dec
and
sub
mov
sbb
inc
mov
rolb
push
dec
popf
movsl
xor
leave
sbb
sbb
and
sub
jmp
popa
arpl
inc
cld
dec
aad
mov
sub
sbb
pushf
push
jge
cmp
push
push
push
or
or
adc
insl
or
mov
push
dec
add
adc
repnz
sbb
pop
jbe
xor
test
daa
sbb
cmp
add
mov
jne
and
cs
fisubrl
sarb
les
pop
cmp
je
orl
xchg
push
rol
jno
add
fcoms
rorl
stos
les
sbb
adc
shll
and
addl
out
je
movl
test
xrelease
cltd
test
lock
jle
rcrb
js
xor
call
add
jne
sub
aaa
movsb
js
mov
add
sub
dec
inc
dec
xchg
sbb
mov
pop
jmp
sbbb
adc
or
or
inc
popa
jae
cmp
add
and
clc
jg
sti
mov
push
dec
test
movd
movaps
sbb
jae
xor
jle
xor
add
lret
je
mov
adc
repz
or
inc
mov
cmp
xchg
ret
mov
cmpl
mov
neg
icebp
lret
add
adc
push
add
adc
fldl
or
add
fadd
roll
add
dec
xorl
enter
push
cmp
mov
sbb
sbb
xchg
cwtl
out
xor
sub
sbb
jbe
jge
clc
ja
scas
pushf
sbb
adc
or
shll
and
mov
decl
xchg
adc
pop
hlt
xor
xchg
mov
mov
loop
xchg
pop
push
push
ret
jge
mov
cmpsl
adc
mov
mov
cmp
pop
and
xor
dec
fisttps
mov
clc
arpl
dec
cwtl
ja
xor
mov
icebp
lcall
ss
js
push
and
jbe
inc
xorl
and
movsb
add
daa
mov
rclb
adc
clc
sub
idivl
mov
and
or
xchg
sbb
mov
mov
cs
mov
cmp
js
pop
dec
mov
inc
inc
loopne
push
mov
call
mov
jmp
mov
push
add
fisttpl
jne
add
push
and
mov
es
or
or
pop
xor
or
out
adc
daa
cmc
mov
sbb
sbb
adc
xchg
mov
mov
mov
push
fmuls
or
jne
popf
fadds
mov
pop
inc
ds
cli
add
stc
xlat
inc
aam
test
iret
hlt
jp
push
fcomi
arpl
jp
shrb
mov
gs
jmp
push
xchg
ret
adc
mov
mov
sarb
add
push
xchg
gs
inc
inc
add
mov
mov
mov
adc
adc
mov
push
inc
cmp
push
xor
and
pop
inc
inc
mov
mov
inc
inc
xor
mov
adc
roll
inc
jmp
nop
in
das
clc
test
mov
fcomps
jge
pop
inc
inc
cmp
cmp
mov
stos
fwait
movsb
pop
cli
aad
lret
adc
fwait
arpl
jns
sbb
adc
cmp
mov
adc
imul
pop
or
inc
add
push
rorb
sub
das
sbb
cli
push
out
add
pop
jecxz
stos
subb
addr16
into
repz
or
imul
inc
lea
hlt
cmp
call
jne
mov
fnop
cmp
sarl
sub
not
lcall
shlb
daa
hlt
mov
push
clc
or
inc
dec
shl
pop
cmp
mov
mov
imul
rol
inc
inc
cmp
pop
mov
data16
lret
jne
sbb
shl
pop
add
jmp
inc
loopne
push
loope
pop
shlb
dec
add
add
jle
add
jo
test
cmp
and
sbb
sbb
inc
or
mov
lret
out
testb
pop
sbb
sub
orl
cmp
cmp
out
cmp
push
lock
aad
jns
add
or
shlb
or
dec
test
xor
fiaddl
inc
push
sar
scas
or
stos
mov
add
mov
jbe
mov
lods
pop
pop
push
jo
or
adc
jmp
cmp
xorl
test
fstl
test
mov
mov
data16
jne
idivb
jecxz
xchg
add
xchg
cs
xor
mov
ret
outsl
or
cmpsb
push
in
addb
add
or
adcb
push
imul
scas
add
push
push
sub
jmp
inc
divb
les
inc
pop
xor
xor
sarb
jo
adc
mov
hlt
sub
xchg
test
jl
jg
lock
xor
outsl
inc
xchg
jbe
jle
rcl
and
xlat
cmp
push
or
push
int3
std
or
inc
mov
push
xor
pop
div
inc
push
orb
jae
or
jno
jle
imul
sub
pop
adc
mov
aas
enter
out
adc
fidivs
sub
or
mov
adc
xchg
push
lods
add
ss
incl
jb
pop
pop
xor
xor
add
ljmp
push
fldcw
fwait
jle
push
jae
xchg
cmpsl
aad
push
popf
add
sbb
fildll
pop
incl
roll
pop
loope
adc
subb
xor
lret
lods
aam
ss
pusha
jb
jg
fs
mov
xadd
fisubl
or
in
iret
in
mov
cmp
sbb
mov
mov
pop
mov
repz
clc
ss
adc
add
inc
push
mov
pop
test
fadds
lods
jl
push
fimull
movsl
pop
ficoms
scas
sbbl
xor
and
push
les
rorb
std
or
push
xor
mov
xchg
mov
je
mov
popf
leave
pop
sub
clc
mov
jo
or
inc
loopne
out
add
cmp
stos
movsl
out
divl
xor
dec
pushl
mov
lock
push
jp
xchg
test
sub
out
incb
push
cmpsb
fmull
xor
adc
adc
lahf
push
pop
adc
negl
adc
or
pop
rcrl
sub
lds
dec
mov
xlat
mov
mov
sub
pop
out
and
pop
sbb
add
jbe
or
xchg
xchg
frstor
in
stos
or
pop
pusha
icebp
out
and
dec
add
rcr
pop
pop
xor
add
xor
jo
hlt
pop
cmp
sub
push
data16
lods
mov
testb
inc
rcrb
test
mov
mov
xor
stos
orb
cmp
dec
jmp
or
fs
lods
mov
pushf
ds
pop
mov
push
sbb
push
in
add
or
scas
or
push
push
push
jno
lock
in
cmpsb
cld
in
dec
push
mov
add
mov
inc
push
or
pusha
xchg
test
hlt
adc
es
push
and
xlat
or
and
cmp
ret
pop
pop
inc
dec
jb
movsl
fistpl
in
shlb
inc
or
inc
mov
push
sbb
fdivs
or
mov
lds
std
jl
push
lret
sub
pop
das
inc
test
pop
cmp
addr16
push
add
cmc
and
mov
push
ljmp
fisttpll
add
je
push
jbe
mov
xchg
js
call
add
shl
cmpl
push
aam
push
fidivrl
outsl
icebp
nop
outsl
dec
push
and
test
xor
imul
movsl
mov
mov
or
or
mov
sbb
inc
cs
add
sub
push
inc
jns
sbb
loope
dec
enter
push
sbb
es
test
rcr
and
mov
popa
add
pushf
roll
push
xor
sbb
fcoml
stos
cmp
cmp
sub
fisubl
shrb
mov
jae
add
and
mov
pusha
add
pop
xchg
popf
add
divl
jo
movsb
daa
fcoms
fmul
jp
sbb
in
ret
int
cwtl
xchg
pusha
mov
test
in
jo
xor
xor
xor
push
mov
sbb
repz
push
lock
cs
lea
repz
imul
jo
push
pop
add
mov
iret
add
daa
add
sbb
repz
jbe
mov
add
cmp
enter
jle
add
ftst
add
add
push
nop
addr16
push
xchg
pop
test
pop
jb
or
iret
movsl
or
or
add
mov
or
mov
iret
or
pop
or
adc
or
add
in
repnz
or
add
cmp
or
adcl
push
rcrb
rsqrtps
adc
pusha
adc
add
adc
adc
jns
seto
out
adc
xchg
cmpsb
repnz
add
adc
in
jns
adc
adc
sbb
js
push
push
enter
push
pop
pop
ja
cs
xor
sbb
lcall
sbb
and
in
call
sbb
sbb
sbb
sbb
add
je
pop
sbb
iret
sub
dec
add
cmp
and
push
cmpl
pop
test
cli
jg
and
ret
sub
cmp
push
sti
and
inc
cmp
add
cmp
xchg
mov
and
ret
add
hlt
popa
mov
cmp
cmp
in
in
jno
repnz
sub
rol
lea
fdivp
xor
aad
cmp
push
nop
out
mov
mov
jns
out
push
xor
mov
aaa
jb
je
call
and
popf
dec
cwtl
jmp
add
mov
ljmp
sbb
out
in
cmp
xorl
cltd
mov
mov
out
xor
cmp
jge
lcall
lock
push
nop
inc
lock
addr16
jns
pslld
seto
out
std
repz
cmpsb
repnz
std
hlt
hlt
roll
fdivs
or
fwait
mov
jnp
inc
jg
idivb
sbb
pop
idivl
dec
push
jns
cmp
clc
clc
mov
cltd
adc
inc
stc
enter
lock
cli
cli
and
and
iret
sti
sbb
fcoml
cld
cld
cld
je
cld
stos
xchg
mov
xor
sbb
push
adc
jns
push
ret
xchg
push
mov
test
hlt
sub
add
push
bound
fsubl
pop
cmpsb
sbb
es
out
repnz
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cltd
outsb
call
dec
sti
sub
imul
jmp
jne
rolb
cltd
in
repnz
add
sbb
pop
sbb
add
movsb
out
out
cltd
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmpsb
repz
sarl
push
stc
les
scas
dec
push
cmp
div
negl
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cltd
mov
push
nop
cld
orl
jno
mov
and
sub
push
sub
sub
mov
les
rcr
mul
pop
pop
repnz
imull
bound
mul
sbb
xor
cltd
out
and
pop
inc
mull
imull
sti
imul
cmp
test
inc
repnz
mov
xor
xchg
negb
out
out
jno
and
and
adc
xchg
pop
add
sbb
repnz
pop
lret
and
and
cmc
pop
pop
lcall
negb
cmpb
and
pop
add
clc
clc
mov
jmp
jecxz
stc
popa
cmp
mov
and
pop
rcll
hlt
sbb
das
pushw
data16
test
idivl
jo
rolb
pusha
adc
adc
loope
xor
pop
loope
push
inc
repnz
loop
scas
repz
mov
mov
test
dec
push
in
repz
xlat
jb
repz
mov
mov
repnz
jmp
in
mov
xchg
repnz
jo
sbb
dec
in
in
cmc
adc
add
repnz
mov
movsl
mov
icebp
icebp
js
in
rorb
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
add
ljmp
ret
push
stc
out
ret
jb
mov
push
add
and
enter
stos
add
and
dec
add
push
jnp
add
sub
lods
loopne
jne
or
fs
orb
add
sahf
and
add
mov
pop
decl
jp
add
and
pop
inc
add
fldt
push
popa
daa
subb
push
push
and
jns
int
repz
inc
fldcw
fs
sbb
aam
repz
cmpsl
cmp
and
test
mov
xchg
and
sub
cli
pop
repz
imul
mov
fcomip
push
xor
add
roll
mov
add
ds
jne
add
push
icebp
or
jle
rolb
adc
ret
inc
add
nop
inc
cld
jb
test
mov
cmp
push
dec
stos
jo
mov
cmp
adc
adc
or
rol
pop
sub
mov
push
add
inc
shr
hlt
rcll
jns
int
rorl
enter
dec
and
mov
push
dec
add
jmp
shlb
nop
add
ss
mov
nop
mov
pop
les
decl
sbb
jo
fucomip
fcmovnu
inc
arpl
fmuls
fmuls
and
adc
repz
and
inc
sub
fiadds
or
xor
cmp
cld
inc
sbb
mov
ret
incl
stos
shlb
cmp
cmp
or
or
aas
adc
push
cmpl
push
ds
scas
or
subb
adc
add
mov
add
lock
enter
lahf
outsb
add
or
sub
xchg
fsincos
je
rep
mov
dec
ljmp
mov
adcl
push
loopne
lods
adc
lret
mov
pop
add
fiaddl
es
in
paddusb
xchg
adc
pop
imul
and
inc
pop
lock
add
add
mov
mov
insl
mov
adc
aaa
mov
inc
jb
pop
ja
or
call
sub
mov
lock
inc
inc
inc
out
cmp
out
dec
add
jbe
xchg
in
sub
inc
push
inc
and
mov
xchg
hlt
inc
push
mov
sbb
jno
jle
sbb
and
push
or
cmpsb
or
add
loop
push
sti
push
shll
add
fmulp
push
or
inc
inc
pop
cmp
enter
test
dec
orps
pop
stos
jnp
test
or
add
xor
sub
adc
enterw
inc
inc
pop
or
and
or
or
jl
ror
leave
or
lods
push
mov
push
lea
lahf
test
pop
adc
jbe
into
pop
fwait
inc
mov
test
xlat
pushl
lea
cmp
jne
orl
sbbb
jne
sub
mov
out
jo
xchg
add
clc
cmpsl
in
and
cmp
push
mov
in
lea
xor
pop
mov
fistpll
and
or
fnstsw
adc
dec
add
add
lds
sbb
dec
adc
cmpsb
xor
or
div
iret
sbbb
xor
sbb
je
mov
lret
sub
cmp
cs
in
cld
add
jae
push
fldt
movsb
xor
sbb
push
imul
aam
test
js
out
add
aam
popa
mov
prefetchw
shrl
cmc
mov
mov
sbb
addb
shlb
movsl
or
ja
lret
mov
es
mulb
or
clc
insl
mov
lea
repnz
sbb
mov
or
add
cmp
adc
sub
push
or
xchg
sbb
mov
mov
dec
movsb
adcl
lock
xchg
pop
xor
jmp
cltd
and
sub
dec
popa
bound
push
popa
dec
jo
std
cli
cld
fisttpl
pop
cmp
and
push
cmp
jne
jnp
sub
outsb
pop
sbb
mul
out
push
mov
push
cld
jne
mov
push
cmp
jne
out
outsb
sahf
es
jne
call
test
popa
insl
ljmp
sbb
jmp
adc
out
jns
jmp
std
std
jmp
cld
cmp
sub
test
mov
inc
frstor
adc
lret
xchg
sbb
add
fdivs
repnz
mov
lds
lock
movzbl
insl
adc
cs
mov
cmpsb
cmp
pop
leave
push
mov
adc
or
mov
aad
test
inc
enter
inc
sub
and
add
pop
mov
adc
cmp
xorb
or
sahf
std
cmp
xchg
and
adc
jae
adc
xor
push
test
sbb
fimull
pusha
lods
add
or
dec
jne
jo
ret
test
shl
xor
sub
sbb
adc
pop
mov
je
push
jmp
push
cmp
adc
jne
inc
shr
or
mov
push
jmp
sbb
or
dec
outsb
out
jns
mov
xchg
add
pop
dec
mov
jbe
outsb
mov
addb
pop
outsb
movb
sbb
nop
cmp
push
roll
adc
and
les
add
ss
cmp
dec
cmp
imul
or
dec
stos
dec
inc
xchg
rcl
add
or
jmp
lret
clc
and
add
mov
call
lods
nop
ds
stc
imul
stos
add
or
ret
testb
jmp
sahf
mov
dec
and
sub
or
loopne
mov
fimuls
dec
jne
cmpsl
rcl
add
fdivrl
bound
ds
add
xor
push
iret
lea
sbb
or
and
xor
das
lahf
arpl
out
xor
lock
movsb
push
lret
add
cmp
jbe
cmp
cmp
faddl
mov
mov
inc
fistl
pop
and
cmovs
scas
push
cli
add
adc
clc
pop
inc
mov
or
rep
pushl
dec
rolb
inc
mov
cmp
or
data16
fwait
ss
xor
and
mov
cmp
or
and
subl
add
add
adc
pop
pusha
mov
add
movl
cmpsb
inc
add
add
inc
sub
lock
lahf
out
fsubrp
push
loopne
ror
mov
repz
mov
mov
call
cmp
repz
hlt
clc
test
cmp
clc
cld
pop
lea
sub
add
fldcw
sub
push
push
cmp
mov
or
push
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
or
std
cld
out
mov
neg
xchg
mov
pusha
xchg
daa
stc
out
in
xchg
xchg
sub
call
xchg
fiaddl
jl
mov
or
sahf
inc
cs
push
add
dec
dec
addr16
add
je
add
push
je
sahf
out
outsl
fs
push
je
test
cmpsl
cmp
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
xor
add
rorb
push
push
xchg
mov
fsubr
cmp
push
add
outsl
dec
add
add
sub
ja
clc
aam
mov
bnd
push
xor
mov
cmp
decl
jne,pn
pop
pop
pop
cmpl
jg
mov
cmpl
aaa
jbe
push
cltd
pop
idiv
add
mov
pusha
or
pusha
push
add
cli
ja
fdivl
dec
mov
mov
xor
in
dec
aam
bnd
cmp
jae
cmp
dec
jo
pop
mov
mov
jbe
mov
dec
es
les
pop
sub
mov
push
dec
adc
inc
xor
or
mov
daa
test
inc
mov
lret
pop
sub
test
jge
mov
sbb
dec
dec
nop
dec
and
sub
mov
jne
xchg
insb
adc
das
jecxz
jbe
xor
pop
decb
fistps
orb
push
mov
inc
xor
mov
cmp
das
sbb
adc
sbb
add
enter
jl
add
in
push
loopne
ds
pop
push
push
pop
add
loopne
dec
dec
adc
lcall
jp
fbstp
dec
sti
push
adc
mov
xor
inc
mov
stos
mov
mov
mov
mov
je
mov
sub
insl
or
aas
jge
push
ret
xchg
ljmp
cltd
pop
idiv
cmp
inc
lock
xor
mull
push
xchg
inc
out
cmp
add
mov
pop
jmp
or
jne
hlt
mov
push
aas
jns
fs
mov
rolb
adc
push
sar
imul
add
jmp
jl
mov
sbb
call
or
dec
lds
je
insb
sub
sbb
loopne
imul
jae
sbb
or
add
out
add
jns
adc
cmp
xchg
jl
mov
incl
pop
sti
cmp
dec
pop
sub
xchg
test
test
cwtl
jae
and
add
push
mov
xchg
mov
push
mov
js
ja
les
jmp
jge
pop
je
sbb
popl
xor
jl
fs
mov
sti
pushl
jg
adc
outsl
sbb
int
int3
dec
mov
in
pop
je
dec
inc
pop
jp
inc
stos
jne
mov
jo
mov
mov
mov
dec
and
adc
push
js
pop
cmp
pop
popl
fstl
or
and
fcmovnb
dec
pop
xchg
or
inc
mov
push
aaa
orl
adc
push
mov
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
jb
lds
sbb
pop
inc
add
loop
and
fldt
ret
push
je
mov
cmpb
sbb
jecxz
mov
mov
mov
and
jge
sub
in
iret
xchg
push
lock
cmp
push
adc
data16
jns
mov
adc
or
out
push
add
call
aaa
hlt
fistpl
out
sbb
and
roll
cmp
xchg
rorb
xorl
pop
sbb
pop
lock
sub
mov
movsb
add
js
loop
adc
push
push
fwait
pop
test
push
sbb
add
push
jl
inc
sti
inc
jg
jbe
lods
adc
gs
mov
adc
bound
add
loopne
clc
mov
inc
inc
cmp
je
xchg
mov
mov
sbb
rclb
adc
add
aam
pop
jle
dec
je
and
mov
or
push
sub
sbb
cmpsb
adc
shrb
mov
incl
call
scas
xchg
into
pusha
push
mov
push
inc
sbb
xor
push
sbb
loope
inc
xor
neg
adc
or
bound
insl
mov
sbb
mov
or
or
xchg
dec
push
mov
int3
js
lcall
in
sub
mov
adcb
mov
jo
bsf
xchg
adc
test
cmpsl
sbb
and
cmp
je
mov
add
mov
adc
add
shll
xor
or
loopne
inc
roll
push
pop
inc
adcb
rol
dec
push
imulb
add
and
cli
frstor
in
ja
sbb
dec
movsb
jb
shrl
lret
jns
js
lret
xchg
addr16
sbb
mov
sub
fiaddl
lahf
dec
mov
add
cmp
push
rcl
lea
popa
bound
inc
shl
add
jmp
dec
or
jl
push
in
and
jmp
das
dec
jmp
aam
je
dec
sbb
call
inc
jno
inc
mov
and
and
cmpsl
rcll
in
sbb
sbb
iret
add
push
inc
sbb
xchg
jmp
shrb
mov
ret
in
cmp
loopne
int3
adc
and
cmp
mov
fbld
jns
and
push
inc
sbb
pop
stos
es
cmp
inc
sbb
sub
push
mov
or
out
xor
sbb
push
sbb
das
cmp
ja
or
xor
incb
inc
inc
call
scas
lcall
outsl
inc
hlt
jge
ja,pn
or
out
sub
movsb
cltd
pop
stos
call
bound
shlb
adc
and
shl
out
jmp
ja
inc
jmp
aas
xor
arpl
cli
xor
sub
adc
pop
mov
mov
mov
and
add
or
addr16
jne
mov
xchg
addr16
pop
fldz
mov
rcl
fidivs
add
push
and
mov
xchg
fnstcw
scas
sbb
adc
mov
ja
mov
fs
insb
push
xchg
xor
pushf
push
or
ret
jbe
stc
and
dec
cld
inc
ljmp
sub
lock
neg
mov
enter
cmp
add
add
cli
add
jo
push
cld
jb
mov
jb
aaa
mov
sbb
mov
dec
mov
inc
rclb
ret
push
mov
xor
cmp
push
xchg
sbb
jmp
arpl
cmp
jne
push
out
fistpll
xor
push
bound
pop
cmpl
sbb
adc
pop
jp
adc
cmp
cwtl
adcb
mov
sbb
and
cmp
jg
add
or
dec
jge
js
std
cmp
adc
add
imul
cmpl
test
or
cmpsl
shr
fbstp
mov
fdiv
and
adc
jle
test
or
and
cmpsb
xchg
xchg
add
pop
pop
iret
add
pop
test
les
adc
es
jo
jecxz
sub
outsl
test
aas
add
push
mov
sub
and
adc
mov
and
popa
movsb
jno
pop
and
push
pusha
loope
xchg
mov
inc
inc
data16
clc
dec
xor
add
xor
and
inc
nop
sub
div
lea
push
adc
push
pop
dec
ss
mov
inc
clc
push
or
fldenv
inc
js
lret
mov
mov
and
sbb
or
es
xor
and
dec
pop
push
fdivs
or
inc
imul
inc
or
pop
int3
adc
pop
and
das
int3
jmp
lods
add
pop
in
fsubs
jae
mov
xchg
pushw
popa
adc
aas
movsb
cltd
adcl
jb
and
cld
fcomps
fdivrs
sarb
sbb
cmp
add
loope
cmpsb
mov
xor
mov
or
loopne
and
add
add
add
ss
pop
mov
add
xchg
leave
sub
add
inc
mov
add
clc
add
cmc
add
add
roll
push
add
sbb
or
xlat
push
popa
scas
add
adc
lahf
push
adc
adc
in
cmp
aam
push
je
pushl
clc
jmp
push
lea
loopne
cwtl
testb
push
add
pushf
mov
ret
fistl
pop
rcrl
push
and
xor
pop
push
cmpsb
jae
lahf
incb
jne
aam
pushf
mov
jne
jg
push
popa
and
add
add
xor
pop
push
imul
mov
push
mov
or
fs
dec
notb
mov
mov
adc
mov
sbbb
fcomps
fiadds
dec
xchg
mov
sbb
jecxz
aas
push
call
add
and
daa
or
xchg
test
ljmp
add
mov
and
lahf
mov
jmp
sahf
cmp
jne
fdivr
outsb
mov
jmp
push
jae
or
and
out
xchg
das
and
daa
xor
ficompl
sarl
rorl
sub
scas
or
add
or
cmp
inc
push
lods
lret
ja
test
push
rolb
sub
fnstcw
xor
stc
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
je
lcall
mov
cmpsl
inc
mov
es
ja
rolb
cmp
lods
add
xor
sarb
add
repz
push
mov
or
or
sarl
cltd
dec
lds
push
push
popf
out
adc
fiadds
loope
inc
push
xor
sub
xor
mulb
pop
or
cmp
cld
mov
or
push
or
cmp
test
dec
adc
adc
bound
xorb
jno
add
or
loope
or
jmp
mov
sub
mov
pop
add
testl
or
jl
icebp
fbld
imul
scas
jmp
outsl
add
sti
pop
mov
add
hlt
mov
and
mov
popf
out
xlat
sub
inc
xchg
xchg
ja
out
push
or
sub
sbb
sbb
cmp
or
cld
into
and
neg
push
repnz
push
imull
and
sub
push
cmp
push
push
cld
jne
add
test
cwtl
cmpb
jecxz
fcmovne
icebp
jg
push
orb
mov
je
imulb
xchg
adc
push
loopne
rol
into
adc
sub
mov
mov
lahf
lods
leave
sub
mov
sub
push
cmp
and
loop
lret
decb
roll
cmp
push
and
and
jmp
add
cwtl
inc
xchg
adc
aas
pop
pop
repnz
inc
or
int
adc
mov
jg
jecxz
shrb
ja
test
and
addb
jne
or
sbb
sub
ss
and
testl
mov
push
sub
xchg
mov
pop
pop
cmp
insb
push
cld
pop
inc
mov
jmp
es
mov
push
scas
adc
push
sub
mov
sarb
cmpsb
push
sub
aam
outsb
daa
pop
movsb
inc
cmp
std
jne
in
fisubl
jmp
sub
stos
inc
add
adc
les
sarb
ret
adc
push
pop
pop
inc
add
xor
adc
inc
sbb
push
mov
repz
movsb
jp
cmp
or
std
fidivl
push
jmp
adc
test
jg
and
and
ljmp
enter
cmp
les
cmp
jbe
jg
in
lea
mov
andl
inc
pop
leave
inc
xchg
jle
fadds
lea
xor
scas
adc
mov
aaa
jmp
mov
into
sub
and
fs
sti
sti
loopne
adc
or
lcall
jbe
inc
inc
inc
shrb
jb
shrl
inc
push
sbb
jge
jge
add
jb
mov
xor
adc
jb
rolb
push
cld
fistps
mov
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
ret
cmp
jl
sbb
mov
shr
jp
jo,pt
mov
inc
dec
jne
icebp
jnp
adc
movsb
mov
nop
add
mov
hlt
gs
push
jnp
test
xor
inc
lds
sbb
sub
movsb
dec
lahf
dec
loopne
adc
mov
pop
push
jp
mov
cld
pusha
and
mov
ret
out
mov
sbb
orb
inc
test
pop
xchg
sti
add
mov
jbe
inc
adc
cmp
mov
ss
add
push
pop
and
ljmp
repnz
and
fs
push
or
pop
flds
or
sbbl
sub
jmp
xor
add
mov
mov
add
scas
add
bound
ret
rolb
out
arpl
cmp
sbb
inc
cmc
test
xor
mov
es
push
jns
or
leave
cmpl
jnp
push
and
pop
movl
sub
dec
sub
js
mov
cmp
mov
pop
mov
mov
lock
mov
ds
gs
mov
and
mov
lahf
das
adc
mov
sub
out
push
int3
lret
and
rcrb
cwtl
rolb
mov
mov
jo
aam
inc
jbe
cwtl
sub
lret
js
push
out
jle
cmp
push
push
cmpl
add
js
into
or
cmp
cmp
sub
sahf
inc
add
pop
decl
push
push
loopne
jne
sbb
arpl
or
lock
fs
push
movsb
mov
adc
mov
aaa
xchg
out
or
loopne
repz
jo
sahf
dec
sbb
adc
xor
dec
xor
in
inc
lock
adc
dec
xor
je
push
insl
dec
sub
les
pop
mov
adc
stos
rcrb
pop
daa
sub
fsub
pop
jbe
test
nop
dec
lock
dec
test
jle
sbb
jo
mov
fs
cmp
fsubrs
adc
and
push
xchg
sbb
jmp
sbb
loopne
push
ficomps
int
push
pop
mov
mov
mov
sub
push
cmp
rol
subb
daa
mov
dec
add
dec
sbb
cmp
push
add
add
ljmp
cld
add
fwait
xchg
jne
cs
mov
add
call
sub
arpl
movsb
icebp
inc
rorl
add
mov
push
push
push
mov
jo
xor
mov
ret
inc
push
enter
pop
mov
imul
call
leave
cs
adc
and
xor
faddp
cmp
lret
inc
push
cld
sbb
jbe
jo
lea
cmp
mov
mov
sbb
push
cmp
inc
imul
jae
sub
insb
jg
dec
push
pusha
xor
fnstcw
outsl
add
sbb
xchg
inc
inc
sub
cld
mov
add
inc
pop
xor
xchg
xchg
push
movsb
pushf
xchg
shrl
dec
aas
dec
insl
dec
mov
hlt
orl
jmp
xor
not
aad
cmpsb
out
push
cltd
iret
adc
sub
je
ss
arpl
data16
imul
sbb
cmp
add
nop
inc
inc
dec
sub
and
mov
pop
jle
nop
push
rorl
jmp
inc
dec
dec
add
jbe
and
pop
cmp
je
outsb
sub
or
mov
mov
or
mov
and
inc
or
adc
pop
add
mov
fisubrl
bt
sbb
cmp
cmp
mov
xchg
cmpsb
cmp
or
mov
daa
test
cmpxchg
ja
orb
mov
rcl
mov
push
xor
push
inc
gs
lret
pop
pushf
cwtl
mov
pushf
loopne
jb
pop
jb
mov
push
xchg
push
shll
mov
and
add
xor
fwait
hlt
push
add
movsb
jp
inc
xchg
pop
jp
sub
andl
lret
inc
or
popf
insl
mov
das
mov
shrl
jle
sub
lret
dec
loopne
fcoml
out
iret
lret
mov
clc
or
lret
lret
popf
enter
shrb
jmp
fs
ficoml
add
sarl
pop
dec
dec
cld
adc
sub
sub
jecxz
aam
xchg
mov
mov
fcomps
lea
mov
sub
mov
nop
pop
xchg
ret
or
in
cld
and
mov
jge
push
mov
mov
fists
je
xchg
add
insb
or
jmp
int
or
mov
add
cmp
or
and
inc
inc
fs
arpl
aam
adc
stos
cmp
pop
call
arpl
les
arpl
or
push
mov
cwtl
popa
push
mov
add
fsts
nop
clc
mov
call
scas
mov
adc
jbe
and
nop
je
cwtl
push
nop
adc
pusha
gs
enter
mov
repz
jnp
sbb
and
xor
add
mov
inc
push
gs
clc
mov
or
mov
pop
dec
mov
insb
icebp
inc
ljmp
cmp
jo
sbb
or
arpl
sarl
cmp
js
or
das
pop
ffree
add
and
or
mov
ret
lret
jne
mov
pusha
roll
dec
cmp
jge
inc
jge
loopne
mov
jae
ffreep
mov
sub
cwtl
int3
mov
cmp
pop
mov
add
call
adc
mov
adc
pop
nop
or
repnz
inc
imul
and
and
fildll
jle
stos
idivl
aas
pop
inc
and
mov
mov
hlt
mov
add
sub
xlat
es
xor
daa
and
rol
shll
nop
lret
xchg
imul
xchg
sbb
test
cmpsl
pop
and
fidivl
sub
cmp
push
lret
xchg
push
push
jge
add
push
imul
sbb
dec
je
mov
xchg
and
jne
loope
and
adc
and
add
inc
lods
ja
stc
jbe
push
lcall
xor
lock
and
xchg
hlt
dec
or
xor
out
fldt
cmp
addb
and
into
loop
outsl
push
ja
loope
xchg
mov
mov
pop
lds
loope
outsb
push
sahf
mov
and
test
ja
enter
xor
call
sub
stc
sub
clc
push
xchg
push
out
mov
xor
mov
loopne
pusha
jmp
pop
mov
push
inc
and
dec
shll
in
shl
or
xor
fsubl
jl
push
mov
push
ljmp
mov
arpl
sbb
popa
xor
fwait
inc
or
inc
sbb
leave
loopne
mov
sub
xchg
jl
adc
push
mov
les
add
inc
test
xchg
rcrb
js
jp
dec
mov
filds
jns
inc
cmp
std
xor
pop
add
scas
lea
cmpsb
daa
add
inc
dec
daa
and
jmp
push
inc
arpl
mov
out
lret
lock
dec
shlb
pop
out
in
add
xchg
rolb
shrb
sbb
mov
jle
test
sbb
dec
xchg
xor
or
test
jno
popf
and
or
add
jp
or
aaa
jecxz
add
cwtl
cmp
movsl
inc
mov
xchg
push
cmp
imul
mov
adc
jbe
push
inc
inc
dec
or
push
push
pop
push
and
inc
outsl
cmp
rol
aad
pop
cmp
js
divl
in
and
in
inc
cmpsb
dec
add
lock
sub
dec
xchg
or
fldl
jle
push
inc
test
dec
jnp
jo
dec
ljmp
jns
data16
scas
lods
or
push
lcall
fsubrs
lock
loopne
add
mov
lcall
ret
lahf
rorb
int3
push
and
xorb
ja
and
push
push
xor
femms
lock
dec
jmp
push
sbb
dec
stos
xor
jo
xchg
add
mov
dec
jbe
orl
shrl
pop
jnp
mov
xchg
dec
pop
or
subb
add
jg
sbb
flds
insl
dec
inc
jg
jne
repnz
jmp
sbb
jnp
pop
divl
jns
outsl
cmpl
pop
dec
mov
pop
mov
and
xchg
adc
in
pop
inc
lea
sub
mov
in
mov
sbb
mov
jne
xor
cmp
rclb
pop
push
pop
mov
sti
lods
xor
push
or
leave
mov
leave
cmp
fbld
mov
cltd
push
lock
sahf
add
dec
test
mov
std
in
or
lea
jle
ja
mov
movsbl
insl
cmp
sbb
sbb
call
clc
sarb
cs
or
shl
js
inc
lea
cli
mov
fdivr
mul
pop
fsubs
lret
mov
dec
or
je
jo
jmp
sbb
in
jne
scas
pushf
pop
or
add
mov
icebp
sbb
push
int
nop
cli
xchg
sub
sub
cwtl
or
aam
sub
sarb
or
jl
add
sub
push
imul
and
lea
ja
movsl
fs
cmpsb
xor
hlt
inc
mov
movsl
hlt
mov
and
push
or
inc
into
pusha
xor
insb
je
lock
jp
adc
test
mov
dec
loope
pusha
sub
mov
xlat
sbb
pop
and
outsb
fcmovnu
jne
or
xor
mov
push
inc
inc
fimuls
xor
in
cwtl
nop
jmp
or
imul
pop
outsl
cmc
jne
and
dec
jmp
loope
xlat
loope
movsl
loope
movsb
mov
popa
test
jecxz
loope
sbb
pop
ret
cmp
movsb
dec
mov
sbb
pop
dec
dec
push
sbb
jle
inc
je
push
pop
out
pop
push
or
xchg
ds
mov
movsl
push
cld
cmp
lock
push
dec
nop
and
lods
inc
sub
test
dec
ret
xchg
and
jge
shll
jne
das
mov
adcl
jmp
ds
sbb
dec
and
xor
shll
push
loopne
ret
or
lahf
in
rcl
in
sub
push
inc
scas
roll
pop
push
mov
in
mov
mov
inc
inc
push
insl
cmp
push
mov
pushw
div
add
pushf
sub
pop
mov
fadds
je
lret
ss
xchg
cmp
lcall
inc
mov
fildll
jmp
mov
pushl
sarl
mov
mov
xor
test
les
mov
loop
mov
inc
sbb
pop
lret
dec
mov
pop
adc
fwait
daa
dec
fidivl
xchg
xchg
or
add
push
xor
lock
push
sbb
mov
outsb
jo
push
pop
fsqrt
add
add
stos
mov
addr16
sbb
das
push
outsb
je
test
repnz
fsubrs
je
adc
aas
add
sbb
test
mov
add
stos
movsb
movsb
shlb
jb
loopne
push
popf
addr16
lds
lock
push
and
sbb
mov
into
ret
testl
jne
mov
jmp
cmp
jecxz
popf
jmp
push
insl
cmpl
incl
mov
xor
int
gs
push
scas
or
mov
out
call
cld
adc
sti
push
cmc
mov
push
mov
lods
add
clc
or
mov
orb
stc
lcall
cmp
call
mov
cmpb
jne
pop
cmpsb
push
and
push
bound
cmp
adc
add
out
addr16
push
call
mov
inc
pop
inc
daa
add
adc
ds
sbb
data16
adc
sub
lret
mov
jne
push
cmp
je
adc
dec
xor
or
popa
mov
jmp
aaa
int3
je
cltd
ljmp
je
mov
pop
jl
jae
sub
neg
sti
lds
pop
fimull
jmp
inc
ds
mov
je
test
jmp
clc
or
jne
and
lea
fstps
or
inc
push
and
dec
rorl
stc
cmp
lds
xchg
clc
sahf
add
mov
dec
jmp
pop
pop
faddl
inc
cmp
bound
adc
adc
dec
shlb
add
movb
inc
jmp
bswap
mov
dec
or
loope
or
outsl
cmpsl
orl
in
clc
roll
mov
sub
int
inc
add
sub
sub
push
test
xor
sub
fcoml
and
aam
cltd
sub
sub
push
hlt
or
pop
shl
push
jp
and
xor
dec
pop
out
xor
cmp
jns
xor
sub
popf
mov
subl
dec
jno
add
fiadds
aaa
cmp
call
push
fistps
rcll
sbb
mov
or
out
xor
jmp
idivb
dec
rorl
sti
push
and
cmp
add
jnp
das
or
adc
icebp
sti
and
adc
movsl
daa
pop
mov
mov
mov
or
adc
movsb
cmp
shlb
addl
loop
push
nop
mov
xor
das
push
push
clc
outsl
inc
add
insl
push
or
imul
or
sbb
xchg
fidivl
test
push
xchg
rorb
and
stos
orb
add
push
inc
cmp
push
out
or
pop
int
idivb
cld
mov
push
push
lea
addr16
cmp
divps
gs
scas
leave
nop
sarl
jae
andl
xchg
mov
sbb
cmp
dec
rorl
lock
leave
imul
or
jl
push
pop
cltd
mov
jne
push
mov
out
dec
or
and
in
movsb
es
ret
mov
pop
in
and
popa
iret
xor
push
push
ss
outsb
push
xor
jne
sti
and
xor
jmp
push
fstl
or
movsb
jo
push
adc
inc
imul
test
or
mov
imul
arpl
mov
adc
mov
movsl
mov
dec
popa
outsb
add
ss
sub
mov
or
ret
adc
imul
add
jmp
and
or
adc
xor
fdivrl
xor
rclb
xchg
xor
pop
jns
cld
add
sub
and
add
mov
out
and
leave
rorl
sbb
cld
icebp
lahf
add
lea
mov
mov
outsb
es
push
cld
mov
pop
inc
dec
adc
lcall
cli
add
cmp
jbe
push
pop
lods
dec
or
outsl
mov
sub
jae
mov
shr
lea
not
movhlps
shll
pop
mov
lcall
jbe
dec
loopne
pushf
mov
mov
sub
mov
push
dec
pop
add
lods
lret
cmp
add
pop
and
xchg
push
push
loop
or
or
data16
mov
pop
clc
and
mov
aas
sub
and
sti
add
mov
dec
pop
cmp
fiadds
jp
mov
imul
push
jo
push
lock
xor
jno
dec
cmp
shr
not
and
fisubrl
addb
and
xor
cmp
jbe
dec
loopne
mov
xor
xor
pop
dec
add
mov
push
or
xchg
mov
or
adc
int3
jnp
popf
int3
inc
mov
push
cmp
dec
pusha
mov
push
ljmp
adc
push
push
jle
xchg
lods
push
lock
call
inc
dec
or
jmp
jns
jbe
dec
adc
cmp
jl
lea
mov
cld
cmpsb
xlat
imul
and
stos
pusha
push
je
sub
subb
mov
shl
add
scas
jp
push
call
aas
mov
imul
gs
push
or
xor
andl
inc
adc
dec
adc
add
and
pop
test
pushl
push
push
mov
sub
adc
hlt
repnz
adc
dec
cmp
dec
adc
jo
sbb
push
dec
jl
hlt
adc
push
xor
or
push
ret
mov
mov
inc
out
pop
adc
loopne
push
imul
inc
and
imul
adc
outsl
push
outsl
cmp
inc
mov
addl
xor
les
xor
pushf
mov
inc
inc
daa
stos
scas
loopne
mov
xor
or
adc
out
fwait
xchg
int
jmp
orl
outsb
inc
or
incl
inc
stos
and
cmc
push
mov
test
ret
lea
and
push
cmp
imul
ret
ret
inc
clc
pop
enter
pop
and
or
hlt
or
or
out
pop
in
rclb
popa
outsl
sub
xchg
out
fists
ret
inc
sub
shr
add
inc
or
orl
orl
adc
adc
cs
fnsave
lock
call
dec
jne
loope
cld
push
je
clc
add
sub
add
sub
sub
fbld
loope
sahf
inc
mov
sahf
pop
mov
mov
clc
scas
mov
loopne
inc
jne
or
or
cli
lds
not
and
les
adc
add
sub
inc
sbb
sub
or
ljmp
add
and
icebp
movsb
pop
andl
mov
adc
mov
clc
sarb
cmp
fwait
xor
pop
mov
das
test
ljmp
int
push
sbbb
inc
stc
sbb
push
orb
rolb
add
pop
add
cmp
nop
rcr
jnp
dec
or
fmul
adc
push
jns
sub
add
rclb
mov
pop
sti
xchg
pop
cltd
adc
xor
decl
pop
hlt
lea
stos
cltd
mov
or
cmpsb
imul
rcll
adc
lcall
add
sub
js
movsb
jmp
and
and
js
test
sub
adc
add
push
inc
insb
xor
faddl
and
sub
mov
sub
jl
push
or
mov
jle
imul
pop
xor
push
sar
dec
jp
jo
xor
movsb
pop
imul
cld
cmp
and
cmp
xor
addr16
je
fisttps
add
cmp
pop
je
fcmovu
ja
ja
dec
cwtl
mov
add
adc
fimull
fbstp
dec
lea
mov
adc
xchg
inc
jbe
mov
and
test
into
mov
cmpsl
jb
rdmsr
cmp
pop
jb
lods
dec
inc
adc
sbb
or
jp
insb
and
mov
lods
pop
and
inc
and
mov
push
push
push
jge
sub
out
adc
rcll
stos
call
or
mov
sub
and
or
bnd
adc
mov
inc
cmp
call
push
jne
mov
jne
jae
add
jnp
add
cmp
fcmove
xor
aaa
arpl
inc
std
add
out
clc
lret
cmp
outsb
and
cltd
adc
pop
mov
in
sbb
in
cli
aas
sbb
and
inc
mov
orl
jne
inc
inc
shlb
xorl
cmp
or
xchg
xor
cmc
fisubl
out
repz
mov
and
jne
mov
push
pop
aaa
cmp
push
outsb
leave
inc
test
inc
push
pushf
mov
sub
mov
fdivrl
lahf
adc
and
mov
dec
pop
xchg
sbb
adc
cmp
add
out
and
mov
decb
jne
sbb
in
hlt
xor
or
sub
dec
mov
cltd
sub
pop
pusha
dec
bound
dec
mov
and
lcall
jp
adc
ret
inc
mov
repz
or
das
pop
xor
int3
or
cmp
hlt
roll
mov
cmc
push
or
out
add
or
inc
or
inc
or
push
mov
cs
mov
mov
mov
call
push
sbb
add
scas
and
test
popa
lods
test
lea
ds
ret
into
or
ds
inc
jg
lea
leave
addl
test
xor
std
loopne
push
sbb
jg
loope
pop
jb
or
xorl
jp
inc
pop
and
cmp
xor
faddl
push
push
out
xor
add
xor
cmp
push
push
mov
add
or
imul
enter
push
mov
daa
dec
mov
inc
cmp
and
es
jle
push
lock
xchg
jge
cmp
cmp
sub
add
push
mov
les
mov
push
pop
and
mov
adc
or
call
push
enter
inc
xchg
imul
adc
adc
add
mov
mov
xor
outsl
sbb
dec
jmp
ficoms
andb
fdivr
outsb
arpl
std
lahf
pushl
adcl
push
cmp
mov
adc
push
in
adc
inc
andl
mov
or
mov
add
mov
es
mov
es
inc
fdivs
scas
mul
cmc
inc
js
push
or
pop
call
inc
test
pop
jl
dec
or
jle
ja
xchg
clc
hlt
and
fcoml
lahf
insb
int3
push
mov
add
aad
test
jo
sub
jb
jl
decb
cwtl
movsb
mov
call
dec
sar
hlt
mov
je
xchg
or
aas
cmp
bound
sarb
mul
in
fldenv
jge
jmp
movzwl
lret
sbb
or
int3
test
xchg
je
lea
data16
into
ficomps
add
cli
cmp
mov
decl
rorl
subb
ja
hlt
sbb
test
dec
cs
mov
fcomps
add
sub
sbb
sub
xchg
frstor
and
pop
dec
gs
movsb
mov
dec
out
mov
inc
orb
jo
pop
add
lods
or
fwait
sbbl
imul
sbb
xchg
arpl
sub
adc
pop
sbb
sbb
dec
dec
or
or
sbb
nop
outsl
int
ficomps
mov
mov
mov
pushf
fistpll
insb
or
movsb
jne
sbb
jbe
sbb
adc
and
nopl
jg
add
sub
out
inc
cmp
xor
sbb
movb
notb
and
push
int
xor
jmp
int3
les
adc
and
int
push
mov
xor
sahf
aaa
ret
in
shll
lea
inc
enter
jl
xor
sbb
adc
test
aaa
mov
mov
sbb
enter
push
mov
leave
enter
adc
test
subl
subl
enter
insl
and
push
cmp
inc
dec
outsl
xchg
sbb
repz
jo
repz
inc
push
jns
mov
inc
sub
push
cld
jg
stc
push
or
xchg
fwait
test
sub
repz
mov
call
add
mov
rep
popf
jge
push
hlt
xchg
repz
xchg
sub
lods
nop
and
and
xchg
jge
nop
add
sub
or
lods
enter
add
mov
adc
push
leave
and
rcrb
js
loop
in
add
add
in
mov
nop
xchg
test
test
pop
cmp
popa
mov
call
cld
enter
js
js
cmp
mov
inc
pop
jb
or
sub
push
out
cmp
insb
cli
hlt
mov
mov
push
mov
jnp
cmpsl
jns
rcll
cs
mov
xchg
icebp
or
jne
cmp
stos
jl
pop
push
or
adc
sub
inc
loop
js
lock
lret
push
jmp
ret
mov
das
and
jae
xchg
ret
mov
outsl
jne
pop
rcrb
push
xchg
adc
add
mov
cmp
lret
or
aam
add
cmpsl
and
mov
or
or
fs
push
adc
lods
inc
cmpl
xor
mov
add
out
mov
mov
add
sub
adc
adc
push
push
sbb
sahf
pop
shr
lds
aas
and
mov
add
add
push
cmp
and
add
inc
sub
inc
xor
adc
push
inc
jl
jne
bound
inc
mov
adcb
xchg
jnp
mov
mov
push
mov
push
mov
mov
jns
lds
js
pop
sbb
testb
daa
xor
or
call
pop
inc
add
shlb
mov
mov
ljmp
aaa
inc
cld
push
sub
fadds
or
adc
ds
dec
adc
or
jnp
xor
int3
or
or
mov
aam
inc
cli
or
shll
enter
pop
jno
out
das
cmp
sub
bound
pop
sahf
cmpsb
imul
imul
dec
pushf
inc
fdivl
or
push
sbb
mov
gs
push
dec
adc
cmpsb
inc
lret
je
gs
hlt
mov
sbb
add
shll
mov
rcrl
int
mov
dec
mov
ljmp
xchg
xchg
je
push
or
loop
sbb
ja
enter
sbb
inc
mov
fucom
push
fldl
or
fldl
or
xchg
add
xor
mov
mov
les
mov
push
leave
pop
jmp
jo
mov
rorl
add
xor
sbb
lods
pop
mov
negb
enter
sbb
je
add
and
imul
push
sti
fnstenv
lcall
jmp
sbb
popf
out
cmp
sbb
mov
fldlg2
sbb
xchg
mov
xchg
jmp
cmpsl
inc
cmp
rcrl
stc
fwait
xor
lahf
add
test
jno
mov
mov
call
push
sahf
push
xchg
jo
adc
push
loopne
push
push
add
lock
shl
push
jge
mov
or
and
inc
lock
arpl
mov
mov
hlt
out
cmp
cltd
setp
sbb
test
mov
daa
xor
cmp
sar
sahf
adc
mov
test
mov
inc
mov
mov
mov
mov
gs
test
push
xchg
in
jle
ficoms
sbb
and
sub
xor
inc
or
jo
fidivrl
push
xchg
jmp
inc
faddl
pusha
bnd
or
popa
push
jmp
push
in
cli
clc
push
fadd
mov
incb
cmp
add
cmp
push
push
inc
lea
adcl
ror
fdivrs
testb
and
add
shlb
test
adcb
mov
or
mov
inc
inc
fs
add
xchg
sbb
and
xor
adc
xor
add
lret
test
jmp
xor
or
in
mov
faddl
pop
cs
call
cmp
mov
mov
lods
std
mov
les
jne
adcl
int3
les
jmp
add
push
rcrb
rol
add
jno
or
pop
test
pop
and
jne
dec
sbb
sti
gs
loopne
sar
lea
testb
add
push
dec
repnz
cmp
rclb
clc
sub
mov
mov
out
mov
pop
push
addl
jp
or
pop
or
adc
sub
and
das
xchg
inc
xchg
xor
cmpsb
xchg
mov
leave
mov
or
shl
enter
ret
daa
pop
into
xor
xor
dec
push
pop
or
push
add
cs
loope
xor
iret
mov
cmp
imul
hlt
ss
or
jae
popa
mov
mov
or
mov
cs
jb
call
jge
lea
call
in
dec
je
or
inc
or
cwtl
arpl
pusha
lds
jne
inc
sub
pop
or
adc
and
mov
sbb
inc
jne
out
orl
movsl
push
pusha
imul
inc
test
aad
cmp
push
int
imul
mov
dec
push
pop
lods
cmp
fbld
inc
mov
push
leave
fwait
aad
jp
test
lea
dec
mov
xchg
push
es
sub
lret
mov
inc
push
outsb
call
cmp
repnz
ja
pop
je
mov
sbbb
sub
push
imul
lea
out
popf
in
mov
xlat
push
jne
icebp
testl
mov
cmp
push
lret
add
xchg
bextr
into
adc
mov
and
sub
lods
dec
enter
mov
mov
jecxz
xlat
out
add
push
in
push
inc
cld
dec
enter
lea
pop
loopne
cmp
mov
mov
ds
pop
mov
loopne
nop
and
mov
int3
test
cwtl
pop
and
lock
jp
push
mov
test
outsb
pop
insb
mov
adc
fnsetpm(287
std
xchg
mov
push
test
decb
mov
insl
pusha
nop
ja
fcomi
std
aaa
fs
repnz
outsl
repnz
adc
cmp
xchg
sti
add
mov
and
shr
je
add
jno
inc
dec
pusha
xchg
pop
cli
fsubrl
mov
cmp
stc
call
aas
mov
jno
jns
call
int3
mov
push
mov
ret
dec
mov
fdivrs
mulb
stos
cmpsb
fldcw
mov
inc
mov
js
push
loope
std
mov
lea
in
xor
pop
mov
imul
mov
rcrl
mov
pop
lret
jmp
pop
push
mov
push
push
nop
mov
ja
pop
xchg
mov
cld
mov
lods
bound
out
xchg
aad
int
mov
push
movb
stos
dec
aad
test
pushw
rcrl
dec
xor
roll
adc
into
inc
ss
dec
inc
adc
ret
fmuls
cmp
cmp
xor
jb
mov
std
call
mov
and
pusha
imul
test
fs
push
mov
mov
daa
push
mov
cmp
push
popa
mov
fdivrp
sbb
mov
data16
jo
out
hlt
sub
pop
repnz
enter
adc
pop
dec
dec
add
int
rol
sar
lock
push
pop
sub
or
jmp
data16
data16
sbb
jmp
adc
and
pop
sub
int3
cmp
cli
jo
or
roll
dec
and
imul
fnstenv
ds
test
lock
movsl
and
and
test
jno
fbstp
bound
pushf
popf
push
insl
mov
movsb
adc
pop
and
sti
sbb
inc
push
inc
lret
jne
cmp
xchg
sbb
cwtl
cmovge
or
jp
jne
fdivr
and
push
dec
pop
jno
sub
jl
je
and
sbb
sub
or
std
loope
push
mov
mov
out
sbb
xchg
and
nop
je
jne
push
movsl
idivl
repz
movsl
jb
inc
inc
xor
ret
sub
or
hlt
adc
mov
mov
push
mov
mov
test
xchg
movsb
test
sbbb
inc
push
add
fsubs
xor
adcl
sbb
push
xor
adc
sub
cmp
ja
fidivrl
inc
test
or
shrl
sbb
subl
pop
push
pop
or
ljmp
mov
or
or
push
sbb
add
push
xchg
imul
repz
stos
repz
test
mov
fs
push
jns
es
mov
cmc
test
mov
and
mov
push
push
arpl
xor
pushf
dec
mov
xor
xor
mov
lcall
sbb
loopne
or
push
dec
push
dec
mov
dec
es
movsb
ret
xchg
or
pushf
inc
push
leave
and
sub
xchg
int
test
mov
xchg
dec
es
mov
cmp
sti
test
jbe
mov
pushf
push
sub
mov
movsb
repnz
push
jecxz
mov
jb
test
cmc
xchg
int
cltd
cmpsl
add
mov
mov
lahf
push
and
and
inc
push
lea
dec
mov
push
lea
and
repz
pushf
in
fwait
xchg
addr16
mov
icebp
inc
addl
sbbl
in
icebp
mov
inc
dec
movsb
imul
dec
inc
xor
dec
es
pop
lahf
int
in
add
jo
xchg
dec
push
leave
adc
nop
inc
or
leave
dec
adc
pop
add
jb
xchg
pushf
pushf
nop
nop
adc
push
xor
leave
lods
lods
lods
cmpsl
test
fdivrs
addr16
dec
pop
je
mov
adc
dec
xchg
dec
sub
aam
aaa
ds
sti
push
dec
stos
inc
add
push
mov
mov
lret
ss
or
js
iret
adc
pop
shrb
movsb
or
jne
mov
or
or
push
mov
add
sbb
testb
xor
and
or
xor
ja
imul
jne
or
divl
mov
or
mov
mov
or
cmp
adc
adc
sub
and
icebp
sub
or
nop
add
filds
or
into
xchg
int3
dec
out
test
or
push
or
inc
lahf
jmp
pop
and
push
mov
push
daa
or
outsl
mov
test
je
mov
xor
insb
mov
pop
bound
ret
cmpsl
mov
sbb
sub
jae
data16
xchg
and
jle
pop
test
sub
cmp
jne
mov
push
mov
shll
fucomip
stos
test
push
sahf
bound
scas
inc
pushf
push
cmp
popa
sub
and
cld
lods
xlat
xor
movsb
or
push
and
pop
mov
xor
test
xor
outsl
ljmp
gs
mov
xor
add
push
addr16
inc
jecxz
loop
inc
sub
cwtl
lahf
or
mov
dec
fs
sbb
cmp
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
dec
cwtl
inc
testl
push
repz
cmp
test
sbbb
jp
lcall
adcl
and
mov
loope
rep
and
ficomps
mov
or
inc
cltd
push
adc
xchg
outsl
jne
movsl
add
sbb
sahf
jno
jae
das
or
adc
add
push
and
push
iret
pop
jmp
dec
or
and
clc
lret
ss
nop
pop
jmp
bound
movb
out
dec
dec
sqrtps
inc
push
adc
inc
pop
adc
or
lcall
dec
pop
push
push
addr16
sbb
stc
bound
imul
mov
add
inc
sub
dec
lcall
mov
pop
iret
add
add
add
pop
nop
lret
sbb
adc
js
in
stos
add
push
mov
xor
xor
pop
pop
aas
loope
imul
dec
lock
pusha
sahf
sub
fldl
xor
push
je
js
adc
mov
inc
sbb
mov
rclb
xchg
cmc
out
inc
cmp
push
xchg
rcrl
ret
push
hlt
lods
lret
add
je
loopne
pop
sub
xchg
cld
fcmovb
lea
and
in
cwtl
aad
or
mov
pop
lock
mov
loop
pop
pop
push
adc
jnp
and
adc
shr
out
int3
mov
xor
jmp
rcr
or
jne
jg
insb
shl
mov
fs
inc
mul
add
jb
cmp
gs
jb
cmp
add
or
adc
sbb
add
mov
btcl
sub
mov
inc
jl
fwait
jb
and
push
rorb
rcrb
cmp
or
sub
sub
and
nop
pop
movsl
lahf
adc
inc
cmp
roll
xchg
out
inc
fwait
pop
add
dec
sbb
es
pushf
bound
mov
inc
or
cld
or
aad
or
push
jp
jle
test
ds
push
dec
or
or
icebp
call
sti
jb
inc
fsubrs
cmp
push
cltd
int3
lahf
inc
push
dec
push
add
add
mov
lret
add
push
jp,pn
ret
mov
stos
sub
cmp
and
adc
fs
sbb
add
pop
jbe
xor
add
aas
and
adc
or
lock
mov
push
aam
or
fistpl
add
jb
imul
ret
pop
adc
push
and
dec
pop
call
insl
lods
xchg
cmp
aaa
mov
sbbb
add
dec
pusha
dec
es
icebp
fcoms
xchg
hlt
or
xchg
lock
xlat
in
pop
icebp
jge
imul
jle
andl
cmp
jo
add
and
sarl
mov
inc
fs
jle
lcall
pop
orl
xchg
test
cmp
inc
scas
cs
popl
push
cmp
jbe
sbb
inc
rorl
or
leave
push
sbb
pusha
dec
dec
mov
dec
mov
stos
and
xor
and
imul
pop
movsb
or
data16
jb
andl
push
divl
inc
add
sub
mov
and
or
sti
subb
mov
and
and
ss
or
fnstcw
movsb
mov
jmp
push
inc
mov
ja
push
add
dec
dec
fdivl
push
mov
pop
xchg
faddl
jle
imul
scas
je
loop
jmp
mov
mov
jmp
push
or
inc
daa
push
xchg
cs
pop
pop
xchg
cmpl
pop
xchg
push
push
pusha
or
lds
int
or
je
clc
mov
testl
inc
sbb
inc
fs
mov
cs
sub
adc
mov
sbb
jge
mov
mov
xor
inc
push
mov
enter
nop
jmp
out
mov
jnp
xor
sbb
push
xchg
mov
push
dec
jmp
ljmp
bound
js
add
xor
mov
push
adc
cmp
pop
add
sbb
or
adc
dec
and
in
das
fldenv
push
cltd
aas
data16
movsb
inc
pop
addl
cwtl
popa
loope
in
push
je
mov
inc
push
out
ret
hlt
shrl
xor
mov
ljmp
cmpsb
push
add
out
mov
lret
je
inc
push
daa
pop
jmp
fsubs
shl
push
adc
test
lret
rol
cmp
stc
xor
mov
xchg
clc
add
xor
push
and
or
and
clc
or
lods
and
jecxz
jo
in
inc
push
jecxz
jno
ss
cmp
je
push
out
cmp
dec
repnz
faddl
repnz
add
aam
xchg
pop
addr16
outsb
or
xorl
les
lods
movsb
repnz
mov
sbb
add
sbb
push
outsb
and
gs
pop
pop
xchg
incb
sub
sub
add
and
lret
pop
cmp
cld
sbb
mov
sub
pusha
test
gs
lahf
and
inc
and
push
inc
sbb
xor
push
and
addb
and
mov
imul
jge
subb
and
rcll
add
js
jb
cmc
fsubrs
lea
mov
and
mov
stos
cmpsl
mov
cmp
jbe
push
imulb
add
push
js
sbb
xchg
test
xchg
cmp
dec
adcl
popa
fadd
outsl
xchg
addb
fs
loope
in
pop
push
cmp
inc
or
filds
ss
or
frstor
cmc
and
xchg
add
enter
pop
xchg
testb
dec
add
or
pop
adc
push
dec
push
out
mov
hlt
push
xor
push
pop
fisttpll
push
add
adc
fdivs
lcall
and
jmp
lcall
push
adc
mov
mov
mov
mov
adc
or
and
inc
mov
cmp
xor
pop
fucompp
test
mov
xchg
add
lret
push
sbb
fcmovb
ja
cmp
sar
ss
jmp
xor
dec
orl
incl
es
mov
or
je
pop
mov
xor
es
pop
int
or
popa
push
push
jecxz
pusha
inc
push
xchg
lcall
shr
push
in
mull
ret
add
rolb
xchg
adc
jae
inc
or
je
sarb
bound
leave
rclb
pushf
add
out
cwtl
movsl
ror
inc
add
xor
inc
out
mov
pop
add
mov
add
sub
pop
pop
adc
and
cwtl
mov
insl
cmp
mov
push
out
inc
mov
sub
sbb
mov
adc
push
mov
aaa
pop
rorb
mov
in
aas
aad
bound
mov
hlt
mov
xchg
mov
andl
dec
movsb
or
popa
sahf
add
ljmp
sub
push
push
orl
stos
jmp
clc
or
dec
xor
xor
scas
insb
in
pop
shrl
loop
add
inc
add
add
inc
cmp
jecxz
rclb
jo
add
test
xchg
mov
mov
in
mov
cmp
dec
inc
inc
or
jne
movsb
outsl
dec
sbb
fidivl
sar
mov
dec
hlt
arpl
das
mov
or
jp
mov
or
or
xchg
cld
aas
sbb
outsl
je
shlb
jmp
les
xor
inc
addb
push
cltd
sub
xchg
shr
or
int
pop
cmp
data16
insb
sbb
dec
mov
adc
mov
les
jmp
andl
push
imul
mov
aam
mov
add
or
ds
xor
or
or
or
imul
and
push
and
fsubrl
ss
shrl
int3
js
into
mov
xchg
xor
jle
cmp
push
xchg
ret
out
mov
ljmp
pop
dec
pop
pop
sbb
add
sbb
rcrb
add
nop
and
jl
jle
dec
andb
and
mov
adc
or
mov
inc
cmp
sbb
or
push
aaa
dec
xor
clc
insl
sbb
add
test
mov
or
jg
or
add
out
cmpsb
popa
lock
add
rcrl
inc
add
and
or
or
ud0
hlt
inc
adcl
pop
sub
jl
sahf
repz
push
insb
or
subb
push
jo
jb
xchg
adc
add
jmp
lcall
clc
pop
rorl
dec
inc
in
push
aaa
xor
ds
xchg
int
xor
js
xchg
sub
insb
jo
aaa
and
scas
test
xor
add
mov
jmp
mov
pop
notb
pop
adcb
adc
pop
pusha
sub
ja
loopne
pusha
bound
dec
out
mov
loopne
or
or
loop
movsb
add
push
jnp
and
push
xor
shlb
pushf
rorl
popa
je
push
sarl
std
std
mov
mov
test
adc
loopne
daa
cli
loopne
or
xor
not
push
rcrl
xor
and
and
mov
lock
jb
rcrl
or
mov
sub
and
add
mov
inc
sbb
js
sub
sti
mov
sbb
jg
adc
and
push
push
sub
lea
pop
test
xchg
add
adc
ja
clc
in
cltd
lods
cli
sub
add
jo
orb
pmaxsw
and
fs
je
sub
or
push
push
test
jo
addb
jle
test
sub
cmpsb
jge
hlt
rep
mov
jmp
neg
popf
sub
imul
shrl
loop
scas
movsb
pop
or
sbb
stos
mov
enter
ret
dec
dec
adc
int
mov
and
in
stos
aaa
or
mov
and
push
mov
or
jp
jae
lock
or
sbb
mov
push
sarl
int3
loopne
pop
jl
xchg
std
mov
add
cmp
idivl
push
jae
jmp
lea
out
movsl
cmc
arpl
mov
ret
mov
sti
std
and
or
ds
jae
cs
ja
loopne
pop
hlt
lret
cs
xor
adc
inc
je
int
or
cld
jecxz
les
xchg
lods
std
push
mov
sub
mov
add
loop
or
push
xchg
cmc
pusha
test
pusha
mov
popf
adc
cmp
fbstp
dec
adc
push
and
ja
jle
xchg
dec
push
pop
outsl
inc
or
dec
in
repz
jle
sahf
outsl
ret
mov
mov
mov
mov
mov
or
test
ret
ror
ja
xchg
dec
lret
loope
or
and
adc
test
fwait
cmp
into
and
call
sub
ljmp
push
sub
ja
es
aas
cmpsb
mov
shrl
rcll
xlat
mov
add
sub
lock
in
lock
rep
add
jne
add
adc
in
in
mov
and
movsb
xchg
mov
jle
cmp
pop
jmp
pop
add
inc
sar
rorl
mov
test
mov
hlt
pop
loope
sarb
pop
sbb
push
sub
fnsave
jno
movsl
mov
sti
or
or
or
fs
gs
inc
mov
leave
sbb
sub
fadds
enter
fildl
lods
in
add
push
dec
or
int
cmpsl
ds
loope
les
pop
bound
loope
jge
fdivrl
add
imul
sbb
or
repz
scas
roll
jg
dec
iret
decl
or
imul
cmp
adc
je
inc
js
mov
push
fcoms
faddl
sub
push
xor
test
std
mov
popf
inc
pop
mov
jb
add
xor
aas
add
jmp
mov
mov
and
and
xor
in
mov
mov
add
fiaddl
in
frstor
adc
add
sub
or
adc
out
scas
sub
and
arpl
ret
push
adc
test
xchg
int3
hlt
add
and
arpl
jp
testb
pop
adc
outsl
jo
repnz
arpl
jae
adc
outsb
movsl
or
imul
inc
bound
cmp
fsubrl
inc
jnp
lahf
mov
sahf
inc
jecxz
outsb
inc
test
inc
stos
aam
mov
dec
push
jb
pop
push
fimull
ret
or
pop
imul
cmp
cmp
decl
pop
xor
cmp
inc
jmp
cmp
dec
and
sub
or
adc
jne
imul
sbb
push
ret
cmc
aas
sbb
push
adc
dec
enter
cmp
hlt
rcr
push
cmp
and
fadds
jb
pop
adc
mov
mov
js
mov
mov
xchg
rcll
mov
mov
idivb
xor
out
mulb
and
sbb
jo
ja
insb
mov
mov
lcall
imul
mov
or
test
sub
push
add
in
shll
fs
and
push
in
in
or
imul
nop
cmpsb
adc
lods
cs
sub
sarb
jmp
sbb
or
repz
push
inc
sbb
adc
or
cmp
or
adc
fimuls
xor
and
adc
or
push
fimull
or
sub
loopne
fxch
pushf
mov
mov
or
mov
adc
inc
and
push
addl
sub
push
mov
ret
ret
sbb
sub
dec
xor
mov
add
adc
and
xchg
lods
cmovno
mov
scas
rorb
inc
pop
dec
sbb
rorb
imul
mov
test
sbb
xor
pop
add
stos
push
pop
cld
int
ficoms
jb
sub
enter
enter
adc
cmp
mov
cmp
into
cmc
jne
loope
jbe
and
cmp
adc
adc
rorb
adc
ret
mov
loop
loop
xchg
add
test
dec
sbb
or
fcmovbe
mov
and
dec
mov
rorl
push
jno
or
ret
xchg
inc
ljmp
push
std
xchg
sub
push
xchg
addr16
jne
pop
xor
lahf
ret
pop
sub
sbb
push
je
xchg
cli
adc
std
add
xor
lea
or
shl
mov
and
pop
xchg
in
mov
pop
icebp
mov
mov
popl
lods
push
or
inc
add
or
movsb
mov
aaa
lock
inc
push
push
adc
les
inc
ret
push
mov
std
push
cld
dec
and
pushl
add
sub
andb
ljmp
pusha
call
pop
fsubrl
test
push
xchg
cld
sbb
shl
loope
fwait
lock
mov
aad
lea
xor
lret
addb
push
sub
out
sbb
xlat
xchg
xorl
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
inc
ret
inc
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
xchg
imulb
xchg
dec
es
mov
fs
pushf
mov
movsb
test
sub
push
adc
cmp
outsb
mov
add
inc
pop
sub
sub
push
mov
and
adc
dec
imul
sbb
orb
sbb
or
movsb
pop
and
add
enter
pop
test
lret
adc
add
cmp
inc
ret
mov
sbb
les
inc
dec
jne
out
shrb
mov
lret
or
sbbb
clc
inc
lods
and
dec
sbb
shlb
in
add
adc
cmp
jne
xor
xor
sbb
and
int
push
sub
add
cmp
int3
mov
inc
cmp
jge
pushf
repnz
add
xchg
xor
faddl
xchg
xchg
ds
xchg
xchg
js
in
xor
xchg
or
pushf
xor
repnz
inc
pop
cltd
les
dec
cmpb
pop
ss
inc
rcrb
xchg
xchg
mov
dec
push
lea
xchg
dec
jnp
je
sub
sti
ret
sbbb
ret
leave
lds
jbe
lret
pop
fistl
lock
push
xchg
jp
add
fmuls
in
fisubs
loopne
inc
les
pop
sbb
hlt
ds
pusha
out
dec
sbb
sbb
into
test
aam
dec
pop
je
push
outsb
fnstcw
pushf
jne
mov
imull
and
outsb
sbb
loopne
jge
or
sbb
pop
xchg
xor
and
add
push
test
enter
sbb
jns
push
jbe
inc
cmp
jnp
jb
dec
add
int3
and
cmp
mov
fwait
xor
sbb
outsl
add
push
pop
jne
adc
mov
bound
mov
jno
mov
pop
push
sub
mov
jl
adcl
push
aam
dec
cmpsb
dec
or
pop
pop
fistpll
jmp
je
mov
js
pop
loopne
cmp
rolb
dec
mov
xor
and
daa
jnp
dec
sbb
inc
ret
lret
loopne
sbb
dec
push
mov
adc
clc
sbb
int
mov
mov
jb
push
mov
push
scas
add
enter
inc
rorb
roll
push
cmp
and
subl
adc
mov
or
icebp
add
xchg
les
mov
fwait
push
loopne
call
push
pop
ret
xchg
sbb
js
sbb
out
inc
cmpsb
jge
pop
mov
in
sbbb
push
mov
repz
in
cmp
xor
andl
test
inc
add
push
push
xor
pop
cmp
addl
xchg
inc
ret
and
out
mov
add
sar
mov
or
push
mov
jle
insb
mov
popa
mov
aad
sbb
inc
iret
jl
adc
cwtl
and
push
adc
aad
pop
popf
add
cld
mov
cltd
add
pusha
inc
add
test
outsl
adc
inc
pushl
mov
cltd
sub
sub
ret
rorl
inc
add
pop
ret
fiadds
rcrb
ss
imul
jl
add
cmp
in
shlb
sub
adc
filds
mov
mov
mov
lods
test
sar
add
loope
cmpsl
cmc
test
sub
add
xchg
pusha
cwtl
push
mov
imul
fcmovb
cmp
inc
inc
mov
ds
sbb
inc
or
dec
loope
add
push
movb
pop
add
sbb
lods
jnp
lret
push
mov
jne
ret
mov
sbb
lahf
xor
dec
sub
shl
shl
cmp
mov
or
sbb
scas
test
rolb
jno
mov
mov
sbb
scas
mov
rcl
cmp
cmp
jne
movzwl
insl
loopne
xchg
fiaddl
shl
inc
movsb
sbb
out
inc
int
popf
ficomps
push
jmp
inc
leave
insl
ljmp
jl
scas
iret
test
stos
cmp
add
js
pusha
and
sahf
cmp
sbb
mov
jb
sub
inc
mov
enter
sbb
dec
add
xchg
sbbb
adc
cmpsb
movsb
loop
loope
jnp
mov
push
xchg
push
pop
mov
movsl
aad
sub
xlat
mov
cmp
mov
pop
mov
cmp
cmpsb
aas
movb
inc
mov
mov
adc
shl
lods
ret
repnz
mov
and
inc
dec
loop
cmp
add
dec
cmp
jmp
adc
or
pushl
pop
ret
shrb
mul
xor
pop
movsl
dec
add
loop
add
xchg
xlat
repnz
inc
lods
push
orl
dec
imul
inc
inc
sbb
or
cmpsl
sarb
xchg
push
bound
pop
add
nop
or
mov
mov
xchg
dec
dec
stc
pop
mov
adc
cmp
add
addr16
js
push
xchg
sub
add
test
mov
je
push
push
pop
lock
lret
or
pop
lret
inc
mov
std
adc
adc
add
jae
jb
inc
test
jns
jae
mov
mov
jo
lret
jmp
adc
repz
jecxz
stos
mov
inc
test
aas
lea
mov
pushl
sub
xsaves
lods
xor
xchg
ja
fdivrs
jne
inc
sbb
push
ss
stos
cmp
adc
xor
in
clc
test
cmp
mov
inc
or
inc
cli
inc
cmpb
xor
jg
or
cmp
pop
pop
fwait
pop
and
mov
push
xor
mov
push
inc
leave
je
pop
pop
mov
aaa
push
xor
jo
mov
js
push
cmp
mov
outsb
clc
ljmp
cmp
push
ret
push
jns
inc
push
or
sbb
xor
add
xor
add
fmull
add
mov
sbb
cmp
adc
fdiv
and
sbb
or
mov
mov
add
int
mov
or
and
push
push
in
stos
mov
pop
arpl
jno
shr
test
xor
inc
cwtd
xchg
test
mov
push
and
mov
dec
and
sbb
scas
fidivs
mov
shll
ret
xchg
push
push
add
ljmp
iret
nop
push
mov
out
pushf
adcb
mov
fstpt
add
lock
dec
insb
cmp
mov
ffreep
add
cmpb
testl
cmp
sarl
and
dec
push
sbb
into
sub
and
les
inc
mov
pop
addl
or
or
orl
pop
push
push
push
gs
scas
mov
loope
andl
popa
add
xchg
pop
jl
xchg
fcmovnbe
sub
adc
jge
xor
bound
dec
pop
sti
cltd
inc
stos
push
or
adc
aad
pop
xor
mov
je
dec
inc
imul
and
fs
adcb
push
pop
xor
push
cli
lods
pop
dec
pop
pop
mov
mov
and
cmp
call
push
mov
add
clc
je
xor
cmp
aam
cmp
push
jmp
sub
hlt
mov
lods
js
dec
mov
hlt
mov
inc
fs
mov
push
push
and
ret
sub
pop
jl
inc
mov
in
mov
or
out
insb
insb
imul
add
adc
imul
jmp
inc
ds
les
and
inc
adc
fcmovnb
cmp
mov
sarl
jp
test
and
pop
dec
loopne
je
mov
dec
mov
push
xor
inc
jmp
icebp
xor
jecxz
xchg
push
test
mov
loop
test
loope
jle
mov
and
xor
xchg
ret
push
movsb
mov
adc
pop
pop
pop
les
inc
dec
cmp
and
pop
add
into
jne
sbbb
push
add
add
mov
jnp
pushf
lahf
loopne
push
cmp
mov
fistpl
jno
bound
jmp
popa
jbe
and
arpl
cmp
mov
loope
inc
mov
and
test
in
test
or
adc
xchg
outsb
or
sub
repnz
ljmp
xchg
pop
mov
test
mov
sbb
dec
cmp
adc
jb
sbb
pop
cmpb
xor
stos
cmp
add
cld
push
fdivrl
fadds
dec
push
adc
jne
sbbl
mov
sti
mov
and
add
dec
cmp
mov
repnz
das
adc
inc
out
lock
rorl
jl
or
das
dec
bound
notb
add
sub
or
pop
mov
popf
inc
push
cmp
sub
test
ja
and
jne
or
mov
into
inc
xchg
fiadds
inc
xor
das
cltd
adc
push
xor
cmp
sysenter
cld
sbb
pop
insb
loope
pop
pop
push
dec
or
ror
jmp
mov
fs
and
cmp
sbb
pop
cmpb
add
push
xchg
nopl
push
cmp
setp
push
popf
pushf
pop
sub
je
push
popf
sub
push
call
out
mov
mov
idiv
add
push
sub
sbb
insl
xor
rorb
js
mov
sbb
mov
or
rorl
pushw
or
mov
lcall
js
push
mov
xchg
test
xor
rolb
and
lret
mov
adc
sub
shll
dec
xor
adc
in
mov
or
shr
xchg
fcompl
in
shr
and
jo
and
and
xor
lock
test
adc
or
add
shlb
xchg
mov
test
je
sbb
js
je
or
or
sub
push
sbb
clc
fucomp
outsl
incb
jmp
sbb
lock
and
mov
les
and
aaa
jecxz
in
data16
jge
add
or
pop
xor
adc
and
mov
pop
xor
sub
and
jge
mov
idiv
outsb
pop
fisubs
loope
sbb
add
fstps
aas
pusha
mov
es
jge
pusha
loope
pop
sub
dec
sub
xchg
andb
jecxz
pop
fstp
je
imul
fisttpll
call
sbb
daa
add
sub
mov
adc
sti
out
lret
add
add
test
fs
dec
loope
mov
enter
jl
mov
push
mov
jne
orl
cmp
or
xlat
push
adc
testl
shll
xorb
mov
fstpl
es
push
and
inc
add
adc
jb
adc
inc
push
fnstcw
fisttpll
test
subb
js
pushf
fstpl
out
xchg
inc
adc
cmp
pop
push
mov
test
pop
sub
fidivrs
loop
adcb
lret
xor
and
xor
mov
cmp
mov
xchg
or
pop
fs
sbb
ret
fldz
repnz
mov
cs
jl
add
sbbl
sub
sbb
leave
jp
push
or
bsf
fisttpl
fldcw
xor
xor
int3
adc
testb
mov
sbbb
pushf
fadds
nop
rclb
test
in
fstpl
pop
mov
shlb
into
jbe
sub
rorb
mov
pop
mov
inc
pop
mov
ror
div
mov
mov
enter
cld
inc
repnz
push
lahf
shll
pop
test
enter
sbb
push
mov
sbb
jp
dec
in
jbe
loopne
inc
inc
lock
out
mov
pop
push
push
sahf
jmp
pop
movsb
add
or
inc
add
rcl
std
test
sub
mov
and
inc
lods
arpl
pop
add
add
sbb
jle
push
add
pop
add
jb
add
and
inc
jmp
jmp
adc
add
or
out
mov
add
and
pop
inc
clc
lret
xchg
lock
add
and
or
hlt
dec
pusha
test
dec
sbb
mov
jl
pop
cmpsb
imul
call
or
sbb
sbb
hlt
adc
movsb
lods
andb
xor
mov
xchg
lock
hlt
push
push
cmp
pop
sbb
sbbb
data16
sub
or
fwait
jno
pop
shlb
push
sub
or
or
je
push
mov
cmp
push
jmp
insb
insl
orl
imul
pop
jo
ret
adc
mov
pop
cli
push
mov
cmp
cmpsl
add
xor
sbbb
add
orb
lea
push
or
mov
fldenv
dec
pushf
out
jbe
sub
mov
decb
jbe
loopne
popa
loop
cmp
jo
jae
mov
int3
fnstsw
adc
jns
add
xor
add
sbb
mov
test
mov
jne
pop
push
pop
clc
or
sub
hlt
jmp
cs
shl
sub
call
rcrl
dec
rol
lock
or
sti
jo
repnz
gs
and
xchg
mov
loopne
lock
push
cmp
sbb
adc
inc
push
pop
fadds
jbe
xor
lret
addl
cwtl
out
sub
fs
test
jnp
imul
pop
or
mov
jb
pop
dec
mov
or
imul
add
or
push
mov
push
mov
push
sbb
je
mov
cld
push
mov
loopne
add
sbb
and
jo
sub
shr
loop
jb
xor
aad
xor
int
push
fsave
imul
adc
lock
inc
fldcw
and
pusha
push
inc
and
xor
push
or
insl
or
push
mov
loopne
adc
fldt
fwait
cs
das
sahf
adc
xchg
sub
sbb
and
or
sub
fdivp
jb
mov
fldpi
xor
push
dec
jo
je
mov
inc
je
sbb
adc
ldmxcsr
inc
and
pop
cmpsl
test
or
push
call
cmp
add
shl
cmp
jbe
mov
out
pop
lods
and
lea
lods
xor
inc
or
jbe
imul
push
call
pop
inc
popa
push
sub
mov
call
hlt
shlb
stos
add
or
pop
sbb
lea
adc
push
stos
mov
sub
das
ja
add
loopne
mov
jnp
add
push
adc
inc
and
sub
in
adc
mov
pop
cltd
jp
sbb
dec
test
cmp
je
sub
mov
out
fidivrl
inc
psubq
xchg
les
add
test
sub
inc
or
std
push
in
adc
enter
or
add
loope
popa
setae
or
inc
add
and
ss
adc
jle
hlt
pusha
xor
cmp
rorl
push
add
ret
push
sbb
push
cmpsb
mov
sar
movsb
push
sub
leave
rorb
lcall
test
push
or
mov
add
mov
jmp
aas
daa
adc
lock
cmp
cmp
clc
and
scas
cwtl
pop
test
jne
push
add
test
hlt
mov
stos
stos
js
jp
repnz
pop
pop
sub
cmpsl
and
push
or
adc
pop
xorb
loop
add
sahf
pop
or
insl
das
mov
xchg
loopne
lea
pop
adc
fcomip
sub
inc
shl
les
sbb
inc
aam
loop
rolb
cli
orl
or
jmp
outsl
out
ja
dec
cltd
insb
pop
and
mov
out
mov
xor
sub
divb
sub
insl
lea
xor
repnz
icebp
je
shlb
cmp
sbb
pop
push
lcall
cmp
dec
bnd
and
add
dec
mov
xchg
push
pusha
mov
mov
add
and
add
push
and
mov
add
inc
fadds
dec
ljmp
fwait
lods
getsec
dec
stos
inc
in
add
bndldx
pop
cmpsb
push
aam
xchg
dec
xor
cmp
mov
xchg
movsl
xor
incl
push
xchg
out
aam
pop
sub
sub
not
mov
lock
sbbb
iret
push
ds
ficomps
and
lock
fisubl
test
shlb
and
popa
adc
inc
shl
push
aas
fcoml
pop
sub
sarb
je
mov
fs
aam
jb
out
mov
in
xor
sub
pop
hlt
test
scas
sub
or
mov
icebp
push
push
lea
mov
cli
jp
adc
jge
cmp
pop
lds
xor
pop
sarb
or
xor
push
iret
dec
jns
inc
lock
xchg
test
ret
adc
jg
flds
cmp
inc
imul
and
inc
xor
icebp
cltd
pusha
or
mov
jge
pop
andl
stos
stos
mov
into
out
loop
fwait
loope
lea
and
lds
pop
cld
sbb
movsb
sbb
ret
jge
pop
mov
es
scas
sarl
sbb
addb
add
add
loopne
enter
sub
in
dec
outsl
add
stc
and
scas
mov
pop
rcrb
pop
pop
xchg
lods
xchg
or
rep
pusha
and
sbb
adc
repnz
pusha
pop
add
stos
cmp
sub
pop
sub
stos
mov
cltd
fs
jl
cmp
pop
inc
xor
push
adc
mov
mov
or
dec
shll
push
dec
sub
push
mov
in
lods
mov
rclb
or
add
pop
or
jmp
xor
or
mov
lock
rcrl
pop
mov
sub
cmp
ja
push
dec
jmp
fs
push
or
sub
mov
xor
movsb
add
add
call
sub
dec
je
mov
add
loopne
or
pop
jp
neg
aas
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
add
in
mov
cmp
jle
jle
cmp
push
xor
pop
les
gs
orl
adc
lods
push
jbe
mov
subl
inc
sub
inc
idivb
jmp
inc
and
push
sbb
mov
jae
stos
popa
pop
pop
mov
ret
mov
sarl
jbe
pop
jge
pop
cmp
out
jge
mov
add
mov
dec
jae
imul
sbb
mov
jmp
and
mov
fisubrl
call
xchg
cmp
mov
or
cld
mov
in
orl
jnp
sub
and
xor
add
stc
sub
cmp
mov
insb
xchg
mov
mov
xchg
scas
call
mov
fmuls
mov
mov
fldln2
pop
cmp
div
pushl
cmpb
jl
incb
dec
mov
jmp
cmp
repnz
adc
or
jle
mov
mov
mov
cli
and
sub
aas
shl
stc
push
adc
jg
std
jecxz
add
sbb
jmp
push
cwtl
xor
outsl
mov
xor
mov
dec
jbe
mov
hlt
movsl
jne
xor
clc
mov
add
seto
pusha
push
cwtl
jge
neg
add
adc
sub
jl
fcompl
cmp
aad
mov
sbb
inc
sub
enter
xchg
aam
in
mov
xor
rcrb
jb
les
inc
pop
subb
lods
shll
inc
les
test
inc
jp
cmpsl
mov
and
push
addb
mov
dec
mov
pop
pop
rorb
dec
or
mov
icebp
or
push
mov
incl
into
mov
mov
ret
and
or
into
nop
rcrb
andl
adc
sbb
mov
xchg
mov
or
or
mov
pop
es
and
adc
add
inc
int3
jne
out
cmpb
enter
jne
test
into
dec
inc
inc
into
jne
inc
or
cmp
rcrb
push
adc
cmp
jne
mov
shrb
add
push
aaa
lcall
roll
les
lea
mov
movsb
push
scas
je
or
sbb
cld
xchg
icebp
loope
jns
dec
lock
ja
adc
shlb
js
subl
lods
add
lcall
inc
lock
data16
stc
jg
add
and
or
mov
js
mov
cmp
bound
mov
pop
dec
or
push
in
jge
sbbb
jg
or
and
lds
jge
mov
les
add
notb
je
out
cmpsb
ficoms
movsb
dec
fcom
insl
fadd
loopne
shr
or
daa
dec
lods
jge
shl
call
add
jo
jne
insb
mov
push
das
int3
mov
mov
rolb
and
add
jge
lcall
add
ficompl
shll
sar
pop
movsl
es
andl
fiadds
push
call
mov
mov
jnp
jb
jo
fdivl
adc
sahf
nop
dec
or
out
orb
push
sbb
jmp
test
or
sub
add
lret
into
repz
ljmp
dec
and
les
jae
cmp
lcall
jne
push
lret
mov
es
sub
add
notb
mov
lsl
adc
rorb
or
call
add
rclb
mov
and
add
push
aaa
add
sahf
scas
out
push
push
inc
rcrb
cmp
lods
add
or
jo
or
lret
lahf
je
or
ljmp
test
pop
jne
cmp
adc
and
add
scas
inc
fdivs
mov
mov
mov
mov
rorl
push
or
lcall
or
pop
sbb
xchg
adc
sahf
mov
insb
inc
cs
or
decl
imul
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
clc
push
add
fldz
call
rolb
gs
lods
mov
adcb
out
clc
adc
addb
push
or
add
insl
adc
jmp
xor
call
popf
xor
fs
push
mov
push
add
adc
push
dec
cmp
popl
add
cmpsl
dec
and
mov
sbb
inc
testb
add
xchg
mov
mov
mov
sar
testb
jbe
or
add
insl
fdivl
xchg
mov
aaa
dec
inc
push
je
std
mov
rorl
lahf
push
cmpl
in
clc
add
mov
std
out
and
dec
cld
push
push
aas
sub
movb
lahf
sub
sbb
mov
push
jecxz
in
and
add
xor
mov
pand
es
cmp
add
add
pushl
and
pop
lret
ljmp
add
repnz
inc
inc
inc
shlb
push
cmp
dec
add
nop
adc
inc
out
mov
dec
jns
les
sub
inc
fs
jbe
mull
ret
or
mov
add
adc
aam
push
rcrb
scas
inc
rorl
movsb
dec
xchg
scas
mov
xor
push
xor
aam
sbb
add
add
or
sub
jne
or
ret
jbe
push
clc
dec
mov
ds
mov
aam
sub
adc
in
add
lahf
adc
xor
shlb
enter
nop
xchg
add
je
push
sbb
cmp
test
adc
or
mov
cltd
sbb
jno
das
add
or
or
in
incl
inc
jns
sbb
sub
call
jecxz
push
cmp
jmp
lock
fldl2t
call
mov
cmp
xchg
push
pop
or
push
dec
adc
pop
scas
dec
pusha
mov
mov
enter
test
adc
xchg
or
jmp
mov
or
mov
lea
into
mov
testb
enter
xor
add
sub
ret
or
mov
pop
push
xor
sub
loope
gs
add
cld
fcompl
dec
scas
scas
cld
dec
je
and
leave
and
add
mov
js
ror
xchg
push
and
popf
mov
xor
ret
fwait
in
js
test
sub
loopne
inc
cmpxchg
jg
ret
daa
xor
or
jne
pop
cmp
call
add
mov
or
and
xor
es
xchg
aam
add
add
in
and
or
sub
jg
ja
sub
or
mov
push
mov
adc
mov
shrl
mov
faddl
arpl
xchg
and
mov
mov
cmp
add
mov
add
dec
or
inc
icebp
shrd
push
jle
std
mov
ss
jl
cmpsb
stos
imul
std
xlat
data16
stc
xchg
stc
inc
add
dec
jmp
mov
clc
sub
dec
sbb
or
sub
cmp
or
loopne
inc
call
push
rolb
mov
xchg
xchg
mov
lock
ret
push
adc
mov
gs
inc
out
and
imul
scas
push
pop
sbb
js
jg
mov
mov
inc
jmp
cmp
call
shl
fidivrl
rorl
and
cli
jae
inc
shll
inc
lods
xchg
push
js
add
jbe
cli
cli
mov
test
jl
jg
lods
jb
mov
ret
dec
dec
inc
xchg
cmp
scas
dec
pop
or
or
nop
add
pop
xchg
mov
xchg
rclb
stc
testb
dec
lahf
es
cmp
cmpsb
push
subl
jbe
xor
sbb
jne
loop
call
jo
or
and
test
add
rcrb
lods
add
push
lock
inc
sub
loopne
cmp
and
jge
mov
jne
cmp
jl
or
and
mov
push
mov
pop
xor
or
mov
out
into
mov
inc
push
xchg
adc
push
nop
test
test
push
mov
andb
enter
shl
jne
cmp
outsb
add
add
ficoms
dec
inc
pusha
movsl
addl
mov
adc
mov
adc
push
insl
push
jmp
loopne
add
insl
cmp
cld
cld
jl
sub
js
or
mov
fisttpll
mov
loop
pop
ret
mov
jns
inc
pop
scas
jge,pt
aam
jle
clc
gs
or
pop
data16
cmpl
add
xchg
int
inc
popa
je
inc
je
dec
and
sarb
jmp
xor
clc
jmp
sub
inc
dec
dec
shrl
add
mov
cmp
fwait
aaa
and
or
xrelease
add
adc
add
jne
fmull
insl
push
pop
clc
fstps
or
or
add
shrl
add
ret
ret
in
adc
add
add
insb
out
dec
sbb
arpl
cmp
and
lods
or
inc
add
inc
dec
cmp
cmp
shr
jb
jmp
jbe
mov
cmpb
jne
jp
push
cmc
and
push
aam
daa
xchg
roll
sub
add
hlt
int3
adc
push
ficoml
clc
push
adc
push
rcl
sub
lods
mov
cld
ja
push
sub
fs
or
inc
cmpsl
jne
jmp
push
nop
add
inc
pop
or
cmovle
mov
or
outsb
xchg
ss
push
cmp
add
or
add
xchg
pop
lcall
andl
or
add
add
or
mov
cmpl
add
push
and
cmp
ds
push
mov
sti
cmpsb
or
and
inc
add
imul
push
pusha
jno
xor
dec
add
mov
repz
xchg
push
jecxz
out
mov
xchg
add
fdivrl
and
adc
pop
mov
jnp
lock
in
pop
lods
cmp
mov
mov
cmp
je
int
lock
or
or
out
pop
cmp
xchg
push
mov
mov
jnp
mov
mov
xor
loope
les
xor
add
sbb
dec
jne
push
popf
cmpsb
out
push
jmp
or
jmp
mulb
mov
or
incl
adc
add
or
or
pop
insl
movsl
and
sub
jne
adc
in
add
mov
mov
outsb
push
sub
xor
jmp
inc
adc
adc
xor
int
pop
add
incl
sbb
cmp
in
push
jecxz
jg
push
or
pusha
fs
push
ror
push
pushf
dec
dec
add
pop
xchg
jns
call
adc
mov
lods
jecxz
divl
sbb
in
dec
mov
fldenv
addr16
jns
jne
int
mov
testb
shll
add
cmpsb
and
mov
aam
push
jnp
push
xor
sub
mov
lret
movl
mov
xchg
pop
in
xlat
add
add
lods
jge
cmp
xlat
jge
imul
cltd
cmp
sbb
push
mov
jb
jb
push
rolb
add
sbb
lahf
lcall
push
cli
cmp
pushl
cld
pop
call
push
inc
jmp
push
jns
inc
addr16
sub
dec
outsl
jbe
and
or
stc
fdivrs
sbb
test
test
sub
push
lea
push
push
testl
movd
les
std
mov
jmp
dec
add
aam
lret
cld
jo
mov
int
xchg
inc
inc
jecxz
fstpl
das
adc
fistpl
inc
in
adc
repz
and
sub
outsl
mov
push
mov
hlt
sbb
push
mov
lea
jb
jle
pop
or
add
mov
mov
add
xchg
mov
add
jmp
or
push
mov
and
adc
sysexit
int3
lods
arpl
push
sahf
ljmp
inc
jmp
shrb
out
mov
adc
adc
xor
scas
mov
nop
cmp
inc
sub
fcoml
sub
cwtl
dec
sub
push
xlat
sbb
xor
loope
pop
inc
repnz
ret
lea
add
xor
push
lcall
ret
aaa
jno
nop
addl
insb
mov
lret
sarl
dec
jo
ljmp
push
lock
int3
cmp
jo
or
jmp
pushf
insb
ret
adc
sbb
les
insl
mov
mov
ret
and
xchg
cmp
jge
adc
adc
and
aaa
or
enter
imulb
dec
loope
push
and
pop
rolb
jg
mov
and
lea
dec
or
fdivp
shr
add
or
cmpsl
add
out
testl
shr
or
pusha
out
mov
add
or
bound
scas
push
bound
cmpsl
mov
sti
in
stos
mov
cmp
sbb
fildl
and
add
int3
cld
push
push
idivl
rolb
adc
fnstcw
inc
jl
add
mov
ds
ja
inc
add
lea
mov
shr
push
mov
mov
adc
sub
push
mov
xor
data16
jae
adc
add
jp
dec
lret
adc
iret
adc
out
or
sar
inc
jbe
xchg
or
mov
pusha
addr16
fdivrs
in
jmp
imul
adc
lock
mov
shl
andl
adc
mov
cmp
add
lcall
mov
shrb
icebp
test
pop
cmp
xchg
lret
je
push
mov
pushw
or
adcl
sub
lods
movsl
and
xchg
mov
popa
pushf
or
leave
repz
insl
jle
into
pushw
lock
jnp
mov
dec
cmp
or
xor
subl
mov
add
call
or
ss
adc
adc
mov
and
inc
mov
jmp
adc
adc
fstpl
lods
or
mov
jle
pop
test
xor
inc
fdivs
cmp
mov
data16
cmp
out
dec
clc
mov
std
fildll
dec
dec
cmp
lock
jl
cmpb
jl
add
xchg
xor
cmpb
idiv
addb
test
inc
mov
mov
sub
lods
adcl
mov
mov
enter
and
icebp
push
ds
xor
adc
and
movsl
jne
aam
ss
mov
cmp
sub
jmp
call
add
daa
je
cmp
add
add
out
aad
fs
and
enter
adc
or
test
jne
jle
jle
jmp
add
roll
inc
mov
test
jp
xor
je
mov
pop
enter
frstor
pop
ljmpw
add
and
loop
ret
sbb
add
rclb
mov
jne
movsw
xor
sub
outsb
rorb
test
dec
add
aam
cltd
add
push
xor
or
ss
pop
mov
push
xor
in
sub
inc
inc
jnp
mov
out
neg
div
fadds
sti
mov
sbb
fmul
sbb
nop
popa
xchg
adc
sbb
addr16
fcoms
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
pop
imul
dec
ret
push
int
jns
fwait
dec
jne
pop
inc
sbb
rcrb
adc
inc
fldt
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
dec
mov
jmp
lcall
xor
jge
mov
bnd
mov
add
je
or
xor
inc
rcrb
cwtl
shrb
lods
add
sub
jno
xlat
or
sbb
and
lds
push
repnz
gs
int
add
into
jbe
jns
or
adc
aas
and
adc
fldcw
pop
lahf
jae
push
test
aam
push
or
xchg
ret
rolb
adc
push
cmp
orl
add
add
xor
sbb
mov
aam
or
sub
gs
add
cmp
mov
ljmp
cs
testl
inc
outsb
xor
dec
pushl
dec
ss
iret
add
xlat
add
xchg
lock
enter
lds
sub
inc
and
leave
jne
and
xchg
jmp
pop
push
cld
lahf
mov
sub
leave
je
mov
mov
mov
sbb
das
or
mov
je
idiv
int
and
mov
push
cmp
ja
add
cmp
adc
jmp
loopne
or
shll
leave
roll
mov
cmp
ljmp
mov
or
push
sub
add
call
ss
cmp
mov
push
lea
mov
and
loope
rclb
mov
sbb
xlat
fmuls
inc
not
je
loop
jecxz
push
push
xor
xor
iret
lea
scas
andb
sbb
xor
or
enter
fwait
add
mov
test
adc
push
sub
xor
lea
in
cmc
push
pop
cld
stos
xorb
ljmp
aad
dec
outsl
pop
inc
sbb
adc
add
jmp
inc
sub
mov
sarb
movsb
rcrb
push
pop
sub
xor
push
movsb
daa
xchg
or
pop
imul
or
or
daa
in
or
in
sbbb
sbb
rolb
or
xchg
aad
cmp
loopne
xchg
xchg
adc
test
lret
std
adc
add
inc
mov
out
sahf
cmpsl
push
rcl
rcl
aad
out
sahf
xlat
fcomp
fildl
dec
sub
xchg
movb
jmp
or
loop
sub
xor
mov
cmp
enter
add
add
mov
mov
add
add
add
push
adc
ret
ret
js
and
sbb
sub
pop
andb
maskmovq
in
fnstsw
jmp
icebp
adc
out
jne
into
cmp
das
or
push
or
push
adc
add
adc
cwtl
fcoms
jecxz
and
or
leave
adc
jmp
idiv
decl
sbb
dec
lea
sar
inc
push
movswl
outsl
popa
outsl
loope
fndisi(8087
push
xlat
xchg
push
mov
mov
into
inc
loop
push
pop
sti
mov
sub
push
loopne
push
mov
push
dec
adc
rol
sti
add
es
pushf
push
jp
mov
aad
jb
test
xorb
or
dec
shll
cwtl
add
hlt
es
or
push
or
mov
xlat
and
and
lea
pop
sbb
loope
lods
fcmovnbe
jae
psubw
ja
arpl
pop
add
and
movb
jns
lcall
pop
loope
loopne
sarl
inc
inc
or
cmp
add
mov
pop
mov
jne
mov
rol
push
shll
push
mov
fstps
push
adc
notb
fcoml
ja
push
or
andl
frstor
ret
movsb
jns
popa
pop
sub
inc
xchg
inc
xor
cmpsb
cwtl
mov
jge
jl
loope
imul
rol
add
lret
jle
jle
or
in
out
jne
lcall
rolb
shl
loop
fcomps
loopne
cmp
rorb
pop
mov
push
lret
cmp
movsl
rol
inc
xchg
mov
sub
pop
mov
shrl
jecxz
adc
mov
loop
jmp
push
push
inc
push
dec
rolb
or
test
test
div
cli
enter
cli
inc
cli
div
adc
scas
mov
dec
popa
inc
jp
loopne
mov
jnp
push
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
dec
lret
and
add
mov
xor
dec
cmp
mov
jecxz
clc
mov
cmp
idivb
lcall
sbb
sbb
enter
ja
jno
lods
cmp
repnz
pushw
rcl
xor
sub
loop
out
jge
inc
out
ja
mulb
inc
out
inc
test
adc
daa
mov
ret
xor
call
orl
cmp
jae
jne
fdivrs
aam
inc
xchg
sub
dec
ss
adc
push
cld
lods
dec
mov
adc
orl
or
adc
mov
push
add
sbb
fcmovu
and
icebp
insl
cmpsb
test
bound
lods
and
inc
inc
and
repz
idiv
sbb
mov
sbb
divb
jb
inc
in
negb
mulb
mov
sbb
out
or
jge
mov
lock
in
movsb
adc
cmp
dec
leave
pop
add
jne
lods
add
loopne
xchg
popa
cltd
mov
pusha
mov
jge
lods
add
pop
sub
and
lahf
mov
movb
inc
incb
add
add
push
nop
sbb
cmp
dec
stos
adc
jle
out
cmp
pusha
hlt
adc
sub
adc
pop
push
pop
shr
sbb
inc
scas
xchg
nop
inc
push
shll
test
jne
sbb
neg
xor
sub
sub
call
imul
imul
pop
sbb
fsubrs
pop
add
xchg
lock
and
push
mov
insb
cmp
jecxz
adc
sti
pushf
out
aas
aad
icebp
and
xchg
mov
ljmp
mov
add
sub
sbb
imull
or
test
in
inc
sbb
dec
movsl
push
dec
pushf
xabort
mov
add
enter
mov
cmp
test
shlb
add
out
dec
lock
outsb
jne
lock
sbb
sbb
testb
lock
inc
add
outsl
inc
ljmp
jmp
dec
nop
dec
mov
dec
cmp
push
std
jmp
jmp
cmpb
or
add
dec
cmp
jae
jb
add
dec
add
xchg
in
incb
sub
orb
pop
add
test
pop
ret
pop
mov
xor
dec
mov
jb
int
mov
push
inc
adc
dec
and
add
push
add
es
movsl
jge
in
add
pop
enter
pop
imul
add
test
sub
inc
outsl
jmp
mov
clc
rcll
push
pop
or
lret
dec
pop
test
scas
or
jae
jbe
jmp
xchg
cmp
push
or
add
or
je
sub
scas
add
adc
movsb
aam
mov
lods
movsb
mov
movsb
mulb
sub
movsl
shlb
add
pusha
dec
inc
pop
add
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
mov
cmp
pop
and
pop
pop
cmpb
cmpps
jne
or
or
aam
dec
pop
pop
or
sbb
dec
cmp
adc
lret
or
fsubl
add
adc
sbb
dec
sub
or
mov
push
push
adc
sahf
xchg
jne
xlat
dec
pop
outsl
push
add
fsubp
movsl
sbb
adc
xor
and
add
jecxz
inc
jge
mov
ret
or
inc
dec
pop
sub
push
push
and
cmp
and
cld
cld
cltd
pusha
inc
mov
adc
out
sbb
inc
stos
jg
adc
and
xchg
or
cwtl
into
xchg
and
int3
jge
inc
loop
nop
mov
stmxcsr
sarb
test
divb
into
or
add
or
sbb
sbb
add
push
loopne
mov
mov
pmaxub
xor
inc
jg
into
cmc
test
pushf
into
into
mov
stos
inc
jb
pop
sub
push
lock
outsl
lock
nop
pop
cwtl
pop
ja
sub
push
mov
not
mov
sub
and
or
pop
std
daa
je
addr16
fistpll
sbb
pop
lcall
roll
or
in
jns
add
add
push
in
or
into
and
ret
je
and
in
mov
sbb
pusha
inc
sub
jmp
cmpsl
adc
mov
lret
out
stos
loope
push
xor
xchg
add
scas
push
push
scas
data16
push
rol
fwait
push
push
add
add
jae
popa
and
xor
pop
fmul
cmp
cld
adc
push
mov
movsl
rolb
mov
sbb
and
dec
pop
rclb
and
cmpb
jle
int3
adc
add
daa
or
and
fwait
dec
add
sbb
pusha
insb
sub
xchg
pushf
push
aaa
in
add
dec
and
mov
loopne
dec
cmpb
mov
aam
xlat
lret
and
aas
test
cwtl
leave
sbb
mov
inc
loopne
andb
in
adc
pusha
movsb
mov
mov
fst
subb
jb
mov
out
je
or
cwtl
gs
rorb
or
xchg
cmp
jbe
inc
inc
or
aas
sahf
call
jle
xor
in
sbb
out
call
push
mov
jo
cmp
dec
or
dec
je
loope
into
and
push
mov
icebp
pop
mov
aam
fbld
mov
sub
stc
repz
sub
mov
test
and
subb
imul
xor
or
inc
lock
sahf
jmp
movsl
xor
add
js
jle
pushl
in
ficompl
pop
fldt
and
test
push
xor
mov
out
je
and
mov
popf
rcr
push
or
xchg
push
mov
inc
out
repnz
jge
sbb
xor
cwtl
cmp
roll
adc
push
out
ds
fcoml
dec
imul
dec
sahf
flds
in
lcall
add
xchg
inc
and
mov
or
fwait
pusha
push
pop
push
adc
enter
cmp
push
adc
mov
addl
pop
add
sub
sub
sub
hlt
es
dec
cmp
or
stc
push
gs
add
mov
sub
push
loopne
scas
sbb
add
and
cltd
inc
loope
stc
jmp
lds
test
gs
push
mov
adc
data16
sbb
sub
fsts
insl
add
mov
sub
add
jmp
xor
adc
jl
dec
dec
and
inc
and
push
shlb
inc
ljmp
shlb
in
xchg
xor
ds
jo
jne
mov
jp
and
sub
movsl
adc
test
roll
lods
outsb
mov
sub
and
push
xor
in
xchg
les
inc
dec
fcomps
ret
pop
add
mov
test
add
sub
mov
and
pusha
jns
cmp
and
dec
roll
push
clc
xor
mov
push
test
sbb
xor
nop
sar
lock
inc
push
add
add
pop
push
pop
jl
adc
xor
adc
test
int3
lock
push
xchg
push
adc
mov
ret
inc
dec
mov
dec
pop
fwait
jae
fsubs
mov
mov
push
jmp
and
cmovg
out
out
rcrb
add
mov
or
js
xchg
mov
inc
aas
fs
mov
je
aad
loopne
sbb
inc
js
pop
or
sbb
inc
movsb
jge
push
sar
fcompl
mov
sbb
movsl
lahf
add
into
rorb
dec
in
inc
je
inc
pop
and
push
repnz
add
and
jo
scas
xor
push
and
add
shrb
mov
pop
cmpsb
inc
hlt
xor
mov
subl
rolb
push
mov
sub
addb
or
dec
testb
add
mov
push
push
mov
pop
adc
sbb
xchg
mov
or
add
pop
jbe
mov
push
xor
push
pop
inc
xlat
add
and
or
add
dec
sarb
add
inc
add
xor
adc
mov
dec
andl
sbbb
imul
cli
or
sbb
sbb
ja
outsb
or
loop
xor
mov
and
shr
adc
and
jl
and
sub
popa
stos
outsl
cmpsb
mov
cvttps2pi
mov
or
fs
por
out
test
lods
fld
push
xchg
fildll
xor
fsubrp
test
jns
fsts
or
icebp
add
add
lahf
jnp
insb
sub
pop
xor
in
cmp
mov
int
fcomp
adc
test
mov
pop
aad
rcrl
pop
cld
fildl
loop
mov
mov
shl
insl
jbe
fadd
add
pop
xchg
add
mov
popa
push
fs
sub
outsl
inc
mov
clc
icebp
sub
fwait
in
aaa
shrb
hlt
push
les
cmp
pop
fidivrs
fs
cmpsb
mov
popa
lock
cld
adc
adc
daa
stc
inc
and
inc
sub
or
adc
loope
and
xchg
fstpt
jbe
adc
adc
or
adc
sbb
mov
adc
cmpsl
inc
les
add
rorl
inc
cltd
fisubrs
cs
sub
imul
jp
xlat
in
push
pop
dec
sub
sbb
lock
scas
and
arpl
adcb
adc
pop
outsb
add
dec
or
sub
lret
adc
xor
lcall
and
enter
pusha
mov
sub
jb
mov
pop
mov
cmp
cltd
mov
in
push
sti
dec
or
dec
cmp
insb
imul
out
and
test
out
add
pop
test
or
sbb
cmpsl
ss
inc
js
shlb
mov
sti
adc
xor
add
call
xchg
das
std
pushf
stc
dec
xchg
cld
arpl
imul
andb
adc
icebp
add
ja
xchg
loopne
and
sbb
dec
cld
popa
push
or
sub
mov
jo
add
add
pop
xchg
jle
inc
or
push
insb
add
jge
sbb
adc
push
inc
mov
sbb
ja
fstpt
sbbl
xor
push
fistpl
imul
inc
xchg
cmc
gs
cmp
or
and
repnz
icebp
jle
dec
test
jg
adc
mov
pop
lcall
add
sarl
or
jmp
sbb
xor
pop
sub
call
cmp
lock
fadds
in
into
push
sub
jo
push
mov
sbb
and
sbb
ss
in
inc
mov
or
or
imul
fs
dec
cmp
or
mov
mov
lahf
lret
dec
dec
and
cwtl
hlt
inc
sub
mov
ret
lods
ss
xor
frstor
and
and
hlt
in
aad
insb
aas
mov
lds
and
inc
pop
and
mov
scas
inc
daa
lea
test
or
sahf
cld
mov
inc
movl
lds
and
or
int3
cwtl
push
cmpsl
push
add
aas
int
and
aam
ljmp
gs
push
inc
inc
shrl
testb
repnz
test
sbb
in
sub
pop
shl
in
mov
add
inc
loopne
mov
loopne
mov
cltd
mov
mov
xchg
mov
sbb
mov
fmuls
cmp
cwtl
lahf
jg
jae
add
les
pop
pop
jge
lods
insl
inc
cmp
je
test
mov
jo
insl
shl
dec
or
dec
mov
insl
inc
or
or
adc
sbb
push
pushl
leave
xchg
fcom
ja
sub
aaa
cltd
mov
and
mov
popf
cmp
jge
sahf
mov
in
xchg
and
nop
ret
in
cmp
out
adc
and
and
inc
aas
inc
or
cmovbe
pop
dec
sti
fs
nop
jle
mov
push
pop
aam
arpl
sub
ret
cmpsb
jp
fidivs
mov
jo
adc
adc
orl
and
ret
imul
add
mov
or
add
add
xchg
sub
loope
sti
jg
aas
cmp
jle
testb
lahf
les
pushf
sbb
or
cvtpi2ps
add
bound
inc
and
push
test
add
mov
aaa
lahf
or
jg
shll
lods
lods
ljmp
pop
jl
sbb
and
xor
fmul
xchg
or
add
inc
lret
outsl
sarl
loopne
dec
inc
ret
dec
inc
add
fldcw
add
int3
les
or
mov
dec
mov
xor
pop
in
int3
test
mov
sbb
icebp
aaa
loope
fadds
rcl
ss
inc
clc
rorb
xor
iret
test
lret
mov
xor
push
in
xor
sbb
gs
pop
cmp
cmpsb
sbb
cmpl
adc
ret
ja
inc
or
sbb
push
popa
and
sarb
add
shlb
fnstcw
inc
or
jbe
subb
fwait
loope
ss
loopne
lret
cmpsl
and
pusha
cs
outsb
fcomps
pop
mov
xor
rolb
mov
cmp
inc
push
pop
cmp
movsl
and
movsb
frstor
sbb
lods
adc
subl
int3
cmp
enter
jmp
jb
testl
cmpsb
data16
and
dec
push
xchg
pusha
or
test
pop
test
js
cld
or
cmp
xor
push
mov
adc
fldl
xchg
add
and
adc
xchg
flds
inc
dec
adc
addr16
cmp
push
into
cmp
bound
je
fsubr
or
stos
cltd
aam
or
mov
stos
mov
adc
cmp
mov
dec
jl
push
imul
or
je
xchg
in
or
je
mov
sbb
roll
sub
cmp
sbb
testb
inc
cmpsb
cmpl
xor
scas
push
inc
mov
ret
cmp
mov
inc
sbb
cld
jle
xchg
add
and
adc
jnp
pop
les
mov
pop
push
cmp
push
test
adc
pop
ja
orb
jmp
loopne
inc
mov
cmp
adc
xchg
je
adcl
lea
mov
mov
sub
xlat
shrl
pushl
push
icebp
enter
test
cli
inc
cs
fildl
or
cmp
or
xchg
inc
mov
and
jmp
aas
mov
mov
out
repnz
adc
jae
cmc
and
pop
inc
cmp
xchg
push
pop
mov
adc
jp
pop
dec
push
ljmp
cltd
xor
mov
outsl
addr16
jae
push
cmp
jl
mov
inc
sbb
sbb
add
les
dec
hlt
scas
dec
idiv
dec
ljmp
add
and
push
jge
inc
jmp
pop
mov
fld
into
push
ljmp
fs
andl
sub
inc
add
mov
cld
cli
adc
in
dec
or
pushf
xor
push
stos
mov
add
mov
pusha
cmp
scas
mov
sub
xor
sahf
adc
adc
lods
and
cmc
mov
scas
or
dec
push
loopne,pt
shll
adcb
xlat
cmc
jle
sbb
jne
jmp
fistpl
fadd
in
rcll
cmp
adc
pop
pop
mov
movsl
stos
hlt
xchg
fidivs
into
pop
jle
sbbl
push
mov
out
clc
xor
inc
mov
roll
dec
mov
nop
roll
std
or
jp
dec
push
pop
mov
add
and
push
in
sbb
jbe
jno
mov
addb
xor
xchg
mov
sbb
pop
pop
cmp
jl
add
nop
cmpsl
dec
ret
add
cs
je
dec
mov
and
pusha
jbe
sub
test
stos
loopne
sbb
cwtl
sbb
daa
jg
adc
orl
call
lret
pop
hlt
cmp
loopnew
push
xchg
cmp
adc
lock
pusha
add
sub
xor
inc
add
dec
std
pop
sar
loopne
cld
pop
std
jb
nop
movsb
push
mov
adcb
pop
or
add
out
cmp
mov
push
ljmp
mov
test
pusha
adc
pop
sbb
out
jbe
inc
aad
or
lret
mov
push
mov
lret
pop
lods
sti
xchg
cwtl
dec
xor
adc
pusha
mov
mov
cld
incl
call
cmp
je
cmp
adc
cmp
jb
testb
outsl
mov
inc
add
int3
mov
mov
push
rorb
jge
push
jmp
mov
mov
inc
movb
mov
jb
je
data16
fcomip
jb
cmp
jbe
mov
push
or
inc
xchg
cwtl
lret
mul
mov
adc
shr
jmp
das
jge
pop
xor
aas
mov
icebp
adc
adc
test
or
push
pop
xor
in
outsb
int
or
push
pop
es
jmp
dec
sbb
push
jbe
sub
cmp
push
inc
pop
pop
pop
add
fnstsw
out
or
inc
iret
and
sarl
inc
sbb
xchg
xor
lea
fs
inc
imul
pop
xchg
adc
dec
adc
iret
mov
add
rorb
push
or
shlb
dec
pop
nop
inc
pop
fs
pop
test
lods
subb
push
jge
fs
cmpsb
inc
or
hlt
cmp
xor
call
testb
imul
dec
rcll
push
test
popa
inc
enter
xor
add
ret
pop
in
inc
rorl
sub
inc
imul
jl
call
inc
je
in
jne
xlat
mov
xchg
or
ja
ret
and
and
jl
das
adc
sbb
jne
in
mov
cmp
xchg
or
inc
adc
lret
out
add
pop
dec
sti
mov
movsb
cld
dec
insl
cs
add
mov
add
lock
or
sbb
jnp
add
insb
insl
ljmp
mov
data16
cmpsb
dec
repnz
and
adc
in
insl
fwait
cmpsl
push
in
adcb
aas
push
jb
sub
and
push
test
call
xor
xchg
les
and
cmp
lcall
cmpsb
mov
leave
call
aam
pushf
fmull
adc
lar
jbe
inc
outsl
movsl
fadds
cmpsb
push
rol
scas
iret
jo
outsl
xchg
lock
in
mov
aaa
dec
shrl
mov
lock
pop
hlt
add
ljmp
and
sahf
mov
inc
inc
loopne
and
enter
xchg
push
inc
jo
fnstsw
decb
or
je
add
jno
fs
mov
movsb
sahf
and
shrl
cltd
mov
leave
push
insl
xor
and
dec
cmp
xor
lock
sbb
xor
js
lcall
out
stos
mov
sbb
jecxz
fwait
cmp
aam
cltd
mov
in
call
rorb
jae
pusha
dec
or
sub
pop
push
and
insb
mov
add
add
dec
cmp
dec
xor
and
sbb
xor
and
and
xor
and
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
imul
sbb
aam
jge
add
mov
inc
jp
rol
inc
mov
int3
pmulhuw
rcl
loopne
inc
lcall
imul
je
cld
inc
xchg
sbb
nop
clc
mov
lock
roll
loopne
mov
hlt
add
or
push
dec
xor
and
add
pop
aam
xchg
fsubl
sar
inc
sbb
mov
cmp
xor
sbb
rcrb
popf
mov
addr16
inc
jbe
sub
jo
mov
addb
fisubl
enter
mov
push
fadds
ret
and
inc
bound
dec
adc
shlb
xor
lods
cmpsl
sbb
js
aaa
and
and
aas
mov
test
mov
das
pop
movsb
lods
pop
xor
lods
mov
xor
test
fcomp
addl
push
adc
in
ficompl
call
cmc
fdivrs
jmp
daa
leave
jo
add
jecxz
cmpsl
dec
adc
or
cs
jns
enter
or
mov
leave
and
mov
repnz
lea
and
jno
adc
call
or
push
subl
mov
out
push
andb
lock
mov
fsts
sbb
xchg
mov
inc
jl
arpl
insb
loopne
dec
push
sbb
mov
xor
sar
push
in
cmp
ret
adc
xchg
inc
mov
cmc
xchg
cli
cmp
xor
jge
rcll
mov
pusha
sub
arpl
add
stc
or
std
sub
out
out
cmp
mov
movsb
cmpb
fdivs
pop
add
fdivrs
in
in
push
add
and
fcomps
xor
je
leave
sti
nop
jle
adc
and
jle
lock
loope
push
adc
lock
pop
test
lods
jb
jb
mov
mov
jb
enter
jne
rcl
inc
les
imul
nop
orb
push
mov
stc
push
cmp
sbb
add
je
shrb
faddl
enter
orl
mul
shlb
or
xchg
fcoms
add
stos
pop
aas
nopl
fmull
shrl
jp
sub
test
and
enter
cmpb
dec
sbb
out
outsl
or
aam
test
push
adc
inc
adc
xor
sarl
or
or
arpl
shll
call
aam
jp
movnti
xor
sub
sub
imul
js
fsts
add
mov
or
or
mov
add
sbb
stos
les
xor
jne
mov
js
pop
add
and
add
fs
into
inc
lret
shl
scas
pusha
lret
add
push
sbb
aam
pop
ret
out
fisttps
adc
dec
sbb
mov
xchg
adc
pop
push
pop
pop
cltd
pusha
cmpsb
dec
jb
inc
add
stos
jo
adc
dec
jl
add
and
xchg
jg
xchg
add
mov
dec
outsl
mov
push
das
or
pop
rolb
test
mov
orb
mov
or
dec
les
adc
lea
imul
jl
pop
ficompl
jecxz
add
cmp
in
cmp
outsl
adc
jbe
lods
cmp
nop
add
ret
jne
adc
pop
fistpll
call
and
fisttps
push
lock
cltd
mov
lret
test
loopne
movsb
add
mov
and
lea
cmpl
daa
cmp
sub
or
and
sbb
xchg
and
idivl
mov
inc
sbbb
insb
movsb
addb
jmp
fistl
inc
dec
enter
or
lock
or
mov
xchg
or
enter
or
or
or
jb
xchg
mov
push
in
aaa
call
call
jne
mov
insl
rorl
adc
xor
rolb
inc
push
or
enter
les
dec
jmp
dec
adc
mov
out
movsl
sbb
leave
mov
xlat
insb
mov
mov
mov
pop
loopne
dec
lds
mov
pop
lea
fsubrl
mov
aas
cmp
inc
movsb
inc
jle
cmp
sub
fs
repnz
inc
aad
pop
xor
sbb
dec
les
scas
mov
jge
nop
fwait
movsb
xchg
insb
addb
inc
mov
or
mov
std
cmc
mov
sbb
nop
mov
cmp
pop
lock
popa
adc
mov
and
pusha
jne
mov
movsb
es
xchg
rcll
push
mov
outsl
call
cmpb
or
addb
js
mov
mov
inc
andl
mov
or
or
adc
jno
scas
cmp
dec
sbb
fwait
mov
jns
xor
cmp
add
int3
jae
xchg
add
sti
movsl
or
test
clc
sub
popa
xchg
xor
rcrl
cmp
popf
mov
lods
outsb
adcb
mov
rcll
sbb
xlat
enter
dec
push
lock
inc
adc
and
or
or
fwait
nop
inc
dec
cmp
lods
nop
jb
jb
enter
jb
jb
mov
jb
xchg
cwtl
mov
shrl
mov
adc
pop
shrb
sbb
xchg
cmc
test
mov
xchg
enter
insl
call
pop
test
loopne
stos
mov
jns
outsl
sbbb
and
jne
data16
mov
outsb
shl
popa
pop
xchg
lods
xchg
movsb
add
lcall
sbb
pop
xor
mov
or
adc
inc
scas
inc
mov
or
pushf
cwtl
cmp
inc
cs
mov
in
adc
or
aas
jmp
fdiv
adc
test
and
dec
loope
rcl
pop
or
push
or
dec
test
sub
add
adc
add
mov
or
xchg
mov
iret
nop
add
lock
dec
mov
dec
ja
jae
in
nop
enter
in
call
lock
add
imul
mov
pop
inc
cwtl
jg
test
and
in
push
test
ret
and
mov
sub
sbb
addr16
inc
mov
or
fcompl
sub
in
addl
dec
lcall
sub
sbb
paddusb
pop
in
fistl
sub
inc
int3
movsl
les
push
mov
psubusb
xor
mov
imul
shlb
add
and
loopne
sub
mov
or
ret
int
shlb
adc
ret
add
pushf
add
rolb
je
mov
add
das
or
xchg
xchg
std
mov
sub
mov
adcl
push
add
and
add
insb
cwtl
movsb
adc
pushf
mov
inc
pop
or
nop
std
leave
and
xchg
cmp
sbb
cmp
cmp
inc
ficomps
push
ret
in
imul
pushf
mov
les
mov
sub
inc
repnz
test
jb
dec
sti
add
lret
adc
add
xor
clc
call
loope
mov
xor
insb
mov
rorb
arpl
and
push
ret
stc
lods
mov
js
or
adc
aaa
mov
mov
aas
inc
les
mov
xor
mov
xchg
mov
xchg
push
mov
cld
mov
dec
dec
insb
mov
cs
mov
sub
mov
jg
push
mov
jg
dec
fildll
or
nop
inc
stos
in
xor
sub
mov
aas
inc
xchg
inc
and
push
enter
sti
sar
int3
sti
daa
test
xorl
icebp
pop
pop
mov
xchg
popf
test
add
mov
into
enter
mov
cmp
jg
adc
and
mov
cmc
cwtl
in
mov
jne
pushf
loope
aaa
test
or
push
fsub
or
arpl
mov
enter
add
fadds
imul
adc
pop
test
inc
pop
les
lods
sbb
aaa
lods
xor
mov
int3
xchg
rcrb
sbb
or
lea
push
nop
dec
test
jl
sbb
lahf
push
mov
or
adc
test
sbb
out
sub
pusha
mov
push
shll
fs
adc
inc
ret
pusha
out
out
add
call
or
push
test
lods
mov
ret
pop
jbe
pop
dec
mov
rorb
cmp
dec
adc
test
popl
loopne
jg
test
xchg
xor
push
rorl
jmp
and
jae
mov
inc
movsb
or
or
and
sbb
xor
pinsrw
adc
mov
xor
adc
adc
or
push
adc
in
addb
mov
pop
insb
sbb
loope
stos
nop
dec
int3
shlb
inc
fdivrs
shll
inc
cmpsb
addb
nop
push
xchg
in
mov
adc
push
imul
or
out
and
dec
lods
ljmp
dec
shll
mov
mov
lods
test
ret
cmc
lods
sti
ret
dec
lret
mov
movsb
loopne
xchg
cwtl
sub
push
test
call
and
je
iret
add
add
gs
pop
add
loopne
shlb
mov
fisubrl
aas
add
test
test
enter
bound
aam
popf
or
xor
movsl
xchg
sub
or
jno
insb
or
add
rclb
jo
mov
pop
push
xor
jno
cmpsb
xchg
nop
push
or
inc
dec
dec
stos
or
clc
push
mov
arpl
pop
push
add
mov
adc
dec
push
mov
ljmp
and
push
xor
outsl
sub
dec
sahf
dec
scas
rcl
int3
mov
fcoms
popa
adc
pcmpeqb
and
inc
int3
push
mov
fimuls
or
inc
push
xchg
xor
loopne
pop
inc
dec
or
daa
mov
cmp
xchg
fwait
pop
aam
add
adc
xchg
adc
fsubs
dec
mov
xchg
inc
mov
cmp
mov
push
sub
popl
shrl
jl
add
fcoms
inc
fidivl
fnstsw
fdivrl
and
adc
mov
xor
rorb
pop
sbbb
inc
mov
xorb
sub
je
test
lock
in
pusha
fldcw
insb
js
adc
lea
insb
cltd
add
and
xchg
inc
test
xor
rorb
add
and
mull
xor
and
xchg
fwait
dec
inc
sub
bound
xchg
insl
and
jne
cmova
add
mov
lret
add
lods
sbb
test
push
and
or
cltd
nop
lret
adc
and
jl
es
mov
mov
shll
cmp
add
dec
daa
ficompl
sub
mov
sub
lahf
or
pop
ret
cmp
imul
xor
xchg
mov
fcoms
faddl
sub
imul
sbb
or
and
sub
in
in
and
push
add
les
or
test
and
push
insb
test
xchg
in
pop
in
mov
in
mov
mov
mov
xchg
dec
adc
gs
subl
pop
insb
je
adc
mov
test
mov
pop
cmpl
pop
dec
mov
dec
js
inc
xchg
dec
cmp
xor
inc
inc
nop
and
fs
cmp
pusha
and
pop
pop
xchg
xor
cltd
loopne
inc
repnz
pop
sar
cwtl
mov
outsb
bsf
addr16
cmpsl
dec
lods
pop
add
dec
jg
fsubl
push
fcoms
pop
lods
jo
pusha
popf
les
imul
int3
add
nop
inc
mov
cmp
sti
or
es
or
out
and
mov
mov
inc
mov
and
sysenter
xor
jge
int3
icebp
pop
push
add
gs
insb
dec
push
movsb
add
add
inc
cs
mov
mov
negl
fnstenv
ficoml
out
mov
popa
and
sbb
push
xchg
inc
stos
mov
loopne
jg
das
stc
push
xchg
add
push
in
fisubl
cmp
xchg
sub
pop
das
xchg
addr16
data16
or
mov
inc
imul
in
std
cmp
bound
leave
inc
adcl
fsubrs
or
add
aas
lock
stos
dec
xor
pop
push
pop
loope
aam
daa
mov
add
insb
insb
mov
addl
adc
call
and
imul
in
adcl
adc
xchg
test
lret
lock
vmovntps
js
adc
stc
add
xor
add
lahf
xchg
hlt
call
cmp
in
dec
push
xchg
scas
ljmp
sub
adc
pop
mov
bound
inc
push
mov
icebp
mov
push
movsl
iret
enter
pop
clc
rclb
inc
mov
push
call
adc
cwtl
test
adc
or
in
add
ret
add
add
adc
pop
enter
aam
ret
push
sub
ret
insl
ss
mov
mov
arpl
rorl
pusha
or
adc
mov
cs
or
in
in
mov
adc
dec
sub
in
loopne
or
leave
gs
cmpsb
je
sti
mov
push
push
mov
in
or
lcall
adc
lock
je
push
shr
mov
in
push
loop
inc
add
rcr
push
jmp
mov
enter
inc
xor
dec
es
imul
pop
insl
es
fs
pusha
push
pop
dec
scas
or
adcb
inc
xchg
imul
xor
inc
sar
leave
mov
cld
shll
sbb
jne
in
dec
es
pushf
mov
dec
lods
mov
mov
imul
leave
and
cmp
aam
aaa
adc
cmp
dec
or
loopne
dec
pop
or
lahf
pop
insl
xchg
scas
push
nop
xchg
cmp
lods
in
int
addr16
or
dec
cltd
mov
test
push
jns
and
lret
lods
sub
add
dec
mov
mov
pop
mov
mov
ret
pop
lahf
sbb
imul
cmp
das
sub
aam
sbb
pop
loopne
push
add
nop
inc
cmpsb
cltd
mov
popa
cmp
jb
xadd
mov
outsl
xchg
jo
fists
mov
mov
insl
xchg
or
and
clc
mov
and
leave
mov
adc
pusha
xlat
shll
xchg
add
sbb
loopne
mov
add
dec
sbb
or
enter
imul
mov
pop
incl
in
pop
test
adc
lahf
mov
lods
test
cmpl
add
xchg
cmp
or
mov
jge
rorb
inc
dec
lods
in
adc
pop
nop
adc
sbb
jmp
test
cmp
push
sbb
in
divl
mov
inc
xchg
sub
mov
aam
nop
add
fadd
in
push
cmp
sbb
clc
adc
lock
add
arpl
mov
daa
fists
pop
and
imul
clc
jmp
adc
adc
sub
adc
cmpsb
fsubrs
pop
xchg
mov
hlt
lock
add
dec
jg
sbb
add
push
xor
fsub
adc
aad
clc
cs
ret
push
cmp
rol
sub
incl
mov
jo
or
jne
dec
pushf
pop
inc
push
add
test
insl
xchg
imul
inc
and
mov
leave
mov
in
lock
cltd
pusha
cmp
and
dec
dec
dec
push
scas
movsl
dec
xor
inc
scas
js
sbb
adc
sub
push
fs
in
popf
pop
sti
dec
clc
cli
insb
enter
inc
add
push
imul
movzbl
add
sti
jns
sub
sti
in
mov
cli
and
or
adc
imul
mov
mov
in
bswap
pop
pop
ret
mov
mov
add
iret
lods
pop
pop
cwtl
mov
mov
mov
nop
fistl
or
sbbb
add
sub
faddl
lret
iret
call
mov
adc
push
fcom
jg
fmuls
add
inc
push
add
or
lods
imull
cmp
inc
mov
lahf
dec
dec
in
addl
or
xchg
out
adc
adc
test
and
ss
sub
in
dec
adc
mov
fs
push
xchg
clc
cmpb
or
push
decb
mov
enter
ror
add
jbe
mov
push
sarb
sub
shl
dec
push
pop
inc
adc
pop
adc
add
pusha
or
aaa
int
fists
push
loope
push
loopne
jecxz
push
push
add
test
jne
icebp
je
adc
mov
dec
incl
mov
imul
loope
roll
gs
and
push
in
fs
dec
aas
adc
inc
fimull
sbb
xor
in
in
adc
div
loop
aaa
jmp
filds
sbb
xchg
ret
push
lods
fcompl
cmp
adc
add
in
add
andb
lahf
out
push
dec
gs
mov
out
xor
nop
pop
out
dec
mov
data16
divb
inc
cs
inc
add
imul
shr
outsl
rolb
loopne
decl
mov
mov
mov
ljmp
add
fistpl
or
in
shlb
sbb
mov
stos
pop
and
ud0
fld
or
mov
rcll
xchg
adc
or
cmp
add
adc
mov
out
cmp
pop
repz
out
test
cmp
sub
je
jb
outsl
arpl
fs
outsl
jge
sti
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
insb
push
bound
and
jle
mov
imul
add
add
aas
rdpmc
add
lidtl
pop
sub
or
mov
jbe
outsl
push
inc
outsl
jb
js
je
jb
gs
cmp
or
notb
or
jb
add
dec
add
or
push
xor
je
push
je
nop
dec
mov
popa
jb
stos
inc
imul
scas
dec
lods
fisttpll
add
arpl
out
insl
cmp
dec
and
jns
out
lcall
adc
push
dec
push
inc
mov
gs
insl
bound
daa
dec
outsl
jbe
xchg
je
adc
jo
sub
xor
mov
dec
jne
xchg
xchg
mov
inc
jo
imul
bound
cmp
insb
adc
cmp
scas
cmpsl
xchg
popl
xor
pushf
jg
addr16
push
jne
imul
adc
and
daa
int3
fimuls
mov
sbb
dec
into
fdecstp
push
andb
jne
xchg
int
pushf
jae
dec
inc
ds
popa
das
jo
push
push
lods
push
lock
jb
mov
sbb
orb
dec
lcall
es
sub
sub
sub
cs
xor
pushl
xor
xor
ss
cmp
cmp
cmp
ds
inc
xchg
dec
std
fistps
inc
inc
dec
dec
dec
dec
dec
dec
dec
and
push
push
or
pop
pop
pop
dec
jg
je
popa
bound
gs
imul
jno
cmpsb
sbb
js
ja
movsb
jnp
jge
jg
lret
add
inc
dec
imul
into
dec
add
or
jl
jnp
dec
xor
push
inc
insb
jae
inc
divl
test
push
and
push
jne
dec
xchg
jl
inc
inc
jge
push
fstps
insl
and
jb
mov
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
xor
insb
imul
and
mov
je,pn
in
xchg
adc
and
xorb
clc
loope
mov
mull
and
inc
add
je
or
subb
inc
popa
and
daa
pop
mov
xor
and
insl
inc
lock
adc
inc
cs
loopne
ror
sub
mov
jmp
push
scas
mov
lcall
in
sbb
add
je
xchg
or
and
lret
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
inc
push
mov
add
and
push
add
cmpb
mov
mov
and
femms
aaa
cmpb
mov
inc
add
sub
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
sub
negl
sub
out
xor
int3
or
xor
cmp
push
lcall
xchg
loop
push
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
arpl
xchg
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
pop
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
mov
jg
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
daa
push
push
push
xchg
add
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
inc
jne
xchg
jecxz
xor
imul
xchg
adc
add
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
fnstcw
pop
hlt
and
or
pusha
add
out
int3
mov
or
sub
add
div
in
sbb
addb
add
xchg
mov
add
orb
fildll
cmpb
push
and
sub
jb
lods
fnstcw
adc
push
jo
add
mov
inc
add
cmp
inc
inc
int3
js
jo
add
add
loope
cmpl
dec
mov
push
rorb
add
cmp
lea
mov
nop
xchg
xchg
data16
dec
cs
popa
lret
dec
sub
sub
dec
jo
adc
pop
add
or
pushf
adc
or
pushf
jo
dec
pop
daa
pushf
jo
data16
nop
push
mov
jnp
adc
and
sub
leave
push
leave
and
adc
xorl
orb
pop
add
stos
and
add
sub
sub
rorl
mov
add
add
sub
push
and
cmpsl
or
incl
adc
in
pusha
imul
add
inc
mov
mov
shr
cmp
inc
pop
and
loope
cmp
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
jl
stos
aam
mov
in
dec
imul
sbb
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
int
cmp
inc
jl
jle
sub
inc
pop
out
ds
jbe
sub
sub
push
mov
inc
jmp
cmp
and
add
jb
ja
dec
pop
pop
cwtl
jb
sbb
xor
in
das
jo
ss
mov
push
cmp
test
and
mov
inc
jo
sub
mov
jl
lahf
fs
jns
ja
mov
inc
add
out
sahf
push
dec
inc
xor
in
repz
insb
dec
xchg
jmp
fs
sub
lock
iret
repz
adc
or
add
jnp
cmpsl
stc
hlt
out
lock
push
in
call
mov
xor
js
iret
repz
in
xor
cmp
loopne
idivl
jns
push
aam
mov
repz
mov
enter
mov
mov
test
repz
repz
out
cmp
pop
push
cmp
cld
out
sahf
out
sahf
fdivrl
dec
repz
lock
aam
shl
iret
repz
mov
inc
and
in
pop
push
lods
sti
cmp
repz
jmp
dec
lods
sbb
pop
aam
test
test
shlb
or
outsb
push
xor
data16
xchg
push
ljmp
sub
push
push
repnz
mov
sbb
je
ljmp
lar
cmpsl
aam
pcmpgtw
xor
sub
mov
incl
dec
jae
cltd
lods
insb
push
insb
inc
mov
sbb
xchg
jnp
push
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
add
sub
adc
jg
enter
into
mov
mov
pushl
inc
jnp
inc
loop
mov
ds
pop
adc
dec
sahf
jg
lret
sbb
jb
xchg
jge
arpl
cmp
test
adc
dec
scas
jp
adc
fisubrs
or
mov
and
cmp
dec
imul
aas
iret
lret
add
inc
mov
mov
sub
testl
inc
sbb
pop
jns
ds
xor
lcall
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
mov
jmp
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
cld
lcall
imul
or
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
cld
pop
push
sahf
mov
pop
leave
loop
mov
xchg
dec
dec
movsb
outsb
aam
lods
pop
push
xor
addb
pop
jle
into
or
icebp
pop
pop
repnz
adc
hlt
and
es
cmp
flds
ja
xchg
sub
mov
or
mov
out
leave
ljmp
add
test
push
push
inc
inc
or
outsb
jbe
add
inc
es
lock
mov
lahf
sub
mov
push
sbb
cmp
out
and
and
sub
dec
xor
sub
cmp
xor
push
sbb
insl
lods
std
incl
push
or
xor
or
add
dec
sbb
dec
mov
push
jb
jbe
cmp
dec
sub
dec
xor
add
fucomp
int
inc
or
sub
pop
dec
dec
push
sbb
sbb
sbb
out
fidivrs
dec
dec
push
cmp
push
pop
aas
dec
or
and
push
lock
and
lods
xor
push
ret
inc
and
fistpll
xor
inc
inc
adc
xor
adc
pop
cmp
sub
cmp
dec
pop
cmp
add
ds
idiv
testl
das
das
inc
adc
inc
dec
pop
pop
push
dec
pop
pop
push
pop
cmp
sub
cmp
adc
cmp
adc
push
dec
cmp
cmp
jge
inc
ss
mov
pop
dec
sbb
fisttpl
push
dec
or
mov
daa
stc
dec
and
sbb
and
push
test
je
lea
xor
sbb
xor
pop
dec
pop
sbb
cmp
cmp
dec
cmp
adc
push
inc
in
sti
or
es
sbb
pop
fisubrl
sbb
xor
cmp
call
dec
sub
sub
mov
outsl
sub
push
cmpb
dec
cmp
and
push
dec
inc
add
imul
pop
jb
push
cwtl
mov
in
out
inc
and
cmp
jae
xchg
das
cs
pop
dec
pop
xor
and
adc
pop
push
cmp
daa
clc
push
dec
add
add
mov
negb
ja
dec
inc
sub
clc
xchg
sbb
cmp
jg
inc
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
sahf
out
sbb
push
xor
ds
movsl
stc
push
loopne
pusha
push
jo
xor
mov
loopne
lock
inc
sahf
out
out
outsl
jg
xor
jo
lahf
out
pusha
and
xor
push
das
testl
addl
mov
aam
add
push
popa
push
clc
or
pop
and
test
mov
mov
or
push
popa
loop
add
inc
xor
imul
push
cwtl
rcrb
push
decb
sub
push
or
aaa
sbb
mov
loopne
scas
cmp
sbb
adc
push
nop
mov
stc
add
pusha
mov
mov
lock
nop
push
loopne
in
stos
push
pop
push
pusha
es
push
ds
sub
xor
pushf
cmpsb
lds
or
sbb
les
push
pop
lods
sarl
icebp
push
cs
add
ret
notl
mov
add
cmp
xor
ss
adc
mov
pop
pop
js
inc
jbe
mov
ja
push
or
pop
or
push
dec
inc
or
cmp
nop
pop
or
shl
jmp
dec
sub
push
push
cmp
push
pop
add
insl
push
jnp
fcoms
jb
xor
mov
adc
fnsave
push
or
push
push
clc
fmuls
lds
cmp
pop
es
in
lods
sub
sub
pusha
sub
add
lds
dec
push
lret
or
jp
sbb
dec
add
in
out
in
sbb
dec
cmp
adc
mov
ja
ja
sub
xor
ret
cld
xor
pop
sbb
fs
pop
dec
add
jecxz
sbb
mov
scas
btr
jge
add
cmp
outsb
jo
shll
pop
push
sbb
pop
test
cmp
fs
daa
ss
rorb
sbb
scas
out
jl
sbb
cmp
dec
push
pusha
sub
fisubrl
cs
adc
xor
lret
cmpsb
out
inc
sub
push
cmp
push
daa
push
jae
shll
sahf
adc
inc
pop
xor
lods
mov
pop
or
or
add
xor
stos
pop
add
and
gs
or
push
jle
cmp
scas
xor
pop
sbb
pop
cmp
sub
inc
pop
xor
inc
add
push
mov
mov
xchg
mov
xchg
lcall
test
xchg
and
dec
and
pop
adc
push
and
sbb
pop
sub
xor
xchg
inc
mov
clc
sbb
in
sub
fisubs
imul
xor
sub
jle
loop
jb
adc
jne
jo
int
xor
in
adc
lds
sbb
mov
das
cwtl
shll
popa
push
sbb
push
jmp
xor
dec
or
sbb
lods
lcall
in
ficompl
xor
add
xor
cmp
sbb
pslld
in
add
cmp
add
add
addr16
and
dec
ja
mov
jne
push
jbe
xchg
icebp
push
push
dec
pop
sbbl
add
cmp
dec
dec
adc
lret
mov
add
push
sbb
outsb
rcrl
ds
movsl
ljmp
pop
xor
sub
add
bound
jle
jbe
mov
mov
push
xchg
inc
daa
popf
insl
andb
lcall
pusha
adcl
xchg
sub
push
add
and
cmp
push
jge
jo
add
in
scas
out
xor
sbb
pop
push
and
jmp
call
sbb
addb
pop
sbb
fcmovnb
cltd
lcall
adcl
decb
or
or
scas
mov
dec
add
or
add
mov
pop
call
xor
jl
xchg
fs
or
mov
mov
push
insb
js
sub
xor
sbbb
fs
cmp
push
add
outsl
hlt
idivl
push
xor
push
cmpl
inc
pop
or
jnp
xor
add
adc
cmp
sub
rclb
inc
cmp
rclb
pop
push
lcall
es
mov
pop
lahf
addl
decb
add
lods
ret
add
push
daa
movl
bound
popa
xor
mov
std
lea
daa
out
and
sahf
mov
sbb
cs
imulb
je
adc
push
jns
cmp
fistl
movsl
pop
pop
pop
xchg
push
mov
cmpsb
cmp
daa
pop
mov
lock
xchg
into
adc
int3
lods
call
pop
bound
ds
mov
fimuls
push
push
je
and
inc
rcl
jae
popa
outsb
pop
je
lds
pop
jo
mov
mov
and
jbe
sub
mov
push
add
mov
pop
sbb
jae
imul
inc
sarb
adc
movsl
ljmp
cmp
shlb
add
xor
sbb
dec
sub
stos
and
in
jg
das
sub
das
add
pop
push
add
pop
add
das
pop
mov
stos
mov
and
add
ja
ret
mov
cs
adc
push
push
addr16
sbb
add
mov
aam
push
in
xor
dec
ljmp
fwait
jle
xor
sbb
xor
xor
jo
push
xor
fidivl
add
aad
jno
and
xor
inc
daa
add
add
popa
popa
or
daa
and
mov
jle
and
jae
or
dec
inc
fcomps
es
dec
jo
and
fs
adc
add
outsl
fisttpll
ljmp
dec
mov
adc
pop
adc
ret
pop
or
sbb
xchg
xor
mov
sub
xchg
and
lods
orb
notl
xor
mov
add
adc
adc
xor
sub
cmp
push
in
popf
adc
and
sbb
push
lahf
shlb
js
sbb
and
fcomip
insb
mov
repnz
repz
mov
pop
push
clc
cs
fmulp
into
mov
pop
push
in
mov
ret
pop
pop
das
sbb
ljmp
push
in
push
jo
nop
test
adc
pop
adc
cmp
jl
jo
enter
mov
pop
add
mov
sbb
push
sub
sbb
sbb
out
js
or
xchg
inc
push
outsl
pusha
inc
lds
add
sub
push
mov
adc
cli
jle
jl
pop
or
or
mov
test
or
and
inc
in
mov
ja
cltd
and
pusha
xor
and
dec
sbb
cwtl
add
mov
push
es
add
and
lock
ret
enter
dec
and
push
and
pop
pop
adc
pop
ret
xor
inc
test
in
lret
mov
shrb
cmp
inc
jmp
test
adc
xchg
inc
cwtl
fmuls
pushf
popa
push
and
ficompl
popf
orl
popa
int3
mov
mov
sbb
sub
mov
mov
and
push
rcll
ffreep
and
push
lahf
test
sbb
pop
aaa
out
inc
push
push
pop
xor
adc
scas
jno
sub
and
inc
das
fldlg2
sub
cmp
js
enter
scas
adc
mov
mov
dec
negb
pop
jns
dec
std
push
pop
cvtpi2ps
push
push
pop
and
in
xor
sub
int3
mov
lahf
sub
add
insb
ds
enter
js
mov
push
fstpt
xchg
jns
incb
and
sub
dec
add
push
adc
inc
xor
xor
cmp
pop
cmp
filds
add
cmp
cmp
cltd
jle
add
sbb
dec
dec
adc
out
or
and
xor
inc
pop
stos
add
push
inc
cmp
jno
dec
pop
out
loop
addb
push
fiadds
xor
jo
cli
filds
jbe
out
inc
cmp
and
fnstenv
call
adc
pop
add
mov
or
jge
xchg
sub
adcl
dec
cmp
xor
imul
popf
push
xchg
jnp
mov
add
scas
pop
sbbb
or
in
imul
xor
push
pop
sub
jle
nopl
mov
sub
inc
mov
push
xor
xor
mov
fstps
popa
xchg
test
movsl
push
aaa
mov
sbb
adc
fstpl
jmp
adc
and
mov
or
inc
xor
pop
sbb
sbb
push
stos
fstpt
aaa
cmp
xor
adc
fimuls
xchg
pop
xchg
cmp
sub
mov
orl
cmpsb
repz
xor
orl
pop
xor
dec
sbbb
jmp
jle
adc
dec
xlat
dec
test
mov
dec
lods
or
out
adc
mov
cmc
jg
or
inc
push
pop
push
or
add
push
and
or
inc
dec
loopne
idivl
scas
out
mov
mov
dec
push
ja
pop
sub
lret
sbb
xchg
cmp
lods
or
roll
fimuls
dec
aas
xor
test
ja
cmp
pop
cmp
or
cmp
test
cs
loop
mov
add
or
push
sbb
shl
inc
daa
dec
or
into
test
cmp
mov
pop
mov
inc
add
xor
ss
int3
mov
inc
inc
xchg
push
adc
and
xor
pop
jno
sub
mov
and
cmp
cmp
aam
cmp
divl
fadds
icebp
aaa
test
dec
mov
pop
xchg
xor
mov
xor
mov
pushl
je
jo
insb
gs
std
push
faddp
ja
fs
push
add
inc
push
stos
xchg
std
jle
jp
outsl
inc
add
mov
sahf
addr16
pop
cmpsl
shll
das
add
pop
mov
lods
dec
inc
fdivs
outsb
cmp
dec
lds
hlt
stos
jmp
push
iret
repz
adc
sbb
iret
repz
push
andl
repz
add
or
sub
add
shll
test
or
mov
mov
cmpsb
adc
negb
jns
and
sub
xor
fidivrs
fwait
inc
mov
mov
mov
fldcw
mov
popa
xchg
sbb
int
mov
sub
add
or
repz
add
int
adc
push
push
dec
str
data16
lea
and
xor
incl
add
cmpsl
fidivrs
push
and
nop
mov
push
push
shl
and
jo,pt
int3
sahf
imulb
ss
xor
roll
andb
loopne
rorb
fbld
es
fadds
jmp
and
add
sbb
daa
dec
push
dec
dec
cmp
bound
shlb
mov
mov
mov
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
nop
cli
inc
ds
pop
sbb
insb
dec
mov
fsubs
jmp
sbb
pop
test
xor
dec
xchg
pop
shl
jne
in
dec
push
cmp
pop
inc
jbe,pn
adc
adc
xchg
and
xor
aaa
mov
and
add
subl
cs
inc
jb
popa
scas
pusha
sbb
outsl
push
dec
imul
pop
pushf
cmp
iret
loopne
shrb
xor
imul
jns
sahf
pop
nop
xor
cmp
inc
pusha
dec
sahf
xchg
out
push
inc
dec
xor
pop
or
scas
fsubs
xchg
pop
dec
cmp
int3
or
mov
lcall
aaa
or
mov
ss
cmp
xor
xor
inc
sub
sub
jbe
xor
inc
adc
inc
xor
mov
lock
sub
jne
cmp
insb
push
outsb
add
mov
or
jp
sub
and
xchg
das
js
mov
shrb
outsl
shll
mov
jbe
push
jg
push
jb
jo
bound
je
loope
cld
cmp
popa
outsb
imul
dec
cmpsl
inc
mov
test
and
and
and
and
and
das
sub
or
ja
pusha
jnp
mov
lea
scas
inc
das
mov
xlat
das
outsb
movsl
inc
fcmovne
pop
sbb
dec
es
test
out
cmp
nop
and
and
enter
aaa
pop
ficoms
pop
sbb
iret
ret
add
fcoml
daa
and
pusha
adcb
dec
xor
jbe
dec
or
adc
pop
ss
adc
and
dec
xlat
cmp
int3
push
add
xor
add
mov
scas
or
pop
and
inc
sbb
loop
jno
push
sbb
sbb
pop
and
adc
scas
xchg
add
rcrl
xlat
adc
mov
hlt
xor
bound
add
dec
mov
xchg
add
push
fstpt
pop
pop
shrl
sbbb
jle
aaa
inc
js,pn
push
dec
fidivs
inc
outsl
clc
push
sarl
inc
rclb
mov
addr16
push
into
popa
lahf
mov
sahf
nop
lahf
idivb
fisttps
push
push
sbbb
out
in
add
in
scas
fnstenv
in
push
adcl
or
fwait
scas
fldenv
cmp
test
xchg
dec
mov
int
rcrl
cltd
out
outsb
out
cmp
pop
je
jl
cltd
int3
ds
pop
adc
scas
scas
and
mov
cmpsl
lods
stc
pop
lods
dec
dec
out
mov
lds
pop
sti
sahf
data16
pop
or
lret
cmpsb
dec
inc
mov
mov
push
add
faddp
out
mov
push
fidivs
out
lcall
loop
mov
pop
and
inc
sbbb
jge
in
sbb
mov
add
daa
adc
in
jns
clc
mov
dec
out
mov
out
pop
or
cmp
dec
mov
xchg
lahf
sbb
out
jnp
pop
mov
mov
push
cmpsl
stc
cmp
sbb
repnz
clc
clc
xor
dec
sbb
psrlq
jge
ret
xchg
and
out
wbinvd
jle
jbe
xchg
call
repz
push
xlat
call
test
out
iret
jnp
cmp
jecxz
ss
imul
scas
dec
push
xor
ss
out
fistpll
inc
push
sub
mov
repnz
jge
bound
push
pop
xor
dec
out
sahf
aaa
cwtl
inc
fimull
lahf
out
sahf
inc
cmpl
sahf
divl
dec
push
jp
imul
int
push
in
cmp
repz
jnp
mov
dec
mov
repz
out
adc
adc
lahf
out
ds
mov
inc
int
jns
push
adc
sahf
out
lcall
ja
out
mov
ljmp
jns
inc
outsb
mov
incl
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fmuls
icebp
rclb
test
mov
cs
pop
and
push
mov
mov
loopne
mov
dec
sti
das
jbe
pop
int3
push
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
add
push
or
mov
loop
jmp
pop
lock
js
stos
imul
aas
inc
out
add
jp
daa
fbld
push
or
inc
imul
cmp
sbb
dec
fisubl
xorb
push
add
mov
jae
dec
cmp
dec
mov
out
imul
insl
pop
fcmovb
inc
or
push
stos
mov
xchg
insb
pop
cmpl
jmp
aaa
mov
fisttps
jp
das
ja
outsl
mov
xchg
outsb
push
fnstsw
fadds
push
pop
shlw
dec
or
push
dec
mov
ja
adc
adc
mov
cwtl
das
add
in
cmp
pop
mov
pop
cmp
or
ds
xor
out
test
popa
insl
jo
es
insb
je
notl
popa
jo
jae
es
outsl
insb
mov
scas
and
aas
cmpb
sub
mov
push
cmpsb
mov
mov
clc
lcall
xor
xor
xor
xor
xor
sahf
cmp
out
sti
jbe
xor
push
xor
xor
cmp
push
add
add
cmp
pop
pop
jno
xlat
into
sub
push
cmp
add
sbb
adc
fldl
add
pop
jle
mov
dec
cmpsb
or
xchg
cmp
aaa
push
lods
imul
sub
or
outsl
into
cli
push
or
or
es
cmp
ret
bound
rcrb
xor
dec
adc
cmp
or
xchg
sbb
out
les
or
adc
aas
adc
add
out
loopne
mov
nop
pop
aas
xor
aas
and
aas
add
ret
aas
mov
jp
aas
add
push
adc
lds
adc
clc
dec
mov
ja
js
add
int3
or
int3
data16
push
fdivs
xor
push
mov
out
mov
mov
add
pop
div
adc
inc
dec
adc
ss
jbe
push
push
and
sbb
push
cs
ljmp
fistps
adc
mov
imul
mov
add
xchg
sbb
sub
xor
push
push
call
rcr
das
add
and
add
jnp
daa
rcl
xchg
ret
xor
test
adc
cmpl
aaa
pop
xor
ds
or
add
jo
in
jnp
pop
or
lods
xor
sub
adc
inc
arpl
rol
lods
daa
and
add
push
fmuls
mov
xchg
and
adc
push
jnp
xchg
mov
mov
or
aaa
iret
dec
loop
addl
mov
pop
ret
inc
push
jno
andl
imul
insb
daa
pop
xchg
mov
sub
in
mov
sbb
ds
sbb
adc
dec
sub
ja
loop
or
pusha
insl
add
pop
or
mov
scas
pop
cltd
daa
lahf
add
xchg
outsb
mov
and
int
or
lods
pop
addr16
lock
pop
jg
insb
sub
sahf
add
push
movb
and
add
pop
and
test
inc
imul
add
outsl
lret
cmpsb
and
dec
cmp
sbb
inc
inc
and
je,pn
inc
pusha
js
jl
jl
ud2
shll
inc
or
push
xlat
imul
push
mov
or
mov
js
out
and
xor
loopne
lods
cmpl
adc
outsb
mov
xchg
icebp
and
dec
ss
add
js
dec
loope
shlb
orb
shrb
aam
cmp
inc
and
in
repnz
ret
sub
je
cmp
das
jo
loopne
scas
xchg
dec
dec
in
lods
das
pop
sbb
or
ds
ret
adc
jae
adc
add
es
sarl
cmp
adc
jge
push
adc
jp
adc
test
sbb
sub
xor
pop
fs
data16
jl
mov
testb
mov
jns
mov
pop
or
mov
rcll
cmp
sub
mov
adc
rorb
rcll
repz
test
push
pop
aam
add
test
mov
cwtl
sbb
sbb
add
test
dec
daa
cmp
loop
push
add
push
push
movsb
in
pop
cmpsb
fs
test
pushf
push
inc
adc
data16
jno
jae
ret
imul
out
inc
or
add
add
dec
les
or
dec
jo
jbe
fisubrl
rcll
mov
jecxz
add
or
jnp
push
adc
mov
or
aas
push
int3
scas
enter
xorb
pop
pop
arpl
scas
adc
aas
mov
aas
sbb
push
cmp
sbb
mov
inc
or
rcrl
mov
mov
mov
sbb
sbb
es
test
mov
popa
int
hlt
sub
dec
or
xor
sbb
mov
add
in
or
xchg
cmp
and
cltd
add
and
push
sub
or
mov
call
dec
xor
lcall
add
ret
sbb
cmp
or
popa
dec
addb
jecxz
or
sbb
cwtl
aam
aas
scas
notb
mov
es
add
inc
mov
cmpsl
pop
les
adc
cmp
jno
inc
inc
ja
pop
ja
icebp
adc
dec
std
or
inc
adc
lds
and
das
das
cmp
insl
cmpsl
inc
aaa
pop
sbb
out
das
cmp
sbb
adc
add
adc
nop
out
imul
push
push
lods
push
sub
add
loope
xchg
daa
push
das
andl
repnz
push
rcpps
imul
addl
cltd
jbe
push
adc
fidivs
adc
rolb
aam
sub
dec
pop
cmp
sub
pop
xorl
hlt
cltd
lcall
or
fs
aas
shrb
dec
sbb
dec
out
filds
loop
add
pop
adc
imul
xor
test
ds
add
pop
add
fbld
clc
push
push
and
xchg
andb
pop
add
or
call
pop
sbb
and
push
sub
cmp
push
sbb
adc
and
sub
cmp
scas
cli
scas
call
pop
sub
dec
sbb
xor
xor
in
pop
add
ficompl
adcb
out
lock
das
cmp
adc
xor
pop
sbb
or
mov
sub
aam
adc
dec
dec
daa
xchg
ret
es
fbld
pop
sbb
push
cs
aaa
push
adc
xor
adc
pop
push
adc
push
sbb
sbb
sub
icebp
scas
clc
sub
movsb
push
push
add
inc
and
pop
add
cmp
cmp
adc
ficoms
pop
or
add
and
pop
xor
cmpsl
push
mov
mov
cli
das
pop
ds
xor
mov
pop
icebp
test
add
loop
sub
hlt
or
fisubrs
loop
push
cs
pop
ss
out
out
cmp
or
outsl
arpl
xor
sbb
xchg
stos
inc
pop
sub
push
dec
in
push
outsl
inc
pop
lcall
ret
js
test
nop
jb
inc
aam
or
orb
jmp
or
inc
jb,pt
xchg
jo
scas
data16
push
jmp
add
sbb
cld
push
dec
inc
dec
push
dec
pop
add
mov
add
repnz
mov
sub
out
iret
dec
xor
sub
pop
pop
cmp
sub
aaa
pushf
mov
push
pop
or
dec
add
xorb
ds
mov
aaa
outsb
iret
sahf
jmp
sub
cs
std
add
jecxz
sub
daa
and
jmp
decb
push
push
pop
ss
das
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
in
cs
mov
or
je
mov
andb
push
push
fwait
rol
fwait
in
inc
mov
and
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
addr16
adc
or
cs
insl
sub
loopne
loopne
adc
mov
ret
incl
call
sbb
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
push
outsl
cs
outsl
arpl
test
add
mov
mov
movsb
mull
push
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
in
int
pop
in
cs
inc
and
sub
add
js
and
pop
pop
push
je
pushl
inc
or
cmp
cmp
and
jno
dec
add
pop
push
push
lcall
jns
pop
inc
jb
xor
xor
jp
outsl
cmp
loop
aas
cmp
sub
clc
xor
cmp
xchg
ds
das
cli
bound
aaa
push
push
or
inc
das
and
mov
push
xor
sub
xor
addr16
lcall
xor
jne
inc
xor
inc
pop
mov
in
cs
inc
ss
cmovb
jmp
lret
add
pop
lahf
ss
jo
pop
int
and
mov
dec
cmp
lods
add
mov
xor
sub
loopne
mov
xor
addr16
cwtl
std
in
push
pop
andb
ret
cmp
cmp
push
push
int
loop
mov
fstpl
arpl
xchg
mov
push
adcl
dec
push
xlat
in
add
push
sbb
mov
enter
mov
adc
adcb
ret
mov
pop
dec
sahf
push
push
out
add
pop
dec
sbb
sbb
mov
adc
frstor
xor
push
push
adc
decl
das
fimull
xor
mov
popa
add
sbb
fiaddl
sbb
pop
push
sbb
stos
fcomps
pop
jecxz
push
cmp
add
inc
dec
loopne
push
mov
gs
xor
mov
enter
add
lods
sbb
pop
cmp
scas
hlt
popa
stos
movsb
test
gs
pop
cmp
lret
rcrl
xor
out
jmp
cmp
and
adcb
or
add
adc
sbb
adc
shl
push
ficoml
add
movsl
je
push
mov
inc
sbb
outsl
cmp
pop
push
divb
mov
jmp
pop
adc
xor
es
sbbl
sbb
nop
rcll
dec
outsl
incl
rolb
and
inc
jno
xchg
cmp
dec
test
dec
mov
and
adc
in
movsl
ljmp
xor
push
pop
lar
addr16
push
movd
rdmsr
imul
addr16
js
xor
leave
fstps
gs
cmp
push
mov
add
jecxz
mov
push
inc
aad
adc
mov
mov
je
loop
dec
push
sbb
scas
cmpsb
stos
icebp
pop
mov
inc
outsl
insb
add
popa
je
jecxz
mov
xor
sub
add
adc
movsb
sti
add
gs
pop
pop
push
out
pop
sub
mov
je
xor
mov
sub
push
cmp
sub
xor
xor
adc
inc
sub
aas
pop
movb
or
push
and
inc
popa
add
fisttpl
pop
out
inc
shll
fsubs
cmp
mulb
stos
and
sbb
push
fcoms
ds
fdivrs
mull
mov
xchg
add
and
jo
pop
sbb
or
fbstp
and
push
xchg
adc
adcl
sub
rorl
call
dec
enter
mov
rorb
popa
jb
pop
mov
loopne
pop
jae
inc
jne
into
shlb
xor
inc
push
jae
cmp
fstpt
gs
daa
sub
sub
in
dec
notb
mov
sbb
or
or
pop
pop
inc
out
pusha
adc
cmp
adc
call
mov
aaa
daa
lcall
fs
jo
sub
or
jg
stos
aad
push
mov
cs
lods
xchg
mov
dec
push
push
test
jp
pop
adc
cmovge
dec
adc
push
das
test
mov
and
and
scas
cmp
dec
dec
xor
push
push
shlb
cltd
xchg
push
data16
lds
push
mov
pop
ja
sbb
cwtl
inc
xchg
and
sbb
sbb
mov
pop
sub
xchg
mov
ja
dec
hlt
sbb
sahf
outsb
add
push
imul
push
frstor
sub
jg
cmp
mov
ror
add
push
outsb
lods
add
mov
outsb
xor
lds
ljmp
inc
xor
je
dec
or
add
je
cmp
add
sbb
je
push
jg
xor
and
hlt
cli
gs
lods
mov
pop
pop
aas
dec
or
push
out
pop
push
rcrb
fisubrl
push
cmpl
sbb
mov
gs
dec
pop
movsl
mov
jnp
dec
pop
repz
test
jge
push
dec
inc
lods
inc
dec
cmpsl
roll
xor
out
push
add
fistpl
pop
inc
roll
or
cmpl
and
mov
aas
add
sub
inc
dec
insl
jnp
xor
out
inc
and
inc
add
adc
jns
or
add
cmp
andb
push
adc
movsl
shlb
lods
push
pop
xchg
mov
jg
sub
jae
push
popa
push
dec
dec
ljmp
outsl
and
ficompl
shlb
inc
inc
cmpsb
punpckhwd
fiadds
dec
outsb
push
je
scas
dec
and
imul
jl
push
push
inc
mov
ljmp
dec
inc
dec
inc
push
pop
test
xlat
jb
aaa
je
gs
fldenv
push
lock
daa
cmp
daa
dec
push
dec
jb
or
cmp
bound
dec
nop
js
push
mov
xor
and
loop
cmpsl
sbb
xor
or
add
dec
add
pop
loopne
xchg
xorl
jns
jb
mov
adc
push
mov
push
xchg
call
push
insl
es
add
cwtl
loop
insb
mov
fbstp
pop
fdivrs
xor
call
push
sbb
iret
cmp
js
rorl
mov
push
out
outsb
add
outsl
cs
outsb
sarb
add
jns
aaa
mov
sarb
es
xor
les
or
cmp
imul
or
add
pop
cmp
lods
mov
cmp
jnp
push
jl
jmp
add
dec
dec
enter
cmc
dec
add
je
pop
add
or
pop
lahf
add
inc
xor
dec
scas
sti
or
dec
sbb
push
adc
fdivs
jne
pop
or
sti
test
lods
jno
push
je
je
je
or
cmp
ret
sub
pop
outsb
sub
nop
sbb
pop
stos
arpl
or
pop
es
ficoml
fisubrl
adc
nop
pop
and
or
insb
dec
cmp
dec
inc
andb
or
xlat
arpl
mov
pop
jg
loop
cmp
inc
outsl
imul
cmp
testb
orb
inc
or
test
imul
scas
pop
je
sub
cld
fildll
and
push
push
das
xor
xor
dec
and
mov
dec
or
jecxz
and
or
fistpl
sti
sbb
inc
outsw
insl
pop
xor
push
loopne
stos
dec
and
xor
push
mov
jne
push
inc
dec
dec
dec
inc
mov
outsb
cmc
and
mov
arpl
push
stos
sti
andb
rolb
fstpt
outsl
imul
push
pop
adc
fstpt
ret
inc
xchg
test
leave
data16
push
pop
mov
xor
sbb
dec
xchg
int
push
movb
dec
xchg
dec
inc
xadd
sbb
inc
xor
inc
xchg
inc
cmovo
dec
lock
adc
cmpb
aas
jmp
in
arpl
pop
pop
inc
jno
push
rolb
cs
jl
inc
sub
pusha
shrb
cmpsl
dec
add
int
jge
jb
mov
add
add
je
jnp
fadds
cmp
ds
ss
aaa
mov
lods
addr16
and
daa
add
push
fcoms
das
pop
mov
inc
iret
adc
not
rorb
inc
lahf
add
jae
out
daa
nop
sbb
pusha
push
jae
push
dec
sub
sbb
dec
xchg
sub
mov
xor
mov
cmp
xchg
add
scas
daa
push
divl
inc
push
inc
and
imulb
lahf
or
dec
pusha
push
mov
int
sahf
fdivl
sbb
cld
dec
test
jns
cmpsl
stc
mov
xchg
js
inc
sti
cmp
repz
dec
rolb
or
mov
dec
dec
dec
push
jl
ds
repz
inc
sub
int
fsubp
adc
inc
out
dec
inc
sbb
and
daa
push
adc
cltd
pop
xchg
in
lock
xchg
inc
mov
jae
out
cmpsb
add
mov
repz
lcall
xchg
out
and
js
dec
mov
js
idivb
rcrb
out
pop
inc
mov
add
mov
ja
pusha
mov
leave
in
mov
dec
xchg
xchg
dec
mov
dec
outsl
insb
pop
sbb
xchg
inc
enter
and
or
mov
sbb
add
mov
in
insb
dec
enter
sbb
dec
dec
pop
and
cltd
mov
outsl
cmp
in
sarb
dec
xchg
sbb
dec
movsb
xchg
mov
pusha
and
stos
loopne
ss
out
dec
scas
in
xchg
xor
xor
dec
repz
cwtl
dec
test
outsl
inc
pop
pop
dec
insb
push
mov
jl
pop
leave
mov
pop
scas
add
mov
mov
push
xor
xor
xor
dec
and
and
fildll
mov
xor
xchg
and
in
mov
rolb
push
dec
loopne
adc
and
pop
sbb
int3
dec
ds
mov
pop
hlt
push
xor
push
add
lahf
mov
pop
and
sbb
out
dec
pop
or
xchg
int3
sbb
xchg
sub
sbb
out
iret
and
fsubp
dec
insb
and
filds
push
xor
outsl
and
or
mov
push
jnp
sbb
test
jo
rorl
pop
scas
add
pushf
outsl
out
fsubrl
sbb
add
lock
xlat
or
xor
cmpsl
and
push
aaa
push
push
mov
add
out
loopne
or
insb
push
je
dec
xchg
add
and
outsb
es
mov
mov
dec
rcrb
int
jns
push
es
jo
push
jg
push
shlb
mov
lcall
in
leave
xor
sub
add
adc
scas
cwtl
faddp
sbb
daa
mov
pushf
push
divl
enter
sbb
mov
mov
push
outsl
jnp
adc
sub
sbb
or
push
clc
xor
in
or
push
insb
push
jl
pusha
enter
jbe
scas
xor
adc
push
out
in
sub
or
mov
jmp
push
mov
pop
pop
adc
test
popf
pop
insl
or
or
out
xlat
and
add
or
lahf
push
sarb
adcb
push
dec
push
lahf
insb
and
mov
add
mov
pop
les
add
mov
test
and
in
scas
in
add
add
pop
ret
push
pop
push
mov
mov
fiaddl
push
ja
and
xchg
xorl
cmp
icebp
dec
shlb
cmp
ret
or
out
sub
xchg
jl
sahf
or
mov
add
mov
es
cmp
or
enter
and
push
dec
enter
inc
push
add
sub
mov
push
xchg
arpl
jnp
mov
js
das
outsl
add
ss
jecxz
shrl
call
adc
test
ss
inc
push
and
aaa
and
cs
addl
ret
dec
iret
movsb
arpl
xlat
add
iret
daa
and
sub
daa
or
push
sub
pxor
jo
insb
fcompl
movsl
out
sahf
shlb
or
or
mov
push
cmpsl
dec
scas
inc
or
jno
and
or
push
movsb
dec
daa
or
push
pop
outsl
mov
pop
or
fistpll
mov
or
add
dec
ficoms
jmp
push
or
pop
or
insb
scas
add
inc
outsl
out
mov
leave
clc
add
leave
add
cwtl
lahf
addr16
xchg
push
push
mov
push
scas
in
out
daa
or
push
and
xchg
dec
push
mov
pop
das
sub
sub
out
mov
pop
cmp
daa
add
push
dec
lcall
pop
cmpsl
clc
cmp
xchg
xor
inc
fsubl
adc
and
pop
add
mov
call
pop
outsl
jl
xchg
jmp
mov
xchg
pushfw
cmc
loopne
pop
xlat
data16
iret
lds
call
xbegin
mov
addr16
fdivrs
daa
pop
pop
fwait
subb
push
test
fs
xchg
data16
add
add
inc
out
cmp
jo
mov
out
sahf
dec
outsl
xchg
lods
enter
sarl
and
insb
repz
sti
xchg
lahf
ja
out
idivb
pop
mov
and
iret
repz
xchg
out
pop
inc
jl
out
arpl
repz
shll
pop
jle
out
jl
out
pop
push
jbe
pop
add
cmpsl
cmp
in
pop
out
cmp
inc
outsl
mov
and
out
sahf
ds
test
iret
repz
filds
bound
ja
out
imul
dec
repz
push
xchg
xlat
or
lcall
cmp
xor
out
popf
loop
data16
out
jecxz
addr16
xchg
dec
repz
lahf
mov
out
imul
or
dec
insb
xchg
sahf
ja
out
insl
mov
mov
jl
outsl
jo
divb
jo
dec
repz
jb
push
cmpsl
stc
cmp
imul
repz
rorl
je
xchg
and
repz
xchg
rcll
jbe
jo
out
cmp
ljmp
sarl
mov
fnstsw
jp
out
repz
enter
push
adc
cmpsl
inc
mov
out
lcall
fxch
repz
hlt
sbb
lods
out
out
jl
cmp
xor
jns
jp
loopne
xorl
sarl
ret
push
je
stc
mov
xchg
mov
lahf
cmpsl
mov
mov
stc
xor
out
rolb
and
mov
mov
pop
lea
cmp
out
or
jns
iret
repz
jns
int
nop
adc
out
repz
push
jle
shlb
xchg
ss
out
push
nop
xor
dec
repz
dec
push
xchg
dec
mov
cmp
jne
pop
lcall
movl
dec
repz
sahf
mov
cmp
cmpsl
stc
cmp
sub
int
repz
std
enter
outsb
sahf
out
cmp
hlt
dec
test
mov
clc
sub
out
out
push
mov
mov
repz
xor
fnstcw
mov
ss
ja
mov
repz
out
insb
or
test
mov
mov
add
aam
pop
clc
inc
aas
test
inc
stc
sarb
cli
int3
add
fimull
aas
cmp
jmp
or
out
add
pop
or
pop
bound
ja
inc
testl
ficoms
out
pop
mov
cmp
aad
push
mov
notb
aas
mov
adc
xor
mov
add
out
rclb
and
ss
jg
push
pop
dec
mov
inc
pop
dec
in
es
fmuls
pop
push
push
fcomip
push
inc
hlt
jns
das
xchg
adc
cmpsb
fdivs
xchg
jg
xchg
cmp
dec
daa
xchg
aas
popf
mov
fs
out
mov
sti
mov
out
ss
and
xchg
aas
or
adc
inc
fbstp
arpl
adc
inc
mov
aas
jb
fcomps
add
push
mull
idivl
sahf
push
ljmp
sbb
pop
jns
adc
mov
pop
and
les
iret
inc
sub
enter
sub
mov
mov
mov
cltd
fcomp
shll
insb
sbb
sahf
ja
stc
pusha
inc
nop
inc
push
add
out
add
jge
int
testl
out
ficompl
push
les
in
inc
mov
incb
jb
inc
sub
sbb
cmp
mov
in
pop
ficoml
out
and
dec
cmp
in
adc
dec
scas
inc
mov
ja
push
push
inc
xchg
xchg
scas
mov
push
add
push
cltd
insl
pusha
movhps
pop
or
add
enter
sub
xor
and
jl
and
in
addr16
add
mov
pop
and
in
cmpsl
fwait
in
sbb
in
sub
push
jb
jbe
daa
cmp
and
dec
cmpsb
in
std
fcomp
sbb
nop
xchg
enter
aad
inc
repnz
pop
jbe
fwait
in
push
push
mov
jb
mov
out
push
enter
iret
pop
push
inc
in
add
inc
fs
inc
inc
cmc
inc
outsl
jns
pop
jo
jg
imul
cs
cmp
imul
xchg
lock
jl
add
imul
pushf
les
call
jns
insb
lock
pop
mov
scas
dec
insb
jae
inc
inc
push
jns
enter
push
aaa
push
add
out
out
dec
add
ja
out
pop
outsb
or
inc
add
pop
or
mov
repnz
std
inc
and
adc
loopne
add
xor
mov
mov
jmp
xor
pop
push
sbb
in
enter
pop
das
pop
xchg
pushf
pushf
pop
and
pop
gs
out
insl
cmpsb
add
or
repnz
adc
leave
leave
leave
leave
scas
mov
leave
inc
jb
into
fs
cmp
leave
stc
add
pop
adc
and
sbb
pop
mov
fstl
inc
pop
cmpsl
dec
pop
push
subps
jbe
cmpsl
fs
insb
mov
pop
outsl
fcmovbe
jbe
push
xlat
push
sbbb
mov
mov
iret
in
in
fucomip
add
pop
cvtps2pd
xchg
or
iret
or
inc
sbb
and
and
sub
add
pusha
sbbl
int3
popl
jb
add
jo
mov
jle
jo
dec
jne
mov
pop
mov
mov
fnstsw
ret
cmp
xchg
pop
jns
in
add
pop
push
inc
sbb
leave
and
fs
push
sarl
in
loopne
mov
adc
repnz
inc
scas
cltd
pop
je
inc
aaa
jb
inc
push
jb
jb
iret
daa
and
into
daa
cmp
pop
pop
ficomps
jb
into
dec
and
pop
xchg
adc
leave
mov
and
call
add
push
cmp
add
daa
dec
out
and
leave
imul
pop
xchg
xchg
xchg
lahf
pop
test
mov
mov
xchg
xchg
pop
aam
fistps
cmc
out
or
sahf
out
sahf
or
or
or
jns
out
or
out
sahf
out
adc
arpl
outsb
adc
jns
out
adc
push
js
out
sbb
sbb
pop
negl
mov
pop
leave
inc
cmp
and
inc
jb
pusha
add
sbb
and
and
faddl
add
mov
jno
pop
out
pop
add
push
mov
push
push
js
xchg
test
int3
push
add
sbb
fcompl
cmp
add
lds
add
pushf
ja
push
les
jbe
push
pop
outsl
cmp
mov
and
in
cmp
add
xchg
mov
inc
repnz
aaa
add
into
cmp
jns
ja
pusha
add
add
daa
xor
in
pop
mov
xchg
scas
fs
test
and
in
push
int3
pop
enter
fdivl
leave
add
das
inc
repnz
push
add
repz
push
add
call
das
lock
add
pop
leave
xor
xchg
popa
mov
je
add
sarb
and
or
cld
js
roll
mov
sbb
iret
push
add
fs
jb
add
jns
popf
xchg
mov
xchg
pop
enter
xlat
mov
jns
dec
sahf
add
leave
sbbl
add
inc
jg
nop
dec
jp
jp
pop
and
adc
xchg
jp
inc
jb
arpl
xchg
inc
jb
sbb
into
je
or
adc
rcrl
inc
xor
js
pop
test
xchg
stc
sbb
les
pop
inc
add
cld
mov
push
cmpxchg8b
iret
ja
daa
cmp
repnz
inc
dec
and
fs
ja
ficoml
addr16
iret
jl
leave
pop
push
loop
jl
pop
sbb
and
setb
aad
jge
gs
das
das
das
or
gs
and
xchg
add
jb
push
call
sub
jns
aaa
das
ret
enter
lahf
insb
jle
push
jle
inc
enter
jle
pushf
nop
pop
jle
scas
aam
icebp
or
std
or
jg
xchg
sbb
and
data16
js
mov
data16
lret
lret
lret
pop
data16
data16
lret
lret
lret
lret
jnp
andl
xchg
lretw
lret
lret
lret
fwait
mov
lretw
lret
lret
lret
mov
shlw
cmp
mov
pop
pi2fd
cmp
cmp
or
or
cmp
cmp
or
push
add
add
add
in
xor
add
and
cmp
xchg
mov
or
push
addr16
xchg
sbb
xor
andb
inc
adcl
sub
addr16
popf
dec
inc
mov
ja
pop
cmp
xchg
mov
stc
add
jp
sbb
xlat
and
pop
into
jo
cmp
addl
xchg
and
push
outsl
iret
leave
rep
emms
push
push
jg
or
mov
pop
push
or
cmpb
or
fidivrl
dec
pop
and
add
das
xchg
in
imul
sub
imul
pop
bound
push
or
iret
and
repnz
jb
cmovle
cmpsl
push
pop
add
jnp
sbb
jbe
aas
daa
iret
shll
add
daa
out
roll
mov
jmp
adc
adc
fmuls
jb
adc
mov
aad
jecxz
add
push
repz
xchg
xchg
push
test
push
jns
push
cmp
push
push
mov
xchg
sbb
in
cltd
mov
add
xchg
out
mov
pop
pop
leave
jae
rorl
call
mov
push
test
xor
xchg
and
imul
imul
das
imul
fsubrl
pop
imul
imul
imul
insb
cmp
mov
testl
xchg
jo
mov
xchg
xchg
mov
jl
mov
sbb
aad
mov
verw
insl
mov
insl
sub
xor
cmp
cmp
iret
jae
push
dec
push
or
in
repnz
popa
punpckhwd
cltd
dec
ss
push
or
mov
pop
outsl
and
jb
rep
pop
insl
or
outsb
mov
enter
in
jo
js
out
jb
subb
nop
aas
cwtl
jb
sarl
push
push
pop
test
mov
dec
or
mov
loopne
dec
pop
mov
push
adc
jb
add
push
outsl
xchg
pusha
outsl
cs
out
push
stc
fmull
fwait
cmpsb
ja
and
loopne
add
push
pop
and
adc
subl
jo
push
pop
pop
mov
push
lret
out
rorb
push
nop
mov
mov
dec
ja
pop
scas
out
outsl
mov
dec
nop
jo
jo
xchg
and
jo
jo
jo
repnz
ljmp
in
xchg
fucomi
clc
add
jno
sbb
jb
jno
jno
jno
jno
xchg
and
jno
jno
push
or
jns
push
push
data16
mov
sbb
repnz
jno
stos
cmp
cmp
mov
lret
stc
jno
cmp
in
out
or
mov
cmp
adc
xchg
out
shll
push
add
arpl
pop
jl
mov
xchg
adc
mov
imul
push
jns
dec
fbld
jae
jae
mov
cmp
aas
push
add
add
mov
jae
xlat
add
jae
das
jl
daa
pop
ret
lret
mov
pop
xor
adc
xor
movsb
inc
repnz
mov
push
jnp
lea
shll
jns
add
mov
jg
rcrb
add
xchg
outsb
repnz
add
in
xor
mov
je
repnz
cli
push
or
mov
add
or
or
pop
js
adc
jne
sub
inc
jbe
cmp
leave
pop
add
sub
addr16
addr16
fcmovne
inc
mov
outsb
pop
in
xor
stc
push
add
dec
lock
iret
cmp
dec
pushf
ja
push
addr16
jb
xchg
sahf
or
ja
ja
xor
int3
xlat
xchg
loop
and
add
add
dec
addr16
fiadds
sahf
cmp
inc
ja
das
jb
sahf
fcmovne
mov
mov
shl
mov
sbb
cld
xorl
xchg
adc
movlps
push
leave
sbb
xchg
decl
pop
js
pcmpgtd
mov
push
jle,pn
push
xchg
xchg
popf
pushf
pushf
test
inc
repnz
std
das
das
jg
add
adc
das
das
das
and
jns
jns
das
das
das
inc
jns
jns
jns
jns
fldt
das
gs
pop
ud2
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
push
add
iret
leave
add
jne
jge
repz
sbb
es
repz
popf
pop
movsl
out
in
mov
mov
xchg
jns
and
and
and
enter
pusha
clc
jns
adc
inc
adc
xchg
into
dec
ja
xor
push
fnsetpm(287
ret
jmp
pop
push
add
gs
dec
negb
jne
sahf
out
mov
xlat
cwtl
xchg
add
jns
rorb
mov
daa
adc
out
fs
lock
repz
or
add
cmp
lds
push
push
and
sbb
icebp
pop
push
sub
or
fnsave
cmp
inc
dec
pop
prefetch
sbb
cmp
push
sahf
pop
jnp
jns
nop
insb
mov
jnp
and
jns
jnp
xchg
rclb
sarl
fidivrs
jb
enter
mov
adc
leave
xor
cwtl
pop
and
das
dec
xor
addr16
inc
xchg
bound
and
xchg
sbb
xchg
jg
fstpt
jns
lahf
xor
sbbl
outsl
jns
inc
shll
sub
pop
enter
or
jl
leave
sarb
jo
outsl
add
xchg
xor
in
jge
or
push
inc
repnz
mov
jge
add
xchg
cmp
leave
leave
inc
dec
push
jge
js
in
and
pmuludq
into
pop
and
outsb
mov
mov
xchg
jle
outsb
fwait
pushf
jle
push
aas
pminub
or
sbb
cmpsl
dec
dec
dec
es
dec
push
push
in
dec
dec
push
pop
jle
pusha
jle
adc
popf
fs
xchg
insl
in
pop
xchg
jle
mov
jle
leave
add
pop
in
clc
das
mov
ret
cwtl
mov
cmp
call
jp
scas
sbb
lret
lods
xchg
fldcw
inc
cltd
iret
jo
dec
leave
subl
test
movq
cmp
es
mov
dec
jg
add
leave
inc
repnz
mov
jns
leave
xchg
lsl
jae
jo
movbe
cmp
in
iret
xlat
fistpll
mov
lcall
repnz
daa
daa
iret
repz
iret
repz
dec
or
pop
out
outsb
daa
gs
insl
or
sahf
push
jge
adc
adc
pusha
shlb
iret
jo
in
repnz
jmp
pop
icebp
fists
sbb
jno
scas
pop
adc
rcrb
scas
push
pushf
in
outsb
sub
pop
xor
mov
pop
pushf
lahf
pop
subl
xchg
pop
mov
lahf
xorl
subl
mov
or
mov
push
jae
roll
push
leave
repz
add
jae
mov
pop
pusha
and
add
mov
mov
sahf
fcmovne
rcr
out
add
mov
xor
jno
femms
scas
out
xor
mov
in
ss
cmovp
andnps
pusha
scas
add
jns
or
lret
cs
in
add
mov
or
cltd
or
sahf
sub
cmp
pop
movsb
fwait
cmp
mov
add
lar
cmp
into
addl
pop
out
out
mov
adc
adc
sahf
enter
push
test
dec
pop
push
add
leave
rorl
add
loope
jns
jb
or
or
jns
add
test
or
in
mov
mov
dec
ss
daa
outsb
test
mov
nop
ja
xchg
incb
enter
cmpsb
push
test
push
add
push
test
popf
in
test
inc
test
mov
pop
dec
ja
mov
insb
push
add
pop
push
or
popl
test
addb
jns
xchg
dec
mov
sbbb
inc
repz
aad
test
in
nop
mov
xchg
push
enter
inc
xchg
dec
xchg
rcl
popf
fistpl
out
cmpsl
pop
je
cmp
xchg
sub
add
nop
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
jb
xchg
xchg
xchg
out
sahf
out
or
dec
or
push
push
bound
push
insl
xchg
xchg
jl
pop
mov
add
test
cwtl
xchg
and
lods
xlat
das
and
in
xor
dec
mov
push
addr16
mov
or
iret
sbb
enter
pop
inc
push
cwtl
pop
mov
xchg
daa
daa
daa
daa
movsb
mov
ret
insl
daa
lret
pop
rorb
fimull
repnz
das
mov
cli
mov
push
cltd
dec
mov
xor
xchg
ja
mov
adc
test
mov
xchg
mov
leave
pop
xchg
js
mov
adc
inc
or
push
test
push
cltd
or
mov
push
pop
testb
cmp
pop
mov
cvtps2pi
pop
test
iret
cmp
push
sbb
es
iret
in
test
shl
add
dec
fsub
mov
mov
mulb
mov
mov
mov
lahf
sub
test
pusha
sbb
jnp
jg
jp
lcall
pop
push
mov
insl
in
mov
out
add
mov
in
xchg
mov
mov
mov
pop
repz
cmp
ficoml
loop
adc
ds
leave
repnz
push
add
movlps
enter
mov
cmp
inc
ds
mov
setns
pop
jle
add
mov
in
sbb
fcmovne
repz
add
sbb
aad
mov
mov
mov
leave
repz
int3
push
or
mov
pop
inc
aaa
repnz
idiv
pop
lea
push
icebp
mov
xor
pop
cmp
and
cvtps2pd
or
cs
bound
xchg
add
ja
or
pop
xor
mov
mov
iret
or
inc
pop
ss
test
dec
dec
cs
xchg
popf
movsl
shrd
out
pop
mov
mov
dec
aaa
lar
cmpsb
int
dec
ss
lea
adc
sbb
xor
insl
pop
and
iret
scas
fldl
inc
mov
addr16
hlt
mov
addr16
es
xlat
cmp
ja
stos
enter
dec
rorb
and
test
es
xchg
mov
mov
xor
xchg
mov
lods
daa
mov
in
mov
mov
out
sysret
push
add
sbb
clc
enter
in
mov
add
insb
rcrb
mov
nop
sub
or
mov
nop
decl
jo
add
outsb
xchg
xchg
nop
nop
out
nop
add
cmp
cmp
cwtl
mov
push
xchg
xchg
add
pop
mov
cmp
in
mov
shlb
dec
repz
pop
mov
lock
clc
add
in
xchg
int
adc
xchg
dec
mov
push
and
push
xchg
scas
mov
mov
and
xchg
mov
repz
push
pop
rorb
sahf
ja
cmp
rcr
push
or
sahf
out
jns
call
xor
add
mov
xchg
call
scas
dec
repnz
dec
xchg
scas
jae
mov
push
fisubrl
leave
inc
repnz
add
enter
fs
inc
repnz
popa
xchg
aaa
add
mov
mulb
xchg
jmp
jae
pop
je
xchg
add
pop
leave
pushf
mov
push
add
enter
out
push
xchg
push
push
stc
pop
sahf
pop
cmp
dec
xchg
push
add
jns
add
repnz
lock
sub
in
fs
dec
cmpsl
push
pop
iret
int
jo
aaa
xchg
add
xchg
mov
cwtl
xchg
add
add
inc
repnz
add
loopne
cltd
in
xchg
xor
pop
fs
notl
sahf
xlat
das
pop
push
add
pop
lea
repnz
in
jae
das
mov
or
mov
or
xchg
cmp
addr16
add
daa
or
mov
inc
dec
xchg
and
sahf
add
push
inc
jb
in
cmp
mov
mov
add
loopne
mov
cmp
daa
or
negl
push
pop
repz
inc
xchg
lock
or
clc
or
pop
push
push
or
pop
in
repz
or
xchg
test
jg
sbb
xchg
iret
out
mov
in
mov
leave
jmp
outsl
pop
mov
sti
pop
push
cwtl
dec
dec
dec
data16
push
xor
dec
jae
mov
and
dec
fdivr
and
daa
push
out
dec
sahf
sbb
push
ja
mov
and
jmp
stos
fimuls
and
decb
lcall
adc
daa
test
mov
mov
jo
icebp
and
fwait
lcall
mov
mov
inc
repnz
out
negl
or
sub
imul
fwait
and
mov
bound
xchg
xchg
xchg
fwait
orb
stos
mov
or
in
cmp
cmp
int
fucom
das
jns
add
pushf
outsl
push
pushf
push
pushf
sbb
jns
pushf
es
cs
pushf
out
sahf
ja
push
or
add
sbb
push
push
pmaxsw
xchg
inc
leave
out
push
shrb
xchg
pushf
pushf
xchg
pop
xchg
fdivl
pop
cltd
mov
mov
rcrl
mov
negb
mov
pop
popf
daa
popf
das
popf
mov
popf
aas
popf
inc
popf
dec
popf
jl
mov
popf
outsl
jo
mov
popf
xchg
repz
mov
and
mov
cmp
repz
fisubl
iret
repz
daa
cmc
sub
jns
repnz
sahf
push
sub
adc
pop
cmp
dec
sub
and
dec
sub
xor
mov
negb
jns
pop
imul
and
das
jns
sbbl
sahf
lcall
sahf
sahf
pop
encls
leave
cmp
add
or
shrb
xchg
mov
xor
lahf
lahf
push
add
pushf
pushf
pushf
pushf
cmp
test
mov
pushf
cmc
std
add
fcmovne
or
adc
add
repz
daa
lods
sbb
sbb
icebp
in
dec
loopne
call
out
decl
push
add
aaa
pop
aas
jae
cmp
inc
es
daa
iret
sub
jae
sub
mov
movntq
das
out
divl
out
cltd
cmp
sysenter
push
pop
nop
mov
pop
mov
and
mov
mov
in
mov
ja
je
ljmp
pop
xchg
daa
mov
popf
fmul
shl
jmp
repnz
xor
mov
in
imul
das
cmp
mov
mov
outsl
lock
sti
push
add
movsb
adc
daa
leave
in
in
add
cmpsl
fwait
cmp
push
or
or
jns
imul
daa
iret
jae
adc
jae
mov
iret
jae
cmp
in
sbb
das
das
loopne
movd
movsl
adc
pop
sbb
daa
xor
jns
sahf
pop
cmp
pop
and
movsl
je
jns
js
jg
mov
iret
in
and
push
add
aam
dec
es
mov
adc
cmpsb
out
and
sub
xor
add
clts
js
sbb
outsb
cmpsb
das
push
cmpsb
jns
lret
dec
out
pop
cmpsb
pusha
das
push
fucom
jo
push
js,pt
iret
cmp
adcb
nop
push
adc
mov
add
into
repz
pop
mov
outsl
sbb
shlb
cmpsb
adc
movl
js
outsb
xchg
xchg
pop
jecxz
cmpsb
push
inc
out
repz
add
add
sahf
cmpsl
cmpsl
bndstx
mov
xlat
cmpsl
mov
cmpsl
xchg
push
mov
leave
out
cmpsw
push
sbb
mov
dec
outsb
daa
xchg
setns
repnz
add
xchg
fcmovnbe
paddusb
in
xchg
mov
pop
leave
mov
pop
lret
in
in
push
add
das
getsec
iret
insb
movsb
inc
push
test
or
dec
dec
es
ret
jp
inc
repnz
insb
popf
aas
out
jb
movsl
lods
mov
add
dec
cs
test
loopne
call
lock
adc
sbb
and
push
push
mov
cmp
dec
mov
add
iret
jae
outsb
jbe
jle
ss
pushf
mov
test
in
mov
iret
in
shll
inc
sahf
pushf
cld
add
or
xchg
jno
cmp
les
stos
xchg
bswap
jp
aas
inc
stos
decl
cmp
pop
sub
out
jb
orb
dec
sahf
add
mov
mov
les
fsubrp
jbe
in
in
fcomip
pop
std
fists
sub
out
stos
stos
sbb
xchg
lcall
sbb
out
and
or
dec
xchg
in
mov
push
pop
pop
pusha
xchg
add
cs
out
lods
mov
fwait
mov
xchg
clc
into
pmaxub
cmp
testb
rorb
mov
jp
out
lods
sub
popf
pop
dec
push
addr16
aam
daa
daa
pop
ja
xchg
sahf
out
jns
xchg
lahf
add
dec
scas
das
or
push
call
and
and
ljmp
lods
xor
mov
jbe
jo
pop
leave
jae
in
mov
fcmovne
add
fcompl
in
shl
je
add
lods
mov
lods
or
mov
scas
xor
aas
scas
dec
pop
lret
lret
pop
jp
scas
pop
pusha
scas
imul
scas
subl
mov
scas
ret
scas
lret
lret
lret
lret
into
scas
fldcw
cmp
fmulp
cli
scas
add
sbb
jb
jb
sbb
sbb
jb
jb
pop
push
adc
jae
adc
sub
xor
das
cmp
popf
je
pop
xor
xor
inc
push
jns
iret
mov
push
jns
out
cmp
jns
cmp
jns
out
sarb
inc
iret
repz
loope
in
inc
outsl
in
cmp
inc
add
out
jns
sbb
dec
cs
sahf
out
cmovp
cmp
dec
cmp
repz
pop
dec
gs
jo
cmp
repz
jnp
xchg
pop
pushf
cmpsl
mov
bnd
out
enter
jbe
jb
fsubrp
hlt
fisttps
aas
lock
int3
dec
cmpsl
mov
mov
repz
add
outsb
daa
iret
add
orb
pop
jns
fcmovne
nop
cwtl
das
loopne
call
or
clc
push
cs
fisttpll
out
cmpxchg
sahf
out
adc
adc
fmuls
daa
cmp
mov
adc
mov
das
xor
mov
push
add
iret
repz
pop
add
add
popf
jo
pop
js
xchg
pop
and
scas
inc
int3
sub
nop
xchg
xchg
int3
lods
int3
int3
int3
sub
enter
xchg
dec
cs
call
je
push
lock
xor
cmp
or
add
or
jns
or
js
lret
and
das
jg
stos
dec
mov
push
sbb
js,pn
xorb
js
nop
pop
cwtl
mov
mov
and
jbe
jb
rcr
jecxz
mov
leave
dec
jmp
mov
out
push
push
pop
push
pop
and
out
aaa
jns
push
mov
push
add
inc
push
pop
pop
or
or
jl
daa
daa
mov
pop
xchg
popf
test
cmp
mov
cmp
fs
cs
add
cmc
inc
mov
out
push
sbb
push
sbb
sbb
cmp
nopl
aaa
repz
sahf
out
and
push
and
outsb
vmwrite
jns
daa
lcall
repnz
jg
js
clc
mov
in
adc
mov
adc
out
and
sub
add
test
iret
iret
jo
out
fs
mov
xchg
popf
iret
repz
sahf
add
mov
push
mov
cmp
syscall
or
outsb
aam
fbstp
fsts
mov
push
out
fisubs
adc
adc
adc
cmp
dec
pop
pop
sbb
outsb
repnz
outsb
movhps
push
push
test
and
cmp
and
sahf
out
daa
mov
sarl
cmpsl
push
sub
jns
out
out
out
sub
sbb
test
into
pushl
add
aas
daa
es
shll
lret
out
cs
rolb
sub
mov
jns
popa
push
add
jbe,pn
cmp
push
nop
pop
fwait
cmpsb
setle
dec
lock
lahf
mov
cmp
cmp
aam
push
fisttps
shll
mov
ljmp
in
shlb
mov
cmp
mov
add
iret
jae
cmp
insb
ja
andb
repz
lea
cwtl
iret
repz
or
repz
movsbl
mov
out
sarl
repnz
cmpsb
ret
std
mov
push
leave
out
fcom
mov
and
cs
sahf
add
add
jae
dec
jg
setnp
or
rcll
lret
outsl
aaa
outsl
pushf
loope
out
imull
add
dec
sysret
or
dec
aaa
mov
or
and
enter
mov
repnz
je
dec
dec
sysret
adc
iret
jae
gs
jnp
dec
sahf
ja
xchg
cmp
repz
mov
rcrb
push
in
out
inc
ds
repz
and
test
scas
sub
out
inc
sub
pop
loop
outsl
cmp
mov
mov
das
cs
mov
mov
jb
mov
mov
fimuls
out
push
out
pop
enter
idiv
or
mov
push
movhps
push
es
repz
adc
adc
push
out
dec
mov
push
mov
mov
outsb
cmp
leave
repz
sbb
sbb
mov
nopl
sahf
push
and
daa
iret
and
daa
iret
jae
es
fisubrs
sub
dec
sahf
out
sub
testb
negl
leave
incb
mov
push
cmp
xchg
push
push
xor
cmovle
ds
dec
jns
out
orps
sub
out
jbe
outsb
pcmpeqd
jle
cmp
dec
sahf
cmp
mov
lahf
inc
rcl
int
pop
push
jg
dec
xchg
dec
xlat
out
sub
jo
pop
mov
mov
push
inc
dec
fwait
dec
inc
xchg
mov
fmuls
pushf
out
push
daa
fs
mov
outsl
in
rorl
push
dec
dec
jo
add
mov
fists
cs
xorb
jno
inc
adc
pop
leave
inc
pop
and
in
or
movsb
stos
add
and
adc
mov
or
push
xlat
fistpll
inc
push
pop
inc
sbb
inc
inc
inc
push
and
jbe
sub
pop
inc
xchg
inc
aaa
or
mov
jg
adc
or
les
repz
fcomps
push
loopne
iret
repz
fcom
ror
sarb
mov
out
sahf
out
cmpb
out
sahf
jo
push
sahf
out
push
dec
inc
cmp
repz
repz
sub
adc
add
jns
out
xlat
lock
loopne
les
adc
jo
mov
push
push
add
jns
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
mov
movsb
loope
pop
data16
test
call
inc
adc
and
adc
inc
add
ljmp
adc
sub
and
stos
mov
adc
test
cld
add
or
and
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
jl
mov
rcl
add
fadd
sub
add
cmp
inc
mov
jle
out
pop
popa
pop
es
pop
push
pusha
imul
xlat
incl
xchg
pusha
stos
popa
mov
pop
das
adc
add
fnstcw
xchg
add
xchg
dec
out
out
cmp
inc
push
or
or
sahf
adc
adc
cmp
repz
aam
sbb
je
cmp
add
xchg
rcrb
mov
scas
fsubrl
and
sub
inc
cmp
fimull
jp
cmpsl
jne
decl
cld
aas
push
incl
imul
push
aam
icebp
call
aas
aam
inc
pop
je
fldl
mov
mov
out
and
adc
mov
jmp
cwtl
outsb
mov
ficoml
dec
or
icebp
addr16
push
push
mov
sub
jle
orb
adc
rorb
pop
pop
push
sub
mov
xchg
cmpsb
xor
stc
mov
cmpsb
jg
scas
pop
cs
mov
and
sgdtl
arpl
xor
add
daa
pop
pop
or
xchg
es
loopne
jns
ja
push
sbb
xor
pop
mov
adc
out
push
ds
push
test
inc
push
dec
iret
mov
fidivs
jae
jnp
push
push
pop
adc
insb
and
push
fdivp
cmp
or
or
pusha
idivl
jnp
push
je
pop
adc
sahf
out
sahf
push
sbb
inc
pop
jns
out
cmp
xor
xor
jns
out
sub
and
cmp
clc
ret
es
jnp
jg
movups
es
sbb
push
pop
inc
cld
xorb
inc
cmp
xorl
jg
cmp
pop
out
sahf
out
xchg
mov
repz
sti
cmp
adc
xor
add
cmpsb
imul
xchg
out
adcl
push
dec
pop
mov
ljmp
cmp
arpl
mov
add
nop
cmovo
hlt
in
jl
adc
mov
sub
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
decl
imul
notl
mov
stc
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
aas
mov
shlb
add
aas
jno
or
out
xlat
mov
pop
fs
dec
lea
aas
ret
shrl
mov
push
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
call
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
cmp
sub
jge
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
sub
call
and
xor
dec
nop
pop
cmp
fisubl
xor
jg
xchg
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
xchg
mov
pop
ficomps
frstor
shlb
xchg
movsb
xor
jb
dec
sub
mov
jb
cmpsl
add
pushl
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivr
jns
jmp
rclb
mov
sub
mov
sbb
ljmp
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
jmp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
mov
mov
insb
fdivs
jne
filds
or
shrl
lcall
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
call
xor
mov
push
jmp
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
push
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
pop
xlat
mov
aam
movsl
fisttps
fadd
shll
jmp
incl
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
fdivrp
lcall
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
ljmp
sahf
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
cli
mov
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fbld
fbld
out
mov
jns
imul
andl
shrb
rolb
ja
int3
add
mov
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
scas
fdivrp
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
incl
adc
mov
jnp
sbb
xchg
or
out
fdivrl
decl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
mov
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
sub
push
pusha
rorb
imul
scas
fcompl
fstps
and
or
inc
out
pusha
mov
test
jg
mov
jmp
mov
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
clc
pushl
add
push
sub
mov
or
sbb
add
sub
dec
ds
insl
mov
xchg
lea
xor
or
cmp
xor
push
pop
fcom
enter
daa
popa
add
and
push
xlat
fcomp
sahf
out
sahf
fcmovu
fsubp
out
in
jecxz
in
sahf
out
sahf
jmp
repz
out
hlt
cmc
div
clc
add
cli
sti
cld
pop
pop
inc
mov
iret
les
pop
push
xor
xchg
push
or
call
inc
push
dec
bound
jbe
add
jbe
inc
into
xchg
fwait
inc
insl
fisubrl
jne
inc
into
popa
je
push
ds
cmp
mov
push
fadds
and
aas
out
clc
fistpl
cmp
pop
bound
xor
xor
popa
arpl
cmp
arpl
fistl
xor
xor
bound
ficoml
hlt
popa
push
inc
jbe
pop
insb
imul
inc
jo
inc
or
ds
imul
dec
inc
dec
mov
inc
or
add
subb
mov
fs
mov
je
ss
jbe
mov
test
xor
jle
gs
adc
push
add
lds
push
js
pop
addl
xor
je
xchg
insb
popa
jns
jmp
call
mov
push
nop
pusha
add
aaa
je
dec
cmp
inc
push
notb
sbbb
mov
sub
mov
and
fidivl
rcll
xlat
int
or
inc
inc
es
and
pop
je,pt
xchg
popf
jo
inc
inc
add
ds
mov
scas
add
jle
mov
mov
dec
add
inc
mov
and
push
fistpll
sbb
ja
outsb
jne
mov
mov
stos
mov
outsb
dec
jge
insl
imulb
adc
arpl
in
cs
mov
xor
addr16
clc
xchg
dec
mov
outsl
into
pop
jo
in
mov
push
insb
inc
cmp
pusha
add
mov
add
addb
ss
inc
mov
pop
roll
lahf
inc
dec
xchg
fwait
push
mov
ss
xlat
lea
nop
scas
mov
xchg
out
jb
push
and
addr16
or
cmpsl
lahf
lret
dec
lahf
push
outsl
outsl
test
mov
xchg
mov
mov
lds
in
push
or
nop
test
adc
aad
arpl
cmp
mov
add
lahf
pop
mov
jns
pop
shrl
adc
push
ss
cs
cmp
adc
mov
or
iret
inc
push
bound
mov
push
inc
jbe
xor
mov
addr16
mov
dec
repnz
dec
xor
je
mov
das
xor
jmp
inc
push
sub
imul
adc
ss
mov
cmpsb
mov
sub
inc
and
dec
cmp
adc
inc
jmp
sbb
daa
inc
and
dec
sbb
sbb
cmp
mov
test
cmp
je
jns
arpl
mov
test
in
pop
in
xchg
insb
insl
aaa
add
pop
insb
mov
push
inc
xchg
fildl
adc
enter
or
dec
push
daa
add
adc
lods
add
push
and
adc
add
adc
adc
gs
inc
stos
inc
push
xchg
push
jno
push
fimull
cmp
fdivr
loopne
adc
faddl
outsl
or
pusha
add
sahf
mov
add
or
outsl
or
pop
pop
push
or
or
or
or
fistl
adc
adc
adc
push
adc
pusha
add
pop
sbb
adc
adc
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
fldcw
or
add
and
add
sahf
cmc
jle
mov
inc
jle
add
push
aaa
addl
shlb
imul
mov
mov
and
pushl
inc
push
adc
pop
and
xor
inc
mov
adc
xor
cmpb
or
addb
push
or
pusha
inc
addb
add
nop
jno
adc
or
push
and
or
inc
xor
sbb
sub
arpl
and
scas
pushf
cmp
or
into
add
shrl
ja
mov
inc
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
dec
inc
jo
mov
mov
rorl
adc
mov
adc
dec
fiaddl
or
js
call
lock
sub
rcr
push
ret
xchg
and
ljmp
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
fsts
dec
sub
loope
mov
cmp
add
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
sbb
call
repnz
dec
or
adc
pop
inc
inc
xchg
add
sub
xchg
sbb
std
or
add
lds
cld
cli
jmp
jmp
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
int
jo
movsl
jecxz
pop
mov
ljmp
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
call
data16
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
aaa
std
jmp
aad
add
sbb
int3
lcall
fs
scas
mov
pop
pushl
inc
pop
movb
xchg
sbb
scas
adc
mov
xor
ljmp
lods
scas
xchg
test
aam
and
sbb
sarl
and
roll
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
outsl
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
mov
call
lea
pop
cwtl
int
arpl
push
out
or
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
lcall
incb
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
test
ljmp
mov
scas
call
les
jne
gs
jns
enter
mov
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
ljmp
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
decl
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
incl
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
rolb
in
or
mov
push
jle
icebp
adc
inc
aas
push
rcrl
negb
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
aaa
ljmp
repz
inc
sti
arpl
daa
std
or
sbb
mov
ud0
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
idiv
lds
fidivrl
jg
stos
pop
out
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
jg
mov
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
mov
push
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
ret
call
loopne
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
sar
jg
adc
lahf
mov
or
out
lcall
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
imul
or
inc
pop
xor
rorb
and
add
cmpsl
push
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
fldt
lcall
fistps
outsl
lock
in
jmp
cs
out
stc
out
mov
clc
push
std
mov
lock
dec
or
mov
fists
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
rcr
push
loop
lcall
jne
pop
cld
or
dec
div
and
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
or
or
pop
in
cmp
int
pop
mov
fidivs
clc
adc
jmp
hlt
dec
mov
dec
mov
sbb
xlat
inc
call
loopne
aas
mov
jg
mov
sub
addr16
sbb
test
outsb
cld
daa
jp
std
adc
cltd
or
mov
ret
adc
stos
pop
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
sbb
stc
lahf
loope
pusha
push
jmp
dec
shll
fbstp
out
xchg
add
lock
mov
out
icebp
mov
loope
mov
cmpsl
popf
and
cld
and
mov
fbstp
test
das
mov
inc
sub
cmp
mov
popf
js
data16
decb
adc
sbb
scas
mov
and
call
pop
inc
cltd
add
push
sbb
mov
inc
add
pop
out
or
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xorb
mov
lahf
jp
dec
add
xlat
sbb
fbstp
xchg
sarl
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
inc
sbb
iret
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
daa
xchg
pop
add
test
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
faddl
or
add
add
sti
push
sti
int3
les
push
mov
push
pop
mov
cmp
int3
pop
iret
aas
and
add
mov
or
adc
mov
inc
test
xor
cmpsl
sbb
push
adc
sub
jmp
pop
mov
pop
lret
mov
jl
addl
mov
xor
decl
pop
jecxz
lds
in
mov
jmp
jmp
sub
insl
dec
bound
cwtl
clc
repnz
mov
mov
in
movsl
xor
ret
shrb
add
adc
xor
push
xor
test
arpl
inc
adc
mov
pop
sub
fs
adc
mov
jmp
push
push
adc
sbb
xchg
sub
sub
aas
inc
shlb
dec
cmp
push
in
lcall
pop
inc
sbb
pop
or
inc
jns
inc
push
fnsave
insl
jl
mov
fs
call
out
bound
and
or
or
shll
stc
add
inc
xlat
popf
pushf
xor
jne
test
push
jl
sub
js
xorb
cmp
nop
cmpsb
jp
pop
lcall
add
mov
fwait
cltd
xchg
mov
repnz
fidivs
mov
cmc
clc
mov
dec
inc
cli
push
mov
sbb
mov
cmp
ds
scas
dec
or
imul
adc
dec
pop
mov
sbb
aam
fdivl
mov
sar
inc
sbb
or
sub
jle
jbe
sub
sbb
test
mov
outsb
pop
jge
inc
loopne
jnp
idivl
ja
out
fldenv
sti
xor
mov
repz
push
cmp
ljmp
cmp
inc
mov
out
loop
jecxz
jecxz
mull
adc
cld
ja
jb
loopne
push
test
sub
sbb
cmp
inc
push
in
xlat
cmp
xor
enter
lock
and
imul
cwtl
cmp
and
and
xorb
popa
xchg
fcomps
dec
addl
ret
and
mov
push
cmp
and
movsb
jmp
and
or
imulb
test
inc
xchg
popf
mov
outsb
sub
inc
or
mov
out
sbb
pushf
cmp
xchg
pusha
jns
mov
das
xor
ja
loope
jmp
pushf
leave
hlt
inc
pop
or
add
ss
push
gs
inc
pop
test
fildll
push
nop
cld
adc
push
add
call
loop
lea
out
mov
scas
insl
iret
sbb
or
das
pusha
xchg
xchg
bound
adc
pushl
fmuls
mov
mov
mov
jp
out
pop
xor
mov
test
and
add
lea
push
add
xor
in
sbb
aad
add
out
ss
mov
shrb
xchg
hlt
data16
cmp
fstpt
push
shll
push
stos
hlt
out
cmp
ljmp
aas
into
mov
mov
lahf
pop
cmpsb
and
jmp
ss
jmp
jae
scas
aaa
mov
and
jnp
mov
xchg
adc
incl
jmp
test
xor
inc
cmpsl
jp
dec
jo
fst
call
adc
lods
fcmovne
xchg
jnp
ljmp
icebp
cmpsb
pop
sti
mov
int
insb
adc
adc
rolb
xchg
inc
push
test
ljmp
or
jecxz
mov
arpl
loop
imul
jg
repz
fmul
add
sbb
cmp
mov
and
out
movsl
mov
sub
sbbb
or
ds
push
cmp
sub
dec
adc
int3
jp
pop
fstps
jecxz
test
jle,pn
daa
add
stos
jecxz
cmp
cmp
loopne
sbb
mov
jecxz
and
sahf
pop
add
inc
inc
mov
and
divl
push
jb
loop
sub
cmp
lods
xchg
or
call
push
ret
je
pop
dec
push
adc
popf
pop
mov
fcoml
inc
std
test
outsb
xlat
decl
test
rclb
ret
loop
and
push
jg
dec
test
stos
in
add
dec
xchg
inc
fiaddl
in
inc
jnp
mov
dec
xchg
inc
pushl
addr16
push
int
inc
mov
pop
push
push
lret
push
rcr
outsb
mov
decl
sbb
push
push
mov
xlat
xchg
inc
popa
add
jmp
rclb
inc
sbb
incl
or
jns
push
in
mov
mov
fs
add
jg
mov
int3
aaa
test
loop
ja
adc
mov
sarb
and
data16
pop
outsb
call
adc
fcomip
fldz
rorl
xlat
call
cmc
dec
push
mov
ja
xchg
adc
add
lcall
push
cmp
mov
dec
fidivrs
out
divb
mov
mov
jmp
xor
aaa
nop
into
dec
mul
fs
lcall
fidivrs
fdiv
clc
das
sbb
out
lods
dec
sahf
hlt
push
inc
adc
rcrl
mov
pop
scas
jo
mov
inc
xlat
shll
sbb
test
pop
lcall
stos
lret
decl
loop
das
outsb
or
dec
mov
aas
adc
insb
out
jecxz
std
sub
lea
dec
mov
sbb
cmp
xor
ja
fldenv
repnz
popf
sahf
xor
stos
aas
lods
stos
enter
adc
bound
aaa
ret
sbb
push
ds
jo
lret
mov
sub
call
pop
subl
mov
out
mov
xor
ret
push
lcall
cmp
mov
lea
ljmp
push
push
into
push
xor
rol
pop
sub
insb
xchg
ret
aaa
cwtl
dec
dec
lcall
stos
shlb
lods
jle
jbe
cltd
adc
incl
dec
jns
in
movsb
or
sub
jg
and
push
inc
or
outsl
sbb
jns
jg
outsl
hlt
push
mov
clc
xlat
scas
lcall
int
jge
mov
pushl
inc
xor
ljmp
das
push
dec
lcall
call
lret
outsl
std
push
mov
pop
lret
mov
xorl
rclb
ds
decl
sti
fsub
scas
cmp
jno
insl
sbb
push
jg
out
in
pop
and
or
into
andl
call
std
or
subl
scas
jo
xchg
inc
and
incl
out
mov
push
insl
xchg
daa
movl
das
pop
inc
out
and
cltd
add
sbb
lcall
in
cs
sbb
loope
fld
ja
add
pop
adc
fwait
in
ss
out
cld
rcrl
mov
push
lods
cmp
mov
and
popa
pop
cmp
jb
je
fwait
cli
ljmp
mov
push
mov
call
mov
int
je
loopne
jmp
xor
pop
aas
pop
mov
nop
lds
xlat
mov
fdivr
xchg
or
cmc
mov
aad
insl
hlt
movsb
mov
decl
xchg
adc
es
loop
cltd
jle
jecxz
inc
or
mov
pushf
loopne
lcall
push
inc
leave
lods
jmp
decl
nop
icebp
andl
and
dec
pop
mov
lcall
shl
cmpl
frstor
mov
ret
cld
and
jecxz
incl
or
sbbl
std
bound
ds
cwtl
outsb
mov
aad
repnz
mov
mov
mov
enter
popf
decl
sub
dec
mov
fwait
sti
ret
mov
jp
mov
ss
jmp
mov
loope
push
pop
subb
das
cltd
insb
cmpsl
and
xchg
xor
add
jmp
or
mov
fstpl
out
xchg
adc
je
mov
imul
mov
enter
inc
rorb
inc
pop
push
adc
pop
dec
dec
pop
push
stos
mov
or
dec
sub
add
cli
in
sbb
jns
xadd
jg
or
cmpsb
mov
add
mov
stc
mov
mov
jge
nop
call
popa
repz
cmp
pusha
and
sbb
cmp
dec
adc
pushf
or
call
jnp
nop
xor
sahf
xchg
fsts
gs
movsl
jge
push
add
incl
es
cltd
faddl
ss
and
cmpsl
pop
mov
mov
sbb
jmp
xlat
pop
roll
ret
pop
js
lods
lcall
hlt
shrl
or
cld
pop
mov
repz
loop
add
dec
cmc
scas
filds
ljmp
cli
in
xchg
jecxz
add
notb
js
add
in
pop
fwait
xchg
ja
mov
inc
xchg
dec
xchg
lock
ret
js
or
push
sbb
push
imul
sbb
jg
cmp
scas
mov
outsb
jge
pop
or
std
xor
lahf
aad
pop
aaa
sbb
lcall
ja
inc
sub
mov
das
imul
mov
adc
mov
pop
mov
push
fcomp
push
ds
push
cmp
cwtl
pop
push
and
scas
inc
in
out
popa
loopne
push
or
clc
pop
adc
pushl
inc
cmp
fimull
push
dec
dec
cmpsl
pop
pop
popa
cmp
rclb
ss
sub
aas
mov
bound
dec
imul
rolb
jns
out
add
imul
lock
jmp
addr16
repz
add
xor
cmp
sub
adc
aad
addr16
popf
leave
daa
mov
cli
call
jmp
push
jmp
add
cmp
movsl
fcom
es
xchg
decl
xor
sti
jno
push
and
repz
jecxz
push
jno
inc
ret
jp
sbb
jno
ljmp
push
mov
lea
add
das
and
jecxz
mov
aam
lret
call
cmp
jg
or
pop
aaa
lock
lahf
sbb
mov
aas
addr16
loop
and
lcall
fwait
mov
sub
sbb
adc
out
idiv
ret
jmp
imul
test
push
or
dec
adcb
insb
or
incl
jg
sbb
aas
mov
adc
inc
popa
in
push
cs
adc
hlt
sbb
bound
into
decl
in
mov
cld
in
add
adc
in
fsubl
popf
mov
popf
adc
push
jg
dec
ljmp
out
clc
popf
jmp
inc
idivb
and
call
xor
xorb
push
mov
rcll
ljmp
pop
mov
in
and
jg
mov
inc
adc
or
mov
jmp
addb
jmp
mov
dec
test
scas
aas
setl
subl
in
daa
test
mov
imulb
and
cmp
fwait
shl
sub
add
xor
ljmp
lds
pop
push
cmp
or
adc
mov
ljmp
bound
gs
pop
das
add
mov
dec
shrb
stc
inc
rolb
inc
push
dec
mov
dec
jnp
pop
push
cmp
hlt
cld
sbb
loopne
call
repnz
scas
mov
jns
es
mov
scas
xor
pop
mov
push
mov
stc
mov
ss
call
hlt
lods
push
shlb
insl
jg
and
int3
das
inc
add
ret
mov
aas
lcall
push
add
xchg
inc
pushl
xor
std
and
xchg
jne
pop
sub
testb
decl
mov
sbb
rorb
xchg
insb
fs
inc
inc
pop
dec
incl
xchg
ljmp
out
outsl
xchg
add
dec
dec
xchg
cwtl
mov
cmc
pushl
out
xchg
adc
out
in
cmp
lret
lcall
add
lods
xor
mov
loop
mov
lahf
out
fwait
clc
fimull
aas
nop
pusha
flds
push
adc
out
and
jbe
incl
daa
test
mov
hlt
adc
ljmp
mov
xlat
stos
mov
enter
mov
in
push
jmp
lods
jb
in
insb
inc
adc
scas
inc
aad
lcall
cli
bound
mov
push
jno
dec
xlat
jg
jbe
mov
dec
push
orb
push
fs
decl
sbb
or
push
popa
outsb
aaa
sub
jno
mov
movsl
mov
aas
cmpb
inc
inc
xor
add
adc
icebp
jns
leave
das
mov
adc
xchg
adc
aas
out
popf
call
insl
push
repz
lods
into
pop
aam
fldl
push
hlt
ja
jns
push
in
stc
push
push
movl
push
stos
jle
xor
rclb
bound
mov
or
pushl
cli
arpl
dec
pop
lret
xor
xor
test
jbe
fiaddl
adc
xor
jg
incl
sub
cld
xlat
xor
jmp
mov
push
pop
std
jns
ljmp
cmpl
xchg
mov
test
movsl
enter
pop
jmp
and
int
js
jg
in
scas
pop
pop
sahf
push
iret
cmp
jnp
mov
lahf
cs
dec
gs
test
insb
mov
es
cli
decl
and
lcall
data16
fldenv
mov
xlat
loop
lret
pop
fstp
dec
mov
into
sbb
arpl
repnz
add
cmp
fcomip
xor
test
xchg
inc
ss
jl
out
cmpsb
xchg
sbb
pop
xchg
stos
pop
mov
in
push
mov
push
fiaddl
jge
mov
mov
std
sub
adc
or
enter
mov
hlt
ljmp
int3
sbb
fstpt
mov
ret
mov
fmull
stc
jl
xor
sbb
jo
mov
fdivrs
sbb
push
sbb
js
mov
jmp
dec
subl
sbb
mov
mov
in
and
jae
pop
out
and
lcall
cmpsl
inc
jb
xor
and
mov
adc
or
into
fildll
pushl
push
pop
scas
sbb
test
jecxz
arpl
inc
lods
jecxz
fwait
mov
inc
pop
push
xor
icebp
into
xchg
mov
jbe
lret
pusha
pop
subb
jg
stos
fsubr
nop
or
jg
lcall
add
xchg
imul
cmpsl
aas
or
in
xchg
std
repnz
pushl
push
cmpps
push
cvtps2pd
stc
push
dec
test
enter
aad
jecxz
lahf
rcrl
mov
outsb
repnz
mov
adc
cmpl
lahf
lret
decl
pop
pop
pop
dec
es
pushf
enter
mov
xor
outsb
inc
add
ljmp
push
pop
add
xchg
cmp
cmpsl
gs
rolb
imul
jmp
sub
shlb
hlt
push
rcrb
das
nop
or
loopne
call
movsb
in
mov
sbb
add
pop
mov
aaa
jne
pushl
data16
popa
push
cmp
jmp
add
jae
test
fwait
adc
dec
adc
call
mov
mov
add
xchg
mov
xchg
fildll
xor
popa
push
cld
add
cltd
push
stc
dec
outsb
ret
push
clc
xorb
decl
stos
add
cmp
scas
jl
lcall
lods
add
in
mov
ja
pop
hlt
lcall
or
pop
sub
adcb
in
data16
fcmovnu
xor
pop
stos
loop,pt
arpl
std
inc
xchg
or
jmp
xchg
in
or
dec
jge
mov
pushl
add
enter
xor
out
pop
std
mov
insl
and
call
std
call
movl
push
cmp
push
call
xchg
xchg
sbb
pushl
pop
out
insl
movsb
xchg
lods
sub
js
xchg
inc
insb
or
out
and
imulb
push
dec
test
das
clc
jmp
mov
inc
shr
shlb
addr16
int3
sbb
jp
sub
mov
adc
incl
outsb
add
inc
sbb
xlat
inc
pop
in
arpl
call
lods
and
imulb
xchg
pop
stc
cwtl
movsb
out
in
jb
dec
or
incl
and
pushl
repz
jnp
dec
inc
sbb
or
lcall
jne
sub
out
repz
adc
mov
or
cmp
xchg
clc
incl
jg
pop
inc
loopne
adc
mov
push
cwtl
repnz
bound
and
jae
inc
incl
ja
cmp
pmaxsw
xchg
cmp
jle
int3
jnp
mov
pop
mov
sbb
mov
adc
daa
add
lcall
lret
pop
sahf
stc
in
test
hlt
sbb
int
pop
xor
adc
imul
das
or
shl
mov
jl
mov
addr16
lahf
or
incl
scas
push
dec
push
outsb
shl
push
xor
jp
sbb
push
pushf
mov
iret
pop
dec
aas
push
rclb
popf
pop
test
inc
fxch
or
cmp
push
ljmp
mov
mov
lds
xor
adcb
out
dec
and
loopne
notb
icebp
pop
push
fcompl
scas
arpl
or
cmpsb
cmpsb
ficompl
pop
xor
mov
mov
sbb
pop
push
mov
insb
push
pusha
cld
outsl
sahf
mov
fdiv
nop
imul
fcomip
jg
addl
out
jle
testb
icebp
loope
xchg
cmp
add
push
les
mov
xor
das
jle
pusha
leave
loopne
xor
sar
movsb
fildl
adc
and
fsubl
fwait
pop
in
xor
js
fnstcw
decl
and
jb
jb
shlb
sbb
mov
pop
incl
dec
inc
ja
cmpsb
sub
rclb
add
aas
stos
push
push
setne
repnz
incl
movsl
adc
cmpsl
or
jns
fildll
push
xchg
push
icebp
inc
mov
js
in
call
imul
les
mov
dec
sahf
fadds
enter
imul
sub
pop
ss
add
jg
push
push
movsl
inc
push
popa
jmp
in
ret
mov
scas
xchg
ss
lds
mov
clc
les
int3
or
lcall
push
repnz
adc
add
mov
push
inc
push
mov
xlat
std
insl
sub
stos
je
out
push
pop
xor
inc
dec
sub
push
stc
lcall
insb
ds
push
mov
in
out
xor
je
jge
sarb
sti
lcall
jne
in
fstps
cwtl
jmp
pop
rcrb
clc
scas
addr16
js
dec
incl
mov
or
mov
sub
or
int3
xchg
shlb
cwtl
mov
jmp
test
leave
lea
push
push
jno
sti
lock
xor
mov
inc
push
cltd
mov
test
dec
outsl
lahf
repnz
shlb
out
sbb
ds
pushl
dec
popf
fisttps
rorl
xchg
mov
popf
leave
out
into
jns
adc
sub
fnstcw
mov
xchg
pusha
movsl
sti
pop
loope
or
jnp
xor
sub
call
and
push
xchg
stc
jns
xor
sarb
push
mov
jo
cmpsl
mov
call
in
sar
incl
icebp
fistpll
jecxz
jl
push
js
loope
aad
cld
popa
movsb
xchg
adc
rcrb
scas
cli
call
imul
ffreep
push
hlt
sub
test
and
sub
loopne
or
lcall
incl
aad
fadds
ja
sub
mov
je
cltd
fbld
xor
push
cltd
dec
or
and
test
pushl
ds
lea
dec
inc
sbb
inc
repnz
inc
test
loop
jp
cmp
push
or
decl
cmp
cmpb
sbb
mov
cmc
jle
loopne
cld
lods
cmpsb
xchg
inc
sub
das
jnp
fsubs
push
ud2
mov
pop
xor
mov
sbb
adc
cli
dec
jge
movsl
pop
mov
incl
jo
out
leave
ret
nop
jmp
fisttps
pop
mov
daa
cmpsb
mov
icebp
insb
and
mov
je
sbb
je
sahf
sbb
jbe
movsb
dec
xor
mov
es
fcomi
pop
call
xor
sbb
pop
test
call
clc
xchg
sahf
lods
push
sbbl
pushf
data16
fs
fwait
pop
inc
out
test
orb
xor
xor
xor
cmp
jne
incl
lock
imul
faddp
inc
inc
cld
jns
xor
std
decb
fwait
call
ret
dec
push
inc
je
fmuls
mov
jge
inc
rol
out
sahf
jge
pop
jbe
push
mov
push
jo
js
jne
xchg
dec
lds
mov
sub
dec
into
xchg
push
pop
int3
lods
inc
fbld
test
mov
mov
popf
ret
push
out
and
ljmp
incl
or
roll
std
mov
lock
orb
push
xchg
in
out
push
mov
and
rep
lods
js
mov
push
xchg
inc
loopne
pop
fisubrs
decl
push
ljmp
les
xchg
shl
push
in
add
push
push
cltd
mov
jmp
cmp
inc
dec
sarb
out
or
jmp
mov
lcall
ret
lods
inc
add
pushl
cmpsb
jo
out
roll
or
dec
xchg
inc
shrb
jg
jmp
cmpsb
ljmp
pop
xchg
fisubrl
call
outsl
out
in
cmpsb
aam
loope
jp
dec
mov
adc
std
mov
das
stc
or
loopne
js
and
cmc
mulb
adc
xchg
cmp
sbb
imul
push
mov
mov
add
fmull
xchg
dec
xor
pop
xchg
ret
sbb
sub
test
mov
pop
add
jmp
cwtl
sbb
sbb
rcll
call
or
call
jns
jp
sbb
js
push
ljmp
ficoms
fdivrl
lock
jo
stc
sbb
dec
mov
fcoms
andb
stos
dec
adc
mov
stos
xor
repnz
xor
cwtl
ljmp
push
hlt
enter
add
pop
jp
push
das
js
xchg
fcomi
mov
mov
test
and
sbb
dec
xchg
push
pop
daa
mov
pop
subl
mov
incl
js
scas
jb
mov
push
loop
push
or
out
jbe
mov
sub
add
jmp
das
push
loope
aam
or
dec
enter
sti
mov
push
xor
cmpsb
cmp
ljmp
nop
enter
push
not
xlat
fisttps
sub
dec
adcb
cmp
push
jbe
mov
adc
movsb
loop
mov
sub
lock
in
mov
lock
cmp
rorb
stos
inc
bound
and
fsubrs
adc
inc
movsb
loope
dec
sarb
addb
push
pop
in
jle
iret
lcall
data16
pushl
mov
je
xorb
pop
or
mov
jecxz
je
mov
fnstsw
lods
sbb
xor
sub
mov
dec
adc
jmp
and
add
shrb
jb
icebp
incl
sbb
jle
stos
aam
daa
jle
mov
add
lcall
jge
lret
cmc
pop
fbstp
add
cmpsb
icebp
jmp
xchg
dec
dec
in
inc
xchg
std
cmpsb
xchg
jmp
or
mov
cmc
or
sub
pop
movb
div
movsl
dec
in
add
ljmp
lahf
or
aam
data16
push
sbbb
aaa
fdivrl
enter
xchg
jl
jle
jmp
std
sahf
and
or
int
jnp
cltd
cmp
mov
push
adcb
std
xlat
enter
fsubr
jnp
push
iret
sbb
idivl
xchg
push
std
jbe
data16
mov
idivb
ja
sub
add
call
popa
sbb
add
cmc
jge
push
loope
push
pop
in
adc
pop
inc
adc
cltd
and
les
ljmp
jle
cmp
xchg
mov
int
xor
mov
jp
xchg
dec
mov
pushf
insb
fsubl
movsb
jg
dec
int
dec
mov
push
test
pmaxub
sbb
sub
out
aaa
fidivrl
lcall
test
cmp
xchg
movsl
push
bound
shl
mov
sahf
sub
out
into
lock
stc
lret
es
enter
push
mov
push
or
movsb
outsb
daa
repz
jecxz
lcall
add
jl
and
inc
andb
mov
adc
int
sbb
dec
jle
lds
outsl
or
xor
mov
sub
cmpsb
pop
inc
jge
xchg
or
push
lea
xor
ljmp
call
popf
scas
mov
xor
xchg
mov
int3
mov
pop
xor
ljmp
sti
out
adc
mov
loop
test
jmp
insb
pop
mov
xchg
aaa
int3
call
mov
lods
fcmovbe
push
ja
lds
ja
shl
inc
test
into
orb
stos
cltd
push
mov
imull
or
nop
fmuls
push
xchg
xor
xor
push
xor
or
xchg
ljmp
add
nop
popa
or
sar
jle
jg
incl
xchg
jmp
les
fisubl
pop
dec
mov
push
xchg
out
lcall
or
int
inc
mov
aad
das
xor
stos
xchg
push
sub
incl
dec
movsb
scas
push
mov
mov
xor
test
and
ljmp
inc
call
adc
mov
jge
sbb
loopne
jle
arpl
int
adc
jg
jmp
adc
mov
rolb
jg
or
fs
pop
jbe
aam
hlt
stos
call
outsb
or
das
lahf
adcl
aam
or
leave
push
sub
in
jmp
adc
fistps
adc
adc
movsl
enter
subl
scas
ljmp
das
out
and
fdivl
mov
cmp
in
decl
ss
movsl
jle
scas
cmp
mov
and
dec
dec
jle
mov
mov
cmpsl
jg
test
or
and
mov
jge
outsl
std
mov
jle
inc
enter
das
clc
xor
clc
push
push
stos
mov
vpmuludq
mov
pop
cmpsl
fnstcw
fcomip
sbb
je
mov
sub
mov
sbb
decl
cld
pop
mov
gs
dec
fwait
cltd
inc
ret
aam
xchg
aaa
bound
fadd
mov
stos
jmp
lcall
inc
dec
push
push
imul
pushf
xor
pushw
ljmp
or
cmp
cmp
jae
cmp
call
lcall
sub
test
xor
mov
jmp
mov
in
enter
sub
outsb
inc
inc
and
cld
iret
jge
fs
call
outsl
aam
lahf
adc
jg
inc
data16
and
into
jl
pop
dec
test
and
dec
jns
ljmp
sar
aas
xchg
and
outsl
mov
in
incb
enter
jg
mov
bound
imul
push
xchg
incl
insb
aas
testb
scas
mov
sub
scas
je
les
lods
mov
jp
lahf
mov
ljmp
sti
movsb
mov
dec
arpl
mov
out
test
jmp
mov
enter
decl
lds
pop
jmp
xor
test
das
cmp
jmp
ss
add
jge
ds
adc
xchg
inc
add
jo
jl
mov
push
loopne
xchg
dec
cld
call
inc
pop
xchg
popf
push
popa
mov
clc
mov
jg
imulb
into
pusha
sub
xor
iret
cmp
scas
add
out
mov
add
decl
popf
outsb
aad
out
mov
xchg
inc
or
cmp
test
xchg
cmpsb
test
dec
imul
ljmp
divps
dec
mov
dec
mov
and
leave
xchg
cmpsb
dec
pusha
cltd
andb
jno
sub
pop
add
into
in
mov
pop
mov
stc
cmp
inc
in
cltd
mov
loope
filds
dec
push
jns
je
iret
jmp
or
mul
xlat
popf
sub
cmp
sti
fnstcw
adc
pop
stc
mov
pop
jnp
inc
insb
xor
xlat
dec
push
shll
mov
call
loopne
mov
push
push
fwait
pop
int3
or
arpl
arpl
out
mov
in
push
repnz
inc
mov
add
arpl
pushl
jns
or
insl
push
rorl
mov
lea
push
test
std
jns
xor
xchg
xchg
jnp
fwait
aam
add
std
ret
jge
jecxz
int3
aaa
loop
inc
mov
cmpsb
test
pop
mov
mov
outsl
add
jmp
pop
movsl
testb
mov
outsb
inc
xchg
mov
mov
xchg
fs
mov
outsl
iret
mov
push
cmp
mov
xor
jmp
add
cmp
out
iret
lock
inc
ret
jne
xchg
fsubrs
pop
or
and
addr16
mov
insl
mov
iret
imul
xor
fs
incl
cmp
leave
adc
daa
decb
dec
lock
xchg
and
enter
mov
int
add
lret
js
push
sbb
incl
xchg
sbb
push
movsb
sub
testl
fwait
popa
mov
lock
pushl
outsl
push
xor
xchg
stos
pop
cmpsl
sbb
call
and
decl
lcall
cmpsb
mov
pop
pop
add
cmpsb
testl
push
mov
cmp
es
jno
pop
mov
repnz
mov
lcall
mov
call
jmp
roll
rcl
ret
jne
adc
fwait
loop
adc
jmp
out
mov
sub
and
fbstp
push
imul
aam
xlat
gs
sarb
inc
adc
sub
movsb
push
pop
pop
scas
nop
std
fbstp
cld
repz
jns
jnp
adc
fisttps
xchg
push
mov
fcoml
jecxz
pop
mov
lods
lods
bound
sub
sbbl
jmp
icebp
pop
xchg
sbb
fstpt
add
jmp
add
pop
mov
ljmp
pop
push
js
mov
push
out
cmpsl
cmpl
repz
int
aad
in
cmp
mov
fsubrl
mov
or
shl
xlat
mov
lea
dec
repz
mov
mov
or
sub
add
push
pusha
mov
nop
and
lock
popf
je
fdivrp
ljmp
int3
lods
xor
lret
test
addl
adc
fwait
lcall
cwtl
insl
in
push
aad
movsb
sub
stos
mov
lods
inc
ret
ficompl
ret
dec
es
cmc
mov
pusha
loope
lahf
cltd
sahf
aas
and
call
je
xchg
sarl
nop/reserved
ja,pt
aaa
xor
and
cmc
mov
cli
mov
loop
pushl
xor
jmp
jecxz
cmp
sub
cmp
std
arpl
jb
gs
mov
inc
lret
call
mov
xlat
and
push
mov
sbb
push
enter
mov
jo
xlat
sbb
and
cli
repnz
or
das
sbb
add
push
je
test
or
cmp
mov
psubb
xchg
add
inc
sbb
xor
push
movsl
sub
mov
loop
jmp
ret
xchg
inc
repz
lods
xchg
call
fcomps
mov
xor
xchg
dec
fcmovb
aad
cmp
mov
enter
mov
xchg
dec
stos
jge
pushf
out
sbb
jmp
jae
cwtl
pop
push
dec
xchg
call
add
jmp
add
out
cwtl
push
sub
mov
iret
insl
adc
jmp
dec
jle
inc
xor
adc
mov
and
dec
imull
sub
sbb
pop
xchg
pushl
xor
js
ss
xchg
inc
int3
push
xchg
jns
jg
lods
icebp
pop
pop
inc
cli
adc
xlat
test
stos
call
pop
aam
sahf
scas
dec
jl
jecxz
mov
idivl
cld
xchg
pop
sbb
sub
push
xor
mov
sbb
xor
nop
xchg
scas
mov
outsb
add
ja
pop
scas
test
pop
pop
movsb
push
and
jnp
enter
aad
ljmp
dec
fsub
aas
shll
push
xor
call
inc
mov
incl
aad
pop
inc
mov
sub
jbe
ja
lock
in
mov
mov
clc
loop
repz
incl
jle
inc
or
jbe
fmuls
repz
push
lahf
dec
mov
std
movsb
sar
decl
imul
movb
mov
cmp
fidivs
jg
xor
pushf
aaa
push
arpl
sub
add
jbe
movsb
and
xchg
test
lcall
popa
in
push
in
pop
dec
lahf
inc
insb
subb
sbb
lret
out
idivb
sbb
lcall
outsl
mov
xchg
in
aas
jo
inc
and
leave
sub
pop
stc
in
rcrl
fld
mov
decl
pop
jmp
push
stos
mov
xorl
sbb
call
cmp
cmp
and
cmp
fildll
jne
jp
cmp
lcall
sub
mov
movsb
jbe
inc
setno
xor
sbb
sub
and
jg
sarl
xchg
stos
call
and
mov
out
lds
sub
scas
xchg
iret
adc
call
cmpsb
cmp
xor
les
outsl
pop
adc
jge
lahf
aam
incl
fisttps
mov
popa
mov
addr16
fldcw
addr16
mov
call
std
push
push
fstps
adc
adc
fwait
lcall
sub
jmp
std
mov
or
cs
dec
jbe
dec
sahf
sahf
dec
mov
cld
ljmp
cltd
adc
xor
and
dec
lds
andb
push
call
insb
mov
mov
aam
xorl
repnz
les
push
decl
jp
pop
xchg
loop
xchg
adc
jg
sbb
outsl
dec
push
jecxz
icebp
mov
int3
ljmp
in
lods
mov
jno
sub
xchg
out
sarb
cmpb
out
fsubrl
jnp
inc
xchg
pusha
mov
test
fwait
cltd
xchg
imul
pop
mov
mov
lret
mov
test
sub
add
push
aam
add
std
aaa
cld
pushl
xchg
push
rcrb
iret
mov
aad
jnp
jp
dec
sbb
mulb
mov
incl
and
test
xchg
lods
sbb
dec
fst
pop
js
bound
jo
xor
decl
lea
dec
or
push
dec
in
std
pop
sbb
dec
push
or
adc
sub
incl
fidivrs
xchg
mov
mov
and
imul
inc
cltd
mov
xor
lcall
popf
test
cli
xor
andl
add
nop
jle
leave
lcall
jl
jns
jno
adcl
inc
popf
inc
loop
add
daa
in
cli
jg
jge
add
test
les
imul
decl
bnd
pop
pushf
dec
and
das
in
inc
xchg
lods
ret
call
jge
loope
inc
push
scas
sub
jecxz
mov
lods
pop
adc
pop
push
dec
cmpsl
sbb
test
scas
xchg
rolb
into
or
mov
pushl
and
sbb
push
pop
mov
sbb
mov
xchg
dec
xchg
scas
dec
push
movsl
clc
aaa
mov
dec
sub
jle
jb
jnp
mov
cmp
cltd
imul
pop
ljmp
cmp
dec
xchg
aas
xchg
mov
mov
dec
mov
adc
and
cltd
xor
std
decl
repz
test
or
in
aad
fninit
sub
dec
xchg
je
and
das
add
mov
and
xorl
pop
aam
sbb
push
mov
call
ljmp
inc
jnp
sub
or
push
add
jae
movsl
and
mov
cmp
pop
outsb
jbe
and
js
outsb
pop
pusha
aad
ljmp
sahf
pop
sub
cmp
fcomip
sub
in
icebp
xor
jnp
arpl
jnp
clc
fcoms
ljmp
jb
das
add
aas
or
lods
outsl
les
addr16
stos
xlat
dec
inc
push
test
repnz
push
adc
sti
incl
lahf
ja
cltd
pop
repnz
dec
lods
push
mov
rorb
test
adc
or
cmp
push
mov
add
lods
repnz
mov
insl
loop
decl
adc
cltd
sub
mov
add
xchg
adc
xchg
punpckhbw
ljmp
ljmp
xor
gs
and
add
shlb
adc
incl
rorb
push
mov
stos
divb
mov
push
mov
dec
mov
jo
push
pushl
loop
imul
cltd
ret
jl
fimuls
jne
out
adc
inc
fistps
lcall
clc
out
push
fcmovnu
lock
filds
shl
mov
insb
fisubrl
fucomi
push
push
mov
mov
lcall
mov
pusha
mov
decl
pop
lds
add
cli
test
xor
cmpsl
icebp
xchg
int3
lods
das
les
call
mov
jnp
sub
in
push
inc
push
dec
pop
pop
pop
shll
jnp
loop
jns
mov
rolb
jmp
fistps
movl
rclb
outsb
and
test
inc
int3
jno
sbb
lret
loope
or
jns
out
push
fsubrs
outsb
inc
dec
lret
popa
dec
mov
sahf
cmpsb
and
pop
mov
cmp
lock
lcall
inc
cmp
lds
cmc
push
cmc
dec
les
sbb
call
test
mov
mov
roll
sbb
mov
push
ss
lea
hlt
incl
js
lods
iret
xor
hlt
sbb
fcoml
psubb
scas
adc
cmp
call
leave
sub
xchg
jecxz
int3
pop
js,pt
push
hlt
lock
movsb
sahf
insb
lds
xor
cli
xchg
in
stos
fs
jo
xchg
add
mov
std
xchg
sub
mov
dec
aad
add
fprem
call
mov
loop
fidivrs
add
cli
or
cmp
fsubrl
out
gs
xor
and
incl
fs
out
pop
xor
mov
and
in
popf
jp
pop
lock
jle
stos
pop
and
mov
adc
xchg
leave
pop
push
enter
adc
adc
push
fdivrl
push
dec
pop
loopne
or
loopne
ds
out
fistpll
xorb
adc
adc
pop
loopne
cs
sbb
test
js
mov
mov
nop
xor
mov
in
push
mov
popf
aam
sbb
inc
ljmp
shrb
adc
sub
loopne
push
fwait
mov
in
enter
stos
jg
pushl
jg
mov
rol
mov
jnp
shll
adcl
int3
ret
xchg
add
push
sarb
ljmp
out
orb
ret
jae
idivb
sti
dec
mov
lods
das
hlt
cmc
mov
aaa
mov
mov
leave
ret
imul
mov
xlat
ja
sar
sbb
or
xchg
mov
sbb
xchg
jp
cwtl
sub
cmp
pusha
xchg
pop
cmp
jge
xchg
stc
xchg
sbb
cmpsb
inc
mov
mov
xchg
mov
cmp
push
out
sbb
adc
jns
mov
call
lahf
mov
mov
ds
push
leave
push
shl
repz
mov
enter
lcall
mov
repz
dec
cli
lock
mov
cli
decl
ficoml
rcr
movsb
mov
ljmp
dec
test
pop
cld
jbe
mov
or
adc
add
inc
mov
outsl
xchg
and
xchg
and
mov
jge
jge
mov
imul
or
jno
inc
rol
mov
outsl
xor
enter
call
cmp
pop
mov
ret
dec
inc
iret
lock
aam
fldl
into
sub
stos
pop
sbb
adc
movl
jne
xor
fs
call
sbb
push
stc
xor
pop
pop
test
adc
cmpsl
in
cmp
mov
decl
out
imul
sub
enter
jp
lea
sbb
mov
lcall
fwait
std
shrl
push
or
stos
mov
mov
mov
mov
sar
ljmp
xor
into
scas
xor
fimull
mov
outsl
jbe
call
stos
and
mov
or
mov
cmp
mov
popa
sub
jl
ret
test
jge
out
xor
lcall
aam
xor
adc
loopne
xchg
dec
lods
add
or
or
cmpsl
gs
int3
repnz
mov
fstp
pop
lods
sbb
add
mov
pop
mov
andb
xlat
jg
push
repnz
push
pop
jl
ss
cmp
ret
insb
pop
jbe
outsb
mov
pop
jg
ljmp
dec
xlat
popf
or
lahf
out
sbb
adc
mov
incl
jg
and
aad
xor
push
in
pop
jmp
mov
cmp
decl
xor
insl
std
adc
xor
cltd
subb
xchg
loopne
sbb
call
xchg
rcrb
hlt
outsl
mov
sub
pop
mov
in
loope
mov
mov
call
jo
dec
and
lret
arpl
lret
xchg
and
add
cmc
adc
mov
xlat
cmp
mov
ss
xchg
push
xchg
jo
pop
or
push
sbb
adc
sbb
push
js
and
mov
xchg
data16
pop
setle
fwait
sub
rol
mov
push
psubsb
jnp
xlat
lea
jge
xchg
repz
jb
jnp
aad
in
sbb
add
inc
cmp
push
pop
rolb
jne
or
push
cs
push
cmpsl
inc
pop
push
decl
mov
push
das
sti
push
mov
sub
pop
or
sbb
pop
and
cld
pop
es
rcrl
sbb
cli
rcll
or
jecxz
xchg
mov
or
movsb
cmp
jmp
mov
lea
psrad
aam
leave
dec
inc
push
insl
dec
push
insb
jnp
mov
incl
dec
out
out
and
call
xchg
notl
loopne
stos
push
popa
or
std
in
les
push
loope
std
out
int3
xchg
rcr
xchg
jno
cmp
push
push
jne
sbb
xchg
out
sarb
ds
lret
std
out
popl
fdivrp
call
dec
pop
mov
aas
xchg
adc
mov
and
jns
stos
mov
dec
sub
fadds
sti
jge
adc
test
sub
push
sbb
pop
sub
sti
push
pop
push
dec
idivl
fistl
mov
jg
scas
adc
shrb
jmp
fstps
stc
cli
call
xchg
enter
jmp
mov
sub
inc
in
int3
ficomps
test
push
out
mov
scas
lock
shrl
inc
mov
jle
lcall
adc
mov
inc
pusha
jno
dec
add
pushw
mov
add
mov
cmp
sarl
shll
decb
mov
jle
jae
movsl
repz
repz
or
and
std
clc
into
mov
icebp
dec
pop
adc
push
and
push
mov
iret
fwait
rclb
scas
mov
dec
xor
xchg
and
cld
mov
and
xchg
loope
cmpsl
or
shrb
shl
ljmp
cli
sbb
mov
xor
and
adc
mov
xchg
jns
int
ljmp
sbb
les
cmpsl
outsb
imul
jp
mov
decl
jne
adc
mov
xor
sbb
xchg
fwait
cmp
decl
jp
push
xor
push
xor
mov
shr
xchg
clc
dec
mov
sbb
lret
dec
push
lret
cli
pushl
into
sub
fdivrl
or
daa
or
out
or
jecxz
add
decl
cmc
xchg
dec
je
mov
enter
jb
pushf
into
mov
jb
cli
aaa
xlat
bound
push
mov
jge,pn
icebp
inc
decl
ja
jae
jno
push
cmp
push
push
and
jns
inc
mov
jno
decl
jmp
add
out
bound
pop
pop
push
mov
mov
jo
xchg
xor
decl
into
jno
jae
or
out
jae,pn
or
mov
decl
out
mov
and
insb
cwtl
pop
mov
cmp
sbb
pmuludq
pop
mov
xchg
incl
mov
lcall
mov
jnp
push
stos
rorb
jae
pop
jecxz
inc
test
faddl
shlb
gs
movsl
mov
mov
incl
add
sti
insl
fisubrs
jecxz
lcall
inc
fstl
lds
push
pushf
lcall
enter
decl
std
add
inc
and
mov
fs
adc
mov
je
mov
adc
ja
iret
in
data16
pop
push
jae
ud1
es
aas
aaa
lods
lret
add
inc
std
imul
lret
adc
arpl
adc
icebp
mov
mov
and
ret
out
lahf
je
push
mov
call
shr
arpl
or
xor
jmp
out
leave
orl
test
nop
cmp
jo
cld
lcall
xor
ret
inc
push
loopne
sub
cwtl
addb
push
gs
ja
adc
lcall
std
xchg
push
cmp
std
mov
test
mov
jge
adc
call
js
cmpsl
cmpsb
flds
jo
push
xchg
sub
adc
ret
mov
jmp
std
mov
mov
jmp
cmc
and
repz
jg
stos
pop
pop
push
cld
push
cmp
out
add
cmp
push
push
int
jno
pop
lcall
incl
cli
ret
push
pop
xchg
mov
and
push
movsb
decl
mov
dec
hlt
xchg
ja
inc
rorl
pushf
in
loop
cmp
aad
ljmp
pop
add
xor
mov
in
jb
sbb
push
xchg
and
lahf
sti
add
test
mov
lcall
test
or
lods
mov
std
and
push
sub
mov
sahf
enter
ljmp
sbb
filds
mov
subl
in
rcr
and
jmp
mov
outsl
or
jecxz
hlt
sbb
xor
fldcw
stos
xchg
inc
and
and
decl
xchg
lahf
fld
push
in
stos
sub
es
outsb
or
incl
sub
push
hlt
or
add
mov
lret
into
dec
cwtl
cmc
jae
lds
in
std
mov
mov
int
push
outsl
pushf
lahf
mov
decl
pop
pop
cmp
dec
lahf
xchg
aaa
stc
popf
cli
inc
test
or
cmpsb
or
mov
call
movsl
xor
fucompp
jl
and
xchg
loope
aas
ss
ljmp
loopne
lods
push
test
add
aam
movsb
mov
data16
xor
jg
pusha
sbb
mov
sub
lret
nop
sub
cmpsl
pushl
add
mov
pop
add
enter
mov
hlt
movsl
xor
sub
outsl
dec
pop
call
call
mov
std
jo
pushf
cmp
dec
mov
ret
int3
inc
pop
sub
decl
cmp
iret
mov
out
data16
fwait
mov
rcrl
loop
call
inc
fsubp
mov
add
shlb
dec
es
mov
rorb
in
decl
loopne
cmp
ss
sbb
mov
pop
dec
xor
pop
fld
sub
lock
imul
pop
cli
dec
orl
adc
scas
mov
add
sarb
add
push
push
ljmp
push
aad
ss
in
xor
cmc
push
dec
fidivs
ret
shlb
inc
pop
ljmp
movsb
aaa
xchg
sub
fsubrp
and
scas
xchg
iret
movsb
je
xchg
sub
call
add
lret
mov
xchg
sbb
iret
push
xchg
jbe
jecxz
in
inc
out
cli
decl
mov
mov
cmp
cmp
lret
pop
adc
add
pop
or
lcall
js
inc
jb
mov
cs
mov
aad
xor
nop
lcall
fprem1
popa
shl
pop
shll
pop
pushf
xchg
incl
xor
add
out
rclb
xor
inc
mov
push
fadds
jg
fwait
push
cltd
adc
jmp
pop
test
enter
das
xor
les
sbb
sbb
pushl
xor
or
inc
inc
jmp
xor
arpl
das
fsubr
inc
outsl
pop
loope
push
decl
bound
cmp
lret
stos
into
loop
stc
test
insl
sub
mov
lock
jg
sub
xchg
cmc
fwait
cmp
mov
and
mov
sbb
arpl
xor
sahf
lods
cmp
mov
frstor
std
push
ja
es
jmp
sbb
ljmp
xor
sti
stc
insb
imul
jg
and
rcrb
or
jns
sbb
aaa
insl
call
pop
xchg
mov
and
fcmove
fists
ss
push
in
loop
or
jmp
inc
rorl
mov
in
push
and
test
xchg
xor
je
loopne
daa
aaa
call
sarb
aad
dec
inc
int3
xor
xor
loop
popa
pop
nop
jecxz
mov
call
jmp
les
or
or
push
cltd
xor
or
jmp
mov
adc
pop
push
mov
loopne
or
jo
outsb
call
pop
cs
sar
ljmp
jecxz
call
shrl
sub
dec
jp
test
jmp
sti
xor
les
sahf
inc
xor
sub
pop
in
jb
jae
std
jmp
lcall
test
jle
push
cmc
add
pop
and
fsubrl
fists
stos
enter
push
sub
adc
dec
jae
fnsave
mov
pushl
sub
xchg
shl
popf
outsb
decb
push
mov
push
hlt
bound
push
ret
sbb
aam
mov
scas
push
dec
pop
and
jae,pt
nop
dec
sbb
decl
nop
jne
add
jnp
lcall
js
dec
jae
jg
in
popl
add
ljmp
mov
ss
rep
lcall
insb
lcall
mov
dec
dec
pop
cli
pusha
lahf
xor
dec
fldl
rorw
add
xor
inc
decl
sub
jnp
xchg
mov
fcmovbe
pop
mov
cmpl
call
pop
and
mov
push
fisubs
xchg
cmp
out
cli
call
vmwrite
repz
jg
mov
fnstenv
add
push
dec
mov
out
mov
cltd
mov
insl
sbb
bound
pop
inc
mov
jno
iret
out
pop
rclb
mov
jbe
scas
repz
xchg
push
jae
decl
adc
out
dec
scas
jae
dec
jne
add
es
mov
cmp
add
pushl
jecxz
sub
cmp
scas
ds
push
and
icebp
mov
ja
mov
mov
lds
idiv
decl
mov
insl
add
gs
leave
xor
xchg
jb
data16
mov
mov
jecxz
jecxz
movsl
popf
mov
mov
outsb
add
popf
sahf
xchg
imul
xchg
jl
movsb
cli
xchg
into
ljmp
lods
icebp
push
bnd
or
push
cmp
filds
cmp
fcomip
ljmp
fsts
mov
arpl
sub
pushl
rorb
pop
sbb
cld
inc
sbbl
xchg
lret
frstor
fistps
lock
jmp
add
xor
cmp
add
shl
push
movsl
push
pop
mov
rcll
cmc
aad
inc
pop
dec
fisubl
fisubrl
lock
lahf
shll
iret
fstl
push
push
jl
pop
test
xor
mov
dec
jno
xor
push
sbb
push
insl
dec
aas
das
mov
out
iret
repnz
dec
pop
insl
in
push
orl
push
xor
negl
sub
add
out
stos
dec
fcomip
or
lahf
pop
or
jbe
in
outsl
sbb
add
jbe
adc
mov
xor
cmc
xlat
or
mov
test
jge
push
pop
int
movswl
movsl
xchg
pop
jmp
call
cld
lcall
push
pop
mov
dec
orb
xchg
outsl
cli
mov
test
push
push
cmpsb
fmull
js
daa
xchg
jno
cli
in
inc
xlat
mov
xchg
xor
adc
leave
int
dec
push
in
push
pop
test
sbb
mov
xchg
std
ljmp
aas
test
inc
pushl
into
test
adc
adc
call
and
loopne
jp
arpl
push
inc
xlat
mov
jecxz
imul
inc
fldenv
xor
inc
xorb
dec
das
jg
push
out
jmp
in
ljmp
int3
mov
or
push
sub
or
pop
inc
push
ljmp
cmpsb
sbb
inc
repnz
repnz
xchg
je
lds
enter
fildll
xor
mov
test
mov
mov
in
clc
rcll
mov
lcall
xchg
int3
leave
ljmp
dec
mov
lret
call
scas
inc
inc
in
les
mov
add
lret
jne
rol
ja
inc
xchg
out
cmp
jp
cli
ljmp
lahf
popl
dec
sti
pushf
pop
cmp
fimull
mov
cmp
out
cli
ret
ljmp
test
mov
das
pusha
cmp
call
rclb
dec
sub
pop
mov
repnz
test
pop
inc
adc
shlb
or
or
jns
mov
test
ja
or
and
incl
imul
into
fs
imul
sub
cld
push
push
cs
in
mov
fcomip
lea
mov
adc
sarb
mov
test
test
mov
cmp
mov
dec
and
jg
lahf
lcall
mov
icebp
jle
cld
in
sub
pop
push
les
lcall
cld
inc
jb
add
sbb
jge
sarb
mov
dec
dec
leave
pushf
inc
subb
push
cmp
push
lods
push
sub
jne
mov
in
cwtl
icebp
cmp
sbb
in
call
call
adc
inc
add
xor
leave
cmp
push
adc
pop
decb
and
mov
inc
pop
xchg
mov
push
sti
js
or
sbb
into
or
mov
ficoms
mov
push
cmp
cmc
leave
push
sub
and
mov
lods
mov
jg
lcall
test
mov
std
lods
push
and
lretw
dec
or
pushl
and
cmp
in
sub
mov
adc
mov
pop
shr
and
ljmp
test
outsl
xchg
jp
push
sub
push
cs
and
adc
fcomip
out
jp
add
adc
lea
mov
test
push
push
sbb
pop
mov
sahf
jbe
push
stos
push
jo
in
xchg
mov
pushf
pusha
jmp
add
bound
push
dec
cwtl
push
imul
aas
xchg
roll
cmpsl
push
xor
adc
mov
loop
pop
into
cmp
stos
mov
cli
inc
into
stos
lds
cmp
cmp
ret
mov
pop
fbld
inc
pop
sarb
fwait
mov
sbb
lea
xor
jmp
lret
cmp
hlt
pushf
cmc
cwtl
mov
cwtl
push
stos
ss
or
sub
ljmp
lods
pmovmskb
cli
jmp
in
fcmovnu
ljmp
sbb
lcall
add
and
ret
jns
adc
and
xor
add
pushl
mov
pop
aaa
mov
jg
test
adc
pushf
and
inc
incl
pop
test
adc
insl
xchg
push
addr16
xchg
popf
pop
insb
jmp
adc
xor
jbe
enter
call
xor
inc
add
or
cltd
cmpsb
int
or
or
les
xor
incl
ljmp
push
xor
arpl
pop
lock
fldenv
sahf
insb
testb
xor
test
mov
pop
jp
sub
call
jl
repz
das
adc
cmp
jmp
ret
in
push
cmp
mov
adc
pop
and
sbb
pop
lea
repz
jg
lcall
inc
or
lret
in
icebp
xor
movsl
xchg
jp
mov
decl
out
cmp
inc
fwait
dec
add
out
mov
jo
out
sub
std
das
jno
decl
lock
subl
jns
cmp
sbb
mov
sub
jg
mov
out
sbb
sahf
out
dec
sbb
or
adc
jecxz
in
sbb
pusha
add
jae
ljmp
lock
ds
movsl
inc
pop
add
pop
call
repz
mov
jg
lcall
adc
cmp
repnz
ljmp
push
mov
cmpsb
sahf
in
jge
mov
loope
pusha
adc
fmull
pop
dec
or
call
loop
test
pusha
movsb
in
xor
test
cld
sub
das
imul
out
movsb
mov
xor
lods
arpl
pop
push
jbe
adc
push
std
lcall
loope
xor
add
push
push
push
xchg
mov
cwtl
jg
roll
shrl
cltd
clc
int3
cmp
inc
outsl
daa
into
cmpb
xchg
mov
outsb
orl
insb
leave
mov
jmp
add
out
movsl
xor
shrb
adc
test
dec
scas
jmp
ret
mov
ret
cmp
ret
aad
imul
jae
or
sbb
stos
cmp
ljmp
repnz
cmp
decb
xchg
dec
fadds
lahf
xlat
jp
mov
sub
mov
lret
cmp
push
push
lret
cs
test
mov
notl
cmp
pop
pop
fs
sub
lcall
mov
sti
ror
rcrb
shrb
stos
rcll
pushl
into
fcomp
cmp
mov
inc
add
mov
push
jnp
jl
decl
or
xchg
loopne
adc
aaa
or
push
push
mov
lahf
inc
push
xchg
bound
cmp
sar
inc
aam
scas
call
add
mov
push
push
mov
out
das
pushl
mov
enter
pushf
int
clc
mov
add
shrb
lahf
jae
fcomip
pushl
and
das
dec
and
adc
stos
cmc
int3
mov
incl
fimull
daa
xor
jnp
lock
lods
andl
inc
mov
mov
push
dec
push
shlb
iret
mov
mov
lcall
xchg
push
outsb
and
add
aad
out
clc
pop
push
int3
pushf
xor
fwait
shrb
cmpb
mov
lcall
cmp
pop
cmp
push
cmp
cmpb
xor
out
call
xchg
bnd
jl
mov
xchg
scas
test
add
outsb
push
incl
test
push
xchg
arpl
xlat
in
mov
pop
cmc
pop
in
ljmp
adc
dec
test
pushf
clc
xor
arpl
cmp
call
push
lds
outsb
sub
int
and
lea
loop,pt
dec
inc
movb
dec
mov
pop
fucomp
lds
popa
adcl
jno
ljmp
push
icebp
call
das
insl
aad
mov
std
push
or
loop
xor
fbld
shlb
test
shlb
push
xor
enter
std
in
movsl
js
jl
mov
fcmovnu
in
push
test
cmp
mov
cli
incl
sub
push
jne
pop
cmpsb
repz
int
ja
dec
nop
jg
sahf
mov
sbb
fildl
stos
cmpl
mov
in
out
incl
movsl
es
push
cwtl
lods
ja
dec
and
bound
jae
sub
cltd
aaa
and
pop
mov
insl
scas
lds
in
jmp
rcrl
jg
xchg
es
aad
or
cmp
cld
mov
stc
cwtl
pop
out
dec
xchg
mov
push
ficompl
cmp
mov
xchg
jmp
mov
test
push
inc
or
notl
decl
stc
or
add
dec
jae
jge
shl
sti
mov
mov
call
sahf
or
xchg
and
xchg
lods
arpl
xchg
ljmp
xor
sbb
cmp
outsl
lods
call
repnz
ss
jmp
mov
insb
movsl
mov
jg
daa
imul
rorl
mov
sbb
xchg
and
or
mov
jmp
adc
xor
cmp
cmp
jo
sub
cwtl
xchg
xor
mov
incl
gs
ret
fisubrl
cmc
xor
nop
in
call
sbb
pop
jg
decl
fists
sub
in
push
lds
clc
adc
or
incl
lock
jns
mov
pop
xchg
int
aad
test
dec
shrb
jg
mov
mov
mov
fidivrl
push
out
cmp
sub
clc
adc
filds
jae
ret
lods
xchg
jb
out
sub
jecxz
fistps
mov
xchg
push
js
rorb
rorb
mov
inc
push
jnp
push
pop
or
jge
pushf
sub
sahf
or
inc
rcl
jl
add
mov
daa
call
push
cmp
xor
lret
adc
jne
movsl
add
pushf
mov
jb
outsb
cmp
rcl
fldcw
push
cmp
jp
jg
ljmp
sub
es
adc
mov
sbb
call
bound
pop
mov
stos
xor
ret
lahf
adc
jmp
pusha
jmp
leave
adc
mov
aad
dec
mov
cld
xor
sub
adcl
ljmp
out
rcll
push
sti
mov
cmpxchg
pop
stos
scas
adc
ret
movsl
adc
incl
addr16
cmp
sbb
sub
aad
pop
ja
sar
insb
insb
sub
lret
data16
orl
push
call
sub
dec
mov
mov
in
pop
out
jge
push
stc
outsb
push
push
int
out
xor
cmc
pop
incl
mov
and
mov
xchg
or
xor
add
lret
test
mov
pop
std
incl
pop
dec
pop
loop
mov
pop
cld
push
mov
xchg
gs
lcall
or
push
push
stos
cmp
test
or
ds
std
adc
test
mov
lcall
andl
jmp
movsb
outsb
rcll
jbe
pusha
es
jge
loop
cmp
mov
cmovg
movsb
and
fmuls
outsb
std
adc
subb
incl
xchg
notl
mov
xor
push
mov
pop
ror
push
data16
jnp
pop
scas
xchg
movsb
cmc
mov
fistps
adc
outsl
mov
incb
lock
jmp
flds
jmp
ja
mov
in
sbb
jp
scas
hlt
push
add
test
stos
inc
outsb
sub
out
dec
flds
ret
pop
xor
ss
sbb
xchg
fwait
xchg
pushl
decl
xchg
test
push
cmp
mov
testb
push
clc
dec
push
jg
popa
cld
mov
adc
add
pop
ja
jmp
lods
test
cmp
lret
mov
xor
inc
inc
jo
in
pop
mov
jne
shr
cli
pushl
lds
repnz
mov
and
loop
sbb
mov
je
fisttps
cld
mov
repnz
insb
sbb
je
idiv
fldl
cld
imul
push
push
sbb
pop
sub
cmc
fstpt
dec
inc
rclb
loopne
add
add
jns
inc
insb
xchg
rcl
out
incl
in
adc
push
loop
addl
jns
scas
jnp
les
cli
and
incl
mov
mov
mov
or
dec
sarl
mov
nop
dec
xchg
pop
pop
les
pop
cmp
pop
orl
fildll
cmpsl
into
pushl
jmp
xchg
es
cli
orb
pop
push
mov
xchg
push
or
ficomps
sub
push
xchg
stos
leave
pop
mov
and
or
push
loopne
or
dec
add
adc
out
and
repnz
pop
enter
push
sub
jmp
dec
or
dec
popf
lods
or
cmp
sub
out
dec
jle
inc
mov
decl
repnz
xchg
movsb
cltd
dec
enter
jp
idivl
nop
ret
or
sub
mov
clc
fs
sbb
inc
cli
xchg
fildl
icebp
popf
sbbb
dec
fistps
or
shl
hlt
lds
and
xchg
mov
pop
pushl
jmp
icebp
lods
mov
mov
mov
dec
xchg
ljmp
jle
incl
js
pop
ror
xor
and
mov
mov
test
pushl
jnp
add
das
or
inc
scas
repnz
jns
xchg
pop
xor
call
clc
inc
testl
jecxz
shr
sbb
sbb
decl
mov
enter
jmp
sarl
pop
xor
xchg
pop
xchg
stos
addr16
decl
icebp
xlat
sub
jbe
mov
hlt
ja
and
pop
dec
sbb
xchg
inc
add
out
repz
loop
decl
call
mov
mov
repnz
and
jb
mov
pop
jno
dec
in
insb
pushl
mov
out
xchg
decb
arpl
add
adc
add
mov
incl
add
ss
mov
lret
push
dec
lret
fucomp
xorl
iret
ljmp
cmp
pushl
xor
mov
xchg
rcl
add
cli
or
in
insb
mov
sbb
mov
leave
in
data16
pop
mov
bound
cmpsl
add
cli
mov
fnstsw
pop
test
jg
out
jne
xor
push
push
addr16
xchg
mov
call
xor
jl
js
mov
adc
sbb
jmp
pop
icebp
push
dec
sti
pushaw
xchg
out
clc
inc
and
pushf
jmp
and
or
in
xor
daa
clc
incl
cmp
js
test
add
xor
lods
lea
add
inc
ljmp
sarb
mov
stc
mov
mov
push
pushf
sub
or
scas
xchg
push
mov
iret
pop
mov
leave
mov
dec
test
pushf
pop
pop
jmp
int
test
cmp
lret
imul
dec
mov
pushf
sub
addr16
pushf
sub
arpl
lea
cld
adc
jg
xor
pushl
lock
dec
stos
pop
ds
jnp
and
pop
sbb
movsl
ret
imul
mov
in
xor
outsb
sbb
es
inc
xchg
scas
ljmp
sbb
in
jne
xor
mov
or
cmc
mov
hlt
push
mov
push
sub
pop
imul
cmc
cmp
and
insl
data16
hlt
pop
pop
icebp
jmp
out
popa
inc
dec
inc
cwtl
push
inc
xchg
adc
add
std
push
dec
call
xor
decl
mov
in
cltd
stos
out
cli
sarb
inc
test
ja
js
in
test
lcall
lods
sbb
jmp
rcr
pop
push
negb
aaa
mov
cld
in
jbe
dec
repnz
bound
sbb
push
lods
xor
outsl
cli
push
pop
mov
jbe
cmp
decl
add
mov
lret
inc
lds
jnp
rol
lret
sbb
repnz
incl
fldcw
testl
xchg
mov
aam
add
jns
sbb
decl
call
jp
xor
ja
lret
add
movsl
jns
aam
or
push
lcall
jmp
iret
pop
ret
mov
or
sbb
faddl
incl
lock
mov
imul
rorl
fistpl
addr16
or
pop
repz
cmp
mov
ljmp
mov
cmpsb
xor
sahf
fsubrs
sar
jg
sub
sbb
ror
out
out
into
imul
repz
sbb
mull
push
std
incb
sahf
jbe
adc
inc
rclb
jp
jl
xlat
push
lcall
das
xor
aad
pop
add
pop
adc
cmovnp
fs
lock
lcall
bound
cmp
fs
rorb
fcomp
sbb
incl
or
mov
mov
cld
int3
out
and
sar
clc
jmp
test
push
addl
mov
gs
cld
or
cmpsl
pop
ss
xchg
push
inc
sub
ja
fcomps
jle
sbb
or
movsb
pop
jno
jg
std
inc
adc
adcb
add
call
lea
adc
push
mov
pop
cmp
icebp
pusha
outsl
bound
pushl
jl
push
fidivrl
bound
jg
outsl
andl
lret
jp
scas
sbb
adc
sub
cmp
mov
adc
jb
cmc
pop
lods
sti
test
pop
test
in
mov
mov
xlat
decl
stos
sub
cmp
notb
aam
shll
push
rol
mov
push
push
jg
outsb
fs
test
ret
ret
cmp
pop
les
pop
and
xor
icebp
pop
outsb
inc
mov
stos
icebp
jne
movsb
add
incl
sub
jl
cmp
je
push
jne
je
cmc
xlat
inc
pop
es
std
gs
inc
pop
pushl
sub
inc
pusha
dec
dec
push
inc
arpl
push
bound
push
xor
sar
clc
decl
mov
das
mov
pop
and
cmp
ret
pop
jno
mov
ljmp
or
fwait
mov
mul
hlt
jle
ret
xchg
fists
mov
and
data16
inc
fs
push
lea
insb
jb
xor
jmp
sub
or
test
add
into
lea
jg
pushl
call
sbb
sub
jp
stos
dec
fcoml
push
lds
decl
add
mov
out
xchg
or
sbb
adc
hlt
icebp
push
stos
push
inc
outsb
sbb
cltd
sub
ljmp
sub
pop
fucomip
adc
push
dec
push
int3
sti
and
cmp
and
xlat
scas
ds
ja
scas
add
in
popf
test
outsl
ret
mov
or
fldenv
push
mov
insl
mov
cli
cltd
lcall
xchg
sub
mov
xlat
jmp
lock
push
pop
mov
es
xchg
sub
nop
or
dec
push
aad
loope
fcomip
jg
stos
lret
lods
push
mov
mov
divl
jecxz
scas
repnz
ss
out
sbb
vpcomuq
pusha
add
aas
scas
test
inc
jne
loope
popf
mov
incl
cmpsb
sbb
dec
mov
movsl
pushf
sub
inc
inc
mov
inc
mov
mov
pop
data16
cmp
cmp
mov
push
push
xor
cmp
ja
lcall
mov
jno
push
hlt
cmpsb
in
mov
subl
xlat
mov
mov
jp
movsb
es
decl
shlb
or
xor
lcall
cmp
push
mov
decl
je
fimull
lds
out
jge
mov
push
dec
jmp
xchg
call
std
mov
divb
bnd
add
cld
mov
cmp
or
push
inc
ljmp
aas
iret
jmp
leave
cwtl
rcll
movsl
xchg
jle
out
xchg
fcomi
ljmp
movsl
inc
ret
fadd
xchg
int
mov
popf
push
mov
mov
xchg
ljmp
pop
push
mov
out
imul
lea
pusha
rclb
sbb
movsl
bound
ficoms
pushl
pushf
leave
push
cmpsl
pop
iret
sarl
hlt
cmp
xchg
jp
xlat
push
dec
sub
pop
add
pop
hlt
jmp
adc
into
and
or
out
jle
fcoms
imull
jo
lret
pop
outsb
rcrl
dec
pop
pop
call
dec
dec
pop
rorb
jmp
dec
xor
ljmp
or
out
mov
pop
sbb
sahf
call
in
jae
insl
je
outsb
sbb
sbb
pop
int
mov
or
in
clc
cli
mov
sub
dec
test
outsb
into
testl
mov
in
xor
out
sbb
aam
inc
fwait
mov
fildl
jl
test
pop
push
jg
stos
data16
cmp
cli
lds
pcmpgtb
out
jmp
xor
add
fwait
call
incl
jns
fwait
int
adc
fisubs
bound
push
std
xchg
sbb
cli
push
incl
dec
mov
push
neg
gs
jecxz
inc
pop
adc
or
and
jmp
adcb
das
jne
sbb
jle
lret
into
fwait
in
sub
adc
mov
pop
inc
push
iret
xor
stos
sub
cli
addr16
sbb
sub
xor
add
push
sub
inc
das
rcl
jmp
cmp
ljmp
pop
adc
push
mov
adc
gs
cmp
incl
out
out
xchg
jb
cli
imul
mov
outsl
mov
ja
int3
jecxz
xchg
mov
push
xchg
pop
les
clc
ljmp
cmp
xor
out
fistl
adc
pop
mov
call
leave
je
jne
loopne
enter
mov
out
cmc
and
movsb
ljmp
clc
pop
mov
push
cmpsl
lock
lds
jne
sahf
pop
jg
mov
jmp
inc
xor
pop
or
or
flds
out
lods
pop
adc
pop
clc
lods
lcall
jmp
push
xchg
enter
mov
cmp
sarb
jns
cmpl
nop
test
lcall
pop
cmp
aas
in
ja
jbe
inc
or
adc
or
adc
or
mov
mov
lcall
iret
das
int
cmp
lahf
xchg
mov
mov
push
repz
incl
rcll
mov
shl
out
xor
iret
fiadds
stos
mov
into
mov
lss
add
ljmp
jg
lock
adc
sub
in
out
and
loope
ljmp
dec
imul
mov
xchg
push
lcall
enter
sti
jecxz
test
pushl
push
data16
pop
nop
jno
out
dec
popf
or
outsb
cld
lret
pop
lret
dec
int
mov
ret
daa
jae
cs
int3
or
sbb
sbb
mov
jmp
sbb
negb
clc
fsubl
in
or
push
loopne
call
arpl
adc
lds
adc
dec
out
jecxz
cltd
or
mov
cmp
mov
rcrl
mov
pusha
add
xchg
pop
stos
and
test
incl
xchg
mov
test
dec
sbb
xchg
xchg
xor
xor
inc
and
push
dec
js
call
fdivrl
cmpsb
mov
sbb
mov
jne
inc
jae
or
pusha
outsb
jg
lcall
fisttpll
mov
ja
ficomps
xchg
mov
sub
sub
test
lcall
orb
lods
push
test
insb
lock
inc
add
jp
pushl
std
cmp
mov
femms
jp
ljmp
jle
pop
xor
adc
decl
push
lods
in
or
xlat
sbb
stos
inc
scas
fsubl
adc
jge
jge
outsl
test
mulb
cmpsb
idiv
decl
adc
enter
in
xor
mov
cmp
adc
cli
es
rorb
cmp
push
arpl
sbb
pusha
jmp
cli
mov
cmc
and
fisttpll
jo
or
clc
aad
or
sub
repnz
js
push
push
imull
push
dec
aad
fnstenv
rolb
xor
mov
pop
mov
push
insb
jmp
sub
into
fistps
test
mov
into
sbb
jge
int3
loope
loopne
mov
mov
aas
push
jg
inc
in
xlat
iret
and
mov
jg
mov
ss
in
enter
lret
adcl
pop
push
in
scas
clc
jmp
xchg
and
adc
add
mov
pop
inc
pop
stos
jno
pop
aad
rolb
fs
push
lahf
mov
loopne
sbb
jns
jg
es
and
jle
jl
sahf
sahf
repnz
les
pop
lret
popf
mov
cwtl
xchg
pop
aam
fidivl
incl
incb
es
jp
mov
pop
xor
outsb
ljmp
sbb
pop
movsb
or
pusha
out
xchg
add
dec
adc
add
jl
adc
mov
stos
jg
dec
icebp
sub
shll
xchg
aam
or
dec
fdivr
pushl
cmp
lret
pcmpgtd
cli
sbb
xchg
mov
mov
push
sti
je
push
mov
incl
inc
inc
std
aas
xchg
xor
mov
and
arpl
call
push
ds
ja
fcmovnbe
sbb
or
dec
je
push
das
and
pushl
sti
fmull
notl
arpl
subb
loope
ds
fstpt
cmp
add
lcall
cmp
nop
loope
mov
int3
xchg
cmp
cmp
cmp
rol
sub
xchg
daa
add
lcall
std
and
ret
jae
rcll
adc
outsb
dec
inc
xchg
push
cltd
pmaxub
lcall
adc
xor
sbb
mov
sub
cld
fdivrp
push
pop
mov
aaa
insb
pushl
loopne
loope
cmp
je
and
cwtl
sbb
decl
pusha
or
jl
out
mov
inc
cld
pop
push
xor
test
pop
mov
jmp
or
adc
jno
out
stc
fstp
pop
fs
fldl
sbb
push
push
stos
pushl
or
fld
sbb
or
ficoml
push
lcall
divl
push
jbe
and
into
inc
or
cmp
dec
jo
faddl
out
mov
jmp
pop
out
shr
cmpsb
xor
xchg
or
std
jle
mov
mov
pop
jle
daa
enter
sbb
stos
adc
aaa
adc
jmp
mov
fxch
lfs
sbb
mov
xor
ss
les
pop
leave
lods
pop
dec
mov
push
cmp
jg
adc
ljmp
add
arpl
ret
dec
shll
insl
mov
mov
and
add
cltd
addr16
daa
lret
push
sub
repnz
aad
jmp
hlt
ret
sub
inc
xor
cwtl
scas
insb
pop
mov
stos
and
jmp
daa
push
pop
and
jns
mov
xchg
bound
insl
sub
mov
test
ljmp
sub
push
mov
xor
push
mul
add
pop
or
loopne
pushl
mov
fs
stc
data16
mov
adc
mov
push
insb
jae
cmpsl
insl
dec
inc
add
jnp
mov
ljmp
sub
incl
push
and
xor
jbe
pop
xchg
or
push
xchg
add
mov
icebp
sbb
ficompl
cmpsb
hlt
das
movsb
push
scas
stos
ljmp
movsb
int3
loope
mov
or
xchg
and
sub
jns
insl
jl
lcall
dec
push
adc
jne
push
fnstenv
mov
scas
jmp
xchg
mov
and
mov
sub
dec
pop
xchg
pop
mov
loop
mov
pushl
mov
jp
sub
rol
push
stc
outsb
pop
mov
xor
jmp
jecxz
or
jb
jp
mov
cmp
fsubl
xchg
rclb
and
testb
stos
push
sbb
pop
and
leave
sbb
and
andl
mov
xchg
mov
adc
fnstenv
fsubl
inc
int
lret
test
fadds
cmp
ds
mov
xor
sub
lahf
fdivrl
stos
call
scas
cmp
push
or
imul
aad
mov
int
xor
shll
ljmp
bound
jne
mov
lds
aaa
pop
in
xor
push
jmp
dec
movsl
push
mov
adc
repz
fidivs
lret
xchg
mov
imul
cmp
xor
sub
ds
fidivrl
xor
outsb
jns
mov
sub
add
mov
sub
rorl
cmp
popa
xor
sbb
popa
sub
pushl
scas
sahf
into
xor
lods
js
add
sub
sar
xchg
jmp
enter
movsl
aaa
mov
inc
mov
aam
test
incl
cmp
mov
mov
orl
insl
je
outsb
rolb
push
dec
cmc
decl
xor
or
cmp
xchg
and
in
clc
mov
cmp
incl
mov
cmp
jae
push
ret
push
call
xor
xchg
sub
inc
in
arpl
ljmp
clc
mov
jbe
mov
mov
lds
xor
jo
call
xor
rcrl
insb
add
jle
fcoml
cmp
das
scas
dec
xchg
jno
cmc
push
sbb
xor
mov
mov
mov
sahf
inc
popa
lret
pop
xor
nop
inc
imul
call
push
stos
xlat
add
xchg
add
movsl
cld
and
shrl
mov
adc
mov
enter
mov
out
loope
rorl
add
mov
loop
add
jmp
ljmp
das
jle
add
into
gs
dec
add
mov
testl
push
adc
cmpsl
icebp
subl
push
cmp
mov
stc
mov
xchg
js
loopne
outsl
pop
lret
movsb
in
cltd
pop
loopne
jg
not
lock
push
loopne
movsl
test
in
pop
into
mov
loopne
lods
arpl
lcall
push
mov
push
scas
outsl
movsb
outsl
adc
rcrb
fsubr
xor
lret
xchg
test
push
call
loop
jge
or
imul
xor
add
mov
mov
decl
adc
and
jle
les
mov
or
jg
jno
mov
push
neg
sub
cmp
mov
stos
sub
stos
imul
adc
test
or
std
jmp
mov
xchg
and
jmp
push
sbb
pop
adc
mov
jecxz
decl
jb
repnz
cmp
shll
sti
inc
push
test
jne
in
and
lcall
out
cmpsl
dec
jo
dec
hlt
idiv
mov
pop
enter
jmp
pop
negb
and
rol
xlat
adc
push
popf
push
cli
adc
cmpsl
sub
dec
pop
dec
xor
mov
xor
add
cwtl
incl
cld
jo
dec
adc
ret
cli
popf
jns
or
rcr
xchg
sarb
call
push
sub
mov
popf
ljmp
rclb
and
clc
call
cli
mov
rclb
shrl
les
cld
in
sub
jg
and
jg
enter
mov
push
mov
sub
aas
jne
mov
mulb
orl
icebp
add
mov
arpl
mov
cld
mov
mov
sar
outsl
mov
mov
arpl
incl
and
and
xor
ret
xlat
addl
push
inc
popf
fucomp
push
jns
ds
or
lcall
sarb
cmc
stc
out
cld
dec
ljmp
mov
mov
dec
push
xchg
repnz
sbb
aam
and
fldt
or
loop
out
pop
jns
or
lea
orb
mull
popa
dec
inc
clc
push
int
jl
movsl
cmc
pop
mov
int3
and
stc
push
inc
xchg
jg
push
inc
iret
incl
daa
xor
scas
jbe
cmp
lds
popf
pusha
test
cli
into
enter
std
fcoml
jae
or
ja
ss
scas
out
lahf
sbb
jb
clc
iret
cmp
pop
in
test
pop
push
int
dec
pop
notl
out
pop
sub
dec
popa
pushf
pop
gs
sbbb
lcall
xchg
mov
mov
cmpb
mov
push
cmpsl
push
mov
ljmp
hlt
fwait
sti
das
sti
sarb
mov
and
xchg
subb
iret
sub
pop
decl
lock
daa
cmp
xorb
jp
xor
jmp
adc
sbb
add
inc
fs
dec
xchg
lock
lret
pop
cltd
ret
jmp
imul
adc
jnp
test
lock
mov
test
out
mov
repnz
fs
mov
and
mov
out
idiv
int
fcos
dec
outsb
mov
mov
jle
add
xor
cwtl
pop
jle
or
pushf
jg
jmp
cwtl
dec
jle
dec
and
les
les
mov
pop
push
or
mov
jmp
les
cmc
cmpsl
shlb
stos
lods
mov
xor
decl
ljmp
mov
scas
adcl
fninit
das
std
cmpsl
aaa
or
lea
push
scas
fidivs
frstor
mov
jl
mov
pop
push
cld
in
push
ds
ljmp
test
ret
int
cmp
scas
clc
mov
push
fwait
xchg
std
fs
xor
push
inc
dec
leave
test
sbb
ljmp
out
nop
xchg
cmpl
jg
mov
pushf
mov
jge
movsl
adc
sbb
ss
incl
nop
pop
gs
scas
adc
out
add
and
add
lcall
testl
and
repnz
inc
jmp
pop
insl
paddd
jnp
mov
xor
mov
xchg
cmpsb
imull
xchg
pop
scas
testl
push
lcall
rep
mov
popf
adc
aas
lcall
hlt
decl
bound
cmp
dec
pushf
in
and
sarb
dec
js
call
sahf
push
add
pusha
or
push
stos
adc
add
aaa
jmp
aaa
pushf
andl
lcall
popf
ds
xor
js
cmpsb
out
sbb
faddl
fwait
mov
mov
int3
ja
daa
daa
pop
mov
pop
stos
sub
dec
fbstp
jmp
movsl
cmp
es
push
sahf
mov
xchg
cmc
into
inc
fdivrs
pop
mov
dec
addr16
jmp
dec
adc
jecxz
fstp
or
popl
pop
rolb
push
cmp
mov
gs
decl
add
or
cmp
push
leave
lea
std
push
mov
repz
pop
cmp
dec
stos
inc
mov
jno
pop
add
inc
xor
ds
inc
dec
arpl
push
lret
push
jo
add
pop
cwtl
in
push
js
adc
ret
xchg
aaa
in
push
je
mov
shll
int
mov
das
movsb
jnp
rcrb
and
andnps
imul
pushl
out
addr16
push
xor
dec
xchg
jns
push
push
lods
and
lret
clc
cmp
ljmp
xchg
add
jb
pusha
push
dec
shll
pop
dec
or
imul
pop
xor
xchg
jge
cmp
test
shrb
mov
push
sub
jae
aaa
push
inc
inc
pop
bound
mov
repz
jno
inc
rcrl
push
test
popa
in
xchg
scas
mov
test
jnp
test
inc
sub
push
hlt
cld
stc
sub
movsl
sub
xchg
pop
in
pop
sub
jmp
adc
push
mov
dec
fnstsw
dec
inc
inc
or
sbb
mov
incl
cmc
ret
jmp
xchg
xchg
popa
cwtl
mov
outsl
mov
movsb
fwait
jle
sbb
aam
mov
mov
pop
lock
repz
ret
push
sbb
jge
imul
pop
ja
xchg
into
shrb
add
jmp
mov
ljmp
adc
mov
ja
lds
insl
xor
out
sti
popa
sti
dec
ljmp
out
fidivrl
fadds
daa
and
ljmp
in
push
push
stc
jmp
mov
cmp
jno
jnp
aaa
imul
mov
xor
in
call
test
adc
aam
nop
jg
imul
sub
push
shrb
call
xor
jns
dec
add
fwait
jno
das
lea
pop
call
mov
bound
repz
push
lds
dec
sbb
or
decl
mov
sbb
mov
inc
jns
adc
sbb
sub
jmp
sti
push
xchg
xor
loope
lret
push
shl
imul
rclb
cli
add
jmp
arpl
loope
adc
and
push
push
sbb
ret
push
cmp
jg
in
lds
inc
loopne
xchg
test
cmp
pop
mov
hlt
fdivr
ljmp
push
mov
add
leave
add
out
adc
decl
jl
cmp
pop
ljmp
aad
pop
out
pop
int
jg
mov
push
iret
cwtl
sar
mov
and
fsubr
mov
sarb
bound
jb
and
mov
fcomip
pushl
lcall
lea
shlb
cmp
pop
mov
call
or
popa
scas
lret
xchg
inc
inc
jnp
cmp
push
mov
sti
ja
movsl
lods
scas
aaa
cld
lcall
sbb
add
in
mov
andb
mov
sar
cld
cmp
jge
cmp
enter
shlb
movsb
xchg
hlt
mov
and
incl
lods
stos
movsb
rcr
push
mov
cmpsl
mov
fildl
add
les
xchg
jnp
movsb
xor
jg
cmp
ja
mull
andb
adc
orl
decl
pop
pusha
xlat
push
testl
and
or
cld
lcall
stos
out
dec
jbe
jg
mov
cld
jp
fwait
ret
lea
inc
decb
sub
insb
fldl
and
ljmp
xchg
mov
insb
fmuls
xlat
in
lcall
cld
loopne
outsl
lcall
inc
xchg
or
jecxz
add
ljmp
mov
insl
inc
push
mov
add
xchg
lods
mov
data16
incl
lods
inc
sub
insl
out
jne
push
fisttps
insl
fcoms
addr16
lcall
imul
cltd
push
cmp
xchg
ds
mov
cmpsl
adc
repz
ljmp
imul
cmp
adc
xchg
jne
inc
repnz
pop
sbb
call
dec
orl
sbb
sbb
imul
loope
mov
pop
sbb
pop
popa
lods
std
jns
repnz
mov
inc
inc
jle
mov
mov
repnz
pop
int3
pop
or
pushl
cmpsl
je
lods
fs
dec
loope
jecxz
xchg
jl
mov
lcall
push
les
push
mov
insb
cwtl
es
jns
imul
mov
cmp
jo
fs
decl
jl
or
sbb
ss
std
jnp
std
hlt
jmp
cmp
stos
pop
push
jmp
cli
cmpsb
or
sti
jl
out
dec
sub
rcll
dec
mov
pop
sub
mov
nop
mov
out
push
push
pop
pop
nop
in
leave
dec
test
cmpsb
add
pop
fdiv
jnp
lcall
dec
jecxz
ljmp
ljmp
dec
push
jae
cltd
push
push
cs
or
orl
incl
aam
jae
dec
cmp
mov
jge
hlt
xor
inc
ja
mov
push
rcrl
mov
fdivrl
xchg
scas
fs
push
push
inc
or
cs
repnz
xor
jmp
cli
lcall
outsl
sub
cmp
rcll
mov
sahf
loop
sbb
sub
decl
cli
roll
mov
xchg
cmp
mov
xlat
sub
sbb
push
mov
adc
test
xchg
addr16
add
mov
mov
out
clc
incl
outsb
xchg
out
popa
leave
or
pop
or
xchg
test
fimull
jge
mov
call
pushf
xor
pusha
mov
push
sub
lcall
dec
mov
lcall
popf
inc
adc
loope
dec
lret
sub
pop
push
mov
cmpsb
and
ljmp
push
mov
stc
mov
adc
jecxz
es
jg
sub
jmp
sbb
stos
inc
inc
lcall
cli
cmp
pop
shr
aad
fcomip
call
jae
imul
ja
sbb
xchg
dec
push
cmp
ss
pusha
xor
lcall
cmp
push
adc
pop
pop
imul
ja
cmp
mov
push
adc
jmp
mov
lds
xor
push
jle
outsb
xlat
test
lret
icebp
sbb
lock
fiadds
jecxz
outsb
or
cltd
xor
pushf
cmp
push
or
and
push
push
cmp
les
je
mov
lret
out
dec
fbld
cmpsl
lret
mov
outsb
das
mov
add
es
push
mov
push
ret
pop
inc
aam
stc
ds
je
in
and
ljmp
pushl
push
lcall
push
jns
ret
arpl
xor
loop
aad
xchg
jae
sbbb
fildll
sbb
mov
in
sub
sub
pushl
sbb
daa
or
loop
mov
shlb
lock
test
push
call
stos
and
sub
push
pop
xchg
jns
or
mov
jns
inc
in
cmc
xor
lcall
incl
cmpb
clc
orb
jo
insl
int3
mov
out
cli
out
cli
mov
inc
hlt
cltd
xchg
xchg
mov
out
pop
pushl
or
test
sub
enter
mov
fiadds
int3
outsl
cli
lcall
dec
ficoms
and
ss
test
decl
mov
aad
std
cld
movl
jg
pop
push
adc
xlat
sbb
dec
cld
xchg
sub
pop
jae,pn
and
inc
in
mov
data16
pop
push
xor
jl
in
jmp
jmp
dec
je
pop
push
gs
push
addr16
loope
jmp
call
arpl
mov
and
jnp
push
jl
shl
pop
outsl
and
jmp
dec
and
arpl
jl
sbb
mov
sub
sbb
mov
decl
and
insb
test
mov
bound
rcll
sahf
fstpt
into
adc
js
outsb
mov
bound
ret
shlb
jo
lods
inc
sahf
jg
into
aad
adc
mov
sub
ljmp
js
xor
pushf
or
adc
jns
adc
dec
xchg
aas
test
mov
or
jmp
leave
scas
data16
std
fcoms
jno
pushf
gs
inc
mov
dec
in
cld
lcall
mov
mov
xchg
jl
leave
push
dec
mov
ss
cmp
std
xor
decl
fwait
jns
mov
or
fs
cmp
mov
inc
js
mov
sbb
cli
lcall
sub
addr16
loopne
pop
std
test
fistpl
fbld
xor
shlb
or
push
adc
std
mov
push
cld
gs
call
inc
int3
pop
cwtl
fwait
xor
sbb
jne
jecxz
mov
fbstp
jg
test
push
in
mov
das
push
shrb
or
sub
ljmp
decb
dec
mov
dec
loopne
xor
push
pop
fists
call
jae
mov
lret
in
mov
pushf
push
lds
sub
lahf
xchg
nop
add
cmp
rorb
jo
cs
mov
mov
loope
in
stos
in
cltd
pop
ljmp
jecxz
fidivrl
outsl
pushf
xchg
fimuls
pop
out
enter
or
adc
mov
adc
pop
incl
adc
lahf
add
add
adc
mov
bound
out
pushl
movl
sbb
jecxz
pop
ja
aam
lret
mov
fdivs
mov
fs
test
push
aaa
cmp
mov
aad
mov
xchg
jo
mov
mov
jg
push
cld
out
xor
ds
pop
mov
mov
mov
addb
mov
mov
lret
xor
pushl
dec
insl
mov
lds
pop
popf
jno
sti
popf
orb
arpl
mov
mov
iret
ss
das
movups
mov
xchg
call
out
dec
test
pushf
imul
decl
cmp
add
lea
std
push
push
xor
xor
and
int
ljmp
test
lret
jmp
mov
jp
xor
rcrl
imulb
popl
lret
stos
test
mov
lret
jg
xchg
jmp
out
mov
aaa
and
mov
mov
xor
add
xchg
rolb
push
js
lock
fisubrs
dec
shll
adc
sub
iret
outsb
mov
in
xchg
jle
cmc
sub
fcmovnb
cltd
jmp
bnd
mov
jnp
cmp
hlt
lock
dec
loope
xchg
ljmp
outsb
lods
xor
leave
xorl
or
mov
add
mov
jg
mov
sbb
cmp
mov
hlt
cwtl
repz
mov
mov
fsubrl
inc
inc
adcb
sbb
mov
jecxz
out
inc
pop
pop
xor
or
call
loopne
fisubrl
cmp
notl
push
jp
and
cmp
and
push
inc
pushl
aad
mov
sets
ss
filds
jg
cmpb
jg
dec
sbb
mov
mov
das
pop
in
jp
mov
movl
jmp
sub
cmp
ljmp
cmp
xchg
add
inc
add
fdivl
incl
cli
repz
mov
shll
xor
mov
pop
jp
out
loop
inc
loop
rcr
mov
out
cmpsl
or
incl
jo
pop
xchg
add
mov
call
lds
jmp
mov
cmp
jo
fstl
xchg
jg
and
mov
cli
add
icebp
and
or
call
pop
daa
cwtl
andl
addb
lahf
jae
xor
icebp
mov
mov
jp
inc
and
call
iret
cmc
mov
adc
fs
movsb
xchg
ds
ljmp
cmpsb
pop
rolb
test
xor
rcrb
ffreep
je
inc
pushf
xchg
rcrl
jmp
mov
es
aam
pop
loopne
lea
gs
ret
int
cmp
pushl
jmp
test
imul
mov
push
cltd
mov
push
jg
mov
js
repnz
daa
add
pop
push
mov
mov
cmp
mov
xchg
xor
das
movsb
lcall
xor
repz
orl
leave
repnz
ljmp
sbb
ss
jne
rorl
lcall
or
aaa
push
jae
xchg
movsl
inc
xchg
jge
xor
mov
stos
fwait
scas
arpl
adc
jnp
inc
sub
fldt
stos
jg
mov
push
mov
fsubrs
xchg
cmp
jg
in
push
rorb
insl
lods
xchg
andb
pop
iret
ret
xor
xchg
cltd
sbb
xchg
lcall
pop
out
loopne
adc
sbb
lea
test
cli
decl
cld
xchg
cmp
jnp
popl
inc
xchg
testl
sub
mov
jl
cmpsb
push
repz
xor
cmp
negb
dec
xor
call
xlat
lods
jbe
push
fimull
int
pop
stos
or
popa
pop
jmp
lret
inc
inc
lods
cmp
cmp
mov
paddq
dec
push
adc
test
call
loopne
fistps
adcb
in
sbb
gs
pop
jo
push
cmp
mov
pushl
lahf
mov
sub
lahf
xor
out
js
stos
xlat
das
and
je
xor
pop
inc
xchg
and
fldz
jg
mov
les
adc
inc
mov
inc
push
lahf
sbb
xor
movsb
add
repz
stos
imul
inc
out
add
and
fdivl
repz
adcb
sti
xor
push
push
mov
shrl
jnp
adc
inc
out
push
cmp
mov
adc
ljmp
jb
xor
add
movsb
push
popf
loop
sub
mov
test
dec
xor
mov
sub
and
mov
pushl
call
in
ffreep
filds
rclb
xchg
cmpsb
mov
fldt
lahf
push
mov
jnp
out
cli
jp
dec
mov
mov
in
pop
pushf
aad
push
rcrb
xchg
mov
sbb
xor
inc
mov
dec
xor
xchg
out
xchg
cli
lea
loopne
lcall
aam
popf
xchg
daa
mov
sbb
mov
push
in
push
jnp
mov
ljmp
inc
jmp
push
fimull
and
cmp
jl
sub
inc
xor
adc
mov
jbe
push
jecxz
jp
mov
jo
push
and
decl
mov
test
in
push
loop
push
imul
inc
movsl
data16
pop
mov
mov
in
jmp
lahf
lods
mov
cmp
aas
ret
and
jg
cmp
push
ror
repnz
movsb
das
mov
add
lods
sbb
cmp
loopne
xchg
inc
xchg
cmp
fs
test
mov
push
lcall
jmp
nop
mov
or
sahf
push
inc
in
or
cmp
ljmp
sub
sub
jns
pop
out
xchg
repz
or
test
lods
xchg
lock
ljmp
or
ljmp
adc
push
jmp
cli
dec
jge
push
and
jbe
shll
cmp
mov
jle
pop
mov
outsl
popa
cmpb
fisttpl
cmp
icebp
sbb
jno
jno
decl
out
pop
jns
lods
leave
mov
clc
sub
iret
push
add
mov
or
incl
cmpsl
dec
push
test
jo
sarl
incl
das
mov
mov
pop
negl
pop
inc
push
ss
xchg
loopne
fcomip
pop
imul
dec
jecxz
lret
adc
push
sub
cmc
insl
sub
inc
insl
jae
mov
inc
and
fs
dec
cmp
cld
cmp
int3
idivl
mov
sub
andb
inc
leave
inc
inc
in
mov
enter
or
xor
adc
mov
jge
lcall
fistpll
imul
cmc
nop
imulb
adc
cmp
outsl
lock
pop
cmp
cmp
bound
pushf
ds
ss
mov
das
jne
repz
loope
into
jnp
incl
add
mov
dec
jne
mov
mov
movsl
or
lcall
nop
add
lods
push
add
push
jecxz
mov
jle
jbe
inc
ds
out
or
fisubrs
jns
sub
push
cld
ds
xchg
inc
xor
mov
dec
or
adc
add
jg
imul
loopne
test
fbld
jb
jecxz
dec
jo
sub
out
les
shll
fsts
sub
mov
or
daa
sbb
call
into
out
push
stc
add
lods
and
imul
mov
push
js
xchg
and
lcall
jg
pushf
dec
out
xlat
rcrl
mov
mov
jne
and
mov
daa
lret
inc
sub
das
inc
ror
ror
nop
es
pusha
ds
push
mov
cltd
cld
push
inc
cltd
fsubs
xor
push
outsb
call
imul
pusha
xchg
iret
or
jmp
imul
mov
inc
dec
and
mov
cmp
jge
lcall
push
imul
lcall
cmp
sti
or
ret
mov
dec
pushf
cmpsb
or
xchg
cmp
int3
mov
sar
pushl
lds
xor
cmp
scas
cwtl
and
mov
mov
mov
push
test
pop
xchg
and
sbb
mov
sbb
xor
mov
mov
lods
cmpsl
fidivl
and
inc
jmp
mov
adc
dec
fs
pop
lret
lds
mov
jge
leave
cld
call
scas
pop
movsl
sub
outsb
sub
fwait
pop
xor
mov
cmp
jbe
aaa
push
fwait
adc
pop
cmc
decl
sahf
inc
sub
sahf
and
sbb
fldt
iret
shlb
inc
cmp
ja
cld
shr
loop
fs
adc
pop
sub
data16
pop
ret
out
and
dec
cld
ljmp
mov
jecxz
jp
jg
dec
in
inc
mov
xor
xlat
mov
in
loopne
cmc
add
lock
xchg
fisubrs
leave
data16
lcall
push
inc
adc
dec
xor
jl
xchg
dec
adc
sar
call
into
jmp
std
dec
jp
addr16
add
repnz
pushf
or
and
or
or
decl
fs
xor
arpl
xchg
clc
andl
js
repnz
and
sbb
ljmp
ljmp
cli
mov
jmp
xchg
jmp
movb
lds
jns
jmp
cwtl
push
sahf
mov
aas
es
or
and
ljmp
pop
xchg
cmpsl
sbb
andb
or
jns
xorl
rclb
jb
stc
xor
imul
fnstenv
xor
jmp
das
jle
push
xor
mov
add
call
aas
shl
adc
out
jg
ja
sub
std
mov
popf
aaa
cwtl
push
lock
orl
decl
mov
xchg
sahf
add
lret
out
inc
cmpb
cmp
push
mov
jle
bound
stos
lret
aam
dec
adc
lahf
inc
out
aad
dec
loopne
or
fmuls
add
push
test
jecxz
mov
fnstcw
repz
sub
out
cmp
ljmp
daa
add
xchg
inc
add
push
stos
or
jg
mov
jnp
push
mov
xchg
xchg
xorb
hlt
loop
mov
ljmp
xor
addr16
jl
push
lods
pop
fld
sub
adc
xchg
jns
jne
pop
xlat
decl
push
sbb
cmp
rolb
xchg
jnp
lods
jae
aas
icebp
add
insl
jl
xchg
mov
adc
or
bound
movsl
pop
mov
in
add
jbe
sti
sub
ja
loope
into
inc
jle
inc
andl
popf
and
arpl
sbb
inc
ret
dec
test
push
sub
mov
push
cltd
and
aaa
std
incl
jae
int3
ja
lods
mov
mov
repnz
cmp
xchg
xor
scas
and
popf
xor
dec
inc
add
mov
fldt
or
sbb
pushl
loope
jp
rorl
add
lcall
mov
pushf
sahf
loopne
fstpt
outsl
push
adc
xchg
push
pop
cwtl
xor
cmp
ficomps
push
shl
mov
outsl
notb
movsl
add
xchg
movsb
fs
enter
lcall
sub
mov
adc
sbb
cli
xchg
shlb
jle
xor
pop
mov
mov
loope
adc
and
mov
pusha
test
inc
leave
xor
incl
xor
imul
cmp
insl
pop
xchg
test
repz
je
jmp
mov
ret
jl
lods
lods
mulb
xchg
repz
loopne
xchg
bound
cwtl
aas
xor
decl
and
sub
les
or
in
push
pop
call
lahf
cmc
add
xor
pop
fwait
adc
hlt
icebp
mov
lock
inc
and
stos
int3
xor
cmp
ss
sbb
push
xchg
pop
enter
pusha
xorb
jbe
mov
inc
test
mov
faddl
push
add
jl
xchg
or
sub
pop
jns
call
push
push
pop
or
lret
mov
push
sbb
sahf
jg
adc
mov
cmp
mov
ljmp
or
push
sub
or
in
cmp
mov
inc
xor
and
mov
cmpsb
xchg
add
fs
lret
jns
mov
rclb
cli
or
test
mov
aaa
cld
fucomip
arpl
test
xchg
insb
into
das
jae
jg
je
lcall
call
jle
sahf
pop
or
jecxz
std
push
in
std
dec
sbb
divl
push
mov
inc
mov
jmp
jbe
aas
or
sbb
mov
outsb
xchg
int3
lcall
jae
sti
les
mov
cmp
sbb
ss
dec
jge
jne
or
cmp
ja
mov
pop
out
add
push
cwtl
shl
dec
cmp
mov
mov
stc
add
incl
lret
mov
daa
repnz
push
add
jno
push
sub
sbb
jg
lcall
and
cmc
clc
jle
push
dec
addr16
js
push
rcll
jle
and
xchg
gs
push
pop
cmp
inc
xor
adc
dec
adc
push
push
push
jle
pushl
std
decl
cmp
adc
lahf
xor
icebp
mov
jmp
or
subb
ljmp
inc
arpl
stos
rolb
xchg
pop
sbb
pop
mov
jae
aam
sbb
scas
add
test
ss
aam
xchg
test
sub
adc
mov
ljmp
lret
mov
xor
dec
dec
or
or
aas
xchg
push
lcall
inc
cmp
mov
mov
push
movsl
roll
bnd
pop
in
sub
mov
addr16
lods
pop
sub
mov
adc
push
dec
dec
es
ret
ret
and
out
dec
add
mov
hlt
fs
fdivl
fdivp
jl
mov
shl
aas
adc
mov
xor
cs
rcrb
rorl
xlat
jle
clc
std
stos
aad
inc
sbb
inc
and
cmp
mov
jmp
clc
jmp
sub
lods
jnp
mov
pop
pop
mov
jmp
sti
mov
pop
mov
in
out
sub
mov
mov
mov
cli
and
push
adc
ret
jnp
xchg
sti
push
jae
subl
js
or
lret
sub
cmp
pop
inc
cmp
push
decl
ljmp
fs
aad
es
cwtl
sub
inc
stc
jb
das
sub
call
push
sub
lahf
pop
bound
lret
add
test
xor
aaa
lcall
cmp
notl
outsl
add
jb
stc
jae
int3
push
jae
subb
adc
lcall
xchg
mov
mov
mov
mov
cmp
ljmp
sub
cmp
mov
add
inc
mov
insb
loop
sbb
jg
mov
mov
xchg
fbstp
das
int3
aaa
inc
les
or
mov
pop
xchg
jb
pop
xchg
icebp
cvtpi2ps
out
lods
out
jo
lcall
lcall
cltd
and
js
mov
push
fimuls
in
xor
mov
ss
aas
dec
test
jp
jo
xchg
mov
push
repz
mov
pushl
xlat
push
je
mov
mov
imul
or
jg
cwtl
push
adc
lock
inc
push
or
ret
ljmp
jbe
pop
js
subl
mov
std
inc
imul
push
xlat
dec
loopne
pop
call
xor
push
push
jae
stos
mov
adc
sbb
les
xor
imul
cmp
repz
cmp
or
and
fisttpl
mov
sbb
mov
jmp
mov
rcrl
ljmp
in
imul
arpl
and
push
popf
ja
pop
hlt
incl
fucomp
jp
sub
test
imul
loop
jmp
push
push
pop
jg
dec
cmp
jge
bound
xchg
cmpsb
cmp
cmpsl
jno
inc
je
es
and
call
data16
pusha
addl
pop
pop
push
or
mov
and
xchg
adcb
jns
mov
decl
stc
mov
push
pop
aad
fisubs
push
mov
xchg
cli
xor
sbb
pop
jl
jo
sti
cli
aam
adc
cmp
loop
scas
xchg
aas
ss
leave
sbb
incl
pop
push
cmp
jnp
pusha
mov
iret
rcrb
insl
cld
mov
mov
xor
add
and
sub
in
stos
mov
ljmp
adcb
jno
cli
dec
mov
jmp
mov
sbb
insb
sti
lods
lods
jp
mov
jmp
xor
lods
repz
push
adc
int
cmp
call
xor
roll
popf
lea
mov
xchg
cmp
les
add
jmp
mov
inc
aam
inc
xor
push
cmpsl
jno
mov
out
loop
inc
mov
mov
push
gs
lods
repnz
mov
insl
dec
sub
xchg
leave
mov
cwtl
sub
jg
jae
push
shlb
jae
sub
jbe
mov
les
incl
jmp
xchg
cmc
inc
in
inc
xor
cs
shrl
mov
repz
mov
fadd
sub
sub
sub
out
movsb
stc
es
dec
mov
mov
fisttpll
jmp
push
sbb
mov
mov
xchg
add
add
dec
repz
adc
scas
xor
aaa
cld
mov
jnp
ret
imul
lcall
fwait
mov
mov
and
cmp
ds
femms
sub
cwtl
aas
mov
fistps
mov
mov
xlat
add
fwait
sahf
cmp
or
ss
and
ljmp
mov
clc
movsb
loopne
xchg
or
dec
aaa
mov
pop
sub
xlat
fistpl
xor
jne
fdivp
pop
mov
xchg
and
ja
mov
aas
adc
or
xor
addr16
testb
ja
inc
cli
outsl
dec
lret
mov
mov
adc
mov
jb
jb
call
dec
fwait
ret
push
lcall
sub
cs
nop
jmp
push
push
roll
cmp
hlt
repnz
stc
popa
aaa
pop
ljmp
call
in
mov
std
sbb
incl
stos
iret
mov
ret
add
xchg
jbe
jp
mov
cs
repnz
lcall
mov
or
jns
je
out
inc
xor
xlat
dec
mov
jecxz
clc
decl
test
or
add
lds
sub
aam
decl
cmpsl
sbb
xchg
jge
pop
add
inc
stc
xchg
ljmp
decl
jp
leave
cltd
and
mov
pushl
cld
call
add
adcb
or
data16
decl
lock
sbb
dec
mov
mov
arpl
jle
dec
lcall
lcall
fisubrl
xor
pop
cmpsl
xor
rorb
xchg
pop
mov
cmpsb
ds
incl
pop
and
mov
push
push
xor
movsl
push
jmp
mov
dec
call
inc
pop
mov
lret
push
sbb
cmp
aam
fldcw
cmp
or
pop
sbb
ljmp
inc
mov
fcomp
loop
pop
je
mov
cli
jmp
xchg
pop
pop
sbb
jbe
ror
mov
test
test
cmp
sub
cmpl
lds
ds
pop
mov
mov
cmp
pop
js,pt
fcoms
mov
ret
sub
lahf
jno
sahf
pop
aas
js
cmp
sar
mov
inc
mov
dec
repnz
iret
dec
lcall
call
jb
inc
push
andb
or
cld
xor
lahf
push
outsb
adc
or
jecxz
fstpl
xchg
push
imulb
std
pushl
imul
xchg
mov
xchg
jnp
jns
pop
push
shrl
mov
push
lock
adc
mov
fsts
lods
and
mov
pop
hlt
and
xchg
or
lcall
jo
decl
rcrl
imul
xchg
fbld
insl
call
insb
icebp
push
pushf
addr16
nop
loop
test
and
inc
cmp
cmp
mov
ja
jne
adc
mov
pop
mov
cmp
das
in
push
mov
imul
jb
sub
pop
lock
shrb
shlb
movsl
jge
push
lahf
les
ret
push
adc
ret
nop
xchg
pushl
std
out
mov
push
outsb
dec
pusha
jp
add
lcall
shll
into
aad
push
std
push
sub
sarb
xchg
sub
clc
xchg
es
or
aaa
cld
jg
into
jg
aad
out
pop
or
aam
mov
pop
or
pushl
push
std
lea
loope
jl
mov
nop
or
adc
dec
clc
leave
xor
pushl
or
loop
jne
mov
lea
imul
add
add
lea
popa
insb
sbb
dec
push
sbb
fstl
xlat
adc
lcall
dec
imul
jp
insl
nop
xor
je
cmp
fldcw
insl
imul
sbb
xchg
and
lcall
lock
lcall
pop
inc
shll
fdivl
add
mov
addr16
lcall
push
sti
cwtl
mov
sub
push
in
dec
jg
orb
mov
mov
dec
test
jns
push
sub
mov
sbb
jge
stos
mov
insl
addr16
sbb
push
decl
and
loop
ret
sti
jno
inc
test
push
cmp
cmp
arpl
cs
out
jno
sub
jge
roll
push
fcmovnbe
xchg
dec
dec
mov
fidivs
out
push
je
jecxz
incl
dec
daa
filds
mov
or
xchg
inc
jns
clc
fcmovbe
leave
inc
xchg
inc
fsubrl
clc
mov
lret
mov
sub
lahf
or
dec
dec
mov
cld
sub
mov
adc
push
call
loopne
and
cmp
mov
incl
inc
sarb
dec
leave
pop
add
dec
inc
sahf
cs
pop
inc
lods
outsb
and
shll
decl
pop
mov
fnstsw
cs
ljmp
jle
add
or
lcall
push
xchg
add
in
jne
sub
into
cwtl
test
es
cmp
mov
cmp
sub
cmpsb
rclb
subb
sbb
sub
data16
inc
inc
aam
mov
adc
imul
adc
xchg
orl
jmp
fldl
ss
jmp
ja
jmp
scas
and
shll
lcall
jno
stos
xchg
jns
je
outsb
push
push
inc
mov
insb
adc
pop
mov
lcall
push
sub
xor
push
cmpb
fisubrs
inc
mov
mov
into
add
jg
dec
mov
ret
mov
out
addr16
in
arpl
notl
inc
std
lret
pop
loope
fstpt
dec
cld
sti
dec
push
loope
decl
mov
mov
pop
cmp
enter
adc
cmp
fnstenv
in
jb
mov
and
mov
inc
iret
jg
xchg
bound
popa
sub
ja
cli
call
rolb
or
mov
xlat
dec
xor
push
push
dec
shll
jmp
cmc
inc
jno
or
loope
inc
jmp
xor
call
mov
fwait
pop
enter
add
fcoml
jmp
xchg
js
aam
scas
in
xlat
cmp
jne
jmp
mov
aas
mov
add
ljmp
lods
cltd
or
pop
fisubrl
aad
shr
or
call
and
scas
lods
mov
lcall
cli
xor
sub
call
mov
popf
aad
insb
bound
stos
jmp
dec
js
cs
inc
lods
sahf
adc
push
mov
jl
aam
cmpsb
xor
int3
cmp
into
xor
sub
mov
and
add
push
add
pop
call
mov
xchg
sub
clc
jecxz
xor
push
inc
push
test
nop
mov
hlt
jmp
inc
push
test
mov
test
push
push
cwtl
xchg
add
sahf
mov
inc
push
cld
aaa
cld
cmc
mov
daa
cmp
cmp
mov
loopne
pop
fldl
cmp
or
jno
loop
mov
jg
aaa
add
mov
mov
or
or
fsubrs
push
out
and
in
sbb
xchg
dec
dec
push
fwait
sbb
jg
sub
sub
pushf
je
jno
push
mov
cmp
out
ffreep
fs
fdivr
call
int3
push
fwait
movsb
fstpt
xchg
rol
and
int3
or
mov
mov
add
and
mov
mov
jl
or
in
or
lret
or
addb
lea
add
dec
add
xchg
xlat
sub
push
hlt
jp
sub
pop
dec
add
fistl
push
xchg
stos
in
mov
out
inc
sbb
std
pushl
sbb
xchg
insl
and
sbb
mov
add
xor
mov
adc
scas
pop
xchg
jecxz
das
mov
jb
stos
mov
inc
clc
mov
and
push
jbe
cmp
movsl
imulb
xchg
repz
mulb
lret
aas
out
mov
stos
popf
dec
stos
add
call
mov
sub
jp
leave
mov
ja
dec
not
pop
cs
pushf
sbb
lcall
inc
jecxz
aas
das
adc
movsb
mov
inc
xchg
push
insb
cwtl
nop
idivl
add
pusha
clc
cwtl
xor
sbb
pushf
or
loop
ja
mov
sbb
inc
mov
jnp
cmpsb
out
sbb
rolb
arpl
repnz
push
jl
je
xchg
sub
lcall
loope
sarb
cmp
mov
pop
rcrl
lods
push
jmp
daa
cmc
pushf
inc
jg
ljmp
push
subl
hlt
in
cmpsb
mov
js
mov
push
into
in
pushl
cld
mov
cmp
sbb
lret
ret
or
sbb
decl
mov
adc
aam
arpl
inc
sub
mov
incl
loopne
icebp
or
mov
pop
mov
sub
imul
in
aas
ljmp
sarl
sbb
push
ja
add
push
outsl
xor
sbb
jo
add
test
mov
pop
pop
clc
fisubs
rolb
lds
or
sub
js
or
xor
iret
decl
jne
loopne
sbb
adc
dec
ds
int
push
or
and
sbb
decl
add
or
dec
rcrb
in
ret
adc
cmp
sub
xchg
inc
sar
fcmovb
sbb
test
ss
or
int
in
pop
call
jns
sarb
daa
inc
and
ss
mov
add
sbb
mov
add
ljmp
push
and
rolb
pop
xor
xor
out
lret
push
incl
les
and
sarl
sbb
mov
popf
lds
dec
out
mov
and
clc
push
add
cmp
sbb
test
pop
aaa
lahf
arpl
decl
push
inc
mov
mov
jnp
out
mov
jmp
pop
mov
filds
int3
stc
loop
mov
jno
popf
shl
fists
sbb
mov
incl
push
testb
pop
das
enter
ja
push
mov
inc
push
in
add
push
jae
pop
icebp
ljmp
int3
mov
mov
int3
push
mov
ds
ret
adc
ss
pushl
xchg
push
pop
lret
fnstsw
lret
fwait
rclb
fldenv
inc
xchg
into
rorl
aaa
mov
xchg
push
in
in
xor
movsb
fwait
clc
sub
outsb
rcr
test
and
into
out
mov
cmp
mov
repnz
jnp
ja
enter
decl
adc
pop
adc
mov
lahf
out
dec
and
dec
pop
stos
leave
and
mov
jg
add
outsl
dec
sub
xorb
stos
iret
xchg
inc
add
cmp
xor
decb
sbb
loope
cmpsl
cmp
mov
jg
pusha
xchg
push
xor
mov
cs
pop
cmpsb
loope
inc
or
aam
pop
dec
sbb
testb
std
mov
pop
popf
mov
aas
inc
daa
ljmp
scas
cli
inc
xor
ret
outsb
ljmp
or
adc
adc
sbb
dec
cmp
scas
add
mov
cmp
jmp
mov
sub
xor
aas
gs
sub
mov
das
cmp
mov
fwait
add
les
xchg
cmpl
ljmp
cli
jp
sub
push
rorb
imul
or
and
xchg
test
fnstenv
mov
movsb
fistpll
jne
test
sbb
leave
pushl
cmp
add
movsl
adc
sub
cmpsl
cmp
sbb
adc
decl
in
lea
es
out
fs
outsb
or
pop
cltd
mov
mov
mov
ljmp
pop
mov
dec
sbb
fidivl
jmp
lcall
or
jecxz
mov
call
iret
mov
cmc
xchg
pop
scas
test
sahf
les
inc
pop
adc
pop
shrb
xorb
aas
orb
inc
push
cwtl
shlb
jmp
cmc
sbb
dec
out
and
negl
rol
push
or
add
test
inc
add
out
jbe
leave
sub
lret
addb
inc
shr
push
adc
jae
bound
jl
mov
ja
fstl
jo
imul
lock
ds
push
imul
or
push
out
sbb
xor
test
pop
fisubl
pop
push
push
in
rcl
lds
and
cmp
inc
gs
or
in
nop
gs
adc
sub
jno
dec
pop
int
mov
insb
push
push
xchg
jo
push
inc
dec
js
and
gs
push
scas
mov
fsts
inc
push
shl
adc
jb
je
into
mov
test
push
in
sub
dec
jne
js
pusha
ret
mov
stos
pop
inc
fists
insl
add
add
aaa
fmul
shrb
inc
jns
push
imul
popa
jb
inc
mov
pop
push
es
inc
push
push
push
pop
mov
dec
sbbb
inc
dec
cmpl
inc
jb
sub
outsb
inc
and
pop
mov
push
outsb
dec
xor
out
jbe
inc
insb
sbb
test
ret
jnp
adc
loop
into
mov
outsl
jp
fcoms
jl,pt
jae
icebp
inc
loopne
or
bound
fsts
in
js
sbb
push
pop
mov
inc
insb
jne
mov
jne
or
mov
xor
lock
clc
insl
mov
add
dec
mov
call
fildl
cmp
mov
push
pop
push
out
popa
addr16
xchg
arpl
sbb
popa
sub
pop
push
adc
sahf
jne
push
push
and
lret
int
gs
sbb
cmp
xor
or
xor
lds
les
pop
inc
inc
xchg
add
push
jo
packuswb
rcrl
push
pop
mov
jo
mov
fsubrs
sbb
test
mov
je
insb
jae
ds
jne
arpl
subb
das
shll
pop
arpl
dec
xchg
inc
in
jl
jae
pop
push
xor
popa
hlt
push
add
jnp
pop
sub
or
clc
outsl
popw
push
dec
cmpsb
dec
addr16
xchg
push
xchg
sbb
cmpsb
or
pop
or
out
xor
and
sub
dec
jae
cld
loopne
ror
inc
into
push
mov
mov
jns
adc
or
pop
out
or
in
xchg
test
lret
mov
pop
fs
xchg
rorb
lods
xor
je
aaa
jne
pop
cmp
test
popa
and
jns
or
cmp
and
xor
cmpl
jp
fstp
push
mov
push
popf
in
insl
sbb
mov
pop
enter
mov
push
sbb
pushf
daa
loop
popa
pop
mov
jp
outsl
jns
insb
sub
int
push
shrl
xchg
and
out
mov
scas
mov
mov
fwait
shl
mov
push
inc
orl
push
cltd
inc
sbb
push
push
sub
inc
test
and
loopne
and
adc
ds
rorb
and
fisubrl
xor
add
push
mov
cmp
mov
lods
and
jmp
add
out
add
pop
mov
jne
stos
inc
fildl
adc
pop
push
test
xchg
dec
nop
add
push
jne
fdivrl
jl
inc
in
inc
out
push
rcl
test
and
in
arpl
leave
sbbb
xor
jbe
movl
orb
sbb
adc
fsubl
jecxz
daa
and
and
xchg
sub
insb
mov
aam
add
inc
sub
push
pop
xchg
inc
rcrl
inc
lods
repz
xchg
aad
test
outsl
jae
out
sbb
mov
outsl
cmc
dec
push
xchg
inc
inc
jbe
and
add
add
ret
sbb
push
jmp
cmpsb
repnz
js
gs
push
or
pop
aaa
xorb
mov
stos
push
and
js
add
and
cltd
rorl
mov
arpl
or
movsb
cli
addps
cltd
xchg
pusha
fs
cmpsl
loopne
dec
mov
in
insl
fidivl
out
and
inc
lahf
addr16
inc
sbb
or
jae
cmp
movsl
int
cmp
sbbl
in
xchg
pop
mov
push
insb
aaa
adcb
or
pop
pusha
shll
pop
cmp
popa
and
sar
push
lret
and
mov
rolb
shll
cmp
out
push
outsl
push
inc
jb
adc
mov
jg
popf
pop
xchg
jo
inc
inc
pop
mov
mov
fisubrl
inc
imul
sbb
and
fs
cmp
mov
mov
fs
out
outsb
add
out
lock
insb
jle
cmovo
inc
dec
rorl
stos
mov
jl
push
dec
jae
jno
lds
test
jb
mov
js
dec
loopne
ret
enter
and
rclb
sbb
sub
aam
sub
mov
adc
jmp
in
mov
xor
push
enter
pop
xor
shlb
push
in
roll
cmc
mov
sarl
ja
in
dec
and
pop
shll
scas
jnp
or
dec
outsb
dec
in
xchg
push
dec
sub
ss
ss
jnp
ret
add
add
mov
imul
dec
shll
or
push
cmpsb
popf
cmpsb
xor
inc
add
add
pop
adc
les
ret
pop
mov
rcr
scas
and
sbb
outsl
inc
xor
inc
jo
hlt
mov
mov
bound
add
clc
xor
push
pop
xlat
std
push
jb
inc
jae
jo
les
cmp
insl
and
jb
and
add
gs
andb
push
das
mov
pop
mov
pop
andb
cwtl
lock
rorb
push
sahf
xchg
pushf
push
js
test
or
adc
enter
and
pop
cmp
inc
mov
mov
popf
pop
push
aaa
xor
fsubrl
mov
and
test
push
xchg
in
test
test
pop
aaa
mov
lods
ret
addr16
test
pop
adc
rclb
pusha
in
imul
jns
mov
sbb
jge
xchg
icebp
icebp
push
cld
mov
or
xchg
pop
dec
dec
xchg
mov
push
outsl
ljmp
dec
jno
cmp
std
jmp
jb
xchg
adc
push
orl
pop
fldenv
fnstsw
insb
mov
pop
xchg
cld
popa
imul
add
lods
loope
mov
dec
js
cmp
hlt
pop
inc
add
adc
jge
add
or
outsb
ja
sub
outsb
ja
sbb
add
jne
mov
cmp
sar
cmp
mov
adcb
mov
push
rorl
push
dec
mov
ret
test
std
imul
adcl
cmp
mov
inc
mov
sub
or
enter
add
les
outsb
shrl
int3
aas
adc
and
inc
jbe
mov
sub
jp
popf
mov
and
push
loope
adc
mov
popf
and
insb
and
dec
popw
imul
sub
imul
ret
mov
aaa
or
jo
pop
push
stos
xchg
jmp
mov
movhps
fwait
scas
inc
sbb
outsb
adc
inc
outsl
rcl
insl
cmp
pop
sbb
cwtl
inc
dec
dec
adc
lock
push
adcb
pop
mov
lahf
and
les
dec
cmp
call
outsl
pop
mov
lock
mov
imul
loopne
inc
out
adc
mov
fs
incl
jnp
mov
fdivrl
sbb
ret
dec
aaa
sbb
sub
idivb
cmp
jbe
fnsave
ffreep
jo
add
pop
icebp
mov
mov
and
imul
int
fwait
or
sbb
add
xor
pusha
mov
or
mov
popa
inc
add
test
add
lods
stc
rolb
in
cmp
xor
cmp
pop
cmp
pop
adcb
or
jae
flds
add
pusha
pop
add
ss
imul
dec
addb
cs
jnp
lock
mov
and
add
and
stos
pop
sub
jb
popa
adc
mov
mov
out
inc
cs
out
xor
inc
push
cmp
or
push
jnp
mov
dec
rcrb
pusha
dec
sbb
movb
lahf
clc
jle
filds
inc
jne
pusha
test
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
add
add
add
push
add
add
subb
add
nop
add
addb
add
mov
add
add
add
adcb
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
add
add
add
or
add
arpl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
imul
add
add
add
add
add
add
or
add
add
add
jnp
add
add
add
add
add
add
or
add
add
int3
jge
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
rolb
addb
add
call
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
push
add
add
add
add
add
or
add
add
add
or
call
add
add
add
add
add
or
add
add
cmp
or
test
add
in
add
add
add
add
add
jmp
add
js
add
add
add
add
add
add
add
or
add
push
or
lods
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
add
add
push
or
sub
add
in
add
add
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
sub
or
test
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
ja
add
add
in
add
add
add
add
dec
add
inc
add
add
push
add
dec
add
sbb
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sub
add
adc
add
and
add
add
or
add
add
inc
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
nop
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
or
or
or
or
or
or
or
or
ljmp
or
or
or
or
or
or
or
or
or
or
or
ljmp
xor
or
or
or
or
or
or
mov
or
or
ljmp
pop
xor
lahf
inc
or
or
or
or
or
in
mov
or
ljmp
pop
xor
lahf
lahf
lahf
inc
or
or
or
or
or
mov
imul
or
out
out
pop
pop
mov
lahf
repnz
or
or
or
or
or
mov
imul
out
out
out
out
pop
mov
repnz
or
or
or
or
in
mov
imul
ljmp
or
repnz
out
out
inc
or
or
or
or
in
mov
imul
mov
or
or
in
in
in
out
out
inc
or
or
or
or
in
mov
imul
ljmp
or
or
lock
in
in
inc
or
or
or
or
in
mov
imul
repnz
lahf
pop
pop
or
out
idiv
lock
out
inc
or
or
or
or
in
decl
imul
ljmp
jae
out
testl
or
or
or
or
in
decl
in
imul
ljmp
mov
incl
or
or
or
or
in
decl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
or
or
in
decl
div
div
ljmp
mov
or
or
pop
out
in
or
or
decl
div
div
or
jmp
loope
mov
in
in
in
in
in
pop
pop
in
or
or
decl
div
div
or
in
in
in
in
jmp
in
or
or
in
in
in
in
or
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
or
or
ljmp
div
or
or
or
or
or
or
or
or
or
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
in
in
in
in
in
in
in
ljmp
incl
in
or
or
or
or
ljmp
in
incl
add
add
add
add
add
add
pop
in
or
or
or
or
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
or
or
or
or
or
decl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
or
or
or
or
or
in
in
in
in
in
or
add
pop
jp
xor
xor
dec
add
pop
in
or
or
or
or
or
or
or
or
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
or
or
or
or
or
or
or
or
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
or
or
or
or
or
or
or
or
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
or
or
or
or
or
or
or
or
incl
add
add
add
add
add
add
pop
in
or
or
or
or
or
or
or
or
incl
in
or
or
or
or
or
or
or
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
adc
or
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
push
pop
or
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
aas
add
add
add
add
add
add
add
in
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
rolb
add
add
add
xor
cmp
xor
xor
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jae
je
popa
add
add
jb
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
outsl
insl
jo
je
bound
imul
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jo
je
bound
imul
or
and
jo
insb
imul
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
ds
jae
jo
outsl
jb
gs
push
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
ds
jae
jo
outsl
jb
gs
push
ds
and
popa
jo
insb
imul
ds
das
arpl
jo
je
bound
imul
jae
insl
bound
cmp
or
fdivrs
add
or
hlt
jnp
add
or
cld
jnp
add
or
add
or
insl
jl
add
or
ja
or
adc
or
test
sbb
or
nop
jl
add
or
fwait
jl
add
or
cmpsl
jl
add
or
mov
or
sarb
jl
add
jl
add
jl
add
jl
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
add
addb
add
inc
jge
add
add
add
add
add
add
add
add
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
xor
cs
insb
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
push
inc
push
dec
cs
insb
add
inc
push
xor
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
xor
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
popa
je
insb
je
add
je
fs
jo
gs
dec
outsb
outsw
add
add
dec
outsb
imul
add
push
jb
inc
jae
popa
jo
inc
add
inc
gs
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
mov
add
add
orb
push
or
xchg
testl
orb
add
add
or
or
add
sbb
or
push
add
xorb
add
pop
xor
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
push
add
sbb
movsb
outsb
sahf
int
pusha
loop
leave
orl
or
addb
mov
add
and
pushf
push
sbb
gs
xor
dec
xchg
or
add
xorl
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
or
push
push
gs
push
imul
jae
and
je
outsl
jb
xor
xor
push
add
or
xor
insl
jae
outsl
data16
and
and
je
jae
das
das
ja
ja
jbe
jb
jae
outsb
arpl
das
jb
popa
and
arpl
xor
xor
xor
add
add
and
push
imul
jae
and
and
fs
outsb
imul
xor
inc
inc
xor
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
or
add
push
adc
push
push
xor
xor
push
add
or
or
jae
imul
adc
clts
add
pop
adc
inc
gs
insb
gs
xor
push
add
adc
push
imul
inc
outsl
jb
outsl
jb
je
outsl
outsb
xor
xor
.byte
push
