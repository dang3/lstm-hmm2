divb
in
mov
mov
mov
inc
add
add
dec
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
jo
imul
xchg
add
mov
inc
push
adc
push
test
push
fcmovnb
les
ljmp
insl
pushl
cltd
push
mov
xor
js
icebp
mov
mov
call
data16
mov
pushl
test
mov
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
dec
pusha
outsl
in
add
push
adc
cwtl
pop
mov
rcrb
repnz
add
jae
in
or
mov
int
jbe
or
or
pop
cmpsl
push
jl
in
cmpsb
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
enter
cmp
mov
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
jo,pt
sbb
push
xchg
mov
inc
cmp
add
cmpb
mov
movsl
mov
xlat
insb
ja
ja
add
and
add
push
mov
sahf
add
sbb
dec
cmp
je
out
pop
ja
xor
adcl
cmc
jne
imul
jmp
push
sub
xlat
add
sub
insl
sbb
pushl
add
push
push
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmpl
adcl
xorl
adc
jg
mov
adc
addr16
dec
or
ret
shrl
out
stos
loop
push
push
lock
pop
outsl
jmp
das
pop
pop
adcl
incl
push
mov
sar
xor
cmp
ja
adc
fisubrs
lock
sub
add
push
movsb
inc
inc
jmp
pop
xchg
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmpl
sub
push
filds
ret
add
jge
in
mov
testb
add
pop
cltd
sub
shrl
fwait
in
enter
mov
mov
push
loope
cwtl
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
rorl
mov
mov
or
adc
lea
adc
fildl
mov
pop
hlt
into
mov
adc
cmpsl
out
and
insl
stc
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
insb
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
insl
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
decl
mov
repnz
mov
pop
idivl
add
jecxz
jmp
sub
fs
cli
ret
add
and
add
es
adcb
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
lret
clc
pop
pushf
cmpl
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
ljmp
or
mov
ret
push
push
rcrb
jecxz
clc
mov
jmp
xchg
jmp
inc
or
ret
push
cmpsb
imul
cld
pop
xor
lods
lods
jo
and
and
inc
sub
test
aad
aaa
stos
sar
testl
inc
or
pop
or
cmp
sti
call
stos
push
mov
lea
cmp
jne
push
push
bound
xor
push
test
push
push
add
pusha
pop
pop
inc
ss
adc
sarb
inc
fdivl
cmp
stos
xchg
and
dec
mov
adc
adc
dec
cwtl
dec
pop
lret
and
xchg
add
out
add
ret
fstpt
mov
add
pushf
sbb
adc
mov
pop
mov
mov
push
or
cwtl
push
push
data16
mov
test
shll
sti
in
dec
out
mov
enter
out
stos
cmp
mov
adc
je
push
adc
pop
pop
sub
sbb
repz
push
out
inc
inc
xor
or
cld
pop
lea
dec
push
xor
rcr
loopne
push
mov
xchg
pop
push
jmp
dec
fisubl
add
add
sbb
lcall
roll
xchg
call
dec
inc
out
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
stos
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
hlt
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
imul
imul
les
pop
mov
mov
imul
jb
mov
xor
gs
pop
xor
jb
test
ret
lret
xchg
aam
jp
or
movsl
out
fcmovbe
mov
mov
cmp
push
cmp
adc
jge
xor
stc
push
jnp
xor
sub
jg
inc
lods
fstpl
push
sbbl
movsbl
sub
add
shll
aaa
mov
push
stos
in
mov
add
fwait
orb
mov
push
mov
mov
push
adc
lock
mov
jecxz
mulb
sbb
int3
ret
mov
push
sarl
mov
sbb
in
sub
lea
out
lahf
scas
out
decb
adc
xor
aad
push
test
out
add
xchg
sbb
mov
xor
pop
inc
xlat
or
call
mov
and
mov
das
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
and
dec
lock
push
out
pop
fstpt
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
je
jae
mov
sarb
pop
or
lods
push
sbb
xchg
add
sub
lret
ljmp
std
mov
xor
out
sbb
insl
movsl
repnz
sub
js
and
adc
cltd
lock
add
fiadds
in
dec
ret
add
int
fldl
pushl
out
les
mov
fcomps
sar
inc
pop
xlat
andb
enter
add
test
ficoml
rorb
mov
sbb
pop
movsl
inc
adc
pop
mov
pop
fildll
das
adcl
sub
adc
dec
inc
push
cwtl
push
sbb
or
scas
call
lea
cmpl
mov
js
push
and
lea
int3
js
jl
sub
outsl
xchg
ret
pop
adc
sarb
cmp
ffreep
mov
push
aas
pop
mov
sub
fdivrp
sub
inc
mov
dec
jl
mov
push
pop
sbb
fs
pop
movsl
cmp
les
or
cmp
dec
mov
insl
xor
or
icebp
into
scas
mov
or
push
inc
or
mov
mull
pop
pop
pushf
sub
xchg
jl
inc
aas
push
shlb
lds
jmp
in
sub
xchg
mov
adc
dec
push
in
adc
je
push
sub
scas
adc
lahf
cs
jb
mov
adc
sti
jne
insl
push
push
or
mov
xor
dec
jl
mov
lea
adc
xchg
adc
popa
data16
xchg
xor
divb
sub
pop
sbb
cmpsl
jmp
mov
fmuls
or
in
clc
addl
scas
mov
mov
mulb
fildll
cmp
jne
push
dec
test
das
pop
loope
add
adc
test
push
jo
and
in
push
xor
shrb
push
jnp
add
cmpsb
mov
push
in
mov
push
ficoml
ret
in
jmp
repnz
pusha
xchg
fmulp
je
or
push
in
and
sbbb
xor
add
lods
mov
in
add
jns
inc
pop
push
movsb
push
mov
add
daa
cmp
ret
push
xor
push
cld
loope
mov
jge
decl
repnz
sbb
test
out
add
loope
add
push
mov
dec
jb
lock
rcrb
test
push
aaa
cmp
int
adc
popf
mov
jp
mov
and
imul
adc
insb
pop
cmp
and
ljmp
inc
push
or
and
add
add
stos
cmp
add
testb
xchg
in
clc
out
dec
or
or
and
test
add
push
sbb
jo
xor
or
push
sbb
pop
push
cmc
jmp
push
xor
dec
test
mov
aad
out
and
push
sbb
stc
aaa
jnp
fistpl
fistpl
jae
ret
je
push
hlt
cs
or
and
jnp
ret
mov
or
pop
cwtl
or
cwtl
lods
mov
push
dec
cmpsb
in
mov
dec
dec
inc
ds
imul
lock
xor
rolb
lock
sub
xchg
add
mov
push
fs
mov
inc
rcll
inc
pop
fiadds
clc
test
inc
outsl
mov
in
das
sarb
popf
mov
dec
hlt
adc
fs
inc
sub
lcall
mov
fcoml
dec
outsb
cmp
fsubp
mov
lcall
xchg
push
lcall
mov
cmpb
mov
nop
push
mov
adc
je
movsb
adc
sbb
aaa
jb
fcomps
adc
repnz
ret
les
pushf
pushf
jns
mov
mov
gs
sub
jb
xchg
xchg
in
iret
and
cmp
dec
xor
clc
arpl
ret
sbb
xchg
and
enter
cltd
xchg
out
rcrb
rorb
ret
sbb
imul
inc
push
les
sbb
arpl
pop
test
push
test
inc
mov
test
jle
pop
pop
dec
inc
scas
movsb
pusha
and
call
dec
pop
cmpsl
and
mov
push
das
lock
sti
lods
cwtl
arpl
or
shrb
add
mov
es
and
xchg
xchg
jo
inc
sbb
call
mov
pop
mov
es
je
add
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
or
jne
fistpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
out
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
mov
enter
or
sub
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
xor
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
pop
mov
neg
pop
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
cmp
cltd
js
popf
lret
adc
sbb
shl
mov
pop
mov
sahf
les
in
sbb
pushf
pop
nopl
jo
push
lock
sub
stc
ret
mov
jbe
maskmovq
testl
push
xlat
loop
clc
add
add
rclb
cmp
or
cs
adc
xchg
in
push
shlb
stos
imul
mov
xchg
test
inc
add
cmc
ret
mov
add
ret
enter
or
add
pushf
mov
pop
and
aas
test
mov
nop
lret
xorb
and
push
xor
loope
cmp
loopne
out
negl
je
push
push
pop
ljmp
test
sub
push
pusha
lock
hlt
add
mov
sbb
clc
adc
and
shrl
pop
mov
imul
test
pusha
add
mov
mov
cld
or
xchg
and
push
nop
or
and
push
and
js
popf
bound
stos
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
push
rcrl
xchg
inc
mov
lock
and
sub
test
test
mov
bound
ss
stc
scas
sub
pop
sub
push
cmp
add
sub
push
add
cltd
sub
jecxz
adc
inc
push
xchg
lret
or
xor
mov
add
push
je
add
add
add
inc
push
inc
pop
xor
add
insb
stos
xor
fldenv
ss
pop
insb
adc
inc
in
rclb
lods
mov
loope
jns
aaa
sub
fsubs
jne
and
loopne
sbb
pop
xor
push
stc
mov
inc
sbb
adc
xor
or
aas
lret
push
rorl
mov
sub
enter
ficoms
sbb
push
das
add
rclb
in
add
cmp
ret
pop
sub
mov
imul
mov
pop
popf
sbbb
cmpsl
mov
ret
or
loopne
orb
sahf
xor
dec
pop
bnd
fs
das
sub
push
xchg
stos
dec
mov
mov
dec
push
testb
das
subl
pop
xchg
test
xchg
pushl
jnp
fcmovnbe
mov
xor
cmp
or
je
xchg
fsubs
nop
cmp
outsl
inc
mov
cmc
fidivs
jmp
imul
inc
cmp
mov
jae
mulb
add
sbb
pop
in
leave
leave
xchg
ficoml
jo
xchg
out
cmp
repnz
or
pop
and
cmp
jne
mov
jns
and
cmp
mov
pop
push
and
xor
and
or
shl
inc
mov
hlt
dec
pop
xchg
inc
gs
int3
adcl
ds
fmuls
sarl
fiaddl
mov
notl
mov
sub
jmp
mov
cli
add
adc
pushl
ss
test
mov
loopne
loop
inc
in
and
andb
js
pop
and
push
nop
gs
mov
adc
mov
js
sub
jge
adc
je
cmp
cld
push
push
xlat
cwtl
jo
xlat
mov
sub
mov
mov
add
faddl
je
adc
adc
jne
push
sub
pop
pop
or
and
or
adc
jecxz
arpl
push
sub
xchg
rorb
jmp
cmp
mov
in
cs
jg
and
sbb
mov
jmp
mov
and
push
mov
or
push
loopne
dec
cmp
add
shl
addl
adc
add
inc
or
mov
repz
out
or
push
push
inc
loopne
les
sbb
adc
and
pop
mov
dec
xchg
xor
cmp
out
sbb
or
add
and
daa
push
lock
inc
sbb
mov
or
mul
and
jbe
adcl
add
xchg
inc
out
or
push
ret
add
mov
xor
into
add
jbe
int
icebp
les
cmp
jne
or
je
addb
lock
out
jb
add
in
sti
loopne
pop
arpl
inc
jg
inc
das
and
mov
int3
cli
xor
add
push
inc
fdivl
clc
inc
cs
loope
clc
pop
pop
test
mov
stos
loope
pop
lods
rcr
out
emms
outsl
jae
push
jne
or
xchg
cmp
dec
xchg
mov
mov
adc
std
mov
rcl
loop
rolb
sub
repz
das
mov
sub
jl
mov
hlt
push
sbb
fsub
push
out
and
xchg
out
test
and
lods
and
lock
div
lds
pusha
inc
movsb
mov
aaa
pop
jno
pop
or
mov
outsl
jmp
pop
sub
or
jg
cmpsb
sub
xor
les
or
push
aas
repnz
int3
add
mov
or
rorb
fdivrs
push
fdivr
push
add
call
insb
push
in
shrb
mov
jle
mov
jnp
lock
xor
sti
dec
dec
je
sub
filds
pop
jmp
jge
imul
push
jmp
adc
pusha
jmp
lock
int3
es
stos
mov
and
sub
xor
in
pop
push
mov
addr16
xor
and
inc
inc
inc
insl
hlt
aad
mov
add
xlat
je
lock
ja
jge
push
mov
xor
inc
mov
je
lock
jle
push
sub
icebp
clc
dec
cmp
ja
daa
push
aaa
fs
jle
enter
mov
loope
loop
mov
push
push
add
ljmp
in
leave
mov
paddusb
mov
pop
jle
cmpsl
or
push
in
mov
add
pop
xorl
sub
push
cmpl
mov
stos
daa
loopne
mov
or
cli
add
cmp
pop
jge
pop
lea
ds
shrb
xchg
sbb
shlb
out
orb
scas
or
push
jne
aaa
or
push
in
mov
arpl
cwtl
dec
rorb
roll
add
xchg
mov
xor
pop
loopne
lret
cmp
outsb
dec
ret
outsb
jno
mov
jbe
pusha
ss
add
push
sar
dec
mov
add
bsr
pusha
dec
add
add
or
sub
cmp
std
popa
dec
aad
in
or
mov
clc
xchg
loop
cmp
nop
es
test
call
scas
inc
mov
or
xchg
dec
loopne
fdivrl
add
dec
jg
jg
in
loopne
pop
cld
loopne
or
sub
faddl
add
in
push
cmpl
mov
cmp
lret
aam
push
out
arpl
aam
enter
push
sbb
push
cmove
or
push
pop
add
inc
xchg
loopne
pop
mov
nop
fsubr
mov
cmp
cli
in
mov
fiaddl
mov
or
daa
pushf
mov
mov
stc
adc
scas
in
sub
push
in
sbb
inc
mov
scas
sbb
pop
lea
inc
mov
and
clc
inc
pop
cmp
in
or
jb
popa
jl
ret
push
push
call
and
pop
dec
cmp
addl
outsb
je
fs
add
inc
mov
mov
rcll
icebp
or
pushf
inc
insl
or
loopne
out
mov
mov
or
push
jl
add
test
je
mov
pop
or
mov
dec
push
cmovns
jp
loopne
adc
add
nop
push
and
pushf
dec
push
pop
xor
mov
call
mov
sub
sub
enter
fxch
pop
cmp
adc
aam
out
in
in
adc
pushf
loopne
in
addr16
pop
ret
add
xchg
arpl
jg
xor
inc
mov
pushl
call
mov
std
pop
mov
push
ret
shr
movzbl
push
adc
sbb
fwait
push
ret
push
ret
dec
push
aam
adc
mov
xor
mov
cmpsl
jle
frstor
popf
cmp
data16
xchg
roll
fs
xchg
mov
push
gs
pop
xor
ret
pop
mov
out
jp
lret
push
xor
loopne
pop
or
add
lret
jb
or
ss
arpl
add
sti
jle
push
add
push
push
mov
decl
jg
mov
mov
jmp
outsb
and
mov
lds
fsubrs
xchg
pop
fucom
enter
sbb
mov
push
enter
in
aas
ljmp
insl
sbb
xlat
cmpsb
adc
loope
dec
ds
jecxz
inc
pusha
je
aaa
outsb
sub
mov
subl
sbb
push
pushf
ret
add
sub
cmp
scas
clc
push
ret
push
pop
jmp
mov
push
cmp
mov
test
push
push
push
int
sub
in
add
sub
jne
sub
sbb
jp
sub
adc
pop
sbb
or
fcomip
push
xor
inc
cmp
jae
ds
or
xor
ja
dec
bound
inc
call
push
mov
xchg
je
add
fiaddl
testb
sub
test
cmpsb
pop
imul
add
jl
in
js
mov
add
push
adcl
push
js
mov
roll
mov
sar
push
inc
cld
mov
popa
nop
add
mov
sub
jp
insb
pop
xor
adc
cli
lea
ljmp
pop
inc
cld
or
push
test
xor
imul
leave
pop
in
mov
sbb
enter
jb
inc
orl
fcom
cmpsl
cmp
jb
out
push
out
ss
dec
inc
xchg
je
sub
jle
test
js
inc
dec
hlt
jg
hlt
or
add
loope
push
je
sub
pop
movb
sub
fdiv
loope
xchg
add
inc
mov
push
in
or
push
push
sbb
fists
rcrb
inc
rorl
jl
cld
sahf
test
cmp
jl
repz
push
jmp
mov
loop
or
shll
adc
xlat
xchg
popa
pop
push
cmp
int3
jbe
fwait
mov
mov
push
push
xchg
insb
daa
int3
sub
push
mov
adc
or
out
adc
fnstcw
unpcklps
push
inc
sub
push
fisubrl
add
mov
ret
je
mov
fdivrs
mov
jp
mov
add
shrb
mov
aam
movsb
push
dec
sbb
imul
or
cmp
into
js
or
movb
mov
rolb
sub
xor
sub
lea
jae
sti
test
adc
adc
testb
mov
fadd
je
push
and
xor
add
push
insb
xchg
imul
xlat
dec
or
aam
or
and
adc
sub
jmp
icebp
jb
lds
cmp
jne
cmp
je
imulb
sarb
xor
inc
cmp
jmp
push
push
push
and
inc
and
adc
movb
or
add
sbb
or
icebp
addl
aas
dec
fwait
push
shlb
push
ret
push
push
push
ljmp
fmulp
or
pop
pop
sbbl
or
mov
test
mov
or
jne
das
movsb
pop
cmpsl
ljmp
fiaddl
mov
js,pt
push
aad
jno
clc
jg
jo
psrad
adc
or
sub
pusha
mov
adc
sub
push
adc
fwait
push
test
mov
rorl
js
push
decl
or
lret
or
add
add
jno
jae
and
lock
lock
pushaw
test
xlat
xor
adc
add
adc
mov
pop
test
pop
mov
rorb
pop
dec
push
in
xchg
pop
add
mov
or
adc
arpl
or
movsb
push
jmp
push
rcrb
push
push
addr16
fimull
cmp
adc
mov
pop
push
cmp
push
inc
test
movsb
inc
inc
pop
cmp
hlt
call
hlt
sub
sar
nop
cmpb
adc
lcall
je
pop
push
ret
loope
inc
shll
mov
mov
mov
ret
insb
cld
cmp
lea
popf
shr
js
add
push
test
rcrb
leave
inc
xchg
mov
xchg
mov
xchg
add
shr
movl
add
inc
loope
cmpsb
sbb
in
add
pop
popf
icebp
ds
add
daa
mov
push
or
and
or
jae
outsl
mov
add
adc
ret
enter
xlat
jecxz
xchg
jo
rcrl
or
fmull
push
scas
mov
jbe
sbb
je
sbb
push
bndstx
sti
inc
and
shlb
xlat
or
sbb
repnz
push
or
dec
xchg
mov
lods
test
xchg
add
sar
push
nop
xchg
sub
incl
insb
fdivrs
dec
sub
ds
pop
fldt
enter
adc
jb
sub
imul
nop
adc
movl
dec
mov
push
sbb
or
inc
xchg
call
pop
cmpsb
mov
adcl
insb
fs
cmpsl
repnz
jno
add
adc
loop
lret
cmpsl
push
and
fnstenv
dec
jno
test
inc
push
inc
repnz
jo
sbb
pop
ficoml
jge
xchg
or
xor
inc
aad
mov
push
pop
mov
shl
in
xor
jg
cmp
mov
pop
leave
adc
clc
nop
mov
add
enter
enter
and
sbb
in
dec
sbbb
je
sub
dec
inc
dec
popf
mov
jge
and
pop
enter
lea
inc
mov
cltd
mov
push
pop
cmpsl
int3
xchg
aas
cs
add
cmp
fldl
push
nop
and
cli
out
mov
in
xchg
or
mov
mov
lret
mov
add
mov
in
jmp
imul
test
lods
mov
lcall
pop
sbb
push
in
push
stos
lock
xor
xlat
add
pop
push
mov
and
push
adc
jae
lock
lret
adc
dec
daa
adc
dec
into
aam
jb
push
inc
fisubrs
mov
int
lea
mov
add
or
or
dec
clc
and
adc
pop
sub
sbb
pop
ret
mov
dec
add
int3
cmp
sbb
pusha
fldt
nop
jns
inc
pop
pop
dec
sti
pop
dec
es
push
push
in
push
pop
adc
lds
dec
adc
push
mov
push
mov
fs
ret
and
and
fwait
in
nop
xchg
outsl
cmp
sbb
and
ret
push
add
inc
movsl
mov
sub
inc
ret
cmp
pop
addr16
push
outsb
imul
fwait
cmp
push
jp
enter
sahf
les
stc
movsbl
sbb
and
stc
adc
cmp
popf
data16
jg
jge
inc
pop
sbb
cmp
push
mov
cmpsb
dec
in
shrl
pop
negl
cmpb
add
cmp
add
mov
cmp
push
jl
das
cs
mov
jbe
mov
shr
ds
arpl
pop
mov
add
add
jbe
xchg
insl
jmp
outsl
icebp
mov
cmp
jmp
negl
outsb
sub
dec
je
into
adc
in
jge
xchg
push
push
sbb
adc
out
dec
mov
dec
inc
jmp
or
andb
leave
jmp
xchg
and
jg
push
shlb
popa
std
scas
jmp
push
add
push
mov
xor
sbb
cli
and
add
mov
movsb
addb
xchg
pushf
fnstsw
sub
push
mov
sahf
jg
mov
loope
cli
mov
mov
add
hlt
and
push
aaa
xchg
jl
mov
xor
push
push
daa
pop
mov
jo
js
xor
lea
dec
and
pop
sub
mov
rcrb
sbb
fucomi
jp
cmp
je
cmp
pop
test
shlb
leave
adc
cli
jge
lahf
mov
cmpsb
sbb
fstpl
imul
jmp
sbb
and
push
cmp
pop
inc
jmp
and
jmp
xchg
loope
dec
icebp
sbb
adc
out
mov
xlat
pop
push
inc
push
dec
push
pusha
jns
jns
out
ror
lcall
mov
cltd
inc
sbb
mov
mov
add
pushw
and
adcb
sbb
insb
fstl
lea
sbb
inc
adc
sub
mov
or
movb
add
cmp
or
xchg
xchg
clc
xchg
repnz
jge
aaa
mov
push
dec
push
mov
pop
push
xchg
icebp
pop
icebp
lea
push
push
push
push
add
push
lea
mov
xchg
pop
inc
pop
leave
mov
dec
mov
and
mov
push
sahf
fisubs
stos
add
sub
lea
movl
adc
imul
xchg
adc
sbb
push
xchg
push
cmp
movsb
push
je
lea
pop
cltd
sbb
push
aam
sbb
pop
push
push
or
jl
inc
xor
add
aad
cmp
push
cmp
leave
pop
or
nop
fstp
aaa
mov
xorl
mov
in
push
or
push
push
xchg
dec
je
mov
jno
jle
ss
push
clc
pop
rclb
pop
andb
inc
cmp
jecxz
cmpsb
bound
cmpsl
pop
inc
insl
pop
cmpsl
add
aas
aad
jne
or
dec
repz
add
mov
jno
cwtl
aam
movsb
test
fbld
in
dec
js
jo
dec
lcall
push
enter
jmp
mov
call
inc
in
pop
inc
adc
jns
and
in
mov
inc
call
pop
jo
shrb
je
add
xor
cltd
push
push
dec
jge
lea
testb
data16
fcoms
aad
jns
jg
cmp
push
push
push
cmp
mov
shlb
dec
lret
push
pop
sbb
or
push
out
ret
cmpsb
inc
jl
lcall
mov
ret
cmp
push
xchg
popa
cs
sub
lock
rclb
pop
mov
popa
aam
push
aam
das
in
cmp
pop
insb
sbb
lahf
push
jne
int3
push
icebp
gs
jae
add
fcoml
sub
dec
fildl
cmp
bnd
mov
add
inc
daa
imul
fdivr
ret
sub
mov
lods
test
scas
xor
adc
ja
dec
fmul
cmp
jne
push
sub
xor
mov
clc
js
std
pop
rorb
xor
sbb
je
lea
push
mov
rolb
mov
jo
loope
orb
nop
push
sbb
cmp
fcomip
pop
pushl
call
push
or
adc
nop
insb
mov
cmpsb
jns
lcall
les
inc
push
mov
lock
pop
mov
push
adc
dec
lea
dec
push
push
lea
push
fsubs
cmp
fimuls
ret
inc
dec
sub
in
dec
jmp
sub
in
lret
xor
sub
jle
shlb
in
cmp
push
mov
add
mov
imul
inc
xlat
dec
jl
inc
xor
fwait
xlat
jmp
add
push
popf
mov
push
loop
mov
sub
out
es
lock
mov
into
xor
sbb
add
test
dec
inc
and
fistpl
jp
dec
pop
xchg
pop
repnz
lock
xor
jg
in
and
divl
cmp
push
push
pop
push
negb
scas
mov
mov
mov
jg
cmpsb
dec
lods
push
fimull
leave
adcl
scas
lock
push
push
out
cmp
jae
cmp
adc
fists
enter
pusha
fs
mov
adc
mov
aaa
add
adc
xchg
push
push
or
aaa
sbb
jmp
and
test
cld
adc
mov
xchg
jo
pop
pop
and
fwait
and
out
fisubs
in
pop
ljmp
js
push
daa
lock
call
cli
fdivrs
cmpl
jne
pushl
in
push
push
jl
dec
sbb
push
cs
mov
adc
xorl
adc
push
scas
push
push
inc
cmp
fmuls
mov
and
inc
dec
add
mov
flds
push
jg
sti
cmp
je
cmp
mov
mov
sti
sbb
pause
mov
pop
jno
add
jo
add
push
add
dec
lret
ja
sub
in
cmp
dec
jg
xor
clc
xor
mov
movb
jmp
cmp
jne
data16
mov
leave
push
mov
cmp
imul
mov
aas
mov
cmc
or
fisubrl
adc
xor
push
sub
xor
inc
leave
test
sbb
lock
out
sub
test
xor
jle
fimull
popf
sub
mov
mov
in
jl
push
push
dec
or
adcb
mov
es
cmp
jp
push
leave
push
adc
fcoml
jl
imul
sub
push
adc
enter
aas
pusha
es
mov
pop
inc
gs
sbb
idivl
mov
xor
or
fadds
scas
mov
mov
or
dec
cltd
xchg
pop
cmp
mov
sbb
push
ss
clc
movsl
push
push
lea
and
mov
stc
mov
test
sub
push
call
push
and
push
push
lret
cmp
sarl
andb
jbe
test
iret
sbb
mov
xchg
je
popf
adc
and
jge
test
js
mov
aaa
not
sbb
test
add
mov
xor
dec
cwtl
imul
pop
fldl
fmull
int3
xor
pop
les
aaa
push
push
add
mov
movsl
inc
lock
sub
cli
mov
into
push
lock
fwait
cwtl
mov
movsl
and
add
repnz
fisubl
add
jno
insb
inc
out
sbb
negl
popa
in
aam
xchg
ds
add
sbb
jmp
and
test
dec
adc
fmuls
cmpsb
loopne
jo
add
repz
nop
or
jns
pop
loopne
push
xchg
and
adc
mov
push
push
fadds
push
adc
lea
cmpb
out
and
xor
je
push
pop
cmp
lods
and
pop
push
xor
jmp
das
enter
adc
sub
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubrs
add
pop
sub
push
cli
or
push
imul
xchg
push
dec
mov
or
push
mov
xor
push
call
jmp
fs
popa
push
sbb
mov
pop
cltd
sub
push
jecxz
shll
xor
popa
sysret
or
out
jo
jno
add
shrb
pusha
add
sbb
adc
aad
sub
mov
js
push
in
add
negb
mov
cltd
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
mov
jge
mov
ljmp
idiv
push
mov
mov
mov
aaa
outsb
lea
xor
idiv
cs
mov
add
jg
mov
mov
je
jo
jge
add
dec
mov
mov
xchg
dec
xchg
or
out
inc
cmp
xchg
add
in
or
out
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
aaa
add
sbb
mov
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
testl
test
jns
faddl
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
ds
cmpsb
inc
les
out
add
das
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
mov
ret
pop
jne
loopnew
jg
pop
movb
push
or
loope
dec
outsb
mov
inc
pop
mov
cmp
and
xor
clc
mov
cmpsl
aad
shlb
cld
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
inc
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
js
in
xor
mov
cmp
dec
sub
nop
sub
or
push
and
xor
xor
sbb
mov
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
aaa
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movsb
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
mov
pop
pop
in
lea
add
or
fnstsw
push
rcll
or
add
xchg
imul
mov
dec
in
repz
inc
pop
pop
mov
das
pop
adc
sub
js
test
push
jle
jae
add
outsl
pop
jne
xchg
and
mov
dec
mov
dec
es
sbb
cmp
inc
sbb
clc
push
dec
jge
inc
and
adc
fs
and
int3
pop
push
and
ja
pop
in
out
pop
sbb
and
dec
sbb
sbb
rolb
repnz
dec
and
inc
cli
aaa
xchg
pop
adc
inc
push
cmp
ds
lds
das
sbb
in
testb
and
mov
sbb
mov
fsubrs
xlat
dec
pop
mov
push
cmp
cwtd
js
aam
aas
mov
inc
int
mov
inc
sub
clc
cld
add
cmp
setb
test
rorb
xor
lahf
add
dec
adc
data16
clc
mov
push
lods
aaa
addb
das
xor
jle
je
push
fstps
pop
inc
sbbb
sub
outsb
addb
es
dec
push
je
dec
mov
sub
inc
test
push
mov
hlt
sub
mov
mov
xchg
dec
adc
add
shrl
jb
fcomp
inc
and
das
push
xlat
add
fwait
test
fbld
pop
add
mov
rorb
pop
fs
mov
daa
bound
mov
outsb
out
imul
pop
jmp
jne
push
add
adc
push
not
sub
fildl
add
int
xchg
ret
mov
sub
add
xchg
dec
jl
push
dec
push
xchg
add
scas
adc
or
dec
and
or
jmp
push
pop
pop
jb
inc
rclb
cld
jno
add
das
inc
xor
add
and
into
xchg
std
dec
dec
sbb
push
jmp
aaa
cld
xchg
in
lds
dec
std
int3
js
fsubrp
xchg
out
add
mov
push
push
and
int
popf
jnp
or
call
and
push
inc
int
rorb
push
push
rolb
cmpb
jns,pn
jns
push
in
enter
push
pop
fmuls
call
dec
xchg
out
pushl
sub
jb
insb
aam
sub
or
aaa
pushl
dec
fcmove
add
sar
add
jns
les
shlb
loope
out
popf
sbb
jge
sti
push
xor
push
les
push
nop
lret
stos
test
add
xor
cmp
push
mov
mov
in
mov
add
aaa
xchg
addr16
push
sbb
mov
lods
mov
push
sbb
arpl
das
jmp
mov
nop
cmp
sub
and
notb
insl
test
or
and
sub
jo
cmp
imull
push
push
push
outsl
daa
add
xchg
or
jnp
imul
adc
or
push
scas
aam
mov
pop
push
in
dec
cmpsl
out
add
adc
pop
fldt
mov
xchg
mov
mov
add
testl
sbb
sbb
jge
lret
cmp
enter
or
add
push
cmpsb
loopne
cltd
and
xor
push
mov
fistpl
xchg
pop
pushl
push
adc
lret
jmp
fbstp
mov
cmp
mov
sbb
clc
mov
pop
ret
je
jb
mov
pushf
sbb
out
call
dec
mov
jmp
dec
mov
sub
mov
push
mov
jbe
fwait
mov
add
mov
add
inc
xor
shlb
shrl
js
mov
sub
std
pushl
fmulp
js
cmp
jge
mov
mov
mov
cmp
sbbb
clc
out
or
push
pusha
jle
call
jmp
inc
mov
push
sahf
or
or
std
fsubr
sbb
jns
fcomps
pop
je
repz
je
fsubs
pop
test
jne
inc
nop
sbb
popf
stos
mov
xchg
iret
sbb
dec
mov
cmp
in
mov
daa
cld
sub
inc
sete
adc
loope
xchg
add
mov
adcl
inc
mov
popf
shlb
jo
ret
scas
bound
dec
out
mov
pop
rcrb
sbb
add
insb
enter
or
mov
inc
fwait
mov
rcrb
dec
add
test
aad
adcb
loopne
clc
pop
push
push
js
cmp
rorb
lods
pop
pop
add
sti
push
dec
lock
loope
add
add
ret
pop
inc
sarb
push
push
push
xor
mov
jno
push
fwait
bound
mov
call
cld
jnp
insb
mov
fcoms
mov
lods
fnsave
aad
outsb
xchg
hlt
repnz
sbb
jae
daa
push
xchg
push
or
in
bound
mov
pushf
lret
add
jmp
mov
out
add
dec
outsl
in
out
mov
in
jl
enter
pop
pop
loopne
sbb
adc
clc
mov
mov
lods
in
adc
mov
test
lock
repz
in
cwtl
repnz
ja
fdiv
sbb
push
mov
and
push
dec
sub
sbb
popa
cmp
xor
or
stos
and
in
cwtl
rclb
cmpsb
cmp
cs
dec
orb
insb
xchg
jle
jge
push
ret
adc
daa
xor
mov
insb
sti
shlb
pop
or
adc
scas
cs
cmp
je
or
mov
jno
aaa
pop
xchg
rorb
sbb
popa
aaa
scas
dec
pop
inc
cmp
ret
sbb
cmpsl
adc
jle
clc
sub
movsl
adc
add
cs
cmp
rorb
hlt
add
push
jbe
test
clc
pushl
push
ret
dec
xchg
lret
xchg
rcrb
ret
push
add
and
sarl
mov
cmp
clc
outsb
lods
hlt
das
mov
in
jmp
aaa
hlt
mov
mov
or
jbe
or
push
push
add
push
outsl
or
xchg
rorb
popf
dec
jp
push
hlt
loopne
add
sub
jp
dec
mulb
xchg
mov
lahf
add
inc
in
jb
hlt
fwait
sarl
das
sub
jg
mov
xlat
addr16
out
ret
push
sbb
aaa
out
inc
lret
dec
in
cmp
clc
insl
adc
jp
in
or
mov
add
clc
fistps
or
sub
mov
js
mov
adc
test
add
push
xor
xor
pop
jg
loop
sbb
push
movzwl
sub
push
gs
je
cmp
cmc
rsqrtps
stos
push
lea
push
test
inc
icebp
and
in
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
and
sbb
mov
lcall
adc
cwtl
inc
insl
jo
pop
ss
push
push
fisttps
in
nop
sbb
es
adc
inc
cmp
dec
addr16
je
push
inc
dec
jmp
jl
dec
mov
adc
rcrb
jbe
mov
push
jge
dec
add
testl
cld
mov
out
adcb
cld
xchg
sub
and
inc
in
les
lret
in
jbe
mov
push
bound
scas
or
push
cmp
loopne
icebp
in
lea
andl
pusha
mov
xchg
pop
aas
orl
xchg
ss
addr16
cmp
out
add
add
lock
jne
inc
stc
xchg
pop
jp
xchg
dec
sub
hlt
test
inc
mov
xor
push
mov
mov
cltd
arpl
dec
xor
inc
in
or
push
cmp
cmpsb
notl
push
push
inc
and
je
sbbl
jno
pop
jo
pop
jns
cltd
jb
test
mov
cmp
mov
cmp
mov
add
popa
xchg
mov
mov
add
mov
push
sahf
inc
movsb
shrb
ljmp
ja
add
cmp
fildl
cmpsl
push
sbb
mov
fnstcw
icebp
mov
ljmp
inc
sbb
shrl
adc
popf
add
aam
adc
lea
pop
pusha
cmp
dec
leave
or
sbb
inc
pop
mov
inc
mull
xor
mov
xorb
mov
cmpsl
dec
mov
leave
sub
add
call
sarb
daa
push
adc
push
push
mov
fs
lock
mov
cmp
lret
sub
ja
mov
jl,pn
jmp
lock
cmp
or
icebp
dec
addb
cmp
fs
add
cmp
jmp
push
addl
fnstenv
scas
mov
push
mov
or
mov
les
push
xor
sbb
ret
dec
push
cmp
cwtl
movl
xchg
and
jb
mov
cmpsl
cmp
push
inc
adc
dec
sti
sbb
sub
mov
add
nop
sub
lods
or
ret
or
add
mov
mov
jle
push
lcall
ds
ja
adcb
or
add
rclb
ret
sbb
pop
imul
mov
sbb
inc
or
lcall
or
imul
sub
add
shrl
push
mov
adc
lds
cmpb
adc
test
pop
insl
test
sub
mov
jo
sbbb
sbb
fistps
sub
inc
adc
fnsave
add
arpl
lret
xchg
adc
pushf
out
sbb
or
iret
xchg
lock
push
setne
mov
pop
dec
jne
dec
cmp
das
xor
mov
cmpsb
sbb
push
add
adc
or
pop
jne
movsl
and
push
push
rcrb
or
push
icebp
or
shlb
and
xchg
nop
or
andb
and
add
pushl
imul
inc
int3
push
pop
sub
test
arpl
jnp
cmp
mov
and
pusha
or
jg
notb
sub
test
mov
cltd
dec
out
mov
jmp
mov
push
std
out
rcrb
xchg
push
fcoml
jmp
imul
and
nop
push
aad
or
mov
sti
test
aaa
adc
add
lds
and
negl
xor
push
pop
dec
jne
mov
sbb
ret
hlt
fwait
xor
push
add
call
idiv
daa
inc
hlt
mov
ret
nop
cmc
cmp
das
sub
or
in
dec
js
pop
pop
popa
outsl
cmp
int3
rol
cmp
sub
fldl
js
or
rclb
add
xlat
in
lea
loope
imul
adc
idivl
adc
icebp
mov
fistps
xchg
int
cmpsl
pop
pop
sbb
xchg
push
imul
dec
and
add
mov
pop
and
adc
push
xchg
pushf
jmp
add
rorl
adc
icebp
inc
jne
or
out
dec
sbb
rolb
inc
or
push
add
addb
sbb
rcll
dec
shr
dec
or
xor
mov
cmp
dec
enter
mov
or
xchg
mov
mov
ds
test
lock
test
inc
sbb
pop
jae
loopne
cmp
sbb
outsb
aas
or
xor
add
mov
fidivl
lea
mov
jp
add
cltd
hlt
pop
pop
mov
xor
sbb
mov
ret
cs
mov
push
fisubrs
xchg
adc
loop
add
shrl
lea
adcb
leave
sahf
xchg
rorl
or
insl
mov
push
inc
mov
frstor
adc
scas
ret
sbb
test
cmpsl
mov
scas
push
arpl
pop
pop
outsl
popa
add
xchg
fs
lock
add
dec
xchg
mov
cmp
push
ret
addb
add
lock
movsb
xor
scas
fdivrs
fucomip
add
sbb
test
add
push
adc
xchg
and
scas
in
loopne
movsl
jbe
and
push
in
mov
jo
jae
adc
xlat
pushfw
mov
fdivp
add
mov
add
push
rcl
or
incb
cmp
mov
pop
adc
pop
mov
mov
xor
mov
xchg
pop
lahf
mov
sub
cli
insl
sub
xchg
rcl
loopne
mov
ret
mov
mov
orl
sub
push
pop
add
or
or
jnp
jnp
pop
xor
mov
lock
pop
icebp
outsb
jecxz
inc
inc
add
inc
out
hlt
xor
xchg
das
ss
sub
push
orl
popa
cltd
dec
pop
add
cmp
jo
pop
or
xor
rorb
and
test
xor
push
lret
pop
lret
mov
lock
pushf
arpl
out
add
dec
sbb
push
enter
push
outsl
mov
xchg
cli
push
push
xchg
dec
push
mov
add
scas
je
rcll
mov
pushf
cld
dec
push
cmp
pushf
pop
xor
or
jns
sbb
fldt
push
bound
call
outsb
inc
insl
push
gs
test
push
sbb
push
jo
lock
jno
jns
xchg
js
xor
movl
mov
mov
mov
or
ds
add
cmp
repz
or
fiaddl
outsl
imul
pop
add
sub
loopne
sbb
dec
shrb
add
push
inc
pop
js
add
push
jne
inc
pop
dec
test
pop
mov
outsl
mov
inc
outsb
jecxz
mov
adc
pop
pop
sub
sub
jl
shl
mov
frstor
js
add
sub
push
roll
push
shrl
add
mov
bswap
fwait
loopne
mov
pop
pusha
xorl
and
xchg
and
popf
add
pop
jne
mov
loope
pop
call
stos
loopne
xor
and
push
push
or
dec
fadds
fldenv
cmpsb
pop
idivl
or
inc
and
aam
cmp
idivb
dec
faddl
enter
imul
pop
test
xchg
dec
pop
push
cmp
cli
push
mov
sub
je
adc
jmp
push
add
popa
imul
push
xlat
sbb
jnp
push
dec
xor
inc
or
sbb
movnti
sbb
mov
xor
or
rclb
ret
lret
push
jno
xor
mov
mov
jne
push
pop
cmp
je
push
in
mov
xor
pop
adc
cmpsl
adcb
sbb
clc
cwtl
xor
and
sti
push
xor
and
push
and
inc
and
pop
lea
adc
and
cmp
movb
and
pop
add
add
cmp
sub
es
pusha
xor
dec
push
test
lods
xchg
lock
inc
add
push
jge
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
push
xor
orl
gs
mov
loopne
sub
push
fcoms
aas
aam
mov
daa
das
mov
xor
das
loopne,pn
dec
pop
jns
icebp
dec
push
sbb
rcll
inc
mov
insl
push
aaa
jns
into
int3
xor
dec
mov
insb
dec
or
push
clc
cmc
dec
sahf
xchg
jge
jns
xchg
mov
adc
and
shlb
cmp
jae
repz
add
add
enter
stos
xor
add
pop
mov
or
mov
xor
add
sahf
xchg
lock
je
xor
push
dec
retw
rcrb
add
fldl
mov
sub
and
loope
jl
or
xor
out
add
mov
imul
ljmp
leave
mov
inc
adc
push
adc
js
and
push
lea
pop
and
fsub
jg
mov
insl
mov
loope
dec
insl
jne
jne
pop
sub
inc
into
test
push
cwtl
lock
adc
cmp
cmpsb
flds
scas
std
ror
sbb
in
out
loopne
sbb
mov
inc
movsb
dec
pop
or
dec
pop
pop
andl
movsl
aam
movl
xor
add
push
xchg
or
mov
pop
lock
jnp
or
ret
insb
and
jae
fisttpl
rclb
jne
jge
sub
into
in
int3
pusha
push
adc
pop
lea
loope
dec
ficompl
pop
das
sete
push
push
xchg
ss
je
xchg
xchg
lret
out
fwait
ss
push
pushw
mov
das
add
xlat
pop
xor
inc
cmp
push
inc
xor
add
add
and
ret
je
and
mov
cmp
pop
push
mov
mov
lods
dec
inc
add
bound
add
xchg
adc
mov
push
mov
push
sub
in
mov
sub
mov
mov
mov
add
sbb
in
lret
addr16
add
ds
sub
add
xchg
outsl
xlat
xchg
mov
mov
cltd
call
hlt
sub
push
arpl
int
jo
enter
jno
or
push
mov
push
jbe
jmp
mov
or
push
stc
sub
sub
sbbb
loopne
push
mov
xchg
mov
lcall
ja
add
adc
inc
or
fists
stos
into
dec
mov
shlb
adc
or
iret
pop
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
inc
outsb
push
add
mov
cs
pop
cmc
cmp
push
movzwl
mov
sbbb
sub
push
int3
push
inc
inc
ret
push
pop
add
mov
cltd
sub
dec
mov
pop
push
add
sti
enter
sub
aam
sbb
fldl
mov
xorb
inc
lock
fbstp
nop
mov
sub
inc
arpl
mov
je
or
cmp
enter
push
out
pop
jp
lods
xchg
ret
nop
pop
add
cmpb
push
add
add
push
ret
adc
shlb
and
lcall
cmp
sahf
dec
push
cmpsl
sbb
ja
push
arpl
lods
and
mov
dec
loope
clc
je
popl
clc
ds
adc
call
loopne
stc
sub
lea
push
lea
push
inc
push
dec
inc
out
add
cmpsb
imul
ret
cwtl
lcall
aas
push
cmpsb
dec
lret
cmp
jl
cmp
mov
hlt
int3
xor
sarl
icebp
sub
push
jle
push
add
icebp
jne
subb
negl
add
call
push
push
mov
adc
dec
arpl
test
out
lcall
cmp
je
sub
data16
mov
push
std
fstpt
xor
add
fldenv
xchg
test
adc
push
sar
rcll
pop
sub
jmp
sub
adc
push
mov
lahf
in
xor
xor
fldcw
shlb
clc
fisttps
js
dec
or
in
xor
out
sub
and
insl
enter
or
mov
cli
adc
test
add
inc
call
pop
and
cmp
insb
ja
pop
fs
loopne
repz
clc
std
push
lahf
idivb
scas
out
lock
clc
xorl
add
or
jae
cs
dec
mov
jl
sub
jbe
popf
test
add
cmp
inc
or
movhps
mov
jb
neg
cwtl
fwait
subb
pushf
sahf
jecxz
js
sub
js
push
hlt
dec
or
ret
out
rcrb
ljmp
test
mov
dec
add
inc
pushf
aaa
nop
scas
push
push
test
mov
push
add
sbb
xor
dec
or
sbb
jbe
adcb
dec
push
add
dec
sub
mov
jecxz
mov
sbb
clc
scas
xor
test
out
pusha
loop
inc
outsb
inc
aaa
shr
push
pop
and
leave
add
aaa
push
pop
or
or
in
fldl
cmp
test
rcr
cmp
cmpb
push
ss
xor
push
cmp
je
push
jg
or
mov
and
and
inc
dec
push
jle
scas
add
pop
repnz
ret
cmpsl
div
stos
adc
popa
adc
dec
stos
test
mov
xor
push
fisubrs
jmp
jl
ret
sbb
shlb
jmp
mov
jno
cmp
push
inc
cmp
jae
sub
add
push
insb
cmp
inc
rolb
sahf
mov
jmp
ret
cmpl
cmp
test
xor
ja
lea
jle
fcmovnb
cmp
aaa
cltd
sbb
dec
mov
pop
cld
rorb
mov
sub
ljmp
lods
inc
dec
jns
pop
sub
fildl
lret
mov
pop
xchg
xchg
dec
or
adc
xor
jae
pushf
add
jo
jl
or
adc
inc
cmp
or
div
orl
cmp
jbe
dec
and
xchg
fsubrs
sbb
xor
orb
adc
outsl
stos
cmpsb
rclb
sub
push
push
or
dec
adcb
mov
hlt
inc
xor
addr16
or
mov
mov
fsubrs
cmp
movl
xor
imul
imul
mov
decl
test
jo
push
mov
cmp
je
xchg
jmp
push
push
or
xchg
pop
lret
mov
push
mov
jecxz
clc
cmc
sti
je
insl
sbb
xchg
xchg
ret
and
push
rolb
jle
push
sbb
inc
push
jl
inc
push
fsub
mov
dec
rcll
lock
sub
dec
cli
cmp
adc
std
js
push
push
sub
adc
pop
mov
push
test
in
inc
or
ret
rorl
jmp
and
or
sub
inc
or
or
bound
test
inc
insl
push
in
jbe
lock
jbe
pop
fdivrl
ficoml
add
mov
mov
orl
or
out
jne
test
mov
adc
push
push
je
inc
insb
fcompl
jno
add
xor
pop
inc
pop
icebp
jne
daa
push
lcall
and
dec
arpl
pop
mov
and
mov
lds
loopne
mov
insl
and
jmp
lret
addr16
mov
mov
mov
faddl
and
mov
in
push
nop
test
or
out
jbe
loope
push
or
and
jle
adc
xor
dec
iret
ret
mov
or
ja
andl
bound
lock
xorl
int
xchg
sub
les
or
dec
arpl
adc
dec
pop
inc
adc
idivb
push
inc
fstpt
test
cmp
push
pop
add
mov
dec
jmp
insb
shrl
jbe
dec
inc
push
and
aaa
adc
movsb
outsb
iret
adc
js
jl
adcl
xor
in
add
mov
popf
xor
mov
push
add
sbb
sbb
movsl
or
pop
andl
add
xor
pop
mov
fisttps
push
pop
cmc
dec
pop
mov
push
or
pop
xchg
pop
sub
enter
push
je
jo
add
pop
popf
push
dec
dec
outsb
pop
fs
cmp
sub
in
gs
add
jmp
mov
pop
das
dec
mov
ret
insb
or
lods
cld
adc
mov
jno
lods
or
mov
mov
add
mov
or
js
test
push
add
jne
fsubrs
sub
lock
jg
or
dec
adc
insl
mov
mov
add
movsl
or
push
jmp
je
mov
sbb
or
cwtl
arpl
pop
cmp
mov
fdivs
stos
test
ss
addb
add
sbb
or
mov
popf
dec
pop
dec
loopne
ja
mov
inc
shll
mov
jmp
mov
orb
loopne
jae
add
loope
pop
ldmxcsr
lods
mov
pop
and
mov
mov
fwait
cmc
adc
rdmsr
dec
cld
lea
fldl
mov
leave
and
push
sbb
push
and
xor
push
and
adc
mov
aam
mov
xor
add
cmpl
dec
fcmovnbe
push
cmp
push
cmp
mov
pop
push
loopne
js
ret
pop
repz
test
mov
jae
ds
mov
xlat
ljmp
xor
arpl
js
push
push
fcompl
adc
and
lret
or
push
dec
shrb
insb
xor
inc
mov
or
sub
push
mov
sarl
shll
bswap
lea
jg
outsb
jle
jae
pminsw
movsb
hlt
enter
int3
outsb
add
clc
adc
enter
pop
mov
cld
push
dec
xor
js
loope
inc
gs
mov
add
cmp
aaa
cmp
je
sbb
jmp
hlt
dec
shll
xor
test
sbb
mov
addr16
je
inc
sbb
and
pop
cmp
or
sbb
xor
jbe
sahf
js
push
inc
or
or
push
int3
mov
fldl
stos
aas
pop
sub
add
lea
inc
xchg
jnp
push
cs
sbb
cltd
sbb
dec
add
insl
aaa
xor
lds
dec
inc
mov
loop
aas
inc
sub
jns
rolb
das
movb
and
inc
or
mov
push
insl
xchg
fnsave
mov
add
and
sub
clc
add
js
xchg
faddl
add
pop
or
out
add
lcall
mov
inc
or
dec
scas
jb
and
pushf
sbb
sbb
xor
int
sbb
add
addr16
or
sub
fdivr
faddp
sbb
inc
xchg
jo
mov
or
xchg
test
inc
inc
push
add
pop
cmp
lcall
dec
pop
inc
outsl
shlb
inc
pop
sub
and
adc
pusha
jb
sbb
cmp
jecxz
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
mov
inc
jg
stos
mov
mov
push
testl
pop
and
das
pushl
mov
fiadds
repz
adc
aas
test
push
into
adc
sbb
jne
mov
inc
jne
push
mov
jb
mov
sbb
or
add
iret
push
inc
sub
ret
sbb
mov
arpl
fimull
xor
aad
push
retw
test
push
popa
imul
and
push
in
push
dec
sub
lcall
dec
and
push
cmp
sahf
pop
stos
mov
adc
dec
sar
js
adc
dec
fildll
in
mov
cmp
jnp
inc
hlt
lea
push
rolb
ss
ds
pop
mov
jne
adc
pop
stos
sbb
cmp
dec
hlt
add
push
imul
in
int
fadd
inc
pushl
lret
dec
push
out
pop
or
inc
adc
movsl
mov
cmc
jp
stos
mov
or
aam
and
push
out
jo
push
xlat
enter
fnsave
push
test
sub
les
add
ficoms
mov
outsl
pusha
jo
inc
insb
jmp
mov
out
or
loope
outsl
movb
hlt
enter
mov
inc
pop
xchg
jl
push
mov
sub
inc
push
test
mov
sbb
in
pop
mov
nop
mov
add
clc
or
add
loope
shl
mov
test
xor
jns
mov
and
in
xor
and
mov
sahf
jo
notl
mov
push
loope
mov
push
stos
je
mov
dec
push
je
xchg
sarb
test
fdivrl
daa
insb
xchg
add
int3
and
movsb
fsubp
jle
ret
push
xor
push
lea
outsl
xor
jle
push
inc
push
idivb
push
cmp
inc
mov
aam
ljmp
bound
clc
cmp
mov
aam
clc
popf
mov
out
inc
add
in
jmp
cltd
xchg
mov
or
inc
cwtl
cmp
dec
stos
ss
and
incb
pusha
enter
push
clc
out
iret
dec
cmp
sub
cld
inc
push
and
test
sbb
mov
lret
mulb
pusha
and
adc
mov
mov
test
lock
mov
cmp
sti
add
xchg
mov
jge
push
pop
adc
mov
mov
fstp
pop
sbb
gs
mov
addb
aam
mov
adc
iret
ss
sub
add
xor
push
arpl
inc
push
cmp
movsb
dec
mov
add
or
les
add
xorb
adc
pusha
and
xor
mov
nop
sti
shrb
push
filds
mov
or
loop
push
pop
clc
aas
dec
rcrl
sub
jno
lds
test
sbb
sub
addl
cmp
push
jmp
js
dec
loopne
es
cmpb
movsb
pop
in
mov
inc
cmpsb
mov
pop
dec
or
out
and
orl
push
push
ret
bound
je
ror
and
jb
popa
mov
inc
mov
cmp
or
add
ret
or
jp
adc
lahf
cmp
pop
pop
adc
push
das
or
out
xor
dec
add
loopne
or
adc
adc
imul
pop
dec
and
inc
push
cld
sub
inc
icebp
add
pop
das
lods
mov
andl
push
mov
sbb
add
or
sbb
cmp
into
and
aas
xor
lods
gs
cmp
pushf
adc
rorl
outsl
jle
cmp
jae
pop
push
xchg
sbbb
jno
fsubr
aam
out
add
xor
pop
sbb
std
sub
lock
push
mov
cmp
pop
test
ljmp
mov
mov
jns
loopne
rclb
dec
insb
push
push
push
sti
adc
cmc
addr16
je
sbb
subps
sahf
popa
cmp
das
sub
roll
cli
cltd
mov
push
dec
out
mov
xor
inc
add
movsl
jge
aam
movsl
cltd
push
pop
aam
push
sbbl
add
aaa
fldl
add
pop
shrl
pop
jmp
aaa
sub
inc
mov
lods
stos
lods
or
orb
or
adc
xchg
stc
je
adc
sbb
dec
push
pop
adc
and
or
pop
pop
sub
orl
mov
mov
fnstenv
xchg
enter
sub
or
enter
fdivrl
xchg
jbe
push
inc
dec
cmp
mov
fwait
xor
xchg
sahf
ljmp
add
insb
shlb
les
add
data16
inc
or
jb
sbb
mov
sbb
fcompl
inc
xchg
cs
push
or
sub
push
cmp
cwtl
inc
xor
rcl
and
push
push
inc
dec
pusha
xchg
fsubs
pop
push
lea
mov
jge
pusha
aad
hlt
mov
jecxz
xchg
lret
in
dec
add
inc
add
adc
sbb
xchg
and
adc
xorl
mov
loopne
add
dec
int
aad
leave
icebp
scas
pop
xlat
dec
in
jno
cs
pop
pop
cwtl
lea
mov
inc
xchg
dec
and
sbb
mov
imul
mov
bound
out
or
pop
mov
jl
jl
js
add
leave
and
leave
daa
call
dec
out
dec
mov
xor
ds
mov
mov
dec
andl
jge
cmp
mov
cmp
mov
jno
shl
in
or
shl
pop
mov
cmp
mov
out
lods
subb
or
scas
mov
adcl
and
mov
fdivrl
xchg
into
mov
inc
cvttps2pi
dec
cmp
je
jmp
call
cmp
cmp
push
add
mov
push
popa
or
xor
out
and
mov
mov
cmpsl
xor
and
shll
out
popa
add
add
call
je
jg
outsb
mov
rcrl
jmp
push
jae
dec
stos
in
pop
sbb
lods
addl
shll
cmp
rcr
rolb
dec
xlat
scas
sub
popf
jb
adc
sbb
ret
push
sbb
mov
mov
movl
and
aaa
sbb
bound
xor
push
or
jmp
popa
add
sub
adc
add
jge
and
adc
in
xor
mov
push
fbld
fiadds
add
ss
mov
shl
jno
inc
mov
scas
fistpl
jecxz
sub
cld
mov
and
je
dec
jne
pusha
dec
or
adc
mov
xchg
shr
and
xchg
stos
test
jmp
push
pop
push
insb
and
out
add
int
mov
das
jl
sbb
pop
mov
cmp
outsb
loopne
je
mov
xor
test
sub
mov
das
adc
cmp
jge
sti
andl
adc
or
imul
jae
jo
test
bound
idivl
sti
jne
mov
lea
cli
jb
adc
or
push
test
dec
or
outsb
mov
jmp
lea
lret
mov
incl
pop
ja
xchg
ss
sub
je
mov
dec
orl
add
dec
push
pop
out
pushf
sub
jge
std
test
jno
push
pop
loope
ret
andl
mov
xchg
nop
es
inc
sbb
pop
fs
jnp
pushf
test
bound
lret
test
add
jg
movsl
shll
push
cmp
testb
add
movsb
dec
lock
xor
ds
je
addr16
ds
rorb
pop
mov
ret
xor
cmpsl
mov
mov
sub
lock
int3
or
call
repnz
pop
push
in
and
cmp
lcall
or
icebp
cmp
inc
pop
or
add
xchg
in
fldl
push
push
lods
adc
int3
xchg
ret
aaa
push
ja
ljmp
jmp
cmp
cmpsl
lods
mov
je
aaa
js
roll
dec
add
or
adc
lcall
jmp
pop
int3
ret
xchg
adc
jp
pop
dec
xchg
jmp
add
lcall
popa
and
xor
fnsave
packsswb
pop
vpshaq
push
pusha
xorb
adc
insl
inc
mov
inc
fnstcw
pop
and
pop
push
or
add
roll
adc
xor
sbb
push
fists
cmp
and
push
or
adc
adc
push
sbb
subb
popa
mov
and
pusha
imul
jae
adc
jbe
les
mov
mov
adc
or
add
movl
mov
fcmove
add
inc
adc
push
and
sub
xor
dec
sbbb
mov
inc
dec
push
imul
imul
push
mov
pop
mov
mov
ret
push
adc
repz
dec
pusha
movsb
inc
adc
mov
nop
sbb
scas
and
shlb
jg
ja
jge
adc
mov
or
sbb
adc
fdivrs
insl
xchg
notb
pop
nop
out
out
add
inc
jno
lods
inc
ret
and
xor
pop
xor
sub
popf
pop
mov
mov
loope
mov
mov
nop
les
adc
xor
add
adc
inc
sarl
mov
ffreep
sahf
loope
ss
mov
sub
andb
mov
dec
js
xor
mov
or
mov
daa
fistpll
insl
or
mov
ja
orl
sbb
sbb
or
dec
clc
mov
xchg
cmp
cmp
je
push
mov
xor
es
cmp
movsb
xchg
push
stos
push
sub
dec
push
fisubrl
lods
or
fdivrl
inc
lods
loope
insb
inc
mov
inc
inc
push
cltd
pop
or
sub
and
or
mov
inc
std
pusha
lds
pop
or
and
mov
je
mov
xor
cmpl
mov
or
pop
and
mov
dec
imul
gs
iret
sub
pop
pop
mov
push
daa
inc
jmp
repnz
push
add
mov
das
add
addl
add
into
ret
aaa
stos
ret
faddl
das
jl
sub
les
mov
inc
movsb
pop
xor
popf
pushf
in
js
and
push
mov
loopne
cmpsb
mov
mov
subl
pop
xchg
int
movb
push
inc
pop
adc
mov
mov
sbb
push
mov
inc
dec
clc
jo
fcoml
mov
jbe
cmp
mov
dec
aam
dec
or
mov
dec
inc
or
or
sub
push
ret
pop
push
test
in
cmp
pop
adc
and
add
add
sub
data16
lea
cli
sbb
inc
sbb
adc
adc
sbb
fsubrl
push
lods
test
or
sub
outsl
ja
cld
mov
xlat
inc
pop
and
cmp
sbb
dec
cmp
cmp
mov
cmp
adcl
mov
test
vhaddpd
daa
pop
std
push
test
mov
xchg
push
dec
mov
jle
call
lock
dec
mov
idivl
push
outsl
inc
sti
pop
xchg
mov
and
mov
aas
fists
int3
aas
daa
xchg
sub
insb
cmp
pop
rorl
in
sub
lods
xor
in
shrb
aad
gs
push
out
aad
lret
inc
add
fstps
add
movsb
mov
xor
cmpsb
mov
xchg
cmp
stc
add
in
xchg
lods
push
dec
and
sbb
test
add
pop
and
jl
in
mov
inc
sub
enter
jl
pusha
add
push
or
fsts
aaa
mov
inc
and
push
fidivrs
sub
pop
in
pop
and
mov
je
or
xchg
push
xchg
adc
pop
sbbb
cmp
dec
addl
xchg
imul
pop
orl
xchg
sub
pop
or
xchg
push
dec
add
lret
mov
fwait
adc
loopne
in
in
push
nop
popf
mov
xchg
inc
sahf
inc
or
xchg
dec
pop
add
sti
movsb
jb
and
xchg
std
aas
movl
jns
inc
pop
mov
xorb
xchg
inc
push
adc
xchg
sub
push
dec
shrl
xchg
or
mov
dec
sbb
jb
gs
push
imul
movsb
arpl
pop
push
sub
or
insl
aad
and
nop
inc
ljmp
gs
xor
rolb
mov
or
cltd
add
pusha
mov
mov
or
cmp
scas
sti
and
push
cs
mov
sub
push
mov
cld
fldcw
test
pop
cltd
adcl
and
sub
jge
mov
cmp
and
mov
jmp
test
mov
inc
sub
xor
scas
nop
pop
xor
xor
pop
xor
sbb
enter
xor
andl
rol
inc
pop
or
popf
pop
inc
push
movsb
mov
adc
sbb
sub
jno
or
pushf
inc
aaa
ss
adc
or
test
and
cmp
out
dec
xor
les
mov
jno
in
cli
jp
push
stos
adc
out
je
xor
movb
lock
sub
fdivl
or
movsb
outsl
das
or
lea
orb
and
stc
push
roll
inc
ss
inc
not
mov
or
icebp
adc
add
push
movsl
outsl
mov
rcrb
sub
or
dec
cmp
adc
cmp
jns
mov
pop
repz
stc
cmpsb
adc
dec
sub
lods
lods
add
cmp
mov
mov
push
cmp
add
lret
push
cmp
cmp
or
mov
pop
inc
push
and
jnp
movsl
cmp
cmp
jmp
sbb
loope
dec
fstl
jbe
cmp
mov
dec
testl
mov
push
jo
push
sub
lahf
nop
addl
adc
flds
lock
inc
pop
fists
je
add
mov
sbb
je
ljmp
ret
mov
pop
push
jns
push
xor
lea
sub
lahf
loop
lea
dec
cs
inc
repz
call
adc
mov
xor
inc
subb
push
xchg
es
jne
or
pusha
and
arpl
jnp
dec
je
flds
xlat
negb
imul
lcall
shl
cmpsb
xchg
cld
dec
push
dec
xchg
or
push
das
adc
ljmp
je
testl
lea
mov
mov
aad
mov
and
ret
or
or
add
mov
dec
aaa
sbb
iret
fists
dec
int3
mov
push
push
mull
js
mov
cwtl
jb
mov
sub
js
and
lret
in
cmpsb
push
in
fadds
fs
test
pop
daa
inc
xchg
cwtl
cmp
mov
cmp
cs
xchg
in
divb
mov
jne
inc
or
pop
daa
adc
jmp
adcb
pop
aam
xchg
roll
push
pop
jge
rcrb
xchg
testl
push
in
pop
aam
push
cmpsb
or
mov
ss
adc
das
inc
and
jle
mov
hlt
cs
mov
scas
test
jno
and
mov
xor
lods
shl
aam
pop
lcall
sarl
pop
mov
pop
mov
adcb
push
sbb
push
into
pop
imul
mov
loope,pn
lds
pop
cmpsl
push
loopne
lahf
sbb
xchg
mov
inc
out
lea
mov
les
inc
xor
scas
int
pop
sbb
push
sbb
inc
cs
enter
and
loopne
add
sbbl
and
mov
ss
iret
dec
and
sbb
and
and
pop
sbbl
orl
pop
sub
xor
daa
adc
sub
daa
stc
xchg
inc
nop
pop
and
sub
mov
adc
sub
dec
test
or
pop
sub
nop
lret
sub
loop
mov
insb
inc
mov
push
cmp
mov
push
push
and
scas
mov
inc
imul
mov
pop
das
inc
fimull
in
jae
jecxz
dec
mov
push
xchg
mov
dec
pop
add
and
cmp
outsl
jle
dec
mov
movsb
cltd
fcoms
adc
movsb
mov
fadds
lcall
mov
inc
or
dec
sbb
or
lea
fsubl
movsb
dec
dec
repz
adc
and
or
add
add
xchg
inc
add
or
and
xor
cmp
xchg
dec
test
enter
das
adc
sbb
ret
and
hlt
in
insb
adc
jb
pushf
subb
pop
mov
in
jmp
insl
sub
test
adc
dec
fisttps
xchg
js
insl
and
pop
lcall
pop
dec
int3
pop
lock
mov
push
sbb
add
adc
andl
test
aaa
aam
lahf
mov
sbb
in
clc
ficompl
jbe
push
add
inc
add
into
fsubrl
sbb
jl
ret
shll
add
fsts
pop
adc
push
lock
push
cwtl
jne
in
inc
fadds
stos
jo
add
ret
movsl
fiaddl
aaa
cmpsl
xor
je
cmp
int3
out
mov
hlt
dec
sub
or
movsl
dec
mov
pop
push
pop
push
xor
pop
mov
push
dec
adc
push
adc
inc
test
adc
xor
loop
dec
call
xor
pop
les
inc
test
fs
loopne
push
push
icebp
or
js
jno
mov
lods
lock
or
sbb
adc
or
imul
cmp
add
push
push
xchg
test
or
je
shl
imul
jecxz
add
xor
arpl
push
inc
icebp
sbb
int3
lcall
add
stc
inc
add
xchg
dec
add
ja
xchg
pop
push
je
daa
xchg
inc
call
xor
and
call
adc
push
mov
jnp
cmp
push
dec
es
into
inc
aad
push
aam
push
shll
enter
sbb
je
jmp
int
enter
push
les
xlat
xchg
add
mov
inc
xor
shrl
orl
fidivrs
hlt
cmp
xchg
push
add
ja
add
xor
cmpb
ljmp
push
cld
push
addb
inc
adc
cltd
dec
faddl
cld
pop
aaa
mov
clts
repnz
jecxz
loopne
add
sub
pop
adc
repnz
es
push
pop
mov
inc
jne
push
loopne
std
pop
mov
sarb
jge
mov
or
imul
xchg
add
add
aaa
add
add
and
les
push
push
sub
mov
andl
xchg
ud2
rol
and
in
pop
pop
add
push
fists
movsb
dec
iret
adc
mov
sbb
in
lods
add
loopne
dec
adc
mov
movsb
mov
sahf
lods
adc
mov
adc
inc
jmp
mov
sub
aam
mov
xchg
adc
int
pusha
sbb
adc
jae
mov
lret
and
cmp
jle
clc
cs
sbb
adc
pop
les
lea
hlt
inc
pop
repnz
cltd
inc
ret
xor
xor
or
leave
daa
mov
in
cli
das
sbb
aam
add
inc
in
sbb
and
dec
or
cmpl
inc
xlat
mov
sbb
push
inc
jmp
mov
shlb
xchg
bound
test
add
adc
pop
xchg
push
mov
xchg
fists
addl
mov
inc
add
shll
inc
and
fstps
sahf
push
pop
mov
add
nop
sbb
movsb
sbb
stos
mov
sbb
pop
inc
sar
cmp
nop
mov
mov
or
mov
pop
sbb
mov
pop
sub
mov
mov
adc
mov
mov
sbb
les
rcr
cwtl
cmc
nop
pop
lods
lcall
lods
pop
call
dec
xor
xchg
ret
push
test
and
xor
jo
cmc
or
jmp
mov
jb
out
faddp
add
ret
test
mov
cmpsl
or
sbb
pop
mov
in
inc
or
sbb
jg
loop
enter
jae
inc
add
outsb
mov
loopne
outsb
loope
sbb
and
loopne
ret
pop
adc
cmp
sbb
ficomps
or
faddl
outsl
enter
adc
push
mov
and
add
insl
pop
sbb
lret
jp
cltd
add
adc
lock
roll
out
mov
dec
inc
aaa
add
xor
mov
repnz
sbb
pop
inc
ds
dec
sub
push
inc
arpl
add
push
les
fs
stos
pop
cwtl
sub
cmpl
movl
xor
cmp
mov
fsubrs
cmp
orl
js
mov
or
leave
pop
bound
push
ds
sbb
inc
inc
in
jbe
add
lea
test
mov
aam
mov
dec
pushf
fmull
or
jb
pushf
or
das
or
sbb
lret
adc
cmc
xchg
and
jmp
scas
fadds
movsb
adc
cmp
or
push
add
shlb
dec
add
sar
orb
dec
andl
or
cmp
and
movsl
imul
and
lea
or
dec
out
adc
or
add
cmp
popf
movzbl
loop
add
dec
sbb
cs
subl
xor
adc
mov
rorb
addb
inc
or
sub
jb
xor
inc
mov
xor
mov
xor
inc
mov
outsl
inc
dec
popf
in
sti
in
pusha
xor
addl
inc
or
jb
mov
or
sbb
xchg
push
adc
sbb
mov
inc
lea
das
pop
dec
push
popa
dec
loope
inc
inc
ja
sub
inc
lret
call
jo
cwtl
je
inc
imul
push
ficoms
mov
loope
enter
mov
mov
inc
dec
popl
imul
insl
clc
rolb
daa
std
sbb
loop
int
pop
adc
in
popf
cltd
and
or
mov
movsl
and
mov
mov
and
push
rclb
pop
cmp
aaa
sti
sbbl
pop
push
push
sbb
cmc
mov
mov
mov
sbb
sub
ret
jo
ret
je
sahf
incl
rolb
lds
iret
leave
push
jcxz
pop
fdivr
inc
xchg
ret
inc
sbb
rorl
dec
cmp
push
push
sbb
loope
adc
add
hlt
or
je
testl
rol
xor
push
sub
cmc
dec
test
sbb
and
inc
stc
test
int
cmp
sub
les
icebp
dec
bound
and
add
test
ja
dec
sub
push
adc
xor
pop
repnz
lods
cmp
cmp
ja
push
inc
mov
in
dec
adc
sub
add
fistpll
int
or
into
mov
inc
xchg
jp
or
dec
popa
aas
pop
or
xchg
sahf
shld
inc
lea
fcoml
in
aam
fimull
sbb
or
sub
xor
inc
js
fidivrl
and
fidivrl
adc
ficoml
xor
xchg
and
nop
imul
or
out
adc
cwtl
or
push
out
cmp
cld
mov
adc
or
xor
lods
add
mov
sbb
enter
add
adc
add
adc
add
xchg
or
lret
cmp
bound
add
loope
adc
sub
je
cli
push
adcb
hlt
jno
or
sbb
add
subl
sbb
sbb
push
jmp
inc
push
mov
add
push
mov
xor
push
cmp
lcall
dec
add
xchg
add
in
ret
push
ds
add
and
pop
cmp
xor
lods
and
insb
xor
xor
fstps
ds
mov
imul
js
xchg
outsl
movsl
cmp
or
push
movl
cwtl
or
add
or
push
repz
mov
flds
movsb
xor
loop
arpl
xor
scas
push
sub
sbb
xorl
xchg
jge
and
or
sbb
xchg
cmc
loopne
mov
dec
fsubrs
xor
jmp
jo
dec
xor
xchg
jns
push
ljmp
cmp
pop
xlat
xor
mov
jle
or
cmp
xlat
mov
cmp
xchg
insb
jo
push
adcb
mov
sti
push
and
mov
into
add
outsl
int
cld
inc
sub
xor
sub
fs
outsb
or
int
int
dec
add
and
add
inc
sbb
out
push
cwtl
xchg
adc
jecxz
jne
dec
sbb
dec
add
mov
aam
loopne
sbb
lock
stos
inc
ret
or
sub
sub
call
inc
cmp
and
stos
sbb
rorb
add
mov
popa
jno
inc
pop
push
in
mov
cmp
mov
pusha
inc
test
mov
clc
mov
scas
or
add
sbb
or
mov
dec
jmp
enter
xchg
bound
popa
dec
mov
cld
or
add
xchg
inc
inc
add
and
jo
scas
orb
in
or
jnp
lods
in
adc
test
jle
daa
push
and
dec
sub
inc
xchg
test
add
popa
xchg
sar
out
push
push
sub
lods
iret
push
fsincos
sarb
jge
mov
sub
xchg
push
sub
mov
mov
test
test
jns
test
jb
xor
xchg
or
dec
dec
in
cmp
or
xor
lea
add
lcall
push
dec
cli
sbb
test
mov
sbb
roll
inc
dec
frstor
shrl
adc
mov
aas
ret
sbb
inc
jmp
mov
and
push
push
xor
cmpsb
push
add
lds
push
lods
dec
sbb
sbb
leave
movsl
mov
push
negb
pop
add
popf
imul
mov
push
push
dec
mov
xchg
icebp
sub
dec
cmp
sbb
arpl
jle
addb
js
movsbl
call
jno
jne
jae
pop
sub
je
or
je
adc
fwait
dec
and
dec
inc
insb
arpl
push
push
das
mov
hlt
mov
cmp
lret
inc
hlt
mov
hlt
push
inc
xlat
call
rolb
pop
dec
ds
inc
je
push
cltd
insb
aas
cmp
pop
js
je
lret
in
adc
lret
insl
jo
fs
mov
daa
sbb
lock
cmp
xchg
sub
pop
cmc
cmpsl
aas
lea
lock
fwait
push
in
mov
sub
mov
sbb
ss
fwait
push
xor
add
and
subl
lcall
scas
push
xor
pop
es
iret
xor
adc
mov
fwait
and
sub
mov
sbb
inc
and
lock
sub
xor
push
inc
or
jecxz
or
mov
cmp
xlat
push
and
mov
faddl
out
dec
lods
cmp
pop
xchg
sub
push
add
pop
or
xchg
pushl
push
push
ja
in
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
scas
insl
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jo
adc
add
or
sub
push
or
and
xor
adc
pmulhuw
pop
xchg
cmc
inc
mov
mov
sbb
xchg
das
push
inc
test
inc
pushf
lcall
les
xor
sti
icebp
adc
loop
xchg
icebp
pop
dec
sbb
inc
test
clc
xchg
xor
or
inc
push
mov
lods
adcl
xor
call
cmc
mov
stos
mov
leave
daa
or
or
adc
andb
les
push
lea
lret
mov
add
outsb
mov
mov
add
xlat
or
fisttps
ret
add
pop
fabs
xchg
test
jne
arpl
mov
cmp
arpl
pop
repnz
shr
loop
xchg
nop
lret
lret
jb
push
add
mov
icebp
ret
iret
dec
mov
mov
jnp
add
movl
sbb
gs
pop
dec
js
int
rorb
mov
shrd
out
rolb
andb
std
inc
adcb
sub
popl
rclb
mov
pop
arpl
adc
mov
dec
test
jae
and
pop
adcl
neg
and
sbb
dec
decl
or
adc
mov
movl
add
aas
push
jnp
imul
pop
add
mov
push
jne
outsl
les
int3
shr
xor
leave
popa
add
adc
add
mov
dec
dec
pop
nop
stos
es
ret
mov
sub
mov
adc
sbb
sub
ss
jge
add
movsl
jo
in
in
adc
sub
loopne
movsb
pop
popa
add
add
rcrl
xchg
add
or
pop
pusha
inc
aas
out
and
js
adc
push
and
aam
hlt
adc
aaa
dec
insb
sub
sub
dec
loopne
aam
clc
sub
cmp
decl
push
clc
push
add
push
push
push
push
mov
mov
int
ret
sbb
and
add
aam
movsb
icebp
cmp
mov
mov
nop
call
sub
push
popa
rolb
inc
push
cmp
adc
rol
jne
mov
add
adc
mov
or
lea
mov
int
mov
jb
les
and
test
loopne
push
push
push
adc
popf
jge
sbb
mov
adc
fcmovb
into
xor
sub
cs
mulb
jne
cld
jmp
push
aam
insb
shrl
test
xchg
jnp
jno
js
cmp
movsl
ficoml
pushf
jmp
push
inc
cwtl
ror
cmp
push
mov
dec
shr
jae
scas
push
mov
inc
add
in
pop
add
cwtl
cld
mov
lods
fnstsw
mov
mov
push
pushf
cmp
jle
rcrb
cmp
js
add
xor
out
sbb
jbe
js
cwtl
shll
jle
jle
jge
cmp
sbbb
sbb
push
xlat
xor
jo
mov
inc
adc
jno
cli
addr16
jae
stos
ds
pushl
add
push
es
lahf
pop
popa
push
sub
sub
adc
pop
add
add
mov
mov
into
or
push
add
scas
adc
push
stos
jo
cwtl
xor
mov
cwtl
pop
enter
push
inc
in
popl
adcl
test
push
push
je
adc
pop
pop
mov
rcll
mov
mov
pop
dec
jmp
shll
fidivs
cmp
sti
in
adc
sti
movsl
mov
jno
jne
ret
jb
or
ja
idivb
or
push
adc
adc
imul
inc
faddl
mov
sbb
mov
dec
add
lea
cwtl
or
mov
add
mov
inc
add
hlt
jg
push
es
or
pop
push
adc
cmp
outsb
int
jo
es
shr
cld
jb
mov
mov
movsl
iret
push
push
lds
or
stos
fcoms
xchg
cmp
das
sbb
cmc
imul
and
les
mov
in
push
jg
jecxz
dec
enter
lods
xchg
cmp
pop
sbb
push
rcl
and
dec
stos
je
sbb
adc
in
push
int3
mov
lods
ret
pusha
sub
inc
add
test
outsl
mov
add
xchg
mov
xlat
push
scas
add
pop
dec
pop
sub
and
ret
shlb
adc
and
lahf
add
cmp
je
push
int3
pop
jl
and
push
popa
adc
cld
pushf
ficoml
jmp
addr16
je
push
push
and
add
mov
lret
push
or
sbb
pushf
stos
mov
mov
adc
insb
cmp
pop
cmp
ret
push
sbbl
adc
aam
add
test
fs
imul
push
out
jno
add
incb
pushw
push
and
mov
pop
push
inc
mov
lods
push
mov
nop
lret
mov
scas
scas
add
aam
xchg
sbb
clc
add
pop
repnz
mov
mov
pop
push
in
into
sbb
push
popa
xchg
mov
in
shll
fcmovnb
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
sbb
and
ret
mov
xchg
ss
stc
add
mov
pop
js
loope
inc
shrb
pusha
test
mov
mov
and
adc
fs
jle
add
subw
out
cmp
cmp
sbb
cmpb
or
mov
push
pop
add
ss
push
fistps
sub
mov
add
sar
into
out
sub
jle
je
jbe
xorb
jns
adc
cs
sub
pop
jns
sub
pop
test
adc
inc
cmp
add
aad
pop
fwait
mov
clc
orl
testb
jl
sub
jmp
fstpt
nop
decl
mov
pop
cmpl
push
adc
rorl
repz
cmpsl
add
testb
icebp
cmp
aas
out
add
daa
sahf
sub
fcmovb
mov
and
fildll
popa
bound
xor
jae
enter
sbb
mov
push
add
cmpsl
cs
xor
ds
mov
pop
and
pop
and
enter
inc
bound
hlt
jne
jb
xchg
mov
dec
push
outsb
insl
inc
xlat
cmovg
pop
dec
pop
push
pop
push
fmuls
jo
pop
andl
and
lea
adc
xor
or
insl
add
faddp
pop
adc
sbb
mov
je
mov
movsl
adc
push
imul
jns
push
push
icebp
inc
out
or
and
sbb
push
pop
pop
push
pop
cmp
lea
outsl
fisttpll
pusha
and
cmc
movsl
push
orl
jne
xorb
mov
pop
dec
loopne
adc
mov
ret
cmpsb
call
inc
xor
xor
lock
cmp
mov
adc
stc
mov
adc
pusha
adc
mov
mov
add
es
inc
iret
mov
ss
and
pop
lcall
das
in
leave
in
add
mov
cld
test
lock
jmp
sub
sub
mov
and
or
test
xchg
shll
lods
popa
adc
stos
mov
jge
icebp
jbe
inc
adc
push
dec
push
int3
and
push
add
inc
add
inc
pusha
mov
jbe
inc
pop
mov
pop
or
jle
sbb
daa
rcrb
cld
xchg
push
cmpl
pop
je
or
aam
push
and
xchg
scas
or
cwtl
leave
xchg
adc
je
xchg
in
adc
and
push
pop
cmpsl
and
in
mov
add
js
pop
jne
test
faddl
sbb
sub
inc
lea
fimull
insb
repnz
mov
xchg
js
inc
dec
pop
jne
imul
test
ss
insb
jns
jo
mov
push
and
and
cli
adc
push
adc
mov
mov
test
adc
push
and
mov
fldl
negl
clc
pushl
mov
push
nop
scas
hlt
sbb
xchg
outsb
jbe
jmp
fld
movsl
push
xchg
loopne
stos
xchg
dec
insl
leave
pop
xor
add
inc
daa
lea
lcall
dec
movsb
mov
scas
push
add
stc
dec
mov
leave
sub
push
incl
test
xor
fldln2
imul
xor
adc
pushf
pop
enter
push
inc
sub
inc
mov
or
clc
repz
ret
sub
jmp
das
das
and
dec
inc
inc
test
mov
repnz
add
aas
or
xchg
jecxz
mov
shl
dec
in
push
inc
aaa
jmp
mov
mov
pop
jmp
push
push
das
adc
ret
addl
or
and
pop
mov
movsb
ret
or
lret
inc
test
ljmp
push
in
inc
pop
pop
sub
out
inc
push
add
sbb
push
lahf
adc
dec
jo
pusha
add
push
xor
test
gs
adc
divl
add
addr16
daa
add
insl
cwtl
and
or
mov
enter
add
stos
pop
aaa
adc
or
mov
mov
sbb
movsl
es
dec
addr16
push
mov
fmuls
mov
push
dec
sub
test
or
jmp
or
mov
dec
ficompl
pop
mov
mov
pop
dec
mov
cmp
repnz
inc
inc
dec
cmp
test
scas
mov
mov
adc
and
jne
push
call
sbb
inc
push
pop
jne
sub
sbb
xor
test
or
and
mov
xchg
push
leave
jo
loop
fwait
jmp
mov
pop
or
dec
push
push
mov
outsb
cli
lea
call
xchg
dec
fadds
dec
js
xor
sbb
mov
pop
subb
mov
or
pop
mull
push
aaa
push
clc
mov
int3
sbb
test
into
shlb
or
dec
pop
add
mov
add
jmp
mov
xchg
sbb
sub
mov
rclb
mov
clc
push
imul
mov
sahf
mov
js
mov
repz
mov
sub
sbb
pop
sub
outsl
mov
add
inc
push
rorl
pop
pop
mov
or
jmp
mov
mov
mov
cmp
movsb
js
adc
xchg
mov
loopne
mov
sbb
lea
push
push
sub
jmp
movsb
leave
fbstp
cmp
mov
xchg
popa
jnp
fldenv
jbe
cmp
and
icebp
jmp
add
les
sbb
dec
push
adc
fwait
popf
js
dec
pushf
cs
pop
pop
or
decl
loope
sub
sub
add
insb
out
push
jae
push
jp
cmp
adc
jbe
imul
xor
sbb
lcall
int
mov
mov
andb
jmp
mov
or
xor
adc
lea
mov
mov
ds
mov
lds
push
pop
repz
mov
insl
lea
push
test
xchg
popf
mov
cmpl
std
incl
ret
out
andb
andb
pop
or
adc
cmc
mov
lods
cmp
jmp
push
jg
lods
clc
repz
dec
cmp
mov
xor
out
pop
test
sbb
pop
and
xchg
pop
add
bound
into
sbb
inc
push
or
in
mov
and
loopne
xor
idivl
pop
icebp
gs
lcall
jl
push
cmp
jne
xor
mov
jmp
pop
adc
mov
nop
popf
pop
imul
inc
mov
cltd
test
xchg
cld
cmp
mov
or
aad
add
pushf
jne
push
push
and
out
js
and
mov
push
test
loop
nop
cmp
enter
and
out
fsts
sub
ror
push
test
cmp
mov
movsl
aas
jbe
in
popa
push
sbb
shl
cmp
push
or
ret
call
mov
lret
je
mov
xchg
cwtl
sbb
imul
mov
jp
push
lret
xor
xor
clc
ret
int3
mov
mov
lar
test
jns
and
les
loope
xor
jne
mov
out
lret
or
rdpmc
fs
cmpsl
ja
inc
mov
insb
mov
xchg
pushf
pushf
inc
jp
pop
inc
or
sbb
loope
jo
adcl
or
cmp
or
mov
adc
adc
lahf
and
add
dec
sub
in
mov
mov
adc
xchg
or
enter
in
mov
cld
lea
and
add
mov
lcall
push
push
loop
push
pop
and
int3
cmp
and
leave
cmp
cmpsb
sub
xor
pop
add
and
add
addr16
or
mov
inc
loop
dec
insb
clc
sub
and
push
or
add
or
mov
sbb
dec
filds
mov
mov
orb
pop
push
or
orl
push
roll
in
rcrl
adc
inc
insl
pop
aam
jecxz
sub
subl
mov
fidivrl
dec
mov
and
rcrl
and
jne
push
in
adc
adc
rcrb
xchg
push
xor
add
lea
enter
repz
jb
insb
enter
xor
or
es
or
adc
adcl
repnz
adc
inc
in
pop
pop
cmpb
sub
shl
mov
int3
popf
or
ret
xor
mov
jo
or
sahf
ss
int
mov
push
jns
hlt
adc
or
xor
and
or
call
inc
faddl
popa
push
and
iret
xor
and
repnz
adc
popf
or
test
add
ret
and
push
pop
add
jne
mov
lret
pop
and
jno
xor
cmp
and
or
inc
dec
sbb
add
dec
or
xchg
jle
sub
cmp
ret
je
adc
adc
cltd
arpl
or
addr16
push
in
mov
andl
and
mov
add
push
int
push
or
insl
test
pop
xor
adc
test
adc
adc
inc
push
sbb
dec
dec
imul
dec
scas
add
sbb
imul
or
testl
movsb
sbb
pop
add
cmp
popa
aaa
xchg
sub
lods
mov
jecxz
loope
sub
loop
rorl
fwait
mov
pop
cmpsl
push
add
xorl
or
lods
sbb
or
sub
cwtl
test
lahf
add
aas
push
jp
lock
sub
insb
adc
and
movsl
sbb
lds
mov
and
pusha
mov
fwait
mov
roll
push
fnsave
in
sbb
cmp
mov
push
rcll
out
leave
daa
and
and
jbe
mov
insb
jb
adc
es
jns
xlat
pusha
xor
push
aad
ret
pop
sbb
pop
and
movsl
out
popf
cld
icebp
mov
and
push
add
stos
in
push
div
push
movsl
sub
int
cltd
sub
js
insb
xchg
jl
loope
inc
imul
daa
adcl
cmp
sbb
aas
dec
addl
shl
fs
inc
les
or
flds
push
cwtl
pop
loop
gs
adcb
adc
cmc
or
inc
aam
scas
adc
inc
mov
lock
dec
lcall
insl
adc
fmuls
js
push
xchg
loope
or
xchg
ficoms
add
or
mov
lea
inc
xchg
insl
lea
push
xor
or
push
push
sub
inc
pop
cmp
xchg
dec
imul
cmp
pop
sti
add
sub
fwait
andl
repz
mov
sbb
xchg
xchg
or
sub
or
sub
jle
dec
lock
inc
inc
out
out
dec
ret
xchg
jns
jnp
sbb
dec
xorl
nop
jge
les
test
sbb
and
pop
pop
dec
test
dec
adc
mov
mov
push
xor
xchg
aad
xor
out
pop
push
das
test
cmp
popf
mov
mov
or
cmovo
je
aaa
lcall
xor
inc
jb
and
inc
mov
pop
fists
loope
xor
cmp
mov
lods
mov
faddl
cmp
push
iret
push
dec
push
and
mov
push
pop
jp
sbb
or
mov
aam
js
ficoml
add
add
test
adc
mov
vphsubbw
add
movzwl
popa
xor
pop
jmp
sbb
mov
xchg
add
filds
inc
loope
inc
sub
inc
or
dec
jbe
dec
pushl
sarb
jbe
push
ja
add
xorb
xchg
addr16
and
adc
push
jnp
or
inc
sub
mov
sub
cmp
mov
mov
jecxz
jmp
mov
ret
lods
xor
mov
or
sbb
aam
pop
fildl
es
daa
jo
or
mov
scas
xor
mov
pusha
sub
xchg
rorl
out
jns
shlb
push
gs
xor
jo
push
psubsw
rorl
push
push
mov
call
adc
add
cld
in
mov
and
add
or
ds
sahf
movsl
push
push
mov
dec
or
or
and
pop
adc
dec
inc
or
insl
gs
mov
adc
push
adc
or
mov
arpl
les
js
clc
push
push
jns
icebp
mov
cmp
pop
mov
adc
inc
jo
mov
inc
mov
movsb
pop
scas
orl
sub
push
pop
add
sbb
or
pop
jecxz
sti
adc
rcll
les
pop
jge
dec
pop
or
rcl
xchg
ss
lret
dec
enter
adc
push
mov
sbb
fwait
mov
pop
add
push
add
adc
nop
sbb
hlt
xchg
cmp
fistl
add
cwtl
sbb
and
addl
pusha
xchg
mov
jno
jmp
xchg
incb
adc
adc
jbe
adc
sbb
sub
dec
dec
in
mov
xor
fmul
das
icebp
push
push
jl
xchg
sbb
push
mov
sbb
pop
scas
imul
fists
les
xchg
jno
movsl
loop
fbstp
shr
lcall
or
dec
ds
inc
sbbl
and
and
sbb
insb
mov
sbb
test
xorb
ljmp
xor
roll
aaa
sbb
mov
push
dec
inc
clc
addl
mov
jp
xchg
into
adc
pusha
dec
cmp
inc
push
fsubs
inc
sbb
xchg
out
add
adc
adc
mov
ja
sub
dec
loope
pop
sbb
and
decb
jne
push
jno
pop
movsl
push
or
repnz
ret
push
and
adc
dec
icebp
or
incl
ja
push
test
je
push
mov
push
or
sbb
addr16
or
mov
push
in
pop
and
rcll
mov
nop
add
add
mov
push
push
mov
fimuls
ja
jne
mov
cmpsl
nop
insl
fisttps
xlat
jmp
push
lds
insl
in
jae
mov
and
sbb
roll
nop
sbb
jp
jmp
or
cmp
jne
and
imul
adc
push
in
ret
xchg
pushf
add
and
insl
mov
adc
test
sbb
das
out
cwtl
shlb
inc
and
in
push
inc
cmp
push
or
xchg
add
bound
loop
test
sbb
sub
das
lock
cwtl
data16
inc
mov
shlb
adc
stos
adc
stos
push
int
mov
lods
add
jp
push
mov
cli
pop
test
rolb
pop
hlt
dec
int3
xchg
mov
mov
test
rorl
sub
cld
dec
popa
mov
test
in
adc
and
std
je
sbb
adc
mov
add
mov
jg
aaa
push
aaa
mov
push
adc
add
adc
mov
or
in
add
pop
push
adc
and
xor
mov
and
or
sbb
sub
sbb
pusha
sbb
mov
sbb
inc
jno
shll
iret
orb
xor
inc
cmp
out
cmp
and
push
fisttpl
loope
jnp
mov
mov
in
aam
mov
lods
ret
push
ret
mov
test
push
xchg
aad
mov
mov
inc
pop
aas
sbb
cmp
sub
loopne
adc
pop
push
mov
pop
lock
sub
jnp
jecxz
movsl
lock
adc
stos
in
push
xchg
test
sbb
mov
shll
xchg
in
adc
repnz
xchg
xchg
or
push
xchg
jl
jmp
or
or
add
push
mov
stc
jne
das
fsubrs
adc
add
adc
out
or
push
jg
push
fldt
push
inc
mov
pop
daa
jo
xor
push
inc
and
xchg
mov
ss
vcvtsi2ss
jo
int
rolb
xchg
xor
cmp
je
push
mov
pop
pop
jle
cmpsl
or
adc
or
mov
mov
xor
or
xor
mov
ljmp
or
cmp
sub
or
or
in
add
test
pop
push
push
cmp
cmp
pop
dec
rcll
test
sub
push
push
fldl2t
sbb
jne
cmp
imul
mov
and
xchg
dec
pop
push
adc
shr
xor
adcb
shl
gs
or
stos
clc
push
mov
arpl
je
push
inc
cmp
xchg
jb
jmp
loope
in
xor
in
sub
sub
mov
lcall
adc
sub
cmp
mov
in
mov
pop
and
iret
cmp
call
add
cs
mov
punpckhbw
jmp
mov
inc
cwtl
mov
sub
cli
test
pop
negl
xor
iret
push
sub
lea
push
pusha
insl
addb
sarl
jne
add
pusha
adc
in
add
sbb
push
leave
adc
fdivs
hlt
mov
cmp
dec
jl
push
push
cltd
and
push
or
sbb
jmp
cmpsb
dec
lds
loopne
fcoml
dec
aam
ret
or
push
mov
subl
mov
sub
stos
inc
and
fwait
lret
sbb
mov
adc
addl
sbb
and
jmp
push
xchg
je
int
bound
push
rorl
aas
fs
push
imul
negb
test
arpl
push
xchg
shrb
jle
adc
testl
xor
push
pop
arpl
mov
push
jne
popf
in
add
dec
cmp
shr
jns
bound
inc
adc
imul
fs
inc
in
in
adc
mov
push
add
sub
dec
dec
xchg
or
clc
jno
pop
dec
rol
or
mov
ret
add
pop
shll
in
push
test
or
iret
xchg
jb
fwait
and
mov
in
test
cmp
inc
mov
rcrb
add
movl
loope
decb
inc
adc
imul
fldz
and
add
and
cmp
and
scas
jge
add
sub
pop
xor
cmp
sbb
fiadds
sub
push
xchg
mov
in
cmpsb
push
sbb
aam
mov
push
add
data16
sub
outsl
gs
xor
xor
add
bound
scas
sub
cwtl
push
xorb
push
rcrb
and
in
das
pop
lret
pop
fmuls
mov
int
ljmp
inc
insb
pop
add
lea
fsubs
fmull
pop
pusha
stos
cmpsb
mov
adc
cmp
jecxz
push
and
cmpsl
add
jns
add
cltd
outsb
add
faddl
jg
jle
push
jmp
test
adcb
cmp
jl
lahf
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
cmp
mov
mov
push
add
inc
jmp
test
and
movw
ja
inc
xchg
adc
pop
mov
cld
addr16
inc
or
fs
pop
idiv
call
xor
mov
xor
mov
test
cmpsb
or
or
mov
adc
adcb
test
subb
mov
jno
push
popa
or
outsl
cld
outsb
push
push
or
xor
lea
repz
mov
data16
sub
mov
stos
aaa
pop
daa
sub
jnp
add
or
and
sub
iret
and
adc
dec
sub
pop
add
xchg
pop
pop
pop
aas
pop
int
cmp
or
stos
adc
xor
movsb
shrb
cmp
add
mov
xorb
ror
cltd
in
add
and
or
inc
push
cltd
pushf
push
dec
das
bound
sbb
pop
pop
repz
push
adc
nop
or
shlb
inc
mov
rorb
and
enter
add
pushf
inc
cmp
mov
push
push
rorb
lds
xchg
aad
inc
insl
push
pop
and
and
jo
pop
cwtl
jl
outsl
lock
and
adc
mov
fistpl
add
push
data16
movsb
lods
fcomps
push
sub
inc
enter
shl
mov
inc
sub
add
xchg
sbb
jbe
mov
sub
sahf
xchg
dec
push
xchg
pusha
push
add
sbb
add
dec
adc
pop
js
or
adc
rorb
or
add
sub
inc
cmp
pop
sub
lods
push
and
or
sbb
cwtl
inc
and
dec
inc
push
cmp
sbb
loop
icebp
sbb
sbb
lret
push
popa
mov
aam
mov
cmp
rcll
movsl
cmpb
xchg
inc
inc
sbb
stc
add
and
adc
pusha
int
outsb
and
sbb
pop
sub
fstpl
mov
push
lea
adc
cltd
sub
xchg
push
test
ret
lds
in
push
push
or
mov
icebp
mov
adc
shrb
dec
xchg
sbb
jb
push
push
nop
sbb
and
mov
and
adc
movsl
cltd
inc
sbb
mov
nop
leave
inc
add
sbb
mov
mov
loopne
aas
pop
add
orb
stos
pusha
mov
lods
or
insb
lea
xchg
or
loopne
fs
stos
rorb
clc
les
mov
add
or
in
mov
stos
add
sbb
push
fwait
loope
and
or
add
xchg
dec
loopne
rol
jae
lds
sbb
push
adc
and
sbb
leave
and
adc
int3
push
sub
ret
adc
add
loop
orb
sbb
inc
sbb
pop
aas
pusha
popf
xor
push
sbb
jl
lods
je
pusha
xchg
add
pop
xor
jecxz
outsb
add
pusha
rorl
inc
inc
cmpsb
in
inc
push
pop
push
jp
incl
xchg
add
in
pusha
mov
inc
add
fadd
push
pop
aaa
lock
jp
and
fistl
xchg
pop
or
lds
enter
icebp
hlt
add
cmp
ljmp
jne
fcompl
sbb
mov
or
jp
sbb
jae
jb
mov
popa
xor
ret
int3
inc
jge
imul
or
sbb
jbe
jb
mov
and
std
jb
test
jbe
pop
in
sbbb
adc
fldl
addr16
push
ja
lock
lcall
fs
mov
add
push
gs
sbb
icebp
mov
pop
push
popa
stos
cmp
pop
fcoms
jne
stc
push
stos
scas
adc
popa
cwtl
loop
fsts
aad
fsts
faddl
xchg
xlat
xor
fildl
fildl
inc
mov
test
sbb
insb
push
cmp
pop
ja
stc
add
xorb
adc
add
mov
shlb
pop
jmp
test
inc
je
ret
mov
cmp
adc
inc
sub
lods
popa
push
pop
pusha
adc
arpl
inc
mov
pop
pop
mov
add
add
xchg
add
enter
adc
push
pop
inc
adcb
jno
mov
out
rcr
cmp
add
push
cmp
je
outsl
add
xor
jle
jle
push
dec
ffreep
jecxz
add
mov
add
inc
dec
jl
fisttps
cmpl
cmp
mov
mov
or
pop
xchg
inc
xorb
rorl
mov
push
xor
push
mov
mov
out
lret
ljmp
or
loop
cwtl
orl
call
ret
dec
insl
mov
lock
fldl
fnstsw
test
je
sbb
and
or
jp
movl
loope
push
fldl
push
sbb
inc
cmc
dec
cld
std
jbe
sbb
and
aam
bound
nop
mov
inc
imul
mov
pop
or
adc
loope
fists
pop
fsub
pop
fsubrp
pop
aaa
cmp
xor
inc
mov
repnz
sbb
pop
stos
in
mov
ret
mov
dec
jb
pop
clc
pop
sbb
cmpsb
movl
dec
pop
sub
in
insb
fwait
and
dec
mov
inc
jmp
pusha
int3
nop
mov
sub
dec
xchg
push
movsl
jge
mov
cmpsl
std
dec
insb
cmpsl
shll
insl
or
or
out
sub
sbb
into
jo
call
xchg
call
loopne
test
xchg
xlat
xor
pop
iret
mov
jle
jnp
ja
roll
aaa
test
insb
data16
adc
or
and
outsl
hlt
inc
imul
loope
sbb
daa
cltd
clc
dec
jmp
push
sub
xor
jnp
ficomps
add
add
hlt
mov
mov
clc
dec
orb
push
ljmp
jb
sbb
leave
shld
add
add
jb
ja
lea
push
push
sbb
add
push
je
dec
adc
mov
or
push
mov
push
push
add
adc
push
sub
sahf
sbb
sbb
push
push
push
push
and
dec
pop
add
shll
pop
leave
or
insb
push
inc
push
nop
test
rorl
push
mov
lcall
jne
ret
xchg
scas
push
sti
ja
push
adc
sub
sahf
mov
push
sbb
jle
js
inc
cmpw
jne
outsl
jle
push
push
adc
inc
inc
cld
cmp
and
jmp
push
push
jl
incl
xchg
mov
pushf
lea
cmp
std
mov
or
push
leave
lock
push
push
push
cmp
fdivr
and
gs
and
sub
xor
ror
rolb
inc
add
repz
sbb
xchg
add
add
sbb
in
ds
add
adc
les
sbb
ret
push
xchg
or
and
jle
cli
push
mov
jnp
push
xlat
push
jae
push
lock
shl
das
push
mov
fdivrl
arpl
add
add
ljmp
leave
jp
or
push
adc
pop
cld
rcll
push
scas
cltd
cmp
add
mov
out
sbb
fisttpl
pop
cmp
pushf
sarb
inc
int3
or
movsb
std
sub
adc
and
xor
sub
pusha
inc
lret
aaa
mov
xchg
push
adc
add
pop
push
popa
xchg
imul
rcr
call
mov
jl
outsb
or
gs
pop
test
jl
lds
daa
mov
mov
sbb
or
add
js
sub
andl
add
inc
cmp
add
test
pop
scas
inc
cwtl
push
xchg
cltd
push
je
mov
xor
cmp
or
cltd
add
data16
xchg
cmp
fistpl
push
popf
sub
popa
and
stos
divl
xor
mov
push
mov
dec
cwtl
mov
int
xor
call
mov
inc
nop
cmp
emms
pop
xchg
or
sbb
xchg
xchg
adc
mov
pop
ficompl
filds
or
push
adc
mov
push
dec
clc
ljmp
lea
shll
cmp
pop
push
add
pop
adc
pop
cmpsb
mov
test
or
loopne
popf
jno
push
repz
add
ret
push
add
push
xchg
mov
push
jo
sbb
push
jo
push
sahf
and
mov
or
rol
loopne
cli
rolb
icebp
or
fmull
movsb
push
mov
xchg
test
es
sub
sub
xchg
popa
faddl
push
ja
lcall
dec
fdivs
jmp
cmpsb
je
movsl
mov
sbb
inc
jge
ljmp
icebp
and
xor
inc
adc
fs
add
lret
dec
sar
lods
or
int3
and
je
add
sbb
jg
es
dec
jne
jmp
push
ja
sbb
adc
xchg
cmp
jno
or
pop
in
test
jg
out
push
sar
pop
sbb
or
push
scas
pop
mov
push
test
cld
adc
mov
lea
in
xchg
push
and
test
inc
mov
arpl
cltd
jp
push
jmp
push
cmp
push
in
nop
aam
mov
jnp
nop
inc
mov
je
fadds
jl
push
stos
mov
pop
push
pop
cmpb
inc
mov
and
jge
xchg
enter
movsb
sbb
fdivr
enter
lahf
jle
cmp
and
mov
sbb
enter
xor
cmp
dec
insb
nop
mov
push
insb
andb
xchg
mov
or
xlat
lock
imul
xchg
out
sahf
out
movsl
scas
mov
sahf
int
loope
adc
repz
xor
iret
repz
outsl
jns
iret
repz
lea
cmp
repz
rcr
out
jns
out
sti
add
pop
stos
jo
and
sbb
cltd
stos
dec
pop
push
push
sbb
push
and
and
int
js
push
icebp
mov
pop
mov
inc
or
fisubs
nop
adc
adc
pop
test
nop
je
cmp
add
and
cmp
bound
subb
cmp
jle
out
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
xchg
aam
pop
mov
adc
popf
push
xor
leave
cmp
cmp
pop
shll
test
fmull
add
mov
mov
faddl
adc
sbb
orl
xchg
push
loope
ret
inc
ds
lods
aam
and
dec
test
mov
loopne
test
adc
pop
sbbl
divb
ffreep
dec
mov
xor
push
cmpb
and
sbb
lea
sbb
shrl
push
cmp
push
sub
shl
and
shlb
scas
fcompl
xchg
push
fildll
stc
add
mov
cmpsl
jg
inc
add
rclb
shrb
inc
out
subl
test
gs
push
xchg
add
cltd
enter
or
sbb
ret
test
fadds
shrb
enter
sub
pop
xchg
adc
sar
or
popa
mov
and
mov
push
cmp
adc
add
adc
mov
scas
add
test
imul
pop
push
adc
jge
and
mov
xor
cwtl
dec
inc
push
or
cs
sub
sbb
aad
add
xor
xchg
gs
push
pop
push
inc
xchg
loopne
out
and
les
xor
in
mov
mov
mov
fwait
sbb
push
adc
or
cmp
hlt
jne
xchg
xchg
je
mov
leave
jnp
push
mov
sub
and
mov
add
mov
cmp
mov
xchg
xor
mov
rol
icebp
push
jg
mov
fimull
aad
inc
push
xor
dec
neg
sbb
push
into
out
lea
push
mov
jo
fisttpl
cmp
mov
test
push
pop
mov
ret
xor
mov
jle
dec
fidivs
xorb
jl
in
test
push
jle
mov
xor
pop
mov
sbb
out
out
enter
out
out
insb
jo,pn
out
out
jl
cwtl
xchg
out
out
test
movsb
inc
movsb
call
push
subb
mov
mov
cmp
pop
int3
jl
mov
add
adc
xchg
lret
cmp
push
insb
xlat
movsb
inc
loop
aas
mov
mov
cld
or
pop
cmp
xchg
adc
lds
push
and
js
stos
and
je
push
jbe
int
scas
adc
sub
mov
imul
mov
sub
lods
jl
gs
add
int3
pop
inc
es
sbb
sbb
xchg
push
mov
xorl
dec
pop
dec
inc
xchg
jns
xchg
mov
xor
add
sub
sbb
and
and
dec
adc
lahf
sub
repnz
ret
adc
xor
scas
fwait
or
adc
fists
push
mov
cmp
mov
icebp
xchg
push
dec
push
cmp
test
xchg
or
mov
jle
cld
inc
out
sbb
mov
cld
test
cmp
rorl
dec
roll
rorl
int3
sarb
dec
cmp
in
test
lret
sub
xor
movsb
pop
xlat
scas
daa
aas
push
sbb
bound
inc
push
adc
inc
add
and
adc
cmp
adc
aaa
and
lret
jo
mov
nop
mov
es
push
adc
daa
cmp
das
or
inc
test
mov
cmp
sub
popa
mov
pushl
addr16
pop
rorb
add
mov
push
shrl
xchg
nop
add
cwtl
je
mov
loopne
test
mov
scas
dec
adc
inc
lock
shlb
nop
mov
xchg
pop
adc
outsl
jno
jmp
mov
sub
pusha
aaa
and
jne
fldcw
cmp
sub
movsb
push
les
adc
pop
rcrb
rorb
xchg
xchg
mov
sbb
jae
push
lods
movsl
cmp
mov
jle
push
mov
cmp
inc
xchg
lods
or
adc
lret
and
incl
out
add
mov
inc
add
or
pusha
jg
ja
push
push
adc
push
mov
push
or
mov
lock
xor
push
and
or
add
xor
aam
lods
repz
fiaddl
jo
mov
jae
lods
lret
xchg
in
hlt
and
add
loop
call
imul
inc
nop
sbb
push
and
or
or
movsb
test
jo
and
mov
or
aaa
outsb
push
repnz
mov
cmp
mov
js
push
inc
jl
add
enter
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
lcall
dec
sahf
fsubl
adc
adc
inc
repz
add
adc
xchg
mov
jns
adc
push
pop
test
adc
inc
push
aam
fcomps
inc
inc
mov
enter
mov
cwtl
push
dec
sbb
int
in
and
push
negl
lods
fsubrs
sti
rorl
or
sbb
test
rcrb
sub
dec
push
mov
mov
push
nop
fwait
or
mov
andb
inc
pop
clc
ret
adc
roll
cmpsb
mov
test
and
mov
lea
int
add
jge
push
aaa
inc
sbb
dec
js
cwtl
pop
sub
rcrb
movsl
sbb
sub
push
cmp
and
je
adc
push
dec
cmpsl
pop
movsb
pop
jb
pop
pushf
xchg
mov
pop
jae
pop
fisttpll
adc
je
insb
dec
xor
int
fs
pop
es
pusha
add
call
pop
add
inc
or
sub
shll
fwait
les
int3
push
sbb
addl
je
sub
addl
rolb
xor
add
popf
in
pop
add
and
sub
adc
aam
lret
xchg
dec
or
xor
icebp
inc
jo
sahf
jb
adc
jbe
movsb
xchg
inc
movsb
in
dec
in
roll
test
and
adc
jp
add
mov
jb
xor
repnz
test
lods
add
jecxz
shrb
fimuls
inc
pop
cmpb
xor
fcoml
jo
jbe
aad
mov
loope
cmp
cmp
arpl
inc
or
push
or
or
lods
sub
int
sbb
adc
mov
or
push
add
xlat
dec
mov
mov
test
jle
sbb
psllw
xchg
ret
test
pop
push
mov
sub
push
loop
mov
adc
sub
or
adc
xor
ret
leave
rorb
ret
sbb
and
arpl
mov
les
push
mov
rclb
mov
ret
loope
mov
dec
enter
adc
push
push
inc
pop
cmp
adc
lods
fs
push
push
inc
jmp
adc
rcl
sbb
imul
sub
pop
sbb
rolb
movsb
arpl
sub
sbb
push
outsl
and
pusha
sbb
pushl
ss
add
push
sbb
mov
xchg
xchg
xlat
jecxz
add
inc
popf
pop
loopne
xchg
test
pop
orb
xchg
pop
and
and
mov
mov
and
push
sub
adcl
mov
sub
dec
movsl
pop
adc
or
stos
sub
push
imul
pop
es
pop
adc
fs
jae
sub
sub
mov
subb
fwait
nop
dec
pusha
push
sub
movsl
cltd
nop
fsubrs
pop
insb
movsb
rorb
shrb
sub
movsl
pop
loopne,pn
pushf
fmuls
movsb
lea
mov
movsl
push
dec
dec
imul
je
mov
jo
cltd
add
lods
dec
jnp
das
mov
inc
push
pop
add
popa
xor
dec
popa
loop
dec
mov
inc
xlat
popf
das
not
icebp
mov
imul
int
sub
sub
rorb
sub
push
sub
fs
test
and
dec
xor
and
xor
shlb
dec
xor
int
mov
rorb
sbb
test
sbbb
imul
and
les
aam
movsb
cltd
pop
rclb
jno
or
sbb
fdivs
or
mov
pop
cmp
mov
sbb
inc
lea
add
les
cmp
fs
out
or
xor
pop
iret
cs
sub
test
and
mov
cltd
icebp
fdivrs
push
jne
sbb
lds
push
fs
mov
je
repz
repz
dec
push
push
les
xor
mov
ss
mov
pop
orb
scas
aam
pop
andl
push
dec
and
or
cmp
pop
jge
jb
fcompl
pop
jg
adc
mov
or
push
and
data16
add
lahf
sub
inc
pop
rorb
cmc
push
sub
mulb
xlat
nop
push
add
xchg
lock
pushf
loop
inc
mov
fiaddl
push
dec
cmp
inc
or
movsb
xchg
dec
push
cmp
adc
xchg
add
cmp
mov
inc
add
xchg
xor
clc
cmp
int
lea
ja
and
xlat
insb
ret
repnz
sbb
jns
cmp
jo
push
test
add
or
and
pusha
aam
loopne
popa
lods
popf
ljmp
incb
js
dec
mov
adc
dec
lods
mov
push
mov
sub
mov
das
cmc
sub
sub
mov
movsl
jle
loop
push
fucomp
xor
sub
flds
mov
pop
and
cwtl
dec
stc
aad
fsubrs
in
push
pop
fwait
jl
fsubl
mov
leave
xor
fsts
inc
inc
xor
repnz
cmp
sbb
xor
cmp
cmp
mov
mov
push
clc
test
cltd
sahf
loope
push
jbe
add
adc
call
das
dec
mov
imul
push
addl
xchg
mov
into
inc
mov
leave
sub
and
lds
pop
cmp
sbb
clc
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
fsubl
ret
jl
and
bound
addb
fcomps
push
hlt
subl
or
iret
jne
mov
inc
clc
add
fcomi
enter
jae
inc
adc
imull
pop
or
iret
je
mov
dec
and
sub
jb
or
or
inc
sub
cmp
sub
fnstsw
push
mov
popa
movl
loop
ret
xchg
int3
aam
push
leave
roll
adc
sbb
fnsave
dec
cmp
fcmovbe
aad
pushf
aad
ret
cmp
leave
sub
inc
out
imul
mov
push
inc
vcvtdq2ps
hlt
mov
cmp
jo
in
shrb
sub
icebp
or
mov
call
imul
pushl
mov
jae
xchg
pop
test
in
cmpsb
sbb
test
test
xor
inc
adc
shll
pop
and
sub
or
aam
sbb
mov
cmp
ds
jl
or
je
cld
lcall
cmp
inc
jmp
movzbl
movb
movsbl
shr
mov
dec
test
push
add
pop
dec
add
in
xchg
pop
ljmp
jg
adc
pop
pop
jno
sub
bound
mov
push
faddl
inc
or
mov
hlt
ficomps
adc
mov
rcrb
or
and
dec
pop
mov
dec
movsl
addl
pop
test
add
in
adcb
add
dec
ss
mov
and
sti
xchg
ss
pop
cmpsl
inc
lock
xchg
repnz
mov
incl
pop
jle
cmpb
je
dec
and
pop
fisttps
push
gs
cmc
or
inc
lret
jmp
scas
sub
test
dec
pop
adc
pop
cmp
push
pop
fadds
jmp
popa
inc
sub
add
cmp
push
out
cmp
or
cmp
je
cmp
dec
daa
xor
jne
cmp
jl
lods
in
add
shl
cli
jp
arpl
add
dec
popa
imul
ja
jne
mov
fwait
jp
xlat
test
ficomps
testb
fnsave
jp
inc
push
add
popf
add
insb
outsb
adcb
adc
rcll
jne
nop
inc
push
adc
inc
xchg
cld
sub
pop
adc
mov
jmp
aad
and
in
xchg
jns
inc
mov
pop
pop
xchg
pop
mov
ds
out
scas
add
cmp
cwtl
inc
sub
aad
fdivr
or
jge
fildl
mov
ret
pop
and
pushf
lock
daa
addl
mov
repnz
and
or
or
inc
jg
outsl
lods
repnz
xchg
push
in
push
mov
push
cmp
xor
inc
dec
or
cmp
pusha
mov
push
add
adc
xchg
rclb
and
test
add
inc
jecxz
push
repz
pop
mov
push
rcrb
fisttpl
nop
dec
faddp
sub
in
add
sbb
xchg
sub
pop
clc
adc
mov
cmp
mov
mov
push
dec
adc
ror
and
xchg
stc
ds
sub
test
dec
add
and
sub
sbb
sub
dec
mov
into
mov
mov
push
cmpsb
dec
dec
sarb
fs
sbb
shrl
add
mov
push
push
sbb
mov
les
icebp
or
adc
cmp
test
adc
aad
add
cmc
sub
mov
repz
sbb
sub
ret
push
mov
adc
out
cmp
cmp
sub
xchg
pusha
xor
aaa
cmp
cmp
aad
cmp
std
cmp
enter
xor
rclb
pusha
arpl
test
xchg
sub
inc
ja
add
add
ja
fistps
nop
out
jle
js
and
jo
mov
roll
jmp
cmc
jg
rolb
test
or
fisttps
add
mov
xchg
test
out
rorb
rcrb
or
and
hlt
push
inc
sbb
xor
scas
nop
es
faddl
sbb
adc
add
jo
push
lea
insl
pop
cmp
sub
and
sbb
enter
mov
aam
mov
pop
enter
int3
andb
sarb
in
add
inc
add
out
cmpsb
add
sub
jle
fildl
jle
inc
mov
push
pusha
fdivrs
scas
cmp
inc
clc
or
add
xor
ret
or
or
xchg
push
lahf
pusha
push
jmp
rorb
add
adc
aas
jb
js
test
add
loope
clc
cmpsl
je
stos
mov
lea
test
lock
add
pop
cmp
in
or
add
mov
or
xor
call
pop
je
push
aam
gs
adc
les
je
scas
dec
inc
cmpsb
js
sbb
jmp
in
add
les
xchg
hlt
inc
lcall
insb
clc
test
dec
jno
xor
shr
jecxz
nop
push
inc
pshufw
fstps
test
je
comiss
test
in
add
loope
mov
pop
dec
adc
mov
movsb
or
push
xor
jne
das
add
call
cmp
jl
lock
outsb
fs
js
add
div
add
ds
and
int3
idivl
insl
sbb
xor
inc
cwtl
add
inc
cmp
faddp
mov
insb
adcl
nop
rolb
pushf
inc
cmpsb
movsb
jb
enter
icebp
outsl
mov
xor
xor
inc
adc
add
xchg
mov
in
std
fmull
mov
lods
sub
je
jne
imul
add
mov
rcr
les
mov
and
daa
sbbb
and
xor
or
imul
rolb
mov
rdtsc
xor
jnp
ds
rorb
sbb
loope
or
lods
push
scas
push
shll
inc
inc
clc
inc
das
je
fbstp
mov
jge
lea
mov
jg
pop
es
outsl
das
mov
push
sahf
fsubrl
adc
dec
movsl
in
jle
in
cmp
test
jne
es
loopne
mov
pop
push
or
jno
fmuls
mov
sbb
or
jl
or
bound
jo
int
cmpsb
push
and
fisttpl
imul
jmp
push
lea
mov
sbb
pop
sub
mov
scas
sbb
mov
xor
xchg
mov
arpl
inc
frstor
push
popa
sub
jl
and
mov
imul
add
push
mov
inc
jne
test
ljmp
mov
lret
rorb
ds
add
jg
mov
in
sub
mov
inc
add
inc
or
push
jge
pop
notb
sub
pop
add
push
inc
sbb
pop
pop
insb
jno
inc
add
mov
test
jne
sbb
mov
ret
pop
cmp
push
pop
test
jns
inc
fnsave
pop
inc
cmp
insl
jge
enter
rclb
jbe
fldl
adc
aas
cltd
push
data16
cmp
popf
fbstp
inc
add
out
jne
daa
bnd
sahf
lahf
out
adc
hlt
jne
or
jne
or
inc
jo
clc
push
mov
mov
xchg
cmpsb
cmpsl
js
pop
mov
ret
xchg
aad
xchg
cmpb
pop
push
lea
movl
movsl
iret
inc
dec
fcmovnb
push
dec
push
sub
add
jl
mov
movsb
push
dec
mov
hlt
lea
adc
jne
and
lea
pop
or
inc
add
fcoml
inc
xchg
addr16
out
xchg
push
adc
stc
fs
add
negl
xlat
or
xchg
or
loopne
xchg
mov
push
xor
add
fadds
clc
adc
in
dec
pushf
rcll
frstor
add
adc
pop
fstpt
push
jo
xor
adc
mov
add
mov
sub
cmp
jnp
icebp
loopne
cmpsl
out
lahf
lock
scas
push
ss
shrb
sbb
pop
ret
jg
loopne
or
pop
orb
push
xchg
rol
cltd
shrl
mov
add
call
xorl
mov
mov
mov
pusha
cmp
test
mov
jb
or
fs
test
add
jne
fmul
mov
or
lods
and
enter
jns
mov
dec
ficoml
mov
xor
fwait
mov
mov
mov
clc
xchg
rcrb
push
push
add
je
or
mov
js
es
clc
clc
out
and
mov
lcall
pop
add
rorb
int3
or
es
daa
test
inc
subl
outsb
xor
mov
fbld
xchg
dec
xchg
add
pop
sbb
push
fildl
mull
dec
and
loop
and
jns
mov
push
enter
push
or
mov
pop
xor
mov
push
mov
jmp
fnsave
pop
mov
faddl
mov
mov
and
loopne
gs
popl
sbb
cs
lea
cmp
xorl
loope
mov
mov
push
cs
jnp
insl
push
test
fs
push
adc
mov
mov
fwait
inc
sub
pop
or
je
fadds
jno
popf
mov
add
loop
pop
or
hlt
jae
sbb
dec
pop
daa
or
stc
or
and
push
sbb
sbb
call
dec
das
and
das
pop
sbb
xchg
push
sub
push
dec
fnstsw
in
and
adc
pop
cmp
sbb
and
leave
adc
mov
dec
push
cltd
inc
adc
jo
arpl
lea
std
lds
nop
inc
adc
mov
sbb
sub
pop
cltd
nop
cltd
xlat
xor
push
sbb
dec
push
sbb
adc
sbb
adc
mov
jmp
movl
sub
push
jne
sti
mov
inc
leave
push
rcrb
cmp
xchg
arpl
es
dec
cmp
adc
shlb
dec
out
mov
pop
movsl
adc
je
push
lea
jb
adc
push
sbb
mov
mov
push
sbb
cltd
or
movsb
cltd
fcom
mov
sbb
xor
add
sub
add
dec
push
out
adc
insl
rorb
inc
sti
aam
mov
push
adc
pop
jo
roll
fdivrl
and
adc
xor
and
js
jg
adc
jae
je
push
xchg
daa
adc
add
aaa
xor
aam
inc
sbb
fcoml
loopne
sbb
test
dec
adc
sarb
jne
movsb
mov
fists
shl
xlat
test
leave
pop
add
sub
push
or
int
adc
add
or
dec
inc
test
inc
adc
cmpsl
aas
add
push
inc
out
adc
xchg
push
jmp
stos
sbb
xchg
push
aad
call
and
jmp
movsl
jne
jno
in
push
or
orb
adc
add
int
inc
lahf
inc
ds
or
aam
push
add
dec
stc
sarb
gs
jecxz
mov
add
push
lock
fsubrl
mov
pop
inc
std
xor
lods
inc
inc
popf
fldl2t
adc
cld
mov
jo
add
mov
rcll
jl
mov
nop
ror
pop
ficoml
adc
aam
fisubl
mov
add
ja
xor
push
and
stc
mov
sub
orl
lds
push
fadd
or
lock
shrb
xchg
shlb
inc
mov
push
testl
les
jo
adc
outsb
fcoml
inc
loopne
out
mov
pusha
jne
pop
stos
mov
cmp
clc
insb
es
jne
mov
imul
push
ljmp
das
cmp
or
or
push
gs
and
subl
das
adc
xor
push
insb
rcll
and
push
adc
lret
ret
cmp
cltd
bound
fdiv
mov
xor
or
sub
rcrl
jp
loopne
mov
clc
rcr
xor
jns
cmp
dec
inc
pop
dec
cld
pop
push
push
jge
imul
js
clc
rolb
jle
add
dec
or
xlat
les
sar
je
pop
push
aas
cmpsl
lea
pop
sbb
sub
ret
inc
or
add
mov
mov
pop
and
stos
lds
test
bndstx
call
jmp
lret
das
out
je
push
lds
mov
ficompl
inc
pop
or
and
fdivrl
adc
pop
movsb
adc
js
mov
int3
mov
add
and
inc
jmp
repz
push
xor
add
fisttps
push
enter
aas
add
frstor
dec
sbb
push
dec
popa
cmp
xor
cmp
ret
jbe
jmp
xor
cmp
mov
xchg
push
roll
adc
or
sbb
addr16
cs
insl
jae
arpl
imul
aaa
pop
es
xchg
mov
add
addl
inc
xchg
adc
loopne
dec
dec
sub
add
imul
and
jo
add
aas
negb
ljmp
mov
shrl
or
dec
mov
jp
lahf
lahf
xchg
or
sbb
pop
jno
movsb
ret
outsb
jo
and
dec
lock
ret
push
je
movsl
ja
xchg
int3
leave
or
insl
jle
or
mov
leave
cmp
je
or
mov
lret
adc
rolb
sbb
sete
mov
pop
pop
int3
iret
call
mov
push
ret
js
hlt
jae
mov
mov
cli
sbb
inc
mov
dec
repz
lahf
mov
add
outsw
xor
sbb
pop
jmp
enter
ljmp
inc
incl
mov
add
or
jecxz
or
add
inc
cmp
jl
cmpl
pop
imul
sar
add
gs
mov
hlt
clc
xor
ss
jl
or
cmp
jecxz
sbb
inc
jne
mov
lret
shr
xor
mov
mov
dec
jne
fdivs
adc
pop
pop
adc
pop
dec
inc
das
into
mov
sbb
push
xor
mov
aam
nop
mov
add
push
push
push
sarb
inc
jo
shld
lea
inc
adc
roll
pusha
adc
mov
clc
and
outsb
data16
push
cmp
jl
or
jle
insb
aas
mov
mov
mov
je
rol
mov
loopne
mov
out
push
mov
add
fildl
aas
arpl
ret
test
rolb
shl
cmp
xor
add
dec
lahf
push
ret
or
rcll
adc
rclb
dec
leave
xchg
jmp
inc
mov
push
rorl
adc
xor
stos
pop
shll
pop
ficompl
ss
mov
pop
cmpsl
push
xor
in
push
xor
mov
adc
xor
pop
in
dec
leave
sbb
pop
push
cmp
ret
sbb
sub
and
add
pop
push
and
adcb
jne
adc
jecxz
push
loopne
iret
pop
push
jmp
test
push
pushf
inc
push
cmpb
push
push
cltd
mov
push
out
fcomps
pop
enter
test
dec
pop
add
leave
and
pop
jmp
push
add
bswap
in
push
push
adc
push
and
push
mov
in
and
sbb
ucomiss
xchg
mov
dec
js
hlt
sbb
push
call
pop
std
lods
push
pop
ss
jns
lret
add
int3
stos
add
out
in
cmp
movsb
adc
lods
jle
lahf
mov
inc
sub
and
mov
lea
hlt
and
inc
sub
adc
loopne
inc
sbb
je
push
pushl
jp
push
popf
dec
fsubr
add
dec
and
cmp
scas
mov
jnp
jbe
mov
jmp
mov
xchg
pop
push
sbb
sbb
js
cmp
mov
movsb
jg
loopne
jl
sub
push
les
test
rorb
dec
or
rolb
lahf
testl
movsl
pop
or
cmp
jecxz
insb
mov
add
int3
jge
and
add
cmc
rcl
cltd
dec
push
daa
sub
add
mov
dec
fisubl
mov
mov
je
test
repz
shll
adc
or
pop
jb
shrl
push
arpl
cmpb
pop
fisubl
push
push
pop
aam
xlat
scas
dec
jae
mov
ficoml
jne
pop
cld
mov
or
aaa
mov
adc
pop
xlat
push
shlb
jge
rcll
and
jae
jns
mov
cmp
cmp
pop
sub
mov
loope
sbb
add
cmp
clc
pop
bound
cmp
clc
dec
loopne
sarl
cmpsb
je
icebp
imul
ret
call
out
jne
adc
das
andb
lods
or
and
cmp
inc
adc
xor
ficoml
push
xchg
cmp
add
mov
jne
cmc
inc
gs
xchg
adc
aam
add
add
lods
jle
cs
xor
push
jge
add
aam
xlat
andl
or
cmp
jl
cwtl
loopne
fmul
test
mov
sub
pop
test
fs
sbb
test
push
daa
movsbl
add
add
decl
push
ret
mov
decl
mov
or
roll
out
test
sbb
lret
mov
sbb
cmpsl
pop
je
and
add
add
cmp
xor
pop
ljmp
je
add
push
adc
dec
dec
xlat
movsl
cmovle
add
out
stos
pop
mov
mov
inc
add
popf
mov
add
mov
adc
les
pop
sbb
push
xchg
xor
insb
in
lock
iret
popf
inc
pop
stos
sbb
addl
xor
mov
and
shlb
mov
xor
xor
sub
xchg
subl
or
rorb
or
lock
je
fdivrs
mov
mov
stc
mov
mov
mov
clc
pop
mov
push
sarb
mov
dec
adc
push
lds
xchg
dec
mov
xor
cmp
add
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzbl
mov
roll
sbb
js
jl
dec
sbb
addl
gs
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
sbb
jno
push
mov
stc
xchg
or
fwait
jb
lea
aam
in
dec
xchg
add
pop
loop
call
insb
into
push
cmp
jno
inc
pop
add
push
icebp
fimull
xor
push
mov
push
nop
cmp
lret
in
in
aas
daa
fs
mov
xor
ret
or
nop
int3
loopne
pusha
cli
sub
test
adc
inc
sahf
mov
cmp
out
pop
adc
push
enter
ja
sub
lahf
lret
push
packsswb
jae
and
pop
xlat
mov
nop
popa
imul
push
daa
pop
adcl
inc
sbb
add
mov
xor
sub
loopne
and
adc
add
add
mov
pusha
push
and
fadds
sbb
pminsw
push
out
mov
sub
je
mov
test
jmp
js
mov
push
adcb
sbb
rclb
sub
arpl
jb
cwtl
mov
cld
decl
in
stc
sub
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
push
mov
or
jle
add
sahf
mov
aas
insl
mov
sbb
cmc
xor
adc
fcmovnu
pop
add
mov
push
cmp
and
mov
es
cmp
add
jne
push
adc
test
jae
call
fcom
jae
push
push
push
cmp
pusha
sub
sbb
and
push
aas
call
mov
mov
and
inc
mov
aam
xchg
mov
mov
popf
lods
test
mov
aad
push
repnz
call
mov
lock
cmp
cmpsl
je
lea
ss
add
xchg
push
push
xchg
xor
outsl
add
repnz
test
nop
std
or
sub
icebp
pop
adc
cmp
mov
into
jmp
jnp
in
cmp
sbb
push
or
shll
push
sbb
or
popf
aas
mov
add
jb
movsl
sub
jo
pop
jmp
pop
cmp
cs
push
pop
in
lret
adc
leave
adc
dec
cmp
and
adc
insb
pop
sbb
add
icebp
add
adc
mov
and
or
and
stos
mov
rorb
fsubrp
pop
pop
and
loopne
mov
sub
test
jmp
push
stos
iret
subb
pop
add
push
and
pop
push
mov
xor
and
adc
adc
dec
and
mov
pop
or
adcl
inc
mov
sbb
mov
rcll
loopne
mov
xchg
outsl
dec
sti
dec
scas
cmp
andl
add
hlt
shrb
shrb
stos
jle
add
lods
xor
scas
add
jl
mov
push
aam
xlat
and
push
add
stc
dec
cmpsl
addl
sbb
imul
sbb
push
je
push
adc
enter
fisubs
les
mov
add
xlat
or
mov
maxps
pavgw
push
inc
push
mov
cmp
adc
dec
inc
cmp
adc
fs
rorb
fs
push
add
ja
jmp
push
js
dec
or
fsubrl
and
out
fdivl
adc
push
rorb
inc
add
jle
movsl
jo
leave
push
insb
or
sub
inc
aam
add
cmpsl
int
sub
inc
or
push
pop
sbb
outsb
je
mov
test
mov
mov
mov
aam
popf
pop
pop
cmp
xchg
movsb
cli
out
sub
mov
dec
add
into
pop
out
push
insl
jnp
addr16
daa
xchg
outsb
mov
push
pop
dec
divl
out
int3
mov
or
sbb
filds
outsl
gs
add
dec
adc
movsb
je
mov
test
fdivrs
incb
aad
push
jmp
ret
loope
pop
mov
stos
int3
rorb
pop
loopne
test
or
adc
push
cli
iret
pop
push
push
push
mov
mov
xchg
dec
rclb
jne
dec
inc
or
sbb
jecxz
cwtl
jo
scas
push
pushl
or
imul
pop
sub
js
sub
cmp
pop
push
sbb
lret
pop
inc
mov
jnp
pop
add
sub
adc
lret
cmpb
ds
cmpsl
or
cmp
sub
cmc
out
xchg
daa
sbb
pop
clc
jne
mov
push
cmp
adc
push
popa
adc
mov
int3
add
add
in
xor
cld
xchg
out
fsubrs
call
imul
hlt
cmp
xchg
lea
or
xlat
xchg
rcrb
adc
pop
fcoms
call
cmp
sbb
es
add
xlat
and
and
ljmp
ret
sub
xchg
ror
pop
mov
es
fwait
add
sarb
shll
aaa
or
jmp
add
mov
aam
mov
not
sbb
enter
out
add
fwait
dec
mov
xchg
add
je
dec
mov
add
pop
test
xor
sbb
jo
jmp
jmp
cmp
cmpsb
sarl
push
pop
cmp
xchg
mov
rorb
enter
jg
or
repz
fs
xor
add
and
add
es
sub
es
xchg
add
xchg
mov
xor
lahf
out
cmpl
cwtl
push
jae
fsubs
push
pop
in
pop
mov
inc
sub
mov
xlat
ds
and
sub
mov
push
adc
insb
or
pop
loope
fcomp
inc
xchg
dec
push
xor
jo
cwtl
ret
mov
dec
lcall
push
jg
leave
xchg
das
sub
xchg
mov
or
sub
push
add
test
cs
or
lock
pop
dec
push
or
inc
loopne
inc
mov
inc
xor
subl
shll
or
dec
xor
xchg
mov
stos
jae
mov
add
or
and
adc
and
dec
or
mov
and
arpl
in
mov
cmp
push
add
xorb
scas
mov
mov
and
out
rorb
negb
sahf
stos
cmp
pop
cwtl
outsb
shlb
enter
jne
scas
je
dec
test
push
cmp
push
movsl
adc
mov
aad
ret
add
cmpsb
loopne
xchg
outsb
or
adc
and
sub
push
adc
mov
pop
aaa
sbb
jne
add
xchg
sbb
mov
sub
or
inc
push
or
sarl
bound
adc
sbb
in
dec
cmc
cmp
les
mov
mov
dec
lods
sti
fcompl
push
sub
clc
xchg
iret
fcmovb
mov
inc
loope
dec
jb
daa
mov
or
ret
in
sub
lahf
fdivrs
inc
mov
and
xchg
mov
sbb
or
ja
pusha
mov
pop
push
cmp
sub
adcb
and
cmpl
rclb
push
inc
das
cs
inc
sub
lock
lods
and
andl
test
decl
ret
int3
add
shlb
jb
xchg
mov
or
dec
sub
imul
js
inc
dec
popa
inc
and
xchg
add
xchg
inc
fcoml
and
fdivrl
inc
sub
loopne
mov
jmp
mov
notl
mov
jmp
add
pop
pushf
jb
std
bound
xor
jbe
mov
movsl
les
jmp
data16
xchg
scas
je
push
lea
iret
les
add
mov
sbb
jge
dec
rcrb
pop
or
push
push
mov
loope
and
jbe
push
cltd
inc
add
cmp
icebp
mov
push
push
cmp
jb
cmp
cmp
je
push
mov
inc
inc
jecxz
rcrl
fisubrl
push
dec
je
add
lock
push
sbb
cs
mov
mov
jo
shlb
and
pop
add
je
pop
fisubrs
sub
jmp
add
mov
mov
adc
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
cmp
jns
or
cmpsb
push
jmp
testb
je
negl
js
or
adc
fnsetpm(287
cld
cmp
jbe
out
pop
add
daa
mov
cmp
je
sub
inc
jmp
inc
and
arpl
scas
popf
test
pop
mov
outsb
xor
lcall
clc
mov
jge
jo
cmp
pushf
dec
sbb
mov
push
adc
into
loope
das
rcll
lods
push
xor
outsb
or
in
test
inc
pop
data16
dec
cld
inc
pop
cmp
jne
jo
sti
cmp
outsb
hlt
xor
fs
cmp
bound
pop
les
pop
push
adc
rorl
pop
insb
jb
test
adc
js
sub
cmp
sbb
nop
push
or
xchg
push
lds
cmpsb
inc
cld
rclb
xchg
xchg
popa
flds
mov
pusha
outsl
mov
out
jmp
loopne
jne
mov
add
sbb
add
data16
test
incb
aaa
jae
movl
mov
pop
shl
add
jmp
pushf
sub
ret
mov
insb
sti
and
cmpsb
and
xor
js
fs
add
pusha
xor
lock
sub
mov
or
push
popa
incl
cmp
dec
shlb
cli
outsb
jecxz
lods
sub
lock
loopne
mov
or
add
lea
or
cmp
das
lret
xchg
inc
jg
or
jge
int
roll
xor
and
es
test
jle
sub
sub
and
pop
or
jl
or
push
adc
jle
pusha
push
orb
pop
aam
cmp
jbe
and
daa
mov
test
xchg
and
add
test
js
je,pn
test
jne
pop
sub
push
mov
std
sub
jb
clc
add
loopne
cmp
and
pop
add
adc
movb
inc
mov
sub
sub
push
push
sti
daa
xor
jno
mov
inc
and
mov
and
ja
push
mov
inc
pop
mov
adc
xor
loopne
add
daa
sbb
hlt
lock
adc
lcall
inc
jbe
push
jp
push
mov
adc
packsswb
mov
ljmp
aam
add
push
push
out
and
leave
in
inc
inc
adc
pop
cli
dec
inc
xchg
pop
ret
add
rclb
jne
clc
adc
cwtl
xor
mov
inc
js
mov
sahf
mov
imul
pop
jl
inc
inc
xchg
mov
mov
sbb
fnstcw
in
cmp
push
mov
rol
loop
and
cmpsb
int
andb
add
or
mov
adc
mov
mov
push
dec
int
and
push
and
xor
je
and
popf
mov
xchg
add
cs
pop
mov
sbb
adc
out
sub
jne
and
ss
cmp
dec
mov
jmp
andl
pop
or
sbb
cltd
aaa
jp
xor
xchg
or
in
test
aad
stos
mov
repnz
push
pop
push
movl
lds
pop
mov
xor
push
xchg
add
cmp
loopne
inc
push
cmp
inc
test
cli
xor
inc
xchg
push
mov
test
rorb
pusha
and
add
mov
add
adc
ret
jmp
int
push
movsb
or
cmp
sbbb
push
pushl
lods
and
mov
pop
in
imull
outsb
fsubr
jae
pop
push
lock
cld
cmpl
fdivr
inc
add
cmp
mov
data16
pop
psubd
lea
mov
data16
pop
sub
xor
pop
fbstp
mov
inc
fcmovbe
pop
xor
and
cmp
sub
jge
jle
outsl
das
push
gs
add
inc
ret
inc
inc
fwait
cmp
pop
add
pop
pop
nop
push
std
jo
inc
out
adc
xorl
popf
sbb
or
dec
push
mov
push
mov
xchg
stos
pop
es
lock
xchg
sbb
lock
je
test
dec
push
inc
xlat
loopne
inc
inc
jmp
xor
push
insl
add
dec
fs
xchg
or
xchg
adc
pop
xchg
lods
xor
push
dec
mov
or
pop
gs
shll
ret
or
mov
push
in
clc
mov
pop
inc
mov
loop
jl
add
pusha
sbb
xchg
sbb
lods
adc
or
push
in
mov
adc
add
sahf
mov
mov
push
aaa
les
loop
adc
push
add
add
pop
add
in
movsl
xchg
push
xor
xchg
jb
sarl
mov
lods
add
loope
cmc
ficoms
push
ret
or
sti
pusha
jb
out
int3
jae
mov
adc
rol
sbb
data16
je
jmp
adcl
adc
movsb
mov
mov
pushf
sahf
sahf
add
push
and
cltd
adc
out
inc
adc
sub
inc
push
ljmp
push
clc
mov
adcb
pop
loope
cwtl
cmp
push
clc
lods
std
sbb
inc
inc
push
push
popf
test
jbe
inc
pop
xchg
addl
mov
xchg
dec
insb
push
pop
add
int3
popa
movsl
jle
lea
or
xchg
adc
leave
add
pop
frstor
sub
xchg
inc
push
fsubs
pop
xchg
fs
add
lods
xor
push
xchg
imul
in
or
and
cmp
sub
lcall
jb
add
fmul
arpl
or
imul
push
hlt
pop
sbb
dec
lds
sbb
jnp
mov
sbb
pop
mull
cmpl
dec
push
add
pushf
not
test
rclb
lret
xor
fbld
or
pop
fmul
fildl
adc
jnp
das
push
pop
movsl
divb
das
js
jle
orl
cmpl
in
andl
push
add
inc
add
in
sub
cmp
fsub
or
andb
rolb
add
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
orb
int3
adc
jne
lods
popf
jne
push
mov
jne
lock
or
stos
aaa
adc
icebp
pop
mov
push
vmptrld
xchg
sbbl
dec
cmp
adc
sub
push
mov
adc
ficoms
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
jg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
jmp
jnp
pop
lea
fldl
add
je
mov
ficoms
in
sub
push
jno
inc
mov
push
imul
and
dec
repz
jmp
insl
into
jno
mov
jae
scas
jg
and
lret
sub
add
inc
leave
daa
fs
loopne
xlat
xchg
std
and
mov
sub
decb
adc
cmpl
andb
and
xchg
add
xchg
rolb
cmc
orl
cs
or
fstpt
jb
push
inc
bound
or
or
sbb
push
and
fwait
ret
push
push
mov
cld
add
lahf
pop
call
mov
push
lock
pusha
cmp
std
push
mov
lcall
popa
adc
push
movsl
aas
push
popa
adc
add
inc
arpl
push
pop
rorb
or
aas
add
jno
xchg
movsl
gs
xlat
push
push
push
mov
pop
pop
pop
pop
jo
in
pusha
pusha
or
rcr
test
push
push
xor
inc
push
sub
out
addb
cltd
mov
mov
or
js
jl
add
mov
push
mov
notl
mov
dec
in
ljmp
loopne
push
rcll
lret
mov
int
and
sbb
adc
mov
sbb
repnz
jl
movl
stos
xchg
ficoml
push
aaa
outsb
in
addl
insb
or
cs
add
daa
mov
outsb
xor
es
pop
push
scas
sbb
ljmp
fmulp
xor
mov
mov
xchg
mov
push
pop
jmp
adc
mov
stc
sub
enter
or
sbb
jmp
mov
lock
xchg
es
mov
or
adc
cmp
imul
mov
cld
je
lock
cmc
jge
lods
xor
mov
push
mov
or
es
push
adc
jl
lods
rcrb
mov
in
inc
imull
mov
mov
rep
push
mov
mov
or
inc
cmp
popa
loope
mov
dec
aam
outsb
ss
je
lcall
cmp
mov
je
mov
daa
decb
cmp
jne
ss
in
insl
es
inc
jmp
in
into
gs
jnp
or
je
jg
and
adc
and
inc
ret
std
fwait
inc
mov
cltd
sbb
and
pop
sbb
andl
aas
dec
pop
xchg
adc
inc
pushf
add
pop
sbb
pop
and
push
arpl
add
ret
adc
cmp
into
sbb
jbe
push
cvtps2pi
mov
jne
mov
daa
or
sub
loop
call
add
in
jl
mov
mov
cmp
jne
or
cmpsl
push
push
into
pusha
or
cmp
xor
cmpsb
lods
pop
adc
sbb
sbb
mov
je
or
loope
repnz
rcrb
imul
aas
js
pop
jmp
mov
sbb
incl
and
cmp
inc
dec
movsl
or
stos
mov
mov
ret
sub
mov
cmc
adc
mov
mov
lods
sbb
mov
xor
jge
int
cltd
mov
pusha
je
cli
insb
xor
divb
ds
xchg
imul
jle
or
push
inc
add
push
sbb
mov
imul
jb
sbb
leave
inc
cmp
lea
push
mov
movl
mov
mov
arpl
lcall
or
mov
cmp
ljmp
hlt
mov
add
push
pop
jb
dec
mov
les
int3
push
sbb
inc
jmp
mov
in
and
cltd
mov
daa
lret
jecxz
and
and
rolb
push
pop
push
jle
push
mov
sar
push
popa
loopne
add
lea
or
iret
inc
mov
orl
int
and
push
jbe
call
cmpl
adc
add
fisubl
push
push
rolb
hlt
test
add
test
mov
je
ret
dec
aam
add
mov
mov
mov
inc
pusha
scas
xchg
push
cmpb
pop
sub
jns
add
mov
xor
and
or
loopw
push
fsubl
lea
call
test
add
xchg
sbb
mov
rclb
push
cmp
push
adc
pop
adc
push
loope
in
sahf
push
pop
push
test
pusha
es
pusha
push
mov
inc
je
adc
bound
jns
loope
and
mov
scas
ret
mov
clc
jmp
sub
push
push
stc
push
adc
push
popa
mov
test
mov
out
push
add
adc
lock
dec
cmp
mov
adc
pop
movsb
xchg
cwtl
inc
and
and
add
jo
cmp
and
insb
xchg
sti
in
mov
orb
rcrl
mov
cmp
cmc
loop
or
dec
jne
jns
pushf
cmp
add
lea
sbb
daa
adcb
jg
jbe
push
loopne
adc
in
shr
mov
and
cmpl
and
mov
jl
ficoms
int3
dec
faddl
iret
in
shlb
adc
sbb
jae
dec
add
adc
sub
sub
in
cmp
sarb
add
fldt
mov
add
push
outsb
mov
jmp
roll
xor
xchg
imul
push
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
inc
cmp
cmpsb
push
testb
loope
pop
pop
mov
inc
xchg
clc
sbb
add
and
movsb
mov
adc
test
xchg
sahf
push
cmp
jo
sti
movl
sbb
sbb
sahf
xchg
shl
mov
xchg
stos
imul
xor
dec
mov
add
xor
cmpb
jge
and
sub
sub
dec
fsubr
rep
ret
aam
pusha
imul
adc
add
cmp
inc
sub
cmp
jmp
pop
xchg
addb
adc
fmulp
test
enter
and
inc
fldl
lret
push
push
aaa
jo
shll
mov
cmpb
pop
add
adc
int3
push
adc
adc
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
hlt
sub
jno
mov
push
pop
add
push
in
pusha
sub
test
xor
shlb
and
pop
add
inc
inc
insb
inc
push
adc
mov
inc
inc
add
sub
test
movsb
mov
xlat
mov
or
cmp
or
or
popa
pop
mov
adc
sar
pop
test
and
pop
inc
test
or
add
cmp
push
adc
mov
insb
mov
mov
pop
sbb
out
jmp
push
loopne
or
mov
cmp
repnz
mov
add
xor
push
sub
jge
pop
add
cmp
jle
jne
jo
lods
push
add
push
push
shlb
push
mov
sbbb
xchg
xlat
loop
push
pop
ret
pushl
push
iret
mov
or
ja
cmpsl
jo
mov
std
add
iret
add
cmp
repnz
cmp
sbb
push
push
test
sub
push
xchg
loopne
mov
inc
inc
data16
in
pop
dec
inc
pop
cmp
pop
iret
mov
mov
stos
cs
jge
xor
sbb
pop
movsl
mov
xchg
shrb
dec
loopne
xchg
sahf
or
cmc
bound
popa
or
mov
popa
add
sub
aam
or
clc
call
ret
iret
xchg
or
cmp
or
fcmovb
sub
or
movsb
cmp
bound
sub
adc
push
inc
or
xlat
inc
sbb
cwtl
dec
cli
xor
or
push
loop
lock
faddl
cmpsl
dec
sbbl
or
loop
pop
mov
jbe
jb
xchg
cmc
lret
stos
xor
push
xchg
and
add
xchg
xlat
xlat
push
dec
andl
in
push
leave
cld
adc
lcall
and
adcb
and
outsl
iret
or
push
rclb
cwtl
adc
pop
jnp
inc
mov
adc
out
pusha
popa
adc
pop
mov
jbe
dec
in
push
incl
out
cmpsl
mov
push
and
out
ja
xlat
mov
push
pop
sbb
stos
rcll
sbb
sbb
or
and
pop
psubb
sub
inc
adc
ret
dec
sti
outsb
adc
xchg
bound
add
push
adc
imul
add
cld
xor
pop
or
sub
ljmp
cmp
sbb
mov
push
arpl
add
cmp
inc
xor
scas
sbb
add
jo
scas
push
fidivl
inc
add
dec
lea
mov
or
lret
sbb
inc
or
fadd
sub
inc
push
fsubl
push
in
into
mov
subb
mov
xchg
stos
mov
lret
or
or
repz
es
aad
sbbb
pop
push
jae
mov
sbb
fsubl
add
dec
lcall
outsl
aaa
xor
adc
pop
fdivs
dec
and
nop
pushf
fsubl
leave
sbb
mov
mov
mov
inc
jnp
insl
js
sbb
sub
dec
cmp
add
shll
jge
jge
mov
cld
or
movl
or
adc
add
pop
xchg
jecxz
movl
movsl
jne
dec
subl
push
mov
nop
dec
imul
xchg
test
cmp
jne
out
or
and
inc
lods
cltd
les
lea
inc
push
or
mov
js
xchg
mov
ficompl
and
or
incl
and
push
inc
mov
add
call
jns
and
or
push
and
sub
add
dec
loope
dec
add
adcl
mov
and
push
pop
lock
cmp
es
mov
mov
cld
sub
xchg
rcl
and
sbb
cmp
loope
sbb
inc
or
in
or
and
pop
jbe
xchg
sbb
mulb
push
enter
push
sub
jge
lret
add
mov
and
push
and
aaa
insb
dec
pop
mov
inc
jae
mov
push
push
adc
subl
pop
arpl
dec
sbb
roll
inc
in
sbb
ss
imul
aaa
rcr
xor
pushl
stc
sbbl
into
jnp
pusha
sahf
jmp
jge
adc
mov
mov
ret
shll
cwtl
pop
mov
mov
lea
jle
push
icebp
rclb
cld
sub
and
ret
lea
ret
in
cmpl
pop
adc
or
push
mov
mov
jo
andb
dec
inc
push
in
dec
addb
jo
jnp
add
adc
xchg
adc
mov
pop
mov
and
or
mov
sub
fs
popf
ljmp
dec
lods
or
ljmp
mov
xor
or
movsl
cmp
and
sbb
dec
cltd
inc
ss
jmp
sbb
cwtl
xchg
faddl
aam
loop
test
cmp
push
sub
dec
mov
lock
iret
pusha
sub
inc
jmp
xor
sbb
popf
lret
je
cmp
xchg
lock
adc
mov
lods
scas
jge
bound
xchg
mov
fcompl
and
cmp
xchg
xor
fildll
fcoms
data16
rclb
inc
sbb
dec
cli
cmp
hlt
inc
jbe
adc
inc
jmp
divl
sbbl
cld
clc
mov
loopne
push
sbb
xchg
popf
fistps
rolb
bound
xor
cmp
lret
pop
sahf
pop
xchg
dec
fdivl
ret
mov
mov
js
insb
stos
add
add
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
mov
fildll
sbb
orl
mov
cmp
pop
push
aam
jne
cmp
push
fsubr
adc
inc
dec
outsb
mov
adc
add
dec
dec
dec
mov
push
movsb
aam
outsl
test
cmp
les
fdiv
inc
mov
mov
shrb
arpl
cs
lldt
hlt
daa
pop
ja
les
cmp
xor
dec
and
pop
cmp
mov
ss
iret
jmp
mov
mov
push
push
outsb
and
mov
or
lock
sbb
pop
mov
mov
ret
jo
cs
movsb
cltd
cltd
imul
push
mov
fwait
xor
xchg
inc
sti
dec
cmp
setbe
cmpl
pusha
jecxz
sbb
pop
cmc
jnp
mov
jle
and
xor
mov
pop
pusha
test
mov
lea
cwtl
xchg
popa
xchg
pop
push
ret
jb
and
hlt
inc
call
fbstp
inc
and
jne
inc
adc
loope
popf
inc
and
push
cltd
jle
jmp
imul
fsubl
sbb
push
sbb
mov
hlt
jne
ficoml
insb
leave
sub
cmp
shrb
add
jbe
sub
add
mov
test
push
icebp
das
movsb
push
pop
or
add
fstl
ljmp
daa
push
inc
push
adc
loopne
jle
ds
jb
jnp
push
push
inc
clc
adc
inc
push
rorl
push
shlb
jbe
cmp
shrl
xchg
scas
aas
xor
or
pop
xor
pop
and
dec
cwtl
jmp
xor
push
jp
jp
ds
fs
cmp
jne
je
push
shl
hlt
sub
add
out
xor
test
dec
add
test
rolb
mov
mov
mov
test
fsubs
inc
add
sbb
sbb
mov
popa
xor
or
dec
adc
sub
sbb
mov
mov
pop
mov
xchg
and
cli
adc
xchg
pop
adc
repnz
stos
inc
jg
and
das
dec
fwait
pop
adc
push
and
mov
dec
mov
or
adc
test
adc
adc
dec
xor
push
es
leave
out
mov
rorl
push
pushl
push
sbb
jl
jge
add
dec
cmp
ficoms
cmp
icebp
xor
dec
clc
mov
rcrb
pushl
aas
mov
xor
daa
xchg
adc
out
adc
push
nop
adc
adc
adc
adc
and
adc
aas
inc
push
cltd
adc
int3
mov
jno
adc
cmpw
pop
xchg
add
push
cmp
stos
xchg
xor
sub
pop
mov
add
lret
dec
ja
push
xor
mov
inc
lods
lods
sub
push
jl
sbb
adc
loopne
adc
mov
or
aam
mov
mov
xchg
fs
mov
pop
insb
lock
inc
and
das
loopne
mov
jmp
cmp
bound
cmp
testl
jbe
daa
or
or
cmp
dec
adc
push
movsb
cmp
dec
sbb
js
in
lea
daa
fsubrs
in
mov
inc
xchg
movsb
stc
mov
push
les
pop
pusha
test
in
cmp
mov
dec
mov
ss
xchg
push
aaa
sbbl
lret
mov
inc
push
add
xor
jnp
ljmp
sbb
jns
cmp
outsb
nop
xor
test
popf
call
test
test
mov
lret
popa
popf
inc
jge
jb
aam
clc
roll
inc
rolb
lea
jle
pop
insl
imul
imul
push
lods
imul
sub
cmpsl
add
and
scas
je
cmp
push
add
dec
xchg
rol
out
mov
nop
mov
add
cmp
aam
pop
fstl
mov
and
mov
inc
or
and
xchg
into
push
pushf
int
jnp
lods
pop
sahf
jmp
xor
dec
cmp
out
fimuls
cwtl
or
test
inc
lock
adc
sub
inc
inc
add
ret
xlat
push
es
mov
clc
jo
mov
mov
adc
jno
sub
mov
or
stos
add
adc
out
hlt
push
push
addl
mov
push
adc
and
and
xor
sub
cmp
loop
cmpsl
jle
clc
add
adcl
out
std
jmp
push
cmp
pop
mov
or
in
add
or
rolb
and
movsb
and
cmp
push
ret
inc
negb
sub
hlt
and
test
cwtl
mov
sarb
pop
fldt
mov
xor
ret
pop
mov
ret
imul
pop
adcb
push
xor
add
dec
ret
and
fstps
ds
sbb
out
push
jae
and
mov
push
cmp
test
lret
shrl
dec
fs
or
out
test
nop
dec
mov
mov
test
and
imul
pop
scas
or
mov
inc
sbb
inc
push
movsl
lahf
dec
cmp
jge
dec
push
xchg
sub
rorb
mov
push
add
jno
pop
add
repnz
jno
jecxz
pop
mov
mov
rorb
xor
mov
lcall
mov
lea
shrb
les
rolb
roll
or
inc
inc
or
test
popa
into
push
cmp
data16
push
add
pop
inc
jno
push
test
clc
mov
inc
test
adc
push
jae
cli
adcl
mov
sar
loope
dec
adc
roll
push
push
mov
cmpl
sbb
in
pop
push
mov
sbb
add
inc
inc
lret
sub
daa
mov
dec
xchg
or
gs
lret
pop
rorl
aad
jp
into
or
int
dec
jmp
test
fs
sbb
mov
xor
shl
pop
inc
jmp
jbe
adc
adc
sbb
sysret
in
hlt
stc
lcall
subl
pusha
pop
add
mov
mov
fnstsw
push
mov
aad
or
dec
sub
inc
push
jne
fistpll
jne
cmp
add
sub
rclb
rcrl
mov
bound
jns
fiadds
push
inc
and
inc
or
xchg
mov
hlt
sub
inc
push
inc
cmp
test
rolb
cmpl
and
pop
sbb
push
stos
outsb
and
andl
lea
fisubl
cwtl
sti
adc
test
rol
push
jecxz
and
xor
sbb
pop
fstpl
sbb
add
sub
xor
cs
jl
xor
dec
jl
add
push
dec
cltd
pushf
jge
push
jns
es
rorl
enter
flds
daa
mov
sbb
adc
inc
inc
rorb
bound
add
dec
es
inc
dec
xchg
push
scas
or
adc
pop
lcall
loopne
movsl
and
dec
inc
cmpsb
jmp
mov
adc
dec
push
add
adc
sub
jne
dec
fnstsw
add
dec
add
xor
fs
xchg
push
pop
sar
incl
jo
dec
sub
rorl
ficoms
add
push
adc
xor
loope
enter
adc
pop
add
or
push
pop
jge
inc
lret
or
add
adc
xor
or
add
adc
dec
xchg
mov
addb
inc
add
test
push
adc
add
add
popa
pusha
nop
data16
and
sub
adcl
shll
add
fs
jmp
addl
mov
xchg
pop
test
and
pusha
xor
lods
rol
sub
cmp
and
adc
or
mov
out
cmp
lea
push
dec
jae
shlb
in
cmpsb
inc
rcrb
test
xchg
mov
add
js
jae
cld
in
call
lea
jmp
cmpl
sub
shll
push
push
push
loop
aam
push
xor
ficoml
mov
in
rorb
push
addl
mov
add
add
sub
or
or
xchg
dec
adc
shrl
add
xor
mov
call
add
hlt
lcall
andl
add
aad
pop
xor
pop
pusha
add
rclb
shl
and
xchg
sbb
sub
mov
add
out
add
jb
inc
add
push
and
pop
rcll
xor
pop
sarl
sti
add
pop
and
loopne
fisubrl
pop
pop
add
xor
push
aaa
adc
jnp
lea
movsb
inc
stos
xchg
test
mov
mov
cmp
dec
jo
xchg
movsb
mov
jg
inc
sub
mov
xchg
mov
mov
mov
pop
cltd
jecxz
inc
push
sub
movl
xchg
push
je
cwtl
xchg
je
add
out
pop
jmp
cmp
nop
mov
iret
xchg
js
cmp
stc
xchg
and
sub
or
test
xchg
add
cmp
pushl
xchg
test
or
fmull
pop
mov
add
mov
dec
ds
dec
jb
insl
int
fimuls
jmp
xor
mov
je
cmp
test
jb
pop
mov
sbb
clc
push
push
and
inc
jo
addl
inc
lahf
sti
sbb
sti
cmp
inc
and
cmc
std
cmp
mov
add
dec
enter
sahf
test
jb
addr16
push
shlb
pop
mov
push
or
test
fstps
add
imul
jae
push
xchg
pop
aaa
mov
adc
jl
add
mov
xchg
outsb
aad
or
pop
loope
sub
mov
add
xor
add
testb
adc
mov
pusha
mov
push
adc
pop
or
jnp
cmp
scas
add
mov
cmp
data16
andl
in
fsubrs
fdivl
or
je
test
addr16
rorb
clc
jne
mov
inc
lret
jle
push
test
cmp
dec
or
sub
shr
test
loopne
cmp
add
es
or
daa
dec
imul
jbe
sbbl
hlt
loop
mov
or
or
mov
ds
add
jbe
pop
xor
cmp
call
add
sbb
fnstenv
mov
js
rorl
push
fistl
cld
loopne
fnstenv
mov
cld
lods
push
mov
adcl
adc
push
lret
dec
inc
mov
xor
pop
xchg
or
push
cmp
adc
inc
in
setg
xor
add
lea
in
jne
insl
or
or
ret
pop
pusha
push
lret
mov
sahf
mov
mov
hlt
neg
sbb
and
bnd
in
testl
push
sub
push
adc
insb
les
ret
leave
dec
mov
test
js
push
mov
add
jmp
je
pusha
leave
jge
sbb
add
add
sbb
mov
and
push
lret
mov
mov
cmpl
jne
cmp
jbe
or
jne
push
adc
mov
sbb
movsl
add
hlt
shld
add
ds
data16
mov
pop
push
push
xchg
popa
mov
std
cs
cmc
jmp
pop
jl
pop
mov
addl
dec
xchg
rcr
or
adc
sbb
and
fists
jae
cwtl
sbb
pop
stos
mov
or
mov
scas
push
push
cmp
loope
inc
add
and
js
adc
nop
test
xchg
xchg
jg
xor
inc
dec
ss
add
test
pop
inc
xorb
imul
or
dec
shlb
pushf
push
pushf
or
nop
jnp
ret
jnp
inc
out
lret
ucomiss
ds
das
push
adc
das
repz
je
inc
pop
inc
in
xchg
pop
nop
daa
das
or
inc
std
adc
inc
or
sub
xor
das
mov
das
lcall
add
leave
loopne
adc
push
sahf
or
mov
and
data16
leave
ret
mov
or
movsl
clc
popa
add
cmp
jmp
pop
ds
push
daa
pop
cli
and
cmp
imul
sbbb
mov
and
cmpsb
dec
popf
mov
sbb
pop
xor
or
adcl
loopne
mov
jmp
loopne
or
mov
out
add
iret
ret
pushf
out
sub
popl
jecxz
push
aas
push
mov
cld
aaa
xor
aam
mov
sub
shlb
cmpb
adc
or
xor
lock
roll
mov
cmp
mov
add
xchg
xchg
or
xchg
fstpl
out
aad
cmp
mov
jmp
je
int
xor
and
sbb
sub
push
test
test
nop
xor
xchg
cwtl
and
cwtl
mov
insl
push
cmpb
dec
dec
pusha
sti
jp
jb
push
jae
cltd
or
jp
add
add
and
push
xchg
push
jb
jbe
mov
test
jp
cmp
add
je
cmp
lahf
and
adc
dec
out
lods
push
js
xorl
and
loopne
jp
jae
sbb
cltd
push
pop
add
mov
std
cmp
add
leave
outsb
inc
insb
popf
in
cmpsb
pop
add
pop
out
or
test
dec
or
push
lret
pop
sbb
call
mov
xor
fwait
jp
mov
or
ds
loope
fstpl
cltd
mov
mov
je
jmp
push
ss
pop
mov
inc
scas
mov
fstps
addr16
int3
aam
sarb
addr16
adc
lea
je
dec
add
jle
test
or
fsubl
xchg
lea
xlat
hlt
xor
dec
push
mov
sub
test
lds
fdivl
or
scas
xor
and
loop
les
add
pop
xlat
call
add
loopne
js
adc
push
je
push
pop
jl
push
es
push
cmpb
or
adc
and
sub
sub
adc
and
inc
sub
mov
xor
test
inc
jb
add
les
mov
fsin
mov
xchg
sbb
mov
mov
jae
inc
shrb
std
clc
jnp
out
sbb
add
or
xchg
cmp
aam
cmp
fcomps
add
mov
rcr
and
pushf
pusha
sbb
mov
mov
or
ficoms
mov
nop
test
or
call
nop
push
jge
xchg
cli
sahf
lds
lock
mov
fdivrs
cmp
inc
jle
push
push
add
pop
out
xchg
push
pushl
dec
pop
arpl
in
rcrb
or
fnstsw
inc
or
mov
fisttps
aas
sarb
ret
sub
outsb
rcrl
xchg
or
xchg
int3
rcr
or
sti
jb
mov
sbb
mov
mov
sub
xor
cwtl
scas
push
add
lea
fistps
in
or
jbe
xor
test
sbb
pop
aaa
mov
pushf
xor
je
xor
sub
cmp
inc
sub
test
and
je
pop
sbb
push
jae
lea
jg
inc
dec
ja
cmpb
jne
fidivl
mov
out
addr16
jge
lea
push
pop
push
sbb
xchg
jae
stc
xor
cld
mov
jb
sub
orb
addr16
mov
lea
push
or
sbb
push
xchg
fmulp
or
dec
mov
loope
xor
lret
or
in
adc
mov
leave
jmp
push
inc
sub
mov
test
dec
and
mov
push
xchg
xchg
fs
push
pop
dec
insb
movsl
adc
add
mov
or
jo
fisttps
mov
movsb
loope
add
aam
cmpsb
pop
push
sbb
mov
mov
and
fwait
and
mov
je
mov
jo
xor
jae
push
mov
or
adc
cmp
adc
loopne
cmc
testb
xor
dec
and
inc
and
sub
inc
push
lods
cmp
bound
cmp
xor
push
data16
ljmp
jle
movsl
sub
or
mov
jb
pop
adc
mov
mov
pushf
nop
and
or
fcoms
add
stos
pop
push
add
xor
push
pop
pop
dec
or
xchg
imul
in
adc
jo
or
add
mov
jmp
add
mov
lods
jmp
stos
add
cmpl
in
add
adc
pop
movsl
jns
inc
cmpsl
add
xor
shll
and
lock
or
popa
sbb
and
jo
das
add
rorb
adc
mov
in
aad
mov
je
movsl
jne
imul
ss
les
orl
test
adc
ss
mov
scas
jbe
test
out
jmp
add
xor
adc
push
pushl
pop
sbb
xchg
mov
mov
aas
cmp
mov
mov
daa
bnd
mov
adc
cmp
push
cmpb
ret
push
xor
lea
push
sub
sbb
les
adc
add
stos
inc
dec
filds
lock
pop
ret
mov
or
pop
scas
sbb
dec
sub
cmc
loopne
dec
sti
xor
leave
pusha
clc
jge
cmp
fdivl
cmpb
out
lcall
add
out
push
cmp
cmp
sub
mov
jb
cmp
and
pop
adc
lock
movb
add
mov
push
pop
sbbl
jb
sub
sub
movsb
repnz
xchg
out
push
sti
test
dec
jp
add
sub
lods
mov
insb
neg
call
sub
fst
dec
jbe
add
cmc
dec
in
rorl
pop
daa
push
ds
shlb
push
cmp
jbe
mov
dec
es
popa
rorb
jb
add
test
lock
adc
lock
lea
js
ret
push
test
in
pushf
mov
or
add
xlat
push
cmpsl
and
out
in
mov
push
aad
xor
or
aad
sub
into
dec
jp
mov
adc
sbb
nop
lcall
sub
int
pop
cmpsb
loope
or
je
xor
jge
cmp
lds
add
addr16
lea
sbb
lahf
mov
cmp
jb
adc
sbb
inc
mov
dec
mov
pshufw
mov
inc
adc
cmp
sub
add
or
add
es
sub
test
mov
and
or
or
and
sahf
adcb
cld
xchg
jmp
jecxz
test
sbb
adc
or
in
mov
outsl
jnp
add
cmp
arpl
addr16
xor
mov
push
imul
mov
sbb
sbb
nop
lock
pop
in
or
enter
add
push
push
jbe
cmp
sbbl
mov
std
push
or
jecxz
mov
arpl
or
mov
rorl
add
sbb
test
iret
push
cmp
adc
lods
mov
or
or
pop
imull
jo
outsl
test
push
hlt
mov
cmp
pop
pop
sbb
shlb
pop
jl
loope
cmp
add
scas
lahf
popa
push
add
add
and
iret
mov
pop
cld
mov
jmp
mov
adc
xor
jbe
cmp
mov
push
ret
scas
lods
mov
cmpl
iret
sbb
pushl
sbb
or
sahf
push
mov
mov
push
push
ror
in
xchg
movsb
sub
cmpb
pop
movsb
es
sbb
cld
dec
mov
adc
aaa
lock
ljmp
cmp
adc
push
loopne
aas
mov
cmp
mov
popa
add
xchg
repz
pop
and
dec
iret
inc
mov
addl
mov
sub
dec
push
add
in
or
and
jle
and
mov
or
mov
pop
jno
mov
adc
dec
inc
pushf
pop
fistpl
adc
or
mov
sbb
pop
dec
dec
sub
cmp
add
bound
call
ljmp
enter
ja
mov
ret
fsubrl
sbb
add
mov
pop
loope
lods
add
xchg
mov
roll
pop
push
pop
sub
insb
and
mov
mov
rcl
into
add
pop
pop
mov
mov
push
dec
aad
mov
nop
js
and
orb
sub
pop
sub
js
nop
mov
mov
pop
cmpsb
ds
add
adc
sub
dec
leave
adc
mov
xchg
test
and
dec
add
and
push
mov
or
cmp
fisubl
sub
push
sti
rclb
stc
seto
and
jmp
jns
fmull
in
lcall
adc
or
mov
pop
stos
adc
adc
push
out
mov
push
or
mov
cmp
or
movl
cmp
or
jb
pop
push
cmp
ret
push
xlat
mov
sub
or
mov
mov
aas
cld
jo
adc
pop
mov
std
adc
lods
jnp
fsts
icebp
fimuls
adc
cmp
cmpsb
cs
loopne
add
out
xor
xorb
or
in
inc
pop
aaa
pushf
inc
adc
pop
fwait
ret
loope
in
leave
mov
or
into
push
push
out
out
push
imul
add
ljmp
jbe
lcall
mov
add
dec
add
mov
push
and
push
jo
ret
fsts
pop
push
mov
lods
mov
xchg
adc
push
cmpl
loop
or
inc
dec
std
mov
das
jmp
cmp
adc
jne
clc
push
push
psrlw
push
push
js
fdivrl
cld
push
cmc
push
adc
jno
mov
movsl
ret
mov
psrlq
inc
rcr
sbb
dec
push
xchg
mov
pop
and
xchg
out
nop
or
jecxz
sbb
sbb
and
test
dec
clc
add
ret
jb
and
sarl
mov
cvtps2pi
or
dec
aam
xchg
iret
addr16
pop
in
pusha
pop
pop
inc
pop
roll
push
dec
cmc
xchg
sub
popa
inc
les
pop
jle
sub
insb
mov
in
test
mov
sbb
imul
or
arpl
out
mov
jb
push
sub
add
orb
je
scas
ljmp
mov
mov
mov
adc
dec
outsl
hlt
stos
or
mov
dec
into
inc
mov
ret
jbe
xor
push
cmc
daa
rcrl
ret
or
dec
cli
push
ret
ds
push
xchg
and
pop
dec
inc
sbb
repz
iret
mov
add
add
sti
inc
jmp
js
mov
xchg
dec
ss
add
sti
dec
jb
add
clc
xor
or
add
sub
add
loopne
sbb
jne
mov
jnp
pop
pop
fs
push
push
sbb
mov
mov
popa
mov
cmp
enter
mov
add
jp
push
sbb
rcrl
daa
jge
adc
sbb
js
cmp
mov
pop
xchg
cmp
hlt
fcmovb
adc
mov
cmp
jl
dec
loop
inc
subl
into
xchg
add
je
cmp
sbb
push
lea
or
dec
es
adc
jmp
sub
int
lods
mov
inc
ljmp
or
and
pop
mov
push
sub
push
movl
inc
or
mov
jnp
mov
enter
inc
or
pop
rcll
dec
mov
mov
std
push
repnz
dec
in
rcr
jae
scas
xor
lods
ja
pop
sub
push
arpl
ljmp
adc
mov
in
out
inc
idivb
push
cmp
dec
push
pop
or
loope
out
pusha
jbe
mov
into
add
in
loope
shl
fdivrs
jg
idivb
loopne
clc
push
cmp
lea
into
xor
mov
das
outsl
push
xor
add
inc
loop
dec
inc
or
loop
dec
inc
jl
mov
leave
cltd
add
std
roll
xor
dec
or
test
mov
stos
adc
mov
sub
dec
dec
jns
adc
rolb
mov
sub
mov
addb
adc
rorb
pop
adc
es
add
jmp
das
imul
sbb
cld
or
mov
outsb
imul
xor
or
inc
movb
or
inc
ret
setb
or
push
xchg
xchg
mov
xchg
nop
xchg
or
cmc
mov
and
cs
jle
add
aam
xor
push
outsl
nop
mov
dec
fisubl
jmp
lods
jae
adc
and
pushf
jo
push
scas
sub
dec
push
adc
and
adc
xor
dec
xchg
xor
mov
movsl
mov
xchg
mov
add
js
mov
push
add
or
sbb
push
xor
aas
push
push
ds
xlat
pushl
sub
jmp
mov
loopne
fs
lret
xchg
shll
push
cmp
daa
bound
xchg
inc
in
pop
pop
pop
outsb
mov
pop
mov
inc
mov
adc
loope
imul
push
mov
sbb
xchg
inc
adc
daa
push
mov
phaddd
call
clc
sarl
push
lods
pop
loop
and
inc
loop
mov
cmc
rorb
popf
les
add
test
add
xor
arpl
rcll
mov
sbb
mov
and
lea
cmp
sbb
es
movsl
insl
jp
push
and
jne
adc
sbb
dec
repz
sub
mov
jg
jne
or
jne
cltd
or
add
in
int3
daa
jno
adc
push
ljmp
mov
into
andb
pop
add
cmp
lret
inc
add
lea
fcoms
jbe
lret
clc
bnd
sbb
sbb
sbb
in
test
lods
repnz
cld
notb
popa
icebp
mov
cmp
push
in
movsl
pop
rcrl
mov
mov
or
push
xchg
push
pop
pop
stc
movsb
inc
mov
inc
rorb
jge
push
outsb
xor
sarb
sub
mov
push
mov
out
dec
xor
push
push
test
fiaddl
in
ret
imul
enter
mov
cmp
push
sbb
sarb
scas
insl
popf
pop
addr16
push
ret
aam
pop
jecxz
xorb
jg
and
jl
pushf
pop
sbb
pusha
pop
mov
loop
rcll
cmp
push
add
jmp
gs
ds
adc
lret
cmp
insl
adc
fsts
adc
daa
adc
je
mov
js
loope
loope
aam
push
rolb
xchg
cmp
int3
dec
andb
andl
mov
fs
rolb
push
jne
dec
push
fidivl
cli
or
pop
sub
sbb
jne
out
sarb
dec
push
arpl
xchg
push
je
xor
outsl
sbb
xor
insb
jne
push
and
inc
jno
jne
scas
aaa
andb
jnp
push
mov
mov
mov
leave
jo
int3
or
cmp
je
add
inc
sbb
in
push
or
rorl
lods
xchg
fwait
aam
mov
and
fsubs
xlat
push
data16
jg
cmp
sbbl
outsb
push
jnp
push
cmp
dec
xor
pop
push
push
pop
sti
inc
mov
inc
fdivrl
jl
mov
mov
int3
jecxz
add
push
xor
loope
mov
mov
in
push
cmc
pushf
lds
pop
xor
pop
shll
and
sbb
movsb
cmpsb
loopne
jns
outsl
fmull
mov
push
outsb
movb
stc
mov
loope
fs
jne
add
or
fidivs
mov
mov
icebp
test
add
adc
test
sbb
imul
or
fldcw
lock
xchg
xchg
mov
or
movl
or
fwait
mov
movsb
xlat
movsb
or
and
adc
jecxz
cmpb
dec
or
cmp
inc
sbb
inc
or
add
stos
rcrb
xor
jbe
jns
jb
mov
or
clc
mov
jae
orl
bound
xchg
add
sbb
dec
lea
cmp
push
pusha
xor
shll
push
push
mov
enter
or
call
sbb
pushf
cwtl
or
add
adc
mov
adc
sub
pop
jbe
in
adc
xor
addr16
scas
into
xor
imul
movl
lods
add
loopne
nop
in
jle
movb
cmpsl
or
add
les
ret
pusha
xchg
mov
mov
pop
xchg
sub
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
lds
jbe
sub
adc
dec
xor
push
and
push
jo
mov
out
loopne
inc
push
pop
sbb
mov
jne
mov
push
jo
mov
cmp
and
lods
xor
pop
adc
and
dec
iret
add
push
adcl
shlb
movsb
fstpl
xchg
add
xchg
pusha
cmp
mov
and
dec
inc
mov
dec
add
sbb
inc
out
jne
sbb
adc
or
xchg
lcall
cmp
sbb
es
mov
mov
notl
fbstp
mov
xor
jo
cmpsb
xor
arpl
adc
adc
mov
insl
push
cmp
nop
dec
and
inc
sub
sub
imul
shl
ret
mov
sbb
add
xlat
pusha
jo
ds
and
insb
push
aaa
fldl
inc
xor
mov
fdivrl
xorl
addl
lock
push
jne
orl
ret
loope
std
dec
adc
imul
popa
xorl
adc
std
jmp
and
xchg
add
divb
mov
adc
das
call
movsl
stc
fldl
sar
addr16
xchg
out
lds
add
out
cmp
sub
outsl
push
clc
sub
mov
inc
xchg
les
mov
add
mov
stc
push
jne
mov
scas
movsb
or
xchg
addr16
jne
cmp
add
pop
mov
je
xor
mov
xor
es
ja
fwait
pop
lahf
sub
mov
hlt
cld
pusha
mov
push
dec
mov
add
adc
sbb
aam
add
into
js
mov
idivb
mov
fs
pop
sbb
rol
in
mov
dec
inc
les
andl
sub
pop
xchg
push
jne
popf
lock
pusha
movsl
lahf
mov
jle
popf
sbb
jo
cli
out
fidivrs
and
or
inc
lods
pop
mov
dec
jb
popa
sbb
outsb
push
sbb
cli
mov
orb
dec
or
lods
ret
les
cmpl
sqrtps
faddl
out
movsb
sti
insl
adc
or
sub
adc
inc
and
push
roll
out
fcmove
and
jmp
call
leave
mov
push
sub
or
sub
adcb
je
adc
lea
notb
sbb
xor
and
mov
and
jp
adc
orb
push
pusha
mov
int3
lock
inc
mov
mov
push
inc
inc
lock
fcoml
or
aaa
sbb
je
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
pop
scas
out
movsb
xor
push
mov
sub
idivl
cwtl
decl
xchg
inc
pushf
cmp
pop
fistpl
cli
je
popf
add
adc
or
adc
inc
pop
mov
push
jo
sbb
adc
push
push
js
ss
fwait
inc
and
mov
cmpsl
fwait
jmp
push
jne
or
add
xchg
push
addb
add
lock
nop
dec
or
lock
enter
lock
addr16
lahf
push
rorb
and
out
lods
sub
push
push
pop
adc
adc
mov
sub
aam
inc
mov
movsl
movswl
in
push
mov
lret
add
and
rcrb
lret
sub
xor
pop
loope
lods
cmp
xor
or
push
flds
pop
sbb
sbb
add
sbb
dec
fcoms
arpl
aam
shlb
adc
inc
inc
incb
out
test
pop
mov
fadds
jl
sbb
mov
xchg
insl
jbe
clc
jne
adcb
add
nop
cmpsb
subl
jns
push
sbb
adcl
insb
stc
jl
jne
push
test
popa
fwait
add
ficoml
and
mov
int3
cs
mov
mov
cmp
testl
aas
jne
outsb
fdivl
fldl
movsb
xor
shrb
loopne
cmp
mov
mov
pusha
mov
ret
mov
int
fidivrs
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
mov
mov
or
xchg
add
orl
clc
pop
arpl
mov
sub
imul
ret
sbb
and
dec
sete
lock
add
cwtl
or
and
out
cmp
hlt
pop
add
push
addb
adc
test
cmp
fdivs
mov
mov
sub
pusha
push
mov
cmp
loopne
sbb
inc
add
arpl
loopne
shll
and
cmp
mov
jmp
mov
addb
sbb
xchg
dec
insb
or
movsb
mov
fidivrl
add
popa
and
inc
sbb
push
dec
nop
dec
cmp
inc
repz
and
adc
xor
dec
pop
test
pop
adc
ret
dec
sahf
and
pop
out
push
lea
and
mov
cli
sub
xchg
cmc
push
xchg
dec
gs
sub
mov
push
push
push
or
sbb
push
adc
fiadds
mov
mov
push
push
js
cmpl
jecxz
sub
push
fmuls
lds
push
jp
mov
rolb
je
push
inc
add
testl
pop
mov
mov
rcrb
orl
aaa
xchg
add
xor
xor
fisttps
dec
pop
mov
movsl
mov
js
jl
push
dec
mov
sbb
popa
lock
push
adc
sbb
jmp
daa
subl
mov
jg
hlt
push
mov
and
pusha
or
mov
xor
push
enter
jmp
aaa
cmp
and
pop
dec
sbb
fdivp
fmulp
mov
cmp
or
imul
fidivl
and
xchg
out
push
and
sbb
movsl
inc
and
mov
ss
and
test
fimull
je
inc
orl
aaa
stc
adc
rcrl
xchg
ret
sub
push
aam
jbe
xchg
mov
adc
adc
xchg
mov
scas
subl
or
fsubrl
jno
inc
push
or
pop
fstpt
adc
xor
and
and
sub
in
adc
lds
sub
sbb
rolb
popf
inc
jg
pusha
aam
insb
adc
pop
hlt
lods
xor
push
adc
push
clc
cmp
or
cmpsl
ret
shrl
push
pop
scas
push
mov
dec
jnp
out
push
js
add
xchg
add
sti
cmp
push
add
pop
call
xor
pusha
mov
jb
and
loopne
lock
xchg
arpl
inc
xchg
pop
pop
mov
adc
or
or
add
imul
and
mov
call
add
inc
xor
sahf
push
mov
sub
fadds
leave
jo
js
clc
add
xor
mov
pop
sub
mov
fnsave
xchg
push
xor
push
test
push
push
or
sbb
pop
fimuls
push
mov
call
xchg
push
mov
inc
imull
pushf
adc
add
add
and
sbb
xorl
inc
add
xchg
jbe
sbb
xchg
jnp
dec
leave
add
xor
push
nop
mov
push
xchg
andl
pusha
dec
xchg
pop
and
movq
push
push
sahf
mov
fwait
xchg
cmp
or
dec
inc
in
add
pop
adc
adc
sbb
insb
jmp
pop
mov
pop
push
inc
jmp
sbb
add
std
ljmp
movb
jnp
cmp
pusha
sub
imul
out
sub
dec
pop
fcmovb
je
inc
or
add
xorl
xchg
mov
xchg
lods
push
sub
mov
inc
cmc
js
aas
scas
and
les
jmp
pushl
mov
loopne
jne
cmp
pop
add
push
orb
push
fmull
or
dec
push
inc
xor
jp
nop
rclb
int3
push
ret
or
es
pop
pop
mov
inc
negb
dec
push
sub
mov
jl
andl
push
adc
add
ret
pop
addb
stos
cltd
dec
xlat
pop
add
pop
dec
xor
dec
mov
or
cmp
sahf
dec
xor
pop
jo
push
int3
jo
sbb
adc
jbe
mov
sbb
adc
fbld
adc
mov
adc
or
adc
adc
sbb
test
vunpcklpd
shl
push
ret
push
xor
call
and
xor
xor
je
call
pop
loopne
sarl
adc
cmpsl
xor
pop
jmp
mov
loope
and
adc
lock
jno
adc
pop
pop
cmp
jl
push
xor
inc
rcl
nop
push
popa
fsubs
mov
push
icebp
subb
add
pop
shll
xor
push
pop
lock
orl
xor
mov
or
jle
xor
scas
add
cs
cmp
outsl
test
mov
imul
add
scas
adc
xchg
cmp
or
outsl
and
dec
or
dec
jl
loope
xor
mov
fistl
xorb
or
xchg
les
pop
mov
fisttps
mov
inc
mov
leave
pop
adc
sub
pop
xchg
cmc
mov
mov
out
cmpsl
sub
inc
insb
xor
add
mov
aas
xor
or
mov
xchg
lock
add
inc
push
pop
adc
add
popa
jmp
movsl
sarl
aaa
push
jb
jb
add
add
jge
sbb
movsl
push
fdivrl
scas
dec
enter
or
or
xor
mov
inc
rclb
data16
push
test
add
xchg
loopne
adc
or
or
add
sbb
testb
leave
xlat
fs
mov
cmp
jns
push
mov
xchg
int
mov
cmp
and
call
or
neg
adc
xchg
or
jmp
jo
or
mov
es
mov
shrb
push
mov
outsb
movsb
pop
push
push
push
inc
pop
subl
add
addb
stos
lret
mov
add
add
stos
xchg
dec
add
ret
push
fwait
xchg
lret
mov
or
dec
push
and
mov
movsb
bswap
movsl
mov
jecxz
add
push
mov
adc
push
mov
add
dec
and
leave
push
repnz
sub
rolb
mov
xchg
mov
pop
dec
pop
adc
or
popf
add
sub
daa
js
xor
das
dec
fistl
test
sti
shrb
adc
cmp
pop
mov
test
je
add
push
stos
rcll
test
mov
ret
sub
std
inc
adc
mov
push
sbbb
xchg
or
adc
adc
sbb
jbe
arpl
cli
xchg
sub
and
sbb
mov
in
dec
outsl
push
inc
outsl
push
cmp
inc
leave
push
add
add
xchg
mov
mov
jae
orl
movsl
add
out
cwtl
xchg
pusha
fsubs
andl
mov
xor
jle
je
rcll
xchg
xor
add
push
add
add
stos
lcall
and
enter
jb
jecxz
cmp
adc
push
xor
out
mov
jne
mov
jle
pop
mov
xor
add
xadd
bound
mov
aam
push
jg
xor
mov
push
filds
add
add
sbb
shll
aas
out
roll
ret
jbe
imul
and
inc
cli
push
cld
dec
push
add
xchg
pop
pop
mov
fucom
pmuludq
pop
adc
inc
insb
shr
inc
add
mov
mov
call
loopne
adc
inc
ret
cmp
arpl
add
jp
scas
sbb
pusha
insb
std
popl
xchg
je
incb
push
push
mov
adc
add
adc
insb
fnsave
lods
push
in
outsl
insl
out
in
adc
lods
jae
movsl
mov
shlb
sbb
jne
scas
mov
rclb
arpl
icebp
lret
cmp
pop
adc
inc
lock
add
repnz
push
dec
mov
add
lret
push
int
cmp
testb
sbb
xor
test
js
dec
push
push
insl
sarl
or
or
push
int3
xchg
inc
inc
loope
and
pop
arpl
adcb
xor
mov
xorl
mov
outsl
adc
cmp
or
test
jmp
dec
icebp
add
inc
mov
mov
or
add
insb
insb
shrl
aam
or
cmpb
nop
cmpsb
loopne
add
ljmp
movb
cs
adc
sbb
movsl
xor
je
jo
imul
add
cwtl
adc
add
sarb
or
jmp
push
pop
mov
add
js
clc
jbe
mov
push
out
in
jecxz
lds
dec
xor
jle
sub
sub
pop
movb
addr16
add
es
sub
ret
jbe
mov
fs
mov
cmp
xor
or
rcll
inc
mov
push
lret
cmp
pop
fisubl
adc
xchg
les
into
sub
mov
roll
xor
push
mov
dec
inc
push
or
add
test
add
das
test
adc
jg
push
cmovns
pusha
pop
inc
add
mov
jne
adc
pop
inc
aaa
test
inc
es
ret
in
lea
arpl
in
xchg
add
fsubl
inc
adc
push
push
and
inc
push
cwtl
ret
mov
jno
fwait
pop
fs
or
scas
or
fcos
add
dec
stos
mov
pusha
sub
xor
mov
cmp
test
cmp
mov
xor
fs
or
mov
pop
testl
xchg
sahf
addl
enter
mov
adc
inc
cli
xor
rcll
leave
pop
xchg
rolb
xor
roll
out
mov
push
loop
js
add
and
dec
sub
adc
pop
pop
push
push
lret
call
sbb
out
cmp
mov
jl
cwtl
fnsave
add
ss
sti
xchg
lock
pop
push
add
testb
pxor
jle
xor
or
mov
addr16
add
dec
rcrl
dec
xchg
cmpsb
add
mov
imul
jno
xchg
addl
sbb
push
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
dec
adc
push
or
dec
int
mulb
pusha
xor
and
clc
test
js
push
jne
push
xor
dec
adc
mov
push
mov
sahf
jb
pinsrw
testl
xorl
lret
mov
or
mov
sub
shrl
sbb
fisttpll
mov
xchg
sbb
fidivrs
lods
loope
or
add
add
lret
rclb
xchg
mov
and
sub
jns
aad
adc
pop
push
sbb
ret
mov
inc
sbb
aad
push
stos
sti
push
sub
jno
loopne
lea
cmpsl
ret
adc
out
cwtl
and
arpl
xchg
add
in
dec
add
lret
mov
test
adc
xor
ret
sub
lea
add
cmp
mov
addr16
pop
push
cwtl
add
cld
push
dec
les
add
je
fs
and
lahf
cmp
inc
shl
mov
sub
cltd
adc
es
dec
pop
or
pop
cld
pop
adc
and
jne
mov
stc
jbe
jp
cmpsb
jne
ret
outsl
mov
in
lahf
adc
cmp
ja
je
or
je
or
mov
adc
sub
icebp
and
das
adc
cli
jnp
cmpb
or
cmpl
jl
ret
xchg
or
jne
xor
jnp
jl
in
xor
jmp
cmp
fidivl
adc
adc
xchg
xor
inc
adc
lea
inc
push
test
or
int3
lds
test
cltd
mov
inc
mov
jbe
lcall
cmpsl
xor
push
add
or
cmp
sub
lret
js
mov
adc
lahf
daa
mov
adc
pop
sbb
sbb
dec
ret
or
adc
ret
fstpt
orb
xchg
and
pushf
cmp
aad
mov
mov
add
inc
movsb
mov
push
outsb
loop
inc
in
mov
xor
orl
push
mov
push
rolb
in
inc
je
push
outsl
sbb
mov
mov
or
lds
or
push
adc
dec
push
aad
inc
or
pop
or
in
cmc
fs
adc
xchg
lods
repz
pusha
or
std
ja
add
add
dec
sbb
add
adc
enter
and
stos
dec
push
mov
shr
roll
jbe
lret
sub
ljmp
add
push
cmpsl
in
pop
sbb
sbb
push
icebp
or
pop
fsubl
xor
and
incb
in
repz
push
testl
inc
das
sub
xchg
nop
stc
mov
push
sbb
add
push
xchg
movsb
sbb
sub
call
sub
pop
push
or
into
popa
loopne
push
rcll
sub
das
push
and
call
daa
push
adc
xor
jnp
lcall
xchg
push
mov
xchg
cmpsb
fdivl
les
and
push
mov
dec
push
dec
push
das
add
stos
addl
pop
and
ds
inc
add
add
cmp
call
pop
ds
and
or
add
jb
in
dec
adc
push
out
repz
add
xor
mov
add
sub
sbb
cmp
js
add
inc
lret
xor
out
push
sub
in
push
xor
mov
push
ret
out
cmpsb
pop
cmc
fsubs
inc
sbb
or
xchg
push
les
jl
push
imul
pop
clc
cwtl
xor
addb
xor
aas
mov
or
dec
aam
les
lcall
jo
fucomp
icebp
xor
dec
mov
push
xchg
dec
adc
xlat
dec
adc
mov
sub
lods
or
sbb
push
ss
shll
movsb
imul
cmp
imul
repz
adc
push
cmp
adc
or
inc
jo
popa
stos
xchg
adc
xor
push
ljmp
movsb
push
jg
sahf
es
dec
or
dec
fs
adc
xor
and
or
push
lahf
jns
cmp
mov
push
xchg
and
mov
mov
mov
pop
inc
and
pop
xchg
jge
sti
call
lahf
ds
cld
sbbb
sub
icebp
test
stos
dec
push
pop
or
pop
mov
rcrl
push
pop
jmp
jnp
sub
pop
xchg
xchg
mov
cmpsl
dec
push
mulb
push
daa
aaa
movsl
fcompl
push
filds
lahf
loopne
add
pop
fs
jle
rolb
or
dec
mov
mov
aas
pop
js
adc
lea
mov
jge
xor
push
movsl
xor
lods
xor
mov
cltd
and
lret
xchg
xchg
xchg
inc
inc
inc
ss
fdivs
mov
cmp
loopne
pop
add
dec
loope
aad
nop
mov
mov
or
pop
push
das
repnz
in
nop
add
int3
cmpsl
mov
pop
add
inc
jp
push
gs
push
inc
movsb
xchg
sub
sub
pop
push
inc
leave
je
shlb
pop
ss
fadds
adc
mov
sahf
mov
or
sti
ds
sub
dec
sahf
ror
mov
imulb
repz
inc
xor
hlt
jo
scas
xor
aaa
divps
inc
addl
mov
xor
dec
cmp
hlt
mov
push
es
dec
fwait
inc
test
out
incb
add
inc
cmpsb
pop
pop
sbb
adc
jae
nop
cmp
sbb
mov
xor
loopne
mov
or
faddl
or
adc
xchg
jl
add
adc
pop
rorl
and
cmp
data16
add
rol
sahf
push
sub
popf
xchg
rcll
out
adc
push
and
or
xor
scas
jge
cmp
adc
xor
and
in
inc
jne
cmpsl
andb
repnz
xchg
xchg
jp
sbb
mov
jge
cmc
add
iret
sub
call
pop
mov
es
cmp
or
cmc
add
cmp
ret
cmp
sti
and
test
stos
or
les
fisubrs
mov
inc
and
lahf
push
jmp
or
push
pop
jb
mov
mov
xor
adc
in
xor
mov
or
push
aas
pop
sbb
addb
test
sbb
jp
cmp
mov
in
adc
fwait
cwtl
cmp
lock
out
sar
int
sti
or
inc
loope
sarb
sbb
and
ret
ret
push
sbb
out
push
loopne
jmp
std
and
adc
aad
jmp
cmpsb
inc
xor
or
add
imul
adc
pop
inc
daa
pushf
pop
cmp
stos
lcall
or
push
xchg
jae
jnp
xor
sub
add
xor
mov
mov
inc
and
pop
fdivrs
xor
ja
mov
adc
jno
sub
sbb
fistps
jle
lods
sbb
cli
or
pop
pop
push
jbe
pusha
sbb
push
lcall
ss
adc
xor
fcoml
test
pop
fsub
add
add
or
xchg
jnp
push
sub
or
jno
push
das
and
and
stos
and
mov
mov
adc
sub
mov
xchg
push
sbb
xchg
xorl
or
rdmsr
addr16
lods
mov
mov
cmpsl
repnz
out
pop
jmp
int
in
loope
mov
lods
dec
mov
inc
lock
dec
cltd
push
mov
pushf
cmp
pop
mov
lods
and
add
cmp
inc
popa
hlt
imul
je
push
data16
pop
add
and
test
cmp
orl
leave
nop
lock
aas
inc
and
or
daa
subb
out
in
push
xor
outsl
push
lret
cmp
je
out
push
mov
sbb
jo
and
test
dec
mov
outsb
inc
dec
jns
dec
adc
push
or
fdivrp
and
lret
mov
and
push
sti
das
dec
dec
push
repnz
pop
je
sub
in
push
mov
lahf
pop
and
and
pop
movsb
dec
mov
outsl
jnp
cmpsl
movsl
sarb
sahf
aam
and
cld
jns
jp
or
icebp
cmp
adc
loope
add
call
rclb
pop
mov
push
rcrb
add
push
cmp
dec
movsb
push
outsb
sti
xor
je
mov
cmpb
nop
cmc
xchg
push
data16
and
fdivl
or
jp
cld
fld
mov
jo
test
or
inc
lea
rorb
fdiv
mov
or
popf
inc
std
mov
pop
enter
xchg
inc
outsb
pop
adc
stos
cltd
push
jb
orl
ret
and
xor
sub
sbb
lret
adc
or
outsl
dec
or
je
adc
std
inc
push
into
jl
int
sbb
lahf
jne
imul
sbb
and
cmp
imul
add
adc
fldenv
xor
add
sub
mov
out
outsb
xchg
dec
adc
dec
xor
push
push
data16
adc
xchg
xchg
and
xchg
cmp
xor
pop
subb
jle
inc
push
mov
fwait
lret
sbb
inc
fwait
jle
inc
and
sub
jecxz
imul
mov
fs
inc
dec
fs
data16
add
jmp
push
push
orb
dec
jmp
push
sbb
fnstcw
mov
sarl
nop
mov
xor
xor
fwait
in
je
push
filds
sbb
js
into
repz
movsl
pusha
or
orl
lahf
dec
sub
jne
push
stos
lea
mov
test
push
jp
mov
mov
push
dec
or
sbb
sbb
and
pop
adc
and
xchg
cmpsb
push
dec
adc
push
mov
push
sub
add
pushf
lret
mov
jbe
int3
add
inc
lods
sbb
addr16
movsl
movsl
push
sbb
shrl
movsl
jb
add
mov
popa
lea
scas
test
pop
push
ffreep
int3
adc
pushf
jo
outsb
jmp
arpl
mov
and
loop
sub
push
dec
leave
orl
fdivrl
or
jg
pusha
and
sub
hlt
and
mov
in
or
ret
in
add
add
inc
in
cs
int
push
xchg
call
jne
stos
in
and
dec
jae
dec
pop
in
push
testb
testl
or
cmp
xchg
mov
lcall
add
mov
xchg
loopne
loop
outsl
leave
pop
sarl
jb
xchg
pand
incl
jne
cmc
add
or
js
pop
imul
jl
cltd
std
or
push
sbb
popf
add
sub
shlb
js
adc
mov
or
fs
push
int3
push
jne
sbbb
pop
lock
cmp
fs
xlat
aaa
add
sti
lret
loopne
and
dec
add
pop
in
int3
les
or
shlb
mov
rcrb
add
add
movsl
push
xor
sbb
call
mov
mov
loopne
dec
imul
jno
stos
add
loopne
shl
jno
sub
scas
or
add
xor
ja
in
loope
lea
pop
xorl
push
xchg
add
mov
sbb
add
jb
mov
aaa
push
sub
mov
leave
jae
push
jl
lcall
dec
or
pop
pop
outsl
add
push
mov
add
mov
inc
sbb
add
test
or
pop
and
scas
mov
add
xchg
arpl
addl
add
clc
push
add
shlb
sub
jae
jb
jns
lahf
ja
xchg
fldt
xchg
leave
sti
test
js
dec
sub
push
and
or
jmp
out
pop
jne
mov
into
in
and
movsb
mov
outsb
mov
jge
adc
sbb
imul
mov
jo
fwait
inc
lods
add
mov
andb
mov
push
shrb
sbbl
jns
inc
mov
daa
clc
inc
lock
xlat
sub
jge
adc
scas
push
push
sub
and
pop
cmp
and
pop
push
sub
xchg
mov
aam
loopne
mov
and
daa
adc
xchg
pop
and
pop
adc
adc
push
ja
jbe
mov
pop
imul
bound
or
xchg
push
sbb
cmpsb
adc
add
push
sub
sub
mov
test
cmpsl
cmp
pop
dec
lock
xchg
jge
lock
fs
add
das
and
or
mov
push
std
in
adc
mov
cmp
jbe
add
xor
push
leave
push
xor
jns
xor
xchg
and
or
ret
sub
adc
add
cwtl
inc
lock
mov
and
dec
dec
in
mov
sbb
cld
inc
sbb
mov
sbb
sbb
xchg
clc
adc
nop
push
or
dec
add
adcl
jne
test
push
test
push
sub
jo
jae
sub
add
mov
cmp
push
cmp
sbb
mov
jmp
mov
arpl
jo
push
mov
fldt
xchg
jno
dec
or
sub
fsubl
pop
test
stos
mov
cmpsl
xor
das
test
sub
gs
mov
inc
pop
fildl
fs
or
jge
repz
lock
sub
mov
add
or
in
adc
das
push
mov
inc
enter
push
cvtpi2ps
movsl
mov
push
mov
adc
sub
xor
adc
das
fisttpll
and
cld
into
inc
and
mov
jno
sub
pop
inc
fstpt
shr
imul
sub
jnp
or
jae
cs
fdivs
jb
pop
xor
sbb
std
xchg
jno
shrl
sbb
or
and
xchg
repnz
jle
cld
adc
mov
push
clc
sub
push
sub
shlb
push
iret
loopne
jo
push
inc
push
cmp
push
push
loopne
inc
xor
mov
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
jl
push
int
push
mov
push
lea
adc
leave
mov
rcl
loop
cmp
pop
sbb
xor
xchg
and
adc
cmp
pusha
lods
fdivs
add
mov
clc
jmp
sbb
sbb
sub
adc
imul
inc
jecxz
loopne
iret
sbb
dec
mov
dec
xor
xchg
outsl
arpl
stos
xor
imul
push
dec
stos
ficomps
imul
push
lock
dec
loop
sbb
inc
testl
je
es
loope
or
pop
testb
fnstsw
scas
adc
and
jne
dec
xchg
cmpsb
push
pop
or
lret
imul
or
push
push
imul
test
mov
sub
push
mov
xor
and
imul
sbb
jne
cmp
xor
or
mov
pushw
xor
push
adc
add
cmp
js
or
sub
aaa
decl
ret
mov
adcl
cmp
aaa
mov
aaa
and
cltd
sbb
or
xor
or
or
jge
add
pop
xchg
mov
push
cs
sub
pop
pushl
and
and
cli
fdivr
xchg
pop
sub
fisttpl
cmp
hlt
jno
push
clc
test
cmp
pop
rcrb
jmp
dec
notl
jns
icebp
aam
add
xchg
mov
or
add
xchg
push
sarl
dec
rcll
push
add
sbb
daa
lods
adc
push
fadd
pusha
mov
add
test
cmp
mov
pop
push
lea
or
ja
fsubrl
shlb
sub
or
mov
adc
xor
xlat
popf
mov
stos
jl
push
clc
shll
dec
call
ss
cmc
cmp
adc
data16
sub
aas
push
mov
insb
sahf
inc
pop
add
or
mov
push
das
jae
lea
or
push
test
cmp
jb
cmp
int
aad
dec
push
je
cmp
xor
iret
das
movsb
mov
add
sti
mov
inc
sbb
cmp
js
jne
cli
mov
pop
insb
add
lsl
inc
xor
pop
add
push
pop
xchg
mov
add
inc
push
inc
inc
sti
jl
fstps
mov
test
addr16
sbb
ss
imul
or
ret
mov
adc
dec
or
push
dec
jnp
xor
xchg
sub
shr
not
lods
mov
test
out
adc
push
es
pop
sbb
das
xor
push
icebp
inc
test
dec
xchg
test
aas
sub
or
and
aam
or
inc
xchg
das
das
das
xor
xor
cmp
cmpsb
inc
popf
xchg
xchg
xchg
and
cmp
dec
lods
imul
push
addb
test
add
xor
movl
mov
inc
add
sub
jae
sub
inc
mov
test
outsl
and
decl
jno
jne
jecxz
cmp
bound
bound
les
pop
xor
pushf
xor
movsb
sbb
jmp
adc
popf
sbb
add
movl
push
mov
pop
es
xor
jns
jmp
iret
inc
adc
adc
and
dec
inc
cmp
pop
shrl
jl
pushf
sub
add
sbb
push
sub
and
or
dec
loopne
inc
in
test
mov
pop
arpl
dec
cmp
add
leave
cmp
push
mov
add
sbb
inc
lret
cwtl
add
jno
adc
cmp
xor
pop
push
mov
inc
mov
xchg
aaa
sub
and
xchg
xor
jle
loop
pop
aam
sub
xchg
sbb
mov
aam
xchg
xor
testl
and
add
sub
movsb
jno
pop
cmp
test
ret
lea
repz
orl
call
sub
or
sbb
cmp
jae
pop
js
add
call
inc
pushf
jae
sbb
andl
jg
dec
jnp
and
jne
push
push
daa
jae
push
push
mov
cmpsb
xlat
push
and
jmp
icebp
push
push
mov
cli
pop
loopne
adc
mov
imul
je
xorl
das
in
sub
sub
popa
pop
adc
and
pop
adc
sbb
aas
mov
push
mov
or
data16
es
mov
push
adc
xor
sti
and
scas
push
test
jno
dec
cmp
jb
lock
and
or
mov
dec
shlb
push
iret
test
in
test
shlb
pop
mov
mov
push
push
push
popa
mov
and
add
popf
inc
pop
sbb
rcrb
push
sbb
sub
or
adc
fmuls
push
xchg
cltd
imul
jecxz
dec
mov
push
dec
push
inc
jecxz
call
gs
ljmp
xor
adc
pop
jl
cmp
lea
cmp
push
in
xor
bound
and
mov
adc
mov
add
loopne
add
inc
ret
pushf
jo
rolb
push
add
add
dec
sbb
sbb
mov
inc
inc
and
sarb
dec
jne
lcall
mov
mov
pop
sbb
jmp
loope
sbb
loop
les
andl
js
mov
cmp
sbb
cmp
push
ss
inc
pop
hlt
adc
in
add
xchg
xchg
adc
ret
sti
sub
loop
fistpll
in
pop
adc
arpl
mov
ret
add
push
and
add
in
sbb
inc
push
and
push
jg
inc
adc
fs
push
dec
pop
lcall
mov
data16
movsb
or
test
mov
cmc
jp
mov
jle
pop
or
cmp
int3
out
dec
loopne
cmp
sti
xorb
adc
or
or
push
mov
cli
sub
sar
aam
jp
ja
or
add
rcrb
ret
sbbb
mov
imul
sub
jecxz
pusha
xor
in
jbe
sbb
jb
jo
mov
popf
add
xchg
mov
inc
or
ret
push
dec
add
push
mov
sahf
and
push
mov
fisttps
push
xchg
hlt
dec
mov
rorl
sahf
call
dec
jne
push
xchg
incb
xor
loope
add
ret
sbbl
shr
and
mov
and
jl
sbb
mov
or
mov
mov
push
jmp
std
lods
sub
rolb
pop
or
mov
jl
jno
push
dec
xchg
fs
mov
mov
jle
dec
subl
sub
adc
adc
inc
mov
xchg
jne
pushf
sbb
jl
ret
outsl
loope
inc
inc
in
push
or
pushf
dec
orl
sub
add
aad
fwait
add
jmp
imulb
pop
dec
ss
mov
stc
or
push
js
jne
sub
outsb
sar
sbb
pop
bound
push
sub
adc
mov
jb
jae
sbb
sbb
push
add
mov
dec
hlt
jae
and
xchg
push
mov
jg
fidivl
or
ret
dec
mov
mov
lea
add
push
lahf
and
mov
push
dec
push
inc
cli
sub
enter
loop
or
int
push
in
cmp
adc
pop
dec
mov
rcrb
cltd
test
cmp
mov
aam
add
mov
pop
and
jne
xchg
dec
enter
sbb
jmp
or
sbb
push
mov
cli
sysexit
std
mov
in
jecxz
jne
fdivs
xor
fs
lds
cld
shrb
shr
or
or
push
inc
shll
sarl
xor
sbb
loopne
push
push
push
xor
push
test
or
nop
sar
push
clc
ret
subl
jp
adc
in
nop
scas
mov
or
cmp
rcrb
mov
pusha
xchg
and
arpl
cmp
nop
and
or
dec
outsb
xchg
inc
or
fstps
adc
or
mov
mov
xchg
arpl
stc
mov
mov
cmp
jb
mov
adc
and
xchg
cmp
pop
add
xlat
pop
add
in
or
cmpsl
into
lret
or
ja
inc
das
lods
adc
pop
mov
or
sub
inc
lods
fcmovnu
xchg
pushf
je
and
cmp
ret
inc
loope
rcll
or
and
data16
add
or
push
inc
call
xor
add
push
fisttpll
dec
dec
and
inc
jae
rcr
mov
aas
and
lahf
and
nop
add
aam
lock
nop
add
mov
and
nop
add
int3
sub
in
add
jo
add
nop
sub
hlt
cs
rcl
dec
or
and
pop
lods
mov
cmp
pop
and
mov
cmp
inc
push
sbb
and
xorb
jne
sub
pop
jne
cmp
pop
mov
mov
lahf
jmp
test
cmp
cmp
xchg
or
in
rorl
pop
add
in
dec
jbe
or
sbb
adc
into
sub
adc
push
dec
sbb
call
inc
scas
adc
fisubrs
pop
mov
and
add
ret
inc
adc
mov
mov
imull
pop
addl
mov
inc
sub
fnsave
push
pusha
imul
push
sahf
inc
jae
popa
lock
adcb
lds
imul
mov
imul
cmpsl
cltd
movsb
lahf
enter
jo
int3
inc
out
jns
loopne
in
aam
jo
sbb
adc
inc
or
pop
jo
jo
pop
lcall
pop
hlt
mov
and
push
enter
push
ss
mov
jo
jo
out
out
sbb
pop
xor
sub
cmp
sarb
rcrb
push
mov
pop
add
add
adc
paddw
cld
jne
pop
call
mov
or
incb
dec
add
lock
jno
mov
mov
jne
mov
leave
pop
loopne
les
xor
loope
sbb
ret
add
inc
lea
ret
js
mov
xchg
clc
or
push
loope
imul
add
sbb
sbb
jge
or
adc
and
and
cmp
xor
cmpsl
ret
mov
push
mov
inc
test
add
rolb
and
cmpl
aas
or
je
mov
jge
or
bound
popf
in
stos
pushf
fcoml
je
push
cmp
out
out
cmp
test
xor
insb
dec
sub
lds
cmp
adc
scas
cmp
add
mov
mov
adc
inc
mov
test
dec
sbb
fdiv
les
test
pop
fidivs
mov
jge
call
sub
or
add
mov
adc
test
xor
pop
cmpl
inc
mov
xchg
lock
dec
pop
inc
push
push
xchg
sub
and
ret
insb
mov
inc
sbbl
scas
add
dec
sbb
xchg
pop
nop
test
insl
add
rorl
lds
cltd
pusha
pusha
jp
mov
add
push
aam
aam
push
or
xchg
add
lock
mov
adc
popf
or
cmpsl
and
add
cmpl
pop
push
jno
mov
out
lcall
and
call
add
cmp
adc
aam
adc
in
pop
mov
jae
sbb
mov
mov
add
les
push
push
and
lret
in
mov
or
loopne
adc
or
inc
xchg
mov
mov
in
cli
aam
add
pop
adc
fcomps
cmpsl
sub
mov
fucomi
jl
mov
push
sub
and
sbb
rolb
push
xchg
cwtl
dec
ret
or
inc
sbb
jb
or
sti
mov
pop
clc
jl
mov
adc
adc
fidivs
adc
movb
cli
lahf
inc
outsl
xor
xor
push
inc
js
mov
cltd
clc
mov
adc
add
nop
cs
lret
cmp
adc
dec
push
push
ljmp
pop
pusha
inc
lods
mov
lcall
inc
mov
sub
jno
add
inc
xor
pusha
or
loope
test
add
push
xor
lret
lds
loop
mov
nop
cld
pop
and
lea
sbb
xor
fisubrs
stos
xchg
pop
push
push
mov
adc
fstpl
lea
push
cmp
andl
stos
mov
add
imul
lods
arpl
dec
push
and
mov
fdiv
je
pop
cmp
push
push
call
push
rol
xchg
push
es
push
call
fs
les
into
fs
add
cltd
push
or
mov
xchg
nop
sub
mov
mov
aaa
xchg
mov
push
insb
add
push
add
xchg
sub
xchg
pushf
pop
mov
push
sub
orl
iret
xchg
xchg
or
test
pop
or
lock
push
cmp
loopne
call
ret
rcrl
and
xor
cmp
push
push
pop
inc
pop
shll
xor
mov
pop
pusha
add
pop
jmp
rorb
mov
fcmovu
dec
movsl
aam
and
push
add
imul
push
insl
push
push
lea
test
or
mov
leave
xor
mov
dec
and
push
fisubrl
mov
pop
int3
sub
jbe
xorl
fnstsw
shlb
xor
sub
inc
or
rorb
adc
movsb
push
lea
pusha
mov
out
loope
in
shrb
or
sbb
rorl
inc
pusha
push
push
faddl
out
cmp
cmc
loope
jbe
mov
movsl
cmpsb
fcompl
movsb
cs
jno
inc
outsl
sbb
inc
push
stos
mov
sti
push
sahf
dec
in
cmp
arpl
scas
ja
xchg
pop
push
push
dec
loopne
cmp
jbe
jne
xchg
pop
push
sbb
into
pop
mov
fs
popl
xorl
push
loop
test
mov
pusha
sbb
xor
jne
fwait
jp
das
and
push
mov
adc
xchg
jmp
add
fadds
movsb
sbb
push
sub
lahf
add
enter
sub
push
jge
and
sbb
icebp
jne
adc
and
cmp
mov
adc
int3
je
adc
insb
xchg
add
inc
aaa
xchg
cwtl
push
ficoms
test
dec
stos
scas
dec
movsb
jo
lea
stos
jne
pop
test
mov
xchg
sbb
and
cmp
js
loopne
movsb
scas
incb
cwtl
adc
fs
stc
cmpsl
stos
adc
adcb
add
repz
pop
add
adc
jnp
add
dec
ljmp
aam
lods
jl
push
add
xor
test
adc
inc
mov
jne
stos
insb
mov
dec
sbb
mov
xchg
or
push
cmpl
int
jae
or
rclb
push
sub
mov
pop
mov
sbb
add
xchg
inc
mov
cmp
popf
imul
xor
push
jle
dec
mov
add
repnz
sarb
push
add
rorl
inc
and
in
sbb
xlat
and
mov
mov
push
jnp
add
mov
xchg
mov
les
pusha
rcl
fnsave
test
cmp
jb
dec
fs
lock
popa
mov
mov
in
hlt
dec
in
adc
mov
xor
cmc
insl
incb
pop
xor
xchg
fwait
inc
sub
leave
push
ret
ss
sub
mov
sahf
cs
scas
data16
pushf
stos
jno
testb
adc
pop
xchg
mov
dec
xchg
lret
fadds
pop
cmp
inc
mov
rcrb
in
adc
ss
call
add
pop
push
pop
inc
sbb
fdivrp
xchg
xchg
dec
push
push
notl
icebp
or
xor
push
clc
and
aad
inc
push
clc
xor
rolb
loop
das
inc
cmp
cmp
dec
nop
push
push
xor
shrb
or
push
lret
rcl
repnz
mov
or
repnz
sbb
enter
or
rolb
pop
faddl
jo
cmp
inc
adc
imul
or
xchg
lock
mov
aas
push
rclb
adc
je
cmp
jne
push
pop
sub
insb
xchg
loopne
push
jne
lret
xlat
adc
test
mov
nop
push
and
xchg
xchg
cwtl
pushf
imul
push
lcall
and
sarl
mov
mov
shr
scas
mov
sub
or
pop
test
inc
mov
sti
cs
xchg
mov
sub
xchg
and
xchg
ja
movsb
rcrb
fldenv
mov
inc
adc
push
aad
fcomps
or
cmp
scas
icebp
jo
enter
mov
mov
inc
xchg
stos
cmp
dec
adc
in
mov
into
jle
push
jge
mov
push
js
jae
aam
or
lea
rol
scas
jge
dec
mov
mov
cmpsb
add
sub
xor
push
cmp
mov
dec
mov
jmp
push
fwait
jae
jne
or
mov
subl
add
cmp
mov
cmp
mov
jmp
dec
sbb
dec
mov
mov
lahf
int
sub
pop
or
stos
aas
pop
xchg
and
pop
add
fimull
loope
adc
dec
pusha
std
push
cmp
in
cmp
push
lods
sub
or
cmp
inc
addr16
test
inc
clc
adc
jb
mov
push
js
pop
pop
stos
jne
mov
es
cmp
push
pop
cmpsb
roll
push
push
push
jns
dec
fdivrs
cmp
push
push
repz
pop
xor
mov
mov
pop
cmp
inc
je
shll
add
xchg
loopne
add
jmp
lahf
mov
nop
das
inc
imul
jb
or
cmpl
add
movsl
insb
xlat
mov
push
xor
xlat
xchg
cmp
adc
or
cmpsl
mov
mov
sbb
loope
jo
jbe
push
jo
push
test
add
inc
divl
fldcw
mov
push
outsl
add
lret
stc
xchg
popf
sbb
enter
jne
or
jne
mov
push
fnsave
test
ja
cltd
sub
mov
add
jo
dec
and
dec
sbb
inc
hlt
lea
mov
push
jo
aaa
pop
inc
or
mov
jl
shrb
xchg
sbb
call
cmpl
enter
xor
add
dec
fwait
or
sbb
sbbl
jge
leave
enter
in
repz
or
test
dec
repnz
xchg
aam
pop
fsubr
push
pushf
int
and
push
mov
out
outsb
mov
pushl
sahf
or
and
add
or
inc
adcl
jae
stos
push
das
push
add
push
loope
mov
dec
pop
fsubl
hlt
add
jo
popa
loope
clc
mov
hlt
lock
sbb
add
push
inc
aam
ret
hlt
cmpb
mov
xchg
push
adc
or
stc
pcmpeqw
cmpl
adcl
add
cmp
aad
lea
es
mov
ret
fs
sbb
inc
fwait
paddusb
sbb
bound
or
cmp
push
pusha
sbb
aam
and
test
mov
mov
loopne
pop
sub
jl
and
push
or
int3
mov
jae
ds
cmp
push
test
inc
jb
mov
xchg
or
call
shr
push
add
sub
in
addb
pop
xor
jge
sbb
pusha
and
inc
fdiv
pop
mov
fsubrs
lock
inc
popa
push
inc
add
lods
out
pop
cmp
loopne
test
push
or
xor
jne
fmuls
fdivl
dec
lods
add
mov
sbb
xchg
lret
sbb
loopne
add
cmpsl
dec
cmp
mov
add
cltd
pusha
add
pop
cld
adc
not
add
add
mov
xor
pop
mov
add
sub
adc
mov
sub
push
fwait
mov
loopne
cmpl
ljmp
in
or
inc
push
add
pop
cmpsl
jb
popf
mov
adc
mov
or
dec
mov
push
fadds
sbb
lods
adc
mov
add
lahf
mov
mov
shll
and
xchg
rclb
cmp
movsb
test
rclb
cmpsl
ss
pop
sub
pusha
mov
aaa
add
daa
xlat
jmp
outsb
lock
cmp
adc
outsl
mov
repz
test
js
cmpsb
or
push
call
add
xchg
dec
cmp
inc
hlt
push
mov
hlt
mov
push
sarb
or
jne
push
das
aas
in
test
cmp
xor
negl
pop
std
stos
xor
jp
jp
je
and
adc
inc
ja
je
data16
sub
xchg
pop
dec
fimuls
mov
fistl
mov
ja
sub
cmp
jg
outsb
adc
int
sub
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
bound
sbb
mov
arpl
pusha
xor
inc
fisttpl
jb
jmp
divb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
mov
add
ret
xchg
and
movsl
push
or
cmpl
xlat
dec
cmp
adc
movb
ds
jmp
pop
cmpsb
xchg
add
mov
mov
adc
pop
push
insl
pop
pop
sbb
fcomps
push
pop
dec
seta
jle
mov
mov
js
test
mov
sbb
andl
and
adc
push
mov
scas
add
shr
cmp
jp
add
fdivl
lret
xchg
lret
mov
xchg
les
aam
in
add
jl
fldcw
adc
add
mov
add
stos
cmp
sbb
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
stos
nop
jg
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
jae
push
mov
out
or
and
dec
cmp
loop
push
divl
jo
cltd
rcl
xchg
pop
add
insb
xchg
jb
sbb
adc
fs
nop
mov
xchg
lcall
cltd
xchg
lods
movd
arpl
cmp
lea
test
icebp
test
jge
cmp
movl
flds
lcall
and
pop
outsl
push
xchg
jmp
pop
and
adc
cmp
mov
push
orb
shll
and
mov
pusha
loope
outsl
push
pop
or
jge
scas
push
cmp
lea
cmp
mov
jo
orl
adc
and
hlt
cmp
push
sbbl
add
jo
dec
orl
fwait
mov
add
dec
and
xor
jge
nop
or
cwtl
add
push
cmpsl
fistpl
lods
xor
repz
cwtl
rorb
jge
dec
push
popa
mov
mov
xor
sub
push
into
dec
cmc
mov
adc
sti
in
lea
push
push
and
add
and
mov
lds
sti
dec
or
inc
cmp
incl
adc
je
cltd
mov
push
cmp
inc
mov
or
inc
lcall
inc
add
xor
inc
in
jmp
scas
enter
mov
add
cmp
push
ret
fldenv
inc
sbb
mov
dec
pop
push
sbbb
jle
sarb
cmpl
sahf
push
call
sbb
cmp
imul
mov
in
fcoms
das
mov
xor
jle
add
add
mov
cmp
mov
subl
inc
test
xorl
cmp
rolb
lds
movsl
add
fbstp
rolb
shr
add
inc
nop
loopne
fcom
sbb
adc
mov
dec
cmp
out
mov
ret
shr
cmp
jbe
add
jmp
add
push
and
add
outsb
add
ret
and
dec
loop
inc
dec
jo
mov
mov
mov
or
inc
shll
mov
cmp
adc
sub
push
cmpb
add
dec
mov
push
sbb
pop
push
in
lods
mov
test
xor
ds
loopne
insb
fimull
add
inc
adc
lcall
mov
gs
rcll
add
popa
and
imul
or
sbb
aad
push
or
push
and
mov
jl
cmpsb
inc
fwait
add
sbb
xor
add
mov
sti
xor
or
jmp
mov
fdiv
xor
rclb
subl
call
jb
push
add
addr16
xor
sub
pop
sbb
jbe
cwtl
arpl
xchg
outsb
xor
push
dec
subl
xlat
adc
fsubl
je
leave
mov
pusha
call
into
rorl
sbb
add
lea
xchg
scas
cmpb
sbb
pop
in
inc
adc
lods
es
xor
test
cmp
push
in
jno
imul
cwtl
pusha
add
jmp
into
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
xchg
xchg
cmp
les
repnz
in
add
cmp
pop
mov
dec
add
scas
mov
dec
pop
call
nop
inc
mov
push
mov
sub
add
mull
jmp
mov
inc
dec
loopne
test
imul
push
push
add
add
js
xor
or
mov
jmp
insl
and
movsl
out
or
xor
xor
push
movsb
dec
add
inc
mov
fnsave
and
repz
dec
xor
dec
pop
fs
ss
cmp
push
stos
or
push
cmp
subl
femms
popa
pop
enter
xchg
mov
popa
mov
fdivs
adc
push
fs
adc
jmp
sub
or
push
sub
imul
lods
repnz
inc
jns
fcoms
ss
jl
mov
xor
push
dec
xchg
int
push
pop
cmp
cmpsl
repnz
mov
adc
xor
js
inc
add
cmp
mov
mov
push
test
pop
pop
xchg
lods
inc
push
rol
xchg
test
in
adc
jg
popf
clc
fsubrs
mov
fistpll
pop
loopne
pop
cmp
add
xchg
movsw
mov
mov
inc
fsubrs
inc
das
aam
insl
sub
cs
adc
lret
loope
sbb
scas
jne
cmpsl
jb
roll
inc
inc
fildl
mov
ja
adc
mov
andl
rcll
inc
orb
js
sub
and
push
xor
cld
xchg
adc
sub
or
stos
or
es
push
pop
xor
pop
pop
aas
rep
mov
cmp
sub
negl
and
inc
xor
pusha
cwtl
es
or
jno
push
xor
outsb
or
push
clc
adc
sub
pushl
je
push
jecxz
sahf
movsl
mov
sub
xor
mov
imul
push
jno
push
ret
shlb
inc
jle
lea
adc
or
adc
xchg
repz
xor
aam
sub
mov
outsl
push
add
xchg
pusha
dec
and
mov
jnp
imul
hlt
or
or
dec
movsl
inc
cmpsl
xor
popa
clc
jbe
mov
xchg
fmuls
add
jnp
cmp
or
fsubrl
jne
ljmp
mov
pop
ret
lret
xorb
add
lds
ffreep
xchg
cmp
rcrl
enter
and
cli
push
aaa
mov
jmp
pop
dec
xchg
sahf
xor
cmp
jmp
or
pop
mov
pop
add
xor
outsl
ja
pop
mov
test
loopne
add
stos
jo
mov
inc
and
mov
dec
inc
xor
outsl
mov
iret
bnd
arpl
add
add
mov
and
or
push
mov
adc
dec
mov
dec
rcll
dec
xor
arpl
loop
sbb
inc
sub
repnz
insb
add
jecxz
xchg
test
arpl
dec
sahf
sbb
lret
adc
shl
adc
leave
adcb
roll
nop
lock
rorl
repnz
push
cmp
mov
popa
pop
and
cmp
sbb
pop
imul
jmp
mov
in
mov
scas
test
loopne
push
cmpb
jp
lea
gs
adc
adc
cmpsl
xor
and
adc
sbbl
push
insl
in
or
hlt
jecxz
lea
add
add
add
sub
mov
dec
cmp
rol
punpckhdq
xchg
sbb
jne
les
repz
jns
pop
pop
or
jecxz
testl
loopne
inc
fstpt
cmp
jl
or
mov
and
test
inc
dec
icebp
sbb
addb
sbb
rclb
scas
inc
inc
pop
cmp
aam
inc
mov
lret
inc
mov
mov
sub
sti
push
jl
push
xchg
mov
add
ret
jle
push
outsl
pop
jnp
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
aaa
push
jne
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
mov
ret
addr16
inc
pop
cmp
shrb
pop
xor
pop
pusha
xor
arpl
lret
and
addl
pop
mov
and
sub
outsb
mov
popa
sbb
add
movsb
jecxz
pop
mov
push
inc
test
xor
js
insl
mov
jecxz
pop
mov
sbb
jl
push
mov
and
cmp
xor
mov
pusha
and
rcrl
adc
ss
or
or
inc
or
loop
inc
popa
and
and
add
pop
mov
and
lea
js
notl
sbb
int3
add
add
xchg
mov
jo
inc
test
xor
mov
cwtl
aaa
lods
jns
adc
test
mov
pop
or
pop
dec
cs
or
adc
fldcw
nop
add
sub
movsb
jl
jns
lods
mov
mov
mov
xor
dec
shlb
ljmp
sbb
stc
cmp
loop
adc
lea
lret
pusha
sub
mov
add
xor
push
orb
push
mov
mov
mov
ja
mov
add
mov
lods
sbb
sbb
adc
sbb
or
sbbb
fbld
insl
test
and
xor
test
in
sub
jl
movsl
xor
adc
sbb
fadds
or
popf
add
cltd
nop
or
js
mov
mov
test
cwtl
loop
mov
add
shlb
jbe
mov
mov
into
cmc
fldl
xor
and
lods
fmul
mov
in
push
cmp
inc
pusha
push
xchg
test
loope
ret
and
jge
dec
fisttps
fdivs
stos
ret
lock
and
jne
push
mov
xor
xlat
imul
loope
push
inc
mov
es
call
add
pop
les
and
mov
aaa
imul
inc
and
add
sbb
lock
rcrb
mov
aaa
adc
aaa
cmp
es
shrl
and
mov
adc
cwtl
mov
cmp
push
movsl
mov
mov
xor
lods
les
les
fidivrl
push
push
pop
lock
lret
loop
mov
dec
enter
or
sbb
loopne
addl
arpl
imul
clc
push
jecxz,pn
loopne
jge
jl
cmpsb
test
push
js
mov
xor
daa
lahf
lock
imul
or
push
inc
mov
cs
pop
cmp
push
xlat
push
cmp
inc
or
test
mov
pop
rclb
pop
movsb
je
jge
mov
adc
or
repz
and
pop
rcrb
cli
addb
push
lods
movaps
and
pop
mov
push
xchg
std
or
cmpsl
mov
ror
adc
adc
mov
mov
mov
sub
mov
pop
ret
gs
fnsave
jecxz
or
jne
rorb
inc
rolb
imul
or
or
aas
loopne
push
scas
adc
pop
in
fists
cmp
cmp
jmp
pop
cmp
add
mov
jg
aad
push
cmpsl
or
dec
push
jp,pt
jl
sub
sbb
ja
pop
lret
pusha
or
add
cltd
and
adc
xor
mov
push
add
jo
stos
cmpsb
add
and
leave
jne
mov
test
mov
cmp
movl
in
je
inc
push
inc
add
xchg
and
not
aam
sub
imul
xchg
dec
jge
ds
shrb
pop
inc
std
mov
mov
lcall
add
repz
ss
mov
jl
inc
push
and
sbb
cmp
mov
xchg
cmc
pop
mov
or
add
aam
mov
aam
mov
enter
jp
out
icebp
lock
out
movsb
xor
testl
pop
mov
movsl
push
push
movsl
inc
faddl
fldl
decb
push
clc
push
fcomp
fnstsw
std
mov
pushf
fldl
pop
fsubr
pop
faddp
andl
xchg
mov
fstpl
fistl
or
insb
inc
push
dec
mov
cs
popf
sub
lret
mov
inc
loopne
fs
xchg
lods
push
mov
inc
enter
into
push
add
std
sbb
dec
aam
sub
or
fstpl
loop
es
pop
frstor
in
push
adc
subb
pop
cltd
mov
dec
inc
add
cmp
sub
sub
pusha
jnp
push
mov
or
insb
xchg
push
and
adc
jmp
add
jmp
dec
adc
pop
push
inc
imul
pshufw
out
dec
cli
mov
movsb
push
test
lcall
inc
int3
dec
sbb
or
lock
push
lcall
inc
divb
jne
pop
in
sub
cmp
add
or
decl
das
pop
dec
push
jmp
mov
cmp
rclb
and
or
roll
loope
bound
mov
mov
rcl
ud0
pop
or
and
xchg
mov
add
jmp
mov
sub
cwtl
mov
test
icebp
mov
aam
add
cmp
xor
push
push
mov
mov
pop
lods
sbb
loope
add
shrl
into
inc
add
xchg
andl
sbb
jbe
dec
jns
mov
mov
stos
adc
je
orb
pop
mov
bound
pop
aad
fstpt
pop
bound
or
xchg
sub
adc
mov
adc
js
push
inc
test
xor
jo
ja
rorl
sbb
ljmp
popa
sbb
das
loope
xor
xor
decl
inc
adc
shlb
ljmp
movsb
pushf
imul
inc
iret
aad
cli
clc
sbb
xlat
out
insl
or
push
imul
nop
xlat
inc
push
call
mov
in
jno
inc
mov
test
ja
enter
jle
or
mov
push
test
in
and
xchg
adc
lret
or
inc
loop
lds
push
dec
xor
sub
push
xchg
and
in
lahf
aas
cmp
mov
stos
xor
adc
rcrl
xor
or
fisttpl
inc
sub
dec
hlt
push
fmuls
inc
inc
fnstenv
mov
xlat
in
incb
add
xchg
jg
adcl
or
je
or
and
push
adc
cltd
fcoml
xor
sub
mov
cmp
pusha
dec
mov
and
xor
ret
push
or
adc
cs
push
sub
mov
mov
or
bound
arpl
inc
jp
cmp
adc
mov
inc
xor
add
lea
sub
adc
inc
sub
bound
inc
sub
adc
rclb
les
sbb
clc
or
rol
hlt
repz
pop
cmp
push
pop
and
lock
sbb
mov
mov
ret
cmp
jge
gs
pop
in
push
hlt
movsl
push
lock
inc
cmp
arpl
and
mov
mov
pushaw
mov
mov
out
out
enter
add
pusha
insl
cld
push
mov
jne
add
push
out
inc
push
xor
ss
nop
xchg
jo
in
cmp
shrb
xor
push
xchg
xchg
or
cs
dec
xchg
mov
movsb
jb
andl
fsubrs
and
or
push
or
push
pop
je
push
lods
jmp
addr16
fcoml
mov
add
adc
add
es
push
mov
or
inc
or
mov
cmpsb
icebp
add
cmp
pop
outsl
add
scas
sbb
pop
js
gs
pop
stc
push
or
add
mov
adc
lods
fidivrl
ret
jle
mov
adc
call
movsb
and
imul
dec
cltd
push
cmp
mov
push
cmp
arpl
dec
xor
popa
js
and
dec
ja
sub
mov
addr16
sub
in
cmp
sub
mov
mov
or
sbb
xchg
adc
outsb
adc
or
mov
mov
pop
lods
dec
push
icebp
test
mov
and
test
imul
neg
call
mov
shlb
ja
insl
movb
and
cmpsb
jne
mov
dec
add
jmp
cmpl
ret
orb
inc
add
mov
xor
xchg
adc
cmp
inc
pop
and
jns
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sub
adc
sahf
mov
sbb
mov
xor
je
loopne
inc
outsl
push
insl
adc
or
mov
xchg
add
lods
xor
mov
cmp
fwait
ljmp
cmp
call
popa
jne
sarl
rolb
jo
iret
sub
mov
mov
lahf
lock
jnp
test
inc
push
inc
xlat
imul
cmp
mov
aam
lods
dec
push
push
dec
mov
hlt
ret
xchg
xor
xor
aas
pop
xor
sbb
inc
cmp
push
fadds
xchg
out
lock
inc
push
jo
xchg
aas
xor
xchg
push
mov
jne
or
gs
into
lock
mov
and
clc
dec
jmp
cmp
ret
pop
or
sahf
mov
adc
xchg
push
paddq
in
out
lock
and
jnp
xchg
jl
mov
mov
mov
pop
js
test
dec
leave
lock
and
call
xchg
adc
clc
push
sti
adc
lahf
inc
lahf
into
das
in
cld
jno
aam
rclb
in
sbb
dec
lret
fistps
xor
aam
mov
dec
out
xchg
dec
push
push
ret
push
loope
test
sbb
dec
js
jo
in
mov
cmp
xchg
push
sbb
jbe
jo
in
mov
nop
adc
add
lahf
pop
imul
and
test
subl
lahf
test
enter
jp
add
mov
add
and
fildll
add
nop
add
leave
sbb
test
push
stos
lock
jmp
xchg
mov
mov
jb
aad
pop
clc
jl
pushf
mov
shlb
sbb
sbb
sub
sbb
loopne
cwtl
xchg
out
rolb
xchg
dec
leave
loopne
inc
es
inc
push
fwait
sbb
inc
sahf
les
add
push
jb
mov
add
or
testl
sti
sbb
cmp
adc
dec
out
std
lcall
xor
andl
jl
inc
jne
sub
loope
movsb
mov
aad
ds
jp
inc
xor
mov
data16
pop
cmp
push
sub
stc
cmc
hlt
or
sbb
xchg
cmp
push
adc
dec
push
sub
movsb
inc
adcl
movsb
push
cltd
pop
mov
int
mov
cltd
push
add
fs
jp
popa
inc
rorl
out
or
pusha
jecxz
push
clc
stos
mov
push
add
push
hlt
jge
inc
adc
jge
pop
inc
push
sbbl
cmp
pop
pop
mov
and
stc
pop
or
cld
shlb
pop
inc
dec
sbb
in
mov
enter
sub
inc
xchg
and
fmul
mov
outsb
inc
in
in
loopne
sub
out
add
popa
leave
int
add
adc
jns
mov
pop
les
add
jo
and
rorl
insb
or
mov
rcl
rcl
inc
xchg
sub
push
out
mov
fld
sbb
mov
ror
push
pop
add
sub
inc
xchg
ss
daa
sbb
nop
idiv
imul
mov
mov
xor
mulb
dec
decl
cmpsl
cmp
call
xor
add
lahf
mov
outsl
mov
loopne
dec
je
js
lock
sub
fnstenv
loopne
ss
add
or
mov
mov
and
fcoms
sub
pop
cs
xor
hlt
pop
inc
xor
cmp
push
fildl
cmp
icebp
push
subb
into
jnp
call
push
push
inc
adc
cltd
fstpt
add
and
dec
sbb
mov
xchg
push
push
ss
aad
sub
jbe
sbb
xchg
sbb
bound
push
fistpll
push
inc
or
sub
pop
inc
jmp
adc
data16
push
push
dec
inc
inc
cmp
sbb
loopne
mov
mov
and
mov
push
mov
inc
jg
and
inc
sbb
jns
or
xchg
jge
loop
data16
cmp
mov
and
outsl
or
jmp
add
push
add
pop
mov
and
lret
sub
push
xor
xor
inc
pop
add
cmp
or
xor
mov
xor
jns
cmp
inc
inc
dec
push
sbb
or
pop
sub
adc
es
inc
aam
mov
lock
lret
dec
sub
repz
sbb
inc
andl
xchg
add
or
and
lea
xchg
adc
jbe
pusha
and
dec
mov
jl
out
or
fstl
rorl
adc
inc
mov
test
cmp
dec
push
sar
mov
rorl
add
aas
sbbb
pop
orb
adc
cmp
cmp
xor
fiadds
or
dec
loop
mov
cmp
push
inc
adc
mov
shrb
xlat
xor
in
faddl
sub
push
sbb
sbb
xor
xchg
lret
or
iret
into
leave
jo
sbb
xchg
out
sahf
adc
nop
sub
in
push
or
mov
pop
xor
mov
xchg
and
cwtl
js
pop
sbb
fdivl
in
sbb
sub
dec
ffree
ss
data16
lret
xor
in
sbb
inc
popf
test
flds
push
sub
dec
clc
inc
aaa
add
mov
add
pop
and
mov
sar
add
cmp
add
pop
adc
cmp
add
push
inc
push
scas
cmpsb
push
push
mov
xchg
sbb
popa
push
nop
push
push
inc
adcl
sub
push
mov
mov
fstps
and
pop
and
mov
dec
aad
cmp
sbb
adc
adc
xor
add
push
inc
and
lahf
sbb
sub
pop
xchg
test
adc
in
pusha
lea
mov
lcall
and
and
pop
enter
sub
or
and
scas
enter
jl
xor
lret
into
sub
es
fiadds
fadds
cmp
adc
cmp
pop
mov
sub
dec
push
cmpb
es
sbb
jl
shrl
aas
scas
dec
mov
enterw
jp
repnz
sbb
std
dec
repnz
pop
mov
push
pop
je
push
mov
cmp
adc
add
jl
jmp
or
sbb
mov
adc
xchg
test
inc
and
cmpsl
loopne
jbe
jne
jns
pop
sbb
mov
push
jmp
push
sbb
call
sub
dec
int
clc
lock
stos
xor
pop
imul
jne
jl
jnp
les
dec
push
jge
lret
xor
xchg
int3
scas
loop
lea
shll
cs
push
lds
or
push
sub
cs
mov
ljmp
mov
sar
jge
clc
and
pop
push
pop
stos
sbb
aas
dec
mov
adc
js
add
mov
jne
adc
imul
push
inc
loopne
lock
push
pop
sahf
add
fs
stos
or
xor
mov
subl
push
fcmovbe
pop
and
movsb
test
pop
dec
pop
movsb
push
mov
bound
fwait
cmp
and
sub
inc
inc
add
jge
pop
push
add
push
lods
mov
mov
loopne
jle
push
xor
adc
aaa
iret
inc
add
adc
xchg
leave
out
mov
mov
mov
or
test
lret
enter
sbbl
mov
push
xor
mov
or
fcompl
popa
out
xchg
xchg
sbb
test
lods
dec
inc
push
pusha
shll
imul
outsl
shll
pop
adc
or
push
test
mov
push
push
cmp
or
data16
jne
xchg
jo
mov
mov
jmp
fldl
add
scas
out
call
andb
dec
mov
mov
ret
push
or
mov
rolb
mov
inc
sbb
cmc
add
xchg
cld
push
out
xorb
xor
sbb
fdiv
je
ffree
add
repz
daa
movsl
push
sub
mov
in
cmp
dec
stos
jge
jne
push
jmp
cmp
xchg
mov
push
pop
xor
and
pop
add
xor
jmp
or
cmp
mov
inc
push
les
mov
inc
push
pusha
pop
adc
and
mov
push
das
push
xchg
stos
mov
in
sbb
popa
cmpsb
shl
aaa
cmc
mov
cltd
daa
mov
inc
dec
decl
mov
mov
enter
mov
push
pop
jge
nop
add
ss
or
jmp
jnp
pusha
sub
cmp
shlb
or
int
test
mov
xchg
sub
ret
das
rolb
iret
rcr
divb
add
shlb
mov
jne
xchg
stos
mov
loope
inc
jecxz
pop
pop
or
push
push
adc
shrl
adc
lods
cmpsl
scas
jmp
or
sub
xchg
mov
daa
mov
loopne
rcrl
push
stos
jmp
or
mov
push
dec
xor
cltd
xor
push
or
pop
xchg
push
sub
icebp
adc
mov
psubusb
insb
popf
sti
add
push
into
stc
stos
push
dec
add
std
stos
cmp
mov
scas
xor
shlb
stos
movsb
int
std
inc
loopne
je
sub
add
fidivs
mov
jne
inc
mov
dec
push
insb
out
mov
incb
xor
jne
mov
push
test
adcb
mov
or
inc
sub
adc
dec
cld
inc
and
iret
jge
pop
out
adc
push
add
push
xlat
inc
pop
lods
or
ficompl
cs
stos
loopne
or
in
adc
loope
inc
sbb
in
adc
dec
faddl
jne
mov
jo
and
sub
xchg
jmp
ja
sbb
jle
ja
mov
and
sbb
and
lahf
xchg
inc
or
mov
fimuls
insl
bound
add
rolb
inc
jno
mov
pop
sub
imul
testb
fldl2t
adc
clc
add
je
rorb
arpl
cmp
add
adc
rclb
clc
lret
sub
push
out
or
pop
mov
ljmp
roll
dec
push
jmp
or
adcl
adc
bound
lods
dec
or
jg
cmpl
popf
rolb
or
ret
ja
pop
add
ds
movl
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
les
sub
leave
repz
insb
mov
mov
scas
popl
mov
lods
xchg
dec
sti
ljmp
xchg
sub
lahf
mov
jmp
lods
push
sub
hlt
jl
push
push
call
sub
mov
mov
inc
and
push
cmpsl
mov
test
mov
daa
loope
jbe,pt
push
hlt
stos
cli
lea
push
sub
mov
mov
dec
push
mov
push
sub
mov
hlt
mov
dec
sarl
or
rorb
imul
ficoml
jecxz
shrb
push
mov
insb
cmpsb
orl
mov
fadds
adc
xor
in
cmp
or
mov
shl
cmpl
inc
dec
add
inc
imul
push
mov
inc
mov
cwtl
and
sub
sbb
push
in
jno
rcrb
mov
pop
imull
dec
jb
push
push
pop
adcb
xchg
cwtl
mov
inc
sub
nop
push
add
dec
loop
adc
mov
adc
inc
or
or
negb
mov
cld
dec
sbb
mov
xor
pop
sbb
in
inc
movsb
iret
jnp
sbb
push
and
add
push
dec
cmpsl
inc
push
add
les
adc
negl
test
mov
mov
or
add
pop
or
and
add
mov
adcl
push
fsubl
push
lea
adc
sbb
cltd
xchg
setnp
or
or
mov
push
bnd
mov
pop
leave
and
add
add
push
push
sbb
pop
dec
xor
push
pop
jl
dec
fsubs
mov
test
sbb
cmp
lret
dec
add
or
push
iret
shr
add
push
push
xor
or
nop
subl
and
jb
add
pop
adc
push
mov
sub
jno
or
out
sbb
fadd
mov
dec
or
cmp
push
xor
fwait
sub
push
push
dec
push
cli
ss
pop
jb
stos
adc
push
repnz
sbb
lods
mov
in
std
daa
rclb
sbbl
inc
pop
push
push
push
roll
adc
push
xor
mov
ret
jb
pop
testb
clc
adc
add
jae
add
push
adc
sbb
sub
repz
arpl
pop
dec
add
inc
or
lods
mov
loopne
mov
add
fwait
push
mov
lock
mov
jb
jl
adc
clc
and
adc
sbb
jmp
push
and
or
cmp
punpckhwd
xor
addb
add
insb
cmp
or
dec
and
test
pop
jo
mov
adc
mov
xor
shrl
mov
inc
pop
cmp
cmp
mov
dec
mov
mov
movsb
sub
and
sbb
dec
sbb
mov
mov
adc
pop
call
subb
cwtl
movsb
cmp
push
sahf
lea
cmp
dec
lock
xchg
call
or
add
das
mov
adc
ret
popa
jmp
in
push
lea
mov
push
adc
cs
or
fucomi
fs
movsl
jno
int3
mov
and
sbb
jne
and
jb
and
mov
scas
fsubrs
add
lods
cli
cmpsl
inc
sub
and
movsb
repnz
leave
sbb
dec
fadd
frstor
pop
lret
fsubrl
push
fmuls
adc
lds
fdivrs
mov
shlb
push
cmp
outsb
mov
stos
add
rclb
mov
ljmp
out
xchg
out
push
sub
mov
xchg
in
jbe
stos
mov
int
in
xor
loopne
hlt
mov
jbe
jecxz
test
bound
and
adc
xor
nop
sbb
or
or
or
es
popa
dec
adcl
sbb
adc
sbb
jl
xlat
inc
jb
adc
push
pop
popa
sbb
mov
xchg
xor
sarl
pop
inc
test
mov
inc
mov
or
les
push
push
xor
or
scas
lret
aam
mov
pop
add
mov
rorl
xor
and
push
cmp
stos
sub
aad
call
mov
movsb
fbstp
adc
add
jecxz
sbb
xor
xor
or
xchg
imull
adc
icebp
jnp
test
int
and
test
mov
shll
shufps
test
mov
sbb
xor
cs
xchg
dec
jle
mov
inc
rolb
lret
lods
cmpsb
mov
test
mov
xchg
cmp
pop
lds
cld
je
push
mov
adc
insb
movsl
in
in
pushf
pusha
lret
push
je
push
push
sahf
mov
and
movzwl
xor
mov
lahf
int
cs
std
enter
lods
inc
push
jae
push
jae
sbb
inc
fucomip
test
sarl
add
or
jl
lock
or
notl
sar
ljmp
loop
push
or
push
shl
push
mov
imul
adc
or
sbb
stc
push
inc
xor
pop
adc
cmp
nop
shll
pop
fsub
fiaddl
push
mov
inc
stos
shl
push
sti
push
aam
dec
cmp
jnp
lahf
jbe
adc
adc
in
js
cmp
add
sbb
dec
imul
nop
pop
icebp
push
push
sbb
rcr
pushf
fcom
stos
pop
repnz
in
push
or
ficomps
adc
cmpb
push
fs
rcl
enter
dec
int3
inc
cmp
xchg
cmp
cwtl
mov
pop
bnd
stos
sti
and
add
inc
or
inc
iret
mov
sub
pop
push
imul
cld
adc
je
scas
or
shlb
mov
adc
ljmp
sarb
mov
sar
pop
in
adc
jmp
cmpb
imul
adc
nop
jg
push
xor
sbb
out
add
rcr
xor
jne
movsbl
mov
pop
xchg
jl
push
cmpsl
cmp
jb
jbe
push
paddb
into
pop
or
push
mov
pop
add
loopne
sbb
push
test
xor
mov
sbb
sub
adc
push
decb
sub
and
pop
push
jo
cltd
js
inc
add
jle
fsubr
pop
push
adc
sub
out
dec
mov
xchg
mov
adc
cmp
jl
sar
or
cmp
xchg
push
dec
or
push
insb
sub
clc
dec
aaa
iret
mov
loopne
jbe
mov
cmp
jbe
ret
jmp
add
fldenv
adc
push
rolb
xchg
fsubp
cli
push
dec
ja
adc
subb
inc
fistl
or
je
mov
xchg
xchg
push
popa
mov
lods
push
add
xchg
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
mov
and
adc
dec
pop
sub
and
test
jae
cmovo
mov
cmp
push
rorl
iret
idivl
call
add
cmp
repz
and
xor
cmp
repz
iret
repz
dec
push
pop
pop
bound
iret
repz
jno
jnp
repz
repz
repz
sahf
mov
mov
sub
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
push
dec
cmp
sarb
sub
icebp
test
inc
sub
mov
outsb
mov
add
push
sub
xor
je
or
rolb
aam
adcl
push
in
out
bsf
add
push
les
or
popa
or
or
cmp
jb
inc
add
sbb
jmp
loope
xchg
and
sub
dec
jo
fsubl
mov
jo
and
jae
and
sbb
daa
lret
add
jb
fwait
hlt
and
sbb
js
xor
mov
jge
jb
call
shll
and
incb
xchg
pop
nop
pusha
sbb
popa
out
mov
les
mov
mov
or
fmull
jmp
fcompl
mov
mov
test
setge
or
adc
and
jmp
clc
nop
jecxz
mov
mov
dec
jge
jnp
adc
push
mov
inc
push
mov
add
push
mov
pop
imul
xchg
xor
jo
pop
add
push
adc
push
in
dec
loop
jmp
mov
pusha
cli
call
pusha
push
mov
ror
xor
shr
xor
std
out
sub
ret
or
or
icebp
add
add
add
or
or
iret
or
mov
push
or
and
xor
add
mov
sti
add
push
add
xlat
in
fsubr
add
or
mov
ror
mov
fisubl
iret
iret
add
xor
and
and
mov
push
rol
data16
inc
test
xor
xor
sub
repnz
sub
fmull
pop
invd
mov
push
loopne
xlat
and
ror
add
add
add
push
nop
cmpsb
sub
call
rorl
clts
mov
push
xor
sub
xor
cli
mov
rol
dec
jae
mov
add
push
xor
fsub
shll
xchg
in
test
in
test
call
push
sbb
in
push
cmp
data16
cwtl
xchg
xchg
pop
mov
add
mov
aaa
add
ret
fwait
call
shll
loopne
in
sbb
loopne
add
pop
add
imul
pop
aaa
mov
jo
xchg
test
mov
or
xchg
rolb
or
xor
xchg
div
and
call
or
add
pop
inc
cmp
and
xor
add
add
enter
push
mov
aas
mov
jge
push
ret
push
inc
inc
scas
shlb
adc
dec
pusha
or
pushf
sarb
or
cmpsb
out
cmp
add
inc
es
mov
mov
lea
js
call
insl
and
fisubrl
add
clc
jl
push
and
add
and
inc
lcall
nop
cmpsb
imul
jl
sarl
icebp
aam
xchg
ficompl
add
cli
mov
xor
movsb
inc
xchg
mov
dec
xor
rorb
inc
in
jb
xor
in
mov
inc
shl
rolb
dec
jecxz
jo
cmp
ss
push
xchg
inc
rorb
add
inc
sub
dec
pushf
pop
and
in
rolb
inc
add
cltd
and
imul
sub
add
push
xor
add
dec
int
dec
jae
dec
xor
pop
or
dec
xchg
push
pop
xor
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
scas
push
add
sub
push
xadd
or
xor
scas
inc
pop
aam
pop
and
rorb
pusha
inc
mov
pushf
adc
sarl
or
adc
dec
scas
fs
adc
lcall
lret
fs
dec
dec
iret
enter
stc
stc
stc
mov
lods
jo
fxch
pop
push
mov
dec
inc
mov
inc
imul
fmuls
adc
fiadds
cmpsb
adc
lods
call
in
adc
adc
mov
sbb
and
nop
hlt
jo
push
mov
shrb
pop
sbb
pop
out
pop
add
sub
mov
and
inc
add
add
andl
push
cld
lea
xchg
scas
dec
movsl
add
sub
pusha
loope
push
pop
xor
xchg
fadds
ljmp
mov
out
in
aaa
sbb
lret
loop
incl
rol
and
xchg
or
enter
imul
push
inc
jae
stos
or
gs
sub
pop
lock
aas
lea
jmp
clc
popl
mov
push
sub
pushl
ss
mov
fimull
pop
jne
pop
inc
ljmp
pop
data16
mov
cmpsl
jge
add
or
enter
clc
aaa
sbb
xchg
fidivl
or
orl
sti
insl
inc
add
jae
push
pop
rolb
rep
fldl
dec
add
movsb
xchg
sbb
lret
imull
dec
pusha
outsl
pop
fdivp
ror
mov
hlt
pusha
or
jl
shr
xchg
and
jb
pop
mov
lea
call
adc
rcrb
int3
movb
loopne
or
dec
js
ret
movl
add
xchg
mov
popa
lret
jbe
dec
lods
add
sbb
pushf
mov
add
shll
sub
lock
rorb
clc
rcrb
fwait
sbb
or
xchg
stos
xchg
in
fstpt
mov
lea
imul
cmp
ja
inc
push
or
stos
call
push
or
stos
mov
enter
sbb
lock
rolb
sbb
add
xor
test
and
ds
add
stos
add
push
mov
push
sub
pop
push
and
outsl
lock
pop
mov
push
and
add
pop
pop
pminsw
mov
mov
inc
mov
shl
jno
loopne
inc
pop
stos
xchg
icebp
jecxz
popa
test
addr16
fstps
insl
outsb
je
fwait
push
mov
lock
pop
add
add
xchg
les
lock
adc
xchg
dec
insl
movsb
push
add
mov
pusha
mov
xchg
xchg
pop
rcrl
xor
sbb
add
sbb
mov
pop
xchg
sbbl
pushf
and
adc
cld
adc
adc
jmp
mov
xchg
cli
mov
add
and
adc
push
cltd
mov
rorb
mov
add
xchg
enter
mov
and
dec
fmull
sub
sti
or
mov
inc
dec
push
inc
jnp
ret
mov
jno
sbbb
clc
roll
mov
fcmovnu
mov
jl
or
nop
dec
inc
lods
sub
pop
dec
test
pop
insl
das
sbb
jle
xor
mov
cmp
jne
lea
cmp
add
xchg
mov
jg
and
or
js
xor
jl
or
adc
cmp
push
aad
or
xor
cmpb
mov
dec
cmp
jl
lahf
dec
mov
cmp
push
js
test
jae
in
imul
movsl
test
dec
daa
loope
xchg
dec
lods
test
and
movzbl
adcb
add
rolb
and
adc
test
js
js
or
mov
push
aam
loopne
pusha
and
cmp
mov
mov
add
ret
mov
leave
sbbb
mov
dec
lcall
mov
sub
xchg
xchg
jp
dec
imul
into
loopne
sub
inc
popf
add
mov
fwait
and
mov
dec
jl
add
push
rorl
sbb
xchg
fs
scas
mov
mov
add
ja
or
or
insb
add
sub
mov
adc
cmp
sbb
add
loopne
adc
sub
jne
sub
inc
mov
dec
sti
mov
adc
sub
inc
push
jmp
sbb
add
jo
cmp
sub
xchg
add
add
arpl
add
mov
inc
push
sub
add
xor
push
lea
push
and
jbe
sbb
xchg
mov
mov
inc
dec
push
lret
cmpsb
push
or
les
and
jg
add
push
xor
sbb
adc
xor
xchg
add
sbb
ret
pop
inc
fstpt
sbb
cwtl
dec
inc
pop
inc
add
pop
dec
sbb
xor
nop
add
ja
outsb
sbb
push
ljmp
push
jmp
loop
jmp
daa
pushf
incb
test
adc
pop
cmc
push
rorl
pop
push
and
push
and
jg
sub
je
ret
or
push
fdivl
mov
pop
neg
adc
popa
insl
or
dec
inc
dec
lods
fldt
adc
xchg
hlt
lret
push
out
mov
test
and
out
pop
pop
out
ret
fwait
outsb
das
sbb
push
or
std
inc
push
mov
jmp
cmp
jmp
adc
mov
push
jg
pop
inc
push
push
adc
or
mov
push
aam
mov
fcmovnb
or
in
xor
push
or
xchg
bound
dec
jo
je
inc
call
faddl
pushf
pop
lea
push
and
adc
cmp
push
cmp
cmpsb
out
nop
or
mov
xor
lods
xchg
mov
lret
lods
adcl
dec
dec
cli
push
xchg
sub
mov
mov
cmpb
aaa
xchg
sub
and
jnp
rorb
jo
pop
mov
push
scas
pop
dec
adc
jmp
cltd
ret
sbb
rolb
adc
and
das
push
pusha
dec
dec
sub
push
xor
mov
adc
sahf
adc
xchg
jmp
inc
jg
mov
mov
mov
pop
dec
push
stos
mov
insl
push
cmp
and
cmp
ds
test
das
or
pusha
std
or
mov
mov
dec
mov
dec
imul
or
cmp
cmp
sbb
inc
pop
inc
inc
rorl
ret
jmp
sub
sub
push
or
xchg
or
pop
insl
cmp
rolb
dec
fnstenv
xchg
jb
pop
das
ss
enter
sbb
adc
frstor
jl
mov
xor
xchg
lret
adc
sbb
cltd
jae
push
movsb
adcb
sbb
cld
cmpl
imul
inc
out
cwtl
lds
gs
sub
or
pop
test
adc
and
push
pop
push
xchg
or
mov
sbb
daa
mov
mov
data16
and
cltd
test
mov
data16
push
fdivl
xor
mov
push
lods
mov
adc
test
push
push
cmpl
push
dec
sub
pop
jmp
stos
jmp
and
mov
ret
mov
adc
mov
and
ja
xchg
popa
rorb
scas
mov
cld
jae
add
xor
dec
mov
xor
push
sbb
pop
jnp
sub
cmp
scas
stos
adc
adc
inc
push
mov
pop
jle
popf
int3
mov
stc
cmpb
xchg
cmp
call
xchg
mov
xchg
inc
dec
inc
adc
cmp
jmp
mov
icebp
or
pop
and
pop
push
pusha
and
adc
push
xor
lds
imul
pusha
adc
pop
aad
je
xchg
or
imul
xor
roll
je
push
xor
loope
jbe
push
dec
idivb
je
and
sti
sub
and
es
data16
xchg
and
push
xor
xor
enter
mov
mov
xchg
call
inc
xchg
pop
mov
push
out
push
xor
movsb
push
push
or
and
push
mov
sub
sub
cld
nop
fnstenv
and
jg
mov
fstps
mov
xor
and
imul
cmp
push
pop
sub
movsb
test
daa
movsl
xor
das
xchg
jp
lea
dec
adc
sbb
or
dec
loopne
inc
cmp
mov
inc
and
xchg
add
or
adc
aaa
dec
pop
movsb
mov
push
and
and
andl
arpl
sbb
pushf
jb
push
push
in
cld
repnz
stc
xor
pop
add
pop
xchg
je
sbb
leave
leave
sbb
lods
rcrb
xor
movb
sub
pop
jne
push
cltd
or
jle
lock
out
mov
out
ja
inc
mov
inc
sbb
js
jle
jecxz
lods
cltd
in
dec
adc
aaa
xor
cmp
jns
lea
fldt
inc
mov
nop
and
fisttpll
sbb
dec
pop
inc
movsb
cli
adc
vroundps
clc
pop
cmp
add
xchg
frstor
loop
enter
push
sub
mov
mov
mov
addr16
ja
jbe
dec
sbb
sbb
popa
mov
js
mov
sbb
js
les
or
mov
cmp
je
cmp
jle
xor
push
push
cmp
mov
fdivrl
dec
jbe
andb
mov
jle
mov
mov
aas
adc
sub
andb
cmpb
xchg
or
add
nop
adc
or
aam
inc
fstpl
and
push
jns
mov
test
and
cmp
sub
mov
inc
fidivrs
stos
rcrb
stc
inc
jo
pusha
shrb
mov
enter
adc
pop
mov
push
stos
ss
repnz
sub
lcall
daa
ja
and
sbb
or
push
repnz
call
mov
sbb
mov
or
test
addb
lcall
push
inc
pusha
cmp
pop
cmp
dec
ret
or
fidivl
pop
sub
push
mov
pushf
les
push
aad
mov
mov
lea
dec
inc
inc
cs
dec
je
cmp
add
outsl
adc
shrl
push
cmp
jge
mov
jg
pusha
pop
and
push
bswap
les
jg
loope
sub
mov
rorb
popa
jl
and
xchg
insl
xor
lock
clc
clc
cld
sub
xchg
add
dec
gs
cs
add
add
add
push
sub
dec
imul
xor
xor
jne
mov
and
dec
or
mov
shr
sbb
loope
mov
mov
or
mov
sub
or
rclb
mov
loope
rcl
mov
sub
cmpsb
adc
add
adc
je
dec
je
push
add
pop
insl
outsb
out
loop
loope
sub
repnz
or
add
lret
sub
in
mov
push
mov
test
je
cmp
jne
sbb
jle
mov
pushf
cmp
dec
sarb
rorb
jmp
or
inc
inc
add
int
cs
xor
inc
or
fmuls
sbb
or
cld
pop
rol
idiv
inc
inc
imul
lock
or
push
clc
jb
push
adc
pop
xchg
push
fiadds
aam
je
mov
add
add
sbb
aas
cmp
mov
stc
pop
repz
adc
mov
push
inc
or
lock
cmp
mov
out
dec
pop
jbe
inc
test
jmp
pop
inc
cmpsb
daa
pop
out
push
cmp
adc
aaa
sarb
ret
mov
cld
mov
pop
outsb
gs
jae
xor
sbb
out
lods
jmp
mov
mov
mov
aas
pop
insb
testl
fs
cmp
je
xor
jg
cmp
push
cmp
jne
inc
jne
xlat
inc
adc
flds
and
add
xor
inc
rolb
add
inc
adc
pop
jae
and
test
andb
loop
xchg
adc
cmp
dec
ret
rolb
fdivrs
sbb
add
add
push
std
pusha
mov
mov
call
jmp
jp
jl
or
jg
mov
jmp
aad
push
imul
adc
mov
int
and
mov
jp
add
shl
dec
mov
jbe
or
fdivrs
dec
adc
in
mov
outsl
adc
test
or
call
inc
ds
lret
mov
add
push
mov
sbb
cli
push
shll
push
out
mov
adc
and
pushl
jge
rclb
push
inc
cmp
xchg
add
push
incb
fnsave
mov
adcb
ds
aaa
cmp
xorb
orb
incb
cmpsl
pop
push
movsb
inc
xor
aaa
mov
jge
adc
pop
das
movsb
xor
xor
fsubs
inc
cmpb
mov
in
ficoms
addb
inc
inc
push
adc
out
jmp
xor
inc
nop
fsubs
out
xor
mov
push
xchg
add
push
mov
add
pop
ucomiss
mov
push
xor
shrb
push
cmp
cmp
mov
lods
xchg
sub
orb
or
enter
and
cmpsb
and
loope
je
clc
pop
cmpsb
out
mov
or
add
pop
xor
clc
jle
clc
arpl
fldl
push
loop
adc
ds
cld
imul
inc
lods
lret
inc
mov
sarb
imul
je
xor
leave
or
cmp
mov
jmp
test
andb
push
mov
ret
in
sbb
sub
inc
push
dec
enter
mov
pusha
icebp
adc
or
in
xor
std
pop
adc
mov
xchg
or
inc
sti
roll
push
aam
aam
sub
jge
jne
adc
xchg
add
je
and
push
sbb
pop
push
add
and
test
xchg
xchg
inc
inc
mov
ss
int3
add
add
cmp
and
test
and
js
mov
or
xchg
mov
pop
fildll
or
adc
js
stos
andb
icebp
jmp
push
rol
or
mov
inc
add
xor
fs
dec
cmc
xchg
rcll
arpl
js
mov
sbb
push
jl
jl
insb
xchg
xor
push
mov
mov
or
movsb
sbb
daa
dec
or
dec
push
movb
loopne
push
xor
mov
push
cwtl
sbb
dec
inc
lcall
andb
push
cmp
pop
xor
cmp
mov
adc
cmp
rcrb
xchg
push
mov
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
movl
or
and
pop
mov
popf
and
xor
inc
mov
leave
enter
sbb
movb
jbe
pusha
les
fs
sbb
push
cmp
add
inc
sahf
outsb
std
add
cmpb
jne
mov
or
not
les
mov
rcrb
stos
push
arpl
fnstenv
call
dec
ret
addb
sbb
mov
cmp
xchg
push
aas
add
lods
sub
mov
sbb
mov
xchg
mov
aam
test
mov
into
push
jb
sub
scas
adcl
arpl
cld
fs
orl
rolb
push
sub
lock
inc
ss
jecxz
fstps
pop
hlt
sub
add
adc
or
arpl
pop
adc
insb
push
inc
mov
add
and
dec
shll
rolb
mov
ljmp
mov
mov
or
loopne
dec
dec
and
arpl
clc
cli
xchg
dec
xchg
cmpsb
push
inc
test
push
jp
fdivs
mov
pop
jae
ret
jb
pusha
clc
inc
insb
je,pt
inc
or
push
sub
push
scas
sbb
mov
shlb
cli
add
pop
dec
push
movb
xorl
push
cmp
push
mov
inc
fs
inc
fisttps
xor
dec
pushf
in
imul
xlat
push
mov
arpl
inc
stos
push
jbe
adc
adcb
add
sti
fistpl
push
pop
jnp
jo
push
jnp
push
or
sbb
das
loope
fnstcw
in
rclb
inc
test
push
xchg
mov
nop
js
adc
xchg
sub
out
sahf
outsb
inc
int
loop
pop
mov
add
sub
push
pop
mov
sbb
xor
xchg
dec
loop
and
or
loope
mov
dec
popa
xor
rorl
jns
mov
adc
insl
test
in
mov
push
leave
in
subb
lret
sahf
mov
lods
bound
pop
cli
rcl
push
jae
cmp
loope
out
xor
in
lcall
inc
xor
cmp
jb
pusha
hlt
cli
push
dec
jmp
push
dec
incl
sbb
lcall
mov
push
je
ret
imul
sbb
test
or
push
or
add
mov
jnp
dec
or
movl
mov
loopne
xor
adc
mov
add
push
mov
scas
mov
inc
dec
jne
and
or
dec
adc
push
out
inc
sub
fwait
arpl
rclb
cld
rorl
xchg
minps
dec
cmpb
mov
jne
lea
jb
adc
jle
inc
push
scas
push
inc
addl
jno
mov
fdivl
dec
sbb
in
shlb
pop
cmp
adc
adc
out
dec
mov
push
mov
andl
fcomps
andb
push
or
jmp
xor
xchg
mov
push
sub
or
sbb
cmp
pusha
inc
cwtl
dec
adc
add
pop
dec
aas
add
add
dec
inc
and
add
iret
test
push
jno
xorl
add
inc
stc
cmp
lret
or
xchg
jo
lea
pop
sbb
push
fbstp
jmp
cmp
jne
or
rolb
aas
add
push
bound
xchg
mov
push
jno
in
xor
icebp
and
data16
iret
insl
pop
mov
sbb
xor
cmpl
enter
pop
int3
mov
xor
sbb
sbb
push
jmp
sbb
xchg
test
mov
add
test
push
add
xor
mov
push
hlt
xorb
movsl
in
dec
shll
jmp
mov
adc
jnp
add
out
ret
addr16
xchg
or
jge
cmpb
inc
mov
pop
sbb
sbb
mov
jno
jno
or
cmp
fists
mov
or
or
in
mov
subl
inc
pop
imul
jns
and
xor
jecxz
into
add
dec
loope
dec
adc
mov
push
sub
ret
pushf
fstpt
scas
cmp
push
mov
sub
mov
mov
scas
lea
jns
pop
dec
push
mov
xchg
xor
pop
mov
cmpsl
add
lock
add
sahf
mov
mov
and
mov
inc
pop
sbb
mov
xchg
pop
mov
adc
cltd
and
and
push
xchg
or
push
push
pop
or
jno
mov
insb
repz
test
mov
xlat
call
pop
push
loop
adcb
or
nop
cwtl
lock
cmp
or
sbb
add
push
and
add
movl
push
xchg
or
test
jmp
bound
mov
sub
jecxz
push
or
xor
nop
or
and
push
inc
push
adc
sub
adc
add
xchg
test
mov
fstl
retw
xchg
pop
stc
jno
fdivrl
mov
xor
or
push
jnp
adc
cs
aaa
pusha
lock
adc
push
shll
jb
test
stc
sub
mov
enter
mov
fdivl
cwtl
dec
add
sub
bound
pop
leave
call
addl
inc
xor
xchg
pop
js
push
pop
test
mov
or
xchg
mov
xchg
or
push
or
sbbl
sub
mov
mov
inc
pop
cmp
shlb
sbb
shl
ss
push
xor
dec
sarl
shll
pop
cwtl
cmp
fidivs
ss
mov
or
xor
sarl
loopne
mov
sbb
pop
loope
adc
sahf
and
jp
xor
jmp
rclb
mov
mov
inc
jmp
inc
inc
call
adc
cmp
add
mov
adc
inc
push
xchg
popa
xchg
cltd
pop
imul
cmp
pop
push
ret
es
ret
outsl
and
and
dec
jecxz
leave
imul
xchg
movsb
popf
insl
jne
or
mov
jmp
andb
or
xchg
rclb
dec
xor
aad
lods
test
fistpl
cmp
inc
aaa
add
hlt
inc
adc
pop
jmp
rorb
stos
adc
adc
or
fistl
ret
out
xchg
lods
popf
shrb
out
add
mov
or
jae
je
adc
and
mov
test
fcomps
aas
push
mov
movl
mov
add
or
aaa
repnz
cmp
sub
jbe
sbb
int
push
lods
mov
add
pop
rcll
mov
cmp
repz
test
add
inc
or
push
sub
add
dec
mov
sahf
push
sub
subl
add
test
out
mov
adc
ret
adc
outsb
scas
rcll
adc
inc
inc
mov
icebp
ret
mov
cld
mov
cmp
leave
enter
push
out
outsl
add
jmp
xor
sub
or
int3
mov
sbb
pusha
inc
inc
fs
in
pop
inc
pop
jmp
mov
mov
sbb
jne
pop
push
rol
mov
jae
mov
push
adcb
and
jns
inc
xor
add
push
or
lock
ds
xor
dec
mov
inc
push
fmuls
cmp
jmp
lea
mov
adc
pop
std
xor
pop
dec
ds
xchg
or
aas
or
adc
cmpsb
push
sbb
js
es
add
push
mov
stos
mov
mov
dec
leave
push
adc
inc
in
out
fisttpl
sbb
and
or
cmp
jge
and
mov
js
sbb
and
jl
ss
xchg
nop
mov
mov
test
sbb
fwait
and
test
aas
fs
push
sub
aas
and
jp
pop
jmp
aam
or
or
xchg
add
xchg
mov
ja
dec
adc
pop
sub
xchg
inc
sub
mov
mov
push
cmp
pop
mov
bnd
sbb
mov
push
push
fldcw
inc
and
xchg
adc
insl
in
push
jb
mov
adc
pop
mov
sub
ret
xchg
loopne
xor
xchg
adc
sub
inc
dec
ja
shrb
mov
out
xor
jge
or
and
xchg
ss
dec
test
lock
rcrb
loop
or
mov
add
leave
data16
push
loopne
orl
gs
dec
sbb
in
inc
add
pop
movb
loope
addr16
and
pop
mov
push
scas
stos
pop
aaa
popf
sahf
into
and
sub
mov
jp
adc
push
imul
xor
insb
in
push
jae
shll
ja
mov
jae
fisttps
and
call
or
cld
push
fnstcw
xchg
push
cli
je
sbb
mov
shrl
xor
cmp
or
out
jmp
push
or
loope
add
popa
lods
fadds
xchg
fwait
lods
enter
ds
out
imul
mov
mov
jle
pop
js
mov
fdivrs
push
jmp
movsl
or
jbe
add
decb
cmp
insl
loopne
jo
subb
jg
xor
call
mov
mov
and
xor
sub
xchg
scas
mov
call
aad
in
mov
add
mov
xchg
or
sub
adc
daa
push
inc
mov
push
xor
pop
mov
pop
cmp
sbb
int3
inc
or
outsb
sbb
repz
call
jmp
inc
sbb
or
imul
aas
xor
lret
je
arpl
and
jnp
mov
js
data16
mov
fcmovnb
mov
and
aas
pop
cs
lcall
sahf
rcrb
mov
call
or
nop
add
adc
int
sub
pop
mov
or
sbb
mov
gs
je
pop
push
push
xchg
hlt
sub
mov
insl
push
imull
inc
in
dec
sub
push
fst
inc
add
or
aas
mov
sbb
int
or
adc
in
fistl
shl
cmpb
xchg
push
divb
and
mov
push
adc
sbb
cmp
cwtl
add
les
jmp
bound
test
pop
enter
inc
adc
je,pt
shll
xor
in
add
jge
mov
ljmp
push
mov
and
jge
sbbb
popl
push
jg
rcl
push
pop
sbb
sub
cmp
out
cs
inc
inc
sbb
ss
mov
test
ret
push
aaa
ds
stos
insl
inc
add
sbb
es
mov
leave
les
inc
xchg
sbb
adc
or
mov
or
sub
shlb
add
rolb
lds
mov
add
je
cmp
jbe
push
popf
mov
or
cmp
loop
jecxz
pop
dec
ror
pop
push
movl
pop
fildl
test
inc
orb
adc
int3
or
mov
lods
lock
pop
inc
arpl
push
or
mov
cwtl
fcompl
incb
mov
xor
add
mov
jb
wbinvd
push
push
clc
push
cmp
or
dec
jo
adc
pop
mov
fsubrs
xor
push
inc
data16
adc
mov
scas
lods
push
mov
pop
jmp
icebp
testb
subl
enter
gs
lock
test
cmp
sub
adcb
cmp
rorb
mov
call
jb
inc
pop
pop
cmpxchg
aaa
or
push
dec
or
push
inc
mov
sbb
ja
shll
and
sti
sub
push
test
ljmp
out
mov
cmc
aaa
jl
jne
mov
adc
outsl
ret
addr16
adc
in
cmc
fistpll
jle
push
xor
pop
div
hlt
add
lea
adc
or
fisttpl
and
xchg
sub
push
mov
inc
push
xchg
test
lds
push
add
cmpsb
add
push
xor
lea
add
movsw
inc
pop
mov
xchg
repz
xchg
je
stc
xchg
subb
inc
fisttpl
sbb
and
dec
stc
push
std
in
ljmp
add
or
pusha
add
add
jne
or
insb
cmp
sub
nop
fisubl
je
xor
ret
jo
dec
xlat
outsb
push
shlb
adc
sub
sub
jne
and
insl
bound
adc
adc
push
std
pop
mov
lret
fidivrl
clc
int3
add
mov
mov
ds
or
add
jb
cmpl
cli
nop
mov
and
cli
add
xor
clc
in
rorl
jmp
loopne
add
xchg
rorl
je
rep
jge
xor
or
rcrb
add
das
push
push
jbe
push
decl
sbb
jo,pt
test
mov
push
or
xor
dec
cmp
sub
cmc
dec
shrb
mov
je
popf
xor
xchg
add
push
or
add
fs
enter
scas
pop
push
scas
in
push
pop
and
sbbb
psubusw
test
outsb
adc
loopne
clc
jg
fs
fistpll
add
movd
movaps
fdivrp
push
enter
shlb
jle
xor
test
ror
test
decl
fnstcw
and
lret
or
jg
std
int
mov
adc
jnp
mov
mov
aam
ret
pop
cmp
and
mov
aaa
out
push
cmp
add
xor
fisubl
jbe
and
rclb
xlat
addsd
int
add
es
jns
sbb
sbb
sti
cmp
pop
test
addr16
inc
shrl
or
ret
mov
mov
mov
rolb
pop
rcrb
loop
add
cld
jb
test
mov
xor
adc
int3
jmp
ficompl
sub
ret
adc
shl
nop
inc
std
cld
stc
lea
add
frstor
movsl
jp
mov
push
stos
scas
or
in
lret
imul
sub
xor
or
cmpl
sub
scas
jg
jb
add
lods
or
incb
mov
push
sub
cs
ds
inc
sub
mov
jge
ja
mov
jbe
push
lahf
in
je
cmp
jne
inc
cmpb
out
orb
add
or
inc
lock
dec
mov
inc
inc
and
adc
or
or
mov
add
ret
daa
pushf
data16
addr16
orb
adc
jne
jmp
mov
or
xor
aaa
xchg
jo
push
xchg
int3
xchg
adc
xor
clts
sbbb
mov
rdtsc
shlb
test
int3
js
je
add
ss
mov
dec
cmp
mov
insb
daa
cltd
push
in
push
cmpb
scas
pop
sbb
jns
in
scas
mov
outsb
test
pop
sbb
push
jne
inc
adc
ret
mov
push
push
movb
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
and
cmp
push
and
enter
iret
xor
cmc
movl
cmpsl
dec
push
inc
jmp
pop
mov
inc
fldenv
pop
lret
pop
cmp
jmp
aaa
add
inc
rorl
mov
inc
testb
or
out
fnstsw
or
orl
push
mov
push
xor
cmp
push
cs
and
int3
stc
inc
out
xor
or
test
adc
mov
sbbl
arpl
cmp
cmovo
icebp
cmp
mov
push
adc
dec
add
cmp
cli
adc
adc
adc
cmp
insb
push
bound
or
sub
dec
shlb
sub
rorb
data16
data16
add
fs
shlb
mov
mov
push
sbb
add
je
jae
rcrb
enter
mov
xor
add
icebp
pop
pop
xchg
push
cmp
jns
js
sahf
xchg
adc
xchg
popa
rolb
pop
shr
arpl
nop
orl
loop
icebp
mov
xchg
out
add
mov
rcl
mov
cmp
das
cwtl
cwtl
xlat
pop
mov
pop
jecxz
in
pop
inc
inc
mov
bound
xchg
and
pop
test
jmp
ret
in
add
jne
out
pop
add
testb
je
inc
mov
cmp
cld
in
fwait
and
loope
or
cmp
jne
dec
jmp
shll
popa
outsb
lret
lret
jne
inc
aaa
push
sub
mov
push
loope
bnd
iret
cmp
inc
jno
push
pop
mov
fstps
test
inc
lret
stos
inc
mov
xor
or
incb
sbb
mov
ljmp
inc
mov
pop
and
es
pop
rorl
inc
pop
jne
fnstenv
clc
decl
add
cmp
jb
rep
jmp
push
scas
add
cmp
or
mov
adc
gs
idivl
push
in
nop
je
mov
xchg
clc
and
add
xor
mov
or
lods
adc
push
repnz
dec
add
and
nop
inc
add
xchg
mov
cmp
mov
sub
and
adc
stc
aas
iret
or
mov
mov
call
call
hlt
jo
out
hlt
clc
clc
cld
loope
call
add
add
out
or
push
push
sbb
lock
nop
inc
xor
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
pop
and
std
cld
jno
pop
stc
out
in
addr16
adc
pushf
xchg
add
and
stc
sub
daa
pop
nop
add
and
dec
gs
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
cmpsb
shl
push
mov
or
jns
out
push
mov
ror
sahf
out
icebp
jecxz
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
cmpsl
jge
and
cld
or
push
adc
test
aaa
push
add
andl
adc
cltd
push
inc
cltd
hlt
dec
push
jbe
pusha
aam
inc
jae
xor
inc
imul
rolb
push
mov
cmp
aad
fucomi
test
pop
and
cmp
jae
sub
out
add
push
enter
fildl
add
or
add
movsb
sbb
movsb
push
sbb
dec
iret
xchg
and
orb
jge
adc
sbb
roll
jge
pop
test
out
push
add
daa
sbb
rclb
pop
out
int
cmp
test
iret
push
cmp
mov
and
mov
popf
mov
lret
cmp
adc
inc
xchg
add
inc
pop
test
enter
inc
iret
aam
out
lock
sub
loope
dec
jle
lock
je
mov
mov
test
add
das
in
mov
cltd
pop
jge
pop
and
jb
mov
adc
cltd
pop
fistpl
and
jno
sbb
lcall
pop
fistpl
push
mov
arpl
fistl
push
es
sub
inc
aaa
jle
sub
in
pop
cmp
pushf
mov
cmp
into
lea
cmp
frstor
in
inc
push
lret
sub
cmp
cmpsl
imul
adc
or
add
add
or
pop
and
push
mov
pop
cld
dec
xchg
rorb
xchg
cmp
scas
add
and
add
outsl
mov
push
push
and
rorb
ss
xor
cmp
adc
dec
pusha
inc
jp
push
js
into
mov
push
inc
fnsave
pop
ljmp
fadds
adc
push
push
jbe
mov
and
cs
xchg
iret
shlb
lods
int
push
pop
movb
iret
pop
and
pop
dec
sti
pop
xlat
loopne
xor
pushf
xchg
loopne
mov
fnsave
aaa
and
dec
or
lret
pop
and
inc
or
loope
pop
cmp
ss
adc
les
jb
push
test
mov
adc
nop
push
mov
pusha
cmp
jne
mulb
jno
pop
outsb
or
or
xchg
pushf
rolb
dec
loopne
into
pop
test
arpl
cld
cmp
or
pop
clc
pop
rorb
add
lcall
lea
cs
or
add
or
jl
and
xlat
jg
gs
aaa
push
ljmp
in
xchg
sub
popa
push
adc
jmp
push
sub
inc
sbbl
cmpsb
sbb
cmpsl
jno
push
or
fisttpll
ffree
js
or
pop
cmp
out
fs
jnp
loope
cs
cmp
call
push
shl
pop
mov
rorb
push
add
imul
sub
jns
or
pop
jbe
lea
adc
sbb
pop
add
jp
sbb
pop
call
sbb
test
mov
inc
cmp
and
and
cmpsb
out
mov
mov
loop
addl
adc
daa
icebp
jmp
scas
mov
adcb
jmp
push
add
sbb
scas
push
shl
rolb
pop
pusha
lds
lods
cld
jbe
testb
aam
add
jnp
mov
pushf
pop
popa
mov
movb
inc
js
dec
cmp
es
out
call
outsl
cmp
pushf
mov
inc
bound
mov
pushf
add
repnz
test
std
addr16
je
sub
test
xor
xchg
es
lock
or
mov
xor
mov
inc
test
jl
pusha
mov
pop
and
pop
or
js
hlt
add
sbb
pusha
hlt
roll
shll
sbb
xchg
testb
pusha
or
leave
inc
dec
push
rolb
cmp
xchg
sbb
test
shl
and
sub
stos
inc
cwtl
rcr
xlat
lea
sbbl
or
or
add
out
pop
or
sbb
out
pop
out
pusha
sub
sarl
adc
cltd
rclb
mov
testb
inc
xchg
pop
jo
frstor
shl
pop
inc
rorb
aam
ret
pop
dec
div
clc
add
mov
test
jp
daa
dec
jne
mov
and
cs
cmp
xchg
adc
test
or
loope
cmpsb
dec
jne
mov
imul
xor
and
orb
fisttpll
or
shll
and
stos
movsl
jle
xchg
cli
cmpl
jne
add
rolb
push
outsb
add
mov
into
pusha
jg
add
fisubs
dec
mov
imul
std
jne
lods
data16
out
jne
call
aam
insl
lds
jb
jmp
push
inc
incl
dec
out
jns
mov
jmp
std
and
jns
push
xor
cld
cld
jmp
fildl
adc
in
adc
adc
inc
inc
inc
inc
jecxz
out
out
pop
mov
or
add
pop
repnz
std
or
adc
push
or
sub
dec
mov
out
push
subb
movsb
sub
and
jne
mov
repnz
rolb
or
jo
retw
bound
push
or
insl
mov
adc
aaa
nop
addl
std
arpl
or
or
pop
pop
inc
es
es
pop
push
sub
repnz
cmpsl
fs
or
js
enter
sbb
movb
jmp
push
mov
mov
movsl
add
rcll
mov
je
mov
mov
cmp
jg
add
adc
jmp
and
test
mov
or
popa
call
push
push
into
inc
call
and
mov
ja
shl
push
outsb
jae
out
fs
cld
jo
adc
jb
lea
scas
les
sub
inc
xor
outsb
and
and
pop
pop
sbb
arpl
nop
rorb
jo
bound
sub
imul
push
imul
call
addr16
mov
stos
addb
push
add
or
gs
push
rorb
adc
call
mov
jae
lea
and
dec
in
hlt
mov
es
push
pop
or
push
mov
rorb
clc
add
popa
or
sbb
mov
int3
sbb
fmuls
lock
and
mov
hlt
sub
sub
cmp
push
sti
jno
sbb
cld
push
in
sub
adc
adc
add
add
xchg
mov
pop
mov
dec
sbb
jne
int
mov
mov
push
lcall
xchg
jmp
mov
cmp
ja
mov
fistpll
mov
lea
neg
mov
sbb
jl
outsl
inc
cli
or
add
jmp
or
mov
inc
inc
push
out
mov
sbb
dec
je
scas
mov
pop
add
mov
inc
cmp
jb
add
and
jae
pop
fbld
loopne
inc
cld
addr16
push
flds
mov
shrl
or
push
inc
add
and
loopne
test
add
lahf
jne
int
iret
sbb
jne
or
add
jecxz
push
adc
aad
into
and
xor
dec
stc
xorl
adc
iret
xor
jo
and
ljmp
add
pop
mov
jne
test
ss
dec
inc
cld
mov
ss
cmp
je
push
subb
cmp
push
aam
xchg
pop
addr16
test
std
cld
inc
or
xchg
sbb
sbb
test
mov
ljmp
div
add
mov
mov
hlt
jae
jecxz
inc
or
jl
and
lret
fwait
daa
loope
push
mov
mov
add
xor
dec
sbb
push
pop
inc
arpl
andl
jmp
cmp
fstp
sbb
adc
jne
sub
xchg
scas
jmp
inc
adc
cmp
push
push
xor
dec
test
cli
js
or
push
pop
in
and
adc
adc
push
fdivl
pop
mov
pop
add
lea
pop
lods
adc
mov
inc
test
xor
jmp
roll
lret
sbb
jg
dec
pusha
je
lea
mov
xlat
sahf
sbb
test
and
loopne
test
fisubrl
sahf
dec
subb
push
inc
mov
push
add
and
dec
movsb
and
movsb
xor
rclb
push
mov
add
loopne
std
mov
sbb
adc
sbb
into
sbb
xor
dec
in
sub
adc
add
cmpb
lock
jmp
pop
cli
in
popa
jmp
push
inc
mov
push
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
sub
lock
and
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
adc
pop
insb
mov
adc
pop
insb
mov
mov
leave
push
add
xlat
lds
push
sti
push
inc
lods
sub
push
adc
orl
cmp
andb
sbb
sbb
dec
sub
adc
jns
test
into
icebp
out
add
mov
xor
loop
nop
ljmp
jne
jl
add
xor
fdivrl
ret
and
movb
sub
push
dec
in
push
adc
lret
fisttpll
adc
xor
enter
add
xchg
mov
mov
mov
xchg
lea
and
adc
xor
cmp
push
pushf
xchg
cltd
clc
or
lock
or
inc
daa
jne
or
rcr
push
jno
and
push
inc
repz
jnp
xchg
sub
out
dec
ret
push
push
imul
cmovl
or
mov
inc
cmp
push
movsb
out
int3
mov
es
testb
call
out
jmp
mov
and
mov
inc
sti
mov
mov
sbb
cvtps2pi
jmp
add
or
add
jp
jne
ret
clc
inc
and
adc
je
xor
inc
jecxz
inc
and
xor
add
add
arpl
clc
push
lret
repnz
mov
add
adc
incl
mov
sub
loop
enter
ret
push
or
sti
or
mov
enter
roll
js
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
stos
das
dec
adc
push
mov
xchg
push
jge
or
or
gs
rcrb
jbe
inc
lret
in
inc
dec
jae
adc
outsl
fstl
lods
sarb
in
loop
dec
push
push
aaa
cmc
xorb
pop
addl
jnp
add
decl
cmp
pop
pop
sub
cmpsl
fstl
mov
jbe
hlt
cltd
pop
idiv
decl
jl
enter
cmpb
stos
scas
lcall
cltd
cmpsb
push
cmc
inc
xor
rol
imul
adc
mov
mov
jb
dec
ficoml
pop
popa
mov
dec
pop
mov
in
dec
pushf
push
pop
push
pop
inc
jmp
mov
mov
dec
fsubrl
adc
and
mov
pop
add
iret
jmp
fdivr
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
jge
dec
clc
cmp
testb
ja
into
push
and
xchg
loopne
mov
lock
push
push
jecxz
xlat
inc
add
or
stos
ret
fcoms
fists
pop
inc
sub
fcmovb
in
mov
adc
and
lods
add
addl
rcl
cltd
int
cmp
push
in
xor
pushf
test
pop
iret
push
push
sbb
loopne
je
rorb
js
call
orl
lods
das
lods
popf
jmp
daa
adc
sbb
aaa
mov
jbe
or
imul
sti
or
aam
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
jae
push
or
jno
ds
sbb
add
jmp
push
lea
dec
push
mov
and
add
push
mov
push
lea
dec
push
cmp
test
je
pushf
jbe
and
add
insb
adc
xchg
push
lock
addr16
jnp
in
push
jne
mov
addr16
add
dec
orb
push
jmp
mov
fs
pop
adc
sbb
imul
and
fistl
pop
jns
fadds
mov
sub
mov
add
add
cld
push
or
js
dec
mov
xchg
jbe
leave
add
ja
push
jmp
rorb
add
dec
jb
sbb
fidivrl
jmp
sub
and
mov
pop
jae
adcb
or
push
fcoms
cmp
sub
je
add
js
jp
imul
jae
cld
fisttps
sub
jmp
cmp
jae
pop
add
push
outsl
je
ljmp
jne
test
inc
push
sbb
pop
loopne
int3
inc
sub
mov
cli
mov
pop
lea
add
sub
jo
xor
sub
adc
or
or
fst
fsubrl
add
xor
mov
jns
sbb
dec
and
loopne
shl
or
pmaxsw
arpl
mov
pop
jle
push
aaa
push
pusha
ss
cli
or
out
popf
xchg
pop
lea
xchg
xchg
and
dec
imul
sbb
sub
aam
pushf
push
frstor
sbbb
add
or
mov
pushl
sub
add
leave
sbb
pop
jbe
lcall
push
push
pop
sub
mov
adc
sbb
add
push
push
dec
out
outsl
ror
mov
sbb
mov
add
adc
lret
push
push
add
dec
cmpsb
mov
push
inc
lods
movsl
fldl
push
stos
sbb
mov
or
scas
sub
cmp
push
mull
lea
sbb
jl
inc
inc
xor
bound
jbe
lahf
out
jnp
jns
add
inc
cmp
je
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
inc
dec
or
je
ret
mov
sbb
cmp
xchg
mov
push
call
and
testb
pop
inc
mov
cmp
mov
push
hlt
cmpsb
or
sub
shrb
popa
cmp
xorl
insl
push
cltd
pop
jne
cs
pop
sets
inc
rcr
push
push
aas
push
inc
fcmovne
inc
push
mov
jg
pop
das
in
add
aam
int3
push
push
add
js
imul
mov
fs
lret
inc
dec
movl
add
push
mov
xlat
xchg
sbb
js
in
cmpsb
aad
xor
or
dec
add
lea
jl
xor
lea
jp
jns
aaa
jb
push
sbb
xchg
insb
fmul
add
popa
rol
orl
push
aas
and
jmp
dec
and
jbe
hlt
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
ljmp
pop
movsb
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
outsl
cmc
jp
lret
push
mov
adc
add
sbb
mov
adc
jge
cwtl
push
push
in
call
ds
and
dec
js
js
pop
jp
pushf
mov
jbe
ja
mov
xchg
lcall
add
enter
movsb
pop
xor
and
insb
not
cmp
fisttpl
jmp
adcb
rcrb
and
push
repnz
sub
mov
loopne
sub
mov
ja
or
mov
cmpb
jne
jbe
dec
call
mov
push
lock
add
jne
push
jecxz
mov
pop
out
dec
movsb
mov
lret
pop
or
xor
inc
jae
stc
xlat
repnz
jle
add
or
lock
inc
jp
cmc
fsubrl
inc
sar
and
dec
sub
out
decb
das
test
adc
je
mov
mov
jne
mov
loop
into
xlat
jl
repnz
and
loopne
nop
xchg
pop
jl
add
xlat
jnp
cmp
push
sub
and
inc
sahf
dec
lret
mov
xchg
add
jl
shlb
aad
mov
popf
imul
push
leave
jl
enter
call
mov
jnp
pop
in
loopne
nop
push
add
icebp
mov
inc
mov
mov
and
decl
dec
jno
incl
repz
pushf
xchg
mov
mov
test
ds
jmp
popl
adc
in
xchg
inc
enter
pop
nop
andb
push
int3
pushl
call
mov
mov
mov
or
jns
out
push
xor
inc
dec
push
pop
add
icebp
arpl
inc
jl
test
xchg
test
sub
push
lds
nop
es
mov
xor
aaa
and
cmp
pushf
pusha
nop
push
xlat
jno
iret
dec
divb
push
or
je
mov
xchg
icebp
inc
icebp
sub
jne
pop
mov
leave
sbb
repnz
cli
add
pop
or
or
mov
shrb
mov
testb
jne
push
pop
sbb
xchg
stc
xor
loopne
lea
inc
and
cmp
jbe
or
and
repz
dec
add
adc
push
imul
mov
push
inc
data16
sub
adc
sbb
push
push
test
test
mov
jmp
idivb
je
movsl
pop
test
sub
jo
mov
add
es
sbb
or
inc
sub
call
shll
mov
out
int3
xchg
stc
xchg
add
pop
or
inc
lock
icebp
subl
filds
pop
sar
mov
shll
mov
jns
push
push
add
add
mov
dec
xchg
push
std
pop
shll
shll
js
mov
sbb
and
sbb
cmpb
push
jp
push
lock
daa
rcr
and
xor
add
pop
loope
inc
loop
js
cmp
andb
pop
jbe
jb
sub
push
mov
in
je
sbb
adc
cld
addb
mov
adc
push
push
lds
shrl
push
jo
push
xchg
insb
xchg
xchg
push
clc
mov
or
dec
stc
add
fmuls
or
inc
cwtl
mov
leave
adc
loope
dec
and
and
sub
nop
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
sub
dec
js
xor
or
pop
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
jmp
sub
leave
sbb
mov
stos
xchg
andl
mulb
dec
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
or
push
loope
shlb
pushl
mov
add
call
ja
int3
lcall
in
add
and
add
test
clc
or
add
fimuls
and
xor
sub
enter
mov
adc
mov
inc
push
mov
adc
jbe
push
inc
dec
das
test
jne
outsb
or
pusha
lcall
fs
add
nop
fcmovu
mov
pop
divl
dec
cmp
cmc
cwtl
add
es
mov
dec
push
mov
xchg
lcall
push
push
jne
rcrb
call
imul
repz
mov
rcl
push
in
pop
mov
mov
pop
add
adc
lds
inc
push
push
pop
jmp
ret
push
ljmp
jmp
nop
into
fldl
push
dec
add
or
pop
enter
js
sub
insb
cmp
fisttpl
call
or
loopne
mov
out
mov
jl
ret
jle
mov
popf
jne
sbb
sub
and
push
popf
call
mov
xor
lods
call
pop
cmpsb
ficomps
or
fdivs
into
pop
add
cmpl
sbb
jl
lea
jbe
ja
loope
orb
movsbl
adc
lahf
jle
test
push
sbb
orl
add
repz
les
push
mov
inc
shl
add
lea
cwtl
sti
or
jnp
pop
fisubl
lret
outsb
fwait
aam
dec
or
je
or
aam
test
and
insb
fs
pop
or
add
push
lret
in
andl
shrb
cmpl
pop
sbb
mov
jl
sub
push
imul
shrl
ljmp
movsl
mov
adc
lods
add
in
sub
jae
adc
stc
lock
or
inc
insb
sbb
inc
insb
add
test
xchg
ficoms
mov
ds
xchg
pusha
sub
or
pop
and
push
ss
js
add
movb
sbb
xor
xor
inc
xor
shlb
insb
aaa
sbb
imul
outsl
and
dec
jae
adc
movsl
inc
sub
sbb
call
rcrb
inc
adc
add
das
shll
sbb
sbb
jle
inc
je
pop
jge
sbb
push
fadds
and
cwtl
mov
inc
xchg
push
jno
movsb
dec
lcall
mov
rcr
pop
jge
push
arpl
addl
pusha
call
cmpsl
xchg
jnp
add
jl
or
dec
and
in
js
or
push
xor
dec
sbbl
mov
in
add
sbb
mov
add
stos
push
adc
aad
rorl
inc
push
insl
cmp
push
jl
jl
xor
jo
int3
cmc
add
jno
pushf
js
testb
mov
xchg
sbb
adc
sub
and
movsb
test
adc
mov
mov
push
loopne
les
or
inc
data16
xchg
icebp
inc
push
adc
decl
xchg
jmp
mov
inc
ds
fsubrl
cmc
inc
rcrb
icebp
rol
movsl
push
xor
rol
jl
je
xchg
cmp
pushf
mov
sbb
movsb
imul
dec
rcll
clc
inc
mov
in
and
add
addr16
pop
hlt
inc
jmp
or
sub
ss
insl
arpl
fsubrs
fwait
pop
or
je
xor
cwtl
aaa
gs
cmp
pop
fimuls
out
test
mov
and
add
or
mov
and
and
out
sbb
and
shl
cmpsl
add
fistl
push
add
mov
dec
mov
add
xchg
hlt
rcrl
cmp
jle
imul
aaa
andb
pop
push
out
fs
test
xchg
and
push
sbb
or
out
movsl
jo
push
jmp
dec
nop
cmp
pop
repnz
imul
fbstp
out
dec
pop
xor
into
bound
dec
mov
mov
out
imul
push
push
push
popf
mov
pushf
iret
sbb
lods
clc
inc
scas
inc
push
cmpb
jne
and
push
sbb
aam
xchg
mov
mov
pop
aam
jae
imul
xlat
add
jo
inc
daa
add
adc
adcb
and
mov
mov
push
into
mov
adc
fs
mov
je
and
sbb
jle
mov
or
add
or
rorb
sub
rclb
jl
jae
add
mov
fidivrl
xor
test
or
jnp
lock
mov
adc
lahf
cmp
lahf
daa
mov
or
arpl
pusha
or
sti
mov
and
jnp
sbb
xor
inc
clc
add
push
push
push
loope
hlt
movl
cmp
in
idivb
repnz
sahf
mov
rcrl
xchg
sub
inc
cmp
cmp
sti
popf
inc
movb
and
or
inc
add
jmp
stos
mov
add
movsb
aas
mov
es
cld
mov
sub
sar
int
inc
sub
pusha
test
std
daa
inc
sub
pop
add
sub
sbbl
jmp
cltd
push
mov
mov
loope
shrl
mov
adc
pxor
push
and
xor
and
pop
pusha
mov
je
fisubs
mov
les
lahf
jne
jae
or
das
adc
push
iret
mov
mov
xchg
cmpsb
xchg
xlat
mov
aam
add
in
or
adc
movsb
fwait
ret
dec
dec
stc
dec
shrb
jl
and
xor
cltd
fst
add
inc
jg,pn
jmp
adc
mov
push
pop
jge
push
lock
into
or
or
sub
sub
cmc
mov
xchg
sbb
cld
out
clc
cmp
mull
sbb
or
loope
or
xchg
mov
rolb
lods
sbb
jge
xchg
pop
jmp
xchg
addl
and
ret
nop
inc
fwait
nop
cltd
push
pop
mov
or
cmp
mov
outsb
movsb
or
lods
cmp
daa
mov
push
aam
or
adc
xor
mov
push
pop
scas
xchg
jmp
adc
add
sahf
int3
int3
mov
pop
ret
movb
std
adc
incb
xor
in
mov
mov
test
mov
or
and
dec
pusha
cltd
lahf
xor
test
sub
cmp
les
aam
add
test
or
in
mov
and
sub
je
or
and
jle
int3
push
adc
lods
xchg
jae
cld
jle
scas
pop
jmp
mov
mov
or
jae
ljmp
insl
dec
dec
arpl
into
mov
aam
mov
sub
adc
add
pop
dec
loopne
fwait
sub
and
rcrb
pop
push
push
jno
pusha
mov
das
les
rorb
int
mov
gs
mov
adc
sti
mov
hlt
mov
xchg
clc
fmuls
cmp
lock
shrb
addb
neg
aas
idivl
pushl
insl
and
lahf
xchg
test
ja
sbb
jp
add
push
mov
stos
mov
stos
or
lods
aam
push
cmpl
fsubrl
pushf
cmp
out
loopne
push
sub
adc
loopne
xor
pop
cltd
sub
mov
push
inc
and
mov
mov
subl
xchg
xchg
sub
and
push
pop
sbb
mov
xor
test
popa
ret
or
or
clc
pop
inc
mov
xchg
mov
out
lds
aam
lret
cld
add
or
add
and
or
push
xchg
inc
jae
or
call
add
xor
sub
pop
and
mov
and
nop
xorb
and
sub
push
jmp
adc
jge
aaa
or
and
pop
mov
sub
lret
xor
and
sub
jg
pop
push
outsl
mov
push
aas
xor
inc
shrl
sub
lea
into
inc
cmpl
mov
stos
mov
xchg
bndldx
mov
movsl
or
int3
inc
int3
in
xchg
push
ss
push
dec
js
xchg
movb
shrl
mov
test
and
mov
loop
je
cmp
inc
mov
jmp
nop
inc
sbb
cmp
mov
divb
mov
push
aaa
fdivrp
xor
and
pop
ret
and
std
cmc
shl
sbb
in
pop
inc
jb
dec
out
jecxz
mov
lods
fldcw
pop
push
inc
jb
cmp
push
arpl
icebp
pop
sub
sub
inc
push
adc
inc
push
add
into
aas
sahf
pop
push
ret
mov
mov
mov
mull
jmp
pop
hlt
sub
insb
lds
ficoml
pusha
pop
test
fisttpl
sub
rcrl
adc
frstor
jecxz
loopne
xor
insb
push
mov
xchg
mov
leave
lock
push
add
lock
test
push
ret
mov
fildl
int
xor
mov
lods
add
nop
dec
pop
cmpsb
xor
pop
add
xor
push
sbb
popa
imulb
sbb
adc
add
cld
mov
pop
sti
or
pop
lea
cld
dec
xchg
adcb
clc
xchg
addb
mov
bound
sarb
cs
jl
jg
fidivrs
into
addr16
or
add
fs
hlt
dec
jo
shrb
cmpl
sub
cmp
push
push
mov
rcrb
push
outsb
in
xchg
cmp
and
and
pop
lds
roll
shrb
je
adc
push
add
sub
pop
pushf
mov
mov
ja
dec
lret
lods
lret
test
lds
mov
test
je
cmpsb
xor
inc
loopne
or
addr16
add
xor
inc
pop
ss
rolb
inc
inc
adc
aaa
or
push
jmp
andl
add
dec
lret
mov
add
mov
ds
fiadds
inc
add
aas
das
pop
pop
jg
or
data16
jp
push
mov
ret
push
aad
sub
in
dec
sub
outsb
sub
mov
sbb
movsb
mov
popf
loopne
lea
rolb
arpl
fimuls
xor
jne
les
jl
loopne
pop
inc
outsl
test
jne
cmp
cmpb
jp
or
ret
cmp
mov
mov
adc
test
mov
adc
jmp
cmp
popf
xchg
cld
lods
mov
pop
ja
or
in
mov
fdivr
icebp
jl
sbb
xor
enter
and
shll
mov
adc
mov
push
fwait
pop
mov
imul
add
or
adc
cmp
push
cmp
out
cwtd
pop
jmp
mov
repz
sbb
cltd
scas
outsb
popf
sbb
and
pop
enter
hlt
icebp
jb
rep
xchg
push
inc
int3
mov
out
push
fistpll
insb
jne
jp
pop
and
pop
mov
insb
jg
adc
jno
cmp
imul
xchg
xor
pushf
pushf
pushf
je
inc
cmp
pushf
pushf
and
aam
jo
dec
push
rcrb
sahf
xchg
dec
mov
xor
jmp
add
or
loope
push
stos
mov
sub
lds
mov
xchg
mov
push
enter
clc
leave
mov
dec
mov
fsts
cmc
mov
adc
dec
and
stc
fildl
adc
pop
mov
rcrl
ffreep
push
xchg
dec
mov
js
add
jns
sub
mov
adc
sbbb
jns
or
movsl
pop
rcr
mov
cmpsl
sub
xor
and
in
out
in
popa
pop
enter
je
pop
sub
outsb
jno
pop
mov
xchg
sbb
push
jae
ljmp
jae
inc
push
jns
loopne
ss
mov
cltd
add
mov
mov
movsb
outsb
cmpsb
push
jg
loop
addr16
push
dec
xchg
stos
inc
push
cmp
xor
mov
and
pop
lea
dec
mov
pop
test
or
xchg
clc
add
and
ret
xor
push
pop
dec
dec
cs
jecxz
push
mov
mov
loopne
inc
xor
aas
inc
pop
aas
inc
dec
pop
adc
lods
jmp
jg
fcoms
sub
call
lods
or
in
loopne
mov
lea
adc
mov
int3
dec
je
adc
push
fcomps
aaa
mov
sub
jae
sub
add
loopne
pop
orb
push
fstpl
and
jnp
push
sahf
pop
rorb
dec
push
add
jb
jmp
pushf
jns
xchg
or
inc
mov
jns
xchg
or
add
and
loopne
push
enter
jns
push
jo
add
inc
pop
and
cli
aam
fs
loopne
sbb
enter
test
les
push
sub
push
pop
cmp
adc
mov
push
or
pop
add
outsb
movsl
bound
mov
scas
inc
push
lods
scas
sahf
out
or
sub
pusha
loopne
fxtract
std
inc
cltd
scas
adc
dec
cmp
push
fidivs
inc
lea
mov
test
cli
and
mov
aam
push
mov
xrelease
push
clc
xchg
mov
xchg
cmp
push
mov
jne
push
pop
rcll
pop
cmp
mov
push
adc
xor
pop
push
movsb
dec
ret
sbb
loop
pop
pusha
das
mov
or
fsubrs
add
rclb
adc
and
cltd
xchg
bound
bound
test
lds
jb
sub
push
add
dec
iret
hlt
in
negb
jne
or
cmp
and
nop
int3
sti
mov
sbb
adc
stos
cmpsb
fisubrs
sbb
xor
rclb
jo
sbb
rorl
inc
ss
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
pop
or
add
push
sub
mov
adc
or
lock
xor
hlt
dec
xor
sbb
orl
rcll
xchg
icebp
add
flds
cs
or
outsb
stos
add
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
aaa
sbb
rorl
outsl
cmp
dec
and
jo
test
mov
out
pop
and
push
mov
push
popf
out
cli
or
add
ja
push
mov
shrb
shrl
xchg
rclb
pop
aaa
mov
push
cmp
lret
and
cld
ficoms
push
xor
adc
arpl
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
push
orb
mov
sti
xchg
into
dec
push
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
adc
das
sbbl
ja
fcomps
clc
mov
jg
je
test
ja
jge
sbb
stos
xchg
das
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
bnd
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
add
cmp
std
jne
subb
jmp
sub
insl
popf
xchg
sub
jmp
jo
or
xchg
rolb
push
and
add
pop
lods
sti
mov
push
mov
mov
arpl
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
fistl
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
sahf
sbb
pop
inc
push
leave
inc
clc
add
int
leave
xor
adc
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
scas
ljmp
mov
inc
add
mull
xorb
dec
frstor
adc
push
out
xor
mov
and
orb
inc
xchg
dec
push
push
dec
jne
mov
dec
sbb
lods
test
mov
idivb
fnstsw
testb
mov
inc
dec
jne
mov
stos
mov
jmp
or
add
data16
cltd
push
jnp
cmpsl
cmp
adc
adc
jo
sbb
and
add
pop
callw
js
xchg
popa
push
test
push
and
test
addl
das
sarl
push
cmp
xchg
sub
lods
ja
pop
xlat
add
xlat
pop
rcrl
pop
sbb
dec
cmp
shrl
dec
shrl
pop
push
xlat
testb
insb
ljmp
add
sub
push
imul
and
dec
sar
jb
mov
or
push
inc
ret
sub
jge
into
dec
out
fucomip
push
rorb
call
and
jge
mov
mov
add
scas
add
ret
cmp
or
test
sbb
jge
inc
cmc
mov
jmp
popf
jmp
and
cmp
imul
movsl
mov
lock
and
stos
pop
pusha
and
jns
push
movsb
imul
fiaddl
xchg
dec
cmp
js
sbb
mov
lea
inc
jne
fimuls
test
jnp
xor
gs
in
aaa
cmpl
xchg
xchg
test
pop
ret
adc
subb
addb
pushf
sub
imul
inc
xor
pop
sub
sub
pusha
sub
inc
clc
lret
push
cmp
outsl
sarb
shll
and
pop
ja
movsb
sbb
mov
xor
movsb
or
xor
push
sbb
ficoms
sbb
add
or
mov
rclb
cwtl
shrb
cmp
test
sbb
jno
aam
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
or
and
and
push
mov
in
xor
addr16
out
nop
lock
or
pop
sbb
pop
jecxz
sub
lock
lods
or
sub
or
or
lea
insb
leave
mov
pop
mov
aas
sub
mov
jmp
pop
push
fld
subb
jb
ret
or
add
pushf
or
test
or
mov
inc
mov
std
ss
mov
mov
lods
push
push
push
pusha
mov
sub
or
aas
push
scas
jo
sbb
cs
pop
sub
mov
mov
fdivrs
inc
shlb
pop
data16
add
push
bound
add
mov
adc
dec
add
push
add
test
mov
inc
fstpl
inc
mov
mov
xchg
mov
jg
sbb
shr
imul
cmp
fidivl
adc
ret
or
clc
and
pop
dec
scas
or
test
sub
enter
push
push
ds
mov
adc
mov
mov
push
clc
andb
mov
or
xor
sub
test
shl
pop
test
pop
iret
push
adc
lret
xchg
outsl
clc
mov
xchg
xor
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
and
pop
pusha
cmp
sbb
jmp
push
mov
test
lahf
ds
mov
jbe
and
pop
dec
enter
mov
jmp
mov
loope
insl
jg
cmp
adcl
ror
sarb
and
lods
or
outsl
mov
add
rorb
mov
mov
mov
dec
dec
roll
mov
es
es
adc
ds
mov
inc
je
shll
pop
les
imul
out
cmp
mov
add
or
dec
or
pop
nop
cltd
aad
xor
pop
add
pop
xor
mov
arpl
mov
inc
jne
cmp
push
inc
sub
dec
adc
xchg
mov
adc
cmp
pusha
lods
js
add
rcr
sub
loopne
or
push
js
push
sub
inc
js
sub
mov
lods
std
jle
push
inc
add
or
cmp
add
pop
clc
mov
sub
add
sbb
or
add
testb
jmp
bound
pxor
push
push
lock
jg
cmpb
jg
call
out
fistpll
jg
push
inc
adc
and
pop
test
pusha
jo
mov
dec
jne
shlb
pushf
push
mov
jg
insb
mov
or
xor
mov
je
xor
fistpl
add
mov
dec
adc
shlb
push
xor
hlt
mov
sbb
cli
pop
pop
ret
outsb
fcmovnu
or
sbb
shll
add
or
dec
ja
shr
add
icebp
aaa
test
push
mov
add
or
pop
in
adc
xchg
lods
xchg
cmp
mov
adc
adc
arpl
push
adc
and
pop
mov
push
adc
and
not
and
decb
and
push
and
mov
insb
aaa
call
movsb
push
adc
loopne
ja
mov
cmpsb
or
clts
pop
mov
and
movsl
sbb
push
add
lret
lahf
and
dec
or
gs
xchg
test
addl
adc
je
push
or
or
inc
add
xor
aam
ss
or
outsl
inc
or
mov
push
call
int
push
rcl
in
dec
add
sub
fnstcw
enter
out
and
mov
jno
xchg
mov
jp
and
repnz
mov
das
mov
xor
mov
sbb
outsb
dec
sub
dec
add
and
sbb
sub
cs
add
sbb
andl
sar
sbb
pusha
pop
inc
fld1
loopne
or
xchg
dec
cld
and
or
stc
shlb
push
int
or
fwait
xchg
jmp
decl
js
jmp
mov
mov
mov
pop
adc
aam
dec
repnz
fmull
fstl
mov
subl
adc
pop
icebp
lds
and
adc
loop
nop
lods
int3
dec
mov
cmp
repz
mov
iret
repz
jmp
pop
push
in
push
scas
jge
mov
rcrb
js
es
mov
add
int3
and
cltd
in
stos
push
cmp
mov
jb
push
inc
pop
push
mov
imul
int3
sbb
and
push
ja
std
test
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
jo
adcb
jge
aam
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
push
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
inc
out
sbb
popa
out
or
inc
cmpl
sbb
pop
pusha
xchg
aad
adc
or
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
repnz
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
rolb
incb
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
sbb
xchg
testb
mov
imul
mov
push
ret
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
and
cmpsl
mov
pop
cs
int3
pop
or
add
subl
xor
sub
xlat
es
lock
pop
push
insb
ds
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
fimull
mov
stos
pop
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
movb
or
or
and
mov
pop
les
jne
xor
adc
test
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
add
shl
sbb
jg
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
inc
cs
rolb
adc
xor
sbb
add
mov
mov
push
dec
cmp
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
or
jl
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
xor
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
in
imulb
hlt
and
sub
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
and
mov
xor
aad
je
mov
mov
fisubrs
adc
test
dec
sbb
pop
adc
fcoms
neg
ret
cmpsl
push
cmp
movsl
jmp
das
daa
movsb
adcb
movsl
cmp
cmp
jne
enter
or
lods
or
mov
pop
inc
bt
xor
cmpsl
xchg
fadds
pop
or
sub
push
and
push
ficoms
inc
add
inc
jmp
dec
cs
leave
add
jb
shlb
ss
sti
das
adc
mov
xchg
xchg
inc
fiadds
fwait
sub
fstpl
ja
mov
or
push
sub
in
inc
clc
sub
or
adc
sti
pop
and
int3
mov
mov
sub
pop
mov
cmp
sbb
fwait
push
notb
mov
pushl
sahf
xchg
or
inc
pop
sub
fsts
mov
mov
test
mov
sub
jno
jmp
mov
out
pop
add
hlt
in
pop
add
mov
xchg
add
hlt
push
nop
xchg
loopne
add
loope
outsl
sbb
cmpsb
jmp
sbbl
push
ret
jne
enter
dec
push
add
je
or
stos
xchg
adc
ja
inc
adc
imul
ret
mov
fisubrl
pop
lcall
xlat
ret
mov
mov
jno
xorl
roll
cmp
ds
repz
nop
pop
rorb
leave
test
pushf
add
test
add
pop
mov
fsubs
push
sub
xchg
sbbl
mov
ret
pop
push
pop
lea
leave
or
js
rolb
aas
cmpsl
out
icebp
loope
pop
ss
jnp
scas
popa
sbb
lret
push
inc
repnz
sub
leave
lock
ret
pop
add
xor
aaa
aas
dec
loop
lods
outsb
aas
pusha
aas
aaa
xor
movl
adc
into
xor
inc
xor
push
aad
inc
pop
sbb
and
inc
movsb
sbb
inc
addr16
mov
aaa
or
mov
lods
inc
mov
and
dec
sub
add
or
mov
and
add
fs
lret
sbb
call
movsb
aad
daa
inc
cs
cmp
aad
ljmp
xchg
dec
outsl
fsubrl
and
iret
enter
mov
sub
outsb
and
inc
aas
nop
mov
add
and
jl
decb
cld
push
outsb
dec
push
dec
cwtl
inc
nop
or
and
subl
adc
lea
cmp
dec
sub
test
test
xchg
pushf
pushf
sar
pop
mov
stos
pop
jecxz
adc
addr16
and
sbb
cmp
je
inc
dec
mov
repnz
and
and
cwtl
pushf
daa
add
and
enter
mov
cmp
pushf
nop
add
pushf
cwtl
add
in
mov
pushf
ljmp
js
popa
ss
or
hlt
mov
xchg
lcall
subb
ljmp
repz
mov
mov
sbb
xor
mov
ret
movl
mov
mov
ret
sub
testl
mov
xor
mov
popf
aam
or
pop
pop
add
test
xchg
sbb
sbbl
push
pop
cmp
lods
push
sbb
icebp
xor
and
cmp
xor
fsubrs
push
jmp
cmp
ja
fstpl
add
push
jg
mov
test
sbb
mov
and
verr
jno
pop
mov
jl
inc
movsl
dec
pop
sbb
pop
or
lock
mov
shlb
jl
ret
jne
mov
mov
jb
adc
inc
sbb
mov
sub
movsl
push
daa
adc
and
shrb
inc
and
or
cmp
icebp
push
sbb
loope
shr
je
out
sti
dec
test
fwait
pop
outsl
push
push
dec
adc
push
shll
and
jle
dec
stc
jl
iret
push
pop
outsl
inc
or
jbe
cmp
xchg
lock
cmpsb
outsl
ja
mov
jg
lea
mov
jo
in
int3
test
pop
ffreep
lea
lea
inc
out
mov
and
cmpsb
in
and
mov
xor
cmpsb
mov
pusha
arpl
or
inc
push
negl
sti
lock
mov
lret
ret
mov
adc
pusha
das
shr
dec
inc
inc
push
and
xor
pop
into
sbb
or
mov
or
lret
fdivrs
push
dec
cmpsl
or
lcall
and
push
push
dec
or
rcll
addl
jecxz
add
or
hlt
sbb
stos
add
jmp
mov
xor
hlt
jl,pn
xor
mov
and
mov
mov
outsl
clc
pop
orb
sub
cmp
adc
and
out
incb
cmp
and
cmp
test
cmpb
scas
imul
xchg
or
dec
pop
add
mov
adc
rclb
out
sub
movsb
out
add
xor
inc
cmp
rol
in
shlb
pushf
adc
cli
add
mov
add
add
pop
andl
pusha
sub
add
js
push
jne
cld
jle
andl
or
stc
mov
mov
mov
pop
sbb
repz
cmpl
pop
subl
addl
or
dec
cmp
mov
cs
mov
dec
xlat
mov
pop
pop
mov
pop
push
popa
sbb
mov
jmp
rcll
push
loopne
sahf
pop
cwtl
shl
dec
clc
sbb
out
insl
loope
mov
pop
cmp
push
adc
mov
pop
movsb
rorb
sarb
or
jmp
inc
or
adcb
push
out
push
inc
pop
or
bound
test
push
pop
cmp
clc
adc
and
xchg
cmpsl
out
movsb
inc
push
adc
push
cmp
fsub
sbb
ficoms
adc
gs
jmp
outsl
xchg
mov
sub
push
jbe
add
gs
jle
jecxz
faddl
xchg
shlb
and
xor
pop
add
incl
dec
and
inc
pusha
je
lods
mov
pushf
cltd
fs
out
dec
adc
cmp
add
stc
inc
xor
adc
pop
xorl
sbb
shlb
or
xor
adc
push
sbb
pop
or
mov
add
xorl
std
jbe
cwtl
sarl
cld
enter
or
jne
push
pop
add
dec
sbb
adc
adc
popf
shl
mov
addr16
add
scas
fldl
out
sub
fidivrl
movsl
adc
xor
mov
inc
cs
lret
shll
stos
mov
add
dec
mov
and
xchg
or
push
mov
jmp
adc
and
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
pop
std
cmp
cli
adc
xor
in
sub
pop
and
out
jo
shll
shlb
fcomi
js
cmp
mov
mov
and
scas
and
mov
clc
int3
adc
ficomps
push
lock
inc
scas
shlb
lcall
push
cmp
int3
jae
lea
add
gs
add
push
xor
out
fstl
icebp
cmp
lea
push
xchg
and
mov
shlb
dec
adc
fldenv
rorb
pusha
inc
or
rolb
pop
loopne
push
push
je
cltd
jp
call
clc
push
sub
lea
push
fldcw
pushf
testl
mov
push
cmpsl
mov
int3
test
pop
dec
mov
push
push
pop
push
int
daa
add
fadd
mov
nop
sbb
mov
mov
push
popa
lock
movw
mov
adc
mov
and
xor
dec
out
mov
repnz
int
mov
ljmp
inc
xchg
call
push
add
scas
inc
add
add
mov
push
push
fidivrs
cmp
movsb
or
stos
add
push
addl
and
daa
and
jle
faddl
add
xor
aas
loopne
jnp
cmp
or
rorb
and
into
adc
std
sub
shll
xor
jl
inc
sbb
xor
jb
dec
inc
popa
int3
lret
pop
push
sarl
dec
or
ljmp
or
sbb
cmp
pop
ret
add
xor
jmp
jns
fadds
bound
mov
push
andb
inc
jo
aad
add
decl
mov
repz
aaa
inc
sti
push
push
orb
jmp
mov
add
or
mov
test
sbb
cmpsl
inc
sub
push
aaa
xor
push
mov
leave
mov
mov
jne
jmp
shll
or
je
push
mov
dec
movl
add
add
jmp
push
pop
loope
add
nop
adc
push
push
mov
aam
cwtl
cwtl
sub
lods
lea
add
dec
cmp
adc
inc
mov
out
stos
bound
mov
push
divb
pop
dec
call
cld
xor
inc
and
lret
out
push
paddusb
push
fcmove
dec
or
and
mull
push
pop
int3
dec
mov
test
mov
sbb
or
mov
movsl
xor
fiadds
jb
adc
outsb
je
push
mov
adc
mov
mov
sti
insl
push
pusha
push
sbb
out
leave
negb
push
sub
push
lock
jb
inc
jb
mov
int
dec
fs
dec
mov
add
and
cltd
movsl
out
add
fistl
ret
popf
mov
or
xor
imul
xchg
xchg
leave
mov
xchg
das
push
push
jb
pop
sbb
aas
cmpl
push
andl
lahf
ffreep
push
jnp
incb
cmp
fldt
loopne
daa
jg
out
loope
dec
xor
xor
add
stos
stos
or
in
add
lock
xor
mov
inc
adc
ljmp
jge
inc
mov
pop
inc
dec
mov
dec
dec
test
adc
xchg
xor
in
lret
or
std
inc
test
inc
mov
lods
and
inc
dec
or
dec
adc
dec
fs
dec
push
pop
test
mov
xchg
pop
pop
mov
lods
xchg
xor
pavgw
dec
dec
add
xchg
imul
leave
xchg
inc
in
pop
scas
sbb
test
pop
inc
or
lock
adc
jne
add
imul
sub
movb
mov
and
xor
push
clc
stc
mov
push
divb
pop
stos
and
outsl
dec
data16
dec
call
ret
lock
or
pop
int3
and
push
push
mov
adc
or
and
jle
mov
dec
cmp
test
dec
inc
jb
not
mov
cs
mov
inc
push
sbb
jecxz
xor
pop
and
or
add
xchg
pop
inc
xor
sub
add
scas
or
imulb
add
insb
push
into
mov
std
call
and
aas
dec
push
mov
ljmp
test
hlt
in
out
pop
rcrb
adc
xchg
jno
inc
pop
sbb
shlb
or
and
into
mov
insb
sbb
outsl
enter
or
stos
inc
jns
ret
ss
ja
mov
ja
test
pop
test
add
test
ficoms
lea
xchg
push
aas
rol
rol
clc
lock
loop
pusha
ss
lods
and
or
push
lcall
and
or
sbb
sbb
pop
loope
outsb
adc
pop
lea
inc
movsl
adc
enter
push
adc
mov
or
sbb
jb
sub
add
cld
les
jb
mov
pop
xchg
inc
xor
fadds
ret
sub
jmp
jmp
pop
push
rorb
rol
pop
adc
push
or
negl
ret
adc
push
lock
mull
neg
mov
lsl
jmp
push
pop
push
push
pushf
sub
jmp
rcr
or
mov
repz
dec
fldt
lret
dec
test
mul
pop
jb
rcr
mov
jb
cmp
or
xor
and
aas
iret
pusha
push
adc
or
ficoml
push
push
inc
lret
iret
adc
or
ret
adc
dec
and
sub
cmp
mov
testl
cmp
cmc
inc
in
sub
aam
shlb
mov
mov
xchg
daa
or
xchg
or
xor
xor
xor
jb
mov
push
pushf
ds
cmp
stos
or
adc
push
dec
mov
inc
daa
enter
mov
dec
loop
out
leave
cli
and
adc
xchg
inc
inc
and
add
lods
in
mov
sbb
mov
xlat
inc
loopne
icebp
mov
push
repz
push
pop
inc
clc
pop
xor
movlps
imul
insl
orb
and
loop
ret
and
push
bts
pusha
enter
mov
and
add
rcr
dec
fists
sbb
add
push
pop
cmp
cwtl
movsb
lret
jo
add
cmp
mov
sub
inc
xorb
adc
icebp
pop
mov
mov
jne
push
add
adc
sbb
pop
inc
cmp
mov
and
roll
and
adc
es
loopne
sbb
decb
dec
mov
loope
push
adc
jmp
rorb
add
xor
pop
or
nop
addl
or
jb
nop
push
insl
mov
enter
test
dec
mov
ret
mov
outsb
mov
leave
in
ret
jns
lods
xchg
lret
movsl
sbb
lods
fdivr
into
pop
subb
insl
ja
cmovnp
decl
cmp
push
sub
sarl
xchg
jne
popa
ja
sub
je
mov
or
adcl
dec
mov
sub
mov
sbb
push
inc
push
adc
cmp
xor
and
test
lds
inc
fisubl
push
add
xchg
addl
imul
frstor
idivl
sbb
aam
rolb
add
sub
mov
push
jbe
outsb
sub
push
fisttpl
push
mov
push
push
mov
or
test
push
imul
jmp
adc
outsl
push
repnz
or
adc
or
adc
adc
dec
movsl
frstor
dec
out
cmp
fsub
icebp
out
jne
inc
sbb
aam
or
jnp
cmp
fidivl
das
roll
cmp
push
mov
movb
dec
add
sub
mov
mov
daa
mov
cmpsb
adc
sub
cmc
mov
adc
inc
jmp
fisttpl
cli
js
lds
cmp
mov
mov
imul
shrb
sbb
cmc
aas
sbb
inc
or
cmp
dec
push
sbb
cwtl
in
inc
jecxz
daa
outsl
je
dec
loopne
cmpsl
sarb
or
pusha
pop
fdivr
lock
xor
icebp
xor
dec
or
and
add
insb
jne
push
adc
mov
or
incl
shr
dec
mov
stos
into
mov
addl
pop
mov
filds
cmp
jge
push
xor
jae
out
imul
add
push
and
mov
cwtl
inc
pop
sbb
scas
add
sub
push
xor
sti
jl
push
pop
inc
rclb
sti
aas
jmp
cli
and
shl
sbb
xchg
and
pushf
or
popa
cmc
fstps
js
mov
cld
or
cmpb
mov
mov
lret
mov
andb
jo
add
divb
mov
sub
rcll
mov
orl
or
sub
and
adc
add
mov
dec
dec
xchg
in
int3
orl
imul
repz
pop
cmp
or
sub
xchg
xchg
lock
ja
insb
lods
sti
sub
inc
adc
mov
sbb
xor
mov
push
mov
shlb
clc
scas
push
fs
push
xor
sbb
mov
or
xor
mov
push
ljmp
xchg
cli
adc
jg
and
lea
lea
or
fdivrs
jnp
out
sahf
fdivs
add
jo
loopne
mov
popl
js
mov
inc
add
dec
sbb
xor
dec
cmp
sbbb
enter
rolb
push
aaa
add
jl
repnz
or
js
mov
ss
sti
cltd
dec
and
pushl
add
jno
push
lods
or
mov
popf
inc
xchg
arpl
xor
test
jp
stos
ljmp
push
inc
cmp
ds
sbb
push
push
push
popa
add
and
enter
and
adc
sbb
and
sub
cwtl
add
and
xchg
jo
cmp
pop
dec
xor
test
scas
cmc
sbb
lret
jne
sub
lcall
xor
in
pop
and
add
aas
push
push
pop
xchg
sarb
outsl
addb
mov
cmpsl
inc
pop
ds
or
es
daa
mov
add
ja
scas
call
jecxz
mov
sbb
es
loopne
jbe
pop
pop
cmp
cmpsl
insb
push
add
cmpb
test
movsb
fldl
push
faddl
or
rol
imul
lock
test
loopne
mov
jmp
or
lret
lcall
cmp
rcrb
push
imul
dec
clc
das
xor
sahf
push
popf
mov
gs
adc
push
cmp
jae
test
adc
dec
lods
das
sbb
shrl
add
inc
cmp
ret
xchg
adc
push
out
adc
icebp
inc
mov
mov
icebp
insb
bound
es
push
xchg
aam
enter
or
or
das
call
sub
mov
aaa
jno
add
inc
fisttpl
xor
addr16
outsl
popf
mov
jmp
mov
int
pushl
leave
fcmovb
pmaddwd
adc
cmpsb
push
cmp
stos
jo
add
pop
ret
loope
sub
jl
adc
push
mov
push
push
nop
rcrl
inc
push
dec
mov
cwtl
or
dec
movsb
mov
dec
and
dec
adc
fprem
pop
cwtl
push
lods
mov
cmp
in
or
jle
rorl
or
push
mov
cs
imul
xchg
scas
mov
mov
and
mov
add
add
add
mov
push
cmp
or
add
cmp
sbb
or
movsb
jp
incb
orb
push
jmp
mov
jb
test
stos
popf
add
inc
adc
and
push
pop
mov
das
cwtl
cmp
jle
sbb
clc
or
cmp
xor
sbb
jmp
dec
push
ss
or
cmp
xchg
xchg
cmp
add
cmp
cld
pop
push
test
clc
pop
lock
inc
sbb
sbb
insl
xchg
test
mov
sub
ret
adc
clc
pop
jge
jnp
jae
mov
idiv
jbe
nop
sti
lods
dec
mov
movsb
jne
out
dec
jae
imul
sbb
aad
cmp
loope
jmp
and
outsb
mov
rclb
bound
fisubrs
sub
dec
mov
orl
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
xchg
mov
test
mov
js
pushl
mov
jge
pop
xorb
nop
mov
mov
orb
cmp
div
scas
mov
add
inc
testl
or
inc
jmp
sbb
cmp
pop
dec
mov
clc
cmp
cmp
leave
fdiv
lea
cmp
fcoms
or
jecxz
push
mov
inc
jmp
cmp
pop
xlat
shlb
xor
mov
pop
shlb
dec
push
hlt
lock
or
jne
popl
jno
lods
repnz
cmp
roll
jb
dec
adc
push
inc
sbb
xlat
test
cmp
sti
es
sarl
add
into
outsb
sbb
inc
ret
sub
xor
mov
push
mov
adc
add
push
loopne
int3
ss
lods
sarl
add
mov
mov
sbbl
ss
lea
push
data16
movsl
and
mov
lea
enter
xchg
mov
out
add
jne
mov
lcall
shll
roll
or
mov
sbb
nop
inc
imul
andl
cmpsl
pop
mov
push
or
mov
mov
mov
std
and
mov
testl
out
jne
test
xchg
lock
out
mov
push
lcall
and
adc
cmp
pushf
and
sahf
cltd
xor
test
mov
or
jb
cwtl
xchg
test
push
pushf
fstpt
lea
lcall
or
adc
icebp
ret
add
sub
push
jg
xor
cmp
jb
mov
push
mov
inc
ja
js
pop
lods
incw
cmpl
insl
mov
xchg
pushf
mov
insb
dec
mov
sbb
sti
jg
add
add
rolb
fs
xchg
push
inc
incl
aam
call
fwait
cli
testb
shr
aas
or
push
jge
adcb
into
movsl
mov
sub
inc
mov
add
into
negb
lods
lods
jl
sti
pop
push
shl
shr
or
mov
mov
dec
mov
jne
outsb
mov
mov
aam
mov
ja
push
cmp
test
sub
rcr
ficoml
add
fiadds
mov
dec
lock
ljmp
jmp
or
push
lods
push
jnp
mov
popa
icebp
push
sbbb
nop
mov
aam
add
push
jl
dec
int3
int3
jmp
adc
or
daa
mov
and
jmp
lods
daa
es
rol
push
jae
dec
and
les
les
add
sbb
imul
jne
push
lret
xchg
jmp
sub
cmpl
add
adc
lcall
mov
inc
mov
inc
aaa
sub
mov
mov
and
pop
repz
inc
add
push
and
stc
cmp
rcll
shl
cmp
cmpsl
sub
pusha
fdivl
faddp
dec
rcll
incb
jne
testb
adc
sbb
mov
mov
add
mov
pusha
es
addr16
int3
sbb
ss
pop
add
add
cmp
lret
int
add
and
faddl
lock
dec
pop
in
arpl
mov
push
or
dec
cmp
insb
xchg
orl
in
or
bound
shl
ret
add
addb
rcl
repz
mov
mov
mov
pop
mov
rolb
imulb
and
xchg
cld
int
imul
mov
mov
or
shrb
pop
lea
cmpsb
dec
fwait
mov
and
jbe
add
xchg
mov
inc
jl
sub
call
ret
les
ret
in
jnp
xchg
or
xor
shl
xor
jne
jne
lods
adc
dec
push
inc
adc
pop
add
mov
mov
rolb
push
sbb
mov
leave
inc
xor
lcall
xchg
or
jge
sbb
fdivs
inc
rclb
or
pop
leave
add
cs
push
lock
and
loope
sbb
or
or
data16
mov
and
jmp
ret
jmp
mov
lret
stc
pop
cmc
push
movsb
inc
jmp
mov
and
jnp
pop
fimull
xor
out
or
aam
filds
enter
cmp
ds
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
xchg
sbb
mov
into
add
and
psadbw
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
xor
cmp
sbb
or
dec
push
and
mov
push
inc
pushl
mov
js
cli
mov
jo
pop
pusha
cmp
rorb
push
push
ds
sbb
ret
test
or
cmpsl
push
sub
xchg
add
es
inc
mov
cmp
add
mov
iret
or
mov
add
mov
mov
fsts
push
hlt
mov
andl
jecxz
and
shr
pusha
and
pop
imul
sub
add
mov
enter
cmpsl
rorb
movsb
test
sbb
popa
xchg
xchg
lock
inc
call
jmp
ret
mov
outsb
mov
inc
xlat
test
dec
hlt
rcrl
lea
lods
inc
cmp
fwait
jnp
xor
pusha
setne
inc
dec
add
sbb
lea
je
xorb
jns
orl
lods
inc
xchg
scas
mov
and
aam
push
dec
mov
incl
cmpsb
int
push
jnp
imul
push
or
pop
daa
cmp
mov
aas
sbb
es
test
jne
popa
inc
xchg
xor
icebp
pusha
cmpsb
sbb
jnp
sub
repz
push
jmp
inc
sub
ret
sub
push
scas
pop
jl
loop
pusha
dec
iret
test
inc
add
mov
add
arpl
sbb
sbb
inc
pop
fisttps
cmp
testb
push
mov
inc
mov
movsl
xchg
loopne
sbb
dec
xor
push
mov
ret
data16
or
inc
mov
xchg
lret
int
clc
adc
cmp
pop
cwtl
mov
mov
cmp
jne
push
inc
pushf
shufps
mov
push
add
adc
aad
gs
xchg
sub
sub
lea
mov
fisttpll
jne
clc
fidivrl
sub
xor
subl
add
adc
int
shlb
jbe
fs
pop
or
loopne
jns
adc
fiadds
into
or
sbbl
mov
pop
addr16
add
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
adc
adc
dec
ficomps
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
in
into
xchg
lcall
je
inc
test
add
or
cmp
add
je
xor
rcrb
and
sbb
cmp
cmpsb
or
jmp
adc
outsl
shrb
add
xchg
adc
mov
call
cmp
stos
ret
pop
test
icebp
and
adc
loop
xchg
push
xorl
orl
xor
js
sbb
pusha
xor
sbb
mov
mov
ret
add
out
adc
out
or
adc
inc
jns
or
test
push
xchg
add
nop
adcl
push
xorb
cs
test
cmpl
aam
mov
pop
adc
sub
ret
mov
and
cmp
pop
shll
add
rcrb
mov
or
sbb
jecxz
xor
lock
add
mov
sbb
cmp
xchg
push
pop
call
jmp
test
push
pop
adc
cmpsl
jecxz
enter
jl
jmp
sbbl
cmp
inc
add
js
pop
sbb
jmp
pop
xchg
sbb
scas
popa
push
xchg
pusha
mov
xchg
mov
xor
mov
add
ljmp
jb
mov
push
sbb
enter
inc
lcall
adc
dec
push
ficompl
rorb
xchg
test
dec
icebp
add
inc
jbe
bound
dec
pop
adc
scas
xchg
push
dec
lret
inc
jmp
cmpsb
dec
push
popa
jge
popf
sub
jo
mov
imul
add
loope
shlb
enter
mov
mov
pop
pop
pop
dec
sbb
std
les
cmp
and
pop
add
test
mov
data16
mov
sub
or
arpl
cmp
sub
cmp
push
fistl
ret
icebp
jmp
roll
iret
lock
shl
mov
aas
mov
mov
adc
cmp
sbb
aaa
and
rcrl
push
andl
and
add
mov
or
test
push
pop
dec
rcll
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
enter
lcall
sar
inc
inc
pushf
pop
mov
xor
push
sbb
mov
jmp
push
aad
scas
sbb
jne
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
lea
xchg
xchg
mov
adc
in
pop
xchg
mov
xchg
adc
inc
xor
ss
cwtl
clc
pop
mov
je
mov
in
daa
lock
mov
or
push
dec
icebp
imul
add
ss
adc
lods
jb
or
in
in
imul
dec
or
cmp
divl
mov
pop
adc
shrl
call
imul
or
scas
ret
cmpb
pop
dec
and
or
dec
jecxz
push
jne
jge
push
or
xor
loope
inc
mov
or
push
or
rcll
jbe
inc
adc
nop
mov
std
sbb
je
inc
and
adc
out
fsubrl
jmp
mov
push
mov
xchg
or
and
pop
push
jno
fldt
cs
loopne
aas
cmp
pop
and
lock
mov
sbb
or
loope
adc
mov
sti
cmpsb
jge
and
jne,pn
sbb
inc
mov
sub
loopne
fmul
divl
in
sbb
or
cmpsb
mov
sub
inc
mov
lahf
push
icebp
nop
bound
push
stos
xchg
add
popa
mov
stc
andb
mov
pop
aaa
sub
bound
push
adc
fs
shl
and
or
jg
add
jp
fwait
clc
lea
inc
cmp
roll
or
sub
and
cltd
mov
or
bound
inc
loop
jno
push
shrb
sbb
sbb
cmp
mov
inc
dec
mov
jb
sub
sub
ljmp
adc
sbb
add
mov
add
push
push
pop
adc
loope
mov
inc
jnp
or
into
pop
adc
or
jo
cld
push
cs
add
xor
enter
add
pusha
inc
and
jne
fsub
pop
out
fadd
add
fists
sub
jne
rcl
popa
mov
inc
in
sub
pop
inc
test
lcall
add
call
sbb
xchg
test
add
pop
jge
xorb
xor
mov
or
adc
rcrb
cmp
dec
push
movsb
xor
inc
xchg
mov
mov
pop
mov
jo
and
or
and
xchg
ret
incb
or
push
je
inc
sub
clc
jo
je
mov
xchg
mov
add
push
or
dec
mov
les
sub
or
adc
pop
mov
mov
jbe
and
xor
jnp
add
gs
loope
testl
adcb
dec
jmp
mov
imul
mov
jne
stos
out
rorl
or
ret
jmp
adc
adc
pop
gs
hlt
adc
xchg
ljmp
movsb
dec
arpl
popf
mov
mov
sbbl
enter
adc
or
nop
adc
xchg
iret
imul
jg
xor
push
int3
outsl
loope
mov
sahf
movsb
sahf
loop
jo
push
in
mov
sbb
jl
pop
sbb
mulps
subb
leave
je
shr
and
mov
adc
push
inc
add
jecxz
mov
arpl
cmp
imul
cmp
ss
in
and
sub
loopne
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
sbb
jb
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
shlb
and
enter
cltd
pusha
sarb
leave
and
loopne
xor
and
call
xchg
dec
lock
clc
xchg
inc
dec
xor
add
add
fiaddl
or
gs
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shll
inc
gs
cltd
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
jo
daa
cltd
pusha
sbb
or
cmp
add
jl
add
test
and
mov
mov
mov
xor
sbb
lcall
and
adc
sbb
pushf
dec
xor
int
mov
rorb
cmp
mov
inc
rolb
rol
dec
enter
int
int3
dec
mov
mov
pop
notl
mov
sub
loope
fsubs
push
test
es
or
dec
adc
popf
in
je
out
xor
or
fcoml
dec
sub
inc
or
les
jle
pop
push
or
lock
mov
xchg
push
dec
xlat
sub
and
jmp
lret
and
add
xor
in
or
or
out
repnz
not
xor
loope
sbb
divb
leave
and
shr
xchg
fildl
add
gs
fcoms
js
in
test
adc
or
inc
xchg
icebp
pop
adc
and
je
rcl
orb
mov
push
loop
mov
aad
dec
cld
cltd
call
add
dec
mov
pop
adc
lock
and
mov
mov
jl
and
jecxz
sbb
push
dec
jae
add
or
rcl
sub
loopne
ja
mov
xor
sub
aaa
jge
je
mov
loope
flds
and
pop
adc
fistpll
pusha
mov
pusha
loope
pop
sub
xor
sub
adc
psrld
pusha
fldl
push
cmpsb
cmp
insl
ss
mov
inc
push
mov
push
in
jns
dec
in
or
add
add
int
out
test
fistpll
xchg
sub
mov
jl
das
pop
or
sub
push
scas
jmp
push
and
add
pop
andb
testl
mov
test
pop
and
popf
mov
sub
and
or
loope
adc
flds
fstps
jmp
bound
fildl
xchg
adc
push
push
inc
lahf
fndisi(8087
inc
sub
inc
dec
push
hlt
adc
jbe
xchg
push
add
pop
sub
mov
add
arpl
adc
mov
push
xor
test
cmp
adc
or
call
fs
aaa
sbb
out
jle
sbb
cmp
fldl
add
dec
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
into
call
sub
testb
shrb
sub
mov
nopl
and
mov
arpl
fstpl
or
cmp
mov
repz
pop
push
inc
xchg
in
inc
rcrl
sbb
cli
repnz
mov
movb
cld
dec
push
movsl
imul
xchg
and
cli
shrl
mov
scas
inc
pop
orl
fchs
mov
mov
push
cld
nop
pop
lds
pop
jmp
pop
cs
nop
sbb
icebp
adc
jl
pushf
pop
lcall
scas
mov
add
push
lcall
push
arpl
adc
jg
xor
popf
add
clc
sub
fisubs
sbb
cmpsb
lret
add
mov
and
mov
inc
or
sbb
bound
shrb
mov
cmp
or
push
je
sbb
loopne
jns
lret
imul
or
sbb
sub
cld
sbb
hlt
pop
mov
mov
cltd
and
and
sub
cmp
inc
or
fsubrs
jno
push
sbb
jge
or
xor
fsubrp
fwait
lcall
dec
inc
and
or
push
inc
jne
int
js
or
fisttpll
ret
pusha
mov
or
jo
sbb
std
sub
xor
pop
loopne
mov
lods
in
sub
lock
insb
es
mov
and
push
mov
inc
lret
pushl
jle
es
or
sbb
pusha
add
adc
mov
outsb
sahf
inc
mov
out
int3
mov
sbb
out
and
adc
and
jl
push
jnp
rorl
dec
add
cmp
cltd
push
andl
jo
mov
loopne
jecxz
into
dec
xchg
add
sbb
dec
adc
mov
push
negl
add
roll
or
mov
stos
push
lret
lock
or
cltd
jge
sbb
pushl
fcmovnbe
insb
add
push
mov
xor
into
pop
out
popf
mov
cmp
sbb
add
xchg
ret
ss
mov
cli
push
mov
rcr
pop
fchs
xchg
jge
mov
out
mov
mull
mov
xchg
orl
xor
icebp
das
xchg
push
inc
sbb
sbb
fisubl
push
or
loop
shl
add
add
or
push
out
mov
pop
pop
and
pop
je
je
sahf
jge
or
push
and
shlb
in
ficoml
sub
sub
adc
push
pop
push
ror
dec
ljmp
inc
jnp
fnstsw
movswl
add
mov
inc
fstps
push
mov
not
dec
ficomps
xchg
mov
or
insl
or
xchg
in
rclb
dec
cwtl
or
sub
adc
in
cs
adc
sbb
maxps
sub
repnz
rcr
jle
movsb
fldpi
xor
cmp
xor
sub
jae
mov
sbb
push
lret
dec
inc
icebp
call
je
scas
xsaveopt
sahf
xor
call
mov
jo
movsb
mov
pop
andl
or
mov
mov
test
nop
test
adc
or
and
mov
sbb
fwait
clc
push
adc
jg
pushf
or
xor
roll
testb
lock
mov
je
or
push
jns
rcrb
add
adc
adc
xor
adc
test
and
cmp
xor
or
adc
inc
clc
dec
fdivl
imul
mov
add
lret
je
jle
inc
pushf
push
inc
cltd
xor
into
fists
xchg
inc
adc
ffree
in
test
sub
inc
arpl
jb
cli
std
jle
or
or
loope
cli
test
mov
in
add
push
pop
les
mov
or
fwait
cmp
push
mov
dec
imul
dec
push
les
outsb
add
push
lods
sub
adc
cmp
push
adc
adc
loopne
test
xlat
pop
mov
hlt
mov
or
xlat
push
dec
fisubrl
pop
mov
arpl
push
push
movsl
push
cmp
jmp
pop
sbb
ret
inc
and
mov
arpl
jns
dec
or
inc
lea
pop
sbb
sbb
mov
lret
rolb
and
mov
call
loop
rolb
push
inc
jmp
cmpl
and
jmp
push
pop
pop
and
insb
lock
mov
out
mov
inc
adc
iret
test
dec
gs
dec
mov
add
cmpl
cmp
mov
mov
xor
lods
push
add
js
sub
adcb
or
mov
pop
sarb
mov
rcrl
jge
lea
cld
testb
je
inc
mov
sub
cmp
loope
or
xchg
jmp
test
or
enter
mov
xor
cmp
jl
push
movsl
das
sbb
add
loopne
cmp
lret
sub
sub
and
rcll
jb
mov
and
push
ds
push
adc
les
scas
and
aam
out
dec
mov
es
sub
jl
inc
dec
xchg
es
add
into
pop
sbb
das
adc
loope
je
lahf
or
dec
jns
mov
push
sub
xchg
mov
faddl
hlt
cmp
test
mov
dec
cld
enter
dec
out
or
inc
pop
or
dec
xor
ffree
cmp
push
cli
lds
rcr
jmp
pop
mov
push
jb
test
icebp
popl
enter
dec
jns
mov
aam
ss
rcll
hlt
push
aas
mov
mov
lea
cmp
sub
and
dec
movsb
addr16
cmp
addr16
sbbl
mov
arpl
js
or
sbb
cmp
add
andl
out
into
lea
and
xchg
out
mov
aaa
rcll
mov
and
dec
xor
sbb
in
adc
imul
dec
lods
shl
test
pop
jecxz
or
dec
or
cmpsl
loope
inc
or
add
cmp
cwtl
cmp
push
sub
adc
clc
pop
push
lock
and
adc
mov
cs
push
mov
push
dec
push
push
add
dec
sub
push
add
and
jmp
inc
les
and
adc
xorb
inc
jb
dec
push
pop
jmp
push
out
or
mov
mov
or
in
scas
mov
icebp
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
sub
gs
add
jle
dec
add
adc
or
bt
xchg
xor
movsb
sbb
jbe
sub
jge
cmp
jno
cmp
xchg
jg
das
push
data16
sub
rol
fadds
or
sub
push
pop
movsl
or
fdivs
or
jle
lahf
shrl
inc
ffreep
mov
pop
sbb
rorb
sub
dec
adc
les
sub
mov
adc
leave
push
jle
scas
adc
aas
sub
push
mov
jae
and
jb
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
shll
xor
jmp
sub
add
and
aad
jl
add
push
mov
inc
inc
test
das
mov
dec
jns
neg
movb
fs
cltd
push
rolb
fwait
mov
or
add
add
and
rolb
adc
nop
sbb
ret
rcl
dec
rclb
out
in
mov
adcb
test
movhps
dec
dec
or
mov
add
inc
inc
jp
sbb
pusha
inc
fists
mov
iret
add
lcall
lock
jge
pop
add
adc
adc
cmp
xchg
movsb
push
push
adc
pop
js
cmp
xor
pop
push
adc
inc
jns
into
cmpb
sbb
and
insl
or
das
push
jmp
addb
pop
aam
insb
dec
out
pop
mov
cmpsb
and
push
fadd
mov
mov
popl
add
jl
cmp
icebp
nop
stos
inc
jge
adc
and
xchg
lret
sarl
or
push
sbb
cmpsb
shrl
add
inc
inc
xor
mov
push
and
or
jne
shr
xor
mov
loopne
imul
push
inc
lea
jae
loope
fdivl
insl
ret
push
adc
mov
neg
add
and
xor
scas
nop
push
sub
test
test
jbe
enter
js
subb
or
sub
add
cld
push
js
sub
xchg
dec
and
add
insb
movb
out
and
mov
out
ret
push
cs
inc
popf
neg
sbb
mov
stos
enter
adc
jg
ret
insb
or
jne
addr16
loopne
bound
xor
xor
pop
adc
sub
pop
and
call
mov
inc
xor
mov
jb
push
push
cmp
lods
or
mov
inc
fwait
mov
mov
in
sub
or
xor
or
adc
cmp
push
clc
sub
sbb
js
sbb
ret
inc
pop
and
push
roll
movsl
adc
mov
jbe
fs
das
cmc
insl
cld
add
hlt
shrd
sbb
sub
dec
cmp
add
test
push
movsl
clc
cwtl
xor
add
pop
push
insl
in
inc
and
xor
out
and
xor
sub
xor
mov
rorl
inc
call
insb
cmpsl
lea
inc
icebp
or
stos
fcmovu
lock
xor
jo
jnp
mov
and
lock
sarl
jg
ret
js
fdivl
xor
jmp
jl
xor
neg
mov
xor
sarl
push
cli
fidivs
adcb
push
in
lock
or
add
mov
mov
dec
dec
inc
dec
xor
out
pop
or
or
sbb
cmp
sarl
jo
add
push
mov
sbb
and
mov
inc
es
add
jbe
adcb
aad
mov
adc
xchg
mov
push
std
movw
xor
xor
ficomps
jle
cmp
loopne
in
push
sbb
imul
push
lock
sahf
fwait
adc
sub
xchg
cs
jnp
es
call
inc
adc
ret
aaa
push
lods
inc
add
pusha
xorb
leave
movzwl
fiaddl
mov
das
cmp
pop
cmp
cmp
je
aad
add
adc
jbe
test
mov
mov
pusha
xor
fwait
addb
push
sbb
cmpb
add
sbb
and
cmp
pop
push
divb
imul
test
xor
mov
xchg
cmp
mov
cmp
xor
xor
enter
insb
lods
loopne
push
push
scas
push
dec
xor
pop
out
dec
out
aaa
loop
or
cld
jl
loopne
jge
inc
or
test
stc
mov
push
or
pop
ret
popf
jo
adc
sbb
mov
addl
fs
jle
clc
gs
or
pop
data16
lret
mov
mov
popa
je
inc
je
dec
add
pop
in
jmp
xor
jmp
adcb
pop
sub
xor
mov
cwtl
dec
cmc
push
mov
or
adc
lret
insl
push
popa
jnp
lods
loopne
orl
add
add
roll
popa
insb
mov
or
push
pop
cmp
loopne
push
push
fldl
pop
dec
inc
test
movsb
xor
out
and
or
daa
push
adc
or
cmp
cmp
testl
mov
movb
push
pop
jmp
pop
and
push
or
add
jns
cmp
notl
push
filds
je
mov
hlt
ja
dec
addl
push
enter
inc
pop
xlat
aam
imull
sub
sub
jns
jmp
cmc
cmp
push
setnp
enter
sbb
pop
pop
aam
aam
pushl
xor
arpl
sub
mov
push
and
adc
push
les
push
and
xchg
nop
cli
inc
add
mov
xchg
sub
mov
lock
cmp
test
mov
mov
movsl
nop
jp
mov
pop
lock
ljmp
mov
aam
popa
insl
fwait
xchg
xchg
fisttps
cmpl
test
mov
cmp
loopne
or
mov
or
mov
pop
dec
adc
xor
imul
pop
pop
pop
pop
pop
cld
rolb
add
dec
adc
lret
jl
cmp
imul
test
jb
and
and
ljmp
mov
sbb
dec
je
dec
add
mov
push
push
jmp
or
jmp
mov
cmp
rclb
sbb
cltd
in
repz
inc
and
pop
ret
add
sbb
lock
stos
data16
int3
or
push
adc
add
push
push
arpl
iret
xor
shll
adc
sahf
and
xor
cmp
sbb
aam
mov
or
and
jnp
int3
add
lods
cmpsb
mov
lahf
jbe
or
mov
mov
adc
lret
ds
adc
inc
xchg
cmp
or
push
orb
repz
dec
inc
rorb
mov
add
pop
sbb
or
imul
and
ficoms
and
or
sbb
or
xchg
xor
dec
add
rorl
pop
inc
or
or
fbld
mov
repz
jge
shr
jg
and
add
mov
add
shr
or
push
push
adc
test
and
add
push
or
mov
notb
xchg
outsl
leave
ss
jb
add
mov
add
add
dec
mov
jbe
add
jl
in
sbb
cmp
xchg
mov
pop
and
addl
mov
and
inc
fisttpl
cmp
adc
bound
xor
inc
inc
xor
mov
clc
xorb
adc
cli
sub
mov
or
xchg
test
dec
mov
mov
mov
aam
or
and
xchg
or
add
mov
mov
nop
or
adc
and
sbb
cmpsb
xor
clc
mov
ss
loope
pusha
loop
pop
add
mov
add
cli
jne
mov
in
mov
push
addb
test
add
push
or
pop
inc
mov
shll
adc
or
in
jbe
les
dec
sahf
mov
sbb
adc
test
lret
je
sub
inc
repnz
jmp
cmpsl
xchg
nop
sbb
test
pop
mov
ljmp
repnz
cmp
add
pop
or
nop
subl
test
add
lret
testb
dec
jo
roll
and
leave
dec
xchg
xor
sub
or
add
dec
inc
popa
add
stos
or
mov
mov
nop
jge
or
sbb
fs
or
fildl
imul
sub
test
sub
and
shrb
jne
xorl
outsl
rcrb
mov
push
arpl
outsl
dec
lods
outsl
inc
push
leave
clc
or
cmp
fiadds
cmc
sbb
sub
and
sbb
movsb
sbb
adc
sbb
sbb
sbb
inc
test
aas
add
mov
push
repnz
cmp
mov
mov
std
sbb
add
pop
je
and
mov
mov
dec
bound
push
add
adc
add
mov
push
mov
xchg
add
inc
adc
jno
shr
xchg
xchg
add
push
add
adc
fldl
and
sub
ds
push
sbb
movsb
pop
mov
pusha
push
ljmp
push
xor
push
enter
sub
lea
add
add
cmp
push
sbb
sub
pop
sub
in
int
add
mov
cmp
jle
inc
and
je
dec
repz
jp
int
test
test
mov
mov
mov
pop
pusha
std
insl
je
es
adc
add
call
cmp
inc
sbb
mov
inc
aam
push
or
or
mov
push
arpl
add
jmp
cmp
add
push
push
imul
mov
movsl
mov
ds
mov
cld
and
dec
pop
nop
or
sub
and
pop
aas
jmp
nop
jne
cmp
jne
inc
pop
inc
rcrl
cmpsl
cmp
add
popa
pushl
adc
or
or
inc
add
dec
std
adc
add
add
or
je
mov
iret
push
add
rcll
or
or
mov
jmp
cmp
scas
jecxz
rolb
pop
pop
mov
imul
adc
jne
loopne
and
xor
or
pop
ljmp
add
loopne
addr16
call
and
add
pop
add
cmp
lea
rclb
sub
cs
dec
jge
cmp
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
int
loopne
mov
or
adc
insb
scas
mov
push
inc
and
fldcw
fcomi
sbb
mov
sbb
sbb
mov
sbb
leave
dec
jns
ret
push
or
daa
pop
add
ret
aam
push
mov
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
xor
and
xchg
cld
lock
je
push
pop
sub
lods
rolb
push
xor
sbb
les
lret
inc
into
add
pop
pop
lods
sbb
dec
adc
sbb
adc
dec
mov
fs
sub
or
aad
inc
cmp
jbe
aas
orb
hlt
adc
and
pop
cmc
shlb
or
push
pop
push
mov
add
cmp
sub
test
push
loopne
into
paddusb
mov
add
adc
xor
pop
or
cmp
push
xchg
gs
addl
or
scas
scas
cs
add
in
or
jne
cld
inc
ss
or
sub
cmpsb
and
push
cmp
mov
out
cld
popf
dec
mov
leave
jne
adc
inc
add
mov
lock
add
add
js
adc
xor
add
inc
inc
dec
test
leave
push
sub
lds
mov
push
xchg
adc
cld
inc
push
cs
mov
je
pop
add
adc
jl
out
push
cmp
ja
add
cmp
and
repz
cmp
jne
shll
cli
mov
mov
adc
mov
xchg
jl,pn
pop
pop
je
xchg
test
cmp
xor
mov
iret
and
jb
dec
sub
and
push
mov
inc
test
data16
or
fdivr
aas
cs
mov
movb
jmp
or
ljmp
inc
add
add
dec
inc
stc
mov
inc
call
ret
inc
sti
dec
and
movl
add
int
call
xchg
jno
mov
mov
daa
testb
sbb
xor
jb
mov
loope
add
adc
insl
fdivr
inc
jb
jne
ret
sbb
add
out
andb
sbb
mov
add
push
add
cmp
mov
hlt
cs
imul
call
push
rolb
imul
lea
sar
ror
cmp
mov
xchg
fldt
es
ljmp
cwtl
mov
movsb
inc
ret
add
shl
inc
call
fwait
inc
jnp
adc
push
sti
add
addr16
adc
dec
cwtl
mov
push
test
lods
and
jl
in
mulb
jle
repnz
rcrl
les
mov
scas
adc
test
and
and
lea
inc
xor
shrl
add
into
sahf
cmpb
push
sub
popl
xchg
fucom
and
in
stc
pushf
mov
inc
call
jno
ljmp
ss
jg
or
inc
pop
mov
and
lea
rolb
lods
xor
mov
dec
or
push
pushf
fcoml
dec
or
push
nop
mov
movsb
xor
cmp
imul
sub
loope
pusha
data16
xchg
inc
jae
lods
mov
mov
jl
outsb
lcall
rol
add
jae
jle
cmp
cmp
shll
jbe
push
mov
add
shr
or
and
out
mov
clc
rorb
sbb
push
lret
jae
mov
inc
sbb
and
inc
js
mov
jle
cwtl
shrl
loope
shr
or
mov
sti
jmp
xor
jp
mull
cmp
ja
dec
xchg
xchg
sahf
and
push
pop
scas
xor
testb
dec
cli
cli
inc
dec
lret
repz
cli
div
pop
inc
or
sahf
xchg
dec
jae
test
orl
nop
loopne
xchg
pop
pusha
dec
imul
mov
and
test
scas
mov
dec
das
inc
xorb
jbe
push
fidivl
fldenv
enter
jg
or
push
insl
mov
enter
dec
dec
rolb
lock
mov
dec
sbb
add
push
out
inc
repnz
rcll
testl
sbb
loop
out
sub
shlb
test
bound
sub
fisttpl
inc
push
jne
aam
daa
adc
cmp
or
push
icebp
inc
outsl
jns
inc
shlb
fdivrs
aam
and
jbe
dec
sub
xor
nop
jge
adc
rcl
mov
mov
dec
or
lcall
mov
orl
cmp
dec
add
flds
rclb
mov
mov
insl
test
cli
mov
int3
jg
add
xchg
add
idiv
xchg
rolb
sti
mov
idivb
or
adc
push
sbb
adc
lock
orl
out
or
jge
pop
enter
lock
jb
jb
or
stc
add
jne
fs
movsb
repnz
fnsetpm(287
loopne
push
add
pushf
pusha
mov
sub
fwait
pusha
pusha
add
sbb
sub
add
es
idiv
pop
mulb
sbb
movb
dec
cmpsb
cmp
jle
push
sbb
test
pop
outsb
call
inc
pop
lret
mov
and
or
shl
leave
and
rcrb
xchg
mov
sahf
loop
pop
xchg
cli
fcoms
xor
fiadds
xor
call
mov
imul
call
mov
fsubs
pop
add
stc
xor
daa
and
loope
push
in
adc
mov
pop
sti
mov
jns
add
shlb
or
mov
enter
mov
test
or
sbb
test
ljmp
inc
js
add
enter
mov
mov
and
dec
int3
or
mov
sub
test
call
or
add
into
pop
add
cld
or
mov
inc
ljmp
jmp
insl
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
test
mov
call
ret
jp
jne
dec
xchg
xorb
divb
int
pop
or
hlt
cmp
in
filds
or
mov
lret
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
add
sub
mull
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
add
push
pop
scas
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
imul
sub
and
pop
pop
mov
xor
cmpps
push
sub
prefetchw
sahf
inc
ret
or
imul
push
lock
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
pop
rolb
jnp
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
add
dec
ljmp
dec
adc
add
add
loopne
loop
clc
mov
sbb
sub
or
add
push
push
scas
sbbl
cmpb
mov
addl
xchg
add
test
loopne
mov
xor
sarl
repnz
test
adc
lcall
scas
pop
pushf
sbb
xchg
into
mov
mov
sbb
and
sbb
xchg
xchg
out
inc
jg
into
into
xchg
mov
or
mov
sarb
push
pop
nop
insl
or
jecxz
sahf
pop
mov
aam
test
and
lds
sbb
stos
push
sub
js
mov
lret
sub
add
leave
lahf
repnz
lea
out
adc
or
movsb
aaa
mov
push
cmp
mov
into
mov
and
cltd
test
orb
sbb
or
sub
jmp
mov
mov
lret
aaa
cmp
pminsw
out
stos
push
xor
add
scas
pop
mov
clc
and
test
adc
fabs
dec
pop
add
or
or
bound
add
xchg
add
scas
inc
sbb
inc
lock
scas
push
mov
fcomps
rcrl
in
hlt
lfs
out
pop
cltd
cmp
mov
enter
cmp
jo,pn
daa
inc
js
movsb
repz
xor
adc
sbb
adcb
popf
and
je
dec
sub
dec
loop
jb
into
cmp
je
mov
pop
sub
hlt
mov
cmp
jb
push
test
add
lret
dec
sub
jmp
inc
push
stc
push
push
xchg
cwtl
sub
mov
fisubrl
cmc
in
add
leave
mov
into
push
or
aam
pop
mov
mov
mov
les
inc
xor
ljmp
push
popa
test
mov
scas
xchg
mov
sbb
push
adc
scas
sub
cmp
pushl
mov
loope
mov
and
push
push
mov
pop
and
mov
imul
mov
in
movsb
cltd
add
enter
push
push
push
ret
movsl
rclb
stos
cmpl
adcb
sahf
mov
push
shll
fcoml
rclb
cmp
iret
loope
push
cmp
aas
popf
ljmp
inc
test
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
add
test
sub
fstps
popa
sar
in
sub
xchg
pop
jmp
stos
subl
pop
mov
inc
push
add
mov
mov
add
stos
sub
and
test
fmull
inc
in
sub
lahf
pop
roll
loope
aaa
jne
dec
cmp
test
add
call
ja
js
je
ss
ret
push
push
cmp
fwait
dec
push
jg
call
inc
insb
cmp
dec
mov
cmpsl
jo
and
mov
mov
in
cmp
mov
in
dec
dec
loope
cmp
in
fisttpl
pop
push
add
ja
fs
fimuls
xchg
rorl
loopne
call
orl
ret
dec
call
xor
xchg
loop
shlb
roll
add
pop
daa
insw
cmpsl
mov
dec
mov
inc
push
lods
jae
jle
out
or
cmpsb
loopne
jmp
or
mov
movsb
filds
imul
ss
subl
push
mov
or
js
push
adc
push
sbb
mov
or
mov
out
aam
loopne
dec
sbb
inc
insl
add
xchg
push
xor
iret
xor
pushf
xor
aas
push
sub
add
fs
adcb
inc
ss
mov
es
sbb
hlt
decl
pcmpeqb
jg
push
or
aam
pop
daa
mov
aas
pop
cmp
push
jae
ret
push
push
rcll
pop
or
cs
mov
dec
aas
inc
fs
and
add
repnz
pop
mov
cmp
pop
xchg
lea
pop
nopl
cmp
fcomps
gs
inc
inc
push
mov
ret
cmp
pop
js
daa
mov
test
movsb
invd
pop
pop
xor
sahf
test
subl
sub
pop
dec
push
pusha
imul
push
mov
mov
jl
push
ret
jmp
xlat
push
outsb
shlb
or
movsl
enter
sbb
ret
mov
xchg
adc
cs
jmp
subb
xlat
mov
add
ret
sub
icebp
mov
push
add
adc
jnp
add
bound
dec
push
sar
xor
sbb
dec
pop
push
sbbl
aas
mov
and
pop
sub
lea
jl
arpl
pop
rorl
sarl
stos
inc
sub
sbb
aas
mov
dec
rcrb
xor
movsb
inc
fadds
in
jecxz
mov
xor
mov
pop
out
add
es
mov
xchg
movsl
aas
add
stc
gs
mov
pushf
ret
jb
inc
jbe
lcall
jl
or
jmp
cmp
push
sbb
cmpsl
pop
ss
add
mov
aad
insl
cld
mov
loopne
pop
pop
xchg
and
popa
sub
fsubs
test
sub
jno
xchg
daa
outsb
adc
pop
mov
add
inc
add
pop
rcl
cmp
xor
imul
mov
pop
jb
add
lret
dec
inc
imul
dec
or
into
inc
mov
xchg
and
jns
sbb
jbe
xor
adc
add
mov
add
arpl
xchg
lock
cs
mov
repnz
in
sbb
stos
xor
sbb
addr16
adc
fisubrl
pop
add
clc
pop
inc
mov
and
aad
sar
rclb
fiadds
adc
outsl
or
add
inc
mov
sbb
sub
cwtl
mov
imul
or
push
inc
sbb
fisttps
xor
fs
ret
std
data16
xor
inc
and
adc
insb
jmp
push
in
sbb
gs
imul
dec
call
mov
rcll
sub
ret
bound
cld
or
mov
arpl
imul
fidivrl
cmp
ja
pop
adc
js
fsubrp
sub
ret
andl
adc
fldl
jge
cmp
pop
or
movsb
lcall
jp
inc
mov
sbb
cmp
ja
jbe
adc
xorl
push
lds
xlat
cwtl
xor
in
mov
sbb
fbld
add
cmp
jp
repnz
dec
test
jg
adc
mov
stc
lcall
mov
adc
xor
jmp
inc
add
loope
popa
jmp
call
lret
pop
je
hlt
fadds
in
xor
pusha
xchg
push
dec
mov
outsl
jl
push
add
sub
sub
in
inc
jo
adc
mov
and
mov
jb
lea
mov
aas
leave
xchg
or
push
push
sbb
sub
push
add
mov
mov
mov
divb
or
test
or
aaa
lcall
pop
sub
loopne
pop
ret
xor
or
cmp
xor
andl
jnp
and
mov
das
push
or
pop
dec
cmpl
mulb
xchg
cltd
lret
inc
cmp
cmp
sbb
cmp
ds
inc
cmp
xor
cmp
cmp
add
data16
mull
pushl
mov
push
cli
mov
loope
and
fwait
shlb
cltd
mov
fsub
mull
in
sahf
cmp
js
or
mov
push
inc
cmp
lcall
push
sti
xor
and
and
inc
sbb
push
aas
inc
or
mov
std
arpl
js
fwait
inc
dec
or
sahf
lret
and
lcall
sbb
add
dec
or
test
adc
sub
ss
sbb
mov
outsb
loop
jl
jl
hlt
or
test
push
add
add
xchg
push
or
cmp
jbe
adcl
inc
and
mov
pop
jle
push
fucomp
add
dec
sbb
mov
and
dec
push
push
push
adc
inc
add
mov
orb
dec
dec
loopne
leave
pusha
inc
dec
sub
jge
inc
hlt
addl
pop
jl
in
mov
call
pop
lret
stos
sbb
rcrl
mov
lds
add
call
push
popa
loope
lock
sub
fs
mov
or
rcll
ret
mov
out
mov
fs
fsubr
xlat
in
mov
shr
sbb
outsb
outsb
aaa
loope
fdivs
mov
push
inc
inc
loope
je
jge
push
lods
pop
and
cmp
jg
shrb
or
adc
or
sbb
filds
jae
js
pop
adc
cmp
jae
mov
stos
sbb
mov
lret
cmp
jg
mov
dec
sarb
xor
mov
mov
add
mov
pop
push
xor
cmpsl
and
jae
push
pop
outsb
fcomps
pop
mov
movsl
push
mov
repz
cmpl
in
ret
push
pop
cmp
sub
mov
push
inc
scas
out
ret
rorl
add
shll
addr16
scas
sbb
mov
imul
in
sti
and
cmp
adc
add
dec
dec
or
xor
andb
push
pop
cmp
hlt
add
or
dec
inc
inc
scas
loop
movsb
push
pusha
ds
into
ja
cmp
jbe
jae
out
repnz
add
test
sbb
or
mov
cmpsb
outsb
imul
dec
cmpsb
test
je
popf
and
loopne
scas
or
jg
mov
inc
fwait
jl
xlat
pop
fwait
mov
pushf
cmp
add
mov
xchg
je
mov
nop
imul
aas
sbb
sbb
cli
testb
xor
inc
dec
cmp
add
push
mov
push
inc
xchg
loope
xchg
std
repnz
shl
in
mov
sub
xchg
adc
iret
push
xchg
sub
push
xor
je
dec
jne
push
or
inc
jno
push
jmp
xor
pop
add
xor
je
add
je,pn
adcl
imul
hlt
or
push
sub
cmpl
mov
daa
outsl
or
cli
inc
mov
icebp
mov
cli
arpl
mov
clc
je
mov
mov
adc
mov
dec
aas
mov
pop
loope
dec
adcb
inc
js
lds
mov
push
test
jmp
cltd
xchg
in
xchg
pop
mov
push
lods
pop
les
push
push
bound
jnp
push
jb
arpl
add
lcall
popf
clc
push
lea
cli
or
inc
mov
rolb
in
add
popf
push
in
cmpb
sub
add
and
int
xchg
pop
out
insb
cmp
addr16
jmp
clc
mov
les
fildll
adc
jb
pop
ret
fcom
ret
pop
sbb
push
cmp
adc
je
push
push
add
cmp
frstor
or
push
mov
lret
mov
mov
imul
gs
out
pusha
das
or
add
cmp
add
push
ror
rolb
xlat
add
push
sbb
test
xchg
sbb
mov
add
hlt
jne
adc
fistpl
or
push
mov
add
mov
lock
jmp
pop
fs
mov
mov
sbb
les
mov
cmpsl
les
mov
or
mov
push
scas
sub
inc
bound
dec
cmp
js
jo
dec
dec
dec
push
mov
jg
rclb
cmp
orl
and
adc
scas
test
into
xchg
dec
adc
add
pop
popa
mov
cmp
jg
cmp
adcl
scas
jle
out
subb
lods
loopne
pop
fiaddl
and
mov
and
xor
test
or
mov
cmp
fstpl
xchg
call
mov
jmp
adc
addb
sub
and
cmp
mov
ljmp
cmp
ret
jae
jb
or
adc
and
push
fiadds
pop
aaa
pop
pushf
and
xor
loop
mov
pop
scas
mov
push
loope
jno
and
scas
xchg
arpl
scas
push
xor
dec
and
ret
es
data16
adc
inc
stos
add
es
pop
push
outsb
stc
rolb
pop
sti
insb
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
jl
push
pop
mov
testb
jae
inc
mov
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
dec
jle
xor
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
shr
jmp
das
aaa
out
pop
shlb
insl
mov
mov
fisubrl
push
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
or
mov
jp
fs
orb
mov
xchg
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
mov
lret
jmp
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
sbb
les
xchg
jb
mov
test
inc
mov
test
mov
stos
shlb
pop
dec
enter
cvttps2pi
das
fdivs
or
or
pusha
sub
add
dec
mov
addr16
nop
mov
inc
push
in
nop
mov
in
add
mov
sub
inc
nop
ss
nop
fmul
pop
cld
push
or
fs
test
pop
mov
pushf
inc
rcrb
adc
add
push
mov
xor
or
icebp
sub
orb
clc
movb
push
cmp
xlat
dec
dec
roll
nop
stos
jns
push
rol
jo
inc
pop
ret
push
jb
arpl
add
inc
cmpsl
fsubrs
enter
dec
in
cmp
push
in
or
mov
in
cmp
es
adc
rorb
or
into
adc
adc
mov
loop
or
and
and
dec
mov
es
ret
xor
inc
fs
insb
xchg
outsl
imul
xor
outsl
call
js
adc
pop
sbb
xchg
pop
mov
popa
or
pop
and
inc
sbb
jl
pop
sbb
mov
pop
ds
inc
sbb
cwtl
dec
and
inc
sbb
jle
mov
xorl
or
enter
mov
cmpb
pushf
test
xlat
and
jo
movb
mov
loopne
pop
mov
out
fsubs
cwtl
mov
rcl
mov
xor
les
jbe
cmpsb
xorl
adc
fcmovnbe
pop
in
unpcklps
pop
or
sbb
in
mov
mov
jae
std
push
jno
dec
es
in
fs
insb
jo
js
pusha
nop
dec
jl
sub
jb
ds
call
adc
js
cltd
mov
jno
test
mov
xor
sub
push
fwait
or
sbb
aam
jl
cltd
cmp
sbb
in
cltd
movsb
mov
in
push
fcoml
add
sub
popa
and
mov
xlat
in
sti
gs
shll
xor
mov
sbbl
dec
aad
lea
les
leave
ja
sub
test
mov
int
sbb
jl
lahf
pop
mov
jp
or
sub
and
mov
xor
jl
add
ja
cmp
mov
mov
bound
adc
insb
sbb
test
loope
cwtl
inc
mov
or
insb
mov
enter
adc
xor
nop
outsl
sbb
aam
enter
adc
xchg
insb
les
mul
test
jnp
push
imul
lock
arpl
inc
cmc
hlt
or
and
adc
adc
add
loopne
push
sub
push
jns
sbb
leave
test
sbb
insl
adc
in
jnp
sbb
mov
cmpl
mov
andb
sbb
test
inc
xchg
clc
jo
or
fcompl
scas
aas
adc
fnstsw
sbb
cltd
dec
enter
mov
in
aam
mov
xchg
mov
loopne
or
imul
daa
inc
and
fs
call
movsl
aas
or
add
call
inc
xchg
dec
push
xor
fwait
inc
cmp
or
aam
shlb
dec
add
test
add
das
or
rcrl
xchg
fisttps
mov
push
lea
adc
add
sbb
cmpsl
push
call
jl
lahf
pop
rcll
fs
and
adc
lea
xor
fadd
sub
mov
stos
in
xchg
insl
adc
push
inc
mov
cltd
dec
dec
fs
adc
fadds
daa
or
mov
or
jb
stos
cwtl
loop
or
pop
fidivl
mov
bound
and
xorb
cmpsl
cmpsl
scas
xorl
mov
enter
add
sub
pop
add
adcb
in
popa
xor
or
sub
push
sub
mov
inc
call
in
and
in
and
pop
enter
fwait
dec
stos
loop
imul
mov
loope
in
or
inc
fmuls
xchg
stc
jg
or
sbb
jo
fldcw
je
add
sub
in
mov
test
or
and
orl
cmp
jnp
and
xlat
icebp
or
es
push
mov
int3
ljmp
outsb
ljmp
pop
nop
popa
aad
xchg
nop
cmp
movd
mov
imul
lea
pushf
cmp
cmp
or
shrb
mov
inc
mov
push
sub
xor
and
sbb
xchg
test
xchg
pop
outsb
and
cmp
es
fs
aam
rorb
cmp
xchg
fistl
dec
test
push
imul
test
mov
daa
xchg
nop
xchg
mov
inc
or
add
outsb
sub
lock
inc
sub
pop
stc
adc
mov
cmp
aam
je
in
dec
sub
or
inc
push
cmp
or
or
mov
or
and
call
enter
mov
and
adc
jns
jae
test
mov
add
xor
scas
sbb
rolb
xchg
add
or
mov
sbb
gs
mov
jae
imul
popf
dec
mov
xor
and
inc
add
xchg
push
ss
xchg
mov
pushf
jp
sbb
mov
sbb
cmp
sbb
add
popf
xor
mov
ret
faddl
adc
lret
mov
jnp
es
mov
or
inc
jb
sub
les
add
bound
sub
ret
push
iret
dec
sub
adc
movsb
in
test
add
enter
and
test
rclb
xor
cwtl
scas
cmp
aaa
cmp
cltd
aam
cmp
push
jb
sub
cld
dec
in
and
ret
adc
adcl
xchg
cmp
jge
das
rcrb
fcom
jo
mov
mov
sub
and
push
psubsb
jb
daa
mov
fs
orb
fs
xor
inc
dec
push
or
sub
adc
mov
add
call
leave
in
filds
das
ret
in
pop
mov
daa
pop
das
add
in
loopne
addb
push
pavgb
enter
mov
sub
push
mov
movsb
inc
adc
orb
xor
add
dec
cs
lock
or
adc
mov
dec
and
jecxz
xchg
or
xor
or
push
mov
fnstcw
or
iret
push
jp
xor
xchg
xor
add
out
sub
push
enter
lret
dec
xor
ret
xchg
mov
add
jge
mov
xchg
mov
call
add
js
in
mov
in
sbb
imul
adc
push
test
adc
pop
push
loope
hlt
xor
push
xor
xor
push
xor
xchg
or
cmpsl
or
sbb
push
shlb
clc
mov
sbb
sbb
cmp
mov
and
stc
cld
jne
lea
adc
nop
inc
scas
adc
or
gs
push
in
or
jo
or
push
movl
lods
xor
add
jg
fcom
out
inc
cwtl
and
cld
xchg
int3
and
lock
fnstsw
xchg
inc
ss
sub
xchg
add
fwait
jl
inc
pop
ret
pop
inc
mov
add
push
andb
cmovs
mov
aaa
dec
scas
enter
mov
repnz
arpl
sbb
aam
inc
int3
rorb
push
loop
aad
aam
enter
shll
and
cmp
aam
fcomps
adc
sbb
mov
or
inc
xchg
leave
mov
fsubl
adc
insb
xor
add
push
nop
insb
inc
jmp
mov
and
pop
int
jae
fisttpll
push
mov
xchg
cmp
loopne
insb
mov
xor
push
jns
sub
pop
add
cmp
sti
insb
or
jne
jnp
mov
push
push
aas
aam
xchg
ret
adc
aas
inc
or
cmp
mov
cmp
loope
cltd
cwtl
insb
or
call
cmc
xchg
pop
loop
or
cmp
pushf
fwait
mov
and
pushf
les
in
mov
xor
mov
fsubs
inc
fwait
lods
popf
xchg
sub
sarb
and
mov
jmp
test
imul
and
xchg
inc
orl
adc
sub
leave
xorb
and
movsb
fdivr
cmp
or
movsl
and
movsl
das
or
cmp
fnstcw
cmp
and
testb
imul
or
es
fnsave
int3
ret
adc
adc
mov
pop
fcoml
fs
cwtl
jmp
cmp
push
leave
int
aas
push
addb
jo
adc
nop/reserved
push
movsl
int
inc
in
sub
loop
xchg
js
pop
or
pusha
xor
jmp
and
inc
and
lea
mov
push
mov
out
rorl
fadd
xchg
ficoml
out
rorl
loop
add
shlb
or
inc
roll
stos
adc
add
sub
lea
fdivr
notb
push
mov
xchg
sbb
xor
das
xorl
mov
test
xchg
inc
cmp
gs
dec
inc
dec
in
dec
push
das
es
dec
pop
mov
xchg
cmpsb
push
cwtl
movsl
aad
es
push
xor
xor
cmp
jnp
aaa
popf
cmp
or
or
add
test
nop
inc
shll
xor
call
mov
add
sbb
and
jge
add
xor
orb
enter
or
aad
pop
lea
ret
daa
sub
push
and
mov
xor
mov
mov
inc
lods
mov
adc
inc
sub
fsubl
jno
sub
fcompl
aaa
xchg
inc
push
mov
cmpsl
cmc
popf
jl
add
push
jb
test
call
and
rcr
adc
pusha
or
inc
sub
fs
nop
and
addl
xor
sbb
jecxz
add
movsb
jne
orps
loope
dec
imul
imul
sarb
test
fldt
aam
pushf
addb
dec
popf
push
mov
or
call
cmp
mov
adc
xchg
data16
popf
dec
lods
cwtl
inc
cmp
push
adc
adc
push
add
cmp
aad
sbb
cmp
orb
bound
xor
jne
pop
orb
mov
clc
pop
int3
and
dec
not
fs
sub
into
or
adc
add
inc
test
aam
mov
daa
mov
dec
rorb
push
nop
and
mov
gs
or
ret
int3
test
les
rcl
cmp
sbb
dec
nop
inc
lds
divl
in
push
aaa
lock
fs
subl
mov
push
lock
rorb
or
xchg
jne
sub
jl
sbb
sbb
sub
dec
popa
dec
dec
inc
test
das
dec
mov
pusha
adc
cmp
adcb
or
adc
test
jne
je
sbb
pop
inc
and
push
aas
sbb
push
and
inc
add
outsl
xor
mov
dec
push
xor
gs
nop
dec
jo
dec
or
or
rclb
jb
push
sbb
mov
int3
fsubrl
add
pop
mov
mov
lods
test
sbb
cmp
mov
cli
add
cmp
jmp
test
pop
bound
mov
xor
lods
mov
scas
cmp
pusha
leave
pushf
cwtl
or
or
test
popf
xchg
fs
data16
mov
ret
gs
mov
xchg
push
pop
mov
mov
stos
adc
add
cmp
push
jmp
fistps
mov
xor
addr16
test
push
imul
mov
and
push
rclb
sbb
push
bound
inc
loop
or
mov
lret
cmp
js
lcall
adc
xchg
dec
xor
dec
inc
nop
nop
sbb
mov
insl
test
xor
add
js
push
fldenv
test
movzbl
inc
dec
fs
push
mov
dec
cmpsb
pop
and
or
lods
xor
jmp
int3
mov
mov
enter
fldl
push
mov
imul
mov
and
mov
aaa
add
sub
faddl
mov
test
mov
nop
xchg
test
pop
rcrb
push
mov
push
and
in
cmp
mov
movsb
test
mov
stos
test
fsubl
mov
fsubs
cwtl
lock
rep
sub
xor
add
call
add
inc
push
in
xchg
ret
ja
cmp
xchg
bswap
and
or
cmp
add
cli
sbb
imul
push
lds
xrelease
fsubs
cltd
push
test
not
movsl
push
add
inc
push
in
pop
call
leave
gs
iret
ret
sbb
mov
jmp
add
pop
inc
lcall
xor
clc
xchg
js
jns
pop
mov
nop
ja
inc
cwtl
sub
leave
add
movsl
cltd
adc
and
idivl
dec
dec
pop
or
imul
fs
add
adc
inc
fwait
push
insl
mov
leave
mov
inc
push
pusha
adc
xor
and
dec
xor
cmp
sbb
dec
xor
and
cmp
shll
sub
xor
or
pop
rcr
xchg
xchg
xchg
mov
inc
loop
pop
stc
or
jb
add
pop
jne
jp
xorb
inc
inc
cmp
jg
xor
das
xchg
pop
inc
or
add
or
and
pop
rolb
test
mov
push
aad
push
add
pop
rorl
movsb
add
push
dec
sbb
add
loopne
adc
dec
xor
outsl
fmuls
sub
ret
xor
or
nop
add
sti
movl
fs
mov
shlb
mov
lods
test
add
adc
add
gs
push
inc
cmpsb
inc
je
pop
insb
dec
cs
test
movsb
rclb
mov
ret
movsl
mov
mov
add
inc
sbb
es
movsl
sbb
xor
push
andb
cmp
add
sbb
inc
xor
enter
lock
sub
dec
nop
fildl
int
pop
int3
in
and
mov
outsl
ret
dec
out
adc
scas
adc
cltd
popa
and
in
pop
adc
sbb
fs
fsubrs
and
unpckhps
add
rolb
jb
jae
mov
bound
push
adc
mov
in
or
pop
movsl
or
pop
fcmovb
cmp
aas
out
je
les
and
repnz
arpl
sbb
pushf
ret
arpl
les
dec
imul
movsb
and
sub
sub
fs
jo,pn
xchg
scas
lods
fs
sub
pusha
gs
loope
pusha
sbb
test
test
lcall
int
imul
mov
shll
xchg
mov
ss
mov
mul
jne
adc
and
fcoms
push
or
or
addr16
rclb
aad
and
add
aam
pop
jo
add
sti
adcl
xor
xchg
xchg
inc
scas
mov
pusha
add
aad
jbe
inc
or
repnz
xor
xor
imul
and
mov
es
cmp
adc
sub
sbbb
xorl
rolb
xor
sbb
mov
call
inc
shrb
addr16
test
cmpsb
dec
mov
push
dec
push
inc
jae
and
push
rcll
in
jns
add
enter
xchg
add
aad
or
pushf
cld
push
cltd
enter
insl
lock
ret
cmp
xchg
pop
mov
xchg
adc
inc
in
ja
sub
or
imul
or
dec
sbb
rorb
pusha
and
dec
pusha
pop
jg
repnz
popa
mov
push
xchg
add
pop
xor
sub
insb
xorb
and
aam
or
pop
pop
in
push
aam
pop
aam
bound
aaa
andl
mov
pop
fsubr
fists
mov
aaa
es
adc
int
in
shlb
dec
hlt
pushf
dec
das
movb
cld
outsl
mov
pop
and
rcll
aam
cmp
add
dec
fcoml
jl
xchg
enter
mov
sbb
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
decl
ret
aad
or
pop
or
push
sbb
or
sub
mov
and
fcomp
in
pop
rorb
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
dec
and
fs
aam
insb
push
inc
mov
stc
inc
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
fs
and
inc
mov
mov
cmp
fldenv
out
loopne
mov
sbb
xor
add
insb
je
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
aam
fs
push
cmp
add
push
mov
cmp
mov
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
mov
adc
xor
jo
outsb
popa
test
xor
orb
ds
ud2
xchg
sub
inc
test
xchg
inc
lods
sub
aas
cmp
lahf
mov
push
iret
js
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
and
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
inc
test
pop
lds
pop
adc
into
fwait
jnp
js
lods
in
mov
sub
add
rolb
xor
mov
mov
rcrb
pop
inc
jae
jns
add
xor
sub
notl
movsb
movsl
dec
cmp
dec
adc
cltd
fs
sbb
and
pop
jo
dec
push
pusha
test
or
push
lcall
or
leave
dec
cmpsb
notb
pop
dec
dec
and
sub
ret
shll
flds
adc
and
sub
ficoml
mov
push
insl
adc
fs
sti
inc
addl
or
xor
pop
adc
jg
sbb
push
out
and
test
or
vmptrst
adc
dec
aam
or
bound
xchg
mov
mov
popa
and
rcrl
or
sub
push
xorb
add
nop
mov
int3
or
jge
mov
icebp
adc
test
add
pop
mov
pusha
add
mov
xchg
sbb
orb
xor
pushf
pop
lea
shll
enter
cltd
subb
and
adc
fmul
les
stc
les
mov
mov
push
cmp
movsb
test
mov
in
jl
rclb
enter
lods
or
mov
ror
leave
rorb
cmp
or
mov
xlat
xor
pushf
sub
subl
or
jmp
jle
xchg
orl
mov
pop
adc
andb
mov
or
in
add
mov
adcb
cmp
xor
mov
sub
ficoml
cmpsb
dec
add
mov
pop
fidivl
jl
rolb
pushf
mov
pop
adc
movsb
mov
push
lods
pop
inc
into
mov
xor
or
push
enter
das
inc
add
mov
mov
add
lods
popf
addb
repnz
mov
cmp
sbb
xlat
arpl
inc
lea
loop
dec
push
or
popf
xor
in
adc
mov
inc
push
and
adc
insl
hlt
cltd
inc
add
add
inc
jno
repz
insl
push
pop
sbb
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
lds
xchg
sub
icebp
addl
mov
and
fcmovne
in
ret
in
mov
insl
orb
xor
mov
push
jb
aas
push
pusha
push
roll
sub
push
xor
shrb
scas
dec
shrl
adc
inc
lea
jp
pop
xor
das
cmp
mov
jg
cmp
sbb
mov
rorb
nop
mov
push
aas
out
and
pop
add
jmp
mov
loope
add
xor
fld1
mov
sbb
mov
movsl
or
movaps
mov
mov
test
xchg
imul
inc
and
scas
imul
adc
dec
test
and
sbb
lods
dec
dec
jno
jne
mov
sbb
and
or
test
pop
pusha
inc
mov
adc
es
jecxz
or
sub
adc
imull
testl
fwait
mov
insl
adc
lcall
push
pushf
lcall
push
inc
mov
pusha
mov
rep
negl
inc
mov
mov
enter
add
popa
and
stos
or
addr16
mov
adcb
scas
xchg
push
cmp
cltd
adc
movsb
push
scas
or
pushf
aam
imul
mov
sbb
inc
mov
push
jo
xorl
sbb
movsb
pusha
insl
add
js
pushf
mov
mov
and
xor
or
js
jno
mov
or
aas
ret
xor
std
subl
xchg
arpl
mov
fs
movsl
mov
xlat
sub
xchg
arpl
insl
jbe
add
mov
push
lcall
lods
pop
pop
sbb
push
jns
bound
adc
jmp
test
xchg
and
dec
daa
push
pop
adc
rep
imul
cltd
dec
xchg
push
leave
cwtl
fldt
test
or
insl
je
cmp
sbb
and
cmpsb
dec
ret
inc
add
movb
sbb
popf
mov
shrb
lahf
addb
shll
pusha
cmp
dec
or
xchg
cmp
push
nop
cmp
shlb
xchg
sbb
lods
out
mov
adc
cmp
mov
shrl
cmp
js
addb
or
pop
inc
movb
or
out
int
fcmovbe
inc
xchg
bound
sbb
sbb
jno
xchg
orl
mov
mov
add
in
pop
nop
test
ret
scas
jne
insl
ret
inc
add
or
xor
push
ret
dec
test
lods
pusha
and
lahf
and
add
or
mov
mov
xor
lds
les
adc
lods
adc
fs
mov
icebp
movsb
push
push
sbb
mov
or
pop
repnz
mov
jno
pop
test
jno
stos
sub
fmuls
sbb
sysexit
test
sbb
fadds
movsl
mov
push
dec
inc
nop
sub
cmp
nop
dec
ret
push
movsb
pop
testb
push
mov
xchg
std
fdivp
push
push
inc
mov
xor
ficompl
hlt
dec
pop
cld
inc
push
xor
outsb
in
sub
iret
xor
push
jns
push
push
cld
inc
mov
and
add
stc
pushf
mov
add
jecxz
sahf
or
arpl
or
movsb
std
jnp
popf
mov
jno
stos
sub
fsts
or
insb
and
add
mov
fcomps
movb
enter
and
cmp
push
rclb
stc
inc
add
pop
adc
sbb
adcl
dec
loop
sub
and
movsb
add
ret
out
and
in
cmp
adc
cmp
and
dec
sub
sti
or
xchg
divb
xorl
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
shlb
sti
mov
sbb
cmp
add
dec
or
loop
js
ss
mov
das
ret
mov
es
or
jl
mov
push
out
mov
jl
push
pop
mov
inc
int3
mov
mov
inc
std
add
inc
and
cs
inc
push
out
ds
imul
stc
syscall
xor
jl
iret
repz
mov
out
add
push
aad
int3
rolb
lret
mov
add
jmp
aas
mov
rdmsr
jnp
movl
push
sar
aas
inc
orb
jnp
mov
add
pop
das
mov
sarl
xchg
adc
or
cmp
rclb
cmpl
test
rcrb
add
nop
add
into
pop
adc
test
dec
push
out
add
repz
sarl
push
push
fcomps
lcall
jb
or
xchg
push
ja
lock
mov
add
incl
subb
popa
in
push
bound
idiv
and
insb
outsl
arpl
imul
fists
lods
jb
sub
popa
arpl
jne
jb
outsb
je
testb
imul
das
add
push
insl
adc
outsl
out
pop
outsb
lock
inc
outsl
jb
js
je
jb
gs
add
or
outsl
add
add
add
add
jne
les
and
jb
lock
add
add
add
add
rol
or
int
dec
add
xor
inc
push
add
inc
aas
push
stos
pop
scas
pop
ja
dec
add
sub
sbb
ja
push
insl
xchg
je
je
and
jae
cmp
das
dec
fisttpl
fs
mov
jge
insl
push
push
or
push
mov
lret
jns
out
sbb
popa
outsb
dec
jnp
aas
imul
outsl
repnz
or
out
divb
addr16
and
outsl
cs
jo
mov
jbe
xor
stos
insl
sub
push
clts
or
cmp
out
fnstsw
jne
inc
push
data16
xchg
neg
popa
xchg
ds
jp
sub
sub
jnp
arpl
xor
mov
lahf
popa
push
sbb
inc
arpl
jo
scas
mov
dec
jbe
in
push
outsb
in
ds
je
adc
sbb
jo
out
lods
js
arpl
mov
fisttpl
sub
leave
shrb
imul
das
jb
mov
fidivrl
xchg
xor
outsl
xorl
fidivrl
or
or
outsl
xchg
lahf
mov
sub
aaa
jg
dec
sbb
cmpsb
iret
fbstp
inc
imul
sbb
jne
jbe
shll
xchg
jb
jne
jb
fsubrl
ds
adc
push
das
lods
mov
jae
mov
ljmp
push
jo
lahf
outsl
aas
or
loopne
or
arpl
sbb
pop
mov
xlat
loopne
cmp
aaa
insl
mov
imul
add
inc
in
imul
shll
jnp
push
dec
cmpsb
rdtsc
cmpsl
outsl
pop
lock
sub
pop
xchg
mov
pop
jb
cmp
add
pop
stos
mov
mov
lret
je
scas
sbb
popa
mov
mov
scas
pop
dec
jne
popw
pop
jecxz
test
sub
insb
add
dec
addr16
pop
ret
fs
add
push
jno
and
or
inc
iret
sti
divb
push
adc
dec
sarl
push
adc
iret
sarl
sbb
sbb
mov
sahf
out
cmp
sbb
stc
sahf
jnp
das
push
pop
sahf
push
sbb
sahf
sarb
mov
clc
pop
js
jns
jns
jns
jp
push
cld
adc
pop
cmp
dec
incl
adc
mov
jp
inc
mov
sarb
add
push
mov
dec
jb
fcmovne
add
pop
mov
jl
adc
imul
mov
or
pop
mov
shll
fiadds
fwait
cmp
dec
add
fdivrl
xor
outsb
das
pop
add
and
add
das
das
and
pop
mov
mov
dec
inc
and
sbbl
popa
jmp
je
dec
idivl
stc
lock
aas
dec
inc
lea
sbb
popa
jnp
outsb
clc
ds
daa
outsl
and
pop
pop
dec
and
pop
xor
neg
fsubrs
out
iret
jns
out
shr
arpl
iret
and
mov
push
arpl
pop
cmpsl
imul
jp
jae
push
and
sti
ss
dec
jne
dec
pop
mov
push
ds
test
iret
mov
lcall
fisttpl
insl
insl
cmp
cmp
fs
dec
and
jns
mov
xlat
mov
push
das
das
adc
push
inc
pop
sti
arpl
bound
dec
outsl
jbe
dec
arpl
add
jo
sub
addr16
cld
inc
jnp
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
cmp
out
popf
inc
popa
outsb
adc
out
jae
xchg
popl
ja
out
mov
je
jb
xor
outsl
in
push
push
gs
sbb
out
sti
cmp
push
jne
xchg
popf
jbe
cmp
inc
aas
add
ds
xor
jnp
mov
out
add
insb
jae
push
push
shlb
popa
insb
jne
inc
inc
insb
or
mov
adc
and
sub
ljmp
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
aam
fprem
dec
dec
dec
dec
dec
mov
mov
pop
pop
pop
aam
or
bound
gs
imul
jo
add
jbe
pop
movsb
pushl
jns
jnp
jge
jg
adc
lcall
pop
mov
and
add
popa
fistpll
orb
sar
lret
jno
loop
stc
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
sbb
outsl
das
cmp
jmp
add
jo
xor
popa
js
addl
ret
dec
pop
sbb
out
loopne
sahf
pusha
ret
ret
sub
imul
add
adc
add
mov
sti
push
add
add
add
and
push
pop
push
add
xor
pop
lcall
add
pusha
push
fstpl
inc
add
or
xor
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
adc
push
mov
push
outsb
imul
outsb
and
push
or
nop
xchg
add
loope
loop
jp
cmp
mov
push
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
push
in
add
fst
mov
inc
scas
mov
jmp
pop
pop
lods
push
stos
lods
mov
imul
or
cmp
ja
xor
inc
sub
ss
inc
pop
stos
stc
movl
push
pop
mov
xchg
je
hlt
jbe
mov
dec
bound
je
outsb
data16
fstl
insl
xor
ss
out
je
xor
fistl
rclb
jo
pop
sar
jae
lea
mov
outsl
js
push
testb
and
insl
jo
jo
mov
fldenv
int
dec
xchg
shlb
aaa
insb
in
pop
or
les
dec
imul
mov
or
inc
cmp
dec
inc
jb
imul
cmpsl
cs
stos
ss
jns
mov
mov
outsb
lock
and
arpl
je
and
push
rcrb
mov
outsb
jle
jbe
mov
push
xor
outsb
pop
jb
divl
sbb
and
xor
incb
pusha
aaa
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
sub
pop
cs
add
cmp
repz
xor
adc
cld
mov
lock
push
test
out
push
push
aam
int3
mov
mov
lods
iret
repz
cmpsl
push
movsb
outsb
mov
sarl
mov
mov
iret
pop
test
sahf
out
jo
push
sahf
out
pop
push
push
dec
lahf
out
sahf
inc
xor
and
cld
sub
iret
repz
enter
imul
or
sub
out
sahf
out
xorb
lahf
out
sahf
push
xor
sbb
lock
repz
test
pop
sub
repz
repz
sub
push
pushf
jo
repz
xchg
jg
push
and
adc
sub
loopne
dec
aam
push
cltd
nop
sbb
add
and
mov
xchg
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
daa
or
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
loope
and
mov
stos
test
and
pop
stos
add
lcall
gs
movsl
mov
je
pop
shlb
jns
push
xor
add
fcmovb
mov
mov
aaa
push
aas
in
dec
arpl
inc
insb
fs
cmp
jne
sbb
mov
outsl
lods
mov
or
push
pavgb
lahf
push
pushf
pcmpgtw
xor
push
inc
xlat
add
dec
and
es
xor
push
dec
inc
dec
cmovns
outsl
inc
das
push
adc
sub
adc
cmp
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
repnz
cmpl
lret
sbb
jb
jge
aas
xchg
jge
arpl
cmp
jg
repnz
jno
in
fstl
mov
and
jg
stc
cmp
dec
imul
lret
add
inc
mov
mov
and
incb
sub
fwait
ss
sbb
pop
pushl
out
vmwrite
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
decl
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
call
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
mov
out
fcoml
mov
or
insb
mov
out
leave
push
cld
aas
ljmp
orb
popa
push
or
scas
int
mov
incl
mov
sahf
xchg
dec
add
scas
lods
dec
dec
in
mov
xor
pop
mov
pop
pop
repnz
adc
xor
and
es
mov
flds
sbb
lcall
pop
jne
mov
andl
add
adc
add
xchg
add
push
into
mov
enter
and
mov
dec
jns
inc
add
mov
out
xchg
pop
and
test
imul
outsb
addr16
fadds
jae
lret
xchg
push
mov
xlat
scas
cmpl
push
or
xchg
mov
arpl
bound
jne
sbb
pcmpeqw
lock
mov
jmp
test
xchg
fcmovnbe
sub
daa
je
pop
ret
jmp
insb
add
stos
test
lahf
je
or
add
jmp
xchg
lret
adc
and
addr16
cs
fcomi
inc
jb
add
xlat
adc
jg
loopne
sub
pop
xchg
dec
dec
dec
outsl
imul
add
xlat
insl
push
fimuls
push
pop
jno
or
cmpsl
mov
or
lock
jg
repz
jno
ret
fbstp
mov
insl
mov
ret
push
push
mov
sbb
push
mov
sub
daa
jnp
cmpsl
fldcw
ret
sbb
add
sub
jg
out
sti
or
or
jns
sbb
xlat
jg,pn
xor
jmp
cmpsl
ret
ret
inc
and
adc
jmp
mov
rcrl
push
sub
stos
adc
ja
filds
push
cmp
mov
pop
mov
adc
push
shrl
push
imul
sti
jo
es
es
sti
cmp
divl
cmp
nop
sbb
out
sbb
sub
jmp
inc
sub
insl
ret
dec
mov
rclb
dec
jp
xchg
loope
or
aaa
pop
jecxz
jno
imul
dec
ret
adc
pusha
inc
mov
pop
inc
addr16
daa
fildll
addr16
je
insl
int
inc
and
aas
cmp
insl
aaa
arpl
daa
pop
arpl
add
gs
jne
xor
cmpsl
jo
out
push
lret
xor
addb
cli
pop
fistps
pop
inc
cmp
jbe
mov
add
pop
xorb
imul
add
shrl
xchg
test
fmull
sub
test
daa
ss
push
loopew
scas
or
mov
mov
aas
mov
ret
ds
jecxz
mov
je
jb
push
or
push
mov
push
pop
call
inc
inc
mov
mov
rolb
adcl
or
xor
das
bound
out
jnp
adc
out
inc
push
ja
in
mov
pop
xchg
mov
mov
das
push
and
lods
pop
aaa
jecxz
stos
jp
jne
subl
sub
or
aas
sbb
lock
inc
pop
daa
jne
dec
xorl
das
dec
pop
outsl
loopne
dec
fwait
push
sbb
pop
mov
push
adc
jl
pop
inc
push
ret
js
adc
jno
idivl
adc
roll
mov
inc
outsb
out
or
jg
ret
fdivrl
jbe
sub
outsb
sub
add
mov
scas
out
pop
push
fiaddl
div
push
daa
bound
jae
push
pop
mov
addr16
sti
and
jno
mov
xor
or
orl
mov
out
arpl
pop
outsl
inc
cmp
jmp
lahf
jbe
testb
les
outsl
cmpsl
sub
mov
add
es
mov
insl
mov
out
inc
push
inc
mul
jno
scas
imul
mov
or
xchg
inc
inc
rclb
add
outsl
imul
mov
insl
or
inc
ss
mov
dec
loop
inc
xor
xchg
jmp
out
inc
pop
je
pop
mov
out
dec
por
aas
js
sub
pop
mov
scas
inc
bound
push
in
das
outsl
mov
lds
xchg
inc
arpl
pop
ret
mov
negl
aas
mull
pop
adc
inc
inc
negb
adc
mov
mov
inc
jl
adc
pop
aam
pop
jl
imul
push
xchg
cmp
loopne
fmulp
and
addr16
bound
das
mov
push
das
mov
mov
fs
in
mov
stos
jecxz
xchg
es
out
xor
push
adc
jl
scas
loopne
mov
jnp
sbb
jmp
es
ja
mov
add
ja
fnstsw
outsb
sbb
add
add
xor
jno
push
adc
cmp
loopne,pt
dec
outsl
lret
jl
jo
cmp
cmp
aaa
push
lock
lock
lock
fisubrs
fs
lock
lock
mov
imul
lea
jl
and
popa
repnz
lock
adc
pop
cmp
es
addr16
and
and
mov
push
sub
push
push
push
in
sub
fistl
fildl
push
mov
lods
jge
aaa
sbb
xor
or
dec
jp
or
inc
jns
jae
mov
mov
and
fadds
fisttps
inc
adc
pop
mov
sbb
add
jl
arpl
mov
sub
pop
inc
scas
stos
pop
xorl
pop
data16
pusha
daa
aaa
push
shrb
dec
inc
insb
inc
adcl
popl
je
aaa
or
mov
jnp
outsl
loop
lock
das
addr16
mov
bound
dec
adc
add
pusha
sbb
dec
jge
repz
gs
lock
mov
sub
add
out
sbb
in
ss
pop
inc
pop
cwtl
fldcw
inc
push
push
sub
es
push
mov
mov
push
mov
dec
ds
push
jp
divl
iret
out
push
cmp
out
jne
insl
mov
pop
push
push
cmpl
fnstcw
cs
rcrl
push
fst
jl
pop
out
inc
pop
mov
cs
js
aas
pop
sub
jl
test
pop
out
pop
push
mov
sahf
out
sbb
mov
leave
idivl
jnp
push
cld
or
xchg
inc
outsl
jg
out
pop
sbb
push
cmp
dec
sarl
or
dec
push
outsb
ja
rolb
mov
mov
ja
dec
sub
push
outsl
pop
mov
jg
jo
jns
adc
mov
daa
inc
push
sub
cmpsb
push
push
add
or
insb
scas
push
or
sbbl
sti
aas
pop
popa
cmp
rcl
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
push
cli
push
pop
out
popa
jne
or
and
dec
bound
ss
xor
icebp
loop
and
jae
sbb
aaa
mov
je
push
pop
push
pop
mov
mov
jne
cmp
int
xchg
cwtl
push
lahf
mov
iret
std
xor
dec
loopne
adc
adc
dec
fs
ja
aad
andb
lock
add
gs
je
cmp
mov
push
push
jo
jb
mov
jb
mov
and
jae
sbb
and
and
out
sti
arpl
arpl
xor
cmp
fs
xorl
mov
pop
clc
push
adcb
mov
fidivrl
adc
bound
data16
outsl
sub
jae
data16
aam
imul
and
push
movsl
in
push
pop
lea
pop
cwtl
or
pop
jne
sbb
daa
imul
mov
mov
test
lcall
str
cmp
xchg
add
ret
xorl
or
jmp
dec
inc
mov
mov
inc
push
cmp
cmpsl
add
cmpsb
add
pop
int
js,pn
sub
add
cmp
pop
jl
xor
outsb
pop
test
and
xchg
insb
lahf
xlat
or
inc
inc
sub
out
or
fildl
pop
pop
jmp
call
or
dec
sub
outsl
cmp
xor
aam
mov
mov
push
mov
lock
push
shll
jo
fldl
dec
xor
jg
and
and
dec
or
sub
pusha
shll
sbb
push
push
dec
lods
sbb
mov
mov
aas
pop
rcl
sbb
add
push
adc
jo
or
pop
mov
and
ja
sbb
push
mov
inc
mov
pcmpeqb
inc
push
inc
pop
dec
jg
inc
clc
or
dec
stos
sti
push
les
iret
sub
cmp
mov
gs
mov
fwait
or
xchg
adc
mov
pop
imul
add
lods
lahf
mov
jnp
outsb
pop
movl
push
outsl
mov
imul
push
stos
mov
sbb
jnp
loope
add
pop
sub
popa
pop
adc
and
mov
jbe
gs
lods
out
imul
push
jecxz
jp
jp
cs
pop
arpl
push
inc
aaa
or
push
bound
xor
jmp
icebp
xchg
jge
dec
jb
fs
je
data16
add
js
les
xor
dec
inc
lahf
loopne
mov
pusha
into
inc
add
adc
mov
fildll
inc
lret
iret
mov
push
ja
add
jbe
ljmp
cmpsb
sbb
arpl
inc
and
push
push
inc
add
adc
adc
sub
out
lcall
shlb
or
sbb
lods
iret
mov
subl
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
xor
sbb
jmp
aad
add
mov
or
xchg
or
addr16
mov
arpl
outsl
jo
pop
pop
add
ja
mov
pushf
push
cmc
out
out
or
nop
xlat
arpl
je
lahf
push
and
push
dec
shlb
jmp
xchg
popf
cmp
mov
cs
jb
or
push
xchg
testl
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
lods
inc
xchg
inc
shlb
push
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
push
repz
pop
add
lea
cmpl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
pop
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
rcll
ret
add
lret
outsl
inc
and
out
pop
rcr
out
test
jmp
addb
mov
inc
inc
repz
mov
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
jecxz
mov
mov
loopne
lahf
sti
pop
shll
or
cmp
jp
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
cmp
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
cmp
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
mov
jne
arpl
jne
sub
imul
ret
test
pop
add
push
scas
popf
outsb
push
xor
inc
sbb
inc
mov
icebp
push
xor
sub
aaa
or
nop
xor
das
pop
fldt
outsl
bound
mov
inc
dec
addr16
les
insl
add
sub
das
add
dec
xchg
sbb
push
rcll
or
cltd
lcall
dec
xor
lahf
push
movq
pop
pop
lock
lcall
loopne
inc
sahf
push
sbb
xor
dec
or
or
insl
clc
dec
xchg
ror
cmp
loop
popa
xchg
jmp
dec
pop
pusha
or
or
stos
inc
pop
push
sti
xor
cmp
adc
vmovsd
dec
mov
push
or
and
pushl
adc
cmp
dec
arpl
xchg
movsb
ret
cs
ja
sbbb
sbbl
xchg
arpl
lods
adc
movsb
or
pop
add
jmp
data16
cmp
fmull
mov
mov
xor
sub
xchg
fldt
divb
adc
inc
es
unpckhps
daa
xor
inc
das
jb
icebp
dec
cmp
scas
push
push
ret
aaa
add
pop
minps
aas
push
adcl
mov
lahf
cmp
push
jle
dec
mov
push
pop
imul
insl
repz
push
mov
mov
scas
iret
loope
push
pop
outsl
push
mull
andl
xchg
inc
pop
pop
test
iret
jp
mov
cs
pop
dec
add
les
insb
jnp
push
subb
fistpl
scas
pop
addb
fcoms
fistpll
cmp
out
add
sub
lods
movhps
inc
fldl
and
inc
xchg
sti
mov
out
mov
push
pop
leave
dec
or
lahf
xchg
or
movsl
adc
cmpsl
flds
testl
cld
pop
adc
pop
pop
mov
dec
sbb
inc
call
outsb
popa
mull
frstor
push
and
mov
cs
push
ss
outsb
bound
xlat
xor
xor
pop
pusha
pop
cmp
sbb
icebp
jbe
cmp
les
popa
xor
loop
mov
jo
xchg
add
jae
push
sub
push
pop
sub
aaa
loop
sahf
xchg
pop
add
das
add
pop
cmp
jne
outsl
sti
cwtl
in
fdivs
add
sti
scas
daa
cmp
pop
pop
xor
outsl
dec
and
adc
out
push
movsb
lret
push
sub
clc
scas
out
jns
fidivl
mov
test
or
xor
out
sbb
out
iret
or
bound
mov
mov
inc
jmp
inc
sbb
pop
das
and
mov
rorb
adcl
enter
and
pop
xlat
imul
jp
das
aaa
and
mov
mov
inc
jbe
bound
push
mov
repz
jnp
dec
lahf
addb
mov
add
loopne
data16
mov
push
and
fs
icebp
pop
jno
and
das
outsb
sbb
aad
daa
aaa
inc
cmp
sbb
push
insl
xor
add
sub
dec
cmp
test
inc
dec
add
sti
fisttpl
push
insl
arpl
notl
bound
or
pop
pop
mov
push
or
sbb
mov
sbb
jl
aas
mov
out
inc
jg
push
mov
mov
inc
jl
xchg
test
mov
in
loope
leave
push
xor
cmpsb
xchg
loopne
push
leave
stos
in
add
pop
or
fisubs
scas
xchg
adc
fnsave
push
jb
sbb
fmull
xchg
test
xchg
mov
xchg
push
leave
xor
fimull
in
and
inc
sub
cwtl
push
leave
stos
in
lock
mov
push
add
pusha
xchg
mov
aad
leave
push
xor
mov
push
sub
shrl
and
stos
in
cltd
js
pop
and
mov
push
sub
call
les
flds
and
xlat
and
out
pop
and
push
jg
lea
sub
mov
pop
rcll
mov
cmpsb
ret
and
xor
fwait
or
push
inc
fiaddl
mov
add
rcll
mov
inc
xlat
iret
cmpb
dec
daa
das
sub
xlat
inc
xor
shrl
out
bound
dec
pop
arpl
dec
dec
inc
and
mov
mov
push
sbb
pop
push
dec
sbb
pop
sbb
fldt
andb
push
dec
cmpsl
shll
mov
aas
mov
shll
mov
aam
push
inc
xlat
push
adc
stos
shrl
dec
notb
pusha
imul
movsb
inc
inc
adc
add
sbb
cmp
inc
insl
mov
aas
xchg
sub
fildll
inc
scas
jg
mov
inc
scas
cmpsl
lahf
scas
je
test
pop
inc
or
jo
add
adcl
add
cmp
jp
jno
or
mov
sbb
push
ret
ljmp
das
xor
shl
push
or
aaa
outsl
or
outsl
scas
fsubs
push
add
push
dec
sbb
ret
inc
rcrl
sbb
pop
fisubs
aas
jp
add
jne
adc
mov
aaa
out
sub
sub
and
pop
inc
mov
iret
inc
mov
fimuls
sbb
sbb
loop
sbb
call
adc
push
jg
jbe
dec
push
dec
pop
inc
xlat
mov
jg
add
addl
add
or
xlat
pop
add
pop
sub
popa
xor
pop
lea
pop
inc
inc
add
sti
push
pop
sub
jnp
pop
or
mov
add
push
sub
push
push
sbb
add
xchg
jb
and
out
pop
inc
popl
inc
and
lahf
cmpsb
loopew
mov
add
es
addr16
bound
xor
fstl
es
or
mov
cmp
sub
mov
push
and
dec
pop
movsb
lds
mov
loop
fbld
xchg
jae
add
pop
or
sub
jo
es
divl
es
imul
mov
faddp
dec
mov
push
jbe
xor
js
push
xor
daa
outsb
xor
add
lea
cmp
in
ja
adc
sahf
add
jae
mov
mov
dec
js
fs
pop
leave
or
fistpl
mov
stos
jmp
popa
push
push
sbb
in
or
add
iret
and
shll
push
push
repz
and
movsl
imull
scas
jae
out
cmp
sahf
out
sahf
pop
sbb
jns
out
push
andl
dec
ljmp
ss
dec
xchg
add
mov
add
or
adc
adc
jns
and
sub
xor
mov
insb
sbb
push
mov
ss
mov
popa
xchg
add
shlb
cltd
int
test
sub
shrb
xchg
pop
int
fldcw
push
adc
pop
add
sub
sbb
lret
fucomi
data16
add
xchg
and
call
incl
xor
inc
xor
or
push
push
push
jl
jnp
movb
push
ret
aaa
push
repnz
sarl
sahf
pop
scas
insb
ss
out
lret
fdivrl
gs
fs
xchg
loopne
std
or
pushf
adc
mov
and
lock
stos
sbb
ja
ds
mov
jae
inc
pop
mov
mov
incb
inc
jbe
mov
sub
mov
notl
mov
inc
xchg
pop
push
jo
jbe
iret
pop
inc
pop
lea
addr16
imul
out
outsl
popf
stc
add
rdmsr
testl
jne
xor
insb
fistl
es
das
or
cmpsb
int
idivl
xlat
adc
mov
cmp
out
push
push
sbb
aas
dec
lods
add
test
jns
and
or
mov
fiadds
cmpb
pop
adc
or
lahf
xchg
xchg
and
add
dec
and
push
les
lea
add
dec
fcomps
sbb
inc
mov
cmpsl
pop
pop
adc
in
push
mov
cmpsl
xor
pop
das
lods
xorl
lea
outsb
pop
sub
out
xor
je
push
sahf
push
cs
cmp
push
xor
push
out
mov
imul
add
push
sub
addl
jnp
subl
cmp
jns
xor
jae
fs
mov
sub
into
xor
pop
js
aad
jecxz
pop
pop
dec
shlb
pop
sub
mov
or
add
js
xor
cmp
or
es
pop
mov
dec
or
inc
push
adc
scas
fnstsw
ss
push
dec
mov
bound
sahf
ja
adc
xor
out
mov
xor
cs
lret
cs
jb
loop
push
ret
sarl
cmpsb
xchg
ja
retw
fsubrp
cmp
pop
mov
xor
push
dec
jmp
arpl
jnp
loop
sub
arpl
fs
mov
iret
cmp
adc
dec
daa
inc
xor
out
imul
push
mov
cs
loopne
fstl
bound
imul
pop
pop
into
fnstsw
mov
push
es
ss
outsb
pop
push
pandn
notl
daa
dec
jb
das
inc
pop
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outsl
jecxz
cmp
push
push
mov
pop
sahf
jle
push
insl
mov
fidivrl
push
inc
ja,pn
xor
push
jp,pt
ret
repz
push
fimull
mov
jg
dec
das
xor
mov
pop
outsl
pop
sarl
js
push
into
roll
outsl
enter
imul
sbb
pop
push
imul
xchg
inc
jg
loop
ffree
add
sub
jae
fadds
xchg
testl
dec
lahf
psraw
xor
mov
fsubs
jnp
mov
and
add
int
and
xor
push
inc
inc
fstpt
aas
pop
cmp
jae
xchg
and
pop
jmp
xor
xchg
and
lods
pop
xor
or
inc
sub
jnp
push
push
or
scas
mov
fwait
sub
arpl
push
cmp
test
lcall
test
popf
cmp
addl
arpl
push
add
outsl
mov
ret
xlat
stos
scas
or
or
dec
test
in
sti
mov
push
cmp
add
dec
daa
mov
sti
lahf
sub
movsb
out
inc
mov
mov
mov
jno
or
lahf
lods
int
mov
dec
outsb
mov
jno
and
ret
xlat
inc
dec
stos
bound
aaa
addr16
addr16
or
sub
jmp
rclb
push
dec
inc
or
inc
mov
fs
outsl
lods
and
or
and
popa
lea
pop
mov
das
sbb
sbb
mov
addr16
inc
test
div
repz
push
scas
js
mov
outsb
lods
cs
add
xchg
rcrb
inc
fs
inc
jge
scas
addr16
sbb
mov
arpl
mov
test
inc
inc
mov
repz
mov
pop
push
mov
jno
push
xor
dec
loopne
in
adc
iret
imul
cs
repz
insb
add
pusha
add
lcall
dec
fstpt
ja
pop
cmp
mov
fs
arpl
xor
and
std
add
xor
xor
push
xchg
sub
outsb
push
mov
pop
repz
les
ja
jae
pop
je
test
xor
aad
test
mov
add
mov
lds
xchg
or
adc
add
das
adc
add
push
sub
vcvtsd2si
adcl
mov
lahf
pushl
fildll
outsb
and
test
movl
xchg
inc
ret
orb
subl
sub
addr16
and
iret
push
xor
stos
pop
sti
and
cmp
mov
and
das
test
fwait
nop
mov
or
es
pop
popa
fldt
pusha
mov
aaa
nop
or
cltd
sub
popf
mov
xchg
ja
inc
mov
pop
shrb
push
mov
xchg
jnp
dec
ljmp
add
jns
imul
rcll
filds
mov
xor
mov
jae
ret
jae
daa
jbe
or
dec
data16
outsl
aas
push
mov
xor
mov
mov
aaa
ss
add
mov
mov
mov
add
sub
dec
mov
ds
fldt
pop
cmc
adc
jle
sub
pop
rolb
push
lgs
ja
dec
add
das
mov
ja
mov
inc
js
xor
sub
imul
sub
popa
fcmovnu
xlat
and
xchg
and
or
jbe
loope
rorb
jbe
xlat
push
cmpsb
insb
jmp
and
insb
call
es
pop
daa
inc
pop
xor
add
nopl
ljmp
shlb
mov
mov
push
push
jg
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
std
decl
push
mov
inc
push
insl
ss
adc
cli
mov
sub
std
mov
jae
sbb
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
das
ss
dec
fsubs
sbb
mov
xor
dec
xchg
jecxz
dec
push
lds
testb
add
pop
adc
movsb
or
and
mov
inc
mov
js
shll
xchg
jnp
inc
fiaddl
insl
add
lods
fs
push
add
bswap
pop
inc
jbe
aam
jne
and
xchg
push
mov
push
dec
xor
pop
leave
jae
pop
adc
add
xlat
cs
in
fwait
in
inc
aam
in
cmp
mov
dec
sahf
xchg
cmp
in
test
je
cmp
add
orb
data16
xor
stos
rcrb
lahf
cs
sbb
adc
inc
pop
dec
xchg
jmp
shrb
arpl
mov
arpl
pop
test
sbb
popf
rolb
and
roll
cmp
out
mov
cmp
sub
pop
xor
inc
adc
inc
push
inc
xor
mov
inc
addr16
idivl
cmpsb
jp
mov
jge
bound
or
popa
pop
stos
dec
add
aaa
cltd
add
dec
incl
test
imul
cmp
cwtl
adc
bound
imul
dec
lea
ficomps
mov
cmp
push
and
add
add
xor
aaa
fisubrl
rclb
cmp
sbb
dec
popa
push
pop
mov
shlb
scas
pop
push
rclb
notl
fwait
pop
mov
loopne
dec
push
push
scas
xlat
jp
xorb
inc
imul
imul
imul
xchg
outsb
dec
addr16
sbb
addl
das
mov
popa
inc
pop
js
xlat
aas
inc
dec
xchg
inc
call
xorl
adc
push
syscall
cmp
and
xlat
out
ss
stos
jae
jb
adc
jnp
mov
mov
adc
sub
lods
nop
mov
cmpsb
mov
sbb
fbstp
lods
stos
xor
fbstp
insb
stos
adc
dec
xor
cltd
dec
dec
push
push
mov
aaa
dec
inc
arpl
xor
cmpsb
push
add
pop
aad
cli
out
xchg
jle
lcall
scas
xor
pop
xchg
stos
xchg
pop
jae
mov
les
cmp
ja
fucomp
imul
or
xchg
in
jnp
push
pop
lcall
idivb
cltd
pop
or
lods
sysret
data16
xor
and
pop
adc
ds
mov
mov
fs
xor
inc
fcoml
inc
xchg
pop
add
jp
push
lret
xor
sysret
orb
es
flds
mov
pop
cmp
scas
or
add
fidivl
sub
jne
cmpsl
cmp
in
jnp
in
aam
dec
aaa
xchg
or
jp
push
aaa
insb
fistpll
xchg
push
fs
sub
cmp
mov
push
cmc
mov
pop
fst
insb
ds
push
mov
lret
or
xor
jns
iret
aam
inc
and
loop
sbb
test
push
cmp
fs
inc
rolb
es
xor
inc
sbb
lea
push
aaa
mov
divl
jnp
scas
push
mov
pop
push
fwait
jge
xchg
cmp
dec
push
pop
push
sub
repz
xchg
push
fxtract
push
jge
cmp
push
pop
jo
pop
nop
mov
and
imul
aaa
mov
mov
pop
xlat
or
cltd
cmpsl
jge
repz
icebp
sti
add
stos
jge
jnp
clc
call
sub
cmpsl
sbb
cmpsl
push
jge
ss
sbbl
out
fidivrl
es
mov
sub
out
out
inc
and
roll
push
xchg
inc
iret
repz
aad
dec
push
outsl
mov
lret
dec
mov
dec
scas
cmp
ja
push
and
in
add
out
cmp
mov
push
shll
test
data16
dec
sub
insl
lahf
repz
out
in
dec
sub
repz
je
enter
iret
repz
jns
mov
sahf
out
lcall
out
sar
sbb
push
add
dec
xor
push
jecxz
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
data16
xlat
add
mov
and
push
mov
movsl
test
loopne
mov
jg
jg
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
adc
sub
pop
xchg
shlb
inc
ss
cmp
lret
clc
mov
lock
sub
xlat
imul
std
andb
iret
cmp
or
push
outsb
jp
xor
push
js
xor
mov
pop
insl
cmovs
xor
sbb
and
dec
xchg
pop
mov
fcmovbe
lods
xchg
fildll
rcrb
stos
fwait
jmp
jo
add
rclb
dec
lock
push
push
pop
inc
outsl
xor
push
popa
je
inc
test
adc
fcomp
scas
push
xchg
xchg
cmp
fnstenv
shrb
out
pop
push
ficoml
insl
mov
fisubrs
pop
dec
aaa
xchg
imulb
aam
pusha
xor
sbb
cmpsl
addr16
inc
or
pusha
cmpsl
push
mov
lahf
pop
sub
inc
lods
not
pop
sub
jg
jae
loop
mov
mov
js
or
pop
dec
syscall
mov
lods
mov
jo
inc
bound
dec
sbb
xchg
pop
inc
jecxz
adc
mov
jecxz
xor
testl
popa
imul
fs
add
pop
pop
jb
add
pop
aaa
rclb
xor
xchg
sub
or
sub
adcl
sahf
add
pop
add
mov
mov
out
dec
push
and
movsb
push
cmp
jp
outsl
dec
icebp
jae
xor
daa
lcall
cmp
xor
pop
and
push
sub
jmp
jbe
dec
fs
jo
xor
pop
test
daa
dec
dec
fucomip
or
outsl
imul
jnp
gs
dec
cmp
add
rolb
dec
mov
sbb
insl
jg
jg
and
adc
xorb
xlat
addr16
pop
pop
shrl
shr
pop
pop
mov
pop
dec
rorl
add
jbe
sbb
add
bound
inc
sbb
stos
sarl
aaa
addb
inc
mov
scas
jmp
lea
push
add
popa
loopne
aam
das
das
sub
mov
scas
push
jae
push
incl
push
pop
jnp
fsts
cmpsb
pop
into
loopne
andb
fisttps
cmpsl
jae
sbb
dec
add
push
es
cmp
mov
pop
paddq
inc
sti
push
ja
push
cmpb
ss
das
pop
push
out
xor
aas
mov
mov
or
or
push
sub
mov
roll
mov
mov
cs
popw
outsl
aaa
aaa
imul
mov
pop
inc
xchg
das
add
jg
shlb
popa
imul
insb
adc
test
sbb
add
push
pop
dec
mov
mov
pop
add
push
xchg
fiadds
push
popl
loopne
inc
jle
jnp
fmuls
and
jecxz
fidivrs
out
inc
into
inc
add
inc
push
mov
bound
lahf
imul
negl
push
cmp
add
aas
rol
loopne
push
xrelease
mov
fisubrl
adc
aad
iret
add
loopne
xor
xor
fcmovbe
adc
addr16
mov
pusha
adc
outsl
xlat
pop
push
test
or
pop
pop
push
pushf
add
outsl
mov
ja
add
mov
sub
movhps
inc
inc
push
inc
daa
sbb
cs
sub
push
sbb
out
inc
cmp
fidivl
adc
pop
inc
add
dec
dec
inc
jle
jbe
mov
bound
sub
mov
mov
pop
xor
pop
testl
and
lahf
mov
xor
lock
jg
add
shlb
xlat
cmp
inc
mov
ret
testl
xor
pop
push
call
es
jns
je
or
pop
and
outsl
mov
pop
das
adc
and
add
adc
jbe
es
insl
jo
je
pop
pop
ja
outsl
movsb
addr16
jo
jae
daa
pop
jno
outsl
arpl
ud2
push
bound
xchg
mov
cmp
jns
je
jne
or
adc
je
test
ja
out
pop
insb
xor
mov
jae
pop
inc
adc
decb
hlt
ss
bound
mov
sub
popf
nop
shlb
imul
ja
dec
outsb
push
or
xchg
sub
jbe
inc
or
lods
inc
mov
shrb
push
push
pop
sbb
dec
adc
sbb
inc
outsl
ret
push
push
loop
bound
cmp
cmpsb
shll
nop
ret
sub
test
test
or
dec
push
push
xchg
push
mov
jmp
dec
adc
mov
cmpsl
pop
pop
push
stos
add
insl
jp
push
push
addr16
adc
cmp
push
aam
jns
jb
add
scas
iret
lea
lock
push
ret
add
movsl
mov
xlat
mov
out
inc
outsl
outsb
xchg
adc
fisttpl
js
aaa
inc
insb
jo
xor
daa
out
les
pop
mov
mov
out
jb
out
js
adc
imul
mov
pop
incl
dec
inc
dec
push
mov
xchg
addr16
add
add
ds
and
inc
sub
add
ret
jbe
add
add
add
mov
addr16
jg
xor
inc
xchg
inc
aaa
pushl
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
cmp
call
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
ljmp
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
ljmp
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
ljmp
mov
call
cltd
test
push
push
shll
lcall
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
js
js
test
add
mov
dec
jmp
push
jmp
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
dec
cmp
lcall
sbb
loopne
and
dec
ret
push
and
pop
mov
mov
xchg
mov
and
ds
das
sbb
add
mov
int3
jle
repz
daa
daa
daa
push
and
mov
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
cmp
mov
mov
push
and
xorb
lods
inc
test
gs
shlb
jge
iret
sub
and
ds
push
popw
push
out
pusha
jo
sbb
push
fdivrs
ss
add
mov
jg
pop
cmp
sub
push
lods
mov
mov
sub
inc
outsl
divl
jbe
pop
mov
mov
xor
cmp
lahf
push
outsb
inc
fnstcw
push
cs
sar
movsl
andl
or
fisubl
xchg
lods
mov
and
rcrl
and
repz
mov
pop
outsl
cmp
and
or
mov
pop
lahf
dec
pop
xchg
and
push
incl
out
or
push
lds
ror
mov
xor
xor
ljmp
fiadds
jb
push
rcr
sbb
out
push
imul
adc
popa
test
and
and
arpl
insb
mov
cmp
je
imul
cmp
jns
aam
xchg
and
push
mov
mov
popa
stos
and
push
mov
inc
adc
dec
sbb
sub
sub
push
lock
sarb
ret
dec
inc
push
sti
int3
int3
mov
adc
jo
movsb
push
xchg
add
insl
outsl
fs
gs
ret
out
jo
jns
iret
inc
mov
push
loopne
pop
pop
outsl
insl
jne
dec
les
mov
shrb
add
or
lds
cmp
and
jecxz
je
bound
aaa
mov
or
inc
insb
dec
jbe
xchg
fiadds
inc
popa
imul
inc
sahf
aaa
loop
outsb
xor
pop
fcomp
jnp
add
gs
mov
jnp
dec
adc
xchg
dec
inc
xadd
cld
das
sbb
inc
cmovo
divb
cmpb
aas
nop
jo
cmovl
pop
pop
pavgb
fiadds
mov
xor
ljmp
sub
dec
and
cmpsl
add
loopne
imul
or
rcrb
lea
cmp
ds
orl
sbb
dec
and
daa
push
xor
insl
out
push
inc
push
pop
das
inc
add
outsl
pop
iret
js
ja
mov
lahf
add
cmp
sarb
les
loopne
inc
daa
outsl
push
int
inc
xchg
mov
in
jnp
faddl
lret
ja
fidivrs
mov
inc
dec
fsubl
pop
pop
jnp
fisttps
inc
test
add
pop
add
sahf
add
pop
jle
pop
mov
dec
mov
scas
in
xor
clc
cltd
loop
jbe
or
outsl
adc
outsl
add
dec
enter
inc
push
dec
addr16
ficoms
add
negl
sub
fsubl
repz
enter
in
aad
std
push
adc
inc
inc
add
pop
dec
adc
and
xor
pop
pop
and
xchg
dec
outsl
xchg
in
nop
out
pusha
jo
cs
mov
sahf
or
mov
nop
movsb
lods
rcr
mov
xchg
clc
addr16
aas
add
clc
add
inc
int3
mov
aaa
and
pop
push
movsb
das
inc
cltd
fsubrs
xor
pop
mov
mov
aas
dec
mov
or
addr16
push
xchg
cmp
repnz
lock
lahf
mov
aam
mov
int
out
dec
dec
xor
inc
push
nop
enter
mov
dec
aas
ja
cs
lahf
aam
cmp
or
int
pop
insb
and
inc
loopne
lods
pop
in
out
pop
and
aam
mov
mov
lock
cmp
inc
daa
lock
mov
mull
inc
enter
mov
daa
testl
scas
enter
mov
nop
les
out
ds
jb
aaa
je
adc
sbb
and
sub
push
fisubl
mov
and
iret
push
imul
mov
daa
add
mov
mov
aam
cld
enter
add
aam
fiadds
rolb
fmuls
in
push
push
xchg
cld
insb
sar
push
sbbl
testb
jo
pop
cmp
jns
divl
cwtl
cld
rclb
or
or
push
dec
in
dec
add
mov
rorb
test
pop
insb
rcl
cld
push
ja
add
pushf
mov
mov
enter
in
fs
ds
cld
or
xor
mov
cmp
and
jnp
dec
push
pop
lahf
pusha
nop
out
pop
ja
mov
lods
mov
or
mov
mov
fsub
sub
pop
sub
push
push
shl
fdivl
fistpll
out
mov
adcb
mov
cmpsl
push
cmpsl
sbbb
in
mov
cmpsl
cmp
aaa
and
cmp
push
enter
push
dec
fisubs
jg
mov
cs
mov
or
and
fbstp
in
and
idivb
push
xor
cmpsl
in
out
mov
jg
and
nop
out
nop
js
pushf
fmuls
cmp
push
cmpsl
js
out
sahf
dec
int3
fdiv
jl
enter
dec
int3
mov
and
xor
inc
mov
testb
loop
js
jne
iret
mov
mov
scas
jbe
repnz
xchg
dec
add
inc
enter
inc
cs
enter
lahf
or
adc
and
fiaddl
cltd
fdivs
lahf
clc
ja
inc
lcall
cmp
nop
test
fs
sahf
or
in
mov
aaa
push
jl
js
fadd
adc
push
loope
aad
fmuls
push
movl
cmpsb
cmpsb
iret
push
cmpsl
test
jb
loopne
enter
mov
jns
pop
lods
adc
add
cs
and
addr16
mov
jg
cmpsb
push
cmpsb
cmpsb
iret
test
addr16
cmp
jb
cmpsl
push
insb
test
in
xchg
addr16
iret
test
lahf
test
clc
dec
ss
mov
out
ficompl
pop
in
andb
clc
cmpsl
loopne
lahf
or
dec
ficompl
aas
mov
jg
sbb
mov
test
mov
fidivrl
inc
push
fsubs
mov
add
ds
and
insb
dec
pop
cmpsl
hlt
mov
dec
fstpt
pop
sahf
push
dec
dec
aas
ja
and
insb
lahf
rcrb
mov
repz
out
call
inc
jl
fdivl
out
dec
lods
sub
shrb
jl
jbe
inc
jbe
dec
mov
push
pushf
push
mov
pop
mov
or
push
inc
jg
pop
repnz
inc
js
lock
cs
loopne
inc
loopne
lock
push
push
movsb
push
enter
jg
outsb
in
stc
dec
int3
test
addr16
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
aam
clc
fstpl
xchg
push
lock
aam
enter
shrl
fidivrs
fisubrs
aam
dec
inc
ja
adc
sbb
sar
ficoms
xchg
mov
call
mov
jo
int3
inc
jo
or
lahf
jo
inc
ds
jb
cwtl
sbb
rcl
outsl
sub
inc
fists
mov
jg
int3
rol
aad
rcr
lahf
int3
inc
add
add
inc
shlb
and
in
iret
pop
pop
add
ss
xchg
xor
loopne
lahf
imul
fwait
nop
iret
add
pusha
fs
push
add
fadds
nop
out
fidivrl
nop
mov
enter
mov
mov
sbb
clc
push
sub
iret
mov
pop
jg
in
pop
daa
add
insb
lahf
in
inc
nop
out
mov
inc
adc
lods
aaa
mov
mov
push
mov
cmpsl
inc
dec
in
inc
lock
inc
adc
lahf
dec
int3
push
addl
pop
repnz
pusha
jo
and
enter
pop
repnz
enter
mov
test
mov
and
jecxz
jecxz
iret
test
in
cs
nop
jecxz
pusha
in
mov
inc
ja
adc
sub
mov
fmuls
nop
inc
dec
lods
mov
in
inc
ds
jb
loopne
xor
fsubl
mov
inc
xchg
inc
sti
push
mov
outsl
aas
js
nop
push
repnz
cwtl
add
repnz
in
cltd
mov
xorl
sbb
iret
fdivr
or
int3
shlb
push
xchg
inc
outsl
nop
iret
lds
xchg
clc
inc
in
xchg
out
push
pusha
enter
lods
sub
sbb
mov
dec
adc
daa
in
loopne
jmp
lock
iret
test
lock
xchg
aaa
and
mov
push
push
mov
daa
aas
daa
data16
cltd
or
adc
daa
pushf
pop
and
out
fcoml
mov
scas
insb
xlat
mov
mov
adc
out
or
jmp
push
addb
aas
call
addb
ja
pop
adc
pushf
ja
sbb
mov
outsl
mov
add
cmp
and
mov
in
xlat
data16
sub
fistpl
call
daa
xchg
push
jae
addr16
push
ret
aas
pop
out
pop
mov
sbb
jbe
daa
sbb
test
dec
scas
in
scas
inc
inc
cmp
in
xor
in
scas
in
sub
ret
dec
scas
add
cmp
pop
mov
jl
jae
push
dec
push
xor
icebp
mov
out
cmp
clc
add
es
push
and
repz
out
mov
cmp
clc
out
push
cmp
mov
ds
push
push
stc
clc
in
movsb
mov
cmp
repz
pop
cmp
add
stos
push
int
scas
fisubs
xchg
ljmp
addb
pushf
in
dec
test
cld
xchg
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivrs
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
add
and
mov
and
xchg
dec
and
jbe
inc
dec
outsl
xchg
sti
or
leave
inc
sbb
push
loopne
cs
fsubr
fmuls
movsl
dec
outsl
add
and
fs
pushf
inc
jge
adc
in
lcall
dec
in
fmuls
movsl
fildll
filds
mov
test
clc
cmp
adc
xchg
pop
popa
and
add
pop
sub
ljmp
pop
leave
and
fnstsw
mov
adc
xchg
test
decl
repnz
movsb
out
scas
add
outsl
inc
mov
popa
out
xor
jb
pop
xor
dec
repnz
enter
outsl
leave
mov
or
fildll
test
pop
dec
loop
sub
lcall
aaa
js
cwtl
jns
sub
cmp
sub
out
movl
iret
sbb
lock
fs
dec
jg
xor
ja
or
sub
mov
leave
push
lods
add
in
pushf
pop
loopne
in
lock
or
outsl
add
and
fisubrs
add
and
mov
inc
xchg
jmp
mov
mov
jbe
cwtl
pop
scas
or
pop
mov
out
dec
ficoms
or
daa
add
and
test
xlat
cmpsl
in
xchg
stc
out
mov
xchg
cmp
add
dec
test
call
xchg
popa
add
pop
adc
shlb
call
xor
adc
lcall
int
imul
push
cwtl
aam
jg
or
repz
loopne
jnp
adc
xor
aaa
inc
repz
sub
xchg
lock
jecxz
add
js
aam
add
xchg
fiadds
push
dec
testl
in
lock
outsl
cmp
jbe
push
push
outsl
jg
xchg
mov
hlt
mov
testl
sarl
xchg
scas
push
movsb
clc
push
mov
hlt
fnstsw
test
cmp
xchg
clc
xlat
push
xchg
lcall
push
mov
dec
hlt
mov
loope
or
or
ficoml
and
or
decl
idivb
add
mov
cmpsb
mov
cmp
dec
inc
testl
notb
in
adc
in
cmc
mov
testl
and
ss
shrb
lcall
jl
loopne
mov
divb
rorl
or
and
addr16
rcll
aaa
sbb
outsl
icebp
dec
xchg
add
lds
cmp
cmpsl
pusha
divl
scas
dec
and
movsb
xchg
lods
xchg
mov
call
or
jg
hlt
ja
sbb
iret
and
jg
pushf
pop
sbb
addr16
add
repnz
enter
add
aaa
pusha
and
dec
dec
sub
clc
in
sti
pop
push
faddl
mov
stos
aad
lods
aaa
pop
cmp
xchg
sub
pop
cmp
xor
sbb
ss
push
dec
leave
adc
add
or
and
mov
add
int3
sbb
xlat
add
iret
daa
mov
out
pop
cli
daa
or
mov
jnp
ret
fwait
aaa
insb
push
in
cwtl
push
xchg
add
out
sahf
out
sti
int3
js
or
js
in
outsl
mov
or
aas
add
decb
cli
cmpsl
xor
and
pop
add
xchg
scas
das
adc
push
inc
sti
das
outsl
mov
pop
or
fists
mov
add
popl
and
add
cld
jne,pn
enter
pop
rorl
scas
add
insb
outsl
out
pop
leave
adc
or
lahf
addr16
orl
jbe
mov
cli
out
mov
in
scas
in
add
add
ret
out
std
addr16
push
jl
aas
addr16
daa
lods
int
inc
sahf
mov
movsb
in
sahf
aam
sub
in
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
cmpsb
pop
lock
and
add
dec
repz
int
jb
jae
xchg
lock
sahf
out
xchg
into
iret
repz
cld
and
sahf
cmpsl
stc
cmp
push
mov
imul
push
jns
iret
repz
sarl
mov
cmpsl
stc
cmp
push
xchg
loope
lea
int
fnsave
mov
push
call
jns
out
jns
nop
popa
jl
repz
repz
mov
ljmp
repz
test
sti
ds
subl
notl
xchg
out
push
push
cmpsl
stc
cmp
insl
lcall
jns
push
stos
shll
mov
xlat
adc
cmp
sarl
cs
jbe
jns
iret
repz
out
adc
push
xchg
repz
out
jmp
repz
out
fwait
inc
or
pushf
out
cmp
push
popf
iret
repz
insb
or
int
jns
lahf
cmpl
jbe
rolb
out
insl
test
push
imul
sbb
repz
lds
movsl
jne
enter
imul
lods
jmp
add
aas
sahf
shl
sahf
cmpsl
stc
fs
lret
out
push
shll
mov
cmp
out
ss
imul
cmpl
add
mov
mov
mov
sahf
out
cmp
aad
mov
jg
int
jns
int
mov
ret
jns
out
jmp
mov
insl
xlat
stc
cmp
out
dec
mov
enter
xor
cmpsl
ss
mov
ds
jle
es
ds
mov
hlt
ds
ds
mov
push
fstl
mov
js
out
mov
repz
repnz
cmp
out
push
sarl
jns
out
ret
mov
ret
cmpsl
stc
cmp
pop
fwait
ljmp
fldl
push
icebp
push
mov
push
sbb
repz
dec
leave
cmp
leave
repz
lret
lret
mov
mov
push
nop
ds
mov
out
int
into
mov
add
imul
sar
cmp
shrl
shl
sar
cmp
cmpsl
jno
rclb
xor
cmpsl
cmpsb
leave
and
pusha
mov
jns
iret
in
sub
je
hlt
out
ds
test
xlat
inc
jo
lahf
ja
fwait
add
xchg
fsts
fldcw
ficoml
stc
cmp
repz
fldt
jecxz
fsubrl
lahf
cmpsl
mov
fsubrp
sti
cmp
repz
insl
mov
sub
xchg
mov
lock
push
clc
pop
jmp
fldcw
push
xchg
in
and
rep
ss
dec
mov
addr16
out
sahf
data16
cmp
cld
es
lods
mov
add
push
data16
mov
add
lahf
int3
nopl
pop
ficoml
jle
inc
aas
aam
lcall
jnp
mov
xor
or
scas
sbb
sbb
push
mov
jl
xchg
ja
pop
fs
aaa
fucomp
inc
mov
leave
adc
sub
insl
and
adc
loope
dec
enter
xchg
aas
mov
in
pop
cmpsb
fcomps
test
daa
fimull
popf
mov
das
bound
movsb
or
les
and
in
test
inc
mov
inc
pop
mov
call
lcall
pushf
jnp,pn
add
je
rorl
es
iret
cmove
pop
sbb
das
stos
sbb
mov
enter
inc
sbb
ss
cmp
aas
sti
xor
xor
mov
cmp
notb
aas
in
imull
inc
cmc
jne
std
push
inc
pop
insl
jo
daa
inc
push
cmp
or
add
adc
daa
in
add
mov
or
push
ffreep
cmp
xor
jbe
xor
sbb
cwtl
ja
cmp
or
and
jb
or
and
mov
aas
and
add
pop
cltd
jnp
and
sub
xor
jl
xchg
xorb
jo
les
fwait
cmp
pop
lock
add
mov
bound
xlat
pop
inc
leave
or
in
pop
inc
rolb
cmp
dec
out
inc
scas
hlt
push
mov
add
sub
inc
pop
xor
in
je
and
daa
inc
scas
es
out
push
dec
cmp
ja
in
fistl
data16
ja
push
mov
push
or
addr16
loopne
aaa
inc
jnp
leave
mov
mov
leave
jmp
mov
lahf
test
jne
inc
push
daa
dec
push
push
xchg
fistpll
and
fwait
and
sub
xchg
mov
and
das
jmp
jmp
push
aas
pop
leave
mov
push
mov
xor
loop
in
push
push
mov
and
cmp
cmovs
xchg
xchg
inc
scas
cmp
out
pop
xchg
scas
dec
daa
insb
mov
out
mov
leave
xchg
mov
sbb
dec
xchg
xchg
push
out
push
shlb
das
inc
testl
inc
adc
call
push
andl
mov
push
mov
mov
sbb
mov
and
pop
and
rolb
dec
push
leave
xchg
mov
adc
sbb
mov
out
add
xchg
mov
push
lahf
cmp
leave
and
iret
jmp
int
pop
fmuls
add
outsb
sub
pop
sti
cmpsl
push
dec
hlt
and
and
and
dec
or
addr16
jbe
sub
push
xlat
push
js
leave
add
add
leave
leave
cmpsb
scas
mov
daa
aam
add
dec
xlat
data16
cmp
cmpsb
fstpl
sbb
pop
add
in
shrl
and
lar
es
push
jo
mov
adc
mov
daa
xchg
mov
add
mov
enter
ror
xchg
rorl
mov
cld
cmpsl
mov
repnz
or
adc
sbb
pop
leave
and
and
pop
inc
outsb
mov
ja
cmovg
addr16
mov
ja
pop
pop
lods
fs
add
out
in
in
mov
jmp
repz
push
in
out
push
cmpsl
stc
cmp
or
or
jns
adc
sbb
dec
adc
push
or
movsb
jg
daa
gs
jo
loope
jb
js
mov
repnz
pushf
adc
out
sahf
movl
mov
adc
loope
push
inc
push
nopl
jo
out
jb
mov
xchg
enter
fmul
call
add
inc
call
loopne
frstor
and
sbb
lahf
lods
mov
in
xchg
pop
int
fmuls
in
repnz
std
testl
js
es
mov
nop
cmp
dec
pop
pop
nop
pop
je
push
out
pop
das
push
and
sbb
push
xor
jno
daa
pop
xchg
xchg
or
nop
lahf
cmp
imul
fisttpll
add
add
scas
sbb
lret
mov
xchg
loope
fisttpll
adc
add
sub
pop
pop
adc
or
or
leave
shlb
cmp
pop
inc
push
pop
xor
push
addr16
addr16
pushf
pop
xchg
pop
mov
in
mov
dec
loopne
sbb
add
sbb
repnz
je
inc
je
adc
xchg
lods
sbb
push
jb
dec
outsl
dec
pusha
xchg
sbb
pop
clc
shl
xchg
xchg
add
sbb
out
mov
ret
nop
aad
jne
lret
add
leave
or
xchg
sbb
loopne
daa
push
xchg
push
push
scas
fnsave
daa
es
cs
jg
xchg
pop
in
xchg
pushf
sbb
arpl
in
jnp
push
sbb
loopne
adc
and
vmwrite
push
cmp
add
push
pushf
out
push
daa
and
ficoms
inc
push
adc
sbb
cmp
push
out
add
or
add
mov
mov
jb
nop
push
adc
scas
xor
in
sub
pop
test
xchg
in
mov
xchg
push
sbb
push
les
mov
pop
ja
add
push
mov
xchg
in
mov
std
out
dec
push
pushf
in
xchg
cmp
ja
xchg
add
jo
iret
mov
data16
push
punpcklwd
pushf
and
add
or
stc
mov
leave
xchg
pushf
push
pop
and
outsb
roll
mov
mov
insb
push
repnz
lods
nop
cwtl
xchg
repz
repnz
iret
repz
and
leave
repz
pop
push
pop
xchg
enter
insl
mov
jmp
addr16
iret
add
mov
jl
xchg
pushf
iret
and
cmp
add
xchg
fsub
cs
pop
push
xchg
iret
push
pop
insl
fstpl
ja
sbbl
mov
mov
mov
mov
addr16
in
mov
mov
add
xchg
mov
and
mov
cwtl
jmp
mov
pop
mov
pop
leave
mov
add
mov
insl
xchg
cltd
rclb
loop
pop
leave
cld
jns
and
jns
mov
and
inc
jb
loope
andb
cmpsl
pfmul
pop
leave
xor
outsl
lcall
mov
mov
rcr
sbb
jns
cs
hlt
pusha
push
ds
cs
mov
add
sbb
jl
inc
pop
inc
sbb
mov
and
in
es
pop
inc
xchg
cmp
daa
inc
and
jo
jmp
jns
xchg
es
repnz
daa
add
mov
xlat
push
cmp
add
dec
dec
sbb
in
hlt
sub
out
sahf
pop
popf
movlps
rclb
cmp
lahf
or
mov
pop
inc
jg
adc
xor
add
jns
clc
xlat
pop
cmp
add
adcb
jg
aas
fs
popf
popf
popf
fs
popf
popf
popf
pop
pop
jb
paddw
roll
or
test
and
mov
pop
pop
add
outsl
aaa
jb
mov
pop
pusha
sub
fisttpll
push
out
jo
mov
stos
mov
mov
mov
cmpsl
test
xchg
insl
lcall
imul
ja
insb
ja
ss
lahf
decl
repnz
pop
das
gs
add
jbe
or
dec
es
lahf
das
pushf
scas
mov
xchg
xchg
or
add
push
jmp
inc
push
addr16
fwait
push
outsb
mov
push
push
xchg
andb
in
mov
mov
testl
leave
jae
fsubs
mov
dec
adc
push
scas
cmp
in
inc
sub
mov
xchg
push
xor
push
pop
sahf
ja
ja
sahf
pushf
pop
repz
mov
mov
das
jmp
sub
push
push
dec
popa
insb
daa
fisttpll
push
pusha
ja
into
inc
jmp
sub
jae
pop
ja
jg
sub
fcompl
test
cmpsl
push
jb
cmpl
mov
pop
push
mov
testb
pop
push
add
push
loopne
mov
lahf
sahf
cmpsl
cmp
push
add
in
dec
insl
add
xor
dec
sahf
push
mov
fildl
into
scas
idivb
daa
iret
jae
rcr
push
out
imul
movsb
inc
adc
movsb
adc
cs
lods
mov
xlat
mov
jp
filds
mov
iret
lods
out
adc
out
mov
or
jo
addr16
xchg
in
or
cs
daa
sub
mov
push
movsl
pop
push
nop
or
adc
imul
rorb
imul
fldl
xchg
addb
jg
push
xor
push
cmpsb
lcall
cmpsb
xor
add
xchg
inc
xchg
dec
xchg
push
pop
xor
xchg
enter
xor
xor
xor
sti
inc
fmuls
cmpsl
xchg
inc
xor
xchg
mov
and
xor
inc
or
mov
addb
cmpsl
jbe
outsl
sub
in
loope
sbb
pop
cmp
dec
jno
or
das
cmpsl
push
ljmp
fisttps
fstpl
fcmovne
repz
add
fisttps
outsb
iret
or
in
es
inc
dec
adc
or
jecxz
pop
push
cmp
rep
pop
cmp
add
add
sahf
push
test
pop
test
push
icebp
jbe
aaa
jg
xchg
shll
ret
sbb
inc
pushf
dec
out
pushl
test
sbb
push
cmp
ljmp
add
aaa
test
mov
adc
js
mov
xchg
xchg
orl
sub
mov
leave
xchg
xchg
or
in
popf
in
xchg
testl
mov
stos
push
cmc
mov
stos
pushl
xchg
mov
xor
insl
ja
iret
fnstsw
mov
pmulhw
mov
test
stos
inc
cmp
stos
sub
jb
add
popa
sub
pop
mov
jae
mov
iret
cmpsl
imul
mov
mov
aaa
cmp
ljmp
cli
stos
pop
add
pushf
cmp
adc
sbb
or
or
inc
repz
repz
or
iret
leave
pop
bound
push
fwait
cmp
repz
orb
repnz
adc
lcall
sbb
mov
jbe
cmc
lods
aaa
add
jmp
rcr
ljmp
notb
cmpsl
imul
shll
nop
xchg
mov
jmp
dec
dec
xchg
aam
cmp
scas
inc
rdtsc
cmp
fwait
cmp
add
mov
mov
iret
lods
mov
mov
fstl
jg
push
ud1
mov
dec
or
ror
jae
jae
xchg
mov
das
jmp
add
jecxz
push
fistpll
inc
aas
loopne
dec
popl
xchg
pop
in
int3
pop
sub
dec
mov
push
cmp
or
push
leave
cmp
popf
pusha
adc
dec
adc
cmp
into
xorb
pop
cpuid
les
jns
enter
cmp
cmp
cmp
mov
or
aaa
scas
inc
push
sbbb
add
leave
leave
xor
and
iret
push
dec
cmp
or
outsl
jns
outsb
cmpxchg
pop
or
sahf
cmp
mov
clc
pop
rorb
fdivrl
add
iret
cli
stc
jbe
add
jns
out
movups
js
pop
and
daa
inc
cmp
inc
mov
cs
aas
push
mov
btr
fwait
out
jge
add
cltd
cmp
mov
push
mov
mov
out
mov
push
mov
lahf
or
cmp
mov
out
pop
push
pop
push
add
sahf
xorl
jns
out
insb
push
jl
sahf
out
sahf
mov
lcall
jns
or
shll
dec
cmp
sub
add
push
cmp
add
cld
cmp
add
or
xor
dec
leave
repnz
ds
ds
lea
leave
jl
mov
mov
pop
jb
jp
cmp
jne
pop
sub
in
mov
mov
int
in
in
lds
mov
mov
movsl
mov
xor
xchg
in
loope
mov
clc
mov
in
xchg
or
and
inc
fwait
mov
packuswb
in
daa
outsl
xchg
add
fildl
mov
lcall
inc
push
mov
pop
push
jmp
push
outsl
push
mov
push
mov
fidivl
cmpsl
push
mov
pushf
cmpsl
cmp
addr16
jae
dec
push
mov
xchg
fnstsw
das
aaa
repnz
fisttps
mov
lods
push
dec
sahf
or
push
mov
jecxz
xchg
in
add
add
sbb
fbstp
rolb
inc
and
xlat
sbb
rorl
in
or
scas
sub
and
cmp
mov
fs
dec
loop
pop
ja
add
bound
mov
push
repnz
cwtl
inc
xchg
out
cmp
lods
cmp
scas
pop
mov
mov
bswap
iret
or
fadds
pop
jb
repnz
lahf
repnz
dec
adc
daa
mov
call
aas
inc
mov
push
cmpsl
jl
jb
mov
ja
dec
cmp
mov
cmp
sti
xor
scas
mov
add
cltd
sub
mov
add
sub
and
mov
mov
xor
jb
shll
mov
mov
mov
jecxz
mov
cmp
pop
lock
mov
aam
mov
xchg
pop
and
js
movsb
mov
pop
and
add
repnz
test
das
xchg
out
rorb
daa
daa
std
add
sahf
dec
mov
xchg
mov
jg
push
das
jg
fimull
xchg
cmpsl
fcoml
cmp
leave
mov
cmpsl
mov
in
icebp
cld
pop
mov
daa
xchg
inc
cmp
mov
pop
push
xchg
in
add
js
xchg
add
or
jmp
or
popf
cmp
mov
or
jmp
das
femms
idiv
andb
invlpg
xchg
ret
inc
xchg
mov
das
repz
pushf
cmp
pop
addr16
xchg
fmulp
outsl
ja
movq
addr16
dec
rcl
mov
movnti
lret
in
xchg
xchg
pop
int
mov
bsf
push
add
add
jne
jns
dec
lahf
push
divps
outsb
repnz
pop
push
cmp
orl
jl
and
and
cltd
mov
pop
pop
xor
fsubrl
out
and
daa
cli
xchg
xchg
out
icebp
sub
int
and
pusha
mov
orl
xchg
popf
cmp
popw
imul
pop
mov
mov
dec
add
mov
outsl
push
shr
inc
push
mov
dec
punpcklbw
add
fwait
push
dec
jo
or
fimull
xchg
lock
pop
dec
push
jbe
ja
movb
pop
pop
outsb
aas
out
fisttpll
aas
push
iret
fisubs
jns
add
cmp
adc
add
and
dec
ret
dec
pop
mov
pushf
fsubl
lahf
imul
push
cmp
stos
iret
mov
pushf
cmp
lods
mov
rcrb
mov
pop
leave
jae
mov
fmulp
adc
and
in
je
or
xchg
push
pop
out
outsb
daa
pusha
xchg
aaa
xchg
mov
mov
push
add
cmp
out
outsb
mov
dec
jmp
jns
lret
adc
sbb
and
add
cmp
inc
mov
mov
mov
sub
fidivs
sar
dec
dec
cs
scas
leave
inc
repnz
mov
fcmovnu
psrad
xchg
in
xchg
ret
ret
mov
inc
xchg
pop
fwait
sbb
ret
xchg
out
jb
jnp
add
fwait
add
sahf
fbstp
shl
xchg
scas
add
rcr
out
sbb
aas
push
ljmp
add
clts
mov
mov
inc
xlat
fldt
pop
inc
ret
mov
cmp
movsb
cmp
lods
lods
ja
jno
mov
jbe
xchg
lahf
fcmovne
leave
rcr
loop
push
sub
or
dec
and
les
mov
adc
cmp
jns
les
pop
adcb
xchg
fstpt
orb
cmp
add
dec
popa
inc
cmp
in
and
mov
sti
xlat
in
insl
in
lds
and
xlat
sub
push
lds
popf
mov
scas
mov
push
pop
xchg
jg
pop
jo
cmp
jns
xor
out
loope
push
repnz
jmp
js
popf
jecxz
iret
pop
iret
and
sub
addr16
cmp
inc
cmovle
pslld
or
cmp
jae
or
shll
dec
cmpsb
adc
mov
nopl
sbb
xchg
jb
stc
xchg
or
adc
jecxz
vpxor
das
aaa
js
jg
ja
push
add
pop
clts
push
pop
cmp
repz
or
cmp
jbe
ja
ja
stc
hlt
pushf
mov
adc
push
push
push
in
fists
dec
pmulhuw
enter
loopne
sahf
fmull
daa
xor
imul
push
and
scas
push
mov
push
daa
js
add
add
dec
push
outsb
push
add
fisttps
repz
jge
push
test
fisttps
push
iret
xchg
or
cmp
pop
mov
loope
repnz
jg
push
add
iret
repz
or
lahf
push
add
jae
cmp
and
push
leave
jmp
pusha
push
push
push
leave
jmp
dec
cs
stos
jae
dec
dec
mov
add
sahf
fcmovne
leave
mov
lock
dec
out
pop
lret
or
sub
xor
cmp
cmp
inc
cmovp
pop
mov
sahf
cwtl
push
out
fsubl
push
add
pushf
je
mov
add
iret
push
loope
or
imul
or
lret
or
enter
or
sbb
push
clc
outsb
and
xchg
push
dec
lret
push
cvtdq2ps
xchg
pop
adc
lret
mov
dec
outsb
setbe
lea
scas
scas
lret
mov
or
mov
push
rcrb
sahf
out
pushf
fnstenv
add
sbb
pop
out
cmp
je
mov
int3
fistl
cmp
mov
inc
mov
or
fwait
xchg
push
out
cmpsb
cmp
mov
out
mov
outsl
lds
fistl
int3
push
int3
xor
sbb
pop
repz
repz
or
popf
cmp
xor
ds
push
or
push
push
pop
punpckhdq
jns
out
jne
adcb
out
sahf
out
xchg
adc
adc
lods
push
mov
ret
sahf
out
int
fcomps
jecxz
leave
dec
aaa
prefetcht1
push
leave
leave
leave
leave
adc
leave
leave
leave
adc
femms
insb
ds
or
ret
adcb
mov
into
cmp
sbb
add
cs
ret
and
scas
nop
idivl
pop
inc
inc
pop
inc
daa
xchg
and
sbb
push
pushf
je
popf
pop
lahf
popa
push
imull
lods
mov
out
jns
dec
dec
mov
sbb
pop
jo
daa
or
mov
loopne
sub
aad
jb
leave
into
lcall
fildl
push
xlat
pop
mov
and
sub
jb
rcll
pop
jb
mov
and
iret
iret
xchg
iret
lahf
iret
cmp
in
cmpsl
iret
scas
iret
mov
push
mov
or
loop
cmp
pop
jb
and
rcrb
xchg
sbb
rcrb
push
bound
test
call
xchg
icebp
jbe
mov
ror
leave
inc
dec
ja
jecxz
pop
jae
mov
xchg
test
psrlw
rcll
xchg
dec
dec
sahf
sahf
rcl
pop
imul
call
outsl
mov
or
sarl
in
sahf
pop
fiadds
out
cmc
cmp
out
clc
pop
push
shlb
inc
mov
sarb
outsb
and
cmovbe
fisttps
push
pop
push
repnz
out
push
or
jns
ja
push
or
or
sahf
push
mov
or
and
addr16
adc
inc
dec
dec
cs
mov
pop
in
mov
testl
popl
mov
scas
sbb
add
cltd
or
jmp
or
pusha
repnz
popa
pop
cmp
divps
rcrw
cmp
outsb
jbe
jle
xchg
mov
fisttps
leave
xor
push
sahf
rorl
call
cmpsl
test
mov
mov
push
daa
mov
dec
cs
mov
jns
fimuls
add
or
adc
ss
sbb
enter
xchg
and
push
ja
adc
mov
cwtl
push
xchg
int
fcoms
or
mov
inc
rolb
aad
mov
dec
addr16
xchg
sub
push
aad
fs
out
test
add
mov
aad
or
sbb
ficoms
push
add
sbb
pop
xchg
jb
and
or
outsb
fst
inc
sbb
aaa
pop
or
sub
or
pop
out
xchg
dec
packssdw
add
cmp
test
outsb
daa
test
mov
mov
rol
scas
push
lahf
rcrb
push
dec
outsb
fucom
fimull
add
add
xchg
out
jns
ljmp
psubd
add
adc
repnz
and
fildl
xor
cmp
pusha
push
imul
pushf
xchg
cld
mov
outsl
ljmp
push
mov
push
xor
fcoms
into
pop
or
aaa
jns
in
push
add
daa
daa
dec
push
dec
push
pusha
push
jb
or
test
xchg
sahf
fdivrs
sub
pop
push
shrl
jb
call
hlt
ja
sbb
ja
fsubl
pop
xor
cs
aas
fsts
repnz
cs
fstps
iret
cmp
invd
jae
push
or
setg
sub
mov
dec
push
repnz
fnstcw
cmc
xchg
dec
cs
std
add
and
and
mov
xchg
xchg
loop
iret
fiaddl
or
movmskps
cmc
test
pop
cltd
pop
test
push
cmp
jg
push
daa
adc
daa
scas
cmp
or
or
mov
mov
push
ja
add
lahf
add
sub
mov
notl
mov
mov
push
int3
pushf
loope
pop
in
pop
push
fldt
fcmovnb
mov
adc
and
fistl
packsswb
xchg
shl
mov
cmp
lret
bound
jb
xchg
das
push
faddl
insb
fstl
lahf
cmp
inc
out
cmp
in
push
push
add
es
repz
push
jno
jb
jmp
add
add
add
cmp
jae
jns
orl
mov
or
xchg
in
repnz
push
cltd
fcoml
insb
fcmovne
enter
int3
ja
adc
stos
add
or
pop
aaa
jns
adc
add
push
mov
pop
mov
cmovo
nop
push
rorb
dec
fisttpll
add
imul
fstpt
sub
pop
rorl
inc
mov
pop
repz
pop
stos
jg
dec
xchg
setnp
or
pop
fsub
mov
mov
jns
out
adc
pushf
je
lret
movups
add
mov
xchg
fimuls
adc
sbb
mov
sub
sbb
repz
cmp
inc
mov
iret
cmp
push
push
and
mov
imul
jae
sub
cmp
repz
jnp
subl
iret
repz
sub
daa
iret
repz
stos
das
mov
jns
add
ret
ficomps
xor
pop
fsubp
pusha
pop
adc
ss
jns
mov
mov
add
lea
push
test
dec
out
push
daa
or
adc
push
ja
dec
outsb
adc
jo
ja
inc
sahf
fwait
adc
pop
jb
mov
lcall
xchg
add
cs
push
fbstp
repnz
call
mov
or
add
add
pop
loopne
dec
mov
pop
sysret
das
or
in
jbe
cmp
das
push
dec
pop
setae
jns
push
ja
test
jae
mov
lret
sahf
out
es
adc
jns
clc
pop
add
sbb
cmp
repz
sbb
cmp
sbb
sbb
sbb
cmp
pop
pop
imul
jbe
andl
iret
repz
and
in
repz
les
mov
loope
sbb
jb
loope
loope
loope
loop
iret
repz
adc
sub
cmp
repz
cmp
inc
push
jbe
jbe
aas
pop
pop
addr16
loop
jge
mov
mov
fists
daa
test
es
mov
iret
lret
and
and
iret
repz
and
pop
add
or
sbb
jns
out
sbb
jns
out
pop
dec
adc
sahf
out
sahf
dec
fs
outsl
dec
jp
sahf
out
dec
test
dec
aaa
jns
in
sqrtps
pop
in
dec
pop
push
jle
pop
dec
cmovp
out
adc
ret
cmp
jbe
fsubrl
out
repnz
push
std
fstpl
lock
add
push
mov
and
cmp
mov
outsl
push
maxps
xrelease
cmp
cwtl
push
mov
iret
repz
or
or
lock
repz
or
or
jle
in
movd
in
out
ficoms
push
adc
adc
jns
adc
adc
out
dec
pop
push
sbb
sbb
jnp
jns
out
test
sbb
out
cmpsb
pop
mov
jbe
jns
mov
mov
in
loope
in
hlt
scas
cld
iret
add
cmp
repz
femms
sbb
sbb
repz
repz
sub
xor
iret
cmp
adc
repz
adc
gs
push
jne
into
repz
jge
test
lea
push
or
or
out
push
sahf
outsb
repnz
inc
pop
lcall
sbb
cmp
mov
je
push
out
fcoml
cltd
addr16
xchg
out
mov
add
mov
wbinvd
push
inc
repz
push
push
iret
repz
or
outsb
daa
iret
repz
jbe
jle
in
in
outsb
jle
cmp
leave
leave
test
mov
sbbb
jbe
mov
push
pushf
ja
inc
push
and
call
sahf
out
push
add
add
dec
xchg
fcmovne
repz
add
daa
daa
daa
mov
das
je
test
pushf
xcrypt-cfb
cmpsl
in
daa
iret
adc
leave
leave
leave
in
rorl
fninit
jmp
in
leave
repz
add
or
leave
in
in
sbb
and
pop
iret
leave
repz
and
and
pop
adc
jmp
pop
fs
push
add
xchg
pop
lcall
daa
mov
pop
les
fisttpll
int3
push
or
dec
sahf
ja
fsub
push
push
in
hlt
fcmovne
out
dec
cld
push
adc
or
in
rcll
adc
and
pop
jg
ljmp
add
cmpl
ljmp
pop
in
ljmp
xchg
out
mov
mov
leave
push
push
aam
push
filds
iret
repz
adc
jmp
mov
out
mov
adc
aaa
cmovb
dec
sbb
arpl
in
dec
outsb
sbb
in
dec
sahf
sbb
jns
sahf
out
and
out
rcr
and
in
daa
std
or
out
in
push
sub
icebp
in
sahf
cs
das
push
pusha
in
in
repnz
outsl
xor
xchg
in
mov
jb
in
movsl
in
scas
in
mov
sahf
out
test
or
out
roll
fisttpll
lahf
sahf
cmp
repz
out
or
add
daa
daa
mov
outsl
or
adc
and
daa
daa
sub
cmp
sahf
out
repnz
dec
pop
push
push
pop
fucom
jns
arpl
imul
je
out
push
jae
jnp
sbb
sbbl
mov
and
push
leave
mov
enter
leave
rcr
loop
mov
dec
add
or
adc
dec
jl
fstpl
dec
pushf
mov
push
add
data16
mov
fists
repz
mov
or
scas
fwait
prefetch
fsub
pop
out
ja
mov
add
mov
sahf
out
sahf
adc
adc
sahf
fmull
andnps
lock
jns
out
aaa
push
sbb
inc
sbb
sbb
pop
push
imul
push
fisubrs
xchg
js
pop
mov
lahf
movsb
lock
jbe
int
scas
punpcklbw
insl
vmread
out
jnp
decl
sub
sub
out
out
mov
jg
cs
das
lds
shlb
fcomi
mov
xor
icebp
xor
repz
cld
pop
ss
adc
pop
fdivl
cmp
lahf
push
cmp
aas
fisttpl
call
sahf
out
aas
or
adc
sahf
out
int
pop
cvtpi2ps
inc
jns
out
inc
inc
dec
inc
pop
cmp
jbe
addr16
jb
jge
adc
push
xchg
into
repz
jnp
jno
mov
into
in
mov
push
jge
shrb
icebp
mov
push
iret
fdiv
out
bnd
enter
icebp
or
adc
cmp
and
or
sahf
fildl
push
or
jns
push
ja
test
mov
adc
iret
repz
mov
in
pop
sbb
jmp
negb
repz
sbb
daa
iret
mov
ds
andps
adc
pop
push
jg
mov
andl
push
add
and
dec
adc
scas
ja
lds
ja
push
add
push
pop
iret
in
ss
hlt
adc
sbb
daa
or
cmp
repz
push
or
or
repz
jno
repz
adc
unpckhps
mov
popf
cmp
into
sbb
in
sbb
jns
out
sbb
add
pushf
fsubrl
sbb
xchg
es
repz
xor
cmp
inc
out
mov
rsqrtps
cs
push
sub
jle
jns
lahf
push
sub
cmc
push
and
cwtl
xor
sub
cmc
or
adc
out
push
sbb
or
xchg
out
aaa
aas
aas
xor
mulb
cmp
inc
cmpl
testl
lcall
out
jbe
psrlw
or
or
or
push
pop
mov
testb
movlps
push
push
repz
repz
adc
iret
inc
fcmovne
inc
dec
pop
mov
push
and
bound
insl
iret
jnp
fistps
fisubs
clc
js
sbb
test
xchg
push
popf
pop
test
leave
leave
repz
iret
repz
and
and
repz
push
clc
adc
iret
mov
out
xor
add
scas
jo
inc
jg
popf
out
xchg
sbb
add
inc
das
jns
dec
mov
push
add
add
mov
fucomip
clc
test
xchg
xchg
clc
add
push
or
sbb
leave
repz
or
dec
push
loopne
inc
adc
sahf
out
adc
jne
push
iret
adc
clflush
jns
out
sbb
xchg
jl
jp
stc
push
js
sahf
xchg
push
cmp
cli
pop
push
add
push
inc
dec
dec
sub
xor
cli
push
pop
daa
dec
aaa
jns
wbinvd
pusha
push
or
push
or
repz
mov
cmp
in
push
adc
sahf
fcmovne
repz
sbb
out
in
in
sbb
lea
sbb
sbb
sti
movntq
out
push
pop
pop
pop
and
and
sahf
daa
and
sti
and
dec
pop
sti
arpl
outsb
popf
out
fstpl
jns
xchg
out
loopne
outsl
xcrypt-ecb
cmpsl
dec
pop
iret
repz
or
or
outsb
lret
lods
daa
fdivrp
lcall
psrad
push
scas
hlt
sti
sti
or
dec
sahf
out
adc
ss
in
das
inc
push
adc
push
iret
repz
sbb
dec
sbb
fs
iret
repz
outsl
sbb
in
push
pop
nop
fwait
cld
jg
cld
sahf
out
es
dec
and
and
sbb
call
sub
xchg
stc
int3
cmc
push
add
cmp
std
dec
push
pop
pop
popf
lods
pop
std
mov
std
push
fisubs
das
jb
das
movsb
std
add
aad
cmpsl
mov
daa
daa
daa
daa
rcl
fucomp
leave
leave
shrl
syscall
repz
fwait
jmp
call
or
pop
cmp
jae
syscall
or
or
popf
inc
das
dec
pop
js
in
sahf
adc
adc
movsb
pop
cld
incb
dec
repz
pop
adc
pop
sbb
jns
xor
sbb
sbb
sahf
push
pop
jbe
cwtl
iret
jae
mov
shlb
sahf
out
daa
out
es
daa
cld
mov
out
pop
or
pop
mov
sahf
sub
xor
out
movsb
fwait
cmp
movhps
cs
sahf
ja
cmp
push
pop
push
ss
lock
seta
sahf
scas
rep
daa
iret
cmp
cmp
aas
scas
icebp
fisttpll
lahf
inc
clc
mov
into
pmullw
mov
por
repnz
add
push
push
push
sbb
in
jbe
das
xor
cmp
inc
fcmovne
repz
push
or
push
sahf
out
mov
jo
xchg
fcmovne
repz
mov
das
sahf
out
mov
bswap
push
pop
ficompl
in
sahf
fmull
paddw
add
and
push
sub
setae
jns
inc
and
jbe
cmp
cmpsb
pop
push
and
jns
out
sub
sub
in
sbb
sahf
sub
inc
add
add
xchg
out
iret
push
cs
insl
iret
jae
mov
mov
cltd
fcmovne
jnp
call
mov
or
adc
pushf
fistl
movsb
add
scas
bsf
xchg
jl
dec
inc
sub
push
add
push
jns
notb
repnz
pop
push
cli
scas
fwait
mov
add
add
push
adc
insl
lods
cmp
push
das
lmsw
add
inc
add
pop
orps
addr16
xor
dec
in
shll
sbb
into
test
push
cmp
outsl
adc
popl
adc
dec
push
push
es
pop
adc
cmp
xchg
dec
push
mov
pop
mov
pop
pop
test
jae
rclb
aam
stos
adc
out
adc
rorb
nop
das
adc
jbe
mov
push
add
mov
loopne
aam
aas
inc
push
and
mov
or
stos
sub
mov
cs
adc
dec
aaa
xlat
mov
xlat
add
push
add
inc
xchg
xchg
aas
lahf
or
mov
aas
push
and
or
aaa
or
fnstsw
scas
adc
cmp
das
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
xchg
out
dec
test
leave
insl
pop
mov
in
shll
pop
and
mov
mov
mov
or
bound
dec
add
or
mov
movsl
push
aam
add
push
and
mov
faddl
add
movsb
add
jns
and
mov
lahf
loopne
inc
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
add
jle
jns
aaa
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
faddl
aam
shl
iret
repz
movsb
mov
iret
xorb
repz
out
insb
push
fs
pop
push
dec
mov
into
out
lret
sbb
clc
and
cmp
repz
aam
mov
cmp
mov
js
sahf
out
pop
jo
pusha
push
cmp
mov
sbb
or
and
jge
cmpsl
call
jbe
push
push
fistpll
pushf
push
je
pusha
and
icebp
sub
insb
add
imulb
sbb
push
cmpb
insb
push
js
clc
mulb
insl
popf
incl
dec
hlt
xor
idivl
sti
daa
aas
sbb
es
push
adc
or
xor
adc
cwtl
cs
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
mov
mov
inc
sgdtl
push
mov
jg
xor
adc
mov
addb
adc
add
pusha
in
mov
inc
mov
or
flds
mov
outsl
cmp
push
iret
xchg
pushf
add
addb
fwait
push
test
inc
stc
pop
jg
shld
jl
add
pop
out
jne
add
repnz
push
test
inc
out
xchg
es
out
pop
pop
scas
sbb
dec
repz
sbb
push
fdivp
cmp
pop
push
sbb
iret
adc
ds
and
mov
pop
push
push
fcoms
push
iret
repz
aam
rorb
or
sahf
idivl
adc
fcompl
push
adc
xor
push
sahf
out
sub
and
push
iret
repz
and
adc
jo
repz
add
clc
aaa
inc
test
insb
cmp
imul
daa
xor
mov
mov
lea
inc
cmp
xorl
fcomi
cmp
jmp
cmp
pop
js
mov
out
cmp
enter
insl
add
cmp
pop
ja
mov
iret
loopne
shl
jae
das
push
dec
xor
lods
loopne
dec
pop
jns
push
pop
mov
pop
repnz
cli
or
or
ret
cmovnp
repnz
adc
stc
mov
ficoml
pop
and
sbb
dec
mov
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
jmp
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
sbbb
decl
xchg
clc
repz
mov
subb
fwait
xchg
and
aas
xor
leave
push
add
int3
add
aas
jno
or
inc
cli
out
xlat
mov
pop
fs
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
ljmp
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
pushl
nop
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
call
movsl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
stos
leave
into
or
and
add
lock
jg
pop
jo
add
inc
je
inc
pop
add
and
dec
addr16
jge
std
mov
dec
inc
push
dec
inc
aaa
xor
jg
mov
gs
rorl
inc
push
inc
pop
push
inc
dec
inc
jo
inc
popa
push
add
outsb
jbe
imul
mov
outsl
mov
aas
dec
insb
imul
dec
push
pop
sub
outsl
loope
iret
xor
mov
icebp
clc
rcl
adc
push
inc
dec
push
daa
pusha
push
or
jo
mov
add
inc
inc
test
out
dec
inc
gs
pop
adc
outsb
gs
mov
insb
les
ds
arpl
mov
inc
or
sub
dec
inc
sbb
push
dec
pop
mov
sbb
add
popf
lcall
insb
and
mov
rorb
push
fs
pusha
sub
cmpsl
aas
dec
or
or
orl
adc
jae
imul
data16
and
inc
inc
inc
jg
inc
jns
dec
mov
loopne
lahf
push
push
push
push
push
cmp
popl
jb,pn
jns
push
adc
xor
sub
mov
dec
in
inc
add
inc
je
jb
dec
push
dec
dec
insb
lods
std
dec
lds
jae
jbe
dec
scas
movsl
cmpsb
sbb
pop
dec
mov
movsl
cwtl
or
dec
adc
dec
inc
cmp
popa
jne
arpl
outsl
push
push
bound
dec
dec
pop
xlat
push
adc
xchg
add
sub
les
sbb
mov
inc
xchg
push
mov
push
js
cli
dec
addb
adcb
push
inc
fisubl
add
dec
notl
push
loope
push
notl
cmp
ds
xor
jbe
sub
mov
das
push
or
adc
push
clc
stos
inc
mov
jne
push
fcoms
adcb
mov
repnz
mov
cmp
push
inc
arpl
push
insl
les
cmpsl
inc
push
pushf
nop
pusha
out
sub
repz
jg
mov
mov
pop
popl
adc
or
and
mov
lods
mov
xchg
add
outsb
data16
xchg
inc
add
fisttpl
ja
mov
pusha
pop
ja
fisttpl
xchg
ja
or
les
stos
push
pop
pop
sbb
aam
pop
push
stc
jl
add
lahf
icebp
shll
push
ja
std
push
mov
inc
cmpsl
push
dec
je
mov
scas
xlat
xchg
aad
dec
dec
lahf
sub
add
lahf
add
test
popl
stos
and
dec
mov
adc
sbb
jg
stos
leave
addl
mov
push
lahf
or
or
adc
cmp
subl
xchg
dec
movsb
daa
xor
cli
push
dec
dec
idivb
sub
or
xchg
jae
in
cmp
push
inc
push
inc
mov
sbbb
imul
jne
inc
stos
adcb
rolb
adc
imul
outsl
addr16
or
or
insl
mov
iret
pop
les
inc
stos
addb
cmp
xlat
out
mov
mov
dec
cmpsb
push
test
adc
cmpsl
stc
cmp
call
jge
out
test
les
inc
cmp
cwtl
or
push
add
cmp
jae
cmpb
push
and
add
lahf
pushl
pusha
jne
mov
ja
popa
push
out
mov
les
hlt
push
xor
xchg
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
mov
fcompl
shrl
cmp
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
ljmp
loop
mov
jl
das
adc
stos
sbb
push
lods
jmp
nop
inc
fdivl
jno
add
aad
out
call
mov
movsl
in
lahf
xor
mov
js
stc
lcall
xchg
test
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
std
lcall
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fdivr
mov
sti
hlt
shrl
imul
mov
sarb
add
in
add
pushl
pop
dec
or
cmp
add
daa
adc
or
and
test
jmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
ljmp
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
add
fildl
push
fdivl
or
test
fs
ljmp
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
incl
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
fcomip
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
lcall
sar
imul
push
js
or
push
addl
mov
cmp
addr16
jmp
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
test
jg
mov
jmp
repnz
lret
mov
cmpsb
mov
sar
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
mov
mov
sbb
inc
out
add
iret
push
mov
fldt
decl
xor
add
mov
test
outsl
inc
jne
inc
cmp
push
imul
dec
je
push
insb
imul
mov
fistps
add
lcall
jbe
push
jns
arpl
arpl
mov
pusha
cmpsl
lods
in
push
inc
insl
jns
mov
rcll
jne
outsl
insl
addr16
andb
inc
imul
daa
fs
daa
fstl
insb
add
adc
cmp
dec
inc
js
inc
ret
mov
jmp
or
inc
inc
inc
js
popa
or
orl
pop
dec
mov
jno
xor
pop
inc
cmp
pop
bound
lods
insl
jmp
aaa
cmp
popa
arpl
cmp
arpl
or
xor
gs
xor
insb
xchg
jbe
pop
sbb
inc
add
xor
inc
push
fistl
add
inc
or
sbb
inc
ret
xchg
int3
dec
xor
add
sub
cmp
imul
in
popa
stos
pop
push
jbe
arpl
pop
movsb
push
jmp
inc
aas
xchg
popa
rcpps
bound
loopne
push
sarl
dec
addl
pop
xchg
insb
popa
jns
imul
push
push
dec
insb
and
push
nop
pusha
add
aaa
je
or
push
aaa
aas
inc
push
add
ficoml
and
jae
ljmp
bound
aas
dec
inc
mov
sahf
push
mov
inc
pusha
jnp
adc
sbb
inc
pop
jg
test
sub
jae
inc
inc
inc
fimull
mov
add
ds
adc
int
mov
dec
add
mov
xchg
sub
insb
mov
fistpll
fs
ja
outsb
jne
fiaddl
mov
dec
jge
addr16
pop
xor
xor
or
push
pop
aad
add
addr16
push
xchg
into
pop
jo
or
ds
inc
cmp
adc
aaa
and
dec
out
imul
add
rorl
pop
mov
push
adc
lahf
adc
xor
ss
mov
sbb
xlat
inc
add
push
mov
loopne
add
xchg
daa
inc
jb
and
cmp
sbb
cmp
dec
popa
jo
js
nop
sub
xorl
outsl
add
in
dec
pop
push
jno
pop
test
andl
xchg
add
in
nop
test
pop
cmp
pop
test
add
sbb
rcll
rorl
and
mov
mov
pop
xor
shlb
aad
inc
das
inc
pusha
push
popa
jb
push
xchg
shrl
sub
into
nop
adc
xor
iret
mov
bound
pusha
xor
rcll
push
aaa
ja
push
and
jae
add
adc
xor
imul
or
push
sub
aaa
pop
icebp
xchg
push
and
pop
adcl
inc
scas
addr16
xor
testb
pop
push
ret
jns
scas
push
push
mov
push
push
in
inc
mov
adc
pusha
cmp
jbe
aaa
push
loop
xchg
inc
je
aaa
push
outsb
cwtl
push
inc
aaa
jno
lds
adc
aas
pop
inc
and
add
mov
loopne
addl
cmp
fwait
js
add
mov
dec
pop
nop
movsb
xor
push
repnz
std
clc
or
repz
pop
mov
int
mov
pop
add
pop
and
popa
insl
dec
add
adc
pop
add
movsb
jb
or
inc
dec
push
and
fistpll
or
dec
shrd
popa
incl
pop
xor
lea
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
fincstp
pusha
ljmp
lret
cli
push
cld
roll
pop
push
imul
jg
push
inc
es
add
dec
loopne
add
or
xchg
ja
mov
sbb
insb
daa
aam
cmp
mov
adc
add
verr
add
sbb
mov
prefetch
pop
xor
push
test
xchg
add
mov
mov
jbe
adc
sub
push
mov
sbb
pusha
push
add
pop
add
cs
cld
cltd
add
movb
or
add
jb,pn
mov
sub
fidivs
nop
inc
fs
cs
mov
sub
mov
or
loopne
outsb
inc
rcrb
cmpsl
not
out
add
or
sarl
pop
inc
inc
xlat
cmp
inc
inc
push
xor
add
mov
sbb
cli
mov
jle
or
rorb
imul
test
xor
or
or
dec
jne
pop
or
or
inc
mov
mov
addr16
cmc
daa
push
mov
ret
dec
mov
aaa
cltd
les
push
xor
pop
or
negl
call
call
jno
stos
push
mov
hlt
ja
jne
jmp
mov
imul
jecxz
pop
sub
pushf
xor
xor
push
dec
rorb
int3
loope
pusha
je
dec
add
or
outsb
pop
push
mov
mov
sub
or
push
shrb
hlt
jl
les
rcrb
sub
push
push
pop
pop
mov
mov
add
and
movb
insl
mov
inc
jns
push
push
mov
aad
rcll
sbb
mov
call
nop
fmul
mov
incb
mov
pop
or
popf
les
insb
xchg
adc
imul
add
mov
adc
mov
sahf
ds
adc
sbb
pop
dec
sub
ja
jl
nop
sahf
lret
nop
ds
sbb
xor
rorl
jb
stc
adcb
loopne
adc
xor
mov
mov
loopne
call
sub
push
add
outsb
dec
iret
and
mov
mulb
clc
pushf
and
aad
in
cmp
adc
aam
es
jne
dec
jmp
mov
mulb
adc
or
sbb
push
sti
subb
push
xor
in
inc
dec
arpl
fmuls
cmp
jne
mov
add
cmp
mov
adc
test
rorb
mov
movsl
push
cmp
mov
pop
cld
add
mov
in
sub
push
imul
or
out
jp
cmc
enter
push
pop
rol
sbb
or
es
shll
inc
xchg
mov
pop
pop
pusha
test
movsl
ja
dec
or
push
adc
jp
insl
lock
mov
cmpsl
scas
push
loope
je
sahf
jp
rolb
push
ret
xor
dec
push
jno
sahf
nop
sbb
pop
sub
and
sub
test
mov
mov
inc
or
shll
test
push
mov
aas
sub
es
push
aam
in
jecxz
call
add
movb
dec
adc
insl
mov
add
push
mov
aam
lea
dec
ret
out
or
lds
sbb
loope
lds
imul
and
rol
mov
mov
in
bound
cmp
je
adc
and
rcr
in
mov
scas
lea
dec
lock
or
cs
lock
je
cltd
ret
movsl
mov
hlt
or
mov
movsl
aam
jp
mulb
mov
mov
xchg
pop
and
dec
jge
adc
sbb
push
jmp
jae
aas
adc
xchg
lods
or
test
icebp
jne
push
dec
and
rcrl
push
std
test
pop
je
call
pushf
mov
inc
push
push
insb
fdiv
sub
adc
sub
adc
lahf
push
mov
adc
jns
sub
pop
mov
xor
adc
inc
jno
xor
cmp
pushf
out
fcoms
adc
adc
jecxz
push
pop
mov
pop
setge
push
lea
jne
loopne
push
mov
jp
push
dec
jl
pusha
or
inc
or
add
or
pop
mov
addr16
and
pop
xchg
sbb
test
ja
loopne
dec
adc
pop
rolb
pop
mov
call
popa
cmp
jnp
int
mov
mov
mov
into
lock
subl
loop
adc
call
je
rclb
mov
mov
xchg
add
in
add
inc
adc
sub
ja
xchg
fsubs
and
or
and
add
out
fcmove
adcb
xchg
rcll
gs
test
sub
push
sbb
inc
cmp
mov
cmc
loope
sub
call
dec
in
push
call
call
push
fldcw
jne
xchg
lea
sbb
lds
ljmp
cmp
lods
fdivrp
nop
adc
ss
lcall
les
push
xorb
push
mov
rol
mov
pop
pop
and
adc
rolb
sub
lods
mov
std
insb
mov
out
push
fsubrl
mov
test
jmp
xchg
clc
cmp
sbb
dec
call
fnstsw
dec
push
inc
sub
sbb
loopne
stos
cmpsb
test
in
inc
pop
jnp
push
fs
sbb
sbb
xchg
mov
and
mov
push
or
in
shl
or
xchg
xchg
push
push
sbb
dec
cld
rol
adc
clc
sbb
xor
lock
xor
lea
xlat
mov
ret
sub
or
jecxz
mov
sar
mov
movzbl
sarb
adc
cltd
sbb
mov
jbe
add
xchg
sbb
dec
rorl
mov
lds
and
push
pop
lahf
cmp
movsl
sub
mov
cmp
bound
movsl
add
arpl
push
ret
jle
push
hlt
push
ljmp
cld
push
jns
popa
fists
push
adc
pop
loop
jo
and
or
sbb
jne
push
pop
ret
sbb
ds
lret
xchg
cmc
lock
aad
aam
push
inc
xchg
and
fstl
adc
xor
mov
ds
sbb
push
sbb
sbb
aaa
sbb
sbb
loop
inc
xchg
push
xlat
fdivr
sbb
adc
outsl
mov
movsb
sub
and
cltd
nop
sub
mov
fdiv
xor
fimuls
sbb
mov
cmp
push
push
mov
push
sbb
dec
out
dec
cs
sub
pop
rcl
insb
imul
jb
add
xchg
push
xchg
or
subb
dec
mov
push
jb
call
xchg
fwait
jne
push
pop
test
cltd
bound
cmp
cmp
fadds
es
inc
add
adc
mov
pop
cmp
add
sbb
mov
mov
add
mov
mov
pusha
fildl
mov
inc
imul
fiadds
aad
dec
shl
ljmp
andb
js
cli
std
xlat
call
stos
cmp
in
xor
fdivr
mov
sbb
ficompl
idivb
xor
jb
loopne
decb
mov
das
psubsw
push
iret
insb
int3
push
repnz
xor
inc
mov
sbb
data16
imull
mov
int3
or
mov
push
fisubrl
adc
and
and
or
push
adc
pop
dec
sbb
pop
mov
pop
inc
push
movsb
in
lea
movsb
jns
dec
pop
rol
aaa
insb
add
cmp
sub
movsb
pushf
jns
int3
xor
mov
xchg
fnstenv
shll
jle
rcll
aas
mov
fnstenv
or
push
adc
addb
jne
insl
sub
sub
scas
addb
mov
lds
mov
inc
shlb
scas
js
insb
or
inc
mov
push
fdivrs
mov
outsl
push
jb
adc
dec
je
ljmp
pop
ljmp
ret
push
stos
je
popa
pop
add
inc
adc
adcl
add
sub
addr16
je
mov
add
scas
sbb
mov
push
loopne
fistpl
or
push
subl
repnz
inc
sub
jmp
sub
xchg
pushf
push
or
in
imul
rcl
sahf
mov
fiaddl
mov
lret
sbb
mov
push
loopne
jp
cmpsb
scas
pop
and
mov
and
out
xchg
scas
aas
js
mov
fcomi
adc
sbb
sub
lret
out
adc
or
rclb
dec
add
push
or
and
add
xchg
jo
dec
adc
inc
pop
push
mov
cwtl
push
adc
shr
xchg
sbb
adc
call
and
cmp
jle
pusha
hlt
push
pop
jmp
adc
inc
aad
jno
pushl
push
imul
push
gs
jns
mov
dec
in
in
push
add
mov
pop
or
in
jb
jmp
inc
inc
mov
pop
dec
sub
push
cld
jne
xor
loope
mov
and
pushf
jl
std
nop
dec
in
sub
adc
mov
mov
push
ds
pop
lds
or
sbb
dec
test
push
insb
cmp
scas
loope
mov
jbe,pt
xchg
mov
xchg
lods
push
xchg
sbb
rcr
in
fcoms
adc
mov
pop
mov
adcb
mov
mov
inc
inc
mov
sbb
push
mov
mov
jne
je
in
sub
mov
in
in
fstpt
fs
sarb
sbb
push
lcall
mov
pop
cmp
sub
imul
popa
mov
mov
sbb
push
cmpsl
mulb
fistpll
push
fists
sbb
mov
aam
adc
mov
pop
inc
sbb
jne
lods
lods
push
sbb
mov
ficoms
ret
cmp
xor
sbb
push
popf
punpcklbw
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
daa
andnps
sbb
inc
test
inc
enter
push
or
pop
adc
sbbl
jb
out
add
mov
mov
sbb
test
pushf
enter
mov
lods
pop
jns
dec
lods
dec
xlat
push
push
mov
jecxz
repz
test
push
mov
dec
int
sbbb
jb
sbb
pop
mov
dec
adc
cmp
and
adc
add
cmp
xchg
xchg
in
add
jne
clc
inc
nop
adc
sbb
mov
iret
loop
test
cld
out
mov
arpl
mov
adc
in
inc
pop
dec
xor
add
mov
add
lea
scas
sbb
scas
jns
enter
mov
sahf
icebp
or
gs
iret
nop
aam
ljmp
push
add
add
out
enter
push
add
fisttpll
cld
mov
add
rolb
popf
push
mov
es
into
or
lahf
shlb
and
pop
cmp
xor
inc
dec
pop
and
je
or
jne
addb
or
je
mov
mov
cmp
adc
adc
loopne
outsb
test
je
or
inc
sti
adc
fimull
sbb
sub
xor
bound
jmp
mov
fs
sbb
mov
adc
xor
cmc
shll
push
inc
push
cld
lcall
call
popf
rorl
adc
push
hlt
xor
test
sub
lds
clc
push
mov
add
lcall
mov
xor
lods
jbe
jp
aam
mov
xor
sbb
inc
cmp
neg
add
aam
outsb
sbb
inc
test
dec
mov
fdivrs
jg
jne
push
loopne
lods
sbb
push
mov
mov
notl
push
inc
rcrb
fildl
add
out
sbb
mov
inc
inc
xor
pop
hlt
lahf
insl
adc
or
shr
pushl
mov
jl
or
jnp
mov
ss
stos
std
std
xchg
dec
push
xor
sbb
cld
cmp
cli
push
or
add
enter
or
out
call
sub
mov
push
enter
mov
dec
in
jbe
xor
inc
adc
push
sbb
pop
push
sahf
cmp
pop
push
sti
and
xchg
fcoml
lret
lock
adc
out
and
push
push
ds
sbb
test
add
scas
jecxz
and
mov
lock
xlat
cmp
in
cmp
and
add
mov
cmp
add
mov
and
repz
imul
jl
mov
rorb
sbb
cmp
sub
xor
pop
cld
fiadds
popl
int
mov
add
adcl
jge
pusha
mov
jmp
inc
jge
scas
les
xor
mov
mov
add
push
popf
sub
int3
lods
or
lea
add
sbb
flds
adc
daa
out
testl
pop
xchg
adc
shll
push
cmp
jne
rclb
test
cmp
mov
push
mov
jmp
lods
sarl
cwtl
push
mov
int
mov
push
call
pop
xlat
xchg
inc
jbe
and
or
lea
pop
ret
xor
push
sbb
sbb
xchg
sarb
sbb
or
ret
int3
enter
outsl
jne
xor
push
in
std
jmp
and
xor
add
loopne
jmp
in
or
sahf
xor
or
xor
mov
into
shlb
iret
sarb
push
fnstsw
dec
jp
jl
adc
xchg
xchg
shll
clc
mov
pop
add
pusha
or
jmp
sub
or
out
push
mov
rorb
call
in
xorb
adc
fbld
loopne
sbb
andb
daa
dec
xor
sbb
out
dec
xchg
adc
jne
mov
jmp
or
pop
shll
pop
or
push
or
mov
andb
lahf
xorb
or
out
roll
adc
adc
push
rorb
push
movsb
jno
imul
sbb
fldl
jnp
call
out
pop
push
aaa
mov
loope
xchg
ljmp
sbb
push
call
loopne,pt
out
mov
mov
inc
mov
shr
call
nop
fs
mov
dec
ja
loop
mov
mov
push
push
sub
notl
mov
lea
add
adc
popa
pop
stos
push
fucomip
cmp
mov
xor
push
jbe
movsb
jo
rolb
xchg
jne
inc
imul
adc
adc
clc
inc
mov
std
pop
jbe
inc
xor
mov
or
cmp
sbb
push
in
loopne
dec
dec
xchg
or
adc
jo
sbb
xor
fadd
and
xor
pushf
loop
xor
cltd
test
inc
jmp
roll
scas
push
jo
stos
fwait
add
xor
xchg
test
js
jb
clc
mov
rorl
xchg
mov
xor
test
or
jbe
pop
and
fnsave
fwait
jmp
push
mov
jp
in
fsubr
jo
push
cmp
cmpb
loope
in
mov
into
push
jbe
call
or
fildl
push
inc
adc
mov
loopne
lods
stos
inc
pushf
lret
scas
loopne
sti
push
movsl
pop
orb
xchg
dec
js
dec
jle
push
aaa
pop
addb
mov
adc
stc
leave
clc
dec
addl
sub
pop
push
add
pop
jge
pop
xorb
dec
mov
push
test
icebp
adc
sub
push
out
pop
push
push
cmpsb
aam
in
das
outsb
lcall
popa
fdivl
cli
call
pusha
pop
add
or
faddl
push
push
add
sbb
je
fmull
js
push
push
sub
jl
imul
add
or
fisubl
lcall
pop
dec
adc
aam
iret
mov
or
or
or
in
dec
xor
mov
xchg
adc
and
jb
popa
mov
jmp
adcl
int
mov
dec
mov
push
inc
mov
das
mov
add
sbb
push
hlt
subb
ret
mov
mov
ss
push
cli
jns
and
cmp
lea
push
cld
mov
je
std
mov
jmp
adc
and
add
adc
add
add
pop
sub
icebp
inc
sbb
mov
mov
dec
push
dec
sbb
push
xchg
call
push
pop
mov
lea
call
mov
jmp
push
imul
pop
sbb
jmp
sbb
in
xor
jbe
push
int3
sbb
jne
into
mov
jae
cmp
jmp
cmpb
cmp
jne
push
loopne
mov
mov
or
je
int3
jecxz
in
cltd
dec
decb
icebp
pushf
fwait
mov
jmp
orb
nop
xor
add
pop
outsb
pop
pop
sarl
icebp
call
inc
das
lds
cmp
mov
and
in
xchg
cld
push
jge
push
lods
dec
repz
mov
je
sbb
jp
add
or
jl
aad
lock
js
negb
mov
push
dec
xor
out
dec
mov
fxtract
jmp
cmp
jne
push
fs
je
xchg
fisubrl
test
push
xchg
add
cs
adc
add
popa
jl
fdivr
or
jp
rorb
xchg
jne
add
push
call
fstpt
and
movsb
jmp
js
jns
sbb
sbb
test
pop
jne
dec
or
dec
push
call
je
pop
add
cmp
decb
or
adc
mov
rclb
add
or
push
bound
call
mov
push
xchg
call
push
add
add
std
push
sbb
add
jo
jecxz
roll
cwtl
or
call
pushf
or
cmp
test
loope
imul
mov
push
cmpsb
mov
pop
push
inc
mov
sub
test
cld
rolb
lock
push
dec
je
sub
or
mov
fsubrs
xor
lods
sbb
mov
sbb
lea
adc
add
xchg
nop
push
incl
mov
cmp
fadds
dec
jne
movzbl
add
stos
adcl
push
add
mov
test
ret
push
fisttpll
xor
cmp
mov
xchg
push
sub
xor
sbb
jmp
loope
xchg
in
and
adc
cli
sub
fcmovnbe
in
add
xor
or
and
ja
in
out
pop
sbb
mov
lea
inc
xor
inc
pop
mov
dec
and
inc
ss
push
or
add
xor
ret
push
inc
cltd
cli
mov
add
movsb
pop
xchg
xchg
sub
test
and
dec
xor
popa
es
stos
and
comiss
add
xchg
fisubs
dec
dec
push
jo
rolb
stos
inc
cmp
and
je
clc
cmp
cmp
ss
dec
mov
aas
dec
or
xor
in
add
enter
add
sub
inc
adc
mov
xor
xchg
adc
pop
roll
adc
mov
sub
mov
and
adc
or
add
or
adc
xchg
inc
push
adc
mov
rorb
and
pop
mov
adc
add
xor
mov
or
adc
test
pop
inc
add
adc
adc
adc
add
mov
push
and
mov
and
or
lods
inc
inc
add
adc
call
jmp
sbb
or
mov
or
imul
add
and
push
shlb
or
or
add
pop
out
call
sti
cmp
push
callw
pop
call
call
lahf
mov
cmp
dec
aam
insb
mov
cwtl
inc
push
jns
cmp
call
mov
call
int3
pop
cli
mov
push
xchg
push
xchg
jbe
movsb
dec
pop
leave
rorl
out
pop
cmp
or
fildll
add
psubsb
add
jge
call
into
dec
lea
arpl
sti
aad
cli
cld
xchg
pushl
cmp
jmp
lret
or
rcrb
pop
xchg
inc
cmp
into
push
xchg
xor
pop
test
loopne
pop
push
xor
cmp
into
cmp
xor
push
lahf
insl
push
dec
dec
jmp
sub
inc
jmp
add
and
mov
mov
dec
pusha
push
pop
push
jmp
xchg
sbb
stos
or
insb
or
xchg
pusha
xor
adc
rcll
lock
and
jo
mov
push
add
filds
out
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
inc
cmpsl
scas
fs
into
rcrb
ja
shll
inc
inc
lcall
shlb
push
es
adc
mov
movb
pop
fists
dec
pushf
out
outsb
iret
dec
push
fs
clc
push
or
in
ficomps
ret
sub
jp
adc
fwait
xchg
int3
xchg
mov
sbb
js
xor
and
jb
jbe
inc
push
imull
push
dec
xor
enter
xchg
inc
sub
jp
mov
adc
add
pop
cmp
push
xchg
pop
aaa
xchg
je
mov
inc
xor
jmp
adc
push
mov
test
nop
xchg
dec
orb
push
push
xchg
test
push
xchg
pop
rolb
call
xchg
push
mov
sbb
push
orl
dec
les
pop
xchg
in
das
xchg
dec
push
push
dec
sub
xchg
xchg
dec
call
push
orl
sbb
jmp
lret
call
add
mov
sbb
shlb
or
daa
inc
add
movsb
mov
inc
cs
pusha
sarb
repz
sbb
je
mov
jo
daa
jp
movsl
mov
dec
jno
daa
xchg
cmp
repz
sbb
or
movsb
repz
repz
jmp
fistl
xchg
cmpsb
inc
out
daa
push
faddl
fsubp
or
add
and
dec
aaa
call
dec
shrb
push
and
out
ficomps
push
mov
rcrb
jns
enter
xchg
daa
inc
cld
or
insl
dec
out
push
adc
push
bound
shlb
add
xor
or
mov
inc
push
lahf
cmpsl
lock
dec
dec
test
sbb
movsl
mov
loop
or
insb
and
xor
cli
dec
pushf
push
outsb
or
negl
xor
xor
xor
xor
sub
xor
mov
ret
test
inc
xor
push
pop
add
or
add
add
add
or
rcll
aas
jo,pt
cmp
je
xchg
add
jb
outsl
in
add
push
jb
push
push
push
gs
out
cmpl
jns
or
xchg
or
iret
in
mov
add
or
xor
fisttpll
or
lcall
or
scas
in
or
or
or
push
or
mov
shrd
or
adc
pop
adc
mov
adc
sub
scas
in
add
adc
nop
xchg
stos
add
adc
xchg
adc
cmp
mov
in
sahf
xchg
fs
push
inc
pop
cs
addr16
pop
and
jne
out
rcrb
sbb
cmp
mov
xor
iret
sbb
mov
jb
sbb
or
je
push
sbb
iret
xchg
cmp
jo
xor
sbb
xchg
cmp
inc
negb
pop
rcl
incl
jne
add
add
sub
incb
mov
in
pop
movl
jg
rcrl
pop
jmp
dec
das
sbb
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
jns
in
in
in
out
jns
in
mov
pop
sub
sub
call
enter
adc
push
repnz
xor
cmp
ljmp
jmp
jmp
push
imul
in
in
dec
fsubp
aad
aad
in
cmp
mov
out
out
xchg
in
cmp
out
or
je
fisubl
int
lock
dec
mov
icebp
cmp
das
jnp
xchg
stos
mov
repz
std
hlt
hlt
cs
test
or
std
cmc
cmp
push
jnp
cmp
ret
enter
sbb
xorl
clc
repnz
aas
stc
stc
xchg
cmp
push
and
cli
pop
and
enter
fdivrp
orl
dec
leave
jnp
push
nop
shlb
mov
xor
sbb
fsts
xor
add
sbb
xchg
mov
dec
lahf
rorl
inc
stos
mov
jmp
adc
push
xor
jecxz
xor
fsubp
cmp
push
addl
cmp
adc
inc
or
lea
out
xchg
scas
call
cltd
sti
dec
adc
push
sbb
daa
xchg
pop
push
and
cltd
or
or
or
cli
out
out
out
xchg
jns
xor
cmp
cli
or
aas
repz
sbbb
xchg
push
pop
repnz
cli
stc
movsl
test
stc
div
sbb
xchg
xchg
clc
jns
mov
push
stc
push
dec
xor
stos
or
or
cmp
jmp
mov
cmp
out
orb
pop
aad
inc
xabort
jmp
lcall
jns
xor
inc
clc
and
and
sbb
out
aad
aad
fdiv
out
pusha
leave
and
negl
orb
lea
xchg
push
jmp
xchg
cmp
pop
notl
imull
daa
or
pop
dec
push
popa
xchg
into
idivb
mov
nop
idivb
insl
repnz
movsb
repnz
inc
repz
push
loope
testb
lret
and
jns
lcall
mov
loope
cmp
leave
clc
cmp
xor
mov
mov
repnz
loope
cmc
cli
hlt
mov
xlat
inc
cld
pop
gs
lock
push
adc
mov
or
push
lcall
loope
imul
jp
cmpxchg
inc
repnz
hlt
cmp
dec
push
cmp
mov
hlt
in
xlat
jb
or
repz
and
aam
mov
cmpsb
jb
pusha
or
add
xchg
jmp
inc
xlat
orl
xor
or
xor
repnz
xlat
add
hlt
cmp
or
pop
int
shl
icebp
das
xchg
pop
nop
sbb
mov
ds
xor
pop
repnz
rclb
mov
icebp
mov
pusha
leave
sub
sub
in
or
leave
or
dec
icebp
xor
subl
jne
or
adc
test
jp
jmp
cmp
movsb
push
jo
out
data16
push
sub
ffreep
push
inc
div
push
xchg
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
push
mov
mov
jb
add
jne
stc
mov
dec
icebp
dec
add
movsb
xchg
cmpl
ss
and
dec
pop
xor
jmp
dec
ret
and
dec
push
nop
push
jns
int
imul
out
insb
ds
dec
adcl
ss
sub
push
jecxz
repz
mov
cmpsl
jae
insb
sbb
push
push
sahf
negl
dec
xchg
gs
dec
outsb
dec
cmp
jns
faddp
jl
push
and
push
lods
leave
xor
into
and
bound
lods
cld
lea
inc
cmp
and
push
push
ret
inc
lret
test
dec
fnstcw
or
mulb
or
mov
jle
movsb
inc
and
out
and
fists
push
addb
pop
jmp
sbb
fldl
xor
in
ficoms
ret
ja
lock
dec
xor
sub
push
adc
xor
pop
mov
sub
mov
push
shlb
call
add
jle
inc
adc
in
jmp
xchg
pop
push
dec
dec
and
pop
push
jb
xor
and
push
repnz
mov
clc
adc
dec
mov
pop
xor
sbb
adc
jmp
adc
mov
jmp
push
xchg
lret
cwtl
divb
xor
xor
adc
popf
adc
loopne
cmpsb
cwtl
js
pop
xor
mov
push
ss
inc
inc
inc
or
adc
hlt
psubsw
dec
fwait
or
push
xchg
mov
jb
icebp
mov
add
xorl
shr
inc
add
mov
add
and
add
loope
loope
add
xchg
add
inc
jb
push
add
mov
sbb
sbb
and
rolb
dec
xor
xor
icebp
or
outsb
adc
aaa
dec
and
icebp
cltd
sbb
int
dec
icebp
inc
adc
push
xor
icebp
inc
dec
pop
hlt
and
inc
icebp
inc
pusha
xor
test
add
or
imul
icebp
shll
pop
cmp
adc
jo
inc
xor
movsl
lcall
fiadds
mov
push
fstp
je
xor
push
rcll
mov
push
xor
add
or
scas
imul
call
adc
mov
sbb
mov
push
mov
jg
cmpsl
and
je
adc
cmc
in
xlat
adc
or
iret
filds
adc
stc
push
xchg
sub
push
xor
outsb
adc
xor
and
dec
aam
arpl
dec
repnz
mov
sbb
xchg
ja
pop
movsb
sti
and
andb
inc
mov
lret
or
rcll
into
xchg
mov
jmp
lcall
test
cli
dec
cs
outsl
call
and
cmp
lcall
push
inc
ss
fisubrs
sbb
adc
xor
inc
out
stos
adc
jmp
or
xchg
repz
push
pushf
pop
and
nop
movsb
fwait
stos
adc
imul
inc
pushf
pushf
push
or
cmp
sub
sbb
movsb
stc
jo
push
push
xor
push
out
sub
scas
cmpsb
mov
stos
add
fistpll
mov
test
fistpll
fistps
adc
sub
pusha
pop
push
fbld
fs
or
adc
xchg
pop
fists
je
fbstp
xchg
inc
mov
in
inc
adc
ds
push
mov
and
popl
jg
push
jmp
mov
or
fs
test
aam
addb
push
or
test
cmpsb
loopne
xchg
aad
gs
sbb
stc
addr16
mov
mov
sbb
push
inc
scas
mov
cmp
sbb
ds
mov
add
les
lea
push
push
sti
dec
bound
add
dec
inc
mov
and
cwtl
dec
push
enter
lea
xor
pop
fidivl
push
cmp
lods
push
popf
inc
cmp
aad
je
std
cmpsb
dec
nop
push
lods
icebp
lea
xorl
arpl
nop
stos
add
dec
icebp
inc
and
sub
in
push
or
fisttpl
pop
test
or
inc
mov
mov
enter
dec
sub
nop
clc
mov
jno
rolb
sbb
push
rcl
dec
jne
jns
fisubs
sbb
cmc
pop
add
shl
test
and
mov
out
mov
data16
decl
xchg
jne
or
lret
adc
hlt
adc
loopne
add
incl
push
cmp
adc
es
sub
xor
add
imul
mov
add
jo
sub
cmp
jle
movb
negl
loop
loopne
xchg
mov
add
add
and
lods
cwtl
adc
sti
jmp
mov
cmp
fsubs
jmp
nop
jb
movsl
push
sub
jmp
and
mov
lea
out
jmp
add
loope
movsb
mov
ss
cmp
iret
dec
mov
cmp
push
bound
pusha
push
cmp
iret
repz
in
aaa
popa
aas
movsb
and
mov
pop
ret
je
sub
push
pop
xchg
and
fstl
dec
jns
loopne
adc
sbb
outsb
mov
adc
sbb
sbb
mov
fs
jns
into
dec
xchg
and
sbb
push
daa
dec
mov
lea
xor
pop
dec
adc
push
jns
sbb
inc
jp
jns
roll
mov
loopne
movsb
lds
push
repz
movsb
mov
xchg
dec
cmp
jnp
mov
inc
ret
or
mov
loop
jae
sarb
xchg
push
shlb
lods
mov
jns
imul
xor
mov
mov
shl
test
push
loopne
rcll
push
test
and
xor
aad
in
imul
pushf
push
repz
mov
js
je
loopne
mov
mov
imul
lahf
call
mov
xor
add
rcl
aad
pop
jno
dec
cmc
sbb
je
sbb
mov
dec
push
mov
scas
cmpsb
mov
inc
xor
xor
mov
lret
movsl
imul
test
call
cmpsb
and
pop
mov
imul
pop
imul
mov
imul
inc
imul
cmpsl
push
jp
imul
loopne
xor
push
in
test
sbb
sbb
imul
push
mov
push
imul
imul
cmpsb
imul
sbb
imul
nop
inc
iret
imul
adc
shrb
nop
dec
xlat
xor
mov
inc
subps
imul
imul
imul
imul
scas
imul
nop
add
imul
push
cmp
loopne
sbb
xchg
xchg
fstpt
or
dec
sbb
sub
fldl
push
mov
xor
out
add
imul
shrl
jno
or
daa
imul
mov
test
imul
ds
pop
mov
daa
rcl
lods
or
and
js
xor
push
pusha
and
sbb
push
imul
shlb
aam
pop
sbb
mov
imul
aam
mov
shlb
aad
and
into
mov
dec
pop
cmpsb
sbb
mov
or
sbb
rolb
sbb
testb
jmp
rorb
inc
and
adc
lds
imul
push
aam
dec
aam
je
push
push
jp
imul
mov
pop
sbb
add
imul
imul
xor
and
or
xor
loopne
data16
test
cmpsb
lcall
hlt
fildll
or
int
movsb
fcmovbe
jo
enter
mov
mov
push
int
add
in
mov
into
and
imul
ret
or
xor
pop
mov
insb
fsubrs
aad
push
or
and
jo
scas
cmpsb
mov
shrb
xchg
ja
or
je
leave
push
jmp
int
cld
add
sti
lret
inc
cmpsl
sarb
rorb
js
imul
shrl
cmp
loopne
cmp
xchg
and
adc
lcall
sbbl
push
ret
imul
jp
jmp
adc
inc
pop
orb
push
mov
je
push
dec
inc
lods
fisubrl
shrb
nop
test
imul
push
shrl
xlat
xor
push
imul
imul
imul
mov
imul
xor
fs
inc
push
fs
pop
dec
dec
cmovp
pop
cmp
lcall
sti
xor
adc
rcl
lea
popa
jo
jge
push
imul
daa
adc
xchg
sbb
scas
imul
mov
pusha
mov
jmp
jbe
cmpsl
jge
aaa
imul
and
jecxz
aaa
dec
sub
push
add
mov
adc
lds
pop
xchg
mov
xlat
add
inc
aaa
or
mov
mov
pop
ret
sub
pop
out
inc
push
mov
inc
shll
jbe
into
inc
cmp
ret
mov
and
nop
repz
inc
dec
jbe
or
inc
popf
test
addl
xorl
mov
jbe
addr16
mov
pushf
jnp
add
jl
dec
inc
pop
nop
popa
inc
pop
and
lock
in
pop
push
mov
inc
imul
sarb
xchg
mov
outsl
add
dec
enter
jae
rcll
push
mov
jl
in
sbb
jae
jo
or
mov
push
sti
mov
fmull
jo
pushf
or
sbb
fs
xchg
pop
movsl
mov
pop
add
push
and
and
movsl
mov
into
fbstp
mov
out
mov
imul
add
push
mov
dec
push
bound
mov
sbb
adc
mov
jb
jae
popf
push
sahf
push
cwtl
xchg
inc
dec
mov
inc
dec
push
inc
pop
leave
ret
xchg
aam
push
out
or
xchg
inc
cmovns
pop
mov
rolb
jl
pop
sub
jnp
in
cli
dec
cmpsl
rolb
mov
dec
nop
push
inc
dec
nop
dec
mov
movsb
xchg
xchg
mov
popf
stos
dec
nop
fsubrl
popf
sub
es
xor
dec
popf
add
and
pop
jb
shrl
movl
hlt
out
or
xchg
cmp
dec
adc
lock
in
jl
repnz
xor
dec
xor
ljmp
dec
or
sub
inc
add
push
and
test
sbb
call
or
xchg
jbe
scas
mov
or
mov
add
cmp
add
xchg
add
shrl
sbb
sub
sti
inc
xchg
ret
idivb
xchg
push
push
push
add
rclb
mov
add
and
rolb
xchg
xchg
xchg
pop
or
xchg
mov
xchg
dec
xchg
xchg
or
inc
add
xor
inc
add
loopne
xchg
jmp
dec
push
or
dec
xchg
mov
das
andb
xchg
in
call
mov
xchg
pop
lahf
pop
sbb
loop
dec
call
add
dec
shrb
test
hlt
dec
cmc
xchg
pusha
bound
cmp
adc
and
setl
inc
pusha
bound
mov
cmc
cwtl
test
add
and
stos
cmc
fnstsw
popa
subl
inc
or
call
xor
cmc
aaa
and
xchg
nop
cmp
cmc
adc
fs
push
stos
cwtl
cmc
jmp
cmc
mov
outsb
push
dec
cmc
adc
inc
dec
cmc
mov
cmc
aaa
pop
and
push
dec
inc
cmc
bound
cmp
das
push
test
mov
mov
out
cmp
pop
outsb
jae
lea
jle
push
cmp
in
xchg
xchg
cwtl
adc
add
je
cmpsl
add
fwait
stc
jmp
je
daa
movsb
add
incl
jl
dec
popa
xchg
je
add
pop
push
xchg
lods
sbb
rolb
not
sbb
adc
rolb
cli
add
mov
cmp
jnp
sbb
adcl
pusha
addl
pop
mov
mov
push
jns
push
push
fsubrl
cmp
xor
sub
repz
in
out
call
rcrb
push
arpl
adc
test
rorb
adc
xchg
adc
out
mov
ljmp
cli
shl
xor
fcoms
repnz
cs
mov
xor
mov
jmp
incl
movsb
jbe
mov
mov
inc
mov
fidivrs
cmp
ret
push
inc
call
add
push
mov
push
ljmp
inc
rcr
add
xor
sbb
test
dec
ljmp
movb
lcall
cmp
jp
fstpt
add
cmp
inc
jmp
dec
jmp
xor
sbb
adcl
inc
inc
adc
jp
add
inc
jmp
inc
inc
lcall
stc
pop
es
addb
fiaddl
pusha
and
or
push
mov
xchg
jmp
pop
cld
test
mov
mov
adcb
je
inc
or
je
or
shlb
movsbl
and
cmp
dec
xor
mov
xchg
add
into
call
xor
repz
mov
inc
jmp
add
inc
popf
popa
adc
push
popf
pop
pop
push
cwtl
movsl
sub
and
enter
add
in
out
pop
jl
cmp
sbb
and
into
and
mov
and
add
push
mov
dec
fnstcw
xlat
sbb
adc
aaa
inc
pop
adc
hlt
fadds
shrl
out
addps
pop
inc
sub
repz
fisubrs
jge
add
push
push
or
inc
pusha
xor
shl
cwtl
aaa
push
out
shll
es
fwait
inc
jmp
mov
cmp
xor
es
in
push
adc
push
add
ret
push
sar
inc
push
adc
rol
add
adc
mov
movsb
xchg
xor
or
mulb
fcomip
jbe
mov
inc
adc
sub
or
ljmp
lcall
sub
jmp
and
je
cmpsl
sbb
rcrb
arpl
sbb
xor
inc
and
pop
add
filds
cmc
out
mov
add
and
test
xchg
push
lea
xchg
mov
popa
add
sahf
mov
dec
pop
in
push
es
mov
adcl
outsl
out
inc
mov
xor
or
add
outsl
jp
lock
sub
adc
add
or
outsb
add
ret
lret
shlb
aad
xchg
les
movl
sub
mov
popf
shlb
inc
or
inc
dec
jp
loopne
cmp
dec
mov
imul
imul
mov
rorb
fdivrs
mov
iret
in
sarb
push
xor
xchg
or
cmpsl
xlat
cmc
fists
sbb
adc
in
xor
lock
xchg
sbb
mov
mov
adc
shlb
dec
xchg
pop
data16
and
sbb
mov
or
les
inc
sbb
xorb
ja
push
outsl
in
xchg
int3
or
push
lea
lret
ja
fcoml
lock
jmp
push
or
jbe
pop
or
jmp
popf
dec
and
xor
icebp
and
sbb
inc
nop
or
dec
mov
nop
xchg
add
inc
jl
mov
jmp
test
into
add
out
fmul
call
mov
rorl
lcall
orb
aas
push
inc
inc
out
mov
pop
sti
dec
push
dec
pop
and
inc
mov
mov
add
ja
sarb
in
sbb
xchg
push
cmp
pop
xor
xorl
punpckhwd
sub
test
js
push
imul
cmpsl
cmpsl
add
push
xlat
add
rdmsr
xor
rolb
rorb
pop
or
jge
jle
or
movsb
mov
and
pushf
push
outsb
push
call
fs
lcall
enter
mov
jmp
mov
test
out
jno
mov
ret
cwtl
add
mov
sbb
icebp
or
mov
add
or
sbb
ret
and
movsb
aam
cwtl
cmp
dec
inc
or
inc
add
or
fs
stos
std
inc
loopne
cmpsl
rcll
xor
add
push
in
into
in
sbb
jne
or
icebp
shll
in
push
ljmp
shll
add
mov
mov
lcall
xor
xorl
xor
nop
xor
xchg
leave
popa
or
out
ret
nop
sbb
fneni(8087
mov
movsl
push
add
sbb
jmp
imul
mov
sbb
sbb
in
mov
or
repnz
dec
cs
adc
xchg
movsb
lds
lea
xor
add
push
inc
pop
sbbl
mov
inc
sbb
xorl
in
jmp
pop
imul
and
nop
mov
mov
mov
and
push
push
mov
iret
xor
push
ret
sbb
or
imul
sbb
sbb
xchg
pop
shlb
lods
mov
adc
fwait
pop
xchg
add
sbb
sbb
in
xor
rolb
push
add
push
cmp
shrb
xorb
in
pushf
dec
sub
jle
push
inc
fiaddl
roll
dec
nop/reserved
add
sbb
int3
cmp
or
jmp
mov
nop
or
add
stc
jbe
add
mov
mov
lea
or
stos
dec
daa
ss
pop
inc
aam
ret
xor
push
popf
fstpt
js
cmp
add
mov
nop
fwait
js
push
dec
inc
iret
adc
mov
js
dec
sub
jne
cmp
sbb
hlt
call
orl
lds
and
call
add
cs
adc
jae
outsb
hlt
xchg
pop
loope
rol
call
push
imul
mov
adc
rcl
fdivrs
add
fcomi
xor
inc
rolb
je
mov
mov
outsl
mov
adc
frstor
lea
add
cmpsl
add
xchg
popf
negl
adc
shl
loopne
cmpsl
ds
add
cmpsl
adc
cmpsl
pop
add
pop
cmp
nop
add
loope
sub
call
je
cmpsl
mov
mov
mov
or
sub
add
rorb
push
lea
sub
es
xor
lods
mov
out
adc
or
push
xchg
std
mov
mov
lea
push
xchg
sub
std
mov
es
sbb
movsl
mov
and
adc
xchg
mov
std
mov
test
sub
addr16
sbb
or
xor
inc
mov
mov
lea
scas
repnz
push
inc
aaa
fcom
fldenv
add
or
add
inc
pop
aas
addb
mov
adc
add
push
addr16
in
fnstsw
loopne
add
add
push
add
add
es
aam
pusha
aaa
push
xor
inc
push
jmp
add
dec
hlt
push
aam
mov
adc
or
or
dec
out
add
and
xor
pop
and
and
mov
movsb
mov
or
cmpps
cmp
call
dec
mov
mov
fsubrl
push
pop
xor
mov
pop
lret
xchg
les
pop
mov
test
mov
add
or
add
rcll
push
mov
jp
arpl
ret
lods
je
pop
or
pop
and
scas
movsb
ljmp
lds
pop
xor
dec
inc
jo
scas
mov
jp
mov
pop
mov
rorb
mov
inc
mov
inc
mov
inc
jno
fxch
mov
lcall
dec
pop
mov
or
mov
xchg
shlb
mov
pop
jno
mov
je
hlt
xchg
cmp
je
nop
jp
adc
rolb
pop
and
add
mov
movsb
xor
jb
loop
mov
push
mov
subb
mov
roll
jmp
dec
dec
inc
sarb
jl
cmp
lcall
cmp
adc
mov
mov
rcrb
mov
xchg
mov
xor
add
inc
mov
lods
mov
mov
stos
ffreep
mov
adc
fwait
adc
ljmp
mov
or
xchg
sbb
add
or
popf
sbb
pushf
ja
push
sbb
imul
cltd
push
imul
mov
test
aam
cmp
orb
cs
push
mov
inc
inc
out
mov
or
ficomps
and
and
out
and
std
and
mov
push
mov
and
dec
shr
dec
lret
jb
pop
mov
cs
mov
xchg
mov
add
ljmp
sbb
mov
sub
xchg
sub
fwait
sbb
pop
xor
fwait
test
call
cmp
fs
or
js
loopne
xor
mov
xchg
sub
addl
adcb
sbb
notb
adc
pop
dec
shr
loop
fwait
cwtl
cmp
or
pop
mov
jne
fwait
gs
xchg
mov
jnp
leave
rcrb
or
fnstenv
fwait
xchg
in
inc
fiaddl
pop
sbb
dec
fwait
cmp
or
jno
nop
mov
fwait
and
mov
outsl
mov
mov
dec
cs
aas
push
outsb
dec
adc
push
push
fwait
jns
test
outsl
xchg
jl
inc
fs
pop
dec
int
jb
cmp
lahf
in
dec
sbb
add
or
or
dec
push
inc
push
outsl
pop
and
cmp
outsl
dec
inc
inc
arpl
ss
adc
jle
divl
mov
and
jp
dec
inc
outsl
call
adc
fdivr
dec
les
outsl
rol
dec
inc
sub
cmp
sbb
loopne
dec
outsl
pop
inc
mov
push
cmp
or
test
dec
call
dec
call
and
xor
sub
andl
jo
int
push
dec
popa
insb
dec
pop
add
pop
cwtl
insb
enter
fs
scas
and
add
jnp
pop
sbbb
mov
sub
xor
or
sbb
add
es
enter
lcall
mov
adc
pop
sbb
pop
movups
jmp
xchg
or
andl
pop
fs
inc
adc
dec
test
push
mov
adc
or
push
inc
inc
jecxz
sbb
mov
dec
mov
and
jecxz
sbb
loop
pop
in
inc
out
cmp
mov
inc
loop
decb
es
sbb
and
cmpl
xchg
inc
adc
ret
test
jnp
push
mov
nop
xchg
push
adc
loopne
mov
movsl
mov
out
xchg
pusha
cmp
mov
stos
loopne
xchg
adc
push
and
dec
xchg
test
sbb
add
add
push
bound
cmp
call
xchg
ret
test
nop
xchg
mov
dec
sub
fisubs
xchg
push
mov
dec
xchg
pop
adc
ret
loop
xchg
jge
dec
xchg
aad
je
fstps
cmp
xchg
mov
xchg
or
xchg
stos
pop
xchg
sub
mov
and
popf
fisubs
xchg
xor
or
in
inc
dec
aam
or
inc
or
aas
add
aaa
unpcklps
das
shlb
stc
push
jge
call
mov
adc
call
xor
clc
lret
xor
repnz
call
cmp
loopne
call
sarb
lds
xchg
das
jg
dec
call
movsb
lods
xchg
das
pop
decb
push
call
pop
call
in
call
push
jne
pop
mov
je
gs
pop
jl
sbb
cmp
ficompl
adc
cmp
xor
xchg
dec
in
es
sbb
cwtl
add
gs
lret
movsb
in
imul
adc
adcb
mov
xchg
out
shlb
xchg
mov
dec
in
jle
jae
push
in
call
in
inc
aam
lock
mov
clc
cmp
xchg
dec
sbb
adc
add
add
leave
or
leave
xchg
out
rcrb
or
loope
adc
pop
sub
sbb
sbb
xchg
lret
and
test
mov
lret
xor
cmp
movsl
jb
push
xchg
push
xchg
push
inc
gs
dec
cmp
pop
mov
push
adc
in
sbb
pop
add
pusha
divl
mov
sub
sbb
and
or
mov
cwtl
out
mov
inc
inc
inc
out
call
in
je
data16
js
mov
sbb
jb
xorb
test
daa
int
push
and
sahf
xor
cli
cmp
call
and
int
test
inc
lods
sahf
adc
pushf
mov
cli
mov
imul
mov
shrb
push
inc
cmpsl
push
push
roll
cmpsl
rorl
mov
je
test
addb
lcall
nop
test
pop
xor
mov
daa
and
pop
pop
adc
dec
or
sbbl
out
mov
mov
je
sub
mov
out
mov
cmc
pop
add
or
out
inc
call
loop
movsb
pop
pop
dec
xor
push
movsb
pop
loopne
nop
push
and
mov
dec
fsubrs
gs
xchg
dec
dec
aam
inc
cli
xchg
push
inc
pop
mov
or
call
push
cvtdq2ps
jbe
inc
rcrb
mov
xchg
mov
pop
inc
aam
pop
sbb
xchg
cmp
inc
movsb
inc
shlb
test
addb
pop
adc
jmp
hlt
push
mov
sti
xchg
push
dec
sbb
or
inc
xor
adc
xchg
and
push
mov
adc
and
xor
pop
cmp
inc
mov
adc
das
mov
mov
pushf
mov
push
jge
lret
or
pop
push
or
jb
adc
sub
add
xchg
dec
xor
adc
mov
add
inc
adc
sarb
sbb
adc
mov
fisubrs
cmpsb
ret
xchg
or
sbb
push
xchg
fs
push
push
sbb
inc
sub
dec
push
aam
mov
stos
cmpsl
push
adc
push
jne
jne
sub
ss
mov
and
sub
test
fld1
inc
cmp
xchg
push
sbb
push
sub
rorl
jg
pop
insb
xor
push
cmpb
push
dec
aam
push
pop
mov
jecxz
push
mov
stos
in
push
pop
mov
test
gs
dec
imulb
push
push
cmp
mov
push
cmp
rclb
sub
or
add
lret
xchg
dec
pushf
push
jmp
and
aam
dec
inc
sub
icebp
lret
xchg
in
je
cs
jo
cltd
sarb
push
call
gs
aaa
mov
push
cltd
shlb
fdivl
inc
xorb
sub
push
or
cmp
cltd
or
jo
mov
xchg
sub
jp
rorb
ja
sub
rcr
gs
push
adc
cltd
push
add
mov
call
cs
xor
push
jns
pop
cmpsb
je
push
add
push
lret
xchg
cmp
push
cwtl
mov
sub
xor
push
and
in
pop
fcompl
xor
and
daa
stc
sbb
fwait
shlb
mov
sub
or
inc
inc
jnp
stos
inc
inc
ja
rorl
sarl
pop
outsb
inc
cmp
sti
call
mov
bound
jnp
jmp
lods
mov
or
jnp
adc
fnsave
inc
jnp
dec
push
inc
sub
jnp
js
jmp
lcall
jl
lods
shrl
mov
xchg
testb
mov
add
nop
mov
sub
or
nop
adc
das
mov
add
sar
outsb
dec
sahf
adc
xor
xchg
mov
or
xchg
je
rolb
mov
adc
mov
fs
mov
nop
or
push
push
adc
insl
pop
pusha
arpl
xchg
insl
nop
test
xchg
lods
push
sbb
imul
and
xor
sbb
rorl
add
push
dec
mov
and
sbb
leave
test
out
xchg
je
nop
mov
int
sbb
imul
gs
inc
inc
fsubr
mov
popl
repnz
lods
mov
negl
call
add
in
push
mov
lea
sub
jecxz
xor
inc
shrb
sarb
pushf
push
je
push
mov
lds
and
pop
ja
adcl
sub
jo
sub
cmpsb
pop
rorb
mov
jl
popa
adc
mov
add
cmp
or
insb
inc
ja
bound
mov
jl
ja
mov
xchg
imul
jmp
ja
add
lds
je
xor
adc
dec
mov
or
je
push
add
mov
ja
jmp
arpl
adc
or
push
cld
add
inc
outsb
add
cld
mov
inc
gs
cld
jb
push
pop
gs
int
add
dec
inc
and
sbbb
add
sub
mov
mov
test
test
or
dec
inc
and
push
cltd
and
and
mov
dec
sbb
mov
cmp
add
call
sub
sbb
fisttpll
andl
adc
rolb
or
or
inc
pop
andl
or
and
jp
cwtl
xchg
inc
or
fwait
and
adc
andl
dec
andl
aaa
inc
and
sub
cmpsl
les
add
adc
rcrb
mov
ret
add
cmpsl
cmp
or
out
add
push
cmp
pop
dec
or
loopne
push
pop
fldl
sahf
cmp
cmpsl
add
pusha
pusha
mov
dec
push
xor
rcrb
sbb
sub
adc
push
adc
nop
mov
push
pusha
pusha
nop
popa
jnp
add
jo
loopne
and
add
sub
lods
rcll
mov
sbb
cli
push
or
daa
pop
in
fldcw
test
mov
jecxz
mov
adc
mov
add
mov
pushf
mov
test
mov
and
je
rcl
xor
cmp
xor
xor
mov
xor
pop
pop
inc
dec
xor
mov
xor
xchg
into
pop
mov
xor
test
nop
lret
and
lods
mov
aam
cwtl
mov
push
xor
out
mov
ja
inc
xor
enter
adc
xor
enter
xor
sbb
push
add
adc
nop
xchg
cmp
pop
fdivl
add
sub
ljmp
roll
mov
and
adc
cmpsb
xchg
jmp
sub
mov
movsl
sbb
lret
adc
in
fwait
jg
outsl
add
enter
cmp
addr16
or
arpl
mov
adc
push
call
mov
xchg
jne
fcoms
sub
mov
push
jb
mov
adc
or
xor
loope
mov
insb
movsl
hlt
add
dec
cld
sbb
or
les
jmp
add
add
jo
pushf
fistpl
adc
or
jp
test
inc
ss
add
or
aam
orb
and
jo
add
sub
test
imul
out
fdivr
fwait
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
imul
xchg
out
jb
adc
pop
jb
les
rcrb
loop
jb
insl
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
outsl
mov
add
jb
xlat
ret
aam
inc
mov
movsb
shl
stos
loop
and
or
cmc
adc
xchg
rclb
movsb
repz
mov
inc
fs
add
cmp
adc
dec
xchg
add
jo
cltd
fildl
test
mov
xorb
push
or
mov
enter
cmp
and
sahf
mov
xchg
test
stos
adc
adc
or
or
jbe
sar
push
mov
or
add
iret
cld
adc
push
pop
cmp
add
and
lcall
fadd
out
sahf
out
sahf
mov
lahf
out
sahf
push
ds
or
sbb
repz
aam
push
mov
sahf
out
insl
pushf
pop
push
lods
push
mov
jns
jnp
inc
push
push
sub
push
cmp
sarl
push
xchg
jl
push
iret
jnp
repz
cmpb
push
push
cmp
cmp
sbb
jns
cmpsl
stc
repnz
fmulp
mov
out
mov
ret
into
sbb
incb
ds
jnp
add
es
loop
sbb
out
aam
mov
out
outsb
pusha
sbb
iret
repz
pushf
scas
lret
or
out
lcall
jns
out
jb
nop
sahf
lods
out
sahf
out
rcr
in
xor
out
push
ss
inc
push
sarb
roll
mov
jnp
jnp
daa
rol
loop
clc
adc
sub
jns
shr
sbb
je
fs
push
cmp
vmovaps
daa
pop
mov
jbe
jne
out
add
push
ficompl
cbtw
cmpsl
insl
mov
iret
dec
test
jno
shl
gs
mov
jbe
push
scas
test
pop
cmp
adc
idivb
add
or
xor
jne
movsl
xchg
mov
jle
sub
push
js
sbb
or
dec
push
je
fsubl
add
push
cwtl
rolb
or
add
push
ja
pop
add
or
mov
es
out
mov
js
xor
andb
jb
xor
mov
fwait
movsl
pop
jae
outsl
adc
test
ss
mov
cmpsl
add
bound
add
out
xor
jbe
les
mov
push
jl
push
dec
cmp
lahf
or
das
fisubrs
sarl
imul
add
les
add
jle
outsl
inc
mov
push
lods
jnp
testl
lds
pop
pcmpeqd
and
mov
jecxz
imul
cmpb
dec
sub
xchg
stos
outsl
and
jnp
and
daa
add
ja
mov
mov
xchg
push
mov
aas
add
and
ret
je
lcall
push
cmpsl
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
cltd
aaa
xchg
movsl
outsl
rorb
dec
xchg
jb
inc
push
xchg
das
fadds
sbb
pop
dec
jg
jmp
and
pop
dec
imul
pop
jp
pop
dec
jae
inc
jne
outsb
mov
lcall
js
jg
inc
fwait
les
jnp
inc
xor
mov
outsl
push
sub
sub
sub
inc
inc
xor
xor
xor
adc
mov
inc
xor
xor
ss
sub
sub
cmp
xor
clc
inc
inc
xor
mov
aam
push
cltd
pop
add
lret
mov
cwtl
jne
test
push
jo
loopne
xchg
or
fidivrs
cmp
or
movsb
ss
xor
or
push
ret
jmp
sub
inc
aaa
adc
xor
inc
pop
dec
add
adc
jl,pn
imul
push
lock
cmp
xor
dec
and
ss
ss
pushf
xor
xchg
add
mov
dec
push
mov
in
scas
arpl
insb
clc
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
sub
out
cmp
sbb
addr16
inc
mov
lods
sahf
add
insb
mov
lods
and
adc
iret
sahf
loope
aam
xor
and
shl
jg,pn
gs
pop
test
and
outsl
xor
loop
aam
imul
fs
je
push
push
int3
ficompl
inc
cmp
sub
cmp
sbb
xchg
cmp
push
push
dec
popf
mov
fldt
inc
insb
jmp
lock
arpl
insb
mov
or
data16
ret
lret
imul
sbb
xor
xorl
pop
insb
dec
mov
inc
sbbl
pop
add
or
sbb
inc
out
adc
stos
inc
mov
pusha
push
and
clc
and
mov
jnp
push
push
shrl
push
imul
cmc
fs
jne
xchg
loopne
jns
add
scas
je
dec
fs
imul
push
imul
push
jo
loope
or
xchg
ss
roll
hlt
enter
jmp
xchg
jnp
outsl
push
pop
arpl
inc
cs
push
push
push
add
add
sbb
ja
mov
push
shlb
outsb
mov
push
popa
imul
add
leave
cmc
bound
sbb
fdivl
mov
add
mov
and
push
push
or
pop
and
dec
loopne
push
repnz
inc
sbb
rolb
and
rcrb
add
push
aas
adc
pusha
and
sbb
sbb
and
xchg
pushf
add
sbb
push
add
les
push
or
add
sub
sbb
sub
add
add
out
adc
orb
or
cmp
adc
iret
push
adc
xchg
adc
push
sbb
sbb
sbb
dec
repz
call
in
nop
add
das
push
xlat
push
and
push
and
cmp
xor
jp
push
cld
fcom
xor
repz
mov
cmpsl
sub
sbb
jbe
mov
stc
scas
push
mov
and
ret
adc
mov
bound
ret
emms
iret
sbb
cmp
cmp
es
int
push
popa
add
adc
push
cld
or
cmp
repz
fmul
les
movsb
xor
xchg
call
mov
jns
out
cmpb
out
jns
push
pop
push
repz
repz
dec
dec
inc
inc
sahf
out
lret
xor
sub
jns
out
and
sbb
adc
jns
out
or
add
iret
repz
cld
or
hlt
call
repz
mov
nop
jo
ds
repz
xor
lock
int3
out
sahf
out
mov
dec
repz
sbb
cld
push
fcom
cmp
repz
mov
js
jns
iret
repz
aam
mov
out
inc
sbb
add
call
push
int3
push
mov
add
iret
inc
mov
pop
das
les
icebp
or
inc
mov
cmp
inc
xor
js
xor
sub
mov
inc
add
adc
inc
dec
test
sarl
xor
inc
mov
mov
pop
and
adc
adc
push
mov
sub
sahf
gs
xor
mov
cmp
sub
out
pop
dec
adc
das
fstl
rcll
sbb
dec
lcall
fwait
or
daa
inc
fsubrl
xor
dec
mov
dec
jne
les
bound
adc
xchg
and
or
add
pushl
shrb
mov
pushf
andb
shrb
testb
fs
out
imul
cld
mov
inc
push
xor
xchg
cld
inc
inc
mov
add
fwait
out
mov
inc
cmp
pop
jne
pop
pop
mov
add
sbb
imul
je
imul
dec
fdivl
arpl
imul
mov
mov
jo
push
or
or
jo
bound
pusha
cmp
into
in
mov
push
push
insb
das
push
xchg
sub
leave
jmp
jl
add
ja
lahf
add
das
mov
cmp
sbb
loopne
out
test
adc
mov
mov
addb
ret
in
adc
lds
data16
pop
sarb
jg
adc
inc
fcoms
aam
mov
and
cmp
psadbw
mov
outsl
aas
int3
data16
repz
rorl
js
into
xor
and
xlat
jns
xlat
es
rcr
xorb
ss
lcall
out
mov
les
mov
outsl
mov
push
popf
xor
je
jl
in
push
aas
or
lahf
jg
cmpsb
jg
cmpsb
nop
adc
mov
mov
aaa
mov
loopne
cmp
cmp
jno
jg
enter
xchg
dec
pop
pop
outsl
pinsrw
dec
dec
and
shlb
aas
jbe
in
rdtsc
insl
mov
mov
push
aam
insb
adc
fs
outsb
movsl
out
loopne
dec
mov
movsl
jno
adc
loopne
scas
mov
lock
enter
insl
in
xor
mov
stos
fs
imul
jnp
sub
pop
add
or
daa
inc
inc
or
jnp
push
dec
imul
xor
ltr
es
push
jb
push
lcall
scas
pop
push
and
and
inc
push
push
push
add
dec
dec
cld
jae
outsl
ja
xor
jle
xchg
xor
jb
sub
add
push
xchg
jno
fsubrp
sbb
and
and
add
mov
daa
outsb
inc
lods
xor
ljmp
mov
xchg
mov
rorl
dec
push
jb
add
xchg
mov
adc
mov
jo
inc
add
insl
jo
dec
pop
outsb
pop
adc
push
imul
add
push
mov
mov
push
push
jae
push
or
jo
adc
jae
movsb
mov
push
push
mov
add
mov
movsl
imulb
lret
out
adc
cmp
and
inc
sbb
or
add
rorl
stos
and
add
push
mov
inc
xchg
mov
das
push
or
or
cmp
mov
jo
jb
jns
imul
xor
rorl
push
push
lods
ret
pop
inc
xchg
sbb
negb
mov
push
xor
ret
aaa
adc
jge
lods
mov
inc
pusha
inc
jns
inc
xlat
and
jnp
fisubl
push
inc
imul
push
or
divb
mov
add
mov
ja
or
dec
inc
add
fbld
jne
out
mov
lods
gs
in
mov
inc
rolb
sub
adc
into
test
outsb
es
pop
push
scas
xchg
mov
popa
and
dec
inc
push
nop
pop
and
push
fs
lahf
jl
sub
xor
dec
addb
cmp
cs
divl
mov
fidivrl
or
inc
push
call
sbb
jb
lahf
inc
imul
add
inc
dec
xor
sub
das
das
jecxz
call
or
adc
mov
add
push
lcall
orb
aam
in
and
pop
lods
divps
push
dec
dec
dec
pop
addr16
ss
fs
jns
xchg
fs
vmovapd
lcall
inc
xchg
and
push
outsl
mov
dec
xchg
dec
cld
push
pusha
and
roll
push
mov
inc
mov
pop
sbb
mov
lock
mov
xor
icebp
rolb
insl
imul
jb
mov
and
jo
adcb
arpl
inc
jmp
enter
xchg
cs
inc
js
aaa
dec
inc
dec
pop
or
sub
mov
sbb
and
mov
stos
inc
sbb
shll
inc
jp
scas
cmp
sub
jo
inc
arpl
popa
or
outsl
inc
pop
xchg
push
loopne
mov
fs
mov
addb
push
adcb
adc
dec
sbbl
enter
cmp
add
je
add
roll
dec
add
cwtl
push
xor
add
arpl
xor
dec
imul
add
iret
cmp
rcrb
lret
xchg
mov
sbb
out
outsl
inc
cmpsl
cmp
mov
mov
adc
mov
push
push
and
ret
jns
insb
cmc
and
cld
inc
jae
adc
add
je
or
testb
outsl
add
jecxz
xor
and
pushf
add
lds
or
cmp
cmp
into
insb
sbb
gs
push
add
and
aad
sub
or
xor
sbb
sbb
iret
fbld
lret
fbld
pop
inc
pop
lahf
mov
push
popa
scas
sub
inc
std
fwait
xchg
pop
pop
nop
loopne
ja
cwtl
aam
push
imul
push
aam
nop
pop
adc
clc
and
mov
add
mov
pop
push
insb
push
sbbb
or
dec
xchg
push
punpcklbw
out
cs
and
add
xchg
and
dec
nop
push
jns
sub
add
test
ljmp
xlat
pop
add
jbe
add
add
lcall
imul
push
and
insb
dec
dec
stos
or
ss
push
push
xchg
jmp
pop
pop
hlt
push
into
imul
fwait
and
or
adc
inc
leave
mov
or
test
add
pop
push
enter
js
lcall
mov
cmp
adc
add
clc
sahf
out
lcall
jns
out
mov
iret
repz
mov
iret
repz
mov
repnz
inc
out
sahf
out
xor
sbb
loopne
lahf
adc
in
lock
out
or
call
rcrb
sarb
out
je
push
cmp
out
sahf
out
and
adc
iret
repz
add
in
hlt
in
in
mov
repz
mov
xchg
repz
jnp
mov
js
push
inc
into
out
fisubrs
and
or
jmp
or
and
adc
scas
andb
shrb
push
divl
and
insb
push
mov
jo
adc
hlt
out
loop
pop
adc
shl
add
push
nop
mov
xchg
daa
data16
testl
push
aaa
cpuid
mov
rolb
jbe
inc
and
or
aad
sbb
mov
mov
ss
fs
inc
dec
pop
or
add
mov
mov
or
add
add
push
daa
pop
inc
mov
scas
decb
xchg
mov
inc
addl
das
orb
mov
pop
jo
add
in
cmp
sbbb
push
dec
test
and
outsb
sbb
cmp
insl
xor
movsb
sub
ret
xor
jbe,pn
and
mov
xor
xor
ds
je
add
push
sbb
xor
jae
inc
ret
mov
stos
dec
pusha
gs
imul
mov
js
and
mov
insb
and
inc
and
pop
or
adc
nopl
pusha
jne
es
popaw
pusha
dec
ret
mov
into
dec
jns
adc
mov
das
sti
ss
jo
push
sbb
stos
cmp
inc
add
inc
pop
pop
cmp
pop
fcmovbe
add
mov
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
call
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
xchg
shll
inc
ss
ss
es
jg
decl
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
ret
add
push
lock
idivl
or
aas
sbb
xor
xor
push
xor
xor
js
popf
xor
decl
scas
xor
xor
xor
xor
xor
xor
xor
mov
lcall
cld
pushl
fnsave
xor
xor
xor
out
xor
xor
xor
lcall
sbb
xor
xor
xor
fidivl
scas
xor
shlb
xchg
mov
xor
out
xor
push
ss
cltd
ss
clc
mov
ss
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
lcall
pop
test
inc
cmp
loopne
jmp
cmp
decl
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
lcall
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
test
pushl
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
inc
adc
aas
andl
decl
xor
xor
xor
jl
mov
mov
xor
xor
xor
xor
decl
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cli
filds
xor
pop
xor
jo
xchg
xor
xor
ljmp
xor
xor
xor
xor
xor
xor
push
aaa
decl
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
call
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
and
mov
pop
aas
ja
pusha
pop
call
aas
adc
or
cmp
pop
xor
push
add
jg
xor
xor
xor
xor
xor
xor
xor
ret
das
cmpsb
push
xor
xor
lcall
clc
xor
xor
jmp
sbb
test
mov
mov
nop
xor
out
in
xor
int
cmc
aas
scas
clc
xor
cmp
pop
lods
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cld
pop
jl
in
cmp
cmp
std
cmp
cmp
ljmp
mov
cmp
mov
cmpb
ds
clc
cld
fidivrl
jmp
xor
incl
xor
sbb
xchg
cmp
cmp
pushl
cld
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
scas
xchg
test
jl
cmp
dec
aas
push
imul
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
shll
xor
xor
xor
paddd
fisubrl
xor
loop
xor
xor
xor
cmp
xor
mov
xor
xor
scas
std
xor
jmp
xorb
ss
add
or
aaa
and
mov
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
sarl
mov
aaa
xor
cmp
xchg
outsl
cmp
xor
clc
jg
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
cmp
ud0
jg
cmp
popa
cmp
cmpb
cmp
push
stos
sar
ud0
mov
mov
or
cmp
cmp
cmp
cmp
cmp
xacquire
mov
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
ds
push
cmp
jae
mov
cltd
cmp
decl
ds
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
test
aas
movsl
aas
stos
aas
mov
mov
sarb
jp
push
xor
insl
stos
lcall
jg
les
fidivl
in
or
adc
lcall
xor
xor
mov
xor
xor
xor
xor
out
cli
rdpmc
push
xor
mov
jl
cmpsl
xor
xor
xlat
aaa
loopne
scas
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
jg
xchg
xor
mov
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
sbb
scas
cmp
ret
in
push
jp
cmp
fdivrl
aaa
cmp
mov
mov
data16
lcall
cmp
cmp
cmp
pop
shl
sbb
xor
or
xor
cmp
pop
aaa
pop
aaa
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
das
and
cmp
sbb
ds
xor
xchg
aas
cld
aad
or
xor
inc
xor
icebp
out
clc
pop
mov
xor
xor
xor
jl
lock
in
scas
fiadds
aaa
ret
aaa
std
pushl
loopne
aaa
repnz
or
cmp
pop
cmp
jge
mov
aas
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
fdivrs
push
aas
jne
mov
ljmp
cmp
or
mov
fwait
xor
sub
xor
dec
or
repnz
aas
xor
sbb
arpl
divl
pop
xor
fdivr
aas
cli
jmp
adc
es
dec
ss
outsb
notb
ss
in
ss
mov
cmp
cmp
mov
loopne
cmp
cmp
cld
pop
mov
cmp
jne
test
mov
sub
mov
cmp
dec
cmp
cmp
jae
lds
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
mov
dec
cmp
mov
and
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
or
sahf
loope
rol
clc
mov
in
xor
pop
xor
xor
cmp
pushl
or
xor
xor
xor
xor
xor
mov
xor
push
ud0
push
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fcmovbe
jg
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
push
cmp
adc
jbe
cmpl
cmp
cmp
push
pushl
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
jl
adc
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
add
mov
add
ljmp
jmp
loopne
adc
adc
sbb
sbb
sub
sub
pushl
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
int
sahf
ljmp
cmp
lcall
cmp
into
cmp
inc
xor
xor
test
xchg
or
mov
call
xor
les
int3
mov
xor
add
in
test
lods
xor
xor
xor
cmp
lcall
sub
xor
cmp
inc
cmp
cmp
pop
loop
push
cmp
xor
or
jg
fidivs
cmp
cmp
add
mov
test
enter
cmc
aad
clc
aam
fdivrs
fdivl
lock
pop
jge
jne
cld
push
add
or
adc
pop
clc
das
stos
sbb
and
and
sub
sub
xor
aas
fidivrs
inc
cmp
cmp
pop
cmp
loopne
sahf
cmp
insb
cmp
je
jl
cmpb
jmp
adc
push
mov
nop
xchg
cwtl
mov
jg
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
sbb
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
dec
mov
cmp
pop
bound
mov
xor
inc
xor
xor
cwtl
xor
xor
sub
xor
xor
cmpsb
cmp
fldl
add
xor
and
pusha
xor
fdivrp
hlt
fwait
in
or
or
ss
sahf
int3
shlb
aam
call
pushl
fdivs
fdivl
loopne
in
call
ss
ss
ss
das
movsb
ds
or
or
adc
adc
aaa
sbb
incl
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
pop
std
call
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
ja
mov
nop
aaa
xchg
aaa
cwtl
into
mov
jg
outsb
dec
mov
mov
mov
aaa
enter
shlb
aam
fmuls
fcompl
in
out
aaa
and
xor
aaa
hlt
add
or
mov
add
adc
sbb
cmp
in
clc
mov
mov
cmp
aas
std
pop
test
cmp
cmp
cmp
sub
ljmp
xor
cmp
push
cmp
decl
mov
mov
cmp
mov
cmp
cmp
movsl
inc
inc
inc
nop
mov
inc
add
shlb
pushl
sbb
pop
idivb
or
or
mov
jg
jl
cltd
or
ljmp
and
jge
mov
mov
sub
out
out
xchg
repnz
mov
push
add
out
xor
lret
push
addb
lods
or
dec
mov
shrb
add
movsl
add
inc
lods
or
out
int3
cmp
dec
or
adc
out
addb
enter
imul
sub
sub
xor
sbb
iret
repz
mov
lcall
sahf
add
out
xchg
adc
adc
mov
add
jle
loope
push
push
addl
sbb
clc
inc
push
sub
adc
je
sbb
jg
shrb
adc
and
and
loope
inc
aas
enter
dec
sahf
lea
clc
xchg
sub
pop
adc
and
loope
xchg
lock
pop
sbb
jne
push
mov
les
mov
fisttpl
mov
pop
les
mov
cmp
dec
push
push
loopne
adc
sub
mov
jbe
je
xor
loopne
das
inc
xor
psubusb
enter
or
add
insb
xorb
jp
cld
push
and
pop
xor
pop
or
xlat
pop
xchg
xchg
xor
add
and
in
fwait
mov
nop
push
jns
sti
or
or
and
and
ljmp
fiadds
jl
sbb
sbb
dec
shlb
sub
je
shrb
cmp
outsb
int3
cmp
inc
rclb
adc
jp
add
or
xor
or
and
or
mov
and
or
mov
pop
inc
jge
cmp
inc
push
mov
fildl
add
imul
je
pop
push
test
addb
outsb
push
push
aas
inc
add
or
nop
fisubs
inc
lea
push
push
pop
jb
cmpb
sbb
shl
jl
adc
dec
mov
aaa
jp
std
lret
inc
add
rolb
fcoml
mov
add
inc
dec
movsl
xor
bound
scas
xor
xor
add
inc
aam
enter
pop
add
fisubrl
nop
mov
movsb
lahf
fidivs
inc
cmp
andb
call
push
pop
or
aas
movsb
jno
stc
cmp
js
inc
add
ss
iret
mov
mov
mov
or
add
and
and
cltd
mov
mov
add
lret
cmpsl
inc
loopne
jmp
lret
push
sub
pop
push
cli
sti
mov
mov
adc
add
sub
mov
xor
dec
stos
push
xor
push
push
loop
sbb
inc
cld
adc
add
adc
es
jg
pop
add
fmuls
push
adc
andl
int
orb
jnp
arpl
sub
ja
fwait
jg
dec
cld
sub
or
jge
scas
cmp
outsb
shr
and
xchg
or
xchg
inc
mov
xchg
mov
sbb
ret
lock
pop
mov
add
add
cmpsl
jmp
adc
jno
lea
out
fstpt
pop
or
and
sbb
add
inc
lret
insb
inc
dec
inc
hlt
das
add
xor
pop
pop
or
or
leave
and
fadds
mov
or
mov
js
rcrb
push
leave
into
mov
ja
jnp
inc
test
sub
and
loopne
adcl
filds
lock
xor
or
jge
out
adc
out
pop
mov
dec
push
shlb
push
imul
rorb
push
mov
push
sbb
cmp
flds
sbb
push
movlps
imul
adc
inc
and
sbb
cmc
stos
add
xchg
pop
jmp
inc
or
adc
js
sbb
hlt
sub
shlb
mov
push
push
test
jmp
mov
lea
push
lea
cmpsl
pop
mov
mov
cmp
add
add
fisttps
lock
aaa
push
mov
cmpsl
or
mov
or
mov
cmp
adc
fcoms
adc
inc
or
in
cmp
shlb
clc
idiv
stc
inc
sbb
dec
popf
stc
jbe
enter
or
inc
cmp
roll
pusha
lahf
in
add
adc
pop
mov
mov
or
insl
add
mov
mov
lods
xlat
call
imul
add
mov
mov
push
outsb
fists
adc
push
ja
std
mov
mov
and
add
mov
rorl
pop
pop
add
mul
imul
pop
push
in
divl
add
adc
sub
add
dec
dec
or
xchg
adc
inc
jns
mov
mov
es
ret
pop
subl
inc
mov
sub
popa
roll
fwait
or
iret
sbb
mov
and
fwait
and
lods
iret
sbb
inc
mov
dec
iret
addl
mov
lods
imul
orl
and
inc
jo
mov
pop
or
ja
iret
xor
and
inc
iret
cmp
pop
sti
dec
push
iret
cmp
or
fildl
xor
xor
xor
repnz
test
enter
xor
gs
mov
push
and
and
xor
cmpsb
sub
repnz
aaa
xor
and
inc
or
and
aam
cvtps2pd
push
insb
arpl
or
rcrb
in
rorl
mov
andl
fld
stos
call
or
fadds
xor
mov
out
pop
or
push
mov
push
inc
add
xchg
mov
loope
xchg
adc
aad
mov
fstp
outsb
aad
cmpsb
data16
push
add
pop
out
cmc
push
push
movsb
jo
bound
adc
nop
cmc
pop
icebp
push
push
outsb
enter
icebp
scas
lods
adc
loopne
xor
sub
loop
icebp
cmp
je
adc
out
scas
outsb
cmpb
xchg
or
adc
sub
xchg
cmc
ret
adc
out
xchg
movsl
cmp
sbb
inc
dec
pop
jno
add
outsl
aas
add
inc
sbb
call
call
dec
or
out
lock
mov
mov
mul
push
jo
pop
adc
sbb
call
sti
insb
adc
mov
fcoml
dec
inc
mov
and
call
in
ja
push
hlt
mov
nop
orb
dec
jo
cmp
call
negl
call
les
pop
pop
xchg
jmp
pop
inc
test
dec
xchg
cmc
ds
pop
ret
call
es
rclb
inc
fdivr
and
dec
and
jo
and
push
fiaddl
test
push
add
pop
lea
and
adc
inc
add
sbb
inc
cmp
sub
mov
or
test
push
sbb
das
insl
or
popl
lea
lods
orl
test
or
mov
push
inc
lahf
sbb
adc
push
mov
mov
mov
or
sbb
mov
sub
xchg
pop
push
or
add
popf
xchg
sbb
ja
call
add
inc
add
and
dec
inc
mov
mov
cmp
xor
xor
add
jp
add
jns
mov
andb
fcoml
ds
nop
jae
pusha
pop
inc
loopne
inc
idivl
inc
dec
pop
push
rorl
ret
inc
ja
ss
test
cltd
shlb
ja
ss
mov
mov
and
mov
mov
xchg
test
inc
jae
cmp
andb
mov
pop
test
xchg
and
cmp
stos
mov
push
adc
rolb
hlt
add
xchg
xchg
xchg
jno
jb
pop
xchg
repz
push
pop
push
dec
inc
cmpsb
sub
cmp
xor
wbinvd
loopne
sbb
jmp
cwtl
push
movsb
mov
xchg
pop
pop
int3
and
pop
out
in
out
and
pop
nop
xor
push
push
jl
je
cmp
and
adc
push
xchg
rolb
fadds
loopne
lock
gs
jns
add
push
fwait
and
faddl
xchg
jns
xor
inc
pop
cmpsl
scas
adc
out
jbe
add
mov
jns
sbb
sbb
xor
add
or
pusha
mov
pushf
or
sbb
hlt
xchg
adcb
jns
and
popa
add
or
mov
dec
out
mov
pusha
mov
cmp
mov
hlt
sub
xchg
sbb
hlt
test
enter
pop
push
cmpsl
ret
sub
addb
cmp
sbb
sub
mov
sub
sub
and
and
sub
sub
lcall
sub
sub
sub
add
sub
sub
jb
sbb
sub
in
imul
sub
dec
shll
sub
or
shlb
sub
inc
lcall
cmpsl
inc
adc
push
pop
and
les
jo
lods
inc
cs
mov
add
adc
ret
gs
inc
repz
push
pop
mov
mov
je
push
ja
sub
inc
js
insb
into
arpl
fistl
stc
push
movsb
mov
out
or
push
lret
add
or
insb
push
sahf
sbb
mov
jle
addr16
inc
inc
adc
nop
pop
rcr
pop
inc
psubsb
push
jl
mov
inc
shrb
orb
or
inc
jge
cli
push
sub
and
rolb
mov
rorb
inc
adc
daa
jo
addb
stos
enter
inc
sub
jo
ds
sub
push
inc
iret
push
aaa
mov
lds
mov
push
jge
mov
repnz
pop
adc
inc
push
sub
bound
aas
and
jnp
sub
sahf
xchg
test
dec
xor
pop
rclb
or
addb
loopne
and
pop
enter
out
roll
mov
sub
call
arpl
gs
push
bound
mov
int
mov
outsl
jne
jmp
add
jmp
ds
iret
pop
mov
mov
sub
dec
sarb
push
and
mov
xchg
mov
mov
jns,pt
pop
add
outsb
inc
dec
and
lret
stos
dec
and
rol
inc
test
ja
and
orb
outsb
cmpsb
lcall
mov
xor
mov
es
sbb
and
and
pop
in
inc
loop
jns
sbb
push
sub
sbb
and
and
dec
insb
aaa
or
dec
sbb
sub
nop
andb
xchg
sbb
es
lcall
cmp
sahf
ljmp
xor
enter
scas
xor
push
inc
icebp
dec
cmpsb
or
inc
sbb
outsb
mov
cmpsl
xchg
mov
lods
clc
cmpsl
fstl
cmc
fisubl
xor
pop
aam
push
cmpsl
push
mov
frstor
aam
test
call
mov
cmpsl
add
add
dec
sbbl
adc
orl
sub
rol
pop
sidtl
enter
sbb
jno
aam
pop
mov
cmpsl
outsb
mov
pop
lcall
push
sub
sbb
cmpsl
les
fisubs
mov
cmpsl
mov
fsubs
mov
push
in
pop
fstl
fisubs
rorb
insl
jl
cmc
add
mov
lret
add
frstor
fsubrl
jo
lea
int
sbb
mov
push
fstl
cmpsl
lea
adc
or
sbb
mov
mov
aam
mov
add
cmpsl
lret
and
mov
cmpsl
pop
je
aam
cmpsl
nop
and
mov
or
faddl
jnp
dec
or
nop
bound
jnp
aaa
inc
cmp
ret
or
mov
outsl
xorb
mov
cmp
movsb
es
testl
jbe
in
fcoms
or
in
outsb
xorb
data16
cmp
daa
pusha
push
dec
nop
push
call
mov
add
test
into
mov
adc
test
inc
mov
or
je
lods
xorb
inc
mov
xchg
lcall
sbb
nop
mov
sbb
ret
mov
pop
lock
jnp
or
mov
xor
push
or
pop
push
ds
adc
xorb
loope
xor
orb
jns
mov
lret
jmp
js
mov
stos
hlt
mov
cltd
mov
xor
mov
cmp
dec
sbb
pop
cmp
leave
repnz
jno
je
mov
jp
js
mov
lock
aaa
xor
test
daa
xchg
mov
cmp
cmp
jle
mov
pop
int
imul
call
or
jno
bound
call
sbb
inc
nop
aad
std
jo
nop
into
adc
inc
aam
enter
bt
jo
mov
and
lret
test
jb
scas
sub
and
push
pop
add
sbb
dec
aad
jmp
sbb
mov
cmp
adc
mov
lock
pop
xor
push
mov
cli
pop
nop
xor
push
mov
pop
push
push
stos
inc
dec
enter
enter
call
cld
xchg
pop
enter
xlat
add
xchg
sub
push
cmp
cmpsl
pusha
pop
sub
inc
fidivrs
ficoms
pushf
addb
mov
xchg
mov
mov
and
repz
xchg
pop
bound
mov
sbb
xchg
pop
jb
mov
dec
add
outsb
mov
lods
ret
add
cmp
mov
inc
xor
sub
xchg
push
ret
dec
pop
enter
ret
les
lock
mov
out
lret
rorb
xor
inc
or
add
lret
mov
fdivrs
scas
int3
pop
fmull
cs
and
and
sbbb
add
jnp
repz
jp
pop
hlt
push
add
es
loope
and
call
mov
enter
jnp
inc
pop
xor
sti
loopne
out
adc
enter
jbe
fsubrl
xchg
push
sarb
rolb
cs
addb
xchg
pop
rcl
xchg
popl
gs
push
jge
mov
jle
jo
clc
adc
stc
adc
stc
ret
jo
mov
stc
push
aas
mov
stc
mov
shll
stc
push
fcomps
scas
inc
daa
xor
jecxz
cs
aas
popa
cmp
and
sbb
stc
stc
cli
sub
xchg
in
int
push
call
sbb
xchg
call
xchg
pop
xor
psubb
sub
and
pop
xor
push
daa
stc
imul
in
sub
or
daa
frstor
add
cmp
icebp
fcoml
dec
xchg
xchg
aas
and
lret
sbb
jns
ret
pop
jmp
jmp
jne
out
mov
jno
jne
iret
xor
fidivs
ja
lods
jl
fcmovnu
call
sbb
js
inc
aas
mov
bound
imul
sbb
jns
enter
outsl
adc
sbb
push
inc
adc
call
enter
mov
ret
mov
mov
xlat
sub
cmp
mov
and
sub
jmp
ret
jp
adc
sbb
fsubrp
or
mov
xchg
and
gs
or
hlt
je
add
test
jge
push
sbb
and
xchg
dec
movsl
sti
sbb
mov
nop
scas
adc
xor
subb
and
mov
push
and
rcl
and
mov
or
rcr
pushf
stos
sbb
fldl
je
sarb
mov
pop
xchg
jno
dec
push
lret
shrl
ret
adc
ljmp
mov
pop
adc
or
test
imul
sbb
shll
mov
sbb
sbb
mov
mov
pop
fstps
pop
adc
xchg
test
or
or
inc
lds
jne
pop
inc
push
push
adc
andb
pushf
sbb
adc
xchg
pop
dec
mov
adc
push
fcomps
push
xor
xorl
adc
repz
pop
cmp
adc
xor
and
jae
mov
xchg
or
ret
leave
add
mov
pop
or
adc
adc
mov
loopne
popa
pop
adc
loopne
popa
sub
sahf
inc
pop
into
leave
and
sbb
jp
xchg
cmp
in
fldcw
aam
and
add
jns
mov
shll
fsubs
mov
push
sbb
adc
inc
iret
sbb
movsl
shrb
sub
inc
mov
pop
mov
rorb
inc
bound
inc
mov
inc
mov
adc
arpl
jns
jge
mov
insb
add
adc
inc
mov
xchg
adc
das
mov
mov
lcall
xchg
int3
xor
stc
outsb
imul
or
push
adc
xchg
cltd
fnstcw
mov
mov
push
imul
inc
sub
mov
adc
adc
int3
mov
jge
out
mov
inc
cli
mov
push
imul
shlb
bound
mov
jl
mov
add
mov
ficompl
jnp
in
and
push
dec
sbb
xchg
or
xor
dec
mov
push
scas
xorb
arpl
pop
jle
sub
inc
mov
xchg
jmp
ds
test
and
addr16
call
pop
aad
dec
cmp
sub
cmp
dec
sbb
dec
sarb
jb
mov
test
in
mov
mov
pop
aad
mov
push
mov
mov
je
mov
xor
jmp
insl
lret
cmp
sbb
in
insl
lds
pop
out
aas
fistl
sbb
loope
xor
adc
test
pusha
and
lods
outsb
push
cmpsl
sahf
in
loop
jne
inc
loopne
push
adc
push
aaa
sub
or
xor
imul
loop
sub
call
or
dec
fstpl
movl
xchg
or
aaa
test
push
pop
test
nop
pop
push
leave
mov
push
frstor
ret
outsb
push
pop
dec
pop
xchg
in
outsl
push
sub
push
pop
mov
xchg
sub
stos
add
loope
sbb
cmp
ret
push
gs
inc
lret
sbbl
pop
or
or
mov
pop
mov
fsubl
sub
jo
mov
pop
jno
in
dec
sarb
mov
test
lods
stos
sbb
dec
aam
imul
add
push
and
aaa
push
jns
pop
dec
jecxz
loopne
pop
aaa
test
and
sbb
and
adc
sbb
pop
jle
add
and
or
iret
rolb
xchg
push
inc
and
out
inc
inc
ss
pop
mov
or
fldt
jmp
adc
cmp
call
in
push
sbb
scas
loopne
dec
xchg
leave
adcb
jecxz
int3
or
xchg
mov
or
pop
or
pop
pop
pop
pop
push
bound
pop
pop
push
pop
dec
mov
xor
sub
adc
or
lret
lret
lret
lret
lock
fdivrs
sarb
mov
lret
mov
test
mov
lret
lret
lret
nop
mov
js
in
pop
jns
mov
jb
sbbl
ds
inc
push
sub
sbb
and
pop
mov
push
jb
and
fstpt
leave
inc
lds
sbbl
mov
inc
push
jb
mov
and
cmp
push
pop
mov
sbb
dec
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
fdivrs
push
ret
mov
and
mov
mov
cmpb
leave
inc
pop
mov
sbbl
cmp
jb
mov
and
mov
xor
or
rorl
or
xor
or
inc
ja
or
mov
outsb
push
enter
xchg
mov
dec
xor
imul
and
int
sbb
push
sbb
mov
enter
das
and
sbb
cmp
or
jb
pop
sahf
stc
mov
enter
xor
dec
cli
daa
int
dec
cmp
mov
pushf
ret
and
pusha
test
lock
rorb
adc
into
aad
xchg
nop
or
mov
and
push
dec
sub
sbb
jns
add
js
adc
xchg
sub
xor
jb
push
leave
sub
mov
aam
push
push
push
cmc
pop
push
stos
or
ret
inc
dec
enter
call
mov
pop
dec
sti
testl
push
lcall
lcall
test
decl
imul
add
test
mov
dec
mov
ljmp
sub
inc
gs
add
or
jns
test
test
inc
pop
xchg
pushf
insl
iret
and
and
mov
or
iret
out
sub
hlt
add
hlt
mov
adc
mov
iret
xor
push
iret
mov
fldenv
js
mov
push
clc
inc
stos
xchg
movsl
iret
stos
pop
xchg
push
jl
stos
gs
movsb
mov
flds
and
jb
movsl
xor
rcrb
sarb
sub
push
lret
iret
mov
mov
cmpsb
sub
jle
xchg
and
pop
push
mov
iret
sub
push
sub
int3
gs
xor
iret
pop
inc
movsb
push
xchg
or
inc
jmp
sub
or
popf
int
inc
push
mov
sbb
iret
sub
xchg
dec
mov
iret
and
scas
imul
gs
mov
mov
add
pop
pop
push
iret
andb
shrl
iret
mov
sub
fstl
mov
jne
subb
sub
iret
mov
mov
cmp
push
loopne
mov
pop
iret
xor
push
mov
iret
sub
int
shrb
inc
fwait
and
pop
push
lret
iret
pop
lret
rorb
push
pop
jno
iret
sub
clc
xchg
call
or
iret
pop
xchg
pop
pop
loopw
and
jns
xchg
ror
in
mov
arpl
clc
push
call
xchg
movsl
sti
adc
pop
call
loop
iret
xchg
or
lods
jnp
into
and
xchg
movsl
iret
xlat
mov
test
cmp
mov
sbb
ror
inc
sbb
adc
fstl
iret
fisubrs
out
adc
mov
or
or
add
mov
adc
xchg
inc
jae
xchg
inc
roll
or
ss
xchg
movsl
iret
push
sbb
push
iret
pop
lods
sbb
sub
aam
mov
iret
dec
aaa
ret
gs
aam
lret
shlb
push
iret
das
and
icebp
int
jmp
je
iret
clc
or
and
and
ds
jnp
test
iret
stos
ja
popa
nop
stos
pop
xchg
into
sahf
iret
and
sbb
in
push
jns
mov
sub
xlat
mov
iret
pop
sbb
push
mov
iret
xchg
scas
push
xor
xor
sbb
in
cs
jbe
push
std
inc
sbb
push
mov
pop
xchg
sahf
cmpsb
stos
jg
push
and
fwait
xchg
cmp
xor
xor
dec
out
sbb
xor
sub
fstl
cmp
iret
inc
xor
cmc
aad
je
iret
lds
iret
sub
int3
andb
iret
push
sbb
add
iret
aam
xor
push
inc
iret
push
mov
clc
aad
iret
mov
xchg
xchg
aam
stos
shl
sub
push
lret
rolb
xchg
push
sahf
iret
cmp
mov
sbb
push
lret
xchg
iret
addr16
std
mov
xchg
iret
xchg
mov
fcoml
ror
jp
push
cmp
and
iret
aad
hlt
mov
xor
shrb
iret
fcompl
pop
jb
add
push
loop
or
push
andb
roll
dec
jne
mov
je
aam
pop
stos
push
movsb
inc
push
lret
shlb
rolb
ret
xchg
dec
push
xor
dec
mov
pop
pop
iret
xchg
repnz
or
adc
pusha
or
iret
jecxz
jmp
pop
jmp
iret
addr16
xlat
add
pushf
mov
les
push
iret
cmp
test
jmp
xchg
inc
mov
inc
push
iret
jg
xchg
test
iret
xchg
and
iret
and
pop
jns
ja
sub
adc
dec
lea
popa
cmp
pop
nop
int
into
bswap
lret
popa
jmp
scas
cmp
xchg
out
mov
xchg
xor
adc
cmpsb
mov
and
push
cltd
jmp
and
mov
cmp
pop
pop
mov
popf
pusha
pop
sbb
rcrb
pop
add
jmp
xor
mov
movsb
mov
and
pop
mov
daa
lcall
dec
or
push
jns
popa
adc
lret
lods
in
mov
xor
clc
xchg
sbb
cmp
mov
xor
fldl
xchg
and
or
je
add
mov
in
pushf
xchg
or
push
imul
lahf
bound
in
gs
add
or
sbb
sahf
out
dec
pusha
jo
aam
cmp
out
add
adc
push
iret
repz
bound
mov
mov
test
push
xor
jb
jns
out
cwtl
cmpsb
mov
iret
sarl
repnz
push
sub
cmp
repz
pop
data16
repz
repz
scas
loopne
out
sahf
out
stos
and
push
sahf
out
sahf
pusha
insb
jbe
xchg
movsb
ret
push
fnstsw
add
cwtl
jns
adc
jge
adc
inc
add
int
xor
shlb
repz
aam
movsb
sbb
push
fsub
repz
out
sbb
aad
outsb
cmp
int
repz
jl
push
clc
mov
es
add
mov
test
out
push
add
clc
mov
jns
daa
clc
push
mov
add
test
adc
adc
push
adc
xchg
sbb
sbb
sarl
sbb
or
out
sbb
test
sahf
pop
mov
and
iret
repz
and
js
jns
sahf
cmpsl
stc
cmp
cld
cmp
nop
jns
out
cmpsl
mov
aas
or
adc
add
jo
pop
addr16
inc
adc
ss
and
dec
xchg
out
sahf
or
sbb
iret
repz
add
xchg
hlt
call
repz
int3
enter
cmp
repz
iret
repz
mov
mov
repz
test
iret
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
inc
inc
cmp
repz
repz
sub
sbb
imul
nop
in
sahf
out
sahf
les
cmp
jnp
inc
popl
shlb
pop
dec
dec
inc
xor
cmpsl
stc
cmp
clc
mov
int3
lods
jl
out
test
in
clc
cmp
ror
movsb
js
xor
jg
push
add
in
mov
mov
push
add
fs
adcb
shlb
adc
or
cmp
and
negb
aaa
xor
push
push
add
fcomps
pop
xor
aam
inc
outsl
sub
or
jle
xor
shlb
aaa
shlb
adc
adc
shl
mov
mov
or
daa
add
and
xchg
insb
cmpsb
loope
xchg
adc
xor
jns
fistps
jo
mov
lods
insl
das
inc
add
imul
add
aaa
mov
imul
test
xor
jns
pop
pop
addr16
enter
add
or
and
test
mov
pop
lea
jl
dec
mov
enter
aas
jb
and
fs
shlb
fsubrs
inc
pop
jge
xchg
sbb
dec
xor
cmp
loope
cmp
inc
inc
insb
dec
mov
out
aas
sbb
dec
cmp
dec
adc
add
stos
dec
inc
cmp
mov
dec
pop
je
aas
repnz
es
push
int3
xchg
pop
inc
rcr
jo
fisttpll
scas
fsubl
rolb
movsb
mov
xchg
cmp
jg
lock
cli
gs
outsb
ud0
xchg
cmp
or
sub
sub
xchg
nop
imul
mov
jne
daa
mov
sub
dec
insl
inc
push
cmp
orb
inc
in
sub
or
xchg
neg
insl
iret
fldt
mov
insl
jo
jno
clts
jno
or
lcall
movsl
add
mov
std
jo
and
inc
push
adc
push
imul
daa
scas
cld
adcb
andl
push
lret
pop
pop
inc
push
test
aas
repnz
jne
push
push
arpl
lahf
xor
add
outsl
and
insb
add
pop
sbb
push
inc
sbb
xor
add
add
dec
popf
inc
jecxz
lds
filds
jno
scas
adc
or
or
arpl
rcrb
adc
aaa
mov
arpl
sbbb
dec
add
shrl
sub
xchg
shlb
pop
sub
lea
dec
xor
ret
dec
fnsave
mov
inc
xor
iret
fnsave
add
fcomps
and
lea
jae
arpl
rcrl
inc
arpl
jmp
inc
arpl
shll
aas
adc
jae
inc
arpl
lea
arpl
inc
roll
arpl
and
arpl
inc
addps
test
and
or
dec
pop
rorb
incl
sub
fwait
sbb
mov
aaa
add
add
cmp
pop
add
dec
subl
inc
aam
arpl
inc
add
cwtl
call
inc
xchg
repz
lock
xchg
testb
cwtl
iret
repz
xchg
nop
mov
cmp
pop
push
pop
dec
inc
out
sahf
out
cmp
xor
sahf
out
sahf
sub
and
sbb
xchg
int
jns
add
xchg
hlt
xchg
jns
out
in
push
in
enter
sahf
out
lods
test
mov
or
jl
je
insb
repnz
out
push
fs
push
dec
mov
popf
out
jns
push
and
add
in
xchg
out
sahf
out
enter
test
out
sahf
mov
js
cmp
repz
jo
pop
inc
cmp
jns
leave
sub
push
adc
lock
iret
repz
loopne
mov
mov
cmp
pop
dec
adc
adc
push
adc
dec
pop
cmp
push
sub
mov
xchg
lock
xor
mov
mov
adc
mov
mov
add
mov
push
or
pop
add
add
pop
call
leave
pop
jg
in
pop
enter
inc
mov
jbe
sbb
or
lcall
mov
stos
popa
daa
aas
pop
or
mov
pop
iret
fs
add
inc
bound
stos
incl
add
mov
rolb
fbld
jecxz
loopne
xor
xor
xor
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
sbb
scas
rclb
xchg
xor
xor
aaa
fbstp
arpl
jg
mov
cmp
cmp
je
clc
dec
notb
cmp
sbb
rorb
cld
cmp
sahf
fdivrs
bound
cmp
jg
mov
cmp
lret
mov
and
pop
ds
data16
lcall
add
fs
imul
aas
jecxz
call
pop
cld
arpl
inc
inc
xor
sbb
test
mov
push
rcrl
loope
out
idivb
repnz
xor
xor
and
daa
xor
ret
clc
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
jg
and
xchg
xor
or
mov
mov
sub
sub
xor
idivb
ljmp
mov
repnz
ss
xor
xor
xor
xchg
outsb
nop
icebp
xor
xor
push
mov
mov
mov
shlb
enter
push
xor
and
sub
mov
mov
xorl
out
push
mov
sbb
aaa
cmp
insb
cmp
xchg
and
adc
lock
sbb
sbb
and
and
sub
xor
jp
idiv
xchg
repnz
cmp
inc
pop
mov
cmp
sbb
cmp
or
outsl
add
dec
cmp
cmp
inc
idivb
cmp
clc
mov
cmp
add
pop
cmp
ret
jbe
cmp
call
mov
cmp
ds
ds
ds
cmp
dec
inc
push
ret
aas
mov
mov
mov
aas
repnz
and
inc
xor
outsb
js
mov
xor
xor
or
xchg
xor
xor
sbb
mov
dec
xor
aam
fimull
xor
popf
xor
dec
xor
cmpsl
repz
xchg
xchg
outsl
test
lret
push
add
ss
pop
aaa
mov
aaa
incl
mov
outsb
pop
xchg
sub
cmp
jg
ret
cmp
js
jle
xchg
ret
push
mov
mov
ret
mov
jl
in
adc
xor
clc
pop
ss
cmp
div
sbb
xchg
jb
cmp
cmp
aaa
ret
dec
push
cmp
jne
outsl
test
cmp
subb
cmp
cmp
mov
mov
sub
cld
aaa
enter
in
jmp
lock
inc
adc
cmp
xchg
xor
inc
jp
fbld
aaa
insb
cmp
cmp
cmp
cmp
cmp
sub
jg,pt
mov
push
ds
ds
clc
es
adc
and
dec
pop
push
inc
loopne
push
aas
or
popf
xor
outsb
xor
jno
test
js
sbb
clc
xor
inc
daa
inc
sbb
adc
push
xor
xor
in
cmc
xor
xor
shlb
inc
xor
arpl
jg
insl
xor
test
cli
xor
cmp
and
popf
xor
sbb
inc
ss
aaa
jnp
mov
clc
aaa
add
or
cmp
jle
pop
inc
inc
adcb
bound
or
sub
mov
xor
enter
push
mov
mov
pop
cmp
outsl
shrl
mov
cmp
stos
popa
cld
decl
cmp
cmp
cmp
cmp
cmp
cmp
scas
push
sbb
ja
cmpb
cltd
clc
fwait
fs
cmp
cmp
cmp
sbbb
sub
gs
mov
inc
outsl
out
test
decl
dec
xor
lock
xor
adc
xor
nop
icebp
fnsave
push
cmpsb
xor
xor
icebp
pushl
sub
pop
xor
jns
mov
out
test
decl
adc
sbb
das
ss
mov
mov
aaa
pop
fnsave
scas
dec
pop
cmp
push
mov
lret
mov
cmp
cmp
mov
mov
bound
imul
cmp
cmpsb
cmp
cmp
cmp
add
or
cmp
aas
iret
aas
loope
add
mov
pusha
add
pop
sub
cmp
xor
test
xchg
mov
fbld
mov
push
push
fwait
mov
xor
pop
mov
xor
ljmp
xchg
icebp
ss
aaa
gs
cmp
cmp
cmp
cmp
cmovb
and
jo
test
ja
clc
das
fsubp
xor
xor
xor
ss
jle
cmp
loopne
lock
inc
cmp
push
rclb
lock
dec
ljmp
fwait
daa
cmp
mov
xor
adc
fwait
popa
sbb
and
je
cmp
clc
push
jl
sbbb
popa
jl
cwtl
xor
or
lcall
mov
movsb
jle
lret
mov
data16
outsb
sbb
pop
hlt
push
add
stc
adc
cmp
movb
fs
push
mov
jl
enter
mov
fs
mov
mov
fcmovb
xor
int3
xor
fs
sub
fsubr
loopne
int
or
call
cld
adc
xor
adc
xor
push
pop
xor
movb
mov
push
xor
pop
xor
push
cli
xchg
popf
mov
xor
pop
fs
movsb
xor
gs
icebp
shlb
ret
sarb
lock
lods
int
xor
jo
je
xor
lcall
popa
push
cmp
push
sarb
push
jo
bound
loopne
mov
mov
mov
add
stos
fmull
roll
fsubrs
xor
clc
mov
inc
xor
xor
xchg
xor
xor
push
shl
add
bound
xor
pusha
xorb
xor
movsb
rolb
aam
into
sbb
push
enter
sbb
daa
pop
pop
aam
pop
fmull
xor
jno
inc
hlt
xor
xor
dec
out
data16
outsb
xchg
sub
xor
jb
push
push
stos
in
xor
cld
cmp
inc
xchg
dec
cli
orl
xchg
push
lcall
insb
xor
add
js
jl
xorb
mov
xor
xchg
rcrb
test
lods
and
xor
jo
ficoms
test
xchg
xlat
mov
lods
and
sub
xchg
xor
nop
inc
pop
test
ljmp
cmp
add
mov
shrb
and
incl
pop
push
test
xor
xchg
sub
out
sbb
inc
into
cmp
fnstcw
icebp
push
push
jle
pushl
mov
bound
push
pop
call
ja
insl
sahf
push
xchg
push
test
jmp
shrl
or
push
nop
ud0
in
cmp
mov
sar
decl
and
fsub
ljmp
sahf
jo
adc
xorb
sbb
movsl
decl
mov
push
insb
in
jl
test
add
int
push
fdivl
push
dec
scas
jno
mov
inc
outsb
lock
pop
xor
rclb
mov
ret
jge
xor
cmp
aaa
inc
into
mov
call
cli
cld
loopne
inc
mov
cmpsb
and
or
xchg
jns
sbb
fstpl
decl
ja
mov
sbb
shrl
insl
mov
mov
aad
fsubs
in
mov
lcall
fwait
mov
sbb
scas
ret
inc
pop
stos
jns
orl
xchg
jne
in
scas
out
add
mov
out
xor
ja
push
mov
xchg
dec
das
insb
and
call
xlat
rcll
pop
xchg
sub
and
sub
outsb
lds
roll
incl
push
sbb
leave
jecxz
out
xchg
xchg
je
cli
div
daa
ljmp
adc
jbe
lods
out
shl
push
xchg
cmp
repz
pop
xor
xchg
xchg
in
pusha
jne
mov
in
cmp
sbb
dec
mov
sub
sbb
mov
fnstenv
pop
icebp
scas
lcall
insb
add
ret
in
jmp
cmp
inc
mov
sbb
arpl
sarb
ljmp
mov
dec
xor
inc
jae
cwtl
xlat
or
adc
dec
add
ljmp
mov
lcall
inc
and
bound
xor
pop
inc
ljmp
lds
sbb
ljmp
out
das
lods
xchg
mov
into
lcall
iret
ds
xchg
inc
adc
stc
pop
lahf
cmp
sub
xchg
sbb
pop
std
repz
jno
mov
push
not
stos
popl
pop
pop
sub
ljmp
ja
or
rolb
pop
out
loop
sbb
mov
mov
xor
push
imul
ljmp
ds
xchg
in
and
stc
inc
xchg
xchg
or
cmp
cld
dec
sub
icebp
pop
adc
push
cmp
call
push
es
xchg
scas
insl
int
in
sahf
inc
push
cmpl
das
sub
out
jl
scas
ljmp
dec
bnd
lahf
arpl
jp
jo
jmp
mov
and
mov
mov
call
ds
cli
inc
aam
push
fildll
xchg
mov
aam
lods
mov
mov
cmp
fldcw
pop
mov
xchg
or
cmpsl
je
inc
pop
and
imul
jg
sarb
mov
sti
arpl
imulb
or
ds
pop
adc
fwait
decl
inc
subl
fidivs
cmp
pop
push
sbb
mov
out
decl
lods
je
lds
mov
mov
inc
bound
dec
into
cmp
xlat
and
jmp
mov
std
push
sub
xchg
fld
rclb
lock
xchg
mov
aas
leave
pop
xor
inc
xchg
mov
fdivrp
das
cli
pushl
or
ret
jo
jno
adc
cmp
jns
mov
dec
jle
xchg
gs
js
sahf
loop
fxch
sub
xor
pop
fnstenv
cmpsl
dec
psadbw
decl
and
filds
jmp
jle
ret
pop
jmp
dec
cmp
jnp
push
lcall
and
mov
ljmp
xchg
aaa
dec
xchg
and
sbb
jmp
inc
xchg
xchg
dec
rcl
cld
clc
inc
cmove
popa
adc
sub
in
decl
push
pop
ret
add
data16
ljmp
mov
cmpsb
test
or
fcomip
pushl
dec
and
or
test
or
cmp
subb
adc
insb
jmp
rcll
test
test
mov
decl
lret
popa
ror
jge
int
leave
jl
fistpl
add
inc
sti
push
mov
test
call
ficoml
inc
fxam
add
daa
add
call
iret
pop
pop
xchg
xchg
out
sbb
and
cs
scas
pop
jp
adc
test
lcall
cli
pop
and
les
add
dec
mov
data16
std
jmp
cmpsb
ljmp
mov
aas
mov
in
cmp
es
rclb
ss
jb
lods
add
adc
into
aam
ficompl
lret
jecxz
iret
xlat
mov
add
jmp
pusha
sarl
cmpb
dec
sti
mov
mov
arpl
call
pop
push
hlt
out
lock
stos
jo
xorl
cmc
popa
mov
fstl
pop
inc
decb
pusha
clc
xchg
scas
rcrb
lds
xor
hlt
push
jb
sahf
sbb
cmp
out
addr16
sbb
ljmp
test
sub
cmp
ljmp
stos
jmp
dec
adc
jmp
ljmp
enter
or
pop
in
aas
lds
daa
lcall
ljmp
push
scas
cmpsb
leave
inc
movsl
popf
pop
insl
dec
cmp
xor
jns
test
mov
enter
cmp
call
or
xchg
loopne
xor
dec
lret
sahf
inc
push
punpckldq
into
out
incl
iret
adc
inc
orb
mov
scas
js
adc
push
pop
adc
shlb
inc
ss
fldcw
push
sub
xchg
xchg
arpl
popa
push
jbe
mov
xchg
sbbb
sbb
js
fstps
cmpsb
jae
lret
test
xchg
in
packsswb
call
ljmp
call
nop
pop
and
movsb
rol
pop
scas
mov
rcrl
xorb
dec
xorb
dec
sub
xor
jp
mov
fimull
add
xor
out
cmpsl
push
movsl
mov
leave
inc
mov
arpl
call
aam
js
xchg
ds
shlb
push
add
pop
jl
outsb
cltd
stc
rcr
mov
pop
sbb
icebp
pop
push
add
inc
xchg
enter
daa
jne
jmp
dec
adc
jg
cli
mov
jns
jb
or
sub
sbb
cld
fistpll
jnp
in
iret
in
jmp
dec
lods
lcall
jb
out
pop
cltd
jo
fnstsw
lret
mov
js
jecxz
sub
ja
sbb
sti
push
dec
or
addb
cmc
ljmp
lahf
xchg
mov
jno
mov
cli
or
mov
xor
add
call
mov
adc
cltd
shlb
cmp
pushf
sbbb
lods
cs
jmp
mov
xchg
in
add
sti
scas
pop
icebp
sub
es
xchg
xor
les
shr
push
push
inc
ficoml
push
ljmp
pop
jg
inc
push
jno
adc
pushf
imul
loop
and
pop
and
mov
es
xchg
cwtl
adc
pushl
test
adc
fstl
push
sub
or
jo
std
call
clc
loopne
inc
pushf
push
test
andb
pushl
cmp
faddl
test
mov
or
sub
dec
pop
dec
incl
sahf
add
insb
pop
test
mov
enter
and
fidivrs
lcall
mov
sahf
pop
ja
mov
in
shlb
adc
idivb
jmp
mov
pop
sub
adc
aaa
push
fs
fdiv
jg
das
pop
into
stc
ret
test
nop
pop
fisttpl
fs
dec
addr16
cld
lahf
aas
lea
cltd
cmp
add
cmpsb
call
adc
pop
mov
leave
or
popa
jg
dec
xchg
incl
cmp
lahf
adc
and
lock
lods
movsb
ljmp
scas
shlb
and
popa
icebp
cmpsl
addr16
int3
push
sub
mov
mov
gs
jmp
mulb
lea
add
gs
cmp
push
inc
jle
call
add
xchg
xorl
inc
jno
fnstcw
mov
lea
mov
iret
pop
xchg
xchg
or
ljmp
ret
cmp
dec
xor
imul
lcall
sub
and
out
outsl
sbb
xor
outsl
orb
lcall
incl
pop
sub
es
in
add
insb
mov
aad
add
ljmp
out
dec
cmp
cli
ljmp
pusha
xchg
jg
push
mov
mov
sub
rol
xchg
dec
lods
aaa
fildl
mov
sub
decl
shrb
jbe
hlt
pushf
and
jg
clc
stc
fsubrs
test
add
cmp
inc
jbe
shl
cli
jmp
pop
loopne
lock
cmp
cmp
sub
add
lahf
test
mov
cmp
jns
or
or
dec
jp
mov
cltd
sub
lods
nop
lahf
jle
loope
pop
mov
data16
fcomip
call
add
mov
adc
sbb
sbb
out
in
dec
inc
lret
and
adc
push
fnstsw
adc
int3
imul
mov
subb
pop
ja
add
and
add
xchg
cs
decl
in
shlb
mov
pop
mov
data16
sub
bound
inc
mov
add
lcall
cmc
pop
inc
adc
xchg
xchg
dec
jnp
jmp
testb
scas
pop
mov
jge
xorl
dec
adc
pop
sahf
imul
xor
nop
push
mov
sbb
fwait
jns
arpl
popa
imul
inc
inc
fadds
xor
sub
decl
inc
mov
outsl
lods
test
lcall
clc
stc
or
pop
cmp
aaa
inc
jnp
decl
shlb
sub
mov
mov
jns
cmp
xchg
out
xchg
sub
mov
out
lcall
inc
push
inc
loope
add
adc
and
cmc
cmp
and
dec
movsl
inc
dec
cmc
dec
repz
inc
test
cmp
pop
mov
mov
inc
ret
data16
mov
inc
mov
sbb
icebp
mov
or
jg
jl
adc
fcoms
icebp
lods
clc
cld
cmpl
push
mov
mov
negl
testl
lods
or
pushl
push
inc
dec
fidivrl
ja
sbb
mov
mov
out
aam
incl
clc
js
repz
ror
dec
xchg
test
mov
insl
popf
js
and
incl
sbb
lahf
ret
inc
push
int3
push
mov
or
add
inc
aaa
es
incl
push
add
xchg
push
fisubl
push
and
addb
loop
mov
push
inc
popf
jb
mov
ds
mov
push
les
cwtl
sub
ss
aaa
lea
pushl
adc
daa
ljmp
fsubl
and
rcrl
ja
outsl
pop
mov
jp
movsl
push
fs
add
lret
xlat
dec
inc
fiadds
cmc
stos
rep
pushf
ljmp
adc
vcmpeq_ussd
lea
jno
push
xchg
notl
aam
mov
cmc
push
pop
sbb
mov
push
pop
jl
or
jmp
push
jnp
aas
xchg
adc
stos
loop
into
push
pop
push
addr16
cld
mov
inc
jmp
test
adc
scas
sub
aaa
movsl
sbb
xor
or
pop
push
das
cli
cmp
cmpsb
pop
cmp
jne
xor
jb
push
inc
iret
inc
xchg
jle
cli
clc
xlat
sub
mov
add
mov
fcos
mov
mov
inc
sub
adc
loope
repnz
xchg
mov
insb
cs
fwait
add
xorb
jb
out
push
dec
mov
jne
mov
pushl
xor
mov
enter
push
dec
or
mov
cmp
nop
add
ja
mov
xor
arpl
int
lds
fcmovnbe
fisttpll
xchg
test
push
setl
sub
ljmp
in
push
shl
fsubs
imul
shll
jae
lods
jo
push
lret
jg
icebp
gs
test
mov
shlb
mov
lcall
ja
pop
popl
mov
mov
iret
cmp
mov
mov
ja
sbb
call
xor
jb
fwait
xchg
stos
mov
xchg
inc
mov
call
ret
dec
mov
adc
inc
mov
mov
sub
jo
lcall
inc
fcmovne
adc
mov
sti
into
jb
sub
ljmp
insl
jecxz
div
pop
addr16
inc
cmp
xchg
loopne
aas
adc
loope
inc
push
and
loope
cmp
sub
jbe
adc
cmp
dec
mov
dec
add
idiv
lcall
dec
loop
stos
push
clc
in
lds
sti
sbb
sbb
mov
stos
fmul
fnsave
push
push
cmc
decl
dec
lods
adc
sbb
ss
lock
stos
xor
cmp
movsl
subb
arpl
pop
adc
call
cld
sarl
add
xorb
sub
xchg
insb
mov
in
shr
push
mov
jmp
inc
repnz
int3
not
fwait
mov
jnp
push
jecxz
movsl
popa
adc
sbb
jle
les
sbb
mov
jge
in
into
nop
out
push
outsb
jo
cmc
std
adc
into
inc
sub
sar
jmp
push
sarl
push
loop
pop
push
xchg
data16
movsb
or
mov
adc
int
sub
fs
call
sbb
inc
and
jnp
inc
movsb
repz
sbb
das
jnp
js
mov
scas
stc
jb
test
dec
sbb
sub
outsb
cmp
push
push
fnsave
jae
inc
xor
sub
arpl
rcll
fisubrl
pushf
scas
iret
loope
push
adc
loop
mov
aaa
pop
xchg
jecxz
lret
inc
xorps
inc
pushl
xor
jecxz
movsb
es
xchg
mov
data16
push
std
decl
bound
aad
xchg
push
cmpb
sub
test
mov
push
jmp
out
and
cmp
outsl
push
jnp
fidivrl
addr16
out
je
ret
pop
sbb
inc
lahf
ret
daa
push
mov
and
dec
jmp
cmpsl
fwait
add
adc
call
mov
cld
mov
lcall
into
push
inc
outsl
jg
clc
cld
jg
mov
dec
stos
ljmp
mov
stc
cmpsl
mov
mov
mov
cmp
jo
repz
into
pop
jo
mov
sbb
in
rclb
movsb
xchg
cwtl
mov
fbld
pop
add
inc
fwait
mov
insb
data16
jp
dec
in
and
mov
sarb
or
test
lcall
mov
cltd
fcoml
sbb
in
mov
incl
add
add
ljmp
mov
insb
ss
call
jns
divps
daa
cwtl
ret
mov
sbb
xlat
fldenv
push
mov
shlb
mov
cmp
int
lods
pop
cmp
dec
sbb
ret
push
push
jle
enter
adc
xchg
or
sarb
incl
adc
jmp
pop
xchg
clc
sbb
in
out
stc
cmc
cmp
frstor
mov
decl
ljmp
adc
aam
adc
jmp
adc
jle
loopne
cltd
jmp
pop
lret
pop
inc
nop
or
jl
mov
ds
jge
ljmp
sti
or
fstpt
mov
mov
scas
in
enter
lock
cwtl
push
jae
sahf
loop
cmpsb
incl
xchg
lret
add
jae
in
mov
add
pop
cltd
mov
mov
and
cli
shlb
out
xchg
int
imul
push
mov
pop
sbb
ret
lahf
int3
mov
push
jb
enter
decl
in
adc
xchg
push
jmp
testb
movsl
fldenv
adc
rcr
in
fs
cld
sub
adc
fcoms
cli
scas
stos
jge
mov
lds
mov
jg
aaa
pushf
stos
int3
dec
in
xchg
insl
sub
or
xor
dec
xor
incl
adc
ljmp
adc
hlt
add
js
adc
jmp
sbb
fimull
rcl
jecxz
das
inc
xor
test
xchg
cmp
ss
push
je
lcall
lock
or
push
sbb
pop
push
imul
pusha
ror
inc
mov
aam
jl
jecxz
out
push
call
fsub
or
das
repnz
or
add
dec
xor
unpckhps
shll
adc
js
inc
jae
and
decl
aad
loop
and
cld
adcb
adc
add
jb
ja
dec
inc
and
insl
sarb
loope
mov
mov
mov
int3
lods
call
cmp
add
pushf
sbb
jl
fbld
lret
cmc
inc
sarl
sti
push
jmp
movsl
jb
push
and
dec
dec
xor
iret
inc
es
lahf
mov
jp
or
adc
lahf
push
mov
test
push
lock
inc
out
adc
ljmp
ds
mov
scas
pop
les
dec
lods
mov
mov
mov
call
inc
inc
stc
clc
je
mov
add
fimull
or
cwtl
or
adc
incl
inc
xor
clc
pop
fs
jbe
rolb
adc
test
shlb
cmpsl
mov
cli
cld
xchg
xor
sub
mov
aad
lods
push
push
scas
cmp
xor
adc
repnz
add
ja
out
dec
pop
xchg
enter
xchg
bound
aad
call
cld
add
or
cmp
cmp
xor
push
mov
pop
jne
cs
jmp
imul
pop
pop
dec
sub
bound
daa
cmp
xchg
sbb
cmpsl
stos
dec
std
dec
sets
dec
xor
push
rclb
mov
arpl
xor
or
push
ja
in
sbb
jns
push
pop
xorl
adc
cmp
lcall
jne
lds
inc
xchg
gs
cmp
mov
push
sbb
into
int3
mov
ljmp
clc
jge
sub
jae
xorl
mov
cmp
and
cmp
lcall
lods
jmp
imul
fsubrl
lahf
cmp
loop
ror
enter
iret
jl
adc
dec
in
aam
out
jmp
test
xchg
xor
or
out
ljmp
scas
imul
rol
adcb
stos
in
and
mov
sahf
and
call
ljmp
jge
xchg
push
mov
xor
add
iret
cmc
mov
test
inc
in
sbb
lods
ds
mov
das
cs
or
xor
int
enter
test
stos
loope
imull
call
add
add
neg
add
jbe
jo
dec
nopl
int
and
mov
call
fstpt
daa
xchg
mov
mov
inc
jp
je
out
popf
das
cmp
push
insb
dec
dec
lds
call
push
adc
mov
inc
mov
inc
movsb
dec
pop
loop
jnp
in
mov
sarl
pop
and
notl
xchg
scas
ficoms
inc
jns
adc
pop
adc
enter
xor
movsb
xor
mov
les
push
add
repz
push
rclb
int
mov
iret
push
adc
xor
mov
inc
push
lods
push
xchg
push
jo
and
nop
outsb
mov
jmp
repnz
xchg
pop
movsl
lret
and
imul
or
imul
ja
sar
js
push
fisubl
in
aas
mov
pop
fsubs
ja
or
sbb
std
sub
jg
lcall
xor
arpl
int
daa
shlb
add
pop
sub
or
push
mov
jg
fcomip
and
dec
test
fldl
adc
pop
popf
rcrl
ljmp
add
inc
lret
sub
sbbb
call
movsb
les
negl
ret
cmp
icebp
ljmp
int3
pop
fldl
xchg
icebp
popa
xor
test
xchg
xchg
inc
sub
das
movsb
push
in
jl
das
adc
roll
cmp
decl
popf
dec
dec
addr16
jb
dec
fs
movsl
xor
jle
stc
out
adcb
fdivrp
decl
mov
stos
xchg
inc
mov
cwtl
sub
pushf
sub
mov
xchg
ret
add
push
cmp
cmp
cmp
cmp
and
jecxz
js
stos
xchg
pop
mov
aas
and
pop
aas
lock
xor
sbb
mov
push
push
ss
jmp
das
push
dec
loop
pusha
mov
nop
fnsave
aam
add
insb
xor
xchg
mov
pop
mov
lcall
or
cs
inc
push
fstpt
mov
into
pop
xor
ret
fidivl
mov
inc
ret
out
lds
pop
cltd
fldt
dec
inc
adc
and
fbstp
xchg
incl
mov
cmp
lock
push
push
addr16
in
decl
lock
sub
int
mov
push
aas
mov
jnp
aad
pusha
scas
js
loope
pop
cmc
std
xchg
dec
lret
int
shrb
xchg
fnstsw
sub
fwait
int
dec
incl
mov
ljmp
pusha
divb
push
test
mov
data16
inc
push
bound
jbe
inc
inc
sbb
sbbb
push
mov
and
cmp
les
lea
mov
jne
dec
lcall
test
leave
adc
jp
mov
rcrl
js
mov
xor
out
stc
lcall
incl
push
jnp
gs
sub
ljmp
xchg
add
clc
pushl
insl
mov
inc
sub
addb
ffreep
or
xchg
cmpsb
sbb
fistps
xor
cli
mov
jb
loop
xchg
scas
inc
jge
fsts
outsl
pop
scas
icebp
pop
das
or
push
mov
repnz
pop
mov
cmp
adc
imul
mov
insb
push
in
popa
xor
call
loope
clc
push
lock
in
xor
pop
inc
cmpsb
std
and
mov
fucomip
or
xor
push
adc
and
xchg
mov
faddl
lcall
lcall
pop
jb
fistpll
dec
sub
dec
pop
dec
negl
and
or
out
stos
jno
stc
mov
sub
call
fcmovnb
and
daa
jne
add
pop
orl
mov
mov
sbb
push
xorl
pushf
sbb
rclb
in
out
push
sarl
jp
test
jmp
and
mov
push
adc
xlat
jl
mov
pop
mov
shlb
mov
call
and
test
mov
and
xchg
icebp
cmc
aam
std
mov
xchg
popf
jmp
ficoms
push
ljmp
sar
mov
leave
cld
fwait
mov
push
cwtl
test
hlt
xor
ljmp
pusha
pop
jo
popa
cmpsl
xor
cmpl
fmull
pop
les
pop
std
in
lret
ja
in
gs
xor
xor
pop
cli
repz
hlt
bound
fwait
fwait
outsb
adc
and
pop
out
mov
pop
jle
insb
inc
scas
aaa
push
push
push
enter
add
popf
nop
sar
lcall
jae
ficoml
push
or
xor
data16
cmp
ljmp
xlat
rorl
lcall
std
les
mov
int3
push
dec
mov
ljmp
divl
push
push
push
pop
cmpsb
jns
in
adc
pop
xchg
mov
sub
outsl
clc
incl
push
mov
push
subb
xchg
ffreep
mov
ret
sub
int3
aas
mov
ljmp
js
sub
jb
mov
dec
jle
mov
ret
inc
nop
dec
jbe
mov
sar
incl
xor
out
and
lahf
aam
mov
push
shrb
xlat
decl
lock
push
and
dec
mov
and
call
movsb
je
call
add
repz
cmpsl
stc
inc
dec
mov
lods
mov
sub
adcb
clc
es
inc
arpl
fs
cmp
pop
and
fsubrl
rcll
jo
pop
loopne
dec
ficoml
fadds
inc
repz
scas
lahf
cltd
inc
push
decl
rclb
pop
lds
hlt
stc
mov
icebp
mov
fisttpl
jmp
push
icebp
es
jg
out
sbb
push
stc
add
aad
xchg
test
xor
xor
pop
mov
ljmp
cli
pushl
adc
dec
inc
clc
xor
inc
mov
sti
xor
jp
adc
cmp
adc
ficomps
mov
movsb
xor
mov
push
dec
or
je
xor
sub
add
pop
cltd
insb
dec
cmc
loope
adc
leave
mov
icebp
cmp
mov
mov
push
in
pop
add
data16
xchg
mov
cld
xor
ss
jb
ss
and
jle
sub
jmp
fxch
fsubr
xchg
call
lods
pop
cmp
shll
cmp
push
xchg
add
outsl
sti
mov
sub
and
loope
sbb
inc
jge
cmp
cld
dec
ds
jae
lods
jg
push
lcall
inc
clc
sbb
shlb
movsb
cmp
xchg
and
xor
jmp
mov
mov
xchg
cmp
push
mov
jmp
sbb
push
xor
dec
or
mov
sbb
push
nop
xchg
adc
pop
xchg
mov
cld
pushl
inc
shlb
mov
and
cwtl
data16
test
dec
aas
sub
fcmovb
and
xchg
push
repnz
sub
jnp
ds
pop
fcom
xlat
xchg
aaa
mov
mov
mov
dec
pop
std
mov
js
mov
or
xchg
clc
push
dec
and
sub
pop
mov
sar
out
cld
pop
push
dec
jle
jge
popf
mov
nop
std
or
jns
in
fisubrl
fdivrl
ja
mov
pushl
mov
xor
arpl
sub
shl
ret
pop
fsubs
decl
xchg
jg
push
fisttpl
or
rcr
sub
sbb
test
lcall
fs
bound
xor
jbe
mov
imul
inc
sub
lcall
and
adc
sbb
hlt
xchg
sbb
lds
xor
mov
mov
sbb
sbb
adc
mov
xchg
jb,pn
ss
cld
add
sbb
ret
jmp
dec
or
push
sub
add
xor
inc
xchg
into
and
leave
data16
mov
inc
push
cld
notb
xchg
jle
cld
sub
adc
jmp
jbe
cmp
xor
es
adc
or
pusha
sbb
std
popf
push
xchg
outsl
push
mov
jg
pop
test
sbb
add
cmpsb
sbb
in
ljmp
and
push
hlt
add
xchg
fcmovne
xchg
call
jp
movsb
or
imul
gs
std
in
xor
out
pop
cltd
xchg
jg
dec
in
icebp
cmp
incl
add
insb
stos
fcmovu
cmp
jne
sbb
sbb
adc
decl
sti
scas
std
pop
and
ja
dec
and
popf
mov
cld
inc
lcall
aam
bound
pop
mov
mov
mov
mov
mov
jmp
lods
shrb
cwtl
mov
int
dec
dec
mov
lds
bnd
ljmp
pop
je
cs
or
insb
cmp
dec
ret
into
push
inc
xor
ficomps
int
mov
adc
pushl
scas
add
cmp
mov
test
arpl
or
rcll
loopne
pop
sub
nop
sub
xor
xchg
adc
jecxz
sahf
jns
popf
push
ud0
out
xor
mov
jecxz
icebp
les
je
pop
aas
cmpsb
ljmp
popf
pop
push
sti
push
cmc
mov
iret
sbb
pop
add
in
sbb
add
fwait
jg
jecxz
push
ret
lcall
push
out
lret
jge
mov
filds
and
jmp
and
jl
jnp
loop
sbb
cmpsb
pcmpgtw
mov
or
and
pop
rcrl
sub
dec
mov
mov
xchg
xchg
xor
mov
incb
addl
xchg
push
dec
inc
cs
test
add
lods
lcall
cmp
lods
add
lds
rorl
jbe
subb
pop
mov
push
test
pusha
stos
sbb
push
and
cltd
loopne
frstor
dec
inc
je
cmpb
push
adc
into
mov
call
xor
inc
cwtl
inc
mov
int
fisubl
mov
imul
sub
lret
notb
incl
pusha
lock
cwtl
movsb
frstor
int3
cmpsb
pop
jg
xor
cmp
mov
inc
xchg
jp
pop
push
add
mov
outsb
push
loop
mov
jo
das
xchg
push
pop
dec
sbb
pop
push
imul
pop
add
or
imul
int3
leave
test
jg
lock
test
adc
jmp
pushf
xor
dec
popa
and
sub
add
jmp
sbbl
sub
ds
mov
mov
jge
retw
pop
scas
push
fsqrt
sub
pop
cmc
imul
daa
or
xor
add
ljmp
add
aaa
sbb
lods
sar
inc
or
imul
mov
xchg
and
adc
int
mov
lcall
mov
sbb
int3
mov
sub
rcll
xor
les
ja
xchg
movsl
mov
idiv
incl
or
dec
sub
rcrl
ss
push
inc
into
lret
dec
test
loopne
imul
add
mov
jae
inc
pop
adc
scas
hlt
xchg
sarl
jg
xchg
out
lret
pop
inc
xchg
push
insl
mov
dec
in
stos
nop
test
aam
out
out
in
cmp
popa
mov
mov
xor
rorb
ds
fnsave
sub
ffreep
addr16
icebp
add
ja
add
adc
mov
and
push
jmp
mov
mov
inc
cmp
scas
lock
xchg
adc
inc
push
mov
movb
sbb
and
leave
iret
jno
lea
inc
ljmp
jmp
mov
pop
cli
jmp
mov
xor
cmpb
sbb
inc
pop
xchg
subb
cmp
mov
out
outsb
pop
out
adc
push
or
sub
mov
pushl
std
jp
mov
movsb
mov
ficoms
stos
test
js
add
call
cmpsb
mov
mov
mov
popf
lock
add
test
test
gs
push
aaa
cmp
inc
mov
daa
xor
bound
push
mov
aad
mov
and
fdivr
std
mov
or
cmc
cmpsl
xchg
or
cmpsb
mov
pop
add
ds
add
call
xor
mov
jb
loope
scas
sub
inc
xor
scas
and
jp
call
mov
ror
inc
xchg
xchg
and
inc
leave
test
mov
mov
sahf
scas
cli
jmp
adc
cmp
xchg
lahf
ret
movsb
imul
inc
xchg
mov
dec
mov
mov
inc
add
negl
fsubrs
push
xchg
dec
mov
jmp
cmp
dec
sbb
dec
mov
inc
add
sbb
decl
fsubp
stos
xchg
js
add
sub
cmp
fnstsw
pop
mov
add
stos
adc
push
cld
dec
and
cmpsb
daa
lods
imul
push
ret
lret
inc
add
scas
mov
scas
insl
call
mov
sti
sti
jmp
pop
push
int3
sub
xchg
bound
orb
push
jns
mov
repz
jb
adc
insb
gs
xchg
shlb
pop
pop
xchg
jecxz
push
shl
lcall
push
loopne
outsb
inc
repz
ljmp
popf
sbb
mov
or
ljmp
xchg
sbb
mov
das
cli
test
test
mov
adc
inc
aad
mov
jg
push
mov
stc
inc
mov
sbb
fiaddl
mov
lahf
cs
jbe
ljmp
jns
outsb
clc
dec
xchg
stos
mov
push
sub
das
shl
inc
sub
pop
sub
mov
mov
cmp
imul
ja
lock
mov
repz
sub
decl
add
int3
or
aaa
or
dec
xlat
mov
movsb
cwtl
pushl
mov
inc
or
jl
push
mov
jp
or
rclb
sub
jp
insl
cmc
ss
pop
cs
leave
cmp
ds
gs
cmpb
cmc
push
in
pop
push
test
call
xchg
jle
fstpl
insl
adc
add
jo
neg
jb
adc
jo
jl
divl
pop
popa
test
call
shlb
or
lret
mov
pusha
mov
es
jbe
add
cmp
mov
pushf
cmp
push
push
fs
sub
sti
in
fwait
xchg
cld
xor
push
decl
xor
in
ret
cld
clc
ret
stos
xor
dec
pop
mov
cmp
incl
andb
dec
adc
call
inc
jmp
mov
out
pushl
add
test
xlat
rorl
mov
mov
decl
mov
sub
in
cmovle
out
adc
stc
cwtl
sahf
push
or
or
inc
sbb
cs
shlb
sub
inc
addr16
push
push
xchg
in
cli
in
rcll
cwtl
imul
icebp
sbb
shll
adc
in
dec
in
mov
call
lods
mov
addr16
lods
in
push
push
mull
add
shrb
add
incl
cmp
mov
lahf
lcall
push
push
xchg
and
enter
cmpsb
fisttpll
shl
sub
pop
pop
pusha
pop
xchg
mov
lock
stc
xorl
fnstsw
arpl
jns
sub
jp
mov
mov
cmp
call
in
sub
or
ds
dec
cltd
arpl
push
icebp
pop
into
cld
iret
or
lahf
mov
jno
movsl
dec
insl
jg
incl
jbe
push
mov
fwait
jbe
notl
xlat
not
rcr
push
into
fwait
dec
insb
aas
lahf
call
repz
add
pusha
sbb
cltd
fnsave
lahf
mov
addl
pushl
lret
and
pop
sub
jp
icebp
notl
jge
pop
enter
scas
das
sbb
mov
pushl
pop
cwtl
orl
addl
mov
pop
cmp
incl
ret
fisubrl
dec
push
dec
dec
xor
iret
adc
xor
sub
jg
insb
dec
push
lret
cmpsb
orb
out
daa
fimuls
jge
stos
loop
cs
call
fsts
outsl
popf
and
dec
decl
sarl
push
js
push
jne
or
mov
inc
dec
mov
lea
or
sub
jmp
mov
fistl
je
jecxz
stos
nop
sbb
clc
add
jnp
pop
lcall
ret
lret
ret
je
addps
cmp
sbb
out
pop
sahf
pop
call
pushl
and
mov
out
out
push
adc
std
out
push
sahf
inc
xor
decl
sub
in
dec
mov
shlb
inc
fildll
cmp
in
mov
cmpsl
outsl
stc
mov
sub
xchg
fdivl
and
lret
push
repnz
decl
add
out
flds
push
nop
fsubl
fists
inc
or
gs
js
jle
sub
jnp
fldcw
movsb
testl
stos
sub
test
mov
pushl
daa
mov
jo
cmp
loopne
pmulhw
mov
outsb
mov
pop
mov
ficoml
lcall
sbb
bound
es
ljmp
lcall
mov
inc
mov
hlt
pop
sti
and
or
inc
shrb
push
lcall
mov
xchg
sti
ret
xchg
adc
mov
imul
ret
sub
outsl
lcall
jmp
into
pusha
rcl
ret
outsl
jo
aad
mov
sbb
rorl
decl
jbe
mov
or
and
mov
jno
mov
dec
sbb
jecxz
pushl
mov
ret
xor
mov
out
sbb
jp
lahf
pinsrw
add
pushl
sub
or
sub
sahf
add
out
inc
clc
or
add
call
push
pop
test
jmp
sbb
and
inc
pop
enter
fistps
cmpb
pushl
dec
xchg
dec
pop
xor
mov
dec
and
mov
lahf
sti
out
or
call
icebp
and
orl
xchg
pop
xor
popa
add
add
push
or
hlt
js
in
inc
jmp
and
dec
iret
test
mov
lds
xlat
push
daa
bound
pushl
xchg
pop
push
and
imul
jecxz
inc
push
jp
add
push
jno
adc
decl
ja
add
rorl
andb
movsb
jle
xor
push
stos
dec
cmp
ror
cmc
lcall
sub
sub
fdivp
insl
call
gs
shrl
push
push
fxam
loopne
cltd
mov
pop
jno
lahf
cltd
sarb
in
in
mov
inc
mov
lods
and
adc
or
mov
mov
pop
mov
mov
fcomi
pop
xor
flds
jle
jno
cwtl
rclb
sbb
jmp
push
cmc
mov
push
jl
jno
iret
sub
stos
gs
mov
lea
clc
int3
push
call
add
sub
sub
js
icebp
shlb
mov
cmp
mov
decl
and
in
push
inc
mov
idivb
addr16
jg
cwtl
int3
dec
rcrl
rorl
cld
mov
mov
pushf
adc
inc
xchg
xor
out
sub
out
push
dec
dec
xor
pushl
and
aas
push
in
or
adc
push
pop
lret
mov
loopne
testl
push
xor
iret
and
mov
add
cld
pop
inc
pushf
mov
test
mov
xor
push
shl
xlat
addr16
xchg
xchg
or
dec
jg
mov
mov
outsl
inc
adc
sub
fistps
not
fsubr
mov
sar
std
xchg
ss
xor
adc
cltd
sbb
jo
mov
movsl
sbb
push
adc
jg
mov
sbb
imul
jns
negl
adc
push
mov
mov
add
int
das
hlt
cwtl
dec
iret
and
push
jle
lcall
out
in
push
xchg
mov
add
cmpsl
in
add
iret
iret
dec
aas
ret
push
or
jmp
mov
test
sub
sub
test
xlat
je
jmp
add
sub
adc
jg
decl
jb
mov
call
cmp
and
jg
les
pusha
andl
xchg
insb
xchg
add
js
sbb
mov
mov
arpl
ljmp
adc
push
gs
das
mov
jmp
pushf
add
sahf
lcall
cld
call
test
je
ret
aaa
dec
jne
and
mov
pushl
call
insl
pop
dec
movsl
dec
les
sub
subl
fisubl
add
inc
jmp
fcmovnb
mov
xchg
int3
push
xor
add
add
decl
jge
sbb
and
mov
outsb
jecxz,pn
frstor
andb
test
jmp
cmp
adc
jns
andl
mov
out
cwtl
lea
push
call
stos
ljmp
mov
sbb
test
xlat
fdivr
ret
xlat
xor
pop
dec
incl
cmp
xor
sarb
das
mov
jns
lret
out
insl
and
stos
lods
cmp
lret
lods
jnp
pusha
mov
xchg
xchg
xchg
cli
dec
sar
pushl
ret
loope
pop
lcall
sub
outsb
sti
imul
outsb
arpl
sub
in
mov
xor
call
popf
out
and
sbb
stos
lods
mov
imul
ja
mov
ror
int3
in
ljmp
loopne
insb
stos
add
cmpsl
fisubrl
dec
dec
pop
or
add
jns
cwtl
loope
lods
pop
call
inc
cmp
loope
adc
rolb
jle
outsb
int
inc
out
mov
jecxz
sub
sbb
jo
leave
pop
add
stos
or
sub
cld
pushl
cmp
out
and
outsb
bound
cmp
mov
jbe
stc
mov
mov
outsb
jmp
jne
call
adc
adc
les
leave
sti
xor
sbb
hlt
mov
ret
icebp
fsts
adc
data16
inc
mov
in
inc
or
int3
addr16
dec
mov
add
ljmp
xor
cltd
push
in
pop
push
xchg
mov
lcall
call
into
adc
cmp
or
inc
jle
push
add
jmp
ljmp
lcall
cltd
dec
dec
movsb
sub
lods
xchg
sbb
ljmp
sarb
jns
adc
sub
jle
cli
pusha
pop
out
sarb
push
std
incl
ds
bound
fistps
scas
xchg
call
jmp
adc
test
sbb
mov
aam
jmp
and
add
inc
or
push
lcall
jne
mov
push
push
sub
loop
aas
mov
jp
call
mov
dec
rcll
push
jg
fldl
add
lret
push
or
cld
out
pop
and
ds
fcmovnb
sub
dec
inc
mov
mov
sbb
push
insb
xchg
insl
imul
in
dec
test
dec
dec
stos
je
inc
jbe
sbb
lods
lods
dec
add
mov
lods
test
add
add
pop
mov
fwait
sbb
int
push
add
jl
test
jb
into
xor
mov
orb
pushf
out
xor
mov
fistps
imul
pushl
int
jl
in
pop
inc
cmpb
mov
fisttps
push
fstpl
test
and
push
scas
test
nop
xor
mov
mov
pusha
loopne
jae
loopne
scas
cwtl
cmp
decl
pop
arpl
push
lahf
mov
in
push
daa
sbb
mov
mov
jb
aaa
jne
jmp
add
jne
push
dec
orl
fstpt
clc
call
lcall
dec
cmp
sub
dec
andl
and
test
mov
jmp
out
scas
push
and
push
push
add
push
arpl
lcall
and
and
ficomps
inc
jle
sub
jl
aam
repz
ficompl
scas
filds
push
jmp
adc
insb
adc
pop
adc
outsl
cmpsb
mov
add
fsubl
fcomip
inc
stos
pop
cld
or
lret
pop
test
cmp
mov
dec
mov
pop
mov
bound
call
mov
cmpsb
push
frstor
loope
or
add
mov
pop
add
pushf
and
or
hlt
fnstsw
add
jecxz
xlat
sub
push
mov
pop
xor
aad
shl
imul
xchg
lods
sbbb
mov
sbb
mov
mov
mov
push
out
mov
sub
ljmp
ret
mov
out
and
cltd
push
or
fcmovnbe
push
rcr
enter
dec
sbb
or
iret
adc
mov
or
movsl
ss
jecxz
sbb
cmp
loopne
pop
outsb
add
call
aad
xchg
mov
jbe
and
inc
mov
iret
dec
loop
ljmp
loopne
dec
pop
les
add
xchg
repnz
lcall
rcrl
pop
insl
ss
lods
cli
sub
jp
adc
dec
gs
mov
dec
sub
lret
cld
dec
add
imul
rorb
push
or
divl
popf
xchg
or
jno
inc
ret
ljmp
loope
jecxz
test
mov
out
add
cli
push
in
jp
push
jg
testl
sub
lahf
stc
xchg
popa
inc
xchg
adc
and
lcall
lcall
stos
jnp
adc
push
jnp
sbb
xor
imul
mov
mov
icebp
movsl
jg
mov
jge
add
pop
xchg
push
push
dec
test
scas
push
imul
fistpll
dec
lcall
jmp
test
les
pop
out
rcll
mov
sub
xor
or
sub
adc
scas
out
aad
mov
xchg
bound
mov
mov
fldcw
sar
incl
xchg
sbb
and
or
sbbb
shl
mov
and
push
dec
xor
sbb
ja
pop
fldenv
cmp
test
fcomip
fidivl
ret
inc
or
call
aaa
cmp
jnp
movsl
call
sub
mov
jns
mov
or
adcb
pop
mov
push
cmp
or
inc
loopne
insb
jp
testl
push
dec
ljmp
jmp
aaa
adc
lcall
fwait
dec
jecxz
ret
insb
daa
and
push
aad
pop
decl
mov
test
sub
in
push
imul
or
fdivrp
call
fwait
out
sub
insb
loope
insb
cmpsb
fs
pop
xchg
insb
pushl
dec
and
inc
pop
lods
insb
pop
dec
cmp
incl
inc
and
jmp
mov
sub
ret
mov
clc
dec
cld
popa
or
pop
cmc
pushl
lret
jl
sbb
push
cmp
into
mov
movsl
jne
cli
jnp
jbe
gs
test
hlt
aad
jmp
popf
push
sub
decl
shlb
mov
push
or
mov
push
or
inc
push
cld
mov
mov
and
jecxz
ljmp
adc
iret
push
cmc
cmp
incl
xor
sarb
sbb
mov
inc
xchg
mov
sahf
mov
stos
mov
ljmp
xchg
add
xchg
mov
pop
jnp
adc
xor
cmpsl
pop
and
fsubl
call
jno
xlat
or
movsb
mov
data16
in
arpl
xor
inc
xchg
and
xchg
nop
mov
jb
ss
imul
jmp
xor
stos
pop
out
repnz
mov
aas
incl
mov
xchg
mov
aaa
paddsb
inc
sub
test
pushl
sti
jns
lds
test
xor
stos
sti
xlat
or
fistps
sbbl
fcomps
inc
mov
or
test
data16
cld
adc
nop
cmp
mov
dec
div
fcmovnu
push
jecxz
push
les
inc
and
jo
mov
inc
mov
sub
xchg
or
adc
sahf
pop
mov
adc
mov
popa
push
push
mov
pop
iret
mov
call
ficompl
sub
xor
das
insb
add
sub
inc
incl
push
push
add
andb
imul
sub
push
cld
jmp
mov
pop
adc
std
dec
xchg
test
pop
cmp
arpl
movsl
lds
lcall
adc
sti
ds
cmc
jl
jp
xor
cwtl
lock
lcall
xchg
or
xchg
sub
add
sbb
mov
int
jle
cmp
in
lcall
cli
mov
mov
popa
dec
out
xor
xchg
testl
enter
inc
dec
or
push
cmpsb
outsb
adc
inc
mov
bound
adc
mov
lea
int
in
rol
in
xor
cmp
pop
xchg
push
add
aad
int3
fisttps
push
les
daa
mov
stc
flds
lea
shll
push
xchg
mov
dec
fistl
jae
pop
dec
sub
jmp
lcall
jns
subl
ds
jl
cmp
pop
push
in
and
dec
cmp
and
pop
testb
rorb
pop
and
sub
sti
or
shl
sar
mov
pop
adc
cmp
dec
out
sub
sbb
add
cmp
pushl
fcmovnu
outsb
jns
sarb
mov
aaa
push
push
in
or
shll
std
sbb
incl
mov
fmul
cli
lea
data16
mov
cmp
test
pushl
jae
fisubrs
add
cld
xchg
je
cmp
jl
gs
mov
jg
or
jb
mov
mov
icebp
lret
mov
xchg
lcall
call
stos
aaa
insb
js
pop
repnz
jge
xor
mov
ljmp
aad
jbe
mov
shll
lret
jnp
jno
pushf
int3
je
cli
jmp
incl
xchg
dec
dec
and
lret
fyl2xp1
outsl
pop
cmp
in
ljmp
fsubrl
mov
nop
push
mov
adc
mov
addr16
scas
call
dec
xchg
pushf
sub
xor
xor
sarl
icebp
cmpsl
xchg
mov
les
decl
jmp
sub
fidivrl
push
mov
jmp
ja
mov
aas
sbbb
icebp
fmulp
fldl
lahf
lea
pushl
in
fistl
bound
lcall
fisubrs
mov
imul
test
push
xor
sbb
les
imul
jg
mov
pushf
sub
jmp
sub
adc
mov
dec
mov
cmpsl
ret
cmp
push
pushl
cmp
fmulp
mov
fldl
out
or
mov
cmp
mov
adc
xchg
addl
in
inc
mov
mov
jge
mov
jmp
jle
adc
lods
pop
lret
mov
adc
data16
int3
mov
pushl
mov
xchg
push
out
out
ljmp
pop
lods
mov
outsb
aaa
jns
imull
inc
call
cmp
push
and
mov
lods
int
cltd
lds
orl
mov
std
mov
inc
lock
push
cli
sub
lahf
lret
adc
dec
and
dec
decl
inc
cs
stos
aad
dec
addb
inc
dec
and
add
push
out
pop
fisubrl
incl
jo
xchg
fsubs
fstp
es
shrb
xchg
sti
mov
or
jg
and
adc
pushf
push
fnsave
xchg
insl
leave
push
pop
mov
ljmp
pop
daa
test
jecxz
sbb
mov
and
pop
xor
and
sbbb
push
jbe
cli
mov
repz
mov
sub
jp
and
std
or
or
cli
decl
je
cmp
mov
pop
mov
in
sub
inc
sub
jb
jl
scas
leave
dec
jb
decl
ja
pop
xchg
inc
lret
push
xchg
or
adc
inc
cmpsb
jge
in
adc
jmp
lods
nop
je
popf
xchg
sub
xor
scas
movsl
xchg
pushf
xchg
and
imul
fs
int
scas
inc
adc
pop
dec
fildll
jp
dec
loope
jne
pop
push
mov
cld
inc
call
decl
fstpl
lds
mov
gs
mov
int
dec
adc
sub
ud0
ljmp
dec
jge
push
cld
je,pn
sub
jo
or
sbb
incl
push
mov
adc
sbbl
lea
pop
push
out
cwtl
notl
fsubrs
call
sub
fwait
ss
lahf
icebp
mov
jmp
xor
incl
lds
lods
lock
stos
mull
xchg
cmpsb
enter
pushl
imul
int
mov
cld
sbb
sarb
push
sbb
and
xor
mov
push
mov
das
cmpsl
lods
adc
nop
xchg
insb
sarl
xor
mov
xchg
sbb
imul
scas
xor
jbe
les
sti
mov
stos
shl
out
call
sbb
test
and
xchg
cmp
jg
jge
out
jbe
or
push
mov
inc
pop
mov
adc
jg
mov
mov
fnstcw
push
iret
adc
pushf
sti
sbb
sbb
xchg
call
leave
jne
mov
mov
inc
shrb
inc
aam
dec
cmp
push
pop
lahf
test
push
xchg
int3
das
lcall
jne
jae
mov
inc
ljmp
add
data16
aam
dec
xor
inc
add
sub
dec
insl
cli
in
out
stc
leave
jmp
sbb
into
dec
inc
push
test
and
jns
fbld
inc
jmp
or
lea
or
pushf
and
mov
dec
push
ret
mov
mov
lds
push
repnz
or
into
pushl
xchg
sub
xchg
enter
mov
xchg
js
outsl
clc
incl
loopne
les
cmp
push
mov
mov
icebp
aad
xor
lret
fwait
scas
xchg
fimull
imul
inc
inc
push
je
mov
mov
push
xchg
sahf
mov
fwait
jecxz
ret
jl
push
out
jo
mov
mov
xor
jbe
pushf
jmp
ljmp
mov
das
mov
adc
pushf
insb
jle
pop
jbe
sub
jg
xchg
andb
pushf
sbb
sbb
mov
and
xor
pushl
mov
into
mov
mov
mov
push
cltd
or
jnp
and
jbe
or
std
decl
sti
adc
sub
sub
xor
enter
dec
addl
decl
inc
push
mov
xor
mov
pop
xor
fnsave
dec
pop
arpl
je
pushf
xor
call
cli
loop
fldenv
rclb
pop
addb
aad
rorl
shrb
jne
int3
jb
decl
adcl
cmp
enter
lret
call
cmp
shll
push
pushl
call
nop
or
fisubs
push
fbstp
inc
adc
cmovae
fcomip
inc
xor
scas
adc
xor
nop
sbb
je
mov
movsb
mov
jmp
mov
fs
xchg
inc
jmp
xchg
xor
pop
add
push
icebp
mov
repz
sarl
jmp
stc
mov
mov
xor
lcall
bound
in
xchg
push
call
mov
mov
insb
lea
movsl
jle
cmp
daa
hlt
pop
push
mov
ljmp
dec
adc
xor
jmp
cs
es
pop
push
into
test
pop
mov
or
jg
std
fstp
hlt
ljmp
cmc
out
loop
xchg
push
or
ss
push
inc
push
sbb
int3
push
jmp
adc
jno
mov
addr16
cmpsl
imul
cmp
add
scas
iret
pop
cmp
jnp
pop
enter
adc
mov
shr
sub
push
movsb
loop
js
lcall
add
and
shll
sub
int3
scas
fwait
sahf
clc
cmp
inc
aad
scas
mov
ljmp
xchg
pop
addb
and
jecxz
sti
inc
mov
push
mov
sti
data16
incl
repnz
xchg
test
push
ja
je
fabs
mov
push
fstl
lea
push
mov
fbld
ret
or
pop
subl
inc
jg
and
mov
and
mov
xchg
jp
shll
xchg
je
or
jg
mov
adc
pop
mov
pop
push
pop
or
mov
lds
jb
loop
mov
jmp
pop
sti
pop
out
cld
sub
and
aaa
add
cmc
add
les
xchg
lahf
pop
jp
jne
push
xor
jmp
or
dec
and
out
xchg
add
insb
fwait
push
mov
jp
jge
pop
inc
stos
adc
js
pop
out
loopne
insl
push
lock
jnp
xchg
dec
or
lret
cmp
call
int3
test
xchg
pushf
in
mov
fisttpl
stc
mov
add
and
lods
push
xor
mov
jmp
mov
addr16
cmp
inc
das
jp
dec
xchg
sti
sub
ss
subl
aam
cs
push
mov
fs
adc
adc
mov
insb
sti
popa
sub
push
cld
call
inc
or
push
push
cmpsl
push
and
mov
mov
pushl
in
push
cwtl
pop
xchg
adc
jne
inc
neg
inc
jecxz
mov
stos
shlb
add
incl
sub
imul
cmp
mov
jmp
sub
inc
mov
sub
incl
cmp
and
and
push
fbstp
in
cmpsb
pop
cmp
daa
jle
pop
pop
repnz
jge
sbbb
lret
clc
jp
aas
cli
dec
pop
jmp
or
add
mov
call
inc
mul
mov
jno
xlat
nop
subb
inc
movsb
inc
sbb
in
cld
or
mov
sbb
jl
and
fstl
in
add
sbb
or
pushl
mov
add
mov
rcrb
lcall
lcall
mov
xchg
mov
les
stos
lock
adc
and
inc
xchg
outsb
jge
imul
sbb
pop
in
shlb
shrb
pushf
sarb
jmp
or
je
shl
enter
lret
dec
jbe
xlat
mov
adc
jle
add
imul
pop
mov
xor
mov
xor
adc
fs
ljmp
cs
mov
and
mov
mov
cmp
in
mov
repnz
add
call
push
mov
call
xor
sbb
pusha
pop
mov
mov
fisttps
jg
mov
xor
fs
lods
cmpsb
and
shrb
out
or
mov
aaa
mov
pushl
mov
cmpsl
xchg
pop
jg
dec
ja
addb
imul
call
sub
jge
dec
adc
cmp
imul
aaa
mov
push
fisttpl
sub
xchg
jmp
mov
xor
clc
xchg
jns
imul
push
int
xchg
loope
or
cmp
mov
decl
addb
mov
sub
loope
xorb
pop
lock
ret
ret
inc
adc
jae
out
out
inc
popa
jmp
adc
ljmp
pop
out
pop
dec
jmp
or
mov
inc
mov
adc
dec
out
cli
call
rcr
push
mov
push
shll
xor
jmp
mov
ljmp
pusha
mov
xchg
xor
pop
js
aas
push
sbb
cmp
fcoms
out
push
xor
cmp
pusha
adc
decl
mov
adc
aam
mov
push
inc
cmp
icebp
aad
xor
pushl
sub
arpl
out
cmpsl
int
pop
lock
mov
loopne
dec
call
loopne
fisubl
outsb
add
mov
adc
cltd
xchg
sub
mov
xchg
stc
xchg
inc
inc
adc
mov
mov
and
dec
lahf
mov
pop
scas
jb
int3
insb
lret
call
jne
mov
ss
add
and
add
int
fstps
addr16
fwait
in
lahf
out
cmp
incl
lcall
add
insb
movsl
or
jg
cltd
xor
addr16
repz
out
mov
mov
sub
xor
incl
movsl
sub
les
push
shll
sbb
fistps
mul
add
jl
fidivl
lcall
lret
cmp
xor
pushf
add
push
js
lret
mov
lcall
push
push
aas
test
xlat
inc
mov
dec
push
jnp
xchg
pusha
ret
cld
jnp
roll
adc
inc
cmp
lcall
and
insl
dec
inc
and
push
xchg
out
push
clc
mov
mov
ljmp
jmp
outsb
test
in
mov
testl
adc
push
pushf
mov
lret
decl
add
test
data16
cs
xor
sbb
xchg
jg
leave
call
imul
test
imul
sub
pop
dec
sbb
notb
call
nop
mov
xchg
div
pop
inc
add
leave
inc
in
rcr
dec
jno
cmp
mov
xchg
push
inc
pop
setb
dec
ss
dec
or
loop
xchg
or
outsb
add
andb
push
pop
outsb
xor
popa
cmovo
jg
es
call
es
pop
push
xlat
push
inc
xchg
testb
fistps
imul
push
inc
pop
mull
jg
lcall
out
nop
push
stc
mov
sti
push
jno
frstor
inc
xorb
aad
hlt
xor
das
mov
mov
push
cld
addl
fstps
call
into
loope
add
and
mov
xchg
loop
inc
xchg
pushl
in
lea
or
js
sbb
daa
adc
push
jb
fistpll
aam
or
cmp
ljmp
adc
icebp
mov
data16
or
dec
mov
sbb
lret
add
ljmp
arpl
jae
adc
pop
jl
lea
in
sbb
push
cmp
pop
roll
dec
in
add
adc
jb
insb
adc
lcall
mov
popa
enter
sbb
adc
cmp
jnp
xchg
cwtl
stos
sub
mov
incl
lahf
call
loopne
mov
mov
ret
in
lcall
fcomip
jns
sahf
sbb
and
lret
repz
shufps
jno
pop
insb
lret
aaa
adc
dec
sar
movsb
push
imul
cmp
int3
add
jl
push
data16
call
or
cltd
mov
mov
cmp
mov
hlt
sub
cmc
xchg
push
and
sbb
dec
add
cmp
fnstcw
adc
popf
in
int
scas
mov
insl
fimull
daa
pop
xor
sub
incl
movsb
push
pop
adc
icebp
mov
mov
cmp
pushf
mov
and
push
ret
icebp
out
pop
pop
mov
mov
scas
sbb
dec
shlb
aas
out
add
push
jg
ljmp
pop
stos
out
sarl
test
mov
xchg
ljmp
scas
incl
xchg
cwtl
mov
pop
cmpsb
clc
sbb
add
or
inc
repnz
call
in
dec
cli
dec
cld
mov
dec
lock
xlat
movd
test
cld
jp
mov
xor
cld
mov
jle
imul
sbb
jg
xorb
adc
jo
ss
mov
lahf
mov
fwait
loope
daa
jl
sar
jg
loopne
sub
xchg
and
sub
adc
cmp
decl
pop
int3
loope
adc
in
fdivrl
adc
lret
inc
enter
pop
jae
call
call
pop
xchg
mov
int
iret
and
fistpl
and
shll
add
xchg
cmc
inc
stos
pop
lea
loop
ret
mov
testb
push
sub
cltd
add
int
repz
ljmp
adc
insl
pop
sahf
fbld
dec
and
push
mov
jmp
cs
inc
jno
mov
inc
arpl
mov
jb
mov
pop
dec
jmp
mov
and
pusha
push
pop
lcall
incl
inc
adc
add
xor
mov
enter
scas
cmpsl
mov
out
sub
push
add
pushl
fcoml
call
mov
push
mov
cltd
pop
cmp
pop
frstor
and
mov
sar
fidivl
repnz
in
out
xor
loop
mov
lcall
pop
int
out
out
mov
out
lods
cmp
fldl
mov
push
movl
cmp
jg
or
cmp
or
sbb
movsl
xbegin
sbb
ljmp
lret
jo
push
jo
pop
pop
test
lahf
aad
jno
xor
push
cli
jmp
stos
adc
in
cmc
testl
cwtl
sbb
fwait
dec
push
lret
push
xor
ljmp
movsl
and
cmp
xchg
sti
repz
in
xchg
cwtl
bound
jg
and
frstor
scas
sub
insb
or
jne
dec
insl
ds
or
aad
mov
daa
outsb
enter
mov
adc
clc
xlat
xchg
pop
mov
call
repz
rolb
sbb
fsubrs
leave
sub
fwait
loop
sbb
stos
call
jge
cs
lock
and
movsl
push
das
aam
pop
inc
sub
xchg
movsl
or
jae
arpl
ss
xor
pop
mov
push
inc
testl
decl
out
lret
xlat
or
xchg
pop
lds
jb
movsb
cltd
dec
mov
pop
fisubrs
jecxz
mov
stos
int3
jg
mov
xchg
nop
pushf
mov
xchg
cmp
imul
loop
jmp
push
jecxz
jnp
jnp
push
scas
loopne
push
adc
mov
ja
push
lret
rcr
decl
cmp
mov
rcrl
int
jae
jmp
addr16
loopne
mov
pop
in
mov
ljmp
movsl
mov
dec
inc
dec
pop
dec
fnstcw
js
pop
adc
lods
jle
test
inc
test
fimull
ds
sbb
jae
fwait
push
cs
mov
repz
xchg
and
sbb
sub
cld
test
xor
push
movsb
and
add
je
ja
add
fwait
negl
jp
scas
sbb
int
sub
mov
jp
pop
hlt
not
push
mov
iret
out
jg
add
cmp
out
ret
mov
call
fistpll
push
decl
inc
lds
and
fwait
add
loopne
jle
je
outsb
stc
ds
movsl
out
xlat
jmp
cmpsb
dec
sahf
int
pop
arpl
stc
push
dec
xchg
cmp
xorl
add
mov
xchg
mov
cmpb
sarb
enter
mov
mov
ficoms
lea
js
pushf
push
cs
mov
jne
dec
sbb
test
or
fcomps
push
les
mov
xchg
mov
mov
call
test
mov
jl
sbb
into
xchg
add
push
pop
test
lods
lods
sar
mov
inc
out
insb
cmp
sub
cli
sub
loopne
pop
and
stos
rolb
call
out
decb
jns
add
sub
push
add
inc
add
lock
insb
inc
and
pushl
sub
cmp
in
adc
ds
xor
push
xchg
adc
mull
cld
jmp
xchg
aad
jl
xlat
cmpsb
jo
sub
imul
dec
movsb
sub
or
lods
lock
iret
xor
int3
mov
cmp
mov
jg
mov
out
ljmp
cmp
xor
mov
and
or
xchg
jg
pushl
xor
inc
or
xor
fcomp
pop
push
int3
icebp
or
xchg
inc
jns
sbb
jns
in
cli
hlt
and
mov
lcall
mov
jns
es
add
in
cmp
sub
push
sbb
fucomi
call
jnp
mov
pop
pop
fdivr
add
out
sub
lds
pop
jmp
call
ja
pushf
xchg
orl
call
lcall
and
mov
sahf
orl
cli
cwtl
pop
mov
decl
xor
xor
mov
pop
jge
int3
xchg
dec
ffree
lahf
shrb
pushf
xchg
cmp
decl
fwait
adc
mov
sti
cwtl
inc
mov
andb
and
decl
dec
loopne
push
push
jmp
inc
push
insb
sub
sub
dec
pop
mov
mov
add
out
sahf
dec
jl
xorb
xor
pop
es
push
pop
lea
gs
stos
arpl
fnstenv
xchg
loopne
dec
popf
mov
inc
push
pop
mov
outsb
sbb
jg
stos
mov
decl
lcall
pusha
loopne
mov
pop
testl
add
int3
and
mov
decl
insb
das
bnd
js
addr16
sub
dec
pop
xor
add
fs
out
clc
sub
push
fs
fadds
inc
lods
jo
mov
aaa
and
mov
insl
add
push
cli
aam
fldt
mov
fcoms
dec
or
test
jmp
push
jle
es
mov
lret
fs
add
lcall
imul
pop
call
lret
add
cmpsl
lret
dec
sahf
or
adc
lcall
lret
push
xchg
mov
jmp
add
mov
push
push
xor
sub
call
mov
jecxz
or
inc
shl
fsubl
inc
call
test
fbld
aam
jg
decl
outsb
or
stc
or
jl
test
adc
stc
lcall
adc
sub
pop
fldcw
cmp
pop
scas
and
repz
loope
imul
incl
outsb
gs
rorl
fnsave
cmp
clc
add
push
push
hlt
sub
lods
jne
imul
cli
inc
sbb
push
les
dec
xchg
aam
stos
mov
or
out
sub
and
adc
rorb
dec
sub
xchg
lcall
add
stos
mov
and
mov
das
aaa
pushf
mov
dec
lret
sbb
inc
xorb
loop
jb
int3
mov
pop
rolb
push
xchg
outsb
and
fisubl
sub
clc
xor
call
ret
das
jp
add
pop
push
clc
sahf
sub
inc
cli
mov
mov
dec
cmpsl
pop
xor
incl
pop
add
sbb
push
inc
dec
lock
push
add
cwtl
mov
outsl
push
push
iret
imul
cmc
xchg
push
or
popf
ljmp
fwait
jo
lods
int3
add
xor
mov
xchg
repz
sub
xchg
shrl
fldt
decl
mov
jns
test
icebp
or
xor
mov
xchg
data16
call
test
nop
outsb
cltd
inc
ret
push
es
or
ds
and
and
loop
inc
pushl
adc
fildl
xor
rcl
xor
and
mulps
pushl
pop
jae
jne
xchg
mov
movsl
add
leave
sub
imul
out
and
push
jmp
mov
idivb
idivb
lcall
cmpsl
cmp
mov
pushl
jmp
insb
push
fcomps
xchg
test
addr16
pop
dec
out
xor
dec
mov
hlt
adc
jle
aam
sbb
adc
fcoml
mov
aas
mov
pop
cs
mov
stos
pop
mov
mov
pushfw
cld
cwtl
push
mov
pop
lret
mov
push
insl
ljmp
mov
pop
mov
mov
push
lcall
xchg
ja
hlt
mov
clc
and
jg
mov
stc
mov
repz
push
and
mov
fs
testb
icebp
aaa
in
dec
pop
lock
jmp
adc
es
addr16
jns
out
insl
pop
push
addr16
inc
incl
jbe
sub
xchg
shr
fs
xchg
repz
repnz
jg
int3
inc
cmp
aas
mov
xchg
jecxz
mov
xor
shl
test
aas
inc
sub
out
cli
movb
fdivp
sub
jb
pmulhuw
jmp
lock
fs
fcmovu
xchg
outsb
scas
rorb
dec
popa
xor
and
fsubrs
sub
pop
es
rclb
xor
das
or
dec
fcoms
int3
cwtl
movsb
sub
mov
aad
cmp
jl
sub
push
movsb
lds
jg
insl
fcom
or
ljmp
sbb
push
or
sbbb
or
aaa
popa
jo
xor
push
clc
das
out
jg
aad
je
call
cmp
addb
out
lahf
lock
push
xchg
mov
push
and
les
push
add
daa
out
roll
incl
sarl
xchg
in
cs
push
adc
outsb
aas
push
out
pop
lcall
cltd
lods
sub
movsl
iret
mov
in
xor
int
sub
out
add
mov
fneni(8087
adc
jne
adc
push
or
icebp
xchg
orl
jl
sub
ljmp
insb
inc
dec
sub
dec
fsub
xchg
gs
jb
ret
mov
inc
sub
call
fs
cmp
stc
jmp
ja
push
add
ds
cmp
popa
or
int3
idiv
lcall
xchg
sub
sbb
dec
ss
and
imul
pushl
and
mov
inc
aam
popa
fstpl
arpl
lcall
mov
pop
jg
inc
jne
mov
mov
xchg
cmp
andl
out
clc
mov
jo
mov
mov
push
and
xor
jle
dec
sub
cmp
rcrl
inc
call
or
pop
push
push
inc
cmp
in
sbb
idivb
jmp
pop
ss
les
and
outsl
lds
gs
mov
adc
jae
std
incl
pop
imul
neg
and
scas
cmpl
add
xchg
push
lds
jmp
outsl
and
nop
hlt
cwtl
mov
sub
cmpsb
mov
std
pop
lock
out
inc
mov
mov
cmc
inc
lret
jmp
xchg
mov
addl
sarb
jmp
incb
push
dec
lret
xor
cs
cld
push
adc
jmp
mov
mov
sbb
mov
cmp
add
scas
or
xchg
rolb
es
add
pushl
repnz
js
jge
xchg
and
arpl
sub
add
lock
jg
dec
mov
add
add
rcr
jge
loopne
dec
add
aam
call
or
sbb
sbb
mov
sub
ficompl
rorl
or
lcall
loop
sub
adc
mov
push
mov
push
mov
pop
pop
push
jg
incl
mov
pop
sbb
cmp
mov
sub
fisttps
loope
jb
push
and
pop
int
scas
add
push
out
xchg
inc
fbstp
clc
insb
xchg
out
stos
dec
and
ljmp
fsubrs
rcll
xor
enter
jns
repz
call
inc
dec
adc
das
cli
ficompl
sub
insl
xor
pop
rorl
rcrl
jp
jmp
jmp
push
fwait
jb
sahf
mov
adc
and
cmpsb
call
incl
sbb
and
mov
push
xor
mov
cmp
adc
aaa
out
jl
fbld
mov
and
lret
or
fldl
outsl
adc
stos
stos
adc
loope
imul
incl
out
jg
and
xchg
jb
fstp
xor
xchg
mov
cld
out
cli
incb
dec
push
lcall
test
aas
stos
pushl
pushf
pusha
push
in
inc
add
jb
cmp
pop
lret
dec
cmp
jmp
cmc
mov
lret
xchg
mov
push
adc
mov
pushf
mov
jmp
inc
js
shlb
mov
lret
imul
out
bound
orb
sbb
fnstcw
loope
cs
out
jns
fsubl
loope
out
jnp
shll
and
xchg
xor
sbb
jg
dec
mov
sbb
es
nop
cld
xorb
test
pushf
sub
sarl
ljmp
repz
sub
pop
or
mov
imul
xor
push
mov
pop
sbb
inc
inc
ljmp
fadds
fbld
and
clc
sahf
mov
lcall
aad
ja
mov
mov
mov
cmp
cli
cmp
dec
repnz
xchg
dec
incl
shll
jmp
mov
std
push
add
mov
and
jmp
leave
fistps
jmp
mov
loope
dec
scas
jb
mov
dec
sbb
leave
in
ljmp
out
jecxz
jp
mov
movl
lcall
mov
mov
inc
shr
movsl
and
mov
imul
daa
mov
inc
popa
push
push
push
incl
out
jnp
mov
pusha
xchg
loopne
dec
sarb
adc
pop
push
inc
repnz
mov
lcall
jo
adc
inc
adc
mov
shll
scas
inc
cltd
iret
dec
mov
mov
pushl
inc
mov
xchg
in
push
int3
and
dec
rcrl
mov
dec
pushl
sub
push
mov
xchg
movsb
sbb
and
icebp
jo
cs
enter
lcall
das
cmp
test
test
insb
jp
movsl
sub
jmp
push
ficoml
mov
call
mov
je
jmp
xchg
add
insb
in
inc
aas
clc
or
insb
mov
ljmp
jmp
dec
fadds
test
int
push
into
fnstcw
and
mov
inc
and
pop
adc
aas
inc
dec
xchg
adc
mov
decl
cmc
stos
dec
sub
data16
in
sarb
decl
cmpsb
lds
mov
nop
jp
nop
imul
xchg
jge
sub
stc
sub
aam
ss
rorl
stos
nop
sbb
shrl
mov
xchg
rorb
decl
lock
jae
ds
les
add
adc
call
and
mov
sub
bts
mov
add
cmovo
mov
jl
popa
cmp
lcall
subl
mov
getsec
and
or
add
cwtl
push
aam
mov
aas
xchg
ljmp
dec
in
insl
sub
push
xchg
scas
shll
pop
jnp
and
decl
mov
pop
push
sub
cmpsl
xchg
pop
dec
shll
incl
push
insl
push
inc
popa
adc
or
cmc
outsl
je
push
dec
xchg
fdivrs
jg
mov
push
push
xchg
and
jnp
in
fs
out
mov
mov
lret
call
daa
mov
jo
in
mov
loop
in
mov
sbb
test
insb
into
std
incl
jae
rep
rorb
out
inc
pop
jg
fs
push
mov
xchg
decl
sti
jmp
enter
test
aad
rolb
pop
push
mov
add
push
loopne
ret
out
push
jecxz
js
movb
js
or
decl
call
pop
iret
dec
jns
sbbl
cwtl
or
or
arpl
into
pusha
out
jnp
pusha
lds
jmp
push
mov
push
xchg
popa
pop
mov
in
mov
sahf
jg
sarb
cmp
in
xchg
sub
push
les
scas
sahf
repz
and
mov
lock
sub
shrl
jg
outsl
jg
jmp
or
xchg
mov
pop
xchg
push
lahf
aas
ss
pop
cs
popa
std
fwait
loope
mov
push
xchg
pop
xor
jg
dec
xchg
adc
add
in
xchg
addr16
jbe
insl
movsl
ret
ret
iret
or
fildl
shlb
addr16
das
push
data16
adc
lcall
dec
pop
aam
dec
sarb
push
add
sub
inc
sar
dec
hlt
mov
dec
inc
jb
decl
repz
dec
sub
dec
sub
cmp
rcl
and
out
aas
inc
adc
mov
jmp
shlb
xchg
in
pop
add
cmc
xchg
adc
repz
dec
jno
cli
jg
and
pusha
mov
push
cmp
ret
mov
ljmp
and
xchg
enter
loope
inc
and
mov
loop
loopne
mov
xchg
and
mov
push
mov
and
sub
ja
shlb
call
popf
mov
daa
jp
sbb
or
xchg
insl
neg
xchg
insl
sub
std
call
inc
cld
mov
test
sti
dec
call
ret
mov
repz
repnz
loop
outsb
ja
rclb
dec
inc
sbb
mov
push
fdivr
pushl
sub
mov
fsubl
adc
push
mov
sbb
pop
mov
dec
push
das
mov
incl
xor
add
xchg
jno
adc
inc
fstl
push
rolb
jg
mov
dec
inc
add
call
into
add
cmpsl
push
inc
adc
mov
fisttps
push
mov
cmp
fdivrs
stc
out
mov
out
sub
cld
mov
cwtl
mov
pusha
sbb
sub
out
and
fnstcw
mov
or
pop
movsb
lods
mov
in
repnz
sbb
pop
jle
push
pushl
enter
sbbl
out
inc
pop
or
mov
into
int3
addr16
jmp
cmp
inc
mov
mov
shll
xorb
and
es
fisttpll
push
inc
cs
lcall
xchg
xor
leave
cmp
arpl
mov
cmc
sbb
sub
call
cmp
and
xchg
push
sbbb
push
cld
jge
insl
dec
mov
mov
call
dec
mov
test
add
ljmp
fistpl
or
lret
xchg
pushl
jecxz
clc
push
in
inc
notb
xchg
xchg
cmp
adc
in
cltd
mov
and
call
incl
mov
dec
inc
cld
adc
ja
dec
rol
push
or
add
mov
cli
xchg
or
pusha
mov
inc
sub
jae,pn
sbb
mov
push
call
incl
ss
add
and
fistpl
xor
fnstsw
cmp
sub
mov
ljmp
rclb
fwait
push
pop
push
mov
xchg
or
dec
sbb
xor
call
push
lahf
leave
xlat
cmp
sbb
pop
pop
orl
into
push
aas
jp
or
dec
decl
adc
xchg
jns
sbb
jle
jmp
insb
jmp
cwtl
pop
inc
fisttpl
out
pop
sbb
dec
dec
repnz
fs
pusha
ljmp
inc
repnz
stc
sbb
cmp
mov
loope
or
jnp
decl
jae
cmp
pushf
leave
or
mov
popf
imul
dec
rorb
jp
lcall
jno
data16
bound
ret
mov
cmpsl
fsubl
cmc
xchg
mov
call
into
je
out
int3
jbe
xchg
inc
dec
insb
jnp
sub
lahf
stos
pop
adc
sub
pop
jmp
int3
inc
xor
hlt
es
sub
cmp
hlt
mov
push
cmpsl
ficoml
decl
in
sub
int3
pop
popa
loop
movsb
negl
inc
or
sub
adc
call
test
arpl
pop
icebp
pop
lods
cmpl
shrb
pop
jmp
mov
xor
fldl
xor
insl
xchg
pop
sahf
dec
adc
ss
jnp
adc
sbb
decl
cmp
into
out
pop
sti
inc
cmp
cmp
mov
pop
scas
stos
data16
mov
cld
inc
or
nop
or
or
inc
adc
in
testl
mov
mov
sbb
call
loopne
shlb
push
sub
jge
xlat
and
cmp
sbb
add
cwtl
cmp
std
jp
adc
pop
sbb
cli
sub
mov
call
adc
pop
jnp
xchg
jge
movsl
inc
cli
out
aas
dec
shrl
xchg
and
ljmp
xor
mov
fadd
dec
lret
mov
xorl
dec
and
ljmp
call
mov
sahf
fwait
aad
shl
iret
dec
outsb
add
cmp
mov
mov
sub
movsl
jns
xlat
test
jae
test
int3
fisubrl
mov
pop
sub
pushf
jnp
hlt
sbb
repz
sub
sub
and
xchg
or
xchg
lahf
clc
xchg
jae
es
repz
repnz
mov
sti
in
cld
inc
fnstenv
pop
idiv
int3
stos
stos
lahf
add
mov
stos
filds
decl
xchg
or
cmp
pusha
ds
xchg
cmc
and
xchg
mov
pop
ret
jmp
repz
adc
dec
push
push
nop
mov
sbb
inc
inc
push
les
sbb
pushf
mov
rcll
pop
and
aaa
int3
push
dec
call
shrl
ds
push
call
sub
sbb
cs
in
pop
push
sub
fs
clc
dec
loop
aas
insl
xchg
pop
inc
push
lods
cltd
cmp
xor
push
das
rcr
xchg
mov
pop
hlt
lcall
enter
adc
outsb
pop
pop
rorl
jnp
leave
decl
xor
imul
xchg
fdivrl
out
outsb
push
inc
jo
decl
lods
and
shr
adc
pop
sbb
mov
mov
mov
add
jmp
push
test
add
xor
or
cmpsl
das
or
cmp
push
shlb
cmp
add
and
popf
fstp
repz
pop
dec
insb
call
enter
std
and
push
push
jbe
test
push
add
hlt
inc
mov
loop
cmp
cmc
int3
inc
pop
stos
jl
call
icebp
pop
rcrb
ljmp
pushf
inc
aam
push
mov
fcmovu
movsl
mov
sbb
dec
fdiv
aas
hlt
dec
push
stc
mov
pop
xchg
adc
sbb
sti
jmp
jg
cmpsb
pop
es
dec
jbe
jmp
xchg
dec
insl
mov
pushl
mov
mov
repnz
fsubp
pop
fmull
test
xchg
mov
xchg
add
icebp
ljmp
and
push
cmp
loope
cmp
fidivrs
int3
aam
add
out
xchg
sub
call
leave
pop
xor
sbb
nop
sbb
rclb
out
sbb
sar
push
push
jae
stos
imul
lahf
jmp
cmc
cmp
inc
dec
pusha
pop
ds
dec
es
jno
repnz
or
lcall
test
stos
stc
inc
nop
pop
lods
fdivl
repnz
test
dec
out
xor
test
incl
addr16
loopne
fwait
and
pop
je
xchg
mov
mov
or
es
and
decl
cmp
orl
dec
nop
addr16
repnz
sbb
cld
test
xchg
dec
jmp
push
pop
mov
or
int
jbe
mov
mov
mov
and
lcall
inc
sub
incl
xchg
xchg
movsb
ds
pop
jp
decl
xorb
shlb
iret
pushf
mov
fildl
sub
adc
lcall
mov
dec
adc
pop
mov
sbb
mov
sar
call
pop
jnp
mov
add
xchg
iret
jb
loopne
mov
out
dec
orb
jbe
jmp
add
push
mov
sub
xor
das
jl
push
lds
mov
sbb
aaa
jb
jl
dec
es
xchg
mov
cmpsl
scas
ljmp
scas
cmp
in
inc
in
mov
lcall
lock
add
mull
adc
push
xor
ds
dec
adc
inc
lcall
add
or
insb
dec
xor
jg
push
cmp
xchg
faddl
pop
in
pop
mov
loopne
dec
imul
dec
rol
sbb
jae
jnp
xchg
popf
cmp
daa
jmp
call
mov
add
pop
xchg
fsub
sbb
pop
xor
pop
pusha
cmp
mov
pushl
pop
jge
sbb
add
xor
aas
adc
mov
mov
call
xchg
clc
sbb
xor
ja
test
mov
cmp
sbb
push
pop
jmp
or
idivb
in
rol
mov
sbb
and
sti
in
pop
lcall
add
cmp
jnp
cli
cmp
mov
cmp
call
sarl
notb
movsl
or
cmp
mov
idivl
pop
mov
in
cmp
pop
into
rol
dec
cmp
xchg
mov
dec
xchg
pop
rorb
dec
scas
sub
pop
nop
inc
das
cli
push
xchg
ds
into
cmp
xchg
sub
rolb
add
arpl
js
into
mov
ljmp
sub
rorb
idivl
cmp
or
inc
inc
or
fcomi
mov
jmp
call
add
mov
btc
scas
fldl
shll
iret
les
ret
fcomip
ljmp
inc
jnp
pop
divl
pop
sbb
out
or
jge
sub
fcomip
jg
add
xor
mov
sahf
inc
sub
xor
ja
or
std
decl
pop
xchg
shl
cli
fisubl
mov
dec
mov
mov
sbb
pushl
inc
push
out
test
mov
ja
adc
cmp
mov
or
ja
lcall
sti
pusha
mov
adc
addr16
in
push
jmp
mov
ljmp
data16
sub
aam
fwait
sub
mov
and
mov
push
sub
cmc
ljmp
cwtl
inc
scas
pop
sub
insl
xchg
test
int3
push
jnp
sub
incl
lcall
mov
xlat
xchg
jb
out
addr16
push
call
mov
jb
xor
decl
in
xchg
add
call
push
shlb
fildll
in
xchg
sbb
sub
decl
pop
jns
jmp
or
sarb
lcall
pusha
mov
mov
sbb
gs
repz
push
clc
gs
mov
xlat
out
push
adc
fsubrp
pop
sub
inc
cli
lcall
cld
cli
arpl
add
shlb
into
cwtl
xchg
inc
pop
adc
or
cli
shrl
mov
jg
cmp
pop
inc
fwait
mov
mov
xlat
rorb
dec
test
pop
repnz
stc
pop
insl
and
fistpl
hlt
dec
scas
ljmp
xchg
aam
mov
dec
data16
lcall
add
test
cmp
xchg
push
fnstcw
jae
mov
xchg
cltd
sbb
add
bound
adcb
andl
test
xchg
jmp
mov
push
adc
dec
push
lds
pushl
inc
daa
jge
add
push
fisubl
jecxz
sub
cld
sbb
adc
fiaddl
push
mov
iret
stos
pop
in
push
sbbb
loopne
rclb
mov
inc
push
out
fwait
inc
addr16
sbb
aaa
mov
icebp
xchg
inc
pop
dec
inc
and
mov
cmp
xor
inc
adc
pushl
and
xchg
aas
orl
inc
nop
cli
rolb
push
lods
xchg
add
in
lcall
out
shlb
shll
imul
or
pushl
sbbb
push
sahf
lret
mov
out
cmpsl
adc
lock
sbb
adc
std
jmp
jp
push
arpl
into
mov
mov
icebp
or
jae
imul
shl
test
jg
pop
test
jb
cmp
xor
jbe
push
mov
es
imul
pop
mov
mull
and
stos
xor
and
lock
stc
ds
fwait
dec
cmp
cwtl
sbb
push
les
and
inc
loope
call
add
mov
mov
pop
sub
add
sbb
lahf
hlt
inc
jle
mov
jg
fnstcw
inc
out
jnp
movsb
stos
xchg
das
mov
mov
enter
push
or
incl
mov
gs
xor
in
or
push
and
lahf
mov
xor
call
test
popa
jbe
js
xchg
inc
jne
jbe
and
adc
jne
xchg
fistl
ja
fwait
cmpsb
cmp
mov
cld
push
mov
scas
fmuls
lcall
pop
xchg
popf
lods
pop
rorl
dec
stos
lods
push
cs
ss
fldl2t
addb
jl
jle
mov
push
xor
jmp
push
in
cmp
ret
ja
jmp
add
pushl
clc
iret
and
cli
cmp
or
push
pop
cmp
inc
ret
dec
dec
inc
add
inc
inc
pushl
ds
mov
mov
ret
imul
aad
jge
inc
cmp
push
pushf
jmp
mov
cld
mov
push
jne
xorb
cmp
cld
pop
mov
push
inc
xor
jns
rclb
in
incl
popa
mov
add
daa
or
jl
cmp
or
xchg
sbb
jecxz
lcall
sbb
jnp
cmp
stos
mov
xchg
mov
mov
inc
data16
ret
insl
pushl
add
cmpsb
add
int3
fldl
jbe
bound
outsl
add
imul
lds
inc
mov
lea
sub
incl
push
in
push
ja
jae
mov
incl
lahf
andb
outsl
adc
sti
push
xchg
pop
dec
fwait
gs
add
push
cli
mov
xchg
lcall
fs
movsl
cmp
ss
hlt
push
jno
mov
lcall
popa
pop
outsl
scas
lcall
push
jns
iret
adc
aad
test
dec
xchg
pop
daa
out
lret
xor
add
in
pop
xor
dec
sarl
dec
add
loopne
les
pop
add
xchg
fdivs
mov
push
xchg
pushf
loope
insl
cmpsb
pop
pop
xchg
jg
std
fldcw
repnz
cwtl
std
sub
xchg
and
sub
pop
sub
decl
imul
adc
incl
jo
lcall
mov
rcl
inc
mov
scas
xor
out
cli
incl
shll
xor
fiaddl
inc
frstor
out
ljmp
imul
outsb
inc
mov
cs
xchg
xor
add
jg
decl
dec
mov
fbld
pushf
mov
inc
jo
cmpsb
addr16
lods
popf
cli
xor
adc
fs
lcall
jmp
enter
mov
xchg
mov
sub
xor
pop
adc
es
push
add
pop
les
jge
repnz
cmp
cwtl
mov
imul
test
sbb
fsubl
in
test
jmp
mov
mov
dec
sbb
int3
fildll
fisubrl
leave
fxam
xor
jge
mov
xor
jbe
sub
jmp
popf
fdivl
pop
pusha
testl
add
push
out
dec
rcll
rclb
call
and
shlb
mov
loopne
lcall
adc
jg
mov
out
hlt
pop
inc
inc
cmp
jle
pop
sti
cmpsb
inc
pop
sbb
jg
lcall
push
add
sbb
mov
pop
enter
leave
rolb
shlb
aaa
nop
pushl
inc
and
mov
jmp
adc
test
ret
not
test
jae
pop
mov
sub
subb
aaa
cld
pop
lock
dec
cmp
ss
decb
idivl
cmp
mov
sar
aaa
std
ljmp
xchg
div
lods
arpl
das
lret
movsb
cmp
fcmovbe
mov
add
xor
pop
pushl
std
push
inc
outsl
hlt
ljmp
jl
cmpsl
dec
out
fs
mov
jbe
ljmp
clc
insl
inc
mov
adc
inc
cmpsl
adc
cmp
and
mov
mov
addr16
add
pushl
adc
xchg
out
aas
xorb
add
mov
in
sub
call
iret
or
shl
push
adc
inc
inc
jge
enter
add
pop
scas
fstpt
xchg
in
cli
ljmp
add
fimuls
pop
pop
fcoms
mov
or
stos
mov
and
pop
xor
decl
pop
in
xchg
lods
shrb
add
test
adc
adc
push
ds
dec
add
popf
sar
jg
add
mov
cli
sub
imul
xchg
outsl
pushl
push
push
mov
adc
outsl
pop
cmp
sbb
imul
mov
das
cmp
mov
adc
ficomps
ljmp
inc
pop
mov
push
add
xchg
add
jbe
test
sbb
jg
push
fwait
xor
outsb
std
ljmp
xor
dec
rcrl
lea
xchg
fistpll
sbb
enter
aaa
xchg
pop
sahf
test
push
mov
pop
lret
sbbl
or
call
cltd
and
ret
test
fs
mov
repz
mov
push
xor
in
push
les
jle
decl
jl
fdiv
cmp
cmpsb
pop
xchg
mov
cmpsb
gs
fistps
fprem
jno
ficoml
lcall
dec
sub
aad
adc
xor
mov
mov
cmp
inc
mov
jge
push
subb
mov
aas
dec
xor
lcall
jmp
mov
dec
xchg
data16
push
push
xchg
adc
std
rcr
call
sbbl
mov
mov
cmp
pop
loope
loopne
repz
daa
fcomip
out
lahf
xor
sbb
push
out
dec
xchg
test
cmpl
subl
stc
lret
incl
loopne
jns
xor
jae
bound
fldl
and
add
fstpl
lcall
jnp
hlt
cmpsb
add
lock
incl
jae
push
xchg
mov
lret
rcrl
ffreep
sbb
incl
cli
adc
mov
iret
push
insb
idiv
lahf
fwait
ja
or
push
inc
sbb
bound
mov
clc
jle
sub
add
push
xor
in
ret
das
clc
sti
fisttpll
cmpb
pop
cmp
pop
ret
and
and
nop
js
add
lcall
mov
rcr
dec
filds
xchg
pushf
leave
mov
jg
dec
aaa
mov
jg
test
jae
adc
mov
sbb
lret
dec
ja
add
sub
push
mov
in
xchg
push
sahf
and
cmp
dec
ja
xor
imul
sbb
push
les
movsl
cmp
sub
cmpsl
rcrb
es
mov
fs
insl
adc
cmc
xchg
pushl
xchg
in
inc
xor
cwtl
sub
pushf
and
imul
sbb
lcall
mov
movsb
pop
cs
xor
mov
loopne
and
sbb
mov
incl
cmp
or
movsb
loopne
sbb
aaa
cld
ljmp
xor
outsl
push
sti
daa
mov
jmp
lock
mov
ja
in
mov
enter
cli
sbb
or
test
mov
lret
rsqrtps
fmull
add
js
clc
mov
ljmp
shlb
dec
mov
mov
sub
cmp
js
jb
push
mov
out
xor
insb
dec
fstpt
sub
jp
pop
pusha
cld
outsl
mov
push
pop
mov
inc
sahf
add
clc
lods
popf
mov
jo
dec
and
movsl
xor
das
lea
cmp
jae
push
mov
and
xchg
mov
scas
dec
test
orl
mov
ljmp
in
adc
mov
data16
sub
jle
nop
add
jmp
mov
movsl
addr16
sahf
push
add
cmpsb
aam
movsb
xor
push
sbb
adc
out
dec
sub
inc
xchg
inc
fwait
inc
fwait
arpl
stos
mov
xor
adc
dec
iret
iret
cmpsb
lcall
dec
mov
sbb
mov
cmp
xor
push
jno
jnp
or
and
push
dec
clc
daa
cmpsl
outsb
fistpll
jmp
xor
cld
xor
lcall
mov
sbb
loopne
jmp
push
and
xchg
dec
mov
pushl
push
test
ret
mov
xchg
cmp
fucom
cmp
pushl
jecxz
fisubrs
in
or
int3
sbb
jge
pop
shlb
push
ret
shl
outsl
loope
movsb
push
movb
lcall
cltd
lret
inc
cmpsl
adc
addl
dec
int3
fwait
inc
outsl
lret
xor
push
in
ljmp
cmpb
iret
push
push
scas
shl
cmpsl
cmp
jge
das
mov
incl
push
in
rorl
mov
sub
add
mov
test
mov
xchg
dec
mov
and
nop
les
add
inc
adc
inc
sbb
call
sbb
dec
enter
mov
jo
jb
sbb
lods
ficompl
and
jp
daa
push
lods
adc
cltd
dec
sbb
sbbl
bnd
mov
cmc
or
ljmp
pop
inc
xor
shll
and
fwait
lret
mov
push
mov
and
ljmp
xor
ljmp
hlt
popf
lds
sub
sbb
jmp
push
lahf
push
sbb
arpl
std
mov
mov
fcmovnbe
sbb
fwait
int3
in
dec
dec
jg
das
shrb
cmpsb
std
mov
outsb
fistpl
mov
lods
js
inc
pop
sbb
cmp
addr16
adc
push
ficompl
and
incl
js
insb
adc
jne
icebp
sahf
mov
adc
insb
imull
addr16
xchg
add
ljmp
xlat
stos
xchg
adc
mov
shlb
dec
lock
pusha
ret
iret
xchg
sbb
sarl
decl
and
adc
hlt
repz
shll
cs
fwait
je
stos
jg
adc
divl
das
dec
sub
call
inc
inc
ljmp
xchg
fwait
add
dec
nop
or
jle
and
scas
push
cltd
inc
cmpsl
cs
decl
pop
sbb
nop
cmp
push
and
xchg
mov
fistps
cmp
sub
scas
mov
add
fnstenv
dec
mov
push
aaa
cld
ljmp
iret
sbb
jb
repnz
push
scas
scas
add
js
icebp
loop
jp
jg
add
movsb
jb
pop
jmp
xor
inc
roll
dec
decl
scas
rol
adc
daa
and
add
jg
fcomps
xor
or
daa
out
jmp
inc
int3
jg
stc
dec
sub
push
cmpsb
shr
sub
clc
outsl
ds
mov
mov
jmp
sub
jmp
jp
cmpsl
lods
add
das
xor
or
jnp
testl
jno
fs
test
pop
jae
or
xor
fcomip
pushl
adc
xchg
lcall
aaa
insl
adc
movsb
std
xchg
decl
clc
imul
mov
dec
fdivl
insb
mov
in
cld
mov
aaa
hlt
sahf
push
mov
outsb
cli
xor
pop
das
test
cmp
mov
mov
pop
inc
xchg
in
ljmp
data16
pushl
std
scas
popa
aaa
in
jl
lock
mov
mov
ror
pop
std
mov
jmp
jmp
mov
stc
xchg
adc
mov
jmp
adc
push
sarl
xor
clc
in
push
jle
xlat
pop
dec
adc
es
loop
sti
or
jecxz
jg
call
into
mov
mov
xor
pop
inc
xor
ss
dec
rcll
lds
out
insb
lcall
ds
or
mov
jmp
xchg
call
sub
les
mov
mov
rorl
outsl
psubq
shrb
mov
xbegin
pop
call
std
incl
in
cld
dec
pop
jne
inc
outsb
adc
scas
add
cmp
ljmp
pop
lea
adc
movsl
out
add
inc
int3
lahf
push
imul
dec
aas
sbb
jg
js
sbb
aaa
lahf
shr
das
cmp
loopne
aas
in
nop
inc
mov
and
daa
jle
fcomip
jmp
or
adc
sub
inc
pushf
arpl
out
outsl
test
jg
push
xchg
scas
push
push
cmpsl
push
jnp
mov
movsb
shlb
lea
cmc
decl
jb
and
mov
adc
xchg
les
pusha
idivl
dec
out
lcall
andb
pusha
js
daa
mov
and
jle
push
enter
lahf
aaa
and
lcall
outsl
jg
xlat
insl
out
pop
pop
out
dec
push
xor
imulb
xor
add
lahf
int3
mov
inc
jle
push
vandps
mov
sbb
mov
push
bnd
dec
in
mov
insl
js
cli
call
leave
int
xor
and
mov
pop
sbb
daa
aaa
repz
lds
cs
and
pushl
push
xchg
lret
ret
out
pop
sub
lcall
cmp
out
lods
es
subl
iret
inc
test
dec
sbb
pop
hlt
dec
xor
lods
jg
dec
push
test
aas
scas
test
sti
je
mov
dec
dec
enter
add
imul
xor
mov
out
sub
int3
imul
aas
add
ljmp
adc
negl
loopne
int3
dec
pop
out
sub
fldt
js
shl
imul
fdiv
pop
mov
xchg
push
mov
push
sub
aam
pop
inc
in
xchg
cltd
mov
jecxz
push
cmp
mov
popa
nop
mov
fimull
fildll
lock
decl
pop
mov
dec
hlt
pop
lahf
jp
ss
sub
movsl
dec
lds
addb
idiv
jmp
push
decb
aad
nop
outsl
add
inc
lret
push
mov
das
in
add
call
jae
orl
jp
andb
cmpsb
lods
faddl
adc
cmp
call
add
mov
js
idiv
and
sub
fisubrl
or
call
xor
add
ja
sahf
ja
dec
jg
popf
inc
add
xor
sbb
ljmp
sbb
and
dec
das
xchg
mov
cmp
inc
push
dec
mov
pop
and
ds
xchg
call
mov
jno
fistpll
inc
std
pop
inc
leave
cmpsl
js
mov
jmp
adc
xor
sbb
and
nop
jg
mov
daa
lock
xor
jmp
pop
jae
jp
lahf
inc
cmp
jg
popa
mov
jg
test
bound
xchg
les
fs
adc
dec
mov
and
fadd
pop
and
adcl
movsl
adc
pushl
adc
and
lods
aam
pusha
sub
or
psadbw
jbe
mov
push
fisttpll
inc
push
ljmp
mov
cmp
imul
call
outsb
fstp
jl
pusha
subb
mov
mov
pushf
ja
mov
shll
sar
mov
sti
int
scas
sub
jnp
mov
or
xlat
add
pop
mov
and
shlb
lea
mov
sub
clc
ljmp
lcall
ja
cmp
stos
inc
cmp
in
sub
sub
inc
sbb
inc
insb
push
and
pop
push
es
mov
inc
shlb
test
pop
jg
decl
lcall
lea
divl
jb
aas
adc
iret
xor
xor
addr16
fsubrs
inc
pushf
dec
xor
out
shlb
jge
mov
inc
lcall
arpl
out
jge
sti
dec
mov
push
stos
mov
incl
pop
jmp
lahf
pushf
ret
jbe
dec
jmp
xor
mov
daa
jnp
xor
lods
and
fwait
jp
inc
dec
clc
or
fs
ficompl
sbb
mov
outsl
arpl
cmpsl
pop
adc
lods
lret
push
scas
cmp
inc
cmp
cmp
in
je
cmpb
imul
jo
xchg
inc
out
adcb
add
sbb
push
dec
cli
inc
cmp
rdtsc
aas
dec
insl
cld
decl
inc
cmc
dec
push
es
stos
xchg
push
mov
ret
lcall
or
mov
mov
mov
and
jg
pusha
lock
leave
fcmovnb
out
nop
adc
mov
addr16
btc
incl
jmp
test
cmp
dec
test
in
add
rclb
std
pushl
iret
inc
add
sbbb
mov
lock
stos
cmp
push
mov
sbb
xor
mov
lock
std
ljmp
xor
cmp
add
fcoms
dec
movsb
adc
xor
dec
adc
fisubl
xchg
addr16
orb
lret
or
jg
mov
cmpsl
lods
sub
aam
daa
pop
add
imul
in
sbb
les
shll
ficoml
mov
xchg
pop
sub
call
sbb
xchg
orb
lahf
xor
push
es
insb
enter
jmp
adcb
out
lahf
dec
ljmp
dec
xchg
or
sub
ret
incl
les
cmp
int
stos
jecxz
xchg
mov
and
jne
jg
sbb
jg
xchg
jecxz
loop
mov
add
fldz
out
movb
jmp
xchg
pushl
ss
jb
pop
hlt
push
pushf
jecxz
add
or
arpl
xchg
fsubrs
cs
push
or
cmp
push
filds
sbb
lcall
lret
mov
fsubs
shll
fisubrs
push
mov
lods
inc
push
insl
jmp
cmp
lcall
lock
jns
je
test
fwait
js
sbb
arpl
pusha
sbb
fldt
sub
pop
mov
shlb
mov
std
in
repz
out
and
adc
ljmp
add
scas
xchg
push
inc
in
xor
sub
jb
dec
sqrtps
add
cmpsb
add
push
jmp
mov
sbbl
mov
mov
or
or
insl
rorl
pop
aam
decl
add
sahf
inc
andb
mov
dec
or
mov
or
pop
mov
call
call
mov
adc
inc
fwait
pop
mov
mov
inc
mov
mov
cmpl
push
and
pushl
mov
push
jnp
jl
xchg
mov
stos
xor
pop
xchg
mov
ret
incl
mov
hlt
int3
lods
dec
ljmp
ss
out
aam
shlb
mull
incl
shrl
loop
mov
mov
cmpsb
shll
push
jle
lret
adc
xor
fcomip
stos
pop
icebp
sub
psllw
xchg
repnz
xchg
mov
jmp
jb
insb
xchg
dec
mov
faddl
cltd
in
or
clc
inc
stos
xchg
ljmp
push
out
or
pop
in
xchg
cmpsb
call
dec
jno
pop
mov
test
movsb
or
pop
shll
cmc
loope
add
pop
push
push
inc
imull
push
addr16
icebp
jge
pop
xchg
pushf
test
push
jnp
roll
jle
stos
cld
xor
dec
mov
call
out
outsl
mov
mov
dec
lcall
mov
cmp
aas
out
mov
decl
and
mov
push
mov
stc
lds
dec
lea
cld
in
inc
pop
mov
pop
or
testb
mov
aas
jno
inc
cmpsb
bound
mov
mov
adc
sub
insb
imul
sub
inc
pushf
es
cmp
mov
sbb
mov
xchg
xor
das
shrb
adc
or
mov
outsb
adc
jno
inc
sbb
maskmovq
jns
xchg
loop
xchg
pop
das
xorl
testb
or
mov
mov
fmuls
inc
inc
test
adc
xchg
sbb
aaa
sar
notb
call
and
sbb
adc
inc
pop
hlt
jns
movsl
add
xchg
adc
mov
push
jbe
and
adc
jno
cld
fwait
jnp
add
call
lods
pop
mov
loope
add
fwait
test
dec
outsb
adc
out
lock
pop
dec
add
inc
sahf
push
mov
and
mov
adc
subb
xor
scas
in
cmpsl
or
arpl
aam
mov
add
mov
sbb
js
insb
outsl
sub
in
push
push
in
mov
lret
rorb
add
pushl
sbb
mov
int
jno
cmc
stc
insb
out
repz
xor
or
push
jmp
mov
loopne
int3
sub
inc
push
fwait
pusha
mov
sbbb
in
shrb
mov
cs
aas
movb
push
xchg
mov
outsl
clc
jmp
sbb
cmp
cmp
fldenv
push
jbe
push
aam
out
mov
sbb
pop
mov
mov
push
jno
out
inc
pusha
mov
je
pop
or
scas
ss
cmp
je
mov
mov
in
sar
decl
mov
in
dec
fisubrs
cmp
sbb
ficoml
jle
incl
repnz
imul
pop
add
xchg
dec
dec
ljmp
es
aam
repnz
cwtl
cmp
dec
xor
dec
decl
jp
js
shr
mov
test
push
cmp
scas
and
and
sbb
fwait
add
and
test
push
pop
cmpsb
and
cmp
ret
sbb
or
into
or
ljmp
mov
aaa
push
pop
push
jmp
fdivr
xor
int3
push
stos
or
sub
mov
nop
xchg
add
jmp
or
adc
cs
idivb
ljmp
aas
sbb
mov
mov
mov
push
aas
pop
jecxz
lcall
inc
inc
jge
cmp
icebp
call
add
sbb
sub
jle
ret
add
fstpl
mov
jg
out
inc
fnsave
xor
push
xchg
dec
pop
rorl
push
adcb
mov
cli
ror
mov
insl
sbb
pushl
imul
jg
es
sbb
fwait
sbb
xchg
orb
dec
loope
xchg
mov
rcrl
jge
inc
dec
xchg
xor
mov
xor
leave
hlt
fidivrl
aaa
jae
test
lcall
add
mov
fidivl
mov
loop
rolb
xor
cmpsb
dec
add
add
cmp
fs
sub
stos
mov
push
inc
dec
loop
out
pop
push
lock
pushl
pop
repnz
push
aad
mov
mov
push
nop
testb
loop
mov
jae,pt
stos
jg
jo
ljmp
das
add
add
loopne
add
mov
clc
jmp
fdivrs
mull
jmp
pop
loop
xor
pushl
bsr
sub
addl
adc
andnps
xor
iret
push
xchg
add
clc
push
or
mov
lods
pop
lret
xchg
fnop
fistps
dec
test
xor
arpl
inc
push
pusha
mov
in
bound
enter
add
std
dec
mov
iret
lods
push
adc
call
mov
cmp
push
sub
xchg
leave
xchg
sub
imul
sbb
pop
je
lret
decl
add
or
adc
pushf
mov
or
ja
lock
incl
leave
les
or
push
add
dec
lea
mov
xchg
jg
xchg
incl
loopne
cwtl
cltd
xchg
aas
outsb
out
lahf
dec
pop
scas
adc
dec
adc
xlat
push
mov
mov
testb
leave
xor
sbb
xchg
mov
xchg
ret
and
insl
or
cli
lahf
lods
cld
outsb
add
xchg
clc
dec
popf
leave
mov
into
mov
mov
adc
cwtl
cld
inc
jb
sbb
dec
jmp
adc
or
int
out
adc
add
sub
pushl
lods
pop
xor
test
fidivrl
dec
pop
cmp
movsb
leave
cli
mov
mov
push
pushf
pop
aam
fcoms
repz
ret
or
pusha
push
dec
lahf
jb
out
incl
jo
push
js
mov
dec
xor
into
lock
cmp
push
xchg
mov
jbe
or
decl
pop
stos
popf
jmp
xor
add
adc
lret
xchg
rcr
xchg
sar
pushl
sub
shrb
out
in
or
vandps
mov
push
andl
lds
mov
sahf
push
loopne
jmp
pop
sub
divb
addb
xor
lcall
jecxz
mov
cmp
pop
cwtl
push
jg
call
test
mov
pop
xchg
mov
lcall
stos
adc
stos
decl
push
addb
dec
iret
clc
push
mov
jle
or
add
sub
xor
mov
pop
mov
std
sar
fdivr
jmp
enter
add
fmuls
aas
jg
leave
dec
cwtl
xor
stc
cli
mov
dec
call
in
clc
and
inc
stc
in
and
cmp
shrl
sub
inc
les
jg
dec
negl
xor
mov
mov
incl
or
mov
aam
sbb
ret
insl
add
cmp
ljmp
lret
cltd
jge
call
dec
sbb
and
mov
je
sbb
mov
push
je
outsl
pop
lods
les
dec
mov
mov
ret
mov
jmp
adc
shlb
sub
inc
hlt
dec
dec
mov
and
or
and
dec
movsl
lods
bound
aas
and
mov
inc
jle
sahf
adc
dec
and
jae
dec
add
shrb
bound
in
push
cld
push
sbb
and
daa
std
lret
adc
jge
or
les
dec
aad
and
call
pop
lcall
popf
jnp
in
and
pop
adc
lcall
sahf
adc
adc
hlt
aas
add
or
cmc
fisttpl
std
cwtl
mov
pushl
pop
cmp
pushf
mov
into
lods
jo
push
jae
cli
push
mov
and
repnz
xlat
call
and
push
rorl
and
push
loop
scas
jp
gs
cmp
pushl
or
lock
imulb
repz
iret
mov
call
pushl
xor
cmp
cwtl
sub
pop
sbbl
pop
xchg
pop
loope
cmc
std
sub
ljmp
sbb
inc
adc
leave
jge
data16
aas
push
cli
popa
and
xor
int
sub
orl
inc
std
incl
imul
mov
add
das
mov
fdivrl
out
sub
or
push
mov
enter
cltd
push
out
dec
fwait
xor
push
add
sti
bound
vandpd
mov
in
aad
data16
xlat
cmp
push
rclb
lods
xor
jge
or
pop
aaa
test
lcall
xchg
addr16
aaa
push
sub
stos
pop
or
xchg
add
dec
fcomp
jo
adc
mov
mov
xchg
insb
dec
push
xchg
in
out
into
stc
lods
mov
mov
inc
xlat
imul
push
adc
push
cmp
cmc
pop
divl
push
or
das
shrb
cmp
or
or
mov
flds
call
daa
push
cmp
pop
dec
push
stos
inc
addr16
pop
jle
jo
or
out
incl
adc
ljmp
adc
or
out
mov
xchg
jmp
jg
xchg
lock
rcrb
pop
std
aas
pop
cwtl
mov
scas
xor
pop
jmp
in
test
cli
shll
and
fldenv
sbb
push
mov
leave
inc
inc
call
xchg
or
out
incl
fadds
arpl
cld
push
negl
dec
jno
shrl
int3
ret
outsb
decl
arpl
xchg
rclb
or
scas
frstor
gs
cmp
pop
cmp
sub
sbb
dec
push
lahf
fcomip
ficompl
or
jg
mov
dec
add
lea
xchg
int3
cmp
push
js
ljmp
int
fcmovnu
ljmp
out
mov
mov
movsb
mov
repnz
mov
mov
bound
push
cwtl
push
jns
inc
decl
cli
outsl
pop
cltd
push
inc
pop
mov
mov
sbb
inc
fmuls
mov
call
enter
shll
dec
aas
test
cmp
adc
int
daa
es
cmp
push
cmc
lret
ljmp
push
fisubl
mov
call
in
mov
jae
aad
imul
or
and
xchg
dec
xor
xchg
mov
mov
add
icebp
adc
jmp
call
lcall
loopne
xor
dec
icebp
push
sub
xchg
das
gs
test
jg
jmp
test
mov
xor
popf
xor
jg
loop
mov
xorps
lcall
and
lret
xchg
mov
icebp
inc
gs
out
lret
test
xchg
xchg
or
ja
xchg
inc
push
cmp
mov
or
inc
mov
mov
cwtl
lds
test
mov
jne
jnp
sti
push
mov
jmp
lock
call
xor
xchg
sub
cmpsl
jmp
test
adc
stos
sbb
jg
insb
out
sub
ljmp
and
lret
test
mov
out
test
repz
adc
sar
ja
call
insl
inc
pop
pop
and
push
add
movsl
and
int3
inc
decl
push
or
fucomip
mov
and
xor
stos
and
mov
enter
repz
pop
pop
sub
int3
nop
in
jno
hlt
stos
jbe
notl
stos
in
or
sbb
xor
mov
dec
outsb
fdivr
das
ljmp
cmp
outsl
loopne
adc
cld
int3
data16
lret
data16
filds
pop
push
dec
pushl
cld
ljmp
sub
push
stc
cmp
int3
jle
sub
iret
jp
push
mov
cmp
call
cli
xor
lret
imul
out
cld
outsl
ss
adc
mov
ds
cwtl
or
incl
hlt
and
hlt
add
xor
in
inc
arpl
pop
icebp
fwait
ljmp
aaa
loope
mov
and
dec
out
xor
fcoms
cld
int3
outsl
mov
mov
or
imul
bound
jmp
jno
movsb
nop
mov
int3
movsb
scas
xor
jp
mov
sub
and
pushl
pushl
fcom
pop
push
dec
out
xchg
push
push
jle
add
repz
push
gs
ljmp
add
subl
divb
sbb
outsb
jg
test
mov
cwtl
nop
pusha
xchg
or
inc
adcb
call
popf
push
rol
test
add
enter
and
dec
fldl
cmp
incl
mov
mov
pop
or
fsub
int
pop
stc
mov
inc
sbb
jg
movsb
int3
insl
push
cmp
adc
mov
mov
cmp
sbb
pop
mov
call
inc
testb
fistl
sub
push
addr16
ss
out
or
ljmp
loope
add
add
xor
mov
leave
imul
pop
lock
dec
js
dec
adc
fucomi
aas
or
push
dec
shr
and
decl
out
nop
int
lret
push
mov
mov
sti
lcall
mov
lahf
lcall
mov
mov
and
push
mov
or
sub
out
clc
jmp
mov
mov
inc
sbb
call
mov
add
inc
rolb
dec
ret
scas
and
xchg
decl
int3
mov
push
xchg
jnp
movsl
or
mov
lret
ljmp
jbe
imul
jns
jmp
jo
push
cmpl
dec
sahf
jno
dec
sub
xor
call
lock
je
adc
cmp
mov
pop
iret
fstps
add
bound
fimuls
add
scas
js
jne
jge
jge
add
cmc
cmp
jp
mov
lods
pop
test
or
mov
sbb
mov
incl
mov
and
inc
xchg
and
aas
mov
hlt
sbb
mov
dec
or
lock
dec
ljmp
push
je
loopne
add
xchg
std
sbbb
xor
fsubr
adc
pusha
and
ljmp
mov
jle
hlt
call
stos
fdivr
es
shlb
incl
mov
jmp
inc
shr
push
mov
sub
adc
dec
ljmp
lock
jmp
mov
mov
aaa
cmp
dec
inc
movsb
arpl
push
or
bound
test
call
inc
ja
jecxz
cmpsb
cmpb
xchg
xchg
add
and
decl
pop
push
xor
cmpsb
and
fldt
mov
jb
jle
adc
ljmp
xchg
adc
push
sbb
arpl
mov
mov
bound
add
negl
dec
arpl
pusha
adc
stc
jmp
mov
dec
cmpsl
jmp
sti
dec
sbb
sub
shrb
mov
popf
aas
cmpsb
inc
es
mov
push
xor
loopne
outsl
es
push
out
fcom
pop
dec
imul
lcall
mov
lds
dec
mov
push
mov
sub
jbe
pop
mov
decl
dec
pop
adc
pop
jge
jle
repz
in
cmpsb
lcall
mov
les
imul
mov
xchg
dec
loopne
fsubrs
mov
je
sbb
call
in
jnp
fldl
pop
mov
int
jmp
xor
pop
cld
pop
stos
xor
sbb
fsubr
add
pop
adc
testb
cmp
pushl
std
bound
jno
mov
mov
lret
pop
lock
inc
dec
cld
jmp
and
stc
push
and
test
push
add
je
jae
jno
std
lahf
mov
and
add
inc
cmp
jge
jno
sar
pop
repnz
fdivr
mov
rol
jnp
xor
jns
hlt
fisubrs
ljmp
out
aam
push
cwtl
xchg
cli
jbe
popa
push
fcoml
adc
lcall
out
xlat
jb
lcall
mov
pop
cmc
cmpb
pushf
test
sbb
sub
pop
mov
lea
push
decl
sti
ret
aam
js
insl
setae
inc
or
add
mov
cmp
fstpt
ljmp
pop
mov
sub
xchg
xor
fwait
lahf
stos
xchg
incl
repnz
sub
jle
mov
add
xchg
mov
lcall
adc
negb
push
jl
xor
jne
mov
push
dec
adc
lret
dec
insl
out
push
mov
mov
scas
jno
push
hlt
pop
insl
pop
inc
bound
cwtl
adc
sahf
pop
movsb
test
lret
into
jecxz
dec
sub
lcall
in
ljmp
lahf
pop
xor
mov
in
jo
push
fwait
push
negl
push
add
ljmp
out
pop
pop
add
outsl
out
inc
sbb
imul
jo
arpl
out
cli
adc
lret
loop
out
nop
rorl
test
xchg
cmpsb
dec
sarb
cmp
xor
pushf
scas
inc
dec
js
add
and
ljmp
ds
cmpsb
into
insb
inc
and
pop
push
adc
push
incl
mov
ss
fs
push
cmp
test
push
xlat
pop
sub
mov
jp
inc
jnp
out
stos
pusha
push
testb
inc
mov
or
or
frstor
xor
jae
push
xchg
add
mov
fprem
cmc
xchg
sbb
loop
fs
popf
adc
ja
cmc
negb
jbe
ljmp
sbb
xlat
push
lahf
nop
xlat
xlat
fcomip
mov
fists
adc
sbb
scas
xor
jg
ss
mov
fidivl
push
lret
cmp
pop
sbb
incl
push
mov
stc
in
jns
test
sub
push
insb
pusha
ficompl
sub
mov
or
ljmp
inc
std
out
sub
lods
push
hlt
or
sub
jne
pop
pop
xor
in
ljmp
scas
sbb
daa
iret
divl
lock
rorl
sub
jp
shl
ljmp
lcall
scas
data16
push
xor
rcrb
mov
mov
xchg
cmp
movsl
int3
mov
xor
inc
into
ss
lcall
xor
sbb
jmp
mov
pop
pop
cmp
insb
inc
xchg
icebp
ret
push
repnz
fwait
sbb
push
jmp
insl
mov
adc
sbb
lods
adc
xchg
fdivs
mov
int3
rol
sub
pop
out
sub
scas
mov
gs
in
push
in
ja
mov
lock
jmp
inc
mov
xchg
inc
pop
gs
cmc
push
jp
inc
dec
fadd
xor
xor
fdivrp
decl
adc
les
cmpsb
aad
aaa
cmovl
pop
fs
je
jg
cmp
int3
les
fsubs
or
lods
cs
decl
dec
dec
popf
lahf
cltd
jmp
bound
or
push
jo
ja
mov
incl
mov
ds
rolb
addb
insb
pop
mov
sti
mov
xchg
jecxz
popf
idivb
out
clc
jl
inc
lods
or
pop
arpl
mov
mov
popf
jns
repnz
inc
push
stos
mov
rcrl
pushf
inc
add
sub
push
pop
pushf
call
repnz
mov
inc
and
mov
cmp
inc
sub
push
out
les
decl
add
rcl
mov
adc
in
ficoms
xchg
xchg
mov
imul
add
mov
lock
in
mov
pop
aam
dec
lret
imul
add
mov
pushl
mov
dec
out
adc
dec
push
pop
cmp
add
test
decl
gs
mov
adc
test
sbb
cmpsl
lods
mov
dec
mov
jmp
cli
outsl
cmp
adc
push
rcl
imul
scas
dec
ds
xchg
add
leave
mov
dec
aam
nop
xor
add
ret
lods
xor
out
loop
mov
lcall
sbb
test
idivl
nop
adc
ucomiss
dec
scas
jecxz
mov
xor
call
push
in
popf
xchg
push
push
jnp
lret
mov
cld
daa
mov
fldenv
cmp
pushl
hlt
js
xor
repnz
repz
xchg
popa
and
addl
out
hlt
add
xor
jge
rcll
adc
je
jns
push
pusha
sbb
shlb
adc
jmp
out
gs
mov
stos
sub
in
pusha
mov
xor
sbb
ja
rcl
aaa
sub
incl
adc
xor
std
aas
pop
mov
jae
inc
popa
jl
xor
sbb
xchg
inc
scas
dec
jg
mov
ljmp
shll
xor
std
mov
pop
mov
imul
icebp
mov
push
jns
sub
dec
jmp
mov
jmp
subl
push
lcall
jmp
popa
insl
and
adc
test
sarl
lcall
xor
mov
roll
popa
in
and
dec
popf
cmp
iret
xor
pushl
sahf
mov
pusha
movsl
std
les
jg
pop
shl
fwait
inc
and
xchg
sub
pop
leave
cmp
decl
cmp
fs
cli
rcr
xor
andl
jbe
repz
pop
or
decl
imul
enter
iret
mov
decl
push
enter
or
mov
sbb
adc
mov
in
es
out
xchg
inc
or
xchg
add
dec
nop
mov
jle
fdiv
lret
lcall
pushl
pop
ss
mov
mov
rcl
aad
adc
push
mov
incl
pop
push
popf
test
aaa
stos
jp
jle
pop
sub
cli
aad
mov
pushl
sub
movsb
mov
pop
mov
dec
andl
movsb
test
add
lcall
lcall
je
fmull
leave
pop
jns
adc
jg
adc
inc
pusha
pop
adcb
xchg
movsb
xor
sub
repnz
jns
or
mov
ret
push
dec
fadds
inc
and
lods
pop
sbb
lret
int3
bswap
or
add
jg
les
jo
ret
out
jne
test
leave
xor
pop
pusha
ja
ret
xchg
dec
inc
lahf
out
cli
sub
pop
movsl
sbb
sub
jl
xchg
aas
inc
mov
daa
fnstsw
insb
mov
pop
xor
cmp
mov
je
inc
sti
stos
sbb
xor
inc
xor
fisttps
pushf
mov
dec
neg
in
sti
jg
jbe
call
jbe
in
mov
or
push
out
dec
imul
test
sbb
cwtl
mov
and
and
pusha
jp
in
inc
lret
les
xchg
sub
outsb
and
push
mov
fcomip
std
fsubs
testl
shll
dec
pushf
pop
out
push
jg
dec
inc
inc
fwait
test
mov
int3
out
bound
lock
fsubrl
outsl
inc
inc
ljmp
ficomps
or
sub
pop
loopne
dec
rorl
lcall
pop
call
lock
or
out
repnz
push
sub
adc
hlt
aad
xor
cltd
pusha
pop
xchg
orb
push
repnz
decl
jo
popf
add
enter
rcl
scas
ja
mov
and
stos
movsl
xor
mov
push
icebp
ss
mov
add
mov
pop
test
outsb
push
les
insl
mov
lret
enter
cmp
aad
pop
outsl
fmul
stos
pop
daa
pop
adc
mov
lock
mov
ret
decl
cs
pushf
popa
pop
jp
mov
pop
and
sbb
xchg
cmp
cmp
sub
mov
and
or
out
mov
jnp
pop
mov
mov
fbstp
ret
ljmp
or
outsl
inc
sbb
mov
fimull
outsl
xlat
and
sbb
xchg
pop
lahf
add
push
pop
fcomip
mov
outsl
cmp
je
push
addr16
cs
or
imul
mull
in
mov
bound
pop
push
or
add
ds
pop
aas
orb
out
int3
mov
sub
repnz
or
stos
sub
push
cli
pop
cmc
lcall
push
inc
push
cltd
inc
and
pusha
cwtl
test
mov
insl
arpl
mov
or
les
adc
idiv
mov
stos
jmp
or
scas
div
xor
or
mov
cwtl
shll
pop
sbb
xor
jg
ljmp
out
mov
push
shrl
push
cld
mov
and
int
sti
arpl
lods
cmc
jmp
dec
aam
xlat
push
fs
fstpl
mov
inc
or
scas
and
decl
adc
xchg
fsubs
mov
incl
lock
dec
ljmp
xchg
cs
lret
jne
push
sarl
lahf
imul
pop
nop
sub
sub
test
and
fcmovbe
xchg
icebp
jg
sub
dec
xor
sahf
int3
pop
xchg
pop
mov
fs
push
pushl
mov
ds
daa
jnp
jecxz
andps
mov
jg
dec
stos
push
cmp
jae
std
pop
inc
dec
xor
ljmp
flds
call
xor
stc
shlb
out
jg
xor
lcall
xchg
stos
popa
fidivs
lods
call
jmp
es
mov
dec
rorb
in
jle
sub
jns
mov
in
int3
inc
dec
loope
nop
cmp
add
mov
dec
ja
dec
mov
mov
xchg
negl
jecxz
mov
mov
int
insl
pop
cmp
addl
and
in
test
incl
aam
add
mov
enter
adc
popa
jmp
pushf
mov
imull
dec
out
xchg
pop
sbb
jb
addl
pop
stos
xchg
jecxz
jmp
dec
hlt
aas
sbb
xchg
sbb
or
loop
jg
inc
dec
inc
mov
push
xchg
ljmp
in
mov
fistl
lret
mov
dec
icebp
neg
xchg
cltd
push
cmp
incl
sub
xor
sbbb
test
push
lock
inc
mov
jne
jnp
cli
pop
jge
test
cmp
aam
testl
mov
adc
push
decl
shll
mov
push
mov
addl
mov
pusha
inc
inc
jecxz
push
decl
jecxz
popf
add
call
insb
shrl
lret
incl
scas
inc
dec
xor
lret
push
stos
in
call
clc
add
push
pushl
ljmp
or
xchg
test
mov
mov
add
inc
inc
insb
jmp
aad
out
incl
loopne
sub
push
in
cmp
add
int3
fs
out
cli
jmp
mov
jb
add
jnp
aaa
lea
cli
sbb
xor
scas
test
push
sbb
or
mov
les
cmpsb
stos
cld
loope
sbb
popf
jns
push
push
sub
mov
leave
ja
pop
ljmp
bound
pusha
dec
xchg
mull
jl
hlt
push
popa
dec
aam
sar
cli
pop
leave
or
xchg
mov
inc
pop
enter
mov
out
call
enter
lea
stos
mov
mov
call
xor
dec
jb
mov
lods
mov
dec
aas
in
push
dec
xchg
mov
xchg
jp
fwait
incl
add
ret
daa
sub
and
inc
in
mov
dec
int
cmp
push
mov
push
pop
shl
sti
pusha
jae
repnz
adc
dec
xchg
add
mov
mov
les
sbb
outsl
mov
cs
xchg
cmp
and
inc
outsb
aad
cli
das
ret
jmp
push
lods
xchg
jo
mov
pop
aad
into
sub
adc
mov
add
pushl
cmp
sbb
push
jg
std
dec
mov
cmp
cmp
mov
ds
sub
jmp
test
daa
in
jecxz
pop
scas
pop
mov
sbb
jno
sahf
jg
sahf
dec
test
lahf
rclb
call
shrb
push
jae
stos
dec
push
ss
push
lret
jbe
movsl
shrb
and
jp
inc
pushl
enter
dec
or
inc
test
adc
xor
mov
call
dec
xchg
xchg
pusha
xchg
jp
stos
in
and
cld
xchg
je
cmp
popf
xchg
cld
call
sub
ljmp
jp
or
aam
shlb
jae
push
jmp
call
aaa
push
mov
xor
mov
rcll
pop
pop
aas
scas
dec
push
std
pushl
pop
icebp
dec
popf
or
loope
jg
push
and
in
sbb
add
jmp
mov
ss
push
pop
pop
mov
or
inc
and
movl
sub
add
incl
fadd
cmp
fdivr
incl
cmc
into
nop
stos
aas
mov
stc
ror
cli
jl
pop
inc
fildl
mov
addr16
movsb
scas
and
ljmp
repnz
inc
and
repnz
fstpt
adc
push
lret
es
ljmp
fsubrl
leave
lock
xlat
test
je
jp
xchg
push
inc
add
jmp
cmc
imul
lods
adc
data16
pop
adc
in
sub
jg
xchg
xchg
xor
fiaddl
adc
and
cld
inc
into
mov
jmp
sbb
or
pop
icebp
icebp
or
pop
mov
pop
aad
dec
mov
aas
adc
stc
cmp
dec
notb
rol
inc
sbb
pop
or
popa
lods
inc
dec
test
outsl
sbb
sub
pop
decl
jle
outsl
outsl
push
stc
cmp
mul
cmp
mov
or
mov
xchg
xchg
incl
push
cmp
pushl
dec
fidivrs
inc
mov
adc
mov
orl
push
xlat
jle
stos
hlt
dec
movb
fistpl
in
and
push
je
add
add
scas
jmp
pop
mov
jno
cmc
mov
decl
fildl
mov
adc
pop
cmp
repnz
aaa
xchg
jmp
lcall
subb
inc
and
cmp
xor
cwtl
inc
inc
sbb
xchg
sti
xor
mov
decl
scas
inc
imul
and
jno
sub
push
cs
cltd
scas
and
add
ret
ljmp
shl
je
and
lods
and
stos
rolb
sub
cmp
jnp
roll
ljmp
sbb
out
pushf
daa
sbb
xor
mov
push
mov
jecxz
adc
shll
inc
ljmp
mov
mov
sub
jmp
inc
lahf
push
xor
aad
dec
cmp
divl
jg
pop
popf
iret
xchg
rcrl
xor
mov
call
push
xchg
and
adc
xchg
inc
iret
ss
jecxz
sub
mov
mov
nop
add
in
sub
orb
loop
xchg
cs
push
cmp
ret
dec
lock
or
nop
loopne
incl
pop
sbb
pop
orb
imul
je
mov
or
aaa
mov
adc
pushl
cwtl
movsb
mov
dec
mov
adc
lods
inc
dec
cmpsl
addb
jbe
push
clc
and
pop
and
and
add
push
jbe
xor
mov
mov
mov
fldcw
fwait
clc
lahf
pop
cmpsl
add
push
les
cmpsl
xchg
xchg
loopne
cld
sbb
jo
stc
xchg
sub
pushl
das
int3
std
cld
call
lahf
mov
js
aaa
test
out
cmpsl
mov
adc
jmp
mov
int3
andb
dec
inc
pop
xchg
stc
subb
adc
sub
mov
ljmp
mov
out
int3
loopne
cmp
scas
push
xor
dec
ljmp
mov
call
test
insl
cmc
ljmp
sbb
in
pop
jp
notl
fsubrs
xchg
cmpsb
decl
ficoms
mov
insb
test
mov
sub
dec
in
das
mov
out
jl
and
ss
jne
jb
sti
movsb
push
cmp
mov
pop
lret
fildl
push
adc
es
adc
mov
mov
dec
inc
cli
cmpb
js
jg
lcall
test
mov
iret
out
mov
sbb
lds
xor
cwtl
and
mov
ret
ljmp
es
mov
xor
sub
das
scas
and
mov
lock
call
adc
cmp
sarl
cmp
dec
outsl
xor
push
addb
enter
cmpsl
lcall
bound
popf
scas
push
sbb
or
call
xor
out
cmp
cs
xchg
inc
pop
jbe
negb
mov
cmp
outsb
int
push
lcall
inc
xchg
fs
out
xchg
xchg
push
pop
or
push
std
cmpsl
mov
shll
or
lcall
sub
jo
pop
out
mov
mov
sbb
nop
out
gs
xor
out
ss
ljmp
mov
icebp
pop
ror
xchg
or
lods
sbbb
lret
shr
clc
jns
outsl
mov
imul
inc
cmpl
pop
jl
push
jp
sub
mov
mov
sbb
cmp
je
pop
imul
mov
dec
aad
test
xor
leave
sub
jle
pop
sub
sub
clc
or
test
sti
movsl
cld
jle
cmp
pop
int3
jb
adc
es
jnp
xchg
out
andb
jmp
adc
push
ss
sub
push
loope
push
push
les
push
dec
cmp
lds
jmp
and
test
nop
xchg
arpl
stc
xchg
movups
dec
lcall
pop
dec
lock
pop
sti
sub
xor
sbb
xor
pop
in
add
push
adc
push
movsb
movsl
mov
lods
sbbb
push
xchg
test
xor
cmp
xor
jbe
push
xor
jmp
jnp
ret
movsl
adc
insb
xchg
pop
mov
jge
push
fsubl
data16
in
push
call
in
or
add
iret
fsubrs
jnp
push
into
cs
decl
aad
int
push
gs
hlt
mov
pop
adc
jmp
movl
lcall
clc
push
adc
outsb
inc
sbb
sub
cmp
jb
push
fs
loopne
testl
aaa
push
insb
pop
lcall
outsb
repz
xor
fildll
lcall
hlt
popf
mov
add
jle,pn
mov
ljmp
fsqrt
dec
sbb
inc
and
jmp
lcall
sub
push
mov
mov
jns
ja
inc
adc
outsb
sub
ret
int
mov
cmp
incl
sbb
sub
xchg
movsb
sub
mov
mov
ret
jmp
mov
cli
xor
jae
pusha
pop
add
flds
mov
in
pushl
mov
lock
ja
out
mov
call
std
mov
jae
xchg
push
lcall
into
sbb
pop
dec
int
inc
pop
or
xchg
sbb
ljmp
mov
shrl
mov
jbe
adc
push
sbb
pop
test
cmp
pushl
rclb
test
mov
lcall
jae
clc
pop
adc
mov
repnz
xchg
adc
or
sbb
xor
mov
mov
aam
cmp
pushl
bound
je
xchg
fs
inc
pop
shlb
insb
divl
push
insl
sahf
movsb
mov
lods
ljmp
dec
data16
or
xchg
movsb
into
std
leave
jno
push
mov
leave
cmpb
add
arpl
iret
sub
inc
mov
pop
jge
add
repnz
jnp
mov
idiv
sbbl
mov
jecxz
pop
and
sti
gs
dec
outsb
lret
dec
inc
sbb
sbb
sbb
shl
xor
sti
mov
push
push
sub
insl
test
cmp
add
into
arpl
lods
mov
and
mov
out
call
inc
loopne
rcr
inc
popa
dec
roll
sbb
daa
jecxz
sub
ja
jmp
repz
ss
rorb
adc
popf
sbb
and
mov
fildll
push
or
int3
test
mov
clc
das
outsl
cli
sub
sbb
pop
dec
dec
push
push
push
sbb
frstor
out
xor
push
jg
mov
decl
adc
iret
minps
pop
ret
lods
nopl
lahf
orl
and
jg
jmp
rorb
push
repnz
xlat
or
pop
mov
decl
mov
cmp
mov
push
hlt
jecxz
mov
mov
fcomip
add
mov
imul
lahf
mov
aas
sbb
movsl
jnp
int3
mov
call
xchg
es
dec
jbe
adc
cmc
xor
mov
jmp
test
adc
test
mov
or
dec
test
cmp
and
fst
add
push
fdivrs
inc
sahf
or
fcomip
decl
nop
pop
add
inc
mov
pusha
sub
jge
ds
loopne
js
fisubl
cmpsb
push
shlb
mov
int3
data16
jg
mov
jmp
sbb
xlat
ret
inc
movl
lock
stos
sbb
xchg
sub
call
xchg
mov
arpl
iret
push
sub
imul
jno
xchg
dec
or
out
insb
or
leave
in
sar
and
xlat
push
jb
push
sahf
push
push
jmp
inc
pop
movsl
cwtl
icebp
xchg
add
xchg
andl
mov
sbb
das
aas
fnstenv
fidivrl
lods
in
add
shl
mov
inc
sbb
fwait
iret
mov
in
in
cmpsl
fdiv
lods
mov
pop
aas
mov
inc
jbe
aad
dec
sub
adc
add
or
xchg
dec
mov
mov
in
xchg
add
jns
enterw
dec
adc
leave
ret
cmpsb
arpl
mov
xorb
push
enter
fnstcw
jmp
loope
push
aaa
push
fcomps
push
push
mov
mul
inc
icebp
iret
adc
mov
add
fmuls
repnz
jb
mov
aad
ret
pusha
popf
sub
lea
into
jecxz
push
adcb
ss
iret
dec
fidivl
inc
notb
or
leave
lods
jne
lcall
sbb
lods
and
sbb
xchg
push
jmp
lods
icebp
in
movsl
and
pop
xchg
div
bound
mov
mov
in
jg
mov
push
and
nop
sbb
lret
dec
aaa
sbb
test
jg
jmp
jne
test
jne
iret
cmp
push
and
ja
mov
xchg
test
call
add
push
sub
pusha
and
add
lods
ds
mov
call
mov
xor
xchg
pop
sub
sbb
lock
mov
cmc
insl
xor
mov
lcall
loopne,pn
xlat
sub
shll
rcrb
push
push
jge
rorl
push
in
mull
jns
shll
aas
sub
fbstp
jae
fisttps
inc
adc
xchg
fdivs
leave
xchg
decl
lds
inc
sbb
les
out
sarl
ljmp
sub
loop
mov
ucomiss
adc
scas
jno
jp
in
dec
ret
int
shll
mov
mov
enter
and
pop
sbb
imul
inc
pusha
mov
aad
jbe
xor
xchg
mov
and
mov
cli
dec
ds
ja
mov
es
fstl
insb
incl
pop
sub
add
mov
stos
push
das
test
lock
ljmp
sti
mov
loop
fisubrs
incl
pop
xchg
add
gs
push
push
jp
adc
push
sti
ret
movsl
xor
ret
ret
jo
fldt
ret
loope
pop
je
aad
or
xchg
push
cld
ljmp
shll
mov
aaa
lcall
fisubrl
push
lcall
mov
cmp
push
xchg
dec
hlt
dec
insl
outsb
sbb
std
xchg
pop
xlat
mov
mov
pushl
inc
xchg
mov
push
dec
mov
mov
mov
loope
loope
shl
decl
dec
inc
mov
cs
mov
add
pop
or
mov
dec
jnp
sar
ljmp
push
pop
fnsave
and
fcompl
aam
xor
gs
in
inc
fstl
icebp
test
xor
outsb
cmpl
lea
lret
pop
sbb
clc
dec
push
and
call
dec
out
add
mov
sbb
imul
enter
pusha
cltd
call
jmp
jmp
in
rcr
sub
insb
aam
xlat
sbb
cltd
sbb
xlat
in
into
mov
outsl
pop
pop
addr16
std
lcall
xchg
jmp
mov
sub
add
pop
push
jl
mov
or
lcall
stos
and
jae
or
add
or
lret
inc
shl
inc
push
jle
aas
inc
and
fbstp
iret
mov
pop
or
push
push
add
or
dec
push
xchg
inc
mov
push
gs
fldcw
scas
lock
adc
and
std
fs
incl
in
movsb
adc
loope
ret
mov
sbb
adc
and
clc
cmp
sar
jmp
repz
loop
rcrl
ret
aam
adcb
testb
jnp
call
decl
imul
popa
dec
int
inc
cmp
sbb
lds
mov
xor
push
loopne
mov
push
in
in
cmp
imul
mov
aaa
or
stos
popf
loop
and
into
jmp
push
xchg
icebp
mov
mov
lahf
sub
xor
cmp
cmp
mov
movsb
jno
or
sub
xor
cltd
cmc
pop
push
cmp
mov
pop
jg
mov
sub
or
cmp
jecxz
rcrl
mov
xlat
jmp
push
ret
jmp
mov
out
add
push
sub
stc
cwtl
pop
sub
cli
add
sbb
and
call
lea
int
enter
inc
dec
cmp
push
xchg
es
sub
mov
cmp
insl
or
adc
xchg
mov
lahf
shrl
lahf
mov
testb
mov
inc
inc
cwtl
sti
push
inc
or
jmp
cld
sbb
stos
push
xor
outsl
dec
xor
jl
push
js
out
test
into
inc
sub
lcall
add
lfs
in
ds
mov
out
or
cmp
dec
mov
cld
mov
inc
mov
cltd
xor
push
dec
shl
cmp
xchg
pop
sbb
fstps
mov
cli
shll
repnz
pop
push
and
sub
fiaddl
cli
jg
arpl
loop
in
adc
xchg
xor
fistpl
cs
push
ljmp
int3
xor
adc
incb
and
mov
adc
jmp
mov
jge
rolb
das
data16
mov
mov
sub
ds
sub
mov
cmp
push
mov
in
arpl
frstor
repz
das
and
popa
adc
fwait
or
add
push
dec
mov
or
imul
add
test
loopne
out
pop
sub
decl
js
test
cmpsl
fnop
add
jmp
xor
or
mov
xor
mov
scas
out
clc
cmp
adc
push
push
mov
pop
cmp
cltd
dec
bound
xor
out
mov
int
push
test
jl
cwtl
mov
xchg
adc
mov
dec
xchg
jne
push
roll
sbb
scas
clc
pushl
stos
push
xorw
sub
aas
fwait
icebp
adc
pushl
sub
and
or
and
mov
int3
xchg
mov
add
push
push
idiv
in
xor
push
movsl
push
jmp
push
pushf
lock
bswap
ljmp
test
push
imul
call
and
mov
sbb
mov
xor
jle
rorb
insb
clc
jle
cmc
sbb
enter
ljmp
mov
loopne
insl
cmp
ret
cmp
adc
test
rclb
cmpsl
lods
xchg
call
scas
in
fs
dec
movsl
pop
push
cltd
cmp
addr16
lcall
aas
jmp
push
xchg
jae
scas
push
loope
lock
cmpsl
mov
in
xchg
les
pop
sbb
adc
pop
push
fptan
mov
test
pop
inc
loopne
push
into
test
insb
scas
or
push
ds
xchg
decl
push
jbe
sbb
jne
pusha
or
rcrl
push
sti
pop
push
test
and
mov
mov
mov
push
out
jge
sbb
das
daa
popa
out
mov
push
add
adc
mov
or
xlat
lods
fs
imul
out
add
mov
inc
push
sbb
jnp
jg
lcall
xchg
cmp
out
mov
pop
push
mov
shlb
xchg
add
icebp
sbb
dec
arpl
mov
mov
repz
pushl
bndldx
mov
stc
sub
pmuludq
ss
jnp
cwtl
sub
xor
insb
xchg
mov
pushl
cmp
sbb
lret
pop
cmp
roll
sub
cli
inc
mov
std
popf
adc
ds
shrb
fdivp
adc
fcomps
stos
scas
adc
pushl
test
push
loopne
rcrl
add
hlt
inc
and
es
loope
out
das
push
sub
call
out
mov
into
push
adcl
dec
or
xchg
xor
jge
cmp
lock
cmp
decl
xchg
xchg
mov
mov
pop
inc
add
jbe
dec
dec
add
lods
test
cmp
in
sub
adc
mov
mov
out
cmp
jmp
std
lahf
std
cs
les
add
nop
mov
xor
or
cwtl
push
sub
loope
mov
fcomip
out
in
jle
xor
jle
adc
add
pop
jns
xorl
jl
jns
clc
clc
out
sub
push
sub
dec
roll
mov
pop
mov
sbb
call
xorl
xor
sbb
subb
outsl
pushf
lock
cli
pushl
dec
jmp
cmp
and
jp
pop
push
dec
xor
lcall
push
lock
dec
sbb
pop
xor
sub
push
loop
inc
aam
and
pushl
leave
inc
mov
add
xchg
jle
std
int
pop
insb
mov
mov
mov
xchg
mov
cmp
dec
dec
daa
test
mov
pop
cmc
jmp
cli
pop
stos
sub
xor
aaa
pop
aam
push
decl
in
negl
mov
ret
or
jbe
popf
int
es
sbb
decl
xchg
inc
fcoml
and
cmpsb
int3
scas
movsb
lret
sbb
jl
sbb
pop
sti
sub
pusha
sahf
std
pop
incl
outsl
arpl
mov
pop
adc
gs
or
sti
xor
jo
xor
add
mov
mov
push
push
arpl
push
mov
push
push
mov
pop
jle
and
std
pushl
xchg
add
dec
push
loope,pn
stc
push
jle
or
xor
lahf
fcompl
mov
pushl
imulb
mov
ret
sub
js
inc
stos
sbb
mov
jl
mov
daa
mov
mov
daa
shlb
inc
idivb
inc
ss
js
jmp
pop
push
mov
pop
and
decl
and
and
xchg
jb
adc
fildl
sbb
shlb
jmp
cli
adc
push
adc
add
xor
loope
pusha
and
out
sbb
pop
in
arpl
inc
push
cmp
call
pop
push
jl
rcrb
mov
xchg
cmc
stos
fs
stc
jp
aas
push
mov
mov
sbb
mov
mov
or
pop
jg
test
insb
incl
std
mov
lahf
rcr
push
jle
sub
mov
jl
ljmp
and
dec
pop
and
and
shl
out
rorb
sub
or
les
push
fdivrl
popf
lods
cmc
jmp
inc
xor
xchg
shll
xor
out
repnz
push
inc
in
mov
leave
in
inc
cmp
je
xchg
outsb
loop
out
and
mov
loop
jmp
mov
cwtl
shlb
mov
bound
dec
decl
jle
cmp
sbb
fs
je
mov
out
adc
ss
push
pop
jle
incl
in
sbb
pop
lds
jb
test
jle
xchg
cmp
xlat
cwtl
sub
adc
ja
sar
or
mov
add
mov
push
sub
fwait
sbb
dec
imul
dec
nop
inc
add
xchg
sti
out
push
cmpsl
popf
pushl
mov
das
decb
cmpsl
lcall
rcrl
sbb
icebp
decl
lcall
lods
loope
xor
adc
fcoms
sahf
gs
cmp
cmpsb
fisttps
pop
add
xchg
dec
aam
insb
mov
call
call
mov
mov
cmp
les
outsl
or
imul
out
xchg
cs
mov
push
mov
movsb
or
shlb
cmp
icebp
loope
loopne
movsb
stos
sbb
jns
dec
mov
fwait
dec
pop
aam
dec
imul
pop
jge
pushf
xchg
push
mov
jl
flds
and
es
jbe
roll
mov
dec
cmp
inc
cmp
sti
outsb
pop
mov
mov
hlt
mov
aas
inc
mov
sub
sti
aad
decl
sti
clc
jo
js
lea
std
pop
dec
rolb
aam
call
and
popf
in
and
push
mov
dec
stc
push
mov
cmp
decl
cltd
adc
lock
out
adcl
and
repz
sub
pop
aas
fsubrp
call
jmp
jns
mov
test
imul
push
or
scas
insb
cwtl
dec
int3
ljmp
mov
cmp
hlt
jmp
mov
jnp
sbb
fwait
cmpsb
sahf
jmp
cmp
cs
push
lock
lcall
cmpsb
out
aaa
icebp
sub
sbb
mov
push
fldz
add
push
scas
xor
and
decl
ret
addr16
cmpsb
push
out
popa
insb
push
lahf
ds
leave
mov
sti
mov
add
jno
lock
incl
add
repnz
test
jg
sub
les
xchg
sbb
or
pushf
xor
add
mov
imulb
std
and
and
sbb
bound
insb
loope
pop
sti
pushf
js
cs
xlat
hlt
mov
in
sub
lea
adc
fnsave
jns
or
insb
arpl
push
fsubl
mov
imul
sub
loope
jmp
out
sahf
push
mov
inc
jbe
mov
jns
cwtl
sbb
dec
fsubr
add
jo
call
sub
es
sahf
jg
lods
stos
icebp
test
xor
jae
mov
es
jmp
xchg
mov
push
rdtsc
iret
sbb
ror
jmp
add
or
decl
push
arpl
aas
sbb
stos
es
pop
pop
push
mov
loope
cltd
push
xchg
cmp
xlat
les
mov
cmp
pop
shlb
orb
outsl
pop
ret
mov
scas
jg
cmpsl
push
xor
lahf
push
frstor
bound
aas
call
insl
sub
cmc
pop
pop
repz
fwait
and
sar
pop
cmc
out
sub
daa
repnz
sbbl
in
je
mov
or
push
insl
nop
into
addr16
inc
xchg
xchg
inc
and
into
pop
sub
add
dec
cmp
inc
dec
inc
mov
dec
jns
cmp
and
mov
jg
mov
push
enter
cmpsl
lds
incb
dec
sbb
pop
adc
incl
sahf
xor
dec
push
lret
push
jmp
push
mov
lret
mov
enter
adc
ljmp
push
outsl
test
pop
enter
pop
cwtl
in
loop
push
and
sbb
mov
daa
inc
or
dec
cmpsl
xchg
jno
xor
dec
jae
aaa
mov
pushl
jmp
lahf
sbb
insl
mov
add
adc
pop
loop
ljmp
xlat
sub
out
jae
cmpsl
in
stos
mov
or
jl
mov
cwtl
std
incl
ret
call
mov
push
cs
js
xor
dec
in
mov
cmp
call
je
hlt
mov
out
dec
jae
imul
push
cmp
mov
or
mov
jg
test
and
jo
mov
lretw
insl
inc
subb
stos
push
idiv
jmp
int
mov
cmp
scas
nop
mov
sti
mov
fsub
fldcw
fbstp
push
lahf
or
ljmp
xor
lahf
fwait
add
dec
add
push
sub
loopne
out
dec
scas
mov
sbb
incl
fwait
andl
aas
jns
or
cmp
inc
cli
gs
jns
sub
rclb
xchg
add
mov
sub
daa
push
and
or
pushf
call
pushf
mov
in
pop
inc
cld
mov
pop
dec
xchg
das
negb
pop
ds
xchg
cs
mulb
xchg
mov
imul
cld
cwtl
sbb
push
ljmpw
hlt
clc
pop
pushf
pushl
mov
mov
addl
cmovno
popa
inc
push
sub
xor
std
add
dec
sub
push
fldl
test
out
push
cltd
pop
fcom
jb
push
jmp
jmp
scas
pop
ss
outsb
es
jb
xlat
add
shr
sbbl
in
iret
icebp
aaa
cs
leave
fmuls
jp
fwait
pop
sti
pop
or
lret
mov
mov
sub
test
call
sub
scas
fcmovne
in
push
sahf
inc
cmpsb
ficoms
xor
daa
mov
in
sbb
call
nop
cmpsl
cmp
lcall
jg
out
sbb
ljmp
dec
xor
adc
mov
jmp
pop
fucomip
fistl
in
or
clc
call
pop
dec
pop
adc
in
fdivrs
enter
ljmp
pusha
add
sub
cmpl
jns
mov
dec
pusha
sarl
cld
dec
push
stos
les
pop
lret
fstpt
inc
sbb
inc
test
shlb
add
cltd
std
ljmp
rcrb
add
jo
mov
pushf
adc
mov
out
or
lods
pushl
rol
mov
loop
sbb
out
nop
loop
stos
push
or
loop
out
jno
ret
push
cld
decl
cld
outsb
mov
negb
mov
adc
jb
pop
xchg
lcall
fadds
pop
mov
movl
mov
fnsave
mov
xchg
sti
fwait
sbb
cmp
scas
cmp
repnz
xchg
pushl
mov
arpl
loop
push
adc
sub
repz
ret
or
jg
call
add
fmulp
inc
mov
sbb
adc
and
std
jmp
mov
adc
inc
or
jb
outsl
inc
adc
rclb
mov
or
dec
jb
sti
or
mov
gs
push
test
pop
mov
lcall
cmpsl
jp
into
js
inc
jo
iret
sahf
mov
mov
out
adcb
adc
fisttpll
cmp
or
sub
mov
idivb
inc
xor
jne
jbe
push
loop
ret
scas
inc
inc
data16
lcall
rcl
pop
fsubrp
mov
sbb
cmp
shrl
int3
fimull
lcall
es
out
jnp
lcall
cmc
pop
pushl
daa
call
inc
adc
jmp
cmc
inc
sbb
mov
push
or
cmp
xor
push
divb
insb
cmp
add
jb
cmc
fsubrl
stos
mov
fildll
jmp
scas
in
jmp
cld
pushl
scas
popa
fadd
push
cli
mov
arpl
into
negl
aad
push
add
call
out
adc
movsl
push
fucomi
into
in
test
push
lret
out
incl
movsl
xor
mov
add
push
push
insb
or
dec
in
cmp
lcall
pop
and
cmp
cmpsl
arpl
sub
popa
iret
sub
xchg
sub
mov
call
clc
mov
sub
lea
add
decl
test
sbb
andl
imul
loope
sti
cmp
sub
loopne
mov
push
mov
inc
sbb
pushl
call
mov
fs
jnp
xchg
mov
rcl
ljmp
mov
adc
xchg
push
cmp
dec
add
ja
dec
adc
lret
mov
inc
arpl
add
fs
sbb
dec
inc
std
int3
aad
pushl
lea
add
adcb
lahf
cmp
adc
xor
and
movsl
mov
ljmp
sub
xchg
pop
loope
sbb
push
dec
xchg
mov
test
xlat
loopne
pop
into
mov
clc
idiv
std
gs
mov
jge
mov
jnp
xor
rsqrtps
inc
out
mov
clc
popf
stos
js
out
cli
dec
jo
jl
nop
psrad
mov
jae
jns
sbb
and
mov
and
out
repnz
out
xor
jnp
inc
pop
mov
mov
jg
call
imul
mov
push
push
clc
roll
jmp
cltd
dec
call
fisubrl
push
inc
jae
das
and
in
arpl
xchg
jmp
cmp
pop
dec
icebp
js
in
fildll
adc
add
jns
pushf
inc
fimull
xor
push
sub
mov
outsl
arpl
stos
daa
leave
mov
scas
cmp
hlt
scas
popf
int3
sbb
jmp
ret
mov
mov
imul
or
aad
mov
outsb
xlat
fisubrl
enter
incl
cmp
dec
rcrb
xchg
adc
out
xchg
int3
mov
fistl
xchg
into
fs
inc
adc
lcall
decl
loopne
in
cld
sbb
icebp
arpl
xchg
adc
cmpsb
aas
sbb
hlt
mov
push
add
jmp
std
adc
add
jns
jnp
add
xor
dec
jmp
fcomip
mov
cwtl
stos
sub
ja
push
xchg
xchg
dec
jg
pop
arpl
das
dec
mov
sahf
jmp
and
pop
xchg
cli
popa
repnz
lcall
mov
mov
fnsave
inc
fadds
mov
movsb
hlt
decl
les
ret
sbb
xor
ret
call
mov
sbb
adc
cli
cmp
ds
not
dec
rorb
loopne
stos
dec
or
xchg
pusha
xchg
test
push
mov
mov
movsb
or
xchg
ja
dec
lcall
push
call
cld
cmp
xor
in
or
add
call
decl
test
adc
scas
pusha
outsb
jae
es
repnz
mov
mov
mov
jmp
cmp
inc
popa
imul
jge
cs
push
popa
jge
jmp
loope
jl
dec
out
sbb
decb
pop
mov
and
enter
shll
add
jmp
lock
out
cli
lock
sub
icebp
sub
sbb
outsl
sbb
inc
aam
mov
ret
decl
ja
stos
xor
push
xor
add
movsb
pop
aas
mov
cmp
pop
mov
sub
add
jo
ds
pop
into
and
mov
decl
in
sub
adc
stc
cmpsb
xchg
and
cmpsl
js
shlb
je
adc
jmp
jle
push
cltd
mov
scas
lahf
add
push
mov
call
or
push
or
jmp
bnd
dec
into
sub
in
jg
call
das
mov
cmp
sahf
nop
testl
push
lock
jo
and
pop
in
sbb
lds
ficompl
inc
and
mov
jb
les
add
je
xchg
lods
dec
test
jmp
popf
loop
xchg
mov
fs
mov
fwait
scas
push
sti
jb
enter
pop
hlt
incl
test
adc
jo
add
jmp
ret
dec
stc
bound
or
cmc
fwait
push
dec
lock
lretw
pushf
add
daa
jmp
mov
gs
in
loopne
jo
sub
lret
cmp
jge
dec
push
in
lock
lcall
sbb
jmp
in
nop
adcl
sub
test
mov
loop
repz
ret
rclb
mov
outsb
pop
lds
subl
lods
add
call
aas
fsubrs
mov
data16
pop
rorb
xor
mov
and
inc
sti
jns
mov
mov
mov
xchg
push
push
xchg
out
loop
and
mov
jmp
sub
dec
jbe
dec
rolb
out
stos
mov
xor
icebp
dec
addr16
shll
mov
dec
dec
cmp
outsl
xor
sti
push
push
sub
pop
sarl
aad
ror
cmp
pushl
sbbb
adc
mov
in
cli
movl
outsl
decl
push
jmp
xchg
xchg
xchg
lds
push
mov
sub
cmpsl
push
dec
mov
call
pop
and
mov
dec
cmp
aam
fs
stc
inc
in
ss
loope
fnsave
pusha
cmpsb
ret
adc
xchg
mov
jmp
pop
int
aas
push
lahf
push
shl
inc
jbe
mov
aaa
push
or
sahf
lahf
xchg
jae
mov
enter
jg
mov
sbb
andb
test
or
pop
cmp
cmpsl
dec
popa
add
push
jmp
mov
sbb
inc
in
jo
stc
push
and
jecxz
adc
addr16
ljmp
addr16
cmp
shrb
les
data16
cmp
jmp
pushl
call
add
sti
pop
out
or
cmp
push
xchg
aaa
adc
cmpsl
cmp
shrb
ljmp
ret
mov
sub
mov
out
and
cmc
push
sub
into
xchg
std
push
mov
mul
mov
fstpt
push
dec
push
lods
insl
mov
adc
ret
repz
jge
push
aas
jnp
not
mov
jp
idiv
jmp
dec
aad
jg
cmc
stos
stos
push
push
dec
mov
ficomps
cmpb
cmp
jmp
cmp
divl
adc
mov
xor
ds
fsubs
inc
mov
xchg
in
xor
in
int
mov
dec
push
push
mov
mov
pop
das
clc
iret
jo
orb
cli
mov
sbb
rorb
cmp
out
mov
stos
jecxz
das
aaa
pusha
push
test
and
test
pop
xlat
mov
pop
stc
jp
scas
jns
movsl
addl
fistpl
mov
lcall
sbb
push
aas
jno
lret
shrb
add
ja
call
jo
in
and
ret
decl
sub
inc
out
pop
insb
pop
jmp
jne
hlt
scas
fbld
dec
push
adc
pop
loopne
call
sub
push
aas
push
vcvtpd2psy
dec
sbb
or
stos
xchg
das
jmp
mov
xchg
mov
outsl
out
decl
jbe
cmp
or
and
in
dec
lcall
mov
fisttpll
rcrl
jmp
loope
mov
push
jae
jne
enter
push
mov
xchg
popa
jbe
jmp
pop
inc
ret
add
cmc
ret
fistpl
dec
adc
cmpsb
mov
cmp
in
fists
clc
cmp
in
mov
pusha
jno
aam
mov
call
or
dec
nop
jp
mov
cltd
mov
sarb
pop
pop
scas
mov
jmp
or
adcl
jae
fcoms
out
or
and
mov
fldcw
pushl
mov
stc
xchg
cmp
cmp
xchg
pop
outsl
hlt
xchg
cmp
ss
mov
mov
dec
cld
mov
nop
add
lock
nop
fmull
decb
push
fdivl
pop
loopne
out
shll
xor
dec
int
inc
mov
rol
cld
call
pop
aad
mov
pushf
lods
adc
pop
sbb
mov
leave
push
call
mov
int3
sub
push
jmp
sub
je
xor
adc
jg
loopne
cwtl
mov
les
testb
sahf
or
and
aas
mov
mov
push
jbe
aad
jl
push
cltd
mov
add
push
jecxz
sar
jl
aam
lahf
xor
jnp
mov
mov
test
lods
sub
mov
jecxz
push
iret
jg
loop
mov
sub
cli
shl
js
add
in
or
popa
or
call
inc
mov
mov
jg
fwait
adcl
jp
repnz
xchg
jmp
shll
repz
jno
push
xchg
scas
testl
decl
std
sub
sbb
cmp
ljmp
out
and
fstpt
jp
adc
jg
push
in
xchg
outsb
xchg
popf
add
or
or
and
mov
sbb
jge
insb
push
or
int3
mov
xchg
loopne
push
out
cmp
test
imul
lcall
add
adc
dec
xor
jbe
fisubrl
testl
loopne
lcall
out
mov
xchg
aas
cld
fistps
fwait
xor
sbb
xchg
mov
sbbl
mov
inc
mov
fwait
inc
das
and
xor
aas
dec
insb
lahf
jns
fists
fmul
pop
icebp
call
lahf
movsb
pop
faddp
sub
pop
cmc
movsl
pop
cmp
cmp
out
jle
jg
mov
mov
out
sub
test
call
ljmp
jmp
cmp
or
popa
lcall
fldt
cmc
push
jns
out
mov
rol
pushl
and
xchg
lods
sahf
xchg
pop
push
lret
cmp
andb
mov
xor
leave
repnz
das
mov
imul
fstl
lcall
sub
mov
in
add
mov
xchg
mov
in
xor
lock
xor
test
jb
inc
pop
jg
and
cmc
jo
pmulhw
lcall
test
addr16
imul
mov
inc
in
mov
loop
in
fcos
ljmp
gs
out
les
jp
clc
test
frstor
xor
jge
push
lcall
mov
arpl
push
fcoms
cmp
sub
fmuls
ja
push
roll
popa
xor
inc
sub
lcall
mov
adc
dec
movsb
ret
add
daa
push
cmpb
add
pop
or
ljmp
cmpsb
jl
dec
dec
pop
call
repnz
scas
imul
sbb
xor
dec
mov
pushf
test
or
push
mov
std
mov
repnz
add
ja
leave
popf
incl
in
mov
mov
or
inc
in
cmpsb
insl
add
movsl
add
xchg
fcompl
sub
in
out
add
pop
cmpsb
add
mov
stos
call
add
add
sub
dec
jecxz
sbb
rcrl
fnsave
in
hlt
sub
xor
mov
imul
fwait
push
mov
dec
pushl
pop
sub
ret
int3
push
push
xchg
js
jb
add
cmc
and
fidivrs
xchg
rolb
in
nop
or
cmp
loope
roll
mov
shll
push
sbb
jp
dec
add
sbb
xor
jno
out
mov
mov
or
in
fstl
or
daa
push
movsl
lret
in
push
cmp
mov
sub
cmpsb
mov
js
xchg
cmp
and
enter
shll
shrl
adc
push
ljmp
ja
dec
xor
dec
adc
mov
cld
cmp
pushf
add
pop
fs
imull
decl
faddl
fucomp
dec
lods
dec
xor
clc
fmulp
push
push
mov
lahf
aas
mov
jne
int3
pop
sbb
cmp
or
xchg
mov
xor
lcall
nop
mov
adc
pop
and
add
and
add
lcall
xor
test
jbe
pop
mov
inc
xchg
mov
dec
aad
mov
decl
test
lods
ds
int
jne
pop
and
inc
scas
sub
loope
fidivrs
xor
outsb
adc
xchg
insb
ficoml
cmp
nop
pop
xchg
lds
mov
pushf
lret
lret
in
xchg
jecxz
in
pop
xor
sbb
push
daa
icebp
and
fdivs
sbb
mov
loop
xchg
into
push
sahf
dec
rcl
inc
cmpsl
dec
jns
jb
inc
cmp
and
pop
cmp
cmp
jo
xchg
pop
cld
mov
mov
idiv
sbb
fisttpl
fs
cwtl
cmp
test
jle
add
lds
incl
or
xor
out
jb
sbb
jns
and
jge
test
jmp
sahf
fwait
inc
dec
and
cld
aaa
out
stc
sbb
out
icebp
pop
sub
in
jbe
sbbl
out
lahf
out
mov
insb
jmp
adc
shl
es
jmp
lcall
xor
push
pop
cwtl
jg
mov
outsl
flds
or
mov
cwtl
push
mov
movntps
add
cmp
iret
cld
jmp
cmp
insb
xchg
cld
adc
push
pop
adc
shrb
xchg
dec
ljmp
call
mov
lods
and
ss
jns
out
mov
xchg
sbb
mov
ret
int
fisubrl
test
xchg
enter
xlat
add
int
ret
decl
sarb
rol
dec
in
xlat
xchg
popa
push
scas
idivb
mov
test
in
mov
add
mov
dec
dec
out
test
sbb
mov
dec
mov
in
call
mov
sub
jne
mov
repnz
inc
ljmp
les
xchg
test
mov
lods
cmp
inc
test
add
lock
inc
jno
inc
mov
push
out
pop
cld
push
sbbl
lods
and
inc
loope
jg
dec
rcll
xchg
push
adc
aas
adc
fwait
lods
lret
jmp
xor
shufps
add
lock
push
cmc
pushf
or
ret
pop
pop
scas
out
mov
incl
sarl
std
sbb
decb
sub
push
inc
shlb
xor
ljmp
inc
inc
rorb
mov
dec
ljmp
stos
push
jae
cltd
mov
xchg
push
in
orl
push
jns
fisubs
je
mov
jp
int3
into
dec
push
mov
jmp
fsubrs
ljmp
pop
mov
push
pusha
jle
cwtl
decl
lods
rolb
sahf
xor
inc
add
pop
decb
out
jo
cmp
mov
cmp
lahf
and
decl
cmc
leave
push
fdivr
hlt
mov
in
sti
incb
mov
jo
or
decl
lcall
push
repz
cmp
sub
addr16
out
sbb
lret
into
incl
inc
dec
cmc
mov
testl
xchg
cwtl
sub
dec
sub
addr16
pop
gs
or
add
call
xor
cmc
or
lods
mov
cwtl
sti
jo
bound
inc
lret
repz
lcall
std
jb
andb
cmp
pop
and
lods
adc
sbb
rorl
pushf
movsb
add
jmp
add
sub
out
ljmp
and
loopne
int3
cli
call
in
cs
and
xchg
cmpsl
xor
dec
shl
pop
bound
xchg
repz
stos
jg
call
or
iret
and
jbe
dec
imul
and
hlt
xlat
imul
mov
push
and
or
or
pop
add
dec
mov
in
incl
xchg
lahf
fsubs
pop
cmp
mov
pop
out
push
insb
outsb
jp
or
fsubl
sti
cmp
cmpb
pop
imul
mov
lods
std
xchg
sti
sbb
sbb
daa
push
loopne
jmp
xor
adc
sahf
rcll
outsb
int
xchg
mov
pop
cmpsl
mov
aaa
mov
out
aam
cmc
pop
inc
das
in
xchg
add
into
sub
dec
pop
pause
mov
jmp
cmp
sub
fdivrs
insl
inc
mov
and
cli
xlat
aas
push
shll
clc
insb
scas
stos
xchg
movsl
or
jp
fwait
ja
faddl
mov
nop
call
pop
fistpl
jecxz
popa
mov
mov
mov
popf
add
pop
iret
stc
call
adc
imul
lods
inc
int3
cmpsb
out
xchg
cmp
in
in
into
aad
ja
hlt
sub
stos
mov
call
cmp
lock
add
push
add
dec
push
imul
dec
lods
icebp
ret
add
mov
call
lods
mov
test
push
dec
mov
or
stc
icebp
loope
sbb
jo
sub
inc
pop
leave
jne
dec
xorl
movsb
cmp
imul
cmp
push
fcomip
daa
out
addr16
pop
sbb
dec
movsl
fsubp
add
lahf
arpl
mov
in
ljmp
lods
jmp
sbb
mov
push
push
aad
push
push
jo
int3
sbb
ljmp
pop
sub
in
cwtl
xchg
mov
lock
movsl
test
fcomip
incl
sbb
mov
mov
shrl
sbb
push
sbb
pushl
jo
jecxz
mov
sbb
fcomip
cmp
dec
ss
jb
jne
jae
fstpt
push
cltd
jae
aas
cmp
jg
movsl
dec
ret
pushf
xchg
adc
mov
or
dec
mov
fdivrl
push
je
addr16
ret
decb
mov
cli
decl
push
mov
ss
push
cwtl
cli
bound
mov
ret
ljmp
decl
or
test
sub
lods
add
push
enter
cmc
push
mov
stos
ljmp
in
adc
roll
bound
dec
stc
cmp
jle
cmp
imul
push
js
adc
decl
xor
jae
lcall
jno
rcr
fs
adc
add
notl
mov
into
sbb
dec
mov
scas
test
mov
shll
stos
mov
fsubl
andb
call
pushf
push
mov
incl
scas
pop
cmova
dec
sbb
ja
lcall
or
xchg
enter
loope
pop
bound
and
adc
lret
lcall
dec
or
fcoms
jns
jb
fisttps
repz
imul
add
push
das
hlt
ret
pop
icebp
out
jle
addb
xchg
inc
and
push
fdivrl
add
pop
hlt
fbld
jbe
pushl
add
push
xor
loop
push
lahf
sbb
test
xor
mov
jl
jp
mov
incl
pop
icebp
aad
pop
or
jp
xchg
sarl
in
mov
xchg
incl
fcmovne
pop
lcall
aam
sub
enter
jnp
popa
and
test
pop
lods
xor
aas
sbb
stc
cmpsl
xorl
xor
mov
adc
insb
jp
inc
push
pushf
adc
iret
xor
dec
mov
flds
ja
or
hlt
pop
jb
shlb
es
add
push
or
fistpll
arpl
lcall
jbe
inc
xor
lea
stos
xor
add
jecxz
scas
sub
dec
xor
pop
sbb
lret
sarb
xchg
xlat
jne
pushl
enter
mov
std
cltd
bound
negl
xchg
loope
or
std
dec
push
ror
rcll
xor
push
adc
lret
add
sub
xchg
call
xchg
sahf
mov
call
lret
es
jnp
and
push
cs
sbb
mov
cmp
int3
outsb
pop
ja
lret
pop
push
arpl
sub
jle
push
dec
adc
xor
and
lcall
xlat
pop
pop
push
lahf
pusha
popa
xlat
and
sub
daa
xor
pushl
loope
jp
ret
aam
jne
cwtl
out
cmp
xchg
pop
gs
decl
sbb
sub
mov
aam
daa
loope
clc
lret
dec
inc
js
popf
movsl
sub
pushl
clc
lret
mov
jno
les
aam
aam
test
push
into
jmp
sahf
sub
dec
fdiv
xor
and
and
jbe
xchg
lcall
mov
lcall
std
bound
cmp
cld
andl
push
outsb
movsb
add
fadds
scas
clc
and
out
pop
cmp
fcomps
push
push
pop
and
std
das
and
add
clc
fmulp
lods
pop
fwait
lret
jb
dec
dec
fwait
sbb
ljmp
or
call
push
jnp
jecxz
inc
sahf
outsb
dec
inc
in
adc
jg
mov
jae
mov
and
enter
out
es
add
dec
fbld
cld
fbld
sbb
out
jmp
cltd
arpl
xor
out
jmp
cmc
and
sub
scas
jb
hlt
jno
mov
dec
nop
pop
je
pop
dec
inc
int3
xor
fsubrs
clc
mov
sahf
dec
xor
and
jmp
mov
push
leave
push
jge
in
jmp
sti
ret
arpl
loopne
decb
es
mov
loopne
and
mov
push
jbe
cmpl
fwait
xor
add
inc
fistl
or
stc
push
sbb
sub
sub
push
sbb
getsec
jl
xor
ja
jmp
das
push
and
and
sub
dec
insb
jle
mov
and
mov
aad
dec
out
sar
ljmp
mov
jg
push
adc
aas
add
jnp
call
orl
push
pop
pop
cmp
cwtl
std
lock
out
insb
add
push
mov
test
nop
jb
sar
jg
inc
mov
cmp
inc
aaa
cmp
cli
sbb
mov
lds
incl
add
into
js
mov
jb
or
pop
xor
xchg
add
cmp
jae
outsb
push
shll
hlt
imul
jecxz
int
es
xchg
dec
or
add
dec
loopne
sub
jns
andb
shrb
mov
lcall
rcll
cmp
in
lods
cmp
cmp
movsb
mov
adc
ljmp
test
imul
inc
and
mov
sbb
sahf
imul
decl
repnz
cmp
ret
loop
cmp
mov
cs
inc
loop
jns
sti
adc
shll
mov
jmp
aas
insb
pop
adc
pop
test
call
xchg
mov
ret
push
std
pop
xorb
or
clc
movl
call
inc
into
rcll
leave
fadds
jmp
div
ja
mov
mov
inc
addr16
pushl
and
inc
jge
mov
iret
jae
jns
xchg
pop
push
outsb
mov
fs
inc
sar
call
pop
jecxz
lock
sub
inc
push
xchg
shll
push
sbb
dec
xchg
cltd
pop
mov
cmpb
sub
and
inc
pop
or
jne
sarb
sub
es
or
sbb
in
ret
leave
in
call
jne
and
shlb
fmull
lcall
jmp
cs
cld
sub
std
mov
mov
push
pop
sub
sbb
das
mov
in
inc
stc
cmp
mov
cld
dec
jnp
mov
imul
cld
in
fidivs
daa
fidivrl
arpl
sub
add
lock
xor
call
inc
sbb
pop
mov
negb
or
push
adc
jge
jmp
arpl
imul
incl
lahf
popa
sahf
outsl
xchg
xchg
jo
cli
xchg
fnstenv
pop
push
jg
fnstenv
sbb
daa
or
out
insl
xor
mov
aad
repnz
lcall
movsl
adc
push
xchg
add
and
add
and
or
jb
aad
decl
sbb
push
push
insl
jl
hlt
aas
push
lcall
inc
cmp
push
push
hlt
call
or
test
enter
testb
mov
jmp
push
dec
push
ficomps
adc
mov
adc
jne
setp
ljmp
mov
pop
data16
xchg
mov
ret
mov
pop
jae
loope
pop
push
outsb
call
leave
mov
icebp
or
rcrl
iret
mov
mov
addr16
and
push
js
out
add
std
lret
pop
aas
fsubs
mov
loope
jg
inc
and
incl
inc
push
sbb
iret
xor
pop
push
lret
nop
dec
mov
mov
stc
ds
cld
scas
decl
add
jb
add
loope
xor
pop
in
xchg
test
icebp
push
bound
stos
mov
repz
movsl
call
sub
clc
vmread
mov
pop
pop
stos
mov
add
jmp
ljmp
lret
jns
push
sub
sub
cmp
cmc
pushf
mov
ss
pushl
not
cmp
ljmp
xchg
pop
mov
icebp
xchg
iret
xchg
ljmp
pop
sbb
xlat
xchg
xor
in
andl
push
mulb
and
adc
xlat
iret
aad
sar
lcall
mov
push
dec
xor
mov
jbe
in
or
popw
fsts
mov
ljmp
in
test
inc
sbb
jl
cli
gs
pop
gs
fisubl
jmp
test
dec
ret
push
push
mov
inc
sbb
xchg
jecxz
stos
jge
movsl
dec
in
pushl
fs
mov
mov
fwait
or
jg
incb
jne
cwtl
scas
push
test
or
sub
outsb
mov
sub
roll
add
aaa
pop
cmp
cltd
pop
mov
pusha
cmpsl
lock
loopne
das
stc
push
jbe
sub
mov
in
push
xchg
sub
dec
lret
mov
hlt
dec
inc
popa
cmp
fnsave
mov
or
mov
test
mov
popf
test
pop
mov
sarb
stos
test
rcrb
fistps
pusha
inc
mov
std
jmp
pop
movb
je
call
mov
inc
es
mov
lret
mov
cmp
int3
popf
leave
cwtl
repz
xchg
test
sub
in
sub
pop
scas
dec
xchg
cmpsl
mov
jmp
gs
or
push
outsb
add
test
mov
jg
adcl
movl
lods
xchg
push
mov
add
repz
mov
mov
fists
shl
fs
test
add
repz
pop
xchg
call
mov
lock
inc
cltd
dec
dec
mov
adc
push
lahf
pop
stos
xchg
dec
hlt
dec
les
jg
decl
repnz
loop
jg
jno
repz
xor
adc
mov
fistl
clc
xchg
add
orl
jb
sysret
sbb
call
jg
imul
push
xchg
inc
push
test
pushf
sarl
pop
insw
les
mov
add
dec
in
push
jle
pushf
subl
outsl
xor
popl
mov
adc
add
lods
iret
mov
scas
mov
aam
lret
fcmovnu
mov
mov
scas
xor
decl
ret
lea
int3
sti
stos
rolb
decl
mov
lea
fs
and
es
sahf
adc
movsl
outsl
xchg
lcall
pslld
adc
popf
jg
ja
pop
jno
pop
fwait
inc
hlt
ljmp
add
in
inc
aaa
cmp
popa
scas
int
jns
cmpsl
adc
lcall
push
xchg
mov
gs
inc
push
shll
fildll
cmpsb
dec
sbb
mov
xchg
mov
inc
lahf
std
sub
scas
sub
xchg
sub
cmp
mov
adc
mov
xchg
in
test
jbe
popa
jp
imull
push
xchg
adc
bound
addr16
outsl
and
mov
xchg
rorl
pop
std
mov
mov
mov
pop
inc
ja
daa
xchg
fsts
push
decl
xchg
sub
mov
cmpsl
inc
fs
mov
and
pop
and
lcall
mov
add
out
fdivrl
cmpsb
scas
bound
lret
ss
mov
push
mov
xlat
xchg
mov
mov
add
call
int3
jle
pop
les
mov
loopne
mov
ja
std
add
cld
call
add
cli
push
sbb
sub
cmpsb
test
int3
adc
mov
pop
icebp
call
push
xor
inc
add
ficomps
mov
test
and
lcall
pusha
push
push
jnp
push
roll
adc
xlat
xchg
insb
aad
mov
scas
dec
call
ret
mov
lahf
sbb
rolb
pop
push
and
cmp
test
call
ljmp
loope
cli
cmp
stos
je
test
lret
mov
mov
mov
incl
mov
jmp
imul
push
imul
imul
xchg
out
aaa
hlt
incl
lahf
cmpsb
mov
cmp
dec
adc
pop
jp
pop
mov
aaa
or
je
or
mov
jp
cmp
shl
call
cld
pushl
jl
cmp
clc
faddl
mov
sub
inc
cmc
pop
mov
lcall
imul
xchg
leave
enter
mov
xor
hlt
in
out
dec
shlb
dec
incl
sub
push
dec
push
mov
pop
xor
leave
ljmp
jae
mov
dec
cli
and
faddl
pusha
xchg
andl
push
ja
xchg
ljmp
aaa
rcrl
pop
push
inc
xchg
xlat
fimull
mov
iret
sti
mov
xchg
cs
cli
jmp
sbb
fistpll
mov
cld
stos
dec
mov
or
into
cs
cmp
cmc
jg
gs
insb
adc
ror
fwait
loopne
lcall
sbb
stos
or
xchg
jnp
loope
loop
mov
xchg
cmp
adc
push
cmp
mov
or
sub
pop
stc
mov
pop
cmp
pop
jne
jg
sub
or
and
fcoml
decl
dec
mov
xchg
out
xchg
xor
hlt
test
or
or
xchg
jo
or
mov
popa
push
call
in
mov
in
stos
lods
xor
mov
mov
addb
call
cmp
or
cli
dec
repz
out
popf
cmp
imul
imul
js
ss
decl
jnp
mul
loop
pop
leave
jo
push
xchg
inc
xchg
test
or
adc
mov
jmp
mov
call
insl
loopne
aaa
add
ret
movsl
jae
jge
xchg
lods
fcmovnbe
and
repnz
sbb
cltd
xchg
sub
ret
das
cmp
jmp
pop
mov
call
inc
push
cmp
sub
mov
pusha
cmp
rclb
mov
out
sub
xchg
ret
pop
je
addb
in
rol
lret
mov
mov
mov
sahf
jns
mov
cmpsl
xchg
dec
inc
das
xor
lcall
mov
mov
arpl
mov
call
incl
jmp
pushf
aas
test
div
jge
mov
or
pop
sahf
scas
sbb
lret
jecxz
out
out
das
xor
mov
outsl
pop
pop
and
outsb
xchg
mov
push
jg
aam
jns
adc
fnstenv
ficoms
cmpsb
aaa
jl
mov
mov
dec
or
outsb
jg
pushl
jl
inc
inc
ja
adc
lret
add
mov
decl
repz
mov
push
xor
pop
pop
and
scas
cs
push
add
das
xchg
jle
ljmp
jmp
pop
xor
outsl
mov
push
jp
andl
pushf
mov
and
xorl
pushl
rcr
push
and
xor
dec
pushf
cli
mov
out
jae
movsb
mov
pop
mov
xor
add
lock
leave
push
addb
test
mov
adc
inc
fdivrp
incl
shlb
out
cmpsl
shrl
cmpsl
xchg
jecxz
push
rcl
hlt
test
jns
and
decl
lea
push
aaa
out
pop
jo
push
es
pop
into
sub
mov
fndisi(8087
movsb
call
lcall
insl
dec
lds
mov
push
dec
sarl
and
scas
loopne
adc
pushl
mov
push
comiss
sub
sarl
imul
mov
ljmp
sub
xchg
pop
dec
or
sbbl
aaa
rorb
fnsave
xor
inc
xchg
mov
dec
out
mov
pushf
ret
adc
ljmp
dec
aaa
loope
ljmp
cmpsb
stos
ret
sbb
or
pop
jle
lods
jge
add
dec
lea
pop
pop
ljmp
xchg
pop
sahf
and
pop
and
loopne
lds
lret
pushf
fbld
loopne
inc
dec
mov
inc
pop
cmp
push
inc
pop
fucomp
and
adc
push
dec
in
ljmp
imul
data16
ret
into
addr16
adc
xchg
lock
mov
sar
push
push
inc
in
aam
clc
and
jbe
pop
mov
orl
cltd
jno
decl
ficoms
mov
push
xlat
pop
mov
repz
jmp
jmp
jmp
push
lcall
xor
mov
pcmpeqw
or
fimull
ljmp
mov
out
sbb
sarb
jg
mov
insb
dec
jb
stos
mov
in
adcb
lods
out
mov
cmc
ljmp
xchg
add
mov
push
mov
scas
rcrl
mov
mov
mov
adc
lcall
stos
or
and
lret
pop
mov
mov
int3
jmp
into
jne
jbe
test
testb
fbld
out
add
call
pop
xor
scas
rcrb
pop
sub
imul
push
push
or
ret
fistl
mov
cmp
lods
shlb
xchg
aas
ja
in
mov
sbb
dec
aas
mov
mov
sahf
stc
jmp
inc
out
out
push
lcall
cli
lcall
lock
pop
or
dec
lret
mov
jmp
mov
loope
inc
or
cld
out
push
enter
sti
or
popf
cmpsl
mov
cmp
outsl
scas
cmp
cmp
sub
insb
stos
xchg
mov
enter
mov
lds
sbb
inc
mov
pop
incb
adc
test
mov
scas
adc
pusha
dec
pop
push
cmp
mov
jmp
movsl
jp
decl
xchg
pushf
shll
sahf
lahf
pop
subl
sub
fsubl
jp
lcall
push
bound
leave
adcl
or
xlat
into
mov
cmp
sbb
pop
aaa
mov
mov
add
pop
or
dec
or
xchg
inc
aad
pop
jmp
std
xor
call
push
add
sub
and
pop
mov
shlb
imulb
lret
decl
scas
iret
and
ds
stc
push
cmpsb
fwait
jo
insb
jl
cli
xchg
lcall
dec
lcall
lret
hlt
cmp
mov
mov
aaa
js
add
cli
sub
decl
dec
mulb
push
pusha
dec
push
sub
sbb
or
cmp
in
pop
mov
call
mov
pusha
pop
scas
add
cmp
mov
das
mov
cmc
loop
add
decl
sbb
sub
loope
loopne
mov
loope
aaa
andl
outsb
rcll
sub
cli
mov
jb
mov
orb
jle
pop
insb
jge
mov
jmp
sub
mov
dec
out
lods
int
roll
mov
nop
jo
addb
loopne
decl
mov
inc
shl
bound
mov
xor
xchg
popl
sbbl
inc
mov
shll
in
aam
inc
push
idivb
xchg
sahf
shl
sahf
and
repnz
stc
dec
insl
adc
mov
push
in
call
pusha
lods
xchg
dec
mov
xor
aam
arpl
movsl
popa
push
jmp
dec
add
ljmp
sbb
lods
inc
adc
in
icebp
and
lret
push
popfw
outsb
dec
dec
dec
cltd
ljmp
out
bound
xor
pushl
test
jg
pop
pusha
inc
into
mov
push
out
aas
add
insb
mov
pop
fwait
dec
call
mov
mov
loop
dec
mov
pop
push
cmc
pop
sub
stc
pop
adc
jb
xchg
push
fwait
lods
shrl
ds
aad
into
jecxz
sub
cmp
lahf
mov
test
pop
pop
lods
inc
test
jbe
sbbb
lcall
sbb
out
hlt
or
xchg
and
mov
sbb
fdecstp
add
push
mov
lock
lods
movsl
adc
repz
mov
jg
test
call
mov
fldcw
and
xor
aam
cmp
lcall
call
cmpsb
push
jl
or
xor
mov
xchg
pop
sub
xor
or
pop
call
add
bound
mov
pushf
jne
jg
icebp
adc
or
fidivrl
ret
pop
cmpsl
repnz
ds
jg
ljmp
sub
dec
lcall
in
fadd
out
pop
dec
pop
mov
pushl
and
rcrb
lret
lret
and
insl
xlat
out
push
cmp
and
sub
stos
test
das
adc
mov
xlat
test
call
fstpl
adc
pop
mov
inc
lahf
mov
iret
call
cmc
or
xor
push
iret
pushf
lcall
jge
inc
push
push
insl
cmpsl
pop
test
mov
decl
cmpsb
or
cmp
bound
aaa
sbb
icebp
repz
xor
inc
mov
lcall
push
decl
imul
sbb
jne
stos
movsb
adc
xchg
arpl
xor
into
cwtl
fldcw
inc
mov
call
fsubs
dec
sbbb
push
mov
outsl
dec
stos
add
stos
cmpsb
insl
push
fadd
fdecstp
call
mov
sbb
mov
pop
cmp
fiadds
iret
cmp
imull
mov
cmp
dec
test
mov
mov
sbb
and
aaa
xor
xor
xor
dec
xor
inc
jecxz
pop
call
pusha
dec
jbe
mov
dec
seto
repz
mov
test
mov
incl
cmp
pop
pop
test
sbb
or
lock
jno
call
sub
popf
or
jle
arpl
jmp
aad
push
xchg
sti
cld
pop
movsb
sbb
loopne
cltd
dec
or
data16
out
sbbl
fisubrs
add
jg
repz
js
clc
leave
cltd
sub
subl
jecxz
and
lret
dec
push
add
shll
cmp
and
sub
int
sar
add
outsb
push
fs
or
pop
loope
push
cmp
popa
aad
das
xor
xchg
xchg
push
inc
mov
or
in
out
js
mov
sbb
sub
pop
jle
mov
imul
ss
jb
enter
lea
test
call
loopne
cmp
movsl
jb
dec
lods
sbb
iret
push
out
clc
icebp
popf
mov
mov
adc
cli
incl
mov
rorl
cs
jo
clc
xchg
xor
add
push
imul
push
xor
scas
clc
inc
xor
jmp
les
mov
mov
xchg
fbstp
jecxz
push
sbb
popf
xor
jnp
cmp
movsl
imul
repz
xor
roll
lods
outsb
sbb
dec
and
lcall
cmpsb
jo
lahf
add
jle
push
bound
fsubs
push
push
jl
ljmp
cmp
mov
sub
sub
shl
lret
jne
mov
jmp
fidivs
jmp
rorb
or
bound
outsb
cs
and
lcall
sub
add
and
mov
aad
rcrl
pop
icebp
pop
fstps
int
ljmp
and
lahf
bound
jo
ljmp
sahf
loop
jmp
loopne
push
xor
jge
push
leave
in
lret
xchg
jne
adc
out
insb
xchg
jnp
mov
ljmp
sbb
inc
pushf
cmp
or
shll
loop
push
cmpsl
adc
jae
pop
cmpsl
cld
call
push
pop
leave
les
xchg
fsts
fs
xchg
or
stos
aaa
mov
in
call
and
fwait
in
out
lahf
inc
pop
popf
xchg
mov
inc
xchg
sub
push
aaa
pushf
xor
aaa
fs
xlat
hlt
xchg
test
fistps
add
cmp
and
xor
js
xlat
decl
mov
adc
andb
out
mov
in
dec
pop
push
add
fisubs
sbb
sub
xlat
lds
and
push
xor
movsb
test
push
addb
cltd
inc
push
push
in
out
stos
xor
fidivl
insb
mov
cmp
mov
shll
outsl
test
shll
sbb
and
movsl
cmpsl
xchg
push
or
pop
cs
lea
leave
fildll
and
mull
orl
mov
mov
cmp
ret
icebp
xchg
jp
sti
push
sub
xor
test
push
fsts
jp
and
xlat
daa
push
mov
sub
cmp
test
dec
mov
fiaddl
in
adc
lds
xchg
add
jmp
mov
pushl
adc
data16
dec
repz
stc
mov
jne
sub
pop
fimuls
adc
cmp
push
cmp
inc
jge
xor
pop
mov
mov
cmp
push
mov
xor
push
jnp
sub
leave
outsl
rolb
leave
dec
jns
sbb
sarl
dec
mov
lahf
mov
fbstp
xlat
rcrl
xchg
mov
out
mull
sub
ret
inc
mov
pop
out
pop
sti
fists
addr16
cmpsl
popf
xor
ds
das
cmp
lcall
nop
inc
cmp
iret
inc
lcall
mov
loopne
pusha
lret
pop
decl
cltd
jle
push
push
daa
mov
xor
test
jge
push
or
ret
popa
mov
lcall
mov
call
les
cmp
pushf
pop
and
aad
sbb
sub
in
mov
dec
adc
dec
push
vpxor
pop
mov
and
xlat
fsubs
decl
jnp
xchg
adcb
shl
movsl
cmp
pop
push
shrl
adc
push
jge
adc
addr16
bnd
jno
outsb
cmovb
pop
pop
pop
cmp
push
fwait
fwait
push
lcall
call
inc
test
jg
mov
repz
xor
ret
jne
outsl
add
decl
inc
mov
subb
sbb
aaa
movsb
hlt
cmp
jecxz
sbb
call
testb
xchg
movsl
cmpsb
popf
ds
movsb
call
int3
jle
mov
mov
pop
das
xor
mov
inc
call
incl
xchg
cs
pop
test
mov
jo
sub
sub
mov
fisttps
sti
pop
flds
mov
mov
mov
fcomip
cmpsb
jmp
add
xchg
xorl
jno
fxch
cmp
loop
das
adcb
jne
jge
adc
stos
add
outsl
clc
stos
cwtl
dec
sbb
and
pop
adc
mov
jg
in
loop
push
adc
mov
inc
jp
sti
jns
cld
out
xchg
dec
ret
mov
jle
inc
hlt
sub
and
and
xchg
mov
jge
xchg
in
scas
or
jno
js
push
inc
rcrl
xor
dec
fisubl
lret
or
dec
sbb
ficompl
cwtl
mov
call
ret
decb
cwtl
or
out
mov
xchg
jns
dec
pop
xor
cmp
fisttps
mov
das
fistps
sbb
cmp
mov
sti
mov
lcall
and
rcl
fwait
rcl
xor
mov
mov
jge
jmp
out
andb
lcall
jecxz
loopne
repnz
push
fndisi(8087
sbbl
jmp
std
out
shll
insl
inc
pop
and
insb
fbld
xor
fstpt
mov
mov
adc
push
mov
dec
sarl
xchg
insl
lods
push
pop
cmpsl
test
inc
push
clc
bound
jmp
incl
mov
std
jmp
insl
xchg
mov
inc
outsb
pop
cmpsl
add
sbb
and
cltd
mov
mov
icebp
and
ljmp
test
mov
inc
jnp
jmp
mov
jo
pop
daa
or
lea
loop
pop
aaa
mov
push
ss
jmp
test
or
add
sub
push
mov
enter
xchg
out
sbb
leave
xor
push
push
xchg
jmp
cwtl
jns
jmp
mov
adcl
xor
cmp
inc
rcr
push
sub
mov
cmp
lock
sahf
mov
fisttpll
ret
bound
repz
dec
push
cmp
imul
lcall
xor
mov
fs
sarb
cld
xchg
aam
loopne
cmp
push
or
adc
in
pushl
jg
or
mov
mov
lds
mov
jae
push
cmp
dec
jecxz
std
hlt
mov
shll
ds
mov
adc
mov
dec
divb
inc
gs
cltd
scas
out
fcoml
bound
lcall
out
mov
mov
adc
and
push
or
aad
loopne
add
incl
inc
data16
sbb
or
push
sub
adc
repz
pop
mov
decl
mov
xor
push
aad
inc
mov
mov
xchg
push
notb
mov
fisttps
push
rorb
arpl
cmp
ret
in
mov
repnz
jo
lds
incl
ret
xchg
xrelease
pop
xchg
aas
and
jecxz
adc
add
test
push
mov
pushl
pop
je
insb
movsb
setge
pop
add
pusha
or
dec
mov
out
pop
cmp
cmp
lcall
aaa
push
jge
mov
pop
ret
ret
rol
and
mov
decl
adc
fsubp
loopne
movsb
mov
mov
in
scas
add
sbb
xlat
mov
jmp
push
add
dec
incl
lcall
sbb
pop
sahf
sub
addr16
add
call
test
and
cmp
sub
xor
and
mov
fs
jns
ljmp
xorb
fs
pop
pop
adc
jbe
xchg
and
scas
out
xchg
sub
xchg
movsl
ljmp
clc
sub
xchg
fs
call
inc
sub
leave
pop
and
popa
dec
fsts
dec
cwtl
cwtl
loop
mov
call
es
xor
out
cltd
xor
inc
aaa
push
mov
mov
call
lret
mov
jbe
lret
test
sbb
sub
mov
gs
pop
inc
std
and
push
lock
sbb
iret
adc
ljmp
rorb
or
xchg
dec
sub
push
cwtl
in
stc
push
ds
jecxz
incl
add
sub
imul
sysret
mov
jnp
insb
sub
scas
mov
inc
cli
les
pop
call
xchg
clc
cmpsb
sahf
bound
pop
cmc
pop
into
pop
jbe
inc
into
adc
pop
mov
mov
sbb
popf
mov
call
sbb
mov
das
testl
stos
cmpb
sub
hlt
sbb
push
mov
ljmp
cld
adc
push
mov
pop
fdivrl
or
add
icebp
sub
dec
cwtl
insl
in
push
pop
out
cmpsl
add
sti
jp
pop
push
aad
call
mov
call
lret
jp
lret
and
or
jmp
fcomi
or
mov
mov
call
imul
dec
les
push
xchg
jne
nop
dec
adc
rolb
ljmp
and
inc
and
pushf
add
fsts
jae
pop
adc
gs
pop
jp
data16
cmp
xchg
xchg
mov
imul
movsb
adc
mov
insl
incl
cld
pushl
sbb
test
adc
xchg
lods
xchg
xor
enter
ja
cmp
sbb
and
mov
or
add
pop
ljmp
cmc
fcomp
mov
mov
jp
daa
pushf
push
hlt
aad
div
fisttpl
mov
test
stc
shl
add
xchg
sti
adc
cld
mov
fwait
jp
icebp
cmp
out
push
lods
push
sbbb
pop
mov
and
lcall
mov
incl
in
xor
repz
in
je
xor
test
out
or
aam
ljmp
mov
fnsave
decb
inc
jno
loop
xor
cmp
pop
cmp
testb
push
movsl
fsqrt
movsl
mov
fbld
mov
insb
and
jl
cmc
out
out
mov
jmp
lods
push
rcrb
movsl
jg
xor
pop
sbb
jg
and
outsb
out
xchg
subl
ds
mov
mov
sub
ljmp
nop
mov
in
push
push
mov
call
sahf
enter
xlat
sub
dec
mov
call
xchg
loope
inc
push
mov
lcall
xor
pop
push
mov
push
adc
sub
mov
imul
idivl
andl
jno
inc
scas
add
pop
cltd
pop
and
divb
and
xor
dec
push
mov
mov
pushl
daa
and
test
jbe
lock
jecxz
or
lret
cmpsb
gs
xchg
ljmp
jae
mov
lods
scas
popa
jmp
in
jge
sbb
in
cwtl
into
in
pop
push
aad
cmpsb
aad
rcrb
fists
pop
icebp
mov
in
sub
popa
inc
fwait
dec
lock
cli
popa
mov
cmp
call
and
xor
mov
loop
push
cmp
mov
sub
push
mov
or
test
decl
fstpl
test
xchg
jns
jle
or
xchg
mov
mov
popa
subb
clts
loop
mov
mov
pop
cmc
ja
test
push
push
jg
decl
ret
fdivs
adcb
xorl
icebp
mov
xorb
adc
int
jp
pop
shlb
ret
lcall
mov
clc
fdivp
stos
test
dec
mov
lcall
testl
pop
inc
jo
out
pushl
out
mov
mov
mov
or
xor
dec
pushf
and
cmp
lock
jbe
js
and
pop
add
and
sbb
pop
dec
mov
lods
dec
dec
in
mov
push
daa
loopne
rcrb
sub
sub
add
aas
es
or
fcomip
insl
push
mov
lods
out
push
aaa
adcl
mov
in
mov
std
jmp
pop
je
insl
add
or
xor
out
stc
or
xchg
jg
cmp
clc
jmp
lret
mov
jle
cld
and
loope
add
xchg
mov
cmp
push
push
lock
test
loopne
int
pop
fidivl
mov
nop
cmc
scas
push
insl
mov
xlat
icebp
mov
lea
and
jbe
stos
xchg
stos
test
dec
test
and
rcrb
lcall
ljmp
adc
or
dec
ss
testl
add
pushl
xlat
and
xor
inc
shrb
outsl
pop
ja
stos
mov
decl
lret
add
test
ja
push
bound
and
or
adc
call
lds
or
inc
adc
mov
icebp
pop
inc
leave
sbbb
jne,pn
incl
sub
orb
dec
mov
flds
stc
lods
and
xchg
mov
lods
push
movsb
sbb
pushl
mov
sbb
push
loope
inc
cmp
jp
outsb
push
dec
in
mov
ljmp
mov
insb
xor
pusha
pop
mov
xorb
inc
jl,pn
and
out
out
incl
jge
xchg
xchg
and
popa
push
xor
cmp
jae
stc
pop
inc
insl
sarl
inc
xor
insb
mov
jle
mov
addr16
jle
imul
mov
cld
mov
nop
fidivs
mov
jg
pop
push
in
pop
outsl
cmpsb
sbbl
shll
mov
mov
pushf
push
pop
push
push
test
and
adc
movsl
xchg
push
das
push
fistpll
push
jle
std
cmpsb
js
in
inc
xchg
call
xchg
pop
lahf
dec
pop
mov
loopne
fistps
outsb
xor
dec
jae
pop
inc
xor
xor
popf
mov
scas
nop
lods
call
push
mov
dec
mov
out
adc
lcall
cmp
rcrl
mov
and
xor
testl
or
test
ja
mov
and
sub
and
jb
decl
jmp
es
lahf
cmp
or
push
add
cs
mov
popf
mov
add
sub
in
mov
pop
xchg
test
jge
and
add
mov
jne
lds
sahf
sub
int3
xor
inc
mov
pushf
sbb
clc
pop
jno
and
shll
cmp
pop
std
jmp
popf
imul
dec
imulb
and
inc
push
lods
sbb
dec
insb
out
data16
ficoml
lcall
mov
dec
roll
ljmp
rcrl
sbb
xchg
ja
clc
imul
in
lds
and
shrl
bound
fdivrl
or
scas
jbe
les
mov
adc
fsts
sub
lcall
dec
aam
push
icebp
leave
xor
fsubrs
vandps
mov
int
inc
out
inc
xchg
lret
fisubrs
lea
test
inc
bound
jl
and
loope
fldt
xor
lods
lret
cld
cmp
test
clc
xor
mov
outsb
lret
mov
leave
mov
outsb
cmp
lock
and
push
call
out
ljmp
rolb
xchg
mov
scas
xor
cmp
pushf
and
mov
test
sub
cmc
mov
stos
shll
fwait
push
xchg
adc
subb
fcomip
add
adc
cmp
jnp
or
adcl
cmp
ljmp
stc
faddl
stc
jmp
subl
dec
pop
addr16
lea
test
fcomp
and
subl
in
jg
jmp
or
adc
fiadds
loopne
sbb
cwtl
and
cltd
mov
ljmp
test
cs
and
jg
xor
sbb
les
ljmp
jle
fs
aam
push
inc
mov
push
xor
sub
and
push
jl
fcomp
mov
jo
xchg
bnd
xchg
xorl
push
arpl
mov
das
cli
dec
outsb
push
ds
lahf
call
ja
jl
addr16
ja
adc
decl
add
fs
fadd
imul
jecxz
jecxz
outsb
inc
push
out
inc
push
jge
decl
jne
repz
mov
shl
jb
or
jmp
mov
je
dec
loop
mov
mov
or
xchg
pop
push
inc
cmp
cmp
pop
negl
fwait
sub
gs
and
push
xor
pop
mov
into
mov
lcall
das
dec
inc
cltd
jmp
mov
sub
movsb
aad
jo
mov
sti
call
xor
cmp
hlt
les
pusha
fldenv
insb
mov
jnp
mov
jle
jg
jg
cmp
sub
xor
stc
cmp
ja
fs
popf
rorl
incl
adc
in
ret
fmul
jg
ljmp
xor
xor
shl
addr16
aaa
pop
mov
loopne
mov
ret
sub
movsb
and
push
add
or
adc
xchg
jmp
sub
aam
adc
mov
call
icebp
in
ljmp
shr
out
out
xchg
xor
sahf
loop
or
decb
lock
popf
bnd
sbb
call
nop
rcrb
cmp
dec
cmpsl
insl
scas
or
jnp
pop
cmc
rcrl
push
clc
ljmp
cltd
push
xchg
mov
pusha
movsl
sahf
push
lds
add
cmp
dec
adc
mov
jg
jg
hlt
insb
int3
inc
pop
insl
lods
and
xchg
test
sub
call
sub
sbb
std
jnp
nop
sub
daa
mov
mov
jmp
and
sub
mov
lods
adc
jno
xor
cmc
mov
pop
and
mov
inc
imul
jge
das
add
out
mov
test
bound
bound
pop
sarb
mov
sbb
fdivl
adc
and
xchg
inc
lds
js
xor
push
fstpl
xchg
jecxz
loopne
lcall
jl
cmpl
xor
adc
pop
clc
adc
scas
aad
jo
push
in
pop
add
pushl
pusha
cmpl
adc
shrl
sahf
int
cmp
nop
push
incb
inc
jbe
in
daa
psrld
pushl
cld
test
xchg
cmp
jbe
movsb
pop
enter
xchg
mov
xchg
lods
mov
pushl
clc
out
mov
push
cmp
fstpt
insl
mov
and
aaa
ljmp
fmulp
loopne
cmp
sub
mov
cmp
xor
pop
dec
push
cli
jne
add
imul
inc
daa
mov
rclb
xchg
ja
aad
nop
fnstenv
push
mov
out
cli
dec
aaa
push
jne
push
bound
ret
and
xor
mov
lcall
inc
inc
lods
add
inc
xchg
loopne
and
push
mov
loopne
pop
lods
shll
enter
call
inc
bnd
fwait
jle
test
and
lret
lret
xchg
cld
push
pop
mov
repz
incl
insl
stos
xorl
cmp
mov
xchg
sbb
aaa
pop
sbb
negl
mov
incl
in
testb
dec
in
ss
call
and
pop
out
cwtl
fdivr
call
mov
dec
push
add
mov
mov
mov
and
fcmove
xor
mov
pop
std
imul
stos
mov
lcall
sar
xchg
jge
es
stos
test
aam
dec
cmpsb
lock
inc
bnd
arpl
pop
movl
outsb
xchg
xor
in
cltd
ljmp
xor
push
cmpsl
and
fsubl
imul
jg
shlb
out
dec
pop
mov
sbbb
dec
lret
sbb
xor
ljmp
adc
ja
test
fcoms
jne
or
add
mov
push
pop
addr16
lret
pushl
push
enter
and
add
mov
add
push
xchg
rcrb
cmp
xchg
cld
fwait
cmpsb
pusha
fiadds
pop
ss
es
add
inc
xor
pushl
cmp
sti
push
mov
loop
shll
lret
in
lret
push
cwtl
xchg
add
and
sti
fisubs
jae
jnp
mov
sub
jg
outsl
ljmp
das
xchg
pop
mov
xchg
xor
es
filds
jmp
mov
in
mov
cld
xchg
out
stc
lret
sbb
push
std
negb
sahf
ljmp
cmpsb
movsl
push
popf
lret
push
insl
in
mov
mov
mov
lcall
push
scas
ljmp
adc
mov
fcmovnb
cs
fmul
sub
and
lcall
call
push
enter
loopne
stos
adc
sub
pop
xchg
out
test
pop
add
cmp
rol
call
xor
push
cmp
outsb
lret
sbb
sub
mov
sbb
lret
pop
icebp
insl
leave
push
ss
imul
adc
jg
sub
add
xchg
xchg
nop
sbb
outsb
ret
fcos
decl
xchg
or
nop
add
test
push
sub
hlt
fstl
sub
or
push
cli
fdivl
sahf
ds
xor
sub
mov
push
adc
stc
pop
mov
fs
jle
loopne
ljmp
movsl
xor
gs
pushw
pop
sti
fimuls
iret
mov
adc
and
jmp
lret
push
call
mov
adc
pop
dec
add
and
or
lcall
jo
jmp
ja
gs
ja
mov
pop
dec
cwtl
shl
ljmp
xchg
sbb
out
inc
sub
das
leave
popf
mov
add
mov
sbb
dec
sub
test
addr16
mov
add
or
stc
pop
std
incl
test
push
rcll
mov
mov
nop
or
insb
xor
sbb
in
jg
inc
test
movsb
mov
dec
xchg
xchg
ljmp
xchg
mov
dec
add
ror
sub
inc
cs
into
out
cmp
pushl
je
adcb
imul
inc
inc
mov
pusha
movsl
scas
shlb
fidivrl
test
repnz
scas
mov
jle
pushf
ja
sbb
mov
decl
mov
mov
and
repz
cs
sbb
mov
cli
call
sbb
or
mov
stos
pushl
and
xor
cmc
jg
xchg
or
dec
mov
push
fisubrs
decl
push
outsl
push
leave
or
pop
dec
test
loope
pop
cwtl
mov
out
or
enter
call
call
dec
rcr
call
add
add
lock
sti
mov
in
mov
dec
mov
inc
mov
mov
loope
addr16
dec
jl
mov
icebp
jg
dec
icebp
movsb
xchg
arpl
mov
lcall
sbb
incl
dec
or
jp
xchg
push
xor
pushf
mov
dec
push
jae
push
mov
decl
dec
or
rcr
lock
testb
jb
decl
pushf
shl
mov
je
es
outsl
pushf
int
dec
lcall
lcall
ficoms
daa
jle
jb
and
out
ds
push
cld
rclb
cltd
ss
out
adc
pop
fsubl
fiadds
and
sbb
xor
jmp
xchg
add
call
jg
ret
mov
cmp
push
dec
push
push
sbb
mov
pop
mov
ficoms
scas
fildl
rcrb
xor
jmp
iret
stc
fldl
ljmp
insl
mov
adc
jbe
fcos
mov
dec
subb
mov
fbstp
jl
out
or
xor
ljmp
shr
cltd
cmp
adc
fwait
mov
adc
add
push
ljmp
push
arpl
out
in
bound
sbb
incl
aaa
dec
hlt
jnp
repz
push
push
mov
data16
and
mov
pop
inc
mov
cld
mov
lea
rorb
pop
insl
jno
mov
add
movsl
jp
jmp
test
sahf
sarl
dec
sti
sarl
jp
fsub
int3
aaa
inc
iret
and
std
add
fadd
push
or
inc
xchg
outsl
sti
adc
push
or
sub
aaa
aas
mov
push
jo
scas
ret
or
jnp
pop
push
retw
fst
xchg
xor
lcall
pop
test
das
dec
test
fwait
popa
scas
xchg
idivb
cli
leave
out
xchg
dec
push
xchg
lods
sbb
andb
leave
mov
and
fsubl
mov
push
dec
add
lcall
xchg
jge
sbb
xchg
jbe
jp
clc
mov
cmpl
and
inc
pop
mov
push
or
out
xor
add
out
jp
cmpb
pop
into
mov
pushl
in
sbb
jmp
lds
in
insl
lret
fwait
in
mov
mov
push
or
jne
decl
rcll
fwait
mov
rcrl
mov
sbb
mov
jmp
xchg
lods
imul
cli
dec
add
das
out
inc
std
jmp
movsb
mov
add
stos
inc
setb
out
or
cmpsl
dec
or
push
jne
cli
je
mov
xor
jle
and
scas
mov
and
scas
scas
inc
fcomps
addr16
xor
mov
inc
lea
call
rcr
popa
pusha
rorl
icebp
outsb
jg
js
fidivrs
pop
repz
mov
incl
cmp
sub
xor
pop
pushl
cli
popf
mov
dec
push
mov
ficoms
push
push
arpl
call
inc
push
movsl
xor
mov
add
ljmp
xor
pop
lret
mov
and
aaa
jle
pop
or
hlt
ret
xor
lahf
and
xor
pop
fistpll
push
scas
mov
lret
mov
enter
mov
add
call
xor
cmp
mov
call
jno
pop
imul
inc
pushf
cmp
fs
call
movsb
enter
sbb
nop
pushf
sbb
sub
push
lods
scas
push
xchg
cmp
ljmp
or
add
enter
push
repz
jg
call
cmp
jnp
in
push
cmc
xor
mov
rcrb
ljmp
popaw
stos
mov
mov
div
inc
inc
mov
jge
sbb
icebp
call
adc
fs
mov
dec
pop
mov
dec
int3
inc
dec
cmpsl
sbb
dec
jecxz
fucomip
mov
rol
test
je
fiaddl
cwtl
xor
mov
xchg
das
xchg
push
xchg
mov
int
dec
ret
nop
xor
jmp
ljmp
xor
lret
xchg
inc
pushf
cwtl
adc
subl
subl
hlt
push
stos
in
push
decl
dec
aaa
repnz
ds
in
addr16
lahf
into
push
push
aad
xor
stc
and
inc
mov
pop
lock
cmp
pop
add
mov
mov
mov
std
in
mov
decl
mov
stc
dec
pop
ds
add
push
dec
or
fwait
cmp
add
mov
mov
sub
cli
push
xor
notb
pop
stos
fidivl
aad
adc
lret
ret
orl
daa
adc
sub
push
push
mov
dec
sbb
mov
jmp
add
mov
pop
jmp
bound
repnz
jno
jg
call
clc
iret
cmpsl
push
jno
aad
xchg
negb
pmullw
in
test
lcall
ljmp
test
sbb
jne
adc
cltd
sbb
inc
sahf
fwait
stc
loope
incl
out
mov
sbb
enter
data16
sbb
add
ss
int3
outsl
je
call
sbb
lods
cmp
leave
adc
bound
jbe
imul
sbb
repnz
mov
jae
leave
mov
dec
dec
adc
mov
movsb
sub
adc
push
dec
add
mov
sarl
mov
cltd
push
subl
jp
mov
cs
in
mov
mulb
mov
decl
cwtl
loop
mov
iret
daa
and
int
push
ds
gs
add
jmp
shrl
jo
push
fdivrs
add
imulb
lret
xor
addb
sti
push
lock
ljmp
clc
push
and
pop
test
xchg
aas
jns
push
ret
pop
cmp
xchg
add
or
ds
dec
incl
mov
or
cmpsl
call
push
xchg
inc
mov
pop
mov
xor
cmp
lock
sar
jmp
inc
and
lcallw
pop
icebp
jp
dec
mov
in
cli
cmp
xchg
lea
clc
mov
out
clc
andb
push
mov
mov
shlb
mov
sbb
das
pop
pop
roll
into
mov
add
int3
dec
mov
xchg
idivl
decl
jecxz
repnz
dec
loop
xor
jge
jg
outsl
cli
and
mov
mov
xor
leave
cmp
mov
pop
sub
fsts
xchg
mov
es
xchg
lods
ret
cmp
cwtl
sub
jb
aam
incl
mov
mov
push
xchg
cmpsb
aam
xchg
push
dec
fisubl
sbb
daa
subl
movsl
ret
call
repz
pusha
es
adcl
fidivrs
clc
push
push
xchg
jmp
arpl
sub
xor
in
mov
int3
pop
outsb
pushl
and
xor
inc
add
sahf
hlt
sar
cli
dec
sbb
xor
cmpsl
xor
dec
sti
dec
pop
cmp
addb
push
cmpsb
shlb
sub
movb
ljmp
lock
and
or
pop
mov
or
mov
scas
cli
loop
pop
cmp
loope
sahf
stos
push
and
pushf
cltd
mov
ss
je
shll
jle
pop
mov
ret
jecxz
data16
sbb
clc
push
sbb
dec
cmp
test
out
sub
fsubrs
xchg
sub
mov
add
fistpll
push
or
incl
outsl
cmp
sub
je
jp
xor
testl
sub
jns
push
std
pop
frstor
push
cmp
push
movsb
or
mov
leave
push
xor
movsb
shll
ljmp
mov
das
sub
jecxz
ljmp
lret
mov
daa
jmp
dec
mov
std
jecxz
pop
inc
notl
mov
jg
decl
dec
mov
xchg
sbb
mov
gs
test
stos
andb
cmc
aas
std
mov
xor
inc
lret
lahf
clc
and
shl
cmp
pop
repnz
sub
mov
ds
lock
dec
jns
f2xm1
aad
mov
mov
mov
flds
cli
test
mov
je
cli
xor
jne
inc
mov
add
xor
push
sub
jns
inc
les
fs
call
jl
stos
int
sahf
cmp
and
testb
aas
inc
xchg
pop
outsl
addr16
ja
decl
xchg
out
iret
leave
push
roll
outsb
xor
dec
xchg
inc
xor
jmp
mov
mov
aam
mov
dec
cmp
daa
pop
cld
repz
xchg
stos
fistpll
mov
mov
arpl
lcall
push
aaa
lds
mov
fildl
pop
mov
dec
xlat
addr16
dec
sub
dec
push
pushf
das
push
dec
push
sahf
xchg
push
jge
push
sbb
test
ja
ds
insl
jno
cli
xchg
sbb
mov
sub
in
mov
cmc
sbb
inc
xor
ljmp
jg
push
inc
cmc
xor
add
lret
fwait
xor
cli
popa
cmp
sbb
in
push
insb
lahf
repz
sbb
push
push
in
mov
dec
incl
mov
cltd
inc
push
jnp
lods
xor
or
fnstenv
loope
call
in
aad
clc
adc
push
xor
fldcw
push
das
jmp
daa
bound
in
call
push
cmc
in
mov
inc
and
or
adc
adc
mov
stos
mov
mov
scas
pop
dec
test
cmp
ljmp
das
jecxz
int3
and
mov
call
add
and
and
jecxz
mov
sbb
mov
push
adc
jg
pop
cld
in
xor
xor
test
enter
or
and
lcall
pop
add
icebp
pop
push
xchg
mov
in
mov
xchg
insb
or
ds
call
orl
sbb
dec
mov
cld
mov
dec
adc
aas
aad
decl
call
out
out
lret
and
cmp
mov
adc
test
decl
lcall
add
lods
dec
fmuls
pop
mov
pushl
adc
mov
or
xchg
adc
adc
sbb
cmp
cmc
cmp
sub
sbb
add
lock
insl
cmp
push
adc
lahf
arpl
shrl
fisttps
jecxz
or
les
mov
sub
ljmp
in
xchg
cmpsl
cmovbe
addr16
sub
cs
pop
ljmp
lds
fistpll
mov
xchg
pop
push
daa
mov
cld
dec
loop
addps
decb
pushl
sub
jne
or
pushf
xchg
loope
mov
sar
pop
hlt
lcall
adc
mov
jg
or
xchg
loope
dec
sub
in
inc
call
out
cmp
popa
mov
cs
jo
lods
push
ds
dec
call
add
pop
subl
lods
xchg
cmp
pop
clc
rcll
lods
mov
push
cli
dec
enter
decl
mov
int
mov
lds
mov
cmp
lock
xor
pushl
inc
fsubrl
out
loope
cmp
sub
push
test
mov
icebp
inc
adc
push
adc
fnsave
ja
repz
sti
sti
adc
adc
test
testl
lret
ljmp
test
inc
icebp
out
rol
push
jp
xchg
mov
mov
incl
jmp
fld1
cmp
pusha
jmp
into
movsb
mov
add
icebp
aam
orb
xchg
ret
adc
adc
xlat
inc
out
mov
mov
fisubs
xor
lea
push
mov
fidivs
pushf
mov
pop
dec
test
xchg
cmp
icebp
lret
ss
aaa
jno
xchg
in
and
xor
incl
xlat
dec
sub
inc
cmp
sahf
jnp
test
xor
cltd
or
pop
into
adc
mov
sub
mov
push
mov
inc
adc
ljmp
xorb
loope
inc
mov
test
mov
std
mov
int
pop
cltd
or
jmp
call
push
xchg
js
and
test
mov
push
add
sub
pop
xchg
scas
stos
icebp
popa
xchg
insl
push
ljmp
sbb
jmp
or
adc
dec
inc
push
cmpsl
repz
shll
frstor
push
std
mov
pop
imulb
ljmp
repnz
inc
loop
mov
push
xor
pushl
add
xorb
mov
shl
and
cwtl
inc
sub
push
filds
mov
and
adc
mov
push
xchg
push
cs
insl
xchg
mov
jns
call
lret
dec
sbb
sbb
ficompl
lock
ret
fcmovnbe
imul
xchg
inc
pop
sbb
mov
push
and
in
mov
decl
lret
js
or
mov
dec
cmp
decl
repz
add
out
and
aas
ret
adc
incl
addr16
dec
pop
or
outsb
pop
lock
movsl
popf
fists
scas
mov
push
jo
push
loopw
ds
add
inc
xor
lret
mov
ljmp
pushf
insl
adc
pop
testl
inc
and
jg
jmp
sbb
loope
sbb
subb
dec
daa
add
inc
inc
jo
add
dec
push
pop
std
insb
test
cmp
pusha
pop
jp
fwait
outsl
inc
mov
cli
inc
jbe
sub
adc
in
or
les
fs
mov
mov
cld
negl
imul
das
mov
pop
mov
fdivrl
and
aad
mov
stc
mov
call
sti
lock
inc
cmp
ret
xchg
mov
shlb
test
nop
dec
decl
out
rol
jo
and
insl
inc
clc
divb
jle
lret
cmpb
fisttps
pusha
fstl
je
xchg
shlb
push
fiaddl
mov
and
sbb
or
std
jle
ljmp
push
cmp
sub
xchg
arpl
je
cmp
inc
scas
push
or
mov
sub
pop
and
sbb
test
mov
or
aaa
jecxz
sub
and
daa
dec
pop
aaa
sub
popa
mov
xor
inc
or
push
sbb
inc
adc
sbb
iret
pop
pushf
cs
cmpsl
or
fisubs
pop
dec
mov
jmp
push
xor
mov
sbb
popf
lods
aad
mov
lcall
call
aam
add
bound
jno
mov
mov
lret
push
jo
and
decl
sbb
and
insb
mov
hlt
and
mov
push
movb
pushl
jnp
frstor
fstpl
lahf
jno
push
lcallw
jns
sbb
inc
jb
test
pop
outsb
das
jp
int
int3
rol
mov
and
pushf
and
fisttpll
jg
pushl
aam
cs
arpl
inc
imul
out
mov
adc
lock
pop
cmp
rcl
dec
js
bound
fimull
push
insl
movsb
push
in
aaa
fcomps
test
sub
mov
xchg
ret
or
jmp
jecxz
lcall
adc
inc
dec
pop
outsl
ds
sub
lods
test
insb
xor
in
pushl
leave
ljmp
sub
mov
cltd
xor
int3
out
mov
sub
scas
popa
clc
push
decl
pushl
push
jno
push
jbe
sahf
dec
mov
je
xor
sti
loop
xchg
xchg
cld
imul
mov
cli
sub
dec
push
pop
inc
dec
mull
jecxz
mov
lahf
incl
popa
adc
ret
xor
adc
jmp
insb
jge
push
or
adc
jmp
pop
icebp
repnz
lahf
add
add
and
ljmp
dec
pop
lods
inc
mov
call
inc
sahf
sbb
in
fwait
xor
clc
stos
ljmp
repz
or
or
nop
ret
std
xor
ljmp
xor
lahf
pop
in
sub
xor
add
mov
pop
fstpl
mov
leave
xchg
imul
insb
test
push
or
inc
push
and
or
incl
mov
jmp
mov
jmp
in
or
int3
stc
adc
lods
idivl
daa
adc
pop
dec
adc
and
call
loopne
xor
outsb
test
mull
loop
push
mov
std
in
lds
mov
popf
or
imul
pop
adc
pushl
divl
xlat
cmp
push
inc
xchg
aam
adc
dec
mov
cwtl
push
mov
pop
sbb
jecxz
or
iret
xchg
mov
and
imul
test
call
add
ljmp
dec
mov
jmp
sbb
inc
lock
jb
data16
add
std
sarb
xchg
inc
jg
push
aas
xor
sub
fsubs
adcl
dec
sub
fisubl
mul
pop
mov
sbb
push
xor
fimull
test
mov
arpl
fucomi
push
xor
inc
fwait
push
sbb
out
leave
cmp
inc
lahf
xchg
stos
mov
stos
inc
push
lods
sbb
pop
sub
jmp
sbb
push
fistl
xchg
aad
push
cmp
adc
pop
fiaddl
mov
sahf
add
xchg
mov
jne
incl
ret
dec
push
cmp
shlb
and
dec
and
sti
mov
adc
fsubrs
negl
and
dec
mov
mov
xchg
inc
scas
int3
mov
ret
shrb
or
mov
rclb
inc
xchg
and
push
stc
and
scas
jnp
sub
hlt
xchg
jg
sar
pushl
js
sbb
out
pop
xchg
push
mov
xchg
fistpll
popf
xchg
mov
mov
dec
decl
fldcw
loopne
pop
lahf
mov
popl
mov
dec
aam
incl
das
pop
inc
mov
std
jmp
jbe
dec
sub
fs
pop
xchg
pop
std
xchg
cli
nop
gs
bnd
cmpsl
xchg
push
xlat
scas
cmp
fcomip
lea
jmp
aam
addr16
mov
loope
lea
mov
inc
outsl
inc
aaa
pop
scas
nop
data16
mov
mov
inc
xor
ret
leave
sub
xor
push
test
sahf
mov
clc
sub
mov
dec
add
call
mov
cmp
pop
pop
std
and
daa
call
in
je
popa
mov
js
mov
adc
cmp
and
xchg
arpl
adc
lcall
xor
movsl
stos
cmp
push
mov
adcb
or
fprem1
inc
mov
aam
or
mov
dec
sub
ja
mov
inc
pop
jecxz
lret
or
sarb
push
test
xchg
pop
lcall
cmp
imulb
and
inc
xchg
test
xchg
adcl
push
sbb
sbb
addr16
jne
xchg
call
mov
out
sbb
or
dec
sti
mov
aaa
subl
out
decl
lock
stos
fcmovu
xchg
push
inc
jns
aas
mov
cmp
call
cmp
sbb
mov
scas
sub
ja
jle
push
or
pop
and
in
dec
ud0
call
lock
mov
cmp
scas
rclb
add
stos
or
fdivs
adc
call
jns
movsl
adcl
push
mov
cmp
mov
outsl
sbb
lcall
rclb
subb
dec
or
outsl
sbb
call
pop
lret
stos
pop
jb
mov
movups
addr16
sub
jne
mov
mov
pushl
insb
mov
testb
and
add
cmp
out
in
das
outsl
adc
cmp
cmpsb
pop
mov
mov
enter
incl
mov
sarb
pop
xor
inc
jno
pop
mov
aaa
push
sahf
or
cmp
lcall
xchg
xor
ret
pop
lea
es
sarl
lea
dec
mov
lock
push
xchg
push
mov
scas
iret
mov
dec
lret
call
dec
push
mov
lret
int3
popa
pushf
scas
fists
int
push
inc
enter
cmp
rcrl
nop
call
xor
loopne
jne
jae
test
int3
dec
sbb
sbb
jmp
or
xorb
jle
push
lret
add
sub
out
leave
jg
out
clc
jns
in
mov
mov
or
mov
lahf
ud0
jmp
les
sub
jge
fnstcw
pop
gs
inc
jns
out
mov
cltd
je
ja
ja
fdivr
call
jbe
std
iret
or
and
popl
jb
cld
xor
cmc
xchg
loopne
jp
sub
in
jmp
je
int
aad
sti
leave
mov
xchg
ljmp
xor
xor
mov
decl
dec
addr16
les
mov
fsubrl
or
lods
pop
aad
cmpsl
sbb
xchg
scas
sbbl
dec
add
call
or
mov
jl
jns
ss
xor
call
xchg
insl
and
sbb
cmp
dec
inc
mov
push
mul
addr16
cmpb
mov
xchg
jbe
or
int3
std
fistps
ret
xchg
in
dec
std
mov
rcll
aam
loopne
pop
adc
mov
dec
jne
aas
shrb
inc
xor
je
nop
fdivrs
inc
lds
mov
jnp
mov
mov
mov
xor
movsb
mov
sub
mov
insl
movsb
outsb
add
add
incl
cltd
mov
mov
rorl
and
inc
lods
inc
jns
loop
push
mov
into
fucomip
adc
or
ljmp
mov
call
aaa
cs
pop
adc
push
cmpsl
lea
cltd
or
movsl
sahf
cmpb
dec
ljmp
loopne
and
jbe
sbb
dec
js
loop
push
adc
pop
loop
pop
pop
push
je
lcall
pop
mov
lcall
insl
lcall
lods
add
ret
aad
mulb
or
imul
pop
lcall
mov
out
stos
je
loope
cwtl
lds
daa
inc
mov
into
orl
decl
lock
cltd
lahf
fsubr
in
xchg
data16
push
ljmp
add
lahf
and
pop
divps
mov
sbb
xchg
inc
pop
pushf
stc
dec
scas
loop
push
or
cmpb
dec
dec
daa
and
xchg
or
cs
stos
mulb
mov
pop
jge
jle
cltd
pop
outsb
dec
stos
push
movsl
popa
mov
xchg
call
sarb
and
cmp
xchg
or
mov
repz
xor
ret
lods
cmpb
mov
push
dec
pop
movsl
mov
icebp
push
cmp
icebp
fwait
push
call
es
sub
inc
jp
daa
xor
pushl
jle
cmp
jp
pop
pop
pop
in
nop
loope
xchg
dec
adc
mov
and
sub
jmp
push
in
in
adc
stos
stc
fmul
notl
push
add
jle
inc
pushl
inc
lods
xchg
xchg
fwait
scas
xchg
imul
jb
cmpsb
out
xor
dec
push
test
mov
pop
insl
roll
xchg
daa
movsl
cmp
jl
push
add
sar
stos
cmpsl
pop
js
mov
or
and
popa
sbb
in
xor
ljmp
bnd
ljmp
inc
cwtl
mov
sub
cmp
sub
jg
xor
ss
or
mov
mov
cmp
pop
pop
jnp
int3
clc
inc
mov
mov
jmp
fstps
or
fcompl
jl
jno
loopne
imul
loopne
jno
ljmp
decl
fwait
ret
cld
pop
pop
sbb
cmp
sbb
std
lods
das
nop
mov
mov
sbb
dec
ljmp
sbb
ljmp
gs
iret
test
aam
ljmp
mov
divb
or
lcall
jnp
insl
popa
repnz
cmp
sub
adc
pop
shlb
ljmp
dec
pop
out
add
pop
jge
ret
xchg
or
xor
fdivrl
insl
imul
dec
or
cs
mov
fldcw
inc
in
sub
mov
arpl
cld
outsb
int3
or
loop
test
xor
cmp
aas
call
dec
clc
fmull
mov
arpl
adc
stos
inc
cld
jmp
aad
xor
push
js
movsl
adc
mov
jmp
mov
pop
jne
je
mov
jecxz
and
cmp
sbb
lret
sar
pushl
push
loop
test
push
push
inc
push
lahf
stos
fsubrs
ljmp
pop
add
inc
xor
pop
mov
add
testl
xchg
xor
inc
push
xchg
outsb
add
leave
imul
sbb
and
push
mov
inc
jle
ja
sbb
jmp
push
aad
pop
pop
mov
loope
pop
fcomip
lcall
loopne
jg
xchg
mov
test
lahf
cmp
push
pop
fstpl
jbe
ljmp
inc
loope
fisttpll
sub
add
jne
shll
out
jnp
pop
xchg
inc
pop
lea
lcallw
pushl
jp
dec
rcrl
xor
mov
cmp
incl
daa
push
jo
mov
lock
imul
and
sbb
sub
decl
adc
xor
lahf
movsb
pop
sub
dec
push
adc
std
adc
mov
decl
push
jns
push
movsb
fidivl
movb
and
adc
sub
sub
mov
std
dec
shll
mov
sub
adc
scas
hlt
sbb
out
fs
sbb
lods
jae,pn
mov
bnd
bound
pop
daa
aas
dec
xor
mov
sbb
cmp
pop
pop
mov
or
mov
mov
imul
push
cmp
and
xchg
sbb
cmp
pusha
push
push
mov
xor
pop
pop
pop
cmpsb
loopne
adc
lahf
loope
dec
inc
jae,pt
es
repnz
adcb
and
push
sub
mov
test
pop
mov
stc
sub
xor
mov
add
and
cs
pop
lea
in
pop
call
jno
dec
adcl
insb
sbb
inc
and
outsb
pop
pop
in
decl
cmp
jl,pt
sub
push
fdivrs
adc
xor
popa
mov
incl
adcb
loop
fincstp
adc
clc
fbld
push
ss
adc
je
sub
popa
ficoml
rcll
incl
pop
push
lods
loop
sbb
fmull
add
test
jmp
les
mov
rcl
div
std
movsb
loopne
inc
mov
in
lods
jo
lds
lcall
mov
mov
pop
jmp
or
insb
jbe
call
dec
sub
xchg
or
in
imul
inc
inc
xchg
mov
and
inc
es
into
aaa
cld
ljmp
test
jnp
gs
loope
mov
mov
mov
movsb
xor
jmp
scas
xchg
fs
sahf
aad
mov
sub
stc
pop
cmp
jo
loope
cmpsb
and
cmp
xor
xor
jae
inc
sbb
in
push
stc
jbe
cmp
mov
or
faddl
daa
lcall
scas
ljmp
push
adc
clc
mov
in
bound
shlb
out
mov
mov
and
jae
jns
add
aaa
jge
mov
call
lods
cli
jo
aad
inc
repnz
sbbb
cmp
mov
xchg
in
fs
jae
push
or
push
shlb
xor
push
push
cltd
pushf
pushf
int
inc
mov
mov
jb
fisttps
pushf
rcll
jno
fnstenv
add
xor
pop
icebp
mov
popf
push
std
push
scas
mov
or
jno
sub
cld
xchg
in
pop
push
test
mov
and
dec
scas
xchg
mov
dec
pop
inc
nop
ljmp
sub
stos
imulb
decl
push
xor
bound
mov
dec
gs
and
loop
call
iret
xchg
nop
gs
push
mov
dec
adc
mov
inc
aaa
mov
lods
maxps
mov
dec
and
xchg
cmc
xor
xlat
cmp
add
ljmp
icebp
out
push
faddl
inc
popf
jb
sahf
push
cmp
in
popa
rcll
mov
mov
jle
xor
adc
mov
jmp
enter
pop
shl
mov
xchg
pop
ds
push
movsb
jp
jg
jg
mov
enter
jo
xor
gs
mov
dec
decb
iret
int3
push
pushf
pop
inc
fisubs
mov
jg
lret
or
rcr
test
das
pop
arpl
jmp
mov
pop
ficompl
clc
lds
cwtl
js
loopne
ss
mov
mov
pop
js
sub
popa
pop
ss
dec
and
mov
and
decl
push
lcall
and
fcomi
dec
jae
push
pop
cltd
stos
cmp
ljmp
stos
imul
mov
daa
jbe
flds
xor
stos
leave
scas
pop
mov
pop
adc
outsb
ja
loop
jecxz
cmc
push
flds
fimuls
cmpsb
sahf
movsl
cli
sbb
ljmp
inc
dec
iret
push
fxch
popf
js
cmp
adc
into
outsl
pop
fucom
xor
dec
ljmp
ss
jl
jle
sar
ljmp
or
or
pushf
pop
sbb
pop
ror
or
incl
sti
mov
mov
fsubrs
imul
sub
cmpl
test
outsl
add
and
push
mov
mov
xlat
xor
cwtl
mov
decl
mov
cmc
or
adc
jne
push
into
fimuls
call
sbb
mov
popf
gs
aaa
sub
lea
je
sbb
lret
pop
pusha
pop
into
jg
jmp
sub
inc
outsl
daa
and
ret
push
sub
mov
and
cmp
incl
out
rorb
dec
push
loope
popa
or
sbbb
je
adc
mov
sub
lahf
jle
sahf
mov
mov
fisubrs
dec
incl
or
pop
and
sbb
das
mov
js
add
jmp
lea
push
push
repnz
fbstp
ljmp
xchg
mov
xchg
pop
outsl
cmp
lcall
dec
out
aam
test
ljmp
or
fidivs
xor
outsl
or
mov
xchg
jecxz
fdivrl
xchg
aaa
stos
lcall
ret
out
sahf
inc
stc
jae
mov
jmp
fcmovu
inc
add
out
loop
cmc
pushl
add
stos
repz
lds
lods
cld
sbb
xor
sub
aam
mov
pop
lods
lcall
test
in
mov
cmp
push
das
sub
pop
loop
xchg
mov
data16
es
decl
mov
data16
cmp
sub
daa
mov
bts
adc
mov
dec
ds
adc
lds
pop
decl
pusha
or
aad
dec
lock
lcall
xor
jecxz
and
xchg
mov
leave
sbb
lods
adc
ljmp
in
mov
lds
imul
mov
cld
or
jmp
sbb
mov
push
movsl
sub
aas
addr16
sbb
cmp
sbb
aas
xor
fistl
cmp
adc
dec
fmulp
aaa
push
test
enter
ljmp
cmp
sahf
jb
jmp
daa
test
sahf
scas
scas
add
call
dec
bound
lock
cmp
fnstsw
lcall
jns
aam
mov
pop
push
sbb
mov
jg
cmp
lcall
fpatan
out
push
cmp
cli
cld
sub
mov
mov
mov
sub
pop
sbb
jae
enter
lock
fadd
mov
mov
xchg
ficompl
dec
mov
jo
and
dec
inc
pop
pop
test
scas
add
sub
in
inc
mov
sbbl
adc
push
xchg
sbb
call
aad
imul
jno
ret
scas
add
loopne
iret
jle
cmc
shr
sahf
inc
mov
fidivrs
fldt
aaa
xor
xor
sub
loopne
push
sbb
xor
sub
call
test
movsl
test
dec
std
mov
stc
sti
jns
push
mov
unpckhps
push
mov
decl
xor
mov
popa
xor
push
add
add
aam
imul
cmp
and
rcll
cld
mov
add
or
shrb
cs
push
jae
aam
mov
ret
adc
mov
cmp
lds
std
lahf
xchg
push
xor
outsb
repz
aaa
and
dec
pop
fcmovne
sbb
sbb
movsb
pop
mov
pop
or
add
arpl
fnstenv
scas
call
rclb
inc
in
jmp
jbe
jg
jle
adc
fs
incl
addr16
fcom
lahf
mov
nop
fcoms
shl
dec
cmp
dec
shl
push
push
sub
mov
sbb
xchg
sarl
jns
dec
fs
lret
jno
xlat
jl
mov
cmpsb
daa
xchg
add
call
jle
sub
adcb
lods
jo
mov
scas
faddl
push
pop
cmp
inc
and
ljmp
xor
xchg
sarl
push
int3
cmpsb
pop
jns
add
call
clc
mov
push
cmova
stos
aam
mov
aam
mov
or
jg
sub
sbb
enter
mov
mov
add
rolb
je
jge
xchg
imul
xchg
rolb
jecxz
out
and
jo
dec
push
ret
pop
sti
call
fiaddl
scas
xchg
notb
outsl
jae
cmc
jl
jl
movsb
clc
enter
jg
jg
push
test
sbb
mov
ds
add
cmpsl
rolb
sbb
outsb
dec
imul
dec
movsl
xchg
push
or
in
push
enter
loopne
pop
xor
xor
ljmp
popf
inc
adcb
addl
mov
aad
push
lret
jo
cld
pushl
incl
scas
sub
pminsw
lods
loopne
shlb
jnp
jno
hlt
ljmp
gs
es
andb
push
cmpsb
pushl
test
ljmp
push
loop
addb
movb
lock
ret
out
aaa
cli
mov
ret
stos
sbb
xlat
dec
scas
sbb
in
in
xchg
adc
sbb
inc
pushl
scas
les
mov
adc
and
push
sarl
jno
call
hlt
push
hlt
mov
js
cli
lds
aam
iret
mov
movsb
push
or
out
inc
stos
clc
in
test
fsubr
fisubs
cmp
imul
roll
fwait
test
sahf
sbb
ljmp
jne
mov
pushl
cld
decl
lret
add
lea
pop
mov
dec
es
or
aaa
es
push
dec
lcall
jno
cltd
stos
daa
sbb
je
push
cli
jg
scas
adc
adc
dec
adc
hlt
stos
dec
jp
arpl
mov
rcrb
jecxz
or
call
sbb
or
cmp
add
insl
or
lret
lret
adc
mov
jg
push
rorl
mov
jbe
cltd
lods
into
add
sbb
lcall
mov
in
mov
nop
sub
bound
popa
or
mov
mov
and
hlt
add
js
mov
sarb
mov
lcall
sub
jl
rcr
push
adc
lcall
in
push
push
jmp
sar
xchg
jmp
out
stos
pop
inc
jns
mov
cltd
outsb
repnz
scas
ja
jle
call
push
push
and
lds
mov
jmp
and
mov
movsl
sub
mov
ret
jg
fcompl
lret
aam
cmp
mov
aaa
int
imul
nop
pushf
add
lcall
imul
xor
jmp
or
cmp
jecxz
inc
inc
mov
xchg
push
push
dec
mov
pop
push
jle
cs
arpl
cmc
adc
incl
sbb
stc
pop
int
arpl
xor
orl
popf
add
xchg
sub
ja
mov
decl
push
fbld
mov
test
pop
mov
pop
insb
sub
popa
aaa
adc
xchg
jle
push
out
mov
adc
loope
push
loopne
nop
cmpsb
xor
lock
out
popa
or
xchg
push
icebp
jmp
movsb
jmp
sbb
mov
je
cwtl
data16
les
lock
sub
or
loopne
scas
mov
subl
cmp
lret
mov
repnz
pop
jg
movsb
adc
lcall
jl
inc
test
in
fmuls
mov
lret
pop
data16
mov
fst
push
shlb
adc
jmp
fldt
repnz
mov
adc
fwait
ljmp
inc
add
daa
mov
stos
outsb
outsb
and
xchg
jns
test
lds
fstps
jne
test
aaa
in
in
fwait
jmp
popf
cmp
ret
xor
gs
ds
mov
dec
push
lock
jl
test
jge
pop
cld
push
stos
sub
fdivs
mov
pop
decl
pop
jp
loopne
insb
inc
das
rorb
inc
mov
scas
and
xor
ljmp
scas
mov
stos
mov
out
dec
sbb
push
popf
cld
lcall
mov
mov
aam
arpl
loope
clc
jg
and
jle
and
incl
pop
sub
dec
or
xor
jg
clc
gs
and
les
mov
sbb
xchg
push
mov
scas
jp
aam
sub
idivb
data16
nop
out
cmp
stc
push
cli
mov
je
xchg
cmp
or
adc
jmp
pushl
sbb
lcall
add
and
ja
rol
insl
inc
push
pop
orb
ljmp
mov
ljmp
es
fdivr
adc
xchg
std
push
cwtl
pop
jno
ss
rcll
fisttpl
dec
push
cmp
mov
mov
adc
lgs
pop
jae
dec
lock
push
jno
jg
pushl
mov
lret
out
xor
aam
aam
add
mov
jmp
imul
mov
jns
inc
fiaddl
out
dec
shl
mov
jle
cmp
inc
xchg
jns
xchg
in
fbld
mov
popa
sbb
mov
pop
mov
adc
mov
mov
paddq
push
inc
cmp
pop
lock
dec
pop
xchg
lock
mov
inc
or
push
bound
jb
lret
incl
or
xchg
insl
inc
es
je
in
lahf
push
and
jb
loope
or
incl
loope
xor
testl
into
aad
iret
xchg
dec
dec
lods
add
jmp
and
push
in
inc
mov
dec
mov
add
mov
lahf
dec
movsl
idivb
call
test
mov
inc
jp
mov
pushf
js
std
std
out
pushf
adc
cmp
jmp
mov
popf
mov
mov
jge
cmp
jbe
iret
ss
jbe
fadd
mov
mov
fs
insl
stos
insb
or
mov
jg
data16
cltd
jns
movsl
adc
fisubs
leave
es
sbb
sub
dec
push
xchg
cltd
ror
movsl
mov
pushf
dec
mov
or
or
cmp
pop
in
mov
ljmp
jnp
mov
dec
ficoms
repnz
aad
sbb
sub
jg
adc
push
lret
aas
jmp
sbb
repnz
rclb
rorb
decb
movsb
inc
mov
or
adc
mov
add
sbb
cmpsl
outsb
or
inc
scas
pop
call
lock
lcall
dec
cs
imul
loopne
ljmp
mov
cmp
lds
js
and
aaa
cld
call
scas
aam
mov
enter
and
insb
push
hlt
mov
test
call
pop
out
daa
shlb
leave
fadds
cmp
sbb
pop
cli
and
mov
sbb
cli
mov
sar
cs
clc
pop
jl
lret
add
add
cld
popf
push
lcall
and
notl
sub
mov
aas
pop
outsl
xor
pop
push
jns
lds
in
push
scas
lret
out
ja
pushl
sub
xor
fmull
pop
fwait
sub
add
adc
lcall
mov
mov
sub
lea
mov
jmp
mov
mov
mov
nop
icebp
mov
inc
clc
fisttps
and
ljmp
push
sti
cmp
mov
fldt
rcrl
push
call
clc
decl
call
sbb
cli
adc
jae
cmp
and
mov
shlb
jno
rcl
jno
pop
repz
lcall
loopne
dec
push
push
adc
mov
sub
dec
pop
xchg
lods
shl
movsb
js
in
add
decl
or
xor
push
jp
adc
test
dec
jno
mov
fsub
dec
jmp
xlat
add
or
cmpl
lcall
scas
movsl
aam
sbb
xchg
je
cmpl
jae
fwait
xorl
xlat
inc
fcmovu
hlt
mov
jae
jne
test
jl
push
mov
xchg
inc
lock
mov
sbb
decl
lock
into
addr16
fldenv
add
rorb
enter
xchg
call
or
lahf
mov
int3
push
idivb
sbb
mov
popf
add
call
arpl
repnz
cmp
xor
or
outsb
jmp
stos
cmp
jge
fstps
jmp
cmp
mov
jmp
push
cmp
ljmp
and
xchg
mov
inc
das
cli
xor
add
xchg
daa
int
cld
lea
mov
out
xchg
dec
xchg
inc
and
ds
inc
or
cmc
js
gs
cmp
pushl
adc
xor
lods
add
dec
jl
jo
cmp
data16
add
flds
pushl
dec
test
fwait
push
push
mov
in
xlat
and
add
test
addb
mov
notl
out
jl
sub
push
and
ljmp
pop
mov
sub
pop
xor
insb
sub
inc
lahf
cli
leave
jae
std
cmp
decl
roll
lds
pusha
pushf
jle
test
sub
loope
pop
das
cmpb
decl
divl
ret
xchg
scas
adc
jge
add
inc
xor
aas
xor
inc
sbb
jecxz
mov
insl
aas
add
xchg
sar
decl
jns
aas
inc
fdivrp
mov
cltd
mov
xchg
or
fimuls
pop
insb
jg
mov
jge
pop
jl
push
push
mov
and
add
repnz
adc
ljmp
cmc
jmp
orb
aad
mov
push
cwtl
dec
fdivr
or
add
jg
pop
cmp
stc
iret
data16
incl
dec
nop
xor
cmp
or
mov
rclb
pop
mov
cwtl
pop
mov
lcall
fwait
pop
fsts
mov
mov
scas
filds
jecxz
hlt
pop
mov
popa
mov
ljmp
movsl
hlt
repz
push
aaa
mov
sub
mov
dec
mov
popf
cmp
lcall
test
fucomi
rorl
call
mov
outsl
fdivs
test
mov
cmp
leave
fdivrs
or
mov
cmp
inc
cmp
incl
cld
in
in
js
and
jl
inc
and
xchg
push
sbb
outsb
out
lcall
testl
add
aad
aaa
mov
jns
jo
push
pop
push
gs
incl
bound
fdivr
jns
adc
dec
inc
mov
adc
lods
in
scas
incl
push
data16
pop
pop
mov
jne
addl
hlt
sbb
call
dec
push
jge
push
sahf
sub
adc
das
pop
into
mov
ljmp
std
punpcklbw
lcall
or
sbb
pushf
mov
inc
cs
fwait
nop
add
cmc
movsb
fildll
subb
jb
and
fdivs
out
in
push
cld
sbb
jg
sbb
push
out
pusha
shl
lahf
cmp
push
cmp
adc
push
outsb
test
jecxz
fmulp
cmp
lods
es
inc
aad
fisubrs
cmp
push
dec
dec
xor
lds
std
jg
shrl
loop
inc
arpl
adcb
add
call
jnp
ds
push
ljmp
xchg
das
cmc
dec
mov
xor
das
mov
cmp
ljmp
imul
ds
cmpsb
push
xchg
mov
mov
xorl
movsl
enter
clc
ljmp
aam
lcall
repnz
mov
push
lahf
hlt
mov
call
clc
icebp
fstps
xchg
mov
stos
out
in
cltd
out
loop
pop
mov
inc
cwtl
adc
xchg
test
pushl
aad
pop
mov
cmp
fcoms
add
arpl
add
pop
mov
jl
aas
out
clc
call
scas
cmp
adc
fwait
push
adc
pop
in
dec
sbb
dec
pop
in
mov
jne
fs
adc
pop
add
push
fcmovnbe
pop
stos
pop
inc
mov
pop
scas
jnp
mov
rcrl
and
push
or
fwait
lcall
mov
sti
push
inc
push
mov
cmp
mov
and
jae
fucom
mov
pop
dec
js
insl
inc
adc
push
ds
inc
shrl
sub
pop
inc
cmp
ds
jmp
fidivl
stos
fdivr
mov
push
push
mov
int3
in
inc
push
fisubrs
pop
aad
into
dec
imulb
jmp
cmp
cmp
aas
sbb
leave
ja
inc
test
jecxz
xchg
dec
and
jo
aad
push
stc
test
ret
inc
loope
loope
cmp
lcall
dec
lods
je
das
movsl
and
adc
push
push
gs
imul
jno
fwait
inc
cmp
addr16
dec
hlt
pop
push
xchg
imul
jl
fsubrs
stos
xchg
push
sbb
pushl
push
imul
movsb
adc
movhps
sbb
movl
mov
pusha
xchg
dec
shll
or
or
fmull
push
pop
jb
loopne
ljmp
or
incl
sub
push
icebp
xor
xchg
jae
inc
sub
call
xchg
bound
and
nop
insb
sub
pop
icebp
fcmove
and
pushl
cld
fldt
sub
adc
and
scas
sub
aam
mov
pop
mov
jmp
and
das
ret
xchg
dec
mov
cltd
inc
dec
cltd
dec
xchg
mov
mov
and
sub
and
push
das
adc
sbb
ljmp
ret
mov
mov
test
jmp
lcall
add
or
ljmp
icebp
push
outsb
adc
rorb
ror
js
sub
inc
mov
mov
or
cmp
iret
or
cwtl
cmpl
push
jae
ret
mov
out
lret
ljmp
cli
ficomps
arpl
mov
jae
sbb
dec
out
xor
clc
sbb
decl
dec
cltd
and
mov
inc
pop
out
xchg
dec
cmc
fidivs
cmp
ja
inc
mov
test
fcmovnu
sub
or
in
fchs
gs
mov
mov
mov
fadd
push
dec
sub
push
sub
mov
fcos
xchg
jae
cs
sub
cli
jns
jnp
je
dec
dec
xor
push
lds
hlt
push
sbb
ljmp
mov
mov
and
dec
int3
imul
test
lea
aas
idiv
pushl
test
sbb
and
test
nop
mov
inc
adc
sub
clc
ljmp
xchg
cmp
sti
or
push
das
ss
out
cwtl
test
decl
mov
add
scas
cmp
sbb
and
adc
inc
pop
pop
cli
mov
mov
mull
and
hlt
hlt
movzwl
sub
ljmp
pop
adc
push
and
out
lods
std
test
dec
cmp
jp
repz
insb
and
cwtl
cli
pop
cwtl
js
adc
test
cld
frstor
sbb
dec
jne
incl
sbb
fsubrs
adc
adcl
push
push
fisttpll
sbb
lahf
mov
ljmp
add
mov
out
fs
pop
inc
lcall
push
jns
xchg
jno
mov
jmp
xor
jle
insl
sbb
inc
cs
addb
lret
jbe
ds
popa
inc
and
pop
hlt
call
pusha
mov
adc
ljmp
pop
cmp
lcall
push
xchg
mov
out
pop
pop
in
nop
xchg
fsubrs
notl
mov
testl
jmp
cwtl
jmp
ret
sub
ss
cs
and
lret
add
sbb
test
cmp
dec
in
std
fcomip
or
add
mov
in
xor
push
fildl
aam
aaa
cmp
sbb
sub
cmpsb
sahf
xlat
pop
add
in
test
cli
incl
xor
inc
push
clc
sbb
pushf
mov
jmp
xchg
adc
push
movsl
call
sbb
mov
into
mov
out
xor
int
incl
dec
mov
jl
cwtl
pop
and
adc
or
jg
pop
mov
sub
and
add
or
outsl
out
dec
in
adc
loope
mov
jp
rclb
mov
push
add
mov
push
mov
ljmp
cmp
mov
pop
xor
push
sti
mov
add
dec
subb
out
xor
mov
inc
xchg
push
lret
xchg
call
adc
in
jmp
lods
stos
les
or
xor
lret
mov
imul
sbbl
orb
push
insb
lds
stc
ja
pop
pop
prefetch
out
dec
dec
outsl
jb
mov
and
test
jmp
lcall
xor
xchg
mov
lock
pop
mov
sbb
pushf
dec
ret
scas
test
xchg
flds
stos
mov
jne
fadd
loope
xor
cmpb
lcall
mov
sub
outsl
hlt
jmp
adc
rol
mulb
push
icebp
fucom
lcall
pop
jbe
add
jg
loop
push
les
lods
cmc
stos
in
xchg
addl
insl
std
and
mov
mov
push
add
inc
fnsave
jnp
mov
dec
push
dec
testb
jge
arpl
cmpxchg
push
scas
mov
rcrl
cmp
in
sbb
push
test
cmp
fwait
push
jl
add
mov
lcall
fwait
loop
inc
add
clc
dec
sbb
mov
divl
jbe
mov
lods
mov
int3
testb
ljmp
pop
sub
dec
add
pop
xchg
pushl
cmp
dec
pop
jnp
sub
xor
fidivl
lret
in
sbb
fisubrs
incl
jb
xchg
loopne
mov
fwait
andb
popa
mov
lea
lock
push
mov
leave
sahf
adc
adc
fisttps
mov
loop
roll
cmpsb
jmp
and
adc
pop
cli
ljmp
test
xchg
popf
mov
sbb
and
ljmp
ds
ja
outsl
mov
out
test
push
adc
or
mov
sbb
fwait
repz
pusha
imul
inc
in
dec
or
call
push
jg
push
adc
lods
push
xor
push
mov
testb
xchg
dec
sub
sar
jmp
cmpsb
test
sbb
mov
push
loopne
mov
pushl
jl
push
and
jno
testb
lret
xchg
imul
call
loopne
out
push
or
or
out
pop
pop
pop
xor
sbb
cmp
or
mov
les
das
stos
enter
dec
xchg
mov
nop
and
inc
jge
xchg
sub
inc
sar
jg
int
add
into
sub
std
arpl
mov
into
pop
or
mov
nop
xchg
sub
add
pop
xor
add
je
cwtl
ja
jmp
dec
mov
pushf
adc
ret
gs
mov
dec
insb
repnz
inc
pop
stos
push
xlat
data16
out
ret
insl
pop
cli
in
push
xchg
int
jp
jg
mov
lock
push
push
inc
hlt
repz
test
lcall
scas
xlat
and
pushf
fstpl
push
jmp
scas
push
jne
xchg
fs
push
mov
push
jne
subl
add
jo
mov
jns
arpl
inc
outsl
inc
cmp
cltd
inc
mov
arpl
js
test
jmp
mov
cmp
jae
push
xchg
bound
loope
lods
cwtl
lcall
jle
lret
sbb
add
push
mov
cmp
jo
cmp
in
ja
xor
aas
mull
xchg
insb
xchg
test
adc
push
add
cmp
mov
sahf
lods
mov
or
dec
jmp
pop
les
pop
mov
xchg
hlt
mov
les
cmp
mov
xor
test
ljmp
ret
scas
es
cmpsb
jg
sub
cmp
je
aad
or
dec
mov
in
ljmp
pushl
adc
and
sahf
jecxz
adc
xchg
fimull
pop
lret
pop
lahf
sub
pusha
decl
cmp
flds
std
leave
push
jecxz
mov
adc
xchg
sbb
popa
cmp
add
aad
jmp
xchg
xor
mov
cmc
mov
bound
popf
pop
add
in
push
dec
cld
ljmp
mov
or
ret
inc
push
lcall
mov
lret
xchg
arpl
out
rorl
je
mov
xor
ljmp
cltd
xor
cltd
aas
and
push
mull
cmp
adc
lcall
lcall
mov
push
sub
or
cmc
jb
pop
adc
int
pushf
mov
add
pop
inc
mov
jmp
adc
cmc
loopne
add
leave
mov
add
or
pop
jl
jg
mov
subl
cmp
mov
adc
mov
sbb
pushl
mov
mov
xchg
sbb
sub
les
cld
pop
jmp
mov
idivb
popa
popfw
cltd
pushl
clc
es
mov
mov
test
sub
or
cmp
mov
outsb
call
repz
inc
sbb
mov
or
mov
test
pop
addr16
sub
and
incl
loopne
aaa
adc
je
das
xor
xor
loopne
jle
popf
push
and
mov
mov
lret
stc
push
scas
gs
lods
xchg
ljmp
adc
lea
ftst
icebp
out
clc
jg
lcall
sbb
sarb
dec
ds
inc
imul
ret
lcall
test
vphaddudq
jns
mov
xchg
sub
pop
push
decl
pushf
xchg
xchg
and
xchg
mov
repz
jae
cmp
cltd
cli
mov
xchg
sub
jnp
cmp
or
addl
into
and
lret
xor
gs
jmp
ljmp
test
rolb
in
loope
inc
fisubl
mov
shr
mul
pusha
cmp
icebp
mov
adc
or
push
jo
cmp
mov
subb
lret
inc
mov
cs
int3
pop
or
mov
mov
fstpl
test
dec
cwtl
insl
xor
ljmp
inc
cmc
sbb
adc
std
cld
sbb
test
or
xchg
mov
lret
cmc
push
cld
lcall
sub
jbe
loope
rorb
in
and
cmp
pop
je
fildll
nop
adc
es
xor
leave
pop
adc
outsl
jge
cmc
jae
outsb
xchg
mov
pushl
cld
jmp
and
clc
dec
cmp
sahf
push
aas
aad
cmpsb
adc
roll
and
fwait
cmp
jo
lea
add
mov
jp
xor
sahf
rclb
in
and
xor
lcall
inc
shl
and
ret
lea
jae
pop
xchg
in
dec
adc
ljmp
outsl
cmp
nop
xchg
sub
pop
cs
xchg
mov
push
push
ret
lcall
push
pop
or
jne
and
xor
fxtract
imul
inc
mov
call
inc
popa
inc
pusha
inc
test
cmpsl
shrb
das
out
sbb
scas
push
mov
cmp
xchg
add
pop
or
push
add
jg
inc
je
ret
ror
stos
mov
fisttpl
pop
fcomip
lcall
aaa
imul
js
xor
xor
xchg
enter
addr16
pusha
std
jmp
aas
sahf
and
arpl
inc
lahf
insl
loope
jns
push
ja
lret
jg
add
data16
and
or
aaa
add
incl
clc
xor
adc
mov
lret
sbb
mov
jg
mov
icebp
add
xchg
add
mov
push
incl
lea
hlt
enter
sub
pop
lret
xchg
in
push
mov
jmp
lods
mov
sub
pop
bound
push
and
mov
cmc
xchg
cmp
cmp
mov
inc
cmp
insl
icebp
sub
or
in
pop
inc
test
adc
int
popa
dec
lret
inc
and
ficomps
incl
adc
hlt
or
pop
stos
dec
stos
and
cmp
sub
std
or
std
in
mov
fwait
repz
dec
pusha
push
xchg
outsl
aaa
das
sar
js
popf
pop
cltd
test
in
xchg
stos
mov
sub
pushf
faddp
notb
clc
pushl
mov
cmp
popf
adc
add
mov
stc
lahf
sub
loopne
shl
movsl
test
mov
ret
lret
adc
scas
mov
and
push
sbb
cmp
jnp
pop
ja
shr
scas
sarl
mov
lahf
push
mov
out
clc
lcall
xchg
mov
lret
xorb
ss
cmc
and
faddl
stos
cmp
clc
ficoms
or
ljmp
into
jp
in
add
adc
xor
push
aas
xchg
lock
inc
adc
dec
pop
pop
cmp
mov
xor
std
shl
sbb
fcoml
and
jns
mov
incl
js
outsl
inc
mov
pop
jno
mov
mov
add
addr16
inc
adc
dec
pop
xlat
jg
push
pop
mov
sub
shl
data16
test
inc
hlt
test
aam
outsl
mov
dec
push
dec
rolb
cltd
stos
push
cmp
add
ret
pushl
push
imul
in
lret
cmp
out
aas
lret
shlb
cwtl
fiaddl
fbld
daa
push
popa
pop
adc
mov
cmc
mov
adc
jg
adc
jg
call
nop
push
mov
cmp
into
cltd
push
divb
push
adc
push
leave
cli
push
iret
push
dec
incl
shl
push
xchg
andl
push
sahf
push
pop
mov
loopne
fcomps
shrl
pmaxsw
push
mov
jbe
add
jmp
int
jecxz
and
call
shll
into
or
xor
mov
lcall
dec
cmp
in
icebp
jl
fnstcw
jge
test
sub
cld
jmp
push
decl
jo
cmc
jle
in
outsl
outsb
mov
xchg
sub
test
in
push
pop
mov
dec
shld
jmp
pop
jo
out
fstl
push
adc
add
cmp
pop
stos
lock
sti
loop
push
pop
mov
jp
adc
mov
pop
add
popf
jecxz
lahf
adc
incl
ljmp
add
clc
ss
and
popa
xchg
fildl
mov
jg
pusha
pusha
push
enter
testb
sub
lahf
in
push
jp
aaa
ds
test
lcall
pop
aam
scas
mov
xchg
popa
jge
dec
imul
daa
cmp
jmp
lcall
in
jae
mov
mov
adc
repz
imul
ljmp
jmp
lods
fiadds
mov
and
lret
lea
hlt
pushl
scas
movsl
sbb
fimull
fcos
ljmp
xor
pop
int3
lcall
fstl
idivl
add
incl
jbe
jne
adc
loope
popf
pusha
adc
xchg
xchg
or
ljmp
cli
inc
not
cmpsb
mov
sbb
push
add
and
icebp
cmp
divb
std
mov
ljmp
cli
decl
cmp
xor
add
mov
xor
lret
stos
dec
mov
cwtl
pop
test
cmp
scas
repz
mov
imul
pop
jle
pop
mov
sub
dec
mov
adc
ljmp
and
jp
pop
inc
sub
xlat
lock
clc
ret
and
mov
push
call
lea
out
inc
shlb
lea
repz
adc
push
cwtl
inc
pusha
aas
pop
xchg
pop
loop
mov
add
mov
fcoml
loope
adc
adc
mov
clc
test
sar
ljmp
mov
rorb
jp
push
mov
imul
sub
push
shrl
call
mov
jp
jno
sbb
cmp
and
dec
hlt
push
rol
xlat
lods
loopne
nop
sbb
es
sahf
scas
fsubrp
push
mov
cmp
xchg
pushl
fucomp
mov
push
push
scas
data16
cltd
sub
mov
addb
cmpl
aaa
push
scas
adc
sar
jmp
popa
adc
fisubrs
jb
ficomps
int3
out
incl
insl
vmread
int
add
repz
mov
jo
sub
cli
das
rolb
cmp
jle
cmp
dec
adc
inc
xchg
adc
cmpsb
mov
cwtl
aam
test
push
fs
xchg
mov
and
and
push
inc
in
leave
stc
pop
lret
cmp
sbb
mov
and
mov
add
lcall
cmc
xor
mov
movsl
mov
mov
xlat
and
in
cmp
clc
stos
sub
xchg
out
dec
dec
loope
lcall
movsb
cmpsb
stos
adc
test
fwait
bound
push
xor
incl
or
pop
lsl
pop
js
mov
push
je
mov
jmp
push
jmp
repz
test
test
lret
out
sbb
xchg
jbe
push
lods
ljmp
lcall
dec
xchg
dec
push
jg
stos
xor
mov
out
mulb
pop
loope
mov
mov
sbb
push
out
divl
sub
cmp
jne
add
imul
dec
leave
xchg
mov
xchg
add
in
xor
lret
sub
add
adc
xor
insl
popa
or
icebp
int3
fcomip
fnsave
dec
dec
pop
dec
cmp
ficompl
cmp
sub
decl
sbb
jmp
mov
dec
dec
xchg
pop
in
ja
xchg
mov
jb
loop
ljmp
mov
push
add
fcoml
lea
clc
xchg
push
lods
aam
stos
decl
cmp
jns
lret
test
jns
mov
sti
sbb
loop
xor
inc
inc
adc
arpl
push
cmp
repnz
fbstp
push
ret
test
sbb
pushl
add
mov
iret
jne
es
int3
or
das
js
repnz
or
push
call
loopne
lods
mov
stos
sti
jo
push
mov
loop
int
mov
out
scas
mov
inc
jbe
ljmp
clc
push
gs
call
lds
mov
leave
insb
ljmp
repnz
movsl
push
jbe
arpl
sti
je
add
add
loopne
incl
shrl
sbb
das
movsb
cltd
push
and
or
mov
decl
sub
pop
mov
addr16
dec
pop
lock
std
test
fwait
das
imulb
bound
mull
add
incl
sub
enter
xchg
sbb
das
xchg
ja
in
rcrb
into
inc
pop
push
dec
call
cmpsb
cmp
daa
push
out
jp
mov
xor
xor
xchg
cmp
imul
lcall
imul
cs
loope
ja
push
mov
dec
and
cmpsl
fcomps
call
xchg
inc
push
icebp
pop
mov
into
roll
in
xor
mov
cmp
std
fwait
inc
loopne
loope
cmpsb
aas
sbb
mov
pushl
arpl
loopne
movsl
lea
cmp
mov
inc
add
inc
out
mov
call
and
cwtl
popa
xchg
dec
mov
inc
les
cwtl
iret
fiadds
insb
movsb
push
popf
pop
enter
ja
enter
add
inc
xchg
xor
inc
mov
ficomps
imull
pop
roll
sbb
add
add
aas
outsl
mov
xor
stos
cwtl
insb
xor
hlt
aaa
mov
adc
mov
cmp
pop
mov
aad
pop
mov
data16
jae
or
mov
lcall
lcall
or
push
dec
dec
cmp
jo
jae
dec
movsl
add
adc
mov
dec
lods
adc
rcrb
ret
pop
fnstenv
cwtl
push
pushf
lods
stos
rcrl
lcall
std
adc
sub
insl
rcl
cmpsl
pop
clc
mov
or
xchg
xchg
lcall
pop
data16
pushl
push
xchg
lret
jne
cld
jns
cmpl
lock
mov
or
sbb
and
popa
or
or
add
sub
xchg
rcrl
ficoml
imul
adc
scas
cli
pop
add
testl
mov
sbb
idivb
cld
popa
aaa
ja
icebp
sbb
pushl
sti
jne
push
inc
sbb
cld
stc
jbe
and
push
ret
shl
dec
popf
adc
jle
sar
decl
nop
inc
aad
pushw
inc
pop
movsl
fs
sub
inc
aam
jg
cmp
mov
sub
push
out
in
dec
int
cmp
cmp
loop
pop
pop
push
pop
xchg
mov
pop
lret
out
idivl
mov
cmp
pushl
mov
sti
dec
js
notl
jnp
cmp
push
jb
js
ret
jo
pusha
loop
lcall
dec
cld
pushf
push
cmp
adc
jle
or
outsl
cmc
fmull
shll
sub
cltd
sbb
mull
std
in
mov
mov
mov
xchg
dec
dec
xor
adc
out
xchg
decl
mov
jmp
add
adc
push
jno
mov
sub
and
push
sarl
jno
xchg
fsubrs
dec
es
ljmp
aam
aas
iret
sbb
dec
or
mov
or
mov
add
cmp
into
adc
xchg
or
stos
fdivs
or
jns
fistl
xchg
dec
push
mov
sub
incl
sub
leave
fadds
shll
jle
push
ds
pop
cmpl
lcall
stos
aaa
pushf
sahf
leave
popf
inc
dec
push
shl
sub
push
nop
ror
push
sbb
push
rcrb
aad
inc
cmp
les
sbb
push
sub
pusha
orb
jg
cmp
mov
cmp
inc
ss
mov
into
mov
iret
test
sti
pop
lret
test
aad
int3
xchg
dec
mov
pop
das
lock
or
jno
ds
stos
lock
enter
mov
std
pushl
or
cld
inc
dec
pop
data16
insl
ss
repz
sub
mov
and
outsl
clc
call
or
insl
dec
pop
sbb
mov
ficoml
pop
enter
cltd
shl
cli
decl
fidivrs
mov
push
mov
xchg
gs
add
and
out
add
mov
outsb
jb
pop
and
incb
imul
addb
fdivr
pop
inc
dec
pop
xchg
dec
inc
les
inc
ljmp
out
mov
add
or
mov
decl
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
std
fwait
or
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
loopne
bound
inc
add
or
xchg
add
mov
adc
add
add
mov
xchg
inc
mov
or
shll
ds
incl
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
adc
cmpb
insb
cmp
or
xlat
inc
adc
aaa
mov
xchg
shlb
push
movsb
mov
inc
xor
dec
sub
pop
ret
mov
mov
jecxz
pushf
out
and
scas
adc
add
pop
scas
cmp
adc
out
rolb
adc
pop
popa
jno
and
adc
das
push
or
xor
adc
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
bound
std
or
incl
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
pushl
lahf
mov
movsl
jecxz
cli
pop
mov
adc
or
xchg
jg
or
insb
sub
addr16
out
jmp
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
decl
fisubrl
in
mov
orb
int3
lcall
mov
add
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
add
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
mov
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
jmp
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
xchg
outsl
mov
jecxz
lods
mov
ljmp
fidivl
mov
or
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
lret
push
shll
movsb
add
lea
jg
gs
std
aas
pop
incl
shrl
addr16
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
outsl
add
cwtl
mov
mov
inc
arpl
incl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
dec
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
fbld
ficoms
sbb
add
ret
fcmovu
cs
add
enter
popa
in
pop
or
mov
xlat
lcall
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
jmp
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jo
inc
jecxz
sbb
sarl
adc
loopne
jbe
jecxz
and
clc
xorl
and
scas
fiaddl
dec
push
in
aas
mov
iret
rorl
push
and
fwait
incl
pop
mov
ret
push
sbb
jne
push
and
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
loopne
fistpll
adc
lahf
mov
or
out
lcall
mov
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
inc
sti
ja
push
ds
sti
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
ljmp
push
cli
rorb
and
mov
lcall
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
mov
test
aas
dec
add
lock
clc
hlt
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
lcall
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
insl
and
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
lods
movsb
loope
push
add
mov
mov
call
cmpsl
lret
push
mov
in
cmp
jmp
mov
inc
clc
fildll
lock
jmp
hlt
dec
mov
es
clc
aas
fcom
inc
aas
mov
jg
mov
sub
addr16
idivb
mov
sbb
cld
daa
jp
std
adc
cltd
or
scas
cli
inc
clc
mov
ret
nop
cmp
das
incb
lock
pop
pop
testb
sub
cmc
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
or
je
jge
inc
sti
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
das
xchg
or
mov
fbstp
push
or
es
inc
enter
out
test
fwait
cmpsb
cmp
call
xor
decb
in
cli
or
mov
mov
and
xor
mov
sbb
sbb
dec
or
mov
cmp
int
add
push
pop
aaa
sbb
fisttps
or
mov
mov
aas
enter
icebp
ret
ror
sbb
aaa
adc
adc
shrb
add
aas
pop
clc
loope
loope
mov
lahf
jp
sub
ficompl
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
adc
cmp
into
cld
push
dec
and
mov
xchg
cmp
xchg
cwtl
arpl
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
les
push
inc
xchg
scas
or
or
add
imul
cltd
dec
int
push
push
push
inc
fwait
shrb
mov
test
and
sbbb
sub
pusha
popf
out
and
in
dec
xor
add
addb
and
and
lcall
or
add
mov
add
in
fidivl
nop
mov
jg
add
pop
cmp
push
add
pop
mov
add
mov
inc
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
test
es
push
movsb
push
movsb
inc
scas
push
outsb
push
and
stos
push
and
push
test
and
cmp
imul
push
inc
pop
pop
add
push
dec
lods
push
mov
pop
sbb
add
std
mov
inc
mov
pusha
sbb
mov
addr16
fcomip
push
adc
fs
mov
insb
or
lret
imul
mov
push
add
push
sub
lret
mov
js
push
add
fstps
imul
mov
stos
pop
stos
mov
add
jb
ss
add
jo
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
ds
dec
in
movsb
push
add
mov
sbbl
push
cmpb
arpl
push
push
push
aaa
fcmovnbe
mov
push
jne
push
aam
push
ret
add
lahf
jbe
push
mov
push
pop
dec
jbe
cmpsl
mov
push
data16
sarl
pop
aaa
add
push
xor
shlb
lret
stos
mov
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
fwait
testb
fidivrl
push
jp
jp
mov
mov
inc
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
ja
mov
ljmp
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
push
dec
aam
imulb
ss
iret
jmp
ds
push
hlt
clc
stc
repz
repz
sti
cld
std
dec
or
inc
jo
add
mov
jae
add
int
xor
add
pop
add
insb
ss
pop
add
pop
add
insl
inc
jne
add
mov
jg
add
mov
add
add
or
add
in
add
outsl
or
or
add
lahf
stos
test
test
or
ficoml
ja
sbb
adc
sub
adc
add
pop
stos
femms
lods
lods
pop
jbe
add
add
imul
pop
pop
adc
rcr
or
lods
adc
sbb
pop
pop
scas
sbb
scas
scas
scas
mov
sbb
sbb
mov
mov
xor
inc
outsb
and
add
add
mov
push
sbb
jo
and
outsb
push
mov
mov
push
push
shll
mov
cmpsl
mov
mov
insl
push
addl
sub
mov
repnz
andb
mov
pop
xchg
pop
daa
mov
pop
test
mov
and
cmp
fsubs
cmp
cmp
cmpsb
add
mov
pop
xor
cltd
insl
push
pop
pop
or
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
fbstp
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
cld
incl
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
xor
pusha
pop
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
pusha
adc
bound
add
outsl
adc
clts
jae
add
pop
pop
scas
lods
pop
popa
mov
sub
dec
jle
xchg
pop
push
dec
add
mov
mov
dec
and
cmpsb
push
mov
xor
mov
sti
dec
xor
ja
push
ja
jb
cs
xor
mov
sub
insl
mov
sbb
and
mov
push
imul
push
inc
mov
cmp
mov
inc
add
jg
mov
sub
xchg
jae
xchg
jp
inc
push
popf
inc
fcmove
cld
fbstp
xchg
jno
lret
push
bound
mov
popf
fldt
push
lahf
inc
inc
push
sahf
insl
mov
insb
add
outsb
add
xchg
xchg
pop
push
test
pushl
dec
push
movsb
jae
add
jb
shll
add
pop
xlat
pushf
push
sar
push
pop
add
fwait
imul
lcall
outsb
mov
repz
dec
mov
add
ja
sahf
jbe
fistpl
add
fstps
outsb
ds
push
add
and
jle
mov
js
mov
data16
imul
insb
pop
outsb
push
outsl
rorb
test
jge
push
jg
fiadds
push
dec
inc
call
clc
inc
xorb
mov
mov
add
test
out
xor
sahf
mov
cli
in
out
jb
out
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
sarb
add
adcb
adcl
addb
sbb
test
test
jbe
jmp
sbb
test
in
mov
push
xchg
nop
mov
push
out
xchg
in
xchg
lock
sub
jge
add
sub
imulb
fldt
cmpsb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
mov
push
pop
lcall
pushf
cmp
xorb
es
aam
jle
push
mov
pop
cmpsb
scas
jo
test
sahf
mov
or
stos
into
shll
mov
lgs
int
mov
mov
insb
fcmovbe
mov
sarl
mov
data16
add
addr16
shr
cs
dec
out
orb
je
dec
daa
inc
push
pop
add
mov
mov
femms
or
div
pop
enter
sbb
or
es
push
adc
mov
add
push
add
add
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
mov
mov
testb
mov
mov
mov
mov
and
fildll
ds
mov
aas
and
imul
in
lods
es
aas
aas
cmp
cmp
aaa
add
ss
add
incl
imul
jle
cmp
repz
ds
jle
mov
mov
aas
adc
ds
xor
dec
sti
data16
out
inc
test
mov
ds
add
mov
pushl
lds
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
mov
jle
xchg
xor
ds
in
add
mov
add
add
ss
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
add
shrb
fs
das
pushl
jne
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
jne
shlb
nop
negl
rolb
add
mov
add
or
incl
ja
push
push
add
cmc
repz
dec
xor
mov
add
aas
add
xchg
pop
cmp
test
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
adc
add
add
divb
loopne
popf
add
ret
push
in
lcall
or
loopne
testl
or
jae
mov
into
xchg
add
mov
mov
jg
mov
add
mov
out
data16
fidivl
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
ficompl
fst
es
push
lret
loopne
mov
std
into
fdivrp
fstps
popa
adc
add
jg
jle
jge
inc
mov
add
pop
repnz
or
dec
dec
dec
dec
dec
dec
inc
decb
pop
or
add
push
dec
or
adc
cmp
arpl
dec
or
add
push
adc
add
enter
inc
or
pop
pop
cmovg
inc
push
dec
aas
in
lcall
and
adc
outsl
jmp
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
and
add
push
sti
stos
lods
mov
addb
mov
pop
mov
mov
pop
mov
mov
ss
add
outsb
or
fnstenv
add
push
inc
sub
sbb
addb
add
push
cmpsl
inc
jo
and
or
incl
dec
add
mov
loope
xlat
sbb
incl
shll
outsb
sysret
mov
es
lcall
cltd
fdivrs
data16
pop
stc
sysret
in
mov
stc
hlt
inc
sub
sub
push
push
mov
ja,pn
or
pop
aaa
outsl
cwtl
test
rcrl
xor
pop
lahf
inc
mov
ret
into
jg
jmp
mov
cli
mov
cli
fbld
inc
or
and
inc
and
jle
sub
jns
cli
push
sbb
mov
mov
mov
loopne
and
das
sti
mov
add
mov
jle
inc
dec
push
mov
cmp
jg
xchg
add
inc
mov
jg
or
sbb
jg
pop
mov
push
cld
jg
inc
add
push
fadds
sarb
std
mov
or
ja
jg
xor
and
jg
pop
add
add
xchg
test
dec
pop
or
les
jg
jle
push
orl
mov
mov
or
adc
sub
dec
xor
loopne
xor
pop
inc
data16
sbb
fsts
add
incl
add
loope
sbb
push
jbe
mov
rcrb
xor
mov
jle
and
sbb
or
xchg
xor
ffree
push
jmp
lods
sub
and
jle
lret
imul
mov
sbb
inc
scas
jle
mov
adc
dec
mov
popa
mov
adc
jg
adc
push
scas
data16
lea
jg
sub
add
inc
outsb
jg
incl
rolb
xchg
call
xor
cwtl
movb
pop
je
sub
jle
push
inc
pop
push
fdivrp
cmpsb
ljmp
insb
push
stos
pop
stos
pop
pop
pop
fidivl
daa
aas
aaa
pop
push
push
fiaddl
add
lock
cmpsb
fnstsw
add
inc
push
call
jle
sbb
or
decl
dec
scas
popf
out
or
push
mov
mov
push
comiss
daa
test
mov
push
arpl
pop
mov
mov
test
out
mov
sahf
push
dec
lcall
sbb
call
push
and
jle
jle
test
mov
out
dec
test
into
push
fnstenv
jmp
push
push
jne
pop
push
jbe
fildl
push
push
jp
mov
mov
dec
jbe
scas
sbb
pop
mov
mov
jbe
es
push
cmp
ljmp
cmp
dec
pushl
fs
inc
outsb
ss
or
incl
int3
ja
xchg
inc
dec
push
movsl
mov
test
lahf
mov
push
int
mov
dec
pop
jbe
sahf
mov
inc
out
out
mov
xchg
ss
adc
inc
push
pushf
cmp
pushf
ds
cmp
xchg
nop
mov
xchg
xor
xchg
xor
sub
push
cs
nop
sub
nop
daa
ss
cs
insl
sahf
adc
mov
xor
fsin
outsb
call
adc
push
mov
pushl
dec
pop
fnsave
xor
jmp
sahf
int3
nop
mov
es
fisubl
roll
push
add
pop
ja
out
cltd
mov
dec
shll
aad
pop
ja
imul
divb
mov
add
add
sbb
orl
inc
push
mov
outsl
or
outsl
add
add
and
adc
pop
or
push
aas
push
sahf
out
fwait
adc
pop
push
orl
lea
mov
push
imul
fstl
sbb
test
push
lock
cmp
cmp
cmp
icebp
push
add
in
add
mov
inc
sbb
dec
ljmp
pop
idiv
mov
roll
mov
inc
testl
enter
xor
or
xchg
out
andb
std
into
jmp
syscall
jbe
add
mov
sub
push
mov
sub
outsl
add
pop
lcall
or
mov
sub
iret
add
daa
cld
pop
mov
adc
das
pop
cld
call
push
adc
popa
sti
push
rcrb
std
out
and
seta
lret
inc
lcall
or
xor
or
mov
mov
arpl
cmp
incl
incl
decl
call
sub
mov
mov
pop
push
or
mov
sub
dec
or
dec
outsb
decb
mov
xor
clts
add
adc
punpckhbw
or
iret
jle
adc
inc
mov
inc
sti
out
paddq
push
lcall
add
pop
dec
incl
pop
or
push
outsb
push
ljmp
add
or
push
je
sub
pop
lds
adc
push
std
jmp
insl
or
push
add
or
andb
mov
decl
jg
dec
aaa
push
popa
cli
idiv
loop
add
imul
adc
xchg
decl
push
xor
incl
fcmovbe
inc
xorps
aaa
mov
xor
push
shll
adc
jne
roll
dec
hlt
pop
and
sahf
ret
incl
lcall
ljmp
lahf
inc
inc
arpl
inc
pop
es
jge
mov
mov
movsb
dec
jns
data16
stos
push
popf
inc
cmpsb
dec
dec
inc
pop
rcll
push
dec
mov
movsb
into
add
and
mov
mov
out
push
shrb
rcl
outsb
shrb
xor
shll
push
push
jb
enter
imulb
push
iret
insl
fstpl
outsl
pop
imul
push
dec
push
xchg
imul
aam
push
cs
lcall
decl
pop
add
test
push
jmp
popfw
cmp
aas
xchg
lods
cwtl
xor
iret
and
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
iret
and
pop
xchg
xchg
es
pushl
ljmp
cs
push
js
fimuls
adc
xchg
dec
or
std
faddl
jge
sahf
in
fldcw
or
jl
or
fdivrl
jge
jg
xor
add
jle
repnz
push
dec
push
ss
sti
aaa
dec
repnz
repnz
jae
pop
fidivrl
push
mov
mov
out
add
in
add
int3
outsb
nop
testl
and
inc
stc
sbbb
lcall
xchg
lahf
push
lods
inc
pop
adc
adc
int
cmpb
push
addb
jnp
lahf
dec
es
addl
orb
jmp
and
xchg
out
push
sub
iret
fstl
fucom
jo
mov
cli
pushl
mov
repnz
push
fldl
mov
fnstsw
mov
icebp
dec
pop
cld
mov
jno
sub
pop
inc
test
outsb
push
jg
je
daa
jg
mov
push
enter
dec
loope
xchg
push
in
iret
cld
jp
es
xchg
mov
incb
out
mov
and
dec
jo
orb
jg
ret
push
push
pop
ja
dec
and
aam
cmp
decl
rclb
lcall
push
fsub
pop
cli
adc
add
sti
or
decl
xchg
and
jbe
mov
push
pop
push
pop
push
xchg
scas
jmp
notrack
jle
into
lcall
push
jns
sti
pop
mov
mov
push
mov
jmp
xchg
jmp
mov
push
xchg
out
int3
mov
loop
adc
xchg
out
sbb
loope
sbb
decl
xor
mov
or
add
pop
aad
fisubrs
add
ja
sahf
std
movsb
ds
or
pmullw
mov
mov
adc
add
cmp
loope
push
pop
mov
lock
repnz
add
add
sub
push
dec
aad
push
inc
lahf
and
clc
lret
adc
push
mov
xchg
push
lods
out
mov
popf
insl
xlat
into
pop
push
sbb
push
sbb
rcrl
and
mov
sbb
outsb
or
cmp
adcb
nop
push
adc
and
add
or
adc
lahf
adc
or
add
lods
push
outsb
ret
add
pop
rolb
fiadds
gs
jo
add
add
inc
insl
mov
ss
dec
add
lret
mov
push
mov
dec
and
mov
sbb
xchg
scas
jnp
and
add
dec
test
nop
test
or
mov
ss
jmp
fdivs
das
popf
ds
lret
sbb
add
imul
lea
and
sub
sbb
dec
les
scas
add
pop
test
sbb
adc
or
insl
pop
add
jno
add
cmc
add
push
or
sbb
cmp
movsl
inc
sbb
push
add
add
adc
mov
and
insl
pop
sbb
mov
and
jne
popa
shlb
in
sub
xlat
xor
jb
mov
and
insl
sbb
jae
or
mov
sbb
rcr
add
clc
pop
pop
gs
pop
mov
movb
pop
jo
test
repz
out
test
and
test
arpl
jno
pusha
fists
outsl
shrb
jo
xor
dec
fidivl
loop
and
cmpsl
mov
xor
pop
sub
mov
mov
je
fwait
ljmp
pop
pop
dec
insb
out
insl
insb
incl
sub
sbb
sbb
in
mov
cmp
insb
jne
addr16
in
pop
and
popf
push
sub
mov
inc
sbb
inc
or
mov
lea
imul
jno
mov
insl
sbb
mov
fcoms
fidivl
sbb
popf
xchg
and
mov
pop
aad
cmp
mov
pop
add
xchg
adc
notb
pusha
sbb
mov
jo
je
push
dec
in
and
mov
xchg
sbb
orl
mov
push
mov
xchg
cmp
inc
adc
and
push
mov
inc
ljmp
add
xchg
push
push
fwait
popa
pop
adcl
dec
or
imul
sbb
push
or
jb
sub
push
mov
cwtl
movl
cmp
imul
je
jbe
or
bound
mov
mov
cmp
insl
arpl
loope
xchg
xchg
sub
sbb
or
orb
push
sbb
add
and
xor
rorb
add
add
push
loopne
test
inc
mov
outsb
inc
pandn
jae
sub
xchg
xor
add
push
scas
xchg
push
pop
lods
ret
out
dec
das
out
adc
ja
mov
pop
test
pop
inc
and
adc
loop
mov
xor
mov
push
jne
mov
loop
inc
mov
aas
loopne
inc
outsl
jae
loop
outsl
clc
jp
xorl
sub
push
cmpsl
push
add
inc
bound
fisubl
ds
fimull
mov
mov
sub
aam
popf
aas
movsl
push
mov
xchg
loopne
pop
sub
mov
cmp
xor
mov
dec
fcmovnu
xchg
sti
cmpl
cli
lea
push
inc
aaa
insl
jecxz
insl
push
pop
imul
xchg
insb
jne
arpl
mov
insl
push
or
fadds
mov
push
inc
mov
sbb
xlat
test
lods
and
and
mov
outsl
mov
arpl
mov
fs
cmp
inc
insb
push
popa
rcpps
js
and
inc
xor
jb
inc
inc
push
shll
xchg
or
fs
jmp
imul
lea
out
lds
dec
in
cs
insb
sahf
daa
push
sbb
push
and
push
cld
sub
jb
neg
fwait
pop
enter
mov
jno
cmpsl
rolb
add
xchg
add
fsubr
mov
sub
add
gs
jg
jo
adc
and
lret
and
push
les
push
and
addr16
movsb
add
mov
faddl
inc
push
js
pop
lret
xor
mov
adc
mov
data16
sbb
inc
sbb
pop
and
and
inc
je
insl
dec
outsb
dec
std
hlt
inc
inc
fwait
push
and
mov
sub
push
push
pop
jnp
jl
in
add
pop
add
add
sbb
mov
dec
rcrl
sub
add
movhps
imul
in
lcall
push
es
cmp
inc
or
fmull
add
shlb
jo
and
cmpsb
mov
sbb
in
call
inc
jo
sbb
test
or
ficomps
mov
es
sub
add
add
pop
loope
mov
insb
mov
subb
insb
sub
push
push
scas
cli
test
push
mov
outsb
xorl
sbb
out
xchg
xor
inc
sbb
pop
xor
jge
sub
jne
jl
mov
adc
mov
xchg
sbb
sti
mov
je
and
je
mov
lret
in
sbb
jge
rorl
lock
js
push
xor
stos
mov
imul
rclb
sbb
jle
ret
add
mov
mov
mov
mov
add
push
hlt
mov
xchg
sbb
fmuls
adc
das
sbb
or
outsb
push
inc
adc
rcr
adc
push
nop
and
and
and
sbb
push
mov
mov
lds
rorl
addr16
adc
mov
or
es
sbbl
push
mov
jo
xchg
dec
insl
dec
inc
push
or
ret
adc
fs
shrl
sbb
dec
cld
addr16
fs
and
test
pop
test
and
xor
jmp
arpl
mov
xor
pusha
push
int3
inc
push
mov
imul
jns
aam
inc
scas
sbb
and
inc
cmp
nop
movsl
or
out
push
sub
fwait
adc
daa
outsb
pop
sbb
sbb
or
sub
shll
xor
mov
xchg
lods
mov
xchg
jbe
enter
and
add
and
addb
push
inc
inc
mov
cmp
xor
sub
enter
push
or
arpl
cmp
dec
mov
jne
lods
inc
out
inc
test
mov
xchg
jae
xor
adc
add
aaa
sub
or
mov
push
arpl
push
inc
mov
movsl
dec
sub
stc
and
lock
dec
add
add
sbb
daa
stc
mov
or
adc
in
mov
mov
push
insb
popa
and
cmp
inc
sbb
nop
mov
enter
push
ret
lock
mov
flds
rcrl
dec
mov
addr16
add
pop
imul
lock
push
mov
enter
mov
pushfw
push
repz
xlat
out
les
fcmovbe
dec
cmpsl
add
pop
and
or
inc
inc
ficomps
xchg
and
out
jg
je
add
add
dec
incl
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
