divb
in
mov
mov
push
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
and
stc
out
aas
mov
test
je
cmp
add
and
jbe
decl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
pop
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
int
imul
xchg
scas
adc
mov
add
inc
jne
xor
cmc
sub
sar
inc
je
daa
ret
push
jg
mov
repz
adc
pushl
mov
or
fildl
add
test
icebp
mov
mov
call
pushl
shrb
cmp
fwait
cltd
fildl
mov
ja
divl
mov
add
andl
mov
clc
sbb
pop
push
sub
mov
hlt
cs
adcb
mov
adc
scas
hlt
mov
fcomps
sub
dec
sbb
jns
shlb
in
or
frstors
mov
hlt
or
pop
cmpsl
push
sbb
inc
mov
fwait
popa
xor
push
call
jno
add
out
push
sbb
loopne
pop
pop
outsb
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
sarb
xchg
and
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
mov
push
fisttpll
push
test
or
sbb
push
lock
or
ja
aad
jnp
mov
aas
fadd
jae
cmc
jne
cltd
push
pop
pop
push
jno
cmc
jmp
aad
or
push
push
sbb
outsb
or
sub
add
sbb
enter
add
push
mov
mov
aaa
ja
inc
pop
bound
std
pop
sub
lock
push
mov
cmp
add
loopne
or
jge
insl
sbbb
mov
push
lock
xor
mov
pop
ret
push
stos
pop
test
push
pop
jae
into
xor
jge
arpl
pop
inc
sub
fadds
sub
enter
jo
ds
push
xor
in
push
sbbl
jl
jne
pop
xor
lods
inc
test
call
js
mov
cmp
jg
mov
adc
loop
addr16
inc
ret
shll
and
pop
outsl
pop
xchg
dec
add
sbb
mov
sub
push
mov
idiv
loope
sar
xor
cmp
ja
adc
sbb
clc
add
push
push
mov
jmp
pop
scas
sbb
aad
adc
inc
add
jo
add
cmp
ret
push
push
jo
lret
stc
sub
adc
cmc
fsubp
stos
cmp
jle
mov
cmpl
or
push
fsubrp
sub
xor
jge
dec
cmp
outsb
fildl
jmp
cltd
xchg
add
push
test
mov
ret
enter
jg
push
push
outsb
push
hlt
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
mov
shll
mov
mov
or
inc
add
adc
lea
mov
nopl
adc
push
xor
fcmovne
pop
hlt
into
mov
aam
push
cmpsl
testl
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
jp
stos
mov
roll
outsl
or
or
test
jle
cmp
mov
orl
movsl
pop
aas
pushf
inc
add
icebp
sbb
movl
sbb
sub
out
test
repz
push
sarl
lea
cmp
jae
pop
scas
dec
js
sub
adc
aaa
cmp
andl
ret
and
hlt
adcb
adc
dec
js,pn
hlt
jg
adc
movsb
ret
rclb
clc
sbb
jb
orl
or
add
cmpb
add
loope
adc
xor
idiv
arpl
adc
and
addl
fcmovnb
rcr
push
add
push
xor
push
push
push
mov
jge
mov
pushf
pop
mov
shrb
enter
call
add
cmp
fists
cmp
xchg
rorl
outsb
pop
int
les
jle
push
lea
js
pop
in
iret
hlt
ret
pop
cmp
je
or
or
mov
push
push
fdivp
sbb
ljmp
add
jbe
jo
push
or
into
and
add
add
xor
imulb
adc
addr16
dec
cmp
pop
repnz
mov
xor
push
push
clc
lock
jp
enter
push
mov
push
pop
pusha
rep
jae
sub
jno
mov
jns
dec
es
pop
pop
jmp
add
jle
cmp
or
pop
or
and
test
ljmp
push
call
loop
ljmp
pop
xchg
imul
les
add
fcoms
jnp
dec
cmp
je
cmp
aaa
and
sarb
mov
ljmp
mov
jmp
pop
call
mov
mov
mov
pop
arpl
and
and
inc
sub
cmpsb
ret
lret
aaa
scas
shl
xor
outsb
or
pop
pop
or
cmp
jne
ljmp
lcall
sub
jne,pt
push
push
in
daa
ss
push
pusha
adc
mov
add
and
pop
pop
lods
add
adc
mov
mov
or
into
lret
dec
dec
sub
sub
xor
adc
cmp
inc
jl
or
rolb
not
mov
adc
push
cmp
xor
icebp
pop
lds
sub
add
ss
add
stc
push
loope
insb
adc
mov
dec
cwtl
idivl
push
push
and
loopne
mov
add
fucomi
dec
mov
mov
and
jo
test
push
stc
jmp
or
shll
adc
mov
sbb
lcall
push
add
inc
sbb
arpl
or
aam
mov
xor
sbb
xchg
clc
movb
int3
adc
test
in
subb
cmpw
jne
or
mov
jmp
pop
inc
push
push
xor
shrl
scas
sbb
ljmp
mov
add
outsl
pop
cmpsl
std
cmpl
or
es
mov
stc
sub
enter
je
add
dec
jmp
mov
mov
jno
cmp
sub
lock
lock
xor
leave
push
lods
jmp
hlt
mov
mov
loope
and
jo
jg
lea
mov
hlt
or
fwait
mov
add
sti
es
sti
rcrb
mov
addr16
pop
push
mov
inc
inc
subl
push
pmaxub
outsl
decb
mov
lock
test
sbb
xor
repnz
sub
std
push
cld
jno
mov
mull
push
mov
mov
add
dec
add
inc
add
dec
in
add
cmp
inc
incl
fldl
xor
mov
inc
adcb
out
test
nop
mov
cmp
je
push
or
loopne
pop
mov
inc
pushf
add
fcoms
pop
adc
add
pop
cmp
pop
push
xor
pop
je
jecxz
jns
leave
ret
or
mov
adc
pop
leave
inc
mov
movsb
sbb
jbe
push
adc
ds
push
jl
jne
in
sbb
adc
lcall
addb
lcall
lock
cmp
int
rcrb
or
ljmp
push
jbe
jo
mov
adc
sbb
sbb
mov
je
or
sbb
es
dec
cmpsb
into
add
shrb
js
js
fbld
jge
sbb
add
incl
cmp
orl
inc
inc
call
pcmpeqb
push
or
jp
push
sti
lret
mov
in
cmp
dec
xchg
push
jne
xor
or
in
xor
or
mov
out
add
hlt
cmpsl
pop
cltd
mov
cmp
add
mov
push
sbb
push
jp
xchg
or
fs
sahf
negl
inc
add
mov
and
clc
nop
and
jge
jb
int
xor
xchg
push
xchg
rorl
push
hlt
push
sbb
fiadds
mov
pop
je
mov
xor
mov
test
inc
inc
mov
xor
hlt
cmp
mov
popf
aam
pop
enter
cmc
jecxz
xor
mov
ss
push
sub
dec
orb
and
push
or
call
sub
jmp
mov
and
movsbl
addb
jg
fdiv
push
popa
push
sub
jl
enter
incl
xchg
mov
or
sahf
adcl
cs
push
pop
gs
jp
xchg
addr16
into
cmpsb
fisttpll
rclb
hlt
test
inc
pop
push
mov
fsubrl
je
jo
cmp
or
add
mov
dec
sbb
dec
in
enter
inc
pusha
scas
xchg
push
aam
adc
dec
shlb
sti
push
dec
sbb
pop
or
nop
push
fsubl
mov
mov
cmp
outsb
push
addl
xchg
subb
cld
mov
jo
sub
mov
fdivrs
dec
push
in
push
adc
pop
sbb
je
sbb
push
in
pop
push
test
jecxz
sbb
pusha
es
inc
je
inc
sbb
mov
in
and
adc
mov
lock
inc
popf
mov
add
jmp
sub
ret
shrl
add
mov
aas
sub
cmp
loopne
add
pop
test
loopne
push
push
adc
xor
adc
or
inc
add
sbb
je
push
jmp
mov
movsl
add
add
adc
add
mov
sbb
push
add
cmpb
je
mov
ljmp
dec
dec
jne
scas
add
js
xor
fadds
xor
call
dec
add
inc
jg
jbe
push
shr
push
jmp
mov
dec
notb
dec
stc
adc
cmpsl
sbb
test
std
in
js
adc
repnz
inc
shlb
insb
aam
and
jns
scas
fmuls
fsubrl
fs
out
inc
and
add
lea
sbb
dec
mov
mov
mov
or
call
push
cld
mov
pop
add
sbb
pop
sbbl
push
xchg
pop
out
daa
popa
or
mov
leave
les
mov
pop
and
test
aaa
xchg
call
inc
mov
test
inc
cmp
jl
jmp
pop
mov
mov
cmpsb
add
add
jmp
add
inc
cwtl
xor
addb
mov
insb
ret
pop
sub
testb
pop
push
xchg
outsl
movsb
push
xor
add
push
sbb
iret
mov
adc
sbb
push
stos
data16
mov
mov
data16
pop
ret
push
add
ds
jo
jae
pusha
sbb
mov
push
inc
fdivrl
repz
jns
xor
repnz
push
decb
sbb
rolb
outsl
push
pop
insl
pop
mov
jg
enter
sub
mov
or
cmp
loopne
dec
in
push
mov
nop
sbb
pop
mov
mov
jmp
cmp
cmp
xor
push
xor
mov
sti
or
sbb
mov
jmp
push
divb
pop
inc
mov
push
push
cltd
push
loope
loopne
and
adc
push
mov
sub
lds
sbb
loope
or
loopne
dec
sbb
or
mov
xor
sbb
in
lock
mov
cmpl
or
jo
aas
push
mov
cmp
jne
jmp
push
jg
enter
lods
pop
xchg
in
inc
or
cmp
pop
dec
mov
aas
pop
ret
xchg
cmpsl
std
cmp
jb
cmp
ja
movzbl
sub
sbb
inc
fstpt
push
ret
mov
call
sti
je
dec
je
add
push
subl
mov
jbe
push
mov
push
inc
adc
and
or
mov
call
or
shlb
jge
cmpsb
in
xor
pop
adc
cli
das
je
or
mov
cmp
cmp
dec
clc
addr16
je
jb
mov
sbb
add
test
sbbb
or
or
mov
dec
xor
push
push
leave
leave
mov
mov
xorb
and
pushf
cld
cmp
jbe
shlb
adc
pop
add
cmp
add
out
add
jmp
and
adc
mov
inc
pop
dec
hlt
mov
mov
nop
sub
dec
cld
clc
mov
or
repnz
clc
and
out
mov
mov
jb
and
insl
or
test
push
add
dec
in
test
insb
and
pop
sub
jmp
or
push
push
clc
cmp
jne
outsb
hlt
cmpb
loop
and
push
test
sub
rol
js
jb
or
ja
js
rolb
inc
dec
push
mov
or
cmp
xor
shrb
cld
lods
xor
adc
sbb
arpl
sbb
mov
mov
in
push
inc
push
test
fsubs
dec
jmp
mov
aaa
jae
int3
insl
loopne
pop
inc
shrb
sbb
inc
jecxz
add
jmp
pushf
aas
insb
sti
and
xor
loop
and
hlt
cmp
js
mov
test
jne
xor
dec
lock
sub
mov
or
push
popa
incl
cmp
dec
shlb
xor
rcrl
je
repnz
lea
push
xchg
mov
addl
pop
or
sbb
orl
mov
mov
jae
cmp
jg
or
jge
add
and
aaa
aaa
es
sub
sub
and
pop
or
jl
pushl
mov
or
adc
je
lea
cmp
jbe
lea
cmp
jbe
mov
pusha
pop
arpl
pop
inc
lock
dec
add
je,pn
test
jne
pop
adcb
sub
jb
push
and
gs
add
xor
std
mov
push
xor
adc
movb
inc
mov
push
sub
push
push
push
test
enter
pop
rolb
and
jb
push
and
jno
mov
inc
and
mov
je
stos
jmp
adc
mov
add
sbb
mov
orl
sbb
clc
cs
ljmp
movsb
inc
add
add
mov
cmp
or
mov
mov
mov
mov
mov
lea
mov
mov
and
insb
cmp
setne
ret
and
sub
ljmp
rcll
sti
paddd
xor
mov
inc
sahf
sbb
testb
insb
xchg
clc
push
dec
cmpsl
cmp
xchg
lea
sbb
add
jmp
jbe
push
dec
mov
push
insl
xor
cmp
pushf
lret
push
les
or
jle
jnp
lea
push
mov
mul
push
lea
or
out
push
ss
adc
or
mov
xchg
insb
or
mov
jns
pop
lea
test
jnp
repz
sub
enter
pop
leave
adc
push
andl
sub
ret
enter
push
add
fwait
cmp
sbb
dec
mov
movsb
mov
cmpsl
pop
dec
dec
xor
cmc
fists
mov
js
les
mov
es
pop
push
movl
inc
xchg
mov
ss
cmc
xlat
xor
push
xlat
jbe
mov
pop
ret
icebp
mov
movsb
inc
inc
add
sti
xchg
push
mov
bound
jae
inc
adc
push
mov
sub
xchg
push
pushf
push
add
mov
lds
test
pop
dec
scas
shrb
in
or
sbb
pop
mov
push
pushl
push
mov
or
pop
lea
ja
cmp
outsb
push
call
push
pop
push
fnstsw
and
cmpl
inc
add
test
jns
jbe
pop
push
dec
push
xchg
cmp
jb
pop
scas
cltd
sbb
sub
cmp
rcrb
popf
out
and
jbe
mov
aaa
das
push
gs
and
sti
inc
inc
fwait
cmp
add
pop
nop
push
jl
fsubrl
jmp
cmp
sti
test
loope
inc
mov
push
mov
xchg
stos
pop
jnp
imul
dec
add
aam
clc
das
je
or
push
ret
ja
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
and
push
mov
dec
mov
mov
or
arpl
scas
or
mov
icebp
in
clc
mov
icebp
inc
mov
jl
add
pusha
addl
sub
adc
mov
add
add
sahf
mov
mov
push
aaa
clc
dec
std
roll
add
push
add
add
pop
pop
outsl
shrb
cmp
ja
fistps
into
mov
sahf
movmskps
inc
adc
dec
sub
lock
sub
ret
or
sti
pusha
jb
jle
push
mov
test
subb
orl
aas
imul
mov
mov
jo
out
das
push
cmpsb
inc
jne
and
gs
mov
or
push
ljmp
push
mov
loopne
push
dec
push
mov
xor
and
arpl
push
xor
xchg
fadds
popf
test
imul
andb
xchg
add
xchg
xchg
enter
pop
jge
aas
int3
popa
movsl
xchg
fimuls
fdivs
loope
add
pop
frstor
sub
xchg
inc
push
fsubs
pop
xchg
fs
add
lods
xor
push
push
loope
mov
testb
adc
inc
jno
lret
idivl
in
cmp
ja
cmp
cli
push
sub
jge
iret
or
and
out
pop
ljmp
and
gs
fsubr
adcl
ret
cmpl
dec
add
jp
jo
cmp
andl
mov
mov
pop
sbb
insl
jnp
das
ljmp
mov
loopne
into
addl
push
call
sbb
push
add
ficompl
add
sbb
pop
or
or
xchg
jns
adcb
out
jno
jl
inc
je
ret
push
cmp
add
imul
mov
add
inc
mov
psraw
nop
adc
call
jne
fidivrl
cmp
and
add
mov
dec
sbbl
clc
add
dec
out
test
dec
cmp
mov
push
adc
ficoml
pop
repnz
push
insb
xor
push
fisubs
pop
fistpl
dec
cmc
xchg
jne
mov
mov
or
icebp
cmpsl
lods
dec
ds
jo
mov
loopne
fdiv
loopne
cmpsl
mov
jmp
xlat
push
movsl
loope
aas
je
cmp
push
pop
jne
aam
mov
dec
and
jmp
push
enter
pop
jne
pop
call
pmulhw
test
mov
in
xor
cmp
fildll
jmp
sbb
jbe
sub
mov
mov
mov
or
sahf
jo
inc
aam
cmp
pop
lea
fldl
add
je
pop
pop
in
lock
sub
mov
add
je
imul
fwait
and
cwtl
inc
repz
jmp
pusha
lret
into
mov
jae
scas
jg
inc
out
and
add
and
xor
leave
adc
pop
test
das
add
out
inc
mov
in
add
sub
push
dec
je
add
cmpl
orb
pop
cmp
xrelease
testl
mov
push
mov
jb
xor
push
pop
pop
fs
or
push
mov
in
or
insb
cmpb
or
or
ret
push
bound
push
push
popf
rolb
push
jbe
inc
mov
cmp
jmp
pop
pop
loopne
mov
add
loope
xchg
ret
fstpt
add
inc
arpl
mov
xchg
sbb
or
push
jae
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
cmpsl
sub
adc
or
sub
or
sub
sar
inc
add
push
xchg
pop
or
jle
add
or
pop
inc
dec
movl
adc
js
shr
inc
jle
mov
jno
rorb
les
mov
lods
jno
lods
shl
and
push
mov
push
aaa
in
sub
adc
inc
inc
cmpsl
fldcw
add
je
push
push
movb
cld
inc
xor
push
aaa
jo
sbb
mov
push
or
or
call
add
clc
sub
nop
or
sahf
je
mov
js
loopne
jmp
sub
cli
add
lea
lock
push
push
lea
push
test
int3
pop
stc
adc
je
adc
cmc
sbb
inc
push
or
popa
adc
mov
dec
outsl
mov
rcrb
pop
or
push
rorb
mov
pushl
cmpl
cmp
mov
dec
or
push
add
push
push
push
sahf
orb
mov
jnp
pop
jmp
scas
jmp
test
pop
ret
pushl
push
jns
pop
sbb
negl
xor
xor
or
aas
mov
iret
add
add
mov
jno
cmp
adc
jne
pushl
jle
inc
add
push
mov
cmpsl
aam
sub
sbb
jbe
lock
push
leave
mov
es
cmp
pop
iret
add
test
mov
and
ds
faddl
stos
in
xor
movsl
hlt
in
js
mov
call
xor
testb
les
pusha
bound
mov
cmp
testb
aaa
mov
js
fsubp
push
enter
rclb
in
sub
call
iret
xchg
or
pushf
pop
fcmovb
enter
or
adc
push
loopne
or
or
mov
pop
mov
pop
jno
inc
out
jp
pop
movsb
or
js
sbb
push
cmpsl
mov
stos
or
sahf
cmpsb
add
loop
add
dec
test
mov
clc
mov
andl
hlt
pusha
adc
add
stos
shlb
add
xchg
dec
loopne
shrb
add
fdivrl
xorl
xlat
pushf
push
outsl
iret
mov
fistl
pop
jne
loopne
inc
push
mov
or
cmp
pusha
popa
adc
pop
mov
push
push
pop
cmp
inc
fistps
aaa
jbe
push
and
xlat
jl
pop
lods
jge
cmp
sbb
xor
xor
jl
cmpsl
sbb
pop
cmp
and
pop
popa
mov
mov
loop
jo
mov
sahf
mov
sub
cmp
out
xchg
or
xchg
fdivrl
lret
xchg
lahf
adc
mov
mov
jecxz
clc
mov
fsubrs
add
cld
popf
jg
lahf
sbb
mov
pop
fdivrl
int
mov
rorb
jge
enter
call
cld
sti
add
sub
inc
sub
addl
andl
pop
jo
mov
sub
sbb
lea
roll
ss
add
push
lcall
pop
add
lcall
mov
mov
inc
push
xchg
xorl
cmc
sahf
loopne
xor
lea
push
add
sub
shlb
fimull
push
leave
loope
mov
mov
mov
loope
mov
add
and
mov
jo
push
jae
add
cmp
or
xor
and
cmpb
jg
sub
daa
xor
fidivs
out
add
js
aas
imul
mov
mov
movsb
aas
imul
mov
mov
mov
add
fisttps
dec
sub
mov
sub
pop
pop
pop
shll
pop
sub
in
fbstp
in
out
ffreep
jle
or
push
imul
xor
addl
jle
or
xchg
mov
lods
mov
mov
mov
lea
pusha
mov
cmp
push
mov
inc
fisubrl
cwtl
in
lea
mov
push
leave
test
and
mov
andb
push
or
mov
dec
aam
call
mov
mov
dec
mov
mov
push
lahf
pop
push
push
adcb
xchg
add
adc
xor
xchg
push
add
mov
cmp
cmpl
popf
jo
rcll
or
cmpl
add
xchg
lret
je
insb
scas
aaa
cmp
loopne
and
xor
leave
ret
sti
fs
rorl
add
in
sub
inc
push
inc
popa
in
sub
and
cld
inc
and
xchg
jecxz
jo
das
and
sarb
mov
fs
sub
js
adc
aam
lods
push
movsl
repnz
pushf
movsb
int
aad
jne
sub
cmc
lods
cmp
xchg
add
push
sub
lret
dec
jae
xchg
rorl
adc
jnp
sub
jl
sub
adc
inc
std
pusha
xor
popa
add
in
roll
cs
dec
fldl
pushl
cmp
and
sbb
inc
inc
adc
pop
adc
andb
scas
out
pop
xchg
jne
ja
sbb
add
adc
and
shr
in
pop
movsl
xchg
scas
or
bound
gs
ret
push
mov
and
adc
les
pop
jl
or
test
lahf
cmp
inc
lock
add
aaa
out
sbb
jle
push
das
movsl
mov
mov
fldt
sbb
lods
xchg
ret
pop
inc
and
rcll
rorb
sub
sub
ret
idivl
pop
mov
sub
adc
inc
mov
push
pop
nop
pop
movsl
xor
fs
mov
xor
inc
jo
pop
into
gs
mov
or
inc
mov
icebp
into
scas
xchg
adc
movsb
mov
xor
push
sub
ficoms
pop
pushf
and
repnz
sbbb
mov
mov
mov
xchg
mov
in
jae
adc
repnz
out
and
inc
je
daa
je
scas
adc
mov
ja
jno
cmp
mov
push
push
or
mov
mov
fsubrp
xor
dec
jae
mov
lea
in
adcb
push
push
push
rorl
sub
incl
mov
mov
pop
add
in
movsb
out
mov
mov
in
sbb
or
out
punpckhbw
ret
loope
cmp
cmp
jo
ret
push
add
mov
fadd
pop
push
adc
addb
or
imul
inc
repz
jbe
pushf
adc
leave
and
lret
lock
jmp
dec
sub
push
jo
call
cltd
or
fmuls
ljmp
imul
push
call
inc
inc
in
sbb
mov
xchg
dec
mov
jmp
jmp
aam
jge
cld
shlb
push
push
cld
das
pop
pop
mov
jns
mov
mov
pop
loopne
lock
jns
lock
fidivl
fldt
push
aam
jnp
ds
cmp
jle
or
push
push
and
daa
add
add
stos
push
ljmp
add
fldt
pop
js
inc
fidivl
push
in
sub
int
mov
add
aaa
mov
sbb
jecxz
lods
jo
faddl
dec
and
mov
stos
pusha
stos
movsb
fisttpl
icebp
std
ljmp
test
les
push
sbb
sub
fistpl
fistpl
stc
aaa
les
ret
je
push
mov
and
gs
mov
xchg
dec
leave
mov
xchg
xchg
inc
or
sbb
inc
mov
mov
adc
dec
stos
rclb
nop
push
lock
mov
nop
psubw
xor
lret
lock
xchg
pop
push
or
xchg
mov
xor
and
sahf
sub
cmp
xchg
push
lahf
push
and
bound
popa
aad
comiss
mov
add
pushf
mov
push
xor
ds
inc
xor
mov
jo
fcoml
dec
fdivl
out
jge
out
sahf
je
sbb
dec
mov
pop
cld
mov
repz
subb
adc
push
jo
outsb
adc
movl
shlb
inc
xor
rcl
pusha
and
xchg
or
ss
ret
dec
pushf
push
lret
enter
pushf
sbbb
mov
int3
sbb
push
cmp
int3
dec
inc
enter
sbb
enter
arpl
pusha
arpl
ret
sbb
sbb
sbb
sarb
and
mov
xchg
inc
ds
mov
mov
inc
mov
mov
jle
pusha
sbb
push
mov
pop
push
dec
jmp
ja
sub
mov
xor
dec
and
push
jcxz
push
mov
clc
rcrl
fcoms
inc
inc
adc
mov
loopne
mov
cld
inc
or
dec
pusha
ficoml
push
rorb
push
movsb
aaa
test
or
jne
add
mov
push
xor
sbb
and
cmp
push
push
inc
adc
insb
inc
xchg
jnp
ds
xor
loopne
add
sbb
or
aam
cltd
add
inc
sbb
in
js
pop
fst
mov
and
data16
sub
imul
jbe
movsb
and
push
aaa
adc
dec
push
icebp
jle
push
orl
push
push
mov
test
xchg
pop
hlt
mov
cmpsb
mov
lea
dec
sbb
or
ret
dec
imul
add
and
out
pusha
outsb
pop
adc
das
or
xor
jle
xchg
cmp
jl
add
jmp
xchg
fldenv
js
lods
pop
jne
mov
fcmovne
aas
inc
scas
fs
pop
push
jmp
push
push
aad
xor
shll
mov
adc
test
push
or
inc
xchg
or
xor
andb
cmpsb
fcmovnbe
lea
insl
sub
or
adc
scas
repnz
notl
mov
jb
or
dec
push
or
je
ja
in
lret
or
ret
mov
mov
adc
inc
adc
rol
test
pop
rol
popf
mov
rcrl
add
shr
lds
lcall
fisttpll
cmp
adc
mov
inc
adc
movl
movsb
mov
push
or
inc
data16
sub
push
pusha
insl
sbb
cmp
add
fistpl
xchg
pop
inc
adcl
inc
test
push
ds
add
in
push
sbb
jge
popa
sbb
mov
out
mov
and
pop
cmp
popf
push
sbb
subb
in
cmpb
adc
push
sahf
les
mov
and
ds
push
lods
push
pop
stc
jb
shll
dec
add
sub
aas
imul
adc
clc
add
mov
push
add
push
aam
ret
lcall
je
pop
push
pop
lahf
xchg
dec
cmp
mov
xchg
sub
and
and
jmp
push
pop
jecxz
daa
add
xchg
add
or
add
mov
xor
push
inc
cmp
xchg
pop
outsl
lea
or
out
idiv
sbb
aaa
push
push
pop
push
fs
ds
xlat
jmp
movsl
sub
rcrb
pusha
lock
sub
inc
mov
cld
lock
sbb
shrl
std
push
pop
mov
or
add
pusha
push
pop
cmp
xchg
stos
loope
fildl
push
testl
mov
into
and
bound
out
add
dec
mov
inc
mov
clc
sub
test
es
into
add
add
aad
pushf
std
daa
cmp
sub
loopne
je
aas
incb
xor
lgs
mov
or
add
push
jle
push
es
cltd
test
test
js
sub
icebp
scas
sub
pop
sub
push
ljmp
test
sub
inc
imul
je
jno
cmp
push
add
ret
inc
lret
push
jne
jmp
or
orb
scas
cmp
push
stos
add
or
ljmp
xor
aaa
lds
shll
ss
repnz
add
insb
adc
push
movsb
test
jnp
ljmp
sub
dec
out
cmp
add
mov
push
leave
pop
mov
inc
sbb
nop
xor
cmp
fidivrl
movb
push
add
mov
xor
sbb
adc
xor
adc
push
or
xor
inc
popf
ss
dec
push
push
mov
lahf
mov
mov
aas
push
cmp
and
push
adc
sub
popf
cmp
int3
dec
cmpsb
inc
sbb
and
mov
sub
mov
jg
stos
dec
mov
fsubs
enter
enter
cld
idivl
mov
sbb
or
das
jno
pop
xchg
daa
xor
xor
xchg
sub
cmp
popa
aam
inc
mov
std
loopne
data16
or
pop
shrb
xor
sub
outsl
loopne
shlb
test
jae
popa
nop
add
and
xor
and
inc
sar
pop
mov
aaa
xor
push
out
xchg
push
or
xchg
sbbl
cmp
fldt
movb
pop
rcll
sbb
and
cmc
sub
addr16
sahf
sub
and
sub
mov
and
or
fnstsw
adc
mov
lds
js
pushf
pop
shll
test
inc
test
ret
add
xlat
sbb
insb
popf
fimuls
jl
mov
sub
test
xchg
pushf
ljmpw
pop
xchg
jo
mov
fwait
decl
push
out
mov
add
mov
loope
sub
and
andl
mov
mov
jo
sbb
mov
jo
jb
out
mov
sub
adc
and
sar
std
pusha
sub
or
push
add
je
ret
cmpl
aam
lods
adc
mov
sar
pusha
jne
push
sub
xor
inc
jmp
lret
jne
sub
push
fcompl
jmp
lcall
mov
shll
cwtl
nop
out
or
mov
pushl
jmp
mov
repz
iret
pusha
mov
adc
add
stos
and
pop
sub
mov
mov
sbb
pop
add
inc
mov
fmul
in
cmpsb
faddp
pop
movups
dec
inc
cwtl
pop
popf
movsl
mov
mov
in
loopne
sub
cmp
mov
mov
lock
cmp
jns
cmp
mov
or
add
pop
sbb
inc
out
jo
xchg
jge
fsubs
pop
push
dec
out
lock
fisttpl
add
ljmp
add
jge
insl
push
ffree
loopne
cmpsb
jb
pop
add
or
sub
mov
pop
push
je
popa
jb
test
das
shl
test
push
xor
jo
pop
push
inc
faddl
addb
dec
jns
pop
add
mov
into
call
xchg
push
cmpb
push
cmpsl
push
out
fidivs
or
xchg
cmp
lds
mov
outsl
jbe
add
xor
std
mov
bound
sub
sub
repz
je
call
sarb
pop
sub
mov
fsub
push
out
push
rcrl
inc
out
xchg
je
push
insl
or
mov
mov
iret
rorb
ljmp
ds
loope
leave
punpckhdq
cmp
imul
test
mov
jg
mov
cmpsb
mov
les
or
add
inc
cmpsl
stos
adc
mov
or
xchg
jle
mov
test
loopne
cmpsb
lahf
cmpsb
popf
insl
ds
test
mov
test
and
rclw
dec
je
sub
outsl
xchg
scas
pop
pusha
bound
mov
push
jmp
adc
int
or
mov
mov
in
mov
dec
stc
xlat
mov
add
fmuls
mov
loopne
jo
repz
push
and
imul
lcall
movsb
adc
add
or
push
mov
ja
shrl
lock
iret
data16
push
lock
and
pushf
ljmp
jl
pop
jg
adc
cmp
jle
pusha
inc
push
sbb
xchg
push
push
xchg
pop
insb
mov
inc
mov
jmp
loopne
out
or
jle
cltd
or
mov
add
loope
stos
push
insb
add
fcmovbe
push
add
dec
ret
push
inc
push
fwait
es
mov
or
aaa
cmp
cmp
mov
filds
inc
fbld
jne
push
stc
shlb
inc
loope
xchg
push
daa
cli
push
loopne
pop
add
cmpl
mov
or
mov
mov
adc
ret
mov
inc
icebp
or
mov
push
mov
into
push
jle
dec
inc
leave
setns
adc
add
xchg
jl
or
int3
insl
in
jo
xor
or
xchg
lcall
loope
into
inc
cwtl
dec
jbe
push
add
lods
sahf
dec
test
add
mov
cmpb
and
std
push
xor
dec
stos
and
sahf
sti
lock
js
push
or
mov
mov
xlat
xchg
dec
or
or
shll
icebp
sahf
fadds
push
jnp
mov
in
pop
and
lods
shrb
aad
and
in
fdivr
push
sub
push
push
mov
icebp
jno
push
xchg
imul
dec
in
nop
pop
add
mov
mov
or
inc
ja
sbb
inc
lock
mov
fidivl
fsubr
push
lods
sbb
scas
in
movsb
pop
inc
mov
inc
in
in
mov
cmp
shlb
shlb
push
loopne
add
cmp
in
push
xchg
dec
jp
call
aaa
mov
dec
cld
push
arpl
xchg
and
sbb
ja
push
test
iret
or
lds
jmp
call
push
mov
mov
mov
cwtl
ds
adc
mov
clc
lock
add
add
xchg
mov
adc
sbb
je
mov
and
jmp
inc
adc
sahf
mov
cmpxchg8b
xor
mov
inc
mov
enter
sbb
icebp
addb
mov
jae
push
pop
mov
mov
fs
dec
mov
push
test
cwtl
sarb
stc
sbb
sbb
mov
dec
popf
lahf
imul
or
dec
in
std
out
jne
cmp
je
pushl
call
outsl
mov
mov
call
xor
push
ret
cmp
add
fdivl
mov
xlat
sbbb
xorl
xchg
je
rcrb
push
cltd
popa
fmuls
mov
leave
ljmp
cmpsl
jp
movsl
dec
push
lcall
pop
push
or
jp
push
xor
std
add
enter
out
into
test
add
rcrl
pop
xor
pop
add
push
xor
xor
inc
shlb
clc
xchg
lcall
add
dec
mov
fs
lods
movsb
jle
in
xchg
inc
push
push
fwait
jmp
js
jg
mov
adc
jmp
jmp
push
mov
roll
loopne
pop
pop
out
je
and
sbb
adc
scas
cmp
jmp
rcrb
ja
pop
or
rorb
push
push
test
add
pusha
lea
lock
lock
outsb
jge
pop
jmp
out
addl
push
jl
mov
add
and
xlat
xor
push
pop
jmp
mov
push
pop
inc
imul
pop
enter
push
sti
push
bsr
mov
mov
mov
add
dec
push
push
push
mov
in
in
and
inc
clc
jl
cs
adc
in
sub
cmpb
sti
inc
hlt
lea
cmp
jae
ficompl
fwait
movsb
call
xor
lret
mov
pop
mov
je
add
icebp
mov
pop
jb
push
jle
scas
push
fcompl
imul
add
pop
rcrl
js
fistpll
lods
xchg
add
js
sbb
xor
mull
ret
adc
dec
mov
testb
mov
sub
xor
push
add
mov
add
enter
add
dec
in
cmp
sarl
das
test
xor
jp
icebp
in
xchg
add
int3
add
jle
push
add
aam
cmpsl
cmp
orl
fsubr
out
jbe
xorb
sbb
xchg
repz
cli
pushf
in
leave
js
push
hlt
and
dec
cmp
outsb
xchg
push
sub
inc
jmp
and
xorl
lods
divb
add
lock
push
inc
inc
mov
add
mov
inc
push
pusha
jbe
lock
orl
push
push
jg
add
add
xchg
adc
push
push
dec
movsb
inc
lods
xorl
add
fwait
mov
inc
pop
jne
fistpll
fildl
jl
cmc
fisttpll
adc
push
sar
faddp
mov
pop
ret
lahf
mov
dec
sbb
add
jne
sahf
clc
je
fiaddl
fs
push
dec
stos
clc
push
sbb
dec
fldcw
fisttps
cmp
push
or
jo
or
cmp
daa
cmpsl
test
lcall
mov
inc
add
jns
test
ja
jmp
lea
jmp
or
push
imul
loope
pop
cwtl
jp
test
ret
fldenv
mov
fwait
cltd
in
mov
ret
mov
inc
pop
ficoml
xchg
pop
test
les
pop
popf
mov
mov
hlt
dec
stos
add
adc
lods
stos
cmpsl
pop
in
sbb
pop
mov
add
or
add
mov
jecxz
rcl
mov
add
test
nop
dec
jl
cmp
jns
jg
addr16
or
sub
cmp
sub
aam
cli
add
clc
mov
pop
stos
mov
outsb
xchg
push
jae
jno
dec
xor
and
lahf
push
pop
push
jp
sbb
push
mov
in
adc
inc
rorb
aam
xor
movsb
cmp
je
push
daa
and
dec
aam
push
mov
add
pop
push
es
bound
out
xchg
dec
cmpsb
sub
in
rolb
hlt
pop
push
stos
mov
inc
or
movsl
cmp
test
pop
icebp
and
mov
out
add
cmp
or
xchg
test
adc
pop
sub
data16
cmp
push
jbe
cmp
pop
mov
mov
sbb
xor
rcl
mov
add
lret
addr16
into
aas
insl
mov
jne
sub
push
sbb
adc
inc
dec
xor
add
cmp
xor
pop
inc
add
mov
lods
or
mov
call
cmp
adcb
je
mov
cmp
movb
mov
or
add
jne
out
js
jge
rcrb
movsb
jae
negl
push
adc
adc
outsl
popf
mov
mov
pop
ljmp
filds
addl
ljmp
inc
enter
jbe
das
int
dec
jb
dec
lock
nop
adc
ljmp
xchg
sub
jmp
and
lock
xchg
and
cmp
shr
sbb
xor
inc
cmp
sub
pop
or
sub
insb
loope
or
sahf
or
inc
dec
adc
call
mov
mov
test
cwtl
mov
xchg
inc
add
out
movsl
mov
sbb
xchg
mov
mov
sbb
test
fidivrl
push
daa
sbb
enter
movl
adc
pusha
stc
test
arpl
and
dec
mov
cmp
inc
sub
pop
out
pop
sub
inc
sbb
je
negl
sbb
or
mulb
push
call
jnp
fdiv
ss
js,pt
cmp
fisttpl
ss
iret
or
or
std
xlat
pusha
mov
addb
jbe
repnz
ja
stc
mov
or
shl
aas
icebp
addb
jle
or
or
cwtl
loopne
jo
push
jmp
rolb
imul
mov
mov
imul
or
adc
cmp
jne
lock
xchg
lods
sbb
cwtl
cmp
jne
add
test
xor
add
pop
mov
xchg
inc
push
lods
sub
sub
add
popa
xchg
les
add
sti
stos
adc
adc
pop
add
mov
orb
jns
xchg
xchg
popf
adc
lock
mov
mov
movsb
pop
outsb
jle
sar
daa
ret
sbb
jo
push
pushl
aas
mov
push
mov
sbb
inc
je
lret
cmp
jne
and
cmp
pop
inc
mov
pop
pusha
out
mov
mov
push
pushl
aas
mov
jbe
and
outsl
or
dec
movsl
loopne
aam
pop
add
shl
push
cld
push
mov
outsl
ret
or
or
push
sbb
arpl
inc
add
mov
movsb
popf
xchg
rolb
pusha
roll
inc
cmp
cvttps2pi
jmp
imul
jno
jne
push
loopne
mov
push
test
loopne
add
sbb
mov
je
sbb
push
mov
mov
adc
shrb
inc
adc
adcb
test
int3
mov
imul
adcl
fcoms
sub
inc
movsb
das
add
pop
insl
mov
pop
mov
or
add
add
cmp
insl
push
mov
lea
jbe
mov
push
xchg
push
pop
mov
sub
jecxz
jecxz
pop
add
inc
jecxz
push
in
js
ret
lock
cmp
mov
movsb
cmc
repnz
jns
add
or
movsb
cmp
jae
add
mov
movd
pop
add
dec
adc
test
sub
cmp
jae
dec
add
add
xchg
lret
fldt
rcrb
jno
imul
daa
sarb
add
icebp
jbe
adc
pop
call
push
ljmp
aas
adc
or
mov
mov
loope
dec
jne
pop
pop
sub
js
mov
sub
idiv
loope
int
add
or
pop
and
push
push
cmpsl
mov
and
push
sbb
push
loope
sbb
fs
and
in
ja
dec
sbb
fstps
imul
movsl
movl
sub
lods
sbb
and
and
fwait
sub
stc
insb
inc
sub
xor
lahf
or
mov
xor
fcoms
dec
sti
nop
xor
arpl
lds
xchg
jle
lea
mov
loopne
xchg
pushf
les
pop
mov
push
lea
into
inc
xchg
ret
xchg
mov
mov
aaa
mov
jge
testb
lea
jbe
mov
lret
pop
push
fldt
gs
mov
xchg
inc
pop
and
mov
mov
mov
lock
stos
jnp
nop
mov
das
inc
xchg
je
adcb
jl
out
lcall
das
jmp
cmp
jne
movl
cmp
data16
adc
xor
es
sbb
movsb
jl
adc
int
inc
adc
xor
sbb
sbb
mov
add
cmpsb
sbb
sbb
xchg
shrb
pop
inc
outsb
aam
add
mov
push
jmp
mov
fcmovb
add
sbb
add
xor
push
mov
faddl
cwtl
xor
lea
sahf
or
movb
ja
jg
mov
mov
rolb
and
dec
icebp
push
xchg
insl
or
push
xor
lea
pushf
cmp
loopne
push
jnp
xchg
pop
fmul
or
hlt
lds
jl
sub
sub
cmp
shl
jbe
mov
sbb
xor
je
cmp
pop
inc
lods
std
dec
mov
scas
mov
fdivrp
inc
cmp
andb
mov
sub
sbb
aas
mov
cmp
pop
adc
inc
adc
mov
fcoml
add
movl
jmp
int3
popa
stc
add
sbb
pop
mov
dec
lock
mov
loope
mov
mov
xchg
orb
in
mov
popa
and
aad
loope
orl
jge
xor
cmp
into
or
pop
add
rcll
clc
add
std
pop
push
push
es
jbe
sbb
sub
jno
add
or
pop
or
xchg
int3
sub
jne
cmp
shrl
push
ljmp
mov
jle
imull
cmp
pop
sbb
xchg
orl
sub
ja,pt
ret
pop
lock
jae
cmp
mov
int3
popl
pop
add
add
add
sub
daa
jl
repz
js
mov
or
out
ds
pop
push
cmp
or
int3
mov
scas
fldcw
jb
sti
addb
cmp
push
adc
add
or
push
sbb
pusha
pop
push
pop
sbb
adc
cmpl
push
push
sub
shlb
pushl
jge
or
pusha
scas
test
stos
lahf
fidivs
push
je
or
push
cmpb
mov
jmp
push
jg
mov
cmp
test
pop
xor
outsb
push
pop
fildll
pop
pop
and
lock
ret
rolb
pop
lods
mov
cs
les
dec
decw
add
stc
mov
or
mov
mov
sbb
jle
jb
dec
lock
add
pop
lret
lea
pop
inc
xchg
in
dec
and
pushf
in
xchg
add
aaa
mov
push
jae
cmpl
or
arpl
add
out
jle
jle
mov
cmpsl
cmp
inc
inc
push
pusha
enterw
mov
pusha
cmp
mov
je
sub
cs
iret
call
test
sbb
fmuls
push
push
mov
cmp
add
xchg
movl
mov
adc
adc
jbe
aaa
add
data16
xor
or
adc
and
xor
dec
and
test
cs
lret
ja
or
xor
fnstsw
test
mov
add
mov
decl
fs
mov
mov
push
pop
stos
sub
pop
xor
rolb
outsl
daa
cli
adc
push
loop
sub
mov
add
jge
add
dec
or
stos
repz
mov
scas
lahf
cltd
fidivrl
jl
test
pop
testb
sbb
test
xor
addl
test
adc
pop
lea
aam
out
stc
adc
mov
mov
lea
mov
inc
test
lock
xchg
call
aad
or
idiv
lds
inc
push
inc
dec
adc
roll
push
push
inc
pop
nop
jmp
cmpl
mov
xor
mov
test
or
cmp
lea
xchg
jg
adc
loop
cmp
out
out
mov
rorl
push
or
sbb
jno
add
es
xor
mov
ljmp
test
loopne
and
push
xor
out
lret
sahf
cmpsl
add
ud1
sub
andl
sub
adc
mov
jecxz
fiadds
bound
push
das
cmp
push
cmc
push
sub
push
sub
push
mov
andb
cmove
daa
movsl
pop
andl
push
pop
lods
fsubl
sub
jmp
push
lock
shlb
stos
leave
push
mov
sub
inc
add
pop
sub
inc
push
stos
lock
outsb
lea
mov
sbb
sub
cmpl
inc
sbb
xchg
push
add
xor
ss
mov
dec
aam
push
das
dec
pop
jp
and
cmp
fcomps
xor
push
xor
pushl
sub
xchg
xchg
or
mov
and
aam
lods
sub
jno
lea
scas
in
sbb
push
outsb
xchg
xlat
rclb
dec
add
push
mov
arpl
imul
lea
mov
and
out
pop
or
imul
aam
das
stos
pop
adc
lods
enter
pusha
mov
jmp
xchg
xchg
push
lea
daa
rorl
or
ds
popl
into
lret
js
sub
push
mov
inc
pop
or
xchg
out
ja
jnp
imul
push
add
pop
add
aam
and
push
sbb
fs
jbe
pop
and
pop
in
rorl
cld
test
inc
or
orb
adc
inc
adc
mov
sub
and
and
imul
add
xorl
mov
inc
test
add
push
je
add
dec
mov
shlb
cmpl
add
repz
sbb
xchg
adc
sbbb
in
push
aas
jl
jmp
adcl
and
mov
xor
lea
sbbl
adc
das
ljmp
insb
xlat
mov
ret
je
dec
je
dec
mov
out
sub
jl
es
repz
dec
arpl
scas
xor
push
sub
cmp
je
mov
mov
rcl
lret
xor
jmp
cmpl
or
inc
pop
repz
sub
ds
add
pop
outsb
ljmp
dec
xchg
fsubr
iret
sub
addr16
xchg
test
sub
lret
push
mov
sbb
orl
adc
lahf
ret
jne
add
addr16
hlt
les
xchg
test
xchg
fidivrl
pushf
and
add
ficoms
outsl
push
aam
inc
pop
push
arpl
cld
jno
aam
lcall
rorl
xor
cmp
push
push
sbb
jecxz
pusha
loope
and
jo
std
ret
arpl
stc
fnstsw
push
out
test
push
xchg
xchg
or
rcrb
leave
and
jl
loop
sbb
push
xchg
or
xchg
shll
xor
in
test
inc
mov
sbb
push
nop
add
cmpsb
xchg
pop
icebp
mov
push
cli
push
sahf
push
jb
jbe
test
or
mov
add
cmc
pop
dec
mov
push
andl
mov
fisubrl
and
dec
mov
out
pop
addl
adc
mov
xchg
adc
jnp
dec
pop
jmp
cmp
xchg
or
lret
or
pop
aas
rcll
or
jbe
pushf
out
xor
or
in
xchg
pushf
pushf
ret
xchg
xor
or
mov
xchg
clc
je
push
or
pusha
jg
push
cmp
sbb
dec
rorb
sub
inc
iret
cwtl
pusha
cmp
jle
jg
push
and
hlt
xchg
pop
out
and
or
add
roll
and
inc
or
lock
and
sti
pop
dec
mov
adcb
std
push
push
or
sub
into
inc
lds
jno
pop
mov
jae
lea
sub
push
dec
xlat
pop
or
push
xchg
cs
std
add
sbb
xchg
testb
ljmp
inc
cmc
and
ret
or
mov
or
rcr
xor
sub
mov
pop
push
mov
sarb
fs
or
aam
les
js
addb
mov
test
mov
clc
cmp
jae
cmp
hlt
jmp
sbb
push
mov
dec
mov
fwait
mov
int
cmp
ficoml
or
fnstenv
cmp
cli
or
mov
dec
push
ficompl
shlb
rcll
jo
cmc
mov
int3
lcall
mov
mov
push
lea
pop
push
xchg
xchg
cld
add
insb
lods
test
add
aam
lret
clc
xor
pop
mov
fildl
and
and
push
subb
sbb
sub
cmpl
push
adc
pop
test
adc
push
jno
jl
inc
pusha
xorb
pop
cmp
jbe
or
jne
push
jp
mov
xorl
hlt
jg
loopne
push
in
pusha
cmp
jne
mov
add
xorl
add
jmp
out
jl
imul
push
mov
std
shrl
sbb
fildll
loope
mov
pop
push
enter
rol
dec
sarb
into
mov
push
dec
add
int3
sbb
sbb
jp
jae
jno
or
out
mov
add
or
ss
sub
shrb
imul
idivl
aas
sub
mov
adcl
adc
jmp
sub
aas
push
add
mov
adc
dec
fs
push
or
push
lea
mov
leave
ret
insb
jns
fildl
and
dec
dec
fadds
in
mov
mov
ret
adc
and
jae
cmp
testb
ljmp
data16
leave
xchg
add
adc
mov
sub
popa
movb
push
sub
mov
pop
mov
cmp
adc
jne
sub
push
scas
sub
das
clc
xor
mov
push
mul
seto
neg
or
and
mov
push
les
dec
mov
xchg
ror
cmp
adc
or
pop
jmp
sub
push
test
in
lcall
pop
scas
popf
icebp
xchg
movsb
xor
cs
mov
mov
inc
xchg
negl
push
loop
rorb
pop
out
jecxz
rolb
ret
fisttps
push
mov
inc
pop
push
or
add
and
jbe
in
ss
add
push
mov
cmc
pop
sub
sbb
ds
ficomps
dec
pop
jmp
mov
sub
shll
and
push
sbb
or
out
mov
ja
aas
fisttps
les
hlt
xchg
sarb
and
dec
xor
sub
or
pop
pop
push
push
or
dec
addl
adcb
mov
mov
sbb
jl
repnz
jg
or
xorl
dec
push
sbb
ja
sahf
inc
cmp
xchg
outsb
and
sub
daa
sub
cs
push
xchg
pop
mov
cmp
and
push
jle
or
icebp
dec
lea
call
bound
ficompl
mov
dec
orb
push
leave
inc
es
stc
mov
or
or
cmp
sti
xchg
dec
mov
popf
call
mov
sbb
inc
ret
sbb
push
sbb
dec
sbb
jno
adc
sbb
jmp
jmp
or
adc
jmp
jb
mov
pop
clc
mov
push
cmp
into
js
pop
pop
and
xor
xor
jp
mov
shrb
inc
cmpl
popf
mull
and
mov
and
pop
jl
cmp
imul
mov
xchg
pop
addr16
dec
ss
inc
negb
imul
int
mov
or
outsb
add
mov
xchg
int
jb
sub
add
shrl
cmp
fwait
ljmp
lods
and
or
adc
sub
mov
xchg
hlt
push
in
pop
adc
xchg
lea
hlt
andl
adc
lahf
xor
imul
and
fcoml
pop
decb
xchg
mov
or
add
pop
fs
mov
or
les
push
jno
cmp
mov
mov
lret
cmp
jmp
dec
shr
sarb
aam
inc
or
xorb
cmp
mov
dec
push
mov
adc
aad
shl
shl
and
adc
clc
push
sbb
sbb
stos
out
leave
rolb
mov
mov
jle
push
out
imul
mov
imul
ret
pusha
fildl
nop
pop
pop
pusha
dec
test
pop
mov
inc
xchg
addl
icebp
out
add
or
pop
cmc
cltd
inc
xlat
inc
leave
lea
mov
pop
outsl
lea
aaa
fdiv
mov
imul
xor
add
lret
mov
shlb
push
fldt
ret
add
or
mov
lret
jne
adc
cmp
mov
lea
cmp
or
or
aaa
ds
add
psubusb
dec
adc
jbe
jae
fstps
mov
push
mov
push
mov
xorl
lea
je
push
cmp
andb
sub
sbb
sbb
in
out
mov
flds
pop
lea
jae
pop
mov
pop
sbb
jnp
leave
jmp
mov
ret
and
clc
jmp
pop
fs
sbb
mov
lds
inc
data16
jmp
jae
addr16
ja
pop
adc
test
pop
lsl
add
or
mov
and
hlt
ret
xor
dec
bound
xchg
orl
mov
adc
pushf
sbb
aam
push
out
xor
mov
xchg
push
clc
and
pop
loope
enter
cmp
add
rol
sbb
sbb
xchg
rcrb
pop
mov
xor
mov
inc
or
sub
push
sbb
les
xchg
bound
pop
shrb
and
aas
ljmp
jle
sub
add
xchg
mov
mov
cmp
loop
jnp
adc
mov
xlat
pop
push
or
adc
add
repz
mov
rorb
push
pop
mov
cmpl
ljmp
test
mov
stos
push
pusha
cmpsl
daa
jle
push
push
stos
xchg
sbb
sbb
mov
out
aas
jo
lock
leave
aam
pop
aas
fstpt
jb
adc
pop
stc
inc
dec
jmp
push
mov
je
rolb
popa
add
shr
lods
inc
dec
outsb
and
orl
or
inc
inc
push
cmc
test
dec
jbe
inc
push
push
sbb
les
push
adc
pushl
nop
dec
mov
les
sbb
repz
sti
or
mov
jle
cmc
loopne
cltd
shlb
orb
push
leave
or
lahf
adc
cmpb
je
cmp
jae
inc
out
and
out
push
sbb
xor
clc
mov
stc
decb
fsubl
push
push
push
jle
adc
adc
movb
mov
inc
dec
in
pushf
add
icebp
sub
nop
dec
movsl
sti
fbstp
sub
xchg
xchg
push
sti
add
outsb
lock
divb
cmpsb
add
pop
add
jnp
negl
cmc
dec
in
mov
push
pop
arpl
aam
inc
xor
jbe
pop
pop
xor
jne
and
mov
mov
data16
int
and
xadd
jae
ret
sahf
lret
push
shll
and
inc
sub
pushf
jns
sti
and
jns
mov
push
mov
sbb
and
or
dec
pop
xchg
fdivp
into
cmp
push
dec
les
roll
testl
jo
or
add
ret
clc
shlb
or
pop
imull
cmp
sub
bnd
inc
or
add
je
inc
inc
es
xor
inc
mov
pop
sub
into
and
mov
jmp
sbb
and
js
dec
fnstcw
fmuls
cld
push
and
inc
cmp
arpl
and
push
imul
pop
xchg
cmp
xchg
mov
jno
lea
stos
hlt
or
add
jb
cmp
xor
mov
jb
ret
repnz
mov
in
fiadds
addr16
loope
push
imul
addr16
inc
pop
in
sbb
out
call
out
adc
push
stos
js
push
dec
cmp
psubusw
cmc
dec
call
xor
pop
cmp
cmpsl
and
pushf
or
nop
dec
ja
mov
mov
ret
ja
xchg
out
cwtl
add
lret
cli
mov
or
je
mov
push
jmp
mov
stc
jne
int3
movsl
rolb
clc
jb
int3
cmp
sbb
ret
adcb
sub
or
lret
pop
xorl
jne
ficompl
fs
and
ja
or
push
outsb
clc
iret
push
movsl
pop
fmuls
mov
add
hlt
dec
es
es
mov
mov
adc
lods
push
dec
jns
ja
add
jne
mov
mov
inc
xor
cmp
insb
xor
or
xor
fcomps
add
test
inc
push
adc
cmp
jns
cmp
jbe
sti
push
mov
pop
and
std
or
mov
mov
push
lret
dec
rorb
mov
sub
cmp
test
mov
jmp
add
push
shll
data16
cmpsl
dec
add
pop
js
push
stos
rolb
jo
push
aad
into
adc
add
pusha
dec
mov
sbb
adc
pop
nop
or
push
shrb
cltd
dec
push
dec
mov
aad
dec
push
dec
mov
sbb
inc
mov
mov
je
addr16
pop
ja
push
ret
in
push
lcall
sub
jns
add
or
lods
insb
add
lods
int
imul
movl
adc
bound
sub
add
aad
push
push
rcr
sbbl
xchg
xor
mov
or
outsl
movsb
cmp
cmp
aad
add
xor
xchg
jmp
js
dec
mov
inc
xchg
jmp
cmp
arpl
ja
add
fsubrs
push
cmpsl
test
jo
out
fs
add
call
sbb
flds
insb
push
jo
in
test
xlat
test
shrb
push
xor
imul
les
fstpt
inc
clc
mov
aad
pop
inc
mov
jb
pop
push
cmp
fcomps
shl
sarl
cmpsb
test
inc
jmp
cld
mov
repnz
inc
jae
adc
inc
cmp
and
sbb
cltd
in
push
dec
xchg
sahf
out
dec
or
imull
cmpsl
push
in
and
pop
jmp
sub
cli
cltd
dec
push
push
movsb
test
push
mov
je
and
xlat
data16
dec
mov
or
fwait
hlt
pop
and
dec
mov
nop
aad
mov
addl
out
push
dec
push
loop
test
lods
je
push
xchg
inc
popf
mull
clc
loope
repz
lret
subb
and
add
stos
lock
cmc
pop
add
jae
adc
adc
clc
xchg
dec
sahf
adc
nop
inc
adc
adc
nop
inc
adc
shlb
add
inc
inc
add
daa
inc
adc
mov
mov
add
notb
adc
pop
or
sbb
jge
loop
xchg
mov
mov
iret
mov
bound
sub
shll
add
int3
and
or
lea
inc
cmp
inc
adc
rcll
pusha
mov
adc
leave
gs
mov
xchg
sbb
mov
and
pop
inc
sbb
xchg
sbb
cmp
and
insl
xchg
cmpsb
loope
xchg
mov
mov
ret
push
mov
icebp
rclb
js
clc
add
cmp
ja
std
or
cmp
adc
mov
cmp
popf
cmpl
mov
pop
and
xor
fisttpl
shrl
pop
negl
xchg
movsb
mov
add
add
or
cli
pop
fsubrl
mov
mov
mov
sti
lock
mov
sub
mov
xacquire
xchg
and
data16
out
lret
scas
loopne
sahf
nop
lret
cs
or
sub
dec
je
mov
je
sub
test
fsts
test
std
arpl
fadd
dec
dec
movsb
sub
adc
loop
lock
mov
cmpsl
int
das
xchg
dec
leave
jmp
cmp
jne
push
incl
clc
jmp
push
add
shlb
or
xor
jmp
mov
fwait
inc
loopne
jg
inc
mov
xchg
sbb
mov
in
xchg
mov
sbbb
add
or
ret
dec
roll
ret
cs
jl
push
push
daa
pop
push
js
fildl
bound
and
adc
sub
mov
shl
outsl
pop
inc
clc
fdivrl
cmp
je
cmp
push
jmp
inc
sbb
adc
pop
leave
adc
cli
mov
mov
mov
lock
jmp
sti
movsl
inc
jae
je
xchg
push
and
lock
cmp
jmp
xchg
sbb
mov
ret
mov
xorb
jns
mov
mov
cmp
repz
outsb
or
jmp
mov
mov
add
pushw
and
shl
call
inc
sbb
inc
sbb
xchg
addl
jo
mov
adc
sub
mov
fdivrs
mov
dec
movb
xor
repnz
sahf
sbb
outsl
add
jmp
jg
mov
mov
mov
pop
push
lea
push
orl
shll
lea
clc
mov
dec
cmp
in
cmpsb
add
dec
mov
inc
test
cltd
lahf
bnd
sbbb
and
ja
add
sarl
movl
lea
adc
hlt
sbb
sbb
mov
movsb
push
je
xchg
dec
int3
sbb
pop
std
pop
push
push
push
xor
movl
popf
pop
lcall
cld
adc
int
mov
mov
push
cmpsl
jno
xchg
dec
adc
aad
loopne
xor
cmp
aam
fcmovb
push
add
sbb
jle
add
sub
test
shlb
or
fucomp
test
cmpl
add
mull
arpl
jne
push
pop
dec
pop
lcall
or
or
and
add
fadds
lcall
sbb
add
fsubr
xor
in
push
es
loopne
ret
sbb
in
lods
pushf
push
or
in
loope
cwtl
push
inc
adc
shll
ja
xor
imull
jno
add
aas
testl
mov
dec
pop
aam
cmp
push
push
pop
mov
push
mov
and
out
cmp
jl
sbb
jb
pop
rolb
mov
ljmp
jl
sbb
in
orb
add
int3
adc
add
mov
mov
jbe
rclb
or
xchg
pop
mov
icebp
aam
push
aam
das
in
inc
cs
popf
int3
push
jne
adc
cmpsl
ror
push
and
or
inc
aam
xchg
ljmp
add
jle
jne
adc
sbb
es
add
mov
shl
mov
insl
fstl
sub
pop
movsb
jmp
je
inc
adc
mov
xchg
int3
cmp
jne
push
sub
xor
push
jo
inc
pop
loopne
jo
mov
shlb
aaa
mov
rolb
mov
jo
inc
fimull
mov
pop
mov
call
push
or
std
rorb
sub
cmpb
sub
sub
fisttpl
mov
push
mov
lock
dec
je
sbb
loop
push
sahf
sarl
jge
cld
dec
loope
je
adc
sub
lcall
es
and
daa
dec
dec
in
cmp
imul
add
inc
inc
dec
add
lods
cmpsb
cmp
test
lea
mov
or
rcr
movsl
mov
jecxz
adc
push
in
sub
sarb
and
or
rcrb
push
inc
rclb
neg
sbb
mov
and
xchg
mov
and
pop
lock
test
imul
jb
fwait
cmp
push
push
mov
add
mov
xor
push
mov
jbe
loope
into
neg
sbb
and
push
push
lds
sahf
sub
dec
add
mov
into
testl
mov
push
cli
inc
call
jl
adc
and
lea
into
dec
xchg
fildll
push
adc
sti
dec
lock
pushl
and
add
sbb
shrl
clc
adc
pop
insl
jo
and
sarb
push
mov
cmp
ret
pop
shl
dec
dec
imul
stos
xchg
or
jle
cmpl
jne
pushl
shlb
push
mov
test
pop
xchg
cltd
insl
rclb
fadds
adc
decb
push
push
jno
mov
push
fmuls
and
or
add
lock
std
cmp
cli
adc
fldcw
mov
or
lcall
jo
xchg
testl
sbb
add
mov
adc
push
push
pushf
push
jg
xor
adc
es
xor
icebp
ja
loope
movb
jmp
cmp
jne
int3
clc
adc
jae
fldz
xor
jl,pt
dec
and
movb
pop
mov
sub
push
adc
outsb
aaa
dec
adc
in
sub
or
fdivrs
in
add
adc
or
lahf
pop
testl
dec
or
mov
flds
or
adc
addb
pop
aam
les
push
nop
pop
cmp
iret
push
adc
leave
test
xchg
push
outsb
iret
push
xor
mov
xlat
pop
sbb
or
sub
cmc
test
adcb
xchg
test
mov
fs
insb
xor
rolb
adc
out
int3
mov
sbb
push
push
or
adc
ds
sbb
dec
inc
cmp
add
xchg
cmp
push
repnz
cmpsl
gs
pop
push
push
lret
jl
xchg
addb
sahf
daa
push
jbe
xor
sbb
or
xor
jge
mov
mov
arpl
mov
bound
outsb
add
sub
lcall
inc
pusha
fmull
scas
rclb
push
out
push
popf
dec
insl
push
push
push
aaa
call
mov
fcoml
and
stos
push
jp
aaa
xor
cli
mov
mov
xchg
and
and
inc
add
add
popa
outsb
stc
js
xchg
leave
jae
mov
popa
in
ds
shl
lock
mov
mov
jge
pushf
outsb
int
dec
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
inc
or
shl
sbb
push
xchg
xlat
push
adc
push
cmp
add
aas
xchg
shrb
jo
sub
mov
pop
cmp
push
enter
dec
mov
push
jne
in
scas
das
cs
sub
push
push
mov
adc
mov
cmp
push
insb
repz
nop
push
cmp
push
add
dec
xchg
addl
xor
pusha
or
push
mov
push
mov
insb
push
in
or
cmp
push
lret
lods
popa
push
sbb
ror
xchg
sub
push
jecxz
cmp
xor
adc
or
daa
out
push
xor
jb
insl
adc
xor
mov
adc
shr
cmp
mov
aas
mov
cltd
mov
cmp
notb
fcmovnb
aas
mov
dec
adc
sbb
pop
enter
mov
mov
cmp
jge
call
jecxz
mov
idiv
push
mov
push
push
test
push
ret
xor
notl
mov
mov
stos
xor
neg
and
test
jg
mov
sub
cltd
ljmp
adc
outsl
aaa
andl
lods
imul
insl
ret
mov
add
inc
rorb
push
sub
imulb
fstpl
push
pop
incl
lahf
lods
js
sub
push
pop
sub
sbb
jbe
std
lea
cltd
idivl
add
pop
and
inc
sbb
das
sub
rorb
out
fnstsw
dec
fs
or
xchg
arpl
loope
jl
mov
cmp
test
mov
cld
int
in
cmp
and
aas
dec
ret
adc
jl
negl
sub
cmp
pop
sbb
dec
nop
or
out
insb
mov
add
xchg
rcr
inc
hlt
mov
test
jns
mov
clc
ljmp
clc
push
sub
nop
loopne
mov
fdivrp
mov
das
fnstsw
sub
mov
mov
mov
adc
mov
pop
add
les
mov
jmp
into
push
xorl
nop
or
clc
fidivl
jmp
push
xchg
cmp
rolb
sub
cmc
push
pop
mov
mov
out
inc
add
sbb
mov
ret
test
add
mov
test
or
mov
cld
cmp
xchg
iret
adc
dec
adc
pusha
fsubs
cmpsl
je
cmp
push
jbe
gs
bound
fcomps
inc
pop
and
jne
lahf
jmp
out
ljmp
push
mov
pop
mov
inc
inc
ret
xlat
pop
stos
das
cmpsl
cmp
js
roll
mov
or
imul
popf
cltd
add
insb
sbb
aam
add
xor
xor
fs
loope
aaa
xlat
jae
iret
xchg
pop
ret
addr16
fimuls
jne
xor
mov
push
jne
sti
inc
pop
cmpsl
sub
pushf
lods
sbb
outsl
cmp
adc
push
leave
jecxz
cs
push
inc
dec
pop
sbb
aad
mov
std
jo
mov
mov
push
sbb
push
and
pop
and
subl
lea
push
push
ficoml
and
inc
adc
mov
imul
andl
push
setp
insb
jo
or
jae
add
outsl
pop
jg
lcall
sbb
sbbb
add
xchg
leave
insl
xor
test
xor
sbb
lret
mov
lret
dec
shlb
mov
mov
pop
aam
pop
and
or
popf
dec
sbb
jecxz
mov
lds
nop
imul
dec
and
inc
add
nop
cli
and
clc
dec
adc
das
out
fisubl
cmp
or
and
nop
or
and
add
xor
dec
cmp
mov
lds
push
je
imul
add
push
mov
scas
and
bound
test
and
sub
cmp
xor
je
jl
clc
arpl
lea
push
lods
mov
es
cmpb
je
push
fstps
arpl
inc
andl
add
push
les
je
dec
xor
icebp
dec
mov
xchg
jle
hlt
xor
fwait
jno
add
cmp
call
icebp
add
shrl
inc
inc
scas
jge
xchg
xlat
das
push
pop
mov
mov
push
movsl
or
aas
gs
testb
adc
or
test
sbb
sub
adc
jmp
sbb
or
xchg
or
or
out
jae
std
and
pusha
sbb
pop
mov
adc
push
adc
fcmovnbe
jae
push
repnz
mov
push
xor
sub
or
push
push
push
adc
fcmovnbe
add
dec
cmp
ret
scas
mov
cld
jno
or
inc
inc
xor
sub
dec
sub
xchg
sti
xchg
pushf
mov
rorl
call
out
push
pop
rclb
les
loope
dec
sub
filds
andb
shll
jb
jno
mov
es
push
sahf
dec
pop
xor
clc
pop
add
xchg
dec
rolb
fadds
jo
mov
rorl
sub
and
xor
sbb
push
ficoms
adc
loope
fldl
sbb
or
push
sub
out
cmp
rorb
xor
dec
pop
push
or
sbb
xchg
lcall
cltd
push
sub
movsl
cli
add
jns
pop
dec
sbb
mov
mov
push
sbb
push
xchg
sub
and
clc
sbb
pusha
xor
mov
pop
sub
push
mov
loop
push
or
inc
and
pop
fistpl
sti
es
push
cmp
in
popa
fs
mov
les
cmc
xorb
push
fimull
sub
xchg
cmp
or
push
adc
cltd
xchg
pop
push
dec
adc
fwait
inc
mov
mov
jp
adc
shrb
shll
jmp
imul
es
mov
popf
inc
nop
adc
loopne
dec
sub
mov
shll
je
push
adc
xchg
cmp
adc
push
jl
pushl
adc
jmp
or
pop
jne
arpl
dec
cmp
mov
sbb
pop
lahf
icebp
cmovp
test
je
inc
dec
enter
mov
js
pop
pop
jne
dec
mov
jmp
dec
mov
sub
ja
mov
cmp
push
push
dec
dec
add
push
pusha
inc
xor
movsl
sub
sub
mov
push
push
cmpsb
mov
sub
leave
js
imul
cmp
sbbb
mov
push
pusha
jle
in
sbb
sarb
ss
mov
mov
std
iret
push
inc
ret
jle
mov
sarl
cmpl
out
jl
mov
mov
sbb
fdivrl
push
inc
mov
mov
ja
ljmp
in
mov
in
pop
jo
sub
inc
sete
adc
loope
and
je
jecxz
test
les
sbb
mov
cmp
push
int3
pushl
dec
dec
ficoml
out
les
add
scas
sbb
and
arpl
pop
jo
or
mov
ret
adc
jne
into
repz
xor
in
add
aam
xchg
clc
es
xchg
push
out
lock
inc
cmp
pop
adc
loope
and
add
mov
pop
dec
sub
jne
mov
shr
push
arpl
popa
mov
sbbb
hlt
mov
das
outsb
test
arpl
dec
cmp
and
cmp
jmp
pop
add
fcmovu
push
iret
mov
lods
fnsave
aad
or
lods
repz
fmul
sub
cmp
dec
add
or
les
out
insb
sti
add
test
add
repnz
out
sub
outsl
mov
jne
in
mov
in
adc
push
adc
inc
mov
shrb
int3
push
jno
ret
jo
in
adc
mov
or
mov
loope
sbb
repz
in
call
sbbl
and
ror
add
cmpl
xor
or
and
in
mov
xor
add
jle
cmp
add
sbb
idivl
enter
adc
bound
mov
inc
insb
adc
orl
je
or
or
add
ja
fisubl
jl
dec
xchg
push
bound
cmpsl
mov
inc
jg
pop
sbb
mov
gs
or
loopne
arpl
insl
xchg
rorb
push
add
inc
add
hlt
xchg
int3
mov
xor
add
or
add
sub
jbe
rclb
repnz
data16
mov
out
clc
cmp
pop
adc
movb
mov
aas
add
mov
or
lret
xor
adc
add
or
mov
sbb
or
mov
lods
arpl
scas
pop
add
loop
xor
dec
add
mov
clts
into
push
mov
or
push
inc
lcall
adc
xchg
add
add
div
lods
mov
cs
data16
movl
ds
fwait
inc
in
arpl
push
jmp
xor
mov
and
aaa
scas
mov
sub
es
mov
inc
cmp
xchg
mov
inc
shll
loopne
cwtl
add
loope
jo
outsl
pop
out
pop
pushf
jb
sub
stos
pop
cmpsl
mov
mov
xchg
mov
in
cmp
jp
pop
gs
pop
lock
add
sbb
xor
mov
push
adc
test
push
add
out
xor
out
push
inc
dec
or
pop
cmc
mov
test
popl
into
aad
ds
inc
add
sbb
test
adc
outsl
add
sbb
push
call
pop
sub
mov
xchg
pop
call
dec
bound
jge
adc
sbb
xorb
adc
enter
adc
repnz
push
stos
add
int
push
testl
es
push
push
aam
sbb
inc
mov
fwait
adcb
jge
add
mov
pop
lcall
fcoml
loope
pop
mov
pusha
imul
dec
add
and
iret
cmp
jno
cmp
and
or
shrb
mov
inc
sub
icebp
mov
aas
nop
mov
cmpsb
inc
adc
in
cmpsl
cmpsb
push
scas
subl
movsb
adc
lds
mov
adc
mov
sbb
add
sub
add
add
pusha
aaa
add
in
push
loopne
sti
jmp
or
addb
movsl
lret
adc
sub
std
js
cli
push
mov
fwait
loopne
les
add
std
les
js
mov
add
popf
jl
inc
lock
testb
inc
ficoml
add
xchg
lea
sbb
cmpb
xchg
aaa
repz
fs
push
ficompl
push
mov
xor
rcll
push
mov
hlt
data16
es
add
mov
sbb
push
test
leave
rorb
aad
mov
movsb
mov
xchg
out
adcb
sbb
in
pop
add
or
xlat
lods
rdmsr
mov
sarb
cmp
xorl
leave
mov
fiadds
test
mov
outsl
pop
cmpsw
dec
mov
in
dec
mov
and
repz
leave
leave
repnz
fisttpl
fisttpll
or
lods
mov
add
notl
mov
lea
ret
dec
daa
insl
cmp
xchg
fs
sub
mov
mov
mov
jno
testb
mov
popf
imul
xchg
adc
clc
sti
pusha
nop
xchg
and
shrl
push
pop
sti
and
pushl
test
add
push
mov
jae
pop
ret
jns
pop
aad
nop
jb,pt
movsl
jne
mov
andb
in
subl
je
mov
mov
cwtl
nop
out
and
sbb
out
pop
repnz
cmpsl
sbb
xor
or
push
jmp
in
or
sahf
push
jb
sarb
dec
inc
push
mov
nop
and
lahf
aam
mov
mov
add
mov
pop
into
adc
lret
or
loopne
test
loop
cmpsl
leave
lods
pop
mov
mov
outsb
sub
jle
xor
add
mov
mov
jge
popa
jge
jp
popf
movzwl
icebp
and
cmp
pop
and
adc
outsb
cmpsl
fsubrl
scas
add
mov
push
icebp
sub
adc
mov
test
inc
push
jge
ret
dec
jecxz
cli
xor
jbe
push
mov
or
and
push
xchg
add
jbe
push
mov
lods
pop
outsl
dec
mov
mov
scas
mov
outsl
ds
mov
push
ljmp
stos
fs
lock
mov
divl
ret
subb
ret
cmp
mov
in
pop
fdivrs
fucomip
add
test
dec
mov
adcb
gs
push
inc
mov
mov
mov
cmp
movsl
enter
notb
mov
fistpl
inc
lock
pushfw
mov
push
pushf
loopne
in
xchg
scas
stos
out
mov
push
push
mov
sbb
ret
push
out
mov
out
pushl
jl
cmp
pop
pop
mov
mov
movsl
lcall
movsb
xor
lcall
pop
mov
sub
cli
xor
loopne
sub
xchg
adc
lock
shll
ret
mov
push
mov
test
aam
sarb
test
sub
jnp
rcrl
pop
leave
inc
dec
pop
clc
add
mov
inc
jmp
incb
inc
out
test
ss
in
xor
xchg
mov
loope
add
push
dec
cmp
jle
sub
jo
in
add
dec
shrb
dec
mov
icebp
sbb
aam
mov
add
sub
lret
xchg
outsl
sarb
or
loopne
pop
mov
add
scas
xchg
loope
fmuls
andl
popa
mov
inc
loope
ret
adc
or
push
loope
push
mov
loope
insb
push
arpl
das
bound
femms
gs
cmp
pop
fiadds
faddl
mov
pop
pop
mov
mov
dec
jno
jns
les
test
les
sldt
xchg
pushf
xchg
dec
sub
insl
jns
test
mov
mov
out
enter
and
in
pop
imul
push
xchg
andl
enter
jae
xchg
push
mov
push
ljmp
cwtl
push
jne
stos
push
aam
sbb
cmp
lret
pop
adc
lret
lds
ljmp
lods
pusha
mov
push
shl
les
in
js
and
stos
test
enter
das
push
js
xor
add
outsl
inc
ror
pushf
mov
push
daa
fadds
scas
loopne
movb
xchg
xchg
jbe
inc
loopne
rclb
jge
loopne
loope
pop
dec
add
push
and
data16
loopne
adc
push
cmpsb
clc
dec
or
and
xchg
fldenv
mov
inc
cmp
dec
imul
push
push
jb
mov
pop
rcrb
inc
pop
push
dec
inc
pop
sbb
imulb
pop
aam
jbe
push
scas
inc
add
popa
push
cltd
test
sbb
stos
xchg
mov
stos
mov
sbb
stc
sbb
sbb
or
rcrb
clc
bound
jno
cmpl
addl
push
sbb
into
xorb
xor
sub
mov
push
and
pushf
repz
mov
adc
rorb
jae
pop
add
pop
test
push
dec
cmp
push
cmp
and
sbb
jge
and
pusha
inc
push
mov
push
mov
inc
sub
mov
mov
es
ja
cs
sub
mov
sub
jp
negb
fsubrl
mov
inc
pop
imul
cmc
jge
lds
push
mov
cmp
aam
cli
sub
inc
dec
js
in
insb
sub
push
sub
adc
daa
mov
daa
das
ret
rcr
push
frstor
test
xor
and
jge
add
imul
jecxz
imul
fucom
imul
push
rorb
xor
or
jns
mov
jge
loop
sub
in
in
sarb
xor
sub
sub
ja
pop
je
lcall
mov
and
push
jecxz
dec
call
inc
jmp
popf
inc
je
icebp
xor
jp
mov
pop
cltd
mov
mov
ret
loope
loopne
rorb
je
sub
cmp
fcmovnb
and
cmpsl
push
cmp
push
pop
js
jno
cmp
xchg
xor
push
mov
mov
movups
lods
inc
fsub
sbb
push
push
and
shlb
push
in
aam
pop
and
fcomps
wbinvd
test
outsl
ljmp
push
test
and
lock
addb
xchg
cmpsl
or
lock
ss
or
mov
xchg
pop
pop
or
leave
mov
or
pop
test
ss
movsb
xchg
sub
fsubrs
out
pop
fmull
add
sbb
inc
call
cmp
push
roll
mov
andb
jnp
or
arpl
add
mov
cli
jns
mov
in
xchg
cmpl
push
mov
inc
push
push
sbb
cmp
lret
ror
test
sub
fildll
ror
test
mov
nop
mov
inc
push
test
int3
add
push
loop
pop
push
icebp
or
xchg
jo
mov
adc
andl
mull
rorb
xchg
xor
or
pop
dec
or
pop
cmp
fwait
test
and
sbb
pop
cmp
add
push
sub
mov
cmpsl
out
mov
add
xchg
add
and
das
pop
sbb
lock
dec
cltd
roll
repz
mov
push
arpl
or
subl
mov
or
fadd
push
enter
fldenv
push
inc
xlat
mov
sub
leave
or
or
out
inc
test
hlt
inc
dec
adc
jo
clc
loope
je
add
lea
push
sahf
pushl
daa
mov
es
ficomps
mov
pop
stos
js
js
pop
clc
mov
pop
add
add
stc
mov
push
jge
cmp
adcl
mov
fs
imulb
mov
xchg
in
push
push
test
test
rcrb
pusha
aad
aaa
outsl
or
push
ja
repz
dec
push
pop
or
or
push
cmpb
or
jns
inc
cmp
push
jae
rolb
in
mov
xchg
daa
add
sbb
push
clc
or
xchg
pop
sub
inc
pop
adc
out
lcall
inc
jmp
into
dec
ret
lcall
in
dec
cmp
test
adc
sub
shlb
adc
sbb
adc
in
fmuls
or
int3
insb
cmpb
test
jmp
mov
cmpsl
mov
push
adc
shl
jne
xchg
cmp
data16
xchg
sti
lea
imul
inc
xchg
push
bound
cmp
add
int3
jp
jmp
fcmovnu
hlt
mov
lret
cmp
jl
je
mov
hlt
int3
xor
sarl
pop
sub
cmp
jle
cmp
lret
icebp
jne
sub
sbb
je
xor
push
add
sahf
sbb
add
push
xchg
cmp
cwtl
in
jge
out
repnz
out
ds
js
sub
push
or
or
and
sub
sub
dec
jmp
paddsb
push
mov
push
dec
adc
lahf
in
cmc
xchg
sub
adc
sbb
mov
xor
divb
pop
cmpsl
ja
cmp
jmp
mov
cmp
in
xchg
cmp
mov
push
pop
inc
rclb
mov
mov
mov
push
paddusb
cmp
inc
or
sub
or
jne
add
or
ret
movups
ljmp
lret
add
mov
adc
int
roll
adc
ss
add
or
cld
stos
fstps
push
or
inc
or
add
mov
cmpl
test
or
and
lds
mov
inc
cmpl
jb
dec
add
add
aaa
add
dec
add
prefetcht2
and
cmp
js
pop
popa
adc
cmpsb
xchg
sub
xor
clc
pop
rol
dec
lds
or
mov
cmp
xor
pusha
sub
rcrl
mov
xchg
repz
xchg
cmpsl
fsubrl
pushf
mov
add
push
sub
push
xor
or
xor
mov
cmp
mov
aad
popa
sbb
xchg
inc
add
pop
adc
push
push
push
mov
xor
push
push
mov
add
dec
push
into
addb
data16
dec
shl
fisttpl
mov
es
or
add
shlb
jl
pop
jl
jmp
mov
leave
add
nop
sbb
or
in
popf
add
mov
out
push
adc
sahf
or
hlt
push
sub
ret
or
add
cmpb
add
daa
xor
sbb
push
addb
add
adcb
mov
lods
hlt
xor
faddp
jmp
dec
js
push
pop
pop
push
xchg
sbb
ja
add
cli
jmp
inc
or
cmp
push
inc
cmp
rcll
mov
bound
inc
sub
pop
mov
rclb
dec
outsl
sub
scas
xchg
push
add
mov
xlat
lret
mov
adcl
inc
sub
ljmp
sbb
sbb
scas
ret
lock
pop
scas
sbb
lret
jg
jne
adc
cmpb
in
enter
ds
or
pop
inc
add
pop
sub
add
add
negl
sbb
ret
add
mov
mov
inc
mov
add
dec
add
and
shlb
sub
xchg
adc
out
repnz
adc
pusha
outsl
xor
dec
mov
add
mov
jmp
insb
mov
inc
jne
or
fmuls
inc
out
xchg
cmp
cmpsl
in
jecxz
add
or
push
add
test
push
or
push
inc
js
rclb
pop
incl
test
push
bnd
pusha
push
icebp
pop
aaa
icebp
mov
sbb
xchg
loopne
rorb
xchg
adc
dec
pop
cmpsl
dec
jne
ret
and
xor
outsb
push
in
sarb
push
jl
push
sub
cmp
loopne
dec
adcl
lret
push
inc
sbb
into
clc
push
dec
fstpt
push
push
ja
or
sub
jp
out
or
aaa
dec
clc
sahf
ret
push
mov
imul
and
and
inc
push
inc
mov
xchg
bound
loopne
iret
xchg
xchg
loopne
xchg
cmpsl
pop
addb
jbe
dec
shr
mov
neg
push
adc
push
mov
add
mov
js
adc
jne
stos
adc
mov
push
je
inc
jmp
sbb
test
mov
jae
out
lea
inc
in
lods
push
call
push
push
movb
pop
rorb
test
ret
cmc
pop
push
inc
out
push
or
mov
sbb
jl
test
int
jmp
leave
loopne
jb
je
xlat
movl
pusha
js
mov
sub
shl
jnp
jno
xchg
mov
dec
jne
gs
loope
ret
in
int3
add
mov
ret
or
call
jmp
push
push
push
dec
jns
popa
cmc
aad
je
or
sbb
add
jmp
inc
add
mov
pusha
inc
add
push
or
jle
ret
call
push
idivb
mov
pushf
add
sub
jbe
xor
pusha
pop
cmp
adc
mov
lahf
jae
lcall
stos
sbb
je
inc
inc
and
mov
cmpsl
dec
aam
dec
js
jl
subl
cmp
aad
add
push
jbe
and
rcrb
gs
cmc
movl
inc
or
pop
push
rolb
dec
orl
pop
sub
in
sti
in
je
jo
sub
pop
popf
in
dec
dec
outsb
pop
fs
or
sub
in
and
push
test
mov
cltd
inc
push
pop
leave
ret
inc
or
daa
inc
daa
add
repz
sub
pop
ljmp
shrb
test
shll
mov
push
sti
inc
inc
js
inc
sub
outsb
test
sub
std
mov
je
orl
push
test
adc
pop
or
mov
mov
iret
lea
sbb
jmp
cs
mov
pop
loopne
scas
jg
cltd
ret
pop
mov
pop
pop
sub
out
jnp
inc
ss
pop
jo
push
lret
fs
popf
dec
daa
mov
add
lods
insl
cmp
popl
inc
cmp
flds
sahf
nop
xor
popf
pop
and
mov
jbe
dec
xchg
adc
cmp
dec
jmp
lea
mov
cmp
and
and
push
sbb
adc
push
js
shl
jp
sub
sbb
nop
inc
add
and
sub
lds
sahf
push
adc
rcrb
adc
adc
dec
mov
cld
mov
inc
push
cmp
enter
pop
cs
xorl
pop
pop
lock
repz
imul
ret
or
cmp
iret
mov
and
sub
insl
pop
ja
cmp
xchg
arpl
out
int
add
repz
xor
and
adc
cmp
repnz
push
lea
movsb
sbb
fsubr
push
jnp
mov
sub
cmp
push
mov
sbb
scas
in
sbb
inc
xchg
icebp
mov
pop
enter
clc
adc
in
push
push
lea
or
fldcw
shrl
sub
cmp
jp
sbb
andb
sbb
jae
mov
jecxz
in
or
addr16
dec
pop
mov
mov
subl
imul
sbb
jge
dec
shll
gs
dec
push
xchg
out
or
or
enter
arpl
ror
imul
sub
in
mov
iret
cltd
sbb
insl
pop
rolb
lret
out
mov
mov
into
mov
pop
mov
dec
and
inc
or
test
ficoml
les
pop
mov
add
mull
leave
push
add
lock
mov
mov
push
xchg
imul
push
mov
mov
pop
pop
push
outsl
mov
js
out
xor
adc
in
pushf
sbb
pusha
sub
std
pushf
sbb
sbb
in
addr16
sbbl
popa
xor
mov
add
pop
les
push
xor
or
in
sub
pop
or
mov
mov
xchg
pop
aad
enter
mov
xor
adc
sub
in
xor
daa
std
dec
inc
or
test
push
sbb
cmc
and
add
popa
add
ret
dec
adc
into
and
aad
jecxz
jl
mov
cld
adc
mov
adc
movsl
arpl
sub
push
pushl
mov
fwait
xor
repz
cmpsl
sub
cmp
mov
push
mov
adcb
insb
and
dec
adc
adc
fucom
pop
daa
lcall
add
aam
mov
cmp
sub
or
add
mov
fwait
nop
addr16
or
dec
push
adc
push
loopne
movl
pop
rorb
lods
imul
stos
dec
test
push
jmp
loopne
iret
mov
fstpl
adc
dec
lea
js
call
fucomp
mov
cmp
mov
sbb
lea
adc
push
mov
sahf
repz
arpl
pushl
insb
testl
lcall
sub
dec
xchg
hlt
jns
stos
or
loope
popa
inc
inc
push
call
scas
xchg
lea
push
mov
dec
sbb
or
insb
pusha
rcrl
jmp
loopne
movsl
push
pusha
jo
inc
insb
pop
and
jecxz
xchg
cmpb
xchg
push
add
adc
xchg
add
shlb
add
inc
pop
test
and
mov
push
aas
idivb
inc
sub
shl
or
adc
mov
pop
add
ret
in
add
mov
add
out
mov
popa
leave
je
or
cs
sub
add
xor
movsl
movsl
sub
addr16
push
sbb
mov
jb
out
daa
pop
fmuls
mov
out
loop
cmp
add
int3
and
aam
arpl
mov
mov
push
cmp
ss
and
icebp
jbe
lea
rorb
mov
lcall
jbe
jmp
mov
daa
lds
push
adc
mov
sub
cmpsl
xchg
popf
mov
out
inc
lock
xor
xchg
in
scas
jne
xchg
enter
mov
mov
pop
jb
xor
dec
mov
and
pusha
ss
enter
test
push
ljmp
into
or
inc
push
aam
insl
out
sbb
jo
gs
sub
adc
fidivl
push
mov
xor
je
sti
adc
push
cmpb
mov
push
adc
rol
xor
dec
stos
dec
fisttpll
shrb
adc
add
sbb
loope
add
cmp
movsl
jns
xor
shlb
enter
mov
sbb
lea
dec
imul
stc
adc
add
mov
fstpt
jo
dec
jp
into
mov
xor
cltd
sub
mov
xlat
push
adc
jb
ret
xchg
orl
addr16
loop
adc
pop
jnp
test
push
pop
xchg
enter
js
mov
dec
arpl
dec
xchg
or
xor
inc
jecxz
inc
jle
icebp
jne
xor
add
pop
jmp
dec
cmp
cmp
in
cmpb
mov
pop
lret
aam
xor
nop
aaa
in
dec
or
out
jnp
orl
push
push
and
bound
je
sub
or
sbb
and
pop
mov
mov
cmp
jne
call
jae
sarb
loopne
dec
adc
or
pop
xor
int3
jg
cmp
js
cmc
sbbl
push
adc
cltd
pop
mov
add
je
in
mov
andl
loopne
jle
push
push
sbb
jecxz
cmc
add
push
or
cmp
cmp
aas
aad
xchg
gs
cmp
pushf
mov
inc
pop
add
fdivs
ret
push
inc
or
adc
fsubr
aam
out
sar
mov
movsb
and
pop
jp
stc
xor
mov
jmp
mov
adcl
mov
ljmp
out
add
test
hlt
dec
fcoml
cmpsb
push
roll
mov
dec
rcr
fbstp
push
push
push
mov
data16
lcall
add
pusha
dec
cmpsl
addb
dec
adc
push
cmp
roll
xchg
and
imul
cmpsl
adc
rorb
scas
jge
sub
fcompl
xchg
push
pop
adc
pop
pop
ja
pop
stos
cld
pop
pop
inc
xor
enter
mov
adc
pop
cld
das
rorl
incl
jmp
xor
dec
or
sbb
add
or
mov
rolb
nop
cld
ljmp
notb
test
mov
adc
add
enter
sub
mov
or
mov
fcoms
mov
xor
or
dec
and
and
sub
and
ficompl
out
dec
cmp
cld
xchg
xchg
xor
ljmp
add
insb
cmp
dec
es
les
add
pop
outsb
mov
pop
lcall
and
sbb
fcoml
clc
push
push
push
pop
inc
pusha
in
cmp
sahf
dec
xor
or
lock
push
dec
pusha
pop
inc
jecxz
shlb
lea
sbb
sar
ret
ja
dec
out
mov
in
dec
add
or
push
repnz
add
push
stc
xor
push
lea
sbb
and
push
jmp
cmp
mov
clc
jg
cmp
scas
pop
orl
jno
lea
sbb
addr16
lea
mov
or
mov
and
popa
dec
and
pop
imul
xchg
mov
js
pop
xchg
mov
jl
bound
cwtl
or
mov
leave
rcrb
inc
call
sbb
scas
test
add
and
and
stos
mov
fnstcw
mov
xchg
add
xlat
push
dec
push
fadds
or
sbb
push
test
and
inc
lods
xorb
dec
mov
cmc
shlb
les
sbb
push
cmp
test
sbb
xchg
mov
leave
test
dec
movsl
insl
add
cmp
je
lods
call
pop
mov
add
int3
sbb
mov
and
imul
aaa
testl
icebp
mov
rcrb
xor
out
push
cmp
ficoms
out
popa
push
xor
movsb
inc
roll
mov
mov
imul
pushf
jmp
push
in
popf
push
push
jae
sbb
pushf
shll
mov
fisubrs
dec
xlat
scas
sub
popf
lods
ret
jb
adc
sarl
in
mov
aaa
or
call
movl
add
inc
ljmp
dec
or
or
sbb
sub
rep
sub
xchg
fwait
jae
add
or
xorl
add
in
cmp
sbb
xor
inc
cli
call
add
ss
push
mov
inc
jb
out
mov
adc
jno
xchg
cmp
add
jnp
in
push
mov
je
dec
jne
and
xor
mov
adc
add
adc
cmc
lahf
and
xchg
lret
mov
sarl
push
repnz
cmc
aam
adc
sub
fisttpll
cmp
add
jecxz
rcrb
sub
mov
xchg
jge
icebp
data16
pop
andl
loop
pusha
sub
adc
movl
xchg
daa
xor
mov
cmp
jne
mov
lea
cli
jb
mov
or
mov
pushf
or
test
loop
cmp
and
popf
pop
push
mov
ret
inc
pushl
test
mov
mov
mov
push
pop
and
mov
lcall
and
inc
lods
pop
mov
push
ljmp
inc
addb
daa
pop
stos
imul
lock
loope
or
xor
inc
push
push
pop
test
ret
xor
adc
inc
mov
mov
xor
dec
push
clc
aaa
test
cmpsb
adc
or
cmp
pop
rolb
jnp
inc
inc
xor
fmuls
or
call
dec
jmp
popf
dec
repz
les
lahf
fs
add
sbb
adc
xor
cltd
iret
mov
in
or
adc
mov
jl
push
mov
je
push
scas
adc
dec
push
push
adc
mov
adc
inc
rcrl
or
gs
mov
xchg
push
xchg
cld
inc
xor
jmp
dec
pop
insl
ret
or
jbe
les
ljmp
add
dec
jo
dec
jbe
fdivs
adc
pop
call
fstpt
push
and
sub
lret
dec
push
xor
sbb
fs
jmp
dec
adc
lcall
push
adc
pop
das
adc
lock
icebp
bound
scas
adc
mov
sub
push
sub
lds
mov
or
sbb
es
cmp
jge
dec
sahf
or
lcall
inc
cmp
sbb
stos
jl
pop
test
pop
sub
xlat
inc
pop
out
push
sbb
andl
and
rcll
and
mov
movsl
xor
xchg
push
pop
sbb
add
xor
dec
test
push
and
adc
mov
test
lea
call
addl
pop
orb
mov
sbb
sub
aad
mov
shrl
ss
mov
sub
xor
mov
adc
mov
daa
cmp
inc
lret
jno
ja
orl
add
xchg
xchg
push
mov
push
dec
clc
mov
xchg
daa
ss
push
cmpb
je
push
cwtl
pop
push
jmp
popf
sahf
lcall
movsl
dec
loop
push
loopne
push
and
push
add
lods
or
fdivl
inc
lods
cld
js
fistl
outsl
inc
adc
inc
popw
or
cwtl
or
repz
mov
xchg
jle
test
or
sub
lods
mov
je
xchg
cltd
jp
mov
pop
inc
xchg
inc
mov
adc
xchg
lret
shlb
cmp
pop
fistps
jmp
adcb
push
scas
mov
addr16
or
xchg
pop
xor
add
fdivr
in
je
popa
inc
dec
mov
data16
sbb
dec
mov
adc
filds
cltd
pop
loope
fistps
push
jmp
mov
loope
popa
sbb
bound
aaa
pop
xchg
roll
pop
out
movb
add
js
out
testb
mov
sbb
inc
push
je
incl
mov
adc
mov
andb
mov
jle
in
dec
dec
xor
aam
dec
add
inc
cli
dec
inc
or
pushf
sbb
sbb
and
adc
sbb
xorb
sti
call
and
pop
out
sub
lea
fucomip
pushf
xchg
add
adc
xchg
mov
pop
shrb
cmpsb
cwtl
jno
fwait
inc
mov
arpl
pop
sbb
ja
inc
mov
aad
mov
cmp
mov
fidivrl
cmp
cmp
and
mov
fcomps
mov
repz
cmpsl
int
sbb
js
push
pop
pop
pop
std
add
dec
xchg
ss
push
or
adc
cmp
and
fldt
lock
dec
cwtl
push
adc
pusha
test
in
hlt
pop
pop
jno
lods
or
inc
jo
jmp
jae
jns
sub
inc
insb
test
push
aas
push
filds
leave
and
add
aas
jo
test
cli
insb
cmp
pop
xor
xchg
in
pop
or
add
add
cli
cmp
inc
mov
aad
gs
call
scas
aam
cmp
jge
cmp
movsb
xor
sub
cmpsb
mov
insl
ljmp
push
dec
jecxz
inc
adc
sahf
sbb
pop
shlb
movsb
add
pop
and
jl
in
sbb
in
dec
inc
sub
dec
lcall
or
xchg
xchg
add
jecxz
inc
fidivrs
mov
and
sub
push
jo
fldcw
xor
push
xchg
adc
pop
das
inc
sbb
sub
push
inc
addl
sbb
sub
pop
orl
lret
pop
or
and
and
pop
mov
push
sub
and
or
jne
adc
movsb
add
add
sbb
sbb
xor
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
cmpsl
jo
pop
mov
cmp
or
push
sti
push
pushf
push
cmp
dec
andl
jo
push
mov
outsb
pop
notb
popa
xor
insb
inc
pop
push
sub
inc
cmpsb
sub
shlb
shrb
add
movsl
lea
inc
add
cld
pusha
mov
pop
ret
dec
js
pop
sub
xor
jle
daa
daa
leave
lea
jp,pn
leave
or
xor
jp
inc
cmc
mov
jo
aaa
cld
mov
pop
popa
repz
cltd
adcl
dec
and
loopne
mov
mov
and
loope
pop
pop
mov
sarl
out
les
sbb
push
clc
sub
xor
xor
adc
mov
pop
mov
mov
xor
and
shll
jo
or
lret
adc
inc
cs
sbb
loopne
ss
inc
aaa
push
sbb
ss
pop
dec
cmp
je
jmp
leave
mov
mov
lcall
ljmp
enter
mov
sbb
or
cwtl
xlat
dec
mov
lds
fnstcw
xchg
dec
jo
out
pop
cwtl
movsb
xchg
cwtl
outsl
jne
lea
hlt
xchg
cmp
mov
mov
sub
rcrb
inc
loopne
and
ds
cmpsl
and
push
aas
or
jmp
popf
and
push
and
in
dec
mov
js
adc
cmp
fimuls
sub
push
push
es
or
xor
cmpb
jns
pop
scas
add
push
mov
and
xchg
mov
lods
je
dec
cmp
push
adc
pushf
inc
jp
dec
int3
sub
cwtl
or
push
add
jo
lahf
mulb
pop
pop
mov
mov
cmp
std
mov
fs
in
cmp
cmp
jbe
decl
ljmp
pop
lea
add
lea
jb
and
dec
cmp
jne
or
jae
push
lahf
sbb
sahf
into
test
clc
xor
jmp
scas
es
ds
mov
mov
add
push
test
rcrl
push
jne
cwtl
scas
mov
add
iret
lds
and
test
or
adc
mov
pop
xchg
push
push
xchg
call
jg
popa
mov
mov
lods
js
push
incl
mov
dec
lods
or
aaa
call
aam
push
add
cmp
hlt
pop
iret
mov
push
jb
enter
mov
xchg
orl
idiv
sub
and
std
inc
push
lods
cwtl
xor
aad
negb
cmp
cs
jb
int
clc
imulb
inc
dec
ss
scas
sbb
mov
adc
mov
or
insl
outsl
xlat
add
pop
jge
shrb
xchg
testl
xor
adc
pusha
add
or
lods
sub
cmpsl
fcmovnbe
sbbl
imul
mov
push
test
cs
or
xor
adc
sbb
cmp
shl
test
dec
cmp
xchg
inc
push
mov
mov
pop
adc
push
inc
push
sbb
pop
or
inc
lcall
ret
mov
sbbb
inc
pop
in
sbbl
push
test
out
jmp
dec
test
int
inc
and
nop
xlat
int
pusha
sbb
sub
sbb
nop
pop
inc
jb
pop
je
leave
push
xor
sbb
pop
add
orl
leave
and
fs
xlat
cs
iret
mov
push
xor
inc
pop
push
es
sbb
push
jne
ds
cmp
dec
and
and
in
dec
vrsqrtps
mov
lods
or
sub
inc
daa
sti
and
sub
xchg
pop
mov
xchg
imul
and
xchg
es
pop
insl
mov
adc
xchg
sub
and
out
jb
sbb
pop
mov
leave
adc
xchg
sbb
pop
sub
pop
inc
mov
orb
xchg
iret
ljmp
andb
rorl
pop
imul
xchg
xchg
loope
mov
add
test
stos
lock
or
jae
roll
xorl
push
loop
xor
rcrb
pushf
add
cwtl
and
sbb
add
in
sbbb
inc
xchg
push
inc
loop
add
mov
cs
cmp
loope
push
sub
mov
in
and
in
ror
addl
test
sbb
adc
in
add
jno
mov
push
pop
xorl
js
call
mov
stos
sub
fisttps
and
loopne
addb
test
rorb
loop
cmp
insb
repz
or
dec
pushw
fsubs
and
cs
in
mov
adc
xchg
test
or
dec
loopne
test
mov
adc
jle
lods
test
mov
lea
pop
add
ret
xor
fs
push
mov
in
fwait
inc
movsb
jl
fiaddl
add
sub
or
pop
aad
and
and
xorl
cltd
fwait
inc
sub
call
push
std
dec
add
testl
clc
test
xor
pop
pavgw
adc
mov
movsb
fimuls
xchg
int
adc
aam
mov
cmp
jge
mov
xchg
sbb
jo
or
ret
mov
and
outsl
loopne
rol
xchg
xchg
lods
xorl
movsb
adc
dec
mov
loopne
icebp
out
popa
pusha
adcl
fdivrl
sbb
mov
mov
jo
shr
lock
xchg
in
data16
sti
hlt
pop
in
movups
lock
daa
stc
rcl
jne
mov
xchg
pusha
fisttpll
sbb
outsb
data16
mov
into
push
jnp
or
sub
xor
rcl
add
dec
sti
jnp
dec
pop
loope
sbb
and
imul
pop
mov
pop
pusha
and
dec
and
adc
push
cmp
frstor
inc
push
hlt
arpl
jbe
fiaddl
jne
dec
xor
pop
scas
ja
jnp
cltd
mov
inc
out
dec
lock
or
mov
pushf
fcompl
or
mov
or
add
fldl
icebp
inc
xor
mov
rcrb
or
inc
push
aaa
sbb
adc
cmovg
and
sbb
xor
adc
xchg
es
or
mov
movsl
popa
imul
and
and
mul
mov
call
xor
dec
jecxz
push
addb
adc
adc
push
xor
inc
popf
sub
hlt
cld
add
shlb
lods
mov
and
adcb
xchg
jns
sbb
ds
jbe
jb
pop
popa
outsb
rolb
cmp
inc
jne
cmc
mov
cmp
mov
add
mov
mov
adc
lock
xor
dec
push
out
call
sub
fcomps
xchg
or
xor
push
pop
xchg
mov
repz
or
lea
movsl
mov
or
or
or
sbb
pop
sarb
adc
push
sub
arpl
mov
pushf
mov
ss
fildl
mov
enter
mov
xchg
mov
cmp
jl
or
rol
int
and
and
sub
inc
dec
pop
stos
shrl
push
mov
fldenv
add
mov
push
in
mov
jnp
testb
lea
pop
push
push
xor
xchg
sbb
push
dec
add
cmp
dec
imul
ret
stos
push
test
lret
shll
add
push
in
xor
sub
fst
add
mov
lock
sbb
jge
mov
dec
dec
push
inc
cmp
imul
push
cmp
adc
enter
sbb
jmp
mov
xchg
add
and
mov
add
shlb
add
pop
test
and
cmp
loopne
add
add
lock
push
movsl
lea
or
adc
xor
mov
mov
lea
xor
rol
pop
dec
add
and
sbb
adc
sbb
sub
xor
cld
in
cmp
imul
sbb
clc
inc
cli
out
pop
sub
add
fsubr
add
adc
add
pop
push
sahf
stos
mov
popf
adc
inc
lods
push
fimull
cmp
cmp
xor
and
xchg
int
sub
push
or
fcoms
or
sub
sub
adc
sbb
mov
jp
and
cmc
mov
popl
ss
pop
test
pop
inc
and
xchg
push
add
adc
repz
xor
insl
dec
mov
cmp
les
add
ret
sbb
iret
mov
dec
push
jl
xor
xchg
xchg
add
and
push
pop
clc
ja
xor
pop
insb
dec
push
sarb
sub
sub
aaa
push
std
cld
or
jmp
cmp
mov
ss
je
aaa
js
test
cmpsb
adc
adc
rorb
adc
inc
mov
and
les
sub
push
cmpsb
cmp
andb
push
fdivs
pushf
xor
loop
dec
add
dec
int3
xor
stos
xchg
cmp
jle
or
xor
sbb
add
test
dec
adc
push
mov
jmp
push
sbbl
fstl
or
cwtl
cmp
jecxz
add
ds
dec
dec
lret
sbb
je
outsb
xchg
filds
push
mov
xor
cmp
dec
inc
inc
in
dec
dec
inc
mov
inc
dec
data16
xor
pop
dec
aaa
add
push
data16
lock
outsl
insb
fstps
pop
orl
fwait
out
jo
adc
stc
push
ficompl
mov
test
mov
jno
cli
push
movl
xchg
jle
lea
or
xchg
push
lea
add
dec
mov
xor
mov
fidivl
sbb
movb
and
sbb
insb
and
addl
int
add
add
mov
jmp
mov
sub
mov
cmp
adc
mov
cmp
mov
cmp
jmp
push
sbb
ja
or
insb
mov
adc
fsubl
sahf
sbb
and
pushf
inc
sbb
js
mov
add
sub
dec
pusha
pop
push
dec
int
int
add
loopne
es
add
addl
sbb
cli
call
xchg
mov
bound
adc
hlt
out
jnp
fbld
or
push
or
stos
or
call
mov
imul
push
dec
dec
rcrl
lds
mov
and
push
ficomps
push
fisubrl
stc
pop
mov
sbb
call
inc
xchg
adc
scas
fcompl
add
push
in
sbb
push
add
or
pop
sbb
dec
mov
les
lock
pop
add
fidivrs
imul
mov
pop
mov
sti
mov
adc
jne
cmpb
add
xor
or
cltd
hlt
in
out
mov
mov
xchg
add
lock
fwait
movsl
fbstp
push
sub
popf
mov
push
push
mov
xor
mov
adc
cmp
mov
loopnew
mov
std
scas
inc
sbb
dec
insb
leave
in
movsb
jo
xchg
jo
movsl
test
out
mov
pushf
or
adc
inc
repnz
xchg
movb
add
loope
add
push
cld
sbb
fdivs
xlat
xor
mov
adc
adc
pop
in
push
inc
pop
add
lcall
loope
cmp
xor
sub
inc
sub
inc
out
scas
popf
add
or
idivl
add
movsbw
aaa
xor
jns
int
testb
and
or
or
adcb
push
insl
imul
adc
hlt
inc
sub
scas
insl
hlt
push
inc
pop
popl
inc
mov
out
dec
ds
rolb
stos
fstps
jmp
push
sub
sbb
ret
inc
lcall
mov
ss
cmp
push
push
xor
scas
push
loopne
testl
adc
cmp
lock
mov
fwait
cs
pop
ss
sti
sbb
lea
mov
jp
sbb
imul
mov
xchg
sahf
cs
push
pop
test
sbb
inc
out
pushf
lea
add
outsb
loopne
fcomps
sbbl
push
and
sbb
mov
add
xor
inc
sbb
mov
and
cmp
fstl
or
sub
lret
mov
mov
leave
or
mov
pop
push
fsubs
inc
pop
and
push
sbb
lea
push
or
or
mov
stos
shl
ljmp
je
pop
aad
or
lret
xor
push
loopne
arpl
cmp
or
add
imul
in
lods
shrb
or
jecxz
jnp
lahf
je
sub
imul
xchg
xchg
scas
lgs
ds
jle
loopne
pop
xor
and
push
jbe
push
movsl
lahf
clc
push
mov
ret
aam
rolb
mov
xchg
lods
shl
imul
call
popa
fisubl
repz
movsb
mov
rolb
xchg
ret
cmp
pusha
stos
out
lods
and
call
ficoml
sahf
fnstenv
adc
jge
jmp
fidivrl
jnp
cmp
pop
push
ret
pop
cmp
push
in
stc
xchg
adc
inc
mov
mov
cmpsl
dec
sahf
stc
xor
scas
daa
lcall
movl
testb
stos
mov
cmp
fadd
mov
adc
fs
movsb
push
and
lcall
enter
jge
lock
push
insb
push
push
hlt
add
mov
mov
mov
xorb
cs
or
test
pop
xor
xor
jno
jge
inc
jae
inc
push
scas
sarl
cmovno
jne
or
inc
icebp
addl
add
mov
sbb
inc
lea
mov
jle
rcll
aaa
jmp
add
gs
das
icebp
add
inc
cmp
add
add
dec
push
and
lock
mov
or
pop
pop
in
gs
add
cs
jge
add
sub
scas
xlat
fs
outsb
bound
movsl
add
movsl
rcrl
rcll
jno
insb
xorl
dec
popa
inc
shlb
or
jne
sub
cmpsb
add
out
xchg
mov
push
hlt
ds
sub
mov
adc
lret
sub
incl
les
xor
jmp
push
adc
add
push
push
push
push
aas
es
incl
mov
pop
divl
leave
stos
xchg
or
push
jbe
xchg
mov
dec
jne
push
push
mov
adc
push
cmp
jne
pop
mov
jle
mov
add
pushf
xchg
cmp
or
inc
lea
xchg
add
mov
mull
pop
dec
pushf
mov
push
mov
repnz
xchg
nop
aam
insb
mov
or
movsb
push
cwtl
movsl
sub
and
sahf
int3
fildl
cld
jmp
push
aam
mov
sub
xchg
imul
inc
jo
movsl
movsb
pop
sti
xor
mov
inc
cwtl
lcall
orl
fists
pushf
aaa
movsb
not
ljmp
jnp
cld
add
lea
in
js
mov
adc
cmp
mov
test
stc
or
cmp
jne
stos
or
test
xorl
sti
push
sbb
jbe
pop
mov
inc
insb
popf
enter
adc
mov
sbbb
and
sub
jns
dec
fnsave
dec
push
inc
adc
and
cmc
pop
rol
add
idivb
loop
adc
push
and
pop
sub
lea
leave
push
imul
sub
push
dec
sbb
mov
sub
test
imul
enter
add
or
add
push
sub
scas
hlt
enter
or
sub
jbe
jb
jne
adc
mov
jg
push
push
rorl
arpl
dec
push
mov
mov
addr16
repz
pop
inc
mov
pop
cmp
stos
sti
in
mov
push
or
xchg
mov
daa
addb
aam
mov
jo
or
jnp
xchg
mov
and
nop
adc
push
shld
popa
sub
pushf
stc
negl
and
bound
lods
sub
sbb
inc
cmp
movsb
or
mov
push
aaa
add
add
sbb
dec
test
push
outsb
pop
and
mov
xlat
xor
adc
inc
faddl
cmpsl
adc
xchg
rcrl
xchg
repz
or
and
add
in
jae
adc
adc
pop
arpl
and
pop
jge
adc
js
jnp
mov
js
cmp
jb
dec
dec
sti
jne
jmp
and
dec
mov
jnp
jge
scas
push
int3
clc
pop
cs
mov
add
push
adc
in
hlt
jae
add
out
subb
xorl
das
push
sbb
and
mov
ret
jmp
sbb
or
or
icebp
pop
int3
je
ficoml
pop
push
mov
inc
adc
les
test
or
or
mov
bound
xor
fs
xor
xchg
xchg
add
sub
adc
outsb
dec
daa
dec
mov
push
jbe
cmp
je
test
and
sbb
imul
push
test
and
xor
mov
or
js
xchg
dec
cmpsb
add
decb
pop
add
add
in
aas
aad
add
aaa
les
lods
adc
or
lods
or
imul
insl
mov
dec
int
push
sub
ljmp
movsl
lahf
rcll
les
pop
xlat
or
ret
loop
jno
push
rcrl
sub
cmp
roll
loopne
cmp
les
sbb
push
loopne
or
inc
rcrl
push
lret
test
mov
mov
leave
push
cmovo
andl
lea
lret
or
add
aaa
dec
push
gs
mov
popl
dec
and
scas
adc
jl
adc
push
stc
jle
add
cli
std
leave
cmpw
sbb
xchg
jne
add
sub
fiaddl
add
pop
push
add
xorb
stc
imull
xchg
push
je
enter
out
cmp
movsb
and
jns
shll
je
mov
add
fsubrl
jecxz
and
pop
add
sbb
pop
les
punpcklbw
push
cwtl
or
dec
dec
push
sub
jp
decb
clc
push
sub
jmp
jae
mov
lcall
dec
movzwl
fwait
sub
add
pop
or
adc
fists
add
ud1
sbb
adc
push
add
fiaddl
loop
shll
inc
jae
xorl
notl
pusha
in
inc
aaa
ja
push
fs
push
pop
push
or
loopne
xchg
sysret
mov
lret
loopne
pop
and
inc
insb
test
jo
bound
hlt
jne
pop
js
insb
jb
fs
push
std
lock
or
add
pop
enter
push
pop
push
dec
xor
int
int
jo
fcoml
jmp
and
jle
xor
nop
mov
rol
ret
in
fstps
sbb
mul
adc
push
loop
and
je
lds
push
mov
imul
icebp
clc
cmpsb
xor
cmp
add
add
fldenv
int
mov
xlat
add
and
or
andb
and
pusha
sbb
pop
stc
ja
pop
and
mov
daa
nop
inc
inc
pop
xor
xorb
sbb
sub
out
cmpsl
add
ss
xor
je
fcoms
mov
stos
adc
add
leave
pop
jl
mov
mov
push
push
mov
les
or
in
add
std
inc
out
jmp
add
and
sub
or
dec
mov
test
add
arpl
shll
inc
lods
pusha
or
sbb
mov
scas
sbb
stc
sbb
in
sbb
push
sbb
jno
jne
dec
add
sti
stos
and
cld
pop
stos
or
sbb
insb
std
adc
daa
sbb
cmpl
mov
jo
or
and
adc
leave
or
andb
in
fmull
xchg
ret
and
sbb
mov
mov
jl
push
imull
mov
sub
lea
fmuls
fsubl
xchg
lock
jne
add
push
push
and
test
ja
bnd
or
ret
in
subl
push
mov
push
inc
stos
arpl
clc
inc
mov
out
aas
shr
pop
mov
adc
cwtl
in
push
test
lcall
sbb
jbe
loopne
hlt
outsb
and
push
mov
cli
xor
ss
sbb
cwtl
inc
mov
sub
fidivrl
rol
rcl
rol
and
and
pop
addl
sbb
stos
mov
pop
pop
cld
ljmp
xchg
add
inc
xor
cli
push
and
out
lock
adc
lahf
in
addr16
in
and
enter
pop
mov
dec
push
pop
push
cltd
mov
dec
mov
or
dec
jmp
sbb
xchg
mov
inc
push
cmp
test
jae
sub
jb
pop
imul
aaa
jg
cmp
addl
push
popa
pusha
lret
pop
pop
sub
xor
inc
jmp
adc
test
orb
xlat
or
xchg
popf
je
pop
mov
inc
mov
dec
sbb
in
inc
movsb
push
ljmp
jmp
mov
sahf
xchg
test
xchg
dec
push
push
adc
or
xchg
jno
add
mov
xor
ss
add
mov
dec
xor
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
cmp
and
sbb
sub
inc
push
mov
dec
ljmp
sub
hlt
ret
pop
mov
fldt
add
js
push
nop
out
fisubrl
popa
sbb
mov
mov
push
sub
add
mov
xor
iret
add
sbbl
dec
orb
test
scas
in
mov
repz
and
jne
xchg
sbb
sub
jae
mov
push
sti
sub
sbbl
sbb
and
sub
jbe
pop
fwait
mul
mov
xchg
or
test
push
lcall
lea
out
jns
test
pop
sbb
movsb
xor
adc
xor
pop
clc
xor
insl
repz
sub
sub
jge
ret
xor
cs
test
inc
int3
into
rorb
mov
daa
push
jmp
mov
clc
jb
es
mov
gs
nop
sbb
adc
mov
xor
push
cmp
add
addr16
scas
pop
int
callw
dec
mov
xchg
add
in
fs
enter
adc
dec
pusha
pop
adc
ret
or
dec
in
test
jmp
lret
mov
jmp
rcll
shrb
pop
sbb
cmp
and
sub
pop
js
push
mov
sbb
das
int3
mov
cmp
out
in
outsb
or
test
push
mov
fisubl
mov
sub
add
or
push
push
test
ja
jo
sub
push
xor
fsubs
mov
pop
and
mov
hlt
mov
test
cmp
cmp
xchg
sub
dec
jae
jno
mov
pop
xor
adc
cmp
pop
add
xchg
stos
or
mov
hlt
jmp
push
adc
adc
inc
adc
mov
push
xchg
add
mov
mov
int
add
mov
sbb
into
xchg
subl
xchg
inc
shrl
inc
lcall
jl
xchg
cmpsb
movsl
mov
adc
popa
movsb
mov
dec
test
sub
movsb
xchg
add
or
pop
cmp
jl
and
and
negl
and
addl
mov
nop
outsb
test
or
inc
or
clc
dec
ljmp
pop
fcomp
and
rolb
add
movsl
push
add
sub
adc
add
mulb
pusha
add
add
mov
ds
mulb
pop
lea
clc
imul
dec
push
mov
adc
add
dec
add
inc
push
cwtl
sbb
lea
xlat
add
call
nop
popa
adc
lock
add
xor
inc
push
mov
jb
sub
cltd
xchg
sbb
mov
xor
mov
sbb
xor
and
mov
cs
pop
mov
int3
fiadds
or
xor
mov
test
or
and
add
xor
lahf
add
pop
dec
mov
movsb
push
add
stos
or
or
sarb
add
loop
xor
das
or
fadds
mov
xor
movsl
xor
fimuls
ret
add
in
pop
test
xor
cmp
sbb
into
sbb
cs
rorb
nop
sbb
and
loop
jecxz
call
push
or
repnz
daa
int
jle
dec
push
shlb
bound
xor
addr16
addl
jo
popf
nop
and
xchg
jmp
xchg
or
test
loopne
aas
addr16
pop
aam
add
inc
sahf
ret
repnz
fwait
stos
cs
pop
adc
inc
cmc
dec
mov
pusha
xchg
and
subb
movsl
push
dec
rol
and
jne
cmp
push
xchg
imul
add
xor
negl
test
movsb
sbb
or
test
scas
rcl
xchg
or
sub
pop
imul
sbb
int
lea
jae
push
mov
xor
sbb
xor
adc
xchg
inc
mov
pushf
imul
adc
sub
insb
xor
jo
icebp
in
movsl
sbb
leave
es
mov
lret
and
fwait
mov
gs
pop
jl
fcoms
repnz
or
ss
xchg
sub
fldl
xor
pusha
mov
call
jno
mov
es
jns
push
and
push
jl
jns
add
xchg
add
daa
or
cld
icebp
mov
fadd
sub
stos
in
jge
inc
xchg
repnz
cltd
sub
sbb
movsl
les
sub
insb
popf
shlb
mov
mov
push
test
add
mov
add
aad
pop
rorb
or
test
je
jmp
cmpb
ret
andl
sub
rclb
test
gs
xor
fsubrs
imul
add
shlb
negl
rorl
mov
dec
addb
and
in
pushf
sub
sub
or
xor
push
push
xchg
inc
mov
xor
and
pop
nop
sbb
dec
sbb
xor
push
and
sbb
adc
and
push
dec
and
movsb
mov
in
mov
loopne
pop
or
in
cmp
mov
dec
cmp
or
jecxz
daa
and
adc
mov
push
or
icebp
subl
lock
cmp
ss
fcoml
jns
mov
sub
push
nop
sbb
push
out
mov
fimull
out
and
cmc
push
pop
dec
cld
adc
inc
adc
mov
mov
xchg
sarl
movsb
lods
or
and
dec
push
inc
cmp
push
out
xchg
dec
call
push
adc
push
pop
adc
push
addb
enter
test
dec
andl
push
xor
inc
mov
test
push
pop
mov
push
fsubl
add
sbb
push
and
mov
jbe
leave
push
testl
lods
sub
sbb
inc
dec
clc
adc
xor
cmp
lock
dec
mov
xor
roll
and
add
movzwl
add
sub
pusha
pop
pop
sbb
mov
aam
mov
incl
pop
inc
sbb
push
ret
inc
or
xor
add
mov
imul
mov
ja
jns
sub
daa
jne
or
leave
and
dec
adc
outsl
clc
es
mov
test
push
mov
cmp
je
js
push
mov
xor
mov
mov
dec
xor
lods
or
mov
push
repnz
xchg
jg
xchg
movsl
aas
andl
dec
imul
loop
scas
or
mov
pop
cmpsb
xchg
shlb
pop
and
imul
push
pop
push
jns
fists
psubsw
cmp
sub
mov
dec
add
sarl
loopne,pt
repnz
cmpsb
inc
push
je
push
push
and
dec
sahf
and
ds
jo
icebp
sarl
push
and
push
outsl
loopne
pop
inc
or
inc
fidivs
insl
adc
push
mov
xor
into
xchg
cmpsb
mov
les
inc
sub
xor
outsl
pop
mov
jno
push
mov
aaa
push
jbe
pop
pop
mov
ret
mov
mov
inc
push
xchg
xchg
subl
pushf
pop
add
ficomps
out
xor
outsb
xlat
or
adc
jecxz
das
les
fnstenv
inc
aam
fcomps
jbe
loopne
aam
dec
mov
jae
mov
test
mov
test
orl
inc
lcall
sbb
leave
dec
add
or
jne
imul
add
rorb
xor
xchg
jno
or
sbb
add
fsubrs
adc
pop
sub
mov
es
jmp
data16
je
sub
xorl
das
icebp
push
shlb
dec
xchg
sbb
pop
sub
shll
jno
push
inc
outsb
mov
pop
lock
mov
sbb
push
les
cmc
loop
fbstp
sbb
mov
stos
mov
es
ljmp
push
in
aaa
mov
aaa
or
pushf
ficomps
mov
mov
adc
sbb
push
fists
jmp
cs
sbb
jns
cmp
shrb
inc
jge
push
push
rorb
push
push
fcompl
xor
ljmp
cmp
out
dec
ss
push
ja
outsl
adc
push
movd
push
fildl
or
lock
and
adc
push
inc
ss
insb
jl
jne
cli
jne
push
jno
pop
xor
repnz
xchg
push
and
pop
adc
andl
or
fwait
mov
cs
add
dec
push
push
mov
ljmp
mov
push
jmp
rcrl
aam
mov
jge
mov
jns
push
push
mov
lcall
dec
out
sahf
sbb
enter
int3
and
mov
fnsave
lds
insb
in
and
in
push
cmp
sbb
push
pop
fs
jp
sub
and
jne
lods
jp
aas
jmp
push
imul
int
jns
xchg
and
rclb
andl
sbb
jb
dec
dec
test
and
xchg
out
mov
push
sbb
sar
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
xor
pop
rclb
add
xor
hlt
mov
push
push
dec
push
and
pop
adc
mov
dec
xlat
imul
pop
or
fiaddl
insb
pop
mov
push
roll
xor
xlat
cmpsb
pop
ss
movl
popa
mov
lock
loope
sub
add
push
adc
fsubr
xor
and
jg
dec
test
push
adc
pop
mov
aam
mov
in
add
xchg
je
fsubr
lea
in
push
push
stos
js
jecxz
sub
or
push
das
sub
sbb
sbb
imul
ret
or
push
mov
test
mov
and
das
cmp
push
mov
mov
fisttpl
cmpsl
fisttpll
cmp
insb
add
mov
mov
aad
in
mov
mov
into
xchg
inc
jb
in
and
mov
mov
pop
or
add
test
jo
ja
or
push
js
or
test
jno
into
push
or
loope
lret
mov
sub
bound
inc
xor
enter
sub
xchg
mov
adc
jle
dec
add
stc
or
add
jle
push
das
fcoms
loope
nop
insl
iret
push
sbb
inc
mov
inc
stos
out
cmc
push
push
mov
adc
in
jo
fcomps
sub
inc
adc
loop
fistpll
push
sbb
push
jle
stc
jne
mov
aad
ret
pop
add
push
mov
push
adc
cmpps
ja
or
jle
pusha
add
pop
pop
bound
fldl
dec
in
test
mov
push
jo
ljmp
mov
lods
pop
mov
dec
jnp
cmp
sahf
mov
je
xchg
or
popf
inc
loopne
add
add
or
push
in
adc
push
push
aad
dec
cltd
jb
xor
adc
subl
cltd
xor
sbb
cmp
arpl
push
fld
orl
fwait
push
outsl
stos
dec
lods
sbb
push
in
and
xlat
cwtl
enter
cmpsl
add
dec
sbb
addb
pop
pop
pushf
daa
ficoms
adc
rcr
jb
add
add
or
sub
cld
or
je
mov
or
pop
inc
sub
imul
aam
jg
roll
cmpsl
and
inc
aam
mov
adc
and
push
loopne
in
dec
jne
cmp
dec
mov
jge
or
rorl
lock
test
xor
iret
push
sub
lea
push
test
ret
mov
cmp
daa
mov
insb
sub
jo
push
shrl
xor
mov
ret
pop
add
sbb
and
ret
push
push
push
rol
inc
cmpl
loope
cmpsb
adc
je
movsl
or
xchg
mov
in
mov
bound
fcom
pop
add
lea
pop
subl
mov
dec
mov
xchg
sub
rcr
loopne
mov
std
mov
aam
inc
cmpsl
sub
sbb
sub
sbb
addr16
pop
fnstsw
mov
addl
jno
xor
push
test
in
xchg
xor
dec
push
xor
xchg
add
ss
mov
gs
cmp
push
jnp
mov
pop
roll
add
idivl
push
add
jmp
and
jecxz
sub
call
xchg
add
pop
in
test
push
test
jb
xlat
mov
les
int
popa
in
xchg
or
clc
xchg
out
loopne
push
or
adc
mov
pop
push
push
mov
cltd
popa
adc
imul
add
in
test
mov
fld
sub
outsl
imul
inc
push
adc
cmpsb
pusha
add
jno
adc
dec
jecxz
inc
movl
in
inc
lods
ljmp
dec
imul
cmp
and
sub
add
neg
pop
xor
cmp
dec
push
pop
dec
and
push
xchg
push
pop
mov
into
sbb
mov
adc
ret
cmp
sub
stos
jo
aam
jp
aaa
test
pop
add
cmp
imul
sti
adc
aas
int3
in
stos
or
add
fadds
inc
adc
or
and
loopne
int
or
fsubs
jp
dec
movsl
mov
cmp
jl
dec
xor
xchg
push
fwait
push
lret
xor
imul
mov
ret
cld
mov
dec
insb
add
data16
scas
orl
xchg
xor
adc
in
push
decl
adc
cmp
push
cmp
jle
cmp
jge
jle
jp
push
cmp
cmp
inc
add
pop
adc
push
add
inc
jmp
adc
movl
adc
and
mov
push
mov
cltd
pop
idiv
lock
rol
fisubrl
fs
js,pt
or
adc
inc
add
jecxz
jnp
cmp
ret
mov
mov
push
testb
fnop
mov
into
jns
push
sbb
lock
push
fcmovnbe
mov
repz
push
push
xor
fs
xor
das
xor
addl
je
jns
scas
cs
dec
movsl
or
adc
and
dec
jb
cmp
add
movsb
sub
rcrb
mov
lahf
push
xchg
int3
cmp
int
cmp
push
mov
dec
sub
outsb
inc
push
and
jg
xor
lahf
add
leave
into
pop
insl
loopne
xor
iret
jl
mov
sbbb
inc
inc
dec
fstps
outsb
daa
lds
pop
push
xchg
addl
add
insl
or
enter
or
add
pushf
inc
and
add
inc
push
add
inc
push
push
rorb
dec
add
and
insl
push
dec
mov
je
pushf
jl
out
loopne
stos
outsl
mov
rorl
les
daa
xor
pushf
xchg
push
pop
mov
add
xchg
and
mov
dec
push
sub
insl
in
cmp
push
mov
xchg
mov
cmpsb
dec
push
and
insb
test
sbb
andb
dec
inc
or
rol
jmp
dec
cmpsb
or
jl
push
mov
or
pop
rorb
fcomi
sub
sub
mov
loopne
xor
lods
int3
sbb
rolb
aaa
enter
aaa
sbb
pop
and
sbb
sbb
dec
or
popa
mov
jno
pop
sbb
add
mov
mov
push
sbb
test
cwtl
add
inc
mov
and
cmp
sub
or
add
adcl
ljmp
pop
mov
mov
ret
loope
mov
in
push
push
int3
fdivr
subb
sub
or
jno
sub
jno
push
pop
enter
cmp
pop
and
popf
xchg
sbb
dec
and
mov
adc
or
in
adc
mov
aas
pop
add
adc
or
adc
sahf
mov
sbb
dec
test
and
inc
push
shrl
mov
adc
push
ds
rol
xor
adc
add
jo
mov
mov
shrb
lahf
pop
gs
mov
jno
loope
add
mov
xor
or
ret
test
sbb
push
mov
mov
push
adc
jge
out
in
mov
jae
sbb
sbb
push
int
stc
cs
int3
popa
sbb
sub
fdivs
fs
mov
in
or
rorb
bound
jae
and
adc
cmp
shl
xchg
dec
ret
aam
insl
add
lods
mov
add
call
push
sbb
lcall
or
add
pusha
mov
arpl
or
fadd
mov
push
xchg
repz
sbb
pop
adc
or
leave
adc
adc
icebp
clc
jae
dec
pop
aad
xlat
les
pminsw
je
pop
jo
mov
gs
into
lea
jp
rolb
insl
sbb
push
adc
fdivrs
ret
or
inc
and
jne
in
xor
mov
and
std
test
sbb
mov
lods
test
mov
add
sarl
jbe
lock
hlt
dec
leave
xchg
sbbb
pop
les
xorb
jl
mov
insb
pop
sbb
imul
loop
stos
cmp
jne
sbb
lds
cmp
imull
push
xor
pop
sbb
out
loopne
push
add
xlat
cmp
fildl
mov
inc
and
mov
xorb
push
jne
or
jnp
pop
jbe
pop
repnz
nop
or
sti
cwtl
lock
arpl
cmpsl
sti
add
pop
jns
jg
shll
pop
adc
fwait
lods
popa
push
or
add
push
imul
lods
add
pop
test
add
pusha
push
pop
aaa
xchg
add
notl
adc
stos
add
mov
mov
pop
pop
mov
sub
scas
dec
das
xor
in
int3
cli
iret
jle
ffreep
jecxz
add
jmp
add
fsubl
inc
jl
push
roll
loop
mov
cmp
dec
fcmovu
push
movsb
repnz
pop
ret
and
imul
les
push
pusha
in
imul
mov
or
out
mov
push
xor
jmp
shrb
call
frstor
pop
sar
or
fcompl
fnstsw
test
je
sbb
add
pop
add
iret
cmp
sti
sarb
push
nop
add
jne
inc
sbb
inc
add
fsubrl
mov
push
push
aas
popf
mov
cmpxchg
jge
lods
lods
pop
or
adc
js
jmp
pop
fsub
pop
fsubrp
sub
dec
dec
ss
and
outsl
xchg
divb
push
xchg
loopne
inc
aaa
dec
pop
dec
ds
imul
inc
mov
pusha
pop
mov
scas
mov
test
popf
sub
mov
and
ret
rol
or
in
je
mov
rcrl
addb
stc
jge
fdivl
adc
into
lock
arpl
mov
sarb
insl
nop
add
out
adc
pop
inc
popf
bound
or
ret
ja
push
and
xchg
mov
or
out
rcll
and
dec
movsb
push
dec
pop
xor
lds
shrb
mov
daa
add
ret
mov
xor
jnp
or
mov
bnd
add
or
inc
sti
cmpsb
mov
clc
clc
clc
sbb
movsb
adc
lea
cmp
jb
pop
inc
call
shld
add
sbb
add
cmp
push
push
and
push
push
je
arpl
push
lock
mull
push
leave
adc
mov
push
adc
push
push
pushf
xor
push
into
mov
repnz
pusha
or
or
cli
cmp
add
push
push
sarl
mov
push
add
pop
pop
enter
loop
adc
cs
inc
xchg
and
out
jle
loop
fmuls
mov
testb
pop
push
jne
xchg
and
fbld
push
sti
ja
push
adc
sub
mov
add
movsl
loopne
inc
mov
dec
inc
cmpw
jne
leave
cld
lods
or
and
push
push
push
inc
lock
std
xor
dec
sti
jmp
push
push
jl
mov
loopne
decl
lea
cmp
or
dec
xor
add
leave
out
data16
or
mov
push
push
push
push
sbb
decl
cmp
pop
rorl
push
inc
xchg
clc
orl
and
test
aam
leave
lods
sbb
add
arpl
int3
rcl
lcall
rcrb
xchg
or
xchg
or
jb
loope
inc
mov
or
lret
ret
dec
loope
mov
push
xchg
nop
xor
ja
cltd
mov
dec
ja
mov
jb
jo
mov
and
into
xchg
adc
std
test
es
scas
test
in
aam
cmp
dec
add
or
scas
mov
stos
mov
popf
es
dec
jns
xorl
sub
or
int3
test
xchg
and
mov
out
or
js
mov
movsb
call
adc
xchg
shlb
add
cmp
insb
ret
push
xor
out
mov
cwtl
and
push
sbb
xchg
sbbl
adc
lds
fcmovnb
pop
ret
pop
add
sub
add
mov
movsl
dec
sub
pusha
rolb
xchg
sbb
ret
out
popa
cmp
or
mov
pop
mov
mov
sub
inc
xchg
addr16
sub
or
sub
pop
push
lret
jno
out
or
adc
fildll
in
pushf
adc
or
ret
les
movsl
addl
call
cli
sub
subb
cs
lcall
movl
sbb
jbe
dec
in
fisttpl
push
repnz
cs
pop
push
outsb
pop
add
push
push
jne
inc
or
cmp
jp
adc
pop
push
xorl
or
add
movb
jo
loopne
mov
popa
mov
divb
sub
es
stos
pop
xorl
pop
or
mov
ja
dec
ljmp
xchg
js
pop
or
mov
mov
and
cwtl
adc
pop
xlat
addb
icebp
and
xor
fstpl
adc
jne
push
mov
pop
sub
dec
cmpsb
aam
dec
incb
sbb
ds
stos
cmp
adc
ja
push
adcb
in
pop
stc
or
adc
adc
adc
pop
push
push
push
cmc
pop
fwait
clc
push
xchg
jg
add
pop
jmp
in
rcr
cmp
xor
push
pop
jnp
jge
mov
mov
jmp
push
pop
mov
jmp
push
mov
xor
mov
lea
add
add
aam
test
lods
inc
mov
fildll
jnp
adc
insb
or
adc
rorl
mov
xchg
push
fsubs
cld
andl
dec
mov
push
lock
cmp
sbb
add
sub
adc
pop
repz
xor
jnp
push
pop
cmp
insl
fmul
dec
sub
jnp
adc
cmp
push
dec
loopne
mov
or
sbb
adc
xchg
jl
jl
jnp
lcall
push
fsubl
xor
sbb
testl
adc
push
jge
or
je
es
mov
push
aam
mov
push
xor
sbb
fsubs
push
jle
jo
out
jle
cld
fnstenv
lahf
les
lcall
add
sbb
or
mov
and
subb
xor
inc
push
jns
out
pop
bound
out
sahf
out
xchg
lahf
lret
aad
out
sahf
fucomip
repz
or
cmp
daa
xor
repz
pop
outsl
jns
repz
test
and
iret
fldln2
mov
into
jecxz
aam
sbb
and
repnz
add
mov
pop
fldl
adc
add
leave
outsb
dec
pushf
lcall
dec
popa
add
adc
inc
popa
and
mov
or
add
adc
lret
pusha
stos
cmp
pop
int3
hlt
fisubs
shr
jno
add
push
int
mov
and
jmp
fwait
jmp
jl
mov
dec
adc
fstps
push
pusha
rorb
shll
enter
add
out
fcompl
push
xor
jp
test
inc
fstpl
cli
test
out
push
adc
jmp
arpl
andl
cmp
sti
mov
movsl
shll
popa
add
int3
and
cmp
aas
or
jne
xor
and
mov
pop
push
push
dec
test
pusha
xor
adc
push
es
add
sbb
adc
les
in
out
and
rorb
cmp
vmread
xchg
pop
je
xor
push
cmp
push
cmp
pop
pop
jb
adc
scas
add
pop
add
xchg
xchg
mov
mov
adc
pop
jbe
or
mov
rcr
ss
ret
subb
mov
dec
mov
mov
push
and
movsl
bound
enter
xchg
push
xchg
test
test
insb
orb
cltd
shrb
push
dec
dec
repz
xchg
adc
shlb
decl
xlat
lret
out
and
mov
mov
add
push
bound
repnz
outsb
faddl
xlat
pop
inc
dec
add
adc
inc
out
inc
out
jnp
test
jl
loop
dec
jecxz
or
jmp
arpl
lods
push
mov
adc
jno
mov
add
gs
dec
push
inc
xchg
adc
insl
sbb
sarb
mov
rcr
sarb
mov
jp
xchg
cmp
mov
test
fdecstp
adcb
loop
and
je
dec
sub
and
and
pusha
int3
std
rorb
jecxz
int3
mov
mov
pop
in
mov
xor
mov
hlt
scas
adc
movsb
mov
lret
xor
mov
sub
int3
cmc
cwtl
call
xor
push
movsb
les
push
and
fimull
movsb
je
mov
and
inc
bound
cmp
incl
xlat
mov
xorb
movsb
pop
rorb
pushf
xor
jle
mov
and
fnsave
xor
sbb
imul
imul
sub
jl
cwtl
sub
imul
sub
inc
mov
int3
xor
jg
cmp
lret
lea
lds
mov
into
stos
adc
adc
aaa
lret
add
pop
adc
nop
insl
xlat
movsb
jo
pop
rorb
test
sbb
mov
mov
pop
movsl
std
enter
fisttps
or
dec
js
stos
xchg
rolb
xor
clc
movsb
movsb
bnd
pop
incb
sbb
add
push
mov
jae
inc
or
leave
or
sbb
sbb
and
xor
mov
nop
and
dec
jns
add
movsl
and
dec
lcall
cmp
sub
cmp
addr16
test
xchg
pop
add
iret
loopne
or
push
jmp
andl
xchg
cs
movsl
push
mov
xor
jo
inc
adc
cwtl
in
mov
mov
cmp
xchg
cltd
or
pop
xchg
push
pop
in
cld
orl
scas
jmp
test
cmp
push
xchg
imul
hlt
cmp
jle
pop
add
cmp
int3
jmp
cmp
cmp
scas
mov
mov
cli
sahf
nop
movsb
aas
push
cmpsb
in
ret
push
orb
and
inc
es
inc
cs
aaa
loope
sbb
mov
xchg
jmp
or
inc
aad
or
sbb
inc
or
pop
or
inc
inc
mov
add
addl
pop
lea
jmp
push
inc
outsb
rorb
inc
or
loopne
jne
pop
dec
loope
push
out
and
mov
ret
je
pop
adc
xor
sub
push
sub
jnp
xchg
aam
xlat
mov
shl
enter
pop
or
or
dec
xchg
adc
pop
rcrb
rorb
push
aam
mov
push
stc
xchg
push
pop
dec
xchg
or
inc
sarl
pop
test
jle
push
aam
test
lea
mov
xchg
pop
sbb
ret
jmp
loope
pushf
push
insb
test
aam
outsl
push
mov
rclb
push
cmc
loopne
pushf
outsl
xchg
test
add
in
push
and
cmc
in
sbb
loop
and
lea
sbb
mov
add
nop
hlt
or
push
pop
es
add
sub
arpl
cmp
pop
das
xchg
mov
cmp
in
jo
js
dec
bound
leave
sbb
xchg
jle
xor
sub
pop
add
xchg
adc
inc
xchg
mov
mov
mov
or
xchg
nop
push
sbb
ror
in
in
paddusb
mov
pop
lret
adc
test
pop
add
repnz
cltd
popa
sbb
es
mov
shl
daa
lock
adc
jns
ljmp
push
or
mov
out
mov
push
pop
xchg
push
and
int3
push
je
add
sbb
clc
and
out
push
sbb
mov
lock
and
adc
jl
lods
push
xor
pop
adc
jb
pop
mov
loopne
adc
push
sub
dec
and
dec
jl
cmp
test
push
in
mov
enter
add
inc
sbb
sbb
dec
sbb
mov
rcrb
dec
aam
sbb
xor
pop
pop
and
cltd
sub
sti
adc
pop
xchg
lea
pop
adc
and
imul
and
test
dec
lcall
sbb
inc
int3
nop
sbb
mov
xlat
pushf
sbb
stos
mov
test
or
dec
dec
xor
pusha
push
pop
adc
pop
icebp
jl
or
mov
and
call
or
xchg
cmp
aas
inc
cmpsl
es
ret
je
pusha
test
repnz
out
xor
outsb
ss
jmp
push
lock
push
pop
cmp
pusha
jmp
dec
cwtl
push
int
mov
push
xchg
add
add
data16
test
pop
xlat
fdivrl
push
daa
dec
push
in
mov
negb
call
nop
pop
aaa
push
ret
sub
push
xchg
dec
dec
movsl
out
fsubrs
shrb
sbb
xchg
xchg
push
test
stc
inc
jnp
xlat
outsb
xchg
scas
push
pop
lock
dec
testl
xchg
shlb
adc
leave
xchg
push
out
inc
mov
pop
mov
xor
adc
or
push
in
adc
xor
lock
aas
insb
dec
mov
lea
jo
mov
lock
pop
pushl
add
mov
insb
jo
imul
mov
mov
sub
pusha
add
push
mov
rcrl
xorb
push
mov
mov
push
lods
daa
and
int3
lods
test
cmpsb
sbb
inc
nop
push
xor
enter
adc
and
or
mov
sahf
sub
jl
inc
lcall
daa
mov
es
push
sub
dec
ljmp
mov
jnp
xor
ds
xchg
and
sub
fldl
imull
add
int3
xor
add
and
fnsave
lcall
ret
shrl
adc
xchg
push
paddd
lock
sub
cmp
xchg
daa
dec
es
pop
xchg
insl
and
mov
push
pusha
push
mov
movsb
orl
loope
mov
addr16
jo
pushf
fstps
sbb
test
or
dec
aad
adc
jne
cltd
stos
xor
adc
adc
adc
mov
and
mov
push
mov
add
sbb
mov
paddusb
cmpsl
nop
in
mov
repnz
pop
pushf
push
dec
cmp
bound
mov
loopne
insb
or
and
out
mov
or
add
pop
add
je
mov
gs
mov
jo
xchg
mov
inc
cli
in
push
sub
shll
in
or
xor
jge
lods
mov
cmp
inc
pop
and
cmp
add
test
into
fmuls
push
dec
cs
int
and
shll
js
add
or
test
add
test
loop
rol
mov
push
sbb
cmp
mov
sub
and
subl
rolb
into
sub
ljmp
orb
insb
fnsetpm(287
outsl
pop
cwtl
sub
and
adc
insb
xchg
cli
inc
cmp
or
add
cmp
inc
adc
sarb
sbb
push
add
je
push
adc
nop
test
into
push
enter
xor
jb
mov
push
lods
jg
lahf
cmp
pop
push
lock
addl
addl
leave
call
jo
js
cli
rcrb
adc
insl
jmp
cmp
jbe
sbb
cmp
sarl
inc
clc
ret
jl
push
aaa
sub
lcall
inc
mov
subl
lds
iret
push
pop
adc
inc
loop
jbe
nop
repz
mov
dec
and
cmp
lret
xchg
jp
and
je
mov
dec
shl
fimuls
or
jl
fwait
or
jo
fisubrl
cmpsl
xchg
dec
push
or
movsl
xchg
inc
mov
xchg
es
or
or
push
push
add
add
inc
mov
and
cwtl
in
fldl
sub
js
dec
or
cmp
xor
jmp
push
fmuls
ljmp
fstps
sbb
push
sbb
ljmp
cs
les
xchg
mov
out
add
xor
cmp
pushl
push
mov
mov
pop
mov
lds
push
sub
rorb
cmp
leave
ret
inc
movsl
xor
sub
and
push
ds
xor
mov
imul
inc
mul
neg
mov
cmp
jl
or
paddd
jmp
cmp
add
and
mov
movb
movsbl
shr
mov
and
mov
loope
mov
lds
or
pop
xor
xchg
and
add
xchg
pop
and
and
or
sbb
loopne
sbb
and
cmp
inc
sbb
popf
cmp
or
test
sub
mov
lods
lds
js
cs
inc
push
xchg
jp
test
imul
xor
stos
inc
dec
test
add
push
pop
mov
or
test
loopne
inc
lock
xchg
repnz
mov
incb
add
cmp
je
dec
and
cmpsb
sahf
adc
fmull
or
xchg
cmc
cwtl
shrb
jmp
pop
xor
lods
mov
mov
pusha
enter
pushf
ret
xchg
sub
push
or
cmp
add
movsb
lock
sbb
ss
mov
andl
cmpb
mov
and
enter
push
mov
mov
adc
pop
loop
dec
jmp
imul
rclb
repnz
and
xor
jl
xchg
jb
fmuls
nop
xor
pop
cwtl
pop
cld
and
jmp
cmp
cmp
loop
inc
or
bound
and
popa
mov
ss
repnz
push
and
jmp
repz
jns
mov
inc
adc
lret
lcall
sbb
jno
fsubs
push
xor
gs
adc
jbe
inc
cmp
sar
ja
mov
test
rcrl
sub
add
inc
iret
adc
nop
icebp
pop
adc
push
add
adc
repz
dec
insb
data16
adc
sub
les
adc
and
mov
pop
sub
push
sbb
test
push
push
push
sub
incb
pop
leave
pop
rcrb
inc
iret
xchg
mov
add
aam
push
jmp
inc
and
jne
pop
pop
aad
sub
xor
pop
inc
ljmp
mov
cmp
push
notl
sbb
push
lds
cmp
lods
jne
loopne
add
add
fbstp
dec
push
cmpsb
adc
popl
dec
mov
add
sbb
lahf
or
enter
inc
or
movsb
xchg
jecxz
or
fistl
fistps
negb
call
cmpsb
mov
call
adc
ret
inc
adc
or
add
mov
sbb
je
xlat
ss
cmp
sti
and
or
mov
lock
add
push
sbb
push
inc
sbb
xchg
jno
dec
adcl
sbb
jo
iret
mov
js
push
lock
js
mov
mov
imul
lea
enter
and
out
push
mov
rol
in
add
jmp
sub
add
xchg
sub
push
lods
fisttps
xor
adc
test
adc
in
mov
or
or
add
cmp
xchg
loopne
popa
xchg
and
jne
dec
adc
das
pusha
or
andb
pop
shlb
jo
imul
das
insb
cmpsl
sarb
pop
andl
arpl
inc
and
add
pop
fwait
sub
cmp
in
mov
sub
popf
stos
inc
sub
mov
adc
enter
je
sub
sbb
xor
xchg
sub
jmp
cmp
stos
in
mov
or
xor
inc
push
gs
std
push
je
into
pop
add
add
scas
jae
imul
mov
inc
imul
dec
or
cld
jp
je
mov
xchg
adc
pop
xor
rclb
loopne
dec
push
xor
jne
je
inc
das
push
adcb
cmp
jl
mov
and
clc
adc
cli
hlt
add
add
jo
data16
fmulp
xor
ss
into
iret
test
adc
adcb
mov
outsb
lds
push
inc
in
cmp
xchg
add
adcl
push
popa
sub
or
das
and
push
enter
sub
mov
xor
xor
or
into
inc
xchg
adc
daa
add
ret
rcr
push
outsb
lea
cmp
push
inc
ja
inc
jne
inc
or
maxps
jge
cmp
add
cmp
daa
adc
lock
fdivs
jbe
fs
or
dec
xchg
call
rolb
mov
lock
sbb
inc
xchg
out
imul
or
or
lods
or
ficoml
lods
xor
pop
in
clc
inc
das
je
jge
ljmp
pop
fmuls
nop
jns
inc
xchg
and
fdivl
cs
in
imull
cmp
test
jne
es
mov
xor
jne
jno
ds
inc
push
mov
sbb
or
jno
es
fisttpl
call
je
xor
out
push
sub
pop
adc
mov
lea
addb
mov
sbb
negl
push
icebp
jmp
mov
or
insl
rorb
out
inc
push
hlt
push
cltd
cmpl
adc
in
and
cli
mov
inc
aaa
push
cmp
dec
mov
add
or
pop
or
ds
and
add
pop
inc
add
inc
or
mov
push
and
sub
sub
push
add
inc
push
cmp
pop
add
mov
or
add
mov
xor
orb
popa
mov
enter
push
fldl
call
push
push
sbb
inc
data16
mov
inc
add
out
jne
daa
bnd
adc
sahf
out
stc
hlt
jne
or
jne
or
rorb
adc
inc
pop
lods
jge
push
mov
aad
les
xchg
pop
push
lea
mov
and
mov
dec
push
pop
orl
xchg
push
jl
mov
mov
mov
pop
hlt
lea
or
jnp
in
lea
je
add
data16
mov
add
insl
lret
cs
mov
test
stc
sub
jo
mov
stos
or
sbb
sti
inc
pop
dec
jecxz
xlat
or
inc
lret
aad
int3
int3
pop
lea
mov
push
mov
jae
rcrb
fadds
mov
add
mov
adc
sub
push
jo
neg
loopne
sarb
adc
adc
mov
add
jecxz
cwtl
ret
ss
and
sahf
cmpsl
jae
mov
ss
adc
sub
xchg
imul
or
inc
arpl
adc
gs
sbb
push
shrb
sub
pop
xor
lea
incl
pop
add
dec
pusha
pusha
addl
mov
mov
daa
int
inc
xchg
fs
or
and
jne
jnp
nop
push
mov
xor
fs
fwait
inc
mov
sbb
ficoml
mov
add
jno
xor
adc
dec
push
mov
xlat
test
movsl
adc
out
or
loopne
add
mov
out
fwait
push
jae
mov
jbe
or
or
mov
into
or
push
lahf
mov
inc
subl
fldenv
and
xor
out
loope
jbe
jl
shlb
and
lds
cmp
insl
pop
addr16
movsb
nop
inc
push
dec
mov
push
or
test
pop
xor
mov
int
fstpl
or
mov
pop
ss
push
loop
pop
push
jmp
and
and
rol
push
mov
das
cmp
pop
inc
cmp
inc
lds
enter
mov
rolb
movsb
lea
subl
addl
xchg
xchg
push
sbb
shrb
jno
mov
xchg
xor
sub
ret
pop
inc
add
fldl
pop
push
xchg
pusha
aaa
dec
sti
imul
loope
mov
or
dec
mov
orb
mov
add
fwait
jge
pushf
shll
ss
shlb
loope
mov
push
or
adc
sbb
nop
dec
repz
test
inc
es
sbb
es
xchg
and
adc
xchg
inc
adc
sti
sti
sub
adc
lds
mov
jb
sub
jmp
fadds
dec
enter
sbb
add
outsl
push
adc
lds
adc
or
pop
repnz
xor
mov
add
inc
lcall
rcr
xchg
inc
mov
leave
sbb
mov
and
and
pusha
or
mov
jmp
lcall
icebp
test
cmpb
and
lea
movsb
in
inc
xchg
cs
repnz
xor
dec
shrl
cltd
mov
or
rcl
sbb
xor
movsb
cltd
add
add
sbb
dec
sahf
xorb
adc
dec
aaa
mov
jo
add
adc
ret
add
adc
xor
and
jo
sahf
xchg
inc
or
imul
adc
and
js
scas
dec
add
insl
jae
push
inc
sub
and
mov
arpl
pop
mov
mov
inc
sbb
faddl
add
and
sbb
sbb
seto
add
lock
lock
movsb
cmpsw
push
fs
and
mov
add
mov
movsb
push
sub
mov
add
sahf
or
int3
adc
aam
lea
sub
lods
pop
inc
out
adc
movsb
ffree
in
add
adc
or
mov
jne
xchg
in
add
add
mov
or
out
push
inc
add
jb
popf
inc
cmp
and
shl
int
cmpsl
add
call
shlb
add
sbb
and
dec
inc
xchg
push
mov
adc
push
sub
mov
je
push
mov
xchg
xor
jae
mov
ficoml
adc
dec
cmc
cmpb
xchg
pop
pcmpeqd
push
xchg
insl
addr16
xor
jno
mov
sbb
add
xorl
ja
mov
pusha
jno
test
mov
outsb
mov
cs
push
fldl
lcall
mov
syscall
push
mov
loopne
cs
lods
pop
push
aaa
in
xchg
shll
call
fidivrl
and
jne
mov
mov
sub
dec
inc
add
sbb
aad
lock
fdivrs
xor
bound
xor
jmp
mov
adc
in
dec
ret
in
mov
fdiv
pop
pop
xor
push
mov
sbb
mov
add
jecxz
andb
fidivs
lds
sub
clc
out
cmp
sbb
fwait
push
push
in
cmp
adc
and
ss
mov
rolb
sub
inc
xor
les
out
popf
movsl
or
inc
imul
mov
mov
add
hlt
add
inc
jecxz
and
inc
leave
in
xchg
lea
loop
sbb
stos
jbe
stos
loopne
jge
pop
sbb
call
jmp
pop
cmc
mov
aam
mov
call
or
push
xchg
add
enter
and
lock
add
or
or
add
push
in
or
sahf
add
mov
push
fisttps
add
or
or
aas
jg
adc
repz
stos
and
sbb
mov
int3
in
orb
pop
sbb
push
add
pop
xchg
shlb
and
inc
rolb
mov
addl
imul
adc
test
cmp
daa
inc
push
dec
loopne
jmp
xchg
sub
mov
adc
add
into
push
aas
outsl
xchg
test
push
inc
and
aas
mov
mov
add
loope
pop
or
mov
and
pop
push
outsl
and
jl
mov
lock
jb
movsl
jne
popa
call
stos
or
cmpsl
mov
cmp
je
or
ljmp
xor
add
sbb
sete
adcb
xchg
and
iret
dec
jmp
add
add
js
hlt
jae
movsbl
cld
mov
add
sbb
jle
imul
cmp
in
test
ds
jmp
enter
ret
incl
loopne
dec
inc
mov
inc
or
jecxz
or
add
inc
cmp
jl
decl
mov
cltd
and
add
rcrl
add
add
clc
outsl
jnp
cmp
pop
xor
ss
cmp
ret
and
sbb
inc
jne
rcr
jg
lret
shr
sub
mov
mov
dec
jne
rolb
lock
lcall
pusha
lods
cmpsl
or
cmp
std
mov
adc
and
stc
rorb
cmp
add
xlat
dec
jo
xchg
lea
jb,pn
cwtl
cli
ret
add
orl
adcb
loopne
or
out
popf
aam
add
decl
mov
aas
mov
movsb
mov
fstl
cmp
pop
cli
js
inc
popa
pop
dec
jmp
inc
add
dec
jne
shll
mov
mov
stc
or
sbb
add
repnz
push
ret
or
mov
adc
inc
sbb
enter
sub
cltd
rcr
ss
inc
sbb
imul
out
aaa
arpl
pop
ja
xchg
ret
cmpsl
push
xorl
loope
push
xor
test
dec
in
mov
dec
sahf
mov
pop
sbb
int3
fadds
mov
and
lds
or
repnz
sbb
and
sub
das
or
nop
je
add
ss
cmpb
loopne
in
fists
push
in
aam
cld
adc
push
pop
in
or
push
xor
jp
fxch
pslld
jne
outsb
pop
js
inc
pop
add
pop
jb
jmp
push
mov
jb
add
push
add
imul
push
sbbb
add
push
inc
lcall
mov
and
loop
and
jb
js
pop
aam
lods
cmp
into
das
sbb
push
pop
xor
jns
lret
push
mov
int3
adc
lcall
push
mov
stos
adc
bound
mov
jns
pop
ret
lea
lods
and
or
lret
sbb
lret
xor
int
adc
les
loopne
or
ss
je
xchg
cmp
and
repz
xchg
fbstp
popf
fldt
test
outsb
pop
pop
mov
mov
push
push
adc
dec
test
xor
jecxz
mov
ja
loope
dec
pusha
das
je
addl
dec
and
push
and
lods
fidivl
jo
mov
shl
loop
mov
add
int3
xchg
sbb
add
jmp
popa
fst
push
daa
js
scas
das
mov
or
mov
inc
mov
mov
xor
roll
insb
sbb
in
mov
jo
sbb
jno
mov
push
push
pop
aam
pop
xchg
out
inc
mov
push
push
mov
enter
jmp
mov
daa
adc
add
cs
sbb
push
adc
lcall
mov
pushf
pop
mov
out
aad
loope
cmp
xchg
xchg
int3
int3
or
mov
cs
sbb
cmpxchg
sti
lods
sti
push
pop
cmp
mov
mov
or
shl
je
jne
inc
rorl
ret
call
out
and
cmp
into
imul
mul
mov
inc
xchg
inc
adc
mov
enter
ja
inc
xor
out
add
cmp
add
add
fsubs
dec
aam
cmp
push
ficompl
jo
lahf
cmp
jl
cwtl
loopne
push
fiaddl
cmp
and
add
ror
push
sbb
sbb
sub
daa
movsbl
es
dec
mov
call
ret
mov
xchg
adc
inc
loopne
jmp
fsubr
rcll
mov
xchg
pop
mov
test
sbb
lret
movb
mov
jg
cmpsl
xor
mov
in
inc
rolb
enter
es
add
xchg
shlb
ss
mov
sub
dec
push
fwait
mov
mov
add
mov
adc
push
inc
add
push
dec
and
xchg
sub
lea
stc
mov
cld
mov
push
jecxz
mov
sub
pop
pusha
xor
sahf
orl
mov
push
cmp
and
xor
outsl
mulb
pop
add
repz
pop
xchg
subl
or
rorb
data16
cmp
lock
add
add
jb
in
pop
int
pushl
std
lock
pop
mov
mov
clc
loopne
dec
xlat
pop
mov
or
loopne
sub
push
inc
cmp
int3
loope
and
pop
bound
or
mov
add
mov
push
pop
gs
fmull
out
subb
mov
add
push
sbb
or
sbb
mov
cmp
jl
pop
sbb
inc
mov
idiv
sbb
sarb
sub
push
fbstp
push
incb
mov
add
add
or
mov
lods
inc
fisubl
and
or
icebp
mov
leave
push
xor
mov
inc
call
jne
pop
and
scas
dec
mov
fdivl
stc
fwait
jb
mov
pushl
jae
inc
xchg
stos
pop
mov
adc
xchg
push
cwtl
pop
mov
jecxz
add
lods
xor
or
stos
add
push
adc
fwait
add
in
dec
push
mov
and
out
clc
push
rcll
pop
pop
les
aam
pop
add
hlt
pop
sti
mov
push
enter
pop
inc
xor
scas
ds
pop
clc
lahf
lret
push
scas
and
out
divb
adc
mov
popa
add
xor
add
les
push
xor
dec
ds
or
adc
mov
in
add
sbb
mov
push
or
and
adc
or
sbb
notl
mov
pop
je
in
jno
jmp
lock
arpl
sbb
push
push
and
adcb
nop
add
jmp
add
insl
outsl
leave
and
adc
mov
add
mov
mov
inc
push
nop
xchg
add
add
and
add
in
dec
cmp
add
xchg
or
cltd
add
add
pop
test
and
jecxz
cmp
sub
cli
call
test
js
movl
or
xchg
fldt
xchg
movsl
mov
sub
xor
pushf
push
lret
or
cld
adc
or
insl
dec
in
mov
punpckhbw
inc
cmp
and
dec
test
stos
mov
lds
sbb
sbb
mov
ret
pop
add
popf
aas
jb
add
sub
add
scas
add
adc
mov
push
inc
mov
enter
adc
cld
rcll
rorl
adc
aam
cmp
cmp
push
loope
add
icebp
add
add
les
mov
mov
adcb
mov
and
add
mov
test
jmp
push
xor
mov
icebp
dec
je
or
decl
jno
push
jle
sub
xor
or
adc
icebp
add
lock
xor
fisttpll
mov
aas
inc
xchg
mov
sbb
jbe
fsubl
mov
dec
push
mov
xchg
mov
xchg
outsl
dec
sti
test
dec
dec
cmpl
pop
xchg
push
je
sbb
call
add
jnp
int
shrb
imul
xchg
shlb
pusha
pop
stc
and
cmp
dec
and
aam
or
out
ret
outsl
fdivl
mov
je
roll
adc
mov
sbb
jge
mov
mov
mov
scas
nop
pusha
sub
and
inc
push
adc
cmp
pop
jp
bound
push
push
dec
fwait
and
lret
sbbl
dec
push
stc
mov
xchg
rolb
sarb
cmp
fmull
inc
push
pop
add
fsubrl
fdivl
call
jmp
or
leave
and
push
insb
or
sub
add
add
fcoml
fldenv
pusha
mov
or
push
pop
je
movsl
and
fwait
jge
and
pop
sbb
sub
enter
dec
lahf
and
lret
xor
mov
dec
and
or
adc
addr16
scas
dec
jns
mov
repnz
loope
out
nop
int3
or
jmp
jmp
es
incl
jmp
mov
jb
mov
lock
aad
or
xor
jmp
push
dec
mov
adc
mov
xchg
inc
adc
fidivrl
lret
push
push
push
int3
add
pushw
movsb
or
movsl
sbb
sete
push
and
sbb
imul
jo
repz
push
pushl
xor
rcrb
loope
pop
cmp
push
adc
jge
hlt
sub
cmp
pop
push
sbb
dec
inc
pop
xor
mov
lods
adc
lret
ds
cmpsl
lcall
clc
cmp
sub
bound
pop
pushl
xor
sbb
pop
clc
jne
mov
pop
cmp
adc
lahf
mov
sub
inc
jp
insb
inc
pop
leave
rol
fildll
mov
cld
rcr
test
test
call
repz
popa
mov
lret
mov
push
adc
push
push
call
cmp
sbb
rclb
loopne
shl
pop
mov
xor
mov
mov
jecxz
inc
xchg
push
lods
aaa
fcomps
dec
and
popa
add
add
dec
lret
subb
shll
rclb
jmp
add
push
clc
lods
dec
xchg
shlb
jb
daa
xchg
xor
mov
std
and
jno
xchg
mov
pushf
out
push
mov
mov
outsb
imul
push
test
cltd
in
fdivrs
dec
leave
pop
or
sbb
les
and
arpl
pop
lret
mov
push
xor
xchg
lret
add
add
jl
cs
out
sub
daa
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
pop
leave
insb
push
insb
sbb
pop
jmp
cmp
subb
cmp
into
adc
adc
xchg
pop
lea
and
in
enter
and
cld
mov
das
das
out
js
adc
or
loopne
ret
lcall
or
pop
sbb
das
sub
test
fists
lea
push
or
mov
sbb
mov
or
mov
add
dec
subl
push
ficoms
dec
xor
pop
lahf
xorb
push
jae
mov
or
add
rcll
dec
mov
or
and
test
imul
shrb
xchg
sub
jo
lcall
sub
and
add
dec
inc
pop
lods
sahf
pop
mov
test
iret
sarb
cmp
cltd
sbbb
cwtl
pop
ror
sahf
and
dec
jp
and
push
sub
and
addl
ret
push
fwait
sbb
movsl
dec
inc
loopne
adc
faddl
imul
jl
adc
roll
push
adc
mov
loopne
inc
out
mov
fstl
mov
mov
sub
adc
jno
cmp
push
dec
rcrb
lahf
mov
jmp
cmp
sbb
cwtl
fstl
jb
fists
lds
cmp
push
outsl
and
call
pop
enter
les
inc
popf
and
xchg
sbb
or
push
pop
fadd
scas
test
inc
pop
add
inc
push
inc
cmp
ss
jb
push
ja
ret
xchg
jb
sbb
cwtl
repnz
loope
add
or
push
test
pop
push
push
insb
fnsave
cs
inc
or
cmp
int3
inc
cmpsl
push
sub
imul
vpackusdw
mov
out
je
lea
ffreep
pushf
mov
inc
push
xor
cmp
pop
jle
inc
xchg
mov
or
or
add
cmc
dec
sti
cmp
push
adc
lods
mov
xor
add
push
xor
cmp
cmp
shll
and
xchg
lahf
cmp
in
xor
popl
mov
je
hlt
xchg
mov
mov
mov
addl
add
sub
cmp
dec
push
fisubl
sbb
movb
jecxz
lea
mov
clc
stc
lahf
orb
clc
push
das
xlat
or
int
sbb
sbb
scas
push
dec
jge
sub
stos
add
mov
pop
push
or
jecxz
adc
lcall
xor
push
adc
push
push
aad
push
and
cmp
lcall
add
jge
dec
mov
fmul
arpl
mov
or
leave
adcl
das
sbb
adc
jb
adc
push
lret
jg
jg
adc
or
popf
push
iret
mov
sbb
mov
sub
shlb
add
pop
movl
shl
test
adc
push
cmp
movb
popa
cmp
ret
push
xchg
es
cmp
lods
andl
push
xchg
xor
arpl
add
icebp
or
imul
add
sub
adc
sub
and
sbb
inc
mov
icebp
mov
and
dec
data16
pop
ror
adc
lods
iret
sub
push
dec
iret
sub
in
dec
insb
faddp
add
out
push
mov
mov
or
dec
insl
addl
sbb
inc
leave
xchg
lcall
sbb
adc
xchg
push
cmpsb
jne
std
inc
or
push
ss
mov
xchg
nop
mov
sbb
imulb
lods
jmp
push
enter
in
fidivrl
dec
and
aam
mov
test
adc
mov
mov
les
jae
idivl
inc
mov
mov
xchg
js
testb
mov
push
inc
push
aam
adc
dec
fisubs
jl
sbbl
sbb
mov
andl
std
sbbl
addr16
add
adc
add
mov
push
pop
mov
dec
rcrl
mov
add
xchg
cli
ret
test
test
test
jl
jo,pn
fimuls
add
lods
test
scas
in
inc
add
aam
lods
incl
adc
addb
sub
or
push
dec
pop
sub
push
int3
mov
and
test
pop
ss
inc
pushf
lock
mov
mov
inc
lods
add
dec
lods
sub
cmp
in
inc
scas
pop
shlb
jne
loop
xor
and
push
rcll
push
add
add
mov
adc
sbb
xchg
nop
jecxz
sub
fisubl
mov
pop
push
pop
lock
jmp
jmp
mov
dec
xor
xchg
insb
or
shl
jg
jmp
adc
push
xchg
nop
xchg
jne
addl
cli
jp
fs
bound
test
xchg
mov
or
and
and
cmp
jbe
add
sub
push
jg
mov
sbb
pop
cmp
jbe
test
orl
push
inc
jmp
push
adc
int3
subl
es
cmp
inc
jle
jp
loopne
cli
inc
mov
sub
dec
inc
mov
sub
mov
sahf
pop
jbe,pn
fdivl
ret
adc
add
out
add
gs
add
xchg
mov
shll
ss
pop
test
adc
jno
lods
xor
fidivl
or
mov
fistpll
jne
cmp
push
mov
sbb
pop
adc
or
cmp
xchg
jmp
xor
or
insb
mov
or
aam
inc
adc
or
dec
mov
es
cmp
add
push
pop
add
mov
sbb
incl
cmp
and
sub
dec
lahf
daa
subl
cmpl
jb
jmp
les
in
push
push
les
fisttpll
or
movsl
push
push
pop
mov
mov
clc
inc
sbb
or
mov
stos
push
sub
in
stos
cltd
cltd
push
or
push
push
push
rorl
inc
icebp
andl
jns
jl
cmp
negb
pop
aas
js
mov
lds
and
mov
fs
test
lock
test
cmp
lret
push
push
mov
fs
adcb
inc
and
jne
and
les
jmp
push
and
and
fstpl
ret
and
rcl
fwait
inc
insl
mov
loope
adc
fcmovb
sbb
subb
mov
sub
add
pop
mov
jno
movsl
xor
pop
adc
add
fstl
ljmp
scas
push
inc
push
rol
aad
pop
xchg
mov
pop
xor
cltd
orb
cmp
push
mov
rolb
jbe
push
cs
or
dec
out
stos
push
sbb
insl
and
sub
adc
cmpsb
push
xchg
mov
pop
mov
jne
xchg
mov
xor
cld
inc
mov
roll
out
xor
aad
dec
add
mov
mov
sub
ja
sbb
addr16
push
push
dec
addw
outsb
cmp
les
aad
out
sbb
into
adcl
mov
sbb
cmp
and
clc
dec
adc
xor
mov
add
aas
test
xor
mov
jb
mov
dec
js
adc
jo
push
xchg
jl
sbb
push
subl
inc
shrl
mov
xor
pushf
data16
mov
xchg
mov
cwtl
xchg
pushf
punpckhbw
cmp
xor
adc
xor
leave
xor
cmp
xor
and
rolb
ret
xor
push
lahf
push
roll
int3
lea
mov
pop
push
rcrb
push
or
inc
pop
sub
mov
sbb
popf
adc
ret
sub
inc
cmp
data16
ljmp
mov
js
mov
addl
stc
push
inc
xchg
sbb
mov
dec
in
shrb
rclb
push
xchg
xchg
add
xor
mov
lds
push
daa
cld
add
sbb
pop
inc
add
sbb
add
adc
dec
push
fs
or
aas
incl
and
mov
loopne
add
add
push
sub
int3
jno
mov
add
dec
add
sub
mov
and
rorl
adc
inc
inc
add
sub
inc
pusha
and
sub
pusha
pop
leave
test
pop
pop
test
inc
inc
and
push
push
push
inc
jl
xchg
xchg
push
push
dec
add
pop
inc
pusha
addl
mov
and
and
adc
pop
ficoms
ret
shrb
jo
adc
das
sbb
xchg
xorb
call
pop
imul
add
add
xor
and
push
popa
xor
das
xchg
pop
lods
add
ret
sbb
add
subb
pop
add
push
dec
dec
sub
or
in
in
dec
dec
add
stos
pop
push
sbb
sbb
lds
adc
cmp
lea
dec
arpl
lock
mov
add
jnp
sbbl
push
cmp
pusha
adc
sbb
dec
fwait
push
mov
cmpsl
aad
add
add
cmc
cmpsl
lds
inc
test
gs
add
xor
jne
daa
adc
scas
clc
or
pushf
out
pusha
mov
sub
cltd
or
adc
cmp
inc
in
loopne
mov
cwtl
inc
loopne
sbb
imul
cltd
inc
or
rorl
out
mov
icebp
je
popf
das
iret
and
dec
adc
inc
cmp
lock
inc
and
push
adc
jl
xchg
in
xchg
call
sti
push
clc
jmp
sub
sbb
adc
rolb
mov
inc
and
sbb
arpl
adc
adc
clc
mov
push
jno
add
and
sbb
cmpsl
mov
fmull
fdivs
sub
mov
jbe
sbb
andl
push
xor
mov
jb
inc
mov
lea
xor
aas
sbb
hlt
mov
push
add
cmp
xchg
mov
fcompl
xchg
or
sub
or
add
addr16
repnz
and
andl
and
lods
mov
inc
mov
mov
fnstcw
lret
rcll
imul
or
add
and
and
or
sbb
add
push
stc
aad
add
adc
xchg
push
and
ja
push
lock
jnp
je
push
data16
dec
and
or
pusha
int3
adcb
lea
pop
jge
cwtl
push
repnz
xchg
imul
repnz
lahf
cwtl
pusha
daa
adc
pop
sub
adc
push
xor
and
add
xchg
es
nop
add
add
jae
inc
pop
addb
xchg
cmpl
xchg
popf
push
roll
jg
pop
pushl
push
pop
add
add
xorl
test
jbe
inc
or
rclb
lock
adc
xor
adc
and
add
lahf
leave
dec
in
aad
clc
clc
lods
adc
push
pop
ret
xorl
dec
test
imul
xor
shrb
lret
aaa
sub
lea
and
cmp
or
scas
inc
xor
imul
lods
push
mov
movsl
push
mov
sub
test
xchg
insl
dec
cmp
mov
mov
adc
mov
loope
add
pop
push
cmp
add
push
cltd
pop
add
popl
adc
mov
fisubl
rolb
clc
jb
or
fisttpll
pop
add
fs
ret
and
sub
test
fwait
test
mov
jae
je
popf
mov
loope
adc
lock
sbb
xchg
sub
mov
adc
jb
adc
mov
sbb
add
cmp
adc
push
out
mov
pop
das
jne
jo
jecxz
adc
mov
jo
addl
xor
and
sbb
std
jo
add
push
shrb
popf
mov
lods
sub
imulb
pop
jne
je
mov
in
bound
dec
add
bound
sbb
mov
repnz
add
addl
pusha
or
scas
js
add
sbb
xor
ja
add
inc
adc
adc
adc
mov
mov
xor
sub
scas
sub
or
movsl
clc
dec
xor
add
dec
out
cmp
loop
add
push
inc
cmpsb
sahf
std
aas
jmp
mov
or
xchg
ss
dec
sbb
jo
jnp
pop
xor
or
cmpl
and
xor
fildl
cmp
cmp
sub
jge
imul
sti
pop
test
adc
lea
sub
dec
inc
scas
or
inc
sub
push
movsb
dec
inc
sub
sub
clc
pop
cmp
dec
inc
and
xor
cmpsl
mov
sbb
add
test
push
imul
inc
cmp
les
sbb
jae
cmp
sub
ret
iret
add
xchg
push
pushf
inc
or
imul
and
cmp
sbb
mov
insl
jmp
loopne,pn
add
xor
testb
add
or
or
adc
and
add
scas
test
add
add
mov
add
data16
inc
mov
imul
adcb
lcall
rolb
or
push
insb
adcl
movsb
mov
call
or
or
sbb
push
sub
or
in
rol
add
repz
add
inc
adc
outsb
mov
push
and
mov
mov
cmp
cmpl
mov
movb
andb
xlat
dec
aaa
pop
push
cmp
orl
cld
sub
loopne
mov
and
mov
add
xlat
push
mov
arpl
mov
or
pop
pop
cli
sbb
lea
mov
add
enter
mov
pop
add
xor
mov
dec
movsl
sarb
int3
int3
fsubl
loop
xor
movd
add
add
push
fcomps
add
or
push
mov
jae
and
add
pop
adc
jmp
dec
mov
lea
sbb
add
mov
enter
mov
sub
decl
outsb
sub
cs
hlt
add
inc
push
adc
das
push
repz
test
sbb
loope
out
sahf
andl
rclb
lea
addl
add
mov
sub
sub
dec
add
enter
add
xchg
das
adc
sti
ret
loope
push
jb
xchg
nop
or
add
cltd
pop
andl
int3
les
fsubrs
sub
adc
and
add
test
add
mov
xchg
das
dec
push
lock
ret
xchg
sub
push
push
mov
pop
xor
pop
inc
data16
cmp
push
std
push
jle
sub
dec
or
mov
push
sub
stos
adc
hlt
clc
add
inc
add
in
inc
xorl
xor
pop
ja
mov
cmp
popf
xor
and
int3
andl
mov
pop
cmp
fstl
xchg
mov
mov
push
push
inc
dec
or
xchg
outsl
cmp
inc
cmpl
bound
jne
adc
xchg
or
das
in
dec
xor
xor
inc
and
dec
dec
jo
adcb
jo
pushf
push
loope
rclb
jbe
jmp
xchg
mov
jae
mov
xor
mov
ret
js
fld
jb
push
popa
pusha
sti
jae
lea
push
sub
sub
xor
push
aad
out
std
mov
pusha
shll
push
adcl
das
shrl
cli
testl
dec
mov
out
ret
mov
sub
add
lods
or
push
xchg
adc
int3
and
add
xor
mov
ret
inc
cmp
lcall
xchg
xchg
sub
iret
loopne
pop
pop
dec
add
cmp
or
and
cmp
xchg
add
test
xchg
adc
adc
incb
push
lods
lock
mov
adc
cmpl
icebp
sub
ret
mov
jecxz
or
je
jne
pushl
sub
scas
mov
jae
inc
jo
nop
fcmovnb
jae
cmp
add
pop
mov
pop
cld
xchg
es
sbb
inc
and
fadds
pop
xchg
sbb
or
fmuls
pop
mov
lahf
mov
dec
and
fisttpll
ret
mov
mov
push
ss
add
lret
imul
sahf
push
add
fistpl
sub
dec
pop
mov
nop
and
std
andb
test
xchg
pusha
lods
adc
rclb
int
dec
add
xchg
gs
sub
sarl
xor
jecxz
mov
loop
pop
bound
or
andl
test
pop
add
pop
or
cmp
dec
adc
add
imul
dec
nop
mov
or
add
jle
and
in
cmp
cmp
push
repnz
sub
js
lds
adc
or
mov
pop
stos
adc
adc
push
out
mov
push
or
push
cmp
inc
mov
test
inc
or
cmp
push
xchg
mov
out
mov
adc
leave
push
test
add
orl
push
jmp
lock
cwtl
xor
shlb
dec
imul
adc
mov
and
stos
int3
pop
mov
xchg
or
call
mov
sti
sub
iret
mov
into
add
xorl
adc
sti
xchg
and
pop
cmpl
popf
xor
dec
std
add
aam
sub
out
push
add
push
call
sub
inc
mov
js
pop
clc
test
je
test
xchg
jmp
or
jo
fsts
add
add
push
jmp
aaa
movsb
movsl
jo
dec
fwait
push
cmpl
push
or
pop
pop
jecxz
std
movsb
das
mov
add
jmp
cmp
aad
jg
or
push
push
lret
pop
std
movsb
dec
js
fdivr
ss
insb
cld
push
sub
sub
jmp
popa
xor
mov
sbb
add
pop
out
nop
dec
push
and
push
jecxz
sbb
fisubs
das
mov
test
shll
sbbl
shlb
movsb
xor
push
add
stos
mov
push
stc
in
or
pop
xchg
rorb
lret
xor
int
fisubrl
sbb
mov
sub
jo
cmp
and
mov
jne
jge
mov
in
inc
orb
dec
mov
sbb
or
int3
xor
mov
adc
pop
inc
sub
idivl
movsl
jo
stc
jmp
lods
stc
inc
xor
pop
add
movl
or
scas
mov
push
rcl
mov
inc
in
pop
pop
inc
mov
ss
inc
lods
adc
roll
jl
daa
or
add
xlat
cmpsl
ja
aas
push
ret
push
mov
and
aas
sbb
sbb
repz
mov
add
adc
cld
insb
xchg
lock
or
mov
dec
fstps
lock
dec
ret
push
push
fs
xor
pop
adc
test
xchg
mov
sub
add
mov
jmp
ret
xchg
and
cs
inc
jmp
lods
out
clc
adc
lods
lods
clc
popa
and
std
ficoml
imul
mov
call
fcoml
js
pop
push
scas
cmpsb
addl
js
jge
mov
sbb
mov
cmp
mov
pop
xchg
cmp
adc
pop
mov
bound
jge
push
add
jl
subl
into
sbb
jns
sbb
gs
mov
jb
push
lea
lea
es
xor
jmp
dec
and
js
or
mov
or
jne
add
test
push
aam
sub
or
sub
push
sub
push
std
fwait
into
xor
push
dec
add
inc
or
mov
add
or
hlt
hlt
shr
jb
cmpb
lock
shrb
and
and
int
and
jo
nop
adc
pop
lcall
cmp
in
jno
inc
mov
mov
add
mov
cmp
and
pop
push
loope
mov
mov
data16
jmp
into
out
push
loope
mov
xor
lock
iret
xor
cld
cmp
jmp
cmp
je
inc
fidivs
push
lock
cmp
outsl
push
rclb
xor
add
push
jbe
xchg
loopne
adc
cmp
jl
mov
inc
mov
imul
sbb
xor
cli
es
rorb
lea
add
mov
mov
sub
inc
sub
dec
dec
rolb
out
sarl
mov
dec
test
and
dec
adc
adc
shlb
inc
add
or
iret
jmp
insb
nop
fistpll
add
push
push
mov
movsb
jle
mov
xchg
addl
mov
xor
jg
xchg
test
push
or
gs
and
in
mov
lods
setb
pop
rorb
fsincos
aad
pop
lock
adc
push
add
sub
pushw
add
inc
dec
and
sbb
and
sbb
sbb
add
sub
sbb
dec
movsl
sub
in
mov
adc
push
aaa
and
dec
in
sbb
push
push
imul
js
push
add
popa
sub
jmp
pop
cmp
xor
addl
out
xchg
lock
mov
sub
xor
loop
or
push
outsb
push
mov
push
shrl
cmp
sbb
js
nop
inc
in
mov
sbb
jmp
enter
or
fsub
loope
cmpsb
out
pop
push
push
lods
cmp
lcall
mov
scas
xor
mov
adc
push
xchg
lock
sahf
sbb
scas
femms
lods
pop
loop
stos
xchg
dec
cmp
stc
out
xor
imul
add
xor
div
test
mov
aaa
rcr
notl
xchg
jne
andb
cmp
popf
aam
cmp
sbb
ss
xor
inc
inc
cmp
int
inc
or
dec
or
pop
mov
jp
mov
jne
mov
xor
cmp
dec
cltd
pop
loop
jo
test
sbb
sub
loop
out
rolb
pop
lahf
push
add
cmp
push
lea
cmp
ljmp
inc
fsubr
add
or
fwait
sbb
xchg
fcoms
pushf
pusha
or
pop
or
mov
mov
daa
dec
inc
xchg
testl
inc
push
xor
orl
test
movsb
inc
sub
mov
add
xor
cmp
sub
inc
jnp
xchg
mov
push
pop
push
push
cmp
ficompl
int3
mov
pop
sti
adc
imul
push
loopne
shrl
sahf
inc
push
sbb
mov
test
scas
flds
test
fbstp
aam
pop
mov
gs
jg
cmp
dec
or
and
xor
inc
pop
popa
mov
push
mov
push
out
rcll
cmp
push
sbb
push
movsl
dec
icebp
cmp
mov
cmpb
dec
hlt
mov
ss
sbb
adc
adc
push
rolb
and
rcrb
mov
mov
pop
push
dec
xorl
cmp
stc
dec
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
clc
es
enter
jne
scas
cld
xor
xor
mov
sbb
cli
jmp
mov
and
pop
or
shrb
cwtl
xor
cmp
je
add
dec
xchg
in
push
or
lret
mov
fs
shl
popa
mov
pop
aam
pushf
mov
or
fsubs
out
cmp
pop
insl
addr16
pop
xchg
sahf
mov
xchg
call
outsb
jnp
push
loop
ret
cmp
push
cmp
inc
sti
arpl
je
rorb
pop
mov
out
push
jb
movsb
or
pop
sbb
sbb
or
cmc
push
loop
outsb
insl
hlt
cmp
loopne
mov
and
sbb
xorb
inc
cmpsb
pusha
mov
jl
test
adc
and
adc
or
filds
jle
lea
mov
inc
loopne
pop
add
or
orb
or
mov
add
js
sub
lahf
repnz
lock
cmp
or
and
mov
inc
adc
shl
and
pop
shr
mov
and
pop
mov
fsubrs
movsb
xor
jnp
dec
push
jb
push
fstpl
push
or
add
aas
fildll
js
dec
fiadds
dec
popa
arpl
mov
cmp
push
sti
sahf
mov
mov
mov
adc
inc
aam
push
pop
pop
jle
dec
shll
push
shll
js
mov
int
test
dec
cmc
es
lret
cwtl
cmp
sti
or
push
sub
cmpsb
pop
jbe
in
testl
scas
push
push
xor
push
xor
sub
mov
adc
and
pop
movb
movsb
sahf
mov
sbb
mov
xor
sbb
xchg
rcl
pusha
aas
jae
fadds
add
mov
sbb
xor
add
jo
push
fs
push
push
pop
xor
cmp
clc
mulb
push
jp
or
test
subl
mov
cmp
or
mov
out
bound
and
pop
es
dec
in
jne
cmp
xchg
xor
inc
jmp
addps
add
lock
add
loopne
mov
jne
cs
insb
insb
jo
or
xchg
mov
cmp
mov
push
iret
add
xor
jne
sbb
mov
daa
lods
pusha
dec
cmp
call
sbb
mov
push
or
aam
mov
xchg
xor
sar
xor
xor
adc
iret
in
push
aad
lahf
add
out
and
pusha
sbbl
pop
sub
test
and
xchg
add
add
pusha
and
pop
push
cmpsb
cmp
or
stc
xor
out
and
das
xorl
mov
inc
sbb
pop
jne
orl
dec
or
mov
imul
dec
pop
dec
test
jo
fbld
or
test
lret
jne
add
das
call
xchg
stc
fldl
sar
lahf
dec
dec
mov
lods
cmp
or
repnz
sahf
fnstcw
add
imul
xor
insl
sub
mov
adc
adc
inc
and
pop
mov
into
adc
data16
or
push
adc
je
xor
push
xor
jb
inc
inc
imul
lcall
mov
push
dec
mov
lock
aas
add
ljmp
js
add
add
invd
mov
mov
repnz
and
gs
mov
or
push
push
inc
and
pop
fidivs
pop
sub
mov
ds
and
jo
xchg
hlt
stos
pusha
cli
out
fidivrs
push
pusha
adc
mov
hlt
lods
pop
sub
push
xchg
mov
mov
stos
sub
rorl
cmovo
cltd
inc
std
cmpsb
or
mov
loope
sub
gs
int3
adc
fsubrl
sti
insl
adc
add
adc
lret
sub
arpl
test
jecxz
shll
insl
test
lods
sub
enter
mov
and
push
mov
push
sub
or
lock
adc
lea
pusha
adc
mov
or
cmp
pushl
and
mov
xchg
fdivp
jp
jno
orb
inc
push
loopne
int3
lock
mov
or
inc
dec
inc
lock
fcoml
push
inc
test
sbb
je
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
pop
scas
out
movsb
xor
push
mov
sub
sbb
or
js
iret
mov
pushf
cmp
cli
je
popf
add
sbb
xchg
cwtl
push
inc
inc
sbb
adc
push
mov
hlt
sti
push
sub
inc
and
inc
adcb
sbb
or
dec
roll
add
inc
adc
andb
pop
enter
lock
jp
es
mov
jnp
jmp
jmp
jmp
push
fistps
adc
sbb
cmp
addl
jnp
in
push
mov
lret
add
push
and
mov
xchg
popf
sbbb
sub
sub
xor
sub
push
lods
cmp
xor
cld
sub
sahf
push
flds
pop
mov
mov
in
mov
popa
inc
jo
sbb
dec
add
sbb
scas
xor
fs
lods
lods
sub
adc
pop
lock
and
jle
xlat
call
push
and
shll
mov
push
adcb
inc
cmp
mov
push
xchg
jns
in
mov
cmp
jo
popa
add
dec
test
cmp
cs
or
add
das
xor
inc
adc
outsb
les
je
xlat
cmp
test
push
inc
pop
je
dec
pop
or
int
fistl
fidivrs
mov
sub
sub
mov
fwait
sbb
xchg
aaa
sbb
cmp
data16
mov
dec
push
lea
push
pop
cwtl
push
out
rclb
add
sbb
dec
push
or
xor
xor
rorb
lods
and
adc
pop
fcoms
push
imul
adc
gs
add
popa
add
mov
xorb
xchg
icebp
and
jb
clc
jns
pop
cwtl
fcomps
jns
lret
or
xchg
imul
jb
fdiv
add
fmull
cmp
mov
repnz
inc
adc
add
or
add
jo
cmp
stos
cltd
mov
ljmp
cmovo
push
inc
ss
jge
outsb
fs
cmpsb
popa
js
into
in
outsl
pusha
ret
jge
int3
mov
inc
xchg
pop
sbb
sbb
pop
mov
inc
mov
inc
and
or
xchg
adc
or
mov
pop
add
test
xor
ret
push
or
pop
out
or
out
jmp
arpl
or
xchg
push
dec
inc
call
test
pop
adc
lcall
out
xor
mov
adc
cs
cltd
stos
xor
push
test
jbe
lea
and
adc
cli
sub
and
jecxz
and
sbb
cltd
mov
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
dec
inc
lods
out
inc
mov
mov
dec
jno
pushf
aad
push
subb
nop
mov
gs
mov
mov
nop
fildl
mov
mov
and
rcrb
adc
inc
pop
sbb
xchg
jp
xor
xor
dec
dec
test
pop
mov
movsl
add
mov
jl
pop
cmovp
and
insb
lea
push
adc
daa
add
and
addb
add
xor
push
cmpsl
mov
pop
out
xchg
or
jb
orl
insl
ret
xor
or
mov
mov
push
add
insb
stos
sbb
add
dec
sbb
fdivp
outsb
ficomps
sub
or
cmc
inc
lret
aas
and
ja
movsl
sub
movsb
jns
pop
dec
and
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
les
fsubrs
or
and
xor
add
call
jb
inc
fildll
sub
leave
or
inc
push
jl
and
or
xchg
mov
or
insb
fstpt
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
or
inc
jg
pop
rorl
dec
sti
hlt
lods
xor
jno
push
adc
js
pop
lret
push
or
ds
je
in
cmp
push
ljmp
push
out
pop
xchg
add
jp
sbb
add
or
dec
outsb
or
push
and
pop
call
adc
add
add
enter
cmp
add
or
imul
jb
add
sbb
sub
xor
call
and
push
mov
cmpsl
add
imul
andb
xlat
sbb
mov
fbstp
xchg
sub
mov
xor
push
or
and
push
aam
jbe
push
inc
pusha
and
xchg
cwtl
sarl
pushf
adc
jo
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
pusha
dec
push
push
fidivl
movsb
jns
ss
inc
xor
dec
xchg
pusha
xor
mov
and
fwait
add
mov
push
pop
enter
add
sbb
cld
adc
js
mov
push
mov
fmuls
add
push
inc
xor
shr
cmp
cmp
add
shrl
dec
or
ljmp
pusha
ss
inc
push
dec
pop
imul
pusha
test
push
fildll
mov
inc
in
jmp
sub
xor
ret
mov
lods
stc
inc
test
js
aas
push
sbb
jmp
pushl
jmp
push
pop
mov
pop
add
push
cmpb
notl
out
jae
dec
push
inc
ds
sub
sbbb
xor
ficompl
pop
mov
popa
mov
mov
sub
mov
jl
andl
mov
out
adc
ret
push
fs
mov
outsb
inc
dec
xor
pop
jae
and
and
jecxz
cmp
int3
in
mov
push
push
adc
gs
scas
popa
stos
jo
inc
xor
cmpsl
shr
adc
fists
movsb
push
mov
and
jbe
jo
or
cmpsl
mov
out
popa
not
lods
push
es
decb
xlat
rclb
jecxz
pusha
pop
movsb
jl
and
xchg
jmp
xchg
loope
loop
sbb
je
push
pop
mov
sub
xor
lock
sbb
pop
jmp
and
in
pop
mov
adc
outsb
js
das
pop
bound
push
cs
xor
inc
push
push
or
jmp
mov
push
xor
inc
jno
lods
or
sub
pop
pop
sub
orl
push
push
xchg
pop
add
sbb
push
sub
bound
pop
aam
mov
add
cmp
cmp
mov
xor
add
mov
testb
je
sbb
mov
push
or
lock
mov
dec
jl
loope
xor
push
sar
sbb
adc
or
inc
pusha
in
inc
push
subl
std
or
rorb
inc
mov
arpl
adc
xchg
lcall
mov
in
cmp
test
sbb
roll
or
xlat
add
or
add
inc
push
jo
out
push
pop
fisttpl
popa
popa
add
sarl
aaa
add
or
add
mov
ret
rcr
xchg
mov
pop
loopne
mov
pop
arpl
mov
incb
pop
add
loopne
jl
test
push
xor
scas
mov
es
jmp
push
cmovle
shrb
mov
mov
data16
push
mov
push
xchg
mov
es
mov
lret
out
neg
movsl
push
inc
cld
adc
sub
push
push
jo
dec
movsb
or
mov
es
lret
push
mov
test
in
push
pop
push
push
push
inc
and
decl
cmp
add
add
sbb
ljmp
xchg
push
stc
mov
push
in
xchg
outsl
mov
push
sub
ret
sub
push
sub
lds
xor
or
add
sbb
pop
cli
jecxz
add
mov
push
push
shlb
addl
aas
movsl
add
xchg
and
xor
lods
fs
mov
xchg
js
add
rolb
xlat
xor
adc
xchg
fdivrs
movsb
stos
dec
mov
or
sub
inc
arpl
xchg
adc
add
aam
adc
cmp
or
jae
sti
and
add
test
adc
inc
outsb
or
inc
movsl
or
aam
dec
test
adc
mov
or
in
clc
push
test
adcb
repnz
cmpsb
pop
sbb
arpl
aaa
or
xor
cmp
gs
mov
cmpsb
sbb
push
mov
dec
mov
outsl
push
or
jae
push
mov
add
js
flds
mov
adc
jae
jno
xor
pop
orl
mov
pop
inc
adc
insb
idivl
dec
rorb
bound
xor
add
push
add
dec
lea
int3
movsb
mov
gs
mov
nop
adc
sbb
xchg
push
call
cmp
nop
mov
sbb
add
test
dec
cmp
sti
mov
sarb
xchg
ds
mov
jp
push
call
xchg
stos
push
push
subl
push
rcrb
cltd
pop
inc
cli
mov
push
test
dec
cwtl
add
add
test
jl
sbb
add
cmp
lods
lcall
pop
int3
and
mov
movb
insl
pushf
or
sbb
stc
add
inc
cmp
insb
shr
inc
add
in
sbb
push
or
ljmp
and
adc
jecxz
clc
add
push
xchg
and
pusha
insb
std
cltd
shlb
xchg
and
dec
or
test
repz
in
cwtl
cwtl
imul
jo
add
fsubs
mov
stos
or
hlt
testb
sbb
gs
sbb
xchg
scas
mov
push
pop
adc
add
loopne
lock
push
in
push
test
pop
jns
adc
shlb
shll
push
mov
out
jno
je
enter
mov
pop
pop
push
push
mov
xor
jno
jo
aam
rolb
cmp
push
sbb
push
fsubrs
adc
jge
rclb
sahf
fdivs
add
sub
imul
pop
out
xor
cltd
enter
ds
loopne
jmp
popf
dec
sub
mov
test
insb
insb
lcall
cli
push
popa
jno
pop
jne
jg
psrld
fdivrs
adc
jg
inc
mov
adc
mov
xchg
xchg
xor
je
loopne
mov
cmp
dec
jne
loopne
add
ss
cwtl
adc
or
into
mov
fldpi
push
push
dec
sbb
pop
mov
ficomps
pop
mov
lea
and
jle
aas
inc
or
add
xor
es
addr16
lods
add
add
cmp
jbe
adc
mov
cmp
iret
sub
mov
cmp
cltd
nop
test
adc
xor
hlt
sti
dec
sbb
dec
xchg
mov
adc
pop
mov
repnz
in
sub
out
sbb
shrb
in
cwtl
insb
xor
mov
adc
mov
daa
dec
clc
push
push
mov
gs
add
cmp
adc
scas
cmp
fsts
add
testb
aaa
popa
inc
in
in
adc
in
lea
out
jo
or
es
push
lcall
sub
push
mov
jns
pop
sbb
adcb
stos
pop
or
inc
mov
or
out
fyl2x
and
add
inc
mov
and
cmp
in
adc
jbe
mov
les
adcb
les
cmc
ficoml
movb
push
xchg
adcb
aam
clc
push
pusha
je
lock
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
inc
pop
ljmp
jp
subb
or
adc
mov
sbb
std
ret
loopne
loop
js
add
cs
sub
add
and
test
sbb
into
test
sbb
pusha
lock
push
pushf
out
int3
out
pop
testl
pop
inc
pop
xchg
lock
xor
in
and
testl
mov
das
inc
jle
xor
or
mov
neg
ret
shl
ret
and
push
adc
mov
je
xchg
and
fcoms
loopne
and
adc
xchg
or
scas
and
jo
push
xchg
xor
and
dec
js
movl
pop
pop
push
push
pop
or
and
or
dec
data16
insb
xor
pop
or
jp
lock
dec
daa
bound
or
add
push
rcrb
testl
xchg
push
loopne
or
mov
or
mov
sub
shrl
add
test
or
push
loope
xchg
js
lock
push
mov
cmp
push
add
imul
mov
push
sbb
and
aad
adc
and
mov
jns
mov
pop
push
aas
mov
xchg
adc
stos
sti
pop
sub
loopne
js
jno
cmpsl
adc
or
lahf
addl
in
daa
and
in
xor
in
aaa
cmp
adc
xor
lea
sub
push
adc
subl
mov
or
lock
pop
ja
add
push
cli
pop
cld
push
adc
dec
es
in
cmp
inc
shl
adc
adc
mov
or
lcall
repnz
fsubs
scas
pop
or
cmp
loop
push
and
nop
movsl
inc
add
fs
jo
out
andl
dec
out
sti
out
cmp
ja
je
or
je
or
sub
sub
sti
das
adc
mov
cmp
outsl
stos
das
in
adc
rorl
or
add
or
jne
sahf
push
arpl
cmp
push
jmp
cmp
sub
cmpsl
push
adc
adc
dec
push
push
cmp
adc
rcrb
mov
or
dec
cmp
adcl
jbe
lcall
movsb
dec
sbb
push
add
or
aam
mov
add
xchg
loop
inc
adc
sub
inc
mov
ds
es
test
dec
pop
js
sub
adc
fsubr
adc
rcll
popa
pop
mov
repnz
mov
call
aad
sub
popa
insl
ljmp
dec
pop
push
ret
mov
xchg
or
jno
pop
dec
je
sub
xchg
mov
out
or
addb
adc
repnz
jmp
addl
adc
mov
test
mov
into
daa
or
ret
push
adc
rorb
das
inc
imul
adc
das
mov
insl
dec
insl
popa
stos
das
out
or
jbe
mov
inc
sbb
and
or
and
push
and
and
add
push
stos
cmp
test
or
lods
pop
and
cmp
or
sbb
stos
js
mov
pop
fsubl
xor
adc
jg
out
je
push
icebp
or
xchg
sar
das
aam
or
fimull
push
xor
mov
xor
int3
adc
dec
push
pop
mov
cmp
push
or
faddl
adc
add
das
push
and
daa
push
or
sti
xor
imul
push
inc
add
push
test
mov
xchg
rcrb
mov
dec
loopne
das
add
cmpl
jae
mov
pop
nop
daa
inc
add
add
add
and
jns
sbb
sbb
fsubr
rolb
scas
in
lret
js
mov
addl
cmp
cs
sub
aam
cmp
js
pop
inc
mov
pop
mov
cmp
add
fcoml
loope
jns
fsubrp
push
xor
cmpb
ret
cmp
push
mov
fsubrs
movsb
push
les
insb
bound
sub
and
mov
scas
mov
xchg
leave
cwtl
adc
jl
mov
pop
cmp
inc
loop
pushf
sarl
adc
or
aam
icebp
lock
jo
mov
cltd
xor
push
xchg
inc
mov
std
inc
add
loope
sbb
mov
iret
and
sbb
add
add
leave
jne
insl
xchg
mov
cmp
fcmove
repz
or
adc
push
cmp
dec
pop
repnz
sbb
inc
sub
mov
je
das
insl
cmpb
xor
es
mov
fisubrs
or
inc
push
test
sbb
sub
mov
les
push
push
faddl
daa
shrb
popf
push
xor
loop
gs
aam
ja
push
lret
mov
add
xchg
jge
lock
jae
movsl
call
sub
clc
test
in
ljmpw
stos
inc
pop
mov
jo
mov
sbb
push
xchg
pop
test
lahf
push
and
xchg
test
outsl
cmpsb
jns
add
dec
je
daa
xorl
fmull
mov
popf
or
std
loopne
add
pop
test
add
rcr
stc
or
mov
mov
rcrb
rclb
and
mov
or
push
push
and
sbb
mov
add
push
sbb
adc
arpl
outsl
add
and
push
cmpsl
or
and
or
dec
pusha
ja
mov
lock
xchg
bound
sahf
dec
push
loop
aas
add
xor
mov
adc
xchg
das
xchg
sbb
sahf
jb
xchg
or
inc
int3
cmpsl
imul
inc
jp
push
xchg
add
or
enter
leave
push
stc
mov
je
rcl
add
in
mov
and
mov
arpl
push
sub
xor
push
pshufw
roll
int
lcall
push
aaa
in
mov
addr16
dec
cmp
hlt
and
inc
push
ret
cld
or
mov
js
sub
movsb
pop
adc
mov
cltd
cld
jle
ret
aaa
sarl
nop
cmp
sbb
leave
ret
jne
mov
and
or
push
mov
pop
mov
mov
pop
lea
or
pop
adc
cmp
jo
push
and
or
mov
inc
pop
rol
sub
lods
out
and
adc
push
pop
inc
xchg
lods
dec
xchg
ret
or
jl
xor
push
mov
adc
call
pusha
xchg
xchg
sub
pop
adc
shlb
push
pop
loope
fs
mov
mov
or
mov
mov
lock
test
ret
xor
data16
fisubs
movsb
or
sub
into
add
das
aaa
addl
cmpsl
xor
insb
fiaddl
cmp
jne
xor
adc
int3
xor
jo
mov
fs
fldt
test
xchg
sbb
call
sbbl
cmpl
cmp
mov
jo
sti
jge
adc
fwait
cs
and
jge
shll
outsl
sarb
sbb
push
inc
inc
cmp
and
push
sbb
jmp
popa
pusha
out
pushf
std
and
adc
cmpsb
sub
add
adc
and
hlt
sbb
daa
pushf
imul
dec
les
pop
test
xchg
cltd
xor
sub
cmp
cmc
add
jle
ljmp
adc
lods
sub
inc
and
fistl
and
notb
testb
sub
sbb
cltd
xor
jle
sbb
inc
fcompl
pop
movsl
das
ror
or
fwait
mov
ficompl
aam
popf
xchg
mov
jl
test
cli
test
paddusb
scas
and
shl
add
stos
push
sub
push
pop
jb
add
sbbl
xor
mov
mov
inc
sub
adc
or
adc
mov
leave
push
adc
sbb
pushf
lods
jbe
int3
sub
xor
dec
sarb
pop
cmp
cmpsl
repnz
pop
xor
jmp
in
addr16
cmp
loope
dec
lods
push
or
movsl
repz
lock
mov
cltd
loope
lock
or
jmp
cmp
fcomp
div
add
imul
arpl
in
mov
mov
add
push
pop
lret
roll
fs
dec
or
inc
add
or
or
daa
cmp
imul
jg
xor
lret
cmp
je
imul
push
mov
popf
or
fcomps
jle
dec
mov
addb
stc
cmpsl
addb
or
sti
and
push
hlt
cmc
mov
aas
shll
push
inc
dec
dec
xchg
sub
je
push
in
push
dec
les
js
or
add
lock
mov
add
mov
cmpsl
xchg
inc
sti
fisubs
cld
jns
mov
jg
sti
adc
mov
dec
sbb
fwait
leave
ljmp
add
ja
rcrb
stos
sub
cmp
cmc
xor
jle
in
inc
xchg
push
xchg
call
data16
mov
pop
mov
shrl
pop
inc
loop
jp
cld
popa
mov
push
dec
mov
imul
jnp
cmp
enter
or
xchg
icebp
mov
pop
shr
adc
stos
and
das
pop
or
push
jb
or
inc
bound
and
cmpsb
mov
sbb
inc
ja
adc
or
cmp
dec
or
je
adc
repz
jge
and
in
sbb
jne
sbb
xchg
sbb
sbb
fwait
inc
and
and
and
cmp
imul
sbb
sub
inc
cmpb
lea
xchg
mov
add
push
or
mov
pop
rcll
nop
jae
xor
mov
xchg
xor
xorb
int
in
cmp
cmp
adc
inc
or
cmp
xor
and
jne
dec
fdivl
xor
add
jp
inc
inc
push
gs
pusha
dec
mov
orl
dec
outsl
push
xor
cwtl
inc
ss
dec
jmp
push
xchg
push
fistpl
push
jp
push
fnstcw
scas
mov
mov
inc
pushf
negl
push
jo
dec
adc
push
fld
dec
cmp
call
mov
and
inc
cwtl
add
daa
cmp
push
adc
in
xchg
and
hlt
mov
push
dec
ret
push
scas
sbb
pop
adc
dec
dec
ss
pop
lods
push
js
sbb
jg
pop
inc
sub
push
data16
addr16
ss
and
push
cmpsl
pushf
adc
movsl
movsl
push
sbb
jo
and
call
xor
push
pop
arpl
jge
cmp
loope
rclb
or
pop
jg
fcmovnu
sbb
push
inc
lea
xchg
or
inc
repnz
cmpsl
dec
fsubrl
ret
imul
xlat
mov
pop
cmp
hlt
cltd
fdivl
enter
in
mov
xor
add
jle
in
push
xchg
inc
dec
pop
lcall
mov
pop
in
push
jge
testb
or
or
stos
popf
cmpl
es
push
mov
aas
bswap
and
loopne
loopne
add
or
and
sub
rcll
in
popa
cmp
jb
stos
mov
incl
jne
cmc
push
rdtsc
repnz
pop
pop
mov
inc
xchg
out
sbb
push
sbb
popf
add
sub
mov
movsb
push
xor
adc
loop
or
add
inc
jl
push
int3
or
jne
movsl
daa
mov
sub
test
call
xor
mov
loopne
jno
imul
imul
in
sbb
push
adc
mov
jne
or
add
mov
adc
loopne
xchg
shlb
shlb
repz
jb
test
insl
movsb
dec
sahf
aam
scas
fcomp
and
ret
aam
fisttps
lahf
xor
loopne
rorl
jge
arpl
test
and
pop
sub
jnp
inc
adc
mov
sahf
add
add
xchg
add
out
adcb
add
push
insl
pusha
fcomps
sbb
xlat
add
inc
pop
adc
dec
or
fwait
xchg
add
pop
cmp
jne
sbb
jl
pop
mov
adc
add
es
pop
xchg
int
and
adcl
xor
testl
jmp
push
jb
adc
or
int3
and
into
rcr
jl
jb
inc
js
or
mov
sti
test
dec
and
push
and
jecxz
jmp
xchg
fdivs
cmp
fsubr
or
sub
and
pop
lret
push
push
call
leave
insl
push
imul
adc
enter
repz
ret
xor
pop
push
inc
push
sub
mov
xchg
inc
mov
mov
xchg
rcrl
clc
sub
jge
repz
js
adc
dec
rorl
mov
dec
jl
adc
loopne
enter
enter
mov
add
pop
outsb
adc
loop
subl
and
je
adc
cmc
add
jecxz,pn
jns
jl
sbb
push
pop
xor
pop
outsl
daa
or
in
xchg
lret
sbb
adc
sub
sbb
add
sub
sub
adcl
add
arpl
push
xor
insb
mov
cmp
mov
ljmp
jbe
add
xor
push
leave
push
xor
jns
xor
jnp
mov
nop
cmp
imul
cmp
jno
call
add
leave
les
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
push
jb
movsb
push
jns
push
and
or
push
or
mov
add
mov
lret
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
movsb
xchg
lock
jmp
adc
or
and
lret
xchg
rcll
cmpl
sbb
or
sub
add
enter
stos
inc
shrl
or
or
pusha
adc
stos
push
cmp
and
aad
fildl
fs
pop
or
adc
push
and
lock
inc
push
cs
pop
ja
aaa
aas
ja
add
pop
inc
loopne
cmpb
mov
data16
jecxz
ror
mov
dec
and
and
and
movsb
fwait
mov
dec
popa
arpl
sbb
xor
gs
decl
add
shrb
ret
and
push
jb
cmp
sub
fiaddl
inc
loope
jne
es
or
cmp
mov
xor
inc
lret
push
xlat
adcb
lea
mov
jnp
fdiv
push
add
mov
push
push
adc
sub
in
je
daa
inc
xor
data16
or
mov
jb
pop
mov
notb
pop
shlb
mov
and
aam
nop
repnz
add
das
mov
pusha
and
outsl
loopne
or
sub
clc
sub
push
inc
sbb
push
adc
add
iret
mov
dec
sbb
mov
xor
mov
pop
int3
mov
rolb
inc
push
in
mov
inc
cltd
loopne
inc
stos
add
test
enter
hlt
call
dec
push
ficoms
lea
mov
pop
dec
xor
rcrb
xor
add
xor
dec
adc
lahf
pop
sbb
or
fsts
or
cmp
adc
mov
cmp
add
loopne
mov
in
pop
mov
fwait
iret
lods
inc
pop
ret
outsl
aaa
je
rcl
fwait
arpl
shll
addr16
stos
stos
push
dec
xchg
push
inc
imul
mov
inc
ror
cmp
das
inc
testl
rorb
sub
xchg
loope
dec
add
inc
mov
mov
out
fidivrs
mov
test
iret
nop
push
cmp
test
sub
jbe
fdivl
xor
test
xchg
mov
mov
mov
mov
push
xchg
rclb
test
ret
in
cltd
dec
add
cmp
adc
adc
push
cmp
sbb
stos
sti
mov
pusha
or
cltd
adcl
pop
ret
inc
aaa
sbb
in
xor
sbbb
sbb
sub
dec
les
pusha
or
jae
mov
mov
movsl
xor
stos
sbb
les
cmpsl
repz
or
nop
ds
mov
pop
xor
popa
adc
mov
mov
subb
adcb
in
sahf
je
and
aas
lods
or
push
push
pushl
add
xchg
xchg
sub
push
rcll
pop
push
push
fisttpll
push
imul
es
dec
sbb
or
shrl
and
or
pop
sbb
dec
adc
jecxz
roll
xchg
in
stos
cmp
clc
rcll
pop
sbb
std
ljmp
cld
jge
scas
push
call
clc
pop
cwtl
mov
jo
pop
add
sbb
inc
and
lea
dec
jp
fcoms
imul
cmp
jb
xor
sbb
fwait
mov
add
daa
or
popa
call
fwait
es
cmc
leave
mov
int
outsb
cmp
and
sahf
or
push
mov
syscall
inc
push
inc
xor
mov
inc
jno
add
sbb
jge
push
inc
mov
insb
pop
push
sti
jl
test
ss
sahf
jg
ljmp
or
ret
mov
xchg
sbb
loop
cltd
pop
mov
sub
loope
out
push
mov
adc
test
jle
dec
add
jmp
sbb
xchg
call
fldl2t
sub
push
sbb
out
lock
sub
das
test
in
xor
push
lds
movsb
pop
inc
rclb
xchg
ss
sub
jge
aaa
mov
or
or
das
das
sub
xor
xor
mov
xchg
sub
inc
pop
dec
jl
rolb
int3
inc
and
or
shl
nop
lea
add
jg
or
inc
add
mov
lds
in
pop
lret
aas
pop
mov
inc
mov
sarb
dec
push
decl
dec
jno
jne
cli
lcall
bound
lea
out
add
and
cmc
pushf
lea
test
lock
cmp
xor
sbb
add
dec
scas
insl
flds
push
mov
and
cwtl
mov
jnp
inc
push
pop
xchg
or
int
jmp
fs
or
push
fwait
push
inc
ss
sbb
mov
fwait
pop
push
sahf
inc
add
push
mov
add
mov
mov
dec
insb
std
in
adc
jb
arpl
aam
adc
mov
add
mov
push
addb
or
xchg
inc
out
cmp
add
test
icebp
push
jp
and
xor
xchg
sub
mov
and
inc
push
call
stos
dec
sub
adc
or
shlb
and
hlt
xor
or
xor
or
daa
mov
lods
sub
sbb
inc
incb
rorl
xrelease
adc
pop
iret
push
mov
mov
mov
or
sbb
jmp
aaa
mov
jae
int
and
loop
push
jns
sbb
clc
lods
push
mov
mov
adc
pop
pop
push
push
mov
jae
push
mov
xchg
mov
cmpsb
pop
xchg
mov
xlat
push
and
push
mov
push
mov
js
push
sbb
adc
cwtl
or
je
lea
aas
adc
sub
mov
push
inc
xor
imulb
int3
mov
and
push
call
sub
sti
insl
xor
mov
jno
and
cmp
aam
xor
repnz
out
enter
call
jnp
repnz
scas
push
flds
pop
ljmp
adc
lret
mov
add
jnp
mov
adc
push
push
movsl
cmpsl
xchg
mov
rclb
adc
and
sbb
mov
xor
dec
push
push
movsl
push
xor
add
mov
or
xchg
pushf
ret
pusha
push
popa
sbb
adc
and
pop
mov
mov
adc
stos
lea
les
loopne
adc
sub
fs
mov
adc
bound
cmpsl
jbe
push
cli
mov
sub
inc
sar
add
ds
loopne
xor
roll
inc
mov
and
sarb
xchg
in
das
sub
loopne
mov
add
add
push
loopne
push
sbb
loop
and
inc
add
xchg
dec
addb
push
test
sbbb
xor
pop
notb
xor
fwait
mov
ret
pop
jno
lea
subb
addb
inc
mov
adc
add
fimuls
nop
or
in
mov
dec
and
pop
mov
inc
adc
out
popa
sbb
pop
and
sub
or
bound
push
in
mov
inc
xor
imul
test
cmp
mov
scas
inc
cmp
addb
sbb
xor
adc
mov
adc
push
adc
rol
add
aaa
add
or
add
rcrb
cmp
mov
dec
mov
and
bound
ret
sub
jecxz
pusha
xor
in
jbe
sbb
inc
pop
sbb
jo
mov
mov
mov
or
cmp
sbb
ret
sub
add
popa
add
jle
sub
adc
pop
icebp
cs
or
push
mov
dec
mov
rcll
sahf
call
outsl
mov
push
xchg
dec
adc
loope
pop
inc
ret
adc
ud2
and
rol
mov
ljmp
cmp
jecxz
hlt
pop
add
xor
inc
jecxz
push
mov
push
push
pop
or
pop
adc
cmp
lea
leave
cmp
dec
sbb
or
subl
or
mov
push
les
or
pushf
sbb
push
inc
inc
pop
int
or
sbb
push
call
pop
loop
xor
mov
stos
adc
adc
fwait
jnp
mov
orb
mov
imull
add
jne
sub
outsb
shll
sbb
incb
mov
cmp
inc
dec
push
mov
jb
ja
mov
xor
lret
idivb
dec
hlt
jae
or
add
jo
fs
xor
aad
push
add
xchg
push
mov
mov
mov
or
lods
push
rclb
sub
jno
and
adc
rclb
sub
sub
stos
xchg
nop
add
or
mulb
cmp
xor
aaa
sub
xlat
xor
sub
loopne
arpl
mov
aas
pop
and
jo
pusha
or
nop
lea
xchg
dec
sbb
sbb
pop
clc
xchg
subl
xchg
fists
mov
mov
or
cmp
ja
and
sahf
repz
fldt
dec
or
mov
ja
mov
int3
mov
jo
mov
and
adc
or
mov
and
mov
mov
or
push
mov
or
fists
cmp
xchg
xor
mov
fs
sub
xor
jb
mov
pushf
mov
decb
pusha
ljmp
ret
int
push
dec
adc
mov
sub
adc
loopne
jmp
pop
mov
arpl
or
movsl
adcb
cmp
punpckhwd
inc
or
and
jge
gs
dec
int3
shlb
std
push
test
test
out
mov
fwait
mov
inc
aas
add
inc
xchg
loopne
and
pop
enter
in
add
adc
add
nop
es
sub
nop
add
pusha
daa
nop
add
nop
add
mov
sub
jns
movsb
or
in
xor
xor
aad
inc
pop
scas
cmp
leave
xchg
add
inc
push
mov
xor
or
xor
mov
mov
mov
sbb
lea
leave
jmp
or
and
inc
cld
or
out
push
adc
pop
add
sbbl
cmp
adc
fxch
inc
fistps
or
dec
sbb
sbb
inc
sub
push
mov
xchg
or
pop
lods
pusha
sbb
add
lret
lds
or
mov
and
jle
pop
insl
mov
add
hlt
push
js
mov
jo
mov
mov
xchg
cwtl
js
jns
adc
scas
lea
mov
jl
cmpb
dec
xchg
or
frstor
cs
movsb
fldenv
xor
shl
or
push
xor
cmp
fistpl
mov
ds
fimuls
enter
dec
repz
cwtl
xor
loopne
in
imul
cmp
sbb
add
mov
add
in
orb
pop
mov
jbe
push
mov
add
push
and
mov
jbe
daa
or
xchg
xchg
outsl
jo
xchg
jne
add
loopne
mov
arpl
popf
adc
or
mov
in
push
mov
xchg
jl
xchg
mov
mov
sub
lret
lock
cmp
xor
fcoms
push
xchg
xchg
mov
cmp
jne
or
pop
les
aad
loopne
daa
loop
nop
and
hlt
imul
push
sti
fdivrs
lock
adc
jo
mov
mov
add
push
mov
mov
or
scas
xchg
inc
cmp
xchg
push
inc
add
adc
mov
xor
pop
mov
adcl
adc
addb
jbe
or
jbe
pushf
mov
add
dec
les
jne
adc
push
addl
mov
into
push
stc
add
push
cs
xchg
out
dec
xor
jb
adc
pop
jns
add
mov
sbb
cmp
adc
or
jmp
popa
fadd
pop
add
and
mov
push
addr16
inc
gs
ret
mov
pop
dec
add
jne
leave
cmp
sub
xchg
sbb
sub
cltd
aam
jmp
mov
inc
rorb
dec
inc
add
cmp
cltd
lods
sub
xchg
lods
arpl
dec
dec
jle
insb
mov
inc
mov
lock
xlat
sbb
sbb
outsb
add
mov
sbbb
fcmovnb
or
sbb
inc
pop
sbb
fwait
add
or
push
dec
sub
sub
mov
mov
jp
loopne
mov
ret
pop
sahf
aam
mov
rcr
in
lock
inc
stos
call
arpl
push
mov
push
jno
lock
call
jge
cmp
loop
cmp
sti
and
in
jecxz
mov
loopne
xor
pop
push
jmp
and
add
sub
rcrl
je,pt
pop
jge
dec
push
sub
adc
shlb
inc
loop
sbb
dec
jmp
outsl
inc
cli
aam
add
adc
push
leave
rorb
add
pop
stos
inc
mov
mov
addl
sub
in
adc
dec
sub
push
lock
pusha
sbb
adc
adc
sarl
imul
clc
jl
sahf
hlt
adc
cmpb
add
test
jbe
jmp
sub
std
lds
mov
cwtl
push
sbb
push
dec
jo
sbb
cmp
data16
arpl
cmp
and
pop
push
scas
mov
push
push
mov
jo
mov
sbb
cmpsl
cmp
aam
and
fisttpl
push
cwtl
push
sub
pop
cmp
jg
or
add
inc
jge
daa
enter
mov
jp
data16
push
mov
test
pop
and
adc
aas
rol
or
push
add
fidivrs
cmpsb
xchg
pop
push
cli
push
call
xor
faddp
sbbl
or
mov
mov
mov
inc
mov
cmc
add
mov
xor
or
jbe
jb
push
imul
sbb
orb
mov
inc
sub
pop
call
dec
adc
call
inc
mov
iret
clc
movsb
loop
and
adcb
push
jo
mov
in
xor
stos
jp
test
adc
xchg
jecxz
cmp
mov
sub
dec
inc
hlt
inc
sbbb
pusha
inc
stos
out
pop
and
mov
or
adc
ret
dec
outsb
loope
push
cld
xor
mov
mov
mov
xor
sub
daa
loopne
imul
and
and
mov
xor
xor
push
xchg
push
je
shl
mov
movsl
fdivs
mov
dec
rcrb
add
mov
lods
xorb
or
mov
hlt
adc
sbb
lods
imul
pushf
lods
push
mov
incb
mov
pop
shrb
aaa
adc
and
int3
and
les
imul
push
cmp
xchg
and
fmuls
out
jae
mov
add
xchg
loope
push
or
fadd
push
sbb
sbb
movsb
sbb
pusha
push
push
sbb
push
xchg
xor
mov
sbb
shlb
pop
addb
aas
icebp
push
pushf
in
sub
xchg
js
adc
xchg
scas
ja
scas
cmp
inc
jl
cmp
jbe
jne
xchg
pop
pop
push
pop
push
inc
mov
mov
arpl
mov
sbbb
push
stc
push
add
xchg
xor
inc
popa
jns
cwtl
idivb
ds
lock
les
dec
add
jmp
add
int3
or
arpl
dec
dec
mov
hlt
rorb
aam
xchg
test
push
inc
inc
add
push
inc
pop
xchg
mov
xchg
lds
push
pusha
mov
pop
mov
xchg
aam
mov
dec
rcrl
inc
rorb
lahf
je
gs
and
pop
and
repz
test
lods
or
adc
or
ljmp
mov
push
push
adc
les
add
scas
jg
cmp
mov
insb
jo
cs
mov
jmp
sbb
or
insb
push
adc
jnp
add
nop
cmc
shll
daa
dec
sub
sbb
pusha
test
and
in
fwait
mov
add
test
xor
jp
sbb
inc
sub
or
lea
push
loopne
xchg
or
rclb
add
push
mov
loopne
cmp
inc
add
inc
mov
fwait
mov
cmp
mov
xor
jle
pop
dec
mov
add
mov
or
jmp
jecxz
fildl
jle
cmp
pop
in
xor
stos
mov
push
mov
stos
fwait
pop
ss
or
add
cli
test
mov
pop
jge
iret
add
dec
js
in
mov
je
les
dec
sub
mov
cmp
mov
rcrb
test
sub
add
pop
xor
or
pop
data16
sub
xor
js
sbb
sub
mov
sbbb
cmpsl
pop
sahf
dec
orb
add
sbb
clc
in
pop
and
inc
dec
popf
lret
pop
or
call
into
fcoml
push
nop
ret
les
jecxz
lock
xchg
mov
jb
lea
loop
sub
clc
test
pop
lret
lds
stos
xchg
sbb
push
test
les
or
xor
add
mov
cmpsb
test
push
add
jnp
mov
or
rolb
es
loopne
and
ficomps
inc
pushf
inc
imul
pop
or
push
mov
jge
push
das
stc
addl
jmp
cwtl
jmp
adc
mov
cmpl
loopne
movsb
outsl
loop
and
ret
xchg
jbe
test
xchg
lret
xlat
adc
cwtl
sarl
cs
movl
xchg
lods
adc
arpl
adcb
pop
jno
cmpsl
and
das
pop
xchg
mov
stc
lods
ljmp
mov
fwait
add
imul
popf
popa
insb
cmp
out
test
mov
shlb
mov
orl
mov
pop
push
jmp
xor
cmp
movsb
sub
mov
into
mov
mov
and
sub
aaa
jmp
ret
popa
call
je
cmp
and
cmp
sbb
add
adc
lock
jnp
testl
jne
mov
xchg
sub
mov
out
cmp
outsl
push
or
sbb
mov
daa
mov
das
jbe
ss
add
lahf
popf
inc
or
xlat
add
outsb
icebp
or
or
jne
rolb
mov
and
or
or
push
test
jne
inc
adc
jl
repnz
mov
bound
rcpps
rclb
sbb
push
sahf
in
xchg
lods
std
push
lods
bound
xor
das
push
cmp
mov
fdivs
mov
sub
lock
adc
sub
out
mov
fwait
lods
or
push
test
mov
lahf
pusha
sbb
push
mov
or
sbb
cmp
dec
sub
mov
pop
jo
icebp
adc
out
push
or
inc
xlat
nop
push
std
pusha
or
arpl
mov
push
jecxz
in
adcl
rorl
adc
sub
push
movsl
dec
lock
adc
dec
fldcw
roll
xor
loop
leave
cwtl
sub
fildl
xor
in
insl
mov
in
sbb
inc
sbb
stos
adc
push
int3
or
popf
add
xchg
jne
mov
lds
add
sti
fsub
push
sub
mov
sbb
popa
scas
lret
lea
xchg
ret
or
mov
inc
push
add
movzbl
sbb
xchg
mov
xchg
and
add
mov
incl
fistl
sub
push
jl
or
cmp
rorb
adcl
xchg
ss
or
adc
dec
dec
mov
popa
insb
rolb
add
popf
or
push
inc
mov
add
add
inc
xor
test
mov
out
xor
pop
push
mov
push
cmp
mov
push
inc
xchg
dec
push
push
in
push
dec
pop
xor
test
or
fucomi
sub
xchg
ljmp
xor
mov
push
outsl
inc
push
sarl
push
std
dec
imul
sar
test
enter
je
add
aam
inc
js
push
and
cmp
dec
fcomps
jmp
mov
cmp
push
rorb
aad
add
fstpl
test
pop
mov
imul
js
sbb
add
std
lret
shlb
loope
addb
adc
inc
enter
test
add
arpl
outsb
lock
xchg
stc
push
es
loopne
cwtl
adc
mov
push
seta
push
sbb
lds
sti
pop
sbb
movsb
in
fdiv
cmp
mov
dec
inc
hlt
cmpsb
loope
adc
jl
hlt
mov
lds
cmpsb
subb
and
inc
and
mov
cmp
inc
std
fiadds
ds
dec
or
adc
je
data16
cmpb
getsec
cmpl
mov
iret
fisttpl
jg
outsb
adc
xchg
cmp
mov
or
inc
sub
jge
cmp
rclb
push
jle
xchg
push
fcomps
jp
outsb
and
adc
xor
lock
jge
mov
das
push
aam
xor
inc
inc
fildl
jb
jmp
divb
jge
cmpsb
dec
cmp
xchg
dec
mov
mov
shlb
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
add
push
lock
data16
inc
pusha
mov
sbb
adc
or
loope
pop
lcall
movsb
add
or
mov
stc
add
lret
jmp
pop
cmpsb
adc
xchg
sbb
jno
xchg
xor
mov
out
lea
mov
loope
pop
sbb
call
mov
lock
mov
xchg
xor
adcl
sahf
sbbb
pop
sarl
movsl
jnp
rcrb
fcoml
add
rclb
data16
or
imul
xor
ja
shl
xchg
enter
test
test
and
je
sahf
sbbl
xchg
stc
add
rolb
leave
cwtl
or
jecxz
xor
jns
push
stos
sub
and
xchg
pop
push
fcomp
sbb
addr16
sub
call
jl
rcrb
imul
popa
aaa
testl
dec
xchg
rorb
out
inc
pop
loopne
in
adc
popa
xor
push
inc
andl
je
je
push
dec
lahf
and
loop
pop
push
xor
jno
dec
push
ljmp
pusha
insb
popa
fiaddl
mov
shrb
jl
enter
orb
rcrb
pop
mov
xchg
icebp
clc
and
jnp
cmp
shlb
and
test
cmp
rolb
xchg
jle
inc
inc
lcall
and
sub
mov
pop
outsl
push
insb
inc
add
test
cmp
dec
jg
adc
xchg
test
flds
or
adc
fwait
test
mov
pop
and
add
sbb
addr16
xchg
xchg
lock
inc
scas
fisttpll
xchg
sub
pusha
sub
push
and
test
cmp
fwait
and
mov
inc
adc
pusha
mov
lret
pop
xchg
inc
cmp
push
cmpsl
fldt
dec
aas
mov
test
dec
adcl
shlb
sub
gs
xchg
cmp
push
testl
pop
hlt
push
into
dec
and
inc
mov
push
and
pop
dec
les
add
sbb
dec
dec
add
dec
test
inc
mov
lcall
xor
test
in
pop
cmp
xchg
pushf
sbb
psubq
test
test
pusha
xchg
mov
sub
jge
stos
push
add
cmp
xorb
sbb
xor
inc
mov
xor
push
xor
or
inc
or
jp
push
es
pop
mov
sbb
addr16
movb
test
or
xchg
dec
sub
mov
clc
subb
mov
xor
pop
cmp
les
mov
mov
call
inc
push
inc
cmp
mov
cmp
add
inc
cmp
insl
sbb
lea
mov
divb
dec
xor
adc
clc
push
or
add
inc
push
or
jb
mov
mov
inc
push
stos
xchg
psadbw
call
cmp
cmp
call
add
aaa
jmp
add
jmp
add
imul
subb
jns
dec
loopne
inc
inc
mov
and
fldl
add
add
faddl
cmp
icebp
push
stc
add
mov
cmp
mov
or
outsl
push
adc
jp
cmp
shlb
mov
iret
and
ja
rorl
ss
shlb
or
fcoml
add
call
add
lds
faddl
dec
xchg
enter
push
jno
test
push
and
cmc
sti
add
push
pop
jae
pusha
xor
and
ret
bound
and
jo
pop
or
mov
mov
mov
cmc
sub
xor
or
or
push
jb
push
pop
add
sub
int3
les
addb
jg
inc
adcl
inc
add
and
stos
fs
mov
je
in
or
pop
mov
and
xchg
add
add
cmp
inc
and
xor
das
jno
nop
sub
stos
inc
ds
movsb
test
inc
xor
pop
int
mov
adc
in
xchg
xchg
adc
shrb
or
add
out
or
add
call
lock
push
jmp
popf
inc
pusha
add
dec
or
jo
cmc
mov
sub
lret
add
aad
cmp
pusha
or
mov
push
mov
mov
pop
sub
sub
and
lret
sarb
dec
loopne
in
push
add
fsts
push
or
repz
leave
jmp
insl
add
adc
push
mov
mov
or
dec
aaa
add
enter
inc
notl
bound
je
xlat
push
jne
arpl
cs
and
jmp
xor
inc
rorl
inc
xchg
or
add
push
or
mov
mov
popa
loopne
adc
cmp
lahf
adc
push
rclb
aam
shl
pop
outsl
pusha
aam
fistl
mov
sbb
push
pusha
insb
adc
rorl
xorb
fisubrs
in
fxch
xor
repz
clc
push
sahf
out
out
aam
adc
xchg
arpl
cmpsb
cmp
dec
testb
cmpb
push
push
and
in
mov
adc
out
and
lcall
or
push
jne
sub
xchg
jge
xchg
sub
sbb
lret
int3
dec
cmp
adc
pop
sub
inc
xor
inc
fdivrs
mov
mov
or
das
arpl
rolb
pop
adc
add
push
sbb
test
loopne
imul
dec
pop
scas
lds
lcall
lods
movl
dec
push
push
xor
xor
subb
xchg
rcl
psubd
push
push
pop
mov
les
pop
insb
adc
aam
mov
cwtl
es
sub
sub
xor
gs
cmp
mov
sbb
das
push
and
adc
addl
lock
movsl
push
inc
mov
push
lahf
or
or
test
pop
push
mov
aam
int
dec
test
mov
mov
mov
sbb
mov
add
mov
adc
test
mov
js
inc
ret
nop
dec
dec
sbb
or
mov
xchg
mov
fdivrs
stc
repnz
lock
lods
mov
mov
jns
push
les
adc
lret
nop
sarb
out
ss
inc
xchg
or
es
mov
push
xlat
jl
addb
jns
dec
addb
mov
mov
dec
pop
add
sub
add
pushl
nop
jno
cld
or
ss
rolb
aam
ljmp
test
sbb
les
and
and
fwait
je
pop
scas
xor
test
enter
xchg
add
dec
jl
and
xor
js
adc
add
add
adc
mov
sti
sub
and
les
add
add
or
mov
adc
call
add
fildl
or
loopne
cmp
addr16
inc
add
or
inc
inc
ret
dec
xor
jg
cmpb
or
jge
jns
jmp
add
pop
xor
and
push
mov
add
inc
jp
or
mov
xlat
pop
jge
dec
and
scas
or
push
push
inc
push
les
push
mov
mov
enter
xor
add
xor
test
imul
push
pop
push
into
test
jecxz
int
push
subl
cmp
dec
xchg
or
int
adc
or
push
and
mov
sbb
lods
mull
xor
mov
adc
pop
rclb
out
test
rolb
pop
ret
and
scas
stc
cmc
cmp
and
in
jae
cmpsb
dec
cmp
xchg
in
loopne
dec
adc
or
es
pop
add
inc
jl
mov
js
imul
mov
jbe
lock
imul
subb
mov
pop
adc
xor
pop
les
cli
jmp
ljmp
mov
jl
mov
inc
mov
lods
lods
repz
pop
inc
xchg
xor
add
fwait
adc
dec
std
adc
mov
inc
repnz
jmp
jmp
inc
push
sbb
add
daa
adc
jne
jne
inc
popf
inc
dec
das
cs
call
lock
pop
in
inc
cmc
sbbb
fwait
nop
gs
inc
xor
loopne
testl
cmp
mov
sub
jge
xchg
push
push
adc
add
jae
dec
or
or
push
ss
mov
cmp
loopne,pn
or
add
nop
sahf
mov
mov
jl
and
rclb
lock
jbe
test
mov
fnstsw
push
jbe
dec
push
push
movsl
mov
faddl
fstl
push
fcomp
push
sub
mov
clc
pop
ss
fsubr
pop
faddp
andl
sbb
ret
and
push
loope
fistl
xchg
add
lds
and
push
int3
imul
mov
aad
or
adc
dec
push
sbb
ret
jmp
mov
xchg
test
sub
xchg
adc
mov
mov
testb
in
rcrb
sbb
sbb
loop
sub
pop
lea
push
or
ret
pop
loope
and
cs
sub
push
test
xchg
inc
cmp
or
lret
jmp
inc
fucomi
sub
enter
mov
cmp
dec
mov
int3
dec
add
clc
mov
jae
push
inc
add
sub
jp
loope
fbstp
sub
stos
sbbb
add
cld
mov
jmp
mov
cmp
jge
adc
addl
push
pop
push
jecxz
out
outsl
fsubrs
jnp
pop
push
xchg
adc
outsb
cwtl
add
jmp
or
icebp
inc
shrl
lods
push
mov
push
push
xlat
sub
dec
pop
jmp
test
mov
mov
popa
pop
add
ret
pop
xchg
adc
jg
adc
or
mov
push
insb
sub
cmpsb
push
clc
jle
add
adc
xor
dec
jns
arpl
mov
adc
lods
inc
jg
pop
and
mov
push
pop
sub
push
rcr
jecxz
mov
pop
sub
les
ret
or
jmp
xchg
call
xor
fimull
addr16
loopne
ja
cmp
addb
rclb
mov
pop
ret
dec
dec
rol
sbb
cmpb
sar
dec
or
jne
cmp
cmp
sbb
leave
pushl
mov
in
arpl
fs
clc
movsl
mov
inc
push
lods
xchg
pop
mov
imul
shlb
inc
cmp
cltd
cmp
xchg
das
adc
add
pop
shrl
pop
push
mov
imul
inc
push
push
rcrb
xchg
jo
add
jge
movsb
dec
sub
lods
or
mov
sbb
dec
ror
rol
cmp
iret
xlat
add
inc
or
sarb
mov
pop
loop
push
aas
adc
mov
pop
mov
adc
add
bound
loop
mov
arpl
mov
push
sbb
les
inc
add
dec
inc
jb
sbb
xchg
orl
stos
faddl
inc
cwtl
xor
jle
je
cltd
dec
xor
mov
cli
inc
dec
sbbl
add
gs
fsubl
jmp
dec
add
daa
pop
cmp
xor
xor
adc
mov
or
adc
lds
leave
adc
dec
push
lcall
push
lds
push
push
cs
ret
test
cmp
and
push
daa
sahf
pop
dec
sub
jge
sub
fwait
xor
hlt
sbb
idivl
popa
cmpsl
rolb
push
lock
adc
mov
sbb
or
cmp
shlb
adc
dec
or
mov
jne
mov
mov
dec
add
mov
pop
jl
sbb
jb
inc
jp
adc
mov
js
and
dec
sti
ljmp
inc
mov
push
mov
mov
xchg
pop
lcall
add
push
ss
sub
in
ficoml
mov
mov
js
xchg
pushf
or
loopne
push
je
xchg
dec
mov
cmp
xchg
lret
das
sbb
pop
adc
dec
push
pushf
jmp
negl
out
ret
mov
jb
sbb
add
add
pop
or
mov
popf
adc
adc
addr16
jae
fdivl
push
lcall
cmpsb
pop
push
dec
leave
xchg
dec
fdivrs
xor
push
loopne
add
in
adc
out
xor
pop
imul
adc
or
add
and
add
js
loopne
dec
mov
inc
or
rolb
jne
loope
xor
push
xchg
sub
push
add
insl
mov
jno
jg
movsl
shrb
push
adc
push
addr16
lcall
dec
jne
or
rcrl
xchg
sbb
adc
or
mov
sbb
out
ss
pop
nop
ret
test
cs
inc
xchg
addl
sbb
psubsb
push
mov
ja
ja
add
and
mov
ret
push
pop
pop
sub
test
add
mov
outsb
addr16
fbstp
xor
js
adc
ja
lahf
push
pavgb
clc
cmp
mov
and
mov
mov
add
pop
fsubl
push
in
inc
sbb
jecxz
shll
fcoml
fs
push
or
push
das
and
jl
pop
rcrl
rcll
pop
adc
xlat
add
mov
pop
je
shll
scas
dec
loopne
or
sbb
cmp
or
dec
call
cmpl
and
mov
push
fiaddl
nop
test
pushf
push
mov
loopne,pt
in
jecxz
xor
mov
daa
daa
fildll
insl
or
imul
stos
jae
or
sbb
dec
jae
sbb
push
in
lock
in
adcb
push
cmp
xor
dec
push
lock
adc
or
lock
add
pop
decb
and
fisttpl
leave
ret
rol
jmp
mov
xchg
cmp
push
cmpxchg
lea
dec
fistps
popa
push
pop
sub
inc
mov
test
add
loopne
jl
rclb
ljmp
xchg
mov
call
sub
push
rolb
cltd
sub
lock
mov
lods
or
sbb
pop
popf
sub
cmp
jae
xchg
inc
push
mov
lods
addl
shlb
dec
add
icebp
clc
in
sbb
cmp
out
incb
or
xchg
movsb
xlat
mov
xor
add
js
cmp
icebp
jne
lcall
sbb
jnp
das
add
cwtl
dec
enter
pop
sbb
pop
pop
repnz
add
add
dec
repz
push
add
std
sbb
or
in
cmp
pop
punpcklwd
popa
inc
add
cmp
cmp
or
jl
movsb
mov
xor
ror
xor
xor
add
loopne
rcll
sub
lock
aam
sbb
inc
dec
xor
xchg
pushf
fwait
sbb
cs
and
add
sbb
inc
inc
or
push
testl
sti
sbb
or
gs
std
lcall
dec
inc
add
aam
aaa
sarb
or
inc
xor
inc
add
movsb
mov
and
movsl
repz
ss
scas
push
data16
pop
push
sbb
ljmp
sub
stc
cmc
inc
hlt
lret
xorb
jnp
dec
ficoms
or
cmc
xor
sub
lods
shlb
add
cmpsl
push
cmp
adc
or
popa
or
pop
pop
add
dec
setg
or
ret
ret
mov
xchg
clc
fwait
mov
sbb
cmp
jge
add
push
push
inc
xchg
jge
sub
xorb
adcb
inc
adc
iret
pop
or
loopne
in
jo
es
in
mov
scas
mov
or
out
adcl
insl
xor
xchg
mov
add
sbb
jecxz
test
loop
or
mov
jno
ret
pop
in
cmp
pop
ja
mov
movsb
and
mov
inc
and
mov
fs
jae
mov
and
xor
aas
xlat
cmp
adc
in
incl
pop
ja
in
fld
dec
loope
ret
aad
and
sub
into
sub
jb
jo
dec
xchg
sbb
adc
push
mov
roll
mov
xor
cmpsb
jmp
push
mov
dec
cmp
dec
mov
sbb
cmpsl
jp
mov
xor
or
jo
mov
lock
mov
inc
sub
or
inc
mov
sbb
jno
and
cwtl
dec
push
iret
pushf
cs
fcoms
fisttpl
and
push
inc
and
cmp
test
in
ror
push
icebp
lods
aas
sti
push
inc
mov
clc
aaa
push
arpl
pop
jb
lods
push
push
lods
add
es
adc
push
aad
test
adc
adc
rclb
int3
fcomps
mov
inc
cmp
fistpll
gs
adc
clc
pop
inc
pop
sub
xchg
sub
sbb
cmp
sbb
movb
fidivrl
mov
mov
xor
sub
add
push
jns
xchg
jge
loop
data16
das
add
cmp
and
adc
dec
xor
xchg
mov
lea
mov
cmp
sub
mov
lret
sub
push
xor
add
cmp
add
in
sub
inc
push
rol
inc
dec
push
xchg
pop
rorb
repz
xor
jbe
jmp
dec
les
adc
iret
sbb
jbe
gs
add
inc
xor
adc
mov
pop
lea
lahf
xchg
lock
push
mov
jmp
in
xor
les
shrb
push
insl
sub
inc
add
add
mov
or
mov
adc
daa
and
and
addb
lret
add
aas
sarb
orb
adc
pusha
xor
adc
fs
jmp
loop
inc
inc
aaa
dec
sub
or
cld
loopne
mov
push
sub
int
xor
pop
enter
cli
std
sub
nop
imul
or
sub
lret
dec
cmp
jl
xor
cmp
inc
jo
sbb
xchg
sahf
adc
in
mov
add
inc
or
outsb
add
and
push
inc
sahf
add
dec
loope
in
and
sbb
or
pushf
call
aam
in
mov
jbe
ja
popf
movb
dec
adc
shlb
hlt
andb
jp
adc
xlat
dec
pop
flds
and
adc
in
add
test
dec
and
mov
cld
test
add
cmp
ja
pushf
mov
adc
or
jle
jo
push
push
push
cli
and
dec
popf
stc
inc
pop
cmp
popa
sub
push
push
adc
mov
adc
ljmp
sahf
push
inc
mov
pop
sbb
pop
adc
shl
loope
mov
loop
adc
cwtl
add
pop
mov
adc
cmp
jb
sbb
and
cmpsb
push
pop
rolb
in
cltd
mov
bound
push
mov
nop
notb
insl
ret
je
sub
lcall
push
ds
and
pop
cmp
jl
fiadds
lret
into
mov
add
push
dec
fdivs
cmp
pop
and
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
mov
outsl
popa
dec
cmc
adc
push
mov
push
lret
fistpll
push
mov
cmp
daa
pop
scas
pop
lret
sbb
jl
jmp
or
xor
fadds
or
mov
fldln2
sbb
je
or
jns
pop
add
pop
sbb
cmp
in
jmp
push
sbb
fstpt
jmp
int
stos
lods
leave
loope
xor
jne
and
push
mov
bound
pop
push
xchg
dec
push
jge
mov
ljmp
inc
sub
addr16
pusha
leave
mov
fimull
adc
pop
int
adc
xor
pop
add
test
ret
adc
xor
cmpl
stc
divps
pop
push
pop
sbb
add
cmpsb
std
lods
js
add
movb
jmp
add
cld
fimuls
aas
push
pusha
lock
push
add
add
fs
stos
sub
add
rclb
adc
dec
adc
mov
aaa
push
mov
scas
pop
pop
cmp
cmpsl
and
and
mov
push
jb
dec
xchg
add
insl
jns
xor
push
mov
mov
pop
jle,pn
mov
push
add
loopne
repnz
push
les
imull
cmpb
mov
adc
pop
mov
sbb
xor
je
bound
fdivrs
cmpl
rcrb
iret
push
std
out
movsl
or
pop
insl
popa
les
test
sbb
fcoms
xor
lods
dec
inc
xor
xor
or
scas
sbb
data16
xor
mov
or
scas
cmp
cmp
xor
push
cmp
or
mov
sbb
les
test
aas
jne
xorb
mov
jmp
pop
repz
in
push
mov
jae
adc
inc
mov
pop
in
scas
sub
movsl
cmp
inc
inc
dec
mov
push
or
xor
push
sub
add
push
inc
or
xor
jno
inc
fwait
es
movsb
fidivl
push
pop
fdiv
push
in
and
je
and
add
icebp
repz
cmp
sbb
mov
jmp
push
sub
cmp
jnp
leave
jne
push
jmp
cmp
cmp
notl
adc
bound
inc
xchg
inc
test
cld
rolb
mov
and
mov
dec
cs
inc
xor
sub
out
xchg
lret
and
cmp
and
jp
adc
pushf
xchg
xor
mov
test
add
leavew
ds
mov
repz
mov
stos
mov
mov
push
adc
loop
mov
or
insb
pushf
mov
test
gs
call
xchg
push
pusha
sbbb
adc
in
mov
dec
shlb
fiaddl
mov
mov
test
out
repz
fmul
xchg
mov
xchg
adc
fxch
adc
add
jne
push
push
nop
shlb
orl
hlt
push
dec
sarl
adc
sub
scas
sbb
add
faddl
notb
fistpl
add
negl
or
scas
popw
mov
mov
and
pop
rcll
sarb
adc
sahf
test
int
dec
pop
inc
push
aad
add
add
dec
push
fisubrl
scas
movl
and
and
scas
rcrb
xchg
dec
mov
sbb
or
mov
roll
mov
sub
pop
push
and
mov
sub
hlt
inc
adc
mov
je
sbbb
pop
pusha
mov
xchg
cmovns
jle
sbb
sbb
pop
cmp
icebp
add
push
xchg
mov
mov
mov
xchg
fistpll
lods
xor
jp
in
std
clc
dec
adc
incl
mov
sbb
inc
sub
mov
ja
push
cmc
shrb
fstps
out
mov
jns
jmp
orl
jo
or
or
data16
adcl
dec
push
shll
je
leave
jnp
jmp
aam
imul
xchg
adc
fstpt
inc
jle
loop
sbbb
or
push
push
clc
popa
adc
adc
adc
lea
lods
xchg
daa
xor
outsb
or
pusha
nop
inc
push
or
adcb
and
adc
outsl
loope
jne
mov
jg
cmpl
push
outsb
xor
popf
shrb
sub
pop
xorl
mov
je
imul
sub
mov
dec
daa
add
inc
popa
ret
adc
ds
hlt
fs
fisttpll
xlat
and
inc
sahf
les
pop
push
mov
iret
outsl
fildl
in
idivb
lods
jmp
inc
lahf
mov
aas
xchg
sub
inc
js
cmp
sahf
bound
jl
push
push
push
pop
add
and
cmp
aad
or
out
cmp
sbb
inc
es
hlt
stos
cli
lea
scas
push
or
jmp
loopne
add
outsl
test
sub
test
push
es
pop
in
cmp
dec
mov
in
xchg
pop
fs
filds
mov
push
add
insl
sub
cmp
movsl
mov
lahf
sub
sbb
pop
mov
enter
mov
xchg
aam
test
xor
test
inc
gs
adc
jne
jmp
xchg
outsb
cltd
mov
cld
fldcw
sub
lods
es
rol
mov
inc
pop
dec
aaa
mov
sbb
popf
adc
adcb
je
pusha
aas
jae
clc
cmp
push
bound
cld
push
adc
xor
add
sar
shll
pop
sahf
stos
dec
js
mov
imul
xor
push
push
out
popf
out
xlat
add
cli
lea
jle
les
mov
jle
dec
cmp
jg
cld
sub
lock
lods
mov
icebp
addl
push
or
pop
push
cmp
sub
sar
xor
hlt
shr
incb
popa
out
sub
sub
sub
add
fistpll
push
push
add
push
pop
ret
dec
fsts
or
add
sahf
hlt
adc
dec
sarb
or
iret
shlb
in
test
lret
and
add
jo
inc
add
sbb
jne
xor
sbb
sbb
push
clc
movsl
data16
stos
imul
pushf
addl
inc
mov
xlat
jns
inc
sbb
or
sbb
and
dec
jo
cltd
xor
xchg
or
outsb
adc
add
sbb
addb
sub
inc
call
push
and
fsubrs
push
inc
scas
jne
or
cwtl
adcl
pop
mov
das
xor
call
pop
fldt
add
pop
dec
and
in
sbb
lds
test
mov
jecxz
rclb
jecxz
popa
mov
sbb
lea
jmp
jbe
pop
xor
mov
fdivl
jo
repnz
xchg
dec
scas
in
add
pop
sti
or
push
and
repnz
add
dec
pop
push
adc
lods
jne
fsubs
xchg
icebp
lcall
ret
mov
lea
adc
push
push
fldt
cmpsl
mov
pop
aas
pusha
push
push
push
sahf
addl
aam
push
and
jb
and
and
adc
xor
es
jno
or
test
scas
out
add
imul
xchg
dec
or
rcr
mov
push
push
dec
mov
cli
ss
adc
pushf
add
nop
sub
push
daa
in
bound
inc
dec
mov
push
rcll
push
push
mov
femms
jl
loopne
pop
add
mov
add
add
jb
add
adc
jmp
je
push
pushf
out
adc
imul
je
pusha
or
sub
mov
mov
push
push
inc
push
ret
das
add
adc
nop
sub
and
mov
cmpl
adc
and
lcall
lock
xchg
sbb
lods
fs
jbe
push
in
xor
mov
mov
inc
add
lea
dec
in
xlat
lods
or
and
pop
add
rclb
in
test
pop
cmp
mov
push
push
inc
mov
push
jno
xchg
mov
xchg
xchg
mov
cmp
faddl
call
and
lods
adc
shlb
push
add
mov
inc
sub
add
jo
mov
sub
adcl
hlt
push
jmp
in
push
lea
fs
add
push
and
dec
in
or
sbb
and
cmc
sub
sbb
fs
cli
sbb
push
inc
push
adc
mov
pop
add
jl
adc
push
scas
fsubrs
mov
pushf
rorb
loopne
aas
and
pop
inc
push
push
ja
fadd
dec
fcomps
lret
fsubrl
lods
test
inc
jae
stos
movsb
mov
xor
pop
mov
pop
mov
xor
push
jle
imul
add
negb
adc
ret
out
xchg
out
enter
lods
push
nop
mov
in
stos
push
mov
in
inc
in
les
hlt
mov
jbe
push
cmp
sbb
fsubs
rclb
ret
loop
inc
jbe
cmp
and
idivl
or
cmp
xor
cmp
rcrb
andb
xchg
jne
lods
adc
add
dec
fsubs
sarl
pop
mov
cmp
insb
sub
ja
add
repnz
das
nop
scas
rcrb
push
xor
or
add
fs
xchg
cmp
adc
pop
push
sarl
add
ret
mov
mov
pop
adc
jo
inc
pop
pop
mov
test
repz
xchg
push
push
add
and
jmp
pushl
pop
add
imul
lds
and
movsb
mov
shll
add
movb
test
add
pop
xchg
mov
les
in
inc
shl
jne
push
out
movsb
cmp
stos
ds
lret
nop
push
adc
hlt
shl
jecxz
inc
pop
nop
jns
sbb
cmpsl
stc
mov
xchg
call
rorl
and
fwait
popf
dec
rolb
jle
mov
nop
push
adc
inc
loopne
fmull
enter
mov
push
enter
loopne
dec
cs
push
and
std
popf
push
lods
shl
push
mov
push
dec
sbb
and
movl
inc
adc
movzwl
mov
out
out
pop
jmp
popa
cvttps2pi
or
jl
cmp
daa
gs
sbb
jecxz
pop
mov
sbb
fnstcw
arpl
push
or
inc
xor
push
adc
push
cmp
dec
fdivrs
iret
iret
mov
and
rolb
sub
stos
cmp
pop
adc
adc
pop
mull
cwtl
adc
or
adc
add
mov
xchg
add
sbb
push
mov
test
adc
hlt
or
ds
push
clc
movsb
ret
or
enter
cltd
int3
inc
cmp
adc
mov
jo
das
je
aas
lods
shll
or
add
loopne
cmp
jo
mov
push
repz
mov
jp
mov
cld
daa
sbb
movsb
pop
or
shl
and
lock
adc
ljmp
out
mov
mov
push
mov
call
or
push
adcb
adc
push
pop
pop
mov
sti
or
mov
gs
jne
movsbl
push
pop
lahf
dec
dec
mov
jb
jbe
push
paddb
ficomps
mov
sbb
push
pop
mov
loopne
mov
mov
ds
xorb
lods
lods
mov
xchg
sub
and
mov
and
mov
ret
bound
inc
add
sub
pushf
pop
and
sti
mulb
or
push
dec
mov
cmp
jl
push
inc
pop
and
pop
push
pop
sbbb
or
dec
jne
das
mov
pushf
xor
clc
imul
push
mov
pop
dec
push
jge
mov
cli
adc
cmp
imul
fiadds
ja
add
sbb
pop
xor
mov
fs
ja
xchg
sbb
add
lock
add
leave
leave
dec
pop
cmpsb
or
add
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
nop
and
and
push
pop
test
pop
hlt
inc
sysret
ret
xor
sbb
lea
xchg
and
jl
fistpl
pop
adc
sbb
sub
cmp
out
inc
dec
push
pop
pop
out
sahf
out
insb
jno
sahf
out
sahf
jnp
test
out
cltd
sahf
mov
sahf
out
mov
rol
sarl
rcl
pop
fdivr
fnstcw
add
and
or
or
push
movups
adc
adc
push
pop
sbb
addb
sbb
and
aas
push
fs
in
inc
xchg
add
mov
jecxz
xor
ljmp
sub
mov
inc
nop
dec
add
inc
cmp
pushf
adc
fisubrl
loope
pushf
les
enter
outsb
andl
or
out
js
mov
das
mov
ja
cmp
movsb
push
adc
insb
pop
fwait
and
sahf
loopne
fwait
xorb
ljmp
xor
jb
inc
lea
inc
push
cmp
movsl
mov
inc
sarl
lea
add
or
add
lods
repz
enter
or
sub
adc
or
push
or
js
lods
adc
movsb
cmp
setnp
cmpl
aam
mov
inc
jmp
xchg
addb
gs
xor
push
mov
add
lahf
pop
flds
mov
add
sub
repnz
mov
es
mov
sub
push
dec
shlb
insb
mov
ljmp
add
and
outsl
das
inc
jge
xor
sbb
adc
dec
pusha
cmp
push
jg
and
xor
lea
add
arpl
push
or
movsb
mov
inc
sbb
insb
mov
inc
lret
movsb
push
mov
dec
rcrb
lods
cmp
jbe
mov
loop
push
dec
add
int
adc
out
jge
cwtl
mov
rorb
pop
push
insl
or
push
pop
mov
dec
xchg
loope
mov
ja
lea
imul
repz
hlt
cmp
ja
or
pusha
aaa
outsb
mov
stos
lcall
orb
lock
add
mov
adc
or
pop
jmp
and
dec
push
jb
add
int
rcl
add
clc
jbe
push
or
pusha
cs
xchg
add
pop
mov
push
test
jo
and
test
imul
mov
push
xor
and
sbb
inc
pop
adc
dec
aaa
stos
xchg
shrl
xor
subl
je
adc
pop
or
push
mov
or
and
inc
sbb
jns
incl
adc
sbb
cmp
ja
push
xor
mov
add
sbb
add
sbb
lahf
mov
aad
mov
xchg
mov
out
fists
push
xor
cwtl
dec
dec
mov
adc
iret
cmp
push
sbb
sbb
add
adc
movl
cmp
add
mov
adc
pop
mov
jb
repnz
adc
adc
xor
push
sub
xchg
arpl
lods
xchg
and
inc
cmpxchg
int3
or
jnp
xchg
push
or
mov
sbb
jle
fldenv
inc
add
mov
in
jbe
adc
sbb
push
push
call
ja
adc
xor
jo
cli
testb
jne
lea
cmp
push
or
jne
or
js
cmp
add
sbb
or
insb
push
aad
or
xor
cmpb
mov
mov
dec
cmp
jl
dec
data16
cmp
push
js
imul
pop
sub
sbb
sub
daa
xor
cmp
jmp
and
movzbl
pop
mov
imul
js
out
and
sub
sbb
or
arpl
fs
push
inc
bound
in
mov
ss
ret
xchg
call
xchg
adc
data16
hlt
movl
add
or
sbb
sub
sbb
jp
cmpsl
call
and
sbb
cmp
and
jbe
jbe
push
icebp
test
and
fwait
adc
inc
inc
in
adc
push
rorb
test
adc
or
fadd
push
mov
es
pop
movsb
test
movsb
and
jne
sub
adc
push
adc
cmp
sbb
int3
cld
pop
push
inc
jmp
dec
mov
jge
hlt
dec
in
sub
adc
adc
add
xor
add
in
cmp
enter
cmp
dec
sub
int3
sbb
push
add
arpl
push
lahf
mov
ja
or
jl
sub
and
adc
rolb
or
lret
cmpsb
outsb
xor
scas
int3
mov
and
sbb
sbb
sbb
rorl
add
rorl
and
clc
push
cwtl
cmp
pop
sbb
jmp
push
das
add
dec
or
pop
inc
mov
push
push
insb
xor
clc
sbb
push
add
xchg
mov
jmp
and
mov
adc
xor
cld
add
pop
pop
cmp
sbb
insl
push
std
xchg
les
push
je
jmp
push
push
xor
jmp
clc
test
dec
cmp
fistpl
movsl
push
push
mov
add
test
enter
or
sub
sbb
cmp
addl
push
mov
sbb
sub
sub
or
lods
and
push
adc
push
xor
adc
ret
adc
outsl
mov
fcomi
add
into
dec
mov
pop
clc
mov
lret
pop
cld
mov
jo
je
ss
movl
mov
in
ret
or
cmpsl
int3
push
sbb
shll
and
adc
adc
or
pop
in
lret
nop
sbb
mov
ficoms
mov
dec
push
ret
dec
ret
dec
xorl
push
das
push
jnp
add
hlt
cmpsb
inc
inc
and
inc
in
pop
enterw
dec
push
nop
pop
int
fwait
push
mov
bound
mov
or
sub
mov
es
cmpsl
cli
adc
or
sbb
fsubl
ss
mov
jmp
sub
adc
addl
or
aaa
mov
push
cld
cmpsl
or
sub
loopne
xorb
jmp
cmp
push
inc
in
xchg
lods
adc
xchg
pop
add
mov
inc
mov
insb
xor
or
fimull
inc
jecxz
dec
mov
cmp
xor
imul
cmp
inc
inc
pop
sbb
sbb
bswap
leave
pop
ret
jmp
push
test
or
sub
testb
mov
pop
mov
loope
cmpsl
add
mov
jno
jmp
ja
stc
sbb
cs
sbb
cmpl
fldenv
or
add
mov
cmp
cld
cmpl
mov
cmpsl
push
adc
add
loop
je
add
rorb
lret
xor
cld
sbb
push
pop
push
clc
jo
popf
js
sbb
icebp
dec
lods
je
inc
mov
sbb
call
jo
ljmp
loopne
and
in
je
lea
pusha
clc
mov
xchg
mov
sub
jge
fdivs
inc
push
cmp
push
inc
mov
dec
sub
jmp
ljmp
add
in
punpcklwd
nop
or
mov
adc
jle
mov
cmp
sbb
lret
adc
inc
jle
call
adc
jmp
adc
enter
cmp
jnp
sub
loope
gs
fsubl
jo
ds
and
roll
mov
ret
dec
das
cmpb
mov
and
xchg
lret
mov
inc
sbb
loope
or
ds
lods
test
pop
and
xchg
cld
inc
dec
fiadds
sub
adc
lcall
sbb
dec
shr
mov
xor
push
push
mov
lods
ljmp
jl
ret
xor
je
outsl
sbb
lock
mov
mov
insb
repnz
xlat
lods
push
mov
je
sti
cmp
fdivr
adc
push
imul
xchg
and
mov
pop
jb
push
xor
mov
ss
cmp
leave
mov
cwtl
inc
sbb
cmc
push
out
push
adc
or
out
sub
sbb
xor
xor
movq
psubusw
xor
in
and
imul
mov
jb
xchg
push
mov
sub
xor
sbb
mov
push
xor
xchg
pushf
enter
adc
pop
loop
and
dec
pop
aaa
xor
and
arpl
and
adcb
call
sbb
loopne
and
rorb
adc
sbb
andl
insl
loope
sbb
loopne
fwait
out
lds
sbb
sbb
pop
add
dec
jae
cmp
leave
leave
sbb
arpl
add
ret
push
test
daa
inc
lock
xorl
and
pop
jle
ret
inc
dec
mov
add
shlb
test
fs
call
xchg
adc
in
add
pop
inc
cmp
subl
fisttps
inc
insb
mov
or
rcr
push
arpl
inc
or
sub
mov
ljmp
adc
repz
push
loop
jne
popa
adc
add
cld
mov
fsubrs
dec
dec
sbb
out
fistps
int
cmp
jne
and
dec
sub
add
jmp
in
jmp
dec
cmp
je
cmp
pushf
add
xor
or
push
push
gs
aaa
aaa
inc
mov
fsubl
or
clc
sub
fimull
sbbl
pop
std
and
cmpb
and
mov
mov
xchg
sub
inc
pop
div
jmp
mov
pop
push
lahf
gs
sbb
push
popf
test
push
inc
and
test
pop
mov
or
rclb
or
jo
mov
ficoml
js
sbb
mov
pusha
pop
rclb
xchg
xchg
and
or
mov
xlat
bound
fisttpl
mov
idivb
xorb
je
ds
clc
icebp
repnz
push
cmp
inc
pusha
cmp
lret
inc
cmp
cltd
xchg
xchg
mov
push
in
xchg
les
xor
fsubrs
mov
lea
daa
aaa
dec
cli
xlat
add
adc
icebp
push
cmp
or
sbb
fisubs
push
mov
add
xor
xchg
inc
xchg
repnz
lret
lahf
mov
push
cli
out
gs
or
lock
clc
clc
cld
add
sbb
jae
movl
repz
add
add
xor
lret
add
push
and
out
sub
or
add
dec
je
add
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
clc
jg
or
lret
ljmp
xor
push
and
jne
or
mov
mov
jle
fcoml
mov
sub
inc
inc
sti
in
popf
adc
je
dec
je
push
add
xor
mov
dec
mov
cli
incb
inc
add
jmp
sub
movsb
add
jnp
vsqrtsd
test
je
cmp
jne
sbb
adc
mov
pushf
cmp
rclb
ret
push
or
inc
inc
ja
rcrb
and
inc
jmp
xchg
jmp
jmp
cltd
idiv
sub
adc
inc
inc
imul
hlt
clc
jb
sub
mov
icebp
mov
js
jp
cmp
subl
fdivs
push
add
add
aas
cmp
mov
stc
data16
push
push
or
push
adc
push
push
lock
cmp
je
imul
fistl
fistpl
sbb
jne
jmp
daa
xchg
xor
pop
ficomps
xchg
aad
xor
dec
mov
repnz
jg
or
inc
imul
lcall
lea
push
ds
jne
cs
in
nop
xchg
jl
sub
push
jmp
clc
pop
je
cmp
pop
cmp
je
cmp
jne
jne
mov
sub
cmp
or
fcoml
iret
testb
jb
mov
movsb
add
ret
ret
and
jne
pop
dec
add
mov
dec
mov
js
outsl
jg
jecxz
rolb
sbb
xor
add
xor
enter
into
sub
mov
cmp
xor
cmp
mov
jmp
ds
push
jmp
inc
jl
std
push
pop
outsb
inc
jg
aaa
jle
add
shl
dec
mov
cmp
mov
sub
mov
mov
and
bnd
std
les
outsl
adc
test
or
sbb
xchg
inc
jle
inc
adc
jp
lcall
pop
and
mov
push
lahf
and
pop
call
xor
mov
and
xchg
add
aaa
out
jnp
cmpsb
mov
and
cmp
jl
pusha
mov
jg
aas
add
add
mov
inc
mov
roll
int3
add
cmp
insb
sbbb
orb
sub
loop
add
xor
aaa
mov
pop
stos
push
cmp
cmc
pop
das
mov
xor
xor
fsubs
inc
cmpb
sahf
test
and
add
adc
cmp
add
inc
inc
push
out
jmp
xor
xor
inc
sub
mov
loopne
adc
dec
push
or
pop
jp
adc
cmp
sbb
pop
inc
dec
adc
sub
cmp
cmp
cwtl
pop
data16
dec
addb
xchg
ret
and
inc
cmp
je
cmp
je
pop
jne
std
and
inc
sub
add
push
and
mov
adc
daa
movsb
hlt
clc
push
jbe
push
outsb
nop
sbb
hlt
add
xchg
call
jne
mov
mov
cld
push
gs
push
jmp
pop
push
sub
inc
inc
mov
pop
loopne
sub
jp
je
push
sbb
and
or
shr
mov
adc
and
out
adc
xchg
lock
pop
sbb
sti
call
inc
push
lcall
clc
cmpl
ss
or
jmp
loopne
cwtl
or
adc
mov
sub
inc
mov
add
push
sub
jge
inc
aam
shlb
jecxz
push
cmp
push
push
sbb
js
add
pop
push
add
pop
or
sbbl
add
push
fcmovbe
lcall
push
subb
inc
pusha
push
adc
sbb
jne
jno
xchg
pop
push
or
movsl
cmpsl
or
inc
inc
cmp
pop
add
pop
push
adc
int
push
inc
xor
icebp
jmp
inc
rolb
sbb
loopne
mov
fildl
push
shrb
je
fcomps
sub
mov
imul
in
cmp
jmp
adc
sbb
mov
or
ljmp
decl
adc
inc
jne
mov
movb
js
or
push
aad
fidivl
add
cltd
testb
pushf
jno
and
lret
aaa
daa
inc
or
mov
shlb
xchg
cwtl
call
roll
out
sbb
in
inc
aam
pop
stc
cmp
inc
inc
xchg
dec
mov
xchg
jmp
jmp
icebp
cmp
push
sbb
pusha
mov
push
sub
popf
mov
inc
or
push
mov
repnz
xchg
ds
adc
push
xchg
mov
outsl
test
iret
aas
nop
fs
or
and
jmp
cmpl
add
lods
inc
hlt
push
bound
incb
cmpb
jne
jne
mov
divl
loopne
and
jbe
sbb
xor
add
mov
fnstcw
pop
clc
or
add
outsl
stos
xchg
dec
fwait
mov
aas
add
lods
cmp
jne
xlat
je
push
pop
ror
mov
dec
stos
mov
or
mov
in
dec
xchg
test
sahf
cmp
rcr
mov
and
adc
push
sbb
mov
or
push
jg
inc
lock
and
jne
into
leave
pop
mov
pop
mov
rcl
add
push
adc
arpl
mov
jbe
mov
mov
add
lret
xor
fisttpl
inc
ret
sub
sarl
aam
jp
in
push
push
pop
fnstsw
mov
dec
dec
or
or
out
jne
push
insb
or
mov
xchg
adc
dec
push
loope
and
or
or
adc
or
imul
je
inc
add
and
sbb
cmpl
rcrb
mov
outsb
fadds
je
arpl
bound
fs
pop
mov
sub
mov
jg
mov
imul
xlat
push
mov
arpl
inc
stos
push
sub
adc
sbbb
sbb
inc
outsl
cmp
roll
jl
or
ffreep
pop
pop
test
xor
ss
jmp
xchg
pop
sbb
push
loopne
insb
xchg
cmpsb
add
enter
sub
call
inc
inc
xchg
loop
inc
xlat
sub
xor
addr16
out
jo
sbb
mov
lock
ss
or
push
or
mov
fidivl
inc
fmuls
std
jmp
lods
stos
enter
test
leave
subl
mov
fsubrs
bound
loope
or
sbb
jbe
xchg
dec
adc
push
lcall
inc
xor
cmp
jb
sbb
push
dec
pushl
scas
in
and
add
je
ret
scas
test
push
adc
sbb
push
or
add
cmp
inc
hlt
movl
mov
xchg
das
jmp
xor
inc
ljmp
mov
mov
test
pop
dec
jne
in
jge
mov
leave
inc
je
cmp
stos
mov
lcall
cld
subps
dec
or
cmpb
add
add
dec
pop
inc
mov
lahf
push
inc
pop
pushf
inc
or
push
nop
movsl
xor
addb
adc
subps
push
ret
orl
test
and
fbstp
into
in
nop
mov
or
xor
sti
fnstenv
movsl
adc
jmp
add
inc
cltd
mov
fnsave
and
loopne
mov
or
push
dec
je
dec
addb
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
sti
lods
fwait
jmp
cmp
jne
sbb
add
lea
pusha
cmp
push
jmp
xor
mov
aaa
hlt
in
sarl
bound
aad
insb
fildl
xor
mov
pop
mov
mov
xor
scas
push
pop
and
sbb
push
jmp
sbb
out
js
push
push
ds
dec
aaa
pop
shll
ret
or
fdiv
mov
aaa
mov
stos
in
stos
push
loope
dec
rorl
inc
and
cli
jne
adc
in
cmpsb
std
xor
mov
dec
mov
movsl
sbb
jno
cmp
mov
mov
nop
push
dec
movsl
jb
je
sub
xchg
cmpsb
mov
mov
sub
xor
cmp
and
add
enter
inc
mov
enter
cmp
lods
movsl
mov
push
nop
inc
inc
pop
das
or
lahf
orl
adc
insl
xor
pop
js
mov
push
push
sub
mov
pop
mov
push
and
xor
outsl
lcall
sbb
in
movl
add
lsl
in
rorb
xor
jl
je
pusha
imul
sbb
or
or
xor
inc
add
jmp
pop
mov
mov
idivb
or
cmp
xor
in
mov
movsb
jmp
orb
addb
arpl
inc
or
push
in
sbb
adc
pop
inc
jb
mov
push
popf
add
out
test
jmp
fsubr
mov
pop
hlt
push
or
pushf
clc
je
xchg
cwtl
mov
and
cmp
add
test
inc
icebp
cmp
dec
sub
jb
xchg
adc
je
insl
add
adc
add
inc
scas
and
int3
xchg
lret
push
mov
fidivl
cmp
add
fmul
rcl
loopne
sbb
js
in
cltd
or
test
mov
jg
and
dec
orb
hlt
mov
scas
cmp
fadds
in
dec
add
push
lret
shll
rorl
sub
dec
pop
cltd
xor
sti
pop
inc
fs
rcr
insb
sub
or
sahf
testb
xor
outsb
jno
outsb
mov
sbb
sbb
add
test
xor
jno
lea
rol
jle
push
dec
xor
adc
adc
sarl
sub
mov
das
add
add
pusha
jp
sub
push
mov
pop
outsl
jmp
inc
inc
call
push
add
mov
push
sbb
fs
jecxz
inc
lret
jo
inc
mov
sub
imul
and
mov
push
ret
mov
or
jno
jbe
inc
jbe
jecxz
pusha
cmp
add
cltd
or
or
scas
jmp
sbb
add
pop
int3
xchg
outsl
jae
lcall
dec
stc
cmp
push
add
xchg
inc
jmp
adc
insb
inc
in
jmp
pusha
jecxz
add
lea
inc
scas
adc
push
rorb
or
rcl
xchg
sub
leave
ret
pop
daa
mov
out
fdivs
inc
lcall
ss
push
rorl
cmc
pop
movsl
arpl
adc
cmpb
inc
or
jo
bnd
scas
sub
ja
or
add
adc
outsb
sbb
int
and
pop
outsl
pop
dec
mov
jge
adc
and
bound
dec
adc
cmp
ss
or
sbb
dec
sub
subl
add
lahf
and
push
js
dec
cmc
push
sub
adc
cltd
dec
inc
imul
movb
out
addr16
mov
jae
ret
cmp
jecxz
push
rcll
add
xlat
adc
loopne
push
cmp
cltd
jnp
pusha
dec
aad
test
aam
jnp
xchg
insl
mov
pop
mov
adc
xor
call
std
out
jo
push
jae
cmp
jmp
mov
rcl
sbb
add
push
adc
and
loop
adc
int
xor
push
lcall
jmp
jecxz
cmp
lea
and
bound
sbb
xchg
cs
gs
push
aas
push
jle
add
test
stos
mov
push
adc
xor
xor
pop
add
sub
xchg
jae
jl
inc
dec
pop
inc
fmuls
push
xor
in
icebp
and
or
or
cmp
adc
cld
adc
ja
movzwl
in
pop
mov
or
fdivrs
add
js
xor
pop
jo
dec
pop
jns
scas
shl
inc
push
push
mov
inc
jo
or
pop
jmp
pusha
cmp
inc
andb
push
add
movsl
jg
lret
pop
pop
push
pop
xchg
jmp
sbb
pop
je
mov
jp
bnd
cmp
pop
mov
jmp
pop
and
xor
xor
fs
push
fldcw
add
push
xchg
inc
add
bound
sarb
cli
outsb
jmp
rorb
aam
jnp
or
shr
rep
adc
data16
sbb
adc
fs
dec
sbb
in
adc
pop
jo
mov
sub
pop
and
pop
mov
fwait
scas
stos
pop
jg
inc
jns
and
mov
cmpsl
sub
jne
and
sbb
addb
leave
hlt
lea
outsl
xor
jg
pushf
inc
jae
sbb
xchg
lods
push
adc
xchg
sbb
jnp
inc
mov
push
sarl
and
enter
inc
hlt
add
xchg
loopne
jmp
add
or
add
adc
daa
jmp
aam
jne
xor
push
pushl
shl
or
sub
ret
push
mov
insb
adc
xor
dec
mov
or
xor
inc
add
decl
arpl
loopne
pop
faddl
mov
pop
lret
fcoms
ret
cwtl
xchg
adc
mov
push
cmp
in
xchg
scas
or
dec
loope
call
fisubrl
enter
xor
in
xchg
cltd
adc
cmp
add
inc
jbe
add
add
ret
loop
or
adc
or
adc
testb
sbb
repz
xor
cmc
pushf
inc
movsb
push
mov
outsl
loopne
call
adc
push
aas
pusha
mov
jo
std
loopne
or
mov
arpl
inc
xchg
xor
jo
add
or
cmp
and
pusha
or
cmp
add
xor
aas
pop
cmp
push
jmp
es
in
mov
push
sbb
fisttpll
sub
mov
enter
scas
jge
push
adc
or
stos
pop
inc
jne
pop
lods
gs
xor
sbb
xchg
mov
clc
imull
dec
dec
pop
jge
js
inc
cli
imul
jp
or
movsb
rcrl
sbb
sbb
jnp
sub
fadds
jne
rcr
in
inc
adc
jae
sahf
and
add
ret
out
stos
or
or
aad
sub
in
adc
add
jmp
cmp
cmp
pop
push
or
mov
sbb
xchg
adc
push
push
ds
mov
pop
xor
pop
pop
ret
ret
push
inc
mov
push
inc
nop
mov
dec
cmpsl
jg
lods
outsb
test
push
out
add
loopne
adc
imul
popa
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
and
and
addl
push
jmp
es
add
sbb
jb
adc
adcl
clc
loopne
lret
push
cmpb
shrb
call
push
movl
cmp
clc
test
inc
testl
fisubl
push
mov
lock
pop
inc
aas
jmp
dec
leave
and
xchg
ljmp
adc
inc
movsl
mov
stc
xor
pop
sub
repz
xorb
mov
push
ss
rorb
sar
add
push
cmp
mov
push
mov
test
jne
mov
fnstsw
sub
add
shrb
insl
mov
lods
addr16
sub
mov
jo
pop
subl
enter
push
mov
cmp
jo
pmaddwd
sub
dec
mov
je
es
cmove
dec
scas
or
loopne
std
mov
adc
jbe
sub
rcl
int3
pop
sub
inc
mov
cmp
filds
cmp
inc
jb
or
or
pop
mov
dec
movsl
imul
or
shl
push
pop
sub
pushw
dec
andb
enter
pop
mov
mov
loopne
add
shlb
pop
movsl
mov
sbb
add
sbb
dec
xchg
pop
xor
arpl
test
sub
subl
jnp
lahf
ja
cmc
inc
test
pop
jmp
mov
push
rcl
test
cmp
add
add
rcl
inc
xchg
jno
js
push
loope
push
dec
sub
flds
jp
flds
outsb
push
lock
sar
mov
mov
adc
stos
lret
frstor
cmp
or
jmp
mov
sbb
mov
aaa
repnz
rol
jno
and
sub
push
std
mov
dec
jne
jmp
push
sub
cs
xor
aas
movsl
add
push
dec
je
dec
jne
mov
icebp
xabort
addr16
pop
sahf
xchg
dec
push
mov
dec
pop
lods
aam
jns
add
sub
loopne
das
shrb
sarb
lock
add
xor
add
inc
sbb
fidivrs
jo
push
jne
mov
push
cmp
out
outsb
std
jne
es
jne
mov
adc
push
cmp
negb
sar
ret
movzbl
push
dec
jmp
adc
sahf
lahf
jmp
std
std
jmp
cld
iret
lcall
push
adc
in
adc
es
fiaddl
inc
push
addl
clc
loopne
sbb
or
adcl
pop
dec
insl
leave
or
and
imul
pop
jmp
adc
cmc
loopne
enter
out
xchg
rorb
cmp
adc
push
add
push
pop
inc
mov
mov
or
add
adc
fimull
dec
adc
inc
xor
or
inc
or
pop
pop
pop
cwtl
cmp
mov
dec
adc
push
inc
or
sub
lods
es
sbb
dec
adc
or
pop
shlb
nop
bound
push
or
std
pop
enter
inc
rclb
sbb
fiadds
add
xlat
enter
sbb
dec
shlb
mov
je
mov
cwtl
mov
outsb
stos
or
jg
add
mov
movsb
or
pushf
push
mov
rolb
mov
push
fidivl
mov
enter
cmpl
arpl
ja
mov
out
jmp
dec
sti
cmp
loopne
rcrb
icebp
adc
jb
pusha
das
test
or
sub
and
mov
add
stc
jo
mov
or
ljmp
adc
fcoml
add
pop
pop
sub
call
jmp
filds
cmp
add
push
pop
into
gs
adc
pop
mov
mov
and
dec
aad
mov
jne
push
cmp
add
les
mov
icebp
pop
rcll
push
xor
gs
pop
add
lea
rclb
cld
adc
inc
add
out
lods
test
jl
pusha
dec
jge
jnp
adc
mov
idivb
push
test
or
ret
ror
or
cmp
aad
popa
or
lea
inc
mov
je
add
mov
call
jge
not
and
sub
sub
mov
addb
xchg
adc
or
push
mov
inc
mov
mov
adc
push
pusha
push
test
cwtl
ja
or
pushf
mov
out
push
fiaddl
jmp
idiv
pop
adc
sar
stc
and
mov
inc
je
mov
inc
movb
xor
fsubrs
fstpl
shl
in
cli
or
add
jmp
or
mov
inc
frstor
cmpsb
loope
cltd
fdivrs
push
scas
mov
pop
inc
and
sarb
cmp
jb
mov
jae
ret
je
scas
push
jl
push
lods
jl
add
int3
ds
lea
jno
pushf
ret
shl
push
adc
cld
xlat
test
or
adc
mov
hlt
push
sub
or
in
mov
retw
shl
push
adc
jle
jl
or
divl
lret
add
and
stos
pop
xor
xor
xor
jo
and
inc
add
je
add
test
out
jne
add
adc
dec
mov
out
cmp
je
test
je
cmp
mov
fdivrl
aam
xchg
pop
addr16
outsb
or
inc
lret
cld
xor
loopne
mov
test
lods
push
ror
mov
and
lock
push
jg
in
lods
push
xorb
lock
or
jl
and
lret
cmp
incb
cmpl
pop
sbb
addb
pop
jbe
inc
push
fdivr
cmpl
pop
cwtl
inc
jae
pop
inc
jmp
cmp
jne
jmp
add
add
sub
mov
push
mov
stc
xlat
hlt
in
inc
adc
cmp
enter
dec
or
mov
cmp
je
cmp
and
stc
adc
stos
or
adc
xor
mov
fimull
gs
mov
incb
mov
lret
cmpsb
dec
mov
and
je
loop
es
sbb
sub
mov
dec
dec
push
aam
es
sbb
ja
and
lea
sbb
scas
lret
mov
jne
push
adc
push
add
and
dec
cltd
and
dec
pusha
mov
pop
xor
sbb
push
mov
xor
lods
scas
push
adc
shl
cld
sub
sbb
std
mov
sbb
or
add
jno
dec
xor
or
lock
in
xor
mov
fists
mov
add
or
pop
sub
movsl
cmp
in
pop
cld
imulb
orl
mov
or
rclb
pop
cmp
push
cmp
fists
add
ret
xchg
mov
pop
cwtl
jl
push
sub
aad
or
ja
ret
loope
pop
push
cmp
insb
push
push
mov
and
mov
addr16
data16
shll
sbb
jbe
shll
cmp
jne
cmc
xchg
out
push
mov
xor
or
mov
xor
lret
or
jae
jmp
or
inc
or
sbb
sbb
or
push
or
aas
les
std
xchg
push
dec
push
hlt
inc
js
xor
leave
push
cmp
dec
inc
out
push
jmp
mov
ret
icebp
adc
jl
push
fsub
mov
adc
dec
jae
clc
xor
inc
addr16
adc
pop
push
adc
pop
xlat
pop
adc
or
push
jno
bound
aaa
push
call
pop
lods
icebp
in
repz
sbb
icebp
mov
out
shll
icebp
jecxz
xchg
xchg
lods
iret
adc
iret
xchg
mov
cmpsb
pop
lea
sbb
push
addr16
lret
lods
ficompl
adc
push
jge
sbb
dec
mov
test
or
adc
mov
inc
mov
ja
pop
jbe
lea
adc
sbb
dec
rep
mov
mov
call
lret
adc
sub
pop
movsb
xlat
and
add
and
mov
add
es
out
push
xchg
or
out
adc
cmp
pop
jo
and
push
repz
mov
notl
stos
js
fdivs
or
xchg
test
cmp
cmp
adc
or
sub
hlt
or
mov
mov
pop
mov
out
cmpsl
adc
ret
jo
shrb
xchg
or
fidivl
xchg
cmp
mov
xchg
adc
cmpb
mov
push
loope
and
push
pop
and
adc
les
jmp
movl
xchg
or
cmp
stos
adc
pop
inc
dec
sub
xchg
sbb
adc
repz
shlb
scas
add
push
stos
push
mov
leave
lods
mov
add
xor
std
sub
or
mov
jne
fs
add
cmp
or
movb
xor
pop
shrb
and
jge
lret
and
lds
push
rorl
lea
adcl
into
orl
cmp
or
rorb
xchg
repz
out
push
cmp
dec
mov
add
mov
insb
sbb
xor
ljmp
push
jne
ss
adc
jmp
subl
xor
xor
shrb
out
jae
iret
pusha
add
int3
or
lret
fdivrs
jp
int
mov
adc
jbe
mov
jb
lea
push
adc
or
or
add
cmp
sbbb
pop
adc
test
movb
mov
repnz
push
add
es
or
outsl
push
lock
add
adc
pop
sub
test
out
add
dec
add
or
sub
dec
cmc
or
push
in
daa
outsb
mov
add
jge
pop
jmp
pop
xor
out
fidivl
scas
and
push
loopne
push
loop
arpl
mov
in
jno
inc
pop
std
jne
jne
xor
loop
add
xor
stos
or
cld
jmp
aad
mov
test
and
mov
mov
pop
pop
mov
sub
xchg
add
jmp
pop
repnz
ret
or
ficoml
add
test
add
addl
hlt
push
xchg
cmp
nop
pop
pop
dec
inc
repz
sahf
movsl
mov
add
lret
or
ljmp
scas
in
sub
mov
mov
inc
fs
mov
cmp
add
pop
ficoms
cmp
push
outsb
pop
add
or
sti
mov
rcrb
gs
rcrb
sub
mov
fldz
scas
add
push
or
jmp
aaa
add
and
jmp
add
add
pusha
cmp
je
dec
fisttpl
pop
imul
sbb
jne
ja
mov
mov
sbb
mov
test
clc
cmpl
sbb
outsl
lret
ret
rorb
jg
cmp
fnstcw
or
push
and
mov
imull
mov
lods
pusha
jmp
movq
movaps
sbb
push
enter
shlb
jle
add
push
fidivs
push
add
ror
test
xorb
jl
and
fisubl
repz
or
jg
dec
mov
xchg
ret
adc
inc
push
std
cs
jnp
mov
push
and
mov
in
rcr
mov
add
adc
mov
add
repnz
or
push
mov
add
pop
rcrb
jl
pop
cmp
addps
int
add
cmpsl
mov
cmp
dec
sbb
je
mov
add
inc
lds
adc
filds
cmp
imul
mov
sbb
mov
add
dec
outsb
mov
jne
xor
cmp
mov
add
xor
es
push
add
lds
mov
pop
adc
shrb
adc
mulb
call
adc
xchg
lea
add
inc
lock
inc
push
jne
inc
jge
arpl
adc
loope
fimuls
push
push
movb
orl
addr16
movb
andb
and
xchg
jo
out
cmpsl
enter
push
cmp
int3
inc
rcrb
sub
cld
cmp
in
nop
adc
mov
icebp
movsb
jnp
je
jp
inc
sub
jne
sbb
loope
xorb
imull
dec
popa
and
inc
imul
fisttpll
pop
and
xor
jmp
xor
minps
jo
out
testb
or
lcall
and
cmc
imul
fcomi
push
pop
cmp
pop
inc
inc
push
shl
aas
shll
jno
pushf
push
dec
and
popa
pushl
push
push
data16
adc
cmpsl
xchg
fisttpl
mov
xor
or
inc
dec
loopne
add
aas
ret
mov
xor
bound
push
xchg
pop
pop
pop
push
sub
cmp
push
sub
pop
and
gs
jecxz
mov
mov
dec
push
mov
nop
and
sbb
jns
arpl
adc
add
popa
and
adc
sbb
imul
subb
sbb
iret
and
and
sbb
mov
sub
cmp
mov
pop
jg
jb
in
idivl
arpl
push
sub
adc
lods
ds
imul
shl
or
cmp
fdivr
aas
movsb
out
inc
cmp
jne
inc
cmpb
out
adcb
ffree
xor
mov
inc
inc
and
adc
or
aas
sbb
add
sbb
cmp
pop
jo
test
inc
xor
stos
adc
hlt
arpl
cmp
ret
mov
addr16
ds
dec
mov
add
jne
in
clc
adcb
cmp
xor
adc
stos
or
mov
or
lret
or
fsubrl
pusha
adc
inc
xor
je
sbb
aaa
push
lds
pop
and
loope
scas
dec
jb
data16
xchg
lods
inc
xchg
add
pop
int
and
inc
addr16
xor
add
test
fildl
inc
add
das
sub
cwtl
pop
sbb
data16
mov
sbb
rorb
or
ret
xor
loop
fcompl
mov
rol
jo
cmp
inc
pop
fisttps
jle
mov
arpl
or
dec
push
jo
sub
scas
mov
cmp
pushf
mov
cmp
je
test
or
push
lret
sub
in
mov
jne
push
adc
or
cmp
mov
or
pop
sub
cmpsl
es
sbb
ret
mov
mov
jne
adc
mov
fnstcw
jo
and
push
pushf
or
xchg
adc
daa
incb
inc
cmp
into
and
xor
sahf
or
cmpb
mov
aaa
jmp
xor
pop
ljmp
push
std
outsb
cmp
push
jbe
mov
push
push
fnsave
filds
pop
jne
jge
or
arpl
pop
and
cs
scas
movb
sti
addr16
xor
ja
pop
out
push
pop
sar
mov
mov
enter
jecxz
dec
or
loope
jecxz
mov
push
xchg
inc
pop
or
sub
test
dec
sub
ss
enter
test
movsb
xchg
mov
push
inc
sbb
add
mov
loop
les
jne
pop
push
dec
jmp
sub
mov
push
movsl
add
push
les
xchg
pop
test
pop
xor
ret
jo
add
sti
xor
imul
jns
ret
imul
xlat
add
mov
js
hlt
sbb
sub
stos
push
mov
sbb
insl
ret
roll
movsb
sbb
add
or
enter
jbe
inc
dec
push
rolb
push
xor
repz
dec
shl
ret
and
rcrb
xchg
add
jecxz
add
dec
sbb
dec
fstpt
adc
xlat
out
xor
imul
add
loope
rcll
jl
mov
aam
test
insl
cwtl
or
shrb
in
xchg
sub
in
inc
adc
imul
loopne
in
test
jmp
fldl
je
push
or
mov
scas
incl
mov
addl
inc
decl
cmp
pop
hlt
or
pcmpeqd
and
adc
ljmp
in
test
add
sub
pop
fimuls
jne
adc
inc
xor
sbb
add
ljmp
xor
cmp
aam
push
adc
xlat
adc
dec
loopne
adc
mov
cs
mov
pop
push
adc
sbb
ljmp
rolb
add
ficoms
mov
movsb
hlt
xchg
fdivrl
pusha
pop
icebp
mov
push
repz
adc
or
repnz
or
hlt
add
or
mov
testl
loopne
push
and
xchg
loopne
mov
outsb
adc
insb
rolb
lock
add
js
cmc
aam
sub
cld
pop
in
and
mov
push
in
or
cmp
dec
jbe
and
dec
sbb
sbb
callw
or
jg
mov
sbb
add
shlb
pop
cmp
adc
mov
faddl
adc
clc
adc
sbb
or
cli
rcr
sub
jmp
daa
adc
inc
sbb
sbb
jbe
rorb
popa
jo
or
sbb
setno
imull
or
push
or
mov
push
sbb
add
js
jbe
jmp
sub
dec
push
cmp
sbb
add
push
mov
push
push
fsubrl
mov
mov
lea
test
mov
dec
cmp
pushf
lock
pop
iret
ljmp
push
addr16
clc
jbe
jne
mov
addr16
add
dec
shll
jne
xchg
dec
xor
adc
repnz
rcll
add
dec
mov
and
cmovp
lret
enter
pop
jns
mov
or
add
popf
adc
push
sub
adc
push
add
push
jle
or
xchg
in
movsl
lds
leave
add
ja
inc
push
mov
out
pop
rorb
add
dec
outsb
pop
mov
in
push
jmp
sub
push
mov
adc
push
pop
jmp
cmpsl
jmp
push
stos
fdivs
sbb
push
or
mov
dec
add
ficomps
add
sahf
test
add
jmp
xor
jae
cmp
je
inc
push
sub
adc
ss
add
push
adc
pop
add
out
inc
aam
in
xor
mov
add
add
sub
outsb
sbb
fiaddl
cs
rcll
adc
test
imul
test
adc
add
sub
je
or
sbb
int
dec
and
add
insb
jne
out
iret
mov
pop
jle
xorb
pop
pop
imul
rorb
dec
xchg
xchg
and
dec
je
punpckhwd
xchg
sbb
addr16
cmpb
pop
lods
fisttpl
lret
das
fdivr
loope
jns
xor
out
adc
add
aaa
mov
push
pop
popa
sub
fdivr
xchg
imul
cmp
push
adc
mov
push
sbb
mov
cmp
mov
cmp
lret
push
push
add
cmpsb
mov
jmp
inc
lods
movsl
lcall
push
les
jge
ret
aaa
mov
pop
outsl
sarl
inc
sub
jb
mov
mov
push
inc
cmp
pop
std
idivl
jo
fsts
stc
xchg
clc
push
mov
stc
mov
push
xor
shl
insb
and
notb
imul
add
jmp
insl
in
push
loopne
inc
sub
pop
adc
pop
adc
pop
in
dec
or
pushf
mov
ret
add
roll
cld
cmp
addr16
les
mov
jmp
dec
or
mov
cltd
pop
adc
das
rolb
inc
add
ret
bound
adc
sub
clc
sbb
pop
cltd
ljmp
clc
or
jle
jb
stos
imul
insl
push
cltd
pop
jne
push
dec
pop
sets
push
fisubl
int
push
inc
fcmovne
inc
push
mov
jg
pop
das
in
add
aam
int3
push
push
add
addb
shlb
movsb
lret
inc
dec
loope
jo
add
add
pushf
stos
sub
mov
out
inc
or
jmp
jbe
and
mov
jge
call
jge
loop
xor
lea
aaa
push
inc
xorb
push
xchg
dec
or
sbb
enter
loope
or
mov
push
and
aam
push
das
pop
cmp
mov
push
imul
mov
xchg
mov
mov
cltd
cmp
or
dec
push
ss
icebp
adc
movsb
adc
aam
pop
lret
movsb
sbb
push
movsb
add
add
ret
insb
movups
push
fs
nop
adc
or
jo
orb
test
inc
popf
orl
shll
pop
dec
loop
loope
push
ret
loopne
ret
and
or
pop
pop
mov
adcb
xchg
fnstsw
sbb
stc
and
dec
insb
sub
jp
fisttpl
jmp
loop
mov
add
mov
push
sub
in
push
rorl
xor
scas
sub
mov
fwait
or
mov
imul
inc
loopne
les
jecxz
inc
popa
mov
push
lock
inc
les
push
jmp
pop
mov
mov
and
or
cmp
xlat
repnz
jno
dec
sub
and
sub
fmul
scas
sar
pop
fmull
rorb
inc
adc
mov
adc
les
into
je
movsl
adc
fstpt
mov
and
bound
pop
popa
xchg
pop
repnz
loopne
pop
mov
inc
cmp
xchg
push
ja
ja
int
cmp
xchg
pop
xchg
mov
fcomip
mov
pop
add
push
loope
aam
xchg
mov
and
mov
jno
les
mov
movsl
test
cmp
jge
roll
cmp
cmp
test
mov
test
fcoml
test
adc
out
jle
loopne
dec
pop
pop
jne
out
xchg
test
std
adc
stos
loop
scas
adc
jg
or
rep
jmp
mov
sbb
jb
int
fnstenv
movb
test
lea
or
icebp
jns
jnp
test
adc
inc
push
fs
mov
pop
mov
imul
mov
int3
insl
cmc
movsl
cmp
add
add
mov
sub
jnp
push
imul
jns
int3
push
les
repz
inc
mov
mov
call
iret
repz
lock
hlt
dec
loope
iret
clc
clc
cld
push
inc
pushf
rcrb
add
clc
repz
jmp
int
dec
and
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
mov
xchg
daa
outsb
pop
sbb
stc
sub
repz
in
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
nop
dec
dec
addr16
push
xorl
mov
ficomps
or
push
push
pop
pop
jl
out
push
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
ficomps
mov
lds
push
push
add
pop
mov
adc
ja
ljmp
or
adc
xchg
xor
inc
cld
cmp
push
adcl
out
push
leave
mov
fmull
jbe
fldenv
testb
jne
pop
icebp
pop
inc
or
sub
mov
aam
sar
ljmp
out
or
mov
mov
dec
testb
jne
push
sbb
sar
imul
sub
inc
and
cmp
inc
adc
imul
ficomps
test
repz
pop
mov
sub
cmp
call
xchg
movsb
sbb
add
push
or
jbe
clc
stos
rorl
jmp
idivb
cmp
cld
ret
cli
movsl
scas
or
jge
fstl
enter
cld
mov
jno
adc
xor
pop
rclb
or
enter
lock
sbb
out
stos
cmpsb
jne
adc
testl
push
pop
in
fs
xor
fs
jle
or
cmp
aam
sub
or
dec
push
or
push
aaa
adc
int3
les
call
inc
xorl
sbbb
daa
sbb
jg
cmpb
lock
adc
daa
icebp
sbb
sbb
rcrl
dec
loope
cmp
and
dec
pop
push
rorb
cld
add
pop
std
movb
jmp
jecxz
fisubrl
xor
sub
std
add
cmpb
add
lret
jmp
lods
xor
or
pop
loopne
mov
sbb
add
adc
roll
rolb
lock
lock
dec
adc
cs
inc
pop
cwtl
sub
addr16
xchg
lock
mov
cmp
xor
xchg
push
push
cs
scas
scas
cmp
mov
testb
je
sub
pop
pop
xor
add
neg
sub
rorl
lret
je
repz
cltd
mov
ljmp
adc
sar
mov
shr
mov
pop
pop
pop
sbb
lods
data16
stc
or
add
loope
jns
pushf
pushf
popl
jbe
jno
mov
pop
test
neg
or
adc
add
mov
jo
stos
es
ret
adc
fldl
bound
sti
mov
dec
and
adc
cmpsl
xor
dec
loop
aam
xor
fdivs
inc
push
sbb
push
leave
jecxz
fsubr
add
cmpsl
xchg
add
mov
andl
dec
out
adc
sbb
pop
push
xor
stc
lods
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
push
je
push
imul
in
adc
out
adc
and
cmp
push
pop
in
xchg
sbb
insl
push
jne
add
xlat
jbe
mov
inc
out
outsl
mov
mov
push
ret
fldenv
mov
add
and
arpl
add
sub
sub
push
adc
loopne
orl
andb
pop
adcb
pop
clc
or
rorl
dec
or
fwait
imul
test
enter
add
mov
push
add
mov
mov
jne
scas
xor
push
inc
call
inc
xchg
test
cmpsb
push
outsb
dec
or
inc
fsubr
add
nop
pop
push
adc
movsl
test
jbe
push
mov
adc
push
mov
dec
xchg
cs
sbb
fcompl
add
dec
ljmp
jns
mov
lock
enter
xor
xchg
add
mov
xchg
push
push
pop
cmc
and
adc
pop
inc
fsubl
dec
add
push
dec
mov
fnstsw
ss
pop
sbb
or
pusha
arpl
dec
mov
push
mov
je
inc
inc
loopne
mov
add
dec
dec
movsb
dec
jmp
push
dec
push
push
js
lcall
or
jbe
cld
rorb
adc
add
push
jmp
inc
and
jmp
int
dec
test
or
lcall
cmpl
jne
push
cmp
mov
jp
adc
das
nop
popa
add
add
mov
fdivs
add
outsl
push
setnp
cli
adc
cs
lret
gs
mov
ss
mov
jo
inc
in
jne
sub
popf
mov
adc
sub
jno
in
in
shrb
fbld
xchg
call
loopne
lret
push
adc
or
mov
repz
xchg
sar
lahf
lea
das
adc
add
pop
ja
stos
movsbl
andl
sarl
pop
sar
pop
lods
movsb
faddl
sub
sahf
inc
loopne
mov
jb
je
call
rcr
mov
les
lret
mov
xor
add
jl
inc
test
sub
fwait
into
cltd
mov
pop
or
add
mov
add
faddp
or
fs
jle
sti
mov
mov
pop
or
movsbl
adc
push
imul
ret
or
lea
ja
rcrl
int3
in
mov
mov
mov
jb
hlt
pop
sbb
inc
hlt
stc
sub
xor
je
insb
mov
pop
les
test
cmp
ds
into
xlat
mov
dec
pusha
sub
adc
mov
pop
and
js
add
mov
add
add
sbb
xor
movsl
mov
incl
insb
cmp
sbb
imul
lcall
or
xchg
adc
pop
aad
lock
dec
daa
sub
int
pusha
sub
xchg
mov
add
or
sbb
sahf
cmp
je
pop
push
or
sub
sub
ds
mov
mov
inc
adcl
mov
dec
fnstenv
xchg
dec
adc
jge
sbb
je
push
arpl
xchg
pop
fisttpll
mov
aaa
jne
das
mov
jo
and
add
dec
stos
shrb
sti
fmull
das
ret
or
ja
pop
sbb
in
mov
inc
mov
and
adc
dec
je
push
addl
inc
lock
into
push
insl
cmp
mov
ret
loopne
xor
pushf
sub
data16
rorb
shl
dec
sub
sarb
adc
adc
adc
shr
test
int
or
leave
and
mov
pop
add
dec
adc
sbb
mov
mov
inc
lods
xlat
mov
jmp
dec
cmp
mov
xor
mov
je
xchg
sbb
scas
push
and
mov
push
cs
cmp
outsb
jo
jmp
jge
mov
add
insl
rcll
or
je
or
or
shll
test
insl
jp
jns
movsb
je
xor
push
mov
mov
loop
fimuls
stc
test
mov
xchg
lods
jl
xchg
add
or
mov
and
insl
sbb
or
loopne
pop
adc
test
mov
push
add
dec
ficompl
mov
jg
adc
jmp
sub
pop
mov
popa
mov
out
into
icebp
and
pop
push
sbb
mov
cltd
add
xchg
mov
testb
or
push
push
adc
mov
and
adc
and
fisubrs
jmp
push
xchg
sub
inc
jo
inc
ljmp
sbb
mov
scas
ljmp
pop
jne
popf
push
or
push
data16
nop
sbbl
sub
cmpb
jne
xor
inc
stos
movsb
loop
subb
hlt
test
inc
shrl
mov
sbb
pop
dec
xchg
mov
pusha
cld
or
mov
mov
push
inc
daa
add
inc
pushf
cmpb
cmp
stos
push
js
or
mov
mov
ret
pop
in
adc
dec
adc
xor
adc
inc
cld
jmp
or
sub
sub
cltd
or
sbb
shrb
jl
jae
inc
inc
add
shl
fcmovb
dec
sub
pop
fidivs
movsb
add
xchg
cmp
sbb
add
cmp
popf
jno
adc
and
lea
loopne
das
sbb
xchg
push
inc
orb
and
incl
enter
xor
shrb
and
repnz
sahf
add
mov
sub
sub
inc
cmp
jmp
addr16
orb
add
shl
movb
inc
jmp
test
fisubs
mov
jmp
dec
ret
add
or
orb
aas
sar
ret
data16
mov
mov
sub
push
movsb
xor
xor
movsb
test
adc
daa
outsl
inc
and
fcompl
or
xor
in
jle
loop
in
or
cmp
xor
faddp
sbb
test
pop
or
pop
pop
push
fldcw
xchg
xor
add
xor
cmpsb
in
mov
sub
mov
addr16
addl
ds
sbb
int3
test
jle
sub
mov
loope
lret
lcall
daa
sub
nop
rolb
int
fldenv
pop
sub
xor
outsb
push
pusha
adcb
nop
popa
movsl
add
xchg
xor
nop
les
inc
movsl
sbb
mov
mov
cmp
lret
cli
movsb
adc
mov
dec
xor
mov
test
pop
testl
imul
outsb
xchg
push
mov
std
dec
xchg
push
popf
movsl
ss
push
add
nop
mov
movsb
mov
and
or
pop
mov
loopne
add
aas
pop
push
add
movsl
test
aas
xchg
fidivs
fs
push
dec
push
inc
add
clc
mov
jmp
mov
aas
sub
mov
mov
nop
inc
mov
loopne
push
fs
mov
pusha
pop
aas
push
mov
mov
out
cmp
push
lock
add
push
adc
mov
aas
loopne
fimuls
cmp
inc
push
push
push
sub
push
dec
sarb
push
faddl
sbb
cltd
jecxz
sbb
add
pusha
pop
movsl
push
pop
or
push
pop
and
push
mov
pop
and
mov
fmul
push
or
pop
ret
adc
loopne
aas
loop
push
es
mov
jle
jbe
cltd
xchg
or
push
icebp
and
or
and
inc
pop
push
movsb
icebp
aam
push
fisubrl
jmp
shl
outsl
mov
iret
cmp
lahf
std
jp
sbb
daa
clc
mov
pushf
inc
or
and
fcoms
pop
mov
push
mov
fdecstp
inc
imul
ss
nop
in
adc
sbb
icebp
into
sub
push
movsb
fwait
dec
cmp
cmp
sub
xor
jo
jl
rorb
into
add
scas
add
adc
mov
or
gs
mov
pop
call
clc
shr
shrb
and
add
aam
xor
add
ds
mov
lahf
sti
sbb
pushl
insl
and
lahf
xchg
test
jp
add
push
mov
stos
mov
stos
push
fdivrl
inc
clts
cmpl
fneni(8087
insb
jge
adc
jmp
inc
xor
leave
lret
loopne
loopne
loopne
and
pop
shrb
or
sub
jmp
and
movb
xor
xchg
mov
xchg
fisubrs
add
int3
flds
push
pop
sbb
add
sar
push
arpl
xchg
xor
test
or
lock
inc
or
insb
dec
xchg
loopne
mov
loope
add
cmpb
xchg
adc
adc
outsb
dec
call
lahf
addl
add
cmp
pop
inc
or
imul
pusha
sub
and
mov
lret
xor
aas
insl
cli
dec
ss
hlt
lock
sbb
sbb
cwtl
subb
adc
addr16
add
push
lock
sti
xor
std
cmp
mov
push
outsl
out
xor
mov
xor
flds
adc
jbe
sbb
adc
outsb
out
enter
sar
or
sub
arpl
shl
stc
stos
mov
push
and
adc
clc
pusha
push
mov
in
xchg
push
mov
adc
sar
jmp
push
add
jno
fstps
add
pop
test
data16
mov
or
lcall
or
cmp
and
enter
shlb
pop
sti
lret
and
mov
inc
mov
cmc
xchg
imul
jo
pop
ret
shrl
fsubp
or
mov
out
sub
iret
inc
hlt
imulb
psllw
jo
mov
mov
gs
inc
mov
scas
leave
fnstcw
push
mov
pop
push
ret
inc
pop
push
add
xchg
jl
cmp
lret
xchg
mov
sub
lahf
mov
ret
int3
push
js
adc
imul
shrb
js
adc
imul
xor
mov
xchg
test
mov
ljmp
xlat
and
cwtl
inc
adc
loope
leave
xlat
push
dec
pop
xchg
push
push
xor
cmpsl
xchg
or
push
mov
or
sbbb
push
add
xor
push
sbb
or
dec
ret
divb
data16
sbb
jecxz
mov
pop
or
test
cmp
sti
sbbb
or
fwait
fs
dec
xchg
xchg
xor
sbb
mov
movzbl
jle
add
jg
nop
pop
xor
inc
add
mov
daa
xchg
or
hlt
imul
jmp
xchg
add
cmp
int
arpl
push
pop
mov
mov
add
adc
cmpl
and
and
push
rorb
cmpsl
xor
loopne
sub
shrb
sbb
clc
or
sub
xchg
mov
js
imul
xchg
add
aaa
xor
adc
aam
test
push
jmp
daa
pusha
push
jmp
inc
aaa
mov
or
aam
sub
sbb
movzwl
add
in
les
push
enter
nop
push
ficoml
pop
add
cli
cmp
mull
cmp
jbe
loopne
dec
xchg
cs
ja
movsb
inc
popf
sbbb
es
hlt
outsb
adc
imul
test
test
push
fbld
into
pop
shl
ret
push
inc
pop
ja
adc
imul
xchg
sar
mov
xorb
sub
cmpsb
add
test
ja
or
add
rcll
add
mov
or
or
adc
push
pop
xor
pusha
das
leave
jecxz
imul
or
cmp
adc
mov
inc
sahf
daa
sub
inc
rclb
mov
insb
jne
jbe
pop
and
add
sbb
xchg
fwait
xchg
inc
adc
andb
sbb
xor
adc
cmp
dec
inc
daa
daa
daa
daa
cmp
es
stc
push
sbb
in
jl
addl
orb
rcrl
shlb
mov
roll
leave
add
mov
dec
cmp
add
sahf
addb
adc
nop
call
push
sbb
mov
mov
divl
test
mov
push
mov
adc
test
int
inc
sub
inc
mov
or
mov
cmp
push
jb
adc
xchg
addr16
adc
xchg
in
and
orb
add
or
call
xchg
cmpsl
frndint
cmpsl
xchg
jae
cli
mov
mov
movsb
xchg
hlt
mov
stc
pop
mov
jb
add
lret
in
xchg
out
adc
nop
cmp
mov
xchg
mov
mov
adc
add
add
xchg
fwait
push
es
or
sbb
leave
add
repnz
mov
and
call
push
cwtl
lods
xor
pop
pop
dec
ss
or
movb
or
repz
adcb
fcoml
sbbb
cwtl
subb
in
decl
and
fmul
in
sub
dec
mov
sbb
lods
inc
mov
pop
roll
in
add
sti
or
cltd
fs
aam
in
stos
loope
bound
jbe
jl
outsb
add
test
pop
adc
or
lods
jecxz
pop
enter
add
mov
and
push
or
fadds
cmc
fbstp
dec
mov
in
mov
cmp
cmpsl
push
mov
mov
mov
pop
lods
dec
popa
sub
push
call
dec
lcall
adc
adc
mov
lea
push
mov
dec
add
outsl
clc
mov
sub
hlt
cmp
ror
fwait
rcl
push
rcll
pop
sbb
add
cmpsl
shlb
sbb
push
pop
out
rclb
push
dec
mov
jno
dec
mov
mov
dec
add
inc
test
sbb
popf
jnp
cmp
jmp
mov
adcl
mov
fadds
movsb
add
add
add
or
cmp
and
and
jne
sub
add
data16
adc
push
xor
sbb
mov
and
rcl
sbb
xchg
sbb
out
add
add
mov
mov
mull
mov
movsb
je
add
pop
or
inc
shlb
repnz
adc
or
lock
push
in
pop
and
sbb
pop
mov
aas
out
enter
shlb
adc
shr
and
mov
mov
std
mov
into
mov
mov
arpl
adc
mov
cs
bound
push
sbb
push
inc
imul
cmc
aam
nop
cmp
outsl
add
mov
mov
hlt
mov
push
pusha
push
out
aaa
adc
enter
push
sub
outsb
mov
rorl
or
test
popf
mov
inc
lahf
or
or
out
fisubrs
cld
ficoms
push
push
out
or
std
sub
js
cs
fcomps
xor
cmp
aad
or
lcall
sub
mov
mov
decl
orb
mov
enter
or
push
loope
out
daa
bound
mov
add
loop
mov
filds
leave
sub
mov
cmp
decw
sbb
mov
orl
lock
sbb
and
cld
and
xor
sbb
and
shll
adc
or
mov
add
ja
pop
dec
xchg
xchg
lods
jmp
test
int
cmp
nop
mov
push
std
je
jns
jno
fnstsw
xchg
mov
mov
push
test
lods
loopne
mov
shrl
in
mov
adc
cmp
jne
movl
inc
imul
std
jne
shr
fistpl
or
cmp
add
mov
leave
dec
push
push
add
mov
or
or
push
pusha
punpckhbw
popf
stos
jae
scas
popa
dec
addl
mov
pushl
cmp
fidivl
or
enter
jmp
adc
or
fwait
addb
push
and
sbb
scas
into
aaa
inc
jne
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
push
push
roll
jne
aam
dec
call
add
imul
leave
inc
or
sub
lea
pushf
aaa
jmp
outsb
enter
iret
ds
mov
push
cmp
inc
add
sbb
ljmp
add
mull
inc
push
jge
add
popa
add
lock
mov
xchg
sub
push
sbb
xor
or
pushf
xchg
lock
inc
negl
jne
mov
dec
xlat
inc
pop
adc
add
adc
xor
es
leave
or
inc
dec
jne
xchg
mov
mov
jmp
add
jo
addr16
jnp
data16
jmp
cmp
fldl
adc
je
lea
pop
loopne
sbb
adc
push
sbb
pop
inc
in
dec
test
push
and
scas
and
xchg
cmpsb
fstpt
add
mov
inc
lahf
inc
add
or
xchg
jae
jne
ret
pop
in
push
dec
aam
push
mov
aam
xor
xlat
xchg
movsl
test
add
cmp
xchg
lods
add
push
add
and
push
insb
or
loope
popfw
jo
lock
add
xchg
inc
pop
sub
jg
out
inc
jmp
xor
dec
sbb
mov
mov
xlat
add
ret
add
sub
ljmp
faddl
jne
fwait
jno
mov
xlat
mov
popf
mov
ds
jmp
and
cmp
push
adc
jp
mov
stos
pop
push
and
in
pusha
and
ret
jo
xorl
sarb
dec
ds
push
sbb
mov
lea
push
int
inc
or
mov
rolb
aaa
cmpl
popa
xchg
adc
xorb
push
push
out
sub
push
cmpsl
shlb
pusha
inc
add
pop
pusha
test
and
jo
andb
test
loopne
add
ret
je
cmp
xor
and
js
pop
pop
sbb
mov
data16
mov
jg
mov
jae
scas
push
sbb
and
jno
inc
inc
sbb
pop
xor
stos
sub
add
movswl
sub
and
nop
mov
rorb
sub
cmp
daa
sbb
in
dec
lea
jg
jp
into
inc
pop
or
imul
cld
pop
das
mov
ret
sub
stos
dec
test
jns
mov
mov
xor
add
mov
mov
loope
push
sub
sbb
add
jne
mov
and
nop
mov
mov
inc
pop
inc
pop
loope
aas
add
add
in
jle
sub
insb
or
add
nop
or
rolb
add
insb
leave
mov
pop
pushl
jmp
pop
push
dec
jb
inc
fwait
adc
adc
jg
js
mov
adc
and
and
in
xchg
jno
and
push
push
sub
test
rorb
lahf
cltd
and
aas
push
scas
jl
sub
push
mov
xchg
lock
movl
push
clc
pop
data16
imul
jo
int
or
lock
dec
add
jg
dec
pop
cmp
xchg
mov
mov
inc
push
mov
add
mov
mov
in
push
bound
mov
add
in
push
imul
dec
dec
nop
and
sbb
pop
shll
fstpt
jl
test
dec
inc
jbe
add
push
push
jl,pt
int3
arpl
push
mov
mov
jnp
mov
add
or
xor
rolb
or
aam
sub
sbb
push
adc
mov
adc
sbb
in
and
roll
sbb
xor
enter
inc
inc
sub
enter
cmp
and
jle
jns,pt
jmp
jmp
push
and
cmpsl
bound
inc
jg
mov
jne
insb
and
pop
cmp
adcl
sbb
jbe
nop
inc
pop
sbb
popf
jecxz
outsb
adc
adc
or
sub
mov
dec
push
mov
and
push
jo
gs
sbb
adc
cmpl
jae
jb
push
es
adc
sub
and
mov
jbe
jge
mov
outsb
clc
dec
push
mov
mov
test
or
xorl
pop
fnstsw
xor
pop
nop
push
mov
pop
xor
pop
pop
aas
xchg
arpl
aaa
pop
push
jne
cmp
stos
inc
lahf
xor
enter
sbb
or
pop
pop
negl
in
dec
sub
ds
push
inc
iret
js
out
lcall
ss
push
jne
out
or
fidivs
and
xorl
dec
xor
lea
sbb
test
lock
call
or
enter
std
addr16
rolb
jne
sub
sbb
nop
inc
ss
xor
outsb
fadd
incb
lret
xor
cmp
xor
int
dec
ret
call
jno
idivb
sbb
mov
xor
jge
into
iret
movsl
or
mov
xchg
out
nop
test
or
cmp
push
lret
mov
pop
dec
cmp
pushf
dec
mov
mov
mov
xchg
pop
mov
ret
fcoml
ret
popa
mov
xor
movsl
dec
dec
jne
xor
pop
or
add
pop
jnp
mov
cmpsl
fcomp
mov
mov
pop
xchg
jp
cmp
icebp
mov
pop
mov
mov
mov
subb
es
xchg
xor
mov
pop
mov
and
push
or
or
or
fstpt
aas
insb
jne
inc
sub
mov
aad
add
mov
pop
and
jb
insl
cld
ss
cmpb
movl
mov
xor
lea
icebp
cmpsb
rclb
add
imul
xor
loope
fnstcw
repnz
mov
andl
scas
push
jbe
sbb
dec
xor
outsb
push
cmp
and
pop
loopne,pt
lea
ljmp
inc
xor
fs
sub
jo
out
test
xor
out
xchg
and
jle,pt
push
or
shr
sbb
sbbb
xor
shl
inc
lea
or
pushf
adc
dec
push
pop
add
imull
pop
adc
or
cwtl
add
inc
xorb
cmp
dec
add
stc
mov
jo
ljmp
push
cmp
or
mov
jecxz
push
ss
mov
xor
mov
cwtl
add
cmp
mov
inc
cld
pop
cmp
xor
push
pusha
add
enter
dec
mov
mov
add
or
jno
or
mov
or
mov
sbbb
arpl
dec
add
addb
cs
adc
insl
adc
gs
xchg
xchg
addr16
add
mov
jl
out
or
std
fs
loopne
loope
and
xor
dec
xorl
js
or
ja
mov
push
adc
imull
sbb
push
test
sbb
jle
push
add
ja
movsb
jne
xor
mov
arpl
test
cmp
mov
cpuid
jle
mov
popa
or
jo
mov
jl
push
jge
popa
pop
mov
ja
mov
or
fidivrl
cmp
add
xor
dec
int
sub
bound
mov
push
mov
imul
mov
dec
insl
insb
mov
insl
mov
xchg
loopne
icebp
out
dec
mov
ret
add
outsb
adc
cmp
cmp
push
inc
daa
add
pusha
cld
xor
inc
add
and
aad
push
mov
mov
ss
xchg
out
ret
sbb
dec
inc
inc
inc
or
mov
dec
mov
or
enter
outsb
ret
in
dec
dec
dec
daa
jle
fistpl
imul
push
lcall
sub
xor
incb
repz
pusha
into
sub
pop
dec
mov
das
data16
sbb
loope
das
aas
dec
cs
pop
clc
shr
das
in
push
pushf
jmp
push
sub
and
pop
mov
add
dec
cwtl
enter
jno
jp
jge
dec
ret
jle
dec
xor
push
sub
sbb
sub
jmp
pusha
adc
and
in
or
cmp
inc
clc
add
test
jne
inc
and
clc
cmp
cld
sbb
push
inc
call
dec
sarb
mov
or
mov
adc
pop
jmp
fwait
cli
xor
fcomi
inc
and
jg
sbb
mov
je
nop
fnstcw
push
push
mov
lret
mov
orb
test
loopne
xorb
sub
enter
cmpsb
dec
and
in
int
mov
pushf
xchg
pop
inc
mov
inc
inc
add
pop
je
pop
xchg
mov
movsb
adc
xlat
add
loope
out
out
pop
adcb
pop
mov
jb
fstpt
mov
es
lret
adc
pop
movsb
pop
fld
dec
and
int3
out
lods
out
lret
push
lret
popf
test
or
lahf
out
pop
int
sbb
push
sbb
mov
jmp
or
push
xchg
stc
movb
or
mov
stc
jno
sub
in
pop
push
hlt
xchg
mov
in
daa
jg
lahf
add
insb
outsb
adc
adcl
adc
jno
dec
bound
or
adc
add
or
test
and
cwtl
xchg
push
jb
adc
push
add
out
cmpl
sbb
lret
jne
xor
push
test
xchg
cmpsl
and
add
or
negl
add
outsb
inc
cltd
cmp
jle
gs
inc
lret
sbb
cltd
test
push
adc
ljmp
inc
add
cmp
add
aam
xchg
add
and
xor
xchg
lahf
sub
sbb
mov
lds
dec
dec
jmp
and
les
dec
lock
xlat
enter
fsubl
idivl
push
push
jo
ljmp
lds
hlt
ret
dec
jns
sub
js
and
es
pop
loope
inc
sbb
mov
test
in
mov
lcall
mov
or
add
clc
call
rolb
mov
shll
cld
cmp
push
lods
and
lods
es
sahf
idivb
clc
lock
insl
pop
or
jb
pusha
lods
and
or
push
hlt
pusha
fwait
popa
stos
dec
mov
add
pop
add
sbb
outsb
adc
pop
lea
xchg
or
lock
test
adc
dec
shrb
das
jno
call
sub
lsl
inc
mov
rcrl
sub
xchg
jmp
add
gs
pop
enter
add
sbb
inc
xchg
mov
jg
ret
sub
jmp
sysenter
aam
insb
sub
or
rclb
out
fisttps
push
lock
mull
fnstsw
xchg
lsl
jmp
push
pop
and
xchg
outsl
mov
jmp
rcr
or
push
div
pop
in
xchg
and
dec
xor
out
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
cld
cmp
lcall
out
sbb
fxch
pop
ret
and
adc
test
in
adc
and
mov
xchg
out
fisttps
mov
or
out
scas
add
cmp
js
aam
jmp
test
push
push
or
sbb
push
mov
sub
out
lods
stos
mov
or
orb
mov
inc
mov
jg
jae
sbb
lea
push
ret
push
xchg
push
lock
inc
xchg
inc
jb
mov
nop
dec
mov
jbe
pop
mov
add
xor
xchg
fistl
scas
popf
mov
stos
rorb
xor
pop
sbb
test
xchg
xchg
imul
pop
aas
cmpl
rcll
fildll
push
add
jnp
incb
cmp
fldt
loopne
daa
jg
fwait
dec
in
xor
xor
add
add
xlat
xor
aas
arpl
fcomps
xchg
push
mov
das
add
aaa
xor
repnz
pusha
enter
fsubl
or
divb
add
push
push
dec
or
sarl
stos
add
mov
into
ljmp
insb
mov
push
add
or
loope
pusha
mov
mov
mov
or
mov
js
sbb
lahf
clc
dec
gs
jbe
mov
xor
adc
cld
inc
add
pop
and
add
mov
mov
loop
sbb
push
add
lret
and
dec
incb
add
add
push
or
test
addb
lret
xor
fisubrs
inc
xor
aaa
movsl
add
push
call
insb
mov
or
arpl
bnd
xchg
idiv
into
lret
mov
mov
arpl
neg
in
jno
xchg
fcompp
mov
stos
mov
inc
sbb
int3
sub
int3
shll
into
das
nop
mov
pop
int
sbb
inc
jbe
pop
dec
add
and
sbb
mov
add
mov
ffree
pusha
add
push
xchg
inc
cld
push
adcl
iret
lret
shl
pop
cmpsb
fstpl
xchg
iret
insb
pop
add
adc
stc
loopne
shlb
fiadds
or
fwait
xchg
jmp
decl
adc
pop
rcll
push
sahf
push
xchg
pop
dec
dec
jns
inc
ret
pop
repnz
pop
inc
fmull
fstl
mov
push
das
push
adc
icebp
lds
xchg
jne
lea
xor
movsb
add
dec
nop
xor
out
cmp
push
inc
push
dec
push
arpl
fnstsw
jnp
outsl
mov
lea
cmp
lods
jb
daa
jl
lahf
dec
adc
adc
mov
fstl
lret
fdivrs
and
ss
mov
test
inc
and
sahf
jle
pop
shlb
out
sbb
inc
xor
fs
inc
adc
push
cltd
jmp
inc
sub
xor
out
std
mov
push
jmp
test
inc
repnz
pop
fucompp
jg
jge
mov
clc
and
ret
and
rcr
jne
push
push
test
jmp
popf
test
testb
pusha
sub
sub
adc
push
adc
mov
pop
cltd
sub
or
or
add
xchg
mov
sbb
test
in
sub
inc
and
add
or
sarb
and
ds
dec
mov
ss
or
nop
cmc
or
lcall
pop
pop
loopne
or
mov
push
jmp
shll
dec
xchg
int3
mov
shrl
xchg
repnz
mov
adcb
add
ds
push
loope
or
pop
add
orb
mov
lds
mov
or
add
add
jecxz
inc
shrb
jecxz
mov
and
jo
mov
sbb
adc
push
adc
mov
inc
xor
push
add
in
in
push
xor
xor
int
inc
mov
mov
cmpsb
nop
sub
jbe
push
in
dec
push
cmp
adc
nop
pushf
xchg
inc
shrb
repz
nop
mov
aad
add
mov
xchg
push
pop
adc
and
push
xchg
push
fxch
dec
cmp
and
cs
cmpb
mov
in
fdivs
and
dec
scas
xor
xchg
add
sbb
jmp
adc
cltd
dec
push
fistl
add
mov
mov
add
xchg
lods
cmp
mov
in
mov
stc
or
jmp
mov
sbb
mov
je
test
add
or
add
jne
push
pop
inc
dec
aad
adc
pop
leave
jne
and
fistl
and
adc
movsb
push
and
sbbb
lods
lods
lods
mov
adc
iret
rorl
rcrb
in
push
add
adc
ficompl
pop
mov
pushf
loope
out
out
ds
loop
lcall
add
shll
push
std
movl
adc
mov
adc
or
inc
das
adc
mov
cwtl
je
rolb
orl
sbb
rorb
xor
ret
mov
or
pop
pop
sub
loope
push
not
push
les
and
sbb
stos
mov
out
push
adc
mov
adc
xlat
xor
test
jmp
xchg
sub
in
out
insl
cwtl
add
push
jg
mov
jnp
mov
mov
lods
dec
jne
pop
mov
xchg
lea
pop
or
testb
xor
mov
cld
push
add
inc
les
push
add
mov
data16
adc
and
add
insl
mov
and
add
or
mov
mov
stos
lea
ret
gs
push
in
fstpt
cli
out
or
je
jmp
dec
mov
sub
ret
adc
xor
sbb
add
jo
lret
mov
sub
outsl
mov
divb
cmc
jne
or
xor
dec
sub
idiv
cmp
je
or
es
fs
call
jmp
add
sub
add
les
mov
push
mov
and
mov
fldpi
stos
bound
data16
test
loop
pop
sbb
mov
inc
std
aas
dec
hlt
mov
test
jne
push
adc
cmp
jno
inc
or
inc
dec
shl
inc
lods
test
dec
addl
ficoms
mov
add
adc
or
or
adc
add
jmp
push
stos
sarl
cs
mov
xchg
subb
movsb
cwtl
pop
fnstcw
leave
jne
cmp
adc
js
add
push
cmp
je
cmp
fmull
cmp
or
out
inc
bound
out
xor
daa
or
subb
cmp
push
rclb
daa
lods
mov
jno
mov
jae
xor
adc
rolb
fcmovnb
inc
add
fisubs
ds
add
pusha
lret
jle
xchg
mov
andl
add
pminsw
stc
mov
fs
xchg
adc
inc
fs
jle
jb
fdivrs
cmp
inc
scas
pop
cmp
lea
mov
popl
repnz
push
cmp
cmp
pop
pop
mov
adc
lea
int3
shrb
or
xor
pop
rcll
pop
push
lahf
add
mov
rol
mov
mov
ja
fsubrl
xchg
mov
add
sbb
and
or
mov
les
stos
sbb
fsubl
or
mov
xorb
xor
adc
xor
add
and
out
cmp
push
fwait
js
add
push
or
inc
push
mov
sbb
jp
cld
in
inc
pop
int
fstps
xchg
jmp
outsl
mov
jbe
pop
andb
es
gs
fidivs
push
and
xor
pop
fmull
mov
test
and
sub
in
cmp
inc
xchg
pop
and
out
push
push
pop
mov
adc
lret
nop
dec
ror
inc
jo
push
pop
adcl
jb
xor
mov
mov
out
add
xor
sbb
sbb
and
pop
popf
xor
add
pop
adc
js
gs
cmp
add
outsl
xchg
xchg
je
or
jne
dec
mov
dec
sbb
or
fisubrl
add
sub
fiaddl
movsl
adc
jl
ss
add
inc
cs
je
cmp
movsb
faddl
push
into
fwait
jne
jmp
or
js
and
cmp
and
cld
push
dec
add
push
pop
jle
in
push
insl
inc
or
outsb
inc
jne
sbb
push
idivb
push
mov
push
aas
push
popa
and
cli
or
xchg
adc
jl
adc
fnstenv
add
xor
dec
std
shlb
mulb
mov
or
push
scas
incb
mov
pop
clc
int3
in
mov
sti
loop
insb
dec
and
pop
test
dec
and
jae
or
aas
lea
add
inc
aam
push
test
daa
orl
andl
pop
mov
call
or
mov
xchg
mov
xchg
pusha
gs
mov
js
push
je
lods
sbb
lock
sub
lea
aaa
hlt
mov
push
or
dec
pop
lds
loop
shlb
popf
out
dec
or
pop
ss
add
call
pop
push
int
shl
std
xchg
mov
nop
in
mov
xlat
daa
mov
or
lock
jg
dec
lock
mov
adc
movb
int
sbb
mov
xchg
pop
dec
inc
or
movb
push
cmp
mov
mov
lret
stos
xor
add
push
add
add
mov
push
mov
mov
fnstsw
mov
fistps
push
clc
add
arpl
fbstp
daa
faddl
add
or
aas
cmp
or
dec
aas
js
rorb
and
into
sub
shll
cmc
test
xor
lds
adc
dec
mov
dec
inc
push
dec
imul
mov
fmuls
or
fs
pop
ret
jp
clc
add
xor
jmp
sbb
rcll
scas
and
mov
add
jo
sbb
dec
cmp
cld
repz
mov
orb
jmp
mov
jmp
lea
jno
cmc
push
cmp
roll
loopne
ds
push
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
stos
mov
push
adc
xchg
test
cs
push
and
cmp
aad
xchg
push
cmp
cmp
or
push
dec
xchg
fildll
aad
dec
out
mov
orps
pop
test
not
mov
push
jp
andb
dec
cltd
adc
xor
cmp
jmp
dec
lock
int
cmpsb
mov
jbe
xor
mov
test
js
xlat
and
adc
or
add
not
push
inc
sbb
or
push
dec
inc
add
mov
out
or
inc
adc
std
aas
sub
ss
idivl
xor
lret
dec
cs
repnz
cmp
inc
adc
jl
ds
out
inc
add
enter
fs
inc
or
sar
dec
jmp
dec
xor
incl
mov
mov
add
dec
cmpsl
inc
jp
scas
xor
addb
xchg
mov
mov
xchg
test
push
jmp
cmpb
inc
inc
scas
sbb
add
shlb
mov
pushf
cmp
ljmp
fimuls
adc
dec
add
add
xchg
jb
mov
add
pop
xchg
rcl
pop
and
inc
data16
pop
dec
adc
mov
cmp
cmp
fnstenv
push
nopl
into
jmp
insl
cmp
jg
or
jmp
push
push
sbb
dec
cmp
dec
ss
pop
and
adc
daa
xchg
jmp
dec
and
mov
ret
mov
or
add
mov
adc
jmp
or
inc
dec
add
ljmp
rclb
xchg
xchg
sbb
add
sbb
insl
dec
aas
jbe
sub
inc
adc
sti
xor
lock
jne
loopne
popf
inc
mov
arpl
pop
or
cmp
mov
or
cmpsb
xor
and
stos
outsb
es
or
push
pop
aas
pop
dec
inc
decb
dec
add
jno
dec
stc
push
pop
pop
frstor
stos
or
inc
cmp
lock
inc
push
pusha
pop
clc
lock
movsl
mov
clc
lock
iret
cmpb
sub
aam
outsl
jecxz
xchg
stc
loopne
pop
lds
daa
or
mov
push
in
ljmp
and
pop
cs
lret
xchg
lods
fdivrs
or
sbb
sbb
decl
mov
mov
jle
sub
out
cmp
add
nop
mov
jo
push
push
subb
hlt
sbb
xchg
ret
inc
push
dec
mov
pusha
push
mov
mov
sub
repz
stos
loopne
or
add
ret
pop
adc
lock
cmpsl
mov
push
adc
imul
adc
ja
dec
fcompl
hlt
sub
cmp
adc
mov
sub
mov
js
popf
mov
fsubr
push
mov
insb
stos
push
push
inc
fmull
ror
mov
fs
pusha
daa
sub
jne
push
imul
jmp
adc
outsl
push
repnz
sbb
adc
mov
movsl
or
imul
fstp
aam
pop
movsl
push
imul
orb
mov
aam
jmp
add
push
or
cld
inc
inc
fidivl
add
push
scas
add
push
mov
pop
add
xor
out
jl
pop
imul
xchg
sub
jg
push
cmp
inc
jmp
bound
cmp
into
punpcklwd
add
push
movsb
fisttpl
xor
push
inc
adc
push
cmp
test
xor
pop
in
pop
mov
das
je
dec
sarl
or
mov
icebp
xor
icebp
xor
cwtl
sahf
adc
or
and
cmp
sub
adc
jo
mov
and
add
sbb
mov
or
xor
xchg
clc
sub
ljmp
jb
das
call
out
push
dec
adc
push
and
lods
jl
lahf
out
push
dec
and
push
jg
outsl
inc
or
jl
idiv
jbe
jle
xor
jg
jg
mov
jg
lea
sbb
stos
jne
lock
in
push
pop
ffreep
lea
lea
inc
out
add
xchg
mov
inc
and
mov
xor
shlb
add
fs
cmp
or
pop
sti
lahf
or
ret
mov
lret
ret
pusha
das
movhps
dec
and
add
out
mov
mov
sbbb
xchg
mov
mov
hlt
pop
mov
lods
mov
jnp
jns
push
add
push
and
mov
xor
push
sbb
aaa
and
cmpps
jge
inc
stc
and
pop
inc
mov
ret
mov
fmuls
out
shl
or
jl
sbb
pusha
or
insb
iret
dec
ret
in
jl
js
mov
into
pop
push
cmc
cmp
sahf
stos
mov
nop
dec
add
sti
dec
sbb
and
jecxz
mov
ja
cmp
aas
out
insb
daa
rcll
mov
es
repnz
sbb
and
sti
subb
and
adc
lea
pop
adc
add
inc
mov
pushl
call
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
mov
icebp
inc
mov
bound
inc
push
test
xor
xchg
adc
dec
test
push
repnz
pusha
adc
std
cmp
or
and
or
sub
sbb
cmp
and
push
add
lea
lea
push
mov
cmpsb
or
or
push
jbe
sub
jl
cmp
mov
mov
fs
in
add
add
mov
or
ds
add
mov
cmp
fiadds
loopne
fstpt
imul
icebp
mov
sarl
adc
mov
mov
cmpl
test
mov
jno
push
xor
sbb
pop
loop
mov
adc
jb
ret
add
pop
push
and
sbb
push
inc
cmp
loope,pt
shrl
out
push
push
push
ret
sub
popa
xchg
or
ror
adc
cmpsb
add
or
test
sbb
sbb
or
pusha
xor
add
stos
xchg
orl
xchg
cmp
pop
and
mov
and
pop
jno
mov
add
push
pop
arpl
or
ds
test
add
add
add
xor
mov
pop
inc
pop
dec
pop
bound
outsl
daa
rcl
jecxz
or
andl
out
data16
es
pop
pop
je
pusha
xchg
mov
imul
testb
ds
push
loopne
call
inc
in
push
mov
sbb
outsb
test
adcl
mov
dec
aam
sbb
test
jl
adc
adc
out
rol
sbb
xor
jne
gs
es
xor
adc
cmp
sub
loopne
cmp
popa
jg
xchg
je
into
lods
push
lods
ret
inc
jge
adcb
add
subl
cs
push
lea
lock
inc
mov
test
das
insb
push
flds
adc
hlt
push
push
das
or
movsb
hlt
sbb
sbb
test
push
fs
inc
fsubr
sub
adc
in
test
popf
pushl
and
mov
icebp
sub
xor
das
sbbl
cmp
add
mov
or
or
fs
adc
xlat
pop
inc
mov
mov
push
push
nop
dec
imul
cwtl
or
shll
pushf
mov
cmp
sarl
and
jecxz
and
mov
cmp
orb
sti
add
inc
jmp
push
mov
cs
cmpsb
lods
mov
adc
ja
or
pop
dec
test
and
dec
add
dec
nop
int3
dec
scas
mov
pusha
pop
test
cmp
lock
nop
leave
in
je
push
or
jl
mov
stos
into
incb
rolb
jb
adc
jmp
mov
stos
popf
sub
add
scas
inc
and
push
cmp
cmp
outsl
and
inc
jle
sub
cmp
xchg
test
and
or
bound
aad
cmp
retw
xor
jnp
jo
xor
imull
loop
sbb
adc
sbb
mov
fldt
mov
clc
loopne
shll
jle
idivl
mov
dec
jbe
nop
add
jne
jmp
negl
imul
sbb
mov
cmp
and
mov
xchg
rclb
cmc
fisttpl
leave
pop
push
sub
and
cmp
cmpb
dec
cwtl
mov
mov
adc
sub
cmp
or
pop
inc
mov
lods
sub
mov
and
loopne
je
mov
mov
jge
movsb
nop
mov
mov
movsb
aaa
sbb
cmp
pop
testl
testl
sbb
inc
jmp
je
dec
or
jge
add
clc
cmp
repnz
push
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
xor
sbb
sub
dec
mov
dec
mov
cmpsl
test
sti
ljmp
cmp
mov
cwtl
jge
add
mov
pop
push
sbb
out
mov
mov
mov
dec
sub
insb
rol
mov
jbe
push
lahf
dec
call
and
sub
xchg
xor
jne
fsub
adc
and
lods
pop
add
add
call
push
push
loopne
insb
add
pushf
imul
inc
xor
mov
jb
or
or
mov
imul
into
jbe
dec
andb
mov
clc
or
xchg
les
ljmp
and
and
pop
mov
nop
inc
and
xlat
jae
mov
pop
mov
push
push
fstl
mov
mov
pop
lods
xchg
ja
movsb
adcl
nop
scas
inc
lods
lock
dec
fsubrl
int
decl
jp
jne
aam
jle
inc
or
cmp
or
mov
dec
or
pop
dec
xchg
nop
mov
test
lock
and
add
or
insl
mov
push
lea
lcall
add
aas
les
mov
add
bnd
push
pop
add
ret
lock
shlb
pop
cmpl
insl
mov
add
pushf
sub
clc
sbb
sti
jg
mov
es
aaa
adc
popa
sbb
sub
mov
shll
shr
mov
loop
lock
fcoms
ret
lahf
and
pop
mov
dec
inc
and
jns
mov
stos
push
pop
add
add
idivb
add
sahf
push
shrl
popa
pop
sti
inc
loopne
shr
or
mov
sahf
dec
mov
subb
jne
outsb
mov
mov
aam
sub
push
push
pop
mov
inc
pop
add
lock
rcr
ja
or
fiaddl
mov
and
lock
insl
adc
or
or
fisubrl
adc
js
mov
bound
movsl
scas
mov
loope
jl
dec
call
int3
jmp
lods
or
sbb
shll
mov
sub
push
dec
into
jmp
lods
cmp
ds
mov
dec
and
or
int3
and
adc
pop
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
or
jo
mov
inc
mov
psubsw
fcoml
dec
sarb
sahf
cmpsl
std
aad
inc
add
push
push
jb
call
iret
shll
arpl
into
cltd
notl
sbbb
mov
sbb
add
testb
js
and
mov
push
push
add
addr16
sub
lods
lods
mov
pop
add
inc
jl
and
pop
add
leave
shlb
sub
pop
dec
push
das
jl
and
push
cmp
pop
in
mov
sbb
adc
or
test
jne
and
sub
fimull
pop
lahf
std
insb
aad
add
push
or
fnstenv
dec
call
stos
ret
inc
add
xor
iret
repz
inc
or
inc
sub
push
out
cmp
fcmovbe
mov
pop
imulb
es
sbb
or
mov
rclb
xchg
jg
lea
push
lcall
sbbb
push
mov
adc
divl
mov
lahf
call
in
movsb
inc
sbb
aas
jne
ret
dec
pop
loop
pusha
pop
je
fstl
pop
inc
dec
add
inc
adc
and
push
sub
out
inc
push
xchg
jle
inc
jo
mov
ror
aaa
sqrtps
testb
pop
jae
or
xor
mov
push
xor
fcomp
stos
fistl
sub
mov
xorb
inc
cli
pop
pop
or
sub
ja
flds
bound
add
cli
shr
les
xor
add
mov
adc
push
or
sbb
insl
cmpsb
inc
lods
mov
inc
lret
lock
jne
sbb
xchg
mov
shr
addr16
push
ficomps
push
adc
mov
jge
jne
lea
and
xchg
in
and
or
test
cmp
fwait
loopne
mov
pop
add
sub
mov
iret
shrb
loope
stc
mov
arpl
test
jns
xor
push
sbb
adcl
jle
and
loopne
sbb
jmp
gs
mov
xchg
adc
push
in
dec
mov
in
xor
adc
or
mov
insb
into
enter
cmp
sbb
xchg
push
lea
cld
das
mov
cmp
leave
sar
or
cmp
mov
add
or
ror
jae
mov
mov
cmp
xchg
subps
add
xor
mov
sbb
and
dec
pop
ret
shrb
cltd
insb
xlat
and
es
mov
lods
add
inc
dec
mov
cmpsl
mov
aam
pusha
jo
inc
aad
icebp
cmpb
push
push
push
add
mov
popf
and
jns
push
sub
xor
jle
xchg
ficomps
mov
nop
stos
addr16
lock
hlt
or
or
fs
js
fadds
sti
jg
rcll
push
hlt
mov
andl
sbb
jle
and
dec
data16
or
lea
and
out
jbe
jo
lret
add
cld
cmp
fsubs
and
dec
sbb
and
loopne
add
adc
sbb
dec
sub
bound
outsb
pop
les
dec
hlt
loopne
or
push
lea
adc
mov
test
ret
std
scas
cmp
push
push
cs
xor
fisubrl
pop
xchg
je
dec
or
sarl
fs
add
mov
ja
mov
cwtl
mulb
mov
add
test
adc
add
call
sbb
xor
clc
add
mov
test
icebp
rol
and
add
imul
daa
sub
jne
push
icebp
and
add
je
xchg
cmp
sbb
pop
sbb
or
inc
sub
fisttps
cmp
dec
dec
mov
mov
inc
dec
lock
mov
sbb
dec
icebp
insb
mov
push
mov
fdivl
mov
mov
std
xchg
lret
xor
sub
out
jl
fs
xor
jae
mov
sub
cli
or
shufps
add
adc
and
adc
lock
adc
rolb
dec
jecxz
jae
dec
add
sub
daa
ret
sub
rolb
pushl
push
and
movsl
pop
mov
jae
in
pop
lock
jns
adc
fiadds
into
fisubl
sbb
mov
pop
data16
adc
xchg
sub
or
insb
sub
mov
dec
push
test
popa
add
mov
pop
loopne
push
movsl
jne
lea
sub
inc
mov
add
shlb
test
movsl
lods
scas
add
push
dec
cmp
lock
inc
sbb
and
push
inc
test
adcl
mov
mov
push
mov
xor
add
push
jo
lret
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
sbb
jmp
and
push
and
lahf
mov
dec
pushf
add
call
push
test
test
andb
xorb
adc
or
inc
push
inc
rorb
pop
sbb
jmp
sbb
xor
int3
ret
test
rcll
lds
jb
xchg
out
or
les
or
push
pop
mov
push
push
loope
inc
add
sbb
stos
aas
lea
push
jo
push
push
sub
pop
mov
inc
imul
and
pushf
push
or
pop
clc
pop
xor
mov
and
cmp
cmc
imul
mov
push
adcb
loop
sahf
leave
pop
rorb
pop
xor
ret
addb
lea
cmp
loopne
inc
mov
rorl
mov
jmp
test
push
std
je
scas
movsb
in
enter
jl
jo
and
add
js
jmp
sbb
jb
sub
push
mov
pop
adc
or
test
das
dec
mov
sub
popl
add
fs
adc
adc
lock
push
leave
jo
push
outsl
dec
and
sub
or
sbb
es
and
dec
jae
and
movl
aaa
lea
idivl
mov
add
add
add
pop
sbb
xchg
ret
xor
popf
pop
pop
clc
out
pop
mov
cmp
sub
xor
fcoms
jbe
mov
test
stc
sbb
loopne
jb
sub
and
push
jmp
cltd
xchg
shll
or
mov
dec
les
adc
mov
adc
cmp
xchg
sbb
jno
rol
or
and
rcrl
mov
andl
mov
movsb
mov
cli
mov
daa
or
sbb
jle
cltd
and
cs
cmp
push
pop
cltd
mov
push
jne
push
notl
cmpsb
aas
out
int
xor
pop
jb
mov
aaa
jp
push
pusha
xchg
in
punpckhdq
inc
andl
xor
fwait
or
mov
jmp
mov
push
push
std
mov
mov
adc
adc
ret
xchg
push
pcmpeqw
mov
or
aas
push
or
cmp
test
jb
or
cmp
cltd
dec
mov
adc
negl
inc
adc
in
mov
pop
mov
ds
push
mov
cmp
dec
push
das
or
push
push
icebp
imul
add
dec
add
sbb
in
imul
dec
or
cmp
mov
xchg
fcmovnu
inc
sbb
cmp
mov
dec
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
mov
xchg
push
xor
inc
mov
das
movsl
aad
mov
mov
pop
lret
and
ficompl
mov
out
jb
pcmpeqb
and
dec
je
sti
lds
mov
jo
xchg
out
push
mov
mov
jae
dec
push
jno
or
cmpb
inc
aad
sbb
pop
sub
push
in
xchg
xchg
roll
cld
cwtl
popa
cwtl
imul
mov
sbb
dec
pusha
fiaddl
call
jne
sbb
inc
mov
imul
sbb
or
adc
fsubr
fstp
test
icebp
push
mov
pop
xchg
push
cmp
jmp
cwtl
sbbb
cmp
push
add
sub
push
daa
push
movl
push
gs
dec
int3
jmp
sub
adc
sbb
roll
test
xor
sub
mov
sbb
addl
test
jno
and
mov
lcall
push
xor
lods
adc
xchg
stc
jb
push
fsts
stos
sbb
cmpsb
shrb
call
fstpl
push
xor
xchg
test
ja
or
sti
or
add
nop
jo
adc
pop
push
xor
test
sbb
xor
push
add
inc
and
add
push
dec
sbb
and
and
push
mov
add
shl
pop
xor
es
jmp
dec
into
lock
cmovno
decb
adc
jne
push
aad
int
rcl
pop
shlb
subl
or
xchg
into
pop
imull
xor
aam
nop
lret
and
mov
pop
or
push
das
mov
push
pushf
or
jbe
pop
cmp
push
je
and
inc
jp
clc
and
cmc
push
lcall
es
pop
push
mov
ret
sahf
imulb
add
dec
or
pusha
pop
mov
mov
mov
push
jp
ja
fdivs
psubusb
addl
ret
daa
cmp
mov
or
sub
in
lea
mov
mov
pop
lret
push
inc
xor
mov
stos
out
shr
nop
and
or
stos
pop
std
lcall
and
mov
push
cltd
jecxz
stos
or
adc
ljmp
sbb
sbb
adc
mov
cld
dec
jg
outsb
ljmp
jg
xor
aam
sub
popa
mov
dec
jno
or
push
in
mov
push
and
inc
fstps
fsts
cmp
cmc
push
push
jae
dec
xor
cwtl
sub
data16
push
mov
arpl
cmp
imul
cmp
ss
in
and
sub
loopne
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
sbbb
jb
jl
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
shlb
and
enter
cltd
pusha
sarb
leave
and
loopne
xor
and
call
xchg
dec
lock
clc
xchg
inc
dec
xor
add
add
fiaddl
or
gs
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shll
inc
gs
cltd
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
adc
daa
cltd
pusha
sbb
or
je
cli
add
jl
add
je
dec
xor
or
mov
mov
xor
sbb
lcall
and
adc
sbb
mov
and
and
rorb
cmp
lods
dec
dec
xor
inc
mov
test
shlb
int
mov
sti
enter
pop
notl
mov
sub
and
add
ret
aas
es
or
inc
or
add
xchg
lcall
sub
dec
insl
in
ret
add
or
aas
adc
jg
adc
leave
jmp
testl
mov
jo
pushf
ss
or
or
inc
adc
sahf
xchg
mov
push
ja
push
movsb
lds
test
sbb
jno
fsubl
inc
inc
mov
leave
mov
adc
add
pop
and
roll
lret
je
popa
xor
gs
mov
imul
loopne
push
sti
jbe
ret
cwtl
aaa
adc
sbb
shl
jp
xor
or
out
or
or
add
loope
push
or
movsl
insl
add
adc
add
aam
pop
xor
arpl
mov
pusha
js
push
ret
lea
or
adc
push
or
sub
xchg
mov
mov
and
pop
notb
in
test
and
inc
cs
mov
and
arpl
mov
jbe
shl
shll
dec
xor
adc
or
add
and
shr
add
and
pop
shr
and
aas
fsubl
lret
and
in
test
add
and
ret
scas
pop
adc
or
cmp
add
test
xlat
bound
jo
shll
and
push
nop
sub
dec
das
call
mov
or
adc
lock
and
mov
outsb
jg
in
and
aaa
jecxz
sbb
add
fsubrl
jmp
xchg
jmp
adc
mov
gs
and
insb
call
cmp
aaa
jge
mov
lea
push
loope
flds
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
or
movsb
sub
fnstsw
pusha
inc
jne
push
pusha
fldl
cmp
std
dec
shlb
xchg
imul
cmovb
inc
or
je
adc
sti
ja
test
out
test
stos
sub
add
dec
inc
sar
repz
das
mov
or
sub
push
and
dec
push
or
or
cmp
and
addb
or
pop
jecxz
xor
sbb
jmp
push
and
or
cmp
adc
imulb
flds
fstps
jmp
fisttpll
scas
mov
xor
cmp
adc
mov
lods
data16
pop
sub
dec
push
ds
inc
cmp
loopne
xchg
adc
xor
test
jb
add
daa
xor
inc
bound
enter
push
aaa
sbb
pop
pop
into
inc
ja
rolb
in
dec
pop
push
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
jbe
lcall
inc
lcall
add
adc
mov
scas
cltd
loop
cltd
pop
fidivl
fs
mov
pop
sarl
inc
fisubrl
shrl
subb
fstpl
idiv
xchg
push
adc
stc
push
jge
insb
sub
repz
mov
mov
in
loopne
mov
enter
cli
repnz
or
pop
sbbb
mov
stos
add
xchg
adc
shrl
mov
inc
inc
jnp
sbbb
loopne
or
jle
push
pop
jmp
pop
add
pop
inc
fsubrl
icebp
add
enter
lcall
cmpsb
mov
or
sub
pop
push
pop
movsl
jno
jb
shll
cmp
adc
jg
sti
in
jnp
mov
mov
lret
pop
fsub
add
ret
repnz
aam
push
icebp
fcmovnb
ljmpw
add
mov
xor
dec
cmp
je
cmp
push
push
pop
lcall
adc
sbb
movsl
jo
cld
sbb
hlt
adc
inc
add
or
and
aam
shll
pushf
sub
cmpsl
and
sbb
and
idiv
test
mov
jmp
jno
mov
addl
fucom
push
add
aad
push
fnsave
into
push
pop
or
jnp
adc
push
jo
push
ret
insl
inc
and
scas
adc
mov
pop
insl
push
mov
ret
outsb
lret
sarb
sbbl
jp
lods
pushl
inc
push
mov
in
or
mov
fs
push
das
adc
out
add
lock
int3
mov
sbb
out
pop
nop
mov
xor
or
fnstsw
add
rcrl
mov
sub
add
ja
pop
andl
mov
iret
dec
mov
or
into
sbb
ret
pop
iret
gs
sahf
sub
add
jecxz
bound
jp
or
mov
popl
jecxz
enter
or
imul
insb
add
mov
mov
and
pop
jo
add
in
xor
mov
dec
pushf
and
bound
aaa
or
je
enter
fld
gs
xlat
fucomp
pop
pop
out
fstpt
out
push
xor
test
cmpsl
push
dec
in
dec
pop
and
mov
sub
mov
int3
adc
gs
or
fwait
cmpsb
in
and
or
push
out
push
ljmp
jne
pop
or
jo
jnp
ret
or
push
and
mov
jmp
sbb
sub
adc
inc
push
push
push
jp
xlat
leave
jb
pusha
dec
ljmp
adc
fstsw
lsl
ret
cld
lret
sbb
loop
fwait
sub
mov
js
sub
sub
not
dec
xor
cmpl
mov
add
inc
or
sub
and
cld
inc
fwait
test
fsubs
inc
mov
out
outsb
fwait
sbb
add
and
or
repnz
sbb
add
lods
movsb
fldpi
xor
cwtl
enter
sbb
jmp
add
inc
je
sbb
xorb
mov
xsaveopt
jecxz
xor
test
add
mov
or
andl
in
aam
pop
pop
jmp
and
xlat
push
and
and
cwtl
imul
imul
add
enter
or
mov
cli
and
and
aas
lock
add
push
mov
js
test
daa
xor
js
test
ret
adc
add
fisubrl
test
stos
je
call
pop
nop
push
add
out
adc
in
or
pop
dec
or
pop
sub
push
push
and
inc
fdivr
jg
int3
inc
fdivrs
dec
or
inc
lea
pop
fsubl
ss
inc
shll
sahf
push
ret
call
loop
rolb
cmpl
cld
shrb
shll
sti
pop
pop
and
mov
out
mov
inc
adc
ss
mov
iret
les
dec
mov
mov
loopne
cmp
jb
cmp
sbb
sub
dec
push
hlt
cmp
mov
jae
xor
lods
pop
sbb
inc
shlb
mov
mov
shl
xor
or
ja,pt
sbb
jge
lea
dec
pop
and
mov
ret
je
inc
mov
pop
outsb
call
or
test
testb
jp
aam
dec
xor
pop
addl
cmp
das
mov
push
loopne
mov
shl
sub
test
push
fdiv
xchg
loopne
pop
popf
sahf
or
mov
ds
lock
es
push
or
jne
shl
xor
mov
test
shll
shl
xchg
loopne,pn
sub
lods
sbb
test
xor
or
sub
jmp
lea
mov
movsb
bound
faddl
jge
or
sbb
test
or
dec
inc
push
or
adcl
loopne
loopne
rcrl
xor
xchg
cli
cs
or
mov
lods
fsubr
pop
pop
push
pop
inc
shrb
push
jb
push
repnz
decb
fidivl
mov
dec
jns
cmp
push
sbb
cmc
adc
fs
loopne
rorb
mov
loopne
dec
mov
movsb
addr16
xchg
cli
sahf
das
cmp
aam
orb
or
shll
add
popa
mov
push
dec
add
jne
push
rorl
andl
movsb
ror
out
dec
je
sub
jl
stos
iret
and
mov
lea
jecxz
or
sub
mov
in
xchg
jge
rorl
cwtl
dec
cmp
inc
sti
lods
shl
test
ljmp
and
pop
lock
int3
roll
pop
push
xchg
scas
lret
jne
and
adc
mov
cs
push
test
xor
cmp
xchg
xor
cli
pop
adc
adc
push
subb
les
in
inc
cmp
and
je
inc
mov
cmp
push
and
push
jp
or
pop
or
mov
mov
test
pop
jne
cmp
movsl
sbb
jb
test
inc
dec
mov
data16
lods
jge
inc
mov
mov
rorl
test
mov
or
stos
adc
lcall
adc
lret
jnp
insb
inc
cs
or
ss
cmp
je
adc
aas
lods
or
out
mov
dec
cmpb
je
mov
sti
decl
jne
dec
mov
inc
inc
mov
int
inc
lock
mov
call
xlat
add
sti
lcall
outsb
call
inc
dec
and
sbb
jmp
xor
loop
jbe
icebp
cmpsl
xor
add
popl
cmpsl
das
mov
mov
pop
aaa
adc
push
add
movsl
pop
fcmovu
adc
jno
movsl
mov
and
fwait
jmp
orl
jne
popf
fists
inc
loope
inc
jo
or
add
test
adc
push
pop
sbb
jge
or
dec
vpmacsswd
cmp
mov
loopne
mov
adc
adc
cmpl
mov
rolb
lea
cmp
cli
xor
sub
pop
lods
cld
mov
inc
or
pop
movsl
scas
mov
add
lods
out
xor
push
jp
jmp
sub
or
lods
add
xchg
dec
fwait
pop
mov
inc
mov
push
adcb
mov
push
sarb
neg
movb
sbb
cltd
push
mov
sbbb
or
clc
xor
data16
add
out
add
sub
push
xor
xor
push
pop
cmp
xor
push
push
add
mov
add
adc
inc
mov
or
clc
and
sbb
mov
or
xchg
jge
xchg
sub
adc
mov
xchg
push
push
push
adc
shlb
enter
cltd
cmp
pop
jae
sub
mov
mov
push
jmp
arpl
das
stc
mov
mov
loope
push
fadd
ss
and
xor
push
dec
pop
into
jge
mov
and
pop
in
adc
xchg
pop
les
jns
xor
mov
enter
add
xchg
add
adc
xchg
push
and
sub
adc
mulb
xor
mov
loopne
imul
or
pushf
paddusb
or
add
jno
pop
xor
cmp
adc
sub
lock
test
enter
js
aad
add
subb
push
insl
sbb
loope
adc
sub
leave
and
ror
mov
add
insb
movb
add
inc
or
je
fnstsw
inc
or
popf
neg
sbb
mov
and
jecxz
adc
jg
push
pop
mov
shll
push
adc
add
xor
xor
sarl
sub
add
adc
in
sub
inc
xor
nop
push
divb
mov
or
rorb
xor
push
mov
lea
jle
or
inc
xorb
push
and
adc
mov
and
mov
sbb
rcrb
cmovle
pop
fadds
mov
lods
push
xor
adc
jb
insl
cld
rorb
hlt
shrd
sbb
mov
cltd
add
or
sbb
clc
cwtl
xor
leave
or
cld
xlat
mov
inc
and
xor
out
xchg
mov
cltd
jp
sub
inc
xchg
nop
cmp
je
test
inc
inc
or
pop
push
jecxz
pop
adc
jl
andl
cwtl
lock
call
in
and
imul
sbb
js
jg
icebp
pop
sub
jb
xor
pop
out
cs
adc
fimull
mov
and
push
hlt
cmp
sbb
add
int3
push
in
lock
mov
sarb
add
outsl
in
or
dec
dec
inc
dec
imul
pop
or
or
into
sub
cmp
das
pop
shll
cmp
ja
sahf
sub
add
xchg
sub
ret
cmp
add
sub
or
movl
jp
fiaddl
lcall
add
jnp
sbb
push
sbb
mov
test
push
lock
sahf
fwait
adc
gs
neg
mov
enter
or
or
mov
aaa
push
lods
pop
mov
add
push
mov
test
push
dec
mov
push
add
js
repnz
je
aad
sub
cmpsl
sub
add
roll
sub
mov
es
sbb
stc
cmp
push
sti
mov
xchg
and
pop
sbbb
jne
push
cmp
das
inc
nop
cmp
shl
inc
dec
sub
pop
sub
jb
stc
idivl
lods
rorl
mov
ljmp
or
out
mov
cld
jl
loopne
jge
inc
or
or
and
inc
decb
add
je
sbb
mov
push
pop
ds
fnstenv
mov
and
or
pop
data16
mov
fwait
fwait
repnz
sbb
push
inc
je
stc
add
dec
xor
xor
ret
sub
pop
mov
sbb
popf
insb
sub
sbb
sub
push
add
cmp
stos
adcb
ss
lock
arpl
cmp
push
pop
add
xor
pushf
pusha
lea
popa
mov
cmp
add
push
imul
cmpb
mov
cmp
fdiv
jp
add
movzbl
xchg
rorl
sub
mov
icebp
dec
jmp
mov
add
sub
pop
push
scas
inc
fstl
sub
cmp
cmpb
negl
inc
add
std
or
test
or
int3
dec
sub
sub
push
or
dec
fdivrl
inc
jmp
adc
xorb
jg
push
les
test
inc
pop
test
xor
popa
xchg
lahf
dec
in
dec
sbb
mov
xor
lahf
xor
push
push
and
inc
lret
inc
cmp
popf
stos
mov
test
and
push
push
xor
dec
push
ljmp
mov
add
sub
push
cmp
sub
ret
or
mov
cmc
push
dec
cs
inc
mov
sbb
adc
mov
bound
mov
mov
cmpl
addb
or
push
subl
push
lret
push
mov
or
mov
dec
dec
loopne
mov
imul
pop
lret
adc
cs
daa
dec
imul
pop
adc
cmp
movsb
jae
mov
movsb
fwait
and
and
pop
push
jge
or
pop
mov
enter
negb
sub
je
dec
je
dec
adcb
jmp
or
jmp
lahf
mov
sahf
pop
addl
pushl
or
add
sub
rolb
sub
sbb
add
aad
daa
sbb
cmp
sahf
or
out
cmc
or
daa
add
aam
adc
daa
add
sbb
lock
push
push
sbb
je
add
cmpsl
dec
add
pop
cmp
sbb
mov
mov
or
mov
pop
pop
popf
int3
inc
mov
mov
jbe
or
call
sub
adc
mov
cmpsl
adcb
enter
fiaddl
mov
inc
sub
sub
xor
mov
movsl
xchg
inc
nop
mov
pop
mov
movb
sbbl
fmuls
sarl
mov
mov
pop
dec
adc
and
sbb
add
xchg
enter
call
add
call
dec
std
pop
out
sbb
lret
dec
popf
or
repz
jg
mov
out
pop
add
or
push
add
shr
or
insb
push
adc
test
and
add
push
outsb
loope
mov
test
or
add
jb
add
mov
add
adc
cmp
jecxz
mov
lods
inc
jbe
add
jl
in
sbb
cmp
xchg
mov
pop
dec
leave
inc
inc
addl
mov
and
inc
fisttpl
cmp
lds
adc
bound
xor
or
jbe
mov
dec
clc
xorb
lcall
stc
rolb
dec
shlb
mov
inc
nop
mov
add
fs
and
add
mov
js
inc
or
jo
sub
sbb
and
pusha
sub
adc
pop
add
cmpsb
dec
movsb
fsubrl
cmp
faddl
adc
xchg
popf
divb
mov
sbb
int
test
add
inc
and
pop
je
mov
out
data16
mov
lret
adc
outsb
adc
xor
mov
sbb
adcb
repz
sbb
je
push
leave
loope
xchg
nop
sub
fwait
push
test
in
nop
xor
pusha
je
jns
lea
repnz
xchg
pop
or
jmp
jno
nop
addl
lret
pop
lret
xchg
insb
in
test
dec
jo
cmp
orl
xor
out
xchg
inc
cmp
insb
test
add
mov
add
decl
insl
ljmp
adc
jo
mov
stos
mov
pusha
sbbb
sub
roll
adc
sarb
push
mov
sbb
add
push
cmpb
or
inc
xor
jle
in
and
ds
mov
clc
pop
dec
lea
lahf
add
mov
aad
repnz
loop
xlat
jno
cwtl
out
add
add
pop
hlt
xor
les
inc
mov
sub
out
add
or
xchg
inc
mov
xor
fsubs
sbb
add
in
sub
push
add
mov
cmp
cmp
lock
mov
sbb
add
call
ss
imul
push
inc
adc
push
jp
inc
stos
lds
call
lock
out
dec
lcall
mov
cmp
jle
inc
call
ja
shlb
xchg
pop
mov
jge
inc
sbb
mov
fwait
inc
xor
fucomi
scas
gs
adc
movsl
jmp
jl
ss
cmpb
je
ss
mov
xor
inc
aam
push
or
xor
aad
or
pop
mov
push
insb
jmp
cmpb
lahf
push
andl
push
ljmp
or
sti
mov
inc
cmp
cld
shlb
loop
ljmp
jmp
mov
jne
cmp
adc
sbb
jmp
dec
add
mov
or
mov
shl
or
or
mov
fcompl
xor
clc
scas
xor
add
add
nop
imul
or
stos
adc
adc
je
insl
or
hlt
cmp
rolb
inc
div
and
adc
jne
std
mov
movsl
xor
add
add
push
lcall
xchg
pushf
push
je
lock
sbb
loopne
popa
hlt
cmp
js
or
andl
in
lret
jge
loopne
jecxz
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
out
lock
loope
xor
pop
gs
push
push
inc
and
fsts
adc
inc
push
test
sbb
and
and
mov
dec
jns
popa
xchg
or
dec
jne
xchg
lea
jecxz
pop
pop
mov
sub
insl
int3
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
lcall
enter
je
neg
cld
lock
je
inc
das
push
pop
xchg
add
and
sub
inc
sbb
mov
inc
orb
mov
pop
sbb
or
adc
hlt
imul
add
ja
hlt
das
push
or
aad
int
into
jbe
jne
inc
aas
aas
pushf
xor
movsl
das
hlt
adc
aas
or
push
aam
stos
and
push
repz
pop
shl
dec
dec
mov
add
cmpl
or
mov
adc
jne
popf
mov
adc
push
cmovb
add
pushl
ror
cs
pop
inc
add
andl
jnp
adc
aaa
dec
sub
cmpsb
in
or
jnp
mov
jns
cmp
jp
cld
mov
pop
cmp
jne
pop
popf
scas
adc
lock
add
fcom
add
adc
ret
or
inc
xchg
lea
mov
xchg
mov
inc
adc
icebp
pop
adc
pop
je
xor
jg
dec
and
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
shll
leave
call
outsb
mov
sbb
mov
je
mov
adc
iret
and
jb
ljmp
and
xor
add
cmp
xchg
aam
sti
aas
into
cmpsb
hlt
push
pop
push
movb
jmp
or
test
inc
push
clc
aaa
sahf
and
adc
iret
cmp
push
adc
push
ret
xchg
mov
adc
xor
pusha
movw
jb
sbb
push
fldl2e
pop
xchg
sbb
out
cwtl
xchg
es
mov
dec
test
sub
jp
mov
cwtl
cmp
dec
and
or
inc
xlat
push
pop
cld
stc
inc
jb
popf
rcll
jae
xchg
and
hlt
push
andl
push
sbb
push
add
es
push
pushf
mov
sarb
dec
add
sbb
jmp
mov
imul
lea
sar
call
mov
insb
pop
fimull
mov
push
jnp
cmpsb
cmpsb
es
ljmp
cwtl
fiadds
mov
ret
andb
inc
call
or
mov
sti
inc
shrb
fsub
pop
and
adc
jbe
push
sbb
adcl
adc
mov
sbb
or
dec
jle
repnz
insl
mov
push
adc
mov
shl
outsl
or
and
lea
inc
pop
and
mov
cmpsl
add
pop
lcall
decb
xchg
test
nop
nop
ja
jge
and
loopne
dec
push
sahf
xchg
iret
insb
sub
inc
call
testl
inc
sub
cmc
mov
or
inc
mov
clc
lods
inc
mov
jne
lea
rolb
lods
xor
fcmovnbe
stos
push
inc
mov
push
lea
sub
xchg
push
test
push
insl
jo
or
insl
sub
movsb
imul
cmp
lods
shll
in
sub
pop
out
data16
mov
mov
or
aaa
dec
imul
lea
pop
adc
push
jo
adc
clc
shll
jo
out
adc
shll
mov
add
or
aas
enter
cmp
rorb
int
jge
sbb
push
lret
push
shrl
mov
or
cmp
pusha
mov
cwtl
out
insl
test
in
lahf
lods
sti
pop
shr
or
mov
dec
mov
int3
insb
sub
filds
ja
dec
and
sbb
repnz
jns
testb
dec
cli
cli
inc
cli
or
sub
int
mov
inc
cmp
fsubs
loopne
cmp
test
bound
adc
outsb
xchg
lahf
add
scas
xchg
mov
dec
mov
mov
push
fidivl
fldenv
enter
fsubs
jecxz
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
iret
xchg
and
popa
add
push
test
cmpsb
imul
loop
ret
push
xchg
mov
sahf
jge
mov
test
das
xchg
push
cmc
xor
daa
cmp
add
push
or
push
adc
jne
fdivrs
pop
xchg
add
jbe
sbb
dec
sub
sbb
add
push
mov
add
test
adc
ret
hlt
push
add
sbb
xchg
lret
fcmovu
mov
ret
das
insl
test
sub
cli
mov
sbb
add
add
add
into
clc
adc
xor
adc
jg
or
xchg
mov
lock
jge
or
dec
add
enter
and
jge
lock
or
cmp
jne
jne
inc
sub
add
inc
jmp
dec
push
mov
pusha
add
sub
xor
sbb
mov
sbb
add
inc
mov
dec
movb
adc
fisubrl
xor
and
or
pop
cmp
sbb
ss
pusha
xchg
push
repnz
adc
mov
pop
inc
rcrl
lcall
and
pushf
jle
inc
imul
sub
imul
call
push
jecxz
loopne
fdivrs
pop
add
out
adc
and
xchg
in
dec
inc
loopne
fisubs
push
pop
add
inc
rol
cld
or
ds
sbb
roll
dec
sub
stos
ljmp
enter
sahf
mov
mov
jae
add
sub
dec
pusha
push
mov
mov
xor
add
add
into
or
mov
inc
inc
les
sub
add
cmp
jmp
sub
cmp
jge
sub
cmpb
mov
push
bound
movb
dec
cmp
add
nop
in
sbb
sub
orb
push
out
inc
mov
adc
mov
dec
inc
in
jp
jne
dec
mov
jb
xchg
dec
mov
push
loope
cmp
in
sub
cs
nop
add
dec
and
add
push
adc
inc
mov
pop
rol
mov
add
rclb
add
add
add
test
mov
mov
stos
lret
test
push
or
push
push
pusha
or
add
or
or
movsl
xchg
add
gs
cmp
push
or
rorb
je,pt
push
ret
imull
adc
mov
es
xor
xor
or
xchg
bound
or
jae
sbb
ret
mov
mov
inc
and
cmp
xor
into
pop
sbb
test
test
pop
and
pop
pop
mov
mov
ret
lds
cmp
or
or
lds
push
xchg
xchg
pop
stos
push
mov
and
xor
cmpsb
rorb
or
add
pop
push
ja
add
fmuls
stos
push
mov
cmp
ss
je
jge
or
cmp
int
adc
xlat
push
pop
out
push
jo
fisubrl
pop
xchg
adc
jne
fbstp
and
mov
ret
enter
push
add
outsb
out
and
push
or
sbb
fcoms
lfs
movsb
loopne
clc
mov
test
sbb
sbb
jnp
add
scas
orl
or
and
addl
call
dec
mov
mov
in
ldmxcsr
clc
push
jl
ficoms
pop
test
adc
imul
add
push
into
mov
mov
pop
sbb
xor
inc
jg
xchg
xchg
out
into
into
into
mov
or
inc
pop
sub
push
pop
sarl
nop
pop
sahf
pop
mov
xchg
push
popf
clc
inc
shlb
or
sbb
and
mov
stos
push
dec
add
push
pop
jbe
pop
lcall
pusha
test
lahf
pop
xchg
out
jno
inc
ficoms
add
icebp
jno
loope
add
es
test
mov
pop
jo
arpl
ret
cltd
and
scas
jo
sbb
pop
or
sub
sbb
mov
es
xchg
jmp
inc
xor
mov
loopne
aad
out
pop
mov
lods
adc
add
adc
fxch
xchg
and
aas
mov
mov
bound
sub
clc
int3
scas
inc
add
into
lret
lret
lock
ficompl
fcomps
lea
rcrl
cmpsb
mov
mov
jl
sbb
cltd
cmp
cltd
lret
push
dec
pop
mov
cmp
cs
sbb
and
mov
adc
repz
sbb
addb
dec
and
popf
and
addr16
je
insl
dec
loop
dec
sub
loope
cmp
sub
fmuls
push
test
fisttps
mov
cmp
jb
cmp
jbe
dec
push
stc
push
jle
in
mov
pushf
sub
loopne
dec
insb
or
rclb
pop
or
pop
xor
or
mov
inc
popl
aam
sbb
ret
jle
fwait
repz
mov
and
mov
cmc
adc
dec
cs
into
les
mov
aam
inc
inc
loopne
pop
mov
pushl
in
mov
add
and
push
push
mov
outsb
cmp
sbb
cmpsb
xor
and
test
and
fmul
sub
rorb
lahf
push
sub
mov
gs
stos
xorl
jb
sahf
mov
dec
cmpsl
cs
xor
xchg
dec
sbb
andb
sub
inc
xor
aam
ljmp
push
shrb
dec
add
lock
xor
daa
cmc
punpckhwd
mov
cmp
sbb
mov
add
sub
in
sub
adcb
test
mov
push
sbb
mov
inc
in
inc
lret
cmpsl
push
mov
add
lret
sub
or
sbb
add
adc
pop
xor
push
loope
aaa
cmp
mov
sbb
sbb
ja
pop
and
outsb
push
push
ret
js
lcall
mov
cmp
pushf
inc
mov
cmp
pop
andl
or
mov
jo
add
push
mov
and
sbb
dec
sbb
dec
in
gs
clc
cli
sti
in
lret
mov
das
test
sbb
in
and
cld
ret
add
movsb
or
cs
outsl
pop
push
shlb
cmp
dec
push
push
lret
fmuls
xor
icebp
roll
loop
enter
jle
add
pop
inc
and
lock
dec
mov
sbb
push
mov
mov
cmpsb
loopne
jmp
dec
fs
adc
xchg
adcl
cmp
or
js
cmpsb
mov
lret
jo
aas
xor
mov
or
sbb
inc
insl
sbb
add
test
adc
pushf
iret
lahf
cmp
push
cmp
push
mov
sub
add
fs
sbb
dec
inc
xchg
jecxz
and
mov
sbb
lods
xor
imul
push
or
jg
scas
sbb
insb
xchg
push
ds
inc
cmp
dec
pop
cmp
jbe
pop
mov
push
rolb
pop
sub
pop
and
mov
pop
dec
add
addb
mov
in
mov
gs
hlt
sbbl
mov
pop
pop
lea
add
push
or
adc
cmc
mov
fcomps
inc
fwait
es
cwtl
popa
subl
jle
jge
jg
les
fmull
adc
shrb
cmpl
pop
dec
je
outsb
dec
sub
xchg
push
xor
iret
sahf
outsb
jmp
inc
mov
ja
test
clc
outsb
leave
push
pusha
xor
movsb
mov
int
test
push
inc
mov
jmp
or
lods
pop
clc
and
xor
cltd
and
lock
imul
in
dec
adc
pop
insb
push
sar
xor
sbb
jns
push
and
lret
add
mov
lods
inc
cwtl
pop
sub
test
pop
rol
dec
jnp
push
shll
and
mov
adc
popa
xchg
push
aas
or
add
add
nop
push
popa
in
std
push
mov
add
imul
test
sub
dec
add
fisubl
xor
pushf
ret
es
movsb
push
adc
test
push
add
rolb
int3
jmp
addl
sbb
jmp
insl
cld
mov
loopne
shrb
xchg
loopne
ss
or
fs
or
sbb
push
hlt
jno
inc
fmull
popa
rorb
xor
inc
cld
ret
add
icebp
or
and
cmp
dec
imul
sar
dec
cwtl
xor
inc
dec
mov
lret
sbb
js
or
jp
or
push
lea
xor
sub
mov
inc
mov
rclb
jbe
dec
sbb
pop
and
xchg
andl
jae
xabort
push
push
xchg
lods
mov
cs
push
xor
xchg
in
movsl
mov
cmpsb
mov
and
hlt
mov
fisubrl
clc
pop
adcb
cmp
int3
rolb
cmpsb
pop
addb
fldcw
push
aam
push
sub
and
cltd
sbb
and
sub
push
mov
imul
or
push
sbb
and
add
ret
cs
data16
or
cltd
movl
push
repnz
cmpsb
addb
sbb
adc
or
ret
gs
testb
rorl
ret
jge
popa
lds
dec
cmp
mov
bound
imul
dec
sarl
fidivrl
gs
les
mov
jmp
adc
cltd
jb
negl
test
dec
inc
imul
add
mov
sub
cmp
movsb
mov
and
cld
mov
mov
sbb
cmp
ja
fistpl
jge
add
push
jle
dec
fst
cwtl
pop
add
mov
jae
popf
shlb
or
mov
or
push
dec
test
jg
adc
lock
adc
lcall
push
push
mov
pop
icebp
cmp
js
rcrb
mov
popa
xor
pop
cmp
aam
into
lock
cmc
xor
sbb
push
jb
pop
push
frstor
mov
pop
add
add
sbb
jb
dec
push
or
sub
dec
jbe
push
test
mov
lods
scas
pop
xchg
inc
lea
and
leave
jp
dec
or
push
filds
and
push
add
pop
fs
mov
sbb
in
pop
mov
fildl
call
sub
loopne
pop
cmp
clc
ret
adc
mov
xor
cwtl
bnd
or
decl
push
dec
cmpl
mov
mov
insl
call
cmp
cmp
jo
je
mov
cmp
ja
cmp
rcrl
push
adc
jl
or
addb
out
int
in
in
sbb
pushf
aaa
movsb
add
and
mov
test
jmp
mull
mov
mov
or
test
and
ret
mov
cmp
or
lods
sub
test
mov
and
inc
sbb
imul
std
movsw
mov
imul
dec
jecxz
stos
and
inc
jbe
lds
movsb
dec
sbb
sub
dec
push
pop
sbb
arpl
leave
in
cmp
mov
sub
int3
jl
add
test
mov
add
add
test
loopne
stc
jg
aas
add
roll
add
dec
sbb
pushf
sbb
inc
mov
xor
jle
inc
inc
imul
fcom
sbb
push
push
add
mov
mov
mov
hlt
pop
jg
movl
push
std
push
pop
jl
testb
or
xchg
xchg
or
cmp
iret
test
add
loopne
adcb
nop
addl
adc
or
adc
or
sbb
test
pop
loopne
ficoms
icebp
sbb
shlb
jle
add
sarb
mov
loope
fdivs
andb
dec
inc
js
xchg
jno
mov
mov
mov
lock
cmc
jmp
sbb
pop
dec
cmp
std
dec
loopne
xor
pop
adc
cmp
jae
adc
cmp
inc
mov
lret
cmp
jg
jbe
add
dec
shl
add
push
xchg
popa
sub
in
clc
lods
adc
pop
adc
fnstenv
popa
jmp
and
inc
cwtl
or
outsb
fmuls
das
inc
lret
adc
inc
orl
jle
cld
dec
push
cltd
adc
mov
xchg
inc
xchg
mov
push
mov
jp
lods
xchg
fisttpl
or
xchg
addr16
mov
and
dec
sti
test
push
or
adc
dec
dec
es
xor
andb
xor
cli
mov
inc
inc
inc
mov
dec
cli
inc
mov
jl
jbe
jae
adc
and
mov
dec
or
adc
ss
js
scas
cmpb
test
je
popf
and
loopne
mov
repnz
pusha
inc
shll
outsl
adc
push
sbb
out
mov
ja
popa
xchg
je
mov
cmpsb
cmp
mov
imul
testb
roll
push
sub
push
dec
sbb
push
or
imul
mov
mov
orb
sar
jae
pusha
shl
pop
adc
adc
cmp
push
sahf
xor
dec
je
dec
jne
push
lods
pshufw
ja
fcoms
jmp
add
mov
xor
add
push
je
nop
out
inc
je
push
mov
fcoml
lret
hlt
pop
inc
or
push
sub
jmp
roll
mov
ror
cli
inc
fildl
imulb
mov
arpl
mov
or
add
or
jns
mov
push
stos
add
mov
xchg
addb
ret
cs
xor
dec
jl
and
popa
sbb
test
lods
push
inc
sbb
dec
pop
pop
hlt
push
xor
fsubl
cli
push
jb
arpl
movsb
xlat
sbb
push
mov
imul
cmpsl
rolb
aaa
jl
clc
mov
push
mov
lahf
or
rcll
or
cwtl
sub
add
and
rcrl
into
add
pop
add
les
adc
jb
jge
mov
test
pop
sbb
or
mov
adc
and
sub
jle
stos
insl
inc
push
jl
enter
mov
and
pop
cmp
ret
inc
repz
xor
imul
das
or
mov
insl
dec
adc
sbb
adc
push
test
mov
leave
lods
pushf
push
cmp
xchg
mov
mov
stc
push
mov
std
hlt
jne
mov
and
or
shll
lods
add
lret
push
dec
mov
mov
fs
je
push
pusha
ficomps
jle
std
mov
xor
movsb
les
sub
lock
inc
lcall
jne
scas
push
adc
or
cmp
hlt
rolb
dec
aas
int3
jg
imul
jno
addb
syscall
es
ret
mov
arpl
adc
push
call
out
lock
xchg
dec
hlt
adc
jne
sub
fcmovnb
jle
out
nop
lea
add
adc
mov
mov
and
mov
fdivrl
jmp
jbe
mov
add
dec
jg
adc
orl
jg
adc
mov
dec
and
fdivrl
xor
xchg
and
add
adc
cmp
loope
sbb
jb
or
cmpsl
push
xor
out
shrl
pop
pushf
and
inc
mov
jno
lds
pop
scas
pop
mov
lock
and
xlat
lret
jns
inc
bound
and
popa
adc
test
gs
dec
test
stos
add
dec
sub
andl
lret
loopne
push
test
pop
sti
insb
add
ja
cmp
test
fstl
jae
jns
and
popa
aas
pop
xchg
mov
add
adc
xlat
je
cmp
adc
cmp
jb
testb
mov
sbb
or
jl
js
sub
jge
push
outsl
add
and
push
ss
and
jb
je
cmp
scas
mov
xor
cmp
jbe
clc
sbb
dec
adc
inc
add
gs
cmpsb
inc
lret
shr
jmp
das
dec
fnsave
insl
aad
pop
int
mov
lahf
or
aam
or
push
mov
and
dec
mov
outsb
sbb
je
fstpl
pop
add
sahf
test
dec
jo
mov
sbb
pop
ret
or
iret
mov
pop
jnp
sub
mov
mov
mov
in
push
ss
ret
or
add
add
fstl
hlt
lods
jecxz
adcl
mov
sbb
push
int
sub
gs
add
jb
add
add
rolb
movsb
add
add
and
aas
inc
rcrb
push
daa
fldz
aaa
jo
add
add
rclb
push
inc
pusha
rolb
sub
add
mov
outsb
dec
lret
mov
mov
add
lcall
andb
je
pop
and
cmp
enter
mov
fildll
ds
push
shl
cmp
jmp
pop
les
and
icebp
aaa
adc
arpl
adc
data16
jmp
cmp
fcomp
punpckldq
ret
and
jbe
fstps
sbb
dec
lods
pusha
jg
xor
mov
pusha
xlat
loopne
pop
test
sbb
or
incl
or
dec
in
sarl
xor
bound
xor
mov
dec
push
cmp
pushf
add
adc
addr16
lock
and
data16
dec
add
mov
xor
push
in
mov
jno
fidivl
ss
mov
mov
clc
and
push
shlb
lret
in
pop
mov
in
jge
xor
clc
or
add
sub
insb
push
fbld
dec
dec
fidivl
sub
push
in
lock
les
jne
pushf
cwtl
mov
test
add
inc
fsub
nop
mov
int3
mov
or
jns
loopne
pop
push
jb
dec
inc
in
js
loop
jl
xor
mov
popa
inc
imul
or
or
xchg
adc
and
or
sbb
fisubrl
pop
fisttpl
add
rorl
call
loopne
filds
nop
sbbl
or
jecxz
dec
in
push
loopne
pusha
pusha
leave
mov
orb
movsb
sub
mov
out
sub
sub
adc
test
adc
pusha
or
or
mov
scas
sbb
sub
dec
add
jnp
and
shlb
dec
in
inc
es
xchg
cmpsb
or
inc
adc
cltd
or
call
pushf
cmp
adc
or
popa
inc
push
sbb
cwtl
jae
nop
and
or
cmpsl
clc
jl
cmp
notl
or
ret
sbb
push
xchg
push
fwait
mov
or
pusha
add
pop
jb
inc
add
mov
dec
sahf
sbb
loope
xorl
jne
push
dec
or
fidivl
insb
and
addl
lcall
mov
dec
imul
lods
imul
das
dec
cs
enter
test
push
adc
fmuls
roll
aam
inc
pminsw
inc
les
shll
add
sarb
movups
inc
nop
lcall
addl
fmuls
je
cmp
mov
dec
mov
adc
cltd
fs
fs
je
jl
and
xchg
add
sbb
cmpsl
mov
xor
adc
mov
xchg
shlb
jecxz
jl
in
sahf
inc
sub
mov
enter
and
mov
sbb
xchg
or
xor
dec
in
mov
in
punpckhdq
sbb
sbb
outsl
shll
lret
das
inc
test
xor
mov
out
mov
pushf
adc
dec
mov
sbb
or
pop
push
cmpsl
sub
mov
sub
mov
and
jl
add
ja
cmp
fcmovu
aam
push
rcrl
or
push
je
cmp
and
aas
nop
cmp
lock
push
adc
nop
jbe
inc
jl
aam
inc
push
data16
or
sbb
je
enter
in
sbb
aam
pop
mov
gs
nop
push
adc
insb
xor
mov
push
xchg
imul
xchg
push
jno
pusha
sti
fcoml
xor
daa
or
xor
or
mov
add
sub
dec
jmp
test
dec
dec
outsl
pop
dec
ss
mov
iret
popa
xchg
inc
sbb
inc
xor
orb
inc
adc
insl
fs
dec
fidivrl
test
data16
mov
dec
scas
jl
jge
mov
subl
pop
fcoml
inc
jno
ret
aas
loopne
xor
pop
in
pop
push
test
pop
inc
xchg
sub
mov
or
in
arpl
cmpsb
imul
shll
sbb
sbb
mov
or
jp
xchg
or
clc
cltd
jne
and
test
or
es
imul
sbb
imul
xchg
and
lds
mov
in
mov
lret
lock
adc
test
push
push
sbb
pop
cmp
test
loopne
add
and
out
xor
xor
ret
dec
sub
xor
sbb
sbb
push
loopne
mov
orb
or
or
mov
ds
mov
popf
add
ret
or
inc
xor
or
sub
repz
aam
lds
push
jmp
push
insl
testl
fsubrl
pop
mov
stos
adc
add
adc
inc
dec
pusha
push
cmp
lds
fildll
test
sti
pop
cwtl
push
fst
ret
or
sub
decb
adc
int3
sbb
test
xchg
push
inc
push
in
fisttpll
sub
stc
es
andb
nop
jb
mov
xor
pop
inc
add
push
dec
jp
cmp
push
jno
jne
xor
jnp
dec
test
ja
pop
fildll
insb
pop
and
mov
add
cwtl
pop
dec
pop
xor
sbbb
aad
in
roll
fwait
and
mov
sti
and
mov
in
test
xorl
nop
xor
movsl
sbb
test
nop
lods
inc
je
fsubl
in
dec
mov
push
or
in
jbe
dec
sahf
in
or
add
or
faddl
and
mov
repnz
xchg
push
nop
inc
mov
mov
mov
push
in
add
cmp
or
cmp
adc
sbb
or
or
enter
aas
sub
xchg
movsb
sti
jns
lahf
sbb
sti
push
nop
inc
cs
mov
cmp
pop
dec
les
jmp
cmp
jno
and
adc
or
test
and
and
in
lret
mov
jne
cli
mov
lock
inc
dec
push
std
test
shlb
and
jo
and
test
nop
std
mov
xor
sbb
leave
and
or
jb
and
and
and
jecxz
xchg
sub
xchg
or
or
fwait
mov
cs
xchg
stos
inc
mov
inc
fadds
mov
pop
or
mov
aam
in
sbb
mov
in
lcall
insl
repnz
es
loope
sarb
sbb
fildll
ret
sbb
add
ror
adc
or
addl
push
sub
leave
mov
bound
sbb
movb
ret
xchg
pop
daa
jecxz
pop
and
cmp
or
dec
adc
sub
and
cmpsb
inc
push
addr16
sub
jb
mov
int
cmp
sub
and
dec
sbb
stos
or
nop
add
nop
or
or
add
or
mov
subb
sub
fstpt
jae
dec
push
arpl
enter
mov
loopne
cmp
lods
std
xor
inc
ret
das
jnp
mov
adc
mov
jae
jno
test
pushf
sub
adc
sub
pop
insl
call
les
in
mov
add
mov
sub
jb
sti
or
andb
pusha
sbb
nop
push
inc
bts
mov
rcrb
xchg
xor
add
shlb
mov
add
arpl
adc
sub
pop
subb
pop
or
push
sub
and
push
mov
add
enter
ret
mov
insl
call
mov
xlat
out
xor
sub
mov
into
ljmp
call
fs
cmp
in
sbb
loopne
pavgb
out
scas
clc
push
cmp
fwait
mov
xchg
pop
or
sub
inc
or
adc
cmp
or
and
cmp
fistl
lss
test
add
fistpl
das
cmp
addb
das
lret
arpl
fcoms
fdivs
jge
stos
mov
inc
cs
push
jne
jle
add
loopnew
andb
inc
sbb
std
lock
xor
sub
xor
jno
sbb
xor
mov
adc
add
call
insl
lock
test
aaa
cmp
pop
or
or
or
or
sub
mov
xor
sbb
sysexit
test
cmp
mov
lods
jno
icebp
arpl
mov
or
or
int3
in
lock
mov
pop
jb
inc
push
fs
cmp
addl
sub
sub
push
lock
xorb
mov
rorb
call
xor
out
and
cwtl
stc
mov
mov
cmp
xor
inc
xchg
jg
dec
lods
arpl
aad
push
pushf
ret
inc
fadds
cmp
aam
das
jmp
or
and
mov
fldenv
les
add
aam
push
in
fiaddl
dec
or
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
aaa
imul
mov
push
fs
xor
dec
xor
push
test
or
push
rolb
mov
addb
pop
dec
cs
mov
sbb
insb
jae
jns
push
sbb
xlat
ss
mov
jg
inc
add
outsl
inc
jge
pop
xlat
mov
inc
test
jmp
push
imul
push
icebp
sbb
fsub
add
nop
sub
sbb
mov
aam
fcoms
nop
and
dec
aaa
pop
lcall
cmp
cmp
pop
pop
test
mov
lcall
cmp
aaa
or
xchg
sub
sti
movsb
adc
gs
push
or
rorb
adc
popf
push
sub
enter
outsl
cltd
aas
cmp
leave
and
adc
rorb
xchg
test
dec
sbb
popf
out
cmp
pop
add
pop
ja
cli
jae
adc
adc
add
jl
rorl
xor
xlat
sbb
lock
sbb
cmp
cmc
push
pusha
sbb
fdivs
add
push
pop
pop
or
ja
dec
imul
sbb
test
sti
enter
subb
cmp
mov
loope
mov
jns
in
in
in
adc
cmp
jb
pushf
sbb
or
aam
imul
int3
mov
cmp
mov
jno,pn
xchg
insb
inc
leave
add
xchg
add
mov
ret
sar
prefetcht2
add
dec
popf
fwait
std
mov
movsl
inc
sbb
inc
or
adc
add
or
adcb
and
mov
adc
xchg
push
mov
xchg
in
hlt
fcom
testl
or
dec
or
pop
and
ljmp
lock
pop
adc
outsl
mov
jmp
mov
mov
jbe
popa
inc
pushf
ret
jnp
xor
mov
fdivr
roll
notb
popf
ss
xchg
gs
or
adc
loopne
add
inc
mull
ret
icebp
jp
inc
dec
add
xor
pop
mov
add
jne
idivb
in
scas
in
pusha
jne
cmc
cmp
push
enter
adc
mov
or
mov
out
mov
adc
stos
mov
pop
adc
dec
pop
inc
sbb
inc
in
mov
push
push
jns
inc
and
inc
mov
mov
fsubl
stos
add
in
sbb
jo
or
lods
push
dec
mov
add
jne
icebp
and
out
add
jmp
or
jne
aam
rorl
in
call
gs
mov
enter
repz
fs
mov
nop
or
sti
or
aad
cmp
xor
sbb
xchg
and
jae
fcoms
mov
in
or
scas
cmc
adc
jp
xchg
test
mov
cmp
xorb
push
mov
lahf
roll
pop
in
push
add
je
popa
enter
orb
dec
insb
sub
cmp
inc
imul
xchg
arpl
inc
xchg
adc
int3
mov
dec
dec
imul
lods
in
cltd
fmul
movsb
test
fistl
sbb
lods
lods
adc
jb
cmp
adc
movsb
cmp
lock
xchg
jmp
cmpsb
adc
and
rorb
pusha
ret
dec
and
les
rcl
adc
xchg
outsl
call
adc
leave
and
fsubl
stos
mov
xchg
pop
arpl
leave
add
imul
xor
nop
arpl
adc
cwtl
and
insb
test
shlb
addb
movsb
add
repnz
not
adc
popf
loope
rclb
je
ds
daa
shrl
aam
and
dec
sbb
and
mov
mov
add
dec
aam
jno
inc
push
dec
out
adc
jmp
in
cmpl
adc
mov
jo
xor
negl
in
pop
sbb
in
mov
daa
fdivrl
dec
inc
xor
cltd
pop
or
mov
push
mov
lods
in
pop
pop
test
leave
aam
mov
lds
inc
gs
pusha
dec
jno
xor
ret
inc
mulps
int3
int
test
adcl
psubsw
cmp
mov
aas
mov
dec
push
jno
sub
lea
xchg
and
dec
mov
jne
in
cwtl
or
insl
test
push
push
inc
daa
jo
test
push
setnp
adc
les
cmp
or
int3
in
in
xor
mov
push
pop
jo
lods
lods
xchg
add
xchg
inc
cs
dec
or
dec
ds
sbb
jecxz
lods
xchg
inc
xchg
dec
repz
cwtl
mov
pusha
add
js
popf
movsb
mov
add
stos
rclb
nop
pop
dec
cmp
popa
mov
dec
mov
frstor
punpcklbw
movsl
push
and
imul
cs
sti
es
sbb
mov
add
sbb
js
test
push
movsb
adc
inc
jl
mov
es
xchg
xchg
subb
mov
leave
addb
sbb
and
into
in
jns
mov
bound
adc
je
sbb
push
jae
or
je
sub
cmp
cltd
xor
inc
mov
lods
sbb
mov
inc
enter
lods
pushf
inc
enter
mov
mov
test
loopne
xchg
insb
sub
add
adc
nop
inc
mov
jb
pop
aam
xor
fwait
push
in
or
out
add
inc
mov
aaa
cmpsb
adc
push
add
cmpsl
mov
std
out
jne
jge
dec
jecxz
xchg
jno
cmp
xor
sub
inc
jmp
pop
xor
out
test
adc
imul
xchg
test
sbb
jno
sbb
or
jge
mov
adc
rcl
rorb
ret
in
mov
sub
inc
ret
fcompl
jge
aad
repnz
dec
pop
jne
dec
or
or
mov
andb
sti
ljmp
or
das
add
xlat
int
in
sub
test
push
lea
adc
mov
add
clc
pop
cmp
jmp
cwtl
aaa
add
dec
push
leave
mov
test
enter
popa
or
inc
mov
scas
mov
adc
push
pusha
pop
push
sub
and
dec
xor
xchg
dec
xor
and
sbb
dec
xor
and
inc
cmp
leave
and
inc
sub
sbb
push
xor
pop
mov
fdivr
pop
das
dec
mov
mov
test
das
mov
dec
test
cmpsl
shrl
xchg
mov
nop
mov
sbbb
xor
and
push
add
or
push
jo
jno
dec
jne
pop
lahf
cmc
sbbb
test
shrl
in
movsl
or
jne
and
std
stos
pusha
or
insb
pop
jne
xor
mov
inc
in
lods
test
sbb
jne
jno
inc
and
test
and
movsb
insb
or
ficoml
add
adc
pop
push
leave
and
inc
and
gs
pop
or
fldl
lock
int3
out
mov
les
rcl
pop
in
and
aad
loope
clc
pusha
jmp
adc
cmp
sub
pop
pop
adc
ret
push
outsl
fs
inc
bound
inc
sarl
xlat
mov
rorb
pop
stos
pop
aas
dec
dec
push
adc
and
sub
bound
adc
in
and
jne
sub
faddl
in
movsl
or
data16
call
cwtl
xor
jnp
insb
mov
mov
pop
inc
arpl
or
loop
adc
inc
or
mov
ja
sbb
push
clc
ja
mov
jg
popf
mov
xchg
ljmp
add
jo
or
jns
gs
dec
inc
lods
outsb
insl
outsl
test
cmp
fwait
pushf
inc
and
xchg
push
adc
mov
xor
push
inc
sarb
inc
lea
xor
xchg
adc
cmpb
movsb
cmp
or
add
aam
or
mov
sub
sub
addr16
data16
pop
in
mov
push
adc
dec
inc
and
pusha
mov
push
int
in
leave
and
and
adc
in
pop
push
in
sbb
in
orb
nop
push
adc
adc
in
enter
movsb
adc
sti
dec
inc
or
inc
imul
ja
inc
insb
inc
sub
sbb
call
jne
rorl
imul
push
sub
push
rcll
in
jns
push
sub
ror
and
push
pop
cmp
and
adcl
rcl
in
pusha
imul
dec
xchg
and
ss
add
stos
pop
and
daa
add
push
dec
cmovs
mov
imul
addl
mov
push
xor
call
insl
adc
loopne
add
mov
test
mov
in
lock
push
push
aam
or
or
outsb
mov
pop
aam
mov
aam
loopne
fdivrs
xchg
insl
shr
fildll
pop
mov
mov
out
mov
jg
repnz
fistps
movb
mov
pop
mov
loop
push
mov
pusha
ficoml
xchg
lock
xchg
inc
pop
and
inc
or
push
test
pop
xchg
adc
xor
stos
jno
aam
mov
jmp
jge
nop
out
mov
xor
and
fisttpl
xor
fisttpll
jl
dec
push
sub
enter
movsb
lods
mov
enter
int3
arpl
lea
inc
push
in
cwtl
js
xchg
nop
push
call
sbb
fs
mov
das
jb
subb
dec
dec
js
pop
leave
leave
leave
insl
nop
bswap
les
lods
movsb
pushf
outsb
push
xchg
fistl
dec
outsb
push
dec
test
pop
jmp
paddusb
dec
sub
jae
leave
and
push
inc
pushf
pushf
xor
adc
pusha
mov
inc
push
push
jno
outsl
mov
sbb
out
mov
rcrb
test
imul
dec
mov
pop
dec
dec
sub
jecxz
test
mov
adc
lods
leave
adc
in
sbb
dec
pop
dec
push
enter
push
sub
loope
mov
jmp
or
popf
pop
sub
cmp
dec
pop
or
jge
and
cwtl
jne
sbb
xchg
loope
jne
mov
loop
dec
dec
cmp
xchg
sub
jbe
pusha
imul
and
or
sub
dec
dec
outsb
push
add
mov
cwtl
mov
lods
es
mov
mov
mov
insb
outsb
xorb
imul
shlb
xor
jg
shll
test
and
js
insl
dec
shlb
mov
sbb
push
adc
hlt
add
add
mov
mov
push
or
xor
and
push
aaa
cmp
pop
mov
fs
rcrl
fdivs
pop
dec
xor
shll
pop
adc
lret
add
xchg
xor
incb
cltd
mov
pop
mov
or
sub
jbe
push
xorb
or
pop
inc
or
addr16
lahf
enter
sub
adc
mov
jns
arpl
loopne
push
push
jne
call
add
insl
leave
aas
outsl
loopne
jno
adc
call
daa
mov
test
xor
pop
and
mov
orl
xchg
filds
iret
pop
push
xchg
or
adc
sbb
test
add
pop
test
ss
int
shrb
xchg
sbb
xor
fs
push
enter
mov
dec
mov
adc
xor
xchg
or
sub
faddl
stc
movsb
and
mov
inc
mov
mov
movsb
push
cmp
nop
test
jl
xchg
dec
sbb
adc
leave
and
xchg
dec
rcr
ja
dec
mov
or
ror
aas
mov
mov
fs
add
mov
pushf
aad
or
inc
stos
or
mov
mov
ja
sbb
cmp
and
mov
imul
mov
inc
cmc
push
nop
inc
jne
cmp
add
cmp
adcb
mov
imul
sub
mov
repnz
dec
fwait
mov
mov
shrl
cwtl
sbb
or
nop
sub
movsb
cmp
in
pushf
pop
lods
xchg
sbb
inc
or
pop
mov
std
jo
not
push
add
pop
nop
add
adc
cmp
movb
jecxz
add
shlb
sbb
hlt
dec
pop
shll
pop
sub
imul
push
mov
push
and
adc
in
hlt
cltd
cwtl
push
sub
cmp
or
in
jg
insl
cmpsl
in
xlat
push
mov
sti
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
lds
sbb
clc
icebp
addl
cltd
sbb
lret
int3
push
rol
daa
xor
xor
mov
lcall
adc
cmp
add
enter
nop
lahf
les
fsubr
call
sub
shrb
mov
inc
add
fwait
loope
fstl
push
aas
add
popf
das
aas
dec
push
fidivs
popf
scas
lcall
lods
fwait
test
sbb
out
push
das
lock
idivl
in
lods
pusha
add
sbb
add
add
sub
pop
fwait
adc
out
xchg
pusha
add
dec
inc
or
movsb
adc
adc
test
jae
xor
enter
xchg
add
rcll
cmp
push
jo
mov
jecxz
cwtl
subl
cmp
and
push
pop
sbb
sbb
mov
mov
push
jb
pusha
testl
mov
cmp
jno
adc
xor
and
mov
insl
inc
mov
in
in
mov
dec
out
mov
lcall
jmp
jne
adc
in
movb
pushf
je
fnstsw
or
addl
shrl
dec
xchg
or
inc
mov
pusha
nop
test
adc
popa
and
lcall
stos
xor
aam
inc
in
inc
insl
adc
fcomi
dec
insl
test
enter
push
xchg
jno
out
xchg
pusha
mov
mov
pop
xor
stos
mov
xor
dec
cmpsb
adc
pop
sbb
js
and
inc
lods
icebp
inc
repnz
pusha
or
sbb
mov
add
insl
cmp
sbb
xor
std
xorl
add
pop
enter
dec
mov
mov
and
add
mov
fwait
in
pusha
pop
cmc
push
insl
mov
call
js
push
xor
xorb
lods
cmp
in
bound
adc
imul
test
and
cmpsl
int
mov
scas
test
cltd
es
xor
nop
cmp
sbb
mov
adc
xor
inc
add
xchg
inc
xchg
inc
add
mov
cmp
xchg
std
fs
and
adcb
cmp
xchg
dec
or
es
or
cmp
movsl
dec
mov
orb
dec
pop
repnz
fs
fimull
cmp
fwait
jl
lret
pushf
sub
adc
in
or
sbb
inc
sub
mov
mov
pop
xchg
bound
and
sbb
xor
fidivl
xchg
and
push
mov
adc
push
pushf
cwtl
inc
mov
sbb
sbb
add
addb
push
ret
pop
lcall
addb
ljmp
inc
lods
lahf
adc
xor
rclb
dec
cmpsb
adc
orb
lods
mov
jge
decb
shrl
or
pusha
mov
mov
loopne
jns
push
or
dec
jo
je
fsubs
lret
mov
adc
and
imul
add
sbb
lods
lea
inc
xchg
in
pop
imul
ss
push
inc
imul
pop
jb
mov
push
push
insl
mov
and
cli
push
sbb
or
xor
in
nop
lret
mov
cs
sbb
add
mov
in
pop
jecxz
lcall
xchg
sub
clc
mov
ljmp
fstpl
subl
mov
fdivrs
movb
pop
cmp
xchg
inc
jnp,pt
xor
push
and
enter
push
mov
lods
sbb
jb
mov
or
and
dec
cmpsb
mov
xchg
xchg
push
and
mov
iret
xor
push
xchg
rcrb
pop
push
sbb
xor
push
mov
neg
mov
sbb
fs
push
adc
and
lcall
movsl
jge
inc
pop
sbb
mov
pusha
insb
push
pop
divb
adc
jge
adcl
push
or
insl
push
push
ja
nop
pop
inc
xor
push
mov
pop
xlat
fists
add
inc
pop
out
cld
adc
testl
sahf
sbb
addb
cwtl
test
mov
sub
mov
cmp
inc
bound
fsin
dec
push
inc
add
roll
fistps
repnz
out
inc
lds
inc
cld
aas
xor
add
mov
or
adc
fisttps
mov
jns
mov
add
orb
jnp
mov
mov
mov
stos
adc
mov
gs
xchg
adc
push
or
cmp
cld
outsl
cmp
adc
lret
pop
mov
add
into
pop
adc
test
dec
dec
repz
push
mov
rorb
dec
and
or
je
test
cld
fadd
inc
pop
push
gs
jb
popa
fs
je
arpl
jne
jb
outsb
je
gs
fcmove
push
jnp
aas
rdpmc
add
smsw
cmpb
rcl
jae
adc
push
and
insb
outsl
arpl
imul
push
sarb
add
insl
adc
decl
or
inc
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
xchg
je
imul
fstp
jb
dec
push
add
add
xor
or
mov
and
add
fdivr
push
add
aas
push
add
dec
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
rcl
xchg
add
xchg
or
cmp
loopne
je
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
sbbb
sbb
sahf
cmpsl
stc
mov
das
push
lahf
push
imul
lock
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
cmp
js
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
imul
je
idivl
xor
repnz
dec
inc
mov
sbb
pusha
daa
mov
ret
mov
daa
outsl
dec
and
inc
jo
pop
inc
das
ss
add
pop
imul
mov
fcmovne
jns
out
out
adc
iret
and
arpl
push
outsb
inc
pop
pop
jp
dec
xlat
mov
and
scas
push
imulb
dec
jne
dec
mov
shll
ds
neg
mov
insl
arpl
mov
jg
sbb
xor
dec
cmp
cmp
add
jnp
sub
dec
and
jns
add
das
ljmp
scas
das
adc
arpl
bound
mov
dec
outsl
jbe
dec
arpl
ds
popa
sbb
jo
sub
addr16
xor
insb
mov
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
fcmove
fdivrl
je
jb
xor
and
jnp
data16
push
gs
sbb
dec
outsl
outsb
and
fdecstp
push
jne
xchg
pop
dec
imul
pushf
inc
aas
add
out
dec
or
jge
dec
jnp
mov
ja
adc
jae
fimuls
adc
popa
insb
outsb
mov
inc
inc
pop
push
and
call
andl
sub
xor
cmc
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
int
rclb
ljmp
insb
jl
pop
pop
pop
pop
test
bound
gs
sbb
push
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
cmp
sub
mov
sub
xor
push
add
fmull
adc
add
add
add
add
inc
push
push
and
push
pop
outsb
add
xor
cmpsb
sub
and
jnp
jo
add
pusha
push
add
inc
dec
out
into
fiaddl
cmp
add
sbb
movq
pop
loopne
neg
test
filds
orb
jg
jge
sar
lret
jno
icebp
pusha
inc
mov
clc
add
js
ret
movsl
add
xorl
fldl
imul
fs
jb
pop
dec
ja
pop
lock
xor
aas
aas
popa
js
scas
popf
jnp
addl
pop
ds
scas
or
dec
push
addb
pop
rcrl
fimuls
xchg
add
es
adcb
data16
sbb
mov
imul
loope
int3
xor
insb
push
or
cmpsb
jo
add
mov
in
push
outsb
imul
and
inc
loop
or
fldl
mov
imul
and
xchg
add
in
cmp
mov
nop
mov
xchg
xchg
ja
and
mov
mov
sahf
xchg
ror
xchg
or
or
inc
scas
mov
lret
hlt
push
cli
mov
pop
lods
mov
enter
add
jmp
jp
sbb
cmp
push
rcl
pop
sbb
push
inc
sub
pop
ja
xor
dec
sbb
dec
inc
dec
inc
xchg
notl
fs
add
adcl
cs
jae
jmp
mov
xchg
je
outsb
inc
insl
xor
sub
icebp
ss
je
xor
push
mov
jne
daa
pop
lea
repnz
addr16
outsl
js
push
xchg
cs
ljmp
insl
jo
jo
and
and
pop
pop
shlb
aaa
insb
les
dec
imul
or
inc
mov
les
cmp
dec
inc
jb
jns
daa
jnp
fdivs
push
jns
mov
clc
push
pop
pusha
inc
insb
and
arpl
je
or
addr16
xorl
fsubrl
push
jbe
mov
jo
or
jb
and
xor
mov
fwait
xchg
pusha
inc
jbe
push
push
sbb
imulb
push
add
and
xor
pop
jbe
popl
inc
imul
jp
cmp
push
orb
lds
mov
push
inc
daa
mov
test
pusha
lock
mov
shll
outsb
mov
lods
jbe
adc
cmp
sub
pusha
insb
call
inc
les
addr16
subl
js
mov
mov
mov
mov
inc
xor
jbe
push
push
push
push
dec
testl
dec
mov
xlat
dec
push
lods
lea
stos
popa
fisttps
pop
mov
insl
ds
or
jb
push
imul
call
push
lds
jg
sbb
jae
inc
in
rorl
push
xor
add
je
inc
adc
mov
subl
stos
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
out
push
sub
es
ja
out
mov
sub
sub
addr16
mov
add
sub
push
jnp
cmp
or
sbb
das
push
jb
and
and
adc
xchg
ds
aad
mov
jne
stos
addr16
cmp
add
pop
rcr
ss
gs
imul
lock
addr16
dec
sbb
mov
xchg
sahf
inc
pop
sub
jae
inc
jo
sub
pop
jbe
push
out
sub
repz
push
addb
xor
sbb
stc
cmp
adc
add
sub
fiaddl
push
rolb
sahf
out
int3
enter
mov
lods
test
mov
fdivp
aam
ds
nop
mov
jns
repz
mov
mov
sahf
out
je
insb
push
fs
pop
pop
push
push
jns
out
dec
dec
inc
cmp
jl
out
sbb
hlt
sub
iret
repz
shlb
cmpsl
stc
cmp
fsubrl
mov
out
push
sarl
and
call
cmp
mov
in
ds
mov
push
int
mov
or
sub
orb
test
push
jb
dec
bound
ss
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
adc
xchg
test
add
cmp
addl
addl
add
dec
add
dec
pop
dec
adc
adc
andl
mov
xor
xchg
das
jle
cmp
addl
mov
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
mov
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
test
jno
loope
push
stos
addb
ljmp
cmp
loop
popa
and
jg
or
pop
outsb
gs
popa
data16
add
pop
jns
aad
cli
repz
xor
add
ljmp
cwtl
add
push
arpl
mov
fs
sbb
sub
je
xor
mov
shrd
addr16
sub
add
inc
adc
pop
add
push
push
dec
and
xor
push
dec
inc
dec
movsbl
cmove
push
loopne
pop
adc
sub
adc
outsl
mov
into
mov
mov
fidivs
inc
jnp
inc
loop
mov
ds
pop
adc
dec
repz
lret
sbb
jb
jge
arpl
imul
adc
dec
scas
jp
jno
in
fstl
fildll
and
cmp
dec
imul
call
adc
inc
inc
mov
mov
sub
mov
xor
fwait
ss
sbb
pop
jns
ds
xor
fistpll
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
pop
add
call
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
incl
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
shll
mov
leave
mov
adc
cld
aas
pop
xchg
dec
add
scas
lods
dec
lock
xor
adc
jg
mov
pop
pop
repnz
fistpl
sub
lret
es
sbb
outsl
loope
add
pop
or
outsb
push
sub
ja
mov
jg
inc
push
scas
pop
inc
mov
outsl
loopne
jo
daa
or
sbbl
fistpl
jmp
sub
mov
xchg
and
lahf
adc
pop
dec
jns
out
mov
ja
pop
and
mov
inc
fwait
imul
outsb
addr16
es
jae
in
add
outsb
lret
fildl
jmp
xlat
test
sub
ficomps
mov
adc
bound
pusha
dec
loopne
jg
aas
fs
pcmpeqw
sti
cmp
mov
popa
daa
inc
fildl
pop
imul
je
jmp
loope,pn
jae
insb
add
je
fstpt
out
shr
xchg
lret
xchg
jb
fists
ret
fildl
inc
jb
add
inc
stos
jae
fs
or
ret
push
movsb
pop
jo
pop
xchg
clc
and
imul
mov
jae
insl
jle
pxor
cmpsl
xchg
sub
sub
jecxz
loope
js
jg
repz
fbstp
pop
out
push
push
push
or
adc
mov
xchg
adc
ret
insb
push
in
cmp
ret
or
stos
jg
mov
sbb
xchg
outsb
icebp
mov
fs
lcall
loope
mov
jmp
add
mov
pusha
js
sub
mov
aad
cmpsl
out
add
jne
dec
jae
xchg
insl
mov
insb
outsl
cmp
mov
pop
lcall
xor
das
addr16
iret
add
xchg
add
cmp
add
mov
gs
lods
gs
fs
sar
arpl
xor
and
fdivrp
ja
xor
xor
push
imul
jp
iret
out
push
adc
inc
push
cs
cmp
jl
out
sub
mov
mov
add
add
add
mov
cmp
jb
shr
push
clc
inc
inc
add
ja
call
das
add
jo
xlat
jecxz
das
inc
jae
jecxz
push
sahf
or
add
ja
ss
jb
rcrb
rcrl
das
ret
jbe
or
fldt
add
push
jo
pop
mov
imul
inc
push
divl
mov
sbb
testl
push
adc
roll
pop
test
loopne
loope
inc
cmp
dec
dec
ficomps
mov
aas
ss
xchg
jo
dec
add
push
pusha
push
sbb
data16
ja
pop
mov
or
add
stos
in
mov
push
pop
mov
mov
push
popl
pop
inc
mov
pusha
addr16
out
mov
addr16
je
lret
inc
outsl
mov
arpl
daa
pop
pop
ja
mov
sbb
push
pop
push
lcall
sub
jne
xor
adc
cli
sbb
cs
inc
ret
pop
pop
cmp
add
or
fiadds
dec
sub
jnp
mov
jl
pop
lahf
add
das
push
stos
mov
fmuls
shrb
pop
sbb
xlat
dec
jnp
add
repnz
in
ficoml
sahf
inc
aas
jle
mov
mov
or
loop,pn
loop
jae
jbe
icebp
xlat
push
arpl
adc
loop
call
lret
and
push
push
roll
mov
inc
ds
fdiv
je
and
bound
out
cmp
inc
pop
testl
xchg
pop
xor
dec
ja
dec
sbb
adc
shlb
out
shll
push
sub
sbb
popa
hlt
xchg
push
ret
shll
cmp
jne
add
dec
pop
pandn
dec
pop
inc
out
repz
cmp
pop
mulb
adc
icebp
sub
mov
rcll
jg
push
jne
addb
dec
adc
push
dec
xchg
subl
push
sub
outsb
or
push
test
out
pop
cmp
mov
jne
or
clc
divl
fistpl
fcmovbe
mov
jnp
pop
and
xor
inc
jno
mov
cmp
pusha
lret
push
mov
outsl
outsl
push
mov
mov
mov
adc
xor
pop
das
xchg
or
fdiv
cs
dec
jecxz
mov
ja
es
xchg
call
out
inc
push
inc
out
inc
das
cmp
imul
shll
mov
sbb
push
xchg
subb
outsl
imul
jo
adc
inc
ss
mov
dec
inc
lea
stos
xlat
xchg
es
je
pop
dec
sbb
outsl
insb
sti
cmp
push
sub
pop
scas
inc
bound
dec
cmpsl
mov
sub
dec
out
pop
pcmpgtd
cmpsl
xchg
inc
arpl
inc
add
cmpsl
pop
outsl
push
aas
and
lcall
out
mov
push
mov
inc
mov
jl
jg
jl
imul
push
and
sbb
addr16
bound
pop
outsb
out
push
das
ja
loopne
push
mov
fs
mov
mov
xchg
fstp
jo
mov
out
fcoml
lds
jl
sbb
imul
into
sbb
insl
push
mov
add
es
divl
outsb
jo
call
pop
arpl
inc
xchg
outsl
subl
mov
mov
or
lahf
outsl
arpl
jns
pop
push
adc
mov
or
inc
mov
jl
mov
mov
imul
push
xchg
jl
insb
cmp
loop
xor
cmp
mov
sbb
mov
daa
inc
addr16
push
outsl
pop
adc
dec
mov
aad
xlat
incl
outsl
orb
xchg
rol
fistpll
clc
arpl
dec
das
in
les
fistpll
pop
jns
mov
jae
out
les
ljmp
pop
or
sbb
pop
enter
fwait
xchg
fists
push
mov
lea
mov
pcmpgtd
aaa
push
movsb
insb
arpl
dec
inc
fmuls
inc
xchg
pop
aaa
das
lods
dec
stos
outsb
popa
inc
aas
popa
pop
ret
ret
das
imul
jbe
js
push
add
rcll
sub
imul
add
cmp
stos
lea
aas
nop
or
shll
cmp
shr
add
xor
mov
push
jae
daa
and
fiadds
popw
fstpl
ficoms
addr16
outsl
icebp
cmp
scas
fimuls
sub
push
push
inc
inc
xchg
xchg
sub
or
dec
ret
lea
out
sub
mov
imul
icebp
dec
outsl
mov
and
lahf
and
icebp
mov
mov
outsl
dec
imul
les
cmpsl
insl
mov
push
mov
mov
xchg
add
int
xor
pushf
ss
js
add
add
mov
push
ret
jg
add
pusha
pop
fadd
imul
mov
pop
mov
and
std
push
int
jl
add
inc
ds
test
ja
in
jge
cmp
ss
es
push
in
push
imul
stc
pop
mov
inc
scas
lds
test
adc
imulb
aas
mov
push
mov
shrl
mov
and
xlat
or
ds
out
push
call
mov
cmp
imul
push
adc
push
inc
pop
idivl
in
sbb
mov
cmp
repz
lret
call
inc
pushf
push
xchg
fistpll
inc
test
das
pop
aaa
dec
push
movsb
pop
js
inc
xlat
iret
icebp
inc
stos
mov
les
pop
iret
jo
jns
mov
adc
add
adc
push
push
jae
arpl
loopne
sub
jno
rcl
sti
scas
jae
ret
pop
aas
iret
popa
jnp
loope
push
and
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shlb
or
and
dec
bound
ss
xor
mov
mov
cmp
sahf
repz
xor
push
xchg
mov
out
ds
out
adc
inc
imul
aaa
lds
repz
cli
pop
lret
out
sahf
cmpsl
push
pop
jecxz
jno
jge
cmp
mov
mov
dec
adc
mov
popa
cld
out
cmp
gs
and
imul
je
or
jb
sarb
mov
jae
ss
sbb
and
and
mov
arpl
imul
and
and
adc
adc
icebp
cltd
add
and
and
mov
jne
je
ss
cmp
sbb
imul
xor
data16
sar
imul
mov
push
add
add
test
decl
daa
imul
sub
aaa
push
pop
push
shr
daa
repz
daa
inc
push
or
data16
sbb
dec
das
xor
mov
or
insl
dec
pop
xchg
lahf
or
insl
inc
or
or
adc
in
mov
jae
dec
movsb
ss
jmp
rorl
into
scas
mov
add
punpckhwd
out
jnp
xor
jb
inc
outsb
mov
filds
mov
cltd
inc
dec
and
pop
iret
xchg
out
and
stos
push
orb
mov
das
adc
adc
pop
mov
and
and
fs
and
dec
bound
push
mov
scas
loopne
pop
and
outsb
add
ss
js
test
sbb
aaa
dec
adc
xchg
je
data16
xchg
cmp
adc
mov
loopne
jnp
jmp
xchg
mov
xor
outsl
mov
mov
sub
sbb
push
and
mov
inc
mov
cmpsl
js
inc
sbb
push
mov
dec
mov
adc
sysret
dec
cmp
mov
js
xchg
je
jmp
inc
cmp
and
mov
cmp
ficoml
push
sbb
mov
push
or
ljmp
or
inc
call
push
and
dec
and
repz
add
adc
inc
test
sub
stos
sub
lods
testb
iret
gs
push
insl
or
jae
in
pop
ds
repz
cs
add
push
aas
aaa
pop
bound
rclb
popa
xor
daa
sbb
mov
xor
cmpsb
add
pop
push
and
push
hlt
fcomi
pop
cmp
push
cli
cmp
or
aaa
fadds
shrb
outsl
test
addr16
add
adc
add
xchg
mov
ss
mov
nop
xchg
mov
cmpl
lahf
scas
movsl
push
pusha
dec
add
push
inc
jo
pop
inc
aas
inc
push
push
lods
inc
cmp
sbb
je
fiaddl
fildll
inc
bound
adcl
jge
sub
or
dec
ja
loopne
adc
scas
mov
fwait
aad
pop
cwtl
dec
iret
idivl
mov
xchg
shll
inc
popa
insl
test
arpl
dec
xchg
pop
adc
push
outsl
inc
nop
inc
sub
imul
and
xor
jns
lds
push
test
mov
xor
fdivrp
and
cmpsl
push
cs
lcall
orb
jp
mov
fbstp
lahf
iret
mov
push
outsb
out
mov
adc
cmp
sub
inc
pop
insb
insb
push
push
inc
or
dec
sbb
sbbl
aaa
arpl
stos
inc
filds
ljmp
imul
xor
mov
insl
xchg
xor
test
inc
pop
and
lret
arpl
imul
jmp
arpl
add
fists
cmpsl
mov
cmp
cmp
sub
dec
imul
inc
xchg
adc
stos
add
mov
push
aaa
mov
movsb
add
xchg
subl
push
add
pop
and
and
dec
daa
push
clc
xchg
fsubp
mov
loopne
loopne
push
xorb
jne
rcrb
or
es
daa
inc
mov
addb
bound
scas
pop
jbe
cs
xor
cmp
adc
push
xorl
arpl
mov
push
xchg
gs
add
repz
decl
notl
pusha
clc
mov
push
call
mov
push
jle
arpl
imul
loopne
popf
rclb
push
push
movsb
int3
mov
inc
jb
mov
cli
test
or
mov
test
dec
xor
popa
arpl
fs
inc
mov
jp
imul
mov
pop
aaa
xor
in
xor
and
xchg
pxor
andl
pusha
neg
test
lret
jmp
sbb
mov
push
or
pop
adc
sbb
stos
adc
inc
mov
push
ret
lahf
cmp
ss
xlat
popa
xchg
mov
cmp
mov
push
lods
and
mov
add
or
inc
mov
inc
out
sub
push
adc
aaa
push
imul
inc
rcrb
sub
dec
adc
push
and
ret
out
fwait
sbb
or
sub
xchg
sbb
sbb
aas
ja
bound
lcall
sbb
jmp
or
mov
pop
pop
shlb
cmp
or
cs
or
add
cmp
inc
pop
push
jb
clc
jo
xchg
push
mov
ss
aaa
pop
minps
fbld
pop
mov
fdivs
dec
push
add
dec
push
mov
push
dec
and
movsl
xchg
gs
punpckldq
hlt
push
xchg
jbe
jp
inc
pop
jg
xchg
gs
inc
and
iret
aas
cmp
ds
iret
outsl
iret
jp
testl
dec
shll
pop
sub
test
repz
jl
and
add
add
out
out
jecxz
or
mov
sub
xlat
iret
adc
cmp
inc
scas
adc
lahf
out
push
sub
loop
inc
fcomi
cmp
popw
push
push
push
mov
cmpsl
fldcw
pop
insb
pop
add
jl
insb
enter
mov
pop
jmp
popa
jno
xchg
adc
and
inc
mov
jnp
mov
popa
ja
adc
inc
testl
aaa
bound
or
test
adc
push
mov
rcrb
or
mov
pop
pop
ret
xchg
jo
sbb
push
jae
jae
dec
mov
sub
mov
pop
iret
imul
and
pop
scas
add
mov
mov
pop
cmp
nop
iret
jecxz
jo
out
mov
cmp
insl
and
out
ljmp
shll
push
pop
rcll
mov
les
or
scas
aas
aas
adc
fucomi
adc
aaa
out
fildll
and
or
cmp
add
sbb
mov
aas
adc
inc
test
daa
and
cmp
fwait
push
stos
inc
int3
lods
pop
ret
lret
imul
arpl
jg
outsl
repz
ja
jnp
jge
xchg
xchg
test
mov
fs
js
sub
cmp
outsb
sbb
mov
xor
xchg
jle
mov
insl
das
aaa
jb
pop
or
jno
add
mov
xchg
out
push
mov
testl
clc
sub
pop
push
adc
inc
add
rcrl
ss
inc
pop
sahf
push
mov
sub
push
in
imul
rcr
jo
jns
pop
and
fsubrl
xor
dec
and
in
call
dec
scas
inc
hlt
fsts
push
xor
cmpsb
xchg
fsubrs
or
adc
insb
dec
and
aad
in
jb
sub
aam
scas
xchg
test
xchg
mov
xchg
push
leave
xor
rorb
in
and
inc
sub
movsb
scas
xchg
stos
in
add
pop
add
test
pop
xchg
mov
int
leave
push
xor
mov
int3
insb
sbb
push
repnz
lret
jl
pop
and
push
sbb
add
icebp
idiv
mov
rclb
mov
cmp
rclb
mov
dec
adc
and
pop
dec
pop
movsl
cltd
sbb
dec
notl
mov
mov
sub
add
stos
add
sbb
push
inc
shrb
add
inc
jb
xchg
out
iret
dec
or
das
inc
scas
sbb
sub
xor
mov
call
pop
and
les
add
and
test
je
inc
test
push
popa
xor
insl
aam
shl
rep
xchg
dec
sub
rcrl
inc
filds
inc
int
push
imull
mov
aaa
shll
movsl
and
sub
or
mov
push
inc
push
or
insl
xlat
inc
and
sub
or
cltd
or
adc
outsl
scas
adc
stos
addb
dec
es
mov
push
scas
addr16
push
int
xchg
fildll
inc
scas
hlt
push
adc
jg
cmpsl
pop
popa
mov
inc
sub
adc
and
push
jnp
and
push
push
mov
and
or
cmp
rcll
das
or
mov
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
push
dec
popa
add
lahf
push
mov
adc
scas
add
cmc
xchg
repz
and
jg
andb
push
in
out
mov
add
movsb
or
inc
adc
data16
push
sbb
insb
xchg
inc
nop
push
mov
pop
out
outsl
imul
pop
mov
in
popa
movsl
iret
xchg
jae
and
mov
neg
jb
outsb
add
insb
iret
mov
popa
xor
jecxz
pop
lock
and
mov
lods
mov
jg
fildl
pop
mov
push
pop
or
push
push
mov
cvtpi2ps
andps
push
adc
pand
pusha
and
out
adc
inc
jl
and
jecxz
cwtl
mov
sub
inc
xor
pop
jne
addr16
bound
pop
outsb
hlt
cmp
push
sbb
cs
je
arpl
sbb
lcall
dec
push
adc
popa
xor
addr16
jecxz
faddl
xchg
jmp
add
mov
mov
jae
ss
or
pusha
jmp
bound
jae
js
js
jecxz
outsl
dec
js
xor
loope
cwtl
mov
or
or
loope,pn
jecxz
roll
arpl
and
imul
shl
xor
push
xlat
lahf
rorb
stos
pushl
loope
xchg
fwait
or
sahf
out
sahf
adc
sbb
sahf
out
inc
push
andl
out
sbb
cltd
fldcw
or
xchg
add
pop
push
add
or
adc
mov
add
jns
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
add
shrb
ret
sub
shrb
lahf
data16
xchg
pop
adc
pop
add
sub
sbb
fwait
int
dec
str
push
cmpsb
scas
fldcw
inc
stc
das
incl
and
add
repz
repnz
mov
ss
cmpsl
push
pop
inc
ds
jns
aam
test
fcomp
repz
shrl
inc
push
arpl
mov
orl
movsb
dec
nop
ljmp
ja
rclb
mov
push
jb
push
add
mov
push
inc
mov
dec
add
imul
das
adc
sbb
inc
aaa
hlt
sbb
test
ja
cmpb
pop
push
pop
mov
inc
fs
sub
ljmp
orl
and
dec
cmp
jecxz
jmp
cs
cmpl
jne
fildl
mov
pop
das
or
idivl
iret
adc
xor
aaa
adcl
jns
mov
aaa
mov
add
inc
sbb
pop
sub
movsb
inc
mov
je
xlat
dec
rcll
push
dec
and
and
insb
xor
idivl
pop
sub
dec
imul
cwtl
and
rcll
lcall
bound
scas
adc
pusha
loopne
fistps
inc
lea
add
jmp
cmp
push
loope
aaa
push
fiaddl
ja
mov
dec
adc
mov
imulb
push
jbe
sbb
pop
jge
push
es
cs
cmp
or
subb
aad
out
and
out
js
imul
mov
bswap
mov
insl
xchg
testl
jb
inc
xchg
cmp
jns
xor
jae
fs
mov
lret
into
xor
sbb
dec
shlb
negl
jnp
inc
mov
or
push
xor
inc
cmp
adc
dec
xchg
je,pn
mov
js
inc
push
stos
jb
pop
mov
jns
dec
mov
bound
out
loopne
xor
xor
push
fisubrs
xor
cs
lret
pop
jl
outsb
jp
ljmp
inc
xchg
ja
retw
mov
push
inc
inc
fidivs
sbb
lcall
les
arpl
fs
inc
mov
loope
addb
push
pop
sbb
dec
dec
daa
divb
out
push
push
mov
cs
shl
add
inc
pop
pop
mov
sbb
dec
ss
outsb
pop
push
pop
mov
daa
dec
jb
das
inc
pop
dec
push
pop
ret
jnp
dec
das
add
and
ja
data16
inc
pop
push
sysexit
mov
pop
jns
dec
cs
sahf
push
outsl
jnp
sub
cli
push
push
insl
sub
mov
mov
insl
mov
inc
mov
ja
xor
push
jp,pt
jp
sahf
notl
ds
subl
sahf
dec
das
xor
lds
jp
pop
outsl
lock
or
xor
mov
outsl
jb
sbb
outsl
imul
pop
and
push
sbb
push
sahf
mov
scas
out
test
or
mov
arpl
or
add
xor
inc
mov
aam
jmp
lock
push
lahf
xor
pop
jnp
and
and
sbb
mov
xchg
out
add
lea
fisttps
push
inc
inc
jne
sbb
adc
shrb
jecxz
bound
nop
xchg
mov
scas
push
or
daa
and
jbe
lods
shlb
or
inc
lret
lret
mov
dec
pop
pop
cmp
aam
sub
shrl
mov
ror
mov
xchg
dec
test
notb
sbbl
inc
inc
lea
sbbl
adc
sbb
sub
cmp
push
stos
scas
testb
xchg
xchg
mov
and
lahf
xchg
xlat
or
push
xor
add
dec
daa
mov
lret
lahf
js
inc
loop
ja
sub
push
or
outsl
int
mov
stos
dec
outsb
icebp
mov
inc
dec
stos
bound
imul
push
addr16
cmpsb
jbe
push
add
cwtl
fldt
mov
fwait
mov
sbb
popa
fs
outsl
or
rol
clc
aas
lock
mov
aas
jnp
inc
pusha
and
push
inc
sub
cmpsl
addb
xchg
inc
lahf
scas
xor
cmp
inc
sbb
sahf
add
pop
or
sbbl
les
pop
sub
xlat
inc
outsb
jbe
lods
xchg
daa
add
adc
scas
add
das
push
sub
fistpll
sub
sti
pop
packsswb
pop
sbb
push
sub
aas
call
pop
sub
inc
sbb
aaa
cmpsl
add
addl
add
jb
jbe
addr16
mov
mov
mov
cmp
movsl
fdivrs
iret
mov
aad
das
and
mov
fwait
test
inc
mov
clc
adc
popa
fldt
push
xor
repz
inc
lods
xchg
dec
arpl
cltd
dec
push
mov
xchg
pop
xchg
mov
sub
inc
mov
mov
jns
addb
add
rcll
cmpsl
push
pop
pop
out
and
inc
mov
jo
mov
push
pcmpgtd
jge
mov
sbb
xchg
loope
imul
scas
in
loopne
leave
xlat
insb
push
jge
fsubrl
imul
dec
rolb
lock
mov
inc
aaa
ss
add
pop
nopl
add
das
shlb
mov
mov
pop
push
jg
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
std
decl
push
mov
inc
push
insl
ss
adc
cli
mov
sub
std
mov
jae
sbb
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
das
ss
dec
fsubs
sbb
mov
xor
dec
xchg
jecxz
dec
push
pop
mov
pop
adc
je
and
movsb
scas
icebp
xlat
cmp
cmpsb
mov
push
aam
pop
aaa
mov
insl
test
je
mov
out
cmp
push
inc
inc
pop
and
xchg
sub
mov
dec
mov
push
dec
cmp
cmp
inc
sub
pushf
xor
and
daa
iret
and
hlt
cmp
lcall
xchg
out
inc
les
sahf
xchg
out
dec
xchg
inc
outsl
pop
ljmp
mov
xor
lahf
pusha
inc
roll
mov
push
clc
or
xchg
aaa
imul
pusha
sbb
push
sbb
sbb
pop
cli
shrl
repz
gs
movsl
subl
jnp
cmp
ja
cmp
sub
adc
idivl
lcall
addr16
fildl
xor
fisubs
iret
bound
add
jae
or
push
lcall
inc
cwtl
cmp
imul
ljmp
je
bound
imul
add
ret
add
mov
mov
scas
outsl
adc
insl
sbb
push
add
test
add
pop
xchg
inc
sub
cmp
push
xchg
xchg
pusha
insl
push
scas
notl
je
add
sbb
xor
jo
xchg
outsb
mov
nop
pop
inc
dec
popa
jno
inc
mov
lds
add
mov
test
cmc
incl
and
push
add
inc
pop
fistl
push
sbb
and
lea
push
out
pop
dec
jge
sbbl
pop
pop
pop
popa
cmp
dec
gs
xchg
mov
push
cmp
fwait
scas
lods
pop
mov
cmpsb
push
jp
aaa
push
das
je
inc
test
pop
cmpsl
xorb
mov
pop
les
xchg
or
add
push
lods
aaa
dec
inc
dec
roll
add
fimull
repz
scas
jle
pop
in
lcall
pop
add
jge
out
cmpsl
adc
js
mov
pushf
pop
lcall
push
sahf
testl
jns
movsl
push
jle
in
repz
push
pop
mov
xchg
cmp
lods
pop
data16
mov
repnz
push
push
adc
jbe
mov
push
outsb
lcall
fucomi
cmp
cld
adc
push
pop
sysret
mov
mov
aaa
push
pop
imul
fsts
xchg
cmpsl
xlat
insb
das
nop
test
dec
push
sahf
clts
insb
lahf
and
insb
movsb
push
inc
fmulp
data16
cmpsb
int3
loop
jmp
push
push
jl
sarl
divb
pop
jns
iret
sarl
out
fucom
cmc
xor
sahf
pop
xchg
inc
push
sti
mov
mov
and
sahf
aaa
nop
dec
ret
jge
sbb
imul
out
fisubrs
mov
fisubs
testl
lock
nop
insl
pop
stc
insl
iret
repz
jbe
outsb
push
das
inc
push
je
movsb
loope
shrl
outsl
pop
add
jns
negl
cmp
jl
scas
dec
lods
xchg
popa
push
fisttps
cmpsl
jge
and
push
scas
es
pop
jnp
jns
jno
inc
adc
movsl
ss
in
xchg
fwait
push
or
inc
es
mov
ja
sub
filds
das
inc
stos
jo
rcr
lret
pop
lcall
pop
push
add
dec
repz
or
cmp
iret
repz
shlb
push
push
bound
jge
push
xlat
mov
int
imul
rcrb
jl
imul
gs
iret
repz
je
mov
out
lcall
push
push
orb
repz
add
inc
push
jns
out
mov
testb
jg
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
mulb
or
adc
mov
mov
pop
push
test
add
idivb
jg
dec
mov
and
pop
sbb
enter
jg
cmp
adc
or
adc
cld
pusha
or
add
and
in
add
shlb
inc
and
ja
sub
push
xor
std
ds
and
insb
imulb
loope
ja
outsb
outsb
pop
push
adc
test
vmread
xor
jbe
imul
dec
xor
inc
xchg
xor
and
dec
inc
out
pop
pop
test
push
lods
dec
imul
stos
mov
jo
push
gs
pop
mov
ret
push
dec
mov
sub
out
xor
popa
je
mov
sbb
push
lcall
and
loop
scas
pop
inc
mov
loop
fwait
jge
pop
push
ficoml
cs
pop
rolb
jmp
push
jae
jmp
sbb
add
adc
js
push
dec
mov
inc
inc
ljmp
jg
sub
aaa
nop
push
xor
mov
mov
loope
arpl
push
mov
repnz
pop
scas
xlat
add
push
out
xlat
push
jecxz
jmp
jo
push
jo
push
add
mov
inc
or
daa
ret
mov
jno
sbb
xchg
stos
in
jnp
mov
mov
test
mov
jb
xor
xor
clc
inc
pop
outsl
addl
fs
push
arpl
add
lock
movl
repz
push
xor
fisttps
enter
ljmp
daa
ret
stos
xchg
mov
mov
push
and
cmpsl
ljmp
jbe
jo
xor
mov
sbb
add
outsb
push
jnp
xchg
loopne
or
jle
jmp
shlb
dec
cmp
and
mov
rol
and
jb
fwait
lods
mov
jcxz
xchg
add
daa
cmp
or
push
mov
insl
aad
ja
dec
push
idivb
push
push
adc
mov
lock
rsqrtps
loopne
addr16
push
test
pusha
insb
or
gs
pop
mov
scas
xor
pop
movsl
test
push
scas
inc
ljmp
jo
bound
xor
inc
pop
addr16
jnp
xchg
jo
inc
movsl
inc
ja
iret
xor
or
das
das
movsb
jecxz
pop
adc
inc
mov
ja
insl
stos
cmp
mov
das
pop
jg
mov
push
inc
loope
lods
pop
pop
ja
add
mov
jbe
data16
push
scas
outsl
aaa
imul
test
pop
fwait
loope
out
xchg
das
notl
sbb
inc
das
filds
jl
fbld
jb
shll
pop
adc
cwtl
sbbb
divl
das
mov
xor
insl
xchg
ret
sub
stos
inc
ret
and
pop
mov
ret
sbb
and
mov
out
jb
out
jbe
stos
or
pop
push
cmpsl
mov
pop
inc
pop
scas
fcoml
inc
and
xor
hlt
jo
adcb
mov
jo
sbb
cmpsl
add
xchg
pop
mov
inc
push
inc
aas
sbb
jecxz
jne
jae
or
inc
cmp
pop
add
lods
ja
xor
push
inc
mov
dec
inc
xchg
or
inc
aaa
adc
inc
sbb
jp
inc
push
pop
pop
inc
ss
shll
faddp
lds
sbb
push
cmp
add
cmpsl
divb
daa
ret
pop
ret
idiv
pop
dec
loopne
add
inc
xchg
adc
mov
inc
adc
scas
inc
sbb
jns
xadd
or
dec
sbb
cmpsb
lret
int
cmpl
or
je
fisttpll
popa
insl
jo
je
add
addr16
out
std
lea
aas
jo
jae
daa
pop
jno
outsl
xor
inc
mov
insb
inc
sub
pop
mov
xrelease
scas
inc
or
je
jne
or
scas
mov
adc
pop
dec
out
test
mov
inc
mov
xor
insl
mov
dec
pop
inc
mov
sub
je
lea
adc
imul
mov
js
xor
add
fcmovnb
xor
mov
movsb
lahf
mov
aas
and
or
pop
stos
pop
icebp
inc
test
out
sbb
test
sbb
mov
mov
jae
inc
push
mov
push
pop
adc
push
mov
dec
lods
sub
push
add
lock
sbb
adc
fisttps
adc
lods
cmpsl
pop
pop
inc
test
insb
lds
mov
or
sub
push
aam
jns
jb
add
push
iret
jmp
jbe
ret
ret
mov
or
xchg
dec
xlat
sti
mov
outsl
outsb
or
jecxz
js
aaa
inc
insb
cwtl
cvtps2pd
das
push
pop
daa
xchg
test
push
inc
cmp
adc
xchg
sbb
sbb
push
pop
sub
mov
xor
mov
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
andl
js
loop
adc
in
or
xor
das
ds
das
sbb
out
pop
add
add
pop
daa
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
les
outsl
pop
adc
add
jge
imul
push
push
mov
inc
popw
push
sbb
ja
push
dec
aaa
push
add
add
aam
incb
mov
add
xorl
cmp
data16
push
add
push
and
xor
inc
lahf
fwait
in
jnp
mov
testl
mov
mov
fldl
push
mov
dec
inc
push
sbb
loop,pt
lret
adc
sarl
cmpsb
inc
push
xlat
das
xchg
add
inc
inc
fdivs
movl
or
pop
add
outsl
inc
icebp
mov
or
cmpsl
push
or
lds
daa
incl
push
enter
dec
mov
jbe
jnp
out
std
xor
push
sbb
xor
sub
jb
rcr
or
push
pop
adc
pop
pop
js
outsl
arpl
popa
add
negb
je
and
and
arpl
mov
fisubrs
push
es
push
inc
fsubrl
add
xchg
and
je
mov
popa
stos
orb
add
out
inc
fcompl
loopne
sub
sub
push
and
mov
lahf
sbb
mov
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
addl
jne
sub
mov
add
or
addr16
and
push
mov
pop
gs
inc
or
mov
insb
jg
negb
popa
push
pop
inc
popa
imul
xor
aaa
mov
outsl
jo
data16
popa
imul
dec
sub
in
jno
xlat
das
mov
sti
mov
or
inc
xadd
sbb
inc
shrd
repnz
loop
movswl
mov
cmp
cmpb
aas
nop
jo
cmovns
pop
pop
pavgb
ret
fildll
pop
or
ud0
push
mov
loopne
dec
stos
mov
inc
test
stc
mov
das
mov
mov
rolb
cld
je
roll
mov
mov
sysexit
push
addr16
adc
add
inc
push
push
push
insb
insb
mov
mov
inc
add
lods
jne
adc
stc
pusha
in
lods
add
daa
movsb
les
fsub
mov
daa
enter
in
mov
and
addb
das
inc
sub
xchg
push
repnz
pop
fs
sarl
imul
or
inc
aaa
or
dec
sub
aam
adc
cmp
or
dec
mov
lock
mov
scas
jg
data16
xchg
adc
add
ret
out
repnz
ret
mov
aad
and
ja
fiaddl
ja
mov
push
icebp
bound
lds
outsl
fsubrl
in
dec
scas
in
data16
add
dec
cmpsl
add
js
mov
les
xchg
cmpsb
pop
push
pushf
cmp
sti
je
popl
xorl
sbb
int3
push
fadds
enter
out
inc
add
pop
rorb
lds
insl
orl
out
sahf
outsl
xchg
cld
push
fs
or
xchg
jo
push
cmp
sarb
lods
lods
out
inc
xchg
outsl
pop
enter
push
mov
pop
decl
mov
inc
push
and
add
mov
dec
mov
daa
push
add
mov
daa
test
addr16
aam
push
enter
in
aad
add
outsl
call
enter
iret
jnp
and
xor
test
dec
iret
ja
pop
inc
sahf
or
je
inc
jno
icebp
inc
enter
pop
leave
jae
outsl
sub
fcoms
call
inc
cs
enter
fistpl
je
addr16
enter
js
xchg
xchg
negl
aam
test
test
mov
mov
add
lahf
push
aaa
in
add
adc
sub
daa
in
addr16
movsb
stc
adc
dec
pop
or
pusha
aaa
ds
dec
in
dec
or
xor
leave
push
movsb
push
mov
inc
scas
subb
daa
xchg
in
nop
out
loopne
clc
mov
loopne
fstpt
repnz
cmp
js
inc
das
fcmovb
pop
mov
xchg
pusha
lret
addr16
and
xlat
dec
hlt
pushf
mov
mov
das
jbe
test
sbb
lock
adc
push
aad
popf
out
fidivs
lahf
or
pop
enter
lret
or
inc
sahf
push
pusha
push
pop
bnd
ja
mov
cmp
mov
mov
es
pop
int3
lahf
mov
or
xor
inc
push
mov
jb
push
lahf
in
jae
insl
cmpsb
daa
lret
sahf
adcb
dec
lahf
xorb
test
loopne
sbbl
ds
fs
out
xor
xchg
sbb
push
inc
int
push
out
pop
popf
outsl
jg
nop
nop
out
nop
je
cwtl
hlt
cs
mov
sahf
or
fsubr
scas
xlat
cmpsl
test
mov
iret
in
into
sub
inc
push
cmp
imul
bound
imul
xchg
add
jns
push
cmpsl
cs
nop
jo
aam
adc
jns
test
cmp
jo
iret
fs
fistps
sub
cmpsl
jo
jl
or
movsb
insb
pop
repnz
jl
int3
movsb
iret
test
rol
nop
iret
jae
shl
jo
cs
cltd
rol
cld
sti
fiadds
cmp
adc
cmpsl
pop
pop
and
cld
jg
add
pop
test
cmp
dec
xor
dec
ja
dec
and
test
enter
add
les
sbb
sub
lahf
stc
push
enter
test
jns
in
push
nop
test
aam
in
nop
test
enter
mov
rcll
rcrb
pop
enter
add
out
cmpsb
dec
rcrb
mov
pop
push
push
cmpsl
jg
test
cmpsl
mov
test
mov
xchg
hlt
add
or
and
xchg
cmpsl
adc
mov
rcrl
fwait
lcall
pop
jnp
mov
dec
lock
daa
addr16
sahf
mov
sbb
pop
ja
iret
inc
stos
clc
pop
dec
in
cld
adc
out
in
pop
push
add
test
push
push
fs
mov
jg
mov
xchg
movsb
mov
orb
xchg
fcoml
clc
or
aas
sub
orb
call
ds
dec
sahf
push
lds
aas
pop
repnz
ja
inc
mov
inc
mov
out
inc
and
push
jl
mov
out
jmp
lahf
movsb
inc
iret
xorl
enter
nop
push
movsb
inc
hlt
pusha
insl
sbbl
inc
cld
aam
lahf
mov
inc
aam
shll
mov
xor
dec
xlat
mov
push
loopne
push
inc
jle
jmp
cmp
push
js
mov
dec
inc
ja
nop
addb
fsubs
cmp
icebp
in
xlat
push
je
and
sbb
push
add
cmp
lahf
mov
ja
rcr
subb
inc
inc
sahf
pop
imul
inc
hlt
rclb
in
inc
rcrb
test
rclb
fnstenv
cmp
dec
and
xor
xchg
push
dec
lods
lods
add
ljmp
rcr
lahf
cs
test
out
push
inc
mov
fcomp
fiaddl
inc
jg
imul
fisubrl
xor
ja
in
pusha
inc
in
fisubrl
cs
jl
int3
inc
in
jl
mov
inc
adc
lods
push
push
mov
and
in
inc
cld
inc
inc
pop
jbe
or
and
iret
cs
loopne
inc
cld
jo
fiaddl
jo
mov
and
inc
cwtl
adc
adc
mov
outsl
push
add
cwtl
inc
jg
test
inc
hlt
add
in
andb
dec
inc
hlt
lahf
sahf
or
pop
call
imul
inc
call
jle
adc
xchg
movsb
mov
sbb
dec
lahf
xchg
lahf
or
cmp
hlt
add
enter
cmp
mov
xor
inc
push
push
lods
sub
ja
pop
enter
test
xchg
test
jae
iret
enter
pop
jb
pop
enter
pop
mov
and
divl
xchg
push
mov
inc
outsl
test
or
aad
mov
push
pop
addr16
dec
movsb
pop
enter
mov
jae
pop
in
cld
fidivl
push
mov
xchg
and
cmp
sbbl
mov
insl
outsl
aas
cmp
xchg
pop
mov
mov
mov
pushf
or
or
fbld
fiaddl
ds
shr
cld
or
pop
and
popl
xchg
dec
dec
cmpl
mov
cltd
pusha
insl
addr16
les
adc
pushf
jo
bound
mov
insl
or
xlat
mov
test
push
push
fndisi(8087
dec
ret
push
lods
push
cmp
xor
xchg
or
inc
nop
or
mov
outsl
ds
outsl
aaa
or
or
mov
inc
dec
daa
push
xor
loop
inc
and
cmp
push
jb
xor
jb
push
sub
lahf
bnd
add
daa
push
adc
sahf
cmpsl
fldcw
jecxz
jmp
mov
mov
loopne
ss
push
pop
mov
repz
cmpsl
cwtl
jl
or
jmp
adc
call
push
out
mov
push
mov
ds
shl
repz
push
cld
in
push
out
lcall
js
js
pushf
pop
outsl
or
pop
jecxz
push
rclb
or
iret
insb
les
add
cmc
push
cmp
test
in
add
enter
popa
ret
call
mov
fdivp
mov
out
testb
mov
imul
and
add
fcmovb
das
jl
jg
dec
xchg
xchg
dec
dec
pop
in
in
dec
outsl
in
hlt
add
inc
shll
das
sbb
sub
xor
dec
mov
or
outsl
add
test
pop
repnz
enter
lods
xchg
pop
jb
mov
in
leave
int3
cmp
out
in
sub
xchg
cmp
adc
decl
lock
out
push
adcb
leave
mov
outsl
out
xor
fstp
xor
sahf
ss
ss
add
mov
fmull
pop
leave
mov
pop
scas
add
outsl
out
mov
xor
jae
pop
jb
mov
movsb
call
xchg
popa
fildll
loop
orl
es
mov
aaa
shr
test
mov
enter
repz
push
lock
je
dec
xchg
mov
xlat
mov
inc
ja
pushl
add
add
sub
sub
adc
inc
dec
sub
dec
xchg
fildll
scas
fs
and
fisubrs
or
inc
or
xor
decl
or
xchg
and
fmuls
fidivs
lock
scas
add
sbb
and
add
add
fdivl
pusha
add
jo
int
add
cmpsl
in
push
mov
ss
out
fdiv
fisubrs
xchg
nop
sub
jmp
hlt
daa
cmp
add
rorb
loopne
xor
pop
pop
push
sbb
mov
lock
sub
jg
inc
mov
push
sub
mov
mov
jnp
ret
nop
pop
sbb
jecxz
mov
repnz
or
ja
in
imull
jbe
dec
sbb
jbe
mov
in
outsl
push
adc
outsl
jg
test
xchg
daa
daa
ret
testl
push
cmp
icebp
push
loopne
out
scas
mov
push
lods
cmpsl
cmp
js
or
int3
popa
ficoml
out
mov
sub
test
pop
fs
add
adcb
out
push
xlat
xor
xchg
dec
outsb
mov
lds
shrb
sbb
xchg
dec
sbb
dec
or
int3
out
push
xor
dec
adc
or
xor
pop
inc
out
add
sarb
mov
outsl
and
ss
repz
leave
add
pushf
add
push
pop
call
or
sbb
pop
or
aaa
mov
aad
cmpsb
xchg
aaa
cmp
push
lds
or
jmp
je
add
scas
mov
cmpsl
mov
pushf
enter
mov
bnd
jecxz
pusha
cwtl
pusha
sub
daa
pop
add
pop
icebp
ja
scas
in
mov
xlat
xchg
faddl
test
jb
mov
leave
add
nop
mov
push
sub
repnz
push
clc
das
outsl
add
push
sub
or
dec
adc
mov
pop
nop
repnz
clc
inc
ds
repnz
and
test
fidivs
test
pusha
pop
leave
lds
insb
insl
and
xlat
add
jo
sahf
iret
mov
aad
daa
lock
mov
or
je
push
jb
add
outsl
mov
and
les
cmp
push
in
lcall
inc
and
hlt
mov
je
jns
inc
xchg
or
mov
aas
add
or
hlt
cmpsl
or
dec
jno
xor
aas
or
dec
daa
in
hlt
mov
push
hlt
dec
sub
outsl
add
mov
in
movsl
dec
iret
test
or
test
in
xchg
add
push
xor
add
add
ret
cmc
incl
cmc
pop
scas
add
rorl
outsl
adc
jbe
pop
leave
add
sbb
lahf
mov
dec
lock
cmp
repz
in
cmp
out
or
add
push
enter
out
jno
sub
addr16
subl
imul
sbb
xor
aaa
sbb
mov
sub
addr16
dec
not
nop
lods
lret
imull
xor
mov
not
fwait
jl
xchg
cwtl
testl
xchg
mov
enter
pop
fsubr
mov
out
pop
enter
clc
inc
testb
cmp
lahf
shlb
iret
mov
ja
in
push
js
in
sub
ja
or
fsubr
jne
daa
addr16
sbb
inc
inc
xor
push
ret
ja
mov
imul
ljmp
fldcw
mov
dec
push
push
jb
jae
lcall
xchg
sarl
xchg
mov
out
cmp
jne
shl
sbb
inc
imul
arpl
cmpsl
stc
or
int
negb
mov
mov
rolb
lea
dec
imul
sahf
xchg
mov
out
imull
sahf
lock
out
out
push
xchg
outsb
push
xchg
jl
xchg
gs
enter
into
idiv
and
sahf
out
lcall
cmp
sarl
and
sahf
cmpsl
stc
xor
sahf
out
out
adc
into
cmp
repz
sets
cmpsl
stc
pop
cltd
dec
mov
and
pop
nop
mov
sti
idivl
out
fwait
dec
je
fwait
jbe
sahf
out
pushf
push
outsb
xchg
rcrb
popf
out
ds
rcll
lock
out
cmp
hlt
xchg
lahf
jecxz
mov
pop
ret
add
out
xchg
mov
push
jns
jns
mov
sti
aaa
mov
ds
rep
pop
jmp
movsl
jae
ss
out
cli
push
int
fucom
int3
adc
mov
roll
test
cmp
fwait
ret
pop
stos
out
out
andb
iret
repz
mov
mov
lcall
pop
fwait
iret
repz
mov
scas
cmp
test
daa
mov
mov
sub
mov
shrl
jecxz
mov
mov
repz
out
mov
mov
repz
inc
outsb
cltd
ljmp
repz
lret
mov
int
loop
mov
repz
out
aad
mov
lcall
mov
sbb
mov
pop
push
rcrb
jl
into
cld
dec
ret
ret
dec
repz
pop
shl
les
sahf
cmpsl
stc
cmp
cmp
jge
jmp
iret
sarl
jno
divl
jl
out
insl
mov
jns
iret
shll
leave
push
mov
inc
lret
lret
in
int3
jl
iret
sarl
pop
int
inc
into
jns
iret
shll
pop
iret
adc
daa
rclb
loopne
rcl
jl
cmpsl
dec
je
adc
pop
out
ds
stos
inc
aam
test
mulb
aad
rolb
sub
aas
pushf
lahf
out
ds
aaa
xchg
into
push
fnstcw
out
repz
xchg
loop
push
fiaddl
out
ds
xchg
jecxz
fistl
int
fmull
out
cmp
aaa
fisubs
in
fisttps
jns
pop
mov
xor
jo
int
imul
pop
jecxz
int
repz
cli
inc
in
out
xor
jmp
jmp
in
push
jno
in
fldcw
out
and
lcall
fnstcw
mov
cli
mov
push
add
stc
int
fld
in
jae
imul
cmp
xor
dec
push
add
das
fmuls
out
mov
nopl
inc
push
aas
xor
sub
aam
aas
test
pop
mov
das
jae
lods
incl
inc
mov
xlat
mov
leave
mov
popa
int3
aaa
mov
in
inc
pop
mov
mov
jp
sti
jnp
inc
cmp
mov
repnz
rorb
and
test
inc
jmp
add
pop
xor
int3
aad
add
xchg
rcrb
cmp
mov
pop
lds
xchg
dec
pop
fwait
in
inc
push
pop
mov
adc
mov
mov
mov
lahf
loop
loop
xor
icebp
inc
sti
mov
jbe
inc
inc
pop
je
shrb
pop
inc
das
mov
inc
push
and
and
push
inc
sub
shl
and
ret
xor
fimull
xchg
dec
dec
data16
mov
in
aad
cmc
ficoml
outsl
ss
jo
daa
mov
incl
fs
push
add
test
jae
push
daa
test
fcoml
add
mov
jns
in
xorl
jno
cmp
adc
jbe
faddl
inc
lock
shll
leave
test
add
add
sub
sub
dec
jo
jns
inc
push
push
push
pop
cmpsl
nop
sbb
ret
jl
mov
xor
add
out
adc
scas
movsb
loopne
mov
dec
sbbl
jmp
dec
pop
mov
leave
addr16
pusha
inc
pusha
out
cmp
cmp
push
out
loope
xchg
xchg
add
leave
and
mov
mov
out
mov
ljmp
popl
mov
scas
jns
aas
orl
mov
mov
jg
adcb
fildl
iret
frstor
lods
and
js
add
daa
pop
insl
xchg
mov
ja
inc
mov
in
mov
sbb
push
roll
addr16
nop
aaa
fdivrs
test
and
xchg
dec
cs
push
out
in
mov
and
adc
in
ds
add
jo
mov
cmpsl
pop
enter
and
scas
hlt
xlat
je
ret
mov
push
movb
mov
je
in
add
testl
xchg
dec
pop
inc
xchg
xchg
jl
stos
inc
adcb
je
mov
pushf
cmp
push
cs
xchg
mov
or
xchg
adc
inc
andb
inc
inc
testl
fnsave
daa
cmp
loope
je
mov
xor
test
mov
pushf
pop
into
out
shlb
inc
aam
add
dec
jg
leave
mov
ja
or
dec
adcl
xlat
fldl
test
add
xchg
jne
jl
mov
xchg
pop
lahf
scas
push
mov
pop
scas
inc
inc
das
mov
sub
repnz
adc
add
iret
into
add
loopne
jmp
addl
out
mov
fisubl
push
xor
mov
leave
and
bound
mov
sbb
addr16
enter
repz
and
scas
dec
jne
mov
dec
push
pop
mov
cld
or
or
or
popw
inc
inc
push
insb
push
cmp
xchg
scas
pop
mov
mov
mov
movsb
fnstsw
mov
in
cmp
ja
cmc
xchg
in
daa
sbb
mov
and
sub
inc
mov
leave
dec
adc
arpl
dec
jae
orl
scas
paddusw
pop
mov
mov
cmpsl
nop
out
pop
ficomps
mov
add
jb
enter
push
jne
jns
add
push
out
sahf
out
or
insb
or
sahf
ja
test
adc
push
sbb
mov
les
iret
daa
cmp
cmpsb
lods
adc
nop
mov
addr16
cmp
add
xor
and
orl
dec
leave
cmpsl
cmp
and
mov
cltd
nop
movsb
nop
mov
mov
jb
nop
nop
aam
loope
and
sbb
dec
or
adc
inc
into
dec
adc
sub
outsl
pop
dec
xchg
aas
dec
adc
and
test
sbb
rcr
cwtl
push
daa
mov
leave
xchg
cmc
cli
inc
add
roll
mov
pusha
iret
adc
xor
je
cmpsl
out
aaa
jb
out
daa
xchg
push
leave
dec
js
add
add
dec
jno
aas
push
add
mov
filds
pop
fcomip
or
repz
mov
push
mov
popf
xchg
or
pop
addb
outsb
dec
jns
popf
or
mov
addr16
shlb
adc
daa
cmp
adc
in
aas
and
xchg
pop
push
and
add
cmp
ja
xchg
push
xchg
inc
mov
fs
jb
adcb
mov
fcoml
ss
jcxz
leave
and
loop
fwait
adcb
adc
push
aaa
and
cmp
xchg
sub
sbb
add
fildll
pop
fistl
adc
jo
jns
jg
adcb
insb
mov
pop
das
mov
xchg
or
in
sbb
inc
cmpsb
xchg
xchg
sbb
add
outsl
sbb
in
sahf
pop
cmpsb
inc
outsb
add
rcrl
insb
sbb
cmp
mov
push
scas
push
add
movsb
jnp
push
xlat
xchg
push
mov
movsb
lea
cmp
lock
add
cmpsl
mov
xor
daa
push
xchg
or
or
aaa
clc
cmp
ja
adc
mov
push
cmp
sbb
cmc
mov
dec
push
daa
sbb
mov
pop
cmp
inc
adcb
adc
add
test
aaa
cmp
or
mov
test
scas
xchg
leave
xchg
mov
ret
add
ret
leave
imul
out
iret
enter
cld
ja
xchg
add
inc
pop
and
xchg
cmp
mov
addr16
pop
cmp
add
cld
sbb
mov
fnsave
lds
cmp
push
enter
pop
sbb
xor
sbb
push
inc
cmp
fcompl
sub
incl
push
call
sbb
push
pop
cwtl
gs
jo
out
sahf
out
add
cmp
pushf
push
test
daa
pop
leave
push
jecxz
cwtl
sbb
nop
inc
fistpll
cmp
push
scas
cmp
jno
daa
adc
jns
xchg
push
lods
mov
xlat
add
pop
jle
mov
ja
adc
movsb
ja
pop
outsb
jmp
xor
enter
push
mov
pop
pop
lcall
pop
inc
lcall
das
addr16
pop
mov
mov
xchg
pushf
pop
and
into
mov
repz
push
fwait
xchg
fwait
adc
push
inc
fwait
call
imul
add
pop
mov
cs
xchg
pop
and
aam
add
pushf
sub
scas
sub
scas
in
mov
scas
sub
and
cltd
loopne
cmpsb
popf
iret
or
adc
mov
fdivl
popf
fbld
and
push
add
mov
movl
mov
iret
je
in
pop
jo
iret
add
cmp
vmwrite
and
and
and
mov
and
test
push
and
and
inc
and
sahf
or
mov
outsl
push
movsl
push
out
insb
outsl
je
pavgb
aas
push
lahf
iret
jae
cmp
add
repnz
stos
mov
and
dec
or
sbb
inc
das
cmpsl
in
jl
das
inc
xchg
das
insb
and
cs
cmpsl
outsl
jl
pushf
xorl
push
ja
repnz
adc
sbb
jmp
lahf
repnz
aas
lahf
dec
lahf
push
lahf
repnz
xchg
xlat
out
cmpsl
jmp
aad
fisttps
adc
and
mov
mov
ja
jae
mov
push
daa
push
jns
jmp
pop
mov
add
in
in
popf
das
cmpsl
push
add
cmp
imul
mov
mov
sub
xchg
push
push
pop
les
sarb
mov
jnp
mov
mov
jb
inc
rcll
js
loopne
mov
mov
mov
ja
mov
leave
add
or
orb
scas
shrb
cmp
cs
push
push
mov
adcb
inc
aaa
sbb
pop
mov
pop
jb
xchg
inc
dec
fildll
push
jb
sub
sub
aas
aaa
lahf
xchg
scas
cmp
daa
lahf
lods
pop
mov
in
cmpsl
enter
lahf
in
and
or
pop
dec
sub
xchg
fisttps
movsb
push
movsb
xchg
out
shll
push
add
daa
fstpl
push
pushf
lret
lods
cmp
cmpsl
xchg
add
out
or
lret
fbstp
dec
aad
loopne
dec
push
mov
pop
or
or
mov
jns
or
enter
out
xor
hlt
ss
movsl
and
sub
and
shrb
push
fstpl
push
mov
cwtl
out
insb
daa
mov
in
orb
addr16
pop
ljmp
or
in
nopl
cmp
iret
pop
dec
pushf
jecxz
repz
cmpsb
jmp
jbe
test
jg
add
out
fistps
out
pop
scas
add
lds
iret
jae
jns
fldt
out
icebp
cmpsl
mov
das
pop
cmpsl
push
or
cmp
enter
push
sub
pop
iret
leave
repz
dec
adc
xchg
cmpsl
adc
sub
mov
push
xchg
push
mull
cs
push
xchg
data16
sub
fmul
out
sub
ss
push
push
pop
push
outsl
gs
out
pop
insl
cs
add
cmp
or
mov
mov
ja
dec
inc
or
stc
push
xchg
cs
dec
fwait
test
test
daa
js
test
test
push
xchg
mov
and
in
jbe
xchg
test
adc
add
cs
and
bswap
cs
sti
inc
fcoml
add
dec
xchg
das
scas
pop
ficoms
out
out
divb
loope
repnz
das
sbb
and
sub
iret
in
insl
testb
dec
andnps
mov
and
push
xlat
loope
adc
xor
pop
sbb
bswap
jg
jmp
dec
outsl
daa
repz
sti
stos
pop
add
or
cwtl
jb
pop
add
push
stos
adc
dec
dec
add
jp
mov
mov
in
xor
jae
into
lods
mov
add
and
xchg
xchg
and
sahf
fwait
xchg
add
push
lods
adc
jle
xchg
lods
pop
lods
ljmp
shlb
push
lods
cmp
popa
lods
fs
mov
icebp
incl
pushl
xor
test
xor
test
test
inc
scas
xchg
scas
lods
inc
stos
movsl
sbb
mov
call
loopne
pusha
addr16
out
lods
in
xchg
xor
and
xor
inc
dec
repnz
leave
add
add
mov
ret
push
daa
into
iret
add
inc
repnz
mov
sbb
clc
xchg
scas
push
jo
pop
xchg
cmp
ja
icebp
in
jne
jge
scas
jmp
andl
outsl
mov
jbe
roll
rcr
setb
loopne
iret
cs
jg
popl
scas
push
scas
xlat
popf
out
pop
push
push
add
xchg
cs
out
jns
add
in
dec
sahf
or
or
jns
out
or
or
sahf
push
jle
adc
xchg
adc
jns
unpckhps
scas
push
mov
clc
jl
mov
inc
xlat
out
cmp
loope
mov
push
add
daa
pushf
das
pop
mov
cvtpi2ps
leave
push
mov
jmp
mov
lods
iret
into
lcall
lock
pmulhuw
pop
das
pop
mov
pop
mov
pushf
pop
mov
addr16
inc
or
leave
mov
inc
aaa
xchg
insl
and
mov
fisubrs
push
adc
ss
aad
add
insb
aaa
xchg
mov
push
mov
js
shll
xorb
fdivl
xchg
cld
lods
and
mov
mov
pop
jo
cmpsl
int
aad
dec
in
in
or
in
in
int
out
or
prefetch
xchg
out
syscall
ss
inc
cmp
push
aas
jnp
pop
repnz
adc
add
pop
or
cmp
into
push
movsb
or
mov
inc
adc
cmp
cmp
popa
inc
test
imull
mov
sbb
popl
push
subps
insb
daa
add
pushf
pushf
test
jo
push
or
cmp
in
cmp
pop
cmp
stos
mov
sub
xchg
ret
xorb
aas
scas
dec
incb
scas
mov
fisubrl
cmp
cmp
nop
pop
pop
lds
fisttps
mov
mov
xchg
out
inc
push
add
aaa
mov
push
add
out
mov
push
iret
jae
mov
orl
xchg
or
add
mov
enter
add
repz
in
mov
push
add
add
cmp
dec
pop
pop
or
repz
or
subb
or
cmp
sbb
or
daa
aam
pop
xchg
add
fdivl
rorb
fisubs
adc
testl
or
fs
je
cmp
fnsave
xchg
sub
dec
ss
xchg
ds
jmp
outsb
iret
inc
lcall
mov
out
jmp
nop
aaa
pop
inc
incl
fnstsw
jns
cmp
cmp
mov
cmp
imul
mov
scas
mov
and
int3
invd
adc
push
mov
les
imulb
ds
pop
iret
pop
xor
insl
addr16
mov
mov
ja,pt
mov
lret
dec
sahf
sbbl
fimull
add
push
cmp
and
add
push
push
daa
clc
ds
insl
mov
notw
ja
pcmpgtd
jl
outsb
rorb
add
push
mov
out
jns
or
xor
stos
scas
add
sahf
fsub
mov
mov
in
outsl
cld
sbb
add
mov
push
lods
aas
in
aas
fs
bound
xor
leave
push
incl
inc
inc
jle
add
cmpsl
or
add
inc
dec
popf
xchg
out
push
rcpps
arpl
fisttpll
out
add
jnp
and
adc
cwtl
sbb
aas
stos
mov
mov
cmpsl
aas
in
fistps
inc
sbb
aas
pop
sbb
xchg
movsb
movsb
nop
fwait
pop
mov
inc
scas
mov
dec
sbb
xor
or
inc
aas
in
xor
adc
filds
leave
enter
push
pop
pop
and
jb
outsb
inc
and
xchg
incl
and
jmp
movsl
mov
btc
in
jbe
enter
jmp
pop
rcr
lahf
inc
and
addb
jg
mov
inc
or
dec
add
shlb
popf
subl
add
jg
add
mov
pop
inc
ja
andb
mov
sahf
jo
lock
pop
leave
and
add
xchg
mov
sahf
pop
add
js
cmp
addr16
xor
imul
movsl
ficoml
ja
ja
dec
dec
cs
jmp
bound
mov
ss
mov
jg
mov
rcll
push
jb
pop
jb
mov
pop
call
xchg
out
psraw
jmp
rclb
mov
in
in
xor
xchg
pop
and
add
sbbl
lsl
mov
lods
cmpsl
aad
dec
dec
mov
das
inc
call
es
cwtl
inc
decl
push
mov
inc
push
fsubrl
je
jl
xchg
xchg
add
add
imul
pop
mov
mov
jns
aam
or
ljmp
push
cmc
pcmpeqb
pushf
pop
cmp
or
outsl
adc
inc
pop
xchg
ds
add
popf
cmp
dec
das
push
lret
mov
daa
pop
data16
loop
ja
das
movd
aas
or
fildl
dec
rcl
mov
repnz
lret
push
shlb
rorl
push
xlat
rcll
shl
cmp
shr
leave
dec
push
daa
push
add
fbstp
mov
cmpsl
mov
scas
xchg
push
lahf
out
fisubrs
pop
mov
dec
je,pt
mov
rcll
pop
jmp
icebp
fisttps
and
ficompl
add
outsl
inc
ret
mov
scas
pop
xchg
cmp
test
bswap
dec
out
mov
mov
ja
negl
pop
cltd
popf
sbb
ret
dec
sbb
testl
enter
dec
loopne
addr16
js
sets
mov
aaa
mov
mov
xchg
cmp
fldt
fdivrl
les
push
pop
add
pop
push
aas
push
mov
xor
iret
les
jns
xchg
dec
push
mulps
add
jb
in
imul
pushf
movsb
in
mov
lahf
mov
iret
push
rorb
enter
addr16
mov
enter
sub
pop
rorl
xor
and
push
ja
in
negb
xlat
gs
jne
jb
sarl
mov
test
pop
ja
fcmovne
leave
lret
rcr
pavgw
and
dec
dec
adc
pop
andb
dec
movhps
xchg
in
dec
jb
pop
xchg
dec
fcmove
leave
in
push
mulps
xchg
xchg
xchg
mov
movsb
mov
pop
lods
mov
repnz
mov
daa
pop
leave
lock
mov
insl
sub
dec
addr16
vphaddbd
mov
ljmp
outsb
daa
pop
sub
pop
pop
and
dec
gs
mov
cwtl
incl
push
xchg
push
mov
mov
out
add
enter
or
enter
dec
adc
push
movsl
xchg
mov
dec
push
jg
push
add
jns
leave
pop
clts
and
mov
xlat
or
pop
shr
scas
pushf
xsha1
cmpsb
dec
push
push
fsubrl
cwtl
dec
loop
in
pmuludq
xchg
daa
mov
les
leave
xchg
xor
movl
jae
push
in
in
push
mov
mov
dec
jbe
in
pop
dec
sub
js
cmp
mov
add
stos
out
and
push
add
add
enter
lret
push
mov
test
lret
mov
ja
in
ja
out
fmull
xchg
sahf
pop
das
ror
jae
jg
movswl
aas
out
in
aad
loopne
idivb
rorl
lret
out
push
push
or
in
in
xor
jnp
sahf
out
adc
adc
outsb
jns
into
test
xor
or
push
pop
lcall
int
pmullw
ja
mov
daa
xchg
shll
and
jne
in
xchg
sub
rdpmc
int3
fildl
cmp
leave
arpl
pop
int3
lahf
rclb
dec
outsl
outsl
mov
aas
pop
movsb
mov
mov
int
fldt
out
das
in
mov
aas
lds
xor
int3
test
jb
aas
aas
sbb
adc
fstpt
icebp
andps
pop
mov
clc
xchg
shrb
fcoml
mov
mov
mov
outsl
ret
outsb
fucom
jns
add
lar
pop
jns
out
fimull
loop
ljmp
cli
lar
into
or
sbb
xor
mov
insb
push
call
adc
into
pop
hlt
mov
outsl
fidivs
push
add
push
add
iret
fimull
sar
sub
outsl
fnstsw
jl
push
inc
invd
call
and
nop
or
unpckhps
ss
jge
jns
push
xlat
inc
push
fisttps
jle
ja
iret
push
iret
push
dec
xchg
icebp
and
call
xor
lahf
pushf
iret
movsb
iret
pop
cmp
inc
lfs
into
int
pop
les
mov
pop
adc
fimuls
mov
lcall
pop
rorb
mov
sahf
pushf
pop
pop
shlb
pop
inc
addr16
sar
jbe
jb
add
ud1
inc
out
out
add
mov
in
mov
int
daa
shrb
jae
negl
push
lahf
rclb
inc
mov
rcr
xlat
or
lea
sti
rolb
rcll
rorl
movsb
sbb
shr
cs
daa
in
and
nop
push
inc
rcr
adc
pop
sbb
daa
inc
mov
push
adc
imul
or
push
pushf
aaa
je,pn
ss
pop
scas
lods
cmp
iret
repnz
fwait
loop
std
or
aas
adc
add
in
push
sub
jg
repz
push
or
push
or
imul
out
sahf
out
push
orl
jns
xchg
adc
sahf
out
mov
out
sahf
out
fsts
in
lret
out
sahf
out
sbb
sbb
jl
sbb
push
adc
adc
adc
pushf
pushf
pushf
pushf
adc
push
or
ss
pop
or
sbb
cmp
pop
shl
mov
push
add
push
inc
add
xchg
nop
jmp
jl
dec
push
daa
mov
nop
fdiv
jae
popf
xchg
out
mov
mov
fwait
aaa
bt
loopne
and
mov
iret
adc
out
in
daa
or
and
or
repnz
rcr
repnz
pop
icebp
outsl
or
aas
test
inc
jg
mov
push
add
aam
or
or
inc
aam
addr16
xchg
mov
jmp
inc
ffree
aam
in
and
aad
in
and
int
fwait
xchg
ja
ja
daa
daa
pop
outsl
ja
pop
xchg
ficoml
pop
xchg
mov
aad
pop
rorl
xchg
or
pop
std
xchg
sub
and
call
xchg
inc
dec
xlat
and
xlat
pop
push
testl
clc
or
loop
daa
xor
lahf
mov
push
lahf
fbld
lfs
in
push
pop
les
push
or
repz
in
or
outsb
repnz
or
fnstcw
xchg
or
adc
in
bound
xlat
cmpsl
daa
xlat
add
xlat
aaa
sbb
ja
cmp
jo
adc
sahf
add
xchg
add
fs
xlat
pop
and
or
push
ja
mul
pusha
push
xchg
push
stos
sar
xchg
in
in
or
aam
in
neg
jbe
in
pmuludq
push
setle
into
lock
decl
pop
or
gs
mov
cmpsl
fdivs
pop
add
add
fs
daa
mov
push
cmpsl
pop
push
push
bound
mov
push
xchg
push
jb
add
orb
dec
xchg
lods
mov
fdivl
sub
divb
mul
incb
push
jg
fldcw
push
imul
aas
arpl
addr16
cmp
push
rorb
fcmovu
jmp
xchg
flds
cmp
test
fs
pushf
or
fidivrl
nop
pop
inc
add
test
lea
loop
push
pop
scas
mov
pop
cs
xor
gs
leave
mov
or
gs
aam
data16
es
xor
mov
pop
or
fcmovnu
pushl
out
int3
sahf
or
push
fisttpl
push
out
lea
jg
fldt
in
push
push
cmp
add
add
cmp
or
or
cmp
xchg
push
addps
push
pusha
fucomi
and
adc
xorl
sub
mov
jmp
inc
jb
leave
scas
mov
xchg
pushf
ljmp
addr16
mov
dec
fdivl
sub
push
jg
fmull
add
jns
add
push
mov
addr16
insb
or
addr16
mov
fcompl
mov
lret
rcrl
push
pushf
pushf
fdivrl
in
cmc
mov
sahf
pushf
incl
mov
daa
and
sub
dec
and
das
push
fstpl
push
xorl
test
mov
aas
push
sbb
lar
inc
out
fstpl
syscall
and
fstpl
bswap
jnp
sub
or
push
add
cvttps2pi
in
mov
decl
enter
mov
pop
adcb
and
sahf
out
push
pop
xchg
add
lcall
imul
dec
test
paddusw
enter
scas
repz
scas
push
js
pop
leave
inc
iret
fildll
push
into
mov
pop
daa
cmp
cmpl
dec
inc
jle
xchg
imul
or
adc
jb
push
cmp
adcb
dec
push
cmpsl
pop
pop
and
push
hlt
jp
xchg
scas
rolb
xchg
dec
imul
push
lock
hlt
and
inc
dec
adc
loopne
addr16
jb
leave
push
dec
hlt
pop
es
mov
cmc
rcl
mov
int
mov
fnstsw
leave
fimuls
add
xchg
out
dec
sahf
out
push
add
jb
rorb
add
add
imull
stos
jno
out
push
loope
push
push
push
repz
je
push
adc
leave
addr16
adc
es
jo
fcmovne
xchg
adc
push
loope
ja
adc
stos
add
xchg
jns
fisttpl
pop
movq
fucom
lods
clts
mov
pop
iret
leave
repz
int
ds
and
jo
clc
loope
int
stos
mov
adc
divb
gs
pusha
punpckhbw
pushl
jno
loop
js
cmpb
xchg
out
and
sub
or
pop
fsub
xor
inc
out
sahf
out
adc
push
adc
movups
nop
dec
dec
dec
outsb
pop
cwtl
mov
in
sbb
je
out
enter
and
ja
fsub
push
and
lock
test
fmull
add
jns
out
movaps
sub
sub
repz
and
sub
xor
cmp
inc
jne
mov
jecxz
xor
insl
push
jecxz
sub
xchg
jae
leave
sarl
xchg
mov
sbb
push
outsl
xor
xchg
outsl
outsl
push
daa
frstor
push
xchg
jecxz
push
ja
je
push
and
jo
mov
leave
rcl
ftst
inc
repnz
jmp
das
cmp
fistl
aas
add
repnz
lahf
push
add
repnz
push
js
pop
xchg
out
mov
xchg
repz
sahf
das
cmpsb
dec
scas
movzbl
ret
push
out
out
adc
iret
repz
adc
adc
in
sahf
out
adc
adc
adc
sub
cmp
inc
sahf
out
sahf
sbb
push
sbb
sahf
out
sbb
jne
out
sahf
out
push
mov
xchg
sahf
out
sahf
and
jns
out
and
jp
out
fbld
ds
in
xor
mov
in
aas
or
fsts
pop
out
daa
out
das
out
aaa
out
aas
out
dec
out
iret
repz
pop
push
and
jo
iret
repz
js
sbbb
cmp
xrelease
repz
sbb
cmp
repz
mov
cmp
repz
adc
adc
roll
jg
xchg
jl
into
mov
jno
stc
enter
aas
and
inc
out
jns
jns
out
out
out
out
pop
jns
insl
out
out
or
mov
inc
mov
mov
int3
out
jb
enter
out
out
out
lea
out
call
out
sahf
sbb
sub
xor
jns
out
inc
sbb
push
out
sahf
out
popa
sbb
jns
js
test
mov
das
mov
mov
jbe
iret
iret
out
fimull
loop
add
dec
cmc
outsl
add
out
sahf
mov
push
adc
adc
mov
adc
adc
sub
xor
repz
adc
or
cmp
dec
or
pop
or
repz
or
jns
cmp
repz
test
cmp
xchg
mov
out
mov
mov
jb
dec
jne
loope
jmp
add
cs
add
sahf
pop
inc
loopne
ljmp
jns
or
and
repnz
cmp
or
jne
ljmp
imul
and
fsubrl
fmull
movsb
aas
lods
pop
mov
mov
les
int3
aam
out
cmp
in
hlt
pxor
or
adc
fmull
daa
sub
xor
das
inc
pushf
pushf
pushf
pushf
dec
push
pop
pusha
iret
repz
pushf
push
xchg
jmp
jmp
mov
addr16
mov
cmp
push
add
xlat
pop
fistps
add
pop
das
out
in
pop
or
adc
or
push
scas
movaps
in
in
push
push
xor
dec
inc
push
adc
js
jns
push
mulps
lahf
adc
mov
cmp
xchg
mov
mov
repz
add
mov
in
or
out
in
sti
outsb
or
in
repnz
pop
sbb
daa
push
rdmsr
cmp
in
jbe
cmovs
push
adc
iret
leave
repz
je
jg
leave
repz
mov
xchg
mov
cmp
mov
shl
cmp
int3
push
xlat
loop
inc
ds
leave
in
clc
and
out
push
pushf
pushf
pushf
fmull
sbb
cmp
push
pop
data16
dec
and
jo
cltd
xchg
xchg
xchg
pop
mov
out
push
add
in
repz
outsb
jecxz
out
cmp
jmp
or
decl
or
leave
leave
enter
pop
pop
cmp
leave
leave
daa
das
aaa
adc
xchg
out
popf
inc
pop
dec
adc
sahf
pop
pop
nopl
fucom
jns
ja
sbb
dec
sbb
lock
jmp
aas
stos
pop
pinsrw
cmp
int3
fsubp
xchg
xor
out
imul
aas
out
push
call
adc
das
sbb
pop
movsb
mov
aas
pop
cmovp
push
push
add
bound
jnp
fists
out
mov
or
mov
push
aam
pop
mov
fsubrp
ljmp
cmp
rep
movhps
adc
adc
repz
cmp
repz
dec
xor
sbb
inc
sbb
repz
dec
sbb
jbe
mov
jg
mov
mov
fistl
stos
subps
imul
je
jg
sub
sub
fdivl
push
sub
push
sub
cmp
repz
shll
fdivp
cmp
xor
xor
xor
in
jns
in
xor
add
ss
adc
sbb
lahf
push
cmp
push
cmp
in
ds
repz
ds
aas
add
inc
adc
mov
iret
repz
xor
dec
inc
ja
popf
cmp
arpl
outsb
dec
jns
nop
aad
sahf
adc
add
repz
lock
pshufw
imul
jnp
mov
scas
add
mov
pmaxub
repz
sub
repz
ds
hlt
cmp
fwait
hlt
pop
sbb
or
or
inc
pop
dec
or
jns
data16
adc
jns
out
adc
cmp
movsl
push
adc
adc
leave
rcrl
fsub
jp
jb
decl
cmc
das
pop
cmc
xchg
out
popw
and
das
push
and
mov
daa
mov
pop
data16
cmp
ss
pop
es
jle
cmc
and
iret
mov
mov
mov
ja
loop
iret
cmp
push
add
push
out
sbb
pop
add
or
leave
repz
sahf
or
cmp
inc
iret
repz
dec
or
or
repz
mov
repnz
push
adc
unpckhps
mov
mov
cmp
sbb
loopne
sbb
xchg
out
jmp
testb
pop
iret
leave
in
ss
pop
pop
nop
and
cmp
repz
and
and
ja
mov
dec
pop
pop
cs
fs
sahf
out
sub
jp
rcll
push
sub
cmpxchg
jns
neg
xor
jg
mov
testl
sahf
testl
and
sub
xor
aas
inc
clc
jg
sbb
cmp
lahf
push
clc
out
cwtl
addl
mov
in
mov
mov
dec
sahf
out
sysret
in
enter
or
or
stc
and
ficoms
push
or
pop
cmp
pop
and
xor
adc
adc
jae
dec
push
adc
adc
outsb
push
jnp
xchg
cmp
sbb
pop
test
sbb
pop
stc
push
pop
loop
lods
sub
cli
iret
add
out
and
out
adc
push
add
punpckhwd
andl
and
sbb
sbbl
mov
push
lahf
popa
push
pop
mov
cli
push
int
cmp
add
mov
leave
cwtl
mov
mov
or
or
or
or
in
cli
adc
add
pop
add
push
sti
outsl
repz
repnz
push
adc
adc
jns
leave
cmp
push
push
push
pop
outsl
repz
jbe
pcmpeqw
sbb
leave
lea
pop
xchg
shrb
sti
outsl
js
repnz
cld
sti
and
lret
pop
paddb
cmp
in
push
pop
pop
wbinvd
daa
mov
cld
aas
aas
push
jbe
cmp
or
aas
cmp
in
gs
push
adc
push
jbe
cmp
adc
adc
jns
out
sbb
jns
sbb
cmp
repz
push
push
ficomps
out
bswap
repz
and
cld
inc
dec
and
pop
std
sub
cmpsb
fisubrs
xor
std
sbb
inc
jle
pop
std
push
push
out
std
jns
ja
dec
test
or
in
movsl
or
repz
rorl
push
mov
pushf
cmp
rcll
fsub
adc
leave
repnz
das
or
pop
iret
cmp
push
sbb
adc
push
repz
repz
sbb
sbb
inc
dec
push
pop
push
jns
mov
fisttps
out
sahf
out
and
and
sahf
movsb
scas
btc
and
lahf
imull
or
ret
incl
xchg
xchg
jmp
inc
mov
lcall
jmp
cmp
push
das
imul
daa
add
aam
mov
cltd
insl
daa
daa
daa
cltd
movsb
scas
pop
sahf
fcmovne
rorl
add
or
jns
or
syscall
push
pop
inc
pushf
or
icebp
decl
fsubrl
shll
das
adc
xor
aas
pushf
cmp
repz
push
pusha
repz
repz
repz
cmp
into
sbb
in
sarl
out
cli
cs
add
adc
sbb
pop
cs
xchg
pop
sbbl
cmp
iret
and
lods
es
daa
ret
sub
psllq
xchg
es
das
sub
sub
in
push
das
cli
xor
popf
jl
add
cs
repz
sahf
xor
es
xor
sahf
fstpt
pop
push
sahf
jbe
jns
in
in
mov
xchg
push
cmp
cmp
inc
jmp
mov
int
rcrb
popf
cmp
lret
mov
paddsw
clc
lsl
cmp
leave
rorl
push
sbb
sahf
ja
popf
xor
cmp
inc
push
adc
out
in
adc
push
adc
ja
popf
subb
setbe
pop
mov
sbb
sahf
xchg
xchg
iret
fsub
push
repnz
cmpsl
jns
std
invd
add
adc
iret
jae
jns
insl
pop
push
and
daa
js
subl
icebp
in
sahf
sub
sahf
test
pop
push
cs
daa
iret
cmp
aas
push
xor
mov
pusha
scas
sahf
xor
mov
paddusb
cmpsb
js
jb
std
imul
fimuls
addl
ret
cmpsb
scas
pop
jg
rcl
lds
lsl
and
push
sbb
add
push
pop
jb
repnz
outsb
or
rcr
ljmp
lar
out
jne
movsl
das
setg
adc
cmp
pop
pop
mov
sub
fs
cmp
test
fstps
and
cltd
nop
inc
xor
pop
xor
je
inc
mov
or
adc
pusha
movl
mov
sbb
xor
mov
mov
inc
adc
xchg
shlb
mov
pop
add
add
aas
inc
push
sbb
inc
sub
add
pop
inc
dec
fiadds
pushw
out
add
xchg
daa
jns
out
push
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
aaa
inc
notl
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
jns
xchg
addl
pop
inc
call
outsl
mov
into
aas
xlat
pop
sbb
mov
push
and
mov
lds
cs
inc
jae
add
orl
cmpsl
sbb
jl
mov
sbb
orl
add
bound
dec
add
or
pop
pushl
loop
sbbb
add
cmc
pop
movl
add
movsb
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
inc
cltd
mov
jle
jns
add
mov
jns
out
test
jns
insb
fs
dec
inc
cmp
out
xor
sub
and
jns
out
sbb
adc
dec
repz
or
add
and
in
iret
jnp
and
push
aam
int3
sarb
mov
es
js
or
repz
out
fs
pop
push
push
dec
inc
mov
into
out
lret
adc
lock
cmp
repz
int3
mov
repz
cwtl
nop
mov
out
pop
push
stc
mov
adc
add
and
jns
cmpsl
loopne
mov
ljmp
push
pop
and
add
aas
icebp
and
pop
rcrl
inc
add
mov
int
xor
jo
lock
cmp
in
xor
push
pusha
ss
cmp
aas
sbb
stos
popa
inc
or
adc
pop
adc
cwtl
into
push
or
jo
icebp
aam
aam
iret
push
push
push
mov
sbb
dec
add
mov
out
pop
into
inc
sub
add
rcrl
mov
jg
andb
mov
lea
sub
in
pop
add
add
das
push
inc
pop
push
sbbl
insb
outsl
iret
insl
inc
sbb
xchg
pop
xchg
push
into
add
frstor
stc
pop
jg
insb
rolb
negb
stc
pop
out
insb
sbb
add
out
mov
sbb
xchg
es
pushf
es
cmp
mov
inc
push
pop
jns
cmpsl
stc
pusha
cmp
pop
and
out
out
push
mov
repz
movsl
jne
ds
neg
push
pop
adc
inc
and
push
mov
pop
or
cmp
jns
negl
dec
sbb
adc
sub
repz
and
sbb
repz
repz
or
or
add
cld
aaa
es
xor
pushf
lock
sbb
retw
out
pop
imul
movups
xor
lock
cmp
xchg
inc
push
push
out
mov
mov
out
pop
add
cmp
pop
js
jns
jns
mov
repz
iret
fwait
imulb
cmp
xchg
jnp
iret
repz
repnz
dec
das
push
add
add
psubw
loop
pop
mov
inc
ds
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
jg
fs
push
movsl
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
mov
add
int
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
inc
movsb
sbb
frstor
scas
pop
mov
adc
fisubl
push
sub
mov
cli
nop
aas
fcoms
inc
je
inc
inc
push
dec
in
decl
inc
pop
inc
jbe
push
jns
arpl
arpl
je
std
popf
popa
mov
mov
jo
insb
imul
push
inc
jne
mov
jo
inc
jbe
xchg
cmp
dec
lods
outsb
adc
inc
aaa
xor
ret
dec
add
cmp
gs
sbb
dec
inc
fildll
add
mov
aas
leave
add
xchg
dec
sbb
dec
inc
cmp
and
xor
jb
push
or
jnp
insb
push
insb
pop
add
fdivrs
cs
imul
push
pop
pop
push
and
cld
pusha
imul
inc
dec
push
fsts
xor
jb
adc
adcb
inc
test
push
xor
gs
adc
pop
sbb
mov
movsb
data16
adc
inc
lea
subl
dec
pop
mov
inc
push
xchg
xchg
sub
dec
pop
sub
pop
push
call
popf
inc
pusha
mov
ss
push
fs
or
cmp
aas
dec
popa
xor
jbe
adc
jae
pop
adc
sti
imul
xor
inc
out
inc
inc
jns
sub
or
dec
lahf
push
jbe
int
sbb
push
push
cmp
popl
test
jb
cmpsb
mov
addb
inc
cwtl
mov
mov
pop
mov
xchg
dec
dec
fisttpll
adc
lods
mov
dec
jbe
dec
test
leave
mov
xchg
push
add
cmpsb
adc
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
pop
outsl
dec
dec
add
pop
mov
push
lret
push
xor
pop
mov
mov
or
inc
xchg
push
push
push
in
pop
mov
js
cli
dec
push
or
mov
push
outsl
dec
addl
adcl
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
loope
dec
mov
xchg
mov
les
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
xchg
push
mov
data16
rolb
cmpsl
and
push
or
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
inc
mov
dec
xor
ljmp
add
xchg
jae
sbb
push
sbb
lea
imul
dec
push
pop
push
jne
les
outsl
inc
rorl
adc
add
movl
outsl
addr16
iret
mov
popa
or
addb
pop
cmp
cmp
addr16
xlat
fiaddl
out
jg
or
mov
mov
repz
jl
inc
and
clc
sahf
out
lcall
movsb
and
jns
call
mov
cmpsl
mov
daa
iret
cmp
les
je
daa
iret
and
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
movsb
mov
aad
mov
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
call
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
pushl
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
jmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
dec
or
sub
mov
push
mov
jl
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
pushl
mov
push
movsl
in
lahf
xor
mov
js
stc
lcall
data16
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
ljmp
popa
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
gs
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
jg
dec
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
leave
jl
fnstsw
add
daa
adc
or
and
test
or
mov
lcall
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
ljmp
cmpl
or
mov
lcall
ljmp
fildl
incl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
mov
rcrb
aam
loopne
rorl
int3
dec
frstor
fistpll
decl
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
sar
pushl
sbb
ret
es
pushf
mov
insl
add
ss
lcall
pop
jb
push
mov
dec
mov
loop
sub
or
mov
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fcos
jmp
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
jne
add
ds
add
cs
jbe
mov
xchg
adcb
push
pop
outsl
inc
jne
push
add
out
imul
or
and
mov
inc
jne
sbb
pop
inc
mov
dec
inc
js
inc
insl
bound
test
mov
popf
push
rolb
js
fadd
mov
scas
dec
mov
inc
jns
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
rcl
inc
jbe
pop
mov
fs
imul
push
dec
inc
or
in
sbb
add
push
fcmovbe
flds
adc
add
int3
dec
xor
jmp
dec
das
fs
test
add
repnz
imul
insb
insb
stos
pop
push
jbe
arpl
jmp
inc
aas
pop
lock
arpl
jle
inc
jecxz
mov
inc
inc
push
jo
test
jl
cs
inc
dec
push
aaa
pop
sbb
insb
popa
jns
jne
jne
pop
dec
insb
loope
sub
adcl
aaa
aas
inc
push
pop
add
rcrb
aas
or
mov
jg
and
jae
sub
pop
xor
pop
ret
pop
inc
aas
dec
or
add
inc
movl
std
push
mov
jo
inc
inc
push
adc
ds
inc
scas
add
call
int
push
dec
dec
push
adc
mov
mov
sbb
sbb
ja
outsb
jne
push
adc
imul
fucomi
pop
ja
add
add
or
pop
pop
push
outsl
add
addr16
push
sbb
pop
jo
pop
data16
pop
sti
pop
inc
cmp
push
mov
cltd
lahf
xor
jmp
out
imul
add
addr16
adc
pop
mov
lahf
dec
aam
dec
jo
rclb
mov
xlat
sbb
and
fists
daa
inc
jb
addl
out
dec
popa
jo
ds
or
add
push
outsl
outsl
test
mov
sti
jbe
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
aam
xor
js
popa
jb
je
or
push
xchg
push
dec
mov
dec
mov
inc
push
bound
test
daa
mov
dec
addr16
ffreep
mov
dec
ja
mov
pop
jne
fbstp
xor
stos
movsl
inc
adc
ss
sub
inc
popa
cmp
ja
adc
push
pusha
jl
cmp
push
or
loopne
scas
imul
dec
push
testb
mov
add
and
and
outsl
shll
pop
inc
push
adc
dec
in
push
loop
sbb
push
outsb
push
pusha
mov
add
push
daa
aas
pop
inc
and
and
add
adcl
or
inc
add
xchg
push
sgdtl
push
popf
or
xchg
sbb
arpl
incl
lahf
lea
cmp
popa
outsl
push
xchg
dec
data16
xor
adc
enter
lcall
inc
movsb
lret
sti
fbstp
inc
leave
or
jbe
xchg
inc
sbb
in
mov
call
cmc
xchg
ss
sbb
les
arpl
ja
icebp
stos
push
mov
fsubl
stc
cld
fs
inc
cli
repnz
repz
add
mov
xor
jmp
mov
test
test
xchg
loope
leave
xor
into
mov
and
clc
fdivs
or
jle
mov
cld
incl
push
adc
cmp
cmpsb
test
inc
xchg
pop
outsb
inc
nop
push
or
mov
shll
dec
push
adc
and
dec
aas
int3
mov
out
sub
das
mov
nop
movsb
loope
aaa
push
fcoml
incl
je
rcrb
ret
repnz
sub
insl
mov
push
ljmp
decl
cmpsb
adcb
je
outsl
dec
repnz
mov
daa
push
rolb
das
loop
sti
jg
jp
push
mov
popf
popf
jg
stos
sub
mov
cmpsl
or
pushl
jns
push
mov
mov
out
cmpsb
outsl
push
outsb
sub
push
mov
aam
test
pushl
mov
add
or
cltd
es
les
mov
idiv
push
dec
sar
decl
mov
xor
pusha
nop
ror
pushl
mov
push
int
adc
inc
jmp
test
xor
fwait
jmp
mov
pop
pop
mov
popf
dec
loopne
jb
inc
fldl
mov
push
jge
incl
sub
jmp
dec
gs
loop
inc
rol
mov
lds
test
pop
fidivs
es
adc
cmp
and
sbb
cmp
push
jno
pop
ud0
ljmp
insb
pop
jmp
add
movsl
js
popa
decl
or
test
lret
lds
fisttpl
scas
mov
mov
cmp
push
pusha
out
shr
or
out
mov
cs
dec
and
movsb
sbb
jo
fldenv
mov
sar
imul
fs
jb
inc
mov
ljmp
mov
cmc
in
test
addl
test
xchg
and
mov
subb
pop
jns
aam
add
ss
loopne
rclb
push
ret
xchg
jbe
dec
xchg
stos
decl
and
jmp
jecxz
test
dec
rcll
mov
dec
cwtl
xchg
imul
cmp
pushl
movl
test
sti
ret
sub
jg
sub
fstpt
pop
cmp
popf
sbb
fwait
call
dec
shrb
jmp
xchg
das
test
jne
dec
fucom
ljmp
and
push
sbb
ror
sbb
daa
push
fmul
xchg
jle
hlt
movsl
sub
incl
pop
imul
movsb
sbb
lods
xchg
les
jo
loop
inc
std
ljmp
jne
cmc
out
xchg
jo
movsb
sub
jg
pop
sub
jno
xorb
dec
adc
mov
les
inc
push
repz
cmc
inc
push
leave
test
jle
popa
cld
and
scas
imul
xchg
and
mov
lret
nop
mov
dec
mov
and
scas
mov
adc
aas
and
or
jmp
call
popf
mov
inc
iret
mov
fldcw
sar
sahf
or
xchg
mov
lcall
xor
clc
mov
dec
in
mov
pop
es
sub
fwait
xchg
jle
lcall
pop
dec
mov
and
pop
addr16
push
addl
mov
and
jmp
in
scas
adc
mov
dec
push
sub
adc
mov
xor
iret
dec
int3
pusha
cltd
cmpsb
out
out
daa
iret
add
push
decl
or
insb
jmp
sbb
inc
push
cmpsl
mov
sub
jae
jnp
xchg
imull
ljmp
pop
xchg
cmp
add
movl
int
cmp
sbbb
pop
insb
and
jmp
mov
out
jo
fcomp
ret
ss
mov
mov
ljmp
test
roll
cmp
mov
inc
cs
inc
mov
jg
xchg
add
cmp
jbe
mov
add
dec
add
loop
mov
stc
daa
push
jge
out
jmp
xchg
int3
mov
mov
leave
xchg
lds
xchg
mov
mov
push
lds
jne
cmpsl
outsl
mov
je
bound
cmp
pop
enter
fcomip
lcall
xchg
shll
add
insl
mov
lahf
mov
call
jmp
inc
daa
and
test
inc
and
fisttps
rep
adc
sbb
push
lcall
mov
out
mov
push
cmp
jecxz
dec
inc
or
in
mov
mov
jmp
xor
sub
or
pop
mov
insb
xchg
not
sbb
jle
outsb
mov
cli
cmp
call
lahf
test
xor
mov
push
lock
push
mov
or
js
pop
mov
pushl
xor
xor
into
loope
pop
add
mov
jb
inc
aad
test
and
dec
nop
pop
xchg
out
sti
test
or
sahf
and
call
gs
icebp
decl
cmpsl
fimull
das
add
outsl
sub
ficomps
pop
call
ja
push
xchg
loop
iret
dec
mov
cmp
pushf
sarl
or
std
idiv
mov
or
xor
fmuls
pop
movsb
in
mov
pop
addr16
mov
inc
out
dec
repz
lods
mov
decl
movsb
push
es
pop
mov
fistl
test
jle
mov
in
mov
inc
xlat
xor
sbb
cmpsb
dec
cmp
loopne
fidivrs
push
out
je
out
incl
dec
jo
mov
adc
aaa
xchg
cmpsl
scas
pop
mov
cltd
mov
pop
out
pushl
scas
int3
jbe
sti
sbb
nop
fmull
add
idivb
inc
shrl
ljmp
inc
dec
rcr
or
pop
and
jl
aam
add
xor
jbe
push
call
dec
js
insl
fcmovu
and
bound
stc
dec
adc
mov
sub
push
ljmp
in
or
ret
jo
xchg
call
add
add
insl
xchg
xor
movsl
mov
inc
push
stos
stc
adc
test
xchg
push
or
xor
test
leave
movsb
jp
dec
in
fsubrl
jmp
mov
jb
mov
sbb
jge
mov
faddp
and
mov
insl
jg
push
daa
cwtl
sbb
lock
nop
popf
lods
cmpsl
sbbl
xorb
leave
popf
adc
mov
gs
daa
sbb
mov
adc
iret
dec
mov
jmp
xchg
push
pop
xor
push
shl
popa
inc
sbb
out
lahf
xchg
popl
sub
subb
in
rclb
or
and
inc
lahf
stos
mov
pushf
mov
or
stos
test
sbb
push
jge
cwtl
adc
jg
push
cmp
cmc
push
mov
xor
push
stos
inc
ds
xchg
test
aaa
scas
mov
je
decl
push
and
fs
pushw
ret
cmp
sahf
or
jg
fstpt
lea
shl
stc
cmp
inc
data16
mov
ljmp
fnsave
inc
adc
out
adc
aam
mov
and
ja
push
add
push
mov
xchg
imul
jnp,pt
mov
adc
aas
jnp
fcoms
xchg
adc
notl
inc
mov
fldl
sbb
out
jae
xchg
sbb
or
push
pop
popf
imul
ds
xchg
xchg
out
cli
lcall
in
pop
call
popf
xchg
xchg
xchg
cmp
pop
add
gs
loopne
in
fists
ficompl
les
and
sub
insb
adc
add
ljmp
or
data16
or
adc
sahf
shll
sbb
cld
call
pop
sbb
psadbw
fxch
push
ret
bound
imul
sub
incl
sub
sub
dec
enter
ret
cli
xchg
push
ds
fwait
fisttps
push
stos
xor
add
pop
dec
cmp
jns
cmpsb
fwait
sub
int
scas
idiv
jmp
lahf
push
sub
and
pop
jb
pop
mov
xchg
aad
add
xchg
pusha
fdivrs
xor
inc
cmpb
fsub
fsubs
xchg
cmp
jno
pushl
dec
pop
fimull
xlat
pop
cmp
sti
cmp
in
cmp
jecxz
mov
xchg
mov
call
pop
push
call
ficoml
call
into
add
xor
mov
out
pop
cmc
call
jne
or
jo
dec
jo
lahf
fs
mov
addr16
lcall
adc
lcall
adc
push
push
pop
jns
xchg
cwtl
mov
mov
inc
mov
outsl
sti
fbstp
fs
inc
sbb
out
inc
es
imul
mov
ljmp
mov
and
sub
aas
and
ret
rolb
mov
insb
mov
call
and
xor
cmp
jg
leave
cli
out
les
cmpsl
xor
push
ds
js
cld
call
push
lods
mov
out
lock
inc
out
adc
inc
add
push
pop
in
sub
mov
in
cmp
call
cmp
pop
fisubrs
mov
adc
cs
jbe
xor
mov
fdivrs
stos
mov
mov
decl
lret
rclb
sbb
repz
pushf
cli
dec
or
ret
inc
stc
add
aam
cmpb
cmp
orb
mov
in
ljmp
out
stos
pop
sub
daa
xchg
jo
pop
in
cmc
enter
popf
xchg
fcmovnu
cli
ljmp
clc
mov
push
shlb
aas
popa
xchg
cwtl
es
and
inc
push
ljmp
addl
aam
enter
add
pushf
fs
adc
aas
ds
ljmp
sub
loopne
ds
xchg
cmpsl
or
jle
hlt
in
pop
jae
in
mov
mov
mov
dec
inc
insb
call
sub
scas
jg
push
aaa
xchg
leave
pop
mov
in
sbb
add
decl
subb
sub
sti
add
pop
xchg
inc
mov
xorl
xor
mov
sub
pop
mov
pop
and
add
jne
scas
inc
rorl
add
mov
xchg
and
dec
lds
nop
in
les
push
mov
call
test
test
fsubs
add
out
popf
push
jne
cmp
sbb
mov
lret
fsts
imul
fwait
in
add
adc
popa
hlt
push
dec
xchg
ja
incl
push
push
das
std
rcll
xchg
or
in
into
nop
dec
test
cs
lds
mov
jmp
cmp
push
outsl
fwait
ret
mov
push
inc
rorl
fistl
adc
cs
call
fwait
jecxz
mov
dec
int
or
fdivl
fldl
sbb
call
std
call
mov
add
out
in
sub
push
mov
or
inc
push
mulb
fwait
clc
clc
push
ficoms
mov
dec
xchg
pop
clc
out
fldcw
loope
or
test
cmp
js
test
fldcw
pop
loopne
shll
cmp
xorb
and
sti
sub
jmp
decl
jo
lock
mov
pop
pop
out
adc
mov
xchg
mov
es
jecxz
mov
inc
lock
lock
inc
rcl
jp
pop
lods
cwtl
movsb
or
lods
cli
mov
mov
call
add
pop
lret
popa
add
in
ljmp
jmp
ss
sub
push
push
je
std
adc
pushf
clc
mov
jns
cwtl
daa
repnz
nopl
test
loop
cmc
pop
sbb
insb
ret
sbb
in
out
fdivrs
mov
sti
les
sbb
xor
mov
push
and
add
cmp
push
daa
xor
icebp
sub
add
fisubrl
inc
decl
in
insb
xor
xchg
jge
loopne
adcb
dec
out
sub
pop
xchg
jmp
inc
adc
lcall
loope
mov
jge
imul
insl
cmpsb
in
icebp
mov
xchg
or
std
mov
mov
jl
rolb
inc
inc
daa
dec
negl
xchg
jbe
fisttpll
inc
sti
out
pop
lcall
mov
popf
cmp
leave
inc
out
into
xor
sbb
pop
inc
add
in
jo
or
outsl
clc
lcall
mov
and
jp
pop
dec
pusha
push
test
ficoml
mov
ss
bnd
lcall
scas
xchg
sub
and
inc
test
cli
add
and
mov
jo
orb
jmp
pop
leave
inc
push
pop
push
add
or
pop
add
stos
fcomip
dec
mov
not
inc
cmpsl
sbb
mov
repnz
popa
aaa
cmp
inc
fmull
call
mov
movb
xor
data16
jg
ljmp
add
movsb
lock
fs
js
das
mov
scas
clc
inc
cmp
fiaddl
test
push
ret
fst
cmp
jb
shlb
mov
mov
xchg
icebp
xchg
push
push
pop
cmp
roll
faddl
mov
call
pop
lcall
mov
xchg
lds
fdivr
call
push
ret
aad
sub
xlat
lds
js
sub
sub
sub
inc
outsl
call
insb
fstpt
bound
popl
mov
inc
hlt
sub
add
lcall
loope
add
lds
cwtl
push
mov
push
das
ja
mov
xchg
pop
jmp
ss
push
jo
fsubs
imul
or
xor
mov
sub
insl
fiaddl
mov
jg
ret
in
dec
pop
xchg
xchg
call
add
jmp
cmpsl
in
xchg
xchg
test
adcl
test
xchg
push
dec
and
loop
cmc
jns
push
dec
jae
in
dec
or
mov
or
rcll
push
out
sbb
pop
icebp
lods
iret
cmp
mov
xor
or
fistpl
and
jns
mov
andb
sbb
sti
mov
mov
in
mov
aad
popf
jnp
inc
insb
into
call
imul
ficompl
std
out
push
nop
aad
jmp
or
add
adc
fmul
cmp
add
mov
std
inc
cld
test
cmp
xchg
cmpsb
ja
negb
push
cmp
loope
mov
pushl
imul
mov
fs
jecxz
dec
jecxz
fwait
hlt
lret
mulb
daa
mov
push
sub
call
test
test
push
clc
push
iret
cmp
sar
call
lret
mov
mov
ret
loop
fcomps
add
pop
and
jae
decl
outsb
rcll
int
mov
ret
lods
and
imul
push
dec
dec
xlat
mov
dec
push
jbe
icebp
lcall
xor
cwtl
sub
ss
jb
jnp
lret
icebp
jb
pmaxsw
xor
mov
mov
dec
jge
loopne
pusha
sarb
sbb
or
xchg
imul
out
loop
and
movsl
rol
dec
pop
in
es
xchg
ljmp
stos
add
lcall
shlb
sbb
jno
mov
inc
ror
xchg
call
das
mov
cli
fbld
loope
jg
pusha
test
pop
xchg
mov
inc
loop
lcall
add
push
or
and
inc
dec
xor
pop
cltd
inc
int3
enter
jmp
dec
push
inc
xor
add
jp
jb
xor
inc
sarb
nop
dec
xor
push
pop
addr16
dec
dec
adc
fcompl
imul
lds
jle
stos
pop
fcomp
into
lds
push
xorl
mov
and
jae
insb
fisubrl
sub
adc
mov
sub
sub
and
shl
inc
pop
mov
int3
ja
jb
and
jns
sti
push
icebp
fwait
test
movsl
aad
sub
hlt
mov
cmp
xor
test
push
dec
popa
mov
sbb
jecxz
fld
mov
push
xor
in
lret
xchg
setge
lcall
lock
adc
popa
jmp
push
dec
xchg
mov
pop
js
add
push
mov
imul
ljmp
fcmovbe
pop
daa
jmp
shll
stos
adc
pop
popf
push
mov
daa
dec
inc
pop
incb
imul
leave
mov
pop
inc
mov
jle
cltd
jae
mov
ret
ljmp
xchg
sbb
xor
fisttps
sub
lods
push
adc
push
adc
jp
jbe
fwait
jmp
repz
das
ss
push
or
adc
push
mov
pushl
arpl
stos
push
inc
xchg
xchg
adc
jg
dec
sahf
mov
aam
insb
das
xorl
fcomi
lods
stc
arpl
aam
mov
mov
xor
ds
scas
outsb
jne
jns
aaa
std
das
nop
cwtl
xor
jo
nop
and
lss
jp
arpl
push
lahf
pushf
imul
ret
pop
jb
rclb
or
push
scas
aam
decl
loopne
mov
fidivl
jge
mov
jns
das
fsubp
je
mov
shl
mov
incl
mov
jae,pn
pop
ret
shrb
fdivrl
cmp
push
mov
ja
repz
inc
jge
sbb
cld
sub
xor
inc
std
popf
dec
sbb
test
jmp
bound
bound
sub
mov
out
add
ljmp
jg
lcall
cmp
daa
push
xchg
mov
mov
pop
jo
sbb
mov
ljmp
repnz
repz
or
pop
xchg
fwait
jbe
xor
lcall
fdivrl
xor
rorl
lea
sbb
sti
call
mov
lcall
xchg
mov
sub
mov
popa
aad
mov
jo
xchg
add
jmp
fildll
fmul
and
jbe
pop
xchg
mov
cli
sub
push
push
lods
xor
enter
pop
hlt
cmp
push
loop
sbbl
repz
sub
dec
sbb
out
cli
cmpb
jl
imul
test
sbb
movsb
call
in
pop
cltd
or
add
jle
mov
mov
arpl
loop
push
data16
sub
mov
inc
or
add
jb
rcrb
push
or
mov
out
mov
mov
xchg
stos
mov
xchg
add
test
mov
pop
icebp
dec
xor
out
sahf
and
sub
lods
push
inc
das
add
repz
xlat
jns
push
imul
out
clc
mov
clc
pop
jg
lahf
ss
inc
pop
stos
in
pop
push
in
jg
lcall
and
pop
pop
in
ljmp
sub
shrb
mov
jmp
fdivr
fidivl
mov
mov
das
cld
xlat
cmp
movsl
push
jb
lret
imul
call
pop
icebp
test
ds
mov
lahf
pop
push
stos
int
hlt
ret
out
mov
sbb
push
sbb
cmp
mov
insl
cld
lods
hlt
xorl
jge
push
fidivrs
sbb
push
and
lahf
subl
stos
ror
xchg
lret
ret
mov
jg
push
int3
pop
mov
xchg
push
popf
or
cli
iret
push
or
sarl
call
insl
jne
cwtl
data16
fdivrs
add
xchg
iret
push
sub
arpl
xchg
push
push
jge
pop
stos
insl
test
call
loopne
filds
lret
mov
jg
inc
loopne
adc
test
cmp
decl
cmp
push
adc
js
add
incl
pop
divb
ljmp
mov
loopne
cld
or
pop
decl
imul
xchg
xor
mov
cmp
and
lcall
mov
dec
inc
sbb
mov
pop
cld
faddl
cmp
inc
dec
test
push
cmc
push
dec
lret
stos
cmc
mov
mov
mov
jmp
in
out
dec
dec
mov
cmpsb
imul
jle
push
jno
aad
jge
in
inc
test
das
mov
sub
mov
push
test
std
mov
out
or
xchg
or
push
fsts
stc
out
add
inc
loopne
jb
add
test
mov
aad
das
outsl
inc
jg
mov
movsb
push
xchg
xchg
and
cmpsl
popf
addr16
ljmp
cld
test
mov
shll
pop
sub
cmp
loopne
pusha
dec
arpl
daa
pop
lcall
incl
enter
orl
xchg
sarb
mov
mov
mov
lahf
fucomip
adc
leave
cmpsb
add
xchg
lods
and
imul
es
jp
movsl
scas
inc
js
mov
into
xor
lock
xor
sahf
mov
fidivs
aad
imul
clc
cmp
mov
icebp
adc
pushl
adc
hlt
jmp
push
std
out
dec
xchg
dec
addr16
ret
push
das
pop
into
pop
cmc
ljmp
add
inc
out
mov
jb
aam
jg
xor
push
cmc
pushf
jb
stc
push
cmp
mov
pop
popa
sti
repz
scas
mov
mov
pushf
mov
ja
mov
dec
sub
sub
inc
test
mov
pop
fcmovnb
jmp
rclb
dec
mov
inc
lea
add
pandn
mov
fs
jmp
pop
fisubrl
insb
mov
inc
outsb
pop
sbb
in
pop
test
mov
out
mov
sbb
push
mov
jge
jg
ss
imul
or
push
jne
and
cmpl
pushf
lahf
sub
movsb
dec
inc
cmc
mov
pop
ror
pop
jge
jb
icebp
mov
out
inc
adc
pop
jbe
bound
daa
bound
clc
orb
filds
inc
dec
sbb
clts
and
or
stos
mov
stc
mov
add
loopne
ret
mov
repz
enter
jg
xchg
bnd
in
incl
xchg
fisttpl
je
dec
popw
cmp
push
mov
xor
sahf
sbb
outsl
push
in
lcall
int3
pop
add
subb
sbb
mov
pushl
addr16
cmpsl
and
push
pushl
adc
cli
jecxz
dec
push
imul
outsb
es
mov
sub
fstpt
xchg
pop
loopne
push
hlt
or
cmp
clc
adc
fmul
xchg
aad
shrb
int
push
call
test
and
mov
push
mov
fisubs
push
fcomip
stos
sbb
jns
pop
ljmp
int
ret
nop
ljmp
cmc
lock
fcom
mov
and
mov
jnp
sbb
cmp
push
xchg
add
jbe
pop
daa
and
dec
arpl
inc
and
out
cmp
pop
fildll
icebp
jns
rcl
out
push
adc
dec
lods
insb
test
lcall
adc
jnp
and
loop
insb
lcall
xchg
lret
jle
mov
js
stc
sbb
xor
mov
mov
mov
inc
and
xchg
jb
xor
inc
call
test
xchg
outsl
jmp
jge
mov
ret
jmp
mov
and
sub
or
aam
xor
push
and
jae
jb
outsl
clc
jg
rcll
pop
cmp
negb
inc
adc
sub
inc
shlb
mov
or
jnp
scas
cmp
add
cmp
push
out
xchg
popa
inc
in
ds
decl
sub
cmp
dec
aam
daa
adc
push
icebp
inc
mov
in
jg
jp
cli
bound
mov
cmp
adc
adc
call
mov
movsb
push
rol
pop
mov
scas
xchg
and
dec
js
fwait
mov
xor
popa
call
sbb
ret
add
int3
les
adc
jne
push
jg
inc
pop
inc
mov
jmp
fisubl
popf
fs
and
adc
rorl
in
out
mov
mov
xchg
incl
cmpb
sub
ret
adc
push
call
scas
push
std
in
mov
cmp
jnp
arpl
testl
xor
ret
xor
in
jmp
or
xchg
sub
and
dec
jo
pop
mov
in
mov
call
int3
push
fdivrs
lods
test
arpl
ret
int
xchg
dec
outsl
xor
call
adc
pop
mov
sub
mov
mov
repz
add
jmp
and
xlat
or
jbe
cvtps2pi
xor
xchg
sub
lcall
jge
pop
sti
in
nop
push
ds
movsl
pop
push
in
mov
push
scas
and
add
ljmp
and
cmp
std
out
aam
and
jmp
jg
scas
pop
movsb
add
jmp
xchg
bound
roll
jge
stc
div
inc
mov
sub
lret
pop
addr16
ljmp
incl
push
test
movsl
mov
inc
jle
xchg
sbbb
scas
lcall
xchg
addb
loopne
pop
cwtl
cmpl
mov
push
lea
in
sub
pop
xchg
lret
cld
mov
lods
enter
cmp
adc
mov
fcomip
lcall
pushf
push
or
insb
jecxz
in
les
xor
push
sbb
adc
xchg
push
scas
aas
push
incb
or
test
jbe
add
pop
jmp
push
neg
outsb
jp
mov
cwtl
xor
cpuid
push
adc
js
xchg
sub
stos
ljmp
xor
fiaddl
into
hlt
cmpb
mov
stos
mov
jecxz
mov
icebp
call
xchg
xor
inc
cwtl
in
lea
mov
imul
jb
fs
lret
mov
pop
jl
stos
stc
mov
out
xor
dec
in
xchg
mov
cmp
test
xchg
xchg
adc
pop
xorb
sub
ljmp
adc
fwait
xor
je
in
pop
pop
es
add
push
mov
incl
push
std
dec
aas
dec
add
jo
cmp
iret
mov
out
push
test
sub
call
call
out
js
pop
dec
mov
inc
aaa
lods
xchg
add
mov
cmc
jmp
jge
adc
xchg
fmul
dec
lds
mov
outsl
xor
imul
lcall
jnp
ja
add
add
popf
push
stc
flds
inc
movsb
gs
jecxz
es
fcmovnb
scas
je
arpl
fidivrs
into
jb
rcrl
sub
rorl
fcomip
dec
out
pop
push
nop
sub
jle
adc
sbb
mov
fs
dec
les
mov
mov
data16
icebp
dec
cwtl
ret
sub
inc
mov
mov
push
xchg
fwait
es
push
add
pop
and
call
sbb
lahf
imul
push
in
sbb
shrb
fildll
inc
xchg
jp
popa
pop
lahf
dec
iret
inc
mov
test
nop
cmp
inc
and
iret
es
andl
mov
dec
mov
cmpsl
stos
pop
sbb
pop
orb
stc
cmp
push
mov
push
cli
jmp
inc
cwtl
mov
pop
mov
rclb
cmp
jp
jmp
nop
test
jnp
pop
stos
cmp
insb
pusha
inc
cmpsl
and
inc
fisubrs
sahf
fldcw
mov
jg
inc
std
sbb
test
mov
cs
inc
lcall
push
sub
mov
mov
lret
pushf
cld
push
push
push
push
les
jne
xor
pop
lcall
call
xchg
movsl
divb
inc
and
les
xchg
cmp
adc
pop
cmp
jmp
incl
mov
cs
adc
addr16
xlat
push
cmp
fnstenv
mov
mov
imull
add
pushl
and
cmp
in
stos
xor
sbb
arpl
pop
pop
lods
in
adc
mov
cli
aas
lahf
dec
mov
int
int
in
mov
jp
adc
xchg
pop
loopne,pn
mov
mov
inc
out
pop
js
sbb
push
sub
and
decl
sub
mov
hlt
fs
loop
pop
test
outsl
jbe
mov
sahf
incl
mov
popa
jmp
orb
lar
mov
fwait
jmp
sub
test
stos
mov
push
loop
fs
je
xlat
enter
pop
mov
push
nop
dec
punpckhdq
shrb
popw
std
in
lcall
in
ds
lock
sbb
xchg
dec
or
xor
jmp
insb
fs
or
xor
mov
jae
xchg
decl
fisubl
push
mov
dec
xchg
loope
mov
js
cmp
mov
and
cmp
in
stc
sbb
scas
rcll
aad
int
dec
pop
mov
fbstp
and
inc
pop
or
add
pop
inc
movsl
fwait
jae
add
cmp
inc
ret
adc
pop
loop
push
cld
or
and
cmp
jg
nop
mov
mov
nop
ljmp
ret
enter
ljmp
mov
test
out
insl
rol
jl
decl
stos
push
loopne
add
popa
lods
adcb
shlb
jmp
xor
cmpsb
lahf
imul
jb
hlt
mov
or
xorl
pusha
lahf
movsb
cmp
ljmp
or
cmpsl
loop
or
inc
dec
pop
lds
jo
inc
inc
pusha
out
lahf
push
and
mov
jmp
hlt
testb
lret
sbb
test
xor
fnstcw
aaa
fcmovbe
lret
jmp
sbb
fs
jp
jns
bound
push
or
outsl
lock
movsb
jo
repnz
mov
pushf
ror
sbb
nop
dec
inc
insl
out
sbb
push
call
ljmp
pop
mov
push
repnz
push
stos
cmpsl
inc
pushf
mov
dec
add
xor
ljmp
movsb
inc
hlt
inc
fnstenv
mov
jge
data16
adc
ret
and
cwtl
loope
js
incl
mov
pusha
fdivrs
mov
pop
xor
jge
icebp
sarb
movsb
sub
enter
mov
andb
sahf
scas
sub
fidivs
idiv
lahf
xchg
iret
ss
ljmp
outsl
mov
idivl
jae
js
pop
ret
inc
sbb
fistl
test
fs
jg
sti
and
xor
and
adc
mov
in
bound
push
jle
fildll
xchg
clc
xchg
mov
leave
add
mov
imul
jns
mov
shlb
cmp
out
sbb
dec
negb
out
pusha
lret
pop
loopne
in
xchg
mov
pop
sub
scas
aad
dec
jecxz
rcl
xor
pop
jl
or
pushl
std
jl
and
xchg
xchg
out
xor
mov
fiaddl
sbb
lea
insb
enter
popf
popa
dec
aad
add
into
xchg
jmp
xchg
push
mov
into
loope
sbb
shll
add
pop
rorl
dec
or
pushl
or
aaa
push
xchg
stc
enter
mov
inc
inc
inc
js
addr16
arpl
je
stc
pslld
daa
dec
jne
aaa
int
and
jl
jnp
mov
insb
cwtl
sub
xchg
hlt
rcl
add
mov
cmp
in
imul
or
lret
dec
cli
lods
mov
repz
pusha
xchg
fstp
sbb
ljmp
sbb
jne
or
mov
test
dec
sub
outsl
loop
adc
fcos
mov
loop
pop
lods
mov
hlt
test
shlb
mov
sbb
call
imul
inc
jle
aas
fnstcw
sbb
xchg
or
out
jns
dec
mov
enter
pop
and
jmp
push
add
imul
scas
addr16
push
cli
ljmp
push
imul
aam
sbb
push
push
xchg
clc
int
dec
xchg
jp
call
rorb
sti
sti
xchg
cltd
lcall
mov
dec
insl
push
push
test
mov
xchg
mov
jnp
cltd
push
movb
pushf
dec
push
cmp
insb
ljmp
xchg
xchg
dec
cli
inc
mov
pushl
andb
je
dec
hlt
sbb
mov
mov
fisubrl
lcall
sarb
sub
inc
lahf
xchg
mov
and
sub
call
xlat
sub
decl
lods
cmp
inc
xchg
adcb
nop
outsb
cmp
xchg
mov
decl
sti
lcall
ja
lret
lods
jmp
and
ss
sbb
andl
ja
incl
dec
mov
dec
jne
aam
adc
in
leave
rolb
adc
outsb
cmp
hlt
push
movsb
mov
xchg
push
xchg
xor
int
arpl
adc
fstl
aad
mov
fistpl
xchg
inc
mov
xor
stos
pop
mov
mov
inc
test
call
push
sbb
mov
mov
jge
jmp
sbb
decl
add
jno
jns
cmp
rcll
std
push
popa
fcmove
cs
dec
dec
pop
dec
mov
stc
out
pop
lods
inc
mov
jns
insl
out
sub
loop
mov
pop
inc
jne
mov
fldenv
xchg
ljmp
sbb
pop
mov
pop
pop
jnp
cs
dec
sbb
outsl
decl
jae
std
gs
pusha
lods
lock
xor
testb
cltd
out
or
xchg
pop
mov
sub
jmp
or
xor
dec
jb
jne
add
mov
decl
xchg
jb
push
pop
sub
dec
mov
and
pop
icebp
mov
sti
and
adcl
sbb
or
loopne
call
fs
leave
push
pusha
and
cmpsl
sub
cmp
ljmp
sub
test
insl
and
ror
jns
push
test
mov
sub
ret
incl
lcall
lret
mov
imul
inc
sub
jle
xchg
gs
jle
push
fsubrl
bound
shlb
fbld
jo
add
adc
jecxz
decl
push
cmp
jmp
mov
movsb
push
imul
cmc
ret
mov
popa
pop
outsb
loopne
ljmp
out
cli
lcall
pop
push
sbb
push
std
cmc
int
sysenter
inc
jae
test
hlt
fsubrl
sub
jg
call
fs
inc
call
inc
lcall
lret
xchg
bound
pushl
aad
iret
jb
imul
push
daa
pop
add
test
ds
incl
jne
xchg
iret
mov
adc
sbb
bound
lea
enter
ds
ljmp
dec
mov
sti
push
fisttpl
cmp
or
sarb
xor
mov
call
fmuls
sbb
dec
sbb
cs
popa
jbe
jl
pop
lds
pop
inc
jmp
sub
mov
test
jnp
aaa
mov
pop
cwtl
cmovs
js
add
int
test
call
shll
lcall
ds
jecxz
fisttps
aas
cwtl
subl
mov
pop
pop
mov
pop
cmpsb
repnz
mov
in
sbb
jnp
aam
andb
xor
aam
out
jb
push
mov
shl
int
jp
mov
mov
xor
outsb
xchg
mov
hlt
jns
push
cmp
outsl
pushl
sbb
sbb
test
add
mov
mov
test
cmp
jg
lcall
lds
lods
imul
or
push
pusha
out
mov
xchg
sti
loopne
fimull
lret
ret
addb
mov
movsb
scas
negb
stos
and
jne
jle
or
lcall
or
mov
test
and
sub
pushl
dec
mov
add
aas
repnz
jl
dec
pop
std
call
imul
sarb
adc
add
jbe
std
fldt
lcall
es
push
adc
bound
test
push
test
arpl
or
mov
add
push
fbld
inc
jb
cmp
pop
dec
xor
pop
sbb
out
xor
cmp
and
mov
int3
xor
dec
repz
lcall
sub
mov
je
into
or
cwtl
add
xor
test
int3
inc
sbb
mov
sti
or
scas
clc
mov
dec
loope
mov
pop
fsubp
call
jno
decl
inc
cmc
mov
stos
ss
out
xor
call
mov
pushf
bound
rorb
leave
adcl
cmpsl
icebp
mov
jmp
mov
scas
adc
imul
xchg
jo
test
cmp
pop
icebp
cmp
jns
popf
lret
popf
or
xchg
pop
mov
push
enter
decl
addr16
shlb
les
and
loope
xchg
test
jmp
popa
outsb
incb
pop
push
popf
push
in
int3
jp
sub
push
sbb
xchg
jmp
sti
aam
jb
push
dec
test
bound
imul
lock
cvtps2pi
movsl
test
cli
mov
jno
push
fidivs
out
xor
pop
hlt
aaa
std
push
add
leave
lcall
imul
pushl
into
icebp
xorl
sbb
adc
cmpsl
out
frstor
pop
pop
sub
test
lcall
push
lods
arpl
popf
xor
ror
divl
stc
inc
jl
stos
aas
divb
cli
add
xchg
and
iret
pop
add
jg
xchg
cltd
loopne
sub
jp
xor
jmp
je
fdivrs
dec
in
sub
xor
xchg
mov
call
pop
stos
es
ljmp
addl
jl
mov
int
mov
pop
mov
mov
mov
dec
int
outsl
xorb
mov
aas
sbbb
ljmp
or
sbb
bound
fcmove
pop
add
loopne
out
js
ljmp
mov
lods
imull
ss
push
xor
inc
je
in
pop
dec
pop
jecxz
adc
lret
fisttps
in
call
sbb
mov
jbe
dec
scas
cmp
outsl
ret
aas
pusha
mov
add
es
pop
lock
ljmp
mov
fwait
push
cmpsl
ss
push
pop
lret
shrb
push
int3
fwait
mov
inc
es
ret
repnz
rcrb
loop
roll
call
lock
mov
mov
test
test
mov
enter
aad
xchg
cmp
fcomip
mov
les
sbb
nop
xor
mov
jb
inc
aad
pushl
jmp
inc
pop
mov
inc
cltd
sub
xlat
jnp
or
mov
stc
sti
or
push
jl
jp
roll
jecxz
aad
adc
and
xlat
inc
push
scas
lret
jp
out
dec
ljmp
int
mov
inc
andb
fwait
or
das
push
xchg
inc
repnz
incl
add
dec
jl
stc
jnp
ret
or
jnp
imul
cli
sub
int
or
rcrb
dec
xchg
in
jno
mov
mov
jo
mov
add
jmp
lods
lcall
sahf
xchg
pushl
adcl
psubq
ljmp
aas
mov
daa
js
loopne
mov
or
in
mov
cmp
adc
or
lcall
jno
roll
mov
xor
xchg
call
in
mov
and
mov
ja
cmp
out
jg
pop
or
ljmp
cmpb
ss
add
sbb
jl
test
jo
cmp
dec
and
addr16
into
lods
jae
adc
lods
sub
cmc
add
adc
movsl
decl
sub
mov
xchg
cs
pop
je
imul
test
jb
outsb
pop
icebp
repz
adc
fwait
jl
xlat
out
call
cs
push
cli
test
mov
sub
dec
ds
mov
test
and
push
push
enter
icebp
mov
jge
popa
jg
dec
push
dec
fidivs
xchg
mov
enter
cld
push
insl
clc
jge
das
xchg
cmp
lock
mov
xor
mov
inc
inc
out
sub
ret
insb
ffreep
iret
shrl
xor
cmp
incl
dec
aaa
int
pop
adc
inc
das
nop
dec
dec
incb
sbb
adc
and
fcmovnu
pop
call
jp
push
cmpsb
jno
aaa
adc
cmp
mov
in
aas
xor
call
dec
outsb
jns
jmp
push
rclb
enter
mov
mov
sar
pushl
sub
pop
outsl
outsb
daa
push
movsb
mov
dec
cmp
inc
test
sub
cli
mov
and
dec
in
popa
push
adc
dec
xor
cs
push
ds
out
test
xor
pop
addr16
dec
mov
andl
adc
pop
std
ljmp
xchg
mov
movsl
mov
sbb
mov
adc
adcb
xor
mov
mov
mov
dec
mov
jle
call
jne
daa
cmp
int3
cmc
cmp
dec
cmc
les
add
xor
aam
jg
sbb
mov
xchg
ffree
xchg
cmc
ds
into
pop
sub
mov
shr
xor
pop
mov
jmp
decl
call
incl
es
pop
sbb
sbb
xor
sub
sbb
stos
push
das
ljmp
call
xchg
add
xchg
arpl
lcall
and
leave
pop
sbb
popf
jae
jmp
mov
inc
ss
bnd
mov
pop
call
push
xchg
dec
sarb
inc
cld
jl
clc
lcall
daa
pop
dec
push
enter
lods
sub
in
ss
rcrb
inc
jg
adc
out
inc
lods
ret
aam
xor
into
push
bndstx
andb
push
sbb
in
movsb
pop
ljmp
lcall
adc
imul
ljmp
gs
int3
aas
xor
mov
dec
sub
push
jo
sub
dec
scas
ja
or
cld
xchg
mov
xor
out
addr16
add
test
int3
inc
testl
xchg
pushf
insl
mov
and
inc
lcall
sbb
or
push
arpl
inc
push
dec
sub
insl
cmp
xlat
cmpsl
int3
lret
outsb
mov
jmp
mov
dec
ss
jb
jns
and
pop
and
push
jb
jl
lcall
int
movsb
pop
push
cltd
outsb
je
sahf
mov
nop
mov
ljmp
lds
push
cld
lcall
cmpsb
inc
push
pop
push
sub
sar
in
cmp
adc
ljmp
jno
sub
mov
adc
dec
inc
xchg
fdivl
sbb
push
outsb
mov
test
js
xor
and
cltd
lods
out
pushl
xor
jbe
movlps
dec
inc
cmpsl
push
cmp
pop
in
es
hlt
mov
std
aad
cmp
mov
icebp
or
push
add
push
fsubl
and
dec
sub
pop
ljmp
sar
xchg
cmp
push
push
mov
push
std
inc
adc
cwtl
sti
xchg
cmp
imulb
mov
push
mov
lods
leave
call
cld
and
in
and
add
pop
jp
mov
sbb
inc
xor
cmp
pop
push
cmpsb
xlat
add
jmp
loop
push
ljmp
adc
imul
cld
pop
arpl
or
mov
push
cmc
mov
inc
jnp
cmpb
aad
ret
mov
push
movsl
notl
xchg
xchg
gs
cmp
mov
cmp
xchg
cwtl
test
sub
ficomps
lret
ret
cmpsl
cld
fidivl
outsb
adc
ljmp
clc
cld
and
dec
cmp
pop
and
xor
cmp
inc
push
jmp
or
jmp
ljmp
shlb
mov
xlat
sbb
cmp
cmp
push
xchg
inc
pop
dec
jae
fisubs
dec
sub
aad
sar
jmp
cmc
jmp
xchg
insl
cmp
sbb
dec
lea
xchg
mov
repz
adc
movsl
mov
popa
repnz
or
mov
inc
insb
cmpsl
inc
nop
inc
add
shlb
jg
lock
mov
adc
incl
mov
adcl
xor
jns
lock
pop
dec
shll
fwait
inc
dec
pop
shll
mov
mov
push
jb
push
mov
test
mov
dec
xor
mov
clc
pushl
popa
cmpsl
pushf
loopne
jge
stos
fisttpl
movsl
cmp
fcomip
pop
jnp
scas
int
mov
cmpl
int3
xchg
cmpsb
push
imul
inc
in
xchg
dec
mov
jnp
lods
mov
mov
jae
mov
cli
sbb
pop
in
or
jbe
mov
cmp
bound
rep
mov
sbb
incl
scas
mov
in
push
clc
jnp
mov
pop
pop
xchg
mov
push
out
jnp
add
jg
pop
incb
notl
and
sbb
mov
mov
movsl
insb
rolb
add
sub
out
mov
sbb
fnsave
dec
lock
cli
push
ret
movsb
enter
fstpt
mul
mov
bound
cmpsb
mov
pushl
fs
mov
lcall
mov
es
jmp
sbb
push
mov
fidivrl
xchg
mov
add
sbb
and
aad
cli
decl
into
push
ljmp
xor
loope
push
nop
pop
sarb
call
daa
outsb
pop
imul
pop
mov
cld
std
mov
inc
cld
aaa
and
cli
xchg
and
inc
clc
mov
loop
ljmp
inc
addb
movsb
mov
push
mov
mov
cs
cmp
inc
icebp
clc
mov
jo
insb
pop
in
add
mov
push
adc
xchg
xchg
sub
decl
sub
fadds
dec
pop
jge
inc
scas
mov
cmp
jp
or
andb
pop
sub
lcall
aam
jbe
xchg
sahf
adc
fstpl
inc
fcmove
pop
test
jae
pop
pop
sbb
stc
push
out
cmpsl
decl
mov
push
jmp
dec
in
clc
mov
imul
idivb
dec
dec
incl
xchg
pop
lock
mov
popf
xor
or
cmp
mov
ja
int
cmp
call
pop
inc
insl
arpl
je
pop
mov
push
test
fnstcw
std
incl
mov
cld
cltd
popa
cs
sti
jg
je
sbb
jnp
mov
adc
mov
push
pop
pop
pop
sub
imul
fidivl
xchg
enter
dec
idiv
pushl
mov
icebp
and
mov
insb
loopne
lret
and
fistps
rolb
data16
jmp
inc
jo
sub
jge
jbe
push
lret
fs
mov
cmpsb
pop
sbb
xor
pushl
stc
xchg
in
jl
das
pop
inc
sub
inc
inc
mov
aas
scas
mov
mov
mov
inc
adc
jmp
insb
inc
mov
repz
push
mov
cld
cld
jmp
adc
or
cld
aad
cmc
adc
pop
fisttps
mov
or
call
mov
fs
pop
iret
cmp
and
xor
nop
mov
sbb
test
pop
jns
push
add
iret
insb
cmp
cld
aam
mov
xor
lds
jne
stc
inc
gs
loop
xor
xchg
lods
cmpsb
in
cwtl
inc
pop
and
jge
lret
in
fstpl
dec
data16
cmp
adc
rorb
shrl
hlt
ds
sbb
aas
cmp
cld
push
lcall
das
ret
jo
scas
call
sbb
outsb
adc
iret
sbb
mov
dec
sub
xor
lcall
sbb
xchg
jg
push
syscall
ja
add
push
pop
or
out
xchg
pop
xlat
das
or
loop
add
mov
mov
mov
mov
mov
rcr
hlt
dec
lcall
or
add
imul
push
hlt
add
or
mov
inc
mov
pushl
cmp
cwtl
inc
mov
pop
sub
std
sbb
add
jno
jg
decl
clc
into
enter
icebp
test
fs
add
inc
mov
sbb
incl
cs
and
dec
and
mov
jbe
cli
mov
mov
mov
sti
push
or
fsubp
cli
idiv
test
xor
ljmp
popf
mov
and
faddl
inc
and
insl
mov
divb
les
call
sub
hlt
repnz
xchg
push
shrl
cs
add
pop
mov
mov
js
pop
cmpsb
xchg
fxch
fildll
push
orb
xor
mov
xchg
jbe
dec
adc
clc
dec
cmp
jae
or
scas
cmp
push
sbb
cmp
clc
int3
cmpsb
jmp
cmpb
xchg
pushl
push
aaa
inc
sbb
cmp
mov
cmp
scas
js
xchg
sbb
sub
in
dec
cmpsl
cmc
cmp
jmp
mov
incl
mov
ljmp
cwtl
xchg
rcrb
sbb
js
pop
sbb
mov
sar
fwait
push
test
movsl
push
fidivrl
xchg
in
jbe
stos
aas
jnp
in
mov
fwait
sbb
call
push
xchg
data16
push
adc
mov
hlt
int3
inc
es
lcall
cmp
fistpl
bound
aam
lods
jmp
scas
mov
and
inc
sub
hlt
jmp
ljmp
stos
incl
std
mov
lret
pop
aam
lods
mov
sub
pop
lcall
jb
jo
xor
loop
add
addr16
add
dec
and
pushl
imul
dec
and
xor
mov
int
mov
decl
mov
fs
popa
lcall
cmp
ljmp
or
ljmp
and
in
arpl
push
aaa
and
xor
jnp
push
int
cld
jle
inc
mov
jnp
sbb
mov
mov
push
fldcw
adc
lods
imul
xchg
int3
xchg
dec
nop
pushl
xchg
push
mov
mov
mov
outsl
push
jne
mov
adc
stos
loope
ljmp
push
test
mov
push
mov
int
pop
inc
adc
in
inc
mov
xor
incl
hlt
aas
dec
es
jecxz
mov
mov
dec
fwait
dec
cwtl
adc
pop
pop
dec
dec
or
pop
fsincos
subb
push
inc
adc
mov
pop
push
fiadds
outsb
dec
pop
cmp
ja
xchg
push
pop
lea
xchg
orl
outsb
paddd
pushl
xor
das
repz
out
sub
ja
pusha
fidivs
inc
sahf
xor
add
decl
and
lods
mov
push
pop
add
pop
xchg
lock
sub
and
cmc
mov
jmp
xchg
divb
out
or
mov
les
cli
dec
out
pop
mov
sarb
out
call
insb
jno
mov
ret
and
and
mov
incl
mov
mov
ficomps
xor
int3
jl
ljmp
and
sbbl
das
cwtl
xchg
fcomip
jg
cmp
jae
push
mov
and
mov
into
incl
int
lret
or
cmpsb
lods
fld
sub
push
inc
ss
ret
cwtl
insb
ds
pushl
dec
mov
push
pop
std
imull
aaa
cs
pop
xchg
push
repnz
xor
call
mov
push
pushf
cmp
dec
aad
scas
and
ljmp
shr
jno
out
push
cld
test
lcall
fistpl
mov
xlat
push
push
mov
aad
xchg
or
in
jae
push
inc
mov
lods
popa
mov
andl
mov
int3
out
roll
sbb
cld
call
push
loopne
xchg
pop
ja
sbb
test
xchg
push
add
lock
aas
push
add
inc
xlat
sbb
std
cwtl
mov
gs
in
jmp
mov
mov
fsubl
test
and
out
dec
inc
fildl
mov
fiaddl
jl
lret
loopne
dec
jmp
add
aaa
xlat
and
cwtl
ret
fmuls
insl
rcpps
ljmp
scas
push
lret
sbb
movsb
insl
mov
xor
imul
xchg
movsl
repz
and
rcrb
push
mov
lods
movsl
cmc
and
ja
xchg
cli
and
jg
mov
jns
cwtl
mov
addb
cltd
loop
aaa
push
jmp
repz
mov
xchg
and
pushf
clc
call
in
icebp
dec
push
jnp
pop
push
jo
xchg
aaa
mov
ror
push
daa
add
mov
lret
data16
mov
pop
ret
adc
xor
sub
push
fldl
mov
cli
inc
dec
push
push
fldt
pop
idivl
xor
clc
cmp
mov
mov
bnd
in
xor
lcall
xchg
stos
fbstp
sbb
and
push
xchg
jle
add
xor
inc
xchg
std
mov
sub
mov
sub
pop
lock
xor
call
xor
je
fsub
test
sub
dec
dec
inc
ljmp
dec
arpl
mov
push
mov
nop
aas
inc
xor
jno
mov
nop
push
mov
in
pop
xchg
push
lods
jnp
cld
jmp
add
int
aam
sbb
jg
mov
fcomps
fs
imul
insl
int3
andl
mov
ljmp
ja
xor
or
jae
and
out
add
loopne
into
jmp
adc
fimull
nop
mov
and
dec
pop
aas
push
mov
add
xor
jno
mov
xor
mov
pushl
movsl
movsb
dec
cltd
stos
push
mov
rolb
adc
jge
push
mov
arpl
sbb
mov
test
xchg
or
xrelease
insl
push
jge
or
out
push
es
incl
dec
roll
inc
mov
fsubp
push
lds
addr16
push
fs
jmp
mov
in
pop
rcr
data16
pop
jl
nop
inc
std
push
xchg
das
sar
dec
jbe
xchg
in
pusha
ds
or
loopne
and
dec
repz
pushl
dec
xchg
test
cmp
cs
add
adc
lods
ss
fcmovnu
pop
shl
jmp
or
jb
in
aas
push
xchg
stos
mov
stos
arpl
or
xorl
pop
jg
movsb
jle
in
jns
sub
xor
fistpl
out
mov
hlt
jne
cmp
incl
shl
adc
xchg
sbb
dec
rcrb
dec
and
and
xchg
call
lret
or
mov
in
jle
jo
popa
mov
movsl
jo
xlat
cmp
pushl
or
adc
mov
add
mov
mov
cmp
mov
insl
outsl
out
push
xlat
ljmp
cli
push
sub
or
xchg
mov
pop
movsb
stos
add
xor
movsb
call
shrl
in
mov
pop
ljmp
loop
push
add
incl
sub
cltd
loopne
jno
xchg
nop
inc
mov
popa
mov
test
in
pop
icebp
std
incl
jecxz
jbe
and
cli
cld
arpl
xchg
mov
mov
push
pop
insl
jge
fdivrs
mov
notl
cltd
xor
inc
jmp
mov
inc
inc
sub
inc
into
cmpsl
pop
ja
sub
mov
decl
jmp
imul
imul
shrb
mulb
adc
call
xchg
iret
inc
es
test
and
cs
cs
or
in
sub
popa
pop
pushl
shlb
lcall
std
leave
jnp
std
addl
or
xchg
mov
fstps
std
mov
mov
call
and
xor
or
xor
dec
xchg
mov
xchg
addl
test
ret
in
cwtl
mov
jo
fcoml
iret
lock
push
adc
mov
aaa
cmp
js
bound
cmp
pop
aam
push
dec
arpl
cwtl
movsb
test
inc
addr16
mov
arpl
insb
jb
movsl
add
enter
sti
inc
add
addr16
jnp
mov
xor
jmp
pop
and
outsb
jno
sbbl
std
mov
dec
cwtl
in
test
loope
pop
add
call
xchg
push
stos
xchg
inc
scas
sub
js
sbb
jmp
inc
sahf
das
inc
rcll
cmp
mov
notl
ret
ljmp
mov
test
and
xor
decb
xchg
mov
mov
sub
xor
cmp
ret
fsts
test
popa
decl
jl
repnz
pop
mov
mov
clc
sub
dec
add
leave
aaa
je
add
incl
dec
mov
push
jns
insb
mov
dec
pop
ret
inc
cmp
stc
xor
loopne
outsl
cwtl
adc
bound
xor
testl
cli
in
adc
mov
test
int
pop
mov
insl
mov
lods
out
pop
sbb
scas
cmpb
mov
push
sub
aas
ljmp
lea
sub
mov
popa
lret
jg
ret
jg
call
add
and
xchg
rcr
or
inc
jecxz
popf
mov
std
push
mov
ljmp
fistl
les
push
dec
jmp
ficoms
xor
adc
ss
pushl
mov
jnp,pt
aad
ja
jo
popf
mov
jp
xchg
ret
andl
stc
in
sub
and
jmp
aas
jmp
or
lret
leave
add
dec
ficoml
pop
stc
or
xchg
mov
cld
inc
notb
outsb
sub
fs
lahf
cltd
into
inc
mov
test
xchg
not
pushf
sub
jmp
pushl
inc
mov
adc
mov
xchg
mov
stos
mov
loopne
dec
pushl
inc
push
aam
ret
add
lods
and
out
xchg
mov
fucomi
cmc
jnp
jb
cltd
jmp
dec
push
leave
xchg
decl
inc
pop
lods
mov
cmp
insl
xchg
mov
cmc
loopne
cmp
test
loop
sub
mov
xchg
cld
call
xorb
sub
jecxz
jmp
cmp
rorb
lret
mul
adc
call
xchg
jp
aad
xor
xor
add
jb
push
ljmp
clc
or
fwait
xor
push
out
xchg
xchg
mov
sbb
mov
cmp
sahf
inc
push
fldl
les
mov
push
pop
inc
cmpsb
push
lahf
movsl
fldcw
fcomip
decl
cmp
add
push
or
fildll
adc
rcl
mov
out
cli
pop
sub
jmp
mov
jb
cs
ss
divl
fbld
cli
xor
jge
sbb
push
push
loopne
dec
dec
adc
push
pop
dec
mov
ja
insl
aam
push
jmp
and
xor
jb
repnz
mov
inc
lret
add
fstp
fsubl
jae
int3
outsl
cli
pushl
icebp
lret
xchg
loope
lcall
cmpsb
in
cmp
icebp
call
daa
push
jne
std
loop
dec
dec
ret
sahf
sub
loop
mov
outsl
dec
xchg
or
decl
outsb
in
inc
dec
movsl
add
aad
jns
jmp
iret
andb
stc
pop
std
mov
cltd
jg
push
mov
outsb
xchg
sbb
sbb
add
cli
sub
test
cmp
call
scas
jp
sbb
and
and
mov
xchg
sub
cli
out
mov
adc
ror
ret
xor
cmc
mov
xchg
jmp
mov
data16
les
pop
or
inc
xor
outsl
pusha
mov
jle
sub
dec
xchg
mov
push
pop
push
xor
sub
push
into
decl
cmp
cmpsl
dec
jno
hlt
sets
mov
push
jbe
lea
pop
insl
mov
mov
call
and
inc
mov
rol
ljmp
sub
out
loop
jmp
jecxz
cli
add
hlt
jno
cmp
mov
dec
jne
sbb
xor
mov
sbb
jecxz
push
mov
mov
sub
into
dec
mov
hlt
call
shll
mov
add
loopne
or
lcall
mov
ss
pop
repnz
xchg
scas
stos
push
xchg
add
or
pushl
iret
shl
sub
ljmp
inc
cwtl
mov
xor
xor
jns
outsl
push
adc
test
cmpsl
xor
ja
stos
push
int3
cwtl
movsb
dec
cmp
dec
xor
fistpll
dec
in
dec
outsl
cmpl
jle
mov
or
loope
inc
push
jbe
xchg
lcall
rcl
and
fisubrs
xchg
pop
adc
popf
pop
push
rep
rolb
lods
cltd
push
call
fcomps
shlb
push
fisubs
pusha
pop
xchg
jbe
xor
add
mov
fcomp
adc
or
inc
int
ds
jmp
es
pushf
cmpsb
and
jne
lea
sbb
adc
mov
xchg
je
xchg
jg
jns
mov
pop
sbb
ret
sahf
lret
and
push
rcrl
in
sub
xor
js
sub
xorb
mov
popf
leave
sub
jmp
mov
xchg
aas
sbb
mov
insb
jge
or
daa
fnstcw
imull
leave
jle
sub
filds
dec
mov
add
sub
xor
movsl
cltd
mov
dec
ficompl
iret
sub
jecxz
aad
cmpsl
jnp
mov
push
sub
out
shlb
sti
lods
sti
cmp
adc
cld
jne
incl
lahf
ret
int3
push
shl
jae
jne
add
fcomi
outsb
mov
jbe
ljmp
les
popa
nop
in
xor
sbb
cld
icebp
sbb
test
imul
lcall
loopne
add
aas
fs
lret
pusha
dec
xchg
push
dec
pop
lret
call
adcb
jp
cli
clc
enter
int
cmpsb
leave
ja
mov
inc
add
out
fildll
flds
popf
frstor
and
pop
bound
and
push
in
sti
gs
ljmp
inc
sub
jmp
mov
js
or
lds
arpl
xor
arpl
dec
int
xchg
pushl
sbb
mov
call
push
ret
xchg
mov
inc
lcall
out
pop
ret
into
popa
xchg
fsubr
shrb
xchg
aad
xchg
mov
mov
or
pop
add
lcall
jmp
mov
xor
es
push
cmp
test
or
fs
loop
imul
cmp
cmp
push
fildll
cmpsl
sbb
push
cmp
mov
add
pushl
pop
push
xchg
fistps
inc
adc
and
jbe
repz
stc
aas
jae
cmpsb
push
sahf
mov
icebp
and
dec
jle
cmpsb
daa
cmpsb
mov
or
jg
jg
inc
xchg
cmp
sbb
add
fcompl
jns
loopne
jno
dec
lret
clc
dec
mov
test
jmp
xor
pop
mov
and
icebp
fsubs
insb
aad
adc
sbb
fildll
cs
sbbb
and
inc
cwtl
gs
push
cmp
sbb
ljmp
mov
sbb
add
mov
lock
adc
or
call
pop
jno
xor
sbb
or
sbb
jl
jg
cs
ds
repnz
pop
js
xorl
cli
pop
jg
add
ret
rcl
mov
imul
rorl
cmp
sarl
mov
pushl
push
int
mov
or
sbb
mov
int3
dec
pusha
xor
call
loop
xor
ds
jns
xchg
push
pop
cmp
sbbb
sbb
pop
add
cltd
lahf
stos
jg
loopne
cmp
pushf
incl
sub
and
andl
jb
cmpsb
loopne
mov
je
pop
mov
push
insl
je
mov
mov
and
add
add
push
pop
pushf
push
cmpl
and
pop
xchg
pop
cmc
pop
cli
divb
out
out
mov
lret
data16
jns
or
jns
fsubr
jmp
js,pt
mov
mov
scas
mov
jg
jmp
cli
ret
xor
lods
inc
daa
xchg
loopne
xor
cmp
fcom
inc
ljmp
cmc
outsl
or
xor
lahf
test
icebp
or
lahf
aad
sbb
pop
lock
testb
mov
sbb
mov
and
xchg
lds
fcomip
push
adc
xchg
hlt
jmp
mov
dec
leave
xor
ret
mov
adc
clc
mov
sbb
pushl
push
ret
fnsave
dec
in
push
shlb
jo
push
fadds
sti
sti
dec
xlat
inc
or
call
in
data16
xchg
out
inc
iret
adc
sti
sbb
cli
sbb
stos
in
adc
mov
xor
push
inc
rcrl
fstl
dec
ja
inc
dec
aas
push
and
jle
test
es
cmp
stos
outsl
pop
cmpl
pushl
lret
rsqrtps
shll
inc
inc
and
ss
cli
mov
mov
mov
xor
popf
mov
in
cmp
sub
fists
dec
ds
addr16
enter
ljmp
sub
lcall
push
sbb
xor
aam
sahf
enter
call
lcall
loope
insl
xor
arpl
inc
pop
cmp
xchg
jae
or
xchg
adc
out
pop
adc
add
decl
lods
mov
call
sub
icebp
lret
push
push
loop
stos
rorl
xchg
bound
jecxz
incl
hlt
loop
jmp
dec
ljmp
adc
cmpsb
pop
pop
bound
scas
or
pushl
jge,pn
stos
xchg
fcompl
xor
xor
xor
jmp
enter
xor
movsl
sbb
add
cltd
xchg
push
xchg
push
pop
lret
cmc
inc
push
inc
mov
shrb
xorl
jno
mov
push
fdivs
cmp
pop
and
cmpsb
loop
jg
leave
cmpsl
pop
hlt
add
mov
adc
inc
or
jle
out
les
jg
loopne
push
das
xor
cmpsb
inc
mov
add
lahf
fs
ds
or
nop
mov
jmp
push
sbb
inc
inc
mov
test
mov
xchg
mov
aas
sub
in
ljmp
hlt
fnstsw
xor
and
faddl
lods
jns
pop
and
jg
xchg
push
loop
nop
xchg
jae
push
and
xor
ds
dec
sub
incl
dec
test
sub
xchg
addr16
cmp
lods
inc
or
fistps
faddl
decl
andl
mov
out
cmpsb
pop
fisubs
lcall
call
mov
jp
pop
adc
pop
or
in
rclb
xchg
je
jg
flds
clc
mov
jo
and
mov
sub
mov
adc
pop
and
cld
shll
into
clc
loope,pt
push
shll
movsb
xor
std
or
pushl
sbb
das
inc
cld
mov
pop
cmp
ss
movsl
push
mov
xchg
push
mov
aad
mov
inc
inc
jecxz
and
in
aad
sbb
pop
jp
sbb
loope
rolb
push
push
xchg
push
aas
mov
mov
icebp
inc
cltd
inc
sbb
iret
movb
subb
pop
push
movsl
and
mov
jg
xchg
inc
mov
sbb
adc
leave
popf
or
insb
test
decl
add
test
mov
scas
mov
inc
mov
push
and
test
pushf
xor
mov
into
ret
and
in
add
popa
lret
icebp
ja
aaa
xchg
push
es
push
mov
mov
lcall
or
stc
movl
sbb
or
gs
inc
xchg
push
mov
pop
pushl
orl
jl
and
sbb
cwtl
lock
xorl
xchg
andl
aaa
roll
ret
out
les
pop
ss
lock
adc
mov
jmp
mov
or
insb
push
stos
xor
nop
inc
pop
pop
sbb
int
cli
popf
xor
ss
decl
mov
sbb
fcoms
sub
mov
mov
fisubrl
pop
jmp
and
mov
dec
add
cmp
fs
xchg
xchg
push
outsl
adcl
add
mov
pop
loopne
inc
xor
lcall
es
pop
pushf
xorb
add
test
call
push
mov
jl
cmpsl
sbb
std
imul
and
daa
push
adc
pushl
add
xchg
dec
pop
rcl
mov
movsl
loope
or
cmp
pop
xchg
idivl
mov
sahf
lds
xor
lcall
lds
cmp
cmp
jle
inc
sub
cmpsb
xchg
jmp
lcall
pushf
lea
push
loopne
adc
add
loopne
mov
adc
sub
xchg
pmaxsw
jg
xchg
test
add
fimuls
and
sti
push
adcb
ret
cld
icebp
mov
insl
mov
or
mov
cld
adc
push
aaa
lock
jl
stos
push
jno
fbstp
fnstcw
fildll
or
lock
cmp
std
pop
cmp
jnp
js
sbb
xor
das
inc
pop
cmc
aaa
xor
lcall
jno
mov
inc
push
sbb
outsb
imul
roll
inc
or
jmp
je
mov
jno
movsb
pushf
pop
inc
push
notl
xchg
je
or
test
ja
pop
fldenv
pop
jmp
sahf
das
adc
push
jmp
sbb
pop
jb
or
daa
push
adc
jmp
das
loope
aaa
sbb
fwait
dec
pop
sbb
insb
clc
dec
mov
jnp
aas
aad
jns
mov
je
fcomip
incl
lret
mov
sub
xchg
mov
insb
inc
cmpsl
in
push
mov
incl
decl
nop
lock
cmpb
aaa
inc
addr16
mov
xchg
cmp
or
arpl
shrb
decl
inc
cmp
mov
push
lock
mov
test
incl
out
cmp
and
lret
arpl
gs
mov
xor
aad
ljmp
pop
and
xor
movsl
roll
cmc
fisubrl
fsubrp
jmp
cli
jmp
hlt
or
clc
incl
loopne
add
or
sti
and
fmul
sti
or
cmp
outsb
xlat
adc
rcr
mov
iret
cmp
push
imul
popf
andb
push
cmp
inc
movsb
jno
add
notb
pushl
lds
ret
out
lret
lods
lretw
push
sub
mov
lret
cmp
std
ljmp
push
or
adc
popf
cmp
mov
les
mov
ret
out
rclb
call
mov
mov
push
out
and
cmp
sbb
and
xchg
aas
outsb
jmp
adc
iret
out
add
pop
aas
iret
cbtw
xchg
push
mov
xchg
scas
mov
ficompl
lcall
push
test
rcll
popf
cld
out
mov
scas
aad
jbe
lret
push
xor
xchg
lcall
subl
sbb
mov
nop
dec
add
sbb
pop
jbe
ljmp
lods
lcall
pop
in
in
aaa
jne
mov
decl
sahf
and
test
aad
test
mov
fcomi
mov
fs
decl
test
jno
sahf
add
adc
lahf
xor
xor
adc
aam
call
inc
sub
xchg
jae
icebp
out
cmpsl
xchg
inc
mov
inc
push
pushl
mov
pop
or
loop
fstpl
sub
aam
cmp
fistpll
scas
ds
dec
mov
gs
inc
xchg
mov
or
inc
sbb
xchg
cwtl
jb
movsl
imul
decl
je
pop
fbstp
lock
mov
inc
sub
test
movsb
push
cli
pop
ja
cli
lcall
xor
repnz
shlb
inc
cld
call
pop
popa
adc
test
addr16
sahf
pop
mov
lahf
orl
call
jmp
arpl
or
loope
dec
mulb
inc
ret
or
mov
ljmp
into
jo
adc
push
sti
imul
test
adc
nop
adc
jl
mov
jae
adc
adc
dec
cwtl
dec
dec
pop
ljmp
sbb
decl
or
pop
ret
and
push
jmp
stos
in
pop
dec
out
int
ljmp
jne
adc
cmc
and
ficoml
mov
mov
jp
imul
jmp
stc
jge
test
into
lret
jmp
mov
mov
xchg
ret
sahf
mov
stos
test
rcr
ss
xor
shlb
jl
dec
mov
cmc
inc
sahf
xchg
subl
dec
push
or
in
cmp
ds
jecxz
mov
ss
adc
dec
jp
mov
aaa
dec
leave
add
mov
adc
lods
ret
mov
inc
arpl
inc
rcl
inc
insl
mov
mov
mov
mov
movsl
adc
push
loope
leave
dec
pop
xchg
dec
mov
push
sahf
cli
cmpsb
int3
inc
mov
cmpsl
mov
push
iret
mov
enter
faddl
xchg
in
and
xchg
decl
mov
or
and
xchg
mov
popa
scas
hlt
repnz
jg
jmp
fists
xor
cmp
rcrl
repnz
mov
dec
test
arpl
jmp
xchg
mov
ror
dec
shll
lret
fistl
cmp
mov
or
sahf
gs
push
fwait
inc
popf
xchg
fcompl
pop
adc
cwtl
sar
jmp
test
jp
jecxz
push
out
xchg
out
and
sahf
mov
jg
sub
jg
mov
adc
adc
add
lock
fs
mov
push
popa
pop
cmp
push
rcrb
cltd
mov
jle
lods
xor
lcall
call
sub
pop
dec
xor
add
fimull
push
test
pusha
cltd
inc
add
dec
push
das
daa
or
lea
call
scas
ja
push
mov
loope
icebp
repnz
push
incl
iret
mov
jmp
jno
dec
mov
addb
outsb
call
clc
leave
mov
pop
push
jge
sbb
fcoml
lahf
xchg
pusha
lcall
jg
xchg
xchg
incb
fldcw
add
and
sub
inc
fildll
cmc
fstpl
adc
xor
sbb
repz
sbb
add
fisubrs
jnp
dec
xchg
mov
mov
sbb
popf
inc
mov
loopne
sbb
loope
sbb
pop
cmpsb
clc
pop
fwait
mov
mov
lcall
sti
inc
sub
sahf
leave
outsl
lret
clc
cmp
ss
call
add
adc
or
mov
push
jmp
dec
cmp
jbe
inc
aad
pushf
int3
cmpsl
jge
sbb
cwtl
lret
sbb
or
decl
ret
cs
dec
lods
pop
dec
add
push
sbb
inc
dec
imul
xor
fsubs
ud2
or
pusha
stos
jae
ud0
call
push
das
std
jge
js
lock
rorb
adc
push
aaa
fwait
jo
pop
pminub
dec
mov
pushl
jmp
je
pop
stos
mov
sti
add
sub
subl
inc
sbb
fcomip
call
pusha
push
js
sub
inc
popa
cmp
fstp
add
decl
cli
shll
mov
sub
xchg
ljmp
shlb
sahf
ja
lahf
inc
xchg
add
bound
dec
aaa
lcall
cltd
in
popa
sahf
xor
and
mov
inc
stos
mov
add
mov
pushl
mov
xchg
jo
cmpb
les
lods
pop
xchg
mov
addr16
fcmovb
push
cmp
mov
test
push
mov
mov
mov
jno
stos
lcall
pop
imul
js
decl
aaa
mov
pop
notrack
adc
push
cld
popf
push
push
mov
xor
xchg
call
fisubl
add
xchg
dec
dec
aas
pop
mov
mov
popa
cmc
into
sbb
fcomp
dec
cmp
ljmp
dec
cmpsb
dec
int
data16
loope
jno
mov
int
and
addl
dec
sti
xchg
mov
lahf
pop
cmpsb
iret
push
popf
loopne
fxch
dec
cs
push
pop
cld
fwait
insb
iret
xor
scas
jg
add
insl
xchg
dec
push
outsb
adc
lea
jmp
ljmp
sar
ficomps
mov
out
out
sub
ljmp
add
nop
stos
push
int3
ljmp
push
pop
mov
sub
jo
lahf
jnp
sahf
mov
dec
pop
xchg
adc
push
out
sbb
jmp
jge
into
sbb
les
dec
loopne
ror
fidivl
dec
inc
dec
and
aam
and
mov
xchg
jle
insb
fnstcw
data16
test
fldt
call
jno
push
adc
gs
insl
test
fwait
lcall
decl
dec
addr16
mov
mov
add
add
stc
dec
lods
dec
test
cmp
incl
push
jno
test
mov
pop
dec
cwtl
xor
jae
jecxz
gs
fcomps
out
pusha
mov
scas
sub
adc
lret
jg
int
aas
xor
aam
aas
jns
mov
cmpsl
push
mull
jmp
inc
ljmp
mov
sti
lock
arpl
dec
cmp
stc
lahf
mov
insb
mov
cmp
into
fcoml
xchg
inc
or
mov
sub
mov
xchg
sub
movsb
lahf
sub
dec
sahf
int3
push
jo
pop
jle
jl
push
add
cmp
cmc
xorl
call
pop
int
xorl
outsb
aaa
and
fwait
or
push
or
out
cli
call
sbb
pop
inc
jle
sbb
std
add
or
or
cltd
push
jae
fcomip
pop
repz
jmp
icebp
icebp
je
push
mov
idiv
pop
xchg
mov
dec
or
sub
pop
or
jnp
or
jne
bound
loop
ficomps
outsb
or
push
mov
pop
cmp
aaa
dec
mov
jp
dec
dec
sahf
lods
xchg
pop
push
js
jae
and
sar
mov
idivl
sub
imul
ljmp
fisttps
inc
cmp
jecxz
cmp
outsl
lods
cmpsb
and
ss
cli
mov
decl
std
xor
and
pop
aas
sub
cmpsl
and
orb
push
leave
xor
jmp
ret
test
jb
and
jle
and
incl
lods
xchg
sub
out
scas
cwtl
push
mov
mov
test
scas
adc
jns
sub
jmp
sti
js
add
sub
mov
pop
addr16
outsb
inc
adc
filds
mov
pop
fstpt
add
mov
jmp
jb
notl
xor
add
sti
dec
jge
inc
ret
lret
shrb
inc
pop
or
mov
sub
sub
pusha
stos
xchg
ss
ret
push
pop
daa
hlt
push
push
pop
nop
mov
fsubs
fimuls
bswap
jmp
xchg
cli
pushf
sbb
or
cld
rcrl
jecxz
nop
sub
out
add
mov
pop
adc
fidivrs
pop
adc
xchg
lret
icebp
xchg
xchg
pushf
pop
mov
fwait
decl
mov
mov
sub
xor
adc
testl
and
ljmp
sub
xor
or
jo
out
mov
frstor
loop
int3
add
clc
out
xchg
std
in
mov
daa
bound
xlat
js
cmp
in
xchg
lret
push
or
sub
xchg
xchg
push
lret
xlat
xchg
jno
arpl
jge
or
imul
sub
xor
in
push
andl
xorb
xchg
add
cmp
out
xlat
ror
aad
sub
cmp
push
xchg
or
cs
mov
fs
jmp
imul
jnp
cmpsb
cmc
mov
mov
dec
cmp
jno
lock
outsb
fadd
cmpsb
leave
aaa
movsb
fstl
mov
enter
mov
lcall
popa
ficompl
int
mov
mov
scas
mov
jecxz
lcall
pusha
scas
aad
stc
cli
dec
in
push
scas
sub
push
lcall
test
imul
sub
dec
pop
in
js
fs
inc
inc
inc
push
mov
adc
sahf
inc
mov
xlat
sub
insb
movsb
sub
mov
gs
enter
jmp
dec
sub
push
into
mov
add
rolb
xchg
sub
call
sub
mov
pop
xor
jb
xor
ret
cmovae
ret
jnp
fsubs
faddl
pop
enter
cmc
xchg
jmp
inc
inc
lea
aas
shl
pop
push
lods
fistpll
mov
push
cwtl
ret
push
push
sbb
pop
mov
jmp
icebp
jnp
hlt
xchg
mov
shrl
lcall
stos
push
xchg
stc
mov
test
sahf
fnstcw
push
and
mov
aas
sub
pop
ljmp
lods
cmp
mov
cmp
outsb
xchg
push
cmp
movsl
fwait
mov
incl
std
mov
jns
dec
int3
filds
or
jmp
ljmp
icebp
cld
cld
or
fcom
push
arpl
cltd
addb
jle
stos
xchg
scas
fisubrl
cli
pop
std
sbb
sub
ja
mov
pushl
add
call
and
rolb
lcall
sarl
lcall
clc
das
jge
fcomps
lds
mov
arpl
pop
dec
int
ljmp
dec
cmp
into
jl
sub
dec
xor
stos
bound
mov
incl
add
sbb
mov
jmp
xor
adc
imul
push
sti
incl
mov
push
push
mov
push
adc
pushf
mov
inc
and
xor
pushl
xchg
in
adc
xchg
daa
stos
cld
js
negb
test
inc
mov
outsl
jg
incl
xchg
imul
push
or
or
imul
sub
dec
jbe
sub
movsl
cmpsb
lods
sahf
push
jge
dec
cmp
rolb
clc
decl
negl
out
push
add
dec
mov
nop
test
scas
or
lcall
out
insb
loope
add
arpl
jle
pusha
sbb
pushl
movsl
dec
jne
call
imul
cld
jecxz
jns
and
mov
test
mov
test
rclb
cmp
sub
dec
mov
push
cmp
sbb
sbb
out
and
lcall
mov
xchg
bound
add
pop
or
xor
cmp
stos
rclb
dec
andl
sahf
dec
cld
jo
pop
insb
shl
das
shlb
cmp
movsb
test
cmpsl
pop
xchg
sub
fbld
mov
shlb
or
pop
sub
sbb
dec
incl
clc
lock
insl
fldcw
adc
adc
mov
sub
jmp
dec
push
xor
les
push
js
cwtl
sub
or
jmp
sbb
sub
ss
stos
or
mov
pop
inc
aas
xchg
orb
jmp
jb
rolb
xchg
sarb
cmc
and
mov
jge
cmp
imulb
push
outsb
fists
jp
add
adc
shl
call
call
cmc
jle
popl
into
pop
gs
push
mov
dec
repnz
out
rolb
out
clc
push
mov
inc
pop
cmp
sub
pop
sbb
mov
fildl
lret
lret
fcmovb
xchg
stos
iret
jne
cmpsb
jmp
push
out
pop
pop
xchg
fcomip
sub
das
jg
aas
cld
imul
sbb
jne
mov
cs
jo
call
mov
roll
push
xchg
fisttpll
inc
loopne
ja
dec
pop
sub
dec
sahf
cmc
sti
aaa
push
mov
and
ja
push
mov
push
lahf
push
js
int3
dec
arpl
jmp
ljmp
nop
push
and
imul
negl
xlat
stos
data16
mov
das
dec
addr16
inc
decb
mov
icebp
ja
jo
movsl
xchg
dec
ret
mov
cmp
andl
pop
or
pop
mov
mov
aas
call
ja
adc
aam
insl
add
xchg
pusha
aad
lret
in
stos
lcall
push
jbe
addl
icebp
lret
pop
and
dec
outsb
mov
inc
adc
push
jae
xlat
lret
mov
jnp
imul
ret
in
add
jp
or
mov
inc
ljmp
push
insl
adc
cmp
mov
ss
adc
shr
ret
add
shll
cwtl
clc
ljmp
cmpsl
insb
jge
fwait
test
cmpsb
and
aam
fidivrl
mov
add
cmc
out
push
jns
xor
inc
push
xchg
pop
pusha
xchg
lret
js
stos
pop
adc
orl
jp
loopne
push
push
ficoml
rcl
push
sbb
shrb
xor
call
insl
pop
popa
paddd
cs
xor
loope
adc
lock
dec
or
add
mov
test
add
insb
mov
test
lods
lcall
fldcw
push
mov
call
xor
pop
mov
js
jle
xchg
mov
repnz
jbe
hlt
jl
movsl
fdivrp
call
aad
mov
and
icebp
cmp
adc
popf
ja
sub
decl
sub
test
pop
inc
insb
adc
and
icebp
ljmp
int3
jp
stc
sar
sub
out
loop
push
popf
push
push
add
ljmp
popf
fadd
or
je
popa
sbb
lea
sti
dec
aaa
jbe
xchg
lcall
inc
mov
out
icebp
enter
push
scas
inc
icebp
cmc
pushf
lods
pushf
sbb
test
call
std
push
mov
ret
inc
pop
push
ret
mov
fistpl
cs
pop
aas
movb
inc
cld
jmp
cmp
pop
fdivs
notl
cmpsb
mov
test
mov
pushl
push
or
pop
test
jbe
js
mov
inc
in
cmp
xchg
and
ret
xchg
lcall
and
inc
packssdw
mov
ljmp
add
adc
stc
mul
or
xchg
aad
push
icebp
call
js
pushl
jge
imul
xchg
inc
rcl
or
sti
cli
das
in
mov
sub
lcall
dec
xor
dec
sbb
out
pop
sbb
xchg
jecxz
test
xor
adc
or
mov
jmp
pop
es
in
mov
test
ficompl
sbb
ljmp
push
jle
lahf
add
and
dec
fstpt
lahf
pop
cmpsl
mov
xchg
xchg
es
call
std
imulb
testb
in
mul
clc
outsb
divl
push
mov
ljmp
lods
lods
add
dec
cli
mov
fs
dec
add
cs
cmp
inc
mov
mov
ljmp
mov
jmp
adcl
loope
iret
lcall
sub
call
sarb
sub
or
mov
std
xchg
cmp
pushl
pop
sbb
mov
jns
xchg
cs
ljmp
imull
add
pop
or
decl
ror
adc
fsin
mov
xchg
stc
aam
xchg
dec
shlb
mov
lock
pop
adc
inc
hlt
ljmp
mov
test
xchg
das
lods
pop
pushf
jne
xor
jno
fdivp
adc
jno
nop
jo
decl
pop
les
into
aam
insl
cs
hlt
test
sub
or
pop
aaa
mov
lcall
inc
pusha
cmp
lahf
xchg
sub
pop
add
es
test
inc
int3
lcall
push
or
repz
and
pop
mov
into
or
xchg
call
jecxz
jg
out
sub
jbe
out
add
daa
dec
sub
fsubrl
mov
ljmp
cmp
rcl
cmp
dec
pop
enter
xlat
add
cld
push
sbbl
stos
out
lock
loop
mov
clc
decl
inc
icebp
push
push
cmc
mov
jo
jbe
arpl
mov
gs
test
fistpll
sbb
std
pushl
movsl
lods
push
jb
movsl
mov
sub
out
sbb
mov
jnp
loop
jle
jg
add
adc
into
icebp
pushf
roll
fdivl
clc
jmp
imul
inc
pushf
rcrb
mov
or
mov
sti
and
lods
xchg
leave
out
lret
ja
movsb
inc
sbb
cmp
jo
stos
inc
icebp
jb
es
ja
add
jb
sub
add
rcrb
and
push
in
mov
scas
jg
xchg
pop
push
fld
and
mov
fwait
and
jmp
sbb
lret
add
xchg
adc
xor
add
test
xchg
insb
mov
mov
sbb
jg
add
incl
cmp
sub
es
outsl
jge
xchg
mov
xchg
xchg
ss
jg
push
in
adc
mov
mov
or
jge
dec
and
mov
sti
dec
loope
lcall
dec
clc
xor
insb
ja
lds
call
mov
push
inc
cs
cmp
insb
stc
mov
push
scas
or
fsubr
sub
cmp
pushl
and
out
fnsave
mov
mov
add
in
adc
mov
or
dec
mov
insl
repz
stos
sar
ljmp
add
jbe
jmp
sub
xor
mov
mov
gs
xlat
mov
leave
in
mov
imul
sub
push
pop
push
arpl
clc
lahf
mov
xchg
sar
incl
fnstenv
int3
cli
std
jge
loop
mov
xor
lahf
sti
cmp
hlt
jg
stos
pusha
aad
fiadds
ljmp
insb
imul
das
clc
push
adc
pop
aaa
in
mov
je
decl
push
pop
pushf
mov
sub
dec
pop
or
adc
lahf
ljmp
lahf
push
shrb
cmp
xor
addr16
scas
inc
jle
icebp
notl
pop
jp
js
lret
int3
inc
aam
sub
jo
dec
cltd
iret
out
push
fmull
xor
sbb
call
ljmp
pop
out
push
mov
jae
mov
insl
out
leave
dec
mov
xor
es
pushf
jmp
jge
cltd
cmpsl
ret
out
dec
dec
or
dec
inc
mov
int3
lods
insl
xor
push
incl
xor
jbe
jnp
add
jecxz
inc
inc
ja
jge
rclb
cmp
out
call
pushl
sbb
movsb
movsl
stos
inc
sti
ljmp
push
xchg
xchg
hlt
mov
adc
sbb
cli
sbb
pushf
sbb
imul
lea
jge
mov
sahf
movsl
inc
fs
adc
cmpsb
aas
fcoms
sbb
pop
and
ljmp
mov
xlat
inc
adc
sbb
stc
aaa
push
or
aas
xchg
incl
lret
shll
mov
in
test
sahf
int
jmp
or
jmp
push
enter
push
call
fmull
or
sub
in
aad
jno
insb
pop
out
xlat
sub
jmp
add
xchg
adc
lahf
adc
cld
es
js
sarl
xchg
cmpsb
into
jp
icebp
sar
call
pop
ret
hlt
out
aas
adc
out
test
in
xchg
pushf
aad
loop
and
sub
fildll
or
jmp
pop
adc
loope
pushl
jnp
les
and
cmc
xlat
movsl
xchg
ljmp
mov
pop
popa
cmp
mov
int
out
xor
stc
jmp
leave
xchg
push
and
inc
arpl
add
inc
call
hlt
clc
jb
sub
dec
pop
pusha
adc
mov
pop
push
dec
mov
ss
pushl
add
jo
pop
fimull
push
lret
pop
jp
scas
sar
jg
mov
stc
pop
pushf
and
jno
lret
jae
mov
and
adc
and
lcall
mov
xchg
xor
cmc
fsubrp
dec
xchg
pushf
movsl
push
js
adc
dec
test
ja,pn
inc
out
rcrb
fwait
jmp
insb
in
add
sub
pushf
mov
push
outsl
pushl
push
pop
jae
push
fisubs
mov
int
faddl
andb
icebp
xchg
inc
or
inc
cmp
inc
pop
fdiv
xchg
sar
mov
add
pop
pop
cmp
stos
stc
int3
cmp
popa
push
sbb
ficoms
aad
adc
jg
mov
lcall
fsubr
or
jo
inc
std
mov
cmp
push
mov
leave
dec
icebp
and
cld
jmp
adc
mov
popf
mov
call
xchg
mull
mov
movsb
or
mov
or
or
push
mov
incl
andb
popa
sub
or
pop
cmp
and
pop
inc
adc
sbb
mov
pop
call
in
nop
popf
jo
in
arpl
and
lods
cmp
dec
inc
outsb
fdiv
xor
push
mov
ret
int
mov
mov
fs
push
jmp
and
and
mov
movb
outsb
int3
inc
cmpsl
inc
aaa
cmc
scas
sub
rorb
lods
enter
in
in
shlb
loopne
cs
adcb
inc
fnstcw
mov
outsl
push
fcomip
jbe
imul
xchg
push
rorb
cmp
push
add
and
icebp
lcall
jae
mov
les
aaa
mov
and
mov
push
cld
outsl
sbb
hlt
fldt
push
inc
dec
dec
lods
shl
or
stos
push
jbe
popa
inc
lcall
add
scas
push
ficoms
jmp
into
stc
leave
aas
pop
push
lret
mov
enter
mov
inc
jbe
in
mov
ljmp
into
inc
push
popf
fcmovbe
sbb
push
mov
mov
cmp
pop
cmc
mov
sub
lahf
jmp
lcall
ja
jo
std
pop
or
adc
out
mov
cs
stos
enter
pop
jae
movsb
jb
mov
fcomip
test
insb
insl
in
lret
ljmp
xor
pushl
mov
mov
jl
sahf
insl
jge
cmp
daa
fists
popa
popa
mov
fdivr
dec
insl
mov
int
sbb
cltd
inc
cmp
sbb
jge
jle
aam
mov
push
add
cmp
repz
inc
neg
inc
jo
ljmp
adc
mov
add
popa
pop
mov
xchg
pop
jbe
ret
dec
jmp
xlat
jp
sti
repz
rolb
movsl
mov
adcb
push
sar
mov
fs
mov
xchg
mov
cwtl
testb
sbb
mov
cmpsl
xor
dec
xchg
nop
inc
and
fbld
lds
outsl
sub
ret
mov
hlt
rep
lcall
mov
pushl
xor
xor
scas
jecxz
xlat
add
mov
sub
stos
jnp
push
lcall
es
out
xchg
mov
cmc
gs
sub
out
sub
push
jecxz
popf
cmpb
insl
aad
fdivrl
fnstenv
incl
call
jbe
cli
xor
push
jmp
cmp
sub
cmp
mov
jl
sub
lret
sub
lds
or
push
movsb
dec
or
int3
sbb
out
xlat
pop
ja
subl
inc
xchg
and
mov
sub
cmp
shrl
cmp
std
loop
push
jmp
xchg
push
aad
mov
in
clc
cmp
inc
dec
scas
mov
test
ljmp
adc
push
insb
mov
cs
jne
adc
xlat
sbb
rcrb
sbb
mov
sub
add
call
cld
mov
xchg
or
cmp
pop
mov
xchg
lcall
fmul
dec
pop
jg
add
mov
je
popf
dec
mov
iret
into
in
aad
aas
loopne
ljmp
neg
xor
ds
cmp
cmp
lcall
and
decl
lock
mov
xchg
dec
dec
gs
xchg
push
stos
lea
sub
dec
jp
mov
clc
cli
inc
test
imul
addr16
cmp
in
and
sbb
jg
add
gs
or
out
and
mov
lea
call
and
inc
cs
xchg
cmp
xor
dec
call
mov
int
mov
das
pop
adc
xor
adc
add
cmp
aaa
rcll
jmp
adcl
ret
mov
fimuls
cmp
pushl
sub
aam
mov
xchg
arpl
jg
fucomip
ljmp
dec
aas
mov
pop
cmp
decl
jl
shll
lcall
inc
ja
mov
jg
or
mov
cmc
adc
jo
iret
sbb
sub
aaa
lcall
xchg
xchg
add
and
xor
stos
xchg
mov
xor
sub
insb
push
call
loope
add
push
push
jno
pop
js
inc
jl
mov
cmp
popf
push
ret
jmp
cmp
mov
popa
pop
rdpmc
dec
leave
sub
fldl
loop
rcl
xchg
cwtl
not
cld
mov
adc
mov
inc
andl
xchg
aam
push
or
aam
xchg
adc
movsl
xchg
outsl
dec
pop
push
jmp
js
sti
pop
std
push
insl
daa
jge
pop
in
adc
repnz
hlt
adc
dec
sahf
movsl
data16
or
mov
add
mov
fidivrs
jg
out
ret
fisubs
aaa
or
pop
jp
dec
jo
or
xchg
das
std
inc
test
nop
shlb
in
mov
test
mov
aaa
pop
dec
jmp
mov
fisubl
pop
push
lcall
add
scas
add
std
iret
xchg
incl
scas
pop
fucom
push
inc
push
xor
mov
inc
lcall
jbe
rdtsc
xchg
cmova
bound
inc
mov
test
dec
es
lcall
push
lea
fadd
repz
jecxz
ret
and
and
hlt
ror
push
cld
pop
and
incl
adc
jmp
push
ret
push
imul
insl
sbb
test
ret
lods
ret
stc
fcompl
mov
sbb
lcall
push
xchg
fidivl
hlt
subb
pop
subb
sbb
out
movsl
push
jl
push
repz
push
pusha
xchg
pop
dec
fidivrs
jmp
cmc
aad
mov
xor
popa
push
testb
xor
xchg
cmp
mov
pop
add
dec
xchg
ss
cmc
cmp
sub
int3
mov
jb
xchg
fcmovnu
test
sahf
jb
mov
lahf
outsb
jno
dec
xor
call
lcall
mov
cmp
hlt
push
and
out
ljmp
push
test
jg
add
iret
sti
aam
cltd
pusha
iret
js
out
add
cwtl
jmp
ret
dec
or
shlb
pop
sub
pop
or
xchg
clc
mov
cltd
decl
mov
mov
pop
sbb
icebp
jae
inc
pusha
add
push
xor
cmp
cmp
lcall
xor
lret
in
dec
mov
adc
popa
scas
cli
sbb
or
mov
icebp
sbb
std
popf
mov
mov
pop
mov
incl
hlt
nop
popf
jae
mov
dec
in
mov
adc
pushl
mov
xchg
mov
and
in
push
lods
incb
jg
in
cs
out
mov
int3
iret
mov
cltd
xor
mov
adc
outsl
mov
mov
dec
dec
or
adc
fdivrl
mov
das
clc
decl
lods
scas
pop
pop
and
repnz
cltd
jmp
jo
out
call
loopne
push
cs
mov
jae
push
xor
mov
cmc
push
mov
mov
pusha
cmp
push
add
test
call
cmpsl
scas
push
push
jne
lcall
adc
adc
sti
les
fld
sbb
sbb
mov
jmp
daa
test
or
movswl
ret
nop
mov
push
or
ret
and
jmp
mov
nop
fidivl
pop
test
lods
shlb
ret
dec
xor
stos
sbb
mov
fisttps
adc
xor
xchg
add
jmp
pop
jge
sub
jge
sub
fsubs
mov
ret
mov
lahf
cmp
stos
fsubrp
adc
mov
dec
sub
cltd
outsb
xchg
std
stos
mov
addr16
jg
scas
push
cmp
push
pop
jns
dec
test
pushf
lods
ja
sti
fmuls
incl
and
jl
int3
aas
sub
dec
out
cwtl
into
aaa
sub
jl
sbb
cli
or
scas
subb
xor
inc
pop
lcall
call
xor
jno
popf
negl
add
dec
inc
cmp
cmpsl
cmp
jp
ja
sub
cli
out
cli
inc
mov
fnsave
bound
jmp
andl
aaa
sbb
decl
pop
mulb
ficomps
jmp
jno
bound
push
pop
mov
push
ret
push
xor
dec
sbb
push
mov
call
ljmp
mov
sub
fadds
sub
in
aad
mov
in
addr16
push
add
mov
mov
out
add
icebp
out
mov
adc
decl
iret
push
into
and
por
stc
mov
adc
icebp
rcrb
cmp
lea
pop
sbbl
stos
mov
int3
sbb
or
push
ljmp
lcall
stc
je
mov
xor
mov
mov
cld
pop
rcrb
stos
out
sub
call
lock
sub
mov
inc
in
cwtl
mov
lret
jg
mov
sahf
ret
int
pop
jge
arpl
dec
loopne
and
fldenv
cltd
loop
decl
sub
sahf
and
mov
xchg
loope
pop
mov
ss
cmpsl
stos
sbb
xchg
push
jg
jmp
and
out
cli
cmp
fstl
and
push
popf
push
cmp
incl
xchg
ret
mov
and
sarl
imul
insl
call
mov
lock
inc
aaa
test
shll
xchg
sub
push
mov
xchg
mov
sub
or
add
std
add
mov
nop
push
in
jmp
add
imul
ljmp
mov
jle
mov
pop
loopne
jmp
andl
scas
cmp
jmp
mov
mov
aaa
mov
imul
add
call
repnz
jp
sub
adc
pop
adc
aam
out
hlt
scas
adc
dec
pop
mov
sbb
xchg
stc
mov
or
mov
inc
xor
cmc
fwait
xor
cltd
adc
mov
gs
jg
call
add
mov
sub
lcall
fsts
ljmp
and
aas
add
ja
jne
cwtl
in
test
mov
cmc
or
mov
dec
pop
and
fsts
int
jmp
std
adc
loopne
fldl
cmc
mov
aaa
aad
push
insb
das
xor
ljmp
stos
outsb
pushf
jne
lcall
add
mov
std
test
in
xchg
push
sti
mov
test
stos
push
andl
mov
pusha
test
cli
pop
mov
mov
cld
rclb
pushl
insl
push
stos
dec
stos
or
sub
mov
mov
call
push
arpl
adc
cmp
lahf
hlt
jg
or
shrl
jle
scas
dec
aaa
int3
rol
hlt
mov
fistpl
sub
jo
sub
jg
imul
gs
pop
imul
lcall
leave
aad
and
cmp
test
out
lret
outsl
into
ret
popf
sbb
cli
jo
jle
xor
in
cld
imul
aas
out
xor
and
loop
xor
iret
pop
xor
add
incl
jmp
sbb
sbb
and
out
dec
push
inc
mov
pushf
ja
mov
mov
int3
into
sub
sbb
cmp
enter
mov
push
xchg
mov
decl
xor
mov
dec
xchg
in
imul
scas
jl
sbb
ss
jg
gs
push
or
inc
mov
shll
inc
dec
mov
mov
jns
jmp
cmp
jbe
popl
dec
xrelease
mov
jmp
pop
pop
add
stos
mov
sub
out
pop
mov
and
push
xor
pop
push
mov
pop
std
decl
popa
movl
push
xchg
pop
enter
loop
mov
add
ret
xor
pop
sub
jl
jno
lret
xor
movsl
enter
das
fdiv
mov
or
dec
jb
push
fstpl
loope
movsl
out
sahf
test
js
mov
cld
jae
or
test
lret
mov
mov
sub
call
or
cmp
aaa
repnz
jnp
xor
mov
mov
call
push
ds
push
adc
call
adc
or
out
cltd
int
testl
popf
mov
pop
in
mov
sbb
or
cwtl
inc
jp
dec
pop
loopne
outsb
enter
dec
and
insl
dec
in
ret
cmp
jmp
xchg
inc
rcr
add
int3
repz
pop
popa
fwait
dec
lock
loopne
inc
loope
mov
in
xchg
popf
jmp
stos
fst
push
add
sahf
pmulhw
xor
gs
push
sarl
aaa
fmuls
cmp
cmp
lret
dec
popa
jg
test
jns
lods
arpl
out
or
in
ljmp
jg
lods
sub
mov
mov
xchg
test
aaa
outsl
xor
pop
mov
mov
mov
out
in
mov
fildl
jmp
popf
mov
xor
fldl
les
lcall
cmpsb
inc
pop
in
or
divb
call
into
dec
fsubs
xor
cmp
xlat
insl
fcmovbe
out
cmpsb
rolb
push
adc
out
sub
jne
add
cld
out
stos
fldcw
add
lea
arpl
adc
popf
and
dec
out
outsb
and
fcomip
xor
or
insb
sbb
loop
js
leave
sbb
out
incl
mov
push
add
pop
cmpsl
xchg
scas
mov
leave
int
pop
mov
outsb
jmp
lcall
cmp
in
lcall
ficoms
es
inc
lahf
jae
cmpsl
jb
dec
adc
decl
fmulp
les
sbb
cltd
sbb
pushf
mov
xchg
and
cmc
mov
pop
xchg
mov
push
mov
jnp
cmp
mov
inc
daa
js
cmp
mov
pushf
mov
decl
dec
ss
dec
incb
fcomip
es
ret
pop
xor
dec
es
decl
add
test
mov
scas
add
repnz
subl
imul
jmp
lods
add
leave
in
divl
clc
jbe
add
xchg
mov
mov
add
pop
push
mov
push
mov
fnstcw
lret
stos
inc
stos
in
mov
sbb
cmpsb
add
mov
ljmp
sbb
andl
dec
int
adc
mov
rolb
lock
dec
cld
cs
les
in
sahf
push
movsl
ret
notb
sub
pop
repz
incl
mov
dec
sbb
notb
or
jge
int3
movsb
je
pop
cmp
mov
adc
ror
test
pop
and
insb
iret
daa
jg
insb
jb
outsl
inc
push
inc
test
sub
cmc
lea
fnstsw
into
mov
decl
aam
adc
cld
xlat
fmul
jno
xchg
ljmp
aaa
jne
mov
adcb
mov
stos
and
adc
sub
lret
fiaddl
sbb
mov
ds
lcall
iret
push
cmp
jb
dec
int3
sbb
jbe
mov
or
incl
add
enter
pop
jmp
fmuls
test
ljmp
cwtl
jmp
gs
mov
fdiv
sbb
fmulp
add
jnp
mov
ret
scas
push
into
or
jge
push
add
xchg
popa
or
rcr
or
fcomi
cmp
cmpsb
and
push
sub
jbe
xor
sub
pop
xor
sub
xor
outsb
inc
call
stos
and
adc
cmp
sbb
add
popa
lret
jle
mov
into
push
push
xchg
ljmp
loopne
or
call
outsl
shl
cmc
sti
jecxz
outsb
clc
aad
daa
cmove
mov
xchg
shrb
test
cli
push
ret
lods
sub
mov
mov
jg
push
mov
dec
bound
xor
jmp
xorl
incl
cld
lcall
mov
in
inc
pop
pusha
subl
leave
fldpi
incl
and
loope
xor
xor
mov
dec
ljmp
xchg
sbb
xchg
ret
sahf
xlat
inc
sbb
lock
push
imulb
mov
jmp
mov
xor
outsl
cmpb
pusha
push
jo
push
movsb
insb
fsubs
mov
jmp
sti
pusha
pop
out
cmp
clc
jg
sub
out
dec
loope
lcall
fiadds
aam
and
pop
and
call
mov
jg
es
mov
lods
das
adc
outsb
push
into
lcall
dec
push
ja
cmp
cli
cwtl
hlt
xchg
xchg
rcrb
jo
test
jg
xrelease
icebp
ss
cmp
adc
jb
xchg
fadds
inc
fs
mov
aaa
inc
jle
cmpsb
out
scas
and
cmp
test
add
xchg
cmp
xchg
ja
add
call
dec
cmp
inc
mov
jp
xchg
scas
test
ret
test
ljmp
dec
mov
pusha
inc
mov
xchg
pop
and
test
out
push
sbb
pop
and
or
je
mov
jno
jns
mov
jmp
push
shlb
in
inc
ds
mov
cmp
jl
sbb
push
xchg
sub
lcall
sbb
je
fwait
test
add
or
fiaddl
das
cli
pop
sub
cmp
sub
shll
mov
test
jge
mov
lods
inc
mov
sbb
push
sbb
ljmp
outsl
pop
cwtl
and
adc
fistl
xchg
cmp
xor
test
xchg
and
out
or
adc
mov
mov
adcb
and
pop
hlt
or
fidivrs
fsubrl
adc
mov
stos
insb
cmp
cmpl
or
movb
jg
out
popf
mov
xor
ss
mov
xchg
jnp
repz
in
mov
cmp
inc
pusha
test
insl
mov
xor
ds
add
stc
sbb
mov
push
pop
fwait
aas
jge
and
enter
mov
sbb
xor
shr
push
add
add
es
js
in
jno
mov
cmc
pop
jb
and
inc
jo
mov
jae
mov
sub
push
add
cmpsb
mov
aam
adc
pushl
mov
cmp
daa
xlat
sub
scas
adc
jecxz
popf
xor
mov
cld
addr16
fsubrs
or
jge
lods
pop
push
shl
out
and
in
mov
mov
ljmp
leave
dec
or
xorl
in
add
push
int3
xchg
scas
pop
jbe
inc
aad
push
jno
call
decl
cmp
call
divb
sub
mov
call
fs
cwtl
repz
or
cmp
test
push
mov
mov
mov
add
shll
pop
outsl
mov
cmpb
test
decl
push
bound
subl
xchg
xor
sbb
jb
mov
scas
mov
pop
jbe
int
test
cld
stos
or
dec
fucom
sti
add
adc
into
or
jp
test
push
ja
mov
and
xchg
xchg
aam
adc
test
cltd
mov
out
call
inc
inc
iret
push
push
add
dec
mov
or
mov
movsb
ljmp
fs
lock
mov
fwait
mov
xchg
jp
push
test
jnp
movsb
roll
pop
xor
dec
jmp
mov
loop
inc
xor
insl
add
sub
test
js
out
push
push
popa
dec
rorl
add
cmp
add
jle
ficoms
cmp
ret
cwtl
xchg
and
mov
jmp
or
jb
sbb
repz
xchg
push
mov
pop
fwait
ljmp
cltd
xchg
inc
jp
cli
aas
aas
pop
inc
push
xchg
sti
sti
loopne
cmp
jmp
out
xlat
sbb
cmp
inc
sub
scas
pop
cmpsb
aam
cmc
xor
icebp
fistl
mov
lods
pop
xlat
call
or
or
cli
call
xchg
or
lahf
mov
incl
lret
mov
adc
nop
jne
orl
std
push
adcb
jmp
add
test
dec
xor
out
sub
ja
jmp
sub
ljmp
or
out
push
loopne
jp
shrl
jne
cld
mov
jo
mov
ljmp
scas
mov
roll
iret
pop
arpl
ljmp
mov
sbb
push
adc
in
ja
jnp
addl
mov
call
mulb
cwtl
test
out
dec
ret
ret
xchg
jo
je
fistpll
mov
inc
mov
pop
xor
loopne
popa
xor
lcall
hlt
xchg
mov
jg
push
xlat
cmp
test
mov
rolb
and
dec
cmpsb
aas
sub
mov
enter
stc
mov
sbb
fistpll
cmpsb
xor
dec
in
mov
sub
jns
sbb
rcll
add
icebp
leave
mov
mov
js
xlat
pop
xor
adc
mov
adc
mov
and
dec
xchg
sbb
test
xchg
dec
jmp
push
mov
lcall
mov
mov
imul
movsl
ja
sbb
into
repz
dec
mov
xchg
and
sub
stos
xchg
mov
cli
incl
jmp
jno
dec
in
cmp
int
lcall
jg
pop
add
sbb
popf
subb
repnz
and
push
adc
pushl
mov
das
lcall
ss
dec
and
mov
inc
jb
xor
sar
cmc
leave
fwait
arpl
add
ljmp
dec
sub
mov
mov
add
cmp
and
int
lcall
movb
fnstsw
in
jae
xlat
sahf
clc
pop
aad
push
pop
es
push
push
xor
adc
enter
ljmp
mov
or
jo
inc
lods
jg
adc
xchg
rorb
and
stos
xlat
pop
stc
inc
mov
jmp
flds
dec
jp
mov
cmp
sub
and
inc
call
imul
push
and
test
pushf
jl
or
lcall
jp
or
fistps
iret
push
pop
sbbl
aad
mov
cmpsb
ljmp
mov
shlb
jg
fxam
pop
jle
scas
lahf
pushl
jp
adcl
movsl
das
cmp
pop
sbb
data16
jo
xlat
popf
shlb
mov
mov
adc
fldl
sbb
fisubrs
dec
jns
ljmp
xchg
push
data16
dec
fsubrs
sahf
ljmp
push
hlt
lods
mov
mov
les
mov
rclb
imul
jmp
idivb
jmp
in
clc
or
cltd
jge
cmpsb
scas
inc
dec
sub
push
popf
inc
out
out
loopne
push
call
mov
jbe
jp,pn
das
ss
enter
decl
adc
mov
dec
and
icebp
mov
fiaddl
push
lcall
cld
dec
pop
add
addr16
cmp
sti
jbe
gs
test
stc
scas
xchg
out
pusha
cmc
call
adc
out
js
in
add
pop
aam
fs
mov
and
jp
lock
lds
lcall
ljmp
and
rol
push
loop
pop
stc
ds
mov
loop
out
icebp
adc
xchg
in
test
insb
lret
ss
sbb
shll
pusha
lret
mov
inc
pop
and
lahf
pop
data16
loope
mov
loope
pop
sbb
out
jg
cld
xchg
test
and
mov
xchg
push
jne
cmp
fld
data16
daa
sbb
pop
mov
pop
mov
dec
dec
aas
imul
ss
outsb
mov
mov
movsl
xchg
or
pop
jecxz
fistps
je
mov
out
mov
push
xchg
popf
jle
loop
xchg
adc
pop
gs
pcmpgtb
xchg
negb
aam
mov
das
ljmp
pop
je
inc
fdivl
or
sub
nop
xchg
mov
push
iret
mov
jge
cmp
lahf
lock
pop
pop
jmp
inc
testb
cmp
push
dec
or
ret
lret
xchg
push
das
loop
mov
jb
jne
hlt
int
inc
fldt
xchg
jmp
inc
in
mov
sbbl
jp
in
out
push
add
cmp
mov
popa
es
call
arpl
pop
cmp
mov
add
inc
popf
jae
xchg
int3
mov
jg
pushf
jno
jmp
push
andb
shl
cmc
push
int
jnp
pop
ret
sti
shl
inc
add
add
jmp
xor
xor
sub
lahf
xchg
push
cmp
cmp
push
xor
mov
iret
ljmp
jle
ja
ja
cmp
xorb
scas
xor
sbb
cmp
pop
jmp
ret
and
mov
xor
shl
mov
jae
mov
decl
jns
cltd
cmp
jecxz
pop
rolb
in
xor
jns
jge
jmp
push
ret
push
cltd
stos
xor
rcll
lret
mov
add
ja
das
sar
push
xstore-rng
cmpsl
inc
cmp
out
jecxz
into
pushf
xchg
xchg
test
lcall
loop
and
pop
xchg
out
imul
in
push
aaa
dec
and
call
xchg
jne
adc
fcomi
xchg
dec
mov
sbb
jmp
jmp
fcomps
push
incl
out
mov
mov
push
mov
cmp
outsl
cli
jmp
jge
mov
std
dec
outsb
fisubs
xchg
xchg
insl
sbb
and
incl
adc
lret
sub
pop
mov
imul
int
lret
cmp
loope
iret
cmpsl
mov
push
ret
addr16
add
lcall
aad
push
jge
xor
clc
cmp
mov
push
pop
or
sub
inc
fdivrp
dec
sub
xor
push
push
sbb
dec
inc
cwtl
sbb
notb
decl
fs
ljmp
push
xchg
adc
addr16
inc
lock
cld
mov
xor
push
jp
lods
loop
idivb
push
or
ror
add
call
lock
jg
ret
mov
ljmp
loopne
out
sbb
inc
jae
insb
mov
mov
jecxz
push
and
stos
ret
sbb
xor
call
adc
loope
xchg
pop
pop
loopne
push
inc
mov
add
ret
outsl
jge
xchg
lret
add
xor
je
mov
fistps
pop
cmp
jecxz
add
add
inc
or
cmp
movsl
push
dec
ficoml
lock
dec
decl
lock
mov
int3
mov
inc
outsb
push
jne
imul
push
call
loopne
add
jmp
cli
testb
sbb
rolb
sbb
pusha
push
stos
sar
push
mov
pop
rorb
out
pop
mov
test
leave
outsl
jecxz
jg
cld
roll
dec
dec
push
repnz
sbb
mov
adc
cltd
sbb
fdivs
and
mov
jmp
test
repz
pop
cld
cli
fdivl
jo
test
test
ds
xchg
stos
push
jne
xor
pop
fstpt
sub
cs
fimuls
or
leave
inc
pop
inc
mov
loopne
xchg
jmp
xchg
mov
sahf
ret
mov
add
incl
dec
call
sub
xor
es
aas
mov
incb
cmpsl
jae
dec
dec
mov
movsb
aad
hlt
fists
sbb
jp
rclb
daa
orl
cli
ja
cmp
cmpsb
ds
in
xchg
or
mov
jle
jno
fsub
loopne
hlt
rcl
test
pushl
and
mov
aas
in
dec
inc
sub
xchg
push
loope
jmp
mov
clc
or
stc
push
xchg
or
push
jp
adc
push
icebp
incl
shlb
jb
jmp
pop
mov
mov
or
hlt
scas
lods
cmp
lcall
inc
fs
mov
aas
jbe
insb
sbb
ljmp
aam
xchg
fisttpl
xchg
push
pushl
fs
xchg
jl
or
add
cmpsl
cs
sub
subl
decl
mov
or
lea
xor
pop
dec
xor
pop
test
imul
push
adc
incl
icebp
adc
sbb
or
cs
outsl
stc
imull
pop
add
xor
enter
lcall
jae
add
mov
fs
fwait
and
and
pop
xchg
xchg
ds
xchg
mov
fdivrl
xchg
std
lds
movsl
shrl
sbb
mov
pop
sbb
xor
pop
decl
dec
xor
push
aam
pop
sub
pop
sarb
call
xorl
nop
mov
xor
push
int
lods
addl
decl
xchg
rolb
fidivs
fdivr
bound
movsb
gs
imul
and
ljmp
jmp
fwait
jl
pusha
sub
mov
mov
call
fstl
cmp
add
add
or
iret
xor
nop
adc
lea
inc
fldt
xor
iret
les
in
nop
jb
decl
aad
and
fildl
pushf
cmpsb
xor
out
cli
leave
aam
das
xor
jmp
push
cmc
insl
dec
mov
pushl
or
jmp
out
test
mov
fildll
jp
stos
negl
decl
cs
test
mov
enter
cmp
fsubrs
push
xchg
scas
dec
push
xchg
mov
cmpsb
pop
mov
mov
and
add
dec
lcall
cmp
iret
incl
mov
mov
cmc
push
icebp
cmp
push
sbb
or
test
jmp
test
subb
ss
pop
dec
jg
decl
jge
scas
mov
enter
into
jne
subb
sub
fcomip
incl
xor
pop
push
outsb
dec
push
jae
push
movsb
sti
xchg
mov
iret
leave
inc
push
mov
pop
mov
imul
xchg
and
fucom
pop
xor
fs
clc
mov
iret
or
mov
fstp
xor
idiv
push
push
outsl
jo
mov
int3
jp
jle
mov
je
bound
lds
and
add
decl
fdivrl
mov
pusha
inc
xor
mov
or
decl
mov
fwait
incl
fwait
xchg
enter
cwtl
mov
insb
or
push
jecxz
add
outsb
jp
pusha
cmp
call
popf
push
fisubl
data16
insl
add
ret
push
pushl
xor
fidivrs
xchg
adc
lods
enter
roll
out
cmc
iret
clc
mov
ficoml
fiadds
xchg
repnz
and
orb
mov
incl
leave
fidivrs
dec
loopne
pop
je
mov
cmp
adc
fdivp
ljmp
clc
imul
outsb
add
js
jb
fbld
into
fs
ljmp
xor
jnp
sub
push
hlt
push
pop
mov
test
jnp
fimuls
aad
scas
fsts
jnp
jmp
lret
fsubl
pop
dec
or
arpl
aas
icebp
cmp
lods
or
pushl
std
mov
push
popa
pop
test
lock
repz
test
add
in
adc
mov
sub
mov
cmp
sub
dec
xchg
in
inc
ficomps
pushl
or
clc
pushl
testl
imul
call
xchg
push
jle
ret
insl
pop
movsb
rol
popf
sub
fwait
add
inc
lret
jnp
mov
jl
jg
sub
mov
shrb
loop
cmp
and
jg
push
pop
push
jmp
push
fldl2e
das
push
and
or
idiv
sar
pushl
sti
in
insb
push
daa
xor
xchg
xchg
xchg
mov
jg
mov
push
mov
aas
ret
iret
ret
ret
in
nop
out
push
inc
iret
jbe
ljmp
or
loope
mov
jmp
push
fnsave
lods
or
out
mov
arpl
jmp
adc
lcall
pop
js
repz
jle
movsl
movsl
sbb
pusha
hlt
rcr
and
fistps
sub
stc
cmp
aam
jp
cmp
mov
mov
mov
ljmp
jmp
rcrb
mov
mov
mov
cmp
in
mov
ljmp
in
jmp
hlt
sbb
ret
mov
lea
pop
xchg
xor
incl
stos
std
xchg
aaa
cli
push
push
jle
cwtl
sub
ds
in
js
lahf
pop
sbb
cs
push
jne
mov
fs
sti
and
sub
nop
daa
insl
push
mov
lcall
sahf
mov
sarb
int
push
xchg
out
test
sub
inc
xor
in
out
lcall
ljmp
jmp
xor
loopne
sbb
out
call
mov
idivb
mov
jns
sub
hlt
fadds
pushf
inc
inc
ret
shl
dec
mov
mov
inc
dec
repnz
cmp
jmp
rolb
sahf
sub
jb
and
jae
jmp
movsb
push
test
in
push
mov
xor
cmp
ret
cli
mov
push
mov
and
mov
call
jmp
sbb
push
imul
shll
mov
out
mov
cs
mov
lcall
aaa
mov
mov
movsb
mov
or
mov
out
scas
jbe
lcall
test
push
stc
stos
aad
in
sub
add
push
or
lods
adc
data16
dec
dec
mov
jge
jnp
sub
inc
and
or
repnz
mov
pop
movsl
mov
outsb
mov
loopne
push
mov
jl
sbb
dec
add
mov
add
adc
xchg
inc
jmp
sbb
mov
push
mov
loop
call
and
bswap
in
jmp
pop
imul
mov
pushl
shlb
push
iret
fldt
sbb
xor
jb
movsb
mov
xchg
mov
push
or
pop
shr
es
sub
pop
xchg
pop
sub
push
xorb
mov
jmp
inc
add
xor
push
add
bound
leave
leave
out
sahf
lods
call
outsl
push
mov
push
push
test
js
mov
pop
lret
adc
xor
enter
cmp
cli
arpl
xchg
pop
mov
test
stc
push
xchg
shll
stc
lret
jg
pop
lcall
data16
jmp
dec
fldl
std
repnz
call
clc
stos
js
mov
mov
mov
pop
out
and
ss
ljmp
jecxz
cmp
xor
scas
push
movsb
push
xlat
pop
inc
jns
test
jp
mov
jge
sbb
xlat
mov
into
int
pushl
out
mov
and
iret
cwtl
hlt
push
xor
aaa
loop
in
xor
inc
es
cmp
jmp
mov
int
out
in
imul
loopne
imul
cmpsl
aad
int
pushf
xchg
and
fistl
mov
or
jg
xor
int3
aam
cmp
push
dec
inc
lock
xchg
fidivrs
ja
insb
mov
sbb
jmp
stos
mov
jecxz
jae
outsb
fildll
cmc
push
out
xchg
out
mov
pop
sub
inc
sub
mov
mov
push
inc
and
jge
sbb
adc
mov
lods
inc
mov
pop
mov
lea
add
out
mov
mov
mov
scas
mov
mov
mov
xchg
lods
jnp
push
mov
push
or
jecxz
add
pusha
shl
fbld
or
add
fdivrl
inc
loopne
lcall
hlt
xchg
aaa
xor
jg
add
sar
ljmp
bound
jecxz
aam
insb
in
out
mov
push
test
adc
ljmp
inc
inc
pop
lea
ja
lods
push
pop
gs
xor
jmp
push
insb
outsl
dec
dec
push
adcb
pop
and
in
enter
pushl
cld
call
sub
cmp
jp
dec
addr16
cmp
mov
inc
mov
decl
test
cmp
adc
dec
or
mov
sti
int3
xlat
subb
adc
push
xor
jg
mov
add
and
push
xchg
insb
mov
and
inc
sbb
pop
cmp
rcll
sti
xchg
sub
das
mov
adc
add
call
add
mov
imul
idivl
addr16
push
pop
inc
jne
push
lcall
cmpsb
sarl
test
ljmp
ljmp
lods
or
mov
mov
mulb
lock
cmp
inc
sbb
add
adc
fcomi
mov
dec
into
adc
and
lcall
jg
push
hlt
pop
shrb
bound
xchg
cmp
inc
leave
scas
mov
decl
dec
jo
das
push
leave
cmp
ret
js
jge
fbstp
push
enter
pop
push
sub
mov
out
inc
adc
incl
or
aaa
sbb
sahf
push
movsb
adc
call
dec
xor
incl
pushf
outsl
cmp
pop
fcmovnb
outsb
mov
lcall
in
xor
insb
shr
sub
and
pushl
push
sub
push
mov
mov
dec
or
pop
ficompl
push
js
decl
or
fcmovnb
xor
push
xchg
stos
lods
cmp
arpl
xor
push
sbb
mov
ljmp
jg
cmc
dec
rcl
xor
scas
cmpsb
call
xor
into
adcb
out
adc
aaa
cld
jmp
xchg
dec
dec
push
fdivrs
mov
fwait
movsb
sub
decl
cmp
mov
repz
adc
sbb
xor
mov
lcall
push
add
xor
cs
ja
std
jnp
movsb
ds
ljmp
frstor
ja
inc
xchg
ucomiss
mov
out
jg
mov
cli
xchg
push
call
fistpll
adc
or
jl
ret
sbb
decl
stc
inc
mov
pop
lahf
in
enter
dec
loopne
gs
std
adc
mov
dec
rol
test
notl
push
mov
inc
imul
leave
mov
or
cmp
cmp
sub
push
mov
mov
jnp
pop
sbb
sbb
ljmp
jo
sbb
jmp
jo
or
sub
add
pop
les
jno
test
incl
cld
mov
jne
sbb
push
pop
mov
adc
orl
jmp
fwait
cmp
inc
sbb
push
mov
add
push
lret
push
inc
inc
add
add
jmp
pop
pop
mov
ljmp
pop
xor
lds
into
jae
and
mov
pushl
js
mov
dec
or
xchg
cmp
lds
xchg
sbb
mov
stos
call
mov
sti
add
mov
and
outsl
mov
sahf
pop
dec
push
and
movsl
cmp
mov
jle
lcall
ljmp
in
and
add
ja
bts
add
dec
int3
jecxz
enter
ljmp
pushl
test
popa
xchg
call
out
imul
lock
psubq
xchg
shr
ss
shll
ja
das
lahf
jmp
fcomp
shll
in
lret
mov
cmc
aad
and
jp
add
lcall
lods
fimuls
add
sbb
push
test
or
rorl
jg
push
cmp
cltd
mov
inc
shlb
mov
lods
test
int3
add
ja
add
or
inc
loopne
clc
sarb
imul
lcall
addr16
push
and
pop
inc
enter
or
sbb
movsb
lret
cmp
sbb
fistpll
cmp
ret
mov
dec
loope
xchg
out
roll
cs
pop
lcall
mov
add
sub
xchg
lods
lock
mov
pop
xor
repz
pop
ja
pop
hlt
dec
imul
mov
push
lods
les
icebp
adc
sbb
lcall
addb
jp
mov
aam
fstl
das
and
ds
lcall
or
gs
and
xor
push
xchg
sti
loop
or
inc
icebp
lcall
mov
cmp
mov
jo
fwait
pushf
mov
scas
bound
test
dec
fstpt
lcall
repz
add
push
daa
std
mov
add
outsb
cmp
pushf
sbb
test
cmpsl
popf
clc
pop
outsb
int3
push
cs
addr16
adc
jg
lahf
pop
dec
jge
push
sbb
pop
aaa
pop
fs
and
add
cmp
jl
sbb
fdivs
fnstenv
arpl
lret
std
ret
cmp
leave
mov
lahf
test
dec
jl
pop
mov
call
in
dec
pop
out
cmp
iret
xor
xlat
aad
into
inc
stos
cmp
cmc
leave
ret
mov
incl
mov
fbld
cmp
ficompl
sbbb
js
out
call
pusha
cli
mov
mov
add
xchg
movsl
inc
push
mov
push
xor
inc
xchg
call
cmpsb
sub
dec
in
push
les
icebp
or
lahf
mov
inc
mov
pop
xor
sub
dec
lea
icebp
jg
and
pop
insl
aam
popf
inc
xchg
ss
iret
sahf
xchg
dec
mov
sahf
lcall
test
push
push
divl
add
shll
inc
das
stos
and
pop
or
pushl
sub
sub
ja
jecxz
xchg
dec
dec
sahf
xchg
xchg
inc
shlb
and
lret
mov
dec
xor
addb
int
sarl
mov
nop
mov
cmc
or
push
adc
jl
cmp
xchg
or
add
das
clc
pop
xchg
rcll
mov
xchg
xchg
lret
mov
jbe
ljmp
enter
daa
pushf
insb
pop
xor
mov
sbb
or
fcoml
decl
xor
sub
out
mov
jb
push
shrb
decl
sub
dec
xchg
loop
addl
mov
fcomp
ss
fidivrs
cli
fcomip
ret
dec
icebp
call
pop
and
fs
mov
mov
push
mov
mov
mov
or
inc
cwtl
mov
nop
in
aam
insb
aaa
lcall
movsl
push
push
icebp
push
pusha
add
jno
inc
xchg
cmp
lea
lds
jmp
sub
sbb
xchg
mov
inc
mov
mov
scas
push
fstpt
decl
or
pop
bound
cmpsl
add
mov
mov
decl
lret
mov
xor
inc
dec
pop
divl
push
lea
mov
scas
fcoms
mov
hlt
pop
fistpll
and
sahf
mov
mov
push
sbb
test
insl
sbb
jmp
push
mov
sbb
aaa
stos
jo
popa
sbb
adcb
iret
shrb
aaa
push
inc
jmp
call
pusha
cbtw
mov
test
stos
mov
push
push
sbb
sar
lcall
pop
es
outsb
out
mov
mov
push
push
pop
faddp
xor
mov
incl
add
pop
in
incl
inc
sahf
sbb
and
mov
and
cli
test
fisttps
into
xchg
scas
jle
xchg
outsl
jecxz
aaa
jmp
inc
aad
bound
lds
mov
xor
push
push
fistl
ss
call
pusha
cwtl
jecxz
add
adc
repnz
fsubs
int3
xor
stos
jmp
test
fwait
sbb
lcall
sub
test
fisubrs
jg
adc
nop
cmp
rcll
nop
dec
test
jge
daa
add
xchg
adc
movsb
sub
xor
out
pop
idivb
pop
lock
incl
sub
test
xlat
test
daa
sub
push
push
cs
push
or
adc
aad
ljmp
stos
insl
inc
orb
rcrb
test
mov
xor
push
test
fsubs
jg
jp
xchg
and
lods
cmp
cs
rolb
subb
jecxz
incl
push
jmp
test
jmp
sahf
adc
jae
cwtl
in
es
ljmp
jmp
jbe
ja
push
push
mov
mov
in
cmp
incl
lcall
outsb
js
out
xchg
in
cmp
xchg
add
inc
insl
jle
cmpb
cld
call
cld
dec
shr
fisubrs
fwait
adc
lods
mov
sub
call
jns
or
scas
data16
fisubrs
mov
mov
into
adc
mov
fistpll
arpl
out
out
push
daa
sbb
cmc
adc
incl
or
adc
mov
xor
sbb
lock
jnp
or
mov
pop
adc
mov
mov
loopne
mov
or
push
mov
add
cmp
inc
xor
adc
push
adc
pushl
push
test
int3
push
ljmp
mov
xchg
pop
add
les
in
push
rorb
fsubrl
outsl
mov
rorb
mov
xchg
jle
out
lea
add
mov
pop
cmp
icebp
addr16
imul
lods
xorb
add
call
sbbl
push
mov
lock
cmp
flds
push
decl
bound
in
enter
push
jb
sbb
lds
dec
call
inc
sub
or
mov
iret
cld
stos
mov
je
andl
in
shl
repnz
lods
push
adc
test
push
orb
stos
cli
cmp
push
dec
movsl
xchg
icebp
adc
dec
cmpsb
jecxz
mov
test
sbb
cmp
mov
adc
pushl
cld
xchg
add
pop
sahf
jg
mov
inc
fstpt
dec
jmp
and
fmuls
lret
jae
pop
push
fidivl
clc
aaa
loopne
pop
fwait
adc
ljmp
cltd
inc
cmpsl
mov
shlb
imul
inc
lahf
adc
scas
sub
mov
add
clc
incl
dec
out
in
sub
xchg
negl
dec
andl
mov
mov
sbb
repnz
int
das
data16
aaa
std
jmp
stc
mov
inc
mov
aam
test
jg
sub
dec
jne
inc
inc
xchg
mov
mov
or
mov
inc
shl
jl
mov
rcl
mov
mov
dec
xchg
shrb
push
out
mov
lahf
cltd
pop
push
pop
push
push
lds
add
mov
xchg
jg
enter
jno
jno
rcrl
lock
sbb
xor
jbe
dec
idiv
lcall
lahf
jmp
sub
adc
pop
jae
jno
sub
out
pop
xor
dec
and
cmp
pop
jnp
sbb
pop
pop
mov
test
fchs
shrl
stos
xlat
sahf
adc
ret
decl
les
lret
stc
dec
icebp
data16
jo
jecxz
add
dec
pushl
sbb
movsl
rolb
jg
mov
insb
roll
cltd
insb
push
inc
mov
inc
fucomp
jbe
pop
daa
inc
bound
xlat
xchg
lahf
push
add
mov
fs
ljmp
decl
push
adc
sub
jmp
jge
cld
sub
jo
imul
fmull
xchg
rcl
orl
xchg
das
cmp
xor
and
xchg
mov
add
jmp
jnp
and
sbb
sub
mov
pop
cmc
jmp
pop
and
mov
cmp
repz
or
ja
sub
cmp
push
fwait
shr
lcall
rclb
ljmp
inc
loop
jb
add
movsl
add
out
loope
mov
flds
je
frstor
fcmovbe
jge
nop
dec
lret
rol
add
je
jbe
lock
jmp
sbb
stos
pop
jge
leave
jno
adc
mov
aad
sbb
sar
cmpb
jg
push
mov
andb
shll
xor
push
lcall
iret
pop
ret
push
lret
pushf
icebp
orb
ret
jmp
pop
std
arpl
cwtl
inc
or
sti
xchg
xchg
mov
scas
sbb
call
and
nop
push
push
push
sub
inc
ss
imul
fcoms
mov
incl
jp
pushf
ficomps
sbb
cmp
pop
mov
les
mov
adc
sub
jns
sub
cmp
inc
ljmp
dec
gs
repz
ds
cmp
data16
cli
cmpsb
lret
lcall
xchg
jb
xor
or
repnz
fidivl
and
flds
mov
jne
jmp
out
cmp
aas
repz
out
push
mov
or
xchg
enter
xchg
incl
es
leave
mov
fbstp
push
rolb
js
repnz
cld
decl
sbb
mov
mov
add
pushl
push
popa
leave
pop
add
pop
push
pusha
dec
dec
int
fsubrp
dec
push
mov
cltd
mov
test
pop
inc
cmp
or
and
incl
cld
pushl
into
js
adc
jmp
mov
dec
adc
push
inc
mov
cmp
pushl
xchg
scas
out
arpl
xchg
arpl
lods
dec
dec
insb
add
or
lret
insb
insl
incl
push
pop
xchg
jne
push
jl
ret
push
pop
negl
mov
fsubrl
inc
jmp
lock
jno
xor
or
out
mov
cmc
adc
ljmp
inc
dec
out
clc
and
int
push
sar
pushl
testl
ror
mov
fstps
jno
loop
mov
pop
pop
scas
pop
push
jp
mov
push
sbb
ljmp
ror
decl
and
cmp
mov
sti
mov
shll
or
es
pop
sbb
sti
xchg
sarb
stos
or
add
pop
jbe
loopne
xor
inc
cli
iret
pop
rcrl
fidivs
call
jg
sub
test
dec
enter
in
aam
push
cmpl
movsl
xor
gs
in
stos
xor
std
sbb
jae
and
stos
mov
test
aad
push
sahf
clc
jl
dec
call
jbe
arpl
jb
loopne
dec
fmull
push
jns
mov
cli
incl
fcmovnbe
push
ja
push
xor
or
in
int
in
xchg
out
lds
and
lcall
pop
fs
cmp
test
mov
xchg
sbb
mov
dec
jp
pushf
decl
cmp
adc
fisubs
std
ret
scas
xchg
aas
and
dec
xorb
das
and
fdivr
jg
fucomp
inc
repz
add
jp
ffreep
jbe
ja
mov
movsb
mov
lret
fbld
or
jmp
test
mov
in
std
mov
or
cmp
stos
lods
and
lret
call
mov
in
in
xchg
pushf
fcomip
mov
push
jne
and
insl
and
inc
lret
std
add
fcomip
mov
sbb
ror
scas
adc
rcl
mov
outsb
popa
pop
push
jg
in
sub
ljmp
and
sbb
pop
into
push
aaa
add
sub
in
lahf
test
adc
into
fcos
incl
lret
adc
sub
jle
jae
push
push
rcrl
ja
mov
push
add
decl
and
jecxz
sub
test
out
js
mov
ljmp
jb
insl
mov
jnp
test
mov
xor
xchg
cmp
jecxz
jnp
sar
call
sub
stos
pop
ffree
cmp
lret
int
imul
mov
jmp
cltd
pop
inc
push
cmpsl
arpl
jns
jg
int
mov
xchg
mov
cmc
jmp
in
inc
xor
fidivrs
cmc
inc
test
add
and
call
stc
hlt
dec
jo
adc
ja
cmp
hlt
dec
dec
jg
sahf
inc
bound
mov
cmpsl
mov
add
inc
sbb
pop
out
xchg
mov
mov
pop
jbe
outsl
mov
dec
sbb
mov
ficoml
sbb
sub
sub
cs
mov
shl
fwait
cmp
mov
pop
lret
ljmp
int3
mov
cwtl
jp
lahf
xor
push
rcrb
mov
insb
or
sub
mov
lret
popf
aas
xchg
mov
std
std
push
adc
jg
icebp
and
push
xchg
pop
pop
and
jmp
iret
sahf
stos
mov
or
add
shlb
sbb
or
out
cmp
lock
fisubrs
mov
xchg
xchg
push
ds
lcall
or
pop
cs
and
mov
aas
test
dec
xor
or
call
jne
sti
jae
std
mov
push
pop
adc
push
mov
outsl
pop
lahf
or
mov
and
mov
and
cli
dec
adc
test
cmp
mov
js
xchg
dec
out
cli
mov
adc
iret
pop
ret
mov
lret
sbb
dec
push
lea
sub
pop
js
xor
call
add
call
outsb
jns
ds
dec
addr16
pop
sti
mov
sub
std
and
mov
mov
test
xchg
mov
pop
shr
das
sub
aad
or
xor
das
pop
cli
sbb
jmp
lcall
bound
je
out
fists
cli
addr16
pop
xchg
pop
addb
lea
lcall
inc
in
xor
sahf
pushf
mov
decl
lret
cmpsb
mov
scas
inc
cmp
addr16
sbb
cmp
loopne
jge
imul
std
dec
or
cs
divl
inc
mov
push
pop
inc
push
xor
inc
jge
mov
adc
call
inc
dec
push
xchg
xchg
in
jl
mov
jno
add
rclb
inc
dec
stos
cmp
iret
push
mov
cmp
pusha
sbb
inc
mov
sbb
clc
scas
fs
cli
stos
into
mov
mov
loopne
pop
cmpsl
rolb
push
out
mov
push
sbb
dec
dec
inc
xor
jmp
daa
jp
jb
fwait
sub
outsb
sahf
xchg
cmp
lcall
ss
call
in
aam
dec
jbe
mov
es
aad
inc
push
push
aad
jbe
int3
gs
incl
xchg
in
sbb
jecxz
loop
shll
negb
mov
add
ret
dec
incl
mov
mov
fsub
test
jnp
xchg
mov
cmpsb
dec
sbb
rorb
mov
popa
push
int
enter
out
cmp
decl
add
and
and
fdivs
rcrb
ljmp
pusha
aam
push
out
push
fdiv
cwtl
adc
pop
sahf
add
out
ret
ljmp
scas
call
pop
xchg
stos
or
fld
push
scas
test
xlat
aas
mov
stos
out
dec
test
adc
rorl
inc
add
daa
add
in
pushw
decl
fiaddl
or
pusha
cmp
add
inc
out
mov
push
xchg
sbb
jb
mov
push
sub
mov
inc
mov
jmp
add
pop
mov
loop
mov
call
mov
lcall
out
outsl
dec
mov
gs
aaa
lds
inc
inc
adc
xor
jmp
mov
idivb
ljmp
lahf
repnz
lcall
loop
adc
pop
fildll
inc
xchg
dec
xor
xor
cld
jbe
jne
mov
in
scas
mov
add
lcall
push
mov
stos
shlb
or
in
insb
es
mov
out
std
jmp
mov
mov
add
out
syscall
adc
and
sub
into
push
test
pop
das
mov
jg
out
xchg
adcb
xchg
jge
pop
cmpsl
scas
pop
jge
divl
in
mov
cli
xchg
lea
movaps
fadds
repnz
out
sbb
fmull
dec
cmp
mov
and
jmp
adc
fcompl
mov
adc
movsl
cmp
fdivrp
scas
test
sub
and
pop
or
or
fwait
ret
mov
out
sub
jo
cld
push
sar
adc
fisubrl
xor
xor
mov
in
jl
push
push
cmp
jg
enter
pop
stos
stos
stos
stc
push
daa
inc
dec
push
dec
mov
and
out
es
loop
xchg
fsts
mov
out
loope
lcall
inc
adc
test
jmp
ss
push
jbe
negb
stos
incl
cmpsb
push
mov
push
dec
and
adc
js
pop
shrb
rcrb
lock
lcall
std
xchg
xchg
cmp
rorl
jle
sub
lcall
arpl
fistpll
lock
push
add
adc
pop
and
adc
or
hlt
inc
adc
outsb
mov
mov
outsl
shlb
push
push
dec
jecxz
cwtl
enter
cli
decl
sbb
pop
les
xor
stos
decl
lock
adc
add
add
mov
scas
xchg
jg
jmp
lcall
add
rcrb
hlt
cmp
popf
sbb
decl
sbb
int3
dec
test
adc
dec
dec
outsl
fucomi
push
outsb
fistl
jmp
push
jne
mov
inc
cli
js
das
push
lds
inc
ljmp
jmp
andb
rep
test
xor
or
jns
xlat
inc
mov
inc
jo
push
add
fnstsw
pop
cmp
or
xchg
mov
jmp
sahf
xorl
add
pop
mov
cmc
sbb
fstl
xchg
and
lcall
stc
rorb
jnp
lods
cmpsb
shll
cld
cwtl
fcomip
incl
or
addr16
movsb
aam
aad
sub
push
inc
fst
addr16
or
pushl
and
sar
cld
pop
push
popa
mov
mov
pop
push
mov
cmp
push
in
push
leave
pusha
sbb
add
es
and
jmp
mov
es
iret
cli
pop
sbb
outsl
pop
nop
mov
cmp
jae
rcrl
xor
fcoms
mov
test
dec
dec
push
mov
sar
incl
mov
inc
mov
loopne
fstpt
cmpsb
es
jnp
shlb
scas
gs
fsubr
mov
mov
dec
jno
push
jl
insb
repnz
lds
test
jnp
fdivrs
jmp
xchg
cmpsl
inc
sarb
mov
insb
xor
sub
xchg
cmp
mov
xchg
es
pushl
outsb
loop
push
lea
stos
mov
pop
push
insb
add
addl
sub
jl
dec
adc
ss
shlb
mov
pop
mov
outsl
es
std
adc
inc
jnp
repz
pop
jns
out
repz
mov
lods
ret
cld
fwait
add
adc
or
or
inc
xchg
pop
test
adc
mov
mov
leave
cmp
les
cli
dec
pop
dec
push
pop
rolb
jg
call
mov
repnz
push
shrb
in
cmp
enter
ljmp
popf
fidivrs
mov
repnz
add
mov
add
xor
ret
popl
imul
lcall
sbb
inc
inc
inc
cmp
dec
mov
cmp
pop
sbb
sub
sbb
cmp
popa
sbb
sbb
ret
fstl
xchg
test
into
mov
mov
incl
cmp
xchg
ja
cmp
dec
xor
dec
mov
adc
fcos
dec
pop
out
xchg
jle
es
sub
mov
lods
fs
int3
sub
arpl
nop
xchg
divb
jle
rorl
stos
and
jmp
jmp
xor
sub
es
xor
lretw
sbb
mov
into
ljmp
push
cli
jns
mov
outsl
dec
bnd
loope
daa
sbb
iret
inc
lea
mov
decl
add
clc
jae
cmp
icebp
xchg
mov
xlat
pushf
lods
jge
repnz
pusha
leave
incl
daa
adc
dec
dec
das
and
int3
jo
add
inc
popa
xor
inc
sub
mov
dec
pop
test
jbe
jne
sbb
lods
jp
test
cmp
mov
dec
xor
decl
xchg
pop
adc
sbb
mov
clc
das
call
mov
ljmp
cmp
push
stos
xchg
fiaddl
aaa
adc
int3
jae
jns
cmp
pop
lahf
mov
popf
sbb
shrb
and
mov
and
xor
fcomip
pushl
xchg
out
and
ja
call
add
fdivr
lock
push
mov
inc
sub
lcall
adc
xchg
imul
jle
sti
jg
mul
sub
call
mov
js
push
insl
aam
lods
push
xor
arpl
xor
lea
ljmp
pop
js
lods
sbb
cmp
push
gs
or
sub
call
testl
pop
dec
testb
cld
cmp
adc
mov
cmp
mov
sti
mov
fbld
sti
jl
push
les
test
aaa
jo
cmc
insl
movsb
push
pop
popa
push
jnp
fiaddl
movsl
bound
cmc
push
cmp
pop
rcrb
pushl
ds
aad
and
das
dec
adc
push
aas
and
push
push
pop
rorl
mov
loope
jp
dec
loopne
cmpsl
mov
mov
dec
mov
ljmp
je
adc
inc
sbb
cli
sbb
fdivr
call
cmp
addb
mov
jno
pop
psadbw
pop
jbe
xor
sbb
jnp
xor
mov
jle
cmp
xor
xchg
sub
jp
les
cmc
mov
call
lock
data16
xor
dec
mov
jne
pop
or
and
fsubrs
cmp
dec
in
fwait
xor
mov
out
mov
out
or
sarl
pop
mov
mov
ljmp
cmp
ja
mov
xchg
rcrb
pushl
cmp
movb
jb
push
push
dec
int
cmp
jge
sbb
std
push
pusha
cmp
mov
scas
cmp
decl
addr16
pop
cmpsl
daa
insl
mov
mov
popa
fldl
dec
or
adc
hlt
dec
enter
mov
push
ljmp
nop
clc
or
dec
aaa
xor
inc
je
dec
out
fimull
lods
xlat
in
mov
push
jns
cli
lcall
cli
cmp
in
testl
loop
lock
outsb
cmp
ljmp
xchg
dec
scas
cmc
stc
inc
fcmovbe
mov
mov
dec
outsl
cmpsb
mov
fistpll
mov
scas
or
rorl
cli
outsb
lahf
test
push
jg
push
out
fildll
cltd
inc
jge
inc
lret
jmp
or
ret
lcall
sbb
push
loope
gs
icebp
and
xor
outsb
inc
xchg
int
cmpsl
icebp
add
dec
in
ds
jg
clc
cmp
stos
aam
cmpsl
dec
pop
jne
cmpsb
adc
movsl
rolb
fsincos
jae
add
ret
scas
incl
fidivrl
jp
push
push
je
lea
out
cmp
lods
outsl
sarb
call
fwait
jle
imul
addr16
adc
filds
xor
cwtl
inc
inc
inc
frstor
mov
insl
ss
adc
or
adcl
shl
pop
xchg
sbb
outsl
in
jg
fildll
aaa
cmp
inc
ret
icebp
lock
mov
lret
xor
shr
outsl
cli
mov
dec
call
jl
mov
mov
lcall
into
pop
push
adc
in
mov
pop
pop
outsb
ds
and
pop
es
fstl
insb
es
loope
dec
or
in
pop
add
pop
xchg
hlt
jae
imul
jl
push
adc
cmp
ss
mov
div
mov
cmpsl
pop
daa
das
and
mov
out
adc
inc
mull
xor
decl
xor
xchg
add
and
pop
lahf
pop
push
or
fsubrs
test
ljmp
out
adc
and
scas
bound
push
ds
cmp
mov
mov
scas
lret
cltd
mov
fidivs
and
or
mov
sbb
scas
jl
pop
xchg
mov
and
int3
xchg
lahf
shll
sub
push
jmp
pop
aad
ljmp
aas
mov
or
xchg
pushl
scas
push
mov
jmp
and
arpl
cltd
jl
jl
push
cld
jmp
scas
fnstsw
aad
and
mov
movsb
inc
sbb
out
ljmp
mov
push
jns
push
and
fwait
pusha
jmp
insl
jns
cmp
pop
ret
daa
test
push
repnz
sub
std
mov
flds
xlat
mov
ret
mov
mov
mov
mov
cmp
add
push
xchg
or
jmp
dec
inc
mov
mov
ljmp
shld
cmpsl
out
bound
shll
filds
into
xchg
push
call
call
xor
icebp
push
push
out
das
cmp
adc
ljmp
jns
jmp
mov
inc
jmp
dec
in
xchg
out
stos
loope
lcall
mov
pop
incl
cmc
adcb
mov
xor
adc
xor
push
mov
cmp
arpl
ja
pop
cld
decl
loope
mov
mov
je
fxch
fnstsw
push
mov
roll
jo
jne
inc
test
sti
aaa
sub
sbb
fimuls
bound
ja
loop
jmp
test
add
pushf
mov
add
repnz
call
push
adc
aas
cmp
std
jmp
fildll
add
mov
add
jecxz
test
cmpsb
jecxz
mov
test
jecxz
cwtl
lods
fdivs
and
jnp
dec
jns
clc
and
xchg
add
pushl
fsubr
add
jno
adc
jmp
repz
and
rcl
stos
add
pop
jle
pushl
cmp
repz
sahf
push
mov
idiv
pop
sbbl
inc
adc
call
clc
add
mov
pop
xchg
xor
dec
lret
dec
sbb
pop
pop
add
cld
ljmp
fstl
jle
or
jmp
mov
jno
int
inc
pushl
in
xor
push
sub
sub
sub
incl
sbb
jp
js
cmp
push
lret
push
ljmp
repnz
lcall
mulb
pop
lock
xchg
aas
add
or
hlt
mov
incl
mov
push
ret
and
fs
aam
push
mov
imul
inc
mov
push
in
xchg
repnz
inc
shlb
inc
xorb
lcall
jecxz
cld
inc
pop
mov
xchg
enter
xchg
sbb
ljmp
lcall
shrb
mov
mov
mov
mov
and
cli
pop
call
pop
adc
in
xchg
xchg
dec
bound
repz
push
inc
in
and
xchg
sqrtps
ds
decl
out
dec
dec
aaa
in
icebp
xor
push
mov
push
dec
sbb
addb
in
jecxz
das
ljmp
rcl
mov
pop
call
int3
ss
scas
dec
sbb
sbb
std
mov
dec
mov
jmp
movb
les
pop
cmc
jg
push
mov
test
mov
xchg
lret
mov
ds
js
jb
decl
in
add
adc
out
repnz
cli
pushf
pop
je
sti
mov
fcomip
dec
mov
pop
adc
xor
and
add
mov
pushl
rorl
outsb
xchg
cmp
mov
inc
aaa
and
vsqrtsd
adc
jg
pushl
sub
outsl
push
xchg
xchg
jecxz
fcoms
mov
adc
call
aas
and
jle
iret
jp
xchg
fidivs
and
call
pop
sub
jmp
insb
aam
sbb
sbb
sbb
fmul
mov
lcall
int3
aad
rol
pop
xor
stos
cmc
into
ljmp
rol
push
fistl
xor
adc
scas
clc
call
fcoms
leave
mov
mov
mov
fs
movsl
jecxz
ljmp
inc
add
pushf
jle
adc
adc
test
in
in
maskmovq
divl
cli
decl
fldenv
mov
or
or
std
lahf
repnz
das
cmp
jle
sar
pop
into
and
sub
ss
lods
insb
and
adc
fsubrs
idiv
jg
les
or
adc
dec
pop
orl
in
and
pop
xchg
sti
sub
pushl
mov
fsubrs
aas
sbb
adc
and
outsl
sub
cmp
adc
mov
pushl
pop
in
cltd
outsl
lahf
adc
aas
dec
jp
xchg
add
pop
sbbl
bound
lret
out
or
cmp
int3
add
push
dec
xchg
jnp
or
in
icebp
mov
pop
lods
clc
sahf
and
sbb
xor
repz
sub
loope
pushf
movsl
lea
hlt
pushl
xor
dec
add
jno
xchg
push
inc
out
xchg
call
mov
inc
mov
jle
ds
adc
jo
pop
incl
out
ss
or
bound
pop
xor
mov
cmp
dec
mov
int
cmp
dec
xlat
sub
out
nop
hlt
sahf
js
es
in
or
hlt
jmp
jns
xchg
and
sbb
dec
adc
jecxz
fstl
ds
push
jg
stc
sbb
test
inc
or
mov
jmp
fwait
fs
and
push
inc
add
jle
hlt
inc
insl
test
sbb
mov
jl
fsts
rcll
lock
lea
or
pushl
stos
jecxz
jg
add
or
icebp
gs
addr16
stc
and
stos
lcall
lcall
test
xchg
push
jp
popf
cmp
jg
and
data16
push
and
vpsubsb
lcall
gs
mov
jb
push
pop
icebp
adc
pop
shrb
js
iret
add
adc
out
adc
lds
inc
lock
dec
jbe
adc
pop
repz
xchg
mov
fsubl
cli
fcos
lcall
jp
cwtl
lcall
sbb
filds
lds
inc
insb
pop
pop
sub
xor
ljmp
or
dec
add
lahf
dec
cmp
js
jbe
adc
dec
scas
push
mov
jmp
xor
test
pop
mov
mov
mov
aas
insl
xchg
iret
jg
imul
mov
in
clc
in
clc
jmp
lret
shlb
xchg
pop
imul
lods
imul
pop
inc
pop
pop
shll
xor
mov
mov
xchg
jo
inc
incl
cld
arpl
shrb
dec
push
cmp
push
sbb
cmp
imul
mov
std
sar
movsb
xlat
in
adc
pop
incl
outsb
out
xchg
cli
push
sahf
out
xor
inc
orl
addr16
lahf
sub
decl
cmpsb
sub
pop
lcall
decl
pop
clc
enter
cmpsb
lret
imul
insl
add
add
movsl
adc
decl
imul
push
cmp
or
jle
imul
fstl
fistpl
call
push
jecxz
test
icebp
pop
cwtl
roll
int3
cmpsl
and
adc
movsl
lcall
testl
dec
loope
or
and
shll
push
lcall
push
xchg
rcll
shl
fs
inc
rcrb
adcb
ret
cmpsb
push
xor
jg
jp
or
fstps
std
jbe
fwait
sbb
iret
and
bound
xchg
dec
mov
loope
jg
movsb
adcb
sub
mov
call
mov
cltd
jns
sbb
jae
sub
lods
lds
pushf
xchg
movsb
sbb
fwait
ljmp
pop
lret
push
and
imul
out
pop
andb
mov
repnz
loop
gs
cmp
shr
dec
sbb
or
dec
and
dec
arpl
outsb
mov
fcoml
sbb
into
cmp
jns
sub
movsl
jmp
inc
in
ja
jo
jb
fisubrs
scas
shrl
cmp
in
lock
sti
mov
and
jbe
add
outsl
push
into
rol
out
sbb
mov
int
xlat
cmc
pushl
lret
rclb
int
lock
sti
ficoms
inc
clc
add
pop
push
cmp
push
add
lods
cmp
xchg
and
insb
xchg
xor
ljmp
mov
mov
push
lcall
push
push
mov
dec
mov
jl
in
into
popf
push
popa
scas
popf
push
lret
push
inc
aaa
pop
cmp
sub
out
fs
loopne
adc
out
es
ljmp
xchg
repz
mov
cli
or
pop
inc
std
add
fidivs
cli
sbb
ds
dec
sub
jle
cli
arpl
ljmp
pop
shrl
sub
cmp
test
xor
sbb
mov
lcall
cmpsb
insb
mov
divl
js
mov
add
xchg
rcr
out
sarb
inc
shlb
dec
clc
inc
les
dec
in
lock
dec
sahf
sbb
xlat
or
ret
or
lcall
cmp
cltd
pop
jnp
mov
iret
nop
xchg
add
ret
movsl
push
xchg
loopne
cld
mov
or
mov
dec
dec
inc
adc
pop
fcomip
ja
shlb
or
xor
sbb
decl
fs
bound
fwait
sti
sub
stos
pop
sub
dec
mov
rcll
pushl
outsl
cmpsl
int
rcrl
test
inc
outsb
fmul
pop
fmull
jne
or
test
das
cli
imul
lods
fidivs
fdivrs
repz
jl
mov
mov
sbb
sub
movsb
ss
pop
gs
jg
inc
push
mov
pop
std
mov
adc
push
fbld
pop
lcall
lcall
hlt
std
dec
sahf
or
pop
xchg
sub
inc
mov
outsl
cmp
mov
dec
cmp
pop
add
xchg
dec
push
or
push
movsl
out
rorl
pop
scas
pop
icebp
loop
mov
test
mov
call
mov
cmp
push
xchg
jecxz
in
imul
mov
push
cmp
ret
jg
xor
push
push
sub
cmp
fwait
push
xor
inc
xchg
adc
cmpsl
cmp
ss
mov
pop
stc
js
sbb
push
mov
and
enter
and
mov
xchg
dec
cmp
or
xchg
push
in
add
roll
call
lock
sbb
push
lcall
test
adc
xor
jno
cld
pop
pop
aad
rorl
leave
and
fcmovnu
cmp
sub
add
addr16
inc
daa
add
sbb
dec
add
mov
mov
pushf
fwait
test
ljmp
or
or
add
pushl
enter
pop
xor
movsb
jg
mov
sub
or
sbb
bnd
incl
mov
jp
lret
sbb
ljmp
add
mov
lret
cs
sub
ljmp
ja
gs
dec
lcall
call
aam
mov
pusha
popf
jecxz
mov
adc
mov
sub
adc
outsw
push
mov
mov
xchg
cmp
ljmp
jbe
ja
jo
in
mov
or
sub
sbb
repnz
xor
ljmp
call
pusha
fdivr
loopne
dec
mov
add
outsb
fsts
inc
in
movsb
stos
sbb
dec
inc
fwait
mov
call
pop
pop
ja
test
jl
ja
movsb
jmp
sub
call
fwait
mov
jmp
testb
sti
push
jae
data16
arpl
bound
notl
inc
or
decl
push
test
test
test
testb
mov
add
iret
xchg
mov
dec
push
ljmp
push
inc
adc
mov
cmp
xchg
xor
jnp
das
pop
ret
inc
dec
scas
rorb
xor
std
lock
mov
dec
or
jle
or
ljmp
lret
mov
jl
and
fcmovbe
scas
roll
jbe
dec
adc
jmp
pop
cmpl
add
ss
push
adc
stos
jg
xchg
lock
pushf
fcomp
mov
jne
mov
pop
ret
inc
xchg
ret
cmp
dec
jns
incl
cltd
je
pop
pop
add
xor
hlt
add
sbb
arpl
add
decl
cmp
push
push
gs
mov
inc
cmp
cld
std
inc
test
sar
pusha
mov
mov
adc
mov
rcr
mov
add
pushl
sub
mov
pop
mov
cmp
inc
cmp
imul
and
loope
sub
push
pop
xchg
cmp
shr
cld
imull
pop
fmul
out
into
jns
jg
sbb
and
push
dec
arpl
clc
ret
xchg
mov
daa
xchg
neg
jo
xchg
lds
fcomip
lcall
filds
dec
pop
inc
push
fs
popf
int
sahf
pmulhuw
addr16
push
in
enter
in
insl
jnp
adc
arpl
mov
dec
xacquire
jmp
call
je
or
ds
dec
mov
js
adc
pushl
insl
leave
scas
cwtl
push
cli
mov
cmp
inc
cmp
pop
and
decl
mov
cmp
cmp
cld
cmc
jl
fcoml
pminub
decl
push
jecxz
push
fidivrs
scas
xor
adc
popa
clc
jb
test
sub
stc
fnstcw
sbb
cmp
adc
fimull
mov
or
stc
mov
pushf
data16
mov
cmpsb
mov
pop
dec
xor
or
inc
pop
in
push
adc
sub
push
call
iret
ljmp
shr
fidivl
bswap
xchg
mov
mov
enter
aad
adc
fidivrs
rol
popa
inc
stos
lock
add
movswl
mov
lock
ljmp
pusha
pop
xor
jb
out
test
xchg
lret
call
imul
cld
jmp
xlat
lcall
sarb
dec
loop
into
aad
dec
push
sbb
sbb
dec
in
fisubs
ret
pop
frstor
jecxz
mov
mov
add
imul
das
outsl
arpl
dec
adc
jp
fsub
out
clc
jmp
jbe
ljmp
outsb
or
sub
jns
push
mov
scas
enter
daa
data16
daa
out
pushf
cwtl
xlat
sbb
out
leave
mul
and
incl
xchg
jbe
jnp
loop
mov
sub
xchg
push
mov
add
in
push
stos
repz
out
aaa
and
cmpsb
or
dec
pop
fidivrs
and
mov
clc
pushl
mov
outsl
cld
sti
push
mov
push
pop
jle
push
mov
xor
cmp
fiadds
out
test
aas
in
sbb
mov
roll
cmc
mov
push
push
pop
pushl
push
adc
cmpsl
or
pop
jp
mov
sub
fsub
xchg
xchg
inc
push
mov
std
mov
jecxz
jl
int3
dec
out
push
movsb
sbb
daa
mov
mov
lcall
lock
sub
std
fwait
mov
sbb
cld
filds
cld
mov
ja
sbb
cld
xchg
fwait
dec
cmp
inc
insl
mov
insl
pusha
test
jae
nop
xlat
dec
mov
fdivr
mov
leave
push
cmp
mov
jb
add
test
cli
insb
xchg
scas
jecxz
shll
loope
stc
push
jmp
jb
cltd
pushl
cmp
dec
mov
pop
jge
dec
or
fwait
testb
inc
call
clc
jno
stc
rcrl
dec
mov
xor
cld
jmp
add
dec
loop
jne
dec
fistpl
or
test
fisubrs
jecxz
push
jecxz
repnz
add
or
decl
nop
decl
mov
arpl
push
fmuls
and
jmp
sahf
and
sub
sti
jmp
mov
mov
fisttpll
int
jmp
adc
ja
incl
add
mov
inc
xor
and
mov
and
add
lahf
decl
enter
dec
push
and
mov
fcomi
jl
ret
repnz
lds
mov
jg
hlt
test
or
cmp
sti
cmpsb
mov
das
leave
fnstenv
push
mov
incl
adc
shr
ljmp
mulb
iret
rcll
jmp
call
mov
ret
mov
mov
mov
add
cmp
xchg
fiadds
clc
out
mov
mov
mov
mov
inc
pop
mov
and
incl
or
arpl
nop
nop
lea
lds
fucomi
pop
cmp
dec
movsb
test
add
test
pushl
push
mov
fs
es
cli
test
hlt
cli
dec
jg
push
inc
js
sbb
ja
addb
clc
and
mov
or
add
shll
cmc
inc
xchg
daa
into
in
mov
jne
rcrl
jg
ljmp
xchg
jnp
inc
inc
sbb
sub
pop
cmpsl
xchg
cld
mov
push
or
ljmp
std
jbe
ds
shrl
lret
mov
add
std
out
mov
decl
shl
xchg
xchg
xchg
cld
enter
mov
cld
sbb
out
jg
in
shrl
mov
movsb
adc
sahf
lahf
outsl
push
sbb
imul
jl
pop
iret
or
and
or
and
xchg
ss
mov
inc
divb
mov
xor
mov
cmp
cltd
pop
mov
pop
icebp
jecxz
xchg
movsl
int3
inc
jg
jb
fcoms
test
cmp
call
movsb
push
jle
scas
push
mov
movsl
dec
fucomp
out
mov
out
in
call
mov
sub
in
jp
sub
mov
add
nop
mov
and
lcall
mov
sbb
lods
aaa
pop
xchg
lods
pop
stc
jns
stos
push
int3
rcrl
loopne
adc
out
mov
call
fldcw
jl
int3
xor
std
pop
cld
decl
mov
std
stc
push
sarl
jne
out
popf
cmc
icebp
jle
push
jl
cmp
sahf
mov
mov
stc
frstor
push
aad
push
std
fists
push
arpl
push
fadds
push
cld
xchg
mov
push
sti
push
pushf
push
adc
push
call
xchg
xchg
aam
xor
call
sbb
or
in
jo
lods
jmp
or
fxch
incl
jecxz
test
imul
lret
cld
dec
xor
sub
movsl
mov
push
push
fsubs
fildl
dec
xchg
hlt
leave
pop
sub
std
mov
mov
mov
rolb
or
andl
xlat
enter
das
push
lcall
cld
push
add
bound
xchg
sub
mov
pop
mov
call
loopne
xor
inc
jo
cmp
loop
mov
mov
in
sub
pushl
xchg
sub
lock
ret
cs
push
xor
adc
scas
dec
mov
shl
clc
mov
push
push
aad
das
push
or
or
mov
aas
clc
mov
das
adc
in
add
xchg
daa
or
mov
push
scas
inc
mov
sti
or
jne
pop
ds
xchg
daa
add
stos
add
sub
fldenv
mov
cs
out
mov
pushl
insb
es
xchg
sbb
cld
pop
popa
sub
outsl
jns
ljmp
jmp
decl
mov
sbb
dec
add
push
xchg
rolb
popf
inc
push
das
mov
jae
lret
ljmp
xor
lods
dec
mov
lret
std
mov
pop
std
cld
xor
cmp
mov
push
in
mov
and
hlt
mov
xchg
ljmp
fidivrl
pushl
icebp
fwait
sub
cmp
inc
ds
aaa
loopne
inc
cmp
js
mov
imul
xchg
pop
lock
pushl
add
mov
stc
xchg
lret
es
add
xor
fiadds
jnp
lods
cld
and
sub
jnp
pop
enter
mov
and
inc
add
jg
jle
in
int3
in
jno
pushf
pop
adc
out
mov
gs
subl
and
pop
push
push
and
sub
cmpsl
sbbb
daa
cli
lcall
or
into
xor
gs
push
ds
mov
outsl
add
daa
shl
in
push
xchg
hlt
incl
mov
ljmp
rclb
aad
insl
fs
ljmp
sbb
cmp
pop
xchg
pop
repnz
xor
add
or
dec
cmpsl
add
lds
ljmp
xor
sub
pop
dec
fwait
sub
mov
fisttpll
imul
xor
mov
mov
and
scas
divb
push
xchg
aam
inc
enter
sbb
incl
push
add
sbb
mov
adc
std
int3
xchg
cltd
ljmp
push
icebp
jbe
hlt
jmp
inc
adc
push
mov
adc
xchg
mov
lcall
push
rclb
mov
add
pop
or
lds
fcompl
shll
fsubrp
mov
std
jg
mov
mov
mov
add
dec
jmp
mov
inc
xorl
out
dec
sbb
repz
cmp
sbb
hlt
fisubrs
pop
ret
pushl
pop
fs
sbb
xchg
shll
adc
xlat
adcl
loop
in
decl
fimull
inc
lret
sub
push
fstl
subb
push
mov
aad
cwtl
mov
sbb
stc
pusha
ss
scas
and
sahf
dec
add
cmp
add
sbb
int
adc
cmp
add
mov
cld
pushl
xor
jne
test
jp
add
cmp
and
lea
jecxz
pop
hlt
movsb
add
xchg
mov
loopne
mov
dec
mov
cld
insl
and
and
insl
andl
pop
sbb
or
leave
imull
decl
mov
stos
adc
faddl
sub
movsb
repz
outsb
and
sub
sar
pushl
adc
js
cli
xchg
testl
dec
out
das
lea
mov
repnz
out
ljmp
and
mov
cmp
jl
js
std
in
sbb
dec
sahf
push
std
sbb
repz
sarb
and
pop
into
jne
addr16
cmp
jg
insl
jmp
out
cmp
dec
xor
pop
ljmp
shl
mov
add
pop
cmpsl
push
dec
fs
jge
mov
movsl
cmp
xchg
push
mov
mov
lock
out
mov
cs
push
outsb
sub
push
rcrb
ja
les
or
aas
pop
arpl
mov
cs
add
hlt
decl
lcall
daa
sub
shll
xchg
lds
sub
mov
dec
fdivl
pop
lret
pop
mov
jmp
popf
call
adc
xchg
and
sbb
test
add
andl
mov
push
mov
add
daa
out
addl
and
jl
inc
inc
out
inc
mov
ss
mov
sar
decl
mov
mov
sbbl
push
aad
sub
pop
popf
filds
push
or
cs
lahf
ljmp
movsl
adc
mov
stos
or
adc
hlt
or
and
jmp
cmp
loope
jbe
xlat
fcomip
ljmp
pop
xchg
pop
cs
fcompp
cmpsb
pop
push
nop
push
sub
and
jge
pushf
test
sbb
loop
popa
mov
lods
popf
pop
sbb
ret
xor
sar
hlt
call
or
repz
pushf
jnp
cwtl
push
int3
xchg
push
das
fnstsw
mov
decl
mov
rorb
ja
inc
xchg
dec
xor
mov
ljmp
jbe
fisubs
insb
xor
mov
sbb
push
mov
loop
lahf
fiaddl
pop
mov
fidivrs
mov
mov
arpl
and
outsb
arpl
lret
mov
mov
movsb
xor
pop
sub
xchg
daa
add
jg
and
test
or
clc
jg
xchg
aas
cltd
sub
jns
jp
mov
imul
test
in
loop
sub
lahf
int3
add
clc
or
push
pop
push
jmp
xlat
mov
pop
inc
or
pop
aaa
sahf
xchg
or
in
lods
daa
clc
jo
insb
mov
out
pusha
jmp
or
rcll
mov
add
rcll
lods
xchg
ret
xchg
mov
push
xchg
adc
push
insb
in
leave
xchg
pushf
jbe
cmpsb
sub
dec
mov
and
ja
in
jg
mov
mov
pop
jmp
mulb
xchg
lock
xor
idiv
dec
scas
stos
cmpsl
cltd
loope
pop
xchg
jmp
dec
mov
fimull
jecxz
adc
ljmp
mov
in
stos
inc
lcall
fmuls
arpl
decl
mov
test
pop
xchg
enter
fisubl
mov
cmpb
push
out
stc
push
xor
inc
jg
call
dec
movsb
nop
pop
popf
cmc
and
mov
pusha
dec
pop
test
mov
ljmp
fsubrl
xor
aam
xor
jle
dec
dec
push
pop
shr
jg
in
test
cmc
add
movsl
into
mov
mov
popf
adc
add
fistl
pushf
and
mov
sub
jg
in
pop
lods
es
mov
ds
pop
push
lret
cmpsb
push
out
push
jb
popf
lret
xchg
or
xchg
decl
dec
out
xor
mov
scas
aas
and
rorl
lcall
xchg
sarl
fmuls
mov
inc
les
movsb
arpl
mov
in
push
pop
fcomip
incl
sbb
hlt
aad
jnp
add
xor
jno
test
call
decl
and
pop
lods
pusha
inc
stos
cwtl
hlt
insl
test
and
adc
leave
call
bound
or
xor
sbb
out
adc
inc
cmc
scas
repz
jnp
fmulp
jmp
and
jl
mov
fwait
stc
pop
scas
shrl
call
jl
pushf
push
enter
mov
es
call
push
sub
mov
adc
mov
xor
dec
iret
jl
in
push
das
cmp
mov
out
xchg
mov
mull
jp
jno
jae
pop
pop
shlb
call
and
mov
scas
pop
jmp
sbb
mov
inc
into
adc
idivb
fstpt
mov
scas
mov
ljmp
adc
and
or
decl
arpl
or
xor
pop
mov
dec
test
daa
popa
cld
push
in
dec
sti
and
jmp
mov
or
cltd
inc
cmp
loop
dec
push
repnz
inc
rol
lock
xchg
sub
ja
add
fildl
push
stos
add
in
mov
and
dec
in
das
mov
call
adc
cmpsb
insl
adc
out
mov
mov
mov
inc
popa
push
mov
andb
push
fldl
mov
and
orl
sub
mov
dec
push
cmpsb
cmp
and
xor
adc
cmp
push
mov
mov
in
xchg
pushf
das
bound
cmp
pushl
mov
jo
int3
xor
add
mov
pop
xchg
hlt
jmp
mov
push
push
fstp
cmp
lcall
mov
and
adc
xorl
pushf
mov
out
sahf
gs
mov
shr
insb
jp
jns
mov
lock
jg
stc
jb
sbb
jg
or
push
adc
cmpsl
dec
mov
dec
and
pop
fbld
cmp
push
ret
call
pop
mov
js
jb
push
fstpt
push
insb
push
mov
mov
sbb
xor
fldl
push
cmpsb
jl
add
sbb
mov
pusha
loope
fmuls
rcpps
mov
dec
cwtl
pop
test
dec
jge
add
and
jno
imul
lods
insb
insb
push
push
fwait
and
fs
adc
xor
fisubrl
sbb
dec
sub
fstps
call
cli
incl
mov
mov
call
dec
or
insb
daa
jge
push
rcr
mov
ret
lahf
stos
jnp
pop
mov
or
cmp
push
mov
push
add
add
jmp
pop
out
repnz
test
adc
mov
mov
inc
repnz
xchg
mov
sarl
sub
lahf
or
incl
js
mov
lock
inc
mov
ja
sub
xor
cmp
mov
jmp
mov
push
fcoms
clc
ja
push
sub
adc
cmp
push
movsb
outsb
jg
ljmp
imul
xchg
mov
shlb
movsl
enter
cmpsl
jmp
adc
jb
dec
cmp
cmp
jno
push
adc
pop
adc
mov
fsubr
sbb
test
pop
inc
push
das
cli
jle
aaa
jnp
fdivr
mov
fbld
mov
pushf
out
xchg
loop
cli
pop
jle
push
mov
hlt
push
or
lret
das
fstps
mov
lods
daa
cld
xor
push
fdivrs
jmp
add
push
int
dec
mov
ficompl
subl
aam
sbb
dec
out
cli
jmp
outsb
sub
adc
and
fcomp
jge
jne
ss
icebp
ja
sub
xchg
xchg
cmp
inc
mov
or
jb,pn
add
push
lcall
inc
mov
loope
lcall
popf
lret
xchg
popf
xchg
push
loopne
jo
xor
xchg
mov
mov
pop
cmp
in
test
sbbb
adc
stos
pop
es
pop
xlat
xchg
cltd
fcoml
std
mov
pushf
loopne
mov
addr16
in
mov
mov
cmp
out
std
pushfw
pop
imul
cmp
cmc
ljmp
ret
inc
hlt
push
push
jmp
xchg
int
hlt
xchg
push
ds
sarb
sbb
imul
adc
cmp
jae
nop
jae
sbb
out
sti
adc
mov
data16
pop
xchg
inc
adc
mov
int
movsb
mov
and
xor
sub
sbb
in
lcall
int3
mov
jmp
in
cmp
dec
js
sub
and
push
cmp
imul
xchg
push
fidivrl
ret
sub
mov
push
jmp
push
repnz
mov
mov
mov
nop
nop
fwait
arpl
arpl
xchg
je
sar
pushl
clc
and
fwait
popf
in
mov
out
pop
sub
mov
arpl
ljmp
inc
mov
xor
gs
pushf
push
pop
push
pushf
jecxz
lods
cs
mov
cs
pop
push
jmp
movb
mov
mov
mov
jmp
cmp
stc
gs
inc
xor
adc
push
push
jge
das
int
jle
decl
and
add
movsb
mov
sub
mov
dec
dec
icebp
and
jp
cltd
mov
adc
fists
add
mov
ljmp
adc
sar
loopne
aad
movsb
popa
cwtl
jg
ljmp
iret
jnp
aas
int3
rcll
cmpsb
push
lret
jo
mov
imul
mov
push
dec
sti
sbb
lods
je
or
out
mov
std
xlat
jle
cltd
pop
jmp
jp
mov
cmp
addr16
nop
imul
addb
stos
dec
adc
push
cli
sti
inc
fiaddl
jg
jo
push
mov
inc
lds
jp
pushf
xor
pop
cmp
mov
rcl
jecxz
adc
jg
getsec
or
mov
cmp
js
add
mov
xchg
xor
mov
dec
or
jae
fcomps
adc
adc
sbb
mov
fidivrs
scas
test
lahf
jno
sarl
xor
call
loope
std
leave
mov
icebp
call
fisttps
pop
jp
mov
jmp
jmp
or
pop
cltd
rol
xchg
jbe
push
das
shrb
loop
pusha
pop
xor
divl
fisubl
cmpsl
jno
xor
in
adc
inc
mov
lcall
test
cmp
add
incl
sar
pop
pop
orb
xchg
dec
aam
adc
scas
in
xchg
fnstenv
jg
ljmp
jl
push
sbb
faddl
sarb
loope
ss
loop
and
iret
loop
incl
adc
jns
and
divl
outsb
xorl
jge
add
pushl
or
xor
cmp
popa
cld
mov
bound
pop
jle
lcall
or
mov
push
dec
mov
out
xor
xchg
int3
sub
fsubrl
mov
dec
pusha
mov
sub
sti
mov
mov
popa
scas
jge
push
pop
dec
aas
enter
call
pushl
mov
mov
xchg
mov
cs
lcall
inc
lret
adc
xchg
add
movsb
fs
adcb
push
fcomip
mov
ret
iret
aaa
in
icebp
xor
out
inc
and
das
and
fcmovbe
jb
mov
push
pop
imull
aaa
out
mov
scas
stos
inc
stc
test
add
fsubs
pusha
lret
out
mov
push
xchg
jb
movsl
das
or
imul
scas
xchg
fsubs
stc
loopne
inc
into
cmpsl
jl
jmp
mov
popa
lods
adc
pushl
int
push
mov
hlt
and
popa
mov
mov
loope
mov
mov
sbb
mov
incl
in
icebp
jae
mov
fistpll
popf
rclb
ss
mov
sbb
out
sbb
push
lcall
push
or
sub
push
mov
popl
fisubl
mov
mov
or
clc
dec
jmp
jle
fidivs
jns
fisttpll
and
decl
pop
daa
lcall
movsb
loope
jmp
lahf
fnstcw
cmc
inc
mov
xchg
add
icebp
cld
fstps
mov
nop
xchg
cmp
sbb
clc
cmp
int
xor
outsb
inc
inc
dec
mov
mov
jmp
int
xor
das
stc
mov
inc
lea
lahf
sti
and
inc
lcall
lret
xor
mov
jecxz
jae
int3
lods
test
ret
addr16
enter
decl
sub
test
and
jmp
mov
cmp
std
dec
insl
mov
and
inc
fsubrl
sub
jns
mov
xchg
mov
fldenv
clc
subl
aam
mov
test
cmc
xchg
xchg
jge
ljmp
cld
in
shll
xchg
jge
rorl
dec
sbb
js
int3
cltd
repz
insl
pop
mov
jmp
add
in
daa
mov
test
push
les
ja
inc
sbb
out
xor
arpl
popa
pop
xor
les
or
ja
and
xor
arpl
or
lcall
jmp
cmpsb
dec
shl
push
push
sub
push
inc
xchg
nop
push
push
in
adc
pop
pop
push
clc
cmpsl
add
call
xchg
sarl
mov
pop
daa
daa
inc
fnstenv
arpl
push
cmc
lock
xorb
imul
data16
addl
cld
mov
mov
sbb
push
sarl
scas
nop
cmp
pushl
add
push
aas
mov
shll
cmpsb
fisubrs
push
jp
aam
inc
rcl
pop
add
mov
leave
scas
imul
pop
jo
arpl
pushl
push
imul
mov
xor
or
add
aaa
sub
ret
cmp
incl
cmp
aas
out
lods
adc
mov
adc
sbb
adc
fwait
sti
pop
outsb
nop
jl
dec
xor
lcall
cld
sahf
sub
jmp
push
imul
ds
insb
and
pushl
ficoms
test
mov
mov
hlt
and
mov
mov
mov
ljmp
loopne
xchg
mov
pop
js
unpcklps
cld
jp
loope
out
cmc
push
mov
int
decl
mov
jnp
outsl
push
xchg
sbb
sbb
xchg
jno
out
hlt
lret
imul
jo
mov
testl
xor
pop
mov
xor
stos
js
jecxz
dec
rclb
sbb
incl
std
stos
cmpsb
subb
dec
dec
loopne
lcall
push
and
dec
dec
jnp
cmp
aas
cld
mull
into
mov
rcrl
cmp
jmp
or
mov
into
or
subb
jbe
gs
hlt
cmp
mov
mov
pop
adc
lret
cmpsb
fildl
sbb
adc
aas
add
decl
jmp
cwtl
or
mov
es
call
and
sbb
mov
nop
leave
in
pop
arpl
negl
in
xor
mov
sar
mov
int
push
xor
loop
sbb
cltd
in
insl
enter
push
sub
and
lret
ficompl
jmp
xor
dec
ja
add
sahf
jp
repz
xor
fsubl
les
jmp
pop
inc
xor
test
into
xchg
inc
call
dec
iret
sub
outsb
and
ljmp
not
clc
repnz
es
dec
push
xor
jne
or
shlb
cmp
push
std
or
cmp
out
rcrl
push
leave
mov
xlat
add
arpl
push
xchg
test
js
cmp
call
rorb
lods
lahf
int3
mov
jle
push
insl
add
inc
push
inc
fdivr
loopne
dec
inc
dec
inc
mov
pusha
add
fistl
std
jnp
add
add
or
pop
insl
ljmp
adc
or
or
or
adc
aaa
and
adc
push
adc
mov
or
pop
dec
mov
adc
adc
adc
add
data16
sub
lcall
rolb
or
std
or
xchg
add
add
adc
xchg
out
and
add
icebp
push
or
or
cmp
mov
adc
push
adc
pop
and
xor
inc
mov
adc
shl
and
bound
js
add
adc
std
push
sub
pop
lods
cmpsb
mov
movq
stos
imul
imul
xor
jo
inc
cmp
adc
movsb
mov
xchg
es
dec
daa
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
add
xorl
scas
addb
js
mov
sub
das
mov
add
lds
cld
cli
and
mov
inc
jnp
mov
xchg
ficompl
cmpsl
xor
mov
mov
ljmp
sahf
aad
std
movsl
jecxz
cli
pop
mov
xor
or
xchg
jg
or
insb
sub
addr16
out
jmp
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
decl
fisubrl
in
mov
orb
int3
lcall
mov
pop
or
shlb
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
orb
iret
sbb
xor
gs
roll
clc
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
xor
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
jg
orl
loope
rorl
mov
movsl
or
dec
sub
lods
leave
mov
jp
push
out
or
outsl
inc
push
sahf
pop
clc
sti
jg
ljmp
insb
mov
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
rcll
in
inc
sbb
add
call
insl
jb
mov
or
push
mov
sub
pop
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
xchg
cli
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
jg
cmp
sub
inc
scas
inc
mov
jg
ljmp
je
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sub
cmp
cmp
js
jmp
clc
pop
hlt
lret
movsb
add
ljmp
rorb
gs
std
xorb
jg
pop
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
jmp
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
call
push
mov
adc
and
sbb
xchg
jo
and
out
test
ljmp
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
jmp
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
cs
mov
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
decl
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
incl
imul
add
mov
cmp
xchg
mov
cwtl
jg
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
xorl
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
loope
aaa
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jg
jecxz
adc
inc
lds
push
pop
adc
imul
in
decl
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
in
push
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
inc
mov
insb
test
aas
repz
sbb
lock
in
jmp
out
push
ret
mov
clc
push
std
mov
in
decb
iret
or
pop
xchg
pmullw
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
sbb
loopne
popf
dec
or
sar
sbb
cmp
int
add
xor
push
jno
pop
aaa
std
fisttps
mov
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
out
enter
adc
mov
push
sarb
sub
mov
hlt
sub
ja
and
dec
add
sbb
rcrl
mov
iret
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
arpl
out
inc
incl
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
fnsave
hlt
call
lods
xor
in
bswap
movsb
outsl
adc
sbb
mov
daa
jmp
faddl
mov
push
jae
outsl
xchg
sub
push
imul
mov
not
push
dec
out
fstpt
mov
enter
es
pop
add
repnz
test
add
add
pop
inc
add
enter
push
push
nop
mov
dec
push
iret
and
out
mov
js
adc
add
into
inc
fidivrl
add
or
add
incl
cmp
stos
add
ja
jo
mov
jg
add
mov
add
pop
popa
push
jb
jg
inc
add
xor
dec
orb
test
lahf
pop
push
adc
inc
mov
sub
adc
and
scas
push
mov
xchg
ucomiss
add
nopl
scas
dec
pop
sahf
dec
test
pusha
or
xchg
decl
add
xchg
movsl
push
daa
add
data16
add
es
push
and
fildll
push
movsb
inc
scas
push
ss
and
stos
push
and
push
test
and
clc
idiv
xchg
imul
push
inc
pop
pop
add
outsl
int
mov
pop
sbb
add
mov
fnsave
mov
push
ds
les
push
adc
in
mov
mov
insb
or
lret
imul
imul
in
fnstsw
imul
push
add
ss
incl
fnstenv
fdivs
pop
stos
pop
stos
and
sub
mov
xor
aam
push
mov
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
push
ja
ret
je
fidivrs
out
jge
in
mov
fisttps
add
fwait
inc
ds
in
pusha
fcmovnu
jmp
add
mov
shlb
mov
repz
arpl
push
push
push
add
jne
aaa
fcmovnbe
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
jbe
push
data16
jns
ffree
inc
xchg
cs
push
divb
push
lret
stos
aas
add
mov
push
push
xlat
jne
add
outsb
or
fdivs
push
aad
push
xlat
ja
js
mov
testb
push
jp
jp
inc
push
mov
mov
fidivrl
sarl
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
jne
ss
xchg
xor
xchg
push
setbe
xor
mov
inc
xchg
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
fcomi
loope
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
outsl
mov
mov
push
jecxz
push
imulb
jmp
std
fadd
add
cld
out
out
push
hlt
clc
cmp
repz
cli
sti
cld
std
or
repz
jecxz
arpl
inc
jae
data16
imul
ss
int
pop
add
pop
add
pop
or
mov
add
repnz
add
add
or
add
cmpb
or
in
lods
stos
test
test
or
test
mov
add
pop
adc
pop
adc
lods
fnstsw
xor
femms
lods
lods
cmp
sbbb
pop
push
scas
add
mov
insl
scas
scas
insl
lods
pop
pop
adc
pusha
in
add
lods
adc
sbb
sub
scas
scas
scas
inc
and
scas
sbb
mov
mov
lcall
mov
push
sbbb
mov
push
mov
push
and
aaa
xor
and
mov
test
pop
and
ficoms
pop
sub
pop
sub
mov
stc
or
popa
pop
sub
ret
and
mov
aam
dec
sub
es
or
pop
pop
aas
cmpsb
pop
or
mov
fdivrs
mov
cmp
cmpsb
add
mov
xor
xor
pop
or
mov
push
add
pop
pop
xor
jmp
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
ret
mov
xor
cs
dec
inc
das
inc
inc
xor
adc
xor
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
lcall
pushw
dec
dec
cmpb
jo
mov
inc
in
decl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
call
mov
lea
xchg
push
dec
ja
jns
dec
insl
xchg
lret
bound
js
imul
cmp
je
sub
cwtl
lahf
sbb
mov
orb
add
lsl
mov
aas
sub
lods
pop
outsl
dec
mov
xchg
pop
push
dec
add
push
mov
cmpsb
mov
mov
dec
xor
ja
inc
loop
xlat
push
ja
jb
cs
xor
mov
out
mov
pop
jbe
dec
sbb
and
jge
popf
mov
pop
jo
push
shlb
inc
mov
cmp
mov
dec
push
or
pop
sub
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
mov
xor
add
xchg
jno
lret
push
bound
mov
mov
flds
lahf
inc
inc
push
sahf
mov
and
ds
fcomi
or
add
xchg
xchg
pop
push
test
cmpsb
dec
sub
in
push
dec
push
movsb
jae
add
jb
shll
xchg
je
mov
push
pop
mov
aad
imul
lcall
outsb
mov
mov
push
add
ja
sahf
jbe
fistpl
imul
rolb
stos
push
add
and
es
ja
pop
movsb
js
mov
data16
shrl
jge
xlat
popf
insb
pop
outsb
push
outsl
ror
push
loopne
fiadds
ds
jno
add
jge
push
jg
ficoms
fisttpll
lock
cld
andb
in
adc
mov
add
mov
arpl
sahf
mov
xchg
add
jb
out
in
addr16
mov
jle
or
jecxz
or
repz
jle
aad
push
divb
fildl
adc
push
in
jge
dec
adcl
sbb
addl
test
test
sbb
test
in
shll
mov
push
xchg
nop
and
out
xchg
or
in
xchg
lock
sub
sub
divb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
sbb
push
cmc
sahf
xor
lcall
fcmovb
out
pushf
cmp
aam
mov
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
push
jl
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
hlt
andb
ret
data16
add
addr16
push
dec
out
je
and
or
pusha
add
mov
mov
femms
or
or
fstpt
sbb
es
push
adc
push
add
add
adc
adc
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
xor
sbb
mov
push
add
add
and
loopne
imul
cmpl
and
lods
scas
add
addr16
or
aas
aas
cmp
or
cmp
aaa
add
cmp
scas
cmp
inc
jle
dec
in
dec
inc
cmp
dec
into
jnp
add
scas
ds
jle
sarl
mov
mov
ds
xor
dec
out
fwait
sbb
inc
scas
add
fiaddl
cmp
mov
addr16
mov
cld
fists
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jmp
test
mov
mov
ds
xor
sub
sub
sub
sub
add
in
ljmp
dec
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
jg
cmp
imul
das
pop
imul
lahf
call
xchg
xchg
xchg
mov
nop
test
insl
popf
mov
std
incl
jl
js
jg
test
jb
jae
jo
outsb
pushf
pusha
rcll
sti
mov
rolb
mov
aaa
inc
add
add
pop
out
or
lcall
cli
cmc
repz
dec
xor
push
push
aas
add
xchg
pop
cmp
test
add
mov
or
rcrb
add
mov
mov
fnstsw
repnz
data16
inc
add
pushf
add
mov
push
repz
lcall
or
mov
pop
insb
push
fmull
push
dec
lret
js
into
xchg
ljmp
incl
fwait
jp
add
mov
mov
test
scas
xchg
js
in
and
mov
insl
out
es
nop
sub
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
jle
mov
lcall
leave
jbe
negl
mov
int3
fst
es
push
lret
loopne
mov
lahf
push
std
into
fdivrp
lods
adc
imul
xchg
add
shrl
add
jle
jge
or
adc
add
bswap
adc
dec
dec
in
enter
dec
add
pop
add
push
dec
or
adc
cmp
jbe
sti
pop
adc
dec
or
add
push
adc
add
inc
or
pop
pop
cmovg
sarl
stc
inc
push
dec
sbb
inc
adc
idivb
incl
adc
sbb
dec
add
dec
adc
inc
ds
xchg
push
cmp
cmp
daa
and
sbb
aam
jg
and
add
dec
ss
xor
sub
sub
push
add
mov
sub
mov
pop
mov
and
data16
mov
push
inc
and
push
outsl
add
andl
pop
sbb
add
and
jbe
sarl
orb
jmp
lock
xlat
sbb
incl
pusha
mov
adc
sysret
or
cmpb
pusha
movsl
ds
xor
in
pop
inc
jb
lock
hlt
and
or
xorps
push
and
inc
jg
ja
add
outsl
int3
inc
andb
sbb
ret
pop
lahf
and
addb
jg
xor
sar
mov
cli
fists
mov
adc
adc
jle
adc
push
mov
inc
test
inc
mov
jo
adc
mov
addl
push
sbb
jg
xchg
or
add
and
mov
xchg
mov
inc
cmp
pop
inc
push
cld
jg
and
enter
inc
loopne
jg
std
pop
inc
add
ja
jg
sbb
and
sub
dec
sbb
jg
enter
jle
roll
data16
sbb
add
subb
pushl
incl
push
add
add
data16
arpl
fisubs
push
test
jg
xor
sub
push
pusha
jg,pt
add
jbe
xchg
fsubs
add
inc
mov
jmp
sbb
scas
incl
add
inc
mov
lods
jle
lret
imul
mov
addl
jle
adc
inc
add
push
add
addr16
add
add
jbe
rorb
push
subl
add
inc
shlb
inc
shlb
adcb
and
inc
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
ljmp
fisubrs
imul
daa
aas
aaa
pop
pop
outsb
mov
add
pop
jle
js
shll
add
orb
mov
jle
sbb
add
test
jle
push
dec
xchg
popf
xlat
dec
testl
mov
push
comiss
daa
push
arpl
inc
insb
pop
push
mov
arpl
out
decl
xor
dec
inc
iret
xor
lcall
push
or
ljmp
dec
je
jle,pt
inc
rclb
jle
jmp
dec
push
into
out
ja
fnstenv
add
push
jne
pop
insl
inc
enter
dec
out
push
jnp
fildl
push
js
dec
fdivrs
jbe
pop
add
test
pop
xlat
mov
mov
push
daa
fs
push
outsb
notrack
xor
cs
jle
mov
inc
popf
dec
incl
ss
jmp
dec
ja
xchg
and
push
inc
mov
ss
xchg
test
xor
push
mov
sbb
sahf
inc
out
mov
int
flds
xchg
inc
adc
insb
push
pushf
cmp
insl
dec
enter
mov
xchg
xor
mov
mov
xchg
xor
sub
sub
nop
daa
ss
dec
or
dec
xor
in
ss
aaa
outsb
jmp
mov
mov
jg
pop
fnsave
xor
test
enter
sahf
movb
es
xchg
pusha
ss
cs
add
or
push
pop
ja
int3
rclb
xchg
push
xchg
movb
ja
add
movsb
divb
mov
add
stos
test
ja
add
les
in
push
subb
mov
mov
mov
outsl
sub
pop
add
or
adc
repz
negl
cmpl
iret
mov
push
faddl
dec
repz
jg
xchg
inc
and
cmp
lock
cmp
sbb
outsb
pop
cmp
icebp
sbb
and
push
in
add
mov
add
dec
inc
subl
out
pop
mov
imul
mov
pop
xchg
push
sbb
xor
inc
cmpsb
notl
sti
std
sbb
inc
into
jmp
syscall
mov
sub
xchg
popa
stos
pop
xchg
addr16
pop
lcall
or
mov
sub
pop
das
pop
mov
jmp
sub
cmp
clc
lcall
xchg
xchg
cmovno
add
sbb
fsubs
ud0
inc
lods
xor
push
ljmp
push
fadds
test
test
lcall
pop
out
call
inc
sub
or
jmp
lcall
sub
mov
or
mov
inc
xchg
cmp
clts
add
sbb
dec
mov
xchg
mov
mov
jle
adc
inc
sti
pop
sub
adc
push
push
incb
sbb
verw
xchg
pushl
sub
aaa
push
jmp
xchg
adc
fdivrp
mov
sub
outsl
mov
or
push
std
add
jmp
incl
nop
mov
call
incl
rorl
pop
cmpsl
cld
fsubl
add
stc
lidtl
call
jg
xor
out
cli
testb
xchg
cmp
inc
ljmp
jmp
pushl
pop
fcmovbe
pop
pop
insb
in
insl
flds
push
pop
aaa
sbb
dec
cmp
mov
shll
roll
nop
jbe
or
ret
mov
call
adc
jmp
ljmp
iret
data16
push
inc
inc
pop
cmpsb
pop
inc
pop
mov
neg
pop
sahf
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
push
dec
out
dec
inc
cs
xchg
cmp
dec
mov
and
ss
shrb
shll
shrb
es
xchg
int
push
jb
imulb
cmpsb
xchg
and
iret
insl
pop
daa
es
je
outsl
pop
imul
push
push
push
push
and
inc
xor
push
lcall
test
movsl
pop
int
repnz
fbstp
popfw
cmp
aas
pushl
push
cwtl
xor
dec
inc
push
xchg
push
dec
outsl
mov
push
aaa
push
lcall
insl
xor
xchg
xchg
xchg
notb
sub
push
lcall
movsb
inc
test
jmp
add
mov
push
add
movsb
jg
fidivl
aad
or
faddl
addr16
fstpt
push
jnp
jp
or
jl
cmpsb
shrb
or
jl
push
jge
int3
jle
fnstcw
es
jbe
adc
fidivrl
push
dec
int
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
mov
out
add
in
add
int3
outsb
nop
test
mov
stc
subb
outsl
lods
cmp
nop
xlat
push
adc
adc
pop
and
mov
addl
es
addl
andb
sysret
jl
hlt
pop
mov
xchg
out
push
sub
iret
out
mov
cli
cmp
aaa
aam
jbe
clc
push
idiv
out
ds
test
inc
sub
jg
mov
icebp
push
dec
mov
dec
pop
cld
loope
out
push
daa
jno
sub
jg
mov
icebp
fistl
xorb
xchg
mov
xchg
ja
bnd
repnz
xchg
cld
jp
sub
adc
in
xchg
aaa
or
out
cmp
jge
and
sbb
in
sar
jg
dec
in
rclb
ja
iret
lock
mov
icebp
test
idiv
push
lcall
je
lea
fsub
pop
push
stos
nop
test
int3
decl
inc
jle
mov
fidivrl
arpl
clc
popa
and
decl
into
and
pop
or
push
xchg
and
pop
dec
inc
ds
lcall
push
fsin
pop
cld
jns
shl
sub
mov
jmp
xchg
jmp
mov
push
xchg
mov
cmp
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
ja
aas
test
adcb
popa
cmp
imul
movsl
sub
loope
add
add
add
mov
addb
sbb
push
inc
jl
movsl
push
lret
adc
repnz
rclb
sub
mov
push
imul
add
cmpsb
cmp
and
sub
mov
push
sbb
outsb
or
push
jne
xchg
jmp
inc
adc
andl
clc
push
test
test
pop
mov
inc
insb
outsl
ret
and
scas
add
dec
jb
sbb
add
and
or
xor
inc
imul
push
and
js
outsl
call
mov
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
movsb
divb
outsl
je
inc
adc
test
jb
xchg
orl
out
pop
out
jge
mov
push
or
adc
and
dec
pop
adc
arpl
gs
das
pop
call
imul
jns
sbb
pushf
inc
dec
or
inc
out
loope
test
imull
scas
cmp
sub
popa
in
inc
imul
jbe
xor
outsb
add
inc
jns
push
loope
insb
shrl
push
gs
inc
add
fsubrl
dec
insb
jbe
insl
adc
dec
dec
mov
or
les
xor
push
inc
mov
sbb
dec
mov
add
jo
jmp
mov
addl
jo
or
jae
insl
ds
mov
fsubp
fsub
and
push
outsb
xor
sub
xchg
push
addr16
ret
sub
imulb
mov
mov
jbe
cmc
dec
bound
jae
pusha
and
jl
inc
adc
outsl
popw
sub
ss
xchg
dec
loopne
sbb
outsb
jbe
push
insl
jle
sbb
add
jo
lret
sbbl
sbb
xchg
cwtl
pop
nop
mov
outsb
out
push
fdivrl
inc
push
push
ja
outsl
imul
sbb
test
ficoml
pop
pop
gs
mov
adc
cmp
shlb
mov
lret
bound
mov
jecxz
cmp
adc
or
push
lcall
sahf
roll
test
sbb
sbb
lods
dec
and
filds
push
push
push
iret
or
xlat
loopne
out
inc
adc
mov
rcrl
push
sbb
pop
ss
sbb
loope
jg
icebp
push
sub
stos
fwait
jge
stc
popf
fadds
in
sbb
dec
insb
push
sbb
sub
sbb
sarl
and
inc
add
or
dec
inc
dec
add
inc
xchg
fs
mov
or
adc
loopne
adc
dec
in
fsubl
xorb
lods
jecxz
shlb
pop
push
lds
push
je
xor
inc
xchg
ret
add
lret
rol
pop
push
add
inc
je
or
xlat
adc
adc
push
push
in
sbb
inc
cmp
pop
aad
or
iret
ror
insb
lods
sbb
xor
jo
mov
fildl
ret
syscall
sbb
sbb
and
inc
jne
adc
pusha
sub
imul
mov
cmovle
push
adc
dec
outsl
jns
and
test
or
dec
ljmp
arpl
push
push
dec
push
enter
push
jo
shlb
dec
or
adc
ljmp
inc
je
and
ret
shlb
popf
push
jo
push
test
or
insb
repz
loope
mov
orb
psllq
imul
fldl2e
rolb
popa
and
ror
mov
cmp
mov
xor
or
arpl
jnp
movsb
xchg
insl
xchg
dec
jne
add
jp
jo
sbb
nop
lds
leave
jae
test
xor
and
movsl
pop
cmp
sub
in
scas
iret
movsl
xchg
repz
test
loope
aaa
inc
addr16
pusha
pop
adc
mov
push
jne
sub
pop
sbb
fldenv
xor
jno
xor
mov
cmp
inc
sbb
mov
push
mov
int3
xchg
and
arpl
push
mov
inc
popl
dec
mov
dec
pop
test
int3
sub
sub
xchg
ss
sub
out
mov
xlat
out
mov
sub
sbb
sub
pushf
pop
cmc
and
jge
sbb
push
pop
imul
jecxz
mov
jne
fdivrs
mov
arpl
mov
sub
adc
lods
xchg
mov
mov
sbb
in
iret
cmp
loop
or
pop
inc
out
mov
push
xchg
rcpps
loop
sub
clc
jb
inc
inc
dec
add
add
pop
clc
adc
inc
imul
mov
negl
sbb
inc
cmp
pop
or
mov
ret
push
outsl
imul
jb
jge
xlat
jae
jl
pop
adc
adc
and
xchg
popf
add
int3
sbb
sarb
push
jnp
rorb
adc
and
sub
and
pop
pop
cmp
mov
push
stos
xor
pop
fidivs
testl
mov
and
adc
outsb
inc
push
push
push
lock
jo
and
aas
pop
or
sbb
ja
outsb
pop
fs
dec
stos
pop
mov
pop
add
mov
sbb
push
dec
in
push
fstps
lret
outsl
fwait
dec
ret
js
int3
add
pop
add
add
sbb
mov
movsb
dec
xor
shll
or
shll
or
mov
or
lods
push
lods
pop
cmp
es
mov
push
inc
cmc
or
subl
inc
and
shlb
fiadds
mov
pop
sbb
xor
xchg
rclb
daa
push
insl
fcom
mov
jo
sbb
imul
xchg
sbb
jmpw
insb
mov
dec
push
jmp
push
push
scas
scas
push
xchg
ret
test
or
inc
mov
adc
cmp
pop
mov
xchg
xor
gs
sbb
loope
or
add
and
pusha
subl
inc
je
outsb
fdivl
sub
mov
push
mov
repnz
inc
xchg
adc
je
and
jne
les
xchg
mov
outsw
sbb
dec
sti
push
js
shrl
fidivs
push
fsubs
ret
adc
pop
add
sub
fcmovb
mov
add
dec
pop
lret
inc
xor
sub
xor
mov
xor
insb
decb
sbb
xlat
adc
xor
pop
mov
pop
xor
cltd
adc
mov
pushl
shlb
flds
or
adc
mov
in
pop
mov
addr16
add
pop
cmp
inc
pop
sub
push
outsb
jbe
cmpsl
push
inc
popa
adc
mov
pop
mov
insb
fists
loopew
popf
dec
sti
dec
insl
xchg
inc
push
fisubl
sub
stos
popa
jo
test
loope
lock
cld
add
inc
lods
push
ror
push
dec
lea
push
mov
jmp
inc
jb
adc
cmpl
pusha
push
int3
inc
push
mov
imul
jns
int3
js
scas
sbb
cmp
xor
push
icebp
nop
movsl
or
push
out
push
sub
xor
pop
push
jo
shll
dec
jg
ss
inc
sub
out
mov
enter
test
add
lock
mov
sbbb
out
dec
inc
pop
push
push
inc
sbb
sbb
xor
jae
adc
or
into
enter
insl
adc
xchg
xor
outsl
mov
mov
dec
dec
ja
imul
or
add
dec
lock
push
pop
sub
adc
mov
inc
rcr
int
mov
movsl
jle
push
loope
sub
inc
sbb
outsb
sub
dec
jg
jbe
test
js
add
adc
add
mov
cmp
loop
daa
mov
jne
int3
pop
and
pop
add
aas
ucomiss
insb
cmp
insl
imul
adcl
mov
push
add
adc
pop
add
cmp
inc
pop
mov
pop
shll
dec
out
mov
mov
add
jl
in
rol
add
xlat
add
and
shll
or
jb
popa
push
cltd
add
into
mov
push
out
inc
cs
add
mov
mov
cmp
cwtl
push
dec
dec
jo
mov
sahf
jae
arpl
xlat
out
data16
rolb
lods
sub
mov
lock
mov
or
inc
dec
adc
std
or
xchg
jg
adc
add
push
xchg
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
inc
add
