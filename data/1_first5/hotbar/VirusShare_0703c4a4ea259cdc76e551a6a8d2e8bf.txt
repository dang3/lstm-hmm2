divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
sti
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
inc
pop
inc
push
adc
and
jl
fcomi
insl
roll
les
pushl
cltd
push
mov
fstpt
add
js
icebp
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
add
push
adc
mov
out
cmp
sbb
sub
dec
rcrb
mov
or
outsl
mov
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
push
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
mul
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
and
pop
addb
das
push
in
popa
and
add
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
push
ss
mov
in
adc
sbb
or
xadd
movsl
push
xorl
adc
jg
mov
adc
pushf
flds
shrl
add
pop
mov
clc
pop
outsl
jmp
xchg
jg
rorb
test
sub
aas
cld
push
mov
sar
xor
cmp
ja
adc
lock
mov
leave
push
movsb
es
adc
xor
mov
adc
out
push
ljmp
clc
lds
iret
jle
mov
cmpl
mov
mov
push
ret
add
jge
sbb
mov
testb
add
pop
cltd
sub
shr
enter
shrl
iret
mov
mov
sbb
push
dec
push
les
add
push
jne
pop
mov
inc
bound
jmp
mov
push
pop
mov
pop
jbe
mov
add
decb
mov
mov
or
add
push
push
lea
orl
fld
push
js
fldt
xor
into
mov
aam
push
push
sub
out
and
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
xchg
leave
mov
lods
loope
clc
mov
xchg
or
test
jle
cmp
mov
in
push
call
sahf
mov
das
pushf
shlb
inc
icebp
in
pop
xchg
fwait
push
push
xchg
sbb
or
jns
cs
test
mov
lea
cmp
and
js
sub
xchg
push
add
and
adcb
jbe
sub
adc
test
sbb
or
cmp
xchg
cmp
push
sar
push
push
mov
jbe
adc
cmp
jle
mov
out
pop
icebp
aas
pop
lret
add
cmp
cmp
jae
inc
stos
xchg
push
cmp
sbb
or
cltd
mov
add
jb
pop
add
xchg
outsl
jg
loop
leave
ret
lea
ljmp
je
cmp
aaa
cmp
ret
push
push
pop
outsl
scas
fadd
pop
fidivs
jmp
xchg
jmp
inc
jo
and
imul
pop
dec
jo
stos
jo
and
and
inc
sub
loope
jno
aad
aaa
stos
sar
out
orb
pop
pop
or
cmp
cmp
add
xor
jno
cmp
jne
push
push
mov
add
push
push
add
adc
pusha
or
push
mov
mov
or
pop
lret
rcrb
or
mov
jne
cmp
sahf
outsl
jae
and
sub
jo
loope
popa
adc
and
mov
subb
add
sbb
fnsave
fistpl
cwtl
mov
sub
pop
push
dec
jo
fwait
mov
mov
mov
push
or
lret
xchg
bnd
jl
or
pushf
sub
lret
rol
dec
out
pop
pop
in
pop
out
or
sbb
das
fimuls
add
or
sbb
dec
push
movl
rclb
or
adcb
mov
sbb
out
mov
mov
pop
push
pop
in
fmuls
and
add
add
sbb
cld
lcall
roll
addl
dec
inc
push
dec
lcall
cmp
popf
lea
push
add
push
sub
dec
stos
xor
daa
xchg
cmp
scas
pop
movsl
sub
nop
mov
nop
sbb
push
scas
dec
mov
popl
adc
xor
call
mov
push
cmp
push
inc
cmp
je
call
sub
outsb
adc
imul
imul
les
pop
mov
in
sbb
sti
xchg
arpl
mov
jmp
push
or
cmpsb
ljmp
cmp
push
in
mov
ret
lret
xchg
aam
out
dec
or
movsl
out
fcmovbe
mov
mov
cmp
push
cmp
adc
jge
xor
stc
push
jnp
xor
sub
jg
inc
fstp
cwtl
mov
sbbl
cmovne
sahf
add
shll
pop
mov
push
mov
adc
or
fwait
orb
mov
jle
mov
mov
push
adc
lock
mov
jecxz
lock
mov
ret
mov
insl
add
push
xchg
ret
ret
jno
ja
mov
ret
out
jg
div
decb
adc
xor
mov
adc
adcl
sub
call
xor
cmc
mov
inc
outsb
lods
loopne
xor
push
jecxz
addb
mov
aas
pop
jg
test
sub
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lea
push
pushf
mov
sahf
adc
sbb
push
aaa
and
xor
rcll
int3
outsb
rorb
push
push
mov
call
sub
add
or
fdivrs
fiadds
mov
add
das
sti
icebp
and
data16
sti
andl
sahf
lret
sbb
adc
or
inc
shlb
jbe
mov
lret
pop
fs
mov
pusha
mov
push
test
fsubl
lcall
test
add
testl
lea
sub
cmp
add
sbb
fcmovu
push
xor
js
and
adc
popa
add
mov
add
je
fcoml
or
aas
dec
lock
je
and
sbb
inc
pop
mov
xlat
andb
or
scas
ret
cmpb
lea
or
mov
xchg
fcomps
add
bound
pop
je
pop
sti
sbb
es
adcl
rorl
sub
xchg
mov
jg
in
test
jecxz
or
mov
add
push
sbb
adc
and
sbb
xor
jecxz
push
lret
jl
pop
push
sahf
adc
and
xorb
test
decb
outsl
negl
pop
mov
sub
out
mov
mov
dec
js
mov
push
pop
es
mov
movsl
cmp
movsb
push
jns
jns
or
jo
pop
jb
or
mov
movsb
jnp
inc
mov
or
into
scas
mov
movsb
roll
les
inc
or
mov
mull
or
dec
ja
inc
aas
ret
fcoms
or
push
dec
jmp
in
bound
cltd
or
adc
inc
sahf
and
sub
xor
cmp
push
ret
ja
aaa
add
ss
push
push
or
mov
xor
add
fsubrs
lea
leave
and
jo
push
push
fwait
sbb
xchg
xor
hlt
jne
jns
dec
mov
add
dec
orb
jmp
mov
fmuls
or
in
or
test
movsb
mov
out
mov
xor
mov
pop
jg
rolb
cmp
jne
xor
xor
sbb
xchg
push
das
pop
out
ss
jo
pop
mov
pop
add
in
push
outsl
lea
loopne
ja
pop
pop
jp
add
push
mov
mov
jne
ret
mov
ret
imul
jmp
repnz
je
or
inc
pop
sbb
and
orb
loopne
or
xchg
xor
lahf
imul
lret
cmp
inc
pop
sbb
movsl
in
push
in
pop
pop
push
test
ret
lret
sbb
mov
or
aam
jge
decl
inc
xchg
outsl
in
adc
out
add
syscall
xor
lock
push
test
test
xchg
push
loopne
aam
mov
fwait
xchg
scas
outsb
cltd
roll
movsb
mov
cmpl
mov
xor
and
sbb
add
fstl
cmp
into
push
and
add
add
fldt
pop
jbe
pusha
mov
je
in
repz
lds
pop
data16
push
adc
test
popa
mov
add
inc
out
bound
mov
movsb
jmp
jle
lods
mov
les
push
sbb
pop
neg
sbb
shlb
pop
les
ret
je
arpl
lods
rcrl
or
and
rcr
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
call
test
push
xor
paddw
in
test
lods
or
lods
add
push
mov
or
sbb
imul
adc
dec
test
cmp
or
push
xor
adc
dec
insb
sub
subb
mov
push
aaa
sbb
mov
jmp
scas
js
aaa
adc
adc
adc
or
movsl
dec
jae
jo
or
nop
shlb
inc
xor
rcl
xchg
out
out
mov
xor
fwait
xchg
ret
movsb
pushf
push
sbb
and
pushf
pushf
fcoms
sbb
mov
mov
int3
sbb
inc
xor
int3
xchg
pop
enter
arpl
sbb
enter
pop
adc
rcrb
rcrb
and
hlt
mov
sbb
iret
sub
inc
mov
xchg
mov
jmp
sbb
inc
scas
movsb
sbb
mov
dec
pop
push
dec
and
mov
jmp
lock
sub
lods
into
or
add
and
shlb
mov
dec
iret
pop
cmpl
xorb
or
add
scas
jne
mov
insb
adc
cld
rorl
dec
repnz
adc
sti
ret
sbb
int
ja
cs
mov
ljmp
and
push
orl
lahf
jo
cmp
loopne
xorb
fdivl
mov
ror
inc
add
stos
sub
mov
nop
and
push
cli
sbb
cwtl
and
adc
inc
adc
dec
pusha
inc
movsb
and
push
xchg
push
shl
ficoml
push
push
dec
cmp
imul
in
add
mov
icebp
ss
pop
dec
mov
es
xchg
sbb
pop
mov
adcl
movsl
xchg
mov
mov
dec
jns
fsubs
rclb
daa
lock
out
pop
add
je
lcall
add
je
or
xor
cltd
inc
jl
scas
adcb
cld
push
orl
jne
mov
fcmovne
push
push
jecxz
in
push
jmp
enter
sub
adc
or
cmp
shll
mov
and
cmpsl
mov
je
adc
or
adc
mov
das
clc
dec
or
mov
sbb
mov
into
push
sbb
pushf
jl
cmp
push
mov
jb
or
dec
jb
or
dec
pop
dec
push
in
lret
adcl
insl
mov
aaa
adc
and
rcrb
scas
scas
and
jb
lret
jl
xorb
sub
mov
push
stc
or
fsub
push
adc
cmc
xor
inc
adc
shlb
hlt
cmp
push
cmc
fisttps
adc
push
adc
imul
push
pop
sub
push
fwait
mov
lock
mov
fistpl
jne
or
inc
pushf
jl
jo
jmp
sbb
jb
pop
push
xor
push
and
pop
dec
sbb
loopne
inc
sub
pop
mov
cwtl
push
sahf
les
testb
pushf
pop
nop
aaa
or
js
pop
stc
or
daa
fs
fmuls
testl
neg
pop
adc
clc
add
add
rclb
add
js
sub
daa
or
in
add
pop
cmp
in
and
pop
and
xchg
jecxz
adc
jg
add
ret
or
loope
sahf
out
add
fs
lret
mov
cmp
addb
and
fldt
add
cmp
je
dec
jo
aaa
push
push
pop
in
pop
test
add
adc
cwtl
pusha
mov
call
cmp
inc
sbb
add
adc
int3
es
push
pop
mov
pusha
push
pusha
in
jne
dec
push
push
lods
push
sahf
sub
mov
mov
and
jle
and
inc
jb
and
push
and
pusha
loope
je
scas
or
popa
pop
rolb
pop
stc
popa
jo
xlat
adc
push
xor
xchg
cmpsb
std
daa
aaa
add
insl
cmp
mulb
xchg
je
incb
mov
rorb
lock
sub
cltd
test
dec
loopne
adc
and
mov
scas
sub
pop
add
xor
sub
xchg
and
subl
push
popa
das
mov
sub
jno
jmp
jbe
inc
lret
ret
sbb
enter
or
jbe
mov
add
mov
add
add
cmp
pusha
inc
xor
das
aad
cmpsb
daa
sbb
pusha
insb
or
mov
lods
mov
shr
ret
sub
fsubs
jne
cmpl
mov
or
adc
out
mov
adc
ffree
cmp
lret
xchg
sbb
jo
cmp
cmpsl
xchg
inc
and
out
shlb
add
rclb
in
mov
mov
cmp
mul
or
push
sbb
imul
cmp
movsl
loopne
or
and
jle
fcomps
nop
cmp
push
mov
mov
sbb
dec
sub
or
mov
cmp
dec
testl
popf
jp
pop
xchg
cmp
hlt
ds
pop
mov
pushl
jnp
and
xchg
dec
xlat
push
mov
inc
mov
addb
pop
shl
xor
xor
sub
jno
loopne
fldcw
lcall
mulb
add
daa
inc
shlb
stc
pop
mov
sbb
push
adc
test
popf
sbb
ret
push
jo
adc
lahf
daa
pop
cmp
cmp
insb
and
pop
and
and
sbbl
and
mov
rclb
jae
je
in
xchg
hlt
js
pop
mov
test
xchg
inc
or
pushf
inc
cmpsl
std
ds
and
fisttpl
js
mov
or
mov
adc
adc
movsl
push
push
mov
push
test
sbb
pushf
mov
aad
mov
cmpsb
and
xor
add
notl
and
ret
push
je
mov
lahf
mov
mov
pop
jge
out
popf
aaa
cmpl
push
lahf
add
push
push
pusha
mov
dec
adc
lret
and
mov
fistpl
mov
sub
fdivl
sub
adc
pushf
xchg
or
push
mov
lods
sub
clc
loopne
cmp
push
mov
or
inc
lret
pusha
add
loopne
jle
push
jge
mov
add
daa
xchg
lock
popa
es
mov
loopne
sub
add
dec
adc
loope
add
xchg
sti
sub
pop
add
jge
orb
nop
sbbb
lock
rcrb
loopne
push
pushf
add
loopne
mov
mov
push
dec
dec
jne
test
nop
call
cmpsl
icebp
or
dec
adc
ret
sbb
arpl
pusha
adc
mov
loopne
mov
repnz
cs
mov
or
jecxz
xchg
sbb
add
outsb
loopne
fldl
jle
or
je
sub
jns,pn
mov
ret
adc
sub
sub
sti
int3
mov
sub
sarl
dec
sbb
sub
xchg
dec
or
add
mov
or
mov
fwait
push
test
jne
or
xchg
cmp
sti
adc
pop
test
loopne
std
mov
mov
rolb
sub
repz
sub
pop
je
add
push
and
loop
out
inc
out
add
sbb
mov
inc
aad
or
sbb
mov
mov
shrl
lock
inc
ss
cmp
lcall
les
in
scas
pop
xlat
mov
sarb
fwait
mov
mov
mov
or
les
or
push
sbb
mov
or
in
push
fdivrs
push
fsubr
or
shrb
in
or
mov
movzwl
jnp
jg
and
adc
dec
dec
icebp
jg
cmc
je
sub
jmp
jge
imul
push
jmp
adc
ret
push
cwtl
sbbb
inc
or
adc
or
or
and
push
push
cmp
movsl
mov
das
xor
aad
pop
das
mov
ja
arpl
je
lock
clc
mov
mov
xor
inc
mov
cmp
cmp
jle
push
cmp
mov
addb
push
into
fnstcw
ret
jle
mov
sbb
mov
push
sbb
xchg
push
push
fdivs
xchg
mov
dec
popf
mov
lock
cmp
pop
mov
je
pop
or
cmpsl
xlat
push
loopne
sarb
dec
sbb
add
cli
pop
pop
adc
mov
push
movsb
jae
jo
cmp
push
stos
sbb
mov
fcompl
inc
fwait
pop
lea
fildll
call
loopne
shrb
fcoml
jne
add
rclb
and
sbb
into
in
loopne
mulb
pusha
cmp
stos
loopne
jmp
mov
xor
xor
push
int3
rclb
or
imul
mov
in
add
pusha
je
mov
jl
sub
dec
mov
push
add
xor
dec
pushf
ss
jp
xchg
add
or
inc
cmp
jns
xor
add
roll
cmp
inc
nop
xchg
mov
or
adc
jb
test
and
pop
mov
or
faddl
rolb
test
in
loopne
and
cli
or
add
dec
add
ret
dec
fadds
call
dec
mov
rcrb
jo
inc
ja
sbb
adc
fimull
push
imul
stos
sbbb
dec
jns
push
pop
xchg
cmp
add
ret
cmp
cli
in
mov
dec
rcll
in
nop
or
or
stos
adc
lods
dec
xor
mov
inc
mov
scas
sbb
pusha
sbb
mov
inc
mov
adc
sub
loop
pop
cmp
les
sub
jb
pop
xor
push
sbb
push
call
and
insl
xor
or
addl
ret
fs
stc
add
decb
call
push
inc
mov
out
popf
or
push
addr16
mov
add
aaa
xor
or
push
aas
mov
sbb
add
and
add
or
imul
and
dec
cmove
pop
fmuls
dec
movlps
leave
loopne
adc
sbb
adcb
dec
clc
repz
andb
adc
out
add
xor
mov
sahf
sbb
adc
inc
mov
pushw
ret
sbb
adc
out
insb
sahf
aam
fcoms
fsubl
lahf
lret
loopne
in
mov
mov
xor
inc
mov
pushl
jae
rorl
push
js
cmp
ret
shr
movzbl
push
adc
cmpsl
jno
push
ret
push
push
inc
in
movsb
pop
add
mov
insl
mov
xchg
xchg
push
insl
mov
sbb
push
rcrl
arpl
xchg
mov
mov
stc
ror
addr16
fldt
inc
push
gs
or
xor
sbb
xor
pop
out
aaa
sbb
cmp
je
push
add
xchg
rcrb
int
or
mov
add
lock
add
mov
decl
flds
mov
cmp
jg
mov
pop
sbb
adc
pop
ror
dec
arpl
lea
arpl
pop
xchg
mov
enter
mov
enter
jns
add
mov
xchg
mov
cmp
adcl
fwait
mov
add
subl
sbb
jecxz
jne
or
loop
inc
ret
push
pop
jmp
mov
push
mov
add
sbb
mov
and
cmp
je
push
fwait
mov
into
jmp
shlb
cld
jne
xor
cmp
xor
lock
clc
cmp
pusha
or
xor
inc
cmp
jae
pop
mov
or
xor
ja
mov
and
xor
je
push
mov
outsl
pop
sub
add
fiaddl
mov
mov
pop
add
ret
hlt
sub
scas
pop
hlt
add
jo
in
jb
jg
push
adc
inc
js
mov
rorl
stos
clc
shll
test
nop
add
mov
sub
mov
push
pop
xor
adc
cli
lea
ljmp
push
push
out
sbb
lods
pop
daa
sub
test
xor
sahf
lret
jo
leave
pop
in
mov
jle
push
mov
shrl
cmpsl
mov
dec
lahf
cmp
push
addr16
js
jb
sub
or
ret
lds
xchg
xor
jg
fimull
leave
js
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
or
inc
adcl
jl,pt
jbe
add
inc
sarl
mov
popaw
mov
push
push
pop
adc
cmpsl
leave
fdivr
mov
and
insl
xlat
pop
pop
scas
push
inc
rorl
jl
cld
fistps
hlt
jl
repz
push
or
jb
dec
mov
das
push
xor
mov
inc
ret
or
mov
cmp
sbb
jae
mov
push
dec
pop
or
xchg
mov
xor
popf
or
fiaddl
xor
jne
mov
mov
adc
push
add
loopne
mov
push
je
cmpsl
std
or
mov
ret
je
mov
fsubrs
mov
mov
push
mov
ds
mov
dec
sbb
or
sbb
mov
stc
or
dec
enter
mov
or
test
hlt
add
add
pop
dec
or
mov
imull
mov
jae
dec
fs
sbb
sub
adc
mov
insb
add
inc
outsb
mov
push
add
add
cmp
xchg
gs
enter
lret
push
inc
fcmove
jae
jb
insb
scas
jnp
xor
cmpsl
mov
xchg
sub
jge
or
mov
mov
cmp
jne
out
test
icebp
cmp
je
jbe
movb
fldl
or
in
push
push
and
mov
daa
lock
cmp
je
pop
sbb
add
andb
mov
mov
shlb
inc
call
push
ljmp
fidivrs
or
adc
push
scas
setne
xor
mov
insb
pop
movsb
scas
or
pop
xchg
ljmp
jne
adc
aam
add
clc
jg
jo
bsr
mov
or
es
add
adc
pop
test
pop
mov
adc
mov
rorl
test
js
push
js
dec
lock
jo
add
add
arpl
loope
push
push
pop
outsl
mov
xlat
pop
adc
dec
push
push
cmp
dec
pushf
mov
shr
add
sarb
jne
push
mov
jne
ficoms
push
inc
sbb
push
mov
cmpsb
nop
subl
add
test
jns
fnstsw
mov
nop
jb
lock
shlb
hlt
sub
pushl
or
jge
cmp
je
pop
inc
or
jb
cs
mov
repnz
or
add
insb
cld
cmp
lea
jbe
push
inc
mov
test
test
push
add
cld
sbb
test
sub
sbb
add
sbb
push
dec
hlt
xor
movl
popf
dec
add
dec
addr16
sub
mov
loope
loop
xor
js
in
adc
inc
loopne
add
inc
sub
adc
add
xlat
jecxz
cmp
rolb
adc
mov
cmpsb
xchg
mov
icebp
or
pop
mov
mov
mov
shr
jecxz
js
push
das
push
js
or
add
lcall
daa
icebp
sub
dec
lret
inc
push
sbb
lods
jb
scas
xor
mov
add
clc
sub
add
inc
scas
xor
dec
pop
shl
sub
fldt
jne
pop
sub
or
bound
sbb
mov
aam
and
xlat
sub
mov
dec
or
leave
jne
mov
call
cmp
add
ret
adcl
test
les
add
call
cmp
pushf
cmp
or
pop
add
xlat
nop
add
inc
jl
rclb
inc
push
jo
sbb
mov
sarb
clc
mov
push
popa
adc
mov
ljmp
xchg
shrl
popa
add
sub
xchg
dec
jmp
inc
cs
add
or
ljmp
in
add
outsl
and
icebp
mov
pusha
les
jno,pt
movsl
xchg
pop
jecxz
and
pop
mov
ficompl
pushf
jmp
push
push
mov
cmc
stos
add
adc
push
nop
and
mov
cmp
and
aad
inc
sub
movsl
mov
push
or
in
jmp
imul
inc
push
xor
jl
pop
clc
loope
lret
cmp
or
mov
inc
and
push
shrb
adc
loopne
jne
in
inc
inc
mov
adc
leave
and
clc
cmp
mov
repnz
adc
cmp
in
adc
sbb
push
inc
outsl
das
mov
push
push
mov
lock
mov
add
or
and
jge
sahf
xor
out
sub
sbb
js
std
pop
pop
ret
mov
pop
mov
cltd
xchg
int3
pop
or
nopl
or
adc
sti
cs
sub
dec
push
mov
leave
gs
mov
inc
sbb
or
and
push
sbb
and
and
in
sbb
and
xchg
cwtl
mov
sbb
push
sahf
pop
inc
pop
or
ljmp
push
cmpsb
add
das
rorb
out
enter
movsl
jge
pop
xlat
ss
adc
sbb
and
stc
adc
cmp
popf
cmpl
loope
sbb
cmp
push
mov
fisttpl
shrl
pop
negl
xor
or
mov
add
cmp
add
push
mov
jmp
push
add
sti
sti
lock
bound
clc
dec
sbb
jb
jbe
das
pop
mov
dec
and
pop
jmp
sahf
cld
fucomp
mov
pop
sub
jne
sub
dec
je
or
aaa
into
adc
in
jge
adc
or
decl
rcl
div
aas
sbb
jmp
mov
mov
dec
idivl
leave
jmp
sub
push
imul
add
xor
cld
mov
add
push
mov
xor
jnp
fsubl
and
or
adc
xchg
ficoms
adc
pop
push
mov
mov
pop
inc
dec
pusha
mov
mov
xchg
or
rolb
clc
xchg
jo
add
daa
pop
pushl
test
lcall
outsb
mov
and
in
popl
sbb
shr
frstor
dec
sbb
jae
mov
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
stos
jmp
and
jmp
xchg
mov
pop
scas
lret
out
sbb
jbe
cmp
cmp
out
ljmp
cmp
add
push
pushf
mov
iret
lea
pop
and
pushw
or
stos
and
sub
stc
insb
fstl
dec
imul
jno
inc
adc
sub
stc
mov
lahf
rorb
fmuls
inc
fmuls
xchg
push
out
mov
sbb
xchg
pop
jge
pop
jg
loop
imull
inc
push
mov
jg
jg
bnd
lea
push
push
push
push
add
push
cli
mov
movb
xchg
out
cmp
subb
cmpsb
add
dec
mov
inc
test
inc
stc
and
cltd
lahf
ret
leave
into
sarl
lea
sbb
inc
dec
jl
movl
sbb
scas
mov
rcll
sbb
jp
stos
rorb
cli
sbb
sbb
or
inc
or
mov
xchg
xor
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
add
add
mov
xchg
sub
add
push
ret
mov
xor
mov
adc
xchg
push
aaa
xchg
dec
adc
out
xor
lcall
xor
dec
je
jno
jle
ss
and
pop
cmpsb
adc
rorl
sub
adc
jnp
adc
xor
mov
jns
jne
push
sbb
and
adc
or
mov
mov
mov
add
movsl
dec
push
adc
lret
dec
inc
fistpl
dec
mov
call
test
mov
repnz
in
imul
mov
loopne
mov
loop
cmp
mov
mov
mov
xor
ficoml
xor
rcl
mov
fnstcw
test
add
push
cmp
out
sbb
pushf
jl
in
jge
sbb
cmp
lea
jl
add
je
cwtl
add
jecxz
cmp
pop
cmp
loope
andb
push
add
mov
clc
aam
push
aam
das
in
and
cmp
loop
jne
int3
push
roll
mov
imul
loopne
clc
daa
sub
add
jle
aam
sub
fsubrl
xchg
inc
add
cmpsl
rorb
xchg
mov
dec
test
shlb
sub
xor
dec
mov
das
add
mov
jne
push
xchg
pop
out
sub
xor
pop
faddl
jo
xor
push
rcr
pop
dec
je
lea
push
loopne
add
mov
fwait
lret
jo
sub
loope
aas
mov
cmp
pushl
call
push
or
jge
es
sub
or
jns
lcall
push
fisttpl
mov
push
mov
lock
mov
dec
div
push
dec
je
dec
push
push
sub
jg
xchg
call
fwait
cmp
lods
sub
sub
in
dec
jmp
mov
pop
sub
aaa
daa
insl
es
cmp
push
mov
add
lcall
inc
adc
dec
cmp
in
and
adc
xor
lods
xor
sbb
mov
dec
loopne
and
push
dec
pop
lcall
or
sbbb
xchg
test
jecxz
fistps
cmp
ficomps
fwait
add
dec
dec
scas
lods
enter
addl
popa
into
in
and
add
dec
cmp
sub
jbe
loop
adcb
push
iret
jl
push
sub
mov
cmp
mov
fimull
clc
neg
sbb
and
push
push
out
cmp
sub
adcb
mov
mov
lods
mov
in
hlt
dec
test
jge
pushl
inc
scas
add
jnp
pop
add
adc
punpckhdq
arpl
jmp
pushl
and
and
in
push
roll
xchg
pop
xchg
jo
pop
pop
xchg
or
mov
mov
in
pop
ljmp
js
push
rclb
decl
jle
cmpl
jne
pushl
xchg
je
ja
dec
sbb
push
adc
mov
fadds
adc
nop
jmp
sbb
add
xor
add
dec
addl
or
inc
scas
aas
movsl
sbb
pop
cmp
je
cmp
leave
fldcw
sti
sbb
or
jno
add
pop
js
push
mov
test
ja
xor
leave
popa
in
mov
test
inc
inc
shrl
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
add
mov
test
ficompl
pop
ja
mov
sub
test
loop
sbb
cmpb
and
sti
dec
jo
test
or
popf
sub
and
sbb
or
push
fidivrl
sbb
es
add
leave
push
pop
inc
aad
adc
shlb
pop
cmp
ja
loope
iret
push
adc
enter
cltd
add
shrl
xor
cltd
stos
xchg
test
mov
in
cmc
xor
or
xor
int3
ja
movsb
shlb
adc
xor
xor
daa
sbb
mov
push
push
lea
and
add
add
insb
sub
dec
dec
jae
push
int3
inc
dec
lret
outsb
and
push
push
lret
jl
cmp
cmp
xchg
andb
jbe
xor
imul
inc
shrb
mov
mov
xor
clc
sbb
test
mov
jno
enter
cwtl
imul
inc
inc
fldl
fmull
adc
push
pop
int3
push
out
call
push
xchg
push
push
push
add
mov
aaa
movsl
mov
mov
cmp
push
stos
adc
jp
cli
ja
mov
mov
mulb
es
andl
out
sub
sbb
cmp
int
pop
into
popa
in
or
xor
ja
lea
sub
out
jge
xchg
add
mov
cmp
adc
fmuls
dec
rorl
dec
add
test
aam
or
cmc
jmp
fs
xchg
jle
add
rorl
pop
test
adc
sub
cmpb
mov
jo
fdivs
cmp
cmp
pop
sub
pop
push
pop
mov
push
inc
mov
aaa
cs
sub
push
push
mov
mov
adc
sbb
and
repz
cmc
mov
jmp
fisubrs
rolb
add
mov
cmp
or
push
das
pusha
mov
pop
inc
or
push
cmp
sub
lcall
jne
adc
pop
push
popa
push
stos
xchg
xchg
stc
sbb
sub
roll
xchg
fbld
je
jnp
nop
or
sbb
daa
out
xor
add
movsb
insl
mov
shlb
pop
jecxz
orb
fisubl
je
shld
iret
loope
and
xor
cltd
mov
pop
inc
and
lea
mov
or
into
mov
orl
pushf
dec
sub
ret
add
jo
inc
enter
add
mov
ljmp
fcoms
mov
add
adc
stc
push
in
cli
test
xchg
push
xchg
jp
test
jg
adc
pushf
mov
stos
lock
xchg
rcrb
shrb
xor
mov
scas
mov
pop
dec
loope
sbb
testb
or
shlb
and
push
fucomip
or
out
cld
fildll
pusha
fstpl
push
pop
jge
mov
sub
push
sub
xor
mov
dec
jg
lea
cltd
idivl
add
xchg
or
movsl
daa
rcr
mov
js
out
pop
imull
fs
or
xchg
arpl
mov
leave
jle
cmp
std
pop
stos
int
mov
cld
negl
pushf
movb
jnp,pt
dec
sbb
dec
lea
mov
jl
xchg
sub
jg
pop
ljmp
dec
nop
or
out
insb
std
outsb
mov
test
xchg
fildl
mov
out
stos
fisttps
test
jns
faddl
or
mov
out
ds
lock
mov
sub
mov
fcomip
xchg
int3
mov
mov
inc
les
out
push
pop
jp
xchg
pop
jl
jmp
into
add
das
or
lock
je
into
clc
fidivl
jmp
push
add
movsl
rclb
out
push
pop
mov
pop
jne
pop
pop
movb
add
xor
xor
jmp
mov
pop
in
ljmp
mov
inc
cmp
and
orl
xlat
and
xor
mov
cmpsl
je
addr16
push
out
sub
bound
int
or
push
xor
test
jmp
sbb
test
dec
mov
shll
into
pop
leave
ret
and
setl
xor
int
sub
jnp
call
push
data16
imul
in
add
mov
mov
repnz
xor
fs
sbb
sbb
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
aam
cmp
inc
jne
sti
mov
outsl
lods
add
adc
mov
cmp
fs
leave
pop
xor
orb
add
int
pop
sub
push
mov
lea
push
mov
push
movsb
pop
mov
in
inc
and
lea
subl
decb
mov
dec
or
dec
or
add
or
xlat
pop
insl
or
adc
cli
sbb
push
inc
xor
mov
sub
xor
adc
imul
add
sbbb
imul
sbb
les
pushl
or
cmp
sbb
mov
or
push
dec
jbe
shlb
pusha
pextrw
sub
mov
push
pop
shr
pop
ret
inc
xchg
pop
popf
dec
sbb
movnti
xor
test
mov
pop
or
inc
cli
and
push
lds
dec
push
ds
sbb
mov
pop
mov
and
pushf
lcall
andl
dec
cmp
sub
clc
add
fisttps
mov
push
push
add
mov
shrb
mov
clc
setb
test
inc
add
add
mov
sub
cmp
xorb
mov
xor
dec
adc
data16
push
lea
push
lods
mov
pop
aaa
cmpb
jle
je
push
fnstcw
pop
lcall
insl
add
fldl
add
cs
dec
mov
mov
jecxz
pop
push
mov
hlt
scas
sbb
mov
sub
aaa
push
pop
iret
in
incl
fldt
not
push
inc
or
das
push
loopne
nop
push
mov
mov
mov
leave
and
dec
les
xchg
pop
lods
test
sbb
add
mov
pop
out
adc
clc
mov
sub
pusha
sbb
imul
jmp
push
pop
xorl
out
xor
in
in
mov
repnz
cld
sub
pop
xchg
data16
sti
arpl
add
arpl
adc
clc
popa
jl
xor
cwtl
dec
and
add
or
js
cmp
jle
icebp
inc
push
xor
and
adc
das
inc
xor
and
add
xchg
addr16
sar
add
jmp
pcmpgtw
ja
pop
js
aad
fldt
and
adc
jmp
jno
sbb
and
test
pop
gs
or
push
mov
adc
inc
pop
les
cmp
add
ds
fs
sbb
pop
cwtl
loop
jp
jns,pn
jns
push
in
enter
push
pop
fmuls
adcb
loopne
push
jns
push
and
mov
push
rclb
or
nop
fcompl
aaa
pushl
dec
int3
add
in
pop
add
jecxz
les
adc
jae
shrb
das
add
les
push
test
test
add
cmp
outsb
hlt
fsubr
mov
mov
hlt
sub
rcl
arpl
adc
pop
xlat
mov
pop
pop
je
jne
daa
lahf
or
test
ds
or
mov
add
push
pop
xchg
push
ret
insl
test
or
and
sub
fldl
jne
movsb
pop
pop
push
cmp
outsb
xchg
lods
jnp
mov
arpl
adc
rcrb
mov
mov
push
sbb
adc
mov
js
in
adc
push
xchg
push
andl
dec
rclb
and
in
cmp
adc
jne
mov
popl
je
xchg
push
inc
sbb
push
xchg
pop
pushl
push
lret
sub
xor
jmp
ja
pop
andl
dec
cmp
mov
add
sbb
sbb
rorb
test
shlb
xlat
insl
xchg
xchg
mov
test
je
stc
loop
jne
jg
dec
mov
jmp
dec
mov
sub
and
fstl
aam
mov
lcall
dec
add
xchg
inc
pusha
inc
xor
cs
adc
cmpsl
xchg
sub
cltd
dec
insl
push
mov
sub
leave
js
cmp
jge
daa
in
jmp
mov
mov
mov
cmp
sbbb
cmp
mov
shlb
call
inc
cmpsl
lahf
push
in
or
mov
jns
js
fsubr
sbb
inc
inc
lcall
ljmp
cmp
int
inc
cs
sbb
aam
xor
sbb
push
xor
test
mov
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
xchg
and
inc
sbb
fisubrl
sbb
in
or
jnp
loopne
mov
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
leave
repnz
dec
add
sbb
jno
pop
lea
das
arpl
pop
push
or
addl
stos
es
pop
pop
popa
cmp
dec
lock
jo
add
mov
ret
jecxz
xor
popf
inc
shlb
push
or
sbb
loopne
lea
mov
jo
std
cmp
mov
push
jge
mov
sub
push
iret
frstor
fidivl
aad
mov
add
out
cmp
push
xchg
push
movsl
test
in
fwait
jle
push
pushf
lret
xor
add
jmp
mov
xchg
or
push
mov
push
jne
stc
outsb
nop
data16
adc
push
pop
pop
test
cmpsb
add
pop
dec
clc
mov
pusha
fmull
adc
sbb
stos
and
insl
addr16
or
or
in
repz
int3
arpl
in
call
inc
sbb
lock
and
adc
or
pop
mov
pop
daa
pop
arpl
mov
rorb
and
loopne
cmp
sbb
dec
add
pop
mov
add
xchg
jle
jge
loope
inc
cwtl
adc
sub
call
or
adc
je
inc
add
mov
xorl
ficoms
or
ss
les
stos
xor
enter
mov
sbb
sbb
or
clc
sub
hlt
push
or
cmpsl
cmp
jmp
lock
pop
dec
call
cmp
inc
ja
clc
ljmp
xor
lods
xor
cli
in
call
lock
dec
mov
sub
lock
shlb
dec
lahf
aaa
jns
clc
pushf
jge
mov
cli
in
jmp
aas
hlt
mov
mulb
mov
sub
add
into
push
push
add
push
call
or
mov
dec
xchg
cmp
and
jp
adc
sub
inc
or
iret
push
rcrb
test
inc
jmp
jbe
cmpb
add
int
sub
jg
mov
cwtl
add
mov
jb
ret
xchg
cmp
jmp
mov
addl
rorb
or
mov
shlb
mov
or
adc
pop
push
mov
call
repz
xor
xor
jle
addl
movzwl
dec
push
cs
outsb
mov
jmp
mov
jl
cmp
xchg
push
lea
push
push
adc
inc
lods
cld
push
push
shll
or
popw
hlt
jbe
pop
push
mov
push
nop
jp
sbb
outsb
adc
add
cmp
push
and
or
inc
xor
rorl
inc
xorb
mov
push
fisttps
in
subl
scas
das
add
shl
aaa
cwtl
cmp
fwait
mov
mov
ss
pushf
es
adc
int3
ret
pop
mov
mov
jae
add
push
divl
push
mov
add
xchg
inc
ficompl
sub
sub
add
mov
adc
scas
mov
outsb
xchg
push
leave
ret
xchg
push
push
test
hlt
sub
paddb
add
lea
andl
xchg
mov
xchg
pop
inc
fcompl
push
test
cmpl
addr16
movl
loope
xchg
mov
dec
sub
adc
inc
shlb
add
iret
xor
test
push
xchg
arpl
dec
push
mov
dec
add
mov
or
inc
out
cmp
adc
pop
push
outsb
call
popf
pusha
test
and
or
push
addr16
call
or
xchg
or
test
lds
inc
add
sahf
jo
jg
int3
jmp
mov
orb
aaa
or
xchg
js
ds
cmpsl
push
sbb
pop
test
js
sti
xor
inc
ljmp
and
or
adc
or
sub
scas
cmpsb
push
inc
iret
daa
push
mov
aaa
sbb
mov
xchg
mov
xor
pusha
or
sub
loope
mov
xorb
mov
sahf
fnsave
push
enter
jno
nop
or
dec
mov
push
adc
out
or
lret
mov
push
jnp
mov
mov
mov
add
addl
add
inc
xor
add
or
inc
jp
stos
andb
and
lock
mov
adc
movsb
push
xchg
sbb
daa
adc
xchg
jb
mov
add
ja
dec
lea
mov
iret
xchg
sbb
and
pop
lods
movsl
aam
adc
push
jp
pop
ds
lea
sbb
jo
pop
int
sub
push
push
ljmp
inc
mov
out
andl
out
out
ror
orl
fstps
pop
les
rclb
aas
and
inc
add
adc
inc
or
lcall
add
sbb
sub
xchg
inc
ret
push
lret
pushf
inc
repz
lea
test
push
adc
add
iret
sub
lea
dec
sbb
scas
mov
mov
add
loopne
add
xchg
xchg
adc
iret
nop
lea
xor
pop
sbb
adc
add
mov
nop
or
sbb
setne
in
and
test
pop
iret
aam
mov
pop
push
sub
cwtl
aad
lock
sub
mov
repnz
mov
lea
or
push
imul
adc
sbb
or
mov
test
je
xor
negl
out
or
adc
push
dec
mov
or
mov
jmp
xor
cli
add
mov
push
lahf
lock
out
mov
pop
push
push
mov
cmp
mov
je
faddl
xor
popf
push
es
shll
arpl
cmpsl
lock
jnp
movsb
jo
rorl
xchg
mov
mov
insb
dec
lea
cmp
mov
mov
pushf
in
dec
adc
loop
jne
subl
push
push
pop
jne
add
sti
cmp
in
aam
mov
gs
sbb
and
push
cmc
pop
cmp
in
test
pop
ror
inc
add
stos
mov
push
pop
jmp
mov
clc
fdivl
xlat
dec
add
popa
or
lret
dec
addr16
test
sbb
sub
adc
or
dec
and
sbb
and
inc
cmp
adc
cld
xchg
or
jmp
push
sti
nop
xor
cmp
adc
movsb
call
jl
and
imul
sbb
pop
incl
xchg
xor
shlb
addb
loope
xchg
adc
aad
pop
push
pop
xor
xchg
mov
daa
loope
xlat
push
repnz
push
cmp
aam
add
lret
jge
inc
js
aad
mov
push
jle
xor
add
push
nop
mov
loope
data16
jp
rorb
mov
cmp
push
and
mov
pop
pop
mov
call
push
push
mov
mov
fadd
xor
loope
fldl
or
mov
aad
call
inc
push
rcrl
cmc
sbbl
mov
dec
adc
inc
or
lret
push
insl
mov
fsts
mov
decb
repnz
mov
scas
sahf
subl
lock
mov
push
pop
data16
rcrb
xchg
fs
lock
sub
loope
mov
cmp
or
daa
mov
inc
cmp
jnp
aas
pushf
mov
cmp
in
add
push
adcb
add
loopne
paddd
jbe
mov
fdivr
ret
jne
and
pusha
pop
pop
les
mov
scas
shrb
lret
pushfw
clc
mov
add
lea
lea
mov
mov
lea
push
scas
enter
in
ret
push
es
in
incb
fisttpll
lahf
and
lahf
sar
aaa
mov
cmp
xor
cmc
mov
cmp
mov
inc
mov
pop
addr16
push
out
sub
cli
insl
pushf
lods
and
in
popa
add
push
roll
ret
jns
and
mov
push
loop
test
sbb
js
in
andl
xchg
dec
lea
xchg
pop
mov
jecxz
add
sub
mov
sbb
inc
out
dec
das
ss
xchg
and
loope
push
pop
xchg
mov
add
or
jge
add
lret
push
add
repnz
andb
mov
and
mov
add
pop
icebp
aas
cmp
out
add
dec
mov
enter
push
outsl
jp
cltd
mov
lea
and
adc
push
cmp
adc
sarb
xchg
jle
setno
push
mov
mov
push
fists
popa
in
outsb
and
mov
push
fs
shr
imul
jno
and
sbb
imul
lret
nop
andl
push
adc
pop
cmp
or
mov
xor
popa
sbb
inc
or
adc
in
leave
ret
mov
add
adcb
inc
pop
fiaddl
or
mov
and
jne
push
fisttpll
mov
add
pop
test
mov
sahf
push
imul
insb
lcall
or
aam
add
jecxz
mov
push
add
jp
mov
dec
in
add
fadds
addr16
adc
mov
cmc
xchg
and
jbe
popf
movl
maxps
jl
pushf
loope
pop
and
je
pop
or
lds
sub
and
mov
and
fdiv
add
jge
div
mov
mov
cmp
popl
faddl
and
sbbb
sbb
add
sbb
or
push
stos
fs
imul
adc
jmp
test
sbb
xor
inc
aad
popa
xchg
lods
xlat
sbb
imul
xor
sbb
sbb
stc
shlb
pop
xlat
sahf
imul
rcrb
pop
or
sub
movsb
sar
pop
mov
push
pop
cmp
je
push
mov
mov
or
sbb
or
or
cmp
fcomps
push
dec
outsl
rcr
push
xor
and
test
and
lea
das
mov
add
add
rcr
call
and
and
adc
sub
and
lds
push
cmp
add
and
sahf
pop
sub
nop
iret
add
adc
sub
or
and
lods
mov
sbb
mov
jp
jbe
dec
testl
imul
cs
aam
lods
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
stc
mov
push
xchg
subb
into
int3
arpl
rorb
push
sbb
cmp
push
xchg
lds
jge
sub
mov
fdivr
cmp
or
shlb
mov
lds
lcall
loopne
pop
popf
call
fucomp
xchg
or
in
dec
call
rolb
jmp
push
jo
loopne
push
sbb
imul
dec
ret
insb
pop
fldl
mov
out
ljmp
in
add
mov
shlb
pop
gs
rcrb
gs
add
les
ret
dec
fstl
jp
enter
iret
adc
jl
xor
mov
push
addl
dec
xor
lea
pop
and
fsubrs
dec
repz
rorb
push
mov
fists
out
loop
ss
or
mov
pop
nop
sti
mov
loopne
pop
xchg
out
xchg
mov
sub
or
and
adc
dec
or
jb
xchg
scas
out
iret
js
call
mov
dec
pop
or
xchg
push
test
xchg
test
add
test
xor
addb
mov
pop
cmp
push
jnp
or
xor
scas
mov
jae
fisttpl
rclb
mov
mov
mov
inc
scas
int3
pusha
repz
mov
pop
inc
lret
mov
js
ficoms
push
jae
xchg
fistpll
xchg
dec
adc
and
push
cs
outsb
push
data16
add
mov
dec
add
mov
aaa
xorl
les
and
and
je
jae
rcrb
cmp
mov
xor
add
bound
add
sub
add
cmp
inc
ja
jl
push
mov
mov
xor
pop
pop
or
pop
cwtl
aad
push
sub
push
sbb
jo
mov
bnd
scas
sbb
pavgb
mov
rolb
add
lods
int3
mov
insb
rorl
movsb
dec
hlt
sub
xchg
int
lret
xchg
sbb
rcr
adc
mov
add
inc
inc
loope
mov
adc
xchg
clc
mov
outsl
cltd
dec
xchg
dec
stos
ret
sub
sbbb
fwait
outsl
cmp
enter
clc
setle
fnstenv
add
adc
mov
rcll
pusha
cmovle
or
mov
pop
clc
out
or
cmpsb
pusha
push
mov
cmp
push
mov
push
ret
xor
push
or
outsl
push
inc
jo
adc
push
mov
repnz
xor
mov
sbbb
cmc
push
scas
push
int3
push
inc
inc
movaps
cmp
mov
das
adc
cltd
xchg
lock
clc
icebp
test
push
lods
scas
add
or
mov
lods
mov
test
cmp
jmp
aad
xchg
sbbl
in
mov
shrb
mov
push
jo
jae
lods
dec
ret
pop
enter
loopne
add
sbb
add
ret
aaa
lods
stos
adc
mov
leave
test
mov
subl
pop
arpl
pusha
adc
scas
fsubs
pushf
je
cmpb
rcl
jmp
jmp
ret
push
mov
cmpsl
push
stos
fimull
adc
je
jl
clc
call
arpl
stc
sub
lea
push
lea
push
inc
xchg
cmp
push
jmp
mov
cmpsb
cmpsb
nop
pushf
xlat
loope
fisubl
xchg
jmp
xchg
lret
cmp
push
sub
cmp
jle
pop
sub
sub
scas
lcall
jne
out
cmpsb
add
push
add
jg
lcall
shll
mov
ja
int3
out
ret
or
cmp
je
sub
pop
ja
shlb
push
stc
cmp
fcmovnu
js
add
ret
fstps
sti
add
loope
sti
push
xchg
sub
dec
fwait
push
adc
in
pop
pop
ds
add
in
sub
lea
out
push
dec
or
inc
sub
sbb
or
adc
js
or
or
fisubl
cmp
mov
ja
push
or
hlt
adcl
lahf
push
and
call
hlt
jmp
lock
test
mov
mov
or
add
xor
clc
daa
test
divl
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
cltd
xchg
push
sub
cmpsl
incb
out
rolb
cmp
je
sbb
jbe
push
mov
mov
fbstp
mov
shrl
mov
push
mov
add
inc
or
pop
pushl
aaa
mov
mov
rcrb
je
sub
cld
mov
add
push
push
sub
es
add
xchg
dec
add
jbe
jne
push
sub
dec
and
insb
sbb
js
push
cmpsb
dec
or
inc
sub
mov
inc
cmpl
jb
mov
dec
stos
rorl
mov
test
push
xchg
lock
jge
cwtl
pop
stos
jne
adc
cli
or
movsl
clc
dec
jnp
xchg
inc
and
push
mov
mov
push
dec
ret
dec
popa
cmp
cmp
push
leave
push
cmp
dec
clc
adc
leave
es
mul
seto
mov
enter
mov
push
jmp
cmpsl
mov
mov
push
xor
test
jbe
sub
dec
mov
ficomps
adc
mov
aad
clc
mov
push
adc
mov
cli
push
dec
shll
adc
ds
push
sbb
cmp
cwtl
xchg
and
adc
andl
add
movsb
roll
jae
fs
inc
inc
add
dec
xor
mov
xchg
push
dec
cmp
inc
clc
xor
mov
int3
cmp
scas
cmp
pop
aam
shr
push
sahf
and
cli
movsb
mov
nop
clc
or
in
mov
sbb
pop
lock
or
sbb
cmp
je
addb
add
or
lock
push
aam
cmp
jne
inc
xchg
sub
jecxz
add
aad
cmpsb
add
inc
xchg
sub
adc
outsl
push
cmp
mov
pop
lcall
aas
jge
jae
faddp
jmp
jl
ret
pop
push
test
push
ss
xchg
jmp
mov
inc
jno
cmp
les
sbb
inc
cmp
jae
add
cwtl
scas
cmp
sub
pop
jbe
shrw
push
out
sub
cmp
jne
and
scas
adc
inc
jl
cmpb
lar
push
ss
push
inc
xlat
mov
mov
arpl
adc
xlat
push
jae
test
mov
or
jbe
lcall
cli
jno
pop
or
pop
shlb
mov
mov
test
pop
or
mov
jne
lcall
sbb
stos
int3
xlat
dec
enter
mov
loope
mov
call
push
sbb
loop
andb
or
cli
mov
inc
scas
dec
cltd
adc
inc
dec
jns
fmul
sbb
fsincos
imul
adc
mov
sbb
cmp
jae
data16
and
cli
loopne
mov
ret
mov
mov
mov
push
or
or
xchg
jo
push
mov
and
push
or
push
iret
jo
loopne
xor
jno
sahf
mov
push
and
ret
and
faddp
xor
or
out
inc
push
jge
push
sub
into
mov
cmp
mov
push
lock
push
clc
pop
in
pop
dec
or
sbb
push
pop
lahf
sar
ffree
pusha
sub
dec
or
ret
xor
orb
and
sbb
inc
leave
sbb
mov
stc
bound
push
in
sbb
pop
lret
push
inc
ss
hlt
jbe
jecxz
mov
mov
neg
push
xor
imul
mov
xor
or
out
jne
push
jge
mov
shrb
add
pop
repnz
cltd
aam
fstpl
mov
insb
addl
rcrb
inc
mov
pop
xchg
jmp
call
pop
fisubl
sub
adc
flds
xchg
jno
mov
out
pop
cmp
mov
or
sub
shrb
push
orb
xchg
adc
jnp
mov
dec
sub
mov
jecxz
mov
jne
push
pop
ret
mov
and
test
aas
lds
popf
sub
popf
inc
add
scas
mov
lock
xor
cmp
xchg
je
cmp
mov
add
mov
add
mov
pop
inc
adc
fistpl
in
sub
imul
push
sub
xchg
push
dec
pusha
mov
push
sbb
data16
inc
push
je
inc
mov
cmpsl
aam
dec
js
jl
adcl
fidivs
lds
inc
repnz
mov
mov
add
add
inc
jp
and
push
pop
mov
push
add
mov
pop
or
fistpll
pop
push
or
push
adc
jb
and
adc
push
pop
popf
push
dec
lahf
pop
dec
outsb
pop
cmp
sub
sbb
ret
jnp
das
data16
ret
stos
gs
push
loop
cmp
mov
repz
mov
filds
push
pop
mov
aad
js
test
sub
push
jg
dec
and
adc
stc
movsl
int
sub
inc
movsl
insl
mov
jmp
cmpsl
xor
mov
cmc
xchg
mov
cmp
pop
cmp
inc
in
adc
cmp
clc
mov
rcl
pop
popf
dec
icebp
add
fdivl
add
jbe
push
adc
add
cmp
push
nop
xor
push
pop
and
mov
jbe
xchg
xchg
add
daa
mov
fs
shlb
adc
cld
lea
insl
int
push
mov
sub
movsb
lret
shr
mov
adc
pusha
js
sub
push
and
xor
int
adc
mov
adc
add
cmp
adc
rcrb
dec
inc
adc
rcll
push
cmp
jne
lds
add
add
repz
popf
jg
or
adc
pop
add
lea
cmp
fmul
mov
or
mov
cmc
xor
int
lock
and
adc
repnz
or
push
movsb
pop
add
lea
pop
insb
xor
sub
sub
cmp
rclb
pusha
cmp
sub
fidivs
pushf
leave
lea
cmp
subb
xlat
mov
enter
lret
pop
stos
sub
push
dec
fcompl
js
sub
fadds
push
cmp
add
movsl
aaa
cmp
jp
sbb
push
sub
pushl
mov
or
xor
call
sub
fwait
std
mov
mov
adc
sbb
aaa
push
sahf
js
push
gs
orl
cmp
call
movsl
cltd
jnp
dec
pop
dec
xchg
push
or
popf
add
in
cmp
cmpsb
adc
push
cltd
sbb
pushf
ss
mov
lret
and
xor
and
rolb
dec
and
push
insl
jg
inc
or
movsl
xor
fnsave
sub
pop
add
popa
and
and
inc
cmp
sbb
add
sbb
lret
les
push
push
pop
xchg
imul
and
push
sbb
sbb
in
pop
fistl
xor
orb
sbb
leave
rcr
int
sbb
movsl
push
stc
add
shlb
icebp
or
sti
faddp
inc
xchg
fs
mov
and
inc
inc
fwait
js
orl
cmp
cmpsb
xchg
sbb
pop
aad
mov
sub
and
adc
jns
cmp
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
imull
lods
stc
mov
cld
jmp
or
jg
mov
test
loope
and
das
pushl
call
and
inc
rep
adc
dec
adc
add
push
sub
adc
adc
pop
inc
jae
test
lret
or
cmpsl
loopne
in
adc
push
mov
or
cmp
or
mov
mov
das
mov
or
add
sbb
mov
pusha
sbb
push
in
je
sub
imul
rcrb
mov
js
mov
dec
pop
dec
mov
sub
clc
js
adc
mov
mov
pop
lret
test
hlt
lea
divl
js
lds
mov
aad
scas
sbbb
xchg
jne
adc
pop
push
sti
dec
cmp
hlt
add
push
imul
push
pusha
out
push
loope
mov
ss
pop
jb
or
jecxz
or
lods
xor
loopne
outsb
add
mov
mov
mov
lea
cmp
jmp
and
ljmp
ret
lea
jmp
mov
pop
sarl
pusha
jo
inc
insb
pop
mov
hlt
loopne
mov
test
ds
pop
add
jmp
add
push
and
adc
mov
mov
inc
push
addl
or
mov
addl
loope
adcl
mov
cmp
in
push
les
mov
pop
cmpsb
mov
movsb
shl
sbb
or
mov
notl
rorl
lock
sbb
jg
push
stos
lods
jne
cmp
cld
lock
insl
popf
dec
pop
mov
xchg
insb
xchg
jecxz
int3
rcrb
xor
adc
in
adc
inc
sbb
sub
loop
sub
push
lea
jge
lea
inc
push
idivb
mov
cmp
inc
mov
aam
fsubrl
or
mov
mov
or
aad
jp
inc
stos
in
mov
xchg
xchg
jne
jo
adc
cltd
inc
jle
mov
cs
ss
xor
or
pop
mov
aad
push
inc
aam
js
cmpsb
lock
sbb
outsb
or
sbbb
hlt
adc
mov
rol
xlat
xlat
mov
loopne
in
in
int
mov
roll
sti
add
mov
movsl
jmp
pop
testl
pop
fnstenv
add
push
mov
call
xor
or
xor
adc
lea
add
stc
or
cmp
inc
push
pushf
fwait
push
pop
push
popa
dec
dec
mov
js
test
je
cmc
insl
and
mov
mov
xlat
push
adc
and
mov
add
rclb
nop
mov
jmp
push
pop
xchg
enter
or
movsb
leave
adc
jno
icebp
and
cmp
es
push
fmuls
jl
xor
dec
ret
push
jmp
js
sbb
inc
scas
in
cmpb
inc
pop
mov
mov
fdiv
mov
out
jnp
orl
push
push
mov
xchg
enter
inc
je
loope
mov
mov
jbe
push
fwait
inc
push
inc
pop
cmp
insl
test
decl
add
push
mov
mov
sub
notl
das
or
pop
xor
inc
out
xor
mov
repnz
test
mov
orl
jne
cmp
les
cs
cmp
mov
andl
mov
fcompl
jle
push
push
loopne
lods
mov
push
pop
test
inc
mov
and
aas
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
or
push
jno
fmuls
enter
aam
out
shlb
mov
hlt
pop
mov
pop
stos
hlt
enter
std
cmc
sub
xchg
movsb
pop
or
jp
loope
dec
out
add
test
jmp
sbb
inc
fsubl
aas
xor
inc
or
loopne
outsl
fiaddl
mov
insb
push
push
push
shrl
mov
and
repnz
sbb
testb
sbb
or
pop
jmp
adc
ret
je
push
das
or
leave
push
mov
jno
cmp
pop
movsb
jmp
mov
push
nop
lock
pop
sub
imul
adc
fdivl
add
adc
incl
xchg
mov
push
lods
in
or
sbb
xor
or
mov
adc
in
out
cmpsl
adc
fs
and
pop
adc
mov
or
arpl
nop
and
dec
pop
xlat
adc
pop
mov
mov
ja
enter
jbe
and
rorl
scas
mov
cmpsl
and
sub
push
loop
ficompl
inc
dec
cmp
mov
outsb
xchg
lods
pop
js
cmp
add
push
bound
mov
shrb
pop
inc
cmp
fistps
fcoml
sbb
fcompl
dec
rolb
cltd
sbbl
xchg
xchg
push
addb
xor
inc
mov
lret
dec
pusha
das
mov
lea
sahf
mov
lods
mov
add
mov
lock
inc
jecxz
in
dec
add
inc
add
add
push
ret
pop
repnz
adc
inc
push
popa
nop
pop
and
shll
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
imul
sub
int3
cmp
scas
fimuls
mov
xchg
add
mov
inc
inc
lods
das
int3
push
and
mov
mov
js
movsl
mov
or
sub
mov
add
xlat
xchg
xchg
scas
push
inc
xor
addl
xor
enter
or
out
adc
lods
subb
adc
mov
les
aad
mov
std
and
mov
jae
jae
fnsave
mov
jb
xchg
dec
cmp
testb
lods
call
and
test
and
mov
sbb
popa
or
fbstp
add
insl
mov
fs
xor
sbb
std
out
ret
mov
fdivr
roll
xchg
cmc
je
loopne
call
lds
imul
ret
xor
pop
pop
ficomps
jl
jmp
ficompl
rolb
jl
cs
dec
xlat
scas
sub
popf
jb
adc
ja
sbb
or
sti
lea
xor
add
lock
test
inc
cld
sbb
dec
popf
adc
add
push
sbb
mov
in
cmp
add
daa
mov
std
popa
add
rclb
or
subl
and
mov
cwtl
add
pusha
adc
or
sbb
andl
scas
jmp
aad
jbe
shlb
mov
inc
adc
jno
xchg
cmp
push
sar
dec
jecxz
ret
xor
dec
push
je
dec
jne
xchg
xor
mov
adc
push
push
ret
and
jmp
lods
pop
mov
adc
xlat
add
push
dec
lods
aam
int
movsl
xchg
ficoml
xor
cmp
je
mov
mov
sub
or
push
das
mov
xchg
jge
js
mov
jmp
jnp
and
or
inc
and
dec
jae
sub
pop
jno
pop
mov
mov
lea
cli
jb
adc
or
jecxz
inc
jae
cmova
lea
jo
jmp
lea
loopne
inc
pop
add
rcrl
daa
dec
arpl
mov
fucom
pop
ret
je
push
mov
jl
or
add
adc
out
add
leave
push
adc
cltd
ret
push
dec
loop
inc
repnz
xor
jnp
enter
dec
push
push
lds
and
inc
inc
cmp
or
mov
lock
sub
push
cmp
testb
rcrl
inc
int
jbe
sub
jp,pt
and
out
je
sahf
rorb
dec
loope
or
arpl
dec
and
push
pusha
and
test
inc
sub
outsb
lock
or
popa
gs
or
call
stc
jmp
dec
pop
inc
nop
aaa
adc
lea
push
dec
cmp
or
ret
cltd
pop
mov
push
cmp
mov
movsb
push
cmp
aaa
push
inc
or
jmp
icebp
lods
mov
jmp
cmp
je
aaa
jns
or
push
jo
dec
andl
pop
push
add
insb
mov
loope
mov
ret
jmp
adcb
mov
int3
jmp
add
lcall
enter
xor
popa
add
in
dec
add
incb
andl
orb
push
mov
ljmpw
popa
sub
shl
orl
fidivl
sbb
push
nop
push
cmp
icebp
adc
push
movsb
push
or
pop
test
les
rcll
cmp
and
adc
and
imul
sbb
sub
jbe
sbb
mov
xorb
adc
fwait
mov
sub
xor
adc
andl
popf
test
inc
stos
mov
dec
addb
dec
pop
imul
dec
add
add
sub
push
mov
pop
test
add
jle
push
fs
push
popa
pop
in
loop
or
mov
and
jg
mov
mov
ja
jge
sbb
mov
shrb
adc
fdivrs
mov
movl
mov
add
sub
movsb
inc
ret
rcll
and
mov
cmpsl
dec
jl
popf
pop
mov
js
daa
sub
xchg
les
push
jo
enter
insb
mov
mov
fsubrl
lea
rorb
popf
mov
fiadds
fnstcw
push
and
mov
movsl
gs
js
push
lret
sub
fs
xor
xor
mov
dec
pop
insl
jae
inc
mov
add
cmp
adc
xchg
mov
sbb
push
dec
xlat
mov
mov
inc
cmp
cmpb
je
imul
ljmp
leave
inc
sub
movsl
dec
sbb
and
jbe
sbb
mov
adc
in
nop
sbb
lods
push
inc
and
cmp
adc
movsb
jns
enter
mov
mov
imul
mov
les
les
mov
mov
mov
lret
and
pop
fimull
jae
lret
sahf
aas
rorb
insb
jns
push
daa
pusha
or
inc
ljmp
adcb
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
stos
sti
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
push
subl
shll
imul
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jns
mov
push
push
cmp
lods
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
cwtl
sbb
sbb
pop
inc
sub
push
test
cmp
lea
pop
jb
xor
sub
lea
in
aaa
sti
pop
cli
sbb
fwait
sbb
cld
pop
inc
std
xchg
adc
sub
xor
lods
lock
hlt
mov
mov
xlat
and
movsb
cmp
or
fwait
push
mov
and
daa
and
adcl
mov
test
repz
pop
std
adc
in
push
cmp
jo
mov
cmp
cmp
cmp
shl
popf
or
mov
dec
cwtl
stos
ds
push
jg
sub
mov
cmpsl
add
xchg
cld
cmc
test
dec
mov
scas
fbstp
enter
aas
dec
stos
mov
cli
insb
cmp
inc
pusha
and
sub
xchg
add
add
or
xor
mov
jl
std
lret
push
out
cmp
jge
dec
stos
push
xchg
movsb
mov
jo
pop
xchg
cmp
xchg
cmp
test
xchg
cmpsl
push
and
and
sbb
shlb
add
pop
and
jl
or
outsl
jb
test
inc
sub
lds
sbb
add
adc
push
mov
dec
outsb
inc
je
sbb
enter
fidivrs
fwait
out
pop
aad
or
xor
and
in
xchg
adc
scas
pop
and
cmpsb
xchg
cmp
in
cmp
or
jne
adc
mov
js
orl
add
mov
dec
add
cmp
mov
fwait
aad
dec
roll
adc
sbb
add
push
adc
aaa
sbb
xor
dec
pop
pop
jb
in
mov
pop
xchg
xchg
pop
std
aas
mov
jle
movl
or
xchg
inc
push
jnp
and
push
popf
push
cmp
jo
adc
pushf
andl
and
add
inc
outsb
pop
popa
inc
fldl
je
sub
inc
and
subb
xor
xlat
and
push
imul
mov
js
movsb
xchg
mov
pop
sub
xor
loop
jne
sub
sub
mov
push
push
mov
xchg
cld
mov
lods
sbb
cltd
fbld
cmp
and
sub
jge
jmp
subl
icebp
push
push
je
jmp
nop
jb
rcll
out
das
dec
sbb
lcall
sbb
nop
leave
adc
dec
je
mov
pop
lret
cmp
or
xor
and
pop
add
lret
add
popf
pop
popf
mov
sbb
fs
cs
sub
pushf
dec
leave
xor
ss
and
leave
mov
add
je
jae
xor
push
adc
jmp
push
sbb
jno
xchg
sub
stos
adc
out
je
cwtl
xlat
pusha
les
dec
xchg
sub
shll
cmp
and
movsb
outsl
jne
mov
cmp
fs
mov
mov
roll
jne
or
jmp
adc
outsl
je
add
mov
push
mov
sub
mov
sarl
aam
add
imul
adc
add
shll
ret
xor
popf
pop
sub
lea
dec
shrl
add
sbb
cmp
push
adc
sti
pushf
fimuls
daa
adc
scas
pop
or
repnz
push
and
pop
xor
xchg
rcl
imul
fwait
clc
sbb
xorl
cmc
std
lret
jbe
cmp
popf
dec
not
loopne
and
lea
sti
xor
scas
add
adc
bswap
pusha
mov
adc
loope
or
add
daa
call
mov
fimuls
mov
into
fdivl
push
mov
mov
add
out
cmpl
leave
fsubs
test
stc
push
lea
lea
mov
mov
shlb
push
call
xor
inc
call
ret
cltd
push
xchg
or
dec
push
hlt
xchg
btr
inc
push
jnp
sub
loopne
pop
xlat
mulb
fs
mov
mov
push
dec
aad
sub
mov
stos
pop
and
jl
inc
je
and
out
pavgw
jle
lea
addb
dec
aad
mov
xchg
inc
push
push
sub
test
push
imul
and
imull
xor
push
add
pop
push
add
out
mov
sub
pop
pop
or
cmp
lret
in
fadds
lods
fwait
jb
dec
popf
sub
xchg
cwtl
cmp
xchg
add
imul
xor
cmp
das
aaa
stos
pusha
adcb
adc
jp
outsl
pop
adc
mov
push
pop
jge
lds
and
mov
xchg
pushf
push
cmpsb
jg
sbb
jp
ss
adc
adc
mov
mov
xorps
dec
lret
loope
shrb
and
jno
sub
or
xor
cmova
ret
mov
cmp
cmp
sbb
push
cmp
and
sbb
ret
sbb
pop
ret
xchg
and
sbb
xor
jle
rcrb
enter
and
inc
out
mov
jnp
mov
cmp
test
pop
fisttps
cmp
mov
sbb
leave
nop
cld
pop
xor
xor
and
test
fs
pop
cs
sbb
xor
sarb
mov
iret
adc
push
xor
inc
and
xor
fistl
ret
ds
cmp
cmp
sbb
sarb
or
sub
inc
das
xchg
sub
daa
sub
pop
pop
and
sub
and
nop
subl
sub
and
xchg
push
enter
js
pushf
inc
push
sub
adc
sbb
cwtl
jbe
mov
lods
and
stos
mov
ja
in
push
push
sbb
dec
in
sub
loopne
push
fisubl
sbb
lods
jae
fwait
dec
mov
mov
in
jecxz
jg
outsl
add
and
xchg
aam
or
outsl
jle
dec
movsb
cltd
fcoms
push
and
xor
popa
mov
cpuid
ja
lcall
mov
or
dec
sbb
repz
or
lea
repz
add
sub
push
adc
or
movsb
and
sbb
sbb
adc
and
mov
out
shlb
or
sub
inc
testl
mov
movsl
push
push
inc
jle
mov
mov
lcall
or
sub
insb
adc
cli
orb
movsl
fs
pop
in
jge
add
addr16
jmp
aaa
and
adc
call
pushf
dec
in
sbb
lock
icebp
dec
inc
sub
push
test
popa
adc
nop
mov
loopne
pop
mov
xchg
aaa
dec
xchg
sbb
outsl
sbb
and
cmp
add
push
into
dec
sub
push
sbb
mov
inc
rclb
out
inc
loopne
push
fcoml
xor
fimull
cmp
xchg
cs
push
out
mov
lock
shrl
xor
add
dec
sub
stos
sbb
test
inc
pop
pop
fsubrl
pop
push
xor
pop
push
sub
jo
push
dec
xor
inc
lret
test
adc
add
dec
push
push
ret
xor
or
push
push
push
icebp
or
and
ds
sbb
orl
and
mov
and
sub
dec
jmp
popf
cmp
je
inc
xlat
adc
and
cltd
hlt
mov
imul
xorl
add
push
stc
pop
add
push
pop
sbb
or
je
mov
testb
add
or
inc
mov
sahf
out
nop
mov
cmc
int3
nop
pop
pop
sbb
xor
call
fdivl
dec
lods
jp
je
cmp
pop
scas
mov
es
int3
pop
xlat
cmp
fisubrl
xchg
test
insl
mov
adc
and
lret
sub
push
xchg
rclb
jl
sbb
fidivs
sbb
mov
fcom
cmp
outsb
or
call
loop
mov
mov
aaa
movsb
jnp
xor
ffreep
cmp
inc
push
nop
adc
testl
ja
cmpb
cmpsl
pop
es
fdivs
push
ljmp
inc
inc
orl
xchg
testl
push
repnz
push
jo
das
lahf
cs
sbb
cmp
adc
call
or
das
or
test
cmpl
jne
push
loopne
shlb
jmp
filds
mov
mov
mov
jne
dec
add
fs
aaa
add
push
stos
enter
inc
push
dec
test
mov
push
andl
movl
mov
das
sub
shll
clc
sbb
jne
lds
hlt
sbb
lods
jge
mov
lods
sub
push
cs
adc
enter
xor
out
adc
mov
pop
add
and
int3
adc
and
mov
loope
leave
inc
push
das
inc
aam
jae
sbb
adc
fmull
nop
cmp
push
es
jae
jle
pop
cs
sbb
adc
testb
xchg
push
xor
mov
hlt
pop
or
mov
mov
push
icebp
sub
push
repnz
int
and
xor
das
pop
mov
mov
je
adc
je
cmpsb
and
lret
cmpsb
imul
in
mov
dec
fucom
call
jns
push
inc
dec
push
inc
jmp
roll
mov
arpl
xchg
bound
push
pop
mov
add
pop
es
bound
pop
mov
mov
pop
fdivl
add
pop
bnd
push
jmp
sub
sbb
push
pop
cmp
leave
push
xchg
mov
jg
bound
mov
inc
in
stos
loop
xor
movsb
sbb
dec
xchg
xor
pusha
adc
lcall
xchg
hlt
std
mov
cmp
sbb
mov
mov
mov
sbb
insb
mov
aam
cmp
jp
xchg
sbbl
test
std
pop
mov
push
xor
adcl
out
add
pop
mov
mov
add
xchg
imul
popa
jo
push
sti
mov
pop
push
inc
sti
test
push
mov
jnp
mov
shr
inc
and
pop
loop
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
shrb
xor
add
pop
cmp
mov
cmp
loopne
ja
lret
ficomps
cmp
sub
jmp
ror
aas
xchg
sbb
dec
add
call
and
adc
sub
add
lret
xadd
or
cmp
icebp
dec
sub
sub
icebp
repnz
and
inc
xchg
xchg
cmovo
dec
sub
rcrl
push
cmp
out
rcrb
das
call
xor
movsl
aam
xor
imul
sbb
sbb
mov
dec
lret
lar
enter
add
rorb
add
frstor
movl
movsl
inc
popa
inc
mov
sub
mov
jp
push
add
fstpl
outsb
jae
or
add
leave
leave
in
cmp
or
push
pusha
and
pop
or
ficomps
or
inc
ret
insb
inc
lods
and
sti
in
push
add
push
sub
mov
or
xor
xor
push
pop
rolb
adc
and
inc
or
andl
xor
cmp
and
mov
xor
or
dec
in
and
adc
or
and
test
orl
jmp
add
dec
sbb
inc
dec
subl
xor
sbb
dec
rorb
mov
lock
inc
adcb
jb
xor
inc
mov
xor
mov
dec
stc
dec
mov
xchg
lea
sti
in
xor
inc
test
mov
stos
inc
inc
mov
enter
xor
adc
sbb
adc
inc
lea
orl
push
or
xor
and
popf
adc
pop
inc
mov
pop
adc
dec
cmp
push
jl
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
xor
add
adc
int3
xor
lds
fs
call
mov
fdiv
mov
dec
loop
mov
dec
scas
das
fs
les
sub
sub
mov
dec
push
in
cmp
jl
jnp
notb
jae
pop
push
push
xor
mov
mov
out
push
daa
adc
sbb
jo
jb
inc
or
out
je
sahf
incl
das
inc
push
sahf
rolb
pop
cwtl
add
push
fdivl
adc
sbb
repnz
jo
rorl
mov
add
sets
loope
inc
sub
and
sbb
or
rcrb
inc
or
bound
xchg
xchg
sub
push
sub
xchg
movsl
or
dec
xor
int
inc
add
dec
pop
push
sub
cwtl
xor
je
adc
or
or
pop
call
rorb
fwait
add
enter
xchg
mov
fnsave
xor
fdivs
inc
push
or
mov
add
xor
fadds
or
and
fistpll
addl
pop
sub
out
test
adc
and
inc
adc
out
adc
lret
notb
andb
addr16
inc
cmp
push
pop
or
and
icebp
rcr
daa
call
roll
inc
cmpb
cli
cmp
adc
sbb
dec
mov
stc
sbb
adc
mov
cs
or
push
mov
rclb
sarl
lods
add
or
mov
mov
inc
enter
or
pop
dec
add
sub
add
rolb
loop
jbe
in
pusha
loope
or
push
lock
mov
popa
xorb
cmp
sbb
lcall
movsb
push
bound
adc
mov
cmp
push
add
or
inc
inc
push
mov
add
cmp
jns
add
inc
icebp
push
add
sbb
lods
or
push
add
inc
mov
push
ret
enter
das
jecxz
add
jo
fwait
cli
sub
orl
jmp
ss
sbb
mov
js
and
xchg
outsl
movsl
mov
jle
sahf
or
adc
movl
jg
subl
mov
movsb
arpl
hlt
adc
adc
loopne
push
cmp
xorl
mov
inc
insb
push
sbb
aas
sbb
loopne
mov
mov
sub
xchg
sub
sub
xor
insb
cmp
push
loope
movl
imul
aas
add
lea
test
je
push
sti
call
mov
cmp
push
push
sbb
push
shlb
mov
out
cmp
dec
push
and
adcl
xchg
in
sub
sub
icebp
cmp
jbe
dec
repz
add
dec
add
xorl
inc
add
sbb
cwtl
lods
ret
lock
adc
cmp
cwtl
mov
pop
push
stc
mov
rcrb
adc
sbb
pop
or
lock
xchg
xchg
aam
fistps
rcrb
mov
add
cmp
dec
sbb
adc
in
add
js
add
jae
test
bnd
addl
jg
xor
mov
mov
enter
add
stc
xchg
dec
add
sarl
or
mov
insl
jnp
lea
sub
add
bound
push
pusha
fbstp
test
iret
lahf
lock
das
rorb
adc
and
adc
or
in
shr
repnz
repz
mov
imul
subl
mov
xchg
or
int3
push
push
push
pop
sub
pop
roll
lea
mov
jge
sbbl
sub
cs
outsl
or
lods
mov
in
jle
cmp
or
pushl
push
sarl
inc
jno
mov
gs
cs
xchg
push
dec
xchg
pop
shll
in
push
xor
cmp
jmp
mov
cmp
cmpsl
adc
jmp
mov
cli
or
test
lds
inc
movsl
jne
and
and
mov
adc
fildl
in
mov
mov
push
xor
sahf
shrb
add
mov
cmpsb
add
pop
decl
enter
mov
jne
xchg
arpl
js
add
movsbw
ds
cmp
jne
and
dec
in
jbe
je
adc
fwait
dec
gs
arpl
cpuid
mov
mov
cmp
mov
mov
push
inc
negl
rolb
mov
dec
cmp
adc
jnp
push
fmull
insb
in
je
lret
call
stos
pop
jns
sbb
cmpsb
loope
jecxz
sar
push
arpl
imul
sub
mov
inc
std
imul
jle
in
mov
call
ja
lea
dec
dec
dec
lods
repnz
jns
push
xor
mov
scas
push
sbb
push
shlb
dec
cmp
lods
sbb
or
cs
push
xor
cs
outsl
shll
in
xchg
scas
pop
push
sub
in
shrb
xchg
jno
pushf
cmpsb
dec
dec
sbb
push
push
std
lock
dec
shll
sbb
pop
pushl
and
pusha
push
dec
add
and
loope
shlb
ds
sub
imul
cmp
jmp
pop
je
add
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
int
mov
iret
dec
iret
dec
pop
sbb
dec
ds
push
call
dec
je
push
jg
sbb
xchg
add
mov
sbb
sbb
add
cmp
xor
push
js
cmc
mov
xchg
mov
or
sbb
xchg
das
push
lahf
sbb
adc
mov
cmc
ret
mov
push
shll
pop
dec
and
xor
pop
adc
sbb
dec
in
movsb
mov
adc
sub
xor
push
neg
sub
hlt
leave
and
jo
or
test
sbb
add
lret
clc
cmp
ret
sbb
mov
jo
insl
loop
stos
push
fprem
gs
test
jae
fidivl
push
cmp
xor
inc
push
mov
xorb
cmp
imul
pop
mov
sbb
scas
push
jle
mov
add
movl
push
sub
or
cs
lock
mov
in
inc
adc
lret
movsl
mov
adc
mov
push
adcb
fsubs
cs
push
add
shll
xor
or
test
adc
adcl
jae
and
jno
xor
pop
adc
or
add
inc
xor
jne
or
mov
movl
movsb
ja
mov
xor
jne
inc
push
je
pop
jge
or
sahf
sub
int3
rorb
cmp
ret
cltd
add
push
xlat
fwait
shrb
das
and
ja
push
push
inc
jmp
lods
add
sub
and
jge
mov
push
outsl
add
sub
cld
add
je
in
jne
movsl
add
add
shll
xor
pusha
rolb
js
or
adc
push
and
mov
sbb
sub
push
aam
clc
sub
sti
mov
jecxz
push
add
push
push
push
push
popa
es
and
call
mov
jne
cmpsb
adc
cltd
out
loope
and
inc
nop
icebp
adc
cmp
mov
nop
call
sub
outsl
adc
rorb
cmp
jne
and
sub
cmp
mov
outsl
or
adc
cs
sub
xchg
xor
add
das
adc
dec
push
and
scas
stos
es
pusha
ret
dec
dec
xor
add
dec
xchg
nop
outsb
jno
cs
mov
adc
xchg
sahf
jmp
shlb
sahf
scas
clc
popa
mov
fildl
push
sub
cs
test
or
cmp
xor
andb
jbe
add
mov
inc
cwtl
lcall
lods
popf
movsb
cmpsl
adc
push
lcall
adc
pop
add
lods
movsl
xor
lods
fnstsw
mov
das
mov
mov
call
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
mov
mov
add
enter
icebp
xchg
cmpb
inc
nop
pop
dec
std
outsb
sbb
jnp
imulb
add
scas
adc
dec
sbb
adc
iret
rol
addr16
ss
cmp
mov
dec
pop
pushl
shll
es
rorb
mov
das
inc
mov
dec
mov
adc
sbb
leave
push
nop
add
cltd
xchg
imul
push
xor
mov
enter
xchg
sbbl
mov
adc
sbb
out
jae
mov
adc
and
cmp
xchg
pusha
cmpsb
jnp
push
sarl
push
popa
mov
mov
push
pop
jo
les
movsl
data16
std
sbb
jecxz
in
shll
dec
clc
jle
les
cmp
or
es
mov
inc
jne
adc
in
xlat
jb
jo
or
jnp
add
cmpb
push
push
xor
rorl
and
cwtl
lea
out
add
out
lea
dec
fisttpl
add
adc
fnstenv
outsl
nop
mov
push
out
sbb
cmpsl
sarb
in
movb
adc
jo
xor
jbe
pop
stos
add
in
xchg
insb
fmull
cs
cwtl
sbb
ja
or
aaa
jnp
clc
adc
xchg
movsl
cli
and
push
rorb
rcrb
mov
ds
cld
jnp
mov
ret
cmp
jp
aas
stc
pop
pop
jmp
and
dec
movsb
je
mov
lcall
andl
nop
cmp
cmp
push
ss
cmp
movsb
add
fdivrs
pop
dec
pop
or
pop
mov
add
les
outsb
test
adc
or
pop
int3
je
mov
clc
xchg
notb
pop
push
loopne
mov
nop
lcall
and
add
shll
in
mov
inc
adc
or
cmp
xchg
adc
xor
push
daa
dec
inc
add
outsl
test
cmp
je
mov
jle
jno
pop
ljmp
jle
dec
leave
or
fsubl
repz
loop
dec
test
and
frstor
dec
mov
bound
nop
sub
jg
lods
nop
pusha
sub
or
lods
pop
andl
adc
inc
das
xchg
or
cmp
jg
adc
test
dec
add
in
cmp
mov
rorl
or
push
xchg
into
arpl
shrb
inc
nop
sti
jno
push
shll
cmp
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
cmp
fsubrp
inc
jb
xchg
fs
scas
dec
shlb
mov
xor
add
sbb
pop
xchg
mov
adc
out
mov
mov
adc
push
adc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
in
scas
addb
ss
push
pop
mov
add
push
push
pushf
push
je
pavgb
inc
pop
mov
mov
mov
inc
inc
cmp
add
sbb
fwait
sub
lcall
in
pop
cmp
shlb
pusha
jne
dec
clc
orl
addb
jl
sub
jmp
mov
pop
sbb
mov
pop
cmpl
push
adc
in
hlt
pushf
rorl
push
or
sahf
add
inc
push
add
sbb
mov
sbb
add
adc
sub
adc
loop
mov
sbb
cmp
jo
es
push
lcall
adc
dec
lods
adc
mov
inc
testl
push
cli
cmp
add
hlt
jo
adc
push
sub
gs
in
and
push
sbb
mov
cmc
bound
fs
cmp
jne
jb
fs
push
xchg
add
cltd
push
in
jmp
pop
push
pop
xchg
dec
xor
push
inc
jo
jnp
lret
add
xor
push
dec
cmp
sbb
or
inc
movl
and
popa
psllw
and
movsb
pop
xchg
pop
or
stos
fsubrl
jmp
xchg
push
icebp
lock
addr16
fiaddl
push
inc
sbb
and
loopne
gs
sub
sbb
mov
lods
movsl
push
mov
fiaddl
adc
xor
ret
loopne
nop
inc
fs
lds
mov
adc
cmp
or
push
test
addl
orl
bound
xor
lea
adc
lahf
mov
mov
inc
inc
lcall
ss
and
push
push
pop
cmpsb
enter
lret
lcall
push
in
add
push
aam
or
jmp
test
loopne
sub
mov
push
test
xor
shll
xor
xchg
lods
imul
inc
stc
gs
and
push
sbb
cmp
sub
or
jo
popf
add
push
add
dec
cmp
push
add
sar
pop
mov
mov
movsb
push
addl
sub
jne
ror
out
jns
and
push
arpl
sub
rorl
jp
icebp
stos
mov
in
dec
popa
and
fdivrl
sbb
movsb
ljmp
mov
jl
pusha
imul
jne
mov
int3
inc
hlt
and
add
lea
add
cmp
loop
test
jne
test
loope
jnp
and
push
and
adc
test
je
push
and
jmp
call
ss
add
mov
pop
fists
jnp
push
call
fnstsw
add
add
idiv
cmp
or
shlb
test
mov
jmp
or
fst
sbb
fmuls
push
sbb
xchg
ficoml
add
or
sbb
shl
ret
dec
mov
mov
stc
stc
pop
lods
or
adc
or
incl
fcom
mov
pop
lret
int3
sub
push
addl
mov
lahf
cmp
nop
dec
in
adc
or
mov
stc
cmp
jecxz
repz
mov
in
sub
in
and
decl
xor
sbb
push
xorl
js
jp
push
shlb
sub
push
lock
in
push
inc
ja
enter
jp
lea
jmp
push
push
das
adc
ret
addl
or
and
pop
dec
loope
popa
nop
inc
cwtl
cmpsb
dec
mov
sti
pop
dec
test
xchg
cld
inc
scas
lods
xchg
jp
inc
push
dec
dec
inc
sub
and
inc
pop
shll
rcll
daa
sahf
push
xchg
jp
bound
xor
inc
add
pushf
xchg
mov
cmc
add
mov
push
or
enter
mov
sub
push
mov
aaa
lds
xchg
mov
mov
bound
es
ja
sbb
aaa
adc
mulb
dec
clc
jle
mov
push
dec
sub
push
or
push
shrb
cmpsb
or
popa
sbb
ss
cmp
inc
inc
jmp
fwait
mov
jmp
sub
out
jnp
add
mov
jns
in
dec
inc
inc
dec
cmpsl
jno
push
inc
jne
mov
aas
and
adc
call
sbb
sub
repz
or
dec
ja
xorl
mov
lock
inc
sub
adc
and
scas
clc
fdivs
ffree
movsl
inc
xor
sbb
ret
push
xor
inc
ret
dec
push
call
pop
setbe
movsb
xor
inc
ss
ret
xor
dec
js
cmp
insl
loopne
je
adc
rclb
jge
mull
and
xchg
inc
int3
loope
rolb
xor
push
add
jnp
js
pusha
add
nop
xchg
mov
sbb
mov
mov
push
gs
aaa
mov
lea
cmpl
movsl
dec
add
dec
inc
mov
add
in
repz
lods
aam
sub
xchg
loopne
call
add
dec
lds
inc
enter
fnsave
cmp
jmp
add
push
add
sbb
fnstsw
pop
pop
adc
mov
sbb
xor
mov
movsb
sbb
add
pusha
enter
mov
inc
or
movsb
inc
xchg
rolb
pushf
jle
pop
lock
mov
jge
psrad
mov
mov
popa
and
fldenv
lea
push
xchg
cld
jbe
lock
cmp
gs
mov
jne
pushf
lock
and
out
out
ret
mov
push
pop
sub
and
add
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
jno
mov
or
push
pusha
les
lcall
mov
lods
test
push
and
cmp
adc
iret
sub
sbb
and
xchg
loopne
adc
cmp
jmp
push
jg
mov
cmp
inc
cmp
out
pop
push
sbb
or
push
pop
inc
imul
out
mov
cmp
inc
jo
lea
and
or
imul
and
es
sub
cmp
ja
mov
push
fs
out
sbb
imul
and
hlt
dec
push
sub
sub
pop
lods
adc
icebp
mov
hlt
fcoms
outsb
or
and
add
lock
lcall
or
inc
or
sti
test
pop
incl
mov
or
mov
push
mov
orl
or
or
inc
mov
ret
xchg
loope
xchg
or
sub
xchg
pop
xorb
imul
add
fs
fsubrp
mov
in
dec
sub
xor
repnz
and
pop
test
push
outsl
add
scas
mov
fildl
push
clc
or
cs
sbb
cmp
jne
aaa
int3
test
test
pop
sbb
jo
dec
mov
fcomp
icebp
jl
push
add
add
mov
imul
xor
cmp
adc
push
adc
cmpsl
loope
sub
add
mov
lea
test
pop
scas
mov
lock
xchg
dec
jne
rcr
dec
or
cmp
add
imull
and
negl
imul
roll
mov
jo
mov
call
sub
ds
xor
or
sub
inc
ja
sbb
and
test
fsubs
xchg
or
mov
xchg
movsb
sbbl
inc
cmp
add
dec
sbbb
xor
sbb
inc
inc
xchg
or
loope
popf
xor
pop
inc
add
nop
mov
fdivl
push
adc
pushl
fiaddl
push
cmpsl
add
pop
psubsw
ja
inc
mov
push
push
push
jecxz
mov
xor
arpl
in
ja
pusha
add
jmp
inc
rolb
adc
lret
pop
jmp
enter
in
and
or
adc
jecxz
push
push
inc
add
negb
sahf
cmc
pop
add
outsl
fidivrs
nop
push
imul
pop
loopne
cltd
arpl
mov
mov
shll
xor
sbbb
adc
mov
or
add
pop
pop
pushf
mov
inc
cmove
sub
scas
in
cmpsl
outsl
cmpsl
rorl
inc
sbb
mov
jle
test
int
sub
adc
mov
push
push
xor
imull
adcl
add
ret
aaa
cmp
sbb
sbbl
ja
jmp
bound
add
adc
int3
andb
or
fiadds
insl
xchg
notl
add
cmpsl
sub
sub
jo
fbstp
sbbb
or
ret
sti
sbb
sbb
sub
andl
sbb
lret
pop
insl
shl
mov
adc
xor
fistps
lock
nop
ret
xorl
in
outsl
add
shrl
dec
popl
fs
xor
mov
cmp
das
inc
sub
push
daa
pusha
xor
rcrb
push
aad
push
add
repz
mov
jp
sub
adc
mov
sub
or
in
repz
or
or
inc
outsl
lret
cmp
mov
pop
fs
xchg
xchg
test
sbbl
test
loop
fnstsw
add
sub
mov
push
xor
filds
testl
addl
jb
popa
test
addps
xor
or
xor
lea
adc
sub
loope
dec
dec
xchg
sub
dec
jo
dec
mov
cmp
add
and
mov
xchg
in
clc
sub
add
add
mov
lea
inc
sbb
je
dec
movsb
xchg
cmp
nop
push
loop
cld
mov
or
pop
push
out
nop
or
sbb
imul
fs
add
add
push
roll
out
cs
std
ss
popf
mov
xor
rol
add
mov
mov
cmp
adc
adc
push
in
cmpsb
dec
xchg
or
bnd
sbb
cwtl
in
cmp
add
push
test
sub
sub
pop
mov
arpl
cmpsl
lods
pop
testl
pop
lahf
mov
dec
int
roll
or
mov
mov
push
sbb
aad
xor
jo
mov
xchg
aam
testl
lcall
xchg
and
cmp
leave
or
test
add
push
or
jno
mov
cmp
push
stos
or
faddl
jecxz
inc
add
mov
mov
call
add
jmp
xor
lea
adc
xor
xor
push
daa
xor
ret
les
dec
and
adc
shll
mov
add
xchg
andb
pop
pop
sbb
mov
sub
cmp
dec
in
pop
inc
sbb
leave
dec
and
pushl
shlb
out
add
jns
cmp
sub
daa
mov
in
jns
ds
cmpsl
adc
xlat
filds
or
ja
mov
add
or
mov
cmp
xchg
or
loope
mov
pop
add
and
fimull
add
dec
mov
xor
jg
or
in
fwait
xorb
cmp
test
pusha
sub
movsl
call
xor
or
xchg
push
jns
dec
push
cmp
enter
adc
xor
repnz
in
push
gs
add
repz
adc
in
dec
jo
sub
dec
data16
jle
out
jmp
adc
icebp
rolb
clc
and
mov
in
fsts
or
adc
lods
test
push
adc
add
les
xor
inc
clc
mov
and
cmpsl
push
pop
adc
shl
in
pop
mov
mov
sbb
inc
or
stos
and
pop
cltd
jno
push
cs
pop
add
fidivrs
dec
xchg
pop
sbb
or
or
jo
adc
jbe
add
xor
inc
ficomps
aaa
js
or
mov
mov
pop
or
mov
test
sub
lds
sbb
push
outsl
cltd
loop
lcall
call
or
sbb
ljmp
in
mov
jae
cmp
test
cmp
add
popa
mov
adc
and
adc
add
sub
dec
sbb
jl
es
adc
sub
scas
jns
das
icebp
or
xor
ret
js
mov
sbb
and
dec
sbb
cmc
mov
sarb
sub
cmp
clc
fwait
sbb
jecxz
mov
jno
mov
mov
cmp
mov
and
in
sbb
aaa
mov
outsl
aam
cmpsb
aaa
or
xchg
push
adc
dec
sub
pop
lea
xchg
jmp
mov
sbb
loopne
mov
jns
dec
inc
loopne
push
pop
jge
mov
mov
xchg
jmp
or
dec
cmp
inc
push
mov
inc
xadd
or
aam
stos
inc
loope
cmp
lock
push
fs
lock
mov
cmp
js,pn
push
or
adcb
and
repz
xchg
sbb
mov
push
stos
adc
add
add
sub
ja
mulb
push
mov
nop
pop
add
pop
cld
cs
das
rcll
mov
jge
jb
es
outsl
jns
jno
std
add
push
mov
sbb
push
jp
push
dec
add
arpl
fisttps
arpl
ja
lds
mov
mov
mov
je
or
jmp
movsl
push
cli
push
pop
push
and
mov
stos
jne
jmp
movsb
imul
daa
dec
cmc
add
loope
sbb
xchg
pushf
add
adc
adc
test
dec
push
push
adc
das
and
pop
repnz
dec
or
adc
add
ret
xchg
add
pushf
or
test
dec
test
fiadds
sub
test
loop
mov
or
adc
mov
mov
or
sub
push
sbb
and
leave
jmp
xor
mov
and
shr
callw
jbe
mov
push
mov
je
sbb
adc
cwtl
push
jg
adc
add
push
adc
cmpsb
jbe
out
or
jns
add
jno
lea
repnz
push
dec
inc
cmp
adc
adc
xchg
push
icebp
lds
pop
or
sbb
aaa
sbb
pusha
sbb
and
nop
popl
pop
pusha
jecxz
adc
cmp
pop
jns
or
push
cmp
lahf
mov
addl
jo
or
outsb
fisttpll
mov
xor
sub
outsb
push
add
mov
rclb
jno
inc
fstl
pop
popa
push
jge
xchg
call
mov
cmp
or
push
jns
inc
and
dec
mov
lret
inc
push
sub
push
xchg
pop
add
pop
int
add
imul
xchg
add
or
mov
sarb
pop
sub
rcll
or
dec
jo
or
add
push
jle
jne
lret
fcomps
rcl
mov
sbb
jg
jbe
js
push
daa
mov
dec
xor
xchg
and
test
mov
rolb
push
adc
jne
mov
sub
scas
adc
sub
cwtl
and
je
push
mov
pop
inc
jle
mov
jnp
std
call
jg
xchg
hlt
lods
aaa
sbb
or
mov
lods
mov
ljmp
je
pusha
sub
rcll
or
jecxz
mov
lahf
push
pop
push
push
daa
inc
jmp
jno
cmp
or
add
gs
fldenv
loope
dec
fstps
inc
sbbb
rcll
mov
mov
add
dec
rcrl
sarl
lret
mov
nop
shrb
movsb
andb
movsl
jb
daa
push
mov
pop
insl
jb
shll
loope
shl
sbb
cld
cmp
adc
gs
sbb
adc
add
jno
in
mov
shlb
mov
dec
or
sub
push
jecxz
xor
out
sub
pop
and
dec
clc
cmp
enter
cmp
es
xor
xorb
jmp
push
std
mov
dec
insl
mov
je
dec
adc
sbb
add
push
pop
fsubr
add
cs
hlt
pop
js
push
test
mov
sti
jne
push
mov
lods
sarl
mov
sbb
pop
ret
je
mov
mov
push
jnp
cmpsb
bound
ret
adc
push
mov
pop
or
subl
mov
repnz
adc
fwait
mov
xchg
sub
fisubs
jge
cmpsl
mov
repz
and
jne
push
cmp
jmp
inc
popa
adc
aad
or
push
insb
ss
push
mov
add
xorb
call
dec
push
xor
xchg
mov
in
inc
and
imul
mov
pop
xor
insl
lds
mov
pop
arpl
lock
sbb
cmp
mov
lahf
and
out
dec
call
mov
inc
adc
repnz
mov
pop
in
pop
ret
adc
stos
inc
push
xor
or
clc
sti
sub
pop
imul
jnp
add
pop
and
cmp
pusha
push
pop
and
cld
aam
repnz
and
push
mov
into
cmp
test
orl
call
sbb
push
aas
stos
inc
adc
fldz
and
add
jge
pop
imul
cmp
and
sub
mov
scas
or
inc
pop
sbb
push
fdivl
sbb
xchg
push
add
call
mov
movb
lret
cmpsb
adc
sti
xor
xchg
mov
mov
add
adc
sub
inc
mov
outsb
rol
mov
in
loop
addr16
or
lea
fisttpll
mov
xchg
adc
sub
add
loopne
lea
fsubs
lret
movsl
mov
xor
add
call
mov
mov
ds
jns
ret
fsub
in
aad
add
jg
faddl
cmpl
sbb
push
and
mov
mov
adc
adc
cmp
icebp
repz
outsl
push
cmp
jle
cmp
jp
push
cmp
cmp
add
out
cmp
add
add
inc
jmp
test
incl
movw
add
ljmp
jne
dec
fwait
ljmp
fs
pop
idiv
call
je
flds
mov
clc
sub
adc
cmpsb
or
aad
push
adc
xchg
add
mov
mov
mov
jne
jne
cmpb
popf
add
outsl
fnstenv
push
mov
push
push
sub
or
hlt
aaa
shlb
xor
dec
mov
popa
sub
imul
jmp
sub
je
jae
pop
arpl
or
xchg
dec
mov
or
adc
and
adc
xchg
pushf
push
add
orb
xor
sti
push
and
adc
lock
mov
pop
test
mov
enter
xchg
or
aas
adc
enter
iret
cmp
xchg
add
add
pop
daa
bound
andl
outsb
pop
pop
pop
push
les
sbb
xchg
add
inc
cmpsb
nop
or
rorb
or
sbb
movsb
or
adc
adc
cmp
add
inc
jge
push
ror
dec
push
enter
mov
adc
fdivl
pop
pop
jl
outsl
jl
mov
mov
mov
cmp
and
movsl
adc
fistpl
add
push
data16
sub
sub
or
xor
in
mov
mov
cmp
and
or
mov
lea
add
dec
pop
or
add
pop
lcall
pop
nop
popa
adc
push
leave
mov
fldcw
adc
mov
or
loop
test
js
repnz
sub
jl
sbb
ret
enter
aaa
sbb
pop
and
sbb
sbb
dec
in
popa
mov
cmpsl
sbb
ret
mov
daa
jbe
fwait
ds
inc
subb
push
xor
lahf
outsb
and
scas
loopne
pop
cmp
push
xorb
fstl
adcl
ljmp
movsb
adc
adc
adc
push
push
xor
cmp
mov
and
xchg
icebp
mov
or
inc
data16
add
pusha
add
popf
xor
sbb
xchg
pop
jmp
sub
pop
add
jb
adc
adc
fs
aas
pop
add
xor
nop
cmp
inc
add
adc
lea
sbb
adcb
test
sub
frstor
pop
adc
push
sbb
xor
int3
jge
lret
pop
push
imul
adc
adc
mov
loope
and
xor
out
mov
in
rol
jo
mov
sbb
push
nop
frstor
inc
mov
cwtl
mov
or
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
mov
shrb
cmp
xchg
insb
mov
dec
rcll
mov
nop
add
or
in
adc
mov
sub
outsl
jne
sbbb
xchg
add
lods
push
bswap
lods
add
pop
fadds
or
lock
nop
adc
add
xchg
sbb
fiadds
or
adc
push
lea
sbb
mov
push
and
pavgb
ja
outsl
fdivrs
or
outsl
mov
orb
sbb
dec
sub
cli
cmp
in
rolb
xor
gs
or
jo,pn
sub
sbb
jbe
push
nop
inc
inc
and
add
fs
insl
mov
push
stos
imul
fcom
lock
lret
push
mov
pop
dec
add
add
insb
xchg
sbb
push
popa
mov
loop
stos
cmp
jne
aad
je
stc
lea
xchg
push
popa
xchg
mov
dec
jno
sbb
cmovae
mov
hlt
pop
cltd
orb
dec
cs
add
add
test
add
xchg
out
dec
sbb
jne
add
sbb
scas
xor
xchg
dec
mov
adc
add
xlat
nop
mov
push
jmp
sub
dec
pop
mov
jnp
cmp
stos
jg
adc
xchg
cmp
cmp
popa
and
push
addb
push
test
pop
push
rclb
adc
adc
add
push
rclb
push
push
lea
mov
icebp
filds
mov
lea
ret
ds
cmc
lahf
lea
mov
jecxz
add
fdivs
cltd
roll
adc
loopne
pop
and
dec
mov
ds
cmp
push
jle
push
sbbb
inc
push
and
popa
notl
mov
jbe
aaa
or
pop
jnp
in
orb
mov
sub
jle
sub
ds
sub
add
shrb
xchg
dec
add
fcompl
fnstsw
test
je
loope
mov
jp
movl
xor
push
sbb
fisttps
inc
jmp
sbb
and
and
fstpl
pop
xchg
adc
pop
or
fistpll
mov
xor
and
loope
fsubrp
lret
sub
pop
adc
xchg
inc
xchg
or
sbb
adcl
inc
aaa
aad
sbb
or
insl
mov
scas
push
xor
xor
scas
sub
or
orb
sub
add
je
mov
pusha
dec
lahf
jns
stc
jge
sub
sub
std
add
into
mov
and
das
pop
xor
inc
insl
pusha
popf
and
mov
sub
jnp
ja
pop
leave
inc
jo
mov
aaa
jo
sub
adc
and
lret
pop
call
xor
sbb
addb
andl
dec
dec
mov
mov
push
dec
dec
and
mov
jnp
add
mov
bound
mov
cltd
sub
out
xor
clc
push
add
lods
ss
xchg
cmp
jb
nop
decb
shld
add
mov
add
sbb
lea
push
push
pop
mov
jns
mov
push
push
je
mov
add
pop
fistpll
push
leave
adc
mov
push
adc
push
push
xor
inc
or
or
or
cli
push
loope
mov
push
push
push
testb
pop
pop
scas
leave
dec
ljmp
pop
or
loope
push
mov
out
cwtl
dec
cld
pusha
add
mov
fimull
shlb
faddl
adc
add
push
and
xor
popf
divb
push
adc
push
andb
xor
xor
test
push
sarb
dec
inc
cmpw
jne
cmc
out
imul
cmp
mull
inc
push
jge
mov
dec
sbb
lea
cmp
or
pop
add
sub
out
xorw
or
xchg
sub
fdivr
inc
jo
push
push
sets
dec
inc
add
push
dec
ret
mov
pop
roll
nop
pusha
addr16
sub
fsubl
mov
dec
cmp
iret
adcb
sbb
das
roll
sbb
add
xor
icebp
rclb
pop
mov
mov
adc
test
inc
stos
dec
rorb
test
adcl
adc
leave
and
jne
adc
push
jmp
adc
pop
sub
mov
loope
mov
sbb
pop
mov
fsts
test
mov
mov
rorb
xchg
or
movsb
std
push
in
add
movsb
jns
lock
xor
and
cmp
sub
ss
xchg
bswap
push
adc
add
add
sub
daa
and
rolb
pushf
mov
test
mov
loope
or
mov
mov
sub
pop
clc
push
stos
pop
pop
xlat
andl
add
loopne
cmp
cmc
xchg
lods
loopne
sub
xchg
jo
sti
pop
je
outsb
jno
mov
xor
stc
jmp
ret
dec
xor
push
mov
ljmp
pop
and
shrb
sub
cmp
cltd
mov
out
shrl
pop
pop
clc
add
or
jecxz
cmc
dec
jl
subl
shlb
int3
test
add
pusha
es
mov
pop
shlb
pop
sbb
movsb
fildll
or
or
inc
fidivrs
movsb
outsl
adcl
fwait
les
and
outsb
pop
lods
mov
jge
jae
dec
sub
add
or
sbb
test
mov
lret
jne
in
cmpsb
movsl
mov
das
addb
xchg
std
push
or
adc
push
sbb
inc
push
mov
inc
adc
add
mov
xchg
adc
push
xchg
jb
adc
dec
pop
mov
lods
psrad
mov
xor
in
jbe
mov
ret
in
pop
mov
test
popa
test
push
ja
jo
lahf
ljmp
push
push
xor
mov
mov
jge
add
lods
jmp
flds
and
xor
inc
jg
je
andl
sbbb
sub
outsl
lcall
and
push
dec
jne
xor
or
jmp
adc
pop
push
or
xchg
jmp
or
inc
aaa
rclb
dec
mov
out
or
lods
inc
out
sub
xchg
mov
les
jmp
out
out
out
add
scas
jge
jmp
or
cwtl
jmp
lea
push
mov
in
lret
jmp
add
adc
hlt
push
mov
in
jb
and
dec
or
push
enter
je
mov
loopne
or
push
cmp
push
or
pop
push
rcrb
and
dec
sbb
enter
les
enter
hlt
dec
adc
nop
inc
push
cmp
inc
push
cmp
sbb
cld
dec
sbb
xchg
enter
mov
mov
fcoms
sbbb
aad
push
adc
add
push
xor
sahf
out
sahf
ds
push
pop
data16
sahf
out
jp
mov
out
mov
ljmp
push
or
sbb
xor
repz
inc
dec
pop
insb
jbe
mov
test
mov
repz
in
out
adc
outsb
lret
lret
push
xchg
push
sbb
or
mov
mov
jle
andb
shlb
mov
daa
or
push
aaa
addr16
dec
inc
fcom
adc
cmpb
add
mov
int
shll
add
xor
add
outsl
ss
or
dec
dec
lahf
fwait
jmp
fisttpll
jo
lea
cmpsl
pop
push
rcrl
push
in
inc
mov
and
test
push
lods
call
add
out
fcompl
lock
das
jmp
nop
mov
xor
ret
das
mov
xlat
arpl
orl
adc
jae
sbb
dec
leave
inc
jb
arpl
test
dec
cs
dec
test
or
mov
rcll
xchg
popa
xchg
movups
dec
mov
cmp
rorb
cmp
jge
cmp
sub
cmp
hlt
movsl
shll
push
pusha
lock
out
dec
sub
add
shlb
and
push
xchg
sti
mov
jno
inc
cmpsl
cmpb
adc
andl
rcrb
or
mov
mov
notb
gs
ret
or
cmp
dec
and
enter
add
xchg
push
outsb
lret
or
sub
or
enter
adcb
shrb
cltd
bound
xchg
sub
and
xchg
push
decl
inc
mov
fsubs
ja
iret
jmp
dec
jno
inc
and
jo
inc
push
sbb
fdivrl
movb
insl
lret
jg
adc
sub
push
loopne
and
arpl
rolb
aad
stos
xchg
push
insb
das
pop
xchg
jmp
add
or
scas
addl
sub
push
or
lea
mov
mov
ja
jne
les
cmp
jnp
sub
ss
xchg
je
mov
ss
mov
push
mov
jae
int3
cmc
sub
sbb
mov
sbb
inc
sub
mov
sbb
fs
mov
lock
push
mov
fimuls
xor
inc
stos
sbb
fcoms
mov
dec
fisubrl
push
and
je
das
mov
xchg
fsubrs
dec
sub
dec
xor
dec
xor
mov
xlat
mov
dec
xor
in
test
push
jle
mov
and
mov
and
mov
fcmovu
sbb
xchg
out
shrb
insb
cs
out
jo
jl
out
out
cwtl
sub
xchg
movsb
sub
int3
subb
les
ss
mov
popf
mov
push
jl
adc
jmp
adc
aas
cs
and
xor
dec
js
mov
xlat
movsb
cmpsl
jge
sbb
sbb
adc
mov
or
xchg
pop
add
mov
mov
mov
js
and
add
nop
xor
clc
nop
push
test
jae
shlb
pop
inc
mov
adc
sbb
sbb
add
int3
cltd
fs
stos
pop
sbb
sbb
xchg
push
mov
rolb
inc
or
jns
xor
andl
add
nop
and
sbb
xchg
cmpsb
add
mov
es
repnz
mov
js
or
js
fcoms
stos
inc
xlat
xchg
add
addl
shll
inc
mov
adc
lret
pop
push
adc
rcl
ret
or
pop
cwtl
xchg
mov
xor
add
popf
mov
cld
test
cmp
sbb
xchg
imul
jle
es
xchg
adc
sub
int3
mov
adc
pop
mov
ds
pop
movsb
pop
xlat
push
aaa
aas
pop
test
mov
add
inc
xor
push
pop
and
dec
enter
in
add
dec
enter
das
ret
xchg
mov
nop
mov
cwtl
inc
push
adc
daa
cmp
mov
push
inc
adc
mov
push
and
inc
push
xor
pushf
mov
xorl
jo
or
iret
cmp
adc
push
cmp
inc
jno
xchg
mov
imul
loope
or
inc
shlb
pop
and
loopne
shll
dec
dec
xchg
nop
js
rcrl
sbb
push
mov
push
sub
jmp
push
sub
aam
xor
pusha
aaa
ret
inc
xor
xchg
pop
sub
loopne
pop
dec
aaa
mov
pop
add
rorb
dec
lcall
inc
test
and
shrd
ret
call
cmp
push
mov
into
popa
lds
in
fildl
int
add
or
inc
jbe
sub
out
add
jo
dec
add
inc
adc
es
adcl
pop
lock
leave
out
add
push
jns
outsl
inc
add
xor
and
pop
data16
sbb
leave
test
xchg
fldl2e
inc
mov
imul
test
inc
and
and
jo
xchg
fs
sbb
sbb
sbb
xchg
daa
shlb
mov
xor
pop
cwtl
shlb
rcrl
xlat
scas
push
sbb
sbb
rcrl
iret
and
or
and
jl
mov
xchg
push
adc
mov
add
push
sbb
popa
mov
xor
ja
sub
adc
jl
notl
xor
enter
adc
shlb
cmp
add
imul
sbb
fcoms
je
fiaddl
push
sbb
xor
sbb
imul
rorb
sbb
loope
push
mov
movsl
cltd
pop
mov
xor
mov
lods
mov
rol
xlat
and
push
movsb
push
test
leave
adc
scas
inc
sbb
xor
in
loopne
popa
testl
jae
je
xchg
subb
xor
sub
sbb
sti
rolb
orb
adc
outsl
inc
or
sbb
dec
inc
xchg
inc
push
in
cwtl
nop
sbb
inc
or
mov
xor
pushf
xchg
and
jo
xor
int
push
rorb
pop
xchg
dec
jle
fsub
test
dec
in
call
adc
popf
add
xor
push
imul
movl
or
jno
mov
cld
add
sub
shrl
enter
outsb
mov
xchg
add
jns
mov
adcb
aas
ret
and
add
addr16
or
mov
mov
cmp
repz
xchg
call
ja
or
xor
push
jbe
sbb
or
loopne
lcall
push
add
or
movsl
adc
stos
mov
mov
popf
pushl
mov
das
aam
mov
mulb
or
cmc
nopl
add
jge
and
jo
mov
or
and
adc
rol
pop
adc
int
or
xchg
loope
in
popa
pop
fimuls
das
adc
jbe
movsl
pusha
sbb
sub
jge,pn
lods
pushl
outsb
ljmp
cld
fists
jne
xchg
sar
lcall
mov
pop
sub
adc
js
mov
pusha
or
lahf
in
scas
sbb
imul
imul
dec
scas
push
push
inc
push
rolb
adc
int3
cmp
add
push
xchg
and
call
sub
repnz
sbb
pop
pop
pusha
xchg
pushf
xor
es
or
inc
mov
push
sub
dec
pop
sub
fildl
enter
sub
sub
pop
je
mov
flds
pushf
push
jbe
push
and
lahf
insl
mov
cmp
ret
mov
clc
dec
aam
imull
leave
dec
lahf
cmp
sbb
roll
push
push
sbb
and
fs
sbb
jno
and
out
int3
pop
jb
roll
pop
jb
sbb
jb
pop
jb
sbb
pop
add
pop
pop
jae
jb
sbb
and
xor
adc
sub
out
jne
push
loopne,pn
jne
popa
or
and
ret
iret
or
xchg
sub
push
clc
pop
mov
call
cs
sub
add
pop
jno
jmp
sub
jnp
inc
or
add
or
loop
sbb
jo
out
cmp
clc
cmp
inc
sub
aas
daa
lea
pop
cmpsl
aam
cmp
xchg
push
cmp
notl
in
or
test
test
jp
popf
xchg
enter
or
inc
sub
cmpsb
fs
push
movsb
jo
movsb
and
sbb
mov
cmp
jbe
clc
cmp
or
pop
push
pop
push
jmp
ds
enter
and
cs
rclb
ss
aad
sbb
jns
adc
jl
fsubrs
mov
popa
adc
xchg
popa
mov
inc
inc
jl
xor
cmp
push
or
pusha
jg
out
inc
insb
sbb
mov
cmpb
je
push
push
mov
sbb
sub
int3
add
jb,pt
mov
andl
ret
je
push
addl
dec
sbb
pop
and
inc
pushf
lea
nop
iret
js
popf
aam
sub
mov
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
inc
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
or
inc
movsb
mov
enter
jae
inc
add
nop
cmp
push
out
pop
adc
and
je
mov
dec
shll
mov
adc
xchg
nop
incb
push
xor
xor
mov
xor
xor
fcoms
adc
js
add
out
jo
adc
subl
jno
dec
jo
xchg
scas
out
jae
mov
daa
cmp
lods
dec
or
out
lods
aam
ds
gs
sub
jb
adc
xor
push
xor
or
fcmovbe
mov
jp
bound
xlat
fmuls
rcll
adc
pushl
push
outsl
xchg
pop
or
arpl
adc
sub
insb
and
xor
or
cmp
sub
dec
ds
aad
lods
jmp
or
cld
inc
lret
add
aaa
jns
ds
jl
or
je
test
fistpll
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
pop
mov
and
mov
nop
inc
mov
outsb
aam
jne
pop
sub
nop
jmp
scas
inc
adc
pop
pop
repnz
bound
mov
add
test
and
cmp
insb
jno
jl
cmc
int
mov
stc
movsb
pop
sub
jge
ret
xchg
iret
adc
mov
mov
fs
test
add
and
sti
pop
lahf
jo
xchg
pop
mov
call
movsl
lea
adc
mov
or
cmpb
je
dec
and
add
inc
into
aam
push
push
jae
jo
add
pop
or
jmp
das
mov
mov
mov
mov
clc
cmc
shll
push
and
ret
push
xor
adc
pop
in
mov
sub
loopne
and
dec
enter
ja
push
je
cmp
jb
je
and
imul
mov
xchg
test
nop
repnz
cli
adc
jle
xor
mov
idivl
pop
jg
xor
mov
xor
and
jmp
cmp
or
dec
or
xor
pop
inc
or
inc
sub
fsubrl
xchg
mov
push
inc
pusha
stos
nop
cwtl
jb
or
xchg
je
xor
adc
pop
jae
jne
jae
xchg
jb
nop
leave
mov
xchg
scas
add
sub
sbb
adc
and
or
sbb
shll
call
sub
jle
add
mov
cwtl
popa
sbb
sbb
inc
inc
adc
inc
mov
ss
ja
mov
les
mov
ss
leave
inc
inc
loopne
out
push
shll
and
pop
rorb
test
or
stos
jg
sbb
push
addr16
sub
dec
nop
or
xchg
sahf
inc
sub
xchg
sbb
data16
xor
push
sbb
sub
push
sbb
mov
loope
sbb
xchg
lcall
mov
scas
scas
inc
xchg
je
lret
add
xor
pop
xchg
outsl
mov
imul
mov
jne
repz
jl
sbb
ret
adc
pop
inc
or
add
clc
and
fcomps
stc
aam
les
nop
jne
or
add
lcall
cs
xchg
enter
cmovl
xchg
dec
dec
ret
xor
mov
dec
and
cmp
mov
xchg
roll
loop
mov
push
out
fistps
add
push
dec
adc
push
mov
pop
aaa
jle
call
push
pop
push
adcb
jmp
sbb
xchg
mov
addb
lods
push
add
inc
das
arpl
sub
movsb
test
xchg
nop
divb
adc
adcb
xchg
dec
hlt
push
inc
sbb
cmpsl
inc
mov
and
mov
or
movsl
jnp
test
mov
jle
xchg
pop
inc
inc
outsl
sbb
lods
aam
jle
call
or
pop
dec
ret
jp
ret
nop
push
dec
call
xor
xchg
pusha
sbb
mov
xchg
add
sub
adc
fildl
sub
scas
cmp
sbb
pop
test
sbb
sbb
push
jle
push
cmp
inc
jo
xor
xor
or
movsl
or
addr16
push
jmp
data16
adcb
movsl
out
test
xchg
mov
pop
mov
mov
pop
stos
mov
jne
mov
dec
hlt
lock
push
dec
pop
cmp
ret
mov
sub
xor
arpl
shll
push
jmp
pop
je
push
les
xlat
cmp
iret
ljmp
je
insl
dec
sbb
and
adc
shl
les
sbbb
hlt
popa
mov
outsb
cmc
and
xchg
pop
add
add
scas
test
shr
jecxz
rolb
jl
ret
sbb
movsb
aam
dec
scas
dec
mov
test
in
mov
out
sbb
jl
clc
adc
std
in
add
dec
push
xor
jne
je
inc
inc
rcrb
pop
cmp
jl
xchg
sarb
jge
mov
jno
mov
inc
testb
push
inc
data16
mov
cmpsl
push
mov
fcoms
cmpsl
je
push
pop
popf
add
test
cltd
fidivrl
pop
sub
es
sub
push
enter
xchg
or
adc
fcomps
sub
lea
mov
mov
mov
sarb
in
pop
mov
nop
xchg
add
and
mov
sbb
test
xlat
or
adc
dec
into
loopne
jbe
call
rdtsc
xchg
and
sbb
imul
mov
or
mov
add
lods
test
lods
aaa
aad
or
scas
jb
clc
inc
das
je
jge
jne
arpl
movsl
pop
dec
adc
ret
das
mov
push
sahf
fsubr
imul
in
cmp
mov
cmp
call
push
or
fcoml
pop
fidivrs
jl
mov
sbb
add
bound
fcmovne
xchg
cmpsb
ror
and
xchg
sbb
push
mov
push
sub
sub
add
xorl
push
cmp
adc
and
sbb
mov
mov
shll
out
mov
bound
xchg
jmp
add
pop
add
adc
or
cli
mov
enter
jle
push
cmp
dec
or
and
cmp
jle
test
push
xchg
sbb
push
mov
inc
or
jg
roll
mov
mov
xchg
xchg
in
daa
jl
push
es
jns
cld
pop
add
rdtsc
mov
addl
sbb
add
jmp
int3
stc
pop
sti
pop
ret
mov
or
lods
push
outsb
jo,pt
test
jge
push
push
lea
enter
push
fldl
xor
insl
inc
sbb
inc
data16
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
call
sahf
push
cmpsb
dec
aam
mov
int
js
and
fwait
lds
ret
pop
mov
push
lea
mov
mov
fwait
inc
dec
iret
icebp
out
sahf
movsb
push
inc
pop
sub
push
jl
mov
lea
repnz
sbb
pop
hlt
lea
cmp
sbb
sete
imul
ret
mov
nop
dec
xchg
mov
sub
push
cmp
sti
dec
cmc
mov
and
push
into
or
cmc
int3
roll
mov
sbb
lods
dec
jmp
fnstenv
notb
cmp
stos
dec
fcompl
adc
add
neg
loopne
rcrb
lea
jo
adc
sub
popf
add
dec
jl
jecxz
popa
jl
cli
test
xor
testl
loope
fwait
jp
xchg
add
inc
loopne
fisttpll
movsl
mov
addr16
cmpsl
push
xchg
insl
mov
add
call
jmp
jmp
orl
faddp
jb
pusha
pusha
inc
xchg
xchg
pushw
pop
pop
enter
mov
fs
enter
sahf
sahf
sub
xor
or
sbb
mull
ret
cltd
mov
mov
mov
js
mov
fmull
imul
iret
sub
loope
or
mov
aad
idiv
or
add
addl
or
fmuls
into
or
or
or
into
inc
or
dec
and
pop
nop
mov
adcl
mov
xchg
imul
mov
in
inc
or
add
fldl
pop
push
or
add
and
xor
dec
sbb
inc
mov
mov
xchg
inc
fdivl
push
in
icebp
cmp
lret
pop
lods
int
fwait
push
pushl
nop
xor
mov
and
xchg
xor
pop
and
mov
mov
insl
xchg
subl
aad
imul
add
sbb
or
inc
fidivs
movsl
mov
je
js
daa
inc
xchg
dec
cmpsl
repz
in
and
scas
fcoms
pusha
sbb
js
aas
movsl
push
pop
test
dec
xorl
in
mov
lahf
and
dec
das
popa
imul
sbb
xor
fidivs
jbe
or
pop
les
cmp
mov
sub
sbb
hlt
pop
adc
adc
and
xor
inc
arpl
enter
and
adc
in
push
pop
lds
test
push
int3
jmp
fsubrs
pop
xor
push
xchg
dec
sbb
leave
add
outsl
push
adc
fwait
dec
enter
test
sbb
push
imul
and
inc
arpl
fbld
xor
test
inc
daa
mov
bound
inc
mov
fnsave
xchg
mov
cmpsl
sub
xor
sbb
dec
cmp
or
push
pushf
pop
push
push
cli
push
lea
add
adc
repz
inc
loopnew
pop
inc
sub
dec
cmpsb
push
mov
inc
push
outsl
push
je
insb
and
cwtl
nop
data16
add
sbb
stos
dec
push
js
push
or
xchg
xchg
xor
inc
stc
xor
subl
ljmp
imul
sbb
popa
scas
pop
adc
mov
xor
and
js
xchg
lock
jg
je
push
mov
imul
mov
aam
inc
sbb
fdiv
add
jns
rcrb
xchg
lahf
test
adc
xchg
es
sub
xchg
jne
xor
cmpsw
mov
cmpsb
test
mov
add
mov
mov
mov
aad
or
jo
sahf
push
push
daa
ficoml
daa
add
adc
jae
jmp
fsubrl
ret
xor
push
aas
call
test
pop
addr16
rclb
jne
outsl
in
adcl
adc
pop
mov
mov
and
mov
enter
mov
push
shl
int
cmpsl
push
lea
jecxz
insl
lods
shlb
in
mov
add
fmull
xor
inc
pop
inc
std
xor
in
mov
mov
mov
adc
data16
mov
or
sti
mov
inc
loopne
sub
push
call
mov
fcomip
pop
mov
emms
sbb
loopne
out
addl
sub
mov
sub
addl
add
pop
fadd
lahf
or
imul
aaa
push
sub
mov
sub
loop
xor
je
data16
adc
add
cmp
jne
pop
test
inc
fdivr
dec
fs
xlat
lret
push
jne
dec
aaa
or
sub
test
ljmp
dec
addb
imul
inc
or
scas
mov
cmp
insb
roll
and
xchg
xor
aas
push
sbb
mov
dec
add
or
and
xchg
in
or
sub
jne
pop
or
push
adc
dec
fidivs
adc
ds
roll
xor
clc
cld
pop
push
push
and
mov
adc
and
mov
mov
add
in
push
imul
and
inc
adcl
xor
cli
pop
lea
push
add
nop
add
fsubl
jmp
xchg
out
sbb
and
lds
test
das
mov
das
cltd
pop
jmp
out
je
xchg
incb
cmpsb
lds
adc
fcmovb
mov
xor
pop
or
fdivrl
pusha
cli
or
push
movsb
adc
add
and
pop
addb
rcll
in
push
xorl
lods
repz
push
fisttps
add
add
xor
ret
aas
jne
add
dec
outsb
sub
push
stc
add
stos
inc
pop
cmpsb
pushf
sbbb
addb
add
or
xchg
mov
test
or
sub
icebp
imul
pop
movsl
mov
lcall
and
fldt
cmp
dec
inc
adc
push
add
sub
xchg
push
add
sub
add
inc
fisttps
pushf
push
aas
stos
adc
push
push
xchg
in
or
aas
mul
pop
add
cmc
add
and
mov
xchg
aam
pushf
adc
xchg
iret
adc
jno
outsb
js
push
popa
jo
and
mov
fisubl
push
je
movsl
ja
or
or
xor
cmp
je
or
jo
shrb
sbb
sete
movsb
mov
clc
ss
push
push
cmpb
ret
cmp
fistpll
hlt
jae
movsbl
sbb
xchg
jbe
ja
inc
mov
mov
push
lcall
clc
sub
pop
int
insb
ds
jmp
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
ret
pop
sar
mov
test
cli
mov
loop
add
sar
add
jne
xchg
cltd
add
clc
xor
xor
ss
cmp
jecxz
ljmp
jne
enter
adc
mov
mov
dec
jne
fs
or
test
sahf
or
lods
lods
xor
test
pop
push
mov
ficompl
push
dec
bound
lcall
inc
jbe
jo
shld
loopne
andl
rol
lods
jmp
add
sbbl
push
inc
cmpl
aaa
push
cmp
jl
aam
jle
insb
push
mov
aas
mov
je
shl
ja
jo
cmp
js
inc
mov
add
dec
jne
xchg
pop
mov
pusha
arpl
rolb
push
inc
pop
aam
repnz
add
aaa
lahf
push
ret
or
add
adc
pop
shlb
hlt
pusha
insl
pop
adc
jp
pop
pop
enter
adc
or
test
xor
in
pop
sub
adc
mov
pusha
aad
in
push
xor
pop
insb
jbe
mov
cltd
mov
popf
insb
lcall
mov
popa
inc
cmp
sub
sbb
sub
sbb
dec
or
add
xor
bound
filds
pop
cmp
push
loopne
push
pop
push
jmp
jecxz
cwtl
stos
stos
and
pop
mov
mov
push
push
pop
cmp
xor
out
mov
pop
outsb
pop
pop
rcrb
leave
mov
pop
add
jmp
cmp
movsb
jmp
in
inc
ljmp
in
repz
add
scas
or
push
and
sarb
adc
in
sbbl
adcl
in
pop
jle
js
adc
js
and
push
add
pop
ss
cmp
dec
jns
push
push
xchg
mov
loopne
mov
add
add
push
repnz
sbb
daa
aas
adc
mov
aaa
mov
push
mov
scas
imul
pop
je
call
pushl
dec
fdivl
test
cs
push
cmp
pop
cmp
loopne
mov
loop
rcr
mov
jmp
inc
aas
inc
push
mov
mulb
and
mov
ret
push
cmp
sbb
dec
loop
ljmp
fnsave
nop
rorb
pop
mov
das
push
movsl
adc
popa
aam
xor
jo
jbe
icebp
dec
push
xchg
cmp
xor
mov
shl
and
xchg
add
dec
out
add
int3
add
mov
push
cmpsb
jmp
jp
mov
or
aam
inc
or
push
push
shr
cmp
mov
insl
pop
jb
xchg
adc
aam
xchg
pop
mov
jno
fwait
dec
lea
aam
dec
push
sbb
mov
pop
jo
adc
or
push
daa
and
clc
jmp
mov
cs
push
xlat
push
cli
lcall
mov
adc
cwtl
out
adc
add
adc
pushf
mov
cmp
int3
add
les
bound
jmp
push
fidivrs
sti
cwtl
sti
push
pop
cmp
fs
mov
sbb
mov
dec
or
xchg
lods
fcomps
inc
das
cmpsl
call
out
das
mov
movsl
adc
pusha
stos
and
and
cmp
add
ss
dec
push
rclb
rolb
and
in
or
mov
xchg
lret
xchg
jge
aam
and
xchg
jle
mov
adc
fcomps
lret
or
les
or
clc
jl
cwtl
lea
mov
jge
sub
add
into
clc
fldl
lcall
cmp
fadds
lret
shl
call
mov
decl
mov
mov
out
test
clc
sarb
jl
dec
out
test
sbb
adc
add
mov
js
or
rolb
andb
push
pop
add
sub
mov
aam
dec
pop
cmp
sub
movsb
fiadds
cmp
mov
mov
movsl
sub
dec
push
roll
sahf
sbb
pop
sub
add
mov
sbb
xor
mov
int
mov
lcall
call
jae
xor
iret
add
lret
cmp
jnp
xor
push
xor
movsb
es
and
add
add
add
or
add
fcoml
inc
mov
xor
cmc
mov
and
lods
dec
lock
fidivl
or
scas
push
std
pushl
jle
int
mov
mov
clc
lock
mov
sub
test
push
rorl
jno
pop
iret
and
cmp
or
pushf
jl
rcrb
hlt
mov
mov
dec
mov
mov
std
mov
clc
add
mov
add
movzbl
mov
inc
mov
push
call
or
aam
scas
dec
clc
sub
mov
fnstcw
push
sarb
sub
push
icebp
out
ja
mov
dec
xchg
add
pop
jnp
lods
add
push
mov
nop
adc
push
nop
add
or
cld
inc
inc
call
xor
mov
jl
mov
ja
adc
aad
and
fwait
jb
jne,pn
push
into
in
mov
add
push
sub
call
jle
fwait
mov
add
jo
or
push
adc
add
add
cmp
fstpt
test
in
jg
es
and
push
fs
test
xor
mov
fistl
pop
mov
cmp
inc
pushf
mov
cmp
testl
call
and
lahf
lret
mov
hlt
dec
adc
pop
aad
les
popa
xchg
inc
imul
rclb
dec
rorl
xor
lods
das
mov
dec
mov
xor
and
adc
add
rclb
and
mov
and
xchg
fdivs
sbb
push
dec
adc
pop
je
pop
clc
jp
in
mov
push
mov
cmp
and
sbb
iret
xchg
push
roll
cld
ja
mov
jb
cwtl
mov
shrb
stc
sub
ss
lea
dec
mov
jbe
cmp
jbe
mov
sbb
rclb
cmp
enter
pop
aaa
ljmp
aas
fwait
xchg
adc
jp
xchg
inc
call
insl
push
mov
sub
fadd
test
and
lock
ljmp
xchg
push
xchg
sti
push
sub
mov
divl
push
fsubs
iret
fsts
push
push
push
cmp
loopne
hlt
daa
cmp
and
jns
jnp
arpl
mov
mov
sbb
test
pop
ret
and
movsl
xor
enter
pop
addb
shll
mov
outsl
nop
cmp
pop
sbb
push
aam
call
mov
sbb
sti
lea
pushf
movsb
mov
loop
push
imul
cwtl
or
sub
pushf
test
insb
dec
and
movsl
push
ret
in
add
lods
add
or
pop
in
mov
xor
jne
into
mov
pop
xchg
inc
jnp
xchg
jg
cmp
sbb
arpl
or
sbb
mov
add
aas
jb
mov
add
movsl
sub
add
adc
adc
add
pop
adc
int
adc
pop
lcall
aam
loop
mov
mov
or
add
and
push
adcl
and
scas
inc
sub
pop
jge
inc
mov
in
mov
jno
sub
test
ljmp
add
enter
fstps
sub
jo
inc
or
jle
stos
cs
xor
ret
cmp
ss
or
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcll
fisttpl
push
loopne
mov
pop
inc
jp
sti
dec
stos
shrl
ret
mov
enter
sub
test
or
add
insb
ss
scas
add
push
aam
push
or
inc
aaa
and
add
mov
stc
mov
shrb
adc
cwtl
je
jg
bnd
lea
mov
je
cmp
rcpps
mov
fiadds
roll
and
mov
pop
and
and
maxps
ds
mov
fiadds
and
mov
cmp
adc
dec
xchg
xchg
fwait
movl
aas
pop
orl
jge,pn
cmp
pop
cli
mov
rcr
dec
outsl
pop
fdivl
mov
jmp
loope
lahf
leave
push
fiadds
jmp
sub
cmpsl
lock
fdivrl
pop
pusha
pop
add
pop
je
push
fwait
xor
out
test
mov
in
addb
cmp
daa
popf
jmp
pop
or
push
mov
mov
pop
add
xchg
dec
aaa
jae
addr16
xchg
lahf
rolb
mov
sbb
cmp
jmp
out
xchg
cmp
dec
lods
inc
add
incl
jge
sub
mov
jg
jl
xor
aad
push
flds
and
callw
aas
jmp
push
mov
push
adc
or
hlt
imul
shlb
mov
pop
push
push
pop
push
ja
push
add
inc
mov
jne
jne
int3
add
psrlq
popa
imul
sahf
dec
cld
stos
rclb
or
clc
scas
mov
jne
cmp
jbe
mov
hlt
sub
cmp
pop
push
sbb
lahf
test
cmp
adc
test
int3
adc
pop
add
nop
cmp
sarb
scas
jmp
pop
mov
clc
jne
mov
cs
adc
andl
pop
mov
leave
test
sbb
popf
add
out
imul
lock
or
fcmovnu
push
jmp
or
scas
or
fcomps
adc
mov
call
cmp
sbb
lea
and
in
add
and
jmp
sbb
jecxz
jg
pop
lods
push
sub
adc
or
out
add
add
mov
inc
add
shll
pop
and
and
out
subb
enter
xchg
mov
xor
xor
add
popa
fdivl
inc
or
mov
or
and
repz
pop
add
orl
fs
lret
xorl
xor
dec
adc
addr16
fadds
push
lock
lods
sub
add
xor
sub
add
pop
add
pop
lahf
and
xchg
add
mov
xor
lahf
int3
and
jns
pop
cwtl
push
jae
shlb
pop
int
pop
mov
sub
test
xlat
ds
adc
mov
pop
sub
mov
dec
push
sti
pop
jp
ret
cld
test
das
push
daa
xchg
cmp
sahf
test
cmpsb
jo
rorb
xlat
and
sti
sbb
aas
cmc
das
sub
subl
das
or
push
rorb
jb
push
add
test
cs
or
lock
dec
sub
pop
or
loopne
inc
mov
inc
xor
subl
shll
or
dec
xor
xchg
mov
xchg
jae
mov
add
or
and
adc
and
dec
or
add
das
fwait
pop
and
dec
shl
mov
cmp
push
add
or
xchg
jne
add
rolb
add
int3
sbbb
dec
adc
aam
dec
movl
hlt
fcmovbe
bound
inc
in
inc
push
xchg
dec
cmpsl
testb
mov
mov
daa
loop
ljmp
or
cmp
and
cmpsl
movsb
test
or
adc
xchg
sub
jne
jmp
je
pop
ret
cmc
test
sub
shlb
sbb
sbb
sbb
daa
int3
cmp
clc
movsb
cmc
mov
cwtl
sub
pop
test
fcompl
cmp
xchg
push
and
adc
and
clc
adc
les
leave
cwtl
pop
inc
insl
xor
xchg
jmp
fcomps
add
mov
fadd
jp
shlb
insw
jp
stos
fstl
ja
mov
jo
in
xchg
xor
sbb
add
adc
or
mov
pop
sbbb
movsl
cs
inc
sbb
lock
ret
or
mov
or
or
int3
add
xchg
add
add
inc
push
sbb
adc
pop
aam
clc
sub
sub
jecxz
rcr
and
and
xchg
fdivr
notb
mov
jmp
inc
add
dec
gs
add
leave
cmp
xchg
sbb
enter
mov
sarb
dec
dec
hlt
pop
and
push
lea
iret
cltd
mov
push
out
or
cmp
push
adc
hlt
or
movb
pusha
or
pop
xor
xchg
sbb
dec
push
inc
dec
add
fld
inc
ficoml
jle
push
push
int
cmp
jb
cmp
cmp
jmp
inc
aaa
inc
xchg
cmpsl
popa
push
ret
rcl
mov
roll
and
pop
push
sbb
inc
aam
je
mov
push
mov
push
inc
adc
pop
in
hlt
movl
adc
inc
mov
xorl
mov
mov
imulb
mov
cli
das
je
or
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
adc
fistps
dec
lea
in
jmp
dec
mov
dec
std
ja
repz
push
cmpsb
mov
sub
inc
adc
je
idivl
lcall
mov
cmp
jbe
add
pop
add
mov
dec
iret
inc
cmp
je
sub
inc
jmp
inc
and
subl
test
pop
mov
dec
push
cs
aam
clc
mov
clc
or
out
aam
mov
roll
inc
pop
push
adc
into
xor
shl
push
cltd
add
mov
jl
sub
cld
inc
cmpb
jne
cmpl
jne
hlt
subb
aam
lds
mov
clc
clc
je
test
cmpsl
sub
mov
ja
js
sub
js
sub
mov
dec
cmc
es
add
nop
sbb
mov
push
mov
rorl
testb
loopne
jne
push
pop
pop
in
and
jg
xchg
mov
movzwl
data16
add
outsb
mov
add
jae
mov
add
shrb
ret
mov
aas
shl
add
jmp
pushf
aas
insb
sti
and
xor
pop
or
outsl
cmpsb
cmp
js
fs
jne
xor
aaa
push
cmp
adc
incl
or
push
mov
jmp
outsb
jecxz
popa
dec
shlb
lret
or
sub
dec
push
or
mov
push
lea
mov
add
and
lret
xchg
add
int3
inc
jg
or
jge
int
int
bound
and
es
sub
sub
outsb
push
idivb
jmp
or
adc
pop
jle
pusha
outsl
cmpsb
mov
xchg
cmpsb
jbe
lea
ds
loopne
pop
jbe
push
hlt
pop
arpl
repz
jne
add
je,pn
test
jne
pop
mov
add
std
sub
jb
dec
popa
adc
clc
add
fisttps
sub
jae
movb
inc
cltd
sub
lret
adc
shlb
inc
inc
pop
and
mov
sarb
xchg
add
xchg
data16
mov
shlb
inc
and
push
movsb
adc
adc
mov
add
daa
xchg
dec
mov
mov
cmp
fstps
inc
cmpsl
fdivrp
push
xor
inc
pop
push
mov
sbb
adcb
mov
mov
xchg
xchg
out
adc
movsl
pop
mov
je
mov
and
popa
pop
leave
jecxz
imul
add
pop
ret
add
mov
loopne
jne
testl
or
jg
or
push
push
push
imul
mov
ret
inc
adc
xchg
mov
jg,pn
jl
fistpll
in
or
and
jbe
push
add
push
push
cmp
int
push
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
cmp
lret
mov
inc
push
popf
inc
xchg
out
pop
cmp
inc
and
mov
bsf
stos
repz
xor
sarl
mov
or
push
andl
push
mov
xorl
nop
out
jp
inc
mov
cmp
jno
sbb
sbb
push
push
cwtl
and
xor
addr16
shrb
push
pop
push
movl
push
adc
dec
or
xor
fsub
shlb
lahf
jbe
addb
mov
push
incb
and
std
xchg
push
mov
mov
andb
pop
and
mov
loop
xchg
push
adc
cmp
sub
int
pusha
xchg
add
add
mov
xorl
je
pushl
jle
daa
or
lea
add
mov
jae
pop
push
sbb
orb
mov
cmpsb
pop
inc
add
cmp
pop
jne
lods
mov
lea
inc
sti
adc
jb
pop
sub
enter
inc
lret
negl
xor
and
in
dec
jae
jbe
mov
push
gs
add
inc
ficoml
cmp
cld
pop
xchg
push
sbb
nop
push
jl
faddl
out
sbb
xorl
jecxz
push
or
adc
fcoms
movsl
mov
stos
pop
adc
xchg
mov
sbb
xchg
sbb
clc
pop
je
test
dec
push
inc
push
shlb
xor
push
fs
add
dec
adc
or
xor
and
dec
push
test
scas
or
push
pushl
cmp
adcl
or
mov
fistl
mov
push
js
jl
add
pusha
add
add
push
sbb
inc
add
adc
mov
inc
pop
pusha
or
add
sahf
mov
aas
cmp
je
push
aaa
les
add
sbb
roll
leave
add
pop
pop
add
push
lcall
inc
add
test
adc
inc
pop
push
ret
or
andl
sti
pusha
jb
add
decl
jb
adc
roll
xchg
xor
jbe
push
adcl
call
mov
pop
test
sbb
cmp
jge
sahf
das
push
and
gs
add
adc
push
ljmp
sbb
xor
push
gs
sti
sub
cld
outsb
jb
jbe
push
push
popf
test
cmp
add
dec
and
mov
pop
mov
jne
lea
or
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
ficompl
or
jecxz
jl
fmull
and
cmp
push
inc
mov
or
dec
or
stos
mov
rorl
orl
sub
dec
fs
ficomps
arpl
add
xchg
aam
add
lcall
xchg
in
or
sbb
mov
pop
cwtl
cmpl
dec
push
and
xor
in
lods
or
push
push
lret
pusha
push
fbld
or
mov
pop
mov
imul
insl
jnp
or
movl
inc
test
cmpl
nop
fidivl
test
cmc
push
add
mov
fs
inc
fidivl
xor
cmpsb
or
xchg
pop
and
xchg
xchg
jecxz
clc
loopne
push
bound
and
push
cmp
pop
jge
dec
inc
adc
loopne
mov
or
inc
popf
jne
push
imul
lock
and
inc
jp
mov
xchg
pop
mov
push
subl
mov
mov
loope
adc
sub
mov
addl
jnp
mov
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
call
lods
fwait
mov
movsl
insl
cwtl
jl
fsubs
dec
and
push
aas
je
push
sbb
cmp
push
pop
jne
aam
inc
cmp
shlb
or
mov
inc
pop
jne
pop
call
jl
incl
or
shrb
cs
xorl
and
push
xchg
cmp
sub
mov
mov
sbb
or
sub
or
xchg
jmp
out
fldl
mov
sbb
cmp
and
in
pop
in
subl
mov
or
je
imul
fistl
in
div
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
daa
test
sbb
dec
daa
mov
aas
inc
es
xchg
mov
orl
jmp
adc
cmpl
pop
and
pop
lock
xchg
orl
sbb
xchg
lret
in
pop
fs
push
scas
or
inc
out
cmpb
or
or
or
mov
fwait
ret
push
add
loop
jmp
lahf
les
testb
cmp
add
ret
push
mov
std
inc
push
dec
adc
cs
movsl
aas
add
inc
add
inc
mov
pop
xchg
inc
bound
sub
push
lock
sahf
xchg
pop
push
push
push
push
pop
cs
lret
in
pop
pop
pusha
pusha
pop
or
sub
and
popf
sbb
pop
xlat
push
cmp
push
sub
cmp
test
add
addb
dec
add
sub
xor
mov
push
sbb
jbe
add
in
out
rolb
mov
jg
cwtl
mov
jmp
mov
add
rcll
lret
mov
lcall
adc
popa
xor
sbb
in
leave
clc
or
inc
adc
jmp
adc
sub
sbb
pop
les
je
insb
or
mov
mov
daa
mov
sub
leave
lds
sbb
scas
jp
cld
xorb
pop
fimuls
mov
scas
jae
or
inc
push
jnp
jge
inc
cli
jp
push
pop
jmp
shr
mov
mov
adc
mov
mov
mov
push
sbb
or
push
or
loope
add
pop
push
pop
je
lock
test
call
mov
or
imul
xor
sti
es
sti
jnp
adc
addr16
fsubrs
in
sbbl
js
push
xor
sub
mov
mov
rep
decl
mov
mov
sbb
push
sahf
xchg
in
loope
fucomp
push
cmp
je
mov
adc
in
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
or
dec
out
pop
inc
xchg
add
adc
mov
xor
mov
adc
sbb
mov
mov
cmp
je
push
aas
push
jnp
jb
jl
mov
and
add
sbb
pop
push
cmpb
push
adc
sbb
jle
and
adc
mov
add
push
into
sbb
jbe
push
adc
shlb
jne
dec
or
lcall
and
add
adc
clc
in
add
lock
cmp
jne
or
sub
push
lret
pop
jbe
jo
inc
bound
in
in
int
imul
sbb
ficoms
shlb
orb
daa
fisttpll
subb
jae
lcall
sbb
mov
incl
cmp
rcl
and
push
loopne
inc
test
sti
hlt
add
push
lock
mov
lods
cmp
clc
adc
cltd
jne
mov
adc
cmpsb
leave
pop
cmpb
mov
movl
add
sub
loop
inc
or
push
inc
add
or
adc
jne
xlat
test
jge
clc
dec
imul
inc
cmp
mov
lea
adc
inc
hlt
mov
lock
hlt
aaa
leave
add
lock
mov
mov
dec
loope
rclb
inc
inc
mov
xor
cmp
ljmp
mov
push
pop
mov
adc
add
pop
sbb
loop
and
mov
jecxz
mov
fisttpll
pushf
outsl
mov
and
add
xorb
jnp
push
push
popa
shlb
add
jmp
ja
push
out
xchg
orl
int
and
xlat
mov
xchg
addr16
mov
adc
sbb
push
test
mov
das
je
push
and
add
push
test
dec
add
shr
enter
xchg
push
cmpb
js
gs
jns
jmp
add
sub
lock
das
jle
inc
and
add
movsl
movsw
mov
inc
loopne
and
rcrl
or
sbb
icebp
sub
stos
sub
popf
cmp
fsubr
xor
xchg
in
adc
pop
sbb
rcl
adc
inc
inc
fsubrp
pushf
pop
push
test
pusha
es
outsb
add
inc
je
adc
bound
adc
nop
inc
sbb
cmc
dec
in
push
jnp
jmp
sub
les
aad
cmp
push
orl
or
add
add
inc
push
in
sbb
cs
adc
xchg
ljmp
les
push
jmp
mov
popa
add
int3
and
dec
mov
orb
inc
pop
push
add
dec
fmull
mov
je
mov
sbb
dec
dec
dec
jne
jo
add
jns
sbb
jb
dec
cmp
sbb
jg
jbe
push
filds
or
in
shr
mov
xorl
lock
movsl
xor
dec
adc
movsl
sbb
lret
cmp
mov
in
lret
es
fsubrs
sbb
pop
je
and
loopne
icebp
push
xor
mov
sub
sub
sub
and
adc
rclb
mov
dec
mov
or
nop
roll
adc
xor
dec
in
lret
cmc
mov
roll
jb
mov
test
fs
cld
mov
or
mov
das
test
incb
jl
jmp
pop
add
in
push
cmpsb
mov
stos
cmp
push
inc
sbb
add
lret
dec
pop
test
adc
in
sbb
cmpsl
push
cmp
dec
loop
movsb
push
imul
add
lret
clc
xchg
int3
in
mov
pop
push
rcr
lahf
in
or
xor
lea
lahf
adc
mov
jp
sbb
cmp
push
and
push
push
sub
push
rep
inc
xchg
cmp
clc
int3
mov
fcomps
cmp
decl
and
clc
inc
push
inc
pop
addb
mov
jns
xchg
mov
inc
ds
lret
rcr
test
push
push
xor
fdivrs
or
leave
adc
sbb
or
dec
mov
dec
or
or
xchg
test
or
sbb
ret
pop
dec
je
sbb
nop
push
ret
outsl
mov
push
xchg
sbb
sub
js
xor
in
in
pop
daa
sbb
lret
pusha
xchg
pop
xor
adc
rcr
clc
and
inc
inc
adc
ss
es
push
testb
not
cld
es
add
ss
in
rep
sbb
xlat
mov
sbb
sbb
cltd
mov
pop
leave
sub
out
and
stc
cmp
pop
push
push
js
test
icebp
mov
fdivs
or
psadbw
mov
adc
jmp
push
push
fadd
daa
lock
cmp
repnz
loopne
dec
xchg
roll
fdivs
ret
pop
jge
cwtl
lods
dec
rolb
inc
dec
lock
push
push
push
add
sbb
in
out
mov
mov
jmp
sub
mov
and
pushl
push
iret
xchg
pop
ja
sbb
inc
lods
cmpsl
jo
movb
clc
mov
or
jo
pop
into
lcall
xor
inc
inc
jne
and
pop
shlb
sub
push
xchg
xor
inc
sbb
adc
xlat
inc
inc
addr16
es
clts
fidivrl
pop
iret
mov
mov
adcl
dec
xor
sbb
sub
push
scas
dec
loopne
xchg
bound
xor
cmp
push
adc
mov
xchg
test
jb
jecxz
test
jle
enter
add
jne
cmp
sbb
call
xor
rorb
outsb
enter
or
jecxz
or
bound
dec
xchg
addr16
or
loopne
xchg
inc
out
mov
or
add
dec
inc
push
cmpsl
mov
sub
or
add
push
loopne
stos
cmpsb
or
loop
lea
jo
add
pop
stos
pop
push
dec
loopne
xor
mov
jle
push
lds
lock
lock
xlat
data16
inc
lock
hlt
push
leave
loopne
xchg
xor
pushf
cmp
adcb
pusha
cmp
or
or
adc
pop
dec
inc
iret
pop
cltd
push
mov
mov
fiadds
adc
pop
test
faddp
adcl
incl
adc
pop
cmp
push
and
xlat
mov
push
xor
mov
push
or
sub
pop
inc
sbb
sbb
mov
mov
mov
push
pop
loopne
and
inc
movl
cmp
outsb
push
mov
add
or
iret
push
adc
enter
mov
xor
cmp
and
or
das
jge
rorl
nop
or
xchg
add
test
inc
sbb
sbb
iret
fdivrs
jne
cmp
push
imul
pop
cmp
inc
xor
add
jo
test
dec
jns
pushf
lea
push
push
jecxz
ret
lea
lds
repnz
syscall
xor
shrb
dec
adc
fsubrs
pusha
repnz
push
mov
or
dec
push
rol
and
rorl
loope
sub
adc
jns
fsubs
fwait
aam
add
push
das
ror
int3
test
outsb
icebp
cmp
adc
dec
imul
ds
pop
outsl
ss
movb
enter
test
adc
nop
xlat
jo
mov
out
push
adc
repnz
sub
mov
rcrl
ret
and
jge
jge
cmp
js
add
and
or
leave
mov
clc
or
mov
add
test
lcall
inc
push
and
lea
andl
adc
popl
or
cmp
xchg
add
sbb
push
and
inc
sbb
icebp
mov
push
fnsave
adc
mov
or
leave
or
or
mov
adc
jbe
xchg
add
and
xor
mov
sahf
or
mov
add
adc
lahf
cmpsl
or
sub
push
aaa
hlt
sub
dec
incl
dec
cli
xchg
les
adc
outsl
fsts
test
xchg
stc
mov
mov
fsubrs
sbb
int3
jnp
inc
cmp
popa
push
push
pop
adc
lods
cmpsb
xor
dec
cmp
xchg
push
sbb
and
imul
and
stc
sub
mov
aam
mov
and
push
inc
adc
inc
daa
mov
divb
jae
rorl
jp
out
fstl
sbb
and
addl
xchg
dec
je
sbb
fmuls
pop
out
fnstcw
mov
rol
push
js
pushl
nop
sbbl
ret
sub
jge
adc
stos
fs
ret
dec
sbb
mov
stos
jge
das
or
hlt
push
lea
push
inc
loopne
mov
test
cs
rorl
es
jp
jo
add
or
cs
sbb
or
mov
fcoml
or
in
mov
hlt
pop
data16
jnp
add
adc
mov
dec
inc
int3
mov
and
dec
sbb
jle
jmp
ss
pushf
js
gs
xor
ljmp
inc
lods
add
dec
lods
or
repz
cmp
in
mov
xor
dec
inc
loope
dec
stos
js
sbb
cmp
xchg
xchg
popa
mov
pop
inc
xchg
lcall
aas
add
fadd
shlb
push
sub
sbbb
pop
push
in
jl
aas
sbb
xor
aam
or
pop
jmp
adc
mov
stc
and
sbb
xlat
cmp
push
loope
scas
jge
pop
cmpl
push
ret
and
jo
outsb
clc
clc
dec
lret
xchg
adc
mov
or
and
jo
mov
jbe
xor
dec
jmp
movsb
data16
mov
sbbl
pop
and
clc
icebp
dec
cmp
inc
loopne
mov
call
or
inc
mov
fmul
idivl
pop
sahf
pop
jbe,pn
faddl
xchg
mov
fs
jb
insb
sbb
ds
jp
xchg
mov
shll
push
adc
loop
push
dec
loopne,pn
mov
enter
jbe
or
mov
cmp
jne
cmp
or
lcall
nop
adc
outsb
mov
test
js
xchg
or
push
das
xor
mov
inc
loopne
cs
xor
fucom
ret
arpl
pop
push
shrb
pop
shlb
lldt
mov
push
leave
fcmove
mov
dec
xchg
xchg
call
mov
dec
mov
add
fistpll
jb
jmp
mov
mov
push
xchg
jno
mov
addr16
mov
stc
mov
insl
mov
lret
jp
pop
test
aad
xor
ret
jo
jb
cwtl
ret
imul
sub
push
fldenv
xchg
in
fwait
push
shlb
jecxz
xor
or
fisttps
and
daa
mov
mov
mov
inc
add
push
push
pushf
fs
push
mov
lock
add
fst
enter
push
and
aam
mov
push
fwait
cli
mov
inc
and
jne
arpl
popf
nop
mov
les
sti
mov
push
negb
push
xor
and
pop
insb
jmp
cltd
xchg
inc
mov
mov
mov
aad
mov
hlt
or
push
mov
leave
sub
cmp
rcrb
jbe
sub
sbb
rcl
scas
mov
mov
sub
or
add
fstl
ljmp
flds
inc
push
rol
aad
jle
enter
or
test
pop
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
add
enter
mov
int3
jp
ds
jne
jge
sbb
mov
sub
add
fldl
push
out
xor
push
or
inc
loop
mov
mov
cmp
pop
cmpsl
and
fistl
sbb
push
xor
or
mov
mov
out
mov
push
pop
or
inc
les
add
leave
cmp
je
push
sub
call
adc
xchg
pop
adc
push
pop
mov
fxch
adc
push
loope
imul
and
mov
push
enter
loope
leave
and
inc
pop
inc
shrb
xor
aad
or
add
sub
fld
arpl
lods
aam
add
fildll
or
lret
lods
cld
jmp
push
and
add
add
add
neg
sbb
inc
push
xchg
icebp
aad
iret
jp
cmp
mov
ljmp
fiadds
sub
mov
add
lret
aas
mov
adc
jp
mov
dec
fldl
loope
push
sub
lret
ss
hlt
shr
frstor
adc
xor
xlat
arpl
cmp
lods
testb
inc
jo
lds
sbb
dec
adc
add
xor
in
adc
cs
adc
cltd
in
dec
adc
adc
xchg
or
adc
adc
add
sbbb
xchg
sub
add
xchg
add
enter
adc
repz
push
mov
cmpw
mov
rolb
je
cmp
dec
lock
mov
out
insl
add
xchg
js
or
xor
data16
add
psubsw
push
dec
test
fs
push
in
outsl
xor
xchg
jo
sarb
mov
mov
xchg
das
addl
popf
mov
in
cmp
jl
inc
and
ja
cmc
iret
das
jmp
cmp
loopne
imul
xchg
jnp
jne
adc
out
enter
xorl
movsl
pusha
es
lret
or
lea
in
mov
add
lock
mov
repz
pop
addr16
shlb
jbe
call
push
cmp
pop
lret
mov
and
mov
push
add
sub
js
fimull
push
fidivl
jne
into
or
push
movsl
popf
ja
cmpsl
or
movb
jmp
jo
mov
jns
sbb
pop
and
add
dec
pushf
out
add
mov
mov
addr16
popf
push
popa
add
lea
sub
cmp
add
cs
mov
sbb
xchg
cld
add
lret
inc
pusha
outsl
test
test
stos
cmp
insb
aam
mov
push
mov
test
enter
mov
pushf
stos
pop
ret
outsb
ret
testb
mov
pop
dec
or
test
mov
fiadds
mov
mov
mov
ret
xor
inc
icebp
push
in
inc
jne
insb
jne
call
dec
lock
sub
mov
sub
repz
cmpsb
sbb
jl
stc
dec
cmp
push
sbbl
or
jg
pcmpeqb
xor
jle
jge
cmp
into
or
pop
add
adc
add
popa
pop
xchg
in
fdivr
xor
jmp
sbbb
xchg
mov
lods
dec
push
je
or
dec
push
mov
jl
and
enter
push
repnz
out
mov
sahf
cs
push
shl
and
dec
sub
sub
jo,pt
push
into
in
jmp
pop
lock
and
mov
test
add
ret
jnp
xchg
clc
inc
sti
push
xchg
pop
add
or
jecxz
xor
cltd
jge
faddl
or
add
mov
loope
rcrb
mov
mov
sbb
mov
sub
and
and
and
pusha
addl
sbb
cli
cmp
xlat
xlat
add
push
rorb
lahf
mov
push
or
push
nop
dec
jno
nop
data16
mov
jb
lret
xor
lea
aam
adc
adc
inc
mov
push
sbb
cmc
cwtl
arpl
ror
jae
mov
stc
int3
or
test
pop
cmp
movsb
pop
lea
scas
add
daa
pop
lock
add
outsb
jno
mov
inc
test
pop
inc
push
xchg
cmpsl
push
cmc
jb
add
clc
inc
dec
adc
roll
mov
inc
push
push
mov
cmpl
push
mov
fadd
mov
rclb
push
sub
cld
xchg
cmp
xor
add
lret
mov
rorl
ret
stos
into
or
mov
add
push
and
mov
inc
call
push
mov
ss
psubw
mov
xchg
sbb
lret
cmp
add
scas
dec
sarl
scas
push
ljmp
ljmp
adc
push
sbbb
dec
das
jmp
fnsave
and
fmull
pop
or
rcr
test
ret
sbb
ss
mov
test
cmp
add
push
leave
mov
bsr
jo
mov
bound
xor
or
mov
dec
xor
lea
sbb
mov
dec
ljmp
shl
push
cmp
mov
rclb
xor
sbb
push
stos
add
adc
daa
outsb
andl
lea
add
fisubl
sti
jns
pop
cmp
rol
adc
fstpl
add
dec
cmp
mov
lea
fisttps
pop
mov
pop
dec
clc
xor
jl
lea
push
sbb
xchg
jns
xorl
into
sub
test
je
mov
mov
ja
inc
test
sub
or
in
sub
xchg
push
iret
pop
pushl
xchg
mov
cmpsb
pop
ds
cmpb
jne
std
push
sub
mov
push
mov
ss
sub
sbb
and
out
es
or
mov
push
jp
call
decl
jecxz
add
clc
pop
add
adc
les
add
xor
roll
pop
jnp
xor
jle
cld
and
adc
dec
adc
pop
or
pop
fistpl
add
test
fs
jmp
dec
inc
jmp
pusha
test
loop,pn
jb
dec
sub
adc
movb
sub
xlat
ret
sub
or
jle
je
dec
rorl
sbb
jmp
cltd
icebp
ret
orl
movsl
jle
dec
inc
rcrb
in
aas
mov
decl
and
jae
lea
jmp
cmpl
jne
je
inc
cmp
jbe
repnz
push
pop
xor
cld
jae
es
test
fmull
fsubrs
mov
and
push
dec
sbb
cld
mov
sbb
lahf
std
xchg
push
dec
sbb
or
dec
jge
fs
cmpsl
cmp
pushf
stc
push
test
mov
pop
and
hlt
les
je
xorb
cwtl
jns,pn
je
rclb
pop
pusha
cmpsb
jo
inc
add
inc
out
xchg
xlat
xchg
sub
pop
mov
push
addr16
aaa
push
jnp
addb
mov
pop
xor
sbb
or
jns
or
xchg
les
cmp
cs
push
loopne
fisubrs
pop
pop
add
rclb
mov
sbb
mov
inc
in
mov
pop
test
xchg
push
je
bound
add
push
cmp
mov
and
jne
and
shrl
inc
jbe
popa
mov
mov
movsl
sbb
pop
adc
sub
mov
add
pop
movsl
push
je
cwtl
xchg
dec
cmp
sahf
inc
insl
test
sbb
mov
jmp
lea
or
jbe
stc
xchg
shlb
test
or
rclb
pushl
xchg
fsubs
nop
setne
fisubrl
push
or
in
mov
out
dec
jp
aam
sub
add
add
cmp
je
cmp
lods
psadbw
pop
mov
sbb
mov
xchg
pop
subb
lea
cmp
inc
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
divl
cwtl
mov
adc
push
or
cltd
mov
add
jb
xchg
push
pushf
fistl
jae
push
xchg
or
fiadds
fidivrs
and
jae
sub
adc
daa
mov
inc
test
xchg
inc
cwtl
sub
mov
add
xor
push
testb
and
dec
push
jbe
inc
in
push
outsl
in
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
inc
rorb
cmp
arpl
dec
test
dec
int
imul
push
push
test
or
add
aaa
sub
clc
sbb
cld
cmp
stos
test
rolb
in
jg
movsb
nop
dec
push
xchg
sbb
xchg
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
jbe
cli
sbb
cmp
out
pop
cmp
pop
add
cmp
jae
push
push
push
add
sbb
or
hlt
jne
push
loopne
add
adc
addl
jne
mov
cmp
outsb
stc
mov
xchg
fmuls
dec
inc
jmp
pop
jnp
scas
out
or
ret
sbb
inc
push
cmp
test
jp
dec
add
lahf
or
popa
clc
lea
pop
cmp
mov
mov
pop
pop
pusha
lret
or
in
fs
xchg
test
das
fs
mov
mov
outsl
dec
push
hlt
neg
sbb
and
bnd
movzwl
push
sub
push
adc
loop
dec
xchg
push
mov
add
pop
orb
js
ds
cmp
and
je
clc
adc
xchg
mov
fistpl
add
je
or
into
cmp
out
je
fcmovnu
adc
pushl
sub
jge
add
cmp
mov
sbb
in
adc
cmpsl
mov
decb
and
jle
sti
sbb
or
push
cmp
out
xchg
popa
inc
cmc
cmp
mov
mov
add
jbe
jno
cld
movsb
jae
cmp
or
iret
jp
sbb
test
pop
rorb
pop
popf
cwtl
sbb
test
lods
cs
or
mov
add
lea
adc
test
mov
adc
mov
idivl
jg
cmp
dec
outsl
add
dec
mov
push
push
xor
cltd
and
push
shlb
fsubr
aaa
je
repz
lcall
inc
mov
ret
jnp
sti
test
jp
pop
inc
mov
push
rclb
adc
mov
ffreep
sbb
xor
scas
cltd
daa
pop
add
aam
mov
out
pusha
push
aad
ds
cs
and
dec
outsb
inc
outsb
outsl
out
sbb
pop
xor
or
cmpl
add
insb
insb
test
adc
mov
pop
fisttps
cs
pushf
out
push
or
pop
inc
xor
popa
and
adc
push
mov
addr16
ss
out
cld
mov
sub
or
adcl
shll
xchg
xchg
or
xchg
dec
incl
mov
jb
xor
addr16
pop
mov
and
sbb
sub
and
pop
pusha
inc
xor
or
popf
and
add
insl
mov
jb
push
jb
fadds
jae
loope
dec
add
mov
pop
popa
insl
sub
add
and
imul
je
add
das
push
jp
dec
dec
lock
sub
mov
cmp
aas
push
add
scas
std
cs
movsb
pop
or
incl
or
push
les
jne
sub
lea
add
sub
mov
std
mov
push
andb
int
and
inc
pop
pop
outsl
mov
adc
out
ljmp
add
popf
call
imul
mov
jbe
pop
fwait
jo
xchg
in
mov
ds
into
andl
sbb
iret
call
xor
add
arpl
pop
pop
dec
mov
dec
hlt
imul
lea
adc
arpl
add
pushf
sub
mov
pusha
test
lock
pop
xchg
out
lahf
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
test
arpl
fdivl
or
pop
adc
scas
xor
and
lcall
ret
add
pop
xlat
sbb
add
loopne
outsb
arpl
pop
push
je
lcall
shl
inc
push
and
inc
jae
pop
mov
xchg
mov
inc
lea
addb
and
push
jo
xchg
inc
sub
adc
push
mov
pop
push
xchg
push
and
rcr
mov
popa
test
xchg
loop
lds
mov
jmp
inc
jg
ljmp
in
idivb
mov
out
sbb
cmpsl
inc
push
aam
sub
fcomps
add
and
sbb
fdivl
push
jle
push
cli
jnp
xchg
xchg
mov
or
xchg
mov
movlps
push
or
sub
adc
dec
jge
mov
xor
pop
stos
or
fdivrs
cmp
inc
jle
push
push
dec
sar
add
pushl
dec
inc
sub
pop
lea
je
add
xor
inc
add
rcl
ret
jns
mov
mov
xchg
push
mulb
arpl
cmp
jb
mov
jb
mov
mov
sub
or
ret
cmpb
test
insl
addr16
dec
mov
fistpl
cmp
add
mov
cmp
imulb
cmp
scas
jl
mov
add
pop
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
test
out
jmp
mov
pushl
popa
pop
push
jb
and
mov
or
pop
mov
lea
add
rcl
sbb
push
jae
sub
or
dec
mov
test
xor
cmpsl
fists
scas
add
daa
call
leave
jmp
push
inc
cmpsb
sub
stos
add
and
dec
ja
push
xchg
add
fmuls
push
adc
add
loopne
mov
dec
mov
add
sahf
pop
cmpsb
pop
or
rclb
out
mov
out
mov
imul
mov
xchg
pushl
adc
pushf
inc
adc
mov
sub
inc
mov
push
hlt
sub
pop
das
dec
and
sub
inc
push
pop
xchg
lret
fs
insb
or
or
and
or
add
jns
sbb
sub
popf
mov
ja
mov
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
cmc
ret
or
or
mov
popf
clc
lret
loopne
pop
mov
xlat
mov
pop
mov
pop
std
add
mov
adc
fdivrp
dec
or
out
je
outsl
add
mov
repz
aaa
xor
in
dec
xor
inc
and
pushfw
rclb
jb
sbb
xor
adc
sbb
sub
iret
stos
popa
and
sub
sub
mov
je
dec
add
cmp
cs
jmp
and
cwtl
clc
std
incl
mov
pusha
dec
add
mov
add
push
ss
clc
push
or
inc
add
mov
pop
push
xabort
mov
xchg
daa
bnd
mov
mov
adc
add
mov
jb
push
jae
lea
push
sub
rcrl
cmp
sbb
sub
popa
stos
sub
inc
ja
shlb
add
ret
test
ret
lea
cmc
loopne
jge
imul
cld
cs
cmpb
xor
fnstenv
inc
jmp
push
pop
dec
ja
cmp
cmp
sub
arpl
mov
and
lea
ds
mov
jo
outsl
fs
test
rorb
and
stos
scas
xchg
fdivs
sub
sub
out
push
cmp
xor
lea
aad
out
insb
adc
pop
testb
divb
pop
pop
testb
push
fldt
in
sti
sbb
xor
or
mov
mov
sbb
dec
mov
pop
or
int3
jb
mov
adcb
jb
add
jns
jg
cmc
fldl
cmp
xchg
pop
lret
mov
push
adc
push
inc
mov
fcompp
jae
mov
push
aad
xor
loopne
dec
sbb
cmp
insb
adc
cltd
push
sahf
xchg
imul
out
gs
cld
or
je
xor
jge
cmp
mov
cmp
inc
cwtl
cmpsl
add
mov
lret
ljmp
andl
inc
add
fimull
adc
push
mov
cmp
sbbl
push
inc
or
add
notb
inc
inc
es
out
fists
push
xor
and
sahf
sub
hlt
xor
clc
popa
mov
iret
jne
imul
adc
push
outsb
sub
cmp
push
psubw
cwtl
lret
lds
imul
and
scas
add
mov
add
sbb
adc
add
pop
in
movb
jns
adc
stos
rolb
push
jbe
pusha
jo
inc
adc
cwtl
and
mov
stos
jno
pop
jmp
pop
fcoml
mov
jo
xor
mov
add
aaa
jmp
adc
mov
push
mov
jno
mov
sub
push
sbb
std
xchg
xor
test
cmpl
jne
or
inc
lcall
pop
xor
pop
sub
dec
dec
xor
ret
fisttpll
inc
arpl
mov
leave
cltd
addb
push
loope
into
pop
add
inc
add
xor
leave
dec
sbb
movsb
add
add
sbb
or
bound
nop
lret
pusha
and
addr16
or
jno
xor
pushl
mov
pop
ds
cmp
js
push
fsubs
add
or
sbb
inc
pop
ret
pushf
imul
push
mov
adc
cmp
loop
ret
pop
jg
cmp
je
xor
jne
pushl
adc
cmpsl
insb
stos
fwait
cltd
pusha
jo
cmpl
jbe
fstps
cmp
pop
es
and
inc
sbb
mov
sub
in
lea
cmp
xor
cmovb
dec
cmp
add
fisubrl
and
aas
fcmovu
cmp
sub
xchg
or
rorb
cli
scas
insb
push
in
push
mov
mov
sbb
out
add
int3
adc
rcll
inc
aaa
inc
in
adc
sar
dec
imul
orl
or
stos
movl
mov
add
or
mov
dec
sub
cmpsb
sbb
sarb
mov
repnz
mov
daa
or
outsl
xchg
adc
mov
and
aam
in
and
jbe
ret
mov
inc
sub
test
push
pop
xchg
cs
out
sub
lahf
mov
mov
cwtl
sub
imul
cmp
adc
xchg
and
test
sub
ret
or
mov
and
and
jnp
pop
adc
sub
jo
loopne
addl
adc
add
adc
ss
leave
xor
mov
pop
mov
cmp
add
add
das
pop
xor
and
pop
mov
adc
add
inc
inc
addb
xor
cmp
pushf
gs
inc
or
sti
mov
add
pusha
fcoms
adc
std
push
repnz
loop
and
cmp
cmpl
push
dec
mov
adc
push
andb
adc
or
cmp
aas
xchg
out
or
dec
or
out
stos
loopne
push
add
shlb
or
cmp
mov
cli
sarb
and
pop
xor
xor
ret
je
js
xlat
or
xor
ds
mov
push
mov
pop
lea
push
mov
xor
lods
jb
or
pop
cs
jge
jmp
mov
xor
push
stc
stos
movsb
loop
aaa
popf
and
pop
rcrl
popf
leave
xor
push
ljmp
aam
cmc
int3
jbe
cmp
sub
and
sbbl
test
je
xorb
push
xchg
out
hlt
mov
jo
lcall
push
mov
sbb
push
jmp
xchg
jp
or
sbb
cmpl
push
or
loop
adc
jmp
adc
inc
cmpb
lcall
fs
stos
fdivrl
fdivrl
sub
push
dec
fiadds
mov
adc
mov
pusha
in
push
loope
shll
leave
lds
mov
enter
or
jecxz
lea
imul
mov
ret
xchg
jb
andl
xchg
and
adc
je
fists
insl
xchg
and
enter
push
loope
rcrb
lods
out
pusha
pop
adc
lahf
call
lret
xor
mull
pop
jle
mov
enter
in
adc
jo
clc
pusha
sbb
pop
fs
xor
in
pop
jnp
sbb
jmp
add
sub
dec
xlat
xchg
and
scas
cmp
aas
sub
inc
xchg
mov
lea
push
leave
inc
stos
clc
inc
std
popa
enter
ja
push
xchg
mov
popa
lcall
mov
mov
arpl
xchg
dec
and
add
dec
adc
dec
gs
popa
jl
pop
shl
cld
sbb
repz
push
ds
cld
push
xchg
lods
ret
fsts
add
js
fstps
mov
add
sti
dec
push
push
fs
clc
xor
and
ja
lahf
int
jne
and
fsubl
aad
lds
mov
loopne
mov
push
and
mov
popa
push
lret
pusha
and
popa
mov
sub
fwait
xchg
push
inc
cmp
and
loop
sub
daa
jge
adc
jno
push
mov
sarl
insl
dec
cmp
je
imul
mov
and
shll
jecxz
pop
jl
subl
add
cmp
into
sbb
sti
addl
lea
stos
push
jb
std
cmp
sbb
sub
int
push
mov
jbe
or
bound
inc
mov
ret
inc
out
sub
mov
or
movl
xchg
dec
add
inc
or
mov
dec
mov
gs
das
icebp
dec
and
std
push
repnz
popa
loopne
sbb
gs
cs
cmpsl
pop
adc
push
push
dec
push
cmp
mov
sahf
push
xchg
inc
pop
rclb
repnz
sub
mov
adc
and
mov
pop
inc
sub
fisttpll
mov
cwtl
into
jmp
into
out
push
loope
push
add
rcrl
xor
add
add
imulb
push
cmp
mov
je
adc
sbb
das
outsl
push
xor
subps
add
inc
std
xchg
clc
mov
adc
jl
mov
inc
mov
imul
push
jne
sahf
adc
mov
xor
test
jecxz
ss
add
fidivs
pop
js
out
pop
adc
or
push
shrb
std
inc
arpl
ret
imul
mov
add
jmp
push
mov
dec
loopne
pop
into
add
jmp
lret
movsl
cmpsb
rorl
jnp
dec
in
xor
add
pop
mov
movb
and
mov
xchg
mov
andb
lods
nop
jo
rcll
mov
add
xchg
or
sbb
pop
and
add
aam
insl
xor
bound
cmpsl
popa
lock
jmp
cmp
xlat
ret
sbb
adc
add
push
sub
movsb
arpl
call
add
in
sbb
imul
pusha
push
xor
rcl
push
sbb
bswap
and
inc
push
add
xor
jo
and
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
test
push
inc
in
mov
jnp
mov
jne
aaa
sbb
push
das
ret
adc
rorb
xlat
mov
aaa
mov
aad
dec
xchg
sub
mov
fiaddl
lds
call
gs
sbb
scas
shrd
push
push
repz
enter
andl
mov
jbe
ffreep
test
add
mov
rcll
or
add
in
cmp
ds
inc
pop
mov
or
sbb
fstl
push
jne
push
push
leave
js
jne
jnp
mov
jne
or
mov
or
jne
or
jne
testl
dec
cwtl
dec
loop
mov
ljmp
lock
lods
add
fists
decb
lahf
cmp
icebp
adc
cmp
push
shlb
lret
fsubrs
sbb
imul
subl
cld
dec
jnp
test
push
popa
inc
add
jecxz
loope
daa
dec
add
pop
ficompl
xchg
rorb
push
int3
fcompl
push
xchg
clc
ja
lahf
or
movsb
inc
mov
jge
mov
and
xor
cmp
sub
addr16
sti
mov
xlat
popf
adc
push
jge
mov
mov
mov
lea
sub
jp
or
mov
out
fs
sbb
push
fdivl
pop
mov
dec
scas
lcall
inc
pop
jnp
loopne
fbstp
or
js
jg
sbb
ss
adc
popa
mov
mov
icebp
push
rcll
cmp
push
add
icebp
dec
lahf
adc
cmp
sbb
sahf
mov
shll
or
jnp
les
mov
or
dec
aam
push
rolb
dec
mov
orb
mov
enter
mov
pop
sbb
leave
mov
jne
dec
sub
test
pop
sub
sbb
jne
pop
imul
mov
dec
push
je
xor
outsl
sbb
mov
pop
imul
mov
cmp
scas
ss
ljmp
xor
fiadds
aam
adc
and
add
cwtl
pop
or
cmp
je
cmpb
in
in
push
or
cmp
adc
fadds
outsl
aam
mov
imul
sbb
and
movaps
xchg
cmp
jmp
xchg
or
jnp
icebp
sbb
push
cmp
cmp
mov
cmp
jl
mov
cmp
out
lret
les
mov
cmp
arpl
pop
sbb
mov
push
sbb
push
hlt
push
icebp
pop
mov
clc
cmp
fdivs
inc
xchg
pop
and
sbb
add
dec
outsl
push
push
adc
test
vpsubb
aam
stc
mov
imul
adc
or
lea
clc
lahf
sub
insb
mov
inc
loopne
pop
push
ja
mov
mov
pop
iret
mov
pop
ds
cwtl
insb
sub
pushf
or
lret
ja
jae
dec
add
insl
lret
xchg
add
or
rolb
and
inc
orl
pop
cmpsl
les
movsl
add
rcll
insl
cmpsb
mov
push
clc
addl
jbe
aam
nop
imul
xor
dec
xor
adc
imul
lock
cmp
dec
shll
insb
jo
pusha
shll
js
mov
out
cmp
or
call
int
pop
andl
clc
sti
or
mov
fsts
jge
inc
mov
mov
xor
addr16
scas
sub
pushf
push
adc
ficompl
adc
and
fucom
or
movb
sbb
nop
sar
mov
sub
xchg
das
push
fsubs
add
and
sbb
and
xor
add
and
push
xor
push
cmp
sub
lds
notb
and
adc
xlat
daa
or
inc
push
loop
jo
movsb
push
negb
cmp
add
sub
out
inc
pop
sbb
mov
adc
push
mov
sub
mov
jl
mov
mov
lods
mov
addps
cmp
outsl
dec
pop
icebp
and
sub
jnp
adc
mov
ret
or
pusha
sub
lea
or
xchg
pushf
push
xor
jle
sbb
jne
sbb
jb
mov
lcall
inc
sti
sbb
sbb
es
mov
mov
fbstp
or
push
xor
shlb
adc
test
ret
out
mov
xchg
lret
push
dec
and
rorb
push
mov
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
mov
das
xorl
pop
addl
loopne
les
jne
orl
xchg
imul
adc
or
pop
cli
xchg
adc
std
enter
and
xchg
mov
jne
mov
cmc
dec
mov
movsl
bnd
pop
rclb
lds
add
lods
cmp
sub
sub
and
mov
or
pop
mov
mov
xchg
out
cmp
adc
or
mov
sub
mov
pop
dec
jne
cmp
mov
data16
cmp
insl
mov
jne
xor
in
inc
xchg
ja
fwait
push
mov
dec
lahf
jo
cld
fwait
scas
adc
add
dec
mov
add
lds
push
pop
mov
or
into
js
or
or
invd
and
add
in
mov
xchg
outsl
andl
dec
pushf
mov
push
push
inc
ljmp
jne
js
sub
popf
lock
ljmp
cli
out
fidivrs
jl
adc
inc
lret
mov
fwait
lods
pop
mov
sbb
mov
dec
sbb
pop
dec
pop
jp
adc
or
inc
dec
leave
gs
wbinvd
pop
pop
jae
es
xor
xor
jge
pop
xorl
insl
adc
sub
xor
in
out
rorl
pop
sub
jo
fwait
test
sub
cmc
inc
xchg
enter
in
push
nop
repnz
push
js
movsl
mov
outsb
rorb
dec
jb
sbb
lea
cli
push
mov
mov
mov
and
mov
and
sbb
mov
int3
lock
adc
faddl
inc
lock
shll
inc
test
or
or
jo
in
nop
gs
je
nop
pop
sub
fs
push
sbb
fs
insb
insb
push
push
daa
add
xor
adc
cmp
jl
icebp
test
testl
je
cmp
je
popf
add
push
lds
arpl
and
mov
out
push
lret
adc
outsl
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
sti
shll
or
jmp
jecxz
push
push
testb
xchg
into
push
sbb
or
and
cmp
popa
movsl
psubsb
sarb
mov
add
push
fcmovnbe
movb
dec
roll
xor
cmp
xor
jne
pop
or
pop
flds
pop
les
push
push
push
xchg
mov
test
sahf
and
xor
test
cmpsb
xor
pop
mov
pop
pop
mov
sbb
movsl
adc
in
and
dec
adc
mov
sbbl
push
fimull
adc
in
insb
fucom
loopne
jno
test
popa
inc
pop
push
dec
icebp
popf
jecxz
and
push
cs
mov
or
icebp
and
push
push
imulb
push
xor
ret
add
stos
push
insl
or
pushf
and
fidivrs
jbe
sub
sub
cmpb
lock
divb
jl
jle
cmp
xchg
push
and
inc
sbb
push
lea
inc
add
sub
mov
pop
xor
cmpb
rclb
sbb
jmp
dec
dec
pop
lock
jo
dec
mov
push
js
sub
idivl
popa
add
sub
pop
ret
out
push
cs
or
or
mov
fstps
inc
pop
arpl
xchg
cwtl
or
test
js
dec
sbb
fdivl
enter
filds
outsb
test
or
inc
mov
inc
adc
pop
add
sub
pop
dec
cmpb
dec
cltd
rorl
xchg
adc
cli
fcoms
or
sub
sub
ret
jge
mov
mov
stos
push
sar
adc
add
cwtl
test
pop
sbb
jbe
and
or
mov
iret
xchg
sbb
jmp
push
mov
insb
inc
push
push
mov
or
pop
out
loope
movsb
in
out
nop
sub
popa
and
sbb
xchg
repz
xchg
mov
ret
inc
and
adc
xor
int
mov
out
ret
mov
xor
push
lea
mov
pop
and
inc
jno
sub
or
dec
inc
loop
push
mov
lds
xor
push
push
push
or
ja
fisttpll
adc
mov
inc
inc
lock
xor
loopne
mov
xor
sbb
gs
push
fmuls
mov
fistpl
pop
imul
je
mov
add
shll
push
xor
mov
sti
fwait
loop
mov
rcrb
push
sti
or
add
into
lcall
xor
xor
dec
loopne
sbb
xor
mov
movsl
add
jbe
sub
jl
mov
sbb
mov
sbb
and
clc
ret
subb
push
adc
mov
lds
pop
lret
movsl
cmp
imul
push
lods
scas
aaa
push
inc
adc
or
adc
ss
xor
pop
sahf
lret
cld
sbb
push
mov
push
out
and
sbb
cmp
repnz
xor
hlt
sub
movsl
out
out
cmpsb
or
test
ficompl
cs
outsl
and
daa
out
push
dec
repz
das
and
lea
or
fimuls
and
mov
fisubrl
jl
repnz
inc
loope
pop
add
movsl
push
sub
in
es
sbb
sub
inc
sbb
push
addb
and
or
push
pop
xchg
and
loope
mov
and
and
leave
mov
adc
mov
fisubrl
add
mov
pop
mov
into
mov
fstpt
jg
adc
int
rcll
ljmp
xchg
arpl
fdivs
or
cmp
imull
ljmp
add
sar
push
fs
mov
push
cs
jl
pop
or
pusha
mov
jb
and
loopne
lock
lock
inc
xchg
pop
pop
mov
xor
cmp
push
add
imul
and
sub
pop
dec
xor
call
add
push
mov
sbb
fadds
test
add
rclb
mov
pop
sub
cmpsl
in
out
aam
fxch
xor
mov
push
or
cmp
fcmovu
or
push
jbe
pop
call
xchg
push
mov
inc
imull
pushf
adc
add
add
and
sbb
and
sbb
rorb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
push
inc
xor
dec
leave
push
jb
cmp
nop
add
or
adc
ret
ret
xor
add
fwait
xchg
add
ret
sarb
ret
movsb
mov
dec
adc
mov
xor
insl
lret
test
mov
push
inc
xor
lret
clc
lds
lret
std
decl
ljmp
dec
ss
clc
or
pop
and
faddp
vpaddsb
add
sub
and
push
add
or
popa
lea
sar
pusha
sbb
and
roll
add
js
pushl
scas
mov
pop
mov
pop
add
ret
sbb
pop
mov
mov
mov
cmp
inc
push
rcrl
inc
data16
wbinvd
dec
into
arpl
bound
adc
mov
inc
negb
cmpsb
sub
xor
mov
sub
jle
inc
andl
adc
ret
jo
mov
fs
in
adc
add
ror
les
jecxz,pn
jecxz
leave
and
dec
xor
pop
and
push
push
insb
movl
inc
xor
add
push
fcoml
inc
cmpsl
shll
sub
and
jo
or
cmpsl
mov
adc
pop
jecxz
divl
leave
cmp
cmpsb
push
lcall
arpl
mov
push
pop
xor
inc
and
jl
pop
add
out
sub
sub
ja
shll
pop
jmp
pop
fiadds
adc
mov
push
pop
bound
xor
mov
push
sbb
inc
dec
add
jl
imul
push
sahf
and
pop
pop
pop
xchg
pop
pop
sub
pop
add
pop
lock
push
push
xchg
add
push
sub
pop
aam
dec
mov
mov
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
aaa
mov
cmp
mov
jl
loope
xor
jg
or
push
fistl
loopne
popa
inc
push
rolb
jl
push
push
ds
xchg
mov
int
jle
inc
mov
leave
pop
adc
push
cmpsb
divb
mov
sahf
pusha
int
cmpsl
sub
mov
pusha
repnz
mov
aas
add
xor
xchg
cli
add
inc
push
mov
cmp
popa
add
fldcw
movsl
sarl
aaa
lods
in
in
add
add
aam
xchg
mov
das
inc
cmp
xchg
fwait
nop
arpl
or
imul
rolb
test
es
push
jecxz
mov
or
or
push
leave
add
dec
cwtl
mov
fisubl
mov
mov
into
mov
cmp
jns
xchg
insl
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
dec
arpl
out
pop
cmpsb
outsb
fistl
pushf
jmp
pop
add
insl
cmpb
fisttpl
pop
push
push
push
inc
popf
les
or
imul
pop
cmp
ja
mov
ja
or
lea
andb
xchg
int3
movsl
add
stos
push
ret
push
lret
dec
cmp
and
popa
or
add
iret
pop
scas
jecxz
cmpsb
imul
aad
push
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
mov
xchg
fimull
aas
or
sub
outsl
inc
sbb
js
adc
shrb
xor
outsl
arpl
cmpsb
xor
jns
mov
andw
cwtl
push
push
stos
loope
popl
nop
es
adc
lcall
fucomp
push
add
xor
push
jns
adc
test
cmpsl
sub
pop
sub
dec
pcmpeqd
push
push
sbb
push
loopne
or
push
push
inc
mov
aaa
pop
pop
push
xor
push
or
and
hlt
mov
add
fnstcw
rorb
sbb
dec
and
orl
mov
xor
cmpb
data16
mull
dec
sbb
bound
xor
add
sub
sbb
add
and
adc
sbb
adc
xchg
leave
dec
cmp
adc
push
xor
out
xchg
mov
cmpb
and
jp
pop
mov
xor
add
aaa
sub
pushf
faddl
dec
test
push
sub
sti
lods
mov
or
and
sahf
data16
shlb
aas
jmp
and
aad
cmp
lds
add
push
mov
int3
and
pop
cmc
push
cld
aas
movb
test
scas
jge
movl
pop
sub
insb
shr
inc
xchg
stc
jge
xor
adc
xor
loope
push
sbb
push
hlt
aam
add
or
push
cmp
std
mov
decb
outsb
fisubrl
jno
xor
dec
mov
add
mov
bound
lock
and
and
fsubs
cmp
or
hlt
sbb
pop
pop
xlat
adc
arpl
pop
push
sub
inc
lock
or
pop
cmp
xor
jecxz
inc
xor
jecxz
or
dec
add
xor
xor
jae
adc
push
xor
adc
or
or
xorl
js
push
sbb
arpl
cmpb
cs
push
add
iret
xchg
sub
sbb
test
jmp
mov
fldl
and
insl
add
push
push
sub
pushf
test
push
popl
cmpb
add
pushl
faddl
jg
inc
xor
mov
inc
movsb
xor
je
in
add
arpl
sub
adc
jno
push
loopne
movsl
addb
aad
inc
das
pusha
js
cli
add
add
je
push
push
or
add
pop
mov
fsubrs
lea
push
sbb
xor
sub
movb
leave
add
sbb
cmp
add
push
ret
jbe
daa
pop
push
insb
sub
mov
or
or
sbb
cmc
sub
ret
sbb
flds
xchg
test
aas
test
inc
dec
hlt
sahf
xchg
andb
jg
mov
das
push
je
or
fwait
or
xchg
lret
test
fisubrs
inc
ja
cwtl
ret
imul
mov
nop/reserved
push
mov
and
es
cmpb
xor
mov
aaa
movsb
or
fwait
inc
cmpsb
sahf
idivb
or
fstpl
fbld
rorb
add
daa
mov
and
cmp
adc
push
cli
jl
adc
bound
jns
adc
sbb
fwait
lock
int
fs
push
arpl
push
mov
icebp
xchg
add
pushl
dec
add
adc
xor
jbe
stos
popf
and
mov
mov
inc
cmc
pop
sub
orb
push
push
mov
repnz
xor
testl
loope
dec
pop
dec
es
and
rorb
call
mov
test
cmpsl
dec
or
sub
bound
push
leave
pop
xchg
adc
inc
push
jae
sub
jmp
or
dec
add
fstps
je
lea
hlt
lret
add
rcll
jbe
push
pushf
mov
mov
jl
je
insl
or
xor
test
add
jge
lret
mov
jle
xor
or
aaa
push
neg
ret
jge
sbb
testb
rcr
adc
mov
cmpsb
add
inc
inc
nop
jne
imul
add
fidivl
cwtl
pop
clc
mov
jo
jo
push
je
adc
pop
daa
fs
jbe
cmpl
sbbl
sub
pop
and
je
jnp
or
out
inc
xor
in
movsl
dec
and
js
lea
js
mov
cmp
cmp
mov
push
imul
sub
cmp
insl
dec
jmp
andl
pop
loopne
mov
inc
add
cmpb
cs
subl
xchg
std
and
sub
adc
cmp
sbb
shl
arpl
adc
cmp
xchg
push
mov
cwtl
add
lret
mov
xchg
mov
and
aad
sub
jns
adc
pop
aad
sbb
pop
mov
mov
addl
push
sbb
lock
jnp
jnp
out
cwtl
pop
das
in
daa
add
adc
in
roll
mov
insb
push
std
mov
in
mov
xor
lods
mov
or
lea
loop
cmp
dec
fisubl
dec
pop
adcb
pop
in
sub
mov
sar
or
dec
test
xor
shl
sub
adc
adc
xchg
adc
lds
shll
pop
les
lods
leave
loop
xchg
or
jno
adc
mov
jne
ret
aas
and
sti
dec
ja
sub
sub
sub
sub
add
das
adc
je
stos
jns
dec
ja
push
jge
push
or
add
add
sbb
sahf
add
ret
pop
jnp
ds
xor
cmp
adc
lcall
push
cmp
mov
push
inc
adc
add
int3
mov
ja
mov
inc
ret
dec
lock
xchg
lock
lock
call
mov
rorl
jecxz
lods
stos
inc
adc
inc
xor
stos
cmp
sub
inc
ret
or
adc
and
dec
pop
add
frstor
and
mov
mov
ljmp
std
and
movsl
test
jl
and
or
cld
leave
outsb
mov
dec
je
sub
and
sub
mov
testb
in
addl
fistpl
in
fwait
mov
into
adc
shll
or
push
adc
or
cs
sub
xchg
pop
mov
pop
aas
in
imul
adc
push
insl
inc
or
dec
or
or
sbb
sbb
dec
punpcklbw
cmp
jge
and
jo
nop
sbb
or
or
jne
push
icebp
mov
mov
cmp
cs
push
or
xchg
fldt
push
pop
fsubl
or
add
je
push
test
xchg
sar
and
push
inc
dec
adc
or
push
insl
pusha
sub
pop
call
push
pop
mov
loopnew
push
les
push
sub
lock
push
fsubs
pop
daa
push
repnz
pop
shr
ret
sub
sarb
out
pop
dec
xor
add
mov
dec
imul
push
dec
cltd
movl
pop
and
inc
add
adc
in
add
add
add
adc
sub
ds
das
mov
enter
in
in
dec
xor
or
fdivrl
in
add
xchg
jge
mov
les
lods
dec
out
dec
sbb
mov
sahf
push
add
fcoml
nop
cmpsl
ret
sub
in
push
xor
fmuls
mov
xchg
push
test
mov
fsubrs
or
ljmp
push
pusha
adc
dec
or
ret
mov
cmpsl
sub
iret
mov
add
mov
xchg
aas
jl
sbb
dec
aam
push
orb
push
es
xchg
or
mov
xchg
rcrl
sub
add
outsb
lcall
mov
and
orb
jmp
cltd
decb
xchg
ss
inc
mov
mov
sbb
or
adc
xchg
mov
scas
push
cmp
rorl
test
movsl
push
adc
xor
mov
mov
dec
xor
or
cs
adc
mov
mov
test
dec
sub
or
out
inc
nop
jne
mov
jmp
push
xor
or
out
aaa
inc
ret
jge
mov
jae
ds
fcompl
sub
in
pop
hlt
or
lahf
dec
jl
sbb
stos
sub
mov
sbb
and
push
jb
imull
jb
test
outsl
loopne
leave
sub
je
mov
xor
mov
and
jb
cmp
adc
or
or
pop
dec
inc
rorl
or
mov
notl
ja
scas
sub
mov
pop
loope
mov
xchg
dec
push
and
sub
mov
push
dec
push
sbb
adc
add
sbb
xchg
push
xchg
cmpsl
xor
repnz
or
inc
jb
fld
ja
mov
mov
and
mov
popf
and
jg
dec
sub
and
mov
cwtl
ret
arpl
int3
test
andl
cmp
in
jle
push
inc
mov
js
jno
ficomps
pop
push
inc
leave
fcomps
je
rcl
add
pop
mov
add
lahf
adc
pushf
imull
push
push
xchg
push
sub
lds
mov
push
inc
pop
jae
data16
xor
aaa
prefetcht2
xchg
in
mov
inc
xor
xor
orl
pop
push
push
mov
test
mov
add
dec
xor
pop
loop
fisubl
sbb
mov
js
mov
jne
mov
sarb
push
call
sbb
je
and
sbb
jp
jle
push
jb
or
pop
adc
mov
adc
or
inc
and
add
or
xor
sub
frstor
xchg
adc
out
adc
test
lock
enter
and
sub
or
cwtl
stos
cmp
bound
adc
jne
add
adc
mov
lock
jge
mov
aam
cmp
outsb
sbb
pop
hlt
and
sub
xchg
fiaddl
cmp
or
jne
xor
mov
mov
add
sbb
les
fimuls
test
sub
add
push
xor
ss
pusha
sub
lahf
add
pop
dec
enter
jne
and
and
xor
adc
mov
xchg
or
add
aam
fbld
jne
push
mov
movsb
in
out
pop
test
push
adc
andl
js
je
fcmovnu
pushf
les
dec
out
inc
mull
arpl
sti
or
inc
loope
sarb
sbb
xchg
and
ret
sarl
push
sbb
out
push
loopne
jmp
std
and
adc
mov
jmp
cmpsb
inc
or
cmp
add
sbb
xchg
mov
adc
pop
clc
and
cmp
jb
xor
mov
clc
inc
cmp
cmc
add
insb
mov
dec
add
cld
rorl
cmpsl
inc
adc
push
mov
pop
adc
fsubs
xor
ja
jno
pop
mov
into
jle
jecxz
aam
sub
jb
mov
add
dec
repz
jbe
fistl
pop
mov
sbb
lcall
mov
aam
adc
and
inc
loopne
xchg
and
xchg
cmp
in
add
adc
sub
adc
fmull
xor
clc
sbb
push
fs
mov
outsl
xor
cmp
pop
dec
out
adc
or
push
or
adc
inc
and
mov
cld
sbb
in
or
cmovno
cltd
sub
lods
fbld
fsubrs
arpl
cld
xchg
pop
mov
pop
mov
int
in
jne
leave
outsb
addr16
cmp
mov
repz
lock
arpl
loope
lock
dec
cmpsl
arpl
jmp
arpl
rcr
fadds
in
and
cmp
sbb
jge
in
sbb
cmp
icebp
xchg
pop
add
outsb
dec
out
test
test
and
or
les
jle
imul
daa
subb
mov
sahf
cmpsb
push
lret
cmp
cli
loopne
je
rclb
push
mov
popf
push
sbb
dec
dec
jo
and
sbb
cmp
or
sti
xor
sub
cli
ret
mov
dec
loop
mov
dec
dec
push
push
dec
mov
pop
je
test
cmp
in
cmp
stos
stos
mov
mov
retw
sti
mov
fsubs
shrl
xchg
inc
cld
push
mov
sbb
arpl
push
sbbb
addr16
dec
sbb
adc
call
add
lods
out
adc
rcrb
inc
sub
push
mov
sti
xor
mov
jbe
cmpb
dec
je
sub
push
add
test
pop
mov
dec
add
dec
jp
cld
push
mov
and
fwait
push
outsb
lods
adc
push
cld
cmp
or
popf
std
aas
nop
add
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
and
and
push
mov
sbb
inc
cs
adc
pop
xor
stos
pop
int
dec
or
sahf
out
mov
je
adc
cmp
es
push
push
nop
xchg
cmpsl
sbb
addr16
dec
sbb
cld
and
arpl
mov
jmp
jne
sub
and
es
push
sahf
pop
sub
push
sub
sbb
testb
dec
add
pop
push
xor
scas
adc
loopne
push
cmp
xor
cmp
cmp
pop
imul
cmp
jns
jo
inc
scas
shll
mov
jne
inc
out
jns
dec
shl
jne
dec
mov
dec
add
daa
lods
cmp
cmp
inc
push
je
orb
outsl
test
ds
dec
dec
jmp
insl
test
add
in
adc
push
push
inc
and
xor
cmp
addr16
mov
pop
add
cmp
repz
dec
pop
jmp
es
sahf
out
sahf
cs
les
popa
dec
sub
jne
push
inc
inc
mov
test
add
add
mov
and
pop
adc
dec
or
into
mov
mov
repz
push
ret
aad
or
pop
push
sub
imul
and
add
inc
sub
or
fsubl
push
xor
xlat
nop
rclb
movsl
push
movsl
jb
sbb
andl
gs
push
loope
or
iret
push
test
out
int3
popl
jmp
sub
inc
and
sbb
dec
fcoml
in
or
and
adc
je
cltd
fsubl
iret
js
inc
in
pop
push
ret
data16
sbbb
inc
in
mov
xchg
call
mov
loope
cmpsl
mov
mov
add
aam
sbb
or
xchg
xchg
xor
imul
jp
loop
pop
dec
loopne
loopne
push
xchg
inc
pusha
add
cmpl
inc
xchg
rcrl
jb
xor
mov
jne
cmc
add
mov
icebp
and
popf
std
lcall
lds
sbb
popf
add
sub
push
cmp
pop
adc
add
add
int3
pop
inc
cmp
jp
out
pop
ds
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
je
and
shll
bound
push
imul
sbb
inc
ret
mov
add
add
inc
cmpsb
imul
push
or
sub
jecxz
add
mov
push
shl
in
inc
pop
or
repz
or
xchg
loopne
popf
mov
or
je
repnz
mov
inc
leave
xchg
cld
jno
push
push
mov
jge
cmp
js
add
cmpsb
jbe
push
lahf
pusha
int
and
xor
jge
cltd
inc
pushf
mov
scas
push
or
notl
stc
add
pop
ret
pop
cwtl
pop
cmp
jne
sbb
int
outsb
push
add
je
or
xchg
pop
cmp
pop
ljmp
xchg
adc
addl
push
lahf
cld
xlat
push
dec
adc
stos
stc
or
push
lods
jle
inc
xor
stos
sbbb
orl
jge
add
shlb
pop
push
mov
xchg
xchg
add
call
mov
or
jmp
jo
or
add
fsubr
in
or
sub
loop
xchg
ret
mov
dec
push
mov
jo
ja
xchg
adc
sbb
sbb
jl
dec
sbb
out
inc
push
jmp
push
fisubrl
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
sub
cmpsl
and
mov
sub
cmp
das
jo
jmp
jg
aam
data16
inc
xchg
imul
loop
push
in
xchg
fmull
sbb
lds
and
pop
je
dec
push
push
cmpsl
cmc
int
ja
ss
fisubs
mov
xor
icebp
mov
and
in
cwtl
dec
cmpsb
adc
pop
push
push
sub
sbb
subl
jns
jnp
or
stos
add
push
xor
andb
das
icebp
cmp
mov
push
jb
or
in
mov
cld
lcall
out
shll
push
leave
push
xor
pusha
sbb
add
cmpb
imul
imul
addr16
bound
and
mov
pusha
mov
inc
add
add
adc
sarl
sub
leave
cld
xor
push
xor
push
sbb
nop
and
out
xchg
push
push
cmpsl
test
test
push
rclb
out
push
dec
stc
add
pusha
xchg
fstps
sub
adc
jnp
lea
add
mov
cmp
push
loope
mov
cmp
push
pop
pop
jmp
or
xchg
push
adc
outsb
push
or
pop
iret
test
xchg
or
loopne
ret
icebp
push
lea
xchg
xor
cmpsl
add
xor
push
sub
xchg
and
cmp
fistpl
test
fs
enter
sub
int3
or
repz
adcl
test
mov
mov
std
xchg
add
lret
ja
push
pop
push
add
inc
enter
push
mov
add
int
xchg
ja
jge
jl
cs
add
or
insb
fdivs
andl
and
fs
mov
ja
mov
daa
scas
les
jnp
shrb
jne
stos
into
and
ja
or
loope
je
scas
jbe
sbb
pop
aaa
loopne
xor
scas
xchg
jno
push
lahf
mov
sbb
and
jp
into
repnz
xlat
add
pusha
xchg
jl
jle
jbe
jg
dec
mov
sub
je
ret
dec
sub
imul
push
filds
rol
push
push
mov
add
fwait
int3
ss
pop
jb
push
loope
mov
add
dec
inc
or
popf
orb
fistpl
out
jo
sub
shll
push
lea
mov
pop
sarb
push
sbb
push
sbb
fwait
adc
add
mov
mov
xor
imul
xor
or
cmp
adc
mov
sbb
cmp
dec
or
lret
ss
rclb
xor
in
sti
jp
aad
xchg
arpl
stos
adc
add
fnsave
dec
stos
rcrb
lods
mov
jo
add
cld
leave
jae
mov
cmpsl
adc
or
sub
or
lods
punpckldq
xlat
cmc
sub
push
clc
scas
adc
and
inc
adc
xchg
mov
jo
movsl
jne
fcomi
pop
adc
push
mov
mov
pushf
mov
add
and
cmpsl
inc
std
je
add
jo
push
faddl
test
add
sub
or
adc
sub
adc
and
push
adc
sbb
add
sahf
pusha
push
decl
ss
fsubrs
sub
ret
dec
inc
xchg
or
sbb
cmp
jae
sbb
add
test
or
add
cmpb
jb
sub
add
dec
dec
sub
push
xor
push
mov
push
call
hlt
xor
in
sbb
sbb
push
out
je
mov
push
je
adc
push
pushf
cmp
lea
push
push
pop
mov
adc
or
push
mov
push
mov
and
and
dec
enter
dec
xchg
pop
ret
ret
dec
cmovg
jmp
lea
pop
sub
test
adc
mov
push
lcall
cmpsl
lods
shl
hlt
jl
push
clc
rcl
subl
std
ljmp
cld
mov
outsl
push
fsubr
data16
sub
pop
rorl
xchg
inc
pop
add
fdivl
scas
pop
inc
and
jbe
sub
lea
aam
adc
push
std
mov
fisttpl
push
cmp
pop
and
movsl
mov
dec
push
pop
leave
outsl
sarl
sub
and
inc
gs
jmp
stc
or
popf
add
inc
sbb
cmp
fimull
or
pop
sub
sbb
jnp
add
jns
cmp
rolb
sbb
adc
push
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
push
cltd
pop
mov
ret
push
aas
clc
push
cld
fists
fldl
shr
not
sbb
dec
dec
shlb
push
mov
gs
imul
out
fmuls
jbe
push
es
xor
push
es
inc
lock
lret
xor
add
add
xor
repnz
cld
je
or
inc
sub
rcrl
ss
cmp
cmpsl
jns
xor
inc
pusha
fnstcw
cmpsl
dec
test
arpl
add
adcb
cmp
inc
loopne
out
movl
movl
pop
or
xchg
inc
xchg
jae
mov
fcos
inc
mov
jns
dec
push
adcb
insb
jno
jne
out
or
icebp
xor
push
dec
sbb
lret
and
pushf
push
pop
sbb
mov
in
movsl
push
cmp
dec
sub
push
add
movl
jb
and
popf
mov
cwtl
fstpt
inc
push
pop
xor
inc
dec
jne
jmp
inc
outsb
adc
fildl
icebp
push
addb
sbb
dec
call
add
roll
sbb
es
mov
call
outsl
arpl
and
bound
js
push
rcrb
inc
rcrl
out
es
and
jl
cmp
lahf
mov
lcall
or
inc
call
movb
and
mov
idivb
dec
sub
inc
cmp
adcb
sbb
pop
sub
mov
ljmp
je
pop
cmp
fbld
popf
sub
mov
out
cmp
orl
and
mov
faddl
cmpsl
lods
mov
or
sbb
jmp
adc
pushl
sub
and
ret
enter
sbb
xorl
add
mov
adc
pop
cwtl
jg
mov
imul
fistps
cmpsb
xlat
push
and
push
mov
pop
dec
pop
and
adc
clc
inc
mov
inc
fisubrs
sbbb
mov
and
or
xchg
rcrb
cmp
add
mov
mov
ret
adc
adc
data16
cmp
icebp
mov
xor
and
and
or
sub
lock
xor
push
add
dec
or
shlb
push
iret
call
fcmovnu
das
xor
sbb
int3
jae
pop
jg
sbb
mov
push
push
push
popl
test
dec
and
call
and
je
push
add
mov
test
mov
push
data16
pop
push
data16
lock
inc
mov
mov
bound
add
addb
clc
and
dec
add
jl
cmp
dec
repz
push
push
popa
sub
aam
mov
dec
sti
in
adc
mov
bound
inc
adc
gs
add
ja
add
cmp
inc
or
rolb
adcb
cmp
xor
cmp
loopne
lret
loopne
mov
mov
push
pusha
push
bound
adc
push
loope
inc
adc
add
sub
push
inc
inc
andb
test
push
inc
xor
in
out
xchg
or
jle
movups
ret
xchg
lock
ss
lea
add
js
jp
clc
and
js
add
adc
cmpb
call
test
add
das
in
xor
pusha
cmp
mov
sbb
cli
jle
cmpsb
nop
mov
pop
and
or
or
push
inc
dec
dec
loope
xchg
movsb
dec
add
test
cmp
mov
adc
sbb
sti
xorb
add
xor
test
add
xor
jl
sbb
push
hlt
sub
sar
push
faddp
lds
jb
ret
cmp
mov
dec
mov
adc
mov
ret
sub
jecxz
cwtl
or
and
push
and
xchg
push
jb
sbb
lods
xlat
xchg
add
mov
pop
outsl
mov
inc
or
ret
push
lret
shrb
add
mov
sub
mov
cmp
push
out
inc
andl
insl
cmp
and
cli
je,pn
pusha
inc
pop
ret
adc
ret
shr
mov
shlb
lods
ss
nopl
jl
inc
mov
std
pusha
js
jge
notb
je
mov
std
mov
push
jo
insl
push
jl
jno
sbb
push
cmp
ret
mov
jle
push
loopne
add
jbe
pop
add
mov
ja
insl
jne
pushf
sbb
and
jmp
xor
inc
inc
popf
inc
pop
adcl
add
sub
popl
orb
mov
sbb
dec
add
jne
sub
cltd
dec
add
outsb
sar
and
pop
xor
pop
cmp
fnstcw
jae
jb
jae
ror
jns
and
push
mov
sub
nop
mov
jg
adc
pop
push
nop
je
in
in
adc
add
mov
addb
adcl
jmp
cwtl
dec
jl
inc
inc
push
inc
movsb
push
call
loop
inc
mov
pop
add
cmp
adc
jo
xor
dec
mov
xor
xor
xorb
ljmp
add
enter
mov
inc
push
and
in
testl
xor
mov
insb
and
and
in
nop
scas
rclb
sbb
daa
or
cmp
add
andb
pusha
xchg
dec
or
and
fnsetpm(287
nop
fldenv
adc
imul
adc
adc
push
or
or
add
enter
sbb
cmp
insl
and
imul
jb
insb
cmp
xor
ret
andl
or
or
xor
icebp
dec
lds
adc
xchg
cmpsl
jne
shlb
cmp
sub
je
and
call
dec
pop
mov
js
add
in
and
add
adc
imul
inc
inc
and
or
mov
adc
inc
loope
xor
push
dec
inc
and
sbb
inc
ja
aas
and
xor
cld
dec
pop
xor
aam
fs
jg
or
xchg
or
es
xchg
or
xchg
sub
xchg
or
daa
cwtl
sub
xchg
or
sub
push
in
sub
ja
dec
dec
idiv
aas
das
jmp
cmp
xor
test
fstpt
xor
push
push
test
imul
cmp
cmp
cmp
mov
arpl
mov
leave
add
cmp
dec
fcoms
pop
pusha
adc
mov
pop
add
push
pop
pop
mov
sbb
adc
rolb
sbb
inc
call
test
push
fisubrs
mov
nopl
test
loopne
adc
xchg
jne
and
repz
mov
adcl
jge
fists
in
ja
xchg
or
dec
loopne
sub
sti
fisubs
pop
loop
mov
pop
mov
push
jae
out
fimuls
out
in
imulb
shl
fimuls
enter
cmpsl
mov
rclb
out
jns
aam
push
mov
jo
sbb
clc
push
in
jo
rorl
leave
push
and
jo
pop
scas
jns
xchg
incb
mov
or
mov
cmp
fcoms
pusha
fidivrl
pushf
adc
push
or
inc
mov
adc
inc
or
xchg
push
pop
push
sbb
jb
jg
or
fwait
push
mov
pop
push
bound
dec
and
stc
pop
out
add
sub
test
pop
lock
push
sub
or
dec
add
inc
and
js
mov
push
cmp
jne
adc
mov
cmp
xchg
in
fs
ret
add
rclb
push
push
ret
or
mov
js
and
lock
jno
or
movsb
push
pusha
push
test
push
mov
push
cmp
jbe
out
mov
sub
push
xchg
mov
out
or
jo
add
push
add
xchg
adc
addl
js
pop
jbe
or
jne
adc
jmp
popf
in
out
cmp
sbb
mov
jmp
fstp
fstl
pop
lods
jmp
dec
xchg
jmp
cltd
std
popf
in
lds
cmp
jmp
pop
or
and
or
add
adc
sbb
dec
lea
jne
nop
lock
jnp
xchg
dec
mov
xor
ret
jge
add
and
insl
fsubl
xchg
test
jne
loope
jmp
add
sti
hlt
push
push
pop
and
je
push
and
or
orl
movsl
push
inc
jmp
or
cmpsl
push
jp
mov
adc
add
add
mov
push
lock
cld
sub
rclb
pop
dec
nop
push
sbb
xor
add
test
rorb
fmul
or
push
lcall
mov
js
pusha
rclb
or
adc
ss
stos
popf
cmp
shl
adc
push
dec
cli
popf
call
or
les
cli
lcall
xor
call
mov
sub
jmp
test
jae
sbb
jmp
test
pop
cli
aam
and
lret
jo
jo
mov
jnp
dec
lcall
adc
xorb
xchg
dec
xchg
jae
mov
rorl
fdivr
aam
add
or
popa
mov
mov
xchg
sub
stc
ljmp
jge
pop
sub
dec
dec
loop
stos
ds
inc
cwtl
or
cmp
es
xor
push
test
sub
jl
mov
adc
lods
cltd
nop
sbb
rcrb
jbe
jmp
lahf
ja
adcb
sub
push
mov
inc
mov
adc
pop
mov
cwtl
iret
popf
jnp
leave
cmp
mov
scas
or
adc
imul
pusha
rcrb
inc
and
inc
and
push
push
lods
dec
add
adc
xor
sbb
xchg
pop
faddl
dec
aaa
rorb
in
mov
in
xchg
sbbb
and
shrb
popf
fwait
aam
add
push
cwtl
jge
lods
push
movsl
loop
call
imul
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
xorl
sbb
inc
inc
fnstsw
and
es
rclb
adc
push
sbb
sub
jle
cs
and
mov
mov
mov
leave
cmpsl
popa
and
adc
push
lock
fildll
cmpsl
and
push
sbb
iret
ret
cmp
fstp
pusha
leave
jns
dec
testl
hlt
mov
pop
pushl
mov
xchg
imul
nop
add
ljmp
or
ss
push
pop
movsb
rol
int
loopne
imul
and
mov
mov
push
lret
add
into
xchg
cmp
xchg
aam
push
xchg
out
lds
add
imul
jl
push
push
xchg
push
pop
adc
ds
and
andl
sub
inc
push
xchg
cmp
mov
fmul
sub
push
sub
es
or
mov
inc
fmull
jo
mov
or
enter
rorb
lea
adc
xor
add
aam
shrb
negl
stos
or
pusha
push
sbb
pop
andl
stc
or
mov
es
push
add
ficoms
pushf
lea
sbb
jno
xor
mov
xchg
aas
sti
movsl
loopne
mov
pushf
and
aaa
mov
js
adc
or
jbe
xchg
sub
mov
cmp
jbe
adc
mov
or
mov
mov
fstps
sub
push
int3
addb
ret
sbb
enter
add
outsl
mov
hlt
and
xchg
jp
adc
adc
xchg
pusha
xor
cmp
sub
arpl
dec
cmp
and
das
or
sahf
mov
shlb
or
inc
or
cld
jne
lret
xor
jecxz
rorl
or
lahf
push
xor
add
or
push
lods
pop
adcl
mov
sbb
loope
stos
shll
or
call
sbb
xorb
repz
mov
push
sahf
push
adc
adc
pusha
mov
xchg
enter
lods
push
cmpsl
enter
ret
sbb
push
adc
jnp
shlb
test
or
ret
fcmovnu
jo
orb
push
or
xor
mov
and
aam
cmp
and
dec
add
or
popa
sbb
jp
adc
dec
ficoml
int
rclb
push
push
mov
js
inc
inc
push
cltd
inc
add
xchg
insb
and
lret
daa
push
xchg
xor
mov
add
add
add
and
sbb
repnz
fs
jle
cmp
mov
dec
jnp
inc
es
mov
push
dec
test
add
inc
cwtl
cwtl
pusha
test
cli
mov
stos
iret
add
push
pop
inc
and
popa
lret
ret
mov
sbb
negb
rcl
mov
jns
adcl
xor
xchg
adc
add
xchg
cmp
sbb
dec
iret
push
adc
mov
mov
pop
push
fs
jp
imul
cltd
add
adc
fisttpll
fcomps
and
adc
dec
mov
push
xchg
lret
pop
or
call
mov
pop
pop
push
rol
sbb
inc
add
imul
push
nop
sbb
push
ljmp
or
ss
adc
inc
aaa
scas
xchg
ja
ds
cmp
and
pushf
lods
inc
hlt
inc
or
test
push
dec
lret
jl
or
add
stos
enter
or
sbb
scas
add
rolb
jo
int3
adcb
pop
inc
or
jbe
inc
imul
push
xlat
push
mov
outsl
push
add
ds
in
pop
dec
clc
je
adc
je
sub
push
movsb
jo
push
cmp
jmp
push
and
jnp
test
jl
and
imul
dec
mov
mov
insb
push
sbb
jno
loopne
inc
and
icebp
movsl
mov
pop
add
das
fdivrl
push
mov
and
imul
jge
mov
sbbb
xchg
and
sub
movsb
lods
nop
hlt
enter
pop
lret
addr16
mov
jo
or
inc
in
xchg
fiaddl
movsb
xor
mov
or
movsb
cwtl
fisttpll
loope
add
mov
mov
call
jge
mov
push
js
cmp
add
xchg
mov
subb
mov
bound
fs
xor
jmp
and
mov
push
pop
fbstp
jl
mov
cwtl
sbb
das
cmc
mov
dec
add
sbbl
mov
loope
sbb
ret
cmp
and
mov
or
and
push
ja
pusha
std
sbb
call
mov
pushf
xorb
lcall
dec
adc
add
add
inc
lahf
sub
arpl
pusha
aaa
arpl
inc
dec
std
push
cmp
in
cmp
call
sub
or
mov
shrl
imul
mov
add
dec
les
fcmovnb
cmp
es
add
push
pop
cmpsb
mov
fsubrl
push
jns
inc
ret
outsl
xlat
push
push
repz
adc
pop
pushf
pop
inc
je
rcrl
push
xchg
ret
push
or
jmp
dec
cmpsl
test
jae
je
sbbb
bound
lock
movsl
insb
xlat
push
icebp
filds
lods
pusha
sbb
xlat
and
add
cmpsl
cmp
mov
sbb
out
roll
push
add
xchg
sbb
jo
incb
dec
icebp
or
arpl
pushf
rol
pop
loope
cmpsl
jmp
daa
aas
in
adc
or
shll
mov
lds
fnsave
pop
mov
cmp
inc
push
ja
mov
stc
dec
rcrl
and
lea
or
inc
mov
dec
mov
cwtl
pop
inc
inc
inc
je
mov
mov
cmp
lock
stos
dec
cmp
test
mov
pop
sub
xor
gs
mov
mov
add
or
add
mov
repz
shlb
rcrl
xchg
push
add
xchg
fsubr
and
imul
pop
and
and
jnp
pop
add
es
push
jo
mov
fwait
mov
or
mov
sar
pop
adc
lret
inc
push
subb
or
test
outsl
orl
adc
mov
sbb
rorl
das
push
loopne
call
sbb
rcrl
mov
push
xorl
hlt
jae
or
test
push
mov
sbb
push
js
enter
adc
loop
mov
test
decb
pop
xchg
sub
pop
jl
add
repnz
outsb
lock
cmp
pushf
and
xor
jp
mov
sbb
mov
cmpsl
adc
cs
popf
pop
fwait
mov
or
in
mov
inc
xor
cmp
fs
hlt
into
cmp
hlt
mov
lods
pop
cmp
sub
pop
push
xor
mov
pop
cmp
popa
std
dec
loop
sub
sbb
ljmp
test
xchg
ds
jmp
add
mov
add
sbb
ret
jg
aad
mov
outsb
adc
mov
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
or
outsb
stos
add
mov
lock
bound
pop
jge
les
sbb
notb
jb
lcall
je
push
cmpsb
dec
cmp
xor
scas
roll
jp
sbb
xor
out
pop
adc
inc
inc
jmp
inc
jo
add
addr16
and
andb
jne
js
test
adc
lock
add
or
and
and
popfw
ret
sub
push
ds
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
mov
mov
mov
int3
xchg
lock
ret
add
ret
mov
mov
or
gs
lret
bound
inc
ljmp
dec
push
dec
rcll
xchg
mov
out
dec
call
cmp
dec
jbe
push
out
dec
sbb
pop
adc
push
mov
es
mov
enter
jmp
push
stc
cmp
xor
in
mov
mov
lods
sub
in
adcb
mov
xchg
mov
jns
pop
sbb
sbb
mov
mov
sub
mov
enter
sub
jmp
cmp
inc
in
pop
mov
mov
sbb
jecxz
adcb
and
jl
adc
or
pop
loopne
push
les
iret
push
fs
andl
push
repnz
sbb
cmp
mov
jnp
jno
test
jne
jmp
data16
loop
pop
int
testl
fiaddl
ret
adcl
xor
push
xchg
xchg
loopne
ljmp
push
pop
mov
jno
push
push
inc
pop
test
nop
cltd
xchg
das
lock
iret
cmp
mov
sub
pop
jo
jg
pop
movl
xor
lcall
and
shlb
cwtl
pushl
icebp
test
in
rcl
adc
jnp
fldcw
jno
shlb
daa
inc
add
fsubs
jae
jo
adcb
jl
pushf
ficoml
aaa
mov
jle
cli
insb
mov
test
jo
insb
call
jnp
xor
inc
repz
jo
daa
frstor
inc
fwait
mov
outsb
in
push
cmpl
jo
sti
cmp
add
dec
add
lods
cmpsl
fldt
push
push
loopne
outsb
adc
pop
cmp
xchg
push
or
lret
xchg
pop
hlt
push
iret
cmp
inc
test
inc
arpl
mov
test
or
jbe
je
bound
or
inc
addr16
pop
jle
dec
push
xor
xor
enter
test
gs
xchg
std
dec
pop
cmp
bound
and
sub
int
mov
or
and
mov
inc
push
stos
push
add
ret
gs
aaa
mov
sbb
mov
lret
pusha
xor
cltd
lret
inc
or
cmp
sbb
jp
push
es
xchg
add
inc
sbb
test
add
mov
push
call
mov
jbe
xor
inc
add
cmp
adc
xchg
add
cmp
sbb
push
test
test
dec
mov
lods
cmp
in
sahf
or
inc
cmp
nop
lock
mov
fistl
add
divb
mov
and
shr
xchg
lock
inc
adc
mov
mov
aad
or
test
sub
fmuls
cmp
add
pop
pushl
add
jmp
add
insb
cmp
dec
out
adc
and
aaa
arpl
mov
loopne
inc
inc
movsb
adc
mov
sbb
enter
icebp
outsl
xchg
or
movsl
push
push
das
push
dec
or
sbb
jl
mov
sub
fildl
jbe
test
push
sti
cmp
mov
add
test
and
and
jp
outsb
gs
push
add
pop
mov
mov
addr16
add
dec
mov
scas
test
jmp
rcl
xchg
addb
cmc
add
xchg
fs
mov
jb
cmp
sub
or
cmp
sub
inc
sarl
sbbl
addl
enter
cmp
jg
xor
mov
stos
add
int3
arpl
inc
outsl
xor
jp
iret
data16
je
fs
adc
mov
sub
xor
adc
sbb
ret
into
add
add
rcll
sub
ja
or
pcmpeqw
lcall
or
lea
inc
je
mov
push
jge
push
push
inc
cmp
sub
scas
cmpb
or
cmp
xor
je
cwtl
adc
dec
jge
pop
add
jbe
sbb
in
mov
int3
movl
mov
xor
loopne,pt
sub
ffree
popf
adc
call
mov
repz
dec
aaa
add
mov
lcall
pop
scas
das
stc
dec
loopne
clc
xchg
lret
push
add
push
data16
fnsave
call
or
std
mov
insl
add
addb
xor
sub
sbbl
or
sti
aam
xor
inc
stos
push
cmc
sub
sub
mov
outsb
inc
jne
sbb
das
push
ljmp
loop
push
mov
or
dec
push
push
xorl
jo
minps
test
or
dec
xchg
mov
xor
lock
xor
adc
jmp
add
jo
les
pop
imul
mov
lret
lock
dec
movsl
adc
mov
or
repz
repnz
repz
pop
fcoms
sbb
les
xor
sbb
inc
xor
push
xchg
test
mov
lret
mov
and
insb
pop
add
dec
repnz
rol
and
fmul
shr
movsb
mov
push
ficomps
add
mov
je
sti
movsl
mov
mov
xchg
das
aam
pop
cwtl
and
jl
jbe
adc
pop
and
js
cld
scas
xor
adc
repz
add
mov
loopne
movsb
adc
fdivl
addb
and
sbb
test
push
push
xor
repnz
hlt
lods
or
es
push
pop
jle
mov
shl
stos
mov
pop
data16
loope
add
mov
sbb
mov
or
cmp
pop
adc
fcmovb
cmpsl
and
inc
loopne
jbe
push
push
rcr
or
lock
test
mov
mov
push
jno
push
call
inc
jle
cmpl
lret
loop
dec
jae
jp
or
sub
or
repz
inc
cmpsl
inc
xchg
jle
add
add
xchg
aad
pop
mov
into
idivb
outsl
adc
cmp
fisttps
or
inc
add
jge
cmp
outsl
fmul
pop
mov
push
add
enter
decl
int
push
push
ret
ljmp
push
inc
jle
lcall
mov
push
add
cmp
dec
nop
mov
add
or
pop
dec
divb
or
mov
xor
cwtl
sub
pushf
add
and
enter
stc
mov
push
sub
xchg
stos
add
nop
lods
jns
cmpsl
cmp
test
mov
mov
mov
in
sahf
les
rorl
sub
inc
faddl
mul
or
or
cmp
or
notb
cmp
pop
or
dec
inc
push
jp
mov
sarl
mov
add
mov
sbb
jbe
loopne
icebp
movsb
orb
aam
sbb
mov
test
or
add
aaa
sti
loop
out
push
inc
sahf
cwtl
addl
movsb
fldl
mov
xchg
jl
andb
xchg
outsb
loopne
or
cs
js
mov
mov
pop
movsl
lret
add
inc
add
add
push
sbb
push
adc
cmc
pushf
jmp
and
inc
fwait
xor
dec
jne
inc
sub
lcall
les
mov
dec
hlt
pop
lea
insb
je
sbb
jg
jmp
and
push
mov
repz
gs
in
mov
shll
or
xlat
subl
jmp
xor
pushf
ja
xor
ja
sub
xchg
xor
loopne
lret
orb
jmp
xor
push
or
test
inc
add
dec
fstps
jecxz
xchg
pop
xchg
mov
scas
adc
popa
js
jbe
adc
orb
lods
inc
push
xchg
or
outsb
je
aaa
movsb
jbe
mov
pop
clc
das
js
lods
into
lcall
adc
dec
out
adc
or
js
cs
pop
jg
cld
or
cmp
inc
shlb
rcll
and
mov
or
add
xor
rol
add
in
loope
dec
inc
icebp
add
out
clc
loopne
jmp
loopne
pop
inc
enter
push
push
bound
lock
mov
dec
inc
imul
adc
cmp
cs
push
les
add
out
inc
mov
movsl
outsl
xor
ljmp
data16
les
sbb
adc
cmp
push
sbb
jno
mov
dec
push
rep
adc
pop
lahf
xchg
imul
xchg
dec
loop
movsl
and
outsb
lahf
xorl
les
or
sbb
pushf
subb
mov
and
mov
shrl
push
imul
jecxz
push
xchg
daa
mov
andb
inc
ret
inc
xchg
mov
push
xchg
mov
mov
fisttpll
add
mov
push
push
or
inc
bound
xor
sahf
adc
scas
or
lret
add
je
cltd
pop
add
sbb
mov
stos
fmuls
idivl
add
leave
xor
sub
cmpl
fsubl
mov
push
pop
dec
xor
dec
cli
mov
mov
orl
inc
jnp
adc
dec
pop
jle
inc
ljmp
popa
insb
testl
sarb
call
das
add
cmp
pop
xchg
push
aad
jae
adc
out
stc
inc
sbb
test
fmuls
add
adc
and
nop
sbb
pop
dec
in
inc
cmp
mov
sbb
jp
jmp
popa
mov
dec
lods
sub
xlat
gs
jl
xor
lock
rol
xor
fnstsw
call
movsl
push
push
movsl
fistpll
inc
hlt
fstl
mov
lock
fnstsw
mov
in
fldl
pop
fsubr
pop
faddp
andl
sbb
jbe
orb
dec
adc
mov
cs
sub
sti
sbb
sarb
inc
js
pop
lret
cmp
pusha
pop
lcall
inc
sbb
jge
mov
cwtl
fdivrs
sub
adc
arpl
xor
out
sbb
loope
fstpt
dec
adc
in
sub
pop
push
or
or
xor
mov
add
into
push
cmpsl
cs
adc
mov
loope
cmp
cli
cmove
cli
xor
imul
push
mov
or
inc
cmp
dec
mov
int3
dec
ret
sbb
enter
outsb
push
or
xlat
mov
mov
out
scas
sbb
in
sub
mov
add
dec
or
mov
ljmp
dec
mov
cmp
jge
ret
push
fs
roll
dec
popa
popa
push
adc
int3
adc
jne
push
pop
shlb
cwtl
stos
jmp
test
and
dec
add
adc
or
in
fcoms
popf
adc
adc
inc
cwtl
adc
test
pop
add
aad
icebp
jne
push
push
adc
daa
adc
sub
leave
das
ds
mov
rorl
fldt
into
inc
add
xchg
add
dec
jns
mov
mov
adc
and
mov
sbb
shlb
mov
mov
lods
ss
jmp
das
aaa
mov
subl
stc
xchg
mov
inc
dec
cmp
pop
and
xor
inc
add
jl
cmp
ret
ja
inc
lods
xchg
hlt
or
mov
in
adc
decl
inc
adc
scas
dec
lea
hlt
nop
dec
xor
popf
test
xor
adc
int
gs
push
jle
das
inc
jl
dec
stos
js
inc
mov
xchg
popf
dec
ss
mov
jecxz
lock
and
pop
jle
or
rolb
mov
iret
outsl
add
addr16
in
arpl
jns
sbb
push
inc
cltd
mov
push
les
dec
add
pop
xor
cmpb
out
mov
ljmp
and
sbb
pop
outsl
xor
fcoms
jle
outsl
mov
push
pushf
push
push
lds
adc
dec
lods
nop
inc
dec
sbb
js
ja
imul
insb
add
nop
les
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
js
bound
lds
arpl
xorl
insb
ret
jmp
mov
roll
sub
call
sbb
pusha
arpl
inc
jp
adc
push
and
mov
sbb
mov
ret
cmp
push
push
xchg
sbb
or
lods
mov
lea
cmp
lods
mov
or
repz
shll
lock
or
lods
mov
div
loop
bound
repz
gs
add
push
hlt
dec
mov
data16
push
sub
movsl
test
mov
stos
dec
and
sbb
add
leave
add
mov
push
out
enter
dec
int
in
inc
adc
push
mov
movsb
rcl
arpl
add
mov
pop
xor
xor
sbb
inc
xchg
cmp
push
movsl
out
loopne
xor
sub
sbbl
xor
mov
xor
daa
add
dec
jb
je
and
jmp
in
inc
inc
subb
cmpsl
xchg
push
sarb
lods
bound
xor
jmp
jg
pop
mov
add
sbb
add
add
mov
push
enter
shlb
sub
inc
dec
add
sbb
rcll
outsl
and
scas
mov
pop
cmp
dec
insl
adc
leave
add
repz
bound
dec
lods
es
sbb
rolb
ljmp
dec
adc
mov
ds
xor
ds
ljmp
mov
adc
push
movsb
sbb
dec
dec
mov
nop
or
jns
clc
arpl
sub
addr16
cmp
sub
pop
or
and
and
fimull
js
xchg
test
lahf
ljmp
bound
test
pop
push
mov
jp
scas
test
xchg
call
idivl
hlt
insl
movb
and
mov
and
or
orl
pop
mov
mov
push
fucomip
inc
adc
int3
xorl
subb
ret
aas
sub
aam
push
imul
bound
enter
inc
cltd
pop
xlat
mov
xor
inc
xor
xor
mov
xor
cmp
test
test
mov
inc
and
jl
push
in
push
mov
add
dec
ds
popa
adc
inc
lret
xchg
cmp
add
xchg
ret
ret
call
fiadds
or
dec
mov
sub
add
dec
aam
push
inc
push
inc
ds
dec
bound
xchg
xor
add
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsl
dec
pop
pop
xor
aas
mov
gs
cmp
cmp
push
mov
cs
lock
inc
push
loopne
xchg
aas
nop
push
mov
clc
jne
and
lock
nop
or
clc
lret
ficoml
jmp
sbb
cmp
loop
inc
mov
roll
lret
xchg
setl
and
or
mov
jnp
add
inc
lret
movsl
das
pop
jmp
ss
es
leave
lock
shr
mov
xadd
fcoml
js
xchg
push
adc
push
mov
ffreep
ljmp
movsl
sbb
mov
push
lcall
inc
cmp
mov
fnstsw
dec
cmp
push
push
push
inc
clc
popa
sar
test
push
les
or
mov
cmp
ja
push
sbb
jbe
cmc
or
loopne
aaa
add
add
push
test
pop
icebp
jne
lcall
sbbl
add
nop
dec
enter
jmp
pop
repnz
or
adc
adc
pusha
and
add
pop
add
std
in
inc
dec
rcll
mov
stos
lock
cmp
pusha
jmp
xchg
or
sbb
xor
insb
jb
or
pop
clc
jl
test
xchg
cmpsb
and
sbb
imul
clc
subb
aam
leave
xor
jb
push
inc
dec
sahf
add
add
add
push
lret
xor
add
sahf
testl
sti
sbb
or
dec
pop
fcomps
xchg
dec
dec
aam
aaa
shlb
mov
jl,pt
inc
and
xor
movsl
or
mov
push
pop
jne
pop
xorb
lods
stc
inc
xor
inc
scas
ljmp
jp
ljmp
sub
stc
cmc
bound
fadds
add
jnp,pn
push
adc
xlat
jb
enter
or
jp
push
push
data16
idivl
push
rcrb
add
fldcw
inc
jp
add
push
cmc
xchg
dec
mov
dec
stc
sbb
cmpl
inc
roll
jns
or
push
sahf
in
add
mov
stc
pop
or
fmulp
shlb
je
in
push
test
jbe
shrb
les
inc
xchg
cmpsb
stc
in
in
loopne
mov
pop
add
add
inc
pop
js
pop
insl
mov
mov
push
add
jge
sti
add
add
jmp
inc
and
xchg
and
xchg
pop
pop
dec
cmpsl
out
scas
loopne
cs
call
sbb
rcr
rcrl
int3
sub
dec
daa
mov
fcoml
lret
andl
cmp
iret
fmuls
aas
pop
jmp
and
and
pop
mov
or
es
ljmp
mov
ret
pop
lahf
nop
lret
mov
pop
loopne
dec
je
andl
fcmovnb
call
xor
push
sbb
and
push
xchg
jmp
and
push
outsl
adc
xor
in
into
cmp
sahf
and
mov
daa
inc
pop
cltd
int
mov
pop
add
nop
roll
pusha
out
stos
xor
lret
inc
mov
rorb
xchg
test
xor
xor
sbb
sahf
push
mov
inc
dec
fistpll
movsl
and
rcl
fldt
jmp
adc
ljmpw
inc
inc
cmp
sbb
jo
and
mov
dec
aam
es
jno
push
mov
sub
xor
inc
nop
ja
pusha
sbb
xchg
jge
loop
jo
mov
data16
out
add
and
ss
or
pop
cli
cmc
lea
sti
das
push
scas
dec
pop
cmp
repz
sub
push
xor
filds
add
xchg
mov
add
out
jl
push
inc
inc
dec
push
cwtl
shrb
pop
pop
sbb
imul
xor
and
jb
sbb
jbe
and
sbb
inc
andl
push
xchg
fs
pop
lea
popf
add
roll
gs
xchg
push
popf
adc
inc
adc
pop
xchg
sub
pop
or
xor
inc
add
sub
push
jge
dec
lock
xchg
cmc
and
fwait
add
sbb
and
aas
xorb
lahf
mov
adc
jb
lock
rcrl
xchg
or
sarl
xor
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
fbld
add
dec
jb
sub
pop
and
add
sbb
into
adc
add
std
push
mov
push
test
inc
pop
mov
pop
pop
data16
xchg
xlat
push
rol
pop
cmp
inc
loope
jne
imul
jns
xchg
add
pop
arpl
mov
cmp
pop
and
fdivr
sar
add
or
push
inc
pop
adc
sbb
ss
or
and
test
mov
hlt
dec
mov
xorb
push
inc
mov
fnstenv
pop
pop
xor
mov
jbe
aam
ret
inc
mov
dec
lahf
add
adc
jo
fcomps
test
sbb
inc
sbb
js
iret
ds
add
jo
sbb
ret
adc
pop
sahf
cltd
insb
jbe
addb
lea
mov
pusha
inc
jmp
notb
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
fimuls
jne
pop
push
lcall
aaa
lock
dec
push
cmpb
sbb
punpckhdq
jl
shl
push
inc
sti
insb
push
pop
enterw
and
sahf
aam
jmp
out
mov
push
pop
je
push
mov
cmp
adc
add
and
pop
inc
cmp
or
popa
mov
mov
and
lahf
push
sarl
cltd
inc
and
addr16
or
jns
pop
sbb
repnz
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
mov
shll
stos
loopne
ret
sbb
push
jge
lret
mov
ljmp
pop
xor
loope
sub
pusha
add
sub
gs
sahf
mov
and
das
jecxz
cmp
ljmp
add
push
inc
lock
movb
sar
rcrl
pop
nop
js
rcrb
xor
inc
lods
pop
push
ss
jae
aam
mov
test
jmp
cld
adc
inc
clc
cmp
je
push
iret
loopne
inc
fs
stos
or
push
loope
dec
push
clc
mov
and
ret
test
lea
push
mov
adc
pop
xor
add
inc
dec
add
in
inc
loopne
push
das
orl
or
aas
mov
add
mov
adc
sarb
inc
sub
dec
sti
mov
or
iret
aas
push
enter
and
and
mov
aad
dec
pop
ss
sub
cmc
push
mov
jg
lret
mov
jg
fisttpl
mov
push
or
xor
insl
popa
lods
les
leave
insb
dec
sbb
cmp
lods
add
sbbl
inc
adc
ss
inc
jb
add
mov
xor
in
and
pop
adc
or
push
xor
push
cmp
das
popa
ret
mov
data16
push
mov
or
add
mov
lods
lea
adc
stos
movsl
imul
scas
or
test
aas
decb
call
fsts
push
pop
and
mov
cmpsl
aaa
and
mov
and
cwtl
sbb
mov
push
pop
inc
insb
sbbb
je
loope
add
repnz
mov
xchg
rolb
push
sub
aad
fistl
cmp
aad
pop
jne
push
jmp
cmp
ss
adcl
inc
xor
sbb
mov
lock
test
jbe
add
adc
sub
push
inc
in
imul
lock
rcrb
clc
push
dec
pusha
je
movsl
xchg
pop
lret
loopne
stos
mov
adc
mov
nop
push
push
das
cmpsb
rcr
les
fwait
movsl
mov
sbb
ljmp
rolb
cmpsl
and
pop
jge
lods
rolb
jp
mov
ljmp
mov
fimuls
decl
jns
int
aaa
fiaddl
or
or
pop
mov
mov
adc
dec
mov
shlb
jne
rorb
inc
cmp
test
pop
and
nop
pop
lea
xor
sub
dec
dec
push
or
inc
add
pop
adc
inc
sub
fdivl
sbb
sarb
fs
imul
jbe
mov
mov
dec
loopne
cmpsl
or
add
sbb
popa
xchg
test
insl
subb
dec
pop
das
popf
sti
sub
loop
ss
fsubp
dec
add
mov
adc
and
test
add
push
add
loope
and
mov
push
imul
mov
call
fstpt
fwait
xchg
mov
pop
mov
inc
mov
dec
push
push
dec
fisttpll
mov
mov
xor
inc
adc
jne
hlt
and
xor
adcb
mov
or
sub
add
jle
iret
jge
mov
and
xchg
mov
fwait
jb
arpl
dec
cmp
shrb
fisttps
inc
shrb
add
pop
add
pop
inc
shl
inc
pushf
sub
in
es
pop
xchg
jmp
sbb
je
jbe
ret
pop
call
ret
jno
gs
cmp
mov
pop
rcr
stc
data16
call
dec
or
xor
add
or
lods
imul
mov
mov
xchg
rcr
jmp
mov
cmp
mov
inc
jle
call
inc
les
and
adc
out
sub
dec
mov
pop
sub
sbb
dec
adc
or
and
add
and
adc
pop
mov
pop
ret
movsl
jg
cmpl
popf
shrb
add
mov
dec
pop
add
inc
mov
jl
movl
push
inc
or
in
popa
ret
cmpl
lahf
mov
mov
sbb
sub
or
fwait
jmp
sub
scas
ds
adc
sahf
cltd
clc
jnp
inc
pusha
sti
fcompl
pop
cmpsb
clc
lahf
mov
decb
adc
dec
hlt
jl
push
push
push
hlt
mov
and
add
loope
cmp
les
inc
scas
push
push
outsl
inc
pop
dec
loopne
inc
daa
ret
in
xor
hlt
stos
cli
lea
stos
or
mov
insl
xchg
inc
add
imul
mov
or
jmp
in
in
hlt
sbb
push
push
sub
popf
icebp
adc
gs
stc
imul
repnz
and
dec
add
stc
xchg
aam
xor
cmp
mov
jne
push
adc
push
test
jmp
insb
jb
sub
push
or
pusha
push
insb
je
sbb
push
sub
xchg
add
stos
sbb
mov
dec
add
or
fld
inc
and
push
xchg
orl
xor
dec
jp
add
mull
icebp
insl
jmp
push
test
dec
iret
jnp
push
and
icebp
inc
lret
les
sub
testl
test
inc
imull
out
insl
pushf
add
add
cmpsl
mov
jecxz
test
pushf
xchg
inc
mov
in
add
movsb
xchg
jo
adc
test
sbb
ret
and
lea
jmp
call
add
mov
or
xchg
xchg
mov
in
pop
leave
inc
add
dec
movsb
sti
inc
xchg
nop
inc
scas
in
sub
mov
dec
pop
push
mov
lods
in
jne
sbb
pop
jl
and
mov
test
jl
fldt
sub
lahf
rolb
push
push
add
sub
shr
aas
pusha
push
push
xor
or
adc
adc
adc
aaa
jo
or
and
pop
jb
or
rolb
out
or
add
sbb
dec
or
je
mov
and
push
dec
push
cli
and
stos
gs
enter
cmp
test
imul
inc
ret
ljmp
push
testl
insb
vmread
cs
pop
out
xchg
aas
sbb
or
leave
test
std
adc
adc
mov
pop
xchg
mov
inc
or
xchg
add
popa
or
loopne
into
test
adc
sub
jae
push
inc
nop
stos
loope
lret
adc
mov
adc
lock
js
jmp
push
int3
jmp
and
lock
adc
addb
add
loop
rolb
mov
or
pusha
mov
sbb
rclb
cwtl
mov
sbb
ret
jae
adc
inc
addr16
and
jmp
xchg
add
sbb
cmc
cmp
mov
sub
inc
sbb
mov
dec
mov
imul
lahf
push
xor
xor
mov
sbb
push
add
dec
subb
stos
cmp
jb
in
dec
lock
jo
movsb
sub
add
jmp
cwtl
imul
xchg
or
push
jmp
in
push
lea
fsubl
add
adc
add
mov
sbb
stos
xchg
or
push
sbb
lods
inc
dec
sbb
sub
jne
out
fsubl
xchg
push
inc
scas
fmul
cmp
fsubs
jg
inc
ljmp
add
and
fdivr
add
mov
sbb
outsb
sub
inc
aas
fdivrs
xchg
pop
mov
xor
jge
stos
mov
push
add
rclb
mov
sbb
fldt
add
dec
ret
out
xchg
out
gs
cmp
dec
fmull
stos
sub
and
jns
mov
dec
lods
mov
pushf
dec
jmp
fsubs
xchg
adc
mov
adc
jb
or
or
insl
lahf
push
cmp
shl
cmp
rcrb
mov
sbb
pop
sbb
inc
push
xor
fsubrl
into
nop
push
sub
arpl
sarl
pop
jo
outsl
and
scas
mov
test
pop
push
in
ja
and
je
movsb
push
push
xor
xor
mov
rorb
pop
push
rorl
pop
or
jo
adc
clc
arpl
test
sub
pushf
jecxz
nop
mov
call
call
fst
lock
pop
ret
pushl
lea
cmp
lea
cld
jne
mov
and
mov
pop
shll
xorb
test
add
lock
pusha
mov
sbb
push
pop
push
insb
movsl
loopne
cwtl
movsb
cmp
stos
ds
push
adc
loopne
in
sahf
addb
xorl
add
and
push
fwait
popf
ret
xchg
mov
sti
shr
push
pop
mov
push
cli
and
add
mov
mov
bound
es
jmp
sarl
push
push
mov
push
enter
aas
js
mov
and
mov
loope
mov
push
sahf
ss
movl
inc
int3
in
movzwl
push
cwtl
cmp
fmull
fucomi
mov
sbb
ret
insl
add
cmp
icebp
nop
push
sahf
jecxz
mov
mov
sbb
jno
mov
scas
dec
push
daa
and
cmp
jl
test
iret
iret
mov
fiaddl
xchg
push
mov
imull
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
sub
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
es
adc
mov
xchg
sub
cmp
and
dec
repz
adc
jbe
push
push
inc
xchg
or
xlat
push
cmp
or
sar
out
push
shr
mov
mov
in
scas
xchg
adc
jmp
cmpb
and
adc
push
jg
push
add
inc
fnsave
inc
testb
fxch
rorb
testl
cmp
push
xchg
pop
dec
sub
sub
clc
adc
jbe
push
paddb
es
sbb
xor
and
or
subl
jl
enter
cld
pop
xchg
jbe
je
movb
rol
les
xorl
loop
add
jle
fdivs
sbbl
out
fcmovnb
cmpl
out
sub
andl
or
mull
pop
in
lcall
sub
dec
push
mov
test
insl
mov
dec
jp
ljmp
adc
push
cmpsb
shlb
inc
hlt
or
or
adc
lods
or
xchg
sbb
add
lahf
mov
test
fwait
repnz
movsl
movsl
in
mov
repnz
repnz
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
cmp
push
and
test
xor
dec
cmpsb
inc
mov
popa
or
mov
in
loope
inc
jmp
icebp
sahf
out
sahf
pop
arpl
jnp
jns
out
mov
jns
out
mov
mov
sahf
lret
rcl
fcmovu
jns
out
in
out
repz
sahf
out
out
std
out
push
pop
or
push
sti
jmp
jns
and
add
add
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
testb
push
std
rcrb
cmp
adc
std
icebp
shll
inc
or
or
sub
dec
ljmp
add
cmp
mov
loope
pushf
les
stc
or
rclb
aam
andl
or
mov
xor
or
and
pusha
lea
push
ficoml
fsubl
xor
mov
mov
cmp
inc
dec
sbb
cmc
fnstsw
jo
cmp
shrl
push
inc
push
inc
sbb
mov
jns
popa
lods
add
sub
repz
mov
mov
xchg
jbe
cmp
setnp
adc
in
ja
sar
faddl
rolb
sbb
add
loope
push
cltd
push
pop
andl
sbb
les
pause
fsts
pop
pop
sub
cmp
jae
lds
rclb
lock
sbb
ljmp
and
ret
jp
jge
dec
fidivl
lods
xchg
mov
fidivrl
sti
jae
popa
lret
cmp
add
clc
cmp
adc
daa
sbbl
sub
scas
data16
mov
sbb
sbb
shr
add
test
or
insl
push
shll
xor
fcomip
and
imul
xor
dec
and
sbb
push
or
inc
mov
dec
sub
lea
rcrb
xor
dec
pop
or
movb
imul
js
ret
movl
jl
divb
dec
cmp
jbe
mov
lock
adc
sbb
divb
lods
xchg
dec
insl
stos
or
push
mov
dec
inc
out
scas
bound
pusha
pop
cltd
leave
pop
cmpsb
pop
mov
or
or
fldl
inc
mov
jp
fimull
adc
cmp
filds
add
adc
shrb
mov
in
adc
lcall
out
andb
fwait
add
or
xchg
pusha
popf
adcb
shlb
js
sysret
mov
push
and
test
pop
pop
movb
andl
inc
addb
js
inc
pop
popa
add
subl
add
shrb
je
loop
add
add
mov
mov
xchg
mov
and
adc
aad
adc
je
push
sbb
add
mov
xor
push
out
pop
imul
sbb
add
sbb
pop
lock
lods
add
lret
out
adc
clc
ljmp
jnp
lea
mov
push
fiaddl
add
and
cwtl
aaa
nop
inc
and
rorl
sahf
sub
pop
stos
nop
fs
xor
movl
adc
adc
and
andb
xchg
or
xor
inc
add
out
pop
andl
pop
adc
sbb
jle
ficompl
adc
or
jl
xchg
lea
movsb
sub
push
dec
jmp
add
jle
in
inc
cmp
add
cli
es
lea
cmp
mov
jg
and
or
js
cs
jle
and
js
sbb
sahf
sub
aad
or
xor
filds
jmp
cmp
mov
icebp
jl
neg
mov
cmp
push
insl
mov
test
jae
daa
int
xchg
ds
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
jae
movzbl
push
mov
add
or
adc
ret
cmpsb
js
add
dec
jmp
mov
inc
pusha
lock
mov
pop
push
inc
in
add
pop
ss
pop
xor
orb
movl
lcall
sub
pop
pop
sbb
adc
sbb
jne
inc
cmp
icebp
push
mov
adc
add
shlb
or
jno
adc
jmp
sub
add
or
adc
dec
add
stos
push
cmp
and
add
pop
rol
pop
sub
jne
jbe
push
leave
adc
clc
outsb
pop
mov
adc
push
push
sbb
jl
dec
adc
adc
pop
or
push
dec
sti
adc
fdivrl
adc
add
call
sbb
dec
dec
mov
and
cmp
ja
movsb
rcll
mov
pop
pusha
mov
adc
add
or
and
out
xchg
sbb
xor
outsl
push
add
mov
popa
out
xchg
rolb
rclb
lea
xchg
sbb
inc
jl
xchg
mov
add
jbe
mov
add
add
cltd
inc
in
cmc
xchg
in
stc
inc
std
mov
in
mov
sbb
inc
xchg
add
repz
jge
cmc
inc
xchg
and
sbb
ja
adc
adc
xlat
cmp
ljmp
mov
sbb
adc
fists
test
jle
mov
cmp
addr16
popf
xlat
xchg
add
and
xchg
mov
and
shrd
daa
jmp
xor
inc
or
neg
push
cltd
cmp
sbb
xchg
mov
adc
inc
popa
call
push
fdivl
push
fs
enter
js
je
jno
fst
and
push
or
scas
inc
push
mov
mov
cmp
jmp
sub
cmp
test
cmpb
inc
push
push
sbb
jg
fcmovnbe
jb
or
mov
adc
pop
add
or
test
sub
cmp
daa
dec
outsb
sbb
xchg
or
jo
je
sbb
jp
call
sub
cli
push
jne
push
repz
sbb
mov
adc
push
cmp
adc
mov
ficoms
mov
je
dec
lds
or
andl
js
cli
push
xchg
outsb
pusha
jmp
ret
test
adc
stos
scas
cmovnp
add
and
jnp
pop
mov
push
xor
add
loopne
and
ss
add
daa
push
xorb
in
leave
stos
xchg
or
mov
jne
adc
adc
movsl
xor
dec
enter
mov
mov
lods
sub
js
insl
cs
dec
mov
and
or
push
inc
pusha
sbb
cmp
das
lods
or
mov
sub
lcall
or
or
inc
es
inc
inc
rorl
pop
ret
jmp
daa
stc
mov
or
push
or
cmp
adc
xchg
or
xor
aam
addb
jo
in
mov
xchg
adc
and
mov
mov
clc
shll
inc
or
and
push
cmp
movsl
test
cmp
push
adc
shlb
lds
dec
rclb
mov
lea
xchg
cli
cmp
jl
mov
xchg
jecxz
push
xchg
inc
les
loope
sbb
push
mov
nop
xor
andb
rdmsr
and
clc
mov
pop
in
je
dec
adc
inc
jmp
test
hlt
ss
push
or
mov
clc
and
dec
sub
sub
jnp
inc
lods
ljmp
nop
dec
and
je
cmp
sbb
adc
xchg
xor
push
or
dec
adc
imul
jl
out
shlb
mov
ja
push
loope
adc
pop
daa
icebp
jno
jnp
sub
sub
daa
cmpsl
adc
clc
lcall
dec
sub
nop
andb
nop
int3
je
xchg
in
lock
xchg
inc
dec
pop
pop
jb
inc
int3
jmp
mov
or
jg
and
xchg
inc
popa
fsubl
imul
shll
mov
sbb
aad
hlt
fs
xchg
or
imul
or
cvtpi2ps
je
push
xor
bound
insb
jbe
inc
inc
outsb
dec
popl
imul
fs
call
sbb
xor
imul
in
mov
mov
xor
adc
push
push
xor
insl
mov
mov
add
push
or
pop
push
lods
cmp
sub
sub
aas
fs
and
jg
mov
flds
xor
fsubrs
stc
xchg
xchg
and
and
or
and
lret
xor
dec
inc
outsl
shrb
add
in
dec
adc
enter
nop
or
loop
and
mov
inc
and
xchg
or
push
hlt
rcll
jmp
mov
push
and
and
ret
sbb
andl
add
loopne
xchg
push
jns
cmp
cmp
fistpl
cmp
cltd
fidivrl
fnstenv
mov
xchg
pop
aam
les
cld
jne
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
xchg
mov
add
fiadds
sbb
pop
or
insb
mov
sub
jne
push
inc
dec
push
lahf
push
sub
pop
insb
ret
adc
in
push
loop
rcr
cmpl
jne
popf
out
and
sti
pop
pop
and
jno
cld
out
ret
dec
sbb
int
cmp
or
ja
call
mov
arpl
add
pop
sbb
inc
sbb
xor
or
add
nop
push
mov
push
nop
push
inc
xor
mov
fldl
pop
and
outsb
insl
negl
inc
sub
ds
dec
pop
sbb
jne
add
sarb
or
bound
popa
outsl
and
inc
fstpl
fisubrl
push
cmp
loope
add
push
aam
push
sub
leave
inc
mov
or
xchg
push
sub
mov
pop
add
xor
cs
sub
cmp
or
ficoms
xchg
dec
pop
movl
repnz
xchg
add
or
add
sub
xor
outsl
push
movzbl
rorl
xorb
je
or
repnz
or
aad
cmp
pusha
cmp
leave
mov
xchg
push
mov
cmpsb
ss
add
les
mov
hlt
fisttps
mov
lea
daa
ljmp
aas
lock
cmp
add
sub
push
cmp
jge
adc
sbb
inc
into
jnp
hlt
push
mov
add
fldt
dec
lds
jo
push
shll
icebp
test
mov
imul
hlt
clc
cld
xor
jae
movl
mov
push
add
add
dec
push
add
add
and
out
xor
dec
je
idiv
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
loope
orl
dec
ljmp
xor
mov
hlt
and
xchg
dec
or
jo
in
cli
or
outsl
cmpsb
adc
scas
push
dec
push
jnp
je
push
add
out
loop
inc
push
aad
pop
mov
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
mov
fdivrl
xor
add
fidivrl
or
clc
xor
inc
addb
jmp
sbb
bound
lret
idiv
inc
inc
imul
mov
popa
loope
jge
mov
cmp
pop
lahf
pshufw
je
mov
add
or
cmp
mov
loopne
mov
stc
push
or
int
and
adc
push
push
lock
cmp
je
mov
pop
jbe
xor
fstpl
inc
test
jmp
daa
pop
out
js
js
pop
cmp
sarb
in
clc
jge
fists
xorl
gs
push
or
lods
dec
orl
pop
in
pop
xchg
into
testl
jle
adc
cmp
je
cmp
push
cmp
jne
inc
jne
test
mov
repnz
push
push
mov
dec
pop
daa
mov
pusha
pop
adc
inc
adc
mov
loopne
insb
sub
cmp
and
test
in
pusha
mov
pop
sub
and
aas
shlb
cmp
jne
mov
adc
imul
push
inc
mov
push
xor
fadds
add
xor
popa
imul
xor
cmp
test
leave
sub
jmp
and
push
jmp
push
pop
outsb
outsb
inc
jl
inc
jg
aaa
jp
add
xchg
mov
std
shl
dec
mov
sub
mov
mov
and
jg
std
push
pop
les
outsl
adc
test
or
dec
xchg
and
dec
jp
jl
jecxz
mov
pop
adc
sbb
and
xor
js
xchg
mov
pushl
ja
inc
xchg
incl
xor
pusha
mov
jg
pop
xlat
je
aas
imul
mov
or
sbb
add
addr16
mov
cmpb
sub
rorb
mov
and
mov
xor
push
jge
push
pop
das
movsb
add
xor
xor
fsubs
inc
cmpb
mov
dec
pop
push
mov
pusha
xor
call
adc
add
jmp
xor
dec
add
adc
xchg
dec
fs
push
dec
cmpsb
mov
cmp
inc
mov
pop
cmovbe
std
ret
adc
cmp
cmp
mov
push
inc
xor
lods
loopne
dec
push
movsl
mov
or
add
je
and
roll
mov
clc
test
or
mov
push
clc
mov
fisubrs
mov
add
jne
mov
mov
addl
xchg
cltd
bound
inc
mov
add
mov
push
pop
adc
test
je
xor
leave
mov
dec
gs
rcll
dec
or
test
mov
xor
xchg
lock
dec
jg
jno
push
jne
cmp
mov
add
mov
cmpsb
dec
sbb
rcl
inc
mov
jmp
aam
dec
lock
xor
testb
das
adc
fs
dec
dec
fucomip
push
lock
sub
jge
jne
and
and
dec
imul
pop
push
add
roll
lret
add
add
movsl
mov
lret
jo
inc
inc
fsubs
pop
cwtl
mov
xchg
push
adc
xchg
adcb
addr16
add
ficoml
dec
lea
int3
rclb
das
in
inc
cmp
jne
dec
cmc
fildl
mov
sbb
outsl
dec
data16
icebp
jmp
push
rolb
push
aaa
push
or
or
xor
aam
dec
repnz
sbb
inc
bound
xchg
shl
adc
imul
or
xchg
pop
adc
xor
mov
sub
or
mov
xlat
xchg
inc
inc
push
fisttps
movb
xchg
js
xor
pop
dec
mov
inc
and
dec
inc
incl
cmp
pop
loopne
aam
cmp
popf
or
jle
fisubrs
adc
inc
fistpl
shlb
and
mov
lods
push
pop
or
xor
pop
stc
cmp
enter
inc
nop
faddl
test
out
cmp
js
cmp
xor
xor
mov
roll
mov
pop
or
je
and
sbb
mov
xchg
imul
and
enter
or
movb
jbe
xchg
and
loopne
and
jns
mov
add
cmpb
jne
leave
or
pop
fincstp
negl
dec
loop
int3
dec
inc
into
adc
sbb
sub
int3
shrb
xor
xchg
jne
clc
add
and
repnz
or
add
lods
xor
dec
movsb
or
shll
dec
data16
adc
mov
movsb
push
cmp
aam
xchg
dec
jmp
push
jb
rol
push
clc
jmp
add
or
in
adc
inc
add
adc
nop
jno
sub
cmp
js
add
xor
push
jg
repnz
test
add
fildl
rcrl
adc
add
mov
xor
stos
test
mov
in
mov
add
mov
dec
and
dec
sbb
jne
movsl
xchg
and
les
jp
cs
sub
jae
adc
push
adc
or
popf
inc
insb
je,pt
faddl
sbb
ret
pop
outsl
pop
add
scas
jmp
addb
addl
push
sbb
lcall
push
pop
popf
je
frstor
push
cmp
pop
mov
mov
push
xor
push
add
and
clc
add
arpl
inc
stos
push
addb
adc
adcb
ss
fistpl
loopne
jnp
jo
push
testl
push
push
cmp
xchg
in
rclb
or
push
push
mov
loopne
xchg
and
cmp
sub
inc
testl
xchg
loop
call
push
sub
pop
sbb
addr16
or
loop
in
jmp
mov
mov
loope
lods
add
mov
mov
inc
fucomp
cltd
sbb
jge
insl
test
leave
stos
push
mov
cmpsl
lret
loope
adc
push
movsl
fsubrs
test
jae
cmp
xor
negb
adc
xor
imul
pop
sub
aad
sbb
mov
sti
fnstenv
lea
sbb
test
push
push
outsb
aaa
lock
add
push
sbb
pushf
hlt
sub
or
pop
mov
lret
ficoms
daa
jmp
adc
mov
push
or
mov
or
add
and
sti
dec
and
inc
je
dec
adc
push
out
inc
addr16
enter
in
shrb
jmp
cmpsb
and
cmpb
mov
test
xchg
fsubrl
adcl
jg
pop
mov
mov
sub
dec
sbb
in
pusha
rorb
es
js
mov
rolb
cs
push
cmp
or
jnp
mov
push
filds
or
inc
or
adc
je
and
xchg
jo
mov
inc
shlb
jmp
add
sub
or
pop
dec
adc
add
shlb
iret
cmp
leave
push
test
push
adc
aaa
adc
add
stc
cmp
push
stc
in
fsts
jnp
xchg
mov
add
and
adc
ret
sbb
xor
jle
sbb
cmp
clc
adc
dec
sbb
data16
jo
out
sbb
mov
into
je
mov
lret
ja
jmp
jno
call
sub
jmp
sbb
sbb
cmpsl
cs
jo
adc
rorb
push
fs
insl
cli
movsl
push
sbb
lcall
ss
pop
fdivl
or
push
dec
pop
js
rorb
mov
je
inc
xchg
mov
add
outsl
cmp
pop
push
loopne
mov
jle
dec
inc
sbb
arpl
cmc
in
fnsave
dec
sbb
cmc
jno
or
cmp
xor
fists
dec
movsl
ljmp
bound
fwait
xor
jno
push
dec
mov
jecxz
sbb
and
add
and
shrl
xor
push
or
cwtl
mov
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
sub
daa
scas
lea
rolb
jns
in
sub
fcom
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
add
push
push
and
push
inc
add
dec
mov
pushf
subl
xchg
sbb
rclb
stos
pop
aaa
cltd
or
add
imul
aaa
movsb
jb
loopne
xchg
movsb
push
out
mov
test
rorb
cmp
adcb
gs
popf
cwtl
rolb
nop
lock
mov
cmp
sbb
adc
and
dec
loop
jbe
lcall
loopne
or
bound
jmp
clc
xchg
dec
ret
mov
pop
in
push
adc
sub
daa
pop
cmpsb
dec
jb
inc
ja
add
test
and
enter
add
addb
pop
js
pop
pop
push
lock
or
ss
leave
jno
shlb
inc
xor
or
cmpl
sarl
test
mov
jo
loopne
in
aam
loope
rcll
out
pop
dec
add
mov
inc
fmuls
pop
pusha
shlb
cltd
or
loopne
sbb
call
jns
fadds
les
rcrl
pop
js
and
fwait
icebp
jg
push
pop
jo
arpl
dec
or
xor
testl
mov
lret
sti
add
in
inc
push
out
fsubl
mov
inc
push
xor
push
pop
lahf
mov
and
jle
movsb
icebp
push
jnp
xor
jg
jo
xchg
add
sub
fwait
mov
shrb
cmp
shlb
jmp
mov
dec
roll
outsl
mov
jmp
xchg
push
sub
imul
adc
cmp
pusha
in
xchg
xchg
cmpsb
or
data16
out
and
adc
imul
or
pop
push
ret
sbb
mov
mov
daa
pushf
pusha
xchg
inc
enter
cmp
pop
sbb
mov
push
and
or
fmuls
adc
test
fistl
push
rol
xor
dec
gs
das
clc
inc
xor
jmp
rorb
adc
or
add
aad
adc
pusha
add
sbb
push
sub
cwtl
dec
push
cmp
je
ret
ljmp
add
out
sub
decl
adc
mov
movl
pop
jo
add
ffreep
or
or
mov
popf
sub
jp
cmp
int
inc
dec
enter
mov
ja
sbb
and
push
dec
sbb
jo
sbb
sub
dec
sbb
pop
cld
or
or
push
dec
sub
subl
sub
xor
push
ja
sub
push
and
hlt
push
es
sub
out
jbe
push
inc
mov
sbb
loope
xchg
jo
mov
ds
mov
ja
add
pop
popa
push
je
pusha
sbb
and
mov
ss
xchg
dec
aam
test
aam
jne
fcoml
sbb
cmp
in
sub
mov
sbb
push
jae
cmp
jmp
push
ljmp
add
pop
insb
pusha
int3
pop
inc
push
loop
inc
mov
xchg
xchg
ss
xlat
rcll
mov
dec
sbb
sbb
mov
add
mov
test
inc
in
jmp
dec
sbb
push
sub
aad
dec
aam
sbb
adc
or
mov
sub
xchg
push
add
adc
adc
fincstp
mov
inc
insb
or
sbb
in
pop
and
test
xor
cmp
adc
pusha
pushf
test
add
sub
aas
lds
sub
loopne
call
push
jno
arpl
mov
es
pop
mov
mov
loopne
cmp
mov
or
mov
repz
push
adc
cs
sbb
rclb
outsl
dec
incl
pop
lea
stos
mov
xor
sub
out
xchg
jp
in
jae
cmp
pop
mov
jmp
dec
stos
aaa
xchg
fs
push
flds
jb
outsl
and
nop
aaa
xchg
sbb
mov
shl
jg
dec
lds
ret
rep
adc
data16
sbb
xchg
and
sbb
in
or
adc
daa
mov
jmp
pop
and
push
pop
add
cmp
fwait
scas
sub
mov
stos
pop
jg
sub
mov
push
imul
adc
test
or
cmp
mov
outsl
xor
jb
fs
jg
sarb
push
or
adc
dec
jnp
imul
ret
mov
mov
push
jp
mov
add
sbb
lods
adc
orb
jmp
add
inc
sarl
inc
mov
movsl
sub
mov
adc
push
subl
incb
rorb
sbb
ljmp
pop
cmpsb
xchg
mov
jmp
pop
lock
neg
push
add
push
loopne
cmpl
pop
add
xchg
add
mov
jg
gs
negl
adc
xchg
into
add
or
mov
imul
call
rorb
cli
aad
xchg
ret
sbb
mov
adc
and
jo
cmc
out
and
mov
xchg
int
push
cmp
sbb
adc
test
in
jbe
add
dec
andb
cmpsl
rolb
add
pop
loopne
and
and
jg
mov
aas
xor
or
sbb
add
push
xchg
push
xchg
lcall
or
dec
add
stc
pop
add
cmp
inc
and
test
cmp
ret
and
mov
scas
xchg
insb
call
rcll
data16
inc
cmp
sbb
adcl
call
fs
mov
cmc
jb
ljmp
aam
clc
imull
stos
loope
or
mov
or
sbb
clc
dec
call
push
jae
push
cmp
loope
call
pshufw
or
sub
ja
sub
push
xor
ss
jne
sub
push
sub
orl
ss
ret
les
dec
ljmp
mov
enter
adc
je,pt
sar
adcb
xor
loope
mov
stc
jnp
or
outsl
inc
jp
push
mov
sbb
int
xor
bound
jecxz
push
jg
ret
pop
mov
rclb
aam
cltd
loope
out
inc
lret
adc
popa
cld
inc
sub
mov
out
shr
sub
movsb
mov
cmpsb
adc
sub
inc
pop
rorb
lret
xor
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
sub
or
mov
es
add
inc
push
rcrl
adc
cmp
jbe
push
adcb
add
sar
loop
push
lods
push
rclb
push
and
jecxz
pop
ret
add
adc
or
or
cmp
cltd
nop
dec
lock
pop
inc
daa
mov
pop
pop
or
push
imul
pop
mov
vshufpd
cmc
sub
mov
jmp
push
add
adc
js
xchg
xchg
xor
dec
jo
mov
js
daa
jmp
dec
xor
rorb
imul
sub
mov
jo
ljmp
add
and
loope
fcompl
cmp
add
dec
stos
push
pop
pop
mov
mov
add
inc
test
mov
data16
sub
loope
push
inc
or
sub
add
or
insb
shll
or
dec
shll
mov
push
push
call
push
mov
mov
lahf
enter
pop
sarl
lret
jne
mov
jl
lret
sub
cmp
in
fcomi
jmp
pusha
jle
push
xor
pop
div
add
jb
lea
sbb
ljmp
xchg
jmp
lods
push
sbb
xorl
mov
pushf
push
adc
cmp
lret
sbb
adc
sub
xor
in
jmp
xorb
js
xchg
xor
sub
sbb
or
jle
fsubl
andl
gs
into
mov
in
sub
mov
rclb
call
add
push
je
pop
bound
jmp
lahf
rcl
je
icebp
cmp
push
shrl
jbe
je
adc
sub
sub
jne
bound
jne
adcl
orb
adc
mov
das
pushf
fidivrl
clc
int3
add
sub
mov
jnp
imul
add
xchg
loopne
dec
xor
ljmp
mov
neg
and
je
sub
mov
mov
sarl
mov
or
rorl
lret
or
add
stos
mov
dec
ljmp
ret
or
imul
iret
and
inc
add
shrb
xchg
call
insb
mov
test
pushf
mov
push
or
dec
add
icebp
lods
sbb
and
xor
push
sub
adc
xor
xor
jle
or
add
cmp
or
pop
push
pop
and
mov
and
psubusw
xor
and
inc
dec
xorb
jg
fs
jno
add
movd
movapd
mov
fldt
enter
shlb
jle
xor
and
lcall
xchg
decl
int
lods
pop
bnd
repz
or
jg
jmp
push
pminsw
adc
jnp
mov
call
aam
ret
or
notb
sbb
mov
add
mov
jbe
and
pop
mov
int
sub
fcmovb
sbb
dec
pop
ja
adc
mov
pushf
push
mov
leave
iret
into
loopne,pt
and
orb
jg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
push
dec
lods
mov
lcall
xchg
rol
std
add
cwtl
cmp
and
movsl
or
rorl
and
ficoml
dec
pusha
mov
ficoml
sub
sahf
add
outsl
or
jg
jb
push
data16
pop
inc
mov
push
sub
add
dec
pop
shrb
out
clc
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
add
mov
inc
inc
into
xchg
and
loope
adc
or
lret
fmuls
cmpl
daa
cwtl
ljmp
cmpsl
arpl
test
in
scas
sbb
add
into
clc
jmp
mov
sbb
mov
cltd
loope
lea
data16
or
dec
xor
or
incl
xor
inc
mov
sbb
decl
mov
wbinvd
loop
and
cwtl
sbb
mov
adc
aaa
enter
xchg
lahf
nop
dec
bound
lock
roll
sub
jecxz
imul
jns
and
inc
pop
subb
sub
mov
inc
push
jne
pusha
cmpsb
addr16
pop
dec
pop
bound
dec
push
sbb
aaa
iret
adc
or
movb
xchg
lcall
sbb
sbb
cwtl
mov
xchg
sbb
push
mov
adc
cmp
enter
enter
rolb
push
shlb
cmpl
mov
mov
movsb
jnp
je
jp
xchg
xor
rep
xchg
xor
daa
add
dec
loop
repnz
cmp
or
and
call
jecxz
add
jne
out
incl
and
out
push
mov
icebp
fidivrs
pop
mov
or
fwait
out
hlt
push
test
add
inc
mov
sbb
push
cltd
hlt
jp
adc
or
xchg
repnz
or
int3
sbb
xchg
mov
jmp
cmp
aaa
mov
cld
inc
push
cmp
arpl
orl
push
push
out
in
dec
jg
push
imul
add
lock
fadd
lods
inc
sub
xchg
cmp
adc
in
inc
jb
or
push
cmpsb
mov
adc
pop
mov
mov
jp
add
data16
aas
movsw
jbe
mov
add
jbe
aaa
inc
je
pop
movsl
sti
mov
adc
add
je
jae
jo
rcrb
add
xchg
ret
mov
test
inc
mov
pop
mov
cmc
add
or
pop
shr
arpl
outsb
test
pop
loop
icebp
mov
out
rolb
rorl
xchg
subl
shlb
test
lret
jle
addl
insl
jno
repnz
pusha
movsb
pop
inc
inc
push
lods
or
dec
mov
adc
jne
insl
lock
lock
aad
jo
hlt
fwait
mov
cmp
jg
or
testb
je
mov
pop
clc
inc
mov
cmp
xor
es
loope
daa
pop
lock
lret
jne
dec
jmp
shl
mov
xor
and
lds
mov
push
loope
push
lds
ja
imul
cltd
or
adc
pop
je
push
fistpll
sbb
sub
jecxz
fdivrl
stos
jno
test
cmp
pushf
xchg
mov
mov
repz
mov
cmp
pop
and
or
fmull
pop
jne
mov
adc
out
test
ret
stc
or
rep
jmp
ss
mov
mov
mov
jb
push
add
test
int
add
lea
nop
or
mov
fs
sub
push
in
sub
inc
add
add
lahf
cltd
dec
mov
push
jmp
add
lret
push
nop
inc
xor
xchg
repz
dec
mov
push
aam
int3
push
cmp
les
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
pop
adc
mov
andl
lock
sbb
jmp
repz
clc
mov
nop
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
pop
and
pop
ss
out
ds
ds
xchg
mov
stc
sub
pop
pop
nop
push
mov
mov
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
cmpsb
rcr
push
mov
inc
repz
repz
dec
push
pop
pusha
push
jo
ss
sbb
repz
sbb
adc
or
iret
repz
or
add
out
xchg
movsb
dec
inc
sbb
add
sub
mov
outsb
shlb
enter
enter
add
paddsw
test
sub
imul
loopne
cwtl
or
ljmp
imul
pop
lds
pop
and
adc
repz
fists
adc
dec
sar
dec
scas
mov
dec
cwtl
dec
pusha
sbb
je
inc
xor
mov
lea
push
mov
dec
sbb
testl
es
clc
and
jo
push
lea
fistpl
and
mov
xchg
cmp
test
jmp
mov
popa
inc
les
int
adc
push
pop
mov
movsb
test
jo
imul
dec
add
mov
or
je
mov
fadds
pop
sub
ret
jb
jmp
inc
xchg
and
and
mov
insl
or
jne
sub
sbb
enter
adc
lock
or
jle
ret
lcall
hlt
fisttpl
dec
push
jbe
sub
das
mov
xchg
cmp
pushf
mov
cmp
mov
lea
cmp
cld
lret
sub
jnp
or
cmp
jne
push
adc
or
ja
imul
jne
pop
es
cmp
ficomps
add
andl
mov
in
jne
ds
repnz
pop
cmpsb
clc
mov
xor
cld
add
mov
mov
aam
xchg
popa
psraw
mov
loope
faddl
rolb
mov
scas
rolb
mov
or
loopne
faddl
ror
and
xor
pop
adc
loop
cs
shrb
inc
outsl
pop
and
les
scas
jns
push
addb
dec
jns
jge
pop
adc
xorb
mov
dec
lds
and
xor
mov
andl
cmp
ret
add
push
shll
sub
add
mov
push
sub
sbb
jne
popf
inc
fdivrl
orl
jmp
adc
or
push
push
and
cmp
xchg
fistl
cmp
cltd
mov
pop
add
aas
push
adc
inc
cwtl
add
xor
movsl
jbe
cmpsb
xlat
adc
ljmp
jne
into
mov
or
jl
and
pop
roll
aaa
push
or
sub
ljmp
mov
adc
jmp
push
sub
loopne
dec
inc
movsl
sub
ss
xchg
fs
or
popf
icebp
ds
je
or
je
std
xor
adc
gs
add
cs
mov
pop
sbb
add
or
test
push
fcoms
sub
fldt
sub
ja
pop
jbe
lea
adc
sbb
sub
jp
sahf
roll
and
leave
push
sbb
pusha
adc
dec
iret
int
push
clc
jbe
add
and
adc
out
fs
adc
jns
pop
or
or
cmp
pop
lods
xchg
jmp
push
add
sbb
sbbb
add
xorl
mov
int
lret
push
jle
mov
cmc
je
andl
cmpsb
inc
inc
push
mov
mov
negl
push
aam
test
out
inc
and
inc
rcrb
roll
and
push
add
push
xor
cld
cmc
sub
mov
inc
pop
cltd
and
dec
loopne
cmp
cmpl
add
loopne
push
or
roll
dec
push
outsl
xchg
or
or
cli
xchg
or
dec
pop
mov
inc
dec
push
rolb
push
test
or
repz
loopne
ret
add
sbb
lods
cmp
das
pop
aaa
or
add
shlb
dec
ret
out
dec
repnz
dec
scas
jmp
inc
cmp
xchg
push
adc
push
push
lret
rcrl
add
sub
sbb
int3
dec
push
xchg
call
mov
inc
repnz
and
mov
inc
cld
verr
dec
jne
jmp
mov
adc
pop
repnz
dec
and
sbb
dec
jne
mov
mov
adc
sahf
xchg
cwtl
push
xor
outsb
mov
inc
imul
aam
mov
sub
add
xchg
pusha
mov
push
rorb
adc
cld
outsb
into
add
std
push
lret
push
in
cmp
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
dec
inc
insb
out
aam
orl
push
or
and
mov
dec
jno
lahf
xlat
or
adc
jmp
std
cmp
adc
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
es
push
push
out
cmpsl
sub
xchg
stos
push
test
fdiv
mov
push
and
sbb
cmpsl
mov
mov
daa
mov
xchg
cmp
sub
outsb
adc
and
stos
repz
xor
add
pop
inc
add
mov
lock
sub
enter
xor
add
sub
adc
nop
or
pushf
dec
jg
pop
xor
xor
or
and
pcmpgtb
fs
pop
dec
jge
int
es
fs
insl
push
sbbb
jo
sbb
cmp
test
sbbl
jo
add
loope
pop
or
add
dec
lods
je
xor
rclb
shll
add
xlat
xchg
add
jne
fmuls
cli
das
add
add
add
and
dec
dec
mov
pop
subl
pop
call
push
push
or
adc
imul
mov
divb
out
scas
and
pop
dec
pusha
jle
adc
aas
add
add
lea
mov
and
xlat
mov
xchg
je
xlat
mov
or
addl
xorb
clc
pop
nop
sbb
push
pop
pop
or
push
sbb
leave
adc
xchg
cmp
call
mov
adc
and
push
xchg
push
and
add
jne
inc
xor
mov
push
inc
sbb
sbb
rol
sub
push
push
hlt
mov
xor
add
es
fisubs
arpl
push
fimull
pop
pop
mov
or
adc
sbb
lea
dec
add
add
push
xor
aam
fmuls
cs
sti
jge
not
and
sub
add
and
adc
push
sti
scas
xchg
jl
push
fimuls
and
mov
pop
mov
adc
sub
int3
cwtl
mov
ja
jne
lcall
push
lcall
xchg
jmp
add
cmp
ja
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
cmp
sbb
scas
clc
fwait
jmp
mov
add
mov
inc
cmp
jb
sbb
fsubrs
shll
stos
addb
dec
idivl
dec
pop
ret
xchg
cs
and
add
or
fdivs
lods
add
add
jge
add
push
sub
or
or
shl
push
adc
push
imul
stc
add
imul
iret
xor
jo
and
stos
jne
and
cmpb
adc
mov
adc
test
inc
cld
clc
push
push
outsb
ss
inc
test
and
add
repz
push
aam
xchg
pop
addr16
inc
mov
xor
inc
sbb
loop
cmp
bound
adc
add
out
xor
bound
test
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
xlat
mov
cld
rclb
pop
dec
or
mov
flds
xchg
sub
loop
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
lret
sbbb
or
mov
adc
fimull
into
cmp
movsl
lret
adc
lock
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
dec
mov
and
je
lret
or
or
xor
xor
sbb
test
and
push
addl
test
aam
add
or
jp
push
jbe
push
add
xor
sbb
and
movsb
inc
xchg
or
fcmovnbe
push
push
push
add
loopne
std
mov
sbb
push
sub
jecxz
xchg
sbb
push
sbb
add
or
or
xchg
sub
mov
inc
loopne
mov
mov
les
push
insb
dec
lcall
push
sub
inc
mov
push
lcall
xor
jne
mov
pop
ret
or
mov
inc
sbb
jne
fs
add
adc
sbbb
roll
add
xchg
add
aas
inc
inc
sbb
push
push
or
adc
xlat
lds
push
adc
arpl
push
inc
adc
inc
imul
orl
cmp
popf
loopne
pusha
cmpsb
sbb
dec
or
or
push
mov
sbb
adc
shrl
pop
xor
daa
inc
pushf
adc
sub
add
cwtl
sbb
inc
inc
mov
loopne
jno
sub
or
int
nop
je
inc
or
icebp
lea
push
adc
or
ja
aaa
xchg
adc
add
push
pop
cmp
push
clc
sahf
movsb
cmp
bound
inc
cmp
or
mov
fnstcw
les
test
adc
mov
jne
or
push
xor
jno
add
or
mov
jmp
rorl
gs
jnp
or
mov
or
mov
stos
add
es
in
mov
sbb
testb
add
call
cwtl
cmc
add
data16
outsl
adc
mov
pop
fimull
shrb
mov
sbb
inc
insb
or
xchg
jo
jp
int3
clc
dec
test
pop
inc
hlt
adc
lea
push
push
inc
jecxz
or
xor
sub
mov
jmp
in
ret
add
adc
sub
mov
mov
inc
leave
test
sar
add
xchg
jmp
test
stos
lock
mov
rcrb
cwtl
add
fistpll
rcll
or
or
aad
and
push
into
and
jmp
xor
adc
loop
or
scas
jne
sbb
out
mov
hlt
push
fisubrl
jne
ja
rdpmc
mov
cmc
inc
pusha
aas
xor
test
subb
adc
stos
rcrl
dec
lea
jp
cld
push
push
jge
xor
pusha
out
gs
fsubr
or
rol
sub
in
inc
int
inc
pusha
mov
add
dec
cmp
mov
sbb
pop
aam
push
insb
push
mov
xchg
add
add
cmp
movsl
test
out
insl
mov
mov
jbe
dec
cltd
pop
idiv
lea
adc
decl
mov
add
cli
mov
ja
pop
sub
popa
lcall
xor
rol
addl
js
adc
inc
sub
ficoml
subb
dec
mov
mov
pop
push
movsl
adc
mov
xchg
push
bound
mov
fwait
jae
or
add
jecxz
jmp
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
cmp
test
testb
ja
push
loopne
mov
lock
rolb
and
dec
push
stos
inc
fcoms
fists
pop
mov
insb
and
ret
in
mov
adc
and
lods
add
addl
rcl
add
or
jg
pusha
cmpsb
in
xor
pushf
push
push
or
adc
mov
faddl
xor
adc
clc
fs
lods
popf
jmp
daa
adc
mov
adc
or
imul
sti
xchg
push
push
or
push
movsl
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
pop
insb
push
or
addr16
fisubrs
sbb
add
jmp
call
hlt
push
and
push
jmp
add
sub
pop
push
push
les
lea
test
push
cmpsl
pop
sbb
push
add
sub
arpl
inc
xchg
roll
add
insb
movsbl
push
jne
mov
addr16
add
dec
jo
xchg
or
xchg
inc
mov
xchg
dec
jne
pop
cltd
push
repnz
dec
repz
xchg
test
je
dec
mov
and
cmovp
lret
enter
pop
jns
pop
in
imul
lods
mov
sub
subb
add
push
iret
or
js
in
movsl
lds
leave
add
ja
pop
push
mov
out
pop
rorb
add
dec
pop
movsl
pop
aas
push
or
in
push
jmp
sub
dec
mov
pop
sbb
pop
cmc
loopne
dec
mov
fsubrs
dec
scas
add
cmp
aad
imul
and
andb
xlat
mov
jmp
cmp
jae
push
sbb
sub
adc
sbb
add
and
add
loope
sub
mov
loop
push
push
pop
lcall
add
add
sub
dec
sbb
add
insb
iret
sub
mov
call
fsubrl
push
jl
sub
sub
je
or
dec
sbb
pop
xor
sbb
shl
jns
movb
clc
mov
sub
mov
adc
xchg
imul
pusha
ss
cli
or
lea
stc
mov
and
dec
pop
push
sbb
and
movsl
jo
addr16
or
push
pop
int
xor
decl
das
pop
pushl
mov
lock
sub
sub
push
shll
push
pop
pop
outsb
outsb
jmp
scas
push
pop
sub
dec
add
imul
or
push
push
dec
test
sub
jmp
inc
sbb
imul
cmp
lret
push
rcr
or
dec
sbb
push
inc
lods
push
sub
daa
movsl
stos
sbb
xlat
out
mov
sub
cmp
lahf
push
and
sarl
sarl
inc
push
mov
mov
sti
pop
push
push
inc
cmp
pop
pop
fsts
stc
xchg
clc
mov
mov
stc
mov
push
lock
cmc
mov
fs
xchg
cmpsb
bound
insl
inc
sub
je
sub
pop
adc
cmp
adc
shlb
out
add
lock
push
mov
inc
mov
jmp
jnp
pop
cli
dec
or
mov
inc
mov
pop
inc
loopne
mov
jno
adc
pusha
push
clc
sbb
xlat
mov
xlat
je
xor
add
jbe
jbe
add
and
insl
push
mov
int3
scas
cmp
sets
push
insl
gs
arpl
int
push
pop
xchg
and
jg
fldl
add
aam
inc
movapd
pop
popa
imul
mov
lret
inc
jo
imul
add
push
test
pushf
aad
sbb
rorb
fcom
pop
lea
jge
orb
call
call
les
jb
inc
cs
subl
mov
enter
rol
pop
es
push
insb
fbld
jmp
inc
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
pushf
add
sbb
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
push
xchg
mov
and
push
ret
cmp
sbbb
mov
in
call
and
addb
push
cmp
mov
ja
push
push
adcb
sahf
lcall
add
cmp
stc
and
dec
insb
sub
jmp
jmp
adcb
sub
and
inc
add
push
jo
js
inc
mov
pop
mov
mov
scas
sub
in
pop
enter
or
mov
lods
mov
ret
inc
dec
call
cmpsl
dec
inc
pop
mov
pop
and
lock
test
lea
jmp
pop
mov
dec
pop
cmp
sub
leave
cmp
sbb
repnz
jle
mov
std
or
fcmovbe
clc
ja
adcb
jnp
adc
loopne
rcll
inc
xor
into
je
fstpt
pop
jne
mov
or
mov
loopne
adc
enter
add
stos
fcoms
dec
push
popa
xchg
iret
xchg
or
aad
dec
lret
jb
and
sub
mov
push
mov
ds
sub
mov
and
dec
leave
push
call
out
inc
leave
arpl
in
je
gs
out
in
lret
adcb
push
rcrb
loop
mov
decl
mov
or
push
push
sahf
out
sahf
dec
inc
cmp
sub
ud2
loopne
lcall
decl
push
mov
jmp
mov
sbb
data16
push
and
inc
insb
pushl
call
mov
mov
mov
cmp
repz
fsub
call
lock
add
iret
repz
ret
inc
sahf
sbb
and
dec
mov
jo
lcall
mov
sub
push
lds
test
adc
pop
mov
mov
adc
cmp
dec
push
dec
push
add
sti
sti
xor
or
je
mov
inc
ret
js
xlat
sbb
inc
or
jne
inc
mov
test
jle
xorl
cli
add
bound
add
fildll
sub
pusha
jmp
push
mov
jne
push
pusha
adc
push
stc
lret
enter
push
loopne
lea
inc
and
cmp
fsubrs
jne
out
jle
add
arpl
movsl
popf
pop
movsl
xchg
mov
nop
inc
or
jne
outsb
cmp
pop
popf
push
stos
rcll
mov
or
jmp
test
cmp
fldenv
push
sbb
jecxz
jns
cmpb
dec
inc
mov
sbb
pop
add
or
icebp
loopne
mov
pop
xchg
push
push
add
add
inc
xchg
js
jns
icebp
inc
push
dec
push
pop
ret
add
aam
push
rcll
pushf
test
test
andl
inc
loopne
inc
push
std
call
cmp
rcrl
dec
inc
inc
or
and
movsl
cmp
sbb
xor
out
ja
lds
xor
enter
mov
and
mov
insb
mov
andb
add
pop
std
movb
je
sbb
adc
cld
addb
mov
adc
push
push
dec
or
sub
je
jo
push
mov
push
clc
mov
or
dec
stc
add
fmuls
or
inc
cwtl
or
adc
loope
dec
and
and
sub
inc
test
orb
out
mov
std
std
imul
xor
jne
mov
push
stc
imul
mov
movsl
jge
test
add
inc
push
mov
sete
arpl
sarb
mov
ljmp
adc
add
test
fs
ret
adc
mov
mov
in
pop
lock
inc
xor
int3
xor
out
push
inc
jbe
push
mov
cmp
loope
add
sub
sti
sbb
movsl
xchg
data16
cmpb
mov
mov
pop
push
xor
inc
gs
and
fcoml
gs
aam
sarb
das
das
mov
popf
enter
rol
cmp
lods
mov
mov
divl
fbld
aam
aaa
dec
cld
xor
inc
cmp
aaa
xor
adc
and
in
sbb
clc
jno
sub
orl
fmull
add
scas
jmp
mov
xchg
push
inc
in
jo
mov
cs
mov
call
push
sub
jno
add
add
mov
rcr
call
dec
xchg
in
adc
add
adc
sbb
test
add
or
test
fimuls
and
adc
enter
rclb
lret
rcrb
daa
jge
xlat
lcall
cltd
adc
jbe
push
std
movsb
sub
fisubrs
push
jecxz
test
inc
pusha
lcall
xor
sbb
add
pop
divl
jmp
ja
add
sahf
mov
jp
sub
dec
push
stos
and
sbb
shrb
call
cmp
jp
jns
mov
pusha
pop
sahf
stc
rcrl
mov
arpl
jo
push
push
pop
fcmovne
mov
adc
and
inc
fmuls
jmp
adc
push
mov
cmp
adc
or
push
push
xchg
mov
inc
js
in
bound
subl
rol
xor
sub
mov
mov
iret
mov
push
push
cmp
push
sub
iret
das
nop
mov
and
je
pop
push
pop
push
fistps
mov
xchg
lret
gs
or
mov
hlt
fdivrs
rcrb
popf
jne
sub
cmpsl
mov
xchg
mov
shrb
xor
aas
sub
movsl
xchg
call
loopne
cmp
jg
dec
pop
mov
stos
pop
add
cmpl
cs
mov
lea
push
pop
ja
orl
dec
loopne
jg
add
sbb
sar
pop
fsubl
sbb
es
adc
addb
add
mov
fsubr
shll
les
lret
lods
push
mov
dec
or
je
or
inc
mov
scas
mov
into
inc
pushf
pop
or
add
sub
andl
addr16
adc
jg
pop
xor
sub
mov
mov
mov
scas
mov
imul
in
lea
ja
mov
mov
movsl
mov
mov
arpl
sbb
hlt
hlt
stc
int3
add
int
je
or
inc
insb
add
test
in
mov
loope
insb
jo
lods
js
pusha
sub
fcmovne
in
ficoml
pop
and
js
add
or
jge
je
inc
fiaddl
xor
fdivr
inc
fs
cmp
sbb
imul
out
and
pop
std
xor
movsl
adc
mov
add
mov
test
or
cmp
bndldx
andl
mov
sbb
sbb
sub
adc
or
mov
ds
mov
mov
inc
movsb
insb
cmp
sub
lock
cmp
mov
push
arpl
idivl
insb
arpl
sub
pusha
dec
mov
jae
aaa
jne
das
mov
lock
mov
push
sbbl
and
in
push
test
sub
adc
xchg
push
daa
clc
dec
mov
mov
ror
sbb
mov
jge
adc
push
stos
mov
adc
add
push
insl
cmp
cmp
lahf
jl
xor
xorb
decb
jmp
pushf
sub
shl
scas
adcl
dec
mov
xor
ss
cmp
mov
adc
ret
add
xor
mov
aad
fwait
inc
and
les
outsb
dec
out
cmc
lods
maskmovq
jg
aas
jmp
mov
inc
lods
cmpsb
sete
xlat
mov
mov
dec
imul
dec
push
jl
lock
stos
mov
je
inc
lods
je
repnz
jp
sbb
out
dec
mov
jo
or
gs
xor
or
jmp
inc
pusha
je
or
sub
cmpsb
ss
popa
xor
subb
mov
pusha
aaa
gs
push
imul
xchg
add
sub
adc
je
mov
or
jo
popf
mov
test
stos
jb
lods
cmp
scas
aaa
inc
mov
dec
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
push
js
or
fadds
push
adc
adc
rclb
push
insb
push
mov
aam
testb
and
xorl
icebp
outsb
and
sbb
xchg
sub
inc
sbb
mov
push
pop
enter
enter
and
imulb
popf
push
push
push
test
data16
call
cwtl
or
cmpb
jne
xor
and
rcl
stos
push
xor
js
sub
and
jae
pusha
cld
mov
adc
jo
inc
cmp
add
sahf
add
adc
mov
hlt
or
xor
jecxz
mov
jbe
mov
stos
lea
adc
sub
ret
sahf
or
cwtl
or
add
rorl
add
jl
sub
sbb
adc
add
fidivrl
and
pop
sbb
sub
sbb
clc
xor
mov
test
inc
dec
mov
or
and
mov
jbe
sbb
dec
test
pop
add
sbbl
bound
iret
dec
add
movsl
clc
repnz
cmp
dec
jmp
sub
sub
movb
mov
aam
adc
pop
xor
lods
fcomp
dec
shlb
sbb
movb
inc
jmp
movsb
xor
or
jmp
dec
loopne
sysret
pusha
xor
repnz
roll
ret
jge
push
lcall
int3
adc
push
outsl
add
sub
pop
aam
sub
inc
sub
sub
cmpsb
jo
data16
decl
and
pop
sti
in
jle
cmp
cmpb
xor
add
rolb
and
mov
sub
loope
pop
dec
outsb
movsl
test
and
adc
xor
shlb
pop
inc
aam
adc
movzbl
sub
aam
data16
adc
mov
adc
lret
xor
sub
pop
jecxz
add
lcall
popf
sub
fsubr
push
pop
int
fchs
pushf
cwtl
andb
inc
and
outsb
rorb
xor
sub
xor
mov
movsl
daa
pop
mov
mov
push
push
cli
movsb
addl
outsl
loope
into
sbb
jge
mov
xor
add
daa
ret
jb
push
jns
iret
mov
jo
insb
leave
jno
and
inc
out
imul
xorb
repz
cli
movsb
nop
mov
dec
lods
sbb
xchg
and
pop
adc
xor
sbb
pop
cli
popf
loopne
push
jnp
adc
int3
dec
std
fimuls
mov
adc
call
pop
lcall
or
xchg
hlt
xlat
repnz
xchg
lcall
dec
xor
add
mov
cmp
push
ret
subb
scas
sbb
xor
je
pop
sarb
fisubl
gs
mov
xchg
jnp
push
pop
cli
loopne
enter
ss
add
and
ljmp
imul
jmp
jl
int3
adc
xchg
inc
add
sub
and
addr16
loope
cmp
xchg
push
pop
outsb
inc
hlt
shlb
add
jp
mov
mov
fwait
rcrb
lods
lock
call
sub
jnp
into
add
inc
and
jge
or
add
fadds
dec
jle
add
mov
pushl
popa
cs
out
and
lahf
and
mov
jp
add
push
mov
stos
mov
stos
loop
xorl
or
adc
add
out
loopne
or
je
loopne
cmc
jo
aaa
icebp
jge
subl
jmp
inc
cmp
and
outsl
lea
mov
push
mov
mov
jl
inc
sub
sbb
mov
sbb
rorb
stos
insl
sub
icebp
jge
int3
dec
adc
clc
mov
and
pop
dec
loop
es
jb
scas
add
fsubl
and
es
or
jmp
orl
test
add
add
pop
or
clc
sbb
pop
and
mov
dec
rclb
xor
ret
cmpb
jnp
icebp
or
insb
xchg
cmc
loope
mov
push
popf
fwait
mov
mov
xor
or
rclb
ret
aaa
mov
movsl
or
xor
sub
xchg
cmp
pop
das
xchg
inc
sub
sub
lea
pop
lock
sub
inc
sar
outsl
cmp
sub
fistl
mov
aam
sub
pop
xor
loopne
movsl
into
in
xchg
test
aam
push
sub
das
or
pop
push
add
cli
push
dec
mov
lock
pop
testl
inc
mov
jbe
ss
sbb
loopne
call
clc
shl
cmp
or
or
rorb
lods
or
push
add
mov
jo
les
mov
nop
sbb
ret
sub
pop
mov
inc
sbb
xchg
push
xchg
rcll
cmc
outsb
imul
xchg
mov
sahf
pop
push
ret
outsb
mov
dec
and
jl
cltd
mov
xor
push
int3
push
or
push
std
push
mov
xchg
fld
cmpsl
popf
cmc
mov
sub
add
xor
push
xchg
ljmp
pop
lock
xchg
lock
icebp
push
mov
test
add
xor
jo
outsl
loope
test
into
movsb
in
loop
inc
testb
xor
dec
sbb
pop
mov
or
in
outsl
sbb
dec
data16
sbb
push
push
enter
pop
or
add
sbbb
or
es
cld
dec
xchg
arpl
jo
pop
push
inc
lea
pop
out
in
push
call
dec
and
ljmp
into
leave
and
add
push
cmp
mov
and
leave
add
add
xor
push
mov
js
or
mov
call
mov
sti
push
fstp
xchg
or
cs
inc
xchg
and
and
dec
addl
xchg
ror
sub
add
repnz
or
pop
pushf
shll
lds
lods
lret
test
xchg
movsl
inc
ret
mov
adc
xchg
movsl
in
imul
out
xor
or
add
pop
xchg
or
push
xchg
ljmp
orl
loopne,pn
lods
clc
dec
sub
mov
mov
mov
mov
mov
push
mov
into
iret
movzwl
mov
or
les
pushf
enter
cmp
add
popf
lcall
sahf
jbe
cli
pop
ja
fstpl
mov
mov
jo
xchg
les
add
sbb
fnstenv
mov
push
arpl
ja
push
mov
in
sar
mov
out
jae
mov
push
or
mov
mov
dec
or
jge
xor
mov
or
arpl
add
jae
call
jne
push
pusha
xlat
jb
cmpsb
mov
jecxz
cmp
nop
imul
mov
pop
sub
mov
inc
sub
sub
insb
jne
jbe
xlat
xor
or
pop
pop
in
pop
mov
mov
cmpsb
sbb
jb
andb
das
inc
cmp
xor
mov
fwait
cmp
leave
inc
cmp
add
inc
pusha
rcrb
int
sub
xor
cmp
add
lea
or
lahf
xchg
xchg
add
xchg
lret
pop
mov
and
call
dec
adc
mov
jnp
jl
xchg
cmp
mov
fsubr
dec
in
sbb
mov
int
leave
adc
mov
fs
dec
fwait
call
fmuls
jmp
jb
inc
sub
std
add
in
pop
xor
sbb
cli
cmp
stos
sbb
nopl
mov
clc
mov
mov
jmp
xchg
es
pop
call
push
dec
nop
mov
xchg
fs
xchg
mov
mov
imul
imul
scas
in
xchg
pop
mov
mov
lods
add
or
mov
mov
or
push
in
in
cwtl
lods
xchg
inc
cs
pop
dec
in
add
fmuls
mov
nop
repz
push
sbb
enter
jb
fcompl
cltd
cmp
pop
call
aam
enter
in
mov
mov
andl
in
mov
aam
and
mov
stos
loope
push
jbe
xchg
xchg
loopne
jb
daa
pop
lods
imul
jmp
add
xor
add
fbld
aad
js
repz
fisubrl
fiaddl
movsl
xor
ss
icebp
std
test
cmp
lret
adc
pop
xchg
les
and
dec
daa
js
xchg
imul
sub
xchg
into
lret
int3
push
dec
inc
ret
mov
ret
xchg
adc
sub
in
jbe
fwait
rcll
outsb
repnz
jmp
mov
mov
inc
pop
pop
push
mov
jp
mov
das
add
and
adc
dec
fdivrs
or
ret
cltd
inc
push
dec
insl
ficoms
inc
icebp
nop
ss
cmc
sahf
pop
pop
shr
lds
daa
xor
mov
ss
iret
dec
fildll
loopne
cmp
jne
or
cmp
and
inc
enter
inc
add
sub
xor
dec
mov
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xor
and
or
or
pop
jne
or
rcll
or
ja
movsl
movsb
dec
sbb
sub
enterw
dec
lret
sahf
out
inc
adc
roll
add
inc
adc
sub
mov
mov
inc
iret
pop
inc
outsb
add
sbb
popa
sahf
or
stc
sbb
adcb
xchg
add
mov
mov
sub
add
add
hlt
mov
subl
push
dec
add
pop
dec
popf
out
and
mov
add
int
fimuls
ja
sub
xor
or
inc
add
cmpsb
xchg
push
xor
jnp
jge
jbe
loopne
ficoms
push
push
jnp
cmp
arpl
cmp
loop
jb
cmpb
cld
pop
jae
add
dec
and
in
inc
xlat
int
mov
mov
push
sbb
lods
jmp
and
cmpsl
je
add
push
fsub
std
insb
jbe
mov
ljmp
lahf
mov
leave
sub
mov
cmp
decw
sbb
mov
orl
jp
sbb
and
cld
and
cmp
shl
das
dec
clc
lea
and
mov
lods
jb
pushf
jg
jl
ja
pop
pop
xchg
push
xchg
das
mov
xchg
lods
jmp
stos
inc
xchg
add
xchg
xchg
mov
lcall
js
jno
jnp
sahf
cwtl
mov
mov
push
jo
addr16
dec
rcll
shll
xor
xor
cmp
sbb
fsubrl
in
jne
movl
inc
inc
sarl
std
jne
mov
cmp
cmp
les
inc
lods
fistl
dec
cmpsl
and
xor
adcb
fwait
testb
push
pop
arpl
fwait
xchg
icebp
mov
mov
movb
pop
shrb
xor
inc
shl
into
std
call
push
fs
lock
nop
add
mov
scas
dec
in
addr16
and
stos
xchg
adc
push
aas
rolb
pop
cmc
inc
jo
cmp
or
push
call
push
pop
xchg
inc
loope
out
xchg
imul
je
inc
inc
push
leave
inc
fwait
lea
imul
lea
xchg
add
sub
jle
adc
jmp
loopne
cmpb
or
mov
inc
jge
add
ljmp
add
cld
jge
rolb
loopne
xorb
nop/reserved
sub
xchg
aam
push
push
and
lock
pop
andb
inc
push
shll
jne
mov
mov
xchg
dec
jle
pop
and
add
jle
in
icebp
and
xor
push
mov
add
jne
xor
loopne
sbb
mov
jmp
mov
push
jnp
cmpsl
cmp
iret
adcb
inc
sbb
push
es
loopne
add
jno
mov
adc
xor
cmp
adc
andb
in
or
inc
fcmovnbe
mov
mov
roll
pop
jmp
or
jmp
xchg
pop
push
dec
pushf
push
nop
dec
jecxz
push
aam
xor
xlat
testb
insb
ljmp
add
add
ljmp
sti
push
sub
or
xor
lock
add
out
outsl
and
or
sub
inc
jmp
xor
jg
or
mov
add
jns
inc
pusha
sbb
aaa
test
push
inc
jo
out
imul
stos
rcrb
sbb
push
aad
mov
popf
jmp
es
cmp
mov
push
jp
add
cli
insl
pop
pop
mov
js
std
and
push
mov
and
outsl
lret
jns
push
fiaddl
xchg
jmp
sbb
mov
lea
cld
test
mov
clc
xor
fistpll
cmpl
loope
ret
xchg
pop
ret
adc
shrb
movsl
sub
sbb
subb
push
call
je
adc
adc
mov
js
push
cmp
je
push
testb
push
cmp
lods
or
pop
sbb
mov
imul
cmpsl
nop
mov
negb
lahf
sahf
xchg
out
lods
das
adc
sbb
sub
clc
and
mov
sub
sbb
sbb
push
mov
test
je
cmp
ljmp
jle
jg
mov
or
imul
cld
lds
add
add
shrb
loope
jns
cld
add
push
pop
cmp
mov
inc
xor
sub
add
fnstsw
popa
in
addr16
inc
push
lock
jl
sub
out
add
cmp
in
jle
loope
or
sbb
jo
or
lods
xchg
aaa
mov
insb
pop
movsl
mov
jmp
xor
mov
pop
or
dec
pop
clc
ret
or
clc
mov
dec
sbb
cwtl
mov
hlt
inc
test
dec
jp
fiadds
xchg
stc
push
lods
push
push
push
inc
es
test
pop
or
push
scas
xchg
lds
out
icebp
outsl
aam
or
hlt
addb
mov
pop
test
add
inc
sub
dec
pop
pop
inc
inc
jo
movsl
adcb
inc
or
add
jg
mov
imul
jo
push
inc
scas
subl
shrb
push
xor
bound
pop
mov
and
loopne
push
imul
cmc
add
sbb
adc
loopne
and
xchg
int3
add
and
xchg
cmp
aas
cmp
test
fwait
je
adc
mov
cmp
or
xor
shr
pop
xor
pop
mov
xor
push
mov
and
sub
push
in
push
xor
inc
inc
push
in
inc
dec
mov
data16
pop
cmp
daa
ds
push
adc
cmp
dec
popf
aad
lods
and
std
jbe
cmp
clc
shll
push
sbbl
add
in
xchg
fdivs
hlt
mov
stos
xor
push
push
fnstenv
mov
or
fwait
aaa
sub
in
movl
fmuls
mov
nop
xor
movsb
cmp
mov
cmp
mov
inc
push
daa
sbb
adc
mov
jnp
mov
adc
jo
faddp
stos
cmp
mov
ja
ljmp
add
nop
or
negl
xor
push
inc
test
fistpl
cmp
xchg
arpl
mov
pushf
mov
fwait
cwtl
shlb
push
inc
sub
dec
adc
xchg
mov
adc
cmp
pusha
lods
jle
add
push
fisttps
mov
push
js
push
test
sahf
pop
js
sub
mov
lods
std
jle
push
inc
add
or
cmp
inc
outsb
pop
or
sub
jg
inc
lsl
sbb
or
ss
sbb
aas
and
sub
pxor
push
push
add
inc
sub
cmp
inc
jmp
push
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
jnp
add
xor
mov
je
xor
add
adc
sbb
add
jne
push
je
fidivs
or
inc
inc
cli
pop
pop
ret
lock
rcrl
push
mov
bound
add
out
outsb
dec
cli
shr
add
cmp
cmc
xchg
bound
push
adc
jae
pop
pop
repz
notb
cmp
in
adc
xchg
outsb
sub
es
push
int
fldt
adc
loopne
test
mov
idivl
push
or
shll
enter
or
inc
sub
jp
ret
pop
add
les
cli
push
cli
fnstcw
pop
add
add
mov
mov
dec
mov
mov
lcall
pop
mov
push
inc
sub
test
lcall
imul
rcll
xorl
dec
popa
lret
ret
xchg
push
clc
out
fdivrl
add
sbb
insb
xor
call
lock
shl
and
mov
and
add
cmp
or
xchg
out
mov
popa
les
mov
fistps
jmp
add
into
das
add
pop
popa
push
mov
push
sbb
push
dec
add
and
sbb
in
mov
jp
add
cmc
clc
jmp
adc
jmp
xlat
mov
push
xchg
imul
push
pushaw
iret
in
call
cmp
or
or
lcall
or
icebp
imul
mov
jmp
adc
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
fucom
jns
mov
dec
push
push
pop
push
sahf
jge
mov
sbb
shl
push
sahf
cmpsl
jge
adc
movsb
mov
incb
push
xor
add
pop
aaa
fnsave
mov
or
cmp
mov
xor
sti
je
push
inc
test
or
mov
sbb
and
inc
adc
loope
inc
add
lea
mov
in
je
push
cltd
jmp
inc
faddl
inc
sbb
ret
es
sar
push
jmp
test
dec
push
jmp
rcr
jg
xchg
and
ret
and
push
push
test
adc
fstl
jmp
mov
rol
aam
or
mov
aaa
andb
cmpsb
jle
mov
test
cld
divl
adc
std
xchg
hlt
das
mov
ret
jl
push
inc
sbb
cwtl
sbb
cmp
or
pushl
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
test
or
add
and
push
ret
or
push
test
ret
sarb
xchg
add
or
and
inc
adc
lds
push
cmp
push
push
enter
xchg
shll
rolb
stc
jp
mov
imul
jno
idivb
movsb
fs
rorl
sti
dec
or
mov
xchg
out
das
jecxz
insb
inc
cmp
dec
and
ds
cmp
sbb
xchg
es
mov
mov
and
fbld
fcoml
loopne
pop
lock
mov
mov
dec
dec
jnp
cmpsl
push
xchg
jne
pop
or
popa
mov
orl
xor
cmpsl
fcomps
pop
cld
jbe
mov
mov
mov
loope
push
xorb
xor
call
xchg
pop
test
mov
and
or
push
int3
je
loopne
rclb
lahf
loope
mov
insb
jne
inc
sub
pop
aad
pop
and
ss
cmpb
add
ja
cmp
inc
xor
or
and
bound
icebp
ret
lcall
loope
fstps
pop
leave
inc
inc
stc
push
mov
andl
scas
push
ret
add
das
mov
mov
lea
or
or
scas
sub
sub
popa
cmp
sbb
ficompl
mov
arpl
push
or
pop
or
mov
orb
cmc
inc
add
or
inc
lea
or
adc
cmpsl
xor
dec
push
popa
lods
vcmpsd
imull
popa
cwtl
add
in
mov
stos
mov
push
add
cwtl
xchg
stc
mov
jo
in
push
xor
add
loope
xchg
pop
cmpsl
or
int
scas
ljmp
or
add
pop
lock
je
movzwl
int
xchg
inc
inc
add
push
ja
pop
mov
pop
dec
scas
jge
enter
mov
and
push
jno
xor
mov
or
imulb
testl
pop
push
addl
and
adc
pop
sub
sub
iret
hlt
add
mov
cmp
pop
std
rol
or
ficomps
insl
pop
lock
lret
icebp
out
fisubl
lret
adc
out
or
add
and
pop
inc
pop
mov
ja
add
ja
in
jne
sub
sbb
pop
arpl
or
cmpl
mov
pop
push
xor
call
call
pop
mov
out
mov
pop
or
mov
lods
repnz
mov
rcrl
and
mov
mov
mov
inc
enter
scas
inc
imul
je
inc
pushf
inc
sbb
inc
cmpl
stos
or
shll
jmp
dec
xchg
and
inc
add
jl
bound
nop
mov
pop
mov
inc
daa
add
clc
imul
inc
jo
inc
add
pop
mov
leave
dec
xor
pushf
pop
lcall
ret
bnd
sbb
lret
inc
dec
dec
shrl
inc
mov
or
inc
nop
sbb
adc
pop
add
dec
inc
daa
rorb
inc
inc
imul
addr16
sub
test
inc
rolb
aaa
sbb
vmovntpd
mov
cwtd
or
call
dec
data16
push
push
shlb
push
nop
and
jmp
push
mov
mov
inc
push
cmc
roll
rol
imul
sti
sub
or
jmp
test
sbb
jmp
and
int3
mov
jg
mov
cmp
sbb
lahf
jmp
mov
add
and
cld
sbb
add
fstpl
fisttps
jno
push
insb
mov
adc
lods
dec
sub
add
pop
jmp
fwait
add
bound
mov
mov
dec
lahf
fstpt
sbb
push
push
push
push
mov
jle
push
imul
xchg
xor
mov
xchg
pop
sub
lock
or
cmpsb
jmp
int
daa
add
mov
inc
mov
inc
pop
cmpsl
mov
inc
lret
add
and
mov
outsb
test
bound
pop
mov
mov
mov
test
xor
xor
in
mov
cld
in
cmpsb
mov
adc
cmp
out
sahf
insl
test
cmp
out
cld
push
or
aaa
ss
stos
jmp
lea
in
dec
add
or
icebp
mov
pop
mov
jne
or
add
clc
sub
dec
sub
shlb
adc
nop
jne
movsl
divl
les
into
mov
mov
movsl
mov
stos
and
nop
xchg
mov
pop
aaa
push
mov
shrb
insb
xor
mov
nop
dec
inc
sub
or
dec
imul
mov
pop
aam
sbb
cmp
mov
mov
mov
cwtl
es
push
xor
mov
loope
jbe
jno
xor
aaa
push
aad
fstpl
pop
add
xor
add
sub
arpl
pusha
jns
adc
aad
movsl
cmp
mov
xchg
xlat
scas
mov
xlat
mov
mov
icebp
xor
mov
aam
in
adc
and
mov
xlat
inc
and
and
in
in
aad
xor
and
lds
xor
call
inc
cmp
test
inc
movsb
repnz
push
fldl2e
ja
xor
repz
mul
mov
inc
mov
nop
mov
movsl
pop
je
lret
fstpt
push
int3
es
xchg
push
and
movsb
mov
push
cmp
add
jecxz
aaa
leave
xchg
xchg
dec
in
fsubrs
outsb
or
frstor
inc
leave
push
aaa
aad
movsb
fwait
mov
and
cs
cld
mov
mov
mov
push
dec
mov
inc
cs
mov
mov
outsb
or
push
xchg
mov
in
xchg
mov
inc
je
mov
pushf
push
mov
sub
cmp
dec
ret
or
outsb
jl
jne
iret
dec
mov
push
iret
dec
mov
cltd
movsb
test
subl
add
nop
lods
lods
psllw
in
rol
adc
or
xchg
sub
hlt
adc
out
movsl
mov
sahf
rep
push
mov
test
daa
add
jnp
ss
sub
scas
or
div
mov
sahf
and
nop
popf
add
inc
inc
daa
pop
addb
clc
jo
popa
sbbl
and
push
movsl
mov
pop
xchg
or
outsl
inc
cld
pop
lea
or
pop
pop
roll
inc
mov
mov
xchg
sbbl
mov
or
jae
xor
dec
sbb
loop
stc
mov
test
jmp
lods
mov
inc
iret
cmpsl
xchg
fstpl
add
push
jg
mov
test
and
or
or
neg
rep
movsb
inc
loopne
ja
fcomps
inc
mov
xchg
testb
shlb
cltd
or
test
xor
aaa
movsb
in
lock
jecxz
lock
or
loop
inc
push
hlt
mov
dec
push
jne
loope
add
cmp
and
bound
inc
inc
sub
sarl
inc
pop
or
cmp
and
inc
hlt
repz
mov
jg
ljmp
add
push
push
dec
adc
push
and
and
out
jns
dec
push
pop
outsl
inc
or
jns
test
jbe
jle
dec
outsl
add
call
int3
in
lods
adc
and
dec
jne
pop
dec
in
mulb
xor
ffreep
dec
mov
lea
inc
out
mov
lea
lock
mov
cmp
add
cli
enter
push
inc
or
jg
pop
fildl
push
negl
ret
mov
lret
jnp
fmuls
pop
shr
dec
mov
mov
push
add
push
add
or
jb
jae
mov
pop
inc
ret
ja
or
xchg
lea
and
push
push
dec
or
sub
fsubs
sarl
sbb
xchg
push
addl
xchg
sarl
xchg
xor
stos
add
jmp
mov
sbb
xor
adc
jae
les
inc
sbb
pop
pop
inc
pushl
cld
mov
js
add
inc
adc
and
cmp
ja
push
cmp
pop
sbb
xor
and
shll
loope
xchg
pop
movsb
roll
push
cmp
lret
mov
cmp
add
xor
inc
cmp
iret
mov
xchg
adc
call
inc
fstpl
push
jno
and
jg
jo
loopne
pop
pusha
mov
dec
cld
xchg
and
mov
lock
mov
andl
or
stc
nop
in
fdivrs
fs
iret
pop
mov
cmp
scas
or
outsb
cmp
xchg
mov
dec
cmp
push
xchg
cmp
jb
push
cmp
mov
pop
or
fs
addb
movsb
xor
pop
loopne
subl
loop
dec
ret
mov
jo
jmp
or
mov
mov
dec
call
mov
test
mov
inc
or
out
and
jo
data16
jne
sbb
in
test
cltd
repnz
outsl
popa
aad
shl
push
mov
popa
outsl
loop
pop
dec
mov
outsl
xor
gs
jmp
outsl
mov
or
mov
dec
call
inc
outsb
cmp
dec
and
jne
mov
lea
pop
add
incl
es
add
pop
insb
in
dec
insb
mov
out
dec
scas
sub
in
int3
pop
xchg
inc
xchg
arpl
in
xorl
xchg
adc
rorb
push
mov
xor
mov
and
fcoms
sahf
add
movsb
pushf
loope
add
gs
cld
enter
fistl
jne
dec
push
call
push
sarb
adc
out
dec
add
sub
fidivrl
movsl
dec
dec
cmp
adc
jmp
pop
jg
add
jbe
pop
je
cmp
pop
sbb
xor
pop
xlat
mov
and
and
cmp
orb
push
mov
inc
jb
push
pop
jle
out
push
dec
in
mov
aam
and
add
sbb
or
test
or
push
mov
jecxz
data16
es
test
inc
add
mov
pop
and
mov
shlb
fstpt
mov
mov
enter
test
add
dec
lea
int3
arpl
push
push
adcb
ret
sbbl
jae,pn
jb
pop
add
and
jae
lea
add
add
jle
mov
xor
push
lock
orl
pop
and
push
test
loope
xor
std
movsl
sub
scas
negl
ljmp
push
push
je
std
pop
pop
fs
pop
clc
push
sub
lea
sub
adc
or
test
push
mov
pop
dec
mov
dec
in
push
push
pop
push
int
daa
add
fadd
mov
nop
xor
pop
pop
mov
push
dec
int3
ret
lock
fwait
negl
movw
mov
adc
movb
xor
cmpsl
das
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
mov
mov
out
push
aaa
call
imul
ret
dec
pop
scas
je
push
push
fidivrs
xorl
cmp
or
inc
aas
shlb
or
add
arpl
in
ja
push
add
andb
push
xor
cmp
or
rorb
add
nopl
into
sub
shll
adc
and
lds
adc
sub
add
pop
call
or
or
or
or
lock
push
add
xor
xor
and
push
xor
iret
incl
clc
sbb
dec
sbb
mov
decl
jne
xor
push
orb
jmp
push
incb
push
negb
or
pop
push
xchg
cmc
cmpsl
loop
and
hlt
add
inc
sub
push
aaa
lret
xorb
mov
mov
jne
mov
or
add
or
es
js
sub
mov
movl
pushf
loop
loope
js
rclb
out
push
mov
pop
idivb
add
cmp
fildl
add
dec
inc
inc
or
mov
cmp
pop
adc
fildll
dec
out
mov
les
or
xor
add
gs
dec
dec
loop
aam
xor
pop
sbb
lock
dec
xor
dec
mov
dec
into
xor
and
imull
adc
out
repz
adc
inc
or
mov
add
shll
and
jb
mov
jae
mov
add
mov
jecxz
mov
repnz
push
sbb
mov
pop
pop
push
sub
fistpl
xor
push
lock
jecxz
or
dec
bnd
sub
lea
daa
pop
mov
add
inc
push
xchg
fistl
in
movsb
cmp
shll
fidivl
das
inc
mov
xchg
das
push
push
jb
sbb
dec
xchg
es
add
push
add
jnp
incb
in
push
sbb
daa
fists
jg
xor
xor
add
jns
xlat
xor
or
ss
xor
xor
fcomip
or
mov
push
adc
adc
stc
daa
cmp
inc
jl
inc
jl
repz
test
cwtl
adc
jae
adc
push
xchg
lret
cmp
pop
addr16
fnclex
dec
sbb
xchg
dec
add
sub
lock
add
jmp
add
or
cmp
movb
or
leave
inc
sub
icebp
cli
rclb
push
mov
dec
ret
jne
lea
fistpll
sub
loope
lock
pop
lock
and
or
adc
lods
test
sbb
addb
es
es
and
push
pop
pop
test
inc
pavgw
add
dec
and
pop
push
adc
sub
pop
push
and
add
stos
sub
popf
sbb
cmp
jle
mov
dec
cmp
test
dec
inc
sub
shlb
hlt
jge
inc
push
sbb
ja
xor
sbb
and
pop
add
insl
hlt
xor
add
sbb
nop
add
insb
data16
push
sbb
std
inc
scas
adc
fcomi
aas
pop
mov
jmp
xlat
inc
xor
test
in
out
outsb
jno
dec
fcmovnbe
loopne
or
or
cmp
or
add
cmp
push
push
and
and
mov
shll
mov
jno
mov
mov
and
lock
cmp
dec
movsb
je
movl
dec
fsubr
sbb
mov
daa
imul
xor
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
mov
jo
or
addb
inc
pushf
adc
pop
lea
sub
or
adc
xlat
push
mov
int3
out
sbb
rorb
add
enter
cmp
add
jb
mov
pop
xchg
sbb
add
ret
sub
call
push
dec
or
rolb
push
or
out
xor
or
lock
mull
out
mov
add
jmp
push
pop
push
push
inc
cmp
mov
shr
rcr
or
mov
repz
dec
mov
xchg
xchg
fs
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
jle
fwait
scas
adc
or
fisubrl
lret
iret
inc
inc
pop
ljmp
xchg
sbb
cs
sarl
jbe
mov
inc
adc
pop
sbb
ljmp
add
mov
addb
divl
cwtl
jbe
icebp
insl
or
xchg
or
inc
fisttpl
shll
sub
mov
cmpsl
arpl
push
cmc
jmp
fsubrl
sahf
call
sahf
stos
jo
xchg
dec
icebp
add
out
sub
add
and
xor
in
imul
mov
xor
cmp
xchg
push
mov
push
loopne
jecxz
xchg
sarb
into
jmp
js
add
insl
xorl
push
and
pop
hlt
jo
dec
pop
sbb
adc
push
dec
and
lea
inc
inc
shlb
jmp
or
adc
and
add
and
aas
fnsave
cmc
push
pop
loope
and
lret
jo
add
lret
fiaddl
jmp
inc
adc
iret
loope
jne
nop
inc
ret
add
cmp
inc
cmp
mov
xor
sahf
cs
xor
bound
ds
nop
jns
subb
mov
pop
dec
adcl
and
push
and
lea
mov
enter
pop
or
fmul
add
dec
inc
or
nop
ret
push
aam
enter
jnp
cmp
test
and
pop
outsb
cmp
in
rcr
aaa
sub
jb
pop
inc
lods
fdivs
lcall
int3
rorb
loopne
or
ret
jnp
mov
arpl
xorb
push
pop
je
mov
push
sahf
imul
add
push
mov
xor
imul
loop
add
sub
faddl
ljmp
lds
movsb
xchg
and
pusha
popa
inc
testl
ss
mov
jg
es
jo
cmpsb
out
adc
cmp
cmpsl
sti
fadds
ret
je
mov
outsl
mov
outsl
fsubr
push
fildl
notb
xlat
out
adc
int3
and
mov
in
cmp
pop
jo
or
mov
jmp
adc
ficompl
outsl
push
pusha
jae
sub
and
dec
mov
sbb
test
inc
mov
mov
adc
dec
fmul
fcom
and
push
adc
mov
pop
xlat
mov
or
iret
push
mov
mov
adc
mov
sub
or
fwait
addr16
cmp
jecxz
imul
push
ret
mov
jl
addr16
call
inc
jmp
rol
lds
mov
cmp
imul
mov
fnsave
aas
sbb
icebp
sub
cmp
jbe
movsb
mov
or
push
dec
rorb
or
mov
out
inc
lock
xchg
rolb
xor
pop
push
ds
jae
mov
xchg
push
adc
dec
cmpl
incl
pop
popf
push
fmull
sbb
inc
push
adc
sbb
outsl
dec
gs
cmp
jge
mov
xor
jae
shlb
push
mov
pop
test
xor
orb
add
inc
scas
loope
add
sub
push
sbb
mov
fwait
push
insl
gs
jb
adc
add
dec
psubd
push
sbb
pushf
xor
mov
inc
jge
les
jl
jns
and
cmpsb
sbb
jle
fcmovnu
addb
mov
pop
mov
out
lcall
sub
adc
orl
test
orb
or
call
adc
push
gs
pop
enter
pop
testb
inc
cmp
push
gs
sub
pop
cmp
or
sbb
enter
xchg
les
mov
lock
ja
ja
mov
outsb
movsl
stc
loopne
addr16
pop
mov
adc
loop
inc
and
push
loope
add
mov
ficoml
add
add
out
sarb
adc
and
and
or
xor
mov
push
fisubrl
jo
cmp
add
mov
shr
lea
lea
or
add
aas
pushf
sti
ret
out
or
and
jmp
popl
andb
inc
ret
inc
add
pop
das
ljmp
js
adc
enter
sbb
aam
add
adc
clc
fadds
fbld
dec
clc
mov
mov
sub
test
mov
jno
add
jno
push
sbb
pop
mov
loop
mov
push
adc
movsb
pop
push
outsb
rorl
pushf
shrl
das
imul
test
push
ds
push
jo
add
cwtl
or
sub
mov
push
push
loop
mov
in
fistpll
test
mov
popa
pextrw
es
sub
sbb
mov
fst
fistl
mov
sub
sub
test
pop
push
add
push
pop
mov
pop
shlb
aad
aas
scas
ds
es
jge
addb
add
cmp
ja
or
mov
scas
call
jno
sbb
data16
ret
add
fistpl
mov
add
sub
mov
sbb
or
cmp
rorb
mul
mov
push
fwait
push
xlat
mov
add
clc
movd
fisttpl
loopne
mov
jmp
pop
add
pop
lret
lcall
cmpsb
adc
adc
jl
lcall
clc
das
cmp
push
or
jnp
pop
clc
xor
add
mov
push
sbb
pop
cmp
call
cmc
mov
lods
adcb
jae
cmp
jge
cmp
ljmp
hlt
push
dec
push
insb
cs
lea
xchg
orb
jbe
xor
cmp
stos
or
push
cmp
mov
unpcklps
push
sub
cmc
dec
ljmp
jg
inc
inc
fsubr
das
mov
inc
jmp
fdivr
popf
pushl
loop
mov
pand
cwtl
ret
cmp
jo
add
pusha
loopne
sbb
cmp
mov
dec
or
xlat
inc
mov
push
push
nop
imul
fcomps
movsb
adc
cmpsb
mov
dec
and
or
add
jl
push
sbb
bound
mov
cmp
orb
add
das
push
jmp
mov
cs
push
iret
or
ja
xchg
lea
and
xchg
push
or
add
inc
pop
sub
adc
push
cmp
hlt
add
inc
or
je
ljmp
jl
into
andb
movsb
incb
iret
jbe
movsb
andl
jmp
mov
and
in
jbe
popf
add
scas
mov
and
pusha
cld
mov
das
cwtl
cmp
jle
sub
cmp
loope
sbb
xor
inc
jmp
dec
push
and
xchg
shrb
testl
out
fimuls
adc
sbb
adc
sbb
mov
xorl
jmp
adc
insl
pop
jge
mov
mov
add
jge
movsb
es
dec
jae
imul
sbb
enter
jmp
and
scas
shlb
xchg
shr
sbb
ficoms
bound
jmp
and
cmp
dec
inc
dec
cwtl
add
pop
aaa
inc
pop
pop
push
and
shl
or
stc
sub
cmp
mov
rol
jbe
sub
mov
dec
lret
stos
loopne
je
mov
cwtl
mov
test
nop
mov
inc
cmpsl
mov
dec
cmp
ja
inc
jbe
testl
add
mov
jecxz
fldl
pop
add
dec
dec
or
iret
sarl
cmp
popf
les
repnz
and
lea
addl
push
jg
cmc
jecxz
icebp
rcll
jmp
cmp
mov
icebp
sub
dec
add
dec
jbe
data16
loope
sti
ljmp
cmp
mov
cwtl
jge
add
mov
pop
push
sbb
out
fwait
clc
mov
mov
or
adc
jmp
lahf
add
add
add
out
ds
inc
xor
jne
and
fisubl
fsts
pushf
int
cmpsb
push
add
pop
fsubrp
lods
jmp
jge
add
mov
sbbl
sbb
mov
jb
or
and
jge
movsl
add
push
pop
mov
dec
inc
mov
mov
sub
mov
lea
and
and
or
jne
inc
pop
nop
inc
push
shll
mov
xchg
pop
inc
iret
push
or
mov
or
lods
push
pop
xchg
pop
and
pop
inc
testl
mov
jne
push
les
int
adc
dec
into
sbb
jle
faddl
jne
inc
or
cmp
roll
or
int3
cmc
xchg
pop
dec
xchg
nop
adc
push
and
pop
clc
cwtl
xchg
sub
push
xchg
test
push
pushf
push
push
lea
lcall
add
xchg
mov
push
aam
add
scas
ret
xor
cmp
jb
or
mov
or
shll
incl
cmpl
or
ss
data16
or
cmp
sub
sbb
inc
jge
test
jg
add
jno
cmpsb
aaa
loop
sub
mov
sub
aam
mov
pop
mov
add
or
shr
aas
or
push
jae
mov
bound
into
or
adc
inc
mov
mov
sbb
lcall
incl
fadd
loopne
shr
or
mov
sahf
adc
xor
jne
outsb
mov
adc
cs
mov
adc
loop
cmp
inc
xchg
dec
push
sub
sub
mov
xor
add
enter
aas
ljmp
jmp
or
andl
fldenv
and
mov
xchg
pop
mov
mov
mov
loope
jl
rcrb
jmp
xchg
mov
shr
or
daa
mov
jp
lret
into
jmp
lods
jle
movb
sarb
and
jae
jno
les
les
dec
and
inc
rcrl
xorb
lret
lds
jmp
sub
test
sbb
add
xor
and
inc
lods
mov
or
call
sub
mov
icebp
out
rcrl
fdivl
int
cmp
fstl
inc
mov
aam
test
jns
sub
jecxz
sarb
or
mov
or
sub
or
add
testb
push
push
xchg
shrb
sbb
sub
mov
enter
int3
xchg
mov
int
sbb
add
adc
inc
lret
test
xor
in
pop
in
ds
fadds
dec
push
aad
lea
ret
push
popa
jne
jmp
pusha
cs
fnstenv
aam
sbb
mov
sbbb
inc
sbb
pushf
mov
jb
dec
in
and
add
test
or
add
mov
mov
pop
imulb
es
sbb
sub
mov
add
in
mov
jbe
and
fwait
jecxz
sbb
mov
cmp
testl
rcr
push
jne
jg
sub
shlb
add
push
test
xchg
lea
orl
sbb
test
clc
pusha
aam
call
jmp
push
loop
jmp
sar
push
js
xor
lret
cmp
push
adc
out
iret
cli
pusha
stos
cmp
iret
sbb
dec
sub
adc
and
push
cli
and
mov
and
in
rclb
cs
or
add
push
push
cwtl
xchg
cmpsl
push
sbb
cmp
popf
in
pop
bound
loopne
sbb
jmp
gs
in
stc
pop
test
dec
jmp
in
lret
cld
add
mov
jne
pop
in
add
testl
mov
enter
cmp
ds
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
leave
sbb
mov
sahf
add
and
lods
pop
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
jae
cmp
sbb
or
mov
push
inc
pushl
mov
jns
cmpsb
dec
jnp
mov
or
out
mov
cmp
out
inc
dec
outsb
and
mov
push
sub
xchg
add
inc
mov
mov
mov
pop
ret
add
sbb
push
add
fdivr
pop
sbb
adc
push
hlt
mov
andl
lock
cwtl
push
dec
ss
mov
adc
out
lret
add
mov
push
pusha
inc
mov
fsubs
inc
mov
push
mov
cmp
js
cmp
inc
inc
call
jmp
adc
sbb
cs
inc
outsb
mov
pop
cmp
cmpb
lea
pusha
xor
pop
lods
jnp
int
aas
mov
pusha
enter
and
push
inc
pop
mov
je
cmp
xchg
mov
jns
mov
pusha
cvtdq2ps
rcr
cmp
adc
mov
and
add
test
push
or
add
mov
mov
adc
jbe
push
cmp
test
jne
icebp
mov
pusha
xor
sarb
dec
sbb
or
mov
repz
push
jmp
icebp
and
cmc
push
es
rorb
or
push
pusha
dec
iret
test
lcall
and
pop
sbb
popf
popa
xchg
jb
call
mov
inc
mov
sbb
sbb
cmp
mov
jo
xchg
mov
rorb
mov
std
xchg
lret
out
jl
xor
fs
xor
lock
mov
cmp
jne
mov
and
movb
mov
push
and
adc
aad
gs
adc
rolb
and
loopne
fisttpll
jne
jl
mov
sub
cwtl
pusha
mov
sub
insb
pushl
jle
or
push
lea
or
pop
jbe
fs
test
in
pop
jns
adc
fiadds
push
in
or
sbbl
mov
mov
fcmovbe
pop
data16
test
imul
mov
sub
push
mov
daa
add
xor
push
lea
shrl
or
add
shlb
test
push
push
sub
xchg
jmp
push
mov
es
cmp
mov
lret
stos
loop
xchg
sbb
sub
add
adc
inc
mov
pop
mov
push
gs
adc
mov
xchg
aas
push
jae
ret
and
sbb
cmp
ret
sub
lahf
fstpl
insb
adc
sub
aad
cmp
xor
pop
popa
xchg
fidivrs
sub
rdtsc
cmpb
dec
xor
sbb
and
sbb
push
addr16
cmpsb
or
jmp
inc
loop
rcll
and
in
test
push
push
cwtl
mov
shl
inc
movsb
sub
pop
test
paddsw
add
cld
inc
mov
or
pop
pop
add
sbb
insb
fmull
popl
das
adc
mov
or
xchg
pop
push
out
and
aaa
int
int
scas
mov
pop
mov
sub
adc
data16
test
add
inc
lods
out
push
xor
jne
push
mov
mov
and
mov
pushf
push
xchg
pop
fcompl
inc
cli
mov
mov
sbb
jg
add
out
add
bound
test
loop
sbb
push
inc
add
xor
pop
mov
fisttpll
xor
or
hlt
mov
mov
cld
outsb
inc
jle
inc
mov
jmp
test
fdivrs
sbb
enter
jl
fcos
adc
and
or
clc
add
or
call
push
xor
push
lcall
add
mov
ds
ljmp
jb
inc
mov
mov
add
and
adc
enter
dec
sbb
mov
js
clc
pop
adc
push
cmp
les
icebp
xchg
xor
cmp
pop
add
inc
test
lret
xor
dec
or
lods
icebp
add
add
sub
jl
dec
js
enter
push
movsb
push
das
sub
pop
adc
scas
xchg
jg
jb
cmp
lcall
fcoms
lods
inc
mov
out
adc
sub
add
roll
push
cld
sub
mov
addr16
and
lcall
insl
pop
shl
mov
cmc
adc
icebp
les
add
pop
mov
and
sbb
loop
movsl
orl
jo
cmpsl
testl
jle
jnp
fsubs
lea
cmpl
or
push
decb
cmp
cmp
or
js
or
cwtl
push
jne
push
aas
out
int
xor
jo
mov
mov
jo
mov
fnstcw
mov
popa
pop
fdivs
lret
adc
insl
push
es
test
jne
or
jno
push
jnp
or
mov
jne
pop
push
pcmpeqw
xor
adc
out
sbb
cld
ror
or
addb
repnz
adc
fistpl
lea
ficoms
add
pop
xor
pushl
outsb
and
jmp
movsb
push
sub
enter
addb
add
int3
push
cmp
lea
add
icebp
imul
add
jnp
dec
jb
imul
dec
or
or
inc
or
dec
lret
xchg
sub
lock
imul
add
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
jge
sahf
call
xor
sarl
inc
mov
aam
nop
sbb
stos
jp
lock
nop
dec
adc
loopne
mov
je
jae
mov
movsl
mov
jl
jmp
test
xchg
inc
test
inc
sub
adc
imul
sbb
pop
lds
in
xchg
cmp
lock
cwtl
je
adc
sbb
pop
add
mov
cmp
jne,pn
push
mov
rol
inc
mov
neg
outsb
dec
fcoml
les
sbb
or
movsb
mov
sub
mov
push
push
icebp
mov
fwait
xchg
add
loope
jmp
cwtl
les
jns
and
aaa
test
and
sub
adc
push
adc
fs
ret
orl
sbb
inc
jp
inc
cmp
roll
dec
out
sub
adc
xor
dec
sbb
inc
pop
stos
mov
add
push
adc
bound
stos
loop
mov
push
pop
sbb
add
push
hlt
push
or
loop
mov
jb
ljmp
cmp
inc
stos
sub
push
and
lahf
pop
adc
push
cltd
mov
add
cs
or
adc
inc
popa
clc
cmp
into
add
mov
adc
add
xor
in
andl
daa
push
xor
add
out
and
insb
mov
add
and
push
loopne
loop
jg
addl
add
repz
pop
dec
nop
je
call
push
ret
jo
les
lret
xchg
lods
mov
dec
cmp
movsl
loopew
jge
pushf
aaa
sub
inc
pop
insb
jmp
xchg
fcompl
push
xor
pop
lret
in
lret
insb
xchg
push
cwtl
fsubr
sub
xor
push
daa
sub
or
js
cmp
mov
mov
jp
inc
pop
ljmp
es
cmp
lock
imulb
xorb
mov
orl
inc
xor
test
icebp
movsb
mov
test
ja
cwtl
pmaxub
push
mov
cmp
nop
daa
sti
adc
cmpsb
mov
xor
dec
lods
loopne
jge
jne
mov
sbbl
dec
jne
stos
pusha
stc
gs
sub
jnp
je
movl
or
jle
add
dec
test
aaa
mov
je
or
mov
arpl
enter
jns
mov
cltd
and
les
inc
hlt
jg
cmp
mov
lods
push
int3
outsl
addr16
fs
xchg
movsb
loop
push
ret
in
sub
rcll
sbb
orb
leave
je
das
test
in
test
lds
pop
sbb
inc
dec
and
push
jnp
or
xor
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
dec
sarb
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
xchg
dec
es
rol
dec
xor
fs
sarb
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
and
or
es
ficoml
adc
fs
dec
and
fs
dec
es
xor
dec
es
cmp
gs
inc
es
inc
dec
dec
mov
dec
xor
pop
adc
xor
pop
pusha
sbb
mov
jg
push
cmpsb
dec
shlb
popl
cs
and
dec
cs
pop
sub
cld
push
mov
shrl
xchg
xchg
mov
jb
adc
nop
adc
pop
cs
and
and
and
cmp
cmp
mov
cs
inc
les
adc
push
sar
dec
enter
pop
dec
pop
or
xchg
adc
push
test
js
ret
lcall
icebp
or
or
movsb
xor
mov
loopne
mov
sahf
or
and
test
xor
pop
add
daa
lods
test
fadds
fiadds
push
inc
add
dec
pop
idivb
test
and
add
popf
inc
cs
or
arpl
out
xchg
and
fdiv
shll
dec
xor
adc
in
mov
or
shr
xchg
fcompl
in
shr
and
jo
and
and
aam
js
in
test
adc
enter
adc
add
test
hlt
mov
xor
ss
or
push
mov
rol
sbb
clc
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
or
jmp
jp
adcb
loopne
movhps
cli
xor
sub
aaa
enter
jge
je
pop
loope
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
jmp
mov
lret
pop
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
push
aaa
mov
xor
pusha
jnp
testb
in
mov
or
add
mov
out
test
fisttps
xchg
sub
mov
mov
das
sub
add
jne
orl
and
or
jle
outsb
fs
testl
inc
or
adc
imul
push
and
or
push
or
popf
xor
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
mov
add
jbe
in
pop
sub
jmp
adc
push
push
imul
test
or
cmp
mov
jge
push
inc
call
sbb
push
aaa
sbb
out
sbb
es
xchg
dec
jmp
sub
fstpl
sub
jmp
sub
outsb
das
pop
jb
or
jmp
push
shrb
into
xor
leave
xor
scas
mov
mov
cmpsl
adc
rorl
mov
and
and
adc
les
roll
push
mov
sbb
cmp
sarb
repz
jmp
addb
mov
xchg
scas
add
enter
imul
xchg
push
jmp
dec
mov
cwtl
clc
mov
in
test
mov
dec
cmp
sbb
nop
loopne
ss
jle
push
or
jmp
pop
cs
icebp
daa
in
orb
push
pop
add
or
xchg
mov
daa
cs
or
mov
sbb
aam
adc
jg
aaa
int3
dec
movsl
sbb
and
cmp
lret
mov
jmp
adc
repnz
lods
dec
ret
add
inc
pushf
mov
add
mov
ret
pop
jno
pushf
clc
cmp
je
mov
aaa
push
outsb
sbb
pop
imul
add
or
pop
or
sbb
sbb
hlt
mov
cltd
and
cmp
inc
sub
ds
pop
aaa
push
cmp
or
pop
mov
xchg
mov
pop
xor
jmp
jbe
jp
jno
leave
dec
inc
divb
and
lock
lcall
xchg
add
testl
jo
sub
adc
adc
xor
mov
mov
fmull
lock
imul
add
aas
fmul
adc
pushl
dec
or
lods
add
and
inc
loopne
ja
push
das
adc
xchg
popf
inc
in
popf
cltd
xlat
mov
mov
fs
xor
add
mov
cmp
inc
and
add
push
push
andl
jo
mov
loopne
jecxz
into
jmp
cld
in
add
cs
sub
or
add
jp
add
shufps
mov
push
dec
lret
lock
or
mov
arpl
sbb
incl
add
push
mov
dec
fsubs
into
pop
mov
jo
mov
sbb
mov
test
mov
sub
enter
aam
dec
out
fld
fucomp
pop
fnstcw
pop
out
mov
dec
and
xor
test
pushf
push
xor
and
mov
test
pushf
ficompl
push
or
dec
shl
lret
rorb
push
or
push
out
jmp
loop
mov
push
pop
je
mov
or
push
and
ficoml
es
sub
or
mov
push
push
push
movsb
loope
imul
cld
mov
enter
jnp
fnstsw
movswl
lret
sbb
loop
clc
or
cmpsb
inc
fstps
sub
sub
not
dec
xor
cmpl
mov
inc
jl
cwtl
or
sub
sbbb
fwait
test
fsubs
loopne
ficompl
fwait
sbb
adc
jo
pop
mov
fdivp
jle
pop
cwtl
jb
movsb
fldpi
xor
adc
rcl
mov
push
je
sbb
mov
ss
fistl
adc
mov
cmp
or
xor
or
xchg
out
jmp
and
and
loopne
insl
mov
push
jg
xchg
sub
and
mov
test
mov
dec
lds
in
jbe
jo
dec
inc
movsb
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
sub
mov
sahf
adc
push
ja
inc
mov
test
sub
adc
mov
pushf
xlat
int3
pop
inc
add
in
inc
or
sub
lock
add
jo
jmp
lods
xchg
je
or
aam
mov
push
push
dec
push
pop
push
sti
xchg
out
xchg
rcr
ret
push
and
cmp
stos
popa
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
or
jge
add
pop
std
cmp
into
xchg
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
mov
xor
sti
add
icebp
inc
push
and
daa
mul
pop
test
loopne
fdivs
jl
insb
jecxz
jp
push
in
lock
stos
cli
and
jbe
stos
pop
pop
add
push
inc
xor
sub
or
jle
inc
cmp
mov
add
inc
pop
add
stos
andb
aas
es
ret
dec
or
inc
lea
icebp
xchg
inc
push
pop
sub
inc
shrl
mov
xorb
push
jg
jnp
pop
sub
call
loop
rolb
cmpl
add
outsb
out
pop
pop
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
mov
cmp
sbb
and
clc
sbb
popf
dec
call
jne
shrl
bound
pop
das
push
jae
and
inc
rolb
mov
sahf
jns
or
adc
lock
mov
mov
sqrtps
scas
pop
jge
lea
sub
and
jge
je
inc
in
xchg
xor
rcl
mov
pop
or
cmpb
or
mov
xchg
push
inc
aam
push
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
and
push
fdiv
jp
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
inc
dec
or
inc
pop
leave
adc
incb
sub
mov
sbb
mov
inc
ret
or
jns
jb
pop
push
pop
dec
lea
mov
movsb
bound
faddl
jge
or
sbb
test
popa
lods
sub
push
mov
into
loopne
xchg
push
rcrl
dec
aaa
icebp
cmp
cmp
push
cli
push
add
cmp
pop
push
push
jb
arpl
push
incb
enter
pop
mov
cmp
and
jo
ss
hlt
push
arpl
sub
cmp
inc
mov
fstpl
movsb
jcxz
mov
adc
cmp
arpl
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
push
add
pop
jle
or
fildl
pop
lock
mov
push
push
adc
push
lret
clc
pop
push
lock
and
jo
mov
adc
push
mov
push
dec
push
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
lcall
rolb
dec
inc
cwtl
pop
mov
lahf
dec
aaa
adc
call
xchg
add
jb
push
push
outsl
mov
js
inc
mov
mov
lea
inc
outsb
repz
add
test
add
pop
mov
sub
mov
cmp
insb
inc
imul
sahf
cs
or
ss
cmp
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
add
incb
dec
mov
inc
inc
mov
xchg
imul
call
and
fistpll
enter
arpl
sub
or
sub
sbb
inc
sbb
mov
rorb
mov
rorl
xchg
es
les
aam
add
popf
pop
fcmovu
jge
add
adc
jno
adc
dec
in
test
jle
testb
sub
xor
fadds
loopne
jne
xlat
mov
or
jbe
or
add
lds
cmp
cmp
xor
push
pop
sbb
out
sbb
rorb
xor
adc
sub
js
add
mov
popf
and
aas
sub
or
pop
add
xchg
rorb
jle
or
cld
mov
inc
or
pop
push
cli
sbb
add
add
imul
add
fbld
jmp
sub
add
cmp
ljmp
hlt
and
push
push
je
das
mov
fadd
enter
inc
add
adc
push
inc
push
mov
add
aas
and
add
enter
into
xchg
mov
xor
mov
inc
andl
push
jo
push
mov
add
cs
test
push
mov
xor
sbb
pusha
sbb
iret
test
daa
iret
ret
jmp
and
push
xchg
xchg
sub
adc
mov
xchg
push
addb
xor
and
push
sbb
aam
push
test
and
push
jmp
xorb
push
jne
push
clc
xchg
pop
xchg
and
push
fadd
dec
xor
xor
xchg
les
dec
push
mov
fcoml
in
js
and
movb
fdivrs
imul
adc
push
or
add
dec
ficoms
cld
push
and
movsb
jae
push
rcll
enter
push
insl
test
incb
adc
js
mov
dec
push
outsl
or
xchg
adc
or
sub
jbe
sub
test
sbbb
add
mov
fucom
or
add
in
push
js
popf
popa
xlat
ljmp
leave
and
add
insb
movb
fists
ficomps
enter
mov
cwtl
js
popf
neg
sbb
mov
stos
cmpsb
and
das
mov
icebp
adc
jg
ret
add
shll
es
xor
xor
sub
cli
in
call
mov
mov
jb
dec
adc
mov
packssdw
or
mov
shlb
sub
or
push
push
hlt
nop
adc
mov
sub
adc
mov
call
clc
sub
sbb
pushf
pop
xchg
rol
fsubrs
xor
xor
dec
test
pop
fs
pop
ljmp
lods
enter
inc
pop
pushf
dec
inc
es
cmp
mov
scas
sbb
clc
cwtl
xor
pop
data16
jmp
in
inc
and
xor
out
or
into
in
cld
sub
push
or
rorl
inc
call
insb
dec
sbb
xor
adc
add
adc
xor
jo
imul
js
mov
push
and
sub
ja
in
sbb
js
jg
xchg
fidivrl
xor
jmp
mov
sub
fimull
jl
loope
adc
cmp
fs
xchg
sub
add
mov
jg
and
lock
sarl
push
lea
xlat
jg
mov
jb
lods
dec
dec
inc
dec
pop
or
test
cmpb
rcrb
add
and
jnp
push
lods
ja
fldcw
dec
adc
loope
mov
icebp
rcrl
xlat
fsts
add
shufps
cmp
or
jp
fimull
xor
xor
sbb
jle
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fiaddl
mov
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
and
and
sbb
sbb
jmp
sbbl
fs
push
divb
push
cmp
push
push
xchg
inc
out
sub
sub
add
test
xor
enter
push
pop
lods
insb
lods
push
dec
push
mov
dec
out
sbb
jl
aaa
loop
sub
inc
or
and
push
add
popf
jmp
push
pop
je
lea
inc
nop
fstps
sbb
mov
or
pop
data16
inc
fwait
repnz
popa
je
bound
fwait
push
inc
je
dec
sbb
xchg
cld
xorb
jge
pop
adc
adc
popf
sbb
je
adc
movsb
adc
push
inc
or
push
inc
das
mov
popa
imul
sti
aaa
or
mov
inc
shl
insb
mov
mov
ret
arpl
test
mov
mov
inc
test
imul
mov
xchg
lret
ds
push
adc
test
cmpb
jne
int3
fidivs
sub
nop
fisubs
sarl
test
hlt
adc
clc
insb
ja
adc
push
popf
pop
push
aaa
cmpsb
loopnew
cmp
add
or
sbb
je
mov
hlt
ja
in
inc
push
popa
push
adc
or
incl
ljmp
fdivrl
sub
mov
cmc
add
xchg
add
push
loope
mov
push
xor
roll
push
mov
adc
xor
push
lret
sbb
sub
and
push
data16
addb
jg
cs
std
ret
push
push
pop
mov
inc
ljmp
sub
fidivrs
dec
insl
outsb
dec
hlt
or
cmp
and
or
mov
mov
mov
pop
inc
mov
rol
xchg
adc
jmp
insl
imul
iret
fwait
xchg
xor
mov
adc
clc
cmpl
pop
inc
mov
or
push
sbb
dec
push
mov
xchg
cmpb
jmp
orb
or
mov
pop
dec
jecxz
add
shrb
dec
add
cmp
enter
loope,pn
test
jb
adc
test
popaw
andb
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
mov
ret
lcall
test
and
outsb
arpl
sbb
add
add
rcrl
and
sahf
andb
or
int3
or
imul
das
xor
or
inc
cmp
pop
add
mov
mov
das
adc
cmp
dec
mov
pop
cmp
je
mov
mov
fstpt
insb
subl
push
ss
or
dec
sbb
mov
pop
xor
lcall
push
adc
fiaddl
imul
nop
lcall
cs
cmpl
arpl
or
cmpl
add
xchg
or
pop
dec
add
xor
inc
add
cmp
inc
jecxz
add
call
test
dec
add
sbb
lret
and
jmp
cmpb
out
pop
add
or
mov
mov
iret
mov
imul
pushf
push
push
adc
test
and
add
notb
jl
mov
lock
cmp
mov
movsl
and
cmp
leave
movsl
inc
jbe
add
jl
in
dec
lods
adc
sbb
cmp
or
dec
pop
adc
lcall
sti
and
push
sbb
dec
fidivrs
into
sahf
adc
adc
sub
xor
inc
sub
into
lret
clc
xorb
dec
movsb
dec
and
nop
dec
pop
movsb
fxch
shlb
outsb
lcall
xchg
mov
gs
and
add
mov
cmp
cli
adc
push
ficomps
adc
loope
pusha
sub
adc
clc
mov
add
loop
pop
add
mov
add
cli
jne
cmpsl
push
movsb
dec
push
sbb
cmpsb
or
mov
push
or
pop
lea
hlt
je
data16
sub
popf
daa
dec
mov
push
ja
mov
insb
subl
sub
sahf
xor
popa
xchg
adcb
inc
sbb
je
repnz
mov
fwait
push
test
loope
icebp
cmpsb
mov
pop
dec
pusha
je
jns
lea
repnz
sub
mov
popa
cwtl
ret
xchg
test
nop
addl
lret
pop
lret
xchg
insb
xchg
test
dec
jo
cmp
and
mov
inc
cltd
sub
or
add
push
add
inc
sbb
cmp
stos
test
or
ret
nop
cmp
stos
jo
test
emms
and
sbb
inc
sub
fildl
pop
cli
add
movsl
add
loope
jp
pop
sub
mov
fldl
ljmp
inc
daa
outsl
das
pushf
outsl
inc
xchg
icebp
add
fimuls
adc
in
int
inc
lcall
dec
mov
or
dec
popa
sub
mov
adc
xchg
lods
push
pusha
insl
popf
mov
scas
stos
and
add
aam
sbb
add
pop
je
add
xchg
and
pop
int3
or
icebp
add
inc
sbb
movsb
cmc
jbe
dec
cmp
mov
hlt
add
jno
loopne
mov
negb
add
jecxz
pop
call
and
jmp
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
adc
repnz
popf
mov
pop
jecxz
lock
mov
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
lea
sbb
out
movsb
adc
cmpsb
sbb
bound
pop
mov
frstor
jmp
sbb
xor
cmpb
call
idiv
xor
add
rolb
fstl
push
popa
nopl
inc
cmp
inc
push
mov
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
mov
cmp
aam
cmp
sub
jmp
rcrb
xchg
xor
adc
lret
imul
inc
dec
add
jbe
out
dec
fdivr
into
adc
rorb
push
cltd
or
adc
and
xor
clc
out
roll
leave
add
or
je
mov
iret
push
add
mov
or
and
je
sub
fs
sub
sbb
pop
bound
sbb
jne
enter
inc
dec
test
add
pushf
xchg
add
loopne
inc
aaa
add
adc
out
clc
add
add
xor
push
or
inc
xchg
add
or
xor
inc
inc
push
neg
neg
sbb
and
repz
sub
inc
sbb
add
sbb
mov
addl
adc
jae
push
inc
sbb
push
push
inc
and
fnstenv
nop
dec
sbb
adc
or
sbb
mov
jbe
adc
dec
jns
mov
push
push
pop
pop
pop
aam
loop
fisttpl
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
jg
add
adc
push
idiv
and
jl
cmpsl
enter
cld
lock
je
cmc
bound
cmp
inc
add
aaa
icebp
fiadds
lret
inc
into
movsl
push
pop
pop
add
stos
shlb
lahf
push
test
in
adc
movsl
jo
xor
test
push
or
aad
loope
inc
xor
jbe
aas
xchg
pop
cli
addb
aam
push
aas
in
or
push
cmp
push
push
jge
mov
dec
inc
mov
outsb
out
nop
add
or
paddusb
mov
lret
mov
pop
ret
cmp
add
xchg
leave
gs
inc
jmp
das
ljmp
add
imulb
push
xchg
or
adc
sahf
cld
inc
ss
adc
push
nop
aaa
dec
sub
cmpsb
sti
add
add
addl
fstl
mov
mov
xlat
into
enter
pop
imul
cmp
add
xor
gs
clc
or
enter
xor
test
adc
xor
xlat
ret
push
orb
mov
mov
mov
sar
or
es
mov
je
std
mov
jl
out
push
cmp
ja
add
cmp
pop
dec
cli
out
ret
cmp
jne
shll
leave
hlt
adc
mov
or
and
pop
pop
je
and
cmp
xor
orb
sbb
shrb
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
jne
call
and
cmp
dec
add
ret
es
xadd
mov
or
ret
movl
add
inc
aas
add
test
ficomps
mov
mov
push
adc
jne
xchg
cmpl
mov
aaa
add
adc
insb
jl
inc
jb
xchg
out
fstpl
jmp
andb
sbb
pop
cs
push
movsb
jnp
je
mov
sbb
push
fwait
mov
mov
push
imul
aas
mov
shr
shr
xchg
out
adc
rorb
or
lcall
movswl
mov
lods
ja
neg
push
es
ljmp
mov
cmp
mov
call
inc
cwtl
inc
xorl
sbb
mov
add
jmp
addr16
or
cwtl
mov
push
or
jb
jl
mov
or
dec
jle
repnz
in
inc
xor
adc
mov
mov
mov
and
and
lea
lods
jb
scas
inc
xor
cs
push
rcll
into
sahf
cmpb
repnz
addr16
mov
stos
loopne
xor
and
leave
out
inc
testl
push
jnp
lods
fs
inc
push
xor
cli
mov
cmp
mov
and
lea
rolb
adc
sahf
inc
mov
sub
push
les
dec
or
xor
or
dec
or
xorb
movsb
xor
inc
adc
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
mov
rol
add
jae
cmp
add
cmp
bound
shll
mov
add
shr
or
and
addr16
or
sbb
push
shrb
jg
or
pushl
mov
mov
mov
jbe
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
dec
dec
lret
pushf
jp
jnp
movsb
cmpsl
cmc
cmp
and
dec
in
repnz
add
xchg
cli
cli
inc
cli
div
rol
or
ret
pushf
jbe
test
push
movsb
cmpsl
and
fcom
fiaddl
test
sbb
mulb
cli
adc
push
sbbl
sub
dec
push
mov
pop
dec
fcoml
xor
and
and
pop
scas
push
mov
insb
lret
out
je
enter
mov
lock
inc
mov
stos
fidivs
or
pushw
sbb
loop
dec
inc
sar
out
jge
shl
jo
out
enter
pop
mov
mov
lret
dec
in
aam
imul
mulb
ss
shlb
adc
xchg
fdivrs
aam
int3
or
jbe
dec
sub
pop
cmpsl
or
mov
sbb
adc
cmpsb
xor
adc
test
fmull
or
mov
xchg
lret
sbb
fcmovu
mov
mov
insl
test
dec
movl
jg
add
add
add
xchg
add
idiv
adc
xchg
adc
jg
mov
dec
and
dec
gs
lock
out
or
add
enter
pop
jge
dec
inc
lock
or
cmp
jne
sub
add
mov
out
loopne
sbb
mov
pushf
pusha
mov
pusha
add
popa
mov
push
sbb
sub
aas
and
lock
sbb
movb
jmp
xor
add
pop
outsb
call
xchg
sub
dec
cltd
and
or
mov
shl
rorb
shrl
cli
pop
xchg
pop
adc
mov
xchg
fcoms
xor
fiadds
fsubrp
jle
inc
imul
jmp
xlat
pop
je
loopne
call
mov
or
pop
add
and
mov
push
in
pusha
insl
adc
fisubs
out
pop
sti
cmpsb
fwait
aad
add
mov
pop
orl
inc
les
enter
cli
into
or
movsb
or
pop
jb
mov
lahf
ljmp
aad
add
enter
sahf
mov
test
add
sub
test
mov
es
add
sarl
sbb
or
mov
inc
ljmp
jmp
add
push
std
jmp
add
inc
cmpb
or
add
dec
cmp
add
dec
add
add
fadds
add
inc
jp
push
call
jnp
dec
jp
jne
dec
mov
jb
int
addb
push
cmp
dec
push
loope
in
jbe
pusha
sub
cs
lret
or
rcll
jp
ret
adc
inc
or
mov
add
add
test
or
adc
stc
lret
xchg
push
mov
push
lods
push
xchg
adc
adc
or
repz
add
pop
push
movsl
es
jne
or
rorb
ret
sbb
adc
xor
test
mov
and
mov
xor
or
xchg
adc
inc
bound
sbb
sbb
inc
pop
mov
mov
pop
and
cmp
xor
into
pusha
sbb
sbb
inc
and
sub
and
pop
pop
adc
cmp
prefetch
lds
sahf
inc
ret
or
xor
addb
ror
and
mov
or
or
adc
and
push
pop
push
ja
push
or
or
mov
mov
or
xlat
or
push
pop
sub
jae
push
jo
xchg
adc
jne
and
sbb
fucomip
mov
shrl
clc
dec
jge
out
and
arpl
shrb
cmp
sbb
inc
add
cmc
add
nop
clc
mov
add
push
and
je
jnp
push
iret
enter
push
scas
adc
and
or
mov
xchg
orb
adc
xchg
rcl
or
add
add
stmxcsr
ds
pop
test
int
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
test
mov
and
outsb
lds
pop
sub
push
pop
xor
aaa
nop
pop
sahf
pop
mov
aam
pop
stos
adc
shlb
or
sbb
stos
cmp
pop
add
adcl
lods
sub
loopne
pop
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
mov
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
mov
loop
sti
adc
mov
add
popa
sub
in
mov
add
add
clc
sbb
push
mov
lret
push
pop
jbe
mov
scas
jbe
jnp
push
sarl
xchg
in
hlt
lret
xor
jge
and
jns
je
fldenv
mov
cmp
js,pn
add
pop
fdiv
jle
push
sahf
add
sbb
mov
jno
sbb
stos
je
dec
sub
mov
outsb
cmp
je
mov
stos
test
repnz
mov
iret
adcb
cmp
jb
cmp
jbe
dec
sub
enter
jmp
push
mov
cs
loopne
mov
fisubrl
cmc
fldl
or
mov
cwtl
push
or
and
mov
test
stc
gs
jle
mov
adc
add
popa
test
pop
mov
push
es
aam
mov
pop
inc
adc
inc
punpckhdq
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
push
aaa
sbb
pop
and
test
ret
xor
mov
enter
xchg
notb
sbb
cmp
lret
xor
push
roll
cltd
dec
pop
or
jne
subb
rcll
test
ljmp
sub
cmp
cs
aam
jne
sbb
sub
fsubrs
mov
or
ret
cmp
adc
mov
add
scas
pop
push
outsb
daa
fsts
adc
sar
xchg
pop
fisubs
mov
pop
test
mov
mov
lds
pop
notl
dec
loope
cmpsl
dec
sub
adcb
dec
mov
in
sub
lahf
inc
ret
mov
loope
aaa
dec
adc
and
push
pop
mov
inc
orl
call
add
push
ret
pop
or
hlt
cmp
pushf
sbb
pushf
inc
sub
stos
dec
or
into
pop
mov
mov
cmpl
mov
mov
push
cmp
imul
in
mov
clc
cli
jno
outsl
pop
xchg
add
jg
iret
rcrb
mov
gs
nop
push
mov
loopne
mov
jnp
iret
cs
adc
pop
call
cmpsb
lock
lea
mov
movsl
enter
fldt
test
incb
add
adc
jae
loop
das
adc
mov
lea
jmp
dec
fs
movsb
fcomip
sub
adc
ss
inc
mov
jae
ja
and
xchg
aam
add
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
sub
dec
jae
xor
push
mov
cld
inc
mov
sub
add
daa
arpl
inc
ss
or
push
je
insb
sbb
hlt
decl
xor
je
jg
orl
aam
inc
pop
scas
adc
xchg
jnp
pop
test
jecxz
cmp
jbe
test
lock
adc
imul
mov
lret
pusha
pop
rorb
mov
jns
push
sbb
mov
in
repnz
mov
inc
jbe
lods
lea
pop
nopl
cmp
fcomps
fs
sub
daa
data16
adc
out
loopne
jge
pop
call
les
pop
xor
test
sbb
and
sahf
or
xor
dec
push
rcll
push
lods
and
loopne
cmp
loopne
dec
pushf
jmp
or
popa
mov
jmp
clc
outsb
leave
push
pusha
xor
enter
mov
pusha
or
adc
xor
mov
sub
pop
jmp
js
inc
adc
ret
clc
sub
mov
add
mov
dec
inc
cmpb
sar
xor
sbb
dec
pop
push
and
mov
mov
cwtl
pop
sub
je
push
ret
pop
rol
rorl
cmp
stos
es
rorb
adc
ret
cmpsl
loopne
sub
or
out
xor
in
add
cmp
xchg
lods
add
xorb
imul
test
push
inc
dec
scas
push
pushf
ret
sbb
fimuls
sahf
dec
xchg
push
add
pop
test
ror
int3
jmp
fadds
add
add
sbb
push
and
rcrl
sbb
insl
loop
push
loopne
jmp
pop
xchg
or
cmpsl
test
popa
fs
or
mov
in
les
adc
and
add
outsb
mov
insb
add
les
cmp
mov
jo
cld
adc
pushf
dec
cwtl
mov
xor
push
aaa
call
dec
lret
or
push
mov
jp
insl
dec
or
into
inc
mov
xor
jns
js
rclb
addl
shl
adc
dec
add
add
dec
es
lock
fwait
mov
repnz
lods
dec
add
sbb
pop
xor
mov
or
pop
outsb
insl
clc
pop
popf
dec
insl
and
popf
and
jne
shrb
call
push
dec
sar
fwait
add
push
aam
pop
pushf
enter
or
cmpsb
mov
add
mov
sub
adc
sbb
fisttps
xor
mov
xchg
std
data16
xor
inc
and
jg
sbb
push
xchg
jmp
pop
sbb
adc
in
adc
pop
adc
cli
adc
inc
xchg
cmpsb
test
adc
xchg
shlb
xchg
cs
push
jmp
arpl
imul
dec
pop
sub
fidivrl
fiaddl
ja
mov
jmp
jb
add
push
mov
jb
das
inc
imul
add
xchg
jge
cmp
sub
add
sub
jge
clc
push
jg
adc
mov
sbb
cmp
ja
fidivl
jge
aaa
pop
inc
pusha
lds
xlat
cwtl
xchg
pop
das
push
xchg
add
mov
daa
push
inc
jmp
sub
or
mov
repz
dec
test
sub
xchg
std
jg
adc
lock
or
ds
push
add
fldl
add
icebp
cmp
push
pop
pop
test
add
shlb
or
call
inc
int3
into
lock
fadds
sbb
dec
and
dec
mov
mov
lea
add
xor
sub
movsl
push
cmpsb
repnz
jmp
push
and
nop
and
jmp
push
insl
jne
jb
lea
or
lock
jp
test
js
or
sbb
sub
push
add
pop
fs
popf
or
test
sbb
in
sub
or
xlat
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
lcall
xchg
fistpll
sbb
mov
sahf
adc
adc
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
xchg
shrl
jp
fldl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
mov
jmp
testl
rcrl
cmpsb
jo
mov
inc
xchg
cmp
popf
imul
push
and
and
inc
sbb
inc
lea
xor
cmp
mov
mov
inc
call
mov
pusha
jno
push
sbb
test
pop
shrb
mov
push
je
ret
pusha
mov
ret
bound
mov
mov
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
js
loop
es
sbb
xor
push
jmp
call
loopne
add
or
cmp
xor
push
push
add
adc
jle
or
pop
jg
insb
pop
inc
push
add
fs
pop
jl
mov
mov
sti
outsb
mov
xchg
rcrb
lods
push
or
adc
sbb
xchg
icebp
iret
loopne
inc
addl
adcb
sub
cwtl
fldcw
cld
or
inc
add
jo
stos
test
pusha
push
les
add
mov
mov
shl
aaa
loope
fsubs
insl
cmp
and
and
nop
adc
jnp
push
lods
inc
xchg
push
es
loope
mov
and
cwtl
ret
cmpl
dec
cmpsb
pop
adc
jne
jle
inc
or
sbb
push
sbb
dec
and
adc
cmp
shlb
mov
lock
das
adc
mov
add
test
push
cmpsb
jmp
and
pop
pop
push
jo
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
movsb
push
scas
out
rcrb
fistl
lock
inc
or
sbb
repnz
mov
inc
xlat
in
mov
cmp
adc
push
or
dec
push
mov
and
mov
faddl
or
cmp
ds
dec
inc
pop
ja
pop
or
js
stc
repnz
and
add
das
insb
push
cmp
es
xchg
cmp
jbe
js
jle
pop
inc
jb
dec
mov
pop
je
and
cmp
pop
mov
pop
sarb
xor
dec
rorb
fisubl
ljmp
jmp
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcrl
jmp
outsl
sub
mov
testb
xchg
imul
sbb
push
add
add
or
shrb
cmp
in
test
inc
pop
adc
adc
cmp
jg
cmp
je
dec
jne
push
xor
jno
mov
jo
push
or
sbb
sub
inc
xor
cli
add
je
adcl
push
sahf
or
push
les
mov
aaa
add
std
lds
enter
inc
test
inc
cs
arpl
and
mov
or
dec
addl
je
mov
xchg
jns
mov
or
in
xchg
loopew
inc
sbb
xor
lock
sub
and
mov
in
xchg
inc
mov
lods
jle
testl
loop
mov
loop
fstpl
cmp
lret
cmpsl
clc
push
lea
je
add
aaa
jl
xor
mov
add
fimuls
xchg
push
hlt
jle
cmpb
sub
or
imul
add
xchg
mov
push
xor
add
fcmovb
mov
sub
jb
arpl
xor
sbb
push
push
dec
sbb
pop
mov
stos
sub
and
jl
enter
adc
mov
ret
add
and
cltd
sbb
xor
pop
imul
das
or
adc
sbb
adc
shl
sbb
scas
leave
test
xchg
pushf
push
cmp
mov
and
mov
mov
xor
and
or
rcll
or
dec
sbb
lret
mov
sbb
fs
cs
lock
jle
sahf
mov
sti
jecxz
add
cmc
xor
inc
mov
cmp
jne
sbb
adc
call
push
pop
imul
cmp
sbb
jg
add
imul
mov
xchg
mov
leave
test
imul
sub
dec
add
push
jmp
mov
inc
lock
or
hlt
movsb
or
lock
out
nop
lea
dec
adc
fcomps
jbe
and
and
daa
fdivl
lea
sbb
nop
ret
add
dec
push
movsb
popa
fstpt
adc
orl
jg
jmp
adc
rorl
shrb
lret
and
es
add
adc
cmp
jo
mov
jb
or
cmpsl
push
mov
mul
inc
scas
gs
pushf
cmpsl
or
shlb
jg
pop
mov
jae
scas
sub
push
js
jno
and
imul
sub
inc
bound
rcl
and
mov
unpcklps
or
cmpsb
inc
shr
adc
and
es
lret
jo
test
push
adcl
mov
cmp
or
xor
sub
aas
out
pop
mov
mov
xlat
je
sbbl
es
mov
and
cmp
jb
testb
rcrb
add
cmp
cs
or
sub
jge
push
jmp
inc
push
mov
cwtl
and
jb
mov
push
cmp
sbb
mov
sub
pop
adc
daa
clc
push
push
or
or
push
cwtl
sub
mov
xchg
xchg
cmp
xor
push
movsl
mov
jne
daa
push
adc
pop
or
sub
and
dec
outsb
sbb
test
sahf
test
shlb
pop
es
jmp
jle
sbb
jle
push
inc
pop
pop
cltd
mov
iret
pop
jnp
or
sub
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
adcl
jle
test
je
push
inc
mov
adc
and
sub
push
mov
add
sub
xor
jb
xor
jne
add
adc
add
add
cmc
mov
pop
sti
adc
xchg
lock
int
out
movsl
cltd
add
aaa
cmp
push
push
inc
stos
mov
outsb
adc
push
inc
shlb
fcmovu
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fcomip
fildll
mov
sub
clc
jbe
pop
cmp
jmp
cwtl
mov
xor
aaa
and
add
pusha
loop
ret
sub
adc
enter
ficompl
adc
ret
fstps
adc
pop
push
or
mov
and
pusha
mov
mov
xchg
mov
xchg
nop
or
sub
aam
dec
in
sarl
jge
inc
jmp
xor
ret
jg
in
jb
movsb
fdivr
sub
push
cmpsb
jmp
dec
ss
outsb
daa
daa
cmp
fnstcw
lock
add
inc
dec
movsb
imul
repnz
insb
sti
scas
sub
jo
shl
test
sub
enter
fbstp
or
add
pusha
dec
xor
call
mov
in
jb
in
inc
lock
or
pushf
fmul
pusha
enter
cld
shlb
add
mov
fistpl
lds
inc
lods
xchg
sbb
ret
pop
jns
adc
add
cmpsb
sbb
dec
dec
dec
mov
xchg
roll
iret
mov
rcr
fwait
dec
dec
sbb
arpl
add
inc
lahf
call
fmuls
jbe
sbb
loopne
jno
add
fstl
test
fcomi
xor
andb
add
or
nop
shr
dec
or
sbb
push
cltd
ficoms
sub
out
jb
dec
mov
in
xchg
cmpsb
popa
rolb
in
inc
leave
les
stc
adc
mov
or
rcrb
adc
push
and
or
and
aad
cmc
lret
mov
pop
push
push
pop
dec
lcall
jle
cmp
faddl
sbb
loopne
in
rolb
ja
cmp
pop
dec
fisttpll
cmpb
je
xchg
push
xchg
pop
fcoms
sub
int3
loopne
in
and
mov
rorb
jb
cmpsb
call
or
aaa
rolb
les
jb
test
mov
imul
gs
shlb
pop
test
xchg
pop
adc
rcrl
insb
pop
fsubs
mov
cmp
outsb
xchg
push
jno
xchg
dec
repnz
dec
xor
insb
jo
js
xor
and
add
sbb
call
adc
xlat
loopne
cwtl
sub
and
mov
stos
inc
xchg
xor
inc
pop
pop
dec
or
push
mov
cmovnp
xchg
lods
dec
int
lret
inc
lea
mov
ret
mov
jno
and
mov
mov
xlat
in
sti
gs
and
scas
nop
xchg
inc
enter
aam
push
lock
mov
adc
cmp
inc
sbb
les
ret
sbb
sub
inc
sbb
ds
cli
int3
shrl
xlat
dec
sbb
push
pop
sub
out
jl
add
cmp
cwtl
fimuls
or
sbb
shl
xchg
in
aaa
xor
xor
adc
in
jnp
jo
pop
and
insb
jnp
ds
push
xchg
and
adc
cmpl
push
stc
subl
cmpl
xlat
inc
pusha
dec
or
aas
mov
cmp
ret
fidivl
push
lock
hlt
or
rcl
adc
enter
aam
call
inc
out
add
movsb
fstps
push
and
or
or
cmp
bnd
out
jnp
iret
sbb
subb
mov
sbb
dec
int3
mov
mov
jno
fdiv
jne
pop
push
loopne
fwait
test
sbb
jmp
fadds
enter
aam
out
or
xchg
jmp
movsb
lods
addb
xor
daa
ljmp
cwtl
loopne
pushf
les
push
ret
loopne
dec
add
and
in
jbe
or
or
adc
xchg
iret
loopne
les
in
adc
push
dec
inc
jl
adc
icebp
add
dec
dec
shlb
call
lahf
in
gs
adc
in
cwtl
mov
dec
das
adc
or
insb
or
in
lock
test
and
mov
dec
hlt
mov
xor
mov
ret
mov
popf
or
cmpsb
sbb
sbb
or
dec
popa
test
scas
add
orl
or
pushf
out
and
jp
out
pop
adc
add
outsb
or
inc
mov
std
cmp
push
out
mov
mov
out
in
adc
rcr
out
adc
lea
repz
inc
sbb
iret
add
mov
aad
leave
rolb
fwait
enter
rorb
loopne
ljmp
sub
dec
push
fcomip
inc
test
jg
movsl
sbb
inc
cli
mov
je
inc
daa
nop
push
subb
mov
or
sbb
lock
lea
add
in
pusha
shl
sbb
inc
xor
dec
fidivs
xlat
jns
pop
fcompl
xlat
in
xlat
cs
test
inc
repnz
imul
or
in
stc
icebp
mov
sub
test
xchg
cmp
mov
or
loopne
or
stc
loopne
repnz
sbb
adc
and
cltd
nop
aam
fsubrs
cs
shl
pop
push
sub
mov
push
adc
hlt
cwtl
bound
xor
add
dec
repz
fs
lods
inc
daa
mov
and
lods
stos
mov
movnti
loopne
fdivl
xor
inc
sub
test
mov
push
movsl
cmp
aas
xor
or
cmp
cmp
and
or
or
or
enter
lock
cmp
cmc
pop
enter
jb
xor
cmc
test
adc
mov
movsb
xchg
test
add
mov
cmc
mov
xor
or
sub
or
pop
or
cmp
das
mulb
movsb
or
inc
adc
imulb
mov
xor
fmuls
rcll
add
add
shlb
aaa
adc
mov
dec
push
out
testl
jecxz
pop
sub
sbb
ret
in
push
mov
negl
add
test
aas
faddl
dec
xor
insl
idiv
and
in
mov
fsubs
mov
dec
pushl
bound
mov
clc
mov
and
mov
shlb
adc
add
enter
push
cld
stc
test
mov
stc
push
jbe
fcmovbe
arpl
xchg
push
xor
mov
mov
add
pop
cmpsb
push
aam
test
add
push
pop
cmc
aam
enter
and
ret
adc
or
in
or
adc
fmuls
das
ret
xor
add
cli
fs
test
call
and
in
cli
sar
rorb
fsubs
adc
push
sbb
insl
sub
lds
adcb
adcl
loope
push
sti
test
pop
pop
jmp
ja
xlat
xchg
test
jno
sti
lock
gs
add
in
loopne
xor
add
stc
or
mov
push
pusha
sbb
mov
jns
and
xor
in
sub
xor
or
adc
test
or
or
and
xor
ljmp
adc
in
and
test
insb
bound
call
loopne
and
lock
daa
shll
icebp
fdivs
jge
cs
lock
jmp
fisubrl
call
push
cmpsl
ss
loopne
cwtl
mov
lock
icebp
fcoms
mov
fnsave
ret
add
cltd
push
insl
inc
jge
xchg
xchg
or
and
fisttps
sbb
addr16
pop
aam
jl
orb
adc
push
inc
add
add
mov
in
dec
lock
or
gs
mov
js
adc
xor
or
or
pop
push
or
fstps
adc
mov
mov
push
movl
jae
xor
push
popf
ss
adc
xor
xlat
ret
adc
cs
btr
fldenv
mov
lods
adc
adc
pusha
add
repz
inc
test
and
sub
inc
push
fistl
xchg
dec
in
or
les
pop
int3
pinsrw
in
dec
fwait
add
mov
cmpsb
ficompl
iret
enter
mov
mov
mov
push
add
mov
mov
sub
adc
test
pop
testl
mov
outsb
xor
movsb
fsubrl
sub
pop
add
push
arpl
lahf
inc
jmp
aad
xlat
add
adc
mov
popf
ficompl
rcr
aas
aam
cs
fsub
pop
push
push
cmp
mov
js
add
aad
add
add
sub
sbb
lahf
int3
in
dec
in
das
unpcklps
aam
or
or
fdivrs
mov
daa
push
popf
xchg
dec
movsb
add
or
xor
mov
push
cmp
jmp
xchg
dec
mov
in
cltd
icebp
fs
leave
aam
lcall
imul
nop
and
test
fcompl
hlt
jmp
insb
imul
adc
insb
mov
jo
jnp
les
test
sbb
pop
lret
enter
mov
mov
mov
aaa
inc
adc
sbb
jp
mov
and
sbb
int
push
and
push
or
movsb
fdivr
enter
shlb
clc
mov
shll
push
mov
out
lea
pushf
sbb
mov
or
call
jns
or
or
sub
imul
xchg
int3
into
inc
scas
test
stos
filds
fadd
inc
xchg
rcll
sbb
adcl
xchg
dec
ret
or
and
leave
inc
fimull
sub
repnz
add
adc
fcmovnbe
dec
mov
or
add
xchg
mov
sbb
or
movsb
shl
jecxz
ds
movsb
stos
adc
inc
cmp
jnp
mov
cmp
push
sub
subb
mov
pop
xchg
mov
sbb
pusha
jnp
fdivr
notb
dec
and
mov
inc
push
loope
jecxz
rcl
adc
pop
xchg
lods
sbb
test
pop
and
in
loopne
dec
fisttpl
repz
mov
movsl
jo
xchg
rolb
xchg
jno
xor
jmp
push
pop
push
add
push
in
test
cmp
jne
mov
adc
push
rclb
rcl
mov
mov
mov
lods
inc
out
or
adc
aaa
and
rolb
dec
jae
cmp
sti
or
aad
dec
scas
pusha
sub
sub
and
pop
mov
lret
mov
addl
test
push
xchg
dec
and
fcompl
adcl
inc
dec
and
lcall
outsl
xchg
test
adc
xor
push
or
call
rcrl
addr16
orb
cmp
lock
orb
test
xchg
xor
sahf
ljmp
and
xlat
lods
mov
cmpsb
jge
rclb
and
push
in
push
add
lock
loope
push
push
adc
xor
movsl
dec
push
sbb
add
dec
push
in
loopne
add
sub
jo
adcl
jne
dec
rorb
xchg
dec
lods
adc
in
rolb
in
ja
sbb
nop
outsb
adc
enter
add
xor
in
adcb
shlb
lods
test
adc
fiaddl
aad
shlb
testl
les
sub
shlb
sub
into
mov
in
sbb
aam
mov
daa
mov
dec
rorb
das
nop
and
and
cwtl
test
test
enter
arpl
les
sbb
cmp
divl
in
sbb
sbb
pop
fs
add
mov
pop
pop
mov
push
sarl
xor
mov
push
mov
inc
jl
pop
mov
enter
cs
push
insl
mov
mov
aad
sbb
push
test
aad
inc
pop
sbb
add
sbb
sub
inc
pop
fbstp
sbb
jne
xadd
add
mov
gs
inc
push
jne
mov
scas
or
insb
adc
aas
cmp
adc
sbb
ja
es
adcb
xchg
xchg
xchg
mov
roll
jns
add
and
sbb
adc
xor
push
sbb
dec
mov
das
mov
mov
lods
lods
test
dec
insl
dec
call
xor
rol
jbe
jle
jge
lahf
pop
insl
sbbl
sarb
and
in
js
popf
ret
or
das
gs
mov
nop
aas
in
scas
and
dec
mov
and
orb
add
call
mov
push
pop
xor
sbb
xor
inc
mov
inc
lea
cmpb
std
imul
add
inc
imul
sub
mov
sub
nop
mov
jl
in
fcmovu
lcall
xchg
push
and
std
pop
loopne
fsubs
and
and
loopne
call
push
mov
or
pop
loopne
imul
and
mov
jmp
dec
fidivl
loop
adc
test
push
and
mov
push
jb
mov
sarb
cmc
iret
sub
fsubl
push
and
mov
add
or
mov
call
pop
rcr
and
scas
push
sub
aaa
or
and
or
movsl
mov
jne
fadds
fdivr
sub
loopne
add
lock
addl
sbb
xorb
popa
mov
mov
xor
andb
outsl
and
or
cmp
mov
pop
and
mov
pop
mov
mov
mov
push
imul
ljmp
adc
insb
xor
cwtl
dec
movsb
mov
call
cmp
aam
enter
rclb
inc
jecxz
lods
xchg
jbe
cli
dec
dec
lea
adc
fs
push
insl
jo
lea
xchg
imul
adc
fs
fs
cmp
sbb
cltd
fs
dec
inc
cmp
orb
sub
xor
je
add
fdivr
test
add
sbb
aas
mov
or
scas
sbb
jp
mov
int
inc
enter
cmp
jnp
pop
movsb
adc
in
test
es
sub
or
adc
cld
jo
cltd
or
sub
push
enter
or
shlb
stos
aam
adc
scas
outsb
sub
cwtl
lcall
nop
pop
test
adc
xchg
mov
mov
or
jne
test
mov
aad
adc
sub
inc
pushf
add
pop
addb
fwait
xchg
pop
lods
add
mov
xor
sub
xchg
fnsave
xchg
xchg
dec
enter
pop
push
mov
jne
pushf
dec
test
popf
xchg
in
mov
lcall
out
cmp
pop
dec
sub
out
mov
xor
cmp
cmp
mov
sub
es
inc
or
enter
jl
dec
mov
ss
int3
ja
pop
int3
mov
rclb
cmp
adc
push
inc
scas
or
ret
add
pop
xor
leave
mov
adc
jb
fs
or
ja
les
scas
bound
xchg
pop
rolb
imul
insb
inc
fldl
pop
dec
jo
jmp
push
cmp
fs
fwait
xchg
sbb
lcall
adc
nop
insb
aad
xor
mov
sbb
scas
adcb
test
movsb
cmp
inc
xor
mov
test
jecxz
fdivr
mov
add
inc
xor
push
popa
addb
jns
mov
dec
xor
test
push
test
xor
test
movsb
mov
and
inc
test
and
orl
outsl
int3
jmp
mov
ret
push
xor
add
inc
xor
and
dec
jae
aam
sti
xor
push
test
adc
in
push
pop
add
cwtl
fldcw
and
xor
mov
in
pop
adc
gs
in
or
stos
add
inc
xor
and
rcrb
imul
enter
jo
mov
adc
test
sub
mov
xchg
leave
ret
mov
inc
test
xchg
adc
xor
push
data16
pop
dec
ret
dec
hlt
adc
mov
push
xor
movsl
rcrb
pusha
dec
jns
xchg
shrb
lods
imul
add
ss
test
push
dec
popf
xor
add
and
test
rolb
mov
dec
orb
cmpsl
bound
and
sbb
push
adcb
icebp
push
lods
adc
pusha
push
shll
shrb
icebp
mov
rclb
inc
popa
adc
xor
je
push
mov
mov
xchg
sbb
loopne
or
bound
test
or
stos
cmp
aam
pop
pop
inc
add
or
mov
in
cs
dec
xchg
mov
mov
fiaddl
bound
aam
push
lea
dec
mov
pop
add
jg
nop
add
scas
cwtl
mov
cmp
cmp
dec
sbb
jns
mov
outsb
mov
dec
dec
dec
dec
movd
and
fdivr
xchg
adc
mov
lret
adc
mov
jb
and
and
ss
and
xor
inc
orl
cmpsb
pop
repz
mov
sti
sub
cltd
por
ss
mov
xor
push
xchg
fs
push
movsb
sbb
js
sbb
nop
mov
nop
arpl
test
cmp
fwait
stos
ret
int3
adc
push
pushf
rorb
and
sbb
mov
outsb
aaa
mov
shrd
movsb
inc
ror
insl
xchg
xchg
pushf
pop
xchg
bswap
leave
leave
leave
leave
enter
xchg
xchg
fcmovne
test
lds
xchg
orb
jo
leave
add
aam
push
data16
push
sub
jnp
and
cld
xlat
pushf
pushf
pop
lds
mov
jo
stc
mov
lret
sbb
xchg
inc
adc
adc
inc
scas
mov
je
xchg
pop
sbb
xchg
mov
and
fnsave
xchg
jl
aam
mov
inc
jb
mov
mov
mov
pop
test
xchg
sub
scas
pop
cmpsl
or
jge
inc
es
lock
inc
dec
popa
adc
cmpl
or
enter
mov
rolb
rcl
xchg
lods
arpl
sbb
and
mov
or
cltd
pop
xlat
inc
add
ljmp
xchg
cmp
push
mov
test
movsb
mov
jmp
sbb
mov
xor
in
out
insb
rolb
xchg
push
pushf
mov
lds
or
jo
pushf
mov
lahf
in
repz
inc
cmp
dec
mov
les
out
mov
jge
add
add
mov
mov
sarb
and
inc
add
add
dec
mov
cmp
push
movsb
movsl
dec
cmp
dec
adc
cltd
fs
sbb
and
mov
pusha
imull
pop
xor
jecxz
aam
and
cmpl
dec
ss
xchg
jl
leave
pop
sub
push
and
jbe
or
xor
sub
sbb
xlat
adc
adcb
imul
ret
insl
and
dec
pop
mov
movsb
jecxz
bound
leave
xchg
push
loop
add
inc
mov
xor
stc
dec
aad
sub
inc
cs
invd
inc
sbb
outsl
fdivs
mov
stos
aam
shl
xor
adc
or
mov
stc
les
nop
loopne
cmpsb
std
shlb
dec
loopne
pop
sbb
movsb
add
es
dec
cltd
sub
imull
mov
sbb
fcomps
mov
test
add
xchg
sbb
xor
test
pushf
mov
mov
adc
adc
xchg
or
and
mov
sbb
and
stc
les
mov
mov
cmp
or
movsb
test
add
nop
inc
jl
dec
xor
mov
adc
xchg
xchg
xchg
ja
xchg
xchg
rol
mov
mov
aas
xchg
xor
or
mov
mov
inc
es
pushf
and
xlat
sub
movsb
ficompl
jo
add
ljmp
jmp
xchg
pop
adc
and
pop
lods
fs
push
add
xor
fisubl
dec
mov
adcb
inc
arpl
repz
sub
jno
adc
int
bnd
das
insb
mov
xlat
add
das
sbb
nop
add
leave
and
jmp
dec
pop
mov
enter
pop
mov
pop
or
jo
or
std
jo
sbb
push
neg
xor
mov
add
mov
pushf
xor
sbb
or
dec
mov
jbe
pop
or
push
mov
or
jb
mov
or
sub
repnz
dec
sub
push
test
ficompl
pop
jp
inc
adc
mov
sub
cmp
ret
sub
sbb
adc
xor
and
lods
jbe
dec
sbb
sub
in
adcb
push
popf
mov
mov
test
add
pushf
cld
icebp
out
xor
or
lds
nop
inc
iret
clc
icebp
dec
and
popa
mov
pop
xchg
fadds
lahf
test
mov
dec
pop
xor
enter
dec
adc
push
mov
push
sbb
pusha
sub
push
sub
add
repnz
mov
iret
out
fwait
call
sub
jae
xor
sub
loope
sub
jp,pn
pop
jno
lods
sub
cmp
mov
aaa
mov
add
and
adc
imul
sbb
jmp
aad
sbb
mov
faddl
mov
xchg
xchg
and
and
push
mov
test
lock
sbb
fidivl
xchg
adc
lcall
pop
dec
adc
and
xor
mov
sub
sub
cmp
insl
push
jne
movsb
aad
andb
xor
sub
or
mov
cmpl
cwtl
or
fistps
lods
and
mov
push
xchg
inc
sbbl
adc
add
jns
frstor
mov
mov
mov
outsb
jnp
or
and
pop
rep
imull
dec
add
sbb
and
push
leave
adc
sub
imul
and
aam
movsb
scas
aam
adc
adc
or
inc
sub
sbb
mov
add
xor
loopne
pop
and
pop
push
shll
add
push
sbb
pop
or
fcomp
imul
jg
or
push
jo
xor
sub
push
pop
mov
and
nop
outsl
ret
xor
std
xorl
and
pop
ret
inc
dec
ret
and
stos
enter
test
push
in
dec
mov
rclb
call
cli
mov
popf
mov
sub
mov
sbb
incb
bound
jmp
push
and
enter
dec
jnp
rclb
dec
ficoml
push
leave
rep
test
cwtl
enter
fldt
test
je
and
adc
ret
cmpsb
lret
sbb
test
xor
sti
mov
sub
xor
or
sbb
lret
shll
inc
gs
pusha
cmp
xor
cmp
mov
cmp
sbb
mov
and
inc
lods
bound
adc
mov
pop
adc
add
push
add
jo
pop
sub
add
incb
jbe
cmp
cmp
fcmove
xorb
xchg
bound
sbb
sbb
cltd
jbe
jno
xchg
adc
mov
pusha
outsb
push
pop
mov
adc
nop
inc
test
sbb
add
push
ret
pop
pusha
and
and
xlat
adc
popf
mov
movsb
fcomps
sub
ret
xor
mov
adc
test
mov
add
mov
mov
adc
or
pop
js
push
and
and
es
punpckhdq
mov
gs
pop
mov
add
ret
pop
inc
or
or
pop
dec
testl
sub
bound
test
aaa
insl
sub
mov
mov
lret
rcrb
adc
inc
add
jb
ja
xor
push
dec
cmp
sahf
shll
and
inc
in
lret
in
insl
cwtl
rcrb
dec
call
mov
mov
repnz
add
mov
dec
std
and
movsb
sti
movl
sbb
jmp
adc
inc
sbb
fstpt
sub
lahf
pop
nop
out
movsb
sub
xor
mov
fadds
shrb
out
movsb
inc
xchg
push
and
cmp
jne
test
dec
lea
movsb
movb
mov
sub
je
fcomp
aam
or
and
inc
and
dec
pop
pusha
cmp
je
xor
arpl
loope
cmp
adc
and
pop
xchg
je
push
or
clc
sub
icebp
push
mov
and
daa
jge
xchg
test
push
xchg
mov
push
push
mov
imul
test
fwait
out
repz
and
jo
jns
out
mov
out
out
add
sbb
push
jae
divb
loope
roll
sub
push
xchg
sahf
mov
out
and
aas
add
testb
mov
and
push
jg
rolb
clc
jnp
mov
add
adc
mov
outsl
jg
rcll
xchg
adc
or
cmp
rclb
cmpl
insl
dec
test
add
nop
add
into
pop
adc
test
and
push
test
mov
sub
add
daa
mov
sub
fdiv
aas
rdpmc
add
ja
pop
in
incl
sub
outsl
fwait
shlb
flds
mov
and
insb
outsl
arpl
imul
aam
gs
jb
sub
popa
arpl
mov
popa
jb
outsb
je
gs
das
add
sarb
push
insl
adc
mov
lcall
push
rolb
jb
js
je
jb
gs
cmp
or
outsl
add
add
add
add
jne
les
inc
and
jb
dec
fmuls
mov
add
add
aaa
jl
sbb
or
imull
push
cwtl
inc
xor
inc
push
add
mov
push
ss
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
adc
repz
push
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
fs
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
aaa
lods
mov
into
cmp
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
push
push
stos
push
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
add
xor
pop
xor
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
inc
add
imul
outsb
and
push
or
and
pop
pop
cmp
test
jns
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
mov
scas
mov
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
push
xchg
pusha
inc
jbe
push
push
lahf
fs
insl
or
inc
ss
lods
jp
pusha
xchg
push
popl
loopne
cs
jp
cmp
push
andb
xchg
daa
mov
dec
adc
orl
popa
push
outsb
mov
insb
pop
pop
push
push
jae
or
es
pop
cmp
call
pop
hlt
clc
addr16
xor
ja
das
outsb
gs
mov
sbb
add
mov
inc
mov
adc
push
push
push
dec
testl
pop
scas
cltd
pusha
dec
push
lods
cmp
push
fisttps
inc
ret
lea
ds
adc
jle
jb
mov
imul
mov
cwtl
push
inc
adc
mov
xor
clc
gs
sbb
mov
or
subl
ljmp
insb
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
fstpt
dec
jnp
cmp
cmp
ds
je
repz
and
sub
inc
jl
ret
es
addr16
jle
dec
mov
add
add
cmp
sub
pop
or
sbb
adcl
das
push
jb
aaa
cmp
pop
and
and
push
mov
mov
xchg
pop
pop
and
aad
outsb
stos
addr16
push
jbe
rcr
sbbl
adc
xor
gs
lock
pop
imul
xchg
test
sahf
inc
jae
mov
pop
sub
popa
sub
and
jl
out
sub
repz
iret
cmp
xor
sbb
addr16
add
clc
lock
nop
out
lcall
push
mov
mov
lods
test
cwtl
repz
mov
test
addb
js
je
cmp
jo
out
out
pop
fs
pusha
aas
pop
push
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
rep
sahf
out
or
cld
call
iret
enter
dec
sub
sti
call
sahf
out
pusha
push
dec
inc
xor
cmp
out
or
cld
in
sarb
mov
out
lock
mov
stc
xchg
stc
mov
xor
or
jnp
stc
and
fdivrp
inc
clc
jle
mov
ja
xor
xchg
sbb
sub
insb
and
add
addl
push
jg
add
stos
arpl
add
add
and
push
add
in
loopne
add
add
add
roll
inc
and
sbb
shll
push
pop
fisttps
jle
jg
or
or
test
mov
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
ljmp
mov
mov
mov
mov
ret
enter
int3
int
dec
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
push
test
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
mov
and
sub
stos
jmp
dec
lea
adc
stos
add
pop
outsb
gs
popa
data16
add
cmpsb
pop
jns
movsl
mov
add
fiaddl
data16
les
push
arpl
insb
fs
sbb
dec
jne
je
xor
outsl
lods
mov
push
femms
loopne
lahf
pushf
pcmpgtw
xor
push
inc
adc
xlat
add
push
xor
push
dec
inc
dec
jg
inc
fimuls
dec
dec
inc
add
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
jmp
mov
and
es
sbb
add
inc
fwait
test
xor
jo
scas
pop
mov
movl
sbb
push
fildl
or
ljmp
push
into
mov
xchg
and
lahf
cmovg
add
dec
xchg
je
fbld
pop
and
ret
fwait
imul
sbb
sti
es
jae
rorb
add
mov
adcb
scas
push
or
mov
arpl
bound
jg
rcll
cmp
test
sti
or
ja
popa
daa
add
daa
je
sub
cs
ret
lahf
je
lahf
fucomi
and
xchg
lret
xchg
ret
adc
arpl
notb
cs
jb
add
mov
sbb
adc
mov
pop
xchg
xor
jae
in
jae,pt
insl
jle
or
push
fisubs
cmpsl
mov
and
lock
pop
inc
jmp
arpl
xor
rclb
jno
fbstp
out
sub
fisubs
push
push
ret
jg
mov
sbb
xchg
push
sbb
add
sub
jl
stos
jg
out
or
xor
sbb
jo
aaa
jns
outsb
xlat
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
xchg
push
add
dec
mov
cmp
pop
pop
ret
out
mov
adc
jp
mov
jo
inc
popa
shrl
jo
hlt
mov
es
es
adc
sti
sti
cmp
shlb
daa
or
push
mov
mov
rorl
sub
loopne
icebp
arpl
dec
dec
cmp
js
fsubs
ja
dec
jp
or
jo
aas
ja
imul
bound
in
jno
mov
dec
imul
ret
out
inc
scas
fcmovnbe
pusha
addr16
out
xlat
adc
fbld
je
and
insl
int
pop
aas
arpl
daa
ret
add
sbb
pop
gs
jo
mov
out
push
faddl
andl
je
push
and
pop
jbe
push
mov
add
cmp
inc
fldt
and
pop
cmpb
add
arpl
mov
stos
push
xchg
lret
sub
push
les
daa
loopew
test
and
scas
mov
fbstp
add
ret
pop
mov
mov
mov
mov
je
xchg
push
loope
jb
push
add
or
arpl
inc
mov
or
push
jp
popa
jae
or
cld
bound
bound
adc
fisubrs
ja
out
out
mov
push
adc
aaa
adc
xchg
pop
stos
test
push
pop
push
push
mov
push
mov
ja
bound
or
mov
and
jnp
icebp
or
jne
add
lock
dec
pop
aas
dec
call
push
jmp
inc
scas
mov
pop
mov
xchg
js
mov
dec
pop
jecxz
push
cmp
inc
outsb
mov
jb
push
push
cmp
sub
or
push
sbb
add
ds
push
stos
inc
mull
inc
jnp
push
jae
push
pop
mov
addr16
shl
push
lret
and
xor
bound
testl
inc
xor
add
aas
jmp
and
daa
outsl
add
adc
inc
addr16
ds
aas
ja
inc
cs
adc
xlat
pop
shll
adc
dec
orl
inc
push
inc
jnp
jnp
mov
arpl
dec
dec
in
loope
insb
xchg
inc
inc
sbb
pusha
stos
ja
sbb
imul
inc
ss
mov
aaa
mov
dec
sbb
jno
and
loope
push
pop
je
pop
pop
lds
aas
pop
jbe
scas
adc
bound
mov
mov
mov
roll
xchg
jnp
lock
inc
arpl
pop
pop
push
mov
orb
or
orb
ja
cs
mov
mov
inc
jl
jl
mov
lret
mov
pop
sbb
mov
loop
arpl
lret
push
addr16
bound
mov
ja
rol
mov
jl
cmp
mov
bnd
jae
jno
ret
gs
jl
push
jecxz
ja
pop
push
pop
jl
iret
js
jo
jnp
sbb
cmp
push
jmp
es
inc
mov
lds
ja
pop
popf
out
pop
outsb
mov
out
orl
out
cwtl
shlb
jno
jo
mov
imul
jl
dec
outsl
lret
jl
jo
mov
pushf
bound
jns
rcrb
clc
jae
adc
es
sarl
lods
push
clc
mov
cmp
clc
xor
push
mov
inc
adc
adc
fadds
push
jle
xchg
push
imul
flds
pop
and
pop
push
js
xchg
add
push
push
outsl
push
pop
pop
or
xchg
mov
fisttps
aaa
sbb
pop
inc
sbb
test
inc
or
mov
jae
insb
imul
or
xchg
bound
scas
dec
push
jne
mov
jg
fiadds
negl
jo
outsb
xor
out
scas
push
pop
adc
jecxz
aad
ljmp
sbb
insb
test
fcoms
add
add
popl
je
aaa
es
test
das
fidivl
jno
addr16
js
mov
imul
push
add
or
pop
push
cmp
mov
int
or
fidivl
mov
sub
sub
pop
inc
fbstp
cwtl
insl
shlb
xor
insb
out
insl
inc
inc
sub
xchg
fiaddl
push
inc
popf
add
mov
or
bound
into
addr16
adc
cmp
es
ss
fdivp
mov
ds
int3
inc
in
imul
jg
mov
or
lds
fmull
push
arpl
addr16
inc
cltd
inc
dec
or
mov
add
mov
insb
add
jae
add
or
adc
fimuls
pop
movsl
cmpsb
arpl
inc
adc
das
inc
iret
mov
popa
mov
push
addb
shlb
xchg
lahf
outsb
dec
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
arpl
test
repz
mov
cli
mov
jns
and
stos
lahf
repz
jbe
icebp
push
add
es
addr16
repnz
in
cwtl
test
cmpsb
push
repnz
ds
xchg
ds
fldl
pop
data16
ja
or
jb
jno
sbb
cmp
out
add
mov
je
jb
mov
mov
jae
ss
sbb
ds
sti
movzbl
cmp
and
and
arpl
xor
xor
mov
pop
adc
mov
push
addb
int
mov
jne
je
ss
cmp
xorl
adc
adc
sub
ja
adc
shll
cmp
loopne
movsl
xchg
aas
rcrb
mov
popf
push
mov
imull
inc
arpl
push
cmpsl
xchg
and
scas
ja
sti
xchg
mov
dec
push
adcl
js
adc
xchg
or
dec
lea
lea
inc
mov
sahf
lea
push
and
adc
aaa
movsl
icebp
fsubs
cmpsl
add
xor
hlt
add
xchg
push
adc
push
lock
cmpsb
pop
repnz
pop
mov
hlt
fisubrl
jbe
ds
pop
lods
push
add
or
int3
push
movsb
ja
test
or
mov
xchg
or
shrb
jg
mov
pop
pop
mov
mov
add
je
adc
inc
fs
bound
cmpsb
jnp
xchg
movsl
and
inc
fiadds
jecxz
les
xlat
lods
sar
dec
inc
aaa
dec
add
pop
je
popw
or
movl
dec
jnp
push
sub
aam
mov
mov
or
pop
mov
inc
adc
lea
xchg
ds
push
inc
pop
dec
sub
iret
dec
stos
sub
pop
jmp
sbbl
pop
repz
clc
iret
inc
mov
adcl
rorl
rcrb
es
inc
adc
outsl
lds
mov
mov
sub
xchg
add
outsl
loopne
mov
and
mov
push
add
aad
in
cmp
dec
mov
add
add
or
aaa
and
cwtl
sub
jbe
imul
shrl
stos
jae
inc
jp
movsl
mov
adc
movb
dec
fbld
xchg
aaa
pop
bound
jmp
arpl
inc
xchg
jge
outsl
dec
xchg
je
icebp
jb
fs
js
les
js
jbe
jae
inc
andb
xchg
or
cmc
xchg
fwait
stos
jbe
cmpsb
loope
out
push
jns
push
mov
or
ja
pushf
fcompl
mov
lsl
or
mov
fidivl
xlat
push
push
jecxz
sub
jae,pt
test
xor
dec
out
xchg
inc
lcall
sbb
aas
dec
dec
pop
mov
inc
mov
mov
js
add
push
call
push
xor
fisubrl
imul
data16
cmpsl
pop
inc
mov
fnsave
stos
shrl
add
movhps
ja
or
mov
arpl
lods
pop
pop
add
jns
mov
push
cmc
out
out
je
imul
arpl
xchg
je
stos
lahf
push
mov
push
dec
xchg
shlb
jmp
je
cmpsl
mov
adcl
jb
pop
icebp
cs
test
mov
or
test
ret
lds
cmpsl
push
cs
cmpsl
adc
push
and
mov
inc
cmp
negl
out
fdivs
imul
stos
jae
sbb
imul
inc
or
xor
adc
push
add
bound
xor
addr16
pusha
ja
inc
push
imul
aas
add
pop
xor
mov
aaa
fnstsw
push
pop
mov
pop
ret
and
ss
popa
int
outsl
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
mov
sub
arpl
push
loope
insl
scas
mov
mov
pop
cmpsl
xchg
xlat
pop
mov
ds
dec
in
pop
iret
inc
outsb
loope
sub
fs
fiadds
push
xchg
addr16
or
push
mov
jbe
pop
jo
arpl
pop
push
or
mov
inc
push
pop
sbb
jnp
mov
jnp
jb
xlat
pop
push
fisubs
jo
push
inc
push
cmp
pop
jg
add
adcb
out
addr16
jo
jp
xor
je
insb
scas
loopne
aas
xor
in
cli
push
push
push
sub
es
jb
push
cmp
push
pop
add
cmp
xor
push
ret
sub
or
pop
xlat
sbb
ret
imul
stc
cmp
data16
or
iret
mov
cmpsb
adc
test
adc
and
mov
add
fwait
cs
inc
mov
stos
xchg
daa
inc
or
mov
lock
arpl
imul
push
fs
das
fwait
lcall
cmpl
mov
mov
mov
arpl
sub
push
push
loop
push
cmc
das
outsl
adc
dec
aaa
add
and
push
sbb
ss
add
sbb
mov
cwtl
mov
out
mov
cmpsb
xchg
fsubs
push
into
aam
or
push
outsl
daa
pusha
lcall
fidivrs
pop
inc
mov
xor
loopne
dec
das
outsb
push
xorb
insl
lret
push
mov
pop
orl
popa
xchg
decl
or
add
or
pop
sbb
sbb
sub
push
cs
mov
dec
rclb
push
add
pushl
adc
cmp
inc
arpl
cmp
ja
bound
in
adc
jmp
les
jae
arpl
out
pop
xchg
and
pop
add
dec
ja
out
xor
dec
cmp
loope
mov
orl
sub
fsubrs
mov
mov
rsm
fdivrs
andl
mov
inc
lcall
sub
dec
push
pop
minps
aas
push
adcl
rcrl
jle
dec
mov
jmp
pop
pop
jecxz
insl
repz
push
mov
mov
aaa
add
push
mull
push
sahf
cmp
gs
pop
das
outsl
cmpsl
adc
pop
les
jae
adc
test
jnp
mov
fimull
cmpsb
jo
pop
scas
pusha
add
dec
xchg
push
jmp
adc
test
or
lods
aaa
ja
inc
ficoml
mov
pop
cmp
mov
pop
loopne
in
mov
lea
in
sti
in
add
push
dec
pop
cld
pop
shlb
add
add
insb
fstl
in
push
push
dec
movsb
pop
mov
cmp
jae
and
sbb
ret
mull
dec
add
and
js
mov
push
in
dec
pop
bound
les
pushl
mov
sbbl
push
loop
mov
xorl
mov
mov
das
ljmp
mov
inc
out
sti
push
orb
fbstp
sub
adcl
dec
sbb
jo
and
pop
add
das
add
inc
lods
sbb
ret
jmp
int3
push
insb
arpl
mov
add
mov
adc
mov
lods
sbb
jmp
adc
pop
or
mov
pop
test
add
dec
jo
imul
out
mov
aaa
das
sbb
cmpsl
iret
sub
cs
add
scas
aas
scas
push
adc
xor
and
adc
aam
or
iret
or
mov
sbb
pop
fistpl
popa
lods
jecxz
rcr
or
xlat
and
xchg
xchg
mov
pop
mov
push
mov
xor
inc
push
jae
inc
imul
pop
jecxz
cmp
cmpsl
dec
mov
scas
add
andl
mov
jnp
sbbb
pusha
mov
push
aad
fnstcw
mull
fs
jecxz
clc
scas
mov
jo
push
daa
aaa
lahf
add
sahf
nop
push
jg
insl
inc
cwtl
or
pop
sbb
and
push
mov
cmp
scas
mov
add
jmp
in
push
push
insl
arpl
bound
roll
fcoml
test
in
mov
popf
push
xor
xor
and
scas
in
in
mov
push
leave
test
jb
pop
pop
or
mov
adc
pushf
dec
lods
shrb
push
sbb
enter
scas
js
push
leave
push
jb
aam
xor
and
push
jnp
test
dec
scas
xchg
stos
xchg
inc
push
jb
pushf
cmpsl
hlt
mov
pop
cmpsb
clc
inc
cmpsb
movsb
jne
pop
and
xor
movsl
movsl
dec
dec
mov
movsl
add
movsb
mov
aad
mov
push
leave
mov
and
pushf
dec
mov
stos
fbld
pop
and
mov
jb
dec
mov
in
mov
mov
mov
mov
jb
ljmp
xchg
push
leave
push
popf
popf
test
imul
data16
les
and
inc
shlb
aas
inc
outsl
adc
aam
xor
pop
pop
pop
cmp
xchg
rorl
ret
je
inc
inc
pop
add
shlb
loope
fistl
xor
dec
inc
inc
xchg
push
push
sbb
test
inc
xlat
inc
pop
and
lods
lods
add
push
aas
pop
loop
dec
push
sbb
mov
dec
mov
arpl
imul
or
aas
imul
push
das
dec
sbb
push
or
fidivrl
inc
pop
cmp
aaa
addb
mov
imul
xor
test
push
inc
xlat
and
push
dec
push
out
sbb
rolb
neg
sbb
push
das
rclb
and
adcb
add
dec
data16
pop
push
sbb
aas
xchg
fildll
sbb
adc
push
mov
scas
sbb
lahf
pop
or
sub
inc
sub
aaa
inc
cli
add
push
push
scas
inc
and
push
mov
xchg
inc
jmp
nop
jo
dec
sbb
aaa
push
ljmp
or
jbe
out
aaa
fistpll
iret
aaa
adc
scas
pop
mov
add
das
inc
or
outsl
push
adc
jecxz
ret
lahf
mov
mov
sub
mov
gs
pusha
addl
pushl
mov
jg
aaa
or
push
or
push
inc
aaa
scas
and
dec
pop
test
xchg
ror
inc
daa
push
sbb
js
pushf
rorl
cmp
test
outsl
rclb
outsl
jbe
inc
add
fcoml
dec
call
jae
and
lret
xlat
pop
sahf
pop
or
xor
loopne
fcoms
and
xchg
rolb
inc
inc
daa
sbb
sub
pop
or
pop
sub
xchg
pusha
mov
rol
ficoms
bound
mov
push
dec
inc
es
push
mov
inc
dec
bound
sti
std
loope
cmp
jne
addr16
add
daa
bound
or
push
je
push
js
mov
cs
sub
adc
icebp
cwtl
cltd
cmp
subb
arpl
pusha
loopne
pop
jae
jns
mov
les
in
ss
in
or
bound
jae
imul
sbb
xor
idivb
mov
sub
shrb
dec
stos
push
adc
fiaddl
iret
and
hlt
pop
pushf
shlb
xchg
outsl
jae
repz
push
adc
iret
repz
sbb
push
cmp
repz
andl
jp
push
cltd
or
xchg
stos
push
repz
push
sub
push
aam
pop
insl
push
adc
fiaddl
stos
das
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
shlb
stc
das
xor
scas
incl
inc
mov
pushw
aas
inc
iret
out
mov
sub
insb
sahf
out
push
pop
mov
push
add
jnp
repz
outsb
movsb
pop
push
insl
mov
mov
cmp
push
add
cmpsl
cli
cli
into
testb
dec
jg
dec
ror
or
sti
lock
sbb
bound
lock
jae
js
add
push
inc
pop
mov
xchg
add
add
ljmp
dec
pop
pop
mov
inc
push
pop
push
jo
push
adc
dec
mov
lahf
imul
scas
das
popf
stc
add
cmp
xor
xor
pop
and
andl
adc
imul
pop
and
or
cmpsb
lea
cmp
adc
mov
cmp
out
and
fildll
jns
and
stos
mov
add
cmpb
pop
pop
push
or
or
add
inc
and
dec
les
lea
aaa
mov
and
rcrl
adc
sbb
pop
adc
ss
mov
lock
push
orl
ja
mov
es
sub
mov
mov
push
sahf
push
cs
cmp
xchg
sahf
out
xor
jnp
and
out
es
add
mov
add
insl
xchg
jnp
andl
cmp
jns
xor
jae
fs
mov
sub
into
xor
pop
js
aam
jecxz
pop
xlat
dec
shlb
pop
sub
mov
or
add
js
xor
inc
cmp
or
es
btr
jbe
dec
or
inc
push
loop
shrb
jbe
push
dec
mov
bound
sahf
ja
adc
xor
out
jne
xor
cs
lret
cs
cmp
push
ret
sarl
cmpsb
xchg
ja
retw
fsubrp
sbb
pop
mov
mov
xor
push
inc
jmp
arpl
jnp
loop
sub
arpl
fs
inc
mov
iret
cmp
adc
dec
daa
xor
out
imul
push
mov
cs
loopne
fstl
and
imul
pop
pop
into
fnstsw
mov
push
es
ss
outsb
pop
push
pandn
notl
daa
dec
jb
das
inc
pop
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outsl
jecxz
cmp
push
push
neg
jnp
sub
push
insl
mov
fisubrs
mov
xor
push
jp,pt
jp
iret
jnp
add
ds
fiaddl
clc
fidivs
jg
dec
das
xor
lock
xchg
jp
pop
outsl
pop
pop
out
loopne
dec
xor
xor
or
outsl
outsl
and
enter
inc
jb
jb
dec
xchg
xor
lods
cmovg
push
sbb
loop
push
sbb
lcall
inc
test
inc
mov
mov
push
sbb
mov
inc
cmp
pusha
mov
xchg
jo
ret
pop
inc
inc
js
jle
sub
lock
xor
add
fcmovnbe
ljmp
daa
mov
sub
xchg
and
xor
push
or
bound
pop
dec
inc
inc
mov
xchg
mov
xchg
jg
les
sbb
dec
mov
call
lcall
sbbl
ret
test
inc
inc
add
adc
out
arpl
shlb
jae
stos
mov
adc
andb
pusha
scas
repz
mov
mov
sbb
lahf
push
mov
add
nop
pop
dec
daa
push
sub
mov
dec
mov
mov
cmp
dec
and
pop
ficompl
sbb
dec
outsb
mov
pop
cli
shrb
push
xchg
mov
and
push
addr16
rolb
out
sbb
or
stos
mov
pop
hlt
sub
insb
outsl
popa
fs
outsl
insb
adcb
pop
pop
aas
add
sub
add
jbe
add
and
add
inc
sub
int
imul
scas
mov
movsb
lock
pop
ljmp
sub
shlb
push
pop
sub
gs
sbb
push
xor
shlb
cwtl
mov
pop
jg
ja
push
outsl
in
jae
push
mov
xor
or
idivb
jecxz
bound
mov
enter
push
mov
xchg
add
pop
jo
push
cmpsb
std
mov
cmp
jo
arpl
scas
hlt
ss
pop
pop
ja
xor
xor
push
inc
cmp
pandn
adc
pop
lea
je
adc
jae
jae
dec
rorb
xor
in
push
pop
mov
fdivrs
fldt
lret
add
mov
push
sub
pop
jnp
mov
pop
outsl
ret
lock
jmp
js
lahf
lcall
push
arpl
inc
sub
dec
pop
dec
jl
xchg
add
out
jecxz
addl
fisubl
imul
cs
ljmp
cmp
mov
or
xchg
sbb
stos
arpl
and
sti
dec
pop
popa
fldt
sbb
lock
iret
cmp
data16
lahf
inc
mov
add
bound
movsb
xor
jno
outsb
mov
dec
pushl
inc
andb
daa
jns
mov
out
test
or
and
mov
outsb
dec
arpl
jae
lea
sbb
jbe
push
imul
xor
das
add
push
popf
repz
add
and
push
les
sbb
mov
sub
stos
pop
movsb
push
xlat
adc
add
inc
sarl
mov
push
femms
dec
add
scas
lea
data16
xchg
fiaddl
shlb
inc
mull
push
push
xor
pop
lahf
sub
imul
daa
mov
fadds
dec
cmp
mov
testb
or
outsb
push
mov
int
jne
inc
push
scas
mov
dec
mov
aam
adc
fadd
popa
add
add
mov
ds
adc
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
pop
repnz
pop
sbb
xor
mov
mov
fsubs
sbb
mov
push
dec
xchg
jecxz
dec
push
pop
pop
cmp
pop
add
pop
adc
adc
pop
push
and
xchg
xor
mov
loopne
dec
push
dec
sub
imul
pop
mov
mov
add
or
jle
addl
push
mov
sub
xchg
push
mov
test
push
insb
dec
mov
and
dec
cmp
mov
sub
or
in
jl,pn
cld
xor
xor
jb
xchg
fdivrl
int3
inc
mov
dec
lods
pushf
dec
mov
or
outsl
repnz
xor
test
inc
imul
dec
lods
inc
pop
dec
xchg
scas
pop
add
lods
pushf
inc
dec
xchg
sbb
sahf
hlt
inc
or
fwait
xor
pop
jecxz
dec
adc
ja
lods
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
mov
cmp
inc
repz
daa
mov
xor
pop
push
aas
imul
push
ret
pop
imul
aaa
mov
jl
inc
dec
xchg
inc
jmp
daa
bound
je
push
cwtl
adc
bound
imul
dec
pop
add
sbb
sub
push
add
add
xor
aaa
fisubrl
rclb
cmp
jge
inc
es
popa
xor
xlat
xchg
mov
rorb
scas
pop
push
rorb
notl
imul
loopne
dec
push
push
scas
xlat
jp
xorb
inc
imul
sub
push
iret
daa
xor
adc
xchg
outsb
pop
addr16
sbb
push
inc
dec
xchg
cmc
and
mov
popa
inc
pop
js
xlat
aas
inc
inc
push
jne
inc
call
xorl
adc
mov
iret
add
and
out
push
inc
fwait
pop
inc
pop
jb
aaa
aam
stos
pop
mov
xor
adc
test
mov
cmpsb
mov
sbb
bound
stos
xor
fbstp
insb
imul
outsl
dec
and
push
push
mov
aaa
dec
inc
arpl
jl
cs
fisttpl
add
insb
iret
jbe
jl
hlt
adc
cmp
fsubp
test
pop
subb
fstpt
iret
dec
popf
pop
inc
loop
mov
int3
out
mov
push
jmp
or
sahf
xchg
pop
subl
pop
mov
test
data16
notl
add
push
lahf
es
inc
insb
mov
ret
test
jae
insl
movsb
xchg
mov
adc
push
push
fwait
mov
and
push
and
lar
and
imul
jp
aam
sar
cmp
imul
cmpsb
leave
and
add
push
dec
pop
negb
insl
jnp
push
jl
push
mov
sub
and
out
cmp
mov
xor
or
sub
out
cmp
cs
jge
fwait
lds
pop
or
iret
mov
ss
adc
push
les
repnz
imull
hlt
testl
fidivs
sarl
add
stc
mov
push
movb
pop
xchg
inc
aaa
mov
fcompp
mov
jmp
sbb
repz
inc
lods
psllq
mov
testb
mov
jg
aaa
inc
or
negl
pop
or
cs
out
mov
add
mov
jecxz
mov
movsb
es
neg
jne
inc
push
xor
dec
nop
cmpsl
add
fdivp
popa
arpl
inc
jp
das
inc
jl
jns
fwait
out
xchg
cmp
icebp
xor
je
insb
sahf
out
leave
loop
add
jnp
iret
inc
ja
push
mov
out
sbb
jle
inc
out
mov
add
sahf
int
outsl
or
repz
test
sahf
out
sahf
ds
andl
insb
cmp
dec
mov
out
sahf
addr16
ss
jb
iret
mov
sahf
test
sub
cmp
lock
jecxz
iret
and
jg
dec
sbb
scas
sub
push
sub
adc
stc
add
adc
jecxz
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
or
or
sar
int3
push
and
pop
sbb
enter
adc
in
call
or
adc
daa
or
pop
adc
add
or
pop
mov
adc
sbb
sub
repnz
leave
cld
orl
xor
aam
or
ja
outsb
outsb
inc
mov
xor
push
js
data16
imul
insl
gs
cmp
dec
pop
push
dec
xchg
push
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
lcall
rorb
xchg
js
shrb
pop
push
dec
lea
push
dec
ljmp
and
push
popa
je
and
adc
inc
fldt
inc
push
push
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
mov
xor
sbb
dec
movsl
andb
inc
or
mov
and
lahf
pop
sub
lods
lcall
pop
addr16
loop
mov
aaa
sbb
cmp
mov
outsl
xlat
ja
mov
jo
inc
mov
stos
lods
aas
dec
sbb
xchg
and
pop
inc
adc
mov
mov
jecxz
xor
testl
popa
or
aaa
fs
cmp
inc
out
jb
xchg
pop
aaa
rcr
out
sub
out
and
sub
xor
daa
add
mov
sysexit
ja
les
mov
fisttpl
bound
dec
lahf
cmp
filds
inc
or
inc
jo
xor
lahf
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
das
adc
push
and
xor
lahf
inc
js
sub
pop
jb
addr16
add
add
in
stos
add
and
push
cmp
lods
adc
jo
xlat
dec
sbb
aas
sbb
lahf
or
add
dec
add
inc
mov
gs
aaa
sbb
or
repz
xor
das
cmpsl
mov
xchg
add
xchg
push
ja
mov
mov
ja
aam
addr16
mov
mov
sub
pop
aas
jae
mov
andb
push
or
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
sahf
add
add
sub
push
btrl
adcl
mov
imul
mov
add
mov
mov
ja
das
mull
mov
inc
das
mov
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
push
fildl
pop
das
mov
bound
pop
jp
loopne
inc
dec
push
incl
pop
push
aad
pop
jecxz
test
push
lret
pop
sub
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
or
add
sub
dec
mov
sbb
push
repz
test
roll
xchg
push
jmp
add
mov
aas
push
add
push
arpl
sti
adc
ret
fcmovbe
adc
sbb
adcl
das
mov
pop
add
xlat
pop
and
mov
pop
outsl
scas
or
inc
jmp
aas
add
mov
subb
jnp
imul
cmpsb
inc
inc
push
fidivl
push
inc
xchg
sbb
cmp
mov
repnz
popl
pop
lods
xorl
mov
pop
pop
inc
mov
jno
mov
not
inc
aaa
mov
dec
bound
dec
mov
les
xchg
inc
mov
lahf
inc
dec
sbb
inc
xor
dec
stos
arpl
lock
cmpsl
push
pushl
jg
shlb
mov
testl
pop
pop
inc
lret
inc
pop
test
aaa
jns
je
and
or
out
xchg
nop
outsl
mov
adc
and
lret
or
or
insl
jo
je
aaa
shr
or
ds
jo
jae
es
mov
outsl
xor
push
jg
xor
xor
add
fdivrs
cmpsb
jns
je
jne
or
add
push
aas
lcall
ret
aas
das
das
mov
mov
dec
jae
mov
sbb
mov
cmp
cmp
fstpt
push
inc
push
mov
cmp
imul
push
or
or
iret
pop
inc
popa
cwtl
lods
mov
ret
add
xchg
movsb
mov
cmpsl
pop
stos
pusha
and
outsb
loope
sbb
bound
cmp
inc
mov
jae
sub
pop
adc
test
adc
push
mov
push
jmp
jo
push
pop
dec
push
das
inc
jb
dec
cmpsl
pop
stos
outsl
test
insl
cli
push
add
add
adc
emms
or
fidivrl
jb
sbb
adc
test
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
rorb
enter
sbbl
push
xlat
lret
pop
dec
loope
cmpsb
jb
out
pop
sub
ds
popf
jp
icebp
add
push
pop
outsl
sbb
push
dec
inc
dec
push
xchg
add
add
inc
sbb
mov
pop
mov
out
jg
ret
jbe
add
add
pop
add
sbb
into
inc
add
les
and
pop
ja
and
pop
outsl
lods
fnstsw
das
ds
das
sbb
sbb
add
imul
daa
push
and
jg
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
fs
es
js
insb
cwtl
lahf
add
cs
sbb
push
and
lods
insl
and
les
lds
sub
ja
insb
xchg
push
sbb
gs
shll
xor
popw
jo
sbbl
dec
aaa
cmp
lret
jbe
push
push
in
push
xchg
xor
adc
add
orl
jmp
mov
outsb
in
data16
xchg
aam
sbb
xor
mov
ss
sbb
push
cmpsl
sbb
fimull
data16
lahf
outsb
divb
in
lret
into
push
mov
shl
subb
cmp
xor
sbbb
mov
insb
scas
cmpsb
pop
push
dec
xchg
add
insb
scas
push
enter
aaa
add
pop
sti
xchg
in
mov
outsl
mov
mov
or
jecxz
mov
ss
adc
pop
int3
pop
xchg
push
cmpsl
lea
dec
or
popf
popf
mov
popl
inc
push
or
mov
sahf
daa
adc
jb
mov
mov
out
push
imul
outsl
mov
je
and
loopne
and
bound
sub
sub
cmp
jns
ret
outsb
in
adc
je
mov
inc
push
adc
std
xor
fsubs
sub
sub
mov
mov
jo
xor
clc
loop
dec
inc
dec
and
push
add
jne
push
js
mov
popa
mov
outsl
fs
gs
jo
jns
iret
js
mov
inc
mov
xor
insl
jne
mov
push
dec
pop
fiadds
sbb
xor
or
addr16
cmp
lds
sub
jbe
cmpl
jae
inc
insb
pop
push
and
pcmpeqd
out
loope
imul
sbb
aaa
xor
mov
outsl
jo
xor
negb
mov
mov
xchg
mov
or
inc
xadd
sbb
inc
cmovo
add
inc
mov
in
mov
in
cmp
nop
jo
maxps
mov
inc
lahf
sub
sti
inc
xor
mov
pop
jecxz
xorb
das
jbe
add
push
sbbb
sbb
cmp
aas
add
xor
cmpw
push
xchg
push
jns
insb
fcoms
in
pop
mov
jo
xchg
cmp
sahf
dec
fcmovnu
les
repnz
add
xchg
les
xchg
mov
outsl
inc
daa
outsl
inc
lods
mov
xchg
xchg
mov
insl
xchg
outsl
call
and
outsb
iret
repz
aam
fsubrl
out
sub
test
pop
fisubrl
xchg
cmp
add
dec
mov
mov
add
nop
push
rcrb
jbe
xor
nop
sbb
mov
cmp
mov
outsl
lock
xchg
pop
or
inc
xchg
pop
in
mov
pop
fdivrl
push
cmp
cmpsl
pop
xchg
and
fstpt
cwtl
push
movsb
cwtl
rolb
orb
sahf
or
in
out
inc
cs
dec
aam
data16
mov
bound
xchg
js
adc
movsb
insb
and
movsb
or
test
mov
sbb
out
pop
mov
inc
fdiv
dec
cltd
adc
sbb
inc
daa
cmp
mov
outsl
xchg
xor
insl
adc
mov
cmp
roll
push
xchg
enter
movsb
xchg
mov
add
jae
adc
pop
adc
into
lcall
add
repnz
fdivs
lahf
lcall
add
lcall
jl
outsl
sub
das
scas
jbe
aam
push
nop
inc
dec
dec
lock
in
in
cld
fwait
add
js
orb
mov
fwait
daa
mov
mov
pushf
loopne
fwait
insb
data16
and
out
or
or
ja
push
aas
fwait
or
pushf
sbb
fdivrs
and
ret
xor
pusha
push
add
mov
jl
mov
or
adc
aam
xorb
daa
repnz
nop
or
mov
inc
adc
or
cs
push
jo
cmp
test
divl
mov
pop
popf
int3
push
fdivl
orb
out
test
sahf
sbb
sub
pop
jnp
in
ja
lcall
insb
jl
enter
lahf
pop
xor
cmp
repnz
mov
enter
testb
lahf
mov
or
dec
rolb
lahf
pop
insb
out
xchg
pusha
xlat
ja
mov
pushf
lods
mov
inc
pushf
loopne
insb
mov
and
mov
or
test
add
les
mov
add
dec
sahf
rclb
cmp
mov
cmpsl
cmp
mov
mov
call
clc
xchg
mov
jnp
jb
call
or
adc
movsl
and
mov
ja
in
mov
cs
mov
fwait
or
hlt
mov
enter
call
and
cmpsl
mov
repnz
in
movsl
jg
dec
mov
scas
cmp
and
test
loopne
nop
addr16
mov
cs
loopne
jle
ljmp
push
push
lahf
mov
das
ja
enter
out
xchg
movsb
enter
add
or
hlt
clc
fstps
movsb
and
fimuls
movsb
xor
inc
lahf
dec
lahf
jns
imul
in
sahf
or
or
les
aam
call
dec
mov
cmpsl
les
nop
sbb
outsb
imul
cmpsl
loopne
sahf
or
jl
or
push
cmpsl
insb
shll
iret
sahf
adc
shl
and
int3
push
push
cmpsl
sarb
jae
cmpsb
adc
and
cmp
pop
push
push
cmpsl
jg
sub
out
js
push
pop
in
push
mov
jns
dec
inc
movsb
mov
enter
add
mov
test
push
xor
push
cmpsl
pop
jnp
jg
lahf
jg
cmpsl
pop
stos
js
jo
aas
push
jns
in
cmpsl
pusha
pop
mov
sub
push
mov
mov
ds
or
nop
mov
ja
rorb
cs
push
nop
rcrb
js
subb
ja
es
sbb
cmpsl
test
inc
mov
and
test
pop
dec
dec
add
out
dec
jbe
inc
lahf
pop
jo
rolb
push
inc
or
js
inc
adc
mov
inc
sahf
or
ja
mov
outsb
stos
pop
adc
push
mov
lock
jbe
loopne
mov
int3
sahf
imul
xchg
push
loop
or
mov
jno
xlat
jg
aam
in
mov
cs
xlat
cmp
loop
ljmp
pop
add
push
inc
jg
or
inc
sahf
xchg
and
ja
repnz
nop
inc
cwtl
fcompl
popf
xor
push
pushf
xchg
push
mov
fmul
jbe
mov
test
jnp
mov
ja
mov
daa
addb
movsb
enter
iret
mov
adc
pop
xor
sahf
in
inc
jo
xor
ja
ss
pusha
lods
and
xor
and
push
inc
mov
dec
out
rorb
inc
sahf
mov
pusha
fbstp
mov
enter
enter
push
inc
enter
pop
ja
inc
scas
sub
mov
and
fimuls
ljmp
inc
adc
add
insb
inc
inc
shlb
rcrb
test
scas
adc
or
bound
jns
lahf
mov
adcb
jns
in
mov
cs
or
shrl
and
and
in
dec
leave
jae
out
movsb
ja
lahf
pusha
jo
mov
push
nop
out
sahf
inc
mov
add
push
aam
lock
mov
aas
subb
fsubs
jbe
popl
jmp
pop
mov
popl
pop
enter
ss
or
inc
add
mov
mov
out
mov
push
and
dec
dec
outsl
add
jb
add
addr16
or
fsubrs
xchg
add
jo
cmp
repnz
test
adc
xchg
mov
lock
mov
cmp
cmp
daa
mov
push
jbe
outsb
iret
pushf
push
call
add
cs
addr16
fcom
rcl
mov
daa
fisttpl
mov
mov
enter
cmp
push
mov
mov
pushl
pusha
cwtl
inc
pop
mov
pop
pop
inc
loopne
fisubrl
push
cs
dec
xchg
pop
data16
ja
cmpb
xchg
ss
inc
adcb
pop
xchg
dec
enter
xabort
or
adc
or
or
addr16
andl
add
out
ja
daa
scas
clc
mov
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
scas
push
pop
aaa
add
jns
out
mov
lock
les
into
mov
les
sbb
pop
mov
insb
sahf
nop
je
cwtl
jl
inc
sahf
cmp
cmp
pop
sahf
mov
mov
aam
mov
fs
sub
mov
fwait
sbb
ja
jns
fsubs
mov
xchg
dec
push
lock
jl
xchg
inc
xchg
or
pop
iret
jo
inc
add
seto
mov
repnz
inc
xchg
cwtl
add
inc
test
hlt
jbe
ja
js
out
fistpll
add
pop
or
jle
ja
dec
fisubl
jb
fcmovb
jg
push
xchg
rcr
or
dec
and
aaa
outsl
lock
in
push
inc
lods
pusha
pop
jb
push
inc
inc
mov
adc
nop
push
pushf
dec
outsl
add
add
or
inc
jl
inc
aaa
adc
and
or
pop
or
jl
dec
mov
outsl
cmp
adc
idivl
adc
mov
mov
mov
add
enter
jl
and
xor
fistpll
lods
aas
out
inc
test
aaa
mov
mov
scas
add
repnz
adc
push
lret
out
inc
xor
cmp
xor
sub
inc
mov
sbb
push
ljmp
sub
sub
int3
cmpsb
pop
add
in
xorb
cmp
xlat
aad
into
mov
mov
les
out
adc
mov
jle
ja
mov
mov
jo
jle
cmp
add
out
ja
cmp
push
inc
mov
lock
mov
mov
cltd
inc
xlat
aaa
fists
push
jbe
pop
scas
add
or
outsb
test
outsl
cmp
sub
hlt
cwtl
inc
enter
insb
and
mov
fbld
jl
mov
push
adc
dec
inc
testb
outsb
jbe
pop
push
push
pop
addr16
leave
mov
add
clc
es
sbb
mov
pop
jg
ror
fcomps
mov
jg
cmp
and
scas
clc
add
hlt
aaa
enter
mov
sbb
pop
pop
mov
aaa
lds
dec
ja
jmp
out
pop
cmp
test
ja
cmp
inc
dec
shlb
xorps
out
in
push
int
xchg
mov
pop
daa
out
jl
aaa
or
and
hlt
adc
cmp
dec
push
mov
xorb
ret
xchg
fmuls
bndstx
in
mov
cmp
je
js
ror
add
or
fcoml
clc
popf
sbb
nop
or
dec
mov
ljmp
xlat
or
xlat
mov
push
orb
scas
in
add
push
mov
popf
sub
pop
ret
ret
or
mov
dec
inc
outsl
and
dec
add
cltd
inc
nop
insb
add
scas
ret
pusha
push
call
pop
aaa
mov
lods
in
sub
jbe
or
ja
aaa
stos
sbb
outsl
nop
adc
mov
mov
les
mov
xor
in
add
jle
lods
inc
dec
and
sarb
mov
adc
daa
and
data16
dec
jnp
in
lds
aaa
pusha
and
adc
and
lds
fimuls
pushf
xchg
outsl
fistps
aad
orb
aaa
sbb
stos
pop
int3
pop
call
ds
clc
aaa
push
sub
or
dec
and
aaa
add
inc
jbe
dec
add
push
push
xchg
xchg
add
data16
outsl
leave
mov
addr16
and
ret
lahf
iret
push
mov
test
out
es
sbb
xchg
pop
leave
xchg
add
cmp
aas
push
sub
movsb
sahf
addr16
push
push
push
push
enter
mov
jns
sbb
enter
fiadds
in
xchg
or
je
push
or
or
test
jo
add
fistps
pushf
mov
pop
leave
sub
pop
outsl
add
or
sub
enter
push
dec
daa
xchg
add
add
add
inc
fs
in
aaa
enter
dec
out
enter
pop
scas
add
push
adc
outsb
sub
sub
adc
loopne
push
add
add
sahf
inc
sbb
andb
adc
mov
or
mov
mov
setb
add
in
popf
nop
and
xor
cmp
pop
inc
fiaddl
stos
mov
fistps
filds
jecxz
sub
dec
lret
insl
or
mov
divl
inc
je
lahf
call
fxch
add
inc
and
test
out
lret
inc
push
push
aaa
test
iret
sub
addb
mov
cmpb
lock
shlb
int3
popa
iret
cmp
int3
xor
cmp
inc
dec
fistl
or
outsl
xchg
hlt
movsb
or
jl
sahf
pusha
mov
insb
xor
mov
jp
xor
pop
push
sub
sarl
lock
jb
sahf
out
cmp
cld
and
xorb
jns
shl
push
outsl
inc
stc
cmp
repz
cmpsl
lret
jo
jns
cmpsl
xor
jno
repz
cmp
mov
jns
jb
arpl
out
repz
mov
je
push
sbb
sarl
dec
ja
and
jp
repz
xchg
mov
dec
repz
xchg
mov
fs
repz
movsl
lret
stc
push
jns
sahf
out
popa
cmpsb
lret
jmp
jp
cmp
shll
inc
outsb
mov
out
sahf
out
jnp
pop
jg
out
cmp
cmp
movb
mov
inc
ds
repz
nop
mov
sahf
out
pop
xchg
mov
and
push
out
cmp
out
push
sbbb
push
jg
lcall
out
test
mov
lahf
repz
adc
out
lahf
out
and
mov
cwtl
out
mov
lcall
mov
out
shl
sbb
jnp
mov
lea
mov
ds
fcoms
xchg
or
inc
repz
out
stc
and
push
out
lcall
lahf
out
ds
xchg
out
pop
xchg
xchg
fnstcw
sahf
push
flds
xchg
sbb
mov
out
repz
into
xchg
adc
inc
mov
adc
sahf
jg
sti
sub
mov
cmp
and
iret
sarl
jge
jmp
popf
out
out
lret
sahf
push
push
out
xor
fldt
lahf
add
mov
sbb
jg
repz
mov
mov
dec
repz
pusha
stos
out
movsl
sub
sahf
cmpsl
stc
cmp
add
cmp
repz
dec
cmpsl
ja
in
jl
cmpsl
stc
and
test
xchg
jge
loope
stos
jl
cmpsl
flds
jle
fmull
sar
jbe
cltd
in
sub
cmpl
cmp
out
pop
mov
pop
popf
stc
cmp
out
mov
mov
fimuls
mov
jl
cmpsl
xor
faddl
mov
cmpsl
stc
cmp
jg
aad
mov
out
xor
xchg
mov
out
mov
mov
lds
out
lcall
iret
sarl
fildl
mov
repz
mov
jo
fisubs
mov
rcl
sahf
ja
jns
aaa
shrl
fwait
iret
out
ret
cmpsl
fisubrl
out
les
out
leave
lret
in
shr
inc
int3
outsb
or
dec
iret
ja
ds
jnp
push
adc
mov
fldcw
dec
fcmovne
fcompl
fidivs
lcall
xchg
mov
out
xor
jp
icebp
mov
int3
nopl
sub
inc
rcr
xchg
cmpl
stc
in
inc
sub
getsec
into
add
adc
faddl
ja
pop
or
shrl
iret
pop
mov
lret
push
fistps
daa
fimull
jns
imul
jge
mov
and
fdivrs
adcb
fimull
call
adc
xchg
xchg
lahf
jg
gs
and
xchg
lcall
in
pushf
adc
and
pop
xchg
inc
xor
loop
mov
fs
aas
lahf
fcmovnbe
cpuid
popf
mov
in
jno
mov
or
xchg
pushf
repnz
testb
push
aas
add
jmp
or
or
adc
add
xchg
jle
fisttpll
pop
jmp
enter
and
in
fldenv
sub
inc
pop
daa
cld
mov
inc
insb
push
add
jl
mov
leave
in
pop
adc
add
aaa
xchg
add
movsb
mov
outsb
cmpsl
or
push
lods
adc
cmp
lahf
dec
mov
xchg
lahf
dec
in
cmpsl
xchg
outsl
xlat
cmp
dec
and
fisttps
sub
in
add
cmpsl
movhps
and
push
testb
mov
xchg
pop
push
daa
push
sub
dec
inc
scas
fmuls
sbb
les
push
aaa
lock
add
xchg
push
in
pop
pop
push
addr16
inc
or
mov
addr16
test
jmp
out
inc
pushf
inc
or
testl
pushf
sub
fcomp
fmul
daa
call
scas
add
push
push
testb
ja
fldenv
fucomip
in
movsl
ja
fbstp
dec
mov
xchg
jb
pop
jb
nop
jo
pop
jb
int3
hlt
dec
dec
mov
fiaddl
push
pop
pop
enter
sub
and
inc
add
add
add
pop
mov
js,pn
push
fwait
pop
or
xchg
enter
in
jge
add
enter
dec
dec
fistl
jmp
leave
mov
inc
pop
push
insb
xchg
sbb
push
xchg
pop
xor
lods
nop
cwtl
pop
inc
xlat
dec
leave
add
jge
fcmovnu
scas
int3
and
sub
in
xchg
pop
jl
pushf
in
xchg
test
pop
lcall
test
or
scas
xchg
inc
or
scas
sbb
dec
pop
jo
sbbb
les
mov
stos
dec
leave
push
and
adc
fdivr
daa
popf
sub
and
popa
jne
outsb
cmpsl
or
daa
jl
sub
sbb
in
ss
inc
jb
mov
fistpl
push
out
icebp
add
add
add
cmpsl
push
cmp
roll
or
cmpsl
xchg
mov
mov
add
lods
jg
push
push
pusha
and
sbb
xchg
pop
in
fistps
push
lods
mov
rcr
inc
data16
lcall
xchg
cmp
jb
lods
bound
daa
sub
xor
fcomip
mov
movsb
mov
gs
add
bound
cmp
mov
bound
imul
movsl
xchg
add
in
daa
daa
daa
in
cmc
std
add
arpl
add
xchg
fmul
xchg
mov
arpl
cmpsl
arpl
arpl
in
in
dec
push
pop
loope
fldt
cltd
jnp
andl
pop
xchg
setnp
shll
pop
leave
leave
leave
dec
into
loope
cmp
enter
add
pop
and
sbb
or
or
or
enter
or
daa
push
in
mov
xchg
mov
movsb
shrd
loop
xchg
das
dec
faddp
fs
lock
add
mov
xchg
add
xchg
add
and
gs
jecxz
test
jmp
pop
jb
jbe
jecxz
daa
push
leave
and
pop
inc
mov
add
lods
push
mov
xchg
sbb
sbb
out
in
xchg
add
or
inc
lds
push
out
clc
out
inc
mov
in
data16
out
inc
push
push
add
sub
aaa
in
ffreep
or
call
das
in
in
daa
fmuls
daa
cmp
data16
adc
adc
incl
in
test
insl
daa
in
daa
incl
pop
pop
out
xchg
cmpsl
and
in
adc
push
add
add
loop
xchg
add
push
add
mov
pop
or
js
popf
lds
filds
pop
xchg
adc
xchg
test
and
popl
mov
xchg
imul
dec
inc
sub
mov
pop
mov
or
adc
jb
aaa
out
out
add
push
inc
mov
add
jno
mov
scas
jp
fsubrl
mov
jo
dec
jo
push
leave
and
shlb
inc
jnp
out
push
out
pop
call
lcall
and
test
nop
outsl
daa
or
mov
inc
add
dec
add
pop
movsb
or
lock
xchg
jmp
in
xchg
sahf
xchg
js
bnd
adc
dec
bnd
mov
pop
ja
fsubrs
adcb
push
xchg
ja
fisttpll
push
ljmp
jns
dec
aaa
add
xor
scas
je
test
inc
int3
jbe
loop
mov
setl
cmp
data16
pop
push
lret
mov
xchg
xchg
add
shr
rolb
adc
notb
xor
inc
imul
push
sub
bound
cmpsl
add
in
inc
mov
cmpsb
sbb
jmp
daa
mov
sahf
in
in
cmp
pop
push
xchg
sub
lcall
jb
enter
aad
loopne
jmp
inc
mov
add
add
in
daa
and
mov
nop
xchg
adc
insb
pop
insb
push
xchg
or
push
jo
scas
cmp
daa
loopne
test
sbb
lods
pop
out
outsl
cmpsb
imul
loope
add
stc
aaa
out
out
in
xchg
pop
insl
sub
mov
inc
add
dec
dec
movsb
add
andb
andb
mov
fucomip
or
mov
mov
and
xchg
xchg
lret
mov
xchg
dec
cs
stos
inc
jb
mulb
mov
dec
mov
sti
xchg
pushf
dec
js,pn
inc
movsb
leave
mov
adc
rclb
leave
and
xchg
ja
rorl
outsl
repz
push
mov
dec
mov
setp
jmp
stos
filds
inc
mov
push
and
push
shlb
and
dec
test
jno
aaa
jg
dec
cmp
xchg
repnz
add
stos
pop
mov
fidivl
std
push
cmc
iret
add
push
orb
add
outsb
vmwrite
sub
sbb
cmp
adc
addb
and
lods
mov
jb
push
ja
movq
mov
add
xchg
add
or
adc
iret
hlt
mov
mov
jne
sbb
add
pop
push
xchg
mov
add
lods
pushf
pusha
cwtl
jge
je
bsf
dec
jb
enter
add
insl
add
sbb
js
addl
in
and
or
xchg
cmc
jl
mov
push
sbb
sahf
sbb
mov
cmp
pop
cmc
shl
test
sahf
faddl
push
fistps
add
outsb
fistpll
testb
shrb
push
cmpsb
add
mov
paddw
and
mov
in
fcmovb
push
push
minps
addr16
xchg
add
das
iret
leave
dec
ja
push
lea
in
pop
les
jne
notl
sbb
clc
jbe
outsb
daa
cmp
xor
orps
and
test
jb
pushf
clc
sbb
dec
mov
xlat
fisttpll
out
leave
mov
je
or
push
pusha
call
cmp
mov
scas
divl
add
pop
mov
paddusb
cmp
js
js
add
pop
xchg
pandn
addr16
addb
push
fists
add
jo
mov
mov
mov
ja
aaa
mov
pop
movb
add
daa
xchg
xchg
push
clts
cli
xor
or
xchg
and
push
sub
add
lea
cmp
add
iret
jns
jg
and
ficomps
test
nop
fwait
add
mov
xchg
daa
mov
mov
cmp
add
jns
cs
repz
jp
push
jp
lea
jns
adc
xor
xchg
and
adc
addr16
push
push
lods
lods
addr16
mov
daa
insl
push
or
into
rcr
lret
outsb
pavgw
push
add
push
es
cld
jnp
push
daa
scas
addr16
inc
ds
das
add
aas
add
inc
add
dec
push
pop
pop
xlat
or
sub
adcb
dec
add
xchg
lret
addr16
mov
negb
push
sub
in
adc
inc
mov
push
cmp
inc
add
jne
test
jl
xchg
cmpsb
inc
jb
sub
insl
std
bound
loop
lock
das
jno
mov
jb
xchg
decb
cmp
pop
xor
pop
or
shl
mov
nop
dec
and
repnz
insl
decb
mov
enter
setb
sbb
push
and
sub
decl
xchg
jge,pn
xchg
dec
dec
add
insb
jbe
jle
movsb
mov
pop
pop
dec
mov
pop
push
mov
and
in
sbb
push
add
push
add
es
ss
xchg
sbb
jle
xchg
mov
add
pop
jo
aas
mov
dec
dec
inc
fucomi
testb
jg
push
lea
in
rclb
add
sbb
cmp
pop
pop
jg
jg
xchg
mov
sub
out
add
fucomi
jg
mov
scas
cmp
jb
jg
jg
jg
jmp
adc
xorb
movsb
jnp
sbb
add
or
incl
add
out
movsb
mov
addb
mov
ss
iret
mov
mov
leave
sbb
pop
jb
ss
clc
addl
adc
subl
in
ret
dec
add
inc
sbbl
iret
jg
xchg
sub
sbb
pop
add
popf
pop
jo
mov
rolb
xchg
and
fiaddl
add
lret
xchg
repnz
or
mov
xor
sbb
or
dec
inc
xor
adc
in
enter
adc
adc
bound
push
fistps
mov
and
outsl
xchg
add
cmp
aaa
sbb
jecxz
push
cltd
cmp
push
add
sbb
sbb
cmp
push
inc
dec
xchg
mov
xchg
mov
lods
mov
test
wbinvd
cmp
add
or
daa
jbe
andl
jbe
jle
adcl
xchg
cltd
mov
dec
or
test
nop
mov
mov
sbb
cmovg
add
fs
iret
push
cmp
pop
aas
data16
sub
mov
repnz
into
push
shlb
lods
cmp
rolb
dec
adc
int3
cmp
pop
sub
mov
hlt
stc
jns
add
into
add
inc
sysret
addb
pusha
daa
nop
lcall
jmp
ljmp
cmp
add
xor
pop
push
inc
add
pop
pushf
ret
lahf
or
cmc
mov
or
daa
pusha
jb
push
or
and
in
jbe
pop
cmpsb
cmpxchg
idivl
xlat
push
call
les
decl
mov
test
out
iret
cli
sahf
pusha
mov
filds
call
repnz
or
sbb
pusha
push
cmp
incl
popa
add
sahf
int3
out
outsl
jge
jnp
enter
pop
mov
imul
pop
or
jns
inc
sbb
xchg
enter
xor
inc
add
mov
jb
add
mov
enter
lcall
stc
cmp
rol
push
or
lcall
daa
mov
mov
push
das
add
aam
add
pushf
pushf
push
jb
dec
enter
or
fisttpll
sbb
push
inc
dec
data16
push
pushl
mov
and
out
jbe
pop
or
or
and
int
lds
mov
movsl
or
lcall
xor
data16
dec
jnp
mov
cmpsb
popa
in
add
mov
ss
decl
dec
cs
addr16
or
mov
stc
push
fildl
jecxz
add
jb
loopne
ja
dec
jp
cmp
ds
push
mov
pop
add
xlat
cwtl
mov
dec
insl
cmp
in
ja
ja
mov
mov
and
shrb
ret
pop
add
push
repnz
pop
push
dec
daa
insb
cmovae
pop
pmaxub
jl
mov
or
pop
cmpsl
or
shlb
fsubr
mov
sub
andps
fisttpll
sahf
insb
add
jl
test
maxps
push
ficoml
add
insb
xlat
pop
scas
push
rolb
faddl
repnz
mull
movsb
push
test
xor
dec
ja
mov
cld
and
daa
pop
gs
jne
xchg
mov
adc
cwtl
mov
test
mov
mov
insl
nop
xchg
fninit
aaa
mov
lea
lea
fisubl
ja
ss
dec
push
pop
add
lahf
gs
xchg
xor
pop
leave
dec
pop
adc
in
add
cmp
mov
sub
and
mov
push
add
sbb
iret
adc
cmpsl
fcmovne
leave
inc
ret
xchg
and
push
push
inc
dec
testb
decb
jmp
adc
in
movsb
and
imul
in
leave
enter
cmpsl
cld
daa
daa
mov
sahf
mov
pushf
ljmp
out
mov
testl
fimuls
into
pop
sbb
and
and
daa
and
das
or
or
xchg
daa
mov
cvtps2pd
push
stc
leave
enter
xchg
lea
movsl
cmp
sti
outsb
mov
add
cmp
sbb
fabs
pop
jmp
icebp
add
pop
or
out
inc
repnz
xchg
dec
sbb
xor
cmp
add
aam
xchg
leave
lods
mov
xadd
add
rcr
pop
pop
loop
in
adc
cmp
or
lahf
adc
out
xchg
sbb
xchg
and
pop
leave
dec
add
pop
outsl
xchg
je
sub
and
fdivrs
fisttpll
ficoml
sbb
mov
mov
xchg
push
adc
sahf
sub
pop
ss
dec
dec
divl
pusha
movsb
or
xchg
jg
in
mov
paddsw
outsl
push
ret
rorb
es
rcr
loop
pop
das
ljmp
xchg
or
pop
pop
push
jge
dec
adc
push
dec
add
push
aas
rorb
subb
leave
inc
jnp
jnp
mov
xchg
fwait
cmpsl
mov
push
lret
cwtl
mov
leave
dec
ja
das
xchg
add
je
and
mov
push
ds
inc
add
enter
add
add
ja
mov
fisubl
mov
dec
dec
mov
iret
xchg
xchg
mov
cmp
in
cmc
cmpsl
loopne
or
ja
inc
inc
xchg
jg
xchg
mov
inc
mov
cvtdq2ps
add
jb
mov
xchg
fisubrl
sbb
add
pushf
fmull
leave
rorl
fabs
push
and
fistpll
sbb
xchg
mov
adc
add
repnz
xor
sysenter
cmp
sbb
or
loope
or
sbb
xchg
lcall
xchg
pop
dec
jo
aad
fisttpll
dec
in
mov
xchg
out
in
lds
adc
ja
int3
fisubrs
xchg
clc
cmp
inc
add
sbb
sbb
enter
jbe
jbe
jle
adc
sbb
push
xchg
iret
inc
sub
fcmovnbe
xchg
pop
sahf
or
cmp
fcomps
pop
cltd
adc
cmp
mov
mulb
sub
inc
push
xchg
xchg
xchg
xchg
pop
arpl
mov
cmpsl
push
pop
mov
stos
add
push
cmp
lret
aad
mov
and
cmp
lcall
pop
add
add
sub
dec
add
int
popf
in
outsb
push
adc
cwtl
fsubrl
daa
mov
xadd
leave
movsb
mov
mov
jl
jns
mov
fwait
fwait
push
jnp
addl
dec
fidivrl
dec
andnps
pusha
add
xchg
daa
and
add
enter
orl
lods
mov
sarb
repnz
in
adc
pushf
add
xchg
and
prefetch
adc
ror
xor
cmp
pop
mov
outsb
pcmpeqd
and
dec
pushf
mov
test
mov
int3
aam
addr16
inc
imul
aas
jns
cmp
pop
add
pop
pop
pop
push
and
sbb
pop
daa
or
or
and
aas
cmova
mov
cmpsl
xchg
push
orl
pop
popf
cmp
cltd
jge
roll
paddusb
repnz
add
xchg
add
mov
inc
clts
and
cmp
dec
sahf
pop
mov
loopne
push
and
out
dec
bswap
push
push
pop
and
enter
or
or
call
shll
out
fldcw
push
les
inc
sahf
mov
add
faddl
mov
mov
push
pop
addr16
pushf
cmp
add
push
add
daa
inc
mov
arpl
add
or
jae
pop
cmp
dec
sahf
mov
test
and
xchg
pminsw
repnz
leave
xchg
cli
mov
cmp
dec
pop
sub
push
leave
sub
and
pop
pusha
punpckhbw
push
jb
mov
xor
jbe
push
fwait
mov
dec
cmp
jns
push
mov
sub
sbb
push
outsb
out
xlat
push
icebp
add
in
or
and
mov
cld
daa
xor
aaa
lock
mov
lock
xchg
test
insb
daa
xchg
outsl
daa
sub
mov
mov
and
dec
outsw
mov
paddusw
enter
repz
add
enter
pop
pop
or
sub
xor
jb
or
or
inc
mov
adc
enter
adc
inc
mov
push
les
iret
sbb
in
enter
sbb
sbb
in
in
pop
push
adc
in
adc
adc
in
in
push
or
fisubrs
xor
and
jmp
jns
adc
cmp
add
and
in
daa
int3
daa
pushf
daa
xchg
es
negb
mov
add
mov
adcl
add
mov
cmp
in
push
mov
sbb
leave
add
mov
mov
leave
mov
xchg
and
mov
xchg
fisttpl
addr16
cmp
and
dec
outsl
push
pshufw
add
in
add
in
loopne
pop
aaa
mov
jg
mov
leave
push
movsl
cmp
dec
jb
and
and
ja
iret
movsb
pop
and
jnp
mov
int
cs
xchg
add
xlat
into
pop
cmpsb
add
out
cmpsb
and
mov
cmp
xchg
xchg
out
inc
xchg
add
fisttpll
outsb
jbe
jle
in
mov
mov
in
ret
add
lahf
xor
pop
cmpsb
cld
cmpsl
or
sar
xor
push
cmpsl
fisttps
inc
add
cwtl
popf
mov
fbld
imul
or
jnp
mov
pop
xchg
or
dec
inc
mov
addl
cltd
add
cmp
in
test
mov
mov
push
and
or
inc
sub
cmp
cvtps2pi
rolb
sub
test
mov
push
jae
jnp
addl
xchg
daa
and
outsb
in
enter
or
xchg
or
xchg
jno
out
iret
push
jb
les
inc
cs
dec
push
fsubl
push
push
test
iret
cmp
stc
xchg
test
sbb
mov
add
adc
les
aas
test
jbe
daa
push
hlt
ja
mov
xchg
popf
movsl
lods
lgs
in
popf
stos
mov
call
loopne
add
stos
inc
lds
sbb
imul
push
push
jns
xchg
sub
cmp
movsb
out
movsb
mov
outsl
sbb
loopne
addl
cmpsl
lock
lahf
cmpsl
pop
add
out
test
adc
fimull
or
mov
loopne
pusha
jg
xlat
stos
cmp
imul
inc
mov
xor
in
in
movsb
or
addl
leave
mov
push
repnz
xor
stos
fistps
add
jnp
jb
mov
or
ret
add
push
rcll
mov
inc
cmp
popf
xor
lods
and
inc
dec
add
push
cltd
ja
add
fcmovne
mov
out
push
xchg
insl
push
aam
mov
daa
and
in
idiv
leave
enter
or
or
dec
ret
leave
leave
and
xor
xor
iret
lods
push
lods
lods
rorb
pusha
xchg
xor
outsb
daa
daa
insl
jbe
xchg
lcall
xor
in
mov
lods
outsl
shrb
xchg
sbb
add
out
inc
jg
or
inc
xchg
or
in
daa
xor
imul
roll
pop
scas
xchg
pop
fwait
add
shrb
pop
xor
pop
inc
lods
jo
scas
das
mov
mov
mov
leave
in
scas
into
push
psubusw
inc
dec
bound
aaa
imul
xchg
mov
movsb
dec
xor
and
or
or
xor
mov
daa
dec
scas
fwait
sbb
push
lds
adc
push
ja
dec
or
rol
xchg
inc
jmp
movsb
cmp
pusha
add
push
ss
sbbl
outsb
daa
pushf
pop
mov
add
in
fmuls
adc
mov
frstor
mov
fcoms
pop
aaa
or
daa
dec
cs
cmpsl
push
movsb
cmp
das
mov
aaa
inc
pop
sahf
fsubrl
mov
lahf
xlat
add
out
add
add
leave
leave
leave
pop
add
in
leave
add
or
cmp
pop
or
movsb
repnz
aaa
pushf
mov
push
add
push
or
pop
jb
jb
jbe
sahf
cmpsb
add
add
mov
push
mov
or
or
and
lret
cmp
das
cmp
and
mov
insb
xcrypt-ctr
cmpsl
push
xor
add
dec
inc
inc
mov
xchg
push
pushf
pop
popf
mov
lods
popa
leave
in
in
movsb
dec
mov
andps
pop
and
lds
fs
adc
enter
adc
in
mov
inc
sahf
pushf
aam
sbb
in
xchg
mov
and
hlt
pop
paddb
xchg
fsts
or
pop
adc
fs
sbb
and
sub
sub
sbb
jb
sub
inc
sub
xchg
and
sub
dec
mov
leave
insb
je
jl
xor
add
or
ja
sbb
push
xlat
mov
or
cmp
daa
pop
call
cmp
add
daa
cwtl
data16
cmp
mov
mov
xor
xchg
lret
cmp
jnp
jnp
or
xchg
add
inc
jo
jb
push
dec
push
pop
gs
movsl
push
xchg
cmp
dec
mov
outsl
pushf
sbb
jnp
add
xchg
add
inc
mov
outsb
mov
xchg
or
lret
dec
ficoml
loop
out
push
mov
jb
enter
adc
adc
adc
inc
mov
push
insb
jb
enter
sbb
mov
inc
mov
xchg
sbb
in
xchg
and
and
and
and
and
and
lods
prefetch
sbb
xchg
sub
sub
outsl
mov
in
inc
aas
dec
pop
push
jg
lahf
imul
jno
jns
andl
mov
xchg
pop
pushf
push
movsb
sbb
lods
sbb
sbb
les
int3
sbb
push
fcoml
in
out
adc
adc
xchg
or
and
inc
pop
addr16
mov
imul
enter
add
add
cmp
pop
sahf
or
inc
mov
push
mov
or
or
out
lock
mov
repnz
sbb
and
xchg
and
adc
sbb
jb
dec
sbb
sbb
xchg
and
jnp
test
in
pushf
pop
test
fcmovnb
dec
int
fmuls
stc
jnp
iret
repz
sbb
mov
xchg
and
sbb
cmp
enter
adc
mov
mov
push
pop
or
in
xchg
or
or
cmp
add
and
test
add
ds
divb
xchg
push
ds
ror
or
xor
push
sbb
xor
pop
pop
xor
and
mov
or
or
xchg
push
pop
pcmpgtw
insl
adc
bnd
jne
jne
in
xchg
pop
lahf
cmpsl
mov
push
push
jno
mov
clc
xchg
xchg
mov
stc
push
push
mov
sbb
dec
inc
mov
add
inc
add
fmull
cvtdq2ps
imul
cmp
jae
orl
setle
test
dec
popw
mov
pushf
pushf
pushf
pushf
out
mull
dec
mov
sbb
and
mov
inc
pop
pop
push
outsb
daa
and
jbe
jle
daa
and
add
xchg
mov
mov
mov
enter
push
pop
shlb
dec
loopne
pop
call
addr16
inc
mov
lods
mov
inc
mov
fidivrs
add
dec
add
pop
fs
xchg
add
jg
sbb
repnz
xchg
or
cmp
pop
in
push
mov
xchg
xchg
and
adc
cli
movsbl
fcmovne
add
pop
xor
enter
cmp
inc
push
sbb
fs
pop
push
cmp
jns
mov
inc
sahf
mov
daa
inc
outsb
daa
and
in
maskmovq
idivl
daa
or
cs
cmp
push
mov
filds
sbb
push
jg
mov
xchg
add
and
pop
jb
pop
pusha
shrl
or
or
jnp
fucom
or
out
idivl
cmp
jb
rolb
pop
mov
adc
das
pop
aaa
push
in
cwtl
mov
dec
push
dec
adc
cmp
sbb
pop
sbb
addr16
outsl
dec
and
xchg
out
dec
rclb
xchg
mov
into
cmp
xchg
fimuls
out
out
inc
movsb
and
stc
roll
inc
dec
adc
daa
shll
cmp
cmp
jbe
jb
arpl
jnp
setno
imul
xchg
scas
scas
or
sarb
lahf
call
adc
inc
mov
push
pop
and
and
push
sbb
sbb
sub
xchg
sbb
sbb
jbe
repnz
and
jb
fsubrl
fstpt
mov
push
xchg
and
pop
sub
jb
cmp
enter
sub
and
sbb
xor
xchg
xchg
mov
iret
aad
loopne
ss
jb
lret
clc
aaa
ret
add
sahf
cmp
sbb
cmp
inc
mov
aas
in
clc
mov
inc
fimuls
push
inc
out
and
outsb
daa
and
inc
ds
das
push
into
or
adc
les
cmp
add
movsb
cmp
dec
lahf
dec
adc
add
dec
dec
mov
lea
les
les
or
rcrb
add
inc
mov
add
stc
leave
enter
add
movups
sbb
in
fldt
pop
xor
inc
push
dec
cmovbe
push
inc
mov
dec
scas
push
cwtl
adc
dec
scas
mov
mov
fisttpll
ficompl
out
sbb
mov
or
pop
and
and
dec
xchg
andl
dec
pop
adc
mov
cltd
lcall
mov
sahf
aam
pandn
add
add
cmc
movl
leave
in
push
or
and
dec
aaa
sbb
jb
inc
or
arpl
pushf
mov
jbe
and
mov
in
leave
enter
sbb
rcrl
das
mulb
sbb
hlt
push
ud0
jb
enter
and
and
and
sub
and
sbb
jb
dec
sub
push
sub
insl
test
cmp
mov
movsb
lds
sbb
out
push
xlat
add
mov
add
add
or
pop
adc
outsb
daa
and
push
es
ss
incb
leave
ds
inc
or
mov
daa
mov
xor
jle
leave
leave
leave
add
jb
enter
loop
in
or
or
lret
push
sbb
and
pushf
pop
and
das
adc
adc
fnstcw
push
pop
add
sbb
pop
jae
sub
jle
jnp
push
daa
daa
and
pop
mov
enter
and
and
and
dec
or
lret
pop
iret
lret
aad
xor
lret
inc
push
inc
dec
adc
inc
push
cmc
ret
sbb
and
sub
dec
loop
add
jle
fs
pop
scas
lret
push
xchg
add
xor
or
or
or
or
int3
or
mov
mov
inc
adc
fsts
adc
outsl
mov
outsl
xchg
xchg
sbb
lahf
sbb
mov
sarb
mov
int3
repz
push
sti
add
jo
repnz
push
sbb
and
sbb
mov
sub
xor
cmp
dec
inc
dec
or
aas
push
inc
mov
dec
out
push
fs
insb
cltd
mov
orb
adc
xchg
popf
mov
adc
mov
rcrb
fsubr
leave
enter
sbb
repz
nop/reserved
repnz
pop
into
add
or
adc
xchg
mov
loopne
cmp
pop
pop
sbb
push
push
inc
mov
fistpl
push
dec
jne
addb
xchg
xchg
and
pop
in
leave
enter
ret
int
sbb
jb
push
fmuls
jecxz
out
adc
and
adc
sbb
outsb
outsl
das
and
sbb
xor
cmp
dec
sbb
in
leave
enter
imul
in
jg
dec
mov
xchg
and
sbb
and
movsb
jb
fisttpll
xlat
into
sub
adc
mov
loopne
xor
push
scas
add
xchg
daa
mov
shlb
fstpt
inc
push
sub
cmp
rclb
outsl
mov
mov
in
in
stos
mov
shl
in
int3
add
add
and
in
or
roll
or
in
add
push
sbb
das
sqrtps
pop
adc
dec
inc
mov
jb
adc
xchg
push
loopne
jmp
divb
ss
add
pop
pop
sbb
and
sub
jl
sahf
int3
sahf
sahf
and
test
xchg
and
es
loopne
xchg
fcmovnu
leave
jmp
aas
jmp
das
sub
test
imulb
das
pop
pop
xor
jbe
and
aas
and
das
sub
xor
inc
ss
dec
pop
bswap
xchg
pop
repz
rcll
leave
in
leave
test
lret
xchg
dec
arpl
into
inc
push
jbe
pop
dec
shrl
in
pop
xchg
les
xchg
inc
outsw
das
repnz
paddw
or
in
enter
or
ss
fucomi
fs
dec
das
pop
pcmpgtb
pop
leave
in
leave
enter
test
seto
das
test
mov
pop
mov
xchg
leave
aam
loope
stc
mov
enter
push
nopl
fcmovne
enter
and
pop
enter
cmp
sub
jb
stos
sub
sub
pushf
mov
cs
inc
das
push
inc
sahf
int3
sahf
pop
xor
addr16
jge
popf
int3
ficomps
jecxz
out
bswap
leave
in
jbe
outsl
add
bndldx
dec
fcmovb
mov
push
xchg
mov
mov
pop
mov
or
psubq
insl
into
pop
shld
xor
out
push
sub
pop
clc
add
jo
xlat
xlat
dec
dec
fiaddl
adc
cmpsl
in
mov
mov
adc
mov
lret
cmp
or
das
popf
xchg
subb
pop
adc
pop
pop
pop
mov
add
cwtl
xor
and
add
inc
add
adc
xor
in
outsl
push
xorb
pop
add
lret
iret
cs
inc
push
and
ljmp
adc
inc
scas
into
sub
xchg
pop
inc
outsb
dec
ret
imul
in
inc
xlat
add
cs
add
mov
add
sub
pop
push
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
push
inc
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
out
xchg
addl
dec
dec
mov
or
into
aas
xlat
sbb
data16
test
mov
add
adc
add
fsubrs
add
adc
mov
rorl
mov
jne
addb
adc
mov
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
mov
adc
div
jl
js
jo
sahf
out
sahf
push
inc
jns
out
xor
and
out
sahf
out
adc
add
sahf
out
scas
repz
push
clc
hlt
lock
int3
pop
repz
mov
mov
mov
iret
repz
je
push
or
iret
mov
fistpll
out
sub
sbb
repnz
jns
out
push
in
fadd
mov
out
sahf
out
nop
mov
mov
pop
push
dec
repnz
repz
xor
add
cmp
cmp
clc
push
in
fmul
mov
movsb
nop
faddl
mov
icebp
jl
push
dec
add
mov
adc
pop
xchg
or
adc
and
mov
pop
cmpsl
jmp
into
rolb
add
cmp
mov
add
adc
dec
daa
aas
sbb
and
xchg
add
push
dec
inc
test
jbe
scas
lret
and
xorb
icebp
call
push
jnp
push
push
mov
add
push
fbstp
cmpsl
rolb
dec
add
ret
add
mov
add
add
mov
addb
es
mov
add
sti
cmp
andb
pop
ror
outsl
iret
inc
les
pop
lds
cs
leave
mov
jl
enter
mov
insl
add
in
pusha
mov
add
add
aas
movsb
enter
es
jb
enter
movups
add
add
nop
inc
mov
and
iret
push
clc
or
adc
addr16
xor
mov
in
enter
or
or
adc
in
and
mov
adc
inc
mov
add
pop
clc
and
and
enter
and
and
inc
pusha
fsubrs
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
out
push
cmp
mov
xor
enter
idivb
dec
insl
add
mov
sbbb
bnd
das
adc
repz
dec
insb
dec
nop
sub
add
inc
dec
repnz
inc
pushf
or
in
ds
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cltd
cli
fldl
xchg
and
add
addr16
add
aas
jno
or
mov
pop
fs
fisttps
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
pushl
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
cmp
cmp
std
xlat
cmp
mov
sbb
ljmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
enter
orl
pop
ficomps
frstor
add
sub
adcb
loopne
pop
jnp
outsb
xlat
add
inc
je
add
inc
inc
push
dec
addr16
push
out
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
fldt
or
mov
call
push
inc
dec
inc
jo
inc
popa
shrl
push
outsb
jbe
imul
lods
lods
pop
gs
outsl
mov
aas
dec
insb
imul
dec
push
dec
insb
xor
push
cmp
add
clc
rcl
adcl
daa
pusha
push
or
and
mov
pushf
push
inc
inc
inc
test
out
dec
inc
gs
inc
adc
outsb
gs
daa
inc
insb
les
ds
arpl
mov
inc
or
and
bound
inc
sbb
push
dec
pop
mov
sbb
add
popf
ret
xchg
push
cld
cmpsb
insb
and
mov
rorb
push
fs
pusha
sub
inc
daa
aas
dec
or
sbb
imul
adc
jae
imul
data16
and
inc
inc
inc
jg
inc
jns
dec
mov
loopne
lahf
push
push
push
push
push
cmp
popl
lods
mov
data16
jns
ljmp
cltd
xor
mov
dec
in
inc
add
inc
je
jb
dec
push
dec
dec
sbb
jae
jbe
dec
cmpsb
lods
cmpsb
pop
test
pop
dec
mov
movsl
cwtl
or
dec
adc
add
pop
dec
inc
jnp
cli
popa
jne
arpl
outsl
push
push
bound
dec
dec
pop
xlat
push
adc
xchg
add
sub
les
sbb
mov
inc
xchg
push
mov
push
js
cli
dec
addb
mov
mov
rcrl
inc
pop
dec
notl
push
loope
push
notl
cmp
ds
xor
jbe
test
mov
mov
das
push
or
adc
push
clc
stos
inc
mov
jne
push
fcoms
adcl
repnz
mov
cmp
inc
arpl
push
insl
les
cmpsl
inc
push
pushf
nop
pusha
out
sub
repz
jg
mov
mov
pop
popl
adc
or
and
add
add
outsb
data16
xchg
inc
add
fisttpl
ja
mov
pusha
pop
ja
fisttpl
xchg
ja
or
les
stos
push
pop
pop
sbb
aam
pop
push
stc
jl
add
lahf
icebp
shll
push
ja
std
push
xchg
lcall
mov
scas
xlat
xchg
aam
dec
dec
lahf
insb
mov
push
inc
dec
lahf
add
test
popl
stos
and
dec
movsb
cmp
mov
adc
stos
leave
addl
mov
push
lahf
or
or
adc
cmp
subl
xchg
dec
and
adc
cli
push
dec
dec
jbe
mov
aaa
or
xchg
jae
in
cmp
push
inc
push
inc
mov
sbb
insl
imul
jne
inc
stos
adcb
rolb
adc
imul
outsl
addr16
or
or
insl
mov
iret
pop
les
inc
stos
andb
cmp
xlat
out
pop
fadds
add
jns
iret
repz
sub
xchg
lock
jns
out
test
js
xor
insb
sahf
inc
or
hlt
cwtl
mov
push
push
add
push
sbb
pusha
js,pt
adc
insb
daa
lahf
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
add
cmp
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
jmp
pop
cmp
fldenv
cmp
fisubs
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
mov
mov
jl
das
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pop
rcl
xor
mov
js
stc
subb
lcall
cwtl
push
loope
or
insl
or
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
lcall
loop
fistpl
arpl
test
fs
ds
decl
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pop
cmp
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
lcall
iret
mov
mov
sbb
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
incb
pop
mov
xchg
jg
rolb
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
sub
add
fildl
push
lcall
xor
push
cmp
jns
rcrl
sub
mov
dec
inc
js
inc
insl
bound
add
or
loopne
add
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
mov
push
dec
inc
sbb
fistl
aam
inc
or
mov
inc
cmp
ret
dec
mov
add
fs
pop
or
ss
jbe
in
gs
cmp
or
inc
aas
push
inc
movsb
push
xchg
stos
popa
fs
inc
jle
inc
rcl
bound
sub
mov
getsec
pop
orl
insb
popa
jns
push
add
ljmp
push
push
mov
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
inc
ljmp
sahf
bound
push
inc
adc
stos
aaa
inc
and
sbb
inc
pop
jnp
adc
pop
es
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
sti
mov
push
jge
xor
fidivs
adc
arpl
add
aaa
mov
test
push
push
add
pop
inc
cmp
xlat
scas
inc
adc
add
imul
push
shrb
orb
and
mov
lahf
push
mov
dec
jo
fisubl
pop
mov
xlat
mov
push
and
pop
xchg
loopne
cmpsl
sbb
inc
jb
iret
or
mov
dec
popa
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
mov
inc
bound
adc
in
push
andl
test
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
popl
pop
push
outsl
inc
xchg
stos
shrb
fcom
aad
inc
and
pusha
adc
sahf
mov
stos
cmp
insb
daa
sub
mov
adc
inc
xchg
jne
xor
jg
rcl
movsl
divl
arpl
sbb
xchg
add
adc
js
fmuls
pop
sub
sbb
jg
imull
add
cmp
cmp
jo
imul
pop
and
movsb
push
xchg
mov
outsl
xchg
fisubl
add
pusha
and
and
rcll
push
or
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
add
test
inc
inc
add
adc
adc
push
add
fadds
adc
add
inc
das
add
add
test
xor
dec
pop
nop
xchg
js
xor
cmp
mov
fwait
and
add
and
rorb
add
js
add
outsb
outsl
je
jb
sub
add
dec
push
and
std
outsl
pop
xchg
cs
cmpsb
dec
shrd
popa
incl
lea
das
jg
or
bswap
mov
out
in
sti
sti
out
jmp
jmp
repnz
in
push
pusha
ljmp
lret
das
insl
stc
dec
cli
push
cld
push
imul
add
inc
dec
xchg
dec
xchg
rcl
mov
daa
in
lea
adc
or
or
mov
daa
aam
cmp
add
pop
xchg
cltd
cli
pop
add
out
std
loope
verr
add
sbb
pop
cmp
add
xor
push
test
adc
sub
mov
enter
subb
or
loop
and
push
pusha
push
add
pop
add
cs
lock
add
add
les
or
add
jb,pn
leave
addb
mulb
inc
inc
dec
lret
pop
inc
xor
cs
mov
jbe
in
dec
or
shrb
mov
push
xlat
out
add
test
sbb
jb
test
sahf
out
xor
dec
sbbb
or
es
pop
imul
and
mov
cltd
cmpsb
jmp
dec
enter
sahf
mov
ss
sub
lea
or
or
dec
and
mov
jecxz
insb
lods
pusha
lret
xchg
xor
jp
xchg
mov
mov
push
or
xchg
les
inc
push
lock
fcmovnbe
negl
xor
call
adc
out
add
cmp
ja
jne
jmp
mov
movsl
and
add
add
or
sbb
call
orb
lret
in
loope
adc
mov
xor
outsb
push
mov
mov
or
and
jl
movsl
push
es
movb
sbb
push
lea
sti
push
pop
adc
adc
rclb
push
cmpsb
jno
or
push
mov
sbb
push
insb
cmp
fisttpl
mov
call
nop
fadds
add
mov
call
mov
adc
inc
sub
cmp
jbe
lret
xchg
ret
sub
mov
push
sub
pop
ret
test
cmpsl
jge
add
cmp
nop
stos
or
and
roll
cmp
push
movsb
xorb
push
ret
pop
imul
xchg
and
mov
std
inc
call
or
loopne
call
mov
push
dec
ret
mov
sub
sbb
aad
sub
xor
push
push
jns
inc
imul
add
adc
lods
cmpsb
and
push
fcomps
push
sti
subb
cmp
dec
cmpxchg8b
enter
sbb
lock
dec
sti
mov
push
insb
push
inc
xchg
dec
adc
dec
pop
jae
inc
loopne
shlb
mov
movsl
popa
roll
add
lcall
les
sarb
or
imulb
push
push
push
in
adc
add
dec
in
push
popa
adc
cmp
push
xor
push
or
pop
add
inc
cmp
xchg
dec
addr16
jp
or
push
icebp
push
mov
or
add
push
pop
sbb
mov
dec
add
ret
orl
dec
test
pop
push
mov
cltd
test
jle
add
lods
and
sub
dec
fmuls
es
mov
xchg
or
lock
push
test
push
mov
jo
sbb
aam
sti
clc
das
jp
pop
inc
test
movb
dec
adc
and
add
push
mov
aam
fildl
jo
mov
and
or
mov
jno
sbb
cmp
rorb
push
jnp
jno
roll
in
add
adc
roll
imul
dec
lock
or
adc
add
popf
jbe
loop
insl
jmp
xlat
hlt
or
loope
dec
pop
mov
lods
push
pop
movsl
mulb
push
xchg
xor
pop
jne
pop
rcl
mov
in
push
sub
jae
aas
adc
xchg
icebp
jne
outsb
fcoml
and
stos
sbb
ljmp
imul
loop
je
call
rcll
inc
push
push
insb
faddl
sub
call
lahf
push
mov
imul
pop
mov
sbb
fcoml
inc
jno
and
cmc
push
add
int
xchg
bound
sbb
lcall
or
stc
jp
mov
push
out
pop
sbb
or
mov
in
cmpsb
xlat
pop
jp
push
or
inc
or
sub
imull
and
pop
xchg
sbb
push
and
push
test
ja
mov
rolb
rcr
jg
roll
push
jnp
lcall
pop
cmp
ret
loope,pn
xor
fdivs
pop
lea
inc
ljmp
pop
inc
add
and
inc
aam
pop
add
fldt
sub
and
fwait
add
scas
pop
es
sbb
cli
lret
aaa
rclb
leave
repz
xchg
loope
call
mov
lret
push
add
sub
aad
add
pop
push
call
xchg
std
or
call
lret
dec
pop
jne
xchg
lea
xor
mov
push
scas
or
xchg
sub
nop
lahf
push
mov
aam
out
hlt
jmp
les
sbb
add
push
lock
pop
fisubrl
gs
bndstx
pop
pop
mov
dec
adc
call
shrb
lds
lods
or
clc
mov
pop
mov
xchg
xchg
mov
push
sbb
mov
call
in
dec
or
nop
mov
inc
sbb
je
or
or
imul
aad
add
mov
cs
cmp
dec
sbb
sbb
mov
repz
and
mov
sub
mov
pop
jmp
ficoml
cwtl
pop
andl
repz
cmpsb
mov
sbb
push
or
sbb
sub
es
rcrb
or
xlat
jle
xor
jecxz
rorl
mov
inc
mov
pop
mov
add
add
xchg
sbb
fstps
aas
mov
sub
in
or
stos
lds
and
push
pop
lahf
mov
sbb
mov
movsl
gs
jbe
xchg
push
je
test
ljmp
bound
xsha256
cmpsb
push
or
push
hlt
push
insb
inc
cmp
push
sbb
inc
add
push
adc
and
push
jo
int3
add
mov
add
pop
ss
fimuls
lret
cmc
xor
push
ds
cltd
mov
or
movsl
and
jne
ds
jnp
xchg
xchg
sbb
push
sbb
sbb
popa
subps
xlat
fadds
popa
or
jecxz
mov
sbb
es
adc
push
pop
add
dec
fdiv
push
sbb
xor
rclb
int3
call
push
push
jmp
mov
jmp
pop
stos
fwait
lahf
dec
jl
cmp
cmp
mov
xchg
and
mov
fcompl
jb
call
sahf
les
lds
daa
xchg
xlat
rolb
addr16
xchg
sbb
mov
xchg
test
in
xchg
sbb
push
lea
adc
aaa
dec
add
push
inc
push
cmp
add
scas
arpl
pop
adc
scas
mov
mov
sbb
sub
daa
rorb
movsl
xor
or
cmp
xchg
add
out
out
cmp
idivb
call
call
loope
hlt
fdivrp
xor
lds
cmp
mov
movb
add
es
cmp
jno
mov
jecxz
add
fistpl
xchg
psubsw
push
xchg
xchg
das
add
sbb
arpl
xor
call
or
mov
int3
or
mov
mov
mov
cs
shlb
mov
outsl
push
adc
pop
mov
pop
and
lea
add
dec
ss
mov
rep
xchg
test
movsb
loope
inc
fsubrl
pushf
fsts
xchg
fs
mov
dec
pop
adc
mov
rcll
or
jp
bound
adc
xchg
cmp
jne
lods
push
dec
dec
fildll
jne
repz
insl
mov
adc
fdivrs
pop
rep
push
pop
lahf
sbb
adc
aad
shr
hlt
ret
xor
mov
or
inc
mov
rolb
xor
js
rol
sbb
push
daa
fdiv
jo
dec
je
ljmp
ljmp
sub
popa
pop
dec
push
dec
add
std
pop
add
fildl
sbb
repz
je
or
inc
dec
add
scas
sbb
stos
inc
xorl
add
insb
or
mov
inc
mov
lods
xor
loope
sub
xchg
xor
data16
xor
testb
ljmp
rcr
rcl
fiaddl
mov
sbb
jnp
mov
push
loopne
xor
pop
cmpsl
cmp
in
popa
jbe
and
cwtl
and
aas
js
mov
outsl
rcll
sbb
sub
adc
pop
push
enter
push
adc
dec
pop
imul
insb
or
and
or
scas
dec
adc
stos
and
jecxz
cwtl
push
scas
xchg
js
orl
jae
and
and
jle
sbb
dec
inc
test
cmp
xor
jbe
add
loopne
dec
in
cmovbe
in
push
add
or
mov
pop
or
jmp
pushf
pop
cs
inc
out
xlat
or
ficomps
and
in
xchg
cltd
mov
cmp
jne
pop
or
dec
in
pop
xchg
or
in
enter
jo
add
jno
adc
test
mov
jbe
insb
cmp
adc
xlat
jo
push
leave
sub
mov
cmp
and
lods
test
mov
in
mov
mul
jmp
mov
rorl
bound
stos
repnz
rorb
fdivrl
je
inc
mov
mov
mov
cmp
mov
adc
shl
aam
xor
daa
fsub
push
sbb
jno
fucom
cmp
mov
fcomps
fisttpll
repnz
pop
cmp
imul
mov
notb
cmp
push
cmpsl
adc
xor
aas
push
fists
ljmp
arpl
push
sbb
jne
inc
jmp
sbb
lea
shll
lods
push
cmp
test
inc
std
fidivrs
sbb
inc
xor
sbb
push
cmpsl
into
pop
mov
add
cltd
sub
xor
xor
mov
call
push
mov
test
inc
enter
jp
inc
sbb
data16
sahf
or
pusha
ja
mov
mov
pop
fcompl
dec
in
mov
lods
lods
dec
push
lods
mov
mov
jecxz
repz
inc
sub
mov
call
push
sub
mov
cld
in
dec
adc
or
cmpsl
popf
dec
in
rorb
int3
dec
js
pusha
dec
cmp
mov
push
add
jne
jl
jl
dec
pushf
push
in
pop
pop
test
cld
jb
jae
fadd
add
pop
cmp
aam
in
out
les
lods
and
in
jne
mov
scas
sbb
rolb
pop
scas
jns
test
or
mov
icebp
or
gs
ljmp
push
dec
rcl
in
add
add
out
enter
or
mov
cld
mov
aam
xchg
xorl
es
dec
jp
mov
into
mov
ss
inc
and
cli
xchg
mov
or
in
inc
xchg
popa
inc
lock
add
pop
and
je
or
sbb
pop
je
mov
adcb
leave
ret
cmp
adc
or
loopne
inc
xor
xor
orl
mov
sbb
push
jmp
mov
fs
push
ret
jp
call
xor
xchg
ds
in
xchg
push
cld
lcall
rcrb
mov
pop
cltd
insb
cld
adc
ja
sbbl
mov
lds
push
lock
pop
mov
sbb
mov
les
mov
hlt
lods
jbe
inc
pop
jae
inc
pop
pop
inc
push
cmpsl
nop
push
ret
rcl
fiadds
xor
inc
pop
cmp
or
outsl
popf
fldcw
mov
cmp
fldt
jne
push
loopne
ja
cmc
push
orl
push
xchg
adcb
push
add
add
in
fwait
lock
dec
insl
je
sub
xor
ja
incb
add
pushl
and
out
cmp
xor
stos
std
std
in
scas
adc
xor
inc
inc
cld
cmp
mov
jo
inc
sarl
cmp
call
fiaddl
mov
jns
inc
aas
jmp
mov
dec
xor
sub
testb
pop
dec
inc
sub
dec
mov
adc
pop
push
jno
push
in
fcomps
cli
add
adc
std
adc
xchg
and
rorl
fwait
clc
sbb
mov
push
aad
dec
cmpsb
mov
jbe
test
inc
xchg
out
push
pop
mov
sahf
pop
add
mov
and
sbbl
cmp
imul
push
rolb
fisubrs
jne
sbb
popf
into
cmc
sub
subl
push
pop
jle
addb
int
mov
add
sub
pop
mov
in
ret
dec
cmp
ds
xlat
les
xor
mov
mov
add
push
add
sahf
or
sbb
repz
pop
out
inc
push
push
mov
daa
js
cmp
cmp
ja
push
cmp
jne
shlb
loopne
ret
mov
mov
xor
or
inc
jecxz
push
mov
out
notb
call
pop
mov
sub
inc
jbe
adc
rol
jmp
xchg
sbb
les
mov
inc
rcrb
push
jbe
enter
outsl
jne
xor
adc
std
jmp
mov
push
sbb
pushl
add
mov
or
imull
push
mov
fdivrs
sarb
xor
lcall
mov
add
rorl
cmpb
add
pop
sub
add
pusha
push
pop
xorb
in
rorb
inc
inc
mov
add
dec
jo
adc
push
add
jp
xchg
add
xchg
cmp
stos
cmpl
jl
pop
jne
mov
jmp
or
or
adc
push
js
or
or
or
lahf
dec
cmp
dec
push
aas
xor
or
mov
push
fdivl
mov
adcl
or
xchg
push
rcll
add
cmpsl
pop
aaa
ror
es
aam
in
dec
xchg
ljmp
add
insb
shll
mov
push
push
mov
test
jo
cmp
orl
test
adc
mov
mov
je
push
mov
lea
pop
mov
mov
stos
mov
aaa
push
fucomip
cmp
je
inc
and
push
jbe
movsb
xchg
jne
cld
mov
subb
clc
push
and
shrl
std
pop
jbe
testb
cwtl
adc
jo
inc
push
in
mov
add
add
clc
test
or
pushf
cli
adc
lea
add
pushf
loop
outsb
es
test
inc
jmp
or
cld
imul
sbb
fwait
add
xchg
test
dec
mov
arpl
ret
mov
lock
jo
andl
paddb
jnp
pusha
enter
jmp
push
mov
inc
mov
call
js
push
sbb
inc
js
cltd
adc
pop
mov
xchg
sbb
push
lds
lods
aad
movsb
jno
sti
inc
adc
push
loopne
adc
add
and
lods
stos
loopne
sti
push
nop
and
adc
test
push
ja
dec
jle
test
push
in
movsl
push
mov
pusha
shlb
lds
mov
fs
and
lock
inc
pop
xorb
mov
xchg
aam
xor
sub
push
sti
adc
push
push
cmpsb
aam
fwait
push
stos
in
push
inc
cmp
cld
icebp
jecxz
cwtl
popa
fsubrl
call
sub
mov
inc
je
adc
sbb
and
sub
pop
scas
popa
xlat
pop
add
fwait
jae
js
xchg
mov
lret
sbb
flds
add
or
push
inc
or
cmp
rcl
repnz
enter
mov
lods
dec
sub
mov
ss
rol
imul
mulb
mov
jmp
lock
mov
mov
cli
mov
jne
ja
add
jle
sbb
xor
test
push
insb
lret
xchg
add
mov
ss
adc
and
cmp
push
stos
add
jns
cld
push
mov
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
ss
or
rorb
push
dec
xor
loop
xchg
add
call
push
pop
mov
sbb
mov
push
fdivrl
lea
mov
shlb
inc
or
pop
addr16
ss
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shll
pop
and
or
je
int3
jecxz
enter
decb
loop
aaa
mov
jmp
enter
nop
xor
add
mov
sarl
icebp
call
sbbl
sarb
inc
call
cld
test
fldenv
push
setp
jecxz
xchg
push
pop
xchg
out
xchg
add
xor
sbb
and
sub
pop
pop
jb
inc
lcall
loope
push
js
negb
lea
cltd
dec
push
xor
fistpll
xor
fxtract
jmp
lahf
and
pop
xorb
movsb
inc
or
sbb
jne
mov
or
ret
push
xchg
add
push
adc
add
clc
es
cmc
pop
mov
or
xchg
jne
add
mov
incb
call
in
movsb
jmp
js
push
cmp
sbb
mov
dec
or
dec
push
cwtl
jmp
sbbl
cmp
sbb
and
jbe
icebp
sub
or
mov
mov
and
xchg
bound
call
xor
inc
shlb
dec
out
push
or
sbb
fdivl
cmpsl
or
pop
cwtl
rorl
popf
pushf
or
cmp
test
sbb
mov
test
push
push
inc
loopne
jg
mov
fs
inc
mov
mov
inc
mov
aad
subl
pop
pusha
ja
cmp
jg
push
dec
lea
push
je
or
pop
gs
mov
orb
xor
sbb
mov
pushf
shll
xchg
jl
or
mov
cmp
sub
sti
push
fadds
dec
jne
movzbl
add
je
fcmovnb
push
add
movsb
nop
outsb
adc
sbb
popf
add
ret
ja
pop
push
stos
incl
nop
sbb
sub
es
lahf
insl
call
and
ret
in
cli
mov
push
cli
sub
jo
mov
sbb
and
ja
pop
xor
sub
lock
inc
xor
inc
pop
rcrb
adc
sub
mov
and
add
shrb
mov
dec
sub
cmp
inc
sti
loopne
nop
push
adc
xchg
daa
sahf
mov
call
movsb
xor
push
xchg
lock
or
popa
es
imul
aam
push
jp
outsb
movb
imul
test
and
clc
cmp
add
push
mov
push
or
pop
aas
dec
dec
inc
mov
cmp
and
mov
enter
mov
xor
lock
adc
jge
jmp
mov
mov
xor
xor
or
out
xchg
inc
push
nop
add
fidivl
adc
fiadds
push
mov
xor
or
ss
xor
xor
xor
and
leave
inc
adc
add
fidivl
lds
ficoms
xor
insb
lods
shlb
xor
insl
sub
xor
add
inc
movsl
rorl
and
xor
in
adc
and
and
rorb
shrb
or
pop
popa
pusha
cmpsl
and
pop
dec
fwait
sbb
bound
sbb
pop
or
out
call
ljmp
aas
pop
call
jg
jmp
call
mov
imull
and
cwtl
inc
push
jns
shl
lahf
cmp
call
and
pop
dec
adc
push
les
xchg
sbb
jmp
pop
leave
loope
fstp
xor
cmp
or
or
out
mov
pop
psubsb
add
call
out
clc
scas
pop
jmp
out
dec
jp
nop
jno
std
xchg
pushl
cmp
jmp
sub
push
ljmp
sbb
xchg
test
adc
dec
dec
jb
xor
mov
je
push
into
cmp
test
fimull
jmp
sub
test
sarb
add
daa
or
and
xor
ss
push
inc
idivl
sub
cmp
insb
or
adc
iret
adc
mov
push
mov
mov
inc
xrelease
pop
negl
and
inc
loop
jne
shlb
sub
popf
notb
adc
push
es
outsb
cwtl
and
add
loopne
cmpsb
cld
aad
es
into
idivb
and
decl
dec
mov
imul
push
es
sbb
dec
pop
cmp
data16
iret
dec
push
cwtl
clc
test
push
or
in
pusha
sub
loope
pop
xor
nop
push
fwait
xchg
sbb
adc
js
sbb
and
int3
xor
jbe
push
mov
push
xor
dec
xor
dec
sbb
jmp
lea
push
sbb
adc
cmp
mov
xchg
mov
push
outsl
pop
aaa
pop
aad
je
sbb
and
xor
test
add
nop
nop
push
mov
and
je
inc
inc
addr16
push
in
push
sbb
sarb
addb
test
call
dec
call
dec
mov
aaa
and
les
pop
in
pop
or
push
xor
sub
dec
sub
ds
data16
or
cmp
cmp
addr16
iret
adc
or
lret
call
jl
jmp
add
rorb
jo
out
lods
xchg
out
inc
dec
mov
stos
and
inc
cs
pusha
je
sti
ficoms
je
mov
add
out
mov
dec
mov
add
cmp
jnp
xor
sub
sbb
add
cmp
or
out
clc
xor
sbb
jmp
out
je
out
cli
sbb
outsb
add
pushf
adc
ja
and
inc
daa
pop
nop
add
and
rcl
jns
dec
out
rclb
xor
push
push
out
jnp
inc
mov
or
push
mov
cmp
repz
enter
add
sbb
je
test
cld
or
push
adc
add
out
add
addl
xchg
mov
fs
xchg
xchg
addb
jmp
dec
mov
add
enter
cltd
adc
dec
cmpb
pop
jmp
cmp
je
lret
xchg
mov
add
sub
or
lahf
ret
frstor
adc
fidivl
pop
add
scas
in
in
add
add
mov
nopl
jo,pt
cmp
je
xchg
add
and
add
add
xchg
sub
sbb
mov
or
xchg
or
or
cld
add
or
push
mov
sahf
or
add
or
xchg
or
jb
jb
or
xchg
cmp
push
push
push
mov
rdmsr
adc
push
movsl
adc
pop
adc
adc
cmp
mov
int
push
adc
jns
stos
add
ror
mov
adc
leave
adc
cmp
push
inc
pop
pop
jns
out
and
sbb
xchg
sbb
jns
sub
mov
jns
scas
fcompl
sbb
nop
adcl
add
rep
sub
je
push
sbb
in
lds
ja
sbb
cmpsb
pop
push
push
inc
incb
enter
pop
jne
add
add
sub
mov
add
mov
xchg
xchg
movl
xchg
jp
cld
jmp
cwtl
xchg
push
in
xchg
mov
repz
in
imul
rcl
ret
test
xor
xor
out
mov
out
sub
fmulp
dec
call
adcb
sbb
loop
xchg
mov
cmp
sbb
ljmp
add
push
mov
or
cs
ss
in
in
xchg
aad
in
cmp
push
repnz
mov
out
enter
xchg
out
or
push
imul
lock
fmulp
aad
dec
icebp
cmp
pop
add
repnz
mov
repz
std
mov
dec
dec
hlt
hlt
imul
fidivl
std
cmc
cmc
cmp
sbb
testb
sbb
gs
clc
in
sbb
mov
and
jns
scas
in
add
sti
in
repnz
cld
cld
cld
je
fdivrp
or
nop
shlb
mov
xor
xchg
cmp
dec
sbb
jmp
mov
fnstsw
jb
sub
daa
push
lahf
shr
mov
or
fwait
or
inc
sbb
jecxz
jecxz
xchg
push
repnz
xor
push
xlat
aad
and
or
stos
mov
aam
push
xor
or
out
xchg
repnz
call
push
mov
cltd
and
orb
mov
in
cltd
sub
nop
mov
rclb
or
stos
xchg
stos
or
cltd
xchg
pop
leave
or
lret
add
or
jb
inc
repz
sbb
leave
add
xchg
push
cli
stc
frstpm(287
add
xchg
stc
imul
mov
in
aad
xchg
clc
cltd
jb
andb
push
stc
sbb
xor
sti
sti
sti
xchg
scas
in
pop
or
cmp
jmp
xchg
stos
pop
sub
pop
add
test
dec
or
pop
mov
xabort
xor
stos
mov
loop
stos
xchg
stos
or
loope
pop
leave
or
clc
shl
add
dec
add
or
dec
out
xchg
fdiv
out
and
test
mov
adc
or
push
xor
ljmp
jmp
idivl
inc
mov
pop
testl
xchg
in
aad
into
mul
scas
testb
or
insl
repnz
mov
repz
notb
jns
or
mov
out
div
notb
xchg
mov
sahf
fldenv
repnz
stc
jmp
adc
xchg
leave
or
sbb
add
xchg
pop
cli
hlt
or
xlat
inc
lock
popf
out
test
push
jo
adc
stos
mov
xor
clc
sti
mov
loope
push
jnp
loope
jp
setb
pop
cvtdq2ps
cmp
lret
and
pop
pop
lcall
mov
repz
push
mov
or
xchg
repz
and
insb
repz
repz
andb
mov
xchg
or
in
mov
in
repnz
andb
xchg
cmpsb
movl
push
pop
adc
and
repnz
repnz
cmpsb
jb
sbb
and
icebp
pop
dec
adc
push
cwtl
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
nop
in
jl
ret
sub
lret
push
notb
push
sub
ffreep
xchg
stos
test
push
inc
insb
loope
xor
scas
inc
cmp
cmp
pop
leave
add
testl
or
mov
xor
and
in
add
movsb
xchg
dec
add
jmp
jg
mov
and
icebp
outsb
jg
dec
int3
dec
push
nop
push
dec
imul
jns
adc
aaa
or
imul
dec
adcl
jp
sub
push
jecxz
repz
repz
mov
xlat
insb
mov
sbb
push
push
aad
in
xchg
jns
repz
or
mov
jb
rolb
inc
jecxz
sbb
mov
inc
mov
outsl
lea
sbb
lea
inc
cmp
and
push
adc
lret
test
mov
fldl
imul
sbb
adc
xchg
jle
jmp
mov
adc
push
lds
inc
mov
add
arpl
daa
push
push
xchg
cmp
inc
inc
sub
xchg
adc
sub
jecxz
jae
xlat
pop
mov
adc
inc
sbb
mov
mov
pop
call
and
push
ret
or
fildll
in
jmp
xor
pop
add
add
push
push
and
stc
and
clc
adc
and
loope
mov
adc
sub
adc
push
adc
or
mov
divb
icebp
subl
xchg
movsb
cmp
bound
das
pop
mov
stos
adc
movsb
sub
or
adc
hlt
psubsw
cmpsl
aas
cmp
xchg
enter
int
jb
push
sbb
adc
syscall
add
cld
add
add
dec
lret
xchg
loop
fiaddl
add
push
and
add
adc
mov
sub
mov
jo
inc
or
mov
lea
push
and
adc
test
adc
or
jmp
mov
inc
inc
mov
or
inc
dec
pop
mov
push
mov
pusha
push
add
arpl
add
cmp
rolb
sub
rcl
pusha
in
test
nop
int3
pop
pop
inc
inc
inc
inc
cli
adc
adc
add
lods
clc
add
or
pusha
dec
out
xchg
es
inc
out
mov
adc
or
jg
sub
je
adc
cmpsl
xlat
loop
leave
lods
and
sub
sti
iret
les
or
ret
stc
add
and
enter
lock
ret
add
push
nop
dec
pop
adc
in
adc
mov
ret
int
pop
mov
jmp
inc
mov
sbb
nop
outsb
inc
ret
adc
xchg
mov
outsl
pop
and
or
ret
inc
xor
mov
push
fstl
push
addb
ret
test
dec
ja
adc
lds
inc
aaa
inc
or
test
popf
fldl
pushf
pop
and
nop
fstl
ret
imul
inc
in
adc
in
in
and
xcrypt-cfb
cmpsl
mov
cmpb
or
leave
xor
jmp
inc
xor
pop
push
bound
inc
ret
adc
inc
or
or
jmp
push
loopne
inc
shlb
inc
ret
cmp
inc
adc
ret
cmc
add
clc
xor
dec
aam
push
mov
pop
adc
sub
mov
mov
cmp
push
push
in
ret
nop
into
mov
dec
hlt
sbb
mov
and
cmp
movsb
js
cmp
ret
and
fldl
and
inc
cmp
nop
int3
rolb
xor
mov
sub
add
ret
or
jecxz
add
pop
outsb
and
test
ret
test
popf
cmc
jecxz
sub
and
insb
pop
mov
loopne
imul
movsb
mov
inc
scas
and
mov
shll
rcl
jb
adc
inc
inc
shr
gs
inc
cmp
push
jo
jb
movsl
push
loop
add
push
dec
shll
xor
clc
data16
loope
inc
mov
ss
mov
dec
imul
bound
xlat
jl
out
in
aaa
popa
aas
ss
inc
and
fnstenv
pop
mov
xchg
add
cs
cmp
nop
cmp
loopne
and
inc
cmp
and
loopne
inc
fnsave
rclb
cmp
push
adc
and
sbb
xchg
dec
sub
test
aaa
push
daa
dec
mov
sbb
inc
cmp
pop
cwtl
loopne
movsb
cmp
jb
movl
mov
push
mov
sub
and
mov
and
je
xorl
ret
or
cmp
xchg
movsb
mov
xchg
xchg
movsb
jmp
lods
mov
mov
sub
inc
inc
mul
int3
xchg
sub
push
sub
inc
and
mov
loopne
subl
sub
test
or
dec
movsl
sub
sbb
aad
sbb
or
mov
sbb
dec
sub
insb
cmp
mov
js
je
loopne
mov
mov
rcl
fucomp
sbb
lahf
call
jge
sub
or
nop
mov
jno
xchg
ljmp
pop
testl
pop
insb
adc
dec
in
loope
inc
inc
addr16
sub
sbb
sub
inc
inc
stos
lahf
aam
sbb
test
sub
lods
push
sbb
inc
pop
dec
or
je
cmp
rclb
sub
jp
sub
sub
insb
mov
sub
movb
lods
addl
sub
push
sbb
xor
imulb
or
shrb
fstl
add
mov
add
imul
sub
nop
mov
xlat
ss
add
inc
inc
ja
sub
push
mov
adc
shrb
sbb
mov
rolb
sub
mov
jno
adc
push
mov
mov
lods
push
sbb
dec
xchg
jmp
add
fsubrs
sbb
sub
sub
fs
mov
sub
mov
mov
mov
cmp
sbb
xor
in
dec
xor
sub
rcl
pop
imul
jno
nop
mov
js
lods
xor
inc
xor
push
cmp
test
sub
addr16
push
ds
pop
jmp
inc
inc
sub
rcl
rcr
clc
rolb
xor
js
and
push
or
and
rolb
mov
sub
or
pop
sub
nop
rclb
pop
xor
sub
and
sub
dec
into
mov
roll
sub
dec
stos
mov
inc
sbb
xor
rclb
cld
les
bound
fucomip
and
or
adc
push
sbb
mov
sarb
cmpsl
mov
mov
orb
test
mov
pop
sbb
lods
push
pusha
sub
inc
inc
testl
and
or
scas
jo
shrb
loopne
test
sbb
lock
das
arpl
sub
fildll
das
cmpsl
or
enter
stos
pop
add
pop
sbb
add
call
pop
mov
mov
xor
or
push
push
mov
sub
outsb
xor
mov
xor
pop
imul
or
mov
xor
sub
push
xor
add
rcrb
insl
sti
lret
outsb
sbb
clc
inc
inc
cmpsl
mov
rcl
or
push
loopne
or
cmp
xchg
or
in
xchg
add
push
ret
push
lcall
inc
inc
sbbl
mov
loope
mov
jp
out
push
movsb
das
jmp
xchg
je
push
mov
inc
inc
sub
rcl
sub
add
js
hlt
xor
push
sysenter
sub
mov
jg
cmp
mov
cmp
sub
sub
fs
xor
cmp
fs
push
jno
fs
dec
dec
pop
cmp
dec
and
add
sti
xor
push
call
xor
rorb
sub
cmp
daa
adc
outsb
mov
sub
sbb
jno
ds
jle
icebp
leave
jmp
xor
jecxz
jbe
imul
and
adc
dec
add
daa
icebp
mov
repz
mov
in
pop
xchg
cmp
or
add
push
xor
mov
test
sub
in
testb
bt
sbb
cmp
mov
cmp
jbe
and
mov
mov
nop
mov
dec
add
popf
test
jbe
fiadds
std
push
rcl
andb
in
add
mov
pushf
jl
dec
inc
pop
in
nop
popa
and
add
push
sbb
add
call
fwait
add
xchg
add
dec
enter
sbb
dec
add
les
sbb
or
mov
mov
sbb
popf
ret
or
sbb
popf
xchg
pusha
cmp
xchg
pop
mov
add
popf
xchg
push
sub
and
orb
out
sbb
test
push
mov
addr16
cltd
imul
cmp
es
dec
insb
cmp
jge
inc
push
dec
sbb
fcoml
cmpsl
sbb
push
mov
add
jb
movsl
cwtl
xchg
inc
xchg
jb
addr16
dec
inc
push
xchg
leave
ret
inc
shlb
add
or
sub
push
xchg
call
xchg
inc
rolb
jl
mov
jp
aam
in
cli
xchg
dec
orl
and
and
add
or
je
arpl
mov
xchg
leave
xchg
es
popa
adcb
arpl
mov
inc
push
add
add
add
xchg
hlt
out
or
or
cmpb
xchg
enter
sbbb
and
notb
add
and
lcall
ss
pop
sbb
or
push
jle
inc
cmp
mov
push
sbb
or
adc
jp
or
pop
call
and
inc
fimuls
call
cmp
inc
cmp
or
or
pop
fisttpll
inc
mov
shll
sbb
or
xchg
pop
push
jb
psadbw
ret
idivb
pop
rcrb
test
xchg
and
test
pop
mov
test
popa
out
ja
xchg
inc
sub
inc
popa
dec
pop
inc
popa
dec
inc
push
pop
out
sub
mov
and
pop
stos
xor
or
mov
inc
mov
cmp
je
nop
loopne
and
adc
mov
imul
pop
clc
cs
inc
popa
dec
jbe
movsb
shll
pop
test
outsb
jno
pop
dec
call
add
and
leave
mov
dec
adc
sbb
add
sbb
adc
es
adc
fldl
inc
inc
outsb
add
nop
or
adc
xor
call
addl
enter
adc
or
adc
aad
adc
and
push
scas
pusha
and
sbb
aaa
adcl
and
daa
xor
mov
out
push
test
push
mov
ja
xchg
daa
outsb
jae
shll
push
cmp
jbe
dec
cwtl
adc
add
mov
loop
call
inc
cmp
movsb
add
incl
jl
and
xor
je
add
sub
and
int
jl
inc
pop
add
mov
push
sbb
dec
inc
or
jge
imul
test
mov
cmp
push
jmp
pusha
addl
pop
pop
sbb
adc
jns
push
pmaxsw
pop
inc
sub
repz
in
or
out
call
call
add
pop
mov
arpl
imul
inc
mov
out
push
sub
fiaddl
sub
ljmp
mov
bnd
movsb
inc
pop
adc
insb
or
cs
mov
adc
pop
mov
cmp
pop
push
mov
add
jb
outsl
cmp
sbb
call
mov
inc
pop
inc
dec
frstor
fidivl
push
jmp
add
add
pop
fsubl
sub
scas
or
cmc
xor
lahf
push
movb
int
add
jne
insb
cmp
mov
cmp
push
inc
jmp
dec
jmp
xor
mov
rorl
inc
inc
adc
or
rolb
add
call
pop
je
pop
es
sbb
fistpll
hlt
add
push
and
mov
xchg
jmp
pop
ret
mov
stos
cmp
xorb
add
je
xchg
mov
cmp
and
or
insl
dec
cmpl
add
mov
test
jmp
add
and
into
arpl
jmp
xchg
add
or
lea
enter
add
in
out
pop
jl
pop
enter
sbb
and
push
and
mov
inc
add
xor
inc
xchg
adc
cld
out
push
mov
xlat
fwait
dec
call
inc
xlat
add
hlt
pushf
inc
inc
shrl
out
addps
pop
inc
sub
repz
fisubrs
jge
add
push
push
or
inc
pusha
mov
push
out
shll
iret
and
dec
frstor
mov
cmp
xor
es
in
push
adc
push
add
ret
push
sar
inc
push
adc
lret
movb
cmp
mov
xlat
xchg
sub
ss
or
cmc
jbe
mov
inc
adc
sub
or
ljmp
sbb
jne
mov
jmp
and
xor
jge
ret
arpl
jge
xlat
mov
sbb
jp
and
sbb
test
test
adc
out
or
add
and
test
test
adc
push
add
sahf
mov
dec
pop
in
push
and
mov
mov
out
inc
mov
es
or
add
jp
lock
sub
adc
add
or
enter
xchg
and
ret
lret
rcll
les
arpl
aas
movl
dec
push
inc
and
pop
xchg
push
jns
adc
mov
test
js
add
popf
insb
enter
loopne
push
cmpsl
adc
push
xlat
cmc
fists
adc
in
bound
jb
icebp
xlat
sbb
hlt
xor
push
inc
dec
xchg
shlb
push
xchg
dec
xchg
push
xchg
mov
inc
adc
mov
xchg
push
mov
mov
mov
xchg
insb
es
bound
jl
pop
add
pop
add
push
jl
mov
inc
xor
cwtl
insb
call
outsb
dec
push
and
xorl
call
sbb
xchg
inc
out
cwtl
roll
mov
aaa
inc
sub
lcall
xorb
lret
rorb
mov
call
push
sub
out
jmp
inc
ja
inc
mov
cli
sahf
sbb
sbb
repnz
ror
xchg
dec
ss
cmovb
aad
je
push
xor
mov
and
adc
ss
nop
xchg
mov
mov
fwait
and
andl
sbb
lret
nop
dec
push
ret
or
push
push
xor
mov
rcrl
in
dec
mov
fbld
ljmp
mov
add
xchg
ret
or
xchg
push
adc
shr
shll
fsts
mov
sub
leave
xchg
sbb
sbb
sbb
xchg
push
add
push
arpl
les
mov
dec
leave
fwait
dec
ss
mov
adc
cwtl
xchg
jle
sbb
push
inc
xor
xor
lods
dec
xor
fs
divl
xchg
lds
push
pushf
xchg
sbbl
push
push
mov
subb
jne
cmp
test
call
fs
lcall
mov
in
push
dec
call
leave
xchg
mov
cltd
test
dec
xor
rolb
xchg
mov
roll
push
xchg
mov
ss
adc
je
sarb
sub
ss
jno
adc
daa
lea
and
movl
dec
sbb
subb
mov
or
ds
orb
loopne
mov
in
cmp
sbb
sysret
mov
push
call
mov
popa
xchg
shll
adc
rolb
or
push
mov
pop
add
adc
into
lods
dec
addl
push
xor
mov
addb
push
mov
sub
mov
mov
mov
xchg
cwtl
scas
scas
push
mov
adc
bound
xchg
sbb
push
mov
xchg
mov
dec
lods
mov
daa
cmp
dec
jl
ss
dec
arpl
sub
popa
aad
daa
mov
icebp
pop
cmpsl
addl
push
mov
xor
call
lea
stos
ret
xchg
aam
push
cmp
movl
pop
dec
pop
adc
addr16
cmc
ret
xchg
and
insb
leave
mov
aam
mov
cmp
mov
ja
mov
aam
aam
outsb
xor
inc
push
movsl
xlat
test
mov
hlt
out
mov
xchg
and
adc
sub
rcrb
dec
fnstenv
mov
pop
xchg
mov
test
cmpsl
call
movsb
data16
cmp
int3
or
and
loopne
enter
cmp
and
mov
adc
cmp
cs
fldenv
roll
lret
jne
nop
xor
ud1
call
dec
adc
add
pop
pushf
and
rcll
push
test
dec
adc
cmp
and
movsb
int
lods
mov
or
xlat
or
xchg
lds
pop
xor
sub
inc
flds
inc
or
adc
add
cmp
sbb
int
shlb
and
mov
inc
enter
sbb
ret
mov
int3
mov
int
sbb
daa
mov
mov
sub
pushf
scas
cmp
pop
fldenv
ds
sub
hlt
flds
dec
sbb
jp
call
inc
sbb
mov
fld
popa
add
fldenv
fsts
or
sub
and
sbb
loopne
jmp
aam
pushf
and
or
pushf
and
adcb
lcall
adc
sbb
fldenv
dec
fnstenv
fnstcw
inc
push
fs
inc
pushf
flds
je
call
inc
popf
and
lods
mov
mov
cmpsl
or
adc
mov
dec
jmp
flds
repnz
add
shrb
fnop
xchg
sbb
adc
sbb
into
xchg
push
sbb
mov
mov
imul
and
inc
dec
inc
stos
in
cmpsl
or
adc
outsb
out
jae
popf
fxch
lds
adc
or
or
into
aad
pushf
sbb
ja
rclb
mov
in
mov
popf
and
rcll
cmpsl
loopne
les
call
add
adc
flds
cmpsl
or
or
mov
cwtl
mov
mov
sbb
xor
sbb
insb
mov
dec
sbb
cmp
insl
call
adc
add
mov
dec
dec
mov
dec
sbb
ret
cmp
sarb
mov
jle
mov
sub
dec
imul
xlat
call
enter
nop
jg
nop
mov
xor
dec
mov
cwtl
cmp
sub
je
xchg
lods
gs
xor
mov
popf
mov
xchg
jnp
or
fiaddl
pop
out
mov
in
xchg
or
call
mov
add
les
pop
test
mov
mull
push
push
push
shrb
pop
enter
pop
dec
cmp
dec
jae
add
in
add
hlt
xchg
shrl
mov
push
jno
pop
cmp
sbb
je
nop
ss
sti
mov
lea
cmc
inc
enter
mov
mov
pop
jae
call
mov
nop
dec
adc
shlb
jno
into
bound
pop
inc
mov
or
mov
cmp
jp
outsb
fcomi
mov
mull
cmp
fiadds
pop
or
jae
cwtl
mov
popf
gs
pop
jb
add
jnp
imul
sbb
push
xor
shlb
jnp
sbb
or
jle
rclb
loopne
fs
mov
mov
xor
sahf
jnp
xor
jnp
inc
movntps
and
sbb
jne
jnp
sbb
or
adc
xor
pop
jmp
xor
xchg
int
sub
xor
mov
and
xchg
sub
cmp
or
push
sbb
add
inc
inc
mov
and
nop
adc
mov
pop
pop
add
xchg
cmp
sbb
mov
out
xchg
xor
push
scas
jmp
dec
sbb
sbbb
lock
add
xchg
sar
and
mov
jnp
jb
mov
cs
push
mov
inc
mov
loop
and
shlb
call
mov
and
push
push
and
sti
mov
adc
test
js
jecxz
add
jl
bound
call
mov
outsl
in
xchg
rclb
pop
and
dec
sub
fnstcw
push
and
add
mov
adc
gs
pop
mov
sbb
int3
je
fnstenv
inc
pop
or
enter
in
stos
sub
add
and
and
sarl
pop
ss
mov
mov
push
or
inc
or
aas
scas
pusha
stc
imul
unpcklps
das
shlb
comiss
out
ss
mov
adc
call
or
add
call
lock
jl
call
cmp
fsubr
outsl
dec
adc
and
pop
shl
dec
call
movsb
lods
andps
repnz
call
pop
call
das
pop
mov
push
jne
call
insl
je
gs
pop
jl
push
mov
inc
sbb
sub
xor
nop
sbb
cwtl
add
in
test
ja
sub
adc
rol
mov
test
shrb
xchg
out
shlb
xchg
mov
movsl
jb
pop
fdivl
push
in
call
jb
inc
aam
lock
hlt
es
sbb
adc
add
sub
leave
or
leave
gs
pop
mov
adc
xchg
dec
lret
sbb
sbb
dec
in
mov
mov
xchg
sub
xor
xor
cmp
mov
inc
push
dec
in
loopne
gs
dec
cmp
mov
cs
adc
jb
sbb
pop
movsb
subb
add
jo
adc
xor
aam
xor
mov
pop
insb
and
or
rorb
cld
pop
mov
pop
pushf
and
mov
je
movsb
fcoml
push
lcall
sbb
xor
push
data16
sbb
mov
dec
lcall
mov
inc
cmp
inc
xchg
data16
test
inc
lods
lret
xchg
adcb
nop
and
dec
mov
movsb
cmp
je
push
ret
push
nop
push
dec
add
or
adcb
xor
mov
xchg
sub
adc
fs
ja
lcall
daa
inc
mov
test
inc
pusha
test
dec
dec
inc
pop
pop
mov
jno
or
inc
popf
push
aaa
pop
mov
and
pop
sub
test
jp
inc
arpl
mov
sbb
ljmp
jne
mov
arpl
mov
add
dec
or
and
sbb
add
sbb
mov
inc
mov
xchg
cs
pop
adc
inc
aam
adc
lret
xor
mov
and
jne
jae
sbb
xchg
das
inc
push
shrl
sbb
popa
dec
sub
fsubrp
addb
pop
adc
es
ret
push
mov
mov
sbb
xor
push
pop
xor
mov
cs
jo
mov
test
or
add
inc
scas
roll
adc
pop
push
aam
inc
xor
out
sar
mov
mov
jb
sub
push
pop
push
or
pushf
or
jno
mov
push
xor
dec
or
pushf
or
adc
or
mov
mov
jmp
pop
test
inc
adc
xor
push
and
nop
fs
xchg
xchg
rorl
cmc
or
xchg
adc
jne
je
xchg
pop
shll
rorl
push
push
shrl
sub
lret
push
fld1
inc
cmp
and
sbb
rorl
jg
pop
sbb
roll
xor
rcrl
mov
jecxz
scas
ljmp
daa
inc
cltd
mov
xchg
mov
add
sub
je
rorl
dec
sub
rorb
lods
pusha
and
adc
fwait
and
sub
xchg
rclb
sub
cmp
sub
movsb
je
ljmp
xchg
rorb
dec
movsb
hlt
insl
rorl
add
mov
inc
xorb
dec
lahf
mov
loopne
lods
cmp
cltd
divl
xor
sub
je
dec
dec
sub
dec
mov
fisttpll
xor
mov
sub
dec
jmp
xchg
or
jo
add
repnz
push
sub
mov
inc
and
cmp
sub
xchg
js
mov
xor
shlb
mov
sub
cmp
in
pop
hlt
or
sub
mov
shlb
adc
dec
movsl
lcall
mov
fwait
out
rorl
adc
adc
fwait
adc
adc
fistl
call
call
fwait
mov
jmp
adc
fwait
lods
inc
ja
sub
shrb
or
inc
adc
push
fwait
dec
js
adc
push
fwait
adc
scas
xchg
leave
idivb
sub
lods
cmpsl
clc
shll
andb
aad
cmpsl
int
nop
sbb
cmpsl
or
push
rclb
inc
dec
ja
mov
sahf
adc
aam
inc
cmpsl
sbb
push
rolb
cmpsl
rorb
fldt
jmp
adc
jecxz
or
bound
add
push
jecxz
and
jecxz
lds
lcall
pop
rol
pusha
sub
nop
test
mov
loopne
movsb
sbb
mov
add
push
mov
inc
loope
sub
push
dec
mov
repz
pop
scas
cwtl
mov
out
sbb
bound
mov
movsb
shll
inc
mov
arpl
jmp
mov
lods
inc
out
enter
pop
add
mov
mov
jnp
dec
push
mov
lea
mov
jecxz
xor
or
sub
lds
out
add
jp
xchg
rolb
add
add
and
dec
adcl
adc
test
popa
pop
insl
mov
pop
inc
sub
jno
cmp
pop
nop
inc
or
adc
push
in
addl
jmp
add
out
sub
jb
rolb
or
and
popa
or
jmp
sub
fnstenv
ret
cld
add
loopne
push
nop
sbb
cmp
enter
sbb
cld
jb
xor
cmp
int
out
push
push
rolb
and
adc
sub
test
fs
adc
rcl
das
inc
es
dec
inc
and
out
mov
mov
hlt
sbb
into
addl
add
call
icebp
and
rcrb
fisttpll
lods
sub
movl
add
mov
into
add
and
jle
cld
rolb
loopne
mov
cmp
cwtl
inc
inc
and
fwait
push
add
xchg
or
sub
movsb
mov
inc
adc
shl
dec
xor
mov
jmp
mov
nop
outsb
or
movl
adc
inc
xorb
sub
sub
push
or
test
mov
fwait
jnp
pop
aad
inc
ja
cmp
sbb
pop
mov
dec
fsubrs
xor
pop
jmp
or
xchg
adc
push
xchg
outsb
jnp
mov
adc
sbb
popa
dec
inc
or
mov
pop
shll
outsb
or
xor
mov
pop
sbb
mov
cmpsl
cli
sbb
leave
mov
pop
in
or
xchg
mov
mov
jecxz
and
xlat
clc
mov
push
out
cmp
adc
pop
push
jp
jns
sahf
dec
jge
jg
push
mov
and
fs
nop
dec
mov
mov
push
movsb
xchg
leave
shr
ds
push
add
pop
je
lods
adc
inc
or
push
pop
xor
mov
in
dec
and
or
mov
cwtl
mov
test
inc
cmp
push
in
leave
nop
push
adc
push
pop
xor
xchg
and
inc
xor
test
xchg
push
mov
mov
xchg
mov
pop
fdivl
xchg
inc
xor
jne
shl
stos
xchg
inc
dec
jmp
inc
dec
push
jne
fs
add
adc
inc
push
lock
push
mov
fistpl
inc
jno
fwait
jg
or
mov
mov
or
arpl
push
push
popf
outsl
mov
mov
or
pop
je
inc
dec
dec
testb
jnp
or
nop
xchg
out
mov
mov
out
pop
pop
fstl
sbb
or
stos
cmp
dec
xchg
adc
xor
and
movsl
hlt
cld
sbb
sub
rcrb
or
sub
fistpl
adc
mov
pop
sub
sub
pop
loope
ss
push
or
xor
jb
dec
push
jne
sub
add
sti
fwait
repz
adc
push
push
ret
xor
outsb
fdiv
stos
xlat
fwait
push
jnp
and
in
push
loope
sub
dec
mov
inc
dec
lea
call
icebp
add
fwait
insl
push
or
adc
jo
fldt
test
mov
and
loope
shl
jge
add
rcr
pop
or
sbb
lcall
adc
cltd
cmpb
push
stos
xchg
inc
cs
out
rcrb
add
mov
add
mov
and
ret
mov
mov
lret
out
call
rep
ret
jne
out
xorl
cmp
jo
cltd
mov
test
dec
mov
push
cs
inc
push
and
pop
and
loop
xorb
cmp
adcl
mov
sbb
add
jmp
dec
out
scas
push
inc
jmp
int
or
sbb
push
cwtl
add
fnstsw
call
pop
xor
jns
xor
and
sbb
iret
repz
out
sbb
ret
mov
repz
bound
sub
lcall
call
out
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
fcomip
cmp
push
nop
movsb
push
push
xchg
out
sahf
out
fs
inc
ss
out
cmpb
push
push
jl
out
sbb
repnz
repz
into
mov
ret
push
pop
into
sbb
incb
add
es
xor
out
loop
sbb
cmp
mov
sahf
out
lcall
cmp
out
call
sub
cmp
repz
pop
data16
iret
repz
nop
sahf
lods
mov
fdivp
fdivp
cmp
decb
ss
inc
pusha
inc
sbb
push
shr
jb
int3
ds
outsb
jle
sahf
mov
daa
rol
loop
idivb
imulb
push
cmp
aaa
je
repz
out
push
push
cmp
adc
mov
mov
push
jbe
add
lods
cmp
push
cwtl
cmpsl
insl
mov
pusha
insl
push
out
iret
dec
test
fidivs
sarl
jbe
les
test
mov
pop
js
test
add
inc
inc
aaa
jo
lret
xor
pop
sub
inc
sub
lea
or
or
dec
push
dec
ja
jb
pop
cwtl
repnz
adc
icebp
push
push
push
ja
add
or
mov
xchg
lahf
es
lcall
jb
xor
xor
add
jae
in
test
mov
ss
mov
cmpsl
add
bound
add
push
inc
out
jbe
les
mov
push
jl
push
dec
cmp
pop
or
das
sub
rol
jmp
outsb
mov
imul
lcall
xchg
filds
push
lods
cmpb
lahf
pusha
mov
divl
pcmpeqd
movsl
jecxz
lds
or
and
push
mov
ja
cmp
cmp
push
subl
outsl
fidivrl
or
pop
data16
add
mov
das
cmp
mov
jg
adc
clc
xchg
ret
je
pop
push
inc
add
arpl
push
dec
inc
aaa
mov
inc
push
inc
pop
inc
outsl
outsl
add
cltd
push
xchg
jb
inc
fisubs
das
fadds
push
sbb
jmp
ljmp
pop
aas
pop
jp
dec
imul
mov
jg
ret
jne
outsb
je
repz
inc
mov
xor
je
ss
outsl
jg
inc
inc
xor
sub
sub
sub
inc
inc
call
xor
xor
jge
xor
xor
inc
xor
iret
outsl
stos
xor
ss
xor
cmp
fdivl
cmp
xor
clc
adcl
inc
mov
add
popl
add
push
lret
sets
cmp
mov
jo
adc
or
fidivrs
cmp
push
xor
or
xorl
cmp
aaa
adc
xor
inc
pop
and
enter
jl
inc
jo
pop
push
arpl
xor
fcomip
inc
push
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outsl
or
push
xchg
gs
add
insb
clc
mov
push
pop
inc
dec
hlt
push
mov
arpl
adc
push
sub
jae
inc
push
out
dec
push
add
xor
sub
out
ds
cmp
adc
inc
mov
fs
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
pop
mov
jb
or
add
jg
call
and
outsl
xor
fiadds
pop
adc
add
lods
insb
loop
mov
push
inc
cmp
push
rorl
cmp
sbb
xchg
mov
mov
ljmp
mov
xchg
pop
imul
syscall
insb
insb
mov
xchg
and
outsb
ret
pop
js
les
jmp
adc
inc
and
inc
adc
jle
or
pop
clts
mov
roll
xchg
lock
gs
add
xchg
sbb
pop
inc
sbb
and
xlat
pusha
push
and
mov
daa
and
inc
push
test
cmpsb
push
imul
add
jp
mov
scas
je
dec
fs
push
jo
mov
nop
gs
cmp
insb
ret
data16
popa
fs
jo
mov
pop
pop
jmp
dec
subb
mov
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
inc
cs
push
push
push
add
lcall
je
or
push
popa
push
ss
imul
pusha
mov
nop
mov
mov
pop
add
or
aas
rorb
aas
inc
mov
push
add
inc
add
inc
rolb
add
ret
add
push
and
sbb
mov
cmovbe
mov
xchg
pushf
add
sbb
push
mov
cmpsl
stos
inc
fwait
sbb
push
add
xlat
shll
push
fisttpl
andl
out
sahf
mov
orb
fdiv
xor
or
add
mov
das
pop
and
das
xchg
adc
imul
sbb
enter
xor
out
sbb
std
sbb
mov
das
push
pop
nop
cld
and
push
and
jns
jns
out
stc
jp
push
cld
fdivr
shrl
mov
push
fwait
xor
mov
out
les
mov
and
xor
stos
scas
xchg
data16
add
popa
and
pushf
out
push
ds
cmp
xchg
popa
es
add
iret
cmp
addr16
adc
push
cld
or
in
cmp
repz
les
movsb
xor
repz
mov
jl
insb
push
jns
pop
mov
repz
dec
dec
inc
inc
cmp
sahf
out
push
xor
sub
and
jns
out
sbb
adc
int
jns
or
add
cld
or
cmp
repz
call
cmp
repz
nop
jo
out
ds
xor
lock
int3
mov
out
sahf
mov
sbb
dec
repz
cld
push
fcom
repz
repz
js
sub
jns
iret
add
add
xor
sbb
add
call
loop
iret
mov
xchg
mov
pop
dec
les
inc
sbb
adc
and
bound
mov
add
adc
lret
sub
adc
shr
mov
pop
push
inc
dec
cmp
mov
mulb
inc
add
add
sbbl
xor
push
pop
adc
pop
adc
jecxz
mov
sub
xor
cmpsb
mov
and
bound
das
xchg
dec
adc
scas
push
sbb
cwtl
add
jno
daa
dec
inc
push
jmp
mov
push
xlat
movsb
pop
and
pop
mov
mov
or
jae
mov
push
mov
icebp
xchg
add
pop
insb
adc
pop
js
shrb
decl
dec
lods
mov
pushf
andb
rolb
ret
jns
test
add
adc
xor
and
add
xchg
pushl
movl
out
icebp
inc
mov
add
mov
jne
pop
inc
add
push
stc
sbb
fs
aas
or
imul
cmp
pop
dec
vpmadcswd
arpl
imul
pop
jb
xor
icebp
jo
push
or
cs
add
jo
xlat
cmp
fiadds
filds
push
adc
testb
das
inc
scas
in
stos
dec
outsl
jl
add
cmpsl
ja
lahf
add
jmp
mov
loopne
xchg
outsb
repnz
fsub
ds
mov
insb
addr16
mov
inc
add
or
mov
mov
inc
sub
aas
jns
adc
jg
fcoms
fdiv
xchg
or
mov
ss
and
int3
mov
jae
ljmp
add
mov
xchg
sbb
jns
pop
rcr
jbe
jns
cmp
ss
lcall
pushf
setl
lret
aaa
push
movsb
jecxz
adc
mov
jl
in
push
adc
lahf
jg
push
enter
jg
mov
enter
or
mov
dec
pop
and
push
jo
jg
enter
mov
and
xchg
inc
iret
fcmovnbe
mov
rorl
sarl
jbe
in
mov
push
movsl
jp
insb
adc
imul
loopne
dec
sarb
movsb
dec
adc
xor
jecxz
loopne
daa
lock
enter
xlat
ja
dec
mov
loopne
cmp
pop
scas
xor
popa
lods
add
popa
pusha
cmp
addb
fidivl
je
dec
imul
popa
dec
aaa
ltr
xor
lcall
scas
pop
push
and
gs
dec
dec
add
push
push
push
mov
push
outsl
ja
xor
jle
xchg
and
add
sub
mov
push
add
push
out
fsubs
add
adc
add
popf
pop
fiaddl
repnz
outsb
inc
xchg
outsl
dec
jmp
neg
ljmp
addb
in
mov
adc
bound
cmpsb
dec
push
and
xchg
mov
mov
fucomi
inc
add
insl
jo
dec
pop
lcall
add
mov
sbb
mov
cli
add
jae
nop
addb
push
jae
push
adc
and
test
push
push
adc
or
mov
mov
popa
lret
out
adc
cmp
or
jecxz
inc
sbb
into
sub
addb
cwtl
loopne
lds
shll
add
mov
dec
pop
popa
push
fdivl
dec
pop
das
dec
sub
dec
or
cmp
xlat
jle
push
jo
jb
jns
push
ficoml
movsb
sbb
roll
push
push
mov
cmpsl
xor
push
sbb
xchg
jno
sbb
outsb
sbb
rcrb
into
ja
inc
popa
jge
test
popf
inc
and
pusha
inc
adc
mov
inc
fimull
into
out
push
inc
imul
push
or
das
xor
push
fs
add
cmp
inc
push
mov
inc
add
fistpll
add
gs
syscall
lods
add
subb
shlb
stos
outsb
es
jecxz
lea
and
or
jne
ret
nop
pop
test
sub
fs
xor
sbb
xor
and
sub
dec
xor
ret
inc
cs
cmp
mov
fidivrl
lea
das
and
push
call
pop
adc
dec
and
je
outsb
xor
ret
insl
add
and
rcrl
add
sarl
sbb
inc
xchg
outsl
mov
aad
lods
js
scas
inc
add
stc
add
adc
lcall
pop
mov
push
xor
dec
dec
pop
addr16
and
arpl
mov
mov
lds
mov
lret
inc
push
outsl
gs
sub
dec
xchg
add
roll
push
loopne
in
push
dec
jmp
cmp
mov
out
add
lock
mov
add
mov
rolb
insl
imul
out
add
xchg
popa
outsl
adcb
arpl
aam
je
ja
enter
inc
js
aaa
dec
imul
pop
or
aas
inc
cwtl
inc
dec
lret
cmc
in
sbb
or
push
and
adc
enter
xlat
add
xor
inc
and
mov
stos
add
jg
iret
add
jo
add
add
add
push
jno
inc
pop
mov
jo
sub
add
ds
dec
push
int3
or
pusha
push
jo
jno
cmp
lret
and
arpl
and
pop
roll
in
js
and
xchg
popa
ljmp
dec
imul
add
iret
pop
sub
int
xchg
into
insl
push
sub
cmpsl
add
jmp
push
mov
imul
push
push
and
adc
mov
cld
lods
pop
loope
inc
jae
adc
add
je
insb
inc
add
outsw
or
pop
xor
and
loopne
xor
imul
bound
out
into
insb
sbb
jae
push
add
and
lods
out
inc
push
push
out
pusha
sbb
imul
js
lret
fbld
pop
xor
cli
int3
ficomps
mov
push
popa
out
push
popa
shrb
and
fiaddl
aam
push
dec
mov
cld
jecxz
out
pushf
add
inc
push
pop
in
aam
xor
fbstp
ret
pop
add
jge
sti
pop
pop
push
insb
push
sbbb
scas
inc
sbb
punpcklbw
fucom
jns
iret
icebp
pop
and
add
xchg
mov
std
loope
cmpb
inc
test
jmp
pop
pop
pop
add
mov
add
add
in
aam
inc
inc
cmp
inc
xor
add
fsubrl
xor
pop
jbe
addr16
pusha
nop
stos
cmp
hlt
movsl
inc
roll
pop
and
mov
or
and
push
add
push
inc
sub
pop
push
enter
mov
adc
add
daa
jns
ret
mov
jns
out
or
clc
out
iret
repz
lock
cmp
repz
mov
lods
test
jns
mull
sahf
out
sahf
nop
mov
repz
pusha
push
pop
push
inc
cmp
cmp
repz
sbb
mov
in
lock
repz
pop
call
ror
iret
repz
sarb
iret
repz
push
cmp
sub
cmp
repz
adc
add
jns
out
in
hlt
in
in
outsl
idivb
int3
mov
xchg
push
mov
out
push
js
push
inc
sub
fdivr
cmp
and
or
jmp
mov
mov
cwtl
inc
adc
rclb
add
lods
push
cmp
divl
mov
clc
negb
push
orb
out
pop
sbb
dec
not
lock
push
movsb
xorb
nop
add
push
repnz
lock
aaa
andnps
adc
add
cwtl
call
add
inc
and
cmpsb
fisubrl
mov
add
neg
add
dec
pop
addb
shlb
sub
lds
cmc
inc
or
scas
decl
clc
adc
jae
adcl
orb
xchg
add
mov
rclb
pop
add
in
cmp
or
or
and
mov
mov
dec
cmp
insl
xor
sub
jbe,pn
add
sbb
and
scas
mov
mov
xor
ds
je
cmp
inc
pop
mov
in
pop
jbe
outsl
jb
imul
pop
and
addr16
or
sbb
jo
cmp
dec
add
ja
sub
and
pop
sub
add
or
adc
jne
test
add
jae
popaw
insb
into
push
in
imul
stc
das
sti
ss
shrl
sbb
ja
xchg
inc
add
inc
pop
pop
adc
fcmovbe
add
les
pushl
or
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
pushl
xchg
shll
inc
ss
ss
es
dec
aaa
push
pushl
pushf
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
data16
es
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
mov
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
jg
xor
xor
xor
xor
xor
mov
xor
xor
lcall
jae
xor
out
xor
xor
xor
xor
xor
xor
incl
mov
les
fnsave
ljmp
divl
jno
cltd
ss
jmp
pushl
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
lcall
cmp
loopne
jmp
cmp
ret
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
call
inc
sarb
sar
test
jo
test
mov
loope,pt
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
aas
sbb
jge
xorb
xor
pushl
mov
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
pushl
jns
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
call
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
icebp
or
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
loop
inc
test
xor
paddd
xchg
pop
xor
push
xor
xor
xor
xor
xor
xor
incl
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
pushl
pushf
xor
xor
xor
scas
clc
xor
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fnstcw
fnstsw
loope
in
in
cmp
cmp
std
cmp
cmp
mov
xchg
adc
sbb
push
ljmp
cmp
cmp
ds
fidivrl
jmp
fcomip
add
and
cmp
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
outsl
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
clc
fstpt
mov
movsb
xor
add
jmp
inc
pop
mov
fisubrl
xor
loop
xor
hlt
aad
pushl
cmp
xor
mov
xor
xor
scas
std
xor
pop
jg
data16
ss
add
or
aaa
and
pushl
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
das
cli
outsl
clc
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
sbb
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
jmp
jmp
popa
cmp
cmpb
cmp
push
stos
cmp
cli
jmp
mov
cmp
cmp
cmp
cmp
cmp
repnz
scas
xor
adc
sub
xor
cmp
cmp
dec
cmp
call
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
scas
jmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
decl
cmp
addr16
lea
scas
cmp
jg
cwtl
lcall
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
outsl
sahf
jo
mov
mov
rclb
xor
dec
scas
insl
stos
lcall
lds
in
or
adc
and
sub
cmp
call
xor
mov
xor
xor
xor
xor
xor
xor
aaa
loopne
pop
mov
jl
cmpsl
xor
xor
scas
jno
xchg
out
cli
push
cld
xor
xor
xor
cmpsb
pushl
xor
xor
pushl
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
decl
scas
cmp
outsl
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
daa
imul
and
insb
sub
incb
mov
jle
push
or
lock
jg
xchg
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
decl
jge
cmp
cmp
cmp
cmp
cmp
cmp
loope
cmp
mov
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
mov
xor
mov
xor
xor
mov
and
push
ss
fiadds
aaa
ret
jl
jmp
repnz
or
cmp
jmp
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
jg
loopne
cmp
mov
and
cmp
cmp
fadds
idivl
push
aas
jne
mov
or
std
jg
mov
fwait
xor
xor
dec
or
ret
sub
adc
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
notb
movsb
ss
enter
in
and
cmp
cmp
cmp
orl
mov
pop
mov
sbb
and
cmp
pop
push
imul
cmp
test
push
jge
mov
ret
cmp
dec
cmp
cmp
jg
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
push
loopne
js
sarb
inc
cmp
orb
jg
cmp
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
loope
rol
ja
jl
xor
xor
pop
xor
xor
incl
cmp
or
xor
xor
xor
xor
xor
mov
ljmp
ss
lcall
ds
dec
aaa
pop
aaa
js
das
sar
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cld
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
aaa
sarb
cmp
cmp
adc
jbe
cmpl
decb
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
jle
shl
out
out
pop
rclb
sub
jne
filds
loop
xor
xor
jg
xchg
xor
xor
shll
shlb
sbb
cld
xor
xor
ljmp
jbe
loopne
adc
pushl
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
push
loope
cmp
ljmp
mov
aaa
into
push
xor
xor
xor
jl
mov
negb
mov
mov
xor
xor
xor
add
out
jle
int3
xor
cmp
sub
sub
xor
inc
pop
cld
jg
cmp
inc
cmp
dec
cmp
push
rcrb
scas
push
loope
cmp
fidivs
cmp
cmp
and
lahf
mov
arpl
mov
enter
pop
test
mov
cmp
cmp
mov
cmp
scas
scas
mov
dec
cld
push
add
or
add
inc
stos
adc
sbb
and
and
sub
sub
pop
loopne
xor
cmp
inc
cmp
cmp
cld
jg
lcall
push
cmp
ret
jl
cmpb
push
mov
nop
xchg
cwtl
fwait
lock
pop
mov
sub
xor
inc
mov
filds
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
mull
adcb
pop
jg
bound
clc
xor
xor
inc
xor
xor
pushl
nop
xor
xor
fsubl
inc
cmp
mov
imul
inc
xor
andb
jle
jge
add
or
or
ss
jg
lcall
ss
fdivs
fdivl
loopne
in
call
ss
clc
ss
add
add
or
or
adc
adc
aaa
sbb
and
and
aas
cli
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
adc
mov
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
aaa
xchg
aaa
cwtl
into
mov
dec
mov
ljmp
ret
xor
enter
shlb
aam
fdivs
fdivl
sbb
lock
hlt
scas
les
hlt
add
or
adc
adc
fcomip
pop
sbbb
cmp
fdivrl
call
mov
cmp
pop
jmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
sbb
add
insb
cmp
jl
test
mov
cwtl
cmp
movsb
cmp
mov
mov
mov
inc
xchg
sarb
test
mov
lods
test
jmp
stc
sti
popa
inc
mov
jne
call
sahf
repnz
shufps
mov
es
jmp
adcb
pusha
popf
dec
mov
addb
sub
repnz
mov
cmp
out
xor
lret
push
addb
cmpsb
or
jne
add
pop
shrb
fimuls
fsubs
lods
or
ficoms
xor
dec
or
adc
rcr
or
adc
add
int3
push
sub
sub
nop
or
outsb
and
repz
and
dec
mov
lcall
sahf
add
pop
sub
filds
adc
jo
adc
sub
dec
filds
insl
std
xchg
shrl
inc
test
ds
xchg
stos
loope
sub
sbb
clc
inc
and
outsl
inc
out
orb
insb
pushf
les
or
and
movsb
rorl
bound
or
fs
test
out
lock
dec
stos
mov
je
shl
inc
mov
jno
push
pop
in
push
loope
outsl
mov
xchg
sub
push
mov
xor
add
fsubr
pusha
xchg
sub
rolb
rcrl
push
mov
push
sahf
xchg
jne
loopne
adc
or
push
push
cmp
xchg
add
xor
inc
xor
push
cmpsb
adc
adc
xor
add
or
push
and
pop
inc
or
pop
shlb
movsb
mov
and
inc
sbb
mov
insl
lods
fistps
jns
negb
or
xlat
and
and
pop
or
xor
jl
sbb
sbb
fbld
and
sub
je
cmp
outsb
int3
fildl
jp
add
aam
mov
xor
fsubrl
insb
outsb
and
or
or
and
popl
lea
jnp
mov
jge
cmp
dec
push
in
fildl
add
or
mov
clc
decb
sbbl
mov
outsb
push
push
and
cmp
mov
leave
movsb
mov
notb
lea
push
push
pop
jb
cmpb
push
mov
adc
xchg
mov
js
mov
or
inc
rcll
call
sbb
movsl
xor
dec
cmp
dec
stos
mov
push
mov
add
fisubrl
lahf
xor
and
fidivs
addl
inc
jle
ret
and
cmp
js
or
sbb
loope
inc
or
or
add
mov
mov
mov
enter
xor
and
std
push
mov
pop
outsb
xchg
call
push
cmp
lret
inc
lret
jmp
lret
roll
push
test
jne
mov
mov
fsub
int3
mov
mov
ljmp
lock
cs
adc
push
push
loop
cld
das
inc
push
adcl
adc
es
jg
pop
add
cs
jmp
adc
push
aad
or
push
ja
push
push
jnp
cmc
test
sub
sub
or
jge
xor
push
cmpsb
outsl
cmp
xchg
or
sbbb
xchg
xor
xchg
pop
mov
outsb
mov
push
mov
dec
pop
mov
cmp
call
aad
mov
sub
or
inc
nop
dec
xlat
inc
lock
fildl
xorb
pop
or
and
clc
rolb
addr16
icebp
inc
hlt
das
add
pop
pop
or
add
push
inc
or
leave
mov
or
icebp
dec
sbb
pop
add
xchg
inc
pusha
gs
xchg
popf
jnp
sbb
add
fsubr
and
rcrl
mov
or
jge
out
call
xchg
and
push
xchg
dec
push
mov
roll
dec
push
rorb
push
mov
push
sbb
sbb
mov
push
daa
add
push
rcpps
lcall
and
or
xchg
sub
or
cmc
push
xorb
xchg
pop
pushl
inc
nop
test
rcrb
pop
hlt
sub
rclb
ficomps
loopne
adc
push
ret
lret
jl
ret
dec
mov
lea
outsb
sub
adc
cmp
sbb
jecxz
fmul
or
mov
cmpsl
clc
ss
or
mov
pop
pop
add
xor
adc
adc
inc
or
out
popa
loopne
or
push
ja
out
idiv
and
movsl
stc
jbe
cmp
sub
popa
mov
pop
xor
xchg
ret
push
adc
pop
mov
mov
or
and
cmpsb
fiadds
divl
mov
lods
xlat
call
pop
sub
in
or
add
add
sti
add
aas
adc
push
ja
out
scas
aad
insb
adc
dec
and
add
jo
pushf
or
pop
clc
sbb
test
idivl
dec
sti
jp
add
pop
push
in
imull
add
adc
sub
sbbl
dec
or
clc
fs
mov
xchg
sub
mov
addl
int
shlb
pop
int
mov
dec
sbb
mov
int
pop
jo
ss
dec
jno
ss
roll
fstpt
int
lods
xor
pop
int3
mov
loop
pusha
orl
int
leave
sbb
jmp
add
jo
add
push
sarb
int
sarb
mov
jae
add
inc
and
sub
mov
lods
and
int
xchg
iret
popa
loop
test
enter
add
sub
push
inc
mov
xchg
xor
and
mov
pop
mov
cwtl
add
sarb
movb
or
pop
mov
pmaxsw
or
push
arpl
rorb
popa
push
mov
or
out
sub
pop
mov
popa
stos
fadds
lods
shll
in
ds
fwait
loopne
out
lret
push
call
sub
es
stos
mov
mov
cmp
sub
loope
xchg
push
xchg
sub
push
push
fst
sub
outsb
push
inc
xor
sub
add
cmp
sbb
test
pop
popf
pusha
xor
sbb
ja
sbb
xchg
sbb
add
pop
mov
lret
sbb
and
test
xchg
or
cmpsb
jo
push
pop
das
adc
adc
adc
xchg
std
inc
sbb
sbb
dec
pop
scas
ja
fs
scas
cmp
mov
mov
out
sbb
scas
je
lods
fwait
adc
push
cmpsb
test
repnz
xchg
mov
pop
sbb
mov
sbb
inc
xor
push
jl
adc
sbb
call
in
push
insb
lahf
mov
fcoml
dec
mov
or
xchg
scas
mov
mov
orb
dec
jo
test
repnz
mov
call
lcall
stos
adc
xor
push
call
out
mov
xchg
jne
jo
add
popl
dec
and
sbb
mov
pushf
mulb
pop
xor
push
add
daa
or
aaa
and
push
or
xchg
inc
inc
cwtl
inc
adc
shrl
push
fcoml
les
loop
test
inc
sbb
ficoms
sub
xchg
mov
xor
pop
test
pushf
sbb
or
mov
adc
fldt
add
mov
xor
adc
sub
cmp
jns
jns
sbb
sbb
sarb
jg
mov
inc
mov
dec
push
mov
xor
mov
or
mov
xor
or
add
mull
mov
pushf
ds
andb
and
ds
mov
movsb
adcl
inc
mov
scas
add
pop
push
es
leave
xchg
dec
ret
int3
test
pusha
es
movsl
pop
jecxz
fcomps
mov
push
fs
cvttps2pi
inc
pop
inc
cmp
jae
xchg
pop
cmpl
jne
xchg
and
cmp
nop
nop
push
push
out
lret
rolb
hlt
mov
mov
pop
dec
jns
ss
xchg
fs
pop
out
sahf
out
dec
inc
cmp
xor
cs
pop
popf
out
clc
sbb
jmp
imull
and
push
pop
int3
and
jbe
adc
xor
pop
nop
xor
push
push
jl
rolb
or
loopne
mov
push
fadds
loopne
test
iret
repz
add
push
data16
pop
pop
inc
sub
jne
testl
jmp
in
mov
xlat
mov
jns
sbb
test
in
stc
xor
addb
push
inc
push
pop
push
daa
inc
jns
sbb
hlt
mov
add
or
inc
push
add
inc
xchg
push
mov
dec
mov
pop
pusha
mov
adc
or
hlt
or
inc
push
hlt
test
xor
loop
pop
push
cmpsl
ret
lret
sbb
mov
decl
or
and
sub
enter
sub
add
sub
sub
cmpsb
imul
or
or
shlb
sub
mov
sub
mov
sub
sub
or
add
sub
xor
jae
sub
sub
inc
xorb
cmpsb
imul
test
aam
push
leave
dec
neg
pop
cmp
jo
andl
sbb
jp
shlb
popa
repz
push
or
andl
subl
addr16
or
pop
stc
push
and
or
lret
fwait
add
ret
insb
push
sahf
sbb
cld
or
addb
mov
nop
movb
sbb
inc
loopne
rorb
rolb
sub
push
je
xchg
sbb
stos
imull
cmp
inc
repz
mov
les
cmpl
stos
inc
adc
inc
sub
jge
bound
hlt
ds
cs
bound
iret
push
xchg
mov
inc
nop
adc
rcrb
call
cmp
nop
xchg
inc
rcll
loope
pop
inc
push
sub
adc
inc
aas
and
fnstcw
test
mov
adc
mov
inc
pop
sar
sbb
push
fs
addb
or
daa
inc
out
shrl
ret
call
inc
sub
dec
jae
add
mov
movsb
cmp
nop
add
pop
ljmp
lea
and
jns
dec
or
pop
mov
mov
cld
add
pop
ds
jo
push
aad
loop
jns
mov
pop
xchg
jns
pop
nop
adc
ljmp
rol
sbb
test
mov
lcall
mov
xor
xchg
dec
js
inc
js
cmp
cmpb
adc
push
sub
ja
repnz
into
daa
adc
dec
adc
pusha
sub
sbb
and
js
bound
rolb
dec
and
xor
mov
dec
jns
ljmp
icebp
sbb
jo
jns
scas
push
test
inc
icebp
xchg
gs
aam
push
mov
dec
popf
rol
sbb
xor
jnp
cmp
lods
fcmovb
sub
mov
xchg
jmp
outsb
cmpsl
mov
cmp
push
fs
mov
sub
jmp
enter
les
or
adc
mov
mov
dec
gs
pop
dec
dec
xchg
pop
push
jo
mov
mov
xchg
out
mov
ret
rol
enter
xchg
iret
mov
mov
sub
xor
pop
add
xchg
xor
push
pop
push
jne
sbb
add
mov
xchg
mov
cmp
and
cmp
mov
jbe
jecxz
test
push
in
fidivs
inc
cwtl
dec
dec
call
jl
je
shll
dec
shlb
pop
cs
and
inc
inc
mov
lret
int
lea
test
dec
enter
adc
cmp
xchg
fs
enter
dec
push
and
mov
test
aam
movl
rorl
call
daa
int
rorb
das
push
nop
cs
mov
movl
nop
jae
or
or
ret
or
jmp
add
icebp
mov
mov
and
out
inc
movsb
in
es
neg
sbb
fcoms
mov
mov
xchg
mov
xor
xor
data16
nop
xchg
repnz
pop
mov
mov
adc
ds
into
mov
nop
in
inc
test
inc
mov
or
pop
xchg
or
mov
inc
mov
es
aaa
mov
xor
fidivl
imul
cmp
mov
adc
and
xor
shll
xchg
xor
aam
mov
mov
loope
dec
out
sub
not
mov
movd
mov
stos
hlt
mov
xor
fdivl
sbb
xor
xor
xor
inc
inc
xor
xor
cmp
cmpsl
mov
xor
or
lret
daa
dec
mov
or
or
sarl
loop
xchg
mov
ffree
add
lock
jo
sbb
cmp
insb
fnstsw
enter
push
fdivl
nop
outsb
aaa
xchg
pop
call
nop
adc
aad
std
inc
cmp
jo
inc
xchg
mov
sbb
int3
jo
mov
and
and
aam
scas
sub
cmp
addr16
dec
aad
cmpsl
iret
imul
jno
cmp
mov
nop
ss
and
and
fs
dec
jl
xor
stos
add
pop
xor
pop
call
inc
addr16
push
mov
stos
inc
lahf
sub
xchg
add
test
cld
xchg
outsl
and
inc
dec
cmpsb
in
push
pusha
push
sub
sbb
int
jne
cmpsb
daa
pop
add
pop
mov
mov
jb
add
push
xchg
fnsave
ret
add
or
add
mov
mov
hlt
or
add
add
push
enter
or
mov
or
call
test
mov
dec
adc
daa
pop
enter
or
les
lock
mov
or
mov
pop
add
jb
push
lret
push
jne
push
inc
cmp
imul
shl
mov
cmp
jb
nop
jnp
fcomi
and
sbbb
add
jnp
repz
jp
pop
hlt
push
add
es
loope
and
call
mov
enter
jnp
inc
pop
xor
sti
loopne
out
adc
enter
jbe
fsubrl
xchg
push
and
and
scas
mov
sub
cmpsl
or
xchg
in
mov
xchg
js
and
mov
mov
adc
mov
adc
ret
xchg
xor
push
sti
dec
mov
daa
leave
mov
fcom
js
cmp
mov
fcoml
sbb
stc
aas
stc
or
shrl
sar
adc
loopne
stc
stc
inc
sbb
mov
call
xchg
call
mov
and
fstp
stc
cld
mov
xlat
test
inc
dec
leave
sub
mov
ljmp
imul
sub
bound
jmp
lret
and
pusha
xchg
movsb
aas
push
sbbl
lret
push
ret
pop
jmp
jmp
jne
out
lcall
xchg
jno
je
add
fcmovnu
call
cmp
jne
les
add
mov
xor
or
pop
movsl
popa
adc
cld
and
fs
push
and
iret
aam
adc
outsl
js
push
inc
adc
call
and
ds
sbb
jecxz
jne
pop
sbb
adc
mov
inc
bnd
or
std
push
sbb
ret
call
cmpsl
mov
mov
xchg
and
xchg
mov
sub
hlt
je
adc
mov
test
ret
ret
xchg
cmp
jl
addb
lods
or
and
push
iret
shlb
push
and
xchg
cmp
pop
shrl
inc
mov
nop
push
rcr
fldl
jo
sarb
sbb
or
sub
inc
and
cmp
ljmp
pushf
rcrl
mov
shrl
inc
push
test
rcrl
je
mov
mov
sbb
add
in
xor
jne
xchg
or
inc
imul
scas
pusha
or
xchg
pop
push
adc
rclb
arpl
gs
test
add
or
dec
in
pushf
add
loop
pop
adc
jmp
jno
push
fcoms
push
sbb
push
xorl
add
repz
cltd
jmp
mov
cwtl
jno
test
mov
cmc
adcb
xor
mov
pushf
or
mov
prefetcht1
push
je
jo
adc
adc
adc
or
sub
sbb
adc
nop
inc
pop
into
jp
popl
nop
fldcw
aam
xchg
cmp
in
roll
fstps
leave
mov
fmuls
rcr
cmp
lods
adc
sbb
cmp
mov
mov
push
rolb
mov
add
cmp
bound
adc
adcb
mov
lea
in
inc
xchg
xchg
adc
inc
sbb
cmp
mov
adc
dec
xchg
xchg
outsb
lcall
mulb
outsb
lds
xor
pusha
pop
add
movsl
adc
sbb
push
inc
cmp
mov
and
je
movsl
adc
sub
sbb
inc
rorb
xchg
xchg
adc
int3
mov
mov
inc
pop
movsl
and
add
rcr
fcmovnbe
popf
jns
sub
or
leave
or
shlb
dec
push
or
sbb
and
sub
cmp
mov
adc
orl
mov
adc
dec
in
sub
jl
lcall
dec
in
or
scas
inc
popf
call
call
nop
sbb
sarb
jno
mov
das
lcall
mov
ljmp
sbb
push
dec
dec
out
mov
lds
mov
inc
cmp
fstp
mov
add
cld
dec
mov
mov
mov
in
aas
xlat
push
cmpl
outsb
pop
gs
test
mov
adc
dec
sahf
in
out
ljmp
outsb
pop
cmp
addr16
inc
xor
pop
xor
test
fsubl
lods
sbb
pop
aaa
sbbb
mov
call
push
pop
aam
cmp
pop
loop
fmul
aam
ljmp
push
mov
iret
es
outsb
push
pop
outsb
ret
xor
test
pop
xchg
in
mov
aaa
test
push
pop
push
outsb
push
stos
mov
aad
pop
xor
cmp
ret
jge
pop
inc
push
in
mov
lods
jecxz
jp
mov
mov
mov
ljmp
add
mov
in
dec
jo
pop
sarb
xlat
jno
jns
adc
sbb
sbb
stos
pop
hlt
aam
je
rcrb
push
adc
jns
cmpl
enter
aaa
test
push
or
pop
xchg
sbb
xchg
and
push
and
pop
test
and
xchg
pop
dec
or
cmp
mov
or
add
pop
pop
xchg
or
arpl
mov
jmp
adc
inc
fs
call
jb
dec
leave
in
loopne
orl
jecxz
jb
adcb
xchg
mov
lret
pop
pop
pop
push
jo
jb
push
bound
pop
mov
inc
mov
cmp
and
sbb
add
sti
mov
lret
lret
lret
lret
loopne
fdivrs
lret
lret
lret
lret
sarb
mov
mov
mov
leave
lret
cmpb
mov
push
mov
push
jb
mov
and
cmp
sbb
mov
cld
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
mov
inc
push
jne
push
pop
mov
push
mov
push
jb
xorl
sub
leave
inc
adc
sbbl
out
mov
push
jb
mov
and
cmp
mov
lods
mov
sbb
xchg
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
and
call
jb
stc
or
mov
or
enter
xor
ja
dec
nop
or
sarl
inc
or
inc
outsb
xchg
mov
add
int
dec
xor
sbb
pushf
xor
daa
push
sbb
inc
xor
mov
adc
and
int
dec
adc
cmp
or
and
stc
mov
shlb
out
xor
dec
ror
dec
cli
cmp
mov
dec
cmp
mov
addl
test
lock
mov
add
test
aad
mov
in
xor
inc
and
movsb
push
inc
sbb
sbb
and
xor
sub
mov
xchg
dec
repnz
mov
movsb
test
pop
stos
and
or
ret
cltd
jno
sbb
scas
sub
push
mov
cmp
inc
enter
mov
icebp
roll
aas
pop
scas
jne
xchg
lea
inc
sub
dec
lods
push
add
xor
push
or
pop
add
add
push
cwtl
adcl
movsl
adc
mov
cmp
pop
test
into
lcall
inc
xchg
int3
inc
out
and
loope
dec
sub
xor
shl
add
mov
add
out
hlt
mov
adc
mov
out
xor
push
out
test
and
mov
push
mov
push
inc
stos
nop
out
jl
stos
inc
xchg
out
mov
jbe
push
test
and
jb
nop
movsl
xor
rcrb
test
out
adc
sub
adc
dec
out
stos
nop
and
and
pop
mov
and
xor
dec
int3
out
sub
pop
inc
out
movsl
mov
sub
icebp
imul
lock
or
nop
fldenv
or
xchg
inc
mov
out
push
enter
out
inc
xchg
in
push
and
scas
pop
mov
fdivrl
cmp
xor
sbb
andb
mov
push
enter
mov
int3
out
nop
push
enter
out
inc
test
in
cltd
movsl
mov
sarb
dec
orl
out
push
pop
sbb
pop
and
xor
mov
nop
movsl
out
in
sbb
mov
jbe
test
sub
cmp
and
adc
jae
test
or
adc
out
test
je
in
shlb
pop
lods
sub
out
lock
lods
xor
lock
int3
arpl
adc
fiaddl
cwtl
adc
sub
nop
movsl
sti
call
dec
inc
loop
push
nop
movsl
jnp
and
or
test
mov
insl
fadds
dec
cmpsl
xchg
out
dec
out
or
sbb
inc
sbb
ss
cmp
nop
out
loope
sbb
repz
add
out
lods
adc
adc
dec
mov
loopne
jno
out
xlat
inc
call
shlb
out
dec
sbb
push
test
pop
lods
push
inc
and
and
xchg
out
dec
aaa
mov
lock
sub
or
add
sbb
out
in
xlat
inc
and
and
lret
xor
outsl
arpl
fadds
rclb
dec
out
cmp
adc
mov
sarb
ja
popa
nop
test
out
pop
sbb
in
test
nop
movsl
leave
xor
jno
fs
mov
enter
popl
popa
ja
out
sub
push
decb
mov
std
ds
dec
inc
and
inc
test
xor
enter
adc
pop
mov
xchg
lock
popa
pop
push
sbb
mov
xchg
pusha
or
add
pop
xor
cmpsb
or
push
push
out
ss
out
mov
or
add
scas
nop
movsl
stos
cmc
or
and
scas
out
pop
push
add
add
cmp
out
dec
sbb
adc
nop
movsl
roll
stos
out
ljmp
cltd
lock
add
or
pop
cmp
out
adc
xchg
nop
movsl
ret
push
repnz
inc
xchg
out
mov
mov
mov
rcrb
out
inc
cmp
jp
add
sub
out
adc
push
call
into
cmp
mov
cmp
sahf
int3
cmpsl
push
test
nop
mov
addl
inc
sbb
inc
scas
inc
xchg
out
andb
test
test
jg
mov
out
push
sub
pop
sbb
sbb
rclb
movsl
rcll
out
stc
xor
mov
out
inc
test
lds
mov
jno
inc
adc
je
out
fimuls
pop
sbb
mov
or
mov
test
or
jne
loope
adc
nop
and
jb
push
lods
adc
or
rcll
mov
hlt
out
sub
jp
out
mov
loope
xchg
and
out
out
inc
ret
out
out
mov
outsb
and
inc
out
pushf
mov
addl
int3
add
add
pop
adc
xchg
out
inc
inc
adc
xorb
cmpsb
push
dec
push
jnp
or
iret
mov
mov
pop
inc
mov
sbb
mov
sbbb
and
inc
add
jmp
lock
lds
lahf
inc
movsb
mov
push
pop
fmuls
push
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
adc
shlb
popf
in
mov
sub
clc
subb
lahf
push
cltd
imul
test
mov
mov
std
pop
or
int3
mov
and
jne
fisttpl
dec
repnz
push
xchg
mov
jbe
jmp
fdivrl
mov
inc
xchg
mov
sbb
pusha
jl
out
jo
aam
add
repz
rcll
push
bound
repz
jp
xchg
cmpsb
mov
cmp
out
add
out
push
fs
cwtl
out
sahf
out
mov
fdiv
iret
repz
or
push
sub
dec
pop
cmp
repz
jo
cwtl
scas
imul
lock
stos
and
jns
out
inc
push
pusha
insb
out
sahf
jbe
xchg
movsb
mov
adc
jns
mov
adc
adc
push
pusha
and
sub
inc
fsubl
xor
repz
ljmp
sbb
jns
sub
push
outsb
cmp
jl
int
repz
clc
mov
mov
push
cmp
mov
xchg
mov
add
adc
pop
add
mov
push
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
int
xchg
out
test
push
pop
sahf
mov
and
pop
cmpb
ds
repz
jp
cmp
hlt
call
cwtl
shlb
push
push
push
push
movb
testl
or
add
out
data16
xchg
or
xor
dec
repz
sbb
add
xchg
hlt
call
aam
enter
repz
sarb
mov
mov
iret
repz
mov
iret
repz
je
insb
iret
repz
push
push
cmp
repz
dec
dec
inc
inc
repz
repz
xor
sub
repz
sub
or
nop
sahf
out
sahf
in
les
jns
and
inc
popl
ror
cmp
mov
inc
lcall
clc
mov
jns
out
int3
lods
test
cmp
out
in
enter
outsl
xchg
dec
xor
push
in
mov
push
mov
inc
sub
push
pop
sub
push
mov
sub
add
pop
push
sub
adc
aaa
xor
push
push
add
inc
pop
cmp
or
scas
fwait
lods
inc
xchg
insb
out
mov
ja
adc
ja
sub
adc
ss
add
inc
pop
mov
loopne
or
sbb
xchg
popa
out
daa
add
and
xchg
int
fdivrl
xchg
add
push
daa
jnp
pop
pop
and
push
mov
fsubrs
outsb
inc
add
pop
mov
mov
in
pop
jg
das
xor
lcall
ss
xor
sbb
xor
add
roll
call
adc
add
aas
jb
or
cs
test
cmp
jge
and
fmuls
cmp
cmp
push
adc
pop
inc
inc
fwait
push
lods
push
out
aas
sbb
dec
dec
mov
add
stos
dec
rorl
insb
mov
aas
mov
push
int3
xchg
pop
xorb
mov
ja
stos
ja
mov
outsl
xchg
adc
jg
mov
mov
pop
or
unpcklps
xor
xchg
adc
in
add
push
nop
imul
jbe
adc
push
mov
test
aaa
les
outsl
andb
in
and
sbb
fiadds
iret
in
adc
jbe
jo
jbe
ud2
jno
int
xchg
jno
push
xchg
movsl
add
mov
leave
in
and
push
push
sbb
shrl
sbb
adcb
and
cld
andb
xor
pop
and
pop
inc
aas
inc
xor
adc
outsl
jne
push
cmpsl
mov
mov
mov
cmp
outsl
and
loop
pusha
data16
sbb
xchg
mov
xor
movsl
mov
push
cmpsl
mov
lret
sbb
jecxz
dec
pushf
xor
scas
xor
xor
or
push
add
sbb
push
lret
pop
add
sub
xor
sbb
sub
dec
dec
adc
pop
sub
xor
lea
lea
mov
ret
mov
dec
xor
iret
lea
and
ss
aaa
xlat
and
rcrl
inc
xor
inc
fbld
push
rcrl
rcrb
jno
shll
sbb
aas
and
iret
rcrl
inc
inc
jae
fcomps
xchg
inc
inc
and
inc
rcll
fmuls
jecxz
sbb
rcrl
psubusb
rcl
arpl
push
xlat
push
and
inc
xor
dec
pop
rcrb
xor
xor
sbb
sub
push
push
push
mov
mov
xchg
add
jbe
aad
mov
pop
aam
inc
inc
or
xor
cmp
pop
incb
dec
or
movsb
xchg
testb
cmp
repz
xchg
nop
mov
je
pop
push
pop
sahf
out
sahf
dec
inc
inc
cmp
xor
sahf
out
xor
and
repz
out
sbb
add
xchg
out
outsl
fs
xchg
in
push
in
sahf
out
sahf
enter
test
inc
sbb
jns
jl
out
fidivrs
fs
push
jnp
cmpsl
mov
and
add
sahf
out
out
xchg
push
enter
jns
out
test
cwtl
nop
mov
repz
jo
pop
inc
sahf
ja
cmp
sub
push
adc
cmp
sarl
loopne
mov
repz
insb
pop
adc
inc
sub
add
add
pop
jnp
lret
lock
dec
test
into
xor
dec
push
test
push
stos
sbb
sub
pop
js
push
push
sbb
lods
mov
inc
call
insl
shr
leave
pop
jg
sub
pop
enter
pushf
testb
xchg
outsb
stos
lcall
xchg
cmpsl
lods
push
sbb
inc
aam
mov
mov
aas
iret
mov
inc
and
incl
mov
cmp
add
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
sbb
sub
xor
xor
xor
aaa
fbstp
fisttps
jecxz
arpl
cmp
xor
notb
cmp
bound
jg
mov
cmp
sahf
fisttps
fdivrs
bound
cmp
xchg
lahf
cmp
das
test
cmp
push
and
pop
ds
ds
call
mov
aas
fs
imul
aas
jecxz
call
cwtl
dec
xchg
mov
and
sub
or
popa
cld
xor
mov
mov
pop
push
shl
loope
xchg
push
out
xor
repnz
xor
xor
mov
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
xor
clc
mov
xor
das
xor
out
xor
xor
and
sub
std
pop
sub
sub
xor
xorb
xor
xor
sbb
ss
xor
xor
xor
xor
xor
push
mov
pushl
shlb
enter
push
xor
and
sub
insb
ss
sbb
jecxz
ss
push
or
incl
jp
aaa
cmp
insb
cmp
stos
popa
dec
xchg
leave
jbe
cmp
sbb
sbb
and
aas
jl
mov
sub
xor
jp
test
mov
test
repnz
cmp
pop
dec
cmp
rolb
stos
push
fildl
cmp
dec
cmp
push
ret
cmp
cmp
inc
idivb
cmp
cmp
nop
xor
cmp
aad
mov
cmp
mov
inc
ds
ds
ds
cmp
dec
out
nop
icebp
xchg
xchg
mov
aas
repnz
xor
wrmsr
and
inc
xor
xchg
xor
xor
xor
lods
xorb
and
xor
inc
sbb
or
xor
dec
in
dec
xor
popa
jl
mov
xor
mov
outsl
test
lret
push
add
sub
pop
mov
mov
aaa
in
lock
and
xchg
sub
cmp
data16
pop
incl
cmp
xchg
xchg
xor
cmp
into
in
bound
divps
inc
dec
ss
cmp
idivb
popa
jl
mov
cmp
cld
lea
sbb
cmp
jne
jnp
sub
sbb
cmp
cmp
xor
dec
cs
or
cmp
cmp
cmp
ljmp
and
xor
inc
jp
insb
pushl
fdivr
cmp
cmp
cmp
cmp
cmp
sub
ds
ds
ds
or
es
adc
and
dec
aas
push
aas
dec
pop
aam
or
outsb
xor
fidivl
test
xor
out
out
xor
inc
daa
loop
mov
xor
xor
xor
xor
sub
push
shlb
inc
xor
insl
xor
fdiv
fistpll
test
cli
xor
decl
ja
popf
xor
xor
aaa
adc
mov
mov
and
mov
cmp
cmp
cmp
inc
mov
outsb
xchg
adcb
bound
inc
adcl
sub
sub
cmp
mov
mov
cmp
push
cmp
imul
sub
inc
sub
jno
ja
or
cmp
lcall
cs
cmp
scas
push
addr16
mov
cmp
cmp
pop
cltd
cmp
cmp
cmp
xor
sbb
es
sub
dec
sbb
cmp
inc
outsl
or
js
cmp
xor
xor
xor
adc
xor
or
push
cmpsb
xor
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
popa
cld
pushl
das
ss
mov
mov
aaa
pop
dec
pop
cmp
mov
lret
jecxz
fdivp
cmp
cmp
cmp
mov
ljmp
fisubl
imul
cmp
cmpsb
cmp
cmp
cmp
sub
mov
cmp
aas
iret
aas
loope
pop
cmpb
add
cmp
xor
pop
lret
clc
jae
test
xchg
mov
fbstp
icebp
ss
push
push
mov
or
pop
mov
xor
ss
aaa
gs
mov
cmp
cmp
cmp
cmp
pop
test
scas
or
icebp
stos
pop
xor
out
adc
fs
push
push
out
outsb
and
into
sub
xor
pop
cmp
insb
cmp
jnp
add
push
mov
lcall
add
pusha
or
or
adc
and
aas
jl
mov
xor
je
jl
orb
nop
sbb
mov
pop
mov
popa
lcall
sbb
stos
outsb
jle
lret
aam
sbb
data16
hlt
daa
je
or
int3
out
mov
sbb
cmp
xchg
jo
js
jl
xchg
mov
add
mov
mov
sbb
xor
out
inc
orl
pop
sub
or
dec
rolb
sar
stos
dec
cmp
inc
xor
push
xor
xchg
xor
pop
xor
insb
mov
je
jl
inc
pushl
pop
nop
xor
movsb
xor
ds
subl
xor
inc
mov
push
ret
shlb
sbb
pop
clc
lods
js
mov
je
xor
gs
add
jle
jp
aaa
add
xor
push
xchg
push
push
je
mov
xchg
int3
xor
cmp
dec
sbb
cmp
mov
mov
fmull
jb
pop
daa
cwtl
out
fmuls
cld
stos
xor
xor
inc
xor
xor
roll
jg
xchg
xor
xor
jnp
sbb
insl
xchg
loop
xor
xor
out
xchg
pop
xor
xor
sbb
xor
cmp
ficomps
sbb
add
call
dec
in
in
xor
fwait
fs
dec
xor
data16
sub
xor
sti
add
xor
cld
addl
xchg
dec
xchg
push
lcall
pusha
mov
jo
js
jl
xorb
mov
inc
shr
xor
xchg
rcrb
sbb
inc
and
xor
push
fiaddl
xchg
xlat
mov
and
stos
sub
loope
fs
jo
nop
ljmp
call
add
add
lock
mov
lock
push
leave
es
jbe
enter
daa
or
ffreep
xchg
outsl
xlat
aad
movsb
loopne
adc
inc
aas
popf
arpl
jp
jp
add
pop
cwtl
pushf
inc
std
fiadds
pop
lods
insb
xchg
pop
into
incb
ret
lcall
fstl
sub
leave
push
movsl
push
imul
cmp
sahf
incb
dec
popa
hlt
sub
in
mov
std
aam
or
call
inc
push
xchg
cli
mov
mov
outsl
xchg
mov
fistl
inc
scas
loopne
insl
pop
insl
pop
les
inc
push
xor
jge
outsl
push
imul
inc
push
push
cmpsb
adc
and
mov
xor
fstl
lods
bound
decl
adc
data16
cmpsb
push
iret
xor
test
adc
loope
push
pop
mov
and
pop
or
mov
sub
cld
shll
rcr
in
in
lock
iret
adc
out
lret
pushf
std
sar
in
xchg
xchg
scas
mov
pushl
jbe
push
xor
cltd
insl
jne
pop
xchg
outsb
xor
fiadds
cmp
cmp
sbb
jp
lods
cmp
push
mov
cmp
fsubl
lret
pop
ljmp
mov
add
aaa
mov
test
repnz
adc
in
mov
mov
pusha
or
insb
push
flds
in
inc
mov
imulb
insb
std
dec
or
fldt
popf
pop
movsl
mov
sbb
je
pop
inc
es
decl
in
addl
mov
scas
push
scas
dec
ret
mov
push
dec
cmp
ljmp
aam
jmp
sub
xor
or
iret
ret
in
lret
push
cmpsw
decl
enter
mov
mov
add
arpl
stc
cmp
sbb
inc
je
mov
loop
pop
test
xor
pop
push
iret
pop
rorl
cmp
mov
fcompl
out
dec
arpl
aas
or
jl
test
cmp
sbb
popf
daa
ljmp
pushl
or
cli
xchg
sbbb
push
pop
pop
sbb
jno
add
stc
xchg
out
or
mov
jge
shll
incl
pop
jnp
jl
cmp
rcr
mov
add
lock
cmp
addl
lcall
dec
andb
rcrb
in
mov
xor
xchg
push
jb
adc
sub
jg
call
mov
cltd
daa
in
jmp
pavgw
mov
stc
push
imul
ja
ficoms
rolb
sarb
add
cmp
jp
out
mov
call
sub
adc
in
negl
sbbl
jmp
movsl
and
popa
call
mov
xchg
xor
adc
int3
repz
mov
jg
inc
mov
lcall
cs
out
or
shlb
scas
stos
cwtl
loope
repnz
lcall
adc
es
cli
in
jp
pop
fbstp
add
pop
or
sbb
test
jle
insb
jne
pop
push
scas
mov
rorb
inc
cmp
or
bound
imul
jmp
pusha
xlat
pop
adc
jge
ror
sbb
les
inc
lds
sbb
cltd
outsl
out
mov
in
pop
pushf
push
cmp
loope
incl
mov
fsubr
inc
rcrl
xchg
stc
adc
pop
jnp
xchg
or
aas
and
mov
addr16
dec
add
or
add
fcomip
lcall
leave
jg
cltd
pop
imul
mov
inc
pop
push
dec
mov
xorb
les
cmp
dec
push
and
movsl
aad
icebp
notl
nop/reserved
or
push
xchg
lcall
es
nop
jl
imul
or
cltd
popa
jge
xchg
movsb
pop
cli
jmp
outsb
cmpsb
jecxz
xchg
mov
scas
xchg
add
pop
or
addr16
mov
int
ljmp
fs
mov
icebp
jns
push
arpl
fisubrl
xchg
pop
fwait
int
sbb
cwtl
lcall
mov
push
mov
pusha
mov
push
pop
dec
add
out
scas
inc
inc
popf
incl
mov
fisttpll
mov
loope
sbb
stos
decl
mov
fwait
loopne
jle
adc
dec
sbb
arpl
lcall
push
popa
cmp
repnz
cmpsb
mov
int
pop
mov
aad
jge
jno
push
mov
jl
dec
pop
push
or
pop
dec
sahf
pop
ficoms
inc
sub
ss
ror
stc
pushl
jne
in
push
fsubr
cmpb
dec
xchg
ficompl
add
and
jle
mov
nop
push
shrl
lea
loope
clc
sub
or
adc
decl
rolb
or
or
add
and
aaa
cmp
sbb
pushl
vmwrite
dec
jp
fdivp
xchg
cmp
mov
mov
sbb
lcall
stc
stos
je
push
jmp
mov
incl
popf
scas
inc
int
lea
cld
mov
call
adc
sub
mov
mov
incl
psubusb
inc
and
xorb
push
out
pop
jl
fmuls
xchg
cs
push
call
cmp
cmp
dec
mov
xchg
add
jle
mov
dec
inc
popf
movsl
jns
ljmp
lods
aas
lcall
pop
ss
nop
test
push
pushf
adc
jmp
pushl
inc
sub
out
cmp
cmc
test
push
fwait
pop
xchg
cmp
push
jb
das
and
cmpsb
add
scas
and
pushf
cmp
outsl
clc
decl
pop
imul
cwtl
mov
mov
inc
mov
push
popf
ljmp
add
insl
enter
cmpsb
mov
xchg
loopne
mov
loop
insb
sbbb
jmp
pusha
push
cmp
in
pop
mov
rcll
fld
ss
les
jno
inc
cmp
sub
sbb
cmp
std
sub
cmp
push
push
iret
mov
es
mov
ret
frstor
mov
inc
cld
jmp
mov
push
jg
or
mov
or
sbbl
cmpsl
dec
popa
cmp
jg
add
and
mov
jns
les
jae
pop
cmc
sbb
movsl
fsubs
mov
sub
or
pushl
ror
ret
mov
jb
mov
mov
icebp
mov
xchg
add
mov
lcall
out
inc
add
and
inc
adc
cmpsl
fs
lcall
or
in
sti
pop
out
ds
inc
lods
or
sbb
pop
icebp
jmp
dec
ljmp
testl
jp
mov
pushl
push
mov
leave
movsl
push
mov
rolb
and
mov
dec
or
or
fsubl
xor
mov
stc
mov
loop
jb
cld
movsb
popa
es
or
inc
incl
lock
nop
cltd
or
inc
pusha
xorl
daa
daa
cmp
xor
or
xor
in
gs
jg
aam
aas
pop
loop
jns
mov
mov
sar
call
sub
mov
negb
mov
or
das
jg
sub
out
lcall
adc
pusha
lds
adc
lods
decb
push
scas
jns
js
fs
adc
ljmp
insb
pop
shll
pushf
or
dec
sar
call
fidivrl
popf
loope
xchg
test
roll
and
pop
inc
xorl
or
jg
xor
inc
lds
jp
cmp
aaa
or
subl
inc
out
add
mov
das
movsl
jge
sbb
imul
bound
sub
push
cmp
ljmp
lcall
jl
push
aam
cmpsb
lcall
and
jb
hlt
sub
push
or
push
cwtl
mov
mov
leave
lods
dec
js
xchg
leave
add
sbb
mov
in
pushl
stos
sbb
fnstcw
cmp
cmp
push
xchg
lahf
imulb
sub
enter
mov
jmp
addr16
lea
bound
add
mov
std
call
mov
jmp
sbb
or
popa
inc
xor
das
mov
std
mov
push
or
fisubs
subl
add
sahf
call
add
mov
adc
pop
xchg
dec
sahf
fmuls
ret
mov
add
lret
nop
cmp
sub
int
lcall
lcall
daa
addb
rclb
mov
xchg
dec
fimuls
and
out
push
mov
fadds
push
and
fdivrs
cwtl
sub
pusha
fwait
push
push
enter
ljmp
psubq
imul
cwtl
pusha
sbb
jnp
dec
jmp
jae
xchg
pop
pop
out
lcall
push
out
icebp
fimuls
dec
in
mov
xchg
inc
sti
dec
lea
lret
out
and
cld
icebp
out
in
push
cmpsb
mov
dec
insb
cmp
decl
inc
push
xlat
mov
xor
pop
inc
or
rolb
fdivrl
out
cmp
xor
and
out
push
mov
mov
adc
add
fimull
jbe
ljmp
lds
lock
dec
movsb
jae
sub
push
loopne
loope
inc
push
insb
mov
pushl
rorl
out
pmaxsw
ss
inc
in
xor
ljmp
mov
mov
sub
ss
pusha
pop
mov
dec
mov
add
enter
fadds
decl
inc
or
and
xor
bound
pop
mov
jb
and
jmp
in
enter
xor
pop
addl
cmc
mov
ret
jne
push
inc
shll
xor
stos
incl
cld
dec
and
push
xor
jae
dec
stc
sub
pop
clc
rcll
out
lds
push
mov
sub
add
lahf
lods
fstl
add
out
cmc
fadd
cmp
outsb
arpl
jbe
xor
das
jnp
push
daa
or
xor
xor
push
int3
cmp
push
jbe
mov
pusha
sar
mov
ss
ret
lods
hlt
mov
mov
add
adcb
dec
into
inc
pop
scas
cli
pushl
push
sub
clc
fisttpll
mov
enter
stos
lret
sub
ljmp
xor
clc
jae
mov
pushf
add
cwtl
push
sub
movsl
inc
in
sahf
mov
outsl
clc
dec
xor
incl
mov
std
fcomps
inc
add
push
call
inc
or
aaa
out
ja
popf
pop
mov
fcoml
cmpsl
aas
movsb
and
and
out
imul
jmp
mov
push
adc
repz
lods
inc
jmp
arpl
sub
sub
sarl
outsb
fstps
push
pop
das
stc
aas
xor
leave
and
pop
shlb
lods
sub
xchg
aam
push
in
xor
movsb
xchg
adc
mov
aad
xchg
repnz
in
jl
lcall
add
pop
xchg
enter
dec
xchg
push
cwtl
sbb
mov
adc
sub
mov
decl
cmpsb
repnz
adc
stc
xchg
enter
stc
outsl
cmp
cmpsb
lock
fildll
mov
lcall
not
mov
push
cmovnp
or
aaa
fists
jbe
push
mov
sub
mov
or
jg
mov
sti
dec
jbe
ret
mov
lcall
jnp
adcl
and
clc
scas
clc
call
cli
fnstsw
jmp
sbb
push
mov
nop
js
iret
incl
inc
adc
repnz
adc
pop
push
push
rcr
sbb
incl
cmpsl
mov
aaa
mov
pop
mov
pushl
adc
push
mov
push
pop
dec
stos
lock
jp
mov
fsubs
push
icebp
ljmp
fbstp
and
sub
pop
jnp
push
aam
mov
inc
xchg
jae
leave
outsl
pop
pop
jle
mov
xor
inc
cwtl
xor
pop
test
fnstenv
push
jg
or
jle
hlt
add
inc
inc
call
popa
cmpsb
outsb
pop
in
rolb
mov
and
out
insl
fcoms
xchg
shrb
dec
leave
and
std
fsubrs
cmp
mov
dec
dec
push
xchg
popf
inc
aas
fmul
jbe
mov
popa
arpl
pushl
dec
repnz
aaa
out
mov
shlb
xchg
imul
xchg
or
ljmp
in
fs
mov
mov
pusha
ffree
pushf
push
pushl
call
aam
outsl
fiadds
shr
ret
inc
mov
std
aam
jb
jmp
ljmp
cs
xor
and
aam
enter
cmp
cvttps2pi
jbe
sbb
push
adc
dec
imul
gs
fisttpll
mov
lcall
adc
enter
je
test
sbb
popf
inc
xor
divb
aaa
fcmovbe
ret
into
xor
xchg
dec
push
xor
xlat
aas
mov
pop
out
cs
jle
bound
lds
lock
pop
adc
cld
add
test
fstpl
mov
data16
cmp
sub
je
sbb
mov
stos
xchg
mov
inc
jecxz
push
mov
cmp
mov
jecxz
loope
jg
and
testl
aaa
pop
jne
ljmp
mov
gs
or
pusha
scas
mov
dec
adc
mov
movsb
cmc
call
push
test
loope
test
add
cltd
sub
lcall
aaa
fwait
out
and
adc
pop
push
negb
or
sahf
add
imul
ljmp
jmp
pop
aas
mov
xor
xor
dec
addr16
lcall
gs
clc
ja
pop
inc
stos
sarl
popa
push
jno
call
lcall
adc
dec
ficompl
and
mov
insb
sarb
ljmp
mov
popf
testb
dec
or
lock
aad
arpl
push
jns
mov
jge
call
lock
out
mov
adc
sarb
xorl
adc
push
jle
push
stos
dec
mov
jg
push
outsl
cwtl
aam
jbe
sar
pop
std
out
data16
sahf
movsl
fisubrl
jg
int3
lea
ss
jmp
test
mov
cmovb
jl
mov
inc
cld
mov
sbb
and
cli
xchg
in
cmp
adc
jb
mov
and
icebp
cmp
jmp
mov
adc
scas
cmp
xchg
imul
in
jp
std
inc
pop
add
leave
xchg
adc
aad
mov
rclb
adc
sbb
out
cli
lcall
rcll
idivl
rcrl
stos
mov
xchg
aam
cli
fcomip
ja
dec
jae
sbb
inc
mov
out
mov
and
cld
daa
adc
mov
inc
loope
xor
call
push
subl
sahf
pop
xchg
ljmp
inc
das
mov
and
aas
xor
mull
mov
jmp
hlt
pop
shl
decl
and
lds
andl
mov
aas
outsl
loope
cli
fcomps
and
lock
mov
decl
sub
dec
fwait
enter
mov
sar
fwait
mov
stc
repnz
xchg
mov
cmp
ljmp
outsb
lea
dec
inc
stos
jmp
push
dec
mov
xchg
clc
pop
pusha
or
and
mov
lcall
sbb
inc
pushw
fwait
xchg
xchg
cmp
jg
jns
shll
lret
loope
lahf
pop
outsl
repz
call
inc
lock
mov
xchg
insl
and
frstor
int3
xchg
jg
jecxz
aad
jl
xchg
jo
adc
mov
testb
cs
pushl
mov
pop
in
xchg
sbb
mov
jmp
incl
inc
add
jb
shll
mov
jp
mov
inc
inc
jg
xchg
out
mov
fisttps
push
or
and
jb
lock
mov
add
sahf
decl
cmc
sub
cld
andl
insb
jecxz
fcmovb
xor
lock
ud0
lcall
inc
push
out
push
mov
out
bound
push
inc
adc
jnp
out
inc
pop
xor
push
or
or
fbstp
adc
loop
movsl
lea
loopne
iret
sub
jo
je
incl
mov
imul
fs
dec
adc
sbb
fwait
cltd
cli
dec
out
loopne
jl
inc
push
loopne
lock
js
jmp
jae
mov
cmc
inc
int3
cwtl
sub
cmp
in
dec
ret
incl
insl
cmp
pushf
jb
mov
mov
pop
pushf
sbb
mov
rcrl
ja
adc
xor
movsl
out
sub
fists
push
imul
stc
test
mov
cmp
or
int3
cmpsb
pushf
jg
pop
and
cmpsb
cmpb
out
adc
add
sub
xorl
imul
dec
dec
movsb
shr
andb
pushf
cmp
decl
lock
pop
sahf
xorl
mov
lcall
pushl
and
xchg
mov
aad
pop
loop
xchg
aam
imul
outsb
and
xchg
sub
call
mov
pop
push
decl
mov
movsb
test
jl
pop
das
test
call
std
flds
inc
sahf
pop
or
mov
ss
mov
idivb
addr16
lcall
pop
jecxz
shl
push
dec
xchg
inc
lcall
xor
fwait
inc
es
dec
clc
decl
mov
mov
and
or
and
pop
lock
out
jle
cmp
sti
mov
in
into
pop
sti
inc
lret
jae
mov
mov
lea
and
mov
in
cmc
jl
out
and
xchg
adc
incl
jl
jb
sbb
lahf
xchg
mov
pop
in
inc
push
lods
loopne
jmp
iret
imul
pop
xor
cmpsb
sbb
sub
mov
mov
nop
push
dec
and
inc
sbb
insl
inc
xlat
stos
adc
icebp
add
cmp
aad
arpl
or
test
loopne
lds
lds
mov
test
and
lcall
and
enter
mov
decl
cld
push
cmp
dec
pop
fldcw
outsb
repnz
nop
pushf
sbb
fs
lcall
or
aas
lahf
clc
ds
mov
in
into
adc
add
ds
push
dec
lcall
inc
cwtl
mov
jge
icebp
ljmp
push
pop
cli
es
jle
imul
or
lcall
adc
jmp
dec
pusha
test
movb
jnp
ret
imul
push
fsubs
lret
std
cmpsl
decl
xor
scas
fsubrp
mov
cwtl
push
cltd
in
push
shrb
mov
frstor
inc
push
int
push
dec
inc
pop
cltd
pop
hlt
lods
movsl
lret
inc
icebp
cmpsl
lods
lods
xlat
je
ljmp
incl
lods
out
mov
cmp
push
mov
cltd
pop
pop
mov
jno
in
ret
pop
add
sub
out
loop
jle
lods
add
push
sub
outsl
mov
sar
in
cwtl
test
fildll
pop
jecxz
jp
cmp
inc
cmpsl
inc
pop
pop
mov
in
mov
ljmp
cli
fs
in
dec
pop
scas
nop
lea
jae
sbbb
jg
jnp
or
jmp
fnstsw
imul
decl
push
push
int3
ljmp
sub
add
cmp
push
push
sub
int
fs
push
push
cmp
jl
push
movsl
nop
mov
je
test
scas
pop
test
pushl
pop
inc
rcll
cmc
xchg
test
or
xchg
dec
push
movl
mov
jmp
repz
push
aam
ja
dec
mov
cmp
fisubrl
lods
in
test
movsb
and
out
lcall
out
cmpb
in
fidivs
jecxz
xor
or
in
and
fldl2e
adc
ljmp
decb
mov
push
pop
jp
xchg
aad
testb
andb
mov
leave
and
pop
fimull
mov
inc
subl
push
test
inc
outsl
fdivl
push
cmpsb
add
xchg
mov
or
sarb
bound
fwait
and
add
xor
push
sbb
mov
call
loop
mov
rcl
jecxz
pop
pop
shrb
je
push
fiadds
push
xchg
sub
fucomi
out
hlt
mov
out
inc
in
lock
mov
faddp
add
lcall
cmp
push
and
cli
lods
out
xor
imul
xchg
imul
push
xchg
push
push
aad
pop
lcall
jmp
sbb
stos
inc
jae
add
xor
dec
sub
jl
gs
decl
push
jne
arpl
xor
mov
popf
add
cltd
lea
dec
xor
inc
movsb
fdivr
lcall
mov
adc
jge
repz
popf
nop
cmc
xor
inc
out
sub
jecxz
push
pop
adc
adc
incl
scas
popa
push
scas
mov
jp
ljmp
ret
ja
in
in
mov
jmp
into
mov
or
push
cmc
ja
leave
push
hlt
dec
cltd
in
and
popa
ficompl
adc
mov
fst
mov
rol
mov
lcall
adc
inc
test
pop
out
scas
data16
test
ljmp
fisttps
cli
out
cli
call
out
jle
mov
jnp
pushf
push
fsubl
cli
aaa
cmp
and
lcall
mov
mov
in
aam
divb
daa
or
decl
mov
fbstp
sbb
aad
mov
jo
roll
cli
mov
std
pushl
dec
xchg
cmc
into
iret
xor
jecxz
roll
push
inc
cs
adc
xor
sbb
pushl
call
iret
cmp
subb
push
push
pop
mov
daa
mov
adc
sbb
mov
mov
sbb
add
pop
xchg
mov
mov
decl
sbb
push
mov
cli
lds
sahf
movsl
sub
mov
cs
pop
sub
roll
pop
lock
scas
inc
push
and
aas
ds
adc
imul
jbe
insl
icebp
incl
and
and
inc
dec
add
roll
fwait
repnz
les
lcall
loop
xchg
lret
int
mov
les
sahf
imul
cmp
scas
mov
ds
pop
hlt
mov
dec
sbb
cld
mov
pop
sub
sahf
dec
or
sbb
dec
mov
enter
or
push
mov
aad
movsl
popa
push
jle
loope
push
cmc
sbb
lahf
insb
inc
pop
inc
push
push
les
jno
insl
xor
lods
adc
stos
push
cld
lcall
cmp
icebp
adc
sbb
incl
dec
pop
ja
cmpsb
or
sbb
ss
dec
enter
in
movsl
cmc
pop
sbb
ljmp
sub
xor
mov
mov
lret
mov
incl
jecxz
sar
pop
dec
je
jnp
mov
cld
xabort
inc
xchg
hlt
jbe
jmp
dec
mov
incl
and
cli
jle
mov
in
jp
imulb
mov
dec
sub
sub
sbb
mov
xor
xchg
aas
jg
sbb
push
popa
adc
jmp
sbb
mov
xchg
addr16
mov
mov
add
and
lret
mov
cmp
xchg
and
das
inc
sbb
jmp
or
mov
push
mov
inc
imul
cld
ljmp
push
loope
xor
dec
xor
pop
cwtl
fimuls
xchg
outsl
cli
aaa
std
add
push
cmp
loop
int
pop
dec
loopne
ljmp
aad
inc
cmp
sbb
imul
push
cmp
sub
and
cmc
cld
call
jns
lcall
repz
mov
scas
sub
sub
pop
mov
pushl
jae
cmp
ret
mov
mov
out
rorl
adc
jp
cmp
incl
jg
jae
out
outsb
test
gs
lret
push
mov
out
push
movb
cmp
sub
ret
mov
std
std
push
ja
lahf
mov
and
fbld
imul
jbe
inc
jae
pop
inc
pusha
and
pop
cld
call
out
push
cmc
mov
mov
fnstsw
push
icebp
pop
pop
daa
jmp
pop
ja
fwait
sub
sub
subb
and
lret
jne
enter
decl
ja
call
sti
push
add
and
xor
push
pop
or
ja
lcall
scas
out
repz
xor
jbe
add
pusha
xchg
stc
mov
jmp
cmp
ljmp
mov
loope
or
into
xchg
lods
fisttpll
idiv
fists
lds
pop
xchg
pop
gs
mov
pop
dec
out
add
movsb
mov
fstpt
jmp
push
outsl
pop
lods
call
jns
out
adc
or
pop
sbb
insb
das
lcall
out
and
aad
jmp
inc
cld
or
loope
sub
push
aad
xor
aad
and
mov
sti
dec
mov
pop
xor
sub
lea
xor
or
clc
into
xchg
inc
fldt
fnsave
push
sbb
push
jg
aaa
cwtl
dec
ljmp
xor
outsb
imul
call
lcall
push
push
xchg
push
mov
fmul
inc
push
lock
adc
aaa
or
scas
jbe
sub
loope
pushf
outsb
pop
fmull
insl
ss
dec
dec
lcall
das
aad
and
pushl
fstpt
push
mov
das
ljmp
mov
fisttps
stc
adc
jge
out
push
cs
lock
mov
jb
iret
ljmp
dec
shl
mov
cmpl
mov
pop
pop
jo
sbb
cmpsb
cmp
push
xor
jg
lea
push
cmpsb
dec
sbb
mov
popa
sbb
dec
jle
popf
pop
and
pushl
dec
insl
and
lods
bound
and
mov
psrad
mov
xchg
mov
adc
jg
call
fmuls
mov
xor
dec
mov
push
mov
dec
clc
fdivrl
mov
jmp
sub
pop
rclb
pop
push
add
mov
js
jbe
xchg
insb
cmp
ljmp
cwtl
jbe
jns
dec
mov
push
add
ss
dec
jge
jne
xlat
push
pop
inc
ljmp
in
aas
mov
and
daa
xor
jb
and
mov
cli
test
call
xor
sub
xor
pushaw
mov
aaa
in
jle
test
inc
cmp
or
inc
in
decl
jmp
outsl
jecxz
xchg
fildl
add
mov
jmp
dec
jnp
in
iret
mov
orl
insb
xor
mov
mov
imul
sbb
clc
and
mov
cmp
mov
mov
jo
sbbl
mov
mov
inc
repnz
out
cli
ljmp
mov
inc
sub
std
outsb
jbe
pusha
aam
push
fdivr
mov
decl
push
nop
fs
mov
jp
jb
lea
fisubrl
call
jp
dec
jle
pop
fcoml
or
cmpsl
cwtl
cld
xchg
mov
xchg
mov
dec
movsb
incl
hlt
loopne
cwtl
aas
xchg
cmp
hlt
fs
push
sbb
mov
icebp
loopne
neg
mov
jecxz
jae
aaa
ljmp
js
and
sub
sbb
js
and
sarl
incl
fcoms
add
sbb
sbb
data16
and
mov
in
das
mov
sbb
sub
shl
mov
dec
shll
lock
jle
push
adc
ret
roll
int3
push
sbb
jl
mov
adc
inc
mov
fildll
pop
pop
int
jge
add
in
pop
hlt
in
lds
ljmp
jle
mov
add
jne
out
sbb
adc
mov
lcall
jecxz
xchg
push
loop
insl
mov
sti
nop
inc
rcl
dec
aam
fwait
cmp
call
mov
fs
dec
jmp
fucomp
movsb
or
push
fwait
test
incl
outsb
bnd
pop
fwait
adc
dec
dec
mov
and
out
push
xchg
adc
movsl
jle
lret
dec
int
imul
cwtl
jecxz
cltd
xor
xchg
add
adc
fs
lcall
fs
inc
lcall
sbb
std
subb
shrb
and
pop
mov
fwait
cmpb
popa
loope
into
call
or
mov
repnz
lds
ss
outsl
decl
cmpsb
xor
jg
cmp
ja
sbb
movsb
xchg
lock
inc
mov
int
lcall
shr
cld
gs
fildl
pop
mov
cld
lea
mov
sbb
mov
cmpsl
and
loop
out
or
or
iret
mov
push
mov
inc
xchg
cld
mov
std
test
imulb
pop
jg
mov
inc
movsb
ret
pop
js
jno
cmpsl
sbb
imul
ret
addr16
pop
xchg
jb
cs
mov
xor
push
fwait
inc
cltd
adc
adc
sub
add
movsb
pop
pop
in
mov
jp
pushf
in
call
std
out
xchg
adc
inc
xor
push
push
jb
adc
or
popa
pop
hlt
dec
jge
ljmp
repz
dec
cs
ret
inc
push
sbb
movsl
pop
ss
pop
outsb
outsb
jmp
dec
jle
xchg
aam
push
push
lret
push
adc
repz
jnp
repz
cmp
pop
push
lahf
or
int3
xor
push
jb
xor
das
jno
xchg
ret
push
icebp
fistpll
repz
dec
clc
sbb
jmp
mov
xchg
js
push
and
in
shlb
insb
ret
movsb
sar
xor
call
sbb
es
test
fwait
adc
ja
mov
dec
xchg
mov
jmp
push
fsubl
test
push
arpl
aaa
fnsave
lods
mov
sbb
mov
cmpsl
inc
out
int
jg
incl
jns
and
fbld
pop
cmp
adc
and
incl
mov
mov
popa
adc
ja
out
cmpsl
mov
inc
nop
sbb
dec
sub
scas
aas
jo
adc
call
push
push
rcrb
sub
shr
pop
subl
cld
ljmp
add
imul
rorb
nop
sbbl
mov
lcall
sub
aas
out
aas
add
adc
adc
jmp
jmp
push
cmpl
ljmp
fs
je
lcall
sbb
fs
pop
push
push
or
add
mov
xchg
repnz
or
in
adc
mov
test
insb
xchg
es
decl
push
test
pop
inc
xchg
pusha
mov
mov
inc
pop
ficoms
lret
lcall
jae
test
xchg
sub
jo
push
cmpsb
fiaddl
inc
fldenv
cmp
mov
mov
mov
sub
jmp
cwtl
mov
cmp
push
in
xchg
jb
adcb
push
divb
clc
call
xchg
xchg
cmpsl
fs
out
out
mov
pushl
xor
imul
repz
push
adc
cltd
jg
mov
sub
jmp
xlat
inc
or
xchg
xchg
or
std
push
cmp
loop
int3
pop
mov
push
push
fstl
clc
xchg
aam
mov
lcall
les
mov
and
pop
in
jb
mov
rclb
adc
mul
inc
and
or
sbb
fdiv
ds
lds
ss
cmp
inc
test
sub
loope
insb
jo
jno
mov
jg
pop
mov
inc
cmpb
xchg
mov
sti
fiadds
pushl
jmp
cwtl
ss
adc
xchg
jnp
inc
out
pop
add
cli
fisubs
stos
and
ljmp
mov
pop
int
xor
cmpsl
movsl
xlat
and
enter
mov
incl
out
shr
inc
jne
dec
fiaddl
imul
lcall
ficomps
andb
xbegin
sbb
lret
stos
cltd
or
push
out
lcall
arpl
and
or
push
cmc
stc
test
das
cmp
mov
push
sbb
mov
jg
jmp
imul
inc
jno
adc
xchg
or
dec
test
xor
clc
ja
push
outsl
mov
cmp
divb
pushl
lret
xchg
or
or
dec
jp
inc
out
andl
aas
jp
mov
fcomip
add
inc
out
lods
mov
pop
lret
mov
ja
inc
jno
jmp
sub
lahf
pusha
dec
outsl
or
inc
jl
imul
call
xor
popa
add
sub
cli
push
movsl
cmpsl
mov
andb
pop
pop
xchg
add
mov
pushl
loop
and
lock
jbe
ljmp
pop
mov
popf
aaa
out
call
mov
sbb
call
dec
filds
ljmp
push
cmpsl
rcrb
cmp
nop
mov
call
test
movsb
jmp
std
outsb
fs
mov
movsb
ret
dec
jb
jl
pop
pop
int
cmp
ret
push
mov
push
push
int3
sbb
sbb
out
out
shlb
ficompl
sub
ss
pop
mov
imul
ljmp
movb
push
push
mov
inc
sub
fcomip
jmp
das
out
and
sub
fcomi
enter
pop
ljmp
pushl
fildl
sbb
sub
stc
stos
mov
dec
or
into
mov
jg
insb
mov
fidivl
xor
jecxz
cmp
fistpl
mov
dec
test
or
adc
sbb
movsb
test
mov
and
dec
mov
jp
push
add
and
xchg
test
lcall
mov
hlt
push
mov
aaa
lahf
sub
jmp
movsl
mov
call
ljmp
xchg
sub
dec
in
je
push
mov
cmp
into
dec
and
sar
decl
js
cmp
cli
scas
and
pop
jne
jbe
int
lret
bound
incl
sbb
xchg
xor
xor
loope
xor
lds
dec
push
int3
lock
ljmp
imul
in
lcall
clc
mov
and
sbb
call
xchg
ret
inc
bound
daa
xchg
hlt
mov
cmp
mov
pop
std
daa
pop
add
mov
jmp
jl
mov
adc
lret
shlb
mov
push
pop
xchg
adc
adc
jg
popa
std
add
daa
imul
sbb
mov
dec
mov
leave
inc
mov
fwait
jmp
pop
mov
test
cs
inc
dec
xchg
in
mov
out
cmpsb
adc
js
push
fsubl
xor
aad
xor
jbe
push
sarl
jg
incl
sub
jp
xor
mov
cmpl
lcall
les
aaa
cmpsb
inc
mov
push
push
cmpb
jge
mov
gs
cld
sbb
ljmp
popa
loopne
cmpsb
enter
pop
jae
adcb
dec
sub
pop
jle
xor
imul
decl
cs
divl
jnp
mov
xor
out
test
adc
mov
sub
clc
ljmp
pop
pop
outsl
adc
add
mov
mov
roll
in
push
movsb
ljmp
pusha
aad
test
jecxz
aaa
jecxz
hlt
sarl
xor
cmp
das
test
insb
scas
cmp
xchg
ds
sbb
repz
sub
andb
sbb
cmc
repnz
cmc
sub
lcall
pop
sbb
jecxz
pop
xor
xchg
sbb
ljmp
arpl
in
pop
add
jp
sarl
sbb
dec
jns
pop
scas
movsl
and
add
call
insl
xchg
loope
daa
mull
lcall
mov
aam
imul
mov
and
jmp
jg
scas
ljmp
stos
mov
mov
int
popf
push
fnsave
pushf
sub
in
ljmp
push
imul
mov
mov
lods
cltd
fwait
ljmp
push
ljmp
les
jb
in
cwtl
push
pop
mov
xchg
rcl
test
int3
insl
cmp
dec
add
pop
xor
daa
incl
and
dec
sub
inc
and
inc
lods
sti
sti
cltd
jb
stc
cltd
pop
pushf
sub
xchg
insl
mov
fimull
cmp
fildl
clc
cwtl
and
pop
inc
and
cmp
enter
xlat
or
dec
negb
jg
pop
or
xor
rcr
cmpsb
dec
cmp
or
xor
and
adc
aas
mov
cwtl
sub
and
icebp
xchg
adc
movsb
inc
xchg
mov
jae
inc
negb
pop
mov
lahf
sub
mov
pop
xchg
fists
push
jmp
mov
cmp
test
push
adc
inc
sbb
test
mov
test
pop
sub
sbb
stc
in
and
in
jg
stos
jmp
lret
pusha
dec
inc
lret
fsubrp
mov
push
push
mov
lock
mov
push
cwtl
cmp
inc
ficompl
out
hlt
fcomip
adc
stc
sahf
cmp
mov
sub
push
add
lret
inc
es
adc
pop
ror
insb
enter
inc
xchg
mov
push
adc
roll
mov
sub
gs
mov
cmpsb
scas
std
imul
jp
push
aas
push
push
lcall
jge
in
out
jae
icebp
dec
in
push
repnz
inc
xchg
incl
push
cmp
push
lods
cmc
mov
cli
lock
aaa
jp
aas
aam
mov
lcall
out
jnp
inc
roll
movsb
sbb
repz
mov
test
sti
pop
fsubr
shl
jne
adc
lds
pop
leave
call
fadd
mov
loopne
pushl
js
leave
loop
cmpsb
dec
fisubrs
andl
cmpsb
shll
das
fidivs
add
pop
push
pop
jmp
outsb
lret
dec
inc
mov
mov
push
inc
jl
cmp
xchg
or
in
sar
xchg
es
xchg
mov
mov
mov
mov
inc
ljmp
sub
add
mov
mov
sbb
sub
inc
lcall
pusha
mov
lcall
loop
dec
js
jo
xor
push
sbb
cmpsb
jge
fmuls
lods
std
mov
jmp
mov
cli
leave
rcl
cs
jnp
ljmp
fistps
lret
mul
popa
ljmp
sbb
add
adc
lret
push
arpl
mov
in
adc
mov
ret
aaa
pop
mov
stos
fdivrl
outsb
adc
dec
dec
movsb
cltd
pop
inc
xchg
loope
adcb
repnz
sets
call
notl
dec
pop
loop
ljmp
push
pop
int3
sub
cmp
in
into
cmp
pushl
dec
fisttps
icebp
ss
imul
adc
ffree
ljmp
loop
fdivr
mov
and
test
subl
xor
ret
xchg
or
push
jne
pop
ljmp
mov
ret
jae
jno
sbb
xor
in
mov
mov
clc
jmp
lcall
add
xchg
xor
xlat
jge
lret
leave
adc
fs
fisubrs
xchg
add
orb
popa
or
fdiv
pushf
cmp
mov
or
sti
push
push
or
pop
outsb
ljmp
ljmp
arpl
out
ljmp
push
rcr
inc
sbb
ljmp
clc
add
pop
xchg
rorl
loope
cmp
rolb
fwait
rorl
in
jae
icebp
pop
lock
ss
int
test
xor
pop
fimull
push
lock
pushl
xchg
adc
jbe
dec
stos
pop
je
out
mov
outsb
in
outsl
call
ljmp
stc
fidivl
inc
mov
pop
sbb
mov
loope
loopne
lds
inc
xor
outsl
fmull
and
mov
loope
jnp
jns
cmp
popf
pop
or
incl
adc
data16
jp
inc
push
adc
push
or
outsl
sar
fnstcw
mov
jg
xchg
cli
stos
pop
sarb
dec
adc
pop
rolb
loopne
pmaddwd
nop
adc
add
out
xorb
sbb
mov
xor
lods
notl
test
pusha
decl
mov
fimull
sbb
mov
add
sub
lods
les
pushl
and
push
roll
mov
and
sub
hlt
lret
sbb
mov
ljmp
jle
xor
loope
ja
xor
ljmp
cmp
pop
pop
jg
clc
mov
pushf
roll
cmp
or
or
jg
nop
fbld
jecxz
cmpsb
paddb
ret
stos
imul
dec
jl
mov
mov
lcall
adc
call
out
loop
movsb
iret
jo
jg
aam
or
sub
sbb
or
lock
pop
inc
pushl
and
cmp
xor
jnp
mov
xor
js
mov
jmp
incl
sub
mov
mov
add
sbb
pop
pop
hlt
mov
ljmp
nop
push
inc
cmpsb
daa
rcrb
mov
mov
cwtl
lret
jle
sub
jb
cmp
mov
mov
out
cmp
xchg
mov
cmp
repnz
push
sbb
jbe
incl
adc
ror
sub
js
test
stos
inc
lods
out
mov
pop
pusha
es
fisubs
arpl
es
sub
xchg
lds
es
lcall
pop
cmp
sahf
je
outsl
lcall
and
iret
pop
adc
nop
decl
push
and
jb
insl
lds
cmpsl
mov
add
inc
cmp
lods
loopne
imul
mov
sti
nop
ret
nop
fwait
nop
jnp
push
fcomip
icebp
pop
ja
cli
in
mov
idivb
sbb
cmpl
cmp
cs
jmp
bound
adc
lcall
gs
or
pop
jbe
adc
decl
mov
sub
inc
jle
add
enter
xor
fiadds
jmp
mov
fs
aad
push
mov
fs
sub
dec
mov
mov
sub
mov
xor
cmpsl
push
cli
fisubs
sbb
jl
fbld
or
outsb
insb
jge
pusha
leave
or
mov
loope
push
cwtl
adcl
mov
sub
lret
add
inc
adc
xchg
popf
and
es
leave
push
jnp
push
adc
mov
or
call
mov
insl
xchg
dec
sti
hlt
cmp
nop
pop
lcall
incl
pop
das
shrl
push
mov
push
sbb
mov
dec
push
pushl
push
pushf
xor
repz
test
sub
mov
ret
gs
addl
sub
pop
lock
mov
fimull
cmpsb
imul
dec
popa
sbb
ljmp
pop
sahf
adc
sub
adc
jns
xor
daa
enter
repz
lcall
lret
dec
cmp
das
push
lcall
push
add
mov
xor
dec
mov
adc
push
stos
adc
fnstcw
jg
sub
mov
pop
dec
sub
lods
dec
jecxz
cmpsl
lock
push
imul
shlb
fistl
pop
stos
test
xor
cld
pusha
sub
dec
cld
xchg
popa
mov
nop
pop
scas
and
imul
mov
decl
stc
and
mov
and
sti
lds
scas
cli
int
jnp
cmc
dec
lcall
incl
xor
sbb
xor
mov
loop
xor
adc
or
jmp
push
into
in
cmp
mov
pop
cmp
mov
pop
xchg
xchg
mov
sbb
decl
adc
xchg
rclb
adc
out
dec
dec
sar
mov
call
jo
xchg
or
mov
mov
rolb
sub
icebp
jle
cmp
xor
faddl
insb
dec
ja
test
lret
outsb
fldl
stos
mov
gs
decl
ss
xor
les
fs
xchg
or
int
imul
loope
pop
adc
inc
adcb
imul
mov
xchg
pop
and
add
in
shl
sub
add
mov
add
sti
xchg
mov
test
int3
xor
push
push
mov
mov
rclb
jbe
and
and
repz
xor
push
push
movsb
jb
and
jmp
in
nop
lret
fidivrs
push
popf
lods
sbb
loope
mov
pop
add
mov
cmpsl
into
jnp
xchg
and
add
ljmp
adc
xorb
mov
std
xor
or
bound
jnp
call
scas
and
js
enter
jp
cmp
add
insb
nop
jge
cmp
adc
xchg
or
stc
loop
call
mov
mov
sbb
xor
or
in
imul
or
std
incl
and
daa
test
jmp
adc
add
call
dec
mov
push
jo
fdivrl
cmpsl
roll
nop
shrl
fsubp
mov
call
or
or
imull
inc
mov
mov
push
xchg
dec
out
pushf
mov
outsb
and
out
cld
stos
adc
repnz
pop
pop
mov
adc
dec
test
les
daa
lcall
ljmp
pop
cmp
xor
fcmove
dec
pop
out
xchg
jle
sbb
mov
fcomip
nop
cmpsb
pushf
sub
jle
xchg
cmp
arpl
lret
stos
dec
inc
push
cmp
push
xchg
popa
pop
ret
cs
cmp
pushl
jmp
or
push
sarl
aaa
pop
cltd
insb
lods
in
jns
stos
pop
aad
inc
call
cs
add
jmp
push
jge
lcall
icebp
daa
popf
mov
pop
out
jo
mov
mov
cmp
iret
test
std
out
clc
ljmp
or
mov
inc
xchg
fisubs
xchg
shr
into
xor
pop
daa
fwait
jg
sub
pop
jge
bound
clc
and
aad
loop
loopne
jmp
das
sti
mov
mov
movsb
adc
and
hlt
jge
enter
stc
das
adc
adc
sub
jg
movsb
aas
repz
xor
lods
mov
mov
loopnew
cmpb
pop
mov
out
or
mov
mov
or
fstpt
mov
ljmp
or
cmc
pop
and
xchg
mov
pop
sbbb
aas
sarl
xchg
lds
out
mov
out
clc
das
fisubrl
std
aad
pop
cmpsb
and
sub
test
rorl
incl
negl
mov
movsl
mov
scas
adc
add
or
js
jmp
fstpl
xchg
mov
in
rcr
sar
jne
ljmp
inc
jmp
fwait
ljmp
xor
outsb
xlat
dec
xchg
pop
nop
cmp
mov
out
xlat
cmp
sbb
loopne
decl
add
dec
cmpsl
fstpl
cmp
xchg
inc
dec
xor
xor
or
mov
mul
or
incl
jo
push
add
mov
mov
imul
rolb
xlat
jg
negb
lret
call
fidivl
inc
popf
and
into
mov
or
xor
or
into
gs
leave
loopne
lock
pushl
push
cwtl
rcll
cmpsb
andb
pusha
and
outsb
adc
xchg
xchg
iret
sub
call
js
jo
dec
xchg
hlt
int3
adc
xchg
cmpsl
iret
inc
ljmp
and
sar
adc
and
jge
aaa
jns
popf
inc
and
mov
cmp
adc
mov
jl
ret
nop
aam
stc
mov
lea
outsb
pop
jmp
mov
enter
fists
mov
push
xor
clc
scas
cmp
mov
pop
data16
xchg
rcrl
jbe
and
aad
cmp
xchg
add
loope
loopne
decl
bound
sbb
jno
test
cwtl
xchg
add
stc
imul
ficoml
lcall
push
push
pop
in
or
imul
mov
mov
movsb
stos
into
mov
decl
and
sub
mov
in
adc
push
in
pop
fnsave
jg
dec
mov
mov
pushf
inc
jbe
mov
inc
jno
imul
push
popf
sahf
jmp
push
jg
cmpsl
in
and
sbb
repz
andl
int3
mov
push
jno
sbb
inc
cmc
pop
mov
mov
cmp
mov
addl
aad
ds
mov
or
xor
aam
das
cmc
enter
add
push
jae
lock
test
inc
out
sarb
lcall
or
xlat
stos
inc
lret
insl
int
xor
cmpsl
adc
dec
mov
leave
jmp
imul
out
push
ljmp
sub
decl
lds
jle
push
xor
push
inc
imul
push
sub
mov
sbb
or
mov
test
int3
ret
cmp
movsl
adc
cmp
popf
and
fsubrl
mov
test
ja
ljmp
push
sahf
ds
jecxz
sub
sbb
fisttps
xor
mov
stc
cmp
mov
xchg
ja
test
out
xor
lea
cld
int3
lret
pop
jecxz
xlat
pop
lcall
outsb
mov
xchg
xor
mov
jl
cmpsb
push
pop
out
cwtl
fdivl
daa
decl
pop
or
nop
test
pop
aam
dec
sub
push
adc
mov
inc
int3
hlt
jmp
xchg
dec
and
addb
push
dec
hlt
loopne
inc
fwait
insb
lahf
mov
incl
mov
jg
addr16
aaa
shrb
ljmp
out
out
or
js
xchg
arpl
stos
movsl
loopne
sbb
scas
insl
xor
cs
mov
jmp
jecxz
mov
in
pushf
adc
pop
xchg
mov
stc
sub
pcmpgtd
call
fcomip
jmp
popf
arpl
sub
negl
jle
fsts
xor
add
jmp
fs
push
and
cmp
out
mov
adc
or
fdivr
pop
shl
jmp
mov
out
lahf
fnstsw
push
and
fcoms
popf
mov
mov
jge
gs
iret
add
cltd
push
dec
into
repz
dec
and
and
js
push
mov
cmp
call
sub
mov
ret
cmp
ret
test
adc
adc
lcall
loopne
aaa
fxtract
mov
and
repz
cltd
mov
mov
cld
incl
sbb
pop
and
cmc
nop
mov
outsl
and
xchg
mov
pop
pop
adc
mov
mov
jmp
ss
call
sarl
xchg
add
push
mov
inc
lret
call
mov
test
pop
mov
outsl
mov
adc
aad
pop
xchg
test
decl
in
mov
pop
roll
stos
jb
jae
test
mov
dec
push
sbb
call
ljmp
lods
dec
mov
mov
xlat
dec
das
xlat
xchg
dec
dec
pop
inc
xchg
icebp
daa
test
add
sbb
ljmp
mov
inc
lcall
int3
sbb
pop
push
cs
xchg
adc
dec
scas
sub
mov
es
mov
std
popl
mov
outsl
outsl
push
xorl
inc
ud0
test
jne
and
cmpsb
hlt
xchg
or
loopne
mov
mov
lea
sbb
repz
mov
inc
mov
in
sti
gs
std
outsl
cmp
sbb
push
loop
pushf
inc
jns
dec
sahf
shrd
xor
xchg
outsl
fisttps
jmp
and
fcoms
push
and
pop
or
mov
jmp
adc
int3
loopne
dec
sbb
adc
mov
add
dec
jnp
pop
aam
aam
jg
xadd
pop
adc
and
fidivrl
or
jmp
pop
dec
mov
sbb
fildl
cwtl
dec
sbb
push
popf
jno
lcall
adc
stos
sti
mov
in
mov
xor
xor
imul
dec
sub
mov
test
cmp
pop
push
outsl
fwait
sub
push
out
and
add
adc
clc
sbb
xchg
andl
jmp
inc
scas
xor
pusha
shlb
mov
sbb
arpl
cld
lods
cmp
popf
lcall
cwtl
dec
mov
or
dec
fcmovne
fldcw
push
pushl
sub
jmp
ja
jbe
pop
or
test
test
int3
mov
imul
rcl
lea
incl
mov
inc
lret
pop
xchg
jnp
fsubrp
rcrl
xor
pop
fdiv
add
call
inc
mov
fists
push
lahf
bound
sti
sub
test
push
push
ss
mov
pusha
pop
mov
jmp
xor
inc
hlt
pop
push
out
je
bound
dec
xor
insl
sub
call
xor
adc
jne
jl
fwait
xchg
in
mov
xchg
rolb
int
incl
cwtl
loop
add
sbb
cmc
sbb
int3
push
sbb
rcr
decl
mov
test
ja
sub
dec
jp
iret
mov
test
mov
pop
sub
dec
cmc
cltd
mov
scas
mov
and
je
mov
mov
and
and
loopne
outsl
push
mov
cmp
rclb
cmp
decl
sbb
inc
jmp
add
or
repz
cmp
scas
cmp
adc
repnz
xchg
sub
adc
out
test
ljmp
ror
dec
mov
lea
dec
xchg
sbb
add
bound
cltd
jg
test
pop
sbb
xchg
ret
and
mov
fwait
adcb
jecxz
mov
das
lea
leave
xchg
int3
or
iret
push
js
sbb
jns
push
push
inc
int3
jns
out
punpckhwd
out
cmp
sbb
dec
dec
fs
popf
movsl
imul
incl
sub
and
mov
lret
les
subb
sub
push
enter
imul
and
cli
call
data16
cmp
es
decl
xchg
cs
dec
in
sub
sbb
repz
loop
jne
lcall
cmp
ljmp
or
aad
mov
cltd
ljmp
mov
jp
push
fcomp
fwait
push
sbb
pop
addl
mov
filds
cwtl
cmp
sarb
add
js
mov
ds
lcall
lea
mov
add
sub
jg
decl
mov
sarb
mov
testb
icebp
lahf
push
test
fsubrs
test
sub
stos
pop
mov
jo
sub
mov
inc
or
xchg
call
sti
pushf
pop
mov
mov
push
lock
int3
dec
xchg
xor
inc
scas
add
std
decl
pop
inc
sub
jle
stos
imul
std
sub
test
push
icebp
and
jle
sub
or
mov
stos
cmp
or
loopne
rclb
in
jbe
xchg
sbbl
ss
mov
add
lret
xor
sub
hlt
stc
inc
add
mov
jmp
adc
sub
cli
cltd
adc
or
inc
mov
incl
loopne,pn
pop
cmp
aaa
or
pushf
xchg
sbbb
mov
cmp
mov
jecxz
xchg
xor
inc
dec
pop
fmul
lcall
cmp
ljmp
sbb
and
inc
inc
inc
mov
lock
decl
mov
fildll
jge
inc
mov
repnz
jno
dec
mov
in
decl
fcomip
in
mov
fcoms
gs
push
jae
and
ljmp
leave
lcall
mov
cmp
addr16
dec
packuswb
ss
sub
push
loopne
cmp
rcrb
xchg
repz
daa
mov
push
sbb
enter
daa
outsl
jne
outsl
xor
jmp
xchg
mov
popa
adc
jmp
xchg
std
push
mov
rcll
fucomi
test
call
in
cmp
push
adc
test
push
sarb
jmp
stos
nop
addr16
and
std
jno
call
shll
mov
mov
mov
js
pushf
es
xchg
lcall
test
mov
xlat
addr16
imul
cmp
jg
push
pop
cmpsb
loope
imul
nop
xchg
stos
xchg
imul
lret
out
add
sub
mov
int3
je
enter
dec
push
adc
push
test
call
dec
or
movb
jmp
shrb
js
cmp
loop
ret
lock
push
mov
icebp
pop
xor
dec
cmc
loop
in
push
push
xorb
daa
andl
jnp
push
nop
repz
loopne
jne
ljmp
clc
int
cli
fwait
pusha
inc
adc
push
or
or
or
xor
fimuls
mov
into
pop
xor
mov
jb
out
shlb
cmp
mov
icebp
dec
call
push
add
subb
or
adc
lea
push
movsb
push
nop
push
fnstenv
push
lcall
mov
mov
push
dec
xchg
push
sbb
loopne
loop
or
fs
adc
aaa
pushf
push
cmp
mov
aam
incl
sbb
jmp
xor
xlat
jnp
mov
inc
out
cmpsl
sahf
icebp
xor
shrb
mov
rcr
daa
daa
and
aaa
icebp
jb
jecxz
mov
fstl
call
stc
dec
sbb
or
lcall
int3
dec
cmp
xchg
mov
push
arpl
lcall
dec
xchg
mov
add
ljmp
into
push
fisubl
lea
mov
test
dec
stos
xchg
mov
out
jg
sub
push
cld
mov
dec
rol
mov
shll
shlb
cli
cli
scas
sub
inc
mov
mov
leave
sbb
sar
ljmp
mov
mov
jbe
mov
repz
shr
sub
adc
pushl
cmp
push
cmc
fcmovnb
mov
je
das
hlt
mov
mov
cmp
pop
fsubp
movsb
fiadds
in
subl
lcall
xor
aaa
mov
or
repnz
mov
jmp
sub
and
dec
in
hlt
cs
mov
imul
pop
mov
popf
insl
mov
pop
ss
ljmp
mov
mulb
dec
sti
add
scas
popa
cmpl
adc
out
andl
call
sti
adc
int
push
aam
pushf
ss
aad
gs
push
call
mov
clc
fimull
fimull
sub
dec
in
lcall
rol
ja
stos
ja
pop
imul
add
gs
dec
in
add
sub
ret
cmp
jmp
sub
cltd
inc
sub
mov
es
sub
pushl
loope
sbb
xchg
inc
jne
adc
add
cld
xor
sbb
push
cmp
decl
aam
arpl
loopne
inc
fcoml
or
es
enter
jge
mov
lcall
aam
movsl
adc
pop
sahf
add
aas
and
lcall
leave
aam
push
sub
add
incl
xor
inc
sub
mov
sbb
mov
pop
or
rolb
xor
pushl
cmc
das
and
adc
fistpl
and
cs
sub
cmp
ljmp
into
or
flds
xchg
cmpsl
arpl
jno
imul
call
mov
push
xchg
push
sti
call
pop
lds
cmpsb
outsb
dec
inc
cmc
mov
incl
lret
mov
imul
or
sub
bound
fdivp
jle
xor
mov
pusha
mov
jg
xchg
ja
pop
pop
lea
sti
cmp
inc
pop
mov
mov
std
in
scas
pop
std
jg
js
sahf
in
ret
pop
sbb
xchg
shrl
scas
popf
add
pushl
test
pushf
rcr
les
sbb
cmpsl
xlat
aad
stos
out
mov
ljmp
lock
inc
push
adc
xor
leave
cmpsl
ret
adc
inc
mov
xchg
movsb
add
push
call
xchg
or
ja
cs
mov
iret
imul
mov
cmp
call
mul
js
adc
sub
fldl2t
repz
mov
incl
xlat
cmc
enter
scas
xchg
mov
pop
mov
test
xchg
ljmp
sar
adc
enter
cmc
and
xor
test
hlt
pop
loopne
je
mov
cmp
mov
or
mov
push
mov
lcall
jle
jae
xchg
mov
adc
mov
ljmp
mov
loopne
outsl
cli
ds
cli
mov
jmp
cmp
lds
std
clc
jns
mov
out
pusha
mov
and
inc
sub
pushf
lret
pop
outsb
pop
fadds
mov
jecxz
mov
pop
fsubrs
add
mov
call
ret
test
mov
lods
ds
dec
xchg
loopne
dec
adc
sbb
ljmp
jne
lahf
fidivrs
sbb
cmp
call
gs
jmp
mov
negb
pop
xchg
fsubl
push
jecxz
mov
insb
mov
loopne
lcall
jae
push
andb
cmp
daa
cmp
sbb
jecxz
or
rcll
push
and
pop
in
jb
mov
in
push
cmp
pusha
mov
pusha
into
in
mov
pushl
aad
in
test
pop
mov
fisttps
incl
sbb
cld
lods
cmp
inc
rol
out
dec
ljmp
mov
in
inc
ljmp
add
shll
xor
mov
push
add
lock
fimull
mov
neg
jnp
mov
adc
add
fisubl
mov
xor
lret
sbb
fdivrs
and
mov
dec
or
sbb
push
les
sbb
repnz
popf
sbb
push
lods
adc
xlat
out
imul
push
lcall
lret
test
cmp
and
add
mov
ss
cwtl
xchg
fcmove
dec
sbb
incl
pop
fimuls
dec
mov
sbb
call
jmp
mov
cmp
xor
mov
pop
inc
movsb
ret
fcmovnb
inc
out
ljmp
mov
mov
dec
pop
push
add
xchg
sbb
jnp
das
out
pop
push
jne
and
jns
outsl
test
mov
cmp
or
pusha
pop
insb
hlt
or
int3
fwait
dec
popa
jne
jns
daa
mov
cltd
aaa
ljmp
push
jge
sti
mov
adc
xor
andl
loop
rorl
add
and
test
mov
icebp
adc
idiv
cwtl
and
inc
mov
pop
test
xlat
pushl
mov
pop
test
push
fidivs
jo
sarb
dec
adc
in
insb
add
push
add
movsl
cmp
fisttpl
loopne
or
imul
incl
stc
cmp
sbb
or
movsl
out
sbb
sti
aam
insb
repz
rol
inc
mov
inc
mov
jg
clc
fs
sub
mov
popf
loop
jp
lock
xchg
inc
insl
inc
ljmp
adc
repz
stos
xchg
pop
push
pushf
idivb
mov
hlt
push
cmpl
mov
mov
sti
add
xchg
clc
xchg
adc
filds
jge
cli
fwait
shlb
cmp
inc
inc
push
or
sbb
pop
mov
movsb
add
sarl
incl
lahf
loopne
repz
or
ret
jge
pushf
fcoms
cmp
dec
jb
imul
mov
mov
inc
adcl
fbld
mov
mulb
or
test
inc
lcall
and
in
mov
inc
lahf
ret
pop
fs
sbb
call
xor
sti
sub
dec
jge
out
dec
pop
in
ljmp
push
sub
sub
jnp
cli
rclb
mov
or
mov
inc
jmp
jb
hlt
cmc
test
repz
fsubrp
js
sarl
icebp
stos
fdivrl
sbb
js
es
adc
adc
movsb
mov
xor
mov
jo
mov
pop
iret
cmc
lcall
mov
pop
mov
sub
lods
lods
jl
mov
iret
int3
jecxz
or
inc
pushl
or
in
out
mov
cmpsb
add
in
shll
adc
cmp
mov
mov
stos
addr16
cmc
lahf
sbb
and
xchg
loope
es
sub
fcomip
dec
rcrl
sub
fmul
add
add
jmp
mov
hlt
jmp
or
mov
not
sub
in
inc
mov
clc
fdivs
dec
fistl
lcall
mov
cmpsl
dec
lret
movsb
pop
inc
ljmp
push
jne
cld
inc
out
loop
or
daa
mov
cli
lret
pushf
add
add
ljmp
cmp
stos
repnz
mov
or
jae
dec
push
mov
out
xchg
cltd
xchg
cmp
fdivrl
int
sti
xor
dec
stc
adc
cmp
repnz
ds
dec
mov
mul
push
fsubrl
stos
clc
jl
stos
cld
sti
sarl
mov
ljmp
ja
iret
mov
adcb
mov
mov
fisubs
pusha
lcall
xor
enter
inc
paddsw
aad
add
and
jnp
push
jns
mov
sub
fwait
out
cltd
arpl
mov
pusha
aas
and
adc
pushl
mov
sub
push
arpl
clc
jle
add
loop
mov
jecxz
pop
lret
mov
dec
cmp
sbb
fsub
lods
sbb
call
repnz
daa
and
clc
decl
cmp
push
test
test
fs
daa
in
jae
jmp
mov
pop
xchg
ljmp
iret
lcall
aam
in
pop
push
ret
fdivr
das
es
jo
es
decl
outsl
mov
data16
sbb
ss
fadds
jae
andl
pop
and
into
jg
xchg
jnp
or
int3
test
pop
cld
lcall
xchg
out
inc
push
inc
or
push
ffree
dec
jmp
sbb
outsb
push
cwtl
inc
addr16
fiadds
jbe
cmp
sbb
test
push
loopne
adc
sub
stc
mov
out
cli
decl
call
into
mov
shlb
movsb
push
add
int
std
fists
div
push
jp
mov
xorl
insl
xchg
daa
out
ljmp
and
iret
xor
fwait
mov
jb
sbb
jmp
add
push
and
xchg
testl
sub
xor
mov
scas
push
mov
or
repnz
dec
ljmp
aad
popa
and
std
rorl
xor
popf
insl
lahf
sub
ds
fdivrp
push
jl
je
aam
cli
and
push
jns
mov
mov
rorb
imul
mov
ret
aad
movsb
sbb
or
movsl
adc
mov
test
pusha
cmp
fwait
pop
add
mov
insl
jmp
xor
call
popa
pop
nop
add
nop
mov
out
decl
mov
sti
je
and
ljmp
inc
loope
add
popa
jl
xlat
jg
je
decl
or
cmp
ja
test
mov
ljmp
leave
and
jne
dec
incb
xchg
jbe
aad
in
mov
dec
push
test
out
cs
out
and
cmpxchg
lds
mov
out
jnp
adc
xor
jmp
pop
je
dec
movsl
dec
incl
imul
adc
jl
add
cmp
ja
jns
pop
jecxz
dec
out
pop
adc
mov
push
rolb
ljmp
jne
cmpsl
jge
xor
cltd
dec
and
lcall
leave
adcl
in
xlat
inc
jge
popa
mov
cmp
sbb
lods
inc
xor
add
pushl
cmpsl
or
mov
test
fwait
or
loopne
pop
unpcklps
outsl
cli
jmp
jle
test
fimull
out
xchg
adc
mov
pop
idiv
jg
add
rcrb
sub
jp
dec
inc
loope
xor
cli
xor
xchg
test
mov
call
or
scas
jbe
das
outsl
lods
vrcpps
sub
xor
test
je
xor
in
bound
movsl
pop
mov
or
sub
dec
pop
inc
call
push
movsb
and
pop
inc
xor
decl
xchg
jae
xor
daa
lret
and
xchg
jle
lea
cltd
dec
scas
addr16
ljmp
push
fmuls
and
cmpsl
mov
lods
mov
dec
sub
dec
mov
sbb
sar
mov
or
cs
sbb
incl
jne
out
jp
out
cmpb
int
add
jo
fcomip
cltd
outsl
cmp
cld
imul
ja
mov
adc
in
mov
jle
pop
cltd
cmp
nop
push
rcrb
ss
and
lods
out
jl
adc
mov
jmp
ljmp
cli
add
sbb
xorl
push
lret
ss
mov
jmp
push
aad
outsb
jb
aad
cwtl
clc
je
lcall
inc
ss
jnp
cli
in
decl
pop
loope
in
ret
ficoml
add
stos
xchg
pop
jae
in
mov
pop
cmp
incl
xchg
dec
adc
push
push
pop
mov
sbb
jecxz
or
nop
xor
fldpi
push
sahf
nop
jns
dec
mov
rcll
dec
andl
pushf
sub
movsl
mov
sarb
lcall
rolb
cmpb
fs
sub
push
xorb
incl
movsb
mov
cmpsb
dec
imul
mov
inc
rcll
sahf
subl
decl
nop
cld
and
in
jb
inc
out
dec
mov
sbb
mov
mov
add
std
ljmp
pushf
xchg
das
xchg
sub
cmpsb
pop
std
jg
xchg
sub
mov
mull
xor
dec
jb
mov
ljmp
lock
adc
dec
mov
inc
or
adc
test
add
xor
ljmp
cltd
movsl
pop
hlt
and
lret
adc
xchg
movsb
lds
sub
sbb
mov
aaa
sbb
incl
in
std
jbe
ja
dec
cli
mov
ja
mov
push
test
in
dec
jmp
or
push
loopne
xchg
in
mov
cli
and
push
inc
test
pushf
pop
add
ss
rcll
in
mov
mov
mov
cmp
mov
cwtl
scas
mov
movsb
mov
push
rolb
pusha
xchg
and
inc
cmpsb
cmp
mov
cmpsb
aam
mov
ljmp
mov
shll
adc
call
aas
cpuid
and
jns
pop
xchg
jl
jecxz
nop
adc
mov
loope
out
pop
call
ret
in
lea
les
pop
mov
push
sbb
lcall
aaa
ret
shll
push
pop
push
push
fistl
je
inc
imul
test
inc
mov
iret
mov
pushf
fbstp
stos
mov
mov
mov
pushl
stos
adc
pop
hlt
xchg
cmp
ret
or
push
xchg
dec
arpl
shrl
sbb
jg
sbb
jmp
and
mov
mov
fstl
sbb
xchg
pop
cmp
ljmp
pushf
inc
rcll
jb
ficompl
int
faddl
imul
pop
icebp
xor
push
clc
xchg
adc
push
xchg
push
pop
xor
push
xchg
mov
mov
test
pop
hlt
daa
fwait
stos
arpl
mov
enter
das
mov
mov
cld
adc
or
test
dec
xchg
subb
stos
aaa
push
inc
das
jbe
cmc
int
out
push
add
mov
imul
cwtl
cld
ljmp
cltd
sbb
adc
repnz
fbld
pop
mov
shlb
inc
xor
mov
incb
out
jns
sbb
fildl
ljmp
pop
cmc
cwtl
mov
xchg
sub
fwait
lea
mov
fists
push
pop
decl
and
in
add
pop
mov
je
mov
mov
cmp
cld
pop
popf
mov
jmp
jge
movsb
ja
mov
xor
cmovne
xor
stc
mov
mov
pop
lahf
out
rcll
mov
adc
cmp
fbld
loope
lcall
lods
cmp
mov
mov
cltd
push
mov
push
ljmp
mov
loopne
in
mov
loope
outsb
inc
scas
add
psraw
call
pop
mov
jae
mov
aam
pop
lods
int3
or
and
dec
sbb
shrl
mov
js
add
and
pushl
les
jmp
pop
jno
sti
enter
cld
ljmp
inc
or
sub
push
adc
mov
xchg
inc
fcom
mov
lcall
arpl
inc
shlb
sarb
mov
aad
push
xor
std
mov
mov
adc
pop
mov
pushl
popa
fs
scas
ret
cmp
fldt
mov
sub
add
mov
roll
es
ret
xor
in
jl
jne
jle
sbb
and
incl
mov
nop
ljmp
orb
mov
sub
xor
decl
sarl
in
jge
adc
push
cmp
ja
inc
adc
clc
push
repz
cwtl
mov
stos
out
bound
decl
mov
decl
negb
add
js
lock
outsb
enter
sub
fldcw
pusha
sub
popa
in
sub
pop
cli
dec
mov
and
jo
outsl
clc
call
inc
pop
lahf
aaa
xorb
or
popf
pushf
loopne
or
shl
jbe
jno
mov
in
lret
repz
cmp
jmp
popf
cs
pusha
cmpsl
lods
gs
out
das
ret
fstps
call
pop
jnp
outsb
sti
lea
mov
add
sbb
sarl
add
clc
jmp
ljmp
mov
mov
push
ret
repz
pushl
out
pushf
out
sbb
mov
inc
inc
sbb
lods
sar
fwait
jmp
cmp
imul
mov
fwait
test
scas
iret
and
int
jmp
mov
sbb
xchg
jmp
mov
fwait
movb
fisttpl
ljmp
ret
pushw
mov
mov
insl
movsl
pop
loop
push
incl
cmpsl
arpl
mov
call
push
stc
sub
andb
pop
and
xchg
into
dec
sbb
jg
sbb
dec
jp
jne
cmp
aas
dec
gs
pop
je
fdivl
push
adc
cmp
lcall
cmpsl
pop
jno
or
sbb
test
bnd
insb
pop
or
stos
nop
fcom
cmp
popf
stc
push
insb
enter
jo
mov
xor
jmp
aad
sbb
jne
or
mov
std
daa
or
pushl
cld
ljmp
and
cli
roll
ret
stos
cs
xchg
fcos
lcall
rorl
aaa
test
movsl
sti
in
sub
enter
mov
pop
inc
xor
jg
in
mull
push
into
aas
xlat
jbe
or
mov
dec
nop
xchg
in
and
cmp
sar
mov
lcall
ljmp
sbb
divl
dec
lret
js
sbb
push
pop
pop
arpl
mov
xor
push
mov
test
mov
fnstcw
push
xchg
inc
lret
in
fidivs
test
xlat
or
ds
dec
sub
sbb
ljmp
jmp
arpl
or
int
inc
lods
leave
daa
cmp
dec
sbb
loop
fcomip
cmp
adc
dec
cmp
push
push
in
data16
ret
dec
cltd
sbb
fildll
je
push
mov
repz
adc
cmp
mov
mov
fld
imul
pop
jge
in
cmp
pop
inc
adc
pop
push
or
out
das
sub
incl
loop
int3
repnz
js
sub
fidivrl
lock
cmpb
dec
mov
inc
jo
lret
xor
movsb
xor
test
sub
push
insl
outsl
push
push
pop
mov
jmp
push
xor
dec
aas
out
or
dec
and
popa
addr16
andl
jg
mov
addr16
jb
xlat
xor
jg
jo
scas
imul
push
test
cmp
mov
test
scas
mov
out
call
loop
enter
mov
imul
jnp
push
jmp
incl
add
dec
mov
out
scas
inc
sbb
inc
lcall
cmpsb
stos
jp
fxch
imulb
cmovle
pop
ror
add
ja
popf
jge
rol
push
scas
pushl
dec
xorb
or
inc
or
aam
pop
push
mov
jge
lahf
inc
stc
call
enter
cmp
jp
pop
sahf
in
and
cmpsb
minps
pushl
xor
xor
mov
addb
mov
repnz
jmp
push
idivb
gs
adc
icebp
das
push
cmp
push
inc
aas
in
jle
sub
ss
cli
int
clc
push
pushf
add
add
dec
dec
cmp
dec
pop
ret
push
incb
andb
ljmp
lcall
bound
jg
mov
or
pop
cmpsl
or
mov
lods
sub
insb
mov
fisubrs
ljmp
int
sub
jg
shrl
push
lds
add
mull
sahf
jg
stos
fisubrl
cs
lock
push
jecxz
pusha
add
fisttpl
sti
xchg
aas
inc
fbld
push
repnz
andl
lcall
and
inc
aas
adc
stc
jmp
stc
push
shl
jno
cld
pushf
xlat
sbb
add
mov
repnz
call
dec
mov
flds
daa
pop
imul
xchg
out
inc
pusha
mov
cld
call
jmp
push
add
out
mov
mov
jo
test
out
cli
jb
es
cmp
xor
mov
sbb
add
jle
in
lcall
loope
call
orl
pop
sub
jl
push
ljmp
xor
sbb
in
pop
mov
aaa
add
sbbl
addr16
push
pushl
hlt
jg
dec
push
jl
xor
push
loopne
sbbb
movsb
sbb
sub
sbb
dec
addr16
push
jbe
rcrl
xorb
rclb
cltd
les
loop
scas
push
das
cmpsb
xchg
mov
incl
nop
sub
mov
mov
sahf
ret
int3
lock
fstpt
sbb
ljmp
inc
mov
outsl
dec
insl
dec
xchg
fisttpl
insb
insl
sub
fistpl
lcall
lods
or
ljmp
or
inc
scas
push
mov
mov
pop
xchg
xor
push
aam
lahf
lock
mov
fidivrl
loop
int
imul
jae
sub
mov
xchg
lret
clc
push
std
incl
lahf
xor
outsl
and
rorb
add
pop
mov
clc
ljmp
mov
shl
js
jae
sub
push
push
jle
lahf
push
jbe
push
ret
push
daa
push
add
mov
push
push
and
fistpll
cmpsb
dec
jae
stos
push
into
xchg
fisttpll
je
jns
and
jmp
dec
call
mov
push
xchg
leave
int
fsubl
jge
ljmp
or
mov
aad
addl
lret
ja
pusha
push
bndldx
loopew
les
xor
fldl
pop
fwait
inc
sbbl
ljmp
lds
jecxz
push
ds
or
and
or
mov
adc
cmp
outsb
faddl
sbb
ucomiss
sub
lock
mov
and
mov
lcall
xor
in
mov
addr16
jmp
inc
test
int
and
stos
or
enter
inc
out
fdivs
xor
dec
fwait
mov
xchg
xchg
addb
dec
push
cs
add
push
adc
or
loopne
cmpb
stos
sbb
adc
sar
adc
inc
ljmp
outsl
jae
data16
sub
mov
push
pop
sbb
dec
inc
out
inc
nop
call
mov
fcomps
ss
sub
pushf
adc
test
sub
mov
incl
out
rorl
fwait
inc
leave
into
aaa
pusha
lea
xor
movsl
xchg
ds
adc
popa
fcmove
mov
push
lock
out
pop
add
in
iret
xchg
aad
daa
mov
jg
sbb
test
scas
mov
ret
mov
lcall
cltd
cmp
mov
mov
or
fwait
cmc
mov
xchg
xor
adcl
sbb
mov
stos
test
clc
ja
push
cmpsb
sub
jl
rcrl
ljmp
aam
push
fstps
jge
es
push
mov
rclb
gs
jmp
mov
dec
les
pop
cwtl
pushl
loopne
mov
icebp
mov
shlb
stos
pop
jecxz
xchg
add
mov
lods
mov
repz
rorb
sahf
mov
stos
push
xchg
xchg
loopne
jmp
mov
pop
test
shlb
jg
inc
dec
add
sbb
je
fnstsw
test
mov
aad
pop
push
leave
pushl
es
lods
icebp
or
pushf
lea
js
xchg
ret
add
xchg
or
ss
mov
cld
jmp
xor
mov
push
pop
sbb
mov
mov
sbb
ljmp
pop
js
xchg
arpl
and
jle
out
or
pop
sub
adc
lcall
pop
mov
clc
stos
call
jnp
sub
lahf
imul
js
xor
aad
fcomip
decl
js
je
inc
lcall
js
add
ljmp
add
call
xor
nop
xor
and
mov
shrb
shlb
jmp
sbb
adc
call
xchg
arpl
xor
int3
sbb
xor
pop
lcall
pop
cli
test
inc
aaa
lret
fwait
dec
adc
movsl
cli
cmp
ficomps
jae
pop
pushf
adc
ja
jmp
sub
sahf
ds
jae
push
and
fdivrp
decl
aad
mov
jnp
sbb
xor
cmp
jp
xor
imul
inc
mov
jmp
fwait
rolb
xchg
pop
mov
test
sbbl
push
inc
sub
ljmp
inc
movl
iret
push
out
mov
test
int3
mov
sub
xor
arpl
int3
pop
sbb
adc
fidivrs
decl
jle
lcall
in
jp
dec
xchg
mov
icebp
in
pushf
sbb
in
push
jl
sub
or
xchg
insb
pushl
cmp
xchg
or
jae
fnstcw
pop
sahf
cs
ljmp
into
leave
xchg
push
add
jg
jg
and
ds
ret
jecxz
cmp
jecxz
sub
dec
jg
int3
and
decl
or
mov
mov
idivl
mov
jae
jns
aam
xchg
popf
les
loope
jmp
fs
and
js
mov
mov
inc
test
gs
test
cld
pop
cmp
inc
inc
scas
out
push
jmp
fwait
daa
imul
sbb
scas
pop
lahf
push
nop
sbb
pushf
push
cmp
jl
stos
int
pop
sub
fadds
das
cmpl
cmp
jno
jg
icebp
aam
loopne
enter
jmp
insl
mov
dec
xchg
add
rol
push
jp
call
das
loop
dec
repnz
pop
pop
fimull
leave
cmp
mov
cld
dec
dec
imul
adc
sub
inc
dec
push
cmp
movsl
rcr
jb
mov
xchg
loopne
jno
or
stc
mov
cltd
cmp
inc
jnp
jge
cmc
sti
dec
push
fists
xchg
lea
fs
sti
add
outsb
pushf
les
cli
push
jg
mov
stos
ja
jg
into
sbb
cmp
xorb
mov
decl
outsb
cmpsl
mov
test
xchg
les
mov
jle
cmpsb
sbb
mov
lret
dec
and
jge
jp
sbb
xor
xchg
ss
cmpsl
pop
mov
shll
sub
out
adc
pushl
sub
mov
and
clc
or
dec
xchg
loopne
loope
out
inc
ljmp
outsb
push
popl
push
mov
push
dec
or
pop
rclb
sub
pop
icebp
jge
dec
ss
mov
insl
sahf
sub
data16
lea
sbb
push
sbb
push
rorl
mov
incl
sbb
js
jmp
cmp
out
dec
push
pop
shll
mov
std
pop
std
stos
sub
fisubl
or
adc
sbbb
ja
xlat
test
xor
icebp
mull
insb
cmc
cwtl
call
scas
push
pop
cltd
push
xchg
jno
mov
push
add
mov
call
mov
faddl
frstor
sub
fs
fldenv
xchg
out
imul
movsl
sbb
xchg
add
leave
jo
loop
mov
ss
stc
stc
mov
rorl
in
and
inc
cmpsb
nop
xlat
mov
insb
cmp
lret
scas
mov
out
jg
jmp
data16
lea
or
or
mov
xchg
fbld
data16
push
test
les
ss
or
mov
leave
outsl
mov
call
gs
movsb
and
add
push
negb
pop
dec
ljmp
pop
xor
cs
aas
sub
cmp
xchg
loope
mov
fistps
and
push
inc
xchg
xchg
adc
scas
mov
decl
fs
in
xchg
imul
and
mov
je
addr16
jmp
cmp
popf
sbb
dec
sbb
inc
out
mov
add
lret
sub
jge
aam
ja
rolb
pop
sub
iret
xchg
jle
mov
jmp
jle
fbld
loope
cmp
and
dec
jg
sbbb
stc
repnz
add
inc
mov
call
mov
jl
push
or
pop
inc
mov
or
popa
xchg
pop
push
lods
xor
and
decl
inc
xor
mov
mov
pop
adc
cli
incl
inc
leave
jge
rcll
les
cmp
sub
cltd
inc
lods
sub
mov
dec
sub
mov
jmp
aam
cmp
push
mov
popa
pop
lods
pop
mov
adc
incl
jns
pop
dec
mov
inc
sub
jg
or
negl
sub
loopne
popa
repnz
sbb
jg
inc
inc
push
jmp
xchg
or
lock
adc
test
lahf
sbb
hlt
call
jmp
std
jo
js
adc
cmc
sbb
hlt
xchg
xchg
insb
mov
incl
xor
rcll
inc
xlat
and
sbb
jg
pop
fistpl
sub
sahf
in
jb
test
add
call
insb
adc
cwtl
adc
add
mov
xchg
std
adc
sub
es
daa
jge
mov
push
sbb
mov
enter
out
in
cmc
dec
pop
cltd
push
push
xor
or
mov
in
mov
fldenv
in
sub
ret
sub
mov
fwait
xor
aaa
jmp
jecxz
lods
outsb
pop
rcrb
mov
xchg
add
stos
push
aad
negl
inc
incl
jo,pt
fidivrl
add
enter
sbb
jecxz
push
cmp
jg
add
xor
xchg
xchg
and
jecxz
test
aad
std
mov
pop
inc
inc
jecxz
jg
lcall
loopne
call
gs
mov
cmp
sbb
sbb
mov
inc
jb
pop
push
fstpt
leave
sahf
sbb
lods
mov
nop
test
das
pop
jle
out
bound
push
leave
or
call
fs
data16
nop
mov
xchg
stos
arpl
pushl
out
mov
decb
fisubrl
xchg
idivb
ja
pusha
lcall
push
xor
aaa
std
decl
mov
push
cmc
xchg
pop
ret
sub
aad
push
xchg
and
mov
mov
adc
pop
xchg
jecxz
mov
jp
add
jae
mov
mov
jmp
jle
pop
jno
push
ja
mov
decl
rolb
iret
mov
shrl
and
cmp
nop
xor
xor
cmp
xor
fxch
inc
stos
inc
aad
insl
ljmp
cmp
inc
adc
incl
in
int3
xchg
sub
push
lretw
mov
out
xor
mov
inc
inc
movsb
scas
cli
lahf
int
sub
cmc
fadd
pop
out
addr16
mov
aaa
push
frstor
jns
inc
nop
mov
cwtl
in
cmpsl
out
cmp
mov
mov
mov
movsl
jne
push
decl
jmp
mov
and
and
decl
jmp
and
xor
or
dec
insl
mov
popa
icebp
adc
mov
adc
stc
sub
aam
movsl
call
dec
popl
and
sub
push
leave
adc
je
mov
cmp
jne
ljmp
fidivs
cmpl
sbb
jb
push
repz
fisubl
push
push
ja
lods
aaa
mov
outsl
clc
jmp
orl
pop
je
sti
aaa
cs
push
mov
pop
pop
mov
lcall
lods
dec
xchg
fsubrl
loop
sbb
mov
mov
bound
mov
ret
incl
or
or
jl
dec
push
fcoms
neg
les
incl
and
leave
test
jo
fisttpll
adc
pandn
out
ljmp
cmp
ljmp
inc
or
pop
cmc
aaa
and
sub
push
ljmp
test
incl
adc
inc
jno
sbb
pop
mov
cmp
xchg
test
mov
xchg
xor
jmp
dec
adc
or
call
mov
pop
jle
ficoml
movsl
and
adc
or
sbb
lds
and
jle
jmp
and
rcll
cli
out
aad
jl
push
loopne
insl
icebp
cwtl
inc
mov
add
mov
insb
dec
rolb
jmp
ljmp
sar
jl
cmpsb
xchg
jae
mov
and
idivb
rcl
jg
cmp
push
rorb
fmulp
gs
push
inc
out
mov
pushl
movsb
inc
hlt
or
roll
mov
sub
das
add
psrad
jmp
pop
lods
add
lahf
jecxz
xchg
incl
decl
jge
cmp
jns
jo
dec
aas
cltd
outsl
dec
push
loope
pop
cld
jns
shlb
pushl
pop
dec
movb
fdivs
test
xchg
lods
and
mov
xchg
mov
cmpsb
filds
cld
decl
sbb
sub
and
pop
and
jbe
jmp
push
xchg
in
cmp
out
cmpsb
push
mov
into
and
adc
xlat
pop
es
lods
test
dec
add
fildl
xlat
jge
imul
out
inc
mov
pop
mov
cli
call
xchg
and
push
pusha
jmp
inc
fiaddl
movsl
loopne
or
cmp
imul
inc
sbb
sbb
xchg
inc
shl
mul
loop
mov
ss
shrb
dec
push
sbb
or
shr
inc
jae
adcl
ds
or
cmp
mov
xor
pop
dec
mov
mov
cmpsb
cmpsl
inc
cwtl
fcomps
in
out
or
jae
mov
add
mov
test
jae
mov
ds
jmp
mov
mov
cmc
jg
mov
leave
lret
iret
repnz
xchg
hlt
out
std
stc
fstpt
fcomps
and
bound
and
repnz
lock
push
cmp
cwtl
xchg
call
rorb
mov
ret
shlb
insb
sbb
cld
sub
mov
fstps
aaa
mov
cmp
daa
pop
push
mov
decl
std
icebp
shrb
sbb
pop
mov
cmc
outsl
dec
xchg
or
outsl
mov
rorl
inc
add
imul
in
ja
in
pushl
and
mov
mov
dec
outsb
in
ja
mov
enter
mov
xor
mov
fwait
xor
out
mov
shrl
fsubr
and
subl
mov
jns
decl
pop
lods
lods
cmp
shl
fmuls
mov
dec
push
les
jnp
adc
push
push
xchg
pop
dec
push
mull
icebp
mov
dec
push
lcall
mov
adcb
mov
movsl
lret
hlt
decl
lcall
push
loope
xchg
mov
lcall
mul
sbb
jg
xchg
add
aas
mov
sbbb
lds
fstpl
dec
loope
mov
mov
popa
gs
movsl
arpl
int
lock
lcall
mov
sahf
sub
mov
pushf
cmp
addr16
xchg
call
push
mov
das
lock
xor
decb
sbb
fmull
dec
cmp
jmp
add
mov
mov
fwait
repz
lods
xor
fnsave
inc
popf
mov
pop
sub
sbb
push
xor
sub
and
jg
mov
mov
sbb
loope
lds
scas
call
pushf
daa
mov
jnp
push
scas
pop
or
mov
mov
add
sub
sub
sub
xchg
idivb
dec
or
imul
cmp
or
jno
mov
lock
lcall
lods
cmpsb
inc
pop
and
shlb
add
jmp
lret
xchg
ljmp
lea
adc
bound
gs
push
js
or
int3
cwtl
mov
lahf
clc
out
jnp
push
lcall
xchg
call
mov
ficomps
xor
dec
insb
hlt
nop
pop
xor
lcall
pop
enter
jle
testb
cmc
mov
inc
cli
sub
iret
and
dec
fidivrl
jno,pn
sub
sar
mov
je
push
xchg
inc
stos
cmc
push
sub
iret
adc
hlt
mov
inc
adc
push
mov
bound
imul
add
jle
hlt
mov
jg
mov
and
fwait
cmpsb
sarl
dec
daa
or
pop
cmp
add
xchg
push
mov
sbb
pop
aas
jbe
sub
push
dec
pminub
lock
push
mull
jmp
or
cmp
in
inc
or
cmp
mov
jbe
jp
negb
adc
cmp
and
ljmp
push
lea
das
mov
mov
or
cmp
mov
jb
imul
mov
je
in
stos
mov
es
or
lret
push
mov
adc
imul
call
adc
daa
xor
mov
sbb
and
ljmp
inc
rclb
sbb
lcall
lods
std
push
decl
lret
stos
ljmp
lods
and
mov
or
cmc
inc
xchg
repz
jmp
jnp
lcall
jnp
push
ds
cmp
xchg
popa
outsl
xor
xor
mov
ljmp
cltd
inc
mov
sti
push
jmp
mov
sarl
pop
sbbb
inc
lods
cs
cld
mov
cmp
fxtract
mov
dec
mov
mov
inc
xor
cld
jg
sub
repnz
inc
jg
movsb
and
lods
mov
loop
in
cmpsb
mov
outsl
cmp
push
into
insb
fwait
aad
lds
decl
cli
test
fsubrs
pop
cmp
repz
sbb
mov
add
in
das
jmp
push
subl
push
adc
je
adc
mov
fidivrl
loop
jbe
js
mov
stos
je
repz
inc
mov
xchg
and
idivl
js
mov
xchg
dec
cmp
add
hlt
dec
aaa
xchg
std
fwait
lods
icebp
push
push
gs
jle
in
jmp
inc
push
pushf
aam
or
lcall
in
mov
adc
mov
cmp
or
lret
shr
cmp
push
sbb
jl
add
movsl
scas
push
jo
lea
pushf
inc
jo
hlt
pop
add
das
int3
push
adc
cltd
sub
test
and
mov
jmp
and
es
jg
cmp
jmp
out
pop
cmpsl
int3
push
std
push
dec
or
in
mov
jmp
shlb
dec
adc
mulb
adc
mov
xchg
lea
ljmp
cmp
cmp
xor
fldt
ficoml
rcl
loopne
fldlg2
aad
mov
call
jns
lcall
push
aad
js
shlb
mov
popf
adc
decl
pop
adc
inc
bound
inc
in
sbb
subb
push
jg
hlt
cmp
lods
movsb
aas
clc
pushf
fsts
js
and
cmp
and
lahf
dec
in
mov
lahf
mov
stos
sub
push
loop
ljmp
lahf
sub
pop
daa
and
sub
loopne
jg
jle
add
sub
cmp
xor
out
xor
lcall
lcall
fwait
imul
sbb
jmp
stos
push
pop
lahf
dec
fistpl
jnp
mov
hlt
call
push
sahf
loopne
lods
movsb
in
ret
daa
adc
or
fcompl
jg
mov
repz
insl
pop
ss
push
testl
xor
jnp
cmp
lcall
out
mov
inc
stc
cld
dec
mov
jns
dec
push
mov
fwait
jg
sub
fisttpll
imul
push
test
das
push
mov
popf
popa
imul
xor
dec
push
inc
jo
dec
cli
dec
pop
ja
fists
rcll
popf
aad
mov
adc
push
jp
push
mov
aas
cli
push
xchg
stos
pop
push
test
inc
cmpsb
adc
pop
mov
jne
lcall
xchg
cmp
daa
subb
dec
fistpl
jb
nop
std
loope
and
fbstp
and
jl
loop
sub
cmp
xchg
add
cli
int
pop
adc
xor
inc
lcall
sbb
bound
insb
insb
push
int
ss
fcomip
int
lds
cmp
fdivrs
xor
pushf
add
cli
mov
adcl
call
fidivs
jg
lahf
or
or
push
lret
pusha
sbb
sub
jg
push
pop
test
call
sbb
xchg
jns
fmul
jg
lahf
pushf
sub
adc
imul
iret
mov
push
mov
les
fnstsw
inc
add
mov
icebp
je
jno
mov
xlat
sahf
jbe
mov
or
in
add
rolb
or
pushl
std
mov
pusha
cwtl
xor
repnz
cmpsl
xor
incl
jns
dec
push
lahf
jns
adc
push
cmp
xchg
incl
xchg
cmp
cmpsl
loop
inc
cmp
and
push
mov
lcall
call
lock
shrb
test
lods
aad
incb
idivl
mov
sbb
pushl
ja
leave
push
cltd
or
sbb
xchg
mov
inc
or
pop
inc
adc
dec
enter
ljmp
jb
fwait
rcrb
mov
mov
push
shl
inc
inc
es
or
repnz
ds
pushl
add
pop
rep
sahf
push
fldenv
out
or
das
jg
test
int
test
jnp
stos
sub
pop
cmc
gs
pop
add
and
cmp
dec
xchg
cmp
mov
add
jg
lds
mov
popf
testb
iret
mov
cs
repz
das
push
adc
mov
cld
aaa
lcall
mov
xor
pusha
lods
xor
inc
cmp
xor
push
rcrl
hlt
hlt
jg
cmp
sbb
in
and
lret
mov
pop
pop
and
mov
decl
sub
sub
inc
jnp
adc
cs
mov
outsl
adc
es
outsl
pop
inc
ljmp
push
ja
or
call
pop
jecxz
fs
outsl
add
imul
rcr
cmpb
push
fcmovbe
call
inc
sub
mov
or
int
ficoml
fcomip
es
ljmp
xor
pop
lret
and
rorb
aam
andl
clc
xchg
lcall
mov
sahf
xor
int
lods
jno
daa
dec
cld
mov
cmp
or
call
jae
or
dec
repnz
adcb
sbb
inc
sub
in
decl
push
cs
cmpsb
pop
std
xor
or
xor
push
pop
dec
jp
cmc
mov
sbb
mov
pop
pop
inc
add
mov
mov
out
ljmp
xor
cmp
inc
xchg
cmpsb
ja
test
inc
jge
xor
mov
scas
clc
or
push
cmp
push
dec
push
mov
jb
incl
mul
loope
rcrl
sub
sbb
sti
or
ds
js
sub
jmp
dec
jge
cmp
jmp
xchg
mov
jle
lcall
jne
dec
les
call
popa
mov
addr16
les
xor
xor
decl
mov
jbe
push
mov
sbb
jno
pop
movsl
into
add
cmp
add
incl
mov
sahf
push
fcmovnu
fwait
jnp
hlt
xchg
pop
xchg
hlt
mov
pop
std
fstps
sbb
dec
ret
xchg
xchg
pop
cltd
cmp
mov
ljmp
mov
xchg
notb
std
scas
imul
jmp
iret
fildll
or
mov
std
call
sbb
xchg
mov
ljmp
and
pop
fisubrl
js
imul
cmp
int
or
or
jmp
popf
dec
cmp
sub
shrl
mov
dec
add
push
inc
add
ljmp
out
or
outsl
clc
and
or
xchg
test
or
mov
cltd
fsubs
movsb
call
mov
outsb
rorl
lock
ljmp
add
test
scas
loopne
setp
icebp
mov
fstl
ljmp
cwtl
sbb
mov
inc
and
and
or
pop
in
pop
mov
lcall
fdivs
mov
sub
mov
sub
ret
scas
mov
incl
faddl
jno
pop
or
push
loop
mov
dec
shlb
aam
xchg
call
movb
sub
fdivs
sub
test
enter
bnd
mov
add
call
cmp
fucom
jb
je
sub
pop
divl
call
rorl
cmp
sbb
sbb
xor
popa
add
enter
xor
jg
xorb
or
jo
lret
fdivrs
adc
mov
addr16
dec
sub
or
jmp
add
sarl
popa
mov
sub
jl
push
scas
jl
mov
dec
jb
cli
push
push
sahf
jmp
push
and
push
ljmp
mov
push
xchg
mov
repnz
push
out
and
mov
push
hlt
insl
lcall
test
rep
cmp
ds
add
insl
out
insl
shrd
or
xchg
mov
jns
or
call
sbb
cmc
mov
in
xchg
lcall
mov
dec
and
xor
cli
aam
outsb
sbb
ss
or
cltd
xchg
jecxz
mov
cmp
fnstcw
jns
jno
lods
jl
jne
push
sbb
jg
mov
fldcw
mov
cmp
and
sbb
ret
push
stos
push
test
enter
js
cmpsb
push
xor
pushl
out
inc
scas
jne
cmp
push
movsb
and
out
repnz
ljmp
or
pop
jmp
test
repz
iret
roll
mov
jmp
push
jp
inc
jno
out
xor
test
push
cmpsb
repz
clc
add
xor
pop
divl
rcll
fs
push
push
hlt
and
mov
jl
je
jmp
inc
and
shrl
cs
dec
fimuls
push
mov
xchg
jmp
popf
mov
stos
push
push
push
test
repz
pop
sbb
mov
push
cmp
idiv
pushl
inc
into
adc
dec
mov
das
jno
add
mov
xor
les
cld
inc
jg
or
testl
dec
test
dec
mov
sbb
jg
sbb
xchg
jle
cmp
cmpsl
sub
test
faddl
xor
decl
or
ljmp
adc
insl
bound
and
jle
insl
loop
loop
cmpsb
lcall
jnp
es
mov
fwait
jmp
jo
andl
imul
xchg
mov
cltd
xlat
fistpl
sahf
pop
jge
cmp
or
sbb
sbb
inc
jle
cmp
mov
movsl
inc
test
sub
cmp
lods
iret
sub
xchg
ret
aam
pushf
mov
and
mov
pushl
mov
xchg
xchg
jnp
enter
bnd
lock
es
mov
pop
jecxz
xchg
incl
aad
jl
and
mov
daa
lds
pop
popf
jbe
incl
cmpsl
pop
push
push
scas
lret
cld
daa
inc
adc
pop
jae
insb
arpl
cmpb
pop
sti
call
incl
mov
jb
pop
sbb
mov
cmpsl
js
ljmp
shr
rolb
mov
daa
xor
cmp
enter
push
fldl
pushl
std
sub
push
cmp
fcmovnbe
push
and
mov
or
lock
dec
sub
clc
mov
jnp
push
xorl
pop
lret
lahf
loopne
stos
stos
push
jo
gs
shl
xchg
outsb
popf
add
pop
in
ja
int3
or
jg
mov
dec
aaa
ja
test
lock
or
pop
xchg
fs
inc
push
fcoms
call
dec
movsb
rcr
push
mov
pop
cmp
or
movsb
in
add
rcrl
pushf
xlat
jb
sbb
repnz
cs
adc
repnz
and
jmp
and
inc
cli
push
fisttpll
sahf
push
lods
stos
add
push
xchg
test
push
xor
stos
stc
cwtl
sar
cmp
jnp
fcoms
push
push
aad
xchg
pushf
arpl
xor
and
jmp
ret
jmp
sarb
test
xchg
dec
ja
push
bound
sbbl
std
ljmp
incl
es
subl
aaa
iret
scas
sub
imul
je
mov
js
icebp
cmpsl
scas
push
decl
add
xor
add
ret
sar
push
sub
jecxz
adc
sub
pop
lock
inc
mov
push
js
ret
lcall
in
mov
pop
pop
loopne
fisttpl
mov
insl
test
xchg
dec
scas
test
mov
mov
dec
mov
cmpsb
loopne
jl
push
adc
lds
xchg
jae
cli
xchg
int3
xchg
loopne
push
pop
lcall
mov
and
shll
or
loope
out
jl
push
or
vmwrite
pop
pop
idiv
mov
push
sbb
lock
and
push
pop
jnp
stc
pop
std
mov
mov
fsubp
push
add
inc
push
pushl
movsb
adc
and
cmp
dec
adc
insb
sbb
and
sub
incl
out
sbb
js
push
add
loop
or
adc
push
cmp
sar
decl
pop
test
popa
inc
push
stos
je
leave
ret
test
adc
loop
inc
pushl
ret
pushf
xchg
repnz
sub
or
scas
cmpsl
inc
jae
test
xor
cmp
decl
pop
adc
iret
in
add
rep
js
mov
das
xchg
push
sub
fisttpl
push
push
imul
or
xchg
cmp
jecxz
push
cmc
pop
lcall
inc
ljmp
jae
xlat
jl
mov
loop
dec
fs
lcall
popf
scas
movsl
inc
push
or
movsb
xchg
loop
scas
xchg
pop
sub
cld
insl
test
je
ljmp
xlat
fsts
mov
ret
xchg
inc
sbb
int3
ficoml
lock
scas
int
lcall
enter
stos
aam
or
leave
sbb
imul
xor
in
ret
cld
decl
in
and
or
and
call
pushl
iret
hlt
movsl
daa
rorb
jo
sbb
push
pand
dec
std
rclb
fdivrl
pushl
inc
shrl
and
cld
jmp
pusha
aas
lods
mov
loopne
out
lahf
push
inc
jp
pop
adc
lock
cmp
incl
dec
aaa
mov
inc
mov
push
mov
lahf
inc
sbb
testb
cmp
sbb
ljmp
js
cwtl
cmp
and
push
inc
cld
ret
push
cmp
outsl
mov
out
cli
jmp
add
sbb
xor
push
inc
aam
test
pop
push
sti
lret
push
push
les
inc
sbb
cmp
xchg
fs
addr16
lods
pop
pop
rolb
cmp
xor
dec
inc
xchg
aad
cmp
jbe
stos
inc
fists
push
sahf
mov
out
pushl
loop
xchg
jnp
sub
iret
decl
cmc
cmp
mov
or
lcall
out
mov
xchg
adc
je
adc
mov
and
jmp
mov
push
jg,pt
stos
test
jb
in
gs
mov
negl
das
out
jecxz
nop
lock
insl
arpl
sub
mov
mov
mov
lods
in
inc
loop
sahf
ret
or
pop
jae
imul
incl
inc
scas
pop
cmpsb
outsl
jo
int
sti
cmp
xchg
jo
add
mov
in
cmp
repnz
adc
xchg
inc
adc
loope
mov
jb
ljmp
inc
inc
and
sti
jl
sbb
sarb
stos
push
cmp
sbb
push
roll
sbb
incl
jle
lods
cs
push
inc
addr16
inc
lret
sbb
xchg
cmc
aaa
add
addr16
jp
dec
jmp
cli
sbb
dec
and
out
hlt
mov
mov
mov
mov
pop
or
ds
outsl
cwtl
add
mov
pop
push
cmc
in
cmp
xchg
push
mov
fstpt
decl
cmp
lcall
stos
imul
mov
loopne
dec
pop
aad
or
jno
sbb
rcl
imul
fsts
pop
sub
decl
pusha
addl
scas
loop
pop
sub
mov
stos
lock
cmp
int
add
daa
rol
push
jb
mov
lcall
lock
or
push
addr16
loop
das
cmp
and
fistl
aam
jg
decb
into
sub
repnz
stc
aam
xchg
pop
stos
push
decl
or
imul
mov
cmp
cmp
call
outsl
jge
adc
mov
mov
rcr
sbb
sub
ret
and
cmp
jmp
xchg
aaa
push
je
jae
push
jo
loopne
push
outsb
xchg
nop
lods
sbb
jns
sbb
loop
pop
stc
clc
ror
imul
inc
inc
in
adc
dec
mov
sub
imul
ret
inc
stos
aad
xchg
testl
inc
xchg
mov
lcall
inc
pusha
pop
mov
dec
sub
ja
jg
pushl
in
imul
cld
lds
mov
mov
ljmp
and
push
mov
shl
xlat
push
sbb
xchg
sti
les
fldl
cmp
mov
sub
pop
sub
dec
mov
mov
inc
xor
xchg
adc
jmp
xor
dec
jmp
sbb
dec
xchg
and
cld
jmp
fnstcw
inc
ret
jp
cmp
mov
dec
adc
cmp
cmc
andb
test
cmc
push
mov
jmp
xchg
cwtl
xor
cmpsl
jnp
lret
and
xchg
addr16
ja
jo
and
incl
mov
mov
adc
sbb
insl
testb
mov
cwtl
movsb
pop
xlat
mov
pop
sbb
push
jb
call
mov
daa
pop
or
adc
cmp
jmp
mov
and
nop
repz
imul
ljmp
jge
jo
mov
push
fidivl
cmc
pop
push
call
mov
inc
fcompl
negb
loope
icebp
fst
pop
sahf
movsl
dec
and
xor
adc
cmp
sub
inc
fiaddl
and
and
mov
mov
add
pop
ret
xchg
cli
pusha
lcall
jge
jmp
jbe
fld
leave
cmp
js
mov
and
mov
mov
lcall
ljmp
and
mov
jae
mov
mov
shrb
pop
lahf
rorb
cld
arpl
sub
clc
stc
lea
hlt
into
movsb
pushl
int3
inc
jge
push
pop
add
fwait
xchg
inc
and
mov
loop
cwtl
cmp
lods
imul
dec
pushl
cmc
add
rcl
push
stc
sub
mov
jae
push
dec
lock
jae
push
mov
clc
adc
push
stos
add
or
shll
push
or
cmp
add
jmp
cmc
fildl
push
lods
sbb
shrb
ljmp
aas
mov
and
push
xlat
push
shr
cmpsl
xorl
out
dec
repz
adc
decl
add
call
push
mov
and
sub
aaa
dec
sub
mov
cmp
sub
jno
add
cli
sub
leave
cmp
lcall
lcall
and
jnp
sbb
mov
dec
movsl
iret
rcrl
and
pushl
mov
or
in
and
stc
je
adc
lods
cmp
cli
fimuls
repz
xor
dec
add
pusha
fisttpl
dec
in
adc
xlat
mov
push
push
sbb
jmp
shll
inc
mov
loopne
mov
mov
aad
mov
and
sub
push
loop
pop
rcrl
cmp
lods
fbstp
sub
iret
inc
mov
adc
mov
add
fadd
les
lcall
into
aas
lcall
inc
arpl
pop
or
sti
lcall
call
inc
jnp
sahf
loope
popf
jno
cmp
xchg
dec
pop
test
pop
out
mov
leave
pop
push
incl
inc
popf
leave
test
mov
mov
mov
dec
jne
mov
repnz
ljmp
and
push
mov
insl
sub
imul
xchg
jge
add
or
ljmp
or
inc
push
dec
and
mov
and
iret
cmp
push
mov
push
sarb
inc
or
je
scas
lcall
pushl
adc
aad
cmpsl
mov
je
dec
sbb
xchg
outsb
nop
call
insl
wbinvd
fisttpll
or
bound
xchg
das
scas
rcrb
pop
or
sahf
pusha
mov
cmpsl
push
inc
cmp
push
push
mov
lcall
mov
pop
mov
mov
std
call
sub
insb
xor
or
push
in
adc
shl
outsl
jno
add
bnd
inc
xchg
pop
cli
xchg
pop
lea
mov
fs
decl
inc
or
out
xchg
or
out
int
insb
add
sub
lock
push
push
stos
sbb
lcall
mov
pop
insl
mov
inc
test
call
inc
lods
sahf
repz
pop
sbb
add
jmp
pop
clc
inc
add
std
insl
sahf
jbe
cltd
or
dec
popf
mov
add
es
and
mov
std
push
sahf
gs
sub
je
xor
loop
cmc
pop
cmpsl
dec
pop
fwait
lods
movsb
test
cli
jmp
loope
inc
lds
inc
and
int
push
getsec
xor
ljmp
add
mov
jmp
test
imul
jp
xchg
jo
stos
jg
and
push
loop
jno
insl
xorl
lcall
call
lahf
sarb
test
ficoml
ljmp
and
add
cmpsl
cmc
xchg
out
jp
lret
mov
xchg
mov
lret
lods
dec
out
xor
inc
xchg
dec
mov
out
or
pusha
sub
out
lret
mov
add
mov
xchg
inc
stc
leave
cpuid
fcomps
jp
push
inc
and
cmp
stc
faddl
cmpxchg
dec
push
popa
pop
decl
rcll
dec
xchg
clc
adc
add
hlt
push
lcall
mov
repz
movsb
decl
shrb
cmp
outsb
mov
sti
and
popa
jl
ret
jno
in
insl
push
out
cwtl
lds
pushl
addr16
xlat
imul
mov
mov
scas
lods
inc
mov
int
mov
sbb
push
addr16
cmp
push
jns
js
lock
cmpb
mov
in
sbb
out
stos
push
mov
jmp
lret
jl
in
stos
mov
pop
imul
cli
ljmp
lock
test
jbe
imul
ss
mov
and
sub
dec
pusha
in
dec
pop
fcoml
lcall
sub
push
mov
mov
xchg
loope
cmpsl
enter
jg
xchg
and
fildll
ljmp
rcl
stos
aas
fcompl
sub
fsts
sub
xchg
mov
pop
icebp
push
ljmp
dec
or
aam
sub
fstpl
nop
stos
xor
xor
in
push
outsb
xchg
mov
lcall
pop
movsb
cmp
rcll
push
inc
sbb
nop
jp
cmpsl
xchg
ret
rorb
sub
sub
jmp
mov
loope
xor
lds
popa
or
test
sbb
mov
cmp
decl
pop
xchg
pop
fsubs
in
sbbl
test
test
jo
nop
leave
das
push
call
inc
jl
add
sbb
xor
ja
sbb
loopne
sbb
sbb
push
push
ret
fnstcw
nop
in
dec
push
cli
jg
test
xor
pop
adc
popa
ljmp
sbb
cmpsb
adc
pushf
nop
jo
int3
jne
xor
fstpl
jb
fs
mov
incl
push
daa
es
mov
outsl
xchg
test
pop
dec
rcrl
in
xor
lock
lock
shll
mov
dec
inc
scas
pop
pop
mov
filds
icebp
sbb
cmc
mov
sub
cmp
clc
jmp
ret
inc
pop
dec
jmpw
cmp
xor
pop
jecxz
ljmp
mov
mov
stc
mov
fisttpl
fnstenv
mov
mov
xorb
mov
mov
and
pop
adc
into
lock
add
jo
stc
call
mov
jbe
or
adc
mov
mov
pop
mov
loope
adc
mov
mov
scas
jecxz
test
xchg
pop
loopne
stos
jns
shl
imul
mov
cli
bound
pop
sub
pusha
xchg
jmp
add
jge
ret
cs
mov
scas
leave
sbb
arpl
mov
divb
std
inc
out
aas
jae
push
mov
ret
jns
mov
rcrl
or
shl
push
mov
in
mov
outsb
pop
sbb
cwtl
scas
stos
adc
adc
inc
or
xor
lcall
incl
jge
xchg
add
dec
cltd
aad
or
cmp
shlb
ljmp
mov
loope
outsl
or
es
leave
and
stos
pushl
xor
push
jmp
fidivs
push
cmp
cmp
adc
add
jg
mov
pop
icebp
push
pushf
lock
lcall
test
jg
xchg
stos
cmc
mov
push
incl
jmp
dec
cs
cli
add
outsb
cmp
push
jo
push
arpl
sysexit
pusha
loopne
push
lcall
insb
jmp
xor
inc
xor
pop
std
dec
mov
addr16
lods
mov
aad
xchg
push
popf
mov
enter
xchg
pop
cwtl
adc
dec
dec
out
xorb
jle
xor
fs
mov
cmp
call
adc
xchg
setb
cs
jo
fsts
iret
and
ja
call
mov
xchg
push
clc
push
pmulhuw
pop
out
inc
or
mov
sbb
mov
loop
jmp
cld
pusha
xor
mov
fs
fsub
mov
cmp
jecxz
or
mov
stos
test
jle
xor
in
shr
dec
xor
sbb
fwait
cmp
pop
and
sahf
loope
adc
out
mov
adc
movsb
call
std
jg
repz
pop
fwait
inc
and
sbb
jae
sub
jg
negb
imul
mov
and
call
nop
js
lods
fildl
call
push
mov
cmp
adc
std
pushl
int3
and
testl
pop
push
inc
mov
lahf
call
hlt
shll
arpl
fists
shlb
mov
test
lcall
cli
inc
clc
mov
add
jno
mov
orl
pop
push
outsl
pop
orb
cmp
ljmp
adc
jecxz
aam
jo
mov
pop
adc
sbb
in
jp
mov
int3
mov
call
in
mov
gs
out
sub
inc
xor
jo
push
inc
jo
push
or
lahf
stos
xor
sub
pop
mov
ljmp
jne
out
inc
jmp
mov
jnp
pop
test
dec
cwtl
popl
mov
stos
nop
mov
xchg
fistpll
mov
mov
negb
aam
push
ljmp
fisubrs
cs
lcall
and
mov
adc
scas
push
in
xor
push
sbb
xchg
xlat
fildll
inc
hlt
sbb
mov
adc
adc
call
inc
lds
push
in
lods
jne
clc
dec
pop
mov
syscall
out
ljmp
or
adc
ret
mov
mov
xchg
ss
inc
cli
adc
rcr
sub
clc
lcall
scas
xor
pop
cltd
imul
adc
fiaddl
push
into
outsl
hlt
outsb
cmc
push
std
ljmp
cmp
icebp
sub
addb
or
push
lcall
push
jae
cmp
ljmp
or
adc
xor
daa
mov
lcall
fs
je
ss
fisubrl
inc
push
pop
mov
push
std
and
cmc
xor
fwait
sub
out
clc
xor
je
js
daa
iret
out
ljmp
and
mov
pop
push
fstpl
cld
fiadds
jle
sahf
xchg
insl
pusha
aas
fcmovu
push
rorl
or
mov
sahf
or
pop
lcall
add
mov
mov
pop
sbb
mov
add
shrl
sbb
mov
in
pushf
hlt
out
call
cli
xchg
mov
inc
loope
ror
leave
dec
adc
enter
jmp
jo
or
enter
or
mov
fldcw
add
push
mov
add
add
movsb
pushf
dec
adc
cmp
mov
ljmp
jno
imul
sub
xchg
repnz
adc
mov
aad
aas
dec
loop
rdtsc
test
les
dec
xchg
repz
add
mov
dec
and
mov
js
mov
jg
mov
add
xor
sbb
insb
pop
pop
lcall
hlt
fldenv
inc
adc
mov
dec
int
mov
aam
movsb
cmp
sub
sarl
pushl
mov
mov
dec
mov
test
cmpsl
adc
add
popa
cld
push
ret
cmp
js
xorl
int
outsb
scas
mov
fidivrl
push
sub
cs
je
incl
adc
je
xor
cmp
loopne
out
pop
pusha
aaa
jecxz
out
pop
sahf
lret
data16
imul
jmp
sar
pop
loop
fcmove
mov
ss
addl
jmp
push
shl
movsb
mov
inc
cltd
xor
xor
into
pusha
add
popa
dec
sub
push
sbb
sub
outsb
jmp
ja
sub
push
and
pop
adc
ljmp
push
jbe
pop
enter
out
and
ljmp
mov
in
lret
or
xor
jl
dec
mov
shlb
mov
stos
jno
stos
ljmp
outsb
fsubl
pop
xor
xchg
jbe
inc
ret
jno
aad
sar
in
xchg
pushf
in
loope
fwait
jne
loop
ss
lds
fmull
cmp
mov
cmp
add
pushl
lret
or
pop
cmc
dec
jg
mov
shrl
add
loop
mov
movsl
sbb
call
or
xchg
mov
ror
test
call
dec
jle
adcb
scas
jns
stos
gs
adc
lea
xor
xor
inc
push
cs
sub
sub
mov
sbbl
jnp
cmp
mov
pushf
push
push
adc
movsb
icebp
fcoml
and
dec
enter
into
push
imul
loope
pushl
add
cli
pop
lods
gs
fldl2t
cmc
roll
and
int3
or
mov
jns
and
test
mov
xor
movsb
sbb
insl
xor
lret
iret
mov
test
xor
pop
sbb
call
adc
push
dec
push
cmpsl
xchg
sub
imul
pop
dec
pop
add
cmc
les
ljmp
enter
mov
aam
cmpsb
push
daa
add
decl
jnp
loope
mov
or
in
cld
and
std
mov
xchg
ret
test
lcall
inc
sbb
cmc
movsl
fsubrs
cmp
push
idivb
pop
roll
stos
inc
and
outsl
fnsave
das
into
cmpl
pop
aas
not
mov
and
adc
inc
mov
xor
lret
jns
bnd
arpl
jge
call
jmp
stc
lret
and
out
pop
push
sbb
mov
lahf
outsl
push
test
sub
addl
xlat
pop
fs
mov
jg
in
lret
adc
je
xor
mov
mov
xor
or
loopne
xchg
stos
insb
rol
sti
ljmp
call
ret
mov
call
mov
mov
inc
test
lea
dec
jno
inc
xchg
sub
inc
xor
or
dec
adc
inc
xchg
or
repnz
cvtps2pi
ljmp
jge
stos
ja
pushl
dec
and
adc
or
pop
out
xlat
dec
sbb
dec
adc
std
stos
mov
adc
dec
xchg
call
push
and
mov
ss
orl
or
loope
cmp
outsb
mov
jecxz
rcl
jb
and
mov
nop
ret
sub
pushl
xchg
enter
pushf
jae
adc
or
cwtl
jecxz
repnz
jbe
dec
mov
lret
lods
xchg
insb
cltd
outsb
decb
cmp
into
fcom
sar
jmp
hlt
add
lods
mov
sub
xchg
xor
mov
jg
mov
and
loop
adc
icebp
lcall
jg
or
push
cli
inc
push
inc
insl
sarl
addl
and
xor
mov
add
pushf
or
sub
jle
std
jecxz
imul
divb
cmp
sbb
lods
cld
leave
xor
arpl
rolb
mov
shll
jo
incl
sub
arpl
ret
xchg
das
js
in
dec
cmpsb
adc
cld
aad
stos
pop
push
mov
lcall
or
push
pushf
jne
adc
jbe
insb
in
sub
popf
dec
push
mov
jae
lcall
sub
sub
mov
mov
fstl
push
sbb
and
fwait
push
popa
push
ficompl
rcrb
sbb
daa
mov
cli
ljmp
jae
or
out
and
cmp
fsubl
leave
repnz
stos
inc
addb
fildll
xor
stos
dec
out
jno
fidivs
in
lcall
adc
ficompl
jnp
sbb
jl
inc
pop
in
jmp
dec
add
mov
mov
push
cmc
and
lods
je
and
and
stos
mov
pushl
mov
fwait
movsl
aaa
or
loope
add
lcall
jmp
je
cmpsl
xor
or
push
jmp
xor
adc
cmp
cmp
ljmp
jmp
stc
push
sub
adc
push
push
mov
add
add
out
sub
push
mov
lahf
bound
add
shl
cwtl
cmpsb
in
dec
push
rcr
adc
cld
jnp
pop
mov
jnp
test
je
push
xchg
addb
jp
pop
rorb
push
adc
mov
push
adc
insb
mov
cmpsb
jmp
or
xchg
jbe
outsl
jge
lret
pop
xchg
mov
dec
dec
pop
shlb
sbb
loope
jbe
idiv
pushl
pop
and
fadd
leave
push
out
in
pop
xchg
sahf
mov
cmc
or
cld
rolb
cli
xchg
mov
ja
xchg
add
and
test
lods
pop
ljmp
mov
jno
fistps
cmp
sbb
lods
push
loop
inc
mov
scas
add
ffree
mov
fcomip
push
leave
sarl
cwtl
jge
subb
pop
mov
leave
scas
xchg
inc
mov
jmp
dec
mov
into
push
and
push
decb
jg
xor
sub
fucomp
fistpl
fcoms
data16
cmc
push
lods
inc
mov
lock
or
test
mov
push
lret
into
sbb
jne
pop
xchg
jl
js
jp
sbb
inc
or
add
sbb
jnp
stc
pushl
inc
incl
mov
xchg
stos
hlt
sti
inc
fcom
in
popf
or
mov
and
decl
lock
sti
scas
js
pop
add
xchg
xchg
hlt
mov
fsubrp
mov
std
jne
mov
mov
aas
adc
cmpsb
and
cwtl
mov
and
daa
test
aaa
es
push
bound
push
movsb
mov
dec
jle
aaa
jbe
add
xchg
jl
and
mov
fbstp
mov
call
jecxz
bound
mov
cmp
aaa
ljmp
lcall
inc
jge
mov
jb
sti
sub
cmp
push
sahf
cmpsl
ss
in
or
mov
push
lcall
sub
or
pop
mov
mov
in
imul
negb
jno
movsb
push
jg
pushl
sahf
andb
in
jp
dec
out
nop
add
hlt
in
xchg
cmc
cmp
inc
sbb
xchg
inc
push
jne
repnz
adc
mov
push
jmp
ror
pushl
xchg
out
cmpsl
loope
push
repz
push
cmp
xchg
sub
int3
jp
dec
pop
push
pop
pop
scas
pop
cld
push
incl
loopne
jmp
sti
xor
stc
mov
es
dec
daa
cmp
clc
sub
mov
std
cmp
pop
icebp
call
and
cmp
mov
pushf
ljmp
call
dec
xorl
dec
outsl
cld
incl
mov
adc
mov
inc
je
jno
jmp
cmpsl
pop
cwtl
lgs
iret
lods
leave
mov
fdivs
movsb
push
or
enter
lcall
inc
int3
and
fbld
cwtl
lret
xor
aaa
daa
lods
daa
outsb
or
adc
decl
jmp
cmp
mov
or
pop
jnp
or
jmp
andl
cli
ljmp
jnp
movsb
test
ss
or
scas
mov
sar
decl
incb
fidivl
add
outsl
push
lds
or
push
sbb
nop
mov
mov
ja
imul
or
dec
pop
or
xor
xchg
xchg
test
jp
ja
mov
inc
addr16
jmp
inc
shrl
repz
sarl
nop
xchg
lods
mov
aad
les
sub
pop
jl
subl
and
mov
jmp
je
push
push
ljmp
xchg
pop
pushf
xchg
jg
dec
lock
jns
clc
in
call
mov
sahf
fucomip
sbb
add
incl
push
and
sahf
cmp
mov
dec
sbb
insb
pop
jns
pop
push
addr16
fsubp
sbb
int
hlt
lcall
mov
sti
in
jg
in
clc
in
adc
outsl
dec
mov
mov
push
insb
inc
decl
adc
iret
lahf
lcall
cltd
shll
lahf
and
lret
inc
es
ljmp
cmpb
out
mov
sub
push
popf
sbb
call
iret
clc
nop
in
inc
xchg
sbb
aad
jmp
xchg
dec
out
bound
stos
test
add
data16
and
dec
std
jg
jg
lret
mov
mov
inc
pop
cmp
mov
out
lcall
xchg
push
sbb
in
mov
mov
jge
add
push
push
daa
pop
call
std
in
xor
loopne
jg
enter
fnsave
cli
test
dec
cld
pushl
cli
mov
leave
stos
data16
mov
mov
stos
jg
sub
jg
cs
xchg
sub
xchg
add
jp
out
push
dec
shlb
outsb
dec
testl
cs
call
rol
or
pop
pop
pusha
cmp
sub
cmp
incl
stos
mov
xchg
inc
cmp
popf
fldenv
jl
mov
mov
fstl
incl
popa
mov
cmc
inc
pusha
stos
lea
adc
dec
aam
lods
mov
dec
mov
cmp
adc
pusha
mov
jle
in
lods
rcrw
mov
mov
push
mov
pushl
cld
xor
pop
ljmp
xchg
mov
lret
xchg
cmp
adc
ds
fildl
hlt
cmp
mov
std
inc
ja
enter
cmp
icebp
test
jg
mov
jg
jle
stc
leave
xchg
pop
dec
test
cld
imul
sbb
fdivs
inc
sbb
lahf
jns
rcl
out
mov
and
adc
lret
inc
xor
pop
xchg
dec
cld
shr
xor
xchg
mov
subb
scas
int3
call
jg
lods
add
mov
cmp
mov
fs
inc
jecxz
rolb
jl
xchg
xchg
mov
push
pop
and
cmp
xchg
icebp
ret
cltd
movsl
jl
int
pop
fcmovnu
add
dec
imul
or
incl
mov
add
fwait
add
je
rcrl
fnstsw
jo
jo
adc
cld
sbb
cmp
decl
mov
in
mov
ja
adc
std
mov
jg
jmp
dec
stc
sub
adcl
hlt
outsl
push
cmp
pop
lods
pushl
push
popl
mov
xor
test
daa
cmpsl
fsub
loop
pushl
hlt
xlat
loop
jnp
xlat
icebp
xor
mov
add
mov
ret
out
jmp
aas
bound
xchg
or
dec
jp
pusha
xor
popf
and
cwtl
ljmp
lock
popa
pop
stos
mov
or
cld
xor
add
push
push
sub
loop
ljmp
mov
dec
mov
sub
ds
add
dec
sub
in
mov
add
mov
shlb
fsts
js
imul
adc
mov
ljmp
add
ljmp
push
cmp
xor
push
outsb
lock
push
lds
mov
int
scas
ss
pop
jle
add
cmp
fisubrs
sar
decl
imul
aas
in
xchg
sub
cli
mov
aas
and
jle
cmpsl
pop
jg
or
loopne
mov
cltd
ljmp
sahf
push
lcall
sub
mov
testb
dec
lret
adc
decl
rep
jmp
aaa
cmp
add
mov
xor
xchg
sahf
xchg
adc
jg
ljmp
rorl
cmp
lahf
call
mov
out
jo
aam
inc
mov
icebp
jp
or
push
incl
pop
adc
xor
add
imul
sbb
std
sbb
imul
leave
ljmp
cmp
sub
outsb
addr16
and
inc
stc
enter
pushl
jmp
xchg
and
jb
addr16
sbbb
push
ss
lahf
inc
and
call
pop
decb
and
into
xor
push
jle
pop
mov
ss
fld1
jecxz
orb
imul
lret
test
mov
lods
jecxz
stos
enter
clc
mov
in
rclb
lods
adc
pushl
sub
ds
rol
add
mov
push
lahf
pop
adc
or
push
lock
lcall
cmp
sbb
scas
pop
rorl
mov
aam
jecxz
subb
jle
pushl
int3
mov
cmp
sbb
adc
insb
movsl
jno
inc
movsl
jmp
js
jg
sarl
js
test
pop
in
stos
pushf
int
pop
jmp
lock
rorb
shlb
sbb
pushl
or
ret
mov
and
mov
mov
ss
jge
mov
iret
pop
and
call
imul
mov
push
insb
and
dec
mov
pop
fimull
xchg
repnz
cmp
mov
cs
pop
cltd
xchg
loop
into
sbb
outsb
lahf
shl
clc
rolb
aam
fs
fistps
push
dec
std
or
les
out
out
mov
and
jae
aad
inc
dec
lret
adc
jecxz
jmp
jge
pop
push
jecxz
dec
mov
push
adc
call
jnp
sbb
or
outsl
mov
arpl
arpl
sbb
or
pop
aad
call
dec
rorb
dec
lods
je
push
in
adc
cmp
push
sbb
jg
into
add
lock
mov
sub
xchg
jl
lcall
and
lea
inc
cmp
orl
test
arpl
mov
jne
in
decl
xor
jp
xchg
cmp
push
leave
call
shl
insb
rolb
ret
sub
mov
aas
hlt
pop
push
jae
xchg
ss
call
outsl
and
lret
sub
fs
je
and
push
aam
mov
cmpsb
mov
aas
sahf
aad
stc
add
mov
and
add
lcall
mov
xchg
call
outsb
cmp
sahf
dec
das
in
dec
lods
mov
fdivrp
jbe
sbb
pushl
popa
and
imul
loop
cltd
sub
insl
mov
pop
jp
pushl
push
add
rcr
aaa
add
mov
int3
test
lahf
fdivrs
dec
ljmp
lock
mov
cmp
push
cwtl
add
adc
jo
sub
lock
decl
lret
and
les
sti
movsb
jp
dec
mov
push
jg
lret
xchg
out
rorb
adc
sbb
jg
add
pop
lret
sarl
jb
sbb
aam
mov
inc
sub
xchg
scas
nop
xchg
in
lds
ljmp
pop
xor
movsb
fnstenv
cmp
inc
jae
and
pop
js
add
pop
pop
call
cld
inc
add
decl
pushw
and
dec
bound
sub
pushl
mov
jbe
xchg
adc
andl
imul
ljmp
pop
mov
push
sahf
mov
testb
movl
lcall
jnp
nop
dec
fnsave
mov
adc
cmp
pop
incl
push
mov
lds
aaa
inc
mov
jno
int
out
cmp
mov
das
mov
je
mov
pop
mov
jnp
push
stos
dec
mov
jg
mov
int
add
repz
cmpsl
clc
imul
push
mov
in
push
movsl
add
adcl
add
mov
inc
test
ret
incl
adc
sub
cmp
and
mov
jo
cmpsl
cwtl
xor
cmp
mov
int3
push
call
imul
cmp
push
mov
xchg
cmp
jae
out
dec
daa
dec
mov
test
std
xchg
ficoms
rorb
gs
call
jp
xchg
add
arpl
inc
pop
repz
mov
nop
arpl
and
sahf
jl
xchg
insl
decl
sarb
aaa
mov
jmp
daa
mov
cmp
or
stos
cmc
inc
jl
loop
test
jmp
fs
push
mov
xchg
dec
jo
test
shl
movq
jmp
push
cs
cmp
xchg
pop
aad
adc
dec
or
cmp
ja
dec
sarl
test
pop
call
aas
int
jbe
and
rorl
test
cmpsl
xchg
mov
icebp
dec
pop
cmp
movsl
mov
test
ficompl
sbb
mov
mov
lcall
jbe
in
ljmp
addr16
push
xchg
ss
mov
fwait
clc
add
loop
sbb
lcall
lcall
fcoml
xchg
jge
pusha
hlt
mov
movsb
push
data16
fnstenv
inc
in
sbb
jmp
sahf
nop
adc
and
cmp
test
ja
addr16
xor
pop
mov
incl
and
mov
stos
cwtl
pop
out
jae
call
lds
inc
jle
mov
and
add
xor
jp
add
add
shl
cwtl
call
lock
cmp
mov
nop
subl
in
push
xchg
hlt
ret
bnd
mov
pop
decl
dec
inc
sub
shrb
mov
fnstsw
cltd
mov
or
decl
popa
scas
push
js
insb
pop
imul
pop
inc
into
andb
adc
or
shl
add
jmp
or
pop
jns
xor
pop
bound
sub
lea
leave
push
mov
jmp
sbbl
out
mov
les
iret
ds
pushf
and
pushl
mov
fsubl
xchg
inc
push
jecxz
je
mov
adc
dec
jle
repz
mov
inc
sbb
outsb
in
cmc
or
xchg
inc
push
xorl
jecxz
hlt
sbb
arpl
inc
xor
inc
loope
cmp
sbb
ss
clc
test
into
mov
ljmp
pop
ljmp
lahf
push
jbe
mov
sub
xor
lds
cmp
ljmp
andl
jle
sbb
push
clc
mov
mov
cmp
xchg
je
decl
mov
call
fmul
fimull
cmpsb
outsl
decl
xor
mov
rolb
test
cmpsl
into
mull
call
xchg
cmp
sbb
sbb
mov
mov
loop
jae
pusha
in
call
sti
push
repz
andb
shll
fistpl
out
fwait
ds
sub
cmp
call
dec
cltd
xor
jnp
pusha
mov
aaa
adc
xor
jle
add
stc
ljmp
jp
das
or
out
xor
ljmp
sbb
push
mov
gs
ror
lret
sub
dec
sbb
jg
xor
in
and
sub
xchg
cmp
jo
pop
clc
lret
xchg
enter
adc
fisubl
loope
mov
cmpsl
out
sbb
pop
push
xchg
lcall
push
xor
test
mov
sbb
sub
jmp
xchg
push
jg
mov
dec
add
jno
cmpsl
push
or
xchg
mov
aas
cmp
mov
insl
movl
xor
in
and
addl
adc
hlt
push
sub
ljmp
add
popf
inc
cmp
in
imul
cmp
xor
rorb
pop
daa
push
int
fcomi
mov
or
inc
mov
mov
jnp
and
decl
mov
in
lods
mov
outsb
aaa
fidivs
push
and
incl
cli
push
cmp
dec
dec
in
pop
jmp
jg
repz
fadd
inc
dec
jge
movsb
and
inc
or
jg
fnsave
je
or
or
stos
inc
pop
sahf
subl
pushl
mov
jp
jnp
roll
xchg
int3
mov
jmp
xchg
fs
pop
adc
movsb
lock
xchg
cmp
popa
xor
jl
inc
jae
in
push
sub
push
ds
lods
mov
fldcw
test
xor
fcmovbe
js
call
cld
jl
and
sbb
xchg
pop
stos
and
ds
dec
in
cmp
mov
sbb
ret
in
icebp
inc
mov
jge
xlat
mov
daa
out
cmpsb
adc
adc
decl
and
push
out
mov
test
push
xchg
out
jmp
push
mov
pop
dec
push
cmp
jne
scas
push
dec
iret
push
call
vpsrld
push
cmp
mov
push
xchg
insb
pop
stc
fildll
aas
xlat
xchg
sbb
fstps
mov
incl
movsb
hlt
test
push
mov
cltd
test
out
pop
cli
jne
in
cwtl
incl
sarl
cmpsl
mov
divl
xchg
nop
les
loop
jmp
cli
sbb
test
dec
jne
loop
test
mov
and
fdivs
cmp
inc
push
adc
repz
into
sbb
cs
jnp
mov
mov
ds
add
call
das
not
aam
cmpsb
mov
or
mov
rorl
fcos
call
ret
call
cmp
scas
repz
std
leave
lock
in
push
xor
lcall
punpcklbw
mov
adc
cmp
mov
dec
pop
cmc
decl
push
jb
mov
sbbl
pop
mov
xor
dec
push
pushw
sub
mov
jmp
mov
mov
add
mov
cltd
fildl
popa
stos
inc
xor
fcomps
xchg
fwait
jno
lea
sbb
popl
sub
fsubrs
inc
dec
ja
sbb
sbb
jl,pn
data16
lcall
adc
fcoms
xchg
dec
pop
fs
jl
sub
xchg
loopne
jno
call
sbb
cltd
leave
fwait
xchg
dec
jnp
push
jl
flds
pslld
mov
sub
xchg
repnz
decl
mov
enter
or
and
xor
ljmp
ds
inc
stos
push
popa
cmpl
lret
dec
iret
xchg
ret
fs
pushl
imul
and
dec
push
sub
repnz
xor
fidivs
sarl
shl
fcomip
mov
xlat
or
xchg
xchg
sub
mov
loop
adc
cld
sbb
pop
aad
decl
adc
fwait
decl
sub
pop
add
pusha
scas
push
in
subl
lret
aad
xor
decl
neg
mov
lret
push
cltd
sub
dec
int3
jp
es
sarl
fldenv
jns
xchg
jnp
mov
pusha
fsubr
adcl
xor
or
std
xchg
imul
inc
dec
push
mov
xchg
jmp
lcall
jno
adc
divb
mov
ja
sbbl
aas
mov
pusha
sti
insb
dec
dec
imul
dec
push
les
orb
push
xor
cld
inc
pop
pushf
je
sbb
lcall
pushl
lods
movsb
sbbb
stc
sbbl
rorb
iret
inc
es
xchg
ret
inc
enter
mov
fwait
jg
les
cmp
push
push
xor
cmp
inc
adc
imulb
push
loopne
push
sti
stos
dec
lods
jmp
aas
cmp
push
sbb
ljmp
and
ja
dec
decl
ljmp
les
out
sub
aad
loopne
and
decl
fbld
pushf
ss
or
ja
push
cli
pop
test
outsl
add
adc
iret
daa
mov
std
jmp
addr16
inc
jmp
jg
clc
test
inc
sbb
sbb
mov
push
and
cmp
xor
incl
sub
cli
into
shll
adc
add
pop
add
sbb
sbb
mov
mov
and
xor
adc
mov
xchg
hlt
cmpsl
push
add
or
xchg
incl
cwtl
mov
int
in
jp
popa
inc
test
inc
inc
push
stos
and
push
fnstsw
mov
xchg
loopne
dec
mov
sub
xchg
mov
pushl
rcl
jns
test
daa
push
data16
or
cld
mov
mov
into
es
sbb
insl
out
int3
pop
sbb
enter
out
push
pop
cmp
adc
sbb
jbe
jp
pop
sub
cmp
adc
decl
decb
pop
pop
fldenv
mov
rcrl
jnp
or
mov
loopne
mov
call
shll
stos
sbb
cmp
ret
mov
push
cltd
out
adc
sbb
out
out
jle
pop
clc
cmp
mov
mov
cwtl
mov
mov
or
pushl
sarl
or
and
xchg
xchg
notl
mov
pusha
cmpl
scas
add
std
call
xlat
pop
jecxz
and
inc
jge
jg
sub
sti
and
scas
psllq
pop
aaa
fldpi
out
xchg
arpl
call
test
sbb
dec
test
loope
xchg
dec
in
test
hlt
pushl
mov
cld
test
push
in
int3
or
sbb
lret
arpl
imul
jb
popf
add
testb
pop
xor
and
pushl
or
ds
mov
ret
jmp
adc
mov
sub
lcall
in
mov
fsubrp
pop
stos
push
out
insl
pusha
pushf
sub
sbb
sbb
jp
cmp
dec
icebp
xchg
xchg
sbb
into
std
xchg
sbb
adc
jae
sub
xor
call
lods
lahf
or
fs
outsl
pop
in
adc
inc
cmpsb
push
inc
out
or
cwtl
fcomp
fdivr
xor
in
mov
jge
cmp
je
push
pop
scas
inc
test
or
in
int3
jl
das
pusha
std
sahf
out
mov
lock
and
ret
dec
push
add
jge
lock
jg
and
inc
mov
push
aas
dec
fstps
push
adc
cmp
mov
mov
jmp
pop
call
inc
push
adc
add
mov
ljmp
es
and
cmpsl
faddl
mov
out
push
pop
ss
les
inc
mov
call
add
daa
or
xor
imul
call
push
fwait
push
xchg
mov
add
xchg
bound
add
cmp
in
shlb
aaa
sub
sbb
fsubs
cmp
loop
jl
xchg
mov
frstor
adc
in
addl
icebp
jo
jnp
adc
xor
add
sahf
cmc
call
jge
lds
add
test
inc
pushf
in
xor
pusha
push
mov
pushl
dec
dec
ja
cli
imul
xlat
out
bound
add
inc
dec
dec
ficompl
mov
pushl
gs
jno
es
mov
xor
sub
inc
cmp
fldt
lahf
sbb
mov
sbb
cmp
xchg
and
aad
sbb
mov
out
sbb
adc
int
rcr
std
call
pop
xor
mov
popf
add
xchg
mov
aaa
jb
push
push
sbb
add
jbe
jnp
pushl
das
or
pop
loope
lcall
push
fsubs
mov
jae
and
incl
mov
push
scas
sbbb
cmpsb
add
inc
fmull
and
ret
ljmp
mov
outsl
mov
sbb
decl
lea
repnz
or
dec
mov
add
in
and
call
jecxz
jge
pusha
adc
lret
mov
jmp
call
sbb
dec
pop
sbb
jbe
jle
sbb
push
repnz
jbe
ljmp
add
daa
out
cmpsl
mov
rcrb
xor
mov
xlat
mov
xlat
push
loope
out
cmp
push
or
or
cmp
pop
cltd
pop
das
xchg
lods
lods
fcomip
jg
add
jmp
mov
mov
loopne
adc
pop
mov
imul
mov
jle
mov
and
cwtl
push
incl
xchg
or
jns
lcall
mov
ljmp
sahf
fbld
or
jg
xor
fmulp
add
pop
aam
and
lods
mov
aam
imul
stc
shrb
push
call
int
rcll
sub
andl
dec
stc
testb
aaa
std
pop
jle
jecxz
add
push
sub
dec
sbb
js
subb
arpl
add
les
sub
call
incl
decl
sub
fwait
mov
lahf
dec
sub
add
ss
mov
adc
push
sbb
or
cmp
ret
cmp
sbb
push
cmp
movsl
pop
movsl
fs
push
nop
popa
das
push
int3
mov
sub
call
incl
dec
loop
cmp
nop
repnz
push
xchg
int
cld
leave
cs
aam
jae
jmp
rol
es
push
adc
mov
shrb
in
rcrb
dec
lret
fbstp
inc
cmp
pop
cmpsl
push
bsf
mov
xor
sub
xlat
lock
lret
xor
sbb
xor
or
loopne
add
mov
movsl
jg
clc
mov
lods
stc
mov
xor
jle
ljmp
loope
xor
add
dec
mov
xor
dec
cmp
push
lret
inc
arpl
out
rcl
outsb
cmp
mov
fwait
xor
icebp
adc
gs
jns
pop
add
repz
and
adc
adc
sub
inc
call
jp
mov
repz
test
push
mov
aas
cmp
fwait
fcomip
js
or
mov
pop
adc
outsb
push
jge
dec
in
fcoml
sub
out
add
push
aam
adcl
and
mov
mov
lcall
roll
in
rdpmc
push
incl
loope
int
jae
cld
in
cmp
xchg
jb
add
lds
repnz
fistpll
pop
mov
gs
and
pop
sbb
ja
fs
aaa
and
mov
xor
mov
and
int
add
pushl
mov
dec
iret
lret
mov
mov
pop
pop
lds
and
dec
mov
inc
fs
xlat
repnz
cmp
dec
les
addr16
scas
inc
jne
call
stc
ja
xor
cmpsb
mov
addb
ret
cmpsb
rorl
gs
dec
enter
lcall
cmpsl
arpl
pop
xchg
dec
fdivl
push
fdivr
mov
stos
cmp
aam
lock
daa
dec
dec
ss
xor
cmpsl
popa
pushl
inc
sub
rcll
inc
pop
pop
out
orl
mov
mov
xor
ss
ljmp
xor
into
test
insb
pop
dec
lods
call
stc
mov
xchg
sbb
inc
imul
jg
pmulhw
or
pop
add
jae
fiaddl
out
lret
pop
pusha
add
jp
loop
mov
pop
in
aaa
adc
ja
dec
cmp
repz
and
mov
shlb
jne
gs
push
out
fidivrl
outsb
cmpsb
fwait
pop
lods
flds
jle
lods
cs
cmpsl
sub
inc
fsub
decl
leave
int3
sbb
aad
mov
xchg
sti
xchg
test
and
ret
enter
jecxz
ds
fcomip
mov
inc
mov
pop
daa
fadds
test
push
xchg
fnstsw
jmp
insb
push
shll
shll
adc
and
aad
inc
mov
add
xchg
xor
mov
movsl
popa
pushf
adc
lcall
das
push
sbb
mov
sub
movsl
xor
mov
xchg
dec
je
shr
stos
lcall
jmp
popf
xchg
xchg
in
frstor
adc
mov
mov
inc
jge
or
stos
incl
das
mov
hlt
cmp
in
xchg
out
xchg
jmp
and
add
adc
mov
mov
sub
adc
dec
pop
and
sahf
cwtl
addr16
call
push
dec
insb
cwtl
std
lcall
mov
shrb
or
pop
daa
sub
lcall
dec
or
mov
out
xchg
out
jp
or
imul
mov
pushl
insb
js
cmp
cmp
ret
sbb
ret
in
std
inc
hlt
pusha
popa
int
fsubp
into
pop
cpuid
cltd
dec
cld
mov
add
mov
adc
jmp
mov
sti
rorb
pop
shrb
cmpsl
mov
pop
pop
inc
cmpsb
decl
lock
out
dec
das
into
sbb
or
lcall
clc
rcrb
and
adc
jl
cld
dec
notb
fcomps
mov
dec
dec
cwtl
cmpsl
cwtl
jns
adc
int
hlt
sub
add
int
or
movsb
jmp
jnp
pushl
int
pop
pop
fadd
je
into
lods
fimuls
shrb
jmp
fcmovne
mov
shlb
jg
incl
aad
push
xor
cs
pop
xor
cmpb
mov
and
lea
aam
lret
mov
popa
push
shll
or
jp
rep
sub
push
mov
aaa
push
clc
test
mov
shrl
pop
sahf
dec
mov
xor
std
pop
fdivr
inc
test
sbb
add
shl
mov
scas
adc
fidivs
negb
call
icebp
addr16
mov
rcl
or
sbb
stc
push
stos
cmp
mov
rcrl
pop
add
mov
fistpl
cltd
aaa
pop
rolb
test
adc
inc
xor
incl
sbb
cmpsb
js
insb
and
jg
je
mov
lcall
rol
sub
fsubrs
sbb
jmp
pop
pop
mov
sbb
pop
loope
call
test
out
mov
push
mov
cmp
mov
xchg
outsb
jg
jg
mov
cmp
mov
dec
icebp
dec
cmp
in
insb
sbb
inc
sbb
adc
incl
push
cmp
js
sbb
and
fwait
add
cmp
jmp
sbb
fidivs
cs
jnp
ss
insb
push
daa
pop
jp
aas
jo
addr16
jmp
imul
mov
test
aaa
pop
das
popa
sub
adc
xor
lds
adc
jmp
addb
push
lcall
pop
inc
out
or
loope
mov
test
shll
add
jg
test
nop
jno
push
stc
mov
adc
lcall
mov
add
loope
jle
mov
jg
cmpsl
dec
sbb
pushl
addr16
jmp
nop
int3
jle
and
dec
sub
aaa
idivb
inc
clc
jg
into
js,pt
loop
sbb
int
xchg
ss
movsl
inc
mov
xor
jg
decl
dec
fadd
mov
jge
sub
xor
cmp
inc
gs
dec
sahf
jg
push
shrb
and
push
cmp
testb
divl
dec
dec
mov
lcall
data16
clc
mov
nop
in
mov
inc
dec
mov
or
push
negb
decl
add
jg
or
mov
in
js
fwait
addr16
pop
mov
mov
mov
and
and
cmpsl
call
mov
pop
mov
lock
pop
and
dec
pop
in
push
es
pop
xchg
in
push
pop
outsl
mov
dec
xor
xor
lods
out
mov
push
adc
dec
xchg
mov
mov
fbstp
jle
decl
cmp
mov
loop
shll
sub
fdivp
pop
sahf
les
loopne
sarl
enter
jne
mov
pop
mov
push
out
pop
sub
push
std
decl
sub
xchg
xchg
and
in
jmp
nop
sub
decl
push
lcall
pop
ljmp
test
in
sti
test
pusha
pop
cmc
incl
insl
jne
ret
mov
push
mov
inc
outsl
mov
imul
and
inc
sub
mov
repnz
bnd
out
les
call
rolb
movsl
test
dec
jo
in
mov
inc
fucompp
push
out
imul
rorl
sarl
jl
out
fs
push
dec
pop
movsl
mov
push
pushf
mov
incl
subl
cmc
iret
dec
pop
lods
dec
leave
imul
dec
mov
adc
jmp
lahf
roll
call
mov
popa
test
popf
lds
std
ljmp
xor
lds
or
call
loop
fcmovne
adc
sti
leave
hlt
sub
shll
call
pop
mov
cld
lcall
push
pop
rcrb
test
mov
das
ljmp
mov
push
xor
pop
push
mov
adc
in
push
loopne
cmp
mov
xchg
xchg
cwtl
leave
ficomps
pushf
out
repnz
mov
bound
adc
out
out
push
bnd
pop
dec
es
add
pop
cmp
cli
jg
pushl
and
data16
jne
stos
mov
push
mov
cmp
jbe
mov
call
and
popf
stos
xchg
and
push
icebp
lods
jae
mov
sbb
je
xchg
icebp
lret
mov
inc
notl
xchg
iret
xchg
scas
movsl
loop
mov
dec
sbb
out
test
pushl
adc
mov
test
xchg
icebp
fimull
mov
lcall
clc
repnz
mov
fcompl
xor
xor
xchg
lods
inc
test
add
ja
pop
mov
push
bound
outsb
add
hlt
add
mov
ds
test
es
ret
mov
mov
sbb
ja
cmp
push
test
loop
popf
mov
movsb
dec
pushl
loopne
or
xchg
mov
sub
xchg
fucomi
or
arpl
incl
jmp
pop
xchg
and
test
sbb
mov
jne
jb
orb
or
je
scas
stc
mov
mov
mov
iret
dec
rol
fidivl
or
lds
jns
stc
pusha
inc
push
out
addr16
xlat
adc
lcall
pushl
inc
inc
bound
call
lods
pop
loopne
scas
int3
icebp
stos
ret
call
dec
ljmp
inc
loopne
scas
test
hlt
mov
fsubl
out
leave
jge
jg
icebp
jns
data16
leave
xor
test
loopne
mov
lret
test
xchg
not
test
int
sbb
stc
je
pop
dec
ljmp
or
jmp
mov
sub
mov
pushf
imull
jge
aam
jg
ret
add
cmp
mov
icebp
push
jno
jmp
push
incl
sbb
adc
pop
pop
xchg
mov
ds
js
xor
add
push
lahf
xchg
call
jge
wbinvd
pusha
fs
fnsave
sbb
cli
aad
scas
mov
adc
lcall
popf
popa
ret
shrb
rclb
sub
outsl
sub
gs
stos
cmc
out
mov
je
pop
jmp
test
cmp
cli
push
mov
pop
daa
mov
clc
push
cli
push
ljmp
xor
popf
xor
rolb
pop
das
xor
adc
decl
xchg
or
dec
shlb
cs
fwait
les
pop
mov
std
ljmp
arpl
daa
and
shl
je
sbb
movsl
lret
int3
lahf
ds
lods
cli
incl
cld
push
jle
xor
xchg
fadds
mov
fsubr
popf
inc
test
mov
popf
loop
inc
cmp
test
test
cmp
mov
xchg
rcrb
jge
lcall
push
adc
dec
dec
ja
add
sub
in
cld
fcomi
ljmp
lret
fistl
lods
mov
ret
pushf
cltd
les
lds
out
xchg
test
cli
gs
imul
movsb
pop
jnp
jns
aam
mov
inc
mov
cmpsl
stc
incl
mov
mov
mov
mov
mov
test
loop
adc
pop
incl
rcll
inc
cmp
pop
jbe
dec
dec
les
xchg
add
ljmp
mov
out
adc
insb
into
or
push
pop
push
push
mov
mov
mov
adc
cmp
xor
mov
daa
sbb
dec
dec
incl
daa
xchg
jge
loope
add
and
and
sbb
js
outsb
hlt
aas
jle
or
cwtl
loope
xor
outsl
jno
inc
xor
sub
ds
lcall
xchg
jns
xor
or
mov
add
imul
jmp
iret
jne
inc
jmp
or
xchg
dec
nop
js
aad
sub
pushl
xor
jmp
dec
mov
inc
add
ret
pop
fstl
dec
mov
push
xor
cli
fxch
cwtl
aaa
out
jmp
sub
cltd
sub
call
inc
lahf
fwait
sbb
imul
mov
ror
and
inc
cmpsl
sub
pushl
aaa
idivb
jae
add
lahf
cmp
and
adc
lods
dec
pop
xor
aad
ljmp
push
xor
push
mov
stos
rol
dec
pop
pop
ljmp
incl
jbe
cs
inc
in
out
sbb
sbb
xor
call
jge
sub
push
lea
cmc
adc
sahf
orl
xor
pop
mov
pushf
mov
dec
in
inc
mov
sbbb
inc
pop
xor
xchg
xchg
arpl
and
aad
cmp
adc
or
jg
rclb
mov
push
add
stos
and
test
pop
test
call
ljmp
or
insb
in
lds
or
push
lea
fcompl
cld
int
clc
mov
scas
or
pushl
mov
je
roll
rolb
add
notl
ret
jg
lcall
test
inc
mov
ljmp
jo
xchg
inc
jg
leave
pushf
push
adc
test
cltd
mov
out
out
flds
imul
cmp
jmp
pop
jle
xor
fwait
xor
gs
push
movsl
imul
jmp
inc
stos
and
gs
lcall
ja
fisttpll
into
addl
lcall
addr16
sbb
cs
arpl
int3
jg
pop
aam
out
loopne
mov
mov
ja
sbb
pmullw
enter
lea
mov
data16
dec
and
inc
repz
jmp
test
pop
and
je
sbb
jno
push
fisubrl
push
pop
testb
or
loope
lods
pop
arpl
mov
jo
pushf
xchg
outsl
out
pop
fwait
idiv
incl
imul
inc
shlb
pop
popa
or
test
ljmp
stc
shrl
pop
mov
mov
repz
dec
xor
out
cmp
xchg
mov
dec
mov
stc
jmp
xchg
sarb
xor
test
je
dec
cmpsb
orl
jmp
je
jl
push
mov
cmc
push
fs
xor
ret
cmp
js
adc
mov
call
or
mov
aas
test
scas
push
movsb
stos
dec
cmpsl
std
push
mov
ret
mov
pushl
negb
les
int
jbe
push
test
pusha
mov
pop
test
sarl
ja
icebp
ss
or
popa
push
adc
pop
lahf
mov
mov
adc
call
adc
mov
push
inc
push
mov
and
inc
mov
pop
cmc
cmp
je
imul
scas
jo
push
cmp
ljmp
nop
sbb
jg
aas
and
insl
nop
cmp
cli
ret
push
dec
mov
inc
imul
arpl
cmc
push
sub
fidivs
stc
xchg
mov
pop
sub
mov
dec
insl
int3
lret
and
test
out
mov
mov
insl
xor
xor
mov
pop
adc
sbb
xlat
hlt
call
or
dec
sub
notb
push
mov
test
mov
rcl
push
out
sub
jmp
pushf
and
or
pop
andnps
push
in
and
add
cmpsb
fs
jle
mov
dec
mov
test
xchg
xchg
popf
pop
icebp
dec
pop
jae
pop
inc
and
inc
xor
jmp
cwtl
jne
xor
add
orb
lods
and
pmaxub
movsl
dec
movsb
outsb
push
repz
lcall
xchg
mov
js
movsl
int
xorps
lods
cmpsb
xor
stos
inc
mov
nop
dec
jb
cltd
or
mov
ljmp
mov
or
sbb
scas
sbb
hlt
mov
in
loop
push
jmp
push
cmp
cmp
jmp
out
call
ret
xchg
fists
rclb
sbb
call
hlt
test
xlat
loopne
xchg
call
fsubrs
adc
pop
push
inc
and
xor
call
ds
jae
jnp
pop
subl
pushf
add
popa
popf
xor
incl
lods
mov
jp
jecxz
out
fldcw
mov
push
push
jge
sbb
loop
pushl
jns
fcmovb
lcall
imul
mov
mov
xlat
movsb
mov
pop
jecxz
jg
and
pop
popf
push
mov
push
inc
jecxz
test
inc
mov
jge
stos
loope
loop
loopne
stc
push
jmp
out
lahf
loop
and
jb
ljmp
lcall
or
mov
sbb
bswap
rorb
aaa
fstps
pushl
loop
or
pop
mov
inc
lods
and
jne
xchg
sub
insl
mov
clc
mov
pushl
div
cli
lcall
scas
cmc
sub
or
or
mov
mov
cmpl
cmp
mov
lods
aas
jecxz
mov
out
add
shlb
sub
incl
fiaddl
int3
xor
insb
sub
repnz
and
lcall
ljmp
add
imul
jae
xor
ficompl
or
jmp
or
mov
lcall
out
dec
aam
push
cmpsb
and
mov
and
and
fadds
jle
xchg
xor
pushl
ret
cli
pop
std
jae
xor
sub
aaa
inc
js
lods
sbbb
incl
cld
jl
stc
sub
out
or
and
in
cld
data16
mov
jbe
fwait
push
arpl
loope
mov
mov
sbb
sahf
aad
pop
pop
shll
push
incl
pop
or
aas
pop
rclb
mov
insl
inc
outsb
dec
fisubrl
int3
cmpsl
push
ljmp
ljmp
roll
incb
jbe
lcall
mov
out
dec
das
idivl
fcoml
pop
js
or
out
fcmovnb
or
sub
outsl
add
or
mov
int
push
pusha
push
and
lock
ljmp
adc
xlat
dec
cmp
pushf
xorb
cmp
shl
adc
jbe
bound
test
mov
pop
mov
cmp
pop
addr16
xchg
dec
out
mov
and
jge
xorl
and
loop
mov
lea
vcmppd
sub
je
jnp
cmp
cwtl
fnstcw
lret
lds
jecxz
cli
cmp
xchg
rorl
pusha
mov
cmp
incl
mov
into
loop
mov
jb
add
mov
ret
xchg
jle
jge
nop
cwtl
adc
pop
sbb
adc
ljmp
jne
xchg
dec
mov
jecxz
push
dec
int
icebp
hlt
lods
sbb
jmp
ja
mul
pushf
rcll
nop
repnz
ss
stos
jl
lock
incl
les
dec
addl
or
adc
sub
push
cld
addr16
dec
or
sbb
out
mov
push
decl
xchg
orb
outsl
ljmpw
pushf
aas
cmpsb
mov
fcoms
out
push
test
cwtl
dec
sbb
jle
mov
jg
mov
movsb
sub
out
sbb
mov
test
add
fdivs
call
ds
pop
mov
cltd
dec
xchg
cmp
testb
ja
ret
mov
inc
push
popf
ss
sub
lcall
jl
jb
faddp
mov
int3
adcb
leave
fcos
das
cli
jmp
cmp
or
adc
push
aaa
movsb
ljmp
rorl
mov
out
ret
fcoms
pusha
out
jnp
test
dec
mov
lret
sbb
pushl
test
pop
sub
sbb
dec
cmpsb
inc
jbe
cmc
jmp
inc
cmp
repnz
jge
or
sbb
lcall
outsb
insl
push
add
repnz
push
es
outsl
loopne
jmp
add
data16
xor
enter
inc
shlb
adc
push
insb
arpl
aad
incl
cmp
dec
sbb
pop
ss
add
pop
rorl
decl
inc
jbe
cmp
cmpsl
ljmp
xchg
jmp
out
sbb
push
mov
pushl
fsubs
cmp
adc
repz
nop
shlb
int
mov
cmp
jns
mov
pushl
mov
sbb
push
sbb
adc
in
or
xor
aaa
lcall
jne
push
mov
mov
or
jle
xor
mov
xor
inc
jle
cmpsb
pop
xor
inc
pop
lcall
ds
hlt
in
loopne
push
adc
or
test
and
push
xorb
incl
lcall
test
aaa
dec
push
arpl
ljmp
inc
ds
pop
outsl
addb
dec
push
or
sub
or
cmp
dec
lahf
stos
pop
mov
out
mov
or
xchg
dec
add
imul
inc
mov
sti
movsl
in
add
emms
pop
std
std
ljmp
jp
mov
cmpsl
rcr
xchg
push
pop
sbb
ds
test
push
dec
lcall
and
aas
in
dec
xchg
push
xchg
bswap
sarb
push
sbb
inc
out
mov
and
cmp
pop
addr16
ljmp
sub
add
dec
sub
xchg
dec
js
jle
aad
sub
cmp
mov
ret
imul
xchg
data16
mov
jmp
mov
pop
leave
stos
lret
jns
cmp
or
pushl
sub
adc
xor
mov
jne
mov
jge
es
ror
ja
adc
pop
cwtl
ret
mov
test
cmp
jmp
call
jae
pop
repz
ficoms
mov
pop
mov
fcoms
aaa
sarl
or
inc
out
jmp
iret
les
xchg
adc
adc
lcall
push
jmp
cmpsl
iret
scas
dec
sti
cmp
xchg
bound
push
cltd
sbb
adc
jbe
bound
cmp
xor
push
or
push
arpl
test
inc
in
imul
mov
fmuls
dec
mov
ljmp
push
lods
rorb
push
fs
or
cmp
mov
cmp
dec
ljmp
ljmp
repz
les
rclb
fwait
stos
push
xlat
lret
out
aad
bound
jmp
les
adc
mov
mov
and
adc
daa
mov
fdivs
call
adc
incl
fimuls
fsubs
popf
dec
push
incl
pushl
lds
push
cltd
out
mov
fdivr
mov
add
loopne
ds
ljmp
add
aad
xor
jno
int
in
outsb
push
aad
out
inc
cmpsl
jb
cmpsb
icebp
cli
jmp
xor
sbbb
jl
imul
fstps
push
jmp
out
es
movsb
or
cltd
or
cmp
lds
repnz
out
sub
jo
push
cld
leave
fs
fcoms
mov
ss
imull
call
push
sbb
adc
mov
rcrb
lret
cmp
decl
or
clc
add
pop
inc
jle
push
in
sbb
push
out
or
mov
rcrb
incl
push
push
adc
lods
cmp
inc
xchg
pop
lock
mov
cmp
clc
sarl
pop
sub
addr16
mov
in
mul
rolb
gs
incl
in
pushf
js
js
lock
sbb
mov
sub
rcrb
sbb
xor
stos
mov
xlat
dec
sbb
loopne
in
mov
cmpsb
call
jg
nop
mov
in
adc
adc
repnz
jmp
movsb
pop
jge
leave
je
sbb
sbb
je
adc
pushl
incl
rclb
hlt
aaa
hlt
jle
or
arpl
loop
mov
pop
jnp
orb
lret
and
ror
clc
jnp
popa
stc
pop
outsl
xchg
es
and
decl
sub
ret
in
repz
arpl
aaa
int3
leave
in
jecxz
and
pop
lods
cltd
sahf
stos
pushf
out
lock
mov
sub
rorl
xor
mov
jb
inc
inc
rol
icebp
pop
call
dec
call
add
add
outsb
jg
fistl
lock
lahf
repz
insb
out
xchg
and
sti
icebp
lea
incl
lret
pop
dec
es
call
and
cltd
mov
mov
add
inc
pop
fs
rolb
pusha
cmpb
xor
insl
sti
and
scas
fdivrs
pop
enter
or
fiaddl
cmpsb
aad
dec
fsubl
ljmp
pushf
in
in
cmp
sbb
adc
lods
mov
testb
xchg
int
pushl
push
xchg
xchg
cwtl
pop
in
push
dec
stos
lds
and
jecxz
cmp
mov
fstl
ficoms
mov
cwtl
adc
jbe
mov
jmp
or
hlt
roll
xor
sbb
insl
dec
sub
fcmovbe
ss
push
pop
in
mov
test
incl
negl
clc
ss
test
xchg
xor
test
pop
mov
imul
cwtl
or
inc
jmp
xor
mov
loope
pop
sbb
push
cmpsb
lcall
lahf
lods
mov
jl
es
inc
lods
es
psubsw
sub
lret
sub
xchg
mov
xchg
push
adc
mov
cli
adc
adc
inc
ds
inc
outsl
clc
outsl
push
cwtl
xor
ljmp
jg
decb
iret
mov
imul
sub
pushl
sub
imul
ficompl
subl
into
push
cmp
jmp
lods
roll
jo
dec
test
jle
testl
test
jmp
jg
out
addr16
jnp
ror
cmc
mov
cmpsb
insl
jle
lock
xor
mov
pushl
pop
mov
iret
xlat
push
inc
push
fstps
xchg
cmp
jbe
sbb
and
into
mov
pushf
lcall
mov
cmp
fwait
mov
push
xchg
lods
pop
leave
push
cwtl
hlt
mov
jl
cmpsb
jo
decl
and
pop
fucomi
dec
jl
mov
ja
xchg
cmp
imul
in
in
sub
pop
decl
and
jno
test
out
xchg
mov
in
dec
sub
adc
mov
in
lock
stos
test
lods
aaa
std
call
rclb
mov
xchg
mov
outsl
push
sbb
int3
iret
aad
push
jge
jg
mov
iret
xchg
push
mov
sub
push
sbb
add
imul
incl
stos
xchg
je
mov
jns
or
mov
jo
xchg
mov
scas
aad
lahf
jne
jmp
cmpsl
aaa
xor
mov
dec
jge
dec
fnsave
cmp
dec
icebp
imul
jo
pop
inc
sbb
cwtl
js
jo
insl
mov
incl
out
mov
xor
push
das
lods
jae
pop
fcmovu
test
test
inc
sub
jno
or
outsl
pop
out
fwait
jbe
mov
mov
jo
mov
ljmp
fs
cmc
out
inc
shl
cmp
aam
sar
adc
popf
cmp
sbb
jnp
sub
mov
pusha
ja
dec
dec
push
test
div
clc
sbb
sbb
call
sub
cmp
jae
mov
cmp
dec
jbe
xor
jmp
fbstp
cmpsl
outsl
inc
test
popa
rcrb
inc
scas
ja
in
xchg
fildll
pop
gs
cltd
lcall
sub
jecxz
sub
stc
inc
test
mov
scas
and
push
out
dec
mov
adcb
pop
and
das
pop
out
jmp
adc
nop
daa
inc
ds
adc
mov
incl
xor
and
bound
enter
mov
jle
pop
lahf
xor
imul
incl
sub
pop
in
jl
mov
adc
inc
int
lds
std
jmp
aaa
je
jl
gs
xchg
adc
mov
cmc
pusha
in
jnp
sbb
iret
call
es
adc
test
or
nop
xor
push
mov
scas
cmpsb
mov
lods
and
dec
jmp
sarb
xchg
mov
inc
mov
incl
pop
js
test
leave
adc
mov
popf
xor
arpl
sub
jmp
sti
sub
jge
push
in
iret
andl
pop
mov
jmp
mov
adc
cmp
mov
in
lret
xchg
push
dec
daa
lahf
insl
jl
or
ljmp
ds
or
lock
ret
mov
mov
or
mov
adcb
ds
das
cmpsb
jg
dec
push
scas
out
jge
xor
mov
cmp
jle
lahf
jle
fidivrl
jg
sub
xor
pop
xchg
and
mull
mov
xor
jae
xlat
fildl
lcall
pop
push
inc
sti
mov
xor
stos
jl
push
mov
xor
push
or
cltd
mov
shrl
call
mov
nop
pop
sub
xchg
test
imul
pop
cmp
mov
iret
in
jb
inc
icebp
jmp
pop
out
es
repz
push
and
lcall
mov
push
push
xor
and
pop
rol
in
sbb
sbb
in
pushl
jg
and
push
in
and
adc
je
es
cld
cld
push
sbb
mov
mov
lcall
es
insl
mov
cs
into
xor
mov
pop
gs
in
sarl
idiv
jg
in
ret
cs
out
out
insb
outsl
xor
enter
or
clc
js
in
sar
jne
xchg
dec
xor
dec
or
sub
push
sub
aas
jae
xchg
in
ljmp
jge
mov
sbb
loop
cmp
sbb
inc
lcall
fisubs
xor
add
mov
cmp
cmc
xor
inc
leave
jecxz
jnp
icebp
xchg
xchg
add
enter
mov
mov
mov
hlt
fsubrl
xchg
sub
popf
push
es
mov
add
test
lcall
icebp
sub
scas
jae
mov
or
fwait
mov
cmc
sub
or
mov
add
pop
mov
adc
fsubr
or
clc
inc
popa
out
pushf
out
int
ret
in
in
outsl
mov
or
jg
sahf
mov
movsb
cmp
jg
dec
push
cltd
sbb
mull
ja
ja
bound
mov
mov
js
cmp
jmp
mov
rclb
movsb
addr16
lcall
lret
out
push
clc
pop
outsl
imul
fst
and
jns
enter
pop
add
into
push
outsb
in
jp
dec
jl
sub
adc
out
fdivl
adc
scas
mov
xchg
pusha
xchg
or
aaa
xchg
push
push
into
xchg
ljmp
clc
ljmp
sbb
fimull
cmc
cmp
inc
ret
xor
outsb
daa
sub
pushl
mov
outsb
and
bound
lret
pop
es
fwait
icebp
or
pop
inc
push
jo
cmp
mov
or
jmp
mov
add
adc
dec
decb
in
mov
sbb
or
in
int
decl
xor
mov
leave
ljmp
xchg
pop
pop
jg
cmp
lcall
fcompl
int3
cs
xchg
jmp
repnz
fstl
xchg
xlat
xchg
cld
xor
inc
inc
jno
pushl
aaa
aaa
push
popa
mov
je
dec
jp
mov
aaa
lret
mov
pop
std
call
std
pusha
cmp
dec
push
js
dec
push
add
fwait
xor
sbb
movsb
in
fdivs
mov
lds
aaa
addl
jg
decb
jo
xor
jne
hlt
push
cli
lcall
mov
mov
test
cmpsb
push
pop
movsb
add
sbb
or
dec
in
out
xchg
mov
xor
cmpsb
iret
mov
repz
call
ds
mov
fidivrs
pop
and
nop
sbb
icebp
hlt
leave
insb
mov
pop
ret
xchg
enter
ljmp
dec
popa
addr16
dec
dec
sbb
into
ret
push
adc
lahf
in
in
fcoml
rol
loope
pushl
fistpl
jg
mov
repz
dec
dec
pusha
sub
pop
cs
pop
push
decl
pop
leave
pop
icebp
shlb
jno
xchg
fildl
pop
in
inc
cmpsl
pop
loop
cmpsl
jno
fwait
in
jno
cltd
aad
subb
pop
int3
lret
test
leave
test
cmc
sub
sbb
mov
lahf
call
push
aas
jp
sub
fistpll
dec
sahf
ret
push
pushl
std
jmp
xlat
js
mov
es
scas
bound
test
gs
adc
xchg
inc
std
xchg
pop
sbb
dec
mov
xor
stos
lcall
daa
imul
xchg
mov
pushl
mov
and
and
push
out
jmp
call
add
mov
in
arpl
test
push
jp
bsf
inc
sbb
fldcw
mov
ficoms
out
xchg
jb
push
cmpl
es
mov
test
nop
loope
mov
dec
jp,pn
jne
call
scas
add
mov
adc
rorb
fwait
popf
sahf
xchg
icebp
mov
call
clc
pop
jnp
pop
cmpsb
and
outsl
push
imul
mov
fstl
into
stos
inc
cmp
std
sub
xchg
cmp
push
and
sar
je
subb
aas
or
add
cmp
imul
ud0
decl
add
subl
sbb
sub
enter
decl
lock
dec
xlat
notb
pop
pop
add
dec
push
xor
idiv
ret
mov
decl
nop
rol
lcall
xlat
add
cwtl
adc
and
cmpsl
and
enter
pop
scas
clc
ljmp
pop
mov
add
mov
int
cwtl
mov
inc
loopne
jmp
mov
push
or
call
mov
mov
shrl
cs
mov
pop
jmp
jne
cmpsl
jb
lods
cltd
fnstenv
push
scas
call
sbb
push
shrl
inc
cmp
pop
and
outsb
les
xchg
mov
push
rcl
rorb
cmpsl
aam
sub
repz
mov
mov
mov
inc
incl
les
mov
shll
das
xchg
lcall
sbb
ret
rclb
push
mov
or
std
pop
jecxz
and
xchg
or
loope
xor
ljmp
je
adc
xchg
repz
icebp
xlat
or
mov
rcrb
jmp
adc
hlt
movsb
lds
cltd
aas
shll
test
loope
add
out
add
decl
testl
insb
jb
add
adc
cmp
rol
add
mov
stc
ljmp
scas
fildl
fidivl
cmp
out
adc
inc
inc
sti
outsl
jmp
sbb
inc
aad
jbe
jp
inc
pushf
out
int
pop
cmp
xor
mov
mov
dec
data16
inc
sbb
leave
scas
or
ljmp
inc
mov
lcall
nop
mov
mov
shll
outsb
pop
pop
pushf
xor
or
iret
sub
mov
mov
adc
rorl
xchg
test
inc
insl
jle
sbb
shl
jns
sub
mov
jg
lcall
gs
popf
sub
dec
jge
and
jg
inc
rclb
cs
jbe
in
jne
bound
fimull
xor
sub
decl
xchg
jne
pop
sbb
imull
add
jae
push
xor
into
cmpsl
int3
icebp
dec
loope
dec
push
sbb
div
stos
push
push
scas
sub
pop
decl
aas
iret
mul
sub
fisttpll
mov
mov
mov
xchg
jmp
jge
mov
daa
mov
ljmp
push
cld
outsl
out
in
lahf
ss
int3
pusha
sub
mov
xchg
lock
push
ficompl
mov
push
lcall
push
nop
fidivs
jg
xchg
adc
adc
sbb
stc
repz
ret
aam
mov
shl
push
scas
xor
std
pushl
pop
inc
pop
sbb
repz
push
cmp
dec
inc
inc
push
push
int
adc
scas
dec
mov
jae
push
mov
adc
js
lahf
out
fidivrl
sbb
leave
push
lea
jl
mov
sub
jmp
dec
lret
clc
popa
pop
cmp
mov
fcomip
jnp
mov
js
cmp
ljmp
lods
mov
or
inc
push
shll
repnz
ljmp
pop
jge
cmpsl
inc
xchg
int
xor
fcomi
ret
dec
leave
jnp
cmp
jnp
incl
inc
aas
pop
out
nop
adc
sbb
lret
clc
xor
fst
insl
ds
mov
mov
xchg
insl
ja
sbb
fwait
ja
jl
sti
mov
and
aam
jmp
pop
xchg
inc
orl
mov
adc
popa
aaa
push
and
add
test
sbb
ljmp
in
jp
sub
push
add
pushf
pop
int3
adc
push
xor
cmp
cli
decl
or
xor
loope
mov
fstpl
call
jmp
fwait
mov
daa
loope
in
sti
fldt
pop
jmp
xor
push
jmp
pop
adc
xor
adc
jbe
pushf
pop
sub
push
mov
push
outsl
inc
sbb
add
mov
push
mov
inc
stc
shll
cmpb
jmp
cmpsb
clc
push
xchg
outsb
and
jmp
arpl
add
mov
sahf
mov
ljmp
mov
add
out
xchg
mov
lcall
imul
xor
mov
push
mov
repnz
pop
push
hlt
jecxz
sti
push
jmp
sahf
pusha
adc
lods
cmp
xlat
cs
nop
xchg
movsl
rclb
lret
or
shll
or
data16
lret
dec
out
or
incl
inc
mov
out
dec
loope
lahf
cmp
xor
mov
push
push
movsb
xor
mov
cs
dec
jne
lcall
xchg
adc
test
xor
cltd
leave
xchg
add
inc
sub
inc
insb
add
lcall
repz
addr16
mov
lock
aaa
mov
fnstenv
inc
jl,pn
jl
rcrb
jg
cmp
and
mov
adc
mov
cmp
jns
mov
mov
pop
push
add
inc
pop
jo
ljmp
mov
loop
outsl
lds
jecxz
call
add
and
ret
mov
mov
jmp
inc
add
decl
scas
sbb
add
rol
xorb
scas
out
mov
pushl
addr16
jl
cmpsl
xchg
and
mov
cmp
bound
pop
sub
and
sti
imul
enter
mov
or
imul
lcall
in
and
mov
inc
cmp
popf
pop
dec
mov
sub
xchg
jmp
pushl
std
sbb
dec
sub
lock
jmp
sub
mov
cmpsl
and
cs
adc
mov
mov
add
cmp
add
sbb
ljmp
outsl
sbb
dec
sbb
xchg
sahf
nop
add
or
mov
mov
sub
cmc
mov
stos
shll
pushf
sbb
xor
dec
sub
cmp
cmp
ljmp
pop
or
subl
xchg
lods
cmp
jmp
out
inc
cwtl
sahf
pop
rcrb
lcall
lret
push
sub
jne
or
sbb
or
pop
jmp
adcb
call
gs
dec
jne
test
out
xor
daa
lret
lret
mov
sub
dec
pushl
std
jae
mov
mov
inc
adc
cmp
imul
popf
mov
sahf
pop
test
jnp
call
dec
je
mov
shll
aam
and
push
pusha
xor
ficoml
fimuls
and
cld
pop
icebp
dec
sbb
add
lods
movsb
mov
hlt
inc
popa
sbb
ret
ljmp
fists
ss
cli
xor
or
enter
shll
decl
fwait
inc
lock
dec
sub
repnz
fcoms
pop
enter
and
pop
sbb
mov
lcall
std
push
mov
fcmovbe
sbb
and
pop
and
mov
incl
in
jnp
std
mov
and
xchg
mov
mov
pop
std
jp
or
decl
icebp
jmp
mov
push
mov
std
and
les
test
mov
test
xlat
cmp
sbb
sbb
inc
test
and
mov
call
jnp
fwait
orps
ret
cmp
call
mov
outsb
adc
aad
xor
mov
sbb
ljmp
add
inc
cmpsl
adc
fyl2x
out
arpl
fistps
das
xor
jo
jg
mov
adc
nop
sbb
add
pop
mov
lcall
inc
mov
cmp
repnz
lret
aaa
sbb
mov
mov
mov
test
mov
clc
adc
bound
movsb
mov
xor
mov
inc
test
push
pop
pavgb
or
add
cmp
loop
mov
sub
call
xchg
dec
sar
mov
xchg
lds
out
movsl
imul
dec
pop
xchg
mov
mov
es
lcall
jg
dec
lcall
idivb
lods
pop
add
adc
push
scas
xchg
stc
jae
dec
pushl
inc
mov
shrb
movsl
fiadds
mull
mov
movq
adc
and
push
es
cmp
xor
sbb
and
incl
aas
imul
outsb
mov
mov
dec
mov
and
and
movsb
xor
aaa
or
xchg
push
dec
aam
leave
cmc
jge,pn
or
add
mov
repz
jmp
cmp
sub
call
loopne
sub
mov
test
mov
movsb
sti
into
aad
mov
lock
nop
jae
cmp
adc
cmp
add
test
or
fnsave
cld
push
cs
call
shrl
dec
dec
xchg
mov
enter
or
pop
push
mov
mov
sub
mov
adc
fcoml
pop
pop
inc
ljmp
xor
xchg
push
sbb
out
push
movsl
js
insb
sub
add
insl
lret
in
cmp
sub
test
decl
fdivl
enter
lret
push
insb
xchg
mov
outsl
mov
inc
sbb
test
dec
outsb
stc
nop
mov
les
jg
lcall
mov
lods
fadds
loopne
jle
xor
out
jg
xor
or
popa
pop
es
ljmp
push
sub
fstpl
push
sbb
mov
jmp
mov
adc
xlat
out
mov
insl
jnp
aam
cmp
jg
es
fnsave
cmp
cs
cmc
xchg
fisttpl
jmp
incl
movsb
enter
je
xchg
fstpl
rolb
jp
push
mov
jg
std
testb
dec
mov
inc
cld
lods
stos
adc
sarb
pop
dec
push
lcall
push
push
cmpsb
call
mov
lods
inc
add
dec
dec
mov
sti
imul
sub
decl
jle
aam
cmp
pop
adc
jmp
dec
les
push
and
jns
loop
push
stos
add
push
push
into
clc
pop
jecxz
imul
jl
mov
mov
mov
jno
jl
pusha
or
imulb
stc
jns
call
add
mov
cli
repz
cmc
in
jle
add
pushf
xchg
rolb
mov
fildll
in
incl
ficomps
inc
cmpsb
mov
jne
outsl
aad
mov
stos
sub
jns
rorb
lock
jmp
sbb
sbb
xchg
pop
sahf
orl
sbb
cli
popf
mov
test
repnz
std
call
shll
ss
and
stc
int
dec
scas
mov
outsl
jne
inc
shlb
incl
and
in
cmc
pusha
mov
js
mov
lds
mov
pushl
dec
int
xchg
push
push
mov
sub
adc
push
pushl
mov
xlat
mov
stos
in
lcall
ja
in
in
xor
xchg
outsl
clc
jmp
lods
mov
dec
jae
cmp
js
testb
pusha
stos
or
pushl
mov
add
pop
sbbb
cmp
and
dec
dec
jmp
mov
inc
ljmp
dec
dec
xchg
test
xor
push
mov
divl
in
jg
jp,pt
ljmp
mov
out
add
or
ja
sub
jp
cmp
lea
aaa
std
jmp
sar
cmpb
or
in
or
pusha
cmp
mov
jmp
in
sbb
push
in
cmp
mov
add
pop
xchg
mov
sbb
or
mov
jnp
div
mov
ss
cmp
cmp
fistps
jmp
test
mov
cmp
push
push
pop
lds
lcall
mov
mov
pop
arpl
or
mov
bswap
std
dec
xor
incl
in
mov
lret
lea
dec
push
fistpl
orb
xchg
push
icebp
mov
jne
orl
ret
lcall
out
jb
dec
test
mov
aas
aas
xor
es
adc
aaa
ljmp
cmp
pusha
ret
insl
clc
arpl
push
lds
push
xchg
mov
mov
fadd
push
fdivs
mov
push
mov
andb
add
pushl
push
bound
fdivrl
push
xor
btc
mov
mov
mov
hlt
sbb
jo
and
jge
push
in
subb
stc
stc
jo
cmp
outsb
dec
decl
cs
jmp
icebp
repnz
mov
clc
cs
mov
popa
mov
fdivrl
mov
xchg
xchg
xor
and
mov
jmp
cmpsb
mov
xlat
hlt
push
sub
std
or
orb
or
test
jbe
cltd
add
pop
idiv
incl
inc
sbbl
rcrl
pop
and
inc
data16
cmp
stc
mov
mov
sbb
in
mov
int3
mov
nop
jl
cmpsl
fdivrs
pop
mov
adc
fistps
adc
inc
shll
sbbb
cmp
stos
xchg
xor
jns
loopne
lods
push
in
or
pushl
pop
inc
leave
out
cmp
popa
push
cmpsb
sti
ljmp
hlt
hlt
adc
outsl
fsubs
aaa
cmp
dec
and
andl
jmp
jl
or
movsl
loopne
int3
lea
les
ljmp
mov
sbb
imul
int
mov
mov
inc
lcall
xor
or
insb
jecxz
mov
stos
inc
sarb
cmpsb
lods
sti
jno
mov
pushl
loop
and
jnp
fistpll
or
repnz
jb
pop
loopne
push
pushl
mov
nop
imul
cmp
mov
xlat
and
fmuls
mov
js
daa
pushl
loope
sub
call
xchg
iret
adc
rorb
icebp
rcll
adc
int3
out
sti
lods
imul
and
testl
push
popf
pop
sbb
or
int3
fwait
sbb
ret
dec
mov
lahf
jb
enter
cltd
and
ja
ljmp
jno
cwtl
lods
ret
xchg
iret
xor
add
jmp
sub
aaa
cltd
mov
leave
adc
std
and
aad
in
sub
neg
mov
addl
inc
out
xor
push
jl
cmpsb
arpl
mov
mov
shll
call
inc
and
sub
pop
xchg
or
outsb
sahf
jne
daa
roll
out
jbe
ss
js
pop
pop
loopne
xchg
shr
add
fstps
ficompl
pop
sub
mov
clc
or
xchg
call
mov
inc
fdivs
aam
dec
jecxz
push
in
call
lods
je
inc
push
lods
dec
sar
loope
xchg
or
adc
in
adc
or
xchg
mov
movsl
mov
dec
sub
int
mov
addb
jmp
xor
popf
das
sbb
std
rcrl
cltd
jo
xor
mov
jmp
cltd
pop
leave
push
and
xlat
rorl
sbb
int
addr16
pusha
xchg
into
ja
fisttps
sbb
lret
dec
lock
jle
mov
fnsave
call
aam
ds
or
lcall
mov
pop
fcmovnbe
lret
dec
pop
push
fidivrs
jmp
adc
jmp
bound
lods
ficoms
xor
or
mov
or
out
inc
jp
iret
mov
movsl
loop
mov
mov
lcall
xlat
jge,pn
dec
jns
popf
sub
mov
inc
das
or
or
xchg
push
pop
or
add
ljmp
call
jns
jecxz
pop
inc
adc
pop
jle
lahf
sahf
cmpsl
scas
mov
addl
inc
mov
mov
lahf
mov
xor
cmp
xchg
fucomip
mov
xor
mov
rclb
test
hlt
mov
insb
xor
jo
in
test
movsb
call
call
xchg
data16
adc
call
stc
dec
int
daa
imul
jmp
or
ja
mov
jmp
lock
or
int3
lret
rcll
jmp
mov
mov
push
shl
mov
adc
push
inc
dec
cmpsl
stc
pop
lock
adc
pop
cwtl
sbb
stos
test
fistpll
nop
jmp
lods
jecxz
push
jge
std
lcall
jbe
inc
cmp
rcrb
jae
mov
lds
in
loopne
and
decl
fsubp
cmc
jle
aaa
lock
add
data16
dec
shlb
std
pop
jmp
sbb
mov
incl
nop
arpl
adc
idivb
js
jne
imul
xchg
cmp
movsb
pop
and
stos
adc
mov
ss
xchg
pop
add
or
xchg
mov
repnz
decl
xor
push
jo
push
not
insl
cld
jg
call
push
jne
cli
bound
xchg
cmp
aad
sbb
lods
xchg
mov
or
inc
pop
in
push
movsl
sti
pop
call
pop
dec
cmp
aaa
ret
hlt
scas
notb
push
cld
push
adc
fisubrl
ds
addr16
jns
cmc
inc
add
stc
and
cli
jl
or
cld
test
fidivrs
decl
mov
pop
fldenv
shlb
push
popa
sti
cmp
into
mov
outsl
push
pop
cmp
cmp
mov
xchg
xor
test
dec
or
repnz
sbb
pushl
xchg
xchg
xor
sub
mov
out
out
fwait
sahf
xor
cwtl
push
lcall
mov
add
jb
insb
sub
push
sti
inc
stos
js
rcll
jne
icebp
test
push
dec
mov
and
repz
out
loopne
aam
in
int3
adc
iret
push
lret
incl
mov
adc
sub
fwait
sbb
adc
add
lahf
sub
lcall
rorb
addr16
movsb
test
push
pop
and
add
xchg
cltd
bound
mov
clc
bound
cltd
jno
testb
aaa
test
stos
sbb
lcall
call
sarl
test
sub
add
cli
fadds
xlat
in
push
cmpsb
mov
lcall
outsb
push
add
insl
dec
cltd
shlb
jge
cli
lods
adc
jmp
jp
push
adc
pushl
xor
push
or
xchg
mov
pop
and
pop
cmp
incl
ja
mov
mov
icebp
and
jle
loopne
sub
xchg
ljmp
cmp
xchg
ljmp
or
rcrl
xchg
cmpl
pop
ljmp
push
adc
jb
mov
add
xor
xor
imulb
lcall
adc
cmp
mov
dec
pop
mov
or
cwtl
push
sub
inc
mov
lods
ljmp
in
jecxz
add
daa
mov
inc
fisttps
xchg
xor
pop
in
and
addb
mov
jnp
lcall
clc
sub
lock
and
pop
ljmp
mov
pop
popa
cld
push
out
push
mov
lods
dec
cmpb
aad
maxps
ljmp
sub
test
pop
out
test
sahf
nop
push
int
dec
mov
movsl
add
icebp
fdivrp
pushl
cld
mov
push
imul
lods
jmp
addl
inc
mov
pop
bound
ljmp
cmpsb
lds
adc
jl
cmpsl
outsl
fstps
push
loope
pop
mov
sti
lcall
std
cmp
dec
popf
mov
inc
mov
in
mov
or
insl
adc
jno
and
xchg
enter
or
ror
dec
mov
cmpsb
pop
hlt
jg
xchg
jns
dec
cs
movsl
cltd
sbb
sbb
xchg
imul
xor
xchg
inc
mov
xor
inc
repz
jbe
out
cli
call
loope
lcall
loop
sbb
inc
scas
ret
mov
cmp
icebp
and
sub
xchg
mov
xlat
out
pushf
or
mov
std
jge
out
test
add
push
mov
cmp
cmp
sarl
push
ja
push
jecxz
lea
out
inc
mov
cli
stc
dec
std
mov
dec
stc
fwait
leave
push
mov
or
mov
adc
out
fcomps
aad
stos
mov
ror
cmp
jge
jns
pushl
fsubl
adc
cmp
sbb
out
fcoms
in
cmpsb
incb
fdivs
dec
fs
ljmp
jnp
cmp
jle
ds
or
jne
aad
jl
ss
lcall
pop
dec
lret
rolb
lret
je
or
or
repnz
call
ja
ss
into
xor
mov
std
push
cmp
fsubl
in
sbb
pop
icebp
mov
sbb
pushf
leave
pop
jl
test
mov
or
cwtl
mov
inc
lcall
mov
sub
cmp
sti
push
sbb
and
stos
lods
repz
mov
and
call
stos
idivb
lds
movsl
imul
sub
sbb
jg
ret
push
mov
pop
dec
pop
mov
mov
enter
out
in
ljmp
sar
xchg
push
or
jmp
insb
adc
xchg
pop
pusha
mov
cld
mov
pop
mov
lea
aaa
loope
sub
xchg
add
clc
xlat
jns
jmp
inc
adc
out
xor
outsb
mov
push
xchg
sbb
push
and
das
clc
incl
inc
fnstenv
sti
div
mov
insb
inc
mov
test
sub
ljmp
rcrl
jecxz
or
sub
mov
mov
sahf
hlt
ljmp
cltd
scas
ljmp
lret
mov
subl
icebp
fbstp
in
push
ficoms
push
pop
inc
daa
fs
pop
cltd
jg
add
sbb
inc
outsl
in
sub
dec
xchg
mov
xchg
push
mov
jg
and
in
cltd
adc
or
xor
icebp
jmp
ljmp
push
mov
cld
incl
sbb
sub
and
sub
into
mov
jmp
mov
in
dec
out
mov
and
pop
subb
enter
fidivl
cld
push
repz
push
xor
xor
inc
inc
push
ffreep
dec
pusha
lods
shlb
es
in
adc
xchg
dec
out
test
pop
lock
call
cmp
mov
xchg
dec
daa
and
lods
pop
push
filds
cmp
push
insb
sub
add
xchg
jnp
jae
lock
xor
add
fldt
sbb
jle
std
outsl
xchg
dec
mov
inc
subb
sub
mov
jl
ret
jl
das
add
mov
xchg
and
clc
and
adc
cmc
ljmp
mov
clc
lock
adc
leave
cmp
fisubrl
push
js
mov
aam
shlb
call
dec
lcall
lcall
subl
inc
loopne
dec
adc
adc
inc
dec
jmp
icebp
xlat
loope
mov
sahf
lea
pop
sar
sub
test
or
xor
lahf
call
pusha
mov
add
add
stc
mov
push
fwait
nop
sbb
and
je
hlt
decl
icebp
loop
sbb
pop
add
and
mov
xor
jmp
lea
out
cltd
add
stos
daa
pusha
xchg
adc
xchg
jg
test
lcall
ret
cld
and
pop
push
jne
testl
lcall
or
out
pop
loopne
rcrb
je
ficoml
jg
mov
call
jg
inc
inc
lods
stos
insb
and
dec
pop
inc
pop
ud2
cld
rclb
and
mov
cmp
push
bound
xchg
sub
stc
mov
mov
adc
popf
cmpsl
sbbl
imul
sbb
call
nop
call
dec
xchg
cmpsl
mov
push
mov
sti
or
lock
xchg
mov
push
movsb
ficomps
xor
or
out
fwait
inc
lods
xorl
add
mov
pop
inc
cwtl
and
xor
ljmp
mov
cmpsl
jecxz
and
mov
clc
test
add
push
sbb
leave
cld
xor
pushl
cld
leave
sbb
insl
fsubl
xchg
repnz
stos
mov
pop
push
pop
lods
sbb
cmp
rcrb
jb
in
add
sbb
xlat
push
pop
cmp
jb
daa
movsb
sub
call
adc
xor
pop
add
int3
in
clc
movsl
mov
mov
fdivr
sbb
xor
or
dec
xlat
jno
sarl
shlb
push
or
es
fucomip
dec
cmp
and
ljmp
pop
sbb
push
sbb
xchg
out
add
mov
arpl
cli
sub
inc
les
and
push
sub
mov
or
push
jmp
push
lcall
cmp
call
lea
dec
in
jle
push
jg
mov
push
dec
jnp
inc
rcrl
jmp
outsl
jge
sbb
ret
sub
call
or
sahf
enter
pushf
push
pop
jmp
scas
test
jne
inc
cwtl
popf
sahf
negl
clc
jmp
push
xchg
ss
mov
push
push
cld
push
test
sahf
mov
mov
inc
imul
scas
jp
xor
data16
sub
push
rcl
cmp
or
xchg
ret
fmull
sub
pop
nop
repz
push
sbb
shlb
popa
jno
push
xor
and
call
inc
call
xchg
insb
pop
inc
ret
ret
loop
cmpsl
sub
out
pop
jo
dec
test
pop
cmp
or
adc
mov
sbb
mov
incl
jl
inc
fiadds
ja
dec
cmc
jo
or
ret
add
enter
pop
call
ret
insl
fists
adc
pushf
sub
pop
xchg
mov
mov
push
mov
ret
lcall
es
cs
pop
fists
movsb
inc
repnz
dec
inc
sbb
daa
std
loop
pop
je,pn
clc
lcall
pusha
xchg
arpl
test
mov
nop
test
pop
out
dec
pop
loopne
and
push
pusha
push
mov
incl
cmp
hlt
mov
inc
adc
addr16
mov
dec
fucomp
ffreep
adc
xchg
push
cmp
xor
out
mov
adc
push
jl
scas
ret
fbstp
adc
cmpb
pusha
sbb
push
xchg
pop
mov
add
popa
shll
xchg
in
repnz
ret
shll
sbb
jecxz
mov
push
inc
pop
cmp
sarb
push
call
loopne
push
in
in
imul
xlat
or
push
loopne
dec
test
pop
push
jae
dec
cltd
mov
push
ss
lret
push
mov
fistl
sub
filds
hlt
push
mov
xchg
mov
mull
lds
pop
addb
lar
push
add
cmp
push
mov
ret
shrl
mov
out
sub
and
mov
scas
cmpsb
push
cmpb
adc
inc
call
or
imul
mov
loope
cmp
mov
in
adc
pushf
int3
frstor
movsb
call
insl
call
adc
loop
inc
sub
or
jge
sbbb
adc
mov
push
in
popa
or
in
mov
imul
aam
jns
xchg
insl
and
sar
incl
inc
dec
sub
cltd
pop
push
dec
mov
cmpb
jg
sbb
lock
and
repnz
cmp
fcmovne
adc
fsubrs
jmp
xchg
sub
dec
pop
pop
into
icebp
jbe
cmp
inc
sub
sbb
pusha
leave
sub
add
jbe
inc
ds
jbe
stos
daa
sar
into
cmp
jno
call
jg
xor
ljmp
lea
adc
xchg
fcmovnbe
test
dec
xor
test
call
cmp
mov
les
std
lret
cltd
xor
mov
into
gs
add
iret
mov
and
mov
pusha
cmp
pop
popf
sbb
orl
call
cwtl
ret
sbb
pop
test
in
sbb
sub
sub
ljmp
dec
dec
fildll
jmp
mov
push
mov
push
jb
mov
jae
and
pop
andb
in
in
mov
call
cwtl
sti
mov
sub
ret
ljmp
test
insl
out
bt
clc
inc
divb
push
jo
jo
mov
outsl
cld
mov
imul
or
mov
pop
push
xor
xor
ret
pop
add
iret
outsb
jp
jae
in
les
incl
and
mov
jnp
and
mov
aaa
push
jno
aam
pop
cmpb
adc
scas
cmpsl
xchg
xchg
addps
push
divb
xor
lea
fdivs
mov
roll
mov
xchg
cmp
pushl
or
aad
iret
ficoms
insb
subl
or
adc
and
decl
push
mov
pop
mov
imul
add
sub
inc
push
dec
sti
std
call
iret
ljmp
nop
out
xchg
sub
cltd
cmpsl
movsl
sbb
insl
mov
mov
push
xor
ja
clc
stos
fsubr
xchg
gs
movsb
jno
divl
nop
sbb
pop
inc
cmp
or
fnsave
cli
in
push
jns
jmp
inc
test
dec
enter
ficoms
jg
test
or
lods
lods
loopne
cmc
adc
cli
pop
movsb
jecxz
xor
mov
in
loope
test
decl
push
mov
orl
js
repnz
scas
in
and
std
fwait
and
ficompl
fdivs
jl
scas
and
cmp
ljmp
inc
mov
dec
push
leave
add
incl
cmc
mov
in
repz
mov
jle
subb
call
loopne
jns
mov
outsl
mov
cs
sbb
pushl
loop
imul
dec
push
in
xchg
pop
imul
call
call
mov
in
je
mov
push
in
popf
inc
cs
or
movsb
pop
sbb
call
ret
shrl
outsl
adc
test
filds
out
jle
sbb
fcomip
call
mov
int3
pop
fs
adc
out
jne
sub
popf
fidivs
imul
mov
outsl
mov
mov
bound
push
xchg
mov
mov
mov
jmp
mov
stc
cmp
repnz
sub
sbbl
sbb
ljmp
hlt
mov
gs
loop
and
pop
lahf
mov
jmp
mov
mov
xchg
pop
mov
or
imul
jmp
ljmp
sub
add
dec
inc
pop
push
mov
jg
scas
mov
aas
stos
mov
or
imul
incl
pop
arpl
fsubl
sbb
mov
icebp
add
jg
pop
test
or
call
sbb
mov
jbe
mov
push
inc
pop
mov
adc
rcr
inc
sbb
and
orl
xchg
adc
ljmp
insb
stc
dec
je
pop
pushl
pop
lret
ja
mov
pop
cli
test
stos
inc
inc
adc
sahf
aas
lahf
imul
call
aam
loop
pop
test
loope
mov
lret
fcompl
lcall
les
adc
ds
pop
sti
sub
pop
inc
push
jns
shl
sbb
pop
lods
inc
ficoml
jg
aad
jg
pop
testb
inc
mov
add
rcr
push
dec
in
lds
clc
jmp
pop
mov
xor
shrb
stos
ret
lcall
push
mov
push
jbe
jl
stos
or
push
mov
mov
ljmp
sbb
pop
lds
mov
jbe
pop
push
in
lock
daa
mov
xor
mov
outsl
lock
outsb
xor
mov
push
out
cmp
stos
mov
ficoms
cmpsl
push
jns
push
or
cmp
mov
lock
mov
or
std
dec
and
dec
xchg
lock
pop
push
sahf
aam
add
in
xor
add
cmp
push
pusha
mov
mov
lods
push
adc
cmc
pop
cmpb
incl
mov
or
mov
jle
cwtl
fs
jne
std
cld
mov
or
ljmp
adc
push
dec
mov
xchg
jle
push
outsb
loopne
imul
cmp
sti
pop
xchg
add
push
sahf
aaa
enter
shlb
aas
cmp
pop
lcall
mov
xor
inc
jl
into
loopne
sub
cmpsb
mov
xor
cmpsl
mov
xchg
es
in
aas
popa
adc
dec
stos
clc
jecxz
fstps
shr
loopne
aas
xor
pop
and
insb
aad
pop
push
dec
jge
push
incl
mov
nop
dec
mov
xlat
fwait
lock
daa
inc
lock
incl
mov
aaa
dec
cmp
dec
nop
and
mov
mov
fisubs
pushl
dec
sub
inc
clc
pusha
aam
es
mov
and
fs
dec
sub
adc
dec
mov
test
idiv
pusha
adc
mov
mov
dec
lret
inc
lods
push
pushl
jae
or
sbb
test
les
sahf
sbb
sbb
adcb
inc
call
loopne
jno
push
pushf
call
lods
lock
add
ret
dec
lcall
mov
mov
dec
xor
fldl
mov
lahf
mov
dec
clc
cmp
mov
decl
jecxz
aam
out
jle
daa
pop
and
xor
jle
jge
test
pop
pop
sahf
fdivs
lock
call
add
loopne
and
or
fstps
mov
lahf
xchg
pop
push
leave
test
and
clc
jnp
dec
push
mov
pop
int3
ss
aad
cmp
dec
cmpb
push
add
and
mov
add
ljmp
and
shl
dec
ja
rorb
ja
dec
xchg
push
mov
jmp
int3
mov
inc
sub
pop
pop
add
divb
call
fidivrs
push
cmp
add
idiv
mov
sub
sahf
mov
push
sub
aas
pop
jl
jge
pop
jle
adc
mov
dec
jl
enter
sub
cmovb
cmp
icebp
stc
add
call
inc
sbb
inc
std
fsts
mov
mov
mov
lds
and
xor
inc
sub
cmp
cwtl
gs
fisubrl
mov
in
mov
notb
incl
add
xor
rcrb
push
cmc
cmc
les
push
mov
cmp
sbb
cmp
clc
mov
sbb
adc
xlat
cmc
and
aaa
out
sub
push
fnsave
popa
stos
add
sbb
decl
and
out
or
push
imul
or
jmp
mov
inc
movsl
test
fbstp
or
push
cmp
sti
leave
sarl
mov
or
xchg
mov
mov
stos
adc
sub
outsb
sub
push
mov
stc
ret
adc
out
ljmp
xlat
xchg
lcall
sub
jg
inc
outsl
mov
loop
adc
xchg
out
pop
mov
mov
xor
pop
test
pop
inc
decl
jl
sbb
in
cmpsb
gs
mov
sbb
and
mov
mov
jp
shll
test
call
and
and
add
sbb
lcall
out
adc
push
outsl
push
mov
xchg
mov
clc
popf
jmp
out
outsl
mov
test
decl
jge
xor
xchg
imul
shll
mov
dec
xor
jmp
jmp
ds
add
pop
loop
popa
cmp
and
mov
or
fcomip
call
int
imul
adcl
out
xor
cmp
js
xchg
mov
ljmp
xorb
push
adc
fcoms
mov
jmp
std
jg
mov
lret
xchg
inc
loop
mov
push
or
mov
cs
pop
jmp
sarl
in
js
cvtdq2ps
mov
jge
xchg
dec
ljmp
fimuls
xor
lea
xor
mov
sub
decl
lods
cld
jg,pt
scas
int
int3
arpl
or
aas
xchg
mov
ljmp
js
pop
icebp
sbb
pop
or
jno
pop
fsubl
in
jb
jl
xor
sar
incl
mov
inc
xchg
out
push
cmp
and
push
mov
aas
mov
jmp
insb
lock
cltd
or
insb
and
mov
imul
or
dec
mov
sbb
pop
push
into
pushf
lods
rcr
andl
inc
inc
xor
mov
decl
stc
adc
scas
add
test
das
push
in
xor
push
hlt
inc
mov
jmp
xor
jp
out
mov
or
sub
push
pop
int3
fidivl
out
jmp
mov
xchg
test
push
insl
adc
mov
pop
lods
dec
cmp
arpl
mov
lret
or
mov
xchg
inc
dec
call
jl
test
xor
xlat
call
hlt
inc
movsl
xor
lcall
inc
xchg
xchg
pop
sti
std
xchg
imul
rep
push
push
data16
dec
cld
dec
sbb
ljmp
fwait
daa
inc
and
rorl
rorb
xchg
or
ds
rcrb
stos
stos
fs
inc
xchg
jecxz
and
fidivrl
ljmp
std
bound
and
inc
inc
cmpsb
data16
jne
pop
leave
dec
fildll
test
jne
jnp
pop
mov
xor
push
push
inc
incl
inc
dec
or
and
daa
jge
mov
faddl
adc
sbb
shl
jg
jmp
pop
imul
mov
or
and
adc
ds
decl
hlt
mov
cmc
xchg
or
mov
incl
or
shll
js
mov
cwtl
jmp
pop
test
data16
mov
pushl
movsl
nop
push
test
mov
loopne
mov
aas
adc
data16
out
decl
mov
mov
ret
inc
popa
mov
sbb
cmp
sbb
data16
shl
rorl
adc
icebp
sub
and
insb
cli
xor
pushl
std
mov
mov
nop
pusha
push
mov
xor
inc
cli
ss
xchg
je
nop
incl
cmp
mov
andb
stc
js
fwait
test
pop
pusha
xor
incl
sub
dec
mov
lock
lock
mov
popa
lret
test
pop
dec
mov
jbe
call
lods
pop
pop
ret
bound
in
ret
sub
fldl
mov
mov
sbb
mov
psubd
cwtl
push
rcr
adc
ret
pop
mov
lods
cmpsb
mov
mov
ljmp
fmuls
jb
in
sub
lret
lock
dec
enter
mov
orps
adc
decl
xor
inc
and
push
sub
or
cld
nop
mov
sub
sub
pushf
xor
ret
push
mov
inc
mov
lcall
scas
pop
pushf
sbb
std
sbb
mov
fidivrs
sti
imul
mov
mov
jg
ds
ret
ljmp
rorl
sub
dec
shlb
scas
scas
lcall
aas
pop
fnclex
leave
ds
mov
mov
test
inc
jb
mov
xor
pop
and
dec
pop
sbb
pop
sbb
xchg
push
les
push
and
test
push
inc
test
xor
fcompl
loope
mov
adc
cwtl
lea
cli
das
ja
mov
mov
mov
stos
jmp
inc
adc
sub
jmp
movb
jb
pusha
mov
pushf
jns
lods
fidivrl
int
mov
popa
aad
sar
decl
mov
sarl
into
or
or
aaa
filds
pop
cmp
in
cmc
shlb
enter
icebp
call
jne
cmp
cmc
xchg
cmp
sahf
aad
ret
int
loop
pushl
stc
roll
dec
and
repz
cmpsb
rcrb
sub
mov
mov
mov
pushf
pop
and
pop
xchg
shl
test
dec
ss
insl
pop
mov
lcall
mov
pop
or
in
pop
mov
xor
mov
loop
cmp
jmp
ret
mov
pushf
sub
outsb
xchg
pushf
xor
ljmp
into
inc
mov
cs
call
mov
addr16
cwtl
aad
adc
add
shlb
lahf
cli
gs
dec
decl
push
cmc
int
ds
sub
mov
push
jecxz
push
and
mov
jo
call
imul
lcall
add
mov
clc
call
sar
std
sub
xchg
test
sub
mov
pop
fcoml
xor
jae
iret
add
jbe
sbb
dec
stc
pop
xchg
xchg
mov
out
add
and
adc
shrb
cld
fisubrs
add
sahf
push
xor
fsubrs
jge
ret
push
out
int3
sub
mov
mov
pusha
push
cmp
dec
jecxz
mov
inc
sbb
and
das
pop
mov
pop
mov
push
xor
incl
mov
add
aad
out
mov
mov
xchg
lret
jmp
dec
aad
inc
mov
cmp
decl
mov
pusha
mov
mov
mov
inc
adc
dec
mov
pop
decl
or
xor
or
sbb
sahf
shl
outsb
fstps
pusha
ds
fwait
jle
sub
pop
mov
push
outsb
push
sarb
and
push
sbb
fidivrl
xchg
dec
dec
clc
adc
sbb
cs
lds
fstp
jg
decl
ficompl
negl
inc
pop
lahf
scas
adc
sbb
inc
add
cmp
pushl
jnp
dec
xchg
dec
mov
inc
xchg
je
sbb
dec
sub
ss
loop
jecxz
cmp
jl,pt
mov
inc
stos
adc
lcall
lcall
es
cltd
ljmp
cli
in
loope
push
popf
and
cmp
mov
xchg
int3
fstps
push
insb
sahf
adc
idiv
cmp
adc
nop
xchg
add
fimull
roll
sub
imulb
nop
add
ljmp
popf
sarl
les
sahf
dec
mov
jnp
call
xchg
lahf
lret
lods
movsb
insb
xchg
aaa
std
dec
and
sub
dec
dec
icebp
ss
dec
loop
push
out
jmp
cltd
jge
cmp
pop
ret
call
and
cmp
sbb
jge
ss
fcompl
loope
fcoml
insb
sub
sub
aas
mov
push
push
add
ljmp
push
push
fwait
outsl
lock
inc
fcoml
pop
stos
loope
insb
outsb
or
jmp
addb
mov
jnp
out
jl
shlb
and
data16
imul
xchg
out
fwait
enter
push
in
dec
mov
aas
shl
push
sbb
sbb
adc
test
push
movsb
call
cmp
xchg
sarb
mov
repnz
lods
xlat
inc
iret
mov
jae
out
dec
pop
xchg
push
pop
fistps
sub
dec
loope
roll
mov
mov
fnstsw
decl
aam
sbbl
cltd
sub
inc
rcll
das
ficomps
test
pop
ja
push
mov
fdivrs
xchg
iret
repnz
jae
sub
adc
pop
daa
push
pop
aam
push
push
jbe
inc
xchg
scas
adc
fadds
push
aaa
lret
sub
and
mov
pop
fwait
movsl
push
push
cli
repz
mov
call
cmp
push
cmp
sbb
testl
idivb
ljmp
dec
test
scas
sarb
sbbl
cmpl
mov
int3
ret
mov
dec
in
inc
decl
clc
arpl
push
add
lods
aam
call
cmpsb
sub
push
repnz
push
push
adc
jmp
mov
filds
jbe
add
fldenv
test
mov
aaa
pop
into
icebp
addb
outsl
clc
jb
iret
or
ss
repz
add
mov
inc
test
ficoms
mov
call
jns
shrb
push
pop
pushf
dec
xlat
or
iret
orl
cmp
mov
les
sarl
mov
push
jmp
jns
sti
sahf
push
xchg
push
cmpsb
xchg
stos
push
inc
gs
fs
cmc
dec
ljmp
sub
mov
fwait
in
or
sbb
aaa
stos
or
cmp
cmp
mov
test
movsb
mov
nop
pop
push
xchg
fstl
and
xchg
mov
cmc
jnp
xchg
lahf
rorl
out
sbb
push
pop
lods
ja
add
incl
pop
movsl
aad
je
test
shlb
frstor
mov
movsl
jecxz
push
push
repz
ljmp
sbb
or
pop
aam
and
mov
aam
add
in
mov
jg
decl
in
inc
loop
ret
push
xchg
repz
ja
sti
mov
and
ljmp
or
mov
xor
adc
aaa
subb
shlb
push
cld
decl
nop
test
out
adc
push
sahf
sahf
aad
test
cmp
incl
call
jp
jns
add
mov
sbb
fmuls
sub
test
ljmp
pushl
outsb
mov
or
add
int3
int
inc
push
pop
insl
jmp
mov
push
pop
nop
sub
vcvtdq2pd
mov
sbb
inc
sub
pop
das
dec
cmp
orb
pop
xor
lcall
bound
push
sub
lcall
adc
loop
pop
xlat
adc
mov
dec
sbb
popa
loopne
ljmp
call
out
test
rorb
mov
inc
dec
pop
pusha
mov
je,pt
dec
outsl
loop
jle
lcall
adc
push
push
das
mov
inc
stc
lcall
out
mov
in
ds
mov
pop
mov
sbb
fldt
jns
mov
stos
call
std
jb
daa
addr16
push
xchg
sbbb
sbb
ja
lds
rorb
call
insb
add
inc
jae
aas
jb
pushf
in
jmp
aaa
jnp
push
add
mov
dec
push
cwtl
push
ror
pusha
lret
idivb
stos
pop
jno
adc
jle
out
imul
int
jnp
inc
fdivp
jmp
das
sbb
mov
adc
imul
xchg
cmp
popa
ljmp
rol
addr16
loopne
adc
cmc
adc
push
rcrl
insb
scas
inc
out
sub
cmpsl
or
ret
pushl
pop
xchg
int
inc
nop
rcl
add
mov
sub
sarb
lea
loope
test
in
xchg
fidivl
enter
push
fs
decl
jge
lock
into
pop
push
sbb
or
sarb
add
mov
and
out
xor
loopne
lcall
test
cwtl
mov
hlt
mov
jns
scas
jp
mov
mov
adc
rolb
sti
dec
or
and
ss
cld
jg
test
inc
loop
sbbb
mov
add
mov
outsl
clc
pop
push
inc
mov
into
movsb
pop
jmp
ds
div
ljmp
leave
shll
subl
xor
lahf
or
movsb
fcomip
stos
mov
push
mov
rol
dec
jg
lret
push
mov
fs
mov
or
inc
inc
cmp
xor
dec
sbb
ja
lods
loope
mov
or
sbb
jg
sbb
fists
or
cld
lahf
call
inc
mov
jmp
test
sbb
in
pushl
cmp
pop
mov
xchg
adc
cmp
push
daa
ja
sbbb
call
adc
lods
cmp
andl
xor
inc
lods
divb
sbb
jge
pop
fcomip
jge
dec
and
cld
ss
pop
jae
lods
inc
nop
movsl
dec
in
cmpsb
inc
mov
mull
decl
lock
inc
rolb
add
cmp
test
rclb
mov
xchg
jbe
decl
lock
lcall
cltd
mov
add
rorb
out
mov
je
jl
in
jae
inc
repnz
cmp
in
clc
jno
mov
push
push
or
xchg
test
mov
pop
pop
ficoml
sub
aam
cltd
xchg
lcall
es
decl
out
cmpl
bound
fs
movsl
es
faddp
ja
or
enter
ljmp
addb
andb
push
jmp
icebp
pusha
lahf
std
or
xor
aam
adc
stc
lcall
out
cwtl
inc
testb
jle
mov
push
xor
pushf
pmaddwd
ljmp
into
xor
and
mov
xchg
jne
ljmp
out
lds
dec
in
jle
mov
push
xor
ja
push
jmp
xchg
mov
addr16
cmpsl
mov
adc
add
adc
or
mov
bnd
push
pusha
adc
jmp
mov
cmp
outsl
sbb
adc
aam
es
repz
aaa
cld
and
cmc
xchg
lahf
sub
inc
je
or
mov
movsl
mov
mov
mov
push
fwait
outsb
jnp
idivl
mov
adc
roll
and
push
call
cmc
cmp
push
mov
and
add
adc
lods
xor
jp
jmp
mov
add
js
or
mov
xorb
mov
popa
mov
arpl
push
add
xor
outsb
insl
mov
mov
loopne
ljmp
add
jb
push
sbb
sbb
xor
stos
mov
cmp
in
enter
pop
mov
push
insb
xchg
and
jae
sbb
jmp
inc
out
inc
mov
fidivrl
fwait
daa
mov
call
testl
out
mov
out
pop
adc
les
repz
xchg
sub
adc
push
push
and
stos
jg
lods
out
sbb
in
popf
pop
test
cmp
jns
and
pop
push
sub
outsl
outsl
jnp
push
xor
out
jae
bound
mov
jl
dec
pop
ja
stos
ds
xchg
push
cmp
xor
std
jno
pop
jecxz
daa
mov
ljmp
movsb
in
stos
popa
and
sub
add
mov
je,pt
cmp
loopne
lcall
sub
int
inc
jno
repnz
popf
mov
mov
xchg
mov
std
dec
mov
fdivs
test
dec
out
scas
add
sub
and
repz
push
test
out
xchg
dec
xchg
push
xor
in
aam
xor
nop
adc
ljmp
lret
pop
in
push
fstsw
dec
aaa
lds
leave
push
push
jmp
push
mov
jmp
add
jl
pop
inc
mov
int3
mov
sarl
jae
into
cmp
fs
cmpsb
pop
pop
cld
call
cmp
sbb
sub
out
sub
jmp
add
cmp
popf
sti
call
sarb
mov
sub
ds
outsb
jae
xor
xchg
ret
hlt
mov
decl
push
scas
cs
in
jecxz
jle
cmpsb
sbb
mov
andb
cltd
in
aas
aam
jne
fwait
adc
mov
in
sub
jae
dec
out
adc
dec
outsb
or
shrl
jnp
adc
imul
mov
xor
fldl
jge
cmpsb
mov
add
fbld
js
xor
xor
hlt
call
bound
xor
das
jecxz
mov
mov
pushf
jmp
lds
je
fucomip
in
mov
mov
fists
fsubrs
movsb
jmp
mov
jecxz
rcll
fstps
jecxz
aas
inc
push
ret
jne
in
sub
jb
jge
inc
mov
mov
and
xor
jnp
mov
cmp
inc
and
leave
insl
aam
rcrl
mov
ljmp
repnz
and
mov
fdiv
adc
mov
xorb
mov
mov
dec
jl
cmp
mov
push
push
dec
js
dec
nop
or
jmp
fcomps
jnp
lret
pop
leave
sti
mov
call
dec
rclb
xor
lcall
aaa
in
in
faddl
cmpsl
pop
jmp
xchg
pop
mov
cmc
mov
jecxz
call
lret
insb
adc
std
or
in
or
stc
repnz
add
jg
add
add
and
sahf
cmpsl
push
dec
or
scas
mov
lods
fidivrl
push
inc
inc
int3
fcmovnu
mov
push
cld
sbb
adc
ljmp
sub
cmpsb
clc
mov
lahf
pop
aam
cli
dec
mov
outsl
cltd
inc
test
push
pop
stos
or
hlt
incl
mov
or
andl
ret
int
mov
scas
rclb
ljmp
pop
addl
in
mov
mov
pop
mov
push
mov
call
ss
movsb
jl
clc
ljmp
roll
lods
inc
mov
add
jno
push
test
sub
mov
test
mov
insl
and
loop
scas
push
pop
sbb
fidivl
jp
cmc
incl
lods
xchg
test
lods
cmc
mov
call
repnz
cmp
mov
fmull
add
call
dec
xor
inc
cmpl
mov
and
imul
ss
cmpsl
icebp
push
iret
ja
mov
xchg
out
push
jb
sub
push
dec
pop
or
leave
inc
call
lcall
add
mov
imul
push
ljmp
decl
psraw
pusha
inc
out
test
inc
ret
inc
jnp
outsb
lods
inc
test
lock
rolb
fs
cltd
iret
ja
xchg
jle
mov
push
mov
aaa
lret
or
cmpsb
addb
lcall
xchg
sub
movsl
and
das
xor
cmpsl
sbb
icebp
push
jmp
idiv
incl
or
jne
pop
jo
jmp
std
call
rol
lret
sbb
and
mov
cmp
decl
jge
lcall
call
and
mulb
incl
rcr
into
es
sub
sbb
pushf
fiadds
cltd
std
pushl
test
cs
sbb
jg
push
sub
clc
sbb
pop
inc
lahf
call
and
dec
fisttps
call
or
xor
mov
sar
adc
lds
xchg
pop
sbb
jnp
insb
int
mov
outsl
cmp
push
bound
jge
sbb
add
stos
orl
or
fimull
movsb
pop
or
lcall
mov
or
sahf
xchg
loop
mov
fcomip
sub
test
cld
inc
fildll
inc
push
dec
inc
fisttpl
lcall
dec
push
notb
or
jne
aad
mov
jnp
xlat
loope
mov
jg
xchg
mov
sbb
mov
mov
and
cld
fildll
aas
and
push
cli
and
mov
test
inc
and
hlt
lods
or
mov
cld
es
jecxz
insb
xchg
lret
mov
xchg
xchg
xor
lahf
inc
xor
decl
negb
fs
jp
cmp
pushl
js
jo
or
aad
movsb
jne
rclb
shll
push
lea
fldcw
fcomps
dec
movsl
sbb
cmp
fwait
ret
cmp
pushl
and
cmp
xchg
rorl
jp
mov
std
nop
jg
incl
jl
xor
push
shrb
push
lcall
inc
mov
xor
ljmp
add
in
mov
orl
lds
filds
movsl
lods
xchg
out
aad
lock
sar
incl
jae
dec
setb
or
mov
mov
lods
loope
lahf
xor
decl
push
cmp
inc
sbb
dec
cmpsb
enter
in
xor
call
negl
mov
lods
and
outsb
cmp
cmp
mov
aaa
aad
xchg
push
subl
jge
mov
in
jns
aad
in
lcall
jns
cld
xchg
sub
shlb
jns
gs
mov
inc
xor
popa
push
jg
rcrl
imulb
cld
push
popa
push
mov
clc
mov
mov
inc
jl
enter
xor
lods
insb
lcall
and
mov
daa
imul
enter
sti
scas
decl
mov
fldenv
scas
pop
jae
push
xor
adc
mov
imul
pop
and
adc
cmc
test
ret
and
and
decl
cmp
cmp
jns
xchg
push
aaa
cmp
stc
setne
or
call
stos
cmp
pop
rclb
outsb
mov
imul
clc
popf
adc
jmp
and
les
jmp
dec
xlat
lahf
mov
cs
pusha
out
pop
lret
mov
add
mov
ljmp
cld
into
pop
pop
mov
test
rolb
jne
mov
in
or
inc
sahf
addr16
loope
call
fwait
in
xor
and
data16
loope
sub
ljmp
mov
movsb
sbbb
xor
sbb
or
in
adc
mov
adc
inc
cs
loopne
lcall
xchg
xchg
ss
pusha
inc
outsl
pop
pop
sbb
daa
push
add
fsts
ljmp
pop
hlt
dec
cwtl
xor
mov
ss
dec
push
sar
call
cmp
shl
ficomps
enter
jns
fwait
adc
es
ja
stc
idiv
call
mov
dec
xor
mov
dec
mov
dec
inc
mull
mov
dec
cmp
dec
xchg
xchg
loopne
lock
jp
mov
arpl
sub
and
call
or
sbb
call
loopne
mov
cmp
sti
xor
pushl
setbe
icebp
adc
xor
sbbb
cmp
pushf
jmp
mov
adcl
imul
scas
dec
je
sbb
insb
fsubrs
js
in
in
shll
pop
mov
call
push
pusha
sahf
pushf
std
jl
insl
jb
call
decl
stos
pop
mov
and
xor
xor
mov
mov
cmpsb
lods
xchg
xor
jne
adc
nop
pop
xchg
mov
and
mov
push
incl
mov
jno,pt
cmp
insl
shll
ss
in
mov
jmp
push
cmc
movsl
jo
jnp
inc
and
in
add
pop
nop
mov
rcrl
out
push
jno
lds
scas
jae
out
mov
lcall
sbb
outsb
inc
test
mov
lock
sub
mov
adc
jns
inc
idiv
in
fistps
cltd
test
repz
mov
sti
mov
iret
push
insb
inc
lock
fnstcw
adc
or
aad
gs
jnp
scas
adc
call
shrl
in
int3
mov
xor
pop
mov
out
call
and
and
mov
cmp
int3
pop
imul
mov
cmc
jmp
adc
shlb
xchg
pop
outsl
cld
cmp
jg
sbb
and
or
daa
inc
test
and
add
mov
nop
jge
inc
cltd
pop
pop
and
push
js
shrb
imul
inc
incl
pop
jns
and
pop
faddl
ds
and
mov
push
inc
loop
ljmp
or
sub
pop
loop
jmp
mov
int3
into
adc
out
mov
dec
xor
mov
fstps
ljmp
dec
pop
push
mov
dec
mov
mov
pop
sub
shlb
dec
in
mov
ljmp
js
aad
fs
fwait
repnz
add
mov
or
aam
jmp
popa
fisttpl
mov
imul
pop
in
dec
pop
xchg
repnz
lahf
xchg
popa
stc
pop
into
or
std
dec
std
rep
not
mov
adc
das
dec
push
xor
push
mov
hlt
pushl
and
xor
inc
int3
push
hlt
neg
iret
insb
es
mov
fbld
mov
scas
popf
std
into
sahf
mov
test
cli
or
es
sbb
subb
fcomps
cmpb
jl
sti
or
les
mov
and
adc
sar
inc
lock
pop
leave
ja
rcll
imul
push
lea
in
cld
jg
xor
mov
in
cmpl
dec
mov
loope
pusha
clc
adc
incl
ljmp
repnz
loop
push
adc
das
pop
repz
lcall
dec
fldcw
lods
orb
mov
mov
mov
cmpsb
sbbl
jl
fdivrl
pop
jnp,pt
iret
or
out
dec
scas
mov
imul
jmp
jmp
xchg
mov
fldt
jne
stos
jae
out
jg
scas
aad
push
mov
bound
push
pop
inc
push
fnstsw
xchg
into
lret
sbb
inc
rorl
loope
insb
dec
mov
dec
xchg
cmpsb
mov
jne
mov
adc
frstor
inc
pushl
sub
inc
adc
and
mov
push
std
insl
mul
mov
int
push
mov
jp
dec
gs
add
push
mov
cmp
negb
lret
mov
mov
mov
repz
fisubl
movlps
clc
inc
fldcw
cmpsb
adc
sub
sbb
call
bnd
cwtl
jns
cmp
inc
fildll
ret
cmc
sbb
mov
pop
incl
cmp
sbb
inc
push
mov
cmpsl
ror
lods
gs
adc
mov
test
das
xchg
push
faddl
pop
in
aad
dec
enter
jmp
add
or
push
mov
std
jle
mov
cs
jg
lret
pushl
stos
orb
sahf
and
and
add
jmp
int
lock
pop
nop
pushl
pop
xor
push
es
mov
dec
ds
jg
pop
push
mov
lea
dec
mov
mov
jno
decl
imul
aad
push
cmp
xor
xchg
es
add
dec
jnp
call
sub
cld
in
notb
daa
jmp
inc
into
lahf
jns
pop
or
push
and
dec
adc
call
mov
imul
inc
dec
les
and
stc
js
bound
call
mov
loop
or
jbe
jns
cwtl
loopne
lahf
push
divb
fbld
or
pop
jb
sub
ret
push
daa
movb
decl
pop
sti
mov
pop
imul
imul
pop
mov
fisubrs
xor
jg
sbb
fwait
std
inc
xchg
xor
cmp
dec
xchg
dec
jne
incl
fdivrl
lds
push
mov
lods
imull
push
xor
nop
cs
cmp
rcrb
incl
jp
xchg
mov
adc
push
jecxz
push
cmpsb
sub
shl
enter
xchg
jo
mov
inc
call
mov
pop
sarl
dec
xchg
jnp
add
in
mov
pop
les
mov
push
dec
dec
pop
xchg
add
stos
stos
test
push
push
mov
push
dec
fsubrp
pop
addb
daa
fmul
sysenter
inc
mov
adc
ljmp
jg
cmpsb
dec
dec
push
repnz
cld
repz
cmp
ja
cmp
pushl
xor
clc
fnsave
add
pop
cmp
jl
pusha
lods
add
in
jae
adc
inc
out
mov
xor
pushl
enter
xor
paddsw
cs
push
repz
aam
sbbl
xor
hlt
std
outsl
ret
lcall
inc
rcrl
lds
fistpl
sub
loop
mov
nop
mov
dec
push
mov
loopne
pop
les
mov
push
lcall
pop
or
xor
jg
dec
lock
xchg
rcr
jecxz
mov
fisttpl
add
pop
mulb
inc
pop
ret
or
lret
push
cltd
clc
inc
shrb
incl
out
scas
push
clc
ret
fsubr
push
sub
call
int
in
lock
xor
cs
add
add
adc
jmp
push
mov
popa
roll
cmp
mov
out
push
das
or
std
stos
jne
jmp
cli
xchg
lods
lcall
fldl
int3
mov
push
imulb
cmp
adc
push
mov
or
arpl
push
inc
clc
sti
push
jmp
pop
rcl
in
cltd
std
incl
sbb
mov
mov
stos
iret
mov
fsubrl
jp
lret
dec
adc
jne
push
mov
pop
shlb
adc
hlt
div
lds
cwtl
mov
mov
adc
inc
mov
inc
dec
sbb
pop
pusha
jp
imul
rclb
fpatan
out
jo
xor
pop
jo
jg
hlt
decl
sbb
sti
mov
jmp
sbb
lcall
dec
jo
andb
fcoms
outsl
or
leave
stos
mov
adc
pushl
int3
and
jp
add
mov
ret
sub
aas
xor
sbb
std
xor
jmp
dec
xchg
scas
lds
loopne
adc
push
jb
pop
sub
add
pop
popa
aad
cmp
sti
jp
std
ljmp
pop
in
inc
jecxz
in
mov
bsf
pop
xchg
cmc
enter
arpl
fisttpl
ret
mov
jnp
adc
ljmp
adc
xchg
into
push
ljmp
sar
call
cwtl
cltd
jno
es
in
jns
movsb
or
pushl
sbb
fneni(8087
jmp
lahf
mov
mov
xchg
or
jge
mov
mov
adc
and
mov
pop
movl
push
inc
test
xchg
fisubrl
push
out
ljmp
nop
sbb
cmp
imul
daa
sbb
pop
dec
cmp
xor
mov
pop
enter
adc
push
pop
ljmp
popf
inc
xchg
mov
or
call
fisttpll
mov
call
or
in
imul
sahf
jecxz
add
ljmp
add
push
push
sub
int
hlt
mov
jbe
cli
jmp
push
xor
push
sbb
xchg
push
dec
push
pop
adcl
fs
stos
fdiv
adc
sahf
in
mov
push
xchg
mov
ret
int3
adc
stos
int
inc
push
sbb
int3
mov
jg
aam
dec
mov
aaa
in
cmp
mov
decl
cmp
lahf
jne
pop
inc
popf
mov
stc
aam
cmp
loope
mov
test
push
jg
jmp
add
cmp
adc
and
xchg
mov
imul
sbb
mov
jb
and
jno
jno
rol
or
mov
jecxz
mov
decl
inc
stc
or
icebp
mov
addb
clc
lock
pushl
jbe
and
das
call
ljmp
xchg
cwtl
adc
aaa
inc
decb
test
push
xor
xchg
les
sub
call
in
cmpsl
adc
cmp
mov
or
shll
test
movsl
lahf
sbb
push
cwtl
sbb
jecxz
cmp
jp
pop
inc
mov
xchg
dec
jmp
inc
or
and
lahf
xor
mov
scas
push
insb
bound
jns
ss
cltd
call
lcall
mov
sub
jge
or
hlt
jo
cli
aas
cmp
dec
imul
lcall
mov
cmp
jo
loop
add
insb
lahf
cmp
xchg
add
in
mov
pop
cs
lds
sub
push
sub
icebp
out
rcll
test
jo
lcall
movl
mov
enter
test
ds
xor
mov
push
in
aas
notb
in
mov
inc
mov
cmp
icebp
fnstcw
mov
push
xor
cmp
and
cli
lods
push
sbb
pushl
mull
cmp
fwait
xchg
cmp
andb
call
loope
or
pushl
leave
sub
jl
lds
scas
adc
sbb
loopne
mov
sbb
rorl
or
test
dec
add
inc
mov
adc
mov
adc
jecxz
popf
test
ljmp
call
lcall
mov
xor
lds
mov
loope
jg
sbb
or
ror
pop
shl
xlat
adc
inc
arpl
mov
stos
icebp
lcall
and
mov
fistpll
nop
ja
jle
pushl
insb
enter
mov
mov
les
jne
or
lods
xlat
add
jmp
mov
shll
sbbb
cmp
mov
adc
subl
push
aad
aad
sbb
ss
mov
or
mov
arpl
out
inc
fisubl
pushl
cmp
daa
push
sub
add
outsl
loopne
addb
mov
scas
popa
jmp
lcall
xchg
push
nop
sbb
pop
in
jp
into
xchg
scas
mov
lcall
pop
pop
sub
repz
cmpl
lock
imul
push
adc
sbb
pop
aas
dec
out
or
in
dec
shrb
mov
aam
outsb
pusha
add
mov
test
mov
sbb
lret
dec
or
ljmp
add
cmp
mov
mov
out
lock
ret
cmp
inc
xchg
sub
call
jno
inc
out
outsb
cli
aam
pop
xlat
scas
arpl
stc
inc
push
mov
lods
xchg
pop
pusha
std
incl
pop
xor
jmp
mov
lods
enter
aad
fcomip
stos
stos
cwtl
or
add
cmp
push
lret
or
enter
cs
jb
cwtl
lret
jg
bound
adc
dec
loopne
fwait
sbb
push
xchg
out
pop
lods
cs
lcall
xchg
movsw
xorl
dec
rcrl
pop
cmpsb
lods
jge
in
and
mov
push
xchg
xor
pop
and
int
cmp
dec
jmp
mov
out
lock
jmp
and
xor
jle
stos
lods
push
mov
sbb
mov
dec
daa
add
fbstp
jb
in
ret
and
mov
sbb
test
cmp
jmp
ljmp
cs
lock
jge
sub
insb
push
incl
and
jns
inc
subb
adc
cmp
fwait
movsl
lcall
les
stc
cltd
dec
dec
iret
xchg
test
sti
cmc
push
ret
adc
mov
cmp
gs
fwait
push
popf
sub
insl
ds
gs
jle
rcll
and
or
xor
inc
jo
or
and
ljmp
smsw
out
sti
movsb
icebp
addr16
push
outsb
out
mov
jnp
out
mov
aam
or
ljmp
cmp
jns
inc
pop
out
mov
das
xor
pushl
dec
sub
insb
pushf
jmp
dec
out
int
popa
fwait
mov
mov
mov
sub
sbb
cmp
xor
mov
ja
push
adc
pushl
add
out
mov
repnz
push
call
outsl
cwtl
addl
popa
int3
jnp
mov
jno
lock
push
in
imul
mov
pop
in
testb
nop
pop
cmp
nop
jns
testl
dec
adc
nop
xor
cmp
add
xor
orb
test
aaa
add
mov
shlb
dec
push
loop
fnop
push
push
push
push
mov
ljmp
jbe
push
xchg
lret
lock
ja
cmp
call
daa
dec
cmovl
xchg
into
inc
jecxz
pop
pop
imul
dec
xchg
popf
je
decl
ds
jno
mov
int
mov
pop
pop
fnstcw
mov
jg
call
sbb
int3
aam
jmp
je
sahf
insb
gs
lret
stos
mov
ljmp
addb
ret
push
scas
in
and
leave
push
test
add
xor
lcall
arpl
aad
push
xchg
jmp
mov
movsb
sbb
add
sahf
cmc
xchg
xchg
inc
ret
pop
jmp
incl
cmp
shll
or
mov
sbb
jmp
incb
mov
sbb
or
pop
movsb
fnstsw
jl
hlt
call
inc
xchg
das
xor
insl
xlat
ret
adc
pop
sbbb
and
lret
mov
add
js
pushl
push
or
fs
inc
scas
mov
add
mov
pushl
cli
push
adc
repz
fiadds
jp
jle
pop
inc
fsubrs
fs
flds
jl
pop
add
in
pushf
incl
cmp
pop
pop
xor
dec
ret
mulb
xor
mov
adc
daa
iret
ljmp
jo
inc
insl
roll
cmp
fcomp
int3
loop
lret
mov
test
mov
cmp
call
imulb
in
lcall
add
dec
jnp
jo
dec
mov
inc
jmp
inc
lret
mov
aad
mov
mov
out
adc
jne
adc
sub
lcall
cmp
je
xchg
mov
and
inc
pop
sbb
push
jo
mov
inc
cmpsl
ljmp
jmp
or
leave
lds
sar
andb
lods
xchg
push
push
xlat
inc
mov
mov
cmp
ljmp
and
lret
cwtl
shlb
lds
xor
jmp
mulb
mov
mov
pop
daa
mov
roll
xchg
push
pop
sub
cli
fsubrs
add
pop
xlat
or
fs
roll
adc
in
test
pop
lcall
mov
test
jg
push
mov
jl
sbb
pushf
sbb
adc
inc
pop
jae
fadd
push
movsb
dec
test
cltd
push
out
leave
js
push
dec
dec
and
push
js
lock
cmpsl
ficompl
mov
pop
loope
js
idivl
lcall
cmp
dec
pop
pop
and
pop
fistps
push
xchg
mov
lret
mov
call
in
dec
sub
je
mov
aad
or
push
pop
out
shlb
mov
fdivp
scas
jae
mov
push
adc
call
ss
sbb
sub
int
xchg
xlat
jmp
loope
inc
rclb
mov
gs
push
mov
push
mov
pop
and
arpl
incl
mov
push
repz
jecxz
iret
icebp
dec
mov
jl
sbb
lcall
sbb
dec
int
push
stc
sub
sbb
mov
push
lcall
inc
decb
jmp
scas
int
add
call
dec
jle
aas
or
insl
popf
aam
xchg
in
cltd
out
pop
lods
sub
adc
pushl
adc
sbb
lret
mov
pop
popa
pop
pushl
fs
addl
in
or
or
xchg
jb
aaa
sub
rorb
xor
push
scas
ss
lret
fldenv
cmpsl
xor
imul
fidivrl
ffreep
mov
sbb
sarb
ret
lock
mov
bound
push
dec
inc
aas
icebp
out
and
dec
jbe
popa
loope
jo
mov
inc
adc
adcb
inc
iret
mov
sti
dec
xchg
stos
inc
pop
imul
cmpsb
ret
in
sbb
enter
jg
int3
stos
xchg
pushl
cs
loopne
lds
dec
jb
sti
lcall
dec
xor
in
arpl
outsl
xor
mov
stos
xor
out
rclb
ret
sbb
jo
sbb
add
lcall
loope
cmpsb
bound
nop
dec
or
testb
movsb
jecxz
sti
rorb
inc
adc
and
loopne
insb
pop
test
sbb
mov
in
sbb
add
insb
sbb
call
outsl
sbb
xor
xchg
sbb
test
mov
mov
pop
insb
pushf
lret
jb
incl
inc
notl
mov
sar
pop
push
out
push
lock
outsb
and
inc
decl
dec
cmpsb
clc
mov
jno
dec
sar
jmp
mov
je
jge
ret
or
rcrb
andb
push
out
clc
fbld
xchg
dec
test
int
sbb
jmp
jmp
ficoms
incl
dec
iret
mov
stc
fsub
hlt
jmp
mov
mov
cmp
sbb
aas
lcall
repz
lcall
xchg
adc
pop
testb
fcomip
xchg
cmp
xchg
push
insl
add
test
and
jg
mov
jp
sub
and
pop
int
fwait
push
cmpsb
mov
or
cmp
mov
xchg
or
leave
xchg
pop
sub
cld
roll
and
jge
jmp
or
pop
insb
rcrl
mov
jg
xor
dec
lret
jo
jnp
cmpb
popf
rcll
out
repz
scas
incl
xor
out
test
xchg
push
and
rcll
sub
pop
cmc
ljmp
dec
jp
cmc
decb
int3
fs
add
fdivrp
ljmp
nop
xchg
out
adc
js
add
jge
mov
cltd
and
cmc
hlt
fwait
mov
pop
ljmp
xor
std
iret
gs
mov
in
ljmp
fwait
adc
mov
cmp
subl
jb
xchg
cltd
insb
xchg
xor
ljmp
or
pop
lock
out
cmpsb
push
stos
mov
sub
sub
xchg
cmp
ljmp
cmpsb
jbe
xor
mov
sbb
jp
sbb
mov
enter
push
insb
sbb
cmpl
xor
pop
stos
xlat
addr16
cmc
loope
fcomip
pop
test
pop
fcompl
pop
lods
jo
jo
lea
lcall
daa
mov
dec
cs
adc
pushf
out
sub
sbb
sarb
ds
cmpsb
call
sub
addb
loop
cmc
movsl
xor
jg
mov
cmp
add
adc
std
shrb
pop
adc
mov
in
inc
pusha
mov
xchg
mov
popa
frstor
cmp
pop
mov
aas
popa
imul
dec
mov
popa
gs
call
cmp
xor
fisttpl
xor
sbbl
push
inc
imul
lcall
push
mov
shl
mov
mov
or
cmpsb
push
xchg
jns
or
pop
call
lcall
push
js
hlt
mov
testb
pop
cmpsb
or
into
hlt
push
xor
dec
inc
fidivl
lret
push
cmpsb
push
decl
nop
in
dec
cmp
in
cmp
ljmp
mov
hlt
and
shlb
addl
int
inc
pop
cmpsl
imul
call
inc
adc
int
ret
or
cwtl
jne
adc
adc
addr16
dec
shl
jp
push
mov
jmp
sbb
in
sti
ss
bound
in
jbe
inc
dec
jg
fisubrl
je
and
out
fimull
mov
xchg
repz
sarl
sbb
mov
sbb
call
divl
testb
leave
ljmp
rclb
insb
push
fnsave
inc
dec
pop
rcrb
mov
sar
icebp
inc
test
mov
pop
out
daa
das
mov
cmp
push
sub
jmp
lret
aas
and
adc
std
jne
popf
pop
lods
les
mov
add
jb
cld
or
xor
xchg
pop
std
push
out
cmpl
incl
or
fsts
pop
sbb
cmp
les
mul
rolb
fisubrs
pop
lock
icebp
sbb
test
mov
mov
fiaddl
adc
inc
in
repz
mov
ljmp
inc
sbb
pusha
mov
dec
fiaddl
jo
es
jmp
jmp
out
bound
mov
popf
xor
in
sub
enter
mov
cmc
jno
cmp
stos
movsb
mov
fldl2t
pop
dec
aam
aaa
cmc
lret
inc
test
icebp
icebp
jecxz
jo
testb
in
rcrb
cmp
stos
jb
and
dec
push
sub
push
popf
decl
incl
pop
sbb
outsb
daa
push
lcall
stc
fisubl
sub
fucomi
push
fadds
aad
add
out
les
repnz
ss
mov
and
mov
out
jns
cwtl
sbb
dec
inc
cmp
jb
and
cld
jae
inc
pop
dec
in
or
fisttpl
shl
lahf
fs
push
mov
fdivrs
or
decb
mov
icebp
fbld
rol
sahf
xchg
lahf
xor
xorb
ss
les
out
cld
ljmp
xchg
loopne
in
inc
xor
mov
adc
loope
xorl
fsub
addr16
or
call
imul
loope
aaa
xor
jns
mov
add
cs
pushl
xchg
inc
push
jbe
adc
adc
push
test
dec
mov
sub
lret
popa
inc
pop
gs
imul
mov
jp
aaa
ret
incl
add
popf
fcompl
pop
gs
or
movb
jge
or
mov
sbb
push
add
int3
inc
pop
imul
sbb
or
imul
pop
bound
pop
sub
mov
jmp
mov
cli
and
andl
les
xor
or
in
xor
dec
push
std
decl
add
jg
adc
mov
push
test
push
fldl
or
or
sbb
xchg
nop
int3
rolb
cmp
sbb
jg
mov
push
popf
loop
xchg
push
push
sbb
push
jg
jae
xchg
mov
incl
inc
mov
jl
inc
and
xchg
aad
mov
sub
mov
mov
popf
push
xchg
mov
dec
push
js
or
rol
xchg
and
bound
mov
xchg
dec
xchg
or
add
pushf
mov
add
ljmp
jnp
ss
aas
pop
ret
outsb
sub
orl
lods
out
imul
incl
xchg
push
popl
movsb
addr16
in
mov
data16
push
push
add
mov
sbb
push
lcall
into
repnz
push
gs
test
enter
jge
jmp
ret
test
repnz
jg
mov
or
inc
xchg
fwait
adc
test
je
mov
call
mov
add
jge
aas
push
rorb
or
cmp
adc
fists
mov
jmp
mov
int3
js
ja
pushf
loopne
iret
sbb
jnp
hlt
call
push
push
sub
bound
dec
mov
lods
add
jns
mov
outsl
lcall
jle
imul
jg
sub
mov
pop
lds
jp
ret
ljmp
jmp
ja
dec
jb
daa
jne
pop
mov
pop
xchg
mov
div
cmp
cs
xor
incl
xor
cmp
inc
ret
fwait
hlt
fs
call
mov
ljmp
mov
dec
fisttps
sbb
mov
aas
mov
sub
pop
mov
or
pop
or
lcall
jb
cs
lds
push
insl
movsl
test
stos
push
sbb
cld
pushl
push
lret
pop
and
pop
clc
and
xor
mov
add
std
mov
and
dec
xchg
jmp
in
data16
jno
clc
or
incl
in
inc
jle
jl
dec
jne
add
mov
add
stos
or
decl
out
inc
jbe
pop
cmc
mov
enter
adc
jecxz
imul
cmpsb
decl
sbb
popa
add
and
cmp
fistpll
xchg
in
cs
incl
and
jecxz
std
inc
lahf
xchg
jle
push
leave
in
test
insb
add
cmp
out
pusha
sti
lahf
jmp
clc
xor
or
cmpsl
out
shl
add
jmp
lods
push
or
loope
xor
aam
push
daa
xchg
jle
jg
call
icebp
call
fimull
arpl
test
mov
jecxz
incl
lcall
mov
fsubrp
mov
dec
loopne
das
inc
fisubs
out
jmp
fwait
rclb
inc
xor
stc
loope
outsl
test
iret
hlt
xchg
fstl
das
orl
stos
ret
filds
lods
xchg
out
in
push
adc
rorb
dec
inc
arpl
lea
clc
jmp
leave
jp
pop
movsl
cmpsl
sub
decl
pop
aaa
insb
fwait
and
out
rorl
enter
repz
push
outsb
loope
pop
pop
cmp
sub
ss
mov
lea
outsl
cli
lcall
lods
jnp
xchg
fisubrs
dec
test
je
js
and
call
mov
fimull
fisttpl
es
test
push
jns
hlt
cmp
ljmp
adc
mov
jge
dec
push
xor
shl
adc
jne
pushf
sub
add
lcall
xor
sbb
hlt
dec
dec
cmp
push
adc
push
cli
mov
pop
mov
rol
incl
mov
jp
out
int
lret
mov
push
repz
xchg
sub
inc
out
jecxz
out
mov
dec
movsb
adcl
push
xlat
in
cmp
and
decl
into
cmp
mov
pop
mov
popf
mov
and
mov
lcall
pop
xchg
cmp
and
mov
sub
rcll
and
decl
push
ljmp
adc
lcall
xchg
mov
ljmp
ficoml
mov
jns
mov
je
mov
imul
daa
test
ljmp
ss
jecxz
in
movl
and
movsb
lods
push
inc
dec
ljmp
lcall
mov
pushf
xor
loope
jb
add
xorl
pop
lods
jae
sbb
or
mov
ljmp
out
lds
inc
xchg
xchg
sub
decl
or
cwtl
data16
pop
dec
cmp
mov
fwait
and
dec
outsb
jmp
ret
cmpb
insb
cs
mov
jle
decl
clc
mov
in
dec
xchg
mov
jns
cmp
bound
lea
mov
aaa
inc
xchg
mov
outsl
cli
jg
lcall
hlt
jne
out
mov
cmpsb
stos
mov
movsl
jmp
inc
aam
mov
and
nop
and
jbe
push
out
xor
mov
push
mov
icebp
stos
test
out
sbb
mov
xchg
insl
cmp
ljmp
ljmp
lea
aaa
xchg
nop
mov
add
dec
call
inc
and
outsb
jge
leave
loope
lret
fdivl
cwtl
inc
pusha
add
add
pop
test
mov
jp
mov
and
sbb
mov
fsubl
das
call
mov
mov
sbb
ficoms
sbb
mulb
jge
jg
jmp
sub
jmp
out
dec
cwtl
sbb
xlat
test
pop
in
ret
out
shl
add
jb
jns
mov
stc
mov
fsubrl
aaa
pop
test
dec
mov
jp
dec
jecxz
movsb
es
shlb
sti
or
pop
jg
outsl
jp
sub
daa
dec
xchg
mov
out
out
mov
enter
xchg
lahf
cmp
adc
mov
mov
stc
push
stos
jle
jecxz
in
jecxz
add
cmp
nop
jno
ds
iret
mov
xlat
sub
mov
or
and
cmp
pop
aad
xchg
mov
lods
fsubs
push
xchg
fdivrp
incl
mov
mov
sub
sbb
fwait
dec
cmp
dec
xchg
inc
cltd
repnz
bound
and
cmp
fcmove
xchg
jg
call
std
sbb
aad
xchg
lods
xchg
dec
out
xchg
outsl
mov
insb
add
pop
decl
stc
lds
scas
inc
insl
adc
push
jo
pop
lea
push
mov
xchg
stos
or
int
mov
mov
loop
and
xchg
sub
out
decl
in
mov
xchg
pop
cmpsb
movsb
fs
adc
in
aaa
mov
xchg
shll
mov
jmp
xor
xchg
jb
data16
sbb
fcoml
fisubl
js
xlat
out
decl
in
pop
rclb
ret
mov
dec
sbb
fidivrs
mov
xor
and
mov
fsubrl
shrl
lret
loop
cmp
pushl
lcall
mov
into
outsb
add
and
decl
cmp
loope
xchg
sbb
hlt
stos
out
mov
cld
imul
xchg
scas
and
call
out
mov
scas
push
imul
repz
in
xchg
popa
test
sbb
or
sbb
icebp
mov
ror
mov
js
movsb
clc
inc
push
hlt
cld
inc
test
pusha
mov
aaa
jmp
lcall
mov
cwtl
sahf
loopne
push
cld
movsl
cmc
js
and
jnp
or
push
movsb
in
out
mov
xor
movsl
fwait
jp
std
data16
test
add
aas
outsl
decl
push
xlat
xchg
cmp
cltd
cli
add
lods
mov
daa
daa
jle
or
inc
mov
loop
lret
rorl
sahf
or
dec
mov
cmpsb
cmp
fidivrl
mov
lcall
addl
cmpsl
std
int3
out
adc
dec
mov
adc
enter
jg
cld
push
aam
pop
cmpsl
loopne
icebp
mov
sbb
in
sub
test
decl
pop
sub
sbb
mov
or
jge
iret
sbb
loopne
jo
xchg
shlb
or
pushl
cwtl
inc
pop
mov
out
loop
cli
sbb
lcall
std
fcomps
mov
cmpsb
mov
jae
and
pushl
jg
inc
jno
lahf
jg
in
fists
imul
adc
inc
or
jne
dec
push
aad
mov
call
rorb
lods
mov
repnz
incl
addl
adc
aad
mov
push
mov
adc
mov
mov
mov
pop
imul
shrl
cmp
mov
out
lods
in
add
and
xchg
push
aaa
ror
sti
sar
cmp
popf
inc
iret
fwait
test
aas
mov
push
bound
inc
and
loopne
decl
dec
roll
pop
mov
ret
repnz
fldt
sti
fcomip
pop
add
inc
data16
jge
xor
push
inc
adc
mov
popf
ret
cltd
frstor
mov
push
cmpsl
test
loop
add
dec
sahf
cld
jle
jp
mov
jg
outsl
cli
add
and
in
adc
les
cmp
mov
fisttpll
jg
into
push
add
push
imul
push
subl
out
mov
mov
jo
rcr
int3
mov
lods
pop
cli
lret
fwait
sub
incl
cwtl
fcos
dec
push
sbb
outsb
insl
mov
sub
ret
data16
test
testl
fwait
aad
lcall
ds
ret
jmp
sbb
xor
pop
or
jg
testl
loopne
cmc
setge
pop
add
mov
cltd
xor
outsl
cli
mov
in
imul
push
inc
adc
test
lock
jmp
jno
insl
mov
pop
int
cmpb
and
xchg
in
sbb
push
pop
stos
lret
push
cld
call
cwtl
mov
out
pop
test
dec
ficompl
cli
jmp
imul
pushf
outsb
push
out
adcb
aam
imul
loop
adc
sarb
jne
inc
mov
mov
int
add
fistps
xchg
mov
lahf
mov
jns
pop
fists
jmp
addr16
pusha
mov
leave
mov
adc
mov
cmc
dec
pop
mov
inc
mov
and
andb
imul
or
call
lcall
sub
addr16
lcall
shll
mov
andl
sub
decl
pop
mov
mov
or
push
daa
scas
jne
adc
lahf
or
aas
inc
sbb
jmp
aas
ret
aas
lea
iret
pushf
je
es
mov
mov
push
ljmp
cmpb
scas
fimull
push
xor
cmp
xor
xlat
push
leave
pop
xchg
mov
stc
aam
xchg
push
adc
jns
sub
out
roll
push
pop
rcl
push
pop
or
shrb
xchg
push
call
jne
cld
adc
ljmp
push
repz
mov
decl
pop
cmpsl
outsb
outsl
stos
sbb
outsb
pop
mov
mov
ret
sbb
xor
dec
and
in
xor
sub
ret
cld
fcmovnb
or
lret
jl
mov
shrl
cltd
jo
lcall
adc
or
jp
sar
pop
sbb
das
subb
lret
mov
sbb
testb
dec
cld
jg
xchg
into
mov
cmp
ret
fdivs
mov
add
cmp
jmp
push
dec
jmp
call
push
or
push
test
adc
jle
pop
in
add
adc
cmp
push
push
ljmp
clc
lcall
mov
push
popf
lock
ss
add
jne
jns
add
hlt
pop
or
jb
ret
push
incl
es
xchg
lods
xor
mov
movsb
sub
shlb
imul
mov
push
rcll
ljmp
xchg
lahf
mov
or
cwtl
pop
fnstenv
addr16
jns
andl
xchg
jecxz
jmp
ljmp
mov
jno
lea
int3
inc
add
pop
cmp
mov
xlat
cmp
ljmp
adc
xchg
sti
sbb
mov
mov
pushl
dec
pusha
scas
mov
push
or
rorb
fdivrl
js
pop
enter
lcall
or
push
fldenv
scas
popa
aas
in
inc
jne
lock
push
icebp
mov
dec
pusha
aam
fdivr
push
dec
inc
dec
inc
cltd
ret
js
pusha
add
fucomi
fbstp
cmp
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
sti
aaa
pop
imul
adc
adc
fimull
pop
adc
add
data16
or
pop
lds
inc
add
or
xchg
add
es
jp
sahf
add
les
add
and
std
inc
mov
push
xor
jb
imul
lds
adc
push
adc
pop
and
xor
mov
incl
inc
mov
adc
xor
cmpb
sub
push
inc
shlb
xchg
mov
and
xlat
xor
popa
add
xor
pop
stc
and
adc
fbstp
inc
rcrb
roll
inc
pusha
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
add
int
and
adc
mov
or
xor
adc
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
add
dec
incl
or
add
lds
cld
cli
xor
loope
jmp
jg
fnstsw
ficompl
cmpsl
push
dec
cld
jg
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
xchg
pop
jmp
clc
cmpl
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
or
fs
pop
mov
pop
pop
mov
popl
movb
jmp
ret
scas
adc
mov
xor
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
mov
insb
in
and
aas
repz
cmpsb
pop
outsl
icebp
mov
fisttps
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
sar
sbb
lea
out
sub
lods
leave
mov
jp
push
out
xor
testb
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
cmp
mov
jmp
sbb
pop
insl
js
ss
out
pop
jb
mov
or
lcall
mov
int
sbbb
mov
dec
jp
aas
add
pop
jg
hlt
push
add
sti
in
sbb
stc
loope
mov
sar
andl
aas
icebp
testb
mov
aad
pop
xor
jns
mov
in
repnz
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
dec
sbb
sbb
sbbl
into
andl
aas
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
lret
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jg
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
fisttps
push
ftst
jbe
xchg
and
jae
inc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
adc
pop
cld
addl
adc
and
insl
rcll
fmull
enter
jecxz
scas
decl
dec
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
aad
test
inc
mov
mov
iret
push
inc
ljmp
jbe
push
sbb
stos
icebp
pop
incb
jno
idivl
push
inc
jecxz
sbb
sarl
adc
loopne
pop
cmp
add
mov
mov
stos
jge
and
cmp
dec
push
lock
mov
aas
mov
fsubrl
lock
incl
insb
push
ret
push
clc
xchg
std
andl
or
fadd
das
fmul
icebp
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
filds
jp
adc
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
jg
mov
adc
push
pop
adc
imul
jmp
outsb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
std
mov
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
fimull
lcall
cwtl
inc
mov
insb
test
fistpl
fists
sbb
lock
in
xchg
outsb
add
mov
clc
cmpsl
and
add
jl
icebp
fs
clc
mov
jne
or
loopne
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fucomp
outsl
sub
hlt
out
rolb
pop
or
or
test
adc
lods
leave
inc
lods
fimull
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
adc
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
adc
mov
daa
jmp
faddl
mov
mov
outsl
xchg
pop
add
pop
stc
push
dec
out
fistl
movsb
mov
mov
enter
std
repz
add
fsts
dec
das
adcb
push
cs
pop
inc
add
or
insl
inc
mov
mov
iret
test
add
and
mov
add
out
sub
jnp
pop
jp
add
addb
addb
or
add
out
movsb
mov
add
mov
add
or
push
jg
add
pop
push
xchg
js
and
add
add
in
lods
nop
mov
addb
inc
inc
test
pop
mov
push
nop
cmp
adc
xchg
enter
jle
rdpmc
insl
pop
sub
add
setle
imul
aad
dec
xor
pop
mov
pusha
or
jnp
xchg
insb
stos
or
movsl
mov
push
push
mov
fists
push
and
cs
push
movsb
iret
cmc
jnp
movsb
inc
scas
push
and
stos
push
and
push
test
into
push
and
imul
push
inc
pop
pop
add
adc
pop
sbb
mov
sbb
add
ljmp
push
add
push
ds
les
pushl
adc
adc
fs
mov
insb
or
lret
imul
lcall
push
sub
lret
mov
mov
push
fnstcw
int
or
jae
mov
stos
pop
stos
mov
mov
jb
ss
add
jo
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
insl
outsb
pop
shrl
push
ret
je
sti
in
xorb
fisttps
add
fwait
inc
cmpsl
inc
jge
mov
in
movsb
push
add
lods
cmp
mov
stc
mov
shlb
mov
xor
push
push
add
jne
cmpsl
testb
jb
ret
add
mov
lods
pop
add
push
pop
dec
add
jo
popf
shll
add
inc
jge
pop
ja
pop
aaa
add
push
push
shlb
jge
mov
lret
stos
aas
add
ja
mov
push
xlat
jne
add
ja
push
pusha
fildl
xlat
ja
js
push
clc
in
cmpsb
jge
fidivrl
push
jp
jp
inc
push
fidivrl
lods
fsubrs
sarl
ja
fldl
adcb
jmp
ljmp
fnsave
sub
xchg
shlb
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cltd
cmp
cmp
pushf
cmp
popf
or
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
fisubl
push
jecxz
push
imulb
movl
repz
out
push
hlt
clc
stc
cmp
repz
sti
cld
std
mov
ret
jo
add
mov
jae
add
cltd
int3
data16
popa
push
add
pop
xor
add
pop
add
add
scas
inc
push
push
mov
mov
std
fisttpll
nop
add
add
or
add
mov
add
add
pop
or
mov
and
test
test
or
imul
push
sbb
adc
int
push
pop
adc
lods
in
out
lods
add
pop
stos
femms
lods
lods
pop
fcmovnu
mov
push
scas
add
scas
mov
lods
pop
pop
adc
add
and
lods
adc
sbb
outsb
pop
scas
sbb
scas
scas
scas
cmp
jns
scas
sbb
mov
mov
sarl
mov
pop
push
add
adc
mov
popa
add
test
add
and
mov
mov
push
dec
inc
rcrl
mov
mov
pushf
sub
push
and
mov
mov
or
pop
sub
mov
push
leave
pop
or
mov
jg
and
mov
pop
adc
push
es
out
pop
aas
cmp
pusha
fwait
dec
pop
cmp
std
jg
fistpl
cmpsb
add
mov
pop
xor
data16
pop
pop
or
or
add
call
pop
xor
idiv
arpl
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
lcall
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
mov
lcall
jnp
jl
jge
jno
add
jg
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
lcall
xchg
popf
pushf
fwait
lcall
mov
mov
xchg
xchg
sub
dec
ja
jns
dec
push
bound
clc
jnp
movsb
js
imul
and
pop
pop
jg
test
popa
add
subb
pusha
lsl
sub
pusha
scas
aas
jge
movsb
adc
xchg
lahf
idiv
mulps
add
push
mov
cmpsb
push
mov
imul
movsb
push
sub
js
xor
xor
ja
push
ja
jb
cs
dec
adc
dec
xor
mov
add
jbe
fnstsw
jle
and
push
mov
xchg
fistpll
int
pop
jo
push
inc
mov
cmp
mov
inc
add
das
sub
xchg
jae
xchg
jp
inc
push
popf
inc
mov
pop
sti
cltd
pushl
add
xchg
jno
lret
push
bound
mov
mov
insb
push
lahf
inc
inc
push
sahf
mov
jnp
inc
std
insb
add
leave
xchg
xchg
test
pop
cmpsb
dec
push
or
movsb
jae
add
jb
shll
outsl
push
cmc
incl
add
mov
aad
imul
repz
outsb
mov
out
push
mov
add
ja
sahf
jbe
fistpl
imul
jle
outsb
ds
push
add
and
es
js
int
xchg
mov
data16
shrl
insb
imull
ja
outsb
push
outsl
ror
push
sbb
jns
lret
push
mov
sbb
jg
fiadds
call
test
lock
add
outsl
lahf
sub
mov
add
test
mov
sahf
mov
inc
fildl
push
jb
out
in
push
jle
or
jle
jae
jecxz
or
push
aad
push
dec
repz
divb
fildl
adc
push
xorl
incb
add
bndstx
test
in
mov
push
xchg
shlw
and
out
xchg
in
xchg
orl
sub
sub
imulb
imul
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
insl
lcall
cmpsb
pop
cmp
fcmovb
pushf
cmp
aam
mov
pop
mov
cmpsl
push
cmpsb
scas
jo
test
sahf
ja
sub
shrb
fmul
mov
punpckhwd
push
jl
add
int
mov
mov
sarb
out
sarl
cmpsl
mov
add
add
addr16
sbb
out
je
add
and
sbb
mov
dec
cld
femms
or
or
jg
or
es
push
adc
push
add
testb
add
adc
sbb
add
popa
fisubrl
mov
xor
ds
les
mov
mov
mov
jle
xor
add
and
mov
mov
loopne
ds
mov
imul
sub
loopne
pusha
aas
xor
or
scas
nop
addr16
aas
cmp
xchg
out
jns
cmp
or
mov
sbb
inc
jbe
dec
cmp
inc
jle
add
dec
in
cmp
dec
mov
scas
ds
jle
aas
mov
mov
mov
ds
xor
dec
inc
test
mov
scas
add
adc
fiaddl
mov
addr16
mov
cld
fbld
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
push
ljmp
mov
lcall
sub
sub
add
add
xchg
adc
sub
dec
and
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
mov
call
insl
popf
mov
jge
jns
jns
jle
addl
ja
jno
outsl
outsb
pushf
sti
lds
or
loopne
sar
or
addb
add
add
loopne
push
out
or
lcall
adc
jl
push
add
cmc
repz
dec
xor
sti
jg
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
add
mov
push
mov
fnstsw
repnz
fistpll
and
addr16
add
pushf
add
sti
pop
mov
mov
mov
or
jo
sti
dec
arpl
mov
push
push
jg
xchg
pop
dec
lret
into
xchg
cli
outsl
add
mov
mov
test
scas
xchg
js
in
push
ret
insb
pop
fistl
nop
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
std
sahf
insl
fistpl
es
jbe
negl
jns
mov
fcmove
fst
es
push
lret
loopne
adc
or
push
std
into
fdivrp
pop
and
add
jg
jle
jge
push
and
incl
inc
push
xchg
and
dec
dec
enter
dec
dec
dec
add
pop
add
push
dec
or
adc
cmp
in
div
mov
or
dec
dec
dec
inc
add
push
adc
add
stc
pusha
jg
inc
or
pop
pop
cmovg
cmpsl
std
pop
repz
push
dec
sbb
inc
adc
inc
pop
lods
in
incb
dec
sbb
dec
add
mov
ljmp
sub
cmp
cmp
cmp
cmp
daa
and
sbb
sbb
and
test
incl
sub
xor
sub
sub
movsb
sbb
lods
and
fwait
int
fsubr
pop
mov
mov
mov
flds
add
outsb
mov
push
add
andl
or
pop
inc
into
inc
adc
enter
add
push
cmpsl
adcb
inc
jbe
mov
pop
sbb
test
jmp
scas
push
clc
sbb
incl
inc
mov
xor
pop
mov
es
cltd
test
popa
ds
testb
lock
mov
or
push
push
jg
sub
or
ja
mov
adcb
outsl
add
and
sahf
jg
or
mov
test
xchg
pusha
mov
add
cli
add
xchg
or
push
or
cli
inc
lds
pusha
and
insb
mov
das
sti
cmp
jle
mov
inc
sub
dec
sti
add
or
xchg
adc
stos
jg
and
adc
jg
pop
sbb
mov
pusha
and
jg
and
lods
push
cld
jg
jo
add
jbe
and
std
ja
sub
cmp
inc
dec
mov
jg
or
adc
jg
dec
and
mov
fs
pusha
mov
mov
adc
lret
andl
add
add
test
sub
xchg
xor
mov
jg
xor
lret
xchg
add
fcomps
add
jg
lods
add
xchg
jbe
mov
add
jmp
sbb
scas
incl
add
incl
stc
mov
and
imul
pop
mov
andl
scas
jle
and
pop
or
push
xor
jg
rolb
jg
shlb
cmp
push
push
push
pop
sbb
add
push
jbe
cmpsb
and
addb
mov
movb
sub
xor
jg
pop
push
pop
je
mov
insb
push
inc
cmpsb
ljmp
stos
lea
pop
add
daa
push
fcmovu
mov
aaa
pop
pop
add
jle
add
lock
stos
pop
inc
push
cmp
adc
mov
sbb
out
or
or
push
dec
xchg
push
bound
mov
scas
popf
add
mov
mov
in
mov
arpl
xor
test
pop
push
mov
insl
xlat
out
incl
push
dec
stos
test
jmp
test
ljmp
xchg
mov
sbb
jle
ljmp
dec
dec
mov
fnstenv
add
push
jne
test
jbe
out
or
push
push
jp
mov
into
mov
js
dec
jbe
pop
add
fnstsw
mov
dec
enter
push
outsb
test
mov
iret
out
cmp
test
fs
ljmp
ljmp
fisttpll
xor
ja
push
movsl
test
mov
dec
neg
xchg
mov
push
mov
inc
out
or
sahf
inc
out
fwait
adc
scas
cs
aas
in
fnstenv
popf
inc
push
pushf
cmp
xchg
nop
imul
jnp
fisttpl
xchg
xor
xchg
xor
sub
sub
nop
adc
out
mov
ss
cs
or
insl
sahf
mov
xor
push
xor
call
mov
inc
push
jg
pop
fnsave
xor
or
mov
sahf
movb
and
int3
nop
es
lcall
push
pop
mov
or
aad
cltd
push
xchg
movb
bound
pop
ja
divb
push
push
imul
pusha
add
add
or
push
orb
pop
inc
xlat
jno
add
stos
outsl
adc
add
lds
and
and
or
sub
push
adc
pop
scas
inc
sahf
out
orl
repz
mov
mov
xchg
inc
and
cmp
lock
cmp
xchg
cmp
cmp
icebp
mov
xor
in
add
mov
push
add
incl
push
inc
sbb
leave
shrl
dec
push
mov
adc
mov
push
push
sbb
xor
or
cli
push
mull
adc
sti
std
add
out
or
and
add
sub
incb
add
pop
xchg
iret
add
outsl
pop
lcall
or
mov
sub
mov
pop
das
pop
push
adc
callw
or
pop
add
popa
sti
daa
std
out
jb
orl
out
lcall
or
mov
sti
ud0
cmp
mov
pop
arpl
ljmp
mov
decl
or
lcall
mov
ljmp
rorb
mov
dec
or
push
lcallw
sub
adc
decb
mov
xchg
jns
clts
add
mov
or
adc
pushw
call
incl
mov
ud0
rcl
push
push
incb
xor
push
decl
add
add
push
jmp
push
outsb
push
dec
or
pushl
imul
add
pop
sti
push
std
or
call
add
incl
adcb
pop
cmpsl
cld
mov
stc
lmsw
jns
and
call
jg
popa
mov
imul
push
je
dec
aam
lea
call
orl
ljmp
repnz
fcmovbe
pop
pop
aaa
xor
sarb
push
xchg
jne
shll
mov
roll
and
add
sahf
ret
pushl
hlt
pop
xchg
push
adc
jmp
ljmp
sahf
int
inc
lahf
inc
inc
push
inc
inc
pop
lea
mov
in
mov
dec
push
stos
push
popf
inc
cmpsb
dec
cmpsb
xchg
int3
jnp
inc
cs
and
negb
add
and
insl
dec
rcrb
push
shrb
rorl
xchg
int
outsb
shrb
es
and
fwait
push
push
jb
imulb
dec
and
insl
pop
daa
dec
xchg
jmp
call
push
push
test
cs
addr16
cmp
dec
push
sti
ficompl
add
repnz
mov
popfw
cmp
aas
jmp
xchg
decb
cwtl
xor
xchg
inc
push
xchg
push
xchg
fisubs
push
aaa
push
lcall
fisubl
push
xchg
es
xchg
xchg
notb
sub
call
and
dec
mov
scas
decl
push
xchg
inc
jmp
or
jb
fimuls
hlt
outsl
push
add
or
std
faddl
xchg
fstpt
push
jnp
jp
or
dec
rep
push
jl
or
jl
push
jge
xor
push
movq
es
jbe
adc
fcmovu
mov
push
dec
push
dec
repnz
repnz
jae
pop
int
fnstcw
push
mov
jnp
jge
hlt
in
add
int3
adc
jb
outsb
nop
negl
add
dec
mov
or
pop
add
xchg
fs
lahf
add
adc
adc
jns
outsb
pop
or
imul
cmp
jnp
lahf
dec
es
cmpl
pop
in
and
orb
jg
and
xchg
and
push
sub
iret
out
mov
cli
call
clc
push
idiv
call
jb
sub
jg
mov
icebp
ret
ss
pop
cld
and
sub
jg
mov
icebp
ja
ret
xorb
push
jns
repnz
mov
inc
cld
jp
es
xchg
xor
sbb
dec
and
andb
sbb
in
sarb
stos
push
pop
ja
jmp
and
jge
mulb
push
lcall
push
nop
cs
fsub
pop
push
dec
adc
int3
decl
push
jle
mov
fidivrl
arpl
clc
jbe
int3
cmp
push
pop
movsb
fnstsw
movsb
push
pop
or
dec
ljmp
hlt
sti
and
lcall
jns
or
pop
mov
push
mov
jmp
xchg
jmp
jle
fisttpl
mov
loop
adc
call
xchg
out
sbb
loope
and
lret
jg
out
mov
adc
push
pop
mov
add
cmc
test
inc
or
cmc
in
xlat
push
cmovno
sub
mov
fisttpl
push
test
call
add
incl
sub
add
ret
stos
sbbb
inc
lahf
or
and
adc
call
adc
push
adc
sub
pop
mov
test
pop
push
sbb
sarb
or
push
insl
out
es
and
push
sbb
push
mov
push
push
ljmp
or
add
and
imul
add
sbb
lcall
add
imul
cmp
add
add
adc
mov
add
or
dec
add
mov
inc
lods
mov
lea
les
aaa
xchg
scas
divl
sbb
add
dec
test
add
movsb
xchg
cmp
jmp
test
jns
fstpl
jge
ss
ret
add
imul
jb
or
testl
cmp
add
jno
bound
xor
or
fdivrs
or
add
cmpl
sbb
adc
cs
cmpl
push
add
add
or
push
insb
insl
and
in
scas
leave
and
popa
shlb
fcomp
xor
xor
jb
arpl
cmp
add
lea
or
bound
lds
mov
cmpl
lea
and
loopne
test
xchg
inc
or
repz
or
stos
lcall
inc
fs
lahf
push
test
jno
sarl
scas
jo
xor
dec
mov
sbb
and
dec
imul
push
pop
sub
push
fldenv
fwait
ljmp
pop
pop
dec
insb
out
incl
sub
sbb
inc
xor
push
in
push
js
insb
jne
addr16
in
mov
add
lea
xorb
sbb
ret
or
jno
cmp
sbb
lods
shll
shrb
popa
jecxz
jb
xchg
fdivrs
sub
mov
add
fiaddl
cli
xor
popf
xchg
popl
rclb
pusha
dec
mov
aad
cmp
popa
jecxz
inc
je
sbb
push
add
sbb
das
imulb
lret
cwtl
sub
es
je
push
dec
in
inc
mov
xchg
sbb
push
sbb
push
lahf
push
imul
and
xchg
dec
sub
and
lods
mov
push
aam
outsl
pavgw
invd
inc
xchg
test
ss
pop
adcl
dec
xor
push
push
sub
mov
jb
xor
and
scas
rcll
sbb
mov
lcall
cmp
arpl
pop
pop
mov
inc
fstps
jg
jge
or
mov
arpl
orb
insl
ret
mov
dec
push
loopne
and
jecxz
sbb
mov
dec
fcoms
xor
ljmp
in
sahf
sub
jp
dec
sbb
popf
jo
dec
jo
adc
xor
lea
push
add
cvttps2pi
sbb
pop
int
lods
mov
dec
ss
inc
imul
push
xor
pusha
insb
test
test
sbb
push
movsb
or
in
std
xor
je
jne
inc
mov
je
xor
add
mov
leave
dec
fxch
push
jbe
les
shlb
jo
jl
arpl
sub
arpl
rcrl
popa
mov
insl
lret
dec
leave
pop
sub
mov
imul
dec
mov
mov
arpl
mov
ljmp
inc
lret
mov
inc
imul
sbb
bound
sbb
pop
mov
push
insl
cmp
loopne
dec
mov
out
push
and
jnp
xchg
inc
sbb
imul
mov
vsqrtps
or
inc
es
insb
cs
rcpps
lock
push
jb
inc
inc
or
and
add
mov
imul
jecxz
insb
push
sbb
mov
sahf
daa
or
jo
push
outsl
sahf
push
loopne
jo
jb
adc
dec
add
adc
lock
inc
mov
xor
jae
cltd
pop
xchg
mov
sub
into
sub
popf
js
hlt
cwtl
imul
ss
add
push
sbb
into
push
les
xchg
rclb
jge
bound
inc
jnp
cltd
cmp
xor
mov
adc
mov
inc
gs
lods
and
sbb
pop
and
clc
fwait
popa
inc
je
insl
dec
outsb
dec
flds
stc
add
das
mov
shrl
loope
js
loop
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
lcall
push
dec
shll
mov
xor
pop
jbe
add
xchg
into
cmpsl
es
cmp
insb
inc
inc
xchg
pop
and
or
fiaddl
mov
and
cmpsb
mov
lahf
imul
and
shlb
cltd
lock
sbb
jns
push
xor
mov
es
ret
add
pusha
jge
mov
je
out
xchg
sbb
mov
add
push
movsl
test
inc
test
dec
pop
mov
pusha
add
jecxz
push
cwtl
add
xchg
arpl
out
jo
inc
sbb
mov
jo
rcrb
dec
jl
mov
adc
or
mov
and
inc
mov
xor
or
add
rolb
insb
scas
or
je
xchg
lret
lods
lret
sbb
and
or
xor
xor
ficomps
xor
and
ret
xor
gs
pusha
jne
inc
pop
insb
sub
jnp
jle
inc
inc
dec
ja
loope
aaa
cmc
dec
pop
lret
inc
or
movb
sub
mov
cmpb
mov
popw
xlat
adc
andb
and
fidivrl
addb
xor
inc
mov
loop
adc
fsts
pushf
aaa
outsl
cmp
cmp
cmp
insb
mov
cmpsl
inc
jo
arpl
outsb
jbe
pop
sub
cmpsl
sub
xor
push
adc
mov
adcb
js
mov
outsb
xchg
jmp
inc
push
test
pop
sub
outsl
dec
rcll
adc
dec
cld
fldcw
xchg
ret
adc
push
cltd
mov
arpl
test
pop
xor
popa
pop
push
pop
pop
cwtl
mov
mov
inc
and
inc
sbb
or
lds
nop
fs
xchg
loope
mov
cmp
jns
int3
mov
sbb
lods
cmp
sbb
push
out
das
push
aad
xchg
push
daa
outsb
scas
and
dec
adc
mov
nop
scas
inc
sub
lea
jecxz
test
test
ss
push
mov
push
push
mov
mov
inc
les
mov
sub
pop
fisubs
in
dec
jmp
pop
or
arpl
sbb
xchg
cmp
rcrb
mov
je
pop
mov
ja
xchg
jae
adc
xor
aaa
inc
sbb
pop
sub
sub
cmp
add
push
push
adc
rclb
lahf
dec
jmp
jecxz
lods
push
push
or
inc
and
cmp
or
sbb
add
adc
or
add
and
pop
adcl
mov
or
push
add
push
add
push
or
or
add
adc
mov
or
add
sub
mov
mov
mov
or
push
or
adc
std
mov
popf
es
push
adc
push
inc
pop
adc
sbb
push
sub
push
mov
push
inc
sbb
sbb
cs
or
xor
and
lea
bndldx
xor
push
add
xor
sbb
push
add
sbb
xchg
add
adc
cmp
push
sbb
add
mov
jl
sub
and
cs
or
fistpll
fcomps
or
or
add
adc
ss
idiv
outsl
lcall
subps
inc
pop
sbb
push
sub
or
and
std
daa
pop
or
or
sbb
add
sub
sbb
lods
add
cmp
push
adc
adc
sbb
adc
shll
loop
and
and
xor
sbbb
push
and
mov
push
or
xor
or
or
pop
mov
mov
and
outsb
add
xor
push
adc
pop
jl
sbb
sub
mov
nop
cmp
sbb
push
pusha
fistl
shlb
adc
or
mov
movhps
pop
jbe
xchg
cmovne
xor
add
or
daa
add
es
cmp
cld
divb
adc
xor
daa
or
cmp
daa
aas
sub
mov
push
sbb
and
or
cmp
es
xor
dec
sbb
in
push
mov
into
add
or
das
adc
call
xchg
adc
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
pop
adc
adc
adc
daa
adc
incl
push
je
push
sbb
and
es
pushl
sub
and
or
inc
and
or
add
push
cld
incl
mov
and
or
cmp
pop
dec
adc
or
pop
adc
and
and
or
or
outsb
sbb
lock
sarl
sub
sub
sub
jg
lock
inc
ds
out
ss
inc
sbb
xor
das
loop
xorb
lock
lock
or
dec
sub
sbb
rcr
mov
push
push
adc
push
inc
adc
ret
push
jg
pop
cmp
sub
push
or
bound
jo
or
or
incl
rdpmc
pop
and
or
push
sbb
xchg
jb
xor
dec
sbb
cmp
adc
es
xor
jp
cmp
adc
clc
outsl
jg
cmp
dec
add
cmp
incl
adc
lock
sbb
add
mov
incl
push
or
add
xor
cmp
sub
or
fistps
decb
mov
adc
or
push
aaa
mov
sbb
push
xor
mov
outsl
dec
adc
push
add
mov
fisttps
sub
fisttpl
out
cmp
push
cmpsb
scas
cli
dec
sub
lock
add
push
mov
pop
adc
adc
outsb
clc
decl
inc
dec
outsl
and
xor
testb
in
mov
push
push
push
and
inc
sbb
adc
call
push
inc
mov
cmpsb
add
inc
lcall
xor
sub
push
cld
decl
pop
adc
inc
outsb
fadd
shll
xor
bound
call
mov
inc
or
outsl
jg
clc
add
insl
fmull
and
jo
adc
and
push
or
cmp
adc
sub
jge
mov
push
and
push
fcoms
psubsb
pop
jno
adc
dec
jnp
or
and
jno
xor
scas
cli
pop
and
adc
and
push
push
sbb
sar
push
lock
or
or
jb
pop
inc
addr16
aas
dec
pop
jg
call
imul
lods
xor
sub
and
lock
add
inc
pop
pop
adc
adcb
inc
ds
scas
adc
andb
jno
sub
outsl
add
pop
pusha
dec
arpl
sbb
sbb
adc
out
clc
lcall
inc
pop
sbb
adc
xor
xor
daa
dec
sbb
sbb
push
push
sbb
sbb
adc
aaa
and
or
aaa
sbb
js
mov
mov
xor
adc
lock
or
ret
sbb
and
and
adc
sub
test
pop
or
cwtl
mov
add
jg,pn
ljmp
pop
adc
adc
lock
add
jb
jns
dec
cmp
mov
sub
sbb
loopne
xor
adc
xor
std
ljmp
and
inc
lock
add
sub
add
inc
jg
push
scas
cli
mov
imul
fdivs
rolb
test
std
push
pop
jno
and
and
cld
cmp
loopne
out
cli
sub
sub
pop
xor
sub
sbb
xchg
sbb
mov
and
jmp
xor
and
xor
lods
into
and
add
push
or
jb
pop
subb
pop
xchg
outsb
dec
xor
mov
adc
and
shl
push
push
out
inc
and
and
add
push
and
adc
das
lret
mov
pop
cs
push
cmp
adc
sub
adc
decl
adc
adc
imul
or
mov
inc
adc
ja
add
dec
pop
add
add
or
push
add
sbb
dec
pop
inc
lcall
movsl
or
repz
sti
add
sbb
je
call
dec
add
loopne
jae
push
mov
adc
push
insl
ja
sbb
adc
lock
fsubl
sub
push
add
pop
outsl
lahf
testl
sub
and
add
sbb
dec
fists
cld
adc
daa
pop
adc
cld
lret
adc
adc
aaa
dec
or
mov
pop
or
push
and
dec
scas
dec
dec
push
hlt
add
adc
xchg
daa
sbbb
dec
ljmp
add
jo
push
adc
jg
popf
and
ficompl
imul
or
dec
mov
cmp
test
or
testl
and
in
dec
ss
add
adc
pop
sbb
add
lock
add
sbb
addr16
call
mov
pushf
sbb
nopl
sbb
pop
insl
movhps
sbb
sub
or
cmp
fildl
or
or
or
or
dec
sub
sub
xor
push
or
pop
inc
adc
adc
push
inc
inc
push
sbb
add
pusha
je
xor
lock
adc
xor
fwait
mov
jl
or
xor
insb
inc
ljmp
inc
and
aas
scas
xor
xor
sbb
pop
add
decb
push
sbb
push
pop
push
sbb
in
mov
and
es
aas
enter
inc
cs
pop
fistps
dec
sub
sub
adc
lock
lock
add
lock
add
add
pop
clc
jg
decl
add
mov
sbbb
sbb
add
cmp
adc
pop
or
and
jmp
test
push
adc
or
push
sbb
cmp
unpcklps
cmp
push
sub
mov
ret
decl
adc
xor
sbb
sub
ret
sbb
adc
daa
adc
aaa
push
sub
or
sbb
push
ljmp
push
aas
adc
push
push
sub
adc
pop
sbb
push
cld
or
stos
cmp
pop
mov
mov
dec
test
fmuls
imul
outsb
jle
cld
sub
adc
fsubrs
xchg
pop
sbb
leave
add
movlps
pop
sbb
add
fdiv
jnp
jne
push
pop
push
jb
pop
sub
aaa
outsl
jle
mov
push
cs
fs
lahf
dec
in
movswl
push
mov
add
pop
xor
add
add
pop
std
pushw
and
add
outsb
cmpl
ljmp
rorb
movntps
push
pop
adc
adc
push
and
sbb
pop
pop
or
jne
sub
push
sub
pop
popa
js
sub
sbb
inc
push
push
inc
or
push
cmp
and
cli
ljmp
mov
and
sub
cmpsb
pop
invd
or
mov
push
cs
sub
or
sbb
or
lcall
sbb
adc
adc
daa
or
insl
or
add
and
pop
push
xchg
movsl
adc
pop
sub
jmp
push
sbb
or
mov
or
xor
adc
push
or
adc
fbld
adc
inc
lock
adc
adc
push
subb
lock
loopne
adc
push
wbinvd
push
and
lock
push
dec
xor
dec
adc
pop
or
jbe
scas
xor
sbb
nopl
or
and
jg
pop
fst
daa
sbb
jb
inc
inc
cmp
test
adc
cmp
dec
lock
mov
xor
popa
pop
sbb
aaa
sub
arpl
sti
cmpsb
xchg
dec
adc
and
pushl
xor
cs
push
mov
adc
adc
jno
jnp
rolb
and
adc
mov
lods
fimull
addb
cli
sbb
loop
sub
inc
xor
in
incl
push
cmp
push
xor
test
or
xor
cmpb
add
sub
hlt
inc
jne
push
das
mov
adc
ds
aas
push
rorl
pusha
push
nop
adc
clc
ljmp
js
or
loopne
inc
push
pop
dec
sbb
cmp
jg
adc
pop
pop
mov
jb
sbb
es
retw
or
sbb
jo
mov
decl
xor
sub
es
sbb
xor
or
push
sub
or
arpl
call
sbb
pop
sub
data16
pop
add
mov
adc
movsl
lock
movsbl
jno
or
adc
push
push
xchg
lcall
lock
sub
xchg
in
stos
imul
sbb
and
mov
pop
and
add
sub
xor
xor
push
push
inc
inc
sub
das
sbb
dec
hlt
outsl
or
sbb
and
xor
bswap
add
rcrl
xor
adc
femms
aaa
dec
adc
cli
outsl
fwait
cmp
adc
sbb
aas
adc
adc
dec
das
ds
cmp
and
sbb
pop
loopne
mov
pop
sub
xor
adc
mov
add
or
sbb
ret
jle
mov
dec
and
pop
adc
pop
adc
lock
sbb
or
push
adc
sub
sbb
xchg
jmp
push
pop
and
add
inc
dec
adc
sbb
jge
mov
push
adc
sbb
add
and
mov
or
inc
and
add
push
inc
or
lods
cli
sbb
add
adc
idivb
sbb
and
cmp
cmp
jp
or
or
inc
or
in
pop
test
bound
dec
inc
push
pusha
adc
dec
push
adc
rorb
or
add
sub
dec
dec
insb
idivb
mov
inc
push
sbb
arpl
mov
pusha
imulb
inc
cmp
sbb
sbb
mov
lock
add
dec
cmp
adc
or
bndldx
adc
jmp
pop
sub
adc
andl
xchg
sbb
ljmp
ds
sbb
and
push
dec
fmuls
pop
ds
rorb
xchg
or
outsl
or
or
add
add
or
adc
pushl
sub
add
pop
cmp
aam
inc
or
or
jl
and
adc
cli
add
xchg
ja
insb
std
aaa
popa
push
das
or
adc
lcall
push
inc
adc
adc
das
sub
pop
popa
lahf
pop
sub
mov
adc
sbb
and
pop
inc
adc
jg
test
cmp
call
adc
push
or
inc
inc
cmp
fdivs
lock
cmp
orb
out
add
mov
notl
sbbb
daa
mov
push
icebp
incl
xor
adc
dec
pop
shlb
cmpsl
clc
mov
test
mov
bound
cmp
daa
inc
add
pop
adc
sbb
pop
and
out
imul
std
incl
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
sub
sub
push
sbb
lock
sbb
pusha
lock
cli
decl
and
or
outsl
dec
dec
sub
push
sub
sbb
cmp
add
outsb
xor
pop
mov
jg
push
pop
cld
dec
and
sysexit
cmp
je
dec
mov
add
adc
es
nop
sbb
pop
jno
nop
pop
sbb
ja
jge
inc
sbb
or
sbb
push
mov
adc
pop
or
xor
mov
ljmp
shrb
and
push
pcmpgtw
or
lahf
add
jo
lea
ljmp
rclb
mov
or
push
jo
aam
mov
mov
sub
adc
xor
or
xor
xchg
jp
lock
jl
add
fsubp
shlb
aam
sub
push
pop
loope
jle
iret
dec
push
data16
and
xor
add
fldl
mov
or
add
das
rorb
or
lock
add
das
ret
or
push
and
or
stos
test
out
adc
xchg
sbb
adc
ficoml
call
aas
adc
push
add
bound
pop
aad
lea
je
dec
into
xchg
add
jb
sbb
push
bound
test
adc
or
xor
clc
stos
add
lock
pop
add
pop
insb
sub
lock
js
xchg
dec
or
fs
notb
add
mov
push
adc
or
adc
or
dec
xor
adc
daa
pop
push
dec
or
and
jb
push
fcmove
sbb
loop
dec
shll
lock
inc
push
push
cmpsb
sub
push
or
add
cmp
lds
aas
add
cmp
ss
decl
or
or
and
xor
outsl
pop
je
aam
pop
jg
or
sub
dec
dec
dec
push
ret
js,pn
sbb
push
cwtl
int3
add
das
add
or
adc
ret
push
sub
sbb
jp
or
or
sahf
sub
int3
add
pop
adc
out
shll
add
dec
out
xchg
and
sbb
adc
sbb
inc
mov
adc
xor
cmp
sub
std
sbb
inc
jmp
add
arpl
sub
lahf
icebp
lcall
sub
lock
and
lock
mov
fs
push
ds
inc
incl
imul
je
adc
and
xchg
cmp
or
cmp
or
inc
xchg
jmp
add
push
cmpsb
rorl
pop
inc
push
into
sub
push
mov
movl
sub
arpl
pusha
mov
lods
add
lock
jg
cmp
cltd
shl
les
lock
add
sub
pop
sbb
adc
or
mul
dec
jb
and
xor
montmul
cmpsb
ret
mov
sahf
add
adc
adc
cld
stos
je
dec
or
bound
lock
dec
xor
add
lock
dec
add
xor
lock
lcall
xchg
pop
mov
mov
mov
xor
popfw
ss
and
adc
mov
adc
das
add
or
pop
push
push
dec
je
mov
inc
push
and
clc
adc
push
push
add
popa
lret
lods
adc
add
inc
outsb
out
push
push
xor
cmpsl
cwtl
or
cmp
sbb
lock
adc
adc
addl
or
jo
pop
lock
sub
and
dec
or
push
xchg
mov
add
pop
std
or
mov
add
lock
hlt
jmp
shl
add
adc
pop
and
les
ss
or
adc
and
sbb
cs
pop
xor
ss
cmp
or
add
pop
outsl
out
clc
add
mov
jl
sub
sbb
add
jae
cmpsb
dec
adc
incl
sub
or
cmp
pop
mov
sbb
push
adc
out
xor
or
das
push
mov
fildll
add
cmp
into
mov
les
aaa
jecxz
fcomi
jg
das
add
lock
add
ss
mov
ja
xchg
sbb
and
and
cmp
sub
inc
ja
jg
sbb
and
xor
xor
sub
dec
dec
push
mov
in
mov
ficoml
jle
sub
das
adc
decb
sbb
and
sub
and
mov
ds
insl
mov
jp
and
add
dec
cmp
inc
dec
lret
xchg
scas
push
sub
sti
push
jp
dec
xor
xor
ds
dec
inc
push
and
movsbl
mov
sub
je
adc
dec
aam
pop
and
loopne
idiv
je
jp
cmp
and
cmp
sub
subl
sub
dec
mov
mov
xor
sub
push
ds
dec
xor
dec
xchg
lods
loopne
jle
dec
push
push
push
lret
xchg
cmp
movsl
xor
mov
sub
pushl
inc
inc
pop
or
xor
pusha
inc
aas
dec
jne
fs
cmp
sub
subl
xor
cmpsb
dec
lods
ds
add
lcall
jg
dec
pop
inc
cmp
and
inc
cmp
dec
cmp
push
test
in
jle
fwait
xor
cmp
xorl
and
jnp
pop
dec
mov
or
mov
add
push
push
inc
sti
scas
jle
add
aaa
lock
xchg
lock
subb
cmp
add
aam
lock
push
add
push
shll
loop
add
and
or
into
rclb
or
adc
push
add
or
xchg
jecxz
test
inc
sub
sbb
jl
pop
js
push
xor
add
push
inc
fdiv
js
insl
repnz
push
or
sbbb
xor
mov
lock
sbb
mov
lods
pop
add
push
add
pop
sub
test
mov
xor
cld
or
jo
push
addr16
fisttpl
mov
or
lock
in
insl
adcb
or
and
sbb
decl
andb
lock
mov
add
xor
xor
xchg
test
stos
sbb
rolb
adc
fnstsw
adc
or
adc
sbb
jnp
mov
adc
adc
or
das
sub
push
test
pop
dec
lret
adc
rcll
fs
adc
or
icebp
in
adc
and
xadd
mov
insl
or
insl
sub
sub
push
cmp
jbe
in
add
jno
pop
bound
dec
cmp
adc
sub
adc
sbbl
and
dec
cmp
movsl
dec
push
sbb
shlb
push
mov
rorl
pop
adc
pop
leave
xchg
iret
std
add
es
or
or
inc
push
mov
fwait
cmp
and
add
lcall
int
out
mov
push
add
or
mov
adc
insb
pusha
adc
data16
xor
fsubrp
adc
mov
or
adc
jae
std
push
or
add
add
xor
fnstsw
insl
and
sub
adc
sub
xor
inc
mov
insl
mov
or
in
add
sarl
fisttpl
and
imul
xor
dec
dec
push
loopne
insl
imul
or
arpl
daa
rcrl
adc
jge
ret
mov
sahf
repz
adc
fistl
test
mov
or
sysret
imul
stos
or
add
dec
adc
dec
popa
mov
add
fwait
xor
aaa
inc
add
fcmovnu
sarl
cltd
mov
mov
or
jo
loope
sbb
pop
es
test
insl
mov
divl
mov
scas
arpl
shrl
pop
rcll
add
inc
push
pop
lret
inc
sbb
mov
nop
pusha
movsl
push
and
mov
xchg
bound
rcrl
dec
in
mov
pop
sbb
cmp
mov
inc
inc
das
mov
adc
push
shrl
fldenv
fcoml
xor
out
jns
xchg
cmp
add
mov
mov
ja
xchg
pop
add
lea
test
mov
jmp
or
pop
outsl
add
aaa
and
fisttpll
push
jecxz
ja
stc
cmp
sbb
sbb
xor
mov
test
or
mov
and
pusha
lea
push
jmp
or
roll
stc
mov
adc
pusha
inc
or
js
adc
push
jno
adc
mov
inc
mov
jae
or
mov
divb
and
adc
add
and
lock
pop
shlb
sbbb
les
inc
pusha
xor
add
js
shrb
add
in
add
ficoms
sub
xor
push
out
mov
push
and
sub
sub
cmp
xor
ret
mov
sbb
or
or
in
popf
insl
mov
xor
pop
add
xor
sbb
xor
pop
and
pop
mov
pop
and
and
mov
pop
inc
and
add
push
sbb
int
cmp
inc
sub
pop
push
subb
cmp
adc
test
rol
popf
or
add
dec
pop
leave
clc
fsubl
fsubl
inc
push
or
lock
adc
fidivl
arpl
mov
add
enter
mov
mov
add
cmp
adc
inc
movsb
sbb
lods
adc
push
inc
popa
insb
fiaddl
rol
pusha
popa
fiadds
dec
xchg
add
xchg
push
loopne
mov
mov
nop
mov
ss
data16
push
xor
pop
mov
ficompl
in
push
mov
popa
lret
sbb
jns
outsb
in
inc
add
or
jle
inc
or
test
jb
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
