divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
adc
mov
cmpsb
add
icebp
xor
ret
pop
nop
pop
dec
popa
andb
mov
std
clc
or
addb
mov
int
mov
aas
add
pop
and
popa
insl
xchg
add
and
mov
mov
sbb
inc
dec
push
and
mov
or
cmpsb
dec
shrd
popa
incl
mov
pop
or
bswap
mov
out
lahf
jg
out
ud0
jmp
repnz
in
push
pusha
ljmp
mov
ss
cli
push
cld
push
imul
lahf
daa
or
push
pushf
dec
cs
push
dec
daa
loopne
add
or
or
xlat
sub
aam
cmp
add
pop
jge
int
add
in
mov
imul
adc
sub
xor
xor
rcrb
jo
mov
in
stos
and
sub
push
jl
inc
lcall
dec
and
test
pop
add
cs
xor
popf
add
les
movb
adc
lods
add
jb,pn
rcrl
and
outsl
and
cs
cmp
mov
or
rol
xchg
sahf
jae
arpl
xlat
out
in
xchg
test
gs
testl
sbb
inc
xlat
orb
dec
cmpsb
icebp
add
sub
or
inc
jmp
jecxz
and
add
hlt
pop
scas
ds
lea
add
push
sbb
push
xor
pop
lods
dec
jne
sahf
sbb
jp
pop
xchg
gs
sub
rol
imul
jbe
mov
xor
xor
xchg
enter
out
jno
int3
fucomi
gs
std
cvtps2pi
faddp
ja
jne
jmp
mov
lahf
sahf
ja
cwtl
pop
mov
cltd
das
call
mov
in
cltd
jb
xchg
into
int3
loope
dec
shr
pop
mov
adc
sar
hlt
mov
out
fwait
and
or
push
adc
icebp
pushf
adc
subl
push
push
pop
xchg
pusha
push
lret
cmp
hlt
jb
lea
stos
mov
push
mov
cld
imul
movzbl
or
rcll
mov
popa
cmp
adc
rolb
sub
outsb
movaps
mov
jbe
mov
repz
pop
aam
adc
call
fildl
add
cmp
nop
push
pop
cmp
in
push
mov
push
push
movsb
lret
adcb
loopne
pop
outsl
sarl
xor
sarb
cltd
loopne
push
pop
or
sbbb
push
add
ret
push
outsb
ja
xchg
mov
mov
push
sub
add
pushf
and
aad
or
aam
es
jne
push
inc
imul
add
adc
mov
pop
sub
sub
push
push
subb
add
dec
and
enter
push
imul
inc
adc
push
nop
and
rolb
push
insl
jo
mov
movsl
aas
sub
pop
xor
cld
add
mov
les
imul
or
leave
fidivs
push
push
cmpsl
mov
add
dec
in
push
popf
dec
loop
leave
push
jg
addr16
or
cmp
pop
add
mov
dec
xchg
dec
or
dec
out
push
push
outsl
leave
and
test
or
in
add
sahf
jp
dec
pop
mov
ret
scas
cmp
rorb
aad
loop
stos
pop
cltd
test
sahf
lea
mov
mov
gs
inc
imul
test
push
mov
rorl
mov
je
inc
ret
fcmovnb
jg
add
movb
dec
adc
add
push
test
push
popa
mov
aam
lea
dec
out
or
lds
fldenv
dec
sub
fadd
or
jno
fiaddl
add
pop
push
popf
je
rcrl
sub
inc
xchg
in
add
sbb
or
popa
pop
lock
rclb
add
cmp
dec
inc
dec
inc
pop
xlat
hlt
or
cmp
iret
fnstcw
movsl
mulb
cmpsl
sbb
jmp
and
dec
jge
in
jae
add
push
test
pop
data16
adc
xchg
popf
jmp
sbb
fcoml
gs
and
xor
jnp
inc
xchg
cmp
imul
pop
je
call
push
sbb
insl
push
insb
fdiv
sub
and
or
push
dec
shrb
push
mov
cmovne
rcl
sub
js
xor
adc
test
xor
frstor
fdivl
and
sbb
lcall
or
stc
cmp
push
rcrl
cmp
ljmp
ljmp
or
inc
or
sbbb
cmp
push
gs
xchg
sbb
test
ja
sub
rolb
dec
add
ret
call
mov
data16
add
ret
mov
jo
xchg
sub
imul
pop
call
add
push
sahf
movsb
mov
call
add
adcl
mov
and
sarl
add
dec
scas
lods
and
lcall
jecxz
adc
push
xchg
sub
sbb
shr
clc
inc
and
mov
sysret
cmp
sub
cmp
pop
push
call
call
xchg
sti
push
jne
xchg
enter
lea
dec
cltd
pop
or
mov
popf
scas
in
call
je
xor
lods
ss
hlt
jmp
ja
mov
push
dec
inc
push
ss
lock
pop
pop
jge
add
dec
add
sub
lods
imul
insb
mov
ss
lods
or
ja
pop
mov
xchg
xchg
icebp
mov
mov
dec
call
push
inc
into
pop
in
dec
push
inc
ror
nop
xor
push
xor
add
add
ss
andl
sbb
sbb
sbb
cs
push
or
in
shl
or
and
xlat
pusha
jp
xchg
push
inc
push
loop
push
cmpsb
xor
clc
sbb
sub
lea
xchg
or
add
ret
sub
or
movl
push
jecxz
inc
movzbl
aad
add
imull
push
shlb
ds
je
add
call
ret
aas
mov
mov
test
or
sbb
lds
and
push
subl
gs
mov
pop
rolb
sub
arpl
push
xchg
mov
xchg
push
hlt
push
mov
sub
pop
xor
loop
add
popa
dec
jo
and
icebp
push
cmp
jmp
lret
lods
xchg
sbb
mov
lcall
roll
in
in
and
jne
ds
sbb
xlat
lock
push
sbb
sbb
sbb
stos
je
addr16
loop
fdivr
mov
jb
dec
cmp
sarl
and
fdiv
mov
dec
sbbb
roll
pop
pusha
push
add
int3
call
nop
pop
mov
adc
mov
cmp
insl
jmp
ja
fsubrs
jb
add
cmpsb
push
add
inc
or
popf
add
dec
fcompl
jb
call
or
xchg
xor
test
in
testl
addr16
xchg
loope
cmp
test
jne
add
out
lea
jno
fcmovb
adc
in
pop
cmp
lods
mov
nop
test
je
and
lea
sub
daa
shrb
lods
sub
imul
loop
ljmp
testb
jecxz
mov
bswap
jb
hlt
fdivrp
xor
fdivr
pusha
imul
and
xor
jno
sbb
hlt
inc
outsb
adc
psubsw
push
dec
mov
enter
lea
aas
xor
sub
or
mov
sub
or
mov
adc
fisttpl
push
add
mov
sbbl
movsl
les
adc
pop
mov
pop
fsubrl
mov
xchg
repnz
enter
cwtl
sub
mov
rep
movsb
add
push
jo
inc
rep
push
nop
pop
mov
inc
cltd
arpl
je
ss
rcll
fnstsw
and
adc
sarb
mov
test
push
add
xchg
hlt
jge
sub
dec
jno
repz
cmpsl
mov
aad
int3
mov
pop
pop
mov
aad
aas
pushf
xchg
inc
shlb
out
scas
js
pop
mov
add
push
sbb
ljmp
outsl
push
jb
je
loope
jne
ljmp
add
stos
je
dec
add
insb
popa
pop
pusha
je
sbb
cmpl
push
fistl
sbb
addb
cmp
scas
sbb
mov
call
nop
push
add
cltd
jp
sbb
test
aad
push
xor
add
sub
xchg
jbe
or
aaa
stos
subl
negb
fiaddl
mov
lcall
leave
aad
adc
adc
pop
dec
dec
iret
dec
loope
repnz
xlat
hlt
sbb
in
ret
mov
sbb
mov
ficoms
pop
fstps
or
add
push
push
or
insb
or
and
scas
dec
adc
sbb
add
call
sbb
js
subl
push
jae
and
fisubs
xchg
pushf
cmp
jle
jmp
sbb
movl
loopne
jbe
add
dec
in
in
xor
inc
push
push
add
and
or
pop
or
jmp
aaa
mov
mov
sub
push
stc
hlt
xchg
cltd
divl
sbb
loope
and
nop
dec
add
lret
and
in
enter
push
pushf
add
jno
test
test
jp
and
push
insb
cmp
adc
adc
xor
mov
and
dec
and
or
stos
xor
fsub
adc
sbb
jmp
mov
and
cmp
cmpsb
sbb
popl
scas
cltd
je
inc
mov
testl
mov
in
mov
mov
shl
aam
xchg
in
in
mov
adc
jns
ret
mov
lcall
mov
test
add
imul
and
xor
mov
push
loopne
cmpsl
adc
xchg
int3
pop
aas
push
fists
xchg
jp
ret
sbb
jle
sub
jne
mov
jne
outsb
push
add
lods
lods
push
cmp
bound
std
fidivrs
out
inc
xor
and
push
mov
cmp
dec
mov
shll
xor
xor
call
addr16
push
mov
test
mov
enter
aam
sbb
add
sahf
les
add
out
sub
aaa
xchg
jae
mov
lods
lods
dec
xlat
push
push
cmpsb
push
inc
mov
jecxz
repz
test
cmp
aam
dec
lea
jb
pusha
xor
add
jns
pop
pushf
in
dec
adc
or
cmp
insb
in
rorb
int3
push
ret
cmp
je
in
add
jne
jl
jecxz
inc
fsubrl
call
idivl
lods
adc
movl
push
mov
add
ss
popa
and
cmp
mov
andb
xchg
sbb
pop
mov
or
inc
and
dec
pushf
sbb
lea
pop
icebp
or
gs
sbb
cld
mov
shr
push
add
add
out
enter
cmp
loop
sub
shlb
cld
mov
sete
pcmpeqb
es
into
sbb
pop
ss
pop
fbstp
ja
inc
out
jmp
shrb
add
std
or
je
or
or
je
mov
mov
cmp
adc
cmpsb
ret
or
loopne
outsb
inc
and
inc
loop
cld
inc
das
cwtl
push
adc
adc
fimull
sbb
xor
bound
pop
stos
or
fcomps
aam
loopne
mov
adc
aam
fisubrl
jle
sbb
pop
stos
pop
add
push
cld
lcall
out
jge
pusha
popf
rorl
cmp
shll
add
or
jmp
lods
push
mov
push
mov
xchg
inc
cmpsb
lock
mov
rorb
mov
xor
lods
imul
jbe
inc
jne
addr16
enter
sbb
jnp
nop
push
add
out
popa
pop
inc
adc
mov
fildl
push
or
lods
cmp
push
loopne
ds
popa
ja
push
mov
mov
mov
xchg
push
inc
add
rolb
hlt
repnz
xor
xor
mov
or
or
shr
out
outsb
pushw
or
jnp
out
js
out
ss
stos
std
std
repnz
xchg
push
xor
sbb
cld
cmp
push
push
pushf
cli
fldl
inc
rorl
pop
mov
mov
mov
aas
jmp
mov
dec
ja
inc
sub
inc
leave
dec
gs
adc
pop
jns
and
adc
pop
push
movsb
pop
outsb
sub
add
aas
out
dec
pop
dec
adc
std
adc
push
adc
arpl
test
insl
outsl
mov
jne
push
aaa
and
jne
je
add
mov
lock
add
mov
push
shlb
cmp
or
or
imul
push
sarb
jnp
inc
fcoms
mov
sub
or
lock
pop
add
inc
shr
int
mov
add
add
orb
jmp
les
clc
ss
xor
mov
inc
xor
or
adc
loopne
ret
int3
lods
or
sbb
enter
stos
inc
push
push
add
daa
push
out
jle
jl
adc
xchg
adc
cmp
mov
xor
push
xchg
les
cld
popf
mov
inc
into
mov
adcb
inc
jecxz
int
cld
cwtl
push
mov
push
call
into
roll
ds
fwait
jo
mov
jbe
sub
outsb
adc
cmpsl
test
push
sbb
mov
mov
dec
pop
cmp
push
or
enter
mov
in
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
mulb
and
or
or
out
pop
js
xor
jmp
lahf
data16
cmp
mov
adcb
mov
xchg
nop
jb
cmp
pop
aaa
ret
mov
cmpb
fs
push
and
pop
sub
jne
mov
mov
mov
or
fstp
xchg
xorb
push
pop
add
dec
mov
enter
sbb
mov
cmp
invd
sbb
sbb
repnz
mov
jl
sbb
out
filds
jne
mov
jmp
or
int
movsb
cmp
or
es
or
or
jmp
add
xchg
xchg
xor
cmp
cmpsl
pusha
push
or
orl
cmp
adcl
pop
sbb
or
addb
sbb
test
or
into
jne
pop
loope
xchg
sbb
ljmp
decb
push
call
mov
iret
mov
cmp
ss
mov
imul
cmp
fistl
sub
mov
mov
mov
stos
inc
imul
or
addr16
sbb
out
xchg
jnp
test
push
fucomip
cmp
push
pop
push
sti
je
cmp
jbe
movsb
rolb
cmp
cld
scas
and
insb
jg
nop
clc
push
adc
push
jbe
std
pop
jbe
or
jo
jne
or
testl
inc
push
in
subl
xchg
insb
inc
or
pushf
cli
adc
jo
fadd
jo
jo
and
loope
ret
test
inc
jmp
pop
je
imul
inc
scas
push
lea
add
xchg
test
mov
and
clc
mov
mov
aas
or
aaa
xor
and
ja
push
enter
jmp
push
call
cmp
mov
call
cmpb
cltd
adc
pop
mov
shll
into
call
or
sbb
sbb
add
pop
add
cs
stos
loopne
sti
push
or
or
loope
push
xchg
addb
dec
in
sub
pop
and
stc
or
test
js
cmp
cmp
pop
push
lea
mov
cs
je
jl
les
or
into
xchg
aam
mov
data16
push
sub
push
push
push
cmpsb
aam
jmp
fistpl
inc
pop
aas
mov
popa
fsubrl
call
rol
add
je
xor
faddl
push
insb
xor
pushf
pop
scas
aaa
in
lcall
js
push
push
jno
cmp
popa
jecxz
xor
add
push
or
push
push
sub
sub
pop
xlat
shrl
cmpl
or
xchg
subb
imul
mulb
mov
jmp
add
lock
roll
jb
mov
leave
jmp
in
xor
addps
add
xlat
sub
lock
dec
push
hlt
or
push
adc
mov
out
xchg
adc
jne
clc
and
cmp
repz
rclb
cld
push
rorb
adc
lods
orl
inc
cwtl
pop
adc
add
sub
insl
sub
dec
or
inc
pop
jmp
push
cwtl
loop
aaa
adc
mov
ret
movsb
call
nop
ss
fdivrl
push
add
aam
imul
pop
addr16
sbb
push
push
int3
sbb
loope
mov
cld
jne
into
cmp
movsb
pusha
xor
sub
push
cmp
loopne
or
jne
push
pop
out
and
mov
addr16
push
int3
jecxz
decb
xchg
push
jns
outsl
xorl
sbb
mov
or
pop
push
jmp
add
sarl
movb
mov
cld
lds
inc
notl
mov
inc
mov
cld
push
lods
push
aaa
dec
setb
push
int
adc
cmp
xchg
add
movsb
sbb
xor
xchg
sub
cs
lea
xchg
push
dec
jl
js
negb
push
rclb
push
mov
or
fxtract
mov
dec
pusha
jmp
pop
xorb
movsb
xor
or
mov
push
xchg
jl
movl
xchg
add
add
imul
ret
popf
mov
out
xchg
jne
out
std
jmp
add
push
call
in
movsb
jmp
jb
sbb
js
sbb
mov
aad
test
or
fnstenv
mov
sbbl
cmp
xor
int3
jbe
pop
adc
xor
mov
dec
test
or
mov
push
stc
pusha
jo
push
sub
pop
and
push
push
mov
push
sbb
pop
sub
xor
cwtl
or
popf
pushf
or
cmp
sahf
insl
mov
shr
test
stos
push
inc
adc
js
push
fs
inc
mov
pushf
sbb
mov
inc
mov
loopne
andl
cmp
jg
push
dec
rorb
scas
shlb
pop
mov
dec
pusha
mov
orb
xor
mov
aas
mov
andb
adc
cmpsl
ret
scas
clc
dec
insb
nop
push
decl
or
inc
inc
dec
jne
push
adc
cmc
movzbl
add
je
cmp
stos
aam
nop
mov
lret
add
dec
jge
jecxz
stos
nop
out
or
incl
nop
sbb
rcl
sub
es
lods
fstpt
add
jmp
and
adc
cli
sub
push
push
test
xor
or
gs
mov
and
ja
xorb
xor
jmp
xchg
push
push
xchg
sub
testb
ss
add
xor
ljmp
dec
dec
lods
imul
sti
loopne
push
push
mov
sahf
sbb
sub
inc
xchg
daa
inc
cwtl
das
lds
xchg
es
pop
outsb
sub
das
dec
aam
outsb
aam
int
test
push
jp
dec
dec
andb
lds
icebp
push
adc
and
mov
push
lds
mov
lds
daa
dec
lds
enter
lods
pusha
andb
aas
mov
mov
xor
sarb
mov
inc
add
mov
xorl
jp
add
sub
and
lods
or
out
nop
sbb
inc
push
push
add
shll
adc
inc
add
mov
cmpl
out
xor
sub
enter
adc
out
pushf
mov
rorb
je
loopne
add
rol
sub
pop
andl
pop
subb
shll
dec
xor
addb
or
and
nop
nop
test
mov
roll
mov
sbb
cmc
xchg
movsb
add
push
mov
cli
inc
lds
pusha
inc
nop
dec
andl
add
andb
or
arpl
sbb
or
jp
jle
in
inc
cmp
call
cmp
out
call
call
mov
push
cli
js
dec
aam
inc
adc
mov
iret
call
adc
adc
int3
pop
jmp
xchg
cmp
fstpt
rcrl
ss
mov
decl
inc
jge
mov
or
pop
psubsb
add
out
clc
scas
pop
jmp
mov
xor
pop
xchg
pushl
cmp
jmp
add
pop
xchg
sbb
mov
sbb
jno
rolb
addr16
jecxz
popf
xor
je
push
into
cmp
adc
fimull
jmp
dec
xor
fldcw
lds
rclb
push
sbb
xchg
adc
ljmp
push
call
repnz
mov
or
adc
or
sub
or
sbb
and
mov
sahf
pusha
lock
pop
mov
push
and
inc
pop
pushf
mov
fiadds
sub
sarl
mov
cmp
es
or
add
movsl
push
ljmp
aad
es
jle
add
into
cmc
shll
add
sar
pop
or
jae
push
es
pop
add
je
orl
iret
dec
mov
fcmovnb
push
and
or
in
and
ficomps
cltd
ret
add
push
fwait
inc
push
inc
and
das
push
shrb
xor
dec
push
fnstenv
push
add
and
imull
push
movsb
shlb
jae
dec
sbb
push
push
sbb
jp
sbb
ror
adc
inc
mov
push
ret
enter
pop
aaa
aad
dec
arpl
arpl
and
ljmp
add
pop
int3
or
or
add
inc
addl
inc
push
push
push
push
pusha
inc
inc
xchg
pop
and
dec
enter
dec
push
mov
push
inc
fnstenv
pop
aaa
and
les
pop
adc
inc
pusha
inc
inc
xor
xor
out
rolb
rolb
popf
rolb
adc
fsts
loope
jmp
and
nop
push
inc
mov
or
push
inc
dec
fwait
mov
inc
cs
pusha
out
out
cmp
nop
je
mov
insb
dec
out
sbb
sbb
rcll
mov
push
sub
sbb
movsb
repz
add
lsl
sbb
jmp
push
scas
push
xor
mov
imul
adc
pop
daa
mov
lock
daa
pop
nop
add
or
push
dec
out
and
dec
outsb
add
ja
out
mov
repz
repz
add
cmpsb
mov
or
cld
or
push
adc
add
insb
dec
out
push
mov
inc
adc
call
dec
adc
dec
shrb
addr16
inc
dec
cmpsl
jge
fstl
leave
adc
sbb
imul
idivl
xor
push
pop
jmp
outsb
or
xor
xor
xor
sub
cs
xor
or
lahf
ret
ficoml
mov
adc
add
pop
add
and
add
add
or
rcrb
cmp
dec
sahf
divl
je
xchg
add
mov
add
cmp
push
jb
push
gs
pop
xchg
out
addl
sub
or
or
and
add
or
shll
fisttpll
or
pop
lcall
or
inc
scas
in
or
or
in
je
push
or
sbb
lods
xor
xor
adc
pop
adc
or
adc
jns
adc
int
das
nop
xchg
push
adc
ja
adc
xchg
adc
xchg
sub
sbb
in
sahf
push
push
inc
pop
rcrb
pop
and
sbb
and
sti
mov
xchg
cmp
fcompl
sbb
jb
mov
dec
in
lcall
sbb
sbb
jns
jo
xor
cmp
xchg
cmp
pop
push
push
add
xchg
inc
negb
pop
inc
mov
add
add
sub
cmp
mov
lcall
das
cmpb
jmp
cwtl
ss
xchg
push
in
push
in
imul
cmp
rol
adc
in
jns
in
in
out
sub
jns
mov
imul
call
xor
adc
xchg
and
sahf
mov
cmp
cmp
cmp
push
jmp
xchg
mov
push
aad
imul
xchg
in
fsubp
aad
in
cmp
mov
mov
xchg
out
int
add
or
je
lock
dec
icebp
cmp
mov
das
jnp
inc
sahf
xchg
stos
or
test
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
cmp
cmpsl
div
pop
enter
negl
gs
clc
clc
clc
or
aas
stc
stc
and
xchg
cmp
cli
cli
add
iret
sti
sti
fdivrp
cld
mov
je
cld
push
push
nop
shlb
out
leave
jnp
std
xor
sbb
incb
fsts
and
inc
ret
pop
sub
jb
cmp
shll
adc
stos
mov
or
jecxz
jecxz
in
xor
xchg
xor
ficoml
dec
push
cmpl
cmpsb
loopne
adc
inc
or
out
lea
xchg
scas
call
pop
sti
adc
dec
adc
push
sbb
setb
push
cltd
or
jmp
and
mov
lcall
jns
xor
cltd
and
cli
or
jae
repz
sbb
sbbb
cli
stc
loopne
repnz
stc
imul
stc
div
divl
xchg
xchg
clc
cltd
sub
nop
mov
rclb
sbb
mov
xchg
or
cmp
mov
in
jmp
mov
jb
test
out
test
push
pop
aad
xabort
jmp
mov
lcall
jns
xor
pushf
and
and
aad
imul
xchg
in
aad
fdiv
out
mov
sbbl
jb
imul
ljmp
push
jmp
testl
testl
mov
into
mul
sub
nop
mov
movsb
mov
repnz
and
repnz
inc
repz
setb
sub
or
lcall
div
mov
add
mov
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
sub
inc
repz
pop
lock
push
jo
adc
mov
fldenv
sti
push
movsl
jmp
loope
repnz
loop
pop
hlt
shll
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmpsb
jb
or
and
repz
inc
xlat
dec
repz
out
inc
or
in
xor
in
xlat
repnz
repnz
cmp
test
cmp
icebp
mov
icebp
das
xchg
pop
jns
sbb
adc
repnz
repnz
dec
xor
mov
icebp
test
cmp
leave
sub
int
jne
stc
mov
dec
icebp
xor
jb
icebp
or
out
lock
mov
cmp
scas
lock
jp
jmp
shll
jo
out
push
sub
ffreep
push
inc
insb
scas
div
push
loope
inc
cmp
cmp
inc
add
mov
adc
mov
jne
ret
mov
jb
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
dec
movb
testl
fisubrs
jg
dec
or
dec
push
nop
push
jns
adc
int
imul
add
insb
adcl
push
cmpsl
fldcw
push
repz
mov
jns
pop
insb
sbb
push
push
aad
in
sahf
negl
push
dec
outsb
or
dec
cmp
faddp
movb
or
push
xor
mov
cld
lods
ret
xor
and
lea
inc
cmp
bound
lods
shll
lret
push
ret
ficompl
pop
dec
or
fnstsw
xchg
or
xchg
and
dec
mov
jg
dec
dec
out
fists
push
subb
push
push
xor
sbb
aad
movsb
sub
push
xor
ret
cmp
inc
jecxz
dec
aaa
sub
xchg
push
mov
mov
mov
pusha
mov
daa
mov
addb
xor
ret
xchg
or
in
jmp
mov
pop
add
inc
dec
push
push
push
fsubl
call
nop
adc
dec
sbb
jno
pop
insl
adc
adc
adc
sub
insb
jno
push
push
xchg
lret
mov
xchg
xchg
sbb
movsl
mov
cli
adc
dec
dec
jno
fneni(8087
sub
stos
adc
push
ss
cmp
sbb
adc
jp
jmp
ret
mov
sub
jmp
movsl
adcl
pusha
adc
add
cwtl
add
shr
add
pop
and
loope
jb
inc
add
add
es
xchg
pop
xchg
push
inc
sbb
inc
jb
js
inc
xorb
jo
rcrb
rcrb
xchg
and
rorl
and
xor
inc
in
adc
inc
xorb
and
inc
adc
mov
adc
hlt
and
mov
pusha
push
sub
and
add
and
pop
sbb
mov
push
mov
inc
or
xchg
inc
xor
fiadds
mov
push
add
rcll
sub
xor
fimuls
imul
loopne
inc
adc
mov
sbb
sahf
dec
mov
cmp
mov
jg
addr16
out
push
loop
adc
and
in
es
jp
xlat
lahf
sub
andb
iret
les
pop
dec
lahf
stc
push
push
repnz
inc
lahf
push
xor
adc
shll
stos
lahf
dec
int3
xor
sahf
and
es
mov
xchg
aaa
xchg
rcrb
movsb
sti
and
xchg
push
lahf
mov
in
adc
xchg
or
inc
lahf
int
xchg
pop
add
mov
jmp
xchg
lcall
adc
cli
cs
inc
lahf
in
dec
nop
outsb
dec
pop
and
mov
lahf
popa
xor
cmp
adc
es
push
int3
xor
ficomps
outsb
or
adc
jmp
aam
or
xchg
repz
imul
nop
fwait
push
movsb
lahf
imul
inc
pushf
xor
rcrb
pushf
pushf
sub
sbb
jo
push
test
cwtl
add
stc
push
out
lahf
outsb
cmpsb
mov
lcall
cmp
cs
add
sbb
mov
push
lahf
xor
mov
inc
xor
pop
push
fs
or
lahf
adc
andb
adc
je
dec
lahf
fbstp
lahf
inc
mov
in
dec
andb
rcll
push
add
or
popl
add
mov
or
xor
test
and
xor
xchg
loope
add
sahf
jmp
ret
xchg
aad
test
and
xor
sahf
push
stc
aaa
dec
push
nop
out
loopne
data16
clts
inc
lcall
cmp
and
dec
cltd
ds
ljmp
adc
push
bound
jp
mov
mov
inc
mov
inc
push
enter
cwtl
test
lea
xor
fidivl
push
push
cmp
data16
int
je
inc
cmp
nop
push
pop
std
lods
xchg
xchg
dec
cmpsb
mov
pusha
adcl
arpl
dec
mov
sub
nop
inc
in
or
and
test
fcmovnb
or
jb
mov
sbb
mov
daa
inc
jp
mov
clc
adc
enter
xor
shlb
or
hlt
or
aaa
xor
pop
cmpsl
xchg
and
test
jecxz
mov
sub
sub
or
adc
jle
adc
loopne
push
popf
add
dec
xor
mov
std
xchg
cmpsl
or
and
pop
insb
add
xor
fwait
add
lods
jo
sbb
push
sub
movb
mov
sahf
add
movsb
mov
mov
xchg
mov
in
add
and
dec
leave
mov
cwtl
adc
add
sti
jmp
mov
lods
popa
fsubs
pop
nop
add
test
inc
dec
add
and
push
dec
test
mov
mov
cmc
data16
loope
dec
nop
push
mov
adc
inc
nop
dec
int
bound
ds
repz
push
cmp
loope
mov
fstps
xor
add
and
rol
cmp
or
scas
add
cmp
loopne
dec
test
xchg
cmp
cmp
inc
jp
sbb
cmp
xchg
sbb
jo
scas
je
sti
push
daa
or
and
dec
mov
xor
nop
inc
push
cmpb
jb
jp
jo
mov
and
and
and
inc
rolb
adc
fisttpl
inc
ret
or
jmp
mov
loop
scas
xorl
mov
xchg
lods
mov
xchg
mov
fldenv
xchg
mov
nop
sbb
push
push
inc
xor
sbbb
or
call
xchg
scas
cwtl
sub
or
mov
hlt
test
cmpsb
sub
lret
mov
pop
cmp
das
je
cltd
loopne
mov
or
cmc
dec
inc
ja
call
sub
xor
test
das
cmp
xchg
imul
jl
pop
dec
sub
pop
insb
popf
dec
or
in
loope
push
je
jle
lcall
xor
xor
mov
nop
out
push
sub
mov
cmp
pop
shll
loopne
cmpsb
mov
add
adc
mov
sub
call
fs
rcrl
cmp
loopne
scas
bound
pusha
cmpsb
and
cli
enter
shl
shrb
xor
rorb
rorb
adc
xor
nop
sub
jecxz
push
xlat
ss
je
xor
sub
fs
int
sub
shll
adc
push
cltd
xchg
mov
data16
sub
sub
shrb
sub
or
sub
or
sub
push
dec
adc
enter
sbb
fsub
xchg
cltd
xchg
xor
cmp
cmp
aas
push
faddl
aaa
shrl
inc
mov
int
je
or
dec
sub
rcl
dec
cmp
cwtl
imul
sub
scas
jbe
mov
imul
loopne
adc
lcall
cmp
std
pop
movsl
test
mov
lcall
cmpsb
and
fs
rcl
imul
sbb
sub
pusha
and
bound
xor
nop
sub
mov
add
sub
rcl
andb
dec
xor
ljmp
popa
cs
and
in
into
mov
push
inc
cmpsb
push
fidivl
inc
sbb
lcall
cmpsb
and
mov
jmp
cltd
xchg
jecxz
adc
or
pop
sub
cmp
aam
rolb
cmpsb
sub
sub
dec
sub
rcl
dec
xor
pop
sbb
push
add
sub
cmpsb
mov
adc
hlt
or
and
or
push
cmp
divl
xor
int3
sbb
lock
add
insb
xchg
or
int
jl
lods
and
scas
cmp
xor
mov
mov
ror
xor
dec
xor
or
ljmp
outsb
cmpsb
mov
push
sub
outsb
xor
mov
xor
pop
imul
or
mov
xor
sub
dec
repnz
add
rcrb
insl
sti
lret
outsb
sbb
clc
dec
inc
cmpsl
mov
rcl
or
push
loopne
or
cmp
xchg
or
in
xchg
xor
push
ret
push
lcall
dec
inc
sbbl
mov
loope
mov
jp
out
push
movsb
das
jmp
xchg
je
mov
nop
rorb
jmp
clc
js
rcl
add
movsl
adc
sbb
sub
cmpsb
mov
sarb
cmpsl
popa
sub
xchg
mov
sbb
fs
cmp
fs
push
pop
addr16
fs
dec
pop
cmp
cmovp
pop
xor
adc
lea
pop
dec
push
popa
cmp
shlb
lods
cli
daa
imul
jle
sub
mov
pusha
ret
sbb
ds
pop
cmpsl
jo
jmp
xor
imul
jbe
les
sbb
aaa
dec
lds
lods
add
xor
mov
adc
test
dec
cmp
mov
call
push
mov
xor
pop
test
test
inc
push
in
bt
sbb
cmp
shll
and
jmp
add
add
nop
add
cli
test
jbe
test
ja
mov
rolb
xor
int3
add
jl
inc
mov
inc
dec
inc
pop
push
in
nop
and
pop
dec
add
mov
add
cmpb
xchg
and
add
dec
push
ds
xlat
jae
mov
push
add
inc
add
xchg
out
xchg
loopne
or
mov
jno
mov
push
dec
jo
pushf
or
ret
or
pop
mov
mov
xchg
jl
pop
add
pop
mov
orb
mov
add
js
out
push
xchg
dec
test
imul
push
dec
shlb
cmp
sbb
push
dec
insb
cmp
dec
jge
dec
dec
sbb
faddl
push
jae
sahf
mov
in
push
cwtl
lret
mov
inc
dec
inc
pop
dec
mov
ret
aam
inc
pusha
inc
push
cmovns
out
or
call
pop
mov
cmp
pop
push
pop
aam
in
cli
stc
rolb
cmpsl
mov
mov
nop
pop
jg
xchg
xchg
pop
mov
pop
test
es
pop
sub
stos
dec
pop
leave
xchg
and
sub
xor
pop
add
jb
pop
xchg
pop
fwait
roll
lock
fiadds
out
or
pop
fldl
nop
dec
ret
adc
repnz
notb
and
fwait
adc
jl
cli
testb
pop
sbb
xor
popa
dec
or
sub
xchg
fstpl
push
sbb
call
sbb
mov
jge
jbe
fimuls
call
scas
cmpsl
inc
jmp
and
cmp
or
fldl
nop
into
out
mov
push
shll
fildl
pop
sti
test
ret
mov
mov
outsb
inc
jp
rcrb
fistl
fistl
inc
dec
movsb
loopnew
rcr
nop
outsb
loopne
inc
sub
xchg
addb
mov
and
lret
mov
xchg
insl
dec
xlat
insl
inc
xor
out
rolb
loopne
add
lds
push
mov
jmp
int
dec
inc
push
mov
imul
inc
clc
cs
call
mov
xchg
loop
mov
dec
call
fnsave
mov
push
imul
adc
pusha
dec
mov
and
push
mov
inc
pusha
mov
faddl
dec
adc
test
and
cmp
loop
mov
xchg
test
aaa
mov
and
xchg
lea
nop
mov
stos
xchg
test
fs
dec
inc
push
jmp
ja
push
inc
dec
inc
outsb
xorl
cmpsb
mov
dec
enter
dec
inc
pop
and
cmp
popa
push
mov
push
test
daa
dec
adc
mov
mov
jae
loop
xchg
xchg
orb
cmp
adc
add
push
je
push
loop
call
movsb
add
popa
xchg
jmp
incl
jl
je
les
dec
movb
hlt
movsb
xchg
insl
test
or
sbb
cmp
lock
lret
notb
sbb
aam
push
pop
ljmp
test
divb
mov
cmp
adcl
pusha
jae
inc
dec
addl
movsb
enter
insl
in
mov
jns
push
cmp
xor
push
fcompl
sub
repz
sub
adc
push
pusha
arpl
shrb
push
push
loopne
adc
push
adc
out
mov
or
inc
cmp
or
xor
fcoms
in
adc
inc
jmp
aam
cld
mov
nop
inc
and
cmp
add
mov
cmp
mov
ret
push
inc
call
js
inc
pop
inc
mov
or
mov
add
fsubl
add
test
cmpsb
xor
or
push
and
dec
ljmp
lcall
add
cmp
inc
jmp
dec
jmp
adcl
jp
fimuls
inc
leave
add
inc
adc
inc
jmp
inc
inc
inc
pop
je
pop
adcb
test
add
sbb
and
inc
call
inc
js
sbb
inc
sti
sbb
pop
cld
pop
lock
shll
pop
rclb
dec
je
cmp
decb
pop
and
cmp
leave
or
xor
mov
cld
inc
add
xor
lcall
je
pop
add
ds
popa
adc
push
popf
pop
pop
inc
inc
nop
ret
fstps
gs
sbb
add
loop
std
enter
sbb
sbb
loop
pusha
popa
lock
jnp
mov
loopne
mov
movsl
xorl
call
gs
xchg
div
sub
inc
inc
shl
push
andl
pop
jb
jmp
pop
mov
fisubrs
jge
sub
add
push
push
or
inc
jecxz
xchg
or
dec
or
and
xor
ja
cmp
shr
xor
jne
xor
outsl
scas
adc
push
add
ret
push
sar
inc
push
adc
mov
jl,pn
call
sarl
mov
mov
mov
push
hlt
dec
mov
insl
cmp
mov
and
sub
or
push
cltd
xchg
lret
mov
scas
nop
mov
dec
aaa
sbb
and
cmpsb
inc
addr16
xchg
sbb
addr16
mov
xor
inc
and
mov
dec
inc
push
rolb
add
inc
add
and
adc
push
inc
cmp
add
sahf
incb
xchg
push
ja
and
sbb
xchg
test
out
adc
xchg
das
or
hlt
adc
sub
jp
lock
jmp
dec
lock
test
call
push
add
lret
add
sbb
xchg
and
subl
sbb
das
xchg
xor
mov
ljmp
ds
rorb
cmp
loopne
cmp
lcall
xor
dec
add
dec
jmp
stc
fnstcw
or
pop
test
jle
xchg
sarb
xor
xlat
and
and
cmc
fists
rclb
xchg
adcb
xlat
sbb
mov
movsb
push
push
add
lods
rclb
xchg
xor
xor
mov
mov
and
cmpb
and
arpl
adc
aas
daa
add
js
daa
push
int3
or
push
lea
mov
mov
add
insb
es
and
push
add
call
add
push
call
inc
xor
mov
imul
xor
outsb
fisubrl
dec
lea
mov
push
sub
push
int3
jae
xor
dec
xor
jbe
push
loopne
lods
es
sarl
mov
or
adc
inc
sbb
out
jae
aas
adc
sbb
and
jmp
fadds
dec
pop
and
inc
mov
mov
push
adcb
add
add
mov
rclb
movl
mov
punpckhwd
push
imul
fidivrl
push
adc
or
inc
xchg
cmp
xchg
inc
nop
addl
and
jecxz
stos
pop
or
xor
fwait
jle
or
mov
or
imul
call
movsb
and
lcall
pop
push
inc
dec
dec
mov
stos
mov
mov
dec
push
sbb
pop
mov
mov
sbbl
and
jmp
stos
mov
fsubp
cmp
js
sub
jns
adc
pusha
outsl
shll
sbb
inc
cmpb
out
add
movsl
out
lds
push
add
or
and
sbbl
cmp
das
add
push
pop
xor
mov
mov
adc
jle
ljmp
or
mov
or
lcall
xor
sbbb
xor
addr16
adcb
push
and
shll
pop
add
sbb
mov
add
jbe
sbb
add
dec
sbb
mov
pushf
clc
xchg
pop
push
add
dec
repz
sub
pop
jb
adc
xchg
lea
sub
mov
jb
sub
adc
rcrb
sbb
sbb
sbb
sbb
loope
pop
mov
mov
lock
nop
or
mov
mov
in
jo
cmp
jmp
push
ret
sbb
leave
inc
inc
inc
inc
inc
arpl
xchg
rorl
pop
mov
xor
in
mov
in
jecxz
shrd
push
std
fwait
pop
xchg
add
pusha
adc
and
in
dec
stos
xchg
push
in
sbb
in
rolb
nop
push
jne
in
add
loopne
push
loopne
or
jo
test
jp
test
or
sbb
sub
cmp
das
dec
cmp
push
daa
and
test
insl
jb
mov
add
insl
mov
mov
call
add
stos
or
nop
add
xor
adc
fsubr
push
popf
fstpt
dec
ret
add
rorl
scas
mov
sbb
test
mov
out
and
sub
rorb
hlt
call
or
sbb
addr16
faddl
call
outsb
sbb
sbb
and
and
xchg
fisttps
ja
lds
call
pop
repnz
inc
or
add
fdivs
mov
inc
fnsave
mov
mov
xlat
inc
rolb
je
sarb
sub
ss
push
cwtl
adc
imul
lea
add
cltd
sub
sbb
or
test
pop
test
mov
sbb
add
mov
adc
in
addr16
sbb
cvttps2pi
push
mov
addr16
mov
xchg
shll
shll
inc
testl
push
cmpsl
popf
push
je
cmp
xchg
cmpsl
push
je
outsl
es
xor
push
cwtl
test
int
mov
mov
or
scas
data16
adc
mov
fnstsw
shlb
mov
sub
stos
mov
lods
movsl
push
test
and
jl
ss
jno
daa
pop
sbb
or
icebp
popf
push
cmp
outsb
pop
mov
push
pop
and
call
pop
push
push
push
dec
mov
in
scas
movl
dec
dec
pop
adc
outsl
pop
mov
decb
imul
loopne
add
mov
divl
sub
inc
or
mov
aam
add
inc
push
pop
fildll
dec
dec
hlt
push
fistl
enter
jns
sub
arpl
xor
jns
popa
adc
mov
jns
test
xchg
shlb
mov
loopne
dec
jp
stos
cmp
inc
ja
xchg
jns
mov
testl
add
aad
and
lret
xchg
and
jb
js
dec
push
call
movsb
mov
push
test
enter
adc
or
movsl
cmp
sbb
push
jns
int
lods
mov
or
adc
cmpsl
and
movsb
ljmp
lds
mov
dec
sbb
inc
xlat
mov
call
mov
int
shlb
inc
xlat
lods
inc
mov
or
jns
mov
sbb
jns
int3
mov
ror
popa
mov
daa
hlt
jo
jns
std
xor
test
enter
push
and
daa
fadds
mov
test
mov
ds
cmpsl
mov
pushf
les
push
jns
jp
mov
inc
nop
mov
mov
or
xchg
nop
or
mov
xchg
sbb
xchg
mov
push
xchg
jns
and
adc
inc
inc
inc
sub
jns
inc
inc
sbb
xor
out
lcall
roll
jns
xchg
stos
mov
adc
shll
push
push
and
inc
inc
inc
jns
sub
jp
jns
inc
inc
daa
inc
jns
xchg
rorb
lods
jns
xchg
nop
sbb
pop
ffreep
mov
adc
fstl
jmp
sub
push
adc
cmpsl
add
je
shlb
sbb
xchg
sbb
add
push
popf
insb
sbb
sbb
ja
and
xchg
sbb
jae
fistpl
sbb
pushf
int3
lds
es
aam
xchg
rclb
pop
in
inc
popa
nop
push
jns
out
pop
inc
inc
jns
lds
cmp
sub
adc
ficomps
jecxz
mov
sbb
jns
inc
sub
adc
sbb
inc
jns
sbb
int
call
or
les
or
popf
cmp
mov
and
mov
xor
inc
insl
pop
mov
leave
nop
sbb
aaa
call
imul
in
xor
scas
pop
sub
pop
sbb
scas
xchg
and
inc
inc
pop
stos
fs
cmp
or
js
add
cmp
jp
sub
push
adcb
enter
pop
nopl
cmp
or
push
sub
dec
xchg
xchg
pop
cwtl
cmp
sub
gs
dec
pop
arpl
pop
loope
mov
or
fs
xor
les
push
pop
cmp
or
mov
pop
call
and
loope
cwtl
mov
shlb
icebp
push
dec
cs
aas
je
push
xchg
das
xchg
push
push
fidivrs
test
das
mov
jns
pop
dec
imul
lahf
and
add
dec
call
push
add
inc
push
das
pop
add
sarb
das
rorb
xor
ss
push
xchg
nop
popf
sti
mov
mov
jns
and
imul
call
xchg
das
jle
ljmp
dec
adc
shlb
dec
adc
das
xchg
rcr
shlb
pop
push
das
pop
inc
mov
or
dec
inc
das
cmp
inc
dec
inc
das
inc
das
aad
or
out
loope
add
and
adc
or
mov
pop
or
add
mov
pop
inc
fs
push
jae
and
jp
push
and
and
fsubs
sbbb
leave
jle
or
insb
push
fnop
jecxz
mov
pop
enter
push
fs
push
or
xchg
or
xchg
repnz
sbb
push
sub
inc
ss
jmp
mov
pop
int
or
nop
sub
and
sbb
dec
lea
nop
mov
adc
test
pusha
inc
adc
mov
rcl
mov
fcomps
imul
pop
in
or
mov
add
pop
cwtl
rorb
lock
and
test
inc
test
inc
adc
push
popa
inc
push
movsl
or
cmp
les
dec
enter
or
daa
push
cwtl
rclb
cmpsb
shlb
pusha
cmp
fisubrs
jo
ret
ret
in
xor
dec
xchg
test
mov
test
fadds
loopne
adc
push
cmp
push
call
dec
popa
inc
addr16
push
mov
push
cwtl
nop
push
dec
sub
mov
rorb
adc
popa
push
cwtl
push
jo
aad
je
push
mov
xor
lods
ret
stos
sub
push
fwait
ret
mov
and
dec
scas
xor
mov
jb
mov
or
inc
or
aas
and
popa
xor
unpcklps
das
sar
test
ss
mov
adc
das
pop
mov
call
lret
jl
repnz
call
cmp
loopne
call
call
call
lds
dec
call
movsb
lods
lret
xchg
das
jg
push
call
pop
call
in
call
push
jne
das
pop
mov
call
jl
mov
test
adc
cmp
xor
es
sbb
cwtl
add
mov
lret
movsb
in
mov
cs
pop
pop
sub
adc
ror
jb
lods
int3
mov
dec
ja
xor
movsl
jb
jle
jae
test
in
call
jb
inc
aam
lock
pop
sub
hlt
es
sahf
xchg
lret
cld
adc
add
add
leave
or
leave
dec
ja
cs
loope
adc
xchg
adc
sbb
sbb
dec
in
mov
stos
and
push
mov
sub
cs
dec
in
jle
jae
in
mov
inc
xchg
dec
orl
gs
dec
cmp
frstor
dec
xor
push
adc
jb
sbb
pop
add
testl
rclb
aam
mov
push
xchg
std
insb
and
or
jb
jo
xor
sahf
cld
pushf
and
and
std
xchg
ss
je
data16
js
dec
lcall
movsb
sbb
imul
and
lcall
in
sbb
call
xchg
xchg
inc
test
inc
lods
dec
or
mov
cli
mov
xchg
cmp
dec
mov
and
or
push
pop
fldl
pop
nop
arpl
inc
lock
xor
mov
add
adc
ljmp
test
mov
adc
leave
dec
inc
pop
pop
mov
dec
dec
or
test
loopne
pop
mov
xchg
stos
mov
and
and
xchg
test
shlb
add
or
ja
inc
call
dec
mov
fisttpll
xchg
andb
imul
aaa
dec
fsubs
sbb
xor
xor
cmp
cmp
add
pop
adc
sub
dec
ficompl
add
inc
rolb
mov
push
ja
jae
sbb
xchg
das
inc
adc
inc
movsb
adcb
popa
fsubrp
addb
pop
adc
jp
ret
push
mov
sub
push
dec
sbb
cmp
nop
sarl
push
aad
dec
push
xchg
sarb
mov
ss
rclb
pop
and
inc
mov
xor
pop
mov
aad
mov
jb
es
mov
mov
pop
push
or
sub
aad
andb
add
sbb
dec
shlb
or
mov
nop
sti
pop
rcl
adc
or
rcl
mov
jp
add
add
fbld
fs
cwtl
push
adcl
or
fs
dec
push
and
data16
stos
cmpsl
xor
and
xchg
inc
test
movsl
outsb
sbb
sub
fsubl
inc
cmp
mov
xchg
inc
sbb
inc
mov
aam
sbb
and
cli
sbb
mov
jmp
in
push
pop
jno
xchg
cmp
sub
adc
inc
sbb
mov
adc
or
add
fwait
and
sub
adc
je
cs
jo
push
call
fstl
mov
push
in
stos
dec
push
ret
inc
jo
gs
cmpsb
hlt
sub
push
or
inc
inc
gs
sub
push
cmpsb
je
adc
gs
adc
push
cmpsb
adc
ja
adc
fiadds
add
leave
addb
adc
repnz
dec
adc
pop
cltd
adc
pop
pop
push
cltd
adc
adc
daa
cwtl
mov
addl
xchg
and
in
pop
lahf
jo
cltd
adc
das
sub
inc
lods
fwait
shlb
dec
xchg
or
test
adc
out
rorl
fisttpll
and
sbb
adc
sti
call
outsb
and
xchg
adc
xchg
out
mov
jno
and
cmp
cmp
inc
mov
inc
and
xor
and
lods
push
cmp
mov
xchg
jmp
loop
cmp
lods
inc
clc
adc
cmpsl
xor
inc
push
ret
lret
int
nop
test
gs
inc
test
mov
inc
dec
mov
or
adc
inc
out
inc
test
enter
inc
fldt
cwtl
jmp
adc
imul
sbb
inc
xor
xor
addl
jecxz
or
dec
dec
lds
mov
xor
movsb
add
movsb
sbb
adcb
jb
sub
inc
and
orl
nop
push
dec
repz
scas
or
push
or
shlb
andb
int
dec
mov
push
jno
mov
pop
gs
sbb
out
enter
xchg
negl
arpl
bound
mov
mov
cmp
jecxz
jecxz
xor
inc
add
js
dec
inc
add
jne
shlb
out
imul
add
push
cmpsl
aaa
mov
add
inc
ret
aaa
nop
cmpsb
sub
cwtl
adc
xor
dec
js
cmpsb
popa
pop
or
xchg
pop
add
cmp
or
or
add
mov
pop
ljmp
roll
add
add
je
aaa
xor
jne
shlb
mov
enter
push
xor
aam
mov
lods
add
pushf
aaa
imul
arpl
scas
inc
clc
aaa
stc
push
cld
add
sbb
or
mov
add
sbb
cld
jb
inc
dec
inc
popa
int
out
push
add
test
push
iret
addb
add
pop
pop
iret
fs
and
adc
cmp
into
mov
mov
iret
cmp
mov
ret
add
call
addr16
or
fisttpll
mov
addr16
fiadds
pushl
rorb
xor
pusha
into
jle
minps
loopnew
mov
xor
cwtl
decb
fldl
add
sbb
jp
addr16
addr16
and
sbb
add
movsl
les
mov
ret
or
adc
pushf
loop
and
push
or
pop
scas
push
addb
mov
sbb
pop
sahf
cmp
pop
mov
add
pop
dec
push
pop
fwait
rolb
xchg
adc
test
dec
dec
sbb
mov
nop
mov
inc
andl
pop
shll
mov
out
or
mov
pushf
mov
cmp
adc
cli
push
pop
and
in
adc
adc
mov
lcall
sub
clc
mov
push
out
cmp
fstl
movsl
push
and
ja
mov
adc
xchg
je
fldenv
test
incb
movsb
xchg
popf
out
imul
push
add
pop
rcrb
or
inc
sub
xor
mov
push
xor
mov
mov
pop
and
or
mov
mov
cwtl
mov
lock
mov
or
mov
mov
mov
push
sub
push
xor
repz
gs
lahf
xchg
stos
repz
xchg
hlt
sbbb
lahf
pop
dec
sub
repz
add
out
stos
push
les
push
imul
and
imul
push
movsl
inc
or
popl
adc
xchg
mov
and
cwtl
sub
aam
push
cmp
push
popf
test
pop
mov
or
pop
je
push
call
jle
inc
xor
or
popf
mov
scas
pop
adc
fstl
xor
or
push
js
loope
dec
loop
inc
cmpsl
insb
movsl
hlt
and
sbb
sbb
fstl
cmp
jne
fldt
add
inc
sub
jle
adc
inc
ss
add
or
gs
xchg
movsb
dec
inc
add
sti
fwait
repz
dec
inc
add
sub
and
xchg
jo
repnz
xlat
fwait
push
jnp
xor
sub
add
sub
dec
mov
les
xchg
fwait
adc
nop
sub
adc
jb
test
fimull
xor
test
push
xor
push
cmp
lock
and
jnp
adc
sbb
jnp
lcall
adc
sub
ret
pop
test
stos
cmp
adc
push
nop
scas
test
xchg
inc
xchg
lds
lret
lea
cmpsb
xchg
cmp
cmp
xchg
inc
xchg
xchg
xchg
xchg
sub
mov
int
mov
xor
cs
cmpsb
dec
mov
cmp
cltd
inc
push
les
inc
nop
inc
out
cmp
adcl
mov
jmp
dec
xchg
push
pop
xor
jmp
cltd
int3
or
and
and
adc
fwait
dec
mov
bound
xchg
cmp
add
and
or
sarl
fadd
scas
sahf
repz
repz
push
cmpsl
stc
cmp
sub
or
sbb
imul
mov
pushf
pop
push
lods
push
fdivp
cmp
mov
inc
push
idivb
cmp
movsb
push
push
sahf
out
sahf
xchg
jl
push
inc
ss
fidivrs
je,pt
push
jns
cmp
sbb
repnz
fidivrs
mov
fidivrs
jle
push
pop
into
sbb
incb
add
es
repz
and
loop
sbb
repz
mov
sahf
cmpsl
stc
pusha
sbb
pushf
scas
sarl
lret
or
and
repz
sub
pop
data16
cmp
repz
sahf
lods
mov
out
cmp
decb
ss
inc
movsb
icebp
cmp
shr
jb
in
repz
outsb
jle
sahf
mov
daa
rol
data16
loop
clc
adc
sub
cmp
aaa
je
iret
repz
out
push
push
cmp
adc
cmp
jnp
daa
pop
mov
jbe
add
fldt
jbe
push
cwtl
cmpsl
insl
mov
mov
das
out
iret
dec
test
xor
add
push
jbe
push
scas
test
pop
rol
dec
push
test
pop
xchg
inc
xor
pop
jo
dec
dec
adc
addr16
rol
movsl
jle
sub
xchg
test
push
arpl
sti
fimull
gs
dec
push
je
mov
rcrl
mov
rclb
pop
xor
push
mov
mov
lahf
push
insb
adc
lret
xchg
stos
dec
jb
xor
xor
pop
or
aaa
outsl
ss
xor
lds
or
push
add
and
push
cmp
mov
sbb
ficoml
cmp
testl
repnz
cmp
pop
mov
xchg
fwait
and
sub
pusha
lds
pop
dec
mov
dec
and
push
pcmpeqd
push
cmpl
or
mov
sub
or
dec
aaa
je
les
adc
outsl
and
and
fisubs
add
sbb
mov
fidivl
aaa
mov
cmp
nop
sbb
mov
push
push
inc
push
inc
pop
inc
outsl
outsl
popa
lret
rorb
fcoml
push
cwtl
xor
rorl
xor
sar
rcrl
lods
pop
dec
imul
adc
call
dec
jae
inc
jne
outsb
je
fiaddl
js
jg
fistl
jnp
inc
xor
sub
sub
std
cmp
sub
inc
inc
xor
xor
xor
jge
idivb
scas
xor
xor
inc
xor
xor
ss
xor
cmp
sub
mov
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
das
shlb
ret
cmp
test
push
jo
or
lock
xchg
cmp
xor
std
outsl
mov
push
xor
or
push
and
inc
aaa
sbb
push
mov
inc
pop
dec
addb
cmpl
rorb
arpl
xchg
popa
xor
dec
and
cmp
ss
in
mov
add
xor
and
dec
cltd
cmp
dec
outsl
mov
dec
dec
inc
push
sbb
in
ret
pop
adc
push
fwait
popa
pop
inc
dec
hlt
imul
jne
dec
pop
push
imul
jle
out
inc
out
adc
push
sub
out
cmp
in
gs
ds
lods
sahf
add
psraw
fsubr
cmpsb
push
hlt
mov
dec
mov
or
xor
add
jg
or
test
fiadds
insb
outsl
xor
imul
lods
insb
loop
fs
je
push
push
jns
and
inc
cmp
add
dec
xchg
sbb
xchg
mov
cmp
ljmp
xchg
frstor
pop
sub
inc
arpl
orl
insb
insb
mov
xchg
and
outsb
ret
push
pop
fadd
lret
adc
add
dec
roll
inc
xor
or
pop
clts
mov
addl
enter
push
gs
add
xchg
sbb
pop
inc
sbb
paddusw
pusha
push
and
mov
daa
and
inc
push
test
cmpsb
push
imul
add
jp
mov
scas
je
dec
fs
push
jo
mov
nop
gs
cmp
insb
ret
data16
popa
fs
jo
mov
imul
dec
subb
mov
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
inc
cs
push
push
push
add
lcall
je
or
push
popa
dec
ss
imul
pusha
mov
nop
mov
mov
pop
add
or
inc
dec
add
popl
orb
sub
es
inc
rolb
add
ret
add
and
sbb
jo
sub
aaa
and
inc
ret
xchg
pushf
add
sbb
push
jg
and
inc
fwait
or
push
insl
popa
rcll
sbb
fadds
adc
sbbb
or
add
cmpb
mov
das
push
adc
out
scas
xchg
xchg
adc
push
sbb
iret
repz
sbb
sbb
call
std
sbb
push
das
push
pop
int
pop
pause
cld
and
cli
js
int
sub
jns
stc
jp
push
mov
cmp
cld
fdivr
mov
cmpsl
inc
ret
enter
xchg
popf
sbb
mov
mov
and
push
aad
popa
outsl
lods
test
xor
adc
pusha
jbe
ds
xor
repz
cmp
mov
ret
scas
xchg
or
cltd
push
sbb
add
adc
repz
repz
cld
or
in
int3
repz
les
xorl
out
nop
sahf
out
fimuls
jo
sahf
out
insb
push
iret
repz
pop
push
push
dec
dec
inc
jns
repnz
cmp
xor
out
sahf
out
sub
sbb
out
sahf
sbb
or
add
dec
repz
cld
or
hlt
call
enter
repz
nop
jo
xor
lock
out
lcall
jl
out
sub
adc
cld
push
repz
rcr
rol
mov
out
cmp
js
sub
aam
lahf
out
sahf
mov
cld
add
repz
call
cwtl
jl
orb
lcall
test
pop
imul
mov
jb
inc
jl
inc
sarb
add
sahf
test
dec
adc
jbe
push
sub
inc
inc
add
adc
inc
mov
push
inc
dec
cmp
push
sub
loopne
mov
lret
mov
adc
and
insl
scas
popl
fiadds
jecxz
add
push
sub
aas
mov
mov
pop
xor
out
pop
les
mov
adc
sbb
pop
dec
add
push
ja
ficoml
int
mov
aaa
inc
mov
pop
or
loopne
pop
data16
cmpsl
jecxz
push
and
bound
jg
or
shrb
mov
jmp
test
mov
shrb
inc
mov
dec
ret
jns
xchg
mov
out
jnp
sbbb
subb
call
movl
fwait
out
cmpl
mov
loopne
jg
pop
jne
pop
stc
xchg
sbb
push
je
imul
ret
dec
fidivs
clc
inc
les
push
mov
jo
push
lock
jo,pn
bound
scas
adc
pop
jb
or
push
mov
insb
das
inc
xchg
mov
jl
add
fstp
mov
or
mov
loopne
xchg
dec
sahf
mov
loopne
out
adc
shrb
push
or
or
xchg
inc
sub
aas
das
fs
pop
jg
fcoms
fistpl
and
mov
ss
bound
aas
int3
adc
push
ljmp
add
jbe
xchg
inc
xlat
jns
pop
rcr
dec
and
or
push
lcall
pushf
setl
lret
push
mov
adc
sbb
pop
push
popf
jl
in
mov
aas
sbb
jo
cmpsb
jg
mov
fmuls
imul
aaa
mov
leave
or
mov
daa
or
jg
enter
xchg
adc
inc
jb
pinsrw
shlb
daa
fimull
shl
adc
jp
insb
adc
push
sbb
daa
fs
loopne
dec
sbb
movsb
dec
adc
cmpsb
jns
sahf
loopne
daa
lock
dec
jecxz
enter
mov
fcompl
inc
dec
lret
mov
jnp
and
mov
sarb
dec
pop
add
mov
ret
push
dec
imul
xchg
and
pxor
in
add
insb
push
lcall
scas
pop
push
and
and
inc
push
aam
jg
push
push
add
push
outsl
ja
xor
cs
lods
scas
jle
jb
and
ja
sub
add
lret
mov
daa
movsb
and
jecxz
mov
and
add
mov
es
repnz
outsb
inc
fistps
fucomip
xchg
inc
sbb
cmc
xor
mov
push
add
bound
lock
in
jbe
push
jb
mov
adc
inc
add
insl
jo
dec
icebp
or
pop
outsb
push
add
out
xor
xchg
add
push
mov
jnp
mov
jae
pop
jb
push
push
jae
push
adc
jp
ret
and
push
fcoms
dec
mov
inc
gs
ret
addr16
out
adc
mov
jecxz
inc
sbb
push
xor
mov
push
add
and
add
xor
test
lds
dec
push
push
imul
dec
jo
std
lcall
lods
jb
jns
mov
ret
lret
imul
cmpsb
sbb
rcll
cwtl
cmp
cmpsl
xor
push
jcxz
xor
imulb
push
movsl
cmp
inc
popa
or
and
fs
fisubl
and
popf
daa
cmpsl
and
inc
imul
jge
xchg
sbb
xchg
mov
add
pop
add
andl
inc
add
or
push
fbld
jne
or
idivb
or
inc
fnsave
sub
jecxz
dec
pop
push
test
pop
adcl
and
dec
jmp
nop
pop
mov
sub
fs
mov
xor
addr16
dec
icebp
dec
test
dec
push
inc
jo,pn
ja
call
adc
mov
das
and
push
and
mov
jb
inc
callw
outsb
xor
jo
or
xor
push
dec
add
sarl
orb
das
pop
outsl
mov
mov
scas
inc
add
stc
add
mov
xor
rorl
sub
cmp
inc
insl
xor
xor
dec
dec
pop
add
jnp
jecxz
jns
xchg
adc
add
ja
jbe
sbb
inc
pop
ficompl
push
outsl
cmp
xchg
dec
and
roll
xor
shrb
shlb
add
sbb
movsb
mov
or
lock
xchg
sbb
rolb
insl
imul
jb
mov
mov
jp
push
mov
mov
inc
jmp
jmp
das
push
aaa
fwait
rcr
pop
dec
inc
dec
pop
or
aas
inc
cmc
xor
out
mov
and
jnp
push
inc
mov
sbb
scas
add
inc
pusha
pop
dec
jp
mov
stos
iret
add
fiaddl
dec
and
add
add
add
inc
pop
adc
cs
push
cmp
scas
movsl
ss
cmp
clc
dec
sbb
push
jo
jno
cmp
add
scas
dec
out
inc
into
pop
roll
in
lock
push
or
dec
cmp
xchg
imul
add
iret
pop
pop
cmpsb
addl
int
xchg
into
fcmovbe
add
in
inc
cmpsl
add
push
push
mov
imul
mov
xchg
push
push
and
movaps
jb
jns
cld
pop
aas
ret
jae
adc
add
je
fadds
add
xor
add
mov
and
roll
lcall
or
jo
add
out
into
insb
sbb
pop
out
push
add
inc
bound
sub
shll
imul
lock
fbld
pop
fs
cltd
ficomps
mov
push
popa
scas
scas
ret
std
fwait
xchg
and
mov
or
cwtl
aam
push
xchg
data16
clc
jecxz
xchg
cmp
sbb
push
pop
in
aam
add
add
sub
pop
add
adc
mov
insb
push
sbbb
pop
xorl
sbbb
repz
iret
icebp
pop
and
add
std
ret
jns
imull
or
test
rolb
dec
mov
pop
add
pop
add
add
fldcw
inc
imul
or
sti
fsubrl
data16
xchg
mov
fs
pusha
popa
push
jne
jmp
pop
pop
hlt
out
loopne
inc
mov
adc
push
push
test
or
push
daa
xchg
test
inc
mov
or
mov
sub
xchg
xorb
mov
mov
cmp
repz
add
clc
out
out
sahf
cmpsl
lock
out
sahf
mov
test
cmp
jnp
pop
mov
repz
nop
mov
jns
pusha
push
pop
push
inc
cmp
sahf
out
xor
sbb
push
add
cld
in
lock
imull
push
fcom
enter
out
mov
out
sahf
je
push
cmp
sub
sahf
out
and
adc
add
cmp
repz
in
hlt
in
in
aaa
sti
cmp
int3
mov
xchg
push
cmp
push
js
push
inc
sub
jl
out
and
or
jmp
inc
mov
or
adc
loopne
sbb
add
sub
mov
push
testb
clc
negb
pop
rorl
out
sub
shl
scas
push
rcrb
push
nop
add
jns
aaa
js
rorb
and
cvtpi2ps
sub
testl
add
xchg
notb
mov
mov
adcb
add
dec
pop
rolb
pusha
mov
mov
nop
adcb
bound
and
aaa
mov
iret
and
mov
lcall
bound
and
sbb
jo
add
in
pop
and
cmpb
adc
xchg
mov
and
sub
cmp
insl
xor
insl
sub
mov
and
jbe
and
xlat
icebp
jg
add
xor
xor
ds
je
add
sub
xor
jae
xor
imul
stos
mov
cwtl
repz
imul
iret
sbb
cmp
out
inc
loopne
dec
sub
and
rorb
adc
pop
or
adc
pop
or
jne
es
fcom
xor
popaw
insb
into
dec
jns
lds
fisttpll
fmull
push
sbb
jae
inc
add
inc
pop
pop
movups
aam
ljmp
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
pushl
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
dec
xor
xchg
shll
inc
ss
ss
jmp
aaa
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
ret
add
push
lock
idivl
or
decl
xor
xor
xor
push
xor
xor
js
incl
xor
xor
xor
xor
xor
xor
xor
mov
pushl
aam
fnsave
xor
xor
xor
out
xor
xor
incl
pop
pushl
xor
xor
xor
fidivl
scas
xor
shlb
pushl
call
xor
jno
paddd
lcall
ss
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
pushl
push
or
pop
cmp
outsb
cmp
cmp
cmp
cmp
incl
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
incl
push
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
test
pushf
cmp
adc
ljmp
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jg
pusha
cmc
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
xor
pushl
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
push
aaa
jmp
sbb
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
clc
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
or
inc
aas
pop
aas
ja
pusha
inc
popl
xchg
pop
xor
push
pop
cld
xor
cltd
xor
xor
xor
xor
xor
xor
ret
decl
cmpsb
push
xor
xor
lcall
clc
xor
stc
cld
xor
test
mov
mov
nop
xor
out
in
xor
rep
std
sfence
xor
cmp
pop
cld
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
call
pop
jp
cmp
cmp
std
cmp
cmp
decl
sbb
cmp
cmp
xor
adc
aas
jmp
mov
cmp
ss
ss
xchg
cmp
cmp
or
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
adc
dec
aas
push
sbb
call
mov
cmpb
aas
sarl
aas
in
out
out
jo
jg
imul
xor
add
jmp
xor
xor
fisubrl
xor
loop
decl
xor
xor
xor
mov
xor
xor
scas
call
data16
ss
add
or
aaa
and
outsl
mov
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
hlt
fcomip
call
aaa
repz
xor
cmp
xchg
outsl
cmp
cmp
lcall
cmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
inc
filds
dec
cmp
popa
cmp
cmpb
cmp
push
hlt
inc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
gs
bnd
adc
sub
xor
cmp
mov
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
pushl
cmp
pop
cmp
mov
cltd
cmp
loop
mov
jp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
loope
aas
mov
movsl
aas
stos
aas
mov
mov
rorb
pop
xor
lcall
lahf
xchg
les
fidivl
in
or
jmp
xor
xor
xor
mov
xor
xor
xor
xor
dec
xor
xor
xor
mov
jl
cmpsl
xor
xor
cmc
or
xor
xor
xor
xor
cmpsb
pushl
xor
fbld
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
cmpsb
mov
mov
cmp
scas
cmp
jo
add
cmp
fdivrl
aaa
cmp
mov
call
data16
fdivr
outsl
dec
cmp
cmp
cmp
cmp
je
mov
xor
push
or
xor
sbb
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
decl
or
mov
sbb
ds
xor
jg
jmp
mov
insl
xor
cld
cmp
add
fidivs
xor
xor
jl
cld
inc
jnp
fiadds
aaa
ret
decl
aaa
repnz
or
cmp
pop
cmp
jge
mov
decl
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
ljmp
cmp
cmp
fdivrs
push
aas
jne
decl
or
mov
fwait
xor
cli
shlb
xor
dec
or
repnz
cli
xchg
aas
xor
divl
pop
xor
fdivr
aas
loop
ss
dec
ss
outsb
notb
ss
popa
cmc
outsl
clc
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
incl
inc
pop
push
imul
cmp
test
mov
cld
scas
cli
mov
cmp
dec
cmp
cmp
icebp
call
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
scas
rcrb
cmp
orb
pop
pop
std
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
lods
addl
lds
scas
es
push
xor
aad
out
cmp
clc
xor
xor
xor
xor
xor
xor
xor
mov
xor
push
call
ss
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
cli
cmc
pop
cmp
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
dec
cmp
cmp
adc
jbe
cmpl
cmp
cmp
jg
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
pop
cld
les
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
shll
add
ljmp
cmp
pop
adc
adc
sbb
sbb
sub
pushl
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
mov
push
out
xor
call
adc
inc
xor
xor
and
xor
jl
mov
cld
jg
negb
mov
mov
mov
insl
inc
fdivl
in
test
lods
xor
xor
xor
cmp
cmpsb
add
and
sub
sub
xor
cmp
inc
cmp
cmp
test
cmp
xor
inc
cld
pop
mov
js
jl
cmpb
cmp
add
mov
rcr
cmp
jge
add
cmp
mov
cmp
inc
lock
push
pop
pop
pop
dec
cld
push
add
or
adc
add
mov
and
sub
sub
xor
jecxz
aas
fidivrs
inc
cmp
cmp
pop
cmp
clc
lcall
insb
cmp
je
jl
cmpb
mov
mov
nop
xchg
cwtl
mov
push
mov
aas
inc
mov
push
aas
push
aas
xchg
xchg
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
shr
inc
adcb
pop
bound
ljmp
sub
xor
xor
inc
xor
xor
cwtl
xor
or
lods
xor
xor
xor
cmpsb
cmp
pop
xor
mov
jb
or
pusha
xor
aas
std
es
fimuls
xor
ss
sahf
int3
ss
push
pushl
aam
fdivs
fdivl
loopne
in
call
ss
ss
add
add
or
incl
cld
aaa
or
adc
adc
aaa
sbb
and
and
sub
sub
jg
pushl
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
and
inc
mov
aaa
test
mov
nop
aaa
xchg
aaa
cwtl
test
lock
into
mov
dec
mov
mov
icebp
lcall
mov
aaa
enter
shlb
aam
fdivs
fcompl
in
loop
xor
out
aaa
hlt
xor
aaa
add
or
add
or
adc
adc
sbb
mov
mov
ret
fdivrl
call
loope
add
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
cmp
jl
test
loope
jg
cmp
mov
cmp
mov
mov
cmp
mov
movsl
mov
imul
mov
pop
push
jmp
mov
push
adc
fs
lret
pop
std
std
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
stos
outsl
aas
mov
push
lret
aaa
ljmp
gs
push
aaa
lret
sub
cld
fs
add
fsubrl
movsl
cltd
add
loope
inc
enter
inc
add
push
jb
das
outsb
icebp
add
add
xchg
mov
out
sub
jne
mov
movsb
sbb
pusha
out
addb
xchg
daa
and
push
xchg
sub
sub
and
dec
sahf
out
mov
cwtl
addl
out
mov
and
pop
add
cmpsb
dec
out
loope
inc
adc
test
xchg
sub
jge
add
push
sub
mov
pop
daa
cmp
xchg
lock
in
leave
gs
inc
or
sbb
or
es
andb
dec
adc
pusha
ret
push
add
push
fidivrl
dec
imul
jne
jns
jno
sbb
call
or
mov
inc
xchg
mov
push
sub
je
jae
sub
and
pop
sub
pop
jle
cld
add
jl
bound
testl
test
push
or
add
sub
int
dec
mov
fdivrl
inc
or
xchg
or
sub
fs
jbe
add
rol
sub
fsub
rcrb
pop
xor
ja
fs
mov
imul
mov
mov
scas
mov
add
xchg
xor
jp
mov
xchg
sbb
ja
es
sbb
or
or
adc
loop
movsb
outsl
push
mov
xlat
pop
and
push
pop
xor
es
and
jbe
andl
clc
sbb
pop
ljmp
pop
mov
in
pop
sbb
dec
js
pop
arpl
pop
std
lcall
das
mov
js
cmc
mov
cmp
call
and
jne
test
and
pop
or
adc
push
call
add
cs
and
xchg
call
cmpsl
push
or
dec
xor
sub
imul
sbb
cltd
cltd
adc
insl
inc
pop
push
add
dec
add
addb
pusha
insl
adcl
nop
test
dec
inc
inc
and
loop
sbb
sub
jbe
dec
cmp
dec
les
sub
push
xor
loope
outsl
push
jo
fsts
fcoms
sbb
pop
jl
cmp
mov
cmp
push
aaa
sbb
or
leave
shlb
mov
mov
loope
ret
mov
mov
fdivl
ljmp
push
adc
lret
mov
and
js
out
adc
stos
add
add
lea
push
push
adc
fisubs
jo
clc
js
jecxz
pop
add
inc
add
mov
push
shrl
jo
lret
aad
test
mov
jo
push
jecxz
pushl
push
add
fwait
dec
or
adc
mov
cli
adcl
pop
sbb
push
xor
sbb
cmp
rolb
inc
test
mov
sarl
mov
dec
rcrb
test
mov
mov
sub
mov
push
or
push
mov
ja
mov
aaa
inc
mov
jne
and
addb
mov
dec
dec
jle
pop
mov
dec
sarb
ret
add
mov
adc
adc
testb
fildl
and
call
sub
xor
cwtl
sub
rol
add
in
pop
enter
lods
stos
or
adc
call
sub
bnd
adc
adc
xor
adc
pmaxsw
or
or
in
push
push
mov
sub
inc
lahf
out
leave
or
addl
inc
adc
mov
adc
pop
xchg
cmp
sbb
sub
in
mov
fwait
and
cwtl
inc
xchg
or
xchg
push
mov
je
mov
imul
add
adc
fst
add
add
push
inc
aas
jmp
popa
push
cmp
and
dec
or
cmpsb
nop
sbb
mov
mov
mov
cmp
inc
or
mov
cmpsl
nop
lods
push
adc
mov
pop
add
and
sbb
inc
dec
add
push
sti
jne
xor
imul
inc
sbb
and
and
mov
std
pop
xor
ret
push
flds
dec
mov
ss
sub
dec
call
mov
and
call
pop
xchg
nop
lods
repz
and
xchg
cmc
nop
mov
fnsave
push
cmp
popa
or
cwtl
cs
ja
dec
push
and
outsb
cmpsl
inc
mov
test
sbb
call
xchg
lods
jmp
sbb
add
xchg
mov
cmp
adc
ret
inc
mov
push
add
mov
rolb
cmp
pop
and
insb
inc
adc
sub
iret
bound
adc
jo
sbb
adc
imul
xor
cmpl
pop
insb
mov
sub
fistps
adc
add
gs
fucomp
push
fstpt
mov
or
xchg
xchg
sub
sub
stos
ficoml
or
sbb
call
sub
push
fimull
fidivrl
add
call
fimull
pop
pop
add
mov
out
push
sbb
xor
sbbb
out
xor
add
push
fistl
jo
je
insb
subb
ret
out
aaa
sbb
addl
sahf
scas
mov
pusha
cmp
leave
mov
out
adcb
mov
jmp
pushf
adc
mov
insb
pusha
arpl
sub
xchg
jae
xlat
pop
push
ja
xor
cmpsl
push
jg
and
cmp
mov
jns
and
es
add
jmp
push
push
addr16
addr16
fisubrs
add
xchg
repz
repz
insb
fs
push
dec
adcb
or
jmp
dec
pop
out
addr16
mov
jg
and
jg
xor
mov
nop
inc
push
fs
mov
pop
pop
xchg
adcb
dec
addr16
int
sahf
ja
call
push
or
repz
and
or
pusha
addr16
cmp
inc
xchg
mov
repz
push
push
add
mov
pushf
out
mov
cltd
jle
inc
sub
and
push
cmp
je
cltd
push
in
inc
xchg
xor
push
enter
xor
and
inc
xchg
cltd
aaa
loopne
test
push
call
adc
push
dec
loope
pusha
mov
pop
or
push
jb
leave
repz
stos
push
sub
cmpsl
ret
lods
inc
rorb
or
cmpsb
nop
or
daa
int
jb
es
daa
es
daa
out
nop
or
daa
daa
lcall
daa
daa
daa
push
xchg
imul
dec
shll
daa
daa
lret
adc
sub
sub
sub
sub
sub
xor
sub
sub
sub
add
shll
sub
imul
dec
add
cmp
testb
cmp
add
sbb
push
add
mov
cmp
inc
ret
sub
push
push
bound
or
out
xor
subl
cmp
je
sbb
push
jp
cmp
cmc
push
lock
jp
fildl
ret
clc
fs
dec
sbb
stc
or
sbb
addr16
nop
mov
psubsb
cwtl
sub
sbb
testb
mov
or
fisttps
mov
inc
enter
mov
je
addr16
xchg
out
mov
pop
inc
test
pusha
inc
addr16
jle
cs
inc
inc
movhpd
addr16
adc
rcrb
call
cmp
nop
xchg
rcll
loope
push
addr16
sub
adc
test
mov
mov
test
popa
stos
add
scas
push
data16
addr16
jle
cmp
cmp
sbb
addr16
inc
into
or
adc
jb
ret
call
or
add
cltd
mov
add
repnz
mov
decb
pop
mov
mov
adc
cltd
outsb
xchg
jae
sub
sbb
dec
faddl
adc
mov
cs
and
lock
cwtl
pop
push
call
and
inc
lret
rorb
dec
stos
roll
mov
adc
add
outsl
or
mov
sbb
adc
sbb
and
mov
and
in
cltd
pop
sbb
lret
sbb
inc
bound
jb
mov
sti
sbb
add
scas
cmp
dec
sbb
jmp
adcb
pop
ljmp
mov
or
dec
cltd
sub
and
imul
push
and
adc
inc
xor
popf
popa
sub
mov
cmp
sub
adc
pop
aam
adc
aam
outsb
adc
push
imul
pop
xchg
push
jne
adc
mov
lock
mov
dec
mov
or
mov
cmp
adc
inc
sahf
test
adc
lds
sbb
enter
in
mov
mov
pop
aam
pop
adc
adc
into
stos
imul
push
jne
jnp
push
mov
or
adc
dec
adc
sub
mov
push
imulb
adc
in
fimuls
or
push
adc
pop
pop
imul
loopne
inc
mov
dec
sbbb
lea
daa
pop
pop
add
inc
call
mov
pop
mov
adc
out
pop
adc
stos
and
fs
mov
shlb
inc
pop
test
adcb
cmp
adc
aam
push
pop
ss
or
xor
inc
movsl
adc
push
xchg
mov
add
lds
inc
rorb
push
xorb
jnp
movsb
pop
adc
icebp
mov
pop
rol
and
nop
xchg
arpl
pop
adc
scas
xorb
push
or
not
or
pop
jle
iret
out
test
cs
nop
jle
lods
xor
mov
imul
pop
mov
mov
pop
inc
or
or
lods
sbbb
inc
add
inc
pop
mov
imul
pop
mov
add
add
adc
mov
xor
in
xchg
pop
push
ds
or
pop
mov
inc
add
sub
loopne
xor
add
pop
scas
repnz
mov
inc
xor
adc
sbb
and
and
and
and
pop
inc
and
and
dec
dec
inc
pop
xorb
dec
and
sbb
mov
pop
sub
pop
bound
call
movsb
pop
jg
xorl
fadds
mov
adc
fdivs
lds
pop
inc
mov
out
test
out
pop
dec
or
call
add
flds
dec
inc
pushf
sbb
sbbb
enter
rorb
dec
addb
dec
dec
popf
sub
cmp
push
orl
mov
mov
sbb
cmp
ja
mov
add
or
in
mov
inc
pop
fistpl
push
pop
xor
inc
cli
call
sbb
mov
xor
andl
movsb
test
sahf
lahf
xor
dec
add
test
xlat
push
and
push
aas
push
push
or
sarl
aam
fstpl
fnsave
loop
leave
add
add
dec
sub
mov
call
arpl
das
sub
or
fwait
lret
pop
inc
int3
cmpsb
or
pop
inc
adcb
dec
int3
cmpsb
mov
aam
lret
call
ljmp
sub
out
test
ret
inc
mov
mov
ret
les
push
mov
out
lret
rorb
xor
inc
add
jnp
mov
mov
mov
scas
int3
dec
fmul
inc
ret
pop
sbb
inc
add
xor
fcmovb
cmp
pop
frstor
xor
ss
bnd
jl
je
fs
or
adc
add
clc
pushf
dec
pusha
aaa
ret
js
loopne
loopne
adc
icebp
nop
loopne
xchg
cmpl
movsb
sub
xor
xchg
pop
adc
in
fcompl
dec
add
daa
rclb
jne
and
sub
shr
in
movsl
pusha
inc
daa
xchg
and
or
fwait
shrl
loopne
and
mov
stos
adc
pop
xor
loopne
cwtl
and
and
push
rcrb
mov
mov
cs
xor
and
and
and
cltd
jp
inc
jecxz
call
push
mov
push
cltd
aas
cltd
and
mov
inc
and
jecxz
mov
push
stc
cltd
xchg
cld
push
push
imul
fmull
mov
cmp
cltd
adc
popf
dec
and
cwtl
test
sbb
push
mov
daa
mov
push
rcrl
leave
stos
mov
fdivr
loope
xor
mov
repz
jbe
sbb
and
repz
pusha
xchg
push
movb
repz
repnz
add
sub
repz
sbb
and
add
jo
aam
shlb
adc
rclb
sub
mov
mov
stos
nop
add
mov
daa
repnz
xchg
push
call
test
popa
insb
je
xchg
mov
arpl
mov
ss
add
fcomi
not
mov
push
pop
lea
lods
jnp
ret
dec
in
and
je
or
lret
cs
imul
cmp
jl
orb
inc
jo
repnz
and
cmp
xchg
inc
push
mov
lods
in
xchg
inc
inc
icebp
stos
xchg
loope
inc
mov
cmpl
or
jl
jl
push
lret
mov
dec
sbb
jno
sbb
cmp
mov
divl
pop
adc
or
or
add
jns
repnz
cli
arpl
dec
fisubrs
cs
sbb
mov
sahf
insl
pop
movsb
jne
mov
ja
xchg
pop
je
xor
fbld
or
or
sar
test
inc
mov
adcl
test
add
pushf
fcmovb
loop
pop
xchg
inc
xchg
stos
ss
push
fcoms
push
xor
xchg
lods
dec
pop
add
jae
rcrb
cmp
adc
hlt
xchg
pushf
mov
mov
xchg
fdivl
daa
mov
pushf
or
adc
test
or
or
push
addl
push
fwait
js
xchg
into
xchg
add
dec
push
lret
fnstcw
mov
js
cmp
and
insl
in
enter
fsubrs
mov
push
xchg
or
cmc
rorb
or
xchg
pushf
andb
cmp
push
and
mov
adc
inc
dec
xchg
inc
inc
jbe
addr16
xchg
dec
seta
pushf
sub
mov
fs
xchg
es
aaa
push
inc
xchg
inc
arpl
xor
cwtl
sub
daa
xchg
jo
lods
leave
rcrb
jmp
ljmp
fs
mov
xchg
outsb
push
ret
mov
dec
aaa
mov
xchg
dec
xchg
push
shrb
int3
dec
jmp
call
xchg
mov
jmp
xchg
and
mov
call
jb
fs
lret
mov
add
movsb
icebp
jnp
in
or
push
push
je
xchg
adc
push
and
sbbb
xchg
testl
lret
int
mov
ss
mov
inc
int
ds
sub
inc
int
bnd
lcall
aad
sub
mov
int3
leave
call
adc
push
int
mov
add
pop
sub
jge
das
push
in
mov
and
pop
insb
push
fldenv
rcl
jmp
inc
ss
pushf
inc
cmpsl
lods
inc
cmp
cmpl
fstpl
inc
mov
mov
fldl
cmp
cmpsb
push
inc
sbb
push
sbb
call
mov
cmp
sahf
in
insl
push
sbb
loopne
adc
test
or
inc
xor
xchg
pusha
call
pop
inc
call
jne
aaa
fildl
add
enter
adc
loopne
outsb
cmp
loop
fucomi
nop
test
fistl
xchg
dec
push
mov
iret
push
test
ret
mov
sbb
and
fisttpl
adc
push
and
fcmovne
adc
stos
pop
fistl
ret
ljmp
inc
fildl
sbb
add
sbb
test
mov
cmpb
cmp
ljmp
cmc
mov
jns
adc
jno
rcrl
fildl
fldt
call
sub
jecxz
stos
add
es
dec
and
inc
movsl
add
pop
enter
jle
dec
or
jo
in
mov
jo
sbb
imul
push
addl
add
mov
cmp
dec
fucomip
in
scas
enter
leave
sar
lock
aam
iret
loope
xor
int3
jns
or
sub
dec
pop
pop
push
push
or
pop
pop
pop
pop
sbb
add
cld
mov
in
pop
pop
pop
pop
fdivrl
les
mov
mov
mov
mov
lret
lret
cmpl
lret
lret
popa
mov
dec
mov
inc
mov
and
sbb
push
jb
xor
in
mov
enter
lret
mov
in
mov
stos
mov
nop
mov
and
jns
jle
jo
gs
pop
mov
enter
cmp
in
pop
cmp
mov
jb
sbbl
in
mov
inc
push
mov
sbb
and
mov
cmpsl
mov
nop
adcl
pop
cmp
inc
jo
gs
in
dec
mov
push
jb
mov
and
jns
sbb
sbbl
mov
call
mov
and
sahf
int
dec
xor
or
daa
jp
mov
push
enter
push
inc
outsb
xchg
inc
adc
adc
int
dec
xor
push
sbb
sahf
xor
daa
or
sbb
mov
and
call
dec
and
cmp
les
mov
dec
xor
inc
mov
ror
dec
cli
dec
jl
ret
int
dec
push
loopne
test
or
add
addb
mov
nop
or
mov
cmp
sub
xor
jo
inc
inc
add
push
js
inc
inc
inc
inc
inc
mov
xor
inc
xor
sub
leave
sub
jb
dec
repnz
push
popl
pop
aam
push
jmp
cmpsb
mov
adc
fsubs
inc
hlt
jo
mov
in
lods
and
testl
pop
icebp
ss
add
aam
add
add
xor
adc
mov
jg
inc
sub
incl
aam
pop
xchg
movsl
push
jno
lea
push
mov
and
push
mov
jne
xchg
mov
mov
inc
inc
pop
jb
dec
shld
mov
or
packsswb
xor
sarb
movsl
gs
sub
andb
rolb
aaa
mov
rclb
lret
mov
test
lea
mov
inc
sub
lea
jl
je
lret
jbe
inc
mov
xchg
and
movsb
adc
pop
mov
sarl
xchg
movsl
sbb
push
sbb
outsb
push
xchg
out
stos
unpcklps
mov
scas
pop
punpckldq
jge
push
jge
sqrtps
dec
dec
imul
les
dec
mov
pop
fmull
pop
inc
mov
cwtl
loope
add
jmp
or
add
pop
jle
movsl
sub
xchg
or
dec
fs
adcb
iret
scas
push
ljmp
sub
adc
shlb
dec
sbb
addl
sub
dec
movsb
lcall
or
xchg
movsl
cmp
mov
test
mov
mov
dec
mov
adc
push
or
sarb
gs
adc
mov
cmp
or
gs
push
dec
jbe
pop
cmp
jo
scas
push
jo
add
lcall
mov
add
scas
dec
je
adc
insl
or
inc
xchg
mov
addr16
xchg
mov
fmull
xor
mov
fsubr
sbb
xchg
cmp
and
call
out
or
xchg
test
inc
or
out
shl
push
or
jns
out
push
sub
adc
or
sarb
dec
pop
or
mov
push
lret
sbb
push
adc
movsl
sub
push
popa
lods
or
pop
out
adc
test
xchg
mov
mov
sub
pop
or
out
sbb
add
movsl
sub
cmpl
sbb
xor
push
loope
lock
xchg
or
pop
movsl
push
repz
lea
pop
movsl
sub
or
jp
inc
or
mov
jmp
xchg
movsl
or
insl
xchg
movsl
gs
mov
xor
or
sarb
ja
popa
nop
imul
pop
adc
rcrb
fmuls
inc
outsl
sub
movsl
jnp
dec
or
xchg
or
lock
xchg
and
push
mov
repnz
lock
xor
mov
or
outsb
or
xchg
movsl
cmpsl
test
adc
jl
sbb
xchg
or
add
xor
movsl
xor
or
sbb
push
push
inc
bound
push
inc
sub
mov
xchg
or
mov
or
subb
pop
or
movsl
sub
or
push
lret
or
inc
or
enter
xor
aad
mov
xchg
xchg
inc
jmp
stos
shl
sub
or
pushf
or
or
je
sub
inc
xchg
and
sbb
xor
dec
add
movsl
sub
xor
movsl
sub
ja
push
call
mov
and
shl
sub
pop
sahf
jl
push
lret
mov
sub
or
push
aam
xchg
sub
leave
loop
andb
into
dec
rorb
xchg
push
or
inc
push
lret
or
ficomps
sub
push
mov
movsb
js
and
or
imul
push
push
lret
or
lret
scas
or
repnz
or
pop
mov
sub
test
or
dec
pop
add
mov
addr16
bound
mov
les
subb
or
mov
or
mov
sbb
or
push
xchg
test
xchg
and
or
loopne
pop
stc
pop
dec
ja
sub
xlat
inc
aaa
adc
pop
loope
pop
dec
test
mov
shlb
int
int
lret
and
jmp
mov
adc
adc
push
adc
cmpsb
push
and
push
test
das
mov
pop
or
nop
mov
push
das
das
lcall
pop
pop
or
and
lods
in
xor
movb
mov
xor
push
push
ja
cmpsl
mov
pop
push
and
daa
popa
xchg
mov
dec
xchg
xchg
cmp
movsl
popf
mov
dec
push
push
fistpl
sahf
arpl
movsl
cmpsb
js
mov
enter
pop
lcall
testb
push
jns
out
sub
mov
int3
faddl
sbb
iret
repz
ss
push
pop
outsb
cmpb
cmp
test
enter
into
div
outsb
or
push
ds
pop
cmp
repz
orb
int3
out
push
stos
adc
jns
out
cmp
sahf
out
sahf
jbe
test
into
call
add
push
sbb
xor
out
sahf
ds
pop
insb
subb
insb
rolb
pop
cmpsb
add
push
adc
imul
mov
fs
push
inc
ret
roll
mov
push
push
push
mov
dec
sbb
mov
add
dec
mov
jl
clc
mov
mov
mov
add
lcall
mov
mov
or
add
test
out
mov
adc
push
adc
lcall
cmp
call
out
js
or
mov
movsl
push
push
pop
sahf
mov
and
repz
and
js
jns
lcall
cld
hlt
mov
aam
je
or
aas
mov
xor
sbb
and
or
jb
pop
test
xchg
popw
dec
xchg
sahf
out
inc
push
push
cmp
adc
int
jns
add
xchg
in
loopne
cmp
repz
ror
enter
iret
sarb
cmp
mov
cmp
pause
mov
cmp
jl
je
insb
push
fs
pop
pop
push
repz
repz
dec
dec
inc
inc
iret
repz
cmp
xor
sub
lcall
call
out
enter
dec
repz
out
add
pop
movsb
iret
repz
jl
push
dec
inc
xor
out
cmp
or
mov
sarb
out
mov
pusha
cmp
cmp
repz
int3
test
push
ja
fwait
loope
lea
push
add
lock
push
mov
cltd
mov
inc
adc
or
inc
mov
fs
and
mov
gs
jg
sub
inc
push
push
add
popf
popa
add
pop
xor
push
xchg
or
pushw
mov
es
xchg
adc
shlb
jbe
sub
adc
xor
jne
xchg
mov
mov
fdiv
xchg
popa
daa
add
and
aas
ficoml
pop
jnp
fiadds
mov
daa
cmp
xlat
push
mov
mov
inc
add
lods
pop
add
test
mov
lods
add
pop
cmpb
mov
insb
sahf
inc
pop
shll
jbe
and
dec
in
xor
mov
cmpsb
mov
mov
xchg
aas
jns
adc
and
mov
aaa
inc
pop
rcrl
xchg
xchg
push
cmpsl
fsubs
sbbb
inc
fisttps
adc
aas
dec
mov
addb
jg
dec
rorl
insb
jle
pop
xor
aas
mov
push
int3
push
push
dec
xor
andb
fsubl
mov
xchg
pop
ljmp
pop
enter
add
movnti
imul
inc
mov
mov
push
and
mov
pushf
add
mov
lea
xor
dec
jo
push
cmp
pop
stos
outsb
cs
outsb
cmp
outsl
ds
outsl
gs
cmp
push
sti
pop
enter
je
sarb
adcb
xchg
fsubl
fidivl
jbe
subb
adcb
inc
dec
and
pop
outsl
xchg
out
pop
jne
notb
imul
push
outsl
and
sbb
dec
jb
rcrb
int3
sub
jno
rcrl
lret
add
adc
movsl
mov
jae
sub
outsl
bound
mov
inc
or
adcl
imul
or
sbb
jecxz
hlt
sbb
xor
jo
dec
mov
push
pop
sub
sub
dec
adc
push
push
add
rorb
xor
mov
inc
xor
push
mov
jne
xlat
pop
mov
inc
daa
xchg
dec
arpl
rcrb
les
arpl
sub
push
inc
repz
pop
add
sbb
pop
adc
pop
les
rorl
rcrb
arpl
adc
jae
xor
pushf
sti
lahf
push
sbb
inc
arpl
lds
out
xor
pop
testl
add
pop
xor
adc
pop
add
rcrl
sbb
arpl
pop
out
fadd
push
aaa
add
ja
stos
cmp
add
xor
addr16
or
daa
jmp
ficompl
xchg
cwtl
push
pop
inc
xchg
movsb
xchg
iret
repz
jle
pushf
cwtl
xchg
nop
cmp
repz
test
out
fdivp
pop
push
pop
dec
inc
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
cld
xchg
hlt
xchg
in
push
in
jns
out
enter
out
sahf
lods
test
mov
mov
push
insb
push
fs
repnz
out
push
dec
mov
push
and
popf
out
jns
add
in
xchg
push
enter
sahf
sarb
sahf
out
nop
mov
repz
push
dec
repz
and
adc
lock
loopne
cmp
repz
mov
xchg
insb
adc
add
pop
out
pop
mov
outsl
insb
cmp
add
test
inc
xor
mov
neg
mov
xor
inc
xor
or
mov
add
repnz
or
ja
push
xor
push
pop
cs
push
or
clc
mov
fildll
add
pop
enter
add
jbe
outsb
stos
lcall
xchg
cs
pop
sbb
movl
fucomip
xchg
icebp
inc
aas
xchg
adc
adc
mov
rorb
cmp
mov
push
roll
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
xor
mov
push
adc
pop
ss
nop
ss
stos
dec
cld
dec
sub
ss
popf
xor
xorl
aaa
adc
sbb
add
cmp
stos
popa
cld
cmp
ja
xchg
xchg
es
lret
cmp
cmp
cmp
mov
dec
test
xor
ljmp
jnp
cmpl
adc
xor
cmp
cmp
decl
ds
ds
ds
fsubl
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
lcall
data16
jbe
jnp
cmpl
mov
popf
aas
movsb
aas
mov
sarl
div
dec
add
jg
aaa
lahf
push
xor
jl
xchg
cmpsb
mov
xor
icebp
pushl
sbb
xor
xor
push
inc
xor
mov
mov
xor
xor
into
das
xor
aaa
shrl
cmp
xchg
mov
cmp
xor
inc
shlb
call
xor
mov
outsb
cmp
mov
pushf
xor
xor
xor
xor
ret
fdivs
xor
dec
mov
ss
jecxz
sbb
mov
ss
pushl
sbb
xchg
mov
test
xchg
loop
cmp
cmp
add
pop
cmp
or
adc
icebp
dec
xor
sub
xor
xor
cmp
cmp
cmp
xor
adcb
cmp
outsl
shr
icebp
cmp
or
xor
inc
fdivrp
outsb
outsb
sbb
iret
cmp
idivb
cmp
cmp
cmp
dec
push
add
jle
test
push
icebp
jg
jg
cmp
hlt
cmp
inc
ds
ds
ds
enter
cs
lcall
mov
xor
xor
mov
mov
push
xor
bound
icebp
jg
xor
xor
xor
xor
xor
inc
lds
xor
jmp
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
clc
sub
clc
ss
ss
aaa
or
push
xor
enter
cmp
inc
aaa
sbb
xor
dec
adc
jecxz
or
push
cmp
mov
sbb
pop
cmpsb
test
fsubl
mov
cmp
pop
inc
std
fwait
push
in
jmp
repz
cmp
cmp
outsl
add
jg
cmp
cmp
pop
clc
mov
jno
jns
jle
xchg
mov
xchg
sbb
push
rorl
scas
cmp
fcmovb
cmp
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
pop
or
mov
xor
insl
sbb
popa
pop
shrl
pop
and
es
dec
aas
outsb
inc
cmpl
aas
ret
fcomps
dec
fmull
fdivp
xor
into
xor
jmp
sbb
xor
xor
xor
xor
or
xor
jo
in
pop
xor
xor
sbb
jg
push
or
cmp
insb
ret
clc
mov
leave
hlt
xor
or
adc
push
sbb
pop
ss
ss
arpl
stos
add
ss
ss
sar
or
outsb
adc
jne
jle
mov
decb
sbb
sub
mov
cmp
cmp
cmp
cmp
jmp
jmp
cmp
cmp
cmp
and
dec
cmp
arpl
outsb
stos
inc
sbb
ret
fnstsw
fildll
push
add
or
cmp
or
pop
lret
mov
decb
divb
data16
mov
ss
xor
xor
xor
xor
xor
ja
mov
sbb
xor
xor
xor
xor
xor
icebp
pushl
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
push
shrl
sbb
into
and
gs
ljmp
dec
xor
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
xchg
jmp
ds
imul
mov
lret
int3
and
adc
lods
cmp
add
sbb
mov
mov
cld
xor
dec
sbb
out
sub
pop
gs
cmp
dec
cmp
pop
cmp
push
fsubl
sbb
or
and
sub
ud0
xor
xor
xchg
test
orl
or
pop
dec
es
xor
mov
pop
aaa
arpl
push
pop
mov
cmpsb
xor
xor
outsb
cli
mov
cmpb
inc
sbb
ret
sbb
ret
test
pop
inc
daa
mov
insb
jb
rorl
mov
pushf
je
call
mov
dec
int3
inc
fsubl
mov
cmp
xor
pop
enter
add
push
int3
xchg
arpl
ds
insb
jb
out
xor
mov
lds
or
scas
mov
jmp
call
mov
xor
adc
adc
sbb
sbb
add
adc
xor
mov
test
push
sbb
or
push
pusha
xor
xor
orl
add
scas
lret
mov
mov
nop
xor
jo
xor
cmp
push
shlb
popf
xor
fdivs
fadds
xor
ss
sbb
lock
jbe
xor
sarl
xor
push
xor
outsb
pusha
jg
ret
jo
bound
sarb
push
push
push
sub
dec
add
push
cmp
or
jb
pop
daa
cwtl
sbb
pop
in
out
shl
ljmp
sub
and
incl
push
insb
xor
xor
xor
xor
xor
dec
fists
add
sub
sbb
std
xor
fs
xor
arpl
xchg
sbb
pusha
xor
xor
aas
mov
in
call
xor
xor
add
xor
loop
add
lahf
adcl
sbb
xor
aam
mov
inc
xor
xor
xor
push
xor
pop
xor
jle
jmp
mov
xor
xor
xor
xor
mov
lcall
mov
pushf
xor
xor
xor
xor
xor
xor
xor
add
shlb
int3
fimull
movb
mov
xor
popa
pop
mov
cmp
xchg
icebp
sbb
xlat
addb
in
sahf
sarb
and
cmp
mov
xor
mov
push
popa
push
cmpsb
das
jecxz
inc
les
cmpsl
cmp
xor
cwtl
mov
jg
repz
cmp
inc
pop
xchg
jmp
cli
sbb
sbbb
shll
cld
pop
mov
add
lret
xor
pushl
decb
arpl
cmp
fistps
enter
iret
and
pop
test
jnp
or
pop
mov
in
pop
and
cwtl
jp
idivl
push
jmp
jmp
inc
aad
fsub
mov
and
inc
ds
push
popl
mov
add
incl
add
xor
and
mov
scas
xchg
and
cli
std
adc
push
mov
ljmp
mov
pop
lock
xor
mov
in
jl
popf
sbb
pushl
jmp
dec
fwait
xor
in
ljmp
jae
stos
mov
repnz
loop
inc
or
xchg
orl
cmp
pushf
mov
ja,pn
xor
xchg
pop
fidivl
fdivrl
out
outsl
cmp
cmp
pop
adc
pop
mov
in
mov
or
add
mov
adc
and
sbb
mov
xchg
or
je
jmp
push
lock
xor
leave
into
loopne
dec
negb
jbe
cmp
loopne
faddl
push
jmp
ja
dec
imul
sub
inc
test
mov
cs
mov
scas
xor
mov
pop
and
shlb
test
mov
call
lcall
nop
xchg
and
dec
mov
incl
hlt
movsb
scas
popf
popf
imul
into
lods
push
jne
sub
ss
ss
ljmp
stc
jo
ds
and
in
cld
test
addb
outsl
cmpl
mov
fisubrl
pop
jns
cld
add
ljmp
mov
jne
test
int
inc
dec
xor
push
push
xor
lcall
inc
mov
icebp
adc
adc
loope
add
adc
ljmp
push
addr16
mov
gs
les
hlt
insb
incl
adc
push
shl
mov
loop
mov
inc
sbbb
dec
ljmp
clc
lcall
jns
pop
xor
stc
sti
jno
test
ss
pushf
jg
or
call
push
hlt
in
push
jno
adc
shl
mov
sahf
mov
shrl
call
mov
pusha
mov
mov
sub
imul
pushl
call
jg
in
xchg
inc
insb
jge
sub
andb
ljmp
mov
adc
decl
repz
cvtps2pd
negl
jecxz
push
aad
inc
call
inc
test
pop
decl
sub
test
cmpsb
inc
je
mov
iret
movl
jge
dec
or
mov
loop
pop
pop
pop
lods
mov
popf
mov
stc
adc
xor
jg
call
mov
sub
adc
shl
cmp
fld1
sti
push
add
jmp
ss
mov
mov
enter
add
lea
clc
incb
incl
fsub
mov
adc
aaa
cli
test
inc
aad
adc
test
rcl
repnz
push
push
ret
mov
push
rclb
xor
jo
iret
insl
dec
inc
call
pop
scas
mov
dec
pop
addb
shlb
fdivl
push
and
sub
repz
sahf
xchg
mov
xchg
cmp
fwait
cmp
sarb
sbb
cmc
inc
shr
push
fwait
adc
popa
in
in
mov
jo
mov
jnp
addr16
inc
jg
out
sbb
mov
pop
imul
lock
jmp
mov
js
outsb
push
into
out
cld
mov
or
xchg
sahf
stos
jle
inc
adc
xor
incl
cmp
cs
mov
add
mov
iret
sub
xor
inc
out
and
cwtl
imul
aaa
std
call
mov
fnop
cmp
mov
ds
sbb
mov
decl
lea
push
xor
idivb
push
xor
sub
cltd
dec
mov
adc
jmp
adc
cs
clc
jno
lea
aam
sub
mov
subb
pop
call
adc
push
mov
lcall
fcomps
rcl
pushl
inc
xor
pushf
mov
dec
xor
adc
inc
xor
mov
dec
divl
dec
jge
xor
xchg
les
fisubrl
cltd
notl
das
mov
std
sub
or
decl
rorl
add
scas
or
adc
int
pop
repnz
xchg
loope
mov
push
fsubrl
xor
mov
out
jge
fwait
cmc
lock
jmp
lret
mov
sbb
or
bound
add
xlat
mov
out
fsubs
popf
xlat
and
insb
stc
mov
fcompl
mov
sub
cmpsl
sbb
lock
push
sbb
lods
or
outsb
jle
rcl
mov
push
mov
xchg
and
mov
xchg
sub
iret
jns
hlt
decl
add
or
rorl
jnp
movsl
imul
ljmp
lahf
sahf
pop
ficoml
mov
push
fstpl
repnz
fidivrs
js
idiv
call
mov
push
lret
fcoms
dec
in
add
adc
repnz
pusha
scas
mov
or
cmpsb
xor
sti
fcompl
or
lcall
shrb
in
std
cmp
mov
mov
dec
jae
in
fsub
fistpll
ljmp
jo
bound
imul
leave
jno
mov
pop
dec
cs
mov
sbb
incl
sbb
mov
js
or
shrb
push
lock
push
insb
jmp
push
or
sbb
mov
lret
push
jno
shlb
out
loope
loopne
aaa
pop
popf
leave
push
xchg
dec
call
cld
dec
cwtl
mov
aam
mov
loop
dec
or
rep
or
jmp
fs
pop
mov
sbbl
mov
sar
push
in
sar
push
lds
cmp
iret
mov
mov
aad
fstps
sbb
mov
jo
rclb
mov
sub
jmp
lret
cmpsb
popa
sbb
cs
cmc
out
lods
nop
jmp
sub
push
int3
rcr
call
out
rcll
rcl
nop
in
in
sbbl
push
int3
mov
pop
push
mov
pop
add
imul
pop
stc
call
dec
inc
or
mov
xchg
cwtl
cli
int
das
fwait
cmp
decl
adc
movsb
imul
out
addps
ficompl
test
insb
lods
jmp
iret
cmpsb
loop
mov
xlat
mov
shrb
add
lock
xchg
xor
lcall
push
xor
cmp
add
sub
mov
in
jno
aam
out
adc
jg
out
mov
or
daa
stos
push
sbb
out
clc
xor
xchg
mov
pop
sbb
pop
icebp
incl
xchg
in
inc
pop
insl
cmc
test
push
addb
insl
fwait
push
das
in
push
push
nop
clc
pushl
mov
and
jp
cli
fstpt
inc
adc
stos
sahf
add
push
arpl
mov
mov
jle
sub
icebp
jle
mov
or
in
xor
xor
idivl
jmp
ljmp
adc
out
popa
pushf
ljmp
mov
lods
cmp
pop
mov
jmp
out
cmpsl
mov
pop
push
dec
pop
or
aas
or
sub
inc
ss
mov
decl
movsl
cld
cmc
andb
sub
pop
shrl
mov
popf
dec
xlat
pushl
popa
lods
sub
divb
mov
enter
out
and
lods
adc
decl
cld
les
popf
ds
pop
push
enter
ss
push
sub
mov
adc
jmp
cmp
pop
fdivrs
arpl
stos
inc
sbb
pop
push
lcall
mov
mov
ljmp
stos
ficompl
push
xchg
xor
aam
movsl
lret
xchg
jg
imul
stc
or
out
clc
lcall
dec
sahf
int3
and
test
icebp
addb
int3
or
call
sahf
xor
ljmp
ficompl
scas
pop
inc
lahf
stos
adc
mov
pop
mov
add
inc
arpl
pop
std
incl
cs
add
dec
inc
mov
mov
inc
bound
ret
cld
mov
lcall
mov
in
movsl
push
scas
mov
jp
add
mov
lcall
inc
inc
repnz
decl
cmpl
in
cli
lret
lret
insl
sar
push
call
in
mov
and
lds
xlat
inc
pop
or
lahf
cmp
push
xchg
adc
mov
cmp
xchg
ja
out
sbb
adc
push
push
adcl
dec
notl
loopne
inc
cld
popa
cmpsb
adc
cmp
jmp
add
mov
jns
mov
mov
negb
or
repz
call
fldt
and
stos
jo
mov
sub
scas
inc
mov
inc
aaa
repnz
inc
adc
cmc
fs
test
xchg
dec
push
imul
push
test
dec
cmp
pop
mov
pusha
test
inc
sbb
cmpsb
dec
cs
xorb
sub
aas
ljmp
scas
push
jbe
ds
jl
and
loopne
fstl
repz
stos
xchg
fwait
mov
pushl
add
leave
test
faddl
ret
in
pop
notl
into
dec
or
call
cwtl
xchg
pop
xchg
jae
jge
stos
adc
insb
cmp
add
sti
lcall
ja
push
cli
lock
xor
mov
push
popa
pop
lahf
pop
aam
dec
aam
xor
mov
push
push
gs
pop
adc
push
ret
adcl
adc
imul
cmp
into
repz
loope
jno
add
bound
mov
cmp
pop
mov
mov
ja
aaa
fmull
push
fsubs
inc
decl
sti
xor
inc
iret
in
fildll
sub
dec
test
xor
stos
inc
aas
pop
cmp
mov
jge
lods
pop
ss
hlt
pushl
aaa
arpl
xchg
inc
ds
test
adc
scas
das
testl
lcall
int
inc
outsb
add
sbb
cmp
mov
rcl
loop
mov
adc
cmp
push
jecxz,pt
dec
cli
subl
call
pop
rep
cmp
imul
cmp
cli
mov
aaa
add
rorl
enter
es
clc
lcall
inc
mov
nop
mov
in
pop
mov
stc
sbb
dec
lret
mov
incl
ltr
popa
mov
fsubs
xor
jp
pop
mov
ljmp
cmp
cli
stos
jnp
xor
pusha
repnz
imul
sbb
movsb
dec
mov
out
push
jno
jmp
or
sbb
xchg
setle
jg
and
pushf
mov
dec
xchg
pushl
decl
push
cmp
mov
movsl
push
and
out
cli
lcall
andb
mov
pushf
push
and
in
push
mov
fwait
ret
sub
dec
pop
lods
sbb
sub
mov
sbb
int3
aad
clc
xchg
cmpsl
outsb
aad
imul
cmp
and
aaa
leave
das
xchg
push
sub
loopne
mov
add
adc
in
add
xor
sub
sbb
out
sti
pop
xchg
popf
pusha
out
xor
int
out
cmpsl
std
loopne
ljmp
or
mov
in
push
or
je
adc
xor
jg
arpl
mov
pushl
mov
push
fcomps
outsl
les
dec
movsl
imul
insl
hlt
arpl
inc
rcll
pop
pop
pop
sbb
call
lcall
or
pop
mov
lods
dec
mov
test
lcall
sub
shl
cmp
in
jle
out
sti
mov
push
mov
daa
jl
cld
test
sbb
dec
jg
push
sbb
bnd
into
pop
pushl
pop
lods
idivl
daa
mov
outsl
and
mov
dec
daa
push
lods
std
mov
daa
sti
loopne
sbb
decl
or
out
pop
dec
jecxz
xchg
lods
mov
lock
out
jp
dec
mov
aad
clc
pusha
jge
cld
iret
pop
sbb
jg
xor
stos
pop
add
inc
or
incl
int
stos
mov
mov
pop
popf
mov
sub
cmc
push
adc
cld
out
pop
popa
test
lcall
cmp
xchg
push
mov
repz
scas
xchg
repnz
sbb
data16
addr16
or
sbb
incl
sti
sub
mov
fldt
xchg
xor
cmpsb
arpl
outsl
int3
rolb
dec
and
aas
cltd
inc
push
test
std
jle
jge
inc
or
fldt
bound
js
sarl
pop
mov
movsb
imul
incl
addr16
es
sbb
inc
in
in
or
icebp
insl
or
mov
lock
lahf
inc
jl
pop
filds
dec
les
or
inc
add
pop
inc
mov
aaa
mov
add
sarb
dec
test
xchg
cmp
push
mov
and
cmpsl
ja
loop
adc
mov
push
add
leave
fadds
jmp
jle
or
mov
xchg
jle
xchg
jle
pushf
jl
decl
add
movsl
pop
nop
jnp
sbb
fwait
push
dec
sahf
sub
addb
int
cmpsl
inc
sbb
das
shlb
cmp
or
cmp
jmp
shlb
jp
jmp
addr16
lcall
aad
mov
jnp
cmpsl
add
cwtl
movsl
fdivrl
or
fcomip
ljmp
mov
pop
jge
jl,pt
adc
adc
pop
int
mov
lret
std
mov
outsl
mov
push
out
fdivrl
jg
inc
jle
inc
orl
push
mov
ss
lret
lcall
in
inc
mov
das
pop
fwait
aad
data16
inc
cmp
mov
loopne
lcall
mov
divb
lock
xchg
fistpll
inc
subl
rcl
sub
or
incl
xor
test
ljmp
xchg
hlt
pop
ret
pusha
mov
call
incl
fsubs
sbb
leave
mov
lret
mov
or
mov
cmpsb
inc
mov
pushl
daa
call
jns
andb
rcrl
lds
pop
je
jne
cmpsb
xlat
push
jge
fstl
mov
pop
sbb
mov
je
jmp
push
adc
push
pushl
outsl
xchg
lods
mov
cmpb
out
cmp
aam
fcoml
cmpsb
push
fcomip
jmp
and
jecxz
jmp
repnz
add
sub
mov
lock
cli
scas
cmp
jp
lahf
dec
xchg
xchg
call
pop
scas
inc
xorl
mov
ljmp
call
rcr
ja
cli
mov
andl
dec
mov
jg
incl
testl
movsl
mov
sbb
xchg
jae
idiv
pushl
mov
push
movsb
enter
orb
jmp
inc
dec
push
mov
out
decl
cmpsl
out
je
loopne,pn
or
and
sub
mov
cld
lcall
stc
inc
jl
sbb
mov
sub
xor
lds
add
decl
arpl
sbb
xchg
lahf
pop
or
aam
cltd
mov
jge
adc
cmp
xchg
mov
jmp
flds
mov
xor
icebp
in
mov
adc
arpl
call
jne
pop
or
in
xor
lahf
push
cwtl
mul
push
insb
in
mov
dec
xor
ss
and
es
outsl
data16
and
sbb
add
pop
adc
and
hlt
call
sbb
inc
cltd
bnd
jle
mov
xchg
xor
inc
adc
cmp
dec
fwait
test
jl
incl
decb
imul
je
std
in
test
add
int
sti
stc
int3
cmp
push
call
cmp
bound
sub
loop
outsb
mov
cli
test
mov
or
cmp
rcll
std
cmp
fwait
xchg
pop
or
dec
or
fcompl
lcall
lret
xor
or
push
jbe
push
jp
inc
add
cmp
or
mov
ljmp
sub
cmpsl
in
push
ja
cmp
ljmp
sub
inc
inc
repz
jmp
mov
out
sbb
xor
ds
push
and
xor
insb
add
push
call
js
mov
sbb
sbb
pop
mov
cli
out
mov
into
les
jmp
xor
iret
mov
lahf
cltd
push
push
xor
fwait
xor
or
je
decl
mov
sar
pop
not
push
and
adc
dec
out
fdivl
mov
cmp
aas
push
aam
push
in
add
and
inc
fists
jbe
jns
pop
das
mov
decl
lret
fldcw
ret
test
jmp
incl
jo
mov
out
in
lret
test
ja
cvtps2pd
mov
call
mov
sbb
sub
lcall
icebp
pop
sub
sub
ljmp
sub
pop
out
adc
leave
push
xchg
xchg
jp
or
pop
cmp
push
inc
addr16
lcall
or
cwtl
lret
and
insl
outsl
jno
outsb
inc
jg
les
push
adc
jmp
adc
lods
test
push
pop
inc
loope
sbb
push
jae
icebp
faddl
aam
std
lcall
xchg
pop
fstp
add
repnz
std
js
and
lea
jl
mov
pushl
ret
pop
push
mov
or
adc
sbb
fnstenv
lods
adc
mov
push
sbb
xchg
jns
subb
mov
cwtl
scas
pushl
mov
or
fs
dec
cmpsb
movsl
mov
mov
or
cli
pop
iret
data16
pushl
call
movsl
das
pop
gs
pop
lods
ret
fwait
cmp
div
aad
or
jp
sti
pop
decl
push
movsb
add
ljmp
sub
xchg
and
xor
mov
xor
jmp
in
loopne
and
push
add
into
fcomip
sbb
xchg
add
sbb
lcall
cmp
lahf
sbb
xchg
cwtl
push
mov
add
jo
jle
insl
push
xor
sti
push
xchg
popa
or
jns
mov
lods
fldt
push
lcall
mov
daa
mov
mov
jne
incl
dec
in
inc
dec
nop
mov
jp
xor
out
jb
push
stos
fsubr
adc
icebp
loopne
call
cld
repnz
punpckhwd
sbbb
js
sbb
mov
cwtl
pusha
pop
idiv
inc
cltd
dec
fistps
xchg
out
add
stos
lea
pop
int
push
fwait
sub
adc
xchg
dec
push
call
rclb
fpatan
xchg
pushl
cld
mov
movsb
scas
push
mov
cmpsb
add
pop
and
jns
inc
mov
mov
sbb
call
popa
subb
mov
call
fists
addr16
jl
mov
fstpt
lock
pop
fimull
jge
lods
pop
push
mov
sbb
mov
decl
imul
repz
imul
xchg
popa
jle
testl
sub
andb
jmp
xor
enter
out
cwtl
push
fnstsw
mov
xchg
out
bound
sarl
out
cmc
fbstp
pop
orb
add
add
pop
lcall
loope
inc
jae
cmp
insb
xchg
incl
xchg
mov
pop
repz
dec
push
pop
mov
inc
push
jmp
mov
repz
dec
jmp
push
dec
insb
add
icebp
addb
test
incl
dec
jmp
stos
ret
pop
fildll
xchg
dec
push
decl
mov
decl
xchg
and
adc
popl
xchg
pop
jg
xchg
xor
mov
dec
push
mov
decl
mov
xchg
or
and
imul
aaa
mov
shrb
notb
sub
ljmp
xor
test
movsb
mov
fldenv
mov
mov
pop
and
lock
lahf
adc
jo
cmpsl
loop
pop
faddp
dec
adcl
cmp
jmp
sar
jns
mov
jns
or
mov
inc
and
pop
lahf
stos
insb
pop
adc
ljmp
jnp
mov
insb
adc
ret
and
push
jmp
dec
mov
data16
lods
inc
sahf
push
pop
mov
scas
fldl
jno
ret
mov
mov
push
jo
ja
jae
push
jns
mov
loopne
ljmp
lret
daa
bound
xchg
xor
add
fcomip
movsb
xor
loopne
mov
movsb
test
testl
dec
jle
jmp
cmpsb
jnp
loope
lcall
jo
cmp
pop
push
inc
push
sbb
inc
xor
jbe
mov
xchg
sbb
mov
movsl
jb
cli
decl
cmp
cltd
jo
adc
cld
imul
shll
call
xor
sbb
dec
js
out
fstl
dec
sbb
outsb
mov
dec
xor
or
incl
int
adc
cmp
push
stc
xchg
sub
lds
xor
rcrl
lcall
mov
cli
test
add
test
jo
mov
dec
into
nop
rcr
cmpsb
dec
mov
pushl
insb
xlat
arpl
shlb
xchg
mov
add
push
pop
mov
iret
push
inc
fwait
inc
mov
mov
push
gs
loopne
cmpsl
jno
sbb
add
fwait
decl
cwtl
ret
stc
test
pop
jno
xor
sub
xor
lret
ljmp
pop
ds
jo
cmc
cmp
ds
lds
mov
lods
sbb
daa
mov
cs
decl
mov
mov
and
xchg
lahf
cmpb
cmpsb
sub
call
shlb
or
sub
decb
inc
xchg
les
adc
mov
outsl
decl
rcrl
icebp
jmp
inc
insb
stc
add
and
lods
int
ret
jnp
pop
popf
jmp
ds
mov
nop
and
push
daa
addl
cld
fdivrp
scas
adc
mov
sbb
pushl
sbb
lods
pop
rcll
push
hlt
aad
cmp
or
incl
cld
decl
xchg
inc
add
xor
pop
cmovs
fbld
outsl
loopne
xchg
lock
inc
cli
push
mov
call
movsl
or
push
outsb
pop
mov
data16
sbb
jmp
lcall
pop
jno
andb
fs
mov
or
dec
call
mov
sub
je
xchg
sbb
jo
ret
mov
jae
push
shlb
and
jg
incl
cmp
inc
aaa
inc
dec
pop
mov
bound
adc
ljmp
pop
xchg
xchg
dec
in
shlb
xor
imul
cmpsb
hlt
jbe
mov
jmp
sbb
repz
xor
rcr
pusha
int
xor
mov
push
out
fidivl
push
loope
xor
jge
aas
cmpsb
inc
inc
sub
sub
pushl
cmpb
adcl
cmp
cmp
loope
mov
pop
ficoms
gs
lcall
leave
aaa
loop
arpl
sub
movsl
inc
call
subl
pop
fcomip
adc
ljmp
ljmp
sub
push
add
std
jmp
mov
lods
mov
xlat
add
shll
mov
test
jecxz
adc
lcall
mov
je
cs
mov
push
or
decl
sti
mov
sub
outsl
fucomi
les
xchg
pop
incl
dec
fdivl
add
ret
test
divl
repnz
dec
dec
sub
inc
cmp
out
sbb
cmp
inc
mov
dec
out
jl
movsb
fcos
decl
popf
mov
int3
mov
repz
jge
aad
mov
ud1
inc
mov
ja
lock
sub
imul
pusha
clc
mov
pop
imul
stos
pop
sbb
popf
mov
mov
ljmp
mov
hlt
outsb
in
ffree
xor
mov
orb
push
clc
cmp
push
into
xlat
jne
fcmovu
xlat
push
dec
inc
clc
cld
cmp
sbb
or
xor
incl
xchg
push
cmp
mov
and
mov
js
sbb
cmp
push
lahf
sbb
cs
sub
mov
fstps
aas
xchg
adcb
xchg
and
add
push
jo
lods
lahf
inc
fs
rcrb
imul
pop
xor
out
loop
fcmovne
out
inc
sub
xchg
mov
rorb
lahf
inc
jae
xchg
xchg
iret
xor
adc
call
fildll
test
test
imul
into
add
aam
cld
decl
fidivl
js
cmpsl
in
ja
jl
cli
faddl
decb
or
inc
xchg
repnz
std
outsb
add
jg
sarl
pop
mov
mov
into
jmp
aad
in
adc
sub
add
jge
stc
mov
adcb
xchg
pop
mov
jmp
or
into
lret
sub
mov
push
pop
adc
cltd
mov
inc
pop
sbb
sarl
mov
dec
lfs
xchg
ret
fs
stos
outsb
test
mov
xor
push
inc
add
mov
int
rclb
inc
mov
pushl
lret
fldcw
fisubrs
jl
jno
lahf
jnp
jge
jl
lcall
imul
lcall
push
push
movsb
por
xor
jns
testl
inc
sbb
mulb
fwait
cld
dec
in
push
or
mov
negb
ret
xlat
movsb
cwtl
ds
outsb
cmpsl
push
sub
pop
xor
ljmp
into
iret
inc
jns
rorl
xchg
dec
inc
push
cmp
jmp
mov
inc
imul
ljmp
cmpsb
inc
jo
dec
out
mov
leave
push
push
in
enter
in
adc
int3
xor
scas
inc
fsubrl
out
clc
incl
pop
pop
push
pop
out
pop
and
mov
call
or
adc
repz
in
repnz
or
xlat
call
inc
nop
xchg
jmp
int
sarb
cltd
js
pop
cmc
xchg
clc
inc
ss
rcrl
arpl
pushl
inc
bound
out
jo
sub
fnstenv
pop
adc
xchg
add
decl
sbb
mov
roll
inc
add
int
fs
in
movsb
add
add
in
iret
stc
rolb
ljmp
jmp
xor
mov
pusha
les
mov
arpl
sbb
clc
dec
jmp
dec
pop
dec
or
jae
pop
push
inc
mov
fst
lret
mov
pop
cmc
cmp
ljmp
xor
dec
mov
clc
jb
lcall
punpckhdq
xlat
jp
sub
inc
jns
mov
aaa
ret
je
sbb
aas
int
mov
and
insl
adc
cmp
cmp
aas
mov
jns
cmovae
sarb
xchg
out
mov
sub
lds
mov
cld
jns
stos
fimuls
jb
push
and
fcomps
push
and
mov
add
fs
mov
xchg
ja
aaa
jns
lcall
pop
incl
sub
xchg
mov
sbb
pop
sbb
inc
rorl
insb
in
data16
jg
mov
pop
or
bound
inc
mov
out
dec
mov
xchg
cmp
shrb
inc
inc
xchg
jge
mov
jle
test
sbb
flds
jo
add
jbe
insl
sub
ljmp
rclb
cwtl
lcall
stos
lods
cltd
cmp
incl
cmp
or
jge
adc
arpl
loop
sub
cmp
dec
jmp
sub
sbb
out
push
mov
decl
lock
mov
fs
cmp
dec
lock
call
xor
mov
add
cmpsw
scas
xor
cmc
add
in
mov
and
fnsave
les
popa
jae
push
filds
int3
stc
xchg
pushf
cmc
cs
fildll
daa
add
adc
bound
hlt
test
pop
pushl
in
popa
sub
mov
xchg
and
pop
jnp
cs
aas
ljmp
std
inc
xchg
and
mov
not
mov
jecxz
in
cmpsl
cwtl
ficoml
out
or
cltd
fcomip
fadd
gs
mov
mov
jecxz
in
test
shr
imulb
call
ret
into
dec
ret
push
xchg
aam
daa
hlt
or
pop
ja
ljmp
popf
push
iret
jle
jns
mov
jp
mov
ljmp
incb
and
jmp
pop
sbb
aad
dec
xor
ljmp
dec
cmp
in
and
sbb
push
insl
mov
sbb
ljmp
imul
decl
push
fsub
dec
push
mulb
ret
insl
mull
loop
mov
data16
push
aad
jmp
xor
jns
mov
sub
aam
xor
pop
aad
cmp
jnp
jnp
jg
mov
loopne
imul
imul
ds
bound
shll
fstpt
imul
and
and
mov
mov
shll
inc
decl
stos
ret
das
dec
and
adc
push
push
add
fs
insb
ljmp
das
scas
xlat
fs
scas
out
sbb
lcall
mov
xor
mov
xchg
sbb
and
in
filds
jb
scas
cmpsb
dec
ljmp
xchg
out
rorl
loope
enter
mov
sub
sbb
pop
filds
in
cwtl
sbb
jl
xor
jmp
loop
push
pushf
adc
ror
out
popa
push
pushf
mov
repnz
test
pushl
repz
stc
jmp
mov
mov
jmp
pop
loop
ds
rcl
mov
add
cmp
mov
aad
aas
repz
or
add
jl
mov
adc
fs
push
dec
xor
inc
cmpsb
decb
movsb
mov
aaa
dec
pushl
mov
xor
cmp
sbb
mov
ljmp
xlat
iret
xchg
daa
fistpl
loopne
add
mov
lock
cmc
pushl
jl
pop
jmp
arpl
jl
in
aas
pop
fsubrl
and
call
pop
fidivrs
fiaddl
out
cwtl
call
push
pop
mov
sbb
jl
cs
stos
jg
stc
sub
iret
cmpsb
es
and
jo
call
mov
sub
and
scas
sbb
out
xchg
scas
cmpsl
dec
pop
or
out
decl
fimuls
cli
inc
in
filds
adc
nop
sbb
push
jb
xor
roll
xor
ljmp
adc
jae
movsb
cmpsb
xor
imul
cmp
xchg
std
fs
mov
cmp
ds
fildl
mov
mov
jmp
mov
pushw
mov
sub
jg
push
xlat
shr
rorl
clc
jmp
adc
test
pop
lcall
sti
jg
ljmp
icebp
inc
or
push
jle
xchg
pavgb
add
data16
std
jl
mov
jmp
pusha
lds
arpl
mov
int
add
rol
in
push
pop
and
cmp
dec
jae
xor
jno
xchg
push
inc
sub
xchg
ds
mov
mov
mov
xor
push
test
inc
pop
sub
mov
adc
fdivrl
push
push
cmp
testl
scas
mov
mov
dec
sti
scas
clc
pushl
icebp
pop
out
fstps
rolb
lods
mov
and
mov
xchg
pop
mov
loop
mov
push
push
pop
fisubrs
push
push
pushl
push
sub
mov
push
ret
mov
test
add
mov
leave
xlat
mov
push
xlat
add
decb
fldl
inc
and
inc
fdivr
xchg
jg
pushf
xchg
ret
jmp
daa
xchg
sub
lret
mov
sub
sbb
call
lahf
lretw
mov
lods
xchg
fistl
inc
inc
pop
cmp
decl
mov
repz
xchg
pop
adcb
out
xor
ss
mov
fcomip
incl
out
call
ljmp
mov
fildll
xor
loopne
stos
rcrb
xchg
xlat
mov
fisubrl
imul
fsubrp
fwait
jb
fisubrs
or
imul
rorl
fdivr
in
inc
cmp
jl
mov
xchg
pop
mov
sub
mov
push
ljmp
cmp
inc
scas
sub
jmp
cmp
loop
insb
or
dec
cmpsl
cwtl
xchg
pop
push
dec
cmpb
xchg
aad
jmp
inc
xchg
gs
xchg
std
dec
orb
dec
and
les
js
jg
inc
jbe
mov
mov
aad
jb
mov
pusha
out
arpl
pop
push
mov
pushl
faddl
icebp
rcll
in
es
mov
lahf
xor
bound
jmp
ret
mov
inc
xor
and
cmpsl
scas
cltd
mov
je
mov
incl
shrl
jle
mov
jns
xlat
movsl
cmp
cmpsb
cli
fistl
aas
fcmovnu
mov
std
jp
jle
mov
shlb
jo
cltd
daa
repz
push
mov
push
pusha
mov
dec
push
cmpsb
out
cmp
jp
cltd
mov
std
xor
jno
push
and
sub
jae
mov
nop
out
out
stc
cmp
mov
popa
mov
ljmp
ljmp
insb
mov
push
mov
jno
es
insb
sub
shll
ljmp
lahf
mov
aaa
arpl
gs
cld
push
inc
scas
jp
sbbb
cmp
je
stos
mov
jge
jg
xchg
jae
mov
pop
xchg
aas
add
lcall
and
mov
cmp
jg
std
adc
mov
push
mov
cld
cmp
or
jl
and
mov
sbb
inc
sub
bound
lock
incl
jg
add
add
lret
push
and
bound
and
loop
xchg
adc
dec
sbb
inc
cs
cmc
jns
fistpll
xchg
aaa
mov
and
sbb
add
xchg
ljmp
sub
mov
xor
cli
and
and
xchg
jne
aas
xchg
pop
es
jnp
fwait
xor
lods
cwtl
jle
mov
pop
es
jecxz
add
ror
sub
incl
sub
jle
andl
sti
das
testl
out
jb
test
out
xchg
ljmp
sar
sbb
jbe
xchg
movsb
mov
out
adc
push
aas
cmc
call
add
incl
mov
jbe
leave
pop
int
jno
enter
into
out
add
mov
sbb
mov
cmp
cmp
call
cmc
pushf
es
pop
mov
xchg
ret
ja
push
add
adc
aas
lcall
dec
inc
fistl
test
add
ss
cld
ss
test
cmp
and
add
mov
jbe
aaa
jnp
jg
sbb
sar
icebp
decl
sbb
test
imul
int
outsb
dec
push
pushf
dec
mov
fisttps
or
dec
ss
rorb
fcom
push
ljmp
dec
inc
inc
jne
cli
pop
hlt
ljmp
pop
hlt
jo
out
je
lcall
lods
and
stos
push
push
mov
xor
loope
mov
rclb
aam
fdivl
out
cli
pushl
enter
jl
push
cmp
pop
pop
adc
xchg
xchg
mov
cs
push
int
xchg
dec
add
cs
call
mov
mov
jge
adc
int3
xchg
stos
hlt
sub
insl
sub
mov
mov
dec
repnz
cmp
test
or
adc
pop
aad
fadd
jle
mov
ljmp
pop
cmp
test
pop
sub
iret
int3
daa
push
stos
lea
loopne
push
mov
adc
cmp
adc
inc
jo
arpl
mov
push
sbb
in
xchg
add
jg
call
jg
loope
test
cli
pop
add
subl
jle
test
jmp
ret
jg
insb
cmpb
xor
leave
lds
js
push
adc
cmp
ljmp
dec
shr
inc
xor
sub
out
jmp
or
push
lcall
push
sub
lds
and
leave
dec
and
clc
scas
out
pop
mov
add
push
or
pop
fcmovne
jno
pop
xor
adc
sub
int3
push
push
jg
sub
sbb
push
fimuls
mov
out
lock
ss
decl
mov
aad
adc
pop
xor
mov
mov
mov
stc
cli
rol
test
data16
fnstsw
cmpsl
lock
cmp
js
jbe
addl
inc
push
ja
mov
xor
sub
notb
sti
scas
clc
fistps
das
lods
xchg
in
scas
xor
xchg
dec
call
outsl
stc
mov
decl
fimull
es
imull
add
pushl
shll
sbb
push
ljmp
pushl
or
mov
sahf
lods
dec
dec
sub
jno
lods
xchg
aas
fidivs
call
popf
add
add
mov
add
or
icebp
ss
sarl
pushl
cld
out
fnstcw
mov
aas
jo
xchg
xchg
repz
pop
rcl
mov
mov
dec
pop
fcoms
rorl
dec
lea
bound
ret
outsl
sub
pop
into
das
sar
leave
fldl
inc
ret
aad
xor
test
cmpsb
test
das
clc
lcall
lcall
loope
and
icebp
pop
push
cli
arpl
dec
xchg
pusha
mov
cmp
incl
inc
in
outsb
les
popa
cmc
adc
stos
xchg
xor
xchg
sbb
popw
clc
fisubrl
incl
out
mov
mov
or
jbe
aaa
sub
bound
xor
push
scas
sbb
call
sbb
cmc
mov
jmp
push
shll
jns
jmp
insb
fistps
dec
ret
icebp
fwait
and
xchg
nopl
xchg
movsl
dec
das
or
loope
popa
adc
clc
xchg
pop
andl
lcall
cli
mov
pop
nop
mov
insb
pop
pop
cmpsl
push
mov
bound
cmp
call
xlat
xlat
add
inc
cmp
int3
bound
out
divb
jmp
repnz
mov
call
or
popf
stos
mov
inc
push
cld
jne
mov
mov
lcall
adc
das
add
push
out
rclb
push
les
cmc
shrl
lahf
push
pushf
mov
incl
dec
jmp
fsubr
push
test
jbe
xchg
cmp
fisubl
subl
sbb
lcall
sub
dec
xor
fstpt
int
out
push
mov
daa
inc
xchg
fstps
fisttpll
les
pop
cmp
hlt
lods
jbe
inc
je
lds
std
cmpsb
test
pop
and
rol
jl
lcall
ret
push
mov
pop
repz
out
hlt
pop
rcrl
push
cmp
out
fmulp
jle
fmulp
push
jo
push
push
push
fucomi
cwtl
test
clc
mov
jnp
out
mov
aam
mov
jno
inc
cmp
cli
lcall
mov
pop
jle
push
stc
push
and
rorl
stc
ljmp
lods
and
pop
int
xor
std
in
sub
fstsw
cmpsb
call
add
ljmp
out
insl
jg
jecxz
fwait
inc
pop
adc
daa
rorl
push
fpatan
push
les
rcrl
or
lret
dec
mov
pop
loopne
cld
mov
subb
rclb
loopne
push
fwait
lahf
loopne
gs
pushl
mov
push
test
sbb
pop
mov
jl
test
adc
mov
xchg
jg
or
mov
mov
stos
inc
mov
das
cmp
adc
or
in
sub
or
adc
dec
inc
mov
daa
ret
pop
dec
inc
lret
lret
clc
pop
push
enter
and
sbb
fs
loopne
aad
or
fnstsw
mov
outsb
dec
stc
jmp
and
out
stc
or
cmp
sbb
test
dec
inc
cmc
pop
fisubrs
inc
fwait
cmc
pop
imul
loop
inc
scas
xor
sub
cld
pop
icebp
pushl
or
bound
inc
mov
das
sbb
fcmovu
push
lods
add
imull
adc
aad
dec
mov
sbb
call
das
sub
add
rol
or
mov
faddl
cld
dec
sbb
sbb
or
adc
pop
cmc
cmp
xchg
push
lahf
pop
sar
lcall
imul
mov
xchg
sahf
gs
and
xor
in
lahf
stos
ljmp
fbld
adc
jmp
or
inc
jge
sahf
sar
jle
lods
cli
in
aaa
test
jmp
arpl
dec
cmpsl
add
les
imul
call
test
sub
in
jnp
jp
xor
andl
push
dec
fisubl
jno
hlt
decl
test
aam
je
cli
outsb
sub
pop
lcall
fsubr
jle
dec
jle
fdivr
mov
push
sbb
cmp
xor
inc
les
cmp
clc
ljmp
mov
out
jnp
add
dec
jg
je
cld
movsl
sbb
es
fwait
xlat
fildll
jge
xor
lds
scas
andl
in
mov
inc
lret
sub
sub
jo
fwait
negl
jns
shl
sub
fcomip
xlat
jl
mov
das
test
mov
pop
sub
push
sub
int
jns
xor
lret
sbb
jp
inc
leave
scas
sub
popf
mov
sub
jnp
ret
mov
ljmp
icebp
data16
test
push
mov
or
test
out
push
mov
shrl
ljmp
and
test
sub
and
incl
cltd
fwait
stos
push
cli
jne
iret
outsb
mov
daa
cmpsb
testl
shll
shlb
pop
rorl
outsl
and
mov
xchg
lods
imul
ljmp
sarb
fadds
push
pop
mov
inc
xchg
repz
mov
jbe
inc
pusha
adc
sub
loopne
xchg
notb
adc
loopne
push
rol
stos
popf
fistps
cmp
adc
mov
sub
and
in
and
scas
sar
call
outsl
mov
enter
in
adc
and
leave
rcr
movsb
jg
xchg
push
inc
inc
sbb
push
adc
fildl
incl
add
dec
outsb
add
mov
data16
decl
sbb
scas
hlt
ds
into
jns
or
or
pop
adc
mov
xchg
fdivrs
pop
xor
dec
fstpl
cmpsl
xorl
data16
xlat
cmp
dec
sarl
clc
push
or
sbb
in
shll
mov
xlat
sub
mov
jg
lcall
mov
add
mov
movswl
or
popf
mov
fadds
mov
mov
dec
and
lret
bound
incl
lret
mov
lods
dec
fiadds
xlat
mov
jnp
pop
mov
and
xor
mov
call
cmp
bound
push
aas
add
inc
gs
mov
out
mov
mov
jmp
nop
inc
cwtl
test
out
in
jne
cwtl
mov
adc
lcall
out
fbld
dec
cmp
rcrb
cld
cmpsb
push
shrl
pop
fs
add
mov
cld
repz
sbb
icebp
and
or
ds
xchg
mov
adc
pop
cmp
jecxz
add
out
rcl
in
fdivs
push
lret
inc
ljmp
cwtl
js
rorl
and
ret
fcmovnu
inc
push
cmp
push
ljmp
and
iret
cmp
adc
punpckhbw
test
arpl
and
imul
cmpsl
test
insb
outsb
hlt
lcall
stos
xor
dec
sub
jl
push
shrb
push
jecxz
mov
ss
or
mov
lret
cli
mov
test
xor
mov
data16
icebp
jecxz
nop
cs
mov
lcall
dec
xchg
gs
mov
cmpsl
dec
xchg
mov
popa
icebp
inc
test
mov
incl
lods
push
test
aam
push
sub
adc
cmc
lahf
aam
pop
loope
inc
jb
popa
iret
inc
out
mov
outsb
ret
mov
ss
sahf
adc
cmp
repz
movsl
cmp
or
loop
lahf
add
mov
aam
pushf
loope
lea
sbb
fwait
cld
call
jge
shrl
sbb
push
inc
loop
fldl
xor
xor
lock
sar
idiv
pushl
and
adc
add
outsl
ss
mov
clc
adc
imul
js,pn
dec
daa
lcall
sti
xor
mov
adc
not
push
lcall
in
roll
imul
push
and
lret
loope
mov
pop
jne
aas
incl
out
pop
mov
call
dec
loopne
jg
add
mov
pushl
push
popa
cmp
test
insb
decb
jb
scas
repnz
shlb
or
call
fdivr
jne
and
and
mov
xchg
in
adc
pop
push
ljmp
adc
ret
sbb
inc
xchg
sarb
call
js
mov
push
movsl
insb
stos
dec
loope
pushf
push
add
lcall
loopne
nop
mov
ljmp
insl
test
js
mov
imul
mov
inc
fwait
cmp
rorb
cmc
jno
xor
imul
lods
lods
lds
std
arpl
lcall
lds
or
push
data16
frstor
cmpsl
fwait
dec
push
or
mov
pop
bound
cmp
shl
pop
rclb
fucomi
fidivl
repnz
push
sahf
imul
shrl
cmp
into
jmp
repnz
dec
inc
call
mov
dec
mov
and
daa
pop
or
out
daa
jp
repnz
dec
sub
jmp
and
mov
push
aaa
subb
addr16
fdivr
pop
mov
call
bound
pop
lock
cmp
fldl
call
fstps
fwait
loop
decl
lock
adcl
push
nop
call
popa
push
fcomps
cld
call
or
or
mov
push
cmp
lcall
cmpsl
enter
fisttpl
push
mov
dec
inc
mov
arpl
fdivs
pusha
sub
ljmp
push
adc
pop
mov
rorb
insl
mov
rclb
jl
mov
ljmp
adc
popa
pushf
mov
pop
decl
les
pop
sbb
stc
sbb
sbb
sar
call
mov
ds
enter
gs
and
data16
pop
leave
cmp
fcomip
call
mov
sti
in
lret
mov
push
fwait
cmp
das
cld
jnp
dec
daa
test
call
jle
xchg
out
aam
jns
inc
jmp
jl
xchg
pop
push
lret
xor
in
leave
or
xchg
ljmp
sar
daa
mov
sbb
and
cwtl
fsub
aas
movsb
sbb
incl
insb
pop
shrb
and
cmpsb
sub
icebp
add
outsl
add
xchg
xchg
ret
out
sub
dec
das
clc
ja
in
cmp
lock
jp
pop
mov
out
inc
call
sub
jo
loope
adc
mov
loop
mov
mov
xchg
cli
cmpsb
ljmp
sub
mov
cmp
inc
or
sub
jbe
cmpl
cld
stos
sub
sub
fsubl
mov
xchg
dec
mov
iret
fstpt
dec
loop
adc
mov
jg
aas
xchg
jae
sbb
xorl
cwtl
loope
xchg
test
sub
incl
inc
insb
mov
add
les
xchg
jecxz
jg
or
je
add
loop
add
ficompl
repz
ss
cmpsl
adcl
ljmp
mov
push
pop
imul
leave
mov
dec
and
xchg
jnp
jmp
incl
xor
dec
xchg
dec
mov
xchg
test
dec
rorl
bound
lcall
bound
fiadds
jnp
test
mov
jo
adc
mov
pop
jmp
cmp
test
repnz
aas
or
or
mov
and
fcomp
dec
cltd
nop
and
jns
decl
or
xchg
testl
mov
add
ficomps
sbbb
cmpsb
sub
adcl
std
loop
ja
jge
cmpb
movsl
pop
sbb
pushl
xor
xchg
cwtl
loop
cmp
scas
pop
push
mov
outsl
lods
cmpsb
mov
dec
hlt
icebp
xchg
cwtl
das
gs
pushl
std
out
inc
fistps
in
mov
imul
jge
cmp
or
sub
shlb
aad
xorb
mov
movsl
xor
cmp
test
aas
mov
xchg
mov
jae
test
sub
sbbb
test
aas
mov
jb
ljmp
mov
mov
mov
sbb
jne
out
xchg
scas
vunpckhps
std
adc
scas
pop
dec
rcr
fcomps
gs
aas
pop
in
out
mov
outsb
jecxz
inc
mov
aad
lcall
rolb
addb
and
ja
ljmp
cwtl
cmp
jmp
mov
outsb
sbb
jmp
cmp
insl
divl
loopne
incl
mov
aaa
daa
fildll
jge
shrl
out
int3
jnp
sub
cmpsb
mov
mov
jmp
mov
mov
shrb
dec
pusha
cmpb
pushl
push
dec
xlat
jne
push
or
pop
int
mov
es
cwtl
lahf
push
std
fdivrl
lcall
data16
scas
arpl
aas
dec
mov
and
dec
scas
xchg
cli
popa
aas
icebp
decl
mov
loope
cmpsb
lahf
mov
xchg
ret
leave
test
call
out
add
jl
aaa
icebp
call
xchg
jbe
stos
sbb
cmp
and
jg
or
fidivrl
push
add
es
addb
mov
jns
popa
pop
cld
mov
xor
mov
pop
shrb
mov
push
sub
insl
into
push
ret
adc
sub
mov
xor
outsl
pop
mov
fwait
cltd
mov
jmp
push
idivl
out
mov
mov
clc
mov
xchg
pop
xor
push
mov
add
mov
xor
shl
jns,pn
xchg
sub
pop
cmpsl
int
push
adc
push
lret
jle
cmp
jno
incl
mov
dec
aaa
xchg
sub
lahf
add
and
cmp
lcall
decb
jle
icebp
jns
pop
shl
pushl
or
push
in
daa
and
mov
ljmp
adc
ljmp
pop
je
xchg
rorb
decl
in
clc
cltd
cmpsb
mov
cld
or
push
popa
call
dec
das
add
xchg
jmp
repz
mov
inc
and
pop
repnz
call
or
rol
sbb
adc
cld
cmp
add
aad
xchg
fwait
push
enter
cmpb
test
cmp
jg
orb
adc
xor
shll
dec
ret
jg
pop
in
jb
imul
and
xchg
test
movsl
jecxz
adc
lcall
jno
xchg
sub
add
add
lock
or
imul
out
jae
in
sbb
fnop
loopne
movsl
cs
lods
fsubr
stos
jecxz
fwait
jns
jo
pusha
outsb
in
or
decl
hlt
mov
lahf
mov
jmp
mov
xchg
lret
jae
clc
incl
fucomip
mov
fadds
jo
mov
aad
xchg
cs
mov
xor
imul
sti
jecxz
pop
in
sub
xchg
jmp
push
sahf
mov
fisubl
aam
push
stos
fisttpl
stc
xchg
and
inc
or
sbb
xchg
call
and
dec
and
rol
xor
scas
testl
addb
in
ljmp
sahf
mov
pop
jno
push
push
sub
adc
rcrl
mov
cmp
addr16
push
dec
and
jns
es
loopne
hlt
jecxz
pop
mov
pop
jge
jmp
rcll
pop
pop
cmp
sbb
repnz
mov
loope
sub
decl
test
xchg
popf
fldt
cmp
fs
or
std
pop
cmpsl
sbb
lcall
or
xlat
shrb
enter
xor
stc
mov
jbe
jge
jle
fbstp
cld
inc
imul
pop
adc
out
cmp
push
mov
incl
rol
push
ret
xor
fnstsw
outsb
jno
adc
sub
cmc
lea
pushl
aaa
ljmp
mov
mov
sbb
cmpsb
cmp
lcall
pop
outsl
femms
sbb
cs
es
pop
aaa
bound
icebp
stos
cltd
and
data16
decl
jmp
cmp
mov
fnclex
push
in
ljmp
pop
jg
out
ljmp
rolb
jnp
ficomps
lret
sbb
adc
inc
ljmp
insb
popa
cs
dec
mov
bound
out
xor
sbb
push
leave
leave
push
clc
pusha
push
pushl
mov
pop
push
jge
xor
add
pop
xorl
popf
or
pop
dec
pop
sti
dec
aas
fdivrl
lcall
rcrb
fidivrl
mov
in
fldt
lret
addr16
xchg
jl
sbb
fcom
clc
mov
jnp
stos
ret
enter
pop
lahf
jbe
aad
daa
mov
push
push
clc
ret
popf
jp
aad
imul
mov
dec
hlt
or
xor
mov
add
and
pushl
loop
inc
lock
and
xor
pop
inc
mov
push
ja
dec
dec
xchg
jmp
aaa
cld
dec
call
icebp
lret
mov
hlt
out
push
mov
movsb
push
cmp
enter
in
mov
adc
pushl
or
stos
shrb
fs
push
mov
xchg
test
pushl
movsb
pop
in
inc
adc
out
add
decb
pop
dec
loopne
icebp
aam
pop
jbe
mov
out
clc
shl
imul
lret
adc
jno
notb
aas
cmp
dec
or
test
dec
fcmovnb
push
cmc
adc
jle
push
lret
mov
in
inc
jl
and
ljmp
call
pop
mov
out
push
push
push
out
lret
mov
mov
jae
loopne
jecxz
mov
loopne
pushl
push
lret
stos
outsl
push
cmc
adc
idivl
insl
cmpb
enter
incl
xor
or
enter
cmc
fidivs
mov
enter
add
jmp
fnstcw
dec
or
sub
scas
push
lret
lods
mov
mov
sub
outsl
loope
imul
mov
jmp
fwait
xchg
lret
xlat
sub
and
pop
push
inc
cwtl
push
int
fidivrl
sub
jmp
fsubrs
mov
stos
lods
ficomps
mov
lret
aaa
ja
call
push
pop
insl
pop
pusha
sub
lock
aas
cmp
ljmp
xor
popf
pushf
scas
rcl
jmp
inc
popf
jnp
jbe
movsb
and
mov
inc
out
ljmp
stos
popf
movsb
cltd
dec
add
fwait
jl
loopne
push
dec
lods
jo
xor
or
test
inc
cmpb
mov
mov
sarb
out
and
ljmp
smsw
mov
pop
jmp
push
das
xor
pop
jns
pop
dec
xor
call
clc
inc
push
sti
jne
mov
sbb
shl
mov
or
jg
xchg
pop
ror
lret
cmp
test
inc
push
jmp
gs
call
loop
subl
jge
scas
mov
in
lcall
clc
xchg
imul
ror
sbb
ljmp
incl
ffree
popf
xor
das
pop
repnz
sub
add
push
fsub
or
lcall
sbb
daa
outsb
out
idivb
out
and
add
and
dec
mov
sub
add
push
clc
push
js
dec
xor
clc
inc
pop
arpl
out
mov
jg
daa
lock
inc
out
mov
jmp
push
pop
push
rcr
inc
and
push
jp
cmp
mov
sbb
movsl
lcall
sbb
sbb
mov
mov
imul
daa
xorb
subb
jp
sub
jmp
stos
cmpsl
not
mov
mov
push
rcr
clc
cli
dec
out
sub
mov
push
es
and
fisttpll
mov
add
cwtl
lods
cmpsb
stos
mov
popf
mov
mov
ljmp
outsb
mov
out
and
inc
ret
fidivs
shlb
inc
mov
pop
std
call
in
push
jb
mov
and
test
pop
addr16
ljmp
test
cld
jmp
enter
push
xor
jb
popa
sti
insb
test
cmp
decl
push
ret
dec
arpl
imul
and
xchg
jno
sub
jo
decl
jae
jns
mov
or
mov
inc
sub
ds
mov
dec
cmp
jno
std
decl
bound
subb
clc
lods
shll
lds
imul
nop
pushl
outsb
push
sub
mov
cmpb
pop
pop
cmp
push
jge
ret
decl
decl
cltd
cmp
aad
xor
cmp
inc
add
mov
cld
lock
aam
incl
jp
jno
jge
mov
outsb
stc
and
jae
cmp
dec
mov
call
rcl
cmc
es
in
push
icebp
stc
or
push
mov
dec
add
ljmp
popf
push
and
lods
inc
mov
scas
out
cwtl
jmp
or
imul
inc
mov
adc
mov
nop
inc
xorl
push
cmpsl
lret
mov
pushl
ret
or
mov
sub
dec
mov
stos
mov
mov
cli
mov
test
or
ljmp
aaa
nop
lods
outsb
adc
mov
add
pusha
sbb
invd
lahf
mov
sbb
data16
cmp
push
sbb
push
and
inc
inc
out
dec
roll
jmp
xlat
pop
xchg
in
mov
test
jae
adc
mov
movsl
cmc
xchg
in
dec
add
orl
ljmp
cli
sub
inc
insb
aad
jp
popa
mov
cli
movsb
sub
fwait
or
loop
jmp
repnz
bound
iret
mov
pop
pop
js
xchg
inc
sub
insb
test
mov
aad
mov
sub
mov
cwtl
mov
in
mov
cmp
fcos
fcomip
jmp
pop
xor
mov
xchg
popf
mov
mov
incl
incb
cmp
adcb
pop
leave
lock
xchg
adc
out
adc
fcomip
lcall
cmp
fidivs
testb
dec
loope
add
das
xor
int3
adc
inc
daa
cld
adc
adc
dec
lock
pusha
pop
pop
pop
pop
js
mov
pop
mov
scas
ljmp
push
sbbw
xor
iret
sbb
mov
popa
popf
cmp
push
decl
jne
dec
mov
pop
or
push
std
rep
movb
sarl
sbb
scas
push
mov
adc
lds
sbb
cld
hlt
dec
dec
pop
pop
jne
call
fists
lcall
jg
jg
leave
mov
fs
mov
mov
mov
popa
test
sbb
fadds
lock
ficomps
pop
xor
fsubs
mov
repz
sub
mov
and
push
adc
adc
dec
pop
pop
mov
js
imul
and
outsl
xchg
jo
call
inc
mov
idivl
fists
clc
ljmp
nop
les
xor
jae
inc
icebp
and
or
mov
mov
mulb
jp
inc
jno
mov
add
dec
xchg
inc
pop
arpl
and
sbb
shr
fistpll
enterw
cmc
sbb
mov
decl
dec
pusha
fcomps
mov
mov
xorl
leave
mov
jo
dec
adc
insl
roll
and
and
arpl
dec
aad
pop
jno
and
das
pop
into
dec
decl
pop
add
idivl
outsb
lds
arpl
faddl
push
enter
push
fcoml
sbb
pop
icebp
pushl
mov
cmp
push
pop
movsb
xchg
scas
sub
mov
pushl
inc
cmc
mov
cwtl
lret
mov
stos
mov
jle
enter
xchg
inc
jnp
scas
mov
cmp
rcrl
mov
mov
sub
imul
sbb
jg
pushl
and
icebp
call
lcall
int3
movsb
int3
pop
jmp
ljmp
dec
fs
out
mov
movsb
jecxz
mov
mov
repz
mov
dec
adc
sti
mov
test
orb
incl
push
xor
outsb
out
fldl
pushf
inc
cli
cwtl
jle
jmp
sbb
cli
mov
xchg
pushl
push
dec
and
mov
std
leave
repnz
or
xor
rorb
pushl
pop
push
lock
ss
fidivrl
fwait
insl
jb
adc
nop
aam
mov
dec
lcall
pop
cmpl
sub
sbb
inc
sub
mov
jmp
push
mov
cltd
int3
or
mov
roll
outsb
adc
jo
test
jecxz
adc
cmp
and
in
jmp
pop
lcall
cmp
outsl
add
cmp
rclb
mov
cltd
mov
xor
sbb
push
fbstp
mov
pop
or
push
pop
pop
fidivs
add
andb
xor
mov
xchg
shl
sub
fldcw
push
dec
push
inc
lahf
xchg
leave
test
ret
je
adc
hlt
dec
ljmp
mov
sahf
out
lods
and
loope
push
and
lret
decl
popf
sub
into
out
jge
mov
push
ja
xchg
mov
push
xor
adc
popl
or
xchg
xorb
cld
call
ds
cmp
jmp
dec
int3
pop
cmc
mov
pop
fists
mov
xlat
incl
nop
cli
or
bound
sbb
jp
adc
push
mov
mov
push
lock
mov
int
ljmp
xchg
movsb
xchg
lahf
or
decb
popf
jb
xor
mov
xchg
pushf
mov
pop
das
test
jp
sbb
sbb
fdivr
lcall
mov
out
fstps
lret
xor
fwait
aad
lcall
jmp
sub
jmp
mov
fimull
add
lods
or
mov
pop
sarb
call
and
dec
dec
push
dec
pusha
mov
pop
mov
dec
jno
cmpsl
dec
imul
out
jp
std
incl
int3
jle
xor
add
xchg
jge
xlat
sbb
iret
add
filds
mov
xchg
mov
lds
int3
fwait
mov
addl
call
std
mov
pop
jmp
pop
ret
out
out
lret
adc
js
push
jmp
call
dec
es
lods
dec
xchg
jecxz
dec
push
mov
inc
loope
lahf
out
enter
mov
inc
movsl
lds
cmp
cwtl
in
pop
jmp
jg
fwait
andl
adc
inc
test
in
pushl
into
aam
sub
jo
lcall
pop
adc
mov
xchg
decl
movsb
pop
mov
push
mov
std
push
scas
push
int
jmp
std
pop
in
loopne
cli
add
lea
sub
aaa
dec
fimull
cs
pop
adc
add
jae
and
out
repnz
pop
das
sub
incl
xchg
jb
xchg
mov
scas
push
add
inc
push
fldcw
out
pop
jl
jns
sub
mov
mov
aas
jnp
xor
push
push
inc
popa
or
test
call
leave
jb
or
adc
or
and
mov
inc
dec
push
test
sar
inc
pop
leave
lods
pop
jno
mov
std
in
lock
push
rcrl
pushf
sbbb
rcrl
push
addl
sub
dec
pop
or
push
stos
lods
aaa
ljmp
repnz
fmulp
sbb
outsb
scas
ds
popa
rorl
ret
fstps
cltd
scas
mov
cmp
jno
jle
fldl
xchg
shr
mov
mov
mov
cmp
jmp
and
out
mov
cmpsl
clc
ljmp
fs
ljmp
cwtl
add
stc
adc
push
adc
or
fildll
data16
bnd
jae
ljmp
ficompl
mov
subl
ja
fsubl
and
outsl
cs
jp
mov
fdivrp
jns
out
pop
push
lahf
mov
jmp
mov
cmp
and
xchg
or
aam
sbb
mov
decl
mov
inc
enter
ja
sub
js
scas
cli
fstpt
cmp
gs
cld
decl
sarl
testl
clc
jne
test
test
push
mov
inc
leave
or
std
mov
lcall
xchg
jmp
rclb
mov
int
sub
cmc
mov
sub
outsl
rclb
cmpsb
cld
subl
scas
push
xchg
mov
mov
pop
pop
push
sti
inc
pusha
add
jmp
add
imul
jb
ret
aam
mov
aaa
addb
ja
call
call
notl
insb
rorl
rcrl
repz
mov
decl
push
adc
mov
int
mov
xor
cmp
sarb
pop
jnp
sbb
mov
fdiv
pop
inc
movaps
inc
clc
cmpsb
mov
adcb
add
shrl
outsl
cmc
pushf
vdivpd
inc
xchg
pop
sbb
call
imull
jae
mov
aam
loop
jb
loope
xlat
test
movsb
and
bsf
mov
dec
mov
inc
xor
xchg
in
lds
pop
movsl
pop
push
mov
jg
test
shrb
call
into
sti
sbbl
aas
mov
cli
gs
add
shrl
cld
mov
fwait
xor
pop
stos
outsl
in
inc
mov
inc
jge
lds
test
mov
lock
shrb
mov
pop
sbb
in
mov
cli
cmp
lock
cli
lret
mov
stc
mov
mov
cmp
adc
mov
rcrl
rolb
push
imul
pop
jmp
loope
ds
stc
stos
push
mov
adc
mov
and
lret
lcall
inc
push
xchg
mov
es
loope
xchg
add
in
adc
sub
and
ljmp
mov
ret
cmp
jno
or
dec
call
popf
gs
sub
shll
into
stos
push
mov
add
enter
add
popa
fwait
lods
push
call
add
sarb
or
mov
xor
cs
xchg
inc
int
cmp
inc
pop
out
lea
pop
hlt
pop
mov
inc
xor
test
pop
cld
in
pop
and
mov
call
cmpsl
aas
cs
add
scas
insb
pop
cmpsl
test
mov
add
mov
call
gs
insl
in
pop
fwait
sub
mov
mov
pop
xor
push
decl
push
jecxz
out
jmp
sbb
inc
adc
loop
pop
mov
lcall
mov
popa
jnp
jmp
or
dec
jl
mov
inc
push
insl
cmp
fmull
unpcklps
outsl
leave
pmullw
lret
xor
mov
out
in
jno
or
call
imul
xchg
sub
or
arpl
rcrl
ljmp
andb
add
das
adc
mov
lahf
mov
out
cmpsl
inc
mov
and
int3
mov
call
out
and
or
in
sub
dec
pop
push
add
jbe
or
xchg
adc
mov
aam
mov
cmc
loop
lcall
mov
dec
and
mov
xlat
inc
xchg
mov
mov
adc
mov
call
sbb
sbb
or
sbb
mov
nop
push
cmc
jns
cmp
dec
xlat
idivl
sub
iret
jnp
push
and
mov
push
insb
and
mov
mov
sbb
cmp
enter
insl
xchg
test
sahf
mov
inc
push
sbb
jg
and
out
test
and
call
in
sbb
sbb
add
cltd
jo
lcall
and
jg
or
daa
in
mov
cmpsb
bound
test
stos
jl
mov
jmp
arpl
and
cltd
xchg
cli
mov
inc
popf
adc
mov
pop
sub
out
mov
mov
cmpb
lcall
fcoms
enter
bound
mov
test
lea
in
cmp
rol
repnz
and
jmp
xchg
out
fists
cltd
push
jge
in
mov
dec
in
das
xor
clc
xor
add
pushl
aam
push
mov
and
rol
mov
jbe
scas
aaa
fcmovne
push
xor
call
xchg
or
out
cmp
dec
and
dec
push
test
into
mov
movsb
push
icebp
push
pop
fs
add
out
mov
call
sbb
xchg
roll
test
addr16
das
jle
ljmp
inc
xchg
and
mov
in
insl
shlb
xchg
lret
sbb
ljmp
push
add
adc
push
or
mov
gs
pop
ljmp
cmpb
pop
cld
push
push
ret
incl
adc
push
mov
adc
push
pop
lahf
cmpsb
sub
mov
adc
fidivrs
cmp
ljmp
cli
xchg
dec
imul
dec
repz
push
push
lcall
cld
repnz
bound
xchg
es
jmp
jg
aas
std
pop
sbb
nop
or
movsb
int3
push
aad
xor
cli
jne
jnp
fnstenv
pushl
lods
sub
mov
bound
arpl
cmc
ffreep
rclb
incl
dec
fimuls
xor
maxps
fwait
les
pop
mov
push
push
sbb
jae
xor
inc
movsb
pushf
sti
ret
jge
sub
icebp
dec
dec
mov
call
ja
call
fwait
in
mov
mov
push
jp
dec
push
xlat
push
fst
push
lock
mov
data16
jb
adc
filds
jl
sbb
pusha
cmpsl
sub
pop
and
push
mov
inc
outsl
push
ja
inc
jge
inc
into
test
mov
inc
fisubs
je
mov
inc
fldenv
xor
addl
push
jge
es
sub
push
push
nop
jmp
gs
mov
mov
incl
aam
cmp
lods
je
dec
pushl
clc
push
jb
ja
mov
cmp
dec
notb
cwtl
lahf
xlat
cmpsl
add
stc
sbb
in
sub
mov
push
loope
movsb
add
fcomip
pushl
cmpsb
inc
mov
xchg
ss
dec
sbb
or
sbb
adc
clc
sti
cmp
repz
xor
push
hlt
repnz
xor
fsub
mov
test
inc
pop
mul
movsb
xor
pop
incl
mov
popa
adc
pusha
iret
insl
je
jmp
and
or
push
clc
das
test
jb
mov
xchg
xor
enter
inc
cmp
sub
or
lods
adc
nop
loopne
lret
push
mov
rolb
idivl
add
push
scas
data16
jg
stos
je
jp
call
mov
enter
add
cmpsl
xor
lret
inc
insl
push
push
xlat
lock
lcall
dec
rorl
inc
mov
sbb
mov
gs
call
pushl
sbb
inc
lds
ret
xor
jne
push
bound
or
cmpsb
enter
pushl
das
pop
inc
popf
pop
add
sbb
in
insl
jle
mov
mov
mov
loop
loopne
mov
test
jnp
int
insl
test
sub
mov
lods
hlt
adc
fmuls
sar
lahf
and
pop
int
sti
xchg
xchg
les
and
sbb
imul
jns
lcall
or
push
out
xchg
shrb
sbb
aas
push
xchg
add
add
ljmp
mov
jecxz
ret
pop
push
outsl
sub
push
jo
std
sbb
dec
xchg
add
mov
fbld
fbld
sbb
negb
cmp
xchg
xchg
test
call
sub
imul
add
jp
daa
xor
movb
mov
ljmp
pushl
scas
pop
int3
call
xor
sbb
fwait
mov
mov
loopne
test
insl
fistpll
hlt
repz
mov
call
inc
xor
fwait
xchg
in
stos
dec
push
das
cmpsl
dec
xchg
aam
movsl
push
stos
pop
insl
xchg
pushl
push
sub
addr16
adc
fidivl
stos
out
xlat
in
das
push
and
ret
sub
ljmp
pop
pop
adc
jle
dec
sub
mov
mov
jbe
lock
lods
pop
test
cmpsb
hlt
outsb
cmp
jg
and
mov
add
xor
outsb
xor
lret
lds
pop
mov
mov
call
xor
pop
stos
xchg
or
xchg
push
repnz
or
inc
sub
enter
stos
xchg
stos
add
push
xorb
std
or
mov
mov
pop
push
or
jmp
sbb
jne
add
xchg
mov
sbb
or
fisttpll
or
sub
jge
cwtl
ret
dec
subl
popa
repz
decl
stos
call
iret
fisubrl
xor
jb
mov
mov
icebp
or
adcb
and
jmp
loop
clc
imul
push
jmp
mov
add
pusha
pushl
shll
and
and
sbb
test
popa
mov
push
pushl
cld
jmp
aas
add
fstpt
cld
out
loopnew
cmp
adcb
xchg
call
leave
outsb
jle
fwait
pop
sbb
ds
add
push
jg
daa
imul
jmp
jns
inc
sahf
lea
dec
int
mov
mov
cld
push
push
in
arpl
mov
mov
cmpsb
call
xchg
adc
xchg
mov
sbb
lods
or
cmp
das
lret
push
add
dec
dec
out
mov
push
outsl
aas
push
lret
testl
cltd
sub
jbe
ja
mov
cmc
push
cmpsb
mov
dec
jp
ficomps
fimuls
sub
push
or
push
or
sbb
enter
ja
dec
sub
mov
pop
mov
cld
fdivrp
adc
mov
cs
cmpsl
add
adc
mov
mov
movsl
insb
cwtl
inc
mov
out
pop
jo
iret
mov
pop
popf
xor
aas
mov
out
cs
or
fidivl
int3
pop
fsts
aam
arpl
gs
dec
inc
das
clc
jae
les
and
call
sbb
rclb
repnz
arpl
int
fwait
enter
jne
push
xchg
iret
call
dec
xchg
xchg
lock
adc
jle
dec
das
popa
cli
addr16
pop
or
incl
mov
les
fidivl
sti
inc
mov
sub
addr16
mov
int
inc
mov
xchg
mov
pushl
repnz
stos
and
inc
fcompl
mov
xchg
insl
jecxz
ljmp
push
test
mov
inc
fbld
cmp
ret
test
push
decl
mov
dec
push
data16
xchg
sbb
jne,pn
add
sub
pop
xor
cmp
mov
cmp
mov
imul
decl
bound
sarl
sub
out
sahf
jp
fwait
pop
aam
aam
and
out
pop
call
dec
jne
mov
jmp
jbe
or
xchg
sub
inc
dec
dec
mov
mov
push
jnp
mov
or
inc
lcall
getsec
push
push
popa
jno
pop
std
insl
enter
stos
xchg
mov
pop
test
les
jmp
sbb
dec
or
jmp
xchg
adc
adc
stc
cwtl
mov
int
hlt
ret
and
inc
pushf
popf
xchg
fcmovbe
mov
jmp
mov
out
and
scas
nop
pop
dec
dec
or
mov
or
push
jl
cmp
loope
ljmp
mov
std
inc
jne
mov
sub
ja
pop
into
inc
ficoml
adc
jns
shr
push
sbb
mov
dec
repz
in
and
lahf
in
sbbb
cmc
es
mov
lcall
jae
shll
inc
lods
aad
sti
movsb
cmpsb
pop
pop
mov
jae
mov
mov
pop
jnp
push
ret
loope
lret
sti
fistl
clc
jg
int3
dec
lahf
pop
sub
cmpsl
lock
mov
jg
dec
stos
notl
sarb
push
scas
sub
movsb
daa
adc
dec
inc
cmc
push
rcrl
loopne
cli
fdivrl
sahf
xchg
dec
pop
mov
dec
fstps
sahf
inc
or
jecxz
hlt
push
lds
in
ljmp
xlat
repz
push
mov
sarl
pop
push
sub
inc
jno
pop
cmc
incl
sbb
add
loop
std
cmpsb
popa
push
daa
daa
and
adc
mov
adc
fcomip
sub
or
lock
xor
inc
mov
iret
jmp
jge
incl
int3
push
jno
movsl
pop
daa
sub
push
sub
scas
push
fmulp
call
das
lock
pop
out
mov
adc
jmp
dec
cmc
aad
or
popf
nop
stc
jg
lock
lcall
xlat
inc
shrb
aam
ret
enter
incl
push
lods
gs
mov
xchg
fs
sub
adc
mov
cmpsb
std
mov
mov
cwtl
arpl
aam
into
nop
frstor
loopne
decl
incb
mov
sahf
out
mov
sbb
sarb
popa
push
cli
mov
pop
push
xor
or
stos
call
xor
sahf
icebp
jmp
mov
xchg
pop
ret
xor
pusha
stos
inc
adc
fs
jmp
or
jno
fiaddl
cmpsb
cmp
popa
jle
jae
cwtl
pop
pop
push
jp
icebp
fmul
movsl
jno
jg
jmp
and
je,pt
mov
jmp
or
pop
sarl
arpl
ljmp
cmp
fisttpl
js
mov
mov
mov
xor
lock
ljmp
pop
cmpsb
out
pop
sbb
sbb
xor
inc
dec
inc
movsl
std
sbb
int3
in
nop
filds
dec
out
inc
pop
dec
mov
and
sub
sub
lcall
lods
sbb
inc
pusha
rcl
incl
int3
rcr
or
aas
pop
cmp
xchg
adc
aam
mov
push
mov
sbb
mov
xchg
imul
fidivl
out
sub
mov
incl
mov
fwait
es
repnz
xlat
sbb
xlat
shlb
pop
es
incl
pop
hlt
push
xchg
jecxz
lcall
sahf
arpl
lcall
ss
int3
add
lods
repz
sub
sbbl
ftst
int
out
clc
call
fisubl
push
mov
lods
push
pop
shll
jns
call
xor
divb
mov
xchg
test
fistl
add
dec
scas
adc
test
insb
sarb
es
add
dec
outsb
push
jnp
adc
shl
stos
jb
xchg
lea
aam
jg
cli
adc
pushl
gs
pop
lods
sti
js
push
outsb
xor
enter
pop
mov
add
daa
sbbl
mov
mov
adc
sub
rcll
nop
lock
es
insb
daa
dec
dec
pop
into
std
jp
adc
fdivp
lods
ljmp
pop
mov
insb
ret
fs
inc
and
and
add
das
mov
pusha
int
loop
inc
xchg
or
push
lcall
adc
adcb
lret
sub
in
decl
insl
push
pop
andb
xchg
xor
icebp
jl
fists
sbb
cwtl
mov
sbb
pushl
mov
sub
mov
mov
aad
andl
shll
jns
aad
inc
and
loope
adc
pop
repz
cmp
sub
lret
lahf
push
inc
rol
fcoml
pushl
push
rorb
push
sbb
scas
test
orb
sub
mov
ficomps
cmp
sub
int3
pop
mov
ds
xchg
mov
icebp
lahf
xor
fwait
mov
fs
jmp
adc
stos
sbb
dec
mov
faddl
push
outsl
inc
addb
negb
std
add
push
mov
jo
sahf
rorb
sbb
mov
push
lods
mov
lods
xchg
dec
cmp
jp
jl
mov
fisttpl
and
dec
insb
insb
ljmp
or
arpl
pop
mov
fildll
cltd
or
and
das
cli
cld
sub
jle
and
fildl
cld
loope
sub
adc
and
cld
xor
lods
in
inc
or
dec
test
pop
ret
fldt
add
lcall
adc
out
cld
jl
cmp
jbe
movsb
imul
dec
or
repz
ljmp
loop
mov
or
sub
fcomp
dec
jne
and
xchg
je
cmp
pushl
pop
out
cmovne
pop
rol
scas
mov
lods
lret
out
mov
call
cld
flds
sti
sub
stos
pop
rcr
mov
fists
int
jmp
cli
pop
cmc
outsl
cli
push
fsubrs
xor
data16
icebp
lea
push
mov
inc
pop
popf
lods
test
fwait
daa
loop
push
popa
aad
cmp
imul
fdivr
cli
adc
sub
jmp
inc
js
std
xchg
dec
ficompl
inc
mov
jecxz
insb
inc
shlb
sub
add
scas
xor
push
lods
es
icebp
mov
lcall
mov
insl
jno
cs
sbb
enter
hlt
mov
xchg
addr16
ljmp
add
xchg
sbb
sub
mov
test
sub
mov
lock
loope
icebp
imull
sub
aaa
out
and
iret
std
dec
push
sti
aam
call
mov
adc
mov
je
mov
cltd
lahf
aaa
cmc
cli
aas
push
subb
decl
scas
mov
sbb
icebp
js
lcall
inc
jle
inc
mov
stos
mov
push
jle
sbb
or
adc
int3
sti
decl
jns
scas
paddd
pop
xchg
or
inc
out
cwtl
sbb
paddusw
adc
mov
mov
incl
enter
lret
jmp
orl
mov
pop
ss
adc
sub
mov
sbb
mov
xor
call
and
int3
std
shl
sub
fwait
mov
iret
pushf
and
push
in
stos
outsb
ja
call
or
dec
jae
cmp
out
rclb
scas
cmp
incl
xor
mov
daa
xchg
shl
popf
adc
loope
xchg
mov
pop
aad
mov
mov
dec
mov
adcb
out
out
push
lds
push
inc
jg
mov
cmpsl
push
xchg
push
repnz
cmpsl
clc
sar
fcomip
call
mov
nop
xchg
inc
adc
xor
jle
insb
bound
std
das
cwtl
ret
dec
movsb
jecxz
loope
pop
add
jo
push
mov
jge
data16
cwtl
push
mov
decl
pop
mov
data16
pop
push
mov
cmpsl
xchg
push
or
addb
fdivr
decl
lock
insb
jo
or
mov
dec
xor
xor
ljmp
cmc
popa
js
push
cltd
in
add
pop
stc
gs
aad
scas
repnz
mov
je
repz
std
xor
addr16
rcrb
decl
mov
rcrl
pop
lret
lret
ljmp
jg
adc
popf
cs
adc
jmp
adc
pop
pop
lahf
mov
scas
out
aas
pop
fdivrp
jg
data16
jbe
testb
ljmp
jg
mov
jg
or
xchg
dec
inc
lods
bound
xor
ret
scas
push
shl
call
testl
cli
xor
push
xchg
test
sti
pop
xor
xor
mov
jmp
fcmovu
pusha
les
je
or
dec
and
ljmp
cmc
add
add
outsb
push
daa
inc
dec
mov
setbe
xchg
ret
scas
mov
incl
jmp
inc
sub
and
das
stc
aas
mov
out
or
rclb
sub
xor
sbb
xchg
push
shrb
or
cmc
sbb
jnp
add
ljmp
popf
mov
mov
sbb
and
adc
loope
jb
cmp
xchg
xchg
or
call
sub
jl
iret
ret
lret
insl
xchg
stos
add
ret
loope
mov
xchg
scas
pusha
nop
pop
faddl
incl
sub
ja
test
lret
sub
lcall
cmc
sbbl
mov
mov
cld
push
popf
mov
mov
scas
scas
incl
shrb
push
sbb
imul
push
pop
xchg
ud0
pushl
and
xchg
loop
es
push
in
cmp
push
jmp
sub
incl
jecxz
mov
insb
lret
sub
bound
mov
pop
dec
adc
jns
adc
pushl
prefetcht0
nop
pop
push
jmp
movsl
fs
sbb
std
adc
or
adcb
xchg
mov
add
and
xlat
jecxz
fidivl
loop
out
mov
sbb
cmp
push
mov
dec
outsb
sub
incl
adc
ss
pop
iret
out
mov
scas
in
push
adc
cmpsl
or
xchg
push
shlb
jl
hlt
incl
flds
dec
inc
and
adc
call
out
mov
cmp
sub
pop
outsl
mov
mov
xor
loop
lods
in
pop
bound
xor
rclb
gs
pop
fiadds
std
inc
mov
fadds
rcrb
ss
mov
nop
fbstp
mov
mov
adc
mov
test
mov
test
jecxz
push
sub
sub
xchg
je
clc
lcall
pusha
jecxz
lds
push
push
lahf
mov
mov
or
jecxz
mov
in
movlps
mov
lea
inc
addr16
fisttps
mov
inc
call
sahf
addr16
mov
mov
enter
aam
je
popa
pop
inc
sbb
push
shll
lea
fs
xor
xor
add
mov
and
xor
cld
mov
push
rclb
dec
imull
mov
dec
jae
shlb
sbb
loop
push
xchg
sbb
mov
adc
movaps
pusha
mov
icebp
ret
imul
outsb
pushl
mov
mov
or
jl
popa
or
adc
sub
jg
xchg
mov
stc
xor
mov
leave
shrb
or
lock
and
lea
xchg
push
cmp
and
enter
add
enter
and
jbe
outsl
orl
and
jp
popf
jl
call
xchg
sti
sub
jo
and
xchg
rcll
lcall
dec
adc
xlat
xor
rcrl
lods
cmpsl
push
loop
fbld
add
call
cmp
out
xchg
mov
pop
xchg
pop
cmp
jecxz
fldt
loop
cmc
pop
sbb
out
cli
stc
int3
adc
into
sahf
aad
test
repz
mov
inc
adc
jmp
and
int3
rcl
or
pop
sahf
mov
mov
or
stc
add
incl
je
jmp
pop
test
fistps
mov
pop
mov
stc
xchg
sbb
sbb
out
nop
pop
xchg
xor
lcall
cld
daa
xchg
or
leave
xor
scas
clc
aaa
shlb
inc
xor
pop
in
and
dec
subb
mov
aad
incl
in
aam
or
jl
ret
push
fsubl
iret
icebp
add
outsb
xor
push
cmp
loop
push
out
pop
ret
jb
mov
jmp
or
in
repz
in
xchg
cmp
lock
cmp
aas
xor
and
loopne
mov
outsl
dec
mov
jl
and
lcall
mov
push
lods
push
add
pop
addr16
jbe
jb
stos
dec
pop
or
call
xor
imul
sub
and
push
adc
sar
lcall
adc
imul
push
std
inc
push
cmpl
in
cmpsl
out
dec
cmpsl
jne
cld
out
push
ret
xor
dec
xchg
push
xchg
imul
mov
pushl
jno
inc
mov
adc
xchg
roll
xor
loop
sbb
add
pushl
inc
mov
pop
aaa
push
fs
dec
pushf
in
divl
or
mov
lcall
mov
inc
sarl
aam
outsl
sti
sahf
add
xorl
out
jne
decl
mov
dec
les
loope
mov
cld
push
push
mov
into
and
cmp
ljmp
loope
js
push
in
pop
inc
ret
mov
js
mov
repz
jl
inc
repnz
mov
and
push
add
mov
hlt
mov
sbb
wbinvd
popa
loop
lcall
scas
inc
lds
xor
arpl
sub
mov
add
mov
ret
js
cltd
lcall
add
push
enter
lcall
enterw
icebp
scas
dec
cmp
ljmp
jle
cmp
mov
test
push
adc
pop
cmpl
or
cltd
pushf
arpl
mov
js
iret
repz
decl
int
out
in
dec
in
pop
in
pop
adc
fwait
mov
dec
mov
cmpsl
jae
js
ret
out
clc
dec
sub
jge
dec
std
mov
or
ret
cmp
scas
inc
sub
inc
sbb
xchg
xchg
out
negl
inc
shll
pushf
pop
pop
daa
in
popf
inc
pop
inc
adc
inc
xchg
dec
mov
icebp
sti
mov
lret
xor
mov
incl
cmp
enter
or
dec
sbb
adc
cmp
sub
add
pop
inc
jno
std
sub
call
rcrb
cmp
test
cltd
xchg
jo
sbbb
js
inc
mov
mov
pop
call
jb
push
insl
cs
mov
gs
ljmp
or
sar
mov
lret
ds
jne
fcomps
cmp
adc
inc
movb
and
add
insl
xchg
mov
out
pop
dec
mov
mov
mov
or
jmp
addr16
out
js
add
test
adcl
shll
xchg
loope
jg
js
mov
xchg
push
or
in
xor
shlb
mov
call
fsubrs
loope
out
je
adc
es
push
mov
mov
ficoms
fsubrl
or
fcos
decl
mov
push
dec
jp
inc
cmpsl
imul
cld
xchg
lret
scas
std
cmp
sbbl
dec
xchg
mov
movsb
add
add
sahf
icebp
jo
xor
lea
xor
jg
mov
push
pop
or
ss
push
aaa
push
popa
fmull
jl
mov
decl
pop
jo
push
rorb
dec
lock
call
decl
sub
lcall
add
and
pop
mov
xor
jno
out
dec
xchg
out
pushl
mov
rcl
fwait
repz
js
pop
fstp
lea
or
repnz
jmp
aas
jae
fstpl
lods
fidivs
push
push
popf
jg
movsb
loopne
or
pop
outsl
lcall
incl
push
xor
filds
mov
mov
sbb
adc
cmpsl
mov
mov
incl
push
inc
sbb
mov
imul
fdivl
inc
adc
mov
sub
aad
pop
rclb
xchg
sti
std
fsubp
repz
imul
push
dec
push
mov
rolb
or
pushl
inc
mov
hlt
pop
xchg
jecxz
xor
adc
ljmp
jmp
fisubl
leave
add
lahf
pop
sub
add
xchg
dec
pop
bsf
add
insl
lcall
fcoml
push
test
xor
cmpsb
add
ds
ja
lcall
inc
pop
int
push
into
push
push
lods
or
fwait
andl
insl
mov
ljmp
fdivs
sub
mov
lret
sub
ljmp
or
ss
out
xlat
push
jg
fdivr
push
xchg
popf
mov
adc
pop
loope
dec
mov
pushf
pushf
jmp
movsl
lret
repnz
incl
lcall
add
xor
int3
inc
and
push
loopne
mov
mov
fcomip
call
loop
jno
je
cmp
test
adc
mov
mov
mov
scas
out
aad
or
cwtl
fxch
mov
jmp
push
push
nop
decl
in
jmp
pop
cli
out
decl
in
pop
mov
lds
inc
popa
rcr
push
push
decl
mov
xor
lea
lea
repnz
xlat
bound
xlat
idivl
das
push
mov
adc
mov
test
mov
das
mov
add
or
cld
lcall
iret
push
fsubrs
xor
cmp
les
and
call
cmp
sub
jl
les
popf
bound
dec
inc
sbb
daa
popf
js
dec
fldl
aas
cmpsb
nop
dec
mov
adc
mov
xchg
shr
cmc
inc
ljmp
jmp
sub
jb
mov
mov
push
pop
push
fidivl
dec
xor
lcall
bound
jmp
cwtl
out
mov
das
pop
in
xchg
jno
dec
test
mov
jmp
cmp
adc
leave
sti
dec
mov
les
mov
nop
incl
arpl
cmp
out
adc
sti
cmp
mov
push
and
lcall
fcomp
and
push
in
jnp
xchg
adc
add
shr
call
mov
mov
xor
adc
inc
sbb
and
faddp
jg
call
nop
inc
mov
test
xor
and
or
xorb
call
fldcw
fstps
jae
xchg
add
fdivs
jmp
mov
scas
sub
int3
incl
cmpl
and
aam
popf
loope
pushl
fdivrl
aad
imul
jmp
ret
add
pop
aas
ja
lret
fcmovbe
rorb
decl
xchg
mov
sti
push
jbe
ja
xchg
xor
dec
out
pushl
push
sti
fs
lcall
pop
add
push
add
jbe
push
sti
sub
andl
lcall
and
cmp
adc
adc
xchg
jne
in
dec
sti
dec
inc
mov
sub
mov
mov
pushl
out
out
test
inc
sbb
adc
mull
pop
pop
push
xor
mov
decl
orb
and
test
popf
add
lods
mov
jle
enter
inc
repnz
push
xchg
test
outsl
leave
sub
js
xchg
imul
rorb
jnp
add
mov
das
sar
and
testl
int
sub
test
dec
out
sarl
cmp
and
cmp
dec
pop
inc
in
mov
cltd
and
mov
mov
popa
cmp
pushl
aad
test
stc
xchg
incl
cltd
or
into
aam
push
lcall
repnz
cmpsb
cmp
out
cmp
xor
dec
movsl
inc
stc
and
mov
and
push
xlat
ja
loopne
ret
arpl
pusha
ret
sub
pushl
lods
xchg
pushf
add
rorl
jb
inc
mov
dec
fistpl
movl
dec
decl
popl
or
fsubl
jge
call
sbb
int
sarb
iret
add
ljmp
pushl
pop
outsl
add
push
in
cmp
adc
and
sbb
mov
pop
fcomip
mov
xor
dec
cs
adc
push
mov
push
and
call
std
testb
cmp
mov
mov
or
rcrb
pop
xchg
mov
and
test
jge
jmp
mov
mov
xor
sub
sub
push
aam
mov
test
imul
out
and
jae
pop
les
sahf
mov
add
out
arpl
sar
lcall
adc
mov
and
sub
das
sbb
xor
fwait
setl
jg
imul
leave
ret
add
xor
jp
lods
cwtl
fs
clc
ss
jmp
jo
fisubs
insb
sub
pop
jmp
std
aam
push
testb
pushf
xor
ret
ja
incl
aaa
aad
test
fwait
repz
and
notb
xlat
ljmp
int
lods
mov
ljmp
sbb
dec
dec
mov
push
sub
ffreep
xor
cltd
mov
cmp
inc
pop
nop
push
aam
push
push
xchg
push
fisubs
pushl
adc
fists
movsl
loop
push
adc
pushf
push
ret
aad
push
jmp
cld
decl
and
stc
fistl
and
inc
cmpsb
test
pop
mov
jg
cmp
sub
pop
push
rcl
enter
hlt
inc
mov
enter
lcall
into
or
xor
mov
inc
pop
add
aas
jne
ficoms
gs
das
cli
in
lods
mov
sub
in
mov
cmpl
decl
inc
mov
dec
sti
repnz
ljmp
push
lods
pushl
mov
sbb
sarl
das
lods
mov
mov
pop
mov
pushl
mov
xor
stos
pop
ja
bound
push
mov
lahf
pop
fistps
je
cmp
cmc
jge
arpl
mov
sub
andb
sbb
mov
popf
movsb
xchg
mov
mov
pop
pop
xchg
cmc
add
aaa
push
push
dec
xchg
and
jo
pop
cmpsl
push
xor
add
bnd
fisttpll
push
sub
inc
inc
int3
dec
int3
add
call
mov
rol
out
mov
ljmp
aad
ds
push
iret
fwait
shr
leave
mov
inc
cmp
or
xchg
rolb
cmc
mov
mov
mov
push
dec
mov
dec
popa
inc
mov
int3
ljmp
sbb
add
ss
pusha
aam
push
add
cltd
add
sbb
push
pop
sar
dec
inc
ret
sbb
push
mov
inc
idivb
arpl
inc
cmpsb
cmp
decl
pop
sub
or
xor
lea
mov
jns
dec
jge
xchg
cmp
cmp
mov
cli
ljmp
cwtl
std
into
mov
cmpsl
mov
jmp
lds
lcall
cmpsl
nop
xchg
rorl
adc
mov
mov
data16
test
aad
fcomps
call
test
call
and
notl
mov
in
jl
inc
es
cmc
lods
inc
lcall
in
or
push
fcoms
or
xchg
mov
fidivl
nop
mov
fcmovnbe
xor
les
movsb
push
xorb
jmp
pand
lcall
and
mov
lods
je
in
rclb
mov
es
sbb
pushf
cld
inc
lcall
inc
add
mov
fsubr
dec
lods
incb
mov
int3
icebp
and
lea
shll
movsb
mov
insl
mov
xor
inc
pop
fpatan
fmuls
lods
aaa
push
das
xor
push
shrl
jg
mov
cli
cld
jno
lahf
fists
push
inc
xor
and
jmp
adc
jb
sub
test
stc
adc
pop
sub
sub
es
jb
jmp
cmp
xor
xor
mov
or
add
push
jnp
adc
jne
test
fcos
cmp
cmp
sub
mov
scas
fists
mov
lock
sbb
mull
fcomip
mov
inc
out
inc
pop
push
mov
inc
xchg
jl
adc
loopne
cltd
stos
jae
dec
cmp
pushf
cmp
and
leave
xchg
sub
mov
jg
test
fsubrp
cli
es
push
cmp
inc
ljmp
sahf
add
sbb
pop
xchg
inc
movsb
sbb
inc
push
adc
lahf
in
pop
mov
xor
push
mov
pop
sub
decl
mov
ja
dec
clc
jmp
sub
xchg
in
mov
adcb
adc
xchg
mov
mov
xchg
add
ds
lds
mov
push
fdiv
mov
mov
lcall
mov
fstl
dec
repnz
les
sbb
sbb
push
fldenv
arpl
mov
xor
incl
pop
aam
dec
in
std
pop
pop
shlb
jecxz
inc
inc
mov
sbb
int3
repz
xchg
lea
inc
and
shll
push
jle
mov
add
push
sbb
mov
pop
xchg
cmp
ljmp
adc
xor
mov
sub
add
pop
and
mov
sub
arpl
dec
jne
in
ljmp
scas
jmp
incb
or
mov
inc
mov
jns
sbb
sub
dec
xor
cmp
sub
sbb
mov
test
fistpll
lods
testb
xchg
fwait
mov
repnz
in
mov
les
sbb
jp
fwait
pop
cmpsb
mov
andl
out
fiadds
fs
imul
mov
aam
lcall
fwait
push
sti
mov
jnp
shll
movsl
xchg
mov
lret
dec
mov
jecxz
insl
pop
jg
scas
add
xor
and
jmp
dec
xchg
add
pop
fmuls
pushl
gs
out
cmp
and
aas
mov
setg
or
ljmp
xlat
test
rol
decl
repnz
gs
sbb
xchg
cmp
hlt
lcall
or
nop
push
aas
pop
roll
jg
ljmp
dec
je
jnp
sub
sbbb
sbb
sbb
out
lret
shlb
clc
jnp
adc
cwtl
push
cmpsb
test
jmp
jno
mov
lcall
aad
mov
xchg
pop
xor
cmpsl
ret
cmpsl
jl
sbb
popf
ret
ljmp
cmp
int
lds
shlb
fnsave
js
cld
or
jbe
test
adc
cmp
add
xchg
inc
bound
mov
jmp
cmp
lret
movsb
sub
repnz
or
push
sub
adc
push
jo
sub
inc
push
or
pushl
push
je
dec
inc
and
xlat
aad
cmc
lods
inc
movsl
incl
adc
jl
pop
xor
call
adc
sub
mov
dec
cmp
adc
push
fs
sub
inc
sub
scas
hlt
push
add
inc
test
call
pop
cmp
sbb
xchg
ljmp
adc
decl
ret
mov
cmp
imul
adc
ds
shrb
sub
cwtl
jmp
push
pop
and
mov
add
lea
sahf
mov
lds
lcall
clc
push
sbb
sti
lea
dec
int3
out
movsl
pop
push
pop
jmp
clc
stc
aaa
sub
decl
mov
push
mov
fwait
mov
mov
and
incl
mov
lods
sub
xor
inc
and
adc
xor
loop
scas
push
and
push
cmp
sti
pop
icebp
pop
mov
int
mov
sub
pop
ret
loopne
add
std
mov
sti
out
sti
add
fistpll
or
xchg
push
jmp
cmp
dec
in
xchg
lret
push
out
xchg
pop
outsb
cwtl
xchg
dec
cwtl
sahf
sub
mov
arpl
add
mov
xor
mov
stos
dec
lcall
dec
mov
scas
cli
pushl
and
mov
jl
push
rcr
push
sub
test
mov
int3
jmp
mov
mov
mov
push
jb
xchg
cmp
cltd
pop
fidivrl
rcrb
inc
add
pop
mov
outsl
and
mov
inc
fnstsw
push
icebp
aam
test
jle
cmp
and
enter
sbb
mov
test
or
pop
push
mov
cmp
mov
loopne
mov
sbb
xor
movsb
pop
xor
aas
sub
enter
push
jp
inc
xchg
cmp
repz
or
mov
jle
mov
rorl
cld
shlb
dec
shll
rclb
incl
int
add
jmp
inc
loopne
mov
test
xchg
jmp
or
xchg
stos
movsb
mov
push
out
imul
mov
fbld
outsb
pop
out
insb
aad
or
mov
inc
sbb
cli
sub
mov
or
in
mov
jns
mov
cmpsl
hlt
cwtl
call
into
in
mov
mov
fwait
mov
xlat
sbb
xor
dec
imul
jmp
divb
les
inc
inc
adc
dec
sti
mov
aaa
jbe
and
es
incl
dec
mov
bound
dec
std
mov
inc
pushf
bound
pop
jl
mov
pop
loopne
dec
adc
or
xor
fs
lds
add
cmp
and
je
sbb
cmp
mov
sub
push
cs
incl
xchg
dec
jmp
mov
xor
idiv
jns
xchg
push
pop
and
mov
int3
mov
sar
outsl
xor
xchg
add
mov
push
lods
cmpsb
hlt
jmp
jl
jge
das
clc
jmp
jg
pop
add
jecxz
data16
icebp
ss
je
popa
sarl
test
fiaddl
lods
xchg
cmp
xor
jl
fs
and
jmp
fstl
test
int3
icebp
jbe
xor
inc
or
es
push
lods
sti
inc
cmp
push
pusha
fidivrl
dec
gs
dec
xor
pop
sub
ret
loop
pushl
pop
jae
sub
jo
mov
rcl
jnp
arpl
ljmp
decl
mov
aad
sub
popa
ss
add
lcall
cli
cld
mov
into
test
fneni(8087
sti
xchg
jne
test
fidivrs
lcall
dec
fildl
out
cmp
and
xchg
sti
jecxz
inc
ret
or
lcall
js
xor
cs
shrl
fisttpl
jge
in
rcrb
movsb
fcomip
ljmp
dec
call
dec
or
lret
ljmp
jecxz
sbb
sub
push
xchg
shl
jns
es
adc
andb
dec
adc
cmp
sub
faddl
add
sub
add
push
xlat
mov
or
pop
outsl
sti
fcomip
lcall
mov
stc
mov
jecxz
inc
mov
sarl
rcll
cld
ljmp
xchg
int
mov
or
aad
std
lods
cmp
scas
adc
pop
pop
sbb
call
stc
fmull
fistpl
repz
xchg
inc
dec
mov
filds
adc
std
js
xchg
adc
shlb
cmp
inc
ljmp
push
pop
scas
outsl
repz
xor
roll
mov
jmp
scas
mov
orb
xchg
cmp
lcall
push
mov
add
jo
adc
push
je
mov
cwtl
aaa
rclb
je
addr16
dec
mov
fadd
jge
decl
dec
pop
xchg
sbb
add
push
mov
mov
repz
jmp
cmc
inc
xor
decl
jmp
sbb
pop
loope
pop
insl
mov
into
jmp
loopne
sub
cmp
clc
sbb
jg
mov
mov
mov
ja
push
xchg
xor
and
cmp
jl
data16
mov
lcall
shl
dec
or
movsl
jno
pop
xchg
sbb
ljmp
jge
xor
int3
pop
pop
cmc
inc
rcl
push
xor
hlt
mov
jp
lret
int
pushl
fcomps
mov
js
xchg
xchg
ror
push
aam
fmulp
icebp
gs
dec
cmc
push
push
insb
ret
jmp
lahf
sbb
icebp
inc
fsub
out
sub
and
cmpsb
pop
jl
jmp
out
sti
ja
lcall
pop
push
pop
jmp
jmp
mov
aas
xor
mov
jl
pop
dec
pushl
mov
fcomps
adc
aas
fisubrs
ljmp
inc
jns
add
and
mov
arpl
jmp
cli
in
and
mov
mov
jnp
in
mov
ret
pop
jb
in
pushf
sbb
dec
int
sub
std
jbe
cwtl
sbb
rclb
js
jno
dec
adc
rolb
jge
fbld
lcall
mov
popf
loope
mov
push
xchg
add
adc
cmp
in
cli
test
stc
or
mov
leave
xchg
jmp
xchg
das
sarb
outsl
sub
ljmp
lock
aad
sbb
cld
mulb
pop
das
push
and
fnstcw
and
stos
jecxz
test
mov
sbb
out
jbe
loopne
pop
sbb
push
cmc
out
imul
pop
test
inc
sar
jmp
fidivs
outsb
mov
mov
movsl
mov
ja
sub
fcom
lea
mov
ljmp
push
addr16
bound
mov
stos
inc
push
icebp
and
mov
call
into
and
in
sarb
sub
sub
xchg
mov
movsb
inc
push
inc
popf
pop
xchg
decl
repnz
mov
inc
scas
jecxz
sbb
add
jp
mov
xchg
negl
ficomps
repnz
inc
sti
dec
xor
inc
ja
stos
push
mov
ljmp
xor
add
popf
cltd
push
mov
int
lcall
cld
cli
ret
xchg
wbinvd
cmp
xchg
push
mov
cwtl
xchg
stc
fisubrl
push
outsb
jnp
mov
test
mov
arpl
sbb
icebp
rcr
mov
and
aam
lcall
lret
push
subl
mov
lds
shl
cmpsl
mov
nop
iret
inc
pop
stos
mulb
ljmp
lea
fisttpl
sub
bound
dec
stos
pop
lods
xor
call
jo
in
jge
push
xor
dec
stc
jb
xchg
repnz
aas
lock
xchg
pusha
sbb
mov
xor
ficoml
hlt
xchg
bound
divb
fisubrl
xor
jbe
adc
pushf
mov
cmc
mov
add
decl
jnp
jmp
jl
pushf
nop
push
mov
repnz
push
pop
jae
dec
mov
sahf
clc
fidivrl
in
loopne
ret
push
les
dec
test
test
inc
mov
jmp
push
xor
dec
in
push
jg
ret
rcll
sub
jno
shrl
aad
mov
cmp
mov
enter
test
sbb
mov
jb
xor
sbb
out
ss
lcall
decl
push
lret
cwtl
pop
push
mov
outsl
cld
mov
loopne
lock
xchg
loopne
fimull
popa
popa
inc
insb
nop
mov
mov
lret
push
mov
xchg
frstor
xchg
subl
mov
cmp
mov
jnp
push
jmp
adc
dec
xor
inc
pop
inc
popa
les
xchg
fcmovnb
xchg
mov
jns
cltd
cld
ljmp
std
add
mov
and
out
push
sar
stos
jg
pushl
xchg
in
into
adc
jg
dec
xchg
fs
sub
pop
scas
mov
ljmp
shl
sub
mov
mov
push
cmp
and
bndcl
ja
popf
outsl
addb
ljmp
jno
xor
add
sub
mov
jle
fildl
xchg
cmpsl
subl
jbe
shlb
nop
and
addps
fmuls
cmpsb
add
pop
lahf
out
jp
sbb
pop
cli
daa
test
push
sbb
adc
jmp
ljmp
outsb
dec
jp
xchg
mov
arpl
jno
div
push
mov
sahf
pop
mov
call
hlt
mov
imul
lcall
sbb
mov
mov
add
dec
jb
sub
push
mov
fbld
addr16
xlat
les
aas
add
and
xchg
push
dec
faddl
or
call
inc
cmp
pop
mov
sbb
fistpl
mov
mov
jle
xor
inc
jmp
call
sbb
cmp
stos
jl
mov
pusha
sub
out
dec
xchg
out
dec
aad
decl
push
decw
cli
or
or
mov
clc
adc
repz
mov
jecxz
cmp
and
or
mov
into
mov
mov
lea
jmp
int
stc
mov
mov
dec
stos
xchg
push
rcl
jne
inc
mov
push
stos
cmp
pop
jg
lcall
adc
cmp
xchg
out
jns
xor
jp
mov
pop
incl
cmpsl
adc
shr
push
pushf
data16
push
pop
mov
mov
xchg
jecxz
mov
mov
dec
add
adc
adc
imul
dec
add
lcall
inc
mov
shrl
mov
ret
or
fsubs
subl
cli
test
mov
ret
jle
icebp
in
decl
ret
push
pop
ret
ud2
cmp
add
imul
jge
lahf
inc
pop
jo
and
out
clc
incl
sub
fiaddl
insl
into
add
jns
jb
and
aas
insb
or
decl
mov
xor
out
sbb
popf
imul
sbb
ss
mov
add
js
and
push
jno
mov
mov
sub
cmp
cmpsl
outsl
push
adc
out
jmp
imul
lret
dec
repnz
les
aad
jb
add
sar
call
xchg
jg
adc
add
cmp
ret
push
xchg
mov
cwtl
pop
insl
cmp
clc
sbb
jmp
mov
shl
ficoml
fwait
ljmp
hlt
push
in
adc
and
out
fwait
xchg
lahf
out
xlat
push
add
ret
jmp
pusha
mov
sbb
cmp
jle
mov
push
aam
adc
mov
movsb
adc
fistps
add
mov
mov
les
adcl
mov
sti
out
xor
cmpsl
aam
jne
inc
inc
mov
incl
inc
arpl
xchg
jo
movsb
popf
rorl
mov
shll
lds
add
imul
jmp
loopne
adc
test
arpl
mov
dec
mov
jmp
pop
in
jecxz
jle
test
sahf
jg
pop
daa
cmpsl
cs
into
stos
in
cmp
adc
inc
mov
cmp
ljmp
sahf
int
xchg
stc
xor
push
or
flds
shlb
aam
fs
cmp
sbb
push
mov
cmp
mov
add
fcmovne
pushl
aaa
lods
in
ja
iret
mov
push
test
les
sub
jle
pop
add
decl
shlb
mov
lahf
fs
sbb
mov
push
jle,pt
imul
icebp
inc
mov
int3
jnp
cmp
sbb
mov
std
inc
jmp
out
xlat
adc
jle
gs
rorb
decl
jbe
lds
test
sbb
rcrb
gs
into
in
es
bnd
cmpsb
pushl
mov
mov
clc
lret
outsb
push
mov
ja
jbe
lock
loopne
out
clc
lcall
mov
jle
sbb
cltd
jecxz
and
adc
mov
lock
mov
fistl
or
inc
adcb
jnp
rcll
movsb
clc
lcall
xchg
lret
dec
sbb
lret
lret
test
lahf
jmp
out
enter
mov
mov
push
and
push
cmp
cli
stos
push
aaa
adc
decl
lds
call
mov
call
pushf
cwtl
inc
mulb
pop
sbb
sub
jg
das
outsl
clc
incl
scas
pop
adc
adc
clc
cld
xor
inc
adc
rorl
incl
dec
hlt
adc
inc
xchg
aad
repnz
leave
add
or
jge
xor
incl
push
repz
aaa
xor
andl
mov
sahf
in
lcall
lods
push
jns
call
ret
xchg
lret
cmp
mov
fdivr
mov
stos
lds
dec
or
adc
cmp
lods
outsl
jo
cwtl
loope
xchg
mov
decl
xchg
jae
jo
mov
data16
mov
es
out
xor
dec
adc
aam
xor
sti
cmpsb
lcall
lcall
movsl
adc
adc
lods
orb
loope
mov
inc
loop
ljmp
and
icebp
popa
fldl
or
jg
push
ds
lods
jne
or
pop
or
sbb
subb
fcomps
lahf
ds
mov
loope
ret
pop
mov
mov
add
movsb
popa
es
jo
scas
call
fistl
clc
mul
outsl
jmp
shr
fadd
and
jmp
out
sbb
lret
adc
aam
rcr
jp
aam
mov
in
arpl
lcall
repnz
pop
cmc
sub
and
out
sub
movsl
xchg
pop
out
icebp
mov
ret
sub
clc
mov
xchg
push
inc
xchg
xor
ret
iret
xchg
sbb
or
das
je
test
dec
nop
mov
sub
rcll
ffree
roll
std
adc
or
dec
jae
shrb
sbb
xchg
sub
std
jmp
lcall
stc
inc
cmp
cmc
iret
adc
adc
faddl
int3
loopne
inc
mov
xor
sub
mov
cmpsb
inc
or
pushf
je
lods
fs
jnp
jg
jbe
push
lods
sbb
cs
or
push
jnp
aaa
test
xorl
jmp
mov
push
xchg
or
jecxz
cmp
stc
mov
clc
dec
pop
mov
aaa
repz
call
mov
sub
cmp
fwait
pop
inc
adc
xchg
pop
test
jmp
mov
mov
je
sbb
ror
sub
jl
add
fs
mov
arpl
scas
cli
dec
mov
pop
mov
dec
jb
js
mov
ljmp
adc
cs
xlat
jg
jns
push
out
loope
pop
xchg
pop
js
xchg
inc
lahf
inc
daa
push
ljmp
int
es
test
fisubs
push
sub
call
inc
stos
jae
mov
push
ds
repz
clc
in
lods
jnp
int
push
mov
pop
in
cmp
or
jle
dec
leave
xor
mov
sbb
adc
incl
dec
mov
sbb
mov
mov
mov
pushf
daa
mov
jecxz
mov
addb
fbstp
hlt
pushf
mulb
sub
lret
push
outsl
stos
ret
jne
filds
fdivrs
in
movsl
pop
mov
mov
mov
cmp
ja
jo
out
and
call
mov
jp
mov
lret
adc
les
sbb
xor
stc
sbb
es
xor
cli
and
call
lea
mov
pop
inc
fstp
sbb
mov
lcall
ljmp
xchg
and
mov
sbb
leave
jnp
sbb
shl
pusha
mov
cli
incl
and
sub
or
popf
dec
adc
loope
loop
inc
data16
and
xchg
push
sub
xor
pop
inc
ds
xchg
or
or
dec
or
jg
push
jns
sbb
lea
iret
stos
sbb
or
jl
ljmp
push
push
cmp
mov
mov
mov
sub
mov
xchg
shll
xor
adc
push
cld
mov
lock
push
add
cmp
cmp
aas
adc
mov
jmp
jno
andb
movsl
rol
mov
insl
lock
mov
jl
leave
cmp
cmp
dec
ret
ljmp
iret
flds
sbb
sub
push
push
sbb
in
pop
or
jne
sub
xchg
dec
std
pushf
lcall
aas
mov
cli
ljmp
popa
and
inc
sbb
sub
push
mov
inc
dec
in
jmp
jle
inc
mov
jge
pop
xor
push
jp
dec
call
je
insl
sbb
or
iret
adc
push
dec
sub
es
xor
adc
stos
fldt
cmp
pop
clc
out
push
outsl
stos
lret
out
jge
mov
jle
pusha
imul
mov
pop
out
test
dec
cld
call
push
aaa
jmp
stos
and
rcll
push
insl
pop
shlb
xor
sti
jg
sub
sbbl
sub
xor
int
ds
decl
push
cld
test
or
add
out
divb
decl
pop
mov
cli
mov
mov
or
shl
push
popf
sub
out
sti
out
popf
int
pop
cmp
sbb
push
dec
or
imul
lods
jae
inc
shll
mov
out
ljmp
or
lret
cmp
shlb
cli
in
pop
insl
js
cmp
test
push
call
popf
clc
and
ret
bound
sbb
es
pop
fadd
push
decl
out
loope
xor
call
xchg
adc
mov
or
xchg
lods
sbb
push
push
gs
adc
adc
xor
or
push
lock
das
clc
call
add
test
stc
push
mov
fs
movaps
mov
add
decl
xchg
jns
sub
jno
push
test
shlb
arpl
lea
cli
inc
ret
xor
xor
sbb
call
fwait
fwait
test
pop
jp
pop
xchg
mov
lds
mov
scas
test
andl
nop
scas
sub
pop
data16
sti
jnp
gs
decl
stc
xor
cmp
addb
aaa
inc
sub
jnp
imul
jmp
mov
sbb
test
pop
sbb
subb
lahf
aam
fldl
addr16
inc
mov
sbb
dec
clc
outsb
pop
dec
mov
pop
adc
fs
rcl
add
call
roll
mov
dec
jp
adc
not
or
sbb
movsb
jg
add
push
inc
popf
xlat
sbb
sub
lds
xchg
call
mov
popf
je
movsb
mov
ljmp
dec
gs
ljmp
inc
out
frstor
sbbl
fcoml
enter
call
sub
cld
lcall
movsb
leave
fisubs
adc
cld
dec
jbe
fcoml
in
popa
or
or
mov
cmc
dec
or
cmp
lock
ret
or
das
ds
mov
dec
pop
movsl
stos
mov
lods
ljmp
test
cwtl
xor
mov
mov
add
jge
or
and
lcall
dec
mov
mov
push
iret
out
cs
pop
cmc
lcall
imul
cld
jg
mov
inc
mov
push
rcrb
sarb
pop
in
addr16
decl
rclb
sbbl
inc
es
xchg
add
mov
mov
cmc
decl
mov
push
or
rol
or
xor
incl
and
fstps
ljmp
movsb
movsb
jp
mov
ret
test
inc
out
fucomip
sbb
sbb
in
lcall
push
mov
dec
and
ja
cli
adc
xchg
loopne
push
stos
test
pop
fidivrl
div
scas
mov
or
push
mov
test
addr16
add
jmp
push
les
sub
mov
xor
ret
ljmp
fs
jmp
addr16
js
cmp
gs
movsl
insl
into
lea
xchg
es
push
scas
sbbl
call
cld
fcompl
sub
pop
and
push
cmc
aad
mov
addl
mov
mov
gs
ljmp
adc
lcall
dec
fwait
sbb
pop
sbb
push
imul
mov
fcomip
lcall
cmp
lods
mov
pushf
mov
mov
add
lcall
or
scas
jecxz
leave
add
pusha
mov
shrl
mov
jecxz
add
aam
sbb
idivl
pop
mov
js
xchg
into
in
loop
xor
pop
mov
inc
mov
stc
aam
sub
inc
aas
pop
shll
bnd
nop
xchg
data16
incl
daa
pushf
xchg
sbb
add
inc
push
jmp
loopne
jge
pop
out
mov
push
cld
mov
sub
add
mov
pop
pop
cwtl
sub
pushl
or
mov
lock
rcrl
xchg
sbb
shlb
sub
xor
mov
nop
sar
out
movsb
aas
scas
jle
sarl
mov
xchg
mov
or
ficompl
jge
les
test
or
leave
inc
cmpsl
push
fbstp
fdivrl
xlat
add
pushl
add
sbb
inc
sbb
push
pop
mov
stos
test
cmp
mov
mov
cmc
fwait
ja
popf
je
das
fsubr
mov
fildll
jp
ljmp
mov
cmp
xchg
hlt
sub
daa
add
enter
sbb
outsl
mov
test
popf
call
sbb
cmp
add
stos
jo
int3
mov
loope
or
ds
ljmp
iret
aad
int3
dec
jecxz
pop
mov
dec
lret
xor
lock
pop
mov
jo
aaa
mov
test
mov
iret
cmp
push
das
ret
dec
insb
mov
out
aas
jb
sbb
push
push
std
and
popa
inc
add
test
xor
iret
jle
mov
jmp
sub
mov
inc
cmpsb
xor
xor
adc
inc
push
in
jbe
ljmp
inc
cltd
sub
out
popl
loopne
inc
mov
in
inc
pop
imul
aaa
imul
inc
or
mov
pop
lock
mov
cmc
mov
push
mull
dec
pop
xchg
xor
pop
mov
jmp
stc
mov
mov
outsb
inc
divl
pop
inc
pop
cmp
mov
dec
adc
and
sbb
aaa
lods
enter
in
nop
sbb
add
fwait
fcomip
stos
and
ret
cmpsb
sub
mov
cmc
rcll
nop
push
ss
cwtl
leave
in
mov
shlb
mov
lcall
mov
mov
jg
std
dec
arpl
decl
or
mov
pop
sbb
psubusw
imul
or
orl
aam
divl
scas
jge
roll
out
dec
ffree
lds
mov
xchg
insb
addr16
fidivs
dec
test
addr16
in
pop
rcl
cmc
cmpsl
jle
incb
xchg
mov
jle
stc
inc
nop
jno
jb
push
jb
jbe
fdivp
ret
push
jmp
lock
fwait
jecxz
push
ds
movsl
sub
imul
aam
or
std
pop
mov
mov
mov
inc
add
dec
movsb
out
js
and
fstps
int3
pop
push
push
add
cmp
mov
out
pushl
dec
sbb
out
cmp
xor
insl
mov
pop
aam
xchg
or
sbb
inc
cltd
in
loop
add
inc
iret
fists
fs
fdivrs
clc
lea
jbe
ljmp
and
rorl
out
pushf
das
adc
jne
orl
in
dec
jecxz
mov
adcl
aaa
jg
cld
call
repz
dec
test
out
xchg
or
pop
mov
cli
mov
fsubl
xchg
pop
xor
rcll
mov
inc
sarb
call
push
xchg
inc
pushf
push
inc
in
mov
mov
ljmp
sbb
cmp
les
adc
jl
mov
pop
ss
fxch
and
jg
pop
std
mov
stos
test
sub
lds
stc
daa
sbb
mov
lcall
push
scas
sub
mov
push
nop
ja
xorl
xor
out
or
cltd
mov
in
ja
ret
mov
sbb
inc
testl
cmp
lcall
lcall
stos
ret
push
xchg
in
inc
leave
cli
xor
leave
loop
out
repnz
jbe
shrl
jge
fnstsw
jae
add
inc
add
dec
xor
jle
es
dec
mov
pop
add
decl
in
shlb
fmuls
neg
frstor
jp
dec
mov
adc
sahf
mov
sbb
sahf
repnz
mov
shrl
andb
mov
mov
scas
cmp
lcall
mov
popa
dec
mov
push
sbb
call
jns
out
pop
jb
mov
push
rep
mov
pop
movsb
cmp
outsb
sub
or
lcall
dec
push
xchg
xchg
cmc
jp
sahf
aad
xlat
jne
jnp
out
jo
mov
fbstp
shrl
stos
xchg
cld
je
outsb
dec
mov
in
or
test
cmp
mov
loope
sbb
ljmp
jmp
jle
jl
and
in
mov
fcomip
hlt
xlat
xchg
repnz
out
enter
loop
pusha
sub
xchg
leave
rcr
pushl
fadd
loopne
ret
aad
rcll
mov
aaa
std
jmp
pusha
inc
shll
hlt
mov
ret
mov
nop
xchg
jo
aas
pop
out
stc
inc
into
int
insb
push
inc
clc
xchg
pop
xchg
lret
adc
icebp
lods
call
daa
xchg
pop
fmuls
jae
or
cmp
dec
imul
ja
subb
push
lret
mov
lods
movb
xor
cmp
fbstp
daa
inc
cmovnp
fdivr
cltd
shlb
mov
cmpsb
xchg
mov
fcomip
pop
jecxz
xor
push
inc
xor
sti
mov
repnz
jb
test
mov
xor
pop
push
sub
sahf
int3
mov
mov
jle
incl
addb
jbe
out
jecxz
jecxz
loop
cmp
aas
insb
adc
aam
out
cli
cmpsb
ljmp
xchg
push
lds
add
cmp
cmpsb
incl
push
inc
test
mov
das
arpl
mov
jno
rcrb
cld
js
jne
xor
and
ret
jl
call
add
mov
and
lock
dec
adc
cli
and
ljmp
lret
and
dec
out
pop
cmpsl
cmp
popa
subl
lret
push
jp
in
mov
incl
addb
addr16
jne
das
mov
pop
sub
leave
cli
fsubrs
aaa
push
negb
mov
push
shlb
xor
adc
adcb
popf
sub
out
mov
push
mov
jg
ljmp
mov
push
loopw
loopne
insl
dec
add
mov
addr16
push
orb
sbb
jge
dec
dec
mov
push
and
decl
stos
lcall
ja
inc
shll
cmp
inc
sbb
ficoml
out
mov
popf
rorl
jb
rolb
aam
sub
xchg
sub
push
fldt
jmp
fs
test
adc
push
mov
jns
test
cltd
fs
mov
cltd
decl
add
cmp
pusha
or
pop
shll
lcall
or
xor
pmullw
movl
mov
lret
shrl
insl
mov
lcall
push
cmp
cwtl
push
fwait
addr16
or
or
cmp
push
incl
rorb
mov
xor
jae
inc
icebp
cmc
pop
mov
mov
dec
cmpsb
out
xor
adc
mov
push
mov
cmp
dec
push
incl
sub
fdivrl
sub
adc
jl
pushaw
sahf
loope
call
xchg
jmp
cwtl
movsl
insl
and
inc
icebp
repnz
loope
mov
mov
jno
ljmp
mov
adcl
mov
lahf
push
xchg
xchg
ljmp
scas
mov
in
inc
jns
dec
stc
lret
jp
mov
les
adc
popa
pop
xor
or
stc
inc
stc
sbb
call
xlat
std
in
push
lcall
xor
addps
cmpsl
lods
jns
pusha
cmp
call
rol
push
call
xchg
pop
jl
lock
push
push
int
jbe
add
jmp
cmc
scas
clc
lcall
hlt
inc
xchg
repnz
inc
jle
jno
xchg
lock
add
popf
out
lcall
hlt
decb
loop
movsl
xor
iret
or
cmc
push
aad
pop
xchg
fwait
cmpb
xor
in
pushl
repz
and
pop
stc
xor
mov
int
mul
fadd
sbb
mov
mov
ljmp
cmp
daa
jbe
cwtl
add
sub
cmp
and
hlt
mov
jmp
pop
push
xchg
icebp
mov
test
sbb
mov
pushw
testl
lahf
mov
fdivrl
pop
inc
repz
out
cmp
lahf
dec
rcr
adc
lock
loopne
lcall
pusha
mov
push
adc
scas
das
stos
jne
jl
sbbl
pop
sub
push
leave
in
jmp
jmp
cmp
xor
fisttps
add
pop
xchg
in
mov
adc
test
incl
adc
out
hlt
pop
in
cwtl
sarl
scas
sahf
pop
xor
sahf
icebp
lahf
xchg
jno
and
jmp
mov
jne
adc
jae
push
pop
push
push
aas
shrl
popf
pop
aad
fwait
inc
mov
incl
or
push
sub
sti
orb
or
push
pushl
test
outsl
push
ljmp
mov
sub
pop
test
ficoms
xchg
mov
loope
dec
add
cmp
jmp
xchg
xorb
push
sbb
aam
ds
not
pop
ss
js
mov
dec
imull
pop
push
dec
adc
push
pop
adc
ja
lret
sbb
test
dec
cmp
incl
pop
pop
add
push
fisttps
sarb
mov
jbe
pushl
jmp
jb
out
fbld
mov
cli
stos
push
into
inc
aaa
dec
mov
jmp
mov
enter
sbb
xor
jmp
fdivrp
cmpsb
xchg
mov
popa
or
inc
jge
into
jmp
das
xor
out
hlt
rcr
decl
pop
shrl
push
mov
push
ficompl
dec
xchg
aad
jmp
add
mov
dec
nop
inc
and
cmc
jmp
jbe
adc
ret
data16
dec
fmul
pusha
fsubr
sub
cs
sahf
pop
hlt
adc
xchg
sarl
inc
jp
and
add
incl
sbb
lods
or
shll
insl
push
mov
mov
insb
rorb
leave
je
dec
cmp
or
pop
jne
mov
movsl
jp
push
sub
xchg
daa
xor
decl
xor
jb
pop
sub
push
paddw
push
das
push
sbbb
scas
lea
or
ljmp
les
jecxz
pop
push
aas
push
add
jmp
call
scas
fistps
mov
jle
mov
pushl
iret
shll
push
aad
push
pop
cmp
pop
lret
mov
jbe
sub
loope
lcall
sub
inc
mov
sub
bound
stos
jg
and
int
cwtl
adc
sbb
push
sbb
or
inc
push
enter
mov
xchg
mov
and
sbb
test
pushf
mov
mov
pop
clc
jmp
dec
js
into
or
inc
xchg
mov
jle
data16
call
push
faddl
jmp
mov
mov
xor
out
mov
inc
call
xor
fcoml
mov
and
icebp
sbb
fdivs
aaa
mov
pushl
cmpsl
push
scas
je
scas
jnp
fcomip
sub
sub
or
mov
sub
frndint
icebp
decl
jg
pusha
cmp
enter
mov
popa
cmp
or
xor
filds
test
test
mov
ljmp
dec
fstpl
mov
dec
pusha
inc
dec
incl
cld
xchg
ret
test
int3
dec
cmpsb
mov
sbbl
loop
iret
lret
jl
test
push
jmp
in
dec
shl
xor
fsubp
loope
adc
push
lods
push
jno
jp
jno
add
add
iret
mov
push
pushl
fnstcw
jle
cs
and
push
hlt
pop
fisubs
std
lcall
push
les
jne
movsb
mov
je
test
sbb
outsl
xor
sub
nop
call
lcall
xchg
cmp
iret
cmp
pop
xchg
pop
dec
xor
push
xchg
and
cmp
mov
pop
faddp
jne
cmp
sbb
ja
pushl
jno
pop
cmp
or
add
fxch
jne
jbe
imul
lcall
add
xor
push
cwtl
xchg
shr
push
lahf
popf
dec
mov
insl
out
clc
jmp
xchg
movsb
and
mov
cmp
adcl
jg
mov
mov
mov
loop
jb
stc
cwtl
mov
repnz
mov
call
mov
xchg
mov
jecxz
test
test
ss
in
lcall
decl
fs
push
xchg
jmp
fdivrs
inc
fiaddl
add
incl
test
cmp
pop
stos
inc
adc
sbb
ljmp
or
sbb
inc
pop
scas
mov
mov
out
flds
xchg
out
xchg
repz
ljmp
mov
pop
push
aaa
mov
jbe
jae
pusha
or
rol
das
adc
loop
fldlg2
in
push
decl
push
pop
jmp
nop
cmpsl
add
and
mov
dec
lcall
loopne
cli
jmp
lods
inc
mov
xchg
mov
mov
int
ljmp
sbb
std
adcl
hlt
fsubrs
add
insl
mov
jg
pushl
adc
sub
fsts
mov
inc
push
mov
xor
cwtl
daa
lock
lcall
jne
in
dec
cmpl
cmp
sbb
push
hlt
mov
mov
mov
fsub
xchg
mov
xchg
xchg
loop
or
insb
cmc
push
daa
fisubrl
cmp
jl
mov
push
pop
test
into
rcll
call
dec
ja
push
xor
scas
das
cmp
aam
mov
aam
sti
inc
push
pop
lcall
pushl
insl
cmp
jl
sbb
push
pop
mov
mov
jae
sbb
std
daa
add
sbb
icebp
jmp
mov
cmc
into
mov
or
mov
in
aam
mov
adc
stos
dec
mov
mov
fs
fnstenv
mov
les
imul
jmp
fsubrl
cs
jmp
sbb
lds
jbe
pushf
std
jbe
lcall
jp
xor
js
dec
dec
jbe
dec
dec
or
das
fnsave
dec
jno
dec
pop
lock
pop
add
cmp
mov
pop
mov
aad
out
clc
sbbb
push
cli
adc
repz
lods
jns
xchg
inc
incl
fimull
pop
or
cmc
addr16
and
adc
mov
scas
pop
std
inc
in
push
lock
push
dec
jae
dec
or
cli
pushl
imul
cmp
aad
pusha
pop
nop
sub
std
push
inc
push
sbb
ljmp
cmc
lcall
in
mov
insb
dec
jge
mov
mov
pop
jne
jg
jo
pop
dec
pop
mov
inc
pop
into
and
jl
fidivrl
incl
and
loopne
mov
lahf
pop
test
and
fisttpl
ret
pop
cmp
std
adc
sub
mov
push
aad
cmp
mov
mov
dec
lods
rclb
test
and
pop
or
or
push
cld
daa
mov
jno
push
outsb
movsb
pop
ja
movsb
cmp
jl
stc
add
hlt
in
incl
and
jae
xor
std
xchg
push
out
sbb
add
pop
jl
mov
fcomip
gs
into
xor
pushf
xor
and
pop
pop
mov
imul
decl
xchg
lcall
jnp
mov
lds
es
cmp
cmp
jecxz
incl
adc
jbe
fidivrl
pop
lea
mov
clc
cmp
loop
das
out
cli
push
xchg
ret
incl
rol
mov
add
jb
xorl
push
xor
mov
adc
add
jp
insl
andl
jg
fiadds
imul
inc
out
sbb
loope
cmp
cmpsl
jo
push
sbb
dec
inc
cmp
xchg
int3
decl
xchg
pusha
mov
clc
std
or
fisubl
stos
sbb
int3
sub
pusha
mov
je
mov
and
lahf
cmpsb
adc
jmp
vpcomub
jge
imul
add
xchg
cmp
add
push
jbe
pop
xor
call
push
adc
std
cmp
mov
and
andb
dec
lea
es
aam
sub
ljmp
movsl
mov
call
ljmp
sub
shr
and
incl
mov
leave
cmp
mov
leave
pop
outsb
decl
dec
cmp
mov
ret
xor
aam
repz
pushl
ficompl
ja
mov
xchg
fcmovbe
mov
pop
fisubrs
addl
and
inc
and
jnp
fdivrs
pop
aaa
repnz
call
rcr
repnz
push
pop
mov
pushf
enter
out
xchg
xchg
cmp
and
jmp
aaa
and
sar
movsl
gs
dec
inc
inc
inc
and
loop
jmp
out
pusha
dec
jle
jle
lods
incl
sbb
lods
aad
ljmp
in
xchg
pop
inc
xchg
subl
mov
inc
mov
cld
je
xchg
leave
lods
lret
shlb
sub
mov
inc
and
cmpsb
xchg
xor
call
pop
xlat
jle
lcall
mov
ds
and
jns
scas
adc
cwtl
insb
shrl
cmp
and
pop
call
in
jb
aaa
cmp
push
push
sahf
ret
imul
dec
movsb
test
insl
in
mov
ja
mov
mov
outsl
mov
add
or
test
cmp
jmp
sub
leave
aad
ljmp
mov
sbb
pop
lahf
jmp
sub
in
inc
dec
shrb
xchg
sbb
cmpsl
jae
movsb
xchg
adc
push
pop
and
pop
js
mov
ljmp
cs
test
add
mov
iret
dec
sbb
enter
lret
stos
mov
std
push
neg
sbb
loop
incl
xchg
xorl
sub
rcrb
repnz
cltd
sbb
outsb
insb
call
sub
sub
mov
or
mov
addr16
fstpt
decl
pop
ja
add
dec
xor
mov
inc
lds
test
shlb
daa
dec
inc
and
lcall
dec
addr16
jns
sti
pop
inc
adc
pop
dec
sub
dec
sub
popl
push
inc
add
adc
push
adc
addr16
mov
push
add
cmpsb
fdivr
decl
mov
leave
or
fcoml
in
inc
fwait
or
loopne
add
pop
mov
jmp
inc
or
decl
dec
xchg
cli
sarb
jg
movntq
mov
lods
std
mov
ljmp
cmpsb
ds
in
call
or
cmp
sahf
mov
hlt
repz
lcall
and
ficoms
sub
mov
jbe
mov
decl
xor
jge
and
push
popf
adc
in
push
mov
inc
incl
ljmp
out
test
leave
loope
fsubrl
inc
icebp
ljmp
jle
loope
dec
cld
xorl
push
adc
shll
movsb
cld
fcmovbe
xor
popa
jae
cmp
decl
popa
in
test
push
popf
push
fsts
nop
sub
adc
out
arpl
mov
and
dec
aas
pop
adc
popa
lahf
stos
pushf
and
out
push
lock
push
xchg
push
test
scas
sbb
pop
arpl
fidivrl
add
fcomip
jmp
pop
jno
insb
pop
jne
and
sbb
cmp
and
lcall
pushl
mov
vpminub
imul
movsb
je
arpl
and
incl
sub
add
stc
add
xchg
addr16
loope
push
fsubl
in
vdbpsadbw
mov
jecxz
mov
push
popa
mov
push
xchg
add
hlt
ljmp
inc
lret
mov
loopne
in
jae
cmp
jns
xchg
xlat
jnp
jecxz
nop
push
fisubrs
aam
std
mov
les
pushf
addl
fsubr
sbb
or
outsl
cmc
jne
xor
repz
sbb
or
in
imul
lcall
test
nop
mov
or
mov
aaa
insb
and
std
pushl
das
jg
fisttpll
mov
std
ja
adc
pop
mov
daa
imul
incl
pop
sbb
push
sbb
mov
mov
xorb
lcall
data16
mov
mov
adc
or
push
xchg
xlat
cmp
scas
sub
pop
loopne
call
aaa
mov
push
mov
and
push
jle
std
gs
popf
mov
sbb
jmp
pop
andl
ljmp
scas
or
and
and
jle
mov
in
lods
mov
xchg
xchg
mov
call
sub
aam
ret
jb
leave
push
out
mov
pop
test
dec
add
decl
faddl
inc
rcrb
and
inc
inc
pop
mull
jle,pn
stc
jne
push
jbe
loopne
je
insb
jg
cmp
mov
mov
mov
fidivs
pusha
jbe
incl
arpl
mov
loopne
xor
xor
test
cld
mov
cs
stos
fstps
and
decl
mov
sbb
rolb
out
movsl
inc
sbb
xchg
shl
push
in
ret
repz
incl
and
lods
ss
adc
test
orl
xchg
and
es
call
cli
ja
outsl
in
iret
loope
test
out
inc
sbb
cs
orb
jmp
sahf
icebp
mov
or
pop
jno
inc
hlt
dec
push
fisttps
adc
cli
mov
jno
int
lcall
sbb
add
gs
nop
shrl
push
aas
mov
mov
outsl
push
xchg
daa
incl
pop
jmp
xor
arpl
jmp
stos
sub
insl
push
or
ja
std
push
mov
call
loopne
xchg
jbe
sbb
popf
xchg
push
add
lcall
jmp
jge
int
ja
cmovg
sarl
movsb
ret
call
adc
jmp
dec
add
out
push
outsl
or
jns
cmpl
xchg
jae
cmp
mov
jnp
lea
and
scas
aaa
adc
sub
push
jo
jge
dec
xchg
mov
aas
xor
ja,pt
decl
add
add
push
xchg
jno
fstpl
push
push
xor
pop
sbb
mov
sub
sahf
shl
sub
fucomip
int
lret
xor
xchg
sbb
mov
push
fbstp
ljmp
inc
lret
xorb
push
je
nop
push
sub
push
inc
sub
stc
pushf
shl
pop
mov
inc
adc
fadd
add
int3
dec
dec
sarl
xchg
and
add
mov
inc
push
test
fiaddl
jne
xor
xor
shl
or
dec
jae
call
adcb
mov
cmp
push
inc
lods
imul
sbb
mov
mov
movsb
xlat
ljmp
mov
shrl
xchg
xor
out
test
jg
dec
cmp
dec
jo
mov
or
push
mov
aaa
push
aam
dec
mov
sar
lds
outsb
insl
mov
mov
ljmp
pushf
ljmp
lcall
push
outsb
cmpb
js
ja
mov
pop
push
xor
jp
ljmp
sarb
dec
lds
xchg
iret
xchg
mov
pushl
fnstcw
sbb
mov
ret
mov
push
imulb
xchg
sysenter
mov
ja
mov
add
lcall
test
and
adc
xlat
cmc
test
dec
push
mov
imul
lcall
sbb
enter
mov
jo
cmp
ss
test
and
sub
inc
lcall
movsb
ljmp
cmp
inc
dec
out
mov
cmp
ljmp
xor
divl
dec
sub
ljmp
leave
push
dec
jg
add
hlt
aaa
jl
test
dec
pop
cwtl
fs
ljmp
sub
popa
stos
aas
mov
ret
sbb
inc
les
sahf
mov
cld
jne
cmp
enter
sahf
aas
push
sub
loopne
mov
test
ljmp
sarl
stos
movsb
sbb
je
dec
cmp
repz
mov
sbb
ss
mov
jo
lcall
or
ret
into
mov
or
jmp
mov
lock
jge
jmp
xchg
out
sbb
push
push
push
xchg
jns
adc
inc
and
mov
clc
icebp
cs
clc
call
sub
aam
pop
xor
mov
xor
inc
aaa
xor
ss
ja
clc
cmc
pop
mov
jns
ja
fdiv
mov
ljmp
jge
jmp
push
push
push
jp
add
es
xchg
daa
push
sar
pushl
mov
inc
sbb
das
rcrl
cmp
sahf
imul
mov
add
jmp
inc
cld
je
inc
test
xor
dec
ret
pop
nop
es
out
jg
adc
inc
lods
sub
incl
push
push
jns
in
sti
lret
mov
mov
daa
mov
fwait
in
call
mov
rcrb
ret
adc
jo
mov
xchg
sar
lcall
mov
call
lods
adc
inc
mov
push
hlt
call
cmp
add
push
lahf
test
push
pop
cltd
scas
and
or
dec
les
mov
aas
pushf
dec
stc
icebp
sbb
jge
inc
jmp
sbb
icebp
shlb
cmp
jne
popa
sbbl
inc
add
xchg
xchg
mov
sbb
fs
addl
mov
adc
dec
rcl
or
sbb
incl
int3
fs
add
jno
mov
outsl
pop
insb
rcll
mov
jmp
adc
rclb
jnp
cmpsl
jbe
jo
add
cltd
repnz
ret
or
dec
cmpsl
cmpsl
ficoml
lds
vcvttpd2dqy
jnp
mov
decl
xchg
icebp
or
jno
mov
sub
push
push
shll
cmpsb
mov
push
incl
cmp
in
pop
dec
popa
cmp
jge
lds
movsl
pop
mov
mov
loope
mov
fmull
pop
fsubrp
pop
fbld
rcrw
scas
in
orb
loope
jmp
pushf
movsb
ds
rorl
jge
push
pop
sub
cmp
xor
xor
jmp
sub
stc
add
rcrb
mov
ja
push
cli
rcll
outsl
ficoml
repnz
sbb
push
pop
es
add
pmovmskb
das
mov
sbb
incl
jge
pop
inc
stc
xchg
scas
jle
push
fsubr
pop
je
lret
jnp
cmp
dec
inc
mov
jmp
iret
jp
xchg
push
push
dec
mov
xor
jb
mov
xor
pop
iret
sbb
dec
jecxz
jmp
adc
and
scas
lcall
dec
dec
mov
stc
jecxz
in
scas
mov
in
je
add
adc
dec
popf
inc
pusha
xor
cwtl
pop
scas
cmc
iret
lahf
sub
std
inc
mov
outsb
jmp
stos
add
test
decl
imul
jae
in
cmc
daa
push
sti
repnz
mov
ljmp
sub
cmc
pop
add
cmpsb
mov
mov
sti
push
hlt
insl
std
popa
notl
add
pop
stos
adc
call
nop
xor
pop
gs
push
and
sub
lods
jmp
loope
dec
sub
adc
lcall
pop
push
imul
fstpt
jp
fistpll
lahf
ds
dec
or
mull
pop
mov
cmp
sbb
in
mov
test
sub
adc
leave
xor
movsl
mov
mov
js
sbb
lcall
imul
xchg
push
add
scas
or
sub
into
lahf
popf
cltd
je
pop
add
pop
cmp
lds
dec
shll
mov
fdivrp
jg
pushl
xor
flds
dec
in
bsr
insb
sbb
mov
lcall
shrb
lret
shl
sbb
and
mov
call
sub
fimuls
in
and
call
dec
loop
sub
fildl
ljmp
aas
pop
bound
ret
add
addr16
cmp
and
dec
dec
sbb
jg
jbe
dec
pop
cmpsb
jmp
rcrl
mov
mov
clc
gs
jae
in
and
jmp
mov
out
mov
jmp
fwait
gs
sub
dec
jb
loop
jg
decl
cmc
xlat
aam
cmpsl
mov
push
fadds
iret
cli
cmp
mov
jmp
xchg
incb
jp
inc
sub
jno
les
xchg
jge
in
rcrl
inc
push
mov
push
mov
insb
repz
and
lcall
imul
sub
into
shlb
imul
cmp
mov
in
or
stos
push
xchg
mov
sbb
add
mov
xchg
icebp
cld
adc
decl
ja
lock
sub
push
fmuls
aam
hlt
leave
imul
push
sbb
inc
aam
daa
test
ljmp
std
pop
lahf
and
mov
nop
test
jnp
out
int
mov
jbe
push
insl
bound
mov
inc
pop
test
das
push
mov
cmp
sbb
je
mov
dec
in
pop
imul
jmp
add
loop
std
orl
xchg
into
cs
daa
pushf
add
xor
mov
icebp
out
dec
dec
pop
rcll
adc
cmp
adc
mov
mov
lds
push
or
lds
dec
adcl
decl
fwait
sbb
popf
xor
jmp
jns
lahf
ficomps
mov
incl
add
ja
jne
sub
cmp
ret
outsb
mov
mov
out
pop
xchg
mov
decl
fwait
loopne
jle
inc
mov
hlt
cmpl
inc
gs
inc
icebp
ret
insb
push
mov
mov
push
xor
or
mov
or
mov
or
int3
xchg
mov
cld
and
pushf
imul
dec
add
loope
repz
jnp
pushf
xchg
mov
stos
inc
paddsb
rcl
lcall
jmp
ficompl
jp
lods
jp
push
ss
call
jne
inc
inc
scas
hlt
jle
push
cli
add
mov
sbb
cmp
sbb
or
je
loop
sub
mov
cmp
in
fwait
aad
stos
das
insb
in
jmp
inc
aad
roll
out
cmp
sub
fsub
fistpll
mov
cmp
cld
inc
out
daa
ljmp
mov
pop
ljmp
xor
nop
lock
xchg
dec
dec
adc
jg
lcall
mov
fstl
lods
dec
dec
xchg
fwait
jnp
or
adc
vxorps
lcall
dec
adcl
sbb
sub
in
mov
out
std
dec
cs
fildll
js
clc
scas
pop
lods
cmc
mov
roll
fistps
pusha
xchg
call
shll
mov
jns
push
xchg
add
sub
int3
add
jo
jecxz
sub
pop
cld
call
push
movsb
mov
fcomps
aad
xchg
mov
xchg
pop
adc
pop
das
out
decl
in
cmp
stos
mov
sub
rcll
xchg
jns
mov
roll
out
lcall
fs
or
fisubs
jae
mov
clc
adc
jmp
mov
daa
xor
cmp
xor
in
in
push
shl
aad
mov
mov
aaa
mov
adc
ret
decl
adc
lret
hlt
sbb
popf
andl
xchg
sbb
in
rcl
and
pop
xchg
jne
jb
sub
loopne
mov
adc
test
cli
push
adc
jmp
jbe
add
xchg
pusha
fs
aam
pop
push
cmp
rcr
out
addb
cmp
lcall
cmp
cmc
add
lock
jo
jns
out
cmp
push
fcomp
int
std
add
sbb
pop
call
shrb
ret
mov
mov
inc
cmpsb
fmul
addr16
dec
pop
sbb
xchg
pop
jns
popf
leave
mov
out
sbbl
clc
cwtl
xor
in
and
lret
xchg
pop
push
je
xchg
inc
inc
aad
jg
xchg
mov
mov
clc
pop
das
dec
adc
fsubrl
outsb
ret
call
mov
pop
je
loopne
xchg
jbe
repnz
xlat
inc
mov
fsubl
into
and
aad
ljmp
sbb
sahf
mov
add
bound
or
in
mov
fdivrs
dec
xchg
stos
inc
arpl
test
pop
and
cmp
std
add
ljmp
xchg
inc
mov
repnz
adc
iret
sbb
gs
dec
test
jmp
mov
push
cmp
adc
mov
xchg
cmp
call
loopne
inc
add
out
xchg
sub
outsl
mov
dec
out
scas
std
or
call
popf
shlb
pushf
popa
pop
xor
loop
cmpsl
inc
jnp
lock
aam
movsb
call
imul
xchg
fdivl
and
jp
or
ret
sbb
in
or
stos
bound
call
sub
and
jmp
cmp
jae
xchg
pop
mov
les
fcoml
popa
sub
jg
mov
out
test
mov
xchg
mulb
andb
ds
mov
lcall
adc
adc
loopne
fcoml
jle
sbb
punpcklbw
mov
pop
push
cmc
prefetch
and
sbb
decl
shl
leave
cltd
mov
pusha
pop
add
xor
decb
jmp
scas
imull
pop
pop
jo
int
push
sbb
jbe
outsl
mov
push
push
adc
in
mov
mov
es
in
roll
mov
push
sahf
shlb
addl
call
inc
pop
repz
cmp
sub
push
data16
les
pop
xchg
sbb
cs
sar
pushl
mov
adc
push
xchg
jecxz
adc
jp
out
push
mov
cmp
xchg
imull
or
into
jbe
fidivrl
int
shrl
pushl
push
and
xchg
jg
fucomp
test
sbb
ret
adc
data16
cmp
jge
ljmp
sub
cmp
dec
scas
push
xor
push
imull
mov
lcall
movsb
pop
lret
icebp
cmpsl
sbb
cltd
ss
inc
sub
lods
pop
xchg
pop
lds
jmp
enter
mov
add
outsb
addl
mov
and
or
daa
jns
mov
push
mov
mov
mov
das
daa
adc
xchg
mov
sub
mov
fstpt
mov
xchg
jb
ficoms
bound
adcl
popf
fs
jmp
adc
aas
fdecstp
repz
aaa
fs
push
movsb
jecxz
cmp
xchg
loopne
incl
sub
dec
jg
scas
loopne
cmpl
icebp
int
andl
inc
decl
add
mov
cmp
sbb
mov
pop
mov
push
xlat
lcall
inc
into
lea
add
xor
mov
mov
movsl
jge
scas
jmp
and
lock
xchg
cmpsl
or
call
mov
test
daa
or
mov
pop
test
stos
gs
push
add
pop
decl
push
repz
jmp
fucomip
pop
rcrb
aam
jge
pushl
cmpl
push
insb
nop
sub
ss
mov
stc
call
loope
call
cld
mov
lahf
scas
lds
or
sub
cmpsb
inc
pushf
xlat
sub
pusha
inc
sahf
lret
scas
mov
imul
stos
dec
ljmp
neg
push
add
push
fsub
inc
out
adc
aas
sbb
xchg
mov
decl
or
xlat
inc
cmpsb
add
cmp
xor
fs
loop
aas
sub
lcall
incl
xchg
mov
mov
xchg
or
jecxz
mov
incl
in
mov
rorl
addr16
inc
test
mov
incl
sbb
jo
cwtl
sub
sahf
pop
stos
cmpl
adc
xor
stc
xor
sarl
sbb
lcall
int
or
aam
cli
add
out
sub
jno
mov
mov
inc
xor
mov
jp
mov
incl
in
ret
loope
insb
or
lret
daa
xchg
push
test
push
sub
stos
ret
add
decl
mov
xchg
ds
dec
mov
stc
push
jp
les
xor
jbe
mov
fs
call
xor
fcoms
lods
mov
adc
jo
cltd
inc
roll
push
nop
add
jl
sub
and
sbb
dec
jo
mov
stos
insb
lcall
cmp
pop
mov
incl
out
jle
mov
push
fnstcw
push
jecxz
add
push
repnz
xor
push
fcom
sbb
rcll
lret
adc
lock
push
imul
or
fprem
incl
arpl
pop
mov
cli
pop
adcl
add
push
add
inc
sbb
and
aam
jae
decl
shlb
adc
lahf
lds
in
lcall
cwtl
ljmp
lcall
pop
nop
fistl
sahf
dec
aad
jo
xchg
mov
sbb
push
add
jmp
loopne
inc
je
lods
ja
lock
test
arpl
loopne
insl
ljmp
shlb
in
stc
imul
movsl
movsl
adc
sbb
or
das
cli
nop
ss
or
push
mov
outsl
stos
je
inc
lret
fisttps
and
call
jae
inc
adc
stos
fldt
xchg
movsb
cmp
mov
jp
dec
mov
je
incl
add
outsb
lock
pusha
dec
mov
add
in
inc
dec
cmp
clc
bound
push
pushf
or
mov
push
dec
out
inc
in
icebp
loop
jp
xchg
and
lea
out
in
add
pushl
or
cmp
cli
jns
push
pop
dec
inc
faddl
or
jno
push
mov
sbb
cs
ljmp
clc
enter
test
pop
mov
cld
cmc
jo
popaw
gs
push
lcall
xchg
jle
push
mov
jp
cmp
mov
adc
mov
sub
leave
cmp
mov
ljmp
loope
pop
ja
and
mov
movsb
cltd
mov
cmp
sub
pop
dec
rcrl
jne
and
mov
shll
push
xchg
jg
loopne
cmpsl
sub
jmp
insb
stc
adc
xor
lret
movsl
cmp
jecxz
in
jbe
and
jmp
in
out
fwait
and
push
pop
xchg
mov
push
push
mov
loop
sub
out
cli
pushl
test
test
cwtl
std
add
mov
int3
dec
mov
pop
jp
js
dec
repz
repz
adcb
lds
fdivr
jecxz
aad
jle
jmp
mov
iret
ret
lds
aas
out
ds
jle
xchg
dec
xchg
add
stos
call
add
cltd
sub
jbe
sub
dec
or
int
lds
inc
negl
es
lods
add
pop
out
dec
add
sub
fsts
xor
add
fcomip
mov
pmaxub
mov
stos
fimull
xchg
ljmp
inc
pop
xor
cmp
std
sbbl
sahf
sub
fnstcw
int
or
lahf
stc
test
xchg
cmp
add
popa
mov
adc
clc
shrb
mov
popa
mov
clc
decl
movsb
xchg
jb
xchg
int
js
fwait
pop
nop
fwait
jbe
incl
xchg
mov
add
aad
outsb
jmp
incl
mov
add
adc
xor
add
gs
cmp
shrl
inc
test
adc
cmp
sub
leave
sub
lods
sahf
mov
outsb
push
ljmp
repz
imul
mov
lcall
push
fnsave
arpl
sub
cmp
sub
cmp
jg
push
scas
test
inc
ljmp
sbb
jo
sub
push
xlat
iret
mov
jle
pop
test
repnz
cmp
or
scas
jp
ljmp
lods
adc
cld
ljmp
imul
mull
fsubs
push
and
cmc
adc
out
clc
cmp
push
mov
xchg
in
jo
pushf
and
lods
add
sbb
dec
xchg
jmp
or
idivl
scas
insl
mov
nop
test
test
jae
lcall
je
cmp
sbb
repz
mov
adc
xchg
mov
cmp
add
ja
lcall
jmp
ret
inc
int3
neg
dec
clc
sbb
subb
push
jge
jecxz
lret
pop
or
mov
push
sbb
jmp
dec
lcall
les
jmp
adcl
in
cwtl
mov
pop
test
clc
or
pop
cmc
jns
dec
les
test
or
jle
insb
rcl
sahf
in
lcall
pushl
ficompl
jo
scas
shlb
inc
add
popf
fidivrl
pusha
lods
add
or
jecxz
call
ret
mov
xor
inc
insl
imul
out
scas
mov
adc
jmp
push
jmp
sub
leave
ficoml
push
xlat
cmp
adc
mov
mov
fisttpll
push
roll
mov
movsb
pop
and
inc
hlt
ficomps
lahf
repz
cmp
lcall
decl
aas
adc
clc
sti
out
push
dec
dec
out
mov
pop
js
cmpsb
icebp
mov
adc
in
add
pop
pop
fistps
mov
popa
insb
insl
daa
dec
adc
loopne
aaa
mov
mov
insb
jecxz
mov
sbb
das
jno
dec
and
or
hlt
jle
sarl
sarb
or
jb
pop
mulb
je
adc
subl
fcomip
mov
loopne
jb
cli
imul
sub
add
test
pop
fs
adc
fstpt
inc
cmc
nop
imul
call
cmc
in
outsb
mov
dec
out
test
mov
mov
mov
sar
jmp
pop
repnz
adc
push
pop
aas
mov
jne
call
dec
enter
pushl
out
outsl
inc
dec
jge
cwtl
dec
mov
iret
lods
mov
pop
iret
sbbb
mov
push
aaa
sbb
push
push
cld
ljmp
mov
test
mov
les
cwtl
sahf
sub
sar
outsl
clc
ljmp
movsb
push
push
mov
sahf
cltd
and
loope
mov
ljmp
and
sbb
pminub
stos
popa
xchg
outsl
arpl
xchg
jl
pop
outsb
pop
mov
mov
decl
fdivs
les
pop
es
lahf
xchg
leave
jb
sub
pop
lods
pop
sub
mov
decl
bound
movsb
jp
mov
adc
mov
stos
dec
or
call
lret
push
stos
sub
jns
icebp
pop
add
vpsubw
cltd
inc
in
ljmp
pusha
mov
cmpsl
inc
adc
stos
mov
push
fdivl
inc
test
lcall
inc
addr16
mov
std
out
or
movsl
outsl
fcomip
lcall
mov
inc
push
mov
push
ficoms
int3
push
push
aas
inc
sub
mov
cmpsl
and
jbe
test
leave
mov
push
mov
mov
sub
add
pushf
inc
xchg
loop
push
in
or
call
mov
mov
out
ret
xchg
call
and
decl
adc
push
and
sbb
mov
decl
inc
mov
mov
sbb
in
fldl
movsl
leave
jmp
sti
lcall
push
in
pop
out
adc
cltd
jns
test
pop
cmp
jns
inc
in
rclb
xchg
xchg
in
push
cwtl
in
xchg
xchg
mov
mov
add
aam
out
call
cld
pushl
inc
fists
dec
addb
pop
out
push
pusha
sbb
stc
jo
lcall
dec
dec
lods
pop
add
sbbb
jl
pop
ret
mov
jns
xchg
mov
ljmp
inc
enter
xchg
or
lahf
ret
push
ds
test
or
in
jecxz
cmovne
pop
dec
les
rorl
fs
aas
sahf
jl
push
sbb
in
and
call
test
idivb
scas
inc
aas
mov
xor
push
pop
dec
cmpsb
xchg
lds
decl
jnp
rcll
in
test
adc
outsl
and
cmp
mov
jb
or
roll
jmp
popa
inc
ret
xor
repnz
sbb
adc
pushf
rep
pop
mov
call
out
jge
lods
seta
cli
adc
xor
lods
frstor
incl
jmp
xlat
out
pop
scas
mov
pop
pusha
imul
mov
jo
es
ljmp
aas
or
addr16
sbb
shll
mov
aaa
cmp
ljmp
or
pop
inc
imul
pushf
mov
xor
popl
outsl
mov
jmp
push
in
lea
jl
pop
cmp
sarb
leave
mov
pop
iret
inc
pop
clc
xor
daa
in
insb
sub
std
lcall
xchg
push
stos
cltd
cltd
aad
mov
xchg
dec
ffreep
lods
xchg
cmp
call
test
test
mov
adcl
ljmp
mov
xchg
jnp
fdivs
leave
movsb
scas
dec
movsl
jl
data16
loope
data16
pop
in
mov
pop
mov
mov
xchg
xchg
popa
data16
movhps
aas
cmp
mov
xor
push
mov
fistl
add
adc
fucomip
and
out
cmp
inc
xchg
decl
stos
inc
jno
sub
outsb
rcrl
push
leave
cmp
sub
push
ljmp
ret
dec
mov
test
or
pop
std
sub
fdivrs
ljmp
call
rcll
xchg
push
jns
mov
xor
test
mov
jg
je
aad
in
add
mov
data16
jne
mov
popf
movsb
pop
lahf
lret
stc
or
add
push
icebp
call
rcrl
xor
mov
or
scas
rcll
incl
ss
add
cs
adc
sbb
mov
pop
mov
cmp
sbb
test
mov
adc
mov
xor
das
inc
sti
lods
inc
jle
mov
jg
icebp
jge
push
int3
lea
loop
call
mov
xchg
xor
stc
xchg
insb
mov
nop
xor
mov
and
push
push
rcll
imul
scas
pop
jo
ret
dec
mov
call
std
or
dec
mov
rcll
cwtl
xorl
add
jg,pn
jmp
dec
push
sub
cmp
mov
xor
jmp
lcall
sub
rorb
fldt
outsb
je
ljmpw
aad
mov
repnz
push
add
jne
cmpsl
ss
jecxz
leave
mov
lcall
mov
sub
add
and
mov
mov
out
xchg
lock
mov
popa
mov
and
iret
cld
jg
mov
fisubs
test
fmuls
divl
ljmp
aas
mov
jns
inc
insl
pop
nop
dec
aad
sub
nop
ljmp
pop
sbb
xchg
jge
mov
mov
insl
and
cvtps2pi
lcall
push
and
ljmp
loopw
clc
ja
lret
dec
cmp
jae
push
insb
cmc
or
mov
sub
fcmove
in
push
jb
xor
push
ds
adc
jns
cmp
cld
and
adc
mov
jecxz
fbstp
call
out
or
dec
ret
out
or
test
out
aad
mov
pop
push
xor
xchg
add
incl
nop
shrb
jle
pop
sar
sarl
adc
out
out
jno
into
ret
sbb
push
lahf
dec
stos
dec
je,pt
icebp
lods
dec
jns
repnz
fwait
push
fisubl
fsubrs
imul
hlt
mov
xor
inc
mov
scas
xor
scas
mov
push
xor
cmpsb
leave
jno
jmp
cmp
lahf
pop
test
cmp
push
and
mov
fsubr
jg
jge
adc
popf
incb
cmp
xor
and
jmp
imul
pop
cmpl
dec
mov
and
mul
rcrb
push
aas
rcll
xchg
movsb
xchg
mov
sub
fcomip
push
sahf
ds
push
or
lock
das
mov
aaa
mov
inc
fcmovbe
cmp
push
rcll
pop
mov
into
cmc
pushf
jmp
jle
sbb
lret
mov
mov
xorl
out
decl
arpl
das
das
cmc
xor
scas
xchg
movsb
inc
in
cmove
decl
popa
push
aam
jl
lcall
push
jo
sub
ljmp
inc
mov
xchg
pop
push
adc
outsl
xor
cmp
jbe
cli
incl
adc
xchg
int
ljmp
scas
lods
cmp
gs
add
movsl
lahf
xor
cli
mov
nop
fs
inc
cmp
popa
sub
mov
andb
cmp
out
sahf
jge
fldl
stc
jb
lods
mov
mov
adc
je
and
ljmp
pop
jmp
cs
cli
lret
stc
cltd
or
test
xor
mov
faddl
lcall
in
adc
arpl
pop
scas
sub
mov
in
rcll
push
incl
dec
xor
or
insl
jmp
movsl
stos
inc
mov
mov
and
and
inc
jl
xchg
jmp
fisubrs
xor
push
sub
add
sbb
jge
inc
pushl
ds
pop
inc
ds
inc
negb
cmpb
cli
dec
push
lods
inc
pop
int3
jmp
incl
imul
inc
cmp
ss
dec
and
mov
add
cli
xor
incl
das
mov
push
adc
stos
clc
jo
mov
daa
dec
sbb
sar
pushl
cwtl
into
test
nop
xchg
mov
lret
jmp
stos
mov
sbb
incl
jg
fs
mov
stos
in
jnp
add
iret
dec
and
push
scas
addl
sahf
iret
xchg
sbb
pop
jl
outsb
and
adc
cwtl
dec
dec
mov
repz
dec
jne
jns
mov
xchg
sub
shr
inc
push
mov
lcall
fcmovbe
lods
inc
or
aad
out
sub
add
arpl
gs
int3
ljmp
adc
decl
pop
add
lock
xor
dec
xor
lods
jmp
dec
sbb
xchg
push
mov
sub
clc
mov
mov
push
and
mov
arpl
jns
gs
call
sti
je
mov
mov
loope
loopne
loopne
lcall
test
add
das
or
push
pushl
aam
je
mov
mov
lret
xlat
jp
rol
testb
mov
pushl
push
sub
mov
lret
push
dec
push
inc
dec
fisubs
and
mov
incl
or
mov
popf
jecxz
js
add
pop
fwait
in
mov
imul
pusha
call
in
sub
pushf
inc
lahf
push
ljmp
popa
pop
pop
jo
xchg
ror
mov
jg
jmp
out
pop
sbb
sbb
nop
jp
jae
call
outsb
add
xlat
cmpsl
fs
cmp
es
xchg
xor
pop
lret
lea
sbb
scas
jo
decl
mov
dec
scas
push
cmp
cmp
xor
add
sub
inc
xchg
cmp
jge
sbb
test
fstpl
sti
cmp
negl
faddl
lret
aad
jb
pop
add
lock
loopne
daa
rolb
xchg
pop
out
ret
cli
xor
mov
xor
and
xor
xchg
int3
xor
outsl
pushl
sbbl
xchg
dec
cs
lcall
shll
sbb
sti
jg
xor
fwait
sub
out
divb
mov
lcall
mov
sub
cmp
push
enter
ficomps
add
lret
mov
inc
mov
test
mov
test
add
decl
sbb
adc
cmp
scas
add
loopne
sbb
mov
jmp
mov
mov
out
push
shll
lock
jnp
push
popa
mov
subb
pop
gs
decl
fldl2e
ljmp
dec
shl
dec
test
hlt
call
pushl
sbbl
sbb
scas
adc
sbb
test
aas
add
xchg
or
rorl
inc
movsl
add
rcrl
xchg
loopne
int
add
adc
jo
das
sarb
cmp
push
out
mov
sbb
iret
hlt
incl
es
or
pop
adc
jecxz,pt
dec
dec
insl
dec
mov
in
pop
loopne
dec
and
cltd
mov
iret
or
loopne
mov
ljmp
inc
stos
mov
call
int
test
mov
mov
mov
mov
call
lea
mov
jl
pop
mov
mov
jg
cld
mov
pushl
xor
inc
push
push
mov
or
sub
filds
add
cmp
mov
fsubr
arpl
jle
aad
inc
lret
xadd
adc
ljmp
outsb
cmp
sub
nop
jb
or
mov
aaa
out
inc
int
xchg
inc
mov
out
dec
test
into
push
or
je
ja
xor
fbld
pop
cmpsb
test
sbb
sarl
inc
addr16
pushf
in
xor
or
ljmp
arpl
adc
js
xchg
data16
lock
inc
inc
aad
in
mov
lods
icebp
dec
cmp
rcll
mov
mov
mov
dec
mov
stos
out
enter
push
xchg
xor
push
jecxz
clc
mov
pop
std
mov
jmp
jns
aaa
aaa
jmp
popw
adc
and
pushl
ljmp
adc
xchg
sbb
test
rclb
xchg
xchg
repnz
jae
inc
adc
mov
push
loop
lods
inc
dec
pop
mov
sarb
pop
push
dec
lcall
cmp
das
daa
stos
xchg
loop
ret
in
xchg
inc
xor
dec
cmp
sbb
loopne
and
inc
push
clc
call
pop
loopne
mov
fimuls
and
xchg
aam
into
cs
dec
sar
jmp
mov
cmp
daa
sub
ja
pop
sbb
rclb
call
leave
jl
sub
jns
leave
scas
data16
imul
incl
insl
arpl
sbb
jmp
ljmp
scas
fisttpll
mov
mov
and
push
cmpsb
dec
push
and
dec
inc
dec
jno
lea
push
mov
scas
mov
cmp
ss
inc
jb
decl
sub
test
dec
shrb
imul
xchg
test
ret
cli
mov
jg
jmp
in
cmp
or
jle
sbb
mov
aaa
pop
push
push
into
sbb
cs
lcall
pop
sub
xor
mov
cmc
adc
pop
test
sti
jo
dec
xorb
add
lcall
jmp
inc
aam
adc
push
and
adc
in
inc
stc
jg
xor
push
adc
pushl
jg
andl
aaa
and
push
cmp
lods
dec
scas
mov
rcrb
ljmp
rcr
out
pushf
pushf
adc
popa
daa
fcomi
das
cltd
xchg
and
dec
test
adc
andl
jle
sub
jns
mov
aam
lock
lods
xchg
mul
hlt
pop
call
cs
push
push
xchg
jne
lock
mov
add
jg
mov
lock
lcall
or
push
repnz
scas
cmpb
mov
xchg
adc
into
lcall
addb
out
and
pop
sbb
or
loope
inc
fucomi
mov
out
mov
shll
jmp
fs
idiv
pop
jmp
push
mov
mov
sbb
cld
jmp
lock
jno
in
inc
mov
lods
scas
test
xchg
stc
cmpl
dec
xchg
shl
xor
scas
dec
cmpsl
mov
dec
stos
fisubrl
sub
jbe
pop
jno
iret
sub
aas
jl
mov
mov
jmp
xchg
adc
add
out
sbb
es
dec
jmp
call
ret
decl
stos
aam
outsl
cmpsb
loopne
jmp
or
sub
adc
repz
mov
icebp
clc
push
pushf
pop
jecxz
pushl
or
ret
pusha
xor
ret
stos
int3
addr16
lahf
mov
and
cmp
outsl
stos
mov
loopne
out
pop
add
pop
inc
xchg
cs
push
xor
inc
pop
icebp
lcall
popa
pop
or
pushf
mov
pop
jg
ja
cmc
xor
xchg
xor
pop
fs
sar
jo
push
mov
push
mov
les
repz
jle
push
lcall
add
loopne
cli
push
cmc
jo
push
cmp
lret
pop
or
lods
xchg
filds
mov
push
lret
sbb
in
test
mov
mov
jg
pushl
xlat
inc
out
lret
loopne
cltd
push
pop
insb
icebp
repnz
mov
mov
lcall
sub
fdivr
push
sbb
push
subb
jge
decl
push
aam
and
add
mov
dec
rcll
mov
push
pushf
push
mov
jg
ret
out
inc
push
xchg
push
push
nop
in
cli
lahf
and
daa
push
sub
decl
lret
jno
lds
push
push
cltd
mov
mov
adc
ficoml
addb
decl
flds
xor
clc
shld
lock
mov
xchg
mov
mov
jecxz
incl
pop
cmp
mov
outsl
fcoms
sub
dec
cmp
lret
insb
addl
loope
xor
js
mov
cmpsb
stos
jo
cmp
lods
jge
cmpsb
loope
adc
pop
popa
jecxz
jg
add
push
ret
es
daa
sbbb
add
fdivr
pop
aam
lret
or
sbb
jne
ljmp
jno
pop
pop
jae
std
in
imulb
imul
jle
out
ja
daa
adc
loopne
jle
call
in
shl
shlb
sti
mov
jno
int3
cmpsl
jb
or
xlat
push
insl
loopne
mov
xor
sbb
idiv
adc
cld
ljmp
cmc
out
cmpsb
je
pop
pop
fisttps
decl
into
adc
pop
ja
nop
daa
cmp
mov
dec
ret
xchg
sub
std
push
nop
arpl
mov
decl
jb
mov
je
pop
cwtl
sti
push
out
mov
xchg
mov
dec
mov
inc
cli
dec
sbb
pop
and
clc
push
fcomip
pop
movsb
push
pop
push
lcall
add
dec
sub
loope
inc
xor
lcall
push
sahf
xchg
push
cmp
in
sbb
fdivrp
xchg
stos
dec
push
ds
push
mov
pop
insb
adc
xchg
shll
iret
jne
pop
sti
add
daa
movsb
ljmp
imul
inc
ficomps
dec
dec
inc
iret
rolb
xchg
ficomps
jmp
out
dec
sahf
dec
mov
xchg
aas
lret
pop
stc
sbb
sbb
sub
add
add
pop
lods
or
iret
aad
mov
aaa
jnp
popf
fcomip
call
mov
mov
stc
jb
mov
push
xorb
and
mov
jmp
call
into
outsb
out
mull
xchg
jnp
jns
mov
inc
pop
imul
jns
and
jmp
inc
test
in
sub
in
jae
lcall
mov
movsl
fsubrl
dec
lock
lret
pop
jmp
lds
sub
lahf
sti
xor
loope
fnstsw
cld
cmc
cmpsl
fnstsw
xchg
mov
cmp
rcrb
js
cmp
dec
or
inc
andl
imul
incl
lret
pop
sbb
lret
xchg
sbb
mov
hlt
or
pushl
xchg
jne
ret
adc
popf
cmpl
movsl
jmp
xor
mov
repz
jmp
cmp
jnp
cltd
out
push
mov
cmp
scas
outsl
cli
lcall
arpl
aas
add
xchg
ljmp
das
clc
cmc
nop
sbb
cld
lods
test
mov
inc
and
fldenv
jnp
mov
adc
inc
dec
sub
stos
rcrl
pop
mul
jb
insl
mov
xor
mov
divl
decl
movsl
pop
outsl
push
inc
mov
push
mov
sar
sub
call
inc
sub
pop
ljmp
faddl
dec
daa
je
decb
dec
sbb
push
inc
mov
mov
inc
add
gs
aaa
gs
fnsetpm(287
cmpsl
mov
mov
ret
fistps
xchg
enter
sbb
test
pop
test
fisubrl
leave
imul
sbb
fcompl
clc
sub
sbb
mov
aam
inc
addl
push
sbb
jne
call
dec
jbe
pop
cmp
sbb
cli
dec
cli
lret
and
arpl
stos
lcall
scas
cmp
push
aam
jns
fdivs
dec
add
lods
push
xchg
add
jmp
jle
add
or
cmp
fsubr
movsb
lret
cmp
in
stos
push
cmp
movb
mov
or
jmp
cmp
inc
pop
lcall
aam
js
andl
inc
pop
jmp
xor
ljmp
sub
push
mov
jmp
mov
and
les
aam
pop
pop
sarb
fwait
xchg
ljmp
mov
mov
lahf
fdivrs
pop
push
mov
decb
push
cli
pop
fcomip
incl
in
jp
sbb
frndint
or
push
add
push
add
or
lcall
out
jp
and
adc
and
jne
jmp
iret
push
push
inc
inc
lock
xor
sarb
xor
cmpsb
adc
mov
pop
repnz
in
ss
testb
daa
iret
sub
sub
cld
mov
adc
mov
das
fwait
je
out
xchg
mov
popa
fwait
push
cmc
push
xchg
sbbl
jnp
sub
clc
mov
or
pop
fs
inc
decl
test
pop
dec
cld
incl
fdivrs
aam
push
ficomps
roll
ljmp
inc
mov
loope
jp
fimuls
xchg
out
pop
jb
mov
aam
push
cld
dec
into
loope
arpl
mov
loop
popa
cli
hlt
dec
enter
aaa
push
xchg
gs
jp
incl
xor
scas
adc
incl
xchg
mov
lcall
aaa
into
call
call
cmc
iret
cld
cld
loop
inc
jl
int3
mov
fstl
xor
xchg
dec
rorl
pop
lods
xor
xchg
or
mov
push
sub
in
lahf
fiaddl
mov
dec
mov
not
xchg
push
adc
dec
shll
push
mov
jmp
aad
lcall
scas
fbld
jp
sbb
sbb
fbstp
or
cld
ljmp
mov
int3
xor
movsb
mov
adc
pop
xor
lret
fdivl
mov
inc
pushl
and
popf
and
inc
mov
and
sub
test
sahf
out
stos
sub
inc
lcall
mov
pop
mov
lea
rorl
jb
adc
enter
mov
ljmp
arpl
xchg
fdivr
popa
pop
mov
sbb
loope
call
dec
cmp
movsb
cmp
cli
int3
clc
lods
adc
mov
lret
mov
lods
jl
pop
call
ret
sub
insb
in
mov
inc
xor
ss
dec
popa
sar
ja
jg
inc
adc
add
hlt
sbb
es
dec
mov
mov
jle
adc
sbb
push
lret
inc
pop
sbbl
dec
inc
sbb
push
paddusb
lcall
ljmp
push
shlb
inc
push
lahf
push
in
sub
lcall
mov
push
popa
sbb
lret
jge
ret
lahf
lea
jle
adc
in
adc
xor
sub
int3
inc
in
and
shll
mov
pop
sti
jge
dec
ret
pop
aam
or
dec
mov
lods
fbstp
push
push
outsb
jmp
lcall
mov
and
cmp
jae
cltd
push
icebp
mov
push
test
add
dec
call
rorl
test
sbb
pop
xor
ds
fnsave
jmp
fdivrl
mov
xchg
dec
out
rorb
gs
dec
xor
lock
decl
jo
js
cltd
loope
or
icebp
orl
cmp
inc
mov
movsb
test
and
add
mov
aaa
xchg
out
mov
add
repz
mov
div
xlat
jmp
pop
fldt
cld
add
fwait
imul
jl
cmp
pop
cmp
jne
pusha
xor
or
mov
or
scas
std
mov
subl
ja
jg
cmp
in
pop
aam
in
ja
call
je
mulb
and
mov
jbe
xor
ljmp
jae
pop
repz
adc
leave
pop
dec
or
xlat
inc
pop
push
test
pop
mov
decl
movsl
sub
mov
arpl
stos
stos
cmp
popa
jnp
movsb
mov
cmpsb
pushl
daa
cwtl
scas
jl
xchg
popf
in
fadds
xchg
xchg
clc
cmpb
jg
scas
out
test
mov
xchg
in
fistpl
stos
xchg
int3
sub
jnp
call
inc
cmc
jle
xchg
in
mov
adc
fimuls
stos
cltd
mov
scas
pop
in
daa
movsb
lcall
enter
cwtl
aas
sub
add
ja
sti
xchg
sub
mov
mov
pushl
and
aas
pop
fldl
scas
bound
jl
test
mov
inc
mov
test
inc
inc
jnp
and
leave
adc
mov
fadd
cs
das
jbe
and
outsb
mov
pop
stos
mov
add
inc
jns
gs
jne
cwtl
sub
push
hlt
repz
cmpsl
ds
sub
adc
jbe
push
lahf
imul
inc
adc
fdivp
pop
scas
push
lods
or
xor
jle
movsb
add
jmp
gs
mov
xchg
xchg
mov
and
int3
xchg
enter
xor
incl
mov
sbb
adc
lahf
out
jge
mov
add
push
out
and
jecxz
ja
mov
add
ljmp
rcll
cwtl
push
push
das
xlat
fcomp
push
or
out
mov
lock
xchg
xchg
push
dec
push
xchg
cltd
push
xor
lcall
arpl
mov
mov
loop
iret
jo
js
mov
int
and
fistpl
cli
mov
rorl
pop
mov
or
xor
scas
int3
jl
jae
call
sbb
inc
mov
dec
dec
push
mov
add
mov
das
clc
aas
in
fmuls
adc
sarl
sbb
loopne
xchg
add
std
jg
pop
mov
xchg
loope
repnz
dec
sbb
test
and
lahf
jns
jle
mov
popa
lds
test
ret
mov
inc
mov
int
dec
mov
int
in
incl
divb
shlb
sub
push
inc
mov
dec
sti
out
fsubl
jmp
call
je
jmp
loopne
inc
inc
fidivrs
xchg
jp
pop
lods
inc
ljmp
push
jbe
arpl
push
fcoms
or
stc
xlat
je
mov
pop
cs
or
les
pop
sbbl
scas
cmpsl
mov
sbb
es
push
inc
shl
scas
pop
sbb
scas
call
sbb
les
mov
aad
sbb
inc
in
in
xchg
pop
pushf
push
pop
ret
in
fcomps
xor
inc
mov
jmp
push
int
pop
add
adc
xor
loop
push
and
decl
xchg
jl
sub
mov
push
repnz
test
mov
out
loopne
pop
in
lods
xchg
pushl
lcall
faddl
stos
sub
cwtl
in
jo
repnz
or
pop
jne
sub
jmp
nop
mov
xchg
out
loop
jl
xchg
lock
pusha
ficoml
push
ljmp
mov
stos
pop
jg
lcall
mov
call
lods
inc
mov
jp
in
cmp
cmp
clc
jno
test
cld
inc
lods
adc
jg
daa
xchg
mov
dec
insl
arpl
lcall
inc
popa
aam
jecxz
jg
sbb
xchg
push
lcall
mov
add
cmp
pushf
dec
push
ljmp
mov
lock
mov
and
outsl
addb
imul
jnp
mov
xor
clc
and
ret
cli
test
pusha
jmp
in
push
loope
aaa
fsqrt
decl
pop
es
into
aaa
cmp
decl
adc
inc
push
push
out
push
adc
aaa
sub
incl
xchg
mov
pop
jbe
fnstcw
outsb
dec
sti
inc
fs
xchg
orl
mov
sub
jg
sbb
pop
movsb
cmpsb
test
decb
dec
and
pop
sbb
jmp
jnp
ret
mov
inc
ret
lret
mov
lcall
lods
cmp
mov
jg
std
je
adc
sahf
stos
or
aaa
xchg
inc
mov
shl
mov
int3
fs
call
aam
scas
mov
imull
js
mov
xchg
cmp
jg
inc
lret
mov
lcall
loope
movsb
mov
stos
aad
emms
cs
ljmp
adc
jo
pop
ljmp
and
push
sub
pop
dec
ret
leave
outsl
mov
mov
cmp
or
inc
shll
cli
sti
jb
jg
call
pop
fdivp
arpl
arpl
das
xchg
aam
out
out
scas
or
jl
and
idivl
loopne
cmpsb
xchg
adc
push
and
and
sti
iret
out
clc
incl
inc
push
jae
dec
dec
mov
fwait
cmpsl
jp
and
repz
add
mov
fidivrs
adc
decl
mov
mov
loopne
rol
push
pop
xor
int
xorb
dec
js
das
icebp
stos
in
sbb
cmp
bound
pop
dec
shlb
cmp
inc
xchg
mov
xlat
adc
inc
cmp
xchg
orl
lcall
call
sbb
push
es
push
ljmp
pop
push
pop
pop
cmc
das
rclb
fwait
test
incb
aas
mov
jle
jle
pop
xchg
cmpsb
iret
xor
insb
mov
pushf
mov
hlt
adc
ljmp
push
subl
sbb
inc
cs
jmp
or
loopne
mov
cwtl
dec
subl
push
ret
jg
cs
mov
xchg
jo
lods
mov
insb
ss
xchg
and
pop
fcompl
out
sarb
cmc
decl
insl
mov
or
add
dec
ljmp
xchg
cmc
out
movsb
mov
lods
mov
cli
jne
push
cmp
or
loopne
pusha
adc
adc
jmp
leave
jg
jge
mov
xchg
or
add
out
pop
pop
in
mov
ljmp
call
adc
and
jg
aam
or
jns
cmc
pop
and
adc
in
in
in
mov
in
hlt
jo
fwait
cmp
setns
pop
rcll
jp
mov
movsb
ds
inc
jno
xor
or
dec
mov
in
sahf
xor
push
test
mov
dec
leave
cmp
call
cmpsb
orl
adc
lret
aaa
dec
push
lock
dec
pusha
inc
add
fcompl
popf
mov
push
cld
jmp
ja
mov
mov
mov
and
incl
jmp
nop
adc
in
lds
fnstsw
sbb
adc
cmp
mov
insb
or
cmpl
ljmp
pop
into
xchg
ljmp
add
sarb
out
mov
in
popa
pop
cmp
pushl
enter
aam
rep
pop
and
xor
call
or
pop
sbb
jmp
jge
xor
insb
jle
rorb
scas
xor
sbb
ds
jp
jp
push
mov
xchg
fwait
stos
bts
lcall
inc
pushf
lcall
cmc
lods
push
inc
stos
sarl
mov
dec
pop
pop
in
xlat
mov
mov
mov
mov
data16
xchg
mull
push
popa
test
fldcw
adc
ja
cwtl
pop
daa
scas
mov
loop
ljmp
dec
adc
sbb
sahf
mov
adc
lock
into
jp
push
call
std
mov
test
mov
mov
mov
lods
insb
xchg
imul
xchg
jmp
addr16
movsl
push
jle
dec
adc
jne
loopne
mov
cmpsb
imul
lock
and
pop
cmpsl
xor
mov
shrb
mov
sbb
jle
mov
inc
movsb
filds
sbb
and
sbb
jecxz
popa
xchg
xchg
xchg
mov
pop
ljmp
pop
or
lahf
mov
mov
inc
cmc
jne
mov
outsl
adc
push
decl
minps
jne
jmp
pusha
fstpl
mov
pushf
mov
cmp
inc
pop
mov
decl
aam
xchg
das
mov
out
stc
push
sub
lock
jo
pop
jbe
arpl
lock
mov
test
push
or
jl
inc
and
or
push
lcall
int3
into
cwtl
std
jl
mov
call
out
jecxz
cmpsb
lods
cwtl
dec
cltd
loopne
ljmp
xor
mov
mov
add
test
jmp
lahf
aas
sahf
xor
mov
sahf
jge
cmc
test
sbbl
ljmp
jmp
loopne
outsl
xor
mov
dec
mov
ror
cmp
sub
call
lret
add
rcl
cli
sbb
cwtl
loopne
or
and
sbb
ret
aaa
cld
loope
mov
fwait
mov
add
xlat
test
sbb
sbb
jg
xchg
cs
jl
pop
aad
inc
mov
xchg
cmp
lcall
xchg
shl
lcall
orb
insb
xchg
fisttpll
dec
fcomip
call
clc
cld
mov
movsl
sbb
xchg
scas
xor
daa
test
loop
fdivp
push
fnstcw
push
and
dec
fisubrs
add
cmp
mov
stos
cmp
repz
push
pop
inc
test
fbstp
cmp
dec
movsl
fisubrs
mov
xchg
call
mov
out
jmp
mov
and
movsl
pop
jnp
xlat
repz
mov
sub
dec
test
pop
fdivrl
imul
in
or
push
sub
push
loope
or
daa
cmp
cmp
sub
sbbb
dec
aaa
jno
rcrl
mov
outsl
dec
lods
fnstcw
or
adc
pop
fwait
lcall
jle
push
popf
push
dec
or
pop
loop
sbb
mov
sti
pushl
movsb
iret
out
leave
loopne
mov
popa
rcr
loop
cmp
outsl
inc
xor
cmc
incl
in
sbb
inc
jle
arpl
xor
pushl
fdivrs
imul
enter
fcomip
push
or
dec
mov
jae
xlat
js
test
push
cmpsb
xor
pushl
xchg
mov
adc
inc
sub
call
sub
imul
decl
ja
mov
mov
rcr
lret
pop
and
scas
sbb
incl
push
push
es
push
daa
aad
mov
rclb
icebp
clc
pushf
cwtl
sub
or
stos
popa
shll
fadds
decl
pusha
mov
mov
jb
pop
pop
push
mov
lcall
iret
arpl
test
add
call
xlat
sub
and
scas
add
inc
call
sti
popa
cmc
loopne
push
fnstenv
push
imul
negl
push
das
into
sub
decl
lock
cld
shll
xlat
in
adc
xchg
out
jmp
decl
pop
adc
inc
arpl
sti
add
add
or
loopne
inc
cld
insb
fnstcw
insl
cmp
jb
mov
lret
mov
pusha
and
jb
sahf
ljmp
fwait
sub
mov
testb
fsubs
jge
mov
inc
push
xchg
loop
sbb
inc
lcall
enter
lcall
fisttpll
mov
ret
jl
bound
out
sahf
push
mov
imul
mov
cmp
idiv
lcall
pushf
or
popa
loope
dec
pop
dec
lea
or
add
inc
incl
out
push
mov
popa
fsub
enter
mov
int
and
and
in
decl
xchg
loop
ljmp
cmp
dec
inc
push
add
add
lcall
and
outsl
mov
mov
mov
mov
mov
in
dec
mov
ljmp
cli
jmp
sub
cmp
push
xchg
mov
inc
fstps
testl
lock
push
cltd
shlb
xchg
lcall
shrb
es
jnp
jg
movsb
out
rcr
fwait
jb
test
sub
out
mov
add
dec
add
pusha
sbb
cmc
pop
js
cmp
out
push
out
xor
inc
mov
pop
out
popa
mov
inc
mov
imull
icebp
pop
pop
pushl
mov
jnp
mov
inc
mov
push
jb
lds
cs
mov
and
add
incl
cmp
jecxz
nop
mov
mov
xchg
cmpsl
push
std
push
cmp
add
popa
or
ljmp
nop
cmp
adc
jb
dec
xor
and
push
sarb
mov
xor
push
in
xchg
xor
cs
push
ja
dec
lock
xor
jle
inc
sbb
out
repnz
lret
fnstsw
jae
and
test
dec
inc
adc
call
sub
xchg
insb
jle
divb
pushf
xchg
pushf
lcall
xor
jecxz
fwait
mov
call
inc
xchg
das
xor
fimull
push
andl
cmp
mov
cli
out
mov
mov
repnz
aam
mov
decl
bound
decb
loope
test
pop
das
call
pop
imul
push
inc
int3
xor
jae
into
fisubrl
mov
adc
sbb
pusha
sub
fcmovu
lods
or
ljmp
fwait
sub
push
mov
rcl
enter
pushl
mov
xchg
mov
fimull
mov
sti
test
xor
sbb
aad
pop
std
lock
hlt
lods
cwtl
pushl
movsb
xor
cmp
mov
sbb
add
std
mov
aas
scas
or
fbstp
lods
pop
cmp
adc
jns
sbb
icebp
push
jnp
mov
dec
clc
incl
or
dec
imul
loopne
ja
lock
cwtl
js
incl
dec
int3
cld
mov
push
test
subb
push
cmp
in
push
push
shrl
mov
stc
sub
daa
xchg
inc
mov
fcomip
pop
mov
ljmp
push
jae
xchg
int3
xchg
sbb
adc
ljmp
icebp
jno
sarl
mov
aad
sbb
pop
lret
sbb
add
pushf
cltd
pop
ljmp
aam
pop
shufps
mov
addr16
andl
and
xchg
idivl
jns
inc
jae
lcall
mov
test
stos
jl
lret
loop
and
mov
push
fisubs
lock
pop
jp
popa
and
xchg
mov
ret
push
je
in
aad
cmp
jne
dec
cmp
lds
fmuls
push
nop
sub
lods
mov
mov
pushl
mov
sub
jno
ret
pop
pop
popa
cli
rorb
pop
imul
sarb
jg
inc
out
insl
sub
or
jge
xchg
fdivrl
dec
mov
xor
sbb
jl
cmpsl
pop
dec
call
sbb
mov
lock
xchg
mov
sbb
cmpsl
xchg
ret
pop
lcall
mov
mov
ja
mov
sbb
push
mov
mov
cmpsl
pop
shlb
pushl
das
cmp
adc
sysret
mov
movsb
xchg
xchg
ljmp
loopne
dec
push
cmp
movsl
call
dec
fldt
fildl
enter
pushl
pop
mov
xchg
adc
nop
mov
scas
jno
sahf
jns
out
clc
jmp
cmpsl
sarl
popf
adc
sub
lcall
je
icebp
nop
adc
iret
ds
pusha
scas
jb
iret
mov
jp
jmp
int
mov
dec
rcrl
dec
fdivrl
cwtl
imul
dec
dec
jne
dec
pop
mov
push
sar
testl
call
in
mov
xor
inc
and
dec
out
xchg
ds
xchg
mov
imul
insl
decl
xchg
aaa
enter
sub
ret
jo
jl
test
jb
add
decl
adc
clc
jge
sub
imul
iret
aas
ret
mov
fwait
test
icebp
jmp
lret
and
push
sub
fiadds
cld
adc
mov
pop
mov
mov
inc
mov
shl
cld
mov
jl
sub
bound
cmp
xor
sar
icebp
adc
jno
aam
rcll
imul
aam
mov
sbb
pushl
jg
dec
add
cmc
popa
mov
enter
shrb
dec
cwtl
call
mov
ret
push
inc
std
push
pop
adc
fimull
add
out
cli
cmp
test
sarl
pop
mov
call
cmc
or
jb
out
add
xchg
mov
incl
sub
test
mov
push
inc
dec
push
push
paddb
ljmp
mov
cmp
xchg
pop
pushf
sbb
add
clc
js
jb
mov
mov
push
push
shll
dec
aad
jb
adc
mov
cmpsb
add
jmp
sub
or
std
xor
jns
lcall
cmp
dec
sub
rorl
adc
sbb
xchg
sub
insb
je
lcall
subl
push
call
jmp
mov
out
cmp
jns
mov
in
in
mov
in
std
jg
ljmp
ret
fwait
dec
out
lods
inc
lcall
push
pop
sbb
ret
sti
jg
push
fidivl
pop
mov
sub
incl
decl
pop
and
jecxz
xor
mov
or
addb
incl
xchg
and
outsb
movsl
push
cmp
sub
and
dec
js
xchg
cmp
lcall
mov
xchg
mov
subb
cmp
inc
mov
push
scas
ret
inc
cli
decl
lods
jne
roll
fidivrs
daa
mov
cs
xchg
add
sbb
fimull
mov
ret
jo
mov
xor
cs
jmp
mov
mov
sub
lds
popa
xlat
pop
push
rcll
aas
fincstp
push
pop
cmp
push
xchg
jno
and
push
in
mov
lcall
movsb
add
xchg
add
ret
in
sbb
mov
popa
addr16
lea
dec
lcall
jmp
scas
fs
paddsw
scas
shlb
xchg
lcall
jle
data16
int3
xchg
and
or
cmpsl
incl
mov
jnp
mov
sbb
fistl
push
xlat
clc
cmpsb
out
dec
adc
or
pop
cmp
das
shr
adc
js
add
and
sbb
xor
xor
int
cmp
xchg
lret
test
hlt
jg
scas
sub
das
inc
outsb
mov
pop
movb
ljmp
push
jb
nop
loope
mov
ss
xor
fcoms
pop
xlat
mov
in
in
out
mov
stc
push
rcrb
pop
shll
push
cmpsb
rcrl
loop
incl
mov
mov
test
lds
sub
pop
in
lcall
sub
ljmp
js
sub
data16
decl
push
xchg
push
lds
out
adc
pop
jecxz
inc
pop
dec
loop
call
loope
out
adc
into
jp
nop
rclb
add
jge
sbb
and
sar
mov
int3
loope
mov
sbb
dec
pop
push
push
jbe
push
jmp
xchg
mov
in
adc
loope
lock
lahf
push
aaa
test
add
mov
sbb
dec
les
pop
add
jmp
loopne
jmp
or
loope
inc
fcmovnb
push
mov
lods
jle
cli
add
test
xor
lods
and
jmp
scas
mov
sbb
incb
xor
dec
pop
lods
jecxz
xchg
xchg
xorl
decl
mov
inc
clc
push
pop
stos
cmp
or
les
pop
push
pop
adc
imul
inc
cmp
mov
insb
mov
lcall
push
mov
test
cmp
rcll
call
sti
imul
push
cmp
ret
add
cmp
fsts
js
adc
ficomps
stos
cmp
xor
cmp
sub
loopne
pushf
push
call
out
dec
clc
das
cli
call
lock
jp
fstl
or
lds
in
in
sub
loopne
sbb
jae
clc
ffree
ljmp
cmpb
outsb
notb
dec
xchg
dec
pop
mov
xchg
sub
mov
fcomip
adc
dec
dec
pop
pop
push
inc
les
jbe
adc
sahf
nop
adc
cli
sbb
es
out
pusha
mov
gs
jmp
jb
addr16
enter
aam
inc
into
andb
push
je
push
cli
lcall
lcall
loopne
addl
xor
in
shll
mov
icebp
ljmp
jle
and
pusha
inc
xchg
push
lcall
mov
mov
imul
cmp
fidivs
lret
outsl
test
mov
shlb
or
sbb
or
jl
inc
test
cli
pushl
aam
push
jle
mov
pop
in
out
je
jl
lret
jge
pop
inc
fimuls
ljmp
das
les
iret
out
nop
clc
inc
push
push
dec
add
outsb
nop
inc
mov
cli
xor
or
inc
nop
or
or
cltd
and
data16
incl
pushf
rolb
aam
push
jp
shlb
xor
add
inc
incl
cmp
sarb
lahf
sbb
fidivrs
mov
lcall
mov
ja
dec
addl
std
pushl
repnz
cwtl
mov
and
sbb
push
cmp
lock
repnz
hlt
pushl
jge
leave
lea
jge
jecxz
xlat
sar
sbb
shll
xchg
shrl
add
incl
cld
fists
add
jl
jg
dec
sahf
sbb
adc
ds
jmp
incl
cwtl
frstpm(287
add
sbb
aad
outsb
loopne
push
xor
lret
repz
sub
jns
lcall
pop
sahf
ds
nop
mov
cs
cmpsb
push
int
mov
mov
lcall
push
lcall
push
cmp
aad
hlt
mov
imul
jmp
imul
inc
push
shr
lods
xor
adc
movb
jl
or
inc
mov
mov
pushl
push
bound
lock
adc
pop
in
pop
jo
jecxz
int3
stc
push
sti
or
xchg
jp
xchg
imul
xchg
jne
or
sub
push
adc
pop
dec
cld
cmp
sub
pop
mov
imul
test
and
xor
jae
mov
std
mov
mov
lret
fcomip
in
test
jg
loope
icebp
sub
mov
call
out
inc
stos
test
or
fdivrs
and
pop
jno
cmp
mov
or
mov
mov
fiaddl
xor
test
lahf
sarb
mov
fisubs
dec
xor
rcrb
adc
jnp
pop
lods
inc
mov
repz
dec
push
cmp
mov
insl
sub
loop
xor
fcmovnu
shl
lcall
cmp
sbb
and
aam
out
testb
arpl
fistpll
ljmp
pusha
sub
sbb
pop
xchg
and
shlb
loopne
xor
in
ret
jg
cmp
outsb
mov
iret
pop
push
or
mov
decl
nop
hlt
sub
jp
sub
fiadds
subb
imul
lahf
mov
jmp
mov
cmp
call
ror
sbb
xchg
std
mov
imul
and
and
aas
xor
call
xchg
data16
imul
inc
cld
xlat
push
sahf
mov
lock
enter
out
js
pop
or
add
mov
mov
cmc
push
mov
mov
pop
sub
fildl
call
add
mov
fstpl
call
popf
pop
inc
dec
xchg
lcall
mov
mov
add
xor
jno
mov
adc
pop
lahf
mov
outsl
pop
push
jns
adc
sbb
dec
jb
mov
sarb
sub
call
mov
aam
call
std
stos
dec
mov
xchg
jns
add
xchg
xorb
lahf
in
jo
push
add
jae
pushl
mov
push
aad
outsb
mov
stc
call
sub
and
pop
mulb
fs
jg
pushl
cltd
push
imul
fxch
cld
and
sbb
push
adc
jmp
lcall
push
fidivl
xchg
push
xlat
and
lcall
sti
stos
fiadds
mov
mov
or
mov
adc
xchg
cmpsb
push
jmp
lret
popf
and
mov
inc
out
cmc
aam
arpl
xchg
lahf
clc
lock
repz
fiaddl
fstps
push
dec
jae
popa
mov
jecxz
mov
and
push
jbe
mov
pop
xor
or
sbb
aaa
lret
aas
cld
loope
add
cli
stos
lcall
add
xchg
sub
mov
push
push
mov
pop
cmc
scas
enter
cmp
cld
je
push
sub
sar
fisttps
clc
test
add
pushf
push
movsb
daa
ficompl
jns
cmp
xchg
cmc
lods
mov
sbb
dec
jnp
ror
mov
jmp
aad
lret
pusha
or
and
decl
pop
push
mov
xchg
mov
and
xor
cmp
inc
and
xchg
mov
das
mov
sbb
mov
imul
ret
inc
out
ret
int
movsl
dec
js
cmpb
jg
pop
decl
or
xchg
or
inc
push
lret
sahf
rcr
xchg
fcmovu
enterw
outsl
jno
into
mov
test
push
mov
sahf
or
aam
inc
add
movsb
cmp
std
and
sub
int3
adcb
dec
mov
call
call
sub
sub
out
mov
push
ja
and
stos
mov
mov
leave
addr16
pop
jl
call
sbb
add
sub
cld
inc
xor
test
testl
imul
cld
push
sti
ret
mov
int3
ss
outsb
ret
shrd
xor
cmp
jg
mov
xor
shlb
add
jmp
std
lahf
pop
test
sub
out
adc
push
push
test
sub
popa
lcall
aam
push
cmp
ss
std
adc
add
imul
cmpsb
aaa
outsl
test
es
mov
call
and
rcll
inc
push
mov
cmp
roll
cld
xor
xchg
adc
jmp
js
outsl
adc
sub
adc
mov
push
adc
outsl
imul
fcmove
mov
stos
fsubr
fs
sub
xor
mov
in
xchg
js
loope
das
push
inc
adc
leave
pop
clc
outsb
xor
decl
mov
lds
mov
movsl
mov
int
cmc
es
fiadds
jle
jne
gs
movsb
xorl
jb
shlb
leave
fstpt
sub
jmp
sbb
imul
imul
lods
sub
dec
aas
lret
outsl
incl
imul
test
and
adc
movsl
cmpsl
sub
cmp
xor
jg
jmp
add
out
jne
ret
lds
shr
jns
add
mov
adc
push
lcall
xorl
out
xor
mov
mov
xchg
xor
incl
xor
pop
fildll
imul
jge
inc
mov
jbe
sar
jmp
scas
ss
pop
pusha
lcall
fists
scas
leave
call
push
jmp
jge
mov
cmp
cmp
out
lahf
inc
inc
test
cmp
jmp
and
roll
test
or
sbb
cli
sar
call
aaa
icebp
jbe
lea
cmp
pop
pop
iret
andl
add
roll
mov
inc
add
mov
pop
lret
push
adc
lds
movl
ljmp
push
cli
jnp,pt
pop
lds
sbb
add
xor
mov
sar
dec
fsts
ljmp
add
xchg
repz
repz
push
arpl
adc
idivb
sub
jl
jmp
call
mov
cmpsl
or
nop
sbb
popf
push
inc
pop
loope
inc
adc
xor
mov
or
dec
and
repnz
or
fiadds
jmp
icebp
pop
ficompl
negb
out
xchg
xor
test
lea
xchg
push
add
ljmp
cmpsb
aaa
enter
inc
gs
icebp
cmpsb
lahf
or
clc
fbld
cmp
mov
mov
push
enter
mov
dec
sbb
dec
daa
ret
icebp
jg
lret
das
nop
adc
xchg
pop
pushf
jnp
shrb
clc
ljmp
arpl
mov
mov
fstpt
cmpsb
jg
lods
adc
sub
add
mov
sti
jo
push
mov
lcall
sbb
jae
sahf
inc
push
xchg
fcomip
and
scas
pop
popf
add
rcll
sti
mov
sbb
dec
pop
add
or
xchg
mov
dec
icebp
jg
es
fcmovnbe
add
mov
repnz
ficoml
fdivl
cld
ljmp
loop
jg
mov
sbb
lods
cltd
ss
sub
loopne
ljmp
add
iret
pop
push
xor
pop
punpckhbw
pop
out
outsb
nop
pop
and
int3
ficoms
mov
pushf
popf
into
and
push
fldcw
mov
sub
sbb
into
stos
ljmp
into
sbb
cld
push
xchg
inc
add
clc
xlat
push
adc
ss
lret
shl
jnp
lcall
in
rolb
scas
cwtl
jge,pt
and
sbb
or
sahf
lock
ljmp
mov
cmpsb
jge
xchg
outsb
aad
and
divb
imul
pop
adc
std
and
dec
test
call
std
jnp
cmp
dec
nop
repnz
dec
dec
push
jle
mov
ror
out
lock
decl
jnp
mov
pusha
stos
mov
add
enter
dec
lret
inc
xorb
inc
arpl
adc
hlt
dec
dec
rcrb
inc
cmpb
out
insb
and
aam
dec
mov
decl
cs
ret
pop
ret
pushf
lods
pop
and
ss
cmpsb
mov
mov
in
les
cmp
cltd
push
jmp
dec
cmp
cmc
dec
int3
and
stos
loop
loop
rcrl
loop
xchg
ds
mov
cmp
pushl
out
jmp
mov
mov
std
push
das
incb
lea
lcall
call
repnz
test
lret
add
ja
les
sub
pop
mov
cmpl
cld
pushl
cltd
push
pop
and
sbb
mov
mov
dec
call
sbb
call
xchg
mov
stc
bound
cwtl
mov
jne
pop
mov
xor
xor
dec
push
decl
lock
mov
ja
jo
mov
enter
cmc
repnz
clc
pushl
stc
inc
xlat
repnz
mov
stos
mov
xchg
pop
std
into
fsqrt
push
or
xor
jbe
icebp
decl
mov
push
xchg
imul
mov
sub
insl
xor
incl
lds
jbe
test
pusha
out
adc
loopne
mov
pushf
or
push
scas
clc
pushl
rep
cli
sarb
fwait
xor
mov
decl
pop
fistpll
jnp
and
fwait
sti
sti
test
arpl
insb
out
pushl
push
and
mov
inc
mov
sub
dec
push
xchg
xor
cmc
lret
sti
lea
rcrl
mov
xchg
ja
push
decl
outsb
in
add
sub
and
sub
jne
push
test
in
mov
incl
pop
and
addr16
ljmp
sub
adc
dec
push
sbb
decl
test
jmp
filds
push
ret
orl
fsub
imul
add
std
cwtl
insl
dec
and
xchg
inc
sbb
adc
in
dec
sub
aam
lcall
test
std
addl
push
mov
or
xlat
cmp
std
inc
xor
outsl
mov
sub
push
ret
lcall
and
mov
sub
decl
cmpsl
jbe
or
js
fs
or
leave
xchg
sub
lock
jmp
push
cwtl
stos
lods
cmc
jp
mov
push
inc
add
test
ss
jbe
out
mov
inc
mov
bound
movsb
push
lret
adc
out
jg
cmp
sbbl
imul
mov
and
scas
or
push
cld
aas
cli
mov
nop
mov
sub
das
frstor
xlat
jmp
inc
mov
mov
jmp
adc
jp
into
push
xchg
dec
loop
fwait
je
pushf
orl
or
mov
add
mov
add
or
in
adc
decl
cltd
dec
pusha
out
stos
gs
and
fdivrp
xchg
mov
dec
lods
pop
dec
shll
popf
cmpsl
jb
repz
and
jmp
ja
pushl
addr16
sbb
lods
mov
dec
fnstsw
fs
mov
out
mov
sbb
xchg
scas
inc
incl
fwait
mov
lahf
xor
hlt
cmp
sub
insb
lds
insb
or
call
cld
inc
or
icebp
sub
sub
jmp
aam
push
inc
imul
mov
enter
dec
add
sti
mov
mov
add
jno
mov
idivb
push
cltd
mov
add
push
jns
ss
mov
ljmp
cli
dec
dec
aaa
lcall
divl
pop
data16
mov
stos
sub
xor
sub
mov
mov
adc
pop
cmp
lea
jmp
addl
mov
adcl
stos
mov
and
icebp
inc
leave
add
or
inc
jb
cmc
cmpsb
jo
jns
inc
rclb
clc
ljmp
push
xchg
jns
bnd
dec
into
rdtsc
push
lods
adc
cmc
xchg
xor
sub
call
jno
rcrl
sar
ret
cmp
loopne
ljmp
jmp
and
filds
cmpsb
sub
cmpsb
jl
mov
iret
add
or
jae
mul
push
call
xchg
sbb
jmp
xor
cli
xchg
adcb
push
xor
call
inc
js
sub
or
out
test
shr
inc
adc
sub
xchg
fimull
ss
mov
decl
pusha
pop
lret
adc
ss
adc
loop
xchg
fwait
cld
xchg
xor
lock
push
add
in
call
xchg
mov
jge
mov
js
je
push
or
call
xor
clc
mov
je
push
push
sub
mov
cltd
xlat
lret
add
out
push
pop
mov
dec
lahf
sahf
cmp
sbb
ljmp
jmp
rol
pop
or
xchg
jge
add
movsb
sbb
stc
jmp
jb
lds
fwait
cmp
mov
aad
ljmp
dec
adc
mov
lds
out
mov
loopne
out
aas
enter
sar
imul
dec
pop
xor
js
pop
hlt
ret
adc
jg
cmp
inc
aam
jne
inc
dec
jg
pop
stos
cli
jnp
in
xchg
push
ss
xchg
push
add
outsb
out
mov
mov
dec
mov
inc
out
inc
es
inc
jbe
mov
jno
jnp
in
clc
lcall
in
push
cs
stos
push
mov
scas
cli
pushl
call
pop
add
dec
sub
and
shrl
mov
dec
jg
inc
sti
mov
pop
shrl
and
call
sub
inc
lods
adc
jge
insl
add
mov
ljmp
ficoms
loop
pushl
mov
cwtl
or
push
push
sub
mov
rol
mov
mov
xchg
js
loope
mov
lcall
sub
inc
xchg
push
mov
dec
or
mov
stos
mov
dec
pushl
xchg
dec
hlt
push
sbb
lock
xor
mov
or
pop
lds
scas
fwait
ljmp
ljmp
pop
out
pushfw
xor
call
dec
inc
dec
mov
mov
mov
cmp
mov
dec
movsb
dec
cltd
or
test
adc
in
dec
and
sarb
les
sub
idivb
jbe
mov
jnp
hlt
popa
incl
cmp
jl
out
push
movb
cltd
push
rol
int3
mov
push
out
ds
sub
clc
cmp
xor
mov
xor
sbb
adc
dec
lcall
pop
mov
repz
sti
mov
jo
fmulp
negl
ret
ret
aas
cmc
outsl
outsl
push
decl
loop
dec
mov
dec
pop
push
or
dec
jbe
jo
add
lods
jno
adc
ljmp
mov
jge
push
mov
pusha
inc
lret
pop
repnz
pusha
push
or
jmp
xchg
or
inc
and
mov
lock
sub
call
fidivrl
inc
pop
xor
mov
in
and
popa
das
jg
mov
ljmp
scas
dec
fisubrs
shrl
aas
mov
add
pop
push
ljmp
inc
inc
call
mov
or
in
scas
xor
pop
inc
fdivr
shlb
movsb
dec
decl
xlat
mov
mov
jmp
pop
mov
add
inc
out
aaa
cld
jmp
push
pop
pop
aad
fnstenv
jg
inc
std
andl
jae
jns
push
aaa
fdivr
or
ljmp
xor
fdivrp
lret
jns
sbb
cs
ret
ja
lahf
in
shlb
fiadds
pushf
test
or
dec
cmp
pushl
sbb
jmp
push
or
lea
sbb
push
pusha
ljmp
jmp
or
mov
inc
lahf
pop
add
je
jno
and
jge
and
decl
push
sub
pmullw
jecxz
or
lret
decl
test
push
xor
cmp
jno
inc
jg
ljmp
xchg
xor
xlat
mov
push
pop
mov
call
test
or
inc
push
rcrl
shlb
jmp
adc
cld
mov
std
dec
aas
imul
insl
pop
cmc
fcoml
adc
lret
mov
push
shlb
in
add
push
mov
movsl
dec
mov
divb
cmc
push
or
xchg
xlat
jmp
call
and
stos
cmp
adc
jge
ret
test
out
adc
fcmovbe
mov
lret
adc
decl
push
jp
mov
pop
cmp
jnp
rorl
xor
push
es
addr16
adc
std
jg
lea
data16
mov
mov
cli
mov
mov
pusha
cmp
stos
outsb
xor
jmp
xlat
cmpb
into
xor
sub
decl
pop
jbe
adc
jns
mov
cli
in
jae
jb
lcall
ja
mov
mov
dec
scas
in
xlat
loope
pop
xchg
cmpsl
push
mov
mov
mov
fdivrs
sub
jle
xchg
and
pop
test
push
pushl
sbb
xor
shlb
and
lret
dec
jno
out
xchg
cmp
mov
and
fsts
push
popa
loop,pt
nop
outsb
inc
shld
xchg
and
ljmp
stos
fcompl
sarl
sub
inc
ja
addr16
push
pushf
incl
xor
lds
cmp
mov
or
addr16
sub
gs
aas
int3
xchg
lret
stos
xchg
popf
into
push
jbe
call
fcomip
stos
pop
cmpsb
or
sub
popa
fdivl
hlt
and
push
pushl
nop
idivl
xchg
fcomip
cmp
pop
xlat
mov
test
shll
pushl
adc
and
int3
out
scas
movsb
mov
sub
lods
pop
adc
imul
imul
aam
cs
inc
aas
add
mov
mov
das
sub
push
sub
sbb
std
stos
push
add
or
sub
push
shlb
scas
pushl
cld
mov
ljmp
sub
test
aas
dec
movsb
jo
dec
mov
dec
mov
dec
push
mov
jns
out
sbb
pop
inc
in
and
adc
jp
lcall
iret
inc
mov
movsl
sub
push
call
pop
or
jno
decl
adc
dec
out
ret
sub
sar
xchg
notl
imul
cltd
mov
pop
add
and
fs
decl
and
pop
faddl
loop
pop
pushl
jl
shr
and
jle
lahf
mov
dec
stos
adc
fidivrs
mov
ljmp
sbb
cmp
pop
adc
into
adc
adc
lret
bound
lret
pop
jns
sarb
stos
lods
cmp
lods
mov
adcl
call
jmp
in
inc
out
pop
push
add
mov
sti
sub
jno
jp
cmp
xor
pop
outsb
mov
dec
dec
add
pushf
jl
dec
movsl
pop
adc
cmp
jge
push
test
call
je
test
and
lds
fistps
xorb
pushl
jecxz
popf
outsb
divb
sbb
clc
lods
lret
cmp
bound
fneni(8087
push
pusha
ficomps
or
mov
xor
jne
inc
lds
mov
sub
sub
cmpsl
mov
incl
fistpll
subb
jg
rol
inc
push
dec
mov
lods
mov
scas
ror
loop
lcall
negb
or
xchg
cli
cmpsl
lock
pop
mov
stc
xchg
cmp
es
mov
adc
aas
mov
xchg
mov
jg
xlat
jp
int
jg
dec
aad
jmp
call
aad
pop
in
decl
cli
mov
push
pop
outsb
mov
dec
int3
pop
pusha
aad
jnp
cmp
daa
lcall
cltd
stc
add
mov
shll
dec
fcmovbe
adc
push
or
pop
std
jb
ljmp
clc
cwtl
mov
divl
imul
add
mov
push
add
pop
rcrb
aas
sub
xchg
andl
add
incl
sub
in
cmp
mov
xor
clc
cmp
cmp
jbe
in
lds
jl
pushf
dec
test
and
rcrb
leave
aam
sbb
scas
cli
pushl
mov
sub
dec
cmp
dec
and
mov
jl
dec
cmp
mov
adc
xor
mov
ds
jmp
les
pop
lahf
or
shrl
ret
addb
jg
fstpl
ss
lahf
es
scas
jecxz
xor
jecxz
xor
jmp
movsl
out
fwait
xchg
jbe
popa
mov
mov
mov
out
mov
cmp
js
aad
aad
push
loopne
je
sub
xor
sub
add
stc
incl
mov
xor
mov
xchg
fbld
sbb
mov
outsb
ds
out
and
jmp
cmc
fwait
lock
cmpsl
push
xchg
pusha
stc
rorl
jge
stc
out
fcompl
addr16
fcomip
mov
mov
cli
mov
jg
jnp
push
fmull
ljmp
decl
das
xchg
nop
cmp
push
aam
mov
pop
lret
push
lret
cmp
bound
aas
mov
ljmp
cli
call
and
xor
inc
lea
mov
inc
dec
dec
loopne
adc
repz
jg
mov
inc
imul
sub
out
rcl
jmp
xchg
daa
hlt
push
std
stc
push
cmp
rorl
lods
jnp
mov
xchg
fidivrs
xchg
or
ljmp
fdivr
inc
aas
test
ret
sbb
aas
mov
xchg
inc
into
repz
cmp
out
xchg
cmp
inc
pop
test
cwtl
and
scas
icebp
call
xchg
fwait
adc
adcl
dec
scas
cwtl
icebp
cli
xor
cmp
decl
or
pop
fwait
or
fsubs
cmp
adc
xchg
push
mov
mov
pusha
inc
push
pop
sarl
out
sbb
xor
ljmp
into
mov
adc
outsb
xchg
test
sub
pop
xchg
jg
dec
mov
dec
mov
add
pushl
cli
jl
into
js
xor
out
cmpl
xchg
jno
popf
mov
cld
ja
addr16
popf
fldenv
adc
inc
inc
mov
out
pusha
add
incl
push
adc
jl
push
mov
pop
mov
ror
das
pop
call
xchg
inc
scas
inc
cmp
pop
rolb
gs
jg
mov
xor
xor
add
incl
inc
cmpsl
add
dec
inc
xor
inc
adc
xor
dec
fs
adc
shrl
fcomip
outsl
and
movsb
loop
or
sbb
shlb
mov
aas
fwait
pop
cld
adc
decl
nop
seta
aas
loopne
ret
mov
jp
outsw
icebp
jp
aam
cld
jg
call
shll
mov
and
cmp
pushw
ljmp
cli
lds
sub
les
jb
repz
lods
enter
outsl
clc
decl
mov
push
movb
aam
inc
subb
jns
jns
lahf
test
and
push
inc
sub
push
add
sub
aaa
sahf
sbb
cs
popa
adc
call
pop
mov
movsb
xor
add
mov
dec
jns
bound
xlat
in
push
and
dec
fs
call
dec
aaa
rclb
pop
test
sbb
stc
pushf
test
ljmp
add
dec
imul
lahf
cmc
jnp
in
jno
adc
xor
std
int
xor
in
les
mov
xchg
xor
add
and
mov
in
push
nop
lods
inc
leavew
sahf
data16
mov
xor
push
imul
mov
ret
sub
fisttpll
in
int
es
repz
mov
bound
cli
lcall
sub
xor
dec
shrl
neg
or
jg
call
in
es
xor
scas
xor
add
sub
pushf
fisubrs
pushf
pop
mov
call
mov
cmp
sub
adc
sbb
out
into
ljmp
out
ljmp
cmp
pop
fnstsw
fstpl
adc
fs
gs
push
rolb
gs
call
ret
adc
popa
pop
mov
nop
or
mov
cmp
std
out
xor
test
adc
and
mov
sbb
or
icebp
xor
sbb
mov
jmp
mov
imulb
push
inc
imul
ret
sbb
dec
call
mov
dec
push
xor
mov
cltd
cmp
shr
test
sub
jae
ljmp
mov
out
and
popf
sti
sub
repz
add
mov
xor
incl
xchg
stos
jns
jb
xchg
or
pop
mov
stc
inc
inc
add
or
ljmp
mov
movsb
and
cmpsb
or
cs
repnz
insb
dec
xchg
cmc
xor
fldt
or
xchg
in
cwtl
push
bound
pop
scas
mov
ljmp
mov
adc
or
in
cld
pop
stos
pushl
mov
fxch
mov
adc
imul
inc
enter
mov
orl
mov
cmp
das
mov
decl
or
jne
pop
xor
call
mov
jns
fwait
sub
or
movsl
mov
sahf
jnp
jbe
out
shlb
incl
mov
aam
into
in
mov
ret
lock
in
incl
lds
lods
into
mov
in
pop
xchg
pop
push
ljmp
movsl
inc
jb
aad
clc
jl
shrl
sbb
es
cld
popf
loop
pushl
xchg
dec
cwtl
iret
rcrb
mov
and
sahf
sub
in
jle
push
cmc
cli
inc
inc
mov
lret
testl
popl
jg
mov
mov
mov
mov
push
adc
or
mov
xchg
pop
jbe
jns
cmp
imul
fbld
hlt
mov
es
cmpsb
push
inc
cmpsb
insl
pusha
sbb
shlb
cmp
inc
push
lcall
leave
pop
mov
aaa
call
push
addr16
jecxz
and
adc
daa
sbb
inc
fwait
in
lcall
stos
movsb
pop
mov
mov
mov
call
dec
mov
push
stos
lret
aas
es
shl
outsb
sbb
call
mov
aad
fisubrl
fistps
add
lock
addr16
or
mov
inc
and
sti
jg
lret
cmp
jmp
dec
outsb
adc
leave
xchg
dec
stos
xor
dec
add
mov
xchg
add
jg
incl
mov
xchg
daa
pusha
pop
orl
mov
ljmp
ljmp
dec
clc
lock
faddl
ficompl
dec
mov
mov
loop
scas
xchg
test
bound
push
xlat
dec
data16
jle
push
dec
in
inc
decl
and
subl
sub
cs
test
xor
nop
mov
incl
and
aam
dec
push
sub
sub
enter
pop
fcmovnu
test
stc
sub
nop
mov
scas
ficomps
mov
ror
jns
adc
sub
jo
ficompl
push
mov
dec
mov
call
jmp
pusha
nop
outsl
mov
sbb
daa
sub
int3
xchg
sub
pop
jno
mov
call
mov
jge
mov
lcall
xchg
imul
into
cmp
adc
dec
mov
stos
decb
ret
mov
mov
mov
andb
scas
adc
cmp
lahf
push
xchg
out
jl
mov
cmc
cmp
push
xchg
mov
mov
and
test
xor
add
or
das
add
xchg
sbb
clc
js
xchg
lret
pushl
pop
dec
add
call
shrb
lds
and
mov
jbe
pushl
adc
xor
or
add
mov
inc
xor
and
sub
test
pop
dec
call
cmp
or
mov
sub
mov
lcall
xchg
ja
push
stos
inc
mul
aad
xchg
repnz
insl
xor
sar
in
incl
sahf
fdivrl
inc
adc
insl
sbb
jp
test
out
jae
jle
adc
push
test
inc
aam
bound
mov
outsb
add
sub
rcl
jmp
cmpb
pop
cltd
inc
mov
dec
xchg
das
xchg
test
push
xchg
repz
and
pushl
add
pop
dec
xchg
in
sub
insb
jne
loope
movsb
fimull
cmp
jecxz
enter
inc
sub
jl
ljmp
ja
lods
jg
clc
popf
dec
rolb
pop
mov
mov
das
push
cmp
mov
dec
or
push
adc
ss
subl
lret
les
pop
in
les
aaa
dec
out
dec
repz
pushl
stos
out
cld
repnz
cmp
adc
mov
loope
and
fdivl
cmpsb
addr16
daa
std
idiv
push
movsb
sbb
mov
sbb
call
lock
jge
aam
xchg
mov
sbb
out
xor
mov
fnstcw
and
bound
add
mov
push
sti
dec
dec
mov
pushl
test
sub
push
jo
jmp
in
mov
ljmp
jmp
mov
inc
push
jb,pn
mov
dec
mov
add
xor
popa
ljmp
inc
mov
and
fcompl
ret
lock
or
pop
or
pushl
jge
xor
mov
mov
sub
sbb
inc
inc
mov
mov
adc
ret
jmp
xchg
subb
lcall
into
shlb
mov
or
push
adc
arpl
jmp
sbb
cwtl
mov
leave
mov
inc
out
hlt
gs
repnz
cld
inc
movsb
xor
push
loop
lods
mov
fsubrs
push
push
out
cli
decl
xor
gs
lods
xor
test
cs
mov
mov
mov
fldcw
in
push
or
push
jg
mov
mov
or
andl
cmpsb
jne
xchg
mov
mulb
xchg
sub
push
popf
test
aaa
push
mov
scas
ja
cmp
out
xchg
inc
fstpl
fucomp
inc
mov
jmp
jg
cld
lcall
and
mov
or
movsb
adc
mov
ret
pop
insl
push
ljmp
jne
push
pop
or
sub
xchg
inc
dec
pop
push
add
jmp
and
mov
stc
ss
dec
pop
pusha
loopne
lret
push
ficoms
jecxz
xchg
subl
outsb
adc
scas
loopne
lret
movsb
insl
or
inc
rclb
loopne
xchg
cmp
rorl
shrb
pusha
mov
xchg
jg
fisttps
jne
mov
outsl
mov
call
pop
repz
lret
mov
jmp
or
lods
lods
into
and
out
sub
aas
or
pop
mov
test
testb
clc
decl
dec
and
jns
push
add
call
pop
pushf
xchg
pop
pop
jle
dec
xor
leave
adc
mov
test
xlat
decl
jo
jnp
jge
mov
jmp
push
notb
xchg
or
pusha
aas
sahf
sub
sub
jg
sub
inc
push
cmp
arpl
addr16
and
test
xor
inc
clc
push
test
mov
mov
inc
ret
sub
scas
mov
cmp
cmpb
inc
fadds
jp
cmp
lcall
test
mov
arpl
sti
push
lret
ss
sbb
rol
push
mov
lcall
std
incl
sti
inc
cltd
sub
fidivrl
mov
out
add
xchg
fistpll
push
sarb
jp
in
cmpsl
dec
cli
mov
hlt
add
lcall
dec
xor
lret
mov
mov
movsl
jecxz
push
ja
dec
sbb
mov
fsubrs
mov
push
sbb
in
aam
cmc
imul
pop
pop
dec
out
xchg
pop
xor
and
aas
incl
addr16
cltd
mov
aaa
push
push
stos
and
pop
fstl
into
je
inc
xchg
addb
call
push
and
xor
adc
jno
orl
mov
adcb
cmpb
dec
int
pop
sbb
roll
aaa
cld
lods
xchg
out
jno
lock
fcmovne
dec
call
sub
push
dec
mov
test
in
xor
testb
imul
out
sub
xchg
push
mov
daa
xor
jp,pn
push
fidivrl
or
call
setg
movsl
push
in
pop
movsb
in
movb
bound
rorb
pusha
and
outsl
push
cmc
pushf
xchg
jl
sub
jmp
out
out
cwtl
das
sbb
sti
push
lahf
mov
movsl
mov
call
lcall
in
mov
adc
pop
int3
dec
xchg
adc
out
push
out
pop
push
loop
mov
pop
mov
lcall
pop
dec
sbb
call
out
push
dec
shrl
repz
stc
or
aam
mov
aaa
lds
stc
xchg
scas
mov
pop
mov
je
pop
push
pop
mov
cmp
outsb
xchg
pop
jb
xor
fwait
jo
dec
jnp
loope
adc
idivb
ja
dec
sub
mov
call
mov
popf
mov
jge
arpl
fbstp
cmp
loopne
jmp
ds
bound
sub
jmp
das
adc
mov
mov
push
mov
push
sbb
and
cmpl
aad
push
ja
jmp
mov
in
lahf
and
jle
pop
mov
jmp
sti
clc
stos
fsubr
mov
dec
adc
xchg
inc
aam
cmc
in
shrl
arpl
ds
adc
mov
inc
gs
mov
lahf
pop
push
aad
dec
fsubrl
inc
sbb
mov
dec
stos
nop
lods
jge
mov
std
mov
cld
fcmovnu
cmpsw
or
inc
shll
pop
dec
shl
mov
or
fs
mov
dec
sbb
hlt
and
inc
int3
fiaddl
test
mov
pusha
push
xchg
xlat
frstor
adc
mov
lcall
rorl
pop
jmp
fnstcw
and
cld
ljmp
dec
push
scas
out
sbb
mov
shll
repz
adc
data16
stos
pop
mov
in
lcall
and
sbb
inc
test
inc
and
cmp
outsb
push
std
pushl
mov
mov
lds
out
out
push
mov
stos
ljmp
std
test
sbb
ljmpw
push
shrl
xor
ror
aad
cld
sbb
mov
push
bound
sahf
stos
mov
push
jno
ljmp
pop
scas
hlt
outsb
inc
or
in
lcall
mov
arpl
lahf
movhlps
push
pushl
fucomip
inc
xor
xor
lcall
or
loop
mov
hlt
das
clc
lcall
jmp
repnz
mov
mov
mov
pop
fcoms
push
loope
cmp
fldl
scas
xor
out
ret
sti
sbb
push
incl
sbb
mov
push
orl
cli
or
loop
outsl
xchg
pop
mov
decl
jbe
jp
sti
sub
mov
mov
sbb
push
dec
addr16
mov
adc
cmc
xor
jmp
divl
lcall
cld
add
pop
lock
sbb
xlat
cwtl
push
addr16
fs
jne
lock
cld
incl
mov
mov
jae
int3
push
fsub
sub
cld
xchg
cmp
sub
add
daa
push
sub
sub
ret
jg
add
jae
rolb
sub
std
mov
or
xor
dec
fisubl
call
mov
fdivrl
mov
sbb
insb
xor
jmp
cli
incl
jbe
or
dec
negb
adc
push
call
push
jne
daa
jno
test
cmpsb
lret
outsb
popf
cmp
add
cmc
pop
icebp
ljmp
idivb
xchg
scas
lods
push
sti
inc
test
dec
lcall
xchg
sbb
cmc
mov
int3
stc
adc
insb
clc
incl
jnp
stc
testl
pop
in
xchg
ss
jcxz
cmp
es
decl
je
jbe
xor
xchg
fldenv
into
sbb
call
adc
cmpsl
dec
in
mov
js
stos
add
aas
sti
in
and
mov
imul
jmp
ficompl
insl
cli
fiaddl
and
clc
mov
cli
and
xchg
sbb
push
popf
mov
lock
cmpsl
pop
outsb
jne
gs
adcl
shl
or
shr
push
orb
jb,pt
cld
xchg
repz
aaa
sub
adc
movsb
xlat
sbb
adc
cwtl
call
and
fstps
cmp
decb
sbb
lods
xchg
adc
ficomps
mov
dec
fsts
sahf
psllq
push
outsl
dec
fcom
adc
in
and
stc
shlb
jecxz
out
das
push
push
ljmp
and
icebp
mov
fldenv
out
fsubrp
loopne
xor
sub
and
cmp
ljmp
lcall
daa
sarb
clc
mov
jns
das
imul
lcall
fadds
and
add
push
scas
test
dec
jg
add
xor
dec
test
pop
outsb
adc
or
xor
das
mov
dec
ja
imul
adcb
dec
cld
cmp
test
pop
jmp
mov
mov
icebp
popa
adc
pop
mov
pusha
test
loopne
dec
pop
jbe
incl
pop
xchg
mov
pop
mov
cmp
push
sbb
lods
cld
fnsave
cmc
mov
add
cmp
xor
adc
and
lea
or
jmp
xlat
ja
xchg
lods
jbe
fldl
cmp
mov
and
xchg
stos
fdivr
int3
lahf
cmp
push
adc
jp
insb
arpl
rorb
ds
inc
sbb
pop
fisubl
cmp
push
ror
jg
test
cmp
or
push
ljmp
das
clc
inc
jo
arpl
fadds
and
repz
rcr
xchg
clc
incl
out
xchg
iret
int
lahf
sub
xchg
mov
or
ljmp
dec
cmp
loope
psrlq
pop
insl
cmp
jmp
inc
popa
into
stc
inc
sbb
or
out
clc
mov
mov
pushl
push
cmpsl
sub
scas
mov
mov
mov
repz
cmp
sti
inc
inc
mov
jns
pop
xchg
sahf
imul
push
inc
rcrl
cmp
cmc
adc
add
dec
dec
push
cli
sti
insb
inc
lret
stc
pushf
mov
ds
movsl
insl
sbb
inc
sti
xor
mov
popa
jnp
cld
dec
jns
lret
push
imul
add
not
cmp
xor
jmp
jmp
push
das
repz
sahf
dec
scas
push
cmc
adc
sti
and
stos
test
push
rcrb
sub
jmp
cli
push
jge
inc
ja
sbb
call
lret
dec
iret
xchg
mov
shll
clc
ljmp
cltd
addr16
stos
adc
dec
in
cmp
mov
pushl
enter
stc
pop
out
data16
sub
cmp
mov
int3
sub
ret
lock
dec
inc
pop
lcall
push
xor
cmc
call
stos
sbb
sbb
and
xor
jns
add
dec
pop
subl
jp
fucomp
cltd
jmp
jbe
je
cli
mov
push
paddusb
aam
jg
fs
jg
incl
xor
repnz
push
and
sub
or
mov
mov
arpl
in
subb
push
enter
add
add
cmp
and
clc
test
or
movsb
mov
out
test
hlt
enter
inc
test
filds
sbb
add
cmp
and
xchg
adc
decl
dec
mov
sbb
rolb
or
push
xor
add
ljmp
movsb
test
data16
inc
ljmp
adc
xor
lock
call
js
andl
lcall
popf
inc
pushf
adc
jnp
cmp
lret
gs
xlat
cmp
test
je
push
sar
incl
iret
leave
cwtl
jns
cli
jecxz
mov
or
mov
mov
decl
push
pusha
ljmp
out
cmp
and
sbb
ret
imul
ret
push
mov
mov
pop
push
sbb
mov
adc
lcall
orl
add
or
jg
incl
das
cli
fcoml
test
cmp
xlat
int3
and
ljmp
je
jo
dec
pop
aam
mov
mov
jge
ss
jp
and
insb
repz
in
ljmp
addl
bound
and
lods
int
bound
add
insl
and
ljmp
adc
and
insl
or
pop
ficoms
inc
cmpsb
and
push
fldl
decl
sbb
xor
and
cli
pop
push
rorl
xor
ja
mov
mov
cmp
pop
jg
push
sbb
movsl
jp
push
stos
arpl
stos
lods
rcrl
lcall
inc
cmp
jo
hlt
arpl
insb
lret
sbb
inc
mov
decl
mov
push
xchg
mov
repz
dec
rcrl
test
jp
nop
loop
mov
xchg
dec
add
inc
jle
hlt
mov
push
test
xchg
ja
jae
lods
jns
jl
in
mov
fbld
cli
xchg
adc
lds
and
jne
push
pop
cmp
jmp
popf
xchg
push
mov
cld
or
jl
iret
push
xor
fwait
lea
jo
sub
loop
enter
add
movsl
xor
cld
or
loopne
xor
call
gs
out
stc
fcompl
ret
lds
sub
data16
call
pop
lods
aaa
add
inc
dec
cmc
call
sbb
mov
xchg
fldt
call
add
push
nop
into
and
test
int
incl
jno
daa
mov
sub
add
adc
mov
mov
ss
mov
pop
outsl
cli
decl
call
lods
ret
or
mov
push
gs
fcos
ljmp
sbb
sbb
xchg
shll
cmp
adc
inc
out
or
fcoml
pushf
push
jnp
xchg
or
cli
and
dec
fcompl
imul
pop
out
mov
std
enter
pop
setno
pop
cwtl
xchg
daa
push
xor
loope
pushl
cmp
call
adc
push
dec
pushf
fldl
push
negb
cmpsl
pushf
sbb
inc
aas
ss
adc
lock
jne
dec
outsl
jmp
pushf
adc
lods
xor
stos
add
mov
or
scas
mov
sub
and
cmp
call
test
in
cmpsl
ss
adc
repnz
and
bswap
sbb
xchg
pushl
xchg
aam
cmc
mov
mov
addr16
jae
inc
mov
call
in
mov
lods
or
mov
out
and
pop
push
push
sbb
rcrl
xchg
icebp
xor
xchg
adc
adc
ds
std
dec
and
das
lds
outsb
or
aas
in
popf
jmp
enter
or
jne
fiadds
cmc
xor
and
popl
jmp
imul
push
cltd
jge
cmp
arpl
icebp
jmp
dec
xor
cmpsb
inc
fnstsw
dec
jo
jmp
push
inc
lea
fadds
mov
movsl
sbb
jmp
loopne
ja
or
inc
mov
add
imul
nop
mov
fists
ret
xchg
dec
aad
sbb
out
lahf
push
loopne
xchg
mov
mov
dec
enter
sbb
mov
push
add
push
stc
mov
in
cltd
push
and
aad
outsl
clc
push
enter
add
in
dec
mov
lea
mov
jmp
or
cmp
and
fdivrp
push
scas
roll
repz
jle
adc
fistl
loop
or
lcall
jo
adc
or
cmc
mov
setnp
fs
xlat
call
mov
mov
test
jl
ljmp
std
push
sbb
ljmp
sub
xchg
mov
push
push
add
and
jmp
jae
adc
gs
decl
clc
adc
and
loop,pt
int
fisttps
inc
aas
lahf
mov
mov
imul
in
adcb
clc
imul
lock
jbe
mov
inc
out
cmp
into
into
inc
lcall
pushl
and
add
push
in
cmp
sbb
or
sti
dec
jno
in
and
mov
add
push
bound
and
das
sar
in
lds
sbb
cmc
dec
sub
test
mov
pcmpeqd
ljmp
dec
pop
jge
es
dec
inc
sbb
mov
inc
in
les
fwait
add
adcb
out
ljmp
das
dec
lock
or
lds
inc
cmp
sbb
shl
cmp
in
cli
dec
leave
in
aas
rcl
inc
mov
pushf
hlt
pusha
fs
mov
sbb
stos
mov
mov
push
mov
insl
bound
xor
lret
xchg
sarl
jg
mov
fs
shr
add
xchg
xor
ret
add
jmp
lret
xchg
push
fcmovne
mov
mov
mov
xor
ja
rcr
adc
lds
sbb
cmpsb
lcall
cli
xor
sub
xor
inc
dec
ret
scas
je
adc
push
cmc
sar
scas
lcall
adc
insl
adc
pop
xchg
shlb
cmp
into
sbb
jg
or
ss
push
jl
jno
inc
xor
inc
shr
jbe
and
sub
push
add
lcall
or
push
stos
out
or
and
cmp
mov
jne
inc
addr16
fwait
pop
pop
pop
xchg
xchg
push
icebp
ljmp
sti
leave
inc
jmp
ss
into
aam
sbb
and
and
push
and
decl
std
jecxz
leave
push
lock
mov
push
mov
mov
fistps
cmp
insl
int
xor
movsb
rcll
mov
or
mov
pop
dec
xchg
mov
cld
or
jl
jmp
jae
mov
int
sub
xor
enter
jbe
pushf
or
or
incl
imul
aaa
int3
or
testb
adc
lcall
les
call
movsl
dec
and
incl
and
xor
insb
mov
stos
xrelease
sub
pop
push
pop
add
lcall
movsl
mov
js
lret
jge
outsl
xchg
adc
adc
jmp
dec
cmp
ljmp
xlat
sarb
cmp
inc
lods
xchg
adc
nop
sbb
jecxz
or
inc
test
test
movsl
xchg
adc
add
mov
in
dec
sarl
sub
scas
xchg
insb
pushf
movsb
out
fst
cmp
fnstsw
popa
lods
in
ja
inc
push
adc
push
push
roll
test
sbb
lcall
dec
push
cmp
push
repz
mov
or
rol
dec
push
jno
lock
shrl
push
out
loop
das
cld
mov
repz
add
xchg
fcmove
push
mov
sub
testl
decl
icebp
hlt
jnp
test
repz
pop
pop
sbb
std
fmul
cmp
inc
jl
jns
movntq
sub
movsb
xor
nop
iret
pop
shr
push
pusha
push
jp
shrd
call
mov
cli
cmp
mov
add
adcl
jle
stos
pop
or
scas
add
add
imul
mov
and
add
lret
push
test
out
push
xor
insb
je
push
mov
xor
out
or
pop
insl
shll
sarb
decl
push
mov
idiv
inc
je
jbe
xchg
in
pop
jge
in
jecxz
jmp
mov
cmp
fs
adc
movsl
out
push
cli
mov
data16
orb
ljmp
hlt
jb
outsl
mov
sarb
push
stos
call
sub
data16
ret
push
decl
xchg
loop
jno
add
push
addr16
push
jb
mov
jo
stos
xor
cmpsb
adc
xchg
call
out
out
int3
js
mov
adc
imul
insb
mov
sbb
or
test
mov
xchg
xchg
scas
sbb
aaa
call
imul
loope
jo
dec
xchg
insb
xor
cmp
inc
call
inc
inc
mov
ja
fimull
movsb
mov
sbbl
repz
call
int3
negb
int
inc
lods
sahf
dec
pop
lcall
fcomip
jg
enter
jo
mov
insb
inc
or
mov
pop
cld
ret
out
es
ljmp
shll
jg
sbb
mov
cltd
cs
das
mov
jg
add
movsb
repnz
shlb
ret
call
test
xor
pop
andb
pop
xchg
ds
rorb
notl
fimull
add
sub
mov
pushl
popf
mov
dec
mov
xchg
repz
sub
cld
pop
lcall
out
or
test
aam
cmp
dec
and
cs
jg
lcall
into
mov
aad
in
aas
scas
int
andl
ljmp
xor
push
mov
jp
sbb
stos
xchg
fistpl
or
jg
fidivrl
hlt
scas
sub
sbb
aaa
mov
je
sub
jp
imul
jo
jl
jns
mov
sbb
mov
jmp
jb
adc
pushl
jp
int
je
stos
pop
repz
add
pop
lock
hlt
mov
xor
inc
jge
mov
mov
push
or
add
mov
jmp
lods
xchg
xchg
jbe
imul
repz
sbb
fimuls
out
jl
push
xchg
lds
arpl
cmpsl
js
lahf
xor
icebp
pushf
jmp
fimuls
inc
sub
jl
ret
shr
mov
rclb
dec
call
and
pushl
xchg
mov
and
push
in
mov
xchg
add
fsubrs
call
inc
fcomps
sub
sbb
rcll
out
dec
or
ret
stc
dec
xor
xchg
cmp
repnz
mov
movsb
inc
push
and
inc
push
xor
jmp
pop
test
cwtl
mov
icebp
push
xchg
mov
jge
add
imull
mov
pushf
icebp
inc
hlt
pushl
nop
fstpt
ds
xlat
pop
cltd
roll
xor
push
inc
movsb
mov
dec
clc
fildll
push
adc
push
or
gs
jne
ret
pushl
and
imul
xchg
nop
pop
xor
or
in
mov
out
ljmp
insb
or
pop
cmpsl
jmp
cmp
xor
rclb
xchg
ljmp
lcall
add
xchg
jnp
xor
cmp
xorb
aaa
repnz
fcomip
mov
aam
push
out
inc
fsubs
push
das
stos
loop
jo
add
fwait
test
adc
cwtl
pop
subb
sub
lcall
add
das
and
push
call
dec
jae
sbb
xor
enter
js
aad
ljmp
mov
add
stos
in
sbb
mov
ljmp
rcr
popa
nop
clc
mov
mov
and
sub
cs
in
loopne
and
adc
stc
negl
frstor
cs
loopne
cmpsb
imulb
stos
mov
test
outsb
sbb
dec
aam
push
ret
xchg
and
es
aam
or
push
popl
nop
xor
mov
lcall
subb
pushl
mov
in
push
dec
jp
add
lcall
push
mov
pop
pop
pop
in
or
jg
dec
mov
das
jae
cwtl
mov
xor
mov
or
pop
icebp
cld
popa
loope
repnz
out
dec
or
rcrb
decl
je
outsb
into
lcall
sub
fisttps
popf
lcall
or
mov
and
lods
rorl
push
jge
jns
jae
jp
push
sti
push
push
les
call
mov
sub
mov
fwait
cmp
ljmp
jge
pop
sbb
test
xorb
mov
cli
jmp
jae
lcall
jmp
aam
sbb
mov
mov
mov
dec
push
cmp
and
int3
and
inc
scas
and
adc
shll
pushf
loopne
pop
pop
aas
push
sbb
nop
aaa
cmp
call
loopne
cli
test
push
dec
cwtl
and
mov
jns
add
hlt
stos
movsl
rorb
or
out
inc
rcll
cmpsb
jnp,pt
inc
lahf
ds
xchg
push
rorb
pop
lcall
std
std
push
mov
cmp
loopne
xor
out
xor
inc
pushf
push
arpl
pop
outsb
bound
mov
popa
jb
xchg
shlb
ror
cwtl
xor
decl
ret
push
shlb
mov
dec
xchg
enter
outsl
subl
cmp
js
orb
adc
testl
push
cld
ljmp
mov
iret
push
outsl
orb
call
push
xor
out
mov
fstpl
out
adc
xor
je
xchg
scas
ljmp
out
adc
inc
mov
mov
mov
dec
mov
aaa
mov
mov
xchg
into
pusha
adc
push
add
sbb
xchg
loope
xchg
sub
subb
xchg
jmp
mov
das
add
add
inc
pop
aaa
jp
cmp
push
jle
in
push
out
adc
xor
xchg
sbb
mov
sub
xchg
mov
std
mov
mov
aam
xchg
ja
mov
or
ds
lcall
push
xchg
or
shrb
movsb
push
xchg
push
es
test
repz
aaa
outsb
jl
lcall
add
popf
jmp
xor
dec
mov
push
mov
cmpsb
in
push
add
ljmp
movsl
push
add
das
test
add
mov
imul
push
lcall
dec
or
xchg
arpl
aaa
jns
jo
mov
pop
xchg
dec
mov
and
sbb
mov
mov
and
icebp
cmp
arpl
lock
add
mov
jmp
fnstenv
pop
inc
fiaddl
jmp
in
cmp
in
jg
imul
push
sub
ja,pt
les
fimull
push
cmp
negb
mul
lcall
sti
sub
jg
jns
inc
mov
add
mov
mov
cld
cmpsb
mov
pop
cld
jmp
mov
sar
ficoms
or
push
jl
xlat
repnz
lret
nop
incl
sbb
je
movsb
push
rol
decb
and
leave
popf
js
mov
xchg
xor
call
dec
xchg
dec
out
jns
jbe
pop
int
sbb
adc
pop
and
pop
in
push
pushl
adcl
push
sub
loop
dec
xor
or
js
push
sbb
call
sub
mov
sti
xor
imul
sti
lcall
jg
xor
dec
js
aaa
mov
addl
xchg
shl
cmpsb
cmp
ljmp
push
ror
push
mov
aas
insb
jbe
push
std
mov
decl
lods
gs
divl
add
cmpsb
push
inc
adc
or
add
lea
fbstp
sub
pop
mov
adc
mov
xor
lcall
xor
test
sti
cmp
aas
push
insl
push
out
jge
fs
jmp
push
jb
jle
mov
sub
jnp
fwait
dec
and
xchg
lcall
mov
cmc
xchg
lds
jbe
mov
and
add
sbb
mov
or
cli
shrl
setne
pop
push
outsb
push
lock
fsubl
jg
xor
inc
imulb
sbb
pop
pop
pushf
pop
xor
jmp
lcall
xchg
pusha
insl
push
add
hlt
test
push
ss
test
pop
xchg
jmp
add
mov
cli
push
pop
je
int3
ret
jmp
xchg
adc
dec
jmp
push
jge
push
add
loop
enter
mov
out
fidivs
dec
jmp
inc
cmpsb
decb
jo
xchg
icebp
mov
dec
lods
inc
mov
cld
xor
int3
pop
insb
pop
pop
push
inc
movsb
cmp
ljmp
cmpsb
call
ljmp
xor
hlt
xchg
push
push
xor
sahf
xchg
and
inc
aad
clc
sbb
test
fisubrs
jb
xchg
ficomps
call
test
scas
dec
std
or
sub
jp
loop
notb
rorl
mov
dec
rcll
adc
aas
xchg
mov
mov
cmp
xchg
or
andl
insb
cltd
sbb
mov
xlat
sub
es
ljmp
clc
mov
xor
pop
mov
cmp
imul
and
sub
adc
or
xor
es
push
dec
sbb
test
fstps
repz
mov
xor
jno
lcall
stc
cmp
xor
je
mov
lahf
dec
push
cltd
lret
inc
push
sbb
jmp
js
out
clc
and
lock
inc
jbe
push
sar
dec
jns
movsl
inc
and
or
jge
call
loopne
sbb
loope
dec
pop
mov
js
fidivl
std
idiv
cwtl
cmp
int
outsl
clc
incl
mov
pop
jo
mov
push
mov
out
sar
cmp
decl
ror
add
mov
push
test
loop
sbb
cmpsb
or
data16
push
ljmp
mov
aam
pop
mov
pop
mov
jns
hlt
out
push
mov
jp
mov
mov
and
cvtps2pd
rorl
and
push
int3
xor
jmp
loop
mov
arpl
pop
lods
mov
test
in
jne
shrl
push
pushf
outsb
int3
mov
adc
loope
add
out
add
ficomps
stos
mov
decl
xor
das
add
jg
test
loopne
in
dec
jle
mov
call
lcall
mov
sub
sbb
iret
dec
outsl
xor
mov
mov
push
fidivl
xor
xor
sub
dec
mov
repz
mov
aam
rorb
idivb
fstps
movsb
jg
inc
mov
enter
ja
mov
nop
xor
and
call
inc
and
xlat
push
push
out
jecxz
pop
icebp
je
jno
dec
cmp
push
outsl
xor
pop
adc
ljmp
in
add
les
icebp
adc
jo
or
ljmp
jge
xchg
xor
incl
cmpb
jg
movsb
cmp
enter
hlt
notb
add
pop
pop
inc
mov
xor
xor
scas
aaa
mov
vmovaps
or
mov
pushl
dec
pushl
cld
int
xor
mov
rorb
push
lahf
sub
adc
jmp
incl
arpl
outsb
cmp
mov
mov
adc
pusha
xlat
jae
sarb
sbb
push
sbb
in
ficoml
jb
nop
in
jnp
cmpsl
xchg
test
pop
das
loop
sub
decl
mov
cmp
mov
mov
dec
sub
xchg
stc
mov
test
lret
adc
cmpb
jmp
nop
fiadds
scas
pop
pop
out
xor
push
fwait
dec
ret
and
sbb
test
pushl
imul
add
in
dec
and
add
dec
insl
mov
lret
fldcw
out
repnz
hlt
jmp
add
aaa
add
xchg
fwait
add
push
in
loop
fisubrl
incl
ss
loop
outsb
in
adc
out
stos
lods
pop
in
jae
cmpsl
sbb
or
pop
loopne
push
aaa
push
xchg
sub
addb
lret
shll
icebp
add
dec
adc
push
lods
mov
hlt
mov
loop
push
bound
lcall
jo
aam
mov
and
clc
andl
sbb
pop
cs
cmp
pushl
cmp
dec
loopne
and
fld
inc
jmp
aad
lcall
adc
cmc
jmp
jmp
push
sbb
arpl
xchg
dec
mov
stc
or
std
xor
lcall
clc
mov
ret
fdivp
jl
xor
pop
add
call
aam
scas
lcall
dec
xor
xchg
lahf
test
mov
pop
push
cmp
inc
inc
clc
lods
mov
sar
pushl
push
pop
add
mov
lds
aad
jmp
jns
push
cli
pushl
mov
and
lock
rcl
dec
cs
popa
inc
loopne
adc
sahf
or
call
dec
or
pop
insl
push
xlat
mov
fisttpl
popf
add
cmp
xor
pop
xchg
leave
add
sbb
fdivr
inc
mov
dec
insl
cltd
push
loop
mov
push
pushf
add
in
clc
inc
adc
cli
cmpsb
data16
outsl
dec
call
mov
nop
jecxz
push
push
pop
and
push
cmp
movsb
sbb
gs
pop
sub
ljmp
dec
jb
sub
mov
jp
les
jl
xor
ja
ret
pop
mov
mov
call
add
sub
pop
movsl
fsts
inc
xor
add
jg
push
pop
pusha
push
out
mov
in
clc
cmp
daa
mov
sub
cmp
popa
pop
int3
fistpll
cmp
sub
pushl
pop
dec
cmp
dec
popa
adc
dec
push
mov
push
lods
pusha
ds
adc
and
and
or
and
xchg
sub
fnstsw
lret
in
adc
mov
nop
xor
subl
arpl
int3
jle
inc
stos
jl
outsb
insb
ljmp
ljmp
dec
pop
shll
jb
outsl
add
inc
mov
mov
and
iret
jo
dec
cld
ret
sbb
movsl
data16
add
fsub
lods
jbe
fistpl
icebp
jns
jns
sub
mov
jno
ds
mov
divl
or
and
mov
cltd
ja
mov
xor
arpl
rcl
jb
clc
popf
push
rclb
call
mov
js
cmpsl
push
notl
jnp
add
cld
xchg
inc
jns
push
pop
push
hlt
aas
iret
pushl
pop
cli
lcall
xchg
xchg
push
fstps
lcall
call
mov
xor
popf
sub
adc
ljmp
into
lret
int3
pop
jne
ds
jmp
mov
stc
test
mov
ret
xor
inc
cmp
das
push
loopne
sub
fldenv
mov
lods
clc
pop
sbb
cmc
arpl
sub
fcomip
cmp
dec
sub
leave
adc
loopne
pop
hlt
xlat
xor
outsb
mov
cmp
nop
jo
cmp
into
insb
out
test
mov
inc
js
add
lea
mov
xchg
and
iret
cld
rolb
out
mov
test
arpl
cmpsb
outsb
adc
test
stos
sbb
push
bound
dec
outsb
or
out
and
pop
xchg
pop
add
call
pop
cmp
adc
mov
outsb
inc
or
mov
pusha
in
cwtl
mov
aad
ljmp
cmc
xchg
add
fwait
shl
shrd
or
xchg
call
jmp
mov
adc
sarl
push
in
cmp
rorb
mov
mov
add
mov
mov
loopne
lock
ljmp
dec
pop
push
repnz
adc
cs
je
in
jae
dec
pop
incl
mov
sbb
or
jno
add
add
lret
lret
xchg
aam
push
std
adc
iret
inc
negb
mov
outsb
lahf
in
cmp
aad
xchg
and
dec
adc
sti
fcmovbe
int3
xor
sbb
cmpsl
pop
pop
shlb
push
clc
mov
mov
cmpsb
into
push
and
cmc
mov
xchg
inc
sub
ds
dec
fs
popa
jg
adc
jb
sub
jae
cmp
rcl
daa
push
push
leave
pop
push
in
mov
stos
repz
cwtl
or
mov
ss
repnz
and
stos
xor
cs
push
or
pop
dec
hlt
inc
ret
add
mov
mov
cmp
mov
fs
fs
cmp
bound
inc
lahf
dec
sbb
stos
cmp
mov
adc
scas
jmp
mov
sub
rcr
cli
cmp
sbb
cmp
pop
mov
loopne
out
fiaddl
inc
lock
popa
dec
pop
popa
pslld
out
pop
pop
stc
and
mov
ss
push
sub
ss
icebp
faddp
push
sbb
mov
loopne
test
cmp
pop
or
jno
fcomip
xchg
ret
push
cmpb
sbb
ljmp
pop
push
jb
pop
pusha
sub
repnz
jno
or
movsl
mov
iret
and
imul
daa
xor
mov
dec
cmp
push
outsb
lock
mov
decl
das
mov
mov
push
adc
fdivs
in
ret
sub
rcrl
fdivp
pop
pop
mov
rcrl
fwait
scas
cli
mov
ss
pushf
inc
fimull
pop
out
and
fcomip
inc
xor
mov
mov
in
jle
out
mov
xchg
cmpb
lcall
or
dec
xor
dec
neg
mov
std
jb
aam
push
xor
sar
ljmp
and
mov
sbbb
and
xchg
dec
hlt
lret
and
aas
jmp
call
cmpsl
xchg
ret
inc
insb
sub
test
push
into
sahf
arpl
xchg
ret
jmp
repz
cmc
es
jmp
test
imul
mov
jo
dec
jle
mov
jge
add
and
sbb
jb
dec
inc
cmp
lcall
add
ret
xor
jne
push
pop
jnp
sbb
xchg
inc
cmpsb
sahf
sub
lock
mov
inc
call
and
sub
jno
xor
nop
lock
aam
es
out
dec
jns
push
xchg
fcom
in
nop
inc
push
or
scas
cmp
jecxz
into
stos
lods
inc
push
stos
aas
pop
addr16
add
and
ds
mov
lock
sar
lcall
pop
into
inc
fcmovu
lea
andb
mov
fidivrs
mov
lods
iret
pop
rep
pusha
jb
lods
jo
jbe
outsb
outsb
aaa
andb
and
test
jmp
aam
mov
and
loop
neg
repnz
enter
add
jge
xor
loop
mov
push
cmp
cmpb
repnz
and
fdivp
clc
rcl
push
inc
addr16
mov
lcall
fxtract
and
xor
jno
and
imul
dec
ja
ret
pop
xchg
adc
insb
fndisi(8087
push
sbb
jno
sub
in
and
jg
sbb
add
loopne
ss
mov
push
bound
ja
sbb
cmp
sti
fsubrs
inc
insb
lods
sub
push
in
xchg
lods
xchg
scas
fildl
mov
aam
push
jg
pop
hlt
push
jle
adc
fcoms
mov
stc
ljmp
fcomip
or
insl
pop
rolb
inc
call
lods
roll
loopne
xchg
xchg
jmp
pushl
popa
leave
jns
dec
je
hlt
dec
pop
mov
dec
and
test
mov
mov
loopne
mov
xchg
ja
mov
in
cmc
cmp
mov
add
push
jge
lret
loop
std
mov
mov
push
cmp
xor
insl
jbe
mov
cld
rol
xchg
sub
call
sbb
push
mov
addr16
inc
or
push
test
call
decl
repnz
fnstsw
bound
pop
jmp
pusha
jne
and
pushl
cld
decl
in
das
xchg
add
insl
aam
add
ljmp
push
sbb
cmp
or
pusha
dec
and
mov
push
lcall
xchg
movsb
xchg
fcomip
lahf
cmp
xchg
es
xchg
cmp
add
mov
aam
jno
inc
call
notl
sti
jns
enter
lds
xchg
mov
dec
aad
cmpsl
jle
clc
xor
mov
adc
mov
leave
and
ds
ret
xor
sbb
lret
orl
dec
repnz
sbb
test
add
or
inc
vcvtps2dq
push
call
xor
sub
stos
jmp
adc
dec
stos
and
pop
mov
jp
mov
sti
lcall
fwait
das
jmp
popa
xor
mov
and
shll
mov
clc
call
xchg
and
mov
imul
push
fs
add
xor
lcall
es
xorb
dec
pop
jl
hlt
out
leave
push
push
add
jle
pop
popf
xor
mov
sbb
bound
in
adc
leave
adc
jnp
push
scas
jmp
insb
pushf
mov
insl
and
and
aaa
sub
test
push
dec
jnp
and
test
call
inc
sti
dec
into
fs
push
outsl
sub
sti
scas
ret
xchg
lret
mov
movsb
cmp
sbb
inc
jge
and
sub
std
ljmp
push
xchg
inc
int3
xchg
sub
and
pop
fcmovnu
xchg
cmc
dec
xchg
fidivrs
xor
pop
cmc
mov
int
dec
out
sbb
mov
in
test
std
ljmp
or
cwtl
insb
test
jmp
fadd
or
pop
sub
xor
add
ret
scas
push
sahf
shlb
sbb
sar
sarb
adc
decb
and
lcall
mov
mov
jp
shrl
leave
cmp
or
shlb
incl
jmp
pop
mov
das
jae
dec
sahf
pop
adc
pop
stos
cs
sbb
or
mov
jmp
mov
repnz
and
decb
rorb
xor
sti
mov
test
rcrb
sub
rcll
in
jae
stc
dec
pop
clc
jmp
outsb
rcrb
enter
jns
dec
pop
stos
xchg
cmp
and
aad
aad
mov
sbb
sbbl
and
xor
shlb
aas
dec
fcomp
incl
jecxz
xorb
add
enter
jle
out
dec
push
gs
pushf
mov
repnz
call
xor
lahf
lahf
rorb
imul
nop
adc
pusha
in
pop
imul
push
xchg
pop
inc
icebp
in
cmpsb
cmp
cld
shl
sub
fldt
roll
pushl
mov
cmp
mov
cld
sbb
xchg
sbb
mov
sbb
popa
xchg
aas
dec
mov
jae
rcll
lods
mov
inc
stos
out
xorl
xchg
jl
in
aas
pop
xchg
add
incl
mov
jns
repz
pop
scas
into
mov
jns
pushf
inc
inc
scas
push
or
std
or
gs
imul
cld
test
mov
jecxz
sbb
in
nop
icebp
dec
lods
fimull
ret
xor
lcall
xor
xchg
adc
and
mov
ret
mov
push
xor
dec
subb
mov
in
ljmp
int
into
inc
or
inc
xor
push
pushf
arpl
pop
jge
movsb
mov
fisttps
push
sbb
push
aad
push
jne
mov
push
jg
lcall
jmp
and
jp
jle
int3
inc
test
jge
mov
lcall
push
cmp
mov
repz
mov
das
clc
call
jmp
fs
aaa
adc
aas
cmp
addr16
lahf
fisubs
ret
mov
sub
lcall
push
pop
jb
fistps
mov
out
pop
xchg
imul
cs
push
inc
cmp
rclb
fldt
push
push
outsl
pusha
ficoms
ljmp
pushl
sub
lds
or
ja
scas
fadds
cmc
sub
ljmp
sub
cmpsb
cmpsb
and
cmpsl
pop
repnz
mov
mov
or
test
jge
mov
aad
aad
dec
sub
or
jb
ljmp
mov
iret
call
rcrl
bound
and
cmp
out
dec
jb
sub
cmp
push
and
cwtl
jne
je
into
out
cmpsl
jge
mov
xchg
mov
call
ljmp
jle
sub
sub
push
pushf
leave
fiadds
std
decl
xor
mov
adc
xchg
mov
dec
mov
gs
add
fs
movsl
or
pop
scas
sbb
and
incb
mov
mov
dec
mov
inc
mov
cmpsl
test
rcrl
lret
mov
mov
aaa
iret
divl
inc
rolb
cltd
xor
rorb
sarb
add
cmpsl
mov
push
inc
cmp
xchg
push
jmp
lret
cmp
out
and
es
or
hlt
push
mov
shr
insb
rorb
fldenv
fildll
jle
pop
dec
outsl
mov
pop
jbe
pop
movsb
adc
jmp
add
ret
incl
fidivs
and
xchg
lret
mov
repz
ds
scas
xor
pushl
jge
add
pop
dec
inc
scas
cwtl
test
insl
jbe
lock
iret
les
push
jnp
jecxz
xchg
sar
dec
sahf
cmc
or
jo
jge
xchg
scas
cltd
dec
inc
dec
pushf
loop
adc
pop
add
jae
inc
adc
jb
icebp
dec
and
lcall
add
and
sbb
mov
xchg
hlt
pop
jmp
fidivrl
sbb
andl
out
mov
mov
and
aam
in
cmpsl
in
popa
sub
push
dec
mov
clc
repnz
data16
jg
fiadds
fs
fists
pop
fdivr
incl
cld
out
xchg
int3
sbb
add
bound
movsb
cmp
mov
sar
decl
xor
pop
mov
sbb
out
and
mov
repnz
std
xor
add
imul
and
inc
or
lcall
popa
cld
mov
add
fistl
pop
xor
icebp
xlat
outsb
adc
repz
pop
loop
les
lret
sbb
dec
jb
jle
outsl
mov
stc
add
bound
loopne
nop
inc
add
call
test
testb
outsl
cmp
mov
jl
mov
sbb
mov
pop
sarl
rclb
mov
fs
inc
outsl
xchg
inc
incl
jl
pop
add
clc
pop
mov
sbb
cli
dec
cmp
cmp
cld
mov
jno
cli
xor
dec
sbb
rcr
ret
sarl
addr16
fnstsw
xchg
sub
mov
imul
int
push
out
insl
push
jecxz
xchg
scas
mov
jl
xchg
outsl
pusha
mov
inc
jne
pop
call
ret
repnz
xchg
test
jmp
das
shll
xor
dec
xor
xchg
call
cwtl
pop
push
decl
cwtl
lock
cmp
push
inc
jg
aas
out
outsb
xchg
xor
sar
call
cld
add
shrb
shll
xor
sbbl
loopne
ret
incl
add
pushf
adcb
adc
out
adc
decl
decl
sub
pop
shlb
les
fisttpll
push
push
ret
lock
incl
push
or
iret
and
in
fdivp
pop
inc
adc
ljmp
out
lds
fnstcw
cmp
ret
mov
pop
inc
lahf
call
cld
mov
enter
cs
stos
add
mov
aas
subl
xchg
and
std
mov
push
or
dec
enter
in
cld
xor
dec
cmc
loopne
cltd
add
scas
adc
lea
pop
test
lcall
bound
lret
or
inc
je
das
xchg
in
shll
fsubrl
cmpsl
jae
xor
out
aas
shl
ljmp
adc
and
push
xchg
mull
lods
mov
pushl
fldl
pop
pop
jno
mov
shr
enter
cmp
fistl
das
stc
and
femms
mov
ljmp
adc
dec
scas
jns
mov
xor
cld
stos
jno
aad
lock
push
push
movsl
xchg
pop
aad
pop
movsl
dec
jno
dec
cli
mov
sub
int
into
in
movsl
push
je
pop
stos
jmp
out
jae,pt
lock
adc
mov
imul
mov
out
add
call
xchg
in
adc
mov
pusha
lcall
xor
loopne
shll
mov
testb
stos
cld
push
xchg
add
add
inc
adc
sbb
pop
mov
and
mov
jmp
jecxz
cmpsb
das
xor
aas
hlt
jle
test
xor
mov
pop
mov
js,pn
out
xchg
hlt
outsl
jb,pt
xor
mov
ljmp
inc
mov
inc
jb
fmull
movsb
inc
or
mov
push
call
aas
lods
dec
mov
fisttps
hlt
pop
sub
mov
fimull
aaa
mov
repnz
inc
lcall
jmp
stos
xchg
mov
sbb
mov
fwait
movsb
cmp
mov
mov
ljmp
cs
loope
movsl
pop
mov
out
ds
adc
rcrl
and
sbb
pushl
in
sub
cmpsb
mov
testl
sub
push
dec
or
cmp
xchg
push
mov
call
loopne
inc
mov
mov
mov
mov
jg
pop
cmp
pusha
add
sarl
pop
lretw
ja
lret
dec
cmp
test
addr16
push
mov
push
xor
stos
push
mov
jmp
sbb
xchg
mov
jbe
and
mov
stos
pop
pop
jo
fidivrl
mov
repz
jnp
mov
ljmp
pop
push
mov
test
pop
mov
addb
aam
lcall
mov
aad
insb
stos
add
jno
sbb
sub
mov
jl
mov
push
outsb
add
enter
inc
push
or
arpl
stos
and
jl
jmp
sti
movsb
in
or
inc
dec
add
mov
cwtl
iret
imul
mov
mov
mov
addb
or
push
fisttpl
test
repnz
movsl
aam
xchg
add
jbe
shrl
dec
les
lahf
sub
aaa
fisubl
mov
sbb
in
lcall
ds
push
mov
hlt
fadds
out
andb
mov
jge
jne
or
jmp
insl
mov
rolb
ja
dec
dec
pop
lahf
popa
leave
and
decl
roll
nop
fsubrl
and
push
pop
mov
pop
mov
lcall
jge
iret
jne
push
rcll
popf
add
mov
outsb
cmpsb
fwait
mov
out
out
into
jg
cltd
es
stos
in
popa
cld
jp
lods
push
jg
sub
stos
fcomps
dec
test
mov
icebp
aaa
sahf
orl
lods
push
mov
jmp
dec
push
add
lods
mov
lds
in
hlt
mov
add
stos
mov
ljmp
mov
pop
jns
mov
addr16
cltd
decb
dec
movsl
mov
jmp
icebp
fnstenv
icebp
rclb
push
leave
fdivrs
daa
cmp
adc
cli
push
inc
mov
pop
iret
nop
push
clc
push
lcall
fcmovnb
xlat
xor
js
mov
imul
push
mov
cld
lcall
in
setb
scas
adc
mov
pop
cmpsl
pop
mov
out
xor
jge
in
mov
lds
xor
adc
rcrb
rcl
andb
imul
jnp
loopne
mov
sub
inc
xor
cmp
inc
jnp
push
jnp
test
add
pop
ljmp
jnp
shll
sahf
and
or
int3
and
jbe
fbstp
stc
mov
shlb
jl
dec
mov
jle
iret
test
dec
xor
mov
outsl
int3
lcall
lret
jge
or
jb
dec
lahf
ljmp
cmp
sbb
push
push
daa
out
out
dec
pop
push
incb
push
test
xchg
xchg
out
mov
sarb
or
into
xchg
fs
insb
gs
xchg
mov
jg
push
pop
jb
ja
dec
xor
cmp
popa
push
in
ljmp
incl
adc
mov
cmc
iret
jp
scas
imul
cmp
sar
dec
cmp
cmp
or
adc
and
pop
cmp
pmaxsw
lcall
push
push
xor
ds
and
jns
mov
mul
jo
mov
fisubrl
sub
int3
ja
loop
jno
out
sbb
mov
xchg
call
movsb
sbb
jb
in
push
not
iret
imul
arpl
mov
mov
test
add
sti
and
push
clc
out
mov
jb
repz
or
ja
popa
cmp
mov
clc
inc
cs
cmpsl
sbb
stc
push
cli
cwtl
dec
data16
mov
push
lahf
adc
cmp
pop
in
cmc
or
jnp
and
jno
shlb
mov
push
cmp
call
xor
sub
push
insl
stos
stc
or
adc
cmp
sbb
inc
cmpsb
bound
incl
ret
fmull
lds
les
mov
pop
pop
les
cli
incl
xor
loope
sarb
add
outsl
ret
ljmp
iret
mov
orl
dec
scas
sbbb
es
push
xchg
popf
std
pop
scas
xchg
data16
add
out
mov
jl
cmc
pop
repnz
cmpl
es
and
pop
fwait
jne
mov
adc
decl
jge
repz
jo
repnz
inc
jl
aaa
push
insb
jns
pop
dec
data16
cmp
dec
fwait
test
cmp
sbb
cmp
push
lahf
mov
imul
sbb
jecxz
inc
xchg
iret
and
daa
cmpl
loop
lods
xlat
stos
mov
ror
mov
sub
mov
iret
pop
gs
inc
out
and
inc
test
test
push
stos
es
dec
mov
push
sub
xor
jb
fisttpl
cmp
ja
pushf
mov
adc
insb
push
pop
cmpsb
cmp
cmpl
dec
mov
adc
xchg
add
ljmp
icebp
xchg
call
cmp
xor
jb
sbbl
cltd
out
xor
ret
xchg
pop
call
xchg
fidivrs
ljmp
and
push
jb
sbb
xor
cvtps2pi
add
push
cmp
inc
cwtl
push
shll
push
pop
test
hlt
fdivl
fstps
jp
pop
xor
hlt
pop
fisubl
dec
adc
inc
sar
jg
mov
int
push
lret
mov
cmc
cmpsb
mull
cmpsl
pop
stc
arpl
loope
incl
push
mov
bound
hlt
mul
adc
push
mov
xor
mov
jg
mov
or
jmp
hlt
enter
cmp
and
push
inc
lea
jp
enter
mov
or
ljmp
pop
popf
dec
push
ljmp
sub
ret
inc
sub
lcall
push
push
push
pop
mov
cmp
fdivrl
jb
loope
ret
loop
in
aas
mov
ret
sbb
and
xor
outsb
fwait
dec
in
mov
lret
aad
mov
jge
jp
into
es
xchg
mov
in
mov
call
cmp
mov
xor
pusha
pop
adc
ja
or
xchg
xchg
xchg
dec
or
or
jle
add
adc
ds
fwait
imul
enter
call
lods
lret
jno
lock
mov
ror
lods
add
mov
popa
movsl
sub
pop
lahf
cmp
lcall
pop
roll
lods
mov
mov
mov
add
push
inc
lcall
ds
lcall
call
fsubrs
push
loope
lcall
mov
push
cmp
pushl
arpl
xor
mov
ss
cmpsl
adc
mov
pop
std
lds
test
jle
cmpsl
xchg
mov
cltd
pushl
aas
repnz
jle
in
enter
cmpsb
sub
enter
imul
mov
jmp
aam
popa
mov
mull
cwtl
inc
jg
xorb
sbb
lcall
mov
mov
mov
subl
add
arpl
lret
fists
jmp
ljmp
int3
aam
jns
add
std
xchg
ja
fldt
push
sbb
jmp
leave
and
sbbl
ret
gs
loopne
sub
cmpsl
clc
into
lcall
pushl
scas
ret
sbb
popf
adc
insl
push
jo
push
aad
in
xor
lcall
cli
out
mov
adc
jnp
dec
inc
mov
mov
sahf
das
xor
mov
mov
ficomps
lods
mov
add
test
and
mov
push
mov
and
jmp
js
rclb
data16
mov
into
sahf
jge
cmp
lods
scas
dec
sub
lcall
dec
cmp
or
sub
jp
jge
cmp
mull
fsubrl
imul
jno
in
mov
jp
pusha
dec
adc
or
lcall
mov
or
dec
jle
jle
fadds
pop
pop
insb
push
aaa
lcall
loope
jmp
outsl
mov
ret
stc
sub
push
jecxz
pop
pop
jecxz
fsub
out
lock
ficoml
ja
xchg
movsb
bound
mov
bound
ja
jle
pop
push
bound
ljmp
cmpb
in
mov
clc
dec
ficoml
jbe
imul
mov
out
fstl
mov
int3
call
jo
fcoml
xchg
adc
arpl
xor
jge
sub
xchg
data16
jmp
call
addl
mov
lea
and
xor
sbb
scas
clc
call
test
fidivl
add
popf
adc
add
fstp
jo
inc
jp
xchg
clc
mov
mov
cmp
mov
int3
pop
and
ljmp
mov
cmp
out
rorl
adc
bound
mov
inc
sbb
out
cli
xchg
aam
pop
jl
inc
lods
push
jge
test
js
stos
mov
js
test
push
cwtl
lods
insb
add
insb
and
xchg
dec
leave
in
dec
lcall
in
adc
mov
adc
dec
sub
js
popf
fwait
cmp
dec
xchg
movsb
stc
xchg
jmp
cmpsl
mov
int
out
xchg
sub
and
lahf
and
test
inc
arpl
sub
pop
xor
xor
pushl
in
sti
test
push
jno
bound
and
xchg
cmp
ficoms
loop
pop
push
popa
sub
xchg
movsb
inc
ljmp
mov
fwait
scas
xrelease
ljmp
cltd
xchg
aas
adc
out
pop
jo
imul
mov
lds
addr16
mov
in
push
jae
loope
ljmp
ret
and
lock
arpl
fcompl
stos
lods
pushl
sbb
jmp
in
sbbl
mov
push
stc
shl
mov
lds
push
rorl
jmp
call
mov
dec
fucom
cmpsl
mov
push
aas
ds
decl
cmp
enter
adc
sbb
jo
add
mov
imul
pushl
xorl
stc
jg
cmp
xor
je
lret
jle
adc
add
pop
and
je
ret
cmp
push
loopne
and
or
jmp
aas
in
mov
gs
push
fwait
sbb
mov
inc
sahf
int
or
cmp
lahf
dec
xor
fcomip
jmp
cmp
and
les
mov
mov
xchg
aad
dec
jl
cmp
dec
lods
and
test
incl
fs
outsl
sbb
adc
ret
pop
cmpl
out
jg
pusha
adc
mov
sub
xchg
pushl
jbe
mov
push
mov
mov
xchg
fbstp
and
mov
cmp
decl
jmp
dec
and
mov
pop
mov
arpl
pushl
int3
ja
cmp
ljmp
int3
fbstp
push
les
dec
pusha
jmp
flds
popf
repnz
in
jmp
add
add
mov
or
jecxz
pushl
xchg
rcl
shlb
test
outsl
outsl
or
pop
mov
mov
fdivrp
lcall
clc
xchg
lods
js
aad
or
je
and
daa
iret
push
dec
sbb
cltd
lods
mov
inc
incl
mov
fists
aaa
or
and
dec
add
mov
enter
ljmp
and
inc
cmp
lret
fs
push
jg
cmp
call
incl
mov
fimull
in
xlat
sub
sbb
sub
xchg
pop
fcos
ja
call
dec
lods
mov
sub
jl
pop
and
push
mov
mov
jbe
test
add
loope
add
dec
push
push
adc
inc
out
pusha
out
mov
mov
jle
data16
push
std
pop
push
out
cmpsb
in
aam
inc
lcall
pop
sub
mov
stos
inc
outsl
mov
and
jnp
cwtl
test
icebp
fsts
fmull
lds
jg
and
aad
jl
add
daa
mov
stos
notl
adc
jmp
in
jg
loope
insl
les
jae
cwtl
pop
stos
cmp
and
cld
xchg
cmp
ret
repz
arpl
cmpsb
mov
insl
dec
push
ret
add
adc
mov
xor
insl
jb
test
stc
ljmp
inc
adc
adc
sub
and
fsubp
lahf
jp
call
lahf
test
jmp
xor
sub
add
dec
jo
iret
or
inc
fsts
fldcw
je
iret
nop
pushf
mov
inc
pop
push
stc
popf
xlat
decl
fildll
or
or
jg
jb
sbbb
or
lcall
ret
fcmovnbe
xorl
out
pop
icebp
xorb
cmp
in
sub
pushl
adc
mov
cmp
mov
or
ret
loop
hlt
movsl
xchg
lret
and
jmp
inc
push
mov
xor
cld
ror
andb
mov
xor
popa
xlat
mov
fistpll
mov
icebp
or
mov
lcall
pushf
jge
push
orl
jecxz
push
subb
mov
jnp
lcall
xchg
mov
push
in
icebp
pop
cltd
jmp
ja
nop
lcall
push
lea
rcrl
xor
popf
scas
pop
push
in
inc
or
jb
test
jne
or
int
pop
adc
xchg
fsubp
int3
in
std
dec
scas
mov
lret
paddw
ret
pop
iret
sbbb
imull
mov
repz
xlat
decl
ja
ja
cwtl
mov
push
and
dec
add
or
sbb
jmp
cmc
inc
or
in
negb
xor
sbbl
fisttpl
xchg
mov
adc
call
popw
std
cwtl
cwtl
adc
leave
and
and
mov
adc
pop
xchg
mov
mov
decl
cmp
pop
cmp
enter
repz
mov
or
imul
and
aad
cmc
inc
mov
push
add
jl
xor
dec
out
addr16
stos
mov
adc
sarl
es
jae
insl
js
sahf
pusha
xchg
pop
inc
jns
gs
pop
and
divb
int3
scas
pushf
fsub
jb
test
outsl
cmp
loopne
xchg
insb
adc
shll
mov
decl
xchg
add
xchg
mov
in
rcr
test
pushl
and
out
pop
sub
sub
jl
mov
dec
ljmp
subl
test
shll
lcall
lcall
inc
sub
aad
inc
imul
sub
adc
shl
stos
inc
or
xchg
out
js
sbb
fsts
push
shrl
inc
mov
lds
not
dec
mov
adc
in
mov
xchg
sub
sarl
xchg
gs
hlt
decl
dec
in
fcoml
add
adc
mov
lock
mov
cmpsb
fcmovbe
sbb
arpl
mov
jg
int3
cmp
push
or
testl
scas
call
inc
mov
stos
inc
loop
pushl
jae
xchg
mov
xchg
push
outsl
movsl
sarl
mov
inc
and
fisubrl
mov
xchg
jg
insb
das
pushf
inc
jmp
cmp
push
sbb
jl
or
test
dec
jmp
and
cwtl
mov
pusha
and
jg
cltd
out
addr16
cwtl
adc
cmpsl
nop
jo
jp
jnp
scas
inc
fidivrl
loop
mov
clc
pop
dec
data16
sbb
mov
popf
sbb
incl
fadd
mov
sar
sub
mov
test
and
sub
daa
les
jecxz
scas
inc
stos
jo
sar
decl
inc
outsb
mov
mov
xchg
xchg
leave
and
mov
pop
sbb
jg
mov
add
loop
xor
mov
xchg
inc
pop
push
aas
cmp
movl
xchg
push
leave
nop
dec
rol
scas
outsl
ljmp
mov
mov
mov
lcall
add
push
push
jp
xchg
mov
shr
adc
mov
in
lock
decl
push
xchg
cmp
jne
ret
ljmp
stos
cmp
incl
dec
xchg
icebp
add
js
in
mov
mov
loopne
nop
into
repnz
incl
test
arpl
shrl
popl
jb
adc
data16
sbb
call
or
mov
out
clc
enter
push
lock
add
popf
push
js
pop
add
jmp
cmp
mov
inc
fisttpl
add
fnsave
clc
adc
popf
inc
sub
cld
jmp
lds
pop
loope
mov
lret
in
out
popf
cmp
cmp
xchg
mov
je
pop
imul
mov
jg
movsb
xchg
lods
lods
xchg
adc
xchg
in
mov
xchg
inc
pop
sbb
jg
mov
xor
sarb
adc
cli
jne
es
jl
aad
daa
push
lcall
cs
fdivrp
call
adc
fldcw
xor
pushf
inc
xor
cld
clc
push
inc
aam
add
ljmp
or
ja
adcl
cmpsb
popfw
enter
aam
sbb
xor
mov
jmp
sti
cmc
fsubrl
dec
test
ds
testl
dec
or
hlt
decl
push
adc
push
dec
hlt
icebp
cmc
shlb
xor
xchg
inc
repnz
fwait
daa
pop
jns
ljmp
in
cld
and
paddsw
inc
and
or
push
cltd
dec
in
pop
mov
xlat
decl
call
stos
hlt
adc
pop
sti
push
out
pop
adc
aaa
xchg
push
sti
out
sar
aad
aam
push
xchg
cmpsb
mov
cs
std
movsl
fimull
pop
aam
cmp
push
les
pushf
jns
mov
aaa
sub
or
push
push
mov
lret
cltd
jno
stos
pop
mov
mov
shr
xchg
xchg
aas
test
pop
mov
mov
sbb
clc
or
mov
rclb
xor
dec
cmc
jmp
pop
cmp
mov
mov
xlat
pop
jo
les
ljmp
sub
lods
jle
mov
scas
mov
jmp
insb
jb
add
push
adc
push
incl
push
notl
insb
leave
fcoml
mov
ljmp
or
mov
call
std
sbb
sub
popa
cld
in
aas
shll
jge
ja
push
mov
decl
mov
inc
push
sarl
add
cwtl
in
or
in
or
call
test
std
dec
cltd
lret
fidivs
jb
xchg
jmp
shl
pop
test
mov
rcrl
int3
dec
jge
and
xchg
dec
mov
leave
mov
cmc
mov
push
incl
push
pop
inc
adc
mov
lds
dec
scas
fimuls
decl
jp
pop
cmpsb
sbb
inc
popa
imul
push
shr
jne
in
iret
adc
aam
daa
fcoms
inc
addr16
sarl
and
popa
sbb
or
xor
call
xchg
mov
pushl
jno
lds
dec
mov
das
es
cs
xor
and
sbb
sbb
dec
dec
mov
scas
mov
cli
hlt
test
in
sub
push
inc
inc
ds
dec
cmc
std
mov
inc
mov
or
push
arpl
inc
mov
clc
pop
icebp
cmpsb
dec
mov
dec
mov
stc
sahf
int3
pop
push
mov
pushf
repz
or
mov
xorl
es
dec
jmp
lcall
lret
push
cmp
sub
push
popf
das
arpl
and
mov
loopne
sbb
nop
test
es
mov
in
cmp
aaa
adc
shrb
movl
jg
sub
sub
xor
fs
push
mov
add
ret
incl
sbb
pusha
faddl
and
add
jmp
cmp
daa
inc
shll
lret
push
or
or
mov
sbb
movsb
jns
push
pop
jge
icebp
dec
shrb
mov
imul
test
adc
sub
in
das
pop
pop
shlb
jp
dec
std
out
fistl
mov
inc
mov
clc
call
lods
call
mov
test
pushf
imul
jl
ljmp
mov
lret
movsb
daa
jmp
imul
sbb
repz
fisttps
arpl
and
stos
xchg
mov
movsl
ljmp
mov
clc
fldcw
cmp
repz
lret
iret
shl
mov
test
lcall
adc
and
xchg
hlt
push
xor
and
fwait
decb
lock
fisttpl
inc
jbe
push
jbe
lahf
nop
fcompl
inc
cli
call
ljmp
xor
adc
pop
mov
push
cld
pusha
push
mov
sub
enter
xlat
fiaddl
xchg
mov
sbb
jb
push
dec
push
loope
out
rclb
sti
jl
xchg
popa
rcll
notb
lcall
pushf
sub
fldz
scas
stc
call
xor
mov
sti
enter
stos
pop
push
inc
insl
mov
mov
mov
jp
fsubl
dec
arpl
das
adc
mov
ret
insl
inc
data16
push
jbe
das
cmpsl
cmp
mov
push
dec
hlt
and
jg
ljmp
loop
iret
xor
in
jg
jg
pop
stos
call
popa
fwait
push
aam
cmp
in
ja
imul
jnp
into
adc
dec
or
fimuls
dec
inc
inc
push
mov
and
pop
ds
sahf
pop
mov
pop
xchg
cltd
loope
addr16
pop
ret
pop
stos
fdivr
mov
dec
push
popa
imulb
stc
mov
sahf
insb
jae
clc
xchg
jmp
add
aad
cmp
aas
leave
xor
mov
sub
push
mov
fmuls
mov
cmp
je
jg
jmp
enter
rorl
jp
cs
gs
or
mov
arpl
aam
push
imul
dec
adc
jmp
rcl
ja
pop
cwtl
push
inc
mov
mov
inc
jecxz
inc
addl
xchg
fildll
je
fistpl
in
lret
dec
fistps
cmpsl
lock
mov
mov
push
inc
sbb
stos
fwait
fstpt
cmp
nop
mov
push
fiadds
pushl
fisttpl
sbb
cwtl
cmpsl
shl
jae
dec
out
mov
mov
jmp
incl
imul
push
dec
lods
aam
xor
cmp
stos
aas
mov
decl
fisubl
ss
daa
push
pop
xchg
dec
cmp
xchg
sbb
cmp
loop
bound
xchg
cmp
aam
add
mov
cwtl
out
dec
insb
in
dec
xchg
sub
cli
and
stos
fidivrs
add
pushl
rcrb
das
jp
fbld
mov
mov
push
push
shrl
ljmp
cli
shrb
outsl
imul
add
repz
xchg
pushl
inc
jecxz
mov
dec
xor
je
movsl
jge
inc
adc
movsb
fisubs
mov
push
dec
and
or
int
ja
outsb
xor
push
mov
into
outsl
xor
call
dec
loop
sbb
adc
fld
out
xor
bound
aam
dec
ljmp
jbe
jmp
mov
iret
pop
stos
inc
inc
pop
push
enter
push
lds
rclb
or
subb
stc
pop
cwtl
loopne
xor
icebp
jns
in
dec
mov
lcall
jae
mov
cmp
enter
in
je
adc
in
xchg
mov
jg
incl
mov
xchg
mov
adc
andl
ss
lret
lods
cmc
or
incl
mov
xor
imull
test
mov
push
sahf
pop
mov
pop
lcall
pop
or
call
mov
jbe
jbe
sbb
inc
cmp
adc
js
adc
out
rcl
aaa
lcall
ja
in
loopne
adc
mov
psubusw
outsb
jmp
push
andb
cmp
nop
fidivs
pop
mov
push
xchg
jmp
daa
int
jae
inc
lea
fiaddl
sub
daa
in
xchg
cmpsl
cld
decb
aas
test
and
pslld
jae
outsb
jmp
mov
cmp
iret
fwait
mov
loopne
pushl
adc
push
xchg
add
data16
into
call
insl
lock
push
inc
decl
adc
jmp
iret
add
inc
jo
jp
ja
inc
icebp
cld
dec
sbb
roll
das
jns
adc
imul
dec
daa
mov
rorb
xor
pop
mov
imul
pop
dec
inc
inc
bound
fisubrl
out
sbb
loop
sub
outsb
dec
fstl
mov
mov
push
cmp
jb
inc
cmpb
mov
mov
jg
ret
or
lock
les
cmp
pushl
cwtl
dec
mov
sub
cwtl
push
or
mov
aaa
xchg
daa
andl
scas
mov
jno
ljmp
call
dec
mov
lods
inc
pop
mov
mov
rolb
lcall
or
stos
movsl
sbb
je
adc
aam
fistps
bound
ljmp
loop
and
outsl
adcl
cmpsb
dec
sub
pushl
ret
mov
jo
fadds
shll
dec
cmp
addl
or
sbb
adc
cld
cs
testl
icebp
push
push
arpl
decl
xlat
pushf
mov
dec
pushf
fmuls
dec
out
in
xchg
mov
fadds
pop
mov
ljmp
push
stos
push
rolb
pop
jae
xor
add
addr16
out
pop
xchg
sbb
or
sbb
lds
cwtl
cld
fsts
jne
and
scas
fbld
mov
outsl
inc
mov
mov
inc
stos
loopne
fstpt
pusha
mov
sub
cwtl
in
sub
incl
xor
adcl
push
popa
mov
push
sbb
lahf
aam
dec
and
and
add
adc
inc
shr
lcall
inc
movsl
fucomi
mov
push
in
cmp
aas
nop
or
incl
add
into
jl
es
repnz
mov
lea
fst
and
cmp
push
stc
mov
cli
pop
or
jl
dec
test
mov
dec
insb
inc
sbb
push
shr
bound
ss
mov
add
call
dec
inc
rcrl
add
mov
jbe
lods
mov
dec
pop
hlt
and
fdivr
add
mov
mov
push
seto
cmp
aad
shll
jbe
and
icebp
incl
and
loop
lods
adc
cmp
outsb
and
cmp
pushl
les
insb
jmp
jp
inc
jne
insl
daa
jno
mov
mov
mov
xchg
pop
mov
fsubl
sub
mov
notl
cli
pushl
ret
or
fwait
imul
dec
and
jne
pop
cmp
test
jmp
and
push
add
outsl
and
cld
mov
incl
sub
dec
mov
test
jae
dec
je
lds
incl
lahf
mov
test
dec
dec
imul
xchg
xchg
inc
push
push
push
fcomip
ljmp
inc
cmp
pop
xchg
push
xor
push
sub
pop
sarl
neg
push
fldenv
incl
cld
ljmp
mov
decb
mov
push
or
lret
decl
popf
outsl
dec
leave
add
mov
aas
cmp
mov
add
jg
or
or
mov
push
jns
bound
hlt
cmp
js
rcl
int
int3
negl
cld
jnp
cmp
gs
add
inc
cmp
add
inc
jo
jae
mov
stos
lea
pushl
fstl
xchg
hlt
mov
aam
popf
mov
pop
xor
sbb
mov
ljmp
mov
pop
mov
jmp
sahf
dec
mov
xchg
add
and
lods
dec
ljmp
cs
push
pop
pop
sbb
ret
popa
push
int
and
adc
mov
mov
outsl
and
jno
gs
aad
pop
mov
jg
decl
in
and
push
lock
pushf
cmp
fldcw
mov
add
sbb
or
sahf
push
inc
in
mov
pop
adc
jne
sar
call
push
popf
xchg
lret
mov
pop
js
inc
adc
leave
jo
in
mov
ljmp
adc
or
movsb
in
std
cltd
lcall
dec
mov
out
xor
jle
ljmp
xor
test
jne
mov
mov
sbb
sub
pop
decl
inc
dec
shlb
pop
in
fists
xchg
pop
out
gs
sub
sti
shl
icebp
mov
call
cmpsb
add
and
jecxz
push
test
cmpl
mov
ljmp
push
sub
icebp
dec
into
sub
sbb
daa
cmp
lret
cli
sbb
repz
jns
in
mov
jecxz
jle
imul
push
sahf
pop
cmc
add
mov
mov
add
or
mov
das
push
in
flds
xor
ljmp
mov
dec
imul
cmp
pop
sub
lea
dec
aam
pop
xor
pop
mov
mov
sub
cli
test
fdivr
mov
sbb
fdivr
push
push
sub
roll
xchg
cwtl
or
mov
sbb
mov
ret
cmp
cld
mov
mov
cmp
call
popf
or
jecxz
jecxz
dec
loope
aas
or
dec
movsl
push
and
loop
call
ret
or
popf
or
mov
xchg
fsubrl
push
inc
cmc
addr16
adc
inc
jle
cmpl
add
add
inc
fisubs
sub
nop
adc
and
aam
in
xchg
jle
dec
push
mov
lcall
rcrl
inc
xchg
in
fnsave
sub
sti
push
pop
loopne
inc
add
xor
incl
aas
jp
pop
fbld
cld
std
cwtl
test
mov
sub
sbb
mov
pushl
stos
fwait
idiv
or
addr16
dec
gs
push
nop
push
ds
inc
inc
stc
lret
fstl
pushl
cmp
or
sub
lds
mov
cmp
ljmp
cmp
cmpsb
inc
inc
cmp
js
push
add
cmp
adc
arpl
in
call
in
sbb
loop
mov
insl
sub
int
testl
xlat
inc
or
pop
hlt
ljmp
sub
shrb
fdiv
lcall
mov
in
loope
jmp
mov
sub
dec
push
xchg
lahf
in
and
subb
adc
cmp
loop
cmc
fdivl
std
pop
shl
pop
addr16
adc
fidivrs
add
push
inc
stos
scas
out
push
jne
das
sub
rorl
mov
lcall
pop
mov
popf
insb
xchg
insl
stos
decl
cmp
xchg
mov
lock
mov
pop
fwait
jo
dec
int
mov
sub
ja
sbb
jbe
pop
adc
sahf
cmp
rorl
in
incl
js
lcall
pushf
mov
sub
or
mov
cmpsl
dec
std
jmp
cmp
and
ljmp
xchg
fdivrs
jb
or
int3
push
and
mov
sbb
call
jge
pop
scas
xchg
cmp
jl
jmp
pushf
mov
push
enter
mov
mov
test
dec
add
fisttpll
dec
adc
icebp
mov
cmpsl
daa
rorb
pop
jg
mov
adc
test
mov
xchg
push
push
and
movsl
fwait
ds
add
xchg
jp
mov
decl
enter
mov
test
mov
out
stc
cs
fidivl
pop
push
push
decl
cmpsb
xchg
dec
test
fucom
jbe
pushl
in
add
inc
and
and
mov
in
or
jle
add
incl
cld
mov
mov
jmp
ficoms
mov
jecxz
pop
jb
shll
incl
stos
cmpsb
sti
lods
cmp
fcmovbe
lahf
inc
lret
xchg
rolb
add
in
call
mov
adc
div
repnz
and
push
cmp
xchg
lea
cmp
sub
dec
sub
xchg
inc
sbb
mov
inc
add
or
push
push
mov
mov
sbb
popl
ljmp
and
test
ja
in
cltd
lcall
cltd
test
or
jne
pop
cmpsl
pop
inc
xchg
pop
dec
mov
add
rep
xor
dec
shlb
sub
jecxz
cmc
xchg
mov
test
int3
insb
loopne
add
in
xchg
hlt
lcall
cmc
andl
xchg
sbb
jnp
shlb
ds
pop
aam
cmp
imul
fnstsw
mov
dec
sub
cmp
inc
mov
call
pop
dec
sub
in
or
cmp
call
rol
sar
faddl
shrl
das
and
xor
and
push
jo
inc
fidivrs
daa
aas
lret
ljmp
jno
lahf
lea
adc
push
mov
loopne
cmp
mov
movsb
cmpsl
xchg
or
mov
sbb
loope
sub
cmp
ljmp
xchg
cmc
and
fwait
data16
mov
pop
inc
mov
out
mov
sar
scas
rol
xchg
repz
xorb
pop
xor
cmp
out
ret
lret
fmul
mov
cmp
popa
pop
leave
out
test
sub
pop
jecxz,pt
jl
jb
lcall
jae
sub
push
dec
lret
pop
outsb
enter
jecxz
mov
pop
rcrl
scas
sti
decl
xor
adc
ret
mov
out
push
cmp
out
lock
pop
xchg
mov
pushl
xchg
pop
jbe
je
ss
dec
iret
fsubrs
pop
cmpsl
mov
orl
incl
movsb
pop
jo
js
icebp
movsb
pop
cli
loope
mov
aad
cmp
sbb
hlt
sar
lcall
cltd
pop
das
xchg
ret
ror
mov
mov
and
inc
icebp
je
add
jg
cmpsl
in
fimuls
adc
scas
pop
pushl
pop
imul
push
inc
push
push
mov
leave
lea
push
xchg
imul
xlat
xor
xchg
mov
sbb
dec
stos
stos
out
fmuls
mov
mov
lock
mov
or
ja
leave
inc
cmpsl
subl
lcall
pop
insl
mov
aas
fldenv
jecxz
fisttpll
aaa
movb
mov
sahf
mov
incl
mov
dec
jae
xlat
int
pop
fstps
mov
orl
cmp
xorl
fldcw
inc
push
lret
out
ds
push
into
sbb
cmpsb
sbb
xchg
inc
mov
sbb
push
dec
loop
cltd
lret
cmc
dec
pop
mull
cmpsl
imul
enter
hlt
sub
jg
sub
fcmovb
jb
mov
inc
pop
jle
hlt
adc
adc
inc
imul
ljmp
or
and
adc
data16
pop
ljmp
mov
add
fdivs
and
popf
bnd
xchg
divl
arpl
data16
lcall
sbb
test
push
xchg
mov
aad
xorl
popf
or
cltd
sbb
sarl
ljmp
mov
rorl
push
outsb
fmull
pushl
and
push
mov
inc
mov
leave
xchg
arpl
dec
test
inc
cld
dec
or
mov
jge
push
add
dec
fisubrs
dec
shrl
lahf
jg
add
mov
ljmp
movsl
add
jb
lock
decl
or
push
jo
fmul
add
mov
mov
and
xor
dec
incl
cld
fistpll
pop
pop
mov
add
pop
mov
sarl
dec
pushl
data16
pop
in
push
test
or
and
nop
jmp
cmpsb
xchg
dec
stc
sbb
jg
ret
and
adc
rcrl
and
xchg
mov
jno
inc
out
call
sub
adc
inc
mov
adc
adc
inc
testl
rcr
xchg
xor
push
in
mov
int3
fsubs
dec
clc
incl
lahf
push
fdivr
lods
and
pushl
cld
jecxz
add
jge
cs
sub
adc
cmp
sbb
ljmp
imul
inc
push
loope
ljmp
cld
pushf
test
sbb
add
jmp
jne
insl
movsb
je
jmp
sbb
xchg
incl
cli
jae
aad
mov
lea
mov
jp
add
arpl
lods
mov
pop
lcall
out
lea
test
mov
iret
cli
push
jns
jmp
fisubl
fwait
outsb
mov
add
pusha
mov
sarb
enter
or
loopne
notb
test
sbb
add
mov
dec
sbb
add
lock
pop
mov
pop
nop
insb
rcrb
jg
sub
inc
cmp
xor
pop
pop
js
pop
fwait
lret
outsb
sub
into
lcall
fnstcw
inc
shrl
inc
lods
add
push
jae
dec
popf
pop
stc
popf
mov
ljmp
push
out
pusha
xchg
xchg
popf
adc
jge
dec
inc
add
ret
sbb
push
jg
jge
xchg
add
push
cmp
jne
xlat
cmp
cs
call
divb
gs
adc
dec
fsubrl
mov
cltd
jge
pushl
push
aas
loopne
pusha
sub
iret
test
pop
jns
out
or
rcrl
and
js
jl
xor
inc
mov
ljmp
inc
les
int3
xor
adc
sub
sbb
mov
lcall
jle
mov
inc
sub
dec
mov
dec
or
and
test
sub
push
stos
aam
inc
or
mov
incl
inc
mov
pushf
jbe
mov
jb
mov
push
into
outsb
adc
clc
ja
addl
aas
push
or
cltd
popa
pop
ljmp
push
mov
mov
pop
push
mov
test
pop
shlb
add
lcall
ret
sub
sbb
into
adc
mov
iret
mov
dec
mov
ficoms
rorb
ds
lods
and
fdivrs
dec
sbb
cld
inc
dec
loop
add
in
cmp
mov
scas
push
cmp
and
mov
test
xchg
fwait
call
or
push
jp
cmc
inc
or
nop
lods
orl
cmp
fsubrl
decl
pop
lea
out
jb
push
jg
lods
inc
push
jb
decl
popa
cmpsl
outsl
sbb
cwtl
mov
or
sbb
xchg
sbbb
fiaddl
decl
fcoms
addb
push
ja
adc
ljmp
push
jp
jl
jle
test
mov
inc
fmul
shlb
dec
add
pop
aaa
mov
lret
shlb
mov
cmp
std
jbe
test
xchg
cmp
sub
push
xchg
popa
lock
shrb
inc
out
lret
mov
mov
lea
inc
inc
pop
push
invlpg
ret
sub
daa
cmc
and
or
cmpsl
mov
jb
decl
lock
rol
shll
movsb
adc
mov
xor
or
mov
decl
sub
inc
test
sbb
and
and
dec
call
jg
inc
fcompl
ss
push
popf
fistl
push
stos
shll
jmp
sub
mov
push
pusha
jae
dec
xor
test
pop
or
dec
cmp
mov
sub
je
xchg
dec
insb
int3
out
cmp
jmp
in
push
xchg
stos
das
cmp
repz
xorb
std
pop
push
enter
rolb
push
fwait
push
jo
pop
inc
clc
nop
leave
jne
push
sub
ss
mov
out
pop
mov
mov
loop
adc
cmp
call
je
ror
fadds
mov
sub
and
push
add
pop
jo
dec
psllw
mov
mov
lods
orl
sets
imul
push
inc
inc
push
jb
xor
and
fwait
cmp
adc
les
push
ljmp
pop
pop
adc
icebp
fcomip
lcall
xchg
push
sbb
mov
repz
pop
add
mov
call
adc
pop
mov
dec
xor
out
dec
push
or
shrb
add
mov
out
out
sbb
scas
test
in
cmc
sbb
dec
and
sbb
stc
imul
loop
push
mov
dec
stos
dec
inc
or
insl
push
push
mov
addl
cmp
pop
dec
movsl
cmp
call
xlat
mov
jmp
in
or
sahf
mov
mov
add
push
push
and
rorb
mov
mov
pop
bound
mov
push
push
xchg
scas
out
xchg
ja
cmp
in
addr16
mov
das
add
pop
push
dec
push
add
scas
nop
test
ja
dec
data16
in
leave
xor
jo
outsl
push
mov
fdivrs
sbb
loop
leave
mov
stos
call
mov
xchg
pop
pop
cmp
pop
cmc
bound
push
rcrb
push
outsl
rcl
repnz
xchg
adc
lcall
xchg
pop
rcl
shrl
loop
in
test
and
orb
daa
lcall
mov
aam
cmp
or
shrl
std
loopne
inc
mov
ud2
decl
aas
lods
in
mov
mov
int
in
in
ljmp
cs
lcall
fst
decl
push
push
jle
addl
mov
out
ja
adcl
bt
xchg
rorb
add
and
cmpsl
pop
mov
ja
repnz
mov
arpl
ljmp
test
jmp
jecxz
fwait
pop
jnp
in
ss
in
repnz
leave
xchg
jmp
inc
scas
insb
mov
mov
sbb
xchg
add
dec
or
push
loopne
pop
loop
add
into
mov
pop
dec
loopne
inc
or
jge
mov
hlt
fldl
jne
aaa
mov
add
sub
or
sub
data16
jbe
cld
call
jnp
jge
icebp
inc
fwait
dec
or
les
cmp
xor
lcall
imul
adc
xchg
lcall
rcrl
pop
push
std
in
movsl
ud0
and
dec
or
cmpsb
xor
mov
xchg
or
adc
pushl
aaa
jnp
pop
es
aas
and
arpl
mov
mov
adc
mov
pushl
mov
mov
sub
lods
ja
movsl
xor
pop
adc
mov
jmp
orl
je
add
lcall
mov
mov
jae
jbe
lret
nop
sahf
test
test
dec
sub
pushl
rolb
push
in
nop
ljmp
cmpsl
add
js
jg
pushf
test
xchg
adc
xchg
stc
pop
jmp
jnp
mov
daa
push
imul
nop
dec
rclb
loop
lret
xchg
dec
cwtl
outsb
cld
stos
ja
imull
dec
faddl
xchg
jg
or
data16
add
loope
push
sbb
mov
fistps
into
test
fucom
xchg
mov
xchg
jecxz
popf
push
push
pop
aaa
aas
shrb
dec
imul
xchg
jo
lds
mov
and
mov
shrb
and
mov
sub
xlat
push
mov
ret
cmc
add
mov
clc
and
push
lahf
adc
daa
jmp
fmull
daa
add
push
in
into
test
cmp
stc
push
jns
push
subl
inc
rorl
inc
push
sbb
decl
jmp
push
pop
in
mov
pushf
imull
adc
hlt
mov
dec
pop
adc
ss
sub
test
out
int
addr16
lcall
fstpl
inc
and
stos
cwtl
xchg
movsl
enter
push
push
dec
pop
push
sub
add
jae
or
jg
decl
int
outsl
dec
mov
lds
call
dec
or
mov
test
shlb
daa
icebp
ljmp
ds
jmp
enter
aam
sbbb
jnp
or
jbe
insb
xor
mov
jge
push
mov
orb
rolb
push
imul
cld
out
nop
shll
in
jp
movb
je
fisttpl
inc
ja
pop
repnz
jns
adc
call
add
fisttps
js
xchg
jl
adc
cmp
dec
lea
out
mov
push
adc
mov
shll
push
and
dec
ss
pop
cmp
sub
loopne
mov
cmp
xchg
mov
mov
push
ljmp
cmp
dec
fsubs
add
cmp
or
ljmp
hlt
sub
mov
and
sub
sbb
sub
out
add
jmp
mov
jne
shll
add
movsb
mov
fldenv
loope
lock
jp
hlt
pop
ret
xchg
ret
scas
popf
stc
xchg
test
jg
aam
mov
mov
mov
shll
and
dec
icebp
cmp
call
cmp
ss
sbb
sti
pushf
jae
sbb
jle
loop
dec
or
push
mov
jmp
sbb
sub
orb
or
pop
in
pop
negl
mov
mov
mov
insb
addr16
mov
test
cmp
push
dec
add
jbe
cmp
inc
dec
push
adc
scas
adc
mov
arpl
inc
add
cmp
lret
ss
stos
jl
fadd
sbb
sti
mov
out
push
pop
mov
or
out
sub
in
or
jnp
xor
mov
xchg
int
xchg
mov
popa
inc
inc
loop
sbb
adc
sahf
enter
cmc
mov
xchg
xchg
mov
and
xchg
jb
mov
dec
mov
out
jg
je
dec
shl
out
fsubrl
dec
inc
sub
into
pop
and
test
lods
mov
xchg
xchg
incl
fcmovnu
mov
or
cmp
add
out
out
xlat
call
jae
clc
inc
lret
scas
clc
push
test
sbbb
inc
or
xchg
mov
and
cmpsl
enter
decl
mov
jns
mov
add
pavgb
add
sub
cmp
ret
mov
push
lods
mov
out
jb
lods
add
call
hlt
mov
mov
xlat
mov
mov
push
and
pusha
dec
pop
lcall
std
movsl
data16
jb
mov
adc
insb
inc
sub
fyl2x
push
mov
rol
cli
call
jbe
dec
cld
push
xor
inc
adc
fs
popf
pop
dec
cltd
xor
sar
ljmp
xchg
dec
scas
xchg
or
je
or
jecxz
lods
clc
sub
mov
add
cmc
push
sbb
xor
inc
lock
push
mov
inc
xchg
incl
shrl
out
lods
mov
jnp
inc
xchg
idivb
cld
dec
orl
data16
incl
cmpsb
or
mov
loop
js
jne
xchg
and
add
xor
sbb
call
sbb
dec
lcall
cwtl
dec
ds
cmpsb
sub
mov
mov
mov
stos
lock
sbb
sbb
mov
ljmp
out
cmp
jmp
xchg
xchg
dec
jp
jmp
xchg
insb
mov
xlat
call
mov
adc
and
test
cld
cmp
mov
sub
mov
jg
lahf
mov
mov
stos
outsl
lods
jbe
pop
or
cmp
imul
dec
mov
ljmp
aad
lea
repz
xor
ljmp
mov
call
ss
sub
mov
lahf
jo
cli
xor
mov
or
mov
incl
sbb
je
jo
xor
and
lock
stos
inc
outsl
ljmp
adc
das
ja
mov
movsl
lahf
fcmovne
xchg
fidivl
test
pop
jmp
mov
push
stos
push
in
in
jp
sbb
xcrypt-cfb
cmpsl
arpl
incl
in
aas
bound
xchg
stos
sbb
jge
push
and
out
fucomip
sti
fnstenv
mov
adc
ljmp
jmp
dec
xlat
gs
incl
negb
out
or
data16
scas
jmp
pusha
repnz
insl
inc
xor
jg
test
cmp
dec
in
mov
lcall
jns
ljmp
lds
adc
push
dec
dec
into
xor
pusha
aas
leave
lahf
icebp
scas
cmp
jmp
mov
pop
sub
push
sbb
jp
repz
mov
int3
xchg
mov
cwtl
aam
sti
daa
push
jmp
hlt
popa
pop
inc
dec
xchg
jbe
xorb
addb
xchg
aaa
mov
xor
sbbl
js
cli
xchg
add
popa
or
stos
mov
or
jbe
inc
outsl
pop
out
sub
lcall
push
in
ret
or
xor
jne
and
es
sbb
mov
jo
push
orl
icebp
inc
pop
dec
popf
mov
fs
fcomip
mov
pop
push
cld
cmpsl
out
push
stos
mov
nop
mov
jecxz
jmp
ljmp
les
stos
adc
lea
and
fistpll
pop
mov
or
jg
adcl
jmp
jbe
lahf
sub
inc
shlb
in
lret
ljmp
pop
sbb
les
pop
mov
inc
daa
adc
pop
push
sbb
cltd
pop
sbb
fimull
std
adc
push
sub
lret
xor
std
xchg
and
fbld
jne
and
xchg
dec
mov
stc
rcrb
mov
push
scas
or
ds
jb
in
mov
push
and
arpl
push
shlb
aad
dec
push
cld
call
addl
mov
fwait
jge
sbb
and
lahf
lahf
dec
lods
add
hlt
jg
add
sub
fsubl
lcall
ss
xchg
push
test
mov
jns
mov
mov
and
aad
pop
mov
test
in
cmc
arpl
push
jmp
mov
xor
int
idiv
imul
sbb
fsubp
sahf
cmp
jg
adc
jno
add
loop
push
xchg
xchg
imul
pushl
mov
mov
sub
pop
push
repz
daa
repz
jns
mov
ret
ret
mov
rcr
stc
insl
mov
jae
jp
jg
fs
ds
mov
or
xchg
daa
pop
int3
cltd
sbb
leave
popa
gs
pop
sarb
xor
incl
mul
mov
and
mov
loop
fmull
jmp
in
sbb
ror
iret
mov
jg
test
call
push
jne
jne
rol
mov
dec
pop
aam
data16
dec
mov
cmp
mov
repz
adc
sbb
jg
bound
call
int
cmpsl
mov
push
cmp
mov
and
es
call
xor
std
int3
loope
mov
inc
xor
lea
clc
push
mov
mov
decl
xlat
mov
push
int3
movsl
lar
mov
mov
les
lcall
loop
repnz
pop
cli
pop
lret
xor
rolb
cmp
jns
adc
push
ss
fsub
xor
int
mov
jne
popf
lds
jns
pop
push
fsubrp
xchg
and
mov
mov
ret
pop
adc
and
and
stos
sbb
ds
add
mov
incl
cld
jle
cli
cwtl
ds
fisubrs
loopne
call
xchg
push
jns
imul
hlt
dec
inc
push
add
push
cmp
add
fucomi
add
neg
add
add
or
pop
pop
push
or
in
outsl
or
or
or
or
adc
adc
push
adc
adc
xlat
decb
pop
sbb
adc
adc
adc
add
data16
lock
mov
or
rolb
or
pop
and
xchg
jle
adc
add
movb
add
sub
xorb
jb
out
sbb
add
add
push
mov
call
push
popa
pop
and
xor
inc
mov
adc
xor
cmpb
dec
add
xor
adc
add
aaa
push
inc
fisubl
daa
xchg
add
or
xchg
add
mov
xchg
test
xor
inc
or
push
add
add
dec
inc
dec
and
sbb
out
and
mov
scas
cmp
adc
loopne
mov
push
pop
popa
jno
and
adc
mov
subl
jle
and
push
lock
loope
icebp
mov
add
or
mov
pusha
and
add
js
inc
in
ja
pusha
std
or
lock
adc
sbb
cli
and
mov
inc
xor
mov
cmpsl
xor
mov
test
pop
lahf
mov
jecxz
cli
pop
mov
aas
or
push
stc
or
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
ja
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
jmp
or
sub
mov
adc
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rorl
incl
fwait
movsb
jmp
push
lret
push
out
in
and
outsl
fists
or
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
add
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
inc
adc
clc
pop
pop
mov
jmp
sbb
shrl
add
jg
dec
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
cld
push
jmp
sub
jg
scas
cld
or
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
call
gs
sbb
into
fcomps
sbb
sbbl
into
pushl
and
adc
aaa
xchg
in
add
inc
adc
mov
dec
fisttpll
out
aas
std
cli
push
push
fists
fstl
jg
cmp
sub
inc
scas
inc
mov
jg
decl
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
gs
push
pushf
push
scas
enter
cmp
aas
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
in
stos
imul
hlt
lret
movsb
add
lahf
scas
decl
gs
std
xorb
jg
aad
adc
add
pushl
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
call
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
ljmp
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
push
dec
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
xor
or
mov
nop
enter
sar
jg
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
pushl
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
pop
jo
pop
ret
cmpsb
push
pop
jg
add
jg
xchg
std
in
mov
aad
test
mov
mov
pop
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
sarl
adc
loopne
and
push
xorl
and
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
jmp
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
push
sti
or
jno
pop
nop
mov
lcall
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
incl
fsubr
fistps
lds
fidivrl
jg
jg
mov
pop
add
dec
mov
sub
jge
xor
fcomi
icebp
negb
sbb
cld
addl
inc
sbb
mov
lahf
outsl
int3
push
sbb
aas
pop
dec
pop
test
bound
pop
or
aas
mov
xchg
inc
test
in
jge
popa
push
test
jbe
mov
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
jg
mov
pop
jg
pop
shrb
rcl
jg
adc
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
call
push
add
ds
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
jg
mov
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
sbb
lock
sub
mov
in
lcall
std
call
jl
icebp
fs
mov
out
jne
or
cmc
mov
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
fidivrs
leave
inc
lods
movsb
or
repnz
mov
aad
pop
and
imul
cmpsl
lret
inc
aam
stos
or
inc
jmp
out
cmpsb
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
rolb
decb
dec
adc
out
cltd
xchg
mov
es
pop
nop
inc
mov
inc
add
sub
mov
aaa
std
fisttps
aaa
mov
mov
push
jnp
rorl
ror
sbb
sbb
sbb
aaa
inc
adc
jecxz
loop
shrb
mov
pop
clc
loope
loope
mov
sti
stos
mov
dec
add
xlat
rcl
jbe
add
fldenv
iret
or
xchg
lcall
push
rolb
mov
pop
cmpsl
xchg
addb
into
sarl
push
icebp
fildll
out
jg
jno
ret
cmp
arpl
out
mov
pop
sbb
dec
jge
pop
clc
xchg
cmpsb
ljmp
jg
mov
imul
imul
movl
pop
outsl
jmp
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
mov
add
fsts
push
repnz
rorl
add
push
sti
pop
inc
add
aaa
enter
push
nop
mov
or
mov
and
pop
test
push
inc
mov
and
push
test
add
or
add
inc
fidivrl
incl
fcom
push
jnp
stos
add
inc
sahf
jo
mov
jg
add
add
sub
inc
add
add
or
imul
orb
mov
lahf
pop
mov
add
push
or
and
jle
roll
inc
add
imul
xchg
push
or
call
mov
jno
mov
jnp
xchg
cld
int
das
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
xlat
mov
and
movsb
push
movsb
inc
scas
push
ficoms
add
std
in
cld
push
test
and
imul
push
inc
pop
jg
push
icebp
pop
add
mov
pop
sbb
add
lcall
add
push
ds
jg
mov
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fldenv
fdivs
mov
stos
pop
stos
fucomip
mov
mov
ss
add
jo
or
bound
shll
add
outsl
push
shll
fidivrl
mov
fdivrl
push
ret
fildll
push
jns
out
jge
fisttps
add
fwait
imul
mov
ds
in
movsb
push
add
mov
sbbl
subl
push
mov
push
push
insb
pop
rorl
push
add
jne
push
aam
push
ret
jle
fnstsw
lods
pop
add
sbb
add
ja
pop
neg
push
data16
inc
xchg
cmp
out
cs
push
shlb
lret
mov
aas
add
ja
push
push
xlat
jne
mov
push
jbe
fdivs
push
aad
fiaddl
mov
push
xlat
ja
js
push
jns
push
jp
or
fnstcw
inc
push
fidivrl
sarl
mov
lds
les
je
fldt
pop
inc
jmp
ljmp
xchg
in
pop
fcmovnbe
fstl
push
xchg
xor
xchg
push
mov
xchg
pop
xor
ss
jge
fstpt
cwtl
aaa
push
lcall
push
cmp
pushf
fildl
push
push
out
popf
xchg
popf
aas
push
sahf
inc
scas
fst
insb
push
lahf
inc
lahf
mov
mov
std
push
jecxz
push
imulb
cmp
add
out
out
push
hlt
clc
repz
repz
cli
sti
cld
std
pop
and
iret
incb
jecxz
arpl
inc
jae
add
leave
insb
add
popa
push
add
pop
mov
insb
add
pop
add
pop
ss
and
add
xchg
mov
mov
out
add
add
or
add
fldt
out
outsl
or
or
fiaddl
xchg
aas
test
test
or
mov
jbe
push
sbb
adc
pop
stos
dec
pop
adc
lods
jbe
add
add
pop
stos
femms
lods
lods
pop
in
insb
pop
add
add
pop
mov
insl
lods
pop
pop
adc
xorb
pop
sbb
mov
scas
sbb
scas
scas
scas
sbb
mov
mov
mov
imul
mov
pop
push
add
movsb
mov
push
xor
decl
sbb
and
mov
mov
stos
movsb
mov
pop
mov
dec
adc
sub
pop
sub
mov
stos
in
add
sub
or
pop
daa
mov
das
or
mov
inc
pop
aas
cmp
mov
mov
pop
cmp
mov
cmpsb
add
mov
pop
xor
xor
push
pop
pop
or
or
add
ja
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
out
dec
add
lock
push
xor
mov
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
es
clc
call
jbe
cmp
jl
jge
jno
jmp
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
lcall
sahf
mov
pushf
fwait
lcall
mov
cld
out
mov
sub
dec
ja
jns
dec
push
bound
mov
adc
xor
jne
addb
je
jg
fcmovb
sub
ss
jo
jbe
add
inc
or
push
inc
pop
mov
dec
jle
jns
fbstp
mulps
add
push
mov
cmpsb
push
mov
movsb
push
sub
js
xor
xor
ja
push
ja
jb
shrl
outsl
es
xor
mov
ss
pop
jbe
dec
sbb
shr
and
mov
xchg
jo
and
in
pop
push
inc
mov
cmp
mov
inc
aaa
outsl
push
mov
enter
xchg
jp
inc
push
popf
inc
mov
aaa
add
addr16
xchg
jno
lret
push
bound
mov
mov
mov
lahf
inc
inc
push
sahf
mov
out
mov
add
outsb
add
xchg
xchg
pop
push
rcr
mov
test
push
dec
push
movsb
jae
add
jb
pop
sub
test
push
mov
push
rorb
int
add
add
lcall
outsb
mov
in
mov
add
ja
sahf
jbe
fistpl
imul
sti
or
stos
push
add
and
es
js
aaa
sti
inc
mov
data16
shrl
insb
frstor
push
outsl
ror
push
fisttpl
jle
ds
jno
add
jge
push
jg
fiadds
insl
fisttpll
lock
mov
in
mov
mov
out
arpl
push
insl
dec
cli
sahf
mov
jb
out
sub
jg
jle
jecxz
sti
popf
int
or
push
aad
push
imulb
int
pop
jne
fildl
adc
push
adcl
addb
sbb
test
outsb
faddl
in
mov
push
xchg
fwait
add
push
out
xchg
in
xchg
lock
pop
cmpb
scas
outsb
out
in
outsb
ficoml
cltd
xor
cwtl
push
cmc
sahf
xor
mov
ss
pushf
cmp
sub
es
aam
jle
adc
shll
test
sahf
mov
lcall
mov
fmul
mov
lgs
int
mov
mov
sarb
popf
iret
sarl
ret
sahf
and
or
into
add
addr16
xchg
jne
pushf
dec
out
je
add
daa
cltd
sub
mov
and
femms
or
or
fildl
sbb
adc
push
adc
add
push
add
add
ds
add
cld
mov
mov
mov
xor
ds
xchg
push
mov
pop
pop
sbb
mov
pop
sbb
push
add
and
loopne
int
mov
ds
mov
aas
and
xor
xor
repnz
push
adc
aas
aas
cmp
adc
add
repnz
add
lods
addb
inc
inc
mov
inc
cmp
out
and
dec
mov
dec
aas
adc
ds
xor
dec
jge
arpl
test
mov
pop
cmp
ds
add
mov
lcall
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
movsb
movsl
mov
lcall
sub
sub
add
add
mov
fildl
xor
inc
mov
push
push
push
push
push
imul
test
pop
push
push
pop
push
push
push
imul
ljmp
pop
imul
nop
cltd
mov
mov
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
adc
test
jb
jae
jo
outsb
pushf
sti
cmp
add
out
jmp
push
rolb
pop
shlb
mov
incl
out
incl
jl
push
add
cmc
repz
outsl
decb
dec
xor
aas
add
xchg
pop
cmp
outsl
incl
mov
add
mov
push
mov
fnstsw
stc
cmc
repnz
inc
add
gs
pushf
add
mov
xchg
divb
lcall
or
mov
mov
sahf
or
jae
js
sti
mov
add
mov
mov
test
scas
xchg
js
roll
and
out
clc
nop
sub
jbe
sti
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
lcall
push
sbb
sbb
and
add
dec
ss
xor
sub
sub
lcall
insl
ss
sti
addb
mov
pop
mov
mov
mov
popw
mov
mov
add
outsb
mov
push
add
add
outsl
sub
rolb
or
pop
inc
sbb
out
addb
outsl
mov
cmpsl
or
adc
jne
incl
outsl
dec
add
push
inc
xlat
sbb
push
fstpl
incl
add
iret
outsb
sysret
mov
es
data16
pop
in
fdivrs
stc
sysret
in
lock
mov
stc
hlt
jl
push
jg
mov
pop
roll
adc
add
aam
mov
aad
or
cli
mov
pusha
sbb
and
pop
pop
jns
and
jle
cli
or
sbb
mov
mov
sti
jg
das
sti
in
and
mov
jle
cmp
pop
mov
dec
sti
add
mov
jg
xchg
sbb
mov
pop
jo
sbb
sbb
sbbb
cld
jg
rolb
jle
fadds
jg
std
ja
and
add
xor
jg
jg
pop
inc
enter
sbb
nop
xchg
cmpl
mov
jg
xchg
xor
push
and
push
inc
sub
or
decl
or
xor
or
or
mov
mov
jg
shrb
add
bound
mov
or
sbb
pop
pop
and
mov
test
and
sbb
scas
incl
add
incl
in
inc
in
jle
lret
imul
jno
xchg
add
push
scas
jle
mov
inc
cmpl
rorl
xor
addr16
add
add
add
jg
cmp
push
gs
push
adc
mov
jg
and
addb
mov
movb
sub
xor
jg
pop
push
pop
je
mov
insb
push
inc
cmpsb
ljmp
stos
lea
pop
add
daa
push
fcmovu
mov
aaa
pop
pop
add
jle
add
lock
stos
pop
inc
push
cmp
adc
mov
sbb
out
or
or
push
dec
xchg
push
bound
mov
scas
popf
add
mov
mov
in
mov
arpl
xor
test
pop
push
mov
insl
xlat
out
incl
push
dec
stos
test
jmp
test
ljmp
mov
sbb
jle
ljmp
dec
dec
mov
fnstenv
add
push
jne
test
jbe
out
or
push
push
jp
mov
into
mov
js
dec
jbe
pop
add
fnstsw
mov
dec
enter
push
outsb
test
mov
iret
out
cmp
test
fs
ljmp
ljmp
fisttpll
xor
ja
push
movsl
test
mov
dec
neg
xchg
mov
push
mov
inc
out
or
sahf
inc
out
fwait
adc
scas
cs
aas
in
fnstenv
popf
inc
push
pushf
cmp
xchg
nop
imul
jnp
fisttpl
xchg
xor
xchg
xor
sub
sub
nop
adc
out
mov
ss
cs
or
insl
sahf
mov
xor
push
xor
call
mov
inc
push
jg
pop
fnsave
xor
or
mov
sahf
movb
and
int3
nop
es
lcall
push
pop
mov
or
aad
cltd
push
xchg
movb
bound
pop
ja
divb
push
push
imul
pusha
add
add
or
sbb
mov
cmpsl
dec
js
inc
inc
push
outsl
add
dec
dec
or
shlb
and
and
or
sub
push
adc
pop
scas
inc
sahf
out
orl
repz
mov
mov
xchg
inc
and
cmp
lock
cmp
xchg
cmp
cmp
icebp
mov
xor
in
add
mov
push
add
incl
push
inc
sbb
leave
shrl
dec
push
mov
adc
mov
push
push
sbb
xor
push
enter
adcb
xchg
std
mov
jmp
syscall
mov
sub
xchg
mov
add
pop
xchg
add
outsl
sbbb
or
mov
sub
adc
iret
xchg
daa
cld
pop
das
pop
adc
jmp
jae
push
incl
punpcklwd
push
pop
daa
std
out
inc
mov
add
xorb
sbb
incl
sbb
mov
mov
lcall
inc
sub
pushl
decl
lea
mov
mov
sahf
sub
call
mov
pop
decb
mov
decl
int
inc
lcallw
sub
adc
scas
ljmp
sub
decb
mov
clts
add
lods
add
mov
iret
pushw
jle
adc
inc
push
inc
mov
sti
out
psrld
push
mov
pusha
add
pop
add
int3
or
call
push
and
add
fdivrp
push
sub
add
je
pop
movsb
lds
sti
push
std
inc
and
out
adc
push
adcb
cmp
or
cld
pop
stc
vmwrite
and
jg
mov
dec
aaa
push
idiv
loop
je
or
movsb
decl
decl
jmp
ljmp
xor
pop
fcmovbe
pop
fcmovu
mov
pop
inc
xorps
dec
adc
decl
pushl
addr16
push
shll
shr
add
push
dec
sahf
ret
call
call
adc
jmp
repnz
int
ljmp
lahf
inc
inc
push
inc
lods
dec
mov
pop
mov
lea
sahf
movsb
dec
push
stos
push
popf
inc
xchg
int3
jnp
cmpsb
dec
dec
inc
jne
lcall
push
add
and
dec
shlb
push
shrb
xchg
int
push
rcl
outsb
shrb
es
fwait
dec
push
push
jb
and
das
push
iret
insl
xchg
jmp
outsl
pop
imul
push
push
dec
stos
xchg
push
ljmp
call
sahf
call
fisubl
dec
pop
add
repnz
adc
push
jmp
pushf
int
xchg
mov
decb
cwtl
xor
push
inc
push
xchg
fisubs
es
push
aaa
push
lcall
xchg
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
xor
mov
test
aam
incl
decw
int3
jb
fimuls
add
fcmovbe
js
std
data16
hlt
faddl
jge
push
jnp
dec
rep
iret
jp
or
jl
or
xor
push
fidivrl
jge
jg
es
mov
jle
repnz
push
dec
push
dec
repnz
repnz
int
jae
pop
fidivrl
push
mov
jnp
push
jb
jge
hlt
in
add
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
out
xchg
aas
jg
and
xchg
out
push
sub
iret
out
mov
out
xchg
clc
push
neg
xchg
inc
sub
jg
and
ss
pop
cld
mov
jno
sub
jg
mov
icebp
mov
jg
jns
bnd
inc
daa
jg
mov
ja
jle
inc
push
loope
xchg
cld
jp
es
mov
jge
incb
out
xchg
and
orb
stos
push
add
pop
jmp
orl
mov
icebp
nop
sub
cs
cmpsb
push
push
fsub
pop
push
adc
push
int3
decl
dec
jle
mov
fidivrl
arpl
clc
int3
cmp
push
pop
fnstsw
movsb
aaa
push
pop
push
pop
or
nop
cmp
sti
and
lcall
sbbb
or
xor
push
jmp
in
sbb
xchg
jle
mov
loop
adc
xchg
in
jmp
xchg
jmp
mov
lret
jg
out
mov
or
push
adc
fdivp
inc
mov
add
ja
daa
cmc
test
nop
xlat
push
xchg
or
cmc
cmovno
sbb
mov
add
adc
or
xchg
push
movb
push
xor
or
lret
mov
sbb
dec
aad
cmp
inc
lahf
jp
clc
push
lret
adc
add
adc
sub
inc
scas
pop
iret
jns
add
xor
mov
or
push
xchg
cmpsb
cmp
and
sub
mov
push
sbb
outsb
or
push
jne
xchg
decl
inc
adc
orl
push
inc
adc
clc
mov
mov
jle
and
adc
je
dec
or
lmsw
outsb
xchg
push
icebp
inc
push
gs
jo
icebp
add
ret
add
add
push
stos
add
cltd
popa
push
and
xor
mov
and
jo
es
es
push
aaa
xchg
adc
push
fstp
push
fiaddl
addl
rcrl
xchg
inc
jmp
lahf
jo
das
or
cmpsb
popf
sbb
testb
imul
xor
sub
adc
add
fisubrs
mov
and
sub
add
add
sbb
add
sbb
loop
adc
dec
loop
lods
add
insl
ljmp
xchg
js
ret
pop
popf
in
mov
inc
rcll
popa
bound
inc
xchg
es
addr16
jb
mov
or
call
or
inc
add
and
mov
add
dec
mov
pop
pop
or
lcall
add
xor
les
add
imul
jnp
idiv
sbb
dec
cmc
add
xchg
mov
scas
jo
xor
dec
push
outsl
loop
inc
nop
insl
in
xor
lcall
pop
xor
nop
mov
pop
sti
loop
dec
insb
out
inc
imul
sbbl
pop
add
icebp
inc
adc
add
pusha
in
insb
jne
adc
pusha
loop
push
cwtl
dec
sbb
or
or
or
shrb
rol
or
add
cmpsl
dec
insb
arpl
enter
pop
arpl
push
scas
cmp
call
add
lds
fiaddl
roll
pop
push
cmp
push
and
aad
subl
mov
jne
cwtl
cwtl
sub
add
cmp
jnp
sbb
cmp
jo
je
arpl
in
xchg
insl
adc
mov
pushl
lahf
mov
xor
mov
dec
sub
sbb
adc
imul
and
xchg
cmp
adc
pop
sbbl
fcoms
mov
test
sbb
sbb
jb
dec
sub
mov
jmp
adc
and
imul
shl
inc
je
mov
mov
bound
iret
invd
aad
mov
insb
pop
and
imul
icebp
popa
and
pop
test
pop
add
sbb
add
and
and
add
add
fsubrs
sbbb
sbb
pop
jp
dec
sbb
fbstp
dec
jo
push
jae
xor
mov
push
and
sub
scas
mov
fistl
nop
mov
adc
ss
inc
imul
push
ja
sbb
pusha
insb
test
pop
inc
or
sbb
pop
xor
stos
and
adc
sbb
sahf
popa
je
jne
inc
mov
adc
gs
outsl
jae
push
or
add
push
outsl
mov
ret
xlat
push
jae
mov
xchg
clc
add
shll
daa
fldenv
xor
and
imul
arpl
mov
mov
sub
aas
sub
xchg
pop
sub
movsl
lods
add
mov
out
mov
insl
lret
sti
cmp
movsl
add
and
fnstenv
mov
imul
jo
mov
arpl
test
fidivl
add
adcb
inc
es
lds
push
arpl
mov
and
bound
int
sbb
jne
sub
pop
fs
or
push
add
rcpps
js
push
jb
mov
inc
inc
xchg
popf
ljmp
jmp
imul
mov
in
lds
shlb
stos
sbb
jo
shrb
push
cld
sub
fisubrl
sub
mov
ret
lea
loop
inc
out
stos
dec
inc
add
xchg
add
adc
outsb
sub
jg
jns
adc
cmp
push
jo
fwait
cmp
and
push
les
xor
dec
std
addr16
pusha
push
add
xor
add
pop
xor
cmp
lods
and
fs
inc
sbb
add
sbb
xor
fisubl
pop
inc
je
out
adc
insl
dec
outsb
dec
std
lea
cli
andb
enter
sub
aam
push
push
js
add
mov
dec
add
sbb
mov
dec
rcrl
add
or
xor
shll
movhps
mov
or
mov
dec
pop
add
movsb
pop
es
add
cmp
or
fmull
add
and
dec
push
cmpsb
mov
pop
test
call
jo
sbb
test
fidivs
stos
daa
adc
subb
out
dec
push
imul
or
push
push
imul
mov
scas
cli
test
or
outsb
mov
jno
addb
rcrb
mov
xchg
xor
gs
sbb
loopne
or
add
sarb
and
mov
xchg
mov
mov
jne
movsb
add
xchg
lods
dec
cmp
je
in
add
outsl
sbb
jge
or
imul
and
dec
lods
or
ret
push
dec
pop
jbe
xchg
inc
insb
sub
pop
push
mov
fisttpll
dec
pop
lret
inc
lea
sub
mov
xchg
mov
cwtl
sti
ret
pop
xlat
adc
add
das
ret
dec
mov
je
xor
jg
or
inc
test
push
xchg
add
and
mov
inc
aaa
outsl
jbe
je
and
mov
cmp
inc
ret
lods
outsb
jbe
push
mov
test
and
adc
mov
pusha
and
mov
push
mov
mov
dec
inc
push
test
pop
sub
push
rol
daa
dec
cld
addr16
adc
push
cltd
mov
arpl
test
pop
xor
sbb
jmp
bound
mov
adc
push
add
nop
fs
lret
fstpt
cmpsb
cmp
xor
push
and
inc
cmp
xchg
pop
mov
xchg
cmp
scas
outsb
pop
sbb
roll
dec
scas
inc
sub
inc
inc
cwtl
xor
mov
xchg
lods
mov
xchg
jbe
enter
add
lahf
add
pop
sub
sbb
les
inc
push
inc
inc
xor
mov
xor
xor
dec
mov
inc
mulb
arpl
rorb
out
mov
lcall
sub
inc
test
add
shll
add
aaa
sub
pusha
adc
test
inc
lcall
push
cmp
movsl
dec
sub
leave
pop
add
test
add
add
adc
add
add
rcll
imul
sub
or
or
add
test
and
push
test
movl
fisubl
mov
and
clc
add
clc
mov
andb
add
and
push
push
hlt
rcrb
addr16
cmp
pushf
push
in
fucom
pusha
xlat
out
push
dec
sbb
add
addr16
jp
push
xchg
pop
and
or
ja
inc
inc
add
cmp
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
