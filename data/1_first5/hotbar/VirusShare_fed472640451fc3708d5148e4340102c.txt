fcomp
decl
pop
jns
add
mov
or
push
add
cmp
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
and
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
inc
xor
add
orl
jno
outsb
push
mov
std
orl
dec
inc
and
out
sub
sbb
push
and
push
jno
into
notl
dec
je
sbb
add
pop
rclb
rclb
jmp
adc
dec
add
jnp
incl
cmpl
jne
push
mull
pop
mov
jmp
lahf
sarl
add
inc
shlb
add
sub
lods
mov
push
and
les
xchg
or
cmpl
xchg
push
push
adc
mov
adc
data16
mov
rcr
cmp
xor
lret
bound
test
push
add
loopne
ret
fists
dec
and
push
push
aam
xor
push
nop
and
lcall
ds
ret
fwait
mov
loopne
push
push
pop
mov
add
ss
push
push
in
ret
daa
push
or
mov
sete
into
xchg
push
push
into
nop
push
mov
test
mov
mov
aam
adc
cmp
out
fidivrs
les
add
push
push
mov
out
sub
es
rol
inc
add
dec
and
addl
hlt
lahf
xchg
inc
add
push
mov
fwait
push
loopne
push
rol
imul
xor
mov
push
daa
sbb
sbb
aam
xor
push
push
pushf
sbb
xchg
dec
push
mov
lea
or
imull
push
mov
dec
or
pop
sahf
add
sbb
cmp
lret
add
add
pop
mov
dec
test
mov
sub
sub
out
pop
jg
mov
and
mov
cmpsl
dec
jg
mov
addl
and
adc
pop
cmpsb
mov
pop
ret
xor
mov
inc
push
dec
dec
push
sub
push
insb
insl
push
add
fmul
loop
faddp
jl
mov
cld
lods
je
les
decl
lock
lahf
cmp
jae
mul
clc
mov
sub
push
mov
dec
lea
mov
fldenv
or
in
pop
inc
and
add
sbb
mov
sub
mov
in
push
int
add
pusha
push
add
dec
jbe
movsb
push
mov
push
iret
je
dec
aaa
bound
das
out
sbb
jo
and
lock
in
dec
inc
movswl
adc
int3
push
add
call
inc
mov
andb
aas
fstpl
inc
addr16
or
pop
lahf
push
push
pop
push
xchg
pop
xor
cld
mov
inc
hlt
nop
test
cld
or
dec
hlt
mov
mov
push
or
or
inc
add
dec
lds
ss
sub
inc
xor
mov
mov
mov
lahf
push
or
and
xchg
cmpsl
or
or
arpl
push
negl
ds
push
push
stos
add
push
test
or
add
push
out
hlt
nop
ds
xor
jge
xor
pop
push
subb
loopne
fs
mov
faddl
sub
mov
inc
lock
xor
and
push
lret
xchg
jb
sub
fcomps
pop
sbb
in
test
and
jne
jb
and
push
dec
mov
lock
cmp
mov
pusha
push
push
es
jbe
sub
out
push
push
push
xchg
jle
cmp
dec
sbb
mov
push
pusha
sbb
jns
fprem1
sete
test
test
in
sub
add
nop
mov
orb
xor
adc
jne
loope
pop
insb
pop
cmp
divl
xor
and
push
cmp
je
test
test
lds
dec
jp
punpckhbw
jne
mov
inc
out
test
jne
push
jle
or
and
aas
add
push
push
or
push
xchg
pop
test
xchg
adc
cmpsb
add
add
adc
push
fwait
outsb
repz
punpckhbw
push
dec
inc
jb
rcrl
test
push
push
sub
push
or
xor
bnd
sub
dec
add
ret
movsb
dec
inc
mov
pusha
push
scas
dec
push
cmp
cmpsl
loop
and
sbb
sbbl
sbb
std
cmpb
fists
cmp
xchg
pop
cmp
cs
cmp
sbb
mov
xchg
jns
jle
cmpsb
mov
negl
sti
mov
movsl
rcll
and
rcrl
cmp
sbbl
mov
nopl
insl
adc
push
push
pop
push
add
fdivrp
xor
in
adc
leave
mov
test
cmpsl
int
or
sti
add
push
mov
std
adcl
xor
mov
dec
lds
sub
push
dec
fidivrs
and
mov
call
push
pop
cmp
mov
adc
jno
jl
lods
lea
popf
cmp
or
lahf
inc
imul
fs
ds
or
movlhps
mov
sbb
data16
dec
lock
mov
outsl
mov
jns
add
test
xchg
xor
lahf
cli
or
mov
cli
inc
aaa
xor
xor
fcoml
push
push
pop
sti
lea
add
mov
aam
pop
testl
mov
push
inc
mov
sub
loope
and
int
sbb
adc
cltd
sub
sbb
mov
je
adc
das
cltd
fsubl
lock
insb
or
mov
fstpt
decb
adc
and
mov
mov
add
mov
test
sub
ret
aaa
push
cmpl
dec
adc
lea
pop
pop
icebp
jns
xchg
cs
jmp
or
fcoms
sub
sbb
mov
sbb
push
inc
lods
push
or
xchg
loop
xchg
int
mov
or
sub
in
jg
and
cmc
lea
insb
mov
or
scas
pop
pop
and
aam
cli
out
les
popf
xlat
xor
adc
jne
sub
stos
and
cmp
outsb
rcr
inc
movsb
stc
cmp
push
xor
jo
cmp
sbb
sbb
cmp
mov
inc
add
sar
test
cmp
jne
mov
mov
insb
sub
test
daa
mov
inc
lods
sbb
mov
jecxz
push
dec
cmp
je
sub
cmp
push
xlat
ljmp
leave
sbb
andb
lret
or
jl
add
in
mov
ret
cmpsb
push
mov
or
or
sub
mov
loopne
mov
ljmp
xchg
js
push
js
dec
adc
sbb
sub
add
ss
push
sub
out
and
cmpsl
call
aas
cmp
adc
adc
call
inc
cmp
jl
xlat
ret
add
pop
push
es
or
mov
push
cmp
fdivrs
cmp
push
push
notl
dec
xchg
push
pop
test
push
jo
push
popf
shlb
or
and
jne
cld
ljmp
or
mov
je
push
std
jbe
xor
into
dec
fsubr
and
jmp
mov
lea
idiv
aaa
into
add
inc
test
jne
sub
push
push
inc
sbb
mov
mov
and
adc
jo
mov
icebp
stc
aaa
mov
adc
push
mov
mov
jne
shlb
out
cmp
jo
fbstp
iret
cmp
jg
sbb
adc
add
jo
jl
mov
or
lods
sarl
insb
pop
pop
ret
mov
ret
test
add
dec
in
push
jbe
adc
pop
rcrl
or
es
pop
push
fbstp
js
or
movsl
pop
jne
pop
insl
outsl
or
mov
sbb
sbb
inc
or
aas
xor
aaa
adc
lea
adc
xor
pop
cmp
jo
orb
outsb
mov
fstpl
std
sbb
jge
push
call
pop
insl
movhps
pop
nop
lahf
or
jle
add
in
mov
mov
cmp
pop
cld
in
std
arpl
js
clc
mov
lea
push
or
cmp
faddl
push
xchg
push
cld
adc
cmp
das
jl
cli
ja
add
jmp
insb
fcoml
add
push
push
clc
fildl
cwtl
jl
inc
jo
jg
mov
movb
pop
enter
or
dec
mov
sub
cld
sub
je
js
push
jle
pusha
pop
sub
pop
sub
add
movw
fisttpl
or
xchg
xchg
icebp
mov
ss
or
jb
push
dec
mov
cmp
shl
pop
pop
sub
cmpsb
bound
rorb
lret
pushf
mov
push
and
jnp
sbb
fldenv
fwait
insb
pop
pop
cmp
pop
sahf
or
jne
fsub
add
pusha
cmp
ficoml
xor
lret
push
adc
jle
aas
clc
cmp
ja
add
push
push
popa
jmp
xor
xor
mov
bound
cmpb
enter
adc
rcl
adc
loopne
mov
mov
add
push
or
inc
aam
enter
push
cwtl
add
addr16
xchg
loop
push
push
push
or
mov
push
pop
push
push
mov
sbb
outsl
add
add
je
inc
pusha
in
jl
dec
pop
or
cmp
rorb
or
js
imul
sub
adc
pop
repnz
mov
movsl
jecxz
jcxz
popf
mulb
inc
add
dec
mov
pop
pop
or
xchg
jne
pop
mov
push
lret
push
outsl
fimuls
push
je
faddp
add
sti
mov
popl
adc
je
cmpl
lea
jl
mov
scas
xlat
or
push
jne
push
or
cltd
enter
dec
test
push
sub
sbb
aam
add
jmp
hlt
push
push
cwtl
add
or
mov
jb
mov
inc
inc
jo
inc
jae
mov
inc
xor
xchg
aaa
dec
loop
jne
ret
xchg
mov
ret
and
sbb
cmp
movsb
loop
or
nop
or
pushf
in
adc
loope
int3
jp
inc
lret
fadds
fcmovnb
fwait
xor
push
test
pop
sarl
cld
mov
pop
push
push
int
syscall
inc
popa
jb
add
mov
xor
cltd
outsb
sbb
adc
and
fcmovb
mov
xchg
lock
xor
cmp
jge
roll
xchg
jmp
inc
add
dec
adc
adc
sub
mov
mov
lea
and
sbb
add
xchg
pop
es
add
lock
cmp
inc
and
pop
jle
mov
lock
jl
cmp
ds
add
jmp
add
es
ret
cmp
movsl
mov
mov
cmp
mov
push
dec
dec
xor
or
mov
enter
mov
rorl
or
pop
in
roll
push
jae
add
pop
out
mov
loopne
mov
push
or
cmpsb
jle
mov
inc
push
pop
insl
jo
adc
push
jmp
lock
hlt
cmp
cli
lret
pop
inc
clc
xor
sar
sarl
cmp
add
cmp
pop
mov
jnp
dec
int3
and
mov
jb
xor
lock
pop
sbb
mov
push
adc
push
lahf
inc
sub
or
nop
inc
push
add
push
cmp
cmp
ret
jbe
ret
and
dec
cmp
xlat
movswl
in
call
pop
lods
pushf
add
fisubl
sbb
mov
mov
insb
mov
mov
inc
pop
addps
add
sub
adc
xor
mov
pop
pop
xchg
pop
repnz
pop
mov
xchg
or
dec
cld
arpl
sbb
push
js
cwtl
imul
adc
sub
or
adc
cmp
mov
fcoml
or
fld
cmp
push
rol
push
fmuls
jle
xor
add
cli
fdivrl
adc
mov
xchg
sub
lahf
xor
movsb
push
push
fidivrs
mov
add
mov
or
mov
adc
scas
shr
jo
sub
sbb
and
sti
jne
xor
push
push
dec
pop
outsb
or
jl
dec
sbbb
xlat
push
lea
add
ret
stc
xor
push
pop
inc
pop
mov
mov
cli
mov
in
push
xor
mov
pop
mov
aas
mov
or
or
jecxz
sbb
add
jmp
inc
xchg
push
daa
outsl
aaa
cli
inc
stos
add
push
mov
inc
xchg
es
mov
adc
sbb
fstl
and
and
adc
mov
aas
sbb
loopne
push
jo
fistps
or
mov
sbb
mov
jb
or
pop
loope
jl
inc
pop
outsb
repz
mov
shll
mov
mov
adc
add
xchg
or
fwait
test
and
je
or
scas
or
jge
test
xchg
inc
push
push
and
add
test
nop
rorb
cwtl
imul
pop
stc
or
je
dec
stos
push
cmpsb
push
sub
or
jg
daa
cmp
in
cmpl
outsl
fucomip
std
and
jle
lock
data16
jmp
add
add
add
js
mov
or
sarb
rcr
jle
repz
in
cmp
jae
jecxz
inc
pop
and
mov
or
pushf
mov
add
je
push
sub
add
jne
cmp
cwtl
lahf
loope
sahf
jecxz
xchg
jne
jle
ds
imul
xor
movsb
movb
jno
add
pushf
xchg
movsb
push
inc
int
dec
adc
clc
push
cld
pusha
incl
mov
cmp
lcall
jmp
dec
mov
adc
bound
xchg
sbb
xor
xchg
add
mov
fsubrl
pushf
rcrl
push
fstps
leave
and
mov
adc
insl
xchg
insl
mov
pusha
rorb
jp
pushf
cwtl
addr16
cli
push
lea
adc
cltd
pop
nop
call
inc
imul
js
stos
int
dec
ret
mov
xor
out
fucomi
lds
mov
repnz
in
dec
cmp
push
mov
jbe
out
movl
xchg
lret
dec
inc
push
sbb
sbb
lea
xor
je
cld
insl
clc
pop
stc
jne
scas
dec
sbb
in
leave
ss
mov
xor
aas
push
jne
repz
cmp
mov
dec
mov
mov
sbb
pop
and
cmp
fmull
loopne
adcb
movsb
fstl
loope
fdivl
sub
sahf
in
sahf
cmpsl
call
hlt
clc
adc
jns
jae
add
adc
or
fisubs
add
sub
pop
mov
inc
outsb
dec
dec
mov
dec
std
push
cld
pop
push
lea
push
ficoml
add
push
lea
jle
xlat
dec
cmp
push
inc
repnz
dec
aam
lret
enter
pop
sahf
and
cld
xchg
jle
jmp
sbb
push
pop
or
add
inc
adc
sbb
pop
int3
sub
std
test
jle
add
fiaddl
cs
pop
push
cld
xchg
in
aad
adc
adc
test
add
add
add
lock
push
imul
sub
add
pushf
mov
add
fwait
mov
inc
sub
or
prefetch
push
lods
and
mov
inc
cmp
es
ja
ret
jle
or
sbb
mov
jbe
xor
sbb
push
subb
xchg
rorb
rcrl
mov
lock
sbb
sub
out
jno
out
sbb
xchg
cmp
mov
or
mov
jbe
in
push
lcall
dec
and
xchg
mov
lock
fcomip
arpl
testb
shrb
push
push
add
insl
dec
and
xor
push
mov
lcall
inc
ljmp
rcpps
add
test
pop
jo
lea
ret
je
lea
add
lock
inc
add
repnz
popa
inc
xchg
pushf
loope
pushf
push
mov
in
pop
jno
mov
sahf
gs
push
pop
mov
sub
ret
leave
movsb
inc
or
lock
sbb
loopne
xchg
test
ds
mov
xor
xor
push
push
lea
int
adc
pop
fnstsw
ss
data16
push
mov
mov
insb
outsl
pop
icebp
fists
dec
mov
push
push
xor
mov
dec
addb
je
into
sub
cmp
aas
dec
sub
cltd
sub
sar
add
mov
mov
dec
jg
dec
sub
fcmove
outsb
in
mov
add
sahf
inc
add
mov
cmp
jecxz
push
stos
mov
or
mov
mov
push
push
inc
jbe
mov
pop
push
fadd
push
push
cmp
jns
sbb
push
adc
xor
cmp
dec
inc
or
jle
xor
sub
mov
pushf
mov
das
sub
jno
sbb
xchg
push
outsl
icebp
xchg
mov
icebp
sarl
sbb
and
push
add
pusha
adc
sbb
movsb
push
call
outsb
xchg
or
addb
adc
cwtl
xor
or
cmpsl
mov
sub
test
add
pop
push
sbb
sbbb
incb
movzbl
cmc
repz
mov
lock
jo
and
lret
sbb
shll
ds
cmp
mov
cwtl
push
jl
lock
and
dec
or
loopne
in
shlb
or
int3
incl
cmp
mov
sub
je
push
push
mov
mov
pop
push
push
push
and
push
add
mov
push
jo
lret
push
mov
xor
xor
sbb
js
jg
and
cs
add
xlat
loop
pop
call
add
mov
je
cmp
pusha
jne
and
inc
out
sbb
xor
cld
jb
call
lea
jmp
pop
in
fnsave
xor
test
and
cwtl
jb
pop
cmpsl
adc
rcrb
push
fs
mov
psllw
mov
out
fiadds
or
sub
adc
dec
xchg
xchg
push
and
daa
dec
adc
inc
je
add
loop
mov
aas
mov
pop
jecxz
daa
jbe
push
push
xchg
ljmp
sub
push
jne
dec
sub
sbb
rclb
adc
pop
sub
lea
push
jb
mov
sbb
pop
push
pop
push
fstpl
shufps
pop
push
cmp
imul
pop
in
dec
cmp
xchg
out
cmp
or
enter
mov
mov
test
jns
lods
and
or
sub
sub
mov
imul
test
mov
or
push
dec
sbb
dec
dec
sbb
cmp
inc
inc
push
push
sub
fmul
mov
dec
inc
inc
lahf
loopne
faddl
rclb
push
pusha
sarb
or
test
push
push
jge
push
nop
cmp
sub
sbbb
push
push
lea
dec
loope
mov
jp
xor
inc
sub
call
add
push
xchg
out
or
cmp
xorl
adc
or
push
je
add
xor
jb
inc
cmp
dec
loopne
andb
push
xor
enter
je
sub
stos
popa
add
or
push
push
out
sbb
add
lea
pop
push
push
push
and
enter
mov
push
sbb
scas
call
push
je
push
jbe
ja
mov
or
adc
cwtl
stos
aaa
faddl
sub
inc
shrb
add
popa
cmpsb
inc
inc
fldl
fmull
test
mov
push
push
inc
movsl
adc
sbb
push
outsb
or
push
mov
out
adc
jns
movsb
lock
xor
sbb
scas
add
pop
add
pop
les
dec
shl
cmpl
push
push
mov
rcll
jno
push
lds
pop
push
jp
cmp
mov
enter
push
inc
daa
mov
or
decl
mov
push
add
push
mov
pop
lock
add
push
and
jp
imul
lock
rclb
sahf
dec
or
in
and
adc
pop
push
mov
aam
push
add
dec
xchg
add
push
cltd
and
or
push
inc
xorl
dec
xor
push
mov
outsl
addb
push
xchg
push
push
lds
arpl
pop
cmp
shll
cld
cld
add
jge
add
je
mov
pop
hlt
cli
cmp
jge
xchg
lock
push
stos
push
shl
and
sub
sub
push
pop
inc
push
push
jo
test
cmp
mov
int
dec
push
mov
in
dec
sahf
push
push
and
xchg
add
jp
test
iret
add
fdivl
enter
sbb
xor
int
inc
mov
sbb
int3
aaa
movsl
outsb
test
dec
push
push
push
lods
test
mov
rol
shr
adc
push
loopne
data16
popf
andb
inc
sub
sbb
js
ret
xor
call
movsl
jno
fs
dec
pop
or
sub
and
sub
push
sub
es
mov
xchg
sub
ds
xchg
add
push
adc
jecxz
adc
xor
xor
and
add
cmp
lock
add
cltd
and
push
sar
push
inc
fldenv
fstpl
daa
and
dec
add
adc
adc
add
mov
inc
bound
mov
dec
bound
imul
sar
mov
shr
add
push
mov
imul
push
lahf
shrl
mov
inc
in
jle
xchg
fsts
repnz
cmc
sub
mov
mov
out
inc
stc
add
out
ja
mov
push
enter
lea
incl
pop
cmp
je
cmpl
adc
cmp
jne
push
inc
jecxz
lds
call
enter
ret
fidivrs
jmp
out
pop
cmp
jo
sti
lea
or
inc
lods
sbb
sub
test
and
movb
jmp
add
adc
cli
inc
loope
fiadds
dec
push
dec
les
push
inc
add
inc
push
cmpsl
sbb
sub
push
sub
and
or
out
dec
test
mov
pop
pusha
push
ljmp
adc
fisubrl
int3
sbb
data16
sub
je
test
jl
cmp
popf
cmc
lcall
add
aaa
sbb
sbb
sub
push
mov
sbb
loope
int
pop
scas
add
jl
insl
arpl
mov
fidivrs
cmp
fisttpl
mov
adc
sbb
xchg
sbb
and
push
xor
add
popf
imul
imul
jno
jae
dec
sub
scas
cmc
jbe
jge
jmp
mov
pop
fldt
js
pushf
adc
nopl
faddl
xor
fdivl
sub
xor
mov
cld
jge
loopne
stc
shll
mov
test
sbb
jle
loop
mov
mov
mov
jns
mov
push
fcoms
jmp
into
add
cmp
bound
cli
xor
and
or
adc
je
fldenv
xor
mov
mov
loopne
fcomps
clc
add
mov
pop
movb
js
push
lret
jge
ret
lret
mov
push
test
shll
in
movsl
or
push
add
and
cmp
sbb
xchg
mov
orb
clc
call
xchg
fidivrs
cwtl
mov
je
jmp
cmp
add
and
and
xchg
xor
aaa
add
sti
push
shrb
xchg
adc
or
movsl
jno
or
pusha
movsl
loope
xor
push
adc
ljmp
sbb
add
nop
movl
add
xchg
mov
lea
or
inc
xchg
xorb
mov
pop
lods
pop
fmull
mov
mov
mov
cltd
loopne
call
pushf
test
add
js
iret
lds
or
loope
test
inc
mov
cmp
enter
xor
sbb
int3
lock
pop
clc
mov
decb
pop
dec
mov
cmp
push
ret
or
or
add
push
pop
orb
popa
and
test
je
rcll
xchg
push
jmp
mov
push
lahf
sbb
push
push
lock
jae
xchg
or
pop
inc
jg
mov
cltd
outsb
pop
xchg
fstpl
out
and
inc
mov
movl
adc
push
adc
jl
mov
adc
push
push
dec
xchg
sbb
mov
mov
xor
jl
mov
jbe
mov
stc
push
lahf
jae
and
nopl
loopne
add
mov
sbb
xor
rorb
push
fiaddl
inc
dec
mov
xchg
lahf
or
es
push
jle
push
pop
in
arpl
push
mov
lret
mov
or
ret
lahf
or
xchg
sub
rcr
ret
fists
or
or
add
sub
clc
push
sub
clc
setb
jno
jg
or
mov
sub
cmp
setae
lcall
and
add
mov
sbb
cmp
lret
mov
outsb
or
sbbl
pop
pop
jae
mov
push
add
inc
push
mov
fs
push
aad
subl
dec
push
movsl
push
es
pop
pop
adc
fisttps
lock
jecxz
loope
loopne
mov
push
pop
cmp
or
or
dec
inc
jbe
imul
sbb
test
jp
add
hlt
mov
push
add
xor
xor
inc
ss
push
inc
push
add
push
in
inc
cmp
jg
in
dec
repnz
add
and
popa
inc
inc
loopne
pop
push
add
jge
mov
test
push
pop
push
sbbb
fsts
push
ja
movzbl
test
loop
dec
movsl
pop
push
outsl
jno
xlat
and
das
lcall
movsl
dec
ss
repz
add
add
adc
pop
cmp
sub
add
dec
stos
or
push
jo
adc
xor
inc
insb
mov
mov
push
jb
js
ds
popl
leave
adc
movl
movl
add
in
push
mov
xor
adcb
jmp
sbb
pop
push
add
inc
add
mov
lea
mov
lret
sbb
mov
cmp
out
or
jo
add
inc
push
jb
es
cltd
addl
ss
sub
mov
push
and
add
leave
and
push
adc
bound
mov
test
pop
loope
cli
es
sti
sahf
add
data16
xor
in
or
std
mov
or
mov
test
or
aad
pop
mov
or
add
dec
or
out
sub
lds
jl
mov
sbb
mov
sub
push
cli
test
or
mov
movsl
pop
bound
sbb
push
adc
cmpsl
or
subps
sub
test
hlt
mov
and
roll
cmpsl
mov
sbb
push
rclb
sub
cwtl
push
pop
pusha
mov
shll
repnz
call
repnz
nop
and
leave
xor
aas
push
es
shr
dec
jecxz
gs
je
add
int3
cld
clc
pop
jbe
jne
push
push
push
sub
xchg
xchg
and
push
jp
loopne
push
sub
sti
subb
fbld
pusha
cmpsb
std
out
rorl
pop
xor
lahf
out
fisubrs
in
sbb
add
push
or
or
insl
cmp
jge
movsb
movsl
fsts
dec
pushf
shll
xchg
or
daa
rorb
std
mov
pop
inc
mov
sbb
cmp
rcrb
dec
and
pop
int3
xchg
mov
cmp
loopne
cmp
les
in
lock
inc
js
inc
sbb
push
dec
add
push
push
ror
cmp
pop
loopne
add
lods
sub
or
je
subl
sub
jl
add
fcomp
mov
add
add
add
fcmovnu
lods
mov
dec
pop
or
xor
push
adc
pop
sub
fisttpl
dec
dec
jo
cltd
fisttpl
jl
ret
nop
adc
cmp
or
fldenv
or
add
mov
add
push
add
out
js
mov
int3
pop
dec
cltd
fs
pop
call
sub
fcomps
or
jno
mov
adc
mov
dec
movsb
loopne
addb
add
push
mov
fs
pushf
pushf
or
cmpsb
adc
add
mov
in
adc
push
mov
loop
sbb
incb
pusha
out
mov
mov
inc
es
pop
jo
iret
jmp
pop
add
jne
insb
lock
subb
mov
add
sbb
lock
mov
pop
sub
mov
pop
insl
repnz
stos
ss
cmc
jbe
into
leave
or
or
adc
inc
add
adc
jmp
jge
pop
push
mov
imul
loopne
xchg
pop
movsbl
sbb
mov
adc
or
arpl
fwait
adcb
addl
adc
ja
adc
adc
in
xchg
scas
movsb
adc
jl
cmp
mov
dec
adc
cmp
inc
insb
dec
sbb
insl
push
add
add
jge
nop
sbb
adc
mov
push
adc
test
xor
and
dec
je
adc
mov
or
and
and
pop
xor
push
mov
push
cmp
mov
sub
in
pop
add
push
push
test
mov
shlb
xchg
jb
fwait
mov
testb
mov
jle
movb
add
cmpsb
and
int3
add
push
and
inc
mov
sub
daa
faddl
stc
cmp
xchg
scas
push
int3
mov
test
push
push
jo
arpl
sub
das
push
test
hlt
cli
arpl
into
movl
sbbb
dec
jge
jne
mov
lret
xchg
sbb
mov
cmp
or
loope
iret
adc
ret
aam
xor
pop
aad
mov
insb
mov
clc
movsl
mov
push
mov
movsl
or
add
push
lahf
or
xor
xchg
xor
and
pop
insb
xorb
add
pop
cmp
out
mov
sub
push
fdivrs
xor
dec
addr16
mov
mov
push
add
push
or
push
repz
stc
stos
dec
sbb
cmp
mov
or
cltd
add
and
out
mov
adc
jns
push
jne
mov
xor
and
lahf
push
sbb
sbb
mov
sub
adc
xor
push
outsb
ret
and
adc
shlb
add
cmp
and
sbb
and
xor
cmp
mov
xor
or
xor
and
leave
sbb
push
rorl
push
dec
push
add
and
adc
push
mov
add
dec
mov
clc
xor
mov
test
push
jecxz
push
cmp
ficomps
xor
mov
cmp
jmp
sbb
jne
fdivr
ret
xchg
jl
in
xor
rolb
or
cmc
and
test
and
mov
bound
es
loope
xor
pop
xor
and
sahf
mov
and
rol
bound
dec
and
push
test
icebp
mov
lahf
mov
mov
jmp
pusha
cmp
sub
mov
stos
test
xor
es
orl
mov
mov
loope
jmp
mov
push
sub
inc
std
fists
push
lea
pop
rcrb
movl
push
xchg
add
outsl
sub
fistps
mov
xchg
test
cmp
sub
and
cmc
add
stos
icebp
adc
fmuls
cs
or
into
push
cli
lock
add
jbe
mov
rclb
and
scas
lea
fidivl
stc
mov
pop
rolb
jl
xchg
in
sub
sbb
rorl
and
in
subb
clc
cmpsl
jge
or
or
sub
mov
cs
inc
adcb
cltd
adcb
loopne
das
jnp
mov
sbb
push
loope
pcmpeqd
sbb
mov
or
push
add
bound
fildl
xor
add
sub
cmp
std
add
out
sbbl
lret
add
push
sbb
jb
xor
cltd
or
pop
ljmp
test
pop
sbb
es
dec
aas
pop
add
adc
leave
adc
inc
push
push
ss
mov
pop
cmpsb
in
jnp
push
sub
ss
or
repz
cmp
or
nop
push
ds
jl
push
and
or
lret
test
sbb
pop
pusha
push
dec
mov
cmpsl
push
sub
and
dec
push
test
cmp
sub
add
jns
fidivl
pop
add
mov
mov
dec
in
xchg
xor
xchg
je
xchg
test
xor
mov
push
xor
mov
cmp
cmp
iret
mov
cmp
push
cmp
xor
push
pop
inc
test
sub
cmp
add
adcb
mov
mov
in
leave
or
test
loope
xor
mov
mov
or
insl
dec
jge
push
mov
pop
adc
push
or
jne
movl
push
int
jb
test
and
inc
dec
cmp
outsl
imul
xchg
inc
inc
cmpsl
cmp
mov
sbb
mov
stc
mov
test
in
pop
inc
fidivrl
add
push
pop
cmpsl
jno
mov
mov
sub
or
outsb
insb
push
jg
mov
movb
and
in
jno
mov
loopne
inc
outsl
inc
imul
cmp
sbb
cltd
pop
in
mov
inc
or
aaa
sahf
out
sbb
sbb
mov
adc
call
mov
add
mov
inc
or
lods
mov
push
xchg
mov
mov
push
push
xchg
ret
mov
cmp
enter
mov
mov
stos
pop
push
inc
xor
push
push
dec
loopne
lock
cmp
or
or
jmp
xchg
pop
inc
dec
hlt
push
inc
push
je
ret
movsb
and
faddp
in
dec
addb
mov
ja
adc
lock
xchg
lods
inc
out
sbb
mov
jecxz
addr16
ljmp
xor
sub
lods
dec
jp
mov
xor
jne
inc
cmp
sbb
es
fwait
int
xor
popf
mov
push
inc
dec
mov
inc
mov
rcrb
push
aad
fs
test
push
loopne
mov
dec
pop
cmp
add
cmp
lea
jbe
cmp
or
fs
jbe
push
sub
pop
xor
sarb
push
sbb
imul
fldcw
xor
xor
or
mov
je,pn
int3
popa
pop
sub
add
add
xor
or
clc
lea
pop
mov
testb
sub
fiaddl
scas
fs
pop
add
add
mov
subb
adc
dec
push
rclb
into
ja
negl
lret
popa
fldl
repnz
add
sahf
sbb
or
xlat
cmp
push
inc
scas
fists
add
push
mov
dec
das
rcrl
enter
orb
add
or
pusha
mov
pop
pop
mov
add
je
sarl
sub
or
cmp
pusha
pusha
and
or
or
xchg
pop
inc
add
pop
sti
sub
pusha
mov
punpckhwd
repnz
lock
out
push
adc
adc
or
loop
jns
xchg
jl
cmp
sub
nop
mull
push
mov
addl
adc
adc
jl
add
sub
jo
inc
inc
adc
sub
or
or
leave
xchg
fists
repnz
testb
xchg
xor
and
add
adc
imul
cmpsl
add
mov
xor
and
pushf
ss
xor
lods
push
andb
js
js
adc
rcrl
loope
addl
cmp
and
dec
inc
or
push
pop
repnz
cwtl
push
and
add
inc
testl
xor
nop
xchg
das
xchg
decb
push
nop
add
or
and
ds
jl
std
adc
xchg
dec
enter
add
cmp
sbb
stos
xchg
popa
pop
add
popf
inc
dec
mov
mov
push
push
addr16
loope
cld
aam
sbb
or
dec
pop
das
sbb
dec
test
inc
and
jbe
lahf
js
add
insb
cmp
or
pop
pop
addr16
out
sbb
mov
enter
in
sbbb
and
jno
sahf
andl
out
push
sbb
in
mov
cmp
sub
lds
and
leave
jmp
ja
mov
idivl
cltd
pop
addb
jno
cmp
inc
adc
out
cmp
cltd
insb
subb
adc
pop
rclb
push
push
lea
fistpl
leave
adc
nop
shll
ret
pop
imul
in
push
or
mov
cmp
imul
and
mul
mov
mov
clc
xchg
adc
pop
or
mov
int3
aam
push
add
add
jp
int
sub
jl
or
jmp
push
adc
adc
mov
cld
test
add
add
into
mov
and
xchg
hlt
popf
jae
or
outsl
in
pop
jecxz
and
and
xchg
push
lret
pusha
nop
xchg
push
sub
into
and
mov
pop
pusha
stos
imul
adc
in
nop
dec
cs
pop
pop
add
add
ss
xor
movsb
cmp
shll
insb
mov
shll
push
sub
inc
es
arpl
pop
adcb
add
movsl
pop
mov
lret
orl
add
jl
js
or
push
adc
mov
pushf
sti
je
jecxz
sub
adc
iret
pop
cli
aam
frstor
outsl
pop
jne
mov
movsl
and
bound
xchg
jnp
jne
push
mov
adc
mov
adc
sti
or
adc
and
jl
call
and
or
jge
fsubrs
icebp
xor
lcall
sub
xor
push
sti
and
out
das
mov
jg
scas
xor
test
aaa
add
into
or
mov
ss
push
bound
adc
fnstenv
aam
add
add
cmpsl
push
addb
jns
movsb
push
pop
jns
sbbb
shl
pop
jae
xchg
add
inc
inc
mov
sarb
adc
dec
imul
mov
addl
les
test
adc
jp
mov
jno
pop
push
push
lahf
loop
or
inc
add
lods
push
mov
cmp
lea
addb
push
fisttps
add
sbb
push
stc
aam
or
test
in
mov
mov
mov
test
mov
jne
add
test
test
and
sbb
inc
xchg
xchg
or
not
jno
sbb
shlb
dec
je
jecxz
dec
sub
add
jle
push
lods
xchg
subb
dec
xor
inc
inc
mov
ss
dec
jp
les
mov
xor
dec
pop
test
cmp
dec
ss
cmp
adc
add
js
pop
add
scas
loopne
xor
outsl
pusha
add
dec
and
jmp
test
popf
xchg
cmp
cmc
dec
sbb
repz
inc
adc
xor
out
jno
inc
repnz
out
pusha
or
inc
daa
jns
je
or
add
xchg
add
add
xor
add
push
test
inc
add
jo
data16
add
mov
xchg
xlat
xor
pop
in
jecxz,pn
xlat
cmp
pop
outsl
and
sub
sbb
incb
jle
mov
mov
xor
call
push
add
decb
add
pop
add
pop
add
ret
adcb
hlt
add
aas
gs
sbb
dec
insb
cs
jae
xchg
shrb
outsb
push
insb
into
inc
adc
js
cmp
cmc
mov
xchg
push
jle
pop
cmp
push
mov
inc
nop
insb
xchg
push
inc
pusha
pop
push
es
ret
pusha
ja
stos
stos
mov
add
mov
lcall
jle
aas
js
mov
out
jge
sbb
orl
ja
sub
loop
xor
mov
jo
sbb
test
mov
cmc
add
js
push
xor
add
push
push
xorb
sub
cld
push
jecxz
mov
add
adc
or
cmp
aas
lea
xchg
imul
adc
fdiv
add
cli
mov
add
ljmp
mov
sub
or
add
in
out
outsl
mov
jmp
or
xor
shlb
int
test
femms
aad
pusha
lock
sub
aad
repz
and
mov
add
inc
repnz
ds
xor
jmp
inc
addl
shll
andl
pop
dec
stc
sub
insb
pusha
outsb
jne
and
insb
pushf
faddp
dec
xchg
and
cmpsl
inc
jmp
sub
imul
sbb
add
jo
rcr
sbb
jo
mov
sbb
inc
lahf
call
pop
hlt
lods
addl
and
push
push
adc
data16
cmp
pop
das
xorb
jg
jbe
cmp
test
push
push
fcmovu
push
xor
test
jne
insl
mov
cmp
add
cmpl
jbe
adc
mov
xchg
xor
subb
sub
sub
jae
mov
and
loope
popa
cmpsb
pop
push
add
push
jmp
loope
mov
sbbl
jne
cld
push
jg
xchg
inc
add
jns
js
sete
lds
pop
dec
aam
push
push
movsl
pop
out
lea
ficompl
test
dec
and
pop
adc
jo
push
pushf
add
repz
nop
pop
lods
mov
add
sub
test
and
sbb
mov
bound
and
rolb
shrb
push
add
clc
es
or
subl
add
push
jg
pop
add
enter
subb
in
cmc
and
mov
insb
mov
mov
aas
xor
es
js
inc
add
push
adc
out
sbb
xor
add
enter
iret
ficomps
xor
fwait
mov
and
push
lcall
stos
sarb
or
or
dec
inc
shl
mov
push
dec
repz
clc
cmp
dec
mov
adc
mov
mov
adc
call
rorl
adc
mov
mov
movsl
pop
std
pusha
adcl
setge
sub
dec
movsl
fdivr
mov
cmp
pusha
insb
sub
sbb
or
lock
lock
mov
or
xor
xchg
and
dec
pop
or
fcomps
and
xchg
or
xor
insb
pop
or
pop
leave
popa
dec
je
sub
lahf
mov
pop
sbb
fidivrl
test
enter
add
inc
dec
xchg
push
jno
pop
add
adc
mov
inc
inc
mov
dec
shlb
sub
lcall
jle,pt
sbb
pop
popa
adc
xchg
cmpl
pop
pop
sub
jmp
aaa
aam
cmpl
dec
aaa
push
and
add
cmp
lret
push
stos
call
or
push
push
sbbl
and
nop
in
push
imul
push
mov
cmpsb
arpl
pop
js
fisttpl
outsb
insl
rclb
fsubrl
sub
and
sbb
mov
daa
sub
push
push
leave
xchg
sbb
adc
scas
popa
icebp
or
adc
adc
movsl
mov
jle
or
cmp
mov
std
jno
mov
fidivrl
movb
and
xor
and
sbb
jbe
stos
sbb
and
xchg
or
cmp
mov
inc
clc
push
idivb
push
or
jbe
mov
gs
fnstsw
xor
popfw
cmpl
mov
sbb
push
cmp
mov
dec
stc
mov
rorb
jmpw
rcrb
popf
retw
xor
jo
xchg
push
divl
loopne
mov
push
loope
sti
test
test
je,pn
push
ret
pushf
mov
xor
xor
mov
ret
and
xchg
add
dec
aaa
arpl
or
fisubrs
sarb
mov
or
call
clc
add
test
test
rcll
inc
les
into
ja
stc
sbb
sub
push
loop
rolb
cmp
pop
add
ja
cmp
int3
loope
in
out
mov
testl
cmpb
test
sar
adc
xchg
sub
sbb
cwtl
sbb
fucom
and
cld
mov
jecxz
pop
adc
add
sub
or
lea
jge
push
xor
popf
mov
push
imul
push
add
stos
add
jb
adc
sub
cmp
testl
jne
mov
xorl
mov
cmp
jg
mov
sbb
sbb
test
pop
leave
leave
jmp
mov
cmp
adc
mov
mov
dec
cs
or
dec
push
add
repz
leave
gs
xchg
int
jb
sub
push
cwtl
cmp
sar
mov
ja
mov
xor
je
cmpb
pop
cmp
dec
cmc
lahf
add
lock
push
mov
sti
sub
push
push
mov
sti
sti
push
add
sub
sub
in
cmc
sbb
lret
lret
add
add
pop
fdivrl
push
mov
xchg
or
lock
adc
dec
hlt
jge
int3
adc
jp
aaa
lods
add
add
fwait
dec
ds
movl
add
jo
pop
iret
jno
enter
sbb
sub
push
es
xchg
outsb
sbbb
push
adc
cld
xorl
push
push
jg
push
add
push
jmp
loop
repz
push
ret
enter
jp
in
bound
movl
loope
lea
mov
fucomp
add
or
push
ret
out
jno
jo
sub
push
hlt
sub
push
test
and
push
pop
ret
jg
push
adc
test
bound
mov
mov
adc
mov
and
mov
div
shll
out
add
hlt
push
adc
pop
xor
or
ret
jg
ja
enter
sub
inc
sbb
adc
outsl
addb
lods
rcll
mov
push
add
push
push
mov
xchg
stc
ljmp
dec
ret
push
jbe
popa
push
addr16
cli
xor
jle
pop
pop
mov
ret
or
push
jle
add
add
xorl
push
xor
hlt
pop
popf
iret
outsb
repnz
movsb
add
mov
in
add
ret
pop
mov
xor
fwait
es
dec
sbb
xchg
dec
or
pop
dec
adc
popa
xchg
lahf
xor
imulb
push
es
dec
sbb
inc
pop
sbb
adc
mov
movsl
fldenv
or
out
xor
dec
adc
test
jl
loop
call
lea
cmp
jle
lock
stos
add
movb
cmp
inc
adc
lock
loop
or
pop
pop
rol
lcall
dec
jl
cmp
popf
or
iret
push
faddl
scas
and
lods
pop
sahf
cmpsl
push
lea
scas
pop
pop
push
rolb
ret
dec
or
push
push
mov
aaa
mov
cs
push
std
gs
popf
icebp
jp
outsb
push
add
and
or
xchg
shr
mov
push
add
dec
xchg
hlt
adc
and
xchg
in
jge
mov
or
mov
sbb
pop
pop
pop
and
pop
pop
pop
mov
jmp
jl
add
ret
pop
inc
pop
pusha
pop
dec
add
xorb
fisttps
aas
mov
mov
or
or
inc
or
adc
movl
in
jg
mov
inc
fisubrs
push
shlb
pop
lcall
xor
out
add
loop
jp
pop
ret
stos
jmp
jo
je
pop
pop
mov
xor
cmpsb
push
mov
lret
inc
mov
shrl
jb
add
sub
pop
ret
push
sbbl
and
fs
push
stos
mov
or
mov
fs
pop
pop
mov
sbb
xor
movsl
pusha
js
jns
arpl
sahf
inc
mov
mov
xchg
pop
push
push
push
mov
pop
cmp
jb
inc
or
lods
push
cmp
inc
xor
lds
or
sub
inc
subb
pusha
xchg
shll
push
xor
xchg
je
lret
sbb
push
sub
push
iret
adc
pop
sub
ret
inc
orl
imul
enter
add
scas
xorb
imul
jmp
cmp
sbb
sub
shll
or
add
lret
outsb
aas
in
cmp
jmp
sub
jne
sbb
mov
jmp
cmp
out
lahf
mov
add
sbb
ss
movsl
and
mov
sbb
cmp
arpl
or
dec
test
sbb
push
dec
pop
ret
inc
push
push
xchg
hlt
adc
push
mov
dec
push
add
sub
orb
and
sbb
mov
mov
cmc
adc
xor
xchg
xchg
push
lods
jne
push
push
or
imul
loopne
jecxz
mov
jae
movsl
xor
cmp
enter
adc
sub
sub
cmpsl
push
jmp
mov
adc
cmp
add
xor
int
icebp
in
mov
sbb
jl
lock
addr16
push
ds
adcb
inc
xchg
loopne
inc
shrl
sub
lods
or
inc
andb
mov
je
inc
adc
jmp
add
sub
push
mov
xchg
adc
aam
add
jbe
dec
cmp
psubsw
adc
add
xchg
pusha
movsl
aaa
xor
std
pop
cmp
inc
push
push
fimuls
xchg
mov
cwtl
iret
ljmp
add
pop
or
shl
fistpl
sbb
les
xchg
or
inc
inc
shll
fisttpl
out
sub
scas
push
push
or
cmp
cld
aas
push
xchg
cmp
mov
lds
cmc
xor
mov
cmc
mov
push
rol
sbbb
pop
or
pop
jo
push
sbb
pop
dec
and
cmp
inc
cmp
in
and
jecxz
mov
int
pusha
sub
lcall
pop
repnz
cmp
stos
xor
xor
int3
push
cmpsl
jne
aam
int
sbb
pusha
aad
push
mov
dec
insl
or
insb
jo
mov
and
add
push
add
push
arpl
pop
jle
pop
jne
ret
dec
xor
mov
push
add
test
shr
in
arpl
push
add
pop
xlat
cmpsb
xchg
lahf
or
adc
xor
and
stos
pusha
mov
sub
pop
fs
adc
sahf
mov
loope
mov
mov
sub
aaa
and
push
out
test
sbb
add
mov
jae
inc
cmp
and
sbb
and
mov
sub
aaa
sbb
adc
jne
adc
mov
push
aaa
call
dec
pop
jne
stc
and
insb
add
mov
and
xchg
addl
stos
cmp
ss
enter
push
dec
ss
push
and
in
inc
cmp
imulb
and
hlt
and
add
push
sub
push
push
je
dec
jl,pt
mov
push
cltd
dec
add
xor
or
and
cmp
addr16
adc
jecxz
xor
mov
mov
lea
add
sbb
push
insl
inc
arpl
mov
pop
das
or
daa
add
pushf
cs
xchg
adc
push
movsl
cmp
and
aam
jnp
mov
xchg
dec
pop
push
mov
push
jbe
mov
add
adc
dec
inc
add
test
push
cli
push
shll
popa
test
aas
mov
pop
stos
mov
dec
xor
and
xor
push
mov
fsts
xor
pop
and
pop
ror
sub
xor
lcall
ror
out
dec
add
push
mov
lret
mov
sbb
sub
mov
sbb
aad
inc
push
mov
and
sti
adc
test
or
mov
jg
mov
mov
js
mov
scas
push
mov
pop
inc
or
test
and
xlat
xchg
clc
add
mov
ret
push
ds
lret
or
sub
scas
or
je
dec
mov
loop
push
cmpsl
cmp
sub
push
and
inc
lock
mov
addr16
mov
in
ret
or
scas
adc
push
mov
inc
push
leave
push
aaa
dec
inc
cmpsb
inc
leave
rorl
sub
mov
stos
cltd
dec
stc
dec
daa
es
and
push
sbb
mov
dec
or
xchg
je
or
and
sub
or
inc
or
adc
call
inc
mov
sbb
jg
sarb
dec
push
xor
inc
test
fldz
or
sub
idivl
out
add
xor
pop
cmp
jb
pop
pop
add
je
js
nop
je
push
imul
lea
push
push
inc
sub
jne
push
rorl
add
mov
fiaddl
mov
jl
mov
mov
cmpsl
xchg
orb
std
imul
add
in
mov
jle
cmpb
jno
mov
sub
or
jge
lret
fisttpl
xor
dec
add
ror
xor
pushf
nop
ficompl
sahf
fists
and
push
sub
hlt
xchg
loopne,pt
imull
xor
out
lsl
pop
push
push
push
push
movl
push
push
push
push
test
inc
insl
and
sti
filds
xchg
push
add
add
push
movb
mov
rol
xor
mov
fsubr
lds
enter
loop
mov
add
js,pn
jg
add
data16
ja
js
sbb
hlt
adc
call
lcall
push
sub
test
or
inc
cli
ljmp
push
pop
or
nop
push
cld
scas
xchg
popa
add
dec
jno
jmp
sbb
mov
in
mov
inc
pop
lahf
jle
inc
push
push
nop
data16
stc
lds
jg
mov
lea
jmp
inc
or
dec
outsl
lcall
inc
push
rorl
ret
leave
adcb
pusha
and
mov
pop
inc
add
fsub
inc
add
jbe
je
scas
jl
andl
ljmp
xchg
or
adc
mov
push
push
mov
enter
or
gs
popa
movl
jmp
and
in
jg
adc
pop
dec
add
add
jg
pop
ret
ret
add
cmp
push
call
loopne
add
jnp
lock
xchg
lock
mov
jb
ret
push
push
and
sti
push
push
ds
sbb
push
es
fisubrs
popa
push
push
test
adc
mov
cmc
ret
out
in
sbb
shl
jne
bound
jge
inc
sbb
sahf
jnp
or
dec
pop
das
pop
add
and
data16
adc
pusha
addr16
pop
xor
cmpsb
add
jge
hlt
mov
dec
add
shll
mov
jbe
sbb
sbb
cmpsl
jnp
or
sbb
mov
push
mov
xlat
push
push
xlat
sbb
push
out
sub
sbb
sub
or
notb
mov
sbb
pop
adc
and
ds
dec
adc
fisttps
cld
xor
negb
mov
inc
push
js
xor
dec
aaa
loope
mov
and
cmpl
push
xor
in
outsl
sahf
push
cmp
in
xor
inc
add
je
and
inc
std
loope
push
and
fimull
mov
pop
mov
shl
xor
adc
add
mull
ja
or
mov
pop
fcoms
add
add
pop
mov
fstps
fsub
lock
push
or
sarb
lea
push
pop
xor
scas
add
hlt
es
dec
cmp
adc
or
push
addr16
sbb
mov
repnz
imul
lret
or
pop
ret
cmp
and
mov
add
or
adc
adc
jo
ljmp
push
dec
mov
scas
or
inc
clc
xor
incb
sub
gs
jo
loopne
cwtl
enter
sbb
sarb
lcall
ret
mov
bound
pop
loopne
mov
lock
loope
pop
sbb
push
cmp
movsb
inc
aam
lods
inc
sbb
rcll
xchg
push
sti
push
rcl
jbe
add
jnp,pt
cmp
jae
mov
mov
pop
lahf
stos
jg
push
sbb
add
dec
jb
pop
lea
ret
add
mov
jl
mov
cmp
and
inc
adcl
sub
js
sbb
mov
xlat
pusha
mov
xor
dec
movsl
push
test
sti
pop
test
add
sbb
scas
pop
ret
negl
and
movb
imul
pop
or
add
enter
inc
and
mov
pushl
test
cmp
lea
jne
push
push
add
xor
or
pop
mov
jl
cmpsb
mov
mov
lock
push
push
lods
xchg
sub
cmp
jo
mov
aam
add
mov
movsl
repnz
cli
pop
pop
ret
sub
or
testl
pop
movl
jns
ss
jb
ja
mov
jmp
sub
cmp
jb
add
dec
add
gs
adc
push
mov
push
shrl
fs
and
pop
andl
mov
xchg
arpl
mov
loopne
pop
ja
adc
inc
roll
in
filds
and
or
add
ret
ss
push
add
or
or
xor
aas
sbb
and
add
or
pop
ja
and
mov
push
pop
mov
add
add
out
jne
dec
mov
enter
pop
repnz
sub
pop
pop
xlat
in
dec
sbb
fistps
testb
enter
jl
and
loop
push
aad
in
cs
das
je
or
cmpl
outsl
or
jne
mov
mov
ret
je
mov
lea
dec
fwait
mov
sahf
inc
clc
xchg
pop
call
int
testb
sti
inc
or
jmp
es
cmp
aad
or
stos
and
add
or
add
addl
inc
jmp
inc
and
psllw
inc
mov
fimull
mov
pop
ret
roll
and
fiaddl
test
sarb
out
mov
dec
lcall
test
out
push
dec
adc
icebp
mov
mov
mov
adc
and
popa
push
pop
inc
pop
sub
mov
ds
sub
cmp
aaa
pop
adc
cmp
sbb
mov
jl
jb
negl
test
dec
adc
mov
sub
movsb
cmp
add
imul
adcb
ret
dec
push
sub
inc
push
cmp
cmpsb
pop
in
ljmp
inc
cld
push
push
test
adc
sbb
dec
aaa
sub
nop
mov
sbb
xchg
mov
cli
and
pop
sub
roll
jg
and
inc
cmp
jb
cmp
mov
or
shlb
xor
sub
cmp
ja
and
mov
lock
aaa
movzwl
jmp
cmp
xor
add
mov
aaa
daa
cmp
test
fnsave
mov
mov
add
fidivs
mov
pop
dec
inc
pusha
pop
pop
mov
pop
inc
add
jmp
cwtl
aas
xor
sub
lcall
jle
ss
je
add
stos
jne
ret
sbb
sbb
test
mov
and
mov
jmp
push
test
add
aas
adc
jo
jne
shlb
sbb
dec
sbb
mov
dec
call
mov
fidivl
and
xor
popa
or
jmp
xchg
lret
cmp
ds
jbe
adc
stc
fnsave
mov
aas
and
test
adc
je
test
jne
dec
xchg
and
or
xor
dec
cmp
and
repnz
adc
movb
inc
mov
or
ss
notb
rcll
lret
test
enter
add
push
notl
pop
mov
inc
and
adcl
and
mov
lods
out
dec
dec
xor
int3
imul
adc
push
jae
aaa
push
mov
inc
pop
jbe
push
cmp
in
lea
sbb
jg
scas
int
fnsave
cwtl
dec
popf
test
inc
repnz
push
xchg
cmp
pop
aad
mov
scas
xchg
cmp
add
mov
lret
dec
repz
ret
ret
es
mov
pop
aas
sub
nop
cmc
sahf
add
xorb
sbb
xchg
shrl
ljmp
sar
and
repz
cmpl
sub
je
scas
aam
push
das
mov
xor
or
mov
or
push
xor
mov
cmp
in
imul
pop
lret
jb
cs
fs
dec
inc
mov
ficompl
inc
jg
test
fmuls
dec
cmp
push
sub
xor
icebp
add
sbb
call
xchg
pop
jmp
sub
add
sub
mov
sub
cmp
out
cmp
je
cmp
je
xchg
fisubrs
shll
and
or
mov
cmp
and
push
and
inc
or
jb
pop
jmp
add
mov
dec
lods
cmp
or
xor
aas
pop
or
mov
fs
pop
add
mov
jbe
lea
sbb
jo
sahf
into
xchg
add
out
les
cmp
inc
paddsw
add
mov
shlb
pop
leave
mov
jbe
jmp
mov
mov
adc
jmp
xchg
test
mov
cmp
je
push
rcll
scas
jo
stc
add
push
add
out
mov
push
adc
and
loopne
in
lahf
shlb
out
mov
inc
push
xor
xor
mov
je
xor
adc
pop
je
jg
sbb
pusha
jb
mov
push
rol
jno
adc
mov
pop
pop
clc
pushf
cmp
je
push
aad
rorb
popa
mov
mov
dec
shl
orb
xchg
into
repnz
dec
mov
adc
cltd
clc
push
push
push
mov
mov
fdivrs
jbe
mov
out
or
mov
in
cmp
sti
sub
outsl
nop
mov
adc
sub
adc
lods
jg
jge
cmp
lds
and
repnz
fadds
push
push
lea
sti
sahf
testb
lea
nop
inc
addl
scas
jbe
incl
xor
push
mov
jb
mov
add
push
mov
int3
sbb
fstl
lea
inc
mov
pop
mov
out
mov
stos
loopne
jg
lahf
and
or
stc
dec
popa
jle
js
xchg
inc
jb
movsb
add
pop
fwait
jne
mov
push
ret
cli
cld
ss
cmp
roll
ret
leave
mov
cmp
and
aam
adc
and
mov
inc
shl
push
adc
cld
sub
mov
adc
mov
mov
xor
mov
mov
stos
adc
xor
cmpsb
pop
loop
test
pop
jae
test
out
gs
popa
and
rol
inc
sti
sbb
jne
lcall
fstl
out
add
loope
mov
inc
add
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
or
and
push
cmp
add
mov
or
cmp
cmpl
cmp
addr16
shlb
jnp
fidivrs
ficoml
cmp
cmp
fcomi
inc
mov
push
inc
inc
inc
jne
pop
movb
test
bound
cmp
pop
insb
mov
jecxz
nop
xlat
pop
or
sbb
mov
shll
or
shlb
xor
xor
xor
out
ljmp
cwtl
scas
leave
and
dec
jnp
adc
sub
cmp
push
mov
das
clc
call
xchg
insb
push
push
xchg
ror
mov
push
jb
mov
inc
shll
jmp
lock
cmp
je
cmpb
cmp
jne
insb
pusha
mov
jne
andl
gs
cmp
adcl
add
mov
arpl
inc
cmp
ja
addr16
test
adc
or
xchg
scas
gs
cwtl
call
iret
dec
dec
movsb
xchg
mov
out
shrl
xor
jae
cmp
je
cmp
mov
or
pop
insb
pop
inc
inc
mov
int
mov
jl
pop
mov
rorb
and
incl
xchg
and
jo
cmp
inc
jbe
sub
mov
shr
add
mov
or
or
adc
push
mov
in
testl
enter
je
or
sbb
mov
pop
jne
shr
sbb
rorb
adc
adc
sub
cs
xchg
and
mov
push
mov
imul
cs
dec
cmp
xor
cmp
mov
mov
mov
push
push
pop
and
sbb
cmp
mov
push
push
fisubrl
xor
jb
inc
inc
push
cmp
mov
dec
cmp
std
push
lea
dec
pop
jno,pn
cmp
pushf
push
loop
mov
or
or
push
daa
sub
xchg
outsl
movsl
pop
xchg
sub
mov
or
dec
xor
mov
xor
cmp
hlt
jb
dec
adc
mov
or
cmpsl
test
ret
roll
jl
cmp
mov
sub
mov
or
add
push
orb
inc
mov
insl
loope
fcoml
and
insl
mov
lret
add
pop
add
sbb
mov
push
inc
loop
popf
pop
scas
cmp
repnz
push
ds
or
enter
in
add
rcrl
and
push
or
push
inc
ret
jo
dec
mov
decb
mov
pop
add
or
lcall
adc
mov
xchg
test
les
dec
mov
dec
dec
bound
into
adc
cmp
adc
or
lret
dec
or
mov
sbb
sub
sbb
push
add
lock
sarb
add
je
push
push
or
mov
insl
mov
adc
movsl
in
fidivl
xor
sbb
sbb
pop
push
pop
dec
in
stc
push
cmp
jle
mov
je
xchg
inc
inc
or
dec
xor
pop
push
ds
xor
daa
pop
sbb
mov
mov
sbb
in
dec
ljmp
or
mov
cmpb
push
je
pop
jo
nop
in
add
shrb
pop
in
pushf
or
xor
cmp
mov
dec
data16
sub
xor
inc
jne
push
ret
dec
nop
les
pop
push
adc
fs
cmp
dec
fwait
imul
jb
pusha
push
fistpll
xchg
and
sub
jle
or
popa
lock
dec
push
pushf
push
mov
test
or
xchg
test
and
out
call
cmp
das
adc
imul
les
mov
sub
sub
lahf
rcr
es
dec
inc
jno
cmpsl
cmp
in
movhps
inc
fldt
sub
pusha
xchg
sub
fidivs
lods
rcll
ljmp
into
fimull
shrb
cmp
adc
add
outsb
sub
and
loopne
push
cmpsl
dec
or
push
pop
jmp
jns
add
ljmp
sbb
pusha
pusha
jbe
fidivrs
adc
into
pop
mov
cltd
insb
xor
mov
xor
hlt
adc
js
sbb
in
stos
sbb
aam
mov
fidivl
fisttpll
and
pop
dec
popa
enter
mov
out
jne
xor
pop
sbb
sbb
push
mov
sbb
inc
adc
jecxz
and
popa
or
sub
pop
leave
int3
mov
ret
or
pop
jecxz
mov
pop
cmp
dec
faddl
jno
cmp
jl
sbb
or
adc
les
pop
lahf
jbe
outsb
aaa
push
cmp
jne
push
push
xorl
dec
or
push
ffreep
imul
push
inc
push
push
adc
sarl
inc
adc
ds
push
mov
es
cmp
and
mov
pop
les
add
pop
ret
xor
es
sbb
add
je
xor
leave
mov
lock
jmp
sub
scas
movl
sahf
xor
inc
dec
xor
lcall
jbe
dec
shll
cmp
and
jae
sbb
jle
mov
popl
lret
repz
jno
sbbb
inc
fcmovnbe
fs
mov
or
jbe
xchg
std
add
sbb
jge
loopne
lret
imul
add
add
pop
aam
adc
sub
lods
pop
push
cmp
and
push
stc
mov
es
dec
outsl
or
or
int
jecxz
hlt
jno
faddp
and
xor
xor
pop
mov
sub
cmp
int
pop
dec
add
mov
xor
out
mov
push
pop
sub
int3
xor
int3
aas
stos
shlb
cmp
test
or
sahf
loope
aam
pop
add
inc
inc
in
adc
int3
sbb
or
dec
popa
pushf
ss
fwait
hlt
aam
and
jg
add
sub
add
lea
mov
mov
lods
pop
pushf
jg
inc
mov
adc
jae
push
inc
scas
sahf
hlt
sbb
cmp
pop
dec
pop
in
jmp
lods
and
sbb
push
push
or
pusha
jae
and
mov
out
push
test
sbb
mov
clc
mov
mov
rcrl
mov
add
je
into
add
jmp
mov
xor
add
lea
pop
inc
inc
and
loopne
mov
cmp
enter
sub
dec
dec
add
and
mov
int3
movsl
roll
or
lea
rcl
push
mov
icebp
add
sbb
push
fs
daa
sub
lret
add
fsubs
and
adc
rcr
jecxz
lea
inc
lock
mov
insb
sti
pop
mov
mov
xor
inc
imul
jmp
and
xchg
add
dec
in
addr16
xor
xor
cmpsb
dec
loop
dec
xor
push
aam
outsl
sbb
loopne
jl
cmp
stos
add
xor
add
cmp
xlat
je
add
pop
sub
and
lds
cmpsb
sbb
orb
sub
sbb
out
in
arpl
or
xchg
dec
mov
imul
orl
mov
stos
in
xlat
or
push
cmp
add
push
xorl
sbb
lods
jp
jg
inc
popa
sub
movsb
adc
cmp
xchg
out
jns
add
scas
add
lahf
add
add
dec
or
cltd
mov
loopne
jo
sbb
xor
or
and
ret
jge
and
adc
sbb
mov
and
adc
dec
out
mov
add
js
cmp
fnstenv
shr
xchg
aaa
movsb
sub
fisubrl
loopne
insb
pop
loopne
dec
daa
pop
mov
sub
dec
and
or
mov
out
add
xchg
enter
fs
aam
push
addr16
dec
outsb
test
inc
mov
and
inc
and
sbb
mov
pop
sete
repnz
add
or
add
mov
insl
xor
push
add
or
inc
ficoms
sub
leave
dec
subb
push
or
jne
cmp
loopne
imul
jbe
mov
xlat
cmp
leave
orb
in
xchg
adc
pop
sub
adcb
rclb
les
push
into
mov
int3
ret
scas
xchg
push
ret
cwtl
mov
sub
imul
inc
push
in
bound
or
sbb
xor
add
or
orl
add
popl
pop
xor
test
dec
xor
adc
in
push
pusha
lods
or
lret
and
inc
push
sub
xor
pop
fnstsw
aas
lcall
adcl
xchg
ss
dec
lahf
xchg
ja
jbe
jge
xchg
pop
mov
xor
je
xchg
pop
daa
and
stc
dec
sub
pushf
mov
lods
test
cmpsb
lahf
xor
sub
jnp
loope
and
inc
and
and
dec
or
nop
inc
and
xchg
inc
fmul
test
xchg
add
clc
add
fsubrl
sub
adcl
cmpsl
or
sbb
push
cmp
es
pusha
sub
xchg
imulb
sbb
add
push
dec
gs
xchg
inc
cmp
out
loope
sbb
and
xor
push
lahf
sbb
cwtl
pop
adc
ret
scas
pop
movb
cmp
sub
add
mov
fwait
sub
lcall
xchg
xchg
popa
push
std
cmp
sub
ret
andb
push
imulb
push
sbb
iret
xchg
adc
xor
leave
and
cmp
cmp
mov
lcall
mov
cld
cmp
popf
mov
mov
pop
jns
inc
fidivs
adc
hlt
mov
xor
xchg
nop
push
adc
out
add
je
mov
jl
fsubs
xor
mov
xorb
lahf
cmp
jl
xor
mov
ja
sbb
rclb
push
js
nop
fists
setns
loopne
mov
xor
test
mov
int3
fimull
in
lds
and
pop
ret
int3
push
jmp
fs
std
or
add
jp
out
inc
repz
in
pushf
xor
cmp
pop
sete
ret
inc
fnstsw
pop
ljmp
cmp
and
push
repz
cmp
jge
jge
adcl
xchg
fidivs
sbb
sbb
aaa
and
fisubl
das
and
js
lea
xchg
dec
xchg
sbb
daa
sub
movsl
in
cmc
and
push
mov
fucomi
sub
in
fstpt
sub
adc
sbb
rorb
stc
out
sub
stc
out
sub
push
jle
cs
add
jmp
adc
je
jnp
adc
add
ret
push
enter
sbb
scas
das
dec
add
mov
adc
push
mov
aad
pop
dec
mov
push
sub
dec
test
lock
add
jl
jl
push
add
in
xor
test
mov
mov
jne
lds
mov
sbb
xor
cmp
insb
mov
orl
cmp
shll
push
pop
jo
add
or
xor
push
lock
cltd
xor
dec
mov
add
add
push
jmp
dec
fcmovnu
mov
outsb
add
mov
sbb
rol
lcall
fs
and
sbb
fcompl
or
xor
pusha
push
jns
insl
inc
dec
mov
mul
add
mov
push
sbb
dec
xor
cmp
cmpl
clc
and
mov
add
sbb
cmpsb
push
ss
jo
lcall
xor
sbb
jae
incl
adc
mov
push
push
add
dec
cwtl
add
push
adc
inc
adc
and
jns
sbb
add
loopne
or
mov
push
pop
lcall
icebp
or
es
testb
clc
cmpl
cmpl
add
repnz
mov
dec
out
pop
rorb
in
inc
adc
xchg
cmpsl
dec
push
and
sbb
imul
xor
leave
and
test
cmp
nop
xchg
pop
xor
in
into
mov
xchg
mov
es
adc
daa
popa
leave
shlb
test
cmpsl
jo
and
mov
out
es
imul
pusha
add
pop
aas
mov
add
sub
les
adc
and
dec
fiadds
xchg
add
cmp
xor
dec
inc
mov
icebp
mov
xchg
mov
call
and
imul
fwait
clc
adc
jo
ret
cmp
in
push
movzbl
mov
scas
add
test
stc
or
cmpsb
sbb
cmp
enter
shll
mov
dec
adc
mov
push
cmp
dec
sub
sbb
or
or
push
or
mov
inc
test
push
sbbl
add
push
and
std
adc
addl
dec
mov
adc
xchg
das
movsb
popa
push
pop
movsl
jmp
pop
push
pop
jl
pop
dec
xchg
inc
stc
and
adc
sbb
add
jnp
sbb
adc
pop
bnd
fstl
and
arpl
mov
adc
and
inc
xchg
clc
dec
push
or
push
or
pop
leave
cmp
clc
jge
sbbb
push
gs
dec
cli
pop
sub
js
bound
popf
js
decb
clc
push
xchg
cmpl
pop
test
push
jmp
sub
cmp
std
push
push
stc
stos
xchg
or
mov
push
xchg
pop
je
or
or
adc
sbb
repnz
dec
fmuls
daa
sbb
mov
adcl
pop
je
mov
mov
mov
ja
and
xchg
int
xor
and
push
sub
loop
pop
adc
out
inc
pusha
jo
jmp
sub
jo
sub
inc
mov
popa
sbb
cs
das
adc
push
adc
add
mov
xchg
mov
push
stc
add
pop
pushf
out
push
repnz
add
push
add
add
add
mov
or
inc
and
and
xchg
aam
pop
ja
mov
cmp
rol
stos
fimuls
sbb
or
add
sub
outsb
data16
movsl
lock
or
or
cmp
xchg
aaa
das
sub
adc
or
push
das
cmp
daa
xchg
dec
add
adc
repnz
jg
push
fldcw
fs
push
cltd
je
js
pop
xor
mov
and
mov
adc
xchg
or
scas
fdivl
test
mov
cmp
jmp
or
sbb
or
test
or
and
mov
mov
lcall
or
or
or
or
and
dec
sub
orb
or
push
or
adc
popf
pushf
jl
sub
push
hlt
lock
cmpsb
cs
inc
xchg
lock
fimull
aaa
inc
insb
adc
popf
mov
nop
int
jge
clc
mov
and
add
loop
mov
push
outsb
push
out
sbb
jnp
rclb
xorl
push
mov
and
sub
dec
adc
add
loopne
call
inc
push
lea
icebp
inc
test
iret
lea
sub
notb
xor
rcr
push
mov
loop
jbe
pop
push
fucomi
das
lea
sub
fldt
jnp
dec
call
sbb
xor
hlt
loope
jge
xorl
adc
push
call
daa
inc
and
sbb
leave
es
mov
fisttpl
or
xorb
inc
mov
xor
negl
push
adc
pop
ds
leave
clc
and
xchg
add
subl
mov
jns
in
sbb
popa
cmpsb
xchg
push
xor
add
pop
in
rolb
push
out
xor
lret
js
push
add
push
lock
outsl
pop
inc
xchg
push
std
add
mov
sub
adc
mov
and
adc
add
push
mov
adcb
test
lret
and
sub
adc
inc
pop
and
push
jb
add
add
push
or
sub
inc
movsl
add
xor
xchg
jg
adcl
imul
adc
mov
cmp
sub
sub
sub
xor
or
aas
cmp
push
and
dec
xchg
push
sub
fmul
pop
mov
and
add
movsbl
add
mov
push
push
sub
or
cmp
aas
sbb
xchg
and
inc
adc
or
inc
out
jo
push
push
dec
lahf
sub
sbb
lea
mov
push
adc
push
fsub
xor
loope
fsubs
push
adc
mov
mov
or
mov
push
push
pop
and
add
cmp
cwtl
cli
test
insl
mov
jne
lds
add
and
push
sbb
inc
jle
outsb
add
movb
push
in
jmp
movsb
dec
pusha
mov
jo
jecxz
sahf
cmpl
xor
lcall
es
ret
pop
fadds
leave
or
lods
cmp
pop
movsb
pushf
pop
inc
ret
push
xchg
push
push
pop
dec
shrb
sbb
sbbb
subb
mov
pop
cmc
movb
lds
or
and
adc
mov
cmp
push
rorl
leave
adc
shrb
and
test
pusha
xor
movsl
add
scas
mov
loopne
inc
jl
pop
imul
mov
fistl
test
adc
jne
add
mov
jge
cmp
sub
xor
dec
pop
icebp
cmp
mov
add
jmp
sub
add
cmp
or
jg
sete
xchg
lea
je
cld
cmpl
out
mov
mov
inc
sub
xor
dec
mov
addb
sub
adc
add
push
pop
int3
aas
sbb
aaa
cmpsb
push
xor
je
push
adcb
inc
cmp
addb
sub
mov
add
adc
enter
push
add
cwtl
inc
add
hlt
cwtl
mov
outsb
decl
jo
orl
xor
insb
xchg
or
movsl
rcrb
clc
mov
jno
add
adc
clc
insb
cmpsb
loopne
push
mov
inc
pop
mov
cltd
push
xor
pop
inc
xchg
movsl
insl
mov
push
adc
orl
push
fisttpl
sub
arpl
subl
mov
fbld
cmp
cmp
jbe
cmp
jbe
and
sbb
xchg
nop
jp
mov
inc
or
fiaddl
addr16
fisttpll
bound
xorb
in
xor
fildl
mov
jge
pop
les
mov
xchg
test
mov
pop
rclb
lds
sub
cmp
enter
or
adc
shrl
or
sarl
ret
fiadds
lea
push
adc
mov
cmp
mov
or
sahf
test
addb
popa
cmp
sbbl
fildl
jns
int3
xor
or
es
mov
rolb
inc
test
xchg
aam
lcall
pop
xor
pop
add
or
and
clc
sub
pop
sub
push
out
jl
cmc
fs
adc
add
lret
xor
rcrb
aaa
in
sbb
lcall
mov
push
loopne
call
les
lock
adc
rorl
mov
add
out
ljmp
insb
add
adc
push
inc
push
arpl
add
pop
popa
cmp
stc
push
adc
sbbb
or
ret
insb
push
jl
pop
mov
aaa
jp
mov
jbe
sbb
push
mov
mov
mov
push
dec
stos
push
pusha
lds
and
inc
dec
add
push
jge
jns
mov
xchg
mov
xchg
pop
enter
jae
mov
and
mov
outsl
push
add
shr
gs
and
dec
cltd
sub
push
mov
mov
jae
jno
mov
jbe
filds
pop
sub
or
movsl
fwait
lods
push
push
mov
mov
sub
inc
add
and
dec
enter
fmul
pusha
add
cmpb
inc
or
or
sbb
sub
push
pushl
add
inc
inc
mov
fsubrl
pop
aad
lods
sbb
movsl
nop
icebp
pushf
flds
jge
adc
inc
xor
adc
mov
in
push
inc
mov
adc
xor
movl
and
outsb
int
add
mov
mov
sub
add
jbe
out
mov
jbe
jge
in
insl
fldenv
lahf
mov
or
mov
add
scas
mov
lods
xor
mov
test
push
fsub
lds
lea
test
mov
add
jmp
dec
lock
test
pop
pop
or
sbb
inc
sbb
aaa
xor
je
data16
pop
cmp
xchg
add
pop
sbb
mov
mov
add
or
push
push
cmp
jns
rclb
add
arpl
dec
cmpsl
push
ss
lods
mov
and
push
xchg
inc
mov
testl
adc
add
pop
and
dec
dec
push
dec
inc
sbb
sbb
push
push
mov
shlb
ret
aas
lea
mov
sub
lds
and
jge
cmp
and
pop
pop
fmull
test
loopne
sbb
push
mov
mov
xor
imul
test
or
adc
and
icebp
mov
push
cmp
call
pop
cmpsl
cli
add
push
add
pop
push
adc
push
or
and
jl
call
mov
movsb
bound
fldenv
mov
add
loop
in
fsts
aad
test
out
mov
ja
add
into
push
jp
jbe
pop
dec
in
loopne
add
mov
or
cli
adc
dec
jge
add
xor
fwait
sti
shlb
jnp
stc
cs
addr16
sub
cmpl
pusha
cmp
call
adc
inc
hlt
cmpsb
jo
imul
xor
sbb
je
mov
ss
nop
fwait
mov
mov
mov
pusha
add
or
or
or
adc
mov
mov
xchg
imul
insb
jne
mov
add
jle
push
push
adcl
sarb
clc
push
push
adc
sti
jge
inc
cmp
pusha
jle
mov
push
xchg
mov
data16
jo
dec
fidivrs
pop
clc
jg
mov
aaa
lea
push
xor
fdivr
inc
adc
push
fcoms
call
mov
inc
insl
or
or
cmpb
inc
cmp
push
xchg
in
ret
lea
xorb
add
cmpsb
add
fdivrs
out
jmp
mov
pop
leave
cmp
int3
push
sqrtps
dec
mov
jmp
or
adc
iret
mov
loope
xchg
decl
xchg
and
or
cmp
insl
je
and
lds
add
pop
call
popa
aad
nop
test
add
or
dec
push
push
dec
in
or
push
push
xchg
push
add
jl
cli
adc
int3
push
loopne
loope
add
mov
xor
dec
subl
aaa
lea
sub
and
jge
cs
cmp
jl
negl
adc
or
mov
inc
jp
mov
or
cs
sbb
scas
adc
push
fiadds
out
sub
jbe
decb
mov
or
fs
cmc
inc
add
jl
repnz
mov
jne
pushl
push
je
aad
loop
cmp
push
jle
xchg
dec
mov
inc
aaa
imul
fmul
in
push
and
xchg
ja
imul
mov
jmp
and
push
decl
mov
jo
fidivrs
cmpl
mov
jp
and
sbb
jp
pop
call
mov
fdivs
into
add
push
fnstenv
pop
fnstsw
push
add
scas
cld
ret
pop
movzwl
jb
pop
inc
das
icebp
leave
push
adc
cld
dec
add
jmp
adc
and
add
mov
ss
push
movsl
mov
nop
clc
dec
mov
add
mov
adc
cmpsb
lock
jmp
push
cld
adc
rcrb
outsl
insb
adc
int
fnstenv
sti
outsb
sub
dec
push
les
shll
inc
sub
lock
mov
push
repnz
push
or
and
ds
adc
mov
add
add
movsb
or
cmc
sub
sar
inc
lea
lea
push
push
movsl
inc
pop
aaa
aaa
pop
test
inc
outsl
inc
iret
adc
sbb
in
pop
stos
dec
cli
jle
dec
cmc
icebp
incl
rclb
push
test
fists
and
cwtl
mov
jp,pt
bound
adc
inc
cmp
jb
sahf
roll
jp
jle
cmp
adcb
ljmp
fsubr
add
push
inc
shld
lds
icebp
insb
mov
and
adc
and
adc
pusha
or
sbb
jno
adc
sbbb
xchg
add
clc
fnstenv
js
jge
je
jecxz
popcnt
inc
aam
aam
mov
aam
nop
out
pusha
movl
lods
xor
jl
mov
imul
loopne
enter
stos
int3
jo
lea
mov
or
sub
push
inc
mov
out
mov
adc
sbb
push
inc
call
js
xchg
jnp
rcll
mov
roll
test
mov
lock
sub
push
gs
mov
inc
add
dec
add
or
or
mov
adc
dec
fs
or
adc
xor
pop
jp
xchg
xor
xlat
sbb
insb
enter
mov
scas
cmp
add
lods
jb
sbb
adc
fiadds
pop
adc
call
stc
test
je
pop
sbb
aas
jae
ret
sbb
adc
cmp
jge
lods
jmp
sub
adc
xor
pop
push
repz
add
add
lock
or
jl
loopne
xchg
pop
in
mov
add
sbb
cmp
push
sub
inc
loope
add
adc
push
mov
out
and
push
sub
int
pop
in
scas
jbe
jmp
push
or
faddl
mov
sbb
pushf
lods
xor
pushf
inc
dec
data16
mov
lea
mov
sbbl
in
mov
inc
sbb
pusha
dec
sbb
push
ret
jg
mov
inc
add
mov
movsl
push
repz
or
loop
fwait
cmpsb
es
and
test
adc
sbb
outsb
xchg
fadds
je
add
cmp
fxch
add
inc
clc
out
push
dec
in
pop
xor
adcb
hlt
insb
push
fcoms
dec
xchg
test
test
mov
inc
in
je
xor
add
movsl
pop
sub
and
cbtw
sub
jmp
pop
mov
insb
add
fsubrl
in
sarb
in
icebp
ja
cli
lret
jno
in
mov
mov
ret
in
imul
ret
and
jge
dec
push
mov
in
lea
push
aam
pop
cmp
fdivrs
idivb
mov
jmp
sbb
inc
lea
dec
mov
ljmp
add
sarb
loop
sub
and
xor
aam
int3
xor
push
loopne
lods
push
mov
cmp
add
testl
or
push
jp
lods
cmpb
ret
add
inc
jae
aam
ret
sub
fsubs
inc
add
adc
pop
add
fstl
push
inc
clc
push
add
clc
mov
and
cmp
jg
mov
movsl
test
dec
fcompl
mov
add
pop
adc
adc
sbb
sub
add
add
scas
ljmp
lock
mov
leave
pop
out
cs
or
subb
and
mov
jmp
hlt
mov
adc
mov
shl
add
inc
add
shlb
push
mov
ret
cmp
dec
or
loopne
jge
adc
cmp
push
add
mov
scas
popa
enter
push
jns
jl
loop
nop
shl
or
push
adc
nop
cmp
and
inc
pop
push
mov
push
je
cmp
lock
push
xor
or
arpl
push
imul
insl
mov
push
sbb
pop
cmp
std
pop
dec
sub
dec
or
dec
pop
clc
sub
inc
sbb
dec
cld
les
mov
and
cmp
mov
sub
xchg
sbb
ret
lahf
pop
ret
jl
mov
pop
ret
adc
xor
divl
mov
add
mov
test
sub
mov
sub
pusha
push
xor
test
loop
pop
syscall
ficoms
insb
cmp
sub
push
push
pop
shlb
mov
xor
dec
sbb
mov
mov
sub
inc
mov
mov
push
filds
mov
add
or
jl
cltd
mov
and
movzwl
add
or
fldcw
gs
jl
pop
jp
add
mov
adc
jbe
add
cmp
ja
mov
sbb
adc
je
mov
int3
add
in
popa
xchg
mov
sbb
pop
or
sub
mov
cmp
and
cmp
and
shl
mov
cmp
dec
push
addr16
and
fistps
jo
and
cmp
xchg
cli
adc
rclb
lcall
clc
push
dec
jl
das
mov
cli
or
cmp
dec
call
inc
out
add
sti
jmp
adc
mov
movl
sub
loope
imul
sahf
mov
jne
push
or
cld
fiadds
out
fldl
loopne
adc
adc
mov
or
xor
test
push
out
and
je
add
fs
orl
sub
jl
out
and
adc
xor
fmull
out
test
push
rolb
hlt
pop
pop
filds
jnp
loopne
pop
and
push
jnp
or
ljmp
movsb
orb
aas
sub
lock
mov
dec
movsl
pop
push
xor
add
add
pop
clc
lret
inc
adc
pop
xor
jno
iret
imul
push
stc
xor
leave
and
loopne
ljmp
push
rolb
test
fisubrs
mov
mov
push
shlb
es
and
lods
popa
ret
push
xchg
sub
dec
jl
xchg
fs
cli
inc
pop
flds
test
add
loopne
pop
out
roll
dec
test
aas
jno,pn
xchg
stc
dec
fnstcw
pop
les
gs
dec
test
mov
inc
xchg
lea
data16
je
test
in
stc
push
push
negl
outsl
jmp
lea
xchg
sub
into
pop
in
inc
hlt
push
push
rcrl
fwait
push
jbe
xchg
inc
shll
enter
imul
inc
hlt
pop
push
lahf
and
pop
outsl
add
push
sbb
cmpl
push
out
inc
in
cmp
xchg
lds
and
cmp
bound
repnz
jle
add
mov
inc
lock
sbb
sub
push
xchg
cld
adc
rcrb
das
push
lcall
mov
sub
or
add
inc
add
bound
xchg
jecxz
rcr
push
push
pop
add
dec
push
dec
outsb
ret
in
cltd
push
jne
push
filds
addl
ficomps
pop
sub
add
fisubrs
sub
add
stos
or
xchg
push
and
in
pop
pusha
mov
dec
xor
std
js
push
xor
or
stc
sarb
push
dec
cmpsb
pop
mov
sub
or
imulb
rol
dec
test
or
xor
in
scas
push
imul
sahf
testb
adc
leave
jnp
push
sub
hlt
push
mulb
lock
push
mov
lock
mov
fs
xchg
lock
mov
pop
sub
mov
jne
ss
mov
orb
pop
or
mov
push
cli
inc
push
cmc
aad
repz
pop
cmpl
call
rcll
xor
stos
cmp
adc
push
add
jne
mov
cmp
add
or
adc
pop
adc
xor
sbb
ror
mov
mov
addr16
xor
sub
lods
and
leave
xor
and
push
lock
xchg
inc
lds
pop
shrb
pop
addr16
xor
mov
movsb
cmp
jae
dec
sbb
pop
add
dec
sbb
pop
enter
add
loop
jne
sbb
adc
call
jl
push
or
ret
fistpll
push
push
sub
or
cwtl
pop
cmp
push
mov
or
dec
inc
inc
hlt
mov
or
jae
and
push
les
mov
daa
sbb
lcall
call
add
cmpl
ret
pop
push
mov
rcrb
adc
jne
push
mov
idivb
je
data16
and
sub
adc
sbb
push
std
mov
negb
icebp
xor
lea
dec
lock
addr16
loop
xor
or
mov
inc
cmp
lods
nop
rorb
stc
pop
out
add
push
je
jmp
sub
inc
cs
lea
rolb
pop
mov
imul
inc
lea
add
dec
adc
xchg
cs
inc
adc
loope
sbb
adc
xor
xlat
adc
maskmovq
notl
push
or
roll
and
cmp
lds
push
and
fbstp
mov
sub
fadds
jo
es
dec
call
or
lea
arpl
lods
clc
pop
cld
pop
imul
xor
jbe
adc
dec
cmp
adc
add
xchg
or
add
aaa
int
loope
sub
gs
cs
dec
lock
pop
mov
loopne
pop
pushl
ss
sbb
insl
negb
test
lea
add
xorb
shr
jmp
lea
ds
and
mov
push
or
mov
sub
sub
sbb
popa
mov
inc
imul
nop
lahf
pop
in
inc
lock
mov
inc
adc
std
jo
jg
lods
daa
clc
sbb
test
aam
cmp
mov
inc
iret
push
adc
pop
scas
add
adc
call
or
repz
mov
clc
xor
sub
into
sub
adc
test
jo
add
push
and
loope
sub
cld
and
push
mov
mov
add
push
sub
clc
push
imul
jecxz
xchg
jo
mov
jne
mov
cmp
into
mov
xchg
test
push
sub
movsl
aas
xchg
sub
adc
jne
mov
cs
icebp
mov
xor
add
push
sub
test
orb
or
add
test
mov
xchg
sub
add
xchg
pop
xchg
add
xchg
sarb
int
push
lea
bound
jb
push
cli
ret
or
mov
mov
mov
jb
add
pop
loopne
leave
jae
add
test
inc
insl
sub
clc
mov
lret
sbb
fs
xor
xchg
sbb
xchg
fcomp
mov
push
xor
xchg
dec
ret
inc
into
je
jge
xor
cwtl
movsb
push
into
dec
jle
mov
pop
add
cli
or
or
mov
outsb
pop
test
hlt
neg
lea
sbb
inc
cmp
addl
push
jo
xchg
aam
fadds
cmc
sbb
dec
and
and
cs
adc
adc
add
jl
jmp
es
lea
notb
insb
test
clc
stos
call
add
mov
jb
mov
sarb
cmp
in
ret
aas
orl
mov
xchg
add
cmp
incl
cmp
jae
lea
cmp
ja
aas
and
insl
pop
or
inc
es
mov
pop
mov
mov
andb
push
mov
inc
push
push
push
mov
lock
jns
adc
sbb
or
pop
nop
mov
leave
push
push
aaa
inc
push
add
add
or
sub
mov
cmp
push
push
popf
push
inc
xor
xor
outsb
lods
inc
push
inc
mov
cmp
rorb
rolb
cwtl
inc
mov
enter
add
adc
push
mov
sub
jle
push
les
test
pop
dec
sub
sub
mov
push
or
sahf
movzbl
pop
jg
mov
fstpl
mov
jb
jae
push
push
sub
dec
je
mov
xorl
cmp
cwtl
xadd
clc
imul
pushf
lock
and
sbb
xchg
or
clc
pop
vmptrld
cmpb
add
sbb
push
xchg
add
or
push
push
data16
stc
add
sub
cmp
xchg
jmp
dec
addr16
xchg
scas
or
add
ljmp
dec
inc
inc
test
sbb
xor
in
add
arpl
jo
and
add
sti
lcall
pop
mov
pop
xor
and
pop
add
jg
ja
sub
loope
mov
xor
jo
aam
test
in
xchg
fisttps
add
dec
mov
mov
jle
xor
fmuls
xor
mov
scas
sub
iret
iret
mov
insl
fdivr
incl
jbe
lea
jae
mov
jle
sbb
sbb
jne
shrb
jmp
in
aaa
sbb
inc
testl
insb
inc
jae
xchg
in
xchg
test
popf
and
pusha
add
movl
jne
lea
xorb
cmp
insl
sub
cmc
lods
xchg
sarb
sar
and
fcoml
sbb
daa
loopne
fimuls
sbb
mov
sbb
add
add
adc
lea
lret
clc
pusha
cmp
mov
test
insb
nop
dec
cmp
adc
xor
push
push
call
js
add
and
pop
sarb
popf
pusha
repz
cmp
sub
cmp
add
scas
jmp
xor
mov
mov
push
push
pusha
addl
pop
mov
mov
jge
mov
rcrb
mov
mov
fcomps
mov
cmp
enter
mov
xchg
lds
pop
movl
addb
cmpb
ret
sti
sbb
inc
cmp
mov
aam
dec
orl
inc
iret
mov
pop
or
fcomi
loopne
daa
mov
xor
cmp
lods
add
dec
rorb
push
cmp
das
movsl
sbb
push
push
jne
cmpsb
and
inc
mov
xchg
push
ret
rolb
rcll
mov
xchg
lret
dec
in
xchg
xor
cmp
mov
push
adc
mov
adc
lock
or
icebp
xor
mov
out
add
in
das
dec
inc
or
adc
insb
jb
add
bound
into
push
out
loopne
mov
ds
mov
and
push
push
add
pop
pop
sbb
sti
push
inc
cli
roll
loope
das
mov
fimull
pop
sub
scas
mov
jne
test
jmp
cli
lret
inc
mov
or
or
mov
subb
push
push
sub
jmp
inc
lahf
dec
mov
cmp
pushf
adc
push
fsubrs
imul
xrelease
jl
pop
cmc
lods
or
or
mov
ret
xchg
or
push
inc
dec
test
mov
out
jb
xor
loope
mov
push
testb
sub
push
mov
dec
out
xchg
aam
jno
fsts
je
jge
sub
roll
and
mov
sahf
add
lods
pushf
sbb
and
dec
inc
je
pop
in
movsb
jbe
fldpi
pop
jns
pop
mov
xor
sub
mov
push
push
inc
sub
add
inc
fisubs
clc
dec
jle
push
add
and
insb
in
outsl
std
and
sub
pusha
or
int3
push
sub
jle
push
cltd
xor
sub
sub
pushf
adc
icebp
inc
mov
pusha
adc
push
push
jl
xchg
xor
loop
xor
cmp
stc
int3
sub
adc
mov
loopne
pop
dec
call
mov
outsb
mov
add
rorb
mov
sub
std
push
xor
jae
mov
add
lcall
or
xor
adc
add
push
sub
flds
jmp
loope
sub
clc
jae
lea
or
cmpb
jne
cmpb
jne
lds
sti
rcrb
imul
insl
dec
neg
sbb
and
add
sbb
das
aaa
mov
lea
ja
or
push
cmp
pop
cmp
cwtl
outsb
xor
inc
or
movsb
add
add
loop
pushf
in
js
je
add
and
push
test
mov
jecxz
xchg
imul
sub
stc
inc
push
push
lock
pusha
inc
mov
pop
and
shll
shlb
movsl
jmp
jmp
mov
jp
jmp
xor
pop
rclb
addr16
scas
cmpsb
movsl
mov
pushf
mov
mov
push
ljmp
add
jmp
repnz
xchg
adc
ret
int
mov
sub
bndstx
push
mov
idivl
push
push
ret
and
push
insb
and
mov
movl
mov
int
lock
lea
xor
into
adcw
mov
inc
js
dec
add
out
mov
ret
xor
cmpsb
fists
xchg
sbbb
fxch
fdivr
jle
jno
mov
mov
ljmp
jne
stos
jmp
movsb
fisubs
mov
mov
dec
lods
mov
call
mov
lods
sbb
or
cmp
sahf
xchg
xchg
fs
lock
jmp
or
xor
add
ret
push
jae
jo
mov
sub
call
pop
push
adc
je
test
jle
ja
insb
push
lea
sbb
or
aas
hlt
mul
add
xchg
or
dec
push
jmp
adc
mov
sbb
add
and
jo
add
adc
add
lock
je
int3
sub
lret
jmp
push
mov
sub
incl
add
mov
mov
sbb
and
movb
js
add
cmc
add
ljmp
mov
xchg
pop
push
lea
adc
dec
or
sti
add
xchg
push
sub
push
mov
mov
decb
jb
aam
lea
sub
jns
push
loop
sub
popf
pusha
adc
lea
mov
mov
jge
mov
push
addb
push
push
push
andl
push
ja
fwait
sbb
test
mov
mov
lea
daa
dec
aaa
sub
add
test
fmull
in
ret
push
pop
mov
inc
fcom
cli
sub
push
cmc
cmp
fdivl
imul
inc
mov
rolb
cmpsb
lret
rcrb
xor
push
inc
shll
pop
push
and
ret
shll
cmpsb
sbb
jnp
adc
push
pop
pop
xchg
out
xorb
adc
das
dec
dec
call
adc
xchg
or
test
jp
xchg
and
push
add
and
cwtl
lret
or
or
mov
cmp
fwait
and
push
xchg
jmp
mov
push
add
pop
jle
and
jl
pop
jg
pop
pop
jae
xor
add
cmp
popf
and
mov
mov
clc
xor
sbb
or
push
ljmp
aas
adc
pop
jp
loope
jb
cmp
xor
cld
xchg
sub
push
push
imul
add
popf
sti
hlt
adc
push
outsb
jg
push
out
dec
or
je
inc
inc
es
mov
aad
inc
and
xchg
lret
into
xor
pop
push
xor
xor
push
pop
and
dec
leave
xchg
lods
push
push
mov
movsb
mov
fmuls
push
dec
popa
or
adc
jmp
outsl
rclb
int
imul
lock
mov
push
imul
cmp
and
pop
icebp
mov
jp
iret
cmpsl
fistpl
mov
mov
loopne
sub
outsl
or
mov
sarb
push
sti
incl
and
and
push
aas
rolb
add
stos
out
and
and
jo
mov
mov
mov
mov
cwtl
dec
psubsw
popf
test
call
xchg
xor
push
lods
adc
test
mov
push
mov
pop
insl
je
fldenv
pop
fcomps
jno
add
pop
inc
jecxz
adcb
mov
aad
shl
sub
pop
icebp
add
xor
jbe
mov
dec
add
xchg
je
mov
mov
insb
or
push
adc
mov
fcomp
lcall
js
or
add
or
lahf
movsl
dec
or
xchg
or
roll
push
loope
xchg
je
push
gs
gs
jb
test
adc
inc
mov
mov
inc
sub
cs
loop
cmc
and
js
ficoms
mov
xchg
fimuls
jmp
ror
mov
adc
push
push
xor
rclb
fs
shll
pop
push
or
push
xor
out
outsb
add
cmp
xchg
mov
cwtl
mov
adc
cmp
push
mov
sbb
or
mov
mov
ret
aad
mov
dec
sub
or
aaa
pop
js
mov
xlat
push
add
jae
adc
pop
sub
mov
stc
test
lcall
xor
lds
enter
push
enter
adc
xchg
sub
pop
mov
xor
cmp
cmp
add
leave
or
out
mul
push
out
pop
mov
sbb
sbb
xchg
mov
shr
mov
lods
dec
jmp
add
add
jno
dec
fisttpl
das
cmp
push
aas
add
add
imul
ret
rclb
cld
add
sbb
jne
or
xchg
subl
jbe
lcall
dec
xor
add
rolb
mov
adc
sbb
and
rclb
push
or
pop
lods
sbb
call
daa
mov
mov
cmp
hlt
or
push
jl,pt
push
jg
cmpb
jne
inc
inc
repnz
inc
lret
xor
or
stos
movsb
jns
or
pop
xor
and
pop
lcall
outsb
add
test
out
or
or
push
shlb
or
js
mov
inc
mov
inc
call
je
xor
cmpxchg
push
mov
cs
mov
sbb
jnp
test
stos
int3
and
sbb
jmp
pusha
dec
xor
mov
adc
add
adc
and
inc
or
cmp
mov
and
add
mov
push
jmp
lea
outsb
dec
filds
aas
push
sbb
jmp
scas
enter
add
out
dec
mov
mov
fldl
inc
adc
push
pop
cmc
adcb
dec
xor
mov
orl
pop
mov
shrb
adc
lcall
mov
movsb
add
test
xor
jne
add
subb
les
xchg
lahf
push
xor
jl
xor
mov
mov
pop
push
pop
adc
fxch
sahf
add
mov
inc
dec
or
jb
addb
pushf
push
xor
nop
pop
xor
pop
xor
fs
inc
push
push
and
cmp
shlb
sbb
lods
out
dec
cs
xchg
rolb
xchg
je
and
lods
adc
xor
fistl
sub
sub
test
sub
pop
or
cmp
xor
sub
popa
push
cmp
lcall
push
xor
insb
movsb
shlb
lods
rcl
lahf
or
lahf
mov
in
test
xlat
lahf
dec
lret
adc
movsb
inc
xchg
xor
or
ret
sub
test
dec
mov
fsubrs
xchg
pop
push
inc
iret
cmp
push
jne
jne
cmpl
add
aaa
test
sahf
or
rorb
add
ss
jecxz
aaa
mov
daa
mov
mov
test
fistl
or
nop
fstl
xor
push
test
fcomi
push
xchg
sub
add
pop
and
loopne
xchg
adc
cs
outsl
rol
mov
dec
sbb
iret
movb
and
push
ds
push
dec
mov
adc
mov
sbb
inc
fimuls
movsb
sbb
sbb
pop
dec
sbb
movsl
loopne
mov
xor
xchg
loope
dec
clc
mov
popf
loopne
test
cmp
xor
ficoms
js
int
ss
xor
or
pop
loop
jl
mov
aaa
lea
insl
mov
and
add
xchg
into
jne
decb
jnp
and
xchg
adc
adc
mov
lock
rclb
jnp
inc
push
inc
pop
sahf
arpl
or
push
fnsave
sahf
mov
popf
xor
sub
adc
and
jg
adc
mov
push
xchg
fistps
xor
pop
adc
cmp
adc
push
add
mov
inc
sub
or
imul
enter
adc
insl
inc
clc
adc
xchg
and
inc
add
xlat
add
loopne
push
rcr
and
xchg
add
and
mov
sbb
add
or
pop
fs
sbb
or
mov
lods
nop
xchg
dec
sbb
inc
push
inc
cmp
add
cmp
sbb
orl
adc
jg
add
push
jbe
pop
incl
inc
faddl
sbb
sbb
cmc
xchg
test
aam
jno
mov
aad
pop
add
push
shr
inc
xchg
je
dec
call
mov
mov
xchg
mov
cmp
bound
push
add
adc
mov
pop
mov
mov
sbb
add
lcall
mov
sub
or
add
mov
ret
cwtl
add
rorb
movups
ret
dec
or
mov
mov
outsl
push
mov
fwait
mov
push
dec
ss
dec
js
imul
nop
addr16
or
add
xchg
jl
adc
add
or
push
inc
mov
or
and
or
cwtl
cs
add
imul
fnsave
add
sub
pop
mov
add
rcrl
lods
aas
adc
scas
or
cmp
test
mov
add
push
pushw
inc
and
nop
xchg
xor
mov
test
push
leave
jae
sbb
adc
xchg
sub
pop
dec
sbb
in
lock
fisttps
adc
dec
sub
popa
inc
es
inc
movb
cmp
ja
add
push
inc
inc
adcb
dec
xchg
cmp
push
push
pop
in
and
loopne
daa
add
push
xor
les
sub
and
sbb
ljmp
jge
orl
rol
mov
sbb
lret
popf
mov
mov
pusha
ljmp
aas
fmuls
dec
inc
cld
fld
mov
pop
and
jo
sub
test
sub
inc
cmpl
add
lea
jne
add
dec
call
mov
pop
xchg
add
add
mov
stos
mov
push
push
and
cmp
dec
aam
int
cmpsb
lock
shrb
add
clc
adc
mov
push
adc
mov
xchg
and
enter
fwait
or
jge
inc
loopne
sub
adc
xchg
hlt
mov
sbb
loopne
sbb
dec
lret
leave
dec
aam
nop
inc
ds
sub
test
push
repnz
lods
adc
adc
mov
nop
iret
loop
inc
pop
pop
dec
xor
push
or
sbb
mov
leave
sbb
roll
stc
test
inc
adc
aas
push
shlb
fs
pop
xor
pop
inc
cmp
sbbb
push
rol
sbb
adc
daa
adc
ljmp
or
and
inc
inc
push
lsl
push
loope
pop
imul
test
pop
rorl
lahf
jo
roll
push
xor
and
add
or
cld
adc
rcll
imul
lret
shll
cmp
test
lock
insb
mov
in
and
sbb
xchg
pop
dec
repz
sahf
repz
cwtl
adc
sbb
leave
in
mov
incl
je
cmp
xor
adc
adc
rolb
nop
pop
lcall
dec
xchg
add
or
jb
jne
cmp
aaa
aas
jo
mov
jg
inc
gs
shr
and
mov
mov
and
add
push
push
scas
pusha
and
jo
xchg
sub
sbb
sbb
pop
cwtl
fwait
sub
push
xchg
data16
push
pop
test
mov
mov
movsl
inc
mov
sbb
rolb
mov
pushf
add
mov
xchg
pushf
mov
sbb
inc
push
push
add
hlt
push
jge
push
rorb
inc
push
fstpl
stos
pop
stos
movsb
inc
in
sub
push
dec
ret
pop
mov
and
xchg
and
push
pop
xchg
lods
and
add
inc
hlt
lea
mov
pushf
repz
xchg
mov
cltd
mov
out
add
rcrb
mov
mov
mov
rorl
xchg
je
or
movl
das
adc
pop
inc
stc
cmp
pop
mov
je
imul
add
push
das
int
push
sbb
mov
insl
sub
add
mov
xor
cmpsb
sub
mov
mov
or
sub
and
xchg
mov
jns
add
repnz
mov
sbb
push
xchg
or
xchg
out
and
and
push
js
inc
adc
mov
repz
push
in
push
in
sbb
call
test
and
or
mov
jo
push
fs
lret
sub
lock
sbb
ret
sbb
cmp
andb
xor
mov
sbb
xor
repnz
fcmovnb
popf
shlb
int3
adcb
add
ds
lock
push
ljmp
popa
imul
js
add
fdivrs
inc
imull
pop
test
xchg
fs
mov
add
dec
xor
adc
aas
dec
mov
xchg
and
lcall
jp
adc
adc
jl
adc
jae
push
add
inc
shll
cli
or
sub
jp
lods
rorb
and
add
cmp
mov
dec
mov
inc
pop
inc
hlt
mov
loope
sub
subl
out
and
stos
mov
stos
adc
xchg
and
push
imul
lcall
dec
and
xor
jmp
subb
inc
sub
pop
sbb
sbb
movsb
decb
insl
mov
or
sub
stc
cmpsb
icebp
sbb
mov
aam
adc
sub
cmpsb
mov
shlb
lcall
inc
sbb
add
cmp
jae
mov
gs
pop
add
sbb
je
cmp
sub
adc
dec
je
sub
sbb
sub
cmc
pop
lods
dec
sub
add
pop
sub
jecxz
add
cmp
je
je
add
das
xor
dec
dec
inc
mov
jmp
lock
or
pop
add
aad
dec
jle
cmp
pop
mov
mov
clc
push
xor
push
insb
and
mov
insb
ret
jle
fsub
xor
fwait
adc
push
sub
ret
cmp
aaa
mov
add
push
push
sbb
push
fbstp
inc
xchg
enter
xorb
adc
or
sbb
or
cld
mov
mov
filds
aad
mov
movsb
pop
jle
or
lret
mov
push
ret
rcl
and
jb
pop
add
jle
or
sbb
lods
and
rorl
test
cvtps2pi
fdivl
fwait
sub
cmp
mov
inc
add
subl
js
pushf
cmp
inc
cmc
sub
fucom
rolb
bound
aas
jle
pop
push
and
mov
cs
daa
add
cltd
dec
mov
sub
add
sti
inc
push
rolb
mov
adc
aaa
mov
jnp
inc
pop
insl
sub
lret
sti
test
shrl
stos
clc
cmp
dec
or
cmp
adc
jo
mov
inc
dec
pop
stc
push
fwait
or
or
dec
or
loopne
add
andl
int
xchg
data16
mov
stos
sbb
xor
repnz
andps
push
and
add
adc
adc
cmp
subb
jecxz
lock
add
test
daa
in
lcall
in
add
add
push
or
cmp
xlat
jbe
dec
lock
icebp
xor
mov
adc
xor
popl
push
ja
jb
lahf
mov
pop
dec
loop
jmp
pop
cmpb
mov
inc
lock
dec
mulb
fsubrl
int
aam
add
adc
mov
shrb
mov
pop
sub
sub
outsb
lods
push
bound
xchg
aaa
xor
lock
in
add
xor
scas
xchg
mov
les
xchg
or
adc
sbb
and
push
pusha
xor
jle
mov
push
lret
jmp
jp
sub
cld
sbb
push
cmp
ret
mov
daa
pop
jns
rorb
cmp
inc
push
mov
and
sbb
sub
jge
mov
add
mov
add
or
and
mov
mov
dec
and
push
mov
loopne
dec
adc
pop
and
adc
outsb
call
or
bound
inc
sbb
dec
enter
bound
sbb
lcall
xchg
aaa
dec
fcompl
push
pop
add
xchg
jmp
xchg
sbb
fcmovb
dec
ficomps
test
adc
mov
add
cmp
cmp
add
pusha
push
and
push
and
adc
adc
loope
and
or
add
pop
daa
xchg
stos
jmp
cs
pusha
sbbb
push
push
adc
les
subl
shll
or
add
inc
adc
push
push
nop
lret
sbb
and
test
pop
sub
add
add
or
sbb
or
or
nop
lret
or
movsb
xor
or
xchg
add
adcb
das
shlb
mov
adc
sbb
mov
pop
dec
xchg
and
mov
cmp
mov
jbe
sbb
sbb
int3
sarb
and
cwtl
pop
add
sarl
pop
push
or
and
fdivrs
push
movl
sbb
and
jnp
mov
pop
arpl
push
jns
lcall
and
mov
xchg
pop
pop
or
test
mov
push
loope
das
stos
sbb
test
xchg
dec
sbb
mov
rclb
dec
lcall
mov
inc
inc
or
sbb
pop
xchg
ja
sysexit
test
mov
fs
dec
mov
inc
movsb
sbb
or
or
dec
lcall
mov
lcall
and
movsb
sbb
and
add
dec
lcall
mov
lock
add
addb
jmp
and
rcl
leave
dec
dec
cld
add
add
add
in
inc
fdivl
pop
and
sbb
mov
mov
cli
and
xchg
mov
cs
test
xor
cmp
pop
iret
mov
pop
fucomi
arpl
jnp
clc
invd
jne
orl
les
frndint
dec
push
push
jmp
mov
and
add
push
jbe
lea
rclb
sbb
sbb
jo
xchg
and
and
push
cmp
aam
in
aas
in
in
dec
inc
and
data16
xor
xor
sub
push
push
mov
je,pn
push
push
xchg
data16
add
popf
pop
mov
gs
lods
inc
xor
mov
xor
sub
sbbb
dec
adc
test
sub
add
add
addb
or
nop
add
fdivs
push
sbb
dec
mov
push
sbb
mov
rolb
dec
movsl
push
test
sub
mov
jge
push
push
xchg
mov
push
push
pop
dec
inc
mov
lock
sbb
push
outsl
call
orb
inc
pop
xchg
xchg
daa
jmp
popf
mov
test
iret
jnp
mov
mov
shrb
jmp
cld
movsb
xor
push
sbb
xor
sub
fdivs
push
cmp
mov
and
sub
pop
sbb
xlat
add
scas
push
mov
xchg
cmp
sbb
rorl
jno
and
push
cmp
inc
or
or
inc
leave
adc
adc
inc
cmc
cmpsl
jmp
mov
xchg
aam
xorb
or
fsubrl
add
adcb
fsubl
aaa
orl
pop
rcr
gs
lock
add
adc
hlt
sub
data16
jb
dec
add
and
adc
es
and
adc
and
clc
add
dec
cmpsb
xchg
jl
lcall
cmp
push
dec
arpl
nop
push
imul
fildl
pop
sbb
pop
out
push
and
fbstp
mov
cmp
out
push
ljmp
mov
add
sbb
mov
inc
in
mov
sbb
outsb
test
test
pop
shld
inc
and
icebp
xor
jge
or
or
inc
xlat
ret
inc
push
mov
add
loopne
mov
dec
in
lods
sub
push
shr
test
dec
les
xchg
hlt
dec
mov
xchg
cmpb
push
cmp
lret
repz
lods
call
add
push
loopne
cmp
ja
loopne
push
push
mov
dec
in
xor
adc
push
mov
xchg
adc
std
adc
inc
in
js
ds
or
popa
cmpsl
and
mov
cmp
shll
lods
dec
ss
lods
lock
mov
or
and
fcom
adc
dec
push
cwtl
and
call
insl
faddl
add
or
jae
mov
test
imul
add
sbb
push
cmp
iret
cmp
sbb
add
mov
addr16
aas
inc
cmp
push
fists
out
pop
fnstsw
or
xchg
ja
jecxz
fimull
xor
js
or
lahf
pusha
cmc
jne
lea
lea
or
adc
adc
lea
nop
loop,pn
orl
pop
int
dec
incb
cmp
ss
loop
push
test
add
testb
orl
in
jl
loopne
popa
mov
cmp
jae
push
lsl
sbb
cld
sti
jmp
mov
cmp
cltd
dec
pop
sub
push
mov
mov
and
pop
stc
test
mov
add
scas
mov
dec
and
push
in
pop
sub
nop
dec
ljmp
push
pop
clc
sub
call
xor
pop
add
mov
pushf
dec
and
add
jo
push
or
sbb
mov
and
push
and
push
and
cmpl
dec
dec
cmpsl
pop
xchg
sub
addb
fiadds
cmpsl
sbb
or
mov
dec
dec
or
adc
push
test
daa
sub
push
xchg
sub
or
push
dec
addps
dec
in
cs
test
and
sbb
sub
pop
dec
inc
push
daa
add
jo
sub
dec
adc
pop
sub
adc
dec
adc
stos
or
xor
test
xorl
fs
cmp
sub
pop
outsl
test
sub
sahf
dec
or
cmp
sub
ljmp
dec
sbb
mov
jae
mov
test
or
push
jo
mov
add
leave
push
and
pushf
pop
insb
push
cld
jo
and
sub
lods
dec
push
pop
mov
and
push
fs
xchg
fisubrl
mov
pop
sbb
push
or
arpl
pop
sbb
rorb
icebp
roll
inc
sbb
or
push
int
jno
rorw
inc
add
dec
aad
lcall
jmp
sbb
in
int
add
cltd
push
pop
pop
mov
pusha
sbb
push
iret
cmp
sub
movsb
xlat
aaa
and
in
sbb
dec
aaa
pop
dec
ss
mov
shrb
dec
in
sbb
or
mov
cmp
fcmovnbe
fadds
addb
xor
daa
push
imul
cmp
fdivp
jne
sbb
sbb
fdivl
push
movsb
repnz
sbb
filds
xchg
pop
push
sbb
xchg
mov
jge
out
add
xchg
sbb
pusha
push
sbb
cmp
and
pop
pusha
sti
add
push
pusha
mov
aas
push
jns
in
inc
cmp
test
sub
sub
xchg
sbb
lret
jp
dec
lahf
test
lds
mov
dec
mov
adc
jo
jle
mov
push
dec
insb
push
clc
mov
and
dec
mov
outsl
rclb
push
cli
dec
adc
cmp
cmpb
je
inc
test
aam
dec
outsl
or
out
sbb
jl
push
iret
sub
and
sti
sbb
stos
dec
adc
pushf
dec
push
imul
repz
in
hlt
sbb
cmp
mov
cs
xchg
mov
add
movsb
dec
xchg
lock
cmp
and
sub
stos
or
adc
mov
cmp
jno
lods
mov
dec
cmp
fwait
mov
or
push
clc
jl
mov
add
xchg
cmp
xchg
and
stc
xchg
sub
mov
lret
jns
inc
xchg
cmpl
sub
mov
dec
xchg
sbb
adc
test
and
add
push
push
stos
mov
xchg
sub
push
sub
push
and
sub
fstpl
add
add
push
bound
daa
js
inc
mov
inc
pop
or
or
sbb
inc
jne
dec
mov
add
pop
xor
jle
ja
sbb
adc
cwtl
stos
and
jle
sbb
cmpsl
inc
pop
jl
push
nop
popa
ljmp
js
je
or
add
jg
adc
jns
addb
pop
sbb
jns
jmp
ret
pushf
cmp
rclb
sub
and
xchg
mov
xor
mov
mov
inc
and
testb
cmc
cmpb
push
mov
jge
mov
and
cmp
mov
mov
mov
int
fisttpl
mov
sub
fdivrl
adc
fiaddl
inc
mov
sub
xchg
rorl
loopne
adc
push
aas
popf
add
mov
and
mov
rorl
or
pop
nop
add
and
adc
nop
inc
fisttpl
pop
les
ja
cmp
lods
int3
or
mov
mov
inc
or
add
or
add
cs
out
pop
mov
push
push
and
xor
sub
movsb
aaa
data16
andl
sub
and
add
out
mov
sub
mov
lds
sti
push
sbb
cmp
dec
cmpsb
mov
ret
mov
xchg
popf
mov
push
cmpl
dec
cmp
test
adc
inc
adc
call
dec
inc
mov
jno
mov
lods
fisttps
adc
scas
nop
aam
rcr
xor
jmp
shlb
loopne
adc
and
sub
mov
sbb
sub
adc
mov
mov
into
xor
add
pusha
add
sub
jecxz
orb
mov
push
inc
and
hlt
mov
xor
movsb
pushf
inc
jne
arpl
mov
push
sbb
or
mov
sub
incl
inc
iret
cmp
call
movsb
stos
mov
xchg
sub
and
push
dec
xor
jecxz
sub
cld
xchg
in
and
cmpsb
push
testl
imul
sbb
sbb
cmp
hlt
outsb
add
adc
or
rcll
jp
andl
jmp
dec
nop
int3
xchg
inc
inc
fmuls
je
nop
push
adc
cli
cltd
dec
jb
testl
lcall
rorb
or
mov
or
sub
add
and
scas
sub
int3
mov
in
jb
sbb
sub
addr16
int3
adcb
stos
add
push
xor
mov
mov
sub
mov
aam
adc
cmp
or
dec
adc
xor
test
mov
nop
stos
push
adc
add
add
cmp
pop
xor
adc
dec
jae
push
je
js
sbb
mov
loope
push
xor
jae
inc
jg
pop
fbstp
jno
xchg
dec
dec
ret
mov
inc
inc
inc
adc
test
push
add
dec
verw
xor
pop
push
jnp
outsl
xor
dec
jae
pop
nop
sbb
inc
xor
sbb
out
dec
sub
fstp
jecxz
lock
test
insb
fs
mov
sbb
jae
jnp
leave
jno
adc
jg
shrb
sbbb
je
dec
cs
sbb
repnz
cmp
add
pop
nop
sbb
movsb
imul
pop
pop
fistl
pop
es
pop
orb
sub
mov
mov
or
and
js
or
push
subl
and
sbbl
in
sahf
xchg
jl
cmp
mov
xor
rorb
mov
mov
mov
sbb
into
stc
test
sub
dec
lahf
test
inc
push
adc
jp
mov
mov
adc
mov
leave
jae
xor
sub
jl
xchg
leave
and
sub
mov
push
test
stc
mov
je
mov
pop
xchg
mov
aaa
and
add
mov
shrb
jecxz
stos
sbb
movsb
push
mov
xchg
add
mov
inc
aaa
or
or
or
inc
mov
mov
xor
and
push
jge
roll
imulb
repz
pop
mov
mov
dec
push
sub
xchg
fisttps
cltd
add
cmp
fisttps
add
xchg
pop
cmpsl
mov
or
sti
push
inc
loop
lahf
add
jb
lods
ds
add
xorl
xchg
test
fimull
hlt
aad
addr16
inc
inc
popa
stos
sbb
lret
xchg
lods
and
call
daa
movsb
push
mov
das
add
add
testl
pop
rclb
and
aaa
add
insb
mov
dec
loopne
rorb
xlat
xchg
outsb
cmp
ficoms
dec
and
test
imul
aad
mov
add
data16
or
orl
push
imul
xlat
addb
ret
sbb
cld
imulb
je
mull
fisttpll
popa
add
or
xlat
aad
push
lcall
push
xchg
xor
loop
jo
inc
lock
cwtl
dec
pop
mov
xor
mov
cltd
xlat
cmp
out
test
add
or
fisttpl
push
test
test
inc
stos
test
repz
add
push
pop
sbb
or
shrl
stc
pop
or
push
lahf
xchg
popa
into
push
xor
mov
xor
cmp
mov
sbb
add
lahf
push
and
xor
mov
add
push
mov
and
sub
scas
fisttps
mov
mov
push
push
add
inc
std
fldt
inc
sub
xchg
sbb
xorl
adc
push
push
pusha
daa
or
outsl
adc
sub
int
or
cltd
repnz
jecxz
push
ljmp
cmp
jecxz
add
push
sbb
cmp
lahf
stc
push
xchg
add
adc
lock
add
inc
push
and
or
mov
sbb
sbb
movzbl
add
adc
insl
xor
sub
arpl
pop
sub
mov
xor
movsb
pop
push
mov
push
xor
pusha
cmp
xor
and
cmp
dec
or
push
gs
inc
fisttpl
and
cmpsb
pop
add
sbb
testb
push
push
loope
in
bnd
loop
inc
sbb
xchg
mov
xorb
adc
inc
jne
aam
xor
addr16
add
ret
sub
add
sub
xchg
mov
and
pop
inc
cmp
mov
sbb
or
cld
add
mov
push
push
out
popa
mov
lock
xor
mov
inc
repz
popa
fsubl
dec
pop
push
mov
scas
push
pushf
push
mov
test
or
test
in
arpl
daa
sub
pop
add
fbstp
subb
push
mov
push
xor
add
and
fwait
inc
aaa
testl
sub
fisubrs
mov
sub
fs
pop
lea
cmp
push
test
sbb
dec
or
std
and
mov
lock
jp
mov
bound
sub
cmp
jae
mov
cmp
out
nop
ja
xchg
jns
sbb
jle
push
push
dec
inc
lock
mov
xchg
jg
rclb
inc
fs
mov
imul
dec
mov
xchg
lcall
int3
push
dec
lcall
js
adc
jmp
fisubrs
jmp
push
add
inc
add
or
inc
add
test
sub
ret
push
call
loopne
push
fucomi
adc
mull
add
push
push
push
mov
sbb
push
pop
imul
sbb
popa
sub
xor
dec
lock
sbb
andb
pop
adc
push
nop
lret
in
sbb
test
and
inc
pushf
adc
pop
cmp
jne
cmp
adc
orl
cmp
sbb
pop
push
mov
and
outsl
adc
dec
imul
test
in
cltd
sbb
jmp
test
std
mov
add
pusha
pushf
sysret
push
sbb
data16
add
sbb
mov
enter
in
shrb
pop
adc
push
adc
jmp
cmp
jnp
aam
xchg
cmp
mov
in
pop
mov
jmp
dec
or
and
jb
mov
dec
xor
adc
xor
enter
addl
xor
jmp
xchg
inc
jecxz
test
mov
daa
lea
fisttps
cmp
adc
addr16
push
sub
xor
fsubrs
jne
push
push
call
sti
cmp
aaa
enter
shrb
adc
fcoml
sbb
add
rcrl
push
add
xlat
sbb
jne
mov
sub
test
js
sbb
sarb
push
push
push
push
jmp
ret
lcall
mov
adc
dec
out
mov
adc
mov
addr16
movb
sub
mov
jb
dec
pop
les
or
add
aas
inc
push
mov
push
je
xchg
sub
jmp
popl
push
in
outsb
add
outsb
pop
cmp
push
push
push
add
jno
out
pop
test
cmpsb
mov
js
cmp
jae
mov
inc
aaa
lea
add
push
adc
test
push
pop
mov
loop
cwtl
jns
mov
test
andl
pop
push
or
dec
mov
daa
mov
dec
push
inc
cmp
inc
popf
push
mov
sub
mov
or
test
jg
jo
add
add
addr16
movsb
cmpb
addb
mov
inc
jge
xor
mov
pusha
lret
jbe
pop
jnp
movsb
xchg
dec
mov
daa
orb
or
xor
adc
dec
enter
sbb
mov
loopne
jl
inc
push
push
add
add
stc
cmp
loopne
push
sbb
addl
aas
mov
test
mov
push
sub
dec
outsb
jle
daa
add
or
movsl
decb
push
push
repnz
push
jmp
subl
push
mov
nop
out
push
sub
or
in
jb
and
inc
push
inc
icebp
or
xchg
int
sub
movsb
leave
iret
cmc
mov
popa
push
test
jecxz
push
xchg
xor
enter
lea
stc
jbe
mov
and
add
push
dec
addl
or
or
xchg
loope
mov
shr
sbb
dec
xor
je
mov
movsl
dec
adc
fcom
shlb
loop
fists
dec
mov
add
push
push
add
aad
pop
push
fistpl
mov
mov
test
xor
subb
add
inc
dec
inc
mov
mov
adc
in
or
push
inc
bound
pop
hlt
jle
push
nop
jg
push
add
dec
push
xchg
repnz
mov
push
dec
mov
mov
dec
add
imul
inc
daa
imul
sbb
ret
mov
ja
sub
js
pop
add
mov
sbb
adc
sbb
add
fcoml
inc
jnp
ja
xor
add
push
push
mov
inc
pop
jecxz
inc
sbbb
sub
dec
sbb
sbb
roll
xchg
mov
sub
add
movsb
xchg
insb
add
sub
or
pusha
xchg
inc
sbb
inc
lea
lods
adc
lods
jno
add
dec
shll
xor
dec
daa
mov
lret
push
sbb
adc
push
arpl
add
xchg
mov
shlb
pop
cmp
jo
mov
adc
sub
push
enter
xchg
aam
mov
shll
adc
jne
push
and
or
sbb
test
scas
or
into
lea
xlat
xor
push
and
push
xorb
pop
inc
dec
and
or
stos
or
sub
and
nop
push
cwtl
jl
imul
xchg
in
sub
ljmp
fiaddl
inc
xorb
aam
or
and
nop
xor
cmp
and
ret
push
inc
pop
mov
pop
dec
push
outsb
xor
nop
or
int
sbb
add
add
xchg
inc
mov
inc
or
in
push
rolb
pop
jo
pop
jg
bound
mov
add
cmp
loopne
insl
inc
adc
mov
or
and
nop
nop
inc
fstl
in
aam
aas
mov
inc
outsb
pop
aam
xor
cltd
xor
cmp
push
nop
stos
or
fbld
xchg
push
jp
pusha
jne
cmp
nop
je
adc
cmp
adc
xor
fnstsw
adc
and
push
add
xchg
es
xor
or
add
rorb
mov
aam
xor
scas
fwait
sub
add
fst
adc
or
add
push
dec
ljmp
xchg
cmp
cld
xchg
jne
mov
xor
sub
adc
lea
and
xchg
or
aad
mov
inc
std
jb
jle
or
pop
xchg
cmc
mov
call
push
jbe
stc
inc
or
ret
adc
les
or
in
cmp
xchg
mov
sub
dec
ljmp
popa
hlt
dec
lea
xchg
push
mov
mov
mov
cmp
mov
mov
push
xchg
sub
imul
lret
in
jne
movsl
or
or
pusha
cmp
or
insb
lahf
push
cmp
imul
pusha
cmp
mov
lahf
xor
sbb
cmpsl
add
cmp
push
popa
movsl
nop
push
iret
adc
push
and
std
sub
lcall
add
cli
xor
jnp
lea
adc
lret
fimuls
jnp
out
push
fimuls
sti
xor
es
cmovl
inc
aad
stc
test
filds
push
inc
cmp
xor
inc
lahf
inc
add
pop
sbb
test
xor
add
cmp
sub
lahf
sbb
adcb
icebp
xchg
mov
inc
jae
push
mov
test
fisubl
in
or
add
call
inc
jge
icebp
add
insb
ret
adc
xchg
push
pop
orb
adc
or
ret
sbb
ds
mov
inc
inc
xchg
push
pop
lea
jo
pop
jo
sbb
je
shll
mov
mov
sbb
ficoml
sbb
shrb
push
jp
leave
sub
je
push
jne
lea
inc
rcll
xlat
push
add
jo
fs
jmp
cli
push
mov
adc
pop
push
in
and
push
push
or
pop
insb
cmpl
xor
call
cs
test
int3
sub
lods
ljmp
sub
push
and
pop
sbb
mov
pop
aam
add
gs
jle
fcoms
inc
sbb
cs
sub
mov
lret
sbb
pop
add
push
dec
xor
sbb
es
xchg
add
add
test
xchg
pushf
and
mov
push
add
sub
mov
xchg
cmp
scas
sbb
add
addl
cmp
sub
sbb
sub
add
aaa
sbb
fs
pop
and
dec
cwtl
dec
push
popf
lret
stc
decl
shll
push
sub
pop
add
cmpb
mov
iret
and
sub
mov
sub
nop
sub
cmp
push
sub
push
aaa
mov
and
xor
sbb
sub
mov
ss
and
sbb
imul
rcrl
addr16
and
adc
add
mov
andl
dec
add
dec
ffreep
fcmove
stc
xorb
mov
xchg
mull
sbb
and
mov
adc
pop
push
and
hlt
jo
and
fs
jo
cmpsb
lcall
daa
aam
or
shll
shrl
push
and
pushf
add
clc
inc
pop
sub
cmpsl
lds
inc
hlt
push
inc
dec
add
sbb
les
sub
mov
push
iret
or
mov
mov
mov
add
cmpsl
adc
lock
stos
adc
and
sbb
and
or
xor
dec
sub
mov
insb
insb
pusha
adc
scas
cmp
pop
xlat
inc
xor
pop
in
mov
sbbl
loopne
dec
dec
repnz
push
sub
and
jp
insb
sbb
pop
xor
rcll
leave
test
pop
call
push
test
ret
sbb
lea
mov
adc
pop
mov
addr16
xchg
xchg
pop
in
and
xchg
pop
pusha
dec
pusha
jne
lret
push
xor
pop
adc
and
enter
leave
ret
xor
mov
push
push
dec
push
and
adc
out
push
pop
movl
and
mov
sbb
adc
inc
test
out
pop
or
inc
inc
add
dec
lock
cmpb
or
ficompl
mov
jb
sbb
fistl
push
inc
dec
pop
and
mov
cmc
xor
sub
daa
insl
pop
jb
lods
outsl
push
sub
leave
sbb
and
xchg
pop
cmpl
and
sub
inc
adcb
cmp
or
loop
sahf
and
pop
cmpsb
sbb
movl
xor
inc
aad
mov
in
xchg
jmp
and
push
das
push
inc
call
jne
movsl
add
dec
push
daa
sub
fcompl
dec
loopne
icebp
dec
sub
aad
cltd
push
push
add
add
sub
mov
rclb
and
aas
dec
fwait
push
push
enter
push
push
dec
int
xchg
and
daa
sub
or
inc
fwait
sub
and
and
lret
subb
insb
cmp
call
test
dec
cmp
xor
cmp
mov
push
nop
add
mov
inc
test
fs
test
adc
aas
and
mov
pop
test
mov
es
stos
jbe
in
xlat
sbb
cmp
mov
pop
nop
in
xor
test
sbb
add
aas
and
inc
push
imul
sub
push
fwait
out
inc
or
in
xchg
push
pop
sub
mov
add
push
xchg
dec
xorb
sbb
inc
xor
sub
aam
jae
mov
in
pop
cld
lods
loope
insl
add
iret
pop
subb
add
pop
ret
sbb
jmp
adc
call
das
movsb
pop
sbb
enter
or
push
stos
add
lea
rol
ljmp
addb
add
jnp
cmc
fwait
sbb
je
call
xor
enter
dec
mov
adc
push
enter
cmp
mov
sub
adc
xchg
push
test
and
icebp
or
push
sbb
and
mov
mov
adc
shrb
mov
xor
xchg
and
add
or
out
push
sub
std
outsb
les
add
xchg
cmpb
push
insl
or
inc
sbb
rolb
xor
xchg
hlt
adc
or
push
sbb
xor
pusha
adc
pop
xchg
or
sub
add
cmp
mov
and
cmp
inc
and
pop
inc
arpl
push
adc
in
test
adc
invd
sbb
push
aaa
mov
pop
add
call
movsl
mov
cmp
pop
scas
mov
sub
test
cmpsl
sub
add
roll
aas
adc
pop
arpl
dec
mov
add
loopne
jl
mov
mov
add
adc
xor
sbb
or
push
es
lods
data16
cmp
mov
push
mov
and
leave
stos
in
add
and
jmp
fildll
nop
add
adc
or
and
push
add
invd
sbb
pop
push
cmp
push
jb
nop
sbb
ret
imul
pop
pop
mov
push
pop
les
xor
jbe
add
xchg
out
dec
and
jo
icebp
sbb
sbb
xor
and
in
inc
pop
test
insl
sbb
dec
popa
xor
pushf
nop
xchg
sbb
sbb
adc
mov
push
mov
cltd
mov
leave
dec
rcll
or
push
add
mov
push
mov
enter
xchg
dec
push
add
mov
and
stos
inc
dec
sbb
rcll
mov
inc
mov
push
andl
movsb
add
inc
sub
sbb
vpperm
and
div
int
dec
mov
cmpb
fbld
mov
jl
xchg
fadds
or
dec
or
jns
and
jge
aaa
daa
fmull
push
daa
test
es
ja
cmp
and
xchg
cmp
gs
popa
add
add
or
dec
inc
or
push
imul
xor
sbb
enter
lahf
push
jne
flds
adc
inc
test
loopne
dec
push
cmp
or
dec
add
inc
out
sbb
xor
cmp
call
jbe
jle
mov
push
movsb
adc
mov
push
sahf
inc
repnz
push
add
xchg
add
cmpsl
push
mov
adc
xor
push
repnz
pop
das
add
mov
pop
add
enter
push
add
pusha
inc
pop
push
pop
push
add
arpl
xor
dec
imul
add
dec
jl
rcl
adc
inc
mov
xlat
fldcw
ror
mov
mov
movsb
dec
fdivrl
add
andl
add
xchg
add
inc
add
sahf
xchg
je
aam
adcb
dec
mov
fdivr
xchg
add
addl
or
push
add
ret
aad
or
call
sbb
sub
cmp
std
mov
cmp
je
jae
imulb
mov
pop
enter
jo
push
mov
and
mov
fadds
cmp
cmp
jmp
js
push
test
loop
dec
adc
rclb
or
mov
cmpps
loopne
outsl
xchg
insl
mov
or
jnp
stos
in
push
or
push
push
imul
push
mov
or
cmpsb
nop
cmpsb
adc
xchg
push
mov
adcb
test
xchg
add
test
enter
sub
mov
fidivl
adc
dec
and
or
addr16
or
iret
push
repnz
or
sub
pop
and
mov
xchg
or
or
adc
dec
testl
jl
pop
addl
mov
sub
je
adc
shll
mov
sarb
mov
adc
push
push
cmp
xor
jg
icebp
shll
call
mov
sbb
int3
add
sbb
pop
cmpsl
add
sbb
fcom
sbb
xchg
sbb
push
xor
shrb
add
or
xchg
or
sbb
sbbl
push
and
sub
and
and
dec
andb
add
xor
cmp
and
fdivl
add
dec
sub
sub
iret
add
test
in
xchg
cmp
sub
testl
mov
fs
or
cmp
pop
rcrb
and
cwtl
pop
enter
cmp
sbbb
aam
movsb
cwtl
movsb
cwtl
pusha
push
xorb
dec
fsubrs
aam
or
je
add
lock
xor
dec
loopne
sbb
mov
pop
pop
push
jl
inc
mov
cmp
and
es
cmpsb
xor
std
lods
ret
lock
pop
or
jl
mov
jne
cmp
add
mov
add
adc
pop
xchg
xor
sub
lods
or
in
sub
sbb
adc
mov
adc
pop
ds
cmp
test
xlat
cmc
aam
adc
dec
cmp
ret
ret
divl
inc
js
mov
pop
shlb
inc
add
mov
in
aas
push
push
jns
dec
cmp
hlt
inc
les
jns
cld
inc
fcomps
jns
push
add
push
hlt
or
push
les
xor
sahf
cmpsl
je
sbb
adc
imul
adc
inc
jmp
cwtl
shl
jl
out
adc
loop,pt
dec
and
ret
sbb
leave
subl
bound
and
cmp
movl
loopne
add
es
push
rolb
add
fadds
dec
cmpb
movsb
aas
and
add
lods
ds
push
repnz
mov
cmp
iret
cmp
cmp
es
cmpsb
xchg
push
cmp
test
add
xchg
mov
rclb
mov
inc
jge
inc
lea
mov
test
adc
cltd
shlb
and
jmp
stos
into
loop
ror
sbb
lea
cmpsl
insl
addb
adc
or
sbb
push
rclb
dec
dec
push
mov
mov
pop
push
inc
inc
xchg
inc
call
ret
pop
mov
cmp
int3
xor
adcl
jne
add
mov
mov
test
push
jo
imull
jo
dec
push
push
jle
and
aam
sbb
add
sub
jo
pop
rorl
jb
enter
cmpb
push
lods
add
and
pop
inc
mov
cmp
inc
pusha
pop
push
mov
adc
mov
add
icebp
shlb
inc
add
ret
push
and
push
sbb
aam
jno
testl
jecxz
cmpb
in
sti
and
mov
mov
inc
pop
rcll
push
aaa
xchg
addb
push
push
mov
push
and
cli
cld
lock
xor
dec
mov
loop
push
push
pop
pop
std
fistps
xchg
and
loop
inc
lea
mov
dec
mov
inc
inc
scas
add
mov
xchg
sub
push
sbb
inc
sub
push
and
cltd
add
ret
in
inc
in
shlb
das
xchg
xor
dec
cmpb
mov
jl
rsm
inc
mov
sub
and
lock
bound
push
sub
and
lods
test
xor
xor
add
fmuls
leave
add
and
adc
pushf
and
dec
inc
pop
adc
dec
pop
sbb
call
pop
xor
or
sbb
repz
sbb
or
in
scas
or
sbb
popf
fldl
sbb
inc
lcall
lods
push
dec
dec
loop
jno
adc
jo
push
inc
cli
sbb
add
pop
outsb
popa
and
frndint
nop
sbb
sbb
fs
xchg
dec
sub
push
sbb
cmp
inc
adc
and
inc
loopne
fadd
push
mov
or
sbb
cmp
xor
icebp
popa
mov
push
push
cmpsb
xchg
in
rcrl
push
xor
add
cmp
jae
adc
push
jns
rcrl
lods
push
enter
xchg
inc
add
lock
aaa
lea
test
orb
mov
xor
rorb
in
lods
divb
xor
add
rcll
push
cltd
inc
xor
outsb
and
push
jne
nop
or
push
shlb
sbb
mov
sub
and
ljmp
addr16
add
subb
adc
mov
and
xchg
pop
shrb
adc
mov
pop
or
lret
in
jae
int3
add
jo
jecxz
sub
leave
jne
xlat
ja
fidivrs
pop
push
insb
imul
or
lret
sti
adc
jo
sub
mov
xorl
lret
add
rcrl
daa
lods
and
push
xor
cmpsl
sbb
cwtl
cmp
inc
inc
jge
xor
cli
mov
and
sbb
dec
insb
push
das
js
pop
test
adc
ret
xchg
pop
dec
int
mov
mov
xor
and
je
cmp
inc
sahf
or
stos
jbe
xchg
dec
xor
pop
adc
add
jl
adc
int
shlb
dec
cmp
or
int3
in
push
dec
jae
cmp
push
xor
cmp
push
dec
inc
enter
xor
aam
mov
leave
xchg
je
int3
mov
sub
mov
add
jb
pop
sbb
aad
push
pusha
mov
or
in
sub
jo
or
xchg
xor
dec
or
fisttps
imul
leave
adc
jle
sbb
adc
push
cmp
jae
call
adc
cli
push
dec
mov
repz
sbb
mov
fisttpl
sbb
pusha
add
out
fucomp
cs
pop
inc
jne
mov
xor
push
push
push
repnz
ds
jge
push
test
jmp
inc
or
sbb
xchg
loopne
pop
decb
or
add
mov
push
add
cli
test
xlat
jns
add
xlat
add
inc
cltd
xor
add
xchg
add
and
push
jno
push
jmp
push
adc
jg
cmp
incb
push
push
push
test
cmp
adc
or
push
mov
sbb
xlat
add
cli
sub
xor
add
lock
adc
inc
ljmp
push
cmpsl
shl
inc
ss
pop
fists
lock
mov
dec
test
ret
add
adc
sub
and
xchg
pop
push
fbld
or
test
pop
imul
mov
stos
and
addr16
push
fisttpll
xchg
jno
pop
push
lods
filds
dec
inc
fisubl
sbb
inc
push
cmpsl
in
pop
mov
imul
xchg
xor
pop
arpl
xchg
out
xor
push
pop
push
popa
and
dec
cmp
inc
adc
lret
dec
sbb
or
mov
pop
cmp
lea
sbb
jmp
sub
jp
push
mov
lods
cmpsl
dec
dec
mov
cmp
loopne
lret
inc
popf
add
mov
pop
test
imull
adc
pop
ss
sub
adc
and
lahf
aam
cmp
sub
jmp
ret
xchg
xor
sub
or
add
xor
or
cltd
and
xor
cs
out
xchg
mov
sub
adc
mov
test
fwait
add
push
pop
sub
or
arpl
inc
jne
leave
in
jge
or
cmp
test
mov
and
xchg
adcb
pop
orl
dec
and
imul
or
adc
imul
mov
rolb
adc
cmpsb
add
sub
dec
add
imul
int
sbb
pusha
scas
cmpsb
sub
test
sbb
cmp
and
add
adc
jbe
push
add
sbb
inc
add
or
das
jb
pop
mov
mov
push
jmp
jle
cmp
jae
push
add
mov
cmpsb
lods
xchg
push
push
or
push
jno
inc
cmp
jl
aad
pop
and
outsl
push
sti
std
incl
mov
xchg
xor
adc
insl
aaa
xor
std
shlb
loopne
lahf
sarb
add
mov
pusha
xchg
insb
mov
or
enter
add
pop
push
or
ror
push
fadds
mov
mov
sti
pop
push
add
mov
mov
jle
and
je
in
aam
push
ss
adc
adc
ficompl
insb
push
sub
mov
jo
nop
test
cmpsl
sub
dec
sti
add
cmp
in
add
add
push
mov
sub
inc
add
mov
pop
shll
push
pop
pop
push
pusha
lods
imul
fs
dec
fwait
sub
cmp
add
cmpsb
hlt
xor
cmp
dec
sub
or
add
adc
push
adc
pop
or
pop
lock
sbb
mov
int3
cmp
inc
jo
xor
test
push
pop
jle
inc
mov
mov
dec
xchg
push
sahf
push
lock
les
fldl
or
jo
inc
cmp
pop
pop
mov
popf
gs
cs
xor
imul
cs
sbb
insb
jo
mov
or
add
aaa
mov
ljmp
adc
and
or
mov
inc
andps
orb
push
or
mov
incl
dec
addb
inc
add
mov
fldt
xchg
adc
mov
adc
gs
mov
imul
push
add
inc
and
cmp
in
mov
ja
int3
dec
dec
mov
rorl
lea
ficoml
test
add
test
push
popf
mov
repz
add
fcompl
adc
sbb
xchg
adc
shll
push
mov
mov
je
xor
fsubr
movsb
dec
mov
das
jne
fdivl
sbb
xchg
mov
popf
xchg
jne
les
fdivrs
ret
jge
cmpsl
jne
ss
cmp
in
xchg
inc
push
cwtl
loopne
dec
add
out
add
pop
enter
xor
loopne
add
aaa
daa
sbb
adcl
adc
add
movsb
mov
or
cwtl
mov
add
scas
btc
sbb
add
sbbb
movb
mov
lock
jne
loopne
inc
jbe
push
pop
dec
xor
sbbl
int3
push
jl
sub
mov
cli
cmp
ret
push
imul
sbb
push
pop
lea
push
push
jb
or
mov
cmp
sbb
testl
mov
or
adc
je
cmp
je
mov
je
cmp
je
push
jnp
xchg
jne
push
push
mov
mov
mov
mov
lea
lock
lods
shrl
loope
gs
or
out
jnp
inc
and
dec
inc
hlt
inc
and
mov
mov
mov
or
xchg
or
and
xchg
cmpb
adc
aam
push
test
hlt
icebp
cmp
je
adc
and
cmovno
dec
lcall
pusha
jbe
cwtl
pushf
mov
xor
xlat
add
jge
cmp
xchg
mov
lahf
cs
into
mov
adc
in
push
push
movsb
push
push
xchg
std
sbb
sub
lcall
lock
sbb
ret
popf
test
push
stos
sub
xchg
test
or
das
popa
insl
mov
inc
mov
outsb
xorb
or
and
mov
adc
cmpb
jmp
mov
pop
lret
sbb
mov
test
sbb
push
lret
xor
and
loopne
xor
imul
lods
cmp
mov
mov
inc
xlat
lods
inc
push
dec
icebp
jb
shr
mov
addl
or
pusha
jb
jl
mov
sbb
xchg
mov
stos
les
idivb
out
or
shrb
xchg
test
jge
mov
rorb
scas
shl
or
mov
test
jle
out
cmp
inc
fwait
sbb
cld
psubb
pop
cld
sahf
nop
push
and
cmp
les
mov
lock
xchg
pop
and
data16
xor
adc
ret
xor
push
adc
lods
and
and
es
lds
and
xchg
adc
pop
pop
jl
adc
push
push
xchg
xchg
xorb
loopne
in
or
outsb
xorl
icebp
and
mov
add
push
arpl
inc
lods
ret
xor
lock
aad
and
mov
mov
mov
add
add
shrb
adc
lods
and
orl
mov
cs
push
lock
loope
push
fdivrl
xor
or
dec
inc
xchg
adc
fdivs
pop
mov
cmp
sub
fisubrs
mov
aam
fsts
fcoms
and
ret
push
push
pop
out
lcall
imul
adc
adc
inc
mov
sub
outsb
rorb
jb
cmpsb
xchg
out
mov
or
in
or
mov
loopne
inc
pushf
mov
push
sub
sub
ss
rclb
sub
mov
sub
adc
and
dec
sub
push
and
add
xchg
sub
lret
add
add
pusha
push
jns
cltd
rol
sbb
add
jns
dec
jns
mov
mov
push
repz
or
adc
push
dec
adc
fistpll
fs
add
mov
outsb
push
xchg
add
or
enter
call
fnstcw
outsl
mov
shlb
jne
mov
cs
jmp
div
push
es
xchg
lea
push
adc
jno
in
cmpsb
outsl
cmpl
mov
push
pop
mov
mov
push
insl
adc
movsl
lds
pop
test
sbb
xchg
push
xchg
or
aad
sbb
or
sbbl
shrb
cwtl
int
or
inc
jge
fistpll
pop
xor
dec
enter
xchg
movsb
sbb
je
xor
mov
xchg
scas
sbb
pop
cmp
inc
lret
adc
lods
cmc
push
ja
mov
push
push
mov
ljmp
dec
pusha
push
push
leave
push
mov
scas
xchg
cmp
push
cmp
mov
xor
aad
insl
or
mov
mov
lock
sub
ret
inc
imul
das
or
stos
sub
xlat
or
aas
xor
mov
bound
push
cmpsb
adc
add
pop
inc
dec
ljmp
and
pop
lea
mov
and
cmp
adc
jnp
aaa
lods
daa
sub
imul
xchg
pop
ss
pop
inc
mov
adc
push
loopne
jl
loope
and
clc
or
es
je
shll
xchg
jl
loop
movl
sbb
pop
xor
sub
je
add
add
or
add
sub
das
and
enter
or
rorl
or
rcrl
es
stc
add
rclb
mov
pop
and
sub
outsb
lock
xchg
add
sub
sbb
sar
jbe
pop
xchg
push
outsb
insb
or
sub
ret
fistpll
adc
push
pop
adc
dec
adcb
sub
adc
aas
addl
jne
jne
dec
mov
inc
push
sbb
insl
or
push
adcl
add
push
loopne
push
dec
insb
mov
mov
call
add
inc
add
icebp
add
in
subb
imul
adc
mov
and
lret
push
lea
jecxz
gs
push
jmp
push
mov
rol
jnp
and
pop
subl
mov
insl
dec
out
fmuls
inc
test
push
jo
js
xchg
mov
movl
loope
inc
mov
test
add
push
divl
pop
pop
mov
push
lods
mov
nop
aaa
mov
int3
mov
insb
cmp
adc
scas
push
jg
push
cmp
mov
pushf
pop
adc
ss
sbb
or
xor
dec
jo
inc
mov
sub
adc
pop
or
jle
adc
addl
mov
xchg
push
lea
inc
lds
sbb
daa
ss
icebp
push
push
push
mov
std
sbb
and
push
inc
add
mov
sbb
inc
adc
mov
and
push
or
mov
add
rolb
push
es
adc
xchg
push
test
push
adc
push
xor
rolb
in
jmp
cmp
inc
mov
push
inc
shrb
cmovle
cmp
je
pop
and
push
or
inc
dec
add
call
jge
mov
or
or
and
inc
xor
mov
roll
add
enter
pusha
addl
mov
mov
cmpsb
push
xchg
xchg
fbld
pop
stos
or
jcxz
mov
cmpsb
inc
cmp
testl
jb
cmp
cmp
pop
dec
sbb
cmpsb
andl
aam
iret
es
ja
sub
icebp
add
sub
sbb
add
jb
das
imul
adc
mov
popf
fadds
cmp
sbb
mov
adc
push
add
push
es
nop
add
ficoml
mov
mov
test
jo
xchg
jne
sbb
or
aad
mov
cmp
adc
push
idivb
pop
ret
inc
test
jmp
inc
pusha
or
aam
add
in
das
jg
or
dec
pop
pop
adc
pusha
insl
ds
dec
in
or
inc
or
mov
dec
dec
test
xchg
mov
pop
loop
push
push
out
pop
loope
push
enter
fidivs
lea
loop
mov
sti
icebp
es
test
jo
inc
sbb
hlt
jno
popf
add
insb
je
push
lea
xor
test
inc
xlat
sbb
xchg
push
das
adc
stos
dec
call
ja
and
bound
add
xchg
cmc
addr16
mov
mov
mull
aas
and
add
or
pop
inc
adc
cmp
push
cld
lock
mov
mov
cmpsl
lods
mov
adc
mov
testb
sub
ficompl
pop
mov
jmp
push
add
cmp
mov
add
dec
sub
ret
jns
mov
mov
rolb
adcl
xor
cmpb
push
or
adc
or
jg
push
cmp
inc
push
cmp
popa
push
inc
or
lahf
cmp
shlb
cmp
pop
xchg
das
mov
xor
xchg
in
mov
clc
test
push
add
sub
adc
nop
fadds
hlt
sahf
into
jle
cmpsl
aas
inc
cmp
and
push
das
sub
sub
test
test
dec
sbb
inc
outsl
test
and
fadds
jle
mov
xchg
mov
add
outsb
and
push
mov
stos
mov
sbb
pop
add
inc
or
fs
adc
fdivs
leave
sbb
es
inc
cld
xchg
movsb
pop
dec
rolb
push
mov
lds
inc
pushf
pop
xor
push
or
add
cmp
and
bound
loopne
xchg
test
or
notb
pop
mov
and
xor
cmovae
add
push
leave
cmpsb
and
fsubrp
xor
cmpsb
xchg
icebp
sarl
sbb
in
xorb
fldenv
xor
dec
add
lcall
mov
jg
sub
inc
add
add
push
inc
call
je
lret
adc
xchg
lods
push
mov
pop
cmpsl
add
adc
or
dec
or
scas
mov
lods
inc
pushf
or
mov
xchg
int
rclb
sbb
add
dec
push
sbb
xor
test
aam
mov
jmp
jne
cmp
jb
sub
jmp
push
dec
movzwl
cli
sub
dec
push
jle
jle
setl
movzbl
mov
sbb
jmp
push
and
icebp
sbb
mov
imul
sub
mov
cs
scas
in
mov
inc
mov
add
push
sub
cmp
push
add
dec
push
mov
lods
out
push
rorl
cmp
addb
lahf
jmp
push
repz
rcl
pop
lea
push
jne
or
and
mov
paddsw
leave
in
push
test
imul
xchg
mov
rorl
popa
or
mov
push
mov
bound
pop
sub
mov
sbb
aam
fisttps
and
inc
pop
aas
loope
push
adcl
or
jmp
ljmp
popa
sub
mov
rclb
or
or
or
mov
add
mov
rolb
adc
ds
add
dec
loopne
push
lds
inc
dec
xchg
add
inc
in
or
mov
and
or
xchg
push
push
push
cmc
xor
gs
ja
pusha
cmp
mov
xor
adc
add
bound
push
sbb
mov
lds
xor
push
ss
cs
cmp
inc
adc
xor
ret
sbb
sub
or
dec
aad
nop
lea
loopne
add
imul
xor
mov
movb
lods
adc
xor
pop
adc
adc
push
fstl
and
iret
or
and
push
sbb
cmp
xor
leave
or
mov
into
ja
push
pusha
add
adc
and
enter
sbb
adc
icebp
in
sub
or
rorb
arpl
and
enter
in
pop
arpl
push
fs
sub
pop
pushf
or
inc
add
sbbb
loopne
adc
sbb
out
sub
push
xchg
xlat
jbe
adc
je
adc
xor
sbbb
adc
xor
jle
add
push
or
pop
cmpsb
sbb
inc
inc
or
and
add
dec
ret
jo
mov
loope
add
lcall
jmp
mov
inc
jo
add
scas
sbb
or
loopne
pop
adc
and
and
cmp
xor
cmp
out
xchg
arpl
and
gs
jle
or
xlat
add
insl
add
hlt
push
mov
mov
lea
mov
add
repz
cmpb
jne
imul
xor
mov
mov
js
xor
inc
pop
adc
stc
xor
sbb
add
push
cwtl
lds
icebp
push
fcmovu
add
mov
mov
ss
and
ret
and
or
and
and
push
mov
or
lods
push
sub
jae
sbb
mov
sub
and
cmp
enter
imul
je
push
mov
xchg
sub
lock
std
decl
enter
sub
cmp
mov
lea
dec
insb
shlb
xor
test
ds
jnp
mov
jns
pop
aaa
and
add
mov
push
aad
dec
adc
mov
or
in
add
mov
stos
mov
inc
and
sub
outsl
into
je,pn
or
jge
xchg
push
mov
add
sbb
rol
mov
lret
test
push
enter
sbb
movsb
inc
pop
lahf
fdivs
xchg
cmc
cmp
leave
jg
or
push
dec
pop
ret
push
cmpsb
pop
push
mov
sub
jne
xchg
jp
mov
inc
iret
add
lahf
mov
sbb
cmp
nop
adc
repz
jg
sub
fsubrs
shrb
fmuls
push
aas
push
imul
pusha
jae
daa
jg
xchg
jecxz
cmpsb
sbb
pusha
jo
mov
sti
sahf
ficomps
mov
sub
mov
push
aam
pop
js
test
mov
adc
aaa
push
add
add
adc
inc
cs
dec
arpl
and
push
dec
jne
inc
or
mov
push
push
jl
js
mov
pusha
loop
js
cli
or
add
loopne
pop
jbe
popa
jmp
dec
sub
cmpsb
or
lret
cltd
js
mov
push
mov
sti
and
leave
push
adc
cs
pop
mov
sbb
je
adc
imul
js
xchg
aad
fs
andb
or
inc
xchg
dec
and
push
dec
les
stos
xor
add
enter
cmp
add
mov
test
mov
and
inc
or
movl
sub
xchg
sbb
sub
in
lret
xchg
sub
cwtl
inc
fs
lcall
inc
pop
cmp
stos
inc
inc
mov
xorl
inc
inc
dec
inc
dec
add
flds
shrb
std
jne
stos
inc
sahf
inc
mov
xchg
lret
xchg
cmp
cmp
enter
scas
add
cmp
dec
push
push
dec
mov
jbe
jb
inc
dec
adc
or
mov
cwtl
or
push
jns
adc
jmp
fwait
cs
push
add
adc
add
adc
xor
xor
push
adc
test
daa
pusha
jmp
rcl
jns
adc
jne
push
mov
sub
out
aaa
pushf
mov
leave
sti
mov
push
and
jae
fs
pop
xor
jo
or
xor
ror
aaa
imul
add
das
mov
sbb
sbb
push
lods
adc
leave
adc
or
mov
aas
xchg
and
cmp
jno
xchg
add
mov
xor
nop
aad
ss
jns
xor
adc
pop
push
leave
jmp
and
xor
addr16
fisubrs
daa
sub
or
mov
inc
sub
loope
in
jecxz
mov
add
add
sub
cmp
push
add
sahf
add
dec
inc
rcrb
call
or
sub
fdiv
add
adc
data16
outsl
and
nop
scas
ret
mov
add
mov
ret
enter
iret
push
xor
push
push
popf
insl
repnz
nop
loopne
mov
loop
pop
enter
and
mov
push
sbb
roll
jl
sub
dec
orl
jmp
xor
inc
mov
xor
pop
pop
sbb
test
push
cmp
sbb
mov
pop
adc
add
add
cmpb
je
scas
fadd
push
mov
dec
jbe
xchg
sub
and
fistps
or
bound
inc
and
cmpsl
flds
pop
cmp
and
cmp
xchg
sbb
and
movsl
push
cmpsl
and
orl
mov
mov
push
ret
mov
pop
sbb
jle
mov
add
jne
sahf
mov
add
lahf
pop
add
out
or
popa
add
sbb
adc
xchg
jae
cli
movb
push
imull
negl
cmc
jl
lea
xchg
or
push
fsts
pop
sbb
lahf
scas
outsb
pop
out
mov
jae
fiaddl
dec
push
mov
mov
jo
fdivl
fisubl
stos
subb
loope
repz
popa
adc
push
pop
fcomps
xor
sub
js
sub
scas
repz
inc
les
shrl
xchg
sub
or
mov
or
lods
xchg
stos
add
aaa
sbb
add
ret
addl
push
and
xchg
fnsave
cwtl
jo
ret
div
inc
dec
stos
or
dec
xchg
pop
or
ljmp
je
sub
push
ret
adc
scas
sub
ret
jns
and
mulb
pushf
popa
or
into
data16
pop
lret
sub
addr16
adc
or
test
add
push
jno
dec
in
mov
enter
inc
pop
pop
pusha
adc
mov
lahf
test
cltd
pop
push
lret
rclb
jns
stos
mov
mov
or
sub
imul
dec
or
cli
fcomi
in
push
fcomps
cmp
dec
add
pop
in
ffreep
add
add
add
and
pop
jg
mov
mov
jp
in
jg
sbb
flds
flds
cmp
mov
rolb
ret
lret
test
push
leave
das
mov
incl
sub
fmuls
push
pop
addr16
lea
inc
sbb
or
inc
push
aaa
xchg
add
mov
repnz
movsb
cmp
mov
pop
cmp
add
movl
aaa
sbb
adc
cmpl
or
pusha
ljmp
mov
push
test
add
cmp
cwtl
inc
jp
popf
inc
mov
pop
cmp
cmp
or
dec
jae
push
jp
ss
and
jecxz
mov
push
and
cld
add
add
sahf
movsl
mov
add
mov
xor
mov
pop
adc
fdiv
ret
xchg
loope
jmp
les
and
adc
jo
stos
rcll
and
sarb
pop
adc
loopne
mov
ret
mov
cs
or
ret
push
outsl
xchg
test
push
push
push
and
ret
call
jl
push
xchg
addb
mov
roll
insb
push
lcall
popw
push
call
insb
jo
sbb
push
icebp
jo
in
xor
es
pop
adc
mov
add
jecxz
roll
xchg
mov
aam
aam
in
add
rcrl
or
inc
lea
icebp
lods
mov
sbb
call
or
mov
dec
cld
xor
cmpsl
mov
leave
ficoml
inc
inc
loopne
ret
push
punpckhdq
pop
int3
mov
mov
cld
loop
xchg
and
xlat
pop
test
sbb
pop
inc
push
dec
mov
stos
push
sub
push
mov
mov
fdiv
jne
push
push
cld
push
mov
int3
je
outsb
adc
jno
and
mov
inc
bnd
sub
jg
cmp
jg
adc
or
ja
push
xor
cmp
pop
jmp
dec
add
pop
xor
popl
adc
std
jg
push
inc
call
pop
and
mov
ret
xor
and
mov
scas
dec
pop
sub
push
adc
xor
jne
and
daa
pop
popf
add
mov
xchg
les
mov
xor
dec
or
lods
pop
pop
push
push
and
insb
push
mov
aas
mov
inc
cmpl
cmp
inc
pop
xchg
jecxz
xchg
sbb
sbb
dec
pop
mov
testb
inc
je
test
push
cld
push
orl
mov
ja
cmp
mov
call
or
jge
hlt
cmp
sub
push
cmpl
int
adc
jbe
lock
lock
pusha
rclb
mov
or
inc
clc
andl
clc
lock
popf
xchg
mov
sbb
test
in
add
decb
in
gs
add
loopne
lea
push
push
adc
int3
mov
mov
ds
push
int3
in
cmp
or
adc
adc
adc
xor
jns
adc
sub
adc
pop
mov
stos
jmp
pop
and
xchg
pop
mov
sbb
xor
jb
mov
dec
add
pop
les
js
inc
imul
and
dec
jno
mov
add
push
cmpsb
mov
mov
ret
push
mov
insb
mov
mov
in
pusha
aaa
movsb
shll
add
fs
sbb
aas
adc
scas
xlat
sub
popa
outsb
push
push
xor
add
mov
roll
sub
shll
in
orb
push
jmp
and
in
jl
sub
xor
movl
mov
das
or
xor
inc
push
adc
sbb
in
ja
or
or
inc
push
enter
in
inc
and
inc
push
mov
add
adc
cld
xchg
pop
pop
cwtl
imul
sbb
test
lods
mov
movsl
mov
xor
fiadds
loopne
push
mov
add
pop
das
add
sbb
in
lods
inc
jl
mov
mov
jb
xor
add
jl
cld
cmp
xor
pop
mov
add
in
push
repz
add
int3
cmp
sub
jne
inc
push
jnp
rcll
push
icebp
cli
int3
stos
lods
add
or
dec
aam
cmp
mov
sbb
add
mov
add
lock
lock
subl
je
mov
lock
jb
mov
mov
js
jne
jno
push
mov
sub
jne
xor
dec
jb
pop
call
or
jo
std
push
inc
dec
sub
popa
subb
xor
enter
inc
and
loop
cmp
or
bound
add
scas
andb
mov
or
fwait
sub
out
or
outsl
cmp
dec
add
inc
or
mov
cwtl
pushf
jp
xor
movsb
sub
push
mov
cmpsb
add
lods
shrb
or
jl
repnz
cmp
aaa
cmp
fsubrs
ss
imul
push
push
push
push
cmp
rorl
or
mov
push
and
pop
clc
inc
rcll
ja
push
adc
sbb
dec
and
pop
pop
ret
rcl
stos
lret
push
pop
test
fxch
xchg
idivb
xlat
push
sarl
call
pusha
inc
dec
jg
in
shr
sarb
inc
ret
ljmp
dec
into
jae
cmp
add
das
push
lret
inc
shll
mov
mull
mov
incl
mov
cli
dec
or
mov
add
or
in
pop
aaa
and
out
push
idivb
mov
mov
mov
pushf
sub
jle
xchg
jo
imul
bound
adc
pushf
dec
in
mov
aad
mov
test
or
incb
sub
ljmp
loopne
cmp
pop
mul
insb
lret
xor
cmpb
mov
xchg
shlb
sbb
jb
shll
loop
sub
push
xchg
leave
aam
test
je
pop
scas
xchg
jns
jmp
xchg
add
mov
sub
lcall
and
shl
sub
insb
push
cmpsb
mov
cmp
call
data16
jbe
scas
rcll
push
int3
inc
add
mov
add
pushf
mov
add
xor
fwait
sbb
lea
loopne
push
add
stos
push
inc
nop
dec
les
sarl
lret
cmc
mov
pushl
outsl
sahf
ret
push
sub
loopne
push
dec
rorb
sbb
push
sbb
inc
xor
lods
pop
cmp
cmp
push
je
outsb
mov
adc
orl
rolb
inc
sti
popa
stos
or
sbb
lea
aaa
dec
sub
pop
popl
stos
jl
push
push
push
lret
sbb
add
add
inc
sub
inc
xchg
sbb
sub
pop
bound
push
stos
imul
or
mov
push
and
pop
xor
inc
data16
sbb
lret
mov
lods
pop
call
inc
sub
cs
mov
loopne
in
inc
adc
pop
cli
cmp
sbb
ret
lock
mov
pop
testb
lock
dec
jecxz
pusha
inc
mov
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
pop
lock
pop
add
push
ficompl
adc
js
leave
fwait
pop
cmp
inc
subl
shl
or
imul
cmp
loopne
scas
inc
loopne
add
hlt
sbbb
push
clc
hlt
mov
mov
sub
mov
xor
jge
les
mov
jno
arpl
fs
in
aam
xchg
or
sub
add
adc
mov
je
push
ret
in
js
mov
fisubrl
stos
int3
xchg
and
pop
mov
in
jmp
sbb
rorl
and
add
icebp
mov
mov
imul
push
cmp
xchg
shl
divl
pop
jp
test
divl
and
sub
mov
and
or
movsl
jecxz
mov
rcr
bound
pop
ds
aam
push
pusha
push
enter
cld
cmp
xor
insl
jne
cs
add
push
stc
repnz
jae
arpl
push
xchg
out
push
je
inc
or
sti
repnz
insb
jne
or
cmp
xchg
add
into
push
push
sub
aaa
sub
lea
lcall
or
fildll
cmp
je
jp
lcall
mov
cmp
ret
les
fidivs
into
sbb
dec
fcoml
cmp
jae
xchg
je
push
pcmpeqw
sub
pop
cmp
push
movb
roll
pop
mov
push
mov
jne
add
or
cmp
ss
jge
sarl
push
inc
sahf
xchg
mov
dec
je
pushf
mov
push
outsl
and
pop
fucom
nop
xor
sbb
push
add
jecxz
sub
xor
fstpl
and
or
test
jae
add
ret
loopnew
je
adc
stc
mov
dec
pop
cmp
jne
clc
les
add
cwtl
mov
mov
je
sub
xor
sbb
sahf
inc
rcr
rcrb
repnz
call
aas
or
add
push
push
cltd
add
cmp
outsl
add
cld
fisubrs
ret
bound
jae
mov
addl
mov
popl
clc
lock
or
or
xor
push
mov
or
or
add
cmp
dec
shll
jo
cmpsb
mov
xor
gs
repz
or
call
cmpsb
cwtl
jnp
xor
add
mov
inc
xor
lret
inc
int3
faddl
imul
xor
addr16
scas
sub
push
cld
push
rcrl
ss
mov
dec
testl
loopne
add
loop
push
xor
pusha
pushl
cmp
sub
inc
jl
add
and
js
jo
add
and
and
xor
dec
jae
add
sbb
lcall
enter
cld
push
sbb
jbe
dec
sbb
test
adc
pop
sbb
sar
adc
and
idivb
sub
mov
jne
mov
xor
fsqrt
bound
sbb
sub
testl
mov
mov
sub
xor
fsubl
push
dec
adc
scas
mov
gs
lret
sbb
jo
xchg
fs
jne
cs
inc
rcrl
xchg
lret
or
lret
cli
push
ja
insb
js
adc
xor
xchg
inc
shll
mov
arpl
or
lea
js
jo
test
or
pop
shlb
add
test
jo
out
mov
add
test
in
les
inc
repnz
pusha
in
movsl
roll
decl
add
lock
push
rol
ljmp
sbb
ja
add
repz
pop
subb
jnp
jne
lea
add
or
adc
pop
xchg
repz
add
adc
ret
lcall
cmpsl
fists
fdivrs
ror
cmp
mov
adc
ds
dec
inc
popf
add
pop
mov
incb
in
cmp
repnz
out
add
mov
cmp
mov
push
stc
xchg
mov
insl
jmp
out
fnstcw
add
mov
stc
push
adc
clc
loopne
mov
stc
xchg
jecxz
lock
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
pusha
fldcw
je
into
scas
mov
lods
push
scas
ss
adc
ja
add
pop
movsb
inc
jge
in
div
jg
outsb
jne
or
adc
shrb
jne
stc
mov
inc
sbb
add
push
lret
clc
dec
cmp
add
mov
movsl
cmp
push
shrb
pusha
sahf
ljmp
out
shrb
dec
xchg
subl
ret
mov
pusha
popf
jp
aad
dec
sar
or
add
sub
dec
inc
or
pop
movl
sub
daa
or
arpl
inc
clc
fidivrs
pop
xor
push
or
nop
fcmovnu
jge
loop
mov
lahf
pusha
push
test
enter
jg
or
mov
xchg
jmp
xor
lds
xor
adc
sbb
sbb
dec
out
loopne
cld
or
jo
pushl
mull
sbb
fisttpll
dec
xor
lock
add
add
fdivrl
inc
notl
xchg
inc
js
shlb
sbb
lods
mov
daa
add
mov
je
cltd
test
mov
xchg
inc
inc
pusha
insb
insb
cmp
fs
dec
popf
gs
aaa
adc
lcall
ret
ja
inc
arpl
and
in
dec
jo
cmpsl
mov
je
cmp
je
lret
imul
add
mov
pop
sbb
roll
mov
and
nop
jbe
cmp
je
xor
imul
lock
push
sub
lds
inc
pop
xchg
jmp
lea
dec
fsubr
orl
sub
push
add
mov
mov
adc
lock
in
cld
lock
pop
cli
sahf
pop
cmpsl
addb
push
adc
jo
into
notl
push
sbb
dec
and
xchg
int
mov
pop
jbe
mov
into
add
push
mov
cmc
mov
into
lea
mov
adc
inc
jmp
pop
cs
push
sbb
mov
push
leave
inc
push
cmp
dec
cmpsb
je
pop
mov
pop
jl
testb
sbb
inc
sub
add
add
and
mov
dec
xlat
test
test
ljmp
pop
pop
adc
jbe
addb
scas
fcoml
inc
pop
jo
sbb
jle
sub
jns
push
sbb
push
imul
clc
xchg
jge
jne
enter
pop
fisubrl
add
xchg
cs
mov
call
popa
pop
sub
outsl
adc
outsb
or
insb
mov
cwtd
addr16
xchg
sbbl
daa
push
clc
pushf
cwtl
fidivrs
sub
lods
sub
push
test
sub
fimuls
mov
je
sbb
pop
fisubs
add
push
repz
push
and
dec
push
lea
mov
cwtl
push
adc
xor
sbb
ret
sbb
lret
push
or
dec
sbbb
sbb
lods
add
adc
pushf
test
xchg
push
pop
and
cli
les
add
mov
xchg
pop
xor
pop
and
popa
lock
add
out
push
jb
nop
bound
fsubrl
mov
jnp
mov
pop
arpl
and
pusha
dec
sbb
imul
adc
std
subl
faddl
inc
jmp
mov
inc
ret
or
jbe
inc
inc
loopne
sub
adc
dec
add
push
cmpl
or
jne
ljmp
jnp
push
inc
lahf
mov
es
pop
adc
sbb
jg
adc
test
push
andb
mov
js
or
daa
rorl
outsl
add
push
pushf
xchg
mov
and
lods
or
in
inc
push
push
or
pop
sbb
xchg
xor
jecxz
lock
js
adc
clc
mov
in
cmp
jo,pt
jmp
out
mov
xchg
lret
cld
lock
in
out
out
pop
mov
int3
lcall
adc
fistl
enter
adc
cmp
jl
int3
pop
mov
mov
mov
push
sbb
add
por
jno
sti
popa
mov
and
add
data16
mov
jo
lret
pop
movsl
pop
or
lea
aam
in
mov
insb
mov
xchg
mov
pop
mov
movsl
add
idivb
je
mov
mov
mov
fwait
push
pop
add
adc
out
mov
push
push
cli
or
mov
mov
call
fadd
rcrb
xor
loopne
lock
test
push
jle
jb
mov
cmp
daa
sbb
out
add
test
aaa
ljmp
lods
pop
aas
xchg
add
jmp
jne
imull
push
movsb
mov
push
orl
repz
xchg
cs
or
adc
cmp
push
and
add
push
push
sbb
aaa
hlt
or
arpl
fs
aaa
jno
push
sub
mov
imul
and
adc
push
aaa
xor
movsl
mov
test
mov
in
aas
and
pop
call
pop
mov
stos
sbb
imul
or
adc
sbb
int3
test
pop
lods
addr16
add
and
xor
ret
cmp
or
mov
push
orb
add
andl
mov
lods
cmp
xchg
pop
push
lock
xor
push
cmp
xorb
test
jno
loopne
inc
inc
xlat
mov
pop
sub
dec
js
jp
cwtl
sub
inc
scas
addr16
pslld
xchg
std
decl
or
insb
test
fstpt
add
xor
mov
test
punpckhbw
inc
xchg
dec
push
adcl
dec
xor
call
mov
cmp
shlb
test
add
nop
push
mov
jmp
mov
pop
cmp
sbb
stc
add
cmc
add
and
in
pop
pop
or
push
and
adc
fmull
orb
and
push
lret
jecxz
push
or
xchg
pop
xchg
fbld
in
test
sub
test
nop
cld
scas
fs
push
cmp
ret
enter
cmp
adc
push
jg
jo
pop
cmp
adc
subl
cmp
inc
insb
js
loopne
push
pop
xchg
push
xor
out
dec
loopne
in
dec
testl
and
test
inc
cwtl
test
orl
or
pop
inc
xchg
dec
outsl
cld
andl
or
or
lret
inc
icebp
lods
test
aas
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
sub
mov
repnz
push
jmp
sbb
mov
inc
shlb
sbb
mov
pop
aaa
push
inc
imulb
adc
mov
mov
jl
andl
adc
mov
adc
push
test
cld
and
mov
je
jge
add
or
imul
jecxz
fisttps
jl
dec
xor
pop
sahf
xchg
xor
outsb
mov
lea
cmp
insb
xor
adc
mov
ljmp
inc
jno
push
test
iret
in
xchg
inc
mov
aad
xor
push
adc
mov
loopne
lods
jl
xlat
dec
mov
dec
cmp
or
shufps
popf
lcall
pop
sbb
loopne
je
not
shr
pop
movl
dec
insb
dec
jno
jecxz
dec
adc
pop
repnz
inc
push
inc
adc
inc
add
add
push
and
fdivs
pop
inc
pop
pusha
testb
cld
addl
pop
pop
xchg
pop
dec
push
fnsave
mul
or
pop
je
es
xor
push
popa
sarb
push
sub
aas
sbb
pop
cmp
test
orb
jle
or
sbb
testb
mov
jbe
and
aaa
or
add
xor
cmp
jl
loope
xor
xchg
push
sbb
add
jo
pop
bound
dec
pop
add
das
and
xchg
push
mov
push
scas
push
repnz
lahf
sbb
cmpsl
inc
add
dec
add
mov
movswl
add
fisubrl
push
lea
xor
inc
add
shll
add
rolb
add
aaa
push
mov
mov
frstor
js
push
push
test
std
stc
add
insb
scas
stos
mov
xchg
push
cmp
fbstp
js
movsl
mov
xor
cmp
push
mov
dec
out
pop
add
mov
call
clc
push
push
movhps
js
mov
sub
xorl
push
xor
cmp
data16
push
nop
test
test
dec
inc
mov
jmp
xchg
dec
xchg
gs
add
pushw
pushf
data16
mov
adc
aad
imul
movsb
test
rcl
mov
fdiv
fmuls
mov
adcl
andl
pop
outsb
ja
mov
jae
push
jo
jmp
add
pop
ss
bound
push
push
pop
and
cmpsb
jl
pushf
mov
je
pop
cmp
dec
cwtl
sbb
pop
insb
mov
pop
testl
dec
add
rcrb
fcoms
out
js
xor
ret
sbbb
xchg
jp
out
jb
sbb
or
leave
pushf
mov
push
icebp
enter
mov
xchg
mov
cmp
add
push
or
inc
pop
pop
enter
add
or
pop
add
push
xchg
je
out
gs
dec
lock
adc
leave
xchg
andl
add
xchg
adc
int
fildl
pushl
rcl
xor
or
shrb
stos
add
add
xchg
push
mov
and
clc
sbb
mov
or
cmp
mov
xchg
dec
out
sbb
cmp
mov
scas
sub
add
push
mov
in
rcll
push
out
or
inc
push
push
in
cld
sbb
pop
and
mov
cmpsb
fsubl
mov
ret
push
sbb
mov
aam
cmp
pop
jae
daa
pop
push
ret
movsb
jb
ja
push
aas
add
fsubrs
dec
stc
orl
insb
and
mov
ret
mov
imull
dec
push
push
mov
inc
test
dec
insb
add
jbe
xor
cmp
mov
sahf
xor
or
cs
xchg
dec
jge
adc
sbb
and
ret
sti
sub
cmp
jne
fistps
andb
mov
pop
mov
xor
cs
cld
cmp
mov
loope
jle
loop
movl
mov
push
sbb
sbb
mov
jnp
and
aas
xchg
or
inc
int
jbe
xlat
popf
enter
bswap
jne
loope
js
xchg
inc
cli
push
cld
mov
add
bound
iret
pop
call
movl
shr
inc
inc
jecxz
mov
sbb
mov
repnz
adc
dec
jl
xchg
push
sub
iret
jo
stos
pusha
insb
std
mov
decb
dec
dec
insb
adc
fucom
add
mov
xchg
js
jb
jge
pop
mov
cmp
or
loopne
push
cmpsl
bound
clc
xchg
pushf
repnz
mov
push
add
pop
adc
sub
rcr
mov
jne
add
jns
jmp
ljmp
or
sbb
dec
insb
or
movsb
adc
mov
int
cmp
inc
xchg
loope
push
cmpl
orb
lds
mov
adc
xor
lcall
adc
jge
jmp
mov
testb
out
movsl
addl
cmp
push
insb
sbb
pop
dec
jge
fimull
cmpb
bsf
fdivs
test
add
inc
mov
test
mov
pop
add
add
pop
adc
mov
pop
dec
sub
rolb
or
inc
or
jo
stos
das
mov
push
lret
push
push
sub
push
pop
fdivs
loope
add
push
lea
sbb
mov
loopne
mov
add
mov
dec
sub
sarl
dec
mov
out
and
push
add
sub
jg
mov
jo
dec
in
rcrl
xchg
fs
xchg
or
or
jo
in
inc
dec
inc
loope
popf
aaa
dec
cmp
or
and
jo
adc
push
xor
test
xor
fs
mov
xchg
clc
push
jmp
arpl
mov
sbb
xor
pop
ficoml
shrl
xor
push
test
mov
mov
inc
dec
dec
jp
lea
int3
mov
out
lret
or
out
push
jl
adc
call
and
jge
push
clc
lret
pop
in
dec
or
pop
movsl
loopne
inc
fs
test
mov
aam
cmp
jl
inc
sub
or
xorl
pusha
adc
sub
pop
hlt
dec
cld
xor
inc
jnp
sbb
sub
pop
test
pop
pop
stos
sbb
mov
stos
or
loopne
pop
imull
mov
lret
mov
setle
or
xchg
aam
or
or
fadds
mov
imul
cmpsb
mov
or
jo
sbb
or
cmp
ds
adc
fsubrp
add
and
cmp
sysret
inc
push
lret
add
popf
mov
mov
hlt
xchg
cltd
fnsave
shll
cmp
les
mov
testl
xchg
pop
nop
jle
xor
or
stc
int3
je
and
rorl
xlat
ror
adc
mov
add
cmp
add
loope
dec
insb
dec
imul
jo
mov
push
mov
or
jae
push
push
rcrl
into
std
xchg
aam
sbb
sbbl
sub
insb
inc
xchg
pop
push
push
in
aas
pop
adc
into
add
xor
mov
dec
in
nop
imul
mov
in
dec
mov
lods
or
mov
push
gs
mov
push
testl
mov
sbb
test
cmpl
mov
push
rolb
arpl
pop
xor
daa
mov
pop
lods
push
test
mov
in
jge
and
rcrb
push
imul
mov
sahf
test
dec
lds
in
mov
mov
ds
push
les
xor
adc
add
dec
js
arpl
pop
fdiv
inc
in
mov
or
and
push
xor
test
fcoml
dec
push
jbe
push
push
in
in
outsl
inc
fldcw
dec
aaa
sbb
jbe
push
push
dec
inc
mov
shlb
scas
mov
in
shl
add
ret
div
add
pop
xor
pop
insb
adcb
mov
and
mov
mov
and
out
ret
outsl
ret
adc
add
je
or
je
or
dec
imul
sub
xchg
scas
adc
mov
jp
mov
in
test
push
or
add
jl
ret
sbb
lcall
mov
arpl
push
jmp
cmp
adc
bound
mov
adc
pop
adc
sti
scas
movzwl
dec
push
add
push
and
in
adc
cmp
inc
jmp
fcompl
cmp
mov
mov
es
andl
and
adc
bound
shlb
test
call
push
push
or
push
xor
jmp
daa
imul
into
test
addb
and
add
add
add
add
pop
dec
or
loope
push
js
mov
mov
jp
andl
mov
jmp
push
adc
add
inc
push
adc
in
cltd
mov
cmp
or
push
adc
dec
xchg
jnp
sub
jno
jo,pt
ret
in
mov
dec
pop
arpl
inc
or
inc
pop
movsl
jp
push
mov
and
or
push
arpl
pop
adc
mov
add
cld
enter
push
sets
pop
or
or
and
das
stos
sbb
push
sbb
xchg
inc
add
add
or
sti
je
mov
sbb
loopne
push
inc
popf
fidivs
sbb
cmpsb
sub
xchg
inc
call
push
push
push
cmp
ss
cmp
loopne
push
push
sbb
ret
icebp
jbe
add
mov
stos
xor
test
in
xchg
jne
orps
jge
xchg
fsubl
lea
and
pop
and
cmp
mov
dec
out
push
stc
call
les
and
sbb
cltd
and
cmp
mov
cltd
add
inc
mov
ror
inc
jb
mov
call
imul
lock
repz
push
sahf
and
sbb
call
inc
fsub
outsl
push
mov
inc
cmp
pop
jge
scas
je
jle
das
sbb
mov
movsl
sub
jns
in
cmpb
xchg
fcoml
in
xor
add
push
and
imul
dec
mov
int
aam
xor
bound
mov
loopne
push
cmp
fcomp
mov
nop
dec
ljmp
xor
or
idivl
js
sahf
xchg
or
cmp
mov
into
mov
sbb
sahf
rolb
aam
jnp
lock
mov
sbb
cmc
or
sub
loope
fdivrs
jnp
mov
adc
or
add
pusha
xor
and
or
adc
adc
xchg
mov
or
push
dec
ret
roll
push
call
xor
sbb
rorb
push
push
mull
mov
mov
mov
les
add
in
and
imul
movl
xchg
inc
add
jle
addr16
adcl
in
sbb
in
cmp
call
nop
into
data16
mov
push
test
mov
rol
fcoms
push
xchg
xchg
or
daa
orb
pop
sub
es
add
add
je
and
call
or
pop
mov
xor
pop
cld
dec
jns
lods
adc
adc
or
out
sti
mov
add
adc
dec
sub
inc
imul
and
cmp
cmp
xor
jo
xchg
rclb
xchg
lret
imul
mov
add
dec
lds
mov
andl
fs
sahf
ret
fimuls
add
jg
dec
sub
mov
aas
xor
xor
xor
pop
add
add
add
call
push
xor
dec
pop
incl
loopne
cld
mov
mov
iret
decl
sub
xor
push
inc
pop
lock
ret
aam
dec
dec
add
jle
mov
mov
jmp
lods
sbb
shlb
dec
stos
mov
lods
lea
rolb
push
dec
pushf
adc
mov
mov
mov
jecxz
sahf
js
push
sbb
and
daa
add
lds
pop
cmpl
mov
jo
or
adc
lods
push
push
xchg
int3
or
dec
inc
mov
addb
xor
loopne
jg
inc
repz
jae
mov
dec
cmp
popa
cmp
filds
cli
add
cmp
mov
cld
stc
or
adc
out
or
jg
shlb
sub
pusha
outsl
mov
sti
xchg
and
shll
es
ds
add
shl
or
xchg
fstpt
sbb
dec
cld
mov
mov
cs
popa
imul
call
push
movsb
jns
or
adc
fstpt
je
loop
adc
shlb
or
test
popf
xor
outsb
sarb
sbb
sbb
sbb
inc
adc
xchg
jbe
fadds
and
add
ret
or
inc
jecxz
scas
into
cmp
xchg
and
xchg
inc
sbb
add
adc
push
sub
and
pop
outsb
xor
sbb
cmp
or
mov
mov
adc
movb
xor
sub
or
push
adc
mov
jle
adc
stos
hlt
mov
les
je
mov
xor
mov
mov
ss
push
adc
pop
sbb
dec
pop
or
fs
push
push
sub
xor
pop
inc
jbe
loopne
orb
sub
mov
sbb
or
sbb
inc
les
lods
insb
add
hlt
sbb
pop
enter
fisubrs
push
test
or
pop
or
in
aaa
stos
dec
inc
mov
enter
jo
jp
jge
xchg
mov
add
lret
es
add
je
cli
mov
jne
in
test
movsl
cli
call
dec
jmp
in
mov
push
adcb
call
jnp
add
jne
or
adcb
rcll
mov
sub
popf
mov
push
add
push
sub
mov
subl
dec
dec
cli
add
pusha
ja
jmp
or
push
cmp
test
fsubs
pop
and
popa
mov
mov
mov
lcall
dec
cs
or
add
cmp
in
xlat
cmp
fs
sbb
mov
sub
fiadds
or
pop
xchg
add
push
imul
adc
xor
fimull
dec
and
pushf
push
adc
and
fisubrs
stc
xor
adc
adc
push
cld
push
cmp
lods
sbb
test
repz
rcll
push
jmp
jmp
enter
mov
clc
and
push
test
add
sbb
xchg
cmp
push
sub
sbb
sbb
rcrb
xor
rcr
fimull
sahf
je
adc
push
and
pop
mov
add
inc
sbb
mov
fstps
add
pop
push
cltd
inc
add
push
and
daa
orb
add
and
xchg
inc
repnz
jl
push
out
sub
and
and
push
xchg
iret
movsb
or
sbb
lea
or
xchg
rcl
out
jge
fcoml
cmp
dec
sub
or
xor
sub
cmp
inc
adc
cs
leave
xor
pop
push
iret
cmpsb
and
cmp
enter
test
adc
xchg
or
jns
cmp
pop
inc
ret
mov
insb
add
or
loope
add
leave
cwtl
inc
fwait
inc
dec
sahf
xchg
addr16
or
mov
sub
ja
sub
dec
add
sahf
sbb
repnz
sbb
mov
mov
add
inc
dec
dec
in
in
repnz
inc
adc
scas
mov
push
call
and
sub
addr16
mov
rol
mov
jl
sti
and
cmp
adc
repz
pop
test
repnz
mov
xchg
pop
or
ret
dec
push
push
add
xchg
cli
call
mov
dec
adc
push
dec
sub
ror
add
inc
add
or
dec
cmpl
adc
sub
pop
jmp
pushl
sub
inc
movsl
sub
lea
jno
mov
insb
pop
lret
dec
loopne
sbb
or
dec
jo
sbb
mov
push
adc
loopne
inc
add
movsl
push
push
mov
sbb
test
cmpsb
daa
stc
enter
pop
xor
mov
inc
cmp
sbb
rolb
pop
pop
pop
jo
xchg
jae
orb
loopne
sub
jp
orl
rolb
sub
out
jl
loopne
sahf
xchg
inc
mov
out
and
mov
in
push
in
sub
cmpsb
call
xchg
call
cmp
adc
jo
add
cmc
jle
insb
mov
sbb
fdivr
adc
sbb
and
shl
xor
xchg
fdivp
or
jle
xchg
push
inc
and
push
mov
dec
sub
and
adc
fdivr
lock
adc
pop
inc
cs
aas
add
push
pop
adc
or
cmpsb
adc
mov
xchg
add
push
adc
and
push
pop
xchg
mov
sub
dec
xchg
std
push
pusha
add
lcall
jne
insb
aas
jne
pop
mov
dec
popf
cwtl
roll
push
mov
dec
in
mov
insb
lcall
dec
movsb
jecxz
dec
sbb
push
sti
inc
add
rcr
xor
ljmp
std
jg
rorl
mov
push
insl
mov
push
and
fsub
pop
es
pop
mov
jne
adc
pop
dec
mov
in
or
inc
cmp
addb
jnp
push
lock
dec
cmc
je
jae
push
int3
mov
dec
cmp
or
and
mov
add
sub
add
jns
mov
popa
lahf
pop
add
mov
pusha
mov
cmp
out
pushl
mov
push
ficoml
mov
or
lock
fucomp
inc
mov
sbb
out
cmp
jne
add
adc
data16
xor
pop
adc
add
mov
pop
loopne
adc
pusha
mov
fwait
add
inc
jmp
push
fwait
xchg
xchg
sbb
and
aam
fisttpl
or
ret
dec
aam
push
out
dec
xchg
out
loopne
jl
in
jp
and
mov
add
clc
or
call
xchg
popa
rcr
inc
jg
push
mov
insb
sbb
sahf
jmp
sahf
cmp
adc
mov
mov
loope
paddd
call
xchg
and
pusha
cmp
pop
push
inc
adc
xor
jb
jge
sti
jns
xor
out
and
cld
rolb
ret
fs
int
push
test
sbb
mov
xchg
lahf
int
or
loopne
fcompl
add
and
mov
adc
or
add
ljmp
inc
leave
test
push
je
sub
inc
or
ja
pop
daa
test
pop
mov
call
jne
stos
movsl
sarb
lea
fsubr
xchg
xor
sbb
adc
sub
test
lcall
adc
or
mov
lea
or
xchg
popa
jmp
cmp
jns
add
push
dec
jne
adc
sub
pop
test
mov
inc
mov
xor
add
mov
push
xor
push
lods
rorl
and
minps
push
and
ficompl
icebp
sbb
popa
in
movsl
add
jp
imul
inc
jno
dec
xor
test
leave
inc
dec
lds
mov
cld
mov
push
or
sbb
clc
push
add
pop
push
jbe
push
stc
or
inc
xchg
aaa
add
jne
test
dec
in
inc
ds
push
cmp
jo
add
mov
cmp
mov
or
lock
pop
adc
jmp
pop
stc
xor
fcmove
inc
mov
xor
mov
and
mov
shrb
in
jo
pop
shlb
and
mov
xor
sub
xor
pusha
fwait
and
negb
add
imul
inc
mov
xor
push
ds
jmp
xlat
push
or
inc
push
push
push
nop
mov
pop
or
outsl
xor
inc
push
cmp
jb
cmp
pop
dec
jmp
cmp
cmp
pop
std
xor
jg
adc
inc
jmp
xor
pop
aaa
cmp
push
push
dec
jmp
push
push
cmp
mov
andb
inc
into
mov
push
test
addb
jo
add
cmpsb
mov
sbb
ja
andb
testl
and
int3
inc
adc
fdivl
popf
cltd
int3
adc
sahf
push
daa
adc
test
addb
add
adc
adcb
and
pop
add
or
pop
inc
stc
jo
push
push
add
sub
jbe
iret
or
and
mov
xchg
mov
cmpsl
ret
inc
lahf
add
xchg
xor
sbb
push
repz
push
test
sub
leave
mov
movsl
stos
pop
ror
inc
push
rcrb
or
and
mov
mov
movl
sbb
inc
jae
add
sub
ret
pusha
jecxz
scas
add
xchg
jne
in
dec
inc
neg
pop
mov
mov
inc
adc
ret
and
mov
pop
ret
lcall
scas
dec
push
adc
imul
jle
arpl
mov
dec
jp
mov
and
cli
mov
sbb
or
push
pop
sub
and
lods
mov
fisubrl
pop
and
add
cmp
cs
sti
jg
mov
fcoml
shl
mov
lods
icebp
or
and
rol
xchg
aas
dec
dec
sbb
add
dec
jmp
cli
pop
sub
xchg
cmp
js
and
popa
adc
xchg
nop
pop
dec
imul
out
xor
lea
push
pop
mov
rep
mov
pop
cwtl
adcb
in
in
sbb
scas
push
xor
sub
pop
xchg
push
cld
xor
or
mov
push
sbb
sbb
dec
cmp
fisttpll
push
test
mov
rcrl
push
rclb
out
mov
pop
ret
push
mov
or
or
push
test
adc
or
adc
adc
mov
or
add
and
add
dec
sbb
lret
mov
jg
outsl
push
mov
push
imul
add
add
xorl
xchg
loop
pop
or
popa
std
loope
adc
cmp
adc
or
stos
jb
and
add
mov
mov
ret
sub
mov
xor
clc
roll
xchg
testb
movsl
push
std
ljmp
cld
clc
loop
call
adc
sub
lods
lods
rorl
call
rcr
ljmp
clc
lea
mov
dec
add
sub
push
push
sarb
cmp
ret
and
pop
aaa
mov
push
enter
adc
jecxz
imul
dec
or
idivb
pop
pushf
rorl
inc
mov
push
push
inc
or
mov
cmpsl
mov
cmp
cmp
pop
push
xor
movsl
add
lock
sbb
inc
je
lods
jge
fbld
jp
inc
mov
popf
mov
lock
mov
cltd
push
loope
nop
nop
sbb
jb
jo
shl
sbb
push
cmpsb
pop
cmp
mov
nop
push
frstor
cmp
pop
dec
sti
jl
push
imul
push
test
jg
inc
or
sbb
out
mov
or
ret
mov
inc
insl
sbb
jae
jge
xchg
insb
jo
mov
adc
ja
jle
dec
add
jmp
sbb
aas
mov
cmp
sbbl
push
shll
push
xor
add
jb
clc
push
imul
ja
mov
pop
jle
add
sub
pop
xor
xor
cmp
das
das
inc
rorb
dec
inc
sub
and
add
push
daa
jne
lea
push
adc
rolb
rolb
push
jl
jno
inc
add
pop
lods
add
popf
inc
movsl
push
mov
sti
sub
sahf
mov
xor
decl
add
ss
scas
or
ljmp
lods
fimuls
js
add
inc
sbb
sub
fildl
jmp
push
rclb
cmp
mov
stc
iret
fisubs
dec
xlat
mov
xchg
mov
lds
mov
inc
push
push
push
jb
mov
xor
scas
sbb
and
pop
js
js
push
mov
adcb
dec
add
or
in
bound
pop
insb
mov
je
jmp
push
and
xorl
sbb
rorl
test
adc
sbb
call
ret
mov
outsb
js
lret
int3
je
cmp
jae
shlb
adc
orb
loopne
addr16
lahf
adc
cmp
mov
test
jno
dec
sub
or
xchg
sahf
or
push
xor
loope
int3
cmp
mov
inc
daa
pop
cmp
les
sub
inc
data16
add
or
sti
rep
bound
inc
xor
or
adc
lock
rcr
jmp
sub
jae
shl
and
pusha
inc
pop
inc
sbb
sbb
fcoms
andl
and
jg
cld
adc
pop
push
push
push
push
into
dec
lret
or
mov
clc
inc
add
loope
xchg
loopne
adc
xor
movzbl
inc
inc
sub
push
inc
xchg
test
lret
sbbl
add
lods
inc
sbb
testb
inc
add
ljmp
xor
lods
dec
mov
cmp
xor
sub
jle
xor
pop
mov
dec
test
sub
push
sub
cmpsl
orb
inc
hlt
pop
shl
push
dec
mov
mov
jl
pop
dec
mov
cmp
cmp
fwait
and
sarb
ret
pusha
jmp
mov
jl
push
or
push
mov
and
cld
sub
push
inc
add
les
xor
xchg
cmc
dec
add
repnz
adc
cltd
inc
inc
and
mov
jge
inc
rcrb
clc
pop
cmp
inc
fbstp
into
add
lret
jg
xor
loop
in
jnp
pop
adc
push
and
ret
cmp
dec
dec
in
mov
or
dec
dec
insb
sar
lcall
hlt
mov
xchg
orb
mov
push
mov
jno
and
cld
xchg
push
les
adc
mov
testl
sub
pop
inc
pop
int3
mov
push
cmp
push
cmp
bound
xlat
mov
adc
int3
sub
arpl
and
add
test
adc
data16
push
xor
mov
mov
sbb
cmp
cld
loopne
mov
lods
test
push
pusha
push
bound
bnd
shll
add
push
xchg
jo
add
in
push
jp
jg
jmp
jge
je
inc
adc
mov
dec
sbb
testl
sub
pop
mov
jl
subb
gs
push
add
sbb
sub
subb
adc
sbb
pop
mov
push
jg
pop
add
adc
jp
imulb
lock
mov
bound
jo
dec
mov
into
call
push
out
scas
leave
adc
vminss
sub
mov
dec
mov
ljmp
push
add
adc
int3
xchg
add
movsb
or
jge
shrb
lods
jbe
inc
xchg
sbb
jno
sgdtl
push
inc
test
inc
test
adc
push
test
mov
add
jle
loope
or
pushf
pop
or
loope
add
jmp
insl
push
adc
shll
jbe
and
stc
adcl
mov
or
mov
adc
rclb
cmp
je
sub
insb
or
shll
cld
das
lea
shrb
sub
sar
cmp
jbe
jp
jg
or
add
jmp
popa
sbbl
inc
mov
loopne
in
adc
sub
jecxz
loopne
add
jp
mov
add
xchg
sub
or
mov
pop
or
add
jb
enter
mov
and
pop
mov
ja
lea
mov
fdivp
push
push
push
cmpsb
jecxz
fs
dec
or
cmp
andl
add
xchg
pop
gs
pop
scas
pop
clc
jl
pop
in
mov
push
scas
add
lea
lea
mov
mov
push
test
add
or
push
rcrb
inc
sbb
and
shll
aas
inc
xchg
repz
cmpsb
mov
sbb
ja
jmp
push
add
and
lods
mov
enter
pusha
mov
dec
call
add
inc
or
xor
test
pop
int3
aad
xchg
or
push
mov
imulb
pop
dec
ss
arpl
dec
add
fwait
std
cmpsl
jp
jne
sub
lea
jp
cmp
pop
sahf
jl
mov
sub
aad
jae
jb
pushl
aas
or
pop
mov
pop
or
pop
jmp
jo
iret
add
clc
jae
test
adc
in
cltd
mov
ror
arpl
adc
inc
jg
loop
cmpb
pop
in
mov
std
icebp
fisubrl
add
das
jp
push
imul
sub
outsl
dec
xor
jo
mov
and
lock
xchg
xchg
aam
or
sub
lcall
loopne
cmp
inc
stos
imul
sbb
cmp
test
push
scas
adc
and
sbb
daa
or
cmp
mov
or
jbe
cmp
mov
insl
jb
push
mov
mov
out
arpl
ja
mov
nop
and
addr16
enter
fldt
dec
mov
cmp
or
push
sbb
jmp
cmp
dec
pop
adc
mov
and
adc
daa
jecxz
repnz
add
repz
bound
or
xor
push
scas
addb
adc
jb
jnp
fistpll
xor
and
test
sub
popa
xchg
push
adc
push
mov
adc
or
xchg
cli
nop
outsl
subl
shlb
add
lods
shrl
testl
pushf
and
sub
inc
aas
jb
sbb
and
jb
sbb
and
jb
and
jb
sbb
and
sbbb
in
inc
push
jb
daa
sbb
cmp
sbb
dec
sub
cmp
js
xchg
in
iret
in
or
jmp
push
sub
xor
les
scas
sbb
push
inc
push
add
xchg
divb
jne
cmp
pop
xchg
jo
loopne
cmp
dec
jb
sbb
rorb
fs
or
ss
or
pusha
push
out
lods
sbb
inc
push
add
mov
jl
adc
adc
add
add
fisttpll
sbb
adc
daa
imul
xchg
xor
test
and
add
mov
pop
adc
cmp
dec
xor
pop
sub
gs
mov
dec
cmp
cwtl
mov
or
cmp
in
sub
pop
adc
add
in
adc
sub
adc
mov
ja
ja
pop
lcall
push
xor
mov
sti
add
les
adc
ucomiss
fiaddl
xor
adcb
sbb
xor
add
push
cltd
shrl
or
repnz
outsl
icebp
dec
jecxz
adc
cmpsl
addr16
and
ret
dec
or
sbbb
inc
sbb
mov
subl
add
out
xlat
jo
outsl
js
ds
pop
adc
fdecstp
popa
push
shlb
or
insb
movaps
mov
fcomip
push
lahf
insl
pop
movsl
cmp
cmp
pop
pop
cmp
fwait
lock
sbb
mov
sub
pop
or
pop
xor
lcall
sub
dec
xor
call
push
mov
add
out
pusha
mulb
out
je
mov
stos
ljmp
cmc
cmp
js
dec
das
sahf
mov
pop
sahf
xor
mov
cmp
jne
sbb
jb
sbb
sub
sbb
xor
lds
gs
in
je
les
inc
cs
pop
bound
or
lock
push
cmpb
xor
rep
or
nop
rcrb
sbb
xor
scas
sbb
jg
cmp
dec
adc
jmp
cmp
movsl
je
sbb
div
push
mov
adc
lock
shr
sbb
mov
lock
pop
inc
mov
mov
cltd
add
adc
add
dec
cmp
jg
cmp
int
and
sub
dec
adc
in
enter
jae
shrl
xchg
imul
add
add
leave
insl
in
call
out
or
mov
mov
sub
jnp
sub
pop
xchg
xchg
shlb
xor
xchg
dec
or
push
lea
add
loope
dec
mov
lea
mov
out
add
repz
add
pop
xchg
jp
pop
mov
test
cltd
test
push
pop
or
loopne
mov
push
pop
pop
push
test
ljmp
or
cwtl
pushf
or
mov
scas
or
mov
jmp
push
adc
sar
scas
xor
js
jmp
xor
bound
xchg
stc
cmp
adc
loopne
or
push
fistpl
push
popa
mov
sub
movsl
les
hlt
shl
pause
xchg
cld
sbb
add
or
leave
subl
jmp
push
ja
cmp
subl
sarb
and
or
xchg
push
lock
hlt
call
pop
loopne
pop
std
test
in
add
add
or
leave
push
lock
out
loopne
pop
adcb
push
aaa
and
loope
dec
adc
pop
lods
dec
mov
xor
push
lock
mov
mov
and
mov
xor
packssdw
and
mov
push
fwait
add
sti
inc
or
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
addb
aas
lods
mov
fcmovnb
jmp
inc
pop
cmp
mov
fisubs
mov
pop
and
cmp
jl
je,pn
cmp
lock
enter
jne
pop
orb
lcall
iret
jae
mov
mov
xor
mov
sbb
mov
cmp
and
sub
add
iret
xor
fwait
add
inc
jo
mov
mov
add
jp
push
mov
mov
lock
xor
mov
jl
leave
repz
sbb
jl
adc
lcall
rol
mov
jge
jbe
and
sub
mov
jno
movl
or
push
add
sub
sahf
and
sub
fidivrl
push
dec
inc
add
cld
lock
push
add
js
ret
into
pop
rorl
mov
or
push
inc
orb
push
jne
inc
adc
or
aas
js
push
iret
filds
in
imul
mov
ja
add
mov
mov
mov
fst
loope
mov
and
outsb
or
cmp
xchg
pusha
xchg
fcompl
fsubs
mov
xorb
mov
pop
mov
or
nop
rorl
fistps
and
dec
jl
call
insl
mov
xchg
and
sub
jle
and
sbb
cld
or
xchg
fdivs
or
add
fcmove
aas
pop
push
bound
popl
test
icebp
cld
jnp
je
push
jb
fnsave
je
cmp
movsl
inc
pop
adc
cmp
adc
adc
mov
mov
push
mov
inc
sbb
das
sbb
or
pusha
insb
loop
sbb
push
sub
cwtl
ret
scas
or
push
pop
pop
pusha
fdivl
mov
hlt
push
cmp
pop
fwait
push
mov
mov
dec
sbb
adc
rcrb
adc
outsl
push
movsl
mov
es
or
not
out
dec
adc
dec
je
adc
inc
cld
push
jne
push
mov
stos
push
mov
rorl
int3
push
mov
shlb
or
test
mov
mov
scas
imul
aaa
int3
xor
sbb
je
daa
cmp
in
shrl
sub
pop
or
loop
ror
js
std
push
xchg
ret
addb
inc
adc
dec
mov
jle
and
xchg
mov
jno
cmp
xor
lcall
push
sarb
sub
push
fnstsw
sbb
and
push
out
or
fwait
adc
push
cli
jne
mov
pop
repnz
jmp
push
por
sub
test
and
add
and
and
sti
in
pop
xchg
push
push
lahf
push
add
loope
mov
sub
dec
pop
loope
loop
fucomi
jae
cmp
mov
jne
dec
insl
push
mov
or
mov
and
daa
jnp
xor
dec
or
add
shlb
pop
and
jmp
and
daa
adc
sub
ljmp
add
or
sbb
test
jo
pop
xchg
pop
fadds
mov
icebp
or
imul
or
pop
push
dec
mulb
lods
xor
inc
push
aas
or
ljmp
adc
pop
inc
mov
mov
mov
test
je
or
je
lods
sbb
mov
adc
stos
add
pop
push
rolb
pop
jno
mov
inc
jg
pop
test
xchg
cmp
mov
add
and
and
scas
fs
push
jle
test
pop
pop
dec
add
and
jne
leave
in
dec
lcall
movsb
or
push
push
outsb
sub
inc
repnz
mov
sub
add
mov
mull
adc
push
or
fs
inc
int
add
push
lods
add
mov
mov
aam
xor
mov
lret
arpl
mov
and
repz
cmp
inc
jnp
imul
and
inc
jle
xor
pop
outsb
pop
cltd
sbbl
cmp
push
dec
and
rcl
sbb
sar
pop
leave
xor
jmp
or
adcl
ret
jmp
adc
into
inc
push
add
pusha
mov
xor
call
cmp
loopne
std
or
fildll
pop
or
jle
enter
incb
repz
ds
or
add
push
lea
push
loop
xor
mov
in
ret
push
pop
test
push
das
loop
hlt
pop
addr16
cli
xorb
aad
pop
lret
ret
and
push
pop
xor
jg
mov
sub
add
das
test
imul
jns
xchg
orps
or
push
xor
sub
outsb
in
xor
inc
or
lock
push
xchg
stc
sub
xor
decb
xorb
pusha
pop
mov
and
add
jg
mov
push
sub
cmp
push
outsl
jne
mov
lods
pop
pop
out
fiaddl
dec
adc
shrl
mov
clc
add
push
xchg
inc
push
dec
jns
jb
ret
or
xor
push
jmp
sbb
mov
insb
add
testb
mov
data16
fwait
jp
ret
aam
push
xor
xor
dec
sahf
sbb
jbe
push
ljmp
or
mov
and
je
dec
test
push
mov
push
add
cmp
pushf
adc
cs
pop
and
addr16
sbb
popa
mov
jbe
ret
jmp
mov
negb
xchg
adc
out
sub
imul
push
movb
jg
dec
ret
rorl
stc
jmp
mov
loopne
lea
jle
push
or
sbbl
popf
repnz
mov
xchg
push
push
adc
sbb
shr
ljmp
sub
inc
pop
jb
cmp
inc
and
out
lods
jo
xchg
cmp
dec
sbb
push
inc
fnsave
xchg
sbb
insb
test
push
das
jmp
mov
add
mov
incl
mov
dec
sbb
dec
push
dec
pop
test
pop
jle
ret
popa
add
sub
push
mov
sub
inc
je
or
hlt
push
shrb
scas
fsubrs
stos
push
pop
je
fldl
rcll
fstpl
dec
in
and
inc
dec
mov
repz
sub
aaa
adc
adc
jne
push
idiv
cmp
iret
jne
or
jne
or
jne
pusha
mov
repz
scas
leave
inc
lock
dec
scas
push
fldz
into
fstpl
andl
xor
and
je
xchg
fmuls
jle
leave
frstor
mov
iret
and
mov
pop
pusha
fcmovnbe
andl
adc
jecxz
xchg
jno
xchg
scas
mov
mov
sbb
cs
jl
push
out
cld
aad
les
and
jnp
ss
mov
cmp
sbb
enter
dec
jae
in
dec
push
lea
fsts
ficomps
xchg
pop
in
aam
aam
shrl
pusha
adc
loope
pop
and
cmp
dec
loop
or
mov
mov
or
pminub
inc
mov
push
xor
movsb
jne
sbb
and
inc
movsb
mov
jmp
pop
hlt
pusha
pop
je
es
add
push
or
add
push
jmp
insl
mov
outsb
test
fsubl
jbe
pop
sub
add
fcmovbe
sbb
ror
add
es
and
int
imul
sbb
add
add
adc
jle
cmp
mov
enter
or
jmp
push
mov
sub
rclb
dec
leave
lret
push
add
andl
push
fcomps
add
xor
add
push
lcall
adc
xorl
pusha
sub
push
lds
push
filds
or
push
lret
or
sub
loope
push
or
mov
push
outsb
pop
inc
jmp
test
rcrb
inc
xor
lods
push
lea
lods
ja
pusha
mov
add
inc
dec
adc
adc
in
lcall
cmpl
shlb
imul
sbb
lods
subl
xchg
enter
add
xor
or
sbb
leave
enter
push
outsb
or
jo
imul
or
sub
pop
es
icebp
stos
pop
inc
jo
loopne
and
push
lahf
fucom
imul
fs
lods
ja
adc
add
movsb
add
int3
in
in
enter
in
in
mov
testl
test
mov
mov
sub
add
test
aaa
or
lock
popa
test
push
push
jmp
imul
xor
pop
inc
mov
cmp
mov
xor
jecxz
jmp
pusha
or
loopne
inc
dec
cmp
jle
mov
nop
sbb
je
add
xchg
and
scas
cmc
mov
push
push
adc
jle
and
call
je
cmp
pop
rolb
mov
out
pusha
add
add
cs
rolb
nop
data16
add
leave
fisttpl
outsl
rolb
jl
xor
jge
rcl
cmpsl
pop
or
cli
xor
leave
jp
sbb
push
call
loope
or
and
push
push
and
xchg
xchg
cmpl
xor
mov
call
mov
push
mov
cmp
dec
and
or
divl
and
lcall
dec
insl
xchg
sub
push
push
cwtl
mov
scas
test
mov
ret
cmp
lcall
pop
pop
dec
test
insb
add
push
jae
cwtl
or
sub
test
mov
sub
ret
in
shld
cmp
cmpb
insb
lea
sub
xor
adc
pop
orb
jl
xor
dec
movlps
out
jne
xor
jae
cmp
pop
cmp
dec
cmp
add
arpl
loope
mov
mov
mov
xlat
inc
mov
mov
mov
loopne
mov
mov
stc
push
add
add
push
jecxz
cmpb
adc
aam
fs
mov
jle
and
sub
pop
shr
lret
int3
or
cmp
je
xchg
repnz
movsb
in
sbb
sub
add
or
xor
jl
mov
or
mov
push
out
mov
xor
push
and
lods
cmp
xor
pusha
in
jno
sti
daa
jnp
xchg
xchg
out
fmuls
subl
ja
push
jp
stos
push
and
iret
jecxz
push
mov
shlb
iret
fwait
push
pop
fwait
stos
or
pop
outsl
xor
add
sbb
inc
lods
packssdw
xchg
inc
push
mov
jge
sub
adc
mov
dec
cmp
and
xor
lock
push
sub
mov
fstl
jne
ss
add
pop
xchg
addb
mov
or
clc
mov
push
outsb
dec
clc
mov
inc
or
in
stc
inc
fs
or
cwtl
or
push
pop
pushf
mov
mov
js
rorl
call
dec
add
outsl
dec
adc
jb
loopne
adc
xchg
lahf
adc
pop
push
dec
mov
ret
and
pop
js
cmc
pop
push
cmpsl
xchg
jle
jno
add
add
imul
int3
push
or
insl
jno
jmp
inc
add
loopne
sbb
pop
jb
push
bound
adc
in
ret
push
add
lahf
inc
dec
cmpsl
push
mov
lea
xchg
mov
daa
xchg
mov
sub
adc
inc
ret
add
pop
aad
arpl
add
add
cmc
lahf
adc
pusha
test
aad
outsl
inc
orb
lds
lahf
or
mov
sub
aam
pop
lcall
sub
or
pop
push
js
je
scas
push
into
fistpl
in
lock
sub
or
and
jne
out
mov
mov
ja
xchg
int
add
in
addl
stos
xor
pusha
or
adc
aas
adc
xchg
out
cmp
mov
inc
jnp
jle
mov
clc
sub
xchg
cmp
outsl
adc
dec
sbb
test
jp
popf
orb
cmpsl
add
rcrb
push
iret
fstpt
mov
stos
mov
sub
enter
sbb
pop
cmp
arpl
and
and
and
or
aaa
jo
adc
sbb
add
push
popa
repnz
adc
inc
stc
push
mov
or
les
fstp
jns
insl
fnstsw
addb
pop
pushl
pop
add
sub
mov
adc
mov
xchg
ret
lods
cwtl
lock
imul
mov
adc
cmp
mov
loopne
push
add
pop
arpl
aad
xor
sbb
aaa
mov
mov
push
aaa
pop
push
adc
stc
outsb
pushf
push
mov
lock
jg
clc
negb
sub
dec
sub
bound
fldl
jbe
jge
adc
arpl
xchg
mov
add
sbb
loope
test
aam
sbb
arpl
lock
sbb
mov
lret
addr16
sub
push
cmp
sbb
cmp
jnp
addr16
sbb
in
pushf
loopne
ret
push
dec
out
dec
aam
xchg
pop
mov
js
push
addr16
dec
sbbl
push
subl
in
inc
or
lahf
mov
and
les
jl
sub
shl
mov
ljmp
fwait
xchg
jge
negl
push
add
decb
lea
mov
add
mov
mov
jmp
jge
test
iret
inc
test
adcb
push
jmp
pop
lock
cmp
jne
popf
clc
jno
fisubs
push
fimull
and
push
hlt
inc
call
mov
nop
sbb
fcoml
out
jne
inc
cs
cmp
inc
imulb
daa
mov
adc
out
pop
cmpsb
push
add
lcall
in
add
jno
dec
js
hlt
jnp
dec
outsl
outsl
lods
add
dec
add
decb
iret
mov
dec
add
call
es
or
add
push
and
loope
cmp
in
stos
inc
inc
mov
pop
int
inc
and
push
fs
call
push
add
shr
loop
mov
loope
insb
mov
pop
stos
js
jmp
or
pushl
sbb
jmp
in
or
add
add
push
lods
mull
mov
aam
and
dec
std
je
mov
mov
dec
cmp
mov
push
xchg
popa
cmp
sub
movsb
add
or
inc
rolb
mov
add
or
xchg
add
arpl
xchg
enter
dec
rorl
pop
pop
xchg
movsb
jb
pusha
lods
or
cmpb
jo
pop
enter
rorb
pop
jb
xchg
xchg
push
loopne
test
loope
cmpsl
lods
xorb
cmpsb
adc
and
rclb
xchg
push
cmp
in
iret
inc
inc
dec
repz
xchg
dec
push
pop
hlt
mov
adc
sbb
xchg
in
daa
inc
sbb
xorb
add
adc
popf
imul
pusha
sub
pop
lock
mov
mov
and
sbb
cmp
out
and
fwait
xorl
int3
ss
pop
and
leave
inc
jp
and
jmp
mov
dec
inc
aaa
adc
pusha
cmc
aaa
adc
inc
sub
jo
loope
subl
mov
hlt
or
ja
mov
pop
popf
out
test
leave
and
fldl
mov
inc
rcll
sub
mov
and
push
push
xchg
jnp
and
cwtl
addr16
repnz
push
sub
and
insb
shl
in
test
and
and
je
jb
push
or
movsl
jg
inc
icebp
or
out
adc
loope
lret
cmp
and
ret
adc
cmpsb
push
mov
push
adc
xor
shrl
sub
add
xorb
adc
adc
out
movsb
mov
add
inc
mov
outsl
andl
sbb
push
pop
int3
and
repz
insb
sbb
dec
jb
or
mov
xor
je
repnz
shl
pop
imul
adc
cld
adc
stc
adc
imul
inc
add
adc
int
xchg
add
addr16
bnd
mov
adc
jg
and
xor
xor
xor
jmp
push
fs
inc
loop
adc
push
jo
inc
mov
add
dec
loope
xor
and
mov
loopne
sahf
repnz
add
fldt
inc
add
popf
inc
call
and
aam
fsubl
inc
call
test
xor
sub
aam
je
mov
int3
xlat
push
scas
mov
push
xchg
adc
add
outsb
in
jne
xor
aas
je
notb
add
dec
test
mov
icebp
sbb
cmp
push
add
inc
out
push
adc
xchg
mov
xchg
fcos
lock
flds
or
adc
lods
fs
xchg
adcb
push
or
cmp
or
adc
jae
into
sti
enter
xor
out
in
push
hlt
ss
or
loope
fs
and
push
or
enter
mov
mov
in
jecxz
fcomps
mov
out
xor
cmp
jne
lock
arpl
cmp
shrl
test
push
xor
xchg
lock
inc
xchg
rorl
mov
mov
mov
cwtl
sti
cmpb
sub
adc
jle
jbe
push
aaa
test
insb
mov
sti
mov
add
gs
cmp
dec
inc
mov
loope
pop
pushl
and
push
les
popf
mov
fsts
dec
mov
jle
xor
ret
inc
xchg
mov
xor
xor
jp
or
mov
or
dec
inc
clc
dec
dec
shll
stos
push
inc
das
outsb
add
or
xor
fadds
in
jne
incl
pusha
xor
rcll
mov
pop
push
or
inc
mov
jmp
push
add
xor
in
inc
xchg
ret
or
outsl
inc
jge
xor
jg
mov
ret
inc
popa
loop
shll
xchg
or
pop
out
cmp
xor
inc
dec
add
jmp
shll
imul
in
inc
imulb
xor
lods
xchg
test
stc
push
cld
in
imul
stos
test
pop
addps
inc
mov
je
hlt
ror
dec
push
repz
pop
pop
in
mov
stos
or
sbb
and
push
pop
js
xor
mov
add
loop
mov
or
inc
test
add
or
pusha
popf
xchg
int3
sbb
push
adc
add
pop
xchg
mov
insb
inc
arpl
cltd
cmp
cli
add
adc
data16
sti
jo
or
sub
movsb
iret
mov
repnz
imul
in
jmp
imul
movsbl
add
inc
mov
lds
fimull
adc
test
loopne
or
push
cmp
je
cmp
inc
or
or
jnp
sub
cmp
seto
adc
adc
push
mov
jmp
add
mov
push
insl
dec
push
push
and
aas
pushf
push
test
add
or
jne
cmpsb
mov
sub
es
mov
jg
jge
in
jmp
int3
push
xchg
imul
mov
int3
mov
lcall
xor
pop
inc
shl
mov
lret
je
jp
loop
notl
or
mov
xchg
test
xchg
fs
jecxz
jge
push
int3
imul
aaa
imul
pop
jge
pop
or
test
cmp
xchg
les
loop
adc
sbb
push
lret
inc
dec
jns
xor
sub
ja
xchg
pop
jbe
dec
jmp
in
inc
inc
dec
cmp
xchg
mov
clc
aad
and
add
adc
inc
test
mov
dec
insb
in
mov
xor
ds
sbb
jg
shlb
push
push
push
stc
test
gs
dec
xor
pop
daa
cld
push
fildl
in
adc
inc
adc
out
add
or
sbb
lcall
je
sbb
fstpl
popa
push
fstpl
fldl
and
test
je
and
add
or
mov
dec
dec
add
or
sbb
add
xor
and
and
sti
sti
mov
out
sbb
clc
and
insl
clc
push
les
inc
add
ja
mov
sbb
cli
fbstp
dec
and
pop
fsub
pop
fsubrp
scas
sbb
mov
lret
pop
add
push
lahf
inc
cmp
jg
iret
dec
push
pop
add
and
test
dec
mov
or
scas
add
pop
ljmp
mov
dec
je
add
es
data16
insb
xor
mov
dec
xor
inc
sbb
sub
clc
and
dec
cmp
test
sbb
sbb
sub
or
pop
and
sbb
nop
mov
jmp
mov
jl
xchg
jg
push
push
xorb
pop
dec
sahf
iret
je
jne
int3
mov
and
jbe
pop
jns
outsl
es
fcomps
scas
or
sbb
lods
cmp
cmpsb
jb
and
nop
fstpl
das
sbb
xor
add
stc
add
lea
out
stc
repnz
adc
dec
lds
dec
and
lods
cmp
add
push
push
lods
cmp
lret
aas
push
adc
jns
test
lret
push
lock
adc
leave
adcl
and
adc
cmpsb
pusha
mov
in
and
lret
int3
sbb
push
adc
push
rcrl
andb
movaps
pop
ss
pop
push
jecxz
lret
fmuls
out
pop
xchg
dec
sub
xor
add
and
jge
mov
or
and
push
add
out
pop
pop
and
adc
push
or
aaa
insl
sub
lret
dec
xchg
or
pusha
mov
jo
or
addb
xchg
pop
push
fwait
xchg
adc
movsb
and
sub
mov
sbb
int3
and
jge
dec
jbe
or
and
and
push
or
out
xchg
xorl
mov
and
inc
push
es
jns
push
out
outsb
or
lret
pop
and
es
and
shll
daa
xorb
sub
pop
daa
fistps
and
or
dec
imul
push
jge
jns
inc
xor
scas
repz
out
shl
repnz
iret
repz
adc
ss
pop
nop
cmp
repz
mov
aam
jns
out
testb
sbb
cmp
jns
out
pop
insl
jle
sahf
out
sahf
mov
cmc
cmp
sarl
pop
sub
dec
data16
repnz
pop
inc
and
push
ret
addb
mov
jmp
adc
push
add
add
sbb
add
sbb
pusha
imul
inc
push
jp
imul
iret
push
jbe
dec
lock
inc
mov
and
cmp
dec
mov
push
sub
inc
push
addb
mov
lock
in
cltd
fcmovb
add
add
push
cmp
popa
add
xchg
cmp
pop
daa
adc
mov
mov
push
mov
or
sub
jns
fidivl
mov
sbb
pop
loopne
push
pop
js
push
xchg
je
adc
sbb
pusha
dec
imul
int
push
sub
and
add
imul
sub
add
adc
push
rclb
mov
nop
mov
loopne
mov
in
call
xlat
cmp
add
call
add
lods
lds
sbb
push
and
add
aam
leave
adc
sub
add
lock
pop
ljmp
jmp
xchg
in
mov
out
popa
sbb
dec
hlt
mov
jge
jle
xor
icebp
add
mov
jl
pop
sub
add
dec
jle
jo
cmp
push
or
jns
ja
loopne
loope
mov
in
push
push
fs
xchg
pop
add
nop
fstp
mov
sbb
xorl
cmpsb
pop
outsl
in
in
call
mov
sub
push
mov
lock
jg
nop
popl
add
mov
push
out
lock
add
movsb
xchg
shlb
loopne
adc
add
addl
or
add
add
mov
xchg
add
popa
jg
roll
in
xchg
sub
add
or
aaa
jae
adc
inc
push
or
loopne
subb
or
and
pop
add
xchg
inc
push
mov
mov
sub
mov
insb
aaa
dec
ret
sub
js
sub
dec
add
push
cmp
push
or
sub
aad
xor
add
add
sbb
push
in
sub
push
adc
adc
mov
push
push
daa
ret
fsub
dec
mov
cmp
pusha
xor
mov
in
adc
sbb
mov
add
lahf
fs
sub
movl
push
lock
push
lds
push
shrl
xor
add
adc
xchg
push
xchg
or
mov
cmp
dec
pop
mov
call
adc
xor
push
or
jo
popa
inc
sub
icebp
adc
rorl
adc
add
test
cltd
add
jl
add
xchg
cmpb
xchg
cld
sbb
dec
faddl
jne
repnz
push
adc
shlb
mov
sbb
and
or
sbb
dec
mov
xchg
xor
push
ret
call
sub
cwtl
push
cld
adc
test
jg
stos
pusha
jo
jg
ret
mov
popl
adc
mov
mov
andl
shlb
leave
shll
xchg
adcb
imul
imul
pop
cmp
push
sbb
add
xchg
push
std
aad
jne
adc
arpl
push
call
or
push
and
enter
or
add
mov
push
rorl
add
add
or
sbb
pop
test
jmp
pop
sub
call
or
in
scas
adc
push
nop
adc
cwtl
push
scas
cmpb
inc
ss
push
pop
sbb
add
push
in
adc
fwait
pusha
add
stos
xor
and
mov
push
and
in
andb
mov
imul
addl
loop
mov
dec
inc
sahf
and
add
add
add
push
adc
add
xchg
and
push
sub
dec
loopne
cs
fistpll
sub
lds
inc
and
pop
mov
adcl
aaa
cwtl
stos
push
popf
or
push
dec
sbb
or
xchg
aaa
sub
mov
dec
aas
mov
xor
and
pop
inc
or
or
push
xor
cmovp
mov
xchg
lcall
add
xor
insb
and
je
fs
xchg
and
mov
sbbb
mov
cmp
mov
dec
fiaddl
push
and
nop
lods
dec
sub
js
xchg
bound
mov
inc
pop
adc
mov
add
out
mov
daa
cmc
jno
push
cmpb
andb
mov
sbb
or
lods
in
cmp
or
and
out
mov
mov
in
addr16
dec
movsb
xchg
mov
cmp
add
mov
pop
adc
insb
adc
daa
sti
dec
shll
test
test
mov
add
mov
pusha
sbb
arpl
jb
fwait
lods
gs
shlb
and
imul
ret
imul
lret
mov
mov
sbb
lea
jo
aam
mov
adc
jno
sub
fstpt
jne
fldl
jo
adc
int
fsubl
iret
push
jbe
mov
fldl
or
lret
loope
and
add
movsb
adc
sub
add
cmp
adc
push
loope
push
jl
push
mov
push
push
stos
rcrl
adc
nop
sub
mov
decb
test
and
pop
inc
pusha
xchg
ss
xlat
test
cwtl
dec
cwtl
jnp
or
testl
mov
sbb
fists
inc
jl
sbb
push
les
xor
inc
jne
in
lret
dec
js
and
pop
mov
inc
jb
dec
pop
and
and
add
testb
mov
inc
sbb
jl
sbb
or
mov
inc
sub
aad
stc
cpuid
out
movsb
sub
loopne
into
and
stos
xor
fadds
gs
popf
test
add
mov
ret
adc
push
pop
pop
adc
and
cmp
cmpsl
and
pushf
mov
xchg
add
or
push
pop
aam
hlt
sub
icebp
push
mov
push
or
stos
cmp
int
call
sub
lret
pop
call
leave
adc
rorl
cmp
xor
xlat
xor
add
adc
stc
mov
xchg
pcmpeqd
xor
outsb
mov
xor
sub
cmp
mov
or
shr
and
cli
inc
jl
or
sbb
popa
jp
ljmp
int
adc
cmp
cmp
je
mov
mov
push
add
inc
cli
iret
adc
jmp
movb
mov
push
cltd
pop
idiv
aam
push
or
cmpsl
inc
xchg
stos
mov
xor
xchg
daa
mov
push
jno
sbb
enter
lcall
dec
push
push
push
test
mov
stos
mov
mov
mov
cmp
shr
add
sbb
dec
or
dec
inc
xchg
jl
xchg
push
lock
incb
xchg
in
sbb
add
iret
iret
in
stc
cmp
mov
dec
pop
push
sub
cmp
pop
mov
fidivs
hlt
push
cmp
push
in
aaa
add
movl
js
enter
pop
data16
iret
mov
in
push
fldcw
dec
rcrb
xor
mov
sbb
adc
mov
or
adcb
inc
in
ljmp
push
fsubrs
sbb
dec
ds
into
sub
test
or
popf
mov
mov
or
sub
repnz
and
insb
out
pop
and
mov
sahf
dec
pminsw
dec
xlat
mov
adc
ret
adc
jmp
adc
sbb
push
push
lods
adc
mov
pop
inc
pusha
cmp
sbb
pusha
insl
xlat
popa
insl
inc
push
push
pop
fdivrs
pop
xchg
push
xlat
mov
daa
mov
cmp
in
js
daa
push
fldl
iret
sbb
pop
jns
cs
push
imul
or
jle
sbb
push
pusha
sub
ja
lods
cld
fs
push
push
insb
or
fbld
and
js
sbb
sbb
xorl
jns
jnp
enter
push
push
in
sub
pop
dec
imul
and
and
cmp
and
pusha
jae
shrb
shr
mov
xchg
pop
sbb
mov
and
dec
mov
leave
inc
loopne
test
push
in
nop
and
notb
mov
mov
push
ja
and
icebp
es
icebp
mov
fimull
daa
jns
fwait
cld
rclb
push
insl
sub
push
testb
inc
in
inc
ficoml
fisubs
cltd
test
mov
dec
cwtl
dec
nop
cmp
andb
jns
leave
adc
xchg
dec
jo
in
in
lods
shld
test
gs
int3
dec
in
push
adc
ret
in
sbb
dec
sub
ja
icebp
lret
push
jbe
lock
push
add
or
adc
sub
negb
cmpsl
mov
in
mov
mov
sbb
jp,pn
outsb
mov
das
inc
jo
ret
sti
xchg
dec
jb
fadds
push
rolb
or
mov
xor
mov
xor
and
movsb
fcompl
sbb
data16
add
fmull
jp
scas
fildl
or
push
mov
mov
scas
xchg
in
fbstp
and
popa
add
mov
mov
adc
inc
mov
dec
test
mov
pop
add
nopl
scas
dec
cmp
fwait
in
push
enter
pop
mov
add
test
cli
pop
xor
xchg
cmc
add
sti
roll
and
jae
daa
or
add
add
add
push
cmp
push
or
test
push
stc
or
add
mov
mov
rol
repz
cli
lcall
mov
sbb
xor
xchg
pop
dec
mov
adc
sub
dec
mov
mov
push
xchg
inc
or
xchg
fmulp
sub
and
scas
cmp
cmp
mov
jnp
or
aas
hlt
es
fs
add
fsubr
and
sub
sbb
addb
inc
mov
adc
movsl
push
sbb
push
jecxz
add
pushf
fstl
mov
int
rolb
neg
sub
inc
roll
push
mov
inc
ss
mov
jle
and
xchg
es
and
lret
cmp
mov
js
sbb
xchg
sub
test
sahf
cld
push
adcb
popf
nop
mov
pushf
add
dec
je
xor
das
ja
xor
je
lods
xchg
cmc
sub
inc
sbb
sarb
fs
inc
push
outsl
pop
and
xchg
or
push
dec
daa
mov
or
movsb
and
rorl
push
sbb
sub
lds
mov
jmp
mov
mov
inc
push
sbb
adc
cmp
cmp
push
push
xchg
dec
cli
push
cmp
add
out
and
jg
xchg
cmpsb
xorl
int3
push
xlat
les
stos
pop
aas
or
call
loope
loopne
or
or
cmp
jge
jl
iret
lods
mov
pop
adc
ja
fcomps
cmp
sub
sub
xchg
pop
test
adc
push
jge
int3
movsbl
sub
adc
cmpsb
clc
jge
and
dec
insb
xchg
fsubl
sahf
les
push
outsl
hlt
push
cmp
aam
repnz
in
stos
push
xchg
int3
cmp
cli
dec
fwait
sbb
mov
xor
rorl
call
jns
push
call
inc
loopne
xor
jbe
xor
inc
pop
test
sbb
imul
or
call
pop
sub
or
or
rcrl
and
insl
add
mov
in
or
or
mov
pop
xor
sbb
call
mov
inc
xor
andnps
addr16
fidivl
cmp
loopne
imul
sbb
jl
cli
scas
mov
push
or
pop
out
es
add
mov
movsb
xor
inc
repnz
sub
out
sbb
in
push
xor
jecxz
cltd
pop
iret
push
repnz
loopne
inc
pop
jns
xor
stos
dec
cmc
ret
jmp
cli
lcall
js
int3
or
mov
gs
add
or
and
sbb
xor
sub
ds
add
push
cwtl
add
xor
clc
into
sbb
adcl
adc
pushl
mov
or
loope
mov
xor
lea
xchg
call
mov
popf
fwait
xor
scas
push
pop
fcoms
pop
sbb
add
scas
fcomp
iret
mov
orl
sub
adc
mov
push
in
cmp
xor
push
xchg
cmp
push
xchg
call
fs
dec
das
sub
cmp
shr
loop
mov
mov
cmp
xor
les
mov
loopne
inc
cmp
mov
rclb
out
jmp
ds
or
ds
pop
push
or
pop
pop
and
add
call
dec
cmp
add
cmp
int
xchg
loopne
and
shrl
int3
daa
in
inc
fildl
xor
fiadds
jmp
pop
out
int
jl
popf
mov
adc
stos
jb
rorb
jp
rorl
sub
insb
cmp
pop
cmp
in
cmp
dec
cmp
sub
pop
cmp
sub
jns
lret
pop
cmp
adc
dec
stc
or
inc
imul
test
push
push
in
dec
cmp
andl
sarl
je
stc
stos
daa
push
xor
es
cmpsl
push
jmp
or
cmp
xchg
push
lret
jge
push
add
push
pop
pop
std
mov
adc
cli
adc
hlt
add
jle
iret
aaa
mov
test
jecxz
cld
aas
xchg
mov
cmp
dec
xor
call
add
push
lahf
push
mov
and
push
jl
in
syscall
lret
arpl
dec
lret
sbb
lods
add
add
bound
popa
lcall
dec
ret
sarb
adc
pop
rcll
dec
inc
mov
iret
and
sbb
jle
call
jo
movsl
jne
sub
pop
adc
jmp
iret
xchg
push
lods
lods
sbb
fstpl
lock
and
loopne
mov
add
jo
and
rcrl
mov
call
cld
mov
dec
adc
cmp
xor
xchg
or
ret
jne
cmp
repnz
divl
add
cs
in
or
xchg
xchg
pop
sub
mov
or
mov
xor
xchg
push
rolb
mov
jno
or
or
xchg
sub
jl
xchg
sub
push
sbb
pop
sti
in
adc
mov
lea
sarb
inc
div
scas
push
mov
cwtl
push
push
test
js
aam
push
jno
and
testb
stos
jno
aam
inc
inc
dec
fsubr
cmp
or
dec
in
mov
cli
cmp
pop
and
push
mov
aad
dec
aam
push
cmp
and
lock
or
pop
push
lea
cmpsb
lcall
jno
xor
loop
push
lods
push
and
sbb
enter
or
mov
js
mov
lea
fstpl
push
or
loop
ss
inc
mov
xor
or
push
lods
add
out
cwtl
adc
fisttpll
cmpl
jnp
ds
adc
mov
mov
dec
push
pop
sub
daa
push
xor
sbb
jo
daa
or
pop
mov
mov
in
cld
adc
push
shl
push
movaps
xchg
xor
sbb
inc
push
jbe
sbb
add
fwait
lsl
mov
mov
aas
pop
lret
xchg
mov
out
imul
push
loope
mov
cmp
decb
add
push
cltd
jb
or
xor
adc
das
or
cli
ss
out
fistpll
add
push
cmp
and
or
addl
fcoms
xor
push
dec
sbb
adc
aam
ds
jge
sub
mov
cmp
jae
mov
dec
test
aam
mov
pop
rcrl
inc
mov
jmp
fists
sub
lret
sub
mov
pop
jne
and
jnp
add
push
fsubl
mov
xor
mov
push
pop
sub
lahf
pop
pop
fwait
sbb
dec
or
cmpsl
xor
mov
inc
push
jae
and
popf
movsl
push
and
dec
push
inc
add
ret
scas
cmp
arpl
leave
loope
xchg
inc
push
jno
adc
push
cmp
iret
ret
push
sbb
mov
mov
lea
mov
out
inc
idiv
pop
pop
push
fbld
loope
pop
add
sub
pop
mov
xchg
push
mov
ljmp
mov
jns
sub
inc
pop
jp
cmp
sub
mov
xor
cmp
sub
popa
pusha
dec
xor
xlat
push
xchg
or
and
push
inc
or
add
mov
cmp
xlat
in
and
xchg
out
dec
cmp
dec
dec
out
mov
inc
loop
cmp
xchg
cmp
cmp
jne
orb
sahf
clc
push
rorb
adc
ret
xchg
rorl
movsb
cmp
push
push
xor
dec
jno
out
inc
inc
adc
rcl
dec
leave
and
inc
and
mov
rcr
xlat
fnsave
test
xor
mov
inc
and
jne
or
xor
sbb
cmp
inc
sub
xor
sub
enter
sbb
inc
push
in
int
lcall
xor
iret
inc
roll
xchg
pop
pop
add
cmpsb
fimull
add
das
loope
test
lret
or
pop
push
mov
add
cmp
cltd
lods
cmovo
insb
cmp
mov
loopne
js
popf
pop
and
lock
add
mov
movsl
fistl
sbb
mov
lock
mov
or
lret
push
or
je
out
inc
rclb
cmpsl
or
or
mov
add
add
sbb
imul
pop
or
fs
push
mov
les
jne
movsbl
push
aam
push
and
dec
sub
rcrb
xchg
notb
add
cmpl
fisttpl
and
xor
or
jnp
ret
or
or
hlt
xor
icebp
insb
pop
icebp
xor
jae
loopne
insb
or
inc
enter
inc
lea
inc
dec
pop
or
push
dec
pop
sahf
and
and
into
and
or
xor
test
nop
or
sub
cmp
insb
fwait
jmp
push
inc
push
scas
pop
repnz
and
frstor
cmp
es
cmpsb
mov
xchg
add
inc
add
iret
xor
jb
adc
rorb
xor
or
adc
mov
test
mov
add
mov
enter
adc
cmp
sbb
fbld
inc
lods
imul
fwait
je
inc
mov
jo
jl
punpckhbw
sub
push
dec
sbb
xchg
mov
adc
adc
inc
in
jo
adc
jae
mov
in
lret
sbb
dec
xchg
add
scas
inc
or
sti
es
push
inc
sbb
xchg
andl
pusha
orl
lahf
add
push
or
xor
mov
push
add
push
cmp
aam
fidivrs
xor
adc
test
sbb
xor
xorl
inc
sub
das
imul
or
mov
mov
mov
push
pop
xchg
sub
dec
sub
sub
ja
inc
inc
dec
fistpll
jbe
ret
sarb
sub
push
and
rcrb
xor
adc
adc
xor
push
cmpsl
movsl
and
jp
adc
mov
mov
xchg
or
scas
push
pusha
call
iret
sub
ja
cmpsl
and
xchg
add
movsl
and
lret
les
sub
test
add
les
test
and
pop
cmp
pop
clc
lret
dec
test
mov
and
shl
push
or
xchg
outsl
push
dec
repnz
ja
add
ret
sub
popf
int3
arpl
lods
push
dec
mull
leave
sbb
sbb
inc
mov
mov
mov
sbb
push
sub
daa
push
arpl
clc
push
mov
popf
or
imul
jl
in
add
sysret
lods
push
push
push
mov
pop
movsl
xor
add
sub
lock
add
outsl
test
sbb
inc
or
sbb
cmc
sub
add
lods
adc
mov
lods
pop
and
in
insb
out
xchg
sbb
dec
pop
fwait
rclb
sub
inc
adc
inc
push
adc
dec
mov
mov
les
add
nop
mov
and
and
in
add
or
in
xor
sbbb
dec
test
orl
mov
and
adc
stos
mov
test
out
mov
stc
push
add
xchg
dec
jmp
jl
lock
push
bound
cs
push
mov
pop
cmp
ret
gs
mov
add
or
adcb
add
rolb
sub
push
subl
stos
add
mov
loopne
push
add
movsl
lock
jno
xor
inc
jns
dec
push
jne
push
ret
fs
mov
add
int3
add
sub
xor
pop
dec
lret
lods
cld
mov
std
add
lods
leave
je
pop
or
or
cld
mov
addb
das
das
sbb
push
add
cmp
fdivrl
xor
push
inc
xlat
stos
add
shrl
xchg
gs
add
push
out
mov
and
bound
incl
lock
xor
out
scas
xchg
sbb
cmpsb
dec
adc
mov
or
inc
cmp
pop
aam
cmp
icebp
sbb
jbe
scas
andb
push
in
inc
add
out
or
push
inc
decl
leave
xchg
rorl
adc
aad
nop
or
ds
cmp
or
adc
rcrb
push
sti
out
pop
push
mov
clc
sbb
xchg
cld
inc
lock
jg
sbb
dec
aaa
and
mov
adc
mov
addr16
adc
dec
inc
mov
push
les
add
pop
push
add
dec
pop
maskmovq
imull
stc
imul
cmp
jge
add
and
mov
cld
pop
daa
cmpsl
add
bound
sti
add
stos
js
cmp
cmp
mov
test
sub
dec
popa
push
or
xchg
pop
insb
sahf
dec
in
cmp
jb
jmp
xchg
cmp
push
pop
add
xor
outsb
add
movsl
dec
jl
jne
mov
mov
mov
pop
test
mov
pushf
add
out
enter
loopne
invlpg
xor
cmp
mov
daa
xorb
lock
lods
pop
sbb
add
add
sbb
pop
mov
add
cmpsb
enter
movsb
movsl
jmp
or
jne
inc
push
sbb
test
enter
dec
mov
in
shlb
push
add
inc
sbb
andl
xor
and
or
add
adc
inc
fmuls
mov
popa
and
pop
rcrb
les
and
inc
cmp
xchg
loopne
std
cs
sub
ret
pop
inc
pop
adc
lods
inc
mull
addb
loop
cs
lock
cld
and
mov
pop
add
xchg
call
bound
mov
adc
mov
or
xor
xor
shr
dec
mov
push
dec
or
mov
pop
scas
add
push
push
hlt
mov
mov
inc
pop
insl
sub
sahf
push
dec
add
xor
push
pop
sub
push
dec
sub
mov
shrb
xchg
or
pop
dec
sbb
cmp
jge
jecxz,pt
add
test
push
push
mov
aad
jns
les
into
in
dec
mov
xchg
faddl
lea
stos
mov
movsl
push
sti
hlt
push
sbb
mov
sub
add
pop
rclb
cltd
ret
mov
dec
inc
lea
movsl
cmp
adc
std
and
cmpb
xor
inc
mov
test
les
jmp
outsb
sbb
pop
inc
adc
dec
gs
cmpl
ret
testb
pushl
mov
jmp
popa
fwait
jo
sbb
dec
ret
arpl
popf
inc
or
nop
call
nop
push
inc
dec
dec
xor
dec
lea
aam
cmpsl
jbe
add
pop
insb
cmp
popa
push
lea
xchg
dec
add
loope
xor
iret
insl
clc
pop
mov
add
inc
jmp
pushl
add
and
dec
jl
or
fadd
inc
sbb
enter
inc
push
aas
movsl
test
in
pop
pop
cmp
or
xorb
fisubrs
sub
push
xchg
rclb
mov
adc
xchg
or
test
add
xor
xchg
aas
push
scas
or
sub
adc
ret
addl
cmp
xchg
mov
pop
inc
movb
jecxz
mov
loopne
xor
popf
iret
mov
xor
inc
jmp
add
xor
call
and
out
ljmp
adc
insb
xor
inc
icebp
jnp
dec
and
sub
mov
dec
adc
leave
xor
stos
push
imul
fdivl
push
adc
ret
push
or
cld
cmc
ljmp
mov
cmp
or
ficoms
ss
mov
js
adcb
daa
icebp
sub
aad
in
dec
loope
test
jl
pushl
ljmp
pop
nop
inc
and
or
movsb
fdivl
xchg
into
xor
sbb
mov
outsl
and
in
mov
add
push
mov
push
out
push
push
inc
mov
das
pop
divps
ss
popf
pop
xor
jbe
push
cmp
repz
add
sbb
movsb
mov
imul
add
adc
lods
cmpsl
push
loopne
daa
and
loop
adc
dec
add
sbb
sub
inc
pop
xor
push
mov
add
add
fwait
and
or
rcrb
and
bound
adc
mov
mov
loopne
outsl
movsl
inc
sub
addb
push
push
sub
dec
out
push
or
in
in
jmp
push
test
mov
out
in
add
push
imul
out
push
inc
lock
lret
fbstp
sub
filds
cld
pop
mov
stos
xorl
incl
push
cmp
shrb
or
push
mov
ljmp
sbb
xor
orb
negb
adc
pop
xor
adc
inc
out
cmpl
ficoml
es
pop
jmp
pop
sbb
add
mov
add
ret
scas
dec
mov
fs
pop
clc
pushl
push
push
leave
adc
lcall
sub
cltd
repz
fiaddl
dec
pop
pop
and
push
dec
movsl
fs
fldt
int3
adc
adcb
xchg
adc
lea
mov
bswap
push
pop
and
fldl
lcall
add
or
push
xchg
cmp
add
movsb
fstpt
adc
add
adc
or
adc
pop
sarb
push
lock
pop
rol
lret
dec
imul
xchg
lock
push
and
jl
xchg
adc
mov
leave
subl
mov
rcll
mov
adc
push
or
aam
push
ret
push
jo
leave
sbb
loopne
xor
in
lret
adc
clc
mov
fstpt
adc
inc
cs
and
insl
ret
cmc
xor
mov
addb
xor
arpl
pop
push
out
cmpsl
mov
jle
icebp
adc
mov
xchg
into
xchg
aam
sbb
adc
cmpsl
cltd
jge
and
cmp
jne
dec
dec
mov
push
push
push
xchg
in
lods
inc
repz
ret
loopne
ja
and
ret
push
jb
xor
iret
nop
pusha
orl
cmpl
inc
mov
inc
mov
mov
inc
sbb
in
pop
lahf
not
lcall
jae
or
loope
test
orl
adc
cmp
out
stos
xchg
fiaddl
les
or
mov
jno
orb
or
mov
add
movsl
out
jbe
inc
mov
pop
cmp
gs
andl
push
rorl
dec
add
jnp
leave
mov
sub
jecxz
dec
movb
adcb
int
mov
cmpsl
push
adc
cmc
xchg
stos
mov
insl
lock
stos
and
ret
adc
push
lock
xor
bound
cmpsl
andl
cmp
sbb
dec
jne
and
mov
add
nop
jle
mov
je
pop
push
ss
xchg
jmp
adc
cmp
adcb
and
or
cmp
mov
mov
dec
rcrb
popf
aaa
mov
mov
jmp
mov
add
iret
pop
dec
mov
cmpsl
std
cmp
jmp
ss
pop
inc
cmp
inc
sbb
sub
mov
or
or
ja
push
push
mov
test
lcall
adc
xor
pop
test
jle
xor
pop
mov
xchg
pop
test
repnz
int
inc
lahf
jp
mov
pop
sbb
pop
inc
inc
je
ljmp
sbb
push
mov
or
fwait
cmp
cli
dec
push
pusha
pop
pushl
mov
lds
insb
xor
das
adc
inc
shl
xor
push
rcll
jbe
or
cmp
rol
bound
lret
cmp
mov
addl
popf
or
jns
mov
jb
xor
lds
mov
aaa
jae
push
and
adc
or
jno
dec
mov
push
in
stos
popa
mov
clc
mov
add
push
les
loop
xor
jmp
add
and
ja
add
add
sbb
adc
sti
pusha
es
xchg
xchg
mov
adc
pop
clc
jne
loopne
fs
add
rcr
add
cmp
jnp
jge
push
and
cltd
push
cmpsl
in
mov
mov
xchg
clc
cmp
shll
and
cmp
mov
mov
xchg
ret
sbb
shll
int3
sbb
in
ret
xor
aas
or
cmp
pop
adc
subl
jecxz
cld
dec
push
sbb
push
xor
pop
inc
adc
scas
sarb
cwtl
subb
clc
xlat
or
mov
push
imul
xchg
orl
in
imul
fidivrl
sarb
sub
or
lods
les
xor
or
add
or
push
jp
test
leave
sbbl
push
shlb
sub
add
adc
jb
das
movsb
aam
int
mov
add
les
ret
inc
inc
push
lea
jnp
push
dec
push
setno
stos
sbb
popa
adc
sarb
orb
data16
rclb
xchg
cli
add
cmc
xchg
mov
andb
dec
daa
lock
cmp
mov
push
xchg
cmp
in
popf
mov
or
mov
push
jge
enter
sub
jbe
mov
out
out
jb
call
adc
in
mov
lahf
rolb
js
sarb
jo
xchg
enter
in
or
test
or
insl
push
add
shl
shl
aad
idivl
fmul
pop
dec
adc
xor
int
jbe
cli
mov
adc
adc
insl
scas
add
cmp
out
cmp
shr
fldt
pop
jp
adc
pop
cmp
lea
pop
andl
sbb
pushf
mov
lret
mov
add
fidivrl
jle
mov
fldt
jns
push
cmp
in
adc
adc
in
add
or
add
and
sbb
jle
inc
cmp
or
add
test
cld
sbb
push
loop
hlt
or
cmp
mov
add
scas
xor
inc
sbb
pop
ret
fistpl
stc
sbb
sub
es
xchg
fisubrs
pop
cmp
das
sbbb
aaa
js
lods
jle
pop
mov
sti
gs
jmp
movsl
push
cld
adc
push
movsb
mov
std
jmp
or
mov
shr
mov
inc
jle
mov
adc
movb
sbb
sub
pop
jne
dec
dec
in
push
and
addr16
idivl
lret
add
movsbl
xor
mov
pusha
sbb
call
in
cmpsb
or
and
mov
paddb
push
test
and
sbb
cmpsb
push
movsb
cli
dec
xchg
jecxz
adc
jge
mov
inc
daa
add
jo
jl
outsl
test
imul
sbb
pusha
and
insl
test
scas
or
fs
or
mov
or
mov
mov
cmp
pushf
mov
xor
mov
or
sbb
push
mov
ret
mov
mov
push
mov
cmp
aad
xor
mov
lock
mov
rclb
clc
dec
sahf
sbb
inc
in
addb
jecxz
jecxz
mov
imul
cmp
cmp
add
push
pop
fdivrl
cmp
or
or
jnp
or
jbe
fmull
jno
jmp
push
jmp
por
fcoml
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
sbb
and
pop
pop
jmp
and
or
jmp
and
fbstp
pop
push
cmp
push
mov
add
mov
mov
inc
or
jnp
dec
sbb
pop
arpl
cmp
repz
orl
fwait
mov
cmp
repz
mov
cmp
repz
fsub
out
repz
jmp
cmc
cli
incl
out
lcall
mov
fidivl
add
mov
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
jb
or
gs
adc
jle
cli
adc
sub
or
jecxz
test
repnz
bound
jmp
mov
jle
mov
insb
dec
ret
fstpt
pop
test
sti
add
pop
mov
js
xor
inc
addl
rorl
ja
imul
icebp
add
push
dec
or
call
sbb
sub
cld
outsb
inc
mov
xchg
inc
inc
movsb
push
inc
cmp
jbe
lods
adc
inc
fidivrs
sbb
add
mov
into
mov
enter
jge
sbb
rol
loop
lcall
mov
or
mov
mov
loope
jb
ret
lock
inc
cli
sub
lock
push
dec
lahf
add
inc
mov
sbb
sbb
mov
or
sub
push
sub
jp
rorb
movsl
popf
and
fmuls
sbb
lret
sub
push
sub
stos
test
push
enter
adc
cmp
test
dec
scas
loope
sub
cld
inc
fwait
and
incb
cmp
push
sub
sahf
je
mov
dec
test
add
sbb
add
add
hlt
jo
push
jmp
mov
pop
xor
add
dec
call
fistpll
jne
mov
mov
pop
cwtl
out
sbb
inc
mov
adc
mov
test
mov
xchg
int3
dec
inc
dec
jb
mov
call
insb
loopne
mov
push
pop
xor
loopne
in
xorl
push
mov
mov
dec
psadbw
push
ss
sub
and
pushf
xlat
sbbl
jne
or
add
movsb
push
jne
push
ss
push
sbb
cmp
mov
loopne
mov
push
jne
inc
inc
and
lock
xor
jmp
scas
add
adc
fnsave
sbb
sub
in
push
aam
pop
insb
jmp
inc
pop
les
roll
movsb
pop
es
loopne
sbb
dec
loope
adc
or
mov
adc
dec
inc
sbb
and
pop
adc
adc
and
shlb
mov
cld
push
mov
je
dec
xchg
je
xchg
lock
push
xchg
inc
xor
fstl
pop
or
adc
out
popf
and
or
lods
and
sub
sub
or
xlat
adc
adc
mov
pop
pop
inc
dec
ror
xor
push
inc
inc
bound
lret
test
ja
adc
mov
add
add
fbld
jo
popl
das
push
je
push
mov
add
roll
add
roll
mov
push
inc
inc
cmp
or
sbb
lods
xchg
ds
shlb
outsl
adc
mov
cmp
movsb
mov
mov
mov
mov
or
add
or
in
inc
sbb
das
cmp
inc
jecxz
dec
ljmp
xchg
xchg
inc
pop
push
pusha
inc
lcall
inc
sub
loop
es
loop
push
inc
and
push
dec
out
inc
add
mov
mov
cmpsb
dec
enter
xorl
shl
ror
stos
xchg
enter
mov
xchg
mov
incl
fcoml
sarl
imul
mov
loopne
stos
mov
xor
adc
test
fstp
mov
push
add
sbb
xor
das
pop
cmp
jne
lods
jo
mov
loopne
sbb
test
sbb
dec
dec
cmp
xchg
push
and
lods
inc
mov
sub
xchg
xchg
dec
fsubs
dec
xor
incb
fdivl
push
add
bnd
nop
cld
mov
mov
loopne
cmp
jo
adc
mov
sub
enter
sbb
sbb
or
and
loopne
shl
push
dec
leave
xchg
and
testl
enter
and
loopne
add
add
ret
negl
mov
and
add
inc
mov
les
mov
mov
stos
mov
setbe
cltd
push
or
add
je
push
sub
add
cmp
inc
movsb
push
cmp
adc
pop
fwait
push
mov
xor
flds
and
add
fmuls
mov
jl
sub
and
in
xchg
and
pop
jns
rcrb
test
ret
add
das
jmp
mov
and
adc
adc
pop
loopne
outsl
pop
jle
cmp
inc
imul
arpl
js
pusha
adc
sub
test
mov
push
test
shl
push
add
add
roll
fidivs
movsl
adc
faddl
loope
add
ret
push
in
jmp
pusha
adc
subl
lea
fisttpll
push
idivb
sub
in
add
push
arpl
gs
inc
and
inc
xor
stos
test
clc
sbb
ljmp
nop
frstor
inc
sub
or
add
add
addr16
popa
lret
pop
dec
mov
push
call
sbb
je
in
jmp
add
outsl
push
xorb
or
cmp
sbb
add
push
pushf
and
fsubr
dec
push
int
mov
cmpsl
xor
pop
jmp
ljmp
bnd
jl
push
xor
insb
jle
xchg
sub
push
or
jge
cmp
jne
pop
jmp
cmp
je
pop
inc
push
mov
inc
dec
adc
fidivrl
cmp
push
jns
adc
cmp
jl
mov
dec
gs
dec
pop
jl
sub
lock
sbb
push
add
pop
repnz
in
or
hlt
call
rclb
lds
pop
sub
jbe
dec
xor
mov
fildl
adc
cltd
jne
mov
add
push
cmp
and
or
jns
int
test
mov
push
lods
mov
fistl
movsl
rcrb
fisttps
cmp
push
movsb
mov
sbbl
movsb
adc
pushf
lcall
sbb
xor
push
pop
sub
push
and
or
xchg
sbb
ret
push
and
and
sahf
and
sbb
mov
or
jp
push
or
inc
mov
lcall
addb
sub
xor
xor
inc
xchg
ret
xchg
or
repnz
sbb
xchg
xchg
lret
xor
cmp
xacquire
xor
sbb
xor
lret
leave
and
nop
add
or
mov
and
xchg
adc
cmp
fsubs
push
or
sub
in
div
dec
adc
or
ds
inc
ret
js
loop
adc
inc
push
enter
pop
inc
pusha
inc
fs
aaa
dec
ja
push
aas
dec
push
cmp
je
jl
lods
dec
rcrb
addb
sub
add
in
out
inc
xchg
lahf
cwtl
sub
fists
jmp
movsb
pop
test
pop
mov
xchg
push
es
mov
dec
call
adc
jae
xchg
loopne
das
loop
sub
setge
cmpb
loop
in
add
lea
xor
mov
test
xchg
ret
in
iretw
insl
and
xchg
je
push
mov
and
and
jle
mov
push
cmp
jl
sub
dec
sahf
repnz
push
outsb
dec
js
lea
out
inc
push
or
sbbl
fistpl
test
fisttps
out
dec
mov
lods
sub
inc
and
mov
sarb
xchg
pop
testb
cmp
pop
jl
jmp
out
push
clc
add
cmp
sbb
icebp
mov
sti
cmp
je
popa
addr16
shlb
jge
and
in
imul
loope
in
pop
jmp
rcrl
mov
mov
and
in
rcll
int3
andb
or
xchg
insb
je
popl
mov
dec
mov
loopne
int
sbb
push
fwait
push
xor
mov
mov
in
or
call
adc
popa
jmp
add
xor
js
and
push
pop
cmp
add
xor
int3
aas
movsb
sbbb
jle
es
fstpt
add
std
mov
push
push
fistpl
sbb
mov
decb
sbb
repnz
dec
xchg
call
jle
mov
pop
fistpl
inc
mov
pop
sub
aam
pushf
push
and
jg
insb
adc
mov
and
js
add
pop
jne
push
inc
pop
inc
push
cwtl
sub
sete
cltd
push
jne
and
pushf
push
mov
mov
add
add
xor
add
clc
cmp
jne
mov
ljmp
inc
test
xchg
push
xlat
in
mov
mov
and
mov
js
xor
and
add
pop
ja
adc
push
cmpsb
sbbb
cmp
or
dec
call
loopne
outsb
aam
clc
lods
les
test
pop
push
xchg
xchg
pop
pop
xchg
adc
out
jmp
mov
dec
adc
scas
sub
or
popa
cmp
jbe
sbb
push
jnp
lods
adc
jno
ds
jge
ss
mov
adc
rolb
sub
inc
das
and
je
pop
mov
push
xor
clc
test
aas
jne
push
adc
adc
imul
jns
lcall
add
popa
movsb
out
dec
inc
pop
call
loopne
mov
add
in
insl
js
sub
mov
ss
push
push
imul
ja
imul
add
inc
fld
sbb
mov
mov
rolb
jmp
add
sub
outsl
shlb
loop
push
cmp
or
int
or
jmp
inc
addl
push
pop
cmp
jne
sub
clc
inc
pop
jnp
stc
lea
rcll
xor
shll
push
or
add
push
and
and
jnp
rorb
push
ss
ljmp
push
les
test
inc
mov
cltd
pusha
lods
ljmp
pop
mov
or
push
les
xlat
loope
pusha
jecxz
adc
cmp
add
dec
mov
scas
or
xor
inc
repnz
lods
sbb
loopne
add
push
xor
sbb
add
adc
push
mov
popa
cmpsl
adc
data16
dec
popa
loopne
push
and
inc
jp
cs
loopne
inc
xchg
jle
jne
mov
mov
mov
adc
add
orb
add
inc
xor
cld
sbb
lea
fadd
shl
cmpb
xor
hlt
jmp
lods
jmp
sbb
dec
hlt
or
mov
mov
cwtl
jb
add
push
dec
inc
loopne
sub
or
clc
les
push
xchg
and
push
jmp
push
push
lcall
fmulp
fidivs
in
xor
mov
dec
mov
xor
inc
xchg
scas
jle
or
dec
dec
xchg
popf
sbbb
sbb
pop
pop
test
xchg
icebp
jno
add
imull
sbb
mov
sbb
inc
sub
icebp
cmp
pop
sbb
cmp
fmuls
jg
outsb
and
add
mov
inc
dec
insl
insb
ss
jne
jl
jp
pop
mov
push
sbb
mov
mov
inc
push
xlat
push
add
sub
add
sbb
jle
lcall
sub
mov
scas
xchg
sub
andb
test
inc
add
repz
dec
mov
aam
insb
pusha
repnz
adc
lret
or
xor
sbb
mov
and
inc
shll
and
mov
push
out
push
lret
jmp
loopne
hlt
sbb
test
inc
pop
sahf
push
lea
adc
and
mov
in
push
in
jle
push
lds
push
fistpll
rolb
adc
mov
outsl
in
sahf
jnp
xor
add
repnz
xchg
popa
sub
push
cmp
jl
add
push
add
and
pop
and
adc
push
pop
or
clc
xor
xchg
imul
dec
adc
or
or
push
pop
subb
or
adc
incl
fstl
fldz
fcomp
fnstsw
ret
das
lock
push
sbb
int3
pop
fsubr
pop
faddp
je
push
jmp
and
add
jmp
and
loopew
hlt
xor
rclb
sub
mov
inc
jo
fs
lock
lock
fidivrl
dec
xchg
and
xchg
hlt
rcr
je
subb
or
xor
inc
push
or
push
jge
and
pop
mov
sub
add
mov
mov
fistpl
dec
mov
fldl
mov
in
add
bound
sbb
push
lret
cmp
ss
mov
xchg
imul
mov
pop
imul
cmp
call
and
fldl
jl
push
in
loope
dec
outsl
ljmp
sub
push
mov
int
mov
adc
aas
in
fimuls
enter
lods
xor
repz
int3
loopne
in
cltd
xorl
xchg
add
outsb
xor
push
ret
ss
mov
stc
adc
or
pop
nop
add
mov
push
sbb
mov
lcall
mov
arpl
rorl
adc
pop
adc
sbb
clc
and
cltd
aam
add
jmp
mov
mov
jg
jo
cltd
add
ret
mov
test
aad
lods
jne
sbb
or
icebp
pop
rclb
jo
sub
push
or
mov
mov
pop
push
cmp
push
loopne
and
push
inc
in
das
test
lret
inc
mov
lret
xchg
rcr
sub
sti
ss
cmpsb
fdivr
mov
fdivrp
add
or
aaa
add
xchg
push
loopne
dec
scas
dec
jb
mov
push
cmp
dec
pop
dec
in
mov
cmp
xlat
scas
mov
pop
sub
inc
or
dec
lret
int
jb
adc
or
or
add
mov
inc
xor
lods
adc
mov
fmuls
sub
lds
decb
mov
orb
sub
movsb
fsts
das
sbb
jo
and
icebp
and
add
test
xor
jne
je
in
add
inc
ret
dec
add
inc
in
mov
mov
mov
jb
fisttpl
je
pop
and
and
in
lods
test
add
jge
jno
arpl
and
fstps
xor
imul
in
loope
mov
inc
pop
push
test
xchg
push
dec
jl
emms
movsl
je
jge
cmp
jne
js
mov
cmpsb
cmpsl
jo
mov
lods
adc
add
in
cmpsl
sahf
outsb
or
mov
push
push
or
adc
sub
imul
add
popa
call
xchg
mov
aad
insl
xorl
xor
fwait
clc
cs
push
jmp
shll
adc
sub
or
add
sbb
in
mov
inc
xchg
lahf
scas
in
fnsave
hlt
sub
sbb
pop
mov
sub
test
je
rcl
aam
add
xchg
mov
cmpsb
loope
xor
fxch
pop
lret
sbb
inc
sub
add
pop
and
repz
or
in
sbb
cmp
jb
mov
jnp
mov
nop
inc
add
pop
jbe
mov
inc
dec
push
dec
aas
inc
pop
out
imul
jecxz
dec
notb
shl
imul
push
mov
test
push
lds
push
dec
adc
push
push
or
pop
dec
and
or
mov
sbb
cltd
dec
jmp
stos
or
cld
daa
jp
andl
or
inc
gs
into
sub
cwtl
rclb
inc
cmp
pop
insb
push
mov
xchg
sbb
dec
loop
pop
adcb
daa
mov
push
sbbb
sbb
or
or
or
aaa
inc
push
imul
hlt
je
and
push
mov
int3
dec
add
mov
cmp
mov
push
lret
mov
sbb
shlb
jl
mov
mov
pop
aas
in
and
lds
mov
cmp
mov
cwtl
add
pop
and
sub
sbb
xchg
xchg
imul
sahf
inc
int
enter
lock
push
xor
vmread
mov
lock
mov
add
mov
push
add
aad
and
bswap
jmp
dec
mov
rep
jae
push
xor
repz
orb
pop
pop
and
mov
ret
add
mov
adc
aam
lea
cld
add
lock
popa
xchg
pop
lock
into
ror
imul
xchg
dec
adc
repz
or
push
frstor
mov
sbb
cli
pop
fs
adc
hlt
aad
sbb
fadds
imul
add
add
in
je
test
cmc
sub
mov
push
mov
or
lds
sub
adc
in
adc
sbb
pop
push
call
arpl
inc
add
cmp
lock
adc
push
add
and
pop
and
add
or
aam
sahf
xorl
mov
xor
dec
add
pop
pop
mov
fmuls
pop
imul
inc
stos
hlt
xor
test
adc
push
fisubs
xchg
jge
dec
cmp
sub
adc
sub
cmp
imul
shll
mov
mov
cmpb
push
arpl
sub
xor
je
sub
pop
inc
in
movsb
xchg
ret
loopne
dec
daa
push
push
jl
push
sub
sbb
mov
dec
les
daa
rolb
mov
imul
daa
ljmp
inc
sbb
shlb
and
addb
add
xchg
push
add
lds
int3
xor
dec
rcrb
sbb
add
out
scas
sbb
push
pop
and
pop
shlb
inc
inc
add
push
dec
xchg
adc
adc
push
lcall
addl
pop
push
or
mov
lock
dec
jae
or
popa
inc
and
mov
jbe
scas
inc
rclb
mov
dec
mov
add
loope
daa
call
push
arpl
jecxz
mov
mov
mov
push
dec
sub
mov
les
sbb
mov
add
pop
xor
ds
dec
in
mov
push
mov
pop
rolb
pushl
add
in
xchg
loope
pop
loopne
adc
mov
pushf
mov
cmp
enter
push
add
in
add
or
addr16
pop
jmp
mov
out
inc
pop
xor
inc
jle
adc
jmp
or
clc
xor
xchg
mov
hlt
nop
das
loopne
je
inc
or
bound
inc
jmp
mov
push
fcoms
bound
out
movsb
dec
push
jp
in
fmuls
push
xchg
test
mov
adc
xor
add
pusha
aam
jmp
rcrb
mov
addr16
sub
mov
mov
pop
xchg
adc
pusha
sub
pop
or
mov
les
or
idivb
or
mov
shr
or
sbb
mov
add
pusha
pop
hlt
or
sub
fisttpll
pop
or
adc
sbb
repnz
cmp
iret
mov
push
adc
lahf
push
adc
adc
sbb
sbb
inc
cwtl
and
jge
imul
add
addr16
into
sub
test
mov
inc
aad
inc
test
xchg
in
pop
movsb
je
push
cmp
mov
add
mov
pop
mov
pop
push
xor
aam
add
mov
outsl
leave
orb
pusha
pop
xchg
roll
xor
adc
and
stos
xor
addb
pop
pop
sbb
dec
push
and
cmp
daa
xor
pop
nop
and
mov
jo
dec
mov
inc
cmpb
jmp
inc
dec
js
inc
pop
adc
jg
sub
xchg
adc
mov
push
jae
ret
push
xor
or
dec
or
cwtl
lock
test
xor
add
ficomps
jl
lds
add
push
add
xchg
lcall
jb
cld
pop
push
out
aad
cmpsl
es
add
inc
test
push
xchg
inc
dec
stos
sub
cmp
sbb
adc
xlat
mov
pop
adc
movsb
lcall
movsl
sub
and
out
jle
and
adc
sub
cwtl
mov
jne
pushl
sub
inc
push
test
cli
inc
arpl
jne
insb
sub
fsubs
sub
push
cwtl
xor
mov
sub
es
loopne
xor
aas
cmp
test
bound
das
movsb
aam
adc
bound
loopne
dec
shlb
dec
push
push
sub
push
je
push
sub
xchg
jbe
call
js
ljmp
push
cmc
mov
gs
cmpsb
xor
add
mov
clc
rolb
mov
lock
mov
xlat
mov
add
lcall
sub
xchg
dec
mov
in
inc
pushf
xchg
mov
aam
call
mov
sub
adc
mov
addb
or
pop
es
dec
adc
cmp
fldt
mov
push
repnz
lods
xchg
sub
mov
dec
jmp
sub
insb
cmp
out
bound
xor
and
jl
sub
cmp
dec
mov
add
ret
and
jns
test
movsb
jne
addr16
stos
jne
xor
filds
pavgw
sbb
icebp
mov
incb
dec
add
push
xorl
add
or
or
push
mov
fcmovnb
rcrb
mov
push
lahf
mov
sub
push
mov
sub
or
scas
or
ss
test
lods
and
push
imul
and
mov
and
xchg
cmpsb
lret
adc
fwait
add
orb
out
hlt
rorb
push
loopne
cmp
cmp
add
sbb
je
addr16
mov
or
je
ret
mov
in
push
jne
mov
inc
xorb
jnp
add
mov
clc
add
jo
xor
push
nop
popf
fcmovb
lahf
mov
xchg
or
lods
enter
xchg
jo
lods
lret
mov
js
test
jge
mov
mov
push
out
lea
fcomp
call
lea
stc
pop
jl
push
xchg
das
bound
or
sti
fwait
sub
inc
movsl
aad
cmp
lock
adc
inc
or
or
push
mov
cs
nop
popa
add
cmp
xchg
xor
fmuls
popf
mov
inc
lcall
cmp
sti
mov
adc
aaa
lea
adc
not
pushf
mov
add
inc
add
mov
add
test
push
mov
shrb
and
loope
inc
sti
cmp
sbb
xchg
push
dec
mov
adc
aaa
mov
test
lock
pushl
cmpb
adc
es
test
cmpsl
sbb
sbb
cmp
push
xor
push
mov
mov
aam
adc
dec
or
adcb
dec
ret
leave
divb
jl
mov
mov
or
iret
imul
or
es
adc
ja
push
lcall
xchg
xor
mov
pop
or
inc
or
xchg
fs
jmp
and
and
xchg
cld
cld
or
rep
mov
jge
mov
sbb
adc
jl
and
and
lock
or
push
add
jnp
call
stos
xchg
mov
popa
out
das
add
xchg
pop
jns
adc
xor
and
popf
xlat
je
popa
cltd
test
ja
lea
or
arpl
enter
js
loop
inc
xor
mov
push
mov
nop
je
cs
pop
inc
pop
cmp
jg
pop
jl
data16
loop
sbb
mov
sub
adc
add
push
imul
jge
dec
mov
pop
push
testl
pop
inc
sbb
jns
sbbl
in
mov
test
mov
and
mov
dec
mov
pop
push
pop
inc
mov
push
cmc
fisubl
sub
jb
mov
sub
and
fcoml
xchg
jmp
jns
gs
ljmp
sti
mov
shlb
fnstcw
cs
or
in
mov
hlt
mov
inc
dec
lea
xorb
in
adc
or
inc
xchg
adc
jbe
pop
cli
inc
out
outsl
lds
pop
test
add
xchg
fdivs
lret
and
push
push
inc
sub
cs
jmp
pop
mov
jp
icebp
mov
mov
add
mov
sbb
test
xor
pop
out
sbb
and
push
inc
dec
jno
adc
jo
ja
js
inc
bound
jnp
lret
daa
xor
mov
jl
es
push
popa
add
test
test
dec
iret
cli
or
mov
loop
mov
jo
xchg
add
repz
imul
repnz
cmp
je
enter
xor
inc
and
rolb
dec
cmp
add
in
adc
lods
add
fcmovbe
mov
mov
pop
pop
pusha
mov
sub
addl
and
les
mov
sub
icebp
push
jnp
xchg
push
jecxz
sub
jle
inc
jo
pop
xor
loope
pushf
pusha
pop
out
push
hlt
pop
cmp
dec
jl
nop
jne
fmull
test
sbb
cmp
insb
cltd
adc
imul
dec
movsb
pop
dec
mov
dec
mov
loopne
sub
sbb
and
fisubs
repnz
sbb
arpl
or
add
xchg
jnp
push
mov
cmp
xchg
adc
data16
xchg
dec
btr
dec
xchg
or
add
push
iret
pop
or
xchg
sbb
xor
pop
mov
fnstcw
lcall
sbb
xor
add
sbb
lret
pop
jb
xor
xor
cmp
divl
movb
pop
mov
ficoml
int3
adc
sub
hlt
test
pop
hlt
xchg
cs
inc
clc
lock
ret
push
mov
fldl
push
push
or
sub
add
mov
xor
jg
mov
add
or
sub
mov
inc
insb
lea
ja
ja
cmpsl
mov
or
pop
adc
xor
fwait
nop
out
dec
hlt
cmp
jge
fwait
add
test
sahf
jne
mov
pop
inc
sarb
ror
push
imul
jg
stos
je
push
cmp
jne
inc
inc
jmp
pushf
push
fisubrs
and
lea
aas
cmp
add
dec
fbstp
lds
sub
xor
mov
rolb
xlat
ret
repnz
or
adc
shl
jne
mov
aam
cmpsb
jmp
arpl
in
push
push
hlt
sub
dec
mov
in
lock
cmpsl
dec
je
out
pushf
movsb
add
jecxz
xchg
and
push
bound
test
fstl
jae
pop
pop
in
mov
push
fsubl
imul
shr
or
cmp
xchg
movsb
adc
mov
mov
int
xchg
inc
imul
xorb
inc
mov
fwait
sub
push
lods
mov
aas
sub
fstpl
out
orb
jmp
add
push
mov
fcoml
cmp
jmp
enter
fs
cmp
adc
add
inc
jo
pop
inc
inc
daa
cltd
push
shll
test
mov
push
sbb
mov
dec
clc
or
je
pop
add
inc
pop
jl
add
sub
mov
ljmp
mov
pop
cs
loope
or
sbb
xor
jmp
push
cmc
push
mov
rclb
pop
pop
fdivl
sbb
push
push
mov
xchg
dec
out
test
xor
or
movsl
dec
and
hlt
mov
xchg
in
shl
gs
into
pop
add
mov
mov
inc
pop
adc
inc
cmp
dec
cwtl
and
das
call
sti
add
xchg
lcall
jl
std
add
jo
xchg
xchg
xchg
jne
cmp
mov
jbe
lods
dec
repnz
in
dec
add
xchg
add
fs
fsts
stos
sbbl
shrb
sub
and
xor
xchg
mov
cmc
ds
ret
setne
and
xchg
in
mov
pushf
jl
je
loope
xchg
cmpsb
push
jne
fldenv
dec
xor
xlat
fdivl
test
dec
imul
dec
pop
cmp
jl
push
jle
mov
sub
jo
cmp
or
int3
mov
fxch
mov
or
fiaddl
outsl
test
and
je
out
test
sub
ficomps
cltd
push
fcmovu
xchg
push
mov
jl
jge
and
push
sbbl
jle
fcomps
jo
adc
test
inc
jle
test
out
push
jmp
cltd
lea
mov
shll
in
add
insb
outsl
push
mov
mov
pop
inc
pop
mov
in
cmp
js
jl
mov
xchg
aad
push
lock
out
xchg
shlb
cli
jno
or
shr
xor
adc
roll
lods
mov
cld
lahf
mov
pop
lea
test
add
xor
call
add
aaa
jmp
mov
cld
add
mov
xchg
cmp
pop
or
add
inc
push
adc
loope
out
adc
test
dec
inc
push
dec
add
add
pusha
shrl
xor
pusha
inc
rorl
mov
push
inc
adc
sbb
xor
mov
push
mov
mov
push
push
in
pop
sbb
mov
nop
add
push
test
dec
and
inc
imul
sbb
shlb
cmpsb
push
dec
scas
mov
jne
icebp
push
test
or
jb
addb
xchg
dec
add
inc
inc
aad
aas
scas
fmull
mov
scas
add
mov
or
fsts
sbb
movsb
cmovbe
cmp
test
mov
es
jnp
push
fs
daa
lcall
cmc
sbb
adc
je
adc
in
inc
loopne
dec
repnz
cld
dec
mov
psubusb
lods
and
sub
cmp
push
push
pop
scas
or
and
add
or
push
mov
loop
pushf
and
inc
cmp
mov
inc
dec
push
push
add
xchg
lea
or
ret
data16
int3
and
adc
arpl
xor
sub
pop
rcll
xchg
rcr
push
sbb
add
jge
add
push
popf
xchg
ds
cld
push
add
push
push
lods
jmp
push
jmp
sbb
movsb
mov
cmp
sub
mov
mov
sbb
int3
mov
sub
pushf
fnstcw
scas
add
imul
sub
test
push
xor
mov
add
cmp
push
ljmp
and
dec
pusha
or
aas
jns
push
mov
mov
add
jmp
mov
aaa
lock
icebp
or
add
js
dec
add
sbb
aaa
out
mov
inc
dec
push
adc
cli
add
xorl
sub
pop
xor
adc
mov
jne
mov
dec
mov
ficoml
cmpl
adc
je
aas
xchg
fs
insb
arpl
mov
enter
mov
dec
adc
add
insl
lea
dec
inc
inc
insb
in
popf
and
mov
sar
jmp
fldt
stos
daa
inc
pop
jmp
mov
movsb
adc
insb
mov
addr16
sub
cmp
orl
mov
dec
mov
fsubrs
add
adc
pop
adc
lods
ret
add
dec
mov
sub
sbb
cmp
or
add
bnd
sahf
add
addr16
mov
aaa
test
xchg
dec
pop
push
mov
xchg
add
or
push
ret
or
xchg
js
mov
push
inc
push
popf
orb
pop
ficomps
iret
and
push
inc
mov
fsubs
adc
xor
pop
mov
inc
stos
and
cmp
jp
sub
jmp
dec
pop
add
mov
andl
clc
mov
mov
pop
movsb
sbb
sahf
xchg
pop
imul
inc
not
cmp
sahf
leave
cmpb
ret
daa
pop
mov
cmpsl
xor
imul
insb
insl
jb
mov
lret
daa
jl
sub
xchg
cltd
dec
lret
or
xor
fisubl
sub
test
sbb
fnsave
les
cmp
jmp
test
mov
loopne
lea
mov
xor
mov
andb
int3
hlt
jge
add
push
sub
test
stos
pop
adc
loopne
inc
jne
cmp
call
cld
loop
push
pop
lods
lahf
mov
adc
pop
mov
rolb
push
faddl
fldcw
adc
aam
dec
test
call
sarb
cmp
daa
rorb
sbb
jne
push
stc
lods
fs
push
stos
push
pop
outsb
dec
add
add
sub
lods
xlat
and
mov
insb
scas
dec
sahf
or
add
shrl
pop
add
mov
xor
clc
scas
add
fistl
scas
mov
xchg
sahf
in
pop
mov
call
movsl
sti
lods
call
sbb
test
add
push
adc
ret
jmp
mov
push
mov
jbe
cmp
outsl
adc
stc
cmp
fs
outsb
iret
aas
jl
mov
cmp
inc
jmp
sub
push
xchg
push
popa
xchg
aas
ljmp
inc
and
sahf
mov
jmp
or
and
add
jne
pop
hlt
dec
call
pop
out
xchg
ret
cmpsl
shl
loope
imul
adc
rolb
out
cs
mov
lds
out
xchg
stos
subl
inc
or
aaa
js
cmp
xchg
mov
lahf
dec
cld
leave
xchg
or
ret
push
or
sub
xor
call
mov
xor
mov
loopne
mov
add
cmp
xchg
inc
repnz
mov
adc
sbb
xchg
inc
add
test
ret
fcoms
stos
imul
sub
js
mov
jmp
mov
dec
je
jns
push
jg
imul
cmp
pop
mov
inc
jmp
inc
daa
in
int3
aad
mov
pop
iret
inc
aam
js
loope
shrl
sbb
nop
push
mov
push
pop
stc
push
fisubrl
or
rorb
mov
push
out
pop
pop
inc
dec
mov
dec
dec
add
pop
imull
push
lret
fstpl
xchg
inc
and
pop
dec
pop
call
lods
fwait
sbb
cmpsl
mov
loopne
mov
je
and
orb
or
test
ja
inc
adc
adc
push
loope
push
rcrb
xchg
inc
test
ds
cmc
xor
adc
jp
jno
movsl
cmc
sub
lods
enter
add
and
in
jb
dec
dec
nop
nop
adc
cmp
filds
fsubrs
xchg
insb
ret
call
js
push
add
adc
or
les
subb
adc
dec
iret
nop
pop
sbb
sub
mov
test
xchg
add
mov
push
aam
inc
addr16
jno
mov
es
push
add
push
fistl
fdivrp
mov
lret
cmp
push
sub
push
add
inc
inc
jmp
aas
adc
or
loopne
lret
and
or
lahf
xchg
jle
mov
dec
jo
das
mov
cmp
add
scas
xor
je
or
negb
int3
jne
mov
and
gs
and
add
in
pop
xor
mov
add
pop
imul
push
repnz
lsl
iret
adc
xchg
cs
mov
adc
js
inc
decl
inc
adc
fldcw
dec
jl
xchg
loop
cmp
jns
loope
jmp
pop
push
or
cmp
lret
and
dec
adc
clc
cmp
push
bound
or
jo
mov
xor
sbb
add
mov
lods
test
sub
test
mov
inc
pop
imul
loopne
mov
push
push
dec
mov
pop
ds
ret
pusha
sbb
mov
rcrb
and
push
sbb
loop
xchg
js
inc
jl
ss
adc
nop
dec
add
rcr
gs
stos
push
pop
sbb
mov
pop
loope
mov
jmp
in
sarl
mov
add
roll
push
movsb
inc
sub
push
hlt
add
leave
cs
push
sub
and
int3
in
dec
add
nop
data16
xor
repz
repnz
pop
pop
movsl
and
mov
mov
pop
push
and
out
add
movb
xchg
test
jmp
push
or
fsubs
xor
lods
into
pop
inc
mov
mov
pushf
sbb
add
and
shufps
xor
xlat
loopne
or
pop
cmp
cli
addr16
outsl
jmp
hlt
xor
icebp
dec
jg
mov
test
mov
add
adc
pusha
adc
mov
or
and
dec
stos
xchg
lds
cwtl
ret
data16
lods
cmpsb
jne
in
inc
test
pop
clc
rcrl
xchg
inc
mov
stc
mov
mov
ror
push
mov
lcall
in
out
ja
outsl
push
push
jo
orb
aas
pop
roll
inc
cmpsb
jbe
imul
adc
jbe
mov
sbbl
mov
or
in
push
pushl
stos
pop
push
sbbb
jbe
sbbb
dec
ror
push
out
jl
push
in
addl
xor
enter
or
enter
push
add
je
push
test
mov
xlat
gs
push
jl
push
or
xchg
or
dec
adc
cltd
mov
shlb
push
xchg
aam
jmp
inc
loop
lods
jb
adc
js
cmpsb
adc
and
mov
sub
roll
shl
adc
push
mov
pusha
mov
mov
push
xor
in
add
adc
push
push
das
push
push
stc
pusha
or
in
rolb
and
clc
xchg
mov
mov
and
cmpsl
inc
pop
call
cmp
cmp
push
add
push
and
inc
adc
push
or
inc
sub
dec
sub
data16
add
cmp
dec
out
outsl
xor
pop
int3
call
dec
inc
nop
lods
mov
ret
add
mov
call
scas
jmp
fsts
ss
inc
mov
mov
push
fstl
xchg
aad
push
or
or
xchg
ret
xor
loopne
les
xchg
inc
int3
into
sbb
adc
scas
into
dec
push
lea
lea
test
es
nop
push
push
mov
cmp
dec
ffreep
aam
sbb
insb
ss
mov
mov
loopne
sbb
out
sbb
push
dec
sub
mov
mov
push
cmc
imul
sbb
fnstsw
dec
in
pop
mov
jl
in
adc
mov
stos
add
data16
mov
fwait
lods
sbb
mov
hlt
dec
cmc
ret
insb
notb
mov
xchg
mov
push
in
add
test
test
cltd
es
adc
mov
es
push
mov
add
test
addb
add
add
add
add
cmp
orb
xchg
mov
test
add
xchg
or
pop
cmp
das
pop
xchg
dec
fldt
jo
pop
adc
incl
xor
out
xor
pusha
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
dec
adc
incb
js
add
mov
mov
popf
out
push
fs
or
jae
or
and
not
and
xor
add
add
aam
sub
add
mov
stos
or
cwtl
repnz
cli
fisubrs
testl
cli
and
and
xchg
push
aaa
adc
rcl
sbb
xor
xchg
fs
movsl
rcrb
mov
fisttpll
push
or
xlat
ret
push
rol
rcl
add
add
add
imul
in
aam
call
push
xor
sub
ljmp
rol
rol
out
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
punpckldq
sbb
adc
add
adc
mov
pop
aaa
mov
shll
cs
lcall
loopne
loopne
dec
in
imul
xor
loopne
cmp
and
cmp
aam
mov
pusha
xor
xor
mov
cmp
push
mov
aam
add
in
push
xor
and
and
imul
or
lods
mov
xor
mov
add
adc
rolb
es
inc
xchg
sub
push
jo
ficoms
rcr
mov
mov
add
pop
pop
cmp
adc
push
loop
mov
add
add
xor
fadds
pop
jbe
call
imul
fisubl
add
insb
jp
push
and
mov
add
push
cmp
test
clc
popa
jle
cmp
inc
mov
adc
mov
xchg
clc
and
popf
push
jo
cli
stos
adcb
aam
aaa
cmp
lcall
call
in
cmp
or
add
mov
and
jge
rclb
shlb
rorb
shll
sub
dec
loopne
add
xor
xchg
cld
jo
add
push
nop
add
sahf
dec
push
and
and
rorb
dec
xor
mov
jb
dec
push
adc
dec
shll
dec
cmp
add
and
push
push
pop
and
inc
stos
fs
push
pop
xchg
out
stos
mov
push
add
xchg
aaa
xadd
or
xor
pop
push
pop
add
pop
test
lret
adc
inc
pusha
pop
adc
xchg
movsl
mov
mov
or
mov
rolb
dec
sahf
push
push
sbb
sarl
cld
adc
dec
push
dec
dec
dec
icebp
stc
ljmp
fsts
xor
xchg
inc
mov
or
dec
add
adc
adc
sbb
fwait
mov
loopne
or
and
add
and
add
sti
lret
and
mov
aas
pop
add
sub
mov
lock
inc
adc
lret
jb
pop
adc
pop
lea
mov
pop
inc
bound
cld
sub
lea
aad
cmp
cmp
mov
sub
sarb
add
add
rorb
or
or
mov
adc
test
aad
int3
inc
jae
mov
mov
mov
sub
inc
xor
aad
adc
add
sub
sub
pop
jge
xchg
out
mov
ret
dec
or
mov
daa
push
pop
mov
aam
add
jg
or
mov
jl
sub
mov
jnp
mov
cmp
jbe
or
add
jno
fs
mov
lea
sub
jae
push
pop
fadds
inc
dec
mov
rep
or
mov
ljmp
mov
dec
pusha
outsl
pop
loopne
ror
mov
testl
mov
adc
or
mov
xchg
mov
test
mov
xor
loop
mov
sbb
sbb
daa
in
or
ja
adc
inc
add
push
icebp
or
in
xchg
loop
adc
mov
push
inc
sub
dec
sbb
mov
pop
shlb
pop
pop
pop
pop
pop
xchg
scas
addb
sub
xor
mov
mov
xor
orl
inc
or
pop
movsl
test
push
stos
and
add
or
sub
ja
rcll
loopne
cwtl
lods
int3
outsb
ljmp
fcmovb
mul
movsb
addr16
or
addb
jnp
mov
inc
dec
sarb
sub
add
dec
sub
in
jb
dec
insb
fs
push
push
mov
ja
outsb
mov
sti
dec
mov
adc
adc
push
xchg
ret
lcall
inc
fimull
lods
sti
jns
pusha
ljmp
add
sub
dec
inc
shll
and
dec
inc
xchg
xor
inc
dec
pop
ret
orb
or
dec
call
and
sub
inc
mov
adc
cmpsb
inc
jno
mov
cmp
enter
pop
les
data16
andl
inc
adc
out
pusha
outsb
ret
adc
adc
cmp
or
loop
inc
cmp
sub
xchg
add
and
pop
int3
insb
xchg
mov
pushf
adc
test
sub
incl
mov
scas
test
mov
xchg
cmp
fisttpl
and
jl
loopne
jle
es
sbb
inc
and
ss
pop
push
or
add
arpl
push
test
inc
lahf
push
and
mov
in
inc
and
mov
in
pusha
filds
xor
jl
pop
in
icebp
sub
mov
inc
inc
jns
sbb
push
das
fsubrp
sbb
out
push
mov
mov
ficoms
gs
and
and
jl
sub
pusha
repnz
push
andb
lcall
mov
jmp
inc
or
imul
adc
decl
lea
repnz
pushf
divb
and
cmc
cld
and
sbb
cs
and
mov
mov
dec
mov
add
test
inc
mov
push
jp
xchg
sub
out
and
movsl
adc
sbb
sbb
sets
jbe
inc
mov
xchg
mov
dec
mov
and
insb
loopne
cli
inc
push
pop
pop
inc
shrb
pop
push
add
jae
ret
mov
adc
addl
ret
fnstsw
sub
mov
or
scas
push
arpl
mov
aas
into
cld
lods
mov
and
add
sti
testl
outsb
je
push
sbb
sbb
call
dec
imul
leave
inc
or
pop
movsl
cmp
stos
mov
sub
xor
sahf
rclb
sub
into
adc
sub
push
loopne
call
hlt
je
cmp
jbe
jns
pop
in
shr
sub
fs
mov
lcall
add
xlat
pop
jge
in
jmp
imul
xor
and
adc
jecxz
push
divl
sub
cmpl
cmp
pop
clc
repz
test
dec
and
add
sbb
movsb
orl
ja
mov
add
add
adc
dec
or
jmp
jnp
sbbl
add
sbb
cmp
lcall
add
sub
adc
xchg
xor
fsubrl
add
std
in
adc
cmp
popf
movb
add
or
mov
sbb
lods
subl
enter
and
jle
add
and
in
mov
scas
fucomip
lds
scas
or
pop
dec
rorb
mov
jbe
scas
mov
stos
add
jae
push
mov
jp
adc
jmp
lcall
or
mov
xor
or
sub
rcll
movsl
and
adc
push
cmp
cmp
mov
sub
xor
movsl
jecxz
lea
inc
mov
xor
push
add
mov
imul
cltd
inc
dec
adc
fimull
jne
xor
loope
adcl
sti
add
loop
int3
sahf
in
push
sti
andl
jmp
and
ja
add
xor
les
or
inc
pop
inc
or
xchg
test
outsb
das
add
jne
inc
cwtl
shrl
scas
sub
mov
lea
bound
or
sbb
and
subl
mov
mov
dec
sar
das
test
sub
rcrb
add
roll
xor
mov
das
jno
add
push
int3
inc
test
push
mov
adc
shl
mov
fdivrl
jbe
shlb
or
xor
or
cwtl
int
inc
dec
add
fsts
dec
mov
xchg
pop
or
mov
pop
mov
adcb
mov
inc
push
pop
rorb
daa
push
fimuls
or
mov
jg
and
adc
inc
cmp
mov
mov
and
sub
clc
add
add
inc
xor
lock
das
test
xorb
mov
out
cmc
adc
xlat
adc
or
je
inc
add
inc
dec
subb
cmp
daa
pusha
enter
hlt
dec
shrb
xchg
mov
scas
push
xchg
add
je
cmp
pusha
loop
push
or
inc
inc
lea
clc
pop
mov
mov
cmp
pop
adc
and
add
mov
pusha
mov
cmp
sbb
in
xlat
popa
pop
xor
cld
inc
call
add
sub
push
aas
ret
xor
fstl
add
ss
cmp
fistpl
dec
cmp
ja
ret
adc
ss
jb
add
lock
loope
neg
mov
jne
mov
sub
into
mov
inc
mov
push
pusha
hlt
pop
or
mov
jnp
or
jmp
js
sub
sub
fsubr
mov
push
daa
dec
je
cmp
fisubs
fildl
xchg
mov
cwtl
pop
mov
cltd
repnz
mov
add
fnstenv
negb
xor
fadd
jmp
mov
or
in
loope
shlb
xchg
jo
in
mov
popa
pop
add
add
incb
jge
hlt
xchg
not
sub
inc
mov
pop
mov
mov
or
mov
jl
mov
cmp
mov
movb
clc
sub
sbb
jne
scas
nop
sub
movzbl
mov
add
inc
dec
mov
jne
fistl
xchg
or
addl
addl
mov
rorl
out
frstor
and
pop
xor
cwtl
dec
add
push
dec
add
fsubrl
shrb
ret
cli
scas
pusha
mov
adc
and
jge
inc
mov
push
add
cli
and
lret
out
sbb
and
cmp
push
inc
cmp
jl
pop
cmc
inc
adc
leave
emms
or
ljmp
xor
call
test
mov
loope
movsl
mov
push
jbe
pusha
mov
out
xor
ror
cmp
push
sub
adc
sbb
push
lds
das
add
mov
push
jl
inc
adc
push
xchg
xchg
xchg
shl
add
addb
divl
xor
mov
pop
mov
lods
add
into
flds
dec
cs
inc
or
fmuls
loopne
hlt
cmp
in
and
sbb
cmp
push
lea
mov
xchg
stos
addr16
sbb
sub
or
jne
push
xchg
rorb
in
inc
mov
xchg
cmp
jns
lock
xor
cltd
jmp
mov
mov
dec
push
shll
ljmp
push
in
rol
add
add
mov
mov
shr
shl
add
and
shl
xor
mov
mov
sub
das
fidivrl
mov
add
adc
dec
jge
or
jge
xchg
sub
or
xor
cmp
loopne
lea
add
clc
sub
adc
sub
hlt
andb
cmp
add
mov
mov
inc
loopne
popa
fs
fninit
sbb
sub
insb
push
cltd
jo
dec
fnstsw
aaa
inc
mov
sbbl
stos
call
adc
lcall
outsl
jl
rcrb
std
push
sbb
jnp
adc
xor
popl
add
movsb
arpl
jl
mov
and
xor
std
loop
bound
iret
mov
cmp
icebp
sbb
aam
dec
mov
xor
jle
push
enter
cmp
adc
and
mov
fisubl
xor
es
cmp
in
mov
ds
mov
out
add
mov
sbb
jge
pop
sub
or
lods
mov
add
dec
pusha
mov
je
in
pop
push
and
inc
pop
add
ljmp
gs
mov
out
in
mov
xchg
jns
and
adc
pop
jo
mov
inc
in
jno
push
pusha
repnz
pop
jo
sub
inc
add
mov
mov
cld
mov
push
push
or
ss
adc
mov
movl
mov
xor
mov
jbe
aaa
inc
adc
js
sub
stc
iret
mov
les
jle
cmc
jbe
clc
ret
push
mov
sub
push
fdivs
ss
daa
adc
jmp
push
js
cmpsb
xor
call
das
repnz
or
fnstsw
out
mov
lods
sarl
arpl
lret
jle
scas
add
adc
out
nop
push
xor
jge
jne
ss
gs
mov
xor
dec
push
push
dec
mov
push
ret
mov
dec
adc
scas
jno
in
sbb
mov
pusha
cmp
loopne
in
aam
push
stos
mov
jmp
fdivrs
dec
stos
sbb
cmp
jmp
lods
or
bound
fsubs
shlb
testb
pop
or
lock
mov
add
xchg
xor
inc
mulb
pushw
sbb
nop
negb
mov
popa
and
adc
mov
and
pusha
fdiv
cmpb
bound
pusha
rorb
enter
push
or
sarl
das
in
and
push
dec
insb
add
pop
mov
bound
lods
mov
mov
xor
xor
sub
or
sbb
adc
dec
xchg
ds
loopne
cmp
adc
or
sbb
or
or
ja
popl
mulb
cmpsb
fimull
ja
xchg
lods
arpl
push
sub
enter
mov
adc
sbb
jns
or
sub
or
or
push
and
sub
adcl
mov
add
push
gs
jmp
mov
ds
adc
jno
mov
cs
push
push
and
sub
out
mov
mov
xor
xlat
sub
mov
or
sbb
mov
pop
push
mov
mov
jp
inc
xor
xor
xchg
hlt
jne
push
sbb
pop
scas
rcll
mov
aaa
loope
inc
subl
les
test
sbb
rcrl
pop
cld
xor
clc
mulps
cmpl
push
imul
test
sti
pop
push
xchg
lret
lods
out
ficompl
in
lea
dec
mov
pop
push
pop
push
push
inc
sub
into
sub
push
scas
xchg
add
adc
imul
sbb
es
push
and
mov
test
mov
add
mov
lods
pop
adc
jne
movsb
mov
cmpsl
cmpb
mov
ds
sbb
jno
cld
pop
push
inc
roll
sbb
and
mov
imul
or
xor
add
jo
out
cmp
jle
rcll
insb
and
icebp
out
movzwl
inc
cmp
in
nop
add
gs
mov
jmp
sbb
fwait
sbb
data16
push
cmpsl
jo
push
pop
rorb
insl
jnp
add
ss
jno
jmp
or
add
pushf
add
push
ret
arpl
shlb
imul
push
or
in
insb
xor
inc
xchg
adc
cld
push
or
jo
dec
rcr
data16
add
or
push
mov
cld
dec
or
sub
inc
jo
jne
addl
add
add
mov
icebp
cmp
scas
xlat
aaa
mov
push
sbb
sbb
pop
ret
dec
add
jl
out
shrd
call
pop
call
shll
out
push
add
mov
aaa
test
adc
jo
jmp
imul
jg
call
mov
mov
je
cmp
stos
jbe
and
push
cmp
xchg
jmp
sub
enter
xchg
push
adc
frstor
add
mov
int3
pop
cltd
shrb
rcr
cwtl
or
shll
or
push
sti
jge
pop
rol
jo
adc
push
cmp
jmp
mov
sbb
xor
push
aam
adc
sub
loopne
loop
pop
jae
dec
and
popa
or
jmp
mov
mov
dec
ret
adcl
lea
jne
jg
add
loopne
dec
and
add
sbb
add
loope
cmp
xlat
xor
bound
test
pop
sub
add
pop
jne
sbb
sbb
jecxz
jg
insl
cld
push
sbb
push
push
mov
test
leave
or
inc
mov
push
mov
lods
or
jno
adc
and
in
mov
adc
dec
add
push
push
sbb
cwtl
iret
fsubs
je
add
pop
xorb
cli
dec
xor
cmp
pop
mov
and
scas
rcrl
std
add
mov
xor
enter
or
testb
push
cmp
sbb
or
clc
test
roll
add
cmp
jle
aaa
pop
leave
jmp
lea
push
sbb
cmpsb
scas
sbb
dec
adc
js
adc
inc
bswap
push
push
sbb
lret
pop
push
int
sub
ret
pop
std
jae
xchg
adc
stc
jmp
loope
and
xor
mov
jmp
push
dec
pop
pop
xor
lea
cld
mov
mov
xor
sbb
xchg
push
cmp
std
cwtl
add
aad
nop
inc
mov
mov
jcxz
fstpt
push
out
dec
mov
fs
pop
jg
rcrb
fdivs
cmp
imul
jne
push
test
lds
inc
jmp
xchg
add
jecxz
insb
sbb
or
lds
scas
iret
inc
add
jae
cmp
sbb
shrb
fldl
jno
xchg
pop
mov
js
add
sbb
pop
mov
cmp
pop
sbb
sbb
mov
je
mov
sti
shlb
rorb
xchg
sbb
rolb
sub
xchg
mov
mov
or
push
sub
and
jo
jo
cmp
fs
add
sbb
cwtl
or
push
shll
fwait
mov
inc
adc
lea
out
xlat
or
adc
lcall
lock
adc
int
fdivl
and
or
cmp
outsb
dec
cmp
cmp
mov
and
mov
fistps
mov
dec
push
shll
push
clc
sbb
pop
xchg
mov
mov
sub
js
test
into
mov
mov
in
add
push
lret
jo
sbbb
jns
pusha
fsubl
cld
pusha
dec
adc
scas
xor
test
aam
adc
in
push
ja
add
mov
mov
cmpl
push
or
faddl
dec
mov
adc
mov
pop
xor
push
mov
out
fisttpl
sub
aad
or
sub
popa
xchg
pop
adc
je
mov
mov
add
cmpsl
xor
push
scas
jl
outsb
insl
jbe
test
repz
and
stos
mov
stos
scas
add
jbe
jns
push
popa
test
test
push
dec
jne
fs
subl
add
enter
lea
or
or
add
test
mov
test
and
pop
cmp
sub
lods
pop
and
add
mov
dec
dec
pop
dec
in
stos
sbb
ficompl
xchg
shr
add
ja
in
jmp
adc
mov
jns
push
inc
add
cmp
clc
dec
push
jnp
mov
push
pushf
xchg
aaa
add
cmp
and
xor
jbe
icebp
adc
popa
mov
inc
ds
testl
popa
fstpl
out
add
ja
fmul
jbe
add
jae
movsl
or
test
add
mov
cwtl
cmpl
pop
lods
sbb
rorb
sub
xor
sti
fadd
jns
xor
repz
mov
add
cmpb
jo
ret
push
sub
push
ret
mov
cmc
mov
loopne
pop
xchg
jns
jg
add
ret
fisttpl
add
and
adc
insl
dec
xlat
add
out
add
or
add
ret
test
data16
hlt
rclb
sbb
movsb
pushf
or
inc
mov
adc
inc
jmp
in
cmp
xor
pop
mov
pop
inc
adc
xchg
insl
roll
or
or
add
jl
pop
rolb
mov
cmp
or
lods
xlat
inc
cmp
push
imul
andb
es
movsb
jbe
cld
add
cmp
nop
add
inc
inc
inc
or
jb
cmp
das
out
pusha
popf
adc
jnp
shll
jp
outsb
movsl
add
xchg
and
rclb
push
pop
aam
in
mov
je
sub
dec
add
ja
insb
dec
add
daa
mov
xor
cld
cmp
push
push
push
push
sarb
mov
add
and
jne
movsb
inc
mov
jo
ja
add
in
push
sbb
and
int
push
jg
sbb
or
jmp
js
adc
push
dec
adc
or
xor
and
enter
clc
cmp
inc
or
pop
je
jmp
or
push
cmp
loope
sub
pusha
xchg
inc
out
mov
dec
sub
mov
inc
sbb
cmp
sbb
jp
pop
cli
jg
jmp
jp
and
cwtl
cmp
cmpsb
push
xor
sbb
and
jnp
mov
fldl2e
fisubs
cmp
mov
or
inc
dec
scas
pushf
outsb
cmp
leave
dec
inc
outsb
pop
sbb
pop
pop
and
pop
push
sbb
orb
enter
loopne
fs
push
inc
popa
add
cmp
or
or
and
adc
clc
adc
inc
mov
flds
adc
movsb
xor
out
sbb
in
mov
add
cmpsl
dec
fdivrl
jmp
add
sub
sahf
cld
ss
jb
icebp
mov
stos
pop
push
pop
in
pushf
push
xchg
leave
push
jge,pn
cmp
push
push
push
rcr
rolb
or
int3
dec
stos
lock
lds
and
loopne
loopne
sub
hlt
loop
adc
data16
cmp
ss
mov
xchg
xor
push
push
in
cmp
jno
mov
sarb
xor
xchg
pop
ja
les
orl
xchg
jno
xchg
or
adc
pusha
jne
pop
mov
rorl
jbe
outsb
add
adc
jno
xchg
sub
aam
stos
push
movl
loopne
mov
bound
rorl
scas
mov
mov
cltd
mov
scas
jle
rcrb
js
inc
repz
or
dec
je
sbb
adc
jne
mov
sar
mov
int3
add
sbb
or
call
stmxcsr
sbbb
xor
jne
jp
sub
add
and
clc
jg
fistpll
movsl
pusha
jmp
movq
movaps
fimuls
jae
xor
jle
xor
test
ror
test
lods
inc
test
or
jge
repz
or
in
adc
aam
xchg
ret
adc
mov
jnp
mov
scas
mov
add
adc
push
add
adc
add
pop
lock
mov
repnz
mov
ffree
roll
add
scas
std
imul
enter
mov
ficoml
sbb
sbb
mov
fisttps
test
inc
rorb
clc
ja
scas
adc
xchg
cmp
push
push
leave
jb
or
mov
push
and
mov
xchg
or
pop
in
aam
xor
xchg
xchg
push
push
xchg
ret
ret
jge
mov
andl
sbbl
or
push
sbb
xchg
jmp
test
mov
dec
and
mov
mov
movsl
shr
daa
mov
sbb
adc
push
rorl
test
push
ss
jp
or
push
sbb
addl
add
pop
test
cmp
mov
inc
inc
sub
mov
push
adc
xorb
std
das
fs
mov
mov
cmp
jne
push
adc
add
dec
mov
mov
sub
push
cltd
sbb
push
cmp
add
sbb
je,pn
cmpsl
rclb
adc
lock
mov
sbb
call
xchg
in
jne
popf
mov
add
aad
jl
lock
push
jo
lods
mov
hlt
insb
lods
pop
imul
push
mov
or
das
stc
add
push
sti
pop
xchg
jmp
push
mov
mov
lcall
pop
add
push
xchg
inc
xlat
adc
xor
mov
outsb
push
pushl
mov
adc
inc
cmp
jne
inc
cmp
out
dec
xor
pushl
or
sbb
bound
sahf
push
push
adc
out
push
push
add
mov
push
push
dec
std
and
mov
sub
pop
inc
inc
stos
add
sbb
hlt
cmp
mov
addb
andb
and
jae
arpl
dec
adc
out
adc
cmp
lret
jnp
add
es
or
add
add
mov
push
roll
mov
pop
mov
cs
and
mov
jecxz
adc
cmp
cmp
addr16
xor
push
rcrb
fadds
ror
mov
pop
jg
cmp
ret
xchg
shl
fiadds
or
dec
leave
sbb
or
or
inc
pop
add
dec
cmp
mov
mov
scas
jmp
push
rol
inc
inc
cmp
jge
mov
cwtl
sbb
dec
xchg
jg
jmp
test
leave
mov
mov
clc
pop
xor
lcall
xlat
std
add
movl
fildl
int3
and
seta
sub
inc
or
add
add
out
testb
pause
loopne
sbb
addb
fisubrl
lods
hlt
sahf
xor
jae
test
sbb
rcl
shrl
jne
mov
movsl
andb
outsl
popa
inc
cmpsl
mov
fidivl
sysenter
push
adc
push
cltd
outsb
in
push
stos
mov
push
incb
dec
pop
outsl
inc
cmp
jno
jmp
cltd
incb
iret
shlb
push
into
dec
shufps
dec
sub
fmuls
stc
outsb
dec
cli
or
add
jmp
arpl
mov
inc
ds
jbe
push
mov
jb
loop
fstpt
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
test
xor
ret
inc
lods
stos
ja
adc
dec
jp
or
add
pop
jp
enter
mov
cmp
mov
xor
jp
inc
cwtl
jp
clc
call
cmp
jb
lea
rolb
or
mov
cmp
mov
add
push
cld
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
add
repz
adc
or
add
jb
jmp
adc
cld
mov
jmp
adc
jmp
std
into
sbb
repz
jmp
cld
cld
ret
nopl
add
fimuls
pop
scas
popa
xchg
cmp
in
push
push
mov
or
push
adc
or
mov
xor
pop
jne
pop
ret
or
les
adc
mov
jbe
icebp
adc
pop
or
push
adc
inc
cmp
rcr
adc
scas
aad
dec
scas
or
dec
jb
add
pop
cs
cltd
dec
push
push
cmpsb
add
and
cmp
scas
loopne
or
outsl
loop
push
std
mov
sbb
stos
add
adc
push
and
adc
adc
push
adc
cmp
cmp
jg
add
mov
mov
dec
pop
push
lock
movsb
jno
loope
add
icebp
adc
fbstp
popa
xchg
and
daa
lret
inc
add
test
jmp
gs
fcoml
jle
popf
mov
push
pop
div
jb
adc
cmp
arpl
ret
xor
mov
mov
mov
pop
adc
push
mov
sub
pop
in
andl
scas
test
cmp
sbb
call
dec
adc
int3
push
sub
stc
add
xor
sbb
mov
xchg
sbb
xlat
xor
adc
mov
stos
and
clc
push
pop
imul
in
and
add
fisubrs
xor
push
mov
shl
inc
mov
adc
out
cmpsb
mov
leave
or
lods
xchg
inc
sub
mov
inc
pusha
and
cwtl
push
pop
ja
xor
clc
inc
repz
dec
fstl
jg
pop
mov
inc
jmp
cmp
jne
orl
jmp
adc
lar
fnsave
sub
push
fiadds
je
dec
add
jg
and
push
fmull
mov
sub
add
and
fnstsw
or
adc
dec
add
add
pop
push
popa
rol
mov
xchg
ljmp
xchg
jecxz
rcll
or
test
sbb
out
jg
lret
sub
jmp
test
mov
sub
cmp
ja,pn
mov
and
adc
sbb
loopne
daa
adc
popa
movsb
cmp
sbb
xor
xchg
and
dec
test
push
dec
or
je
pop
test
sub
pop
cld
imul
add
xchg
fadds
cmc
mov
sbb
popl
and
xorl
mov
jbe
add
mov
add
je
add
and
lods
push
hlt
add
into
mov
lods
mov
test
xchg
sbb
mov
insl
sbbl
aaa
push
push
xchg
push
push
lock
add
xchg
pop
jg
jmp
push
mov
aas
or
cmp
je
test
sub
pushf
inc
outsl
pusha
add
loopne
stc
les
pop
loopne
data16
jge
stos
mov
xorb
jo
inc
jg
mov
pop
sub
test
pop
mov
jmp
jno
jbe
stc
ss
push
or
add
mov
adc
pop
cmc
mov
jne
idivb
add
jge
mov
jmp
rclb
lret
adc
or
xor
shlb
adc
sbb
test
repz
and
popf
je
clc
inc
xor
prefetch
cli
mov
sbb
cmp
inc
inc
test
xor
inc
mov
mov
or
lea
rcrb
lret
test
or
lea
and
inc
ja
pop
jb
push
aas
push
adcl
push
jmp
push
sbb
and
pop
dec
scas
loopne
or
sub
stos
lock
in
sbb
mov
ret
mov
sbb
inc
pop
adc
cwtl
lret
ret
push
push
xor
xor
add
cs
add
add
rolb
out
pop
aaa
cwtl
sbb
dec
movsl
push
outsl
popf
xchg
out
push
mov
pusha
adc
sbb
rcll
or
dec
loop
dec
adc
test
sub
push
or
nop
dec
clc
fidivs
sub
faddl
popa
or
pop
test
int
std
idivb
shlb
stc
sub
in
push
adc
push
pop
cmpsl
mov
in
add
movsb
xchg
cmp
jle
lods
iret
inc
andb
repnz
jle
lea
and
pop
je
rcll
dec
push
mov
add
or
mov
cltd
les
add
je
and
xor
push
add
or
pop
jmp
pop
sbb
fistl
popa
pop
imul
repnz
mov
dec
sub
pop
add
int
enter
call
icebp
or
pop
in
dec
xor
add
test
jns
sbbl
mov
sarb
in
mov
xchg
add
daa
icebp
adc
jmp
aam
mov
mov
and
add
mov
mov
movb
sub
fisttpll
leave
sub
std
add
arpl
mov
aam
push
push
push
sbb
pop
xor
mov
mov
xor
cmpsl
mov
rclb
push
xor
adc
xlat
rorl
xor
pop
loope
pop
mov
pop
fwait
lahf
sbb
loopne
push
ficoms
into
adc
ret
mov
cmp
push
ja
push
fdivrs
call
mov
push
popa
jecxz
push
inc
adc
in
shrb
aam
js
dec
js
jle
js
jmp
push
pop
jmp
ror
insb
popf
and
call
int3
push
les
add
lock
inc
pusha
jb
pop
add
cmovp
mov
popa
repnz
rorl
in
xor
repnz
sbb
mov
or
or
mov
add
and
loopne
adc
push
or
or
add
mov
mov
jecxz
mov
inc
into
andb
mov
pop
je
push
mov
in
pushf
mov
push
dec
or
test
cmp
ret
mov
xchg
mov
cmp
mov
mov
sbb
xorl
push
or
imul
sub
xchg
or
ja
sub
out
mov
divl
xor
in
sbb
ss
mov
push
iret
jp
and
xlat
test
mov
xchg
stos
add
push
sub
adc
cmpsb
ret
xchg
sarl
jmp
push
pop
pop
push
clc
pop
hlt
mov
sbb
and
lods
sub
mov
iret
or
cmp
and
imul
cmp
enter
pop
push
pushf
pop
rcrb
in
adc
repnz
dec
insb
adc
ja
and
sub
leave
dec
mov
push
loope
hlt
int3
and
fistpl
sub
sbbb
xchg
cmp
test
pop
lods
icebp
fcomps
pop
rclb
mov
cwtl
add
cmp
lock
lcall
mov
cli
add
sbb
cmp
push
inc
jne
mov
or
cmp
je
push
jbe
adcb
test
addb
roll
cmp
nop
outsl
mov
xchg
push
and
dec
mov
lock
rcl
jge
pop
adc
push
pop
push
pop
inc
mov
adc
rcrl
loope
mov
into
imul
pusha
and
mov
xchg
lret
rorb
pusha
adc
test
inc
adc
push
push
mov
add
clc
mov
pop
jne
jp
lret
or
jmp
lock
adc
push
sbb
cmp
leave
lret
sub
into
gs
rorb
jmp
outsb
dec
mov
inc
push
and
jg
mov
daa
jmp
sbb
lret
enter
rorl
in
dec
or
cwtl
pcmpgtw
insl
push
sbb
out
push
pop
jle
mov
je
movzbl
add
sub
cld
cltd
test
fiaddl
add
clc
adc
imul
mov
pop
add
add
out
cmp
add
cmp
xor
nop
xchg
dec
add
seto
lcall
enter
add
mov
xchg
pop
push
pop
dec
push
jns
jb
or
sbb
inc
sahf
or
dec
or
sub
or
sbb
inc
pop
or
pop
lcall
or
lret
add
lcall
enter
cwtl
push
push
and
and
ja
push
movq
adc
pusha
adc
sbb
pusha
fwait
sub
adc
mov
or
adc
repnz
push
out
adc
repnz
in
add
adc
adc
fmulp
add
cmp
cmp
push
push
mov
pop
xor
out
rcrb
sbb
sbb
sbb
cmp
lret
call
repnz
sbb
push
sbb
cmpsb
sbb
je
pop
sbb
enter
dec
jge
sbb
add
push
pop
and
roll
pop
jne
add
add
sub
cmp
jae
add
cmp
ljmp
insl
bound
or
mov
lea
in
push
in
jno
repnz
sub
iret
sarl
adc
aad
sahf
add
in
out
xchg
out
inc
fwait
out
pop
adc
xor
repnz
outsb
or
call
adc
dec
dec
cwtl
jmp
xchg
add
sbb
or
sbb
insb
nop
cmpsb
repnz
in
in
in
cltd
add
pop
mov
push
nop
addr16
out
out
jge
inc
push
inc
out
sbb
pop
add
dec
jae
lock
iret
enter
pmulhw
repnz
repnz
std
push
push
and
repz
std
hlt
add
aam
rorl
pusha
hlt
fwait
cmp
enter
inc
jg
add
sbb
negb
nop
xchg
cmp
cmp
clc
jb
push
imul
seto
stc
inc
stc
lock
cli
pusha
in
jns
iret
sti
fwait
lret
sbb
stos
cld
cld
cld
je
xchg
mov
rcpps
faddp
xor
enter
adc
xor
pop
rcrb
pushf
pop
sub
add
lahf
cmpsl
les
in
mov
or
dec
ret
stos
pop
cmpsb
cmp
fsubp
add
jecxz
std
sti
in
in
adc
inc
sbb
daa
inc
or
xchg
sti
out
out
lea
out
outsb
call
push
dec
sti
sub
rcrb
sbb
repnz
in
repnz
mov
cmp
js
out
xchg
add
dec
out
out
cltd
push
pop
leave
and
push
in
rcll
fsubs
dec
repz
sar
sbbl
leave
push
stc
fstpl
cmpsb
jb
stc
div
negl
loop
cmp
xor
add
xchg
cmp
stc
out
clc
rclb
cmp
outsl
in
or
inc
cld
in
mov
orl
jecxz
jge
cmp
and
push
xlat
dec
add
cld
sub
mov
mov
repnz
mul
pop
mov
inc
repnz
scas
notl
cmp
jg
mul
sbb
imul
or
in
repnz
mull
notl
inc
mov
sti
imul
jb
or
jno
testb
mulb
pusha
leave
xchg
negb
int
out
jno
inc
pop
lret
inc
negb
mulb
andb
pop
lcall
mov
pop
xchg
cmc
pop
dec
pop
and
cmc
pop
mov
cmc
div
idivb
fwait
and
push
add
clc
clc
adc
stc
popa
cmp
mov
inc
pop
lret
and
and
hlt
sbb
das
pushw
data16
dec
scas
mov
jge
jo
push
or
sti
lahf
pusha
adc
xor
ljmp
in
xlat
loop
scas
repz
popa
leave
mov
test
xchg
cmpsb
in
repz
and
and
adc
xchg
pop
push
sbb
jmp
leave
and
mov
mov
sbb
dec
in
in
cmc
scas
adc
and
repnz
orl
sbb
mov
mov
add
divb
icebp
mov
inc
xlat
jb
test
dec
push
cmp
cmp
inc
jb
sbb
add
pushf
mov
ffree
lock
or
push
jno
imul
je
dec
push
lock
scas
inc
add
sbb
inc
repnz
fldl
ss
in
ja
dec
mov
sub
out
jne
movsl
xor
lock
cmovno
push
add
add
mov
cmp
add
push
fwait
push
jnp
and
xchg
adc
jne
adc
add
and
add
sahf
and
ljmp
or
xchg
fisubs
xchg
scas
aas
inc
add
out
fwait
inc
int
xor
adc
jl
addl
imul
incb
cmpl
outsl
nop
dec
hlt
cmp
inc
repz
mov
inc
add
push
out
lcall
mov
loop
clc
and
filds
sbb
sbb
in
mov
and
out
add
mov
decl
jle
rolb
fbld
pop
test
inc
cld
jb
test
dec
mov
mov
and
mov
je
int
lret
inc
push
imul
xchg
cld
push
inc
shll
or
mov
outsl
add
sbb
dec
imul
sbb
cmp
mov
movsl
lock
add
imul
push
dec
imul
je
push
xchg
xor
in
xchg
adc
icebp
andb
inc
decl
add
mov
pop
or
fmuls
mov
sub
and
add
pop
sub
add
add
ficoml
cli
div
add
or
mov
lea
push
adcl
xchg
rorl
imul
push
xor
jb
sarb
mov
push
subb
cmp
neg
mov
test
mov
add
or
jl
mov
ljmp
or
pusha
je
repz
mov
ljmp
sub
xorb
sbbl
adc
mov
add
push
sub
in
inc
cmp
in
jecxz
rcll
movsb
push
jmp
iret
rol
dec
jno
pop
fsubrp
xor
cld
add
push
lods
daa
je
clc
pop
insl
add
into
shl
pop
adc
cmp
adc
pop
outsl
inc
jb
pop
fadd
and
sub
inc
inc
inc
inc
lock
jb
adc
cmp
fcoml
mov
jmp
jb
out
fistl
popf
inc
push
inc
and
gs
fcomps
cmpsb
add
push
sahf
addb
cmp
pop
shlb
sbbl
pop
roll
sbb
pop
or
enter
add
xchg
fimuls
xor
pop
roll
and
cmp
pop
jmp
ja
mov
push
xor
inc
adc
add
sbb
call
rcrl
jo
data16
jne
jo
sub
mov
mov
and
adc
insb
sti
add
adc
stc
sbb
or
aad
or
adc
jne
mov
addl
cmp
sbb
or
dec
outsb
out
jns
mov
and
out
dec
mov
mov
jb
lcall
inc
adc
mov
subb
repnz
push
adc
add
inc
lods
mov
mov
rcrl
sbb
inc
or
or
loopne
bound
jecxz
add
add
clc
pusha
add
aad
or
add
test
push
clc
out
jmp
stos
add
testb
out
fstl
loopne
insb
sahf
repz
add
cmpsl
inc
enter
cmp
or
mov
test
mov
icebp
adc
shlb
xchg
stos
add
add
popa
roll
cmp
sub
pop
or
jmp
jns
push
notb
mov
inc
roll
dec
movsb
pop
push
sub
andb
lcall
fimull
dec
pop
pop
mov
push
pusha
fsubs
sub
pop
mov
rep
movb
jo
pop
inc
sarb
jb
xchg
int
push
sub
enter
push
lea
sbb
and
outsb
xchg
shrl
add
add
adc
dec
mov
jl
push
dec
add
movl
cmpsb
inc
add
add
fiadds
push
out
sahf
pop
push
dec
inc
cmp
cld
mov
mov
call
cmp
repz
hlt
clc
mov
cld
lea
sub
add
fldenv
jmp
repz
test
and
test
inc
pop
sti
and
and
daa
mov
xor
jl
cld
or
add
pop
neg
fimuls
push
sub
stc
sub
push
pop
nop
xor
pop
push
andb
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
mov
add
cwtl
cwtl
add
aam
cmp
cmp
faddl
in
hlt
cld
jns
pop
filds
pop
pop
aaa
sbb
sbb
jns
out
adc
adc
sahf
out
sahf
or
or
add
mov
xor
cmp
dec
xor
test
push
add
mov
icebp
xchg
pop
pop
movb
imul
push
mov
mov
mov
clc
sti
incl
inc
decl
jne,pn
pop
pop
fwait
repnz
mov
cld
cmp
jg
cmp
jbe
push
cltd
pop
idiv
pushf
push
add
mov
cli
add
outsb
ja
out
jb
std
aaa
dec
mov
mov
xor
test
mov
cmp
jae
dec
pop
cmp
jae
pop
jbe
mov
loop
les
dec
sbb
mov
jo
loope
pop
sub
adc
xchg
mov
hlt
sub
clc
pop
cmpsb
jne
or
gs
hlt
sbb
lret
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
lret
aam
insl
jl
jne
xchg
adc
push
mov
xor
xor
rcrb
or
movsb
stc
je
mov
inc
dec
in
cmp
das
sbb
jl
pop
inc
add
add
jb
in
filds
xor
xor
rol
pop
add
jae
push
pop
add
inc
push
test
xor
adc
add
mov
stos
push
push
ja
xchg
mov
mov
out
fsubr
pop
cmp
js
sub
insl
or
aas
jge
push
push
push
clc
pop
cltd
pop
idiv
dec
mov
inc
filds
xchg
inc
out
cmp
dec
jb
fdivl
pop
in
jmp
xchg
aam
ret
ss
mov
inc
jle
pop
imul
push
jo
dec
and
adc
fs
jmp
jl
mov
sbb
call
pop
sub
or
je
insb
sub
mov
dec
ret
sbb
sbb
add
adc
outsl
jae
or
and
mov
pop
pop
mov
pop
incb
inc
jns
adc
cmp
scas
pop
dec
or
incl
pop
mov
fistpll
cmp
pop
sub
loopne
xchg
rorb
xor
adc
mov
cmpsl
push
icebp
lret
loopne
mov
daa
push
pop
xchg
push
cmp
sbb
inc
push
jmp
jge
pop
jecxz
int3
icebp
je
sbb
jl
xchg
pop
sti
call
out
dec
out
jno
mov
mov
out
sbb
dec
jo
mov
je
fisttps
pop
or
rorl
or
inc
mov
cs
lretw
adcl
lcall
pop
popl
fstl
or
and
push
movsb
push
or
mov
xchg
mov
cmp
pop
stc
add
int
push
adc
lcall
xchg
inc
jmp
push
pushf
xchg
add
inc
mov
jno
out
aaa
and
mov
aam
add
ret
push
je
mov
cmpb
ret
add
sbb
xchg
adc
dec
sub
dec
jge
loop
clc
dec
sbb
sub
push
cld
mov
lock
mov
sahf
idivl
adc
or
out
xchg
in
jns
add
xchg
jnp
jge
pushl
jbe
dec
ljmp
lcall
mov
ror
jg
loope
xor
push
pop
xchg
fcoms
mov
lock
and
inc
adc
icebp
imul
mov
add
inc
jg
hlt
pop
push
or
push
gs
mov
cwtl
insl
xchg
and
mov
cs
xor
mov
mov
inc
inc
cmp
je
xchg
inc
mov
cmp
cli
xorb
adc
add
test
mov
jle
dec
je
popa
sarl
xchg
cmpsl
ficoms
dec
aam
dec
sbb
loopne
inc
js
mov
add
mov
incl
fdivr
add
pop
push
push
mov
push
inc
sbb
loopne
inc
dec
daa
lret
neg
xor
pop
sbb
lods
mov
push
sub
bound
lret
mov
out
sbb
or
xchg
dec
add
push
jmp
push
cmp
and
add
mov
sub
or
lds
mov
jo
jl
imul
test
imul
inc
add
fstps
mov
nop
inc
mov
pop
add
lret
inc
or
sbb
push
pop
add
popa
mov
imulb
add
rcr
frstor
sub
dec
movsb
jb
inc
lret
dec
pop
jns
pushf
cmp
aam
lret
mov
mov
mov
fildl
fmuls
vpcomq
inc
ret
stc
cmp
inc
lea
bound
jne
jmp
push
in
rorl
or
dec
xchg
push
jmp
je
jl
das
dec
jmp
dec
loop
shr
sbb
dec
inc
xor
ds
inc
test
sub
in
pop
hlt
adc
sbb
dec
ret
push
sbb
cmp
es
jbe
cmp
lea
or
cmpb
sub
sbb
mov
adc
sub
aam
hlt
test
outsb
xchg
shll
cmp
je
push
stos
pop
ret
push
scas
cmp
roll
xchg
call
mov
movsl
xchg
push
dec
orb
xor
int
sbb
inc
push
jmp
cmp
pop
pop
sub
or
inc
inc
int3
jmp
mov
scas
test
inc
push
ja
push
insl
and
jbe
jecxz
jge
cltd
scas
and
push
mov
xor
les
pop
sub
es
inc
aaa
xor
ret
jmp
aas
pop
cmpsb
pushf
push
cmp
push
push
push
lahf
pmulhuw
mov
test
jne
and
enter
mov
pop
and
jmp
mov
add
push
add
adc
and
sub
aad
sbb
jmp
es
mulb
xor
push
ret
and
cltd
add
add
loopne
xchg
sbb
add
sbb
outsb
mov
mov
inc
add
jmp
pop
arpl
xchg
mov
xor
push
jno
fcoml
cld
icebp
fs
hlt
lds
add
clc
and
push
std
mov
int
add
mov
or
add
lods
or
and
test
push
into
dec
jecxz
sub
in
or
mov
mov
dec
shlb
sub
or
jbe
and
inc
gs
cmp
jge
and
xor
mov
sub
push
push
andl
fcompl
dec
or
bound
xor
dec
rcrl
mov
call
sbb
and
adc
jo
adc
das
adc
clc
add
xor
popf
lcall
stos
sub
or
sarb
add
cmp
movsb
ror
out
push
aam
inc
icebp
sub
pushf
enter
outsb
scas
xchg
sbb
mov
jmp
mov
dec
ret
sbb
inc
dec
maskmovq
mull
xor
wbinvd
loopne
je
je
and
adc
or
insb
jmp
push
das
loope
pop
mov
adc
imul
test
mov
ret
mov
push
sbb
into
jl
jo
arpl
imul
cmp
lea
icebp
sarb
mov
jmp
sub
rclb
xchg
jne
push
imul
xchg
pop
inc
repz
jae
jo
add
or
mov
inc
mov
inc
mov
sub
clc
push
sbb
ja
pop
xchg
cmc
mov
mov
xor
mov
mov
sbb
dec
sub
shl
sbb
dec
xchg
jle
es
inc
inc
cmpsl
dec
xor
jg
adc
dec
mov
cmp
sbb
add
cmp
xchg
shll
cmp
push
pop
xor
shrb
arpl
cmpsb
arpl
call
orl
fadds
in
push
gs
xchg
add
mov
ds
mov
sbb
loope
push
call
int
shrl
mov
inc
or
das
add
sahf
sub
dec
adc
pop
test
dec
inc
mov
xchg
add
ret
inc
adc
or
adc
ret
movsb
bt
push
les
nop
add
xchg
xchg
cmp
shlb
lea
loopne
loope
xor
push
rcrb
add
call
xchg
sbb
lahf
or
sbb
and
xor
test
sub
sbb
jno
aad
jnp
je
add
iret
xor
pop
jae
push
push
dec
or
pop
cmp
push
lods
jo
inc
mov
pop
adc
pop
rep
cmpsl
pop
jae
sti
sbbb
add
dec
ret
arpl
adc
cmp
xlat
aas
or
std
add
ljmp
add
add
into
add
mov
add
push
cmp
pop
or
xlat
and
leave
ret
and
cmpl
mov
repz
sub
pop
nop
jle
lcall
or
sbb
pop
or
push
call
dec
sub
addb
or
lock
aas
sbb
xor
push
loop
scas
push
fcoml
lods
lret
test
fcompl
pop
sub
xchg
fldl
and
xor
sub
sub
push
or
xchg
inc
sbb
sbb
adc
popl
paddsw
dec
out
mov
pop
test
fstpl
inc
pop
push
movl
fstl
xor
xor
cmc
cli
andl
faddl
xchg
iret
adc
dec
xchg
mov
dec
pop
pop
in
or
loopne
lock
lsl
inc
mov
or
and
pusha
int
mov
cld
sub
je
test
shlb
in
or
or
sbb
push
movsb
xchg
lret
add
fadds
jmp
nop
les
or
adc
adc
shl
aas
and
fadds
mov
sub
mov
add
mov
inc
dec
jne
lea
cld
mov
filds
bnd
shl
add
call
dec
fucom
mov
cmp
int3
sti
mov
mov
adc
mov
test
and
popf
out
and
pop
ja
sub
dec
ja
inc
notb
jno
inc
push
xchg
cmpsl
mov
fdivr
daa
test
push
push
aaa
mov
ja
adc
cs
push
fwait
adc
cmp
inc
inc
cmp
add
inc
dec
loopne
or
jae
xchg
push
sbb
jge
in
jmp
and
je
and
icebp
xchg
push
into
adc
aaa
clc
adc
aad
jmp
mov
pop
jp
sahf
mov
xor
out
out
mov
cmp
stos
jbe
sub
ja
lret
add
jmp
adcl
mov
and
and
and
jmp
push
inc
sbb
rorl
mov
pop
ret
clc
sub
jo
jg
arpl
mov
push
or
mov
dec
push
pop
inc
pop
or
call
or
scas
sub
push
mov
dec
mov
inc
add
pop
insb
push
cld
addl
jmp
daa
popa
fst
or
push
push
cmp
push
add
mov
mov
cmpsb
sub
cmp
push
in
repnz
inc
cmp
std
jne
loopne
pop
cmpsb
jge
fldt
stos
enter
xor
jmp
mov
sarb
mov
or
sbb
cmp
xchg
push
cmpl
daa
popa
mov
push
mov
adc
das
xchg
pop
sub
in
cmp
or
mov
jmp
les
push
add
and
xor
inc
sbb
push
push
adc
dec
or
mov
and
push
call
sahf
sub
pop
in
lea
mov
add
sbb
leave
inc
xor
lea
xor
dec
jno
mov
aaa
jmp
mov
into
sub
mov
fs
inc
or
filds
cmp
bound
pop
mov
mov
inc
fs
or
lds
outsb
incl
loopne
sbb
jmp
pop
and
inc
or
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
pop
fwait
jp,pn
cmp
jl
sbb
pop
push
jle
loop
push
inc
daa
test
loopne
mov
inc
dec
jne
add
movsb
mov
negb
gs
jnp
ss
jmp
cmp
sbb
fnsave
jge
cmpsl
or
rolb
add
and
jae
pop
push
loop
adcl
mov
mov
sub
dec
sbb
movb
loopne
inc
clc
mov
cld
aas
push
jbe
inc
cmpsb
push
dec
cmp
es
fs
mov
or
int3
cmp
sub
sbb
test
add
or
push
sub
jl
or
mov
or
insb
loope
arpl
mov
adc
ja
mov
or
pop
sub
jmp
xor
jge
mov
adc
add
bound
ret
ss
push
out
arpl
pop
ja
pop
xchg
jno
es
cli
jmp
xchg
int3
out
nop
ret
and
push
add
enter
cmpl
dec
pop
push
and
pop
movl
mov
pusha
fistl
outsl
cmp
es
insb
add
and
pop
sbb
or
pop
pushl
das
ds
sub
pushf
cltd
call
jno
imul
sbb
sub
inc
xchg
int3
test
rcl
xchg
and
cmp
mov
push
inc
sarb
sub
inc
in
cmp
mov
jle
or
push
and
clc
push
sbb
fs
bound
pop
cld
xchg
inc
add
add
decl
jne
sbb
inc
xor
test
mov
fucomp
push
sbb
mov
lea
dec
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
or
nop
adcl
sub
lea
adc
sbb
dec
mov
push
xor
fs
and
pop
in
sbb
arpl
jbe
xchg
loopne
stos
in
lock
xor
sbb
jo
loope
nop
add
es
mov
pop
jmp
ret
push
rcll
add
inc
ret
push
jbe
pop
mov
mov
mov
lea
mov
add
push
cmp
rol
cmpb
daa
mov
arpl
sbb
pop
xorb
js
push
test
pusha
ss
stos
or
ds
inc
jb
test
sarb
outsl
lret
call
push
sbb
cwtl
cmp
add
loope
xor
push
push
push
mov
mov
xor
mov
mov
push
loope
push
out
add
mov
test
inc
cmp
dec
and
lret
xor
push
imul
out
jne
insb
push
cld
push
jo
andl
testl
fiaddl
push
mov
movsb
xchg
push
test
cmpsb
popf
cmpsl
in
cld
mov
xchg
test
insb
jg
mov
sbb
outsl
mov
dec
pop
sbb
xchg
addr16
call
xchg
rol
dec
push
dec
jae
pop
pop
xor
push
push
sub
pushf
xchg
lahf
adc
pop
jns
pop
xor
pop
andb
or
xor
mov
pop
pop
rorb
fisubrs
iret
adc
push
popa
js
cs
mov
clc
inc
and
movsb
movsl
xchg
xor
sub
inc
push
in
cmp
icebp
inc
push
in
dec
pop
cmp
xchg
and
jle
and
pop
sbb
jmp
push
dec
push
xlat
cmpsl
in
mov
jbe
and
loop
jge
pop
cmp
je
jle
or
mov
mov
jge
cmpsl
mov
and
adc
push
addl
adc
mov
test
in
jbe
mov
cwtl
sarl
cmpl
leave
test
push
adc
pushf
cmpsb
and
daa
in
dec
cmp
mov
ja
jp
int3
dec
ja
mov
out
mov
mov
mov
mov
mov
jbe
mov
xchg
pushf
cwtl
mov
inc
loopne
push
fwait
mov
gs
xchg
mov
sub
inc
add
sbb
outsb
push
je
mov
jmp
pop
inc
sub
stos
push
dec
mov
rorl
sbb
mov
popf
jbe
scas
sbb
or
gs
fcoml
shl
in
addr16
clc
or
icebp
out
in
les
popl
xchg
sti
pop
add
shr
cs
test
enter
dec
cld
xor
andl
aam
adc
jno
xchg
mov
lock
add
lea
xchg
push
mov
aam
cmp
sbb
jge
and
jmp
pop
clc
add
add
bound
mov
les
xchg
stos
add
jmp
mov
and
inc
es
mov
jae
js
mov
jg
push
dec
and
inc
jg
jle
adc
imul
push
test
pop
and
xor
repz
or
push
adc
dec
jl
iret
add
jle
call
inc
pop
fsts
adc
lahf
xlat
jmp
jg
test
push
rolb
dec
cmp
jg
nop
in
adc
addb
adc
sbb
and
rolb
cmp
or
push
xchg
pushf
movsb
lods
mov
and
movl
call
mov
add
adc
inc
cld
lods
jo
test
cmp
cs
mov
icebp
push
push
mov
pop
and
dec
pusha
jmp
jno
jne
movl
jle
cld
popa
adc
and
jne
cmp
fistpl
mov
dec
cmp
jge
inc
mov
pop
rolb
outsl
sbb
or
scas
adc
das
adc
add
and
jl
sub
lds
test
fs
xlat
inc
popf
and
pop
mov
stos
mov
mov
addl
cwtl
hlt
mov
and
mov
and
fwait
xor
daa
and
xchg
rorb
push
enter
push
jbe
or
inc
or
je
testl
dec
adc
xchg
scas
jae
pop
dec
push
jle
dec
jl
or
sbb
push
xor
jge
jmp
push
add
pop
and
je
ret
xchg
data16
or
push
rol
orl
mov
push
or
pop
sub
inc
iret
sbbb
adc
je
xor
xchg
xchg
sbb
and
xchg
enter
push
pop
out
adc
pop
outsb
cmp
out
jo
add
into
outsl
push
sahf
or
cmpsl
loope
clc
aam
mov
sahf
add
loope
divb
or
push
xchg
jle
test
ja
enter
dec
popa
call
sub
pop
mov
lret
loopne
mov
insb
es
sbb
hlt
jecxz
jmp
js
pushf
or
mov
push
inc
and
in
adc
push
ja
add
push
test
inc
mov
testl
daa
xchg
and
adc
jno
cld
adc
cmp
mov
pop
loopne
mov
loope
adc
rorl
push
add
jno
test
test
mov
mov
xchg
cmpsb
lea
inc
lret
sub
sbb
lea
inc
cmp
lea
add
test
push
std
pop
ficompl
pop
cmp
jbe
int
jo
mov
jmp
inc
and
cmp
cmp
jmp
inc
sbb
push
dec
rorb
incl
and
sub
dec
in
xor
inc
ss
shrb
popa
add
push
ds
push
mov
push
addl
mov
pop
test
dec
loopne
or
push
dec
or
test
jp
add
loopne
aaa
jecxz
sub
sub
push
loopne
push
insl
test
lcall
inc
cltd
adc
inc
xchg
jne
jbe
push
inc
loopne
jo
jp
pop
sub
std
in
in
add
jbe
or
inc
ret
mov
cmp
inc
pop
divl
test
dec
lock
mov
pop
lds
mov
dec
dec
push
inc
xor
scas
add
dec
ret
shr
and
sub
cmp
andb
pop
push
loopne
movsl
outsb
cli
add
add
inc
pusha
jp
mov
mov
or
and
aas
test
and
xorb
out
sbb
and
push
push
push
fstl
sbb
push
add
jmp
pop
mov
or
push
push
test
dec
jae
mov
jg
jo
aam
decl
orl
and
mov
mov
pop
mov
mov
cmpl
pop
imul
jg
sbb
xchg
je
mov
stc
mov
push
sti
sub
or
in
mov
in
mov
cs
hlt
fadd
fdivs
jno
sti
ret
cmp
mov
push
add
mov
adc
cmpl
imul
pop
leave
test
push
jo
mov
call
ljmp
jecxz
inc
nop
dec
out
pop
push
dec
rorb
imul
lock
mov
movsbl
paddb
sbb
test
push
clc
add
shll
jecxz
mov
pop
and
inc
repnz
out
add
sti
or
aam
mov
fsubs
mov
out
and
sub
dec
or
je
or
sub
je
sbb
pop
xor
pushf
pop
or
add
xchg
push
or
pusha
mov
mov
in
jo
push
cwtl
pop
or
aam
arpl
es
mov
adc
clc
arpl
lret
dec
lock
ja
movsl
mov
mov
leave
test
out
roll
hlt
stc
outsb
outsb
fwait
add
je
insb
je
adc
test
outsb
loope
insb
cmp
popa
lds
sbb
mov
outsb
xlat
pop
and
pop
or
xor
sbb
add
orb
scas
mov
ljmp
xor
or
imul
mov
ret
imul
je
aam
dec
movsb
mov
xchg
push
jbe
xchg
movsl
ret
pop
loope
adc
xlat
mov
jb
or
sbb
jle
pop
fidivs
je
pop
push
or
dec
xor
pop
add
mov
add
hlt
fdivr
rol
sbb
loop
and
test
je
push
shlb
sahf
testl
jl
aaa
push
scas
mov
mov
adcl
pop
mov
testb
in
mov
or
sbb
shl
push
imulb
es
sub
scas
aam
mov
add
or
mov
add
push
insl
cmp
jl
xor
push
xor
divl
sub
je
ljmp
xor
add
addb
xor
lahf
push
xor
mov
ss
fucomi
push
mov
pushl
pop
aas
push
pop
dec
fistl
sarl
lcall
mov
inc
mov
dec
mov
pop
push
sub
xchg
cmp
int3
jecxz
mov
je
adc
cmp
imul
dec
gs
imul
add
push
inc
push
push
add
addr16
pop
xor
lret
je
cmp
je
test
arpl
popa
fsubrs
enter
cmpb
sbb
lds
fistps
xor
mov
add
je
pushw
movsb
dec
andl
jb
rcrl
lds
jecxz
inc
insb
jo
push
stos
add
push
add
scas
aaa
or
sbbb
adc
hlt
ja
fbld
jmp
cmp
jle
insl
cmpl
incl
cmp
adc
mov
xor
mov
adc
adc
out
call
xchg
mov
sti
mov
in
mov
adc
dec
sub
lea
bound
out
and
mov
subb
sbb
movsl
push
dec
sub
pop
test
scas
popf
or
sbb
dec
subb
sub
inc
orl
jge
push
mov
and
out
addr16
jp
adc
decb
jae
test
aas
test
rclb
jecxz
js
pop
addr16
xchg
xchg
enter
push
adc
inc
cmp
cmp
adc
inc
fbstp
mov
push
cli
mov
cmpsb
jmp
out
or
je
sub
nop
rorb
je
mov
pop
jl
jae
sbb
rolb
jecxz
cmc
lds
mov
push
cmpsb
jmp
inc
ds
mov
je
test
jmp
clc
or
jne
and
lea
fstps
or
push
inc
je
decl
xchg
sarl
pop
push
lock
xchg
clc
sahf
add
out
adc
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
fadds
aaa
into
xorb
shlb
xor
setg
or
jmp
dec
data16
and
push
inc
inc
cmp
pop
sub
sub
push
push
push
ss
gs
ss
pop
sbbb
push
jmp
mov
xor
sub
push
test
cmpsb
and
mov
adc
adc
cltd
sub
sub
pop
shr
nop
in
mov
ja
lcall
lea
or
mov
lcall
jbe
dec
push
cs
popa
sbbl
jne
push
pusha
push
xchg
aaa
cmp
add
add
fistps
rcll
xchg
add
lret
jge
sub
xor
pop
jg
or
sbb
lea
sbb
sub
pusha
rcll
pop
icebp
pop
or
sarl
je
rcr
jp
sarb
adc
mov
and
daa
pop
mov
shrb
cmp
mov
sub
movsb
loope
sahf
pusha
cmp
js,pt
cs
sub
push
mov
pop
lods
push
mov
mov
hlt
mov
sub
push
scas
stc
daa
mov
ss
sbb
push
xchg
shlb
sub
movsb
mov
dec
enter
pop
scas
inc
mov
aam
sub
idivb
pop
sbb
sbb
setb
lea
andb
mov
lret
int
or
testl
test
and
insb
jo
sbbl
jb
sub
push
add
xchg
xchg
mov
mov
jb
push
mov
movb
sbb
push
pop
xor
fdivrl
push
jne
push
aas
out
popa
insb
cmpsb
cltd
dec
xor
pop
add
nop
add
in
push
movsb
jge
and
les
stos
xor
add
ss
lods
arpl
outsb
push
pop
jne
push
jo,pt
das
jmp
push
adc
sbb
cmp
loope
sbb
inc
xchg
sbb
mov
add
aad
push
xchg
or
sbb
dec
lods
lea
test
cmp
lahf
add
adc
mov
gs
and
jg
push
or
or
adc
enter
and
mov
jb
rclb
sub
sbb
jns
add
mov
es
and
inc
sarb
jnp
mov
inc
rcll
dec
imul
push
dec
or
decl
sub
push
lea
mov
xor
add
mov
mov
ljmp
divb
sar
dec
cmp
jbe
push
mov
lods
cmp
jne
cli
jg
subb
jae
mov
shr
lea
not
and
decb
jne
stos
push
lret
mov
sbb
lea
xor
dec
loope
mov
add
mov
leave
adcb
add
add
add
addr16
pop
and
push
or
cli
imul
sub
jmp
clc
and
out
and
shlb
and
aam
and
sti
add
cs
pop
cmp
mull
orl
cmp
and
cmp
je
insb
jno
jno
fwait
lret
cmp
shr
not
and
add
and
xor
ja
lods
mov
das
mov
xor
addr16
pop
dec
add
mov
push
or
ficoms
rcrl
leave
fisubrs
lea
mov
cwtl
testl
jg
adc
dec
pusha
mov
mov
inc
mov
and
cmp
js
mov
or
pop
xchg
add
or
jmp
dec
adc
push
mov
pop
roll
inc
xor
aam
repz
es
and
add
icebp
pop
stos
pusha
sbb
iret
mov
lsl
scas
fistps
add
push
call
aas
gs
push
or
fstpt
add
andl
add
decb
adc
inc
push
out
outsl
flds
and
xchg
mov
push
push
mov
orl
call
mov
push
call
adc
sub
hlt
sbb
sub
outsb
call
push
jbe
insl
or
mov
pop
or
das
mov
add
pop
adc
pop
xorb
imul
shrl
adc
inc
push
mov
ja
outsl
js
add
bndldx
negb
les
xor
inc
adc
sub
stos
xor
jae
movsb
adc
test
dec
push
fucomi
fwait
orl
sbb
lds
sbb
out
mov
pop
xchg
mov
shl
dec
shll
je
add
inc
xchg
repnz
ljmp
test
decb
mov
inc
clc
pop
stos
add
lds
jne
or
lock
xor
cmp
inc
jns
sbb
popa
mov
xchg
aaa
dec
inc
or
aaa
push
clc
mov
sub
shr
push
sbbb
clc
incl
out
out
ret
mov
push
out
xchg
inc
cld
lock
xchg
scas
mov
iret
dec
jne
je
add
dec
loope
add
dec
dec
jl
or
add
inc
fs
inc
sub
mov
inc
mov
lock
aad
jg
cmp
inc
jne
or
lds
dec
loopne
ljmp
or
jl
or
adc
mov
xlat
sub
pop
shr
and
dec
cld
push
dec
cmp
add
add
adc
cmp
ret
int3
inc
jno
mov
cmp
pop
push
cmp
jbe
add
mov
lock
pop
xor
test
pop
inc
stc
sbb
clc
rolb
movsb
add
pop
add
cmp
nop
sbb
lcall
and
add
shrb
into
add
xchg
pop
adc
adc
pushf
out
pop
sti
sar
dec
mov
cs
fstpl
mov
sbb
add
adc
imul
pop
rcll
push
pop
adc
call
sub
adc
js
jmp
add
jmp
aaa
js
test
push
test
iret
push
cmpsl
insl
or
insb
xor
add
xchg
mov
push
sub
sub
cmp
inc
or
mov
sub
pop
xor
push
js
cmp
sar
dec
jp
cmp
pop
or
add
ret
pop
cmp
xor
cmp
jns
add
push
mov
ret
fisttps
mov
sbb
fbstp
cmp
dec
ficoms
add
lock
loope
lea
mov
mov
jbe
add
mov
push
cmp
shlb
lods
decb
into
mov
out
cmp
jo
xor
jns
dec
dec
sbb
sbb
out
adc
jno
jp
insb
out
lock
lods
pop
and
cld
call
push
dec
push
push
push
jge
shll
xor
out
adc
icebp
inc
inc
out
or
loopne
es
dec
or
inc
pop
cs
nop
cmp
and
decb
xlat
jne
add
div
outsb
add
fdivs
push
jne
mov
xor
fnstenv
jmp
jnp
imul
mov
jae
xor
aaa
decb
je
lock
mov
loope
out
nop
or
lcall
sbb
cmp
je
mov
dec
sbb
and
aas
cmp
outsb
inc
mov
xorl
jne
mov
xor
cmp
push
xchg
nop
fsts
pop
and
out
repz
mov
cld
mov
enter
adc
outsb
adc
cmp
leave
inc
test
inc
push
pushf
mov
sub
jno
mov
jle
mov
mov
add
popf
lcall
iret
icebp
push
cmp
test
out
push
and
pop
mov
decb
jne
in
hlt
andb
repnz
jmp
jp
cltd
sub
mov
loopne
mull
or
and
mov
jns
jp
jge
push
stos
xor
mov
push
or
das
pop
sbb
sub
jge
ds
insb
add
mov
cmp
or
sub
push
in
jb
push
push
mov
or
sub
or
mov
rcrb
shrl
stos
xor
ds
jne
cmp
into
imul
cmc
push
ds
sbb
jo
leave
js
lock
repnz
jnp
mov
sbb
loopne
or
testl
jb
or
xorl
or
or
inc
pop
jmp
xor
jbe
adc
insl
mov
aas
push
pavgw
fs
ret
inc
add
add
push
cwtl
and
and
and
xor
aas
nop
mov
andb
add
repz
or
rol
push
call
jnp
in
addl
jbe
sbb
out
cmp
push
mov
inc
dec
push
icebp
insb
test
popa
adc
ficomps
adc
or
inc
push
out
loope
inc
dec
add
or
scas
fcoms
push
int
iret
out
xchg
inc
add
push
push
and
adc
pop
add
dec
pop
fdivs
xor
lahf
pushl
orl
leave
xor
adc
in
jne
push
and
sbb
mov
std
pop
dec
cmp
sub
sub
adc
inc
xlat
lret
fadd
jne
inc
js
push
sbbl
pop
lds
mov
jge
mov
repnz
xchg
nop
push
insb
dec
or
and
jo
adc
insb
int3
push
mov
sbb
loopne
fbstp
jg
xor
dec
push
ret
add
and
test
js
jne
daa
into
sub
inc
fmull
inc
aas
xor
nop
pusha
push
or
jns
dec
and
jae
test
push
pop
stc
add
mov
call
dec
aam
hlt
mov
test
push
jns
xor
jne
sbbb
xchg
lds
jge
jmp
xchg
add
or
add
movsb
in
add
test
cmp
mov
mov
xchg
cmc
cmp
mov
test
xchg
imul
lea
adc
test
enter
pop
push
xchg
loopne
lcall
mov
or
iret
rolb
add
and
add
std
cmp
dec
xor
adc
jmp
push
xchg
adc
xchg
insl
xor
ret
pop
add
sbb
xchg
arpl
stc
fsubrl
mov
pop
rol
lea
sbb
dec
dec
sahf
cmp
sahf
cmp
sbb
nop
outsl
int
fidivrs
sub
mov
pushf
fistpll
insb
ret
cwtl
add
jne
jp
or
scas
pop
adc
and
jmp
sbb
jg
adc
das
inc
cmp
xor
shlb
cmpsl
cmp
in
or
push
cs
inc
push
jmp
int3
les
std
scas
movsb
rorb
xor
imul
shll
lea
and
in
es
nop
sbb
dec
in
mov
ret
xor
dec
nop
sub
lahf
call
enter
inc
leave
adc
mov
enter
mov
jb
jns
lcall
dec
fmulp
call
inc
sub
pusha
push
xchg
call
xchg
inc
push
jns
mov
adc
xchg
addr16
add
mov
mov
fwait
data16
push
fcmovbe
sub
std
push
test
pop
es
add
popf
or
mov
into
rep
push
hlt
xchg
xchg
push
lods
and
lods
add
cltd
bound
nop
add
sub
in
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
xchg
repnz
insb
js
mov
sysret
push
xor
insb
push
mov
cmpsb
iret
sarl
add
movsb
push
mov
xor
movsl
inc
xchg
xor
or
cmp
xor
test
lea
aas
sub
mov
iret
lret
mov
push
push
push
mov
xor
sub
jne
sub
pop
sarb
dec
push
rcll
pop
inc
mov
add
xor
or
and
sbbb
jmp
mov
push
lods
pop
incl
mov
sbb
mov
mov
push
dec
inc
adc
mov
push
adc
inc
and
mov
mov
lds
or
decb
cmp
add
add
or
cmp
and
jns
sbbl
inc
mov
adc
out
xchg
mov
ret
jne
mov
and
ror
xchg
mov
ret
xchg
cmp
add
imul
fstpl
call
lds
or
in
mov
add
or
rolb
or
push
fists
call
add
insb
mov
add
cmp
add
jne
inc
cmpsl
adc
or
push
aaa
inc
cld
push
ds
or
pop
and
dec
cmp
call
push
adc
adc
int3
add
mov
sub
push
or
shll
enter
pop
cmp
jae
sarl
sub
and
shll
stc
cli
push
shll
dec
test
xor
xchg
jno
in
pop
mov
lret
outsl
jmp
je
pop
sbb
add
mov
push
jmp
outsb
cmp
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
das
or
insb
inc
fmul
icebp
dec
sbb
fisubl
sbbl
pop
loopne
fldl
or
fldl
or
or
aad
enter
movsb
lcall
push
leave
pop
in
mov
fsubrp
cltd
jo
push
dec
mov
fwait
mov
cmp
das
fidivrl
xchg
cmp
sub
je
dec
je
add
lods
adc
and
sbb
sti
fldcw
mov
sub
sbb
fucomi
test
lahf
mov
pop
fdivs
sbb
sub
dec
js
rcrl
stc
fwait
add
or
aas
jmp
inc
add
jno
sahf
lret
mov
mov
pushf
cld
lock
jno
pop
cmp
mov
adc
pop
push
call
test
cmp
push
push
and
push
roll
jne
das
and
inc
lock
pop
push
cmp
fs
jl
out
jbe
or
out
jmp
mov
test
pusha
imul
adc
sahf
fnstcw
mov
push
sbb
or
lahf
add
push
arpl
fisttpl
xor
aaa
mov
jne
ds
and
sub
xchg
cmp
or
sbb
jp
push
push
xchg
jmp
mov
faddl
sti
ja
adc
and
or
aas
test
scas
cli
clc
push
fmull
bound
sti
iret
mov
cmp
test
jne
push
push
xorl
fnstcw
testb
xor
add
mov
adcb
pop
ljmp
adc
sbb
add
push
or
push
mov
dec
fs
adc
pop
gs
push
mov
js
or
pop
sbb
add
mov
fsubrl
xchg
lret
test
sbb
sarb
das
cmp
mov
lods
std
mov
jecxz
arpl
testb
pop
mov
push
sub
les
clc
mov
pop
rol
add
lret
mov
fisubs
and
jne
lret
clc
push
jmp
pop
sar
lcall
testb
repnz
jbe
cmp
stc
mov
iret
movsl
sbb
mov
iret
xchg
out
test
inc
pop
push
inc
sub
popf
loop
or
mov
repnz
ja
adc
mov
adc
adc
jbe
fadds
fnstenv
jb
xchg
std
lods
fld
mov
mov
leave
rorb
cmp
daa
xchg
daa
and
into
aad
dec
push
and
or
add
xchg
xor
add
cld
adc
mov
cmp
hlt
cmp
stc
or
xor
mov
push
xor
in
and
mov
fldt
dec
je
imul
inc
or
sbbl
push
cmp
sub
pop
aad
pushl
adc
and
sbb
and
test
xor
pop
lret
cmp
inc
xor
or
adc
out
push
imul
int
lds
push
lcall
loopne
test
and
ret
fwait
xchg
shll
test
in
insl
adc
xchg
mov
subl
jno
cmpsb
lret
pop
loope
jns
call
addb
lods
gs
pop
shll
lcall
add
pop
das
into
push
inc
cmp
jle
jne
in
mov
push
inc
jne
popa
testl
cwtl
add
fs
jne
xor
in
jno
stc
mov
rcr
jg
testl
dec
shr
mov
mov
mov
push
pop
sbb
fcmovbe
jns
xlat
loopne
mov
mov
sahf
add
inc
loopne
cmp
dec
and
in
enter
sti
or
pop
enter
dec
shr
mov
sub
scas
addl
sub
mov
mov
xor
pop
pop
and
fcompl
je
neg
pop
jo
or
insb
inc
or
imul
cld
or
jg
std
scas
cld
sti
inc
repnz
jecxz
xor
mov
sbb
shll
jg
std
aaa
addr16
lret
das
lock
fdivr
fdivl
xor
imul
jbe
and
shl
jmp
jmp
adc
ror
inc
shlb
lret
inc
add
andb
pop
jb
mov
lods
rcll
std
aas
mov
mov
push
mov
push
dec
mov
sbb
lcall
push
xor
std
inc
mov
ret
pop
xor
neg
sub
xchg
test
std
out
imul
lods
into
sbb
dec
mov
cmp
clc
xor
orb
pop
mov
std
mov
lret
inc
movb
mov
xchg
std
out
imul
add
push
dec
adc
test
into
pop
pushf
adc
lods
push
cwtl
dec
xor
sbb
adc
into
inc
insl
sbb
sub
leave
addr16
mov
push
cmp
cmp
fs
and
inc
push
call
std
and
inc
xor
shrl
test
pop
test
leave
and
mov
jne
cmp
jbe
jp
popa
mov
fdivrp
xor
into
jp
mov
dec
cs
and
je
sub
das
in
push
test
sub
jmp
and
test
cmc
push
sub
std
pop
lock
lods
cmpsl
mov
sub
cmc
int
sbb
jmp
adc
and
out
mov
jge
int3
cmp
cmc
loope
or
pop
cmpsl
test
cmpsb
aaa
dec
add
rolb
jle
push
mov
test
jns
lock
sub
jae
dec
cmpl
pushfw
inc
fbstp
bound
cmpsl
add
push
movsb
adc
sub
cmpsb
divl
loopne
push
inc
lret
jne
cmp
xchg
cmp
add
dec
hlt
or
jp
jne
fdivr
dec
jl
add
push
dec
pop
jno
push
xchg
push
je
inc
dec
mov
adc
cmp
mov
jo
aaa
fsubrl
out
lea
nop
mov
sti
xchg
in
push
adc
cwtl
out
jns
adc
ds
insl
xor
mov
rorl
push
iret
shll
and
adc
sbb
fidivs
pop
pop
dec
push
cmp
jb
xor
add
mov
and
cmp
xor
push
loopne
aad
lret
cmp
push
adc
pushl
xlat
adc
sub
cmp
ja
out
xchg
mov
or
mov
or
add
mov
loope
repz
ljmp
mov
and
sub
add
push
pop
cmpsb
lods
inc
repz
add
jb
aad
xor
test
out
test
stc
inc
enter
scas
movsl
call
add
call
mov
cmc
pop
jb
xchg
adc
cmp
and
mov
and
into
enter
mov
iret
inc
imul
lea
ss
mov
sub
push
stc
mov
jb
mov
xor
repz
xchg
or
movsb
xor
pushf
inc
mov
and
bound
test
mov
mov
test
dec
dec
cmpl
sti
inc
lea
pop
std
in
push
cmp
and
and
in
sbb
mov
nop
mov
insb
dec
cmpsl
add
mov
mov
mov
inc
es
inc
stos
popa
pusha
imul
pushf
pop
repz
xchg
pushf
pop
arpl
adc
addr16
mov
fisubrs
xchg
mov
jl
mov
pushf
mov
mov
or
xchg
xchg
adc
sbb
icebp
leave
add
or
add
movsb
bound
dec
call
leave
adc
repz
test
leave
test
inc
scas
nop
mov
xchg
pushf
pushf
nop
nop
add
nop
pushf
inc
push
cmp
cmp
cmp
fiaddl
jo
addr16
dec
icebp
sub
adc
add
aaa
shrl
dec
lds
ret
push
adc
insl
add
cmp
cs
lea
cmp
xchg
movsl
iret
mov
pop
sub
or
mov
fwait
shlb
or
in
gs
mov
mov
mov
sbb
pusha
mov
add
push
inc
dec
dec
pop
sbb
push
sbb
inc
aaa
sbb
shll
jecxz
jmp
push
mov
pop
adc
sub
jne
push
lds
cmp
cmpsl
xor
mov
xchg
jb
int
adc
mov
add
cmp
sarl
xor
movb
push
dec
adc
push
insl
imul
clc
mov
jbe
mov
jno
test
pusha
divl
adc
fsts
aas
mov
cmp
je
cmpsl
mov
sbb
cmpsb
icebp
xor
loopne
xchg
and
jle
push
dec
pop
fsubs
pop
sub
mov
mov
push
mov
shll
fucomip
stos
bound
insb
loopne
mov
and
or
or
and
les
and
cs
lods
or
out
mov
sub
mov
movl
or
pushf
xor
adc
lock
push
gs
les
xor
and
addr16
enter
iret
adc
imul
xchg
test
add
mov
sub
insb
adc
or
xchg
mul
inc
push
add
je
hlt
daa
clc
inc
push
popa
lcall
inc
testl
cmpsb
jmp
cmp
pop
test
test
cmc
les
xlat
inc
ljmp
mov
dec
in
pop
shlb
jae
sub
add
shrl
or
movsb
fcomi
push
inc
push
lock
fs
and
inc
push
pop
push
push
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
rclb
adc
inc
inc
adc
neg
dec
fcmovu
lret
scas
mov
fxch
lea
loop
jge
and
add
ja
or
dec
into
xchg
pop
inc
sub
pop
jmp
xbegin
inc
repz
movb
mov
movb
push
adc
and
inc
jmp
push
inc
bound
inc
or
insb
and
in
push
and
in
mov
and
sahf
sbbb
xchg
scas
and
movsb
lsl
sbb
or
adc
xor
push
xchg
and
dec
pop
pusha
pusha
xchg
add
ret
les
sbb
and
pop
adc
adc
popa
and
lcall
lock
adc
dec
or
inc
mov
mov
out
mov
xchg
sete
dec
sbb
xchg
dec
add
daa
jecxz
fld
fidivrs
jne
lea
push
jno
xchg
jb
jae
pop
or
adc
mov
test
loop
sub
test
ret
mov
mov
add
dec
inc
sahf
testb
and
xchg
popf
out
adc
dec
cmp
cwtl
or
mov
mov
xchg
push
cmp
push
pop
arpl
inc
inc
push
fnsave
jno
pusha
and
jl
addl
mov
ficoml
test
sbb
subb
mov
sub
in
test
push
pop
test
xlat
xchg
add
roll
orl
cmp
push
pop
dec
js
xor
fbld
sub
fidivl
add
add
add
movsb
rorb
jb
in
or
stos
add
cmp
dec
lea
ret
inc
push
loope
fs
loopne
lods
add
mov
xor
fucomp
ret
movsb
shlb
push
sbb
leave
lods
arpl
loopne
test
inc
cmp
or
cltd
lock
mov
aas
cmp
fsubr
imul
cmp
repz
xchg
pop
hlt
lea
and
cld
add
les
jecxz
test
inc
outsb
movsb
and
hlt
inc
rorl
and
dec
orl
or
adc
jecxz
iret
mov
cmp
or
push
ret
shl
push
adc
test
lret
clc
xchg
ret
stc
xor
inc
iret
xor
mov
mov
ss
push
xor
add
sub
out
jne
inc
sbb
je
or
test
push
out
cmp
je
ss
out
and
and
faddl
aam
xchg
ja
mov
pop
addr16
outsb
or
push
test
xchg
cld
pop
ret
push
rcrl
push
push
and
out
std
sbb
lds
xor
sub
iret
push
mov
jae
inc
or
unpcklps
sbb
repnz
aam
mov
lea
fmull
cmp
or
out
sub
inc
jmp
push
das
inc
cmp
roll
loop
xor
mov
adc
pop
jne
adc
lods
push
addl
or
push
movsb
and
mov
adc
or
jp
xchg
sti
jb
inc
sub
or
popf
lahf
sub
jne
ret
rcrb
mov
loopne
lock
sub
cmc
xchg
mov
push
sub
pop
test
xchg
sbb
sub
add
pop
jbe
test
and
and
mov
and
push
pop
mov
pusha
arpl
lret
pop
rcrb
imul
or
fiaddl
in
dec
inc
mov
imul
ret
push
or
xor
add
lea
push
aaa
je
push
lret
and
mov
outsb
sub
and
add
popf
mov
pusha
adc
add
adc
mov
cmp
test
imul
subl
mov
add
and
sarl
call
mov
mov
mov
sbbl
pop
orl
push
test
cmp
sbb
cs
popl
push
cmp
jne
adc
lock
pusha
jmp
leave
push
sbb
xchg
or
into
pusha
mov
je
and
dec
mov
push
dec
lods
push
inc
xlat
out
loope
add
cmp
div
imul
shl
mov
ret
je
and
hlt
add
pop
pop
xor
xchg
push
xor
xor
mov
rclb
cltd
push
sti
or
mov
mov
push
or
xchg
fchs
cltd
fs
ss
inc
mov
ja
mov
lret
dec
or
jmp
xchg
add
pop
imul
je
dec
je
scas
je
bound
xchg
push
push
mov
jmp
push
or
add
cli
cmp
pop
fdivrl
jno
dec
sbb
cmp
les
push
call
ret
add
scas
xor
outsb
add
sarl
dec
mov
mov
jne,pn
sbb
fnstsw
movl
fwait
sub
fsubr
out
xchg
mov
cmp
jge
mov
mov
and
push
push
or
inc
xchg
mov
mov
ja
push
pop
dec
or
dec
jmp
shlb
loope
popa
insb
insb
and
pop
stc
test
aaa
xor
adc
adc
cmp
lret
push
in
jecxz
add
arpl
pop
movb
clc
mov
mov
int3
sbb
xor
fildl
push
cmpsb
popa
mov
sti
adcb
sub
push
out
jbe
cmp
bound
and
cmp
clc
mov
sub
push
add
imul
mov
movsb
mov
mov
ja
hlt
popa
jmp
and
jo
imul
and
or
inc
in
arpl
rcll
dec
ret
sub
sbb
mov
call
cmp
cmp
xchg
lock
push
inc
inc
pop
mov
push
ret
push
in
sahf
cmc
fnstcw
rcll
lret
subl
inc
popa
cmp
or
xor
push
imul
mov
and
cmp
ljmp
aaa
and
adc
daa
or
mov
ret
dec
add
lods
in
lcall
rcl
fsubr
mov
jb
add
add
push
or
in
fcomps
aaa
aad
adc
mov
inc
and
cmp
or
or
xchg
inc
pop
mov
push
scas
inc
mov
adc
sub
mov
or
inc
mov
pop
and
adc
jg
xchg
lods
movsb
or
xchg
add
inc
inc
xor
fcoms
in
loop
ja
cmp
or
jl
ss
jmp
xor
nop
xchg
les
pop
inc
inc
adc
add
inc
xchg
inc
inc
inc
pop
je
ficompl
mov
dec
test
out
and
mov
pop
jb
push
mov
and
outsb
mov
pop
inc
dec
stc
add
fiaddl
adc
xor
xchg
inc
mov
add
stos
inc
loopne
and
cli
cmp
or
mov
inc
mov
sarb
inc
add
sarb
pop
rclb
pop
add
popa
adc
jo
pop
cmc
cwtl
xchg
test
push
xor
cmp
outsb
test
insb
inc
ja
xchg
movsb
lds
mov
xorl
fcoms
mov
iret
xor
and
and
jae
mov
xor
shl
ucomiss
lods
cmpsb
into
ss
sub
mov
mov
sub
push
push
addl
hlt
cmp
clc
or
push
popl
test
mov
inc
or
loop
add
sbb
cmp
and
push
dec
add
jo
or
xchg
stc
call
rcl
push
mov
loopne
cmp
dec
sbb
or
jne
repnz
cmp
jge
cmp
push
sar
xchg
push
xchg
adc
in
das
mov
fnstenv
pop
clc
rorb
xor
sbb
addr16
mov
mov
xchg
mov
jmp
push
inc
inc
and
insb
loope
leave
cmpb
jbe
and
imulb
out
int
xchg
push
stos
lock
xchg
addb
lods
jo
sar
pop
shll
imul
and
lea
xchg
push
adc
scas
jg
inc
push
pop
push
dec
push
push
adc
xchg
clc
or
or
add
fwait
outsl
cmp
or
push
and
cmpsl
sbb
cmp
inc
mov
outsb
add
jge
mov
cmp
mov
mov
nop
hlt
stos
inc
cmp
mov
cmpsl
mov
or
adc
rorb
rorb
outsb
lock
and
jle
and
andb
cmp
daa
adc
and
sar
sarb
jg
popf
pusha
push
xchg
xchg
push
lcall
shr
push
push
mov
inc
pop
xor
dec
jp
push
xchg
pop
mov
xchg
jg
mov
add
out
add
rcrl
dec
cs
in
and
repz
mov
inc
or
inc
adcl
inc
add
xchg
inc
loope
mov
addl
lahf
or
orb
movb
push
pop
sbb
ret
dec
rol
add
popf
mov
push
cli
or
inc
in
push
aaa
xor
ds
insb
sahf
aad
add
clc
push
shrl
add
or
je
arpl
aaa
and
sub
inc
jle
jl
popf
jbe
scas
pusha
notb
movsl
or
or
dec
sub
cmp
out
mov
xor
shlb
and
out
push
xlat
cs
fwait
xchg
cmpsb
cmp
xor
push
shrb
lock
mov
add
or
adc
push
loopne
or
xor
not
push
shll
mov
add
enter
aaa
cmp
mov
and
jb
rcrl
add
lods
add
and
sub
into
xchg
push
fwait
or
push
orb
imul
movsb
shl
jg
sub
adc
and
inc
push
cmp
jo
test
je
dec
ss
or
ret
xchg
dec
adc
orb
cli
loop
add
loope
cmp
dec
shll
inc
jmp
loop
push
sub
fcoms
aad
or
or
lock
out
inc
add
stos
ss
neg
xorl
lock
push
rclb
pushf
out
inc
xchg
dec
or
ljmp
enter
aam
xor
clc
loopne
xchg
mov
xchg
mov
pop
sbb
stc
sbb
adc
push
mov
xor
jae
jns
xor
cmp
add
test
xchg
xorb
int3
sbb
jmp
pushl
mov
sub
daa
int
mov
adc
and
daa
mov
mov
fsubrp
daa
mov
add
inc
adc
jns
lret
jae
inc
jo
xor
push
mov
in
jl
lds
addb
repnz
test
xchg
pushf
sub
hlt
adc
pop
push
je
pop
mov
loop
or
inc
jns
push
mov
stc
pop
adc
repz
outsl
push
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
ds
push
jbe
jle
pushf
outsl
sbb
push
test
sub
out
sbb
hlt
call
adc
mov
ret
mov
xchg
cmp
out
mov
push
dec
test
into
and
call
ljmp
xchg
adc
push
sahf
dec
test
jl
xor
cli
lcall
clc
in
lock
rep
mov
push
aaa
or
rcll
in
in
mov
mov
mov
and
or
shrb
cmpsb
jmp
pop
sub
pop
rorl
jle
add
mov
hlt
push
jecxz
add
jp
cmp
add
push
inc
or
bound
movsl
mov
sti
or
mov
lret
lock
pop
gs
and
leave
or
sub
jo
sarb
aam
sbb
and
pop
dec
stos
or
repz
in
fsincos
or
sbbl
ret
sarb
mov
in
lods
enter
imul
mov
add
jl
pop
push
js
xor
push
push
inc
fsubr
mov
mov
and
mov
pop
add
pop
mov
dec
mov
xor
mov
aas
add
jmp
fsubl
sahf
lods
mov
es
adc
adc
out
or
sarb
jbe
push
test
aam
sarb
ret
aas
addr16
sub
sbb
add
and
pop
mov
push
push
push
push
test
nop
int3
lret
cmp
daa
add
xlat
mov
into
jne
in
pop
aas
jmp
xchg
test
adc
outsl
jo
sub
push
stc
mov
adc
inc
add
sub
sbb
add
fadds
fcoml
lcall
push
inc
jnp
sub
sbb
fs
push
faddl
enter
dec
fs
rorb
jl
and
or
rclb
insl
in
and
lcall
jl
cmp
jg
inc
jmp
in
movsl
and
jbe
stos
rolb
jne
imul
mov
jge
aas
sbb
mov
xor
or
add
loopne
rcr
fsubs
popa
sbb
adc
jle
sahf
loope
mov
mov
inc
mov
adc
addr16
sub
cmp
fwait
sbb
push
ja
cld
and
shr
mov
or
inc
push
pop
and
or
popa
and
or
xor
jae
faddl
adc
push
sbb
movl
mov
inc
cli
inc
addl
or
aas
fisubrs
xor
or
xlat
xchg
mov
std
and
push
add
pop
or
push
cmp
ljmp
fistl
rcl
cmp
dec
dec
inc
loopne
adc
pusha
mov
sub
mov
and
inc
negl
add
mov
and
es
shll
cld
es
sarb
jae
inc
sbb
insl
add
cmp
fmuls
call
cmp
jl
xor
popf
fmul
add
mov
fs
adc
pop
inc
cltd
adc
mov
pushl
jmp
xchg
jecxz
add
in
cwtl
inc
add
pop
and
out
out
jmp
adc
cmpsl
jmp
and
adc
sub
mov
cmp
mov
fiaddl
cmp
adc
cmpsl
test
inc
sbb
icebp
orb
mov
mov
dec
sbbl
xchg
dec
dec
cmp
movsl
cmp
mov
or
je
add
sbb
jg
outsl
dec
cmpb
cmp
or
lret
ret
cmp
add
xchg
les
push
jl
push
add
sbb
mov
or
add
add
movsl
xchg
outsb
add
aaa
fidivrs
aas
add
sarb
ror
cmp
add
sbb
mov
jle
jp
add
jno
or
bound
push
push
adc
push
test
mov
fistpll
or
mov
stos
rcrb
cltd
xchg
sub
pop
pop
add
pop
jl
mov
sub
xor
mov
xchg
xchg
mov
fstl
push
call
loop
fsubs
or
sub
inc
or
sbb
lods
and
mov
gs
add
popa
add
sbb
dec
loope
and
mov
loope
sbb
fstl
aaa
mov
xor
inc
inc
push
clc
push
pushf
test
add
jmp
mov
es
mov
arpl
mov
pop
cmp
ret
xchg
dec
or
lret
cmp
jae
cmp
inc
pop
mov
outsl
add
mov
dec
ror
mov
push
fdiv
xchg
sub
mov
mov
adc
add
xor
jl
jl
and
and
push
push
sbb
scas
rcrb
rolb
add
mov
ret
push
pop
cmp
sub
movsb
push
mov
inc
push
scas
out
ret
pop
dec
out
nop
loope
jo
arpl
mov
pop
push
mov
mov
imul
or
test
pop
add
and
xor
jb
mov
or
and
adc
loop
xor
dec
and
pop
test
sbb
push
dec
loopew
mov
push
pop
cmp
loop
pop
je
fucomp
or
stos
cltd
aam
push
add
stos
or
cmpl
push
inc
add
out
dec
enter
cmp
or
je
or
ja
xchg
je
mov
sbb
xor
mov
mov
sbb
pop
bound
shl
add
push
rolb
xchg
jmp
push
jg
sub
cmp
jo
repnz
or
cmp
nop
pop
adc
adc
adc
outsl
popa
leave
jecxz
movsb
push
dec
or
xor
xchg
ja
fadds
jge
push
or
sbb
arpl
loopne
cmp
cmpsl
cmpsb
push
jl
mov
in
fsubrl
and
jne
push
ret
add
xchg
ret
adc
icebp
enter
dec
sub
inc
cs
repz
push
arpl
mov
dec
sub
xchg
jns
pop
inc
pop
in
lahf
or
mov
cmpb
sub
stc
sbb
xchg
push
sbb
pop
cmc
and
add
or
lcall
mov
pop
jge
fwait
cld
and
aad
cmc
mov
mov
inc
cmp
jae
push
cmp
jl
mov
inc
or
dec
adc
mov
shrl
sbb
or
testb
rcrb
clc
push
mov
xor
ljmp
jb
pop
adc
sbb
movsb
sub
adc
loopne
inc
inc
add
mov
mov
mov
dec
add
or
test
enter
fwait
leave
mov
icebp
cmp
push
stos
add
mov
mov
subb
lret
pop
popf
data16
or
repz
cmpsb
pushf
adc
cmc
aas
dec
jmp
mov
xchg
wrmsr
shll
rcll
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
inc
mov
loope
out
add
pop
jle
mov
pop
push
out
mov
or
xor
inc
into
orb
pop
dec
jl
push
stc
push
inc
sbb
jmp
sbb
pop
xchg
add
lock
inc
add
xchg
jne
idivb
jecxz
dec
inc
push
lock
sahf
gs
js
sbb
sbb
cmp
mov
jl
hlt
outsb
add
jle
aam
inc
or
les
and
mov
jbe
add
cli
push
loope
sbb
decl
jecxz
mov
mov
dec
jg
adc
orl
mov
lret
pop
hlt
mov
jno
lods
loopne
xor
or
rol
xor
fadds
test
mov
jae
and
out
pop
std
jb
dec
popa
push
out
push
pop
or
loop
test
ret
test
add
push
pop
jp
adc
repnz
cmpl
dec
or
loopne
fsubs
add
dec
jnp
es
lret
xlat
inc
cmc
sub
ljmp
add
in
nop
inc
popl
jno
mov
call
mov
xlat
je
xorl
repnz
shll
testb
jmp
lock
loop
inc
movsl
sbb
sbbl
mov
mov
sbbl
je
js
cmpl
sub
and
push
cld
pop
adc
daa
mov
push
or
push
in
push
pop
pusha
or
loop
mov
jge
pop
imul
jmp
das
xor
out
push
mov
cmp
inc
dec
and
inc
std
aam
and
outsb
test
pop
mov
les
mov
pop
jmp
add
cmp
xor
adc
cmp
insb
jo
outsb
adc
jne
mov
push
adc
jmp
xor
out
pop
sub
hlt
jo
push
idivb
xchg
cli
adc
in
fistpll
lea
lea
or
clc
add
ret
popa
mov
adc
inc
or
std
in
jmp
popl
or
testb
dec
pop
inc
mov
scas
outsl
mov
or
cwtl
push
pushf
inc
adc
jmp
icebp
loopne
clc
inc
mov
push
mov
dec
sbb
sbb
sub
adc
cmp
loop
mov
xor
ljmp
pop
shr
cmp
xor
inc
cmp
xor
out
int3
push
ret
std
inc
jnp
sub
andb
adc
add
xchg
nop
push
sbb
movsb
popa
iret
mov
fisubl
out
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
xchg
adc
dec
cmp
pushf
fmull
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
imulb
and
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
sbb
sub
sub
adc
and
push
nop
ss
loopne
insl
xchg
xor
lods
pop
sub
jle
or
call
adc
in
adc
orb
es
sbb
movsb
cltd
nop
clc
and
and
test
mov
sub
andb
mov
dec
lret
data16
cltd
mov
xor
enter
jne
inc
loop
aam
rorb
push
jmp
push
pop
mov
and
and
cli
mov
mov
sub
xchg
ret
dec
jb
sbb
shlb
and
hlt
movsb
jne
mov
mov
pop
and
mov
gs
push
xchg
hlt
pop
mov
mov
fldl
dec
or
pop
xchg
xor
dec
inc
mov
adc
jmp
out
push
adc
out
inc
pushf
pop
xor
into
les
inc
ss
les
jl
je
sub
xlat
addb
push
adc
or
repnz
sbb
inc
call
jmp
jbe
cmp
fmuls
in
sbb
inc
imul
pop
int3
or
inc
adc
xchg
add
outsb
in
dec
push
or
sbb
dec
int
std
pusha
pop
je
push
pushf
dec
imul
js
and
push
cmp
pop
xchg
add
cmp
dec
pop
push
add
xor
js
push
stos
fadds
les
adc
xor
repnz
lret
add
repz
repz
push
sbb
aam
outsl
pop
nop
xchg
add
mov
hlt
repnz
lahf
push
dec
pop
push
push
bound
test
sub
test
cmp
aas
or
jmp
xchg
addb
es
js
pop
push
adc
out
and
pop
or
and
mov
or
call
pop
xchg
jmp
ja
mov
adc
inc
sub
test
insb
sbb
adc
test
fistl
mov
cmp
and
pop
mov
mov
push
pop
jmp
inc
test
lea
or
xor
mov
filds
add
loope
es
outsl
or
xor
pusha
add
xchg
add
dec
push
pop
repz
out
insb
imul
push
xchg
sbb
or
movsb
gs
daa
mov
add
xor
xor
in
sbb
push
pop
and
xchg
or
cmp
lcall
daa
jecxz
lock
sub
loope
pop
mov
push
icebp
add
push
and
out
loop
sar
mov
add
sar
mov
or
or
cli
pusha
ss
push
jne
fisttpll
inc
popa
or
mov
and
push
popf
lods
push
adc
add
mov
inc
sbb
mov
ljmp
add
inc
pushl
mov
and
inc
jns
rcl
mov
sahf
into
xchg
dec
repnz
lock
pop
addl
adc
mov
sbb
mov
or
push
addr16
mov
pop
movsb
inc
ja
cmp
in
lods
mov
push
aaa
adc
mov
mov
add
jo
test
jmp
stos
test
mov
pushl
ret
jo
cmp
add
cmp
push
iret
jo
fsubs
push
xchg
aam
cmpsl
pop
cmp
clc
dec
push
clc
loopne
call
jmp
push
dec
inc
mov
add
push
add
cmp
lea
shlb
mov
jnp
rorb
ret
pusha
fcoms
push
inc
mov
out
imul
aas
add
cmp
outsl
dec
or
cmpl
insb
cmpsb
int
push
test
push
or
push
add
jo
inc
mov
cltd
cmp
mov
add
gs
aam
je
xor
jle
add
inc
cmpsl
notl
jmp
inc
js
add
dec
call
push
je
dec
add
or
sub
shl
cmp
sbb
std
cmp
cmp
mov
aam
adc
xor
mov
sbb
dec
add
xchg
sbbb
out
test
adc
lret
iret
sbb
jmp
xchg
jmp
mov
mov
andl
aaa
dec
and
push
cmp
mov
xlat
pushl
adc
cli
or
inc
mov
outsl
cmpsl
mov
adc
cmpl
fmuls
push
icebp
xchg
push
push
and
inc
push
inc
add
adc
daa
jmp
adcl
or
pushl
jl
les
in
in
and
movsl
dec
add
loop
add
xchg
xlat
repnz
inc
lods
push
orl
dec
imul
inc
inc
sbb
or
cmpsl
sarb
xchg
push
bound
pop
add
nop
or
mov
mov
xchg
dec
dec
stc
pop
mov
adc
cmp
add
addr16
js
push
xchg
sub
add
and
addb
test
mov
enter
pop
lock
fwait
jb
or
or
insb
cs
mov
std
xor
imul
fcompl
jns
je
rcll
push
jo
lret
jmp
or
mov
add
mov
pop
or
jbe
test
xorb
xchg
sub
setns
inc
ja
xor
xor
fdivrs
jne
ljmp
loopne
inc
push
ss
jne
divl
fidivrs
in
clc
test
xor
inc
inc
cli
inc
cmpb
mov
and
sbb
cmp
subb
mov
clc
les
pop
and
adc
sbb
fs
mov
and
je
aaa
push
loopne
loope
xor
xor
add
sub
cs
shll
std
mov
scas
incl
dec
loope
lret
mov
mov
mov
xor
aaa
arpl
mov
xor
pop
adc
push
adc
jmp
popa
and
cmp
imul
lahf
ljmp
test
mov
pusha
adc
sub
jmp
sbb
push
pop
pop
inc
sti
ljmp
mov
xor
push
cmc
or
xchg
cwtl
mov
push
mov
imul
sub
and
pop
rolb
push
pop
mov
push
mov
out
lock
push
pushf
cli
sbb
push
jnp
mov
mov
xor
jo
movsb
addr16
sbb
inc
jg
xor
rolb
push
xor
pop
mov
mov
lret
divb
xor
sbb
sub
jp
test
or
orl
and
add
add
and
push
lret
push
loop
lods
pop
mov
and
push
gs
fildll
repz
pop
cmp
lods
mov
mov
xchg
test
pop
xor
dec
hlt
adc
xor
fstpt
addr16
pop
and
or
adc
dec
adc
sub
loope
adc
test
sbb
fnstenv
push
lea
pop
lods
pop
cld
pop
pop
xor
scas
popa
mov
inc
and
jg
mov
and
insb
call
mov
andb
clc
je
or
test
cltd
add
addr16
lcall
mov
mov
bound
adc
insl
int3
mov
mov
sub
mov
jmp
push
imulb
push
shlb
push
fnsave
cmp
mov
cmpb
inc
add
icebp
or
fnstcw
pop
sbb
push
add
or
mov
aaa
xchg
cwtl
and
mov
enter
inc
add
push
movsb
mov
aam
adcl
push
xchg
test
jb
dec
dec
adc
outsb
or
nop
test
push
pop
dec
ljmp
repz
jmp
bound
push
jecxz
mov
mov
loop
jle
loopne
or
jl
mov
or
xchg
ret
pushf
movsl
sbb
push
sbbl
jmp
movsl
cmp
and
pop
add
push
pushf
sub
sbbb
push
sbb
xor
jmp
nop
es
push
sbb
daa
js
sub
rclb
xor
mov
push
cmp
or
sbb
mov
nop
fidivs
push
mov
addb
loope
fsubs
jbe
stc
pushf
sti
out
in
mov
nop
sti
adc
mov
jbe
mov
das
mov
xchg
arpl
insb
dec
push
dec
loop
in
pop
mov
jnp
out
cmp
pop
out
loopne
inc
dec
cmp
sahf
or
sbb
scas
fs
sub
sub
push
push
adcb
testb
sub
or
mov
scas
xor
adc
dec
cmp
in
mov
repnz
mov
adc
inc
lret
pop
fwait
and
rorl
les
jmp
jle
mov
adc
mov
sub
add
or
sbb
in
inc
shrl
je
add
jae
jne
or
test
jle
data16
nop
jle
or
jmp
jno
xchg
push
jno
inc
sub
test
push
fiadds
xchg
repz
add
inc
rcrl
test
dec
and
fldt
ror
xor
adc
arpl
mov
mov
daa
or
push
pop
icebp
push
xor
pop
rolb
loop
movsb
hlt
xor
push
popf
pushf
pop
sub
les
shll
popf
ds
cmp
stos
xor
adc
scas
and
mov
clc
pop
imull
je
xchg
and
pop
mov
cmp
adc
inc
add
cmpsl
jns
jp
js
or
or
pop
mov
or
in
jle
pushf
push
or
inc
adc
push
cs
repz
xchg
test
and
sahf
popa
xchg
xchg
add
or
adcl
pushf
std
in
divb
shl
not
xor
loope
xor
and
pop
mov
add
cltd
in
shr
and
and
sbb
adc
sti
test
sbb
test
adc
test
loop
hlt
and
test
xor
mov
xor
js
push
shlb
and
or
sbb
push
and
mov
or
adc
lock
and
mov
mov
movsb
pop
and
aaa
jecxz
fcmovne
int3
pushf
jge
add
or
xchg
adc
int
and
sub
and
jge
add
sbb
loope
sti
sub
and
pop
adc
pusha
mov
push
loope
pop
sub
dec
and
add
fstp
jp
rclb
pop
cmp
add
sbb
fidivs
test
adc
es
adc
sti
mov
testl
fisttps
add
lock
cmc
mov
dec
je
add
dec
jne
orl
scas
jmp
push
mov
stos
je
xchg
add
pop
testl
out
and
or
sbb
xor
pop
sbb
jmp
push
and
inc
add
adc
sub
inc
flds
fldenv
sbb
sub
add
inc
std
out
sbb
and
pop
ret
inc
movsb
cmp
fistl
inc
pop
sub
jl
inc
neg
or
push
jae
nop
xor
ret
mov
sti
lret
xchg
sub
inc
and
shll
aaa
cltd
fs
mov
fcompl
lock
jne
mov
dec
jmp
sub
sub
jmp
sbb
leave
subl
adc
fwait
rclb
inc
incb
add
adc
div
add
lods
test
mov
sbb
mov
pop
test
fstpl
adc
rclb
and
jge
fnsave
repz
fdivl
add
add
repnz
lret
or
repnz
nop
mov
dec
into
mov
push
inc
ss
insl
in
sbb
jp
push
in
jo
lock
cmp
fcompl
pop
mov
push
push
adc
ret
jmp
pop
movsb
sbbb
jo
in
aam
and
xchg
and
mov
jno
push
and
rorb
jne
pop
sub
in
pop
inc
and
jle
push
add
outsb
mov
mov
sbb
mov
test
arpl
or
ret
inc
out
and
dec
jl
push
mov
mulb
movzbl
and
adc
test
popa
inc
xor
fs
dec
sbb
add
icebp
or
push
sbb
sbb
push
inc
jnp
hlt
adc
or
sbb
sub
add
inc
sbb
jp
sbb
out
push
inc
or
ss
mov
outsl
inc
push
or
jno
ficompl
inc
and
push
adc
cmp
or
fimull
or
xchg
adc
or
roll
idivb
scas
adc
mov
or
in
fcmovu
es
imul
lret
mov
inc
pushl
lea
push
or
mov
mov
and
sub
pop
and
xor
and
test
or
add
lods
push
sahf
fnstsw
adc
adc
sbb
add
andl
and
ret
mov
popa
xor
xchg
leave
int3
pop
cld
pop
test
data16
cmc
mov
jbe
loopne
mov
rcrl
xchg
rolb
jne
int3
ds
outsb
mov
sbb
jmp
mov
sbb
ljmp
adc
mov
add
push
pop
fcomps
jmp
mov
mov
xchg
cmp
cwtl
or
push
jnp
pop
aad
mov
pop
or
mov
aad
icebp
sbb
and
mov
gs
or
dec
rcll
stos
inc
add
or
push
out
incb
loop
mov
push
pop
pop
imul
adc
inc
sbb
xor
push
in
sbb
pop
add
sbb
xor
pushf
jbe
sub
ljmp
cmp
sub
dec
aad
mov
or
push
mov
or
sbb
loop
flds
mov
jae
mov
mov
push
or
insl
or
push
mov
add
mov
ja
or
adc
sbb
les
inc
adc
and
push
loope
outsl
jle
call
mov
cmp
xor
push
inc
mov
fsin
mov
shlb
inc
xchg
scas
push
mov
xchg
and
mov
mov
and
jmp
and
or
jbe
mulb
sub
mov
bsr
add
push
add
xor
dec
jge
jbe
dec
jmp
test
and
sti
cmc
mov
pop
data16
ret
test
imul
popf
dec
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
ja
mov
lahf
cmp
and
xor
or
adc
rolb
imul
and
js
adc
test
and
mov
push
mov
ficomps
scas
psubq
xchg
inc
ljmp
popa
sub
add
cld
jle
adc
enter
or
add
loope
leave
mov
outsb
or
cmpsb
mov
in
adc
pop
jne
inc
jne
mov
or
rorb
mov
dec
dec
inc
pop
inc
rorb
inc
xor
cmp
mov
sub
dec
rolb
adc
mov
or
loopne
shlb
test
add
add
jmp
aas
sub
push
test
push
jg
test
push
daa
mov
pop
test
jne
ret
mov
hlt
mov
sub
stos
test
pop
shlb
inc
aam
xor
decb
rorb
add
roll
xor
dec
jns
loop
loopne
pop
dec
fwait
scas
mov
pop
pusha
sub
inc
shl
sub
test
inc
xchg
out
testb
shl
not
test
add
jle
sub
repz
push
cltd
insb
pop
and
ds
out
mov
inc
insb
sub
js
xchg
es
lea
xor
repnz
xchg
nop
or
jb
cmp
xlat
dec
cmp
sbb
cmp
mov
clc
inc
dec
movb
lods
shl
decl
push
mov
sarb
cmp
sub
addl
jge
push
pop
pop
push
lcall
fidivs
add
in
push
or
sti
cmp
dec
dec
stos
inc
adc
dec
or
or
lar
pusha
xor
movsl
cmp
push
sbb
rorl
mov
jg
stos
sub
sub
sub
div
add
pop
popf
je
mov
and
dec
loop
sub
out
push
or
and
lock
test
mov
jl
inc
shl
pop
outsb
sub
pop
sub
sarb
je
push
fs
aam
push
and
jbe
jge
popa
pop
cltd
sbb
in
mov
adc
add
hlt
test
jno
or
mov
cli
sub
push
lea
aam
mov
sub
cmp
comiss
push
fs
push
pop
dec
or
xor
pop
add
orl
lock
or
jecxz
push
aam
loope
cld
rorl
jae
cmp
mov
lods
out
addl
mov
dec
hlt
lea
lock
jl
pop
andl
or
mov
xchg
cs
xor
lea
fimuls
out
and
subb
sub
and
cld
sbb
add
and
jge
and
pusha
and
pop
scas
shl
push
cmp
inc
loop
add
lahf
addb
or
mov
or
cmp
mov
inc
in
orb
loop
stc
xor
outsl
ljmp
pop
xchg
pmulhuw
xchg
stos
sub
and
mov
and
adc
and
nop
xchg
lahf
or
je
sbb
pop
mov
mov
mov
add
add
or
scas
mov
jl
scas
dec
cmp
adc
leave
aad
pop
mov
adc
cwtl
aad
dec
imul
add
movsb
mov
mov
pop
mov
dec
mov
and
sbb
lods
mov
js
stos
test
in
jne
inc
jmp
mov
pop
adc
or
xchg
add
or
mov
enter
cmp
ja
bound
mov
fs
fwait
mov
mov
add
or
fxch
call
or
mov
mov
fldpi
scas
enter
dec
hlt
sbb
push
lock
adc
jmp
cmpsl
mov
fidivl
mov
add
jg
jge
inc
mov
jbe
inc
jle
cmp
add
mov
push
xor
push
roll
dec
push
mov
jne
jbe
lods
mov
sub
loopne
add
push
jmp
lcall
sbb
mov
int
mov
ret
mov
inc
mov
pop
jge
pop
negl
pop
cmp
test
aam
add
movsb
jne
stos
dec
jae
nop
lret
sti
je
jmp
mov
or
imul
jge
jmp
and
outsb
mov
call
sbb
pusha
sbb
pop
push
sub
sahf
and
cmp
in
orl
jmp
add
pop
aas
push
and
scas
mov
xor
mov
jo
test
mov
je,pn
scas
call
mov
mov
test
nop
mov
fldenv
cmp
push
pop
js
adc
add
inc
testl
mov
hlt
pop
push
adc
adc
jne
sbb
fld
testb
and
sub
mov
push
adc
or
jecxz
inc
test
out
add
pushf
jmp
push
cwtl
pop
mov
xor
mov
dec
dec
les
pushf
pop
jnp
jne
xor
xor
int
arpl
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
push
mov
mov
cli
ljmp
cmp
jbe
fs
enter
mov
and
xor
jne
aad
push
inc
out
dec
dec
loop
rolb
pop
adc
pop
push
inc
mov
sbbl
test
das
gs
push
mov
dec
mov
cmp
popa
add
dec
or
fs
sbb
mov
in
mov
lock
and
and
adc
dec
mov
into
nop
sarb
andl
adc
sbb
inc
ja
out
xchg
mov
or
xchg
stos
mov
es
xor
mov
inc
testl
fisttpl
or
jne
test
mov
jne
inc
or
cmp
in
aad
cmp
jne
hlt
int3
add
jne
or
pop
mov
test
pop
inc
rcrl
pop
sub
and
fimull
les
lea
lcall
xchg
or
scas
sbb
cld
bound
sub
icebp
dec
lock
test
test
data16
imul
insl
mov
pushf
sub
lcall
add
stos
xchg
lods
out
lock
push
test
js
mov
aam
gs
fbld
aam
add
or
shr
rcrl
loop
rcll
das
jmp
pop
mov
jg
or
adc
mov
mov
les
ret
adc
mov
std
decl
mov
shrl
shl
shr
or
or
shl
call
xchg
dec
push
ret
jne
insb
mov
mov
push
push
ja
pop
add
and
and
sub
sahf
jge
cmp
mov
pop
add
ficompl
xorb
mov
loopne
in
fiadds
push
call
imulb
fidivl
shlb
pushf
insb
inc
adc
fadd
test
mov
or
ja
orb
dec
insl
add
cmp
sub
add
lret
into
jmp
ret
or
jnp
movsb
dec
and
les
sbb
movsb
int3
test
add
sub
fdivrs
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
ret
or
call
cmp
add
mov
push
push
sub
add
out
sahf
xor
les
or
jle
lods
xorb
or
add
lahf
inc
push
repz
push
sbb
or
aas
pop
scas
inc
pop
jne
cmp
add
shrb
mov
mov
fld
xchg
mov
rorl
sahf
pop
cmp
push
pop
in
inc
cwtl
dec
adc
imulb
adc
inc
cs
or
or
stc
gs
or
clc
jg
inc
xor
mov
dec
cmpb
je
mov
push
idiv
sbb
sbb
add
or
mov
out
push
shlb
fldz
call
sbb
arpl
je
sbb
adc
clc
cmp
imul
rorb
mov
adc
or
lahf
xor
cmc
and
sarl
or
add
pusha
xchg
mulb
popa
adc
and
jmp
and
push
adc
add
mov
test
data16
sub
add
xor
mov
jge
mov
shlb
or
add
jl
popfw
sub
adc
je
mov
loopne
clc
jmp
cmp
stos
and
sbb
mov
jne
movb
dec
lldt
push
xor
add
push
fcmove
icebp
mov
xorb
mov
es
mov
imul
lock
jmp
loop
sbbb
add
and
or
adc
or
cmc
dec
imul
mov
mov
jle
pop
inc
out
cs
xor
add
les
sub
lcall
pushf
push
pop
xchg
cld
xor
push
or
add
push
pop
sub
add
add
stos
or
fcoml
movsl
xor
push
addr16
mov
inc
jle
xor
add
sbb
push
rol
test
sbb
cmp
insb
push
add
addb
jmp
ja
push
ret
jbe
lcall
enter
push
pop
mov
aam
sub
adc
adc
rcrb
mov
or
cmp
xor
inc
enter
insb
xchg
or
pop
mov
jl
xor
andl
addb
inc
and
xchg
add
mov
jle
xorb
inc
es
mov
stos
push
adc
js
jno
imul
pop
xchg
pop
cs
push
fldl2t
call
xor
sub
cmp
xchg
dec
xchg
push
or
fcoml
push
push
inc
sub
pop
adc
cmp
addb
mov
lret
lret
test
cmp
add
stc
outsb
adc
mov
lock
pop
push
out
iret
ss
add
dec
cmp
add
enter
pop
sbb
push
lds
sbb
sub
inc
add
ret
mov
push
mov
push
loopne
js
xchg
and
inc
cltd
dec
inc
xor
leave
and
add
cmpsb
jle
popf
popa
movb
and
sbb
test
popf
dec
mov
orl
neg
sbb
sti
pop
cld
shl
mov
jg
ret
daa
xor
or
jne
pop
mov
sahf
ret
jmp
out
mov
test
dec
inc
sbb
sbb
sub
and
or
lods
or
xor
add
mov
cmp
stos
push
sub
adc
fwait
adc
mov
sbb
les
pop
data16
inc
inc
sbb
lock
lock
add
mov
add
and
lods
enter
outsl
jno
mov
cmp
ss
push
push
cmpsl
clc
mov
mov
mov
stc
xchg
stc
inc
addr16
add
dec
jmp
xchg
clc
sub
mov
inc
and
or
pop
rol
js
inc
call
or
lock
push
mov
inc
xor
sbb
adc
out
inc
ret
out
and
pop
and
sub
sbb
js
loop
adc
push
sub
or
ret
mov
shl
fidivrl
rorl
or
lods
fs
shll
jle
xchg
int3
nop
cmp
add
decb
lock
shll
and
jb
mov
lret
add
inc
xchg
cmp
scas
dec
pop
or
or
nop
add
pop
test
xchg
rclb
stc
jbe
mov
es
sarb
sub
lods
mov
sbb
int
sbb
xchg
push
jne
loop
or
xlat
add
jb
rorb
mull
sub
lcall
call
lea
mov
push
lock
mov
sub
sarb
mov
jne
subb
mov
pusha
adc
popa
push
mov
pop
xor
or
in
test
add
mov
and
adc
add
sub
add
xor
je
push
jb
inc
xor
repz
cmp
mov
push
sub
inc
lret
jbe
daa
aam
ficoms
dec
xchg
rol
dec
rorb
mov
orb
decl
push
push
insl
push
jmp
insl
cmp
mov
xchg
cld
cld
jl
mov
sub
or
pop
inc
mov
pop
sbb
loop
mov
mov
sbb
jns
das
nop
call
clc
gs
inc
je
data16
fwait
outsb
lret
out
sub
inc
popa
je
in
mov
sbb
out
xor
and
pop
dec
xchg
pop
add
call
or
mov
dec
jnp
inc
lods
outsb
repz
inc
mov
das
int
adc
call
jne
fmull
insl
push
mov
in
pop
clc
fstps
or
sub
mov
push
pusha
leave
and
add
pop
js
dec
rol
ret
xor
es
xor
fmull
arpl
icebp
mov
and
mov
loope
out
push
inc
push
rcrb
call
rorb
fmull
sahf
mov
je
sbb
sbb
cmc
cmp
ds
add
sub
push
ss
rol
push
dec
push
mov
dec
loop
jmp
jno
xchg
push
ret
cmp
insb
sub
jo,pt
add
lds
or
cmp
rorb
sar
lahf
mov
mov
push
scas
add
cmpsl
fs
ret
mov
add
cltd
pop
cli
mov
aaa
sub
push
dec
fcmovnu
rorb
je
sub
sub
int
addr16
mov
pop
inc
mov
xchg
jmp
insl
sub
add
mov
mov
cmpl
cmpsb
mov
push
or
push
mov
mov
push
mov
insb
jle,pn
pop
sub
call
or
add
pop
pop
pop
out
rorb
sub
jne
xchg
or
ds
inc
or
sbb
dec
pop
add
lret
mov
or
jbe
jge
dec
fs
pusha
mov
cld
lock
xchg
push
inc
cmp
and
jnp
lahf
int
lock
pop
dec
cmp
das
lea
push
mov
icebp
addl
xchg
xor
nop
add
aaa
mov
xor
jg
xor
dec
rorb
push
push
jmp
or
jmp
test
out
xor
cmp
or
ljmp
xorl
negl
in
arpl
aad
jae
cmp
lea
test
arpl
adc
inc
xchg
add
jo
mov
add
aas
inc
adc
addl
xchg
pop
mov
in
inc
add
or
push
adc
cmpsl
mov
int3
aad
or
cwtl
sbb
jns
push
imul
lea
mov
push
cld
mov
dec
dec
and
mov
jg
mov
push
sbb
jo
push
movsl
add
add
addr16
arpl
rolb
cwtl
push
jp
xchg
push
adc
cmp
lock
or
insb
push
push
xor
xor
jae
pop
and
imul
jo
shl
or
and
xor
pop
push
jge
in
sub
jno
sbb
sbb
cli
lea
orps
das
add
call
sub
cli
xor
and
xor
cld
or
add
daa
sbb
inc
jmp
xor
push
arpl
or
mov
push
and
cmp
inc
test
data16
sub
or
xchg
sub
push
xchg
push
enter
iret
xor
movd
adc
pop
in
cld
jo
loopne
subl
mov
fiadds
cmp
mov
or
not
sarb
mov
inc
in
dec
ljmp
sub
pusha
sbb
adcl
pushf
sub
xchg
mov
dec
lods
xor
xor
test
push
pop
mov
xor
xor
fists
cmp
movsb
lret
push
pop
sub
jmp
lret
repnz
dec
push
mov
rorb
sub
ljmp
adc
adc
push
pop
or
xor
fimuls
nop
adc
xchg
icebp
jo
adc
inc
or
mov
aaa
or
loop
push
pop
incl
lea
scas
xchg
mov
xchg
push
sbb
ret
push
stos
xchg
popa
jae
add
lret
inc
xchg
mov
push
xor
sub
xor
loope
adc
aaa
push
adc
cmp
pushf
ja
sti
and
les
or
xchg
push
and
loop
shr
sbb
mov
in
adc
and
pop
test
add
imulb
ja
dec
or
loopne
xchg
aas
add
sub
cmp
lea
decl
sbb
shll
repz
add
or
dec
add
sub
or
fucomp
fcmovb
jmp
shr
or
mov
add
add
or
bound
pop
push
scas
push
sti
or
pop
js
stos
mov
cmp
sbb
mov
addl
add
bound
add
push
jle
and
jne
clc
fnstcw
inc
cmp
les
inc
dec
add
push
jg
dec
testl
cli
mov
adc
mov
push
mov
sbb
jp
adc
adc
mov
popa
push
dec
test
iret
add
movsb
sbb
stc
out
loopne
jo
inc
jbe
lods
push
xchg
mov
ss
outsb
imul
shr
adc
sbb
notb
or
mov
clc
iret
shl
andl
inc
fcom
sbb
mov
add
fsubs
pushf
clc
stos
negb
push
push
pop
sub
or
test
test
pop
add
test
je
dec
call
test
or
xchg
add
vprotq
cmp
call
or
push
adc
icebp
das
call
mov
cmp
imul
and
push
add
inc
cwtl
je
cmpsl
cmp
cmpsl
and
add
sub
jne
and
fidivrl
jmp
pusha
push
ljmp
sub
dec
push
je
adc
ja
out
mov
mov
adc
cmp
pop
movsb
sub
fnstsw
mov
jle
cld
inc
add
add
or
jle
cmp
or
inc
xor
lret
mov
cmp
lock
jl
cmpb
jl
xor
add
pop
mov
decb
or
lods
xor
add
push
xlat
push
loopne
test
dec
std
inc
nop
adc
inc
push
push
mov
push
push
shlb
iret
lcall
adc
fldcw
and
adc
stos
add
pop
or
sub
ficompl
jne
and
adc
test
add
mov
call
mov
mov
and
enter
xchg
xchg
dec
out
or
test
jne
in
or
jns
sub
mov
xchg
shlb
je
mov
sbb
or
jl
test
or
insb
or
add
rclb
nop
push
cs
movsw
xor
mov
loop
or
outsb
push
sbb
push
xchg
or
inc
push
sub
xchg
outsb
push
pop
xchg
push
ret
lcall
cmp
jge
inc
inc
fidivrs
fdiv
fiaddl
sbb
sbb
cltd
in
adc
sbb
or
int
jne
or
adc
sbb
ss
and
fldcw
fcomi
sbb
enter
adc
sbb
and
or
gs
dec
jns
popa
xchg
jnp
jne
in
scas
or
loop
stc
inc
jae
or
pop
push
icebp
mov
shr
push
ret
loope
shr
aam
cwtl
inc
test
stc
shl
mov
notl
cld
lock
je
divb
lock
pop
shlb
add
and
cwtl
push
xor
imul
fiaddl
pop
pop
nop
adc
jno
inc
dec
dec
scas
inc
adc
lahf
push
aaa
hlt
es
xchg
sarb
mov
gs
int
les
negb
or
into
jbe
jns
aas
push
adc
adc
aam
aam
pop
push
ds
test
out
add
push
or
adc
das
push
pusha
loop
shrl
and
es
mov
add
mov
mov
inc
insl
test
adc
es
gs
enter
mov
or
cmc
dec
add
cs
int3
test
cld
and
test
mov
dec
pushl
dec
fidivs
lock
cmp
jg
in
jge
or
add
ss
ror
jne
hlt
fdivs
adc
testb
lock
test
push
sub
leave
je
and
lfs
inc
mov
mov
je
clc
aas
into
es
mov
je
movsb
and
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
arpl
xchg
xor
idivl
pop
pop
inc
push
xchg
dec
add
push
inc
dec
push
test
ret
loop
add
ja
inc
sahf
addb
pop
call
lea
and
add
mov
sbb
or
jmp
imul
mov
fdivs
push
push
inc
loop
jecxz
cwtl
mov
xor
scas
mov
in
sbbl
jecxz
aaa
iret
mov
lea
test
nop
push
cmp
xor
std
push
pusha
inc
xor
push
ret
push
test
out
and
aad
dec
aaa
pop
mov
sub
jg
pop
pop
mov
aam
dec
xlat
mov
jno
cmp
lods
rorl
push
pop
inc
dec
push
sub
xor
cmp
movsl
dec
xchg
xor
subl
adc
mov
xchg
mov
sti
push
enter
add
shll
or
sbb
adc
andb
inc
mov
imul
mov
push
shl
jns
out
rcl
aad
jns
xlat
fcomp
fstpt
jl
adc
mov
negl
add
and
mov
into
data16
sub
add
xchg
cmp
mov
data16
push
mov
mov
add
push
clc
mov
inc
push
add
test
push
nop
jno
or
mov
divb
in
push
pop
sub
call
sti
sbb
es
push
xor
jnp
sbb
push
push
push
add
popa
add
adcl
jmp
push
pop
push
lcall
mov
imul
or
sbb
dec
lea
sar
inc
inc
xchg
mov
fdivs
adc
adc
neg
lfs
mov
xorl
cwtl
pushf
lock
out
push
sub
sub
aaa
push
adc
mov
add
or
bound
jp
mov
fildl
bound
decl
jbe
add
or
lock
sub
ljmp
testl
into
and
lea
pop
adc
les
sbb
jae
xchg
ja
add
sbbb
add
inc
pop
and
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
fimuls
loope
mov
mov
jne
mov
or
repz
test
rolb
push
mov
or
cmp
loopne
mov
ds
dec
xchg
mov
int
or
cwtl
dec
push
dec
push
mov
movsb
sub
cmp
pop
shr
insb
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
sub
jle
inc
test
enter
mov
push
rolb
sar
or
and
hlt
rorb
adc
pop
dec
push
push
push
lret
cmpsl
mov
movl
lods
or
fs
shrl
mov
out
xchg
mov
or
dec
add
dec
add
iret
and
lods
lock
div
jns
lret
cli
inc
cli
div
xchg
loopne
adc
loop
add
clc
or
add
loopne
pusha
outsl
mov
mov
cwtl
fcmovne
pop
adc
dec
dec
js
ret
sbb
shll
inc
test
and
and
cmpsb
mov
mov
xor
xor
mov
inc
add
cmpsl
out
stos
mov
add
dec
sbb
repnz
pushw
cmp
loop
out
jge
enter
xchg
mulb
jb
inc
push
cld
or
mov
repnz
xor
lods
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
xor
mov
adc
xor
call
test
mov
lea
fcmovu
mov
xor
pop
insl
rorl
push
pushf
inc
add
lods
rolb
jns
adc
add
movsl
add
sbb
and
cmp
negb
mulb
cmp
test
and
sbb
inc
orb
mov
ret
inc
pop
and
sbb
jmp
add
push
adc
in
rcl
and
shll
mov
adc
stos
or
les
scas
adc
fdecstp
adc
inc
add
inc
mov
push
add
push
mov
xchg
call
call
out
adc
pop
jbe
cmpsl
sub
xchg
call
or
or
inc
test
mov
icebp
adc
fcomps
xor
fisubs
loop
data16
inc
imul
icebp
sub
loopne
loopnew
pop
xchg
jo
fsubr
pop
add
mov
mov
mov
push
into
je
push
adc
sub
out
clc
loope
push
pop
sti
and
cmc
lahf
push
xchg
mov
repnz
mov
push
movsl
insb
push
add
sub
into
les
add
sti
out
enter
sub
ret
sbb
push
movsb
xabort
mov
rcll
add
enter
mov
push
shlb
add
idiv
add
daa
shr
mov
add
in
into
test
and
or
mov
inc
ljmp
jmp
dec
inc
ljmp
dec
cmp
jge
sbbb
sub
bound
movb
dec
cmp
popf
xchg
mov
add
add
fadds
dec
mov
inc
cmp
invd
fidivrs
add
or
pop
imul
inc
ret
and
mov
mov
testb
adc
hlt
add
cmpsb
sarb
dec
mov
add
add
pop
stos
xor
add
add
dec
out
adc
inc
mov
mov
vorps
loop
sub
ljmp
fisttps
pop
ficompl
jmp
mov
lea
add
or
push
cltd
and
pop
pop
scas
add
xor
mov
sub
imul
mov
xchg
xchg
or
add
sbb
fisubrl
add
test
inc
pop
mov
mov
sub
sarl
xor
into
pusha
inc
cld
xlat
add
mov
rcrl
in
cltd
lea
mov
ret
js
pop
shll
or
stos
movsb
out
ret
or
js
jo
or
push
ficompl
incb
adc
lret
or
xchg
cmpsb
rclb
add
add
push
or
dec
cmpl
and
sbb
imul
lods
jae
add
or
dec
pop
lahf
mov
add
cmp
cmp
and
and
and
or
xchg
aam
mov
add
lock
ljmp
insl
cld
adcb
mov
cld
sbb
xor
je
ja
or
inc
mov
jg
sub
xor
ret
rcrb
sub
and
aam
out
mov
xchg
scas
pop
mov
and
cmpl
into
or
add
xor
mov
add
add
jbe
jle
idiv
shlb
sub
xor
inc
cmp
jns
jg
into
into
into
mov
enter
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
cmpb
rorb
pop
add
loopne
xor
jp
popf
pop
and
hlt
add
mov
test
addr16
add
or
adc
push
add
or
mov
and
inc
dec
scas
push
imul
or
sub
jmp
lret
leave
dec
in
lret
cwtl
ret
lods
xchg
push
xor
xchg
adc
cmp
push
scas
cltd
fiaddl
sbb
inc
pushf
adc
push
sub
pop
rcll
nop
loope
fmuls
pop
fmul
cmp
sub
adc
cwtl
adc
push
jnp
push
lcall
mov
test
jmp
es
inc
mov
xchg
fimuls
adc
add
xlat
jle
and
daa
or
sbb
int3
sub
adc
jge
shrb
arpl
addr16
ljmp
ljmp
ds
pushf
icebp
fs
shlb
dec
sbb
and
sub
lock
sbb
xor
cmp
cmp
xchg
pop
xor
push
loop
orb
and
adc
sub
mov
mov
loopne
ds
je
push
clc
int
fmulp
rorb
lret
inc
inc
nop
jb
mov
call
jle
xchg
popa
out
leave
rolb
imul
jnp
add
mov
jo
vmread
push
test
into
add
ds
jmp
lahf
gs
fwait
push
or
dec
aam
js
xor
fildll
mov
or
inc
lcall
and
int3
adc
test
mov
rcl
xchg
mov
jne
inc
dec
mov
adc
pusha
imul
add
jns
cmpb
adc
cmpsl
or
and
test
je
test
push
inc
ja
divb
push
push
mov
aam
adc
jno
pop
popf
xchg
mov
push
loopne
cmp
inc
pop
mov
fs
jge
shrl
xor
and
add
dec
sti
push
sbb
push
mov
adc
push
hlt
inc
jmp
in
popf
jbe
fisttpl
inc
sbb
test
jmp
add
in
mov
or
or
lret
xchg
pop
push
imul
dec
mov
lcall
sbb
mov
jae
add
inc
dec
leave
rcll
xor
dec
add
sbb
bound
das
out
aas
or
xor
push
jmp
sbbb
push
scas
sbb
sbb
out
jae
daa
jmp
push
push
xlat
adc
test
jb
or
aad
pop
pushf
sbb
in
lods
fsts
sub
mov
sub
pop
sbb
pop
dec
mov
cmp
dec
inc
add
adcb
pushf
inc
push
jne
push
inc
push
shlb
lods
movsb
sbb
push
adc
lds
jmp
xchg
pop
leave
sub
rorb
add
and
rolb
add
push
fsubrl
push
outsb
inc
add
lldt
in
and
scas
test
clc
xchg
sbb
add
push
adc
xor
repz
mov
mov
or
and
fimuls
jns
cmp
dec
sbb
dec
rcr
and
add
and
test
sbb
xor
or
call
daa
adc
cld
add
clc
pop
inc
cmp
sbb
xor
ss
jbe
mov
int3
fsts
js
adc
repnz
xor
mov
push
pop
iret
fsubs
movsb
lahf
outsl
or
jle
push
jmp
dec
loop
xchg
rcrb
inc
add
jne
out
ss
push
js
sbb
adc
add
loopne
adc
cld
sbb
aaa
aad
leave
inc
js
push
pop
inc
inc
sbb
inc
sar
push
pop
push
das
sbb
insb
jmp
movb
sbb
add
sbb
pop
pusha
shlb
orl
shlb
push
ret
rcl
sub
mov
inc
hlt
xor
sub
sub
push
add
add
adc
push
mov
xchg
pop
testb
and
sbb
inc
inc
and
or
push
push
mov
js
cld
sbb
xchg
mov
or
xor
and
stos
add
sbb
push
mov
scas
add
xchg
pop
int3
sbb
inc
sahf
add
jo
push
daa
push
das
test
inc
push
adc
adc
add
xor
data16
add
mov
or
lods
imul
cmp
in
pop
inc
adc
adc
and
push
xchg
add
pop
mov
cltd
bound
hlt
loope
mov
pop
test
sub
inc
cwtl
ljmp
and
aaa
movsl
push
dec
or
jmp
jp
aas
je
pop
mov
loope
cs
daa
jbe
ret
out
lods
inc
cmp
jmp
fldenv
nop
xor
les
adc
dec
mov
sub
mov
inc
data16
fcomp
adc
test
adc
pop
sbb
mov
dec
xlat
push
xchg
je
and
fsubrs
mov
int3
add
add
jns
mov
mov
lahf
rol
cltd
jmp
push
push
jl
js
inc
dec
or
jnp
lret
sbb
ret
movsb
dec
push
jb
adc
mov
in
in
jb
xchg
pop
jb
in
call
fs
int
insl
mov
loopne
mov
call
leave
mov
cmp
outsl
in
push
in
adc
ja
sarb
jp
fisubrl
es
inc
mov
jp
or
test
ret
in
jp
movsl
cmp
add
lea
or
cmp
int3
xor
jb
es
push
adc
jne
test
jge
or
or
enter
add
psubb
mov
pop
push
jl
test
add
sbb
add
jbe
add
or
pop
add
xchg
add
mov
inc
jne
repnz
xorl
nop
fmul
add
sbbl
xchg
or
push
jg
mov
mov
sbb
jne
pop
outsb
ss
cmp
add
stc
pop
outsb
adc
push
rorl
mov
iret
movsl
jge
in
mov
shrl
push
push
lret
test
or
xor
sbb
gs
cmp
fldt
dec
fdiv
and
shr
subb
and
or
addr16
fnstenv
jb
sub
mov
adcl
dec
call
sbb
xchg
les
jb
fildll
xchg
in
xchg
sarb
jb
fidivl
pop
in
movups
shll
cmpsb
jo
fadds
test
popf
lcall
xor
push
add
xor
in
sub
dec
outsl
jne
lock
add
aad
cmp
cmpl
adc
lock
xchg
in
fbld
enter
inc
cld
or
add
sub
fdivrl
cmp
cmpsb
scas
inc
or
scas
push
add
test
inc
pop
dec
enter
or
aaa
adc
ret
test
je
pop
adc
cwtl
stos
cmp
push
sub
loopne
xchg
imul
aam
and
xchg
in
call
push
add
cmp
leave
roll
sub
sub
jmp
dec
cmpsb
sbb
dec
es
fs
and
cltd
fs
and
xor
fs
dec
cmp
fs
dec
es
dec
fs
sbb
add
cmp
movsb
fwait
sbb
add
fcomps
roll
enter
enter
in
sbb
loopne
ret
push
jb
xor
hlt
xchg
ljmp
xchg
lock
xor
mov
jg
bound
loopne
sti
or
dec
cwtl
fcoms
inc
cmp
imul
insb
fwait
adcb
xchg
aam
xchg
popa
adc
adc
xchg
filds
mov
and
xor
inc
mov
mov
icebp
call
mov
popa
stc
out
add
in
gs
jecxz
addl
add
push
call
mov
mov
in
inc
std
roll
sbb
clc
jg
inc
dec
dec
leave
sbbl
mov
pop
cwtl
aam
lods
rclb
sbb
jg
in
push
sahf
test
adcb
xor
pop
jne
rolb
and
mov
cmpsb
pop
lods
sub
in
mov
andb
cmp
inc
in
xor
nop
push
pop
mov
mov
xlat
mov
pop
leave
lds
in
adc
xor
mov
xchg
inc
enter
mov
adcl
stos
dec
xchg
jbe
push
push
sub
add
adc
mov
dec
insb
out
lock
push
jmp
cwtl
roll
mov
aam
sub
in
adc
and
imul
xchg
sbb
add
xchg
cli
arpl
fwait
mov
push
push
es
xchg
or
int3
out
xchg
data16
sub
inc
adc
in
daa
int
jge
mov
mov
fs
out
adc
or
jnp
jge
adc
fcomp
aam
sub
and
sub
jecxz
nop
and
test
lock
cmp
nop
xlat
test
lods
jb
jb
mov
mov
jb
enter
jne
rcl
add
xchg
popa
cmp
or
inc
lods
pop
inc
mul
ret
xchg
test
sbb
add
xchg
shlb
xlat
dec
add
mov
xchg
mov
out
fmul
adc
or
dec
lods
sbb
rcll
in
aas
pop
push
mov
push
js
and
mov
lock
xchg
fisubrs
jecxz
xchg
dec
ss
ss
adc
int3
xor
adc
push
mov
roll
pop
outsl
fmuls
or
push
clc
xchg
loopne
adc
rcr
call
mov
xlat
mov
in
js
std
fisttpll
sti
enter
xchg
jo
jmp
push
mov
jmp
mov
nop
leave
lahf
movl
xlat
es
sub
adcb
xchg
movsb
pop
insl
sub
push
pop
pop
in
pop
or
or
rcrl
lock
cmp
add
push
mov
ret
out
in
push
call
sub
cs
push
sub
out
push
adc
xchg
pop
outsb
rcrl
xorl
adc
mov
adcb
xchg
pop
out
push
sub
add
out
mov
xchg
fidivrs
dec
mov
shll
lods
adc
and
pop
fimull
cmp
pop
lock
push
mov
push
loopne
and
pop
xchg
inc
ja
jg
mov
enter
cs
adc
cltd
inc
push
jg
mov
dec
xor
subl
push
adc
jne
push
jle
prefetchw
sbb
imul
xchg
lcall
ud0
push
out
aad
hlt
pop
pushf
cmp
movsl
mov
ret
cmp
fidivrl
mov
lock
fs
add
add
lock
subb
pop
rcr
jg
pop
in
mov
call
in
adc
out
xor
xor
test
scas
push
lods
lea
leave
xchg
ds
adc
sub
jb
and
sbb
mov
cmpsl
mov
jnp
pushf
sub
or
inc
push
cmp
or
or
cmp
nop
or
or
loopne
stos
pop
ret
mov
cmpsb
test
popf
daa
in
aaa
mov
dec
dec
xchg
inc
dec
pusha
sahf
inc
imul
lahf
jp
cmp
inc
inc
or
sbb
or
sahf
cmp
shlb
sbb
dec
push
mov
xor
jnp
pop
adc
xor
testb
and
sub
lahf
xchg
mov
stos
je
sub
pop
jb
adc
lahf
das
sub
nop
mov
movsb
push
pop
lods
jl
dec
test
mov
mov
mov
in
aam
add
sbb
les
mov
cwtl
stos
movsb
pop
mov
push
xchg
xor
test
inc
mov
xchg
xchg
cmp
pop
dec
pop
mov
pop
lock
rorl
and
mov
add
or
push
mov
xchg
or
movsb
out
inc
gs
xor
incl
mov
adc
add
clc
scas
rorb
dec
dec
in
sub
pop
je
sub
movsl
movsl
and
rolb
mov
popf
cwtl
xlat
lods
daa
mov
push
pop
mov
int3
enter
daa
sarb
mov
cwtl
push
sub
daa
mov
mov
nop
dec
outsl
movsb
dec
movsl
addb
add
cmc
test
jb
xchg
or
mov
xchg
fsub
mov
ret
push
adcb
in
or
pop
mov
and
imul
int
xchg
test
movsb
adc
int
xchg
nop
jg
sub
enter
popa
mov
cmpsl
fsubl
mov
sub
inc
dec
dec
scas
leave
mov
mov
add
mov
add
jb
xchg
hlt
add
dec
imul
loopne
or
add
sbb
inc
in
les
ss
or
sub
leave
in
cmc
mov
pop
imul
or
xchg
pop
test
sti
adc
sbb
test
push
test
syscall
and
ror
mov
add
add
pop
mov
jnp
jne
and
je
sub
orb
in
call
lock
test
aaa
xchg
insb
je
sub
rclb
xchg
fcmovnbe
mov
pop
pop
mov
sbbb
dec
int3
xor
adc
cmp
cwtl
stos
data16
inc
daa
xchg
xchg
loopne
pop
rolb
fcoms
and
push
in
inc
cmpsb
fadds
push
xor
xorb
or
test
adc
and
push
imul
int3
jae
and
push
add
sti
movsl
or
push
xchg
inc
notl
mov
in
mov
lods
faddl
dec
arpl
xor
mov
pop
insl
rclb
inc
aam
push
sub
orb
mov
push
inc
enter
in
or
int3
aam
enter
in
mov
push
cmp
jmp
mov
fadd
xchg
dec
and
pusha
sar
sbb
and
and
xchg
push
dec
je
dec
mov
sbbb
push
adc
xchg
jmp
rorl
pop
dec
scas
test
and
adc
nop
scas
test
movsb
push
cmp
fnstcw
mov
mov
pop
cmp
adc
and
das
dec
or
ror
nop
fildl
in
call
pop
add
push
nop
sbb
xchg
sti
adc
out
leave
aam
sar
aam
ds
push
sub
or
in
add
sbb
and
test
lock
or
movsb
pop
xchg
cwtl
jne
pushf
rorb
aaa
test
fdivrl
imul
add
in
int3
xchg
adcl
inc
les
mov
or
mov
in
imul
xchg
stos
inc
and
xor
jg
rorl
adc
sarb
scas
mov
test
rorb
lds
mov
sbb
outsl
fildll
inc
test
inc
fiadds
jo
je
add
or
in
and
adc
int3
sbb
or
cmp
ljmp
push
popf
js
pushf
std
mov
aaa
es
and
cwtl
push
iret
dec
adc
insb
test
and
and
rcll
lods
mov
or
jns
and
or
scas
ljmp
jb
pop
inc
pusha
mov
dec
es
in
test
mov
das
sub
fs
popf
sub
xchg
in
outsb
movsl
or
and
les
ja
xchg
imul
mov
mov
pop
xchg
lea
sbb
and
jnp
int3
cwtl
mov
and
add
mov
lahf
or
pusha
pop
sbb
mov
pop
or
shl
mov
lea
xchg
push
jg
das
lods
push
jmp
iret
ret
xchg
loope
dec
or
enter
push
sbb
ja
mov
and
push
add
mov
mov
dec
enter
cwtl
sub
add
popl
add
and
pop
test
adc
sub
mov
mov
lcall
nop
cltd
mov
or
shrb
pop
pop
inc
test
mov
xchg
popf
add
int3
stos
inc
mov
imul
or
call
es
out
call
dec
mov
test
lods
dec
adc
and
dec
pusha
jo
lea
pop
dec
jae
in
push
adc
pusha
out
out
sbb
jecxz
mov
add
rcrb
and
les
les
xor
pop
rorb
or
mov
enter
lods
jo
test
fwait
lcall
popa
push
push
gs
mov
pop
mov
xchg
or
and
and
popa
mov
test
ficoml
mov
movsl
add
push
ss
push
aas
test
movsb
or
mov
push
mov
mov
or
pop
packssdw
nop
inc
dec
insl
and
or
outsb
in
nop
mov
xor
fdivrl
push
test
sbb
fadds
popa
adc
push
or
shrl
enter
push
loop
jne
ret
and
fimuls
aad
adc
xchg
addl
inc
dec
inc
dec
daa
xchg
dec
insl
fucomp
jns
and
sbb
lea
dec
inc
fists
cmp
adc
loop
push
lds
add
xchg
into
shlb
push
dec
pusha
jno
mov
sub
mov
or
jo
call
adc
inc
lods
and
movsl
mov
pop
stos
ret
aad
or
aad
or
add
cmp
sub
imul
pop
add
sub
or
fildll
or
pop
js
shrb
jne
mov
add
mov
fsubrs
and
cmpsb
mov
xchg
xlat
push
xor
les
stos
or
inc
push
mov
pop
lods
jmp
insb
xor
and
inc
insl
fs
cs
imul
in
xorb
movsb
ss
fmull
nop
out
movups
inc
xchg
add
shrb
fs
adc
mov
fisttps
ret
inc
lods
inc
push
mov
mov
jbe
xchg
sbb
cmpl
test
nop
lret
add
mov
add
insl
lcall
enter
fisttps
testl
inc
adc
out
fidivrs
cwtl
in
leave
jo
and
fucomi
sbb
imul
lock
adc
push
lods
int3
jg
leave
or
leave
aas
push
cmp
test
in
push
mov
out
and
cmp
imul
repz
add
or
nop
add
or
or
add
int3
pop
xchg
sbb
inc
lea
mov
lret
pop
rolb
xor
add
and
sbb
mov
sub
mov
arpl
rol
cltd
adcb
rcrb
ret
mov
pushf
jnp
dec
xor
in
cmpsb
dec
repnz
leave
leave
and
andb
jb
nop
dec
cwtl
pusha
cmpsb
fs
in
push
dec
push
sub
fsubr
lock
inc
ss
fdivr
enter
mov
or
xor
int
lret
mov
fsub
int3
jbe
or
mov
and
push
jg
push
xor
add
xor
xchg
or
test
adc
shll
adc
fbstp
movsl
inc
inc
mov
jae
sysenter
andl
push
cltd
sub
and
test
in
mov
stos
ret
imul
enter
std
in
add
cs
ja
test
call
jns
fsubrs
cmp
push
fs
inc
in
gs
mov
add
inc
dec
in
inc
mov
lret
cmpb
outsl
nop
xchg
add
inc
scas
sbb
xchg
bound
pop
das
jns
fs
fildl
or
mov
daa
cwtl
xor
dec
or
adc
cmp
and
out
and
xchg
mov
and
loop
mov
or
je
mov
pop
jo
sub
or
mov
pop
cmp
push
xchg
mov
add
jno
aad
lahf
lea
xchg
dec
jb
cld
adc
ficompl
shrl
jb
push
call
mov
adc
cltd
mov
inc
inc
or
mov
clc
xchg
xchg
adc
shr
mov
rolb
pop
push
xchg
pushl
xor
in
dec
sub
sbb
iret
stos
adc
xor
subl
adc
loopne
ret
fadds
aam
scas
and
lahf
xchg
or
shll
das
bt
lods
aas
mov
push
aam
pop
rorb
loope
adc
jg
lock
inc
rcll
aad
cmp
jbe
mov
fdivl
or
push
imul
push
fwait
pop
test
mov
fsubr
pop
mov
xlat
lds
xchg
jne
and
xor
mov
add
fadd
push
pop
insl
mov
loopne
push
sub
test
js
leave
adc
and
int3
repnz
fiaddl
inc
xor
test
push
call
xorb
add
jp
fistpl
jmp
add
add
lods
gs
xchg
push
loop
push
pop
mov
fdivl
mov
test
mov
sar
xor
adc
fwait
fs
insl
pop
insb
dec
xor
and
pop
push
xor
and
js
dec
add
dec
inc
jo
dec
lcall
pusha
fs
mov
repz
rorb
iret
in
xor
les
cmp
mov
in
mov
and
cmovl
fiaddl
js
dec
je
xchg
dec
es
aam
add
cltd
enter
cmpsb
sbb
push
nop
mov
pop
sbb
jo
jno
mov
aam
inc
jecxz
mov
jo
xor
push
push
repz
das
nop
lret
mov
cmpsb
incl
cltd
lods
test
mov
fistpll
das
mov
push
and
mov
mov
inc
pop
jmp
or
lahf
nop
pusha
es
or
add
push
loopne
mov
outsb
lahf
loopne
test
lea
sbb
mov
and
insb
sub
repnz
sub
push
dec
pop
loope
and
mov
popa
data16
sarb
imul
sbb
stc
xor
in
enter
rcrb
mov
enter
or
clc
fistl
mov
or
cmpsl
cltd
int3
sub
fcmovnb
add
inc
insl
sub
mov
sub
cltd
push
add
cld
inc
lret
lods
test
sarb
jb
jecxz
movsb
lret
mov
lods
in
inc
xchg
in
or
in
and
test
insl
mov
cmpsb
rcrl
cmc
ret
add
pop
test
mov
add
in
push
inc
push
and
sub
dec
nop
xor
mov
or
add
mov
mov
inc
jge
inc
test
mov
fcmovne
push
mov
mov
pop
insb
lock
add
add
or
dec
pusha
aad
add
in
and
pop
ffree
dec
lds
adc
mov
test
rcrl
aaa
hlt
lock
sbb
stos
sbb
add
arpl
sub
aam
and
fists
and
jmp
adc
aam
push
out
and
push
mov
subb
roll
inc
add
repnz
enter
fstp
sti
mov
xchg
dec
or
sbb
jns
daa
hlt
cli
mov
cltd
fs
arpl
nop
dec
es
dec
cmp
jbe
dec
hlt
add
adc
js
mov
sub
pusha
sti
lds
imul
cmp
xchg
shrl
sub
inc
mov
or
pop
cs
sar
mov
inc
leave
in
cli
sub
stc
call
ss
adc
rcll
mov
adc
je
insb
scas
cmp
sbb
sub
les
test
mov
jo
add
pusha
inc
jo
mov
push
pop
in
nop
cltd
push
add
pusha
icebp
push
pop
adc
pop
sub
push
jo
adc
and
push
nop
addb
addl
pop
jmp
fwait
rclb
inc
adc
or
out
rcrl
push
movsl
and
fwait
dec
and
nop
out
pop
adc
or
pusha
and
jo
std
inc
or
inc
cld
push
movsb
sub
push
mov
fnstenv
cmp
mov
push
pop
cmpsb
or
mov
ror
mov
fwait
push
fsubrs
lock
ds
and
add
jo
out
ja
pop
adc
add
aaa
lahf
pop
sti
cmp
test
jae
in
mov
sub
enter
cld
enter
lcall
arpl
sarb
sbb
xor
and
bound
pop
sbb
and
inc
cmp
jne
cltd
jae
inc
and
push
movl
add
dec
adc
lahf
sbb
push
je
mov
std
mov
aaa
jmp
out
mov
clc
ret
cmpsl
stc
push
mov
cmp
ret
es
mov
add
cmp
jns
xlat
push
push
push
jp
stos
and
or
pusha
nop
add
fcomip
sahf
mov
shl
push
testl
rcl
imul
push
pop
and
insb
fwait
mov
or
inc
xor
decl
adc
add
mov
ljmp
add
inc
fistpl
or
jnp
mov
add
out
flds
xchg
sub
rcll
mov
std
decl
mov
jns
mov
jle
test
repz
pop
pop
dec
std
dec
repz
cmp
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
lcall
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jg
pushl
xor
xor
sub
mov
das
mov
gs
jbe
jg
xchg
adc
clc
push
or
cmp
rclb
cmpl
mov
add
aas
jns
out
push
push
or
mov
aas
out
call
je
jb
outsl
arpl
fs
out
test
mov
dec
imul
push
or
insb
xor
cs
adc
popa
pop
mov
repz
popa
je
outsl
outsb
push
mov
fistps
pop
jbe
mov
xor
movsbl
in
aad
incl
sub
and
in
mov
inc
outsl
jb
js
je
jb
gs
cmp
add
out
outsl
or
outsl
add
add
incb
and
pop
cld
or
push
push
je
mov
jbe
lock
jb
mov
outsb
pop
mov
dec
xor
xor
cmp
jne
iret
mov
sub
dec
and
jns
fbstp
das
das
adc
push
dec
push
inc
jbe
pop
lock
gs
insl
bound
daa
dec
outsl
jbe
jo
dec
arpl
push
jo
sub
addr16
mov
xchg
dec
jne
xchg
mov
lahf
out
roll
jb
insb
dec
popa
jb
push
jnp
insb
pusha
inc
insb
adc
jae
scas
cmpsl
xchg
popl
popa
into
cmp
addr16
push
jne
fs
or
fdivl
lahf
mov
daa
cwtl
mov
clc
sbb
dec
pushf
mov
cmpsl
js
push
jne
xchg
lcall
ds
popa
das
jo
mov
insl
pop
filds
mov
sub
add
divb
mov
xor
jno
adc
mov
test
out
and
sub
sub
cs
movsl
jno
ljmp
aas
inc
das
pop
pop
lahf
mov
cmp
jge
pushf
lcall
outsl
inc
test
icebp
adc
add
dec
add
dec
sarl
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
sbbb
gs
popa
dec
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
xchg
testb
imul
xchg
adc
xchg
push
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
test
hlt
and
or
pusha
add
mov
add
pop
sub
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
lds
pop
js
inc
rcl
push
stos
int
mov
jo
pushl
fdivrl
sbb
repnz
lea
mov
nop
xchg
xchg
sub
xchg
pop
xchg
push
call
mov
adc
test
dec
sub
ds
or
cmp
pop
pop
add
pushf
jo
adc
cs
jo
or
data16
or
je
nop
repnz
push
or
mov
mov
mov
enter
sbb
add
xchg
dec
add
enter
test
pop
and
add
and
xor
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
jg
push
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
hlt
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
orl
push
or
sub
inc
push
pop
sbb
aas
push
add
xchg
sbb
push
pop
outsl
ja
jg
xor
jb
bound
cmp
dec
dec
stos
inc
data16
imul
arpl
mov
mov
add
popa
addr16
outsl
js
aam
mov
push
mov
inc
jne
es
insb
gs
mov
dec
scas
push
mov
mov
daa
add
insb
in
dec
imul
jns
inc
mov
imul
ds
and
inc
jb
jns
daa
add
and
movsb
mov
mov
jmp
sbb
xchg
mov
cmp
outsb
pushw
movsl
adcb
arpl
mov
push
pusha
in
or
push
push
lahf
rol
lea
jns
and
sbb
or
xor
lret
popl
cmp
test
clc
pusha
gs
inc
inc
stos
and
push
dec
dec
lahf
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
jno
mov
cmp
xor
xchg
call
push
adcl
gs
mov
xchg
movb
or
mov
push
dec
testl
dec
ret
cmp
add
mov
mov
fildll
dec
jge
daa
aam
arpl
imul
call
add
xchg
outsl
jae
inc
and
fs
xchg
jg
or
jne
popa
jl
mov
adc
sub
push
pop
aaa
pusha
push
or
jnp
lods
pop
das
je
outsl
xchg
or
aaa
daa
xchg
mov
popw
xor
cmp
cmp
add
ds
push
das
push
sub
es
jle
sub
sub
addr16
jae
fisttpl
sub
sub
push
cmp
jp
or
jmp
cmp
and
add
lods
lret
dec
pop
pop
cwtl
jb
sbb
mov
xor
push
jb
imul
ret
xor
push
lret
lods
in
add
xor
sbb
and
out
xor
es
jo
sub
inc
aam
push
lahf
fs
sarl
or
inc
add
clc
add
loopne
ds
repz
shlb
fmull
cld
inc
sti
push
in
test
cmpsl
jge
mov
inc
push
xchg
nop
push
mov
repz
testl
jns
or
dec
callw
sahf
out
push
fs
adc
ds
cmp
pop
aaa
push
push
mov
cmp
repz
idivl
cmp
push
sub
jns
out
and
adc
add
incl
mov
out
pop
cmp
clc
incb
sahf
out
sahf
mov
inc
xor
out
cmp
add
std
lock
repz
movsb
jl
out
ds
sub
in
rcrb
sub
push
aam
lcallw
xor
bound
outsb
push
xor
data16
add
pop
loope
insb
cmpsl
pop
push
jae
movsl
fdiv
insb
fs
sbb
je
into
xor
xor
imul
sub
add
sbb
adc
push
insb
sbbb
ja
inc
dec
jae
insb
inc
gs
pop
sub
sbb
dec
inc
sti
sbb
dec
xor
inc
dec
dec
dec
push
push
ret
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
stc
incl
loope
lods
nop
outsb
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
adc
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
mov
inc
aam
pop
ds
dec
je
lods
in
aas
test
cwtl
iret
adc
push
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
mov
jle
add
mov
dec
push
push
adc
mov
dec
outsb
jbe
and
inc
add
das
inc
cmp
push
gs
imul
inc
dec
lcall
cs
push
into
mov
or
cmp
out
outsl
dec
sub
push
pop
add
pop
and
dec
push
and
add
and
sbb
xor
dec
pop
dec
dec
add
dec
add
sbb
dec
push
xor
sti
mov
imul
and
jno
jb
jbe
sub
ss
idivb
pop
push
and
xchg
add
dec
or
cmp
pop
dec
div
sti
out
pop
sub
dec
and
dec
dec
add
cmp
dec
sbb
out
divb
pop
and
push
add
and
lods
pop
inc
xor
push
insl
notb
push
adc
pop
xor
xor
cld
pop
inc
cmp
std
cmp
sub
pop
inc
or
cmp
out
cmp
push
push
sbb
adc
dec
or
das
cmp
das
or
lock
cmp
cmp
adc
or
sbb
push
inc
ss
mov
pop
dec
adc
fcmove
mov
or
shl
daa
stc
and
sub
and
sbb
inc
push
push
test
je
lea
inc
inc
lock
cmp
and
sbb
mov
fsubrp
mov
sbb
sub
add
sbb
in
sti
or
push
aas
add
sbb
das
sbb
push
jo
xor
cmp
mov
or
push
dec
out
int3
xor
jge
sub
outsl
sub
jle
xor
outsb
lock
push
sub
sub
add
sub
mov
push
push
cmp
jb
push
mov
ja
pop
stos
in
push
cmp
es
mov
push
gs
push
xchg
inc
dec
push
and
jle
pop
and
pop
push
inc
mov
and
pop
aaa
inc
lock
in
sub
dec
mov
cmp
sub
push
mov
dec
dec
lods
mov
bound
movsl
dec
pop
jnp
inc
pop
adc
clc
call
dec
nop
dec
cwtl
in
push
cmp
pusha
xor
iret
repz
jo
orb
mov
iret
sarl
shl
adc
push
mov
divb
xor
outsb
push
inc
jg
iret
repz
inc
push
push
push
jo
mov
mov
push
sbbb
push
and
jnp
cmp
testl
sub
cwtl
sbb
dec
sub
lock
cmp
outsl
insl
mov
dec
and
popa
outsb
insb
cld
enter
fsubr
push
popa
loop
add
imul
push
xor
or
and
push
scas
add
and
adc
push
orb
cmp
fwait
loopne
push
scas
xor
pusha
nop
loopne
sahf
out
lock
push
push
pusha
mov
adc
nop
es
repz
push
xchg
xor
shll
pushf
and
stos
pop
fdivl
scas
cs
mov
xlat
sub
cmp
add
sbb
cmp
js
inc
into
aad
push
add
lods
std
std
and
or
sbb
push
sub
nop
sub
sti
jp
sub
push
or
fdiv
notb
cmp
or
pop
aad
jb
inc
arpl
or
cmp
push
pop
and
cmp
insb
push
inc
inc
and
pusha
cmp
inc
sub
fildll
sub
pusha
sub
sbb
cmovg
add
dec
jp
and
mov
push
in
out
cmp
and
dec
cmp
fimuls
pop
out
aas
ja
ja
test
ss
jo
mov
sub
dec
out
pop
and
adc
add
mov
scas
xor
ss
fs
cmp
push
push
hlt
outsb
scas
cmp
mov
inc
pop
test
inc
pusha
dec
cwtl
pop
xor
mov
xor
aaa
pop
rorb
out
pop
popa
jl
adc
jae
movsl
add
pusha
sub
cs
lcall
push
inc
shll
or
xchg
loopne
pop
push
daa
push
xchg
jl,pn
addl
pop
or
mov
and
mov
neg
sub
or
daa
and
int3
and
stos
mov
mov
dec
dec
and
adc
dec
xchg
push
jle
mov
adc
sbb
cld
sub
adc
xchg
or
inc
xor
cmpsl
loop
or
mov
cmp
testb
and
cmp
dec
xchg
test
push
push
sub
adc
push
add
xor
cmpsl
inc
icebp
mov
in
out
or
pusha
addr16
push
je
jecxz
push
dec
sub
sbb
add
sahf
dec
add
jb
adc
adc
add
sbb
std
lds
and
lods
add
inc
add
adc
dec
in
mov
cmp
shll
adc
lret
les
test
mov
pop
mov
xor
sbb
adc
sub
add
pop
or
popa
cmp
jne
stos
add
aas
push
lahf
and
push
scas
xor
add
js
dec
dec
push
ss
repnz
sub
push
sbb
add
dec
and
mov
dec
int
data16
jo
dec
xchg
cmp
mov
mov
dec
ret
add
xor
into
call
inc
daa
push
cmpsb
push
cmp
sbb
pop
push
or
mov
xor
loopne
add
movsl
add
or
stc
and
inc
in
mov
pop
icebp
dec
ja
loope
mov
lods
or
dec
pop
inc
imul
cmp
std
pop
add
cmp
inc
push
sbb
cli
sarl
sbb
dec
xor
adc
adc
out
or
loopne
cmp
or
or
movsb
or
mov
sbb
mov
ja
js
sub
sahf
test
mov
repz
add
inc
cltd
ljmp
add
popa
imul
xor
push
push
pop
jnp,pt
jp
outsl
jo
outsb
data16
push
ja
xchg
fwait
mov
or
adc
iret
cmp
jns
aam
jbe
int3
add
iret
repz
les
mov
pop
mov
add
loop
mov
pop
cmp
and
out
or
dec
loop
jg
add
or
pop
jns
fiaddl
or
inc
pop
push
std
pop
xor
pop
dec
xor
push
adc
pop
mov
jl
inc
adc
dec
aas
add
nop
call
mov
fidivl
or
dec
sub
fistpl
add
pop
or
pop
daa
or
sub
out
lds
dec
or
inc
dec
adc
add
push
mov
sbb
or
push
fmuls
adc
inc
sub
add
mov
dec
dec
and
lods
sbb
ret
push
mov
mov
outsb
daa
cmp
dec
mov
push
xchg
stos
jnp
and
lea
dec
lret
outsb
aam
adc
sub
inc
adc
cmp
sbb
push
cmpsl
xchg
outsl
mov
jl
sbb
pop
and
test
aaa
pop
pop
push
push
fadds
pop
ret
test
and
xor
outsl
jb
bound
outsb
pop
fildl
jnp
push
push
je
and
sbb
push
adc
inc
sahf
aas
es
negb
jae
and
testb
add
add
jae
fwait
xor
push
mov
push
outsl
cmp
fsub
push
mov
dec
push
push
push
das
xor
xor
dec
push
jbe
fidivs
pop
sbb
sub
or
inc
das
in
mov
adc
out
subb
mov
pop
jmp
push
dec
xchg
adc
jne
imul
push
and
jbe
jae
push
fldenv
sub
out
cs
push
stos
jb
or
fadds
inc
or
add
jmp
mov
xor
push
jmp
inc
add
pushf
jo
xor
test
aaa
inc
sub
aaa
lea
dec
adc
dec
and
inc
or
add
cmpsl
das
sbb
sub
sahf
rorb
addr16
aaa
mov
dec
cmp
dec
dec
dec
sub
mov
mov
jge
and
pop
pop
and
and
dec
push
aam
jnp
dec
fwait
jle
and
pop
push
xor
lret
pop
mov
cmp
mov
add
lret
mov
adc
retw
leave
ljmp
popa
or
enter
inc
pop
cli
cwtl
dec
sub
enter
pop
dec
and
les
push
pop
pusha
data16
mov
pop
add
lcall
xlat
dec
push
adc
xchg
inc
sbb
and
mov
sub
jbe
mov
push
inc
push
cmp
inc
insb
div
push
mov
or
adcb
mull
xor
inc
pop
dec
ret
add
push
mov
fimuls
inc
jmp
sub
push
dec
mov
ss
push
inc
or
jb
lock
add
xchg
cmpsb
pop
sub
aas
xchg
dec
out
jbe
sarl
lock
push
inc
or
and
sub
and
loopne
and
or
dec
adc
ja
mov
orb
and
push
movsb
iret
imulb
jo
push
inc
into
ds
movl
pop
daa
shlb
lock
pop
jg
das
daa
imul
sub
push
jo
inc
add
fisttps
xor
add
cld
sbb
inc
clc
xor
inc
xor
movsl
lea
inc
inc
jp
sub
not
add
push
daa
shlb
cmp
push
roll
pop
ficoml
fdivrl
push
push
daa
pop
mov
adc
xchg
daa
pop
mov
sub
cmp
in
xlat
sbb
sbb
out
sbbb
lahf
sbb
inc
inc
mov
dec
stos
jbe
mov
dec
movsl
loop
xchg
sub
push
adc
sbb
add
pop
mov
or
adc
lret
cmp
comiss
in
movsl
pop
cltd
cmp
add
in
and
xchg
mov
mov
and
repz
sub
add
inc
sub
les
add
sub
inc
push
mov
and
mov
lods
and
mov
iret
cmp
or
adc
pushf
jnp
jp
and
sbb
aad
and
xchg
xor
jmp
nop
and
push
or
movsb
cmp
jno
inc
jne
daa
pop
daa
add
pop
out
sub
call
fs
leave
add
cld
or
jb
ss
add
push
pop
jp
push
xchg
xchg
xlat
add
pop
ljmp
fstpt
and
push
adc
dec
inc
sub
xor
sbb
push
dec
xor
add
pop
push
inc
xor
sbb
sub
jl
inc
cmp
and
sub
loope
jo
lods
dec
add
icebp
fidivl
lods
filds
push
imul
inc
adc
daa
mov
or
or
loopne
dec
cmp
inc
shrb
ret
and
xor
mov
xor
adc
sub
add
dec
push
filds
adc
adcl
jo
sbb
pop
push
imul
mov
adc
cmpl
sbb
in
sub
jle
nopl
fistl
mov
mov
xor
pop
sbb
xor
inc
loopne
pop
xor
and
inc
adc
movsl
dec
aaa
insb
xor
sbb
fs
and
jno
andl
not
inc
xor
stos
hlt
push
inc
mov
int
and
mov
xchg
inc
push
jae
aaa
prefetchw
cmp
add
inc
sub
or
insl
call
les
or
adc
xor
adcl
aam
xor
mov
sub
sub
cmp
sub
xchg
fucomip
aaa
inc
add
xor
sub
pusha
lods
ljmp
adc
push
das
les
dec
pop
sbb
fs
dec
xadd
jge
push
or
xor
ficompl
pop
and
cmpsb
cmp
inc
pop
ret
mov
dec
repnz
cmpsl
xchg
repnz
cs
cmc
fnsave
dec
push
and
push
cld
scas
rolb
adc
and
pop
pop
arpl
dec
gs
dec
aaa
test
loop
push
outsb
and
sbb
pop
outsl
pop
dec
pusha
repz
daa
sub
sub
pop
or
pop
adc
lret
ss
mov
aam
add
mov
pop
xchg
xor
jg
cmp
inc
sub
push
pop
pop
jecxz
fdivrs
inc
adc
inc
aaa
dec
push
inc
lods
imul
sbb
divl
fadds
icebp
aaa
cmpb
xchg
add
aaa
shlb
inc
or
sub
insb
gs
or
fs
gs
movsb
stc
mov
das
pop
popa
push
push
dec
in
dec
inc
fsubrs
jb
push
sub
in
and
jle
push
adcb
add
sub
sub
jo
push
sub
xor
fldcw
aaa
pusha
cmp
aas
cmp
es
push
mov
fdivp
push
rolb
dec
push
push
nop
dec
push
in
mov
imul
je
add
push
dec
dec
jg
adc
std
add
aaa
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
and
das
mov
sbb
mov
ds
pop
sbb
subl
mov
mov
fsubs
sbb
subb
test
xor
xchg
jecxz
in
mov
mov
pop
add
pop
adc
jb
mov
pop
push
and
and
xor
lods
enter
or
popa
mov
mov
mov
ficoml
pop
pop
sbb
mov
inc
xchg
push
dec
imul
dec
pusha
push
pop
inc
in
cmp
xor
sahf
dec
cs
repnz
xor
lock
cmp
iret
leave
jae
inc
rorb
iret
and
mov
movups
scas
cmp
push
aaa
int
out
pop
add
push
dec
pop
int3
fimull
adc
dec
sbb
rclb
dec
jns
sti
jnp
cmp
xor
sub
sub
xor
inc
xor
xchg
jo
inc
inc
push
xor
add
aad
test
insb
push
pop
adc
cmc
outsb
add
push
xchg
cmp
dec
das
js
push
jb
add
subb
and
push
push
mov
sbb
stos
mov
mov
jne
cmp
popa
outsb
mov
inc
and
rolb
sahf
stos
and
mov
push
mov
sub
sub
sahf
aaa
jg
ja
les
sbb
mov
test
xlat
das
xchg
insl
aaa
inc
pop
sub
out
push
dec
adc
in
pop
and
ja
aaa
js
loopne
iret
cwtl
jo
or
daa
pop
push
orb
or
shrb
lds
push
add
or
cmp
pop
aaa
pop
pop
sub
xchg
cmp
pop
orb
aam
xchg
sub
add
pop
push
sbb
inc
cmp
mov
add
dec
add
fimull
or
in
mov
pop
cli
outsl
adc
add
cwtl
xor
inc
mov
sbb
push
call
and
adc
in
das
aas
dec
aas
add
test
lea
mov
dec
mov
je
pop
addr16
fldcw
int3
inc
add
lods
es
lret
int
repz
testl
or
pop
jae
jns
mov
popf
daa
int3
pop
xchg
iret
dec
mov
dec
jne
mov
iret
repz
or
out
repnz
iret
test
mov
aaa
jns
mov
mov
cmpsl
mov
data16
mov
mov
clc
inc
or
out
mov
mov
xchg
and
pop
push
insb
xchg
out
minps
add
popw
pop
mov
scas
shll
daa
nop
shll
dec
adc
inc
fsubr
push
mov
push
jle
cs
mov
cmpsb
call
dec
rolb
cmp
aam
adc
repnz
add
bound
out
push
outsb
lods
rcrb
enter
inc
inc
int3
push
fmull
int
dec
lds
adc
ret
divb
mov
push
enter
cmp
push
sub
dec
push
sahf
mull
aad
cmp
pop
pop
push
insb
push
jle
jnp
out
mov
adc
ja
xchg
out
dec
push
cwtl
imul
mov
sahf
cmp
fistps
mov
test
int3
dec
jecxz
push
mov
cs
outsl
jo
adc
mov
dec
pop
mov
das
es
sti
fiadds
push
add
inc
xchg
es
imul
mov
pop
mov
out
jns
cmpsl
push
push
std
lret
int3
jns
cmpsl
stc
movd
ja
int
lahf
out
aam
jg
push
push
cmpb
clc
cmp
jg
out
and
addr16
push
sbb
sti
cmp
mov
cmpb
cmp
repz
int
jl
cmpsl
stc
sbb
inc
insb
pushf
nop
xchg
iret
sarl
and
jns
out
push
jbe
mov
sar
xchg
push
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
pop
jnp
decb
test
mov
insb
jmp
popa
push
or
scas
int
mov
leave
loop
and
mov
pop
mov
cli
loopne
mov
adc
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
jb
pop
in
or
add
dec
mov
lret
outsl
pop
inc
adc
xor
outsb
push
push
jae
loop
or
inc
push
inc
or
daa
inc
sbb
mov
je
addr16
push
mov
cmp
cmp
cmp
fisubl
push
imull
test
shrb
divb
dec
cmp
ljmp
cmp
push
ljmp
cmp
push
out
jb
out
push
insb
pop
push
dec
pop
je
xlat
sbb
jns
push
fisttps
jp
das
push
repnz
lock
in
outsb
push
inc
imul
scas
cmp
push
pop
retw
aaa
sbb
inc
dec
or
dec
push
fs
mov
ja
mov
dec
xchg
inc
dec
clc
push
mov
mov
or
out
aam
push
push
ds
xlat
daa
das
adc
adc
popa
insl
jo
es
insb
je
push
addr16
jg
popa
jo
jae
es
outsl
and
ja
fnstcw
sub
and
pop
fnsave
lods
push
or
pop
repz
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
cmp
push
add
pop
push
sub
fildl
inc
add
cmp
into
std
pop
inc
push
or
andb
pop
and
ret
pushf
add
add
inc
add
push
mov
js
sahf
jp
push
lds
lock
push
jp
push
pop
ljmp
and
dec
adc
rcrl
aad
add
sbb
dec
sub
addb
into
ss
push
imulb
and
add
rorb
js
pop
dec
push
jecxz
add
lods
dec
push
dec
and
or
fildll
cmpsl
xchg
pop
pop
dec
xor
pop
push
bound
jle
js
data16
in
jne
mov
xchg
data16
push
inc
mov
ret
pop
pop
and
aas
push
cmpl
adc
cs
xorb
jbe
jecxz
nop
cmpsl
cltd
dec
xor
pushf
icebp
icebp
inc
dec
or
cs
push
testl
mov
jno
das
push
sub
and
sbb
sub
movsb
das
sub
and
pop
sub
mov
sbb
or
xor
pusha
mov
xor
dec
sub
stos
inc
aaa
sub
loope
aaa
adc
pusha
push
or
cmp
mov
daa
push
adc
das
mov
aaa
mov
sub
jge
lahf
or
or
lea
sbb
and
push
loopne
mov
das
stos
mov
pop
dec
loope
jbe
daa
jge
mov
bound
das
das
push
aaa
iret
cmp
lahf
adc
test
mov
fmuls
push
pop
daa
sbb
test
das
popa
daa
shll
pop
xchg
mov
imul
and
jecxz
add
repnz
pop
inc
pop
and
xor
fwait
cmpb
or
xlat
dec
das
sub
pop
scas
mov
mov
pop
cltd
daa
lahf
pop
inc
rorl
outsl
insl
or
dec
pop
int
aad
add
addr16
inc
or
jg
cld
mov
mov
sbbb
mov
shrl
inc
imul
add
outsl
mov
inc
xchg
scas
orb
pop
sub
sub
xor
xor
adc
jl
jl
pop
cmpsl
daa
adc
mov
mov
sub
or
and
pop
pop
addb
aaa
imul
js
xchg
gs
jle
outsb
mov
pop
dec
push
aad
and
ja
cmp
stc
sub
aam
orb
shrb
dec
pop
mov
loop
inc
sbb
es
mov
xchg
and
das
pop
loope
sarl
pop
inc
rclb
and
loopne
xchg
mov
sbbb
rcrb
sbb
mov
es
push
adc
jae
fmull
jp
add
and
or
push
and
fisubl
push
dec
xor
push
pop
and
mov
xchg
sbb
and
mov
pop
shrl
and
or
popa
adc
dec
test
inc
push
pop
mov
sub
sbb
test
pop
sbb
adc
pop
xor
cmp
inc
outsb
loope
xor
xchg
and
ja
sub
das
das
and
nop
pushf
push
dec
cmp
dec
shlb
xor
jae
ret
imul
loopne
into
adc
or
add
shrl
or
dec
lock
cs
rcll
mov
jmp
cli
out
mov
xor
and
in
not
stos
repnz
adc
push
push
loop
fldcw
sbb
ficompl
aaa
fcoml
and
pop
or
rol
jl
dec
or
insl
pushf
imulb
pop
dec
shll
inc
adc
bound
push
sbb
xchg
fs
dec
loop
mov
mov
push
mov
xchg
dec
aas
subl
int3
push
xchg
sub
mov
aas
push
or
pop
cmp
or
pop
inc
hlt
popa
sub
cmp
xor
aas
sarb
push
xor
mov
mov
and
sub
cmp
push
mov
push
inc
push
sbb
fbstp
repnz
push
push
cmc
shrl
js
pop
scas
xor
les
add
cwtl
adc
sub
jno
sbb
add
xchg
xor
pop
sub
adc
push
inc
enter
inc
pop
fldt
out
pop
cmp
inc
add
test
push
comiss
dec
mov
push
and
dec
adc
xchg
pop
and
adc
xchg
aaa
xchg
test
sub
pop
dec
pop
pop
daa
loope
push
pop
jns
mov
push
sbb
out
xor
repz
andl
repz
xchg
ss
int
add
pop
or
flds
adc
adc
sbb
and
sub
fwait
int
iret
xor
inc
mov
mov
ja
mov
mov
popa
xchg
sbb
insb
sub
das
or
xor
int
pop
adc
pop
add
sub
adc
push
push
dec
mov
insb
str
add
inc
stc
das
incl
daa
ljmp
sbb
pop
pop
cs
and
jae
fs
and
sbb
enter
loopne
insb
push
sub
scas
push
xor
sub
xorl
and
pop
jb
jo
jb
push
pushf
sbb
imul
xor
xor
add
add
xor
or
dec
xor
adc
push
add
jnp
inc
add
sub
lcall
add
inc
cmp
and
dec
dec
sbb
dec
add
dec
pop
aaa
push
jmp
and
sub
inc
and
pop
dec
sbb
add
cmp
and
add
and
call
cld
inc
push
sbb
xor
sub
push
aas
pop
xor
sbb
mov
inc
xor
add
in
decl
mov
cmp
sub
add
cmp
in
lcall
add
pop
push
inc
or
aas
sub
xchg
mov
sub
lcall
dec
xor
inc
dec
or
push
xor
add
or
dec
adc
push
es
sub
add
hlt
decl
and
adc
xor
adc
adc
pop
mov
add
and
ret
cmp
cmp
or
scas
add
addl
push
xor
pusha
cmpsl
inc
mov
pop
inc
push
cmp
mov
inc
lret
imul
add
addb
sbb
pop
movsl
loopne
clc
dec
cmp
dec
in
add
ss
inc
push
and
lea
lcall
stos
pop
pop
and
and
push
push
dec
fs
outsl
inc
rolb
dec
add
das
shll
mov
fadds
mov
lret
add
pop
enter
sbb
ja
xchg
inc
jb
add
dec
pop
dec
pushf
push
push
inc
dec
dec
in
mov
inc
push
dec
inc
cwtl
dec
call
add
clc
sbb
rcl
inc
sub
adc
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fmul
jg
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
popf
rorl
and
sub
sub
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
mov
push
sub
adc
or
cld
insl
sub
adc
or
mov
leave
ret
sub
xchg
mov
data16
mov
call
jmp
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
arpl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
mov
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
jne
gs
cmp
xor
decl
sub
push
sub
pop
daa
cmp
dec
arpl
pop
cmc
incl
popa
dec
dec
or
imul
cmp
and
push
inc
aaa
push
inc
call
push
cmp
insb
je
pop
pop
and
jnp
outsl
aas
ja
jl
dec
jns
sub
outsl
sub
inc
dec
into
and
sub
ret
mov
repnz
sub
loopne
xchg
mov
sub
push
and
sbb
mov
int3
aas
sub
popf
fld
ja,pt
sahf
mov
dec
fbstp
outsb
iret
sahf
jmp
sub
pop
daa
or
push
pop
inc
pop
std
ljmp
add
decb
or
aaa
cs
pop
jle
push
aaa
push
xor
inc
add
xor
xor
jg
popf
cmp
inc
add
inc
pop
out
sbb
das
aaa
inc
push
inc
lcall
pop
cmovb
pop
xchg
pop
pop
pop
ss
cmpsl
ss
test
mov
movsb
pop
push
mov
outsl
xlat
pop
imul
loope
or
adc
pusha
xor
and
aas
mov
pop
cld
scas
bound
popa
testb
out
jb
and
jno
lahf
jg
inc
int
mov
push
mov
xchg
cmp
add
inc
aam
add
xchg
fstps
hlt
mov
mov
jle
sub
setb
inc
dec
dec
cmp
xor
and
adc
push
insb
aad
bound
pop
sub
and
jnp
rclb
js
adc
mov
addl
xor
pop
aaa
push
outsl
aas
cmpsl
adc
sbb
lcall
addr16
bound
adc
sbb
jp
sub
mov
push
sbb
call
fadd
out
push
fidivrs
sub
push
mov
mov
xorb
daa
sub
adc
cmp
sbb
push
inc
daa
jge
inc
cmp
cmp
roll
jge
cmp
sti
push
add
andb
adc
add
sub
add
and
pop
shrb
mov
in
push
dec
cmp
loop
cmp
sub
sub
or
mov
rol
push
aad
icebp
adc
fs
cmp
sub
sahf
sub
mov
enter
xchg
adc
xor
mov
push
push
test
into
out
inc
lods
dec
outsb
outsb
je
xor
fwait
inc
into
pop
js
xor
jae
popa
test
jbe
gs
cmp
ret
pop
and
imul
inc
aad
mov
sub
xor
insl
loop
aas
data16
aad
dec
out
neg
mov
lods
dec
mov
push
popa
je
jecxz
andb
xchg
insl
mov
push
cmp
pop
aaa
adc
testb
add
or
sbb
mov
popf
movsb
fcmovnbe
sti
cmovs
or
movsb
dec
pop
sub
sbb
dec
sub
pushf
jne
push
pop
lret
mov
add
sbbb
push
inc
inc
mov
inc
push
jg
dec
sbb
and
jae
xchg
and
fidivl
inc
in
lds
inc
dec
sub
or
mov
add
adc
push
jmp
and
lds
pop
sbb
lret
subl
add
pop
inc
inc
cmp
or
pop
push
subl
stos
lods
push
lds
popa
dec
lret
or
mov
jb
pop
repz
and
inc
fnsave
inc
jne
dec
imul
outsl
or
movsl
or
jecxz
xor
inc
addr16
or
or
lods
test
test
je
dec
push
inc
test
int
orl
sbb
or
mov
mov
dec
pop
enter
push
jo
sbb
cmpsl
xor
mov
jo
mov
push
cli
cmc
stos
push
sub
outsl
imul
push
or
call
pop
and
xor
push
mov
mov
and
arpl
sti
sbb
das
scas
push
pop
mov
stos
inc
arpl
dec
pop
pop
or
movsl
xchg
push
loop
adc
lea
ds
aam
push
dec
cmp
push
ficomps
sub
sub
gs
sbb
adc
mov
dec
dec
adc
movsb
push
test
mov
std
inc
outsl
es
daa
dec
xor
and
scas
pop
dec
or
cmp
jbe
or
xchg
sbb
adc
fstl
insb
jmp
ffree
cmp
inc
add
add
add
mov
dec
in
add
je
jp
lea
pop
pop
aas
aas
dec
pop
inc
jmp
add
pop
pop
sub
inc
push
fs
insb
jnp
lcall
fcmovu
mov
dec
pop
repz
ljmp
push
stos
push
push
push
cmp
jecxz
push
push
dec
je
fildl
push
pop
shrd
pop
mov
adc
lods
pop
add
inc
loopne
mov
push
fs
push
and
mov
int
add
sub
inc
dec
nop
or
inc
fildl
sahf
inc
and
inc
or
sub
int3
fistpl
dec
cmp
sbb
and
adc
push
jne
or
sub
das
pop
inc
add
fs
cmp
fstpl
dec
and
addr16
popa
mov
adc
outsl
fwait
sbb
movzbl
movsb
popf
add
imul
call
scas
pop
add
ret
jge
fwait
pushf
push
dec
dec
push
inc
pop
sahf
inc
dec
inc
push
pop
jns,pn
pusha
cwtl
dec
xlat
jb
gs
adc
inc
cs
mov
daa
dec
xchg
or
push
dec
jb
push
inc
test
inc
add
dec
lret
jne
fbld
or
xchg
mov
dec
and
inc
js
sub
lahf
pop
insb
add
add
push
test
cmp
pop
aaa
or
mov
mulb
orl
push
jb
mov
adc
xchg
loope
imul
push
aaa
or
inc
add
add
xchg
mov
es
push
inc
and
jl
cmp
jnp
sbb
insb
push
repz
adc
enter
sbb
cwtl
push
push
or
or
cmpsb
and
sub
in
or
add
and
adc
and
test
add
push
pop
jnp
cmc
dec
sbb
je
sub
xlat
sub
mov
pop
mov
push
outsb
sbb
stos
mov
fisubrl
sbb
in
adc
pushf
ficoml
stos
lcall
insb
aas
push
dec
outsl
or
sbb
xlat
mov
fcomip
cld
xorb
loope
pop
cmp
pop
arpl
test
xlat
outsl
cmp
insb
mov
inc
dec
jecxz
in
add
pop
stc
mulb
sti
xor
icebp
sarb
rolb
inc
das
mov
les
orb
xchg
dec
adc
mov
xadd
sbb
inc
dec
mov
inc
xchg
inc
cmovo
out
lea
cmp
mov
sbb
maxps
add
lock
fstpl
adc
push
inc
pop
sbb
mov
cmp
aas
add
rep
ffree
test
addr16
movsb
negl
add
sub
jmp
jmp
inc
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
test
dec
sahf
or
mov
repz
enter
xchg
mov
arpl
pop
inc
in
pop
cld
add
inc
aas
mov
addr16
outsl
mov
addr16
daa
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
insb
xchg
adc
jns
push
popa
xchg
mov
loopne
push
les
add
mov
out
sahf
out
pop
mov
sti
cmp
push
pop
xor
cld
pop
xchg
mov
jnp
divl
pop
sahf
pop
pop
ds
pop
repz
cmp
mov
add
xor
out
pop
enter
mov
jae
iret
cwtl
jl
push
push
inc
pop
int3
push
add
adcb
jno
dec
inc
lahf
push
xor
testb
dec
aam
fsubrs
add
pop
cld
add
mov
or
sahf
aaa
in
add
xor
jge
jo
out
push
mov
push
add
pop
jg
leave
aad
ja
mov
pushf
ja
add
xchg
or
xchg
dec
mov
xchg
mov
imul
inc
cmp
subb
dec
push
push
pop
dec
outsl
xchg
popa
sub
add
inc
enter
or
inc
test
pop
repnz
mov
dec
cs
leave
rcrl
cmp
ss
add
fwait
sub
pop
dec
inc
push
mov
sbb
add
or
out
inc
mov
add
jb
xor
pop
lods
cs
dec
xor
or
dec
shl
push
push
sbb
pop
scas
add
outsl
inc
mov
popa
out
pushl
inc
jb
and
leave
jae
pop
pop
enter
adc
mov
outsw
sub
fs
fidivl
lock
or
scas
in
scas
mov
add
pop
je
dec
pop
jl
adc
xchg
fs
mov
dec
mov
cmp
jg
sbb
ja
add
adc
ja
push
test
pop
xchg
popa
imul
fildll
mov
sbb
and
stos
jo
sub
nop
sub
mov
pop
push
dec
and
adc
scas
add
pusha
cmp
out
or
xor
mov
xlat
insl
cmpsl
filds
cmp
cmpsl
xor
push
aaa
insl
add
xchg
mov
pop
cld
sub
pop
jnp
lret
pusha
adc
daa
addr16
ficoms
es
movl
mov
mov
popa
fstps
dec
popa
jg
push
fcoms
scas
movsb
imul
out
mov
in
or
push
xor
add
fs
sbb
popa
cmp
divl
enter
sub
mov
mov
push
outsl
jbe
adc
enter
test
frstor
push
or
ss
push
aam
shlb
mov
xchg
cmpsb
mov
movaps
or
mov
xor
add
and
test
bound
xlat
or
popa
aad
pop
adc
daa
clc
mov
mov
pushfw
xchg
xchg
sub
cmp
fs
arpl
xor
push
arpl
inc
cmp
arpl
testl
dec
fdivs
add
js
iret
cld
add
fs
roll
push
sub
aaa
pusha
pop
leave
mov
add
xchg
and
pop
ja
add
xchg
outsl
loopne
and
xor
fsubs
out
pop
leave
mov
outsl
xchg
sbb
or
or
gs
in
sahf
pop
add
in
pop
insb
ja
add
jg
addr16
cmp
jb
int3
fsub
or
dec
mov
push
enter
testl
in
leave
mov
add
push
lods
pop
pop
cmpsb
mov
adc
mov
ss
sbb
clc
push
les
add
adc
addr16
jb
mov
cmpsl
add
sbb
iret
inc
xlat
add
sbb
xchg
sahf
iret
jbe
or
daa
dec
out
aam
leave
xchg
pop
in
or
add
repz
in
pop
iret
sarl
in
adc
or
imul
out
lcall
xchg
push
push
cmpsl
push
push
jb
xchg
xor
or
cmp
das
pushf
push
movsb
xchg
or
outsl
add
test
pop
or
lcall
negl
add
and
call
xchg
add
dec
push
sbb
push
mov
cs
in
jb
push
lock
cwtl
add
cmp
test
andb
or
dec
enter
addr16
leave
aad
mov
les
fsubrl
cmp
mov
outsb
clc
push
xor
adc
xlat
and
pop
pop
leave
jae
add
mov
repz
sbb
mov
sbbb
insb
push
push
rorb
jl
push
or
ss
mov
subb
ja
inc
lds
mov
outsl
stc
pop
jb
movsb
pop
add
and
push
push
cmp
xlat
push
mov
add
pop
in
mov
cwtl
pop
add
mov
imul
addr16
pop
insb
or
ret
push
loopne
imul
fdivrl
mov
repz
out
repz
stc
cmp
mov
inc
int
jns
jl
ret
insl
push
cmp
repz
mov
add
inc
int3
out
ds
repz
push
lcall
ss
aam
inc
jno
jns
cmpsl
ja
aam
pop
jb
repz
dec
lea
int
jns
jae
test
iret
repz
test
out
cmp
cmpsb
push
xchg
lods
fmuls
ja
repz
push
pop
test
fmuls
cmp
mov
dec
repz
or
daa
push
repz
das
jnp
jp
cmp
out
cmp
sarl
loope
jge
movd
imul
jg
js
sti
xor
std
jp
mov
cwtl
ds
stc
or
fsubs
adcl
jns
out
dec
js
shl
out
notl
test
nop
jmp
xchg
mov
sahf
cmpsl
fnstcw
push
mov
sarl
ss
xor
imul
sahf
out
and
repz
stc
and
testb
pop
sub
lcall
in
xchg
iret
mov
inc
xchg
push
cld
and
sarl
fdivs
repz
xchg
imul
fucom
jns
je
ret
cltd
mov
repz
push
test
lcall
int
imul
sub
cmp
or
iret
sarl
cmp
jns
adc
sahf
out
std
inc
mov
jnp
cmpsl
fldcw
movsb
push
js
loopne
mov
cmp
movsl
push
adc
cmpsb
cmp
push
addb
inc
popf
iret
repz
enter
mov
jno
repz
stos
mov
js
repz
lods
jo
frstor
scas
aad
mov
imul
aaa
mov
and
repz
std
mov
xor
pop
cmpsl
stc
cmp
and
mov
lahf
incb
test
adc
dec
repz
dec
mov
int
stc
cmp
dec
ret
ret
inc
lcall
pinsrw
out
mov
ror
lret
mov
push
xor
push
jecxz
int
insb
xchg
into
add
outsb
arpl
je
mov
gs
add
mov
inc
inc
push
lock
or
fdivs
jmp
add
mov
in
add
scas
mov
and
out
mov
insb
push
imul
pop
leave
xor
daa
push
imul
dec
or
daa
push
addr16
dec
jnp
loopne
mov
nop
bswap
sub
add
aas
inc
adc
in
dec
shrb
mov
adc
fimull
sbb
inc
std
ret
pmuludq
mov
es
test
loopne
popf
mov
aaa
xchg
inc
adc
inc
mov
enter
dec
ja
and
push
pop
mov
adc
and
outsl
xlat
dec
out
mulb
scas
jg
daa
fimull
js
pop
and
jbe
mov
insl
jb
fnstsw
fists
xchg
iret
adc
pop
dec
mov
popf
mov
mov
or
bound
iret
dec
and
fs
jg
out
adc
ss
fnstsw
mov
sbb
aas
mov
in
inc
mov
or
pmaxsw
jbe
in
lock
jno
rcll
fimull
cs
push
inc
divl
lods
imul
das
pop
hlt
jbe
shr
sti
mov
daa
adc
push
lahf
out
addl
or
adc
push
cmc
inc
add
jb
daa
outsl
in
ds
or
lahf
les
and
test
mov
push
mov
and
and
sub
push
ss
je
incl
inc
jg
cmpsl
mov
inc
pop
pop
iret
inc
cmp
push
aas
dec
or
loope
push
dec
fdivrl
pop
cs
adc
sub
jo
inc
push
push
push
add
outsl
mov
inc
dec
dec
mov
mov
pop
scas
movsb
or
adc
leave
sub
hlt
jns
in
or
aas
cs
cmpsb
inc
push
out
xchg
sbb
add
and
insb
les
scas
enter
movsl
mov
sti
imul
jns
jp
insb
sub
add
add
insb
xchg
leave
inc
repnz
fs
jb
leave
insb
je
mov
push
add
cs
cmp
mov
dec
pop
fs
leave
sub
sbb
daa
cmp
in
in
scas
imul
mov
xchg
dec
mov
lods
enter
sbb
push
insl
inc
loopne
pop
repnz
insl
inc
iret
gs
outsl
add
mov
jge
jge
nop
cs
mov
out
adc
mov
adc
insl
imul
jge
push
popf
and
push
sub
popf
out
sbb
daa
cmp
inc
xor
jb
in
or
in
xchg
fmul
call
mov
jg
jg
jmp
jb
jg
outsb
inc
data16
iret
repz
mov
jl
add
cmp
add
cmp
repz
mov
mov
mov
xchg
dec
mov
test
inc
cld
in
cmpsl
in
in
or
inc
scas
or
push
orb
in
inc
andb
ret
sbb
mov
repnz
or
dec
push
add
cmp
fildl
mov
outsl
pop
leave
jae
popl
daa
daa
daa
mov
jl
sahf
out
add
push
inc
orl
jo
xchg
and
jo
jo
jo
leave
inc
xor
leave
popa
imul
call
mov
mov
mov
pop
test
int3
mov
cmp
loopne
dec
repnz
jo
pop
jno
daa
js
mov
comiss
aaa
jno
jns
cmp
jno
add
add
daa
adc
lea
cmp
pop
in
test
xchg
sbb
or
nop
jl
daa
pop
fiadds
pop
pop
enter
shr
faddl
jb
test
push
int
out
out
divl
or
xchg
loopne
cmpsl
in
lds
xor
and
mov
or
out
xchg
daa
nop
adc
jb
mov
cmp
test
test
jp
xor
jae
xchg
and
cmpsl
or
jae
test
inc
inc
jae
dec
jae
and
in
pop
xchg
in
outsb
xchg
push
jb
cmp
ret
jmp
jae
sub
pushf
addb
lret
dec
outsl
fdivs
jae
jae
lret
lret
lret
stc
jae
je
je
je
repz
push
or
or
iret
repz
push
or
or
addr16
jb
jge
repz
adc
cmp
repz
lods
adc
adc
push
aad
jecxz
sbb
sbb
sbb
inc
sahf
sbb
dec
mov
lods
xchg
fcoms
add
cs
dec
les
out
fmull
jo
add
pushf
jmp
sbb
adc
jbe
pop
mov
nop
ja
push
add
lods
mov
mov
scas
frstor
in
lret
add
xchg
add
adc
inc
dec
cs
push
cs
mov
call
inc
into
hlt
xor
cmp
ja
insl
in
outsl
das
push
ja
pop
ja
mov
es
iret
pop
adc
mov
inc
pop
mov
pop
add
cmp
cmpsl
xchg
out
aaa
loopne
mov
aaa
insb
push
ret
inc
ja
push
mov
aaa
ror
mov
and
out
imulb
or
push
das
lcall
pop
pusha
add
adc
aas
out
inc
pushf
into
daa
xlat
pop
iret
sub
jb
mov
push
js
jbe
dec
movsb
nop
push
shlb
mov
cmp
mov
cs
orb
dec
cwtl
lods
xchg
jl
mov
jns
push
js
addr16
decl
outsl
hlt
test
or
enter
pop
mov
cltd
dec
nop
nop
push
repnz
sets
pushf
loope
ret
jp
lret
jp
mov
out
iret
mulb
mov
cmp
iret
sbb
jnp
mov
xchg
jns
mov
adc
and
mov
mov
xchg
dec
push
jb
mov
or
stos
jnp
jnp
jnp
leave
out
lret
xchg
add
fcmovne
xchg
jl
jl
cvtps2pi
inc
xor
xor
repnz
adc
xchg
jl
inc
repnz
or
popl
cli
repnz
fldenv
repnz
inc
nop
nop
scas
pushf
sbb
nop
pop
rcrl
enter
mov
cld
xchg
xchg
aas
xor
or
adc
sbb
xchg
xchg
xchg
jge
jge
jge
jge
xchg
xchg
xchg
xchg
jge
jge
jge
jge
xchg
xchg
xchg
xchg
jge
jge
jge
jge
shrb
xchg
jge
jge
pop
jb
jb
or
jb
or
or
jb
jb
push
add
jb
add
add
leave
roll
mov
xchg
cmpsl
aam
loop
dec
insl
xchg
adc
or
add
leave
and
jae
int3
lods
jle
jle
ja
outsb
daa
pop
leave
mov
stos
filds
in
and
int
fldl
lock
in
in
aas
cmc
mov
std
push
push
add
mov
or
jg
cmp
inc
mov
xchg
push
add
punpckhbw
mov
jg
xchg
scas
inc
cmp
lret
xchg
jg
jg
add
dec
ja
fildll
iret
and
or
in
int
cmp
and
das
jae
jns
aad
paddusw
add
or
and
fadds
push
aas
das
mov
pop
mov
or
xchg
inc
aaa
imul
mov
or
shlb
inc
push
xor
sbb
repnz
add
inc
js
cmp
add
andb
add
andb
cmp
mov
movsl
lods
pop
leave
jae
mov
add
daa
daa
stc
add
iret
repz
adc
sbb
repnz
or
xchg
jl
pop
pusha
push
add
xchg
pop
xor
daa
and
xchg
adc
jb
jmp
xchg
and
xchg
movsb
xor
in
inc
orb
andb
iret
sbb
push
jp
test
repz
or
cmp
repz
mov
mov
push
ss
jno
add
push
jg
lcall
sbbl
mov
stos
xchg
rclb
in
ss
orl
cmpl
sahf
fcmovne
pop
roll
fabs
daa
mov
out
jmp
push
leave
mov
or
push
add
rcrb
in
sbb
add
test
cwtl
adc
iret
in
dec
push
dec
dec
pop
scas
add
nop
xchg
cltd
insb
loopne
subl
repnz
cltd
xor
xchg
add
or
daa
outsl
xor
dec
dec
sahf
add
lock
shlb
pop
leave
lret
inc
inc
dec
nop
fldt
pop
jmp
iret
or
movaps
add
lahf
xchg
lcall
dec
leave
mov
pop
and
test
repnz
test
test
push
adc
addr16
ficompl
xchg
dec
xchg
fcmovne
xchg
xchg
pusha
aas
push
daa
pshufw
xchg
pop
and
mov
and
jmp
addl
mov
dec
lret
lret
lret
xor
dec
xchg
daa
pop
sub
in
jns
ja
cwtl
rcrb
lret
filds
aam
repnz
sahf
pushf
cld
pop
mov
adc
sbb
mov
mov
lock
mov
mov
or
test
pushf
pushf
mov
pushf
pushf
pushf
rcr
call
testb
decb
xchg
push
leave
mov
mov
sbb
jb
aaa
mov
dec
mov
xchg
and
arpl
mov
xor
test
inc
fwait
in
lods
mov
dec
sahf
fcmovnu
push
add
cs
push
mov
inc
cmp
out
adc
leave
pop
push
add
call
xchg
cs
pop
mov
pop
xlat
cs
cmp
out
mov
imull
nop
xlat
sbb
call
mov
mov
mov
das
ficompl
mov
xchg
scas
add
pop
mov
mov
mov
mov
iret
mov
repz
push
push
add
insl
stos
jmp
das
pop
jg
jns
leave
bound
add
jb
cmpsl
dec
add
jp
orb
xchg
push
or
cmpsl
or
inc
mov
inc
cmpsl
movaps
mov
test
fwait
and
inc
sbb
jb
inc
cmp
inc
lea
jb
es
outsl
ja
dec
cs
out
push
dec
dec
lods
pushf
ja
repnz
pushf
data16
xchg
pop
leave
jae
fcoms
leave
inc
cmp
sbb
sbb
addr16
iret
cmp
aas
push
add
push
add
stc
jecxz
push
dec
js
orb
mov
out
ss
fbstp
in
dec
lret
add
fistl
jmp
jg
mov
xchg
xchg
xchg
xchg
mov
or
in
insl
pop
ud2
pop
or
in
in
or
push
add
add
add
sahf
out
sahf
and
sub
xor
sahf
out
cmp
je
out
push
mov
cmp
jae
arpl
jae
pop
cmp
repz
andl
push
cltd
dec
shlb
out
and
loop
xor
nop
jg
xchg
outsb
nop
nopl
add
and
repz
add
repnz
pcmpgtd
push
leave
leave
leave
inc
mov
jbe
mov
pop
movntq
popf
scas
rorb
fmuls
loopne
out
sahf
or
or
or
fisubrs
or
or
cmp
movups
adc
rcll
aaa
cmpsb
xchg
inc
out
push
xchg
push
xchg
mov
add
nop
xchg
adc
cwtl
mov
repz
mov
add
iret
push
fimull
jle
cmpsl
aaa
jnp
cmpsl
add
iret
and
and
xchg
add
sub
mov
xchg
sub
decb
cmpsl
or
cmpsl
cmpsl
pusha
scas
push
pushl
push
or
iret
add
dec
daa
cmp
sahf
xchg
outsl
cmpsb
xchg
adc
push
rcl
fdiv
jecxz
or
add
and
incl
jl
out
fbld
xchg
inc
cmp
sub
addr16
in
and
pusha
xchg
lcall
test
mov
xchg
daa
iret
mov
push
rclb
and
cmp
pop
xchg
push
mov
push
add
xchg
xor
mov
xchg
pushf
pushf
cmp
push
add
jo
cmp
repz
orb
or
cwtl
pop
mov
xchg
out
mov
mov
out
rclb
rorb
adc
repz
xchg
shr
nopl
js
out
xchg
push
fwait
cs
dec
mov
out
test
stos
inc
xchg
shrb
push
sbb
xchg
xchg
es
jae
pop
je
jl
daa
stc
loop
mov
xchg
dec
stos
mov
dec
cmpsl
push
fists
loope
or
rcr
psllq
in
cmpsl
js
xchg
jg
xchg
cvtps2pi
shlb
sub
lds
fisttps
or
push
movsl
mov
aaa
inc
lods
aas
jg
push
or
scas
push
out
outsl
fldt
add
xchg
iret
adc
test
dec
or
fldl
add
femms
mov
push
into
pop
push
dec
xchg
xchg
adcl
pop
cmp
enter
mov
cmp
in
bnd
or
enter
mov
add
cwtl
mov
cmp
leave
mov
pop
mov
cs
enter
fdivrs
or
dec
sahf
out
or
xchg
daa
loopne
test
cwtl
ja
setb
adc
cwtl
and
das
das
dec
cwtl
push
cwtl
pop
cwtl
cwtl
and
fsubrl
insb
mov
cmp
test
xchg
pop
push
out
roll
ja
iret
add
xchg
aam
daa
in
or
dec
add
inc
repnz
push
test
sub
add
cmp
xchg
cmp
in
cltd
cs
jo
pop
and
sub
dec
js
or
mov
xchg
pop
pop
mov
or
leave
loopne
mov
repnz
out
cs
enter
cltd
outsl
push
lcall
push
mov
ja
and
xchg
mov
push
je
ljmp
xchg
and
cmpsl
push
lcall
xchg
lcall
jecxz
out
mov
rcrb
pop
lcall
icebp
repnz
fwait
pop
sbb
cmp
fwait
and
pop
mov
mov
cs
mov
xlat
jbe
fwait
enter
jns
rcrb
call
push
lock
lcall
pusha
pop
or
or
mov
mov
xor
sbbl
pushf
push
pushf
pop
pushf
mov
pushf
push
push
pop
jb
mov
and
pushf
sbbb
mov
shlb
pushf
pushf
inc
loopne
in
pushf
pushf
inc
mov
pop
xchg
mov
cs
and
mov
cwtl
add
pushl
das
push
popf
pop
popf
sbb
les
popf
leave
pop
mov
popf
scas
jne
inc
cmpsl
mov
sbb
daa
push
setge
pop
push
xchg
fisubl
cmpb
cmp
cmp
loopne
lock
cmp
lock
cmpsl
sahf
mov
cltd
mov
hlt
and
jg
sahf
pop
cmp
jl
mov
ja
sahf
outsb
jb
lsl
fsubl
cmp
jmp
das
fmuls
xchg
call
fidivrl
add
pop
or
pop
es
pop
xor
mov
xchg
lldt
pop
mov
lahf
pop
sbb
jb
lcall
in
jns
pop
or
iret
in
mulb
cld
sbb
pop
and
cmp
xor
push
aaa
xor
cmpsl
push
pop
jae
mov
je
add
test
outsb
daa
scas
movzwl
mov
iret
movl
cmp
out
or
xlat
or
stc
fidivrl
cli
add
cmp
mov
movsl
pop
xlat
mov
imul
xchg
dec
outsb
pop
pushf
pushf
inc
cmpsb
xchg
jns
fisubl
daa
cmp
pop
in
xor
out
mov
cmp
leave
and
sub
mov
call
lea
jg
daa
loopne
call
add
or
adc
sbb
mov
cltd
loopne
mov
das
xor
dec
mov
lock
cmp
addb
fisttpl
ja
ds
cwtl
mov
in
add
aas
test
cmp
in
mov
mov
cmp
enter
pop
jge
adc
call
mov
mov
cmpsl
sbb
movsb
adc
sbb
test
cmp
movsb
das
push
mov
std
mov
xchg
dec
mov
cmp
jo
and
inc
lock
mov
pop
pop
sbb
push
leave
stos
push
scas
test
pushf
mov
add
mov
xchg
jbe
movsl
popf
cmp
repz
add
add
sub
je
out
add
iret
add
jp
movsl
lahf
dec
movsl
iret
or
jae
pop
and
idivl
add
xchg
mov
fs
imul
xchg
fistl
cwtl
mov
pop
ds
cmpsb
fisttps
cmpsb
sbb
push
add
push
into
cmp
in
cmpb
xchg
mov
pushf
fmul
lcall
jns
scas
lret
cmpsb
ficompl
push
in
fisttpll
push
add
in
xchg
cmpsb
ret
cmpsb
ljmp
pop
cli
adc
cmpsl
or
leave
jnp
adc
adc
push
and
xor
cmpsl
fistps
dec
mov
sub
decl
mov
xchg
add
dec
sahf
dec
into
add
cmpsl
js
cmpsl
fildll
in
sahf
out
add
add
fisttpll
add
or
or
repz
or
or
xor
testl
mov
imul
cmp
sub
mov
dec
fidivl
pop
gs
test
jns
sbb
test
das
and
pop
mov
test
or
lea
jnp
jp
test
pop
insb
inc
pop
jo
daa
or
inc
xchg
or
jae
or
xchg
or
xor
or
iret
es
repnz
shrb
dec
lock
ja
and
dec
sahf
add
dec
test
mov
test
jb
subb
aam
fstpt
mov
test
mov
stos
stos
push
inc
and
movb
stos
stos
lahf
je
insl
in
stos
inc
dec
dec
outsl
lmsw
repnz
or
jns
js
stos
adc
cmp
movsb
mov
mov
add
and
push
ret
stos
mov
inc
add
cmp
sbb
mov
adc
out
inc
push
add
les
push
leave
and
enter
push
mov
add
push
sbb
jb
lret
stos
shrl
cmpsl
jae
jmp
repz
sti
xlat
sub
cltd
pusha
add
or
jns
movsb
nop
push
lods
add
cmp
cmp
add
jmp
syscall
add
jnp,pn
addl
dec
cmpsb
xchg
lds
in
ror
out
add
or
pop
pushf
loopne
call
dec
mov
add
in
data16
pop
adc
sbb
repz
das
sub
jl
xchg
mov
in
xor
repnz
cmp
test
add
fildl
call
mov
scas
inc
mov
push
pop
inc
scas
dec
scas
imul
scas
jnp
xchg
pop
push
cmpsl
push
push
or
sahf
xchg
out
pusha
mov
mov
push
mov
repnz
lock
ret
clc
lock
cmp
mov
or
shrl
dec
push
add
daa
daa
mov
pop
pop
movd
daa
daa
daa
daa
mov
repnz
sbb
pop
sahf
xchg
xchg
xchg
andb
jns
sbb
mov
sahf
cmpsl
jns
lock
pop
cmp
mov
and
push
and
imul
push
bnd
rol
cltd
dec
ds
add
loopne
mov
mov
sub
pop
das
pop
mov
jp
mov
mov
pushf
outsl
jge
jg
jb
enter
mov
mov
dec
cs
out
fcom
fimull
dec
dec
loop
decb
fisubl
add
sbb
and
cmp
mov
xor
data16
mov
jle
jns
stc
fisubrl
xchg
lret
pop
sbb
mov
das
scas
mov
dec
xorb
mov
mov
push
shll
fstpt
cmp
add
jb
enter
mov
pop
pslld
repnz
mov
mov
mov
repnz
mov
mov
mov
mov
repnz
jle
xchg
repnz
mov
mov
mov
mov
xchg
xchg
nopl
mov
jns
out
push
sbb
sbb
sbb
jp
out
sbb
mov
cmp
lea
push
and
sbb
and
repz
and
and
and
cmp
repz
dec
es
daa
repz
repz
sub
jb
jmp
cvttps2pi
mov
dec
xchg
mov
dec
cmp
cmpsb
xchg
lret
mov
mov
rolb
mov
je
fmuls
das
loopne
call
dec
lock
pop
or
and
sub
add
es
fucom
cmp
add
adc
mov
scas
mov
xorps
scas
int
sbb
in
push
sbb
jb
repnz
jb
jb
ja
popf
repnz
jae
shrd
mov
dec
sahf
ja
dec
adc
int
aad
mov
add
sti
aas
fmulp
leave
in
add
cs
xchg
out
gs
repz
daa
mov
es
and
mov
outsb
daa
negl
pop
mov
inc
jns
xchg
out
dec
push
xor
xchg
out
xor
out
jns
xor
xchg
out
dec
bswap
push
cmp
push
leave
xor
fistpll
sbb
xchg
fs
iret
add
iret
xchg
mov
nop
mov
shld
test
cs
xchg
mov
dec
xchg
fimuls
add
pushl
xor
xor
sahf
ja
xchg
orb
dec
dec
mov
fmull
add
jecxz
mov
ud2
stc
fcmovne
enter
mov
cmp
sub
xor
adc
jns
xchg
dec
push
adc
push
sahf
xchg
out
jne
sbb
mov
xchg
sbb
lods
sbb
out
jns
fsubs
jecxz
gs
stc
mov
jecxz
bsr
mov
xchg
iret
sub
rolb
sarb
push
adcb
mov
insl
xadd
add
enter
out
rolb
fsubrs
xchg
add
ret
js
xchg
pop
movd
mov
jns
leave
repz
adc
xor
adc
repz
aaa
lar
dec
mov
sbb
out
mov
pop
cmp
iret
xchg
roll
sbb
daa
jns
inc
cmpsl
rcr
jae
in
fcoml
iret
divps
pop
setae
xchg
xchg
mov
xchg
out
xlat
xchg
add
out
out
int
inc
js
cs
es
aam
movaps
jae
xor
xchg
dec
outsb
daa
pop
pop
fs
je
xchg
xlat
dec
jl
adc
lahf
movsb
inc
pop
dec
cmpsl
push
mov
mov
in
jns
or
jecxz
xchg
cli
add
or
ljmp
mov
fcmovb
leave
xrelease
inc
add
xchg
jo
js
cmp
mov
xchg
jb
rcl
fsubp
out
pop
sbbl
testb
push
push
das
sarl
cmp
psllq
ja
push
add
cmpsb
add
xchg
iret
leave
popa
push
xor
test
dec
dec
dec
mov
inc
repnz
sahf
xchg
iret
xlat
add
add
int3
add
xchg
push
daa
iret
jae
daa
adc
sbb
and
out
repnz
xor
ret
ret
loop
sbb
jg
fildll
fcmovne
insl
jne
jge
test
out
jbe
fstp
xchg
pop
popf
fbld
adc
or
neg
loopne
pop
lock
jae
idiv
xchg
add
in
sbb
and
sub
xor
pop
and
sbb
ret
push
pop
jbe
mov
xchg
jbe
cmpsl
mov
loopne
xchg
ds
cmp
xchg
xchg
test
lock
out
xchg
fmul
add
mov
adc
pop
les
add
mov
leave
pop
fisubrl
les
das
pushf
cmp
lods
cmp
inc
add
dec
fcmovne
repz
pop
adc
pop
aaa
nop
les
hlt
addr16
dec
and
push
les
loopne
sub
pop
adc
sbb
and
je
fmulp
leave
inc
pusha
imul
je
out
addl
in
shl
xchg
push
into
mov
mov
ret
fld
jp
mov
vmaxss
pop
iret
adc
sbb
es
lret
lret
lret
lret
xor
cmp
inc
push
lret
lret
lret
lret
pop
push
lret
lret
lret
lret
mov
xchg
lahf
stos
cmp
jmp
sbb
jb
jb
sbb
pop
jae
jb
push
adc
cmp
shrb
cs
out
cmp
in
push
xor
adc
cmpsl
lahf
fisttpl
pop
xor
setle
jns
add
or
sahf
out
and
cmp
out
inc
aas
dec
inc
sahf
out
sahf
pop
inc
gs
jo
repnz
jns
inc
fiadds
sahf
ja
push
inc
rcr
dec
out
fucom
jmp
dec
jns
fsts
adc
sahf
out
sub
push
daa
daa
mov
inc
dec
pop
push
bound
repnz
js
orl
dec
dec
sahf
pop
mov
fimuls
ffreep
enter
dec
push
leave
mov
leave
scas
or
and
das
das
adc
sbb
and
sahf
xchg
out
aas
xor
push
cmp
addr16
jns
push
leave
pop
ror
mov
and
leave
sarb
fcomps
psllq
in
pop
adc
out
cmp
push
adc
orb
sahf
ja
cmp
mov
add
repz
call
sub
pop
ss
clc
leave
and
fidivrs
add
inc
out
lret
jns
out
dec
dec
add
add
pop
pusha
lret
lret
inc
popa
loopne
test
push
or
loopne
adc
jo
daa
xchg
outsl
enter
lret
lret
mov
lret
push
loopne
xor
in
and
sub
fisubl
lds
outsl
inc
pop
incb
dec
fisttps
lret
outsl
adc
sbb
mov
inc
shl
push
lret
cmp
ja
xchg
push
pop
pusha
add
enter
mov
dec
sahf
add
and
mov
mov
mov
lret
lret
pop
leave
jae
mov
in
ss
add
int3
pop
pop
js
stc
fisttpll
mov
int3
xor
lret
lret
inc
pop
dec
int3
push
int3
popa
int3
dec
dec
outsb
mov
emms
pop
orb
mov
fmulp
mov
iret
cs
out
in
int3
mov
nopl
int
adc
sbb
sbb
sahf
xchg
outsb
nopl
daa
xor
in
and
ja
mov
je
jg
cmp
dec
sahf
daa
mov
mov
and
call
mov
push
add
imul
ficoml
inc
out
mov
iret
xchg
xchg
and
pop
cmp
xchg
orb
repnz
push
scas
pop
mov
xchg
add
into
inc
mov
into
in
lock
jle
repz
mov
adc
iret
push
xor
sahf
out
sbb
imul
jg
iret
repz
and
out
in
push
and
mov
es
jns
daa
fmulp
iret
add
jns
sub
loop
ljmp
add
dec
dec
sar
jne
inc
add
sub
in
mov
jmp
mov
push
cmp
sarb
rolb
push
dec
sahf
out
add
jb
iret
repz
jge
mov
sahf
ja
pop
into
sarb
mov
push
add
call
movsl
xchg
rcl
outsl
rorl
sahf
aaa
jb
shll
push
add
out
pop
inc
or
loopne
fucom
pop
sysret
arpl
pop
fs
outsb
rcl
lahf
mov
movl
mov
sarl
sub
xor
sbb
jmp
outsl
iret
repz
cs
add
daa
dec
sarb
cvtdq2ps
cltd
push
inc
jmp
out
and
cmp
mov
xchg
and
sahf
xchg
cmpsl
fistpl
or
jecxz
sbb
cmp
mov
rcl
out
and
psrlq
push
or
or
adc
cmp
jns
dec
inc
push
push
pop
leave
repz
sahf
pop
addr16
sbb
jns
fisttpl
sbb
lods
push
mov
and
and
and
xchg
popl
rorl
mov
and
cs
inc
aam
dec
aam
aam
dec
sahf
sub
cs
pop
aaa
outsl
jmp
out
mov
xchg
das
test
mov
outsl
xchg
xchg
xchg
aam
aam
aam
aam
popf
loope
iret
or
out
adc
pop
pop
outsb
mov
out
sub
out
dec
dec
push
popa
adc
jns
adc
adc
in
dec
aad
mov
mov
dec
in
mov
repz
les
iret
and
loop
jns
mov
sti
and
sbb
repnz
adc
sbb
daa
repnz
iret
sub
cmp
sahf
ja
cs
sub
out
je
das
jg
push
xor
mov
mov
mov
loop
in
ss
xlat
psrad
lret
fs
out
cmp
sub
add
arpl
jne
add
xchg
adc
sbb
add
insb
push
add
aas
sub
rcl
inc
push
sub
inc
sbb
icebp
adc
inc
xchg
sub
mov
in
push
xchg
dec
aaa
repz
mov
dec
aaa
cmp
push
add
add
iret
fwait
sbb
mov
popf
pushf
cmp
pop
or
or
in
sub
or
fwait
mov
push
adc
and
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
pop
rcrl
or
dec
add
jmp
iret
repz
cmp
sub
cmp
repz
or
clc
call
in
call
out
sahf
fcom
ror
enter
iret
jnp
pop
mov
jns
leave
cwtl
nop
push
mov
sahf
insb
pusha
push
push
dec
inc
push
out
sub
or
pop
cmpsb
mov
mov
negb
mov
mov
and
cwtl
cmp
xor
std
add
jno
xchg
inc
test
sbb
adc
sub
daa
pop
lock
testb
add
cmpsb
mov
pop
movsl
sbbl
ja
pop
shll
pmulhuw
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
fistpll
mov
ficompl
mov
xor
mov
fcomp
loopne
jb
jle
mulb
inc
mov
dec
pop
dec
jnp
or
push
fcompl
xor
mov
inc
mov
inc
mov
ja
daa
pop
jle
pmovmskb
mov
sub
inc
mov
pop
das
aas
sbb
inc
dec
pop
add
ror
dec
add
repnz
out
push
or
jns
out
adc
out
adc
adcb
sbb
repz
sbb
in
sbb
cmp
pop
push
cmp
jl
pop
imul
test
inc
out
ljmp
mov
sbb
cmp
push
mov
add
pop
icebp
sahf
icebp
ret
aam
aam
inc
pop
movsb
fidivrl
or
sbb
add
dec
push
xchg
out
into
push
xorb
push
dec
iret
icebp
addr16
push
push
lcall
add
mov
jnp
inc
push
xchg
aas
pop
stos
movb
push
aad
xor
fisubrs
scas
pop
insl
push
in
cmp
jg
out
out
fcoms
push
inc
sub
jo
push
roll
add
cwtl
add
sub
mov
xchg
es
out
outsb
inc
icebp
dec
push
sbb
sbb
icebp
or
scas
stc
cmp
push
pop
push
and
add
xor
out
or
adc
sub
iret
lock
lock
inc
iret
in
push
and
lock
fdivp
sahf
negl
push
cld
adc
hlt
sbb
jns
fcom
out
sahf
out
sbb
push
rclb
out
sahf
mov
and
sahf
out
lods
and
in
aam
clc
or
out
jg
movups
daa
xor
adc
xorb
jl
incl
cmp
outsl
and
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
or
dec
cmp
xchg
cmpsb
xchg
mov
jae
das
stos
pusha
popf
out
dec
insb
addr16
jnp
jmp
das
mov
add
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
ljmp
aam
imul
loope
jp
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
decl
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
repz
jmp
mov
subb
fwait
xchg
and
and
mov
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
lcall
inc
dec
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
inc
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
insl
and
mov
ror
add
cmpsb
fmuls
out
inc
rclb
pop
pop
inc
sbb
inc
pop
inc
push
dec
ficoml
cmp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
filds
or
fcompl
shrl
push
ficoms
push
xlat
enter
mov
and
pushl
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
inc
pop
pushl
lahf
xor
mov
js
stc
pushl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
lcall
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
xlat
pushl
pop
cmp
mov
inc
movsl
fisttps
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
lcall
out
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
jmp
call
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fwait
jmp
out
mov
jns
imul
andl
shrb
rclb
pushl
int3
add
mov
das
es
lds
or
jg
sub
mov
cmpsl
call
ret
shlb
scas
ficomps
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
ljmp
inc
imul
scas
fcompl
fldenv
ja
push
filds
aaa
pusha
mov
inc
lcall
mov
jmp
mov
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
loope
decl
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
push
pop
pop
xor
jns
insl
push
xor
dec
inc
cmp
ret
test
add
repz
jmp
push
xlat
fcomp
fcmove
repz
fcmovnu
fstp
loop
repz
cmp
in
jmp
ljmp
iret
repz
div
clc
stc
cmpsb
sbb
repz
sti
cld
daa
adc
add
adc
inc
cwtl
sub
adc
push
cmp
mov
add
and
push
dec
bound
jbe
inc
hlt
sahf
and
bound
inc
push
in
aaa
xchg
push
popa
je
push
jge
int3
in
cltd
out
and
inc
dec
lahf
bound
sub
and
aas
pop
mov
pushl
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
movsb
mov
or
xor
bound
mov
push
inc
jbe
pop
insb
imul
push
insb
gs
mov
jnp
push
dec
inc
es
outsl
dec
mov
inc
or
push
pop
dec
xchg
lock
movsl
mov
pop
sub
push
fs
push
lret
pop
push
ss
jbe
pusha
push
je
sub
mov
add
gs
jbe
inc
push
adc
mov
aaa
add
loop
call
jns
sbb
mov
popa
xchg
mov
aaa
je
cwtl
jp
stos
aaa
aas
inc
push
in
and
cmp
aas
or
adc
cltd
and
jae
sub
or
daa
int
push
mov
aas
flds
inc
inc
in
int
or
sbb
inc
pop
sti
jecxz
test
je
jo
inc
inc
add
ds
mov
scas
add
mov
iret
int
push
dec
cmp
push
mov
mov
sbb
and
fistpll
and
insl
outsb
mov
test
mov
pop
xor
mov
imulb
adc
xor
in
cs
ss
clc
xchg
into
pop
push
dec
mov
jo
insl
sub
cmp
stos
pusha
add
mov
cltd
dec
int3
push
mov
xchg
add
ss
mov
inc
outsl
pop
mov
xchg
lcall
cmp
sub
pop
stos
lea
mov
js
sub
out
jb
sahf
add
xor
jo
adc
or
imul
pop
outsl
add
lds
xchg
jno
mov
in
add
adc
test
cmpb
and
mov
arpl
ret
sarl
jo
push
test
lahf
pop
xchg
insb
jns
push
addb
das
inc
jb
push
cmp
gs
inc
outsl
arpl
dec
popa
mov
sti
or
inc
push
bound
ja
mov
jbe
xor
pop
cmp
mov
daa
addr16
je
das
xor
movnti
cwtl
addb
inc
dec
aaa
adc
mov
fidivs
or
outsl
pop
pop
ret
inc
dec
outsb
dec
inc
sub
adc
subl
clc
sbb
sbb
push
jno
cld
pop
stc
inc
push
inc
dec
pop
rcll
push
jns
arpl
je
sub
mov
pusha
in
sub
inc
jne
stos
inc
fs
pop
inc
and
test
scas
xlat
notl
daa
sub
push
add
lods
or
sub
sub
add
lods
add
push
add
adc
dec
orl
adc
and
xorb
pusha
add
fistl
add
add
or
pop
pop
push
or
fcomi
decl
or
or
or
or
adc
adc
push
adc
scas
std
fwait
pop
push
add
pop
sbb
adc
adc
adc
in
cmpsb
fldl
add
or
adc
pop
adc
jae
rorb
add
or
add
and
add
sahf
add
les
push
mov
testl
or
adc
inc
mov
jb
das
mov
jge
call
idiv
pushl
inc
push
adc
pop
and
xor
inc
mov
adc
xor
cmpb
or
adc
mov
pusha
xchg
sbbb
jbe
fsubs
inc
add
and
add
push
adcb
inc
inc
and
and
inc
sub
xor
addl
and
sarl
stos
add
pop
scas
stc
das
mov
cmp
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
jo
lock
and
or
adc
xorb
scas
fiaddl
or
js
ja
adc
cli
sub
rcr
push
ret
xchg
decl
and
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
call
out
pop
les
fsts
dec
sub
pop
mov
cmp
sub
cmp
xor
and
shr
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
dec
mov
add
std
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
incb
sbb
mov
movsl
jecxz
pop
mov
aas
mov
push
stc
or
xchg
jg
decl
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
push
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
jmp
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
ljmp
xchg
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jle
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
pushl
mov
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
or
cltd
inc
sbb
xchg
mov
mov
out
pop
jb
mov
mov
mov
sub
xor
mov
jl
rorl
adc
fcmovnu
decb
hlt
push
add
stc
loope
mov
sar
andl
aas
pop
push
mov
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
cmp
push
clc
jb
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
fisubs
icebp
aas
std
cli
push
push
push
idivl
ljmp
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
or
ljmp
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
xchg
fistl
negb
pop
hlt
sub
movsb
add
lea
pop
jmp
jg
gs
std
xorb
jg
aad
adc
incl
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
ljmp
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
decl
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
incl
push
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
cld
cmp
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
ljmp
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
jmp
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
fisubl
and
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
dec
adc
pop
cld
addl
adc
and
mov
or
fmull
enter
jecxz
scas
sub
clc
jg
jg
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
mov
pop
iret
mov
jg
mov
aad
test
lds
inc
mov
mov
iret
push
pop
cmp
jg
push
push
sbb
stos
icebp
pop
incb
jno
adc
push
ljmp
jl
jecxz
sbb
sarl
adc
loopne
shll
mov
jle
imul
dec
push
in
aas
mov
mov
js
fsubrl
lock
and
incl
sbbb
mov
pushf
pop
lock
in
or
and
mov
adc
inc
jg
xchg
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jge
xlat
data16
pop
nop
mov
dec
ljmp
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
loop
inc
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
pop
add
dec
mov
sub
jge
xor
stc
clc
ja
lahf
les
sbb
sbb
cld
addl
loop
pop
inc
sbb
mov
lahf
outsl
int3
push
sbb
pop
lods
movsl
test
sti
jle
xchg
popa
out
out
clc
pop
ficompl
inc
test
in
jge
popa
push
test
fcomip
pushl
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
sti
orl
icebp
push
cld
mov
jg
mov
pop
jg
pop
shrb
rcl
jg
adc
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
cmp
adc
inc
lds
push
pop
adc
imul
or
outsl
incl
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
ljmp
jmp
mov
into
test
xchg
movsb
insb
or
and
xchg
cmpsb
test
fidivrs
clc
insb
test
stc
push
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
xchg
clc
decl
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
mov
hlt
mov
or
or
dec
ss
mov
movsb
or
repnz
mov
loopne
xchg
imul
cmpsl
lret
pop
in
cmp
jmp
adc
clc
adc
jmp
hlt
dec
mov
jmp
sbb
xlat
inc
aas
mov
jg
mov
incl
addr16
sbb
cld
daa
jp
std
adc
ljmp
mov
ret
nop
cmp
das
incb
add
les
div
cld
idivl
fisubrl
scas
stc
lahf
loope
jae
jmp
shrl
je
jge
paddsw
fbstp
out
xchg
add
out
icebp
mov
fndisi(8087
fisttps
sti
mov
fists
enter
push
and
das
jge
fisubrs
out
cmp
call
mov
das
js
iret
decb
adc
mov
and
xchg
adc
call
inc
xchg
popf
iret
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
adc
stos
jp
dec
sub
in
inc
jmp
xor
outsl
adc
iret
fdivrl
xchg
lcall
jo
and
pop
gs
sub
jo
sarl
pop
movsb
and
jno
ret
fs
or
sbb
iret
decl
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
ljmp
ljmp
flds
lods
xor
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
push
sub
faddl
mov
push
insb
inc
outsl
pop
fisttps
pop
stc
push
dec
out
fstpt
mov
enter
dec
xchg
pop
add
or
xchg
cmc
out
daa
icebp
call
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fists
push
cmp
fsubrl
dec
add
inc
leave
inc
or
add
xor
pop
inc
dec
push
mov
push
push
mov
bsf
popf
int3
pop
iret
decl
rolb
jns
sbb
loop
ljmp
fidivrl
and
dec
jg
push
pop
outsb
cmp
test
dec
cwtl
incl
mov
xor
loop
push
sbb
fcmove
push
and
xchg
or
push
cmp
mov
stos
lds
pushf
and
sub
mov
loopne
pop
ret
jbe
mov
int
testb
in
jge
hlt
mov
into
fidivs
int
or
rorb
out
push
lea
and
sub
mov
incl
into
cwtl
push
dec
and
in
daa
sbb
loope
and
and
push
mov
jmp
dec
pop
push
ret
cmp
add
pop
data16
loopne
loop
notb
lea
sub
cld
incl
mov
mov
push
xchg
js
test
loop
mov
imull
filds
mov
sbb
fcmovb
sbb
and
xchg
lcall
lods
sub
shlb
fmull
test
aam
test
imul
add
dec
and
call
jle
insl
testb
push
cli
pop
pop
pop
cwtl
add
aad
adcl
lret
mov
cltd
mov
lcall
movsl
xchg
adc
jns
and
sub
inc
repnz
push
sarl
incl
mov
test
adc
loope
jecxz
ficoms
or
jns
pop
or
andb
je
xchg
pop
lahf
add
jge
xchg
adc
add
subl
stos
adc
xlat
add
jle
imul
pusha
push
inc
push
jo
xchg
mov
sbb
movsl
xchg
ret
mov
imul
inc
movsl
jo
and
pop
imul
xlat
roll
jmp
mov
ljmp
jae
rcrb
inc
mov
loopne
jo
shrl
lea
outsl
lods
and
decl
dec
pop
nop
sbbb
and
sbb
js
in
das
mov
sub
stos
add
lcall
pop
dec
mov
xchg
and
fwait
lods
imul
pop
or
push
jl
decl
mov
ss
xor
adc
leave
jmp
rcll
cmp
dec
mov
ljmp
pop
xchg
lcall
dec
inc
mov
fstpt
sbb
addr16
sahf
fidivl
xor
mov
lock
clc
push
push
push
je
push
ret
mov
addr16
sbb
sti
in
dec
push
dec
jecxz
mov
inc
sub
lret
and
lret
pop
add
add
decl
bound
lret
or
mov
decl
outsb
mov
or
jnp
shll
lea
addr16
orb
dec
and
mov
pop
gs
lahf
loopne
test
sbb
lret
mov
lcall
mov
jle
stc
inc
jno
xor
jb
pop
or
jmp
xchg
ds
xor
jmp
mov
add
lds
iret
sbb
rcr
sub
insl
imul
push
out
mov
cltd
inc
testb
movhps
ljmp
fwait
jg
jl
clc
inc
xchg
xor
ds
lods
mov
mov
call
cld
or
lods
ds
mov
int3
push
adc
adcl
cmp
mov
xor
ljmp
cmp
imul
sahf
and
stos
sub
inc
and
sub
mov
pop
movsb
int3
ds
mov
jo
enter
inc
mov
and
stos
xchg
and
sbb
incl
popf
mov
or
cmp
sbb
ficoml
jns
imul
xor
push
mov
and
fstpt
sub
enter
add
xor
mov
pushl
mov
pop
mov
inc
dec
andb
mov
mov
and
ds
lods
scas
mov
lcall
or
incl
stos
imul
insl
xlat
mov
repnz
lock
add
mov
cmp
pop
cmp
lock
pop
inc
jno
call
sbb
sbb
xor
clc
inc
adc
decl
loop
cli
mov
jg
das
int3
xchg
xor
push
sarb
or
mov
xchg
jp
sbb
popl
nop
mov
insl
add
mov
je
subl
cmpsb
test
decl
inc
push
jbe
lds
loopne
ret
in
jle
gs
pushl
rcll
mov
mov
and
sbb
test
jmp
jnp
sbb
xor
inc
sbb
add
rorl
pushl
adc
roll
push
aaa
cmp
sti
pusha
or
add
pushl
dec
ja
xchg
lret
psadbw
jne
mov
or
push
mov
movsl
sar
jmp
ss
fisttps
repnz
adc
inc
xchg
cld
mov
mov
push
ficomps
dec
iret
fwait
outsl
mov
mov
dec
ret
or
das
jbe
sub
ja
pcmpgtb
fbld
testb
dec
imul
popf
dec
pop
sbb
idivb
jmp
jle
decl
mov
cmc
add
cli
bound
fisubl
and
outsb
jmp
das
les
hlt
pushl
sbb
popa
push
mov
inc
add
gs
fcomip
xor
scas
inc
inc
inc
pop
aad
mov
pmaddwd
loop
lret
mov
popa
xorl
dec
inc
inc
cltd
or
outsl
push
mov
rcrb
cmp
dec
sbb
mov
mov
mov
mov
jmp
mov
decl
jg
xchg
insl
pop
pop
jl
mov
inc
subl
out
iret
divb
xlat
pushf
fs
mov
ljmp
fdiv
mov
xor
jp
mulb
push
jl
jae,pn
jne
adc
push
das
scas
xchg
pushl
cmp
or
cmp
stos
loope
aad
sahf
cmp
dec
jmp
out
out
out
mov
xor
push
mov
xchg
adc
jno
xchg
fwait
cli
fistpll
divl
xchg
mov
pushl
and
lcall
sti
add
outsb
decl
lods
or
sub
push
in
jns
mov
add
fdivrs
xor
call
push
ds
sbb
pop
test
jge
lret
lds
lods
jecxz
daa
pop
jl
mov
out
clc
xchg
es
or
stos
sbb
insl
loopne
and
mov
call
leave
hlt
mov
sub
out
aas
push
stos
stos
adc
mov
and
sbb
jmp
rcll
push
das
mov
fdiv
stos
and
mov
mov
cld
xchg
cmp
push
mov
rorb
or
cmp
mov
scas
stos
fdiv
and
in
movsl
aam
in
decl
push
rcr
clc
dec
jge
xor
jmp
std
xchg
popa
test
mov
ljmp
pop
jmp
scas
sub
sub
mov
fcompl
cmp
mov
mov
sar
mov
idivb
insb
or
jle
insb
test
xchg
cltd
add
cmp
dec
cld
jnp
mov
jecxz
bound
mov
call
subb
pop
xor
iret
add
cwtl
and
movsb
test
iret
sbb
fcoml
popa
cmp
cmc
js
push
mov
out
ljmp
inc
jecxz
and
mov
out
fldenv
xchg
adc
pop
cmp
popa
pushl
movsl
mov
in
shrl
cmp
outsb
xchg
add
add
push
repnz
mov
xchg
test
sar
pushl
es
mov
out
lret
lds
std
push
inc
cmp
arpl
lcall
pusha
in
push
popa
xchg
pop
add
lds
xor
cli
lods
dec
jne
lods
call
std
pop
push
sub
mov
pop
cld
or
mov
adc
pushl
cli
jmp
mov
inc
stc
mov
or
and
shlb
jno
dec
or
and
incb
jb
rorb
jo
sub
ljmp
mov
push
ficompl
scas
dec
and
in
add
or
call
mov
sub
xchg
cmp
das
mov
push
bsr
push
jl
xchg
std
test
inc
jge
stos
bound
fs
aaa
sub
icebp
decb
and
or
test
lea
popf
pop
out
and
int3
notb
mov
imul
scas
adc
test
cltd
mov
push
lret
push
cmpl
dec
hlt
incl
dec
ss
out
ja
sub
mov
mov
ss
outsb
xchg
inc
dec
xchg
adc
in
mov
and
dec
push
and
inc
imul
das
sar
jecxz
test
jno
shll
jmp
leave
loopne
ljmp
pop
pop
out
popf
sub
sar
scas
arpl
xor
hlt
pusha
fwait
dec
mov
in
mov
aad
out
stos
mov
out
jno
sbb
dec
push
rcll
test
pop
mov
jmp
push
or
jno
lret
out
or
fldenv
out
repnz
nop
dec
adc
mov
mov
cs
lcall
and
fwait
or
call
test
push
xchg
shlb
sbb
scas
mov
dec
pop
sub
fcoms
mov
lcall
adc
push
daa
xchg
dec
jae
test
mov
clc
call
fsubrl
add
xor
jmp
cwtl
or
xchg
cmp
jno
dec
out
cwtl
fldt
cmc
sbb
insb
xchg
or
lds
add
mov
jg
adc
inc
sbb
inc
les
lret
push
test
scas
sub
outsl
dec
xchg
add
and
inc
adc
sbb
int3
mov
inc
adc
hlt
incl
pop
mov
std
dec
shll
hlt
iret
mov
neg
bnd
jmp
push
or
pop
sub
inc
scas
or
cmp
sbb
out
test
fwait
adc
mov
gs
out
cmpsb
xchg
cltd
sub
shl
push
sub
sqrtps
out
cmp
lcall
mov
xor
pop
cmpsb
xchg
aam
mov
enter
mov
gs
cmp
in
mov
adc
or
jmp
and
shr
ficompl
aam
fcmove
mov
scas
add
je
ret
fcomip
fldcw
add
sbb
pop
mov
aad
xchg
lock
ljmp
push
aam
dec
ja
insb
or
jno
dec
sbb
mov
ss
call
data16
fucomip
cmp
xchg
dec
sahf
test
mov
add
shll
jg
mov
jmp
lret
dec
sub
cmp
or
iret
dec
das
sbb
dec
mov
sub
mov
pushl
cwtl
aaa
pop
adc
movsl
loop
aam
push
inc
mov
fbld
dec
gs
decl
push
out
cli
ret
xchg
xchg
test
std
inc
fwait
hlt
fistpll
xor
shr
sub
inc
xlat
xchg
sbb
push
jnp
hlt
fistps
pop
pop
lods
les
mov
sub
cld
add
incb
push
jecxz
fistpll
shll
xor
or
pop
dec
test
pop
sub
ljmp
sbb
cmp
jp
mov
jns
lea
outsl
xor
lcall
cmp
lret
pop
imul
adc
cwtl
mov
int
ret
jbe
jl
add
ljmp
sbb
test
jmp
xor
call
push
jle
out
repnz
clc
filds
dec
mov
cld
fimuls
push
jg
incl
int
sub
flds
dec
iret
adc
adcl
xchg
sbb
lea
repnz
lcall
xlat
mov
rcrb
clc
cmp
sahf
mov
inc
fdiv
mov
aaa
mov
adc
sarl
insb
and
bound
mov
cli
fisttps
adc
sbb
pop
std
jp
in
or
lock
fistps
lahf
inc
sahf
or
fwait
cld
cmpsb
push
push
insl
lret
je
ret
imul
es
jg
scas
repnz
ljmp
movsl
enter
dec
outsl
xor
and
pushl
jg
adc
xchg
or
pushf
lahf
out
in
push
xchg
dec
std
enter
mov
dec
popf
shlb
dec
shlb
enter
mov
dec
dec
and
adc
jg
mov
arpl
arpl
pop
dec
fst
inc
call
and
push
mov
rcrb
xor
push
jmp
sub
icebp
add
bound
daa
push
ficoml
test
or
push
hlt
push
mov
pop
stos
jg
mov
ret
test
inc
fidivs
adc
xor
out
xlat
xchg
mov
ljmp
out
dec
lods
adc
sub
adc
xchg
stc
addr16
mov
push
js
scas
filds
setl
fsubl
xchg
stos
es
pop
out
cli
jmp
or
cmp
cmpsl
mov
nop
aaa
lods
ret
in
jno,pn
cmp
call
clc
mov
mov
push
orl
or
movsb
pop
rorl
addb
push
divb
je
cmp
inc
gs
into
std
or
in
aaa
adc
rolb
dec
test
push
mov
or
mov
xor
xchg
cli
mov
cmp
pushl
sbb
xchg
lret
mov
and
test
rcl
mov
mov
incl
cld
test
cld
adc
dec
sbb
add
jmp
loope
pusha
and
ret
decl
xor
fcmovbe
mov
lods
mov
sub
into
mov
cmc
add
jmp
test
jl
mov
sahf
cltd
cmp
lcall
sub
nop
inc
mov
jb
lahf
pop
js
mov
incl
lods
mov
push
adc
hlt
xlat
sarl
js
xchg
and
inc
dec
icebp
mov
call
adc
mov
enter
out
xor
iret
test
jp
test
cmc
jmp
incl
jg
loope
daa
paddusw
decl
loope
outsl
xor
test
loop
push
in
jnp
mov
add
jns
mov
jmp
daa
jnp
xor
pop
in
and
stos
mov
pop
imul
mov
jmp
fwait
pop
inc
cmp
jnp
inc
lods
adc
nop
and
fiadds
enter
and
push
insb
sbb
sbb
subl
push
int3
mov
mov
test
add
jp
fcomip
decl
lcall
mov
mov
fwait
das
adc
cld
sub
jmp
out
hlt
ret
adc
scas
pop
cld
lea
out
js
pop
test
lcall
cmp
sahf
sub
bnd
hlt
aas
mov
in
xchg
pop
or
iret
pusha
ss
jg
jg
pop
xchg
clc
fstl
mov
adc
jle
pop
aad
push
dec
pop
sbb
fs
add
xor
enter
inc
adc
fcomip
hlt
rol
inc
sahf
or
mov
ret
mov
aam
inc
lret
xor
sub
push
out
bound
lret
xchg
imul
inc
add
out
shr
mov
pop
cld
lcall
lret
pop
mov
data16
insl
push
adc
clc
xor
fwait
push
stos
cltd
push
add
stc
scas
pop
mov
and
jge
cmpl
fisttps
xchg
cwtl
push
jg
jmp
xlat
data16
int3
mov
push
xchg
and
dec
push
aad
cmc
jmp
aad
or
outsb
cmp
dec
add
popf
pop
hlt
lea
incl
xor
xor
sahf
mov
arpl
out
cmp
stos
shlb
push
out
jg
andb
fbstp
addr16
ja
and
popl
jg
add
cld
and
loopne
jle
movsl
and
lock
pushl
stos
fidivrl
pop
aad
push
add
shrb
inc
scas
push
dec
fwait
pop
jmp
fldpi
repz
and
push
pop
inc
pop
inc
xchg
cmpsb
aas
adc
clc
xchg
clc
nop
in
ret
ja
ja
cld
ljmp
jg
xchg
mov
add
sub
stc
icebp
inc
xor
mov
in
push
in
adc
jg
fisubrs
lds
mov
fadds
and
loop
push
jbe
xchg
and
gs
sub
jb
add
jle
add
incl
mov
mov
and
and
sub
sub
imul
decl
fnsave
or
rcrb
iret
ss
dec
stc
cld
mov
sub
stos
add
ljmp
pop
mov
mov
fisttpl
xchg
cmpsb
pop
int
jno
movsl
pop
call
jp
dec
dec
das
fistps
inc
xchg
push
clc
jns
in
adc
es
iret
jnp
mov
repnz
fdivl
mov
sarb
add
and
das
cld
inc
adc
mov
subb
out
push
push
inc
fwait
lcall
xchg
mov
mov
dec
popfw
inc
sbbl
mov
pop
fnstsw
icebp
in
sbb
sbbb
or
xor
cmpsb
call
outsl
lret
and
sbbb
mov
lods
rcrl
rcrl
cmp
call
adc
sbb
out
jbe
aaa
xchg
dec
pop
stc
in
popf
mov
pop
outsl
in
jae
lds
clc
incl
fwait
jmp
mov
jecxz
inc
cmp
shrb
into
test
fadds
or
stos
dec
ss
cli
cmpsl
xchg
test
ljmp
mov
xor
dec
pusha
jge
lods
push
jne
outsl
in
inc
sbb
std
cwtl
inc
xor
call
scas
push
xchg
insl
cltd
sbbl
popf
pop
inc
pop
mov
add
sbbl
sar
insb
jbe
sbb
insl
cmp
push
lods
pop
test
xor
inc
cmp
pop
cmc
mov
out
js
nop
cli
call
ds
push
fwait
js
push
out
xlat
mov
cltd
es
sbb
hlt
xor
lahf
insl
fwait
clts
xor
cmp
xor
loopne
lods
push
jbe
dec
repz
or
mov
jle
imul
pop
je
outsl
pop
sub
into
sti
adc
add
adc
test
repnz
pushl
data16
mov
imul
dec
jmp
arpl
pop
or
lock
mov
in
outsb
sub
ljmp
cltd
or
cmp
push
mov
cmpsl
add
push
lea
lcall
jg
pop
mov
inc
and
dec
mov
loope
insl
pusha
inc
jl
sub
test
lcall
test
test
xor
pop
inc
hlt
movsb
mov
pop
xchg
loope
stc
sar
sahf
shrl
xchg
inc
in
in
mov
popl
std
std
cmpsb
fs
pop
pop
pop
jno
and
jp
pop
xor
iret
jmp
mov
arpl
roll
xlat
mov
jge
scas
ds
xor
cld
jns
ret
lcall
adc
adc
jno
in
xor
ret
jp
cltd
push
in
xchg
jbe
in
loop
push
xchg
jmp
cmc
stos
es
negb
ds
and
add
jb
es
pop
jne
pop
mov
or
sub
popa
mov
outsb
fisubl
jge
jbe
int
mov
sti
jmp
movsb
sahf
dec
jmp
lcall
enter
les
push
ss
push
lahf
mov
push
lea
mov
push
add
dec
cmc
inc
mov
add
fstp
jmp
testl
push
cmp
ljmp
call
or
xchg
lea
push
clc
fcmovne
sbb
lret
wbinvd
ret
pusha
shl
push
test
ss
test
xchg
jmp
xchg
and
decl
xchg
mov
es
inc
dec
loopne
popa
jno
xor
mov
adc
frstor
add
call
std
jg
fdivs
int3
inc
das
or
fildl
cld
call
fwait
rcl
cld
fcoml
dec
scas
subb
jbe
bound
dec
push
add
xchg
pushl
cld
aad
and
popf
push
mov
fdivrl
mov
pop
cmpsb
sub
mov
lcall
fs
xchg
inc
fs
js
in
cltd
or
scas
mov
pop
or
call
jecxz
cli
sub
imul
mov
jne
push
out
cltd
daa
je
mov
nop
dec
push
decl
mov
jmp
pop
jo
std
divb
pop
xor
and
decl
addr16
dec
movsl
daa
lods
cmc
in
jecxz
push
sub
test
popa
push
mov
mov
aad
add
aas
sub
enter
jmp
jg
jns
inc
shr
jmp
push
xchg
xor
imul
iret
and
cld
mov
sbb
jb
stc
jno
push
push
stc
and
jb
idivb
pop
mov
shll
mov
call
xor
cs
pop
std
xor
sbb
sub
adc
ret
je
hlt
jg
inc
xor
popf
xor
pusha
fadd
mov
or
mov
out
jno
lcall
and
call
sbb
add
xchg
es
movsb
mov
das
push
xor
mov
es
xchg
push
xor
and
call
jns
cli
jmp
lods
es
adc
movsl
pop
cs
push
stos
out
es
or
pushf
ljmp
gs
xlat
sahf
fsubs
mov
loop
cmp
lahf
outsb
push
loopne
test
pushl
roll
leave
sti
imul
and
mov
out
push
sbb
das
sti
mov
add
lock
and
dec
and
add
mov
fmuls
loop
das
iret
xorb
and
mov
push
out
xchg
mov
mov
and
ds
cwtl
jle
test
addr16
cmp
sbb
and
ja
mov
rorl
lcall
mov
outsb
insl
adc
std
movsl
cmp
movsl
cmp
data16
jp
icebp
es
lcall
call
out
mov
fists
ljmp
mov
mov
xchg
incl
mov
mov
lea
adc
aad
cmp
sbb
pushl
jl
or
and
push
mov
jae
sti
mov
dec
sbb
incl
incl
pushf
xchg
pop
orb
int
cmpsb
cld
or
cmpsb
mov
inc
push
mov
decl
and
adc
iret
or
xchg
ret
sbb
jg
addr16
ret
call
adc
clc
xlat
cmc
adc
cmp
cmp
jno
cmp
adc
xchg
cmpb
cltd
jnp
dec
cli
decl
push
mov
push
rcr
xchg
call
fcomip
in
or
inc
nop
push
pop
sahf
push
mov
mov
aad
aas
pushw
cmp
cmpsl
mov
cmp
dec
in
mov
ret
xor
movsb
loope
push
inc
out
push
dec
out
and
push
inc
imul
cmp
mov
mov
sbb
test
jecxz
std
decl
test
jmp
ss
cld
sub
in
fsubr
add
fsubl
dec
push
add
jbe
xorl
shrl
sub
and
fstpl
mov
sub
iret
inc
or
test
lret
pushf
adc
xor
add
out
pusha
lret
mov
push
mov
mov
cld
jle
pop
stos
dec
or
pop
and
ljmp
fdivr
add
pop
es
subl
push
pop
xor
add
ja
fsub
dec
xchg
pop
jne
inc
dec
sub
inc
mov
aad
mov
arpl
dec
ja
cmpsb
push
lcall
lahf
in
or
push
mov
pop
mov
ds
pop
icebp
scas
in
inc
jb
cmp
loop
shrl
mov
mov
cmc
nop
testl
repnz
icebp
xchg
sbb
pushl
andb
jmp
pop
leave
loop
das
inc
lret
cmpsb
sti
ds
push
xlat
inc
add
incl
sbbl
fsubl
sbb
add
cwtl
repz
cwtl
leave
or
sahf
aaa
call
loop
js
mov
cmp
xchg
test
jp
lcall
rcrl
fistpll
lret
je
icebp
pop
movsb
xorb
jp
shlb
pushl
jmp
mov
pushf
ds
repnz
outsb
jmp
setns
cli
push
xchg
sti
out
pop
pop
cli
js
aad
dec
jmp
stc
nop
data16
xchg
adc
and
daa
xchg
outsl
jo
cmp
stos
je
push
lods
or
cltd
add
jae
jge
mov
pusha
and
mov
adc
loopne
xor
aad
ret
add
shrb
mov
call
icebp
add
xchg
movsl
shll
mov
mov
sar
and
mov
jbe
xor
movsb
push
out
shl
das
adc
cmp
adc
mov
out
mov
popf
cmpsl
jbe
jno
adc
adc
mov
cmp
mov
lcall
adc
fsubrs
xor
jae
sahf
push
and
icebp
jp
sub
popf
add
ljmp
sti
loop
and
nop
pop
leave
fnstcw
mov
pop
mov
cld
hlt
sbb
lea
jmp
incl
or
xchg
icebp
sub
dec
test
xor
fmull
mov
pop
mov
jmp
and
sti
lcall
pushl
cmp
jp
and
xor
add
jle
lret
add
pusha
jg
and
out
mov
pop
gs
mov
rcr
stc
out
adc
sub
cli
dec
xchg
xor
stc
cmp
sub
dec
es
inc
mov
mov
aas
adc
jne
into
loopne
lcall
pop
push
sub
mov
cmp
adc
jecxz
cwtl
mov
sub
cmp
inc
dec
adc
mov
test
fistpl
push
xchg
sti
rcll
call
dec
cmp
fldcw
xlat
in
xor
pop
fsubl
pop
out
jl
call
fwait
xchg
lcall
sbb
out
cmp
out
inc
orl
cmpsl
out
mov
fs
pop
pop
pop
cmp
inc
out
or
cld
aas
iret
mov
mov
add
mov
xlat
mov
repz
aaa
std
incl
ret
rorl
xchg
andb
lahf
push
push
push
nop
lahf
mov
decl
std
xlat
and
jge
adc
mov
inc
incl
mov
mov
push
push
into
dec
adc
test
ljmp
add
jl
andb
imul
mov
mov
xchg
pushl
std
inc
xor
xchg
enter
mov
xor
push
mov
ljmp
outsl
andb
jl
out
pop
cld
mov
push
cmp
jo
fistpl
shlb
pop
mov
dec
frstor
pop
jae
mov
pop
jge
mov
call
std
call
mov
lods
pop
sub
dec
sub
add
shlb
sub
mov
add
lcall
adc
enter
dec
int3
mov
add
outsl
mull
pop
mov
ljmp
push
scas
jne
inc
inc
outsb
ds
mov
scas
lcall
or
xor
inc
mov
adcl
les
dec
popa
in
inc
pop
pushl
lcall
jae
stos
add
mov
xlat
sub
fistl
fcmove
push
dec
shrl
dec
push
negb
shrb
dec
in
dec
sbb
scas
inc
mov
jae
cwtl
add
mov
xchg
ljmp
pushl
cltd
or
enter
jbe
mov
or
es
jp
in
insb
in
cwtl
or
lcall
das
andl
js
push
les
pop
aad
mov
mov
jae
mov
out
clc
outsl
dec
lods
fnop
out
push
and
dec
aam
jmp
lock
das
push
movsl
cld
pop
int3
mov
out
sbb
dec
cmpsl
pushf
adc
ss
mov
add
adc
add
sbb
insl
fs
jmp
mov
outsb
mov
movsb
or
ds
dec
nop
cmp
cltd
mov
lret
push
dec
movsl
in
scas
out
outsb
mov
jne
mov
xlat
fildll
jae
in
cmpsb
push
call
pop
mov
ret
inc
mov
mov
je
aas
daa
and
and
xchg
jl
arpl
jp
ja
ljmp
cmp
aam
xor
test
clc
aaa
sbb
add
call
call
pop
lock
jb
mul
xchg
mov
dec
lea
xchg
rolb
enter
decl
mov
mov
pop
xchg
imul
push
repz
incl
cld
out
xchg
and
cltd
xor
mov
add
ja
or
jmp
adc
clc
aam
push
out
shl
mov
jb
nop
sbb
or
lret
add
call
pop
insl
ss
pop
mov
xchg
or
add
xchg
cmc
sub
aas
push
incl
pop
scas
rcrb
daa
push
fimull
shlb
fistps
rclb
sbb
push
lock
repz
arpl
out
or
pop
stc
xchg
negb
jae
aad
jle
mov
pop
pushf
test
dec
lds
cmp
jl
add
dec
pushf
stc
aad
mov
pusha
decl
push
stos
dec
aas
jmp
mov
push
nop
xchg
xchg
mov
lahf
repz
mov
mov
mov
sbb
outsl
bound
sub
ljmp
cmp
sbb
ljmp
jl
fst
mov
mov
repz
pop
fs
cmpsl
pop
icebp
decl
jns
dec
out
sbb
mov
hlt
std
dec
adc
loop
mov
push
add
pushl
inc
mov
push
pusha
or
pop
shrl
outsb
jno
pushf
lds
in
sar
incl
xlat
in
mulb
sub
in
jo
and
subl
xchg
loopne
mov
add
in
mov
sub
sahf
and
dec
test
mov
jle
sarl
mov
call
bound
out
xchg
xchg
sar
pop
mov
loopne
sbb
mov
sar
fstpt
mov
pop
sahf
mov
mov
mov
jg
fwait
cltd
mov
inc
dec
outsb
add
mov
gs
mov
out
int3
cmpsb
sahf
lret
xlat
sbb
lcall
jmp
push
push
jl
repz
call
cmpsl
out
lcall
dec
std
cmp
into
add
xor
pop
ret
jne
cmp
out
lds
lods
jmp
mov
imul
je
or
fisubrl
mov
inc
jle
fildll
mov
add
pushl
xchg
sbb
or
in
ret
jns
ret
leave
adc
mov
xchg
and
ljmp
repnz
in
and
in
out
mov
ljmp
jg
or
inc
out
out
outsb
ja
sub
insb
aas
insl
or
jge
pop
fs
jae
call
jne
xorl
add
in
dec
out
inc
pop
test
call
mov
int
stos
ds
mov
dec
add
ret
sub
push
jbe
jo
fwait
cli
sbb
jne
loop
data16
or
cmp
lea
jae
jmp
out
dec
cs
add
or
inc
pop
aas
cmp
cs
divl
dec
in
div
mov
incl
jmp
mov
dec
out
push
inc
data16
imul
decl
outsb
int3
stc
sub
inc
jmp
mov
pop
push
push
mov
sub
pushl
leave
divl
ret
mov
xor
aas
or
clc
ficoms
jne
stos
call
pushl
dec
lret
fsub
dec
sbb
fwait
pushl
andl
jae
arpl
inc
sti
loopne
es
outsl
pop
aad
ljmp
xlat
fcmovne
dec
jns
jae
clc
mov
imul
jns
add
jg
imul
push
fidivs
dec
mov
outsb
call
add
jbe
pop
lea
and
mov
jle
xchg
sbb
pushl
push
sbb
imul
inc
ret
dec
dec
cmpsb
sbb
jmp
mov
pusha
xchg
fisubrl
mov
push
dec
out
push
mov
xchg
xor
cmp
inc
div
push
adc
sub
decl
movsb
add
xor
js
mov
jb
push
jg
adc
scas
and
push
push
dec
cmc
gs
add
jo
add
mov
lea
inc
and
clc
arpl
aaa
std
adc
int3
mov
leave
lock
xchg
push
xor
push
and
xchg
jmp
xchg
jp
sahf
or
mov
repz
incb
push
mov
in
lds
xor
xorb
pop
mov
xorb
cmp
mov
es
pop
test
lret
and
fdivrs
clc
pop
dec
xorb
loope
ja
movsl
jmp
inc
pusha
lock
cwtl
mov
mov
xchg
mov
out
sub
enter
mov
pop
test
incl
jp
in
incl
jne
ret
addr16
int
mov
inc
dec
xor
subb
jg
sub
mov
aam
incl
push
jmp
adc
dec
xchg
imul
mov
mov
je
leave
xchg
into
dec
ljmp
in
lock
icebp
enter
inc
pusha
push
xchg
enter
jmp
ss
lds
lock
incl
stc
sbb
jge
sbb
pop
rcl
push
pop
mov
lcall
and
mov
adc
push
negb
mov
jmp
xchg
pushf
lock
gs
lds
jmp
inc
push
outsl
test
ds
decl
int3
push
icebp
mov
andl
xor
orl
cmp
adc
push
mov
add
pusha
mov
xor
pop
cld
or
add
push
stos
sub
fwait
test
lock
das
cli
in
scas
jp
adc
movsb
call
lret
cltd
push
testb
addb
lcall
sub
daa
xor
push
mov
sahf
inc
push
xor
inc
pop
dec
cltd
dec
sbbl
mov
sub
std
xor
push
sti
adc
jle
scas
sbb
out
imul
das
fisubl
pop
jecxz
or
int
mov
shr
loope
stos
add
sub
push
xor
ljmp
dec
pusha
sti
add
sbb
sti
push
cmpsb
test
and
xchg
js
ljmp
lea
ljmp
lret
aam
or
xor
pusha
jle
mov
call
fidivs
or
shlb
pushl
jo
nop
sbb
mov
out
hlt
xor
test
jecxz
das
cltd
aas
fbld
cld
push
jg
inc
rorl
les
mov
call
sub
and
ds
pop
jp
jo
lea
mov
lcall
mov
loope
fidivrs
call
jns
sub
push
aaa
jnp
cmpsl
cld
or
inc
pop
aad
pop
sub
ds
inc
cmp
shrl
cmpsl
data16
dec
push
in
xchg
mov
mov
shlb
outsb
mov
fwait
sub
add
push
in
mov
jnp
xchg
pop
stc
mov
adc
rorb
std
add
sub
ljmp
sar
adc
imul
push
fsubr
jp
mov
decl
xchg
dec
jne
ret
in
mov
ja
dec
pushf
xor
int3
aas
jae
adc
dec
xor
lods
bound
enter
sub
xchg
mov
cmp
lcall
adc
xor
sbb
dec
ret
ds
pop
cs
jg
push
jg
pop
call
push
out
mov
aad
cmp
sub
movsl
int
pop
push
sbb
imul
ljmp
push
movsb
fiaddl
paddusb
popf
inc
cmp
cld
lcall
nop
cmp
in
clc
pop
decl
jno
adc
repnz
cli
push
movsb
push
xchg
adc
cmc
shlb
xor
scas
cli
ljmp
xor
mov
push
rcr
pop
fwait
inc
test
scas
vpcmpgtd
xchg
mov
sub
sub
outsl
jbe
enter
std
ljmp
addr16
aad
int
cmp
cmp
mov
dec
iret
ret
and
xchg
mov
mov
sub
in
pop
add
pop
test
imul
and
decl
mov
cltd
xor
jp
rorl
xchg
pushf
pop
push
or
push
xor
lcall
das
adc
sbb
outsb
xor
pop
test
jne
xchg
xchg
inc
loope
movsb
bound
jb
or
and
mov
aam
loopne
cmpsl
pop
aas
lret
jne
mov
mov
inc
sbb
or
daa
ss
lahf
pushf
into
cmpsb
adc
es
call
adc
sbb
ljmp
dec
inc
xchg
push
dec
mov
imul
push
sbb
mov
outsl
clc
ljmp
cmp
push
daa
loopne
jg
lahf
mov
push
xor
adc
fs
popa
loope
cmp
push
dec
pop
lods
add
inc
push
divl
sbb
xchg
rcrb
lock
dec
mov
push
or
lcall
lret
nop
xchg
dec
test
int
decb
repz
jae
ljmp
clc
jmp
mov
xlat
dec
repz
push
mov
pusha
cmpsl
xorb
dec
mov
push
loop
nop
or
inc
xchg
fcomps
aas
cwtl
or
inc
rcr
inc
sar
call
out
xchg
cmp
scas
daa
mov
and
cs
adc
xchg
cmc
and
pop
inc
push
xchg
aas
xchg
sbb
inc
cmp
cmp
test
out
adc
mov
fcomi
and
ret
sub
lods
popa
push
std
ja
cmp
dec
movsb
jo
in
lcall
fcmovnb
orb
pushl
imul
stos
pop
icebp
arpl
sbb
js
mov
dec
pop
jmp
mov
sar
call
stos
fwait
jp
push
fiadds
mov
mov
mov
inc
lret
movsb
scas
insb
cmp
xlat
add
es
inc
test
enter
repnz
nop
mov
mov
mov
jbe
cmp
sar
ljmp
push
sti
xchg
sbb
pop
jae
out
jb
insb
push
sbb
mov
gs
mov
fbstp
push
pop
lock
jg
iret
or
ljmp
and
loop
imul
push
inc
dec
inc
inc
xchg
imul
pusha
popf
dec
lock
cmp
out
pop
sbb
clc
popa
cmc
jmp
inc
push
std
mov
cmp
mov
insb
stos
cli
sti
jno
inc
pop
push
cmp
sub
movsl
pushl
mov
daa
jecxz
cmc
push
sub
das
int3
jl
stos
sbb
sbb
lods
repnz
mov
sub
xchg
lss
pushf
ret
or
mov
dec
aas
mov
in
mov
lods
outsb
repnz
or
lods
cli
out
icebp
cmp
call
pop
addl
in
mov
rolb
mov
andl
call
adc
cmpsl
mov
adc
daa
movsl
test
xor
in
not
push
xchg
sub
lods
pushl
mov
insl
sbb
outsb
add
xchg
xchg
insb
decl
mov
out
push
mov
mov
jle
push
imul
mov
pushl
jb
fisttpl
ljmp
add
jge
popf
jne
cmpsl
sub
clc
inc
ret
push
ret
lret
cmp
pop
sbb
filds
add
mov
aaa
push
int3
adc
dec
or
test
inc
jle
sar
inc
mov
add
int3
mov
mov
test
jbe
inc
xchg
in
test
loop
arpl
pop
and
mov
push
add
std
call
test
and
pop
xor
inc
jg
fwait
pop
arpl
in
repnz
adc
jg
fs
adc
sbb
lock
call
jmp
stos
shlb
clc
mov
mov
inc
outsl
sbb
jp
push
add
ljmp
das
cmc
shll
cmpl
adc
jo
sti
sub
cwtl
sar
ljmp
clc
push
cmp
pop
add
fidivrl
and
fsubrs
in
lcall
adc
filds
xchg
mov
data16
mov
aas
add
and
lock
push
lea
ljmp
mov
into
mov
fstpt
cmpl
mov
dec
std
ret
imul
or
mov
sbb
mov
data16
pushl
and
inc
subb
mov
xchg
xchg
dec
rcll
sti
add
in
mov
aas
test
dec
jle
jmp
inc
fwait
icebp
mov
test
xchg
cli
jbe
dec
xchg
push
adc
jmp
adc
push
pop
or
xchg
dec
aaa
jp
push
xor
popa
xchg
cmp
inc
or
lea
pop
popa
inc
push
clc
call
loop
or
imul
out
sub
dec
sbb
loopne
push
out
cli
inc
push
jb
inc
popf
sahf
ret
mov
push
gs
xlat
pop
adc
outsb
loop
mov
cwtl
hlt
in
inc
adc
popa
aad
icebp
cmc
sub
cmp
in
cs
pop
fcoml
mov
ljmp
xchg
loope
push
popa
fldt
decl
jge
subb
xchg
repnz
adc
dec
or
sbb
std
test
cltd
dec
inc
insl
fsubp
mov
fwait
add
stc
xchg
shlb
adcb
call
andl
sub
pusha
stos
mov
icebp
xchg
mov
mov
mov
ds
sbbl
dec
cmp
mov
mov
mov
pop
js
jno
leave
lret
nop
or
mov
inc
push
ljmp
cld
inc
ret
dec
into
cmp
jbe
adc
jg
test
or
or
push
subb
pusha
loop
mov
decl
cmp
bound
jb
stc
mov
jnp
ljmp
or
sub
jmp
mov
rcr
repz
sub
push
insb
jbe
mov
dec
pop
pushl
pop
or
xor
stc
push
xchg
cmp
dec
xchg
mov
xlat
cmpsb
inc
ret
cltd
cld
fs
mov
movsb
jo
fisubl
mov
push
xchg
loopne
imul
es
jne
dec
clc
aad
jmp
clc
cwtl
into
mov
lahf
xchg
push
mov
repnz
xor
jmp
xchg
movsb
ret
jmp
pushf
pop
lds
xchg
sbb
enter
or
inc
mov
lds
or
jb
xor
mov
inc
adc
leave
or
sti
js
in
mov
pushl
adc
pop
and
ret
add
aaa
adc
cwtl
mov
aaa
or
push
mov
aad
fs
into
push
inc
inc
lahf
mov
rorl
enter
adc
jmp
fcmove
cmp
gs
inc
mov
pop
into
add
lahf
sub
pop
push
cmp
stos
decl
dec
sub
mov
ret
add
ds
cs
mov
xlat
int3
mov
adc
call
push
mov
rclb
sbb
adc
leave
cmp
pushl
shll
enter
repz
pop
sub
imul
xor
js
and
mov
mov
mov
inc
mov
xorb
in
aad
mov
push
mov
cmp
aas
rcl
mov
mov
pop
sbbl
outsl
mov
clc
push
mov
nop
nop
cmpsl
mov
ja
fistps
inc
push
jmp
pop
jbe
repnz
mov
int3
and
fists
shlb
das
ret
bound
nop
xor
jbe
mov
or
ss
jge
sbb
mov
iret
pusha
jno
pop
fchs
jae
ret
jp
repnz
inc
in
int3
pop
xchg
sub
lods
mov
mov
pushl
cmp
pusha
inc
push
mov
clc
adc
popa
in
int3
int3
xor
and
sti
repnz
pop
mov
add
dec
loop
xchg
aad
cmp
mov
sahf
jl
fwait
pushl
mov
test
out
test
and
mov
leave
in
out
ret
push
in
pop
sub
bound
pop
xor
jmp
push
shl
push
aam
pop
add
seta
jbe
je
aad
das
dec
fbld
out
lea
dec
repz
ljmp
test
xor
pushl
dec
pusha
ss
ja
in
push
mov
pop
insl
xor
xchg
xchg
into
sti
mov
ljmp
clc
bound
cmc
add
jns
sbb
dec
pop
fiadds
jmp
and
popf
inc
dec
out
cli
xchg
cmpsl
xchg
xchg
sarb
ja
test
jecxz
insb
sub
sbb
xchg
lcall
inc
jns
inc
ja
and
repz
fwait
dec
popf
movsb
out
add
push
adc
enter
xor
sub
cmpsl
cld
cmp
sarl
fisubs
add
mov
adc
scas
rcl
fmul
sub
mov
pushl
jbe
cmpsb
test
xchg
jnp
cmp
stc
adc
xor
repz
cwtl
cmp
std
arpl
mov
stos
pop
cmp
push
cmc
jnp
pushf
in
mov
or
mov
adc
sbb
xor
dec
movsl
xchg
dec
sbb
loope
xor
or
dec
mov
mov
popf
mov
jmp
adc
xchg
ja
or
testl
roll
ficoml
aaa
add
cs
cmp
jecxz
imul
ljmp
daa
sub
ss
fidivs
hlt
and
push
les
jp
les
jmp
insl
adc
mov
lea
sahf
das
imul
push
dec
xor
mov
popf
nop
push
sarb
fisttpll
pop
data16
xor
pushf
and
pushl
xchg
and
mov
pop
and
jl
call
xchg
movsl
les
out
jmp
pop
jmp
in
adc
lea
jg
push
inc
gs
fiadds
xchg
loopne
adc
xchg
stos
jle
add
test
int
push
sub
sahf
pop
enter
inc
test
jo
sub
int3
inc
lret
into
jns
aad
fisttpl
repnz
divl
test
std
pushl
cs
imul
fcomp
lds
cmp
sahf
test
inc
lret
in
jg
lahf
test
or
out
mov
mov
movsb
insb
dec
cmovns
pop
insl
std
mov
fcomip
pushl
lahf
daa
cmp
push
pop
sub
in
sub
cwtl
je
jns
ljmp
clc
mov
or
sbb
sahf
lods
dec
leave
mov
pop
lods
adc
in
out
push
mov
repnz
lea
in
std
bound
dec
scas
mov
jge
imul
sub
decl
or
les
or
out
jb
call
jl
sbb
dec
mov
add
imul
out
clc
incl
imul
adcl
jne
sbb
dec
sbb
incl
and
stc
mov
mulb
adc
cmc
push
fimull
jmp
sub
aam
sub
sub
das
cmpsb
or
sbb
add
inc
adc
incl
push
sbb
sub
mov
push
aam
push
ljmp
pop
or
js
clc
push
xchg
dec
cmp
mov
adcl
cltd
in
jb
fstpl
add
call
mov
cmp
cmovnp
cmp
add
sbb
loop
test
fildl
jbe,pt
mov
adc
xor
pop
mov
mov
idiv
ljmp
pop
jae
and
mov
inc
test
ret
cmpsl
adc
jmp
aas
jg
decl
cmp
xchg
clc
xchg
mov
pop
arpl
out
jo
ret
xchg
fsincos
mov
decl
and
clc
mov
idivl
loope
jbe
jl
cld
jl
ss
scas
fs
jmp
shlb
mov
mov
icebp
call
adc
inc
out
aaa
outsb
fcompl
leave
adcb
cmp
inc
mov
test
icebp
dec
inc
xchg
stos
cmp
jg
in
daa
shll
mov
stc
push
pop
push
and
negl
sbb
jo
cmpsb
xor
pushf
push
cli
ljmp
insl
in
adc
scas
daa
lcall
and
jecxz
xor
or
ljmp
add
pop
shr
rcrl
inc
les
mov
jo
fisubl
mov
ljmp
out
outsb
xchg
ret
mov
movsb
mov
data16
push
push
and
ljmp
jbe
insl
pop
and
mov
and
push
lds
rcrb
lahf
inc
pop
das
mov
jmp
dec
into
rcrl
rcrl
sub
adc
loope
mov
cmpsb
insl
leave
icebp
decl
pop
and
and
cmp
mov
das
push
jne
shlb
lcall
ret
pushf
outsb
dec
jbe
mov
adc
lcall
adc
cld
jae
sti
fwait
mov
cmp
nop
sbb
mov
xchg
xchg
add
push
xchg
mov
fbstp
clc
mov
cmp
jne
pop
call
mov
enter
jg
xor
into
in
mov
or
lea
dec
fisubs
fmuls
mov
xor
loop
sub
push
fwait
hlt
xor
incl
jecxz
out
jmp
xchg
fcomps
shrb
cmpxchg
jo
mov
loop
ljmp
fwait
popa
leave
jne
push
lods
imulb
int3
decb
pop
adc
mov
or
and
inc
ja
test
js
inc
dec
mov
sub
pop
jp
and
xor
shrb
fldcw
push
stc
hlt
pop
xchg
cli
push
add
cmp
das
clc
lcall
add
stos
outsb
mov
fcoml
and
inc
sub
push
mov
sbb
decl
das
outsl
fistpl
ret
sub
xor
lods
test
sbb
jg
fsubrl
mov
sbb
cli
movsb
dec
scas
sti
in
adc
add
inc
adcl
xchg
pop
nop
xor
cli
pop
leave
std
pushl
mov
mov
dec
filds
lods
shrb
dec
test
sbb
sti
add
jg
rcrl
sbb
or
sub
xbegin
cld
mov
xor
pop
call
sti
orb
fdivrs
and
push
cmpsl
fisttps
sbbl
add
cli
in
cmp
mov
push
arpl
sbb
mov
in
shll
stos
or
sub
ljmp
stc
add
jno
mov
jmp
add
push
aas
mov
lock
mov
fcmovu
call
pop
ss
out
dec
scas
testb
jl
pop
xchg
insb
roll
jge
movsb
xor
inc
lock
or
icebp
fistps
shl
pop
xchg
daa
cwtl
cmp
icebp
test
inc
inc
or
jae
bnd
cmc
cmpsb
idiv
out
std
cmp
or
jmp
mov
jb
dec
mov
insb
cmp
inc
aas
xchg
je
aam
xor
stc
inc
std
outsb
push
mov
int3
fwait
dec
lods
fcomps
je
or
cli
adc
sbb
gs
push
sbb
mov
lcall
cmp
outsb
xchg
mov
jle
in
roll
sbb
fldenv
ds
xchg
push
pushl
pop
sahf
or
arpl
xchg
jle
mov
mov
push
std
imul
xlat
mov
lret
and
fsub
arpl
outsb
xor
icebp
and
rcll
pushl
divb
push
jo
push
mov
xlat
insl
in
subb
rcr
ja
jmp
push
mov
mull
or
add
testl
out
jl
fcoml
add
push
xor
cs
inc
repz
scas
sub
ds
pop
add
or
rolb
jne
jmp
ret
enter
testb
jnp
xorb
dec
lods
ja
incl
xchg
cld
out
pop
push
xchg
lret
push
subb
sbb
outsb
lcall
ljmp
cmp
fwait
mov
popa
xchg
out
insb
js
dec
adc
icebp
in
lea
test
push
or
add
jg
xchg
cmp
pop
mov
pop
imul
xchg
dec
je
mov
ljmp
lahf
sub
xor
xor
in
inc
mov
push
ret
decl
in
cmp
roll
pop
jg
xchg
dec
fwait
sub
mov
leave
dec
mov
jg
pushl
push
scas
in
push
je
ss
jge
mov
lret
icebp
push
out
int
xchg
loopne
xor
pop
mov
cmp
lret
aam
movsb
fistpll
mov
ljmp
ret
xchg
pushf
or
push
aaa
or
mov
jnp
addl
fwait
leave
fsubrs
call
xchg
es
lods
mov
xchg
pop
mov
pop
mov
push
pop
add
cmp
add
mov
mov
jno
mov
xchg
jbe
les
aaa
addr16
test
sar
adc
gs
stc
mov
ficoml
jp
ret
or
inc
sbb
shlb
pop
ja,pt
mov
push
fsts
and
or
pop
pop
sub
incl
mov
jmp
out
pop
negb
jg
xor
push
and
mov
lds
call
mov
pusha
test
shr
add
pop
movsl
arpl
pop
test
aam
cld
dec
jno
lcall
or
lret
add
mov
icebp
sbb
insb
insl
cmpsb
fisubrs
clc
pushl
jp
ds
and
in
mov
dec
insb
call
jecxz
push
mov
movsl
dec
xchg
jp
push
fstpt
je
inc
jmp
js
negl
dec
mov
mov
ret
dec
pop
test
add
outsl
lds
add
dec
pop
dec
stos
dec
iret
cltd
lods
aaa
mov
xchg
jmp
cwtl
or
test
mov
pushf
outsl
cmp
mov
jg
incl
jmp
lods
sbb
adc
xchg
bound
pop
push
shll
incb
push
dec
inc
push
pusha
sbb
int3
mov
in
cmp
in
in
int3
xor
pop
push
xor
out
cld
mov
aam
mov
and
xchg
scas
jne
cmp
jg
std
sub
mov
cs
les
clc
in
push
cmc
das
add
ljmp
call
movsl
rcrl
test
ss
rolb
mov
incl
pusha
cmp
xlat
mov
dec
dec
fsubr
ss
mov
out
dec
arpl
inc
mov
mov
fistpll
in
lea
imul
insb
aaa
imul
ljmp
repz
xchg
loop
jp
aam
rcrb
mov
cmp
das
int3
unpckhps
mov
jmp
rcl
cmp
fldenv
adc
adc
xchg
into
mov
mov
ret
cmpsb
lcall
and
movsl
xor
jge
lods
xor
push
data16
sub
dec
jmp
xchg
ljmp
jp
mov
enter
xchg
pop
sub
inc
clc
mov
je
xchg
pushl
sbb
test
sub
mov
cmpsb
jne
insl
lock
popa
pop
jge
das
push
add
popf
addr16
mov
stos
pop
imul
pusha
addr16
nop
mov
lret
in
push
mov
dec
sub
mov
je
mov
pop
adc
pop
out
xlat
test
jl
push
int
in
out
push
bound
out
xor
call
std
mov
cmp
lahf
adc
xor
int
repnz
shlb
movsb
repnz
cmc
decl
into
mov
pusha
fidivs
or
rol
pop
addb
ljmp
lods
out
sub
add
and
outsb
mov
inc
inc
mov
ss
mov
jmp
out
and
jne
lds
popa
add
sub
and
push
repz
cld
lcall
frstor
inc
in
mov
or
xor
mov
adc
cmp
mov
jno
aaa
mov
pushl
addl
sbb
aad
sub
mov
add
push
fcompl
jae
and
sbb
xchg
in
rclb
clc
in
mov
sub
push
cmp
cmp
mov
add
out
fidivrl
sub
dec
out
lcall
enter
push
roll
ds
insb
push
cmp
test
lcall
xorl
adc
xchg
movsl
fbld
into
adc
ljmp
push
test
aaa
pop
popa
cmp
xchg
adc
ja
push
xchg
xchg
and
lahf
pop
fucomi
ja
out
adc
jmp
lds
mov
and
js
sti
daa
gs
mov
jg
popa
std
push
or
hlt
xchg
cli
adc
arpl
add
in
incl
push
arpl
test
adc
xlat
roll
push
arpl
xor
bound
jecxz
ljmp
clc
es
jb,pn
out
mov
add
mov
and
js
add
jg
enter
mov
sub
es
mov
cmp
push
daa
cmp
out
lahf
inc
shll
fdivr
add
ret
push
fdivrp
out
cli
cli
ds
sbb
dec
call
inc
push
push
push
or
incl
mov
and
xor
stos
mov
and
adc
test
nop
jl
xor
jge
ss
push
xor
jno
enter
test
sahf
out
and
addr16
inc
scas
aam
jmp
mov
mov
out
adc
mov
movsl
and
into
dec
mov
and
sbb
lcall
lcall
jae
and
aad
mov
jmp
mov
and
xchg
int
or
adc
decl
cmp
pop
pop
push
push
add
or
fcompl
pop
sbb
les
jg
xchg
pusha
pop
and
fucomp
jo
push
in
das
inc
sub
jl
enter
lcall
fdivs
insb
add
xor
xchg
ss
xor
scas
dec
incl
dec
push
lods
stos
daa
adc
in
pushw
xchg
sbb
jl
out
movsl
pop
push
lea
dec
add
filds
dec
cld
xchg
xchg
in
dec
mulb
mov
cmp
sub
jbe
ljmp
xor
pop
push
notb
mov
rcrl
mov
ljmp
jle
pop
mov
inc
inc
sbb
mov
rcll
fcomp
xchg
stos
repnz
out
cli
inc
out
push
cmpsb
sahf
incl
push
mov
inc
notb
into
sub
jb
fadds
inc
jns
bound
testb
jge
dec
sbbb
push
into
lahf
sbb
mov
fldcw
scas
or
rol
xchg
mov
je
insl
es
mov
lcall
test
mov
cmp
scas
scas
jle
lcall
fdivr
ret
push
imul
pop
or
scas
outsb
pop
repz
fisubs
push
sbb
or
jbe
fwait
out
add
jae,pt
inc
sbb
lcall
pop
imul
sub
ja
and
and
into
and
fs
bound
je
cs
aas
int3
lret
xchg
sbb
pop
mov
jmp
pop
les
or
xchg
iret
ret
roll
dec
sti
dec
adcb
fstpt
lods
aam
jnp
xor
or
dec
or
sub
fildll
push
dec
add
imul
cmp
jmp
jne
enter
mov
mov
enter
jl
repz
aas
jg
in
out
decl
lret
dec
popf
loop
es
andb
cwtl
sub
jmp
mov
gs
call
adcl
jp
icebp
push
jne
inc
xchg
leave
adc
and
rorb
cmp
lcall
jns
pop
mull
mov
int
lods
std
out
sbb
and
mov
push
cld
pushl
xor
mov
shr
xchg
int
dec
mov
lcall
repz
inc
mov
fistl
adc
mov
cmpsl
mov
pop
adc
mov
incl
wrmsr
and
pop
add
lods
imul
pop
jl
xchg
cmpb
lods
ret
pushl
push
cmp
jmp
jo
das
or
cs
jg
cmp
pop
xchg
mov
cmp
cld
test
repnz
outsb
aad
ret
and
mov
jno
ret
jbe
push
in
lds
lcall
addr16
fsub
lcall
jecxz
inc
fldl
push
cmp
repnz
fdivs
nop
fnstcw
cmp
loope
nop
mov
outsb
out
cwtl
cmp
push
rep
add
xchg
add
dec
jg
loop
arpl
shr
inc
or
inc
xchg
mov
jmp
mov
lds
and
mov
lods
mov
xchg
ret
cltd
cmp
test
out
movsb
mov
xchg
scas
mov
sub
enter
stos
mov
cmp
call
jbe
lock
outsw
cmpsb
ja
out
loopne
out
fistpl
inc
xor
decl
xor
sub
xchg
push
enter
sbb
mov
cmc
ljmp
lods
and
call
fstp
push
roll
mov
mov
ja
cmp
ficomps
gs
shll
ljmp
pushf
pop
and
sbb
pop
fs
bswap
jae
in
push
subl
xchg
gs
add
dec
clc
mov
adc
mov
cmp
shrb
cs
jns
cmp
aam
loop
xchg
notb
push
test
push
lcall
mov
ds
and
push
inc
dec
jle
adcb
inc
clc
jg
mov
mov
in
cld
dec
xchg
pop
sub
dec
push
sbb
pop
scas
cmp
add
aas
loop
data16
sbb
ss
scas
lock
call
bound
jle
xor
and
fmull
sub
jmp
ret
lcall
insb
addr16
out
cmpsb
orl
sub
mov
mov
insl
call
jp
cmp
jbe
mov
pop
ljmp
adc
cltd
or
pushl
sub
stos
jo
imul
or
ja
xchg
adc
dec
add
mov
in
lret
testb
jmp
out
lahf
fwait
mov
rep
in
lods
jne
outsl
xchg
icebp
dec
and
ss
scas
add
out
cmpsb
mov
push
mov
movsb
pop
mov
or
dec
lds
sbb
lcall
mov
xor
filds
call
or
subb
call
into
mov
sbb
jp
leave
dec
xor
outsb
add
mov
inc
sbb
mov
ret
stos
inc
add
decl
jle
cmp
mov
ret
jg
call
adc
cmp
bound
ja
mov
or
subl
inc
xchg
push
in
hlt
sub
es
decl
shll
push
stos
xchg
fwait
jbe
pop
pop
sbb
push
add
fcoml
mov
pop
lock
jmp
pop
xchg
dec
adc
cmovno
inc
scas
sti
or
into
xchg
dec
aad
test
jg
das
xor
inc
or
sub
push
cmp
and
cmp
pop
call
iret
adc
hlt
aad
mov
lods
mov
lret
cltd
xchg
pop
stos
xor
ljmp
or
rorb
dec
mov
out
cmp
divl
xchg
ljmp
incl
rcll
cli
sbbb
inc
pushf
push
mov
mov
cmp
lret
lock
add
and
orb
popf
mov
mov
jno
ljmp
sbb
imul
dec
mov
outsb
add
call
pop
mov
std
mov
mov
fmull
xchg
stos
das
cs
pop
cmp
aaa
adc
imulb
xchg
push
hlt
dec
sarl
pop
loopne
cld
mov
inc
mov
in
test
sbb
pop
lcall
cld
mov
xchg
lods
pusha
lret
dec
mov
xchg
sar
jmp
sahf
lahf
sub
mov
mov
sbb
push
ficomps
stos
jge
ja
dec
mov
bnd
mov
pop
out
cmp
sub
and
js
incl
cmpsb
push
out
xchg
sub
test
rcr
cmpsl
push
loope
outsb
andps
jle
adc
lcall
mov
pop
mov
or
movsb
dec
ss
dec
mov
mov
decl
add
loopne
mov
adc
adc
scas
pop
mov
jp
mov
mov
lds
ss
push
xchg
mov
mov
cmpb
or
rorl
fs
lcall
dec
cltd
jg
fbld
push
mov
jecxz
fnstenv
xlat
mov
and
mov
jnp
inc
cltd
stos
adc
stos
lock
mov
jmp
jg
notb
mov
stos
ljmp
insl
sbb
inc
sahf
pushl
call
jbe
mov
test
push
negl
jmp
push
mov
call
decl
rcr
lret
dec
test
xorb
push
dec
imul
xchg
in
jo
enter
js
mov
stos
cld
jbe
clc
push
add
cmp
lret
jmp
sbb
fcomip
and
inc
push
mov
aam
lods
fs
xor
adc
xchg
add
sbb
adc
jmp
cmp
loope
lea
pop
xchg
shlb
ret
into
mov
clc
sub
imul
sub
call
push
out
mov
test
push
sbb
xor
daa
inc
sub
je
mov
call
sub
loop
imul
orb
addl
in
or
pushf
mov
sar
pop
int3
data16
aad
pop
stc
lock
repnz
mov
cltd
mov
mov
lcall
sbb
mov
cmpsb
sbbb
mov
pop
dec
dec
lods
addr16
sub
push
call
xor
pop
cmpsl
stos
hlt
push
fidivrs
shlb
repz
sbbl
lcall
lea
int3
lods
aad
dec
add
xchg
lods
fdivrs
cwtl
xor
lret
dec
fadd
in
jae
cld
mov
shll
das
xchg
sbb
fldt
mov
or
jg
mov
pop
imul
dec
jne
mov
mov
mov
sbb
cmp
push
std
add
js
mov
repz
push
out
pushf
lea
mov
or
std
stc
push
push
hlt
orb
jo
mov
dec
xchg
cmp
xchg
lahf
mov
es
ds
fwait
dec
mov
sub
mov
mov
test
push
das
xchg
xchg
xchg
xor
cmp
stc
jmp
ja
sub
inc
insl
mov
xor
repz
mov
iret
sbb
fldenv
xchg
add
jge
lret
mov
aam
mov
dec
dec
in
adc
push
in
jns
aam
outsl
imul
dec
fnstenv
insl
and
inc
addr16
dec
cli
mov
xor
es
stc
cmp
mov
ss
lcall
lret
xchg
sub
push
lods
aaa
insb
cmp
loopne
pop
xchg
fs
ljmp
std
data16
fsts
stos
out
cmc
ds
pop
xor
imul
ljmp
xchg
add
push
push
out
lods
ss
jbe
xchg
lods
cmp
ret
int
test
mov
andb
lahf
lods
pop
push
sub
test
push
enter
decl
stos
cltd
icebp
sbbl
addb
mov
incl
das
or
lock
xor
outsl
mov
fidivs
pop
lret
or
push
insb
sahf
ret
incl
ficoms
mov
inc
jns
orl
loopne
shll
adc
jg
test
jns
addr16
cmpsb
pop
sbb
movsl
dec
push
xchg
add
pop
jb
dec
sbb
fs
sbb
inc
orl
cs
sti
clc
repz
filds
imul
dec
xor
data16
arpl
adc
daa
decl
test
mov
fcompl
scas
inc
cmp
pop
xchg
sti
xor
clc
ljmp
dec
je
mov
lods
incl
adc
mov
inc
test
xchg
sub
cli
lret
ret
ljmp
sbb
cmp
mov
mov
mov
clc
mov
lcall
lods
mov
jnp
xor
cmp
std
push
mov
aam
fldl
in
aad
pop
ljmp
xchg
push
push
lret
sub
adc
dec
outsl
cmp
out
test
xor
jo
jmp
test
sahf
jns
and
arpl
jl
jmp
lock
sbb
orb
call
push
jmp
popa
dec
adc
push
insl
inc
icebp
enter
cltd
out
mov
out
test
and
incl
int3
jge
mov
mov
and
push
shll
cmp
ss
lods
and
test
decl
mov
es
mov
add
lcall
dec
mov
mov
mov
loop
flds
add
out
call
and
dec
rol
cmpsb
jle
push
imul
or
push
imul
jmp
cmc
les
shll
mov
jno
loope
jns
call
mov
icebp
in
sbb
nop
loop
into
in
xchg
out
rcr
pop
daa
xchg
ficomps
push
jecxz
inc
ds
mov
lret
xchg
and
dec
in
popf
and
pop
call
mov
mov
xor
das
mov
loop
test
xchg
xchg
sub
mov
fwait
push
adc
and
insl
jb
pop
mov
call
push
adc
mov
inc
sbb
imul
sar
decl
lock
sbb
push
rcrb
sbb
xchg
dec
loopne
mov
ljmp
push
cmp
sti
add
push
mov
inc
dec
jecxz
or
sub
pushl
frndint
pop
in
lret
cmp
jmp
shll
add
mov
mov
call
push
adc
fadd
xorb
aas
pop
adc
in
cmp
xor
ljmp
or
sub
jb
idivb
push
repnz
insb
aas
test
or
arpl
call
cmp
or
sub
xchg
and
jns
sti
sbb
mov
push
pop
or
mov
mov
sub
pop
jb
jnp
adc
inc
pop
jne
push
lock
pop
sub
mov
mov
stos
outsl
movsl
in
enter
decl
dec
ja
in
jg
mov
mov
inc
lret
insb
ret
call
scas
inc
xchg
adc
rcr
ficomps
test
and
mov
pop
pop
lods
insb
mov
add
ljmp
test
adc
cmpsl
outsl
aaa
cmp
or
sbb
inc
enter
clc
sub
scas
inc
adc
call
mov
fdivr
pop
xor
mov
movsb
lds
sub
insb
mov
call
in
clc
test
and
dec
xor
adc
gs
decl
dec
pop
popa
into
mov
ret
jge
loope
push
je
sub
fwait
xlat
adc
jmp
std
cmp
fisttpll
dec
out
int
sbb
jnp
enter
in
push
jle
sbb
mov
or
ljmp
mov
mov
dec
xor
xor
cmp
push
lahf
jle
adc
and
ds
mov
pusha
out
jae
sahf
aas
and
jp
pop
pop
jmp
sub
push
and
arpl
push
daa
jmp
test
psllw
cmp
lahf
dec
pop
or
mov
jge
dec
mov
xchg
hlt
jmp
shll
inc
sub
pusha
add
dec
xchg
adc
incl
push
int
pop
addr16
jne
adc
addr16
dec
test
adc
jle
adc
or
test
cmc
xor
in
sub
or
call
xchg
mov
xorb
fstl
add
sub
ljmp
test
dec
push
cltd
ljmp
or
mov
inc
mov
stos
jns
fcmovne
dec
fcomps
sbb
out
add
sub
jl
sub
mov
pop
rolb
mov
call
push
fsts
lcall
sbb
add
adc
dec
dec
sbb
out
fisttps
cmp
int3
pop
sbb
aad
xor
lret
lcall
inc
out
pushf
in
jo
sub
or
xor
nop
cli
jb
enter
cld
insl
dec
rolb
psadbw
inc
and
ds
add
sub
or
lcall
sub
ja
push
cmpsl
sub
incl
cld
jg
out
fbstp
scas
inc
sarb
xor
clc
dec
mov
pop
dec
push
dec
jp
jecxz
ret
loop
test
and
rorb
stos
mov
lea
lcall
call
out
pop
sub
jae
mov
dec
pop
icebp
push
and
dec
mov
repnz
mov
xor
sti
push
dec
or
fistps
imull
sub
or
and
sub
mov
adc
lcall
push
inc
sub
mov
inc
test
dec
mov
shlb
dec
push
cld
mov
movsb
scas
dec
int3
jp
sti
in
cld
lcall
enter
pop
cmp
add
xchg
out
or
shll
xchg
inc
insl
pop
xor
mov
arpl
sub
dec
mov
sar
or
es
inc
ljmp
pop
sbbb
cmp
test
jns
inc
xor
in
inc
jmp
xchg
pop
movsb
pop
divb
push
push
cmc
mov
stos
fistpll
xchg
sub
fsubrs
les
or
sub
push
push
jp
lcall
jp
stos
or
mulb
inc
dec
cmp
mov
sbb
inc
je
sbb
mov
mov
dec
and
add
call
pop
fdivrs
push
push
pop
rep
mov
pop
and
mov
jae
jmp
enter
aas
sub
fsubrs
jo
js
fsubr
dec
gs
pop
mov
pop
and
add
xchg
int3
out
inc
inc
mov
mov
sbb
sbb
inc
ljmp
sbb
imul
or
and
clc
mov
jmp
jmp
sbb
sti
arpl
das
cmp
in
sub
call
push
jp
lcall
xor
adc
cmp
mov
test
shlb
jl
dec
incl
fwait
jmp
dec
lock
negl
mov
icebp
cwtl
cmp
mov
dec
add
aaa
or
mov
push
insl
xchg
les
jmp
jnp
xchg
pop
inc
ss
jnp
inc
lahf
dec
inc
mov
push
mov
sti
adc
incl
cmp
out
xchg
jno
test
test
imul
xor
or
gs
fsubl
cmp
testl
icebp
arpl
pop
rorb
add
iret
push
push
iret
adc
ljmp
jno
hlt
call
xchg
sbb
mov
adc
setbe
and
pop
add
incl
gs
out
lods
sbb
push
mov
mov
jne
in
mov
jbe
clc
and
cs
int
push
mov
addr16
int
xor
decl
jbe
mov
std
dec
std
js
inc
das
inc
lock
pop
loop
pop
jnp
mov
cld
ljmp
addr16
xor
jns
ficompl
clc
jg
ljmp
iret
push
sub
data16
pop
lock
out
rorb
add
insb
xchg
arpl
mov
scas
jecxz
rcrb
jbe
cmp
mov
fcomip
fists
or
mov
cmp
xchg
js
mov
inc
inc
jp
pop
jmp
jno
cmpsl
jg
or
rcll
cli
cwtl
mov
das
add
lcall
call
pop
mov
enter
mov
adc
jg
lcall
or
mov
les
nop
bound
jo
in
call
xlat
jge
sbb
js
std
jecxz
leave
adc
sub
push
sub
push
push
sub
mov
aad
jp
repz
sti
add
add
jmp
lds
dec
stos
pop
lcall
movsb
cmp
std
push
cld
fcomip
jmp
mov
int3
dec
mov
jns
and
inc
jae
adc
lret
jge
nop
jo
cmpsb
sti
mov
fwait
mov
ret
arpl
popf
insl
adc
ds
stc
decl
inc
inc
mov
ss
add
xchg
inc
fimuls
sahf
xor
jmp
sbbb
vunpckhpd
leave
cltd
mov
xlat
popa
and
lods
mov
mov
add
dec
ror
mov
out
shr
outsb
mov
fsubrl
mov
call
cmc
push
popa
les
jno
and
test
fs
cmp
adc
and
std
pushl
mov
ss
rcr
test
add
mov
push
push
ret
lahf
cmp
push
pushl
dec
cmp
sub
jge
inc
test
js
jno
out
xor
fists
call
je
jb
movsb
nop
mov
enter
add
push
aas
pop
cltd
mov
data16
mov
pop
sub
pop
push
inc
pop
pop
sbb
cld
test
jb
stos
lahf
jecxz
and
out
test
loope
sub
push
mov
xchg
in
loope
mov
xor
cltd
jbe
inc
push
insb
loope
xchg
and
adc
jns
repz
mov
test
adc
arpl
mov
movsb
pop
jno
cltd
out
lcall
mov
insb
sbb
cwtl
pop
jle
data16
out
sub
in
je
add
inc
xchg
ss
popa
jo
push
sub
stos
push
ret
mov
mov
fs
test
lock
aad
insl
cmc
cmp
fisttpll
or
lcall
mov
insb
jl
insb
movsb
popa
in
les
sbb
pop
nop
fldl
jo
xchg
mov
cmp
sub
bound
sbb
mov
mov
mov
in
or
adc
adc
and
pop
inc
js
es
cmp
fildll
mov
mov
jl
in
mov
dec
shll
mov
test
jg
sbbb
add
lahf
stc
add
mov
iret
xchg
or
data16
jp
decl
addr16
ret
sbb
sub
mov
adc
xchg
pop
dec
push
dec
sub
lock
incl
and
pop
cli
addr16
aam
cs
push
jmp
push
adc
mov
cli
fbstp
in
jno
sub
xchg
les
mov
dec
sbb
sub
xlat
push
cltd
add
scas
ljmp
mul
adc
sti
ret
int
push
notb
popf
nop
daa
icebp
add
cld
out
xor
jg
ljmp
sub
and
dec
popl
add
and
incb
pushl
mov
enter
xchg
cmp
and
lods
loop
pop
lods
add
sbb
pushf
pop
ljmp
out
dec
ret
mov
inc
inc
inc
rcll
mov
xchg
cmc
sarl
and
stc
dec
out
in
push
fcoml
mov
fisubl
or
cld
ljmp
imul
stc
scas
cwtl
jbe
movsb
push
cmp
ret
jge
xor
fdivl
jmp
xchg
pushl
rcl
in
pop
jns
mov
mov
sbbl
adc
fcoml
and
jmp
negl
imul
jbe
xchg
enter
and
sub
call
ror
mov
ljmp
fwait
lcall
xor
lret
ja
push
je
repz
mov
lock
fmull
outsb
pushl
ljmp
cmc
jno
les
jbe
pop
dec
aam
push
lahf
inc
ficoms
leave
dec
jg
xchg
xchg
push
es
dec
xor
sarl
jmp
cli
mov
adc
hlt
dec
mov
push
out
jle
cmpsl
adc
cmc
fidivrl
ja
aaa
cld
xor
test
inc
jle
push
movsb
add
add
repnz
push
mov
fsubs
pop
or
xor
aas
fwait
cli
dec
inc
mov
pop
xchg
mov
outsl
inc
push
fdivr
pop
push
adc
ffree
arpl
iret
and
inc
push
test
xor
and
sub
sbb
and
pop
xchg
jg
call
in
or
fwait
jecxz
movsb
cmpb
int3
lret
in
pop
mov
push
mov
pop
aaa
adc
cmp
in
push
pop
lods
aas
cmp
rcrl
je
push
rorb
adc
ret
or
call
and
ret
ret
sub
mov
mov
add
dec
sub
lcall
lods
add
sbbb
jnp
mov
xor
jmp
lock
mov
ja
aaa
and
lcall
test
imulb
xor
incl
fdivrl
xchg
shrb
pop
push
gs
adc
mov
les
fdivr
jmp
sub
and
aaa
cli
or
lods
cmp
cmovae
insl
xor
out
mov
repnz
ss
add
repz
out
jecxz
push
scas
pushf
shll
push
test
push
mov
pop
mov
stc
cmpsl
subl
pop
cmp
lds
jle
cmpsl
push
ds
imul
incl
dec
adc
scas
sub
push
mov
add
inc
and
push
sbb
decl
mov
adc
inc
pop
notl
mov
dec
or
ljmp
bound
adc
in
mov
cs
jnp
test
mov
lret
shrb
les
inc
in
and
pop
les
lret
out
mov
outsl
cs
arpl
outsb
cli
push
push
jns
xchg
hlt
push
call
adc
adc
sbb
sahf
mov
ljmp
test
incl
sub
test
sbb
jbe
xchg
fsubrl
scas
xchg
stos
push
lods
call
add
inc
fsubrs
test
xor
movsl
pop
add
jbe
sti
movsl
loope
xchg
test
or
ljmp
inc
adc
fimuls
mov
ret
xchg
or
adc
dec
call
jmp
decl
jecxz
xor
fxch
fxam
cmpb
mov
sub
inc
sub
mov
fisubs
lods
icebp
shrl
sub
pop
lea
std
mov
push
mov
xchg
lcall
ret
xor
mov
stos
adc
jae
divl
test
pushl
cs
ljmp
jle
mov
xlat
dec
cs
pushl
cmp
mov
mov
mov
inc
add
cmp
fistl
insl
adc
jg
xchg
xchg
xchg
call
scas
jnp
int3
xlat
pop
cmpsl
out
test
leave
mov
je
mov
dec
or
inc
cltd
cmp
inc
stc
adc
imull
pop
push
or
fucom
dec
push
pushf
nop
or
jmp
pop
repz
pop
jno
fwait
ljmp
cmp
xor
mov
fisttps
pop
sub
xchg
pop
jnp
push
xchg
in
push
gs
ljmp
and
les
aas
xorl
mov
mov
mov
int
dec
or
stos
dec
enter
lods
sarl
aam
add
loop
jmp
clc
js
add
call
cmpsl
roll
int3
shl
subb
addl
ljmp
std
jno
clc
int3
popa
ficoml
adc
add
loope
xchg
add
sbb
incl
ficomps
ss
nop
xchg
mov
inc
popf
enter
cli
or
jecxz
jae
lcall
push
push
scas
rcll
xchg
mov
stc
loop
and
jb
sub
cmc
mov
incl
add
test
popa
or
fwait
cmp
jmp
mov
or
xchg
mov
popa
jne
dec
je
repz
inc
pop
aaa
in
repnz
dec
in
dec
out
sub
cwtl
dec
int3
nop
xor
mov
cmp
das
sar
jmp
ljmp
inc
add
xor
lret
adc
mov
test
cmp
push
adc
cmp
cmp
in
and
jg
int
insl
fildll
push
dec
mov
xchg
fists
bound
mov
jecxz
pushl
call
jge
fldt
shlb
mov
sub
fwait
or
das
sar
popa
ja
jo
push
js
sbb
inc
sti
out
add
ds
das
clc
inc
xor
xchg
dec
in
sbb
rcll
imul
decl
xchg
inc
xchg
in
or
outsb
jge
mov
xor
std
xor
lods
mov
mov
sub
pop
je
imul
in
push
pop
adc
adc
pushl
add
mov
int
sub
sub
adc
inc
incl
lahf
xor
mov
rdmsr
cs
mov
sbb
mov
lea
mov
and
in
mov
cmp
in
cmp
loopne
cmc
cltd
pop
lods
and
mov
mov
jnp
clc
arpl
pop
mov
jae
repnz
ja
lock
imul
mov
mov
and
cmpsl
or
jle
mov
pushl
adc
mov
faddl
cmpsl
push
xchg
add
dec
sbb
mov
mov
call
sub
xorb
decl
push
es
leave
out
mov
add
cmp
and
sub
loopne
jo
shlb
inc
xor
push
cmc
ljmp
lret
retw
mov
mov
popf
imulb
sar
outsl
imul
cmc
scas
pop
xchg
lcall
js
fwait
scas
cmp
xchg
cli
push
sbb
lds
jo
pushf
jge
std
pop
pop
fdivp
cmc
in
cld
inc
cli
call
xchg
aaa
sub
je
push
or
pop
out
xorb
ljmp
xchg
inc
pushf
adc
sbb
jl
fisubs
add
aad
mov
push
lcall
pop
and
inc
ds
mov
sub
out
adc
and
push
das
inc
inc
xor
lock
mov
jle
and
daa
push
imul
mov
popf
xchg
insb
inc
in
push
iret
xor
mov
mov
pushl
or
xor
ss
inc
jne
xor
shrb
nop
int
lea
jmp
dec
jns
std
mov
jl
call
das
mov
and
in
dec
and
adc
jg
ds
fldenv
dec
std
dec
sbb
mov
adc
dec
mov
pusha
ret
stos
push
leave
ljmp
fisttps
or
popa
xchg
popf
mov
mov
rcrb
dec
jb
repz
lret
cmp
fs
jns
push
xor
repz
pop
test
inc
jg
xchg
imul
and
cltd
test
pop
mov
jg
pop
jle
dec
sub
lea
insl
into
mov
adc
stos
add
mov
aam
lods
jo
inc
repnz
stc
aaa
push
out
lret
daa
dec
sub
push
ret
mov
outsl
loopne
xlat
sub
or
sahf
call
test
mov
adc
push
jg
ljmp
xorb
sbb
add
xchg
sub
loop
cmpb
cmp
test
or
mov
test
test
fnstsw
xchg
pushl
stc
jmp
cmp
jl
in
mov
incl
mov
inc
push
idiv
pushl
in
pushf
push
andb
outsb
cs
insb
hlt
sar
call
mov
xor
xchg
sub
icebp
push
sub
lea
lcall
icebp
aad
pop
popa
xchg
dec
mov
shl
lret
fcmovnbe
notb
cmp
filds
or
popf
insb
fistl
sysret
pop
xchg
fistpll
ljmp
inc
imul
jo
pusha
rclb
push
sbb
shlb
popa
fdivr
lcall
dec
dec
mov
xchg
xchg
mov
lods
push
dec
notb
mov
mov
addl
jmp
shrb
sahf
stc
imul
nop
leave
cmpsl
loope
mov
push
pop
sahf
pop
addr16
sbb
mov
jne
enter
and
sub
ljmp
jno
xorl
int
cli
and
add
mov
and
into
pop
mov
in
mov
push
sbb
push
popa
mov
das
into
out
xchg
xchg
test
outsb
add
pop
icebp
and
inc
sbb
jnp
cmp
addr16
gs
push
out
lahf
pushl
cld
or
repz
and
fstps
adcb
filds
call
jns
test
das
push
and
fisubl
out
arpl
mov
mov
ljmp
push
hlt
pop
imul
icebp
scas
mov
sbb
xor
mov
push
cld
addr16
mov
jmp
loope
adc
xor
fimull
or
xchg
jp
or
sbb
push
lcall
out
xor
sbb
in
inc
dec
popf
xchg
bound
mov
jb
add
loopne
dec
call
xor
and
fistps
and
gs
jg
loopne
imul
pop
int
jmp
pop
bound
push
outsb
ljmp
dec
mov
adc
push
jno
test
decl
fimuls
das
jge
mov
divl
pop
xchg
gs
sub
adc
sbb
adc
orl
cmp
inc
inc
cwtl
or
cmp
out
int
xor
add
mov
dec
adc
scas
add
push
or
incl
enter
add
aas
pop
dec
test
xor
inc
pop
xchg
xor
lcall
adc
and
js
add
sbb
stc
dec
jns
incl
call
rclb
lcall
mov
mov
adc
test
adc
lret
icebp
cmp
loop
jp
fcos
ljmp
or
jnp
adc
ss
inc
push
call
fwait
add
mov
add
jecxz
push
cwtl
xchg
dec
cmpsb
insb
push
and
mov
mov
leave
sbb
lcall
je
out
mov
and
cmp
inc
sub
rcrl
lds
cmp
sbb
cmp
call
repz
ss
pop
lahf
adc
mov
sub
out
call
lret
cmpsb
or
sahf
incl
mov
movsl
dec
repnz
sub
jmp
jle
jge
cmp
in
outsl
mov
xchg
mov
pop
leave
jp
add
ficoml
or
sub
add
jg
in
mov
and
push
outsb
fisttps
sub
sub
sbb
mov
insl
sub
mov
insb
lds
or
add
jae
mov
mov
js
mov
jmp
push
jle
push
mov
mov
adc
fisubs
out
pop
pop
mov
dec
cmp
push
decl
lret
xchg
in
xor
loop
loopne
xchg
jle
xchg
adc
mov
out
fwait
cmc
data16
lock
ljmp
mov
ret
loope
xchg
loope
mov
inc
pop
js
lret
cmp
mov
jnp
test
dec
mulb
pop
push
insb
mov
mov
loope
fbld
mov
and
lret
mov
jmp
in
sub
test
fsubrl
push
pop
cwtl
mov
push
add
outsl
pop
adc
mov
or
mov
jg
test
inc
lea
push
jg
inc
fidivs
mov
hlt
jge
jmp
mov
popf
inc
xchg
into
movsl
xchg
and
loope
fwait
inc
dec
out
shll
inc
or
inc
fcomp
fldlg2
div
ret
outsb
subps
lock
lock
xor
add
pushl
out
jmp
loope
mov
loopne
and
adcb
std
mov
push
jl
mov
and
out
daa
xchg
repnz
jecxz
or
je
call
xor
movsb
add
dec
add
sub
pop
pop
loope
adc
lcall
or
out
mov
inc
loopne
movsb
xor
test
daa
fs
scas
sbb
mov
lods
or
push
movsl
popa
int3
lcall
mov
fnsave
sbb
xchg
and
xor
pop
or
sub
mov
jmp
or
shr
mov
aad
xchg
movsl
pop
dec
cs
hlt
sbb
push
mov
inc
mov
jp
pop
inc
jmp
shl
rol
adc
xor
mov
lcall
pop
add
imul
outsl
repz
sbb
push
xor
pop
push
push
sahf
inc
ljmp
ljmp
movsl
jbe
xor
pop
and
adc
ljmp
insb
sti
dec
stc
xor
jns
sub
push
das
call
std
or
dec
fsubrl
aad
outsl
xchg
xor
cmpsb
adcl
add
fucomip
mov
ds
and
in
incl
inc
aam
push
nop
dec
adc
pop
outsb
push
shlb
test
leave
sbb
stos
pushl
icebp
test
call
mov
xchg
dec
out
xchg
mov
add
je
mov
in
ret
jae,pt
xor
call
inc
popa
aaa
mov
out
sub
dec
pop
ret
and
clc
xlat
jecxz
insb
mov
rclb
cli
push
or
decl
sbb
add
insl
popa
test
inc
jp
push
jmp
mov
fucomi
pop
icebp
stos
xor
push
push
leave
shll
pop
pop
mov
cmp
in
sub
call
add
in
dec
push
lock
jmp
add
sub
or
sub
cmpb
sbb
inc
mov
nop
call
test
decl
push
mov
test
imul
jbe
mov
jbe
pop
pop
call
ja
repnz
std
push
pop
inc
or
repz
cmp
inc
jl
lret
mov
jg
add
jbe
push
jmp
mov
xor
in
jno
test
jle
adc
lcall
int3
mov
rcrb
push
cs
xchg
mov
incl
jo
mov
and
xchg
mov
arpl
pushf
mov
pushl
or
pop
and
leave
lea
fidivs
adc
fistpll
pushf
ljmp
mov
out
hlt
rorl
neg
push
sbb
lock
pop
mov
pushl
lock
jno
in
add
lret
iret
data16
movl
cli
lock
push
lds
sahf
pop
inc
xchg
hlt
movsb
iret
ja
xchg
mov
test
lcall
pop
sbb
cmpsl
and
pusha
mov
push
mov
mov
xlat
aas
insb
out
pop
cmp
pop
test
pop
xchg
ret
pop
or
sbb
inc
or
push
pusha
jnp
jge
ret
push
adc
mov
dec
jg
incl
lcall
adc
jae
push
std
mov
mov
gs
sbb
or
enter
sbbb
mov
lods
aad
mov
incl
daa
add
psubb
inc
or
out
push
add
add
jl
in
cmpsl
scas
cli
incl
sbbw
test
sbb
push
movsb
add
arpl
hlt
cmp
pop
cmp
ljmp
sub
movsl
push
or
pop
arpl
xlat
push
and
inc
or
aaa
cld
es
dec
xor
outsl
test
jae
in
enter
xor
mov
adc
pushl
fsub
adc
subb
adc
std
fcomip
jmp
loopne
mov
test
lods
pop
dec
cmp
push
in
fildll
dec
lea
mov
adc
insb
mov
mov
incl
mov
pop
xchg
cwtl
cmc
mov
les
jns
xchg
cmpb
outsb
add
call
cmp
jle
mov
stos
jns
hlt
imul
sbb
jbe
int3
fistps
dec
pop
and
divb
std
ljmp
imul
and
aas
scas
aaa
pop
call
jae
incl
adc
sub
mov
push
test
into
mov
mov
mov
mov
fidivs
out
or
xor
stos
lret
lds
xchg
adc
lret
je
ret
icebp
push
cltd
das
in
cli
lcall
scas
xor
push
and
sub
cmp
sub
stos
sbb
out
mov
jp
adc
imull
sahf
mov
movsb
lock
frstor
pop
push
ret
insl
data16
scas
lcall
mov
jmp
and
push
int
and
pop
pop
ret
pushl
mov
mov
loop
fnsave
aas
xchg
scas
adc
jle
and
call
cwtl
lock
add
push
mov
pop
push
bound
sar
ljmp
dec
and
jp
cmp
outsb
fisttpl
popa
loopne
xchg
xchg
pop
shrb
push
repz
leave
mov
call
mov
pop
sub
cld
dec
cmc
jne
addr16
aaa
pop
push
jns
aaa
fimuls
and
ror
js
leave
ja
xchg
ud1
jecxz
ljmp
clc
ja
and
pop
sub
out
jmp
push
repnz
and
je
mov
or
lret
popf
jno
xchg
int
out
dec
pop
mov
mov
adc
mov
xchg
mov
lahf
push
pushf
cmp
jnp
dec
inc
decb
cmp
jb
push
fidivl
push
jmp
pushf
xchg
frstor
shl
repnz
inc
fcompl
cmc
push
imul
push
dec
in
xchg
lods
pusha
or
mov
or
inc
pusha
pop
dec
ss
pop
fucom
add
jmp
repz
cld
jnp
xchg
call
adc
push
pop
loop
pop
pushl
lods
sahf
jne
xorl
pop
cli
mov
mov
pop
sbbl
ret
jns
mov
fidivl
inc
inc
out
movsb
mov
mov
sub
cmp
mov
decl
je
and
fiaddl
cmp
jo
inc
nop
or
aam
cltd
inc
jmp
cmp
std
push
pusha
xchg
or
jmp
and
clc
rcrb
mov
xchg
cld
push
out
into
inc
jp
mov
xor
call
mov
pop
or
jl
mov
sub
mov
lds
xchg
adc
test
lods
loop
xor
fs
inc
mov
adc
call
lcall
decl
daa
fisttpl
out
jg
sub
inc
jnp
push
mov
int3
rorl
xchg
icebp
call
mov
test
jle
pop
rcrb
ljmp
adc
and
out
sbb
das
test
loope
sub
popa
mov
sub
incl
add
fcmovnu
push
jle
cwtl
jne
ret
jg
js
mov
in
mov
mov
jp
mov
call
aaa
stc
or
roll
cmp
adc
ja
and
jmp
out
and
stc
xchg
sub
test
xchg
dec
mov
sub
test
sar
incl
loopne
pop
andb
sbb
mov
inc
movsb
pop
ljmp
out
cmp
push
xchg
imul
mov
leave
sbb
lea
pop
lcall
pop
ljmp
gs
mov
mov
aaa
pop
pop
pusha
daa
mov
mov
in
in
cmp
call
push
clc
xor
push
dec
aam
adc
or
pushl
popa
pop
mov
mov
xor
aas
xchg
add
or
mov
call
xor
mov
out
in
les
out
dec
mov
xchg
or
outsb
movsb
sbb
jg
add
xor
bound
sub
inc
mov
jno
jbe
insl
inc
enter
xor
push
mov
call
add
fstpt
js
fcoms
fucomi
or
dec
addr16
inc
push
dec
cli
popa
incl
mov
mov
out
ret
in
rorb
movsb
mov
jb
cltd
and
lcall
popf
ret
fcmovnbe
sahf
int
cli
jmp
sbb
mull
cld
cwtl
dec
inc
inc
jecxz
clc
jmp
inc
loope
pusha
loop
push
ret
mov
jmp
ror
add
pop
inc
lcall
and
loopne
cs
jmp
or
imul
push
xchg
stos
enter
mov
mov
inc
mov
icebp
fstps
shrl
adc
jl
cld
pop
mov
pop
mov
mov
xlat
es
xchg
push
adcl
fwait
jg
aaa
insb
lock
fstenv
and
mov
pop
cs
in
sub
inc
sbb
shrl
out
cmpsl
bound
fndisi(8087
decb
pusha
in
fs
inc
inc
mov
call
jo
mov
jg
iret
xor
jecxz
sbb
fdivrl
xor
out
fdivrs
call
add
mov
aad
ror
icebp
xchg
mov
test
mov
cmpsl
enter
jg
fwait
je
cmp
cli
out
push
mov
cmp
cli
push
cmp
mov
das
fimull
push
ret
mov
leave
out
in
addl
and
inc
pusha
cld
je
repz
cmp
das
lods
pop
mov
decl
xor
loopne
sbb
in
cmp
lcall
or
jp
jno
sbb
cmpsb
ret
and
cmp
sbb
mov
mov
adc
pop
sub
add
lds
pusha
testl
xchg
jecxz
sub
mov
movsl
stos
mov
inc
daa
mov
cli
xchg
cmpsl
pop
addl
jmp
add
lcall
push
mov
push
push
aaa
inc
loop
inc
or
pushl
cmp
xor
and
cltd
cmp
daa
pop
rcl
and
lods
inc
adc
cmpsl
fisubrl
fisttpll
scas
out
call
decl
mov
out
mov
mov
out
shrb
loope
imul
rcl
movsl
push
cs
mov
cli
test
adc
jle
cwtl
comiss
mov
out
xchg
mov
fsubrp
cmpsl
jb
push
xchg
add
xor
call
data16
xor
jns
int3
push
inc
mov
or
fidivrs
pop
sub
in
das
jle
stos
lcall
and
inc
or
and
out
jl
lods
dec
imul
xor
jg
das
sbb
subl
aad
push
xchg
in
rcr
mov
xor
clc
or
add
decl
add
add
int
adc
addl
pop
pop
lret
cld
cmp
out
jmp
cltd
cmp
hlt
sbb
stc
out
and
mov
adc
add
cld
icebp
ljmp
xor
xor
sbb
sbb
movsl
mov
xchg
stc
and
cmp
or
outsl
inc
dec
jecxz
lea
xchg
loop
int3
sbb
clc
cmp
pushl
jbe
jae
sti
xchg
test
fcoms
insb
mov
ja
mov
call
xor
loopne
dec
test
test
gs
cmp
add
lcall
loopne
mov
int
xchg
pop
jmp
in
xchg
rcl
pushl
xchg
fcmovu
push
leave
notb
int3
stc
fsubs
push
lock
jg
in
subb
mov
and
test
sub
ljmp
lcall
scas
iret
aam
popa
cmp
xor
fildll
lds
pop
mov
enter
sti
std
cmpsl
jbe
sarl
xchg
jge
jns
mov
sbb
test
imulb
fisttpll
test
clc
jmp
or
inc
out
mov
mov
lods
mov
mov
lret
test
mov
pop
mov
int
ljmp
push
adc
and
sub
imul
cwtl
dec
mov
cmp
mov
push
jp
int3
jno
ljmp
sbb
nop
addb
add
adc
stos
pop
mov
pop
lcall
mov
bndldx
xchg
cld
sti
das
pop
jmp
test
xor
dec
xchg
popw
pop
sub
adc
sahf
mov
jg
decl
lock
iret
sar
push
xchg
and
sbb
fcmovb
lods
pop
sbb
add
sub
mov
outsb
sub
lcall
jle
out
push
mov
adc
out
xchg
int3
dec
sbb
movsl
incl
test
enter
mov
mov
incl
test
fdivrs
push
das
mov
fsubr
pop
add
push
adc
test
ljmp
mov
loope
xor
lcall
mov
dec
sub
lret
push
jno
decl
insl
adcl
sbb
push
sbb
ret
sub
test
xchg
cmp
decl
nop
gs
ds
rcll
mov
pop
test
test
out
mov
decl
cmp
lret
mov
mov
sbb
sub
mov
jmp
inc
sbbb
rolb
and
cwtl
adc
ja
pop
push
stos
ud0
ds
jae
lcall
lods
insb
sbb
sbb
push
adc
arpl
cmp
outsl
mov
loope
aad
cmc
scas
mov
xor
jmp
and
mov
imul
andb
sbb
jnp
popf
insb
and
mov
jle
adc
incl
mulb
mov
int3
lcall
jae
hlt
mov
jmp
add
enter
xor
jnp
aaa
sti
mov
dec
icebp
ret
ljmp
jmp
into
sub
ja
push
lods
movsl
outsl
fsubrl
sub
pop
fs
add
jo
lcall
mov
jge
dec
ficoms
repnz
bound
push
shrl
ds
xchg
loopne
push
into
and
pop
incl
cltd
mov
xor
sarl
test
in
sub
dec
imul
shrb
jg
cmp
inc
shll
jg
xchg
jl
xor
push
movl
mov
sub
and
jmp
sbb
ror
in
xchg
mov
pop
cmc
mov
and
fldt
xchg
dec
push
inc
adc
jo
popf
fwait
lahf
sbbb
cmpsl
orb
cld
push
les
cs
jmp
add
xor
push
dec
out
push
inc
or
add
pop
adc
lret
sbb
and
add
mov
lret
scas
bound
imul
imull
mov
jo
imul
or
rcrb
ss
add
mov
add
ret
push
inc
add
add
add
adc
add
cmpsb
hlt
fwait
mov
adc
test
dec
jo
daa
sbb
imul
in
push
dec
gs
in
incl
adc
outsl
outsl
insb
push
push
sahf
inc
mov
jae
outsl
xor
jae
in
dec
adc
sbb
push
scas
cmp
aaa
cmp
xchg
subb
cld
mov
insb
push
mov
sub
movsl
dec
jne
js
arpl
sbb
dec
push
jb
jp
lea
and
inc
fnstsw
jp
sbb
jns
push
imul
sbb
sbb
cmp
dec
ljmp
adc
out
popa
test
push
and
into
inc
push
jb
call
push
pushf
mov
xchg
jo
or
popf
mov
lmsw
inc
jl
pcmpgtd
loopne
sub
loopne
pop
enter
insb
aaa
inc
movsb
cltd
stos
sub
sub
or
mov
push
mov
pop
mov
imul
ja
inc
sbb
or
adc
out
or
inc
xor
sub
mov
mov
cmpsb
mov
push
pop
ds
insb
jne
loopne
sbb
addl
xchg
mov
push
xor
ret
push
inc
sbb
jo
inc
push
fcoms
filds
sbb
pop
push
mov
mov
fadd
add
popa
subl
test
lods
pop
jb
pusha
clc
movsl
mov
push
jns
push
out
fmul
mov
inc
jae
adc
pusha
js
ficoml
and
inc
jecxz
xchg
adc
mov
int3
mov
jae
adc
inc
insb
rcll
inc
mov
push
sbb
inc
or
dec
lds
sub
addr16
push
pop
imulb
rorl
dec
sbb
push
adc
sbb
lock
dec
adc
and
mov
xor
arpl
fistpll
sub
test
sub
out
fucom
xor
inc
adc
mov
sub
pop
aad
lods
jge
outsl
popw
push
shlb
lret
mov
mov
inc
xchg
popa
and
pop
fwait
push
xlat
das
ljmp
jae
pushf
inc
or
mov
sbb
pop
dec
inc
dec
or
inc
addb
in
adc
out
dec
jb
mov
or
fs
dec
mov
xchg
lods
xor
sbb
ja
mov
adc
jg
pop
push
adc
ja
rcrl
andb
and
sub
jnp
inc
popa
es
jp
test
xchg
push
push
jg
mov
xor
cwtl
inc
jae
sbb
add
insl
jno
orb
adc
mov
pop
test
mov
dec
rolb
push
xor
jmp
bound
and
pop
lods
lods
jmp
aad
jns
adc
inc
inc
ss
mov
push
mov
push
inc
sbb
sub
sub
fiadds
sbb
insl
adc
or
push
es
mov
sbb
mov
ljmp
loope
xchg
adc
stos
loope
adc
cmpsl
adc
add
cmp
add
out
ret
pop
aaa
cmp
inc
inc
test
xlat
test
and
mov
cmp
stc
pushf
push
jne
inc
fadds
adc
stos
inc
or
pusha
andb
xchg
dec
mov
test
sbb
cmp
arpl
xchg
jnp
inc
xchg
and
outsl
pushf
mov
xor
movsb
or
or
inc
test
inc
scas
cmp
addps
outsb
push
outsl
add
inc
cmp
xorb
arpl
jne
mov
inc
sub
sarb
test
les
dec
gs
jne
inc
cmpsb
sti
inc
lods
push
ror
adc
xchg
arpl
std
movsb
adcb
jp
ds
pop
mov
inc
jge
out
adc
sbb
xor
sbb
inc
sbb
pop
jmp
dec
xchg
fstps
repnz
neg
lcall
and
int3
pop
mov
in
pop
popa
sbb
fildl
sub
in
push
shlb
pop
add
daa
int3
outsb
lds
mov
push
xlat
sbb
je
push
loopne
mov
jbe
jb
pop
test
aam
sbb
nop
inc
cs
jo
bound
inc
inc
gs
arpl
fistpl
popf
inc
imul
mov
mov
mov
mov
js
insb
push
out
outsb
jae
push
inc
insb
jle
jge
pop
inc
subb
nop
lcall
jl
xor
aad
adc
pop
sbb
jne
insl
mov
pop
js
inc
mov
jo
inc
push
and
orb
sbb
int3
sbb
jnp
push
in
mov
out
pushf
jge
xchg
movsb
xor
push
pop
js
pop
lret
xor
shlb
loop
mov
inc
push
sub
mov
pop
pop
xor
ja
pop
cmp
pop
xchg
fdivrs
je
insl
dec
outsb
dec
loope
andb
mov
cmp
jnp
sar
pop
add
cmpsb
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
cmpsb
xor
add
pop
adc
repz
mov
inc
jb
rolb
adc
xor
and
jge
sub
bound
cwtl
push
inc
inc
out
inc
push
std
or
jb
push
jb
inc
jae
push
or
ror
jo
aam
js
add
insb
push
ss
repz
jo
sbb
jo
mov
and
xchg
test
aaa
push
pop
push
bound
icebp
xchg
inc
cmc
xchg
mov
push
les
fsts
sub
xor
sbbb
cltd
add
inc
mov
push
mov
shl
mulb
notl
pop
nop
mov
fwait
jno
inc
mov
aad
psubusw
cmp
push
inc
fildll
xchg
push
rolb
imul
movsb
xor
or
add
sub
mov
mov
test
sbb
mulb
aaa
in
mov
push
std
rorb
insb
mov
gs
in
inc
subl
shl
lods
push
repz
jge
adc
aad
enter
mov
andb
ret
or
paddsw
pushf
insb
adc
sub
pop
shlb
xchg
ja
push
inc
add
sub
sbb
cmp
sahf
out
push
push
adc
lret
push
sub
xchg
insb
sub
pushl
or
sbb
mov
dec
insl
fs
mov
xchg
test
mov
jg
rclb
es
dec
or
mov
orb
inc
lods
fisubl
push
lds
mov
sbb
mov
pop
push
in
test
xchg
cmp
mov
outsb
shll
fs
mov
jbe
pop
cwtl
push
sub
dec
icebp
icebp
test
lods
xchg
jg
je
int3
pop
outsb
cmp
data16
sbb
addr16
sub
int
test
repz
xor
fcomps
or
aad
lods
shrd
loopne
shl
mov
call
cmp
jecxz
mov
ja
push
popa
xor
or
lods
pop
fildl
enter
xor
js
sbb
inc
inc
push
inc
push
jns
mov
jnp
ljmp
out
adc
ljmp
int
sarb
pop
xchg
dec
push
dec
jnp
aad
jae
inc
mov
push
fsub
or
jl
mov
pop
lcall
jmp
lret
push
jmp
xchg
xchg
fwait
sbb
shlb
pop
sub
adc
sub
xor
aas
movb
sub
jno
mov
xchg
ror
add
cmp
fidivrl
cmpsl
daa
inc
pop
xor
cmp
mov
and
cmp
cltd
jl
adcb
pop
fiaddl
or
lods
jmp
add
jo
pusha
lods
pusha
dec
xor
xor
mov
adc
pop
jae
add
push
sahf
push
cmc
pop
lret
xlat
add
aad
bound
add
jb,pn
popa
adc
pop
bound
add
sub
shlb
xor
js
loopne
roll
xchg
daa
dec
clc
push
dec
rcrb
out
rcll
jo
scas
and
lahf
add
insl
mov
mov
icebp
jg
xchg
test
and
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
