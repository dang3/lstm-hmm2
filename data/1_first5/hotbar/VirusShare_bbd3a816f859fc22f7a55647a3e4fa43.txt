fcomp
decl
push
jns
add
mov
or
adc
or
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
testl
pmaxub
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
mov
insb
and
push
push
test
test
roll
pop
sub
dec
sbbb
sbb
rorl
or
xor
notl
sbb
push
and
push
cmp
push
add
fstpl
sub
bound
test
rclb
je
pop
mov
push
xchg
dec
add
cmp
je
sbb
jle
add
push
adc
lock
dec
add
mov
add
xor
xor
sub
in
mov
push
and
out
add
xor
mov
shrb
push
mov
adc
data16
mov
mov
inc
lock
lret
lds
test
sbb
int
add
loopne
ret
fbstp
pop
sbb
push
push
xor
push
nop
and
sbb
or
jnp
out
cmp
add
cmpsl
push
push
insb
sbb
add
ss
iret
add
mov
adc
in
mov
sete
inc
movsl
adc
xchg
push
push
into
nop
sub
add
or
leave
mov
pusha
push
rorl
nop
cld
imul
add
push
push
pop
inc
adc
sub
pop
bnd
add
enter
add
push
sahf
and
add
push
mov
fwait
push
loopne
push
rol
imul
xor
mov
push
daa
sbb
sbb
aam
xor
push
push
pushf
sbb
xchg
dec
push
mov
lea
or
imull
push
mov
dec
or
pop
sahf
add
sbb
cmp
lret
add
add
pop
mov
dec
test
mov
sub
sub
out
pop
jg
mov
and
mov
dec
jg
mov
addl
and
adc
pop
cmpsb
mov
pop
ret
xor
mov
inc
push
dec
dec
push
sub
push
insb
insl
push
add
fmul
loop
faddp
jl
jmp
test
pushf
inc
les
leave
inc
call
fmull
sbbl
clc
imull
mov
call
dec
lea
mov
pop
subl
and
add
pop
pop
scas
push
and
ror
sub
push
in
push
int
pop
xchg
scas
roll
push
mov
out
mov
push
inc
ja
lcall
add
cmp
mov
out
sbb
sarb
in
dec
inc
aas
cld
push
dec
bswap
push
add
call
inc
mov
inc
incl
xor
pop
popf
mov
or
pop
mov
and
outsb
sbb
mov
sub
lret
jl
orl
sbb
inc
hlt
nop
test
std
adc
dec
hlt
mov
or
dec
push
test
cmp
sbb
fmul
jl
inc
xor
shl
ret
cmovo
pushf
jl
or
and
dec
sahf
cs
dec
or
push
adc
push
jg
or
push
stos
add
push
lea
out
and
push
cltd
add
push
insb
fistps
ds
xor
jge
roll
ja
subb
sub
dec
or
test
push
adc
mov
sbb
pop
and
shll
mov
pop
mov
push
jbe
mov
dec
jo
pop
sbb
xchg
mov
pop
and
incb
jb
add
jne
fmull
imul
and
mov
pusha
push
push
es
or
les
push
add
cmp
or
arpl
cmp
mov
xor
mov
push
pusha
sub
pslld
jmp
rolb
inc
leave
lds
and
or
and
and
add
aad
sbb
roll
push
pop
insb
pop
jns
out
imul
push
cmp
jmp
inc
or
push
mov
in
xchg
hlt
pop
punpckhbw
jne
mov
inc
into
rorl
jne
push
jle
push
xchg
inc
or
jecxz
add
and
and
adc
mov
xchg
inc
jb
repnz
loopne
adc
push
lcall
push
dec
xchg
pop
mov
pop
push
push
mov
std
sub
push
xor
cmpsb
jo
push
aam
inc
jle
dec
add
ret
test
dec
and
add
cmpsl
sbb
push
inc
or
pop
in
or
push
mov
jmp
or
push
inc
pshufw
cmp
fdivrs
push
adc
loopne
cs
inc
sub
ret
jle
mov
mov
xlat
mov
mov
and
and
sbb
popf
dec
xchg
icebp
sbb
jno
sbb
jle
add
sbb
push
push
pop
jmp
adc
fdivrp
adc
leave
mov
movb
lds
mov
or
push
mov
xor
fdivr
cld
inc
fmull
add
and
out
xor
push
sub
mov
jecxz
mov
shrb
enter
int
mov
cmp
mov
cmpsl
sbb
push
push
cmp
or
bound
jo
mov
adc
mov
loope
call
push
adc
push
int3
ss
sub
mov
jo
sbb
rolb
test
xchg
or
cmpsl
xchg
push
mov
pop
mov
xor
fcoml
push
push
lods
dec
xlat
jle
cmp
cld
mov
movsl
inc
cmp
divl
sub
add
mov
xor
hlt
mov
sub
ficoms
sbb
int3
pop
cmpsb
or
add
adc
mov
das
cltd
das
aas
ja
sbb
or
mov
mov
les
cmp
and
mov
adc
push
mov
rcll
sub
ret
aaa
push
cmpl
push
in
push
lea
pop
pop
icebp
jns
repnz
lret
jmp
or
and
or
dec
inc
in
push
xchg
xchg
push
sub
int
movsl
clc
scas
lods
mov
or
sub
in
jg
pop
mov
jmp
cmc
jmp
adc
loope
cmpsb
pop
pop
and
add
cmc
sbb
push
xchg
adc
mov
push
jne
sub
sub
test
sub
jp
sti
adc
cmp
and
pop
inc
dec
bound
mov
dec
sahf
imul
cmp
jmp
jns
inc
inc
add
insb
cmp
and
cmp
jne
mov
dec
dec
xor
inc
xor
inc
lods
sbb
push
out
test
pop
cmp
je
sub
cmp
je
ljmp
xlat
or
lret
adc
sbb
mov
mov
cmp
test
mov
adc
daa
cltd
mov
push
and
pop
jg
add
inc
add
mov
cwtl
scas
push
mov
rol
push
push
or
hlt
aaa
xchg
cmpsl
call
adc
adc
pop
sar
fs
inc
cmp
jl
xlat
ret
xchg
negl
push
nop
imul
push
js
jne
push
add
cmc
jbe
xchg
push
mov
aas
jle
js
push
clc
sub
mov
xor
inc
push
dec
mov
and
jp
aaa
sbbl
ret
sbb
push
rorb
mov
mov
test
into
pushl
movzwl
and
add
je
push
cli
into
sbb
jmp
ss
mov
lea
add
inc
test
jne
sub
push
push
inc
sbb
dec
cs
adc
adcb
lock
xchg
lahf
xchg
push
push
or
jns
fists
mov
lds
add
in
push
ds
mov
insb
jne
adc
jecxz
rorl
pop
dec
es
lea
pop
jb
mov
add
iret
cmp
cmp
in
idivb
xor
mov
cmp
jl
push
xchg
xor
mov
pop
push
loopne
pop
insb
pop
pop
ret
mov
push
fwait
leave
or
orb
adc
jl
rcrl
or
loope
cwtl
mov
sbb
lcall
jno
mov
dec
or
pushf
je
or
shlb
rclb
push
loopne
fs
adc
lock
lods
pop
cmp
out
or
test
mov
std
mov
call
jge
push
call
test
scas
mov
or
clc
jle
mov
mov
jg
cmp
pop
mov
pusha
popa
fstpt
hlt
sub
lea
push
or
cmp
mov
push
cld
adc
cmp
ja
add
jmp
pop
cld
ret
fcoml
add
push
aam
fdivr
adc
jl
inc
jo
jg
mov
fcmovb
nop
sub
pop
pop
dec
pop
ret
mov
das
jl
icebp
mov
test
inc
lock
je
pop
sbb
or
insb
jge
sub
add
fidivrl
xor
movl
or
inc
mov
inc
adc
xor
test
push
dec
mov
push
add
sub
out
arpl
rorb
lret
pop
movsb
push
ja
jo
and
fldenv
ss
lods
pop
pop
data16
or
jne
or
scas
out
in
test
xchg
xchg
sbb
cld
mov
or
lret
push
clc
pop
lcall
adc
cmp
ja
add
push
xor
ret
cs
adc
push
gs
push
pop
dec
fists
repz
sarl
adc
adc
leave
adc
inc
or
mov
add
inc
aam
cmp
push
cli
enter
push
sbb
and
cmp
push
push
push
or
push
sbb
push
push
lea
or
enter
lcall
or
or
push
das
or
and
adc
pop
sarl
add
jecxz
lods
ret
pushf
loope
jecxz
sbb
inc
stos
sarl
or
loop
jno
movl
les
je
cmpl
inc
outsl
jg
lea
jl
mov
push
jne
push
or
push
iret
cmp
sbb
roll
dec
test
push
lods
das
push
repz
sbbb
fcomi
push
aas
push
hlt
push
push
frstor
or
repz
mov
inc
or
inc
or
mov
cmp
cmp
dec
loop
jne
inc
sub
add
push
mov
sub
loope
or
or
imul
fndisi(8087
fiadds
cmp
div
and
xchg
mov
cmp
add
add
movsl
lds
pop
push
push
inc
and
dec
mov
cwtl
test
mov
pop
mov
mov
outsb
sbb
push
mov
adc
ret
fidivl
clc
mov
cmp
sbb
adc
lea
cmpsb
dec
adc
mov
in
adc
mov
lea
and
sub
in
sub
and
bound
jne
pop
or
cmp
mov
mov
cmp
jmp
ret
add
jle
add
shlb
ret
jbe
sbb
int3
movsl
aas
xchg
and
jno
hlt
je
cmp
into
decb
add
add
outsl
stc
ret
mov
enter
jg
out
push
rorl
or
subl
add
dec
adc
inc
idivb
adc
ss
ljmp
push
sub
cmp
jge
push
jle
scas
cmp
mov
inc
jb
push
jl
and
push
or
push
hlt
xchg
clc
cmp
sbb
sbb
sarl
sbb
mov
cmp
pop
or
rcl
dec
fmull
lds
xchg
pop
pop
add
lock
fldl
pop
shlb
inc
and
lds
add
inc
sub
es
fbstp
test
popa
stos
or
and
jae
pushf
sbb
fiadds
in
enter
adc
fs
pushf
sub
fdivl
mov
insb
xor
push
cli
add
movsl
xchg
insb
push
adc
xor
mov
pop
pop
sbb
pop
xchg
xlat
or
mov
sbb
push
test
mov
inc
adc
pop
rcll
cmp
dec
and
xchg
dec
or
mov
sub
cwtl
push
mov
add
aam
mulb
outsl
jl
add
cld
test
mov
mov
popf
or
imulb
sbb
mov
or
andl
sub
mov
inc
add
sti
jne
xor
push
push
dec
pop
outsb
or
sbb
in
add
push
lea
add
ret
pop
shrl
pop
inc
decl
jbe
lds
in
xor
pop
or
rcll
andl
icebp
mov
sub
push
inc
psadbw
idiv
inc
bound
loopne
jg
femms
fs
push
mov
adc
sub
pop
and
aad
stc
pop
and
aas
and
sbb
sbb
sbb
add
addb
test
daa
sub
loop
jns
into
push
sbb
pop
pop
rolb
outsb
xor
pop
sub
mov
hlt
mov
xchg
inc
cmp
incl
mov
or
add
and
je
cmc
pushw
jle
cmp
stos
mov
fildll
push
push
push
add
in
shlb
outsb
mov
fcomps
inc
shll
cmp
pop
mov
push
stc
sahf
in
push
sub
cld
cmp
in
stos
imul
incb
sbb
and
jle
lock
cld
mov
addr16
jmp
ret
pop
add
cmp
filds
popa
mov
add
cmp
fidivrs
je
xor
stos
sahf
jecxz
in
icebp
mov
and
cmpb
int
sbb
mov
inc
pop
inc
cld
mov
cli
je
xor
pop
cmp
pop
je
mov
jecxz
xchg
jne
xchg
jl
jmp
xchg
jl,pt
mov
insl
cmpsl
or
cmp
test
mov
or
aaa
xlat
jo
inc
dec
adc
addl
jne
add
loop
les
dec
je
jmp
jo
push
dec
dec
mov
fdivr
shrl
rorb
clc
mov
add
xor
sar
sbb
movzbl
neg
sbb
and
les
add
pop
cmp
inc
push
lods
jo
iret
pusha
rorb
jp
mov
push
lea
pop
in
and
push
in
push
in
dec
mov
lret
sbb
pop
in
mov
jnp
popf
jns
lds
mov
mov
inc
sbb
xchg
mov
out
movl
xor
mov
stc
sbb
in
lods
scas
sub
mov
push
jle
in
jne
scas
dec
sbb
sahf
cmpsl
stc
sbb
mov
inc
gs
out
jb
out
sbb
cmpsl
stc
xchg
aaa
scas
int3
add
sbb
jo
mov
and
add
movsb
fstl
loope
imul
sub
sahf
sarl
sahf
in
or
clc
adc
out
dec
cld
add
adc
dec
in
repnz
adc
push
mov
cmpl
push
dec
mov
aas
mov
lea
push
ficoml
add
push
lea
xchg
and
dec
cmp
and
mov
dec
aam
adcb
pop
je
pop
xchg
sahf
icebp
mov
xchg
mov
in
loope
movl
rcr
or
stos
testb
je
js
jle
add
fcmove
gs
cmpb
mov
nop
xchg
pop
adc
test
sbb
xchg
cmp
clc
leave
add
lock
push
or
push
push
jle
ficompl
stos
out
sub
add
pushf
andl
mov
insb
fisttpll
and
and
inc
jl
sub
sbb
ret
jle
adc
lahf
je
pop
push
icebp
add
sbb
add
rclb
sub
loope
push
rolb
in
mov
call
in
out
sbb
sbb
ss
mov
inc
mov
dec
fiaddl
sbb
test
dec
imul
test
lock
sub
setne
push
hlt
mov
and
xor
popl
push
push
mov
dec
pop
pop
dec
in
push
std
mov
push
push
inc
lods
loope
shll
push
pop
cmp
je
lea
add
test
loopne
inc
add
mov
outsl
mov
movsb
incb
pop
test
or
ret
pop
or
mov
push
push
cmpl
jne
mov
cli
adc
mov
adc
test
aam
push
mov
das
xchg
mov
sub
jecxz
add
push
pop
push
lea
test
adc
pop
ss
aaa
data16
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
clc
repz
xchg
inc
dec
adcb
clc
or
sub
cltd
sub
rorl
add
push
mov
jle
imul
and
jmp
mov
add
sahf
andb
inc
mov
cmp
mov
push
jg
dec
mov
ljmp
xchg
xchg
inc
jbe
fadd
push
add
cwtl
push
sbb
push
adc
push
xor
cmp
adc
or
mov
mov
xor
and
mov
mov
sbb
xchg
pushf
jl
pop
add
fistps
incl
and
cmp
call
push
mov
add
mov
subl
addb
adc
lods
loope
xor
push
fnstsw
push
shrb
sub
add
addb
mov
in
jle
adc
repz
out
mov
mov
lock
lret
xor
cs
sub
push
movsb
jp
and
cmp
call
lock
or
jo
inc
aam
gs
lahf
adc
aad
jp
or
adc
cwtl
add
jmp
into
mov
jne
pop
push
push
push
and
push
add
cwtl
jecxz
push
in
aas
cs
jo
lret
push
cmp
sahf
xor
sbb
notl
ljmp
cmp
push
sbb
pop
xlat
loop
pop
daa
pusha
push
pop
enter
shll
clc
add
pusha
jne
addl
out
sbb
das
xor
call
lea
movl
adc
movl
push
pop
pop
int
pop
cmpsl
adc
rcrb
add
adc
mov
mov
out
fisubrs
hlt
or
xchg
mov
mov
daa
dec
adc
inc
push
sbbb
clc
inc
call
scas
xchg
aaa
mov
mov
jle
sub
push
add
push
xchg
lret
bound
pop
add
aaa
test
mov
push
jne
push
mov
or
mov
inc
xchg
out
pop
sub
lea
or
push
pop
push
pop
icebp
rorl
push
fstpl
movl
test
outsb
jae
pop
dec
cmp
psubw
or
or
mov
enter
mov
and
sub
lods
and
sub
sbb
adcb
aam
mov
mov
movb
adc
push
dec
sbb
push
lahf
loopne
dec
lret
push
push
sub
sub
push
addb
inc
ret
pop
xor
inc
lahf
push
rclb
pusha
add
push
pusha
mov
stos
push
sub
jge
push
nop
sti
add
or
pop
pop
sub
push
push
lea
mov
fsubrl
jp
xor
sbb
popf
pop
push
clc
test
add
push
xor
nop
jmp
jno
addb
lock
push
test
in
add
inc
cmp
add
addb
push
dec
add
fcoms
je
add
or
sub
pop
std
call
mov
icebp
inc
push
and
push
push
push
xchg
cmpsl
daa
push
rcll
dec
sahf
sbb
add
pop
push
je
push
mov
bound
adc
jge
aaa
faddl
sub
inc
shrb
ret
dec
jae
inc
inc
fldl
fmull
cld
or
push
jo
mov
inc
jle
cltd
sub
push
lahf
push
push
mov
mov
lock
enter
xchg
adc
sbb
mov
es
add
fdivs
mov
les
pslld
dec
ds
push
test
add
imul
or
jp
add
dec
mov
fstl
inc
loope
and
mov
std
cmp
inc
push
add
push
mov
movl
xor
push
and
jp
inc
cmp
cmp
sub
and
cmpsb
sbb
or
cmp
adc
rcll
arpl
aam
rsqrtps
sbb
ss
xorb
jno
adc
test
and
andb
or
add
test
lds
sbb
mulb
add
push
push
lea
pop
xchg
inc
addl
cld
cld
add
jge
add
je
mov
jmp
jb
jge
xchg
lock
push
cmp
cmp
jo
sub
sub
push
pop
inc
rcrl
inc
test
cmp
dec
or
jmp
push
mov
dec
lea
icebp
dec
or
add
loope
push
iret
add
fdivl
das
adc
enter
subb
push
mov
sbb
xchg
mov
dec
push
push
push
lods
in
jp
fcoml
cmpsl
inc
push
pushf
dec
adcl
data16
sahf
jge
and
inc
inc
push
sbb
mov
push
loopne
xor
test
jno
nop
lods
cwtl
pop
dec
popa
xor
scas
nop
dec
xor
pop
mov
out
gs
lock
mov
enter
dec
mov
pop
push
add
test
imul
push
ret
sbb
pop
add
add
ljmp
jl
cltd
and
std
stos
bnd
sar
push
push
mov
mov
pop
adc
jl
dec
add
push
insb
xlat
adc
push
fld1
add
mov
mov
dec
bound
xorb
imul
sar
mov
shr
add
mov
imul
push
mov
push
cmpsb
xorb
clc
in
jle
in
nop
mov
jmp
into
pop
dec
mov
mov
stc
add
push
mov
mov
push
enter
out
lcall
negl
inc
xor
jg
pop
pop
push
mov
pcmpeqw
push
jno
push
or
push
arpl
xor
ficomps
iret
mov
outsb
xlat
pop
es
lea
mov
testb
sahf
or
stos
add
jne
or
lret
sub
call
sti
addb
dec
push
dec
bound
cmp
dec
mov
add
add
mov
push
add
and
jnp
inc
jle
fldz
data16
push
ljmp
mov
fisubrl
int3
cld
pop
movsl
or
push
adc
fstpt
fisubrs
cltd
idivl
add
addr16
aaa
ds
ja
mov
mov
sbb
scas
jmp
loopne
jbe
popf
mov
pop
cmpsl
fnstcw
arpl
mov
fidivrs
mov
cmp
add
bnd
sbb
and
and
inc
sub
ljmp
lods
pop
lea
cmp
out
jg
jae
dec
sub
jge
jmp
mov
dec
mov
mov
fistl
movswl
lock
add
dec
or
jl
enter
sbb
stc
shll
outsl
inc
pushf
mov
sbb
mov
mov
cmp
mov
jns
inc
push
fcoms
ja
jl
jmp
fbld
loop
sbb
mov
fcomps
or
mov
je
add
sbb
cmp
out
testl
movb
add
mov
mov
pop
jecxz
jge
dec
cltd
push
or
cli
rclb
xor
pop
shll
mov
adc
and
test
lods
xchg
mov
add
fs
je
sbb
out
adc
xchg
mov
fistl
ret
xor
xchg
xchg
shlb
xchg
and
inc
insl
pop
loope
loopne
xchg
xor
adc
push
dec
subl
mov
lods
xor
sbb
xor
add
fsub
adc
cmp
lcall
jo
dec
and
jnp
popl
xchg
mov
push
or
inc
push
pop
mov
xor
outsl
loopne
push
jmp
popa
jmp
jecxz
sahf
mov
cmp
pop
add
or
fcomi
dec
jne
and
popa
mov
sbb
xor
add
pop
shrb
subl
dec
and
outsl
cmp
push
mov
sbb
addb
or
push
mov
mov
pop
sbbb
aam
sbb
xchg
cmp
notb
xchg
scas
ret
push
fisttps
jg
push
add
push
inc
mov
jae
inc
jg
leave
push
xor
sbb
data16
jo
fstpl
inc
shlb
lahf
add
or
mov
bound
adc
push
dec
and
jl
push
jmp
sahf
adc
jb
sarl
inc
enter
inc
sbb
cld
push
test
push
in
repz
and
or
ds
lea
pop
add
push
jb
ficomps
mov
cmp
dec
lds
mov
or
adc
mov
inc
leave
pop
lahf
pop
and
jl
sbb
push
cmp
movsl
and
and
lahf
or
or
push
or
sbb
cmpb
movsl
adc
or
add
and
push
dec
push
clc
push
sub
clc
setb
or
jecxz
decl
mov
sub
cmp
setae
lcall
fsubs
fists
mov
push
dec
xor
mov
pop
pop
mov
cmpl
push
add
mov
push
aam
lea
push
je
enter
aad
push
and
push
es
pop
pop
mov
mov
fcmovnu
rol
loopne
or
jecxz
sbb
outsl
stos
mov
xor
push
pop
cmp
and
mov
pop
in
inc
push
adc
sbb
push
js
frstor
push
add
adc
ss
cmp
imul
dec
push
dec
push
and
adc
jg
in
and
mov
sbbb
sub
arpl
cmpsl
jge
sub
add
push
pop
jns
mov
jg
clc
push
ja
movzbl
shr
dec
lcall
pop
jno
jno
lcall
jns
jmp
mulb
fwait
lods
sbb
add
adc
sub
adc
fcoms
add
pop
dec
nop
push
adc
mov
add
xorb
and
cmp
and
adc
testl
inc
xor
arpl
add
add
test
pop
adc
dec
add
enter
sbb
xorl
das
jecxz
xor
push
add
lea
mov
shlb
pop
scas
lret
sbb
lds
and
jo
xchg
mov
inc
push
mov
xor
jg
sbb
add
andl
mov
rorb
or
xchg
rolb
jle
mov
pop
fidivs
jecxz
fwait
dec
add
sti
sahf
add
mov
ds
std
mov
jl
xchg
jne
fs
sbb
push
mov
or
push
scas
lea
sbb
test
in
out
mov
inc
out
stos
and
or
repz
ficoml
push
cli
jo
mov
inc
outsl
or
push
int
or
inc
cmpsl
cmp
or
push
adc
gs
roll
pop
xchg
adc
inc
or
fsubs
int
xorb
dec
add
mov
imul
movsb
mov
lds
aaa
sub
push
sbb
mov
or
leave
es
sar
xchg
shr
mov
je
xor
lret
adc
mov
xchg
pop
pushl
push
push
push
or
and
mov
test
dec
movsb
cmpl
andb
sbb
rorl
out
inc
push
in
sbb
push
xchg
pop
or
or
or
add
cmp
out
or
push
dec
pushf
shll
push
mov
jb
jl
sub
dec
daa
jg
mov
sub
mov
push
test
loopne
sbb
sbb
rcrb
cmp
xor
cmp
and
xchg
add
push
push
outsb
mov
add
pop
andl
loopne
add
cld
insb
cmp
shlb
sahf
nop
mov
inc
or
dec
push
sbb
add
add
xchg
loop
sti
add
add
fcmovnu
int
inc
mov
push
repnz
mov
add
push
fcmove
adc
push
fisttpl
adc
cltd
shll
and
fisttpl
adc
add
xor
mov
cmp
cmp
and
in
outsb
sti
inc
push
add
jne
adc
mov
mov
push
loopne
push
mov
into
mov
fs
pop
call
sub
xchg
insb
mov
fwait
mov
adc
jno
adc
adc
xor
or
add
push
mov
inc
inc
pushf
pushf
or
rcrl
cmpsb
ret
mov
add
mov
loop
in
aas
shlb
xor
ss
es
cmpsl
lcall
mov
test
push
push
nop
orl
jbe
pop
rclb
jo
xchg
add
xchg
and
pop
data16
mov
pop
sub
push
mov
insl
int3
push
enter
and
cmc
pop
mov
in
adc
cld
test
adc
daa
loopne
xchg
pushf
mov
lds
push
mov
xor
mov
out
sbb
sbb
enter
sbb
xor
sbb
call
adc
push
inc
sbb
jnp
js
fists
xchg
clc
imul
lahf
in
insl
mov
and
dec
loopne
push
add
icebp
ret
dec
sbb
insl
push
movsl
or
inc
push
pusha
cld
xor
pop
loope
mov
ss
nop
data16
mov
inc
cmp
xchg
test
xor
test
adc
test
and
and
ja
cs
mov
mov
jb
mov
stos
push
shr
pop
fiadds
or
test
adc
adc
xchg
dec
sbb
fmuls
add
sbb
adc
jb
pop
mov
ja
and
out
ds
add
cmpsb
push
adc
jns
fs
imull
push
int3
add
into
nop
push
std
je
cmp
stc
cmp
mov
jl
push
push
sbbb
mov
dec
or
sub
push
scas
aas
xchg
test
into
movl
inc
or
jge
jne
adc
mov
imul
andps
subl
and
adc
or
pop
mov
or
pusha
pop
mov
xor
sub
jbe
or
push
nop
iret
lahf
add
push
push
lcall
and
inc
cmp
add
add
sahf
sbb
ss
jne
das
scas
in
push
mov
pop
cmp
push
in
xor
jg
sbb
fildll
mov
enter
test
adc
push
stos
dec
sbb
fs
out
add
lcall
roll
mov
or
fdivrl
xlat
std
mov
push
xor
pop
sahf
fs
sbb
loope
icebp
dec
sbb
ss
pmaxsw
imul
mov
shlb
rorb
in
xchg
mov
cmp
push
and
sar
inc
sbb
mov
xor
and
es
or
mov
cmp
cmpsl
push
lret
pop
sbb
push
or
push
add
pop
pop
dec
adc
jbe
mov
ret
inc
cmp
clc
xor
jb
add
mov
sub
push
and
rolb
pop
jne
xlat
pop
hlt
or
add
aad
sbb
mov
sub
push
lods
pop
pop
or
cmc
data16
adc
push
add
jmp
bound
mov
xor
and
add
jmp
inc
sbb
and
repz
jb
and
mov
and
mov
mov
jmp
lret
pop
dec
subl
add
stos
and
test
cmc
nop
and
pop
insl
ljmp
push
mov
loope
mov
or
in
inc
inc
fists
push
xor
pop
sub
xchg
je
and
cltd
xchg
fimuls
test
call
inc
fbstp
lods
stos
xchg
test
push
xor
mov
mov
outsl
dec
cmc
add
int
or
inc
add
arpl
inc
mov
dec
and
ds
adcb
test
ss
inc
push
pop
xchg
and
mov
add
sbb
sbb
in
inc
dec
in
push
jns
cmc
or
push
push
inc
push
push
fwait
cltd
pop
pop
pop
adc
or
mov
dec
jl
loope
sbb
mov
jb
mov
adc
insb
pop
sub
add
push
xchg
push
push
fnsave
std
adc
inc
jb
add
jl
jns
pop
push
push
cmp
repnz
ljmp
test
pop
add
popa
adc
mov
add
in
xor
xor
mov
xchg
cld
lock
xor
pop
movsl
add
push
jb
mov
adcb
shll
add
iret
daa
add
repz
jle
enter
and
push
fs
pop
pusha
pop
and
lds
cmpsl
push
sub
test
cmp
adc
ds
add
pop
add
lahf
inc
movsb
dec
push
mov
movsb
notb
es
cmp
push
jmp
add
icebp
sbb
sub
xor
xor
push
xchg
pop
push
iret
inc
ljmp
cmp
xor
mov
add
call
add
mov
sub
jge
leave
into
in
xchg
push
orl
sbb
insl
dec
jge
push
jge
push
lret
or
or
jne
movl
push
int
and
cmp
es
cmp
jp
sub
inc
loope,pn
add
cmp
cwtl
in
mov
mov
roll
mov
dec
test
or
inc
rcr
add
test
sub
lea
popa
jo
aam
mov
sub
or
sbb
add
jge
xor
ja
cmp
dec
in
mov
shll
rolb
pop
pop
imul
sti
out
adc
sub
shll
and
aad
add
movsb
mov
jae
jmp
stos
and
out
mov
adc
and
add
cli
cmpsb
dec
push
add
mov
mov
mov
dec
ljmp
cmp
push
das
outsb
scas
xchg
ret
mov
cmp
enter
dec
mov
pop
push
xchg
dec
inc
xor
inc
and
or
dec
mov
les
or
jmp
push
push
sub
push
inc
adc
into
inc
push
movsb
and
fidivs
in
cmp
or
xor
loopne
sbb
jno
fs
shll
outsl
sbb
mov
arpl
out
jmp
xchg
addr16
push
into
dec
repz
xchg
fcoml
cs
xchg
add
cmp
cmp
test
mov
fwait
push
shlb
mov
call
xchg
icebp
inc
pop
mov
pusha
adc
lahf
insl
cli
or
and
fs
add
sbb
test
push
fdivrl
pop
out
fs
lea
enter
fimull
inc
out
sub
shr
jg
imul
iret
test
or
sub
test
or
dec
popa
lods
mov
int3
repz
add
push
test
arpl
or
pop
jnp
pop
mov
xor
fs
adc
adc
jb
mov
jl
add
dec
push
into
ja
push
sbb
notl
and
aaa
or
add
lds
inc
jb
xlat
push
stos
pusha
cmpb
push
inc
mov
fists
push
mov
mov
hlt
adc
add
pop
fisubrs
or
sub
and
xchg
pop
pop
mov
out
je
sar
test
aaa
mov
nop
add
adc
xor
push
add
add
mov
pop
sti
jno
sbb
xchg
xchg
push
sahf
sub
adc
pop
jns
and
lea
push
push
xchg
jl
or
sub
dec
orl
and
xor
sbb
xlat
xlat
adc
adc
popa
or
mov
mov
sub
xchg
pop
enter
sub
pusha
dec
ds
adc
sub
dec
push
push
or
jo
add
or
and
push
and
enter
jns
leave
add
mov
and
and
rorl
add
loop
mov
js
js
das
cwtl
push
adc
pushf
and
jno
sub
adc
popa
es
mov
adc
jo
cwtl
loopne
sahf
inc
add
fldenv
sarl
xorl
inc
mov
jbe
or
enter
add
mov
xchg
pop
pop
outsb
pop
pop
jl
std
pop
enter
push
mov
cmp
xchg
mov
andl
popa
popf
inc
dec
ds
add
sti
js
pop
xor
outsl
xor
mov
cld
aam
sbb
add
dec
jge
xchg
dec
and
and
nop
jbe
mov
push
jbe
das
sub
lcall
les
clc
adc
mov
dec
leave
leave
add
and
cmp
roll
iret
insl
xchg
push
sbb
in
mov
mov
push
push
int3
lods
adc
fisttps
insb
and
leave
jmp
ja
push
sub
push
cmp
cltd
cwtl
jb
lea
setne
adc
out
cmp
add
add
mov
xchg
dec
cs
push
lea
fistpl
jne
jecxz
ret
adc
and
or
pop
pop
and
or
not
pop
rorl
test
bound
and
cmp
daa
lea
sub
sbb
into
mov
int3
aam
push
jecxz
out
pop
rolb
inc
fidivrs
adc
jmp
xor
adc
push
and
jle
or
sbb
cmp
jmp
je
mov
mov
jg
xchg
inc
push
stos
or
xchg
test
inc
stos
popa
pop
sub
into
and
mov
subb
inc
and
pop
add
push
scas
pop
je
lret
xchg
stos
inc
ret
fwait
add
sahf
enter
mov
mov
es
push
sub
push
mov
arpl
pop
test
push
fsts
xor
dec
mov
sub
repz
mov
push
and
jb
inc
mov
pop
js,pt
and
leave
xor
adc
sub
lret
dec
in
outsl
add
and
jnp
jne
out
adc
jb
enter
shr
in
add
lahf
fisubrl
and
clc
and
or
jge
mov
jecxz
fsubrs
lcall
lahf
mov
sub
ret
jge
and
sahf
jle
jg
jno
sub
or
or
or
sbb
clc
dec
lods
js
push
popl
int
pop
cltd
xor
pop
jne
insb
popf
add
xor
add
push
jns
andb
jmp
xchg
add
jl
cmp
push
push
dec
insl
shlb
cmp
inc
cmpsb
in
sbb
fwait
mov
dec
push
mov
and
sub
into
hlt
or
xor
aaa
jno
mov
and
or
testl
inc
and
xchg
cmp
lea
addb
mov
mov
loop
out
push
cmp
in
mov
sub
adc
sbb
jno
or
test
test
or
test
mov
inc
sbb
inc
xchg
and
jmp
xor
cmpsl
aas
adc
jecxz,pt
leave
xor
and
movsb
or
jle
inc
push
ficoml
dec
imul
inc
mov
les
mov
cmp
sbb
pusha
cmp
push
int3
mov
adc
mov
mov
pusha
add
aas
jno
dec
and
jnp
adcb
mov
cmc
insb
inc
addr16
sbb
inc
sti
or
jecxz
xor
movsb
mov
or
fstl
in
sub
pop
jo
add
mov
mov
pushf
movsb
or
js
sbb
mov
add
shlb
push
shlb
aam
add
xlat
jecxz,pn
sbb
ret
and
adc
loopne
cmp
jle
mov
add
xor
call
mov
or
mov
push
push
add
add
add
inc
fwait
lret
dec
pop
hlt
jg
xor
mov
push
adc
jae
pop
and
mov
cmpl
cmc
mov
mov
test
sub
pusha
loopne
idiv
data16
inc
jb
or
pusha
pop
pusha
ja
mov
loopne
stos
sbb
scas
mov
jp
jle
aas
js
fsubs
sbb
orl
jg
cld
lea
sub
mov
lock
das
jle
mov
fimuls
add
adc
add
aas
xor
add
int
xor
mov
shl
mov
mov
subl
dec
movsb
adc
xor
rorb
jp
mov
bound
cmpxchg
mov
xchg
xchg
xrelease
ljmp
pusha
pop
mov
or
push
lea
outsl
mov
jmp
aas
add
into
daa
push
sub
or
cmpsb
in
test
loopne
adc
stos
or
repz
adc
je
sbb
sbb
add
ds
or
mov
and
andl
mov
stos
adc
jbe
pop
and
dec
inc
mov
sub
sbb
stos
and
jecxz
js
add
dec
fsubr
or
add
push
cmp
loope
mov
jns
jb
mov
mov
gs
fisttps
cmp
add
scas
addb
ret
je
push
jle
adc
test
push
aas
push
push
idivb
cld
insb
jmp
mov
cmp
test
push
enter
push
xchg
jmp
ret
rolb
movsb
cmp
add
fldl
push
mov
jbe
adc
pop
adc
push
push
sub
loop
xchg
dec
sub
and
and
inc
test
adc
je
push
jmp
loope
mov
clc
add
fdivs
jne
xor
pop
cld
xchg
inc
add
jns
js
sete
aam
inc
scas
jle
push
push
sbb
pop
out
ficompl
test
or
dec
and
pushf
add
mov
inc
xchg
ss
adc
sbb
rorl
test
jle
sub
adc
and
lock
mov
mov
sbb
incl
sub
subl
mov
sub
or
outsl
popa
push
nop
addb
xor
ret
or
xchg
dec
add
imul
mov
aas
xor
add
test
test
mov
out
aaa
pop
push
aad
inc
fwait
push
or
dec
dec
iret
scas
and
xor
fdivs
int3
out
and
out
jno
jbe
lcall
push
leave
push
mov
insb
xor
add
mov
push
cmp
pop
and
or
ja
sub
adc
in
mov
or
mov
orl
adcl
xchg
push
hlt
add
popf
shrb
sub
cmp
bound
sub
mov
lock
jns
dec
lock
jle
jl
adc
and
xchg
fsubs
xchg
nop
and
sub
cmp
sbb
into
andl
les
sub
mov
mov
and
sub
cmp
pusha
sbb
sar
test
and
test
or
ss
jo
jbe
or
push
sbb
sbb
pop
or
sub
fwait
dec
xchg
push
push
inc
mov
adc
je
cmp
push
add
sbb
inc
sub
xor
clc
test
add
subb
or
lock
not
and
cs
aaa
push
and
add
in
sub
push
and
xor
stos
call
or
lret
cwtl
cmp
jns
lahf
scas
push
loopne
nop
xchg
mov
and
fisttpl
pop
stc
inc
push
push
repnz
icebp
fsubrl
and
sub
sub
pop
fdivl
push
leave
xchg
inc
lock
sbb
sbb
adc
popa
icebp
or
adc
jle
lock
mov
aas
adc
push
xor
cli
mov
xor
cmp
pop
inc
pop
mov
push
outsl
or
sbb
push
or
testl
dec
or
fmuls
divb
mov
mov
loope
fcoml
push
lcall
dec
and
jne
fnstsw
xor
cmp
dec
sub
add
mov
jbe
mov
sbb
sbb
mov
dec
stc
mov
int3
rcr
add
ret
xor
pop
int
xchg
sbb
mov
jo
out
xchg
cmp
out
aad
mov
or
pop
push
loope
xchg
mov
test
je,pn
push
mov
xor
incl
rol
popa
dec
dec
mov
jle
mov
add
inc
or
or
or
mov
jg
mov
shll
xor
hlt
cmp
jne
jl
test
cld
repnz
ja
bnd
push
push
push
dec
out
push
cmp
adc
aaa
mov
loope
aaa
testl
rclb
cmpb
lahf
sar
adc
xchg
sub
mov
ds
sbb
jae
movsb
pop
pop
cld
mov
adc
jbe
incl
add
sub
or
lea
jge
push
push
push
sub
xchg
xor
cmp
pushf
inc
push
add
ds
push
cli
int3
bound
sub
cmp
sub
arpl
mov
jne
mov
xor
mov
sbb
inc
clc
jg
mov
sbb
xchg
and
cmpsl
arpl
and
mov
fidivl
out
out
mov
mov
dec
jb
ss
and
or
sbb
mov
and
xchg
xor
sub
jb
pop
sbb
lds
sbb
dec
cmpsl
add
aam
sar
fwait
sbb
ja
ja
xor
je
test
cmp
mov
fcompl
cmp
push
fsubr
push
push
mov
sub
add
sbb
inc
mov
fucomi
cmp
add
cmp
push
add
push
mov
xchg
or
pop
imul
cmp
jge
add
jp
push
add
add
sbb
ss
jl
xchg
pop
push
movl
add
in
mov
enter
inc
sbb
pop
push
es
sbbb
outsl
bts
jae
push
sahf
jl
mov
cmpsl
or
pop
push
jg
push
add
push
repz
mov
ret
enter
cmp
in
bound
cld
sub
orb
dec
add
fucomp
adc
test
or
ret
cld
loopne
mov
mov
hlt
sub
nop
loope
push
push
test
xorb
push
adc
ds
jbe
inc
sub
popa
sub
mov
push
dec
add
cmp
fisttpl
pop
repnz
hlt
insb
shl
outsb
and
hlt
push
adc
adc
outsl
sub
add
ret
jg
addl
cmp
mov
xchg
or
or
or
leave
outsl
lods
gs
dec
and
mov
cwtl
btr
mov
push
jae
decl
loope
or
dec
inc
or
mov
inc
insl
inc
jle
pop
pop
addb
mov
ret
aas
cmp
loopne
inc
jle
js
add
or
call
push
jb
test
iret
outsb
insl
and
adc
push
and
scas
xor
pusha
dec
cmp
cwtl
fsubs
pop
push
adc
cld
movsb
test
add
and
push
adc
ljmp
test
daa
mov
and
or
or
call
test
add
lds
push
jnp
jl
or
jle
add
xorb
testl
imulb
lock
loop
iret
pop
popa
arpl
pop
xorl
sbb
or
jge
lret
push
orb
je
pop
inc
clc
add
iret
push
add
lea
mov
mov
add
pop
fs
pop
cltd
or
push
push
mov
and
outsb
cmp
or
add
sbb
lret
pop
test
jne
cmp
lods
popf
push
dec
faddp
leave
insb
pop
mov
inc
xorb
jae
fsincos
push
lea
mov
sbb
mov
mov
pop
pop
inc
cmpsl
inc
mov
mov
pop
pop
mov
jmp
jl
add
ret
sarb
add
mov
mov
aas
outsb
aas
mov
xchg
mov
lea
cltd
and
in
add
sub
jmp
add
adc
inc
jae
add
sub
fs
clc
test
adc
inc
add
add
loop
mov
cld
stos
incl
inc
inc
aaa
movsb
pop
pop
sbb
push
add
or
mov
pop
pop
mov
stos
jb
add
sub
and
xor
insb
push
andl
sbb
test
or
cmp
push
jns
pop
mov
xor
pop
lods
jns
arpl
hlt
or
mov
xchg
pop
push
push
jo
cmc
xor
test
arpl
xor
xor
and
ret
mov
inc
clc
add
xchg
shll
ss
sub
movsl
cmpsl
lret
andl
push
iret
xor
test
dec
ret
xor
mov
pshufw
sub
popl
negl
roll
push
mov
adc
sbb
xor
add
add
ljmp
mov
xor
sub
in
jmp
sub
jne
jmp
rcrl
lahf
mov
and
xchg
ss
in
push
mov
test
xchg
cmp
xor
cmp
insl
and
cmp
push
dec
jmp
push
xchg
and
sbb
mov
and
inc
push
mov
jmp
dec
adc
push
mov
xor
dec
add
push
xchg
sbb
or
dec
xchg
push
scas
or
imul
dec
xchg
xchg
pop
and
test
sub
push
cmp
mov
repz
popa
inc
mov
js
incl
fmul
in
shll
xor
js
push
sbb
jl
addr16
dec
js
push
ds
xchg
aad
rorb
dec
das
pop
adc
and
xchg
xchg
fidivrs
add
sbb
xor
ret
pop
sti
je
jge
cmp
mov
es
ljmp
xchg
into
add
sbb
hlt
or
pop
dec
cmp
add
sbb
and
mov
out
movsb
setle
xor
xchg
cmp
fldenv
int3
and
jmp
out
or
sub
xor
out
and
add
je
add
out
sub
xor
mov
jne
xchg
or
cmp
add
aas
mov
lds
adc
push
fidivrs
push
mov
andb
pop
pop
rcll
pop
jo
pop
pop
or
and
sub
jo
cmp
or
lret
inc
pusha
in
jecxz
mov
lcall
jne
sti
sub
cli
and
push
adc
stos
loopne
sub
push
cltd
int
test
sbb
sub
pusha
aad
dec
jne
push
cmp
mov
push
in
inc
or
adc
jecxz
arpl
sbb
jne
pop
jle
pop
jne
ret
nop
push
or
fdivrs
and
add
iret
pop
sbb
push
push
add
xchg
lahf
or
stc
sarl
push
add
jl
push
push
and
sahf
push
sbb
cmp
add
and
out
test
sub
lods
push
popa
stc
adc
add
movsb
cmpb
jb
adc
sbb
inc
stos
and
rorl
jns
sbb
add
aaa
adcl
adc
jo
push
jl
sub
decl
jne
and
adcl
add
fstpt
push
test
stos
je
jb
xchg
add
xor
sbb
push
push
push
and
dec
dec
sbb
mov
xor
push
bound
mov
xchg
dec
inc
and
add
sub
pop
outsb
push
sub
je
maxps
mov
push
cltd
dec
dec
ret
rclb
xorb
mov
and
test
jnp
mov
mov
popa
push
jecxz
or
mov
push
adc
dec
jp
fsubrs
cltd
sbbl
leave
add
add
or
adc
xchg
adc
cmpsl
call
test
push
push
pop
dec
mov
xchg
dec
pop
push
add
int
jecxz
sbb
inc
sbb
popf
pushf
or
mov
add
inc
add
cmp
add
shr
dec
popa
xor
stos
mov
roll
fmull
xor
xor
push
mov
jl
lock
into
xor
mov
iret
jge
and
mov
insl
outsl
push
sub
sti
out
dec
add
push
and
push
mov
mov
int
loop
mov
test
push
inc
and
jecxz
stos
pop
add
push
fisubl
fisubs
ret
aad
and
scas
add
jl
std
dec
pop
mov
mov
js
xor
sbb
rcr
pop
inc
or
sbb
pop
adc
rorl
les
or
ja
clc
scas
or
je
dec
in
mov
pop
inc
nop
cmpsl
cmp
or
adc
push
dec
or
adc
mov
sbb
sbb
movsb
pop
push
xchg
xlat
xlat
std
xor
push
jno
les
inc
imul
mov
add
or
push
movsb
adc
push
push
ret
aas
adc
or
daa
mov
lahf
or
adc
or
sub
or
ret
mov
rolb
or
or
or
movsl
and
sbb
adc
xor
dec
inc
xchg
test
fldz
fisttpl
test
cmc
jnp
out
add
xor
pop
cmp
jb
pop
pop
js
addl
push
push
movsl
jecxz
mov
cmp
push
push
inc
sub
add
or
push
mov
mov
pop
add
jl
insl
add
jb
mov
fdivr
rorl
sub
imul
add
in
add
pop
sbb
movsl
xor
hlt
mov
clc
sub
or
jge
lret
fidivl
jo
or
push
push
sub
cmp
sahf
mov
push
push
and
push
cmp
or
bound
mov
sub
sub
lea
add
pop
push
and
sub
push
push
push
mov
add
push
push
push
push
test
outsb
test
xchg
push
add
add
push
movb
mov
rol
xor
mov
cmp
lds
loop
and
arpl
fldl
outsl
push
iret
js,pn
jg
ja
js
or
fwait
sbb
xchg
pushf
es
push
lcall
or
pusha
nop
orl
add
fisubs
and
pop
push
sbb
dec
jno
loop
gs
lcall
in
mov
pop
inc
rcl
jle
inc
push
push
stc
push
sbb
add
pop
push
jge
mov
jnp
dec
sub
mov
out
push
rorl
ret
pop
sub
cmp
adc
or
adc
pop
add
cmp
je
arpl
sub
push
xor
stos
push
push
xor
out
dec
mov
jo
sbb
or
add
add
add
mov
dec
inc
add
cld
pop
adc
jg
add
add
xlat
stos
inc
inc
sbb
sub
add
cmp
push
push
iret
adc
call
xchg
fcoms
inc
jnp
pushf
subps
inc
cmp
adc
lock
mov
xor
xchg
jecxz
and
or
insl
movsl
dec
sub
push
es
push
test
lds
pop
mov
add
inc
in
loope
js
sbb
insb
shl
push
jne
mov
jge
ret
jae
inc
inc
jl
mov
pop
das
rolb
ret
in
popa
shrb
in
or
adc
pop
adc
adc
push
cmp
clc
cmp
push
mov
cmp
je
push
sahf
mov
mov
mov
pop
les
clc
je
dec
mov
pop
sbb
cwtl
or
inc
lcall
dec
jnp
push
xlat
jge
in
cmp
sbb
sbb
or
mov
push
mov
sbb
inc
daa
push
les
pop
jge
push
enter
sbb
inc
cld
xor
iret
repz
xor
cmp
add
test
enter
jmp
sbb
enter
lea
out
fiadds
fnsave
je
xor
push
cmp
push
xor
sub
xor
and
ficoml
mov
pop
mov
rclb
ret
push
add
or
fs
leave
call
add
pop
push
lods
sub
push
add
adc
in
loopne
add
or
call
add
jns
pop
cmc
clc
lock
push
pop
inc
sbb
sub
sub
es
dec
cmp
pop
push
or
push
dec
addr16
sbb
les
lret
pushf
cmp
ret
lahf
sbb
cmpsb
std
loop
mov
stos
or
shrb
or
adc
jmp
in
add
push
push
imul
aas
cmp
inc
clc
xor
push
addb
add
gs
pop
or
cmp
ret
popa
sub
cmp
data16
ret
mov
testb
dec
lock
xor
cmp
sbb
push
cwtl
jo
inc
aam
lods
or
xchg
in
push
repz
cld
cs
je
jnp
cmp
jae
call
aaa
ret
cmp
les
mov
popf
add
mov
pop
lea
pop
aam
insb
popa
push
rcrl
jl
mov
cmp
and
pop
inc
and
cmp
pushf
or
sub
imul
fdivrl
sub
push
sub
sbb
push
cmpsl
push
and
movl
jge
test
and
movb
in
add
dec
imul
loope
rorl
pop
and
inc
or
or
xor
jns
sub
ljmp
lea
jne
push
push
push
adc
inc
adc
mov
mov
push
push
out
leave
add
xchg
jmp
lds
hlt
push
pop
add
sbb
jae
movsb
cli
pop
add
xchg
pop
sahf
call
mov
cmp
xlat
testl
xchg
repz
and
sub
ja
mov
add
pop
add
and
mov
sbbb
ror
ret
movsb
fs
xor
adc
inc
adc
hlt
xchg
outsb
mov
mov
movzbl
ja
adc
inc
rcr
movl
stc
and
or
neg
dec
mov
ss
push
add
in
lods
mov
add
daa
dec
and
pop
aas
add
xor
clc
pop
ja
and
mov
adc
push
mov
lods
cmp
mov
jns
ret
into
fcmovbe
mov
xlat
jne
add
repz
xorl
int
or
mov
mov
or
push
outsb
xor
cs
das
je
pop
jne
je
ret
jle
je
or
jne
mov
inc
je
adc
adc
mov
lea
dec
cs
sahf
int
aaa
inc
inc
clc
xchg
pop
decl
cmp
or
mov
sub
cmpb
call
xchg
aad
or
inc
cmp
jbe
lea
mov
inc
add
sub
inc
jmp
add
and
xor
test
cmp
add
push
xchg
sub
cmp
sub
dec
lcall
not
out
pop
loop
inc
push
mov
mov
test
sarb
adc
and
shlb
fdivrs
cmp
gs
cmp
xor
jns
or
rorb
sub
movsb
cmp
fildll
adc
adcb
ret
dec
push
sub
inc
mov
mov
sub
shl
incl
adc
sbb
pop
mov
and
mov
movsb
adc
push
das
enter
mov
cli
and
or
test
adc
lods
outsb
cli
inc
cmp
jb
cmp
ja
outsw
fdivrp
fistps
shlb
xor
sub
cmp
ja
and
ljmp
clc
ret
cmp
xor
add
cmp
pop
push
cmp
sbb
outsb
mov
mov
mov
add
mov
fwait
mov
cs
sub
ret
sbb
jg
fsubr
push
cwtl
aas
xor
and
sbb
adc
and
leave
add
mov
je
outsb
push
add
stos
jne
ret
push
neg
or
test
mov
and
incl
jae
mov
jmp
push
pusha
aas
push
ret
adc
jo
jne
adc
dec
test
or
dec
call
mov
orb
add
xchg
jmp
test
xchg
xchg
lret
cmp
pop
adc
adc
add
adc
cld
out
sbb
and
test
adc
je
test
jne
sub
cmpsl
inc
into
sub
jb
or
dec
lock
dec
cmp
and
repnz
adc
movb
inc
ss
pop
or
rcll
and
inc
add
scas
inc
fldl
jnp
pop
mov
inc
and
push
inc
outsb
and
pop
adc
add
insl
lods
out
dec
cmp
in
xor
jmp
jne
push
jae
fisubrs
pop
jbe
push
pop
loope
mov
ja
ret
lahf
cmp
mov
popa
es
inc
repnz
push
dec
loop
js
cmp
jecxz
jl
addr16
mov
lret
lods
cmp
cmp
ret
es
mov
mov
pop
aas
sub
push
jbe
sahf
add
xorb
sbb
xchg
shrl
ljmp
sar
and
repz
cmpl
sub
je
scas
aam
push
das
mov
xor
or
mov
or
push
xor
mov
cmp
in
imul
pop
push
jbe
cs
fs
dec
out
add
add
mov
jg
test
fcoms
sub
insl
and
sub
rcrb
adc
aam
dec
les
mov
lods
testl
mov
sub
add
sub
cmc
icebp
and
or
mov
movsl
out
cmp
je
cmp
je
xchg
jae
jecxz
js
in
add
es
out
sub
and
and
sbb
sub
jb
pop
jmp
adc
in
push
xor
decl
xor
mov
add
aas
mov
sbb
mov
adc
pop
add
cmp
xchg
testb
xchg
add
inc
shrl
inc
paddsw
mov
add
addr16
pop
leave
mov
push
fmuls
xchg
fisttpl
xchg
jmp
dec
rorl
xchg
test
shrl
push
sti
cmp
je
push
rcll
xor
pop
mov
push
add
jae
repz
and
mov
in
mov
inc
fnsave
fists
idivb
xchg
ret
push
jb
add
inc
cmp
jb
mov
xor
pushf
cmc
push
jb
mov
das
add
or
push
jne
pop
pushf
cmp
je
lea
mov
clc
adc
dec
mov
mov
into
repnz
cltd
jecxz
sub
lahf
mov
and
movb
sti
mov
jb
mov
mov
or
inc
int
lea
jnp
nop
mov
adc
ficoml
les
lods
jmp
push
cmp
or
push
adc
adc
hlt
inc
push
divl
push
lea
inc
xchg
mov
ficompl
addl
mov
xchg
inc
movsl
xor
inc
mov
jb
mov
shlb
mov
xchg
jne
fstl
in
repnz
lea
fs
ds
or
xchg
pop
add
cmp
inc
dec
mov
and
or
sahf
mov
xor
lods
mov
mov
ss
nop
sti
sbb
push
ret
data16
mov
and
mov
xor
and
aam
cli
add
ret
mov
lahf
xchg
cwtl
in
inc
inc
dec
cld
sub
in
xchg
adc
cwtl
dec
cld
out
push
mov
mov
xor
mov
mov
nop
movsl
jno
pop
cmpsb
jg
jge
pop
cmp
cwtl
cmp
jne
adc
gs
movb
ret
cli
jne
mov
adc
fistpll
roll
mov
push
pop
stos
mov
cmp
jne
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
xlat
inc
mov
ret
cmp
add
mov
add
sbbb
test
jmp
push
add
adc
shlb
cmp
je
ficoml
cmp
fdivs
add
inc
inc
jne
pop
dec
fst
pop
movb
cmp
outsl
insb
mov
das
xchg
orb
sub
rorl
pop
cmpsb
loope
inc
xor
fstps
out
ljmp
xchg
cld
leave
and
mov
mov
and
jns
fiadds
jle
push
mov
and
das
clc
call
pop
mov
push
push
xchg
push
mov
xor
add
loopne
mov
jmp
lock
cmp
je
cmpb
add
lea
pop
jne
pusha
sbb
arpl
gs
cmp
addl
inc
inc
inc
inc
inc
xchg
js
rorl
popf
mov
jbe
sub
addr16
test
cs
sub
xchg
or
lock
scas
call
adc
sub
call
out
mov
inc
sub
cmp
or
mov
loopne
inc
lret
inc
mov
int
aam
mov
mov
sarl
pop
or
rorb
jnp
sbb
push
xchg
and
in
cmp
adc
movsb
inc
mov
mov
lret
ret
or
test
inc
and
push
test
push
jo
jmp
insb
xchg
enter
sti
sub
je
or
je
push
pop
jne
test
aad
shr
sbb
rorb
pop
not
adc
sub
xor
dec
lcall
outsb
mov
and
dec
fldt
sub
xor
aas
xchg
lret
cmp
inc
mov
mov
mov
rorl
and
sbb
sbb
aam
ss
push
sub
lea
sbb
adc
testb
xor
jne
mov
dec
and
mov
push
lea
xchg
xchg
loop
inc
and
or
pop
test
sub
mov
lret
lds
xchg
lret
in
inc
xor
cmp
pop
mov
cs
hlt
jb
mov
adc
jmp
and
sbb
jmp
mov
imul
test
ret
in
sub
mov
or
jo
push
sbbb
dec
cmp
push
push
mov
push
fldt
jae
and
dec
dec
or
push
sbbb
mov
and
fisubrl
push
pop
push
push
popf
adcb
pop
addr16
push
or
sub
dec
add
push
and
fimuls
push
or
fistpl
ret
lahf
adc
cs
pop
add
imul
push
push
xchg
mov
xor
mov
push
push
push
cmp
dec
sub
cltd
fmuls
pushf
inc
insb
sub
pop
or
imul
mov
sbb
jl
mov
add
je
push
add
mov
add
data16
push
push
xlat
cmp
or
push
jb
adc
cmp
and
movsl
in
call
fcmovb
xor
sbb
or
stc
push
sbb
int3
mov
je
dec
in
jle
mov
pop
js
xor
xor
push
ds
daa
xor
in
sub
mov
jbe
xor
xchg
or
and
mov
sbb
jo
decl
rorb
add
nop
shrb
hlt
leave
in
add
hlt
pushf
or
rol
pop
xor
cmp
inc
dec
data16
xor
jnp
inc
lock
add
adc
les
xor
adc
cmp
je
lds
inc
pusha
shrb
pop
push
and
and
aas
sub
jle
ret
dec
xchg
or
push
pushf
pop
xchg
popa
lock
mov
test
or
xbegin
cmp
dec
rclb
xchg
les
adc
scas
sbb
sub
dec
jmp
jno
outsl
test
push
sub
js
add
inc
fldt
sub
and
lret
mov
out
lods
rcll
ljmp
into
fimull
add
cli
mov
cmp
mov
mov
push
lea
push
popf
and
loopne
shl
mov
push
cmpsl
adc
andl
ljmp
lock
in
inc
ljmp
adc
pop
adc
cltd
insb
into
xor
sbb
jb
in
push
jle
in
cmp
stos
sbb
in
push
dec
pop
mov
in
xchg
and
and
adc
cmpsb
xor
add
je
mov
jne
xor
or
push
pusha
cmp
cwtl
push
and
iret
fs
lret
add
int3
sub
out
jecxz
movsb
popa
push
add
sbb
add
jo
cmp
jl
adc
pop
xor
bound
and
aaa
stos
dec
cmp
cmp
jmp
adc
pusha
xlat
dec
fisttpl
inc
dec
or
xlat
push
cmpsb
or
push
adc
dec
dec
pushf
and
jnp,pt
clc
push
cmp
add
adc
push
fsubrl
and
pusha
roll
pop
ret
xor
dec
jg
add
and
out
mov
bound
push
sub
or
loope
scas
movl
movsb
mov
xor
push
adc
dec
sbb
insb
lcall
and
sub
inc
inc
ljmp
xchg
and
add
sbb
repz
movl
or
mov
lahf
adc
in
push
add
mull
test
inc
sub
jg
push
pop
push
or
or
push
in
adc
push
jb
adc
lods
cs
mov
hlt
repz
outsl
or
inc
cli
mov
loopne
in
insl
jl
hlt
and
xor
or
rcrb
shrl
mov
int
pop
dec
into
fwait
xchg
xor
xor
xor
sub
rcll
or
fdivl
sub
fwait
xchg
push
cmpsb
or
or
jecxz
in
out
pop
add
inc
inc
jnp
loopne
push
in
sbb
push
imul
in
icebp
pop
mov
add
adc
sub
lea
mov
or
and
sahf
jnp
pop
lods
jg
inc
js
xchg
and
stos
xchg
pop
int
adc
js
jmp
lods
and
test
push
jae
and
sbb
mov
clc
push
push
pop
or
test
sbb
or
out
jae
out
rolb
xchg
mov
xor
lahf
sub
int3
and
loope
mov
and
rolb
xor
clc
sbb
pop
loopne
les
and
mov
enter
pop
mov
add
push
jmp
fwait
movsl
shll
rcl
int3
or
xlat
push
mov
add
lock
aad
test
add
leave
cmovae
or
ljmp
jecxz
rcrl
outsl
movsl
lea
mov
iret
sbb
test
sti
pop
mov
or
pop
add
ret
clc
sar
lods
mov
xchg
inc
ja
cmpsl
add
pop
mov
xor
xchg
add
mov
xor
adc
adc
pop
cmp
mov
loopne
clc
cmpsb
sarl
inc
cmp
stos
add
mov
nop
shlb
pop
add
inc
and
je
add
mov
les
or
push
or
mov
xor
pop
sarb
adc
adc
movsb
adcb
ret
xchg
dec
ret
call
imul
jae
arpl
sbb
bswap
les
jno
dec
xlat
or
push
cmp
imul
dec
xor
sbb
lods
jp
jl
inc
pop
sub
mov
sbb
cmp
sub
xchg
xor
inc
mov
lahf
add
inc
and
loope
adc
out
adc
mov
or
add
xor
test
icebp
sbb
mov
and
adc
dec
add
aaa
mov
mov
ljmp
fnstenv
mov
iret
insb
cmp
sbb
adc
je
and
movsl
or
xor
mov
out
add
or
mov
mull
aam
push
addr16
dec
or
jbe
sbb
and
or
xlat
sub
fldl
mov
pop
sete
repnz
pusha
xchg
data16
lock
mov
xor
pusha
fsubrl
push
add
or
inc
ficoms
mov
imul
mov
es
roll
je
cmp
or
jbe
mov
jge
je
add
cmc
fwait
outsb
and
pop
sub
sub
outsl
rclb
movsb
dec
lods
push
into
mov
int3
xchg
push
es
out
in
ret
cltd
mov
pushf
clc
inc
sbb
iret
sahf
add
inc
push
add
mov
and
cmpb
mov
or
outsb
cmp
fmull
push
icebp
enter
jns
addb
leave
push
test
and
dec
es
or
pop
or
adc
fs
cmp
scas
stos
gs
xor
xor
sbb
out
xor
adc
push
adc
push
dec
adc
inc
xchg
icebp
ja
xor
add
mov
stc
dec
xchg
icebp
lret
nop
pushf
andl
mov
push
inc
popf
lahf
xor
sub
mov
sbb
inc
dec
or
data16
nop
inc
xchg
adc
and
or
sar
inc
push
pop
xchg
add
sub
iret
add
movsb
inc
and
adc
es
xor
add
push
mov
adc
or
in
negb
inc
mov
add
push
sbb
sub
iret
repz
jo
cmpsl
and
sbb
arpl
nop
stos
rcrl
sbb
and
cmp
dec
mov
or
ljmp
xchg
xor
sbb
sbb
stc
enter
mov
leave
add
pop
cs
and
sbb
xchg
fcoml
push
sbb
repnz
or
pusha
push
xchg
aad
jb
and
jae
xcrypt-cfb
cmpsl
bound
jmp
cmpsl
add
sbbl
push
pop
jns
sbb
adc
push
cmp
xor
mov
jmp
jns
inc
and
in
jno
fsubs
ret
and
cmp
pop
push
fs
jo
lahf
cmp
mov
push
inc
jne
dec
or
or
sbb
shlb
ret
nop
fisttps
xor
and
cmp
sbb
and
jnp
shll
inc
sbb
mov
push
sbb
out
in
cs
and
jo
xor
mov
xor
add
mov
movsb
mov
pop
jge
in
pushf
xor
cmp
pop
sete
and
fnstsw
pop
ljmp
push
lcall
inc
sub
cmp
jmp
rorb
std
cld
xchg
sbb
sbb
jmp
cmpsl
dec
sbb
or
mov
imul
dec
mov
sbb
jb
lret
and
or
insl
or
cmp
pop
xor
popa
sub
test
leave
sub
mov
rorl
stc
out
sub
sbb
icebp
stc
out
add
push
leave
sub
pop
mov
cli
push
jle
aad
dec
add
or
and
orb
in
popa
mov
jno
mov
add
sbb
test
add
lock
push
push
cmpsl
add
push
mov
dec
js
mov
mov
push
test
lock
add
dec
push
add
in
dec
inc
jo,pt
sub
and
jle
ret
dec
add
outsb
or
dec
ja
sub
lds
jb
mov
sbb
lods
xchg
and
cmpl
imul
insb
and
fidivrl
orl
sbb
shll
xor
xor
or
and
dec
fildll
pop
test
add
sub
fcmovnu
loopne
cmp
mov
push
inc
fmull
xor
lcall
pop
push
and
jmp
js
fdivl
fidivrl
push
jl
inc
dec
adc
out
mov
mul
add
pushf
dec
jl
or
xor
cmp
sbb
pusha
jecxz
push
je
lock
mov
push
les
popa
push
pop
ljmp
loopne
xor
dec
and
mov
sbb
decl
imul
inc
fs
push
add
popa
xor
jnp
popa
push
lock
mov
loop
es
pop
cs
mov
mov
rclb
adcb
clc
imul
push
mov
dec
cmpl
rcr
sub
icebp
jnp
sbb
pop
cmp
je
out
sahf
sub
adc
sbb
xchg
xchg
dec
sbb
sbb
xor
dec
xchg
mov
ret
mov
inc
es
das
nop
xchg
push
cmp
xchg
ret
mov
inc
mov
fwait
test
mov
and
and
out
adc
push
pop
mov
jno
cmpsl
nop
ss
idivl
enter
pop
nop
and
inc
dec
push
fdivs
test
cmp
xor
push
add
pop
mov
mov
mov
cltd
imul
js
jbe
fwait
clc
insb
mov
std
inc
in
push
adc
push
rcr
rcrb
or
fcoms
inc
int
call
xor
push
add
xchg
loopne
mov
in
sbb
adc
js
push
outsl
les
sbbb
mov
inc
pop
cmp
sub
or
push
lods
pop
ljmp
movsl
inc
push
mov
mov
and
mov
cmp
repnz
mov
adc
pop
dec
inc
popa
push
pop
cmp
shll
mov
rolb
and
stc
sbb
pusha
inc
or
mov
push
push
das
sbb
sub
nop
mov
sbb
arpl
mov
add
and
push
fwait
icebp
cmpsl
dec
push
or
push
xor
xchg
orl
cmp
add
or
xor
xchg
hlt
mov
js,pn
bound
icebp
inc
xchg
lea
lock
xchg
add
ret
add
sbb
imul
push
push
stc
stos
pusha
jmp
ja
mov
push
pop
dec
xchg
cmp
jmp
or
daa
sbb
sub
add
mov
or
pop
je
mov
lret
and
fwait
and
ret
pop
dec
or
dec
or
sub
inc
pusha
in
aad
add
int3
hlt
call
inc
mov
adc
inc
loopne
fldt
adc
push
adc
insb
inc
inc
scas
pop
cltd
stos
data16
add
pushf
out
jns
or
dec
sahf
mov
sahf
mov
add
mov
inc
es
imul
and
test
inc
mov
cmp
mov
and
xor
mov
int
jae
mov
lcall
or
xor
js
lahf
cmp
xchg
cmp
call
or
sbb
cs
add
cmp
xor
inc
sbb
and
insl
fs
adc
mov
pop
xor
inc
push
mov
mov
add
xchg
adc
push
scas
or
add
sub
dec
insl
jl
sub
movsl
jo
pop
cwtl
test
jne
dec
xor
or
dec
test
les
icebp
loopne
lcall
adc
bound
and
es
xchg
or
pop
push
add
push
cwtl
xlat
sbb
jb
pop
pop
aad
stos
popa
sub
js
mov
jecxz
hlt
outsb
dec
pop
cmp
leave
inc
xchg
adc
sbb
inc
mov
pop
and
jge
daa
clc
sbb
clc
stos
and
push
rolb
sbb
pop
mov
push
shlb
out
sbb
mov
das
sub
orl
and
add
daa
loope
lock
or
push
lea
mov
mov
pushf
pop
cld
push
in
sub
cmpl
inc
out
adc
xor
rcr
and
push
add
push
fucomi
das
repnz
lds
mov
aam
jb
call
dec
pop
xlat
shlb
aaa
or
jge
addl
or
push
call
pop
inc
and
sbb
in
fiaddl
sbb
adc
insl
es
cmp
inc
fsts
popa
bound
rol
hlt
xor
jb
jnp
or
ss
adc
pop
ds
leave
clc
and
mov
pop
in
test
pop
jecxz
sub
sbb
popa
cmpsb
xchg
push
xor
add
pop
in
rolb
push
out
xor
lret
js
push
add
push
lock
outsl
pop
lock
push
std
add
mov
sub
adc
mov
and
adc
add
and
adcb
test
lret
and
sub
adc
inc
pop
and
push
jb
add
add
push
or
sub
inc
movsl
add
xor
xchg
jg
adcl
jmp
cmpsb
mov
and
cmp
adc
mov
cmp
sub
sub
sub
xor
or
aas
dec
push
jb
and
dec
xchg
push
mov
gs
pop
mov
and
add
cmova
dec
inc
push
sub
xor
xchg
mov
and
adc
cmp
pop
inc
adc
nop
dec
or
cs
gs
mov
pusha
lea
add
push
mov
or
fsubs
adc
mov
ficomps
mov
mov
or
add
push
jmp
scas
dec
add
inc
sub
inc
add
ret
pusha
xor
or
or
outsl
sbb
xchg
sbb
add
repnz
add
shlb
cmp
push
jo
test
sahf
cmpl
push
filds
lcall
in
and
sub
cmpl
shlb
and
pop
inc
dec
and
mov
out
jnp
or
movb
xchg
add
pushf
lds
or
rcrb
mov
adc
pop
push
mov
or
xchg
mov
test
pop
push
or
add
sbb
or
mov
loopne
inc
mov
ds
add
dec
mov
push
jae
in
or
add
push
dec
je
inc
pusha
sarl
cmp
sub
dec
sysenter
inc
xor
sahf
inc
outsb
test
sarl
mov
add
jmp
daa
push
sub
dec
add
pop
cmp
fstl
jg
add
test
clts
lea
je
push
je
or
cmpl
push
add
sar
xor
addb
cmpb
adc
adc
pop
int3
inc
pop
add
or
jne
cmp
je
mov
inc
cmp
lock
adc
push
adc
aas
push
movl
push
mov
or
ljmp
add
mov
mov
or
xchg
or
in
mov
pop
movsl
clc
outsl
bound
arpl
xchg
sbb
push
cli
inc
jl
push
pop
dec
and
xchg
jbe
add
mov
insl
mov
push
pop
mov
rorl
outsl
push
fildl
addl
inc
lods
pop
ret
jg
out
sbb
and
add
shll
inc
ret
jbe
and
sbb
data16
or
mov
inc
mov
popf
sbb
pushf
push
add
push
push
insb
add
sub
xor
arpl
or
jge
pop
aas
and
xchg
push
mov
repnz
push
pop
lock
dec
sbb
rcll
enter
adc
out
or
add
inc
or
lea
pop
daa
lea
or
pushf
lea
push
adc
mov
jge
sub
test
xor
add
roll
sbbl
int3
and
outsb
or
xor
mov
movsbl
xchg
pop
push
cmp
xchg
roll
ds
mov
lcall
and
lock
xchg
sub
je
sub
or
cmp
mov
push
addr16
jl
inc
jns
sahf
mov
mov
xchg
pop
cmp
insb
inc
fidivl
in
sbb
cs
or
xchg
push
test
adc
je
les
lock
jg
or
push
mov
lock
sbb
faddl
rep
add
adc
push
inc
push
adc
adc
jno
lods
rolb
je
stc
push
jg
add
dec
stc
in
push
mov
add
mov
jl
pop
mov
clc
inc
cmp
mov
xor
lods
mov
sbbb
adc
pusha
mov
jbe
pop
test
jge
ds
mov
adc
xchg
sub
xchg
pop
enter
std
cmp
jae
adc
loop
xchg
add
mov
mov
or
dec
xchg
and
xlat
push
mov
pop
add
pop
stos
fdivr
jbe
subb
outsl
push
xchg
push
mov
faddl
pop
jmp
inc
xchg
add
js
and
in
or
mov
push
nop
dec
fadds
cmpb
inc
test
and
or
sbb
sub
push
sbb
cli
mov
mov
inc
inc
lea
pop
mov
or
mov
pop
aad
push
enter
ret
pushf
flds
or
or
fs
jl
mov
adc
mov
sbb
jbe
ret
adc
add
inc
or
sub
out
int
and
and
sub
add
pop
jnp
pop
daa
mov
divb
cmpsl
mov
cmpsl
mov
fcmove
add
add
scas
mov
lods
dec
adc
xor
inc
iret
dec
test
fistpll
adc
out
jmp
roll
imull
sbb
pop
pop
or
cmpsl
inc
test
sbb
inc
jl
ds
xchg
add
or
arpl
pop
rorb
or
push
push
cmp
mov
or
adc
add
push
mov
mov
sbb
mov
movsl
and
cld
xchg
inc
mov
outsl
pusha
gs
add
pop
jae
adc
jl
push
add
dec
sbb
sbb
in
popa
nop
mov
shlb
jl
adc
lea
mov
sub
sbb
les
cmp
and
pop
das
cmp
sbb
mov
pusha
test
rorb
or
cmp
jl
mov
sub
or
out
fimuls
or
icebp
cli
test
adc
dec
push
shll
push
push
aam
or
mov
ret
pop
and
pop
or
into
shlb
xor
dec
cwtl
nop
push
mov
and
cmp
arpl
lods
lds
push
jp
ret
divb
decb
push
mov
add
push
sub
lret
xchg
pop
add
cltd
nop
pop
shlb
cs
addr16
push
imul
add
cmp
xchg
dec
add
adc
mov
dec
lock
push
sbb
xchg
cmp
mov
jmp
xor
nop
or
or
mov
jl
stc
or
movsb
jne
and
ja
dec
xchg
pop
dec
jae
jne
mov
add
cmpl
adc
je
in
dec
subb
jge
push
cmp
loope
pusha
jle
mov
push
xchg
mov
sti
aaa
and
cmp
jg
mov
mov
inc
fcom
jmp
lcall
push
add
lret
mov
inc
sbb
dec
add
add
inc
test
aam
cmp
jns
jo
inc
mov
or
and
push
cmpsb
add
imulb
out
jmp
mov
push
xor
inc
xchg
int3
mov
inc
aam
imul
inc
dec
iret
mov
fwait
inc
xchg
decl
xchg
and
add
dec
sbb
xor
std
sbb
adc
leave
pop
incl
push
inc
xchg
add
add
adc
push
dec
in
addl
xchg
add
insb
push
cli
adc
add
inc
js
rolb
add
shl
stos
xor
aaa
jecxz
or
jg
and
filds
cmp
pop
fdivrl
inc
sbb
mov
inc
push
mov
adc
sub
or
or
mov
outsb
sbb
sub
push
out
or
stos
add
sub
add
or
pop
push
xchg
add
lahf
cmc
push
inc
xor
imul
mov
in
pushl
push
jne
cmp
je
cmp
push
pop
shlb
and
aaa
imul
dec
dec
cmp
xor
mov
push
jmp
and
mov
cmp
jo
fidivrs
cmpl
xchg
dec
mov
sbb
mov
mov
or
push
fwait
pop
ja
test
jb
or
fistpll
jns
xor
test
cmp
or
aas
ret
pop
movzwl
push
rorb
icebp
leave
push
and
dec
add
jmp
adc
mov
jns
add
push
movsl
mov
nop
clc
dec
mov
add
in
add
push
or
or
mov
cld
adc
mov
hlt
pop
insb
adc
int
jbe
cltd
xor
psubq
sub
lcall
push
mov
inc
lods
sbb
ret
mov
mov
push
jb,pt
mov
pop
or
and
ds
add
dec
scas
dec
sub
xchg
sbb
mov
lcall
lea
lea
push
imul
pop
test
rcrl
jae
adc
mov
or
jl
incl
rclb
adc
cmp
jbe
pusha
cmp
mov
pop
mov
or
jl
repnz
imul
mov
jb,pt
sahf
roll
int
jp
pop
xchg
jle
cmp
mov
ljmp
jecxz
call
cmp
roll
sub
cmp
mov
stos
out
cmp
and
cmp
fsubl
jo
sbb
sbb
or
or
pusha
mov
dec
sbb
clc
and
pop
js
jge
je
aas
movsb
roll
add
rolb
movl
sarl
adc
jl
mov
xor
push
faddl
in
int3
or
mov
dec
test
pusha
je
mov
push
inc
cld
mov
jle
jb
lea
mov
decb
push
sub
adc
repnz
jmp
inc
cld
jne
jbe
mov
cmpsl
out
push
sub
cmp
jle
add
mov
rolb
mov
add
or
adc
scas
adc
jecxz
fs
or
lret
cmpsb
adc
add
mov
mov
sbb
sbb
xorl
scas
adc
mov
cmp
sub
rcll
mov
mov
test
adc
call
stc
test
je
pop
sbb
es
xor
aas
jae
loop
jg
int3
jmp
test
cmp
mov
or
adc
mov
pop
push
stc
xchg
outsb
push
hlt
add
lock
or
jl
lock
in
lds
ret
and
or
sbb
sahf
mov
sub
inc
loope
sub
pushf
cwtl
imul
pop
sub
push
adc
push
int
notb
lock
push
add
outsb
inc
fisttps
je
inc
push
pop
mov
or
adc
cltd
inc
cmpsl
fistpll
and
xor
add
loopne
mov
idivb
or
dec
sbb
int3
sbb
aam
adc
mov
cmp
cli
dec
repz
or
les
aaa
cmpsb
es
adc
int3
lea
loopne
mov
test
push
sarb
mov
push
inc
clc
pop
xor
call
hlt
insb
push
fcoms
test
outsl
dec
dec
test
in
je
or
dec
inc
xor
shll
or
sub
pop
clc
jmp
pop
mov
fsubr
and
mov
test
aam
in
push
jno
add
ja
in
mov
mov
mov
ret
in
ret
and
jge
dec
in
lea
cmp
mov
aam
fadds
mov
mov
dec
mov
inc
lea
iret
ss
ljmp
xchg
and
push
loop
sub
aam
pop
out
loopne
xor
loopne
cmp
lret
or
ss
insl
testl
adc
add
jmp
cmp
aam
stos
push
subl
dec
adc
adc
xchg
out
in
xchg
sub
ljmp
push
stos
clc
push
inc
add
add
mov
call
jg
mov
cmp
cmp
ljmp
repz
and
adc
outsb
out
add
adc
add
or
pop
jne
movsb
xor
sbb
leave
pop
ja
andl
or
cltd
sbb
jmp
mov
mov
shl
add
inc
add
add
jmp
icebp
push
ficoms
ret
les
jo
jge
sbb
mov
mov
push
loopne
stos
scas
popa
enter
push
mul
setns
neg
or
push
pop
stos
je
lock
or
and
aaa
pop
push
mov
outsb
inc
aaa
cmp
push
outsl
lods
xchg
or
lods
fs
pushf
outsl
out
push
pop
mov
dec
and
cmp
mov
mov
decl
clc
sub
inc
sbb
adc
mov
add
sub
add
xor
sbb
lock
clc
mov
ret
pop
inc
jmp
or
xor
divl
mov
shlb
loopne
pop
sarb
dec
push
sbb
pop
mov
test
loop
jl
push
ficoms
insb
cmp
in
push
add
xchg
push
push
push
pop
adc
subb
fcompl
gs
mov
ret
inc
sbb
sub
xor
jge
push
add
cmp
out
andl
pop
sbb
push
or
cmp
push
aam
jns
mov
or
and
fs
inc
mov
add
push
cmp
jmp
cmp
imul
fistps
cmp
mov
loopne
cmp
sbb
dec
insb
flds
dec
pushf
sbb
fimull
mov
sahf
or
cmp
inc
ret
sub
std
add
sti
jmp
inc
insl
mov
out
push
xor
adc
sub
lea
das
and
mov
js
movsl
sbb
and
inc
mov
xor
ja
push
adc
mov
mov
xor
es
iret
rcl
push
jbe
mov
outsl
pop
test
push
daa
cmp
and
cld
movsb
mov
sub
hlt
imul
pop
pop
mul
repnz
xchg
out
sub
push
xor
push
lods
int3
jp
add
in
test
es
fimull
push
adc
pop
add
push
xor
and
mov
or
pop
xor
xor
push
mov
and
jb
jo
dec
repnz
lods
add
mov
cmp
xor
inc
mov
test
xchg
popa
jecxz
sub
mov
popl
push
push
add
mov
push
lea
loopne
nop
mov
jle
inc
test
add
jno
xchg
mov
sbb
and
push
stc
cmpsb
js
add
test
mov
mov
lea
cmp
je
cltd
cli
imul
add
jmp
lea
shl
and
inc
hlt
push
push
rcrl
inc
push
jbe
mov
cmp
mov
xor
call
icebp
add
sahf
mov
hlt
jp
mov
popl
xchg
cmpl
lahf
mov
xchg
jno
cmp
xchg
lds
and
dec
or
outsl
mov
cmp
sub
bound
inc
lock
cmp
cld
adc
movsb
xchg
movsb
dec
rcrb
or
cvtdq2ps
sbb
jns
faddp
dec
push
test
sbb
cmp
adc
or
xor
imul
push
jno
das
int
outsl
mov
inc
push
lea
adc
dec
sbb
sbb
pop
pop
push
movsb
sbb
pop
jp
xchg
add
push
mov
push
push
rclb
imul
lahf
out
add
xchg
add
inc
cmp
dec
addr16
adc
mov
add
xor
dec
and
add
dec
ljmp
pop
loope
in
or
xor
push
das
dec
sub
out
sahf
testb
lret
push
push
push
in
div
pop
nop
dec
ficoms
and
push
mov
outsl
mov
ljmp
mov
push
daa
sub
ss
cmp
lods
or
je
xor
jbe
or
pushf
push
cli
inc
push
rorb
mov
cmp
jne
push
mov
adc
and
jbe
lret
je
inc
add
pop
orb
sub
or
or
adc
in
ror
lock
cmp
jbe
arpl
in
and
sub
pushf
and
leave
xor
and
push
lock
xchg
inc
lds
pop
push
imul
push
xor
mov
movsb
cmp
jae
dec
sbb
pop
add
dec
sbb
pop
enter
add
loop
jne
sbb
adc
call
jl
jb
adc
rcll
cli
js
into
push
push
imulb
testb
pop
cmp
push
mov
or
dec
inc
inc
je
das
and
xchg
or
jae
and
push
les
mov
daa
sbb
lcall
call
add
cmpl
loop
pop
pop
push
test
rcrb
adc
jne
push
mov
idivb
je
data16
and
sub
adc
sbb
dec
loope
std
mov
negb
icebp
xor
lea
dec
adc
loop
xor
or
mov
inc
cmp
lods
nop
rorb
stc
pop
str
push
je
or
pop
mov
lea
push
add
js
or
insb
inc
lea
add
dec
adc
leave
cs
inc
rolb
inc
adc
xor
imul
pusha
movhps
sbb
inc
loopne
and
pop
shl
adc
push
and
outsl
cmp
popf
sub
mov
fisttps
pop
add
lods
sub
and
add
push
stc
cmp
sub
jne
mov
adc
adc
adc
or
rclb
push
pop
xchg
mov
adc
in
loope
dec
cmp
ja
or
add
adc
loopne
xchg
inc
sbb
add
insl
popa
jnp
ret
mull
lea
add
loope
inc
rcrb
mov
and
ret
push
and
push
push
loope
jl
test
lods
xchg
sbb
inc
imul
add
nop
in
stos
inc
adc
jo
xor
loope
jg
lods
daa
clc
bound
ret
inc
movsb
aam
sub
adc
push
adc
add
or
xchg
jmp
and
jne
xor
addl
or
sub
or
adc
add
sbb
in
shrl
repz
inc
cld
and
sti
cs
repnz
push
jne
sub
push
add
movsl
add
lock
lock
add
cmp
into
mov
sub
jl
lds
push
adc
movb
icebp
xorl
jne
shrl
fbstp
sub
std
lret
xor
xorl
test
test
or
cmp
add
test
mov
xchg
adc
add
xchg
push
pop
xchg
xchg
sarb
or
int
pop
inc
bound
jb
add
cli
inc
push
mov
mov
mov
jg
pop
addb
fildl
push
sbb
pop
and
fadds
sub
fstps
flds
flds
cmp
cwtl
iret
push
ss
or
outsb
or
lret
xchg
mov
in
leave
fldcw
jl
into
mov
mov
push
sbb
sub
fmuls
push
push
dec
dec
mov
popf
iret
inc
inc
sbb
adc
adc
jl
xor
add
jo
icebp
test
inc
test
mov
lret
ds
adc
sbb
adc
cmp
and
fldl
cs
js
mov
gs
push
jns
nop
mov
pop
jge
xor
inc
push
into
push
jle
pop
dec
and
xchg
popa
cmp
stc
jbe
mov
jne
mov
push
adc
sub
jno
dec
sbb
pop
ret
stos
lds
iret
dec
pusha
push
and
je
call
push
dec
add
sbb
shlb
add
sub
push
inc
mov
sbbl
add
add
push
incb
xor
push
lahf
sbb
adc
xor
nop
or
mov
into
mov
ljmp
icebp
je
jp
cmpsb
adc
add
shrb
xor
or
mov
mov
xchg
jnp
add
fsubrs
les
mov
adc
sti
add
mov
xor
push
lea
mov
sbb
idivb
jmp
dec
add
shl
loope
lea
test
popa
and
xlat
adc
mov
mov
mov
mov
movsb
pushl
cmp
jae
lea
cmp
ja
lahf
pop
push
or
insl
or
inc
es
ds
jmp
dec
add
and
mov
mov
push
ss
xor
mov
push
lcall
add
xchg
xor
push
xchg
nop
lret
pushf
fists
int3
push
mov
cmp
add
les
pop
pop
adc
std
push
mov
push
xor
sub
add
popa
push
dec
xchg
and
inc
pop
arpl
xor
inc
adc
push
mov
xchg
inc
je
push
mov
loope
lahf
adc
repz
inc
test
fisubl
shl
iret
mov
xrelease
into
jbe
ficompl
inc
rolb
inc
cmp
jae
lock
flds
push
je
mov
or
inc
es
ds
rorl
mov
pop
mov
and
add
mov
repnz
cmpb
add
push
xchg
enter
outsb
loop
jg
js
pop
pop
test
cltd
imul
jns
jmp
test
or
add
lds
push
dec
je
inc
jp
cmp
inc
shll
jns
jo
pop
xchg
js
sbb
cmp
movsb
push
add
sub
je
add
push
dec
popa
mov
sbb
sti
js
cmp
inc
in
dec
outsb
add
xor
rcrb
sub
or
fmuls
popf
shll
jmp
fmuls
xor
mov
jp
push
or
lods
xlat
jmp
add
lea
je
inc
push
xor
jle
cmp
mov
cs
inc
mov
out
add
pop
orl
xchg
in
xchg
test
mov
lea
push
mov
sbb
test
dec
add
or
cmovle
lea
div
adc
push
mov
pusha
sub
adc
aam
mov
mov
test
fcoml
js
mov
inc
adc
sbbb
and
jo
xorb
cmp
pop
lea
pusha
sub
lock
mov
and
mov
dec
cmp
adc
into
pop
push
push
push
call
fsubrs
loopne
and
pop
sarb
je
int
cmp
sub
adc
adc
das
jmp
add
mov
mov
adc
js
addl
out
cld
inc
loope
mov
jge
mov
cwtl
movsb
cmp
cmpsl
mov
fdivrs
sub
nop
inc
mov
insb
jo
cmp
fistpll
js
mov
or
insb
out
pop
pop
popl
sbb
and
mov
cmpb
xchg
cmp
pusha
inc
enter
add
imul
iret
mov
adcl
repnz
jl
inc
fucomi
test
nop
call
rorl
push
sarb
or
mov
sbb
adc
jns
test
push
xor
sub
adc
pusha
fdivs
adcb
in
push
pop
mov
in
repz
xchg
mov
fistpll
inc
xchg
or
xor
orl
je
xorb
sahf
movsl
xchg
adc
inc
sti
sarb
jae
in
in
adc
dec
sbb
gs
push
push
ret
pop
movsb
lea
adc
push
xor
mov
fsub
push
push
push
add
inc
jecxz
mov
jg
or
sbb
dec
lds
push
sahf
push
mov
test
xorl
mov
and
rcrb
dec
shlb
je
shl
jnp
jne
decl
lret
addl
mov
push
fsubrs
std
add
pop
push
add
cmc
lods
popa
inc
rcll
push
jne
mov
and
mov
sub
lock
cmp
out
jb
xchg
pop
clc
mov
gs
testb
sub
push
mov
insl
mov
xchg
fisubl
pop
push
push
fsts
je
mov
add
add
lods
in
or
adc
loopne
cmc
push
ja
jp
and
or
je
vdivps
pop
pop
jmp
stc
lock
lock
xorl
sbbb
addl
test
add
inc
loope
and
push
add
bound
insb
dec
mov
std
jmp
or
cmp
sub
jle
push
std
add
cltd
test
jmp
sti
les
loope
sbb
pop
enter
adc
jp
fimull
or
push
jbe
cmp
cmp
mov
push
push
jns
dec
xor
sub
add
or
rcrb
add
cmpsb
mov
subl
leave
inc
cmp
jae
mov
mov
ret
jmp
nop
dec
cmpl
popa
add
mov
jmp
mov
nop
add
clc
jae
lea
lock
and
cmpb
jne
cmpb
jne
lds
sti
xchg
sbb
lock
ja
mov
neg
sbb
and
add
sbb
jb
pop
mov
pushf
sbb
test
movsb
stc
or
cmp
cmp
cwtl
into
xor
faddl
cmp
pop
adc
fdivrl
pop
or
repnz
test
lods
sub
imul
mov
stc
push
push
mov
or
aaa
das
pop
cwtl
push
add
dec
pop
inc
aad
shr
loop
fisubrl
sub
inc
jmp
xor
push
push
push
addr16
xor
pushf
mov
mov
push
pop
inc
push
clc
ljmp
mov
xchg
nop
inc
adc
ret
iret
cmp
sarl
pand
pusha
es
sarl
sti
push
adc
pushf
scas
les
insb
and
cmp
test
cmpsl
inc
imul
insb
or
push
mov
sbb
arpl
xor
into
cmpw
mov
add
dec
jge
sbb
mov
inc
loopne
push
pop
adc
inc
movsl
push
pop
pop
sbb
inc
ja
cmp
jnp
ljmp
or
inc
xchg
inc
add
aam
jo
inc
lea
stos
jmp
mov
es
inc
mov
jg
int3
pop
arpl
jmp
push
pop
aaa
or
mov
sbb
xchg
xchg
jmp
or
je
call
icebp
insb
in
addr16
jb
push
jae
jo
sub
je
or
sub
loope
mov
mov
or
push
std
insb
push
lea
sbb
in
cmp
or
add
or
adc
adc
cmpsl
stc
adc
sbb
jo
add
fcmovne
mull
lcall
je
dec
add
hlt
push
shlb
inc
and
decl
xlat
lock
or
and
mov
sbb
add
cmc
add
ret
mov
fimuls
lea
or
or
notl
int
mov
mov
stos
mov
ja
adc
mov
and
lea
loop
or
rorl
jno
jnp
push
rorb
push
xchg
jge
mov
mov
lea
push
push
andl
push
inc
sar
imull
mov
aaa
inc
jp
sbb
add
push
lea
shr
add
test
sbb
add
pop
push
inc
jge
mov
jb
je
add
jnp
xchg
push
pop
mov
ja
mov
xor
pop
mov
clc
sub
mov
pop
jno
lret
push
fidivl
sbb
and
xor
fdivrs
insb
jmp
iret
adc
subb
fildll
xchg
out
into
nop
adc
or
repnz
and
adc
enter
mov
outsl
mov
adc
sbb
adc
and
or
xor
pop
inc
clc
rcrb
adc
xor
xchg
push
stc
or
mov
and
jl
pop
xor
jg
jae
xor
add
cmp
ds
and
mov
je
pop
ja
xor
push
ljmp
lahf
adc
shlb
jb
jp
cmp
mov
xchg
test
enter
push
mov
push
hlt
adc
jmp
inc
xor
push
dec
ja
jl
or
je
mulb
jbe
mov
sub
or
dec
aaa
dec
into
xor
pop
inc
and
mov
mov
mov
clc
or
xchg
sub
push
mov
push
and
fmuls
push
ud0
mov
ret
inc
lock
adc
imul
sbbl
lock
mov
pop
push
sbbl
push
cmp
leave
clc
inc
icebp
mov
cli
push
repz
ret
call
loope
xor
push
pop
nop
loop
loope
mov
sbb
pop
and
adc
loop
cmp
adc
xor
lea
push
mov
lds
push
mov
cltd
andb
inc
dec
sub
into
hlt
push
inc
mov
fidivl
cmp
push
push
or
mov
scas
inc
insb
xor
and
cmp
sarb
jb
icebp
xlat
arpl
ret
push
push
shlb
ficoms
pop
imul
xor
push
xor
ja
dec
mov
rorb
mov
sbb
or
jg
sbb
fisubrl
loopne
adc
add
sarl
pop
clc
push
or
mov
and
sbb
ret
jle
dec
sbb
in
je
and
push
loope
test
pop
pop
in
cli
add
push
dec
loope
and
sub
sub
inc
sub
cs
loop
inc
std
enter
hlt
js
ficoms
mov
xor
pop
movsl
sub
jmp
rorb
andb
out
xchg
lds
rclb
outsb
lea
rclb
fs
lods
push
outsb
add
cmp
sbb
add
es
and
cmp
jbe
mov
and
das
dec
mov
mov
mov
inc
mov
dec
sub
xchg
xor
inc
out
sub
xlat
mov
add
les
push
push
xchg
and
and
mov
adcl
inc
adc
mov
sbb
adc
xor
cmp
enter
cmp
or
lock
lret
ja
jb
pop
mov
sbb
dec
lcall
or
jbe
shlb
jge
aam
mov
adc
sub
pop
sub
mov
popf
push
aas
add
aaa
daa
add
or
or
and
test
stos
test
pop
and
pop
or
and
sbb
adc
test
lret
mov
jo
mov
jge
je
pop
outsl
push
or
adc
add
mov
or
or
push
popf
mov
pop
inc
outsl
cmpsl
xchg
shlb
add
mov
mov
push
pop
div
add
jl
mov
lock
jg
cmpb
jne
inc
inc
xor
dec
or
or
push
mov
cli
sbb
lock
rcrl
push
add
or
or
or
pop
shlb
pop
mov
cld
inc
enter
push
shrl
dec
sqrtps
fcoml
mov
xor
sbb
adc
pop
xor
and
mov
sub
sbb
and
imul
je
xor
xchg
jnp
push
add
movb
inc
or
dec
lcall
je
jbe
inc
mov
inc
inc
add
test
inc
or
or
pop
enter
add
jmp
mov
repz
add
out
test
fdivr
push
lea
cbtw
and
mov
and
mov
dec
popf
adc
dec
inc
jecxz
sti
xor
mov
mov
mov
test
sbb
sub
into
mov
sub
cmpsb
add
mov
mov
adc
sahf
push
xchg
xor
push
sub
inc
pop
incb
pop
dec
push
nop
out
mov
lods
daa
adc
or
or
loopne
push
adc
and
in
add
mov
and
cmp
icebp
sbb
jne
add
push
adc
cmp
cmp
jmp
jns
inc
push
push
movl
sub
push
push
xor
lods
and
adc
mov
lret
mov
mov
add
xchg
xchg
and
and
inc
mov
test
jmp
test
xchg
sub
jns,pn
or
sub
and
pop
add
sbb
push
dec
and
sub
popa
push
push
cmpsb
mov
mov
xor
mov
push
inc
xor
pop
sbb
sbb
stos
mov
pop
or
adc
popa
push
lahf
mov
jle
or
in
mov
test
aaa
add
data16
pop
fsubrs
xchg
pop
nop
fwait
loop
push
inc
iret
cmp
jne
cmpl
pop
add
xorl
mov
loope
or
das
add
enter
add
daa
mov
push
in
jge
loopne
movsb
je
popf
cmc
pop
sub
movsl
leave
mov
mov
fistpl
rolb
pop
or
mov
je
xorl
adc
add
sbb
lods
and
sub
push
push
movsb
repnz
adc
and
dec
and
xchg
and
arpl
enter
sbb
sbb
fisttpl
and
enter
hlt
loopne
cmp
jnp
xchg
ja
das
cmp
inc
mov
out
push
dec
sub
pusha
pop
es
fldenv
mov
stos
sub
int
pop
mov
mov
push
in
fiaddl
jo
pop
mov
cmp
in
mov
pusha
push
dec
sub
es
jne
push
sub
jle
or
js
addb
mov
push
fadds
cmp
push
inc
sub
cmp
dec
push
cmp
and
and
inc
aam
xchg
mov
and
mov
bound
pop
adc
pusha
cmp
adc
push
notl
pop
loopne
mov
and
adc
lret
mov
adc
imul
inc
sbb
lds
mov
add
xchg
cltd
int
es
dec
add
inc
stos
and
inc
adc
push
sbb
pop
popa
push
push
add
push
inc
bound
and
or
repnz
add
mov
and
and
cltd
fs
dec
sbb
sbb
add
add
aas
add
add
xchg
hlt
aam
in
sahf
jbe
repz
dec
jbe
pop
filds
inc
faddl
inc
cmp
pop
aad
jno
mov
mov
pop
test
adc
cmp
or
sub
push
dec
push
inc
adc
dec
loope
mov
xor
jmp
xchg
mov
sbb
xchg
popf
and
dec
in
insb
pop
push
aaa
push
rcrb
fidivrs
push
xor
dec
sbb
add
pushf
or
inc
rcll
in
dec
add
imul
push
pop
js
xlat
imul
xchg
and
mov
cmp
js
jne
adc
push
in
movsb
mov
cmp
sahf
popa
xchg
and
and
dec
push
lock
pop
enter
sbb
push
adc
pop
or
sub
mov
add
adc
ss
movsb
cwtl
push
test
inc
adc
or
outsb
sbb
mov
add
push
add
mov
mov
das
or
push
sub
cs
test
push
push
xor
push
push
std
inc
sub
lret
js
imul
sub
sub
sbb
xchg
adc
adc
sbb
test
jb
and
movsb
fs
sarl
push
les
dec
sub
jl
loopne
and
faddp
shrb
ja
sbb
sbb
mov
out
adc
test
lahf
dec
push
push
adc
lret
sbb
dec
add
dec
sbb
adc
mov
inc
ljmp
adc
jge
push
adc
inc
adc
inc
cmp
sbb
push
das
sbb
incb
in
popf
mov
mov
pop
mov
cmp
fcomp
add
out
imul
and
jge
xchg
or
mov
lea
jne
in
or
or
out
call
mov
push
dec
fistpll
or
xchg
and
mov
lods
inc
jl
jne
scas
mov
mov
aam
xchg
and
nop
out
sub
cmp
in
rolb
scas
push
xchg
and
mov
or
or
imul
add
in
inc
loopne
xor
inc
push
or
xchg
hlt
mov
jl
jmp
nop
jb
sbb
movsb
mov
push
push
dec
jmp
movsb
mov
push
and
das
pushf
dec
push
mov
lds
or
push
test
int3
leave
sub
add
fldenv
mov
pop
fcompl
pop
pop
inc
or
ret
mov
xchg
test
cwtl
push
adc
or
daa
mov
and
into
movsl
push
andps
inc
mov
movsb
pop
imul
adc
cmpsl
xor
lret
cmp
xchg
iret
movb
int
add
lds
or
or
fcoml
mov
decb
cmp
jl
jno
and
movsl
hlt
gs
out
int3
mov
xchg
cwtl
nop
out
sbb
rep
adcb
repz
cwtl
adc
sbbb
mov
add
adc
ret
adc
or
orl
adc
lods
test
addl
push
add
nop
pop
jp
mov
out
jl
xchg
add
or
jb
jne
cltd
test
xchg
cmp
aaa
pop
push
or
int3
fists
cmp
xor
mov
add
inc
and
add
mov
and
push
push
pusha
mov
and
fnsave
add
sub
test
sub
jne
jl
push
xchg
shl
push
fwait
adc
test
inc
dec
jno
jne
add
xchg
sahf
dec
lret
scas
fmull
mov
and
sub
xchg
pushf
jmp
or
inc
lods
test
inc
adc
hlt
xor
or
cmp
mov
je
stc
or
and
add
lods
xchg
add
cmp
sbb
jmp
push
leave
dec
dec
sbb
sbb
add
or
inc
lods
and
push
add
out
or
mov
stc
stos
inc
add
dec
roll
cltd
ds
push
fsubrl
inc
add
pop
inc
mov
sbbb
jmp
popl
ret
das
jp
mov
das
jp
cmp
or
in
int3
add
mov
cld
int3
je
ficompl
sbb
loope
je
outsl
call
xchg
or
xor
pop
mov
test
cmp
sub
xor
loope
sbb
xlat
sub
or
xor
xor
jmp
pop
mov
xor
int3
push
call
sbb
xchg
out
dec
and
add
push
add
sub
pop
push
and
adcb
in
push
in
mov
sbb
call
inc
clc
push
mov
pop
insb
sub
pop
orb
pop
push
int3
lock
push
and
ljmp
mull
xchg
or
adc
add
sbb
add
ss
sub
adc
mov
push
roll
movsb
fistpl
mov
popf
push
js
adc
xlat
and
dec
lock
mov
movb
mov
sbb
cmp
repnz
xchg
mov
mov
aam
mov
pushf
push
push
mov
xorb
adc
fcmovne
and
adc
sub
xor
aas
and
xor
cmp
push
mov
testb
adc
repz
push
sub
sbb
or
adc
pxor
das
cs
movsl
fisttpll
popa
sub
ret
roll
enter
xchg
xchg
push
repnz
pop
scas
xchg
pop
iret
xor
mov
mov
adc
dec
cs
cmpsl
scas
cmp
jl
mov
xor
xor
xor
sbb
sbb
cmp
mov
mov
jns
mov
icebp
notb
push
push
mov
sbb
jns
sub
adc
lods
add
inc
jl
loop
lahf
push
add
shlb
mov
cmp
stc
jb
sbb
add
cmp
popf
sub
clc
mov
mov
xchg
add
divb
cmp
sub
push
push
iret
sub
cmpb
jb
cmc
pop
insb
dec
push
shrb
add
pop
sub
lock
or
je,pn
push
pop
sbb
hlt
outsb
add
das
inc
pop
mov
jg
sbb
inc
add
cmp
jl
pop
adc
xor
cs
mov
push
xor
lcall
sbb
or
pop
lock
les
adc
push
movb
or
es
mov
test
xchg
or
pop
fists
int3
inc
enter
xorb
adc
mov
or
cld
mov
mov
fildll
push
push
jl
jnp
icebp
lret
mov
inc
fnstcw
mov
add
inc
insb
inc
mov
sbb
dec
pop
xorl
or
jnp
pop
and
lea
cmp
xor
inc
add
xor
push
sbb
and
inc
pop
adc
push
mov
pop
adc
movaps
insl
mov
sub
dec
idivl
add
sub
mov
rorl
adc
and
or
icebp
and
adc
add
sti
hlt
inc
pop
pop
push
sbb
dec
or
loope
test
aas
shrl
ds
push
push
dec
or
cmp
je
pushf
pop
clc
mov
and
rclb
xor
fldl
or
sub
in
clc
inc
add
gs
xchg
inc
xor
push
adc
xchg
inc
xchg
jge
stos
sbb
dec
cmpb
xor
repnz
adc
les
push
jno
aas
mov
fcomps
dec
stos
inc
xchg
xor
daa
pop
mov
sqrtps
cmp
loop
pop
or
addr16
je
xlat
jbe
dec
or
or
clts
cwtl
pushf
dec
test
movsb
loope
xchg
clc
popf
imul
fsubr
insl
lods
addb
outsl
add
lock
cmp
jge
repz
mov
inc
hlt
xchg
fstl
aad
dec
out
dec
addr16
cs
imull
mov
addb
dec
xor
inc
mov
adc
add
or
adc
hlt
addl
adc
dec
mov
add
pop
sub
add
inc
add
shl
push
inc
push
lret
sub
or
sbb
add
xchg
jle
cmpsl
pop
mov
and
xor
xchg
mov
add
inc
adc
push
mov
cmp
fcomps
test
loop
xor
pusha
pop
in
add
movsl
sub
inc
push
ror
add
mov
mov
or
stos
sbb
inc
dec
jns
xchg
out
xor
cmp
xor
sub
flds
cmpsb
int
outsb
jmp
inc
mov
push
js
arpl
or
mov
mov
dec
fsubl
mov
inc
sbb
xchg
jmp
enter
pop
loop
fisubs
sti
adc
add
or
xchg
add
mov
cmp
and
inc
sbb
add
add
xchg
xchg
xor
add
push
test
popa
xor
pop
aam
and
xchg
pop
dec
lods
ja
and
jo
cmp
lods
push
add
sbb
pusha
inc
and
or
lret
sbb
adc
adc
xchg
add
add
sub
dec
gs
xor
add
inc
xor
push
push
nop
lret
cmp
add
or
xchg
inc
push
dec
lar
add
or
sbb
jns
jp
add
fmull
stc
shlb
adc
mov
rcrb
les
adc
test
int3
or
inc
enter
dec
arpl
mov
or
dec
sti
mov
adc
sub
pop
out
in
push
xchg
aas
inc
pusha
add
pop
mov
xchg
lods
popa
stos
xchg
arpl
xchg
mov
inc
jnp
in
test
cmp
xor
xchg
add
arpl
push
dec
jle
adc
leave
push
insl
jbe
push
pop
insb
pusha
lea
sbb
jnp
stos
lods
jge
mov
cmpsb
or
aam
xchg
out
imul
imul
insb
sbb
push
add
sbb
sti
push
lea
setne
xchg
rorb
inc
or
int
or
or
or
int
rorb
xor
xor
or
pop
sub
or
int
and
and
add
add
int
rorb
or
or
or
aas
sub
imul
xor
cmp
and
sar
add
add
shlb
add
push
and
sbb
cmc
cmpsl
orl
inc
jl
mov
xlat
xchg
or
or
les
jmp
inc
es
and
pusha
movb
pop
cmp
sbb
jmp
sub
pop
leave
sbb
jne
orl
jl
je
stos
mov
push
mov
ss
sbb
cmp
and
ja
lea
filds
pushf
xor
sbb
push
or
add
add
cmp
test
cmp
cmp
xor
leave
dec
fs
xor
pop
dec
imul
push
mov
aam
mov
gs
daa
pop
cmp
and
sub
jmp
add
pusha
push
cltd
dec
sbb
dec
adc
call
fcoml
add
nop
pop
sbbl
sbb
push
sbb
aaa
mov
in
inc
push
sbb
cmc
call
push
lock
sub
cmp
aam
sub
outsl
inc
test
push
push
aam
xchg
dec
imulb
push
xchg
sub
jp
mov
and
cmpsl
cwtl
and
add
inc
mov
aas
or
daa
jmp
sbb
lcall
push
mov
dec
cli
xchg
dec
jp
test
push
repnz
sbb
popf
cmpsl
or
in
add
lock
push
dec
fdivr
jns
mov
adc
push
add
cmpb
and
aad
and
sbb
jo
dec
inc
push
ret
jno
xor
je
push
dec
or
xor
add
add
inc
cmc
mov
push
or
imul
push
cwtl
pop
jl
xchg
pop
das
mov
jmp
adc
mov
and
pop
jl
cld
push
gs
je
ds
hlt
dec
add
sub
pop
loopne
lret
pop
dec
add
and
in
dec
inc
push
movsb
stos
adc
sbbb
fdivrl
sar
sub
push
push
nop
push
mov
shlb
inc
add
sub
push
test
xor
data16
add
ss
shll
popa
add
lea
dec
lahf
or
adc
das
out
inc
xchg
nop
push
pop
test
pop
shld
icebp
xchg
in
lods
inc
roll
or
or
jmp
xlat
ret
gs
jmp
inc
fmuls
dec
in
lods
bound
dec
push
or
imul
sub
xlat
add
adc
cld
das
popa
jns
loopne
loopne
push
push
mov
popf
mov
xchg
lods
cmp
dec
in
push
shlb
js
dec
or
dec
xchg
cmp
fcompl
jne
add
nop
insl
lods
add
and
movsl
jnp
push
pop
shrb
sbb
pop
call
in
fdivrl
inc
gs
subl
push
sbb
xchg
je
push
inc
adc
hlt
call
ljmp
mov
arpl
ret
push
lea
or
push
xor
decb
pop
push
cmpb
js
stos
clc
mov
stos
xchg
fimull
xor
pop
std
cmp
jne
lea
daa
push
adc
add
or
adc
adc
jmp
or
and
pop
in
add
test
mov
mov
es
add
ss
cmpsl
mov
stos
cmp
add
inc
xor
cmp
jae
push
lsl
jmp
mov
hlt
in
stos
pushf
cwtl
dec
and
test
jb
shrl
jmp
js
sbb
xor
nop
dec
jne
clc
mov
addb
rorb
ss
in
adc
pop
dec
mov
mov
hlt
mov
lea
mov
pop
rol
add
dec
es
push
inc
jo
in
movsl
and
icebp
mov
mov
fs
jg
pop
push
and
cmpl
adc
push
fsubs
and
add
js
xor
sbb
push
dec
dec
sub
inc
or
mov
pop
leave
in
sub
or
mov
sub
xlat
add
fwait
pusha
or
sbb
enter
push
scas
loop
xor
sub
xchg
push
dec
inc
and
scas
loop
pop
pop
dec
push
or
inc
inc
push
cvttps2pi
dec
adc
jno
inc
jb
sbb
adc
ret
inc
and
dec
dec
sub
dec
xchg
insb
mov
cmpsb
adc
sahf
xor
insb
cmp
cmc
mov
je
adc
adc
jp
movsb
jo
xchg
mov
gs
in
jge
ja
mov
fidivs
ljmp
jno
cmp
adc
jo
data16
outsl
js
push
or
sbb
xor
pop
daa
push
jb
insb
push
cld
jo
adc
cmp
sbb
in
sub
inc
dec
imul
iret
add
and
mov
inc
jg
inc
call
pop
jl
subb
push
iret
arpl
sbb
cmp
and
jno
fimull
sbb
jns
adc
push
jno
rorl
or
mov
cmp
movsl
jmp
dec
sbb
lods
add
cltd
loopne
push
pop
xchg
or
fs
sbb
push
iret
mov
xlat
andl
aam
andl
and
sbb
pop
sbb
push
je
cmp
out
clc
push
fadds
push
push
xchg
inc
and
push
subb
addb
xor
cmp
fdivp
add
jne
sbb
sbb
mov
lret
sbb
push
inc
filds
push
movsb
fs
xchg
mov
jge
out
sbb
mov
add
xor
sbb
and
enter
stos
dec
cs
add
push
jno
cs
pusha
pop
aas
push
in
inc
mov
jecxz
inc
mov
inc
adc
cmp
test
lret
jp
lds
xchg
out
cmp
xor
pop
lea
jo,pt
and
mov
arpl
insb
push
and
sbb
nop
push
dec
shlb
int
xchg
cmp
cmpl
movsb
cltd
sub
test
mov
outsl
sbb
push
sbb
cmp
push
inc
shll
fadd
js
mov
je
or
dec
adc
imul
repz
cmp
mov
in
test
cs
stos
dec
addb
xchg
in
jo
dec
cmp
push
rcrb
outsb
xor
sub
add
ljmp
adc
lods
mov
dec
mul
insb
loope
pop
or
push
clc
jl
mov
addl
es
pop
js
dec
popf
pop
dec
in
adc
lret
push
mov
and
inc
add
lahf
and
jecxz
push
sbb
fldl
arpl
or
mov
sbb
ffree
aas
mov
ret
push
stos
mov
mov
ja
add
or
pop
pop
addl
sbbl
nop
mov
call
mov
pop
pop
dec
mov
add
pop
xor
addl
ss
adc
cmpsb
or
nop
cltd
dec
aam
rolb
fdivrs
push
out
cmp
je
or
rcrb
cmp
add
lds
inc
movsb
jns
jmp
ret
daa
dec
add
inc
xor
sub
and
in
jns
push
mov
loop
inc
and
testb
popa
mov
add
mov
mov
cmpsb
cmp
mov
jo
loop
jp
fisttpl
dec
xor
fisttpl
bound
or
outsl
jae
pushf
adc
sbb
pop
add
cmpb
je
mov
or
xchg
rorl
cmp
aas
xor
pop
dec
mov
ret
cmp
lock
mov
xlat
add
add
dec
jae
nop
add
or
icebp
shlb
aam
les
ljmp
or
adc
push
xchg
push
inc
inc
push
pop
adcl
mov
add
or
sti
push
mov
push
push
and
xchg
orl
xor
mov
fldenv
andl
or
lock
imul
jp
outsb
andl
push
sbb
aas
inc
mov
mov
sbb
cmp
xchg
sub
ret
mov
cmpsl
jnp
jp
test
test
adc
inc
adc
call
dec
inc
ficompl
jno
lods
and
push
push
dec
ds
pushf
sbb
clc
test
cmp
sbb
shl
or
fdivrl
push
adc
mov
pop
in
or
add
add
lret
cld
sub
xor
sbb
push
and
sbb
pop
cwtl
add
shrl
xchg
js
xor
jbe
aam
iret
mov
and
movsb
stos
mov
mov
or
sub
mov
and
dec
xor
sub
cld
ret
xchg
in
shll
imul
or
outsl
sbbl
mov
into
loop
cmp
adc
hlt
outsb
add
or
jp
rcll
add
dec
fsubs
jl
mov
es
je
push
mov
push
cli
mull
push
adc
add
pop
jns
shr
jp
decl
out
and
and
cmp
loope
int3
mov
in
jb
push
in
int3
subb
mov
or
xor
mov
sub
adc
cs
cltd
cmp
test
repnz
aas
jae
cs
push
adc
nop
xor
add
adc
sub
aam
dec
jae
je
mov
adc
nop
sbb
jle
cmp
inc
xchg
xor
jae
dec
pop
fisttps
xor
dec
ret
cmp
adc
call
push
adc
loopne
lgdtl
sub
aas
jnp
adc
nop
xchg
xor
dec
pop
nop
sbb
xor
jnp
fs
out
sub
or
arpl
nop
mov
mov
test
dec
sub
inc
adc
jnp
or
jmp
shrb
pop
dec
popf
je
rorl
dec
jo,pn
jle
repnz
scas
add
nop
sbb
movsb
inc
test
mov
pop
xchg
mov
cmp
lahf
pop
es
outsb
cwtl
sbb
dec
dec
inc
aaa
xchg
jnp
or
fs
js
or
and
push
dec
and
test
xchg
xchg
sbbl
fs
sahf
je
jl
or
adc
jl
or
mov
sub
je
into
mov
stc
jo
sbb
test
sbb
sub
test
add
loopne
adc
rorb
mov
mov
leave
xor
sarl
enter
xchg
xlat
test
and
mov
mov
out
js
mov
sub
inc
mov
and
mov
inc
add
test
mov
jecxz
mov
sbb
sbb
push
out
mov
lea
inc
sub
outsl
push
inc
aaa
or
pop
or
icebp
sbb
push
imul
pushf
data16
sbb
mov
sbb
mov
negb
sbb
jae
cmp
popa
adc
add
xchg
inc
cmp
mov
push
decl
fadds
fucom
shrl
rcl
push
sti
pop
fs
cmpsl
mov
ror
inc
pop
mov
and
jne
stos
mov
mov
gs
add
int
pop
inc
pop
sbb
add
mov
xor
aaa
insb
inc
mov
push
jo
aam
add
in
and
sbb
test
rclb
jge
js
jo
jns
add
sub
and
mov
dec
cld
add
sbb
inc
pop
and
push
test
fwait
jne
add
cmc
xor
addl
push
sbb
dec
pop
test
push
shlb
adc
add
mov
fs
push
jl
cmp
and
xchg
out
inc
mov
or
and
push
ja
movsl
sub
or
mov
adc
inc
lock
inc
dec
ljmp
or
repz
addr16
cltd
mov
mov
xchg
cmpsl
pop
adc
dec
or
sub
and
repz
cmpsl
or
pop
pop
bound
mov
sbb
mov
mov
cmp
or
mov
dec
mov
xor
mov
ss
mov
das
inc
pop
and
mov
movsb
cli
xor
mov
push
sbb
aas
and
push
test
js
pop
jnp
test
xor
cmp
frstor
outsb
mov
or
pusha
dec
or
mov
ljmp
add
repnz
add
sbb
pusha
xor
pop
jmp
mov
cltd
sub
or
sbb
pop
push
in
sbbb
sbb
pop
aam
sbb
mov
sbb
repz
and
stc
push
cld
mov
add
inc
push
sbbb
mov
cmc
or
mov
adc
movzbl
mov
test
xchg
and
add
arpl
pop
or
pop
or
pop
mov
enter
fs
and
pop
sahf
cmpl
adc
cmp
jbe
or
push
inc
enter
fisttpl
and
xor
jp
add
sbb
push
push
loope
in
and
sub
loopne
je
aam
and
loopne
add
fs
mov
insl
gs
sub
pusha
leave
inc
add
or
add
add
mov
andb
cmpl
pop
xor
cmc
inc
ljmp
test
pop
xchg
xlat
mov
or
mov
or
sbb
test
daa
test
lods
mov
mov
lods
cmp
je
xor
adc
pop
push
dec
mov
lods
and
es
add
push
jecxz
dec
fimuls
fcomp
dec
mov
push
push
arpl
add
dec
loope
mov
popf
lcall
push
lcall
fsubrs
bound
sub
cmp
jae
andl
inc
xor
mov
sbb
and
cmpb
lock
lods
sbbb
push
dec
push
add
pop
dec
adcl
mov
xchg
sbb
dec
les
jge
or
push
adc
adcl
mov
adc
adc
imul
add
movsl
leave
inc
add
cmpsl
xor
ljmp
cmp
in
test
rclb
dec
pop
jmp
fwait
sbb
pop
and
cmpl
fstl
and
adc
in
dec
cmpsb
push
int
lock
cwtl
mov
in
cmp
add
add
inc
pushf
adc
jg
popa
pop
cmp
jne
cmp
int3
pusha
add
dec
inc
inc
sbb
in
push
push
sbb
pop
add
inc
push
push
lcall
adc
adc
insl
inc
sub
adc
fwait
inc
es
mov
pop
cs
incl
push
sbb
or
push
inc
pusha
mov
cmpsb
aas
leave
rol
data16
xor
xor
stc
mov
pop
adc
adc
jmp
cmp
cld
and
sbb
lea
call
in
sub
mov
add
jns
jmp
loop
test
adc
inc
and
inc
cltd
mov
loopne
add
xor
jmp
sarb
xchg
cmp
mov
fisttps
push
aad
cmpsl
cmp
jne
pushf
xchg
or
push
clc
insb
cmpsb
rorl
fsubl
jecxz
xchg
jb
arpl
shrb
push
fcoml
sbb
add
cwtl
inc
jno
arpl
add
fs
cmp
jne
mov
sub
test
or
sbb
jo
enter
adc
push
imul
cmp
fwait
sub
mov
xor
out
mov
dec
mov
xor
push
jno
adc
add
dec
sub
jb
dec
mov
cld
pop
cmpsl
int
and
inc
xchg
test
push
mov
and
xor
xchg
sub
lret
or
pop
pop
in
add
outsb
or
cmp
push
les
aaa
push
add
push
mov
push
cmp
jae
mov
test
ret
mov
lea
icebp
or
cmp
add
push
add
sti
push
pop
cwtl
jns
mov
test
pop
adc
add
or
rol
orl
push
dec
push
inc
dec
cmp
cmpsl
rorb
dec
dec
sbb
movsl
sub
adc
and
ret
ss
clc
cmp
pushf
ds
sbb
jo
inc
adc
aaa
mov
ficompl
adcb
pusha
xchg
sbb
inc
popf
add
or
insb
fstps
stc
xchg
xchg
cmpsl
test
adc
add
and
or
sub
add
lods
mov
vprotb
push
and
test
mov
fcoml
jg
test
jo
repz
aas
xor
mov
movsl
sbb
daa
aam
lahf
dec
dec
outsb
jle
xchg
and
xchg
mov
in
push
daa
push
fimull
push
push
mov
test
add
mov
adc
pop
aaa
jb
pop
pop
dec
mov
and
outsl
cmp
je
out
lea
or
int
sub
inc
xor
cmc
mov
lods
add
jecxz
inc
cmpsb
stos
pushl
aam
inc
xchg
subb
push
int3
inc
cmpsb
inc
andb
mov
adc
xor
pop
cmp
cmc
sbb
cmp
jle
push
aad
dec
enter
sbb
daa
sub
add
jno
xchg
add
sub
push
data16
adc
sbb
add
jg
ss
pop
sbb
mov
mov
pop
or
sbb
in
mov
xor
add
push
push
mov
adc
cmpl
enter
pop
jp
loope
adc
push
sub
mov
and
outsl
shrl
sub
or
pusha
mov
inc
lea
lods
adc
lods
jno
add
dec
shll
xor
dec
out
cmp
mov
mov
push
jle
imul
pusha
pusha
and
addb
fcmovnu
shrb
jo
mov
cwtl
test
jbe
sub
xor
cmp
xchg
add
mov
xchg
je
mov
icebp
and
shrd
adc
and
pop
jo
test
cmp
sahf
dec
es
mov
test
lods
inc
add
xchg
push
mov
sbb
add
outsb
push
pop
inc
dec
and
sub
addr16
sub
in
test
pop
scas
mov
sbb
movsb
imul
ljmp
push
imul
mov
and
insb
ss
mov
cmp
pusha
ret
ss
mov
push
inc
pop
add
xchg
pop
dec
push
or
rcrl
add
or
xor
or
push
add
add
lahf
jmp
cmp
inc
sub
add
pop
pop
or
adcb
cmp
imul
pop
inc
jb
and
inc
mov
xor
mov
push
xchg
xchg
add
xor
orb
add
or
incl
xor
add
push
cmp
and
idivl
nop
add
leave
inc
cmp
jne
es
mov
sarb
and
and
mov
jmp
sbb
push
or
inc
imulb
and
mov
imul
sub
add
mov
mov
adc
addb
jnp
push
lahf
sub
jle
lods
pushf
add
jae
testl
add
and
xor
dec
outsb
aad
outsb
pop
mov
push
mov
pop
mov
gs
cmp
mov
data16
imul
inc
loope
movsb
fld
ror
orb
cmp
test
mov
xor
fs
xor
ret
call
push
ficompl
imul
cmp
jle
jle
xor
rcrl
push
pusha
add
or
pusha
cmp
leave
add
fs
insb
lahf
push
adc
inc
fildll
fisttps
pusha
cmp
add
push
rorl
sbb
cmpsl
push
jnp
push
lds
mov
leave
jl
adc
popf
xor
iret
int3
xchg
lcall
sarb
sbb
psrad
stos
adc
cmp
pop
test
movsb
fimuls
jnp
movsb
jns
jle
add
dec
sub
mov
inc
inc
push
mov
jle
adc
jno
cmp
add
or
inc
add
jl
inc
cmp
xor
lods
dec
rclb
mov
mov
js
int3
xchg
shlb
xchg
repz
push
xchg
mov
clc
out
cmp
or
pop
dec
pop
ret
pop
adc
xchg
add
jle
jne
push
pusha
xchg
inc
add
xchg
cmc
add
push
arpl
xchg
mov
push
lock
lods
add
repnz
add
sbb
je
fadds
mov
test
sbb
adc
ficoml
sbb
shrb
push
jp
leave
sub
je
push
jne
lea
inc
rcll
ja
add
add
sub
jo
fs
pop
rolb
cmpl
rorb
push
mov
lock
pop
sbb
push
push
mov
clc
mov
pop
insb
cmpl
scas
nop
js
mov
sbb
and
inc
test
loope
mov
popa
ljmp
lds
push
and
mov
test
jl
add
aaa
jle
add
lods
and
jo
and
imul
pop
jno
jae
pop
add
add
adc
sub
inc
cld
inc
je
mov
dec
pushf
scas
pop
cmc
cmp
lods
mov
daa
repnz
push
add
sub
jnp
xchg
pusha
decl
add
adc
inc
int3
loop
addl
sbb
cmp
mov
dec
adc
scas
popa
mov
add
push
mov
dec
push
inc
push
popf
jle
add
cmpb
mov
lock
mov
loope
push
cmp
push
or
or
push
push
mov
xor
sub
mov
push
ret
fwait
subl
jno
sbb
sub
lock
push
mov
mov
test
xor
inc
pusha
setle
addl
cs
push
sar
int3
mov
mov
push
inc
jo
pop
jmp
sbb
push
jl
or
aaa
test
sub
cltd
sbb
lahf
je
dec
lcall
es
rolb
int
lock
inc
or
shll
rcll
or
fs
rolb
push
jb
imul
rorb
and
loopne
mov
add
arpl
pop
add
mov
enter
add
lock
ljmp
sbb
push
inc
xor
inc
sbb
mov
sbb
cmp
outsl
mov
xor
into
lret
out
pop
in
adcl
ficomps
dec
sub
repnz
or
add
fidivrs
jp
jecxz
push
jl
test
sbb
and
push
pop
push
scas
mov
popf
push
test
adc
mov
sbb
adc
bound
sbb
pop
pusha
cld
lcall
sbb
mov
add
push
pop
and
ret
sbb
and
dec
and
push
and
dec
adc
add
popa
jge
add
cli
inc
dec
xchg
adc
add
cltd
add
insb
xor
testb
je
enter
sbb
mov
add
cwtl
fmul
or
fisubrl
and
jb
or
push
dec
lcall
pusha
enter
inc
xor
adc
ficoml
jb
insl
int3
mov
stos
and
jge
pop
sbb
jo
mov
jl
les
in
xchg
cmp
jo
dec
and
stos
loope
add
add
gs
xchg
insl
imul
inc
jle
push
sarl
xor
and
xchg
mov
cli
jl
sub
jmp
shll
pop
nop
mov
js
inc
dec
ljmp
outsb
sahf
mov
aad
jo
dec
or
or
add
dec
mov
loopne
fs
adc
adc
pop
pop
je
and
out
fwait
push
push
pushf
sbb
gs
push
dec
push
daa
int
xchg
push
sub
pop
or
and
test
fwait
sub
adc
pop
sub
imul
xchg
insb
fistl
mov
mov
pusha
test
mov
cmp
adc
nop
add
add
inc
sub
lea
add
mov
cmp
icebp
push
jbe
in
fwait
shlb
testl
xor
ljmp
enter
sbb
addr16
inc
inc
ljmp
inc
and
sbb
imul
repnz
and
push
add
pusha
mov
int3
xchg
xor
or
jge
push
inc
xor
xchg
xor
aam
adc
sub
in
cmp
mov
insl
pop
orb
sbb
iret
add
dec
adc
dec
mov
fcmovnbe
loope
call
repnz
out
inc
clc
or
nop
or
sub
sbb
lahf
sub
dec
inc
dec
mov
push
jnp
xchg
mov
dec
pop
leave
inc
pop
sbb
insb
loopne
push
mov
insl
cmp
test
cmp
je
movsl
jb
sbb
mov
or
or
lods
adc
push
shlb
subl
inc
sbb
or
sbb
insl
mov
xor
inc
ret
xor
push
mov
out
and
popa
or
jmp
add
xchg
or
mov
insl
or
mov
mov
sbb
sub
nop
out
in
xor
fisttps
or
inc
xchg
mov
adc
pop
jp
push
test
sub
dec
xor
and
mov
mov
sub
dec
add
and
and
sti
xorps
sub
inc
pop
call
mov
fwait
cmc
lret
das
sub
test
mov
push
or
sbb
and
add
mov
xchg
add
rorb
insl
dec
jl
mov
dec
mov
mov
dec
pusha
xchg
stos
mov
add
leave
sbb
lods
bound
sub
inc
sub
cmp
push
and
xchg
adc
and
imul
fcmovbe
add
xor
enter
adc
or
enter
push
and
push
and
or
push
nop
jmp
lea
ret
sbb
popf
and
mov
or
pop
sti
and
pop
pop
cmpsl
and
sbb
push
jbe
out
dec
jo
sub
adc
push
and
ret
imul
loopne
mov
xor
inc
pop
sbb
popa
pushf
ficomps
push
mov
lds
push
push
and
and
pop
mov
mov
adc
add
leave
sbb
sarb
inc
dec
dec
or
add
xchg
inc
dec
dec
push
mov
and
dec
add
inc
shrl
and
movsb
add
icebp
or
popf
lods
lea
sub
mov
outsl
sub
test
push
sub
push
cmpb
insb
cs
cmp
inc
nop
lret
pop
or
aaa
or
jns
push
mov
dec
pop
je
daa
test
cmp
shll
and
xchg
push
aaa
and
xor
or
stos
fstl
ss
mov
aad
inc
pop
push
rcrl
push
add
pop
mov
dec
jne
mov
mov
sub
cmp
push
aam
push
sti
xor
xchg
pop
insb
add
cmp
xchg
out
lods
call
adc
inc
lods
mov
sub
push
jecxz
hlt
movsb
ds
push
add
add
adc
sarl
adc
adc
push
loopne
pop
jo
das
add
mov
enter
pop
add
push
add
push
inc
pop
push
pop
push
add
add
and
sub
dec
jmp
test
rcl
adc
xlat
inc
mov
rorl
imull
fs
fstps
lret
mov
dec
mov
fcompl
adc
addb
ljmp
add
pop
mov
xchg
aam
push
push
sahf
xchg
adc
subb
and
dec
mov
test
dec
daa
adc
nop
pop
add
lds
outsb
imul
dec
push
add
cmp
xor
in
push
lods
mov
enter
int
lcall
imul
je
pop
mov
sahf
push
xor
push
xor
jmp
adc
adcb
xor
incl
cmp
leave
add
or
dec
pop
mov
xchg
and
adc
ret
sub
stc
mov
adc
fs
insb
mov
sarl
sub
repz
push
icebp
pushf
or
push
push
mov
dec
and
ror
xchg
push
pop
sub
out
nop
inc
in
mov
push
pushf
clc
mov
mov
fidivl
mov
jb
jmp
bnd
sub
dec
or
pop
and
or
push
repnz
enter
or
jo
or
adc
dec
xchg
add
jl
adc
xchg
sti
jb
cmpsl
add
xor
dec
mov
lods
dec
out
aad
dec
jb
mov
and
pop
fs
push
sti
ds
cmp
jne
mov
in
or
xchg
push
sbb
sub
sbb
int3
cwtl
sbb
xchg
call
or
xor
sbb
fcom
imul
inc
outsb
xchg
sbb
test
pop
in
sbb
push
sub
nop
inc
sbb
nop
rcrb
push
or
and
xchg
inc
rcrb
cmpb
and
repnz
and
adc
iret
add
les
repnz
cmpb
faddl
xor
sub
cmp
and
sub
dec
subb
lea
cmp
pop
sub
push
fs
stos
cmp
pop
dec
pop
dec
xchg
and
and
lahf
je
or
pop
jbe
lcall
ret
pop
push
fsubrs
aam
and
add
sarb
je
xor
orl
push
jl
fstl
mov
add
cwtl
sbb
in
cmpsb
les
lock
std
outsb
add
or
jl
push
or
push
sbb
jo
pop
mov
loop
out
cwtl
dec
push
add
jb
loopne
mov
ret
jmp
sbb
add
stos
mov
mov
inc
rorb
andl
stc
sarb
sub
mov
mov
dec
cmp
or
push
xchg
jno
loope
loopne
adc
xchg
sbb
xchg
out
fs
mov
in
aas
in
es
inc
insl
in
cmp
cld
inc
fcomps
inc
jb
add
push
hlt
adc
aam
or
inc
xchg
jnp
rcrb
pop
sbb
adc
imul
jl
inc
lods
xor
jmp
mov
in
out
mov
adc
and
ret
adc
pop
mov
push
mov
lea
and
rorb
enter
push
sarb
iret
inc
fadds
add
dec
addb
add
xor
lods
ds
jae
xchg
dec
jno
cmp
cmp
cmp
cltd
dec
mov
push
cmp
xchg
mov
arpl
add
cmp
outsw
inc
jge
inc
addr16
inc
lea
mov
je
iret
fwait
sub
sbb
ljmp
rol
dec
arpl
in
mov
and
xor
dec
dec
push
outsb
pop
mov
jg
into
adc
pusha
nop
adc
rcl
pop
mov
push
xor
xor
adcl
jne
add
sub
mov
mov
imull
sbb
rclb
dec
jl
sbbb
and
je
xchg
adcl
add
or
jb
mov
int
enter
add
jmp
xchg
jnp
cmp
fadds
adc
mov
adcb
dec
inc
rclb
or
cmp
push
in
push
mov
pop
dec
jecxz
outsl
jmp
fwait
push
mov
cmp
add
push
push
push
dec
fstpl
in
push
mov
sub
sti
or
push
inc
inc
sahf
test
pop
lea
loop
push
pop
and
push
sbb
push
xchg
inc
lea
out
sbb
mov
mov
xchg
sbb
xor
test
mov
jbe
inc
es
cltd
add
lods
mov
in
push
ret
inc
in
fmul
dec
mov
dec
pop
insl
or
insb
mov
add
add
pop
push
fs
lock
fnsave
lods
test
sub
push
dec
xor
add
pop
and
dec
leave
add
nop
and
test
and
pop
dec
dec
pop
ret
inc
push
call
sbb
or
sbb
scas
sbb
push
add
pop
aaa
mov
nop
mov
icebp
mov
push
xlat
lods
push
aaa
ljmp
push
jno
push
or
cmp
add
sbb
add
or
mov
jp
push
fs
sub
push
dec
adcl
sbb
inc
orb
pop
pop
push
js
mov
push
sbb
and
sub
cmp
lret
inc
xor
test
iret
xchg
lods
fs
sbb
sbb
cmpb
inc
xor
inc
or
inc
sbb
fcompl
jo
or
push
pop
xchg
push
mov
adcb
and
clc
ror
sub
xor
push
mov
xor
xor
filds
pop
add
push
sbb
xchg
sub
cmp
xor
nop
or
test
dec
lods
sbb
and
mov
cmp
shlb
push
xor
or
inc
clc
popl
daa
or
push
mov
pop
sbb
push
and
loopne
push
sbb
arpl
rorl
xor
push
jae
ss
lds
jne
adcb
aad
popf
lods
imul
or
sub
and
inc
dec
jo,pn
inc
sbb
pop
xor
ja
lea
xor
pop
scas
rclb
push
popa
in
push
and
sbb
mov
mov
mov
cli
mov
insb
xchg
imul
js
cmpsb
shrl
adc
popa
xchg
pop
sbb
or
jo
fs
pop
pop
lods
test
pop
and
cmp
adc
xchg
push
in
xchg
dec
xchg
push
and
addr16
cltd
ljmp
lcall
scas
sbb
int3
scas
fcmovbe
cwtl
pop
mov
or
add
add
cmp
push
test
pop
add
dec
cmp
test
inc
ss
pusha
mov
xchg
pop
add
lds
push
add
push
add
mov
pop
shl
jb
imul
push
insl
pop
daa
fs
shll
add
jmp
mov
push
lods
or
jmp
in
or
push
pop
aam
insl
push
cmp
jae
call
repz
out
pop
jmp
mov
cmp
jae
mov
pusha
add
push
xchg
out
ja
inc
jne
mov
or
push
fildll
push
jns
push
stos
jmp
stc
add
sbb
xchg
shll
jnp
adc
out
push
lea
pop
add
repnz
mov
jns
and
jnp
add
cltd
aam
add
xor
jl
add
ret
jnp
or
in
pop
add
push
jmp
push
adc
mov
cmp
inc
jo
push
mov
inc
outsl
lcall
or
push
mov
daa
jge
ja
das
sub
sub
imul
arpl
add
test
push
dec
adc
xor
pop
leave
inc
pop
xorl
lahf
rclb
dec
xchg
jecxz
mov
movsl
inc
ss
loopne
add
sbb
fbld
or
adc
pop
imul
lods
mov
xchg
cmp
push
test
pop
pushf
rcl
and
into
ret
inc
sub
or
or
push
cmpsl
pop
adc
and
mov
arpl
sahf
cmp
sbb
inc
test
mov
or
add
mov
pop
das
stc
pop
add
iret
add
jne
mov
test
push
sbb
mov
cmp
push
mov
int
sub
dec
add
dec
subl
add
roll
inc
sub
divl
pop
push
test
and
adc
inc
sub
repnz
xorl
or
pop
sub
jmp
test
outsb
xor
or
sub
xor
or
cltd
xor
push
jno
cs
ljmp
cmc
sub
mov
pop
inc
je
fwait
push
and
inc
outsb
push
adcb
mov
mov
and
and
or
cli
cltd
addr16
mov
jecxz
or
jb
daa
pop
push
add
add
and
mov
adc
mov
add
xor
and
out
inc
sub
mov
or
push
dec
xor
sbb
lahf
fistl
push
in
sub
imul
loope
inc
adc
and
mov
adc
popa
xchg
pop
mov
sbb
adc
cmc
and
imul
pop
ret
push
inc
cmp
jae
mov
loopne
add
int
test
push
xchg
rolb
std
jl
aad
pop
sbb
xchg
cmovno
std
incl
lock
sbb
imulb
xchg
jl
push
and
std
add
jge
add
sarb
sub
sbb
push
mov
add
pushw
sub
mov
add
ljmp
push
mov
or
lahf
imul
sti
mov
and
mov
sbb
add
pop
push
and
xor
or
mov
mov
push
inc
and
movsl
mov
mov
shlb
sub
add
xchg
add
in
push
adc
and
xor
inc
fisubl
push
pop
cwtl
rolb
imul
cmpsb
xor
fs
insb
out
imul
mov
rcrb
iret
or
xchg
ds
pushf
bound
and
in
bsf
cmp
pop
cli
pop
inc
sub
and
add
ret
bswap
cmp
xchg
mov
jb
push
out
and
cmp
loopne
xchg
nop
inc
insb
cmp
adc
and
sub
add
lods
xor
inc
jo
test
mov
cmp
jmp
jmp
mov
push
sbb
push
test
add
add
adc
xlat
sub
pop
or
outsb
mov
inc
and
jp,pn
orb
pop
insb
cmp
inc
jb
syscall
lahf
in
addb
rclb
and
or
dec
inc
mov
adc
mov
adc
xchg
mov
test
sub
lea
dec
pop
adc
inc
push
cmp
inc
and
cmp
push
popa
arpl
in
xlat
out
fmull
xchg
int3
adc
test
jg
or
test
push
cmp
push
and
fmull
sub
push
adc
movsl
xchg
pusha
mov
aaa
jecxz
dec
or
push
mov
in
orl
mov
pop
fmuls
dec
mov
push
daa
cmc
das
jne
xchg
daa
out
out
mov
popf
xchg
jne
jno
push
fdivrs
mov
adc
mov
push
cmp
in
inc
and
in
push
cwtl
inc
push
daa
push
hlt
out
flds
sbb
shl
pop
xor
push
scas
andb
mov
mov
xchg
fstps
add
pop
and
in
mov
dec
loope
and
or
lock
fnstsw
mov
movb
in
stos
in
cmp
jne
push
pushf
add
loopne
aam
add
push
pop
mov
pop
push
mov
push
jl
sub
mov
or
pop
lock
sbb
push
pop
mov
test
test
imul
dec
lock
cmp
mov
out
std
pushl
pop
push
adc
je
cmp
je
cmp
je
cmp
je
shr
pop
xchg
push
fwait
push
push
mov
in
lods
lahf
jnp
push
idiv
mov
fwait
mov
or
or
stos
lock
pop
shll
js
sbb
das
jmp
push
push
ret
jnp
inc
push
in
dec
inc
hlt
inc
and
adcl
mov
sarl
or
adc
push
jl
cmpb
jne
lods
lret
das
aam
ret
add
push
jecxz
hlt
icebp
cmp
je
adc
sub
cmovno
pop
ret
addb
pusha
lret
movsl
cwtl
pushf
xor
jle
adc
jge
cmp
adc
shl
rorl
test
xor
lods
pop
adc
pop
fcoml
push
movsb
shl
inc
popf
sbb
sub
movsl
rolb
push
mov
lret
mov
punpckhbw
add
xchg
mov
add
xchg
xor
push
sbb
ret
scas
xchg
mov
or
add
xor
arpl
cmpb
jmp
mov
pusha
cmp
cmp
test
mov
shll
jne
and
je
push
adc
sub
js
in
lods
adc
pushl
push
testb
lahf
mov
popa
mov
adc
cmpsb
mov
inc
leave
mov
and
stos
les
repnz
stos
aaa
xchg
xchg
mov
dec
mov
dec
test
jge
push
xor
dec
mov
add
test
push
sub
jbe
dec
les
lods
adc
jle
pop
out
cmp
fwait
loop
cld
psubb
pop
cld
sahf
nop
push
and
cmp
les
mov
lock
xchg
pop
and
data16
xor
adc
ret
xor
push
adc
lods
and
and
es
lds
and
xchg
adc
pop
pop
add
dec
sub
jo
cmp
push
movsb
mov
mov
icebp
mov
mov
ja
mov
in
add
icebp
mov
mov
nop
sub
arpl
bound
and
add
push
jno
push
aad
mov
pop
xchg
jg
add
rorb
jl
sub
bnd
inc
sbb
mov
adc
push
fdivrl
or
movsb
inc
data16
xchg
es
xchg
pushf
xor
dec
and
add
mov
inc
and
mov
cmpsb
sub
and
xor
push
push
pop
jns
mov
pop
dec
adc
lcall
test
adc
inc
mov
dec
icebp
outsb
xor
xchg
mov
call
cmp
jae
mov
dec
in
mov
outsl
fs
popf
inc
pushf
mov
push
sub
sub
ss
rclb
sub
mov
sub
adc
and
dec
sub
push
and
add
xchg
sub
lret
add
add
pusha
push
jns
cltd
rol
sbb
add
jns
dec
js
mov
mov
std
mov
fisubl
sbb
push
push
dec
xor
push
je
inc
add
push
mov
nop
and
je
or
enter
call
fnstcw
outsl
mov
shlb
jne
mov
cs
jmp
notb
xchg
lea
mov
clc
sbb
adc
jno
in
jb
outsl
cmpl
mov
push
pop
mov
mov
icebp
insl
adc
movsl
lds
adc
test
adc
xchg
je
scas
push
xchg
or
jne
sbb
or
sbbl
shrb
cmp
cmpsb
or
inc
jge
fistpll
pop
xor
dec
enter
movsl
and
or
je
push
push
jo
xor
fcmovnb
ret
xchg
scas
sbb
adc
cmp
roll
inc
adc
mov
dec
mov
push
push
mov
inc
push
call
dec
add
lock
or
mov
jae
or
push
add
xchg
push
nop
jbe
pop
int
sub
ret
jbe
mov
xor
sub
and
or
pop
lock
adc
sbbb
push
cmp
push
cmpsb
mov
movl
aam
incl
clc
aaa
add
mov
inc
inc
and
add
repz
addb
je
jp
andl
mov
xchg
dec
ret
or
test
push
sahf
clc
test
cmpb
and
popf
daa
es
je
add
jl
xchg
lock
shl
push
sub
cmp
sbb
add
lods
adc
je
add
add
int3
xor
ret
mov
add
or
pop
sub
push
popa
sub
and
inc
loopne
data16
ret
sub
sub
scas
ret
or
sub
sbb
sar
jg
rcr
push
add
push
outsb
insb
xchg
xor
movsb
je
and
or
fistps
movl
jl
fisttpll
push
mov
movl
inc
clc
decl
cmp
jne
and
mov
jnp
push
sbb
ret
add
insl
cmp
inc
or
xor
sub
ja
sbb
dec
and
push
xchg
add
adc
adc
in
sbb
mov
jnp
les
inc
mov
and
pop
pop
imul
push
jmp
lock
add
sub
xor
push
and
pop
cs
lret
push
dec
addr16
sarl
inc
test
push
jo
js
inc
in
in
jmp
rclb
test
addb
clc
add
push
insl
push
add
call
sub
mov
dec
sub
ja
stos
pop
cmp
mov
pushf
pop
adc
mov
rorl
adc
or
push
inc
xchg
scas
xchg
ss
sbb
or
pop
bound
push
xor
stos
cli
or
mov
int
lock
ret
jg
add
push
lea
test
cmpl
dec
out
sbb
cli
push
sub
push
push
push
xchg
divl
mov
mov
push
push
push
mov
les
movb
xchg
jo
out
sbb
and
loopne
pavgb
push
enter
test
push
in
popf
shr
adc
inc
ja
push
frstor
sbb
pop
fiadds
inc
shrb
cmovle
cmp
dec
jl
jecxz
pop
and
jb
or
inc
ret
rorl
adc
popf
mov
add
jns
and
rorb
push
out
inc
jmp
inc
fildl
jg
invd
push
pop
mov
cmpsb
fbld
cmp
push
pop
mov
stos
jecxz
inc
testl
cmp
or
pop
dec
ret
pop
addb
andl
in
es
jne
cmp
jo
and
jnp
ljmp
or
fsubrs
jecxz
adc
push
fst
cmp
adc
or
jo
jge
hlt
popf
lret
dec
loope
cmp
sbb
adc
subl
movb
push
sbb
fcomps
push
adc
or
aad
mov
shl
mov
jg
mov
xchg
pop
pop
or
or
sub
adc
addl
aad
mov
pop
in
or
dec
xor
xor
out
push
jne
test
insl
pusha
lock
push
enter
dec
dec
das
lea
push
sbb
mov
sahf
mov
mov
push
sbb
or
ficomps
mov
nop
test
jl
out
jno
jecxz
cmp
push
mov
xchg
das
adc
ss
rclb
ja
and
fmuls
shll
addr16
dec
jo
shrb
scas
testl
and
add
or
pop
xchg
push
sar
cmp
mov
or
sub
xchg
cwtl
shll
js
mov
ds
inc
add
xchg
inc
sub
adc
pop
jmp
push
js
dec
add
jo
mov
insb
mov
inc
cmp
cmpsl
dec
mov
sbb
test
je
sub
xor
lea
or
or
add
or
push
roll
inc
lea
xchg
jns
and
in
jle
sbb
movsb
pop
lcall
adc
and
mov
mov
push
dec
add
xor
add
adc
inc
dec
hlt
sahf
into
jle
cmpsl
aas
out
cli
ljmp
test
rorb
in
sbb
lods
jo
and
iret
mov
jmp
add
les
inc
xor
push
pop
push
fnstenv
add
or
rolb
fistps
sbb
bswap
sbb
es
in
cmp
mov
mov
add
add
cmp
xor
add
cmpl
test
or
add
adc
inc
leave
sbbb
popf
push
xor
test
aam
leave
lds
ret
sahf
lret
push
mov
xorb
adc
arpl
pop
mov
add
lcall
mov
lahf
in
sub
inc
add
add
aam
call
je
lret
adc
xchg
lods
xor
add
adc
or
dec
or
scas
mov
lods
inc
lods
aaa
mov
test
dec
add
lods
push
nop
arpl
pop
into
lea
out
or
incl
push
jne
cmp
jb
sub
jmp
push
std
adc
mov
pop
dec
pop
cmpl
push
setl
movzbl
fisubl
pushf
test
sub
dec
and
sub
or
lret
fs
rcll
and
add
xchg
pop
jl
add
roll
jns
add
add
dec
push
insl
or
sub
inc
mov
push
lahf
jmp
push
jne
cmp
je
orl
or
adc
jns
lods
iret
pop
jns,pt
test
xchg
adcl
push
inc
mov
sub
add
mov
push
mov
cs
xchg
inc
mov
js
mov
sbb
add
xor
push
pop
aas
loope
pop
gs
push
push
mov
fbstp
movsb
mov
adc
add
or
and
xchg
cmp
mov
xor
dec
mov
xor
adc
sbb
ds
push
pop
sbb
jns
or
movsl
lds
and
sbb
xor
xchg
sub
or
cmp
xor
push
cmc
xchg
test
sub
dec
cmp
mov
inc
dec
pushf
and
add
adc
pusha
inc
mov
push
and
out
das
xor
int3
or
lcall
adc
mov
push
xor
sub
add
adc
sahf
mov
xor
mov
sub
adc
pusha
dec
mulps
sub
subl
std
or
repnz
and
inc
sub
cmp
sbb
cmp
dec
xor
adc
rolb
pop
fstpt
dec
adcb
lods
scas
leave
rcll
or
rorb
mov
in
mov
aad
mov
add
test
adc
inc
and
lret
inc
inc
pop
sbb
add
push
lock
adc
int
pop
xchg
outsl
adc
mov
dec
je
push
jns
inc
rolb
arpl
inc
enter
jo
lret
add
push
dec
xorb
jp
cmp
ret
cld
jg
jne
add
push
mov
inc
sbb
cmp
es
or
jmp
xor
cltd
xor
and
inc
pop
mov
lahf
out
loopne
imul
fwait
adc
adc
push
xor
orb
and
add
jle
or
in
shrl
out
adc
pop
lea
or
or
mov
repz
cmpb
jne
xchg
lods
and
enter
add
xor
add
add
push
xor
sbb
add
push
daa
arpl
icebp
push
mov
arpl
incb
adc
shlb
or
push
add
pop
cmp
fidivrs
es
sbb
or
in
adc
pop
dec
cli
and
cs
jge
leave
leave
push
lret
adc
addl
or
pop
cmp
mov
or
add
adc
dec
jns
std
decl
mov
es
inc
xor
shll
mov
xchg
cmp
fdivs
and
add
sbb
cmp
sti
jbe
test
add
js
lret
mov
pop
or
sbb
and
inc
push
in
inc
stos
addb
push
mov
sahf
js
add
insl
std
int
out
ss
dec
lods
into
or
shrb
push
push
lret
push
cmp
xor
xchg
add
push
jg
adc
inc
sahf
jg
adc
cltd
cmp
sbb
ret
sbb
cmp
jmp
push
call
pop
ret
push
cmpsb
pop
push
jg
jno
cld
dec
sub
jne
and
or
shlb
adc
repz
jg
cmpl
das
shrb
fmuls
sub
push
imul
sbb
or
mov
cmpsb
sub
sti
cmpsb
test
and
adc
sub
sbb
js
adc
aam
adc
test
mov
aaa
push
add
pop
add
adc
push
pop
xor
xchg
adc
lods
imul
cmp
push
jl
js
xchg
data16
sbb
add
pushf
rcll
repnz
sub
cmpsb
pop
xor
dec
addr16
pop
js
xchg
jne
pop
inc
pusha
and
inc
mov
mov
pop
sahf
push
xchg
pop
mov
add
push
sbb
mov
pusha
js
xchg
adc
loopne
andb
nop
call
lcall
ret
cwtl
dec
dec
roll
dec
dec
loope
adc
pop
js
je
add
js
enter
aaa
or
or
xor
movl
pop
mov
pop
and
and
enter
sub
cmp
daa
mov
lcall
inc
cmpb
pop
cmp
xchg
into
push
xorl
nop
mov
dec
or
lcall
pop
pop
xchg
scas
sahf
sbb
xchg
inc
mov
xchg
cmp
push
mov
adc
scas
add
and
dec
push
pmulhuw
jmp
push
xchg
dec
scas
inc
dec
adc
fisubrl
andl
pop
enter
adc
add
inc
push
add
or
nop
adc
daa
nop
mov
sahf
rol
scas
sub
inc
and
js
and
push
nop
cmp
lock
aaa
lods
mov
jns,pn
aam
pop
shrb
push
pop
addr16
fs
pop
or
es
fs
xor
rcrl
es
push
das
cmp
cmp
mov
sbb
cmp
repnz
pusha
push
rclb
sbb
pop
and
icebp
add
aas
out
jo
add
and
ret
inc
push
stos
pusha
orl
nop
aad
xor
fst
xchg
adc
mov
adc
icebp
addr16
xchg
jmp
adc
or
push
adc
pop
and
in
add
inc
jge
and
add
mov
sahf
popa
add
jmp
push
loopne
sub
adc
out
pop
inc
das
adc
inc
outsl
ret
xor
adc
jbe
sub
loopne
ret
xor
cmp
iret
roll
cmpsb
xchg
mov
dec
push
repnz
sbb
mov
mov
mov
or
and
roll
enter
pusha
push
dec
push
pusha
mov
lds
mov
pop
mov
int
sub
sub
push
mov
adcb
movsl
call
inc
jb
adc
hlt
das
stos
or
je
stos
jne
cmp
sub
popa
add
inc
sbb
addb
or
sub
pusha
and
pop
sbb
arpl
out
sub
add
into
and
fstl
push
incl
mov
mov
pop
or
pushf
outsl
jle
fildll
cmp
fimuls
dec
les
test
jns
mov
repnz
not
or
popa
add
std
or
incl
push
or
mov
test
cmc
jl
lea
cmp
push
mov
adc
dec
and
std
insl
push
aaa
lods
mov
pop
mov
dec
push
mov
mov
or
cmp
les
stos
push
inc
xor
jb
icebp
lret
pop
fcomps
aam
sbb
movsl
sub
js
in
pop
loop
xchg
shrb
hlt
dec
or
push
mov
dec
ljmp
add
or
enter
push
mov
mov
cmp
ret
pushf
mov
ret
fs
push
xchg
sub
test
sbb
sbbb
notl
xchg
clc
adc
pop
mov
sbb
dec
popa
sub
xor
mov
xchg
lcall
xor
into
dec
into
sub
fcmove
dec
fmull
xor
test
xor
xor
in
nop
jae
dec
cld
adc
jg
pop
pusha
xor
add
mov
mov
push
arpl
jno
dec
xor
add
pop
cmpsb
jb
jbe
loopne
adc
adc
inc
cmp
or
mov
pop
fisubrl
in
pop
push
xchg
movsl
sub
fmul
push
xchg
movsl
fisttpll
in
imul
dec
or
sub
mov
mov
add
mov
and
cmp
dec
pop
andl
jg
add
add
loopne
movsb
cmp
add
add
add
mov
or
daa
sub
mov
ret
add
push
ficoml
test
or
fimuls
sub
jb
je
out
add
and
jg
jl
cmp
adc
std
shrb
clc
dec
jp
add
and
daa
sub
cld
add
lahf
pmaxub
sbb
jl
mov
add
jge
mov
jmp
pop
mov
les
pusha
xchg
cmp
sub
cwtl
lods
outsb
push
mov
aas
out
mov
lea
movsb
addl
iret
lock
bound
cs
and
shr
cmp
push
mov
adc
push
push
push
and
adc
call
or
lods
sub
xor
sub
inc
or
add
push
inc
pop
push
call
mov
gs
push
and
ds
mov
xlat
faddp
xlat
enter
sbb
add
dec
jecxz
cs
xchg
loope
pop
cli
scas
sub
add
push
lea
and
jl
add
mov
sbb
or
mov
dec
cld
xor
into
sti
mov
xchg
stc
leave
ficoml
push
ret
push
cvtps2pd
pop
int3
pop
adc
or
xchg
xor
xlat
in
cli
add
sbb
pop
sbb
dec
mov
pop
push
sub
imul
outsl
inc
mov
jbe
mov
test
jne
push
push
cld
mov
push
loopne
cmp
je
outsb
dec
mov
inc
mov
or
idivb
call
sbb
into
ja
push
jecxz
cmovno
cmp
pop
jmp
inc
sub
xor
test
ja
push
push
inc
in
cli
ret
sbb
icebp
mov
push
ljmp
cmpsb
jge
add
pushf
sbb
hlt
in
mov
xor
push
jne
and
add
mov
jmp
fwait
sbb
xor
lods
or
sub
push
adc
dec
cld
cld
inc
in
clc
iret
add
jl
cmpl
cmp
cmp
subw
movzwl
sub
inc
add
imul
xor
inc
lea
fimuls
fadds
push
mov
inc
movsb
push
push
call
xor
jmp
orl
jmp
js
sarb
or
or
movsl
inc
push
lock
or
add
add
mov
clc
aam
notl
mov
orl
lret
pop
xchg
orb
adc
or
sti
lds
sarb
add
popa
mov
clc
add
loopne
pop
adc
decl
adc
inc
push
adc
xor
sub
push
in
or
adc
sbb
rclb
or
adc
pop
lcall
pop
cmp
leave
stos
jmp
or
or
jecxz
bound
dec
sbb
imul
mov
mov
mov
and
jb
jbe
mov
cmc
jo
mov
add
mov
push
cmpsb
mov
and
push
into
jge
jo
push
mov
in
mov
aaa
mov
int
xlat
imul
xlat
sub
popa
add
pop
or
push
add
jle
mov
mov
pop
shl
sub
rcll
inc
pop
pop
or
enter
popa
dec
lock
movsb
inc
mov
mov
push
xor
inc
loop
mov
loop
xor
cld
adc
nop
or
pop
pop
shlb
out
jmp
cmp
int3
jecxz
ret
sub
and
push
test
es
in
in
pop
and
mov
pop
jbe
or
lods
cmp
test
stos
xor
cmp
push
and
mov
and
pop
das
add
inc
xchg
pop
in
push
pop
in
std
jne
lcall
ds
dec
inc
add
pop
jne
mov
int
mov
push
cmc
js
push
add
cwtl
or
lock
int3
cmp
stos
dec
inc
sbb
in
lods
xor
jmp
ljmp
inc
cli
int3
stos
jo
addr16
cmp
mov
sbb
adc
push
cmpsl
inc
mov
or
xchg
jl
subl
je
mov
and
bound
adc
mov
sub
push
loopne
mov
test
call
xor
xchg
add
sbb
std
or
sbbb
pop
xchg
pop
cmpw
inc
mov
clc
les
sbbb
cwtl
loop
pop
cmp
addl
ret
data16
adc
jns
mov
hlt
sub
push
pop
dec
jb
out
or
pushf
ja
jg
add
inc
or
mov
cwtl
pushf
cmpsb
movsb
mov
or
sub
xchg
loope
mov
mov
push
sub
or
outsl
adc
adc
push
ss
pop
push
insl
sub
inc
adc
mov
daa
adc
jae
mov
push
and
push
or
add
pop
and
notb
sbbb
rcl
stos
int
adc
frstor
jge
rorl
push
rcrl
push
xchg
inc
dec
shr
hlt
dec
pop
dec
sarb
inc
mov
cmp
push
out
das
push
push
xor
add
bound
loop
push
sub
mull
cmp
push
or
imul
dec
add
adc
jle
rolb
add
rclb
shlb
out
push
idivb
mov
mov
mov
pushf
sub
aas
lds
test
and
scas
push
pop
mov
dec
adc
outsb
fwait
add
add
push
and
inc
push
andl
sub
ljmp
jae
cmp
or
mul
xor
popf
dec
cltd
dec
pop
dec
sbb
mov
xchg
shlb
cmpsb
jne
shll
push
cld
push
or
test
cmp
add
push
pop
inc
inc
push
dec
ja
popa
cmp
jmp
adc
roll
sbb
in
sub
cltd
adc
add
and
shl
insb
push
mov
inc
pop
dec
nopl
ss
adc
scas
es
mov
adc
int3
inc
add
rcrb
fisttpll
lea
loopne
push
xor
les
xchg
nop
inc
loop
rorl
js
lret
outsl
sahf
ret
cmp
sub
push
dec
sbb
lods
rorb
sbb
pop
cmp
daa
bound
je
cmp
jbe
mov
push
or
addl
aad
shl
insb
data16
pop
inc
sti
popa
sbb
lea
aaa
dec
je
mov
lret
or
add
not
add
shll
xlat
jb
sbb
int
push
dec
sub
repz
inc
xchg
stos
imul
or
xor
mov
xor
add
sbb
cmp
pop
cmp
mov
mov
mov
mov
test
xchg
pop
cli
cmp
cmp
mov
loop
test
dec
xor
leave
lock
shrb
mov
mov
inc
nop
loope
xchg
sub
pop
xor
inc
cli
test
sbb
jo
adcb
fwait
pop
push
loopne
sahf
cmp
push
xorb
mov
das
mov
out
jmp
cmp
push
sbb
pop
mov
ret
jle
out
adc
mov
xchg
mov
xor
addr16
inc
jl
and
mov
add
pop
movsb
hlt
mov
add
shr
cmp
xor
mov
retw
in
jo
insb
mov
pop
stos
int3
xchg
or
insl
addb
in
sbb
in
out
push
out
and
nopl
movsl
and
pop
rolb
mov
out
adc
clc
mov
mov
outsb
divl
pop
ja
test
mov
je
dec
adc
fidivrl
and
dec
jne
push
sarb
and
cmp
fdivrl
jl
stos
fcom
jno
daa
clc
sarl
pusha
push
enter
dec
xor
jns
mov
cs
add
push
jae
arpl
iret
repz
push
je
in
xlat
sahf
inc
or
push
or
loop
insb
jne
or
cmp
push
push
stc
daa
dec
and
inc
sbb
xor
scas
lea
dec
or
cmp
push
jo
fildll
out
pop
cmp
je
pusha
inc
ret
or
lock
mov
movsb
and
cmp
je
push
ficoms
int3
jne
test
outsl
cmpsb
push
or
mov
or
pcmpeqw
je
aam
xor
mov
cmp
add
mov
xor
lds
mov
mov
outsb
pop
pop
adc
or
jnp
daa
movsl
jnp
push
dec
jb
addr16
jmp
push
push
sahf
xchg
rclb
jp
dec
je
js
fsts
inc
fsubs
push
imul
inc
sbb
jo,pt
lock
sub
roll
xor
cmp
push
jae
pop
sbb
add
shlb
out
cmpsb
mov
cmp
jne
clc
mov
shr
les
mov
je
and
push
xchg
loope
xchg
or
rorb
rcll
or
push
dec
mov
push
das
sarl
ds
add
insb
fisubrs
pop
jne
cmpsb
add
dec
cltd
sub
adc
sbb
cli
sub
mov
add
dec
cld
movsb
sub
mov
or
add
cmp
dec
shll
pusha
fs
shll
js
pop
lcall
mov
cld
andl
add
xor
fimuls
mov
inc
int3
std
in
rol
fcmove
inc
mov
scas
aad
out
sub
push
and
pop
fst
cmp
add
xchg
int
xor
loopne
add
fmul
xor
test
popf
dec
dec
add
sub
push
fmuls
rorb
sbb
orb
jo
enter
push
orb
and
shl
push
or
adc
stos
add
xor
cltd
push
cmpsb
jecxz
adc
cmpb
sbb
test
fmulp
clc
adc
and
testb
dec
jo
bound
inc
mov
mov
mov
pcmpeqw
test
push
adc
scas
xor
jo
add
sub
or
xor
popa
add
in
xchg
int3
fbld
jmp
cmp
sbb
mov
iret
fs
jne
outsl
push
xor
sbb
ror
mov
or
cmp
xchg
cli
push
ja
or
mov
inc
shll
mov
add
or
ret
clc
ret
and
xor
aad
outsb
cmp
or
add
push
pop
pop
or
rcl
add
xor
cli
incb
out
mov
adc
imul
inc
jnp
add
and
rol
inc
ficompl
shl
ret
mov
orl
test
mov
jl
pop
js
xor
testb
push
sub
dec
or
adc
mov
notb
or
ret
inc
sbb
adc
cld
mov
adc
add
mov
pop
int3
or
or
incb
repnz
addr16
xchg
out
out
add
iret
cmp
xchg
cmp
jnp
jmp
in
clc
pop
lea
inc
xchg
lret
movsl
out
fnop
pop
jmp
roll
mov
scas
insl
adc
xor
and
sbb
mov
push
stc
je
mov
adc
jne
xor
jb
inc
xchg
ja
fwait
gs
in
inc
add
cmp
dec
lods
pop
cmp
add
enter
in
push
nop
sbb
imul
or
in
mov
shrb
cmp
mov
inc
inc
mov
cli
jne
lret
clc
call
sub
loopne
cmp
jg
add
scas
xchg
ljmp
add
iret
mov
dec
xchg
in
cmpsb
adc
inc
push
aaa
lea
pusha
mov
ja
lret
or
push
jge
cmovl
dec
inc
aam
and
rorb
add
adc
add
jmp
ja
jnp
pop
xor
push
or
addb
das
icebp
incb
or
test
enter
inc
mov
xchg
incl
mov
or
push
jl
add
xor
xchg
or
loopne
sbb
fnstenv
pusha
adc
add
int
jo
xorl
and
js
adc
orb
shrb
and
stc
add
out
notl
xchg
and
adc
rcrl
lods
or
push
pushf
jecxz
nop
gs
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
cmp
out
insb
in
push
jl
ds
ret
ja
gs
mov
mov
rorl
divb
mov
add
xchg
push
loope
jl
cmp
je
mov
inc
fidivl
stos
outsl
lds
sti
push
sub
inc
pop
and
pop
lea
sbb
dec
or
xor
add
pop
lcall
dec
lock
or
xchg
or
lock
xchg
xchg
cld
lock
cmpsl
frstor
jnp
add
push
push
mov
push
into
ret
stc
sbb
rcr
xor
push
mov
inc
cli
jg
jbe
mov
into
add
push
mov
mov
into
lea
mov
sub
lods
lock
push
pop
mov
cltd
fimull
inc
push
je
push
out
sub
mov
push
jl
testb
into
roll
and
and
add
pop
mov
dec
xlat
test
test
sbb
inc
mov
xadd
fnsave
es
loope
scas
rclb
cmp
mov
adc
xchg
mov
jns
xorl
clc
push
push
jge
insl
xor
lds
enter
add
push
movsb
cltd
add
or
lret
popa
insb
in
mov
and
adc
outsb
sbb
xor
xchg
clc
imul
addr16
adc
mov
push
mov
pushf
cwtl
fidivrs
add
movsb
or
sub
jo
cmp
add
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
mov
jo
aam
add
push
lea
dec
rorb
imul
pushf
xchg
xchg
sub
xchg
push
inc
push
ucomiss
les
out
xchg
loopne
add
pop
xor
pop
sbb
test
cmp
mov
sub
adc
lods
js
push
shrb
mov
pop
arpl
push
and
sbb
popa
popa
fs
adc
pusha
loope
mov
inc
loopne
mov
fisubrs
cmp
cmp
je
push
fs
jge
or
jbe
loope
jmp
orl
or
insl
faddp
aaa
in
add
jg
sbb
sbb
mov
jl
jg
adc
test
add
xchg
add
ficompl
loopne
or
pusha
pop
and
inc
ljmp
mov
adc
ds
or
orl
cmp
orl
sbb
fistl
into
and
fsub
adc
lds
in
cmp
ds
loope
insb
mov
xchg
lret
pop
pop
or
and
or
sub
lea
jmp
nop
cmp
xor
cmpl
adc
ss
loope
inc
pop
cmc
daa
loope
add
mov
xorb
sbb
lcall
add
por
inc
push
pop
jb
mov
mov
pop
shlb
sub
ja
adc
pop
mov
push
lret
mov
cmp
xor
jg
dec
dec
pop
mov
movsl
add
idivb
je
mov
or
push
pop
mov
mov
loopne
push
out
jo
push
dec
mov
outsb
mov
test
outsl
loopne
fcomps
lock
fisubrl
push
test
jb
cltd
fldt
mov
cmp
mov
mov
cwtl
insl
aaa
ret
aad
add
mov
inc
sbb
sti
movzwl
test
cli
jmp
jle
inc
cmp
dec
negl
dec
xchg
movsb
mov
je
orl
push
mov
mov
cmp
push
pop
xchg
and
push
push
sbb
push
movl
pop
push
sub
mov
pop
xchg
int3
pop
sub
into
and
scas
mov
xor
movsb
mov
test
mov
ret
adc
faddp
rcll
mov
xchg
jae
and
sbb
mov
xchg
push
pop
push
mov
jl
or
sbb
pushf
cmp
lds
and
sub
orl
or
wrmsr
adc
repz
ret
sbb
sbb
xchg
sub
push
push
sbb
xor
push
cmp
and
xor
push
out
loope
mov
test
sub
mov
cmc
test
or
pushf
xchg
mov
pop
pop
ret
std
decl
iret
inc
xchg
cs
ja
rdmsr
sarb
stc
scas
jmp
addb
sahf
dec
cld
ja
push
addl
add
lods
leave
or
shlb
mov
jo
bound
or
scas
aam
imul
xchg
xor
push
or
or
and
push
and
xchg
fsubl
jbe
pushf
adc
jae
and
add
lret
lods
add
lret
std
push
and
mov
xchg
fbld
cmp
adc
in
sub
sub
sub
xchg
stc
cmp
push
cmp
ret
mov
cmp
adc
push
imull
rclb
sbb
loopne
cmp
cmpl
mov
insb
js
pop
push
rclb
les
fcoml
xchg
sbb
cmp
mov
test
and
add
jle
mov
xchg
dec
outsl
hlt
andl
push
push
adc
pop
ds
adc
ror
outsb
jl
cmp
pop
push
aas
sbb
inc
jmp
pushl
fsubl
iret
call
inc
lea
outsl
popf
or
cmp
dec
xor
popa
fs
cmpsb
in
jl
or
les
inc
mov
idivb
pop
pop
push
jle
inc
mov
fistpll
gs
sub
push
adc
dec
cmp
jl
cld
and
ret
sbbb
cmpsb
jmp
or
movsb
dec
repz
cmp
pop
jl
mov
push
dec
push
test
adc
xor
xor
inc
shlb
aad
add
test
ret
adc
or
in
scas
sub
xchg
inc
mov
fsubrl
add
push
mov
push
sub
push
lds
jle
mov
sbb
pop
or
sbb
jl
push
mov
cmp
inc
call
sbb
mov
xlat
shr
pop
add
js
insb
dec
dec
adc
adc
push
inc
sbb
inc
push
add
fdivs
add
sbb
js
jmp
sbb
jmp
pop
cmp
mul
test
xor
xor
call
je
sbb
or
test
add
jne
sarb
imul
xchg
lock
sbb
testb
jle
data16
add
xchg
jno
mov
in
mov
dec
jl
loope
xor
jmp
rolb
or
popf
sbb
mov
out
sub
adc
pop
or
push
push
xor
inc
out
inc
jnp
scas
push
mov
ds
outsl
nop
sbb
enter
xor
add
fisttpll
mov
and
cmp
rorb
subb
in
fadds
inc
add
jb
lahf
aaa
add
mov
add
cmpsl
xor
add
add
out
push
push
push
test
insl
out
je
sbb
xchg
push
pop
fs
lret
fbstp
add
insl
mov
xor
cmp
add
push
xor
std
xchg
adc
push
push
subps
loopne
frndint
mov
jnp
and
andl
push
xor
push
ret
push
data16
push
xor
dec
mov
fmull
add
pop
sub
pop
xor
insl
fmuls
pushf
pushfw
inc
xlat
sahf
out
out
adc
aad
lods
pop
aaa
pusha
push
rcl
mov
test
mov
xchg
or
cmp
popf
std
add
pop
je
dec
inc
mov
mov
fdivr
xor
mov
lret
pop
push
push
pop
cmp
lods
mov
add
sti
sub
lret
in
insb
mov
jo
mov
dec
pop
pusha
add
xorl
lea
loopne
mov
jp
out
nop
dec
in
or
leave
pushf
mov
mov
icebp
inc
push
mov
xchg
leave
movsl
fcomps
cwtl
cmp
jns
test
xchg
outsl
mov
aaa
push
addl
inc
xchg
sbb
cmp
je
add
les
push
xchg
je
js
xor
add
adc
lods
clc
subb
daa
add
adc
add
insl
es
mov
popa
xor
or
sbbl
jle
pusha
pushf
push
or
movsb
sbb
push
clc
lock
lea
mov
xchg
sub
sub
scas
scas
sub
pusha
adcb
add
int
std
inc
push
mov
in
xor
dec
pop
fnstsw
ljmp
xchg
es
and
and
sar
mov
mov
je
mov
push
int3
mov
in
xchg
cmp
pop
jae
xchg
lret
xor
add
mov
sbb
insb
pusha
adc
push
lods
jbe
push
in
inc
out
add
negl
dec
push
push
adc
dec
insb
add
test
subb
xor
cmp
xor
push
xchg
adc
sbb
jmp
jo
or
sarb
jge,pt
adc
sbb
inc
xor
fucomi
pop
cmp
cmp
add
popf
add
loope
scas
in
inc
shr
sub
shlb
jle
dec
repz
rclb
test
mov
jo
enter
add
in
pop
popa
mov
fistpl
pop
and
sbb
xchg
cmp
jne
pop
leave
jne
addl
test
loope
cld
xchg
clc
jl
lahf
or
cmp
sbb
pop
loop
jg
adc
inc
insb
shr
inc
add
loop
mov
dec
dec
dec
shlb
fcomps
rcl
inc
adc
adc
sbb
ss
sbb
mov
cmp
adc
int
lock
testl
mov
jb
jge
pop
bound
jo
mov
jo
lods
lock
mov
sbb
das
pop
and
dec
pop
sbb
push
pop
adc
loop
daa
outsb
sub
rcl
shrb
sub
jns
jne
cmc
xchg
push
dec
mov
push
push
lea
jle
sbb
jle
push
push
cmp
adc
mov
dec
push
inc
xchg
jo
xor
push
inc
sbb
inc
das
popa
shlb
adc
mov
and
shrl
dec
add
loope
adc
rcll
push
in
fisttpll
scas
addl
movsl
add
insb
insb
daa
adc
mov
test
popf
in
cmpb
sbb
ja
mov
jmp
outsb
add
inc
enter
lcall
iret
inc
xor
je
sbb
ret
sbb
mov
ss
faddl
pop
adc
call
and
pop
rcl
cmp
push
aad
and
pop
mov
ficomps
pop
mov
lea
enter
or
pop
jg
xchg
je
aaa
rolb
leave
jbe
mov
lea
frstor
aas
mov
or
bound
add
sahf
inc
push
xchg
push
js
mov
xchg
inc
pop
sub
adc
dec
out
xor
or
aas
lahf
or
cmp
out
xchg
loope
cmp
inc
adc
pop
sub
push
add
xchg
lret
push
xchg
pop
adc
loope
je
sub
ss
jg
push
mov
xchg
xor
push
cmp
or
loop
xchg
pop
add
mov
jns
inc
sub
and
in
lea
scas
push
pop
loope
or
cs
push
jns
inc
mov
mov
dec
fwait
pop
and
adc
les
xor
mov
pop
cmp
mov
fs
dec
mov
ja
or
roll
aas
push
test
sarb
xor
daa
test
inc
pop
mov
shl
sub
dec
xor
out
pop
pushf
pop
out
in
stos
jl
or
adc
imull
add
sub
fmul
lret
mov
xor
loopne
push
push
clc
call
inc
mov
inc
or
dec
or
jmp
cmpb
loope
imul
aaa
push
jo
sbb
std
shll
ds
jmp
adc
loopne
and
push
test
shlb
cli
add
hlt
sub
in
adc
push
sub
jbe
mov
sub
adc
mov
testl
sbb
pop
test
xor
or
ret
xor
xor
or
shrb
mov
cmpsb
add
adc
insl
jne
repnz
xor
mov
xor
pop
or
push
mov
inc
popa
inc
push
jae
push
push
push
or
in
sbb
in
fadd
sbbl
sub
pop
push
push
loopne
push
fs
or
add
mov
mov
add
dec
in
mov
sub
pop
xchg
add
cs
jb
add
xchg
in
dec
mov
call
or
xor
aas
inc
es
jb
testl
mov
ret
jae
test
add
cmpl
mov
push
rolb
push
adcl
mov
lods
inc
and
pop
lods
push
push
scas
mov
add
or
mov
shrb
pop
inc
or
lret
fldenv
loopne
insb
dec
lds
rcrl
mov
sti
sub
rolb
jo
xor
xchg
sub
mov
mov
orps
rcrl
xchg
push
add
cmp
xor
inc
in
lret
lret
or
push
xor
xchg
mov
scas
jo
loopne
inc
push
push
sub
mov
pop
dec
testl
cld
push
stc
je
cmp
dec
pop
mov
mov
loopne
add
pusha
dec
push
les
pop
and
mov
pop
adc
push
and
or
cmp
repnz
inc
add
adc
outsl
jl
inc
cmp
fisubs
jae
std
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
cmp
test
push
or
mov
add
and
jne
lcall
cmpsb
call
lcall
pusha
push
adc
adc
push
xor
inc
add
sub
adc
sbb
loopne
push
loope
pop
mov
dec
adc
ret
jbe
inc
les
pop
mov
mov
sbbb
or
cmp
lock
sti
sub
adc
je
shlb
push
mov
push
sti
xchg
lock
push
dec
or
adc
daa
movsl
movb
pop
mov
xor
adc
rolb
lea
add
add
stos
adc
pop
cmp
imull
cld
fsubl
mov
dec
je
sub
xor
push
sub
dec
xor
adc
add
push
mov
xchg
in
lea
repz
xor
daa
or
out
pop
pop
fld
push
adc
sub
cwtl
insb
sub
adc
pop
in
add
push
fistps
xchg
mov
inc
or
stos
xchg
push
inc
outsb
sbb
sbb
mov
dec
push
cltd
testl
andl
add
rclb
jl
add
add
shlb
je
and
out
sbb
adc
mov
fcoml
add
add
je
subb
lcall
push
or
fiadds
es
pop
loopne
push
movsl
push
mov
test
int3
or
sbb
xchg
ss
or
in
push
push
mov
xor
push
popa
mov
stos
xor
popa
sbb
xchg
jecxz
jae
xchg
xchg
mov
nop
or
inc
lds
out
cmpsl
dec
idivl
add
xchg
les
pop
inc
cmp
enter
cltd
mov
imul
mov
shlb
call
cs
pop
cmp
call
jns
push
enter
orps
push
jecxz
imul
mov
inc
cmp
pop
jge
scas
je
jle
and
call
sbb
in
cmpb
xchg
fcoml
in
xor
add
push
and
jnp
mov
dec
mov
int
aam
xor
bound
mov
loopne
push
cmp
fcomp
mov
push
dec
ljmp
xor
or
idivl
js
xchg
xchg
in
jmp
sbb
test
or
dec
cmp
lock
mov
sbb
cmc
or
sub
loope
fsubs
repz
jnp
mov
adc
or
add
xor
and
or
adc
adc
xchg
mov
or
push
dec
ret
roll
push
dec
shr
les
cmp
sbb
rorb
push
cli
mull
mov
mov
mov
les
add
in
and
imul
movl
xchg
inc
add
jle
addr16
andl
in
sbb
in
cmp
call
nop
mov
add
out
mov
mov
shll
xchg
xchg
or
daa
orb
pop
sub
sbb
je
and
call
or
pop
jae
fs
inc
movl
jle
mov
push
or
mov
lcall
mov
sbb
sbb
out
or
lret
sbb
jp
xor
sbb
or
push
push
xchg
mov
add
pop
pop
mov
adcl
test
mov
push
sub
mov
xor
adc
mov
adc
or
push
aas
xor
push
push
imul
xchg
add
add
mov
inc
mov
hlt
call
xchg
shll
pop
incl
in
or
pop
arpl
cmp
dec
cmc
lret
enter
inc
inc
inc
ss
mov
pop
jae
ret
xor
das
pusha
in
dec
adc
clc
fwait
xchg
out
fwait
hlt
jmp
pop
jp
pop
jb
cmp
sub
dec
xchg
mov
shll
scas
mov
icebp
lea
shlb
xor
and
nop
in
test
push
insb
sbb
push
ret
adc
movsb
pop
push
add
adc
leave
inc
adc
adc
xor
mov
sbb
aaa
pop
insb
push
add
jno
push
xchg
sbb
dec
cwtl
pop
dec
inc
or
jbe
loopne
xor
pop
jg
daa
mov
jae
mov
dec
cmp
popa
cmp
filds
cli
add
cmp
fadds
pop
dec
cld
jecxz
rorb
pop
pop
in
lret
jg
shlb
sub
pusha
outsl
mov
sti
xchg
and
rcrl
or
pop
ds
call
or
xchg
fstpt
sbb
dec
pusha
mov
mov
cs
popa
imul
call
push
movsb
jns
or
adc
fstpt
je
loop
adc
cmp
dec
xor
loope
out
ret
bound
push
ds
lcall
and
xchg
cmpsl
sbb
adc
lods
and
add
scas
pusha
fiaddl
pop
out
stos
mov
mov
das
dec
adc
and
js
sbb
setl
pop
std
mov
inc
push
minps
mov
dec
movsl
mov
mov
pop
std
adc
addb
xor
push
or
inc
mov
ret
push
mov
adc
js
ret
jle
dec
lock
inc
jne
cltd
push
movsl
les
mov
sub
outsb
scas
fmull
shll
aam
dec
adc
pop
sbb
xchg
or
fs
push
push
sub
sub
in
push
cmp
loopne
loopne
mov
js
add
out
mov
test
or
xor
dec
clc
shll
sbb
jno
adc
lea
mov
push
test
or
arpl
es
stos
or
adc
adc
mov
sbb
xchg
mov
es
dec
sbb
je
pushf
in
mov
add
cli
call
adc
add
push
mov
adc
lea
push
jo
inc
add
sbb
or
mov
mov
mov
cli
scas
cmpsl
push
lret
or
push
add
and
add
addb
sbb
insb
aas
pop
dec
dec
dec
cli
add
pop
je
or
push
nop
addl
jle
cmc
fnstenv
dec
push
mov
rclb
dec
pop
sbb
inc
xchg
jmp
shrb
mov
xchg
mov
arpl
lcall
xchg
inc
or
xor
pusha
sbb
in
call
xchg
sbb
sub
cmp
cli
fiadds
rcrl
xchg
cmp
subb
cmp
sahf
sbb
xlat
inc
pop
ret
popf
pop
dec
and
pushf
lret
loope
icebp
push
adc
and
jne
push
adc
int
stos
clc
push
cld
push
sbb
or
repz
in
or
call
scas
inc
cs
push
mov
mov
pusha
movb
mov
inc
xchg
xor
sbb
sub
cmpsb
rcrb
inc
adc
cwtl
stos
loop
jnp
lock
dec
or
je
dec
mov
fidivl
or
sub
and
sbb
cmp
xchg
xor
inc
push
cltd
inc
add
push
mov
and
and
sbb
and
adc
nop
and
mov
leave
lret
and
push
mov
or
or
sub
das
xor
clc
or
xchg
add
mov
push
shlb
test
in
pop
inc
xor
and
push
push
sub
push
stos
in
sub
xor
push
and
dec
push
ficoms
or
cmp
cmp
ret
push
sahf
iret
push
cmp
or
sub
lea
add
xchg
inc
fwait
inc
xchg
mov
xor
in
jo
cwtl
inc
add
sahf
or
and
iret
and
mov
xor
xor
adc
fs
push
sahf
sbb
ds
stc
lock
cmovp
daa
add
inc
repnz
mov
push
iret
pusha
jl
mov
rol
test
int
mov
xchg
jne
mov
imul
lcall
add
rclb
outsl
push
test
into
adc
call
adc
push
mov
cs
push
enter
xor
popf
add
rolb
sbb
dec
adc
sub
pop
jmp
pushl
sub
push
mov
bound
add
jecxz
insb
pop
lret
dec
loopne
mov
xchg
ret
fdivr
aas
stos
adc
or
sbb
loope
inc
add
movsl
sub
addl
adc
or
int3
call
test
daa
push
mov
testb
xor
fmuls
mov
loopne
xchg
jae
add
push
dec
loopne
sub
mov
ficoml
adc
xchg
pop
pop
xchg
out
data16
arpl
lea
jl
loopne
filds
in
push
in
push
cs
dec
scas
in
call
dec
call
cmp
xor
jo
cwtl
push
scas
add
pop
mov
sbb
cli
sbb
enter
sbb
xor
loope
cmp
xchg
push
xchg
fldt
aam
bswap
add
int3
mov
or
jp
clc
push
lock
or
add
pop
add
pop
push
fisubl
push
and
testb
xchg
inc
ret
or
lock
pop
out
mov
mov
xchg
add
xor
add
pushf
push
aaa
in
loopne
dec
dec
add
lcall
int3
or
jne
rcrb
jecxz
dec
mov
dec
or
roll
lock
popl
int
pop
and
push
pop
int
or
sub
sti
inc
push
adc
roll
jbe
inc
mov
pop
cltd
stos
in
push
push
xchg
lcall
rcr
xchg
sub
jns
sub
lock
jl
xor
out
xor
sbbl
jnp
dec
out
cwtl
sub
inc
jg
call
jge
or
in
inc
adc
stos
and
or
dec
add
sarb
or
dec
push
push
pushl
mov
cmp
test
jbe
jnp
jae
xlat
inc
mov
xchg
xchg
inc
and
out
pop
cmp
jne
pop
adc
sub
je
hlt
pop
adc
scas
sub
mov
mov
mov
sub
hlt
inc
jmp
adcb
cmp
loop
dec
push
ret
or
jge
ficoml
out
dec
add
hlt
loopne
jl
repnz
testb
push
mov
or
jb
sbb
add
call
xchg
ret
cmpl
fcomps
push
sti
mov
repnz
xlat
add
test
inc
movsb
and
rolb
out
loope
cwtl
and
data16
movsl
cmc
xchg
dec
push
dec
or
inc
add
xor
rclb
aas
in
subl
shlb
out
and
cld
orl
push
fwait
fs
pop
inc
sbb
mov
pushf
lahf
ret
xlat
jp
inc
rorb
sbb
and
mov
pop
jns
pop
sbb
add
call
xchg
or
or
rcll
inc
inc
or
ja
mov
add
and
stos
es
jne
push
dec
movsl
cmc
idivl
aas
adc
mov
insb
call
imul
sub
sbb
insb
cmp
adc
std
lock
jns
pop
add
sbb
push
sahf
mov
fdivrp
jecxz
test
mov
add
je
out
dec
idiv
add
mov
push
xor
pop
mov
mov
dec
add
cmpb
in
pop
iret
cmp
xor
or
push
andl
jno
sub
jo
aaa
test
push
and
push
and
xchg
cld
xchg
pop
test
add
clc
push
pop
and
push
pop
push
or
pop
sbb
mov
inc
sbb
fists
dec
stc
add
test
dec
lock
adc
sti
cld
push
cmp
jo
add
mov
cmp
mov
cli
or
lock
pop
adc
jmp
arpl
rclb
movsb
leave
inc
cmpsb
scas
leave
add
jge
test
xchg
xchg
push
lock
adcb
jae
mov
in
iret
mov
pop
cmpsb
inc
ret
andb
xchg
sbb
popl
pop
pop
or
mov
daa
add
decl
shll
adc
sbb
ds
jmp
rcll
int
push
adc
xchg
scas
add
jae
or
outsl
xor
inc
push
cmp
jb
cmp
pop
dec
jmp
cmp
movsl
and
jg
adc
inc
jmp
xor
pop
aaa
cmp
push
push
dec
jmp
push
push
movsl
pop
mov
andb
inc
aam
mov
push
test
push
test
adc
dec
mov
je
push
cmpsb
mov
adc
push
divl
andb
dec
shl
mov
clc
jp
sarb
or
adc
xor
sbb
sbb
jmp
es
add
cmp
test
subb
adc
jge
add
daa
xchg
cmp
loop
inc
rcr
and
push
dec
mov
sbb
popf
lods
rorl
sbb
inc
ret
loopne
iret
or
and
pop
outsb
sub
cmp
fimuls
repnz
movsl
add
cmpsb
nop
rorb
daa
jmp
inc
add
push
insb
and
cmp
pop
gs
cmp
pop
shl
xchg
aam
lret
or
mov
add
sbb
lcall
or
add
push
jecxz
and
jecxz
stos
ret
mov
xchg
ret
jne
repz
mov
mov
maxps
add
add
adc
lods
insl
mov
cmp
mov
sbb
push
mov
scas
dec
push
pop
lods
movsb
movsb
or
sbb
inc
addr16
aam
mov
aam
in
aam
mov
mov
andl
enter
add
jne
lret
adc
inc
shr
ficomps
xor
adc
or
fcoml
loopne
dec
pop
xchg
push
clc
push
mov
pusha
push
repnz
inc
sub
pop
rolb
add
sbb
pop
dec
dec
fdivr
pop
fsubrs
xor
add
inc
pop
repnz
and
adc
ss
push
clc
push
inc
push
or
lea
push
sarl
rep
mov
mov
popa
popa
or
add
sbb
mov
mov
inc
pop
mov
ret
mov
ja
aas
pop
xchg
dec
lock
xor
inc
or
sbb
push
test
les
out
add
jge
xchg
jno
or
adc
pushl
iret
jbe
push
mov
clc
ret
push
mov
sub
das
sub
sub
or
and
xchg
sbb
clc
add
scas
mov
lret
in
and
fldl
cmp
sbb
xchg
add
sbbl
lods
push
xchg
clc
xchg
movsb
or
add
adc
pop
or
push
xor
fs
je
movsl
xor
cmp
or
stos
bound
add
lret
pop
sbb
fistl
jnp
aas
jl
push
clc
imul
std
ljmp
cld
cmp
push
cld
sub
iret
lds
mov
xchg
insl
mov
inc
and
inc
ja
int3
lea
ret
push
push
jecxz
cmp
pop
lds
sarb
cmp
into
push
repnz
or
test
fdivl
mov
sbb
les
js
pop
pop
or
divb
jp
shll
inc
mov
lret
push
push
test
clc
jnp
insl
cmp
and
xor
movsl
mov
xchg
xchg
neg
sbb
inc
je
fisubl
jne
mov
mov
stos
xchg
lds
add
lea
sub
jecxz
sbb
gs
mov
imul
push
pop
dec
sti
out
adc
imul
mov
jb
push
inc
or
inc
std
push
mov
mov
aam
inc
outsb
jg
jge
leave
push
push
imul
jg
jle
dec
add
jmp
mov
sbb
xchg
popf
into
mov
out
sbb
divb
push
shll
push
xor
jl
je
lcall
ja
rolb
sub
pop
stos
decb
pop
stc
repnz
xor
xor
cmp
lods
jl
jns
faddl
adc
dec
fs
push
dec
jmp
and
repnz
jae
lcall
mov
cmpl
inc
add
push
cmp
fmulp
movsl
sub
into
mov
inc
add
decl
loopne
or
jno
scas
push
cmpsl
mov
or
push
cwtl
push
lods
rolb
ficoms
mov
add
nop
dec
jns
push
movsb
pop
dec
mov
jmp
push
rclb
or
stc
lahf
sbb
xlat
jg
xor
mov
push
icebp
pop
or
es
mov
scas
sub
inc
add
xor
sbb
mov
pop
or
hlt
pop
adc
pop
inc
sbb
mov
sub
push
push
xor
xor
aam
mov
jbe
test
and
sbb
push
xchg
test
icebp
ret
pop
jbe
repz
lret
int3
je
cmp
je
cmp
cmp
push
push
dec
fucomi
lahf
cmp
xchg
adc
cmp
and
jno
dec
sub
xor
mov
or
push
xor
dec
ret
xchg
pop
addr16
pop
cmp
sub
movsl
inc
mov
pop
aas
sti
rep
bound
inc
xor
or
adc
xchg
fisubrs
jmp
sub
jae
shl
and
sub
inc
sbb
inc
push
pop
andl
and
mov
pop
push
push
push
push
dec
lret
or
jge
jae
inc
add
cmpsb
xlat
sbb
shlb
dec
adc
movzbl
inc
sub
xchg
test
cmp
push
push
das
divb
ror
xor
inc
cmpsb
rolb
ds
testb
sbb
ljmp
inc
xchg
pop
mov
lods
dec
mov
jnp
jle
xorb
sub
or
mov
xor
dec
dec
push
sub
test
repz
push
hlt
hlt
push
clc
push
mov
or
add
hlt
cmp
and
rolb
lcall
push
pusha
fwait
mov
jmp
mov
fwait
or
ret
inc
addr16
shl
shlb
cld
sub
les
xor
jle
ror
repnz
adc
in
inc
repnz
mov
cmovo
push
cld
clc
pop
or
xor
add
das
push
inc
inc
lret
loop
clc
jnp
pop
movsl
les
icebp
adc
push
mov
cmpsl
hlt
sbb
rorl
push
and
mov
mov
outsl
dec
mov
mov
call
push
dec
add
xchg
xor
orb
aaa
icebp
mov
push
push
push
mov
sahf
add
and
xchg
push
fsubrs
and
mov
rclb
cmp
push
and
ljmp
and
out
leave
pop
add
xlat
mov
mov
lds
sbb
push
and
add
cmp
xor
bound
push
sub
mov
cmp
xchg
push
mov
sarb
dec
jne
add
adc
loopne
mov
lods
push
rolb
or
push
cwtl
dec
xor
sub
mov
popa
or
push
scas
cli
loope
out
mov
jge
je
push
add
mov
mov
jno
xchg
cltd
cmp
jl
subb
sbbb
push
jecxz
push
sahf
push
icebp
subb
bound
sbb
and
push
dec
mov
inc
pop
ret
dec
sbb
ret
jae
das
shl
push
sub
xor
call
je
repz
ror
jg
mov
mov
and
pop
ljmp
push
sar
adc
add
and
and
das
cmpsl
jge
shrb
pop
xor
int
lock
js
nop
movb
jle
movsl
xchg
icebp
mov
inc
adc
movsl
ljmp
ds
mov
push
add
add
pushf
push
movsb
lret
popa
insb
loope
pusha
scas
daa
insl
insl
push
adc
imul
stc
jb
jg
xorl
dec
inc
adc
pop
add
mov
icebp
cmpsl
and
cmp
je
inc
je
pushl
shr
adc
push
clc
jmp
cmp
jbe
or
add
add
pop
ret
inc
cmpsb
test
in
adc
sub
jecxz
dec
push
sbb
faddl
or
in
mov
rorl
sti
add
or
icebp
sbb
jmp
pop
and
dec
cmp
in
inc
and
add
lock
lea
mov
fiadds
ret
jne
sahf
pop
loope
cmp
and
nop
jo
mov
mov
sub
cmp
jle
clc
jl
pop
in
pop
pop
mov
pusha
lea
add
xchg
ret
or
push
mov
dec
rolb
add
mov
sbb
test
pop
sbb
or
adcb
pop
arpl
repz
push
mov
pop
rolb
sub
mov
pop
sub
add
adc
enter
add
and
pop
jno
ds
dec
add
pop
shlb
or
mov
pop
mov
int3
testb
push
push
shrl
dec
ss
arpl
aad
mov
dec
add
jne
sub
xchg
lea
jp
cmp
ret
push
push
cmp
jo
dec
hlt
jb
pushl
mov
pop
js
clc
popa
or
pop
jmp
xor
jae
mov
xchg
and
lret
add
adc
add
push
insb
flds
adc
pusha
cmc
js
std
or
sub
icebp
sbb
dec
roll
movsl
out
popa
rcrb
sub
xchg
dec
es
mov
jns
mov
and
push
mov
movsb
mov
xchg
mov
pop
add
mov
xor
mov
and
mov
mov
cmp
jb
pop
enter
sbb
inc
add
je
push
jmp
adc
daa
or
jbe
cmp
sbb
push
popf
dec
push
test
jmp
pop
in
mov
add
mov
mov
mov
dec
adc
insb
or
adc
mov
sub
sub
jl
dec
or
push
orb
sbb
jmp
cmp
and
call
dec
incb
pop
jle
pusha
cld
movl
dec
or
jo
or
cmpsb
push
mov
andb
leave
jnp
jne
jb
xor
je
dec
andb
pusha
enter
push
add
or
movsl
mov
addb
pop
ja
fiadds
adc
bound
jbe
out
ret
mov
add
daa
push
sbbb
push
and
sbbb
test
movsb
jb
sbb
and
sbbb
cld
inc
push
jb
daa
sub
cmp
sbb
pop
sub
cmp
mov
movsb
in
iret
in
or
jmp
push
sub
xor
aam
scas
sbb
push
inc
push
adc
xchg
divb
jne
cmp
pop
movsl
outsl
sbb
mov
mov
push
gs
and
int3
in
lret
leave
rcrl
cmp
or
adc
out
pusha
push
mov
add
xor
jge
jnp
pop
mov
or
adc
mov
adc
sbb
sahf
movsb
and
cld
ret
mov
push
add
add
test
xor
mov
scas
inc
mov
movsb
dec
das
loope
xchg
fnstsw
cmp
add
adc
add
sti
push
adc
scas
jo
test
lret
cmpsb
pop
or
mov
ja
push
inc
adc
pop
rorb
les
adc
btc
push
add
andb
aam
popa
cld
push
sbb
mov
jl
adc
test
or
leave
out
iret
or
jno
aaa
lea
xor
pushf
mov
orl
and
ret
mov
push
cmp
sbb
pushf
xor
add
mov
adc
add
js
ret
cmpl
fildl
stos
fstps
lods
and
out
ss
int3
dec
in
push
jg
jno
sbb
sbb
and
sbb
rclb
mov
push
push
imul
and
es
in
cmc
in
inc
and
lock
jmp
mulb
sub
or
iret
stos
push
loope
sbb
rorl
pop
push
dec
xor
adc
adc
inc
cmp
jne
adc
push
sbb
cmp
leave
call
xchg
cmpsb
loopne
test
in
inc
call
sbb
cmp
dec
mov
insb
imul
fildll
or
mov
push
cmpb
jae,pn
push
ret
sbb
outsb
sbb
roll
arpl
and
aad
sbb
or
loope
jmp
leave
lds
pop
sub
jmp
cmp
adc
xchg
rolb
adc
push
xchg
cld
in
mov
sbb
add
cmp
lock
pop
adc
int3
int3
push
push
or
dec
cmp
jg
aas
push
sahf
lds
lock
call
mov
cmp
xor
enter
insb
into
jmp
sbb
mov
fsubrl
je
jnp
nop
cmp
loopne
les
lcall
jnp
ret
adc
jmp
adc
push
lret
cmp
xchg
shlb
inc
push
aas
add
inc
push
push
fistpll
test
cmp
sbbb
cwtl
push
test
mov
pandn
repz
add
pop
int3
push
push
clc
test
fcoml
or
push
push
lock
or
or
ljmp
fsubr
or
movsl
and
scas
clc
rolb
jmp
push
sub
mov
jmp
sbb
sbb
lods
push
mov
shrb
or
lret
cltd
pop
add
loopne
or
adc
xor
ret
push
xchg
ja
xchg
pushf
ljmp
xor
mov
sub
insb
out
mov
mov
cmp
repz
std
sbb
sbb
nop
iret
xchg
mov
test
lea
dec
pushf
dec
lock
cmp
into
jmp
push
aaa
and
ret
adc
outsb
pop
popf
data16
xor
push
lock
mov
lds
ror
dec
rorb
push
inc
add
lea
add
idiv
or
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
add
int
inc
cmp
aas
lods
mov
mov
xlat
outsb
inc
pop
cmp
mov
mov
sbb
xor
je
cmp
sbb
mov
je
jne
pop
sbbb
lods
sbb
lcall
iret
jae
popa
imul
pop
jecxz
push
pop
pop
mov
dec
loop
testl
fistl
push
adcb
add
jo
dec
dec
dec
inc
adc
xor
lods
xor
adc
or
jl
sub
leave
repz
mov
test
lcall
inc
sub
hlt
jge
or
sbb
pushl
sub
dec
adc
cmp
and
inc
jl
sub
gs
and
aam
or
inc
add
jp
add
cld
lock
dec
pop
add
into
mov
lods
mov
xor
mov
inc
adc
add
imul
pop
xchg
push
mov
shll
mov
inc
pop
ja
sahf
jle
shlb
aam
rolb
aaa
icebp
inc
std
pop
mov
xor
xchg
push
sub
stc
fsubrl
fsts
fcomp
push
pop
inc
test
xor
pop
dec
js
pop
mov
cli
add
shrl
sti
jl
ficoms
pop
call
sbb
and
cmp
sub
sbb
lock
setae
aad
leave
fadds
xchg
cmp
or
imul
cmp
lret
popl
jnp
je
mov
icebp
xchg
add
adc
test
mov
push
pop
js
dec
and
mov
pop
int
sbb
jnp
sti
adc
or
mov
adc
lcall
shl
mov
push
push
pop
pop
enter
pusha
fs
or
filds
and
cmp
out
xor
hlt
inc
mov
loop
mov
sub
mov
adc
jb
mov
xchg
xchg
enter
fwait
fwait
test
adc
dec
cmp
imul
jne
daa
out
loop
xor
or
mov
sub
push
shlb
mov
sub
or
scas
loope
mov
mov
movsb
rol
aaa
pop
in
mov
push
sub
add
sub
push
std
mov
sub
jne
loop
rclb
ret
mov
js
addb
inc
pop
jle
and
xor
lcall
cmp
xchg
sub
xor
push
push
push
sarb
xchg
mov
jno
push
out
push
or
fwait
mov
add
jne
sahf
jbe
jmp
dec
xchg
repnz
por
sub
add
push
out
and
sti
in
pop
xchg
add
push
push
lahf
pop
rol
loope
mov
arpl
mov
fucomi
or
ret
loop
sarl
mov
in
scas
in
push
mov
daa
cmpsb
inc
or
or
push
cmp
xor
dec
or
jmp
out
andb
cmp
adc
sub
cmpsb
ljmp
sbb
add
or
pop
mov
xchg
push
stc
adc
pop
rcll
jg
add
jge
mov
fwait
movb
fsubrl
pop
push
xlat
pop
cld
in
xor
pop
imul
sti
sbb
jmp
shll
inc
int
add
mov
mov
test
je
or
je
cmp
nop
adc
and
sub
push
loopne
pop
lea
add
jle
lcall
xchg
cmp
mov
add
xor
popf
loope
and
cmc
lret
add
jle
mov
jl
dec
add
and
jne
sub
leave
in
dec
into
shrb
or
push
mov
pop
push
inc
repnz
mov
sub
sub
mov
mov
fwait
adc
pop
mov
mov
or
fs
cmp
inc
int
add
push
lods
add
mov
cmp
dec
fidivl
or
inc
js
mov
and
pop
sbb
sbb
push
loop
mov
and
lods
jg
pop
lcall
adc
jno
inc
inc
mov
data16
pusha
add
std
cmp
insb
jmp
mov
cmp
adc
stos
rorb
ja
xchg
fdivrs
or
orb
dec
pusha
mov
adc
pushf
cmp
add
add
or
jle
enter
icebp
aas
jl
mov
repz
ds
or
add
push
lea
push
adc
and
inc
inc
mov
sub
push
pop
xchg
inc
hlt
pop
mov
cli
movsb
xchg
jecxz
aad
cli
pop
push
push
stos
and
mov
jg
mov
sub
pop
das
sub
push
cmp
sarb
xor
sbb
in
and
ret
orps
push
shll
in
xor
cwtl
repnz
lock
sbb
stc
sub
mov
add
lea
xor
mov
mov
mov
arpl
push
push
ja
aam
fidivs
cmc
lret
mov
mov
imul
add
push
jg
subb
jns
test
mov
jb
aas
adc
sbb
push
mov
insb
add
or
jge
jg
mov
data16
xlat
cmpsb
push
ret
push
jmp
jmp
mov
dec
sahf
imul
xchg
cli
jae
cmp
ja
mov
add
nop
push
mov
add
adc
in
arpl
push
or
sub
sbb
ret
add
ret
insb
fsubrs
xchg
jae
jns
stos
sub
negb
sub
xor
rolb
xchg
jle
mov
xor
xchg
add
dec
cmp
jmp
lds
jo
mov
lea
pop
cmp
dec
or
or
mov
repnz
lret
sub
adc
and
out
jmp
in
ss
je
sbb
cmp
push
xchg
pop
sub
xchg
out
push
inc
sbb
dec
out
xchg
jl
divb
nop
jp
pushf
and
sub
sbb
inc
sbb
adc
cltd
decb
or
push
dec
pop
inc
pushf
or
xor
pop
jle
add
adc
dec
push
cltd
aaa
sti
jo
sub
push
mov
fsubrs
lahf
push
pop
je
fldl
cs
sti
pop
rcll
fstpl
dec
cld
ss
mov
and
aaa
adc
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
insl
add
push
fldz
test
cmpb
fstpl
andl
js
add
push
adc
fdivrs
mov
dec
out
lahf
and
push
xchg
mov
sub
jg
aam
arpl
mov
adc
jecxz
scas
or
cld
dec
mov
movsl
cs
jl
push
out
cld
mov
les
and
jnp
ss
mov
cmp
sbb
enter
push
push
lea
fsts
fmulp
loopne
js
xchg
pop
add
aam
aam
shrl
pusha
adc
loope
pop
and
cmp
pop
loop
or
mov
mov
or
pminub
das
pop
add
push
push
xor
or
pop
sub
inc
or
push
je
ja
setbe
dec
add
fmull
fimuls
or
sbb
test
pushf
xchg
hlt
xor
enter
jbe
js
add
repnz
sbb
sbb
pop
jge
and
stos
lcall
push
pop
push
push
push
mov
add
jns
mov
adc
out
popf
add
jge
in
scas
in
and
xor
push
lock
push
aam
nop
test
push
arpl
out
add
sbbl
jnp
es
scas
rorb
pop
add
sub
pusha
jecxz
lods
addl
js
push
mov
push
and
add
xchg
ja
ja
and
test
or
dec
adc
and
cmp
add
push
fimuls
xchg
lods
push
mov
pusha
mov
cmpsl
cmpsl
cld
dec
add
imul
mov
inc
inc
mov
mov
xor
imul
push
insb
push
enter
enter
incb
add
add
and
or
push
int3
rorb
fwait
add
xchg
jne
shlb
push
mov
jo
push
nop
xchg
or
push
orl
add
bound
adc
sub
add
dec
arpl
shl
in
in
enter
in
in
mov
jecxz
lods
test
pop
test
and
jge
or
inc
sti
aas
rorl
stc
cld
xor
or
xor
add
iret
pop
leave
fs
push
push
jmp
arpl
cmp
inc
sub
pop
inc
dec
dec
fidivrs
add
mov
pop
ret
pop
or
add
and
push
ret
jle
cmpsb
xchg
add
je
shlb
mov
cmpsb
mov
icebp
add
stos
out
vcvtdq2pd
push
adc
jle
pop
bswap
inc
smsw
adc
push
pop
mov
lds
add
cs
mov
sbbb
fisubs
or
leave
fstpt
int3
push
call
jl
pop
jmp
into
mov
pop
hlt
xor
dec
dec
mov
dec
lods
push
call
xchg
orb
push
xor
cmp
dec
xor
or
push
push
and
sbbl
mov
shlb
xor
mov
loop
xlat
bound
mov
cmp
cmp
push
call
pop
jmp
adc
jmp
in
in
push
movsl
or
cmc
push
les
push
lret
mov
test
push
sbb
dec
jb
cmp
mov
pusha
stos
decl
insb
test
flds
mov
mov
popf
xor
inc
mov
fcompl
jge
mov
add
std
mov
cmpsl
cmp
nop
outsl
adcl
call
aad
inc
dec
movsl
stos
orb
scas
lahf
xchg
inc
movlps
ficoml
fdivs
dec
or
dec
adc
xor
add
lock
sahf
mov
mov
cmp
or
xlat
rcrb
in
inc
add
iret
rorb
cmp
lock
sub
mov
pop
add
add
push
outsl
xchg
fptan
mov
jle
xchg
mov
call
aaa
and
inc
push
xchg
dec
lret
add
inc
in
divl
add
xor
xor
and
mov
or
mov
adc
pop
push
lock
fld
mov
inc
shl
enter
inc
lods
or
sub
pushf
or
in
xchg
sbb
test
arpl
mov
dec
in
fnstsw
dec
call
fildll
dec
push
inc
gs
inc
or
sub
xor
inc
cmpsb
bndstx
out
sub
adc
mov
lea
daa
or
fdivrl
test
push
icebp
mov
ror
outsb
rolb
pop
pusha
daa
mov
mov
scas
push
push
xchg
jo
mov
push
dec
clc
ret
or
add
jo
in
testb
sbb
subb
pop
push
sbb
fs
adc
call
fisubrs
sbb
adc
enter
adc
nop
mulps
orl
icebp
fs
sbb
push
jle
jp
fdivr
and
pop
push
cmpsb
add
fcomip
or
in
sbb
jecxz
stc
mov
jbe
push
movsl
clc
or
pop
cmp
add
mov
dec
pop
xchg
lods
sub
shrl
inc
or
ret
lahf
mov
and
xchg
lahf
mov
inc
xchg
lods
add
xchg
nop
adc
xchg
inc
mov
sub
adc
ret
pop
inc
add
pop
arpl
sbb
add
and
pop
lahf
sbb
loope
call
add
aad
pop
insb
or
inc
sub
out
pop
push
mov
adc
adc
je
push
xchg
pop
push
test
push
into
fisttpl
mov
lock
js,pt
je
push
adc
or
push
out
xchg
int
mov
jae
les
push
sub
addl
mov
pop
mov
cld
lods
out
cmp
aaa
pusha
add
and
out
adc
adc
xor
and
out
insl
ret
pop
leave
xlat
nop
jo
pop
jp
xchg
nop
xorl
xchg
push
ljmp
mov
fnstenv
cs
stos
mov
iret
popf
xchg
test
int3
xor
adc
cmpsl
sub
arpl
sub
sbb
sub
mulb
mov
addr16
loop,pt
arpl
and
mov
add
sbb
mov
and
cmp
push
popa
inc
stc
push
mov
addb
adc
xlat
jbe
push
pop
xlat
jl
jmp
push
movl
adc
or
iret
insb
paddusb
xchg
push
xor
mov
and
das
pushf
cwtl
or
mov
and
xor
fiaddl
mov
arpl
rcrb
xchg
icebp
rcr
aaa
mov
mov
pop
sbb
push
adc
hlt
dec
sbb
mov
lock
decb
shl
sub
dec
test
inc
add
push
lods
fimull
jno
push
xchg
daa
sahf
movsb
iret
push
add
sbb
loope
test
aam
sbb
arpl
lock
sbb
mov
lret
addr16
sub
push
cmp
sbb
adc
jnp
addr16
sbb
in
jns
rol
out
lock
aam
and
inc
jmp
mov
lock
popa
cmc
xchg
add
inc
lds
lods
push
subl
lret
test
imul
pushf
mov
jle
sub
add
and
dec
out
jmp
into
inc
stos
push
push
aad
das
les
mov
cmc
or
ljmp
adcl
add
xchg
mov
pop
or
jmp
sbb
cmpsl
mov
popf
clc
jno
fimull
or
add
sub
js
jne
lea
add
shr
cmpsl
inc
sub
stos
push
sarl
adc
pop
dec
pusha
jmp
cltd
push
add
xor
pop
dec
jp
flds
mov
jp
stos
adcb
dec
out
and
fistpl
dec
add
decb
test
in
out
push
dec
add
loope
clc
xor
in
xchg
mov
xor
call
loope
inc
adc
repz
inc
mov
push
loope
sahf
ja
push
push
inc
lahf
dec
push
mov
sbbb
shr
pop
mov
push
pop
pushl
pop
cmp
inc
dec
inc
lock
sub
jg
in
or
pushl
cltd
pop
pop
bnd
pop
push
push
mov
add
leave
dec
dec
push
in
out
aas
cmp
fwait
andl
frstor
out
clc
aam
popf
add
push
imul
pop
outsb
cmp
mov
mov
bnd
mov
movsb
add
ss
es
outsb
cmp
pop
pop
mov
aad
add
addr16
inc
lcall
add
loopne
push
add
repnz
and
sub
lods
ficomps
cmpb
jo
pop
rolb
and
or
outsb
dec
cmpl
or
and
jns
sub
pop
xorb
push
adc
sub
sub
sahf
repz
or
cmp
inc
fs
dec
dec
dec
dec
push
xor
mov
and
icebp
movsl
call
pusha
jno
mov
add
cs
dec
lcall
faddl
rcrl
pop
or
inc
je
sbb
insl
jecxz
cmc
xor
inc
sbb
and
loopne
mov
and
popa
cwtl
push
inc
aas
sbb
inc
sub
and
subl
pop
adc
or
aad
add
leave
mov
test
leave
ja
or
shlb
dec
sti
adc
sbb
adc
addb
orb
jnp
push
sbb
sahf
fstps
lret
and
push
sub
xor
mov
insb
test
and
mov
daa
push
or
pop
jg
mov
pop
out
lock
lret
cmp
adc
cs
and
pop
mov
and
mov
inc
popa
sbb
or
dec
cwtl
xor
pop
dec
and
stos
rorb
adc
cmp
xchg
rolb
mov
jge
sbb
push
push
add
ret
mov
loope
shlb
adc
cmp
mov
mov
add
jle
adc
stc
push
mov
jns
mulb
and
xor
jnp
inc
dec
adc
add
mov
lods
sbb
and
or
add
push
ja
jle
loop
xlat
add
xchg
mov
sbb
dec
mov
cmpsl
mov
mov
and
mov
add
add
loopne
sbb
push
xor
or
loopne
cs
mov
inc
rol
or
iret
out
or
inc
call
add
sub
icebp
jmp
mov
mov
xor
mov
jecxz
or
stos
int3
xlat
push
sbb
adcb
in
inc
ja
icebp
jne
xor
jnp
jmp
sub
xchg
insl
adc
add
dec
sbb
cmp
cmp
add
inc
xor
ds
add
add
loopne
inc
push
flds
mov
rcll
push
lock
fstps
sbb
adc
push
push
cmp
jb
sbb
jae
ficoms
or
js
xchg
inc
sub
bndldx
daa
inc
fisubrs
and
inc
jl
stc
mov
or
shlb
jge
shlb
fcos
in
jge
sbb
mov
pop
jne
mov
rolb
leave
clc
xchg
icebp
mov
or
mov
jbe
fsubr
push
xor
mov
test
ds
xchg
loopne
outsb
test
mov
inc
cmp
lock
xchg
dec
or
je
popa
xor
or
push
sbb
mov
inc
gs
dec
sti
mov
stc
pop
dec
movsb
pop
test
repnz
inc
adc
push
les
mov
push
and
add
loope
push
push
dec
mov
jle
cmpsl
mov
cwtl
dec
adc
int3
fisttpl
xor
mov
clc
dec
jp
xchg
into
shll
das
outsb
arpl
add
or
xor
es
test
or
test
inc
mov
cmp
jae
ret
test
popa
adc
jmp
loopne
add
pop
in
ret
sbb
enter
xchg
jo
jge
xor
test
add
pusha
loop
xor
mov
pop
fnstcw
cmp
xor
inc
rolb
out
shll
imul
in
inc
imulb
xor
lods
xchg
test
stc
push
cld
in
insl
add
test
mov
pop
adc
pop
mov
dec
pop
jns
jne
fcoml
jns
or
sbb
xchg
sbb
test
inc
dec
add
push
es
rcll
fildl
push
dec
fsubl
fdivs
stos
xor
rorl
lods
push
push
jmp
sbb
cltd
or
int
inc
pop
cmp
dec
aad
or
jmp
adc
sub
sbb
sbb
in
fistl
adc
mov
inc
rcrb
or
fcmovb
inc
and
mov
mov
fdiv
aaa
loopne
dec
add
or
cmp
or
test
popf
cmp
dec
cmp
and
pop
cmp
jne
push
cmp
seto
adc
fisttpll
jne
jmp
mov
sub
or
or
push
pop
adc
test
pop
cmpsb
repnz
es
jne
or
and
sub
in
jmp
fisubrl
or
popl
cmp
es
enter
ja
xor
mov
cltd
js
loop
je
sbb
aam
pushf
push
mov
or
and
jp
icebp
lret
xchg
fs
pop
xor
push
icebp
mov
or
jmp
jge
add
push
jl
mov
loop
push
in
ja
iret
lahf
add
mov
inc
adc
roll
push
cmp
inc
dec
jns
ja
pop
and
leave
pop
push
xlat
test
or
ds
aad
popl
xor
lock
incl
mov
xlat
imul
mov
ds
shlb
sbb
jg
push
lret
mov
xor
sub
xor
inc
adc
out
adc
cmp
sbb
adc
xor
push
jo
popa
push
fstpl
fldl
dec
fcmovu
fnstsw
test
je
and
add
sbb
sbb
mov
xchg
lcall
add
popa
or
mov
xchg
sarl
sub
sub
clc
and
insl
clc
push
sbb
popf
sub
inc
idivb
jnp
xchg
testl
fsub
pop
fsubrp
mov
sub
jecxz
cmp
clc
jns
push
xchg
shlb
add
add
and
xor
and
fcmovnbe
push
shlb
add
fucomip
adc
sub
push
je
add
es
fcoms
sbb
mov
sbb
es
ss
xchg
out
xor
sub
push
push
jns
sbb
push
mov
xor
out
int3
jmp
push
add
mov
addl
test
dec
sub
and
dec
jne
int3
daa
or
adc
push
movsl
mov
sbb
mov
add
sbb
sar
fistps
mov
in
sbb
adc
sbb
sub
lret
scas
or
or
adc
cmovno
into
sub
inc
sub
pop
cld
nop
out
adc
add
push
push
pop
repnz
jns
enter
aaa
es
push
and
je
fdivl
and
hlt
dec
repnz
and
jl
jae
and
in
xor
inc
sahf
pop
sbb
sbb
ja
nop
jns
js
ret
test
pop
push
jecxz
add
xlat
sbb
push
pop
cli
sbb
cwtl
adc
cld
nop
lods
adc
and
push
push
sahf
psubusb
add
lock
jl
or
sbb
jmp
xchg
adc
or
and
aas
in
in
ss
xchg
mov
cmp
sbb
sahf
je
in
leave
cmp
in
test
and
adc
and
pop
repnz
nop
mov
rorb
xlat
sub
gs
add
dec
repnz
pop
cld
add
push
pop
and
stc
and
inc
sbb
push
mov
aaa
lret
fimuls
pushf
xor
je
aaa
ret
jo
enter
push
push
push
jns
push
cwtl
sub
mov
mov
mov
mov
or
xor
out
push
out
or
sbb
cmp
repz
cmp
adcb
out
ds
push
jns
out
bound
xchg
cmpsb
out
sahf
out
enter
iret
repz
or
sbb
jae
repz
andl
sbb
push
subl
icebp
push
ljmp
pushf
jbe
inc
lock
pop
movsl
rorl
inc
rolb
sub
cmpsb
add
or
and
and
xchg
inc
push
inc
xchg
add
xor
push
xchg
push
call
and
sub
roll
push
jo
pop
int3
jl
add
pop
fcmovu
popa
lock
cmp
xor
pop
mov
add
insb
icebp
bound
and
fildl
sbb
nop
inc
push
cmp
int3
sbb
sub
movsb
imul
and
add
dec
mov
and
out
enter
push
sub
sub
add
into
mov
or
daa
push
mov
enter
lcall
rclb
mov
xor
rorl
adc
in
in
call
xlat
cmp
add
scas
cwtl
push
jb
imul
and
adc
and
push
adc
inc
aam
or
and
sub
adc
leave
xchg
add
mov
push
in
inc
xchg
in
or
mov
mov
mov
sbb
dec
hlt
mov
ja
jle
xor
icebp
add
iret
inc
test
push
sti
inc
lods
pop
scas
repnz
pop
jo
bswap
mov
add
aaa
jae
out
push
push
popa
add
cs
add
call
in
dec
pop
add
push
sbb
leave
cld
or
push
lods
in
xor
sub
and
mov
sbb
jne
inc
loope
test
push
dec
push
push
or
xor
cld
sub
mov
in
out
lock
or
sbb
out
inc
push
cmc
or
jb
enter
xchg
or
adc
add
and
push
xchg
mov
jg
in
shrb
enter
or
int
out
pop
enter
push
or
sub
jns
mov
jecxz
sub
loope
fs
sub
jns
xchg
xor
push
cltd
inc
mov
repz
out
aaa
dec
adc
mov
pop
cmc
and
xor
loopne
test
push
movsl
sahf
aaa
mov
add
cwtl
fs
call
pcmpeqd
inc
sahf
pop
insb
mov
push
jnp
cltd
adc
in
push
and
dec
cmpsb
xchg
mov
hlt
mov
in
cmp
or
dec
adc
jb
adcb
xor
dec
and
pop
push
add
inc
ds
xor
ss
inc
mov
and
mov
adc
orl
jnp
add
adc
xchg
push
in
bound
rorl
mov
adc
mov
adc
addr16
xchg
or
icebp
adc
lgdtl
cmc
lods
add
jl
push
dec
adc
rorb
nop
out
xchg
adc
add
add
inc
or
xor
adc
into
jnp
sbb
pop
imul
ret
cmp
or
and
dec
insb
daa
mov
ret
or
lods
add
mov
xor
inc
xchg
stos
mov
rcl
push
cld
adc
test
add
jno
add
and
adc
stos
dec
and
mov
lcall
pusha
add
cli
mov
and
sbb
add
and
add
sub
add
call
cmp
sbb
ljmp
movsb
adc
jae
jge
sbb
loope
inc
jne
shll
xchg
test
pop
push
bound
add
jmp
shrl
inc
add
or
push
push
and
call
ljmp
cmpl
jb
adc
test
scas
push
nop
xchg
or
push
pop
push
sub
dec
adc
mov
or
xor
xor
mov
mov
add
or
nop
cmp
push
cmp
aas
dec
ret
add
inc
sbbl
sahf
and
and
xchg
leave
add
shll
orb
add
pop
inc
or
adc
add
xchg
rolb
cs
add
shrl
adc
xchg
xor
incl
push
xchg
mov
cmp
lods
cmp
cwtl
xor
add
add
jno
jae
ss
xchg
and
cwtl
cmp
inc
dec
xor
mov
push
and
push
lds
inc
or
add
add
xchg
or
lret
add
rclb
add
or
stc
mov
lret
loope
and
push
lods
fists
jb
in
sbb
xchg
inc
cmp
test
push
mov
cmp
mov
dec
or
add
push
cmpsl
push
push
inc
add
and
sahf
jb
mov
mov
inc
mov
adc
push
pop
or
dec
ljmp
je
dec
add
jnp
xor
adc
xchg
pop
inc
mov
out
or
rol
lret
xchg
addr16
int3
add
leave
imul
xor
cmp
push
rorl
insl
popa
cltd
int3
test
dec
aam
mov
daa
clc
dec
dec
push
test
sbb
imul
repnz
int
pusha
fcomps
out
sbb
arpl
outsl
jns
sbb
lret
nop
les
sub
dec
jmp
imul
rcrl
push
popf
mov
push
movsl
sub
xor
prefetch
cmp
stos
int
and
icebp
sub
jne
fldl
sub
fsubrl
sbb
xor
loopne
mov
fildl
sbb
jns
mov
dec
lret
pop
add
add
rcrb
pop
daa
cmp
inc
js
mov
out
push
jl
push
push
sbb
es
xor
xor
push
cmp
add
and
ljmp
mov
pop
lret
mov
arpl
movb
xchg
dec
dec
add
pop
mov
aam
rcl
sbb
xor
popa
jmp
and
push
mov
lahf
xor
in
andb
xor
dec
and
cmp
aad
push
add
pop
add
push
push
jne
mov
jo
es
enter
in
add
aad
push
arpl
notb
mov
push
push
ja
loopne
insb
sbbb
jbe
test
jmp
add
sbb
or
sub
push
push
std
adcl
and
pushf
lds
push
mov
ret
mov
sbb
aam
adcb
icebp
push
dec
push
sbb
cwtl
push
xorb
push
nop
arpl
call
sub
lret
pop
call
sbb
ss
cmp
dec
inc
adc
inc
add
or
stc
mov
xchg
incl
sub
shll
imulb
ret
or
adc
jl
xor
jmp
dec
mov
inc
jl
or
sbb
popa
jp
adc
xchg
xor
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
std
or
push
cltd
pop
idiv
and
xor
in
jns
icebp
out
xor
sbb
rcll
or
loope
icebp
aaa
jno
sbb
mov
fs
outsl
mov
cmpsl
push
fldl
mov
pusha
mov
mov
pop
faddl
add
or
dec
or
lret
shr
dec
inc
push
lock
testl
xchg
into
inc
sahf
in
sbb
mov
add
iret
cmp
sub
dec
faddl
push
sbb
lods
cmp
loope
inc
pop
in
lock
push
cmp
push
xchg
adc
lock
loop
lcall
jmp
enter
iret
mov
xor
push
jmp
add
and
dec
rolb
in
lea
in
sbb
adc
mov
or
in
in
adc
mov
sbb
movsl
rcrl
or
cmp
mov
or
push
or
and
fmul
pop
and
mov
ljmp
scas
inc
ss
enter
push
jmp
adc
push
xor
stos
mov
lods
adc
push
movb
push
rcrb
cmp
sub
adc
cmp
inc
push
push
pop
movsb
adc
stos
scas
pop
cmp
cmp
and
daa
mov
shll
push
lea
aaa
into
push
pop
sbb
cmpsb
jns
cs
enter
movsb
js
enter
and
mov
enter
lods
and
daa
and
lahf
call
inc
sbb
lea
sti
sbb
mov
push
leave
into
cmp
les
arpl
enter
and
iret
hlt
repnz
dec
pushf
mov
imul
and
xchg
xchg
pop
xlat
push
jmp
daa
and
xchg
pusha
shr
mov
shlb
imul
inc
loopne
test
fmuls
mov
daa
loopne
lcall
iret
in
mov
mov
es
xlat
inc
fisubs
jns
in
sahf
mov
fs
insl
sub
stos
push
fsts
adc
fimuls
es
in
xchg
xchg
mov
cmp
outsb
push
xchg
dec
or
js
fs
dec
cmp
cmp
shld
test
dec
je
dec
cltd
inc
cwtl
xor
mov
mov
aaa
jns
ja
pushf
mov
lock
andb
and
lret
sbb
pop
cmpsl
sub
xor
testl
test
insb
cs
push
iret
fdivrl
push
inc
xchg
fdivl
sti
fadds
push
mov
shlb
and
push
mov
int3
cmpb
xor
movsb
fmull
sbb
fmull
ret
fildl
je
pop
push
mov
shlb
shrb
cmp
sahf
ret
insb
pop
arpl
inc
mov
sbb
adc
inc
fmuls
add
and
push
sbb
sbb
inc
push
lcall
loopne
insl
call
leave
enter
pop
or
sbb
pop
cmp
add
xchg
aad
enter
adc
or
popf
add
sarb
push
mov
add
push
insb
ror
mov
fsub
xchg
test
or
mov
ret
push
addr16
repz
dec
pop
test
cli
lcall
dec
inc
mov
sub
cmpxchg
and
pop
into
adc
sub
cmp
ror
dec
cmp
push
cli
xchg
fiadds
push
and
scas
repz
pushf
subl
lods
cmp
sub
mov
or
aas
hlt
es
fs
add
fsubr
and
add
sbb
addb
inc
mov
adc
push
sbb
sahf
fnstsw
add
pushf
fstl
mov
int
rolb
neg
sub
inc
roll
push
mov
inc
ss
lods
and
mov
jle
and
xchg
es
and
lret
clc
add
loopne
pop
sbb
xchg
sub
xor
imul
cld
push
adcb
popf
nop
mov
pushf
add
push
je
xor
das
ja
xor
je
lods
xchg
cmc
sub
inc
sbb
dec
adc
fs
inc
push
les
and
xchg
or
push
dec
daa
mov
or
movsb
and
dec
or
addr16
sub
mov
sub
pop
mov
mov
cs
hlt
in
adc
cmp
cmp
push
push
xchg
inc
cli
push
in
lods
pop
mov
out
and
jl
xchg
mov
out
push
mov
push
aas
hlt
cmp
lret
call
fisttpl
loopne
lea
iret
cmpsl
popf
xor
sub
cmp
ja
fcomps
cmp
dec
pop
add
xor
or
push
mov
pop
rcrl
movsbl
ret
rolb
cmpsb
inc
outsl
cmpsb
cmp
add
push
icebp
adc
insb
les
aaa
loopne
in
stos
aam
hlt
inc
push
jge
mov
push
xchg
int3
add
outsb
es
shrb
pop
imul
jno
inc
call
add
pop
incl
jl
insb
add
nop
jbe
test
adc
fwait
lock
add
or
je
lods
or
mov
aaa
xchg
mov
pop
std
cli
andb
push
sub
popf
mov
or
adc
aaa
aaa
cmp
add
loop
push
push
aam
xor
addr16
mov
xor
sti
or
loopne
dec
movsl
push
and
sbb
jl
pushf
inc
push
imul
or
add
add
sbb
shrd
test
sbb
lea
inc
or
dec
sbb
mov
push
jp
and
int3
xchg
aam
roll
xchg
push
xchg
ljmp
leave
xchg
cli
lcall
js
int3
adc
lods
push
lret
rolb
into
adc
inc
xor
aam
pop
xor
sub
in
jmp
sub
nopl
nop
dec
and
ficompl
or
adc
notb
pop
test
cmc
clc
into
aad
cwtl
and
and
pop
mov
aaa
mov
loopne
test
ljmp
or
sbb
sbb
nop
ja
push
pop
add
sbb
fcoms
pop
ljmp
fcmovne
clc
mov
sbb
mov
xor
adc
mov
repz
adc
sahf
cmpsl
je
or
mov
dec
das
xorb
ret
fcmovb
in
lret
pop
cltd
clc
sub
and
rol
filds
xchg
mov
loopne
inc
cmp
adc
aas
mov
ja
or
pop
adc
je
and
lahf
fstpl
push
cmp
xchg
dec
sub
mov
add
outsb
sub
adc
lock
xchg
dec
pop
lock
cmp
jbe
push
in
shlb
daa
popa
jne
ja
add
mov
pop
shlb
pop
pop
outsl
cmp
fnstcw
adc
cmp
rcrb
in
cmp
pop
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
test
pop
add
ret
sub
ror
aam
jne
sbb
dec
pop
ss
xchg
cmp
add
or
jle
popa
test
stc
stos
std
inc
sub
movsb
cmp
add
pushf
add
push
cmp
xor
sbb
xchg
movsb
push
aam
xor
add
ss
cmp
filds
js
addb
lret
add
ds
lock
or
push
cld
aas
je
rorb
xchg
mov
cmp
cmp
push
push
add
jns
addl
movsb
lds
movsb
mov
shl
test
adc
pushf
pop
sbb
cltd
lods
add
bound
sbb
xor
pushf
add
lods
push
nop
xchg
dec
sbb
dec
lods
ficompl
adc
loopne
xchg
pop
repnz
push
mov
and
push
add
outsb
pop
dec
shl
add
xor
or
fnstsw
pushf
add
loopne
mov
out
add
stc
in
loopne
push
cmp
mov
call
loopne
roll
fbstp
adc
cmp
std
sahf
scas
sbb
or
icebp
dec
imul
int
jne
orl
sbb
in
sbb
pop
cltd
or
in
or
jle
movsl
loope
aaa
push
inc
dec
xchg
jno
rorb
mov
and
mov
cmp
loop
and
push
mov
ja
lock
or
adc
inc
sub
rcll
fcmovnbe
sub
or
addr16
mov
push
sahf
pop
pop
or
push
mov
adc
inc
daa
adc
and
and
adc
icebp
aam
add
push
mov
cmovb
add
sub
jne
push
mov
cmp
and
push
and
jb
test
pop
lock
fsubrs
lea
and
inc
jnp
rorb
sub
das
loop
push
inc
lcall
sbb
outsb
mov
subb
add
popa
mov
lcall
data16
adc
xor
pop
add
mov
add
add
pop
fwait
out
jns
insl
mov
out
cmpl
jnp
add
lods
ds
sbb
les
xchg
xchg
in
popa
es
jo
adc
pop
les
push
add
adc
xchg
add
rclb
push
movsb
fs
dec
mov
cld
adc
rorl
sub
jp
sbb
cld
cld
mov
push
sbb
sbb
fsubr
jl
sbb
subb
xor
dec
pop
or
adc
lret
adc
pop
jae
mov
jbe
loope
mov
shr
xchg
push
add
push
cltd
jb
or
jg
scas
test
add
push
push
and
add
cmp
cmp
push
loope
rclb
or
addl
scas
sub
cmc
dec
inc
jecxz
jecxz
stos
push
dec
cmpsb
mov
fildl
gs
add
std
dec
dec
out
jbe
jne
inc
cmp
jae
mov
jge
call
loope
pop
mov
test
icebp
add
jmp
mov
push
int3
insl
mov
mov
jnp
cmpsb
testb
xor
push
jnp
or
movsb
loope
xor
dec
push
dec
add
clc
and
mov
pop
js
pop
pop
movsl
sbb
xor
loope
pop
dec
mov
xchg
popf
sbb
and
and
sub
repz
push
mov
scas
leave
loope
push
dec
push
cmp
or
aam
mov
bound
add
sub
mov
in
jecxz
testb
pop
push
push
xchg
fsubrl
xor
sbb
add
push
imul
cmp
push
insb
sbb
sub
iret
xchg
imul
movsl
ss
sub
push
or
mov
rcl
or
icebp
jne
jb
pop
pop
xor
xchg
push
inc
ret
push
pusha
shrl
inc
and
sub
adc
mov
loope
xchg
jnp
sbbb
popa
push
fadds
pop
push
fists
inc
out
add
inc
mov
or
arpl
mov
inc
and
idiv
fimull
pop
std
js
jge
push
movsb
lods
sub
xchg
test
jb
mov
insl
xchg
push
mov
add
adc
xorb
cmp
push
lods
xor
add
mov
mov
dec
pushf
xchg
ret
addl
enter
shlb
cmp
xor
mov
repz
enter
enterw
and
pop
add
stc
sbb
ret
mov
shll
sbb
mov
aaa
jne
fistpl
jnp
add
and
mov
leave
push
dec
adc
subl
mov
add
sahf
fistps
rcll
adc
inc
sub
xor
xchg
leave
shld
ficoml
int
imul
xor
xor
inc
jno
xorb
add
sbb
mov
jl
rorl
and
data16
daa
lret
or
loopne
mov
fwait
inc
jge
mov
pusha
add
xchg
push
das
cmpsl
cmp
xor
dec
inc
push
sbb
test
mov
orl
add
addl
cmp
mov
mov
add
mov
je
xor
push
dec
pop
mov
or
mov
dec
ljmp
cli
pop
add
enter
es
sub
pop
das
jbe
jp
fs
dec
js
inc
mov
iret
push
mov
and
popf
loopne
mov
pop
cli
mov
cmp
xor
dec
out
ja
add
cmp
mov
inc
das
pop
sbb
addr16
pop
or
scas
call
or
testb
dec
add
or
fstpt
stos
dec
rolb
nop
fldt
test
adc
jb
cmp
or
loopne
insb
dec
and
mov
into
and
js
sbb
jb
xor
dec
mov
les
push
lods
int3
adc
mov
in
sahf
adc
mov
and
cs
xor
ja
movb
adc
das
sbb
in
sub
sbb
xlat
add
adc
pop
mov
adc
mov
test
mov
pop
cmp
adc
out
or
and
sub
mov
adc
jle
punpckhbw
or
cmpsl
sbb
pop
pusha
xor
les
mov
inc
or
data16
adc
or
es
sbb
sti
es
add
inc
movsl
adc
test
sub
dec
mov
popa
addl
or
push
push
insb
lcall
addr16
stos
jo
loope
loop
push
pop
loopne
push
sarl
movsb
insb
cs
mov
test
mov
xorl
inc
sub
inc
xchg
enter
push
fsubrs
lret
outsl
mov
test
scas
push
sub
lods
adc
pop
lods
in
das
stos
ret
daa
iret
push
rcll
inc
or
sbb
and
sbb
cmp
and
or
sbb
lcall
xor
sub
pop
xchg
mov
test
xchg
rcl
cmpsb
cltd
rorb
xlat
push
sub
sbb
enter
xor
and
or
jo
sub
dec
dec
cmp
test
shll
mov
pop
in
or
xchg
jp
and
mov
push
mov
pop
rolb
xchg
push
popf
sub
aam
fbstp
add
mov
sub
mull
leave
daa
dec
sbb
imul
xor
sbb
pushf
add
fwait
daa
mov
loop
sbb
add
adc
dec
roll
pop
lods
ds
pop
pop
ret
adc
inc
mov
pop
inc
aam
and
xchg
and
push
inc
cmpl
subb
cmc
sub
add
add
in
xor
push
loopne
out
mov
xchg
adc
cwtl
push
dec
sub
nop
loopne
xor
adc
cmp
sbb
jns
in
or
push
in
add
mov
cmpb
push
stos
addb
nop
lea
cmp
in
dec
stos
adc
shrb
int
xor
pop
inc
sub
js
cmpsl
test
jne
lock
push
loope
xlat
push
sbb
cltd
or
xor
pop
nop
inc
popa
dec
sbb
or
test
inc
fiadds
es
jno
subl
adc
push
movl
mov
cli
dec
movsl
xchg
adc
jne
mov
sub
js
xor
add
ret
xor
outsb
add
subl
push
rcrl
mov
or
cld
adc
test
subb
das
push
sbb
mov
int3
add
sahf
xor
push
imul
insb
push
lcall
ja
sbb
dec
mov
mov
pushf
shlb
jo
adc
sbb
push
aas
xor
fnstcw
jbe
push
test
inc
adc
xor
enter
out
outsl
jnp
sbb
gs
cmp
pop
push
movd
mov
pop
fcmovnu
andb
push
notb
mov
push
decl
aaa
and
test
data16
ja
nop
or
ds
cmp
xor
repnz
mov
out
pop
push
mov
clc
or
mov
pop
roll
or
dec
fcoml
inc
fsub
xor
adc
inc
sahf
sbb
push
mov
xorb
rolb
push
and
xchg
mov
pop
psubw
cmp
movsl
loope
jnp
push
inc
lock
sub
add
pop
pusha
loope
jno
jb
mov
in
sbb
stos
js
xchg
inc
rolb
mov
sbbb
push
test
rorb
push
lds
out
in
cmp
jb
jmp
xchg
cmp
add
add
xor
and
jl
push
push
jne
mov
mov
mov
mov
or
push
loopne
pushf
lret
mov
jb
xor
mov
dec
push
arpl
add
push
sbb
push
and
outsl
int3
pop
sbb
pop
mov
add
jo
adc
int3
movsl
cld
push
inc
loope
and
pop
push
push
das
dec
test
mov
repnz
xchg
insb
jae
push
jbe
cmp
or
loopne
fs
sub
loop
or
mov
pop
sbbl
leave
inc
fcomp
out
lds
mov
shll
xlat
popa
add
into
pushf
adc
or
adc
cmp
icebp
loopne
dec
std
cs
cmp
popa
test
or
sbb
push
inc
pop
push
jp
xor
adc
and
mov
dec
jb
popf
mov
push
inc
dec
pop
call
cmc
or
or
in
xlat
les
cs
lods
out
pop
gs
or
xor
dec
add
repz
or
add
sahf
pop
in
scas
add
push
push
hlt
dec
push
mov
add
and
add
xor
xor
mov
fimuls
add
xor
pop
ror
sub
mov
pusha
imul
adc
push
push
mov
ja
sub
dec
mov
cmp
fcompl
mov
xchg
shlb
sbb
pop
out
pusha
push
and
call
jnp
dec
adc
add
pop
rclb
insl
sub
mov
cmpsb
add
jb
inc
lea
xlat
cmp
adc
or
xor
lahf
mov
test
or
mov
js
mov
sub
xchg
aas
push
cli
cmpl
jge
jb
lea
les
repnz
push
fidivl
frstor
ds
sbb
ja
movsb
lock
popf
inc
or
and
adc
pop
les
addr16
push
pushf
loopne
or
aam
test
pop
push
jns
xor
popa
popa
in
pop
push
lea
cmp
or
mov
cmpl
adc
das
dec
sbb
jae
inc
jmp
pushl
or
add
xchg
pop
stos
sbb
pop
xor
and
imul
dec
test
pop
int3
jp
inc
insb
dec
enter
mov
or
adc
rol
inc
es
push
add
xor
shrb
mov
mov
mov
loope
push
add
popa
xchg
adc
popa
test
into
aas
push
mov
jbe
cmp
push
adc
and
je
mov
loopne
in
cmp
or
mov
xchg
adc
cmp
lds
adc
daa
loopne
push
cmp
push
xor
test
mov
push
and
sbb
call
int3
add
pushf
movq
insb
pushf
mov
adc
insl
dec
push
cmpsl
inc
adc
jge
loopne
test
sbb
xchg
test
and
sahf
adc
push
scas
pop
fsubl
adc
xor
cmc
ljmp
mov
lds
rclb
sub
js
jnp
rcrb
rolb
popa
push
add
sbb
push
adc
mov
and
rclb
cld
jl
pushl
ljmp
pop
mov
daa
and
and
cmpsb
sarb
mov
outsl
inc
insb
mov
mov
rolb
sub
mov
daa
or
push
inc
jbe
sub
mov
push
pop
xlat
pop
add
jge
xor
cmp
cmpl
je
filds
imul
sbb
sbb
push
loop
and
sbb
jns
add
mov
xchg
add
sub
cmp
je
sbb
not
nop
adc
xor
sub
or
push
add
or
sub
arpl
inc
call
pop
push
adc
lahf
xchg
or
jmp
mov
mov
loopne
in
lahf
outsl
movsl
inc
cmp
xor
xor
push
test
dec
out
push
or
in
in
aaa
xchg
dec
movsl
jmp
jmp
shrl
add
in
lods
fsubl
jbe
lds
push
pop
lret
fbstp
add
and
imul
daa
jo
imul
jno
push
sub
aam
ds
in
ds
pop
push
mov
dec
push
adc
adc
mov
negb
mov
push
cmpsb
nop
test
cli
jbe
leave
pop
pop
add
inc
xchg
mov
mov
rcrb
pop
adc
pop
jmp
mov
mov
add
scas
dec
mov
mov
jns
clc
xor
push
jmp
push
enter
adc
mov
sub
repz
addb
jns
pop
pop
adc
movl
pop
movsl
and
adc
les
mov
and
mov
daa
adc
nop
and
fnstsw
subl
pcmpgtb
add
xchg
or
cltd
movsb
fucomi
jno
mov
adc
push
mov
or
les
dec
ds
jge
push
rol
lret
xchg
dec
insl
xchg
lock
jbe
and
mov
mov
ficoms
sbb
lahf
adcl
mov
push
mov
mov
aam
push
xor
sti
sbb
dec
leave
loopne
xor
sbb
adc
lret
push
or
fstpt
inc
cs
insl
ret
sbb
push
aaa
mov
push
in
xor
lds
add
adc
call
cmpsl
mov
test
cmpsb
in
adc
mov
fmuls
xchg
aam
adc
xor
adc
lcall
sarb
dec
hlt
jne
mov
push
pusha
push
sar
push
mov
rorl
dec
inc
repz
and
pop
ret
jb
xor
iret
nop
or
dec
pusha
subl
mov
cmp
test
idivb
in
sbb
in
lcall
pop
test
loope
test
test
mov
pop
stos
jmp
out
mov
stos
adc
xchg
sbb
or
pusha
les
add
sub
cmpb
enter
lahf
add
movsl
out
xor
enter
and
aam
movsl
push
pop
cmp
mov
sbb
mov
leave
mov
sub
ret
int
cmpb
movb
fstl
lods
cmpsl
mov
popf
jmp
hlt
or
push
sub
test
mov
jge
outsl
push
stos
xor
ret
lock
movsb
pop
inc
adc
jge
mov
sbb
movsl
out
lea
js
jmp
pop
jne
pusha
addb
repnz
add
int
jmp
jne
adc
mov
jle
imul
sub
test
adc
push
jp
cmp
mov
test
and
add
dec
inc
test
adc
dec
jno
nop
iret
aaa
or
sti
stos
mov
add
shr
dec
std
cmp
dec
addl
cmp
cmpsl
ss
sbb
movsb
mov
inc
and
test
and
sub
mov
mov
sbb
mov
daa
push
pop
movsl
loopne
ret
arpl
or
xor
mov
xlat
jle
popl
xor
mov
or
add
inc
mov
sbb
pop
inc
inc
sbb
jecxz
jecxz
and
fisttps
ret
mov
cmp
or
jae
lods
lea
mov
pop
call
js
in
inc
add
mov
jae
daa
cmp
shl
cmpsb
movsb
ret
repz
push
push
sub
fimuls
sbbb
xor
sbb
push
lcall
in
or
es
shlb
leave
mov
push
aas
xor
leave
jl
test
xchg
jmp
shr
mov
fs
jno
xlat
mov
pop
in
or
jo
jle
add
push
hlt
xor
and
mov
jmp
pop
push
sbb
popl
pusha
xor
outsb
or
movsl
cmp
add
adc
shlb
hlt
xor
dec
push
adc
xchg
push
adc
pop
clc
jne
adc
out
loopne
imul
jge
xchg
sub
jp
xor
sub
push
and
mov
sub
cmp
push
push
enter
shlb
cmp
mov
int
or
jb
and
repz
loopne
jnp
mov
dec
ret
sub
cmp
xor
dec
js
pop
in
push
ss
iret
mov
add
inc
sbb
mov
xor
scas
sarb
xor
enter
mov
mov
xlat
push
imul
jo
dec
subl
ret
in
loope
xor
call
inc
sbb
xchg
pop
adc
jno
inc
sbb
icebp
xor
mov
scas
push
pop
icebp
and
or
lahf
adc
push
lret
or
dec
jno
sub
shlb
mov
sub
mov
adc
fs
sahf
xchg
sbb
popf
cli
mov
mov
les
mov
cmp
push
xchg
pop
cmp
xor
xor
mov
push
fadds
push
ljmp
fcmovnbe
push
sub
xlat
sbb
cmpb
lock
ljmp
sbb
cwtl
push
mov
mov
push
xor
mov
mov
push
jge
enter
lods
test
xchg
int3
mov
mov
push
and
stos
test
mov
in
mov
push
jl
int3
mov
vmread
sti
rcrb
mov
dec
fsub
mov
test
leave
cli
insl
rorb
mov
cmc
mov
jbe
fmul
pop
dec
or
rol
sub
js
cli
mov
adc
adc
mov
add
stc
lock
push
jl
cmp
outsb
sbb
mov
sbbb
sbb
xor
push
pop
rclb
sahf
xchg
dec
mov
fisttpll
or
mov
frstor
stos
in
mov
push
cmp
pop
adc
push
stc
push
adc
in
add
movsb
push
dec
cli
add
lods
mov
and
gs
cmp
rolb
test
push
clc
xor
xchg
popf
hlt
or
cmp
addr16
cmpsl
xor
mov
mov
mov
inc
jl
mov
subb
enter
mov
out
cld
mov
add
inc
cmp
add
outsb
lock
pop
addb
mov
sti
lret
xchg
outsl
rep
movsw
push
cld
mov
sbb
movsb
mov
cli
decl
mov
adc
ljmp
or
or
adc
movb
and
push
jne
dec
or
in
push
addr16
enter
mov
pop
out
lret
add
movsbl
xor
lret
push
push
in
cmpsb
and
iret
add
jb
and
das
stc
push
jbe
push
cld
je
push
xor
test
pop
sbb
push
movsb
xchg
cld
jecxz
adc
jno
and
xchg
and
mov
das
adc
pusha
sbb
imul
outsl
jle
mov
lods
jge
inc
add
movl
jle
or
subl
insl
sbb
mov
and
or
push
in
adc
sbb
or
cmp
lahf
xor
ficomps
push
mov
gs
cmc
and
add
imul
add
or
scas
lock
test
inc
mov
ljmp
clc
dec
sbbl
pop
fs
jmp
or
jg
pushf
popl
leave
dec
jnp
jno
push
add
add
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
mov
push
mov
stos
lds
loop
movl
cs
sahf
out
fisubl
insb
je
test
pushf
movsb
lods
mov
jns
out
mov
out
sahf
iret
aam
fsubp
call
in
repnz
add
push
or
adc
iret
pop
and
cs
add
add
lcall
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
flds
std
push
pop
and
and
aas
mov
sub
inc
or
jge
cmp
mov
imul
das
dec
decb
or
or
mov
or
loope
sbb
inc
cli
sub
lahf
lock
lahf
xchg
movsb
jno
or
outsb
rcll
and
push
xor
xor
jmp
jbe
inc
cmc
mov
addr16
jnp
or
xor
push
cmp
cmp
push
adc
sub
push
lods
cmp
sti
add
insb
enter
add
push
or
rorl
popf
pop
xor
adc
nop
nop
jne
push
xchg
cmp
push
pop
enter
mov
push
loopne
xor
out
into
movsbl
sub
adc
push
inc
popf
sub
jmp
add
mov
add
adc
dec
add
out
sub
push
cmp
lcall
mov
push
adc
mov
adcb
lock
push
adc
mov
mov
xchg
inc
rorb
xor
xor
js
push
fcomps
lods
add
and
xchg
pop
add
pop
mov
xor
jecxz
sarl
ss
sti
push
xlat
sbbl
mov
jbe
adc
test
jmp
pop
loopne
or
pop
mov
jne
mov
sbb
add
std
scas
add
sbb
mov
sub
cs
aas
inc
xchg
jbe
les
roll
push
pop
fsubs
loopne
sbb
pop
sub
orl
rorb
movsb
ret
adc
inc
and
add
xor
popf
stos
jno
or
mov
cld
push
mov
cltd
loope
ret
mov
test
push
lock
push
xor
mov
pop
or
adc
or
or
or
adcb
ret
dec
and
or
mov
sub
adc
pop
push
push
sub
dec
sub
pop
imul
out
shl
adc
lret
xor
add
push
fbld
mov
fdivs
pop
xor
jne
inc
sbb
push
push
pusha
inc
pop
jmp
push
add
xchg
leave
cmp
je
inc
inc
ret
push
sub
rol
or
xor
mov
cmp
mov
push
into
mov
push
test
add
jbe
movsb
pop
push
lret
jmp
mov
dec
mov
repz
mov
lcall
test
cmpsb
leave
aad
call
jge
int3
push
and
inc
add
adc
in
adc
push
enter
lcall
in
loopne
cwtl
daa
lods
imul
add
insb
cmp
xor
rclb
jecxz
aad
int3
and
clc
push
inc
pop
mov
andl
aaa
orl
cmp
jbe
cmp
shrl
ds
ret
test
pop
icebp
jne
or
jno
cs
add
push
sti
inc
inc
sbb
int
cmp
mov
cmp
lods
gs
push
push
dec
mov
inc
imul
or
jne
std
imul
add
jno
bnd
push
je
push
nop
push
shr
add
lods
sbbb
inc
cmp
sub
pop
dec
fmull
mov
push
movsb
sub
sbb
sbb
inc
es
loopne
rolb
xor
testl
enter
inc
push
sbb
add
loopne
inc
add
ret
negl
movsl
fs
rcr
gs
aaa
mov
mov
fld
les
inc
mov
fwait
jne
loopne
xchg
pop
push
cltd
push
cltd
add
pop
push
push
mov
es
mov
call
into
sub
sahf
movsb
sub
stos
mov
push
lret
pushl
outsb
adc
xor
mov
push
dec
mov
and
lahf
pop
jmp
and
outsb
addb
orl
inc
push
and
add
dec
or
adc
movsb
inc
fwait
add
jmp
add
les
sub
pop
jle
cmp
and
mov
sub
sub
adcl
je
icebp
mov
faddl
and
pop
stos
inc
shl
add
int
push
or
mov
add
dec
jns
ja
fsubl
or
push
in
jmp
add
mov
jl
idivl
fisttpll
push
loopne
mov
add
addr16
test
sub
and
imul
xor
mov
dec
in
aaa
inc
sub
scas
mov
daa
lret
sub
xor
xor
jp
or
xchg
rcrb
je
iret
dec
xchg
push
push
mov
scas
bound
jo
fwait
sarb
in
jmp
lret
adc
cmp
lahf
addl
xor
xchg
add
xor
jne
push
mov
adc
movsl
push
jb
sub
pop
inc
push
mov
dec
inc
ljmp
lret
fdivr
inc
loope
mov
mov
es
cmp
dec
or
cmp
jne
stos
movsl
jg
mov
je
add
sti
or
mov
enter
scas
adc
dec
cmp
gs
inc
adcb
xchg
cli
sbb
push
in
adc
je
mov
mov
push
push
xor
jle
inc
lock
pusha
cmp
mov
sub
inc
cmp
outsl
add
jnp
cltd
jne
mov
push
cmp
and
mov
add
rcll
aas
jbe
sub
shr
jp
mov
mulps
adc
xor
jl
xorl
dec
ret
pop
sub
add
pop
adc
push
and
imul
xchg
stos
xchg
sbb
into
push
pop
pushf
and
mov
iret
out
inc
loopne
movsl
repnz
inc
ljmp
jp
push
nop
add
mov
push
adc
test
or
testl
mov
test
cmp
sbb
sbb
or
cmp
and
xor
sbb
stos
mov
sub
rdmsr
and
and
in
movsb
or
adc
sub
or
pop
stos
fistl
jl
xchg
aas
mov
pop
cmpb
movb
push
orl
push
and
addl
inc
dec
cli
lret
dec
push
cmp
fnstsw
idivl
mov
add
fiadds
ret
pop
mov
js
xor
stos
push
inc
push
sub
push
js
leave
in
ja
outsb
sbb
pop
movsb
xchg
rcll
dec
adc
jo
decl
sub
outsl
jns
sub
movsbl
mov
or
outsb
pop
icebp
jbe
xor
sbb
push
xchg
push
push
push
inc
mov
push
movsb
es
xlat
inc
or
ds
inc
add
orl
inc
pop
in
sbb
inc
pop
inc
push
je
fs
frstor
js
jb
lret
cmp
xor
test
mov
xchg
out
inc
mov
movsb
jb
test
cwtl
mov
pop
fwait
movsb
fwait
movsb
mov
pop
aaa
dec
ficompl
mov
mov
dec
clc
lret
adc
aas
push
dec
gs
and
mov
inc
or
aam
addl
cld
setge
jge
cld
insl
inc
loop
add
lea
push
mov
test
pop
xor
and
xchg
fnstenv
xchg
je
jl
and
inc
prefetch
or
incl
cmp
jl
or
mov
shl
pop
xchg
inc
mov
dec
jnp
dec
and
or
push
push
stc
dec
sbbl
fstpt
xchg
xchg
loopne
leave
sti
jnp
cld
jmp
lods
sub
dec
cli
loopne
and
jne
fiadds
pop
cmc
xchg
cmp
pop
jl
jmp
push
push
jbe
fisubs
cmp
inc
sahf
mov
loop
sar
cmp
je
popa
xchg
jge
and
gs
lea
adc
push
in
adc
add
sbb
in
rorl
xlat
or
sbb
fadds
sub
pop
mov
mov
mov
les
sbb
push
fwait
mov
pop
nop
ljmp
repnz
call
adc
add
aad
call
and
push
pop
cmp
push
dec
ljmp
sub
repnz
mov
mov
rorl
test
pop
push
fistpl
sbb
mov
inc
xchg
xor
pop
daa
dec
fadds
xor
sbb
imul
fistpl
lock
pop
sub
lcall
pop
lcall
xor
mov
cmp
je
cmp
jne
dec
cmp
stc
push
inc
pop
inc
push
inc
push
movsb
xchg
cwtl
pusha
cli
add
cmp
push
push
push
add
adc
rorb
sub
clc
mov
mov
insl
pop
or
les
sbb
icebp
adcb
add
cmpsl
or
push
push
jnp
loopne
xorb
push
adc
adc
lock
testl
cwtl
lret
les
cmp
lahf
sub
aam
jmp
lret
add
xor
jmp
mov
icebp
or
mov
or
push
add
xor
cmp
push
push
jnp
mov
in
daa
data16
outsl
adc
xor
mov
clc
pop
les
les
imul
ds
mov
xor
and
aas
jne
push
lret
pop
inc
xor
clc
adc
sbb
mov
sbb
data16
dec
jle
mov
inc
xchg
dec
loopne
lods
and
sbb
and
test
ja
push
imul
mov
sub
shll
pop
xor
fcmovb
sbb
mov
stc
sbb
jmp
pop
or
and
pusha
or
loop
or
or
cmp
and
int
or
outsl
sub
inc
jnp
rorl
outsl
pop
push
pop
cltd
lods
jge
mov
lods
push
sub
clc
inc
xchg
mov
sbb
into
xor
push
or
add
inc
add
dec
pop
adcb
mov
dec
jns
ljmp
int
subl
jge
pop
outsl
testl
bound
mov
inc
pop
into
jns
and
loope
movb
mov
push
sbb
fistl
jnp
or
cmpsl
cmc
and
pushl
add
fmull
fs
add
add
and
cmp
sbb
cmp
and
and
add
pop
jle
jle
jne
lods
pop
mov
xor
movsb
mov
cmpsb
mov
push
enter
or
pop
dec
inc
arpl
test
add
movsl
sbb
cmp
jmp
push
mov
and
jl
inc
iret
xchg
cwtl
and
sbb
jb
add
or
xor
jmp
clc
xchg
and
nop
dec
xchg
push
rcll
add
lock
inc
aam
jae
insl
pushw
jp
mov
in
cmp
loop
test
insb
cmp
cmp
or
or
adc
stc
inc
fcomps
das
add
mov
sbb
mul
xchg
mov
divl
popf
pop
lea
or
mov
lods
aaa
nop
mov
adc
aaa
aam
push
jne
sar
mov
cmp
xor
lock
dec
insl
cmc
pop
cmp
or
test
ljmp
push
arpl
inc
add
mov
aaa
jle
outsb
repnz
dec
adc
add
test
ljmp
jmp
inc
add
or
mov
arpl
frndint
and
loopne
insb
pop
add
int3
inc
xor
cwtl
stos
or
add
xchg
inc
adc
rorb
push
jne
fs
jg
push
jge
popa
or
test
mov
daa
add
lret
lods
fmuls
inc
repnz
sbb
lea
nop
pop
add
repnz
imul
push
xchg
pop
xor
jecxz
or
sbb
fcmovnu
test
nop
and
push
add
mov
inc
or
lock
imull
stc
lock
inc
xor
xchg
fs
push
adc
sbb
xchg
call
xchg
imul
leave
rorb
data16
or
mov
add
add
or
jg
add
fstl
fldz
fcomp
fnstsw
jae
mov
pop
fsubr
pop
faddp
sahf
add
je
push
insb
repz
add
lods
sbbl
push
je
sahf
inc
hlt
xor
and
xchg
add
sub
nop
xor
shlb
lock
push
cmp
inc
xor
mov
and
test
add
mov
dec
mov
add
push
adcl
call
jge
cmp
add
push
mov
fistpl
jo
add
or
ret
scas
or
test
add
cld
pop
cmp
insb
test
lahf
lret
xchg
xchg
jp
xor
mov
xchg
pop
sbb
xchg
outsb
adc
rol
jb
add
mov
data16
fs
movsl
imull
lea
xchg
clc
into
mov
out
mov
imul
insb
stos
xor
and
out
shr
and
out
fbstp
jmp
ror
sbb
fisubrs
dec
ss
sub
leave
push
inc
adc
nop
in
outsb
push
addl
ja
or
stos
mov
mov
add
data16
pusha
movsb
fisttpll
mov
add
rolb
je
ljmp
cli
xor
sbb
or
mov
jmp
xchg
mov
loope
mov
sbb
inc
cwtl
nop
adcb
repz
cs
or
inc
cli
push
xchg
cmpl
sub
sub
pop
mov
jnp
push
or
das
mov
fcmovu
lret
sti
or
push
fldl
sub
popa
sub
and
sti
cmp
push
clc
add
lcall
jbe
add
xchg
cmp
add
xchg
jo
inc
pop
inc
xchg
jg
out
cli
sbb
jb
push
jbe
push
inc
daa
dec
pop
jb
js
sahf
push
adc
or
je
mov
dec
pop
lock
or
dec
pop
xchg
add
xor
and
and
mov
dec
add
pop
ret
dec
mov
mov
push
mov
adc
sub
sahf
jecxz
int
sbb
stos
clc
and
sbbb
icebp
sub
mov
xchg
cmp
jne
je
sbb
jl
sub
addb
in
test
aad
test
mov
inc
dec
in
and
or
sahf
je
jg
in
test
jbe
stos
aaa
xor
mov
jl
dec
or
add
jno
rolb
add
xor
adc
push
inc
lahf
mov
dec
andl
imul
pop
ja
jge
cmp
jne
js
cmp
push
dec
mov
mov
and
push
push
adc
add
enter
cmp
add
inc
daa
popa
and
add
dec
dec
xchg
adc
jae
clc
xor
add
jbe
mov
rclb
je
xor
push
jmp
add
cld
mov
inc
mov
test
cmp
sbbl
push
push
data16
in
fstpl
inc
xchg
or
shlb
out
sub
add
aam
inc
mov
or
fsubs
lret
push
les
mov
enter
lcall
or
imul
cmp
jb
idivl
and
data16
inc
add
mov
or
jbe
push
dec
lret
sbb
dec
push
push
sbb
push
mov
inc
add
sbb
movsl
adc
push
xchg
pop
fucomp
jns
das
push
push
push
push
dec
mov
or
push
cwtl
sub
sbb
lcall
mov
and
xchg
dec
mov
cmp
or
inc
enter
shrb
loope
adcb
push
pop
pop
mov
mov
push
je
push
push
pop
pop
loop
pop
cmp
push
daa
mov
add
push
call
push
or
or
and
xchg
shrl
dec
mov
loopne
inc
jb
push
xor
cmp
mov
mov
adc
lahf
sbb
stos
mov
jbe
add
or
ret
cmp
add
mov
in
or
bts
ja
mov
shlb
add
lds
outsl
inc
lock
cmp
xchg
dec
mov
add
pop
outsl
mov
aad
lock
loopne,pt
mov
push
mov
push
mov
mov
or
pop
out
add
enter
dec
mov
xor
rep
push
xor
add
out
nop
mov
lods
pop
insb
mov
ljmp
push
inc
inc
add
xor
dec
lea
push
lock
call
xchg
into
fisubl
int3
add
xor
mov
push
clc
dec
mov
mov
mov
sbb
lret
stc
adc
dec
lods
cli
xlat
imul
in
mov
dec
aam
imul
mov
push
in
test
add
push
mov
aam
or
sub
movsl
call
push
in
xchg
daa
in
or
call
jno
inc
ss
rolb
cmp
roll
lahf
and
cmp
mov
es
mov
or
fisubs
fsubrl
add
sub
dec
add
subb
sub
insb
add
loope
movsb
imul
outsb
lods
mov
icebp
sbb
ds
cs
mov
jge
scas
sub
or
sub
inc
stc
jbe
repnz
jmp
push
in
mov
push
fwait
mov
push
sub
dec
in
add
xchg
fistl
or
push
add
inc
push
cmpsb
jb
hlt
fbld
push
push
mov
mov
call
add
jne
imul
xor
mov
xor
mov
and
xchg
pop
adc
sbbb
lds
dec
or
aas
jne
icebp
sbb
fstpl
inc
and
mov
out
test
add
lcall
pop
add
ja
pusha
sub
fwait
add
push
mov
enter
mov
push
adc
inc
push
push
pop
push
and
insl
jae
mov
cmp
dec
sahf
pop
shll
push
push
jno
xor
adc
iret
icebp
adcb
call
add
stos
stos
mulb
mov
pop
inc
test
and
dec
les
mov
jne
cmp
add
add
mov
mov
mov
mov
push
insb
leave
pusha
jg
add
in
mov
jae
xchg
push
js
stos
loope
pop
cld
mov
pusha
loopne
daa
repz
in
push
cmpsl
inc
and
add
in
imul
sbb
mov
pusha
mov
addb
pop
xor
sbb
dec
jnp
sub
xchg
add
or
mov
mov
loopne
leave
or
or
bound
movsl
shr
sub
dec
int3
sub
insl
jge
push
fdivrl
dec
ffree
dec
cld
push
push
xor
in
xchg
mov
push
sub
adc
pop
adc
insl
ss
xor
add
xor
or
es
test
mov
cmpsl
mov
repz
xchg
pop
mov
sub
pop
mov
push
mov
rclb
fiaddl
add
js
mov
shr
or
lret
adc
add
into
je
or
or
leave
sbb
and
cmp
ds
push
and
hlt
mov
inc
adc
adc
in
jbe
mov
adc
or
sbb
jno
fisubl
rcrl
or
fnstcw
xchg
test
mov
fcoms
enter
xchg
sbb
pop
sub
movsb
xchg
mov
mov
jmp
sti
inc
or
sub
inc
loop
cld
and
mov
and
pop
jo
mov
sbb
movsb
xor
pop
add
or
test
add
es
sbb
inc
or
in
pop
dec
je
sbbl
ficompl
enter
sbb
clc
mov
pusha
js
pop
insl
and
arpl
or
add
mov
movsb
lds
out
sti
popf
test
xchg
push
leave
icebp
jmp
cmp
sub
sbb
lock
add
jbe
cmpsb
fcomps
imul
loop
push
push
gs
add
shrb
push
add
ret
inc
in
cmpsb
and
jle
add
arpl
enter
imul
sbb
ds
cwtl
sti
or
pop
movsl
fs
cmp
jecxz
lret
cld
and
and
push
mov
jb
in
mov
xchg
mov
mov
mov
push
or
test
inc
hlt
inc
push
xchg
sbb
inc
sbb
test
rclb
popa
mov
push
adc
mov
outsl
push
dec
jnp
das
sarl
data16
cmp
fdivrs
and
test
clc
jge
dec
inc
push
pop
mov
loopne
fs
mov
dec
push
pusha
in
add
or
dec
mov
sub
aad
and
dec
loopne
push
mov
inc
shlb
inc
lods
push
sbb
mov
dec
or
clc
je
std
sbb
mov
sub
popf
mov
or
je
or
adc
lea
or
out
das
and
sub
mov
jp
adc
xlat
mov
sub
dec
and
mov
adc
cmp
push
pop
sub
pop
es
mov
sub
loop
adc
test
push
pop
sub
repnz
adc
rolb
fiadds
dec
adc
lret
sti
lds
lods
cmp
pop
or
xlat
call
push
jl
add
pop
test
dec
shl
xchg
sub
movsb
or
add
jp
add
scas
jne
sbb
mov
or
pusha
fs
mov
pop
xchg
cmc
into
aas
or
add
inc
stos
xor
add
inc
nop
mov
pusha
xor
xchg
adc
fisttpl
push
jno
xor
mov
inc
loopne
jae
ficoms
imul
sub
push
fs
dec
cmp
or
xor
pop
inc
cmp
or
movsb
imul
leave
insb
lret
push
data16
mov
xlat
sub
hlt
rorb
push
aaa
cwtl
xorb
jne
in
ficoms
or
or
sti
std
fwait
hlt
and
jne
mov
lret
movl
pushf
jne
add
adc
adc
ret
push
lcall
std
mov
lods
or
jne
enter
xchg
lahf
daa
fidivrs
js
loopne
pop
sub
push
mov
and
shrl
push
mov
or
jl
pop
cwtl
pop
bound
or
lea
ret
sti
fwait
aad
test
pop
cmp
nop
sub
xor
push
pop
inc
push
push
mov
cs
nop
lret
nop
lcall
rolb
setge
mov
and
arpl
test
dec
adc
test
add
lea
pushf
outsl
add
loopne
inc
sbb
testl
xchg
push
gs
mov
fwait
sti
cmp
decl
ret
mov
out
jnp
sti
aaa
mov
test
in
adc
jge
cld
pop
cmpb
dec
in
es
test
mulb
insb
push
push
xor
inc
cmp
and
loop
mov
mov
adc
dec
or
adc
enter
orl
popf
mov
mov
or
dec
insb
aam
je
sub
out
out
cmpsl
in
sub
inc
adc
ja
push
lcall
dec
shl
mov
pop
or
and
pusha
or
xchg
hlt
es
inc
or
inc
hlt
ret
dec
test
or
rep
mov
ds
rcrl
jne
adc
push
inc
jo
nop
pop
inc
add
jg
fnsave
lret
inc
mov
inc
ss
mov
push
stos
xchg
fucomi
mov
out
loope
pop
jns
adc
xor
call
and
dec
nop
cmp
xor
in
mov
mov
and
mov
push
shrb
and
je
pop
ja
pop
inc
pop
cmp
jg
pop
ds
xor
loop
sbb
mov
adc
or
xor
add
adc
sub
imul
dec
mov
scas
notl
cld
pop
sub
pop
inc
sbb
jecxz
clc
shrb
cld
cli
inc
cmp
and
jl
push
xchg
mov
scas
and
or
push
stos
jp
sub
jb
outsb
adc
dec
mov
cmc
jns
gs
adc
out
cs
mov
pop
sub
mov
pop
cmpsb
xchg
arpl
hlt
lds
xchg
or
inc
sub
out
cltd
jbe
bound
lock
mov
mov
jae
outsl
lds
pop
inc
sbb
lods
lret
fdivs
gs
push
inc
sub
cs
lock
jb
ljmp
les
call
push
pop
cmp
cmpsb
loopne
in
ror
int
lods
and
rolb
test
add
add
mov
add
push
push
mov
das
push
dec
sbb
test
shlb
iret
insb
jnp
add
or
loop
push
imul
aaa
mov
fldt
adc
push
orb
out
dec
xor
pushf
cmp
loopne
add
dec
or
xchg
mov
rolb
add
inc
and
rcr
push
add
mov
pop
dec
and
add
xor
mov
outsb
and
xchg
icebp
mov
sub
aam
push
rcrb
adc
ret
dec
jo
fildll
xor
adc
inc
pusha
hlt
pop
sub
stc
pop
cmp
jne
and
inc
dec
mov
stos
or
sub
fildl
xor
adc
push
dec
or
pop
dec
movsb
pop
jns
int
outsl
jo
dec
push
jmp
sub
inc
repnz
lret
in
add
inc
xchg
cmp
xchg
rorb
jnp
push
cmp
test
lods
cmp
adc
jecxz
xchg
out
dec
sete
jbe
movsb
adc
xchg
or
sbb
xor
pop
xchg
lcall
mov
faddl
repnz
mov
xor
xchg
and
ja
pop
nop
es
lret
jle
loope
mov
pushf
pop
mov
or
es
pop
hlt
fsubrl
or
push
sbb
inc
insl
mov
push
mov
or
das
test
sbb
push
mov
mov
jbe
cmp
stos
iret
mov
push
adc
std
sub
xor
cmp
jg
mov
imul
movsb
cmp
or
push
add
fisubrl
jl
and
scas
pop
mov
clc
pop
cmpsl
mov
nop
in
adc
mov
xchg
or
dec
hlt
or
and
cmp
jge
mov
cli
fstl
jg
pop
sarb
lcall
push
or
or
jnp
std
push
cmp
in
repnz
jne
inc
inc
jmp
inc
fs
sub
push
aas
cmp
jp
gs
add
add
sbb
xor
xor
push
test
inc
push
xchg
add
dec
repnz
lock
mov
mov
dec
pushl
xchg
scas
arpl
in
add
and
test
nop
es
in
mov
adc
je
je
dec
popa
cmp
dec
pop
and
push
bound
lock
sbb
jae
pop
pop
in
mov
push
rcll
sub
adc
rcr
cmp
xchg
mov
sub
inc
xor
test
cli
enter
pop
push
inc
mov
xlat
dec
adc
jne
push
lods
add
dec
pusha
pop
cwtl
call
pop
adcb
dec
xor
mov
subb
add
push
mov
es
cli
and
sub
sbb
dec
mov
fdivs
sbb
jnp
in
aam
add
push
jo
or
push
ret
mov
sub
add
addb
push
mov
test
push
mov
or
je
rcl
and
xchg
or
outsl
mov
ljmp
pop
jb
cs
pop
lea
inc
jecxz
clc
cmp
jecxz
aad
loopne
push
and
adc
cmc
push
mov
pop
or
pop
push
sub
aas
negl
push
dec
popa
ljmp
xchg
mov
bound
loope
jecxz
outsl
rcrl
sub
or
and
lods
cmpb
mov
mov
or
jl
add
cmp
sub
insb
push
call
and
add
aad
push
lock
testb
jo
xchg
xchg
xchg
jne
imull
jbe
inc
pop
or
inc
or
push
test
dec
lea
adc
mov
lea
sbb
sub
or
movsl
mov
cltd
aad
subb
sbb
sub
pusha
ret
cmc
cli
dec
or
setne
rclb
mov
jmp
es
je
test
inc
cmpsb
push
jne
addr16
jbe
push
loop
pop
xor
lea
cltd
test
dec
sub
in
pop
cmp
lock
push
bound
sub
or
out
dec
outsl
push
cmp
mov
or
std
test
and
lods
out
das
cmp
cmp
test
mov
mov
shlb
test
sub
push
mov
adc
rcr
jle
fdivr
cmp
data16
adc
out
push
push
pop
rcl
aad
and
std
jle
cltd
lea
add
push
sahf
sub
mov
mov
cltd
pop
pop
mov
movq
dec
movsl
cmp
mov
sub
aam
xor
mov
stc
and
call
jmp
cwtl
and
xor
adc
mov
and
not
cld
lea
test
lock
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
std
xchg
jmp
cmp
pop
and
lods
inc
sti
dec
or
inc
push
out
adc
test
sub
and
enter
dec
rolb
roll
sub
sub
xchg
jae
push
inc
cmp
nop
in
arpl
inc
sbb
cmp
aad
cli
push
push
scas
movsl
shlb
mov
mov
inc
dec
push
or
imul
mov
add
cmpsb
push
das
aaa
cmp
pop
scas
pop
fists
push
mov
jne
push
jbe
sub
inc
sbbb
sbb
scas
fmull
sbb
add
xor
pop
dec
pop
lret
mov
xchg
add
dec
add
fwait
sbb
mov
les
inc
daa
fnstsw
outsl
xchg
lcall
loopne
dec
mov
sub
cli
pop
pop
jmp
into
inc
add
and
iret
loope
inc
push
sub
stos
and
lcall
mov
add
test
xchg
and
adc
pop
les
enter
int3
mov
xor
jg
inc
pop
jecxz
pop
push
movsb
arpl
pushf
add
or
and
ljmp
sbb
inc
mov
sbb
xchg
or
mov
xchg
add
ret
out
and
or
push
es
inc
push
enter
fcomps
push
popa
or
fldenv
rcrb
scas
inc
or
dec
jp
adc
call
push
or
and
sbb
or
ds
jmp
sbb
or
cmp
cmp
scas
or
and
sbb
sbb
xchg
lock
xor
lds
xorb
mov
dec
push
cmp
icebp
adc
in
inc
xor
and
inc
inc
ret
mov
add
inc
mov
out
mov
or
push
fmuls
jns
mov
insl
jmp
sub
addr16
loopne
in
and
sbb
lods
mov
push
inc
push
dec
js
sub
mov
pop
cmc
ret
subb
adc
jae
mov
sarb
hlt
pop
push
or
into
outsb
push
inc
cmp
or
push
jo
push
push
xchg
or
adc
loope
inc
scas
je
xor
mov
sub
jbe
xchg
in
cmp
cmp
test
and
pop
lds
addr16
inc
insb
in
pop
push
fwait
add
add
leave
or
out
jmp
and
adc
dec
aad
xchg
mov
dec
cmp
pop
aas
push
mov
add
jle
pop
jb
inc
cmp
jne
add
pop
pop
sahf
xor
pop
das
insl
push
sbb
mov
pop
xchg
cmpsl
xor
add
and
cmp
add
test
push
rol
in
push
add
or
push
mov
push
jecxz
or
icebp
hlt
mov
dec
xchg
or
nop
iret
mov
and
sub
mov
mov
and
jl
xchg
dec
sti
inc
push
sub
mov
imul
push
ret
pop
pop
add
push
dec
add
add
insb
jp
add
add
sub
add
push
lds
xchg
sbb
add
add
push
adc
cmp
xor
ret
shlb
add
push
cmp
mov
mov
mov
adc
sbb
aas
mov
or
xchg
or
dec
jp
cwtl
sub
jp
or
cmp
out
mov
adc
pop
mov
daa
loopne
pop
ficompl
test
in
push
call
mov
push
jns
mov
pushf
xchg
push
add
sub
cltd
jb
insl
ret
dec
add
hlt
and
sbb
in
repnz
push
pop
and
test
pop
pop
es
lods
dec
inc
or
in
jns
fdivrs
push
mov
lock
lret
jnp
mov
mov
push
loopne
sbb
or
or
and
stos
xor
enter
sbb
lods
or
int3
adc
sub
add
xchg
dec
sbb
add
pop
pop
shlb
sbbl
mov
and
push
ret
mov
fs
pop
mov
push
push
dec
das
and
sbb
dec
adc
test
push
sbb
in
adc
repnz
movsb
mov
test
jge
ds
test
out
dec
add
push
or
sbb
pop
scas
fstl
aam
push
add
mov
inc
sbb
scas
mov
cs
loopne
and
add
sub
scas
add
movb
push
fs
pusha
sub
shlb
ja
add
int
call
or
adcb
stos
pop
add
push
inc
lock
hlt
pop
sub
cmp
outsl
adc
sub
orb
jg
and
ret
sbb
jl
cmp
fmuls
addr16
jmp
push
fs
fisttpll
push
mov
and
lock
jmp
aas
cmp
es
je
xor
cli
xor
add
test
lock
gs
mov
les
and
cs
or
sbb
mov
leave
repnz
push
cmp
xchg
pop
fs
and
arpl
cmpsb
adc
jnp
lret
data16
in
lock
xor
and
or
dec
add
xlat
stos
dec
lea
sbb
je
in
movsl
add
repnz
cmp
pop
add
push
jp
scas
dec
push
aas
mov
insb
pusha
adc
aaa
add
js
mov
pop
add
sbb
js
je
or
and
pop
mov
in
sub
cmp
shr
inc
push
xor
add
aam
fdivl
js
pop
sbb
dec
push
insb
jle
push
in
or
fwait
stc
lret
push
fidivrl
adc
fcomp
rorb
out
fisttpll
dec
push
add
bound
lret
jne
push
das
imul
dec
notl
pop
fcoml
dec
sbb
inc
pop
psubsb
mov
xor
sub
or
test
adc
push
aam
sbb
loope
into
test
push
rclb
xchg
orl
fcom
push
sub
jns
mov
call
lods
push
sbb
inc
push
sbb
adc
movsb
in
addb
popa
les
inc
sbbl
jb
xchg
xchg
adc
jp
sbb
in
xorb
adc
jae
jno
pop
pop
jmp
andl
mov
cltd
movsb
push
orb
pop
outsb
fwait
push
inc
fwait
push
std
xchg
fistpl
es
push
add
push
jns
movsb
mov
inc
mov
into
sub
inc
lea
push
sub
push
add
adc
jp
fstl
push
pop
add
mov
or
test
xor
pop
out
hlt
das
mov
sub
mov
scas
xor
sub
addl
fwait
divb
push
loope
out
jbe
ret
lret
inc
cmp
sub
or
xor
cld
in
stos
inc
xchg
and
add
out
xor
pop
inc
bound
xchg
scas
push
lods
add
sahf
adc
or
pop
push
mov
adc
rcr
sar
jl
adc
sbb
mov
jl
adc
dec
inc
rorb
mov
or
mov
pop
movsl
xor
pop
dec
mov
inc
cld
xchg
clc
mov
inc
adc
and
popl
xor
movsl
stos
shlb
push
imul
fs
jge
inc
imul
pop
cmp
and
pop
inc
mov
push
adc
mov
and
fsubrp
pushf
testb
xlat
add
into
andl
ljmp
clc
xchg
push
mov
or
pop
nop
and
inc
cmp
push
mov
fistpll
nop
xor
push
bound
dec
pop
mov
and
mov
aaa
loopne
mov
push
mov
lock
jg
pop
mov
inc
inc
add
push
subl
idivb
push
fcmovne
mov
sbb
and
cld
leave
mov
add
xlat
inc
imul
sub
inc
inc
mov
sbbb
xor
lods
addr16
push
sbb
xor
lods
into
pop
inc
mov
mov
add
ror
and
push
lock
cltd
mov
inc
xlat
pop
cmp
cli
push
sbb
addr16
test
mov
pop
rorl
mov
sub
movl
ret
movsl
mov
or
pop
dec
iret
shlb
mov
cmp
mov
stc
or
popa
sbb
or
les
push
add
jne
mov
cmp
mov
rcrl
dec
loopne
sbb
out
jle
out
addr16
pop
push
outsl
push
adc
push
jo
loop
add
xchg
aas
cmc
push
and
and
add
sbb
push
mov
lods
add
mov
jne
and
shlb
test
dec
lds
push
jl
dec
mov
cmpl
add
or
lcallw
and
dec
and
add
je
push
sub
rclb
push
scas
clc
add
and
jbe
shrb
adc
cltd
jmp
shlb
cmc
jmp
inc
add
sub
les
ds
cwtl
and
push
xchg
sbb
dec
rolb
mov
cmp
cmp
outsb
mov
or
iret
cmp
adc
push
xor
in
add
add
cs
jo
nop
cmpsl
sbb
pusha
or
movsb
cmp
lcall
movsb
je
mov
stos
sar
sub
jle
je
bound
out
add
push
push
or
adc
test
or
adc
addr16
push
add
sub
or
addl
adc
xor
xchg
mov
call
dec
inc
sub
jg,pt
inc
shlb
xchg
nop
or
adc
mov
out
subb
push
pop
adc
aaa
mov
loope
in
addb
jne,pt
push
sbb
sbb
lods
mov
add
cmp
int3
into
jp
sbb
sub
lea
cltd
pop
fmuls
inc
loop
adc
cmp
rorb
cmp
pusha
push
or
mov
adc
xchg
push
jmp
xlat
mov
loopne,pn
sbb
mov
and
cltd
push
jg
pop
push
fucomi
and
sbb
in
pop
mov
dec
add
adc
mov
push
imul
mov
mov
mov
int
mov
mov
hlt
dec
cmc
ret
not
pop
jne
out
jge
jne
adc
mov
pop
in
add
xor
and
add
enter
fnstenv
dec
sbb
aam
aam
rclb
cmpb
cmp
or
cmp
add
cmp
enter
pop
in
dec
or
test
sub
sahf
or
out
imul
fcmovnbe
jo
pop
adc
popa
add
out
xor
jo
mov
mov
rol
mov
ror
xor
shr
xor
sub
sti
decl
xor
shr
xor
add
add
add
mov
sahf
dec
sub
mov
fs
or
cld
lcall
jae
or
and
xor
add
add
fnstsw
pop
aam
sub
jge
add
lret
loopne
cwtl
repnz
repz
test
or
add
xor
and
and
fisubl
fiaddl
sbb
xor
lods
test
push
sub
lea
pop
push
or
xlat
sbb
sub
in
rcl
add
add
sub
hlt
add
call
nop
in
rcl
call
call
dec
movsl
stc
data16
cli
mov
rol
xor
jae
rol
out
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
fdivs
in
aam
sbb
in
lret
in
push
cmp
xchg
push
adc
les
pop
add
fadd
push
fcompl
push
nop
cmpsb
test
call
in
loopne
cmp
int
add
pop
cmp
cmp
push
rcl
xor
sub
xor
or
int3
inc
int
and
push
xor
push
push
and
and
loopne
or
lahf
or
add
and
push
int3
lcall
adc
adc
add
es
pop
inc
inc
jo
ret
push
jo
sub
sbb
fidivrs
cmp
inc
xor
iret
push
loop
mov
pop
cld
shll
in
fadds
pop
push
push
call
jo
idiv
lretw
push
clc
jp
push
and
add
add
cmp
lcall
cld
sbb
shr
lret
inc
or
insb
icebp
mov
xchg
jo
lods
push
clc
jo
cli
stos
xorb
inc
nop
pushf
aam
aaa
cmp
xor
rorb
inc
in
jb
xor
in
in
sbb
out
rolb
inc
roll
aaa
cli
xor
xor
fcom
aaa
rorb
add
mov
call
add
jne
add
push
xor
and
dec
cltd
add
push
dec
xor
in
movsb
push
clc
push
inc
lcall
dec
add
cmp
enter
and
add
pop
cmp
test
inc
pop
lcall
add
push
ficoms
rol
push
or
adc
inc
pop
add
nop
out
in
pop
xchg
or
inc
pop
and
sub
repnz
or
mov
or
repnz
adc
dec
or
cmp
xchg
and
or
imul
xor
push
stc
stc
stc
mov
clc
inc
pusha
aam
pop
dec
mov
and
jle
test
lcall
adc
adc
aaa
insl
xchg
imul
and
add
sub
lcall
push
lret
mov
ja
and
pushf
out
pop
add
sub
mov
adc
add
loopne
jb
fimull
test
xor
pop
cld
sub
lea
pop
xor
xchg
sub
mov
sub
scas
clc
mov
sarb
or
rorb
or
or
mov
adc
push
add
dec
xlat
imul
jae
mov
sub
adc
adc
aas
lea
jg
cs
add
sub
sub
pop
movsl
jns
mov
ret
dec
or
mov
mov
ficomps
loope
lahf
pop
add
lock
jl
sub
adc
fidivrs
cmp
jbe
or
inc
dec
jl
fs
loopne
inc
add
jae
push
pop
fadds
push
adc
stos
or
mov
or
sbb
mov
fbstp
mov
outsl
pop
loopne
ror
mov
test
ljmp
inc
aaa
mov
inc
mov
imul
jns
sbb
dec
sbb
fimull
pop
ja
adc
inc
add
dec
lea
inc
cmp
xor
inc
mov
mov
shrb
outsb
jmp
rorb
sbb
mov
test
pop
dec
lcall
push
rclb
pop
test
lea
push
or
popf
and
pop
aam
or
xor
sbb
push
inc
or
stos
sub
in
or
pop
jo
cmp
es
inc
arpl
fcmovb
mul
movb
adc
inc
dec
mov
sub
or
addr16
add
dec
or
mov
fs
orl
lds
outsb
movsb
inc
movb
dec
jb
adc
push
push
push
adc
push
sbb
fimuls
pusha
ljmp
imul
and
or
loopne
dec
fxch
ficomps
pop
pop
ret
test
sarb
jl
adc
imul
test
aaa
mov
cmp
cmpsb
inc
jno
and
xchg
pusha
or
dec
add
inc
nop
sbbl
setp
pop
pop
push
outsl
or
loop
jo
ds
cmp
sub
cmp
push
mov
xchg
sbb
test
mov
and
add
adc
jo
jle
mov
xchg
dec
cltd
or
fsubs
add
jle
add
push
lcall
pop
push
push
inc
xchg
arpl
or
addb
push
jbe
push
push
decb
lret
incb
mov
lods
xor
inc
mov
test
pop
or
in
mov
push
push
mov
inc
hlt
inc
ret
das
mov
sbb
js
mov
xchg
je
mov
gs
xor
push
and
notb
in
push
sub
dec
cmp
aas
jle
mov
jb
repz
mov
push
testl
jo
je
repnz
dec
rcrl
pop
cmc
cld
mov
lahf
and
movsb
mov
enter
adc
or
sbb
mov
repnz
fisttps
dec
into
jle
push
ret
mov
loopne
xchg
pop
jmp
inc
push
test
push
dec
and
call
and
or
or
testb
imul
xchg
push
dec
mov
and
insb
divb
cld
inc
shrb
mov
sbb
sarb
xor
xchg
mov
imul
and
imul
and
push
mov
pusha
cmp
lahf
sbb
mov
mov
push
add
mov
xor
adc
outsb
je
push
push
push
push
ror
insb
push
push
ret
ds
or
lahf
in
and
push
jnp
adc
sub
xorb
lock
mov
pop
cld
ja
scas
jo
je
cmp
jbe
jae
pop
adc
pop
es
jbe
xchg
xor
xchg
adc
pop
add
mov
add
cmp
sbb
and
sbb
mov
push
idivl
xchg
jbe
cmpl
cltd
ret
pop
clc
repz
out
add
xor
movsb
sbb
enter
add
lret
test
jbe
mov
mov
push
movl
push
dec
or
mov
mov
or
dec
add
test
push
add
sub
xchg
pop
adc
push
push
mov
out
push
cmp
subb
pop
add
and
inc
dec
or
mov
or
cmpps
into
xor
dec
xor
dec
cld
mov
ret
pop
pop
mov
rol
add
or
lds
fsubrl
sbb
push
js
and
jae
push
and
sub
inc
push
outsl
mov
jmp
lock
adc
adc
cmpsb
lock
test
mov
mov
jp
cmp
inc
and
and
sarl
imul
daa
mov
dec
and
jno
cli
push
arpl
rol
cmp
dec
call
fimull
test
popf
inc
aad
cs
xor
pop
mov
int3
sahf
scas
and
or
dec
in
jne
jmp
and
ja
out
push
mov
inc
jbe
and
push
nopl
cmp
inc
lods
mov
or
scas
adc
inc
add
cmp
std
andb
or
sbb
adc
mov
push
add
add
outsb
punpckhbw
sub
cmp
shlb
mov
sub
add
add
das
sahf
push
or
aad
mov
out
add
xor
ljmp
negb
cmp
addb
jb
inc
jb
and
and
push
push
inc
push
ret
popa
icebp
dec
js
xchg
lret
and
and
mov
adc
or
jl
dec
daa
push
cs
push
mov
or
dec
push
xchg
or
add
shrb
ret
inc
cmp
xchg
sub
or
fimuls
add
data16
and
mov
push
inc
ja
add
js
repnz
mov
fs
dec
adc
es
xorb
and
inc
shrb
cmp
int3
jmp
in
sub
push
mov
pop
cmp
dec
adc
push
fsubrs
cld
dec
inc
ljmp
dec
sbb
bound
jl
mov
cmp
pop
adc
jbe
call
popa
mov
cmp
sbb
dec
insl
cmp
pop
jb
cld
inc
call
add
sub
push
pop
ret
xor
fstl
add
ss
cmp
leave
pushf
outsl
inc
mov
and
cmp
ja
leave
adc
adc
ss
jb
add
lock
push
test
loope
neg
mov
jne
mov
sub
into
mov
inc
mov
push
sahf
push
loope
mov
pop
push
jmp
mov
inc
dec
popa
loope
xchg
inc
bound
ror
sub
dec
adc
cmp
pop
test
adc
sub
pusha
rcr
xchg
insl
ljmp
cmp
xchg
or
out
mov
adc
dec
mov
jg
ret
negb
xor
adc
jmp
push
mov
test
fsub
movsl
aaa
pushf
dec
fsub
fidivs
leave
mov
mov
mov
pop
imul
js
adcb
jo
dec
aas
dec
outsb
shrb
stc
insb
stos
and
pop
mov
mov
stos
test
fimuls
cmp
inc
mov
movb
pop
mov
nop
sub
adc
sbb
pop
cwtl
xor
sbb
sbb
jne
push
and
xchg
or
cmp
mov
add
push
sbb
imul
or
out
dec
pop
xor
pop
data16
cmp
subl
sub
mov
cmp
dec
ljmp
mov
mov
jle
push
or
negb
icebp
pop
xor
inc
cmp
dec
pop
dec
sarb
sub
ja
pop
dec
in
push
bound
shlb
push
xor
and
add
and
push
popa
lock
sbb
mov
push
push
mov
dec
sbb
sbb
orl
mov
xor
ret
push
test
iret
das
add
mov
push
jl
not
les
adc
movsl
and
add
xchg
mov
das
inc
add
sahf
aaa
pusha
and
xchg
pop
mov
cld
dec
cmp
loope
faddl
or
lods
lds
and
in
call
fsubrs
mov
xor
mov
call
push
mov
pushf
cmp
and
aam
sbb
sub
fs
jae
imul
inc
popf
fs
or
jne
dec
in
inc
xor
mov
popa
sbb
cmpb
or
mov
pop
cmp
loope
and
add
mov
enter
shl
add
addb
shl
xor
mov
mov
mov
movsw
movsb
mov
xchg
xchg
mov
jge
hlt
and
cmp
cmp
lea
lods
mov
dec
add
adc
inc
xor
add
sub
push
js
jae
push
mov
or
scas
and
das
and
or
jge
loop
pop
sub
cmp
in
jl
jge
loope
sar
cmpsb
call
and
rcrb
xor
push
or
sbbl
and
inc
jmp
jnp
xchg
cmp
jnp
ret
cmp
jl
mov
je
lock
mov
bound
mov
stc
lret
test
pop
lock
stc
xor
in
inc
outsb
push
dec
jb
xlat
cmp
bound
icebp
xchg
std
sbb
and
sub
imul
cmp
sbb
xchg
fsubrp
js
mov
adc
mov
mov
push
mov
test
xchg
xchg
add
dec
in
andl
aad
adc
add
mov
add
lods
jae
dec
shlb
and
imul
xchg
or
ljmp
ficoms
add
rclb
jo
popa
xchg
push
inc
adc
xchg
jge
push
es
mov
sbb
cmpsb
push
cli
xorl
fwait
out
or
sbb
adc
inc
scas
test
add
xor
mov
int3
into
int
add
repz
sub
dec
test
notb
adc
aas
insb
mov
push
popf
add
jl
push
mov
jnp
mov
jmp
push
js
jbe
mov
jmp
addr16
mov
pop
sub
pop
test
cmp
mov
pop
cmpl
cmp
xchg
std
lods
call
out
and
pop
dec
shrb
dec
push
cmp
hlt
cmp
xchg
stos
mov
pop
push
ret
and
add
xor
or
mov
shr
aam
push
ljmp
stos
sbb
sbb
cmp
jmp
jae
pop
repnz
fsubs
les
testb
lods
or
lock
lret
add
out
xor
movsb
lea
nop
mulb
inc
or
mull
mov
xor
pop
pop
ret
mov
icebp
test
lcall
bound
pusha
rorb
pop
sbb
aam
or
sarl
cmp
loopne
ret
outsb
push
lods
add
mov
mov
stc
mov
cmp
repnz
in
sub
or
xchg
or
push
adc
dec
mov
loopne
jb
cmp
repnz
mov
or
ja
or
add
nop
sub
fstpt
std
movsl
lods
arpl
or
lods
dec
mov
stos
adc
adc
sbb
add
or
shr
dec
mov
cmp
cmpsl
or
push
and
pop
or
add
lock
mov
mov
jno
gs
movsb
jne
mov
and
or
cltd
mov
stos
inc
mov
sbb
mov
or
test
xor
les
xor
and
mov
or
sbb
pop
mov
mov
push
and
jne
push
push
popf
xchg
bound
adc
sub
sub
repnz
scas
mov
inc
jecxz
push
add
push
push
push
das
xchg
mov
inc
loopne
sti
pop
icebp
cmpl
fs
cli
daa
add
inc
add
pop
push
cmp
outsb
out
nop
pop
pop
mov
outsl
jl
repnz
push
rcll
push
sub
mov
push
pop
sets
xchg
xchg
pop
xor
dec
jmp
jnp
fcompl
fnsave
adc
incb
lods
test
adc
das
mov
addb
cmp
fldl
cmpl
jne
sbb
rol
xchg
add
mov
inc
add
jbe
insl
and
sub
sbb
in
and
int3
out
hlt
fwait
mov
repnz
cmp
jle
sbb
and
sti
aaa
lcall
jae
add
mov
cmp
in
sub
lock
test
int
mov
jne
push
add
jb
cltd
add
xchg
xor
push
jbe
sub
adc
stos
xor
aas
jl
pop
and
or
pop
add
cmp
in
push
arpl
rorb
imul
pop
xchg
mov
or
push
push
insb
xor
inc
sahf
adc
push
or
jo
or
shlb
sbbb
pop
cmp
lods
aas
ljmp
lock
or
push
sub
inc
jo
jne
inc
or
lcall
mov
cmp
mov
test
cld
sahf
insb
rcr
divb
outsl
dec
pop
pop
mov
push
sub
or
mov
pop
add
inc
sbb
movsb
inc
inc
pusha
jo
pop
push
je
cmp
je
push
decl
hlt
mov
sub
aaa
sbb
adc
andb
in
sub
lret
sbb
ret
sub
xchg
and
push
adc
mov
xor
mov
sub
rcr
cmp
add
or
or
mov
icebp
clc
push
repz
adc
push
cmp
aas
clc
and
pop
mov
push
add
xor
sub
xchg
cmp
and
and
pop
add
fs
jmp
xchg
loope
pop
pop
fimull
adcl
in
push
push
jne
test
add
add
or
dec
hlt
adc
add
lds
sbb
fisubrs
mov
cs
jo
and
shlb
mov
in
jg
cmpsl
xor
les
push
push
mov
arpl
adc
icebp
inc
add
xor
mov
inc
adc
push
and
add
push
jno
jo
aaa
daa
sub
movb
push
xor
popa
mov
xchg
and
and
jp
pop
or
push
cmpsb
iret
push
push
mov
pop
mov
jbe
scas
rcrl
std
add
mov
int
mov
rorl
sbb
pusha
idivl
sbb
or
sbb
lahf
mov
add
cmp
mov
pop
jb
jmp
lea
push
sbb
push
adc
andb
faddl
inc
xchg
leave
lret
sub
icebp
push
sbb
inc
jo
dec
jno
or
jmp
sbb
dec
xor
lret
sub
xor
jmp
push
dec
pop
pop
xor
mov
aas
push
mov
push
js
add
pusha
sbb
inc
and
int3
sub
cmp
out
movb
inc
push
xchg
jmp
push
mov
push
push
sbb
inc
aam
sbb
pop
shll
ret
add
dec
add
jae
add
xor
lods
cmp
paddd
insl
adc
inc
sbb
lret
xchg
sbb
roll
dec
or
cmp
mov
mov
jmp
mov
sti
jnp
rcrb
cmp
ja
js
jl
sub
sbb
test
or
sarb
jns
and
mov
push
jb
and
or
add
fwait
movb
inc
or
into
and
xlat
loopne
pop
xchg
add
add
push
xor
int
mov
jmp
cmpsb
cli
movsb
mov
ss
dec
lahf
adc
inc
and
cmpsl
sub
pop
dec
adc
and
jno
mov
xor
mov
enter
jmp
cltd
cmp
add
jb
xchg
push
and
add
or
or
push
lock
sub
shll
pushf
insl
sbb
push
xchg
mov
fnstenv
pusha
ja
pusha
dec
adc
mov
cmpl
cs
rclb
mov
push
outsl
ljmp
pop
add
push
ljmp
fadd
push
jl
sub
push
adc
fidivl
andb
lods
test
repnz
dec
inc
add
clc
fisttpl
sub
lock
sbbb
pop
and
cmp
aaa
and
sub
push
dec
int3
and
and
jl
in
inc
in
dec
or
pop
loop
and
push
aas
or
jne
jmp
orl
push
nop
ss
mov
lods
mov
sbb
cmp
sub
push
in
inc
enter
sbb
push
push
cld
cmp
jmp
out
imul
pop
mov
pop
cmp
xor
rcrb
test
jbe
jle
cmp
dec
mov
dec
pop
arpl
ret
sbb
sub
lods
push
cltd
pop
ficompl
xchg
push
or
or
in
jmp
jne
sbb
push
push
out
xchg
mov
add
cmpsb
inc
clc
pop
push
test
int
mov
stos
cmp
cmp
and
and
push
mov
jo
mov
js
or
testl
sub
popf
outsb
add
out
add
ja
add
sbb
ds
jae
sub
out
adc
movl
scas
out
dec
ljmp
inc
sahf
rolb
sub
xor
sti
add
xor
shl
mov
or
adc
ds
xor
cmp
jno
and
inc
mov
push
and
sbbl
push
enter
pop
pop
ret
sub
inc
or
xlat
add
add
push
mov
mov
stos
movsl
sbb
cmp
mov
inc
inc
pop
cs
aam
adc
mov
adc
push
out
jmp
adc
movsl
sbb
sti
fiaddl
push
mov
lods
scas
pop
sbb
mov
popa
insl
unpcklps
mov
push
shl
add
bnd
rolb
or
pop
dec
mov
lods
push
fisttps
js
les
mov
mov
cmpsb
inc
mov
cld
mov
push
jmp
push
loope
lcall
cmp
in
pop
clc
or
icebp
daa
mov
and
imul
outsb
wbinvd
cmc
inc
cmp
ret
or
pop
mov
je
sub
ja
jge
sarl
dec
ret
push
cld
cmp
push
loopne
push
stos
adc
push
mov
add
add
gs
jne
ficoms
jmp
pop
scas
in
push
mov
int
fldenv
cmc
daa
mov
push
por
dec
andb
push
dec
adc
insb
stos
inc
mov
movsl
or
cmc
test
iret
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
or
push
out
add
cwtl
movsb
bound
inc
sbb
addb
cmp
cli
jg
jmp
or
or
pop
push
ljmp
xor
icebp
fnstsw
push
jnp
add
cmp
mov
pop
js
dec
orl
aaa
and
pushf
es
jecxz
dec
xchg
leave
dec
inc
pop
pop
rolb
and
or
loop
or
mov
inc
rolb
fmull
inc
cmp
sbb
add
or
and
xchg
sub
or
adc
sbb
sbb
inc
negl
pop
mov
cmp
jnp
jmp
sub
lcall
jb
sub
in
mov
jge
mov
repnz
push
push
test
ficomps
xchg
adc
push
pop
jmp
cmpsl
and
aaa
mov
stos
cltd
adc
dec
add
jne
mov
mov
cmp
mov
popa
cld
cmp
arpl
sarl
cmp
jne
push
jno
sarb
xor
jmp
ja
dec
addb
jmp
adc
mov
mov
pusha
jne
inc
xor
push
mov
scas
dec
sbb
adc
shll
lahf
jle
pop
or
movsb
push
sub
mov
je
movl
cld
or
jne
add
inc
and
sub
mov
pop
sbbl
sbb
pop
inc
sbb
mov
js
inc
repz
or
fmuls
push
jne
repz
and
int
hlt
inc
xor
lcall
stmxcsr
xlat
and
cmp
ss
jp
mov
and
clc
jg
jg
subl
jmp
movq
movaps
out
rcll
clc
jae
xor
jle
aaa
das
mov
xor
cli
rcl
lret
adcl
or
jge
repz
lcall
or
push
fstl
ret
adc
jnp
mov
out
adc
add
adc
push
add
adc
mov
popf
push
clc
movsb
cmp
xchg
imul
roll
add
shl
mov
xor
pop
enter
rorb
ja
fcmovb
sbb
sbb
and
je
imul
cmp
ja
pop
sub
dec
mov
add
add
test
out
mov
js
push
mov
jnp
dec
adc
xchg
adc
pop
loopne
inc
sub
jp
xor
aas
sub
or
mov
dec
and
jne
pop
js
mov
loope
xchg
sahf
lret
or
mov
jo
icebp
arpl
aaa
cwtl
ja
dec
arpl
call
in
mov
mov
ret
and
int3
and
bnd
sarb
ffree
nop
lock
mov
scas
push
scas
adc
or
bound
jb
aad
into
mov
testb
add
or
mov
adc
mov
push
inc
inc
int3
jle
mov
call
inc
adc
sbbb
mov
and
rorl
sahf
add
inc
stos
nop
adc
adc
aam
daa
and
mov
ja
cmp
dec
sbb
adc
fcoml
pop
and
xor
out
mov
call
mov
popf
rorl
sub
push
hlt
insb
test
in
cmp
adc
jo
lods
inc
sub
imul
push
mov
cmpsl
add
push
sti
push
xchg
jmp
push
lods
push
loope
push
mov
mov
push
pop
add
push
xchg
inc
fists
xor
push
mov
ficoml
ja
mov
adc
inc
cmp
jne
inc
cmp
out
inc
xor
call
out
mov
adc
test
push
adc
xchg
fdivrs
xchg
adc
dec
adc
addl
call
inc
inc
cmp
cmp
push
or
pop
adcb
cld
enter
sahf
lret
adc
arpl
dec
cmp
es
adc
cmp
ret
pop
mov
aam
push
shrb
pop
or
lods
add
lock
daa
sbb
adc
cmpb
icebp
lods
push
push
and
mov
imul
cmp
mov
mov
mov
jno
add
enter
cmpsb
mov
sbb
ret
jnp
idivl
inc
shlb
dec
leave
sbb
or
or
inc
pop
cmp
mov
mov
std
add
shl
rol
inc
inc
dec
adc
sarl
rcl
lret
jne
sbb
in
jg
adcl
mov
mov
add
push
int3
in
movl
scas
jmp
dec
scas
cltd
inc
mov
or
xchg
and
nop
push
xchg
or
adc
mov
je
add
out
cmp
cmp
ret
push
or
and
hlt
daa
imull
jge
rcr
dec
lret
and
cld
inc
xor
leave
push
xor
add
push
js
and
push
test
test
daa
lds
mov
insb
cli
mov
push
pop
popa
push
insb
ja
pusha
add
pusha
mov
push
cmpb
cmp
adc
jmp
test
cmp
ja
inc
into
lock
jo
clc
shufps
dec
outsl
inc
sbb
stc
fimull
or
movl
mov
inc
ds
ja
mov
test
pushl
jb
into
jmp
mov
dec
mov
mov
dec
dec
mov
daa
ljmp
ret
pop
push
or
xor
or
add
cmp
mov
enter
push
cmp
loope
or
mov
adc
sub
sbb
cmp
jb
lea
nop
ret
outsb
mov
andl
sar
cld
jne
mov
test
cmp
jne
es
jne
call
in
out
mov
add
add
jb
jmp
cld
mov
incl
dec
jmp
adc
jmp
sbb
repz
std
jmp
cld
cld
ret
iret
into
fucomi
pmaxub
popa
xchg
sbb
fidivs
push
push
push
inc
push
lock
mov
push
mov
das
cmc
add
les
enter
mov
add
adc
adc
cmp
loopne
icebp
adc
sarb
inc
addb
sbb
in
sub
adcl
push
add
adc
or
adc
sbb
or
sbb
mov
aas
push
shll
or
adc
adc
fsts
mov
push
adc
ljmp
jg
add
mov
mov
dec
sbb
addl
and
xchg
addb
mov
popa
and
cmp
mov
push
and
jae
outsl
fildll
xor
fcoml
jle
push
sub
les
pop
div
jb
cmpl
rorb
rolb
adc
loopne
mov
pop
pop
mov
loopne
clc
pop
adc
push
mov
sbb
pop
sub
jbe
add
daa
sub
pop
sub
das
gs
mov
push
sbb
xlat
adcb
sbb
subl
or
sbb
outsl
adc
push
or
enter
xlat
pop
cmc
mov
inc
cmp
add
subb
adc
insl
fwait
sub
leave
push
xor
fucomp
mov
jl
or
pushf
lods
push
mov
fisubl
cmpl
pop
pop
in
rcrl
inc
fucomp
cmp
xor
sti
jg
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
mov
test
test
and
cmp
adc
jp
xor
add
mov
stos
mov
pop
and
or
fbstp
jne
pop
jne
dec
add
add
lds
sbb
sbb
push
dec
fs
sub
mov
jmp
test
mov
cmp
std
sub
cmp
ja,pn
xor
add
cmp
jae
push
or
jb
movsb
push
outsb
jne
lock
xchg
and
pop
popf
jmp
sbb
dec
sbb
xor
les
and
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
orl
ja
lret
mov
sbb
mov
add
mov
mov
pop
mov
pop
xchg
add
into
int
sbb
mov
das
in
mov
push
popa
rolb
hlt
mov
pop
aaa
adc
push
add
mov
push
mov
push
fsubrs
add
mov
pop
push
sub
or
mov
loopne
stc
aas
fcomps
or
imul
data16
jge
add
dec
jecxz
mov
add
lods
orb
stos
aad
inc
test
jo
or
imul
add
imulb
and
or
cmp
or
jmp
dec
adc
sti
pop
xchg
mov
or
popa
cmp
addps
push
mov
and
popf
daa
stos
xor
push
or
ret
test
rol
mov
cmpsb
testb
call
mov
mov
rolb
or
push
adc
jmp
dec
xor
in
es
je
lea
push
aas
push
repnz
push
jmp
jns
arpl
jo
jb
dec
scas
cmpsl
push
push
mov
jno
lock
out
push
sbb
lods
rorl
dec
push
jo
add
les
ja
inc
pop
adc
aaa
lret
js
and
xor
shr
aam
add
add
inc
add
mov
mov
add
imul
sub
add
movsl
hlt
jae
fwait
scas
sbb
or
add
lock
inc
or
add
test
sbb
adc
fidivs
sub
rolb
pop
adc
call
add
loopne
je
inc
cmpsl
cmp
jb
lea
push
adc
push
pop
dec
ss
jp
push
add
mov
cmp
jb
and
js
cli
mov
push
adc
hlt
xor
and
dec
or
fwait
pop
lock
or
mov
cmp
mov
push
out
cmp
or
testb
sbb
sbbl
adc
pop
xchg
inc
mov
cli
jmp
pop
xor
dec
enter
xchg
push
push
sub
push
mov
xlat
rol
inc
pop
add
xor
mov
push
jge
mov
mov
fnstenv
add
popa
pop
enter
pop
insb
xchg
and
testb
add
push
and
xchg
add
daa
mov
nop
call
orb
out
mov
and
xor
mov
std
pop
std
movb
sub
jge
fnsave
inc
mov
fwait
dec
outsb
push
push
in
cmpl
cmpsl
fs
lods
cmp
rclb
jle
inc
mov
pop
jmp
adc
test
mov
ja
loopne
popf
addb
and
sub
sub
ja
into
cmp
in
ficomps
outsl
mov
ss
adc
xchg
shrb
in
out
xchg
cltd
js
jle
push
pop
movsb
fsts
sbbl
or
cmp
lock
mov
add
fnstsw
pop
add
bswap
pop
mov
dec
adc
inc
rcrl
in
ret
in
jb
xor
repnz
xlat
loop
lret
or
and
out
daa
and
or
scas
insb
ss
inc
push
mov
in
xor
xor
inc
xchg
in
popa
add
aaa
pop
je
push
or
jp
mov
int3
rorb
int3
xor
lods
adc
movsb
cmp
mov
jecxz
mov
mov
xchg
pusha
cmp
popf
add
divb
clc
fmuls
or
std
mov
out
add
cmp
jb
xor
in
sbb
ss
pop
cmc
in
push
jp
and
xlat
test
xor
cmp
arpl
out
loopne
push
cmpsb
fdivrl
and
cmpl
jbe
ret
mov
or
add
insb
mov
inc
inc
es
sub
lds
xor
test
xlat
xchg
add
and
sbb
push
pop
out
pop
sbb
jo
fildl
xchg
mov
mov
sbb
and
icebp
xchg
lahf
stc
add
push
xchg
jns
mov
call
fistpl
sub
cwtl
or
xchg
add
and
pop
add
cmpsl
sub
or
cmpsb
cwtl
add
loope
sbbl
inc
clc
js
pop
mov
dec
jne
mov
push
pop
xchg
fstpl
inc
jne
mov
sbb
hlt
je
outsb
mov
adc
add
jo
add
test
inc
lahf
push
mov
pop
xchg
insb
push
and
int
les
leave
jbe
aam
jge
sbb
xor
pop
pop
pop
fnstsw
push
jl
mov
mov
mov
repnz
or
sarb
or
and
ds
push
sub
iret
flds
adc
ss
or
cmp
cmpb
jne
adc
or
or
or
inc
xor
jle
cltd
xchg
mov
arpl
popf
mov
fcoms
mov
jmp
popa
vmovapd
mov
add
imul
out
dec
cmpl
xchg
xchg
jl
in
dec
or
cwtl
std
mov
adc
push
push
pop
or
jle
orb
movzbl
add
sub
xchg
sbbb
xor
movsb
ret
lea
push
loopne
mov
add
jo
pop
add
xor
inc
dec
add
repnz
pop
daa
add
adc
add
add
push
shrb
jno
je
lcall
flds
add
cmp
push
push
nop
adcl
jae
sub
or
pop
enter
or
xor
sub
or
or
or
or
or
ja
cmpb
jns
push
cwtl
push
push
and
pusha
in
nopl
in
lods
xor
push
adc
pop
adc
fwait
cmpb
inc
add
popa
in
adc
adc
sahf
lret
out
adc
ret
fisubs
lcall
adc
and
and
push
push
push
lret
adc
mov
pop
xor
in
lcall
cmpb
add
pop
enter
sbb
pop
push
sbb
out
sbb
jb
sbb
add
aaa
dec
jge
sbb
addr16
push
push
inc
decl
in
push
pop
pop
jne
add
add
sub
in
ja
clc
cmp
jae
add
cmp
xchg
lock
movsl
fiaddl
inc
add
xor
push
in
push
in
jno
repnz
sub
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
rcll
sbb
add
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
sbb
xchg
aaa
cld
push
packuswb
jnp
mov
xor
sbb
add
adc
add
add
pop
sub
add
lahf
cmc
xchg
js
in
mov
or
movsb
imul
jecxz
enter
mov
in
stos
and
fdiv
inc
adc
push
in
stc
daa
ss
inc
in
sti
out
out
cltd
and
add
xchg
pop
leave
dec
sti
sub
sbb
pop
jmp
jno
push
mov
cltd
in
add
cli
popf
cli
imul
cli
out
out
xor
cltd
push
lock
add
cli
push
cli
test
jmp
sbb
dec
cs
stos
push
stc
push
jno
sbb
fstpl
int3
jmp
push
div
negl
fwait
inc
pop
and
xor
add
xchg
clc
cmp
lret
sti
in
sbb
sti
cltd
mov
pop
xchg
add
sub
sbb
cmp
and
ret
test
inc
or
loop
push
jno
push
icebp
mul
pop
shl
sbb
jg
or
xchg
jno
sbb
out
out
xchg
mov
and
imul
imul
ljmp
idivb
cmp
pop
mov
xchg
idivb
insb
out
cmp
test
inc
repnz
and
cmp
add
sbb
dec
push
repnz
adc
jb
cmc
pop
xchg
cmc
mov
mov
pop
pop
xchg
cmpsb
jb
cmc
div
idivb
xlat
cmp
and
flds
clc
clc
jecxz
cmp
lock
hlt
les
jno
mov
xchg
hlt
pop
jne
inc
mov
inc
push
hlt
sbb
das
pushw
data16
out
jne
hlt
idivl
jo
sti
dec
sub
adc
ds
loope
dec
push
cmp
jns
cmp
subl
xor
imul
shl
repz
repz
mov
and
sbb
pop
repnz
sbb
movsl
test
jne
cmp
or
sub
jo
sbb
mov
jne
cmp
repnz
orl
sub
loope
sbb
je
icebp
js
divb
xchg
cmp
xchg
icebp
jb
sbb
icebp
cmp
sub
cmc
cmc
pushf
dec
push
jno
add
jecxz
xchg
push
pop
xchg
ffree
lock
in
rcrl
and
cmc
jne
leave
mov
xor
jne
pusha
sbb
icebp
dec
mov
ss
jmp
push
stc
outsb
sub
out
ret
cli
xor
in
cmovno
push
add
xor
inc
int3
add
and
and
stos
add
jp
sub
jnp
loopne
dec
add
adc
jge
mov
add
jmp
inc
ja
test
and
jmp
sti
and
sbb
rorb
addr16
push
jae
imul
clc
inc
push
fadds
add
imul
aas
repz
insl
mov
out
dec
sub
insb
ds
ss
mov
inc
repz
mov
dec
sub
sbb
mov
cmp
dec
popa
and
jg
sub
call
mov
dec
sub
dec
and
push
push
icebp
or
incl
mov
add
adcl
ret
nop
aam
inc
cmp
cmp
cld
jb
test
mov
xchg
push
je
int
push
loope
hlt
lret
cmp
adc
add
cld
flds
xor
icebp
push
adc
mov
push
xor
jge
push
sub
movsb
lahf
fiaddl
aam
call
cmpl
adc
pop
shlb
adcb
push
adc
pop
pop
mov
aam
in
push
fimuls
mov
cmp
or
push
mov
inc
mov
fists
fsubrs
fmuls
and
add
push
dec
sub
insb
sub
mov
add
stos
and
add
sbb
xor
loop
mov
pushf
cld
imul
mov
xorl
pop
add
clc
or
mov
fdivl
neg
sub
jo
mov
cld
rorl
pushf
testb
cld
add
or
xchg
fsincos
xchg
bound
stos
mov
dec
ljmp
test
xchg
js
lods
loopne
adc
movsb
sub
cmp
inc
test
fldl
adc
sub
in
pop
push
adc
inc
xchg
inc
mov
shl
jle
dec
faddl
sbbl
repnz
fdivrp
add
inc
xchg
cmp
adc
out
sub
lds
popa
adc
cmp
cld
or
pop
inc
jb
pop
imul
pop
sub
and
inc
inc
inc
es
imul
push
enter
cmp
push
fcomps
out
pop
inc
push
inc
and
gs
lret
sti
dec
orl
push
cmp
in
cmpsb
or
pop
mov
repnz
je
pop
in
dec
add
jnp
sbb
inc
inc
pop
cmp
enter
add
jbe
push
rcr
push
cmp
mov
add
cmpl
or
and
and
push
inc
pop
pop
jg
mov
jmp
mov
movsb
add
sbb
mov
mov
jo
sub
mov
ret
jl
pusha
iret
xor
xchg
data16
push
stc
jo
mov
lret
jl
sub
pushl
push
adc
call
or
cmp
xlat
stos
test
sbb
outsb
out
jns
xor
add
cmp
push
lcall
sbb
in
ja
add
push
mov
and
in
add
inc
pop
popa
add
rol
test
out
repnz
pop
cmp
xchg
jmp
lret
clc
push
enter
add
mov
lock
aad
or
cmp
add
testb
add
les
jb
das
xor
add
outsl
mov
fimuls
xlat
dec
pop
dec
jne
add
mov
aam
inc
and
xchg
stos
sbb
es
add
add
sub
incb
movsl
inc
lcall
push
out
cmp
push
notb
mov
or
add
rolb
movlhps
andb
aad
jbe
pop
and
cmovs
adc
push
jb
test
adc
mov
sar
ror
rep
out
mov
inc
inc
mov
adc
jb
bound
ds
push
lea
push
mov
fidivrs
or
fnstenv
inc
add
add
cmpsb
mov
mov
test
add
movl
and
add
dec
or
push
xor
sub
out
sahf
and
adc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
xchg
xchg
into
cld
ljmp
in
lock
fldenv
jmp
mov
mov
inc
mov
xor
cmp
sbb
lea
dec
scas
mov
or
sub
out
lock
neg
adc
mov
sub
stc
sub
pop
ror
jnp
pop
nop
add
sub
push
fiaddl
movsb
mov
int3
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
or
push
mov
iret
repz
int3
aam
pop
iret
repz
aaa
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
outsl
jno
inc
add
push
sbb
and
push
add
or
mov
xchg
icebp
mov
push
sbb
push
mov
mov
incl
inc
decl
movsb
mov
in
pop
pop
lods
repnz
cmpsb
cs
push
cld
cmp
xor
icebp
fistpll
jbe
push
cltd
pop
idiv
scas
push
pusha
or
adc
add
and
out
aaa
dec
mov
mov
scas
xchg
sbb
xor
push
bnd
cmp
mov
sub
call
into
jae
pop
jbe
mov
dec
mov
jmp
fsubrl
sbb
or
pop
hlt
xorb
int3
cmp
sub
push
jg
fnstcw
dec
dec
sbb
add
pop
call
or
sbb
dec
dec
je
push
push
push
nop
jb
add
jmp
dec
jne
xchg
xor
mov
dec
and
pop
mov
or
push
mov
sbb
push
cmp
push
and
das
sbb
add
test
xchg
mov
sbb
inc
cltd
push
lock
mov
pop
push
push
pop
shrb
dec
jae
push
pop
scas
ret
xchg
mov
push
adc
push
fiaddl
pop
jo
mov
stos
pop
mov
aam
mov
xor
pop
cmp
cmp
mov
sbb
ja
insl
or
jle
add
aas
jge
push
push
cltd
pop
idiv
inc
mov
add
mov
inc
xor
xchg
inc
out
cmp
dec
or
jmp
sub
mov
lea
pop
imul
fs
adc
imul
add
jmp
jl
mov
sbb
call
mov
mov
pop
insb
sub
sbb
lea
or
and
adc
dec
add
sbb
mov
push
pop
incb
inc
jns
adc
cmp
pop
inc
xchg
sub
incl
pop
mov
cmp
pop
sub
repnz
movsb
pop
adc
les
andb
mov
sub
cmp
push
mov
ror
xchg
push
cmp
mov
jge
pop
je
sbb
movl
add
ud2
dec
or
adc
test
mov
outsl
mov
mov
in
pop
je
dec
inc
mov
rorl
ror
sub
lret
js
lods
nop
bound
lcall
pop
popl
popf
sbb
and
push
sbb
sti
fnstenv
xchg
inc
pop
push
jbe
mov
aaa
subl
inc
sub
or
stc
pop
push
push
add
lcall
sbb
push
push
pushf
movups
push
fwait
and
inc
sbb
jl
test
ret
push
je
mov
adc
pop
push
push
movsb
xchg
jg
mov
mov
adc
jge
sbb
or
push
or
jg
icebp
mov
adc
add
sub
push
loopne
adc
adc
or
out
call
roll
push
aaa
mov
hlt
push
out
mov
cli
or
rcrl
mov
xchg
rorb
adc
or
adc
unpcklps
push
push
mov
add
hlt
dec
js
mov
adc
jp
adc
pop
sbb
aam
add
cli
pop
pop
decl
inc
jg
sbb
gs
ret
sbb
in
pop
mov
cmp
nop
cs
fisubl
sbb
inc
inc
cmp
je
xchg
mov
stc
fs
orb
or
fadds
inc
fidivrl
pop
push
dec
popa
daa
in
sbb
mov
xor
xchg
inc
pushf
push
inc
rolb
into
push
mov
test
mov
incl
fdivr
push
push
mov
push
inc
push
cs
sbb
sbb
inc
dec
test
sarb
or
bound
add
add
xchg
dec
push
xor
fldt
movl
or
mov
mov
addr16
test
adc
loop
loopne
cmp
and
cmp
je
mov
nop
sarl
mov
out
divl
int3
push
fwait
inc
or
add
es
sub
push
pop
inc
int
adc
in
fs
or
sbb
cli
frstor
push
jns
lods
sbb
dec
movsb
jb
jns
add
in
fxch
inc
sbb
mov
adc
xchg
test
shl
pop
add
add
rclb
lea
sbb
mov
pop
call
popa
dec
or
mulb
pop
sub
push
jmp
das
pop
cmpsl
add
dec
jmp
dec
sbb
loopne
mov
sub
pop
cmp
inc
and
fcoms
and
loop
fidivrl
mov
rolb
mov
aad
imul
dec
cmp
push
out
add
add
xor
inc
mov
cmpsl
lock
shl
sbb
stos
adc
dec
xor
mov
mov
dec
sbb
jge
bound
and
cmp
or
adc
pop
mov
sbb
mov
xchg
mov
mov
stos
jb
scas
mov
mov
sbb
or
out
inc
push
jmp
cmp
mov
or
inc
inc
dec
or
pop
pop
sahf
lcall
outsl
jmp
mov
sbb
push
movsb
cltd
pop
cmpsb
jne
imul
xor
push
lret
and
sbb
mov
inc
jmp
aas
inc
and
or
adc
ret
push
and
pop
aam
fisttpl
stos
mov
nop
jmp
mov
add
add
aam
sbb
cmp
pop
jo
pop
fldz
mov
xor
adc
and
cmp
sbb
fdiv
roll
testb
es
pop
mov
aam
push
lret
xor
mov
lcall
movsl
add
cmp
fstpl
xchg
sbb
mov
shlb
fs
or
push
jge
and
ds
jmp
pop
arpl
xchg
xor
out
push
jno
rcrb
cld
rorl
and
dec
js
hlt
incl
pop
ljmp
std
mov
or
mov
add
and
jne
or
rcrl
jne
or
push
in
lock
pop
daa
or
sub
in
orb
roll
xor
into
dec
lcall
jbe
js
adc
aas
sub
cmp
jge
and
lods
and
addr16
add
cwtl
or
xor
pop
and
fsubrl
push
bound
ficoms
or
or
sbb
loopne
xor
and
sub
in
adc
cmpsb
into
gs
clc
xorl
sbb
ficomps
cmpsb
mov
stos
sub
or
shlb
xchg
xor
cmp
xlat
or
icebp
push
aam
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
add
dec
add
test
push
xor
or
sbb
push
imul
sub
aad
push
pop
push
dec
sbb
cld
xchg
xorb
arpl
imul
cmp
lea
loope
imul
sub
inc
rclb
imul
fsubl
add
in
add
adc
or
pusha
popa
inc
adc
fstl
pop
lret
mov
sbb
sbb
pop
or
scas
jbe
or
fs
insb
clc
add
mov
fildl
and
mov
push
sub
std
jl
dec
xchg
jle
repnz
dec
jne
jle
out
jne
pop
dec
sbb
pop
lcall
add
andb
icebp
cmp
push
pop
xor
rcrb
clc
fmuls
sub
call
dec
ljmp
dec
jae
xchg
add
mov
ds
xchg
push
or
in
insb
sub
shl
push
incl
add
fs
aam
mov
adc
or
add
inc
mov
adc
frstor
adc
and
push
and
push
ret
rol
pop
pop
add
push
sbb
and
jecxz
dec
imul
push
lea
loopne
andl
loope
push
add
notb
fucomi
add
cmp
add
lahf
daa
add
xor
add
dec
stos
xchg
in
jnp
je
out
test
or
push
dec
or
pop
mov
testb
push
fs
orb
lock
sti
sbbb
outsb
adc
lea
dec
xchg
adc
adc
sti
add
stos
call
sbb
inc
pop
fadds
adc
jle
ja
and
xchg
or
add
inc
cs
jo
inc
add
ror
aam
push
inc
jle
std
jne
cmpl
and
push
shlb
pop
xor
call
roll
fcmovu
pop
or
adcl
je
shl
enter
sub
or
add
lock
loop
mov
push
das
pop
mov
test
andl
mov
mov
mov
sbb
repnz
mov
and
mov
sbb
repnz
adc
popl
rcll
cmp
add
inc
call
mov
push
movl
cmp
xor
sarb
xor
fbld
adc
loope
orb
pop
inc
cmp
out
or
adc
ja
cld
sub
jmp
push
push
out
cmp
sbb
jo
sub
cmc
pusha
xchg
cld
sub
je
pop
push
push
movsb
popa
or
dec
ficoml
inc
imul
or
xor
xchg
ja
or
push
and
or
cmpsb
fadds
imul
rcll
or
loope
or
mov
mov
mov
sub
mov
pop
add
testl
daa
or
add
xchg
cmp
call
nop
hlt
sarb
and
sti
mov
pop
pop
roll
in
push
movb
pop
inc
lea
and
or
sub
nop
out
push
orb
aas
push
push
loop
xchg
jae
popa
mov
or
ficoml
push
push
dec
enter
push
and
cs
push
ss
push
jbe
add
cld
inc
dec
rcrl
and
int
clc
popl
cwtl
push
orb
mov
jmp
and
je
and
or
xchg
outsb
lock
aad
jmp
mov
mov
sbb
lahf
mov
adc
fisttpll
push
cmp
aad
and
sbb
lret
add
jmp
cmp
loop
imul
add
test
rolb
add
ret
stc
push
adc
cwtl
je
clc
mov
lds
idivb
or
fstpt
in
push
or
xorb
mov
pop
or
cmp
cwtl
sbb
add
bound
dec
test
pop
insb
push
or
loope
ss
dec
mov
bound
es
cmp
loopne
rcl
cmp
cmpsl
inc
ss
cmp
in
mov
inc
cmp
std
jne
xchg
imul
cmp
enter
add
adc
ret
add
or
pop
ret
jle
xchg
push
fadds
inc
aas
pop
insl
daa
arpl
push
stos
xor
movb
loope
scas
xchg
mov
cmp
or
ja
jo
push
jmp
mov
loope
add
and
xor
and
sbb
dec
xchg
pushf
adc
mov
xchg
cli
add
jbe
xchg
in
lea
mov
rcll
add
inc
pop
leave
inc
dec
aas
pop
lods
add
imul
loopne,pn
pop
lea
mov
into
sub
jmp
lock
std
fs
adcb
cmp
adcb
inc
xchg
sbbb
jne
outsb
incl
clc
sti
cmpsb
jge
add
jb
mov
xor
xchg
cmp
sti
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
hlt
mov
jl
sbb
xchg
mov
mov
push
clc
or
inc
push
mov
inc
dec
jne
mov
test
nop
add
test
hlt
gs
loop
or
jmp
cmp
outsl
and
pop
jns
jecxz,pt
adc
mov
loopne
adc
pop
sub
inc
leave
mov
mov
xor
and
jnp
or
mov
inc
sub
je
mov
add
xchg
orb
test
loopne
or
jge
cld
aas
divb
stos
xchg
test
adc
cmp
inc
push
ss
pusha
cmpsl
push
int3
cmp
jb
add
pusha
xor
std
xchg
and
fs
or
xor
into
mov
add
sbb
enter
or
pop
sub
jmp
mov
cmp
stos
sbb
mov
xor
pop
pop
push
inc
add
ret
adc
ss
push
out
arpl
pop
rcl
xchg
jno
es
push
jne
xlat
fwait
fs
xchg
in
push
mov
and
or
sbb
jp
dec
ror
leave
cmpl
popa
outsl
push
and
pop
movl
mov
and
cmp
es
and
pop
popf
loopne
imul
pushl
imul
in
inc
mov
cwtl
xor
sbb
in
sbb
les
inc
xchg
int3
es
mov
subb
and
outsl
sbb
mov
dec
mov
push
cwtl
mov
jne
jo
xchg
pxor
pushl
call
jnp
sub
cmpl
add
lock
pushf
or
cmp
xchg
pop
adc
inc
add
cmpsb
decl
inc
sub
shlb
inc
es
xor
sbb
mov
leave
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
adc
or
sarl
add
dec
xor
inc
push
jo
cwtl
xorl
inc
sub
xor
fwait
sub
je
push
mov
pushw
sbb
stc
xchg
inc
test
rcrb
sbb
inc
in
and
pop
xchg
fmuls
xchg
add
ret
jo
test
sbb
jo
loope
sbb
or
cltd
or
ds
xchg
fiadds
dec
add
push
xchg
dec
or
or
mov
cmpsl
jne
out
add
and
push
pop
sbb
call
roll
jmp
mov
jne
xchg
incb
and
pop
mov
push
lret
ss
xor
xor
adc
cld
pop
xlat
add
xchg
loopne,pn
popa
loopne
jns
out
call
sbb
and
push
add
loope
sub
push
push
push
mov
outsb
ja
jmp
fsubrs
addl
mov
clc
jp
jb
jge
adcb
aaa
mov
pop
pop
rolb
xor
and
cwtl
and
sbb
dec
xchg
lret
dec
fmul
pop
insb
push
cld
push
jo
mov
lret
sbb
inc
or
inc
mov
lods
add
test
movsb
or
mov
xchg
push
imul
cmpsb
insb
push
cmp
push
bound
enter
mov
cmp
mov
push
outsl
mov
dec
roll
mov
cmp
add
aam
ret
dec
push
mov
pop
xor
push
push
movsb
push
lret
bound
xchg
pop
jns
cmpsl
and
dec
add
mov
or
xor
rol
mov
push
xchg
iret
xor
xchg
cmpsb
adc
inc
cmp
in
js
jne
push
cli
xor
jle
inc
and
xorl
cmp
inc
sub
enter
cmp
and
jle
test
adc
bound
push
dec
insb
inc
cli
mov
xchg
test
cld
mov
mov
adc
test
dec
adc
lds
jge
or
inc
dec
sbb
pop
push
lret
cmp
ljmp
mov
cwtl
jmp
pushf
cmpl
aam
mov
adc
pushf
cmpsb
and
daa
jbe
popf
test
jns
mov
ja
mov
out
mov
and
shll
pop
dec
gs
lret
mov
and
fldcw
pop
jb
pop
mov
push
xchg
mov
sub
and
xor
jo
mov
mov
sub
test
jp
movsl
dec
cmp
loopne
lea
roll
popf
sbb
mov
dec
cmp
loopne
mov
mov
fcoml
shl
repnz
mov
int3
data16
popf
enter
repnz
movsl
shrb
pop
dec
cmp
jns
add
shll
ss
enter
dec
cld
sbb
rcl
in
sub
aam
or
cmp
mov
js
push
inc
rcr
lahf
lea
add
dec
mov
add
dec
pop
enter
or
pop
mov
in
pop
and
sub
jmp
jge
xor
ret
fists
es
pop
mov
in
add
addl
xchg
jmp
mov
lcall
mov
adc
js
adc
mov
pop
add
sbb
lcall
subb
push
push
in
test
js
pop
add
fstl
stos
add
xchg
iret
repz
out
push
loopne
ror
rorb
and
mov
mov
sbb
sub
stos
or
cmpsl
sbb
push
push
andb
nop
mov
fadds
add
cmp
mov
or
push
fs
nop
clc
cmp
je
test
sbbb
or
iret
enter
push
adc
mov
push
cmpsb
sbbb
icebp
cmp
cs
push
push
ret
xchg
xor
inc
jmp
and
js
or
add
push
and
cli
dec
movb
jne
jg
orb
insb
rorl
shlb
mov
jnp
test
out
jae
int3
or
out
push
and
push
cmp
mov
es
and
mov
add
add
add
and
add
push
pop
insl
idivl
aas
pushf
inc
and
sbb
mov
mov
ds
ja
je
call
mov
daa
inc
es
fwait
xor
add
push
orb
orb
jg
call
cmc
je
addr16
or
dec
dec
adc
add
andl
jl
xor
lcall
sbb
push
jge
jmp
cmpl
add
je
xchg
adc
push
movl
add
jmp
adc
mov
test
add
inc
jbe
ret
addr16
lods
push
bound
xor
inc
lcall
icebp
dec
or
adc
mov
pop
outsb
sbbb
out
jno
adc
outsl
push
dec
ret
dec
inc
pop
or
jbe
mov
sub
orb
mov
popa
jle
sbb
mov
test
ja
enter
js
call
sub
lock
and
mov
push
push
add
adc
hlt
jecxz
jmp
adc
pop
push
cmpsl
mov
push
inc
and
add
push
xchg
movsb
and
jl
ljmp
jno
xchg
mov
adc
jno,pt
or
inc
sbb
or
xor
or
adc
clc
add
ret
dec
test
xchg
add
pop
sbb
dec
mov
pop
add
jg
lea
inc
cmp
push
push
cmc
push
ss
pop
push
pop
ret
push
dec
ja
loope
inc
aad
imul
gs
rolb
mov
es
sbb
and
inc
rorb
and
hlt
hlt
adc
inc
shlb
pop
and
sbb
pop
rol
shrb
out
mov
cwtl
test
push
clc
mov
mov
pop
test
xor
push
dec
or
lock
andl
stos
push
mov
aaa
jecxz
mov
cwtl
adcb
inc
mov
xchg
cmp
imul
mov
adc
jbe
push
inc
jmp
sbb
test
fcmovnb
loope
lods
in
or
inc
fisttps
decl
cmp
add
and
or
lods
loop
ret
push
mov
into
sbb
clc
dec
xchg
mov
add
and
and
shrb
dec
ljmp
jns
es
rcrb
or
push
sub
mov
in
cli
add
add
inc
pusha
pop
and
sub
mov
and
xchg
lcall
lea
and
mov
add
xor
lock
mov
or
and
idiv
sub
inc
xor
je
cmpl
cli
jae
inc
inc
add
jmp
mull
movsb
xchg
shr
jge
xchg
mov
jg
std
inc
inc
cmpl
pop
test
cmpl
cmc
push
ret
aas
xor
nop
push
mov
je
dec
or
sahf
repnz
xor
sti
xchg
xchg
fnsave
in
mov
cs
fadd
sbb
out
mov
xor
sub
mov
sarl
xchg
lds
xchg
add
out
rcrb
push
leave
test
in
or
call
or
or
sbb
es
rclb
fildll
jle
lea
rcrb
jl
pop
fcmovnu
fadds
sbb
js
push
sar
pop
mov
push
adc
xchg
inc
mov
lea
jb
je
aam
clc
push
jl
into
fsubs
scas
lret
testb
mov
ss
sub
je
sbb
jmp
sbb
scas
pushf
pop
or
inc
lret
in
add
addl
or
adc
or
mov
jnp
adc
aam
aas
mov
add
sub
push
imul
sub
mov
lea
ja
es
andl
in
sub
or
movsl
hlt
fistl
cs
stc
nop
je
or
jae
push
sbb
mov
adc
loope
sub
adc
insb
xor
sub
mov
pop
and
jge
ss
or
xor
mov
addr16
dec
xor
movsl
mov
dec
fs
jns
or
adc
pop
inc
lcall
js
cmpsl
sbb
pop
xlat
je
inc
push
lahf
sub
inc
sub
push
outsb
lret
pop
sbb
or
rorb
push
sbb
jle
inc
test
push
or
add
ds
mov
lcall
dec
pop
or
loop
and
test
je
push
dec
or
jae
push
test
les
xchg
jle
aaa
jne
cmp
adcl
pop
loopne
icebp
jge
testb
in
das
xchg
pop
xchg
or
sbb
dec
sbbl
es
sub
sbb
add
mov
push
mov
add
push
insl
cmp
adc
andl
push
push
xor
sub
test
testb
or
dec
lret
ss
int3
push
fidivrs
jae
xor
mov
push
jg
jmp
mov
pushl
xchg
aas
push
jge
jnp
syscall
add
lret
jge
lcall
mov
inc
mov
cmpsb
sete
mov
js
sub
mov
cs
jns
loope
inc
movsl
sbb
js
sub
sub
mov
cli
add
add
push
lcall
push
xchg
mov
jno
clc
outsb
je
test
cmp
sbb
push
enter
xor
aas
add
xor
mov
test
mov
inc
sub
data16
movsb
sub
adc
mov
daa
test
mov
stos
add
push
std
cmc
push
mov
into
ret
and
jne
into
cmc
sti
movsb
mov
jmp
cmp
jle
insl
cmpl
incl
push
ret
mov
sub
push
xor
int
or
push
or
xchg
xor
shll
inc
cld
adc
fadd
cmc
mov
add
sub
js
pop
test
inc
mov
mov
ret
jecxz
lea
stc
lcall
pop
test
mov
rcl
sub
adcb
pop
cmpb
jne
and
test
jg
push
push
pop
fs
mov
setl
gs
decb
inc
leave
mov
cmpsl
rolb
mov
dec
lahf
shl
xor
sbb
push
sub
pop
test
push
lret
loop
fldcw
test
je
adc
push
add
pand
mov
jmp
out
or
je
sub
nop
rorb
je
sub
jg
jl
jae
add
rolb
jecxz
inc
mov
fimull
add
or
clc
popa
aas
jno
mov
or
jne
pop
ja
push
and
lea
adc
or
inc
je
mov
add
and
add
cmp
int
cmpb
nop
xchg
clc
sahf
add
pop
jo
clc
mov
dec
jmp
pop
xchg
sub
inc
cmp
subb
ret
into
andb
jg
shlb
xor
ss
push
mov
jmp
dec
pushw
pop
lret
inc
inc
mov
repz
push
push
xor
sti
sub
incl
aam
into
push
jmp
push
je
fwait
and
sub
push
test
sahf
and
mov
cltd
movsl
call
sub
pop
sarb
push
jp
xchg
mov
leave
dec
fdivrl
lea
lcall
adc
push
jbe
dec
sbbl
pusha
push
push
jne,pn
jno
push
add
push
aaa
cmp
insl
inc
jae
fistps
pop
xchg
nop
popa
jle
sbb
mov
mov
mov
ret
jg
jo
cmp
sti
push
and
imul
mov
jb
je
xchg
inc
xorb
loop
adc
insl
mov
shll
movsb
cmp
and
jp,pt
xlat
sbb
and
sub
test
rorb
movsb
loop
adc
cmp
repz
lods
repz
call
xchg
or
sbb
adc
dec
cmp
xor
shlb
inc
mov
lock
mov
idivb
cmp
cmc
pop
dec
cmp
setne
and
inc
sbb
iret
sub
out
dec
or
jl
test
push
out
ret
and
lcall
mov
mov
in
cs
fstl
mov
push
fs
xchg
push
imul
pop
dec
inc
cmpb
jl
push
mov
push
push
jne
push
fmuls
aas
out
nop
and
ret
inc
xor
pop
xor
and
sbb
outsl
pusha
pushf
jge
loop
xor
cmp
scas
cmp
push
test
outsb
push
or
mov
xchg
call
jmp
push
xor
arpl
fs
shlb
adc
ljmp
shrb
xchg
sub
push
or
dec
dec
jo
movsb
lea
jl
xchg
push
data16
test
xor
loop
dec
push
loope
or
divl
push
or
adc
enter
loope
xchg
adc
subb
jo
jb
rclb
dec
sub
dec
push
mov
xchg
sub
cld
shr
mov
imul
adc
insl
mov
cld
outsb
sar
lahf
shlb
push
lea
mov
mov
mov
dec
or
dec
loop
ds
cld
decl
out
jne
sar
dec
cmp
jbe
push
pop
mov
loopne
lods
cmp
jne
subb
jae
add
shr
lea
not
and
decb
jne
adc
mov
lea
xor
pop
cmp
pop
add
push
cmpsb
mov
or
ljmp
rolb
jl
push
or
jbe
jmp
clc
and
testb
shlb
and
sti
add
mov
inc
fimull
cmp
fisubs
clc
imul
cmp
je
mov
jno
jno
mov
mov
out
not
and
add
es
or
loopne
mov
cmpsb
jl
pop
xor
sub
mov
jle
push
jmp
xchg
insb
and
stos
test
addr16
mov
rorl
jns
or
dec
or
adc
stos
ret
std
xchg
inc
mov
mov
inc
mov
lods
lock
xchg
or
pop
mov
pop
dec
or
jmp
dec
adc
jns
mov
or
adc
xor
imul
or
nop
xlat
add
and
pusha
pop
cmpsl
inc
xor
sub
cmp
lsl
scas
jp
push
call
aas
insl
mov
or
sbb
sbb
andl
cld
in
decb
adc
inc
pop
jmp
add
and
sbb
and
sub
add
orl
adc
lods
adc
out
aaa
ret
sub
cmp
xchg
insl
or
mov
fdivrs
inc
cmp
pop
adc
and
je
sbb
push
xor
and
cmp
lea
js
add
testb
add
inc
add
movsb
lcall
loopne
push
imul
adc
outsl
sbb
sbb
xor
add
outsb
incl
jecxz
or
dec
ret
sbb
pop
shlb
lea
ljmp
fadd
inc
lret
incb
pop
or
cltd
push
cmp
dec
jne
or
adc
in
ror
sbb
popf
and
pop
popa
mov
lea
sub
cli
ja
sub
shr
jp
pop
inc
adc
orl
orl
or
mov
push
out
mov
inc
cld
lock
call
dec
jne
test
stos
lret
je
clc
add
or
adc
dec
mov
jb
adc
jnp
sub
fs
inc
pop
mov
call
enter
xor
inc
jne
or
and
ljmp
loope
and
or
adc
xlat
xor
jne
xlat
sub
or
mov
push
outsb
xchg
mov
dec
cld
add
icebp
jl
mov
and
pushf
jle
test
mov
lock
sub
jo
add
je
sbb
mov
int3
push
pop
movsb
sub
pop
sub
mov
cmpsl
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
push
xor
in
ljmp
adc
pushf
sar
dec
mov
decl
pop
hlt
lea
add
scas
data16
or
mov
jns
cmpsb
imul
xor
push
pop
lcall
iret
mov
pop
add
and
and
cmp
test
into
mov
stos
iret
and
cwtl
stos
sbb
out
test
push
insb
loopne
flds
sub
jl
adc
mov
lea
mov
jnp
dec
inc
dec
insb
pop
xor
push
sar
dec
test
cmp
movsb
pop
xchg
lock
cld
xor
cmp
fwait
cmp
je
filds
cmp
push
mov
je
add
fbstp
mov
add
adc
adc
fimull
or
dec
lea
mov
push
xchg
xchg
jbe
mov
mov
push
cmp
pop
push
cs
mov
test
pop
jb
xlat
cmp
dec
mov
xchg
or
dec
sbb
dec
add
xchg
popa
jp
push
scas
or
insb
stos
add
test
lock
cmp
push
push
push
sbb
adc
jge
into
shr
adc
aas
sbb
xchg
in
or
scas
pusha
and
dec
or
loope
cs
nop
cmp
and
decb
xlat
jne
out
lock
fdivs
push
jne
mov
mov
jne
jmp
jae
test
jbe
xor
aaa
arpl
inc
dec
filds
mov
mov
xchg
aad
add
or
lcall
cmp
je
mov
dec
sbb
and
clc
rorl
jl
and
mov
jne
fwait
jno
sbb
dec
push
inc
jmp
jge
xchg
mov
lret
scas
stos
xlat
jmp
dec
mov
loopne
mov
adc
outsb
leave
inc
test
inc
push
pushf
mov
sub
icebp
add
fdivrl
je
cmp
add
cmc
call
jge
iret
mov
loopne
xchg
cmp
inc
std
jge
push
and
mov
decb
jne
cmpsw
pop
cmp
repnz
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
hlt
popa
pop
sbb
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
sub
push
std
add
adc
add
scas
and
or
outsb
pop
lods
test
lea
ds
and
daa
xor
sbb
jge
add
andb
loopne
pop
leave
repnz
xchg
icebp
imulb
add
nop
in
jb
or
ret
ret
sahf
add
add
add
add
inc
mov
adc
push
and
jmp
lock
add
sbb
or
addl
insl
repnz
and
fisubrs
inc
push
movb
dec
or
mov
add
xchg
pop
xchg
inc
inc
cmp
cmp
inc
ret
cs
sub
add
push
mov
xchg
sbb
lcall
mov
and
mov
fcoms
icebp
mov
xchg
jl
or
lods
lahf
fbstp
inc
add
push
pop
nop
lcall
inc
and
pop
in
testb
fsubrs
xor
lahf
pushl
pop
xor
outsl
adcl
or
adc
xchg
pop
jne
push
add
std
pop
jo
pop
inc
sbb
insl
mov
clc
test
pop
iret
sbb
jne
inc
js
or
push
jmp
iret
outsb
psubd
inc
mov
mov
call
adc
and
les
mov
gs
or
je
subb
lods
lea
push
int
xchg
shl
xchg
test
mov
xorl
lcall
adc
jecxz
adc
ret
or
xchg
stos
xorb
push
inc
nop
jg
pop
andl
add
lods
jl
inc
enter
call
lods
aam
hlt
ret
xchg
mov
sbb
and
xor
sbb
mov
mov
call
jge
jmp
movzwl
or
int3
test
into
pop
jns
in
je
cmp
mov
stos
dec
inc
rorl
sub
ja
cmpb
sbb
out
test
fsubrs
test
sub
or
dec
inc
mov
sbb
push
out
inc
push
mov
or
add
jns
dec
xor
sbb
xlat
add
lods
or
data16
pop
add
lcall
mov
loopne
mov
sub
rcrl
into
ror
jge
fs
or
mov
mov
and
pop
xor
mov
rorb
push
inc
icebp
outsb
and
jne
xlat
xor
jp
or
cmp
mov
pop
and
jns
leave
int
jg
add
cmp
ss
sbb
scas
cmp
mov
push
sbb
push
jmp
imul
push
rorb
pusha
pop
std
movsb
xor
ret
test
or
dec
repz
lea
inc
push
cltd
stos
call
add
add
sahf
jo
or
test
xorl
nop
sub
enter
dec
in
leave
enter
leave
mov
jo
add
test
leave
dec
movsl
jb
push
fmulp
inc
sub
enter
scas
pusha
push
cmp
dec
outsl
lahf
jo
cs
push
pusha
jns
inc
xor
lahf
inc
push
in
fimuls
cld
inc
sub
push
or
testb
pop
es
add
popf
or
addl
rep
push
hlt
xchg
lahf
push
lods
and
lods
add
fwait
xor
nop
add
sub
in
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
xchg
ret
xlat
insb
js
mov
sysret
push
xor
insb
push
xchg
cli
xor
iret
sarl
add
cmpsb
push
pop
mov
lcall
insb
cmpsb
and
ds
fnsave
cmp
xor
test
lea
mov
imul
iret
lret
mov
push
push
push
iret
clc
outsl
and
xchg
ret
xchg
and
sub
xchg
xchg
pop
sarb
dec
push
rcll
and
mov
add
xor
or
and
subb
jmp
test
push
lods
pop
incl
mov
cmp
mov
mov
pop
dec
dec
adc
mov
push
adc
and
enter
arpl
lahf
inc
loope
adc
insb
cld
sbb
mov
cmp
jne
inc
adc
fstl
cmp
and
repz
mov
cmp
sub
stos
inc
add
add
xor
lea
inc
inc
xchg
mov
adcb
xchg
jnp
mov
mov
push
mov
push
mov
mov
jns
lds
js
pop
sbb
testb
daa
adc
or
dec
lods
fldcw
adc
inc
add
add
mov
mov
ljmp
aaa
inc
cld
push
sub
fadds
or
adc
ds
dec
adc
or
js
xor
and
mov
add
and
not
and
out
aam
sbb
and
cmp
dec
jno
adc
sub
adc
sub
imul
dec
pushf
mov
inc
adc
or
sub
popa
xor
mov
cmpsb
inc
lret
je
pop
test
xchg
pop
sbb
add
in
sarl
outsb
sbb
dec
xor
fnsave
movsl
xchg
dec
push
je
dec
je
push
or
insb
inc
fmul
push
jecxz
stos
fstpl
fstpl
push
fldl
cmpsl
cmp
push
or
xor
mull
cmpsb
lods
push
push
lcall
push
leave
pop
jmp
jo
push
fldt
dec
lea
in
pop
lret
lret
das
dec
pop
in
mov
xchg
dec
je
add
and
sbb
xchg
pop
and
sti
flds
adc
movzbl
push
xchg
insl
ljmp
pop
sub
out
cmp
mov
fstps
popa
fisttpll
fdivs
rcrl
aas
fwait
and
stc
fwait
add
inc
sbb
jmp
lret
xchg
adc
push
sahf
lret
adc
call
out
rclb
add
push
adc
push
ds
cld
lock
clc
lock
add
ret
fstl
push
shl
push
push
jl
dec
ja
jne
das
and
sub
push
repz
lock
fidivrs
cmp
push
xor
cmp
cmp
fidivl
addr16
dec
jmp
push
jns
and
pop
out
push
repz
adc
test
mov
or
or
jg
push
stos
add
jne
jge
push
mov
jle
fiadds
mov
pop
and
inc
movhlps
xor
add
shlb
push
push
xchg
jmp
inc
faddl
mov
adc
and
or
aas
test
fmull
jg
std
add
inc
jp
cmp
test
sbb
rcr
jne
push
push
adcl
mov
mov
mov
jecxz
icebp
xchg
mov
push
jne
outsl
mov
mov
xor
dec
sbb
add
js
sbb
in
dec
nop
pop
or
lret
gs
mov
mov
mov
cs
int3
call
sbb
mov
arpl
das
cmp
into
jne
adc
jecxz
cmpsl
pop
mov
mov
push
mov
sar
bound
mov
jg
mov
jne
dec
sbb
pop
sar
fistpll
dec
lea
testb
fimull
rorb
mov
or
loope
adc
or
mov
mov
pop
rorb
ds
stc
popf
add
stos
movsl
lret
mov
push
fs
sbbb
movsbl
fs
es
push
ror
in
leave
xchg
std
lods
popf
ret
jb
mov
test
rorb
cs
lret
int3
shl
enter
jmp
dec
into
lds
int3
pop
cmpsl
mov
or
add
pop
cs
add
xlat
xor
lock
cmp
cmp
pop
fisttpl
stc
or
xchg
popa
mov
ret
push
mov
lret
nop
sbb
call
pop
push
stos
lods
mov
jae
dec
je
or
inc
repnz
pop
pop
cmpsb
arpl
sar
cmp
inc
sub
pop
dec
lret
mov
aad
pop
and
cwtl
push
cmp
jne
cmpb
cmp
jl
cmpb
xor
hlt
inc
cld
dec
movsl
sub
imul
push
imul
lods
shlb
pop
lods
cmp
mov
mov
jp
mov
test
pop
cmp
dec
xor
lea
mov
jg
in
mov
adc
adc
mov
push
pushf
cmp
xor
xacquire
pop
js
cmpsl
adc
pop
orb
sub
adcb
sti
push
inc
cmp
and
pop
popf
in
mov
std
dec
inc
pop
scas
and
pop
inc
pop
cwtl
add
movsb
popf
imulb
xor
push
sub
cmp
cltd
push
adc
notl
mov
gs
or
mov
mov
fcmovbe
jns
cmpl
mov
sbbb
stos
lds
cld
mov
mov
std
sub
lods
cmp
pop
enter
mov
sub
jno
or
pop
adc
pop
or
outsb
int3
jp
mov
lds
pop
test
insb
stos
xchg
xor
adc
outsl
in
mov
sti
and
push
jecxz
xor
sbb
mov
mov
nop
pop
outsl
lock
aaa
addr16
out
fisubl
adc
mov
and
shll
cmc
pop
shrl
shrb
orl
mov
call
call
push
in
rol
push
mov
es
jo
push
mov
push
cmp
rcr
jge
mulb
stos
lcall
mov
loope
sbb
jne
std
lds
jmp
out
or
lea
push
mov
out
imul
push
roll
or
pop
sub
mov
cmp
je
imul
sbbl
jno
mov
and
mov
jno
lahf
mov
leave
std
out
imul
movsl
or
xchg
test
addr16
lcall
dec
xor
in
sub
inc
mov
ss
dec
inc
adc
enter
cmp
cmp
xor
jb
inc
call
std
xchg
mov
and
pusha
imul
test
fs
push
mov
mov
daa
cmp
push
popa
fwait
push
fdivrp
sbb
mov
data16
lcall
pop
repnz
dec
jmp
out
ret
aam
dec
movb
jp
stos
sar
lock
push
pop
sub
or
jmp
data16
data16
sub
or
negl
jge
int3
cmp
cli
jo
or
roll
dec
add
imul
gs
and
aam
mov
std
xchg
xorb
dec
cmpl
push
sbb
je
lods
bound
je
cmp
push
movsb
adc
mov
add
hlt
test
jp
add
jne
cmp
xchg
mov
push
push
sbb
mov
lods
mov
cmpsb
les
pop
jno
dec
dec
or
and
in
enter
std
cwtl
add
loope
sub
xchg
sbb
add
aaa
fsubrl
into
test
test
jne
js
test
mov
repz
aaa
mov
mov
xor
jns
orb
and
rcrl
push
pop
and
dec
test
xor
dec
andb
sbb
gs
into
and
mov
push
push
nop
add
xchg
movsb
test
sbbb
inc
push
add
fdivrs
xor
subl
sbb
push
xor
adc
sub
cmp
ja
repnz
test
sub
shrl
sbb
subl
pop
ds
or
ds
mov
xchg
int3
lock
cmp
sub
cmovs
lock
xor
or
add
xchg
arpl
or
aaa
inc
pop
test
iret
pop
inc
dec
mov
add
mov
or
mov
push
bound
test
adc
and
mov
push
inc
inc
sahf
adc
xchg
jo
inc
mov
push
dec
lods
xor
outsb
mov
adc
inc
cmpsb
mov
xchg
inc
mov
xchg
xchg
dec
sub
mov
xchg
and
xchg
test
sub
mov
mov
mov
fs
int3
daa
loopne
movsl
fdivrs
outsb
mov
daa
daa
xchg
lret
cmc
loope
xor
test
fwait
mov
or
sbb
mov
test
inc
clc
mov
test
or
xchg
pop
ret
xor
or
adc
repz
and
and
adc
mov
mov
push
or
mov
lret
mov
push
and
nop
pop
rorb
fs
or
bound
dec
jno
xor
add
adc
pop
enter
incl
push
test
sbbl
xor
stos
jno
sbb
or
jno
dec
cmp
les
mov
push
addr16
je
stc
and
popl
mov
dec
movl
roll
loope
mov
repz
lret
movsl
popf
sub
cmp
or
dec
test
pop
sarb
jbe
pop
mov
or
sar
test
or
add
das
pusha
pushf
pusha
bound
push
sbb
dec
sbb
push
ret
add
xorl
push
and
and
lahf
mov
fimuls
push
mov
and
push
add
cmp
sub
xchg
int3
pop
xor
adc
test
addb
jnp
and
or
adc
inc
mov
movsb
pop
mov
or
mov
and
xchg
dec
mov
jno
cmc
jne
rolb
mov
mov
mov
pop
cmpsl
mov
sbb
pop
sub
mov
jne
lea
ljmp
pop
sub
mov
sub
sbb
je
jmp
bound
ret
jb
repnz
dec
sub
mov
jno
les
rcl
adc
cld
lods
or
out
into
and
jg
or
or
repnz
xor
adc
lock
push
gs
int3
mov
orb
xor
sbb
js
add
sbb
enter
iret
adc
imul
cli
mov
icebp
filds
adc
or
xchg
mull
push
add
je
hlt
daa
clc
inc
push
popa
lcall
inc
testl
cmpsb
jmp
cmp
and
test
cmc
les
xlat
inc
ljmp
mov
add
and
shlb
jae
jmp
mov
insb
push
or
or
movsb
fcomi
mov
push
lock
fs
and
inc
push
pop
push
push
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
ret
xchg
mov
insb
adc
inc
inc
adc
neg
dec
fcmovu
lret
scas
mov
fxch
lea
insl
and
add
ja
or
dec
dec
mov
pop
jmp
fprem
mov
push
inc
repz
movb
ret
inc
stc
arpl
adc
and
inc
icebp
daa
push
out
push
inc
bound
or
insb
and
in
push
and
in
mov
and
sahf
xorb
xchg
scas
and
movsb
lsl
sbb
or
fcomps
pop
sub
and
sbb
shrb
dec
add
ds
shll
dec
mov
xchg
mulb
sbb
pop
leave
sbb
adc
and
push
sbb
sbb
lock
adc
clc
int3
test
lods
xor
mov
imul
cmova
dec
sbb
xchg
dec
add
mov
lock
jne
or
lea
jb
das
pop
adc
sbb
push
xchg
movsb
mov
jae
push
sub
test
push
cmp
ret
cmc
jne
aas
lret
bound
lea
xchg
and
jns
adc
adc
and
pusha
mov
mov
enter
pop
dec
xchg
iret
enter
push
pop
mov
inc
sub
dec
adc
add
jl
mov
push
mov
cld
sbb
or
sahf
lds
add
push
cmc
cmp
movsl
adc
pop
pop
push
je
stc
push
adc
insl
xor
mov
xor
pop
mov
sub
dec
xor
movl
and
adc
cmc
out
sbb
lock
fidivrl
fidivl
scas
insl
mov
and
push
xchg
loope
or
test
sarl
push
xor
sub
fldl
ret
lock
lcall
xchg
mov
pop
das
movsb
mov
dec
inc
cmp
pop
or
sbbb
cmpsl
cmc
imul
lret
test
rol
mov
call
cld
movsl
mov
cmc
lea
pop
sub
xlat
add
les
add
shrb
jbe
lds
mov
aaa
movsb
stos
jl
ret
pcmpeqb
dec
or
cld
iret
mov
cmp
or
push
ret
shl
push
and
fcoml
mov
mov
add
divl
lret
inc
stc
xor
test
xchg
inc
iret
xor
ss
dec
xor
inc
or
in
and
adc
adc
int3
inc
clc
cs
sub
push
out
cmp
je
dec
sbb
pop
ss
and
fdivrl
cmp
xchg
pop
addr16
outsb
mov
cld
pop
mov
jbe
ret
repnz
xchg
or
mov
pop
out
mov
call
pop
je
or
or
cld
pushf
lret
adc
iret
push
mov
and
shrb
setl
sbb
icebp
repnz
test
ja
call
pusha
sbb
sti
and
sbb
inc
fists
mov
inc
pop
jp
aad
aaa
inc
cmp
roll
int
xor
mov
movsl
adc
dec
sbb
mov
jg
mov
lods
inc
push
mov
out
or
push
mov
dec
mov
fisubs
mov
pop
or
push
orb
icebp
popf
in
sub
add
jne
adc
or
lock
push
or
cmp
sub
mov
and
pop
add
mov
sbb
dec
and
and
adc
add
or
push
pop
mov
arpl
aad
push
rcrb
lcall
pop
sahf
or
fimull
ret
inc
pop
or
mov
mov
mov
int3
hlt
dec
cwtl
pushf
and
push
inc
cmp
add
sub
xchg
imul
add
add
int
dec
aas
adc
or
mov
or
lds
and
cmp
std
rcll
add
and
sarl
inc
loopne
call
cmp
aas
aaa
or
sbbl
pop
orl
xchg
test
cmp
and
cmp
loope
pop
sbb
mov
fs
mov
fwait
inc
lock
leave
push
sbb
xchg
pop
inc
daa
int3
pusha
mov
sbb
xor
cltd
dec
mov
bound
ja
clc
push
out
push
cmp
hlt
icebp
imul
push
daa
or
and
andb
add
pop
xchg
push
notl
cmp
test
scas
add
es
std
inc
jp
test
dec
mull
loope
lock
push
and
insb
sahf
or
fnstcw
xor
loopne
sbb
or
pusha
pushl
mov
aam
pop
shll
imul
pop
xchg
shrb
fidivl
push
je
dec
je
xchg
out
inc
mov
xchg
push
push
loope
sub
mov
mov
in
cmpsl
addr16
sub
jge
ja
dec
sbb
cmp
les
push
call
rorb
cmovnp
scas
xor
outsb
add
sarl
dec
mov
mov
jne,pn
sbb
fnstsw
movl
fwait
sub
fsubr
out
xchg
mov
cmp
jge
mov
mov
and
push
call
xchg
fucom
push
jne
iret
mov
sbb
sub
add
jmp
xchg
jo
xor
rorl
insl
or
sub
adc
sbb
gs
jecxz
ret
jno
add
sbb
push
jbe
lret
cwtl
adc
lret
test
sub
jg
jmp
inc
and
dec
pop
adcb
pop
xlat
lcall
sub
or
inc
mov
sub
fisttpll
add
and
les
ret
div
pop
and
and
filds
movsl
xor
and
inc
jge
add
dec
mov
push
aaa
sub
ja
sahf
sub
sbb
test
and
adc
stc
dec
add
inc
movl
daa
dec
clc
push
pop
inc
cmc
mov
es
imul
sbb
adc
in
cld
cmp
jbe
dec
pop
dec
mov
mov
stos
rcll
stos
mov
dec
adcl
popa
adc
push
out
or
or
push
test
push
pop
push
cs
and
jmp
xor
dec
mov
ljmp
mov
insb
mov
xchg
mov
pop
or
dec
add
add
aad
fcmovb
add
out
mov
jo
fwait
push
roll
add
add
aaa
aad
mov
adc
mov
mov
inc
and
cmp
push
rorb
pop
or
jns
jb
push
add
xchg
mov
mov
adc
and
or
cmc
sbb
pop
or
fwait
test
dec
dec
or
inc
or
xchg
add
inc
std
in
loop
xor
sbb
cmp
scas
push
dec
push
ss
jmp
xor
and
dec
loop
inc
inc
adc
xchg
incl
pop
aam
jo
jle
inc
inc
inc
pop
je
pop
es
sbb
ficompl
imul
test
or
adc
fbld
jmp
push
subl
cld
pop
fdiv
xchg
xchg
roll
sbb
add
and
mov
cmp
mov
movsl
rclb
mov
in
out
cwtl
into
inc
add
xor
inc
pop
rcrl
sarb
popa
adc
scas
push
test
add
mov
aaa
mov
popf
sub
cmp
xchg
shrl
mov
je
sbb
mov
jbe
dec
or
xchg
xchg
push
xor
adc
push
push
cld
inc
rcll
inc
stos
and
xchg
insb
aas
jae
mov
incb
shl
add
aam
push
sub
pop
xor
addb
push
subl
mov
or
loopne
push
jo
xor
outsb
je
jl
inc
es
add
push
and
and
mov
jo
sbb
xor
out
sahf
jne
jmp
or
cmp
dec
inc
inc
or
cmp
sbb
repnz
cmp
pop
out
hlt
push
sar
les
loopne
add
jecxz
das
sbbl
and
fmull
clc
rorb
xor
lea
push
pop
add
js
inc
or
ret
jmp
and
loope
fs
jb
or
mov
or
sub
out
int
dec
adc
pop
dec
rolb
dec
andb
pusha
pop
fnsave
xor
cmp
lea
dec
orl
mov
and
dec
adc
or
adc
jl
or
add
int
popf
orb
or
or
push
and
rcrl
cmp
inc
mov
mov
shll
js
into
mov
sbb
pop
mov
pop
inc
aaa
imul
bound
out
mov
push
pop
push
or
mov
add
jb
dec
loopne
pop
aaa
clc
adc
and
lea
xchg
sub
pusha
and
and
push
cmp
daa
adc
adc
data16
inc
cmp
xor
aam
adc
mov
loopne
lock
or
inc
dec
dec
aam
test
or
cmp
decl
dec
pusha
mov
add
out
add
and
fs
and
inc
adc
leave
stc
fmul
lcall
hlt
inc
adcl
pop
mov
xorl
sub
adc
mov
add
xchg
addl
dec
movsb
jae
adc
rorl
add
aaa
xchg
int
pop
xor
rorl
dec
xchg
test
adc
in
insb
jo
sub
mov
movl
add
add
mov
jmp
scas
jo
popa
xor
adc
test
sbb
mov
cmp
out
mov
test
clc
es
not
mov
xlat
adc
push
xor
outsb
sarl
push
shlb
loope
lock
inc
data16
cmpsb
mov
jbe
pop
fadds
adc
lock
not
sub
or
push
roll
add
enter
les
xchg
adc
jb
rcrl
add
ret
sub
jne
jmp
shr
or
or
mov
jo
sarb
nop
jne
jg
jg
adc
push
jmp
push
test
jo
gs
push
aaa
into
add
xchg
call
push
xchg
cltd
pushf
mov
sbb
ret
nop
inc
xor
cmp
roll
pop
push
adc
lret
add
ret
push
jo
rorb
pop
addb
mov
sub
stos
ss
neg
add
jp
imul
sub
pop
adc
inc
lds
push
or
dec
pop
or
enter
xchg
mov
dec
dec
or
pushf
xor
mov
xchg
icebp
and
or
data16
popa
inc
add
ljmp
inc
cmpsl
cmpsb
lock
sub
pop
add
test
mov
popl
int3
add
jmp
pushl
dec
mov
cmp
push
add
loopne
stc
fcoml
jae
adc
sbb
js
pop
mov
mov
fsubrp
daa
push
adc
inc
adc
xor
scas
insb
add
xor
xchg
iret
js
jl,pt
adcb
cmp
out
test
loopne
stos
fstps
mov
mov
mov
dec
fnclex
mov
arpl
shll
cmp
ja
mov
dec
adc
push
and
jne
repz
push
sub
outsl
inc
or
xchg
lret
jbe
jle
pushf
outsl
ja
inc
imul
mov
add
sbb
hlt
sbb
ret
mov
inc
out
mov
or
loope
test
sbb
in
and
call
lret
icebp
std
dec
shll
sahf
orl
std
je
shrl
shll
mov
fld
lock
in
lock
rep
add
push
mov
pop
rcll
loop
mov
ss
and
push
or
push
fisubl
sbb
leave
dec
shl
rorl
pusha
pop
add
mov
hlt
push
lret
push
sarl
or
sbb
add
push
sub
bound
movsl
mov
sti
or
mov
lret
lock
pop
gs
and
in
sub
sub
push
sub
add
shr
xchg
ss
add
push
es
add
add
or
popa
jnp
fcoml
xorb
push
int3
in
pop
inc
jb
xchg
dec
dec
clc
mov
cmp
push
jp
sbb
pop
and
mov
adc
push
push
fisubl
adc
addr16
dec
jmp
xchg
inc
mov
cmp
das
xor
add
insb
jae
dec
jmp
pop
ja
test
js
mov
push
fisubrs
pop
cwtl
or
sarb
orb
test
fisubrs
sarb
ret
inc
sbb
int
adc
mov
and
push
push
cmp
and
xchg
call
inc
insb
mov
or
mov
jmp
adc
outsl
jo
stc
mov
push
mov
jae
adc
inc
add
or
mov
add
sti
mov
cs
fmull
sbb
dec
popf
fsubrp
mov
mov
push
les
inc
mov
jge
leave
popa
and
mulb
adc
movsl
insl
jl
sbbl
in
fwait
dec
push
xchg
call
test
call
inc
jmp
hlt
pop
inc
fsubr
movsl
sub
jne
imul
jl
push
shrb
push
sbb
mov
fs
mov
cwtl
and
jb
dec
pop
adc
fs
jle
inc
push
mov
inc
xor
and
test
sbb
xchg
mov
push
ja
cld
and
ja
aas
incl
mov
test
addb
test
xchg
or
cs
or
cmpsb
loope
lds
movl
sub
movl
xchg
pop
sub
insl
sub
lods
push
or
fidivs
cmp
jecxz
ds
cmp
lods
incl
add
pop
or
pop
in
insl
addr16
sbb
in
sub
adc
cmp
xchg
rolb
lods
jne
sbb
mov
cltd
addl
add
sbb
pop
out
test
and
push
push
jg
sub
test
jg
add
imul
mov
jg
cmp
cmp
sub
xor
pop
es
mov
dec
cmp
mov
fs
nop
add
adc
call
pushl
in
insb
xchg
popa
mov
loope
fmull
sub
and
sub
out
jmp
adc
addr16
sahf
push
add
mov
ret
push
cmp
xchg
pop
mov
adc
and
xchg
inc
sti
xor
jne
inc
sbb
xor
mov
cmp
ror
pusha
in
les
test
push
dec
dec
sbb
adc
xor
xchg
and
and
ja
add
outsl
dec
sbbb
mov
mov
aam
inc
or
lret
ret
cmp
add
xchg
movsb
add
push
jl
push
add
sbb
mov
or
add
add
movsl
xchg
outsb
popa
mov
aaa
fidivrs
aas
push
adc
ljmp
cmp
add
sbb
mov
jle
pop
and
fsubl
push
push
adc
hlt
xchg
loopne
test
fs
popa
loopne
cwtl
lods
jmp
pop
jl
mov
sub
dec
xchg
add
rorl
xchg
or
mov
sbb
call
or
mov
negl
xchg
dec
dec
inc
sbb
or
gs
add
sub
popa
es
ret
cs
pop
cmp
cs
outsb
rorl
cmpsb
cld
aaa
mov
add
inc
inc
push
clc
out
and
cmpsb
cmpsl
pop
lods
call
adc
mov
cmpsl
adc
gs
hlt
rclb
pop
cmp
enter
mov
stos
cmp
jae
mov
je
mov
filds
push
sarb
cwtl
dec
and
aad
add
loope
xchg
push
subl
adc
loopne
addr16
xor
adc
or
sbb
pop
cmpl
mov
lea
jle
mov
mov
cmp
push
in
movsb
push
insl
sbb
lods
data16
and
xchg
int3
xchg
loop
push
jo
xor
mov
dec
jl
xor
lods
add
push
or
dec
or
and
test
aas
push
mov
inc
cmp
mov
jb
jp
sbb
cmp
ja,pn
test
fs
repnz
and
cmp
add
adc
jecxz
push
mov
rcrb
jb
adc
je
cmp
aam
push
xor
cmpl
xor
aam
shrb
shrb
jle
jmp
cmp
or
je
xchg
in
or
je
mov
sbb
roll
sub
xchg
movb
inc
cmpsb
adc
dec
sbbb
jmp
popa
and
nop
ja
cltd
xor
mov
sbbl
in
pop
adc
pushw
or
adc
add
fld
popa
leave
in
or
rolb
bound
push
or
bound
or
sbb
cmp
inc
xor
into
inc
ret
test
and
pop
push
in
fsubrl
and
jne
push
xchg
jo
sub
aaa
addr16
jmp
push
icebp
enter
jmp
xor
sarl
in
sub
and
jns
adc
test
mov
in
fdiv
push
filds
sti
mov
or
je
pop
adcb
cmc
and
and
or
xchg
test
dec
pop
ja
filds
jb
mov
lds
inc
cmp
sub
fbstp
jae
push
cmp
jl
mov
inc
and
loopne
lcall
push
lret
or
jns
jle
outsl
xor
jne
clc
mov
inc
ja
mov
rcr
ror
mov
push
ljmp
mov
cmpsl
cmp
mov
add
dec
inc
cmpl
stos
cld
in
dec
dec
out
inc
and
enter
fsubrs
ds
mov
aad
mov
daa
pop
push
data16
or
cmc
push
mov
cmc
lods
mov
add
imul
shll
jne
fildl
jns
jne
ja
mov
in
shll
pop
ss
arpl
movsb
push
out
sbb
addb
js
inc
pushf
dec
movsl
orb
xchg
bound
mov
or
xor
inc
mov
sub
inc
xchg
adc
and
add
test
andl
sbb
nop
xchg
add
addl
mov
jecxz
fs
dec
inc
outsl
sbb
ss
inc
xchg
test
push
or
cmp
jl
mov
test
outsb
inc
jle
xchg
add
aam
cmpsb
adc
lods
call
jbe
add
push
js
shl
sbb
decl
mov
jmp
push
adc
orl
call
lret
pop
hlt
pusha
sbb
push
mov
or
or
test
fsts
pop
or
adcb
and
sbbb
iret
push
mov
test
popa
shll
cmp
pop
daa
lds
notl
repnz
and
push
push
dec
aam
ss
and
das
add
out
jbe
inc
ljmp
mov
push
aam
scas
orl
orb
out
inc
and
or
or
lret
mov
insb
dec
and
incl
cmp
je
cmp
adc
mov
jb
testb
pop
add
xchg
add
dec
add
xchg
rorb
add
mov
push
jmp
inc
movb
and
sub
cmp
xor
cmp
jbe
mov
push
or
adc
sahf
adc
pop
sub
push
notl
jnp
lds
call
and
jecxz
and
adc
sbbl
push
push
mov
adc
xchg
push
or
insl
cld
mov
test
push
fstpl
pop
jmp
add
test
mov
push
push
push
cmpb
pop
mov
and
add
pop
cmc
push
jbe
push
pushf
push
call
mov
jb
icebp
jae
out
push
xor
pop
sub
sbb
scas
je
das
mov
sti
xchg
cli
adc
jbe
lea
mov
pop
mov
or
mov
mov
out
arpl
mov
test
push
sbb
mov
add
and
enter
inc
mov
cs
test
xchg
lea
adc
inc
adc
int3
in
mov
inc
mov
xlat
sub
sbb
pushf
inc
lea
push
or
loop
mov
dec
xor
and
pop
pushf
call
pop
shr
cld
sbb
addb
xor
xchg
enter
int3
push
lds
jnp
ljmp
push
ss
adc
jo
pusha
imul
push
or
dec
dec
or
adc
cmp
and
and
cmp
cmp
sub
xor
push
push
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
adc
cltd
fs
dec
mov
xchg
cwtl
pushf
xchg
dec
es
mov
or
sub
push
sub
fidivl
dec
add
loopne
mov
ret
in
push
test
or
call
adc
in
adc
or
movsb
cltd
sbb
sbb
clc
cltd
nop
inc
and
and
adc
mov
sbb
insb
scas
faddl
xchg
pop
xor
mov
push
adc
sub
xchg
test
cmp
aad
lcall
jne
adc
or
cmp
pop
adcb
fldl2t
push
mov
cli
jbe
push
test
add
stos
and
popa
cltd
xor
or
sbb
inc
and
out
les
add
fwait
pushf
dec
mov
imul
mov
and
push
cmp
es
cmpsb
adc
mov
fldl
lods
or
pop
xchg
xor
dec
inc
mov
sub
aad
addb
ja
out
test
cmp
ss
jnp
xchg
das
je
sub
push
sbb
and
mov
add
and
sti
nop
pop
out
mov
or
add
fmuls
in
pusha
pop
cs
push
popf
scas
fdivr
cwtl
push
pop
int3
ljmp
sbb
inc
pop
orb
cmp
outsb
addr16
jae
sbb
add
in
pop
arpl
je
push
pushf
jnp
or
inc
push
dec
and
loopne
mov
xchg
mov
or
add
or
daa
sbb
sbb
push
and
popa
cmc
rcll
add
int3
cmc
push
sbb
nop
cmp
and
dec
cmpsb
inc
aad
pop
mov
fcmovbe
mov
xchg
adc
cltd
mov
adc
adcl
ds
or
jp
mov
pop
jle
les
orb
pop
shlb
adc
test
in
loopne
adc
orl
add
and
fcoms
fstl
ja
mov
bound
bound
int3
inc
das
inc
fldenv
aam
adc
loope
sub
jl
cmp
and
mov
push
aas
popa
mov
enter
lods
add
inc
mov
scas
add
mov
loope
subl
test
sbb
push
xor
arpl
das
inc
daa
sub
cmc
push
mov
mov
sbb
push
sbb
in
arpl
stos
gs
mov
add
dec
jnp
xor
mov
xor
mov
adc
mov
pop
add
data16
xor
jne
int
stos
insl
pop
into
daa
jecxz
clc
push
push
test
roll
mov
push
shll
and
out
icebp
sti
imul
sar
mov
or
xchg
mov
movsb
mull
test
push
and
iret
add
test
shlb
adc
add
xor
int3
mov
inc
sbb
mov
mov
bound
out
push
inc
pushl
dec
ja
out
mov
jns
push
sub
sarb
js
pop
addl
or
sbb
inc
mov
add
push
addr16
or
mov
in
lods
mov
or
cmp
pop
adc
push
hlt
mov
mov
and
cld
test
jmp
pop
std
sub
add
cmp
mov
push
les
enter
push
cmpsl
idivb
lret
xchg
add
ret
aam
clc
testl
adc
push
push
dec
inc
lea
push
push
data16
ja
lea
mov
jnp
ret
cmp
pop
pusha
fsubs
cmp
inc
mov
test
aas
add
mov
xor
sarl
or
test
cmpl
scas
or
or
jo
jae
push
add
sbb
ljmp
idivb
gs
jo
js
testb
loop
cmp
add
inc
int
add
push
jmp
inc
gs
stos
js
je
pusha
push
or
add
repnz
dec
add
pop
cmp
mov
subb
sub
fisttps
cmp
std
xchg
div
pop
mov
adc
push
sysenter
sbb
inc
inc
push
orb
sbbb
cs
sub
adc
sbb
mov
jl
jmp
xchg
mov
andl
add
aaa
cld
push
cmp
mov
xchg
cmp
jne
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fcoms
fsubrs
sub
and
icebp
dec
sbb
inc
add
push
push
daa
jmp
sub
shll
xor
and
jl
add
in
inc
cmp
rcrb
xchg
rclb
inc
imul
push
or
inc
inc
sbb
cmpsl
shlb
xchg
push
and
nop
or
aas
mov
out
inc
mov
imul
pop
xchg
cmp
js
jnp
add
push
xchg
and
xor
jae
addb
test
xchg
add
push
mov
jbe
sbb
lock
scas
cs
push
fwait
test
lret
jmp
xor
sbb
test
test
je
add
jmp
add
repz
cli
mov
mov
cmp
arpl
lea
mov
vmptrld
pushl
lods
adc
and
fdivrs
or
ljmp
idivb
inc
jne
idiv
test
xor
jnp
xor
or
mov
inc
cli
mov
cmpb
jno
jg
subb
or
or
les
xchg
cmp
pop
and
repnz
clc
and
js
and
lock
mov
or
cmp
push
xor
xor
mov
loopne
loope
sub
and
mul
stos
or
sbb
cmp
dec
or
lret
mov
jmp
mov
dec
outsl
jmp
sbb
xor
xchg
int
pop
adc
mov
unpckhps
pop
pop
or
mov
cwtl
cmp
or
xor
arpl
inc
fstpt
inc
jo
sbb
jp
cli
push
push
pop
inc
add
pop
pop
sarl
add
iret
lea
or
dec
push
and
mov
aaa
xor
sbb
scas
push
lock
fnsave
shll
ret
fwait
int
mov
pop
inc
xor
ret
bound
out
pushf
cli
sbb
adc
mov
add
popf
in
add
nop
sbb
and
aaa
push
cmpb
aaa
xor
shrl
sub
and
cmp
xor
ja
into
sub
mov
xchg
mov
pminsw
add
mov
idivl
sarb
push
dec
pop
ds
xchg
mov
out
push
lcall
loopne
icebp
mov
pop
cmp
lods
jg
dec
data16
insb
rclb
pusha
sti
stos
orb
stos
jge
stos
and
dec
pop
dec
push
clc
adc
jns
pusha
mov
fdivp
push
jne
ds
mov
and
and
mov
lea
pop
pop
faddl
pop
nop
lea
and
jg
nop
call
test
popa
push
clc
je
xor
add
fsubl
jns
lcall
clc
adc
clc
lock
jl
test
mov
mov
inc
push
cmp
mov
jmp
push
and
inc
adc
je,pt
inc
cmp
sub
jmp
inc
push
js
pop
sbb
and
add
or
mov
sub
pop
mov
pop
mov
add
and
mov
jl
mov
hlt
adc
push
icebp
push
outsb
mov
push
leave
cmp
mov
pop
dec
shrl
rorb
dec
in
movsb
lock
jmp
icebp
xor
jecxz
sbb
mov
loop
daa
pop
push
jl
dec
pop
and
sub
ret
int
sahf
mov
pop
pop
lock
pavgb
cmp
and
pop
add
sbbb
push
gs
lcall
xorb
pop
jnp
cmp
rcrl
cmp
inc
mov
leave
imul
cmp
loope
in
sub
fnstenv
dec
daa
push
faddp
das
xchg
add
mov
in
insl
push
lods
sti
jns
das
adc
sbbb
adc
xor
jne
sbbb
das
mov
cs
sub
lcall
push
sbb
dec
mov
das
fsub
or
sbb
cmp
cs
or
pop
leave
jp
test
add
lea
sub
sbb
push
outsb
or
push
subb
cld
inc
sbb
or
push
xchg
jmp
mov
int
xor
and
lods
cld
dec
mov
jnp
dec
int3
aas
repnz
jp
cmp
adc
inc
xchg
mov
dec
into
adc
dec
sarb
jle
jle
add
lret
jl
sub
add
sbb
or
xor
rcll
push
sub
add
popf
and
jne
or
mov
test
std
or
jge
inc
jecxz
es
jbe
or
daa
aad
cmp
std
jne
and
xor
or
test
dec
les
ror
sub
rolb
hlt
iret
mov
xor
lods
loope
outsb
sbb
or
push
es
shrl
inc
push
sub
dec
adc
push
popf
pushf
pop
sub
mov
pop
push
popf
ds
cmp
stos
or
scas
and
jnp
mov
testl
xor
mov
rclb
inc
add
sbb
dec
dec
mov
hlt
lret
sti
push
or
les
sub
dec
adcb
pop
add
test
adc
jl
pop
fsub
jge
dec
add
and
test
and
mov
and
les
adc
out
and
shll
dec
xor
adc
or
dec
push
jb
shr
add
xor
in
shr
and
and
mov
btc
cmp
test
adc
dec
pslld
adc
test
xor
pop
push
aad
es
lods
lret
sbb
or
into
sub
jmp
push
in
imul
or
jmp
inc
and
mov
dec
fisubl
and
jecxz
mov
xchg
jmp
jp
cmpsb
or
pop
dec
std
xchg
rorb
and
rorl
cmp
add
sbb
loope
flds
and
pop
adc
pusha
xchg
es
loope
pop
sub
cltd
push
mov
dec
and
adc
out
and
fnstsw
pusha
pusha
popf
cmp
push
mov
insb
loop
insl
mov
or
es
adc
sub
test
out
test
mov
add
sub
xor
mov
dec
je
add
dec
jmp
call
push
scas
jmp
push
mov
xchg
inc
or
mull
stos
add
out
and
subb
xorb
sbb
jmp
push
and
ret
or
mov
inc
push
flds
or
pop
push
xor
push
pop
sti
mov
inc
cmp
jecxz
ret
inc
movsb
xchg
cmp
cli
cmp
out
jl
inc
sti
push
adc
or
adcb
nop
addl
mov
xor
xor
lret
mov
test
shll
pop
xchg
push
fs
adc
rclb
mov
inc
jl
add
sub
sub
leave
sbbl
fwait
rcrb
nop
psubusw
inc
test
int3
adc
div
add
mov
sbb
pop
add
mov
adc
clc
insl
and
sbb
pop
in
mov
rolb
repnz
cltd
cmp
pop
jbe
or
or
or
inc
pushf
lods
scas
outsl
test
add
repnz
icebp
inc
jle
mov
push
fs
sbb
sarl
shrl
sbb
jp
dec
in
sbb
insl
jo
lock
ds
adc
push
sahf
jmp
pop
push
xchg
inc
movsb
in
in
or
add
std
aam
sub
mov
and
dec
pop
orb
fadds
out
andb
mov
push
add
xchg
js
int
add
and
movsl
xchg
or
mov
mov
pop
pop
out
inc
push
mov
fs
mov
xor
xorb
mov
mov
dec
cmp
je
mov
jl
cmp
adcb
or
sub
push
sbb
hlt
adc
sub
lret
pushf
add
jo
subb
jo
or
inc
sbb
pop
mov
sbb
xchg
inc
pop
push
inc
das
in
sti
or
jno
mov
dec
inc
and
xorl
or
or
mov
ret
mov
or
mov
movsb
mov
sub
out
gs
mov
add
orb
add
nop
inc
or
cmp
and
inc
sbb
or
and
sub
push
mov
mov
push
or
mov
jae
xor
cmpl
mov
add
pop
inc
mov
or
ret
sbb
lock
mov
mov
cld
adc
mov
mov
add
loope
push
movsl
sbb
sahf
push
rolb
scas
shl
jne
adc
and
push
ja
mov
out
sbb
rcrl
imul
clc
jecxz
rclb
add
into
xchg
popa
cmpsl
push
ja
cmp
cwtl
push
xchg
outsl
mov
ljmp
cmovge
or
mov
aad
icebp
sbb
sbb
add
shll
out
mov
pop
andb
push
pop
dec
mov
cmp
push
add
jnp
jl
sbb
sub
shr
mov
incl
sub
dec
add
push
fisttpll
andl
sbb
and
in
fnclex
and
mov
mov
mov
shll
push
or
insl
or
shrb
cmp
inc
aam
fldt
cmp
adc
and
sbb
mov
or
jle
call
mov
fldpi
xor
adc
in
push
mov
inc
je
sbb
and
cmpb
inc
xchg
scas
push
inc
outsl
loop
sub
cmp
test
mov
mov
jle
fwait
pop
xor
cmp
jbe
out
add
push
mov
test
inc
jbe
roll
sub
rorb
cwtl
jo
pop
jge
fidivrs
mov
test
shlb
mov
sub
sbb
push
or
insl
push
mov
les
or
mov
jnp
in
xchg
repz
js
or
push
push
in
pusha
lcall
add
sbb
imul
pop
sub
mov
pop
sub
xor
add
sti
jbe
adc
mov
outsb
ret
push
call
or
inc
cmp
or
loope
inc
xchg
or
dec
adc
orb
lods
lods
xchg
dec
data16
inc
inc
repz
dec
dec
mov
or
scas
cs
cmp
loopne
and
jge
dec
push
ljmp
add
add
out
sub
push
push
pop
sti
add
adc
enter
mov
pop
test
jne
or
std
jno
jl
mov
rcrl
push
stos
stos
test
adc
cmpsl
clc
inc
aam
mov
rol
xor
addr16
xchg
test
rcrl
roll
mov
lock
jns
dec
ss
pusha
adc
loopne
mov
pop
cmp
lret
loopne
test
pop
pop
bound
dec
inc
aam
loop
inc
sub
in
rolb
adcl
mov
jmp
push
cltd
insb
pop
and
mov
out
dec
jl
aaa
mov
inc
insb
sub
daa
icebp
mov
mov
dec
mov
add
nop
js
sbb
or
jb
cmp
sbb
scas
cltd
insb
sub
adc
lds
icebp
mov
add
pop
pop
sub
adc
jns
adc
movsb
pop
and
jge
push
mov
test
adc
inc
mov
sbb
out
or
adc
loope
dec
stos
inc
push
mov
cltd
push
outsb
int3
lar
push
aam
xor
cmp
fs
test
mov
movsl
xor
inc
pop
adc
pop
lcall
cmp
sub
sub
not
push
call
popf
je
mov
and
pop
ficoms
andb
or
fs
jl
pop
popa
adc
inc
shl
push
aas
fcoml
pop
sub
sarb
je
mov
fs
aam
fs
push
mov
in
xor
sub
pop
hlt
test
scas
sub
add
push
data16
mov
cmc
push
push
lea
or
cmp
add
mov
push
cmp
fs
push
pop
xor
clc
xchg
adc
pop
add
xor
js
sbb
or
cmp
inc
mov
test
es
lock
cmpsl
jae
cmp
mov
out
addl
mov
lahf
hlt
lea
jl
loopne
mov
loopne
mov
mov
outsb
clc
and
jl
mov
dec
into
and
sub
cld
sbb
jge
dec
add
sub
shl
loop
or
mov
add
fsts
loopne
add
loopne
stc
inc
mov
inc
and
gs
fwait
add
and
sub
fbld
sbb
xchg
inc
push
enter
xor
push
push
cld
add
in
sbbl
and
mov
push
and
aas
sbb
add
sub
jb
or
jl
push
in
roll
add
rclb
jl
pop
adc
xchg
jp
inc
mov
xor
push
adc
into
mov
push
dec
roll
movsb
mov
rcll
mov
cmpsl
nop
aam
push
stos
out
repnz
mov
push
or
aad
or
cmp
in
jne
and
inc
jmp
mov
sub
or
xchg
add
ja
lods
out
lods
mov
sub
cmp
ja
mov
dec
jmp
fs
imul
rolb
mov
test
sub
cmp
outsl
mov
insl
dec
stc
jmp
stos
testb
dec
test
mov
scas
loopne
push
jmp
cmpsl
mov
push
and
pusha
sub
add
imul
inc
jle
adc
push
xor
jg
dec
push
gs
pop
mov
xor
adc
jo
into
jbe
pushf
push
cmp
fs
add
jmp
lcall
mov
jae
mov
ret
jbe
insb
test
es
mov
pop
iret
sarl
jge
pop
cmp
test
out
jne
xchg
jbe
nop
add
jne
mov
dec
jae
imul
sbb
xchg
mov
daa
mov
call
jge
bound
or
in
loope
mov
or
dec
loopne
in
orl
add
test
push
and
push
stos
push
cmp
mov
stos
pop
testb
sub
mov
call
jge
ret
mov
add
mov
mov
jg
push
in
pop
cmp
adc
add
inc
testl
mov
jmp
fimuls
and
sbb
call
mov
mov
sbb
and
sub
insb
popa
mov
stc
push
adc
notl
push
inc
or
jecxz
add
pushf
jmp
sbb
ret
pop
mov
push
pop
ret
pop
fcoms
into
dec
lods
mov
push
jne
and
add
pushf
xor
adc
cwtl
jge
neg
add
mov
aaa
dec
sbb
test
stos
out
mov
cmp
adc
nop
sbb
pop
or
sub
mov
in
xchg
jo
jge
jle
lock
xor
adc
push
cmp
add
mov
test
mov
mov
sarl
push
add
dec
inc
mov
sbbl
inc
adc
mov
cmp
dec
mov
cmp
dec
mov
or
or
les
into
mov
mov
push
xor
and
and
and
adc
mov
rolb
and
iret
sbb
ja
cld
mov
or
es
cmc
push
add
es
inc
testl
jo
inc
enter
les
test
into
pop
rclb
pop
cmp
shrb
push
hlt
int3
add
jne
push
mov
test
adc
or
ficoml
push
push
xor
je
lea
or
ret
add
sub
rclb
lock
ja
pusha
ret
data16
inc
mov
mov
pushf
sub
lcall
add
stos
xchg
lods
inc
aaa
lock
xor
js
mov
aam
gs
fbld
mov
add
or
shr
rcrl
ret
push
out
das
jmp
pop
mov
jg
or
adc
mov
mov
les
ret
adc
mov
std
decl
fcom
insl
fadd
loopne
shr
or
or
shl
call
xchg
dec
push
ret
jne
insb
mov
mov
push
push
ja
pop
add
and
and
sub
xchg
cmp
mov
pop
add
ficompl
inc
xorb
mov
loopne
in
fiadds
push
call
imulb
fidivl
shlb
pushf
in
inc
adc
push
fadd
test
mov
or
ja
orb
dec
insl
add
cmp
sub
add
lret
into
jmp
ret
adc
jnp
test
jae
jno
les
sbb
movsb
int3
movsl
test
inc
call
xorb
add
jp
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
ret
or
call
cmp
add
mov
dec
push
cs
repz
jl
shl
das
jo
sahf
out
cmp
lret
ds
dec
mov
ljmp
imul
int3
sub
jmp
inc
add
mov
and
jne
cmp
and
adc
inc
inc
scas
inc
mov
adc
mov
mov
inc
mov
adc
adc
mov
movsl
push
or
test
imul
adc
xchg
xchg
adc
inc
cs
cmc
or
ss
pop
pop
dec
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
lock
add
out
call
mov
pop
inc
gs
pop
push
sub
out
clc
cmp
loope
xchg
mov
in
lcall
or
pop
lahf
xor
xor
jns
cmc
and
movsb
xchg
fisubs
adc
dec
pop
push
ja
jecxz
push
add
dec
adc
test
outsl
inc
int
addr16
rcrb
pop
xchg
mov
popf
cli
jne
pop
mov
shlb
fdivs
adc
mov
or
add
movsb
add
adc
mov
or
jge
je
setg
sub
out
clc
add
mov
mov
fldenv
sub
movb
es
jle
sub
sbb
add
push
fisubrl
xorb
mov
es
divb
pop
add
add
call
xor
add
add
movsb
add
and
inc
pop
cmc
xor
rorl
mov
add
inc
out
cs
dec
fwait
dec
xor
jns
les
sub
push
mov
cld
xor
pushf
push
pop
ret
or
sub
add
push
mov
xchg
lock
push
dec
or
pop
push
push
bound
dec
mov
les
xor
push
add
jecxz
push
sbb
les
add
or
and
add
sbbb
jo
out
ret
jbe
pop
lcall
adc
jge
push
add
push
mov
rcll
adc
pop
sbb
dec
xor
xchg
enter
ds
xchg
pop
cmp
addb
pop
adc
add
xor
xorl
add
sbb
mov
fldt
lcall
adc
aas
call
push
into
adc
notl
js
jmp
pop
cs
jmp
lock
push
daa
lret
xor
or
dec
xchg
inc
fcoml
sbbb
inc
adc
adc
or
adc
lret
lret
pop
xor
imul
add
add
or
mov
lock
sar
lea
push
out
xlat
gs
lcall
outsb
dec
cmp
lcall
lds
out
mov
add
push
xor
ret
inc
enter
movsl
outsb
inc
pop
jl
add
adcb
and
push
dec
popa
xlat
inc
inc
xor
leave
and
add
cmpsb
movb
sbbl
popf
dec
sbb
test
dec
fwait
rorb
fistpl
sub
loopne
sti
pop
cld
mov
jg
ret
daa
xor
or
jne
pop
cmp
mov
cmp
mov
or
mov
fwait
xor
inc
xor
and
or
jg
lea
xor
sub
testb
inc
push
sub
sbb
and
adc
and
addl
pop
aas
sbb
inc
lock
cmp
add
loop
lock
mov
add
dec
shrd
xor
cli
cmp
mov
enter
jl
cmpsl
mov
mov
or
cmp
inc
pushl
add
dec
jmp
adc
addr16
clc
sub
or
cmp
or
xchg
xchg
sbb
push
and
pop
shrb
xor
pop
cmp
push
and
xchg
lock
xor
jo
push
sbb
dec
and
adc
sbb
js
jg
mov
in
push
sub
or
fidivrl
rorl
lock
inc
add
jb
sub
ds
xor
jbe
sbb
mov
mov
mov
daa
lret
cli
mov
lods
jb
push
scas
mov
inc
dec
pop
or
mov
lcall
add
daa
rclb
mov
jae
stc
mov
cmp
sub
rolb
sub
je
int
xchg
jp
mov
add
add
loop
call
or
or
and
mull
sub
pop
cwtl
inc
lea
dec
enter
mov
rcl
sbb
sub
push
shrb
add
shll
aaa
mov
cmpb
push
add
adc
scas
enter
stos
in
test
and
cltd
out
into
sbb
nop
push
mov
add
adc
out
test
mov
and
mov
into
je
push
shl
push
sbb
jne
cmp
cs
aas
mov
adc
dec
add
xchg
lea
addb
xor
push
push
insl
push
jmp
insl
cmp
pop
cwtl
lock
cld
jl
mov
sub
xor
add
cwtl
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
push
ds
fwait
out
lea
sub
inc
popa
je
inc
je
repnz
mov
cmpsb
jmp
xor
sub
push
dec
rcll
movsl
enter
clc
bound
stos
or
cmp
mov
cmp
inc
and
repz
movsb
and
adc
call
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
les
xchg
in
push
loope
js
in
add
rol
ret
sbb
dec
sub
out
or
push
mov
or
push
cmp
js
je
inc
scas
push
je
pop
dec
inc
push
inc
adc
adc
cmp
xor
test
icebp
cli
pop
or
jbe
mov
cmpb
jne
jp
xchg
orb
test
xchg
shll
sub
add
hlt
loope
jmp
xchg
pop
dec
push
sub
or
movsl
popf
rolb
sbbl
sbb
fnsave
lahf
dec
push
sub
push
xor
pop
scas
add
jne
popf
ret
pop
pop
adcl
add
aaa
out
mov
aaa
sub
insl
add
push
and
mov
jbe
sub
je
push
sub
mov
movsl
xchg
cs
inc
mov
addb
mov
out
lds
mov
fadd
lret
jns
pop
lret
test
push
or
push
data16
xchg
push
pop
dec
push
mov
je
jno
pop
inc
imul
or
jp
pop
lea
push
push
xor
xor
pop
mov
cwtl
xlat
push
test
lret
hlt
inc
les
dec
add
mov
mov
add
mov
jge
pusha
jg
push
adc
into
inc
dec
ss
cmp
add
jne
xchg
jg
sub
mov
andl
sar
mov
mov
icebp
mov
mov
lods
mov
ja
add
xor
sbb
rorb
dec
push
jae
push
push
jmp
or
jmp
testb
je
push
ljmp
adcb
sbb
scas
ss
jae
xchg
adcb
shll
rcrl
sub
mov
mov
aaa
xor
mov
push
push
and
adc
icebp
inc
insl
ss
jo
or
sbb
inc
fwait
test
xorl
xor
mov
jp
test
enter
inc
orl
xchg
xchg
or
jbe
hlt
mov
push
cld
mov
mov
dec
and
add
jg
mov
add
cmp
push
add
clc
loope
push
push
shlb
iret
mov
cwtl
push
jp
call
dec
push
or
add
mov
ret
cmp
pop
lods
je
lea
and
cwtl
xor
cmp
sbb
xlat
ss
push
add
call
out
cmpsl
inc
push
nop
adc
sbbb
fidivl
movzbl
fdivr
push
inc
jo
add
push
adc
sub
push
push
mov
and
xor
cmp
les
inc
jmp
mov
nop
xchg
add
mov
xor
push
and
ret
xor
stc
inc
inc
test
leave
mov
sub
aam
sbb
push
cmp
xchg
mov
scas
rorb
outsb
test
mov
pushf
mov
jmp
or
lret
cld
jo
dec
add
mov
jne
lea
jns
jmp
adc
sbb
mov
inc
xchg
cli
and
adc
repz
pop
lock
sub
repnz
push
pusha
and
fsubl
daa
dec
xchg
js
push
mov
or
pop
mov
push
lea
mov
cld
sub
mov
dec
mov
cmp
sub
pop
dec
xchg
sbb
rorb
xchg
test
btr
les
cld
ljmp
subl
js
adc
sub
inc
sub
or
cmp
adc
in
push
inc
cmpsb
sbb
mov
cmp
jmp
cltd
push
pop
ljmp
loopne
repnz
xor
push
cli
pop
or
nop
sbbl
sub
repnz
shll
insb
icebp
dec
adc
xchg
dec
xor
adc
add
pop
xor
jmp
hlt
dec
inc
dec
pushf
imul
or
inc
and
push
idivb
mov
sbb
mov
jge
adc
push
loop
jne
mov
mov
js
js
movsb
testb
stos
cmp
rol
pop
sbb
adc
adcb
lret
adc
adc
shr
add
or
aaa
xchg
add
shr
incb
pop
or
mov
add
add
or
bound
scas
sahf
sbbb
mov
mov
cmp
push
mov
mov
or
add
int3
cld
jmp
orl
dec
fstp
inc
into
sub
add
inc
dec
add
add
testl
cli
mov
scas
and
adc
push
sub
adc
push
jp
adc
repnz
adc
pop
mov
xor
cmp
adc
pop
add
sub
decb
cmp
faddl
sahf
dec
imul
xchg
sbb
es
ficoms
adc
or
shl
adcl
lock
mov
pop
inc
adc
aad
test
add
incl
stos
imulb
mov
test
test
adc
inc
aaa
sbb
lret
je
dec
call
inc
pop
or
sub
or
cmp
ret
mov
movsb
icebp
cs
ficoml
fdiv
sbb
xchg
insl
test
sub
push
add
xchg
adc
fisttpll
pop
call
dec
add
sub
jne
add
call
pusha
push
ljmp
and
dec
sbb
mov
jne
ljmp
shrb
cmp
out
add
fwait
mov
jle
add
inc
roll
sbb
cs
or
sbb
lret
cmpsb
lods
or
out
leave
inc
xor
dec
cmp
mov
mov
jl
cmpb
jl
xor
subb
idiv
sub
xchg
test
inc
mov
xchg
adc
inc
push
xlat
push
shll
bound
stos
push
adc
push
jg
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
mov
rorl
inc
adc
fnstenv
arpl
jne
aam
pop
push
mov
cmp
sub
jmp
adcl
in
mov
cmpsl
call
loope
aad
fs
and
enter
adc
or
test
jne
jle
jle
inc
flds
and
roll
inc
mov
test
jp
xor
je
mov
pop
xchg
and
pop
add
pop
ljmpw
push
jmp
pop
mov
daa
pop
fdivs
scas
clc
idivb
movsw
xor
int
rorb
pop
dec
jp
hlt
aam
movsl
xchg
les
data16
sbb
rclb
mov
into
movsb
test
dec
lock
hlt
jge
inc
inc
div
fdiv
fiaddl
es
ja
cmp
inc
sbb
xor
sbb
xorl
adc
int
scas
xor
fcoms
inc
and
xchg
cmpsb
xor
xchg
xchg
inc
sub
adc
sbb
adc
mov
and
imul
pop
pop
dec
jne
incb
sbbb
pop
pop
inc
cmp
jae
add
and
lods
rcl
ljmp
sub
loope
shr
test
stc
sbb
push
idiv
and
adc
je
testb
jmp
ljmp
and
and
mov
adc
imul
pop
movsb
aam
or
inc
pop
es
xchg
cmp
ljmp
int
out
mov
jbe
jns
aas
push
addl
sub
push
mov
jno
lods
add
push
push
dec
dec
fstl
mov
push
mov
dec
rol
setle
arpl
test
fimull
popa
push
pop
and
lods
xchg
jmp
xchg
stos
gs
mov
or
movb
int3
push
cld
outsb
xor
and
dec
pushl
dec
je
or
ss
jg
movsb
cmpl
dec
in
adc
xor
hlt
fdivs
testb
mov
mov
fists
or
je
aas
and
inc
pop
mov
mov
mov
scas
es
je
clc
in
pop
je
test
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
and
adc
mov
xor
idivl
pop
or
jbe
add
cmp
pusha
or
dec
lcall
or
and
pop
fbld
lea
add
sbb
mov
ret
jmp
notb
je
iret
push
pop
pop
das
adc
cmovs
and
sbbl
mov
mov
imul
testl
aaa
jp
add
mov
or
add
mov
pop
mov
lock
inc
dec
adc
inc
mov
scas
pop
add
or
xlat
mov
in
cmp
push
pop
call
movsb
daa
sub
daa
pop
inc
sbb
or
xorb
sbb
in
or
adc
in
cltd
add
shlb
cltd
push
sbb
mov
or
or
andb
xor
dec
enter
repz
push
rcl
rcl
aad
cmp
repz
xlat
fcomp
and
add
sti
iret
add
pop
nop
data16
inc
add
fcmovu
les
dec
into
mov
rcrb
xor
sub
mov
aaa
add
mov
mov
add
scas
mov
add
sbb
sbb
pop
sub
push
divb
push
jne
xor
insb
sub
push
ret
lods
add
lock
iret
out
jne
into
cmp
das
or
push
or
pop
bound
sub
adc
add
shlb
pusha
push
lcall
mov
imul
pop
or
lea
cmp
imul
lea
sar
inc
js
sbbb
les
sbb
neg
lfs
mov
aaa
and
lods
cwtl
pushf
sub
out
jl
call
pop
dec
mov
rol
sti
add
stos
pop
test
es
lea
adc
add
jb
fcoml
test
inc
rorb
dec
adc
or
dec
or
movb
popf
outsl
mov
icebp
divl
mov
and
lea
pop
incb
movsb
subl
jae
xchg
ja
add
add
dec
sbb
mov
inc
mov
sarl
ljmp
ss
inc
or
mov
mov
mov
jne
mov
jl
repz
outsb
popa
shll
push
mov
fstps
inc
cmp
loopne
mov
mov
xchg
push
or
andl
frstor
ret
movsb
jns
popa
pop
sub
inc
xchg
dec
xor
cmpsb
cwtl
mov
jge
jl
loope
imul
rol
add
stc
jle
jle
or
insb
scas
jne
enter
xchg
add
cld
or
outsl
fcomps
loopne
cmp
rorb
cmpb
jg
or
cmp
movsl
add
inc
xchg
mov
outsl
mov
or
pop
mov
shrl
jecxz
adc
in
out
xchg
mov
or
dec
sub
push
inc
inc
dec
add
or
test
test
div
cli
enter
cli
inc
cli
div
xchg
add
mov
or
popa
inc
sbb
loopne
mov
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
push
clc
jmp
sub
insl
xchg
mov
xor
dec
cmp
mov
jecxz
clc
mov
push
dec
shl
lcall
sbb
sbb
enter
cmpsl
add
pop
lods
cmp
repnz
pushw
rcl
xor
sub
loop
out
jge
inc
out
pop
xchg
mulb
jb
adc
lds
pop
add
inc
hlt
repnz
xor
in
inc
adc
inc
shl
call
fdivrs
aam
inc
sbb
mov
test
dec
ss
dec
test
push
sub
pop
adc
add
or
call
dec
inc
mov
lea
push
fnstcw
mov
insl
sub
outsb
lcall
inc
inc
and
repz
cltd
add
sub
aas
sbb
adc
negb
negb
and
iret
enter
lock
xchg
lret
out
or
sbb
fs
jge
inc
sbb
loop
lock
jmp
add
movsb
repnz
jne
sbb
in
xchg
fimuls
push
adc
mov
adc
push
xchg
mov
sub
sbb
add
mov
or
inc
add
add
push
nop
push
ret
fdivrs
cmp
adc
shll
test
sub
in
dec
cmpsl
sub
push
inc
loop
stos
fisttpl
jb
orl
cmpsb
mov
cli
loop
fcomps
xor
fsubp
xchg
fstpt
jle
inc
imul
jmp
pop
dec
je
loopne
loopnew
sub
xchg
fsubrs
add
je
xor
mov
mov
push
pushf
jmp
sub
out
icebp
ret
sbb
sti
and
ljmp
lock
mov
test
or
into
les
or
imul
enter
dec
push
test
in
stos
jbe
sub
clc
js
and
dec
enter
jge
mov
cmp
push
shlb
add
div
add
sbb
dec
mov
add
in
into
or
outsl
inc
lock
inc
ljmp
jmp
dec
dec
fildll
loop
jle
cmp
jge
cmpb
bound
movb
dec
cmp
cmp
mov
sub
out
dec
add
add
fadds
sarb
add
repnz
and
jp
jne
dec
mov
jb
fs
or
pushfw
adc
xchg
inc
ret
and
add
push
add
dec
xor
mov
pop
adc
inc
or
dec
push
imul
dec
xor
pop
mov
lret
mov
and
sub
add
or
adc
fisttps
jmp
dec
pushf
mov
or
add
or
pop
ret
mov
add
cmp
cmp
push
mov
dec
stos
dec
mov
cwtl
and
push
ret
lods
push
imul
or
jae
mov
mov
pop
sbb
jo
mov
mov
iret
xor
push
movsb
repnz
pusha
inc
mov
jg
mov
and
pop
pop
pop
rcrb
ret
jne
ljmp
inc
ret
or
mov
jns
loope
xchg
adc
dec
movsl
popf
jae
or
or
add
push
imul
lret
test
add
jl
or
xchg
ss
mov
pop
xlat
pop
xchg
mov
adc
xlat
dec
push
iret
enter
push
add
fwait
shlb
jne
and
xchg
mov
mov
inc
jge
mov
ret
or
enter
lea
icebp
xor
aas
movsb
xor
cld
cld
adc
xchg
xorb
add
and
inc
stos
jg
cmpb
sub
into
xchg
sub
loopne
dec
aam
out
cld
or
mov
mov
cmp
test
push
ss
or
add
or
adc
xchg
sbb
mov
mov
iret
je
and
sbb
inc
jg
js
xchg
xchg
into
into
into
enter
cmc
pop
and
jg
outsl
lock
pop
or
cwtl
dec
sub
pop
mov
ja
or
shlb
or
pop
add
push
adc
dec
jg
and
dec
cmp
pop
lcall
add
inc
fiadds
out
adc
add
in
jns
add
add
test
and
je
and
inc
shl
or
push
cs
sbb
lret
pushf
pushf
lret
push
xor
xchg
push
add
roll
sub
rorb
ret
dec
add
jae
push
pop
rol
inc
lret
mov
fdivs
mov
inc
mov
sbb
pushf
outsb
jno
lret
sub
dec
sahf
jle
pop
lock
pop
and
push
cs
sbb
xlat
jle
rorb
push
daa
or
and
shrb
jge
addr16
stos
jb
xchg
xor
jl
or
fwait
xor
or
mov
dec
inc
and
push
mov
add
fmuls
pop
mov
aad
xor
aas
cmp
fidivs
cltd
sbbb
add
inc
jmp
adc
dec
inc
orl
loopne
jo
sbb
out
je
jmp
push
add
test
mov
cmp
cmp
jbe
inc
inc
int3
call
mov
pop
sbb
mov
and
sbb
lds
push
fdivrs
or
xchg
test
jbe
loope
into
lret
cmpl
or
ret
clc
pop
inc
xor
cmp
leave
add
mov
and
dec
mov
mov
add
xchg
ret
roll
sub
loopne
pop
cmpsl
sub
add
pop
das
sub
shlb
add
xchg
mov
sbb
push
pusha
cmpb
pushl
xchg
pop
and
test
je
insl
mov
push
xor
mov
out
je
and
and
popf
xchg
fcoms
je
lret
pop
mov
outsb
out
cmpl
push
mov
push
shll
push
test
sub
je
mov
mov
fcoml
imul
fisttpl
xchg
dec
sahf
flds
in
call
pop
aaa
inc
loope
sbb
in
pop
jge
lea
xor
pusha
push
pop
rolb
ss
imul
add
cmpsb
push
lods
cmpb
jl
and
xor
in
sbb
inc
and
pop
movsb
sub
dec
std
lock
sbb
push
add
inc
addr16
or
sub
or
jae
add
mov
cmp
jmp
push
push
xlat
xchg
or
mov
test
jle
outsb
mov
fsts
add
sar
sub
addb
decl
repnz
dec
inc
push
sbb
or
stos
movsl
inc
push
jne
push
inc
or
loopne
das
lods
movsb
jo
push
mov
push
adc
insb
insl
xchg
pop
mov
adc
mov
fisubrl
push
add
faddl
outsb
jb
mull
daa
sub
cmp
pop
ficoml
inc
jle
pop
add
pusha
add
aad
mov
out
pop
lock
cmp
or
and
adc
and
sbb
or
add
pop
mov
test
mov
test
xchg
std
je
mov
jg
xor
xor
call
mov
add
pop
movsb
sbb
clc
push
push
xchg
test
lea
ss
push
push
ss
rcll
dec
jmp
mov
lock
dec
mov
jae
jae
fsubs
movsb
mov
loopne
jmp
dec
loop
hlt
es
lea
jnp
scas
mov
push
sub
js
inc
push
rorb
sub
or
mov
mov
cld
sbb
inc
js
adc
dec
push
sbb
int3
adc
clc
fcompl
push
sbb
cmp
shrl
sub
add
push
pop
cwtl
sbb
adc
cli
ss
push
mov
popa
lcall
fwait
push
mov
jo
and
xor
xor
add
mov
subl
xlat
push
adc
push
mov
out
push
testb
xorb
inc
ds
push
mov
mov
sub
mov
push
mov
mov
mov
xor
sbb
js
sub
xlat
pop
daa
inc
ss
adc
pop
pushf
imul
out
inc
sub
test
adc
pop
dec
loopne
xor
test
and
jg
data16
mov
pop
add
shlb
add
pop
or
pop
out
sbb
jo
icebp
xor
cmpsb
cwtl
add
pop
xchg
or
sbb
scas
fwait
or
sub
xchg
in
out
cvttps2pi
and
mov
pop
movsl
add
pop
test
mov
adc
fld
test
leave
push
rol
cmp
jmp
fstps
nop
xor
sub
rorb
insl
xchg
or
fadd
fidivl
test
in
mov
sbb
mov
shlb
mov
or
xchg
int3
add
add
les
imul
hlt
mov
push
out
sbb
sub
or
incb
cmp
mov
fdivl
cmp
mov
fs
in
inc
mov
fs
loopne
mov
pop
xor
insl
cmpb
aad
enter
fsubs
fsubs
enter
shll
jp
dec
cmp
or
cwtl
sbb
dec
in
andl
les
dec
in
jnp
in
sbb
inc
lea
jb
imul
in
dec
push
sub
call
mov
sbb
mov
mov
jge
or
fs
or
les
mov
or
mov
lock
xor
mov
or
nop
clc
dec
sbbl
ret
repz
or
fsubs
in
xchg
jge
add
aas
movl
cld
and
enter
add
cmp
aas
pushf
and
dec
and
hlt
outsl
sbb
pop
dec
jg
adc
sbb
jne
cmp
add
int3
inc
inc
adc
push
loop
jae
pop
ds
lahf
dec
mov
orl
shrl
or
xchg
sbb
mov
fistpl
pop
dec
shlb
sbb
lock
shr
and
andb
adc
mov
mov
addr16
imul
push
xchg
scas
adc
fsubr
lahf
xchg
es
mov
pop
les
stos
lret
test
lcall
shlb
orb
pushf
fsubl
sbb
fcmovbe
fldt
inc
mov
fwait
cwtl
orb
push
cmp
add
lods
in
or
pop
roll
lock
repnz
pop
hlt
add
andl
subl
xor
loopne
inc
dec
leave
add
hlt
andl
roll
test
imul
das
xor
in
mov
mov
jmp
dec
or
rcll
dec
add
test
imul
stos
xor
movsl
bound
and
sub
mov
cltd
mov
call
pushf
rolb
pushf
xchg
iret
inc
shrb
js
xchg
adc
add
leave
and
push
adc
and
dec
xor
and
sub
xor
xor
and
cmp
xor
and
inc
dec
fs
jne
insb
add
lahf
cmp
inc
add
mov
add
popa
add
add
nop
enter
leave
add
aam
add
push
jb
data16
hlt
push
xchg
mov
lcall
xchg
xchg
inc
lock
pop
scas
loop
subl
lea
in
add
xor
in
or
jb
aam
dec
dec
xlat
nop
in
cmpsb
adc
sbbb
fwait
jp
dec
mov
pop
js
adc
adc
mov
mov
mov
mov
pop
push
fbld
cmp
push
lea
dec
xor
out
add
jne
sub
add
in
ljmp
arpl
mov
xchg
xor
std
clc
jmp
sbb
int3
rcrb
lahf
mov
sbb
enter
lock
loopne
out
in
push
mov
cmp
or
jbe
jne
pusha
test
and
imul
sbb
mov
sub
lock
rcll
xchg
xor
in
test
or
add
inc
and
stos
pop
stos
and
dec
add
dec
fwait
fs
in
push
sub
dec
call
pop
enter
pop
fcoms
push
xlat
adc
in
test
pushf
movsb
pop
adc
out
lock
adc
add
cmp
jg
gs
outsb
xchg
or
loopne
in
add
cmp
dec
adc
mov
xchg
cli
add
jge
sbb
js
mov
inc
or
inc
sub
cmc
lods
int3
out
sub
rcrb
add
rorb
je
lahf
mov
xor
xchg
xor
movsl
in
sub
or
loopne
and
fcomp
aam
mov
rorl
inc
sbb
icebp
add
xchg
and
and
xor
leave
in
dec
jbe
fs
test
lods
leave
leave
leave
leave
mov
mov
leave
rol
int3
stos
push
aad
rcl
pop
aaa
adc
lds
test
sbb
out
mov
and
sbb
pop
xchg
push
sbb
or
sarb
dec
pop
xchg
or
or
jg
sub
push
inc
aad
xchg
inc
in
push
call
mov
pop
sbbl
jns
xchg
pop
adc
pop
fstpt
pop
cmpsl
cmpsl
aad
or
adc
and
mov
lock
pushf
fidivl
lock
popa
push
arpl
gs
inc
push
aad
ja
xchg
sub
les
xor
adc
fsubrs
cmp
fwait
outsl
rclb
or
fmuls
mov
shlb
das
in
xchg
loopne
fdivl
sub
xchg
jne
mov
push
mov
mov
std
fldl
outsb
orb
sbb
rclb
jmp
jg
add
push
or
cmpsb
test
inc
or
and
add
faddl
js
and
mov
shrb
jg
dec
jg
push
ret
insb
cmpsb
dec
cmp
nop
pushf
ficoml
out
xchg
data16
mov
fbld
shlb
mov
sub
adc
dec
push
pop
pop
cltd
fisubl
add
sbb
fs
xor
add
or
fldl
mov
push
jle
inc
lahf
scas
adc
cmc
mov
lods
sub
leave
and
or
les
and
jo
and
dec
popa
loopne
sub
mov
cwtl
pop
sbbb
pop
les
mov
lock
enter
int3
or
inc
push
jg
mov
dec
roll
adc
dec
lods
and
or
mov
mov
scas
das
mov
in
shl
lcall
cmc
pop
pop
dec
hlt
pop
lods
cmp
add
adc
sbb
pusha
mov
lock
mov
or
sbb
std
jne
fcoms
push
mov
rcl
xor
call
xchg
cmp
loopne
fdivr
dec
add
jbe
pusha
sbb
movsb
dec
sahf
mov
pop
adc
xchg
jae
cltd
sub
sub
and
sbb
cs
fsubs
add
or
sbb
enter
or
jb
and
and
inc
test
or
add
dec
push
xor
adc
rorl
mov
loopne
pop
call
add
mov
lahf
cmp
lea
add
int
pop
xor
leave
mov
lahf
xchg
or
adcl
sub
out
mov
inc
xchg
pop
leave
and
rcrb
xor
inc
dec
cs
push
mov
arpl
pop
mov
add
adc
add
mov
clc
inc
mov
xor
aam
add
mov
push
cld
cmpsl
into
pop
mov
rolb
popf
nop
push
mov
popf
mov
add
xor
or
push
movsb
call
shll
mov
push
orb
xor
jmp
add
dec
or
mov
sbb
idivl
movsb
mov
ljmp
cmp
aas
and
scas
cmpsb
dec
jo
in
pop
push
les
inc
rcrb
fucom
ret
xor
std
int3
inc
mov
sti
lods
and
jl
or
adc
in
out
mov
inc
inc
jg
test
shl
mov
int3
adcl
lods
mov
int3
in
in
enter
in
in
mov
in
in
mov
push
fwait
nop
dec
outsl
movsb
lods
push
mov
lds
mov
cmc
test
aas
mov
inc
js
in
movsl
sbb
dec
das
dec
dec
push
dec
push
adc
and
mov
cmpsb
and
popl
sarb
xchg
and
and
xchg
nop
mov
and
lods
pop
pushf
mov
ret
fiaddl
sarl
in
ret
and
scas
cwtl
mov
shlb
xchg
jo
cs
ret
mov
jae
push
jbe
sub
inc
mov
mov
pushf
sub
ret
subb
add
mov
mov
loopne
xor
in
movsl
adc
xor
lods
sarl
in
pop
or
test
in
and
sbb
movsb
int3
inc
lea
hlt
mov
push
add
sub
add
outsl
sub
or
dec
jo
mov
lods
jnp
sbb
insb
inc
dec
movsl
es
mov
sbb
and
call
loope
stos
pop
xor
and
insl
outsl
outsl
rorb
je
lods
jl
add
sbb
test
cmp
or
jp
adc
push
mov
stos
dec
test
and
cmp
inc
sub
inc
lods
stos
sbb
outsb
jns
xorl
mov
enter
dec
mov
aas
pmaxub
jo
pop
and
jns
cmovne
xor
and
fdivl
rclb
lods
int
or
mov
sbb
and
daa
call
xor
adc
aam
sub
ljmp
rclb
adc
sbb
js
pushf
std
jb
imul
movsl
dec
inc
sbb
jb
test
adc
dec
mov
mov
cmp
add
adc
test
jns
adc
inc
in
pop
or
push
jno
imul
cmp
and
fs
fdivl
in
adc
xchg
mov
xor
mov
dec
rclb
inc
aam
push
sub
orb
mov
push
adc
mov
or
mov
cmpsb
lds
push
mov
and
faddl
inc
lods
es
fsts
es
bts
imul
mov
adc
lea
mov
and
mov
stos
ficoml
sbb
or
mov
push
push
xchg
inc
fnstenv
fadds
in
inc
adcl
mov
ret
sub
mov
sbb
pop
pop
adc
adc
insl
addb
jb
enter
mov
orb
pusha
and
stc
or
aam
adc
add
sar
cld
jg
push
mov
fildll
mov
adc
addb
dec
test
test
mov
test
lock
cmp
iret
gs
sbb
pushf
rorb
pop
aaa
test
fdivrl
imul
loopne
in
int3
sub
mov
adc
xor
in
fisubl
and
xor
fildl
xor
mov
adc
das
aas
es
loopne
mov
test
xchg
test
out
lods
dec
adc
jo
out
inc
lods
lea
mov
mov
pusha
out
out
cmp
or
popa
adc
rcl
sub
mov
call
dec
pop
rorb
shrb
lret
les
leave
mov
subb
sub
xor
mov
cs
mov
inc
or
mov
bound
mov
or
frstor
mov
adc
neg
lock
es
pop
mov
lock
ficoml
jmp
gs
push
stos
mov
adc
mov
xchg
faddl
mov
jo
or
xor
ja
in
inc
xchg
mov
sub
and
pop
mov
or
mov
mov
push
xchg
mov
shrb
mov
pusha
movsb
inc
push
dec
sbb
cmc
pop
mov
shrl
lods
mov
add
or
enter
jne
jo
push
sbb
cmp
sub
and
adc
inc
rcll
mov
or
adc
mov
mov
lea
sbb
mov
mov
pop
add
add
push
lods
inc
dec
inc
dec
shlb
mov
jne
out
loop
cwtl
or
pop
fwait
es
add
hlt
rclb
sub
iret
mov
push
pop
and
xor
dec
and
mov
push
jo
in
add
popf
ficoml
lcall
aad
pop
or
mov
das
clts
add
adc
andl
enter
fs
int3
xor
inc
aad
loope
icebp
aam
xchg
pusha
pop
enter
jo
pop
mov
jo
pop
out
inc
dec
sub
jne
aad
mov
add
mov
xor
call
shlb
les
or
daa
scas
pop
les
dec
add
int3
test
sarb
sub
lahf
push
mov
add
inc
xor
mov
pop
outsb
movsl
rclb
movsl
inc
lock
sub
cmovl
aas
add
push
mov
lahf
add
sbb
pop
or
imul
pop
push
jno
lods
mov
cmpl
in
andl
add
rorb
test
mov
fistpl
addb
push
jns
jae
add
bound
add
adc
fcomip
jns
pop
dec
enter
jne
aaa
dec
jo
cs
int3
mov
dec
mov
stos
test
or
mov
mov
les
mov
sbb
subb
jnp
mov
sbb
movsl
fs
or
in
pop
call
sbb
insb
js
mov
aaa
stos
mov
add
movsb
sbb
add
inc
movsb
pushf
or
lcall
mov
push
fs
and
popl
movsb
pusha
ret
inc
lods
inc
test
in
imul
and
cmp
scas
inc
add
aam
jb
adc
std
mov
add
cmpsb
add
pop
xor
fisttps
notl
adc
lds
jl
iret
es
and
cmp
cmp
adc
mov
push
test
leave
sub
imul
leave
aas
xchg
dec
push
popa
les
leave
push
adc
and
loopne
fsubr
cmp
mov
fsubr
les
or
out
and
mov
int3
lahf
movsl
adc
in
inc
push
fs
or
push
pop
xchg
fs
mov
fimull
das
mov
mov
lcall
les
cmp
xor
aaa
popf
lock
and
or
xor
test
cmp
lods
dec
fwait
in
in
cmp
xlat
push
xchg
dec
outsb
xchg
andb
xchg
pop
nop
dec
cwtl
leave
push
and
dec
ret
xchg
dec
push
sbb
xchg
fmul
lock
cmp
xor
aad
sbb
addr16
jecxz
pop
mov
jo
imul
push
xchg
test
xchg
pop
push
pop
adc
lock
xchg
adc
cmp
lock
adcl
sbb
sub
adc
add
or
xchg
adc
inc
cmp
xor
fbstp
scas
inc
inc
mov
jae
sysenter
subl
jge
cltd
lret
push
or
xchg
pop
mov
add
in
dec
cmp
add
in
add
in
xchg
lret
or
add
call
sbb
andl
inc
in
push
push
in
andl
das
test
inc
mov
lret
cmpb
stc
push
xchg
add
push
in
fisubl
cmp
xchg
sub
pop
das
xchg
addr16
data16
or
ret
sub
gs
orb
or
test
adc
pusha
sub
fadds
repnz
cmp
and
inc
pop
dec
xchg
and
inc
cld
sar
add
scas
inc
rorl
pop
push
inc
inc
in
rcrl
fiaddl
test
je
jno
test
aas
or
xchg
dec
jb
cld
adc
ficompl
shrl
jb
push
call
mov
adc
cltd
mov
inc
inc
or
mov
clc
xchg
xchg
adc
shr
mov
rolb
std
fcom
mov
pushl
jo
sub
dec
sub
sbbb
stos
adc
xor
subl
adc
loopne
ret
fadds
aam
scas
xchg
inc
xchg
aam
imul
mov
aas
mov
rcl
cmpb
sub
mov
jecxz
sub
add
dec
and
adc
sbb
mov
nop
dec
inc
or
or
sub
mov
dec
vpmovmskb
push
fcom
inc
xchg
xchg
jne
add
dec
push
sub
adc
rolb
dec
nop
pop
fstl
lds
adc
adc
and
jb
dec
test
test
mov
test
jmp
pusha
nop
dec
call
jb
fisubl
mov
and
gs
test
sbb
shlb
xlat
and
enter
fcomi
dec
add
in
add
enter
lock
leave
dec
dec
add
in
shrb
decb
nop
push
mov
jg
pop
sar
adc
iret
mov
fs
xchg
dec
es
pop
insb
hlt
dec
es
fs
push
js
cltd
fs
push
dec
inc
xchg
xchg
add
jo
mov
cwtl
adc
mov
lcall
add
and
add
adcb
cmc
les
enter
fdivrl
addb
addb
add
adc
dec
je
aam
xor
and
enter
aam
mov
sbb
sbb
mov
mov
jecxz
add
jecxz
loopne
cmp
jecxz
test
pop
test
adc
in
pop
orl
and
xor
dec
xchg
fidivrs
dec
outsl
subb
mov
push
mov
sub
mov
enter
sbb
test
js
loopne
pop
adc
pop
aam
or
inc
push
cltd
xchg
jno
or
orl
pop
aaa
cmpsb
pusha
mov
aas
mov
xor
sub
pop
xchg
and
cmp
movsb
cwtl
loope
fmul
push
add
outsl
dec
mov
push
sub
bnd
add
lds
sub
push
mov
enter
inc
movsl
add
push
sbb
enter
add
xchg
adc
pusha
rcr
cltd
int3
xor
pop
sub
fcmovnb
add
push
sub
push
rorb
lock
sub
mov
rcrl
lods
test
jno
in
fsub
or
xor
cmpb
pop
leave
dec
add
add
gs
in
cmp
jne
cmpl
sbb
xor
test
lds
pop
push
mov
add
mov
mov
push
push
mov
mov
rolb
mov
push
mov
pusha
pop
test
mov
cld
inc
cmp
xor
enter
adc
inc
add
add
outsb
pusha
ja
popf
rorb
xchg
jo
cmpsl
push
sbb
and
pop
fisttpll
out
jno
or
cwtl
adc
in
push
insl
popf
div
sbb
out
inc
mov
mov
mov
inc
jbe
adc
lret
jno
fistpll
or
xchg
nop
out
loope
or
push
lods
mov
cmp
adcl
xor
or
inc
mov
mov
adc
stos
xchg
dec
sbb
cli
mov
mov
cld
cli
scas
fs
enter
cmp
dec
cmp
and
cmp
add
adc
js
inc
mov
xchg
xor
pusha
sti
test
cmpsb
pop
jb
sti
and
adc
imul
inc
enter
inc
or
pop
shll
insl
sub
inc
and
stc
cld
leave
in
cli
call
push
sub
rcll
mov
es
ss
sbb
inc
pop
dec
les
pusha
sub
adc
mov
jo
pusha
inc
add
push
pop
in
add
and
icebp
push
sbb
in
pop
adc
push
jo
push
adc
push
nop
imul
aas
and
fwait
rclb
fiaddl
adc
dec
lahf
pop
out
roll
push
and
and
mov
pop
lock
and
adc
or
stc
aas
push
mov
or
and
lahf
cmp
lods
shrl
and
inc
mov
std
pushl
or
out
mov
jnp
pop
mov
scas
mov
mov
push
leave
push
cmp
add
ffreep
hlt
out
pop
adc
add
jbe
out
shlb
test
pop
push
loopne
xchg
jl
mov
xlat
mov
addr16
mov
add
xchg
lods
dec
nop
jne
sub
loop
xor
pop
mov
or
shll
push
and
ret
call
sbb
inc
and
push
and
orl
popa
sbb
jnp
pop
movsb
cmp
lds
sbb
cmp
dec
sbb
aaa
es
mov
cmp
xchg
fcmovnu
or
outsl
sahf
jmp
stos
cmp
loopne
mov
test
mov
mov
push
xor
iret
repz
pop
jne
add
adc
jo
mov
jae
roll
call
fistpl
pop
jne
out
mov
pop
pop
mov
ud1
filds
xchg
inc
lcall
sub
mov
mov
ljmp
add
fistpl
or
jnp
pop
repnz
mov
add
and
sar
jmp
inc
xchg
sub
rcll
mov
mov
jns
mov
into
adc
cwtl
call
cmp
nop
mov
hlt
aas
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jg
mov
ljmp
fs
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
jg
mov
adc
mov
rcll
xchg
adc
push
or
sub
jbe
cmp
rclb
cmpl
imul
sub
inc
stc
push
mov
pop
or
aam
xlat
dec
outsb
je
mov
insb
outsl
arpl
fs
out
sbb
push
dec
imul
shll
jae
cmp
jb
gs
xor
cld
repz
loope
fs
adc
popa
and
popa
je
outsl
outsb
sub
cmp
xchg
push
sbb
mov
sbb
xor
int
add
pop
sub
aam
leave
insl
mov
inc
outsl
jb
js
je
jb
gs
cmp
or
jbe
std
add
jb
add
add
add
je
push
orb
push
je
mov
popa
jb
mov
mov
dec
xor
out
and
sbb
insl
insl
cmp
cmp
and
jns
add
das
shll
push
dec
push
inc
inc
gs
std
fcomps
daa
dec
outsl
jbe
dec
arpl
ds
rcll
je
inc
jne
jne
dec
loopne
rcr
insb
xchg
mov
inc
jo
imul
dec
dec
arpl
bound
pushf
mov
adc
iret
cmp
cmpsl
xchg
popl
fstl
inc
push
jne
xor
lock
lahf
mov
daa
push
mov
fwait
sub
adc
into
cmp
jle
push
jne
xchg
pop
lods
mov
ds
popa
das
jo
or
stos
sbb
inc
pop
nop
push
mov
imul
inc
dec
add
popa
das
inc
push
sbb
or
mov
inc
inc
sti
imul
es
sub
sub
sub
cs
movsl
adc
cmp
ds
inc
das
pop
pop
std
sub
jnp
jge
jg
shrb
inc
test
out
js
in
cs
and
push
pop
or
clc
pusha
pop
notl
dec
xor
inc
insb
jae
mov
les
push
fs
mov
pushf
cs
pop
inc
inc
mov
insb
mov
inc
xor
insl
and
jb
jbe
mov
jbe
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
add
inc
outsb
push
jo
imul
push
pop
mov
je,pn
fldt
sub
jo
xchg
idivb
and
dec
fs
mull
and
mov
insb
out
scas
mov
push
insb
sbbb
int3
and
and
daa
push
outsb
addr16
jae
sbb
xor
and
insl
and
xchg
fwait
sbbb
jne
dec
mov
dec
rolb
les
and
mov
sahf
ljmp
or
imul
popa
add
or
fs
gs
bound
add
push
and
push
loopne,pt
sbb
int3
fidivrl
popf
jb
loopne
outsl
mov
sbb
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
dec
loopne
push
arpl
divb
fsubrs
mov
fiadds
push
sbb
flds
imul
out
int3
or
vmread
push
lcall
sbb
pop
xor
lds
sub
gs
push
xchg
jnp
sbb
cmpsb
cs
out
or
or
xor
shll
mov
adc
pop
dec
add
add
imul
nop
ss
fs
jo
cli
jbe
add
dec
imull
inc
xchg
push
mov
inc
pop
push
gs
push
mov
out
fisttpll
jae
inc
jle
outsl
push
mov
out
push
cmp
cmp
xor
pusha
or
inc
aaa
insl
in
ljmp
imul
add
outsb
popa
pop
or
in
inc
jno
or
std
cmp
push
push
leave
nop
push
roll
inc
insl
imul
inc
fnstsw
adc
sub
es
lea
push
and
add
ja
push
cmp
xchg
mov
addr16
jae
xor
adc
jne
pusha
jo
sub
test
sar
shrb
sub
and
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
out
inc
imul
inc
inc
and
mov
push
push
dec
cmp
jg
outsb
imul
rorl
jg
push
rol
das
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
adc
je
sub
jae
push
inc
jo
sbb
imul
das
cmp
gs
popa
dec
add
dec
push
clc
enter
popa
js
jae
cmp
addr16
dec
pop
add
adc
sub
dec
jnp
sub
xchg
adc
aaa
mov
push
adc
add
add
add
add
scas
adcb
cmp
pop
or
aaa
ds
push
pop
hlt
pop
mov
in
or
pusha
push
js
or
fcmovnu
cltd
jns
pop
add
sbb
imul
in
std
addb
add
xchg
test
mov
and
adcb
pop
daa
push
cmpb
iret
mov
lret
jb
int3
push
pop
mov
add
mov
daa
rclb
mov
js
jo
dec
rorb
jb
fcoml
sbb
pop
jb
or
leave
and
fiadds
pop
add
push
xchg
push
inc
mov
xor
or
test
sahf
pop
add
test
dec
cmp
cs
dec
cmp
dec
pop
dec
cmp
test
out
imul
repnz
pop
mov
jns
in
stos
and
sub
dec
add
push
in
push
test
adcl
in
add
and
sbb
add
rolb
xor
loopne
add
add
stos
subb
mov
incl
adc
sbb
push
mov
add
pop
adc
out
aas
sub
addb
xchg
and
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
movsb
push
inc
cli
sti
cld
std
inc
add
imul
pushl
aas
test
dec
dec
sub
push
sbb
push
mov
outsl
ja
inc
aam
sar
cs
jae
jb
bound
dec
stos
rorb
ss
popa
mov
sub
mov
jo
pop
fnstsw
out
add
popa
addr16
outsl
js
push
push
inc
push
mov
test
dec
and
insb
outsb
jnp
int3
out
mov
dec
mov
daa
add
jle
pop
movsl
insb
in
dec
imul
ss
fcmovnu
mov
imul
xchg
xchg
fdivs
jb
jns
daa
pop
pop
jnp
or
and
mov
jo
dec
aad
lcall
addr16
cmp
lods
and
inc
outsb
pushw
mov
add
mov
mov
inc
jbe
push
sbb
fs
dec
movsb
sbb
rclb
inc
inc
lock
cmp
push
rorl
and
mov
dec
dec
sub
test
jno
xchg
fisubrl
push
jae
cmp
cmp
and
jae
addr16
in
push
subl
gs
or
jbe
xchg
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
jae
cmp
fildll
mov
or
imul
call
push
test
jg
jae
enter
inc
in
xchg
into
ljmp
sub
jg
outsb
bound
jns
pusha
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
fisubrs
cmp
cmp
push
das
push
sub
out
sub
es
jle
sub
sahf
mov
dec
sub
addr16
sub
sub
sbb
pop
push
cmp
popf
lret
jmp
cmp
mov
dec
pop
pop
imul
addr16
push
jb
imul
jo
ss
lret
xchg
push
lods
sbb
push
fadds
and
es
dec
test
cmp
aam
repz
sub
sbb
inc
add
or
jns
out
add
in
rcrb
mov
cld
inc
push
hlt
sti
sti
fdivp
xor
mov
js
push
sahf
out
dec
movsb
mov
nop
push
jns
andb
jl
push
imul
adc
sahf
out
sahf
push
aam
jbe
das
insb
push
fs
mov
out
sahf
pop
push
push
dec
dec
inc
jns
out
inc
cmp
xor
jns
out
sbb
add
incl
loopne
sahf
out
int3
lods
mov
xor
out
or
dec
test
repz
andb
cmp
or
lock
aam
sahf
out
mov
fs
repz
repz
cld
shrb
into
cmp
push
mov
lcall
fisttpl
outsb
push
xor
jb
and
cwtl
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
mov
adc
dec
jae
fldenv
mov
sub
divl
sbb
dec
inc
dec
xor
inc
dec
enter
dec
dec
push
push
mov
and
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
aaa
outsb
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
pusha
mov
ds
pop
adc
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
decl
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
stc
aas
pop
leave
loop
mov
xchg
dec
inc
scas
lods
inc
clc
mov
mov
iret
adc
out
mov
pop
pop
repnz
jle
aas
and
es
sbb
xor
lcall
stc
mov
push
dec
push
push
inc
inc
or
outsb
jbe
push
mov
xor
and
rolb
and
cmp
inc
jge
loope
push
loope
gs
push
imul
sbb
push
dec
aas
iret
push
sub
mov
pop
push
add
dec
sbb
fists
cs
pop
dec
and
pop
add
push
xor
sbb
xor
aas
sbb
fistpl
pushl
dec
push
xor
push
dec
cmp
ds
xor
dec
push
inc
push
xor
fdivrs
aas
jb
jbe
inc
aas
ss
inc
push
sub
fucomip
fsubrp
add
dec
pop
sbb
pop
dec
push
aaa
push
push
out
in
divl
ss
and
dec
dec
push
push
inc
aaa
push
aas
xor
adc
xor
in
insl
add
sub
aas
ret
cmp
and
add
adc
sub
cld
sub
xorb
adc
or
sub
adc
pop
push
pop
sub
in
out
sti
and
push
push
pop
pop
inc
inc
add
cmp
das
dec
pop
push
fistpl
pop
push
push
pop
cmp
das
cmp
cmp
andb
inc
mov
mov
dec
sbb
aaa
xor
cld
dec
mov
ds
or
sub
xor
xor
sub
insl
xchg
push
dec
cmp
push
push
pop
sub
ja
sub
inc
inc
and
xor
inc
push
adc
iret
mov
sbb
inc
push
fisubrl
adc
push
xor
jbe
andl
sub
lods
mov
mov
sbb
or
dec
pop
and
and
add
pop
sub
ljmp
push
jmp
xchg
lret
and
cmp
hlt
out
out
and
gs
inc
out
clc
pushl
inc
pop
or
dec
cmp
or
cmp
push
adc
mov
push
adc
and
sub
mov
cmp
or
mulb
aas
cld
sub
xor
cmp
cmp
jnp
inc
pop
adc
dec
nop
dec
cwtl
in
jmp
cld
in
cmp
and
push
pusha
xor
in
repz
xorb
push
nop
imul
mov
loopne
push
lock
dec
pop
andb
jg
xchg
cmp
mov
mov
jle
and
and
pop
add
aaa
scas
push
and
push
mov
adc
and
jp
cmp
outsl
insl
xor
pop
and
outsb
insb
test
jmp
popa
setp
and
dec
bound
mov
push
xor
fs
testb
mov
push
scas
adc
inc
push
addb
rclb
xor
jns
pusha
nop
loopne
adc
jns
shll
push
push
pusha
rclb
idivl
push
push
push
push
add
mov
mov
adc
pushf
aaa
sub
push
les
inc
ss
call
push
add
sbb
cmp
xor
and
adc
push
js
inc
jbe
mov
jae
or
or
aas
xor
pop
dec
xor
and
and
sahf
dec
fnstsw
and
push
push
cmpsb
aaa
and
and
fistpl
cmp
push
jmp
jecxz
push
arpl
adc
or
dec
aaa
jb
cmp
in
push
pop
inc
pop
pop
push
insb
push
pop
rol
sub
adc
push
xor
pop
push
fildll
imull
sub
adc
or
aaa
cs
inc
sarl
pop
dec
adc
mov
sub
mov
ja
push
xor
cmp
push
out
xor
rclb
jae
ss
xor
ret
cld
xor
pop
sbb
fs
pop
push
cmp
jecxz
push
add
cmp
or
fs
cmp
outsb
jo
shll
pop
push
sbb
pop
test
cmp
fs
daa
adc
dec
push
sbb
scas
out
jl
sbb
cmp
jae
push
daa
pusha
sub
insb
imul
daa
fmul
cmpsb
out
inc
cmp
push
cmp
push
daa
daa
jae
shll
sahf
adc
inc
cmp
mov
cltd
push
xor
mov
pop
or
or
add
push
xchg
in
pusha
xchg
stos
pop
cmp
and
gs
dec
inc
xor
mov
mov
cld
sub
add
or
adc
xor
and
mov
dec
lds
aas
mov
add
and
add
jnp
in
inc
xor
xchg
xor
xor
or
adc
add
sub
xor
aad
push
mov
in
adc
pusha
and
pop
sbb
dec
push
push
cmpsb
mov
pop
and
push
pop
push
inc
pop
sahf
dec
in
sub
jb
jp
daa
in
sub
sbb
mov
push
push
lods
sub
xor
pop
xor
mov
xor
out
ss
cmp
les
xchg
mov
aas
inc
mov
or
scas
push
aas
sub
mov
ss
sub
or
popa
add
xor
pop
jne
push
lahf
xchg
dec
clc
and
sahf
aas
scas
ss
xlat
into
aas
dec
sub
xchg
ss
jbe
pop
mov
inc
aad
inc
dec
push
xchg
outsb
inc
lret
mov
cmp
lcall
cmpsb
cmp
xor
xor
bound
and
test
sbb
in
mov
aas
scas
bound
andb
ret
stos
sub
bound
pop
push
cmp
push
add
decb
sub
jb
movsl
sbb
add
in
scas
out
push
pop
push
mov
jbe
icebp
cmp
cmpsb
call
push
lods
pop
daa
adc
addb
pop
inc
imul
adc
pop
lock
inc
pop
inc
xor
inc
pop
sbb
ja
std
push
xor
inc
add
or
imul
and
mov
pusha
popl
xchg
pop
mov
xchg
lods
js
sub
fisubrs
imul
sub
add
stc
scas
push
push
xchg
jae
insl
popa
imul
je
push
push
mov
mov
jo
scas
data16
push
ja
bnd
cmp
pop
fiadds
lahf
out
push
movhps
inc
cld
adc
xor
push
hlt
add
mov
pop
jns
xchg
addr16
fcompl
cmp
loop
loopne
das
add
dec
or
adc
es
in
shll
pop
je
sub
scas
mov
or
add
push
mov
or
mov
or
ret
xor
nop
call
or
ja
out
cmp
pop
pop
cmp
sub
or
addr16
hlt
adc
pop
hlt
sbb
aas
xor
scas
jo
pcmpgtb
xor
icebp
psubb
sub
rolb
push
fmuls
push
push
fcoms
test
pop
pop
add
or
xor
cmp
cmp
sub
fs
outsb
or
scas
shlb
cmp
jp
xor
add
push
shll
aaa
dec
lret
outsb
aaa
xor
sub
xor
add
push
xor
push
popa
lock
jl
push
inc
adc
push
cs
push
test
or
cwtl
js
ds
out
push
or
ret
out
std
mov
sti
outsb
insb
outsl
jb
bound
idivb
outsb
scas
pop
push
push
je
add
jae
popa
movb
aas
in
and
push
mov
das
and
xor
js
add
add
and
xchg
push
enter
cmc
imul
xor
decl
aaa
and
push
push
das
xor
xor
adc
in
xorb
ror
pushf
fiadds
pop
sbb
sub
and
pop
sub
rorb
pusha
imull
aas
and
mov
dec
sub
xor
je
jns
mov
mov
adc
or
mov
cmp
xchg
jb
push
fcompl
gs
outsl
repz
add
das
adc
xor
dec
punpckldq
pop
inc
add
test
enter
adc
dec
pop
dec
adc
xor
adc
cmp
cmp
cmp
push
push
inc
call
das
xor
xor
sbb
mov
or
pop
ss
aaa
cmp
mov
mov
jge
and
ds
push
push
xor
pop
aam
jnp
dec
fwait
jle
push
into
push
dec
sub
xor
push
enter
mov
push
xor
sub
sub
mov
test
adc
movl
sbb
and
mov
ror
ds
cwtl
dec
and
push
inc
push
xor
pop
push
pop
dec
and
and
ret
outsb
inc
push
cwtl
sbb
mov
pushf
rcll
cmpsb
ds
lcall
bound
cmp
pop
ret
and
pushf
loopne
lahf
jo
iret
inc
add
int3
fnstcw
ss
jge
cmp
sub
or
sbb
push
aaa
sbb
jmp
out
adc
cmp
or
and
dec
shrb
push
or
or
or
mov
fstpt
dec
cmp
call
sti
sub
dec
daa
pop
pop
dec
inc
or
inc
add
ret
cld
test
xor
xor
push
and
push
ret
jne
dec
push
sbb
push
pop
and
dec
or
inc
mov
push
dec
inc
inc
outsl
mov
in
mov
push
adc
push
ds
push
push
push
xor
ss
and
pop
mov
add
outsb
nop
push
test
and
or
push
mov
nop
mov
jo
andb
sbb
add
fbld
xor
pop
clc
add
xor
dec
icebp
sbb
cmp
add
test
lods
xor
inc
rolb
dec
outsb
sti
push
clc
cltd
lcall
pop
pop
negb
aaa
cmp
xor
daa
or
push
lods
das
sub
add
repnz
xchg
push
ja
mov
mov
pop
mov
lahf
inc
js
adc
cmp
and
movsl
js
popa
fisubs
and
cmp
adc
cmp
xor
out
mov
xor
test
lea
cmp
comiss
jnp
cs
cmp
cs
jnp
sbb
inc
daa
in
add
rcll
in
lea
cs
sub
flds
sbb
subl
xchg
testb
fsts
inc
cwtl
lods
insl
sub
xchg
and
mov
pop
xor
adc
out
test
ds
sbbb
mov
inc
jbe
and
xchg
sub
nop
push
or
push
jmp
xchg
push
pop
jne
stos
icebp
mov
dec
fdivl
jne
daa
in
scas
cmc
sbb
sahf
cmp
aaa
and
adc
shr
sub
and
rorl
cmp
add
or
sbb
ss
add
cmp
pop
insl
push
xchg
xchg
mov
sbb
in
add
sar
imul
jge
and
cmp
add
push
cmp
stos
push
rol
pop
daa
add
daa
sub
fists
dec
sub
and
cs
pop
push
push
add
lcall
mov
add
aam
pop
inc
lods
fistpll
mov
xor
add
fisubrs
jg
xor
cmp
dec
cmp
pop
inc
cmp
and
test
aas
xor
adc
mov
adc
adc
adc
fincstp
adcl
sub
icebp
pushf
sbb
popf
xchg
jbe
mov
cltd
or
es
test
pop
ret
sbb
in
cmp
mov
sub
testb
sub
sbb
inc
xor
pop
in
test
pop
xor
test
popa
gs
or
and
add
int3
popf
sbb
vcvttpd2dqy
adc
mov
fisubl
inc
xor
sbb
push
jae
sub
js
jecxz
pop
xchg
flds
mov
cmp
add
imul
push
insl
cmp
rcrl
mov
inc
sbb
ror
xor
fiaddl
lods
inc
sbb
and
push
xchg
adc
and
sbb
dec
fsubl
jg
out
test
ljmp
inc
pop
or
pop
decl
sub
out
sub
enter
or
and
adc
pop
sti
ss
add
mov
scas
into
xor
push
sbb
aas
cmpsb
or
sbb
lret
nop
movsl
and
push
cmp
mov
jmp
je
add
jne
sub
popa
cmc
fisttpll
adc
pop
cld
jl
scas
rolb
ja
push
pusha
push
mov
js
dec
adc
test
loop
and
sbb
pusha
popf
pop
outsl
pop
repz
dec
ss
mov
mov
inc
sbb
dec
add
and
and
cltd
mov
add
mov
dec
mov
adc
out
sbb
inc
sbb
inc
adc
pop
jecxz
sbb
adc
adc
xor
cmp
adc
shrb
icebp
aaa
mov
cmpb
sub
out
mov
mov
sub
movsl
pushl
add
je
ja
fs
movsb
xchg
cmp
pop
mov
das
cmp
popa
push
in
inc
lea
fdivs
push
inc
push
dec
inc
lcall
shrl
pop
inc
add
sub
sub
fwait
ja
jnp
xor
inc
xor
ss
jo
out
fldcw
cmp
sarb
es
repz
shl
push
loopne
mov
push
push
mov
in
mov
inc
testb
lahf
sub
dec
push
dec
dec
jmp
cmp
and
mov
test
iret
adc
and
mov
add
adc
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
lcall
or
mov
sub
sub
inc
pop
mov
sbb
mov
ds
pop
sbb
cli
subb
and
fdivr
dec
fsubs
sbb
in
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
adc
mov
pop
push
js
leave
cld
and
xor
aaa
xor
cmp
ss
push
scas
test
subl
movb
outsl
dec
fisubl
push
dec
imul
daa
iret
mov
adcb
sub
xchg
pushf
cmp
push
inc
iret
leave
jae
mov
repnz
cmp
adc
add
mov
js
and
loopne
rorb
adc
rolb
inc
int
mov
js
cmp
into
pop
add
sub
lock
mov
pop
int3
loop
lods
lods
test
pop
ljmp
pop
call
jnp
cmp
xor
and
xor
pop
xor
xor
inc
xor
inc
ret
adc
test
add
push
or
adc
sbb
imul
dec
bound
cmp
js
out
lret
loopne
jne
add
dec
test
pop
inc
dec
jp
out
push
jb
ret
sbb
xlat
adc
mov
bound
je
bound
mov
inc
push
xor
sbb
inc
mov
sub
jg
ret
mov
pop
js
pop
adc
ficoml
outsl
insb
jae
loop
pop
fstpt
push
cmp
jl
sub
out
es
pop
dec
lock
mov
subl
adcl
ret
mov
sbb
add
or
inc
mov
sub
pop
xchg
or
sbb
adc
sbb
or
and
inc
push
add
out
lret
mov
cmp
jbe
dec
inc
or
adc
adc
mov
jns
mov
ds
add
xchg
or
imul
cltd
and
or
push
in
dec
pop
or
das
pop
aaa
xor
loopne
xchg
jp
mov
sub
movsb
aaa
dec
sub
inc
addr16
inc
in
jl
fildl
out
pop
inc
sahf
int3
es
lret
pop
mov
int3
xor
or
dec
mov
out
repz
xchg
pop
int3
pop
lcall
jge
mov
iret
xchg
mov
mov
cmp
xchg
outsb
repnz
iret
movl
xor
lahf
mov
shlb
bound
int
xor
push
fwait
scas
call
mov
pop
lahf
pop
dec
andnps
imul
sti
loopne
aaa
pop
pop
aam
scas
lret
sbbl
idivb
dec
or
stos
push
in
jnp
int
es
push
mov
fwait
outsb
inc
shlb
hlt
push
cs
sarl
push
cli
clc
ja
js
sahf
cmpsl
stc
cmp
sub
dec
movsw
fwait
iret
lds
pop
mov
cmp
insb
mov
aam
adc
idivb
or
mov
out
scas
xchg
mov
push
sbb
inc
int
mov
jns
out
push
imul
mov
cmpsb
out
push
sub
cmpsl
inc
cmp
push
mov
lret
xchg
insb
jge
push
cmp
notl
adc
cmpsl
dec
fldt
mov
mov
fwait
dec
repz
or
test
fnstcw
push
add
es
stc
lret
repz
push
int3
fmulp
fs
mov
lahf
stc
mov
jnp
jbe
xchg
les
jle
repz
outsl
mov
cmp
dec
jg
jo
mov
ja
out
inc
sahf
shll
push
out
xor
adc
cmpb
sahf
mov
repz
jns
out
movsl
vunpcklps
fs
mov
sahf
fsub
std
sbb
repz
mov
inc
mov
or
aad
inc
cld
jg
dec
sbb
scas
sub
adc
jg
xor
rcrb
push
push
mov
xor
adc
pop
inc
xlat
add
mov
and
push
mov
loopne
dec
pop
cmc
idivb
adc
sarl
hlt
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
add
and
loop
mov
pop
inc
mov
addr16
out
fildl
popa
scas
aas
inc
push
fstpl
and
insl
daa
inc
in
sti
add
sbb
or
aaa
fisubrl
jo
imul
mov
dec
fisubl
pop
push
into
test
das
divb
aam
out
add
dec
inc
dec
je,pn
jbe
cmp
pop
push
jnp
push
xorps
cmpsb
push
insb
pop
push
dec
pop
ret
mov
aam
or
push
filds
in
fisttpll
jp
das
push
sarb
mov
outsb
push
inc
imul
into
ror
pop
retw
or
or
dec
add
test
sbb
aam
in
adc
das
cmc
int3
nop
cmp
in
push
push
xor
push
ds
and
popa
insl
jo
lahf
mov
insb
je
push
addr16
jo
fists
mov
jne
and
cmp
insb
adc
and
cmpsb
mov
or
xor
xor
xor
xor
stc
xor
cmp
cmp
and
xor
push
xor
xor
cmp
in
dec
lcall
inc
and
xor
dec
cltd
sub
or
or
pop
and
js
adc
add
or
adc
add
add
dec
mov
pop
dec
addps
jle
test
or
repz
ss
pop
daa
pop
sbb
movsl
pop
xlat
sub
dec
sarb
xchg
aas
push
sub
bound
cli
outsb
arpl
aas
pop
testb
dec
add
add
dec
dec
dec
add
mov
push
or
and
push
or
and
xor
outsl
push
sahf
addr16
or
ds
or
dec
inc
ds
mov
add
xor
arpl
pushf
cmpsb
xor
daa
pop
dec
nop
or
sbb
out
mov
pop
sbbl
test
jge
jbe
or
sbb
test
pop
aaa
loop
xor
call
sahf
out
imul
sbb
sahf
out
inc
push
andl
loop
jle
xchg
push
cltd
or
ss
in
roll
add
add
fldcw
pop
or
cmp
jns
adc
sub
xor
sahf
int
sbb
push
mov
mov
fwait
insl
mov
rorb
data16
insb
sub
das
or
xor
int
pop
adc
pop
add
sub
adc
push
push
dec
mov
insb
str
add
int
and
das
incl
outsb
ja
gs
jmp
test
cmp
push
adc
sbb
pop
push
nop
insb
das
push
sbb
pop
sub
sub
aaa
push
sbb
mov
inc
aas
daa
xchg
shlb
xor
fcomps
push
enter
inc
and
nop
aad
cmp
shll
ds
and
sub
daa
and
add
jo
iret
inc
imul
aaa
test
mov
inc
bound
aaa
add
insb
lahf
jbe
insl
xor
sbb
sbb
mov
stos
pop
pop
jno
bndstx
push
lods
daa
jge
les
les
das
push
sbb
push
divl
and
sub
iret
lret
adc
mov
lock
gs
ret
mov
push
jno
movaps
das
popa
lds
ss
pop
xchg
sub
adcb
push
pop
and
mov
les
rcrl
adc
repnz
push
adc
push
or
arpl
mov
rolb
adc
mov
aaa
adc
mov
add
pop
cltd
daa
lahf
sbbb
outsl
pop
xchg
outsb
adc
pop
adc
int
add
sbb
stos
pop
jg
movsl
jno
andb
arpl
add
outsb
mov
mov
stos
mov
add
mov
aaa
outsl
lret
xor
push
cmp
jle
push
sub
xchg
loopne
jnp
adc
out
stos
test
xor
jl
jl
xchg
and
stos
dec
imul
mov
test
push
cmp
xlat
and
ds
jo
sbb
daa
dec
js
xchg
fisttpl
es
mov
sarb
sub
cwtl
add
add
cmp
aas
loope
inc
push
inc
orb
fsubrs
or
push
or
sbb
es
mov
inc
cmp
das
loop
roll
out
pop
xor
adc
shlb
movl
cmp
jne
sub
add
push
jae
fdivr
das
daa
adc
bound
es
fsts
inc
addr16
lock
dec
push
push
dec
or
or
push
pop
and
xchg
inc
fdivs
xchg
sbb
adc
mov
or
push
push
jnp
sub
das
adc
mov
adc
or
outsb
pop
mov
les
cmp
add
testl
pop
aas
mov
xor
mov
ljmp
icebp
mov
ret
xchg
pop
push
jb
ret
add
pop
dec
dec
sub
add
gs
into
call
and
push
aas
call
sbb
aam
jae
push
int3
aas
imul
add
and
loop
mov
arpl
inc
cmp
notb
sbb
cli
or
dec
daa
fs
xorb
scas
adc
dec
mov
dec
push
inc
daa
push
popf
or
push
mov
popf
adc
ds
push
lret
std
and
mov
inc
dec
sub
push
loope
push
mov
mov
popa
int
les
or
pop
ss
dec
test
cmp
or
fcoms
cltd
add
pop
xor
pushf
clc
sarl
inc
test
adc
xor
xor
xor
ds
data16
dec
inc
lret
inc
lock
mov
inc
pusha
cmp
or
xlat
sbb
outsl
ret
test
clc
jno
xchg
or
cmp
cmp
filds
xor
cwtl
fstps
xor
adc
mov
push
or
or
add
pop
xorb
or
imul
pop
out
lds
adc
xor
adc
cmpl
aaa
xchg
xor
adc
push
inc
in
cmp
push
xchg
add
sbbb
and
jae
pop
pop
cs
jno
adc
sbb
cmp
pop
xor
pmuludq
je
inc
and
push
jmp
sub
fcmovnb
pusha
std
movsl
xor
jb
jo
popf
nop
inc
cli
inc
jo
insb
in
jbe
call
pusha
jbe
cs
add
push
ss
jae
outsl
rorb
sub
ficomps
push
push
add
push
sbb
popf
test
add
cmp
inc
das
das
pop
xor
push
lcall
jo
dec
sub
cmp
adc
pop
push
and
aas
pop
push
inc
pop
cmp
sub
lcall
xor
or
add
pop
inc
inc
add
push
adc
sub
das
push
sub
xor
push
cmp
push
mov
aam
pop
sub
push
xor
inc
mov
push
push
and
sub
and
push
inc
sub
ja
fistl
and
adc
and
xor
xchg
mov
dec
inc
out
cli
inc
inc
push
pop
push
push
ds
pop
ss
pop
pop
and
aas
cmp
and
aaa
fisttps
or
or
add
xor
sbb
aas
sub
sbb
sbb
adc
pop
xchg
dec
ret
xchg
and
and
push
mov
ret
test
or
dec
lds
pop
mov
adc
adc
sbb
and
sbb
and
mov
dec
aad
push
sub
cmp
adc
mov
push
dec
loopne
and
cmp
adc
push
and
xor
and
clc
push
inc
stos
mov
stos
mov
push
push
dec
fstl
rolb
cltd
cs
inc
das
dec
and
mov
push
mov
xchg
push
mov
sbb
push
sbb
dec
sub
add
pop
push
pop
call
jb,pn
xchg
sbb
lods
add
jns
or
lahf
loope
dec
xor
inc
push
sbb
icebp
dec
inc
dec
push
sbb
xor
mov
xchg
mov
sub
xchg
lock
jmp
push
cmp
sbb
xor
adc
dec
inc
mov
dec
xor
push
adc
inc
repnz
inc
addr16
ja
fistpll
aaa
pop
sbb
daa
pop
daa
pop
pop
inc
push
cmp
cmp
jg
fwait
lock
es
pop
pop
xor
or
cwtl
das
mov
test
sti
shlb
cmc
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
call
scas
adc
jge
push
je
mov
andb
fwait
shrl
inc
imul
addps
sub
ljmp
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
nop
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
call
push
sbbl
int
pop
ss
inc
xor
es
dec
push
jnp
sub
decl
or
sub
cmp
sub
push
fs
sub
xor
daa
das
push
jb
cs
outsb
pop
aas
sbb
xor
and
jecxz
stos
jge
imul
sub
or
dec
dec
xor
mov
and
aaa
push
xor
ds
push
pop
xor
xor
xlat
popf
mov
cmp
inc
pop
inc
inc
mov
jbe
xor
inc
cs
inc
ss
cmovb
pop
xor
pop
cmpsl
ss
fisubs
adc
imul
mov
sbb
popa
mov
outsb
loopne
lock
adc
add
lret
mov
sub
enter
push
or
bound
inc
pop
outsl
inc
or
push
jle
jno
lock
adc
out
mov
dec
mov
sub
push
aam
add
xchg
fnstcw
mov
sub
mov
xor
js
bound
push
sahf
aaa
push
adc
xor
cmp
lcall
cmp
push
sbb
mov
add
ss
xor
frstor
xor
jmp
enter
testl
xchg
ja
adc
mov
sbb
arpl
lods
cltd
add
cmp
mov
sbb
loopne
mov
xor
adc
sahf
mov
or
adcb
pop
and
out
and
pop
dec
lret
jg
mov
rcll
daa
push
push
cmpb
and
sbb
adc
nop
push
add
add
push
mov
leave
cli
jbe
cs
aam
int3
sub
inc
lock
pop
dec
outsb
aas
jnp
in
dec
mov
jmp
sub
inc
jo
add
aam
loope
mov
jne
adc
or
insb
cmp
or
insb
sahf
and
mov
adc
add
pop
xchg
adc
aas
aad
sub
push
push
test
into
outsb
inc
lods
fildll
je
xor
fwait
inc
into
pop
js
xor
jae
popa
test
jbe
gs
cmp
ret
inc
and
adc
jo
push
inc
aad
mov
sub
xor
insl
loop
xor
loop
push
ss
neg
mov
lods
dec
mov
insb
dec
push
popa
je
jecxz
andb
xchg
insl
mov
inc
and
push
pop
adc
adc
notb
inc
add
xor
clc
push
gs
pop
cmp
popf
movsb
fcmovnu
cmp
pop
xor
movsb
dec
in
sbb
aaa
dec
dec
les
xor
je
adc
cmp
ss
push
or
cmpsl
scas
and
jae
cmp
rcl
cmp
out
xor
push
mov
stos
ds
jecxz
ds
fs
ss
push
lcall
sub
inc
lret
loopne
je
pop
pop
ja
and
scas
and
adc
sub
dec
cmp
rorb
fs
aad
cwtl
ds
popa
dec
lcall
ja
jb
pop
repz
aas
mov
pop
inc
jne
sub
push
enter
outsl
xor
mov
fs
push
fcmovnbe
lds
inc
or
pushf
or
imul
mov
sbb
xor
insl
pusha
adc
pop
push
push
cmp
sbb
or
insl
mov
aaa
daa
lret
pop
xor
push
fs
jo
sub
or
jo
mov
imul
insb
xchg
mov
imul
pop
adc
mov
mov
adc
pop
aas
in
adc
imul
test
sbb
into
scas
pop
adc
fwait
dec
and
data16
imul
test
sbb
inc
sbb
xchg
mov
cmp
dec
mov
push
sarb
inc
push
fidivrl
pop
lret
adc
dec
mov
cmp
cmp
push
xchg
mov
sub
lods
pop
add
jg
sbb
ja
out
add
iret
scas
pop
js
sub
add
into
lds
inc
sub
mov
push
mov
or
inc
dec
xor
adcl
add
sbb
jb
arpl
pop
pop
aas
push
jp
pop
xor
int
fiadds
pop
pop
dec
adc
xor
pop
xchg
es
fcomps
dec
pop
dec
mov
and
pop
movsl
orl
mov
mov
pop
cs
aam
orl
cmpsl
mov
aam
sarl
push
xor
push
pop
std
xor
pop
inc
nop
repz
xchg
subb
pop
inc
popf
push
add
test
add
add
and
aas
cs
adc
and
nop
or
jnp
out
inc
and
inc
in
add
jns
or
add
cmp
andb
push
jns
jne
movsl
shlb
lods
push
pop
xchg
mov
jg
popf
pop
dec
and
addr16
popa
push
dec
dec
sbb
push
jmp
outsl
and
setb
insb
mov
inc
cmpsb
punpckhwd
pusha
mov
push
je
scas
pop
add
dec
sub
pushl
jecxz
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
jmp
dec
xlat
jb
gs
sbb
add
inc
push
fwait
pusha
rorl
daa
dec
jo
popf
loopne
dec
jb
jb
inc
sbb
aas
dec
mov
pusha
lcall
loop
adc
mov
or
mov
mov
mov
lahf
add
xchg
push
xorl
nop
rolb
push
adc
adc
push
stos
jecxz
rclb
xor
or
or
jp
push
enter
sarb
xchg
cmp
push
add
and
pop
mov
dec
gs
xchg
jp
add
test
inc
sete
enter
add
fmuls
jmp
add
xlat
and
adc
lahf
jne
ret
int3
in
stos
sbb
addb
push
popa
add
adc
dec
aaa
adc
sbb
pop
pop
dec
sub
mov
arpl
insl
adc
adc
dec
insl
or
lods
mov
outsl
mov
fistps
mov
xlat
mov
mov
jno
fistpll
sub
inc
mov
aad
cmp
and
shlb
add
jns
mulb
std
lcall
rolb
inc
das
fsubrl
pop
bound
orb
xchg
mov
shll
cmc
inc
das
xor
mov
inc
cmovo
push
adc
sbb
mov
nop
jo
maxps
dec
xchg
adc
pushf
fadds
das
adcb
push
inc
out
xlat
lea
cmp
aas
add
test
addr16
repz
movsb
sub
daa
add
push
mov
mov
dec
push
fs
inc
add
pop
ror
cmpsl
ficompl
jae
lahf
add
pop
dec
repz
sbb
rcrb
test
rclb
sub
pop
sbb
adc
daa
aas
jg
leave
lods
stc
jbe
outsl
mov
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
xchg
xlat
mov
popf
ficomps
push
pusha
xchg
push
in
push
enter
repz
gs
rcrb
pop
fdivrs
out
pop
push
cmp
fdivp
cmp
lods
pop
sahf
nop
pop
pop
pop
pop
ds
out
out
pop
pop
pop
push
cmp
sarl
add
pop
or
pop
lcall
pop
push
push
repnz
in
push
add
add
or
mov
dec
inc
mov
jnp
adc
hlt
imul
fsubrs
add
leave
add
add
aam
scas
sub
outsl
idivl
push
push
nop
fsub
pusha
push
outsl
pop
leave
mov
add
push
cmp
jl
ja
lods
adc
and
xor
sbb
xchg
dec
repnz
push
mov
outsl
sub
fs
dec
inc
lock
add
pop
pop
das
push
fs
or
add
repnz
xchg
inc
or
inc
leave
jae
pop
enter
in
outsl
outsl
cmp
mov
sub
cmp
and
pop
dec
dec
jb
push
xchg
pop
scas
push
adcb
leave
mov
outsl
out
cmp
mov
daa
int
pop
pop
lods
xor
mov
sub
je
cmp
bound
add
cmp
out
pop
leave
push
lods
pushl
enter
pushf
xor
test
enter
aad
sub
mov
ss
movsb
fs
repz
sub
rcrb
test
lock
xor
mov
ret
push
lahf
mov
add
jbe
pop
leave
add
and
pop
leave
adc
popa
xchg
sub
sub
out
xchg
mov
test
push
xchg
mov
rcr
outsl
add
inc
outsb
push
xor
outsl
and
or
dec
push
nop
sub
and
jnp
sbb
push
dec
xchg
fsubs
pop
outsl
out
fsubrl
sbb
add
or
mov
or
xor
pop
push
aaa
addr16
stos
sub
sbb
push
dec
pushf
pusha
outsl
sbb
pop
sub
fs
push
xor
add
push
repnz
cmpsb
lahf
mov
inc
clc
push
movsb
popa
push
push
xor
imul
clc
push
mov
scas
int3
xchg
into
fsubl
or
mov
cli
dec
ficoms
add
inc
jbe
mov
jb
dec
popa
pop
popa
mul
add
mov
sub
lds
cwtl
outsl
push
push
outsl
rorb
inc
pop
cmp
xchg
daa
testl
clc
popa
bound
sub
rorw
lahf
and
push
aam
loopne
into
mov
push
int3
popa
fimull
mov
jb
jmp
bound
lahf
xlat
or
xor
scas
call
out
iret
stos
pop
in
add
xlat
or
cmp
andb
arpl
or
lahf
xchg
xor
adc
test
and
add
testl
and
add
push
repnz
add
fs
faddp
scas
cmp
rolb
fs
cmpsb
xchg
or
mov
aaa
sbb
add
sub
mov
mov
add
add
xor
clc
or
xchg
cmp
and
xchg
pusha
mov
addr16
scas
in
pop
add
stos
jne
mov
add
fsub
mov
jae
pop
jb
in
cld
rorb
add
add
sub
idivl
je
cmp
in
leave
mov
add
push
lods
pop
cmp
dec
adc
push
popw
shlb
cmp
push
in
aaa
add
movsb
or
fs
mov
cmpsb
cmp
mov
xor
push
sub
add
or
daa
dec
sub
lahf
or
add
imul
push
pop
jl
push
sub
imul
stc
cmp
hlt
push
and
aas
dec
push
add
popf
xchg
sub
or
or
mov
lods
fs
xchg
push
in
pop
or
movsb
pop
test
lcall
dec
adc
xchg
shl
xchg
sub
add
loopne
mov
imul
scas
lret
mov
or
add
push
out
mov
add
pop
push
andb
enter
out
addr16
aad
jecxz
or
add
jns
pop
add
push
adc
les
or
es
sbb
cmp
xor
xlat
pop
leave
jae
inc
addr16
xlat
repz
sbb
daa
sub
rcl
pusha
dec
nop
cmpsl
mov
out
mov
push
sub
ss
mov
or
imul
imul
inc
xor
inc
or
pop
dec
inc
daa
jbe
insb
outsl
movsb
xor
mov
outsb
inc
scas
push
push
pop
addr16
ucomiss
pop
or
pop
das
push
test
cmpl
ss
addr16
adcb
xchg
or
and
int
fldt
push
pushf
inc
add
lcall
adc
jl
out
dec
jo
rorl
repz
shrl
push
js
scas
repz
outsl
cmp
outsl
cmpsl
stc
cmp
nop
mov
pop
jo
dec
repz
xchg
shl
jno
lahf
out
adc
xchg
pop
jae
iret
repz
push
jae
ret
jns
out
jmp
mov
loope
jne
jbe
leave
repz
out
pop
ja
xchg
mov
imul
js
leave
out
repz
sti
cmp
mov
ds
repz
insb
pushf
rclb
jnp
sarl
insb
xchg
or
stc
cmp
mov
repz
cmpsb
shr
pop
jle
std
lahf
out
ds
jg
lods
fistps
cmpb
repz
mov
ds
imul
cmpl
out
dec
mov
test
imul
sub
jl
xchg
rcrb
inc
fwait
enter
cmp
inc
int
stc
cmp
sbb
lcall
sbb
jecxz
lea
ja
cmpsl
stc
adc
push
dec
repz
jns
in
nop
lahf
or
mov
mov
icebp
mov
rcr
push
xchg
mov
popa
xchg
jns
iret
rcrl
lock
cmp
repz
cwtl
imul
cltd
test
lcall
loope
fwait
xchg
cmp
inc
popf
jb
enter
out
or
pushw
cmpsb
sarb
sarl
nop
xor
fistpll
mov
mov
movsb
repz
cmpsl
ja
xor
jns
iret
iret
adc
mov
sub
push
clc
jl
cmpsl
stc
sub
stos
imul
movl
int
mov
lea
out
lods
dec
ficoms
scas
mov
jns
out
scas
jo
repz
aad
mov
push
call
out
jl
mov
lcall
stc
xor
std
mov
dec
repz
mov
imul
inc
roll
ret
jmp
iret
sarl
jno
pop
les
int
lds
sarl
in
inc
movb
mov
mov
loopne
push
int3
jo
int
insb
lahf
ja
push
ret
mov
sahf
adc
in
jns
addr16
shlb
fadd
clc
sbb
inc
das
add
out
rorb
jmp
adc
out
cmp
sub
outsl
pop
mov
outsb
mov
cmp
out
ja
add
in
fistpll
add
pop
paddq
push
adc
test
inc
mov
ss
call
leave
mov
fistl
mov
push
sbb
and
in
jae
mov
push
adc
scas
jbe
scas
outsl
or
sti
shlb
ror
or
addb
fnsave
cmp
mov
pop
ja
mov
cmp
outsl
cmpsl
push
adc
sub
js
leave
inc
jb
scas
into
je
js
in
adc
fmuls
outsb
xchg
pop
inc
jl
push
fildll
ss
xchg
sbb
mov
imul
in
addr16
fst
mov
jno
jg
iret
ror
insl
cmpsl
nop
fimuls
ss
mov
xchg
mov
out
out
sub
out
aaa
jb
fxch
iret
out
gs
push
jp
add
repz
push
inc
jmp
mov
mov
mov
push
inc
inc
popl
leave
dec
repz
jbe
or
inc
mov
inc
pop
add
sub
hlt
adc
daa
cmp
testl
fisubrs
lahf
mov
jb
ja
sbb
cld
pop
xor
rcrl
push
inc
mov
mov
sbb
les
ss
outsl
push
je
adc
aas
push
lock
cmp
inc
inc
inc
jg
dec
pop
jns
inc
pop
sbb
mov
cmp
push
push
aas
orl
sub
jns
pop
mov
sub
addb
sub
iret
cmp
add
roll
push
outsl
les
movsb
sub
jb
jns
jns
jns
xchg
sbb
scas
fisttpll
cld
cwtl
inc
jp,pn
jns
jp
push
sub
push
out
dec
repnz
push
and
inc
je
fs
sub
jg
push
loop
movsl
mov
mov
ja
leave
fdivrl
push
add
sarl
leave
xchg
dec
dec
es
jnp
hlt
cld
pop
leave
and
add
dec
daa
in
jns
push
add
mov
adc
and
gs
and
and
adc
daa
xor
xchg
add
xchg
cs
mov
inc
pushf
pop
jb
aam
in
loope
test
inc
push
out
outsb
inc
int3
gs
outsl
add
lahf
xchg
pop
jg
jge
sbb
dec
or
movsl
xchg
jge
adc
outsb
push
rcrl
pushf
mov
add
lods
xor
mul
push
aad
xchg
jge
xor
fsubr
outsb
xchg
jle
push
daa
xor
aad
js
xchg
pop
and
mov
or
cs
rol
loopne
repnz
mov
jg
jg
dec
and
jg
outsl
inc
cmp
in
imulb
jo
push
add
idivl
repz
add
iret
repz
pop
inc
or
and
jo
in
and
arpl
in
jns
sti
add
inc
scas
inc
or
sbb
leave
dec
cmpb
lahf
xchg
out
lods
movb
add
fistl
enter
mov
jno
or
jno
repnz
mov
jno
add
fmulp
leave
leave
inc
dec
push
pop
cmpsb
add
xchg
out
gs
xchg
xchg
sahf
cmpsb
xchg
pushf
pushf
pushf
scas
mov
mov
icebp
and
sahf
pushf
stc
add
jb
ja
leave
loopne
push
sysenter
outsb
mov
add
pop
inc
cmovl
fstpl
pop
mov
xor
pop
mov
movq
scas
jb
mov
add
jb
xchg
out
iret
out
add
rorl
sbbl
sbb
orl
pop
leave
push
orl
mov
rolb
add
outsb
jae
pop
ja
leave
in
mov
cwtl
push
addb
iret
sbb
jne
test
cltd
inc
dec
jg
test
lods
test
je
fcomps
nop
sbb
nop
mov
inc
sbb
add
daa
and
sbb
xchg
dec
je
sbb
rcll
addr16
je
es
xchg
test
pushf
lods
mov
add
mov
jb
dec
nop
sti
mov
shlb
hlt
iret
adc
out
dec
pop
xor
dec
xchg
jne
in
daa
inc
jne
jne
in
in
jne
jne
jne
jne
jns
in
jne
push
or
sahf
cmpsb
or
sahf
out
push
rorb
fucom
jns
out
call
sarl
adc
adc
adc
daa
push
xor
iret
repz
cmpsl
jbe
fisubrl
xchg
sbb
push
mov
xchg
mov
in
dec
repnz
emms
addr16
jmp
inc
cmp
ja
push
ja
dec
mov
sub
fistpll
jb
mov
cmpsl
lret
jbe
lods
xchg
scas
pushf
daa
mov
decl
movb
mov
lock
mov
ss
mov
js
push
pushf
out
aam
js
push
add
xor
js
js
pop
and
mov
mov
push
lods
mov
dec
mov
or
in
inc
inc
pop
jp
inc
or
mov
lahf
pop
out
add
out
lahf
daa
insb
sbb
mov
push
jl
daa
xchg
xchg
pushf
xor
mov
test
jo
das
dec
sbb
aas
rclb
inc
fisttps
decl
pushf
out
cmp
daa
xor
sub
insb
mov
cwtl
xor
and
pop
and
lock
xchg
pop
xchg
sbb
mov
cs
dec
dec
clc
in
das
xchg
je
jnp
inc
jnp
in
fwait
mov
mov
add
xchg
adc
in
daa
nop
lea
dec
ja
push
psubb
lock
ja
test
jl
mov
into
aas
sub
dec
rolb
lea
cmp
mov
sub
dec
mov
leave
orb
cmp
xchg
xchg
jl
jl
jge
add
xchg
inc
jge
jge
dec
cs
mov
push
cmpb
lea
inc
in
xor
cli
or
frstor
push
iret
cwtl
push
jb
mov
pop
loopne
enter
shrb
pushf
cmpb
nop
mov
and
inc
jle
addr16
adc
jle
jne
jge
jns
jns
test
jle
jle
jle
jns
jns
jle
jle
jle
jle
jns
jns
jle
jle
jle
jle
jbe
jns
jle
jle
pop
daa
daa
daa
push
or
daa
daa
or
or
daa
daa
daa
daa
push
add
daa
daa
add
xchg
jns
cmp
and
sbb
imul
cmpsl
cmp
daa
cmpsl
dec
jg
xchg
cltd
dec
ds
push
add
xchg
xchg
cs
inc
iret
inc
cmp
dec
xlat
ja
ja
cmpsb
jecxz
cli
adc
scas
jne
ss
loopnew
and
add
fldt
enter
addb
repnz
mov
insl
in
xorb
and
insl
xchg
push
add
rclb
es
sbb
pop
xor
stos
jp
ja
cmp
enter
jne
jg
push
mov
and
xchg
push
jns
dec
dec
xchg
lahf
dec
or
mov
or
outsb
fisttpll
iret
das
scas
push
cmovle
add
mov
push
inc
aas
fmuls
push
pop
stos
addl
jg
or
sbb
xchg
dec
ja
pop
xchg
ds
daa
and
xchg
das
repnz
add
or
add
and
in
sahf
add
subb
adcb
and
cmpb
jbe
xchg
dec
dec
cs
jmp
pop
icebp
jle
stc
add
aaa
or
pop
adc
out
xchg
inc
push
add
add
addl
mov
andl
pop
sahf
enter
pushf
pushf
fdivrl
test
jns
inc
adc
pop
push
push
sub
xor
jns
out
or
popa
or
pop
mov
jp
pmulhuw
sub
cs
out
lock
in
ret
dec
clc
xchg
cmovo
pop
test
imul
iret
in
jns
addl
leave
repz
fwait
pop
ret
decl
dec
push
loopne
push
and
inc
call
dec
ds
fisttpl
sub
inc
pop
ss
cmp
out
and
dec
inc
test
xchg
je
nop
mov
add
int3
cltd
mov
das
or
xlat
ljmp
daa
sahf
xchg
daa
iret
add
sbb
in
dec
sub
iret
lock
divb
jb
xchg
xchg
movups
or
enter
pop
pusha
lcall
adc
lcall
add
mov
jae
jle
lea
cmp
jbe
push
lock
clc
add
enter
mov
mov
mov
and
iret
in
xor
mov
dec
xchg
lcall
out
fwait
add
adc
loopne
mov
jns
xchg
and
sub
shlb
xchg
mov
addr16
leave
inc
mov
fbld
loopne
mov
ret
mov
mov
das
das
das
jecxz
out
mov
mov
repz
adc
in
fldenv
mov
mov
jb
mov
insb
mov
xchg
xchg
and
mov
sahf
andl
in
in
rcr
out
repnz
repnz
or
mov
mov
mov
leave
out
decl
cmp
xchg
mov
addr16
inc
repnz
loopne
cmp
pop
into
comiss
add
add
je
mov
sgdtl
lahf
sbb
jb
pop
mov
iret
mov
cs
add
lret
rorl
inc
shr
push
mov
cmpsl
aas
lea
and
pop
mov
insl
lea
pop
scas
lea
pop
cmp
sub
cmp
pop
sahf
add
cmpsl
jecxz
push
lea
enter
lahf
mov
lcall
verw
inc
jbe
pop
mov
outsb
das
jbe
mov
jle
or
or
xchg
mov
andb
leave
inc
jnp
ficompl
ja
xchg
dec
jb
add
jns
sahf
ja
data16
add
arpl
outsb
xchg
xchg
mov
ja
pushf
jl
sahf
andl
mov
aad
dec
cmp
mov
or
jp
sub
inc
nop
daa
dec
nop
arpl
cmp
nop
mov
jl
nop
cmpsb
mov
lret
xchg
or
mov
add
mov
pop
repz
push
cmp
ds
nop
add
in
pushf
es
outsl
cs
push
add
sahf
out
add
fimuls
jp
mov
xchg
pop
xchg
data16
mov
outsb
xchg
jbe
or
xchg
push
or
leave
lods
or
or
or
leave
leave
leave
pop
push
add
leave
add
sbb
repz
sbb
cmp
sbb
into
in
jmp
fsubp
jns
out
and
and
mov
sub
jbe
and
and
addr16
popf
mov
gs
stc
lock
push
mov
fisttpll
add
sahf
xchg
ja
push
jo
cmpsb
aas
ror
popf
fmull
add
jmp
mov
mov
xchg
cmp
sbb
pop
xor
cmp
scas
inc
bsf
cs
xchg
pop
ds
cmp
repz
or
jo
cmp
jbe
pop
jo
repz
xchg
xchg
mov
rol
enter
mov
ja
cmpsb
xchg
cmpsl
xchg
iret
repz
dec
xchg
adc
add
add
repz
add
add
testl
ffreep
mov
jo
js
adcb
mov
mov
insb
ss
or
das
leave
out
cs
scas
fabs
jae
fmuls
outsl
daa
inc
mov
or
or
in
repnz
test
xchg
xchg
xchg
push
das
sub
iret
xor
or
cmp
dec
dec
xchg
push
xchg
cmp
add
xlat
mov
push
jb
sub
test
movsb
test
loopne
jbe
fnstsw
call
iret
stos
call
xchg
inc
dec
repnz
fmulp
leave
push
pop
pushw
add
jns
jg
mov
nop
add
dec
pop
xchg
rolb
in
in
loopne
push
daa
and
pop
outsl
mov
xchg
out
stos
fnsave
mov
pop
push
leave
xchg
pmaxsw
push
pop
sub
pop
cmp
push
xchg
jb
inc
dec
push
jl
test
xchg
xchg
dec
dec
dec
cs
fsubs
lret
rorl
add
ds
xchg
out
mov
adc
dec
dec
rcll
lods
faddl
pushf
dec
cwtl
push
cwtl
pop
punpcklwd
cmp
repz
jno
iret
leave
leave
leave
jns
mov
cmp
or
jns
mov
mov
jns
rcll
adc
lods
nop
out
flds
sbb
cld
cwtl
adc
insl
sbb
add
xor
mov
pop
mov
or
jo
and
jmp
xor
jge
add
lahf
mov
pop
outsl
int
fcomps
add
push
ltr
cltd
seta
add
fisttps
lcall
and
or
inc
scas
arpl
jb
cmp
mov
daa
sahf
pop
cmpsb
add
push
ja
lcall
fsts
pop
lea
fwait
or
adc
push
je
push
fistps
aaa
cltd
popf
dec
aas
fwait
lahf
dec
add
popf
jl
push
pusha
packssdw
xadd
lods
jbe
orl
jg
pop
in
imul
sbb
pop
push
mov
fsubrs
add
add
xlat
push
add
dec
aaa
jns
lar
cmp
out
out
fwait
negl
cmp
pushf
pfrsqit1
xchg
iret
enter
jo
push
pushf
in
jbe
or
pushf
arpl
imul
repz
jae
jnp
subl
jns
sysret
mov
out
pop
mov
mov
mov
out
mov
adc
repnz
rcll
pushf
adc
or
leave
sbb
out
ficomps
push
add
add
add
xchg
and
popf
aam
into
popf
xchg
pop
bound
fnstcw
dec
add
mov
dec
sahf
pop
push
add
mov
xchg
popf
or
add
pop
add
inc
out
repnz
push
out
mov
mov
out
mov
jecxz
notb
add
mov
sahf
pop
mov
lret
dec
pop
xor
imul
sahf
sahf
xchg
mov
outsl
xchg
sahf
sahf
or
and
negl
sbb
fstl
mov
xlat
pop
cld
mov
sahf
mov
jb
sahf
add
cmp
repz
and
add
cmp
repz
inc
or
iret
repz
pop
or
jno
cmp
repz
or
sbb
hlt
popf
lahf
test
mov
adc
dec
cmp
push
add
and
and
xchg
das
pop
mov
cmp
mov
sbbb
add
push
mov
popa
push
mov
mov
cmp
divl
cs
das
mov
daa
daa
loop
repnz
cmp
lds
push
pop
add
lea
mov
pop
sub
fisttps
mov
daa
aaa
dec
mov
push
jo
daa
mov
int3
lock
mov
mov
cmp
mov
pop
jo
ja
mov
mov
daa
call
add
jo
ja
mov
add
and
repnz
mov
mov
pop
inc
inc
cmpsb
inc
lahf
mov
inc
inc
mov
push
je
jae
jp
enter
fucomi
sarb
ror
ljmp
out
or
adc
jb
push
mov
cli
mov
sbb
and
cmp
xchg
out
inc
dec
adc
mov
out
pop
push
bound
jb
leave
mov
xor
xchg
mov
out
mov
lods
pop
femms
push
fs
and
mov
pop
cmpsl
call
outsl
loope
and
movsb
pop
push
pop
mov
aad
pop
adc
leave
repz
sub
or
mov
js
xchg
xchg
lahf
lock
movsb
daa
pop
movsb
movsb
outsl
ficoml
movsb
mov
xchg
jo
dec
dec
lcall
jns
movsb
mov
pop
cmpsb
jae
out
or
ret
xlat
jae
pop
insb
insl
inc
pop
addl
pop
rclb
mov
mov
jns
pusha
mov
cmp
std
add
cmp
cmp
and
lar
mov
movsl
mov
movsl
movsl
ja
lods
leave
jae
dec
or
call
cmpsb
scas
cmpxchg8b
iret
adc
xchg
mov
xchg
cmp
mov
xchg
add
in
and
xor
call
fildl
xchg
jo
mov
cmp
add
daa
pop
leave
cld
loopne
inc
dec
je
xor
dec
rcrl
cmpsl
lahf
fs
cmpsl
ja
cmpsb
into
sub
jo
out
lods
rcr
pop
lsl
cmp
or
pop
pop
fisubs
popa
sub
jl
push
mov
dec
xchg
sub
out
test
add
jns
sbb
and
sbb
add
push
sub
xor
dec
movsb
fldt
test
aas
pop
pop
ud2
repz
push
repz
pop
js
sbbb
lock
daa
nop
push
sbb
aam
das
push
idivl
jl
mov
mov
mov
repnz
mov
pop
ja
in
jo
pop
push
jg
sbb
jno
cmpsl
and
pop
add
enter
daa
xor
subb
push
lahf
xlat
cwtl
push
add
test
add
xchg
cmpsl
pop
mov
test
daa
or
lock
cmc
mov
stos
iret
sub
sbb
addr16
push
movsb
xchg
push
stos
stos
stos
daa
call
ja
cli
lea
rcll
mov
add
add
cmp
clc
clc
push
adc
das
and
daa
and
sub
movsb
cmp
insl
pusha
xchg
js
and
movsb
mov
leave
in
in
rorb
loope
inc
pop
push
add
jmp
out
repnz
lods
iret
or
repnz
add
or
and
xor
lods
enter
addr16
je
leave
jmp
fistpl
pop
lsl
les
lods
mov
ror
lret
fistpll
daa
iret
jae
add
add
les
pushf
dec
pop
lods
push
push
mov
jl
lods
cmp
lret
or
fwait
cmp
xchg
push
add
mov
stos
lods
js
lea
lods
mov
lods
in
xlat
pop
outsl
shrl
popf
in
mov
scas
or
mov
inc
daa
iret
repz
add
jns
out
push
add
daa
daa
fucom
jae
add
xchg
pop
mov
subl
push
dec
scas
scas
jns
pop
dec
das
enter
js
loopne
fsub
psubsb
lock
idivl
scas
add
jl
mov
or
bndstx
jne
mov
push
ja
in
mov
push
xchg
mov
cwtl
push
sahf
xchg
out
test
add
mov
jno
adc
adc
cmp
inc
mov
mov
mov
outsb
and
mov
jbe
repz
push
cmpsl
push
push
or
sahf
xchg
out
pusha
mov
mov
prefetch
ret
sbb
cwtl
mov
mov
iret
jae
mov
push
dec
sbb
add
pop
jb
jb
pop
movd
jns
jb
mov
repnz
sbb
pop
and
cmp
movsb
enter
cmp
sahf
fcomps
fidivs
in
adc
pop
cmp
jns
iret
repz
and
push
and
in
in
imul
push
loope
mov
sub
es
iret
sub
loopne
das
xchg
dec
rolb
mov
hlt
ss
or
mov
mov
xchg
pop
addr16
jae
cmp
mov
mov
mov
mov
or
dec
es
lret
loop
dec
dec
dec
lock
lcall
mov
cmp
inc
push
mov
mov
mov
cmc
fs
mov
jle
pop
repnz
sahf
mov
xchg
das
xor
iret
mov
add
mov
mov
shrl
pop
icebp
movsb
mov
jb
add
add
in
iret
mov
push
add
in
jle
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
das
das
aas
out
mov
shll
iret
repz
sbb
sbb
sbb
hlt
cmp
cmc
sbb
mov
jns
sbb
push
and
sbb
and
and
and
jns
out
and
out
sahf
out
sub
jb
rorl
sub
sub
sahf
xchg
pop
iret
mov
dec
xchg
mov
mov
mov
out
adc
pop
rolb
fdivrs
repnz
das
loopne
call
daa
pusha
int
or
and
sub
add
cwtl
pushf
je
cmp
add
ss
aad
or
int
setns
xor
dec
dec
cs
das
test
mov
rorb
repnz
and
push
pop
dec
dec
dec
dec
ja
popf
movsl
dec
sahf
out
shrd
mov
sahf
fcmovne
repz
adc
int
aad
mov
add
sti
aas
add
mov
pop
cs
in
repnz
insl
js
cmpb
in
nop
and
in
add
sarl
mov
popf
cmp
idiv
cmp
adc
mov
iret
jae
dec
push
xor
sub
fidivrs
fisubs
aaa
in
mov
mov
cmp
inc
repnz
icebp
fistpll
cmp
sbb
iret
in
and
rorb
add
mov
andb
test
aam
fcmovne
inc
loopne
mov
dec
and
ja
mov
xchg
mov
adcb
add
sahf
lods
add
add
mov
pop
fsub
or
bnd
outsb
ud2
stc
or
mov
bndldx
sub
xor
in
dec
adc
in
dec
sahf
adc
push
jne
dec
sahf
out
sbb
sahf
out
sbb
out
mov
pop
int
and
out
add
mov
movswl
mov
sub
xchg
iret
add
rolb
sub
pmaxub
push
out
mov
add
out
jns
enter
in
cmp
fsub
mov
ffree
fcomi
das
clc
mov
mov
or
adc
sbb
adc
xor
adc
sahf
outsb
repnz
add
popf
aaa
add
dec
sbb
push
popa
mov
bound
cmp
sahf
maxps
mov
inc
inc
sbb
orb
inc
testl
iret
divps
mov
add
xchg
fwait
aas
pop
inc
and
rol
or
xor
xchg
add
popf
cmp
out
out
psadbw
push
in
shll
inc
dec
outsb
movaps
sar
rorl
and
xchg
pop
fs
popf
pushf
fmull
insb
je
xchg
test
mov
rorl
adc
mov
mov
in
push
xlat
or
pushf
add
cli
add
scas
or
frstor
xchg
xchg
xor
sub
iret
mov
inc
add
in
jb
push
push
jo
addb
jb
stos
mov
pop
ret
xchg
out
jne
lret
xlat
roll
fstpt
clc
push
ret
xchg
and
push
ret
push
ret
push
ret
push
ret
cs
jmp
cmp
cmp
xchg
pop
leave
jae
mov
dec
outsb
xchg
pushf
movsb
add
cld
iret
xlat
in
in
jns
out
pop
cmpsl
jp
into
negl
lahf
pinsrw
loopne
dec
fdivrs
inc
into
fistpll
les
dec
push
add
jns
xchg
push
pop
add
cmp
jbe
pop
jp
or
cmp
movsl
imull
mov
mov
xor
pushf
pushf
dec
and
lock
leave
and
sahf
add
or
subb
pop
sub
xor
cmp
in
in
jns
pop
subpd
leave
outsb
jbe
jle
xchg
pushf
push
or
test
mov
mov
popf
pop
fsub
addr16
jb
stos
mov
out
dec
sahf
out
pop
pop
pop
add
das
or
in
add
xchg
fildl
aaa
jo
js
dec
and
add
mov
ljmp
iret
sub
or
clc
cwtl
scas
call
ja
dec
out
pop
dec
mov
in
je
insb
push
jg
das
das
jg
outsl
cwtl
mov
das
scas
mov
repnz
fisubrs
ficompl
outsl
lock
repnz
movl
enter
repnz
enter
enter
repnz
enter
enter
in
repnz
mov
xchg
pop
nopl
aas
sbb
pushf
pushf
pushf
pushf
sbb
push
adc
adc
mov
repz
mov
ror
repnz
push
xor
jl
xchg
inc
popa
fbstp
sarb
xchg
popf
psrad
cmp
jnp
repz
clc
cmp
add
iret
repz
push
cmp
cmp
repz
inc
cmp
idivl
repz
push
inc
pop
inc
fmulp
cmp
inc
jno
push
inc
mov
repnz
mov
leave
repz
fucomip
cmovg
and
push
or
iret
repz
push
push
and
dec
dec
outsb
pop
aaa
inc
dec
pop
cmp
in
pop
arpl
pop
outsb
popf
pushf
pushf
pushf
jns
lcall
lret
lock
enter
lret
mov
push
add
iret
sub
and
addr16
sbb
lret
sets
pop
mov
and
push
cmova
hlt
in
cmp
pop
inc
lret
dec
lret
leave
rep
and
pop
push
adc
fisubrs
pop
jo
js
sahf
pop
stc
addb
iret
repz
enter
push
dec
fcoms
adcl
inc
inc
sbb
sahf
out
inc
pop
sub
add
cmp
decl
mov
imul
loopne
push
daa
aam
sbb
cmp
pusha
cmp
fildl
push
sarb
jns
enter
shrb
cmp
iret
or
loopne
vmwrite
push
call
int3
adc
repnz
push
and
int
xor
lock
int
int
ret
into
out
pop
int
pop
push
and
shl
mov
test
fwait
mov
cmp
loop
in
mov
jg
hlt
fcmovne
fucomi
lcall
pushl
pop
pop
ds
pop
sub
ss
inc
into
jb
mov
pop
bound
jae
jb
orl
sub
adc
mov
sbb
sbb
sbb
sbb
dec
aaa
jns
nopl
pop
cmp
xchg
iret
adc
sbb
daa
iret
and
cmovns
out
outsl
pop
push
daa
push
das
subb
sub
loop
enter
enter
iret
loope
adc
add
sahf
iret
sbb
jg
test
inc
shr
ss
xor
cmp
bound
iret
repz
add
mov
syscall
or
rorb
scas
shrb
inc
into
scas
mov
pop
repz
rorl
adc
adc
adc
xchg
pop
iret
icebp
adc
cld
rolb
sarl
mov
adc
sbb
jmp
sbb
push
mov
push
pop
pop
mov
xchg
out
push
jne
push
and
sahf
ja
mov
out
jns
cmp
lods
roll
ret
repz
lret
add
pop
enter
roll
and
in
in
jae
push
ss
sarb
shlb
pop
xor
add
leave
repz
add
push
cmovg
cmp
pop
rorb
shrb
sahf
out
and
orb
mov
adc
jns
add
mov
out
dec
fcoms
add
mulb
cmp
movl
pop
pop
rorl
shr
mov
and
pop
jb
sbb
inc
ror
dec
rcll
inc
into
icebp
ss
lahf
ror
jno
jl
in
xchg
and
ror
out
jo
shr
sbb
out
and
push
rcl
aam
in
xor
aam
sbb
jnp
loopne
and
sub
jg
aam
enter
or
lock
aam
adc
cmp
lods
pop
invd
sbb
jae
xlat
test
outsl
in
aam
ds
out
leave
cli
add
adc
jb
adc
xor
cmp
push
cmp
inc
push
push
repz
sbb
aas
jbe
leave
repz
sbbl
and
mov
pandn
and
ljmp
push
inc
mov
sbb
and
stc
dec
jno
das
cmp
das
cs
xor
jo
jo
lahf
mov
das
pushf
cmpsl
cmp
repz
mov
push
mov
leave
repz
ficomps
or
cmp
xchg
out
hlt
call
das
or
pop
leave
leave
in
ss
ss
repz
inc
adc
adc
bound
dec
insl
xlat
in
jbe
mov
subl
dec
lds
out
jns
cltd
push
sbb
aaa
jns
scas
and
out
daa
fistpl
and
and
jns
cld
pop
fsubrs
adc
fmulp
repz
pop
sbb
sub
xchg
out
ds
dec
sahf
ja
pop
jne
xor
fisttpll
xchg
pop
push
mov
mov
ret
cmp
inc
stos
ljmp
inc
cmpsl
xchg
mov
test
or
aas
add
or
icebp
cmp
std
add
xchg
movaps
rcl
inc
push
or
inc
sbb
jno
inc
imul
lea
in
push
jbe
aaa
repz
mov
das
aaa
cmp
push
jns
fcmovne
add
sbb
or
and
or
aaa
or
iret
fnstsw
scas
adc
fisttpl
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
cmp
out
and
jb
pop
jb
pop
jo
orl
repz
jo
pop
xchg
sub
mov
aas
popa
jns
in
into
aas
xlat
pop
sbb
movsl
ror
mov
jle
inc
add
iret
repz
mov
push
dec
dec
inc
cmp
repz
cmp
sub
lcall
clc
hlt
out
sahf
out
in
call
jns
aam
int3
pop
les
iret
repz
cwtl
out
sahf
out
test
lahf
out
sahf
pusha
pop
push
cmp
or
repnz
scas
pusha
adc
fdivrs
sbb
add
xchg
and
adc
and
adc
or
pusha
les
mov
std
sub
pop
test
sbb
dec
mov
or
jl
cmpb
cmpsb
fisttps
mov
lret
inc
jle
test
shll
in
adc
pop
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
mov
inc
div
inc
sub
mov
aas
push
xor
in
stos
pop
add
cmpl
inc
hlt
mov
and
inc
daa
pop
jle
mov
xlat
incl
xchg
rcll
mov
das
adc
add
adc
xor
lock
aam
push
or
repz
test
adc
in
sahf
out
sahf
adc
sahf
out
sbb
add
repz
repz
in
sbb
iret
push
dec
pop
outsb
call
sbb
mov
js
aad
int
push
jns
hlt
ljmp
xchg
imul
push
sub
not
mov
sahf
icebp
aas
xchg
and
mov
js
frstor
push
andl
cwtl
adc
clc
fsubrl
xorb
dec
push
cmc
inc
addr16
push
push
pop
inc
cmpsb
jnp
test
add
inc
push
xchg
aas
pop
pop
push
aad
xlat
pop
inc
imulb
fsubrs
lods
mov
add
lods
stos
ja
and
sub
adcl
out
pop
inc
add
subb
mov
push
icebp
pop
rolb
iret
repz
sbb
mov
cmp
add
adc
and
sahf
out
out
push
ds
or
imul
push
clc
add
pop
fisubs
sahf
adc
lock
push
or
idivl
or
pop
lock
cmp
sbb
adc
loopne
out
sahf
sbb
push
rclb
enter
jns
les
shlb
sahf
out
and
xchg
sub
clc
xor
inc
into
mov
adc
aam
nop
cmp
movsb
jbe
cmpsb
cld
xorb
repnz
sbbl
outsl
and
jg
cmp
jns
out
pop
js
mov
in
repz
repz
xor
add
imul
ja
or
lcall
push
stos
xorb
insb
inc
jns
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
int3
pop
dec
jmp
mov
push
pusha
les
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
inc
xor
mov
mov
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
add
movb
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
incl
cmp
pop
adc
insb
inc
inc
push
dec
push
dec
dec
xchg
jnp
cmpsl
lcall
xor
ja
popa
push
out
mov
les
decl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
aaa
incl
add
std
test
movsl
cli
test
xor
leave
mov
mov
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
jmp
or
adc
stos
sbb
data16
inc
fdivl
jno
add
ljmp
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
nop
or
mov
cmp
fs
add
lcall
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
inc
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
gs
decl
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
call
adc
ret
movsb
sti
hlt
shrl
imul
mov
sarb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
incl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
dec
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
cli
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
out
xor
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
jmp
add
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jmp
ja
int3
add
mov
das
es
lds
or
mov
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
jmp
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mov
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
jg
jmp
imul
push
js
or
push
addl
sub
pushl
cmpsl
notl
pusha
rorb
imul
decl
shrl
or
inc
push
aaa
sbb
lcall
mov
fidivrs
mov
jmp
sub
mov
lret
mov
cmpsb
mov
sarb
sub
call
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
pop
out
add
fwait
ret
pop
push
pop
push
sub
ljmp
mov
push
xlat
fcomp
cmp
repz
fcmovnu
fstp
iret
and
in
call
jmp
repz
repz
cmc
div
repz
clc
stc
cli
sti
cld
add
jmp
or
inc
cmpsl
lods
add
lahf
iret
add
mov
leave
les
dec
bound
jbe
inc
popl
inc
insl
bound
lds
je
mov
push
cltd
inc
inc
in
cltd
test
aas
and
inc
dec
in
cmpsl
pop
xchg
or
and
aas
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
test
xor
xor
xor
sub
inc
jbe
pop
insb
imul
data16
gs
add
in
xor
inc
mov
fildl
push
inc
sub
leave
aam
push
rorb
pop
out
add
das
or
or
je
enter
scas
ss
jbe
sbb
sub
inc
aas
add
add
sbb
jle
gs
stos
or
mov
adc
push
nop
loop
ret
addl
jp
xchg
test
add
pop
xorl
popa
xchg
cmp
sub
aaa
je
aaa
push
cmpsb
push
fidivrs
inc
push
add
or
add
sbbb
mov
jp
daa
int
mov
inc
aas
inc
jbe
and
pop
inc
inc
push
mov
sbb
inc
pop
idiv
clc
add
inc
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
xor
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
sub
cmp
pop
subl
lret
dec
lods
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
data16
inc
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
adc
addr16
mov
push
dec
xor
bound
xor
pop
ret
inc
add
add
add
insl
adc
or
sub
lods
inc
add
outsl
pop
inc
dec
xchg
mov
dec
dec
dec
mov
adc
addr16
sbb
sbb
inc
stos
mov
push
push
sbb
flds
inc
dec
pop
bound
inc
hlt
popa
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fldt
adc
nop
xlat
testl
sub
adc
push
add
sub
jmp
or
add
sbbb
push
add
adc
ffreep
push
pop
notl
fdivr
loopne
adc
or
outsb
sbb
or
cli
pusha
add
fistl
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
push
add
add
pop
add
in
add
adc
add
js
jno
mov
loopne
add
jnp
imul
ds
xor
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
adc
mov
and
cmpl
push
inc
pusha
xchg
sbbb
or
cmp
push
test
add
inc
xor
daa
pushf
adc
dec
sbb
shrb
and
add
pushf
add
scas
fisubs
add
pop
scas
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
sar
out
xchg
mov
lock
loope
icebp
add
pop
push
mov
mov
pusha
inc
roll
adc
fiaddl
or
js
jg
or
sub
rcr
push
ret
xchg
pushl
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
cs
les
fsts
dec
ret
mov
jecxz
pushf
ret
ja
pushl
xchg
ret
sub
xchg
sti
push
in
and
fistpl
jg
add
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
mov
pusha
add
std
or
add
inc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
pop
mov
inc
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
in
ljmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
sbb
ljmp
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
xchg
clc
divb
clc
sar
andl
aas
icebp
idiv
call
sbb
xor
jecxz
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
test
subl
jb
adc
push
lock
lods
jp
testb
mov
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
jbe
idiv
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
call
icebp
aas
std
cli
push
push
push
idivl
pushl
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pusha
incl
aas
sti
punpckhbw
cmpsb
orb
mov
loopne
cmp
cmp
js
jmp
xchg
pop
clc
pop
hlt
mov
xor
movsb
add
lea
jg
call
cmc
jmp
std
xorb
jg
aad
adc
ret
das
pop
lcall
call
pop
shlb
out
sarb
sbbl
jno
or
rol
ljmp
les
cli
mov
mov
inc
arpl
call
bound
pusha
insl
add
leave
push
scas
loop
jge
call
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
inc
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
inc
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
shrl
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
ljmp
pop
xchg
ftst
jbe
xchg
and
ljmp
shrb
shlb
out
aas
stc
add
out
incl
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
jecxz
and
lahf
fmull
enter
jecxz
pop
jmp
xor
pop
mov
sub
mov
in
testb
mov
push
sbb
push
inc
or
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
incb
idiv
rorl
adc
push
inc
jecxz
sbb
sarl
adc
inc
sar
adc
lahf
push
in
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
cwtl
dec
call
xchg
aad
loop
lahf
mov
or
out
lcall
pushl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
mov
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
mov
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
push
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
pushl
es
xchg
fidivrs
clc
ljmp
push
aas
repz
outsl
lock
in
jmp
stc
sbb
mov
clc
push
std
mov
rcll
or
mov
xchg
jg
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
outsl
das
or
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
flds
call
and
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
popf
xchg
pop
add
cmpsl
mov
daa
icebp
push
lahf
sti
inc
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
add
xor
sub
inc
aas
add
cmp
add
sti
push
sti
pop
inc
xor
stos
inc
dec
push
mov
push
push
mov
int3
pop
iret
jmp
add
mov
inc
cmp
push
lods
jns
ljmp
or
xor
add
inc
xor
jnp
jb
popa
adc
inc
jp
dec
jle
out
shl
mulb
xor
xchg
dec
mov
nop
in
lds
jmp
and
ljmp
icebp
sbb
cmpb
xchg
scas
push
pop
jno
sbb
mov
cmp
int3
pop
leave
fdivrp
decl
sbb
or
fisttpl
xor
orb
or
lahf
movsl
mov
mov
jbe
sub
xorb
adc
repnz
hlt
push
push
jbe
sub
mov
cmpsl
bswap
mov
lock
call
scas
mov
into
icebp
xchg
cmpsl
mov
rcrb
pop
test
mov
push
mov
dec
fbld
arpl
mov
inc
mov
pop
ja
cmpsl
jg
imul
insl
xchg
jg
or
ljmp
sbb
add
stos
dec
xchg
cmp
cmc
std
loopne
iret
xorb
mov
in
in
int3
sub
out
daa
lds
jmp
enter
cmp
mov
jno
icebp
mov
insb
adc
lods
popf
bound
popa
xchg
inc
push
fcoms
incl
fists
xlat
sti
and
mov
mov
xchg
jno
ret
jecxz
call
dec
movsb
ficomps
mov
push
add
xchg
arpl
or
test
aam
jmp
xor
jmp
rcr
cmp
xchg
dec
fldt
inc
dec
gs
sbb
mov
aas
sbb
pop
dec
sbb
arpl
insb
inc
scas
pop
cli
mov
add
or
test
mov
faddl
std
lcall
nop
mov
shrb
push
sub
push
pop
js
and
push
fs
popa
xor
call
cld
aaa
fwait
sub
xchg
pop
test
adc
aam
dec
ja,pt
stc
fwait
sbb
mov
jmp
xchg
retw
sbb
aas
fdivl
incl
es
and
push
pop
and
icebp
sahf
pushf
fists
pop
pop
stc
pop
cmp
iret
mov
sub
pushf
mov
ret
dec
stos
jne
lock
out
andb
inc
imul
ret
cld
pop
jl
psubd
fisubrl
decl
add
lods
jp
dec
outsb
int3
sbb
dec
push
arpl
fiaddl
jg
pop
aaa
in
mov
into
popf
xchg
cs
cmp
aad
subb
mov
repnz
mov
movsb
adc
call
or
jecxz
loope
pop
hlt
sti
xor
xchg
mov
stos
mov
dec
cmp
ljmp
and
pop
ds
lcall
mov
mov
mov
pop
cmp
int
incl
xchg
inc
lret
mov
cmp
xchg
mov
out
cmp
push
cmpsb
push
scas
mov
popa
loop
mov
pop
fldenv
xor
inc
pushl
sbb
adc
xlat
dec
sbb
mov
imul
jmp
adc
les
aas
mov
stc
daa
pop
std
sub
xchg
repnz
sti
mov
fwait
jmp
jmp
jae
xor
orl
or
pop
sbb
out
popf
sub
mov
adc
inc
ja
jge
enter
pushl
idivb
out
lock
and
loope
push
imul
pusha
mov
mov
jnp
inc
lret
jl
shrb
inc
loop
popf
dec
in
or
mov
fistps
mov
mov
test
mov
addr16
xlat
xor
leave
movsl
pushl
sub
enter
int
imul
adc
dec
cltd
movl
das
adc
repz
mov
lods
aas
cmpsb
add
add
xchg
jo
incl
out
inc
pushf
or
out
ret
adc
pop
es
and
in
mov
ss
sub
ljmp
data16
icebp
inc
sub
pop
push
sub
hlt
data16
jle
mov
pop
mov
aam
in
push
movsb
lret
jmp
and
aad
idivb
add
mov
mov
mov
xchg
popa
and
lcall
and
xchg
icebp
popf
add
pop
fstl
or
adc
rcrb
dec
andl
das
lods
jbe
lods
outsb
jno
cmp
jp
xlat
lds
sbb
int3
fs
jge
pop
cmpsl
inc
mov
dec
scas
fdivrl
mov
pop
mov
scas
notrack
call
adc
or
es
fcoms
push
fildll
sub
nop
ljmp
pop
push
mov
sub
add
clc
shr
or
gs
outsl
repnz
icebp
fwait
jecxz
out
decl
hlt
loop
sub
or
or
dec
lods
repnz
addr16
sbb
lcall
sbb
movsb
ljmp
mov
mov
call
ficompl
pop
stos
add
insb
push
std
jo
pop
pop
pop
outsl
sub
push
stc
push
sub
or
and
add
adc
cmp
ret
adc
das
mov
out
inc
add
xchg
icebp
scas
cmp
out
movsb
negb
scas
mov
cmp
insb
mov
mov
aas
cmp
cmp
sbb
icebp
adc
fcomps
cmp
arpl
clc
test
sbb
mov
addb
movsl
cwtl
lret
sbb
jle
xchg
xchg
sub
pushf
fwait
repnz
cmc
sub
or
pushl
test
jle
dec
mov
lcall
aaa
jl
mov
xchg
xchg
xchg
aaa
dec
cmp
js
mov
jp
pusha
aas
leave
daa
int3
mov
repnz
ljmp
les
test
in
xlat
dec
loop
pop
daa
rol
ss
sub
mov
or
jmp
movsb
loope
jecxz
mov
lret
loopne
loop
xchg
outsl
mov
cwtl
in
xchg
les
imul
pusha
fisubrs
addr16
mov
pop
cmp
stos
inc
adc
add
mov
in
sbb
and
out
cli
jmp
mov
push
jbe
std
or
pushf
loop
mov
xchg
lcall
aas
jne
decb
sub
dec
mov
jp
sub
ljmp
mov
rorl
jg
pop
cmp
xchg
lods
dec
inc
mov
decl
ss
aad
call
sub
pop
xchg
and
adc
ret
mov
call
pop
jns
cld
mov
mov
iret
xchg
icebp
and
outsb
pusha
scas
sti
mov
jg
aaa
cld
lcall
lock
call
push
mov
mov
or
out
inc
push
jg
jmp
test
es
daa
sbb
add
cld
add
scas
pop
inc
mov
decl
mov
aas
mov
mov
insb
mov
push
call
or
pop
out
outsl
orl
xchg
enter
into
pop
addr16
push
outsb
pushl
jne
jns
adc
cmp
sub
in
sub
push
out
jbe
sbb
jmp
inc
add
add
leave
test
xchg
out
and
pop
mov
shlb
decl
and
jl
cmp
aam
sahf
repnz
and
incl
dec
push
jecxz
xorb
out
inc
sbb
and
mov
les
ljmp
push
imul
mov
push
je
fcompl
shlb
jno
insl
and
mov
adc
lcall
mov
sub
aam
or
in
call
mov
in
into
and
xor
sbb
mov
out
cli
lcall
mov
pop
xchg
cmc
aas
mov
xor
andl
mov
push
test
mov
lock
xor
ljmp
cmp
push
ret
pcmpeqw
fwait
lret
sarl
decl
pop
xchg
fidivs
jp
sub
jmp
push
inc
adc
out
mov
adc
in
js
pop
cmp
jmp
cmc
push
push
mov
pop
push
dec
cli
stos
add
decb
loop
add
xor
call
std
sub
jne
pop
enter
xchg
movsl
lahf
sub
je
or
sub
dec
filds
mov
pop
push
arpl
shr
mul
fistpl
loopne
mov
rorb
mov
xor
das
call
sbb
adc
and
test
call
push
dec
and
sub
call
fdivl
or
dec
icebp
push
in
dec
sbb
addb
mov
mull
mov
inc
fdivl
std
ljmp
insb
push
dec
adc
xor
andb
mov
adc
dec
ds
jl
sub
pop
lea
xchg
dec
pushf
std
dec
adc
jg
aas
lret
cli
stos
outsb
cli
ljmp
dec
mov
daa
fstpl
aad
nop
imul
ljmp
bound
gs
mov
mov
mov
jae
fisubrs
add
pop
std
stos
sub
nop
inc
inc
in
mov
int
cmp
decl
mov
jmp
out
fisttps
xor
or
scas
inc
jle
in
cmp
xor
mov
jmp
aas
rep
pop
jge
movsb
insl
jp
fcmovnu
add
fisubrs
sbb
pop
dec
pushl
sahf
mov
imul
loopne
das
gs
sti
lret
adc
pop
or
adc
push
push
aam
add
sti
pop
sub
cmpsb
sub
scas
daa
jmp
cmc
mov
dec
mov
xchg
js
in
scas
adc
xchg
xchg
scas
loopne
jmp
xchg
inc
push
movsl
mov
cld
pop
sbb
sbb
fcoml
cs
cmp
imul
ljmp
cmpsb
inc
inc
fs
int
pop
scas
int
pop
and
mov
popa
sbb
mov
mov
mov
lcall
and
std
maxps
pop
in
mov
mov
or
aaa
pop
cmp
push
fcomip
and
stos
mov
push
adc
dec
or
xchg
mov
cwtl
imul
gs
mov
sub
mov
xchg
repnz
push
push
adc
daa
das
push
mov
stc
fistps
jns
sbb
inc
ds
rol
dec
stc
pop
xchg
popf
mov
mov
fsub
mov
mov
hlt
call
sbb
jecxz
jg
pusha
jae
mov
fsub
push
cmc
jmp
ljmp
jg
fdivrs
outsb
movsl
imul
xchg
mov
pop
xchg
mov
or
fstl
push
test
fcomip
adc
and
stos
sbbl
jno
and
jg
incl
mov
lea
jae
sti
cmpsl
mov
out
dec
sub
in
cmp
clc
or
aas
insb
scas
xor
outsl
xchg
movsb
les
cmp
mov
jge
cmp
push
mov
lcall
mov
ficoml
out
adc
mov
icebp
jb
repz
cmp
mov
pop
andl
test
ret
nop
popf
jo
out
cmpl
lcall
mov
sti
push
lods
mov
fsubrs
je
push
int
sahf
in
xchg
xchg
dec
mov
call
lcall
jmp
test
icebp
pop
in
jo
lods
xchg
ljmp
inc
and
sbb
and
jae
xchg
cld
test
addl
mov
js
push
sbb
call
roll
in
jnp
push
dec
outsb
es
inc
lock
and
xor
add
test
jg
sar
decl
rcrb
pop
cmp
aaa
inc
enter
mov
in
popa
mov
pop
icebp
xor
lcall
out
add
mov
xorb
mov
pushf
fsubr
loopne
lds
adc
dec
out
addr16
push
das
push
stc
popa
pop
out
adc
lcall
aaa
scas
mov
pushf
xchg
push
mov
aaa
jnp
cmc
jp
rol
jg
adcb
out
mov
inc
scas
mov
rcrb
ljmp
sar
int3
sub
sbb
cmpsl
inc
dec
and
scas
sbb
imul
lock
decl
nop
clc
ja
lock
lock
daa
jb
jns
in
lock
cld
dec
ret
mov
mov
cs
adc
pop
and
push
in
ficompl
push
cmp
das
or
xor
dec
and
lcall
aaa
pushl
mov
clc
lret
mov
lret
cmp
mov
ret
mov
adcl
mov
push
mov
rolb
adc
jl
notl
sbb
scas
mov
fistpll
cmp
cmp
ja
push
dec
mov
mov
js
mov
and
nop
in
loop
dec
xchg
mov
jno
push
xorl
cmc
rcll
push
iret
push
das
push
je
pusha
ljmp
push
es
push
mov
lcall
in
jo
add
pop
ss
mov
lea
jae
aam
pushl
cmpb
arpl
rclb
xchg
xor
int3
mul
push
pop
and
jb
out
jae
mov
mov
pop
scas
mov
lahf
addb
ret
in
mov
mov
incl
and
icebp
push
cltd
hlt
icebp
inc
sub
inc
sub
cltd
fadd
mov
fisttps
dec
jmp
lea
fcoms
ljmp
call
lcall
adc
insl
mov
xchg
push
sub
xchg
xchg
int
in
push
dec
push
fbld
test
fistl
std
pop
or
jmp
xchg
jg
mov
pushf
cmpl
xchg
pop
jnp
orl
cli
data16
dec
decl
por
jbe
imul
lret
add
xor
ja
int3
mov
lods
in
mov
lock
stc
adc
call
pop
mov
or
cmp
pop
cmp
ret
pop
mov
call
push
bound
and
lods
cmp
jnp
dec
adc
iret
push
xchg
das
sbb
pop
gs
ljmp
push
mov
rcl
pop
sahf
cmpsl
jne
cmp
mov
xchg
mov
jmp
shrl
pop
cwtl
push
out
insl
ffreep
fcompl
inc
cmp
es
and
xor
mov
repnz
dec
adc
pop
adc
aam
rcr
neg
cmp
mov
lret
repnz
cwtl
pushl
fwait
mov
inc
mov
iret
cld
pop
pop
test
or
mov
or
cmp
in
call
lret
enter
iret
xchg
fldl
cmp
shrb
pushl
cs
xlat
pop
aaa
jno
clc
jle
jge
fnsave
int3
int
out
xchg
push
mov
mov
repz
and
shrb
mov
enter
jmp
pop
in
dec
push
pop
mov
adc
cmc
mov
repnz
push
scas
lcall
mov
xchg
decl
jne
roll
lock
xchg
xor
js
mov
rorb
inc
xchg
inc
jmp
iret
adc
movsl
fdivrs
push
iret
xor
pop
inc
test
call
adc
and
popa
mov
mov
daa
aas
sub
mov
test
sbb
clc
cmc
in
clc
ljmp
inc
push
aad
ret
dec
xor
add
loopne
or
mov
decl
clc
das
sub
xor
jbe
and
or
mov
push
inc
mov
push
jmp
rcll
push
call
in
ljmp
out
aam
jne
in
pushf
pop
icebp
jge
gs
add
into
testl
sar
ljmp
pop
cmp
mov
sbb
mov
es
insl
xchg
mov
jg
dec
cli
or
and
cwtl
sbb
test
rorl
xchg
fmulp
dec
push
jbe
jmp
lcall
das
xor
mulb
sbb
repnz
mov
lcall
mulps
out
cmc
xchg
cmp
dec
insl
ret
stc
or
lret
mov
pushl
push
es
pop
inc
inc
movsl
xchg
cmpsl
in
mov
sub
adc
gs
incl
out
arpl
push
ds
or
mov
dec
xchg
mov
ljmp
xchg
ret
enter
mov
aas
sbb
fcompl
popf
int3
pop
adc
jmp
xchg
sti
mov
sub
inc
inc
xchg
mov
xchg
jecxz
mov
push
xorl
call
std
ljmp
mov
pop
mov
shrb
mov
fwait
dec
test
mov
call
rclb
mov
and
fwait
pop
cmp
push
jb
dec
or
mov
call
xchg
jns
lcall
jp
mov
pusha
repnz
lock
lock
dec
lret
adc
mov
lret
add
movsl
mov
mov
rep
mov
fidivs
imul
call
or
cli
push
fnstenv
mov
mov
mov
mov
call
sub
rolb
push
mov
push
fwait
ds
pop
rcrb
cmp
pushf
repz
lcall
sbbb
daa
dec
mov
push
and
mulb
lds
mov
aaa
std
daa
and
jns
mov
sub
mov
and
bound
int3
inc
sti
js
jnp
mov
andb
sub
xlat
scas
inc
outsl
in
mov
push
xor
call
jge
imul
inc
mov
test
pushf
mov
lds
push
inc
daa
pushf
test
xor
xchg
leave
jl
stos
jle
and
sarb
pop
inc
or
rol
dec
adc
sub
scas
mov
sarl
sub
mov
clc
jmp
ret
pop
out
and
jne
addr16
loopne
test
mov
das
adc
das
mov
push
fnsave
inc
push
xlat
imul
mov
add
mov
pushl
into
cmp
cld
leave
stos
ffreep
scas
lock
push
push
pop
add
imul
mov
pop
xchg
shll
in
mov
push
jns
push
mov
insl
popa
pop
cmc
xorl
mov
push
jecxz
imul
notb
data16
stc
sti
fcomip
or
mov
in
incl
push
inc
or
mov
nop
into
imul
push
mov
shrl
push
xor
push
enter
lcall
sbb
js
sub
mov
mov
dec
lods
cmp
les
push
add
jmp
shll
push
testl
jno
outsl
xchg
icebp
jg
popl
jp
shl
dec
insl
pop
inc
int3
and
outsb
or
pushl
fs
add
es
mov
jl
or
out
mov
lcall
call
adc
popa
ljmp
fdivrp
inc
outsb
mov
push
pop
mov
pop
jge
inc
sbb
cs
cmp
stos
jae
sub
clc
pop
loopne
pushf
cltd
outsl
push
lret
shrl
insl
push
test
ret
jp
loopne
inc
xor
xchg
movsl
es
xchg
test
imul
push
repnz
fidivrl
shll
push
out
inc
sbb
mov
subl
nop
jmp
sub
insb
cmpsl
and
add
or
popa
push
pushf
push
pushl
push
das
sbb
push
add
cld
mov
sahf
lret
decl
and
pop
mov
mov
hlt
popf
pushf
in
and
ja
out
pushl
data16
push
or
adc
imul
mov
outsl
xchg
mov
ja
ljmp
hlt
cli
xchg
scas
lahf
xchg
inc
adc
or
push
lods
pushl
cld
cmp
xchg
jnp
loope
js
jl
arpl
pop
lahf
pop
push
pop
movsb
push
ljmp
arpl
scas
xchg
out
into
mov
dec
xchg
cmp
mov
mov
jmp
mov
mov
push
push
fisttpl
pop
push
movl
js
and
lcall
repnz
cwtl
add
mov
test
mov
cmp
xor
and
nop
das
cli
inc
jecxz
int3
sbb
outsl
pop
pop
mov
cmp
mov
or
jle
pushl
pop
fsub
sbbb
mov
dec
iret
cmp
clc
sti
cmpsb
ja
or
mov
js
int
pushl
popa
jmp
lods
popa
sbb
dec
dec
andl
rolb
sahf
xor
mov
or
add
pop
data16
mov
jl
aad
xchg
in
dec
xchg
lcall
std
movsb
sub
fmull
dec
mov
dec
push
test
sbb
or
xor
sub
adc
aam
out
stos
ret
fistps
nop
clc
into
pop
jg
sbb
pop
lcall
cmp
inc
sets
jg
add
ljmp
stc
mov
add
sbb
or
repnz
std
jg
icebp
mov
aad
cmp
notl
mov
int3
mov
in
arpl
inc
dec
sbb
add
aaa
arpl
inc
pop
pop
xchg
xchg
lcall
and
dec
dec
incl
adc
in
pop
inc
or
mov
lcall
ljmp
sbbb
xlat
cwtl
je
sub
mov
dec
push
repnz
stos
sbb
decl
push
sub
add
clc
int3
mov
imul
lea
sub
decl
cli
cmp
push
push
fmuls
loop
pop
inc
fdivrp
call
xor
imul
andl
icebp
cld
inc
pop
push
icebp
sti
xor
loopne
mov
rol
push
fwait
aaa
mov
jmp
mov
ret
adc
mov
adcb
andb
shr
es
push
pop
add
mov
es
in
and
or
cmpsb
scas
jle
loopne
aad
insb
mov
iret
cmp
add
ret
aas
mov
fs
jl,pt
ficomps
incl
clc
jle
pushf
fs
in
cmp
sub
sbb
sbb
incl
pop
fsubrs
mov
test
das
popf
cmp
sbb
inc
repz
lcall
ffreep
cmc
ds
cmp
fcoml
sub
pushf
xor
lcall
cmp
xor
imul
pop
mov
in
dec
inc
xchg
mov
sub
cmp
dec
xchg
sahf
call
fiaddl
movsb
stos
jp
or
push
fildl
sbb
ljmp
fldl
lcall
mov
cmp
sub
cmp
add
test
in
sub
xchg
inc
repnz
mov
xchg
subb
fs
cld
mov
aas
enter
ret
inc
cmp
bound
repnz
call
cld
jmp
push
dec
push
sbb
stos
push
mov
shr
out
lea
pop
ja
pop
jg
decl
lret
dec
jbe
sahf
dec
mov
push
lahf
subb
xchg
xchg
out
imul
test
or
sub
sub
lcall
push
daa
dec
jo
pop
sbb
rorl
aaa
out
clc
dec
shlb
push
and
jnp
push
cld
stc
xchg
hlt
jp
mov
call
fidivrs
xchg
rorb
pushf
lcall
stos
pusha
push
leave
lret
shlb
lock
push
adcb
cmpl
pop
push
ds
jmp
dec
jp
inc
pop
mov
mov
icebp
call
std
loopne
shlb
mov
popa
adc
add
lock
sarl
xchg
fs
es
scas
mov
sbb
loop
push
adc
ret
or
lods
cmp
sub
xchg
xorb
mov
jg
fidivl
mov
insl
add
pop
jns
mov
pop
push
test
test
dec
mov
insl
je
into
test
sti
outsl
mov
cmc
outsb
xchg
std
ret
dec
out
sub
sar
fwait
dec
std
mov
xchg
or
jmp
pop
xchg
gs
add
popa
jge
ror
mov
lods
jnp
aam
mov
add
xchg
andl
inc
fisubs
lret
push
int
test
mov
lcall
cmp
out
adc
cmp
push
push
or
cmp
out
mov
sub
divb
cmp
jmp
les
loope
js
jle
fwait
mov
jmp
hlt
dec
sahf
cmpps
outsl
adc
sbb
in
jle
and
jp
or
lcall
jg
xchg
sub
or
insb
push
adc
or
sub
jbe
sbb
mov
aas
iret
xchg
jb
and
cmp
inc
into
cmp
sbb
aad
cmp
es
xchg
addl
das
dec
shrw
add
mov
jg
dec
adc
sbb
fistps
lahf
enter
push
ror
icebp
jns
stc
pop
jecxz
imul
sbbl
and
sar
stos
mov
in
test
das
addr16
hlt
pcmpgtb
mov
pop
jle
incl
leave
mov
in
dec
fmulp
xchg
addb
in
out
sahf
push
pop
cmc
pushl
addl
insb
stos
mov
pop
and
adc
inc
or
int
mov
ljmp
dec
cmpsb
aad
xchg
aaa
cmpsb
stc
adc
xchg
push
lds
imul
lock
movsl
lods
pop
cmc
inc
pop
int3
aas
and
add
aam
jg
inc
test
adc
pop
jl
sbb
pop
pop
andb
or
inc
push
cmp
mov
inc
in
xchg
adc
and
in
xchg
pop
mov
and
aaa
movsl
cld
adc
incl
outsl
ss
sub
dec
call
xor
adc
dec
scas
pushf
enter
push
sti
xchg
xor
sub
pop
clc
pushl
xor
mov
cmpsl
cmp
loop
inc
add
xor
mov
gs
sub
test
jnp
adc
inc
push
in
cmp
sub
dec
bound
test
or
insb
jne
mov
aas
adc
lcall
xchg
push
or
pushf
inc
fwait
inc
xor
clc
bound
xor
inc
ljmp
insb
pop
or
jg
pop
fsubrl
lcall
xchg
inc
xor
mov
dec
mov
ja
sti
mov
xlat
repz
mov
mulb
cmp
lcall
jmp
sub
inc
pop
jno
cmpsl
sub
pusha
cltd
or
push
pop
imul
decl
cmp
shlb
ja
leave
stos
adc
fmull
add
ljmp
scas
mov
sbb
cmpsl
pop
pop
and
cmp
xchg
jae
inc
mov
decl
sbb
mov
aaa
dec
lock
es
xor
pop
lds
insb
aas
das
out
outsb
jg
incl
in
clc
out
clc
incl
mov
es
push
cld
bound
pop
mov
cli
ret
decl
fwait
or
mov
dec
nop
push
jnp
bound
out
push
cli
aaa
pop
mov
mov
ret
mov
ds
popa
out
rcrl
jg
pushl
cwtl
inc
fnstcw
push
jmp
adc
aaa
icebp
mov
pop
fimull
xor
adc
push
mov
push
and
push
inc
bsr
push
daa
cmp
pop
sti
out
mov
jmp
cld
sbb
pop
add
in
or
repz
pushl
and
lcall
je
add
mov
dec
into
loopne
add
push
out
sub
incl
ret
out
stc
mov
mov
jnp
pop
movsb
fcoml
fcomps
pop
pop
inc
xor
aaa
mov
rcll
enter
cli
push
cs
cmp
or
and
cmp
pushl
mov
fscale
pop
or
lahf
sub
push
in
add
xlat
mov
das
shrb
mov
fsts
out
not
lret
jmp
sbb
pusha
aam
into
aam
cmpsb
jnp
push
xor
std
ljmp
out
loop
das
test
push
mov
jge
push
test
shrl
call
jbe
aam
or
sbb
dec
pushf
xchg
sub
sbb
add
ret
lcall
and
dec
sbb
xchg
and
out
in
inc
sbb
push
jae
xchg
add
or
lock
ret
pop
dec
xor
test
xor
in
fcomip
aad
or
push
jno
mov
xor
jp
sbb
push
add
xor
mov
jmp
mov
lret
cmc
out
mov
or
fimull
fistpl
jae
lods
pop
jg
mov
jmp
leave
sub
xchg
divb
testl
stos
shll
mov
mov
daa
or
mov
dec
mov
push
iret
xchg
ljmp
sub
pop
sub
int3
popa
scas
add
pushl
ficoms
gs
inc
imul
es
adc
add
data16
lea
pushl
mov
ds
cmp
aas
sbb
push
push
cmc
or
scas
jecxz
pop
cmp
jbe
scas
in
loopne
xor
sub
cmp
lock
cmp
mov
inc
enter
fdivr
add
cwtl
mov
decl
xchg
xchg
mov
loopne
and
jle
icebp
out
sbb
call
push
bswap
jno
push
mov
pop
add
loop
enter
mov
push
add
call
out
imul
fdiv
test
push
icebp
xchg
and
ss
out
inc
jns
incl
andl
push
cmp
xchg
out
cmc
gs
stos
mov
decl
and
aaa
aad
lret
push
adc
xchg
inc
sub
or
sbb
fcomip
aaa
ljmp
xorb
movl
std
lcall
aas
mov
bound
in
adc
cmpsb
je
mov
imul
les
nop
int3
jg
fildll
add
and
loop
sbb
repz
sbb
mov
mov
fndisi(8087
outsb
daa
cmp
test
popf
jae
mov
jmp
sti
dec
in
aas
mov
pop
sbb
pop
or
decl
loope
sub
sbb
xlat
mov
fs
bnd
decl
sub
imul
mov
das
dec
rcll
jg
lcall
xchg
push
arpl
add
insl
into
push
cmp
mov
iret
scas
daa
xchg
and
xchg
add
mov
test
pop
ss
jg
mov
push
je
mov
cmp
ret
cltd
pushf
jp
and
daa
jne
incl
xchg
push
lahf
mov
je
mov
loop
call
or
add
xchg
insl
in
rcrb
dec
dec
call
decl
mov
rcrl
jecxz
xchg
cmp
aaa
in
cmp
fcmovnb
sarl
call
getsec
in
stos
movsl
sahf
roll
ljmp
jmp
in
xchg
mov
out
repz
sarl
fsts
fs
sahf
imul
incl
data16
decl
addr16
dec
xchg
scas
outsb
test
mov
mov
cmp
mov
push
fisubl
mov
hlt
popf
dec
fnstcw
int3
mov
mov
mov
sub
pop
jb
or
adc
test
fcmovu
daa
shlb
mov
adc
ret
jnp
jmp
lea
mov
push
das
cmp
jae
rcrl
into
fmul
in
jns
mov
cs
cltd
call
fdivrl
pop
stc
imul
inc
jno
or
xchg
inc
cmpsb
repnz
in
divb
pop
or
dec
jle
or
insl
inc
xor
mov
sub
mov
dec
imul
jp
adc
mov
inc
movsl
inc
jbe
push
inc
cld
sub
cmp
rcrb
test
jmp
xchg
fwait
mov
cwtl
in
bound
outsl
mov
incl
inc
cmpsl
add
out
pop
xchg
iret
repz
outsb
mov
popf
cmpsl
fldenv
pop
out
incl
sub
add
out
adc
icebp
test
pop
xchg
fistpl
jns
add
inc
or
or
sti
cmp
and
pop
jbe
and
add
addl
sahf
shrb
or
pextrw
or
jmp
add
and
dec
sbb
loope
adc
filds
add
popf
push
out
out
pop
xchg
mov
mov
mov
les
mov
push
ret
inc
arpl
dec
js
or
dec
sub
rol
hlt
inc
pop
jp
pop
ljmp
nop
cwtl
mov
outsb
xchg
loope
fadds
push
icebp
lret
in
dec
pop
sub
xor
xchg
sub
out
xchg
jecxz
fimull
jmp
movsl
icebp
sub
inc
cltd
loope
add
rcll
cmp
mov
in
rcrl
lcall
push
aam
jne
incl
inc
in
into
imul
lret
or
loopne
loope
aas
cmp
test
dec
bound
mov
cli
cmpsl
mov
fsubs
adc
int3
push
outsb
mov
imul
aad
insl
jle
mov
rcrl
repnz
sbb
mov
in
ljmp
lock
out
sub
jmp
add
pop
cmp
cld
call
sarl
cltd
push
xchg
decl
xchg
dec
jle
sub
mov
loope
imul
cld
and
mov
decl
push
and
xor
lods
out
gs
aas
psubusw
push
out
clc
mov
mov
das
jle
clc
inc
data16
testb
inc
jg
jmp
aas
jns
popa
mov
sub
cwtl
pop
test
lahf
out
xor
cmpsb
pushl
stc
sub
pusha
dec
jo
mov
lods
sub
adc
push
lock
and
cmc
ljmp
call
xor
sub
jno
mov
xchg
push
test
incl
repnz
sub
xchg
sub
shlb
mov
sarl
adc
incl
orl
xlat
sub
jmp
dec
xchg
jb
out
push
push
aaa
into
aas
ljmp
xchg
movsb
repz
icebp
sbb
jle
jmp
push
dec
jmp
cmp
lret
ret
cmp
push
mov
add
rcrl
mov
ljmp
or
mov
or
pop
loopne
and
dec
sbb
ljmp
dec
lcall
popf
out
popa
xor
outsl
into
pop
mov
and
into
dec
inc
sti
push
mov
sub
push
xchg
mov
xorl
setbe
loop
inc
mov
adc
xchg
inc
cmp
rorl
inc
xor
xchg
inc
incl
lea
jp
fdiv
lods
outsl
mov
and
pop
mov
decl
sub
mov
imul
mov
cwtl
pusha
push
dec
nop
popf
test
int
mov
dec
sub
cmp
bound
sub
xchg
insb
mov
daa
stos
mov
sub
cmp
incl
push
inc
sbb
mov
pop
mov
scas
add
xor
jmp
mov
push
cmp
stos
pop
mov
adc
imull
xor
jl
repnz
clc
inc
idiv
jg
or
push
add
jnp
pop
xchg
mov
pop
incl
movsl
mov
fisttps
pop
pop
rcll
pop
jg
mov
lcall
outsb
lahf
mov
jne
incl
test
imul
pushf
cmp
pop
mov
or
inc
shll
xchg
mov
incl
jmp
ss
inc
pop
pop
aad
rcr
dec
out
or
sbb
pop
icebp
incl
cmpsb
lea
imul
cmp
add
fucomip
insb
mov
cli
fdivrs
cld
inc
fldpi
inc
pmaxsw
cwtl
mul
xor
sar
jp
lret
imul
jg
mov
iret
ja
icebp
call
pusha
cld
ja
outsl
fmull
test
cltd
dec
cmc
bound
cld
fimull
pop
enter
mov
lcall
lcall
fucom
inc
push
out
mov
pop
int3
data16
sub
pop
dec
cmp
call
ret
daa
js
mov
dec
adc
inc
ja
daa
aam
out
push
ds
ljmp
mov
ret
mov
dec
dec
cmpsl
mov
and
rclb
inc
and
shlb
mov
xor
mov
aad
push
popf
mov
shr
cltd
stos
jg
decl
mov
and
js
jnp
aas
int
out
call
dec
xchg
sub
pop
dec
int
gs
pop
xchg
lods
call
xor
fcomip
jmp
lret
out
loop
and
aam
jg
adc
add
dec
mov
pop
and
push
cli
aaa
popf
pop
inc
inc
rorl
xor
das
inc
js
cmp
aam
inc
cli
enter
push
cld
outsl
cli
das
fwait
add
fnstcw
ss
jns
je
out
scas
xchg
sarl
ljmp
and
shrl
fsubs
mov
les
hlt
pop
in
mov
sar
call
ficoml
sub
mov
dec
enter
mov
mov
mov
mov
ss
ljmp
shll
cmp
pushf
outsb
push
push
repnz
mov
jge
lcall
incl
or
shrb
mov
enter
xchg
xlat
enter
leave
cmp
or
mov
out
push
and
mov
icebp
stos
jl
ja
stc
push
pop
data16
ljmp
insb
sub
inc
jns
mov
fyl2xp1
out
and
test
mov
ja
jl
cmc
sbb
loopne
adc
in
push
int3
push
or
pushl
or
push
mov
jp
das
scas
mov
pop
lock
loope
pushl
add
lods
and
inc
jmp
mov
or
inc
jns
std
mov
ret
icebp
ds
test
push
pop
ss
push
jno
int
inc
loop
xor
inc
mov
les
add
sbbl
pop
cmp
inc
out
or
pop
mov
nop
jl
mov
add
sbb
cmp
mov
lea
adc
mov
loope
lcall
jg
daa
ljmp
xor
lods
in
ljmp
inc
xchg
in
aaa
mov
push
dec
pop
bound
pop
into
mov
cmpsb
ljmp
ljmp
inc
clc
or
cmpl
push
xor
loope
xchg
pusha
xchg
pop
push
dec
nop
jp
sbb
pop
gs
mov
lock
call
inc
xlat
dec
mov
jmp
fwait
adc
in
pushf
dec
push
inc
lret
ljmp
adc
ss
mov
xchg
cld
mov
xchg
jl
roll
dec
fidivl
es
test
sbb
pop
pop
jp
or
ja
pushf
jns
leave
cli
rorl
loope
fdivrl
lds
lcall
sub
es
lds
scas
xor
pop
cmp
lods
xor
jl
push
cs
pop
mov
mov
ficoms
ror
test
mov
xchg
fcompl
pushl
dec
push
jne
inc
and
xchg
xchg
pop
in
rcrl
loope
movb
inc
jmp
rep
mov
jb
lock
xchg
lahf
fdivp
std
paddusb
leave
repnz
add
loopne
das
mov
xlat
dec
pop
dec
or
mov
jmp
jg
mov
fsubrp
dec
adc
in
inc
scas
fwait
xor
pusha
in
imul
popa
dec
sbb
fisttps
cld
jnp
jg
xchg
arpl
inc
add
cli
inc
push
dec
cltd
and
pop
xchg
mov
stos
sub
jecxz
mov
jae
push
dec
mul
out
repnz
sub
mov
sahf
sub
ds
mov
mov
stos
mov
xor
incl
ljmp
in
mov
inc
fidivs
into
adc
mov
adcl
punpckhdq
in
xchg
ret
mov
mov
das
lret
cmp
call
fmuls
adc
out
xchg
mov
insb
out
and
fcoms
mov
or
les
mov
xlat
in
in
mov
dec
or
int
cmp
decl
pop
shr
out
mov
xchg
rcrb
decl
and
gs
mov
out
add
push
movsl
xchg
lods
cwtl
adc
lods
jns
rol
dec
std
pop
adc
xchg
repnz
cmpsl
xor
jle
arpl
or
adc
push
fs
push
sbbl
or
jle
call
sub
iret
xchg
in
mov
aaa
sub
jne
in
dec
pop
pushf
adcb
fldcw
pushf
pop
inc
and
sbb
loope
cmp
mov
sbb
mov
popf
xlat
ljmp
dec
jecxz
lock
xor
mov
lcall
pop
arpl
fwait
int3
into
pop
sub
cwtl
dec
outsl
sbb
lahf
add
pop
cmp
call
and
gs
jo
mov
insb
rcr
jg
shr
decl
ja
push
jmp
les
push
xchg
daa
aad
mov
cmp
das
push
sub
aam
gs
xor
or
adc
push
ljmp
or
push
add
lcall
les
jbe
or
xchg
leave
lcall
push
pop
sbb
xor
or
scas
inc
rclb
pop
push
sar
ljmp
iret
or
fstpt
add
cmpb
in
push
lock
lcall
jmp
mov
push
push
pop
xor
inc
add
nop
and
lods
xor
push
push
inc
pop
sub
call
lods
out
aas
and
rcl
ret
aas
xchg
add
dec
xchg
jecxz
add
mov
push
das
sahf
mov
stos
lret
push
in
inc
faddp
xor
icebp
xor
dec
or
mov
sub
incl
or
add
sub
loope
pop
shll
or
cmp
decl
lret
jg
aad
push
or
pop
cwtl
jmp
inc
xchg
ja
sar
xor
sub
mov
fs
inc
pop
fcomps
push
lea
hlt
push
lea
xor
out
mov
cmp
jge
lds
dec
scas
ret
jnp
push
mov
out
test
and
cltd
and
incl
push
mov
push
xchg
sbb
pop
adc
dec
inc
inc
rorb
sub
mov
rcrl
ss
adc
xchg
jo
in
and
push
dec
mov
fadds
outsl
clc
lcall
mov
inc
ss
or
mov
dec
jl
ret
push
in
and
pop
in
ljmp
dec
dec
shlb
or
cmp
pop
mov
int3
repz
mov
loopne
call
jg
push
sti
idiv
lea
loop
sub
pop
gs
dec
jp
ret
add
pop
test
bound
or
les
lret
sub
mov
add
stos
adc
sbb
sbb
cmp
and
scas
mov
mov
dec
cmp
push
ja
mov
outsl
inc
ja
jb
jp
les
pop
jecxz
imul
jo
jns
aad
or
loop
dec
jecxz
aam
inc
cwtl
out
mov
and
jecxz
mov
inc
call
sbb
out
pop
mov
mov
or
lds
and
mulb
xor
lret
es
cld
mov
ljmp
jl
xchg
fidivl
leave
jg
sbb
mov
cmp
decl
or
jae
add
mov
sub
adc
pop
and
incl
cld
stos
push
mov
bound
jg
mov
loop
xchg
cmp
jle
iret
xor
jmp
mov
jne
adc
add
ffreep
jg
add
or
cld
andb
xchg
mov
roll
mov
inc
repnz
jp
aad
lcall
sub
add
dec
mov
hlt
push
in
mov
lock
push
enter
scas
in
fdivrp
fcomip
rorb
xchg
mov
dec
mov
repnz
pop
add
test
dec
lds
lret
popf
sti
xor
sbb
cmp
dec
cs
mov
inc
out
inc
out
std
sub
shll
enter
test
test
sbb
test
ljmp
fidivl
inc
pop
in
mov
arpl
sbb
inc
mov
and
adc
adc
mov
pushl
ret
into
adc
lahf
cltd
and
pop
fadds
outsb
xor
mov
dec
imul
ss
sti
add
mov
xor
repnz
mov
inc
outsb
mov
insb
rorb
or
int
out
jnp
int
jmp
mov
jp
ret
dec
add
inc
jmp
push
xchg
xor
push
js
xlat
push
sub
outsl
inc
js
jmp
jmp
jo
sbb
jne
sub
repnz
and
and
add
call
bound
jbe
add
add
jmp
cs
jp
sub
jne
das
decl
ror
sub
or
dec
inc
jae
xchg
push
insl
mov
insl
lods
cmp
out
and
cmp
pop
movsl
sbb
pop
xchg
enter
sub
push
cmp
mov
shll
xor
sbb
or
addr16
add
mov
jnp
cld
bound
push
jmp
test
pop
xchg
cmpsb
cmp
ljmp
adc
mov
mov
loopne
cwtl
es
and
scas
clc
lcall
cld
pop
and
cs
lods
ret
into
orl
pushl
out
scas
cmp
int
cld
cmpsb
and
test
sub
int3
dec
leave
lahf
mov
push
leave
pop
dec
mov
or
adc
mov
push
mov
scas
add
iret
ljmp
cmpl
inc
mov
rorl
jg
test
bound
xchg
iret
lock
insb
stos
push
cmp
lods
test
or
dec
and
hlt
lcall
mov
pushf
push
fisttps
cli
cmc
jmp
xor
push
std
lcall
pop
pop
dec
adc
aad
mov
test
scas
inc
inc
jne
push
ss
incl
xchg
sbb
adc
xor
xchg
inc
popf
mov
repnz
jg
lcall
push
popf
or
popf
rcll
testl
mov
clc
cmpsb
xchg
mov
scas
leave
cmp
call
lea
aad
repnz
arpl
mov
aam
sbb
sub
jmp
push
fmuls
sub
lcall
xor
add
xorb
shll
and
decl
pop
stc
jno
pushf
enter
scas
mov
pop
cld
test
lock
adc
icebp
add
mov
push
mov
ja
insb
stos
sbbl
lock
daa
jne
movsb
push
jg
repz
pop
adc
jg
jle
pop
and
sub
cmp
and
jg
dec
xor
fldcw
out
sub
sub
jl
and
fcoml
adc
mov
shlb
push
and
add
xlat
inc
and
pushl
dec
add
inc
mov
and
insl
adc
insl
inc
sbb
mov
mov
movsl
cltd
adc
or
call
aam
fidivs
lock
incb
inc
fidivs
mov
mov
xor
out
loop
or
mov
lcall
push
lcall
repnz
jb
sbb
mov
mov
sbb
add
cwtl
mov
ds
cltd
repz
sbb
fcoms
dec
inc
push
jl
and
cmp
add
jl
dec
pop
mov
scas
sbb
clc
mov
adc
arpl
adc
cltd
cmp
adc
clc
call
std
in
mov
and
insl
xchg
dec
push
insl
inc
push
cmpsb
lods
cmp
rclb
jmp
push
or
mov
dec
popf
push
jns
loop
movsl
mov
or
call
sub
nop
and
adc
dec
sbb
cmc
mov
in
movsb
jae
stc
jmp
rclb
and
ljmp
add
cmp
call
mov
dec
std
pop
in
stos
mov
jge
decl
mov
adc
jle
jns
adcb
cltd
sarb
decl
iret
mov
sahf
clc
mov
cmp
push
insl
inc
loop
add
ljmp
and
cmp
mov
inc
addb
ret
mov
mov
xor
out
les
lret
jbe
pop
lods
std
cmp
jmp
pop
data16
std
out
fadds
in
fsubrp
stc
cmpsb
out
mov
nop
lcall
scas
sub
js
mov
sub
jg
push
incl
xor
ljmp
add
into
pop
and
push
shll
sub
testb
scas
add
pop
imul
xor
jne
push
jno
ret
jnp
jg
fcmove
cmpsl
jle
or
fbld
fld
dec
dec
push
add
popf
pop
call
in
lea
add
adc
in
lock
in
movsb
xor
mov
xor
add
in
jge
sub
in
ret
rcl
shrb
cmc
aas
xor
lock
dec
dec
loop
aad
std
decl
sti
loope
cltd
xor
dec
es
fwait
add
lock
xor
jp
pop
pop
popa
imul
pusha
and
xchg
xchg
repz
incl
or
dec
jno
repz
push
inc
adc
inc
or
ljmp
dec
add
scas
imul
dec
add
lahf
enterw
cmp
push
sbb
call
push
scas
mov
orl
and
ss
dec
inc
lret
lds
dec
push
pop
outsl
cli
jle
fwait
pop
cld
dec
sub
inc
add
inc
adc
xchg
sti
adc
inc
mov
sti
xchg
repnz
adc
sub
lret
aaa
add
add
repnz
pop
sub
lods
push
lock
mov
movsl
cmp
rcrb
add
mov
pushf
in
incl
movsb
pop
push
push
jbe
push
pop
pop
add
scas
mov
mov
mov
ja
sub
and
ds
sub
mov
xchg
out
mov
sar
pushl
sbb
cwtl
or
inc
loopne
mov
sbb
mov
jg
scas
cmpsb
inc
jne
inc
sub
scas
pushaw
add
shl
and
fsubr
sbb
daa
mov
es
ljmp
inc
jnp
push
inc
test
mov
cmp
jae
lcall
xchg
sbb
lcall
inc
jle
add
ds
jmp
cli
jbe
xchg
add
dec
lea
rcll
xchg
jmp
pop
add
mov
in
mov
sub
add
les
fst
adc
mov
std
fadds
dec
sub
mov
mov
dec
push
mov
mov
cld
aam
mull
jno
aad
call
stos
outsb
pop
sbb
sub
rorl
mov
cmp
clc
outsl
cmp
mov
scas
loope
jle
clc
lret
mov
test
loop
jl
mov
test
push
lcall
sub
cmpsl
jbe
push
ljmp
pushl
imul
mov
mov
popa
popa
sti
out
cltd
dec
aas
pop
jmp
pop
repnz
hlt
add
or
cmp
lods
enter
ljmp
cmpsl
scas
mov
jbe
leave
xor
addr16
je
lahf
mov
fldcw
enter
jmp
fimull
test
adc
push
mov
orb
fucom
inc
or
cli
dec
pop
jmp
xor
add
ljmp
or
mov
mov
push
into
inc
fists
ljmp
decb
and
lea
lea
popa
adc
in
add
push
ret
call
imul
and
in
or
dec
dec
pop
ret
lods
jg
or
bound
xor
xor
mov
pop
xchg
mov
sbb
mov
mov
dec
or
call
std
xchg
mov
mov
cmp
xchg
push
aas
imul
sub
mov
rclb
data16
in
popf
icebp
lcall
daa
in
sbb
lods
insl
cmp
add
sub
push
inc
hlt
lock
mov
inc
ds
dec
fs
or
clc
rcll
data16
mov
loope
mov
sbb
mov
xchg
in
mov
ficoms
push
pushl
clc
imul
aad
sti
inc
movsb
pop
add
jne
pop
xchg
ret
loope
lahf
or
call
es
add
pop
inc
xchg
sub
cmp
push
xor
sbb
fisttps
mov
ret
into
sub
dec
sti
pusha
sbb
and
adc
call
cmp
imul
push
das
out
mov
loopne
xor
ret
add
pushl
dec
shlb
xchg
jne
notl
inc
ficoms
mov
testb
push
js
divl
jo
icebp
fistl
xchg
sbb
call
loop
lret
repz
adc
sbbb
arpl
insb
sub
shlb
and
ret
mov
std
ljmp
iret
daa
cmp
pop
loop
jge
xchg
mov
xchg
mov
mov
ds
leave
adc
pusha
cs
cmp
iret
push
iret
call
incl
test
stos
pop
inc
arpl
dec
enter
lea
xor
das
decl
rcrb
or
xor
and
scas
mov
xchg
push
jmp
jmp
and
jp
jge
insl
pop
push
cmc
jne
sbb
in
xchg
dec
clc
call
and
call
cld
cmp
inc
fadd
jg
xchg
nop
loop
jge
xor
notb
cwtl
add
decl
insl
xor
and
sbb
jmp
rep
sub
jg
or
cmp
in
je
xor
fsubs
push
mov
jg
or
dec
lretw
mov
outsb
mov
orl
cmp
push
int
sub
aaa
call
cli
lcall
fidivrl
aas
ret
pop
inc
addr16
sub
fdivr
call
cwtl
loope
push
adc
pop
cmpsl
jne
cwtl
pop
xor
push
and
incl
scas
adc
pusha
or
hlt
lcall
mov
or
inc
sahf
stc
add
mov
pop
jns
inc
sbb
dec
pushf
sub
push
out
mov
sbb
ljmp
lcall
jno
aaa
rolb
into
insb
repnz
pusha
loopne
rcr
orb
mov
pushf
sahf
jp
lret
inc
lcall
pushl
dec
jns
mov
push
add
cli
cmp
cmp
jne
adc
out
push
aad
mov
out
mov
aaa
jne
cwtl
ret
ja
xor
xor
sar
stos
inc
push
shl
xor
fsubrl
inc
in
dec
fiadds
sbb
loopne
aam
scas
stos
or
ret
lahf
js
inc
mov
cmc
mov
and
sub
in
push
out
daa
cmpsb
add
dec
mov
cmp
mov
xchg
loope
and
fs
les
pop
dec
adc
int3
cli
cmp
sbb
pop
loopne
js
and
fsubs
mov
js
cmp
stc
stos
add
sub
jns
xchg
pop
jle
divl
xchg
addl
adc
cmp
mov
lds
int
idivb
sub
notl
push
push
outsb
or
push
loopne
xor
mov
mov
fs
xor
mov
shlb
push
xor
jbe
fdiv
incl
ja
lods
and
pusha
pop
das
sbb
scas
mov
lahf
add
xchg
sub
dec
and
decl
dec
out
ret
pop
lcall
test
movsb
xchg
insl
int
add
stos
sbb
lcall
dec
jns
gs
stc
and
adc
inc
sbb
cwtl
inc
jle
adc
mov
jg
sbb
add
arpl
xchg
xchg
mov
decl
cmpsb
cltd
rcrl
std
js
mov
aas
stos
shlb
call
xor
decl
or
loop
adc
xor
insb
xor
xchg
dec
jecxz
ljmp
jbe
lods
or
icebp
shrl
xor
push
fs
pushf
xor
nop
daa
or
mov
or
cmp
mov
fmuls
adc
ljmp
mov
mov
iret
sti
sti
in
iret
cmp
sar
jno
sub
jg
incl
adc
sub
xchg
aaa
mov
repz
addb
push
stc
mov
shll
cmc
ljmp
sub
sbb
push
add
into
inc
mov
mov
ds
out
repnz
fstpt
dec
xchg
add
xor
jno
mov
sti
outsb
pop
mov
dec
ljmp
je
stc
xorl
push
ret
mov
test
adc
jbe
jno
mov
rcll
jnp
clc
pop
xchg
pop
cli
lds
pop
adc
movsb
push
adc
popa
adc
outsl
xor
call
pop
push
and
pop
mov
inc
stos
add
mov
lret
jl
imull
pushf
push
mov
rcrl
dec
xchg
pusha
and
mov
mov
loop
enter
add
or
ss
dec
dec
mov
testb
xchg
pushf
lea
cmp
mov
push
xchg
inc
mov
mov
mov
mov
scas
inc
xlat
inc
and
sbb
cmp
sbb
std
data16
and
sub
inc
stos
mov
inc
in
cltd
dec
adc
inc
xchg
mov
aas
fsts
mov
mov
int
rolb
imul
cli
es
adcb
mov
and
push
data16
out
sarl
jno
xor
adc
inc
pusha
scas
fcmovnbe
push
mov
pop
sbb
test
xchg
pop
or
fxch
fwait
sbb
dec
rep
adc
or
rorl
out
xchg
cmp
out
in
icebp
lcall
sbb
jmp
movsl
call
cmp
addr16
lods
jne
cld
mov
xchg
sub
push
dec
mov
out
jecxz
lcall
push
mov
pushf
push
fsub
ret
pop
bound
push
std
sahf
popf
arpl
pop
scas
movsl
adc
push
add
inc
xchg
sbb
mov
hlt
xor
hlt
dec
jp
mov
fucomip
icebp
in
push
lret
dec
mov
sbb
or
jp
std
dec
out
je
adc
sub
mov
out
cmp
outsb
out
stc
xor
cmp
jg
jg
push
dec
push
pushf
adc
or
xchg
pop
push
mov
test
call
sbb
xchg
shll
mov
adc
jl
and
scas
mov
push
mov
cmp
xor
imul
mov
xchg
testb
jmp
incl
repz
fs
xchg
add
cmpsl
mov
das
xor
call
adc
jp
push
xor
inc
xor
dec
push
loop
mov
add
jp
iret
mov
xchg
mov
push
mov
xchg
add
testb
jmp
ljmp
incl
ror
xchg
sub
pop
sarb
test
or
imul
mov
rorl
loope
mov
gs
jecxz
mov
movswl
add
lret
xchg
scas
cli
jmp
lea
rorb
jne
adc
xor
mov
cli
lea
jle
mov
fistpll
dec
test
ret
decl
mov
jo
ret
inc
or
push
jmp
ljmpw
mov
ljmp
push
mov
sbb
cli
ss
call
out
pop
mov
js
scas
jl
test
roll
ljmp
icebp
mov
mov
shrb
push
mov
inc
mov
push
push
insl
test
sub
int3
adc
mov
cmp
stos
dec
pushf
push
stos
movsb
sub
js
ljmp
stos
mov
sub
cmpsb
cs
pop
add
inc
jbe
lcall
icebp
stos
call
cmp
fadds
bound
out
mov
ficompl
sub
movsb
pop
insl
inc
movsl
popf
and
and
cmp
es
decl
jbe
pop
mov
cmpsb
gs
mov
int3
xchg
sub
jl,pn
in
lcall
lds
cmpb
pop
icebp
push
and
inc
rcr
lret
ret
push
or
jb
inc
adc
pushl
cmp
mov
inc
adc
andl
fnsave
cli
push
jle
dec
lods
fstps
incl
add
pop
jae
xchg
adc
mov
shlb
add
lahf
ds
mov
dec
dec
xchg
ret
xchg
or
push
mov
inc
pop
pop
fcomip
popl
push
std
jge
sarb
sbb
push
add
cmpsb
nop
test
fidivrl
bound
lcall
rcll
jnp
mov
jo
and
xchg
in
ss
jmp
and
adc
mov
es
cmpsl
lds
out
loope
dec
push
in
dec
nop
pop
xor
popf
mov
push
das
push
fsubrs
jb
adc
aas
iret
jg
sbb
movsl
mov
dec
cmp
pusha
loope
xor
jnp
mov
rcrb
pop
mov
ljmp
mov
call
pop
inc
lret
xchg
out
clc
xchg
jno
rcll
out
inc
inc
call
sbb
outsl
aad
loopne
sbb
in
data16
add
and
sarl
pushf
cmpsb
xor
cli
xchg
leave
pop
mov
in
movsb
push
incl
icebp
xorl
fcmovnu
jo
lret
pusha
iret
cmc
cld
outsl
ds
imul
jle
nop
call
push
mulb
test
and
mov
lods
adcl
cmp
and
fmull
loopne
and
int
inc
xchg
mov
imulb
out
dec
stos
lret
in
in
rclb
push
pop
inc
xor
dec
push
icebp
push
shlb
call
mov
mov
dec
sti
xchg
and
sub
mov
dec
xchg
div
inc
pop
adc
pushl
mov
vfrczpd
scas
mov
aaa
mov
xchg
dec
lods
or
cmp
xor
add
xchg
push
mov
out
push
sbb
and
aad
fistl
lcall
add
sahf
cmp
insb
jne
sbb
pop
pop
push
or
mov
ret
in
mov
aas
jmp
dec
push
int
outsl
add
mov
jbe
decl
xor
inc
lret
xchg
xchg
outsl
mov
fwait
inc
mov
mov
mov
cmp
stos
sbb
mov
pusha
lcall
mov
dec
out
pusha
adc
xor
and
iret
sahf
xchg
mov
cmp
jle
push
cs
mov
and
lret
mov
sbb
in
jne
jno
test
cmp
lea
xchg
sar
and
movsl
sub
jg
outsl
cli
jmp
inc
aad
es
push
xor
stc
xchg
xchg
test
mov
adc
or
cmp
mov
jnp
sbb
cmp
in
aas
das
insb
insb
inc
insl
or
stc
fmul
clc
sbb
add
mov
ds
mov
xor
jbe
pop
cmc
add
cmp
ret
cmp
aam
ror
loope
es
add
mov
mov
mov
sub
outsb
and
out
movsb
or
les
xchg
popf
hlt
imul
jle
jle
push
popa
into
xchg
sti
push
js
inc
jmp
push
pop
mov
jo
rolb
and
inc
and
nop
cld
subl
pushl
sbbl
cmp
stos
cmp
sub
out
sub
lret
lods
mov
dec
xchg
dec
push
push
cli
scas
add
sbb
scas
cli
jl
hlt
adc
jbe
mov
pop
repz
aaa
cwtl
mov
pop
xor
sti
movsl
jg
scas
inc
dec
xor
adc
mov
hlt
ja
push
mov
mov
xchg
js
jbe
icebp
incl
inc
push
push
cld
jge
or
fldcw
std
data16
aaa
mov
ljmp
hlt
loop
gs
pop
scas
js
pop
jp
cmp
pushf
xchg
pushl
fnstsw
cltd
enter
xor
stc
mov
cltd
xor
sbb
cmp
fcoml
popf
or
mov
in
lcall
cmp
pop
xchg
pop
push
inc
ficoms
movq
sbb
push
pop
nop
decl
mov
das
mov
jo
adcb
out
lea
add
aad
sahf
aad
ficomps
movsl
push
mov
xchg
push
into
inc
mov
push
dec
pop
mov
push
sub
mov
aas
dec
lcall
pop
inc
push
inc
mov
mov
push
or
ljmp
test
add
sbb
lds
loop
mov
sbb
cmp
test
incl
xchg
leave
and
add
std
shlb
jae
lods
iret
jns
stc
mov
out
call
pop
push
fists
outsb
aam
inc
les
pop
jecxz
sub
jmp
fwait
mov
add
xchg
popa
int
in
adc
rcrb
jmp
sub
adc
icebp
test
lods
xchg
jae
cmp
push
add
clc
mov
decl
stos
push
imul
dec
incl
add
imul
lahf
jmp
mov
mov
mov
xchg
mov
cmpsl
dec
shrb
das
lahf
clc
push
dec
lds
sbb
call
sbb
movl
xchg
sub
push
cli
leave
sbb
pushl
fbld
inc
push
lret
ss
out
aas
sbb
xchg
mov
dec
jge
sub
leave
sti
fwait
xor
sbb
cmp
mov
in
inc
pop
fcmovu
jae
fdivrp
push
xchg
push
int
mov
popf
idiv
insl
or
call
adc
mov
ja
adc
call
inc
movsb
movsl
mov
push
cs
cld
xor
sub
sbb
ljmp
push
jbe
or
pop
fimull
inc
mov
cmp
or
mov
push
jp
call
pushf
pop
xchg
into
sub
jmp
and
sub
jno
shrl
pushf
dec
inc
push
xor
mov
dec
aaa
rcrb
lock
or
xchg
std
push
xor
xchg
popf
cld
shrl
inc
into
push
pushl
push
mov
inc
mov
add
mov
mov
xchg
int3
aas
inc
pop
std
call
pop
ljmp
imul
inc
jne
out
jno
outsl
mov
aaa
sub
into
fmuls
shrb
cld
mov
jb
push
add
incl
sbb
and
inc
pop
repnz
and
mov
inc
adc
cli
lahf
and
cwtl
jmp
dec
sbb
les
ljmp
inc
inc
add
mov
cmp
lret
sub
pop
mov
sbb
cmc
nop
pop
or
sbb
mov
popf
sub
xor
lock
daa
ljmp
sbb
incl
push
andl
enter
or
adc
push
push
ljmp
mov
mov
mov
cmp
mov
pop
cmpsb
add
inc
movsb
jmp
test
outsb
loop
sub
in
dec
mov
xor
incl
fcoms
das
clc
push
cmpsb
fsts
cmpsb
cmp
pop
test
adc
mov
in
xlat
imul
rcrb
pop
ljmp
sar
lods
out
je
add
mov
adc
mov
bound
pushl
pop
xor
dec
push
push
fcos
fdivp
jnp
add
std
pop
lcall
push
sub
cs
jg
cwtl
aad
lcall
xchg
mov
mov
cmp
dec
das
clc
cmpsl
movsl
mov
decl
hlt
jg
sbb
call
scas
pop
push
mov
dec
pop
pop
add
mov
mov
jae
lret
leave
nop
sbb
fcomip
ret
sub
jbe
ret
cmpsl
aaa
inc
pop
cmc
cwtl
jmp
mov
ret
fdivs
sub
fwait
adc
or
mov
cmc
or
out
clc
mov
xor
cmp
neg
xchg
inc
into
je
lret
jb
pop
sar
incl
loope
cmc
cld
push
push
adc
leave
sub
mov
push
xchg
subl
fs
jg
incl
leave
sub
and
incb
lret
dec
xchg
inc
jl
call
arpl
in
shrl
mov
call
push
or
cltd
xor
jnp
jmp
pop
aas
adc
je
rcrb
xchg
cmpsl
lock
dec
or
stos
loope
and
call
mov
xchg
mov
add
shlb
test
loope
aas
inc
mov
jge
push
clc
call
mov
push
es
push
jmp
and
pop
nop
incl
dec
fistps
lock
sbb
daa
mov
ljmp
xchg
lock
dec
dec
jmp
popa
loopne
mov
xchg
stc
test
mov
jp
pop
aam
mov
aam
dec
hlt
mov
mov
bound
pushl
rorb
dec
xor
jecxz
inc
sub
aad
mov
pop
arpl
ljmp
daa
dec
mov
mov
cmp
push
out
loopne
and
lcall
sbbb
outsb
lcall
fdivrs
loopne
and
mov
mov
cli
pop
lret
push
add
pop
icebp
outsl
clc
add
pushf
xchg
hlt
xor
and
pop
mov
jmp
push
movsl
push
inc
scas
jnp
ja
aas
push
repnz
mov
incl
rcll
roll
repnz
xor
fidivs
add
ljmp
cmp
ret
movsb
les
jo
jno
adc
jmp
movsl
xor
pop
pop
call
dec
in
dec
rolb
outsl
pusha
mov
jecxz
ficomps
stc
mov
jl
flds
inc
popf
rorb
cmpb
fwait
cli
movsl
testb
out
outsb
cltd
repz
pop
popf
pop
mov
pushl
add
dec
pop
push
jp
xor
jl
in
jo
mov
iret
std
or
loope
movsb
cmp
idivb
outsl
clc
out
icebp
sub
gs
inc
pusha
cltd
ljmp
lods
iret
inc
iret
sbb
enter
lret
cwtl
outsb
divl
sub
mov
inc
les
xchg
push
dec
cli
or
add
mov
shll
test
dec
in
lcall
xchg
subb
push
fnsave
into
leave
mov
or
loopne
xor
loop
lcall
jp
pop
lcall
ret
inc
lret
sub
xchg
adc
cmp
cld
pop
mov
and
les
es
cmpsb
loop
adc
cmp
ljmp
call
adc
leave
xor
jle
mov
sub
mov
jg
mov
aad
xlat
inc
sub
add
sar
call
mov
aam
xchg
repz
ds
jle
lret
sub
frstor
hlt
inc
xor
jns
mov
or
sbb
fnstsw
lods
mov
lret
ja
ret
pop
movsl
mov
aad
add
ljmp
test
mov
pop
outsb
movsl
adc
push
sub
sub
incb
jp
sbb
xor
xchg
shll
test
jl
add
stc
mov
dec
dec
inc
out
and
pop
push
outsb
jmp
mov
sbb
pushl
loope
test
jle
jmp
mov
movsl
xor
mov
mov
jge
addb
lcall
addr16
jl
xor
sbb
icebp
mov
mov
or
mov
mov
pop
fwait
mov
orb
sub
xchg
fwait
mov
test
in
inc
stos
fxam
loope
ret
fs
push
adc
jne
cld
adc
jne
and
mov
mov
xchg
test
cs
pushl
js
inc
jmp
repnz
sbb
xchg
jne
hlt
outsb
jns
and
pop
jbe
incl
xlat
inc
sbb
fdivrs
ret
xchg
and
inc
pop
js
inc
jg
sub
pop
fwait
out
mov
mov
xchg
sahf
subb
lea
push
inc
ljmp
or
int
push
and
lea
out
sbb
lds
pop
dec
decl
mov
jp
loope,pt
call
ljmp
cli
push
jg
lods
fisubrl
inc
jnp
aam
ret
sbb
insb
stos
dec
fnstcw
or
or
ljmp
mov
push
scas
adc
test
mov
lods
cli
jo
sbb
test
inc
and
aaa
sub
pop
add
xor
push
mov
push
pushl
out
mov
adc
jg
paddw
jge
std
pop
mov
repz
ja
mov
cmp
jmp
cli
add
push
dec
aam
in
push
insl
inc
push
jge
popa
iret
or
mov
mov
les
outsb
ljmp
into
outsb
or
incl
pop
stos
sbb
js
add
cmp
jmp
jb
xor
add
mov
cmp
jnp
xor
pop
je
insl
cltd
inc
daa
cmp
dec
pop
mov
rcrl
mov
imul
leave
fwait
mov
sbb
inc
mov
cmp
sub
mov
xchg
mov
mov
mov
popf
xor
fdivr
stc
shll
xor
movsl
dec
fisubl
mov
pop
pop
xor
scas
pop
in
test
jecxz
fcomip
and
pushf
and
sbb
lock
hlt
ss
xorl
stos
dec
add
ljmp
jb
loop
int3
jle
mov
xchg
mov
xchg
pop
xor
bound
or
pop
pop
into
sbb
cmp
and
popf
dec
adc
mov
push
add
mov
js
sub
out
push
cmp
daa
ficoml
jmp
sub
xchg
lahf
stos
sahf
std
push
sub
add
je
dec
ss
decl
xor
inc
insl
shlb
mov
std
sbb
inc
xor
std
insl
ja
pushf
lret
int
mull
fisubrl
in
lods
scas
out
sahf
dec
out
jae
xor
aaa
push
pop
jg
inc
adc
xchg
loop
bound
decl
ss
pop
cmpsl
out
aam
lds
aaa
mov
adc
pushf
in
outsb
xorl
adc
pusha
insl
push
cwtl
dec
imul
adc
cmovns
decl
imul
cltd
in
adc
aaa
mov
dec
fsubl
push
mov
pop
nop
mov
jg
inc
xor
push
dec
push
int
mov
leave
jno
add
inc
int3
stos
push
mov
call
ror
inc
pop
inc
lods
dec
pop
test
iret
setno
jge
add
inc
cmp
call
in
dec
xchg
adc
cmp
lds
add
fs
add
daa
xlat
std
cmc
push
or
scas
aas
pop
inc
jno
in
xor
xchg
and
ds
ljmp
subl
aas
cmpsb
out
imul
stc
mov
or
scas
cli
scas
pop
jge
pop
lret
outsb
adc
xchg
xor
dec
adc
inc
frstor
fucom
insb
or
divb
sub
jecxz
xchg
push
cld
lcall
fists
mull
cmp
fwait
push
mov
int
add
data16
lcall
sub
mov
mov
js
jbe
lret
ret
xchg
adc
dec
popf
inc
add
ret
pushl
std
cwtl
je
pushf
loop
addb
lds
inc
or
and
jg
sti
jb
in
scas
xor
inc
lds
fs
sub
mov
mov
ret
mov
lcall
loope
sbb
and
fisubl
repz
popa
cmpsl
push
push
mov
cli
incl
pop
push
xor
les
enter
fmull
inc
out
mov
cmpsb
arpl
vpor
hlt
ljmp
jo
cli
mov
sbb
je
inc
fisubs
xchg
ljmp
pop
pushf
and
mov
or
dec
adc
add
jns
or
jmp
ficoms
add
sbb
mov
push
xchg
out
leave
and
pushl
lret
std
pop
test
in
movsb
addb
jmp
orb
inc
cwtl
sub
insb
add
add
sub
int
pop
orb
nop
das
aam
daa
aad
cs
and
adc
mov
push
insb
push
inc
or
sbbb
ja
push
xor
jno
jo
jnp
lret
addb
inc
cs
or
adc
je
cld
outsb
dec
ja
and
jne
jo
imul
mov
jp
ds
rol
add
adc
sub
aam
orb
outsb
adc
leave
xchg
add
sub
js
xor
add
sar
fists
insb
push
fildll
push
outsb
popa
jo
push
jge
rolb
loope
pop
rcr
mov
and
adc
sub
dec
mov
dec
imul
adc
pusha
lcall
mov
xor
sub
sub
add
add
push
push
and
dec
jne
js
aad
inc
and
addr16
nop
add
push
popa
and
sbb
jns
sarb
fisubrl
jb
jbe
enter
cmp
xchg
xor
sbb
add
ret
out
xchg
sbb
push
jge
jecxz
xchg
jo
test
loopne
out
add
mov
add
inc
jl
loopne
inc
ss
sub
imul
aas
sbbl
sub
mov
inc
or
mov
pop
push
outsb
lea
imul
mov
insl
sbb
rcll
pop
jl
jae
mov
jl
sbb
bound
mov
push
mov
bound
ds
insb
jne
subl
lock
jne
xchg
adc
xor
sub
sbb
pop
lds
jo
inc
push
fildl
enter
insb
movsb
sbb
addr16
jae
insl
subl
sarl
dec
push
gs
cmp
jns
mov
inc
jae
adc
push
fadds
push
hlt
fs
das
inc
mov
out
cmp
cmp
jae
push
insb
xor
jo
xor
pop
inc
flds
xchg
add
push
jo
packuswb
in
pop
lods
push
pop
pop
mov
popa
sbb
pop
pop
call
pop
pop
fwait
inc
stos
mull
dec
popa
and
inc
das
sbb
inc
add
add
popa
icebp
push
roll
and
jno
adc
pop
pop
fsubrl
pop
push
gs
mov
xorl
ret
jb
fs
movb
push
rcrl
fstps
jmp
insl
jp
inc
in
sbb
fidivrl
jae
in
ficoml
pop
mov
mov
adc
jb
mov
or
pop
mov
dec
jb
sub
push
xlat
fs
xchg
lods
xor
je
ja
mov
add
pop
rcll
and
mov
pop
shll
sbb
and
inc
popa
es
mov
ret
popf
insb
sbb
xchg
xor
xor
pusha
push
and
cmpl
inc
xchg
rcl
or
adc
outsl
jns
int
rcrb
add
sbb
gs
jbe
inc
out
sbb
mov
aad
add
fwait
aad
xchg
inc
je
push
adc
sti
add
push
sbb
jo
mov
sbb
sub
and
sub
jno
insl
adc
jo
add
and
add
mov
adc
jns
push
cmp
inc
inc
stos
xor
or
loope
xor
mov
or
cmp
stos
push
adc
push
pusha
cmp
xchg
lock
jne
inc
push
or
push
mov
jo
jae
and
add
xor
or
mov
or
mov
adc
cmpl
mov
outsl
inc
seta
pushf
inc
push
mov
sub
jo
loopne
cmp
movsl
rclb
pxor
cmp
aaa
test
lds
jmp
lods
rorl
add
add
stc
fisubl
and
and
loopne
sahf
dec
gs
push
inc
subb
xchg
pop
dec
stos
inc
dec
push
mov
inc
jne
lock
xor
adc
inc
arpl
sbb
sbb
stos
push
inc
xchg
add
insb
jl
dec
fstl
mov
jg
mov
testl
mov
addr16
inc
sbb
in
andb
dec
xor
jo
cmp
and
cmp
mov
sbbl
mov
xor
add
fildl
sub
insb
notl
sahf
sbb
pop
in
imul
adc
add
ret
lods
popa
fbld
sub
mov
jmp
adc
fs
inc
push
outsl
orb
popa
cmpsl
sbb
inc
jb
and
push
push
fwait
sbb
inc
sub
cmp
inc
inc
inc
push
mov
pop
arpl
fwait
icebp
mov
imul
mov
scas
sbb
mov
js
insb
mov
inc
insb
jle
nopl
in
push
jecxz
mov
xor
xchg
and
dec
jae
movb
nop
popf
push
xchg
mov
lods
pusha
pushf
jne
push
add
lods
push
imul
sbb
and
mov
enter
arpl
xorb
and
xor
xor
xor
push
pop
xor
sub
push
not
addr16
enter
mov
push
push
adc
and
and
pushf
or
cmp
sbb
jnp
or
dec
outsb
dec
fbld
add
int
ss
sar
pop
add
add
mov
cmpsb
xor
sub
dec
imul
imul
push
inc
shll
adc
in
and
js
cld
inc
sbb
subb
sub
and
inc
clc
outsl
bound
movsb
bound
add
push
ds
inc
jb
add
call
jae
push
leave
dec
insl
insb
insl
inc
shll
mov
xchg
xchg
imul
bound
sbb
enter
dec
loopne
dec
rcl
xchg
push
bound
icebp
and
and
and
loope
adc
add
scas
lret
mov
push
pop
push
aaa
cmp
stos
roll
push
cmpsl
nop
mov
shrb
in
cmpsl
jb
andb
adc
mulb
or
inc
lea
in
lret
push
inc
fildll
and
pop
dec
inc
pop
lret
iret
mov
enter
mov
subb
and
cmp
je
andl
sub
idivb
and
cwtl
fidivs
push
insb
mov
testb
adc
xchg
xchg
add
add
ret
lret
repz
jge
fimuls
dec
pusha
and
dec
xor
enter
push
and
lss
pushf
insb
adc
in
mov
imul
inc
xchg
pusha
pusha
jno
ja
push
inc
movb
cmp
push
mov
xchg
adcb
js
addr16
insl
pop
push
dec
mov
mov
sarl
cmp
mov
push
inc
dec
js
sub
and
test
or
mov
nop
sub
or
add
fcoms
dec
out
outsb
sbb
pop
arpl
xor
sub
cmp
sub
jbe
fmull
xchg
icebp
sbbl
or
push
cmp
add
mov
test
insb
and
dec
popw
lea
loopne
inc
ss
add
ret
jbe
xchg
outsl
add
pop
pusha
aad
xor
or
add
roll
shrl
push
fs
mov
outsl
mov
popa
xor
ja
or
push
addr16
dec
add
pop
fldt
xchg
sbb
popl
add
and
inc
push
mov
push
addr16
subb
fs
lock
out
adc
ljmp
pop
das
movsl
and
pop
xchg
scas
add
mov
push
sub
rorb
sub
push
js
es
push
mov
xchg
jo
add
jmp
iret
lcall
sbb
adc
pop
fwait
inc
mov
push
test
xchg
add
es
subl
or
or
int3
add
jp
xlat
xchg
push
add
insl
and
cmp
pop
fiaddl
or
sub
push
add
jo
sbb
pusha
lods
cmp
mov
dec
ret
dec
js
pop
cs
rol
and
lret
add
loopne
mov
jb,pn
popa
xor
add
xchg
fcomps
mov
inc
cs
mov
or
pop
dec
add
push
mul
outsb
inc
rcrb
jo
push
lahf
add
es
jg
and
inc
inc
add
dec
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
