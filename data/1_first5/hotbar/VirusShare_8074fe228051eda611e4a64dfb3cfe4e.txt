divl
in
mov
mov
add
xor
lea
push
call
int3
cs
mov
or
lock
call
test
je
push
push
pop
movsb
mov
test
inc
out
pushl
cmp
pcmpeqd
cmp
jae
dec
movzwl
std
fistpll
jl
add
sbb
xor
jmp
and
neg
sbb
and
pop
pop
pop
ret
fwait
popa
outsl
jmp
or
call
push
push
sarl
addr16
or
add
pop
pop
push
push
mov
push
xor
mov
push
mov
xor
mov
inc
add
cmp
fisubrl
push
sahf
push
mov
idivb
xchg
adc
push
xchg
mov
xchg
push
sbb
cld
cmp
test
jne
inc
pushl
add
mov
jmp
pushl
ja
fs
lea
or
lock
inc
adc
rcll
test
jg
add
cs
add
pushl
sub
mov
push
js
xchg
add
rorl
lock
js
add
cld
add
add
test
fldz
or
mov
ret
mov
add
adc
inc
lock
cmp
je
cmpl
push
jae
shr
sbb
outsb
push
or
std
incl
jmp
mov
push
mov
and
imul
cmp
pop
inc
cmpl
cld
pop
push
mov
insb
repnz
push
pop
pop
out
mov
jge
jne
push
call
xor
add
shll
std
cltd
dec
push
jg
lcall
mov
mov
jns,pt
xor
mov
cmp
jl
inc
xor
loopne
lock
add
pop
jmp
ret
dec
loopne
rclb
enter
mov
push
sbb
insl
ret
outsb
outsl
pop
mov
pop
lock
les
sub
mov
cmpsb
fstps
jge
push
add
push
and
je
sarl
pop
mov
idivb
enter
iret
jl
add
push
icebp
mov
cmp
ja
add
jmp
mov
pusha
add
add
adc
stos
into
cmp
jg
mov
adc
add
add
or
push
cmp
push
add
or
sbb
push
clc
or
cld
mov
mov
pop
ret
pop
mov
sarb
decl
push
and
jecxz
sbb
pop
mov
xor
inc
sub
subl
jle
enter
sbb
cli
add
add
pop
and
jmp
cld
mov
pusha
rcrl
insl
mov
push
mov
outsl
clc
lds
cmp
lea
repnz
pushl
fmuls
outsl
pop
sti
dec
jmp
xor
aad
jle
cmp
stos
js
pop
mov
pop
add
pop
leave
pop
movsb
ret
ljmp
pop
mov
or
or
je
push
dec
mov
add
ljmp
add
js
cmp
fcmovnbe
lods
jmp
pop
jo
pop
push
add
aaa
divl
iret
jb
mov
xor
add
jmp
rorb
mov
lahf
lcall
pop
jg
lcall
dec
movsb
js
add
arpl
push
sbb
divl
rcrb
sti
je
cmpsb
push
add
inc
add
cmp
ljmp
push
adc
in
cmp
push
sub
xchg
int3
jle
insb
push
push
jbe
lock
push
inc
inc
sbb
push
js
dec
pop
add
or
add
repz
cmpsb
mov
aaa
in
dec
xchg
push
sub
or
cli
je
push
and
fwait
es
adc
dec
ficomps
push
mov
cmp
fmul
mov
call
cwtl
add
mov
ret
inc
push
xchg
pop
adc
sub
mov
lret
lock
mov
mov
jnp
cld
lods
jmp
jle
stc
cmpl
jle
in
pop
divl
jle
pop
jmp
cmp
jge
rolb
stc
pusha
inc
jle
add
pop
cltd
sub
sar
add
mov
push
pushl
ret
das
push
stos
push
cmp
dec
inc
lea
cmp
lock
faddl
mov
inc
and
jmp
aaa
cmp
jne
add
add
or
icebp
roll
inc
adc
dec
jo
clc
mov
push
int
stc
pop
rcr
rcrb
loop
jge
test
jle
xorb
pop
cmp
test
js
ret
mov
jno
pop
push
and
add
ljmp
andb
loopne
add
push
sbb
dec
fs
clc
lock
cld
push
or
jns
das
jmp
push
jbe
rcrl
and
lea
push
movl
loopne
adc
mov
sub
mov
int3
jge
in
pop
adc
push
sub
pop
add
xor
shlb
roll
push
rcr
push
jge
enter
ss
pop
pop
push
jo
xchg
clc
mov
push
testb
lcall
pop
adc
mov
mov
es
movsb
mov
pop
lea
lret
sub
or
dec
cmp
push
add
adc
pop
cmp
enter
mov
pop
or
adc
jae
ret
or
dec
or
lahf
push
test
jecxz
adc
or
pop
push
add
xor
cmpsl
mov
or
cltd
or
emms
mov
or
je
mov
adc
cmp
and
push
je
xor
mov
push
je
jge
imul
loopne
pop
hlt
out
jmp
das
mov
push
dec
js
fcmovne
or
rclb
inc
and
in
jmp
or
shl
leave
aaa
or
push
enter
pop
push
jl
movl
insb
pushf
add
popa
xor
loop
add
jge
add
jp
stc
mov
pop
mov
xor
jo
cmp
ljmp
std
or
cmp
je
orl
add
cmp
jae
push
ret
sub
addr16
lcall
push
idivl
pop
add
add
mov
ds
mov
or
xchg
xor
dec
hlt
xchg
test
aas
add
mov
mov
jl
push
push
rcr
out
inc
aad
adc
pop
push
bound
inc
mov
test
js
mov
add
pop
sub
sbb
adc
add
sbb
pop
or
popa
lret
movlps
mov
xchg
cs
adc
sub
in
push
xchg
hlt
push
pop
mov
sub
pop
sub
leave
or
les
sub
ja
movsl
cmp
push
cmp
mov
cmp
ret
pop
dec
sbb
fadds
in
lret
ret
lahf
test
jbe
es
jne
sbb
mov
inc
mov
sub
and
clc
push
or
loope
sbb
mov
cmp
or
sbb
add
mov
mov
mov
in
ja
jl
mov
mov
adc
cmp
jle
dec
sub
cmp
jle
jge
mov
icebp
jne
or
std
add
jmp
push
mov
mov
add
mov
dec
leave
pop
adc
adc
cmp
lea
lock
xor
repz
test
test
jae
or
xor
out
ss
fdivrl
mov
xor
rclb
std
adc
xor
or
out
push
mov
add
data16
jbe
mov
cli
aaa
sbb
cmp
jb
lea
aam
test
popf
cmp
push
aaa
xor
addb
or
incl
in
scas
shr
in
in
call
in
sbb
push
jecxz
sbb
cmp
push
das
jl
imul
jne
sub
arpl
cmp
inc
test
push
adc
cld
scas
mov
sub
jl
fs
jb
add
pop
pop
and
push
jp
lret
sbb
sbb
cmp
out
call
lea
je
add
pop
lock
mov
inc
scas
pop
cld
sub
push
imul
inc
lock
jg
fimuls
pop
fisttps
jle
add
add
xor
cmp
jmp
jmp
mov
jmp
jge
out
out
sub
sub
add
into
push
push
add
push
and
cld
lcall
fimull
cmp
lock
add
sarb
loope
subb
test
iret
push
insl
inc
inc
in
jb
inc
xor
push
into
mov
out
orb
or
inc
jne
stc
popa
aad
push
or
mov
cmpsb
jno
mov
adc
fsub
nop
push
pop
outsb
dec
je
xchg
push
in
lcall
daa
cmp
push
xor
sbb
xchg
push
pushf
aad
mov
push
test
jmp
xor
nop
out
push
mov
cmp
xor
and
pushf
out
push
out
adc
dec
in
es
aas
mov
push
movsb
push
jl
pop
xor
call
mov
js
pop
and
sub
je
push
in
push
sbb
xchg
push
push
sub
jecxz
fcoms
adc
jle
and
shll
adc
outsl
ss
adc
jns
rorl
test
hlt
xor
cmpl
je
in
or
pop
or
and
loopne
mov
inc
adc
cs
lods
pop
icebp
adc
adc
jb,pt
pop
lea
lods
cmp
push
dec
pop
mov
aaa
add
push
cmp
aaa
cmp
loop
push
push
push
add
ja
adc
cld
call
or
cli
jne
jnp
jo
notb
out
cmp
jo
inc
loope
arpl
adc
mov
in
dec
pushf
adc
idiv
and
jl
pop
mov
lea
cmp
jne
push
push
fcmove
mov
push
push
xchg
xorb
es
jne
xchg
adc
push
repnz
cwtl
fwait
xor
jmp
mov
mov
mov
sub
xchg
out
lcall
fisttpl
push
sub
pop
mov
cli
sbb
sti
jle
addb
out
pop
stc
scas
or
xchg
sub
push
cmp
dec
mov
pop
cmp
rorl
movsbl
pop
adc
cmp
cli
lock
shll
adc
stc
pop
pop
xor
fnstcw
sub
mov
xor
ret
pop
push
adc
in
sbb
inc
cs
push
sarl
mov
push
fdivs
enter
mov
idivl
aam
rorb
mov
jmp
add
or
add
pop
and
add
and
or
out
jnp
hlt
gs
inc
cld
mov
adc
add
stos
jle
lcall
pop
push
jmp
push
addb
dec
loop
and
mov
ljmp
fisttpll
rolb
lods
jnp
pop
adc
inc
and
clc
cli
clc
inc
pushf
test
pop
xchg
mov
cmp
jne
cmp
je
push
xor
inc
cmp
das
addr16
sbb
adc
sbb
xchg
xor
pop
fidivrl
or
movsb
mov
fs
jmp
push
mov
clc
and
das
cli
mov
jo
sub
mov
inc
pop
loopne
aas
fwait
mov
sub
lea
push
lea
push
inc
push
iret
cmp
push
adc
pop
call
test
add
test
xchg
inc
pop
add
cmp
cs
in
inc
add
leave
dec
mov
js
in
or
xchg
mov
xor
cmc
in
mov
rorb
ret
push
or
jns
ljmp
fs
jne
mov
cmp
jb
jo
je
clc
imul
add
add
lock
test
sbb
lea
jne
fistpl
dec
push
cmp
dec
push
push
push
stc
cltd
mov
inc
cmp
jle
test
or
je
mov
mov
inc
add
push
push
inc
or
xor
sub
pop
not
pop
mov
je
sub
pop
add
pop
inc
sub
sbb
push
mov
sub
xor
and
ja
and
cmp
add
jmp
sub
inc
jl
aas
aam
jge
movzbl
push
out
mov
add
push
ret
pop
ja
nop
xchg
fdivr
push
lret
lock
sbb
imul
lret
out
add
cmpb
sub
icebp
mov
and
cmp
inc
push
pop
or
pop
test
push
mov
sbb
jp
shlb
addr16
push
aad
or
jbe
fsubrs
xchg
loop
pop
cmp
jbe
sub
mov
cvtpi2ps
add
sbbb
test
add
pop
sbb
out
loop
add
sub
jae
or
cmpb
outsb
rcl
adc
fmuls
sbb
aaa
in
ds
je
imul
push
fisttps
sub
mov
and
mov
int
lods
sbb
nopl
xor
adc
pop
mov
pop
ret
aam
add
rcll
test
and
cmp
shr
das
nop
sti
test
cld
sub
jmp
push
mov
inc
icebp
inc
mov
cmp
fdivs
jns
insl
mov
add
dec
xchg
test
es
and
jg
dec
cmpsb
pop
je
lea
fmuls
call
xor
mov
aas
in
lea
aaa
or
stos
sub
inc
xchg
jns
inc
adc
jp
cmc
ret
mov
push
leave
in
pusha
mov
shlb
icebp
std
rolb
je
adc
xorb
lret
adc
pop
or
out
or
dec
pop
jmp
mov
ljmp
insb
xlat
add
xor
add
js
sbb
pop
mov
sbb
pop
or
lods
daa
sbb
es
nop
adc
pop
hlt
movb
fstpt
in
fwait
outsb
mov
cmp
cmpb
push
fdivrl
lock
and
aaa
incl
add
std
sbb
or
jl
enter
pop
je
sbbb
pop
rclb
push
in
rorl
add
inc
sahf
inc
aad
mov
in
or
movsb
rorb
adc
push
stos
clc
push
lea
mov
push
aas
aam
cmp
jne
xchg
jnp
and
push
jmp
mov
rclb
pop
sti
or
rcrl
ret
repz
dec
mov
hlt
lods
inc
imul
les
rolb
fcom
test
dec
adc
loopne
pop
repz
push
cmp
mov
cmp
mov
sbb
andl
sbb
outsl
mov
add
loopne
inc
and
je,pt
call
jbe
push
rorb
sbb
cmp
je
jne
mov
or
jge
into
sub
pop
and
inc
scas
sbb
cmp
rclb
push
outsb
rcrb
into
popf
sbb
xor
fiaddl
mov
push
sub
dec
and
mov
xchg
divl
dec
into
add
jne
aaa
add
xor
and
jmp
cmp
cmp
je
pusha
or
out
mov
mov
add
jbe
clc
add
mov
add
in
cmp
jne
push
call
mov
and
test
imulb
sarl
push
jne
push
push
and
fwait
lock
or
loop
nop
rorl
sub
loopne
enter
jp
lock
in
jmp
cmpsb
loopne
push
sbb
cmp
mov
adc
call
aas
jbe
cmp
out
in
lcall
adc
pop
sahf
ret
xchg
je
cwtl
or
jae
in
pop
push
fimull
jo
inc
mov
or
mov
shll
imul
imul
push
xchg
lods
fidivs
data16
or
inc
inc
pop
and
roll
rorb
inc
shl
jmp
push
sub
push
aam
sub
dec
jns
or
mov
add
fcoml
xchg
mov
push
lea
sbbb
inc
lods
pop
xor
js
and
orl
sbb
mov
inc
sbb
sbb
xchg
mov
lds
lea
push
aad
or
ljmp
loope
xor
shlb
in
push
pop
push
call
sbb
mov
pop
inc
sub
and
adc
mov
data16
or
inc
sub
and
cmp
jb
cmp
ja
loop
xor
leave
rcrl
imulb
mov
push
cmpsl
push
push
and
or
fcompl
je
inc
ret
mov
fwait
pop
or
push
inc
adc
xchg
mov
cwtl
clc
jg
jecxz
into
loopne
je
mov
test
je
ljmp
in
xor
filds
fistpll
jne
cmp
addr16
je
cmp
jne
mov
add
xlat
repz
add
pop
dec
lea
add
jns
adc
xor
push
pusha
sar
aaa
nop
lock
testb
je
testl
mov
cld
cmp
jbe
lock
sti
incl
add
inc
cmp
je
sub
inc
jmp
inc
and
and
shr
mov
cwtl
jbe
sbb
add
ss
mov
mov
cmp
je
xchg
out
std
mov
lea
sahf
clc
pop
fnstenv
xchg
sbb
hlt
and
scas
int
popf
fiadds
andl
mov
notb
cli
mov
insb
jne
dec
outsl
sbb
adc
cmpsb
movb
sub
or
ja
mov
add
sub
inc
mov
lahf
jbe
push
mov
cmpsb
add
push
jp
inc
cld
push
sbb
jo
add
xor
loop
push
sbb
inc
sub
arpl
and
andl
lea
cli
push
cltd
mov
mov
data16
mov
mov
aaa
lcall
add
rol
mov
imul
jmp
pushf
aas
lret
lds
jne
and
hlt
inc
push
test
data16
fs
jne
xor
push
jo
dec
lock
mov
pop
sub
or
jo
pop
jae
mov
jmp
dec
or
xor
or
test
sub
lea
lds
or
push
add
adc
cmp
xchg
or
outsb
cmpsb
pop
push
lret
cmp
rorb
cmp
and
outsb
outsb
outsb
and
es
sub
sub
jae
insl
jle
pop
or
jl
or
adc
je
lea
addl
sar
dec
lea
cmp
jbe
mov
jo
clc
pop
popa
test
xchg
and
add
jl
jle
je,pn
test
jne
je
insb
and
test
add
jle
push
dec
xor
pop
inc
and
je,pn
inc
jb
mov
sub
mov
mov
pusha
lods
decb
add
push
mov
inc
mov
jb
je
scas
mov
mov
inc
xor
or
push
hlt
loop
jae
add
inc
and
and
add
xor
push
pop
push
movl
in
sub
mov
mov
std
and
jbe
cmpsl
sarl
test
loop
xor
jp
cs
dec
sbb
in
shl
clc
jle
mov
bound
lock
mov
cmpsl
or
cmp
ja
adc
jmp
jae
xchg
dec
fwait
addb
lea
movb
pusha
inc
pushl
jo
push
and
xchg
add
mov
jl
subl
pop
cmp
mov
add
push
push
jno
pop
das
mov
or
xchg
sbb
pop
cwtl
sbb
xlat
pushf
xor
inc
movsb
mov
and
dec
sub
mov
addr16
outsb
stos
cld
pushf
insb
sub
into
inc
and
loopne
dec
lcall
pop
movsb
js
daa
out
cmp
je
mov
arpl
lahf
and
push
movsb
fstp
push
push
adcl
add
mov
sub
push
adc
fisttps
xorb
and
and
cs
cmp
sub
and
mov
outsb
sub
or
add
xor
pop
xchg
xor
pop
xor
pop
rcr
inc
test
leave
mov
push
inc
clc
and
sbb
jbe
push
fidivrs
sbb
pop
jo
in
and
stc
push
sbb
mov
stc
mov
inc
test
adc
sahf
imul
sbb
jmp
idiv
xorl
lock
mov
mov
movsl
lock
or
add
pushl
decl
cmp
into
js
dec
iret
and
adc
pusha
jb
adc
loopne
data16
loopne
xor
cld
push
cmpl
fmull
pushf
test
lock
insb
jnp
xchg
mov
leave
xchg
cmpsl
mov
in
sub
push
push
imul
bound
push
pop
jbe
rolb
cmp
push
cld
fiaddl
cltd
test
cmp
int3
jmp
and
and
cmp
fstps
cmpb
pushf
jne
fstl
mov
cmp
ss
xchg
and
pop
test
and
inc
inc
push
mov
popa
cmp
loop
mov
push
xor
cmp
cli
cmp
lods
add
fadds
jb
mull
or
sbb
mov
jnp
push
fs
sbb
std
sti
cmpsl
test
mov
mov
movzwl
lret
mov
das
sub
add
cmp
jne
imul
push
test
push
sbb
lret
pop
jne
mov
test
dec
pop
pop
mov
movl
inc
add
cmpl
push
nop
jl
movsl
fisttps
std
rclb
inc
cmpl
lock
or
inc
in
add
test
loopne
jmp
cmp
je
js
cmp
or
xor
ljmp
loope
mov
inc
push
repnz
cmp
jmp
mov
test
mov
andl
faddl
sub
test
dec
pushf
pop
sbb
lret
in
hlt
push
ret
loope
ficoms
jbe
icebp
movsb
cmp
sbb
sub
lcall
mov
pusha
lcall
inc
loop
loop
mov
push
adc
or
jne
dec
stos
push
pushf
pop
je
insb
dec
push
pop
pop
sar
jmp
cmp
jne
js
test
es
std
aam
loopne
sahf
addr16
jmp
mov
push
mov
ret
aaa
leave
sbb
mov
sbb
sbb
mov
out
lea
jmp
aaa
cmp
xchg
test
scas
mov
mov
pslld
rclb
mov
loopne
aas
int3
push
mov
divb
movl
popf
and
xor
jnp
insl
in
adc
pop
je
imul
popf
mov
fldenv
xlat
shrl
or
add
dec
je
add
pusha
subl
push
sbb
xchg
push
cli
orl
fmull
xor
jg
xchg
cmp
inc
mov
mov
mov
inc
or
or
rol
cmp
sub
test
adcb
push
xor
pop
push
push
cmp
add
in
movsl
push
mov
xchg
cmpsb
pop
cmp
sub
dec
cmp
add
sbb
ds
out
loope
cmp
lock
mov
xchg
mov
sub
xor
xor
cmp
add
jmp
rolb
mov
sbb
pop
xchg
pop
or
das
push
push
testl
mov
shlb
inc
and
inc
and
push
push
lock
notb
notb
aad
push
fdivs
dec
jmp
push
mov
adc
ss
dec
or
push
add
int
cmpsb
adc
clc
push
add
inc
sbb
xlat
jb
or
inc
adc
inc
push
adc
cmp
test
adc
adc
cmp
xor
push
cmpw
jne
or
cwtl
hlt
decl
add
daa
mov
jmp
pushl
jecxz
sub
lods
mov
ljmp
fisubrs
jmp
mov
sub
push
jp
push
pop
jmp
mov
mov
stc
sub
enter
jg
adc
dec
jmp
mov
mov
mov
sub
or
jae
mov
in
or
fnsave
lock
fistpll
lock
mov
clc
add
xchg
lods
movsl
pop
push
xor
imull
hlt
test
mov
lea
scas
jecxz
insb
popf
inc
outsl
sub
fcoml
mov
adc
sti
mov
cld
sbb
inc
cmpl
push
push
sti
xchg
fsub
ret
cs
push
mov
lods
dec
testb
cmpb
call
sub
insb
cmp
jge
sti
test
lods
lds
je
push
mov
ja
in
ss
pop
mov
mov
mov
add
jo
jne
mov
cmpsb
lock
mov
lods
sbb
mov
movsl
adc
sbb
jbe
push
sub
adc
rcl
pop
mov
test
and
imulb
or
xor
add
clc
cs
cmpsb
in
in
scas
mov
cmp
ljmp
fildl
pop
jbe
jbe
or
ds
loope
pop
sbb
enter
test
je
or
daa
dec
add
into
push
punpckhwd
sub
js
out
inc
mov
add
add
or
nop
cmp
or
push
je
jg
push
lea
push
push
add
inc
lahf
push
test
cmpb
clc
jne
push
in
push
call
pop
or
mov
sub
das
rcr
xchg
sub
mov
je
divb
nop
loopne
stos
mov
inc
les
or
jns
add
in
lea
bound
xor
and
jmp
jg
mov
leave
mov
lea
imul
pop
mov
arpl
push
mov
stos
sbb
pop
and
inc
mov
ret
pop
lock
or
add
cmp
je
or
jb
imul
mov
loop
xlat
push
push
and
mov
shr
js,pn
outsl
sbb
and
sub
mov
addb
je
mov
enter
sub
aaa
aam
hlt
xchg
dec
shl
sbb
add
cs
shr
pop
das
xchg
mov
push
call
push
popf
dec
hlt
test
mov
fsubrl
add
test
je
jo
push
aam
je
out
xchg
mov
inc
scas
aad
inc
pusha
scas
xchg
xor
jmp
mov
and
mov
scas
push
dec
cld
and
pop
jl
mov
movsw
ret
pop
mov
fimull
and
mov
das
add
or
andb
jo
sub
cmp
fdivs
test
in
adc
dec
sbb
shl
sbb
inc
push
cs
xor
fstpl
test
pusha
es
inc
or
push
je
adc
add
and
mov
movsl
push
inc
pop
cwtl
jge
popa
dec
xor
clc
jmp
sub
cmp
cmc
jbe
lock
push
dec
push
repnz
bound
pop
add
mov
lret
inc
in
stos
add
mov
or
sbb
je
push
jmp
lcall
push
cmc
adc
mov
in
sbb
or
mov
jb
js
add
mov
xor
inc
addl
mov
imul
fadds
scas
pop
sbb
mov
call
dec
jns
jno
jbe
push
mov
in
shr
stos
jmp
adc
flds
phaddd
and
mov
test
xchg
xor
int3
scas
clc
shlb
xor
dec
fmuls
fdivrl
jne
push
add
cmp
jo
mov
imul
enter
hlt
and
xor
mov
xchg
ror
mov
nop
roll
sbb
cmp
xchg
mov
fidivl
ret
mov
push
out
lds
pushl
cmc
mov
sbb
inc
cmp
jl
jmp
xchg
jno
jb
add
ret
ja
push
cld
push
sbb
add
inc
xchg
inc
mov
aad
sub
movsl
mov
fcoml
push
cmp
outsl
bound
ficoml
nop
sub
xor
mov
mov
dec
js
pop
push
and
fldl
jo
xchg
cld
sub
mov
push
cmp
pushf
dec
mov
mov
add
sbb
mov
outsl
mov
push
mov
push
add
sbb
xor
inc
inc
cmp
push
inc
inc
rolb
orl
mov
and
jae
xlat
in
testb
push
or
or
adc
cmp
mov
std
movsl
mov
mov
stc
cmp
stos
mov
jmp
je
cli
pop
push
push
in
ret
push
in
pop
adc
lods
sbb
aas
push
jmp
addb
je
push
test
insb
andb
push
fimull
push
cmp
ret
mov
mov
cmp
clc
pop
dec
push
addl
lock
cmp
ss
fucomip
mov
push
add
push
mov
mov
mov
js
jge
loope
outsl
test
adc
xor
cmovb
adc
xor
fcompl
xchg
cmpsl
jo
movb
cltd
movb
into
sahf
mov
inc
cmp
add
jne
jbe
xchg
push
cld
rorl
mov
movsb
shlb
add
jbe
mov
inc
mov
dec
push
mov
mov
mov
mov
and
loop
sub
sbb
pop
movsb
adc
fcmovbe
mov
call
loopne
push
adc
fsubp
cmp
stos
or
fisttpll
mov
fwait
out
sub
push
int3
aam
or
js
clc
or
push
sub
push
or
or
in
xor
scas
sub
outsb
imul
dec
cmp
xchg
pop
outsb
mov
adc
mov
out
mov
and
sbb
adc
cmp
cmp
cmp
xchg
or
adc
adc
imul
xor
mov
add
add
jns
loopne
push
push
xchg
and
mov
xor
xchg
jl
xchg
jne
imul
jge
cld
or
test
bound
mov
mov
popa
adc
mov
or
scas
dec
add
sti
push
das
mov
sub
cmp
add
es
and
xor
cmp
push
or
and
push
sbb
xor
scas
imul
mov
loop
fs
xor
or
ret
add
xor
sbb
test
mov
mov
lock
frstor
add
movl
and
inc
add
push
lahf
imul
dec
sbb
xor
adc
cmp
stc
pop
dec
popa
and
inc
adc
scas
xchg
xor
jmp
push
adc
xor
inc
fsts
push
adc
fwait
pusha
fcomps
mov
outsl
loopne
xor
push
pop
movsb
int
std
or
pop
and
add
mov
push
pop
push
xor
popl
test
and
mov
fldl
or
push
or
movsb
and
pusha
loop
mov
jmp
push
lock
push
fimuls
pop
push
adc
mov
push
adc
jnp
inc
pop
xchg
push
mov
push
test
or
das
sahf
movsl
or
into
pop
pusha
cmp
fmull
add
mov
cmp
cs
or
xchg
ja
es
lea
cmp
jbe
cmp
jbe
mov
lock
jbe
mov
mov
cwtl
aas
push
ret
pop
leave
popf
insl
mov
push
sbb
insl
fs
add
arpl
mov
or
inc
pop
xor
or
aas
cmp
sarl
ds
out
push
lods
lea
xor
inc
icebp
dec
mov
push
push
and
and
test
cmp
inc
mov
pop
and
scas
inc
dec
test
lret
jp
cmp
ja
dec
pop
cmp
xchg
push
push
sbb
cmp
es
inc
push
inc
jle
push
push
cmp
jbe
mov
fs
dec
sub
jl
lea
jns
mov
bound
popa
xchg
inc
push
pop
inc
xor
xor
std
cmp
shrl
shll
sub
or
dec
push
jp
divb
push
mov
loope
xlat
sahf
subl
jmp
cmp
pop
je
ret
cmp
stc
ja
sbb
iret
int3
ret
pushf
fucomi
sbb
mov
inc
test
mov
sub
outsb
or
ret
mov
xlat
adc
push
jmp
sarb
roll
loope
leave
add
insl
pop
inc
or
push
cmp
jno
jns
lods
cs
mov
js
in
add
cmp
sub
lea
les
orb
shlb
lods
loopne
sub
cmp
mov
mov
sub
sub
lcall
dec
or
push
call
stc
sahf
mov
les
test
jbe
adc
ja
mov
sub
mov
pushl
in
jl
inc
and
add
xorb
test
sti
xor
cmp
bound
mov
and
ret
cs
stos
sub
stc
movsl
test
inc
rorb
jl
xchg
enter
and
std
rorl
jo
jo
lock
cmp
stos
adc
test
aas
mov
mov
enter
sub
nop
add
lea
xor
imul
faddl
push
and
mov
jl
pop
pop
cmp
jo
mov
das
jl
test
xor
jecxz
or
movhps
xchg
std
fcompl
fcoml
jge
loope
mov
or
add
addl
outsb
ret
jge
xchg
add
adc
jmp
mov
hlt
add
push
push
jns
sub
push
gs
orb
lea
leave
test
addr16
pop
mov
sub
mov
dec
cmp
mov
inc
cmp
sarl
sub
cmp
aas
push
inc
aad
pop
inc
sub
inc
shr
loope
ds
add
lahf
cmp
push
adc
shll
pushf
or
adc
jle
push
fildl
inc
lds
pop
push
jne
xchg
jmp
or
cmp
mov
test
jle
inc
dec
mov
test
jge
sbb
or
rclb
jmp
xchg
fdivrp
adc
jecxz
clc
mov
xchg
fidivl
cmp
xor
adc
cli
repz
cmp
rcll
pop
sub
mov
pushf
dec
jmp
lods
cmp
scas
repnz
push
je
push
mov
loop
aam
xor
movsl
push
clc
xor
in
xor
lock
or
js
pop
out
test
je
cmp
popf
ret
js
jne
insb
pushf
add
cmp
push
mov
or
pop
lock
ljmp
fstpt
jp
mov
pause
push
jb
sbb
mov
pop
sub
add
pop
cmp
and
sub
jno
or
jecxz
xchg
mov
icebp
rorb
push
or
push
mov
push
data16
xor
rorb
xor
rorb
sbb
loop
in
and
shrb
mov
stos
mov
stc
lods
daa
adc
push
pop
fcmovu
sbb
nop
popa
mov
xor
push
je
sbb
movzwl
push
push
sub
ret
add
mov
adc
xchg
loopne
lcall
inc
or
sub
sub
loopew
push
push
insb
push
icebp
add
and
push
adc
cmp
xchg
pop
pop
pusha
sbb
mov
fstpt
xor
lea
jge
repz
sbb
cs
enter
xchg
dec
xchg
mov
pusha
jge
push
fwait
push
test
fidivrl
aad
pop
sti
sub
add
test
push
cmp
or
fmull
inc
inc
jmp
mov
jae
and
lea
cltd
xchg
xor
enter
hlt
mov
sbb
or
sub
add
out
repz
popa
mov
mov
mov
sbb
mov
or
sub
mov
add
nop
and
shll
push
push
mov
dec
aas
sbb
push
loope
ret
into
lods
shl
push
dec
fdivrs
adc
push
gs
inc
dec
in
loopne
cli
aas
fsubrl
push
sbb
jmp
cmpl
add
call
add
and
push
fcoms
mov
int
rcll
xchg
push
lods
xor
jo
mov
and
insb
loopne
fwait
jbe
cmp
push
mov
or
xchg
jecxz
jne
and
pop
aas
lds
cld
add
inc
in
push
jmp
lods
cmovnp
or
scas
mov
add
cmp
mov
inc
dec
loope
xor
dec
test
dec
adc
jge
testl
sbb
les
loopne
push
test
xor
jne
lea
or
add
xchg
xchg
std
aam
fiaddl
sbb
xor
add
jge
adc
adc
fldcw
push
lock
ret
mov
andl
push
add
aad
bound
sbb
xor
cmc
jg
xchg
dec
lea
jnp
add
ljmp
lahf
or
lea
lea
mov
call
adc
hlt
xchg
add
cmp
aam
push
enter
and
xor
lock
sbb
pusha
adc
cmp
je
jne
dec
jo
or
xlat
pusha
cmpsl
mov
mov
mov
mov
inc
hlt
fmuls
dec
loope
daa
test
mov
pusha
pop
cmp
cmp
hlt
mov
mov
sbbl
jge
fcomps
sar
lea
out
or
mov
je
pushl
pop
adc
adc
inc
pop
sub
sbb
xchg
push
inc
or
mov
nopl
mov
aas
jne
sub
pushf
lods
adc
or
ss
std
xor
aam
lods
imul
dec
loope
mov
and
sbb
outsl
jle
test
mov
adc
sub
jmp
push
add
inc
dec
pop
sbb
mov
xlat
in
std
and
mov
cmp
je
adc
mov
mov
jmp
and
jne
add
xlat
adc
push
fcoms
jo
fildl
mov
xor
and
jmp
or
sbb
fadd
sbb
push
aas
ljmp
inc
or
outsb
in
imul
cmp
pop
sbb
adc
js
jmp
push
and
je
out
jle
sub
ficompl
sbb
mov
lcall
shlb
jae
lea
jle
cmp
adc
rep
pop
mov
adc
sahf
clc
adc
push
mov
lock
mov
scas
mov
jmp
sub
sbb
cmpsl
jno
mov
cmpl
adc
add
or
sbb
adc
dec
scas
rclb
xchg
dec
xor
pop
inc
push
pop
xchg
or
lock
mov
add
sbb
ret
lods
sub
repnz
pop
xor
in
cvtdq2ps
inc
push
fmuls
pop
mov
cs
adc
sub
pop
or
jnp
pop
xchg
sub
xchg
sub
cmp
push
jae
xor
inc
jb
mov
xlat
adc
fs
sbb
aad
or
cmp
jecxz
aas
cmp
sub
nop
xchg
add
inc
pop
push
add
push
arpl
add
popf
jno
cmp
push
out
mov
cmp
pop
pop
adc
and
sbb
scas
mov
xor
mov
and
hlt
jae
cmp
jbe
mov
fisttpll
sub
adc
and
sub
mov
cmpb
dec
adc
jne
add
cwtl
push
mov
jb
dec
fiaddl
sbb
hlt
imul
or
hlt
jmp
outsl
cmp
js
add
popa
cltd
fcoms
stc
rcr
push
in
mov
add
in
mov
test
mov
ret
add
and
jne
out
or
les
aam
jno
jno
mov
ret
push
popf
adc
inc
xor
and
sbb
and
adc
enter
xchg
lret
inc
add
lock
je
cmpb
cmpl
xor
push
hlt
js
cmp
cmp
adcb
insl
mov
hlt
pusha
dec
sub
mov
sub
push
inc
jne
mov
repz
int3
aas
dec
push
iret
imul
pop
xor
mov
testb
lahf
xchg
xchg
in
and
les
or
pusha
add
ja
ds
pop
pop
or
jnp
mov
je
stc
or
cmp
loopne
je
adc
cmp
cmp
jbe
or
je
test
dec
dec
fucomip
cltd
testb
cmp
cmp
dec
xlat
lcall
push
push
push
cld
cmp
jo
xor
stos
es
leave
jl
or
in
adc
mov
mov
hlt
sbb
jb
push
fdivs
inc
pop
es
or
push
popa
xor
pop
hlt
xor
add
insl
sub
cmp
jae
cmp
jmp
mov
push
adc
hlt
jne
push
js
pop
scas
loopne
fistl
cld
loopne
fnstenv
xor
lods
push
mov
mov
mov
repz
cs
dec
inc
testb
or
nop
scas
out
pop
pop
mov
push
lods
push
cmp
in
sbb
dec
pop
jne
and
dec
popl
lods
pop
lea
pop
popa
orl
in
imul
movl
cmp
inc
clc
mov
mov
hlt
neg
sbb
and
sbb
jle
shlb
mov
sub
push
jmp
adc
push
mov
stc
jmp
cmp
push
popa
sub
dec
jp
fs
and
jmp
pop
adc
xchg
mov
sti
andl
stos
push
imull
and
mov
add
test
loopne
mov
in
daa
mov
lea
std
ret
add
mov
add
js
mov
push
popf
cmpl
jne
ret
pop
stos
fdivs
or
jne
push
pop
notl
mov
pusha
jae
hlt
bound
stos
ret
xchg
sbb
pop
and
mov
jmp
cmp
movsb
cs
sub
fcomip
adc
test
push
int3
out
scas
outsl
pushf
adc
outsb
xchg
ret
xchg
jbe
push
call
pusha
test
and
jne
imul
add
push
test
fldl
xchg
les
xor
inc
int3
shrb
test
clc
inc
js
mov
push
sbb
addl
lahf
test
mov
add
adc
rol
push
setne
xor
ret
mov
mov
loopne
or
inc
inc
nop
jp
int
mov
adc
fmuls
je
inc
cmp
hlt
out
inc
cld
divl
incl
sub
mov
mov
mov
lcall
call
dec
loop
fdivrl
je
mov
cmp
das
and
jl
jmp
adc
scas
fld
mov
adc
xor
dec
mov
xchg
pop
aad
enter
push
mov
add
xchg
mov
scas
popf
sub
sbb
cld
rclb
shlb
add
inc
lea
into
pop
jmp
fwait
dec
mov
jb
cmp
xchg
icebp
and
jbe
mov
mov
jb
addr16
je
mov
and
cmp
cmp
pusha
push
push
out
adc
out
aaa
js
push
and
jle
mov
inc
test
jb
push
jae
out
push
add
lds
call
xor
pop
sub
sub
and
push
sub
pop
cmp
mov
fbld
push
add
mov
mov
dec
add
pop
pusha
shrb
jge
pop
jno
hlt
mov
and
addb
mov
fimuls
lea
sahf
mov
or
into
adc
int
adc
clc
push
pop
ss
iret
flds
inc
popf
push
sbb
or
cwtl
fmuls
pop
nop
jne
mov
frstor
insl
bound
std
stos
mov
out
xor
in
mov
ds
xor
jle
pop
lcall
sbb
jmp
push
mov
dec
xor
jne
push
mov
push
lea
pop
je
pushf
sub
nop
js
call
or
lea
into
mov
cltd
cli
loopne
imul
stos
xchg
test
pop
cld
xchg
xchg
push
packsswb
test
push
loopne
loop
mov
or
xor
add
adc
ret
mov
push
jnp
out
jge
or
js
add
push
shlb
jle
aad
cmp
jg
sub
enter
out
rorl
aas
or
mov
add
sbb
lret
mov
jo
sub
xchg
or
insb
enter
test
cmp
loopne
pop
int3
mov
in
int3
sub
je
les
push
cmc
sub
loope
inc
adc
mov
int3
insl
xchg
cmp
out
mov
out
push
aam
outsb
test
fisubs
mov
divb
loopne
fmull
cmp
int
push
test
jge
lock
in
shll
mov
push
jmp
pop
xchg
mov
adc
sub
pushf
fs
loope
and
pop
and
push
mov
and
sub
jle
data16
movsb
test
adc
fwait
std
pushl
jmp
mov
add
cmpb
push
lock
mov
iret
outsl
xor
or
je
and
sub
mov
mov
aas
sub
add
push
mov
cmp
jge
test
pop
movsb
sub
sbb
fidivl
test
ficoml
jno
ds
sub
push
or
push
mov
add
je
dec
scas
or
es
inc
xorl
push
push
inc
and
jl
or
inc
ss
lret
lea
fistpll
ja
rclb
daa
adc
pop
pushf
icebp
mov
aad
mov
imul
sub
imul
hlt
shll
rcrb
in
adc
push
adc
testb
fisttpll
repnz
lock
or
jg
adc
pop
shll
flds
push
inc
sub
xor
pusha
stos
dec
push
adc
dec
push
testl
cli
loopne
cwtl
mov
push
mov
push
sbb
fldenv
add
xchg
dec
push
adc
add
mov
movsb
xor
aam
or
mov
aaa
incl
aam
dec
and
push
add
adc
add
pop
out
xchg
jbe
and
adc
addr16
and
mov
je
mov
mov
cmp
sbb
jge
cmpb
mov
outsb
fsubr
sarb
sub
xchg
addl
xchg
stos
adc
addr16
pop
fs
ret
ss
push
lea
cmp
pop
fisttpl
jle
stos
movsl
sub
popf
enter
movsb
ret
shl
jg
and
addb
xchg
sti
and
push
mov
inc
outsb
les
out
repnz
mov
or
add
xor
mov
add
xor
testl
orl
loope
inc
adc
xor
shlb
icebp
mov
std
inc
aad
push
jnp
push
or
dec
or
or
push
call
bound
jne
adc
or
pop
push
das
xor
sub
xchg
or
inc
and
pushw
pushf
dec
jb
les
call
fadds
jo
je
jmp
or
rcrb
sub
jbe
subb
sbb
jmp
in
xchg
lret
lock
xor
les
bound
jns
pop
jmp
jg
cld
xchg
es
mov
mov
test
mov
adc
js
inc
ret
push
xor
jecxz
jae
lea
push
sub
sbb
xlat
push
push
jno
mov
stos
lcall
push
out
push
xchg
or
pushf
add
divb
testb
push
shll
adc
pop
mov
cmpb
cmp
jae
inc
jmp
push
popa
add
sti
sub
pop
and
mull
push
push
add
or
xchg
in
and
cmp
add
ret
pop
je
cmp
jb
pop
mov
mov
cmpsl
rorb
pop
loopne
xor
hlt
outsl
add
push
mov
cmp
testb
sbb
cmp
sbb
push
sub
roll
mov
mov
in
daa
mov
pushf
fadds
fwait
mov
mov
rcrb
pop
push
out
or
xchg
scas
lea
popa
and
push
jmp
push
push
popf
pop
out
popf
cmp
jmp
push
inc
mov
sahf
mov
aas
sub
and
nop
cmp
gs
xor
xorb
mov
pop
aad
call
xchg
insl
aad
jge
insb
idivl
lds
xor
or
push
mov
cmp
jb
inc
xchg
mov
adc
cmpb
push
shrb
sarb
decb
add
cmp
push
mov
cmp
sub
push
inc
push
loop
scas
or
add
inc
inc
cld
bnd
xor
inc
enter
jbe
jb
and
adc
push
orb
lea
popf
stos
imulb
lcall
add
dec
js
jno
xor
jp
pop
adc
mov
arpl
addr16
cmpsb
imul
xchg
ret
push
add
pop
and
ljmp
pop
in
popa
dec
mov
mov
jbe
push
loop
into
or
xchg
pop
mov
nop
inc
add
fs
pop
mov
lea
jge
pusha
mov
xchg
sbb
pusha
jns
or
xchg
push
mov
cltd
xchg
sbb
dec
or
roll
test
sbbl
add
push
cmp
mov
enter
es
adc
jae
add
orb
sub
shrb
xlat
push
sbb
mov
jo
sbb
inc
rolb
popa
adc
cwtl
in
add
ja
insb
push
push
lods
mov
push
imul
inc
mov
es
inc
test
sbb
pop
adc
dec
lds
popl
xor
dec
push
cmp
shlb
adc
push
or
mov
lahf
jne
inc
fdivrs
add
rep
sbb
push
fcoms
jmp
adc
dec
inc
lcall
push
test
or
or
inc
imul
cmp
es
add
fdivs
or
fldl
adc
mov
cmp
jo
std
fstps
and
sbb
out
fstpt
sbb
sbb
inc
or
push
jae
ficompl
add
sbb
sub
sbb
jns
mov
jg
out
outsb
mov
cmp
mov
pop
shl
rcrb
lea
and
xchg
nop
and
push
add
int
test
in
sbb
jmp
push
cmp
jmp
mov
pop
push
jle
push
test
jnp
pop
lods
pop
popa
aad
inc
inc
mov
adc
test
xchg
mov
pop
jg
jle
jne
inc
mov
movsl
in
lods
cmpsb
rorl
iret
xchg
push
sbb
or
sarl
lock
mov
rcll
lock
mov
adc
ret
cli
shll
push
sti
cmpsb
imul
pop
leave
and
xchg
xchg
lret
mov
add
pop
insb
aam
fcoms
and
mov
inc
adc
push
dec
repz
adc
mov
mov
cmp
jae
data16
jae
mov
int
xchg
fiaddl
test
cmp
sbb
or
mov
adc
adc
mov
sub
mov
push
and
or
jne
dec
outsl
ret
dec
or
sub
lea
adc
push
lods
or
loopne
adc
lahf
mov
dec
jecxz
push
add
ficoml
pop
fsubrl
adc
and
lgs
cmp
jge
mov
cmp
pop
sub
pop
mov
jmp
mov
ret
cmp
add
adc
scas
lea
and
mov
mov
into
cli
and
jl
add
ds
or
mov
data16
mov
in
pop
add
add
adc
push
xor
mov
pop
add
xchg
js
push
fiaddl
push
mov
fsubrp
xor
push
jnp
dec
ret
push
dec
mov
dec
jbe
iret
nop
popf
aam
push
push
cmp
or
inc
hlt
xchg
cmp
push
iret
mov
dec
mov
push
xor
ret
pop
jb
popa
iret
mov
sub
mov
push
mov
cs
xchg
xchg
add
int3
je
das
jle
inc
aas
dec
call
insb
sbbl
sub
mov
call
mov
jb
int
les
mov
add
out
adc
sbb
sub
outsl
push
inc
cmp
sbb
adc
ret
mov
in
outsb
or
in
or
jecxz
push
xor
xchg
movsb
cmp
jne
mov
dec
stos
and
adc
sbb
mov
push
ror
xor
push
out
sahf
fldenv
push
adc
push
pop
and
out
fmuls
cmp
punpckhbw
test
je
outsl
test
or
or
ret
or
adcb
mov
shll
jmp
cld
mov
and
push
cmpl
bound
or
divps
pusha
hlt
mov
pop
mov
push
mov
lea
push
pop
in
cmp
arpl
add
js
aam
sub
push
or
ffreep
fsubrl
adc
adc
lcall
shlb
sbb
or
pop
jae
jmp
and
sbb
addb
je
mov
xor
and
outsl
dec
jo
mov
add
lods
dec
pusha
loopne
mov
mov
or
cmp
loopne
rorb
pop
or
dec
jp
ds
test
jns
and
mov
rsm
out
add
sub
add
cld
mov
in
ss
sub
push
push
xchg
xchg
outsb
dec
and
in
add
in
pop
push
dec
push
add
ret
dec
mov
or
or
or
data16
xor
pop
fmuls
inc
mov
enter
popf
test
mov
xor
test
daa
push
push
push
iret
mov
aam
loopne
push
xor
data16
mov
mov
sbb
mov
cmp
mov
je
pop
ret
sti
push
adc
add
addr16
pop
mov
and
insb
push
add
sti
dec
into
push
add
clc
xor
js
pusha
jle
xchg
adc
dec
mov
add
dec
outsb
xchg
cs
xchg
jge
loopne
jae
js
lods
adc
nop
popa
enter
mov
lock
adc
lock
pop
sub
and
push
push
or
pop
dec
daa
jge
clc
mov
pop
ret
cmpsb
cwtl
cmp
mov
mov
addl
mov
daa
mov
jecxz
jbe
std
nop
cld
jl
subl
call
push
je
cmp
nop
push
xor
xchg
outsl
push
push
or
inc
mov
sub
int
mov
pop
jg
outsb
sbb
outsl
test
clc
loop
inc
jbe
hlt
call
jo
xor
lock
sub
push
movl
jno
pop
lods
dec
add
inc
cmpsb
mov
das
loopne
loopne
dec
adc
es
test
add
cmp
push
adc
je
lock
xchg
mov
sbb
push
push
xor
cmp
dec
mov
fsubrl
add
mov
lods
push
cwtl
inc
mov
fwait
mov
dec
pop
test
adc
repz
mov
jmp
into
xor
in
loope
shll
ret
dec
xor
xor
push
sbb
jns
int
fmulp
cld
push
or
pop
jo
xlat
xor
jle
in
test
adc
lret
les
sub
movb
in
sbb
or
imul
imul
push
je
fsubl
adc
fnstcw
dec
loop
add
pusha
cmp
adc
rorl
add
or
add
jl
sbb
add
into
mov
nop
shrb
push
push
into
hlt
loopne
xchg
cltd
or
in
xor
sti
mov
mov
inc
fisttpl
test
addr16
fsubl
rolb
psubusw
cmp
daa
xchg
jl
cmp
test
or
push
lea
and
mov
push
icebp
test
popa
or
in
push
mov
mov
icebp
repnz
dec
add
cmpsl
imul
cmp
mov
xadd
sub
ret
repz
xor
pushf
mov
dec
daa
mov
mov
push
sbb
pusha
adcb
popa
push
es
pop
pop
testb
add
cwtl
fmuls
je
cmp
mov
lcall
loopne
fdivs
jnp
mov
rolb
aam
sbb
adc
mov
adc
repz
mov
fildl
imul
out
push
ja
lea
js
mov
push
lret
and
sub
rolb
dec
fdivrl
sbb
fadd
sbb
cmp
push
push
add
adc
jnp
ret
mov
rorl
add
ljmp
push
jecxz
daa
mov
aas
loope
push
roll
dec
test
xchg
add
in
call
jl
rorl
dec
outsl
mov
xchg
mov
test
adc
outsb
mov
ja
add
out
movsl
mov
jecxz
dec
jecxz
cmpsb
sub
outsb
mov
fcmovnb
adc
and
push
gs
enter
jb
push
fsubs
adc
and
or
nop
add
cld
add
fistpll
sbb
cwtl
nop
scas
add
orl
cmp
jl
lds
add
xchg
cltd
dec
aam
xchg
or
xor
jp
dec
enter
jp
aam
push
jb
fsubr
push
sub
mov
rorl
xchg
pop
pop
out
add
in
into
je
sahf
add
push
scas
divl
pushl
andl
add
popf
and
mov
sub
and
mov
cmp
test
out
cmp
xor
push
lods
sub
push
addl
dec
jns
mov
lock
icebp
subl
js
push
bound
outsl
xchg
imul
jmp
push
cmpsb
xor
add
scas
les
xor
cmp
clc
inc
cmp
mov
add
mov
scas
mov
shll
or
mul
rclb
sbb
pop
sbb
pop
or
push
pop
push
lret
mov
imul
or
js
pop
test
fnsave
xor
pop
fidivrl
jae
xchg
in
jmp
or
rcrl
inc
jne
pop
subb
sub
dec
mov
xchg
xor
jle
xchg
jl
or
pushw
mov
mov
pop
ret
push
mov
sub
add
data16
add
sbb
paddusb
push
push
addr16
xor
push
push
mov
add
dec
aaa
addl
mov
insb
std
or
call
sar
inc
call
cmp
push
add
pop
cmp
xchg
inc
fsubl
pop
jns
test
imul
sub
inc
adc
mov
push
push
dec
enter
mov
sbb
pop
inc
adc
pop
je
xor
cmp
stc
add
and
adc
fisttps
fsub
lods
cmp
in
incb
add
push
push
mov
or
inc
out
xchg
inc
btc
mov
inc
dec
sbb
adc
jmp
cmpb
push
movb
xor
dec
movl
sbb
inc
setb
add
outsl
and
xor
or
inc
jns
cmp
jbe
adc
in
int
add
in
push
xchg
or
inc
and
imul
cmpsb
imul
in
icebp
jl
mov
call
mov
or
or
mov
inc
int3
mov
jmp
add
shlb
mov
sub
push
and
pop
xlat
jl
les
hlt
aam
add
mov
dec
xchg
int
adc
and
add
xchg
adc
pushl
int3
mov
fadds
jl
js
orb
jo
or
orb
pusha
push
or
adcb
mov
push
pop
ret
inc
cmp
or
xor
jb
push
shl
mov
mov
inc
add
fs
sbb
sbb
test
arpl
mov
add
cld
clc
adc
push
mov
mov
cmp
mov
push
test
addps
in
ja
hlt
inc
and
lods
jl
adc
mov
ret
or
jne
mov
orb
test
lcall
cli
or
lahf
sbbb
adc
jp
fildl
mov
movswl
dec
cmp
shr
mov
push
push
es
mov
mov
out
roll
xchg
sbb
push
movsb
xor
loopne
sub
xor
shrb
mov
in
push
jg
jb
xorb
and
mov
jo
rol
ljmp
shl
ret
mov
fisubl
pusha
and
shrl
adcl
mov
mov
jne
das
cmpl
sub
pop
jne
orl
and
daa
inc
dec
adc
imul
mov
out
inc
push
popf
cmp
or
ret
incl
xchg
mov
cmc
dec
mov
stc
fstl
pushf
push
add
add
lahf
cwtl
in
add
push
dec
mov
sub
mov
mov
xchg
xchg
inc
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
pop
dec
fwait
jl
sub
insb
lahf
jno
cld
jbe
push
ret
push
dec
mov
daa
jne
add
and
push
arpl
into
or
or
xchg
sbb
inc
test
jmp
add
test
outsl
aad
daa
fsubrl
sbb
subb
lock
jp
mov
ds
pop
std
aad
pusha
cli
out
fidivrs
ret
dec
addr16
inc
leave
add
inc
sbb
sub
pusha
inc
pusha
add
subl
rcl
js
or
xchg
lock
and
mov
outsb
out
movsb
jmp
sti
insl
adc
dec
or
jnp
push
push
sub
loop
cmpsb
xchg
dec
add
icebp
std
test
and
or
call
and
sbb
cmpsb
inc
aad
test
mov
pop
inc
mov
dec
dec
je
adc
test
je
lea
jo
mov
andl
dec
pushf
and
jp
adc
orb
pop
rorb
lock
lock
xor
lock
ret
into
xchg
and
or
cmp
sub
cwtl
sub
mov
xor
insb
insb
mov
push
aaa
inc
jecxz
xor
jno
sbb
sbb
cmc
pop
shl
push
xchg
fisttpl
cmp
je
popf
add
cmp
and
lds
arpl
loope
scas
mov
je
cmp
lea
mov
sti
dec
icebp
push
insb
push
sub
inc
and
adc
push
jne
sbb
sbb
int
or
add
lock
or
sub
inc
cs
lock
lock
cmp
cmp
jmp
jge
aas
jmp
in
push
pop
cwtl
inc
adc
or
popa
sbb
test
mov
mov
sahf
mov
add
push
and
sbb
loope
rorb
mov
ret
cmp
xor
ret
pop
or
push
mov
popl
pop
xchg
mov
push
push
push
test
or
and
add
add
and
rolb
and
pop
mov
sbb
sub
test
and
clc
mov
roll
mov
sbb
add
fimull
sub
xchg
lds
int3
or
push
test
test
inc
inc
popa
shlb
movsb
cltd
adc
or
and
div
pop
js
push
aas
jne
dec
push
xor
lock
cmp
fdivs
enter
insb
pop
pushf
cwtl
fidivrs
cmp
mov
cmp
je
jle
add
js
push
pop
cmpsl
and
dec
push
fstl
pop
and
out
add
sbb
xor
loop
dec
push
or
outsb
xchg
inc
stos
adc
hlt
sbb
data16
imul
pop
push
pinsrw
loopne
popa
add
push
and
pusha
mov
fidivl
or
push
cmp
mov
sub
or
mov
jns
and
sbb
sbb
cmpsl
xorl
inc
cmp
sub
loopne
fisttpl
cmp
inc
push
das
cmp
cs
pop
sub
xchg
and
notb
cmp
decl
subb
or
add
adc
ljmp
inc
or
jg
xchg
fmull
dec
sbb
add
add
jns
nop
cmc
jo
and
and
sar
push
xchg
adc
inc
and
adc
or
xchg
bound
xor
pop
xchg
xor
fiaddl
xchg
adc
inc
movsb
adc
add
dec
aaa
fwait
dec
pop
les
push
pop
or
adc
sahf
sbb
movsb
cmpsb
adc
and
push
sbb
mov
jno
ja
sub
cmp
inc
cs
push
sub
push
and
pop
push
cmp
movsl
pop
test
inc
push
pop
fcompl
push
mov
popa
adc
out
dec
mov
stos
add
jne
pushl
push
xchg
loopne
push
mov
add
push
icebp
adc
jo
add
aas
test
fiadds
out
mov
push
push
pop
out
dec
cmpl
mov
pop
les
inc
sub
in
inc
inc
xor
dec
xor
xor
mov
movsl
add
add
push
jl
pop
loop
pop
movsl
and
es
adc
or
push
lods
sti
or
call
orb
xchg
adc
push
sbb
aaa
add
xor
pushl
mov
xchg
orl
scas
ret
xor
andl
sbb
lahf
test
mov
push
aas
add
std
pop
sbb
mov
cmp
je
push
imul
test
fisubl
inc
add
push
jae
sub
dec
sub
and
sbb
push
je
or
testl
pop
test
cmp
shl
jp
mov
inc
outsl
call
or
andl
or
aam
mov
adc
stos
sub
sbb
sbb
mov
jp
mov
test
push
push
ret
adc
sbb
sub
adc
mov
mov
push
cwtl
dec
pushf
flds
cmp
push
xchg
scas
mov
iret
rolb
lret
or
int3
pop
loopne
or
mov
andl
mov
xor
mov
orl
or
data16
lock
leave
outsl
test
inc
mov
outsl
jmp
in
jo
xor
push
iret
sub
sarb
or
rolb
dec
dec
xchg
xor
jnp
sbb
push
push
push
xor
cmp
xlat
dec
cltd
sbb
add
adc
add
iret
pop
loopne
subl
hlt
lock
or
mov
add
loopne
shlb
pop
sbb
sbb
mov
movsb
xor
call
push
sbb
mov
mov
mov
push
adc
test
pop
mov
loopne
dec
jns
xchg
push
xor
push
cmp
addl
mov
js
call
jmp
xchg
into
mov
push
mov
or
add
and
add
cs
lods
mov
ja
nop
ss
xchg
cmc
sub
add
pusha
dec
push
sub
int
nop
dec
nop
ss
push
inc
xor
xor
sub
push
pop
mov
lock
fs
mov
outsl
add
negb
adc
and
mov
xor
js
movl
push
push
test
lahf
mov
sbb
pusha
outsl
and
sbb
mov
jecxz
imul
outsl
dec
pushf
pop
fs
call
push
add
fcoms
cwtl
inc
in
pop
xchg
shr
inc
sub
xorb
roll
lods
jae
cmc
popa
adc
mov
push
mov
pop
push
mov
call
mov
pop
add
cmp
sub
cmp
ja
out
jnp
dec
push
inc
arpl
adc
or
or
or
pop
add
pop
out
pop
rorl
xor
push
mov
push
add
fistpll
gs
adc
hlt
push
pop
add
or
dec
xlat
pop
xor
add
leave
pop
dec
xor
sbb
or
cmp
cs
dec
xor
pop
cs
xlat
ret
lea
pop
cmp
or
adc
mov
mov
adc
sbb
add
xchg
dec
movsb
push
xor
push
mov
ret
and
pop
adc
test
and
adc
inc
fmuls
cmpsb
dec
in
lock
add
imul
pop
pop
jl
out
xor
add
je
outsl
loope
sub
pop
imulb
rcrl
mov
sbb
jmp
pop
or
push
and
adc
sbb
jno
adc
pop
cs
cmp
bound
xor
inc
outsl
and
push
adc
dec
or
mov
or
adc
and
xchg
repnz
cmpsl
xor
enter
stos
in
push
xor
jnp
adc
add
lea
shrl
or
js
stc
pop
add
add
jne
mov
sarb
imul
or
testb
je
push
mov
xchg
xchg
or
xor
lock
jl
loope
xor
push
fldt
lret
jl
inc
movzbl
neg
sbb
fisttps
fwait
push
push
leave
sbb
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
sub
add
fisubrl
cmove
mov
xchg
pop
leave
xor
add
sarl
aaa
add
or
mov
push
imul
fstpl
mov
mov
pop
push
adc
pop
jno
mov
xlat
inc
sahf
mov
iret
sub
mov
cli
daa
outsl
push
mov
cmp
test
adc
push
mov
adc
aaa
sbbb
push
push
mov
push
outsl
loop
dec
test
int
mov
popa
test
and
add
mov
pusha
repnz
mov
js
mov
push
repz
stc
pushf
movzbl
sahf
aam
mov
dec
movsb
test
sarb
in
neg
adc
xchg
mov
lds
sub
pusha
mov
andl
cwtl
mov
jmp
int
mov
xchg
in
add
mov
addr16
pop
les
cld
or
cltd
idivl
jne
inc
movsl
pop
mov
cmp
loop
mov
test
push
pop
cli
sub
in
rorl
arpl
cld
sti
add
mov
or
movsb
jl
jno
nop
stos
out
pop
xor
add
add
push
xchg
dec
cs
cwtl
insl
aas
jmp
repnz
add
inc
aad
ja
mov
dec
mov
ss
xchg
pop
popf
movsl
fistpl
mov
lret
mov
and
daa
add
sub
sbb
mov
cltd
push
mov
stos
push
add
pop
adc
adc
sarb
cwtl
iret
mov
dec
sub
add
sub
jo
loope
pop
loope
xor
sbb
std
fiaddl
push
mov
push
dec
add
dec
stc
jns
push
lea
sbb
pop
sub
movsl
inc
mov
sarb
cli
sub
mov
sbb
jnp
adc
or
jae
ret
faddl
inc
mov
bound
pop
add
or
inc
orl
imul
dec
test
mov
push
jge
andl
lods
dec
jnp
loopne
xor
fs
or
nopl
test
add
ret
adc
sbb
test
mov
jmp
jge
adc
sub
and
sbb
cli
into
add
pop
cmp
cmp
std
mov
or
push
outsb
and
fdivrl
insb
mov
push
mov
add
mov
push
dec
rol
and
add
stos
and
in
add
and
mov
cmp
pop
fiadds
xlat
jbe
call
pushf
jae
dec
mov
cli
push
cld
cmp
in
aaa
ffree
push
inc
js
rorb
sarl
pop
adc
inc
insb
shr
sub
sahf
add
pop
push
adc
xlat
movsl
xor
inc
cmp
ficompl
cli
add
addr16
sbb
mov
jge
pop
shrl
pop
decb
dec
fdivs
repz
and
inc
jmp
mov
jge
es
imul
or
hlt
adc
dec
sbb
gs
dec
stc
mov
arpl
pop
adc
cmp
xor
sub
loop
pop
adc
outsb
jne
jns
dec
xor
pop
mov
testb
sbb
enter
mov
cmpsb
out
dec
push
pop
inc
adc
lds
push
js
mov
sbb
pusha
shll
popa
mov
andb
push
jge
shrb
mov
add
scas
mov
jo
scas
cltd
xchg
push
insl
mul
pop
dec
adc
or
mov
adc
insb
mov
push
pop
or
sbb
cmc
xchg
int3
adc
data16
test
mov
push
add
pushl
mov
jge
jg
inc
xor
mov
jbe
pushf
mov
je
dec
inc
xchg
pusha
ss
sbb
dec
jne
aaa
imul
jne
call
xor
pop
rorb
fstpt
add
push
pop
fs
dec
push
pop
mov
addl
lcall
inc
pop
adc
or
add
clc
add
inc
xor
addr16
add
pop
mov
ret
jbe
daa
xchg
push
xchg
or
push
jne
repz
rcrb
cmp
jne
xor
xchg
or
ds
and
pop
shlb
shll
push
adc
lock
or
pop
pop
sub
pop
mov
fwait
jb
cmp
push
outsb
jo
or
jne
push
enter
sub
cmpl
inc
mov
xor
cld
mov
mov
cmc
sub
mov
mov
pavgw
push
stos
inc
mov
int3
ss
ror
jle
jecxz
daa
je
jl
mov
push
aad
xchg
mov
and
movsb
imul
sbb
sbb
pop
shll
fimull
xchg
jae
xchg
nop
add
xchg
xor
cmpsl
cmpsl
out
pop
lea
mov
fdivrl
xor
mov
mov
stos
adc
and
lock
cmp
div
insb
cmc
pop
push
push
or
xor
or
loopne
movsl
test
lods
je
push
push
xchg
in
dec
es
cmp
adc
call
adc
mov
jmp
in
lcall
sahf
loope
xchg
push
pusha
nop
adc
lahf
shlb
aaa
sbb
loop
jl
js
stos
jmp
or
test
adc
mov
lret
add
in
push
pushf
sub
fstps
testl
addb
xchg
lock
or
testl
daa
loopne
push
mov
cmpsl
or
mov
neg
ret
ja
push
fwait
dec
shl
adc
movsb
inc
mov
mov
cmpsb
add
mov
in
xchg
btc
jo
mov
xchg
jl
mov
jo
jo
or
das
push
jl
mov
inc
mov
mov
movl
pop
pop
push
push
pushf
sub
mov
or
add
or
xor
pop
mov
xchg
stos
adc
jbe
and
sub
dec
mov
mov
push
pop
cli
push
imul
cmp
cmp
enter
mov
add
add
lret
pop
pop
rolb
sbbb
lods
pushf
push
and
sub
mov
add
shll
mov
hlt
mov
adc
cmp
dec
jnp
add
lret
mov
repnz
and
aad
adc
roll
push
pop
push
fdivs
mov
mov
ds
sti
push
test
sub
subb
adc
mov
das
in
daa
xor
adc
out
dec
aam
test
cmp
popf
jno
xor
cmp
out
push
inc
sbb
outsb
push
or
lea
imul
mov
push
push
jo
jecxz
jl
or
pushl
jnp
adc
cld
and
je
and
lahf
pop
mov
pop
add
shl
sub
cmpsl
adc
adc
lret
adc
testb
bound
aam
pop
adc
xchg
xor
sbb
nop
jp
jbe
jne
xor
outsl
xor
fadds
je
or
je
mov
outsl
outsb
or
sub
xchg
scas
add
stos
lahf
test
test
add
cmp
sbb
sahf
fs
inc
xchg
jnp
fisubl
pop
incb
jmp
cmp
adc
bound
mov
adc
inc
mov
add
imul
dec
bound
jbe
and
into
pusha
pop
clc
cmp
je
push
or
cld
xor
mov
mov
jecxz
jmp
mov
je
cmpsb
in
mov
add
je
or
lahf
nop
push
push
arpl
jmp
daa
aaa
test
lret
push
jp
pop
popa
test
mov
xlat
pushf
jne
add
sbb
cwtl
aad
push
sti
or
dec
and
push
xchg
add
scas
xor
stos
hlt
daa
inc
or
and
test
adc
or
add
outsb
aad
test
sbbb
xorb
mul
aam
mov
inc
call
mulb
pushf
out
sbb
push
ret
nop
xchg
aad
inc
sbb
mov
scas
dec
or
or
subb
dec
push
iret
repz
fdivrs
bound
adc
insl
leave
imul
jmp
cmp
push
shlb
push
cmp
cmp
or
mov
or
add
adc
push
mov
mov
xor
add
lret
sbb
push
daa
outsb
jg
stos
insb
sub
xor
or
push
xchg
outsb
mov
add
add
sbb
xchg
inc
cmpsl
les
stos
pushf
fcompl
inc
testb
or
sahf
mov
data16
xlat
out
loopne
out
pop
cld
mov
sbb
push
jl
add
cmp
and
inc
jb
jg
push
daa
pop
mov
enter
lret
shrl
mov
inc
push
repnz
les
mov
flds
xor
inc
pop
xchg
icebp
or
sub
popf
das
movsl
and
push
aaa
add
loop
push
popf
pop
jne
aaa
sbb
add
das
mov
dec
popl
imul
push
xchg
xor
movsb
shr
cltd
push
or
stos
fmuls
and
inc
mov
and
sbb
int3
fdivrs
out
jnp
adc
jnp
mov
and
stc
gs
ficoms
sub
stos
enter
mov
je
mov
xchg
cmp
out
mov
mov
aaa
aam
mov
mov
and
xor
repnz
aam
add
ljmp
adc
inc
push
out
cmp
clc
adcb
inc
sub
push
ret
sbb
add
add
sahf
dec
mov
jg
aaa
or
pop
data16
mov
add
pop
adc
jo
lds
dec
int
hlt
add
jo
push
ficoms
push
push
lea
mov
adc
or
das
orl
imul
push
cmp
push
inc
or
mov
inc
jae
sarb
or
shll
hlt
cs
or
pop
adc
nop
sub
jo
sub
dec
dec
and
pop
ret
and
mov
loope
sub
sub
adc
movsw
incl
mov
addr16
push
pop
push
addr16
mov
and
into
push
dec
sahf
aam
sbb
out
aaa
mov
aaa
push
into
shll
jbe
or
mov
push
mov
and
adc
mov
and
or
ret
stc
mov
cld
lock
pop
shll
adc
add
or
sbb
loopne
add
rorl
xor
mov
pushf
pop
nop
cmp
adc
sbb
ss
and
rcrl
paddusb
cmpsl
sbb
in
orb
ret
movsl
movsl
mov
mov
imul
pop
mov
xor
pop
push
daa
push
inc
jb
pop
sub
inc
mov
xor
sbb
shrb
xor
or
add
movsb
fwait
rorb
and
mov
lret
mov
mov
dec
js
in
movsb
ror
inc
mov
mov
in
dec
loopne
and
and
aad
js
sbbl
inc
add
push
add
mov
pop
mov
push
push
aas
mov
push
mov
and
adc
mov
mov
mov
jbe
lods
dec
sub
clc
rcll
add
push
loopne
icebp
xlat
fwait
movsb
cs
sbb
or
sub
jo
add
mov
mov
or
add
adc
and
lret
mov
lea
pop
popf
add
push
mov
cmp
jb
outsl
ret
loope
add
and
les
add
cmp
or
mov
add
xor
add
sub
push
push
lret
add
repz
pop
outsl
add
sahf
sub
sbb
push
push
fwait
ret
xlat
into
neg
ja
mov
sbb
inc
je
mov
clc
jp
inc
push
add
and
inc
mov
add
inc
aam
xchg
adc
mov
xor
and
push
jge
loop
inc
sub
and
adc
cmp
lock
inc
push
sub
sti
jl
test
rolb
or
adc
push
stos
ret
mov
sub
mov
nop
pop
jb
push
or
adc
push
adc
dec
dec
add
jmp
test
xor
push
sub
lahf
out
sub
jnp
int3
push
shll
add
dec
daa
sbb
xor
addr16
sbb
into
push
push
out
loop
repz
repz
sub
cmpsl
jns
dec
xor
adc
cmp
inc
je
mov
mov
cld
and
das
add
jbe
or
mov
add
add
jge
sbb
add
jnp
push
imul
inc
cmp
mov
incl
add
decl
cmp
mov
dec
jno
or
or
jo
sub
inc
push
inc
sbb
inc
bound
jb
xor
adc
cli
jne
out
mov
mov
insl
lret
push
add
inc
sub
mov
jb
imulb
cwtl
xchg
and
or
jnp
inc
push
dec
xchg
and
into
jecxz
mov
push
orb
adc
cmp
jae
xor
es
add
jge
adc
rorl
jle
ljmp
mov
in
andb
pushf
ja
bound
bound
mov
or
loopne
xor
lods
repz
dec
repz
ret
gs
xchg
mov
insb
repnz
call
jno
cmp
cmp
xor
movsb
in
adc
add
or
inc
mov
mov
mov
push
inc
pop
icebp
mov
or
sbb
nop
push
loopne
sbb
dec
fidivrl
and
mov
jecxz
adc
ss
cmp
sar
rep
xor
push
lgs
jmp
ficoms
jmp
sub
jae
jo
shlb
add
nop
sub
xorl
add
mov
adc
pop
xchg
jg
test
fdivl
jae
push
push
das
rcrb
adc
mov
add
jl
dec
loopne
adc
jb
sbb
data16
shll
pop
adc
shll
aas
jb
mov
dec
add
add
mov
xor
mov
cmp
lahf
xor
mov
inc
fsubrl
xchg
mov
cli
xor
mov
repnz
inc
imul
dec
xchg
inc
scas
jl
js
push
outsl
test
fisttps
pop
mov
push
and
add
test
xchg
jnp
pop
adc
push
push
fnsave
lock
call
shlb
adc
and
loope
adc
outsl
adc
nop
add
clc
push
adc
mov
xchg
push
mov
jp
jl
push
push
jle
and
xchg
lock
adc
fmull
mov
jno
incl
lods
add
push
pop
dec
xchg
shrl
pop
push
aam
aam
or
bound
push
js
cmpsl
push
jb
add
fcomps
add
cmp
push
mov
mov
add
sbb
lock
enter
cmp
adc
les
hlt
ds
mov
ficoms
push
test
pop
popf
inc
sbb
or
pop
jne
adc
cmc
outsb
push
repnz
and
lods
mov
adc
mov
xchg
mov
sub
lea
loopne
jo
adc
mov
pop
test
clc
adc
adc
dec
popa
pop
mov
mov
sbb
stc
and
and
inc
int3
rcll
enter
lock
push
inc
adc
test
push
popa
add
dec
dec
aaa
popa
jp
movl
out
or
sub
add
icebp
cmp
xchg
and
out
push
adc
test
sti
setb
int3
xorb
test
je
mov
adc
cli
jg
push
clc
add
clc
jbe
test
add
jmp
sub
faddp
sbb
or
mov
and
sub
into
push
add
jecxz
shrb
xor
jbe
repz
push
add
je
pop
loope
or
out
mov
sarb
ret
sub
in
outsl
mov
add
sub
xchg
mov
mov
xchg
andb
push
mov
mov
push
nop
xchg
push
arpl
shrl
dec
cwtl
daa
roll
clc
loopne
xor
movb
and
mov
insb
sub
sbb
stos
dec
ret
dec
jl
lea
cmp
xchg
add
jmp
notb
je
push
nop
pop
addr16
mov
pusha
popa
pop
jno
jl
andb
jo
lcall
push
pop
mov
popa
call
pop
iret
nop
adc
dec
add
add
test
pop
push
mov
pop
pushf
lods
or
loop
push
pop
pop
imul
add
mov
mov
adc
lcall
inc
jmp
pop
inc
jae
ss
mov
fcoml
stc
cwtl
sub
test
cmp
roll
cmp
jb
xchg
fstl
push
push
and
insb
iret
jmp
jmp
dec
hlt
jae
jge
dec
adc
test
and
sarb
xchg
les
test
movsl
cmp
xor
enter
subl
or
push
je
xchg
ret
stos
sub
nop
adc
lcall
inc
orl
inc
xchg
out
fadd
sbb
inc
sbb
sarl
pushf
add
and
loopne
popf
ret
jge
or
xchg
dec
cmp
enter
xor
cld
xchg
sbb
subl
jb
aad
dec
push
jmp
or
add
push
dec
sub
arpl
mov
push
jmp
ja
pop
in
and
add
mov
mov
fcmovnbe
fisttpl
arpl
mov
nop
arpl
adc
or
insl
add
push
cmp
dec
dec
or
dec
lahf
add
jmp
adc
dec
enter
call
loopne
push
mov
dec
ret
push
fcoms
pop
int3
add
mov
pop
imul
push
clc
mov
jecxz
sub
or
jge
fs
insb
iret
imul
or
jge
ja
cs
clc
push
ja
movzbl
xchg
test
ss
xchg
mov
jno
sahf
imul
sbb
push
lret
jp
add
mov
add
add
push
add
pusha
add
mov
mov
mov
aad
inc
outsl
testb
jle
dec
ret
loope
std
cld
jl
cmp
inc
jle
mov
and
add
xor
aam
or
test
or
mov
or
shl
or
sub
adc
adc
and
jae
add
cmp
es
roll
and
xor
cld
push
or
jb
push
add
add
or
sbbb
pushf
add
out
out
mov
ret
imul
icebp
push
and
push
lods
dec
cmp
out
mov
cmp
and
clc
or
icebp
je
lock
lcall
xor
mov
dec
clc
sub
or
jge
or
dec
add
inc
cs
aam
xor
dec
bound
pop
mov
sub
add
test
pusha
pop
mov
sbb
xchg
nop
lcall
pusha
sldt
insl
popa
inc
nop
adc
push
jb
xchg
outsl
pop
xor
rcr
jmp
jge
fadd
and
rolb
sarb
cmp
dec
add
sub
bswap
repz
xor
fsubrl
popf
lea
orb
sbb
xor
pcmpgtd
pop
jne
adc
adc
mov
data16
jne
inc
push
inc
and
jne
dec
or
out
jae
jne
or
jne
or
inc
ffree
jne
mov
fsts
ret
sbb
jg
add
xchg
fldl
xor
loopne
les
icebp
pop
and
pop
mov
sbb
fsub
fsubrp
fdivrl
enter
push
add
int3
jmp
mov
test
inc
or
scas
orb
notl
outsl
cmc
mov
push
add
in
adc
push
insl
hlt
std
fstl
pop
sbb
xchg
push
inc
je
fcompl
sbb
in
nop
add
fsubs
pop
les
pop
adc
or
adc
or
dec
or
mov
jb
into
bound
ja
cmpl
shll
or
xchg
jle
dec
add
lret
arpl
mov
addr16
and
leave
ljmp
iret
cmp
jb
lea
bound
lds
mov
lods
lock
stos
das
and
jo
mov
push
mov
mov
cmpsb
sbb
ret
or
adc
dec
hlt
aaa
xor
aaa
sub
ljmp
out
lcall
cmp
cmp
xchg
push
jmp
loopne
xor
scas
and
adc
add
call
mov
pushf
stos
jge
mov
push
mov
pop
jl
nop
jg
mov
cmc
push
sbb
ja
adc
xor
mov
xchg
icebp
scas
push
cmp
icebp
mov
lea
orl
add
mov
add
pop
mov
jo
sbb
test
inc
sbb
sahf
xor
or
inc
adc
push
push
mov
idiv
xor
inc
push
mov
cmp
sti
xor
sub
mov
sbb
pop
add
mov
test
jo
mov
sbb
loope
push
out
pop
pop
mov
in
or
lret
adc
cmp
sbb
cmp
dec
jecxz
cmp
push
cmpl
inc
xor
ror
daa
mov
xor
cwtl
rcrb
imul
xor
jp
popa
pop
or
add
sub
add
add
mov
scas
xor
dec
cld
sub
or
jge
clc
or
inc
push
xchg
fnstcw
fwait
push
push
push
cltd
xchg
movl
hlt
movb
dec
lock
adc
sub
xor
cmc
jl
cmp
in
mov
mov
fildl
arpl
jb
push
or
dec
fwait
jo
adc
stos
fs
sub
pushf
rolb
mov
loope
mov
mov
clc
cwtl
mov
mov
jbe
insl
mov
ret
lock
push
add
leave
or
lsl
cmp
rclb
sarb
cmp
xchg
mov
fbstp
jb
add
adc
and
pop
fbstp
lds
and
push
fcoml
sub
adc
mov
xor
cwtl
or
jl
pop
mov
adc
sbb
ret
sub
lods
lret
out
mov
push
mov
dec
and
movsb
push
mov
pusha
and
or
sub
aaa
dec
adc
lret
push
out
mov
add
je
js
pop
pop
mov
jo
mov
ret
inc
leave
sbbl
xor
ret
out
push
xor
lea
cmp
push
push
mov
xchg
icebp
xchg
rclb
popf
aam
loop
mov
test
ds
in
cld
inc
cmp
xchg
out
dec
add
xchg
cmpsl
nop
imul
dec
dec
push
in
push
sbb
and
sbb
dec
dec
pop
clc
push
rolb
lret
movsl
fwait
in
cmp
rol
int3
mov
stos
jmp
or
and
sbbb
xor
or
mov
lock
lea
and
outsl
add
inc
fisubs
shll
jp
and
int
std
decl
ror
into
sub
inc
lea
push
push
add
push
xchg
push
mov
cld
negl
or
rorb
fwait
and
jo
cld
into
sub
mov
adc
aas
adc
and
loope
or
mov
jnp
orl
clc
push
out
xchg
jl
inc
jle
and
rcrb
pop
lds
or
outsb
sbb
or
pop
cmp
mov
call
mov
push
push
push
adc
gs
add
or
mov
int3
jo
and
dec
popa
fptan
sub
dec
add
dec
mov
int
adc
enter
mov
xchg
in
sub
sbb
jl
xchg
push
loopne
mov
and
es
ja
test
movsb
int
inc
adc
add
mov
push
adc
gs
mov
xor
rclb
sub
push
cmpsl
jp
add
mov
jle
jbe
femms
popa
hlt
sub
ror
adc
mov
add
xchg
outsl
sub
add
or
pop
sbb
lea
mov
sbb
out
mov
insl
dec
lock
filds
shlb
mov
shld
mov
add
add
adc
push
add
rol
ss
leave
cmp
push
inc
jecxz
stc
jg
enter
jb
add
daa
mov
mov
dec
or
adc
dec
dec
jecxz
rorl
adc
adc
decb
dec
jns
jmp
pop
adc
cmp
inc
adc
jnp
sbb
cmp
pop
pop
scas
inc
cmpsb
cmp
js
popa
test
test
jl
jge
fdivrs
adc
add
bound
jle
or
xor
or
pop
xchg
icebp
mov
out
inc
sbb
sbb
inc
and
sarl
or
and
adc
neg
subl
adc
adc
adc
rclb
pop
cld
inc
mov
dec
push
sub
inc
inc
test
aaa
mov
mov
outsb
in
sub
sub
sbb
sbb
add
andl
push
sbb
jmp
fs
or
test
xlat
xlat
adc
pusha
jmp
cmpsb
jnp
leave
rcrb
test
ret
mov
xchg
mov
pop
lods
es
push
cltd
movsb
adc
and
xor
push
test
sbb
aad
daa
sbb
cs
mov
ss
push
push
ret
ss
pop
jb
jl
xchg
lea
push
add
and
sub
push
repz
sub
fdivrl
dec
push
pop
pop
in
or
adc
add
jge
test
test
push
loope
cltd
sub
daa
mov
mov
adc
stos
call
icebp
aad
pop
stos
notb
shl
es
rorb
inc
shrb
shlb
add
inc
outsl
imulb
mov
xchg
push
and
jno
mov
push
push
push
jo
dec
sbb
daa
and
dec
sub
mov
je
sub
inc
sbb
andl
sbbb
and
lret
inc
adc
mov
cmpsb
dec
cli
mov
je
dec
or
or
pop
xor
popa
outsl
add
fstpt
lahf
mov
das
jle
out
mov
adc
aaa
mov
pop
repnz
jg
mov
and
jmp
add
cmp
or
or
jo
add
adc
nop
xchg
lret
inc
add
and
or
in
ficoms
add
jae
out
push
cld
xor
xor
imul
stc
sub
dec
cmp
jg
sbb
push
xchg
and
pusha
loop
stos
xor
in
adc
aad
mov
jb
adc
xor
and
cmp
mov
xchg
popf
mov
das
int
dec
rclb
mov
in
movsb
cmp
mov
xor
mov
or
adc
mov
mov
mov
dec
or
insb
inc
fcoms
and
test
cmp
mov
jmp
lods
xor
mov
dec
cmp
jmp
add
hlt
xchg
mov
xor
or
or
adc
adc
andb
ret
call
stos
loopne
stc
cmp
xchg
lret
or
adc
mov
mov
imul
mov
xchg
add
push
shll
or
lret
dec
cltd
jmp
sbb
xor
xchg
lea
and
mov
call
pop
push
js
xchg
jl
pop
ds
in
pusha
inc
sbb
insb
inc
and
lock
les
lock
pop
fistps
jmp
repnz
mov
push
pop
mov
outsb
xchg
into
dec
std
aas
pop
inc
pop
rcl
xchg
pusha
les
or
jne
shl
loopne
lcall
mov
mov
fs
shll
adc
jns
or
or
jo
or
cmp
insl
arpl
add
push
inc
nop
pop
ds
mov
sar
jg
adc
push
mov
cmp
jl
cmp
jle
cmp
fisttpll
decl
jp
or
pop
mov
je
cmp
push
inc
enter
daa
mov
jno
cmp
jge
mov
pop
and
cmp
jl
pop
enter
adc
push
call
lcall
iret
xor
add
es
mov
pop
sbb
jl
lock
mov
cld
sub
sub
add
mov
jno
xor
test
jne
pop
pop
mov
lock
xor
inc
cmc
cld
pop
or
fadds
jl
fistps
jg
fists
mov
mov
sbb
out
inc
or
add
and
shl
cmp
jge
and
jb
cltd
push
hlt
jg
test
movl
jb
inc
cmpsb
mov
jg
xchg
jbe
xchg
or
adc
add
lea
test
add
mov
ss
ret
addr16
xchg
lea
add
mov
mov
into
push
sub
mov
or
pop
mov
fdivs
lcall
incl
sti
push
and
mov
insl
add
ret
fildll
das
sbb
lret
js
lods
jg
cmpsb
or
inc
aaa
pop
fdivs
and
xor
into
imul
push
jne
clc
mov
pop
cmp
in
and
leave
and
adc
inc
call
int3
push
add
mov
fmuls
cmp
es
lcall
xor
inc
hlt
jg
xor
cmpb
jp
dec
pop
add
jo
test
sbb
cmp
cmp
sbb
mov
xchg
xchg
hlt
jge
addb
jnp
push
cli
inc
and
or
lret
xor
test
addr16
mov
mov
imul
fstl
in
inc
jge
das
jmp
xor
das
lods
movlps
lcall
movsb
out
sbb
iret
repz
pop
push
pusha
fs
or
inc
jecxz
and
jl
negl
inc
jecxz
stos
outsb
movsb
push
lods
mov
cwtl
jge
cmp
movsl
pop
mov
mov
in
add
or
push
xchg
jno
sbb
pop
xor
jb
add
dec
mov
pop
gs
test
sbb
jne
cld
outsb
cmp
xor
ja,pn
sbb
pop
roll
or
sub
icebp
fsubp
out
push
sub
sbb
push
or
repz
stc
and
jnp
lret
orb
add
push
xor
or
notb
or
pop
outsl
inc
mov
push
cmp
test
jle
shrl
dec
and
dec
sbb
dec
and
cld
push
mov
mov
mov
and
mov
and
add
iret
sbb
dec
sub
xorb
push
in
andl
enter
mov
fistpl
sbb
lretw
rcrl
dec
push
mov
enter
inc
jg
sub
jo
test
xchg
dec
clc
jnp
subb
insb
addl
jl
or
gs
test
inc
into
add
pop
shrl
sbb
adc
pop
xor
shrl
dec
jns
in
aas
pop
int3
cli
mov
lea
clc
mov
jnp
test
call
push
mov
shlb
add
aad
push
and
loopne
into
mov
orb
movsb
jmp
jnp
sbbl
cmp
fwait
stos
mov
mov
add
outsb
nop
sbb
cmpsl
pop
sub
adcb
xchg
sbb
mov
stos
outsb
sbb
inc
sub
js
pop
dec
clc
lahf
divb
add
sbb
lret
int
dec
sub
fwait
pop
adc
mov
cmpsb
in
mov
test
stos
xor
lea
test
push
inc
adc
cmpsb
inc
les
or
gs
pop
adc
mov
adc
dec
push
fs
je
mov
lea
cmp
jmp
or
and
daa
je
daa
add
adc
and
add
inc
sub
push
int3
add
push
inc
add
push
in
dec
sbbb
fldl
cmp
popa
hlt
and
inc
jo
jo
fs
mov
jle
dec
add
and
or
clc
sub
in
fnsave
sbb
mov
add
push
repnz
jmp
sub
cmp
cmp
rcr
xchg
testb
push
out
call
push
jmp
outsb
je
shlb
sub
dec
test
test
faddl
daa
in
sahf
dec
add
sbb
add
or
mov
xchg
cmp
lds
jp
mov
inc
and
mov
mov
popf
pop
shrb
lret
sbb
in
mov
xor
pop
mov
xchg
popa
aaa
sub
mov
xchg
inc
cmpsb
loope
dec
xchg
lock
cmpb
adc
pop
push
inc
or
mov
jl
lea
mov
xor
cmp
jle
dec
sub
inc
jle
mov
sub
sub
xor
cmpl
inc
cmp
sarb
hlt
push
cmp
add
add
mov
addr16
push
adc
sub
int3
adc
cmp
and
and
push
push
inc
and
out
sbb
cmp
pop
notb
add
adc
jge
and
sbb
mov
adc
sbb
mov
or
push
ficoml
mov
add
add
icebp
inc
lods
into
or
mov
mov
bound
icebp
sbbb
aaa
imul
jne
bound
xchg
adc
add
and
fcompl
frstor
imul
add
and
or
retw
xor
jmp
outsb
loope
es
pop
lret
std
notl
dec
inc
and
dec
adc
jmp
sbb
pushf
and
xor
push
popf
jmp
pop
push
jb
data16
out
xchg
push
lods
ss
or
nop
or
lods
loopne
mov
adc
sub
sbb
jmp
push
xchg
jne
lea
stc
push
imul
pop
testl
mov
daa
pop
push
mov
pop
inc
dec
repz
push
inc
sbb
fcmovne
lock
test
jb
cmc
rolb
hlt
rorb
adc
dec
ret
inc
lret
scas
xchg
jo
in
inc
sub
add
or
cmp
mov
mov
xchg
add
ret
mov
std
push
fstps
pusha
sub
xchg
js
ljmp
xor
pop
std
ja
push
cwtl
and
push
push
stc
jl
sub
lock
inc
xor
fwait
and
adc
add
jns
sahf
lea
adc
pushf
sub
mov
aam
shlb
inc
sbbl
mov
jb
xor
mov
dec
shr
sub
cltd
push
out
icebp
std
adc
call
cmp
div
inc
cmp
jae
cmpl
add
adc
sbb
in
dec
or
jmp
jbe
or
pop
inc
and
mov
enter
cmp
fs
sbb
pop
jns
icebp
lret
jbe
xorl
cmp
push
add
jmp
shrl
idiv
bound
sbb
dec
xchg
test
dec
xchg
sub
das
lea
inc
sbb
out
mov
push
lods
push
cmp
dec
dec
adc
jge
insl
jecxz
inc
add
xchg
add
sub
sub
lret
adc
loope
and
add
fucomip
xor
add
or
fdivs
roll
fisubrs
js
adc
mov
cmp
testb
adc
out
rcl
jb
insb
lds
pop
jb
push
sbb
in
test
mov
out
lret
in
adc
jmp
pop
sub
or
sub
add
inc
mov
test
jne
fbld
add
decb
cld
mov
jl
loopne
mov
cmp
je
enter
decl
add
sub
or
or
ss
sbb
aad
mov
jae
jmp
in
add
mov
mov
jge
in
cmp
clc
icebp
adc
sub
mov
jne
ret
cmp
cmp
inc
xorl
or
and
adc
test
mov
push
push
inc
pop
and
stos
enter
or
fidivs
fidivs
sbb
inc
scas
lock
jne
lock
divb
cmp
loopne
jne
mov
adc
mov
sbb
mov
lcall
movsb
ljmp
add
mov
les
or
scas
and
shll
mov
add
push
adc
repz
adc
adc
insb
mov
fidivrl
mov
push
inc
xor
sbb
jo
fmulp
rolb
push
adc
scas
mov
repnz
cmp
pop
call
imul
xchg
int
push
adc
sub
faddp
add
sub
sbb
jecxz
ds
or
sbb
add
leave
into
loopne
fisttpl
jns
or
and
mov
add
pop
and
and
lock
popf
xlat
xor
jns
enter
push
into
add
int
inc
jecxz
xchg
jb
or
mov
js
sub
jns
xchg
jle
subb
aam
dec
push
xor
jge
jmp
xchg
jo
pop
mov
icebp
mov
das
js
jge
mov
sub
push
jbe
lds
dec
inc
in
or
and
inc
and
out
mov
jno
daa
sbb
inc
das
out
loop
out
inc
push
jb
ffreep
sbb
mov
cmp
mov
xor
add
add
jnp
push
pop
jne
push
testl
dec
mov
or
pop
ds
fcoml
ja
mov
shr
push
add
push
mov
dec
sbb
xchg
ret
ret
loopne
mov
mov
leave
and
clc
cmp
adc
inc
cwtl
xchg
adc
int
sub
nop
or
and
xchg
add
dec
mov
sub
popf
ss
dec
andl
mov
dec
mov
inc
sub
popa
pop
pop
lds
cmp
inc
idivl
cmp
adc
add
mov
pop
popf
push
xorl
push
push
decb
loopne
xor
inc
mov
add
es
cmp
mov
in
inc
adc
outsb
hlt
imul
add
sub
imul
dec
inc
mov
hlt
pusha
cs
mov
jne
jle
jno
dec
xor
sarl
sub
push
jne
lea
fsubrs
jp
dec
add
mov
mov
add
dec
jno
mov
jg
jb
dec
adc
push
cmp
or
or
cmpsl
mov
add
daa
add
and
pop
imul
cmp
add
push
leave
dec
sbb
sahf
sbb
test
mov
jb
mov
mov
jecxz
scas
xchg
mov
and
and
pop
mov
jae
dec
in
test
and
cmc
pop
shl
sub
inc
mov
jo
jmp
hlt
inc
adc
xchg
ret
jo
push
or
sarl
xchg
aam
adc
add
mov
stc
popf
enter
ss
and
and
adc
dec
mov
mov
movl
insl
les
or
fisttpll
sbb
push
mov
dec
int
in
jmp
jge
mov
mov
and
adc
pop
les
idivl
ljmp
inc
push
mov
or
aad
xchg
or
push
sbb
imul
sbb
mov
push
mov
popa
mov
sub
adc
clc
dec
rcrb
pushf
adc
loopne
call
ret
mov
call
xor
cmp
push
xor
shll
pop
je
push
xlat
jmp
aam
push
add
faddl
mov
or
mov
mov
jbe
fsub
loopne
sub
jle
jne
pop
push
inc
loopne
adc
cmp
jmp
cld
and
loopne
adc
pop
push
dec
mov
popa
push
push
push
or
add
enter
clc
repnz
push
push
into
adcb
orb
sbb
dec
xor
icebp
jmp
lea
mov
pop
inc
adc
sbb
dec
loope
inc
cltd
or
jecxz
cmp
pusha
sbb
lods
mov
pop
xchg
out
fs
and
xchg
dec
push
lcall
out
negb
jle
cmp
adc
jecxz
sarb
mov
mov
js
jne
fistps
jl
sub
mov
call
add
lods
cmp
ljmp
jae
out
shlb
leave
or
pop
jmp
cmp
or
dec
mov
mov
inc
cmp
push
das
cmc
les
sub
aam
push
les
insl
jmp
or
push
out
test
lret
dec
xchg
je
aas
add
sarl
or
cs
inc
jo
or
add
addl
subb
out
inc
sub
jbe
and
lock
sub
add
or
pop
mov
add
insb
sti
sub
lret
jne
and
in
add
cmc
cmp
cmp
mov
and
push
jg
cli
pop
xchg
push
imul
dec
push
out
mov
clc
idivb
aaa
sbb
adc
push
xorl
sbb
adc
jmp
sub
cmp
jne
push
out
out
shll
inc
mov
jne
pop
data16
loop
pop
or
cltd
popa
push
pop
add
jae
and
xor
jo
les
insl
push
add
xor
sub
add
push
cmp
pop
cld
popf
test
loop
jmp
ds
add
js
iret
jecxz
movsl
outsb
or
and
nop
xchg
addb
jmp
dec
xor
or
es
ds
clc
push
sar
xchg
loopne
cs
adc
push
push
lods
cmpb
je
pop
jp
add
or
inc
or
inc
jbe
push
fwait
pusha
xor
xchg
pop
xorb
pop
xchg
push
mov
jle
outsl
push
jae
push
add
push
ss
mov
test
je
cld
jmp
mov
push
add
mov
push
imul
sbb
decb
lock
cmp
inc
push
lea
testb
je
pop
imul
cmp
adc
add
inc
and
adc
cmp
leave
jmp
push
dec
call
dec
sbb
adc
or
inc
stc
enter
outsb
or
pop
mov
es
dec
cmp
sub
loope
mov
inc
rcrl
jmp
mov
add
sbb
pop
adcl
sar
sti
mov
push
xor
pop
push
js
fidivs
jge
call
push
adc
lret
into
xchg
lea
jl
cmp
adc
or
inc
je
jp
loope
jnp
dec
in
ljmp
push
out
rolb
or
fs
std
cli
aas
nop
sbb
sbb
push
xlat
xchg
aaa
push
sbb
inc
jg
sti
loopne
outsl
push
push
loopne
iret
ficompl
add
dec
push
or
lcall
gs
xor
mov
fwait
cs
jmp
inc
push
shll
es
pop
cmp
or
mov
pop
add
ret
test
or
das
mov
xorl
or
mov
es
insb
je
mov
add
je
and
das
stc
fnstenv
ret
movsb
and
add
add
cmpl
mov
int3
xor
pop
add
add
je
mov
jb
test
mov
pusha
lcall
add
lret
sub
ret
adc
cmp
nop
std
cld
adc
mov
popa
push
rol
sbb
cli
inc
ja
inc
dec
adc
in
rol
idivb
or
movsl
jmp
in
mov
fisttpl
movb
add
cmp
insl
loopne
or
mov
mov
and
out
popf
add
popf
mov
or
sbb
inc
sbb
adc
xor
cmp
aad
mov
mov
pop
inc
fadds
arpl
and
mov
jp
xchg
insb
lcall
js
cmp
cmp
mov
insl
repnz
bound
inc
les
dec
push
sub
loopne
je
dec
xor
mov
cmpsb
inc
aas
xor
sbb
stos
gs
push
or
adc
push
cmp
inc
ret
or
push
sbb
jmp
aam
inc
retw
movsl
repz
lods
outsl
and
test
cwtl
data16
pop
rcrb
es
setge
inc
or
scas
rcll
test
pop
mov
inc
adc
xor
rolb
jns
iret
jnp
jbe
loopne
push
push
clc
aad
testl
or
mov
jno
mov
or
or
cmp
inc
inc
jecxz
fdivs
cmp
and
repnz
ss
prefetchnta
cld
sbb
mov
rcll
icebp
adc
add
jne
roll
aas
push
pop
cmp
jae
movups
xchg
nop
test
ret
enter
sub
popf
incl
pop
push
sub
je
sar
push
fadd
sti
call
add
stc
lock
xor
push
push
pop
arpl
das
fdivrs
jne
gs
sbb
jg
push
lock
jg
add
sbb
ret
jo
pusha
stc
call
adc
test
rolb
and
shrl
cmp
test
push
push
sub
or
icebp
pop
outsl
pop
dec
pop
pop
xor
out
mov
dec
push
cs
sbb
pop
cmp
push
pop
or
adc
cs
or
add
push
add
add
ds
negl
fiaddl
in
push
jg
negb
sub
cwtl
jbe
xchg
or
mov
push
je
sub
mov
pop
adc
insl
call
imul
test
out
mov
ljmp
xor
mov
mov
mov
dec
mov
mov
imul
adc
ljmp
mov
das
inc
aaa
add
scas
dec
in
cmp
into
jmp
insl
or
or
xor
sbb
jg
lea
mov
insl
sub
push
outsl
pop
push
sbb
stos
popf
ret
add
lock
mov
or
push
ret
and
cmp
in
sbb
mov
sub
and
add
cmp
insb
jg
jmp
inc
adc
pop
or
outsl
sbb
ja
push
pusha
add
mov
mov
inc
cmp
mov
xor
adc
daa
dec
andl
sbb
loope
mov
es
push
jne
cmpl
dec
pop
dec
ds
mov
or
sarl
cmp
cs
adc
jp
js
stc
or
push
jle
dec
push
jmp
add
fsts
or
test
jmp
xchg
push
je
cmp
jbe
push
movl
imul
loop
xchg
lret
pop
stos
pop
push
lock
in
inc
add
or
push
add
lods
jbe
out
sbb
imul
mov
pop
add
rorb
xor
push
fists
mov
fdivp
xchg
push
rcrl
xor
add
add
int
cmp
stmxcsr
notb
loop
add
cmpb
sbbb
psubusw
mov
imull
out
loopne
clc
jg
fs
test
movd
out
out
movapd
xchg
adc
enter
shlb
jle
mov
mov
xor
cli
rcl
lret
insl
sbb
enter
jge
repz
or
adc
or
sub
xchg
ret
adc
add
stos
jbe
and
in
add
mov
aam
add
adc
push
add
adc
lock
mov
pop
add
fadd
roll
add
pop
lock
add
addps
int
sub
sti
mov
adc
push
dec
sbb
mov
jecxz
add
sbb
jmp
and
or
mov
test
test
test
mov
ljmp
add
pop
cmp
mov
add
out
or
xchg
fimuls
test
ljmp
mov
mov
and
imul
add
pop
mov
jb
cmp
mov
push
icebp
call
inc
addb
flds
sub
mov
sub
jne
mov
shl
not
cltd
pushf
or
or
add
push
mov
dec
ljmp
inc
mov
push
cs
inc
loopne
int3
add
in
js
jb
pop
add
sbb
pop
xorl
shl
dec
lock
push
test
call
sub
movsl
in
add
jmp
or
add
cmp
lea
add
test
xor
out
mov
ud2
mov
or
scas
es
xchg
and
mov
movsb
les
data16
or
lods
adc
outsl
dec
add
sbb
add
cmpsb
nop
and
movb
das
or
push
add
cld
push
hlt
in
fwait
sbb
pushf
mov
cmp
repz
in
in
lock
repz
hlt
clc
clc
dec
sub
or
shll
mov
add
sbb
jmp
loope
inc
pop
incb
nop
inc
pop
sti
xor
push
inc
and
push
lea
jl
cld
pop
and
pop
rorl
cld
out
or
jo
rorl
jnp
inc
inc
sub
inc
mov
fcmovne
rcr
hlt
sbb
add
out
add
out
add
aaa
adc
mov
dec
addr16
add
mov
add
push
insb
mov
iret
repz
or
push
js
mov
cwtl
mov
repz
repz
adc
adc
repz
adc
or
add
xchg
int3
inc
sbb
clc
push
push
mov
pop
mov
stos
in
lods
xor
mov
add
arpl
jmp
movsl
cmpsl
movsb
sub
jle
sbb
add
movsl
push
lods
push
xor
add
mov
mov
movzbl
fcmove
mov
test
je
stos
mov
add
dec
dec
lods
mov
out
adc
inc
je
push
notb
jmp
jp
je
mov
push
ss
or
divb
add
jmp
jnp
push
ret
cmp
push
inc
popf
pop
lods
mov
mov
adc
sub
mov
dec
cmp
sbb
xor
sbb
lea
xor
or
adc
mov
and
frstor
ret
cltd
cmpsb
insb
sbb
outsb
ror
and
pop
dec
and
cld
ret
xor
add
cmp
andl
jb
mov
mov
ficoms
fcoms
lods
loopne,pt
cwtl
mov
je
into
inc
cmp
dec
add
in
mov
test
loop
in
pushl
adc
jne
inc
cmpb
out
insb
xor
lret
mov
inc
inc
xor
mov
push
sub
jecxz
imulb
imul
mov
ljmp
add
cmpsb
add
fsubr
jle
sahf
out
aam
arpl
dec
adc
iret
fwait
dec
adc
cmp
lret
add
cmp
push
cs
mov
xor
add
hlt
pop
cmpsb
subl
adc
daa
push
mov
adc
jne
int
and
jmp
lods
mov
adc
jge
rcll
insl
orb
inc
out
cmp
inc
inc
cwtl
jnp
roll
daa
or
pop
lcall
rolb
push
test
aaa
int
cmp
loopne
ret
cs
ss
sbb
lods
cmp
lock
leave
pop
mov
push
imul
mov
adc
xchg
dec
mov
mov
call
movd
cs
inc
pop
pop
filds
and
pop
lret
ja
add
jo
mov
inc
mul
mov
add
jne
orl
xor
iret
and
dec
jecxz
cs
andb
mov
push
inc
pop
push
jge
add
sub
xor
outsl
and
nop
sbb
int3
jne
rclb
xor
sub
stc
pop
adc
pop
mov
inc
push
sbb
jge
stos
mov
shr
mov
sub
inc
in
dec
or
pop
call
loopne
pushf
jo
or
mov
add
push
fisubrs
data16
xorl
outsb
divb
and
lods
inc
insl
fimull
jle
insb
in
or
xor
in
orb
inc
xor
dec
clc
or
jle
inc
mov
adc
pop
enter
pop
adc
pcmpeqw
dec
pop
push
adc
out
shl
adc
inc
int3
cmp
add
cld
push
ljmp
add
push
adc
push
lcall
xchg
stos
cld
cmp
jl
jg
cmp
jbe
inc
mov
rcr
mov
add
and
or
sbb
shrb
std
loopne
rcrb
icebp
nop
jae
rorl
or
inc
imul
or
incl
add
pop
daa
ljmp
fidivs
sub
push
es
push
add
and
mov
mov
jne
fs
mov
or
stos
push
mov
mov
pop
adc
int3
push
lods
ficomps
adc
jl
pop
fcomip
xchg
xchg
pop
daa
in
orb
push
xchg
inc
mov
adc
mov
nop
push
mov
psubsb
clc
mov
call
pusha
dec
test
and
test
subb
xorb
imul
and
shll
sub
or
inc
gs
push
push
jp
scas
ss
jno
inc
xchg
mov
or
push
add
add
sbb
jp
das
shll
and
mov
and
xor
rorl
pop
stc
inc
loope
push
push
jl
inc
das
test
pop
pop
cmp
loop
mov
je
daa
xchg
clc
mov
rclb
push
test
ret
call
test
loop
orb
and
mov
fmull
fadds
loop
lret
mov
fsubr
sbb
pushl
insl
and
lahf
ja
sbb
and
add
push
mov
adc
mov
stos
inc
loopne
fdivrl
or
imul
loopne
loopne
xor
inc
loopne
fmuls
or
or
or
jmp
and
add
imul
or
stos
push
adcb
cmp
dec
shrl
add
xor
push
pop
sbb
js
mov
mov
mov
les
in
rcll
jo
hlt
add
pop
mov
aaa
loopne
loopne
cmp
lcall
clc
adc
shll
cs
mov
test
lret
dec
jmp
and
test
pop
or
hlt
adc
inc
aaa
push
lds
and
push
loope
sbb
test
pusha
adc
xchg
mov
push
xchg
sbb
in
add
inc
pop
loop
loope
ret
inc
fsts
notb
lcall
lock
jns
test
add
shr
inc
xor
push
int
or
dec
sbbl
xchg
pop
mov
inc
or
ljmp
test
aas
add
filds
or
ret
mov
cmp
jne
or
sbb
pushf
cmp
and
sahf
loopne
cmp
test
adc
mov
dec
sbb
sub
nop
sbb
outsl
fs
ret
xchg
je
mov
not
shrb
mov
cld
push
fstl
xor
fcompl
jmp
add
or
or
pop
xchg
lret
pop
mov
cmp
and
and
mov
dec
pop
mov
add
jne
jmp
mov
rcrl
push
inc
fsubrp
mov
add
dec
faddl
test
jp
push
mov
call
dec
lret
nop
lret
imul
imul
xor
and
cmpsb
mov
and
jns
lods
aam
aad
stc
mov
aaa
inc
adc
add
mov
xchg
das
jb
and
add
xchg
pop
push
lock
adc
int3
dec
enter
loope
bound
loope
call
add
repnz
filds
outsb
jne
pop
mov
mov
enter
mov
xor
and
cmp
pusha
sbbb
vmovupd
jle
dec
adc
aas
add
in
test
cmp
xchg
push
adc
dec
nop
push
push
add
mov
je
arpl
test
adc
inc
aas
add
push
popa
and
cmp
in
or
and
mov
sub
mov
sub
and
dec
ljmp
ret
adc
mov
inc
inc
mov
frstor
push
loope
add
mov
ss
dec
mov
mov
cmp
mov
inc
cmp
jb
outsl
sbb
fwait
and
jne
in
push
fiaddl
pop
test
ficoms
out
mov
mov
cmp
hlt
push
jo
mov
aad
push
stos
faddl
push
mov
lea
cld
push
outsb
jne
std
jg
push
aam
sbb
cmp
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
inc
insl
out
call
into
or
lcall
inc
incl
jns
fisubs
pusha
jmp
adc
jmp
std
sub
stc
std
jmp
cld
cld
jmp
fldt
adc
in
adc
push
rolb
out
xor
popf
orb
sub
jmp
mov
es
push
sbb
loope
adc
mov
shl
mov
rep
adc
data16
inc
inc
sahf
xlat
push
mov
dec
sbb
inc
or
ss
adc
cmp
lds
sar
or
ja
insb
dec
imul
push
pusha
jns
adc
add
daa
ret
inc
or
call
or
inc
loopne
xchg
or
imul
push
inc
push
or
insl
push
cmpsb
xchg
call
adc
sbb
jo
pop
adc
leave
sub
or
addr16
shlb
add
imul
and
add
xlat
inc
inc
cmp
outsb
cmpsb
dec
mov
je
daa
or
jg
add
mov
cmovbe
sbb
add
mov
aas
call
push
push
lahf
mov
mov
out
mov
sub
mov
cmp
hlt
jbe
jae
out
es
jle
cltd
fsubrs
sbb
or
insl
fs
int3
add
and
add
mov
nop
cltd
xchg
dec
loope
mov
add
aaa
popf
jmp
mov
lcall
adc
push
std
add
outsb
adc
lods
and
test
insb
inc
lea
push
mov
adc
sub
xor
and
test
lcall
inc
or
adc
pop
adc
mov
dec
sub
adc
iret
mov
push
jns
or
bnd
shl
push
cs
sub
mov
push
loopne
xor
lret
nop
pop
fadds
jbe
loope
mov
sbb
or
loop
push
push
out
jne
ret
call
or
cmp
je
pusha
out
cmp
ficoml
ffree
je
adc
adc
faddl
aam
xchg
pop
addr16
outsb
or
cld
aad
repnz
adc
mov
add
sub
mov
dec
push
and
jo
xchg
in
sbbl
iret
push
es
test
or
jl
and
lret
test
mov
sub
cmpl
pop
movsb
movzbl
out
pop
inc
sub
out
inc
push
mov
inc
jmp
cmp
jne
orl
xchg
sbb
sub
sub
pop
add
pop
or
rolb
and
cmp
and
xor
repz
cmp
xchg
push
stc
mov
and
adc
xor
jne
pop
xor
fdivrs
loope
jo
pop
add
mov
mov
push
clc
ss
pop
or
aaa
or
mov
and
movsbl
sub
scas
loop
jmp
mov
call
lahf
cmp
sub
cs
add
cmp
jae
outsb
or
rolb
in
sub
push
clc
jbe
add
and
dec
mov
add
mov
daa
fs
push
cld
imul
add
loopne
aaa
xchg
sbb
mov
add
sbb
push
cmp
mov
icebp
inc
ja
ljmp
add
pop
add
mov
decl
and
lea
mov
out
sub
loop
stos
movsl
cmp
in
sbb
pop
or
inc
xor
test
mov
add
mov
push
stos
and
jg
popa
push
sub
xor
data16
aam
mov
pop
sar
dec
sbb
dec
ret
xor
shlb
sbb
popf
add
inc
loop
push
or
mov
sub
mov
inc
add
pusha
ret
repz
add
jae
jbe
dec
sbb
repz
nop
or
cmp
jb
lea
neg
outsl
push
adc
push
pop
dec
aaa
xchg
adc
mov
pop
cmp
outsb
in
fisttpl
loop
pop
push
hlt
push
mov
mov
clc
ret
es
xchg
or
subb
add
ud2
inc
mov
or
push
mov
push
sub
pushf
orl
cli
dec
and
xchg
fwait
jne
jnp
call
inc
dec
lods
jae
cwtl
call
and
push
push
enter
call
cli
stos
or
sub
ja
je
sub
hlt
lock
daa
cmc
jbe
pop
xchg
cmpsb
mov
jge
or
xor
mov
bound
push
add
ss
mov
mov
movb
adc
xchg
leave
sub
std
add
cmpsb
dec
loopne
arpl
push
push
daa
lret
pop
push
stos
movb
lahf
mov
and
mov
clc
js
stc
push
jmp
inc
xchg
dec
push
lock
xchg
cltd
adc
sbb
ss
daa
movsb
xor
je
jecxz
leave
sbb
add
js
data16
loope
pop
add
mov
int
fdiv
sbb
sub
mov
add
or
mov
pop
incl
es
nop
mov
or
push
adc
orl
sub
cmp
ja
gs
cmp
adc
sbb
decl
or
or
lret
je
jmp
xor
pop
jb
xchg
or
dec
jle
or
pop
sbb
mov
iret
jg
jne
dec
or
push
mov
pop
sub
aam
call
adc
lds
imul
iret
xor
and
aam
push
push
pop
sahf
cs
ljmp
mov
xor
sub
negb
ret
lea
test
add
jo
pop
add
or
add
add
xchg
out
add
movsbl
jmp
mov
jbe
pop
leave
repz
add
mov
in
add
nop
addr16
gs
pop
out
rcrb
or
or
and
scas
in
mov
fnstsw
or
test
or
in
in
or
sub
push
push
push
jae
inc
sahf
rdmsr
adc
aad
dec
adc
pop
adc
iret
adc
cmp
sbb
push
adc
add
adc
xchg
sub
adc
adc
xchg
adc
jns
scas
inc
pop
pop
repnz
and
sbb
xchg
sbb
jns
push
sti
add
cmp
in
sahf
xchg
fcompl
sbb
sbb
sbb
fwait
sbb
je
push
sbb
sub
adc
xor
sbb
pop
push
push
inc
negb
test
add
pop
jne
add
add
sub
jg
arpl
jl
cwtl
movl
or
insl
pop
xchg
ds
xchg
out
xorl
cmp
je
xchg
lcallw
hlt
rcl
ret
xchg
notl
xor
mov
out
mov
nop
out
sub
arpl
outsl
in
je
call
imull
mov
cmp
jb
iret
enter
push
cs
jb
jmp
jmp
inc
lcall
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
xor
lock
enter
icebp
icebp
das
xor
iret
repnz
xor
in
std
hlt
hlt
in
sahf
cmp
pop
hlt
xchg
std
addr16
iret
cmc
cmc
cmp
mov
sbb
nop
cmpsb
repnz
clc
clc
sahf
xchg
stos
pusha
clc
or
addr16
and
cli
or
sbb
xchg
fwait
lret
cld
cld
je
cld
push
sub
aaa
push
nop
shlb
mov
xor
and
mov
xor
nop
ret
in
sar
test
ja
xchg
aaa
rorl
dec
ret
stos
pop
cmp
cmpsb
adc
jecxz
xchg
push
shl
xor
push
xchg
sub
cmpl
ss
inc
in
sti
out
out
xchg
das
test
scas
scas
call
dec
push
and
sti
or
dec
jmp
jmp
aad
aad
daa
in
cltd
pusha
leave
and
sti
jmp
orb
lea
xchg
mov
dec
pop
cmp
or
xchg
stos
or
push
cmp
push
and
stc
sub
mov
imull
divl
test
clc
cltd
jb
adc
push
push
stc
sbb
xchg
stc
sti
sti
sti
xchg
jns
outsl
in
cld
cmp
jmp
mov
mov
and
dec
pop
aad
out
inc
je
dec
rorl
loop
shrl
test
scas
arpl
loope
clc
add
push
and
clc
dec
movsb
sub
adc
or
out
xchg
push
sbb
xchg
fdiv
out
and
negl
orb
adc
push
negl
and
test
notl
mul
add
or
sub
out
out
xchg
xchg
pop
push
lret
into
mul
scas
testb
and
test
xor
insl
repnz
pop
push
sub
sub
test
cmp
or
mov
out
div
push
fstl
dec
loope
in
pop
mov
das
sbb
cmc
push
popa
imul
mov
loope
cmc
adc
nop
cli
hlt
or
xlat
inc
pushw
data16
stc
mov
test
push
jo
adc
mov
sub
data16
mov
scas
negb
jp
push
and
mov
hlt
xchg
adc
mov
hlt
in
mov
repz
pop
jo
paddq
daa
or
xchg
repz
arpl
jmp
dec
dec
insb
repz
repz
add
push
cs
cs
in
mov
in
repnz
add
push
cmpsl
repnz
xchg
repnz
cmp
mov
jo
repnz
repnz
cld
icebp
cmc
cmc
sbb
dec
push
mov
xchg
inc
adc
lcall
stc
xchg
adc
pop
mov
pop
pop
xor
movups
lods
jmp
rorl
xchg
pop
mov
test
and
flds
les
mov
push
js
out
data16
push
sub
ffreep
push
inc
shlb
inc
cmp
cmp
ret
mov
add
mov
mov
push
enter
stc
xor
dec
icebp
dec
add
movsb
xchg
test
fisttpll
fisttps
dec
jo
lock
mov
fwait
int
sbb
push
xor
jl
xor
or
cmc
add
out
cmp
std
iret
mov
insb
cmp
das
divb
movsb
jbe
fwait
int
cmp
sbb
fsubrs
call
xchg
push
push
inc
out
sahf
loope
jge
pop
nop
inc
push
outsb
sbb
sbb
mov
push
rclb
rcrb
outsb
movsl
loopne
movsl
mov
aam
xchg
clc
imul
mov
popl
cmp
je
xchg
push
dec
xor
rclb
or
jne
push
call
xchg
dec
cli
es
fisttps
xchg
fmuls
lock
and
sub
push
push
adc
sub
into
les
fwait
xchg
cmp
xchg
call
mov
mov
mov
les
fcoms
add
or
pusha
push
mov
les
push
sub
in
popf
out
loopne
inc
fs
push
xchg
je
jbe
add
cmc
mov
pop
push
inc
movb
stc
inc
jl
xor
xchg
sbb
inc
jnp
adc
pusha
add
pushf
cmp
fistpll
fsubrs
or
mov
inc
es
jns
jg
or
rclb
cmp
or
or
and
pop
add
mov
loopne
fstps
jp
sub
outsb
imul
mov
das
pop
mov
inc
jmp
sub
jno
lahf
jg
pop
add
inc
or
loop
icebp
js
and
jae
rcl
add
add
rcl
je
ret
mov
inc
jl
aad
leave
mov
nop
call
add
add
inc
aam
jns
or
and
xchg
call
xor
mov
aam
call
add
pop
mov
leave
add
call
pop
push
lock
stos
inc
adc
pusha
pop
test
or
test
inc
daa
dec
mov
or
push
cmp
push
dec
jne
popf
sbb
sbb
mov
and
stc
repnz
enter
dec
jnp
xchg
daa
add
aam
int
ds
inc
xor
das
inc
fisttpll
and
jmp
sbb
jo
push
push
jl
cmp
decl
jne,pn
xor
test
mov
and
aaa
jbe
push
cltd
pop
idiv
xor
outsb
adc
push
pusha
or
cli
fucomi
push
shrb
adc
cli
jg
movsl
or
bnd
cmp
jae
dec
lea
add
pop
jae
pop
jbe
cwtl
adc
cltd
adc
push
dec
xorl
push
repz
jo
pop
sub
adc
imul
fstp
mov
mov
repnz
or
rolb
add
add
movsl
test
or
je
or
je
dec
je
push
push
lret
cmpsb
jnp
cwtl
adc
pop
add
mov
cmp
pop
imul
push
lcall
ds
cmpsb
sbb
adc
movsb
mov
mov
incl
decl
pop
scas
or
dec
pop
repnz
jmp
pop
das
mov
idiv
mov
mov
inc
sub
lock
push
pop
adc
pop
sub
xlat
inc
loopne
or
ret
push
ja
sarl
jnp
mov
in
push
cmp
jmp
aaa
xchg
test
enter
cmp
loop
cs
jge
xchg
cltd
pop
idiv
adc
mov
inc
les
mov
popa
inc
mov
cmp
and
xchg
cmc
cs
add
sub
mov
mov
mov
mov
mov
add
lret
fmul
adc
fs
jb
sbb
popl
pop
loope
adc
push
push
sub
sbb
add
movsl
xchg
adc
decb
pop
out
xor
xor
bound
sbb
or
add
mov
stos
push
ss
inc
xchg
pop
aas
lea
test
xchg
add
cmp
rorb
mov
imul
cmp
push
mov
dec
jl
sbb
push
push
ret
sbb
cmp
sbb
cmp
xor
pop
in
mov
mov
adc
sbb
mov
rcrb
shll
addl
add
test
jne
shll
dec
rolb
pop
and
xchg
ficoms
popa
sub
adc
jmp
xchg
xchg
js
ljmp
inc
inc
ds
loope
out
pop
push
jg
popf
jg
cmpl
mov
xor
xor
cmp
pop
or
in
pop
repnz
push
pushf
or
pop
jno
jne
fs
xchg
xchg
cmp
xor
ret
dec
jmp
insl
ficoml
push
or
imul
test
push
movsb
mov
mov
xor
cld
add
sub
add
out
fdivs
or
mov
bound
dec
adc
pop
xor
jns
jnp
adc
adc
or
repnz
int3
sahf
hlt
add
push
sarb
add
push
imulb
mov
nop
pushl
ficoms
lcall
add
test
dec
mov
call
into
cmp
and
dec
cmp
cmp
jb
in
or
test
bnd
sub
sahf
and
lea
stc
mov
dec
fnsave
call
ret
pop
inc
je
lods
movsbl
fs
test
add
push
rcr
or
dec
popa
test
sbb
lock
mov
sbb
jbe
lods
shrb
cmp
in
sub
mov
adc
jecxz
ja
dec
dec
or
adc
imul
or
divl
out
bound
mov
insl
push
add
dec
clc
mov
fidivs
mov
add
movl
push
cld
mov
addr16
shl
cli
test
jo
pop
test
decb
and
cmp
je
mov
add
scas
add
mov
jnp
mov
dec
xchg
inc
or
add
adc
push
adc
int3
mov
popa
stos
sbb
and
stos
mov
shrl
imul
pop
or
xchg
cmovs
gs
out
or
jns
pusha
sarb
xor
or
mov
lret
xor
int3
add
dec
bndldx
add
mov
shl
add
bound
or
pop
mov
dec
pop
dec
mov
push
jmp
das
adc
pop
int
dec
jmp
in
dec
sbb
pop
cmp
or
mov
fsubs
cmp
ret
decl
inc
fst
push
mov
iret
push
sbb
aad
lret
pop
mov
jns
and
pop
xchg
in
aam
add
push
and
shlb
call
xchg
les
or
add
mov
cld
xchg
sahf
lahf
pop
push
ljmp
and
jne
mov
cmp
mov
rcl
pop
inc
pop
lods
jo
push
sub
lods
jp
sub
sbbb
inc
push
jmp
cmpsb
xchg
inc
mov
cmpb
jne
inc
inc
jb
mov
xor
adc
push
pop
lea
loopne
fstpl
inc
pop
cld
ja
or
or
jge
cltd
popa
lcall
xor
or
jne
pop
sbb
jmp
ja
mov
dec
xor
jae
ljmp
fistpll
inc
aas
sub
sbb
lahf
lahf
lahf
lahf
adc
mov
data16
sarl
or
sahf
rolw
sub
hlt
pushf
lods
sbb
xor
add
sub
sub
movsl
int3
ss
cmp
jno
sahf
or
mov
gs
add
rclb
mov
inc
fs
add
add
cmpl
jge
pop
lret
fiaddl
add
int3
adc
push
in
or
inc
push
jmp
insb
dec
sub
dec
repnz
or
mov
cmp
push
fcomps
adc
sbb
and
pop
sarl
add
adc
rorl
mov
add
jno
imull
into
mov
adc
out
push
bound
daa
or
push
mov
mov
inc
shrl
push
push
aam
shlb
dec
xchg
xchg
adc
fmul
mov
inc
jp
mov
test
ljmp
and
xchg
je
les
fwait
and
insb
xchg
or
movsl
rclb
inc
fwait
mov
or
mov
and
xor
dec
cld
fiadds
push
jnp
jne
dec
stos
mov
sub
mov
cmp
jb
filds
xor
outsl
mov
jbe
decl
push
sbb
jmp
les
fsubl
je
and
aaa
js
lds
mov
lea
cmp
mov
jg
imull
xchg
or
rorb
inc
add
in
sbb
enter
and
cli
sbb
and
cld
jmp
dec
push
mov
pushf
mov
add
xchg
loopne
mov
mov
inc
aaa
push
xchg
add
ja
das
mov
and
mov
xchg
add
fldl
xor
jmp
bnd
call
dec
out
and
mov
mov
insb
push
fdivrs
into
in
jmp
mov
roll
mov
push
mov
xor
jne
ljmp
ja
enter
and
cmp
std
jne
loopne
push
sub
xor
popf
cmp
add
cltd
mov
test
fwait
and
xor
mov
xchg
push
mov
mov
push
pusha
or
icebp
jno
fbstp
push
mov
nop
cli
adc
pushw
push
lock
out
into
std
pop
je
lods
es
sub
cli
adc
ljmp
inc
lea
push
ljmp
cmpb
mov
push
call
out
add
cmc
mov
mov
test
decl
inc
push
leave
inc
mov
imul
loopne
mov
jb
pop
rorb
sub
xchg
push
jnp
cwtl
push
out
fisttps
fs
cmpb
or
lcall
jbe
dec
movb
mov
fmuls
sbb
ret
push
add
jb
mov
movl
inc
ret
std
pop
xchg
cltd
ss
mov
xor
xor
je
bound
js
pop
cmp
dec
push
push
inc
push
aaa
jle
sbb
dec
lret
jle
das
or
or
mov
mov
outsl
leave
or
inc
dec
jne
test
push
mov
push
or
push
jnp
cmpsl
cmp
iret
adcb
or
dec
mov
addr16
add
lcall
outsb
or
dec
or
add
ljmp
push
sbb
test
fistl
mov
rol
inc
pop
jno
or
xchg
arpl
push
inc
lcall
xchg
sbb
push
xchg
jge
mov
testb
insb
ljmp
cmp
fldl
inc
adc
inc
push
or
sub
inc
xor
test
icebp
std
push
pop
xchg
inc
sub
inc
jmp
xor
or
mov
mov
jmp
push
pusha
movsl
aaa
in
add
fwait
xor
ljmp
adc
faddl
fwait
jno
daa
ljmp
push
dec
jmp
popf
jmp
lods
enter
and
imul
out
adc
jnp
and
std
and
movl
rclb
mov
jmp
push
sbb
mov
lea
mov
push
sarb
sub
fimuls
cmpl
jmp
inc
or
pop
ret
adc
push
cmp
mov
movsl
sub
cmc
add
cs
divl
lods
rolb
sbb
jne
push
dec
imul
outsl
je
push
imul
jne
sbb
enter
mov
mov
scas
inc
mov
xor
inc
sbb
ficoms
sub
sub
insl
fsubrs
mov
rcrb
int
and
shl
aam
out
cmp
cwtl
mov
ret
dec
fisubl
push
into
ljmp
mov
jg
add
mov
cmp
loope
mov
add
es
push
mov
mov
xor
push
adc
les
push
mov
fisttpll
dec
push
cli
or
push
xor
cwtl
push
and
daa
fisubl
into
pop
xchg
jl
addr16
add
and
or
jle
push
loope
add
mov
lods
xchg
jmp
mov
and
mov
pop
xor
jmp
or
dec
ret
or
xorl
jl
shl
ret
test
mov
rcrl
fsts
out
dec
rolb
adc
push
pop
test
push
push
pop
test
pop
movsl
hlt
or
push
clc
xchg
mov
cmpb
push
add
mov
and
insb
pop
sbb
pop
adc
cmp
push
jle
add
in
insb
cmp
dec
add
push
lods
add
add
ret
add
xchg
cmpb
lahf
mov
movsl
push
jo
bound
jo
scas
arpl
adc
push
js
mov
adc
call
dec
push
add
mov
jge
cmp
aas
pop
mov
cmp
test
pop
bound
add
addr16
dec
add
or
fldcw
dec
lds
not
enter
xchg
pop
outsl
mov
cmp
adc
lea
pop
sahf
rorb
sbbl
mov
sbb
jb
pop
jb
inc
dec
test
mov
pop
cmp
jmp
sbb
test
jecxz
dec
ja
and
pop
ret
mov
loopne
lahf
insb
and
pop
cmp
jmp
sbb
mov
insl
outsb
adc
jge
add
xchg
mov
cmp
pushf
sub
insl
sbbl
pop
dec
fmuls
push
push
nop
push
sbb
jne
mov
cmp
mov
pop
je
push
push
and
xor
pop
add
call
mov
adc
stos
divl
mov
ja
cli
adc
dec
lahf
sbb
aad
jae
pop
sub
mov
sub
fistpl
jnp
push
xor
fs
clc
lds
scas
inc
in
mov
dec
adc
or
inc
lahf
xor
inc
adc
xchg
sbb
pop
mov
add
pusha
push
sbb
pop
push
mov
daa
cmp
or
jo
push
in
sti
dec
fistl
push
xor
iret
mulb
jae
or
std
lea
xchg
fcomps
xchg
xchg
fistps
clc
or
test
lahf
xchg
xchg
les
popl
xchg
lea
test
fucomip
fisubrl
aaa
dec
cld
xor
adc
movsl
pop
push
fchs
cld
adc
pop
in
push
jb
inc
test
cli
addb
add
rcrl
xchg
push
lods
push
testb
pop
ret
mov
cltd
adc
je
push
sub
test
loopne
xlat
test
add
inc
add
sbb
test
pop
push
inc
add
or
cwtl
pop
add
push
inc
fimuls
pop
bts
jmp
lcall
push
es
mov
add
or
andl
iret
pop
enter
jmp
nop
syscall
xor
inc
nop
es
add
and
repnz
add
popa
mov
out
mov
push
xchg
mov
cmp
repz
fs
mov
and
push
jmp
inc
pop
adc
xlat
xchg
inc
enter
push
pop
nop
push
test
lock
pop
inc
pop
sbbb
out
sub
adc
and
xor
pop
add
loopne
ficomps
je
test
fidivrl
cmp
jle
push
add
mov
je
mov
pop
mov
add
inc
push
sbb
cmp
jne
add
fsts
add
popf
mov
sub
pop
sbbb
fiaddl
lock
shl
cmp
jle
lahf
addl
jb
inc
fcomi
xor
dec
add
jb
lea
nop
inc
repnz
cmp
cmp
adc
push
hlt
jmp
adc
hlt
je
push
cmp
pop
cmp
push
cmp
mov
loopne
insb
movsb
cmc
add
pop
mov
mov
pop
fldl
mov
and
lods
mov
jg
outsl
cmpsl
sub
jle
scas
pop
inc
inc
jns
cmp
ja
jae
rcrl
pop
jae
inc
and
or
sbb
divb
clc
lock
mov
pusha
lods
and
or
fildl
arpl
push
mov
mov
jo
or
mov
push
int
je
call
test
leave
inc
leave
xchg
adc
clc
pusha
jbe
addb
cmp
sub
or
inc
jle
sub
or
sbb
lea
inc
cmp
ss
js
mov
dec
push
adc
pop
pop
pop
or
xchg
jmp
add
adc
add
ds
push
out
jmp
sub
pop
add
push
xchg
adc
loopne
xchg
sbb
mov
pop
pop
clc
je
sub
sbb
daa
mov
call
or
adcb
xor
sub
mov
hlt
push
xchg
cmp
cmpsb
mov
dec
ds
xchg
fbld
dec
or
movsl
cmpb
push
inc
inc
test
ror
mov
les
inc
mov
sbb
jnp
pop
shrl
push
mov
es
push
jo
mov
stos
dec
cwtl
jge
xor
pop
sbb
pop
sarb
ds
mov
and
adcl
push
or
add
sar
roll
lock
add
pop
xor
pop
dec
jmp
add
je
adc
sub
enter
inc
frstor
ljmp
push
out
inc
xchg
cmp
sbb
or
setb
cmp
inc
call
jo
adcb
sbb
inc
andl
xchg
mov
mov
xor
dec
rcr
sbb
andl
cmpl
outsb
aad
outsb
cmp
aas
sub
pop
and
into
add
fildl
int
js
mov
mov
mov
jb
data16
out
sub
popf
mov
jb
hlt
fdivrs
mov
cmp
jne
rcrl
add
xor
je
imul
call
in
or
in
add
mov
rorb
repz
pop
push
mov
je
jno
in
pop
ja
mov
movsbl
add
or
mov
push
sbb
sar
pop
inc
mov
cmp
ja
cmp
lea
push
mov
cwtl
sti
or
mov
jae
fdivrl
mov
and
or
je
or
cmp
aad
sub
sbb
jne
jb
xor
in
leave
add
xorl
or
adc
mov
test
pop
adc
insb
mov
shlb
mov
add
push
arpl
or
lea
ja
movsl
mov
cmp
hlt
adc
outsb
sbb
cmpsb
inc
stc
mov
je
insb
je
xor
lcall
add
test
in
adc
ds
bound
adc
sbb
pop
and
ret
push
sbb
imul
add
addb
pop
sbb
xor
roll
sub
repnz
imul
outsl
and
xchg
out
adc
imul
mov
push
imul
shl
rorl
leave
jle
inc
xor
or
sbb
jle
inc
je
pop
push
or
mov
dec
jae
nop
cwtl
mov
inc
out
cmp
adc
lea
dec
unpcklps
test
repnz
mov
push
arpl
testl
xchg
push
fisubrl
aaa
lcall
push
or
outsb
sbb
sbb
sbb
or
ss
xor
shll
in
adcl
mov
pop
mov
pushf
scas
imul
or
adc
mov
inc
push
or
mov
jl
xor
stc
xor
or
int3
cmc
pushf
sub
xchg
add
mov
dec
mov
dec
fstp
inc
cmp
aam
test
inc
mov
sti
jp
push
mov
movb
fwait
add
sub
in
inc
in
std
imul
jmp
mov
inc
hlt
xorl
mov
and
push
dec
nop
cmp
mov
xor
add
jl
je
cltd
jle
jns
lock
push
sbb
mov
sub
pop
fprem
add
add
mov
je
addr16
and
je
faddl
jno
outsb
je
arpl
nop
repnz
movsb
mov
ljmp
mov
fildll
test
ret
aaa
pushf
arpl
xchg
or
push
push
or
insb
rorl
scas
sbb
or
int
ja
and
shl
cmpsl
or
sub
sub
dec
mov
push
add
xchg
hlt
push
push
cmp
jle
imul
andb
pop
push
pushw
push
decl
int
stos
nop
adc
or
pop
ljmp
sbb
cmp
pop
pushl
push
jb
mov
push
das
cmc
sti
popf
lea
push
add
call
mov
mov
andb
add
xchg
outsl
push
push
hlt
pushf
iret
aas
xor
lock
jne
push
sbb
jg
jecxz
mov
dec
outsb
sbb
mov
ret
jae
imul
cli
mov
mov
add
adc
es
insb
xor
cmp
cmpsl
xor
int3
push
sub
into
mov
jecxz
bound
pushf
add
mov
lock
mov
adc
cmpb
jmp
or
pop
mov
sub
cltd
fimull
push
add
jb
jl
jae
dec
jb
fdivrl
jno
push
or
aaa
test
xchg
data16
mov
adc
lahf
cmp
lahf
daa
mov
or
jne
and
test
sti
add
sbb
xor
lcall
jg
in
cltd
push
push
push
mov
xor
es
mov
lods
stc
cmp
sub
mov
mov
dec
jmp
sub
sub
inc
stos
movsl
jecxz
cmp
pop
or
pop
stos
movb
inc
loopne
call
lret
jmp
in
sub
data16
mov
cmp
out
mov
sar
int
xchg
sub
sti
test
lcall
aas
sti
xchg
push
xor
sub
push
test
leave
xlat
in
pushf
and
pop
js
ret
sub
and
pop
out
test
jne
jmp
and
sti
mov
dec
adc
pop
scas
or
add
mov
jmp
jb
mov
jmp
xor
lods
or
das
iret
mov
jne
mov
pusha
mov
ror
rclb
mov
lfs
imul
mov
add
dec
stc
addr16
mov
push
xor
cltd
fst
add
incb
jg
jmp
adc
jae
jmp
jge
sub
mov
add
and
in
ret
in
sub
mov
sbb
xchg
mov
add
daa
pop
mov
sbb
call
or
aas
jb
xchg
mov
push
adc
dec
mov
lods
sbb
pop
jmp
sub
imul
rep
push
imul
jnp
ss
add
jmp
fs
and
fistpl
add
push
or
mov
xchg
add
push
jb
xorl
scas
add
hlt
outsl
cld
add
xchg
add
movsb
int
je
pop
fdivrp
jmp
insb
mov
flds
das
filds
and
loopne
xor
xchg
lock
mov
loopne
sub
adc
mov
out
xor
paddd
inc
insl
mov
data16
mov
sti
lock
addb
mov
movsb
xor
je
cmc
ds
lcall
jbe
lods
mov
add
and
sub
add
mov
hlt
sub
push
adcl
stos
mov
icebp
mov
push
and
testb
int3
in
les
std
mov
popf
push
popa
mov
pop
push
fmuls
cli
ret
jne
push
xchg
pusha
fcmove
pop
sbb
jl
inc
push
jg
fstps
inc
mov
sbb
push
jge
stos
mov
or
mov
mov
pop
sti
sbb
xchg
mov
pop
ret
imul
adc
push
lahf
jne
push
dec
mov
sbb
movsb
xchg
or
adc
pop
rclb
pusha
xchg
or
or
nop
inc
js
push
js
mov
pop
push
js
sub
es
jl
ds
jns
jbe
xchg
mov
mov
mov
cwtl
lahf
insb
fldt
pop
int3
push
mov
cwtl
add
ja
mov
add
insb
push
lea
adc
mov
jmp
mov
testb
mov
outsb
or
pop
adc
dec
lock
std
mov
in
push
int
sbbb
pop
daa
test
cmpsl
push
mov
fisubl
pop
lods
cmpsl
outsb
add
add
add
add
iret
xor
pop
sbb
lods
pop
cli
push
test
mov
mov
lcall
pop
sub
dec
sti
subb
sbbb
cld
dec
xchg
and
add
xchg
cmpsb
clc
rclb
xlat
sbb
jg
ljmp
inc
movsb
mov
jne
iret
adc
cmp
cmp
pop
rolb
jmp
mov
or
sub
pop
aam
push
hlt
inc
pop
xchg
fmuls
cs
or
pop
out
jge
dec
mov
pusha
sub
xchg
push
out
sub
pop
jbe
add
insl
jno
xchg
mov
aad
aaa
cmp
in
or
dec
adc
pop
aas
mov
sbb
xchg
xchg
fs
out
shll
or
pushf
jo
and
push
pop
xlat
xchg
adc
or
push
std
jbe
pop
loopne
lea
popf
in
lods
clc
hlt
pop
mov
mov
aad
test
dec
sub
andl
push
test
outsl
xor
mov
cli
call
pop
jns
mov
je
mov
loop
fidivrl
outsb
fs
movzbl
fwait
lods
xchg
insb
push
xor
sub
and
cmp
mov
je
ja
xor
paddusb
sbb
into
movsl
stos
test
out
decb
push
cmc
xor
and
xchg
sbb
mov
mov
push
xchg
imul
pusha
in
pop
mov
arpl
sub
xor
jle
mov
clc
rorb
mov
popa
mov
push
inc
test
movsl
lret
aam
sbb
roll
hlt
icebp
xchg
pop
notb
int3
dec
icebp
outsb
and
aas
insb
jne
jp
mov
adc
and
out
mov
cmpw
mov
mov
inc
cmp
xor
rolb
in
in
xor
and
dec
in
aam
rorb
xchg
orb
aam
repnz
push
mov
xchg
fs
pop
push
or
cmp
jb
ret
jne
lea
int
sbb
mov
xchg
add
xorb
jle
nop
dec
push
mov
enter
popf
in
cld
mov
in
decl
mov
pop
mov
cmp
adc
xor
and
xchg
add
xchg
shl
push
fadd
and
shrb
fnstcw
mov
mov
inc
sub
nop
add
fnop
sbb
movsl
rclb
inc
and
loopne
sahf
xchg
and
popf
dec
aam
sub
bound
or
mov
xor
or
sbb
roll
add
inc
push
mov
ret
push
cltd
hlt
pop
insb
loop
ficoms
mov
pop
andl
push
mov
add
push
inc
or
inc
jge
and
lea
cmp
and
jb
add
inc
or
and
enter
popf
jecxz
enter
push
loopne
push
mov
clc
popa
stos
add
push
xor
mov
daa
cmp
jg
fdivs
jnp
pushf
mov
enter
lods
loopne
je
orl
cmpsb
mov
mov
lret
je
adc
lret
popa
imul
pop
aaa
mov
test
sub
xchg
or
pop
fsub
sbb
add
lods
pop
push
xor
fcmovnbe
inc
inc
dec
jns
dec
ljmp
fnstenv
fsub
push
jns
dec
aam
pop
fcoml
loopne
enter
mov
inc
cs
push
jb
mov
pop
enter
test
test
test
and
sbb
pop
mov
jp
cmp
xor
xchg
ficoml
inc
fldl
mov
mov
jnp
mov
jp
jnp
or
cmp
xlat
pusha
cmpsl
add
ret
hlt
xchg
add
lret
sbb
add
fstpl
xchg
cwtl
jge
sarb
sub
mov
daa
jecxz
lock
popa
jne
js
ret
mov
mov
clc
xchg
ret
hlt
stos
or
xchg
cmc
jne
in
mov
stos
fwait
shrl
mov
xor
xchg
and
xchg
adc
adcb
and
les
push
fcomps
mov
and
mul
das
mov
movsb
mov
pop
adc
cmp
pop
mov
nop
sub
gs
sbb
mov
lds
lods
mov
jae
test
cmpb
xchg
add
or
sbb
int
sarb
pop
mov
or
shll
enter
inc
test
cwtl
and
lods
cmp
je
sbb
cs
adc
test
mov
je
push
or
in
sub
add
popf
stos
adc
cmpsb
sub
cmp
push
and
sbb
push
inc
mov
adc
in
push
dec
or
xor
dec
jmp
add
or
xorb
mov
xchg
mov
test
aad
sub
fstpl
adc
fmuls
call
lock
xlat
sub
push
nop
fldenv
movsb
mov
add
arpl
movsb
jmp
mov
pushf
js
cmpl
ss
mov
inc
sbb
pop
pop
call
jmp
das
cwtl
test
pop
pop
rorl
cs
sbb
dec
add
and
sbb
mov
or
adc
mov
pusha
xor
jmp
add
push
lahf
sahf
loopne
xchg
movsl
lahf
data16
mov
cmpsb
and
inc
sbb
sbb
or
rorl
inc
or
xchg
imul
xchg
jmp
decl
cmp
jmp
fs
pop
pop
dec
lock
adc
jmp
popa
shll
and
xchg
fstl
into
rcll
mov
fsub
mov
xchg
jne
lea
xor
add
loop
aad
addl
repz
movsl
mov
mov
adc
push
insl
cmp
or
xchg
adc
push
push
ret
aaa
loope
mov
fsub
pop
int3
sti
sbb
push
mov
mov
imul
inc
sti
data16
test
lods
push
pusha
loop
jle
pop
nop
pop
inc
jle
sbb
and
sbb
pusha
push
inc
shl
pop
mov
in
or
je
push
cltd
jmp
inc
faddl
cld
sbb
pop
and
and
or
inc
test
jl
sbb
pop
jle
mov
jmp
xchg
outsb
push
ret
and
push
push
test
jmp
outsl
inc
mov
sub
aam
fnstcw
fdivrs
mov
add
add
nop
xor
cmc
jne
or
in
xchg
jo
bound
mov
mov
mov
push
jne
mov
dec
loopew
es
sub
pop
addb
or
xor
xchg
in
test
in
int3
mov
repnz
std
mov
lods
std
or
das
xchg
stos
testb
pop
push
and
add
pop
mov
cld
sub
pop
xor
incb
mov
xchg
out
or
jg
fwait
dec
sbb
js
stc
sti
lea
mulb
test
inc
and
pushf
jno
cmp
mov
push
out
ds
or
mov
sbbl
inc
xchg
out
out
jp
sar
fdivr
jns
fs
pop
or
ret
or
adc
mov
inc
shll
xchg
xchg
mov
mov
jb
ds
mov
mov
sbb
aas
jmp
xchg
adc
lret
push
lret
in
fsts
add
and
xor
and
push
in
pop
xor
testb
mov
pop
lahf
popa
mov
mov
pop
xor
xchg
fs
call
nop
fisttpl
dec
je
imul
je
cmp
cli
sub
dec
cmp
inc
push
nop
ret
adc
adc
and
outsb
add
loopne
sbb
ja
cmp
inc
mov
xchg
xchg
xor
adc
push
cmp
push
outsl
imul
js,pn
jns
dec
push
pop
push
mov
and
xorl
popl
js
ret
mov
inc
pop
dec
rolb
movsl
mov
stos
pop
inc
in
jo
mov
mov
inc
dec
sahf
mov
mov
add
add
je
push
or
mov
adc
out
xchg
xchg
dec
test
dec
sahf
add
nop
cmpsb
cmp
jne
xor
cmpsb
pop
sub
mov
xlat
jno
loopne
xor
lock
mov
push
jbe
push
and
lock
dec
and
dec
pop
bound
adc
jg
orb
mov
pop
push
lcall
daa
in
mov
out
pop
aam
jmp
mov
fs
notb
fdivs
push
pop
stc
sub
xchg
mov
sbb
xor
mov
addb
push
dec
add
test
adc
mov
cmp
repnz
mov
jl
out
cmp
jns
mov
cmpsl
push
in
shll
test
add
or
cmp
in
dec
jle
scas
fdivr
adc
sbb
push
jecxz
inc
jle
mov
fstpt
cmp
imul
mov
loopne
mov
mov
sub
dec
push
push
pop
arpl
add
pop
sbb
orl
gs
rcll
mov
add
sub
xchg
std
cmp
push
fidivs
int
mov
out
sub
inc
dec
enter
std
movsb
std
push
mov
js
mov
js
pushf
inc
lock
outsl
arpl
inc
jp
gs
dec
arpl
sub
lods
pop
jo
dec
or
mov
jo
dec
jnp
scas
jns
dec
cmpb
inc
popa
imul
aad
loope
sbb
movsl
xchg
sub
adc
std
dec
cmc
xchg
bound
neg
adc
lods
cmpsl
adc
cmp
cmp
enter
dec
cltd
and
movsl
lea
lds
rclb
push
enter
std
mov
leave
pop
dec
inc
repz
cmpsl
jp
je
fcomp
bound
lods
rcl
into
addb
ficoms
or
add
dec
cs
cmp
hlt
xor
or
pushf
jmp
and
add
push
cmc
cs
jmp
out
loop
cmpsb
add
xchg
cmp
sub
in
rcrb
sub
or
adc
mov
int3
mov
or
pop
mov
shlb
dec
popa
inc
jne
fwait
mov
jmp
mov
xchg
or
inc
xor
sub
mov
fwait
sbb
mov
mov
cwtl
pop
xor
mov
push
inc
aas
je
jno
xor
or
cwtl
std
mov
adc
xor
nop
sbb
push
inc
add
jne
cmp
jo
sub
jl
rclb
ficompl
and
sbb
popa
shlb
dec
push
push
xor
xor
lods
add
adc
std
push
sbb
adcb
xor
or
mov
lods
test
pop
mov
js
lea
jno
iret
imulb
push
lea
mov
mov
cmp
ss
in
outsb
shrd
pushf
sbb
xchg
and
enter
cmp
aaa
cmpsb
sbb
imul
sub
cmp
mov
mov
and
xchg
jg
mov
cmp
mov
outsb
cld
dec
pop
pop
aas
mov
xchg
mov
mov
lock
mov
lret
dec
orl
dec
fisttpl
pop
add
fdivrs
daa
and
lea
int3
inc
enter
mov
stc
scas
movsl
call
aaa
outsb
scas
adc
lcall
inc
mov
inc
pop
mov
aaa
xchg
imul
inc
and
mov
mov
cmp
xor
movsl
dec
mov
mov
inc
sub
daa
nop
xchg
mov
cmp
xchg
add
sahf
outsb
pushf
leave
xchg
lret
sti
mov
fs
movsb
cs
jb
mov
adc
cmc
pop
xchg
lret
inc
mov
xchg
xchg
daa
incl
mov
sub
test
inc
leave
add
aas
dec
movsb
popa
add
and
and
decb
cld
push
jno
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
popf
mov
mov
cmp
test
je
sbb
xchg
pushf
mov
and
lods
and
mov
jnp
xchg
dec
les
in
scas
cwtl
test
and
arpl
dec
inc
repnz
ds
sbb
jb
cwtl
xchg
or
or
cwtl
and
mov
test
pushf
sub
nop
xchg
or
stos
add
mov
jnp
mov
cltd
adc
or
test
xchg
mov
xchg
arpl
fwait
jp
cltd
ja
lcall
pop
mov
out
rclb
add
addl
loop
shrl
lret
jg,pt
push
jmp
adc
and
inc
andl
lea
popa
cmpsb
mov
je
sub
out
push
xchg
jmp
jg
adc
divb
mov
fistl
jb
outsl
dec
push
sbb
add
jne
mov
jbe
sbb
cli
pop
pop
ret
or
ja
pop
fsubrl
shll
rclb
bound
add
shr
movsl
out
add
mov
in
fsubrl
add
fcmovnbe
and
push
rcll
ljmp
daa
xchg
outsl
push
push
dec
adc
push
and
jle
xchg
out
pop
dec
push
pop
outsl
inc
in
repz
or
jbe
jle
loopne
and
ja
mov
xor
mov
and
ficoms
pop
ffreep
lea
lea
inc
out
and
mov
aaa
sbb
rol
add
mov
xor
addl
hlt
shlb
push
pop
pop
int3
lock
call
shrb
lret
inc
sbb
mov
push
mov
mov
loopne
pop
and
pop
test
in
pop
ret
and
pop
and
adc
xor
loopne
adc
lods
mov
push
in
adc
adc
or
dec
push
jne
sbb
dec
and
sub
add
filds
or
inc
or
mov
ljmp
mov
test
je
divl
adc
loopne
lock
or
cli
sbb
pushf
fwait
jle
xor
mov
lea
popa
add
mov
and
mov
sti
sub
push
mov
shll
fucomip
stos
bound
add
outsb
inc
cmp
popf
pop
pop
inc
ljmp
stos
scas
add
or
aam
or
mov
adc
mov
filds
mull
jnp
test
xor
or
stc
je
push
mov
pop
lock
xor
mov
outsl
mov
add
mov
xchg
cmp
adcl
ret
mov
mov
xor
shl
or
scas
stos
mov
or
iret
push
inc
cli
push
fs
mov
pop
in
stos
cwtl
add
push
jg
inc
add
and
arpl
dec
sbb
fs
xlat
nop
or
add
mov
jge
rep
jnp
aam
test
xor
add
cld
xor
mov
xlat
rclb
loopne
or
and
push
lahf
jae
and
fs
insb
sub
mov
pop
jmp
repz
shrb
clc
mov
movb
cld
push
inc
or
adc
arpl
adc
push
sbb
mov
es
cmc
mov
xor
sbb
and
push
adc
cmp
push
push
aam
dec
movsl
xlat
push
cmp
xchg
push
or
and
adc
mov
fdivrs
cmp
push
mov
movsb
xor
xor
or
aas
or
pushf
push
in
lock
cmp
dec
fstpl
test
inc
pop
hlt
mov
pop
in
push
ljmp
in
test
pop
scas
push
or
test
inc
loope
push
pop
xchg
inc
fcoms
or
shll
jle
mov
daa
shr
rcll
jmp
rcr
or
jne
div
andb
mov
out
shll
cmp
or
cmp
add
jno
mov
cwtl
int3
pop
ret
mov
cmpb
add
call
adc
sldt
sbb
fs
cltd
hlt
filds
rorl
js
push
fld
andl
icebp
out
inc
add
xchg
jne
push
mov
lea
xor
test
add
push
call
push
std
fdivrs
ret
or
ljmp
icebp
push
pop
aas
or
add
dec
xor
aas
out
jne
xor
sahf
pusha
mov
rclb
lret
lock
jge
es
sub
sbb
adc
mov
dec
add
pop
popa
ret
and
jle
insl
push
jne
push
inc
and
ja
or
xchg
xchg
jno
cld
pop
jne
pop
push
shrd
mov
jne
mov
jb
mov
xor
lods
aad
daa
cmp
pushf
stos
add
cmpl
stos
jae
ja
sbb
cmpsl
xorb
lret
adc
fldt
adc
mov
xor
mov
lret
or
sub
adc
divl
leave
sbb
pop
cmp
jae
cmp
jno
mov
adc
xor
stos
add
inc
sub
cmp
into
mov
and
or
sar
push
jne
daa
clc
push
xlat
loopne
sarb
adc
and
push
call
jb
push
add
xor
mov
and
xor
mov
push
pop
or
or
xchg
lret
adc
test
stc
mov
xchg
mov
add
cmp
jne
fistl
in
add
cmp
imul
or
je
out
mov
dec
pusha
mov
mov
jne,pn
ja
mov
sbb
inc
mov
jle
pop
sub
adc
cmp
mov
mov
mov
adc
fsubr
ffree
push
stos
mov
fiaddl
dec
cmpb
sbb
ds
sbb
enter
loopne
aaa
sub
mov
push
adc
jo
cmp
mov
push
sbb
push
mov
les
mov
xchg
fistl
int3
int3
pop
in
loopne
outsb
mov
jne
fdivrl
testl
inc
pop
outsb
or
adc
inc
inc
inc
inc
cmp
loopne
insl
loope
cmpl
clc
out
sub
sete
mov
out
mov
or
bound
inc
dec
or
add
adcb
sbb
inc
lahf
xor
dec
push
jb
mov
add
clc
mov
inc
mov
cmp
jb
je
adc
int3
lahf
push
push
xor
mov
mov
adc
popa
adc
enter
jo
mov
push
cs
xchg
shrb
cmp
sub
adc
call
push
imul
pusha
sub
cmp
fistps
mov
add
fiaddl
sub
loopne
andl
and
in
ret
lods
cld
imull
stos
ljmp
jne
cmpl
and
push
out
push
std
adc
and
and
cmp
sbb
pop
inc
mov
add
es
pop
pop
dec
and
push
call
push
cmp
test
pushf
sub
jle
mov
mov
adc
shr
mov
inc
xor
lcall
inc
and
fcomp
aam
aam
pop
loop
pusha
mov
test
popa
ja
std
mov
andl
or
stc
mov
mov
sub
cmp
xor
out
cmpl
pop
subl
push
test
xchg
test
cmp
popl
cs
mov
jmp
push
cmp
fucomp
add
pop
add
pusha
xor
push
sbb
pop
out
sbb
cmp
pmaxub
popa
loope
mov
xor
cwtl
mov
ja
sub
cmp
aam
incl
pop
ror
stc
cmp
je
adcl
rcll
pop
call
cmc
out
mov
rolb
push
mov
aas
loopne
or
loopne
sbb
mov
cmp
jbe
add
into
push
jecxz
jge
push
inc
push
ljmp
sub
dec
adcl
inc
push
xor
popa
cmpb
cwtl
and
jmp
dec
ret
pop
push
dec
aas
push
push
mov
ss
and
repz
add
out
add
mov
add
xlat
dec
pop
aas
adc
pop
push
or
jmp
add
adc
mov
ljmp
lock
or
and
xorb
popa
xor
insb
adcb
stos
pop
mov
push
inc
sbb
and
mov
mov
mov
push
or
push
inc
popf
adc
ljmp
inc
ja
inc
pop
ds
rcr
lods
outsb
adc
add
xor
or
xchg
add
inc
decl
int3
je
jae
mov
cmp
xor
dec
jmp
xor
jne
loopne
insb
inc
inc
adc
pop
movsl
push
pop
inc
inc
inc
pop
dec
push
pop
je
pop
and
push
and
int3
xchg
cmpsb
cmp
js
fs
or
mov
mov
sti
sub
add
lret
jl
xor
andl
inc
jp
xchg
push
mov
leave
xor
mov
fstpl
xor
inc
jmp
lcall
add
adc
pop
movsb
dec
stos
xchg
pop
testl
call
xchg
cmp
sti
push
and
xor
and
js
outsl
inc
xchg
xchg
daa
adc
mov
xchg
sbb
lock
nop
push
push
xor
adc
push
test
add
push
mov
shl
pinsrw
dec
xor
repnz
sub
push
push
orl
sbb
jecxz
dec
add
das
arpl
pop
mov
ljmp
cmp
je
out
lahf
xchg
sahf
fmull
xor
lock
leave
imul
clc
inc
push
adc
adc
dec
call
or
cmp
pop
sbb
sub
cmp
inc
add
dec
inc
cmp
stc
fcoms
fdiv
push
pop
out
test
xor
sub
cli
xor
and
jmp
inc
mov
xchg
rorb
xor
incl
pusha
add
movw
inc
dec
or
movb
xor
jmp
mov
ljmp
inc
or
jb
push
push
lret
insb
push
xchg
data16
add
or
fs
cld
dec
mov
push
xlat
fidivrs
fdivrl
mov
xchg
add
aas
cmp
add
aaa
and
xor
dec
mov
hlt
andl
pusha
pop
orb
add
roll
das
rorb
and
into
sub
shll
mov
jl
lods
push
shlb
jb
sbb
je
in
push
enter
mov
or
jne
lea
add
notb
cmp
jg
sahf
clc
add
xor
jmp
push
inc
add
lods
inc
and
jo
ja
stos
or
mov
add
jmp
dec
jge
sti
jl
pusha
repz
out
push
testl
sub
mov
lret
negb
or
sub
imul
and
andb
mov
mov
movsb
xor
mov
mov
jne
sub
xchg
dec
add
or
das
in
insb
lock
push
mov
movl
cld
inc
cmp
jl
push
nop
fld
push
jp
rorb
adc
add
or
dec
out
mov
and
pop
test
filds
not
mov
push
sti
adc
je
mov
xor
in
xchg
cwtl
dec
lock
xchg
movsl
push
sub
xor
xor
jle
icebp
testl
adc
inc
mov
shl
or
add
and
into
add
mov
jl
sub
or
into
lcall
cs
movsb
inc
push
xor
push
push
sub
jg
xor
or
push
jbe
dec
sub
and
adc
push
push
or
or
fisubrl
nop
lret
into
add
push
lea
arpl
cmpb
leave
or
sub
jl
inc
fcoms
nop
pop
shll
mov
inc
int3
mov
sub
lock
inc
insb
into
add
andl
cmp
adc
mov
add
push
jmp
ljmp
jne
push
push
dec
or
and
dec
add
xor
call
dec
and
or
mov
lss
push
and
push
push
stos
inc
sbb
or
or
mov
adc
arpl
dec
cs
cmp
stos
inc
xor
jne
lea
sbb
stos
push
add
ficoms
add
sub
test
push
jne
shrl
in
jne
sti
add
xor
sti
xor
je
pusha
cli
xor
inc
push
and
mov
cmc
mov
sbb
xor
imul
mov
sub
dec
add
inc
mov
pop
sbb
es
jl
fs
push
and
jge
test
mov
mov
lods
clc
shrl
sub
add
lahf
fisubs
jp
and
jb
mov
outsl
or
push
xchg
mov
sti
sahf
popl
mov
cmp
pop
and
pop
nop
test
add
or
scas
add
dec
cmp
cmp
rcrb
lahf
and
data16
adc
push
shrl
jge
push
fcmovbe
loopne
popf
fistpl
test
cmpb
mov
lea
jmp
aam
test
push
inc
fadds
push
push
inc
out
push
sbb
cmp
je
jg
or
mov
add
cwtl
cmp
aam
cli
add
fdivr
mov
pushl
in
loopne
pop
in
call
lret
out
cs
jae
lock
aad
sbb
sahf
hlt
popa
sti
mov
mov
cmp
sub
loop
dec
or
inc
movsl
inc
out
xor
inc
roll
out
push
inc
pop
lea
or
push
mov
leave
or
loopne
push
or
loopne
inc
enter
imul
adc
and
rcrb
pop
es
loopne
add
in
in
and
ja
xchg
repnz
jae
pop
decb
iret
cmp
push
das
or
lods
gs
loop
rclb
rol
je
push
cwtl
mov
mov
push
push
cmp
test
xor
jg
mov
loop
cmp
lret
xlat
sbb
cmp
cs
aas
cld
push
leave
xor
add
stos
or
pop
loopne
or
jne
dec
or
ret
cmpsl
movsb
lret
fsubl
cmp
in
pop
jbe
adc
push
test
cmp
ret
je
mov
test
xchg
sub
push
fldt
aas
xor
frstor
int3
mov
cltd
pop
shlb
fwait
jge
adc
pop
adc
outsl
in
mov
pushl
adc
insl
fisttpll
inc
add
or
test
xlat
jge
xchg
push
sub
fmull
push
in
push
lret
out
aam
lcall
push
inc
fidivl
and
xchg
mov
mov
cmpb
js
enter
mov
imul
sub
xor
cmp
inc
jmp
not
xchg
call
mov
jne
imul
push
push
movsb
fistpl
add
jge
aas
sbb
lods
inc
adc
cmp
and
xor
mov
sbb
or
je
fdivrl
add
mov
nop
pop
cmp
or
jg
pop
in
sub
adc
and
add
icebp
test
fmull
in
cwtl
sbb
arpl
leave
dec
fisttpl
dec
push
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
dec
add
and
inc
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
jnp
cmp
adc
mov
and
dec
mov
xor
xor
movsb
test
dec
es
fs
ss
add
int3
sarb
cltd
fcomp
loopne
es
fs
in
es
fs
aam
hlt
clc
sbb
xchg
dec
cld
add
add
push
adcb
adc
adc
sbb
xchg
dec
and
xchg
dec
es
sub
xor
es
cmp
gs
cltd
fs
dec
dec
mov
push
pop
pop
lea
and
call
mov
fiadds
add
or
adc
jl
lret
xor
jbe
cmp
cmpsl
sarl
push
xchg
or
mov
and
adc
cs
pop
sbb
sbb
lret
and
and
leave
in
sub
inc
cmp
pop
jns,pn
inc
inc
dec
inc
and
dec
push
test
xchg
lret
dec
push
xor
sbbl
or
or
ljmp
inc
enter
add
dec
push
leave
inc
mov
mov
push
imul
sbb
pop
insl
mov
push
mov
insb
inc
lods
dec
add
adc
and
add
pop
shrb
mov
inc
mov
jmp
sub
adc
nop
jb
adc
mov
daa
or
iret
mov
mov
mov
cs
lea
andb
push
mov
pop
xor
inc
inc
das
loopne
pusha
sbb
or
ljmp
jne
insb
rcll
leave
xchg
adc
jb
dec
rcrb
stos
rorl
lea
adc
mov
xor
loopne
push
mov
enter
cmpsl
pop
pop
idivb
es
sbb
inc
jae
in
int
and
loopne
sbb
jmp
gs
mov
rcr
sub
mov
xchg
add
fists
in
jecxz
lahf
xchg
cmp
xor
mov
dec
enter
cmp
inc
loope
push
lea
jecxz
and
push
mov
add
sar
mov
sti
cmpsb
mov
add
or
jne
or
fstp
bound
sbb
mov
cmp
dec
jg
push
ljmp
cmpsl
sub
xchg
push
dec
pop
ret
push
adc
pop
mov
and
loopne
mov
and
ljmp
pushl
icebp
mov
cmp
pop
pusha
or
out
mov
cmp
mov
and
sub
dec
or
xchg
sbb
mov
imul
mov
mov
fsubl
add
jg
push
add
pop
adc
add
mov
mov
stos
sbb
subl
mov
cmp
lret
add
mov
pop
cli
inc
jb
movsl
xorl
add
pop
insb
adc
sbb
push
inc
call
lret
pop
pop
adc
sbb
dec
inc
outsb
mov
push
dec
hlt
push
rolb
xchg
lea
cwtl
sbb
cmpsl
pusha
inc
movsl
sbb
enter
inc
or
insb
mov
test
jbe
inc
cmp
inc
out
sub
xchg
inc
add
cmp
shlb
xor
in
fisubl
addb
push
test
jne
pusha
mov
jno
add
add
int3
lods
cmp
mov
add
movzwl
jbe
movb
shrl
sbb
feni(8087
add
repz
push
jmp
scas
loop
popf
pop
mov
cmp
dec
iret
add
add
sub
jae
inc
push
mov
mov
adc
jb
stc
sbb
div
pop
adc
push
sysenter
sbb
dec
cmp
xchg
inc
xor
addr16
cmpsb
xor
icebp
shll
xor
adc
dec
xor
jae
mov
addb
lock
or
shufps
mov
push
adc
aad
shl
dec
xchg
lock
and
jae
adc
inc
fisttpll
scas
jne
mov
daa
ret
sub
leave
add
jmp
movsb
pusha
xorb
int
xor
xor
movsl
pop
jbe
shll
jae
in
pop
jns
xchg
lahf
or
add
jg
sbb
mov
popa
add
loopne
inc
sub
add
test
sub
and
mov
add
add
sarb
daa
dec
jne
addb
stc
rcl
cmp
add
rorb
test
repz
shl
push
into
into
sub
or
mov
rcll
pop
cli
sub
fdivrs
fisubs
testl
daa
mov
mov
jo
lret
jmp
inc
or
pop
mov
rcll
das
movl
mov
push
jae
adc
movsb
lods
cmp
push
bound
ja
lcall
insb
lods
inc
sub
xchg
mov
mov
or
jno
xchg
rorb
mov
cmpb
xchg
int3
test
jae
js
cmp
mov
es
int3
adc
stos
ret
imul
sbb
fistpl
clc
push
loope
dec
test
pop
movsbl
adc
mov
rclb
pop
or
test
jo
in
cltd
shll
shrb
les
cmc
inc
loope
inc
jb
orl
mov
xor
push
cli
mov
cmp
add
andl
adc
adc
or
adc
ficoms
xor
or
mov
ficomps
sub
in
push
inc
pushl
push
pop
xlat
xor
push
or
mov
xor
jg
and
dec
push
xchg
pop
arpl
xor
les
out
out
scas
jmp
mov
xor
outsl
dec
es
sub
call
pop
inc
push
mov
ret
cli
push
mov
ficompl
int3
mov
xorb
jns
fdivrs
sbb
add
ret
mov
lock
hlt
test
xchg
aas
and
pusha
mov
je
enter
push
loop
into
sub
mov
dec
leave
dec
mov
inc
add
movsl
xor
push
or
or
orl
inc
sbb
arpl
inc
pop
cmp
add
pop
rclb
add
mov
imul
stc
loopne
addr16
pop
imul
xor
cmp
adc
inc
pop
xchg
adc
push
inc
push
or
or
daa
xor
roll
mov
jns
push
ds
pop
xchg
pop
jo
pop
mov
inc
and
jg
add
rcrb
fwait
xchg
add
xorb
sub
inc
stos
sbb
jno
call
mov
xor
xor
xor
jb
test
cmp
hlt
mov
ret
mov
jmp
lahf
dec
stos
popf
cmp
push
adc
cmp
jl
push
nop
inc
add
or
in
js
pop
sbb
push
add
or
enter
clc
sbb
test
mov
or
enter
scas
pusha
je
mov
adc
lret
mov
xor
in
movl
cmp
and
aad
adc
dec
dec
push
clc
mov
inc
jmp
outsl
cmp
adc
push
sarl
mov
arpl
and
addr16
sbb
inc
stos
add
push
lods
xchg
push
push
push
adc
xor
and
pop
add
addb
and
sbb
aam
mov
sub
lea
inc
mov
sbb
popf
lahf
loopne
sub
rclb
add
lods
and
imul
fcompl
or
ljmp
inc
lds
scas
pop
clc
push
pop
add
jle
sbb
icebp
aam
test
movb
xor
shll
or
push
cltd
mov
push
mov
xchg
xor
mov
cld
shlb
jo
sbb
adc
js
mov
or
sub
inc
cmp
push
in
pop
or
xor
sub
or
adc
sub
sbb
sarb
mov
cmp
loope
ljmp
ljmp
nop
inc
mov
add
sub
sub
inc
mov
xor
mov
mov
fcompl
add
mov
or
jo
inc
xor
sarb
clc
cld
mov
mov
cmpw
ret
jne
insb
push
adc
stos
out
sarl
cmp
movsl
imul
fdivl
pusha
stc
add
sbb
inc
lock
shlb
shlb
push
inc
aad
or
shrb
pop
add
and
cmp
sub
sbb
daa
ss
fcomi
jmp
imulb
repnz
xor
adc
inc
jle
dec
dec
jne
mov
add
dec
cmp
dec
incb
sarl
fdivs
xchg
insb
lods
pusha
call
xor
in
push
sarb
sub
dec
js
sbb
pop
adc
pop
aam
add
push
add
in
xchg
or
stos
or
cmp
sbb
push
push
add
test
push
pop
xchg
xchg
lds
fisubl
sub
mov
push
jo
clc
pop
sub
sbb
je
xchg
cli
adc
jbe
or
lea
lea
or
addl
int3
mov
fldl
push
sbb
add
add
push
scas
mov
add
mov
dec
je
fdivrp
xor
pop
rcrb
cmp
push
adc
mov
fxch
adc
js
mov
add
filds
cmpsl
dec
and
pushl
add
sub
js
sbb
loop
addb
mov
test
imulb
xor
out
in
cmp
jmp
out
and
push
sub
push
push
sub
enter
or
adc
sbb
roll
push
cmp
mov
test
sbb
jge
mov
sti
jno
and
and
push
push
ficoml
jle
enter
int3
repnz
rclb
mov
mov
ret
shlb
mov
pop
js
cmp
push
or
aam
and
mov
push
or
inc
mov
mov
push
in
add
and
fsubs
and
add
iret
and
adc
mov
shl
aas
mov
dec
xor
adc
or
cmp
jmp
loopne
es
lret
and
out
mov
rclb
or
inc
add
adc
test
pushf
xor
mov
sbb
and
push
adc
or
sub
inc
jmp
jbe
incb
jg
lret
sbb
lock
and
mov
mov
xchg
jbe
jl
and
jecxz
sbb
xchg
imul
jmp
sbb
rcll
inc
adc
and
mov
xor
sub
aaa
jge
out
ja
lret
dec
pusha
and
push
sbb
add
fstps
aas
mov
mov
pusha
loope
pop
sub
xor
and
jecxz
pop
fstp
xor
inc
fidivrl
pusha
pusha
rclb
jp
insl
test
mov
ret
femms
add
inc
or
pop
xor
adc
sti
add
ficoms
test
cmp
mov
shlb
clc
add
pop
je
popf
xor
dec
jne
orl
and
mov
xor
scas
rcrb
testl
imul
jb
outsb
lods
sbb
jmp
push
and
inc
add
adc
add
inc
flds
fstps
jmp
fnsave
js
or
pop
loope
add
adc
mov
inc
out
hlt
adc
shlb
sbb
pop
pop
pop
sub
loopne
cmp
andb
adc
xor
test
cmp
nop
or
push
sbb
inc
sbb
sbb
mov
push
aaa
sbb
ljmp
fcompl
fnstsw
arpl
cmpl
jmp
sub
sbbl
push
mov
or
jmp
fldcw
inc
test
into
adc
sub
add
js
clc
scas
add
mov
add
or
mov
rolb
rcr
and
dec
push
cli
pushf
jb
test
add
jge
repnz
mov
xor
cmp
push
test
inc
daa
test
ror
adc
inc
add
enter
pushf
sbb
mov
shlb
cmpsl
test
dec
mov
and
insl
in
sbb
orl
sbbb
loopne
into
push
mov
mov
push
push
pop
jmp
sub
sbb
sbb
xchg
lcall
xchg
or
daa
out
mov
add
roll
mov
jle
push
add
outsl
mov
sbb
xchg
adc
or
push
jmp
pop
pop
adc
fptan
imul
lea
dec
bound
sub
xchg
icebp
popa
and
or
ljmp
adc
adc
sbb
jecxz
icebp
pop
or
or
leave
mov
enter
rolb
and
ret
or
les
add
aam
nop
pop
adc
dec
fistl
loopne
pop
fstpl
add
cmp
or
xor
push
or
xor
jbe
adc
lods
xchg
xor
jle
or
or
adcl
and
mov
ret
insl
scas
adc
mov
and
mov
inc
and
xchg
ljmp
and
ds
cmc
lea
push
in
fidivrs
aam
out
mov
jbe
push
das
adc
inc
mov
pushf
and
lahf
pop
fistpl
les
jne
ret
or
cmp
jge
adc
inc
popl
movl
andl
add
insl
mov
in
or
inc
into
sbb
outsb
adc
and
cld
pop
add
xor
and
or
stos
rorl
mov
pop
cmp
lock
or
sbb
je
and
add
cmp
cmc
push
mov
and
pop
add
mov
jmp
push
andb
sbb
test
xor
call
inc
sbb
dec
out
fld
fucomp
pop
fnstcw
pop
add
out
mov
out
push
mov
xor
test
cmovge
lods
push
and
mov
and
sbb
sbb
push
or
rolb
add
or
push
out
mov
aam
jne
pop
or
pop
ret
cli
push
and
nop
xchg
rolb
sub
push
push
push
scas
mov
sbb
dec
outsl
nop
xchg
inc
ljmp
ret
fnstsw
movswl
sbb
loop
inc
add
flds
and
rorb
data16
jnp
pop
jae
fldcw
push
push
out
clc
fwait
mov
dec
pop
or
sub
cltd
loopne
or
fwait
test
fsubs
mov
fwait
sbb
sbb
pushf
loopne
das
repnz
sbb
and
sub
cmc
daa
inc
ss
mov
lds
je
sbb
xsaveopt
sbb
pop
or
add
outsb
pop
cld
mov
or
add
and
stos
pop
or
and
pop
sub
dec
imul
loope
clc
dec
and
mov
sbb
or
jg
xor
adcb
xor
test
adc
fsubrl
call
daa
icebp
insb
test
ss
push
into
rcrb
test
and
push
ja
jg
enter
test
inc
mov
xchg
pushf
add
cmp
and
mov
add
cmpsl
xchg
xchg
xchg
xchg
jae
mov
out
add
push
insb
push
jle
jo
mov
dec
inc
inc
ss
inc
pushf
push
dec
jae
sti
jbe
cmp
js
imul
fbld
clc
std
push
sbb
or
loope
xor
xor
in
shlb
loope
rcll
shll
xlat
push
or
test
xchg
mov
pop
arpl
insb
pop
call
cmp
mov
push
mov
test
push
push
dec
jle
mov
or
add
add
jmp
aas
push
xor
xor
push
mov
inc
adc
cmp
add
or
jae
test
adc
inc
mov
pop
jmp
jne
add
stos
stos
pop
pop
fcomp
xchg
insl
mov
sub
movsl
add
pop
and
and
dec
push
cltd
and
mov
push
cmp
gs
push
inc
fdivrs
dec
or
call
lea
pop
test
lret
loopne
xor
mov
jbe
inc
or
shl
not
test
cmpl
inc
insb
pop
pop
repz
mov
cltd
insb
pop
and
ss
out
mov
out
mov
inc
adc
iret
jp
fcoml
xorb
mov
add
test
cwtl
jle
cmp
jb
cmp
pop
xchg
mov
sbb
dec
cmp
loopne
push
jle
cmp
jb
jae
shl
and
rorb
mov
push
jns
push
jecxz
push
or
idivb
push
pop
and
insl
loope
fdivrs
or
testb
rep
cmpl
add
lock
stos
inc
aaa
lods
or
sbb
jg
inc
stos
inc
ljmp
cmp
clc
push
sub
dec
in
xor
cmp
sub
loop
das
add
fcomps
jecxz
rorl
mov
shl
sub
sub
imull
or
and
lea
shll
mov
out
push
sbb
fmuls
out
outsb
js
and
mov
std
or
sub
cmp
jl
pop
xchg
mov
je
lahf
fs
inc
test
jmp
inc
cwtl
push
dec
cs
push
rcrb
inc
lods
pop
out
test
mov
cmp
enter
dec
out
or
inc
pop
or
dec
xor
push
sbb
add
push
push
sarl
fsubr
pusha
jmp
push
push
jb
test
repnz
incb
dec
or
push
cld
xor
cmp
and
push
sub
dec
mov
hlt
push
aas
add
cmp
inc
mov
dec
add
dec
mov
movsb
loopw
push
out
out
cmp
test
adc
bound
or
aas
sbb
push
sbb
in
sbb
lock
add
pusha
xchg
loopne
out
and
jl
xchg
cmc
es
dec
out
and
add
pusha
cmpsl
dec
sub
bound
jge
mov
mov
dec
lods
shl
test
pop
add
dec
sbb
xchg
fildl
pop
lock
xchg
and
add
test
insl
aad
add
jmp
and
jne
mov
inc
add
orl
icebp
xor
xor
xor
adc
sub
or
push
test
dec
push
pop
sub
pop
dec
icebp
xor
adc
push
pop
cmp
push
and
int
adc
adc
and
popf
push
xor
mov
or
test
mov
and
xchg
cmp
jne
clc
dec
call
lods
mov
pop
inc
fcoml
or
cmp
cmp
adc
xor
push
mov
cs
or
xchg
rolb
xor
or
pop
dec
adc
xor
mov
mov
cmp
xchg
add
subb
sub
je
sbb
int
push
or
jmp
adcb
add
movsb
adc
jmp
andl
jmp
mov
test
test
stos
popf
scas
adc
adc
or
std
add
mov
cwtl
cmp
jle
sub
push
movsb
jbe
xchg
mov
or
test
sbb
or
jbe
push
mov
rolb
lods
cld
dec
jecxz
cld
repz
lock
sbbb
jge
sbb
mov
sub
addb
insl
jmp
adc
cmp
mov
add
test
nop
add
jne
rorb
mov
xchg
divl
sbb
jmp
sbbb
and
push
pusha
call
xchg
sbb
or
pop
push
sub
and
cmp
dec
cwtl
mov
dec
add
loope
or
stos
mov
xor
in
lods
mov
movsl
jbe
sub
mov
mulb
add
loopne
je
mov
add
es
test
nop
mov
dec
inc
push
inc
push
pop
push
cld
cmp
adc
add
inc
testl
shlb
lret
jmp
xchg
inc
inc
adc
xchg
je
xchg
retw
out
testb
and
sub
rolb
jg
in
sar
add
jecxz
add
jmp
push
movhps
xor
mov
into
dec
xor
cmp
les
or
je
xchg
mov
pushf
xor
cmp
jge
testl
dec
adc
sbb
out
clc
mov
mov
ljmp
repnz
jmp
jge
dec
sub
sub
inc
fstps
mov
adc
push
nop
loop
sbb
lods
adc
inc
lds
test
lods
sarl
push
jp
sub
test
and
mov
and
add
or
mov
testb
pop
mov
fiaddl
mov
or
mov
roll
xchg
call
dec
std
xor
dec
cmp
jae
pop
mov
jle
sbb
ja
into
ja
mov
sbb
mov
es
jne
inc
testl
ret
cmp
test
les
mov
mov
inc
or
add
adc
and
int3
add
jne
xchg
xchg
sbb
nop
dec
test
scas
or
mov
cwtl
xchg
test
push
pushf
pop
mov
mov
lea
lcall
mov
movsb
aam
push
adc
ret
xor
cmp
clc
je
add
lock
ja
sub
js
in
mov
lock
dec
pushf
sub
sub
clc
push
int
sbb
sti
jg
add
adcb
ret
pop
xor
inc
jne
scas
mov
gs
mov
add
pop
mov
cli
or
shr
outsb
or
push
jmp
pop
rorl
dec
sub
movsl
das
adc
inc
mov
stos
add
not
je
push
or
lods
push
mov
mov
loopne
shr
or
mov
sahf
dec
adc
ret
jne
outsb
mov
inc
shll
aam
sub
push
aam
mov
popa
xor
or
cmpsb
imul
inc
mov
out
fiaddl
mov
xor
inc
jmp
out
jmp
mov
push
cmp
lods
mov
popa
icebp
pop
adc
nop
mov
add
dec
push
mov
dec
insl
xchg
jmp
cmp
cmc
push
nop
daa
mov
fxch
push
dec
into
jmp
lods
test
jb
andl
scas
repnz
add
loop
mov
add
lcall
jp
lret
mov
out
jmp
sub
jo
sbb
add
andl
adc
les
mov
xchg
or
call
ss
adc
mov
mov
jge
adc
cmp
rep
repz
int
mov
out
fxtract
xor
fiaddl
xor
movb
lahf
pop
js
jmp
inc
mov
mov
icebp
cmp
stos
push
pop
js
jle
in
or
cmp
aam
sbb
add
and
mov
pop
fistpl
test
cmp
xchg
xchg
adc
inc
cs
mov
ss
cmp
je
or
loopne
or
out
mov
dec
sub
mov
add
sbb
sbb
add
or
mov
dec
sub
or
sbb
jp
xorb
imul
ror
stc
inc
je
repnz
inc
and
pop
or
movsl
in
mov
in
sub
xor
or
and
loope
lods
stc
outsl
mov
and
mov
sbb
jle
dec
push
add
push
xchg
cmp
pop
test
mov
clc
pop
and
mov
sbb
fadds
sahf
jne
adcl
push
adc
jbe
or
add
sub
add
adc
push
pop
sbb
cmpsl
out
inc
and
dec
setg
cmp
nop
clc
add
lcall
clc
incl
jne
movb
lea
and
les
mov
add
mov
inc
cmp
add
add
shll
cmp
test
add
int3
mov
lcall
xchg
sbb
push
inc
sub
push
dec
jns
mov
movb
fs
adc
pop
fwait
mov
cs
out
push
or
add
and
mov
cld
into
lods
movb
add
push
push
sbb
and
daa
sbb
xchg
pop
cli
dec
add
shrb
fcmovbe
xchg
sbb
add
enter
dec
mov
push
clc
add
dec
and
incb
jl
aad
in
jmp
xchg
orl
roll
jge
fldl
in
xchg
sub
adc
adc
or
xchg
adc
adc
dec
enter
dec
dec
inc
jmp
mov
xchg
aam
sub
jmp
outsb
inc
mov
sub
sti
jno
and
push
dec
pushf
mov
incl
icebp
jecxz
jmp
pop
stos
cmp
or
jge
adc
mov
and
insb
jl
dec
cmp
shlb
xchg
pop
inc
or
inc
dec
enter
inc
mov
sahf
or
adc
mov
loop
adc
lret
xchg
cmpsl
xor
test
push
mov
xorb
imul
push
daa
cmpsb
sbbb
cmp
lret
cmp
daa
loop
loop
jo
movsb
jbe
loopne
leave
adc
xor
add
inc
xor
add
mov
je
pop
bound
fcompl
nop
mov
push
js
sub
jbe
pop
fbstp
loopne
shll
inc
push
xchg
mov
add
mov
push
sbb
mov
push
or
jg
mov
jg
ret
daa
xor
or
jne
bound
xor
xor
shlb
xor
and
mov
adc
jl
xchg
loope
pop
inc
xor
jle
gs
and
or
sbb
and
dec
push
mov
and
stc
xchg
hlt
dec
xchg
pop
rcr
sub
adc
push
jecxz
add
and
loop
or
rcrb
ret
push
int3
enter
loopne
fdivr
cmp
add
jp
cld
add
lods
clc
inc
and
shrd
sbb
out
pop
pushf
int3
push
dec
cmp
jge
sbb
push
fidivrl
clc
cwtl
xor
stc
loopne
push
mov
add
dec
jmp
test
sub
ljmp
shll
inc
call
inc
loopne
fsubrl
xor
add
jp
cmp
or
push
sahf
lock
sbb
sbb
in
ja
mov
shrl
mov
fiaddl
js
jg
jb
xor
bound
out
scas
jmp
adc
clc
shl
fimull
jl
mov
mov
push
push
push
push
addr16
add
mov
ljmp
sarl
pop
add
jmp
jg
mov
dec
sahf
sub
fimuls
dec
pop
or
or
test
lcall
xchg
xchg
addl
in
ja
add
push
add
sub
mov
sub
cmp
xor
outsl
lret
jbe
or
mov
movl
add
fidivl
jmp
add
push
mov
roll
ss
jmp
pop
or
adcl
sahf
fwait
adc
and
neg
jmp
inc
or
or
adcb
aaa
push
lods
push
pusha
shr
sarl
mov
push
mov
mov
xchg
or
fisubrl
push
stos
adc
fisubl
add
fnstenv
xor
push
lods
xor
into
rcrl
mov
mov
and
addl
mov
mov
into
cmp
orl
sbbb
add
and
jne
push
cmp
loopne
nop
add
out
das
sub
xchg
fsubrs
dec
sub
push
lret
add
js
enter
aaa
movsb
mov
sbb
dec
mov
pushf
dec
cld
jl
loopne
jge
lock
lea
pop
inc
aam
mov
lods
nop
cmpb
add
and
adc
movb
je
ds
fldcw
clc
gs
or
pop
data16
ja
and
and
roll
push
inc
je
jle
std
bound
xchg
jmp
xor
cld
pop
jmp
or
ret
adc
nop
jg
push
mov
pop
or
mov
clc
mov
or
or
fisttpl
push
add
mov
ret
mov
sub
and
sarb
and
lods
adc
lea
inc
and
mov
lcall
dec
pop
or
adc
adc
mov
cmpb
jne
mov
xchg
in
mov
push
ss
rorl
loop
test
cmpsl
sbb
dec
les
jl
cmp
cmpsb
jae
fwait
or
ficoms
pop
mov
sbbl
jo
insb
push
sbb
push
shlb
mov
mov
or
cmc
jmp
ss
ficomps
outsl
xor
orl
mov
lea
imul
sbb
sbb
mov
sbb
xor
xor
aad
inc
mov
cmpb
data16
mov
push
xor
ret
adc
leave
testl
add
or
mov
push
sbb
mov
jne
ret
add
in
jns
sahf
and
mov
js
mov
sbb
xchg
int3
insl
int3
inc
sub
or
dec
sbb
jge
add
push
or
repz
lea
mov
inc
push
push
add
pushf
roll
xor
xor
mov
in
add
dec
aam
adc
in
iret
or
sub
scas
ss
lea
ret
mov
cmp
nop
add
mov
mov
mov
jl
insb
mov
lcall
out
sub
imul
jecxz
xor
inc
lea
cmp
add
add
arpl
data16
and
adc
adc
push
mov
mov
orl
mov
xchg
push
jb
mov
pop
push
inc
push
xlat
xor
cli
jns
rorl
jbe
std
mov
jmp
push
lret
lods
pop
add
shlb
mov
pop
xchg
mov
xor
sbb
jmp
adc
insb
xchg
mov
nop
jbe
testl
inc
repz
jns
es
pop
jo
ret
xor
cmp
fcompl
sub
rcrb
ds
jo
lea
cmp
rolb
add
stos
stc
in
add
xchg
adc
sbb
dec
jbe
das
xor
cmp
adc
push
aam
icebp
and
dec
xchg
sbb
xor
ljmp
mov
sub
sub
leave
rcll
jno
lcall
inc
sub
or
cmp
adc
ja
inc
inc
cmpsb
sbb
mov
or
loope
ret
xor
jmp
jmp
bnd
xor
fsubrl
bound
mov
ret
xchg
sub
add
dec
cmpb
fs
dec
jo
sub
sbbl
dec
mov
inc
ljmp
out
push
sbb
sbb
inc
or
xor
mov
insl
movsb
mov
and
cmpsl
add
push
push
shl
and
pushl
aas
pop
addr16
mov
jg
mov
cld
outsl
sti
arpl
jg
mov
push
push
and
jo
mov
testb
ret
std
lret
push
push
leave
mov
pop
out
mov
pop
sub
out
inc
stos
sarb
mov
push
cmp
pop
jbe
or
mov
jle
push
or
mov
lret
js
push
pop
inc
mov
adc
add
cmp
jmp
insl
sti
ss
xor
lcall
outsl
push
push
insb
push
or
push
sub
push
adc
mov
push
mov
mov
jmp
adc
add
lret
push
into
pop
pop
pop
pop
pop
or
sahf
and
xor
shrl
add
push
xor
xorl
movsb
mov
add
and
clc
sarb
idivb
popa
add
push
xchg
jne
xor
add
or
cmp
fisubrs
test
pop
xor
mov
push
sbb
mulb
cmp
push
mov
adc
pop
pop
inc
mov
fsubl
or
dec
rolb
pusha
js
push
aam
shlb
call
lock
scas
or
or
sub
pop
aaa
orb
mov
cmpsb
clc
shr
add
or
inc
fnsave
add
shr
or
mov
outsl
add
clc
push
call
lret
add
mov
inc
mov
add
add
or
push
popa
pop
and
movsl
mov
adc
inc
jbe
inc
cmp
in
sbb
cmp
test
sub
pop
add
sub
popf
fidivl
jmp
sbb
dec
fidivrs
or
push
adc
adc
mov
out
mov
pushf
lret
clc
add
push
clc
or
push
add
xor
inc
and
es
push
inc
inc
add
adc
or
sub
push
or
adc
ja
sbb
ja
xor
or
pusha
mov
or
xchg
sbb
sbb
xor
push
loope
pusha
sub
fdivl
lcall
movsb
jne
push
push
jns
sahf
inc
mov
roll
xchg
aam
int3
test
pop
dec
pop
je
les
test
data16
mov
imull
fsubrl
popf
lods
xchg
push
sbb
or
or
mov
push
inc
fnsave
jnp
out
sub
push
add
sbb
sarb
insl
testl
sbb
jmp
pusha
mov
ljmp
cmp
dec
in
add
nop
xor
pop
add
popl
sets
outsb
sub
mov
sarb
cmp
ja
shrb
les
inc
fisttps
data16
mov
out
leave
inc
xor
mov
jmp
adc
clc
xchg
cmp
je
imul
idiv
inc
test
push
scas
push
add
daa
push
pop
or
sbb
mov
push
xchg
ret
lods
jmp
mov
aad
push
mov
ficoml
sbbb
fisttpl
nop
and
loopne
add
cmp
je
inc
pop
ds
cmp
sub
dec
ja
shr
ss
dec
jne
rcrl
inc
dec
adc
and
cmp
insb
adc
rorb
push
stc
or
or
loop
clc
jmp
shll
sahf
mov
and
fldl
cmp
add
mov
out
or
hlt
or
test
pushf
pop
pop
out
inc
movsb
mov
adc
mov
frstor
xor
sub
pop
mov
inc
loop
dec
add
mov
orb
sbb
inc
lods
xchg
push
or
sbb
int
add
nop
xlat
add
inc
aad
rclb
in
or
adc
imul
inc
dec
neg
neg
sbb
and
repz
sub
inc
sbb
add
sbb
aad
addl
adc
jae
push
inc
sbb
push
push
inc
and
fcomi
gs
dec
sbb
adc
add
xor
sbb
and
push
dec
jns
fisttpl
push
jbe
jne
pop
pop
pop
repnz
or
jae
lods
sarb
jl
sbb
dec
and
shr
sub
adc
pop
call
cli
idiv
and
maskmovq
stos
cld
xchg
shlb
jecxz
add
add
push
out
and
dec
or
mov
jecxz
cs
aaa
mov
test
pop
adc
cli
xor
test
stos
rolb
adc
push
mov
xchg
test
mov
adc
ljmp
sbb
fprem
jae
push
daa
push
or
adc
push
jno
inc
and
add
jmp
bndstx
in
adc
mov
adc
aad
cmp
xor
mov
sub
adc
rclb
fmul
push
or
rol
push
add
and
sbb
add
inc
lock
dec
dec
adc
dec
inc
ss
jg
sbb
daa
mov
jns
cmp
or
sbb
xlat
dec
lods
leave
jne
pop
jmp
cmp
lock
add
ror
push
pop
fiaddl
sub
sahf
ret
minps
stos
test
pop
popl
fst
mov
jecxz
es
or
jmp
divb
fiaddl
lahf
push
clc
data16
arpl
push
mov
mull
and
or
dec
and
clc
or
movsl
test
pop
sbb
movsl
xchg
mov
outsb
faddl
xor
ljmp
mov
out
adc
jge
mov
jmp
lods
aas
push
pop
push
xchg
jl
sub
xchg
jl
sbb
lret
adc
fiaddl
js
xchg
nop
into
sub
xor
mov
sub
add
add
popa
test
sbbl
std
sub
in
aaa
dec
imul
aas
push
out
leave
je
leave
mov
inc
mov
mov
mov
subb
lock
je
in
out
mov
jb
cmp
ja
add
cmp
adc
sti
lcall
xchg
xor
adc
jge
jb
neg
dec
cmpsb
fadd
rcrl
jo
fs
or
mov
cs
rcrb
sub
and
push
and
shlb
add
cmp
or
fdivr
aas
xor
dec
cmpsl
push
movb
add
nop
ds
ret
data16
dec
iret
cmp
js
pop
pop
or
mov
data16
insb
in
aaa
add
inc
add
xor
add
pop
add
add
add
loope
mov
daa
add
mov
loope
loopne
pop
fsubr
push
pop
xor
pop
xor
inc
mov
xor
dec
aam
add
and
sbb
push
je
mov
add
and
into
xchg
fwait
dec
scas
push
jno
inc
mov
imul
dec
jle
call
inc
or
ljmp
dec
lea
lods
lcall
mov
fdivs
neg
es
ljmp
mov
cmp
roll
call
movsl
cwtl
sub
loopne
add
push
adcb
arpl
cmpsl
sbb
and
pop
pop
xor
cwtl
mov
push
or
mov
call
or
dec
jle
repnz
adc
imul
mov
mov
std
insl
orl
and
lea
inc
xor
add
cmpsl
mov
into
jae
xchg
fiaddl
in
mov
and
push
test
inc
testl
ret
loop
fs
inc
or
cmp
xchg
aam
inc
test
bound
in
xor
add
push
mov
push
lea
sub
xchg
cmpsb
test
or
push
jbe
loop
rorl
cmp
shll
lret
movsb
sub
push
int3
pusha
data16
push
dec
int
mov
pop
or
dec
rol
add
push
popl
bound
pusha
shll
xlat
mov
cld
mov
jmp
cmp
sarb
or
lret
lcall
rorl
mov
arpl
jle
push
shrl
loope
shr
or
mov
sti
jmp
xor
lcall
lock
lock
daa
repnz
add
dec
cli
cli
inc
cli
notb
xchg
xor
push
xchg
test
xor
lea
push
jbe
filds
sub
mov
les
mov
pop
xor
cwtl
fimull
lock
push
mov
xor
and
and
mov
movsl
jmp
enter
push
xlat
mov
lock
push
inc
fmuls
add
xor
stos
sbb
test
push
mov
loop
out
add
pop
xchg
jge
mov
jne
adc
pusha
sbb
inc
scas
push
lahf
dec
cmp
je
ficomps
dec
xor
loopne
push
repnz
fmull
and
sbb
inc
add
and
push
xor
dec
sub
jno
cwtl
mov
hlt
mov
roll
loop
out
dec
pusha
and
push
pop
or
fmull
or
sub
shrl
fnstcw
pop
scas
insl
test
cmpsb
jecxz
xchg
cli
mov
mov
mov
lods
test
call
inc
xor
mov
adc
repnz
test
test
jge
or
sbb
cs
or
and
jmp
add
mov
jne
jne
lods
fisttpl
ljmp
add
pushf
pusha
mov
fstl
xor
sub
stos
mov
sbb
stos
jg
movb
push
movb
adc
pusha
je
dec
sub
adc
or
pop
jo
dec
inc
fsub
shl
loop
inc
scas
xchg
push
movsb
pop
inc
rcrl
push
fdivs
mov
fiadds
inc
imul
adc
insl
call
adc
call
mov
ret
dec
jbe
pop
add
and
mov
push
in
jne
fists
mov
je
sbb
mov
or
mov
or
or
enter
mov
or
sbb
in
shrl
clc
rolb
mov
add
dec
push
sbb
push
sahf
mov
insl
push
shlb
add
loope
test
jnp
or
call
add
xor
testb
mov
inc
add
addr16
in
jle
jp
push
mov
sub
cmp
shrl
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
pop
or
icebp
add
fadds
add
test
pusha
mov
ret
js
hlt
xchg
jp
jne
dec
mov
jb
int
popa
pop
and
adc
push
and
js
lret
or
pusha
sub
shll
lcall
dec
sti
sub
add
add
add
mov
and
ret
lcall
add
push
mov
mov
test
lods
push
daa
add
or
or
rorl
int3
push
mov
nop
push
or
lret
push
add
or
add
xchg
inc
out
add
adc
call
add
cmpl
xchg
sbb
or
pop
cmp
fdivs
test
outsl
pop
mov
mov
iret
xor
sub
lret
into
pusha
inc
and
jg
es
pop
and
pop
pop
add
xor
xor
ret
sbb
pop
shll
or
or
xor
mov
mov
inc
push
pop
movsl
test
or
or
rcrl
movsl
push
or
xchg
push
inc
or
xchg
ss
mov
pop
cmp
add
or
push
pop
push
jo
enter
pop
xchg
adc
fbstp
jle
jne
and
mov
clc
enter
dec
jge
shrb
out
and
push
or
test
lock
sbb
pop
and
xchg
addb
clc
mov
addb
je
jnp
or
push
xor
or
and
mov
xchg
xchg
aam
add
mov
jp
shl
or
stmxcsr
sbbl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
mov
mov
mov
sub
cmp
out
and
sbb
inc
jg
into
aam
jb
into
into
mov
jmp
in
inc
pop
sub
push
pop
sarl
nop
pop
sahf
pop
mov
xchg
add
not
and
or
mov
pop
popf
sbb
or
dec
add
adc
pop
lcall
add
leave
lahf
pop
inc
faddp
test
add
pusha
in
jns
add
add
test
and
xchg
xchg
out
je
and
jne
rorl
sub
jmp
pusha
sbb
mov
lret
in
lret
sbb
push
xchg
adc
push
pop
pop
mov
in
rcrb
ret
jo
ds
xchg
mov
mov
dec
les
roll
inc
pop
cwtl
pop
test
scas
sub
mov
loopne
push
and
sahf
add
das
aad
sbb
insb
inc
xchg
adc
lret
lock
shlb
int3
mov
or
jle
sbb
xor
test
jle
sbb
je
in
gs
dec
sub
loope
cmp
inc
adcb
decl
mov
or
or
cmp
jbe
ja
add
dec
aam
jmp
push
xor
movsl
pushf
xchg
loopne
sub
cwtl
or
ficompl
ret
imul
mov
push
add
xor
sub
ret
pop
mov
jle
mov
repz
sbb
push
or
adc
xor
icebp
test
je
sub
or
faddl
jo
jmp
aad
ret
loopne
enter
in
pushl
insb
sti
loop
mov
mov
inc
test
and
and
ret
and
inc
fcomps
inc
fmul
loope
pop
inc
mov
and
sbb
mov
rol
gs
stos
dec
test
jb
sahf
mov
dec
cmp
cld
adc
pusha
bound
adc
dec
push
fwait
or
aas
push
cs
push
mov
add
loope
push
jmp
push
push
xlat
mov
loopne
rolb
push
push
ss
fcomps
outsb
rcr
xchg
sub
fistpll
sub
pop
jmp
sbb
push
mov
mov
dec
inc
or
rcl
inc
inc
mov
push
bound
xor
fimull
mov
xchg
int
pop
and
fsubp
adc
test
push
pop
nop
lock
fwait
dec
popa
and
sbbb
call
push
fs
push
ret
push
add
test
sbb
xor
add
mov
pop
add
mov
shlb
mov
jne
out
adc
and
sbb
outsl
sbb
dec
in
mov
clc
cli
outsl
dec
add
pop
add
test
rcrb
sbb
xor
fs
push
lock
add
add
mov
add
inc
push
js
mov
xor
aas
cmpsb
jne
fmul
enter
psllq
js
sub
xor
pop
sbb
inc
dec
mov
fs
fbstp
fmuls
je
cmpsb
loopne
jmp
dec
or
xchg
ds
sub
mov
outsl
dec
sub
js
push
dec
pop
mov
adc
sub
iret
ds
mov
scas
movsb
cmp
add
leave
inc
insl
enter
sub
pushf
iret
dec
cmpsl
scas
jge
push
push
xor
push
mov
sahf
add
das
push
cwtl
jo
sbb
dec
and
inc
or
sub
decl
jo
push
fisttps
jl
mov
nop
inc
hlt
sbb
inc
jbe
fdivrs
xlat
aas
pop
cmp
rclb
push
daa
jne
jle
or
mov
pop
insb
testb
mov
inc
inc
fisubrs
adc
pushf
add
adc
push
adc
cmpsb
cmpsl
mov
mov
cmp
and
lcall
jge
jo
sti
pop
lahf
add
repnz
xor
add
or
xchg
outsb
add
dec
adc
and
lret
test
clc
adc
sbbl
adc
aaa
incl
pusha
mov
mov
insl
add
cwtl
mov
cmpsb
out
push
dec
ret
aaa
lea
xchg
add
jne
jge
pushf
sbb
or
jae
and
and
or
roll
dec
fs
adc
ljmp
hlt
sub
sbb
adc
pop
jmp
cmpb
add
adcb
sbb
sahf
push
add
and
or
mov
sbb
lock
sbb
scas
js
loope
pusha
sbb
les
andl
push
add
push
mov
add
insb
sbb
sbb
push
xor
and
mov
xor
addr16
adc
and
push
sahf
mov
adc
loopne
ret
xchg
inc
sbb
repnz
hlt
jbe
andl
mov
sbb
sar
insl
inc
push
pop
inc
or
sub
ds
sbb
push
ds
push
in
add
hlt
push
loopne
add
mov
ss
ret
push
lods
jp
enter
cmp
or
mov
movb
push
loope
cmpsb
xor
cmp
jge
aad
mov
or
lea
outsb
push
mov
nop
call
mov
push
lods
aaa
add
dec
xor
push
aam
mov
push
lcall
push
or
push
shl
push
push
add
or
dec
or
pop
pop
dec
push
push
sub
add
test
shl
add
add
xor
and
xchg
int3
lea
rorl
ret
les
push
push
arpl
lods
mov
lea
shlb
cmp
push
sbb
ljmp
fdivrs
add
mov
rcrl
xchg
mov
adc
lods
insb
jecxz
and
sti
or
pop
push
push
cmp
jg
dec
cld
xor
ja
pop
fucomi
jecxz
jl
sbb
push
push
jbe
xor
je
aas
inc
xchg
addb
aas
aam
inc
add
cli
adc
inc
clc
sbb
push
and
add
fyl2x
and
add
add
cli
mov
lods
sub
xchg
gs
out
imul
sbbl
xor
add
ja
adc
mov
in
sub
cli
mov
pop
rcll
idivl
jecxz
scas
mov
dec
or
and
imul
insl
mov
push
gs
imul
sbb
jl
push
std
dec
outsl
xor
addr16
aad
mov
mov
sbb
dec
jge
add
inc
lods
rol
dec
clc
inc
pop
pop
loop
add
adc
xor
outsb
dec
cmp
jl
adc
sbb
inc
mov
adc
dec
pop
in
pop
mov
rolb
movsl
and
adc
pushf
imul
sub
adc
inc
add
into
and
out
cli
enter
call
fimull
les
add
fcomps
xlat
mov
scas
into
xor
and
push
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
add
or
xor
and
shrb
out
xor
cmpsl
push
mov
rol
xor
iret
cmp
jge
sbb
cmp
mov
xor
popa
imul
orl
test
mov
repz
repz
iret
repz
aad
jmp
cmp
clc
std
testb
pop
lcall
cmp
or
push
pop
add
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
pushf
or
push
mov
add
or
pusha
push
clc
rclb
rcrb
int3
movsl
add
cmp
mov
add
and
subl
frstor
mov
pop
out
ss
dec
aad
add
push
mov
cmp
xor
jmp
or
pop
lock
mov
cmp
out
push
xor
rolb
dec
sbb
inc
add
push
sbb
cmp
sub
add
adc
jp
adc
mov
icebp
inc
ss
movb
add
ret
loopne
add
sub
jp
mov
sti
sbb
add
adc
adcl
cmc
sub
popa
out
cmp
fsubr
inc
into
mov
rcr
add
jns
add
inc
loope
and
mov
stos
int3
push
add
aaa
adc
push
jb
iret
adc
mov
orb
hlt
call
push
xchg
call
inc
jae
inc
ret
xor
test
jbe
xlat
mov
cmpl
adc
pop
pop
icebp
jmp
stos
push
sbb
loop
push
lds
incl
inc
jmp
sub
es
pop
data16
cmp
push
cltd
loop
add
adc
dec
jo
inc
fs
rcrb
adcb
in
repz
mov
and
or
sbb
add
push
mov
pop
mov
int
loopne
fwait
dec
je
xchg
xorb
pop
mov
pop
cmp
test
out
xor
add
or
and
lods
in
fdivl
enter
imul
mov
jae
push
xchg
faddl
cmp
jne
mov
mov
pop
jl
push
and
aaa
add
mov
imul
jp
ret
test
mov
or
jp
pop
mov
mov
push
pop
les
and
add
mov
xor
add
mov
orl
sub
add
in
loopne
cs
aam
or
pusha
cmp
dec
and
mov
mov
roll
arpl
in
mov
cld
mov
movsl
push
enter
dec
jnp
and
enter
add
mov
mov
or
pop
dec
lock
add
add
adc
push
cmp
mov
data16
push
pop
movl
or
mov
sbb
jmp
pop
or
sbb
pushf
or
gs
and
add
adc
push
mov
xor
pop
and
inc
ror
and
lock
push
pop
or
add
bound
cld
cmp
cmc
dec
sbb
out
sbb
int3
sub
sbb
pop
scas
push
ret
sbb
and
stc
dec
pop
push
push
arpl
sub
inc
ucomiss
hlt
sbb
mov
nop
sub
loope
cmp
mov
sub
cmpsb
push
mov
sbbl
and
es
subl
rolb
dec
gs
jnp
inc
pop
pop
sub
push
cmp
mov
cmpb
jo
jns
loopne
out
add
jge
push
push
les
add
and
shl
dec
cmp
mov
cmp
js
jae
push
loop
adc
aad
adc
aam
pop
cmpsl
lods
leave
fsubrl
inc
jns
push
cmp
xor
sbb
cltd
add
sub
movsb
or
sbb
add
add
xor
cmp
pushf
loopne
scas
add
mov
xor
inc
roll
cmp
enter
jbe
cmpsb
jne
jbe
ja
dec
push
add
and
mov
testb
push
jbe
jmp
xchg
rcrb
xor
or
bound
push
xor
sub
xchg
mov
cmp
fiadds
popf
loopne
sbb
dec
and
outsb
mov
add
ds
xchg
dec
lods
dec
add
stos
ror
test
in
mov
xchg
xchg
jbe
scas
and
add
mov
add
mov
sete
pop
add
add
int3
arpl
sub
add
xchg
adc
cmpsb
ljmp
jg
test
sahf
xchg
pushl
fs
cs
mov
imul
adc
sbb
rorl
dec
fsubr
sub
les
jno
out
jne
loopne
jnp
in
add
jno
shrb
or
ret
add
mov
fsubs
lea
out
cmp
outsb
jecxz
aas
sbb
mov
lock
movsb
rorb
std
cmp
add
pslld
cmp
cmc
cmp
add
dec
mov
out
adc
insl
cmp
mov
add
pop
sbb
insb
in
mov
add
jae
std
inc
sbb
loope
adc
clc
adc
popa
cmpsb
cli
and
add
les
ljmpw
sbb
and
pusha
ljmp
lock
xor
jmp
ss
cmp
pop
mov
aaa
mov
mov
mov
dec
lock
or
cmpl
xor
int3
pop
push
adc
std
shl
cmp
sub
mov
lgs
xor
jne
inc
addl
sub
call
pop
ds
hlt
xorl
or
cmc
cs
into
jne
sub
mov
test
pop
stos
insl
mov
xor
jmp
iret
mov
cs
cmp
jmp
loope
inc
sub
scas
int3
pop
or
pop
mov
sar
push
clc
xor
lods
mov
or
mov
xor
imul
add
int3
fisttpl
dec
das
add
pop
nop
and
jo
rorb
add
cmp
jno
mov
inc
pusha
dec
inc
lea
fs
and
pop
add
cwtl
in
rcl
jg
push
add
add
and
iret
push
jno
mov
aam
add
std
xor
xor
bound
leave
ja
xor
add
rcrb
adc
cmpsb
adc
or
int
shl
icebp
mov
call
or
ljmp
in
idiv
in
ret
fdivr
or
add
shr
and
cli
inc
jl
or
sbb
popa
mov
sub
adc
fbstp
xorl
pop
mov
push
add
je
pop
rolb
incb
sub
cltd
mov
mov
add
cmp
data16
rcr
pop
xor
push
stos
push
add
add
fwait
xchg
xchg
sub
or
pop
push
mov
add
pop
jmp
jo
sbb
js
sub
fldt
push
push
or
scas
pop
mov
imul
lret
mov
and
xor
mov
sub
lods
add
dec
jge
sub
dec
sti
pop
dec
je
add
es
add
or
add
repnz
test
push
sbb
lods
jmp
aas
repnz
stc
roll
cwtl
jmp
push
push
sbb
cwtl
jge
in
cmp
jmp
insb
mov
sbb
push
imul
mov
inc
pop
pop
push
add
fisubrs
and
repnz
xor
dec
sub
or
hlt
jnp
std
repnz
std
pusha
jmp
outsb
cmpsb
and
add
sbb
mov
push
mov
mov
sbb
repz
or
lahf
lea
xor
inc
sbb
sbb
pusha
subl
mov
push
test
clc
es
inc
add
xchg
jbe
adc
and
xor
xchg
lods
adc
xor
push
push
inc
inc
aam
push
pop
jns
adc
sub
add
push
fs
adc
out
xor
sbb
inc
lret
mov
push
shr
or
je
mov
and
sbb
and
push
xchg
push
or
sub
int
pop
push
jecxz
cmp
clc
and
pop
out
lret
inc
fptan
roll
cld
pop
sbb
adc
adc
mov
sbb
enter
mov
enter
and
fs
push
xchg
xor
jne
lret
test
add
or
xchg
adc
lahf
mov
inc
aam
adc
push
mov
call
push
xchg
dec
xor
fildl
add
es
sbb
std
or
sbb
sbb
cmp
push
add
push
std
mov
and
inc
insb
sbb
lods
and
mov
pushf
int3
push
shrl
lods
jne
ss
push
in
jo
aam
into
xor
mov
cwtl
mov
pop
adc
andl
scas
push
in
push
std
inc
push
pop
xor
push
arpl
cmp
out
cmpsl
mov
repz
repz
cmp
js
lcall
cmp
out
inc
add
and
out
xor
ja
jns
out
cltd
stos
mov
mov
shlb
inc
push
xor
and
aaa
push
es
and
or
out
pusha
popf
adc
dec
cmp
lock
ds
jl
imul
imul
mov
iret
cmpsb
lea
shrl
inc
add
mov
mov
fs
filds
andb
pop
jecxz
jge
push
add
scas
mov
inc
or
dec
push
mov
cld
aad
push
mov
jmp
sub
add
fcomps
sub
push
mov
lret
out
adc
add
pop
ja
add
lds
or
cs
add
pop
mov
xor
pop
ss
xor
jo
xchg
sub
cld
mov
lret
xchg
sbb
mov
inc
cmp
nop
call
dec
das
fstpt
or
cmpsl
mov
cmp
cwtl
mov
adc
test
inc
push
test
push
add
inc
dec
es
push
add
jle
repz
loopne
sbb
mov
push
jmp
je
in
cmp
jne
mov
outsl
push
mov
lods
mov
pop
andb
mov
int3
mov
jmp
loop
orb
or
in
push
mov
and
pop
fs
mov
lret
add
mov
adc
cld
mov
inc
stc
test
adc
mov
mov
movl
inc
add
xchg
inc
sub
xor
pusha
out
icebp
clc
push
and
jb
jle
push
adc
mov
mov
add
sub
sub
xor
push
add
js
push
push
inc
dec
add
push
outsl
repnz
movsb
jns
pusha
add
mov
aaa
and
xor
mov
sbb
or
cmp
fs
pop
push
insb
add
sbb
or
pop
cmp
pop
loop
and
vmwrite
dec
or
test
aad
add
fyl2xp1
iret
dec
or
and
sbb
mov
jnp
adc
add
push
jmp
fisttpll
mov
sub
xor
or
movsb
lea
fadds
cltd
cmp
dec
dec
push
cmp
mov
pop
cmpsb
mov
cmp
inc
sub
fwait
cli
xchg
sbb
aad
cmp
jb
test
add
add
testl
arpl
notb
cmp
sbb
adc
xor
rcrb
incb
push
adc
shll
adcb
lods
jae
adc
sahf
adc
push
add
repnz
adc
scas
mov
cmp
xor
out
jo
sub
fs
jno
dec
adc
mov
test
jb
scas
xchg
push
bound
out
divl
je
cmp
shll
adc
cmc
fs
movsl
pop
cs
pop
aaa
adc
push
roll
xchg
jnp
mov
out
cmp
pop
dec
cmp
or
movsb
add
pop
and
imul
mov
andl
lret
dec
mov
add
rcll
inc
cmpl
imul
and
xor
cmp
jle
ret
mov
jge
leave
aas
add
gs
into
lea
push
repnz
dec
add
in
add
hlt
inc
add
mov
pop
in
pop
mov
aam
jmp
std
je
lock
loope
add
mov
push
addb
mov
lea
push
sahf
inc
cmpsb
or
cmc
rcll
fcoms
cmp
push
movsb
in
inc
mov
loopne
add
jmp
push
sub
xor
test
lods
sub
adc
addr16
cmp
jo
push
sbb
ret
sub
or
pop
xchg
or
aam
into
dec
jb
int
fldcw
in
or
adc
sub
push
orb
aas
sarb
fs
lea
or
push
sbbl
pop
sbb
push
icebp
cmp
sbb
push
daa
adc
adc
fs
sahf
adc
loopne
and
jge
test
test
test
cltd
add
ds
inc
xchg
lea
add
cmpsl
je
cwtl
mov
and
add
subb
xor
pop
sub
out
add
jae
cmp
xchg
into
jnp
pusha
ss
pop
dec
dec
sbb
add
push
fsubrl
popf
inc
in
sbb
loope
sbb
mov
clc
enter
stos
dec
mov
or
ss
cmp
ret
jmp
leave
insb
icebp
call
xchg
jo
pop
pop
rcrl
pusha
in
pop
adc
inc
push
adc
add
daa
push
int3
xor
in
push
pop
adc
in
add
sub
test
mov
movd
adc
sbb
cmpsb
push
adc
cwtl
and
xchg
push
sbb
sbb
jne
xor
and
mov
pop
sbb
push
jecxz
iret
ret
add
mov
pop
inc
cmpl
cmp
pop
dec
dec
dec
adc
sbb
cmp
inc
xor
rcr
cwtl
cvttps2pi
ds
rolb
ret
push
add
pop
inc
daa
fs
test
bound
add
lods
sbb
and
add
jge
mov
stos
std
or
inc
push
xor
cmp
fisttpl
cmp
clc
mov
push
add
inc
setae
inc
xor
dec
or
mov
out
mov
pusha
sub
cmpsb
fcomps
insl
mov
mov
pop
push
cmp
sub
mov
push
xchg
mov
enter
pop
sub
push
jl
dec
call
rcrb
out
mov
push
push
add
or
popf
cmpsb
sbb
fsubl
adcb
push
loopne
xor
imul
dec
sarb
and
call
push
push
xchg
pop
push
jns
or
es
bsf
ret
and
cmpsb
push
jo
test
mov
xchg
fs
sub
ret
cmc
push
daa
js
jo
scas
andl
push
outsl
mov
adc
pop
and
jne
cmp
js
pop
test
rolb
sbb
test
jl
pop
mov
push
nop
or
iret
mov
or
sbb
dec
mov
mov
xor
mov
mov
mov
lret
shrb
jae
ret
fadds
inc
loopne
hlt
pcmpeqw
mov
push
push
push
sub
cmpsl
adc
ss
test
lds
and
rcrl
in
out
lret
mov
imul
mov
pop
xor
mov
push
mov
mov
mov
pushf
into
or
mov
sub
adc
add
mov
mov
fs
mov
cmpsl
sub
or
imul
int
mov
sub
adc
shr
xor
sbb
xchg
stos
rorb
mov
imul
push
xor
lds
shrl
cltd
ret
sarb
adc
pop
int3
je
jmp
jbe
dec
pop
adc
imul
and
adc
jmp
js
cld
push
push
xor
sbb
or
push
test
movsb
xchg
in
adc
clc
arpl
and
rcll
xchg
testb
pop
push
push
pop
xor
sahf
sbb
mov
mov
sbb
jnp
adc
jns,pn
add
push
cld
push
imul
jne
push
repnz
sub
pop
jmp
sbb
jns
mov
or
arpl
nop
lret
jl
push
icebp
or
jp
hlt
pop
arpl
jl
and
leave
dec
sahf
fldenv
add
js
adc
xor
and
es
and
and
aaa
sbb
jb
loopne
jnp
adc
fcmove
andb
call
dec
js
es
xor
jmp
add
ljmp
mov
adc
shrl
fisubrs
fildl
sbb
call
and
push
cmpsl
cmpsb
sub
sbbl
enter
pop
in
sbb
sbbl
fadds
add
nop
sbb
cmc
and
repnz
sbb
jb
pop
jb
cmp
add
pop
sub
add
cmpb
pusha
ror
mov
mov
jns
popf
test
mov
sbb
sarb
test
push
jb
adc
jg
or
sahf
pushl
scas
stos
out
test
push
movsl
movsl
adc
mov
nop
add
pop
mov
fsubs
add
and
xor
cmpsb
mov
sbb
inc
push
in
or
dec
push
in
js
enter
mov
and
and
icebp
mov
fcoml
cs
sub
push
add
push
out
out
in
jmp
push
adc
cmp
pop
jno
call
test
lock
dec
xchg
push
repz
add
and
mov
inc
xchg
fisubs
sbb
xchg
inc
pop
adc
test
add
add
sub
xchg
sub
and
insb
push
aaa
mov
push
xchg
xchg
adc
adc
shl
mov
pop
add
imul
mov
xchg
mov
dec
adc
or
in
inc
repz
lods
movsl
inc
sbbl
and
dec
pushf
add
arpl
std
loopne
mov
pop
pop
cmc
or
les
cmp
outsb
add
lds
push
mov
dec
mov
mov
popa
mov
dec
push
pusha
xchg
add
popl
jmp
pop
xor
add
xor
loop
xchg
adc
lcall
outsl
sub
andb
push
imul
sbb
mov
push
jmp
je
jbe
mov
adc
jns
add
or
push
xchg
shl
or
push
and
inc
enter
aam
push
leave
loop
ljmp
and
xor
cmp
adc
mov
pop
mov
shll
cli
mov
test
int
add
xchg
add
aas
movsl
andb
dec
rclb
lret
sti
pop
subl
add
add
xor
out
dec
inc
sub
inc
push
pop
lods
hlt
leave
adc
pop
arpl
adc
inc
xchg
mov
add
dec
cmp
pinsrw
es
das
cs
cmp
adc
cmp
jo
xor
jae
xor
pop
dec
cld
pop
adc
cmp
push
fs
inc
in
inc
in
push
sub
mul
rorl
adc
add
mov
pop
pop
adc
or
or
xor
adc
push
fs
dec
add
add
push
mov
cmp
lea
sub
js
aaa
mov
push
mov
mov
faddl
pop
mov
test
gs
xchg
cmpsb
mov
push
ljmp
ss
lock
rcl
push
push
in
jne
jle
cmp
and
add
add
mov
mov
and
inc
push
jp
jl
mov
aad
fsubr
imulb
push
add
push
sub
dec
movsb
or
xor
popa
xor
rorl
movl
ja
outsl
sbb
sub
test
subb
jne
or
inc
pop
int3
jb
jecxz
mov
mov
shlb
or
push
adc
or
jae
cmp
movsl
sar
jae
shll
sahf
mov
mov
inc
jne
sub
sub
loopne
push
sbb
mov
adc
xor
insl
out
add
xor
add
sbb
xchg
enter
imul
adc
lods
mov
je
inc
lret
iret
mov
pop
fsubrs
push
lods
sbb
cli
les
adc
jmp
mov
test
jmp
icebp
add
jge
lock
cmp
rclb
push
faddl
enter
mov
adc
shll
add
sbb
stos
loope
push
adc
adc
sbb
jmp
jno
or
adc
data16
aad
xor
pop
add
xchg
jecxz
fadds
lock
push
mov
enter
adc
ss
pushf
push
mov
adc
cli
sub
or
adc
and
add
add
or
loopne
lret
cmp
cmpsl
or
pusha
nop
bound
loope
js
xlat
mov
loopne
add
pop
mov
imul
fwait
push
adc
and
sbb
insb
lret
cmp
arpl
xchg
inc
cmp
xchg
push
sti
and
inc
cmp
nop
inc
lock
in
add
add
mov
xor
adc
pushf
hlt
jge
lcall
dec
imul
adc
inc
and
iret
dec
add
and
or
push
pop
sub
pop
xchg
add
cwtl
xor
repnz
pusha
pop
icebp
add
insb
pop
pop
loop
das
add
loope
outsb
mov
shl
fistps
js
int
inc
je
xorb
xor
adc
insl
cmp
and
inc
insb
adc
dec
popa
add
mov
lahf
mov
lea
jns
inc
cmp
dec
sahf
inc
sub
push
push
fcomip
fsubrs
xor
adc
or
xor
mov
cmp
mov
sbb
cmp
sub
cmpsl
adc
add
and
sub
aad
add
shlb
push
push
sbb
add
dec
je
test
push
js
or
je
ret
jae
and
mov
push
add
push
sub
add
or
js
in
cmp
sub
in
push
shll
movsl
int
adc
or
gs
push
xor
lret
and
and
js
enter
xor
rcrb
inc
mov
pop
sbb
inc
and
jbe
sbb
cmp
jmp
arpl
push
add
add
mov
and
push
pop
mov
sub
addr16
jns
jns
mov
in
push
and
push
pop
in
pop
mov
add
cmp
std
add
push
mov
adcb
mov
shr
cmpb
adc
pop
xchg
lea
pop
push
mov
or
pop
sarl
jnp
testb
cmc
push
xlat
inc
inc
jle
mov
dec
push
sub
sbb
nop
inc
mov
jnp
mov
andl
pop
je
movsb
loopne
ljmp
jo
add
push
adc
or
ds
mov
sub
jecxz
testb
or
orl
inc
cltd
mov
test
xchg
jle
test
sbb
test
cwtl
inc
dec
pop
push
push
pop
orl
push
pop
lret
jo
aam
test
adc
shll
and
enter
and
fs
push
push
lods
ljmp
push
loope
test
subb
fimuls
call
orb
in
cmp
in
lock
or
inc
dec
xchg
xor
sbb
cmp
xchg
xchg
in
sbbl
cmp
add
adc
repz
icebp
adcb
and
xor
push
xchg
mov
xchg
adc
push
sub
fwait
add
mov
enter
jecxz
push
ljmp
inc
mov
jb
repz
js
inc
dec
or
push
add
dec
test
cmp
inc
or
add
in
int3
mov
in
push
ror
adc
jb
add
pusha
js
inc
mov
inc
cwtl
mov
xor
aam
push
addl
push
and
in
pop
inc
mov
xor
xchg
cmp
popa
pop
adc
push
stc
pop
dec
push
or
adc
lods
cli
push
mov
sub
push
cltd
imul
stos
call
movsb
icebp
flds
xchg
sbb
xchg
xor
adc
jp
sbb
adc
add
movsl
xor
insb
leave
mov
cs
sbb
add
rolb
dec
mov
sarb
outsl
les
inc
sbb
or
pop
mov
lds
nopl
sub
dec
lret
mov
out
push
cmp
mov
or
mov
adc
adc
aad
add
or
jo
xchg
cwtl
stos
cmp
in
lds
lds
lahf
lock
ret
mov
mov
add
xchg
pop
cmp
in
add
add
push
adc
sub
fstps
xor
xchg
jnp
add
or
lods
xchg
adc
mov
cmp
sbb
add
js
adc
push
jb
and
test
add
lret
dec
xchg
addr16
rclb
sbb
rcll
mov
adc
or
mov
lret
add
mov
shlb
adc
ret
stos
inc
mov
or
outsl
add
jne
loope
adcl
inc
repnz
loope
push
dec
sbb
in
add
lock
or
scas
mov
sub
xchg
or
loopne
rolb
add
jne
jnp
bound
push
enter
and
sbb
mov
and
add
dec
out
adc
or
daa
pop
or
enter
add
hlt
and
cld
insb
or
pop
or
dec
or
sub
out
cmc
ret
mov
xor
adc
in
jmp
xor
xor
movl
cmpsb
jecxz
test
mov
sbb
test
pop
sub
and
in
push
enter
and
mov
test
mov
add
sbb
enter
xchg
and
ror
or
sbb
leave
les
out
leave
pop
or
pop
or
xlat
add
or
test
inc
enter
js
xor
repnz
pop
leave
addb
in
loope
pop
xor
add
add
xchg
xchg
add
add
add
lahf
and
xchg
add
xchg
add
inc
adc
inc
cmp
mov
aad
add
sbb
cs
push
push
sub
adc
iret
ret
adc
push
rol
imulb
das
pop
ret
fdivl
fldt
cmp
jge
call
add
push
sar
ret
xchg
cmp
jle
push
call
or
les
xor
pop
add
lret
sub
bound
in
es
and
jb
loope
cmp
xor
lret
pop
push
jl
sbb
lds
loop
dec
out
lods
add
cs
xchg
sbb
inc
sahf
mov
add
movsb
inc
inc
pop
out
jb
add
add
sbb
pop
outsb
push
add
fimuls
jmp
mov
repnz
ficoml
mov
dec
nop
pop
sub
ljmp
cmp
push
pop
sub
mov
jnp
mov
in
and
sbb
mov
jns
imul
add
adc
cmp
xchg
outsl
roll
daa
cld
or
xor
add
aad
mov
xchg
add
andb
xchg
rorb
xchg
fnstenv
dec
push
fmul
jb
in
mov
popa
add
mov
sbb
add
dec
dec
cs
xor
andl
push
dec
pop
mov
dec
pushf
mov
add
add
inc
movsl
adc
movb
mov
jb
in
js
roll
addb
push
or
outsl
jmp
inc
repz
js
scas
dec
icebp
sbb
jecxz
cmp
jmp
dec
add
daa
add
leave
mov
mov
je
mov
jmp
push
scas
movaps
adc
jmp
add
push
push
std
test
xchg
pop
or
add
or
sbb
das
adc
test
and
add
orl
push
mov
imul
aam
cmp
mov
dec
test
mov
dec
sti
cmp
and
sbb
and
mov
xor
push
cmpsl
pop
or
mov
pop
jne
cli
insb
sub
es
cmp
push
add
out
fs
aaa
hlt
add
jecxz
jmp
les
gs
dec
daa
push
hlt
fsubrl
imul
mov
and
pop
push
mov
adc
or
loope
ss
pop
aas
testl
or
js
or
pushf
pop
pushf
pop
dec
icebp
lds
adc
sbb
jne
daa
pop
mov
and
or
in
mov
or
sub
adc
and
or
notb
mov
jl
aas
fbld
in
jge
adc
outsb
imul
data16
inc
adc
xor
fs
fs
sbb
sbb
mov
sub
dec
inc
sbb
cmp
cmp
mov
stc
xor
adc
and
lods
sbb
nop
dec
push
std
sub
pop
dec
call
mov
enter
imul
xchg
xor
jns
sub
pop
aas
pop
gs
rcll
xor
daa
and
push
xor
pop
xchg
sbb
inc
testl
or
leave
sbb
xor
loopne
pop
mov
mov
xor
addr16
cmp
sarl
cmp
js
nop
xchg
rcrl
or
sbb
inc
pop
jb
aaa
jns
dec
push
push
scas
enter
and
insb
pop
cmp
movsl
jno
out
fcoml
cmpsb
out
je
or
aam
sbb
sbb
and
out
movq
push
js
inc
mov
movb
xchg
inc
xor
and
adc
les
jb
jl
cltd
adc
sbb
lret
arpl
push
inc
inc
push
pop
jnp
sub
sbb
sub
mov
pop
rcrl
or
pop
sbb
sti
scas
or
and
mov
fcoml
push
mov
psubsb
mov
mov
push
push
xlat
push
sub
shll
mov
and
aad
mov
sub
xchg
cwtl
add
xor
jb
aad
std
and
and
ret
jns
adc
jmp
mov
xor
lods
rcrb
int
js
lcall
mov
sub
imul
out
enter
adc
daa
mov
push
xor
dec
inc
xchg
sub
cmp
xchg
test
test
lcall
push
sub
mov
mov
inc
mov
add
add
nop
imul
js
sub
xchg
mov
dec
mov
xor
je
dec
jl
pop
mov
mov
and
and
push
fsubrl
pop
sti
add
mov
mov
jnp
insb
negl
pop
stos
lods
mov
xor
sub
pop
mov
xchg
pop
push
js
add
xor
jae
add
and
les
ret
pop
cmpb
movsl
cmovae
sbb
pushl
mov
mov
rol
mov
ror
xor
shr
xor
es
sbb
mov
or
or
add
add
add
pop
sub
pop
call
lcall
or
push
and
adc
fldt
lock
and
mov
testl
sbb
rolb
jo
add
add
xor
aam
jnp
jne
or
xchg
aam
fdivrs
and
and
movb
insb
out
or
xor
fs
loopne
shrl
jnp
shr
add
mov
push
mov
ror
stos
das
sub
push
in
xor
cmpsb
rorb
in
xor
sub
sbb
inc
lcall
push
sbb
in
push
push
lods
clc
sbb
add
fcompl
shr
add
push
test
fsub
in
xor
push
call
inc
push
nop
cmpsb
call
mov
call
popa
orl
pusha
in
bound
pop
xor
mov
in
cmpsb
test
aam
inc
inc
push
nop
call
add
push
in
xor
pop
cmp
lds
cwtl
cmpsl
and
xor
repnz
mov
pop
cmp
or
xor
cmp
into
pop
sbb
inc
and
inc
or
add
push
ljmp
pop
lock
aam
push
cld
sub
or
push
xchg
add
sbb
test
inc
push
ror
inc
nop
andb
pusha
cmp
aam
dec
sbb
xor
sbbb
dec
sbb
push
lock
xor
lret
fimuls
fdivp
and
push
repz
and
xor
inc
fs
in
xchg
outsl
or
or
or
push
faddl
js
not
push
out
push
cmpsb
bound
sbb
pop
pop
add
cmpsb
call
fcomp
loopne
test
add
fsubs
movsb
sbb
sub
or
inc
call
xor
in
inc
in
imul
dec
movsl
dec
sarb
lods
inc
aam
xor
inc
sub
int
add
fisubrl
push
and
push
and
lcall
dec
or
inc
xor
inc
mov
adc
dec
pop
dec
cmp
push
cld
push
es
lcall
or
ljmp
pusha
lret
push
adc
in
push
roll
nop
pop
push
sub
xchg
or
fs
xorl
popa
xchg
and
mov
rcl
or
enter
fiadds
dec
mov
add
scas
fs
data16
push
mov
fmuls
push
aaa
js
cmp
sbb
mov
add
pop
sarl
add
addb
sbb
mov
repz
sbb
jo
movsb
lods
dec
sbb
sbb
push
and
and
push
add
js
cmpl
push
ror
or
lods
jl
movl
inc
test
jle
out
sub
loopne
lea
inc
lea
sub
mov
push
cmp
push
sbb
or
or
or
dec
mov
js
jge
stos
in
mov
mov
cld
adc
jl
je
nop
and
or
adc
dec
or
dec
add
clc
push
sbb
mov
add
mov
clc
data16
sub
push
adc
rolb
leave
mov
pushw
popa
or
cmpb
data16
or
sub
dec
inc
jge
inc
xor
leave
rcll
push
mov
cmp
inc
mov
mov
jb
das
sbb
inc
jge
add
or
pminub
addb
and
or
incl
jb
icebp
adc
push
sub
insl
pushf
cmp
xchg
lods
in
cld
fdivrl
adc
lcall
rorb
cmp
sarl
dec
mov
hlt
faddp
push
fnsave
jae
in
push
cld
push
mov
sub
jmp
jae
inc
sbb
pusha
mov
pusha
pop
or
mov
inc
and
stc
sub
or
jne
outsl
add
insb
iret
je
shufps
cmp
push
mov
adc
mov
cmp
cmp
cmp
jno
outsl
or
insb
fldl
test
popa
pusha
mov
call
int
add
add
shlb
mov
scas
pop
adc
fadds
xor
jo
and
test
outsb
inc
outsl
inc
js
pop
mov
add
xchg
xor
sub
cmp
xor
and
sbb
fnstenv
js
lock
or
hlt
or
mov
pop
clc
pusha
adc
nop
pop
inc
and
es
push
cmp
xor
repnz
push
cmp
and
inc
test
jl
movsb
mov
icebp
ret
lock
fcoms
or
adc
pop
shlb
adc
pop
fcmovu
pop
enter
dec
or
jbe
xor
xor
add
push
sub
or
rcll
mulb
imul
lret
jg
sub
pop
and
adc
in
cmp
sbbb
lds
pusha
and
shlb
adc
mov
push
shl
add
sub
cli
sbb
mov
rclb
ja
dec
or
inc
jecxz
enter
sbb
in
sub
push
mov
gs
inc
insb
mov
rcrb
stos
dec
mov
pushf
cld
js
aad
scas
sbb
sbb
or
inc
nop
pop
jns
mov
jp
add
push
and
orb
test
add
in
pop
test
cmp
mov
in
dec
mov
fbstp
add
mov
cli
sbb
ret
pop
in
xchg
and
test
sbb
stos
inc
ret
pop
pop
adc
sub
sub
mov
push
outsl
adc
fnstsw
mov
addb
inc
pop
mov
nop
inc
push
test
or
es
sbb
jae
fcoms
jecxz
xorb
mov
test
enter
xor
shl
loope
or
repnz
ljmp
sbb
idivl
outsl
push
mov
sub
icebp
sbb
or
push
jmp
fld
stos
push
jne
dec
mov
movsb
lock
ss
enter
leave
add
clc
hlt
cmp
fdivl
push
and
stc
out
stos
add
jo
int
adc
add
js
ret
xchg
or
cmpsb
pop
push
and
xor
sub
into
sbb
mov
jmp
ds
mov
imul
cmp
lret
pop
pop
into
aaa
repnz
fs
push
add
sub
push
dec
cmp
in
mov
inc
xchg
cs
push
xchg
or
add
jbe
dec
ficoms
pop
add
xchg
cmpsl
ret
loope
rorb
repnz
push
sbb
adc
rclb
or
iret
movsl
cmpl
testl
js
add
sub
pushl
cmpl
add
test
or
xor
inc
or
daa
lods
jge
stos
sbb
mov
nop
sbb
push
fildl
idiv
mov
add
rolb
inc
test
sbb
sbb
inc
and
jmp
test
addl
sub
sbb
fcoms
push
jl
lock
xchg
hlt
jl
and
insb
mov
test
sub
add
nop
add
mov
pusha
sbb
and
idivl
or
divb
dec
push
add
push
push
mov
popa
or
cltd
sbb
sub
leave
test
sub
xor
ret
in
in
sub
ds
loopne
je
push
inc
mov
loopne
push
push
cmp
popa
or
sbb
mov
cwtl
push
inc
mov
test
add
cmp
lret
mov
ret
mov
add
cmp
fldl
push
xchg
in
lcall
mov
sahf
add
and
scas
je
ss
push
dec
or
add
cmp
orb
jle,pn
shlb
icebp
inc
sbb
mov
aas
notb
scas
push
jo
inc
insb
cmpsl
fs
out
xor
jmp
andl
lret
test
push
int3
dec
cmpsb
stos
jp
cld
and
push
cmpsl
cmp
or
mov
inc
subl
xor
xor
addr16
pop
or
mov
xor
mov
in
movzbl
shrl
in
cli
fdivrs
shr
add
mov
ficompl
and
pop
inc
adc
push
sub
idiv
pop
or
inc
mov
sbb
lock
cli
inc
or
loope
dec
or
pop
pop
enter
jbe
push
xor
into
add
cmpsb
hlt
stos
rcrb
aad
add
xor
mov
sub
and
mov
cwtl
push
jnp
ds
pusha
test
leave
or
js
loop
ret
and
je
outsb
test
xor
push
pop
shlb
mov
adc
or
and
clc
movsb
adc
push
sbb
or
pminub
fildll
js
nop
es
mov
dec
cwtl
sub
push
push
add
mov
int3
inc
imul
push
xor
pop
xor
push
sub
pop
pop
aas
push
shlb
mov
mov
movsb
test
jle
inc
sti
pusha
push
inc
mov
or
xor
mov
push
push
add
cmp
inc
cmpsb
fdivrs
mov
jle
push
enter
int3
cmp
sub
stos
cwtl
adc
jo
push
sbb
jecxz
jae
push
inc
push
push
inc
mov
ret
mov
pop
add
push
ja
jb
lcall
pop
into
or
adc
add
lcall
pop
add
sarl
push
xchg
xchg
les
inc
in
xchg
rcll
or
aas
sbb
jecxz
sub
xor
or
out
stc
xor
inc
pop
xor
in
cld
push
push
ret
pop
dec
daa
mov
out
or
dec
xchg
sbb
ffree
arpl
movl
add
jp
aas
mov
push
push
xchg
xor
scas
dec
dec
shr
mov
test
nop
sub
test
push
sahf
lock
push
sub
mov
add
in
or
or
loopne
jecxz
or
mov
mov
bound
in
ret
sbb
int3
push
xor
pop
das
and
mov
mov
inc
jno
shlb
lock
adc
fsubl
shll
push
push
push
addb
insb
inc
pop
add
push
dec
rcr
lret
aad
pop
ds
mov
inc
hlt
mov
push
mov
clc
add
inc
jnp
push
and
push
inc
xchg
out
add
jmp
lock
push
xchg
aad
aad
mov
in
gs
adc
jno
outsl
es
adc
orl
or
into
in
xor
insb
lods
adc
fcmovnb
jne
and
imul
rclb
loopne
mov
add
mov
in
xor
push
ss
adc
sub
inc
inc
and
rcrl
mov
inc
and
xorb
int3
or
pusha
add
or
or
cmp
push
movsb
sbb
adc
dec
push
sbb
test
and
cwtl
push
mov
mov
ret
inc
mov
add
addb
rclb
and
or
jne
movhps
iret
mov
test
hlt
addl
or
jae
inc
push
mov
dec
dec
mov
push
adc
pusha
mov
adc
adc
mov
or
popa
inc
jp
inc
cmp
adc
std
js
sub
sti
or
or
cmp
into
subb
xor
pushf
mov
sub
inc
loopne
insb
adc
cld
push
pop
and
or
fldl
and
push
cmp
repz
dec
loop
push
iret
push
add
stos
or
mov
fcompl
add
iret
leave
sub
insb
add
jmp
push
mov
adcl
push
call
xchg
lahf
dec
in
ret
jl
lahf
push
mov
test
pop
inc
push
flds
or
hlt
adc
das
jns
cltd
adc
jmp
ja
xor
ja
push
and
cmp
cmpsb
xor
inc
rorl
ret
rclb
push
inc
push
or
sbb
jle
inc
movlps
xchg
in
or
clc
push
ja
jne
leave
inc
movsl
ljmp
mov
enter
lahf
or
daa
call
ss
xor
mov
or
xchg
in
push
inc
dec
hlt
mov
loop
mov
push
jne
push
mov
adc
scas
mov
test
pop
add
mov
cmpsb
push
dec
insb
daa
sub
test
pop
sbb
fiaddl
pop
xor
add
mov
ljmp
outsl
idivb
std
das
mov
or
cmp
adc
sub
inc
xor
mov
imul
add
movsb
std
xor
ret
jp
test
arpl
pop
sub
mulb
cmp
jge
inc
div
adc
cmp
sub
jge
mov
shll
jecxz
mov
dec
inc
or
je
cmp
jne
inc
inc
jmp
xor
jmp
cmp
dec
jge
imul
gs
sbb
adc
jmp
inc
push
sub
cli
test
mov
sub
cmpb
jbe
repnz
and
and
sub
pusha
mov
add
fcoml
add
nop
insb
popa
and
xchg
jmp
push
scas
sahf
ja
or
push
sbb
sbb
push
int3
sbb
mov
pop
add
daa
mov
mov
pop
test
inc
enter
pop
sarb
loopne
negb
jbe
and
cmp
push
lods
fistpll
add
or
xor
push
xor
pop
push
pusha
daa
jl
mov
sbb
lods
inc
pop
xchg
cmp
int
fisubl
ds
lea
loope
mov
adc
jo
adc
inc
jbe
add
push
xchg
insb
aas
fs
cmpb
inc
sti
pusha
dec
add
mov
or
in
popf
jmp
aam
imul
push
fcoms
push
jbe
push
inc
adc
sbb
push
jne
sub
or
negb
insb
insb
adc
add
mov
pop
xor
pop
aaa
sbb
pop
bndstx
add
lock
addr16
and
pop
in
add
push
mov
and
lret
sub
pop
jl
pop
lea
lods
test
popf
jb
outsb
test
push
mov
push
out
lea
xchg
dec
pop
push
in
push
cmovnp
inc
add
push
stos
add
mov
push
xchg
jl
or
or
dec
decl
push
cmpl
pop
push
mov
pop
movl
add
loope
or
add
nop
loopne
xor
cmp
fiaddl
lret
xchg
dec
adc
rolb
or
rorl
lea
xchg
fwait
cmp
mov
pushf
loopne
or
cli
pop
sbb
mov
dec
clc
jbe
test
fcomps
imul
call
outsb
inc
push
and
bound
cmp
ret
pop
push
cmpsl
xchg
movsl
sbb
sbb
sbb
inc
in
or
inc
or
cmp
sbbb
adc
jbe
lock
xchg
sub
jle
fiaddl
arpl
stos
add
in
pop
adc
in
mov
pop
push
loopne
stos
mov
sub
loop
sbb
pop
push
sti
sub
pop
jge
push
add
into
mov
xchg
dec
push
mov
mull
dec
orb
xlat
out
test
repnz
std
cmp
bound
add
std
enter
or
inc
push
push
cmp
push
dec
pop
pop
ret
pusha
push
add
adc
xlat
mov
pusha
push
add
push
fdivrl
out
adc
fisttpll
into
ret
push
es
iret
loope
subb
mov
xor
jmp
sbb
xor
fidivl
lcall
xchg
inc
lea
push
inc
mov
xchg
pop
push
roll
pop
repnz
push
repnz
cmp
push
pop
in
pop
or
stos
adc
jle
fsts
and
adc
xchg
mov
aad
mov
dec
mov
into
mov
addb
and
pop
lock
shlb
out
jl
lods
loope
repnz
pop
xor
scas
outsb
pop
in
dec
pop
fisttpll
mov
loop
dec
xchg
inc
clc
add
inc
jge
loopne
ja
es
xor
cmp
testl
xchg
sahf
insl
and
jo
lea
ret
sub
fdivl
bound
test
dec
mov
js
sub
push
loopne
sbb
movl
push
mov
xorps
scas
test
pop
mov
adc
or
xor
inc
add
mov
rolb
addl
jbe
add
jl
mov
pop
das
dec
shrl
inc
or
add
rcrl
jmp
dec
pop
sbb
add
sbb
stos
or
inc
or
mov
or
aas
daa
mov
mov
or
add
test
push
test
test
fisttpll
xchg
ret
sub
dec
scas
bound
sub
add
and
rolb
xchg
shrd
add
push
lds
test
in
inc
push
icebp
mov
adc
adc
mov
shrl
pop
mov
add
jno
sbb
bound
sub
in
lock
aas
add
fdivl
mov
xor
fucomp
les
push
fisttpll
sahf
sub
sbb
cwtl
lea
sbb
jg
push
mov
loop
ja
fistpl
sub
xor
shlb
add
sub
mov
dec
les
ret
add
xchg
dec
daa
push
aam
fsubrp
nop
ret
test
adc
jmp
and
jecxz
or
push
incl
cmp
lret
outsb
lret
pop
rcll
test
in
and
sbb
dec
clc
add
idiv
and
ja
lret
rol
and
push
push
and
add
popf
pop
or
push
dec
sarl
sarl
lock
sbb
and
jge
jb
pop
sub
jno
xor
cmp
imul
fs
mov
sub
dec
or
and
jmp
mov
rcr
pop
arpl
pop
cmp
sub
fstpt
sarl
and
ret
xor
pop
in
hlt
aad
sbb
adc
movsb
cld
push
and
add
int
sub
mov
adc
jo
jecxz
add
inc
push
jns
mov
sub
lea
lock
push
adc
shlb
sub
xchg
sub
xchg
in
rorb
and
test
pop
ret
mov
add
inc
sbb
mov
insb
sub
cmpb
sub
ds
fidivrl
adc
or
xor
pop
clc
sbb
lock
inc
add
sub
sub
or
lret
and
dec
andb
sbb
pop
mov
mov
xor
imul
mov
jl
cmc
or
les
xchg
std
sbb
adc
sbb
or
adc
jmp
mov
push
push
push
in
gs
push
fdivrp
je
cmp
fimuls
ss
dec
jne
mov
fisttps
sub
pop
repnz
movsb
sub
sub
mov
jne
push
and
add
sub
data16
and
and
inc
mov
mov
lahf
and
fildl
mov
sub
sub
inc
dec
mov
dec
enter
push
adcb
add
xor
mov
sub
dec
mov
mov
popf
xor
nop
xchg
subl
push
cli
push
inc
or
stos
pop
cs
push
popf
jne
les
adc
push
mov
xlat
cmpsl
xchg
movsl
add
jbe
movl
push
xchg
dec
push
scas
cmpsb
mov
add
jle
sub
push
mov
mov
jmp
aad
sbb
mov
mov
hlt
test
roll
push
pop
inc
mov
repz
dec
sbb
push
repz
stos
push
outsl
and
mov
bound
pop
push
inc
cmp
cmp
rolb
rorl
dec
lods
push
mov
dec
inc
sub
out
push
xchg
fmull
stos
pop
adc
mov
xor
sbb
sbb
pop
jae
incl
imul
arpl
sub
sub
cli
das
mov
xor
shll
popa
cmp
mov
sub
stc
mov
cmp
lea
xchg
sar
aad
lea
cmp
ja
push
xor
dec
rcrb
ja
cli
lcall
push
cld
sub
adc
lea
xor
sbb
insb
mov
jecxz
mov
and
xor
imulb
jns
dec
or
inc
js
mov
jg
outsl
inc
stos
mov
lock
test
lock
push
adc
mov
repz
or
jno
and
fstpt
outsl
mov
jae
fstpl
lea
push
mov
shr
stos
pop
adc
dec
add
mov
add
xchg
insl
push
ljmp
dec
popf
push
lods
xlat
pop
mov
or
and
stos
inc
pop
push
rorl
mov
shlb
dec
jnp
sahf
cmp
inc
mov
dec
and
xchg
adc
pop
lret
lahf
int3
cld
loopne
xchg
dec
lahf
add
add
dec
js
adc
jno
in
aam
lea
scas
pop
jne
call
and
adcb
xchg
push
mov
jnp
ljmp
sbb
pop
and
sahf
xchg
xchg
push
daa
pop
pop
arpl
test
push
push
sti
jno
push
orl
imul
and
mov
pop
push
add
mov
inc
sub
shll
cld
add
fsubl
add
js
mov
xchg
popa
fsub
and
pop
pusha
or
movsl
roll
sub
stos
das
cltd
and
push
shl
sbb
lods
pop
push
xchg
sahf
push
dec
xor
add
or
sub
in
movsl
mov
cltd
cmp
push
sub
pop
addr16
add
pushf
push
cli
addl
push
jle
pop
dec
cwtl
push
push
cmp
sub
push
orl
mov
mov
and
outsb
aas
sahf
fstpl
pop
leave
js
je
cmp
test
cli
xor
fldt
or
lret
in
lods
push
cmc
xchg
movsb
cmp
ljmp
or
sub
sbb
decb
pop
mov
daa
cmc
cmp
xor
mov
add
add
nop
ja
shrl
push
into
push
mov
inc
jl
inc
push
adc
adc
lods
aad
divl
sbb
sub
dec
jne
xchg
nop
inc
lea
les
test
sbb
lods
xor
cmp
cmp
inc
aad
je
lcall
rolb
xor
les
or
pop
jl
dec
bound
cmp
mov
or
cmp
xor
add
in
sbb
dec
loopne
ret
and
js
adc
or
add
and
cmp
push
repnz
cmp
mov
nop
mov
mov
dec
or
push
pop
js
stos
stc
pop
rorl
je
cmp
stos
into
mov
sbb
je
test
inc
xor
push
shl
jnp
add
aad
in
enter
shrb
fs
or
notb
cmp
decl
ret
push
test
xchg
sub
sub
xor
push
push
mov
sub
sar
jne
mov
test
in
or
pushf
cmpsl
je
movzwl
push
loope
int
aas
gs
mov
ljmp
les
push
jp
adc
or
ds
cmp
xor
test
cmp
adc
sub
adc
add
pop
jb
push
jmp
inc
add
adc
daa
imul
les
lret
or
jecxz
repnz
jbe
loope
dec
and
or
sbb
xchg
jo
aad
mov
xchg
nop
ffreep
and
inc
enter
lret
push
push
xor
mov
xchg
call
in
aad
push
mov
mov
sub
iret
ror
xor
ss
shr
jl
add
mov
fsubs
sbb
ret
dec
add
mov
fsubr
lds
pop
adc
sbb
test
mov
addb
rorb
jo
les
push
insl
adc
call
sub
cld
fidivs
out
push
mov
call
aaa
sub
jmp
shrb
jp
mov
cmp
push
lock
pop
push
jne
pop
inc
movsl
fimuls
push
mov
adc
cltd
stos
repz
stos
rclb
pop
adc
and
sbb
and
jbe
and
jge
pusha
jmp
popa
leave
js
jns
or
mov
sub
popf
or
sub
xor
cmp
rcrl
fidivs
clc
shrb
xchg
add
mov
cmpsl
fistps
scas
icebp
test
add
fcomps
push
stos
mov
sar
jmp
mov
sarb
and
adc
add
adc
test
sbb
adc
pop
or
push
pop
jno
shrb
cwtl
mov
xchg
mov
and
mov
popa
iret
add
into
adc
push
sub
adc
xor
enter
inc
and
push
outsl
mov
pushl
dec
pop
sahf
cmp
je
inc
push
xor
pop
xchg
les
add
pop
inc
adc
mov
rclb
icebp
cli
pop
and
adc
je
sar
mov
out
xchg
add
stos
mov
stos
adc
lret
insl
dec
ss
daa
addb
mov
ljmp
insl
adc
test
jne
mov
inc
mov
pop
aaa
add
jne
mov
xchg
ljmp
insb
pusha
push
imul
rcrb
adc
fldenv
mov
inc
jo
cmpl
addr16
ret
or
cmp
mov
push
sbb
daa
ss
or
aam
add
std
pop
mov
sbb
add
out
pop
in
mov
adc
test
adc
and
pusha
push
dec
dec
into
mov
cmp
repnz
popf
xor
insl
mov
add
data16
in
xor
clc
hlt
call
fwait
mov
push
shrb
inc
hlt
mov
add
push
or
pop
and
adc
and
jg
jg
mov
outsl
jne
andb
sub
test
clc
cwtl
mov
push
xchg
adc
cltd
adc
sbb
xchg
shrb
push
and
push
add
push
shrl
cmpl
inc
insb
les
clc
lret
sbb
popf
xor
lock
lds
pop
push
inc
call
pop
test
push
fstpt
jno
loope
add
inc
and
push
aad
test
jmp
popl
addr16
push
mov
add
inc
ficompl
call
push
test
pop
push
into
adc
sub
shll
sub
sbb
cmp
test
enter
rorb
test
and
sub
or
je
enter
adc
adc
or
cmp
xchg
dec
jns
aaa
rolb
ret
in
pusha
or
xor
or
fs
push
sahf
dec
imul
mov
lock
xor
push
or
dec
mov
cs
mulps
mov
pop
cmpl
icebp
xchg
pop
and
ds
add
ds
adc
mov
das
hlt
push
xchg
xchg
xchg
cmpsb
ret
or
dec
or
jg
xlat
stos
lock
inc
dec
faddl
mov
cmp
cltd
dec
sbb
jp
xchg
push
dec
lock
push
pop
adc
rolb
cwtl
jnp
push
add
mov
jnp
and
shrl
push
es
add
xor
sbb
sub
hlt
push
je
mov
dec
sub
jns
outsb
das
xor
push
or
xor
enter
adcl
push
push
fisubrl
out
fld
out
loop
mov
sbb
inc
add
pop
inc
mov
cmp
iret
dec
sub
inc
and
add
leave
addl
pusha
arpl
jns
lahf
and
mov
mov
stos
sub
and
sbb
ds
loope
push
mov
js
cwtl
mov
inc
mov
push
sub
push
je
add
pop
sub
jb
push
fidivrl
xchg
leave
xor
je
add
push
push
cmp
bound
cmp
lcall
xchg
ret
sub
mov
in
sbb
test
and
jg
push
push
mov
adc
or
mov
push
adc
adcb
jns
lods
sbb
repz
inc
and
int
add
add
lods
movl
xchg
pop
add
aas
and
shrb
mov
mov
mov
das
xchg
pop
mov
in
jne
psrlw
sbb
test
push
pop
sbb
xor
xchg
inc
push
xchg
lock
push
push
ljmp
addl
aad
out
add
cmpsb
push
mov
sbb
or
scas
add
flds
les
addb
dec
lods
or
dec
out
sub
cmpsb
lock
inc
negl
sbb
push
loop
repnz
cmp
sahf
movsl
aas
add
mov
jo
push
out
and
push
inc
aas
loopne
xor
notb
jb
add
clc
push
jns
or
push
rcrb
aam
adc
imul
sbb
iret
cltd
xor
cmp
mov
mov
pop
movsb
outsl
int3
out
pop
dec
jns
mov
inc
push
call
sbb
sub
mov
insl
sbb
add
jno
push
xchg
pop
insb
xor
sub
js
mov
cltd
arpl
sbb
xchg
push
in
push
pushf
inc
popa
sti
dec
je
or
inc
dec
add
popf
je
inc
test
xchg
mov
cmp
add
sbb
sarb
push
or
pushl
mov
cmp
push
inc
cmp
or
push
setge
ds
push
add
into
repz
inc
push
dec
dec
pop
and
push
je
jbe
inc
ret
popa
sub
popa
jnp
cmp
dec
push
and
and
out
fisttpll
mov
rclb
mov
jmp
push
repnz
aas
xor
popa
adc
mov
sbb
mov
in
xchg
movsb
add
mov
fucomip
adc
in
add
lock
in
adc
add
cmp
pop
adc
inc
fildl
das
test
adc
inc
incl
add
cmpb
jne
mov
fmull
adc
and
adc
and
add
ret
xchg
push
cmp
inc
clc
int
or
out
sub
mov
sbb
cmpb
pop
loop
in
pop
fs
sbb
mov
ja
dec
xor
or
add
dec
loop
aaa
add
push
push
sbb
sbb
popf
xor
mov
pop
lret
jg
loop
push
sub
mov
mov
call
adc
shrb
sarb
fwait
adcb
or
mov
jne
push
int3
xchg
sbbb
and
cmp
jb
mov
movsb
push
test
cwtl
xchg
ret
sub
stos
test
in
dec
enter
xchg
mov
push
mov
es
int
mov
xor
mov
fcmove
int
lods
dec
mov
ficoml
in
jge
add
push
enter
daa
shrb
aaa
loopne
movsl
jbe
sbb
dec
xchg
mov
xor
cmp
in
xor
cmp
push
cwtl
xor
pop
les
xor
or
push
leave
cs
dec
pop
jno
pop
clc
dec
adc
cmp
or
imul
scas
loope
nop
mov
jecxz
jge
inc
push
pop
and
sbb
mov
jge
inc
inc
sub
es
mov
fidivrs
inc
sbb
inc
sub
cmp
sarb
mov
inc
and
mov
inc
mov
ret
or
call
and
push
push
cmp
sahf
push
scas
or
push
cmp
stc
shll
into
pop
xorb
lds
push
xchg
ja
add
into
lods
scas
test
cmp
inc
xchg
jl
popa
jg
jge
push
sub
js
or
test
loop
outsb
daa
andl
and
cmpsl
add
or
mov
add
jge
lods
mov
lock
xor
sub
inc
inc
into
adcb
test
cmp
add
pop
jae
push
xchg
mov
pmaxub
sub
sbb
jnp
lea
fwait
push
leave
inc
or
scas
test
sub
dec
adc
mov
mov
in
in
mov
adc
fs
fs
movsb
jb
add
add
sahf
adc
or
mov
sti
rorb
and
xorl
mov
in
arpl
aas
xor
adc
inc
or
les
mov
push
mov
je
icebp
je
orps
pop
aad
sub
push
lret
addr16
adc
call
mov
mov
sbb
dec
dec
bnd
add
pop
jo
pop
lret
sub
ljmp
inc
les
jne
add
and
or
sbb
mov
div
adc
push
sub
sar
inc
je
es
pop
xchg
push
xor
movsb
or
cmp
mov
push
addr16
cmp
lds
sub
mov
mov
sbb
and
xor
xor
sub
sub
sbb
neg
leave
push
shrl
push
push
mov
stc
shrb
xchg
dec
jecxz
sbb
sbb
xor
sbb
pop
pop
inc
add
and
pop
xchg
sbb
cmpsb
push
push
push
push
push
or
test
shll
aaa
push
push
mov
and
add
mull
push
ret
fwait
in
xor
ss
add
cmp
or
push
push
add
sbb
test
shrb
pop
fs
addl
arpl
into
mov
add
push
insb
adc
adc
pop
je
lret
inc
enter
xor
dec
xchg
mov
pop
mov
or
jmp
push
out
iret
xchg
rcrl
dec
rcrb
push
push
mov
ds
call
add
sti
cld
jmp
sub
xlat
fisubs
test
fs
mov
in
or
pusha
int
lock
call
fstps
jns
xor
cld
sbb
xor
js
stos
loope
push
xchg
adc
ja
dec
sbb
sbb
test
sbb
dec
call
fcomi
sbb
and
test
dec
sbb
cmc
adc
xor
fstps
iret
push
cmp
outsb
mov
shlb
sub
adc
sub
cwtl
xchg
cmp
in
push
cmpsl
or
add
xchg
pusha
mov
fwait
data16
push
push
adc
test
cwtl
ja
xor
cmp
xor
xor
and
std
inc
bnd
adc
jmp
add
test
ljmp
mov
outsb
movsl
mulb
push
xor
lret
and
xor
lock
pop
adc
push
jge
out
xor
push
xor
xor
add
adc
add
inc
cmp
jge
push
ds
xor
mov
cltd
aam
stos
adc
xor
aam
push
sub
pop
das
pushf
fidivrl
js
xchg
movl
iret
xchg
fs
pop
mov
push
test
xchg
es
jb
mov
sbb
inc
adc
or
inc
add
push
push
push
xchg
lahf
ret
or
std
popa
sbb
jo
inc
dec
push
sub
rorl
pop
lods
loope
or
or
mov
pop
xchg
mov
sub
sub
call
push
adc
add
loopne
fisttpl
inc
adc
xor
push
cmp
jo
pop
inc
hlt
sbb
outsl
mov
push
fwait
dec
repz
dec
pop
jg
pop
lret
dec
fisttps
xchg
push
inc
sahf
inc
dec
pop
fs
add
xchg
fs
mov
sub
pusha
add
test
pushf
inc
push
movsl
jg
add
sub
push
repnz
inc
movsb
push
mov
adc
mov
dec
xchg
mov
xlat
xor
sub
pop
push
shlb
int
in
aad
daa
lret
imul
filds
add
inc
mov
imul
pop
loop,pn
pop
stos
add
pop
mov
push
jp
mov
fcomps
lcall
push
jb
sbb
inc
icebp
repz
loope
jl
xlat
jmp
xchg
scas
sub
aaa
add
notl
hlt
test
dec
mov
or
dec
push
or
ss
idiv
xchg
inc
mov
out
jmp
mov
push
xlat
jmp
inc
mov
inc
inc
test
subb
push
push
loope
cld
stc
movsb
repnz
movsb
xchg
inc
add
dec
jmp
inc
adc
cmp
xor
add
adc
shll
ret
add
lock
inc
inc
jl
sbb
and
pusha
cwtl
fs
xor
mov
adc
loope
xor
xor
sbb
or
sbbl
mov
enter
xchg
aam
lret
icebp
addr16
jb
xor
in
fwait
xchg
and
mov
push
push
or
jo
push
push
cmpsb
and
fistl
push
loope
inc
add
pop
jmp
or
cmp
inc
sbbb
or
dec
and
mov
icebp
push
aas
sbb
dec
push
ret
ret
es
pop
and
xchg
xchg
inc
adc
and
xor
mov
loopne
fwait
cli
add
mov
ret
in
add
mov
xlat
and
mov
add
add
faddl
dec
inc
inc
push
push
or
mov
mov
or
push
mov
jnp
dec
mov
xchg
sbb
or
outsl
push
fiaddl
shll
cs
and
or
pop
or
cmpl
subb
out
push
push
insl
movsb
sbb
inc
popa
or
or
aam
dec
and
lock
sahf
xchg
xor
or
add
push
loopne
dec
cmp
xchg
lock
pop
test
push
xchg
add
mov
je
cmovns
rolb
inc
jg
enter
sar
mov
jg
outsb
les
daa
xchg
add
mov
cld
pusha
or
mov
dec
divl
pop
mov
je
lds
pop
push
or
add
adc
or
sbb
cmp
push
cld
dec
jnp
pop
xorl
push
mov
js
imul
add
jo
xchg
imul
pop
dec
loop
sub
movsl
lds
inc
mov
das
in
pop
or
add
cs
add
mov
popa
pusha
mov
pop
inc
insb
jmp
inc
mov
je
or
jno,pn
push
movsb
mov
or
adc
add
mov
push
sbb
iret
imul
cld
mov
dec
mov
dec
sub
xchg
pop
jp
or
lcall
xor
test
pop
loop
cltd
mov
xor
xor
mov
xor
mov
aaa
pop
mov
xor
mov
jbe
add
push
or
in
daa
xchg
mov
mul
mov
dec
mov
aas
rorl
call
inc
jnp
sti
jp
mov
lcall
mov
or
movsb
test
lods
xor
aam
test
mov
sub
mov
mov
mov
aas
push
adc
adc
jno
mov
adc
or
lea
rolb
mov
fisttps
lock
cmpsl
std
mov
sbb
xor
aad
cmp
adc
fs
or
cmp
ds
mov
rep
and
insl
xor
dec
mov
mov
inc
mov
ljmp
dec
ss
roll
pop
fimuls
out
aad
scas
inc
mov
nop
push
jl
lea
clc
lea
inc
test
mov
jg
adc
movsb
mov
push
call
push
fwait
adc
je
into
mov
adc
pop
fsubrs
aaa
jae
test
jae
ds
cmp
sbb
orb
inc
pop
mov
aam
push
inc
mov
aaa
call
cmp
stos
lods
adc
les
pop
xor
pop
out
adc
int
pop
pop
jns
jmp
push
aam
fxch
popa
pop
sub
roll
jbe
or
dec
and
shlb
daa
pusha
mov
push
cmp
push
cmc
arpl
sub
dec
aas
cmpsl
mov
mov
inc
fs
xchg
pop
and
xor
test
test
dec
rcrl
test
xor
cltd
pushf
xchg
jge
jge
out
test
popf
sarl
das
lock
and
add
dec
add
cld
inc
pop
push
insb
stos
sahf
or
out
adc
das
jp
push
push
push
int3
psraw
cmp
xchg
aad
sub
sbb
jl
add
mov
sbb
jb
pop
clc
adc
lcall
push
sub
imul
ret
inc
mov
xor
insl
pusha
dec
adc
xchg
scas
push
ds
xchg
cmpsl
popf
push
call
cmp
inc
jecxz
jbe
lea
adc
mov
push
outsb
dec
out
fisubrs
push
add
fmuls
aas
in
ret
add
ret
sarl
mov
xor
mov
xchg
enter
mov
add
mov
repnz
pushf
ret
bound
and
jge
mov
dec
mov
xchg
mov
stos
mov
inc
pusha
sbbl
sub
enter
inc
jb
nop
jecxz
dec
ss
adc
ficoms
cltd
jmp
jle
add
add
add
lock
pop
lret
xor
and
add
or
pop
lock
or
pop
adc
loop
sbb
rcll
and
push
roll
sub
loop
jbe
inc
cmp
mov
sub
sbb
add
scas
lock
cwtl
fsubrs
cltd
cmp
inc
shrb
aas
xchg
and
add
pop
je
out
adc
lahf
nop
push
push
js
test
and
push
and
repz
or
lea
test
test
xchg
js
in
or
roll
add
imul
sub
xor
cmpb
jge
cmp
adc
in
or
adc
negl
or
fdivrs
arpl
sti
je
xchg
ljmp
push
jge
and
xor
fs
movsb
ds
xchg
sbb
sbb
mov
jbe
push
adcb
push
es
add
jno
cmp
sbb
push
add
icebp
push
cmpb
aas
ss
dec
and
and
and
jo
popa
mov
int3
adc
lods
imul
inc
lds
add
xor
add
lea
sub
lods
adc
xlat
shr
adc
or
imul
loopne
sub
inc
adc
push
mov
push
dec
sub
adc
sbb
ja
push
pop
lret
daa
jo
lods
mov
shlb
loopne
xchg
repz
lods
add
out
test
les
jne
push
test
cli
test
jne
pop
mov
out
mov
mov
or
add
ss
mov
mov
xor
mov
mov
and
pop
adc
loopne
add
sub
scas
mov
and
cmp
les
xor
push
xchg
xchg
addr16
cmpsb
es
and
enter
data16
push
ss
shlb
mov
mov
js
addr16
xchg
cmpb
push
jmp
outsb
rorb
or
push
in
rcrb
repz
int3
push
loopne
and
cs
add
popa
sub
cmp
xchg
xor
pop
aam
cmp
and
and
add
mov
ds
push
push
test
xchg
add
sti
mov
add
adc
hlt
sub
sbb
pop
xchg
sbb
icebp
xchg
or
push
adcl
add
jo
inc
mov
imul
jl
adc
ds
add
paddsb
add
addb
int
sub
aas
gs
mov
and
dec
jge
push
insl
mov
lcall
xor
loopne
mov
mov
ret
or
std
test
test
inc
adc
pop
lret
jne
push
mov
sbbl
xchg
dec
scas
mov
out
cld
mov
lret
shlb
adc
in
xchg
xchg
add
add
into
lea
in
ds
xor
cld
lock
fs
mov
push
lds
add
dec
mov
mov
add
stos
loop
cmova
dec
jmp
xlat
xor
inc
adc
sub
jo
push
xor
sub
or
add
adcl
sub
push
fs
xchg
and
sub
mov
add
clc
call
into
push
sub
pop
dec
inc
add
push
fs
lea
push
js
push
cs
hlt
jne
jb
aaa
sub
jne
pop
aad
test
mov
in
sbb
mov
push
push
xchg
nop
dec
mov
sub
insb
jne
adc
push
jnp
push
push
fwait
pop
sbbl
stos
sbb
mov
and
pop
sub
leave
fwait
or
dec
test
arpl
and
and
pop
mov
mov
pusha
call
je
or
je
ret
dec
and
jg
loopne
mov
or
aaa
rol
adc
mov
insb
stos
mov
adc
xchg
sbb
mov
out
ficoms
adc
orl
mov
mov
lahf
mov
movb
mov
add
mov
ret
mov
sub
out
add
lea
sbb
inc
mov
out
mov
add
jl
dec
inc
cmp
fnstcw
movb
mov
mov
outsb
push
add
inc
stos
dec
lods
mov
jmp
sbb
leave
fldl
add
into
mov
arpl
mov
movsl
xchg
push
jnp
mov
jl
push
add
shlb
fstpt
incb
mov
adc
mov
sbb
xchg
jae
sbb
lock
out
add
dec
xchg
mov
pop
fisttpll
lret
jl
ret
decl
xlat
ret
adc
add
mov
sbb
cmp
sub
inc
cmp
dec
cmp
add
add
adc
das
xchg
xor
sub
jo
push
inc
lret
or
xlat
js
dec
pop
add
cld
leave
test
mov
mov
lea
faddl
sub
rorb
xor
dec
ret
das
push
je
shrb
dec
xor
add
outsb
jle
nop
fisubs
call
adc
mov
jmp
xchg
inc
jmp
call
sti
sub
add
add
ljmp
mov
shr
inc
mov
neg
shl
loope
xor
mov
adc
add
push
in
pop
in
data16
and
rorl
and
add
xor
jo
andb
pop
out
mov
jge
mov
xchg
rolb
push
jo
mov
push
dec
repnz
subl
mov
mov
add
mov
push
shl
fwait
add
jecxz
mov
dec
add
loope
jge
mov
dec
jmp
cmovbe
rorb
in
mov
in
out
idivb
xchg
push
mov
pop
inc
pop
add
inc
sub
add
mov
add
or
or
in
and
mov
aam
xor
out
shll
or
add
xor
call
mov
rorl
lcall
pop
push
lret
rclb
push
xchg
sbb
or
cmpsb
sbb
xor
dec
sbb
add
in
jns
mov
dec
repnz
test
rorb
pusha
clc
fwait
cmpb
int3
add
add
add
xchg
mov
stos
adc
stc
and
int
test
or
add
fdivrl
mov
mov
pop
lock
and
mov
stc
repnz
idiv
adc
mov
addb
test
popf
mov
mov
rclb
inc
shlb
or
cmp
add
jg
mov
pop
ds
mov
add
sub
add
xchg
xor
jbe
stos
jle
add
loopne
jmp
sbb
mov
or
push
incl
mov
xchg
xchg
or
icebp
icebp
add
jb
pusha
call
adc
int3
dec
loopne
mov
sbb
lods
adcl
inc
roll
les
mov
xchg
jg
sti
push
jo
sub
mov
shll
jl
enter
xchg
mov
cli
sub
sysret
inc
xor
mov
adc
push
or
lret
jge
push
pushf
inc
push
incb
pop
push
add
cmc
push
mov
inc
loopne
sbb
push
icebp
ret
fbld
movl
sub
ret
arpl
inc
push
pop
call
push
xchg
cmp
jg
pop
or
ret
shll
cld
mov
mov
ss
push
add
sarb
fadds
push
pop
movl
pop
add
call
dec
pop
inc
push
push
mov
inc
mov
jbe
data16
push
dec
mov
cmp
add
jo
fs
filds
push
ds
cld
loop
lock
and
and
lahf
adc
fisttpll
dec
pop
mov
data16
inc
mov
add
je
movsl
es
or
aad
adc
add
fisttpl
mov
sbb
mov
cmp
lods
mov
cmp
loopne
xor
out
or
jge
dec
in
sub
xor
add
loopne
jl
sbb
test
imul
popf
test
add
mov
pop
stc
lcall
push
and
dec
in
sbb
xchg
and
and
mov
inc
jo
mov
add
or
cmp
imul
mov
jns
sub
loop
leave
in
push
adc
fbstp
adcl
mov
movl
sbb
aas
xor
cltd
sbb
loop
or
jmp
mov
gs
jbe
cmpb
jne
popa
jge
out
cmp
pop
xorb
xor
aaa
movb
push
pop
lods
jo
outsl
lods
and
dec
mov
mov
lods
adc
adc
add
sbb
or
pop
mov
int
inc
xor
sbb
push
enter
dec
ret
mov
xor
push
inc
es
cld
faddp
push
or
ret
push
pusha
push
and
arpl
cli
or
xor
push
xchg
icebp
addl
clc
jg
hlt
cmp
jl
cmp
jle
xor
stos
into
xchg
leave
jp
lret
int3
add
dec
mov
arpl
or
jmp
ret
or
fsubrp
dec
or
clc
add
cs
xsaves
pop
pop
or
aad
je
adc
xor
sub
nop
xor
jns
faddp
cld
incl
das
pop
inc
les
push
lock
inc
sahf
jo
out
or
mov
sub
xor
stos
rol
les
jae
jae
xchg
movl
adcl
cmp
inc
add
cmp
shlb
jne
cmc
rorl
sbbl
mov
cmp
inc
or
lock
jge
je
jge
and
and
sarl
adc
add
adc
jl
daa
or
xorl
shrb
lds
add
dec
pop
movb
xor
iret
fadds
jb
sbb
addr16
clc
jne
mov
sub
add
pop
shlb
out
mov
or
inc
mov
pop
lods
inc
int3
sar
xchg
icebp
enter
insb
cmp
and
sbb
xchg
inc
mov
sub
cli
enter
decb
in
xor
mov
jmp
xchg
adc
jae
mov
aas
or
popf
sbb
pop
dec
aas
cmpb
movsl
inc
mov
add
rclb
push
or
sbb
sbb
mov
or
inc
mov
nop
add
pop
pop
mov
sbb
or
jg
adc
add
imul
fimuls
dec
incl
xor
test
push
sbb
push
cmp
sub
into
or
incl
xor
imul
dec
cmp
add
sbb
cmp
cmpsl
ret
or
bound
inc
xchg
add
inc
stos
imulb
ficoms
add
lea
and
outsb
jg
mov
mov
cmp
popa
scas
mov
lods
sbb
or
pop
rcrb
or
lock
mov
xchg
in
shlb
push
sub
jg
ja
mov
mov
push
rorl
and
push
jmp
cmp
aas
jl
std
jae
loop
dec
test
iret
nop
adc
xchg
or
test
movsl
stos
push
clc
sub
arpl
dec
mov
ja
xor
jmp
lock
and
les
fs
xchg
cltd
jne
mov
xor
adc
lea
outsb
xchg
pop
dec
jns
or
push
pusha
xchg
or
inc
hlt
xor
test
or
push
xchg
pop
mov
pop
cli
sbb
add
movsb
out
sti
adc
mov
mov
add
clc
cmp
jl
test
stos
or
jo
push
lock
cmp
jge
sbb
cmp
jno
stc
test
jb
mov
sti
lcall
sti
push
sbb
mov
addr16
pop
lods
push
push
pop
push
or
adc
dec
das
mov
and
ret
in
inc
adc
jmp
sbbl
pop
xchg
addr16
lret
push
xchg
iret
mov
push
or
pop
push
pusha
fs
push
cltd
insb
jo
jmp
es
test
mov
mov
nop
xchg
dec
sub
pop
xchg
cwtl
pushf
mov
movsb
test
test
mov
stos
xor
aas
push
push
push
xchg
stos
or
xor
aam
fsubr
jp
mov
ret
add
inc
dec
repz
cmp
fwait
or
psrlw
xchg
test
cmpsb
push
pop
xor
adc
shrb
dec
ljmp
leave
arpl
jne
jnp
test
movsb
rcll
push
sbb
adc
add
jo
jle
dec
enter
or
or
mov
adc
xchg
filds
inc
fcomps
xor
jns
adc
shlb
out
roll
data16
fcoml
push
push
adc
test
cld
pop
lods
push
out
mov
mov
and
and
inc
orl
mov
sbb
xor
shlb
mov
ljmp
push
jg
jnp
jae
xchg
dec
gs
in
inc
xor
add
nop
or
out
fcoms
push
sub
movl
inc
push
or
jo
or
cmp
int
pop
daa
push
enter
adc
and
adc
fists
shlb
lret
mov
add
or
inc
je
push
movsl
or
pop
leave
adc
adc
cld
sbb
sbb
inc
lahf
rcrl
inc
int3
in
dec
add
adc
adc
mov
and
add
lock
gs
jl
movsl
push
mov
pop
xor
pop
stos
xchg
rcrb
ret
add
pop
add
int3
xor
push
xchg
je
add
inc
dec
jecxz
and
jb
cmp
inc
dec
pop
aaa
dec
sub
call
cltd
sbb
fisubl
cltd
xor
push
cmp
xchg
fiadds
and
add
add
jecxz
xchg
inc
mov
rcl
rorb
fwait
mov
fs
adc
mov
xchg
push
fstps
fists
je
xor
cmpb
adcl
test
test
adc
hlt
sbb
shl
inc
pop
sbb
push
dec
cli
and
cli
or
jbe
in
out
in
sub
jae
test
rclb
loopne
push
jl
or
sub
xor
jo
shrb
je
in
or
mov
inc
cmp
out
or
stc
mov
xchg
in
test
jnp
jnp
add
das
cmp
je
cmp
cmp
aas
jne
adc
sbb
or
je
push
cmpsl
mov
dec
adc
clc
xchg
pop
arpl
leave
push
mov
push
arpl
inc
jb
xchg
add
orl
test
dec
pop
insl
xor
loopne
push
je
add
aaa
in
jb
or
shl
pop
add
addb
nop
push
lcall
or
xchg
in
repz
sti
jae
in
add
inc
xchg
mov
xor
mov
pop
frstor
push
sarb
and
dec
xchg
jns
adc
mov
js
adc
inc
add
jns
cmp
out
lods
aad
jmp
mov
hlt
mov
jnp
sub
sub
pop
mov
outsl
pop
cmp
cmp
ja
push
add
fsubrl
fs
jne
mov
icebp
pop
mov
jecxz
fcoms
xchg
pop
inc
test
push
sub
push
jo
faddl
lock
addr16
cmovg
mov
pop
add
in
jae
xchg
add
push
sarl
push
bnd
rorb
pop
add
sbbb
aam
movsl
popa
mov
add
add
mov
mov
out
dec
add
add
add
push
pop
dec
or
sbb
testl
push
sub
and
outsl
or
xor
and
push
push
sete
sub
push
ljmp
dec
test
sbb
scas
test
int3
dec
inc
add
xor
mov
sbb
adc
add
xlat
ljmp
fs
fcoms
fisttpll
inc
shl
jg
push
push
xor
mov
add
ds
xor
and
sub
cmc
or
cmpsb
or
add
pop
sub
loop
xor
fwait
dec
cmovae
xchg
adc
dec
mov
movl
mov
push
sub
or
and
add
and
jne
and
enter
mov
clc
loope
push
lahf
cltd
or
test
lock
inc
inc
sbb
adc
movsb
or
clc
daa
lods
pop
mov
mov
push
cmp
push
push
adc
xchg
mov
push
or
pop
pop
in
or
push
test
or
orb
cmp
jne
dec
ss
and
xor
push
sub
pop
pop
xchg
stos
add
adc
adc
push
jl
fadds
les
jne
and
adc
stos
iret
fmuls
cmp
jnp
js
scas
sub
adc
inc
or
pusha
inc
xor
mov
xchg
ss
rclb
lcall
and
inc
xor
mov
dec
gs
mov
pop
inc
pop
or
fimuls
fcomps
je
inc
sbb
and
mov
push
or
adcb
push
mov
repnz
dec
clc
int
dec
jo
in
jo,pn
sbb
pop
xor
adc
jno
call
push
insl
rorb
or
xor
into
iret
sbbb
jbe
scas
xor
les
inc
sub
clc
js
push
xchg
stos
add
mov
push
mov
icebp
adc
add
sysenter
xor
cmp
lea
mov
adc
add
xor
fisttps
or
cltd
rclb
sbb
jne
mov
sub
sub
lahf
icebp
cli
mov
and
and
mov
dec
push
cld
xor
gs
inc
stos
ror
sbb
sub
repz
addb
jne
pop
pop
xchg
inc
dec
cmp
andb
add
rorb
fadd
fidivl
add
addb
clc
add
adc
shll
inc
push
scas
cmp
int
lods
xchg
jnp
xchg
nop
orl
lds
sbb
loopne
clc
aam
dec
adc
add
xchg
icebp
mov
ret
pop
add
cmp
daa
movsl
add
arpl
or
xchg
ret
dec
mov
inc
jae
cmp
cmp
push
add
popf
add
cmovno
or
and
roll
inc
aas
into
cmp
and
sahf
pushf
cmpsb
or
mov
jl
jno
sbb
xor
push
pop
jg
mov
sbb
test
ret
or
pop
in
sahf
sub
push
mov
pop
mov
sub
lcall
mov
lahf
or
ret
aad
add
xchg
lods
jne
inc
out
adc
mov
mov
mov
in
and
jae
push
sbbl
and
adc
dec
or
xchg
das
mov
dec
aas
push
lret
int3
mov
push
sub
lea
adc
sbb
sbb
cmpsb
adc
xor
sbb
xchg
mov
adc
xor
insb
pushf
mov
adc
dec
adc
mov
pop
jo
or
je
xlat
push
mov
insb
and
test
cmp
push
pop
in
jmp
cmc
xlat
cmp
call
sub
mov
dec
xor
inc
scas
icebp
cmp
jge
push
in
in
sbb
int
inc
loopne
cmp
dec
clc
add
push
push
or
push
sbb
cld
bound
add
push
out
int3
and
ljmp
push
and
ds
jmp
cwtl
or
adc
or
push
and
repnz
adc
lds
adc
mov
inc
mov
sbb
dec
sub
push
icebp
rcll
sbb
jnp
inc
daa
jne
in
in
pop
pop
jo
pop
sbb
les
and
add
mov
mov
mov
insl
and
cmp
push
push
clc
cmp
rclb
es
and
aam
or
inc
loopne
imul
adc
nop
xchg
pop
push
cmpsl
jns
pop
mov
push
xchg
addb
in
mov
or
adc
bound
add
lea
gs
dec
push
call
mov
sub
sub
test
mov
xchg
dec
movsl
xor
dec
xor
adc
push
enter
add
arpl
dec
cmp
push
or
sbb
jbe
mov
pop
sbb
cmp
and
xor
in
push
sub
adc
adc
in
mov
or
add
push
fs
add
mov
call
mov
jl
insb
insb
leave
icebp
inc
inc
push
jns
sahf
sbb
mov
push
jnp
push
dec
add
and
addr16
xchg
aam
xor
in
add
popf
ror
pop
adc
mov
adc
cmp
insb
push
add
xchg
mov
push
test
fists
pushf
dec
and
or
mov
add
test
out
add
push
lret
add
loopne
push
add
aaa
jg
inc
mov
mov
fdivr
pusha
nop
fxch
or
in
dec
cltd
inc
mov
pop
xor
sbb
hlt
fwait
sti
add
add
mov
enter
add
sub
push
cmp
lock
loopne
push
xor
mov
adc
rclb
and
enter
popf
add
and
and
add
add
xor
or
ret
fcmovnb
add
xor
jmp
jl
sbb
popf
jl
scas
sbb
jns
pop
sub
xchg
push
cmp
xor
lahf
add
dec
or
xor
or
sarl
push
add
lea
loop
fcompl
sub
andl
mov
sahf
fwait
xchg
adcb
loop
jbe
jge
push
scas
xor
add
inc
test
mov
dec
scas
adc
push
adc
and
adc
popa
pop
push
pop
sub
push
sub
dec
adc
test
sbb
dec
mov
adc
mov
sub
into
mov
call
dec
les
rolb
push
jmp
dec
push
inc
dec
inc
or
mov
xchg
fcoml
mov
xchg
push
int3
enter
xchg
pop
mov
shll
in
fadd
pushf
lret
aam
cltd
xor
mov
mov
xchg
sub
add
ret
pop
mov
add
loope
mov
ret
inc
adc
in
daa
stc
xchg
cld
in
mov
ret
lea
cmp
mov
jp
adc
xchg
jne
adc
aas
inc
dec
add
int
hlt
sarb
addb
into
adc
les
fdivl
mov
cmovge
add
xor
dec
add
and
cmp
mov
lcall
sahf
mov
lahf
mov
in
std
shl
adc
pop
add
addr16
jg
adc
add
pop
add
pop
or
addb
fmuls
loope
mov
xor
mov
stos
inc
js
sahf
ds
dec
inc
arpl
pop
popa
pop
or
cmp
mov
add
sahf
pop
imul
aam
jbe
sbb
fistps
ficomps
pop
adc
pop
hlt
mov
fs
test
test
repnz
jae
or
fdivrs
enter
jl
dec
push
or
enter
cmp
add
xor
sbb
sbb
and
sbb
cmp
push
dec
or
sbb
cs
cmpsl
mov
mov
or
or
or
sti
or
adc
pop
and
or
in
adc
inc
ret
int3
push
sti
call
lock
addr16
cwtl
call
pop
rcll
add
pusha
inc
mov
cmp
add
rorl
aas
xor
fiaddl
dec
aas
cmp
shr
xor
ljmp
sbb
mov
xorl
cmp
out
cmp
cmpsl
ror
lock
adc
dec
popf
loope
mov
test
sarl
fsub
or
test
pop
xor
rcll
ret
loopne
push
je
jecxz
inc
inc
adc
inc
sub
push
cmp
dec
test
xor
sub
daa
add
mov
pop
cs
pusha
push
mov
pop
cmp
imul
sbb
lds
mov
in
xchg
mov
aad
clc
iret
mov
sbb
sbb
clc
jne
sbb
test
cmpsb
adc
inc
push
inc
inc
pushf
push
mov
mov
stos
sub
inc
sbb
sbb
push
mov
or
sti
adc
loope
mov
call
jbe
das
call
mov
call
mov
in
loopne
jb
add
cmpsb
cmp
xor
in
outsb
push
sbb
cmp
or
dec
inc
mov
add
mov
add
loopne
adc
inc
jb
sbb
push
push
iret
jnp
add
xchg
cmp
out
lahf
add
lock
loope
jmp
sahf
pop
cmpsb
mov
mov
icebp
add
inc
mov
xorb
dec
cwtl
xor
jo
sbb
xchg
push
push
push
or
sbb
fstpt
shll
mov
sbb
or
and
out
pop
add
and
push
adcb
push
jmp
iret
loop
push
and
push
rcr
loopne
mov
mov
sbbb
inc
or
daa
cs
lret
pop
je
mov
test
jo
mov
push
dec
or
loope
repnz
mov
push
inc
sub
or
mov
fmuls
mov
outsb
scas
es
jmp
mov
mov
or
mov
movb
xorl
pop
lahf
ud2
push
pop
cmp
pushf
daa
cltd
sbb
mov
or
mov
sbbl
pop
sbb
mov
push
call
cltd
sbb
loopne
fnstcw
in
in
es
inc
cmc
add
add
add
adc
inc
mov
add
add
xorb
bound
movsb
pop
clc
jmp
nop
sbb
pop
cmp
jo
or
add
inc
mov
outsl
or
or
enter
inc
xchg
mov
xor
les
xor
pop
inc
and
mov
cld
dec
and
xchg
js
dec
push
loope
adc
imul
jmp
inc
and
loope
dec
xor
lock
and
fadd
mov
adc
clc
xchg
or
dec
xchg
cmp
les
bound
push
adc
jbe
lret
sbb
inc
or
dec
pushf
ljmp
sub
and
test
sbb
sbb
stos
das
mov
xor
jg
clc
sub
jne
mov
sbb
or
je
and
sbb
push
pop
subb
lock
jmp
nop
mov
in
add
mov
adc
lret
jmp
add
std
jg
inc
mov
mov
in
add
push
dec
push
ss
push
ds
cwtl
cld
pop
je
add
in
and
mov
sbb
jle
icebp
sub
jo
inc
push
rcrl
dec
or
mov
shll
or
and
test
fists
cmp
dec
add
fsubrs
and
popa
dec
lods
stos
xlat
cmovno
cmc
cmp
dec
or
movsl
add
test
std
xor
xchg
xor
push
push
push
push
lret
add
push
cs
test
adc
orl
xor
sub
cltd
or
push
lcall
push
lahf
or
lods
divl
nop
subl
mov
dec
push
and
jo
dec
inc
dec
sbb
inc
mov
cmp
fsts
add
cli
sbb
mul
sub
inc
jmp
mov
inc
out
mov
jb
subl
pop
test
in
mov
nop
adc
hlt
pop
or
ret
pop
pop
pop
cmp
cmpsl
sbb
pusha
dec
dec
xchg
jl
cltd
push
add
mov
or
mov
push
xor
inc
xor
jb
sub
or
shll
in
xor
push
xchg
movups
inc
leave
sub
pop
and
or
and
jae
clc
loope
scas
cmp
sub
lods
jnp
and
and
xor
xchg
pop
enter
or
test
out
jb
aad
push
add
jl
mov
fs
fistl
inc
sub
shl
sbbl
or
mov
mov
je
fnstsw
add
sub
dec
cmp
rcrl
js
xchg
inc
mov
loop
pop
sarb
call
fldcw
fsubs
fidivrs
xor
mov
repz
or
into
or
pop
or
jo
mov
adc
ja
lea
mov
dec
cmc
pop
push
out
adc
jns
pop
js
and
dec
mov
lea
mov
mov
jo
jg
inc
mov
mov
add
sbb
xchg
adc
add
sub
push
dec
loopne
dec
out
mov
cmp
adc
xor
aad
out
fisttpll
and
stos
nop
or
jo
rcrb
out
inc
pop
nop
xor
in
in
cmpsb
test
int
inc
mov
mov
repz
mov
pop
mov
movsl
xor
js
push
dec
mov
mov
gs
mov
mov
in
mov
add
and
lds
mov
sarl
mov
push
push
inc
inc
sub
jge
push
push
xchg
nop
or
xor
js
movsl
push
xor
in
pop
mov
ja
rclb
roll
xor
or
adc
orb
ret
ret
or
aas
xchg
push
shll
mov
sbb
sbb
xchg
pop
jle
inc
or
add
outsb
arpl
or
pop
or
dec
sbb
aad
mov
xor
adc
mov
loopne
add
pop
insb
aas
cmp
inc
adc
adc
jg
add
push
pop
gs
jg
mov
nop
movl
cs
fdivrl
cmpsb
fs
xchg
cld
and
adc
leave
orb
dec
dec
leave
orb
orb
sub
orb
aam
xchg
xchg
dec
sub
add
add
out
jae
nop
dec
or
jmp
cmp
pop
jl
test
cwtl
fisttps
xchg
xor
xor
or
mov
cmp
pop
mov
mov
outsl
rcr
or
ret
andl
gs
test
test
call
sbb
xor
aaa
mov
add
cld
push
pusha
jmp
xor
sub
fstpl
cmp
call
je
call
push
add
inc
inc
andb
adc
fwait
insb
outsb
nop
pop
enter
outsb
jne
add
orl
pop
adc
adc
dec
fdivrl
les
mov
jbe
sbb
push
mov
mov
dec
mov
xchg
enter
mov
je
and
mov
xor
xchg
push
mov
push
sub
adc
add
negl
test
outsl
shll
pop
stos
add
mov
inc
mov
notb
in
sti
test
les
inc
mov
ficoms
rorb
test
xchg
xchg
call
lock
push
adcb
dec
imul
sub
sub
popa
jl
xor
sbb
and
pusha
ficoml
xor
mov
insl
sbb
cs
push
sbb
mov
insb
loop
dec
or
or
movsb
sbb
loopne
mov
in
sbb
ret
mov
add
ret
inc
scas
pusha
inc
xchg
ficoml
push
push
lcall
add
and
xor
shrl
lock
idivl
test
xor
jl
sbb
adc
and
push
inc
movsl
shll
xchg
add
and
rorb
pop
cld
pop
pop
xor
mov
inc
and
cmp
or
cmp
or
sarl
loope
ret
adc
push
sahf
fisttpl
int3
es
iret
mov
insb
and
mov
pop
mov
sub
pop
insl
sbb
or
sbb
mov
cld
lock
in
addr16
lods
add
jne
mov
inc
jp
sbb
movsl
movsl
addb
loope
fcoml
mov
push
movsl
lcall
dec
jle
pusha
lock
loope
fs
cmp
je
jecxz
pop
sub
xor
sbb
cmp
and
jecxz
push
dec
jo
pusha
popf
fdivl
inc
dec
loopne
pop
jg
stc
icebp
xor
mov
ficoms
test
xchg
out
je
test
sub
cs
std
adc
jge
mov
mov
inc
les
inc
mov
fwait
les
add
mov
add
fisubrs
adcb
inc
insl
ljmp
or
or
mov
fs
movsl
mov
into
shl
inc
fcomps
jnp
pop
das
dec
rcll
sbb
jo
xor
add
xchg
mov
jge
lock
mov
sub
jle
push
cmpsl
sub
adc
mov
scas
lock
push
fwait
cmp
and
sbb
movsl
jns
stc
adc
push
or
test
jnp
add
and
in
push
inc
in
loopne
in
or
insb
sbbb
cmp
sbb
jecxz
dec
lock
dec
popf
ss
or
inc
inc
les
cmp
inc
or
orb
mov
mov
aas
add
sub
push
add
xor
data16
sbb
or
imul
and
mov
jne
jecxz
repz
xchg
sbb
or
xor
and
sbb
xor
push
addb
int3
add
sub
push
inc
pop
xor
test
jp
dec
push
lea
push
les
or
imul
rcll
enter
or
or
out
push
or
xor
jp
fcoml
and
cmp
dec
pshufw
push
inc
xchg
ss
dec
and
mov
jmp
movb
bound
inc
lods
std
cmp
sub
push
mov
jnp
push
pop
xchg
jl
push
mov
adc
popl
faddl
and
out
mov
xchg
jl
ja
je
jbe
je
addb
cmp
jno
and
out
sbb
fs
push
rcll
jbe
push
jne
rcll
dec
lods
loopne
or
mov
mov
pop
add
in
pop
mov
in
out
inc
inc
inc
inc
scas
and
pop
adc
adc
ljmp
mov
sbb
and
pop
pop
adc
sbb
test
add
inc
lret
xor
int3
mov
nop
addb
lcall
loopne
and
cmp
cmp
push
or
push
mov
mov
ret
lods
movsb
shr
xor
push
in
pusha
and
mov
andl
and
mov
inc
aaa
std
sub
loop
pop
cld
xor
push
sub
scas
add
xor
sub
adc
cmp
mov
add
mov
inc
add
call
outsb
mov
or
push
adc
xchg
dec
jne
gs
and
xchg
nop
imul
dec
mov
or
prefetcht2
mov
add
aaa
adc
pop
inc
jbe
adc
add
sub
shrb
cmp
inc
aad
or
mov
sub
je
sbb
push
sbb
add
push
ficoms
bound
cmc
inc
je
xor
loopne
pusha
or
addr16
ds
xor
dec
inc
insb
add
xor
pop
nop
pop
or
or
rclb
repnz
adc
aam
inc
add
add
xor
add
mov
pushf
test
fneni(8087
inc
sbb
les
push
and
jl
pop
jg
push
stos
add
and
lock
in
adc
jae
repz
pop
les
pop
cli
inc
cmp
fcompl
push
je
jmp
rcr
sbb
popf
pop
aad
or
testl
or
mov
fldl
cltd
jb
dec
in
repnz
add
xchg
pop
enter
dec
mov
fsubr
xchg
lret
add
loopne
in
sbb
fcomp
nop
out
mov
call
sbb
fucomi
call
in
dec
push
mov
sub
mov
mov
jnp
shll
adc
cmp
shl
sarl
ja
mov
mov
in
pusha
xchg
pusha
cld
or
jo
and
outsb
and
scas
imul
jbe
jns
mov
mov
les
jmp
inc
lock
pusha
sub
pop
xchg
cmp
cmp
jno
imul
add
je
or
sub
dec
loop
dec
ret
sub
adc
push
mov
push
bound
test
mov
adc
pmulhuw
imul
mov
inc
push
mov
leave
or
pop
xchg
sub
cmp
in
add
add
insb
xor
in
out
push
jo
add
mov
cmp
push
call
mov
pop
and
js
cli
jno
inc
rclb
inc
and
test
xor
lea
push
xor
pop
mov
aam
je
sbb
pmulhuw
pop
jo
frstor
xchg
push
push
jne
inc
push
push
add
or
pusha
pop
and
or
inc
fs
ljmp
adc
and
xor
or
mov
mov
movsl
push
and
push
out
mov
and
push
cmpsb
sbb
js
push
add
xchg
inc
push
cli
add
push
or
adc
cltd
xor
push
lea
xchg
int3
call
and
cmp
popa
cld
or
scas
and
sub
add
in
nop
xor
incl
std
pop
loop
push
push
add
loope
or
shlb
rolb
enter
subl
push
dec
cmp
jae
inc
add
jo
mov
push
add
mov
loopne
bound
repnz
lock
jmp
jle
pop
jne
push
mov
loopne
xor
inc
jmp
sbb
jbe
inc
sbb
adc
je
in
imul
pop
inc
scas
fnstsw
addl
add
in
loop
rclb
idiv
push
and
dec
mov
loope
ret
sbb
and
adc
fcomp
add
retw
mov
or
xor
test
cmp
mov
and
mov
clc
or
rorl
jecxz
insl
int3
add
mov
xchg
mov
arpl
fsub
and
push
and
sbb
or
aaa
pop
dec
cmp
xchg
mov
pushf
cmp
in
add
in
push
pop
scas
mov
dec
enter
jo
decl
cmpsb
push
sbbb
stos
add
sbbb
shrb
jbe
and
out
sub
xor
out
mov
sbb
jb
je
repnz
movsl
imul
out
lahf
fistps
loop
fiadds
in
push
in
lret
dec
lods
in
call
xchg
call
leave
stos
cmc
addr16
and
add
dec
cmp
jbe
adc
ja
adc
sbb
call
xor
push
mov
cmp
xlat
adc
cmc
lods
jmp
addb
test
add
sub
cwtl
fnsave
icebp
out
add
out
in
shrb
xor
sub
incb
push
loopne
sarl
or
repnz
scas
mov
mov
pop
xchg
add
js
cmpsb
rolb
add
add
mov
lds
push
xchg
adc
mov
inc
mov
jl
test
cld
aam
call
dec
pop
jo
mov
add
pop
mull
mov
call
rcrl
mov
dec
add
push
in
dec
add
inc
xchg
lret
xor
xor
adc
or
sti
and
add
add
jecxz
sbb
dec
dec
aam
imulb
aas
sub
je
or
push
cmp
popa
pop
int3
sub
add
lods
das
or
sbb
adc
cld
sub
test
inc
aam
mov
insb
jecxz
mov
imull
imul
je
scas
jl
inc
jl
push
cmp
mov
lret
push
movsl
jp
je
adc
addb
push
mov
movb
test
mov
cmp
adcb
ficompl
pop
or
jmp
insl
test
pop
sub
roll
and
and
fdivl
add
shl
adc
stos
and
pop
pop
mov
or
push
hlt
out
jge
ss
dec
mov
mov
pushf
xchg
dec
sbb
arpl
jmp
repnz
je
dec
sbb
outsb
inc
and
push
xor
lahf
fcoms
shll
xchg
es
stc
cltd
outsl
and
jl
xchg
add
push
push
and
sbb
in
and
or
push
lods
xchg
sbb
pop
and
sub
pop
xchg
leave
addr16
jnp
in
xchg
mov
and
cmp
sbb
jl
jle
and
lea
push
sub
adc
cltd
xor
push
sub
mov
fs
ds
cwtl
in
mov
xor
push
nop
add
repnz
cmp
adc
pop
cmp
xchg
or
pop
add
mov
push
or
or
mov
push
xor
mov
mov
loopne
daa
leave
out
dec
sbb
push
pusha
cwtl
add
and
in
sti
or
testl
add
cli
ror
inc
ds
inc
or
dec
pop
xor
dec
adc
xchg
addr16
adc
mov
or
dec
jmp
jb
or
xchg
push
mov
push
pop
cmpb
outsl
and
outsl
adc
movsl
add
insb
dec
mov
andb
and
xor
adc
add
adc
cli
sti
lret
and
xor
push
pop
js
xor
lods
inc
sbb
sbb
xchg
pop
sbb
mov
xor
xchg
xor
adc
inc
pushf
int3
scas
icebp
and
in
ja
and
jmp
pop
inc
jbe
fiaddl
ss
ret
sub
add
push
jns
pop
xchg
popa
push
push
daa
fs
mov
and
mov
dec
loopne
rorb
rcr
mov
xor
jae
xlat
jge
cmp
daa
and
mov
push
mov
xchg
out
dec
and
mov
in
or
les
push
or
jp
add
push
cs
and
adc
add
sub
or
push
nop
sbb
mov
fsubp
iret
fmull
or
ret
jo
fcom
ret
push
add
xchg
out
adc
add
jnp
and
sub
and
loop
push
test
call
sbb
dec
in
sbb
push
xlat
dec
es
fisttps
dec
pop
jg
xchg
cmc
hlt
test
or
adc
inc
mov
mov
push
ds
and
or
fisubl
mov
push
add
dec
add
add
in
pop
sarb
inc
hlt
pop
sub
xorl
xchg
mov
sbb
sbb
xchg
arpl
adc
or
dec
nop
leave
inc
es
leave
mov
fsubl
xchg
push
cmpsb
and
les
lds
int
cltd
mov
xchg
cltd
xor
push
or
adc
out
pusha
lods
lods
aam
push
popa
xor
and
aas
sbb
push
shlb
mov
cmp
jecxz
and
add
stos
sti
std
lcall
mov
xor
shrl
inc
hlt
inc
dec
and
pop
cltd
pop
push
adc
push
jl
push
dec
cs
pop
fldenv
add
cmpsl
add
jb
cmp
clc
mov
lock
in
pop
mov
push
add
jmp
test
je
fs
or
hlt
lahf
adc
add
mov
insb
sub
xor
push
cltd
pop
mov
xor
imul
sbb
sub
sbb
and
dec
push
and
call
and
add
or
push
and
xlat
adc
mov
lahf
sbb
cmp
in
and
jne
fisttpl
jbe
mov
imul
pop
adc
adc
or
xchg
and
mov
adc
sbb
cmp
addl
je
cmpsb
shll
mov
push
ror
xor
and
add
roll
pop
test
ds
cmp
movsb
push
pop
popf
adc
push
out
imul
add
mov
sbb
adc
inc
push
sar
aam
rorl
stos
loop
xor
adc
mov
or
add
ret
ficompl
movb
adc
lea
pushl
sbbl
mov
and
sbb
sbbb
in
push
inc
xchg
js
enter
or
sub
adc
rorl
popa
inc
and
add
jbe
and
adc
incl
lods
cltd
es
and
fimuls
leave
inc
add
and
push
in
inc
dec
inc
inc
and
pop
lods
lods
inc
jb
sbb
sahf
mov
std
cmp
stos
inc
mov
je
add
mul
jl
rcrb
xor
lcall
orb
xchg
imul
and
dec
mov
out
sbb
int3
mov
jnp
insb
jmp
shrl
inc
mov
xchg
mov
pusha
nop
xchg
or
jp
push
sahf
lods
push
xor
sub
jle
push
mov
push
add
xchg
or
fsubrl
and
sub
and
xchg
and
inc
mov
xlat
or
mov
sub
cmp
lods
xor
dec
jnp
sbb
adc
stc
push
cmp
mov
out
ds
sub
add
dec
push
iret
andb
lea
jl
or
xchg
inc
add
sub
icebp
push
inc
pusha
sbb
mov
xchg
and
insl
dec
sbb
addb
aad
push
push
xor
iret
xor
loope
push
and
xor
in
lods
dec
sahf
testl
adc
or
sbb
add
mov
aaa
fldcw
push
inc
add
mov
pop
popa
mov
xor
xor
sub
js
pop
repz
arpl
fidivrl
mov
mov
outsl
aad
movsb
aaa
sub
jnp
add
jae
pop
pop
and
insb
adc
lahf
and
outsb
test
mov
xlat
push
adc
stc
mov
lea
jmp
inc
cmp
shrb
into
push
dec
dec
add
movsl
loopne
movsb
and
shlb
inc
mov
sbb
into
orl
and
in
add
dec
xor
mov
xor
in
mov
jae
sbb
insb
cli
and
cmpb
andl
push
or
enter
movsb
int
jl
dec
lods
sbb
pop
fs
fcomps
mov
mov
push
mov
and
repnz
mov
inc
push
push
dec
gs
add
xor
or
fs
add
cmp
cmp
fcompl
mov
and
leave
push
test
loopne
testb
adc
sub
push
orb
pusha
pop
ljmp
cmp
pop
divb
jo
dec
xor
jmp
sbb
orl
cmp
adcb
cld
andl
and
sets
nop
dec
clc
ljmp
jbe
or
in
out
ret
mov
sbb
add
in
orl
addb
jle
cli
shlb
addl
inc
pop
inc
popf
push
jecxz
into
out
ds
cmpl
mov
cld
outsl
add
or
dec
add
mov
fs
adc
and
clc
mov
mov
cmp
adc
into
addl
pop
leave
xchg
loopne
les
adc
fadds
xchg
jecxz
or
or
sub
push
or
mov
movb
cs
pop
or
mov
mov
inc
add
and
jae
push
mov
add
jmp
or
push
adc
sbb
mov
dec
jo
add
mov
cmp
pop
xchg
xchg
rcrb
push
inc
pop
inc
cmp
mov
fs
add
out
ret
add
xchg
rol
sbb
pop
rolb
dec
aaa
mov
pop
loop
shrb
or
dec
jbe
hlt
sbb
inc
hlt
test
sub
dec
inc
inc
or
ror
or
mov
sbb
sar
dec
cmp
cltd
inc
clc
mov
lret
adc
les
punpckhdq
mov
sahf
sbb
sbb
gs
stos
mov
push
push
mov
or
lock
inc
orb
mov
or
and
xor
adc
dec
enter
and
push
pusha
xor
inc
sub
jns
jo
and
xor
mov
rorb
or
push
adc
xor
sub
mov
add
mov
push
push
xor
ljmp
mov
sbb
lahf
sub
push
and
rolb
sbb
pop
dec
inc
mov
test
lock
inc
cmp
dec
out
mov
pop
insb
jecxz
ss
roll
test
ret
or
rorb
xchg
add
addr16
xchg
pop
adc
call
push
pop
cld
mov
lods
inc
sbb
cmp
jns
sub
sbb
divl
stc
or
nop
cltd
inc
mov
push
xor
ja
dec
gs
cmp
aam
xor
les
jae
rolb
out
inc
daa
cmp
push
push
push
idivb
add
jl
stc
add
pop
shlb
sbb
inc
in
pop
sbb
ret
or
cmp
imul
jno
out
and
lcall
or
iret
xchg
inc
pop
popa
pushf
rclb
sbb
lret
add
add
add
lods
rclb
push
or
xor
mov
test
mov
xchg
aas
repnz
add
push
jne
stos
inc
xchg
adc
sub
dec
fsubr
add
sbb
jno
pop
mov
mov
movsb
popf
lods
cmp
lock
addl
add
jno
adcb
jmp
adc
out
push
and
push
loopne
pusha
jmp
test
lock
or
testl
test
cmp
add
jbe
and
add
or
mov
xchg
add
inc
add
sbb
outsb
jo
pop
jnp
das
loop
scas
jle
in
rcl
into
imul
add
ds
xor
fadds
cmc
add
jnp
repnz
repnz
pusha
insb
bound
mov
or
lret
stos
pop
mov
xor
rolb
mov
adc
pop
xorl
add
mov
and
rclb
add
mov
pop
movsb
mov
xchg
popa
xchg
bound
add
in
and
add
cmp
ss
xor
mov
insl
inc
nop
push
insb
sbb
cmp
shlb
cmovp
ffree
add
adc
fcomps
mov
push
mov
cmpsb
add
rcrl
pop
in
and
movl
sub
mov
adc
jae
add
enter
inc
test
je
sbb
ljmp
jae
dec
imul
mov
dec
movb
push
add
sbb
insl
jecxz
jno
fildl
fidivl
sub
insb
jo
xor
xor
jle,pt
adc
fnstenv
adc
ficompl
jp
sbb
shrl
lahf
push
mov
int
notl
add
fcom
mov
sub
pop
fcmove
xchg
jbe
cmp
sbb
push
jo
jne
lds
iret
push
enter
mov
std
lods
adc
mov
sub
adc
xor
adcl
push
or
add
cmc
push
shrb
cmp
push
in
hlt
pop
cmp
negl
sub
adc
xorb
and
sbb
sbb
je
and
push
sbb
mov
ret
add
jnp
insb
insb
pop
dec
cmp
jl
call
add
push
inc
sbb
aam
jecxz
add
sbb
push
or
hlt
jle
push
mov
pop
mov
mov
cmp
cmp
cltd
nop
out
dec
dec
jmp
mov
aad
inc
pop
sub
xchg
je
cmp
mov
xor
iret
push
dec
dec
push
sbb
pop
jb
shrb
ret
push
daa
adc
add
and
out
icebp
adc
sub
xor
dec
mov
subl
sbb
mov
or
xor
adc
add
ret
enter
test
les
fbld
pop
fisubrl
xor
push
fcmovne
dec
sbb
dec
or
pop
inc
push
add
push
and
clc
jae
incb
lods
pop
push
into
or
into
int
fldenv
test
sahf
and
sub
fwait
inc
inc
xor
inc
test
dec
pop
xchg
xorb
add
push
lcall
dec
or
sub
hlt
outsb
dec
sbb
lea
inc
cmp
adc
push
add
and
fsubrl
xor
mov
inc
sbb
xchg
mov
dec
fildll
ret
orl
jb
shlb
dec
and
inc
mov
jge
rolb
loope
cld
inc
add
mov
push
andb
lea
clts
mov
movsb
adcb
or
cmp
clc
loope
add
adc
cmpsl
mov
aas
sbb
xor
mov
daa
sti
mov
cmp
push
jne
pop
xor
shrl
add
lea
jo
inc
into
clc
js
sub
or
popa
jl
andb
xor
pop
mov
xorb
insb
inc
or
mov
stos
or
es
adc
push
dec
cmp
imulb
outsb
xor
in
fistl
mov
xchg
lods
movb
sbb
xor
arpl
insb
jae
mov
or
pushf
fdivrp
insb
or
xor
outsb
aam
xor
popa
popf
add
pop
fildll
rorb
pushf
push
in
in
arpl
cmp
sub
sbb
mov
or
fadds
fisttpl
pop
jo
jnp
inc
push
inc
cmp
into
ret
ds
in
adcb
incl
lods
cmpb
jne
mov
xchg
shrb
cmp
cwtl
and
mov
cmp
lea
sahf
xchg
and
sub
or
sub
add
test
call
adc
je
les
push
test
repz
xchg
ret
sub
les
inc
mov
dec
inc
ret
xchg
mov
es
adc
cld
pushl
push
inc
push
nop
lods
or
adc
mov
add
fcompl
inc
in
adcl
sub
mov
jge
cmp
sbb
dec
fprem
dec
sub
movsb
adc
lret
pop
dec
addr16
lock
xchg
add
enter
sub
push
mov
add
frstor
jo
and
aam
push
inc
xchg
es
jo
add
xor
loopne
fadd
add
or
bound
rorb
cmp
testb
sbb
add
rcrl
dec
lods
loopne
divl
dec
loop
jmp
push
sub
pushl
pop
sub
jl
or
adc
inc
lock
outsb
ret
sbb
pop
xchg
adc
push
arpl
mov
and
mov
mov
call
fadds
cmp
out
pop
push
or
add
aas
sbb
pushl
add
adc
fs
xor
test
xchg
cmp
and
filds
dec
mov
xchg
xchg
and
addl
jmp
mov
jnp
inc
or
pushf
icebp
leave
stos
lock
cmp
addl
adc
jb
lock
stos
mov
pop
sub
lret
mov
xchg
mov
add
mov
adcb
sub
pop
mov
jmp
fnstsw
lock
push
hlt
mov
dec
pop
push
or
inc
and
push
or
or
sbb
mov
or
push
adc
inc
cmpsl
loope,pn
push
push
mov
bound
into
icebp
inc
inc
shrl
shlb
testb
fs
add
loopne
shr
lahf
inc
cmp
jne
in
jne
pop
push
iret
movsb
and
in
std
je
mov
cltd
movsb
cmp
mov
ret
cmp
xor
push
dec
add
mov
add
ficoms
js
sbb
xor
in
push
sbb
push
rclb
mov
mov
shll
jbe
jge
je
pop
push
insl
pop
mov
or
rclb
cmp
ss
jmp
push
stos
cmp
insl
pop
test
xchg
push
cmpb
sahf
sbb
int
add
adc
sbb
pop
mov
orl
mov
adc
jno
out
stos
mov
mov
lea
dec
lock
xchg
xor
in
adc
mov
orb
push
inc
jl
sbb
or
cmp
mov
xlat
test
andl
movsl
mov
and
jnp
pop
or
dec
pop
cmp
inc
or
jb
fwait
push
fcompl
jmp
lods
xchg
push
jmp
push
and
push
sub
testb
mov
pop
pop
and
mov
push
addl
in
repnz
add
std
pop
add
lock
mov
rorb
fs
ja
mov
add
movl
cmp
subb
fcomps
push
js
out
popa
xor
push
add
jns
rcl
into
mov
ja
and
xchg
mov
and
in
popf
and
xchg
pop
test
mov
in
or
rcll
mov
rcl
inc
dec
mov
xchg
xor
int3
pop
inc
mov
mov
test
clc
add
cmp
adcl
push
fdivrl
add
daa
add
repz
jmp
xchg
in
cmp
sahf
fs
insb
daa
add
add
mov
mov
pop
nop
pop
push
xchg
jp
push
shl
je
aam
dec
adc
ud1
pop
fdivrs
flds
int3
add
xchg
push
inc
push
mov
dec
sbb
arpl
add
ret
jno
loopne
pop
sub
pop
add
jo
xchg
popf
and
dec
xchg
out
lods
xchg
adc
adc
mov
outsb
add
in
adc
les
maskmovq
imull
inc
mov
movsl
lea
adc
lret
subb
push
or
rcrb
movl
mov
cmp
mov
push
cmp
adc
push
add
jmp
cmpsb
addl
imul
dec
enter
adc
pushf
mov
call
inc
pop
cld
loopne
jbe
and
or
clc
imul
add
dec
or
lock
or
movsl
mov
rcrb
leave
mov
daa
adc
xchg
sahf
or
shrl
cmp
jns
and
pop
add
lahf
mov
mov
dec
mov
lock
mov
inc
stos
imul
add
ja
push
xor
or
add
add
aas
movsb
adc
mov
mov
jno
jns
inc
or
stos
mov
push
adc
leave
mov
popf
lods
cmp
dec
push
aas
jle
jl
xorl
jl
cmp
jne
loope
and
mov
cmp
je
shl
add
test
cmp
add
push
add
fwait
inc
cld
ss
push
inc
mov
fs
mov
clc
rclb
int3
mov
adc
or
mov
sarb
and
call
arpl
outsl
add
or
or
add
dec
cs
stos
dec
inc
and
pop
lea
mov
xor
push
rcl
pusha
addb
sub
push
hlt
je
popl
mov
shll
jo
push
or
mov
or
rcll
mov
mov
mov
or
iret
and
imul
push
sahf
out
jmp
mov
or
jmp
fiaddl
inc
jecxz
inc
mov
adc
adc
scas
push
mov
idiv
dec
mov
pushf
add
cmp
and
inc
sahf
ret
xlat
sub
fdivr
and
int
mov
jnp
push
sub
test
and
cmp
movsl
mov
jmp
mov
adc
sub
in
add
sbb
and
iret
add
add
add
das
sbb
call
mov
shr
pop
xchg
xchg
rol
dec
enter
and
pop
imul
roll
mov
or
xchg
push
sbb
subb
pop
push
mov
nop
loopne
cltd
fs
mov
push
stc
or
fdivl
and
dec
xchg
or
sti
shrb
mov
test
add
lods
push
adc
inc
sub
and
pop
pop
jae
cmpsb
cltd
pop
int
mov
mov
hlt
xor
dec
xor
mov
insb
mov
mov
inc
jns
std
pop
pop
imul
mov
adc
mov
nop
in
add
cmp
and
test
adc
cs
std
xor
pop
or
jb
xchg
jmp
cmp
pop
cltd
xlat
adc
adc
and
cld
fadds
jne
pop
stc
adc
lahf
je
test
mov
popa
mov
jne
rorb
mov
cmp
push
rclb
xchg
jnp
jnp
sub
inc
rorb
fldl
mov
mov
mov
imul
call
sbb
jmp
xor
js
lret
push
and
daa
sbbl
divl
aas
pop
ret
les
push
inc
aad
inc
adc
sbb
mov
sbb
dec
adc
jns
out
adc
push
jo
clc
jl
jmp
ljmp
add
movsb
cld
aam
xor
xchg
mov
in
xchg
js
lock
push
loope
in
popf
add
and
sbb
inc
inc
push
xchg
and
pop
out
sbb
out
cmp
pop
push
pop
dec
repnz
dec
dec
inc
xchg
std
scas
daa
push
call
lods
int3
movsb
inc
add
orl
xlat
push
xor
adc
and
mov
ss
ret
xor
push
jbe
es
mov
mov
jle
ret
mov
dec
bound
and
movsl
xchg
add
daa
mov
push
stos
mov
subb
xor
jmp
xor
jne
fildll
jg
sbb
dec
outsl
pop
add
roll
jb
ret
ljmp
lea
sub
imul
adc
pop
fs
enter
add
push
jle
adc
push
aaa
pushl
pusha
mov
fs
dec
insl
movsb
mov
adc
xchg
sub
repnz
scas
or
imul
shlb
mov
push
cmp
jns
pop
into
xorl
enter
int3
xor
or
inc
pop
testb
lahf
dec
and
stc
loop
dec
dec
add
mov
dec
icebp
xchg
in
mov
push
xchg
pop
sub
insl
xchg
push
cmp
sbb
adc
sti
push
inc
jo
pusha
jg
adc
jbe
pop
pop
adc
or
sbb
and
and
xor
aaa
enter
ret
dec
jl
cmp
arpl
fnstcw
or
or
push
lret
and
xor
sub
xor
cmp
dec
push
movsl
xor
pop
sbb
insl
or
or
xor
in
xchg
dec
mov
sbb
cmp
sbb
fsubrl
and
shrb
xor
and
cmpsb
dec
clc
jb
movb
mov
jmp
imul
imul
nop
popf
jae
adc
fcmove
mov
loope
je
cmp
shlb
pop
or
rcrl
add
ret
push
adc
inc
xchg
add
or
mov
push
mov
and
call
push
mov
jge
lods
jle
add
rclb
out
push
addb
xor
push
shll
fcoml
mov
and
or
mov
sti
push
push
jmp
adc
mov
addr16
pop
pushf
add
inc
scas
add
inc
lods
sahf
negb
adc
das
cmpb
jne
subb
xchg
shlb
cwtl
in
and
add
sbb
insb
jp
push
sahf
std
out
pop
push
shrb
xor
jno
xor
inc
push
xor
or
pop
lods
and
nopl
into
jo
dec
ss
mov
add
sahf
jle
pop
js
xchg
mov
mov
cmp
mov
inc
xlat
adc
dec
push
jns
cmp
in
sub
mov
repnz
adc
mov
sub
push
sub
add
jo
mov
sbb
and
arpl
mov
sbb
push
pop
lock
inc
add
xor
jo
unpcklps
mov
sbb
fmull
inc
jo
add
pusha
daa
in
pusha
lods
sbb
xchg
push
sbb
xlat
in
push
sbbl
jnp
repz
dec
sub
jnp
sbb
add
pop
cwtl
sarb
scas
mov
fldl
lea
push
push
xchg
mov
rcll
jno
dec
cmp
mov
ret
push
cmp
push
jb
cli
sbb
fistps
aam
insl
mov
flds
rclb
adc
dec
pop
or
pop
cmp
xchg
xor
mov
lock
or
cwtl
inc
sub
jne
mov
inc
pop
and
test
sbb
sub
push
pushf
or
xchg
mov
cmp
addr16
scas
lcall
jecxz
push
orb
cmp
xor
add
loop
lret
mov
shll
roll
scas
mov
mov
sbbl
ja
rolb
or
lea
or
xchg
dec
clc
add
jg
push
xchg
cmp
add
mov
ds
cmp
cmpl
nop
adc
adc
mov
je
dec
addb
std
aaa
sub
movsb
cmp
lods
loope
push
push
shlb
inc
jl
or
pop
and
leave
mov
pop
mov
imul
mov
xchg
rcr
and
fcoms
add
fistpll
rcrl
das
test
push
jno
iret
pop
jae
das
pop
stos
loope
imul
sbb
shrb
xchg
loope
xlat
mov
xchg
mov
inc
or
xor
fbld
xorb
xchg
ret
out
cmp
nop
add
repnz
push
or
xor
fwait
sbb
inc
add
adc
xchg
icebp
movl
pusha
lock
inc
and
fiaddl
jbe
fimuls
dec
mov
xlat
int
repz
push
push
mov
pop
inc
pop
flds
aam
cmp
sbb
xor
and
pusha
nop
pushf
xor
cmp
xlat
adc
or
add
or
mov
pop
or
dec
cmpb
push
es
sub
test
leave
lds
pop
add
xchg
adc
mulb
mov
sbb
jp
rcrb
sbb
push
add
or
aas
ret
or
sbbb
sbb
add
sbb
sbb
push
pop
pop
inc
sbb
cmp
or
iret
push
adc
inc
jnp
push
sub
sbb
jl
or
xor
push
xor
jge
rorl
movsb
jg
inc
dec
sbb
mov
fisttps
mov
and
adc
mov
and
in
mov
jb
popf
pop
pop
lahf
es
xor
push
pop
jp
sub
push
xchg
or
lock
mov
cmp
sbb
cmp
ret
aad
sbb
add
cmpsl
inc
lds
pop
sbb
icebp
jl
cs
inc
mov
bswap
gs
xor
sub
xchg
push
dec
mov
push
push
aad
outsb
pusha
les
add
scas
in
add
cld
inc
jb
adc
js
incl
add
jnp
mov
adc
add
add
or
pop
rcrl
cmpsb
xlat
adc
les
cs
mov
jb
or
pop
adc
add
pop
enter
repnz
mov
sti
daa
outsl
push
imul
movsb
cmp
pop
leave
cltd
push
adc
leave
enter
call
test
add
out
cmpb
adc
test
xor
xor
push
sbbb
jns
rcrb
iret
pop
adc
cmp
rcll
cmp
push
xchg
inc
int
mov
cmp
jno
pop
cs
sub
adc
or
sub
sub
and
lret
jne
pop
dec
adc
and
ss
or
add
arpl
or
xchg
and
fldt
cmc
add
cld
fimull
notb
jg
push
add
cmp
pop
xchg
push
outsl
jle
call
fcompl
dec
pop
fwait
sbb
in
or
sub
sbb
push
xchg
out
hlt
sbb
flds
icebp
cwtl
sub
add
repz
dec
add
aam
rorl
xor
nop
mov
inc
pop
and
push
cmpsl
add
mov
gs
imul
and
imul
test
sub
sub
fwait
xchg
and
aam
xchg
mov
or
pop
jb
in
adc
or
scas
adc
add
dec
jne
add
shrl
or
sub
sbb
lock
add
dec
inc
jg
orb
add
dec
adc
fstpl
dec
pop
insl
jmp
inc
jg
pop
xor
mov
iret
je
cmp
dec
xchg
xlat
jmp
dec
or
xor
inc
cmc
xlat
inc
xchg
in
cmp
xor
test
dec
sub
xor
and
push
sub
sub
mov
ds
ss
xor
cmp
cltd
add
pop
xor
jge
inc
dec
cmp
jb
pop
or
cmp
mov
pop
clc
sub
shlb
cmp
mov
push
ds
ret
rcll
mov
adc
jbe
push
and
inc
cmc
stos
jae
and
cmp
adc
call
add
nop
add
mov
hlt
sbb
cmp
add
inc
cmpsb
sbb
jl
push
push
pop
sub
js
bound
sub
mov
fmuls
inc
dec
adc
push
rcrl
inc
dec
sahf
data16
adc
add
mov
xchg
cmp
mov
xor
mov
sub
or
ds
push
push
add
call
adc
xchg
rorb
and
jl
shlb
movsl
push
xchg
out
jne
jl
add
jg
xor
push
push
sahf
pop
movsl
roll
push
scas
push
into
push
arpl
js
es
mov
add
mov
xor
cwtl
sbb
inc
ljmp
xor
shl
test
dec
sar
pop
or
orl
xor
pop
into
cli
mov
andl
filds
test
adc
imul
das
add
gs
cld
mov
lods
sub
or
xor
inc
or
mov
xchg
cmc
sbb
lret
sub
repz
es
jmp
sbb
mov
daa
sub
push
sbbl
ret
rorl
mov
das
add
scas
add
xlat
add
dec
sar
xchg
mov
dec
cmp
stos
xchg
fmull
rol
push
fnstsw
in
fwait
xchg
stc
xor
sub
inc
es
push
in
xchg
push
mov
jg
inc
ret
sub
mov
push
loope
and
lock
adc
mov
xlat
add
shrb
add
push
push
dec
orl
push
testb
sub
movsb
and
in
push
push
sti
and
adc
sub
rol
dec
mov
jns
std
cmpl
pusha
mov
push
inc
mov
sub
dec
push
out
je
mov
imul
je
jbe
jmp
sbb
cmp
add
rolb
leave
sub
mov
mov
insb
cmpsl
cmp
mov
jmp
or
sub
daa
loop
sbb
mov
pusha
push
sub
add
sar
mov
stos
add
mov
movl
test
popa
sbb
adc
sbb
sbb
sub
adc
sbb
xchg
pop
jb
loope
add
adc
pop
outsb
fistps
add
andb
cmp
xchg
mov
rcll
outsb
mov
cmp
into
aam
mov
leave
jmp
test
pop
dec
shlb
xlat
sti
mov
sar
mov
dec
loopne
cmpsl
mov
and
mov
ret
subb
mov
mov
mov
cmpb
pushf
sti
lods
add
and
orb
in
push
mov
cmp
test
jle
faddl
dec
push
lcall
mov
iret
push
fistpll
push
sbb
dec
xor
fistl
inc
xchg
adc
pushf
pop
or
or
jl
xchg
push
push
add
jae
cmp
and
add
mov
mov
sbb
in
dec
je
aas
cs
lcall
les
ffreep
xchg
test
jmp
push
xchg
inc
inc
cmp
movsl
nop
or
fs
cmp
inc
movsl
jo
push
clc
ret
mov
jnp
xorl
aam
mov
mov
repnz
or
daa
in
xchg
mov
les
mov
inc
out
mov
scas
or
push
lock
test
insb
mov
adc
and
inc
test
add
stos
pop
inc
pop
jmp
mov
push
pop
ljmp
lea
jge
mov
mov
add
push
cmc
lods
sarl
add
rcrl
add
push
mov
mov
enter
dec
mov
pop
int
jb
icebp
pop
pop
nop
sti
mov
mov
popf
jno
xchg
pop
inc
sbb
stos
nop
cmp
adc
ss
add
and
in
xor
fcompl
pop
shll
or
adcb
sbb
stos
mov
mov
cmpb
xchg
ret
loop
and
dec
or
or
pop
inc
inc
sbb
std
mov
mov
jae
jg
dec
dec
lea
mov
es
adcb
lods
sub
add
push
dec
nop
jbe
clc
jle
movsl
daa
cmp
and
pop
jne
mov
xchg
dec
add
scas
jbe
enter
bound
and
jl
lret
push
adc
pop
hlt
jge
data16
cmp
sbb
pop
mov
in
and
mov
pop
js
mov
cmc
ret
or
ss
mov
mov
sbb
iret
sbb
sti
pop
and
adc
les
mov
pusha
xlat
scas
movsl
xchg
mov
lds
adc
mov
add
outsb
aad
int
movsl
iret
adc
nop
xor
mov
imul
mov
cwtl
dec
sbbb
mov
cmp
mov
mov
rclb
inc
je
scas
dec
cmp
outsl
cmpb
or
jecxz
mov
ljmp
orb
sbb
cmp
cld
sub
or
lea
and
or
rorb
aad
or
aad
add
aaa
icebp
adc
int
add
dec
cmp
jae
pop
add
incl
lea
fbld
cltd
push
je
cld
or
adc
dec
inc
inc
imul
mov
scas
xchg
xor
or
and
mov
cmp
divb
mov
add
sbb
mov
or
pop
or
add
and
jbe
sub
nop
add
ror
enter
add
mov
dec
imul
mov
xchg
mov
xchg
adc
adcb
roll
xchg
fs
push
cmp
dec
inc
inc
push
cmp
nop
cmp
xor
cmp
nop
inc
sub
and
nop
inc
push
sbb
mov
push
cmp
add
jbe
sub
cmp
adc
inc
lods
inc
push
pop
bound
clc
or
mov
add
aaa
mov
out
or
shlb
andl
pcmpgtb
pop
mov
enter
mov
or
cmc
sbb
mov
xchg
add
push
dec
sub
in
sti
cmp
les
add
cmp
fisubl
jno
lea
cmpsl
or
jmp
inc
mov
inc
ret
adc
inc
cmp
and
leave
lea
jp
jne
fstpt
shr
xchg
add
xchg
je
aaa
inc
add
sbb
mov
ret
imul
dec
push
xchg
enter
mov
nop
add
pmulhuw
push
push
setg
pusha
mov
ja
lcall
cmc
or
sub
loopne
scas
pop
bound
dec
pop
adc
pop
adc
sub
xor
stos
movsl
das
loope
ret
jne
in
add
rclb
dec
dec
adc
inc
andb
jnp
mov
jae
lds
subb
lret
push
fiadds
lea
pop
xor
lods
rcll
xchg
sbbl
push
out
test
pop
test
orl
pop
movsb
mov
orl
lcall
mov
add
aaa
mov
jle
rolb
push
inc
xchg
and
pop
sub
in
rorb
xor
outsl
xchg
pop
dec
and
dec
js
loope
out
jnp
call
push
add
pushl
sub
xor
or
int3
jmp
mov
or
mov
movsl
lods
cs
adc
in
cwtl
in
cwtl
push
push
mov
data16
adc
sbb
icebp
cmpl
or
add
pop
adc
xchg
jns,pn
pop
and
sbb
pop
and
push
push
push
lcall
ds
mov
sbb
add
inc
mov
fimuls
es
repz
jmp
nop
xchg
jg
mov
clc
adc
push
or
cs
inc
in
iret
test
sub
push
int
pop
insb
addb
push
inc
inc
pop
add
jp
push
stos
or
push
add
test
in
movb
rcl
adc
xchg
cmc
inc
shrl
sbb
sbb
sub
inc
sub
rcrb
ss
push
fcom
xchg
rcr
dec
xchg
push
xchg
es
aad
cld
iret
in
cmpl
fdivrl
jb
sti
inc
or
adc
or
movhps
dec
ret
cmpsb
rolb
ds
jbe
adc
inc
mov
inc
loopne
jecxz
add
mov
inc
cltd
lahf
inc
sub
mov
leave
call
imul
call
ljmp
ss
or
sti
loop
and
jmp
out
mov
sbb
pop
mov
and
mov
pop
xorl
ret
rclb
sbb
dec
mov
pop
or
sbb
add
daa
xchg
adc
sbb
cmp
push
sub
in
jb
xor
xor
xchg
lret
leave
or
or
pop
dec
cs
inc
or
or
dec
push
aam
pop
push
sub
insb
mov
add
add
stos
or
je
mov
insb
or
jae
das
mov
mov
add
int3
rcl
xchg
or
loopne
mov
xchg
sub
mov
jle
xchg
sub
mov
xchg
cmp
dec
cltd
jnp
inc
pop
add
nop
mov
mov
arpl
dec
aam
add
lock
fs
aam
add
sub
mov
dec
add
scas
or
push
sub
pop
xor
out
inc
or
push
mov
dec
add
inc
int3
sub
nop
lret
inc
or
inc
push
xchg
xchg
mov
adc
or
call
cmpl
sbb
mov
test
sbb
pop
cld
push
dec
or
pop
clc
adc
clc
sub
xor
rclb
cmpsl
rcl
ret
int
mov
cmp
or
aad
or
jl
pop
stos
and
outsb
push
mov
mov
and
mov
xor
or
or
mov
mov
hlt
add
adc
rol
or
or
repnz
test
orl
mov
leave
pop
pop
arpl
adcl
ds
movsl
ja
fcomps
inc
lods
adc
xor
or
insb
nop
or
or
aad
das
add
or
inc
js
xchg
push
sbb
inc
iret
leave
cmp
sub
push
jmp
rclb
addr16
cmp
orl
test
mov
xor
cwtl
sbb
xchg
or
xor
out
jo
dec
clc
cs
push
pop
cs
or
dec
adc
mov
sub
outsl
mov
xadd
out
xor
into
cmpsl
or
xchg
sarl
jbe
orl
pop
sbb
es
rorb
rcrl
dec
push
or
nop
sub
xchg
ja
cwtl
push
or
cmp
sub
xchg
xlat
shrb
aad
sbb
dec
inc
data16
ss
and
mov
push
inc
xchg
daa
enter
in
imul
push
ljmp
sar
dec
iret
out
push
push
push
jp
aad
mov
push
add
xchg
xchg
sub
pop
nop
lcall
add
sub
inc
add
xchg
orl
mov
call
call
insb
adc
test
and
mov
inc
test
or
dec
add
jbe
shrl
or
inc
cmp
cli
icebp
or
adc
add
mov
xor
pop
push
push
popa
cmp
sbb
xchg
in
leave
lret
push
push
or
jno
push
add
in
adcb
loope
mov
sbb
add
pop
dec
fsubl
std
mov
repnz
mov
add
mov
test
sbbb
dec
mov
add
or
sbb
pop
nop
inc
test
roll
into
dec
aad
ja
or
xchg
pcmpeqd
mov
mov
push
lds
mov
mov
add
jmp
movsb
sbb
sub
push
add
mov
stos
inc
xchg
dec
sub
xchg
cmpsl
add
and
loope
ret
mov
push
mov
dec
cmp
xchg
iret
test
xlat
shlb
adc
add
inc
xorb
add
push
push
push
cmpb
cltd
jbe
addb
dec
test
sub
mov
xchg
add
jl
dec
jl
bound
fucomi
adc
jbe
xchg
inc
rolb
mov
or
add
call
adc
smsw
rcll
lock
cmp
add
inc
or
lret
fcmovu
notl
xchg
jno
or
pop
clc
cmpb
out
inc
push
repz
test
push
adcb
lret
cmp
sbbl
and
jge
jle
add
roll
cmp
or
and
add
jmp
mov
lods
or
xchg
fldenv
lock
sbb
mov
and
jns
adc
and
cwtl
inc
and
push
out
jl
iret
add
scas
arpl
mov
rclb
push
cs
outsl
sahf
xor
test
mov
shll
cmp
pop
scas
aam
add
mov
aam
out
addl
sbb
aam
fsubrs
push
or
or
subb
pop
or
and
add
jl
xchg
or
arpl
outsb
pop
inc
inc
enter
loope
sbb
loope
test
push
in
sub
or
bound
inc
and
mov
xor
dec
and
mul
fs
sarb
xchg
jnp
cwtl
outsb
sbb
fimull
jo
outsb
pusha
mov
aam
fs
sbb
jl
icebp
inc
repnz
in
push
mov
inc
shlb
push
or
push
loopne
jnp
orw
pop
mov
cwtl
ror
cmp
lods
cwtl
pop
or
lcall
std
insb
dec
aaa
out
gs
or
and
mov
dec
lea
shrb
in
in
pop
aaa
jne
orl
loop
dec
or
mov
sbb
aaa
xor
stac
cmp
leave
and
add
mov
or
xchg
or
stos
fsin
mov
icebp
lods
add
pop
mov
push
pop
xor
or
xchg
cltd
cwtl
pop
sub
mov
lret
aam
add
push
push
jo
sarl
pop
push
add
jne
adc
dec
lock
je
push
pop
ror
test
jg
inc
mov
or
jg
outsl
fcoms
rclb
inc
dec
and
shlb
cltd
lret
mov
or
push
dec
pop
mov
lock
sub
adc
mov
stos
xchg
sbb
in
pop
push
sbb
std
and
pushl
lea
mov
and
and
mov
stc
xorl
cld
lea
pop
lea
test
mov
fstpt
ret
jne
pop
inc
js
sbb
call
mov
add
or
adc
jmp
inc
jne
mov
fiadds
add
jle
cwtl
lock
outsb
push
cmp
movl
mov
push
gs
imul
push
ret
pop
movsl
push
psadbw
or
cvtdq2ps
cld
xchg
xchg
daa
xchg
clc
dec
nop
fs
xchg
or
sub
add
mov
push
push
stos
push
loope
sub
lods
dec
mov
pop
mov
mov
jns
js
mov
or
add
je
fwait
cmpb
call
push
pop
pop
insb
gs
dec
inc
push
and
and
mov
jo
mov
je
sub
ret
sbb
cmpsb
adc
adc
mov
lods
sbb
push
ds
enter
jae
cmp
mov
ret
sbb
xor
and
inc
ss
sar
js
call
sub
push
pop
inc
wrmsr
sbb
push
mov
ds
out
sarb
sub
jo
push
dec
pop
lret
push
imul
and
or
sbb
fcompl
adc
or
and
sbb
sub
adc
cmpb
pop
push
push
std
xchg
push
inc
in
in
sbb
in
enter
sbb
mov
and
pop
sub
push
mov
daa
movsb
inc
inc
mov
fisttpl
into
and
mov
push
xor
mov
inc
push
addb
lret
add
ss
je
cmp
inc
xchg
inc
push
push
int3
push
bound
enter
mov
add
and
inc
mov
cs
popf
lock
outsl
mov
lds
lds
loopne
push
push
hlt
pop
or
add
inc
cld
dec
sbb
xchg
xchg
repnz
jae
add
mov
lods
pushf
adc
add
jne
pushf
cmp
fstps
and
mov
sub
dec
inc
int3
push
mov
inc
fnstsw
push
jae
pop
ror
movl
sub
insb
and
in
jo
je
add
clc
cmp
movsl
adc
inc
mov
lret
pop
add
imul
xor
loopne
jecxz
fwait
popa
and
hlt
test
mov
push
push
add
sub
cmpsl
or
pusha
stc
add
lea
adc
xchg
add
cwtl
fs
lea
scas
xchg
inc
call
inc
das
or
or
cmp
or
sahf
inc
xor
fildl
dec
in
fcoms
xor
mov
adc
or
mov
addl
pop
add
or
jo
add
jns
sarb
inc
loop
addl
enter
push
sub
xor
repz
out
lcall
je
push
inc
sub
vpsrlw
mov
lods
aas
pop
aaa
fcmovnbe
in
sub
gs
push
imul
add
cmp
inc
addl
push
es
sbb
mov
dec
pop
and
ret
sub
pushw
sti
xor
pop
sbb
hlt
test
rcrb
mov
xchg
fs
adc
insl
xchg
pop
xchg
add
pop
pop
scas
arpl
fwait
nop
loope
fstpt
gs
xchg
and
stos
cltd
mov
je
mov
sar
out
mov
xor
shrb
bound
fdivrl
mov
inc
or
insl
idivl
sub
cmp
call
pop
adc
mov
imul
inc
mov
sysexit
jmp
xchg
rorb
cmp
sbb
ret
cmpb
cmc
aam
adc
jno
stos
or
std
dec
dec
inc
ret
ss
movsb
adc
adc
sbb
ja
je
inc
push
sarl
add
sti
cmp
mov
add
push
test
and
dec
and
icebp
jo
lods
add
jg
sahf
and
movsb
pop
out
xacquire
outsb
clc
rorl
clc
xor
js
cltd
jbe
lock
and
pushf
push
imul
cmp
jl
dec
pop
push
pop
test
lods
lods
lods
aam
es
add
and
cmp
mov
test
jne
and
mov
and
loope
sbb
je
push
push
das
xor
enter
lods
jne
pushl
add
push
push
or
xorb
xor
add
mov
aaa
test
lds
lods
int3
and
sub
inc
dec
mov
arpl
add
dec
jmp
enter
mov
mov
movsl
mov
addr16
sub
adc
pop
and
leave
lret
push
or
stc
adc
add
orb
mov
and
inc
push
mov
xor
ss
cmp
mov
cmp
movsl
jnp
int
add
rcpps
and
xchg
xor
jne
jg
pusha
bound
cmp
fldl
es
daa
or
arpl
xchg
mov
dec
mov
icebp
mov
jecxz
sub
push
jle
test
fbstp
fidivrs
or
lea
fistps
jae
je
inc
mov
push
jo
xor
or
rcr
push
dec
or
out
push
mov
sbb
pushl
sub
xor
adc
loop
out
cmp
mov
and
lock
mov
jl
add
add
cmpb
mov
jo
addr16
loop
pop
inc
lea
adc
push
fiadds
sub
push
loope
adc
or
les
cmp
xor
pop
add
dec
jge
pop
mov
adc
or
or
or
bound
or
or
outsb
insb
mov
popa
xchg
dec
xor
fisubl
out
aam
cmpsb
sbb
xor
push
popa
add
popa
mov
ror
fnstenv
lahf
lods
lock
fs
mov
and
mov
je
fdivs
and
dec
lock
cs
lock
xor
push
sti
shrb
ljmp
cmpb
test
dec
cmp
push
sub
dec
lret
or
jbe
fsubs
jle
add
xorb
fwait
mov
insb
insl
jb
cmp
adc
mov
jge
shrb
mov
data16
addl
add
enter
or
scas
in
aam
sub
sub
add
push
dec
xor
xor
in
sbb
and
jne
frstor
adc
cmp
xchg
lods
daa
test
push
ljmp
mov
orl
add
sub
cltd
rolb
pop
imulb
daa
addr16
lds
mov
jo
loopne
fsubr
mov
testl
lahf
daa
mov
test
sub
push
sbb
adc
or
push
jo
push
or
xor
sub
jbe
sbb
insl
add
stos
cmpsb
imul
mov
and
rolb
pop
cmp
and
xchg
dec
add
in
mov
out
xchg
call
mov
imul
rorb
dec
test
mov
aas
in
bound
stos
ss
ja
inc
or
add
lods
pop
dec
in
or
lods
insb
mov
or
sarl
mov
mov
mov
push
ret
in
sbb
iret
sbb
je
fwait
pop
xchg
pop
or
or
adc
add
adc
inc
push
test
sbb
bndldx
xor
ds
pushf
pop
cmpsb
cltd
ss
mov
rclb
cltd
movl
fldl
sbb
enter
inc
insl
bound
mov
sbbl
or
popf
mov
nop
cltd
xchg
lea
adc
dec
inc
inc
pop
jae
lea
cmp
mov
add
mov
xor
sarl
sbb
mov
lock
das
dec
js
sbb
or
test
xor
stos
add
loop
push
mov
push
jg
cmpsl
mov
or
int
adc
fisubs
lret
or
adc
pop
cmc
cmp
mov
adc
cwtl
in
and
add
pop
or
std
push
rcrb
shlb
pop
loop
dec
das
push
or
clc
dec
bound
incl
les
lcall
xor
stos
inc
adcb
xor
adc
iret
mov
mov
lea
ud0
adc
test
xor
dec
fnstsw
in
and
push
jmp
mov
test
push
pop
int
sahf
mov
in
adc
add
cmp
dec
push
in
sbb
cmp
pop
dec
cmp
jmp
or
sub
pop
gs
mov
les
cmp
fisubs
cmc
aad
repz
int
sti
jge
ljmp
arpl
xchg
rcrl
xchg
push
fadds
loopne
jmp
xlat
cmpsb
pop
inc
mov
xor
call
add
pop
les
push
ficoms
cmp
adc
les
out
xor
int3
ja
pop
sub
out
and
sti
and
push
dec
mov
les
add
shr
repnz
popa
adc
pop
mov
sahf
sbb
scas
pop
xor
add
ss
xor
and
dec
popa
mov
jb
sub
cmp
cwtl
inc
add
loopne
vaddsd
rolb
push
pop
adc
bound
les
loop
and
mov
scas
cmp
jge
adc
and
or
scas
mov
les
in
repz
ss
fdiv
fmull
mov
test
loopne
fs
rcrb
mov
mov
outsl
xor
out
and
gs
add
call
pusha
cmpsb
push
adc
test
cmp
or
mov
sbb
add
mov
xchg
cmp
lods
sbb
andl
inc
dec
sbb
popw
adc
shll
inc
clc
mov
cmc
outsb
and
xor
inc
mov
inc
cmp
fcoml
insb
bound
shlb
enter
or
pop
adc
aam
insb
or
mov
and
add
cmp
rorb
xor
jne
adc
inc
pop
push
xor
in
leave
sbb
jl
aam
or
or
loope
fildl
push
mov
xor
stos
fisttpl
add
addl
sub
das
adc
repnz
mov
and
push
loopne
sub
cmp
jg
outsl
pop
repz
movsl
xor
int3
push
inc
fnstcw
mov
loopne
xorb
les
adc
pop
mov
mov
mov
add
enter
dec
cs
or
or
mov
dec
push
stc
add
push
mov
mov
iret
inc
ss
in
or
or
push
add
jge
adc
mov
adc
cmp
mov
ja
cmp
sub
repz
xchg
scas
and
pop
adc
push
inc
aam
xor
pop
push
add
adc
adc
or
testb
mov
sbb
dec
setb
xchg
inc
dec
sub
stos
push
mov
or
and
sbb
sbb
jmp
call
pushw
dec
jns
sub
sub
or
pusha
or
lods
dec
push
xchg
adc
sbb
enter
xor
in
adc
or
xchg
xor
push
out
mov
stos
stos
in
sub
rcll
rorb
xchg
test
push
mov
jne
fbld
jl
or
js
cli
pop
jno
cwtl
push
dec
xor
cmp
or
aam
jne
inc
aas
mov
cmp
and
lds
cmp
mov
pop
sbb
push
into
adc
fstpt
add
cmp
mov
inc
les
or
mov
push
cmp
icebp
jno
fcmovb
out
dec
xorb
push
push
sti
mov
push
mov
int
int
jo
sub
shrb
aas
cmp
sbb
adc
inc
inc
cmp
cltd
pop
leave
push
pop
and
xor
cmp
mov
stos
fs
iret
lcall
nop
pop
sbb
or
and
dec
lock
xor
sub
les
push
je
and
in
shlb
repnz
and
lahf
gs
or
out
mov
cltd
or
sbb
pop
mov
jg
nop
loopne
mov
jno
rorl
pushf
scas
push
fwait
dec
popa
rorl
rcrl
in
jmp
fmulp
imul
pop
mov
loopne
inc
nop
pop
rcll
orl
sysexit
in
fsubr
cld
nop
fcomi
mov
push
sahf
push
sub
push
test
jmp
ret
pop
rclb
push
lahf
dec
loope
lahf
daa
pop
or
pop
lcall
dec
cwtl
cltd
mov
or
or
ret
pop
adc
ret
cld
add
and
lea
inc
push
xor
and
clts
cmp
mov
pop
or
cltd
jge
add
fdivl
and
sbb
or
ret
in
lods
shr
or
dec
mov
aaa
xor
inc
xor
idivl
lods
pop
mov
loopne
or
int
jno
shrb
fs
sbb
and
cmp
mulb
es
ja
mov
pusha
lcall
test
add
push
dec
imul
cmp
cmpsb
cmp
cmpsl
decb
sub
xchg
push
and
fdiv
sbb
xor
fscale
adc
cmpsl
fwait
popa
add
cld
xchg
pop
mov
add
sub
sahf
dec
mov
adc
inc
inc
jl
cmp
insl
adc
add
subb
pop
add
pop
xor
sbb
popa
fld
rolb
jmp
nop
test
jecxz
or
fisubl
dec
and
push
rolb
cmc
dec
loopne
sub
sub
insl
repnz
add
cmpsb
or
lods
pop
pushf
jne
add
adc
rolb
or
xchg
xchg
cmpsl
shr
adc
test
mov
call
and
and
cmp
sub
cmp
insl
iret
fwait
sbb
jbe
sbb
adc
add
shlb
sbb
adc
mov
pcmpeqw
aaa
and
loope
cmp
xor
xchg
outsb
cmp
jmp
cmp
sbb
xorl
add
mov
xchg
jo
add
je
lea
or
mov
gs
push
movsl
push
loopne
movsb
fsubl
pop
sbb
addr16
clc
out
mov
sbb
popl
adc
dec
shlb
push
inc
les
xchg
add
xchg
and
xorb
xor
adc
mov
cmp
ret
cmpsl
hlt
xchg
jne
sahf
pushf
push
cltd
rolb
xor
cld
inc
push
mov
iret
push
add
adc
add
mov
xor
cmp
imul
nop
inc
sub
push
pop
xchg
inc
dec
jle
testl
add
push
jb
and
add
imul
and
push
xchg
icebp
dec
into
mov
daa
les
add
ret
cltd
mov
pusha
and
pusha
repz
sub
fstpt
adc
or
jb
sbb
jecxz
add
sub
add
jb
int
shrb
add
outsb
ret
and
pop
add
add
test
xchg
pop
add
mov
pop
pop
andl
and
stc
pop
ret
es
dec
pop
xor
mov
xchg
jo
and
lock
aam
addl
and
or
sbb
mov
and
sub
adc
push
repnz
dec
nop
cmpl
and
dec
shlb
sahf
sub
cmp
fwait
ja
inc
sbb
push
and
mov
or
push
cmp
cmp
cld
addl
adcl
sbb
arpl
cmp
cwtl
pop
fnsave
cwtl
xlat
push
loopne
xor
xlat
mov
xchg
inc
pushf
test
pop
sub
fists
and
fdivl
push
jns
or
push
mov
push
add
cmpl
test
imul
add
aam
leave
int
or
jmp
and
fs
sub
popa
sub
test
and
xchg
push
into
out
sub
inc
dec
sub
sub
or
adc
pop
out
or
js
test
xchg
sub
jnp
icebp
nop
sbb
jbe
daa
stc
sti
pop
xchg
and
scas
arpl
adc
andb
mov
or
xchg
xor
stos
mov
cmp
and
xchg
mov
or
xor
cwtl
in
inc
lods
mov
std
adc
dec
sbb
xchg
shrl
mov
jmp
sub
mov
lcall
xor
mov
cwtl
push
clc
xlat
mov
movl
or
pushf
pop
pop
add
cmp
and
into
aad
pusha
frstor
scas
dec
add
mov
mov
arpl
imul
sub
cmp
enter
xor
repz
cmp
imul
inc
out
pop
jnp
or
pop
or
cmp
int3
or
sbb
adc
in
inc
mov
inc
cltd
jle
or
mov
data16
fildl
cld
and
adc
pop
enter
gs
sub
sub
add
movsl
imul
xchg
and
jecxz
add
mov
sbb
add
adc
lea
lahf
dec
daa
fs
or
jbe
mov
inc
dec
sub
or
sbb
jecxz
xchg
scas
aam
sub
xchg
dec
dec
out
aas
sub
stos
push
pusha
and
sahf
imul
push
dec
xor
and
pop
es
xchg
mov
adc
mov
and
xchg
in
or
mov
loop
loope
pop
loop
inc
loopne
cmp
in
popf
and
loope
or
and
ficoml
add
inc
les
ret
inc
stos
mov
out
pop
xorl
mov
cli
push
lock
push
push
je
add
popf
add
test
xchg
or
or
movsb
movsb
je
addb
xor
jp
push
dec
or
sbb
or
iret
pop
add
or
sahf
inc
jg
and
pop
shlb
lret
or
jb
popa
inc
clc
xchg
mov
push
pop
push
or
sbb
push
adc
mov
mov
lret
cmp
add
imul
push
or
test
outsb
add
push
and
adc
sub
xchg
sbb
xchg
ds
outsl
icebp
subb
icebp
and
test
iret
je
pop
movsb
jle
js
or
dec
fdivr
sub
push
or
je
ret
or
and
imul
pusha
push
popa
sub
pushf
pop
mov
test
mov
lea
sti
and
inc
ss
ds
xor
and
sbb
nop
push
bnd
jecxz
nop
icebp
das
lock
lds
clc
dec
inc
jp
and
into
es
cmpsb
mov
mov
in
dec
xor
xor
ljmp
mov
addl
xlat
das
push
sub
subl
pop
pusha
jge
push
inc
push
add
or
addl
ret
or
inc
sbb
js
imul
add
or
sub
or
sub
shrb
sub
adc
xchg
inc
cmpb
xor
mov
call
loope
xor
xchg
clc
sbb
icebp
xor
lret
inc
pop
imul
mov
xchg
xor
adc
push
fs
push
leave
in
adc
adc
loop
or
roll
repz
and
dec
mov
mov
subb
jo
add
mov
mov
push
and
mov
pusha
and
addb
dec
sbb
rcll
cmp
mov
or
clc
pop
mov
or
xchg
mov
push
sub
or
push
loope
pop
pop
fstpl
push
test
or
mov
adc
popa
add
and
xchg
sbb
testl
mov
call
insb
mov
popa
dec
mov
pop
nop
int3
sti
push
maskmovq
imull
sbb
dec
fs
or
xchg
pop
pusha
sub
sub
mov
cmp
mov
mov
adc
jns
mov
sbb
aas
rcr
icebp
dec
lea
mov
cmp
pop
xchg
sub
cmp
push
jae
dec
sub
dec
jge
jmp
mov
pop
popf
inc
mov
jbe
push
or
fsubs
push
fsubrl
pusha
fdivl
or
cmpsb
mov
fdivrp
mov
sub
mov
orb
mov
ret
or
out
stos
sbb
pop
jl
jmp
push
std
cmp
xchg
into
clc
fidivl
jmp
push
cmp
or
dec
push
dec
mov
push
pop
movb
outsl
or
pusha
or
mov
adc
mov
push
sbb
cld
mov
cmp
cmp
fldl
jb
cwtl
or
xorb
mov
push
mov
gs
push
xor
pushf
adc
sub
inc
pop
fildll
cmp
push
push
push
push
lea
sbb
or
jno
fmuls
jnp
cmpsb
and
lock
push
mov
fcomps
dec
adc
sub
scas
dec
or
push
push
mov
popa
in
insb
inc
int3
pop
sub
cmpsb
xor
bound
clc
nop
push
lock
and
or
pop
xor
cmp
add
push
cmpsl
push
inc
cmp
dec
cmp
adc
movsl
dec
xchg
add
and
arpl
cmp
je
adc
and
movsl
sub
cwtl
ss
dec
cmp
insl
cli
add
push
adc
sub
dec
test
es
lret
xchg
movsb
and
cmp
int3
es
push
sbb
les
pop
add
lds
push
leave
je
notb
inc
or
sub
mov
cmp
inc
insb
stos
inc
icebp
push
sbb
in
xchg
or
pop
stos
push
pop
cmp
inc
and
mov
imul
cwtl
mov
cmp
orb
or
cltd
push
nop
lret
and
cmp
nop
lret
add
push
push
or
xor
bswap
mov
mov
loopne
aaa
and
pop
pop
jnp
jns
jmp
pop
push
pop
imul
adc
mov
or
and
add
nop
dec
mov
or
mov
insl
push
sbb
clc
mov
push
roll
adc
shrb
mov
or
or
lea
jecxz
sub
pop
push
xchg
ret
pop
test
daa
les
cli
in
pop
adc
dec
mov
inc
sbb
dec
popa
adc
cmp
test
icebp
fs
push
repnz
jo
mov
shl
leave
mov
loopne
xchg
sbb
popf
dec
adc
jle
push
out
fcmovbe
adc
adc
nop
inc
sbb
pushf
mov
scas
push
mov
and
cmp
add
lcall
and
jbe
ja
push
dec
xor
pop
adc
gs
sbb
and
push
cmp
aas
jl
mov
inc
and
rcll
nop
aam
jo
rep
push
cli
es
xchg
dec
adc
sbb
or
mov
test
lock
jp
mov
or
add
mov
sub
add
sub
movsl
fwait
dec
clc
mov
cmp
idiv
inc
dec
int3
push
in
mov
iret
into
inc
mov
add
call
cmp
in
mov
aaa
jge
sahf
call
sub
mov
and
dec
sbb
mov
stos
xchg
icebp
fs
xchg
aad
or
mov
aam
dec
push
add
aas
icebp
ret
or
xor
xor
cmp
sub
pop
movsl
sbb
jbe
mov
jo
cmp
aaa
add
daa
mov
sbb
ss
mov
in
lea
inc
dec
aam
xchg
dec
fmul
xchg
sbb
mov
xor
sub
cmp
nop
mov
adc
outsb
data16
lods
push
nop
or
fld
lds
sbb
inc
push
pop
imull
test
mov
and
add
sub
sbb
cmpsl
adc
mov
push
adc
xchg
fwait
ret
cmpsb
out
les
adc
aas
ss
xor
mov
pop
pop
mov
push
mov
mov
mov
pop
jg
js
jle
push
nop
push
mov
push
and
jecxz
jl
cmpb
gs
mov
mov
in
add
imul
inc
adc
fldl
xor
test
nop
rorb
cmpl
pop
and
es
push
or
mov
nop
in
mov
xchg
add
xchg
cmp
xor
lods
and
pusha
repnz
push
popa
mov
ds
xchg
dec
rolb
pop
jg
and
add
outsb
add
sub
jmp
loop
das
clc
add
or
pop
dec
push
data16
add
push
add
mov
pusha
rclb
mov
or
mov
adc
mov
rcl
nop
jg
repnz
ret
pop
dec
dec
or
jns
nop
es
fcoms
push
mov
lea
add
loope
add
jl
pop
into
mov
adc
nop
sub
adc
push
inc
mov
nop
xchg
mov
addb
mov
sbb
movsb
and
xchg
cli
lahf
mov
pop
test
ljmp
sar
popa
inc
xorb
sub
sub
push
push
cmp
enter
cmp
pop
cmp
jbe
repz
add
bound
add
push
cld
xchg
orb
or
leave
push
nop
mov
xchg
sbbb
pop
dec
adc
enter
push
xor
imul
and
sbb
sbb
add
xor
cmp
out
mov
push
and
leave
lds
pop
insb
fldenv
int
mov
in
fdivs
add
pushw
and
dec
adc
mov
loop
lea
adc
sub
lahf
imul
movb
add
mov
jmp
scas
add
sar
push
inc
mov
mov
cmp
mov
pop
pop
testb
push
xor
mov
add
jb
mov
enter
add
lahf
jne
add
and
sub
es
adc
test
or
loopne
push
arpl
adc
inc
daa
or
jp
mov
xchg
mov
cmp
leave
repz
call
ss
dec
push
mov
jae
jae
sahf
cwtl
inc
fisttpll
add
mov
mov
loope
jne
pop
mov
dec
or
or
movsb
cmpb
inc
arpl
pusha
in
xchg
or
jno
call
lds
mov
incl
jne
movb
mov
inc
jmp
cs
lds
push
mov
inc
cmpsb
sub
push
add
in
inc
inc
pop
add
or
adc
shll
in
add
mov
sbb
add
xchg
loope
je
aam
pop
ss
sub
jno
push
into
jmp
push
adc
lea
ss
stos
out
sar
ljmp
xchg
sbb
push
xchg
and
andl
or
sbb
pop
test
out
adc
push
popl
xor
mov
rcrl
and
inc
push
push
ret
scas
pop
xchg
and
adc
shll
dec
int
cld
daa
dec
popa
test
inc
stos
pusha
dec
or
cmc
add
dec
add
and
xor
jg
loope
add
cmp
insb
adc
hlt
add
push
lahf
and
xchg
jns
inc
xchg
push
out
mov
out
xchg
mov
cmp
outsb
mov
ljmp
aam
lods
mov
push
loope
sbb
fcomps
mov
js
push
insl
xchg
cmc
pop
bound
mov
int
call
inc
sbb
jge
jp
cmp
je
cmp
mov
imul
sbb
leave
adc
dec
les
jmp
mov
mov
imul
je
scas
pop
je
cmpsb
and
jmp
and
jmp
mov
scas
sbb
sub
fs
out
rcr
lock
cmp
repz
pop
test
iret
xor
dec
pop
xchg
cmpsb
movsl
xchg
ss
and
add
or
je
sbb
jne
push
daa
mov
add
je
je
je
or
sbb
add
inc
pop
and
sbb
adc
jae
push
sbb
lods
add
mov
push
mov
or
rclb
mov
sub
sbb
pop
cmpsb
je
orl
push
fisubrl
adc
cmpsl
mov
bound
xor
sub
jmp
pop
sub
pop
push
mov
hlt
cmc
out
es
xchg
push
sbb
scas
jne
mov
inc
xor
xor
jecxz
nop
lret
mov
inc
pop
push
push
cmp
nop
shll
inc
jns
divb
xchg
mov
pop
inc
cmp
orl
orl
mov
xor
xchg
out
aad
xor
jo
mov
push
daa
add
mov
xchg
push
cmc
dec
add
insb
movups
rclb
or
loope
adc
pop
pop
stos
adc
pop
sbb
sub
dec
shrl
ret
aam
add
movsl
or
into
cmp
sbb
test
repnz
push
inc
adc
jecxz
in
test
rcrb
add
inc
xchg
cli
pop
adc
jbe
pop
aas
jmp
cmp
and
push
sub
shrb
mov
adc
in
jge
adc
xor
push
mov
mov
jmp
fists
jmp
adc
popf
cmp
jne
and
push
mov
pop
sbb
dec
pop
and
sub
fs
xchg
adc
loopne
inc
or
inc
sbb
mov
data16
sbb
cmp
and
and
ret
ret
and
sbb
mov
or
adc
push
sbb
xchg
mov
cmpsl
inc
sub
inc
std
xor
push
xchg
outsl
scas
cmp
adc
and
fsubs
adc
aam
insl
mov
add
and
mov
adc
xor
xor
mov
xchg
pop
xchg
add
mov
repz
mov
pop
pop
mov
xchg
not
jbe
cmp
pop
faddl
sub
push
xor
dec
sub
lret
cmp
xchg
add
cmpl
inc
xchg
pop
dec
adc
gs
xchg
dec
cmp
sub
cmp
xor
dec
dec
ljmp
fdecstp
fstpt
gs
in
and
popf
or
mov
or
sbb
mov
inc
add
adc
xor
mov
sbb
push
pusha
cmpsb
test
push
or
iret
xchg
mov
jecxz
cmpl
test
and
orb
mov
orl
dec
not
xor
push
jns
jle
add
pushf
push
lock
xor
shrb
mov
out
xchg
and
call
push
push
movsl
jns
ds
loopne
sbb
test
mov
js
iret
jmp
outsb
movsl
or
mov
loopne
rolb
xchg
jmp
push
or
mov
cmpb
cwtl
inc
add
ds
pop
cli
and
jmp
and
shrb
imull
stos
push
mov
xchg
jbe
ret
aas
or
and
pop
mov
and
xchg
inc
sti
clc
dec
pop
insb
add
push
jmp
dec
or
xchg
out
aad
xor
movsb
and
or
add
add
push
test
iret
fwait
std
add
mov
insb
popa
jne
mov
jle
push
jns
add
popa
xchg
nop
sbb
sub
test
mov
mov
add
mov
inc
lea
ret
xchg
or
daa
inc
sub
xchg
mov
ret
cmp
out
movsb
add
outsl
xchg
and
sub
faddl
mov
je
push
sub
xorl
push
cmp
cmp
and
inc
ficoml
pusha
addl
add
insl
push
mov
std
and
into
ret
jle
outsl
fdivl
gs
and
jne
inc
or
mov
movsl
loope
fs
adc
aam
or
xchg
sbb
lea
sub
xor
mov
or
xor
inc
jecxz
ss
adc
push
cmpsl
ret
add
lahf
arpl
push
jo
leave
or
pop
clc
xor
ja
inc
ss
scas
sub
ret
xchg
mov
int
fdivl
lahf
lock
into
xchg
add
add
pop
xor
jmp
popf
xor
insl
hlt
fs
andl
push
push
mov
insb
sub
add
pop
and
jmp
push
aaa
add
or
lea
xchg
mov
hlt
or
or
fimuls
sahf
dec
cmpsl
mov
sbb
cmp
inc
vpextrw
lds
pop
mov
or
sarb
jle
or
aas
and
cld
lea
jl
cmp
mov
push
test
dec
inc
imulb
push
fs
inc
mov
cli
and
inc
lock
sbb
les
cmp
sub
popf
rolb
dec
insb
xchg
lods
enter
loope
enter
inc
pop
daa
add
lods
popa
call
rorb
sbb
jg
imul
out
rolb
mov
es
test
sbb
and
xchg
adc
mov
mov
popa
mov
test
mov
add
popf
mov
icebp
je
aad
iret
ss
loopne
inc
outsl
in
xchg
fcoms
jmp
or
sub
test
pop
cs
pusha
adc
lcall
and
cltd
loope
test
adc
sti
loopne
sbb
and
sbb
sbb
or
sbb
adc
adc
lret
and
and
sub
and
adc
mov
lods
les
adc
add
movl
jb
je
push
jnp
movsb
fists
je
aaa
outsl
and
jne
add
mov
fstp
arpl
fwait
jp
pextrw
in
movsb
out
sbb
pop
or
int
dec
mov
or
lock
call
pop
xchg
addl
push
add
mov
cld
push
into
movsb
push
and
ret
add
call
test
add
fisubl
push
or
push
push
into
xchg
push
mov
sbb
les
iret
dec
sbb
add
adc
mov
adc
pop
jl
lret
add
push
add
mov
or
addl
mov
push
mov
mov
push
pop
inc
adc
xor
and
call
jge
insl
push
add
dec
push
addr16
or
daa
jne
pop
push
test
cmp
mov
icebp
fldl
push
push
adc
push
addr16
movsb
xor
cmpsb
test
sub
fwait
xchg
mov
xchg
adc
mov
dec
ret
jb
jmp
pushw
xchg
into
arpl
jae
test
lds
ss
das
mov
push
les
cmp
and
or
repnz
sbbb
sbb
push
sub
mov
push
jnp
cs
enter
xor
cmp
cld
add
dec
mov
pop
adc
pop
inc
jecxz
pop
data16
add
xlat
fs
cmp
and
fadd
adc
jb
push
cmpb
dec
mov
add
fstpt
mov
mov
mov
movb
adc
jle
push
inc
mov
cld
xor
push
mov
lcall
dec
out
add
sbb
out
lock
xchg
xor
add
push
jne
fstpl
stc
mov
data16
outsl
cwtl
mov
ret
imul
mov
rclb
xchg
pop
incl
add
leave
jmp
and
inc
arpl
mov
leave
loopne
cmp
nop
pop
lods
inc
jl
out
lods
xor
push
sbb
adc
aas
xor
sbb
jecxz
shrb
loope
mov
test
pop
test
jge
cmp
inc
mov
pop
pop
mov
je
scas
ret
cmp
movsb
negl
je
movzwl
mov
pop
xchg
jl
lods
mov
sti
stos
adc
jge
lahf
imul
sub
dec
push
pop
cld
push
push
and
loope
lret
inc
movsl
dec
cmp
add
in
push
mov
addr16
jecxz
push
inc
pop
cmp
mov
ret
test
add
ret
add
imul
adc
push
mov
pop
and
aas
rolb
dec
cmp
jne
ljmp
mov
and
aaa
iret
mov
popa
fdivl
xor
gs
push
mov
pop
add
dec
insl
mov
inc
add
pop
add
xor
mov
je
add
lods
popa
in
push
and
xor
pop
push
cmp
xchg
into
rolb
stos
pop
sbbl
stos
ficompl
lret
inc
popa
stc
in
cmp
shl
mov
add
or
push
stos
mov
out
popf
ret
add
push
cs
pop
jno
fstp
inc
stos
subb
xchg
jo
into
subb
mov
or
and
movsb
cli
add
cmp
stos
je
pop
add
jg
push
adc
mov
xor
lahf
lea
xchg
pop
xor
sbb
add
aas
lea
mov
xchg
into
andl
adc
jecxz
cmp
inc
lcall
pop
mov
adc
ret
add
arpl
dec
pushf
add
inc
or
jg
cs
ja
or
dec
pushf
jg
pop
dec
jmp
pop
adcb
sbb
xchg
outsb
jne
xor
pop
sahf
das
pop
and
sub
addr16
or
int3
jae
and
fucomip
cmp
inc
jnp
adc
pop
dec
stos
or
adc
test
insb
mov
and
dec
pop
mov
mov
mov
adc
push
sbb
sub
pushf
lret
jo
cld
leave
les
out
aam
jo
dec
cwtl
mov
and
or
jne
inc
xor
inc
sub
test
adcb
xchg
ret
into
mov
jle
sub
push
loopne
mov
fwait
sbb
popa
test
or
arpl
xor
mov
fnstsw
orb
test
dec
pop
cmp
cwtl
pusha
addl
dec
scas
inc
sahf
les
inc
jns
bound
arpl
xlat
fnstcw
mov
add
add
cmp
jnp
das
mov
mov
fcomps
sbbb
rolb
xor
pop
lcall
leave
enter
push
and
xchg
or
inc
mov
pop
rcrb
sub
or
sahf
lret
mov
daa
adc
xor
push
in
loopne
sti
add
insl
add
iret
fisubl
add
sbb
and
test
adc
in
cmpl
ret
enter
or
push
jae
jns
or
or
es
rorb
and
and
mov
ss
out
imul
rcll
mov
or
cld
nop
push
lods
filds
push
and
push
cs
adc
lods
dec
adc
mov
or
fnstenv
sub
out
xor
pop
movsb
prefetchw
inc
push
movsb
mov
arpl
mov
jae
adc
xor
adc
ss
and
cmpl
adc
sbb
ds
dec
pushf
adc
add
testl
jle
decb
push
pop
es
sbb
mov
adc
aaa
lock
repnz
in
adc
adc
adc
sbb
popa
flds
dec
push
sbb
sti
cmp
ret
push
movsl
push
test
js
outsb
xchg
aam
pop
mov
repz
add
rorb
call
fmulp
dec
lahf
push
and
pop
mov
pop
xor
je
jo
and
pop
cli
cmp
sub
sub
ret
or
ret
jb
daa
rclb
or
sub
sbb
push
or
notl
outsb
or
lock
jb
rclb
imul
mov
ljmp
xchg
jbe
dec
jecxz
out
jge
or
stos
jo
ljmp
jge
fmull
ret
ret
and
pop
popa
loope
sub
xor
outsb
lret
dec
sub
gs
inc
orb
aam
mov
mov
inc
adcb
js
xor
outsb
ljmp
sub
pop
inc
pop
mov
enter
test
sbb
sbb
imulb
nop
and
cmp
and
push
movsb
adc
repz
inc
mov
push
push
jae
inc
movsl
fs
loope
ret
inc
movsb
jl
ds
sub
leave
push
lcall
mov
adc
push
and
mov
test
scas
pop
ret
sbb
lcall
adc
call
xor
jbe
mov
loop
cltd
or
add
adc
sub
or
lahf
jb
and
dec
loopne
xor
les
icebp
sarl
xor
push
xor
mov
inc
leave
stos
jmp
jge
xor
or
add
mov
cwtd
xor
pop
sbb
push
xchg
fstl
ja
inc
in
ja
sbb
pushf
pop
jae,pt
or
push
jg
xor
jle
rcrb
mov
shlb
popa
push
add
and
mov
add
jnp
mov
in
and
mov
movb
outsb
nop
sub
pop
cmp
add
fidivrl
pop
pop
push
push
xchg
outsb
sbb
inc
sub
mul
test
inc
adc
and
jo
dec
movsb
inc
and
sbb
cmp
shrl
sub
mov
lret
inc
out
sbbl
icebp
insb
fs
sub
loopne
add
inc
sub
sub
xchg
popf
ret
test
nop
or
and
fwait
sub
or
sub
mov
imul
push
addb
aam
sub
mov
call
add
and
les
and
daa
enter
jo
in
pop
pop
cmp
shlb
add
call
outsb
xorb
push
inc
aaa
adcl
xchg
mov
idivb
nop
and
add
mov
xor
add
add
sbb
mov
stos
adc
and
push
add
push
test
and
pop
or
push
xor
lods
bound
leave
or
es
and
or
and
stos
pusha
in
pop
cld
or
pop
clc
arpl
push
lea
cltd
mov
or
xchg
notb
push
xchg
cld
cvtdq2ps
movsl
and
inc
mov
adc
enter
inc
jbe
inc
xchg
or
sub
daa
lret
sbb
pop
test
dec
pop
daa
or
cli
xor
add
repnz
and
add
or
and
add
jne
sbb
add
out
adc
xchg
xchg
sub
or
pop
sbb
xor
jo
jmp
and
xchg
push
fstpl
mov
lods
in
lea
lret
or
and
add
xor
push
setbe
ret
daa
ljmp
adc
xchg
js
push
ret
pop
and
jl
bound
inc
inc
add
push
sbb
test
push
mov
fidivrl
jo
jnp
dec
dec
adc
sbb
gs
sbb
mov
push
sbb
adc
inc
cmp
jle
inc
mov
mov
mov
adc
sbb
in
jns
in
dec
pop
mov
std
ret
adc
test
loop
sub
push
mov
adc
xchg
pop
or
cmp
adc
dec
xor
int
shlb
call
stos
dec
cmpb
lods
lahf
and
lods
xor
or
outsl
insb
mov
cmpsb
jnp
repz
popf
repnz
pop
push
enter
sub
inc
shll
add
adc
subl
dec
leave
adcb
mov
stc
outsb
lea
mov
push
push
mov
test
fwait
icebp
shlb
adcl
sbb
shlb
and
ja
repnz
cmpsb
or
add
push
add
mov
insb
popa
add
cmp
psubusb
jb
pop
fcompl
fcomp
mov
cmp
and
adc
aas
enter
movsb
adc
add
inc
sbb
bound
rorb
inc
lock
adc
inc
repnz
lods
pop
adc
or
add
mov
hlt
adc
sbb
stos
inc
dec
push
sub
sbb
cld
push
pusha
adc
adc
rorl
jb
scas
nop
push
cmp
je
mov
leave
mov
lds
add
sub
push
jb
jmp
inc
or
sbb
or
pop
sub
stos
int
dec
or
push
lods
sub
or
push
and
push
mov
adc
in
and
pop
lods
inc
and
sub
mov
jnp
and
adc
orl
clc
or
out
stos
push
xor
cmp
and
inc
jl
int3
xchg
inc
mov
es
pop
into
movsb
push
push
sarb
lods
and
cmp
arpl
std
or
pop
cmp
scas
pop
add
jb
fisttpl
les
xor
mov
sbb
pusha
cmp
ficoms
mull
inc
jbe
add
add
in
repz
adc
mov
lock
mov
sub
mov
and
adc
stc
ret
or
inc
andl
sub
sar
mov
in
lret
add
push
ljmp
insl
lods
loope
jle
pop
and
mov
pop
sti
repz
mov
jns
aad
or
and
or
clc
mov
cwtl
mov
cld
sbb
and
outsb
mov
outsb
xor
outsb
sub
es
leave
pop
in
ret
push
mov
inc
push
in
xorb
add
xor
rolb
lods
aaa
loopne
cmpsl
pusha
xor
adc
sub
ret
mov
pusha
mov
fst
xor
adc
aas
repz
insl
push
adc
mov
sub
or
cmpl
movl
mov
arpl
push
adc
stc
dec
push
clc
es
or
in
cmp
mov
out
cmpsb
in
aam
sub
push
adc
dec
in
in
sbb
es
es
outsl
loopne
js
mov
add
addl
push
lahf
push
adc
cmc
sub
nop
nop
xor
mov
lds
or
and
inc
push
iret
daa
inc
sahf
xor
dec
cmpb
icebp
and
mov
stc
or
and
lret
js
cld
or
pop
push
movsl
or
cs
mov
add
dec
imul
call
pop
jnp
sbb
lahf
fistpl
aam
xor
or
in
add
mov
add
mov
pushf
mov
leave
push
pop
mov
adc
xchg
mov
and
push
adc
sub
adc
enter
mov
es
dec
push
xchg
ret
inc
push
arpl
lea
lods
insl
cmpsb
test
add
fstps
adc
xchg
testb
and
mov
mov
mov
stos
fs
jg
aaa
imul
aam
add
repz
sub
or
repnz
repz
js
pop
xor
or
mov
imul
cmp
in
pop
inc
inc
in
push
adcb
mov
mov
and
cld
push
add
mov
sti
cltd
push
push
arpl
orl
jle
jbe
fldl
sbb
sub
cmpsl
inc
stc
jge
jmp
cmp
inc
sbb
add
dec
add
jno
je
and
inc
inc
jbe
xchg
and
and
or
push
insb
or
leave
pop
jmp
and
and
movl
cli
add
and
in
lds
cmp
cwtl
popa
sbb
sub
xor
fwait
sub
sbb
push
sbb
and
daa
pop
xor
xor
inc
pop
or
sbb
adc
and
popa
pop
sub
gs
gs
push
adc
push
pusha
pop
or
inc
mull
and
pop
dec
adc
fadds
arpl
add
mov
mov
or
add
lcall
ja
inc
insl
mov
cmp
arpl
and
add
in
add
addr16
enter
or
push
jns
cli
je
int3
test
or
jmp
dec
inc
scas
or
cltd
sbb
popa
or
fsub
dec
push
inc
xchg
add
arpl
aaa
adc
jmp
or
lods
and
insb
or
pop
adc
mov
adc
and
xchg
sub
push
stc
in
push
push
pop
js
es
add
sub
push
inc
scas
inc
mov
mov
and
sahf
arpl
fcmovu
mov
add
lcall
xchg
jnp
adc
add
pop
je
add
enter
js
sbb
or
push
iret
mov
mov
push
mov
or
sbb
inc
sub
mov
push
jne
lea
add
mov
movsb
xor
mov
imul
xor
inc
lret
loopne
sbb
out
push
or
mov
call
sub
jne
ret
sub
adc
into
pop
dec
cmp
aaa
cmp
or
mov
pop
enter
loop
arpl
loopne
test
lahf
add
in
int3
xchg
jle
ja
jbe
lret
xchg
or
lret
sub
dec
in
sub
ljmp
and
ret
xor
mov
in
mov
sbb
lock
out
es
fstpt
fcomps
dec
or
mov
dec
stos
adcb
mov
lods
add
pop
cmp
fldenv
sahf
movsl
add
test
jnp
das
sbb
imul
xchg
movsb
pop
movsl
and
les
mov
or
insb
mov
test
inc
in
adc
movsl
mov
js
jge
iret
outsl
insl
addr16
or
cmp
lock
scas
dec
add
cmp
sbb
xchg
xor
push
sbb
aaa
enter
cmp
dec
or
sbb
inc
jne
push
movsb
push
arpl
add
mov
dec
add
adc
sti
add
add
mov
push
or
inc
dec
add
stc
jl
add
aaa
mov
ss
dec
sbbl
push
pushf
pop
mov
pop
xor
lods
and
sbb
jne
nop
pop
sbb
iret
dec
in
pop
enter
push
movsb
repz
or
xchg
inc
mov
cmpsl
lods
push
cmp
lret
jl
xchg
add
ret
shlb
and
and
adc
dec
leave
push
cmpsl
and
addl
lods
rcrl
jno
les
cmpsl
or
add
insl
sbb
mov
xchg
xchg
sbb
sbb
xor
int
data16
bound
push
mov
cmp
mov
push
fistpl
inc
add
adc
sbb
fists
xchg
int
stc
xor
dec
cmpsl
sbb
hlt
out
pop
mov
stos
and
out
sbb
mov
push
fisttpll
jbe
xchg
and
mov
sbb
lret
shr
jl
pop
and
pop
sahf
xchg
push
cwtl
and
push
lock
sub
pop
addr16
insb
sub
sbb
daa
and
daa
call
xlat
jp
pop
inc
xchg
inc
test
dec
pop
pop
mov
rclb
cmp
test
nop
xchg
lds
lcall
cwtl
fs
xor
rol
sub
sbb
ret
xor
or
push
pushf
cmp
ja
jmp
lock
xor
mov
push
cwtl
jns
mov
mov
mov
mov
ror
push
jmp
add
jp
test
and
cmpb
mov
xor
fwait
sbb
jno
mov
stos
xchg
rorb
or
imul
mov
dec
push
sbb
sbb
mov
push
xor
out
add
mov
jne
or
sub
cmpsl
xchg
divl
adc
push
stc
mov
pushf
hlt
sub
xor
inc
and
lods
aaa
mov
movsb
sub
push
push
movsb
sub
xorb
inc
loope
jl
xor
clc
test
repz
push
push
inc
push
sub
mov
cmp
add
add
inc
mov
pop
rsqrtps
loop
sbb
xchg
pop
loopne
addl
shrb
mov
push
mov
imul
dec
adc
xor
adc
and
add
adc
xlat
lea
pop
mov
inc
inc
aam
push
ja
shlb
inc
shrb
mov
sub
add
sub
xchg
mov
aad
icebp
dec
sub
das
push
mov
mov
sub
and
push
call
imul
add
mov
and
clc
sub
push
mov
push
adc
xor
inc
dec
mov
enter
iret
xchg
add
sub
or
lock
push
add
gs
repz
mov
call
pop
addl
and
ret
mov
and
adc
in
sbb
mov
jno
xchg
cmp
and
ljmp
push
inc
pop
rclb
pop
lock
inc
addb
or
rorb
cmp
test
test
sbb
out
cmp
add
dec
adc
xorb
bnd
icebp
cltd
and
push
dec
pop
cli
hlt
inc
xor
fs
or
aad
outsb
mov
jg
and
lea
push
dec
sti
out
jmp
call
and
inc
or
std
push
mov
dec
or
push
popa
mov
les
adcb
sub
xor
orb
es
aas
dec
inc
dec
call
sbb
js
adc
push
ret
imul
fiaddl
push
cmp
aad
movsl
jge
clc
mov
leave
sbb
imul
fsubrl
call
mov
and
nop
dec
inc
pop
dec
add
test
js
lods
fildl
pop
or
je
imul
nop
rcll
add
in
out
jmp
out
sbb
je
adc
out
xchg
inc
pop
aam
mov
push
mov
fdivl
mov
jmp
sub
inc
rol
xchg
nop
inc
jbe
inc
lret
lds
std
into
shlb
test
lea
xor
xchg
sti
sbb
push
pushl
xor
pop
add
sub
adc
sub
jg
das
sub
and
jbe
mov
int3
mov
mov
sbb
movsl
repnz
adc
in
test
imul
jnp
or
int
or
inc
dec
popf
ja
cli
leave
dec
xchg
xchg
inc
in
xor
lret
add
add
mov
mov
add
dec
adc
es
icebp
imul
test
jmp
mov
push
add
adc
or
inc
or
enter
daa
arpl
sub
or
jne
jl
out
pop
push
mov
mov
adc
aaa
clc
rolb
xchg
mov
sbb
ret
in
mov
or
sbb
filds
adc
pop
popf
add
outsb
fwait
xchg
xor
pop
lds
fwait
mov
movsb
adc
bound
adc
test
and
xor
add
inc
orb
xorl
mov
sub
in
xchg
pop
insb
out
xchg
pop
push
or
stos
dec
adcl
jbe
rcrl
or
cmpsl
lret
inc
mov
xor
jne
jno
mov
nop
in
add
in
sub
jecxz
cmp
es
xchg
mov
push
jb
and
sbb
in
daa
pop
add
add
mov
call
fwait
aad
repnz
mov
loop
ss
cli
fs
test
fs
std
das
push
out
rorb
mov
cld
fistpl
mov
push
inc
xchg
sub
xchg
aaa
adc
sub
adc
lock
dec
mov
add
lea
xor
inc
lock
or
adc
adc
andl
in
dec
or
in
add
dec
push
jo
lahf
dec
dec
lds
ss
lahf
xchg
and
inc
dec
jno
movsl
sbb
lods
xlat
les
sub
fwait
out
adc
dec
jno
add
xchg
sti
andb
sbb
cltd
cmpsl
fiaddl
inc
mov
leave
std
sub
sbb
jecxz
and
loopne
add
or
jo
adcl
add
mov
jne
enter
or
push
pop
sbb
or
add
jmp
mov
pop
push
push
loop
or
orb
in
roll
dec
call
adc
bound
push
iret
sub
adcb
sbb
pop
imul
clc
push
pop
adc
add
ja
dec
or
add
test
cld
outsb
imul
mov
mov
les
add
dec
cmc
cmp
test
adc
mov
inc
and
inc
inc
add
stos
aas
add
in
mov
movsb
push
lds
mov
pop
xchg
push
ss
pop
fsubs
fdivl
adc
mov
jmp
or
xchg
mov
clc
and
inc
sub
mov
mov
mov
sub
push
add
cld
mov
inc
push
shll
push
add
pusha
and
push
cmp
adc
jo
inc
nop
jle
inc
inc
popa
js
adc
mov
adc
xchg
sub
inc
sbb
mov
dec
xchg
sub
push
lock
rorb
add
dec
fidivrs
xor
push
rcll
xchg
add
clc
subb
ss
popa
sbb
jmp
sbb
cwtl
aam
jg
stos
rorb
imul
jge
mov
inc
ret
inc
add
loop
setge
sbb
xchg
jno
roll
or
mov
adc
push
or
inc
and
push
jno
lea
ret
pusha
pop
xor
cmpsb
xor
inc
xchg
xor
popa
push
scas
cli
fidivs
movsl
in
addb
add
cmp
adc
movsb
out
cltd
test
lds
mov
lds
rorl
push
in
and
mov
mov
push
push
jb
aaa
gs
fsubrs
lea
and
movb
adc
push
cmc
adc
mov
mov
repnz
inc
xor
adc
mov
xlat
jg
dec
es
testl
aam
fldcw
add
sbb
mov
sar
add
cwtl
add
adc
and
inc
xchg
loop
jg
adc
jp
xchg
add
jle
and
lods
or
mov
addl
and
mov
add
mov
inc
popf
nop
hlt
hlt
sbb
into
dec
cmpb
push
pusha
movsb
ljmp
or
cmp
jae
sub
xchg
push
adcl
and
push
mov
cli
pop
lods
add
mov
lock
or
cld
test
lock
sub
jg
add
mov
fs
rcll
mov
enter
loope
mov
xchg
mov
insb
outsb
clc
add
pop
inc
loop
xlat
in
punpckhdq
inc
xorl
shr
inc
gs
sbb
push
not
mov
xor
adc
mov
xor
mov
push
clc
mov
mul
scas
xor
cmp
push
adc
ficoms
gs
and
add
pop
xchg
cs
jne
cmp
jne
sahf
sti
insl
sub
sbb
or
add
in
add
cmp
je
and
popf
mov
ljmp
xor
mov
xor
mov
xor
dec
and
sub
test
sahf
lods
jne,pn
lea
data16
mov
fistps
cld
aaa
push
push
pop
and
or
popa
insb
add
icebp
mov
inc
dec
shl
jmp
jb
pop
cwtl
fsubs
adc
xorb
mov
in
pop
jnp
sbb
pop
mov
and
or
cmp
and
nop
xchg
pop
jle
fwait
outsl
push
jnp
or
enter
pushf
xchg
pop
xchg
add
push
arpl
cld
pusha
in
and
outsb
inc
sub
mov
test
mov
jmp
mov
xchg
andl
jl
xor
out
mov
aaa
shrb
push
mov
add
test
aaa
enter
insb
mov
sbb
ds
mov
sbb
dec
js
inc
mov
pop
add
sbb
xchg
jecxz
pop
pop
mov
fbstp
je
shl
outsl
mov
orb
sbb
xor
dec
js
movsb
lods
mov
jo
out
in
les
jecxz
inc
inc
push
and
inc
mov
dec
adcb
xorl
notb
test
ss
mov
adc
popf
push
sbb
push
inc
adc
lds
jl
fsubl
testb
cmp
adc
mov
bound
mov
mov
in
mov
and
sub
ret
popa
dec
and
pop
cmp
ret
jge
sbb
out
cmp
inc
inc
dec
std
test
push
and
inc
loope
push
add
dec
push
push
mov
dec
addr16
adc
or
mov
or
cmc
push
ds
sbb
inc
sbbl
add
add
push
sub
pop
mov
add
add
pop
arpl
add
hlt
or
add
imul
jge
or
push
push
lret
sub
xchg
mov
xchg
mov
gs
test
outsl
dec
dec
aam
int
add
adc
stc
addb
sbb
push
test
xor
fldl
fldenv
je
adc
rorb
test
and
testl
jl
test
sub
xlat
xchg
and
push
test
shlb
pop
pop
jb
pop
xor
jmp
cld
jae
jmp
mov
and
add
std
repz
push
inc
push
std
cltd
adc
fs
int3
cmpsl
es
faddl
or
jae
clc
xchg
push
jge
sar
mov
and
mov
and
lahf
mov
push
inc
lea
mov
les
and
sbb
push
mov
es
bound
int3
sahf
dec
mov
sub
adc
scas
push
jns
inc
lds
push
mov
adc
sbb
adc
sub
insl
punpckhwd
in
repz
shrb
fmuls
adc
inc
adc
pop
inc
popw
hlt
or
push
mov
sub
ret
adc
sub
je
stc
add
push
push
pop
test
pop
push
push
mov
aad
lods
add
sti
jl
xor
adc
mov
mov
push
dec
sbb
mov
jo
stos
add
adc
test
pop
nop
stos
mov
icebp
pop
shll
movl
xchg
push
addr16
sub
stc
pop
outsl
mov
in
or
mov
bound
test
inc
pop
sub
inc
hlt
bound
popa
lahf
mov
ret
je
aam
pop
mov
pop
adc
add
sbb
xorl
adc
andb
loope
sub
jle
sub
fcoml
and
test
sub
in
add
lock
xchg
cmp
pop
pinsrw
xlat
sub
push
sbb
pop
ret
xorps
adc
add
push
jne
lock
xor
jl
push
pop
adc
add
add
pop
into
and
mov
dec
jns
test
sbb
rolb
fcoml
and
xor
jns
jmp
jb
adc
rcll
imul
inc
movsl
inc
fs
sbb
push
push
fdivs
fimuls
out
in
push
sub
jmp
fdivl
jmp
imul
mov
and
or
ret
mov
and
inc
xchg
popf
dec
mov
dec
push
stos
mov
pop
inc
jmp
cmovl
mov
jnp
mov
xchg
pop
int3
xchg
sbb
test
pop
mov
sti
jno
in
or
aam
out
mov
inc
lret
mov
ficomps
or
dec
repz
dec
or
jno
loope
push
lock
push
mov
in
jp
insl
dec
mov
push
fs
xchg
pop
jae
arpl
and
imul
xchg
dec
roll
ficoms
xor
jmp
push
inc
aam
push
fldcw
add
setge
sti
popa
cmp
adc
xorl
aam
or
lea
cmc
adc
imul
or
loope
cmp
mov
sub
push
roll
cltd
inc
or
and
add
mov
enter
adc
mov
insl
inc
in
cmp
or
inc
lock
ss
lock
out
lods
lcallw
and
mov
arpl
push
inc
or
inc
pop
xorb
cli
or
xor
rorb
jae
xor
iret
inc
add
cmp
jo
xor
push
sbb
in
push
dec
sbb
mov
loope
push
cmp
fsub
xor
mov
mov
xor
xchg
int3
sar
sbb
mov
cmp
faddl
lods
mov
sbbl
lahf
clc
sbb
cmp
decl
push
stos
fmul
jmp
push
mov
push
dec
addl
push
movsb
mov
inc
mov
cmp
jb
scas
cmpl
add
sbb
cmp
sub
cmp
repz
scas
sub
fmull
int3
push
andb
loopne
mov
lea
loope
pop
push
leave
pushf
mov
stos
xor
jns
imul
cmp
jp
ss
test
dec
add
and
movsl
cmc
jecxz
adc
mov
inc
addr16
pop
test
lahf
gs
pop
xor
stos
sti
mov
cs
and
cmpsb
das
shrb
daa
mov
add
cwtl
mov
aam
call
nop
dec
xor
or
rclb
inc
mov
loope
imul
dec
cld
dec
push
pop
mov
sbb
mov
adc
xchg
pushf
lods
loope
lods
push
mov
inc
out
cmp
adc
fsubl
je
bound
adc
or
ret
lods
pop
arpl
push
adc
insl
in
addl
xor
loopne
and
sbbb
fsubr
add
sub
or
fld1
or
lods
push
add
jno
pop
push
jl
in
ss
ret
jmp
add
add
adc
dec
and
imul
adc
stc
inc
repnz
push
xchg
or
aas
ds
xor
xchg
push
sysexit
dec
popa
jg
push
mov
inc
repnz
aas
out
enter
dec
scas
push
aas
lock
pop
aas
in
clc
push
push
or
jl
or
shr
sbb
push
sbb
sti
mov
inc
push
xchg
pusha
inc
or
or
or
ret
pop
sbb
in
sub
leave
dec
in
pop
sbb
aas
cmc
mov
cmp
fsubs
sbb
and
test
mov
inc
or
test
xor
leave
and
pop
xchg
cmp
push
xor
fcoml
jmp
xchg
lret
xor
or
inc
mov
push
add
aad
or
jb
repnz
push
pop
xor
and
mov
and
xchg
insl
add
jno
add
adc
dec
add
xor
sub
clc
add
lret
or
fdivrl
inc
enter
jnp
movb
mov
mov
add
cmpb
mov
shrb
call
mov
and
mov
ss
add
pop
xchg
test
add
jb
jns
add
add
test
inc
pop
dec
insb
jecxz
xchg
push
jle
lea
push
sbb
fdivs
adc
xchg
dec
push
add
or
mov
cmp
push
inc
bound
setb
in
or
pushl
inc
or
daa
dec
and
add
or
mov
pop
pop
mov
rorb
mov
push
push
ret
lea
sub
jne
mov
mov
jmp
leave
popa
and
add
lock
cmp
daa
mov
cmpsl
std
lods
and
dec
sahf
insl
mov
mov
insl
pop
xchg
les
adc
xor
rolb
mov
in
cmp
mov
adc
add
in
dec
cwtl
js
dec
adc
push
test
mov
pop
and
jg
aam
test
and
push
xchg
cs
call
jp
xor
cmc
jmp
xor
push
mov
movsb
sbb
arpl
mov
out
loopne
mov
sbb
adc
or
mov
mov
arpl
mov
add
pop
iret
mov
adc
aam
jecxz
stc
jl
cmp
and
pop
rorb
subl
jo
add
in
outsl
mov
fdiv
cvttps2pi
leave
ret
aaa
stos
movsb
adc
add
pop
int
push
pop
je
pop
and
daa
shrl
fld
fsts
mov
mov
insl
fildll
push
pop
xchg
mov
mov
push
add
adc
jb
ja
mov
fcmovnb
adc
jmp
cmp
mov
ficoml
test
rclb
int3
test
or
push
add
dec
sub
push
or
push
or
jne
xchg
nop
add
add
js
sarl
pop
mov
or
fldz
nop
xchg
mov
ja
rolb
adc
test
fwait
xchg
or
push
push
subb
mov
sub
pop
insl
cld
mov
jmp
ja
pop
testb
xchg
jno
and
mov
xor
mov
jno
rol
push
jns
sbb
sbb
mov
insb
les
cmp
and
fs
sub
pop
movsb
cld
adc
pop
test
roll
pushf
mov
dec
fcoml
pusha
mov
xchg
cld
push
or
into
lahf
insb
cmp
jbe
adc
xchg
in
jns
adc
inc
mov
mov
push
jmp
notb
push
divb
xchg
pusha
jns
cs
imul
in
jne
lcall
jbe
fldl
cmp
insl
inc
mov
movsl
orb
dec
cmpsb
pusha
or
out
arpl
js
cmc
addb
aam
mov
inc
aam
pushf
enter
mov
pop
sub
cltd
fistpl
out
mov
movsl
or
inc
loope
add
dec
lcall
std
data16
inc
inc
mov
pusha
dec
in
insb
jmp
push
ret
repnz
xlat
sbb
adc
testb
das
adc
sub
and
add
cmp
sub
repz
mov
les
arpl
imul
inc
sub
cmp
ja
mov
jo
loope
jmp
ss
mov
xchg
push
dec
mov
imul
add
add
add
cmp
lcall
jge
inc
mov
sbb
cmp
ja
push
or
jbe
test
rcr
push
inc
in
repnz
mov
inc
add
mov
pop
inc
sarb
xor
xchg
push
out
pop
xchg
fs
push
dec
test
into
push
int
jg
adc
dec
jl
pop
lcall
shl
xchg
cmp
adc
icebp
cmp
push
pop
xor
shlb
shl
sbb
push
shll
into
lock
fadds
in
mov
push
mov
clc
adc
add
lds
es
pop
pop
in
mov
sub
insb
push
sar
pop
andb
sub
xor
fists
inc
sub
andb
imul
pop
insl
in
fisttpll
mov
or
hlt
movsl
jmp
int3
daa
sbb
lcall
dec
rol
add
lea
cs
ds
or
or
dec
or
and
shr
push
or
mov
in
lock
push
ret
and
test
add
sub
enter
cmpsb
test
push
sar
jecxz
shlb
push
push
push
shrl
testb
repnz
mov
add
or
test
or
adc
cmpsl
or
and
push
inc
inc
loopne
pop
cmp
cmp
and
andl
adcb
fistpll
sbb
mov
inc
adc
jg
or
add
jb
and
pop
xchg
decb
aam
xchg
outsl
shrb
cmp
add
jp
es
test
jl
sti
inc
call
or
and
jl
lock
lret
inc
push
pushl
mov
jmp
rcrb
sti
pushf
movsl
and
add
out
fwait
mov
lods
in
sahf
mov
fiadds
push
in
ret
push
xchg
imul
dec
push
imul
adc
mov
inc
sbb
xor
or
jno
add
xor
add
and
movb
movsl
sub
cmc
pop
dec
outsl
or
adc
lock
and
pop
inc
jmp
clc
mov
add
mov
pop
testl
add
fstpt
ja
adc
std
adcl
or
mov
sub
sbb
or
cwtl
push
and
call
push
push
add
lds
cmp
and
xchg
or
jg
std
mov
mov
addl
pop
jl
loop
and
arpl
inc
pusha
test
mov
aam
rorl
repnz
lret
loope
and
imul
sub
test
xor
test
cmp
add
cld
and
daa
mov
divl
push
sbb
sbb
mov
and
or
inc
rorb
arpl
push
or
inc
sahf
adc
adc
pushf
dec
rol
xchg
jb
jle
dec
pushf
clc
or
pop
adc
cmp
jae
ret
dec
lods
mov
lret
cmp
jg
xchg
xor
shrb
dec
shlb
int3
out
mov
fsincos
jmp
in
mov
or
lret
movsb
jo
ljmp
add
jle
and
inc
outsb
fcomps
pop
pop
scas
rcrb
shlb
hlt
jl
mov
cmp
popa
sbb
push
fs
push
xchg
sbb
andb
push
mov
jl
ret
std
or
push
xchg
lahf
shll
jmp
in
dec
mov
js
push
or
dec
or
or
sub
inc
imul
adc
inc
pop
or
cld
addb
sub
mov
jnp
pushl
add
lcall
addr16
call
neg
ret
repz
popa
push
jmp
fiaddl
inc
adcb
test
je
fwait
popf
and
ret
sbb
cmpl
arpl
xor
pop
sub
push
jmp
cmp
add
fisubl
je
xchg
je
mov
rcrl
mov
jmp
outsl
sub
inc
xor
sbb
sbb
testb
shr
nop
pop
add
scas
enter
testl
push
ljmp
lock
or
cmp
xchg
push
pop
adc
adc
addr16
pop
sbb
cli
add
jne
mov
ja
adc
pop
fcoms
jmp
xor
mov
mov
adc
pop
cmc
add
ss
xor
sbb
add
push
and
pushl
aam
call
shlb
leave
or
inc
cs
mov
push
dec
in
or
mov
pop
xor
in
mov
add
and
mov
push
loope
pop
mov
lea
loop
mov
mov
shlb
jmp
and
shlb
inc
add
pop
add
cmpsl
add
lea
ja
push
jb
div
sarb
xor
jae
adc
clc
mov
cmp
jl
loop
sbb
loop
cmp
push
push
xchg
dec
es
push
jp
sbb
mov
cwtl
sub
add
and
push
inc
sbb
jnp
or
dec
adc
mov
mov
lret
cwtl
mov
cltd
test
lock
mov
jp
cmp
inc
xchg
call
es
cmp
fnstsw
sbb
test
aad
mov
xor
das
or
lret
adc
sbb
adc
jo
repnz
leave
cmp
xchg
mov
or
std
mov
hlt
jne
adc
fcmovnu
out
add
or
push
aad
das
enter
add
adc
pop
sbb
pop
jo
hlt
sub
std
mov
jle
popf
jo
es
mov
cli
ss
ds
inc
push
shl
jne
rorb
or
orl
in
ds
pushf
push
or
or
icebp
adc
and
xchg
movsl
add
jno
inc
addb
jbe
cmpsb
pop
sbb
jmp
lock
dec
add
and
add
mov
testb
mov
dec
hlt
adc
xor
or
mov
jle
out
orb
mov
jbe
add
push
loope
sbb
test
decl
fnstenv
cmp
fstl
orl
ja
mov
fcoms
mov
ret
push
mov
rcl
adc
pop
stos
adc
insb
adc
repz
adcb
cmpsl
push
js
rcll
scas
and
adc
pop
jnp
pop
pushf
and
push
mov
jae
push
adc
jno
xchg
or
add
inc
push
mov
pop
bound
sete
ret
cmpsl
adc
push
fwait
jnp
es
lret
inc
xor
sub
push
subb
outsb
inc
jp
daa
xor
js
sub
adc
popa
xor
jns
inc
into
push
aas
xchg
pop
mov
or
pop
enter
je
cmp
dec
dec
adc
mov
or
inc
les
pop
adc
testb
add
or
and
push
fiadds
jbe
jmp
inc
andl
je
cmp
jmp
push
enter
sub
pop
adc
daa
fwait
shrb
clc
push
push
or
mov
in
push
out
sbb
gs
cmpsb
rorl
das
stc
mov
xor
and
imul
add
pop
adc
push
call
pop
ds
mov
adc
pop
es
jmp
dec
mov
xor
pop
pop
sbb
pusha
insl
push
jne
ret
cltd
and
inc
push
aam
cltd
test
push
lea
fwait
gs
and
mov
sahf
dec
pop
call
in
dec
es
lock
inc
mov
rcll
jo
jae
xchg
lock
dec
fsubrl
leave
mov
test
int3
jne
and
mov
imul
dec
xor
les
xchg
mov
test
in
xchg
pop
cs
nop
in
cmpb
xchg
icebp
cmp
shlb
push
xchg
jl
adc
dec
jb
insb
cmp
int3
inc
dec
xchg
lret
addr16
cmp
push
xchg
add
stc
jl
push
ds
pushf
sub
lds
loope
and
cmp
mov
iret
inc
rolb
jae
sbb
and
cs
lods
addr16
dec
pop
lds
xor
out
adc
xor
push
dec
shll
jne
dec
push
xor
int
pop
in
or
cwtl
pop
aam
mov
add
and
call
ret
pushf
cmp
push
fmull
mov
or
dec
xor
and
sbb
xor
and
and
xor
and
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
leave
rol
push
int
into
sbb
in
or
xchg
mov
loopne
add
xchg
les
enter
nop
int3
rcl
aad
cmp
cmp
stos
dec
es
in
call
scas
leave
ss
push
jge
nop
scas
mov
aaa
xor
adc
inc
dec
or
push
push
lock
xchg
or
cmpb
in
push
in
dec
roll
lock
jge
sbb
movsb
lea
dec
in
loop
sub
and
cmp
inc
ret
adc
sbb
stos
lret
xor
call
cmp
cmp
cmp
in
mul
std
lods
add
out
in
in
push
mov
xor
and
jns
test
pusha
xlat
xlat
enter
xlat
pusha
xlat
pusha
xlat
sbb
cmp
test
mov
pop
dec
fsubs
cmp
push
rclb
mov
repnz
cmp
push
lcall
inc
repnz
pop
call
icebp
and
mov
push
shl
popf
mov
or
call
imul
in
fcom
es
dec
lret
in
push
ret
cmp
inc
or
push
test
xor
bound
mov
cmp
mov
imul
popa
and
cmp
in
clc
cld
cmp
add
adcb
pop
and
addr16
in
mov
in
in
sub
xchg
jb
mov
sbb
push
cmp
movsb
test
push
cmp
les
testb
sbb
mov
shll
leave
push
xor
add
and
or
sbb
mov
das
int
mov
unpcklps
inc
pop
or
push
jb
sbb
outsl
fdivl
cltd
in
arpl
push
pusha
fmull
in
ret
xor
jge
dec
mov
shl
mov
std
push
mov
sti
jno
jb
sbb
mov
in
or
mov
add
inc
and
call
sbb
pop
adc
in
or
nop
inc
push
or
or
and
or
xchg
sub
je
sub
sbb
inc
test
add
gs
je
mov
shll
xor
pop
aas
in
stos
push
adc
shlb
inc
mov
shl
cmc
add
push
sarb
cmp
ret
sub
lods
adc
inc
push
push
sub
mov
xor
adc
dec
push
pop
pop
scas
jmp
lcall
je
js
or
nop
arpl
xchg
rclb
lock
nop
fwait
cmc
addr16
adc
ret
lea
and
dec
adc
arpl
rolb
in
incb
jae
push
cmp
hlt
or
xchg
nop
and
and
test
jnp
aam
add
or
ret
rolb
mov
xchg
add
pop
inc
sbb
inc
fisubl
inc
inc
int
push
xchg
cmp
stos
push
inc
fstps
xchg
push
push
in
adc
faddl
sbb
shrl
xor
nop
ja
and
inc
adc
pop
add
in
lcall
adc
mov
cli
pushf
adc
mov
add
lds
dec
jmp
je
in
push
xor
aad
mov
dec
jmp
xchg
xor
sahf
cmp
cmp
fadds
xchg
xchg
mov
in
frstor
inc
lret
lock
fcompl
sbb
pop
dec
dec
xchg
out
stos
mov
fcom
adc
mov
sbb
jp
mov
imul
cmp
cmp
enter
test
cmp
outsl
mov
movsb
cmpsl
dec
adc
cltd
out
pop
dec
xor
sbb
or
push
xor
imul
stos
mov
xor
dec
nop
or
push
cmp
pop
sbb
mov
cs
jbe
dec
xchg
jne
mov
adc
inc
mov
jmp
inc
jp
orb
sbb
cmp
cmp
sub
mov
dec
lock
sub
je
dec
fmul
pop
xor
lods
aas
cmp
cs
movsl
inc
cmp
cmp
rorb
in
cmp
mov
jmp
xor
mov
mov
adc
xchg
xor
outsb
test
cmp
dec
lods
std
adc
xchg
cmpsl
xchg
mov
shr
nop
test
out
sbbb
mov
mov
push
add
popf
mov
jo
dec
mov
dec
in
fistps
pop
out
jb
int3
add
ficompl
dec
push
sub
in
pusha
mov
adc
or
add
and
mov
daa
push
add
mov
xchg
in
mov
mov
cmp
jnp
nop
loopne
or
subl
push
push
mov
dec
and
mov
fwait
push
insl
sub
insb
cwtl
inc
les
dec
and
jo
sub
clc
sub
inc
scas
inc
je
xlat
mov
inc
int3
mov
and
call
test
xor
add
jne
ja
pusha
add
inc
adc
subl
push
mov
adc
mov
jbe
push
stos
ret
inc
loopne
and
fs
mov
in
fisubrl
dec
lods
imul
or
sbb
push
imull
adcb
xor
mov
or
pop
pop
fdivrl
ds
pop
mov
pop
mov
test
movsb
aaa
es
mov
pushf
mov
inc
je
sbb
shlb
aam
adc
adc
cmovno
sub
in
dec
in
and
fdivrl
mov
inc
mov
and
inc
mov
scas
mov
cltd
lahf
out
xchg
sub
int3
push
xor
ret
test
cmp
mov
xor
aaa
lods
loopne
aam
xor
test
or
in
aam
in
push
mov
aad
pop
enter
inc
subl
sbb
insb
out
dec
out
in
in
sbb
xorb
nop
clc
inc
push
in
push
call
mov
test
pop
cmp
jne
rorb
rcrl
pop
pusha
inc
cs
ror
jg
push
mov
sub
or
les
jno
push
or
ljmp
xchg
inc
dec
pop
inc
cld
pop
sub
jbe
enter
enter
sbb
enter
cmp
imul
nop
dec
outsl
movsb
movsl
andb
add
inc
pop
cmc
test
inc
pop
dec
cmc
mov
pop
shlb
int
loope
call
fs
loopne
mov
aam
aas
nop
test
sbb
and
jb
rorl
outsl
in
dec
mov
unpcklps
add
pop
xchg
xchg
mov
add
nop
mov
xchg
out
or
in
ret
add
adc
rolb
jl
call
pusha
fwait
and
enter
sub
ret
int3
lcall
enter
aam
pop
dec
rorb
movsl
sub
jecxz
out
subl
aam
pop
add
pop
das
call
xorl
pop
aam
inc
push
nop
lret
shll
dec
dec
cmp
arpl
or
pop
pop
dec
pop
movsl
inc
cmpsl
add
mov
pusha
adc
and
xchg
mov
insl
pop
or
add
sub
cmpl
dec
cld
mov
pushf
in
cld
push
nop
imul
or
test
and
and
dec
cmp
push
fisubl
jl
int
pushf
inc
pop
sub
popa
js
push
pushf
mov
dec
pop
inc
scas
dec
hlt
mov
dec
loopne
popa
loopne
arpl
andl
xor
lock
jmp
test
sub
repnz
in
xor
inc
mov
in
pop
jno
push
inc
arpl
loop
scas
or
mov
fsubrs
mov
arpl
movsb
sub
ret
mov
fldt
arpl
test
sti
sar
in
jbe
pop
fs
subb
jo
xchg
xor
les
lret
mov
add
ret
gs
push
inc
aam
push
repnz
sub
xor
adc
push
ror
shlb
xchg
mov
push
push
test
nop
push
movsb
sub
inc
dec
sbb
nop
adcb
test
xchg
mov
addb
xorl
push
jo
inc
push
in
push
and
jge
loop
push
and
sub
lods
adc
fsubs
loopne
out
js
jo
mov
stos
imul
push
notb
dec
mov
std
sub
push
or
imul
push
es
xchg
xor
loope
addl
push
movsl
mov
add
mov
int3
imul
jb
mov
pop
or
dec
cmpsb
pop
divl
lret
lods
mov
push
xchg
pop
leave
push
stos
inc
add
aaa
popa
jge
push
insb
xor
inc
push
sub
aad
cmp
or
test
sub
lods
stos
push
subl
dec
and
je
mov
and
lcall
and
push
xor
movsb
sbb
adc
and
mov
or
add
movups
jo
dec
pop
adcb
arpl
mov
jge
dec
int3
push
les
mov
and
push
dec
shrl
sbbl
adcb
adc
jp
push
sti
ret
mov
push
pop
pop
mov
pop
add
mov
aad
or
mov
loop
add
jo
adc
xor
outsl
enter
mov
hlt
mov
test
inc
mov
test
test
jo
daa
inc
add
push
mov
cmp
lock
nop
cmp
les
aad
inc
sbb
sbb
mov
loopne
stos
mov
lock
fildl
shll
or
mov
cmpb
popa
aaa
in
fwait
push
mov
and
out
mov
sbb
inc
test
mov
test
push
in
push
ret
jae
aaa
je
inc
sub
add
and
je
mov
mov
or
test
lock
call
pop
jne
shrl
jne
add
adc
xchg
sbb
xchg
jne
sub
jbe
inc
cs
data16
int3
jno
ret
fistpl
dec
test
or
sbb
jmp
cwtl
stos
adc
dec
pop
fnstenv
cmc
imul
mov
mov
jecxz
jae
mov
xor
divl
pxor
imul
sbb
and
xchg
xchg
pop
mov
sub
nop
cs
pushf
add
gs
std
mov
enter
xchg
dec
xchg
je
or
rclb
or
and
mov
arpl
or
pop
fs
in
adcb
das
jne
pop
xchg
imul
xchg
test
xchg
cmp
add
or
pop
lods
in
adc
loopne
pushf
testb
test
fwait
pusha
sub
inc
xor
or
inc
shll
mov
jnp
inc
cmp
adcb
dec
fsubrp
outsl
mov
jne
adc
imul
xchg
and
mov
sub
push
push
les
cwtl
pusha
in
add
inc
push
jno
jl
push
scas
leave
dec
lahf
adc
out
and
and
xchg
int3
out
in
xor
or
mov
xor
mov
dec
fisubrl
mov
or
jge
sub
jg
mov
outsb
fnsave
loopne
aam
adc
mov
test
push
and
in
jae
or
adc
sbb
in
and
xchg
shll
cmp
adc
imul
fisubrl
adc
sbb
dec
mov
pop
aad
sub
dec
es
ss
in
sub
dec
jb
add
xor
pop
add
jno
sub
cmp
push
dec
test
sbb
cltd
movsb
adc
lock
sbb
and
lcall
push
test
and
nop
jmp
leave
loopne
shlb
sbb
int3
in
orb
in
xor
fadd
sub
fadd
in
xorl
in
mov
add
subl
xor
or
or
mov
lods
bound
enter
or
rorl
push
stos
and
adc
or
cmpsl
mov
xchg
cmpb
lods
cmpb
xchg
inc
scas
sbb
xchg
add
or
jmp
add
push
xchg
data16
sti
xor
int3
cwtl
inc
or
and
cltd
in
xor
incl
ret
sbbl
in
mov
fsubs
movsb
push
adc
xlat
adc
ja
add
lods
stos
aas
popa
test
and
add
rcrb
rolb
loope
test
cmp
inc
pop
inc
addl
inc
and
cmp
fcomps
adc
xor
sbb
arpl
and
mov
pop
mov
loopne
mov
pusha
sub
push
mov
inc
or
in
and
bound
inc
in
or
mov
cmp
cmpxchg
inc
aad
aaa
pop
xchg
icebp
mov
xchg
jbe
push
add
psubsb
mov
cs
push
push
or
sub
cmp
sbb
dec
rcrl
mov
inc
jne
pushf
and
mov
mov
push
test
nop
push
push
inc
cwtl
or
jo
inc
pusha
mov
push
mov
jne
xor
xor
nop
mov
mov
mov
xor
xor
outsb
pop
dec
mov
insl
xor
xor
loope
lea
or
lea
clc
fninit
adc
push
or
dec
loop
or
sbb
push
lods
push
fcoml
dec
or
inc
dec
adc
je
lea
rolb
aam
or
mov
inc
add
popf
rclb
nop
pop
and
adc
sbb
aaa
xlat
or
mov
daa
pushf
inc
das
pop
enter
call
mov
int3
mov
mov
adc
add
adc
enter
enter
pop
sbbb
insl
adc
push
sbb
lea
dec
mov
mov
or
pop
shrl
loopne
mov
fisubrl
sub
pop
in
add
xor
mov
sbbb
jecxz
addr16
rol
push
ret
xor
push
cltd
sub
lds
cmp
mov
push
rcrb
inc
sbb
push
adc
pusha
xor
jns
or
and
xor
ss
add
cs
rorb
rolb
adc
ret
adc
repz
subb
jno
xchg
jmp
xchg
xchg
cmp
enter
stos
test
stos
shrb
xor
arpl
mov
in
push
sbb
lock
xchg
stos
test
loop
cmp
push
lods
sub
in
sub
add
stos
push
das
in
lods
and
hlt
fcmovne
rcrb
adc
loopne
dec
cltd
int3
insb
mov
mov
adc
add
push
sbb
mov
or
inc
subb
loope
test
xor
in
or
adc
mov
rorb
jns
icebp
cwtl
push
jge
mov
jb
push
dec
mov
test
rcll
mov
adc
mov
sbb
mov
insl
sbb
mov
inc
pushf
insl
fstpl
sub
hlt
fadds
cmp
cld
inc
faddl
cld
hlt
inc
xor
pop
enter
fs
xor
mov
mov
mov
or
xchg
cmp
mov
add
and
lcall
test
add
lock
test
adc
cltd
fadds
cltd
sbb
nop
int3
fwait
push
sub
outsb
jp
jb
add
pop
cmp
sti
test
cltd
ss
push
jl
nop
dec
test
pop
scas
adc
popa
add
jmp
dec
fwait
cwtl
adc
and
scas
push
jbe
xor
cwtl
cltd
dec
and
push
inc
inc
and
jl
cwtl
sub
andb
or
add
adc
in
push
pop
testl
es
aam
addr16
jmp
shlb
ja
sub
mov
js
rclb
inc
or
lods
icebp
jne
test
sarl
xor
stos
iret
lds
adc
imul
push
dec
pusha
sbb
aam
repz
lahf
pusha
dec
gs
inc
in
test
inc
out
xor
jns
xor
arpl
ja
scas
sbb
lock
sub
mov
sti
mov
jne
adc
xlat
addb
jl
call
push
and
jne
cltd
dec
pop
and
mov
cltd
out
push
lret
aam
cmp
adc
or
pushf
aad
or
add
jb
sub
int3
add
ja
pop
xor
adcb
popf
adc
in
out
nop
iret
adcb
lods
mov
sub
fiaddl
mov
cltd
movsb
mov
loopne
sub
es
les
je
clc
fcomps
pop
movsb
inc
xchg
xchg
adc
nop
outsl
fs
sti
jo
mov
dec
movsb
enter
imul
inc
push
movsl
jl
xor
cmpsb
sub
jmp
inc
mov
xlat
cmpsb
push
cmp
sub
jecxz
and
lock
lock
enter
and
xor
add
and
repz
cmp
cmp
stos
subl
icebp
addr16
push
pop
int3
shl
or
inc
in
clc
test
subl
jb
cs
lret
std
bound
mov
add
js
lods
idivl
pop
addr16
mov
out
shl
xlat
es
xchg
xchg
or
test
mov
ljmp
shrb
lods
mov
jno
sub
lods
sbb
xor
lods
aas
lock
jecxz
and
lods
dec
pop
orb
adc
in
dec
gs
nop
xchg
mov
lock
scas
or
jg
dec
xor
add
test
movsb
in
jecxz
in
pop
cmp
lods
in
arpl
mov
shlb
scas
insb
jmp
nop
stos
lods
scas
arpl
lock
scas
loopne
or
mov
fs
leave
sub
mov
jo
scas
scas
enter
push
dec
push
sbb
call
mov
pop
add
jns
ret
lds
lods
stos
jg
cmpl
jb
lret
mov
stc
pop
sub
mov
jle,pn
pusha
mov
mulb
aam
sbb
iret
pushf
mov
mov
push
lds
call
cmpsb
mov
inc
mov
jg
jmp
scas
in
cmpl
test
xorl
mov
scas
inc
dec
xlat
push
nop
push
in
mov
inc
adc
mov
ret
imul
sub
xchg
sub
jbe
and
pop
call
jnp
lcall
ffree
cmp
sub
push
and
cmp
push
cmp
and
and
adc
lea
cmp
inc
push
mov
scas
jne
out
or
pusha
add
inc
xchg
fs
pop
sarb
push
sub
stc
stos
jle
popa
push
pop
orb
add
lock
mov
add
mov
lret
cli
jmp
leave
add
ljmp
and
leave
push
dec
lret
jp
jge
cs
pop
nop
jo
int3
sub
aaa
jmp
orb
jl
inc
mov
adc
movsb
ret
loope
test
mov
mov
shrl
adc
fstl
mov
jno
pusha
out
pusha
push
pop
insl
mov
add
jns
pop
adc
pop
repz
out
jnp
xor
sarb
mov
lods
push
mov
int
mov
add
fiadds
push
mov
shl
fwait
mov
aas
add
cld
rolb
pop
mov
mov
ljmp
add
fistpl
repnz
decl
clc
jnp
mov
add
and
push
jmp
rolb
das
mov
rcll
xchg
adc
or
cmp
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
cmp
fisttpl
js
lods
out
out
sahf
testb
pop
fs
cmpsl
test
pop
jbe
and
popa
cmpsl
lock
rdpmc
add
smsw
sbb
sub
pushl
cmpsl
arpl
and
insb
outsl
arpl
imul
jg
outsl
jb
js
je
jb
gs
push
insl
add
arpl
outsl
add
outsl
out
add
add
add
je
push
dec
mov
arpl
jne
jb
outsb
je
inc
imul
pop
mov
add
arpl
popa
das
jo
insl
or
mov
push
push
sahf
negl
lret
jae
add
out
jbe
in
add
and
add
je
insl
xchg
das
das
and
push
cmovno
ficompl
push
mov
cmp
add
jbe
dec
dec
je
outsl
mov
and
jne
outsb
jnp
mov
add
insb
out
pop
repz
push
ljmp
negl
push
jne
push
ror
mov
popa
and
pusha
rorl
das
pop
jbe
push
pop
imul
iret
jns
jge
fdivs
out
out
popa
fcmovb
insl
out
sahf
jne
arpl
pop
mov
pop
inc
jae
push
mov
cmpsb
sbb
pop
out
mov
fwait
jbe
addr16
ds
imull
sbb
mov
jg
movsb
mov
jo
insl
insl
cmp
repz
sbb
fs
dec
and
jns
jno
jnp
add
das
das
adc
dec
push
std
loop
dec
inc
inc
gs
bound
dec
outsl
jbe
push
fisttpll
outsl
adc
jo
sub
in
jge
jne
jne
xor
insb
xchg
outsb
xchg
jle
je
inc
jo
imul
xchg
rolb
adc
into
cmp
outsb
jns
int3
cmp
xchg
addr16
into
jne
lcall
mov
push
data16
push
gs
sbb
dec
jae
mov
xor
push
jne
xchg
pop
cmp
inc
aas
add
inc
add
divb
incl
fildll
scas
ljmp
in
jne
into
jmp
inc
inc
adc
push
cmp
imul
fcomi
testl
or
dec
repnz
fiaddl
inc
cmp
dec
adc
jnp
lea
dec
into
inc
inc
aas
cmp
push
add
xor
mov
aad
sub
aaa
and
scas
pop
arpl
and
jecxz
loopne
mov
daa
scas
insl
push
push
lcall
mov
outsb
mov
or
pop
cmp
repz
aas
imul
ds
jp
pop
or
mov
gs
xorb
bound
outsl
jmp
dec
ja
aaa
jo
mov
jnp
orl
insl
sub
push
pop
addl
push
fidivrs
jb
sub
data16
imul
sbb
xchg
push
mov
sub
ret
or
jnp
arpl
lahf
pop
pop
or
popa
push
outsb
inc
fcmovu
jno
jnp
pop
or
sbb
loopne
daa
inc
imul
out
xor
in
ds
je
adc
sbb
out
movsl
cmp
mov
xchg
mov
mov
iret
xor
fbld
inc
mov
scas
das
jb
ret
fiaddl
cs
movaps
stc
bound
add
fs
add
or
popa
sub
push
or
pop
roll
ja
or
inc
ror
fbstp
mov
fistpll
scas
jne
jbe
aad
pop
fidivs
jne
pop
inc
scas
pusha
sbb
imulb
jae
mov
sbb
jg
push
adc
ljmp
fstp
lahf
outsl
aas
and
iret
arpl
xorl
push
mov
inc
add
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
ror
mov
sbb
sbb
outsb
inc
sub
das
jae
mov
adc
aas
jnp
in
inc
pop
insl
pop
stos
nop
imul
sbb
adc
inc
fisubrl
jg
xor
mov
jecxz
outsl
pop
push
push
xor
fidivrl
mov
or
addr16
lret
xchg
ja
jge
add
or
in
loopne
cwtl
adc
mov
inc
mov
rcrb
cmp
in
sbbb
sbb
das
pop
mov
dec
and
jb
enter
jns
jp
cld
pop
cmp
cmp
scas
add
mov
imulb
mov
sarb
add
push
mov
dec
jb
das
or
mov
add
cmp
mov
clc
pop
es
insl
idivl
imul
jge
ja
outsl
ret
inc
adc
sti
mov
and
adc
shrb
xor
and
sub
sub
cs
xor
pushl
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
xor
mov
jb
push
aad
hlt
vaddss
pop
pop
in
cli
jmp
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
jl
divb
pop
or
pop
loopne
insb
adc
and
repz
ret
mov
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
dec
push
imul
insb
outsl
outsl
pushf
rcrl
push
arpl
sub
mov
add
jo
xor
popa
js
mov
imul
stos
test
outsl
push
sub
fidivrs
sub
insb
insb
adc
adc
test
add
add
add
add
jns
push
cld
and
push
pop
push
add
xor
push
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
push
or
loopne
mov
jbe
outsb
imul
push
and
jo
add
sbb
push
push
add
sub
movsl
push
rorb
xchg
or
dec
sahf
lea
mov
nop
xchg
xchg
xchg
dec
repnz
xchg
mov
mov
lods
je
jns
or
nop
inc
push
xchg
movsb
mov
inc
push
sbb
into
fsubl
test
ljmp
mov
push
dec
and
call
xchg
and
ucomiss
sbb
and
add
and
jl
dec
add
test
push
adc
adcb
mov
enter
add
push
add
add
in
loopne
add
add
stos
subb
mov
incl
adc
sbb
push
mov
add
pop
adc
out
mov
add
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
or
jno
and
and
test
xchg
je
aas
pushl
add
add
lahf
push
adc
sbb
test
push
jae
jb
bound
arpl
outsw
jb
icebp
popf
mov
ss
popa
mov
addr16
icebp
imul
daa
pop
lea
dec
sub
addr16
outsl
js
push
add
push
pushf
insl
jg
and
insl
jo
jo
and
and
insl
or
shlb
aaa
insb
les
dec
imul
jns
inc
mov
cmp
add
inc
gs
inc
jb
jns
daa
scas
inc
fwait
xchg
pop
and
gs
loopne
mov
insb
and
in
or
in
and
addr16
cmp
outsb
jle
jbe
mov
arpl
jns
outsb
pop
jb
and
je
xchg
pusha
inc
jbe
push
jbe
mov
jns
stos
sbb
insl
and
fisubs
popa
in
out
cwtl
jle
pushw
inc
inc
clc
mov
lcall
cmp
push
and
inc
inc
pop
es
push
mov
dec
lahf
lock
divb
fmuls
or
mov
dec
mov
push
push
jae
or
outsl
add
mov
pusha
insb
call
jae
cmp
subl
gs
adc
sub
cmp
xchg
inc
push
push
push
push
dec
testl
dec
and
xchg
aam
enter
loope
adc
fildll
mov
lock
imul
call
inc
test
jg
xchg
ret
jae
inc
in
lock
imul
je
mov
rcll
jne
adc
jns
pusha
push
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
repz
repz
push
das
push
sub
repz
jl
jle
mov
imul
sub
lret
loopne
imull
pop
push
cmp
push
ds
xchg
and
cmp
sbb
dec
pop
pop
jne
dec
adc
jb
sbb
push
jb
imul
adc
xor
gs
xorb
mov
add
push
data16
test
cmp
jo
sub
dec
cld
jl
scas
fs
repz
jnp
mov
je
idivl
push
inc
xor
int
insb
mov
and
cmp
jnp
push
sbb
or
cmp
cld
sarb
out
lcall
push
cmp
sahf
idivl
in
push
js
push
in
fidivrs
loopne
fcompl
push
aam
repz
ror
enter
cmp
repz
mov
lods
mov
xchg
mov
cmp
dec
sub
mov
enter
sahf
test
push
cmp
repz
ror
les
mov
out
ss
xor
mov
mov
sahf
jo
sub
cmp
or
mov
push
test
lds
lock
mov
insl
push
test
outsb
push
xor
jb
loope
insb
in
pop
push
das
push
mov
enter
sbb
jae,pt
jb
xor
aas
cmpsl
ficoms
pcmpgtw
mov
add
inc
dec
push
push
fdivrp
push
or
and
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
xchg
das
push
dec
mov
mov
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
lret
sbb
enter
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
popa
push
or
scas
int
lahf
inc
mov
sahf
leave
loop
mov
xchg
dec
inc
scas
mov
inc
lods
dec
lock
xor
pop
mov
pop
jg
dec
enter
hlt
and
es
mov
flds
sbb
add
inc
add
jbe
push
dec
push
push
adc
or
outsb
jbe
js
ja
and
imul
mov
push
into
mov
cmp
push
pop
pop
or
sub
jg
push
ss
sbb
adc
sbb
sbb
dec
sub
push
sbb
jg
sub
or
or
xor
sub
inc
jge
mov
ds
jno
jb
jbe
push
dec
ss
cmp
add
xchg
add
or
adc
sbb
xor
pop
push
or
mull
sar
pop
pop
dec
sbb
jbe
pop
push
or
aas
out
divb
sub
inc
sbb
cs
inc
dec
ret
push
insl
idivb
cmp
add
cld
add
cmp
inc
std
cmp
sub
dec
push
movhps
add
sbb
dec
mov
push
push
adc
push
inc
inc
add
sbb
dec
and
cmp
pop
pop
adc
adc
adc
mov
adc
add
push
inc
sbb
outsb
push
push
or
or
imul
mov
pop
aad
push
sub
inc
ret
lahf
pop
dec
add
add
inc
cmp
sub
adc
fisttpl
pop
push
xor
cmp
sbb
or
dec
jns
push
ds
dec
sub
push
inc
sbb
push
int
imul
dec
push
xor
das
sbb
mov
cmp
rorl
push
push
cmp
xor
adc
cmp
sub
fimull
sti
outsl
adc
jle
xor
sub
sbb
and
js
sub
mov
jo
sbb
inc
and
es
pop
push
lock
mov
adc
inc
pop
inc
dec
inc
es
pop
push
dec
pop
push
mov
or
inc
inc
cmp
inc
dec
push
in
sub
sysexit
push
xor
loope
shll
ja
pop
push
push
mov
or
cmp
xor
adc
sti
call
dec
nop
dec
cwtl
in
push
cmp
mov
jns
cmpsb
xor
push
push
lret
mov
sahf
lods
test
sbb
cmp
cmp
mov
iret
xorb
push
inc
add
repz
xor
jl
mov
cmp
push
aas
jmp
pusha
inc
inc
cmp
or
fwait
cltd
mov
dec
push
or
pop
adcb
push
popa
ret
lock
fs
arpl
cmc
push
scas
repnz
gs
mov
jne
cltd
add
pop
mov
test
push
dec
bound
js
filds
sahf
cvttps2pi
fwait
and
mov
stc
push
leave
push
fmul
repz
lds
sahf
idivl
fwait
pop
movsb
jae
cs
mov
push
cmp
js
cmp
pop
inc
push
loope
lods
mov
addr16
je
push
adc
pop
lock
loope
sub
mov
ds
push
aaa
sub
sbb
js
pop
xor
test
call
push
out
pop
add
push
sbb
sbb
sbb
and
jne
fisubrl
pop
movsb
and
insl
jg
jae
or
dec
pop
inc
pop
sub
pop
mov
bound
cmp
dec
push
pop
cmpsb
or
dec
sbb
outsb
jmp
mov
dec
cmp
jb
push
pop
pop
mov
dec
xor
push
insb
push
push
push
inc
lock
xor
cmp
or
sbb
push
xchg
imull
xor
mov
ud2
or
or
lret
or
ds
pop
dec
inc
hlt
ret
adc
out
xor
in
sbb
push
out
push
dec
hlt
int
xor
adc
push
push
dec
dec
jbe
mov
ret
cmpsl
stc
xor
mov
ds
xorb
gs
movsb
push
cli
jo
ret
xor
xor
xor
imulb
test
cld
cmp
scas
test
pop
sbbb
cs
and
sub
xchg
sbb
dec
mov
lods
xor
imulb
outsb
jae
or
or
mov
shrb
push
adc
sbb
xchg
dec
or
push
cmp
mov
data16
or
mov
adc
js
cmp
add
fstps
out
sub
or
daa
shll
and
inc
push
ja
stos
pop
xor
sub
jo
or
cs
jle
mov
in
sbb
pop
sbb
inc
push
in
sbb
sbb
adc
xchg
inc
add
sbb
cli
lret
pushf
mov
or
dec
sbb
fisttpl
inc
andl
sbb
inc
or
push
sbb
sub
sub
xor
xor
adc
pop
adc
pusha
addr16
cmpsb
mov
in
xor
in
xor
ss
cmp
mov
cwtl
pop
jle
adc
into
loope
test
scas
daa
int
xor
in
sbb
pushf
jmp
sub
lods
popa
push
mov
fs
jmp
xor
rorl
xor
sub
test
sub
xor
push
mov
push
push
xlat
adc
mov
inc
pop
cli
push
hlt
xor
cmp
or
add
pop
or
push
aas
push
add
stos
scas
and
dec
mov
into
xchg
push
dec
dec
pop
andl
xor
mov
shrb
mov
out
lock
outsb
inc
lret
and
ljmp
xor
xor
dec
sar
mov
add
jle
and
or
dec
fisubrs
insl
andb
dec
daa
insb
fimull
popf
mov
pop
push
or
pop
push
rolb
or
or
inc
and
call
cmc
pop
add
dec
sub
cwtl
mov
ja
dec
and
xchg
push
pop
dec
mov
xor
adc
xor
sub
push
xor
sbb
push
pusha
cmp
pop
ss
inc
push
insl
in
or
pop
and
sub
stos
sbb
add
inc
sbb
int3
dec
xchg
or
inc
lds
sbb
sub
pop
xor
xor
push
xchg
sub
jg
jp
jo
outsl
js
sub
imul
add
sub
and
das
add
sarl
sub
jecxz
push
inc
and
push
push
inc
es
or
lds
sbb
add
or
loopne
push
adc
xor
insb
clc
aas
pop
sub
jmp
adc
mov
push
sbb
mov
fimuls
js
xlat
daa
fnstenv
dec
aaa
aaa
add
insb
sub
inc
xor
push
sbb
push
pop
jnp
jle
aaa
sbb
pusha
popa
sbb
cmpsl
aam
push
lret
rcr
sub
repz
js
leave
adc
jae
inc
ret
and
mov
or
sbb
push
inc
movsl
mov
inc
stos
and
cmpsl
cmpsb
cmp
push
pop
repnz
mov
xchg
ds
int3
lods
call
pop
bound
jle
mov
fimuls
push
push
je
and
inc
rcl
jae
popa
pop
je
lds
pop
jo
mov
mov
and
test
mov
cwtl
orb
fcoml
inc
cmc
sahf
int
push
adc
dec
adc
notl
adcl
cmp
pop
push
push
dec
jecxz
add
xor
mov
add
call
test
ret
dec
push
adc
sbb
pop
push
xor
inc
push
movsl
or
push
mov
das
mov
pop
xor
add
cmp
push
aaa
or
aaa
xor
sub
jl
adc
adc
sub
sub
pop
addb
cmp
push
or
or
push
mov
mov
xchg
add
insl
pop
xor
das
lds
cli
popf
sbb
xor
add
or
add
adc
lcall
icebp
cmp
enter
or
dec
xor
add
push
inc
add
dec
bound
clc
push
inc
jb
addl
push
dec
or
mov
and
sub
xchg
int
inc
and
fwait
xor
pop
sbb
pop
dec
add
mov
push
mov
or
cltd
xor
addr16
pop
das
pop
dec
je
xor
or
mov
adc
or
and
push
dec
inc
mov
pop
dec
es
loopne
mov
lock
or
int
scas
shll
out
pusha
mov
insb
cmpsl
and
push
push
cli
pop
imulb
stc
imulb
sub
sub
sarl
mov
repz
out
ss
mov
mov
pop
pop
and
dec
xor
sbb
sub
in
push
jo
lret
push
push
repnz
or
aas
cmp
dec
cmp
in
lret
lock
add
pop
xor
inc
inc
iret
subl
and
sbb
movsb
push
mov
inc
fadds
push
or
sub
xchg
cwtl
xor
sub
push
ss
mov
pop
and
mov
pop
jg
or
inc
adc
xchg
pop
pop
mov
out
and
xlat
adc
bound
data16
loopne
inc
adc
sbb
in
stos
les
mov
and
and
jns
sbb
je
sub
and
mov
fdivs
adc
aam
cmp
cmp
adc
jnp
test
inc
jnp
and
mov
cltd
push
and
push
jnp
adc
cltd
mov
roll
mov
leave
mov
push
stc
push
jo
fwait
pop
and
lahf
or
mov
pop
aaa
pushf
or
and
lea
xchg
cs
das
push
test
and
imul
ljmp
stos
or
push
lahf
mov
sbb
incl
leave
ljmp
orb
sbb
or
sub
stc
xor
pop
sbb
adc
add
insb
mov
or
js
xor
push
jns
xchg
mov
call
xor
mov
push
adc
and
inc
inc
add
inc
push
and
adc
addb
adc
inc
push
adc
or
mov
mov
inc
sbb
push
inc
sbb
adc
sbb
loope
aad
sbb
and
sbb
jbe
pop
js
add
pop
jg
jno
pop
push
inc
cs
test
scas
and
mov
out
xor
mov
add
pop
inc
cmp
and
sub
pop
jge
dec
cmp
adc
fstpt
adc
pushf
xchg
add
dec
add
adc
testl
pop
mov
fidivrl
mov
scas
inc
or
xor
jbe
sub
sbb
test
or
gs
sub
imulb
fstpt
test
adc
fidivs
xor
sbb
insb
mov
pop
xor
push
call
movsl
or
xchg
aaa
adc
fstpl
ja
jmp
adc
jne
not
inc
imul
inc
stos
mov
cmc
lahf
and
mov
and
cmp
aad
mov
or
dec
cmp
jns
in
ja
push
insl
daa
xor
pop
sub
sbb
aaa
subl
es
jl
and
fcoms
and
jmp
in
dec
sbb
dec
out
lahf
dec
lods
dec
push
pushl
mov
gs
gs
pop
add
cs
xchg
shlb
arpl
add
sbb
scas
inc
add
xor
inc
and
push
push
xor
and
or
lea
xor
dec
cmp
in
outsl
ds
mov
pop
adc
pop
sub
and
add
cmp
test
imul
push
mov
mov
or
ret
movsb
fs
test
jecxz
push
pusha
push
gs
or
mov
pop
cmp
mov
sbb
fisubrs
inc
mov
aam
lock
sbb
dec
and
adc
adc
sbb
aam
mov
xchg
decb
xor
jg
clc
stc
push
adc
push
inc
add
xor
push
or
inc
cmp
mov
pusha
pop
shrl
testl
mov
ret
ret
aaa
cmpsl
jae
fildl
andl
push
je
add
mov
ja
fs
push
lret
dec
push
outsl
jb
jp
push
or
sbb
bound
add
xor
jmp
cmp
addr16
pushf
rolb
sub
pop
inc
jb
dec
xchg
or
push
ds
lods
jecxz
push
sbb
insb
mov
push
mov
fldcw
push
leave
shrb
mov
mov
adc
adc
inc
lds
shll
push
ja
sahf
mov
jle
fcmovb
jns
push
repz
mov
mov
cmp
fs
sbb
jl
cld
fdivrs
gs
arpl
lcall
push
aaa
stc
jbe
cmp
push
push
jg
pop
xchg
sbb
fidivrl
mov
shlb
cmp
add
sahf
insb
adc
das
pop
pop
ds
sahf
add
push
add
jns
cmpsb
ja
pop
inc
push
cmp
push
icebp
jmp
cmp
jne
jo
arpl
xor
lcall
fldl
punpckhbw
dec
sarb
sub
add
dec
mov
add
inc
dec
or
push
add
jb
and
dec
inc
or
mov
jb
inc
loopne
and
pushf
loop
adc
dec
int3
inc
jbe
ljmp
xor
add
xchg
mov
inc
faddl
push
mov
fisubs
rorb
sahf
sub
dec
add
add
test
arpl
add
or
pcmpeqb
or
mov
push
xlat
std
ret
jbe
or
adc
orl
jbe
inc
std
xor
les
cmc
or
popf
sbb
xor
or
jge
sbb
inc
shrl
inc
dec
add
xor
cmp
jb
sub
add
loope
push
test
dec
mov
sbb
lock
jne
sbb
cmp
adc
pop
xlat
push
inc
or
outsl
or
jo
pushf
lcall
mov
imul
das
in
xor
dec
and
cmp
and
push
rorl
inc
add
imul
les
test
inc
addr16
inc
stos
es
sub
add
pushl
push
inc
push
pop
push
push
push
inc
dec
dec
dec
inc
mov
mov
inc
outsb
arpl
jmp
add
outsb
pop
fs
sub
adc
xlat
mov
add
pop
push
adc
sbb
push
mov
pusha
cmpsl
sub
das
adc
add
inc
lods
push
mov
pop
stos
pushf
les
sbb
lock
shlb
mov
mov
mov
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
and
fdivr
dec
fsubs
sbb
in
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
adc
mov
pop
push
inc
rorl
aaa
aaa
push
inc
push
dec
or
xchg
mov
mov
dec
push
dec
cmp
pop
push
dec
dec
and
jnp
fistl
and
outsl
push
dec
imul
jg
pop
cltd
in
pop
or
sub
fisubrl
das
fsubrs
das
enter
dec
dec
jb
xor
cmp
cmp
pop
pop
and
pop
inc
mov
insb
inc
js
xor
inc
add
push
repnz
loope
cmpsb
dec
pop
int3
cmp
pop
cmp
push
pop
xor
ffree
test
dec
mov
cmp
cmp
outsl
fwait
ljmp
inc
sub
mov
inc
xor
cltd
sbb
mov
inc
xor
jmp
scas
and
test
daa
mov
jo
add
pop
mov
lock
js
ss
stos
jb
cmc
gs
pop
jbe
push
mov
xchg
xchg
jne
or
imul
imul
ds
xchg
and
push
xor
dec
xor
arpl
arpl
das
dec
or
arpl
xor
movsb
mov
das
lods
insl
das
imul
adc
add
inc
dec
and
dec
outsl
and
int3
jns
jecxz
sbb
pop
psraw
dec
jno
pushf
js
sub
or
test
decl
das
adc
pop
pop
ret
cmpsb
xor
inc
dec
inc
es
push
out
into
adcb
mov
push
pop
xor
fisubs
mov
adc
jle
cmp
ret
and
inc
dec
xor
dec
jns
loopne
pop
xorb
push
sbb
fdivrl
mov
push
or
mov
in
das
aas
or
loope
push
cmp
ror
jno
xchg
dec
mov
cmp
push
push
and
push
lahf
fidivl
data16
shll
push
cmp
test
adc
mov
jo
jl
shl
addl
cmp
popf
outsl
pop
add
xchg
push
sahf
out
sahf
xchg
mov
fidivrs
jne
xchg
pop
scas
push
sub
cs
pusha
dec
pop
cmp
lds
pop
mov
es
adc
add
push
mov
sub
rep
mov
push
jle,pt
daa
in
jge
popa
pop
push
mov
xchg
in
lds
lret
mov
es
jg
iret
fstpt
sbb
mov
push
xchg
cmpsl
pop
scas
imul
addr16
mov
cmpsl
mov
sbbl
fwait
out
mov
in
push
mov
pop
decl
cmp
scas
pop
cwtl
pop
jb
and
insb
fisubs
push
or
imul
movsb
pop
ss
out
sbb
push
stos
push
fucomip
stc
mov
fstps
push
lahf
imul
jb
mov
iret
jnp
out
mov
push
jle
idivl
mov
loope
lret
sahf
lcall
sahf
or
fimuls
adc
cld
push
ret
repz
ss
out
dec
cs
insb
mov
repnz
nop
push
pushf
fwait
scas
inc
ljmp
mov
fmull
loopne
test
out
cmp
adc
out
imul
jbe
sarb
addr16
nop
call
repz
out
xchg
adc
push
test
sbb
push
xchg
xchg
mov
sbb
sahf
mov
sbbb
xchg
and
jns
xchg
pop
sub
ss
repz
mov
cwtl
push
xor
cmp
out
mov
jns
int
fwait
add
inc
pop
iret
out
sahf
jl
ret
or
roll
in
jmp
xchg
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
pop
jnp
decb
test
mov
pop
in
bound
mov
loopne
mov
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
add
xchg
mov
data16
and
testl
push
sub
push
addr16
dec
arpl
rclb
xchg
dec
aas
mov
cmp
sub
ja
sbb
out
inc
imul
cmp
sbb
dec
mov
in
inc
xlat
ja
push
cmc
movsb
xchg
dec
cmp
xor
xor
dec
test
pop
cmpsb
dec
cmp
dec
xor
push
inc
pop
scas
dec
xchg
dec
fisubl
in
xlat
push
aaa
fiaddl
cmc
loope
fists
das
push
xacquire
push
repnz
cmpl
xchg
outsb
iret
or
retw
dec
int
or
ret
pop
bound
mov
inc
es
push
add
xacquire
fs
es
mov
mov
dec
inc
adc
push
adc
dec
inc
inc
cmp
pop
cmpsb
icebp
out
mov
sbb
dec
pusha
push
inc
pop
inc
dec
in
dec
mov
sbb
dec
push
xor
aaa
scas
sbb
adc
test
cmp
pop
push
inc
cmp
and
aas
inc
adc
xor
cmp
data16
icebp
inc
dec
cmp
push
xor
popa
stc
push
xor
and
mov
xor
das
xor
aas
inc
add
ds
cwtl
and
mov
jbe
aaa
inc
push
inc
jl,pt
ds
jmp
inc
add
pop
pop
add
das
xchg
inc
pop
mov
mov
dec
das
or
outsl
cwtl
das
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
jmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
decl
or
or
cs
ret
sub
xchg
mov
data16
mov
push
insb
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
call
jo
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
jb
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
mov
sbb
lods
loope
js
shlb
das
inc
js
xor
insl
push
outsb
push
bound
push
pop
aaa
cmp
xor
data16
jb
or
pop
cld
pushl
or
and
pop
cmp
addr16
dec
inc
in
and
lcall
pop
dec
das
inc
inc
push
xor
sbb
call
push
xor
and
dec
inc
dec
jno
or
push
add
inc
mov
jo
imul
jecxz
or
imul
xchg
cmp
xor
push
push
aas
cmp
mov
bound
cmc
cmp
sub
insl
fsubr
or
dec
cmp
fiaddl
dec
dec
lcall
or
in
das
sbbl
out
push
xchg
xor
subl
jle
add
cs
dec
sub
ficompl
mov
cwtl
int
outsb
push
xor
add
nopl
inc
orb
mov
shll
pusha
adc
inc
cmp
imul
mov
push
cmpsl
ret
and
ret
out
ds
rol
adc
jp
flds
sahf
pop
mov
or
sbb
pushf
mov
xor
dec
dec
sbb
push
sub
addb
dec
test
push
sbb
adcb
mov
sub
sbb
add
push
scas
div
popa
sbb
add
cmp
lret
pop
mov
push
loopne
add
jge
dec
push
andl
and
sbb
xchg
mov
and
mov
add
andb
rorb
fisubrs
fildl
xchg
xor
pop
add
cmp
and
movsb
mov
pop
and
pop
add
inc
jle,pt
fsubs
xor
dec
adc
push
js
add
mov
insl
bound
test
into
adc
or
adc
dec
fisttpll
subl
or
addr16
daa
outsb
outsb
je
xor
add
or
jo
jbe
ss
addr16
insl
gs
cmp
pop
mov
xchg
dec
cmpsl
ret
loopne
and
inc
aad
adc
ljmp
loop
push
push
pop
out
sbb
push
dec
pop
inc
outsl
outsl
add
out
jl
push
popa
je
inc
jg
insl
psraw
sbb
and
mov
dec
dec
adc
cs
out
push
gs
pop
pop
sub
dec
xor
sbb
movsb
popf
or
sbb
adc
sub
jmp
inc
loopne
mov
cmp
adc
push
inc
test
andl
incl
daa
adc
fs
stos
and
or
and
mov
ficompl
inc
adc
sub
imul
stos
pop
xchg
icebp
sub
call
lock
add
inc
test
test
jg
xor
inc
fdivrl
push
pop
push
cmp
add
adc
dec
nop
sub
sbb
add
pop
fs
shlb
dec
mov
aaa
add
ja
jb
pop
dec
adc
add
pop
inc
jne
mov
xchg
xor
adc
shrb
cmp
cmp
shrl
out
out
adc
jne
sub
push
push
cs
jl
push
sarl
xor
inc
fiadds
imulb
add
and
adc
adc
push
inc
mov
andl
sub
xor
daa
jg
sbb
dec
hlt
xlat
fs
jo
xor
rorb
test
pop
xchg
dec
sub
sub
pop
push
or
lcall
pop
sub
out
inc
add
scas
fwait
js
ss
cmp
pop
addr16
popa
je
hlt
dec
fdivrs
rcrb
mov
sub
and
and
sbb
scas
pop
jo
push
mov
xchg
mov
mov
inc
sub
xor
incb
cmp
rorb
push
push
and
cmp
pop
xchg
xor
adc
sub
arpl
sbb
dec
movsl
push
adc
jg
sbb
lahf
push
xorb
sbb
ja
arpl
jp
outsb
jns
popa
and
add
outsb
sbb
rorl
into
lds
cmp
sarb
push
mov
or
sub
add
dec
inc
mov
imul
andb
arpl
mov
pop
jnp
aas
push
or
fiadds
pop
pop
cmc
mov
pop
es
dec
push
jnp
lcall
pop
fisubs
insb
movsl
mov
dec
fisttps
repz
cs
push
push
inc
sub
enter
shll
pop
call
decl
adc
inc
push
pop
and
out
push
or
inc
insl
mov
push
inc
outsb
mov
dec
push
cltd
add
cs
mov
add
push
out
pop
add
sub
inc
dec
and
insb
vmread
into
inc
and
inc
int3
xor
mov
pop
add
cmp
mov
adc
jo
adcb
rorb
mov
sub
fnstenv
or
dec
pop
sbb
js
out
das
mov
mov
jae
push
fimull
outsl
dec
roll
outsl
and
cmp
lcall
imul
dec
outsb
push
je
scas
dec
adcl
or
and
push
push
inc
dec
push
inc
dec
xchg
inc
clc
pop
push
dec
inc
dec
mov
xlat
jb
gs
inc
sarl
daa
inc
fwait
pop
aad
rorl
push
add
lock
insl
inc
or
pusha
sub
sub
add
and
pop
sarb
inc
push
inc
add
lcall
pop
lcall
add
sar
jne
push
add
push
aaa
or
mov
es
ret
jb
enter
pop
adc
push
shr
inc
es
or
inc
and
add
sahf
sbb
je
shlb
dec
adc
packuswb
jo
and
jno
outsl
aas
ds
into
lcall
and
inc
pop
leave
push
inc
xchg
or
divl
xor
xor
xor
xor
xor
add
and
xor
cmp
xor
cmp
push
ss
aaa
push
sbb
aaa
cwtl
add
fistl
clc
xlat
jo
push
add
push
inc
mov
cmp
outsb
mov
enter
adcl
add
ljmp
sub
add
cmp
mov
sbb
sub
rolb
dec
cmp
adc
ljmp
movsb
xchg
sub
sbb
or
and
sbbl
pop
push
push
scas
adc
fimull
adc
push
inc
dec
or
xor
inc
enter
pushf
sbb
mov
aas
neg
imul
inc
fcoms
hlt
sub
pop
inc
jbe
and
aaa
cwtl
xorl
adc
xchg
aaa
push
or
cmp
sbb
test
mov
push
inc
pop
push
push
sbb
dec
sub
pop
ja
out
pop
sub
xor
cmp
out
mov
cltd
fwait
andb
xchg
pop
add
adc
js
add
rolb
add
sub
das
dec
jns
data16
fisubs
sub
xor
inc
mov
neg
jnp
mov
mov
mov
insb
ss
int
xchg
sbb
sub
add
data16
das
or
adc
mov
insb
ds
add
add
fwait
int
push
push
dec
str
mov
insb
or
and
das
incl
cmp
ficoms
mov
je
and
inc
adc
faddl
rclb
pop
ret
add
das
sub
add
rep
push
aaa
push
fidivs
mov
xor
clc
xorb
push
push
and
mov
ds
hlt
sbb
xor
pop
and
sbb
daa
mov
jo
dec
jnp
ret
cmc
xor
in
push
adc
aaa
movsb
jge
arpl
mov
lods
daa
and
mov
fidivl
mov
stos
xchg
dec
call
daa
mov
daa
jge
mov
lods
ss
divl
movsb
popl
mov
ret
cmp
dec
pop
pop
test
jno
jp
imul
or
mov
xchg
mov
inc
xlat
cs
loopne,pt
into
icebp
mov
dec
dec
inc
repnz
mov
sarb
or
pop
dec
imul
adc
das
mov
lock
add
mov
pop
xchg
outsb
lods
dec
shrl
pop
xor
push
andb
pop
addr16
sbb
pop
lret
xchg
dec
xor
aaa
mov
xor
xchg
xchg
pop
and
cmp
in
push
mov
mov
aaa
sub
push
rolb
mov
arpl
jb
xor
js
push
lods
push
test
pop
adc
lea
outsb
sbb
inc
cmp
and
fistps
add
js
fdecstp
es
xchg
ja
mov
pop
shll
aad
pop
add
call
stc
and
inc
jp
dec
in
push
xchg
imul
cmp
push
sub
call
pop
adc
lahf
cmp
das
ss
pop
clc
andb
or
inc
mov
adcb
add
imul
add
mov
push
fcompl
or
dec
add
ss
call
sbbl
aaa
push
add
fs
push
mov
ja
jb
cmp
xchg
or
dec
imul
adc
pop
lret
mov
or
add
test
pop
das
test
xchg
pop
sub
loope
mov
mov
and
clc
je
or
lret
jb
mov
mov
dec
fdivr
blsic
xchg
xchg
lret
inc
sbb
dec
sbb
enter
enter
dec
enter
mov
mov
inc
movsl
repz
movsb
aas
lods
cltd
pusha
fs
push
cs
pop
dec
sbb
pop
arpl
sbb
jle
ja
adc
bound
pop
or
inc
sbb
mov
stos
adc
cmp
push
sbb
cmp
or
sub
stos
or
nop
or
pop
add
arpl
jne
pop
sbb
or
mov
sbb
pop
add
insb
push
or
pop
fs
pusha
dec
jmp
xchg
sub
mov
pushf
sub
sub
je
iret
and
dec
cmp
cmpsb
aas
mov
dec
push
jb
dec
fimull
xor
inc
lret
xchg
or
lods
push
inc
jo
or
out
mov
pop
aad
sub
aas
es
shlb
addr16
mov
shll
je
push
aas
push
pop
jo
push
aas
aaa
dec
pop
fisttpll
ret
xorl
fnsave
pop
mov
call
xlat
sub
and
xor
lret
xchg
rcll
mov
mov
sub
lret
xorb
int3
ds
push
pcmpeqd
push
adc
or
mov
jge
adc
int3
ds
push
jmp
and
jns
and
add
fcompl
add
or
pcmpgtd
daa
push
push
fistl
pop
rcrl
stos
mov
into
add
add
adc
push
cmp
pop
aaa
cld
push
pop
push
add
inc
push
adc
ss
or
xor
add
pop
test
or
pop
sbb
add
push
ss
mov
out
cmp
add
sbb
add
sbb
adc
incl
inc
add
adc
pop
adc
inc
xor
dec
and
or
sbb
adc
add
mov
mov
jg
out
pop
dec
aas
or
ds
pop
adc
sbb
push
sub
cmc
out
mov
push
dec
pop
push
aas
pop
push
pop
add
inc
sbb
sbb
dec
and
lcall
sub
add
or
aas
xor
dec
inc
cmp
ss
or
inc
or
cmp
push
adc
pop
loopne
call
adc
ss
xor
dec
sub
dec
xor
cmp
shl
mov
loopne
idivb
xor
cmp
push
push
push
push
testl
and
push
test
pop
pop
jo
orb
popa
xor
cmp
es
inc
sbb
add
cmpsb
xor
or
or
testb
push
mov
lahf
sahf
mov
add
gs
sbb
xchg
mov
xor
xchg
ss
inc
pop
pop
mov
xchg
xor
cmc
sbbb
outsl
je
and
push
push
mov
xchg
push
ds
aad
push
push
lret
add
sbb
inc
pop
push
sub
in
cs
jb
add
cmc
pop
xor
push
sub
sub
push
leave
sti
jg
push
inc
push
dec
inc
dec
push
dec
add
xor
lods
ss
outsl
jne
add
sub
xchg
add
inc
jnp
mov
scas
mov
or
inc
pavgb
ja
das
inc
popl
lock
movswl
jge
and
cmpb
aas
jg
jo
mov
pop
pop
inc
aas
add
and
inc
push
stos
or
std
adc
daa
es
sbb
xlat
dec
add
mov
add
in
adcb
insb
daa
add
jnp
or
add
ffreep
inc
mov
inc
es
fdiv
data16
add
push
shr
inc
add
insb
add
inc
and
aaa
or
lahf
mov
pop
push
daa
stc
push
cmp
daa
or
push
fs
pop
xor
xchg
out
dec
nop
bound
enter
add
out
enter
in
add
push
fmull
xchg
or
dec
int3
add
fisubl
lock
cmp
dec
mov
daa
cli
sbb
test
sarb
nop
ja
or
jnp
shlb
push
scas
sbb
sbb
cmpb
movsb
add
xor
add
jg
enter
add
and
add
aaa
outsb
shlb
cmpsb
divb
add
call
and
test
mov
add
fmulp
push
fdiv
sahf
outsl
push
subps
js
and
add
mov
sti
xor
out
dec
lods
in
jns
clc
les
xchg
dec
sbb
loopne
lock
enter
add
test
lea
sub
cmp
inc
aas
cmp
stos
addr16
cld
and
rcrb
pop
push
xchg
add
in
jns
rorb
cmpsl
clc
ja
push
in
mov
shlb
mov
ret
add
xchg
cld
outsl
shufps
cwtl
ja
dec
sub
notl
xor
cmp
jo
stos
xlat
data16
das
or
xor
mov
mov
sbb
addr16
cmp
inc
sbb
out
push
insb
push
jbe
das
dec
daa
pop
add
adc
mov
inc
inc
sub
xchg
sub
mov
add
mov
jb
mulb
adc
sbb
push
adc
sbb
fdiv
insb
sahf
and
mov
nop
out
cmp
je
add
sub
repz
sbb
aam
fs
sahf
pop
repz
push
ds
push
iret
repz
push
push
adc
mov
adc
test
jo
loopne
lds
ja
and
push
push
pop
es
mov
mov
inc
pop
enter
ss
jo
inc
jns
jle
and
aaa
adc
repnz
fiadds
fists
pop
test
pop
fdiv
push
or
into
es
or
mov
add
pop
and
xor
add
je
leave
adcl
jb
dec
push
add
sub
in
outsl
and
inc
push
leave
mov
inc
std
nop
inc
push
adc
and
sub
outsl
inc
outsb
add
inc
and
cltd
lods
inc
addb
lods
fldl
enter
outsl
cmp
in
and
dec
ss
add
jns
mov
pop
sbb
incl
scas
mov
pop
out
seto
add
out
xchg
je
xor
adc
dec
add
jb
mov
in
sub
cltd
and
add
inc
outsb
and
pop
adc
rorb
fbstp
jmp
mov
pop
enter
sub
fdiv
dec
mov
pop
cmpsb
mov
aaa
cltd
inc
ds
test
mov
xlat
add
enter
sbb
fdivp
mov
lods
out
lahf
jmp
and
mov
add
cwtl
ja
and
jbe
mov
subb
ja
xchg
or
sub
sub
fimuls
jns
cmp
dec
push
pop
fists
add
and
xchg
je
call
outsl
and
add
xor
sbb
sbb
fs
in
pop
jbe
call
add
enter
out
cmpsb
pop
add
xchg
push
adc
add
inc
add
inc
mov
and
mov
cmp
outsl
sbb
outsb
jbe
pop
in
pop
addr16
mov
add
aaa
xor
rorl
dec
pop
pushf
xchg
aad
scas
sbb
mov
out
pop
push
push
push
int3
fisubrs
shr
push
mov
sub
xchg
test
xchg
inc
push
xchg
pop
sbb
sbb
dec
subl
push
ja
adc
adc
or
shl
push
mov
ficompl
push
mov
xchg
add
outsb
mov
stos
daa
testl
scas
pop
test
in
and
fcomps
inc
mov
pop
test
mov
or
fnstenv
adc
push
dec
or
or
add
enter
insb
lahf
test
mov
mov
add
xlat
or
and
pop
adc
jns
mov
add
icebp
add
sub
pop
cmp
ret
add
inc
mov
and
ss
seto
add
pushf
add
loopne
fiadds
pop
js
add
in
cmp
mov
pusha
and
xor
add
outsb
sub
nop
insb
add
daa
nop
sbb
mov
aaa
pusha
cmp
shr
xchg
add
add
add
test
daa
pop
and
add
add
xchg
and
xor
movsb
leave
cmpb
mov
pop
dec
sub
aam
and
and
push
and
fildll
push
lods
push
or
pop
sbb
pop
js
and
out
sub
aaa
add
sub
mov
pop
and
cmpsl
add
pop
inc
add
data16
mov
outsl
xlat
add
iret
test
scas
call
add
adcl
out
xchg
pop
mov
in
push
sahf
addr16
sbb
enter
mov
out
push
or
repnz
adc
imul
mov
and
insl
dec
mov
add
dec
pop
pop
or
insb
cs
in
and
xchg
push
in
mov
sub
add
ss
test
enter
add
faddl
xchg
fiadds
add
lods
and
add
sub
adc
adc
addr16
sbb
test
scas
ss
out
or
add
and
add
hlt
data16
pop
enter
aas
cmp
ss
addr16
or
inc
sarb
lahf
daa
or
sbb
inc
add
mov
pop
fistl
int3
insl
xchg
outsb
rolb
pusha
ljmp
or
imul
testl
out
dec
sbb
xlat
repz
iret
cli
cmp
sbb
inc
xchg
out
sahf
dec
jg
ficomps
pop
es
ja
out
xchg
call
jno
cmp
sarl
ds
popf
sarb
repz
pop
and
cmp
repz
and
lahf
ret
lcall
orl
ljmp
cmpsl
jne
es
jae
sub
testb
int
fstl
push
push
jmp
sub
imul
cmp
fs
cmc
sbb
mov
jns
sub
add
lcall
adc
repz
sub
xchg
stc
sbb
inc
xorb
push
xor
ja
out
mov
push
cmp
repz
clc
sbb
ds
jl
out
test
repz
sarl
pop
andl
jae
cmp
mov
sarl
lods
inc
cmp
lahf
test
cmp
iret
sarl
shlb
inc
push
iret
sarl
mov
fldenv
imul
inc
add
jl
xor
int
jns
inc
addr16
lcall
and
jg
lahf
out
stos
int
adc
ss
out
std
pop
dec
xlat
mov
sub
repz
and
sahf
out
inc
outsb
xchg
out
ds
repz
call
xor
out
into
sub
push
xchg
rcrb
xchg
lret
xor
in
xor
xchg
push
lahf
out
sahf
pop
andb
iret
repz
subb
out
ss
fldl
pop
push
stc
cmp
repz
mov
jns
cmpsl
sub
in
repz
or
dec
jno
mov
out
cmp
std
and
cmp
repz
or
sahf
data16
pop
pop
adc
popa
xchg
ds
sarl
pusha
xchg
adc
int
imul
int
stc
dec
imul
loop
imul
repz
out
pop
insb
mov
repz
out
insl
jnp
loope
outsb
out
ds
mov
xor
repz
out
jo
outsl
xchg
mov
cmpsl
stc
cmp
add
mov
xor
jne
jbe
lahf
out
cmp
clc
push
ja
outsb
jns
data16
xor
mov
ss
dec
mov
push
fistpll
adcl
xorb
ja
jl
out
mov
and
iret
mov
push
int
test
out
sub
jns
repz
out
in
xchg
push
out
cmp
jo
mov
and
dec
arpl
iret
mov
iret
repz
xchg
enter
jns
out
xor
aam
repz
repz
idivl
out
mov
push
mov
push
in
lea
sti
sbb
lcall
lods
or
int3
nop
loope
or
xchg
out
or
add
addr16
add
adc
and
adc
dec
push
fs
or
lret
test
cmpl
loopne
mov
aas
add
push
movsb
lahf
cmp
push
xchg
bound
push
push
fisubl
sbb
pop
xlat
aas
fcomps
pop
fdivs
pop
les
rorb
mov
push
loope
add
push
adc
inc
shll
xchg
aas
lods
bound
scas
fdivr
xchg
and
into
pop
mov
cmp
rcrl
dec
push
pushf
leave
push
es
sub
in
push
xlat
incl
add
sarb
add
icebp
leave
sub
jnp
pop
mov
dec
mov
adc
lahf
push
data16
repz
daa
xor
lods
pop
xor
pop
shlb
dec
inc
dec
pop
push
or
or
sbb
jg
xor
add
sbb
inc
xor
out
lea
fidivs
push
jle
xchg
mov
inc
xor
xchg
mov
xchg
xchg
mov
mov
fists
in
xchg
xchg
out
mov
fsts
and
sub
mov
xor
cmpsl
push
cld
jb
jb
pop
gs
dec
jb
jb
jge
xor
imul
dec
cs
icebp
cld
enter
or
add
adc
jb
sub
xor
ds
rcr
push
leave
rolb
data16
arpl
pop
add
cli
add
frstors
dec
xor
mov
insb
xchg
dec
dec
adc
or
and
rolb
add
fcomi
mov
sbb
enter
add
pushf
pushf
pop
and
push
inc
xor
popf
jp
add
adc
shll
jns
daa
sbb
adc
jl
jb
jecxz
pmaxsw
stc
add
add
and
syscall
sbb
and
enter
or
push
or
inc
mov
or
or
in
xchg
js
adc
sbb
test
adc
xchg
and
pop
out
sbb
sbb
scas
or
and
xlat
ss
lcall
aaa
sbb
xchg
xchg
fsubrl
mov
push
jo
cs
aaa
mov
divl
jb
clc
push
mov
xor
enter
add
add
imul
daa
jns
inc
cmp
cs
inc
lcall
mov
movsb
add
in
int3
push
cmovae
dec
jb
mov
pcmpgtd
and
jb
shll
mov
xchg
adc
prefetchnta
ja
and
mov
cmp
pcmpeqd
jp
cmpsw
adc
scas
loopne
or
hlt
daa
sbb
in
inc
dec
adc
and
out
mov
mov
ucomiss
ja
add
push
add
mov
aaa
adc
rorl
and
mov
xchg
pop
fildl
movhps
mov
in
adcb
push
inc
add
xchg
xchg
outsb
dec
ja
in
leave
dec
dec
dec
jnp
cmp
mov
daa
pop
lods
mov
add
lret
je
rclb
shll
inc
cmp
adc
leave
enter
xor
cmp
inc
daa
pop
in
fimull
aam
insb
je
push
xor
xchg
mov
push
mov
sbb
and
pushf
dec
adc
fsubs
mov
adc
jmp
add
push
push
inc
and
in
mov
mov
loop
dec
dec
jb
adc
add
jae
je
adc
xchg
iret
add
push
push
add
sub
arpl
imul
dec
jae
dec
or
fwait
fs
xchg
inc
or
insl
mov
cmovg
cmovo
fcomps
pushf
fcompl
jne
cmpsl
add
inc
lcall
pop
pop
lock
or
into
and
sahf
add
fiadds
out
out
leave
enter
add
addl
and
fdivl
sarl
push
push
xchg
lret
xchg
arpl
imul
mov
inc
pop
add
cwtl
aaa
mov
xchg
mov
mov
rolb
sbb
jb
fldl
add
and
pop
or
adc
and
xchg
and
push
pop
pop
pop
data16
jb
jno
jl
xchg
xchg
dec
dec
dec
popf
test
or
mov
decl
or
and
repnz
in
add
testl
add
inc
mov
add
cmp
xchg
mov
or
insl
sbb
sbb
hlt
cmp
jns
add
cmp
loope
push
add
sbb
dec
inc
mov
and
das
add
jb
enter
add
pop
add
pushw
jno
cltd
mov
lods
mov
int
cmp
fsub
pop
pmaxsw
stc
or
add
ud2
sbb
imul
push
ds
adc
test
lods
mov
cmpsl
sbb
cmp
enter
add
inc
mov
add
mov
loop
incl
movsb
cmp
push
in
fidivrl
aas
push
pop
mov
daa
pop
jg
mov
xchg
mov
xchg
sahf
add
jb
fucomip
out
inc
repnz
inc
add
push
daa
sub
call
cmp
inc
add
cmp
enter
add
xchg
mov
jae
or
adc
jb
aam
leave
dec
cs
xchg
inc
add
hlt
lea
cld
sbb
data16
dec
push
aas
sbb
cmp
add
pop
leave
dec
ja
add
shlb
and
push
sub
fmull
dec
and
dec
adc
xor
inc
jb
add
jb
push
sbb
push
push
add
aaa
inc
xor
xchg
jbe
leave
leave
leave
leave
test
gs
leave
add
roll
pop
leave
dec
adc
push
add
cmp
dec
cs
enter
push
cltd
add
cmp
mov
mov
pop
xchg
and
rorl
loope
stc
jb
enter
or
or
inc
mov
movups
sbb
and
femms
or
or
or
xchg
xchg
xchg
xchg
or
push
add
add
add
xchg
xchg
push
xchg
add
movsb
or
pop
cmpsl
jns
outsb
mov
ja
jg
push
dec
xor
cmpsl
loop
lods
xchg
jmp
mov
mov
xchg
mov
cld
mov
add
dec
inc
mov
and
inc
add
fistps
bound
push
jp
pop
and
out
dec
pusha
popf
push
add
inc
xor
mov
dec
cmp
pop
push
sub
xchg
fsts
cmp
das
insl
in
enter
pop
pop
pusha
pop
and
fldl
inc
xor
popf
aad
add
push
sti
loopne
or
rcrb
inc
repnz
in
testb
cmp
lcall
add
repnz
pop
and
dec
mov
pushf
test
dec
cmpsl
and
push
jb
enter
add
add
jb
push
inc
dec
or
cltd
cmp
popa
insb
or
ja
mov
cwtl
adc
scas
das
loope
jmp
xchg
add
movsb
sub
xor
dec
add
pop
packsswb
push
adc
xor
fbld
lods
add
fldl
push
add
adc
fcomps
and
jl
mov
lahf
mov
pop
jb
lret
jb
mov
adc
xchg
pop
call
cs
dec
cs
mov
les
mov
ficoms
xchg
insl
push
or
leave
sub
xor
jmp
add
xchg
xchg
add
and
jmp
in
cmp
mov
sbb
repnz
in
das
dec
inc
mov
or
std
or
push
ror
xchg
daa
push
or
or
leave
movsl
rcpps
pop
in
mov
je
andb
lods
add
mov
fcomps
sbb
cmp
fadds
loopne
psubsb
add
pop
mov
dec
dec
adc
push
add
mov
push
insb
cmpsl
sub
push
leave
add
and
mov
sbb
cwtl
daa
rclb
mov
jnp
push
mov
xchg
pushf
add
orl
and
and
leave
dec
sbb
loopne
in
leave
fxch
lock
movntps
or
pop
in
fs
adc
or
sub
fstp
fxch
xor
iret
sub
das
je
mov
mov
add
test
mov
adc
ds
or
add
in
push
notl
daa
xor
addr16
inc
mov
mov
mov
add
enter
add
add
cmp
sub
pop
or
pop
or
or
xchg
and
or
or
or
dec
push
pop
pcmpgtb
outsl
adc
adc
fiaddl
sub
pop
and
ret
jb
enter
lret
add
add
add
sbb
cmc
add
add
add
or
jmp
in
or
mov
xchg
xchg
pop
push
xchg
test
add
js
in
and
in
fwait
cmpsb
sub
shl
lahf
sahf
int
jb
pushf
mov
jmp
inc
mov
xor
push
sbb
lea
and
leave
inc
xor
cmpsl
push
mov
leave
leave
leave
push
pop
pop
pop
subl
shll
insl
loopne
daa
pop
in
push
pop
pusha
call
outsl
push
add
jb
enter
rolb
repnz
in
jmp
comiss
add
cwtl
xor
pop
test
sbb
hlt
or
pop
and
sub
ljmp
test
lea
xchg
add
xchg
and
add
sbb
jb
lds
int
aad
fisttpll
xchg
and
in
in
or
xchg
xchg
or
or
xchg
xchg
xchg
xchg
pop
push
add
xchg
add
sbb
sbb
jb
xor
sbb
inc
mov
xor
cmp
in
popa
in
es
mov
sbbb
dec
pop
or
jbe
xchg
xor
pushf
sbb
cmp
add
in
add
add
mov
std
outsl
xor
movaps
fisttpl
xor
out
in
mov
jae
xchg
add
xchg
add
jbe
push
test
out
fs
add
shll
xchg
shl
xor
xchg
xchg
and
mov
mov
mov
sub
push
jbe
data16
pop
jmp
aas
fistps
mov
scas
addr16
mov
cltd
movswl
iret
add
add
filds
out
notl
xor
pmulhuw
pop
or
sbb
xor
aaa
adc
inc
adc
int3
sahf
mov
addr16
sbb
popf
add
pop
push
das
push
in
enter
add
jmp
mov
out
add
loope
and
pusha
sbb
cmp
daa
sub
repnz
jnp
cmp
mov
dec
btc
pop
fs
insb
movzwl
push
jl
das
mov
daa
mov
add
mov
ljmp
in
add
or
and
and
sbb
or
or
or
xchg
push
pop
arpl
adc
xor
jmp
scas
xchg
pushf
and
jmp
loopne
rorl
xor
mov
add
pop
adc
sbb
testb
push
and
ds
add
das
pop
cmpsl
bound
daa
insl
nop
xchg
and
lcall
inc
mov
aad
mov
mov
jmp
jb
mov
addr16
xchg
ffreep
leave
sub
push
jno
js
movswl
fsts
jae
pmulhuw
in
jnp
addl
add
jb
pop
mov
xchg
or
pushf
pop
or
or
push
ja
adc
adc
push
repnz
fs
daa
jo
dec
insb
into
pop
popl
xor
fimull
iret
in
flds
cmp
add
inc
add
mov
jb
add
add
imul
rorb
push
add
gs
pusha
xchg
jo
lcall
fisubl
int3
xchg
pop
jb
call
cmp
or
cs
jge
daa
push
add
ds
add
es
mov
fistpll
clts
xchg
nop
inc
jo
add
mov
jnp
add
fcmovne
enter
movsl
cmpxchg
sbb
jb
mov
or
pop
pop
lea
or
pop
or
xchg
cmp
push
inc
add
mov
add
fs
cmp
mov
setne
xchg
and
mov
push
fucom
in
roll
push
add
or
test
and
cmp
aas
cmp
lar
sahf
mov
pop
add
add
daa
push
xchg
xchg
and
pop
dec
or
in
leave
push
push
add
or
or
aas
push
pop
packuswb
outsl
xchg
daa
and
adc
adc
leave
enter
push
lahf
cmpsl
syscall
jo
subb
call
call
add
enter
cmp
unpcklps
pop
scas
inc
mov
popl
cmp
imul
add
xchg
insl
scas
push
add
pop
das
dec
inc
mov
cmp
push
push
jb
add
xchg
and
pop
jp
orb
in
fs
or
sub
ror
push
ret
out
adc
nop
pushf
dec
push
in
mulb
idiv
dec
mov
cmp
push
add
dec
dec
inc
push
or
cs
ds
or
mov
mov
adc
and
mov
xchg
add
in
addb
ret
xchg
xchg
inc
xchg
imul
in
rorb
insb
sbb
cmp
jb
out
and
push
iretw
xchg
mov
lock
fiaddl
insb
sub
daa
fbstp
bsf
mov
xor
add
pop
daa
nop
aaa
fildll
aas
add
dec
aaa
mov
or
adc
hlt
fsubrs
pop
xor
xchg
xchg
in
xchg
mov
and
mov
pop
add
insl
inc
shrl
insl
mov
leave
orb
in
in
in
mov
mov
add
or
or
or
or
or
loopne
enter
incl
inc
or
and
cmpsl
outsb
cmp
push
imul
xchg
imul
test
lods
add
xchg
mov
jmp
mov
inc
add
outsb
xchg
mov
pop
les
add
outsl
jb
sbb
notb
xchg
daa
mov
pusha
push
or
push
pusha
inc
rcr
repnz
mov
mov
addr16
push
mov
in
addl
jns
insl
push
inc
add
or
lds
pop
adc
ljmp
add
jo
mov
or
call
insl
push
pop
clc
pop
inc
jno
and
jb
filds
push
add
xchg
xchg
xchg
add
outsl
jb
in
ja
jg
xchg
add
in
jb
mov
inc
loope
incb
jno
adc
and
inc
in
inc
outsb
cmp
in
push
adc
iret
ja
dec
cs
xor
inc
xor
pop
xchg
add
movlps
dec
jle
jae
mov
xchg
inc
inc
inc
inc
cmp
xchg
inc
push
rcr
pop
psrad
pop
sahf
mov
or
cli
or
daa
and
or
or
adc
movsb
pop
add
and
loope
dec
push
mov
dec
sbb
add
cs
dec
cs
clc
mov
je
loope
movaps
push
iret
add
je
scas
add
cmp
inc
aad
daa
push
leave
imul
shlb
push
pop
pop
add
pop
into
jno
pop
inc
push
jb
and
fnstsw
or
popf
inc
xor
popf
movsl
add
xchg
fcmovne
enter
loopne
xchg
mov
add
fucom
inc
push
hlt
imulb
xchg
xchg
jbe
push
and
and
xchg
pop
add
pushf
int3
sahf
test
jl
xchg
and
add
xchg
xchg
xchg
or
int
xor
jbe
in
xchg
jl
ja
clc
daa
add
mov
add
and
daa
daa
daa
sub
daa
daa
daa
outsl
mov
daa
fdivp
dec
daa
mov
xchg
adc
jp
leave
enter
push
nop
fwait
paddsb
enter
sbb
out
pop
cmp
mov
out
decl
dec
xchg
mov
dec
and
and
out
dec
js
inc
xor
push
jno
je
inc
jb
xchg
mov
jb
and
leave
inc
std
jns
push
and
sahf
mov
decl
inc
add
sbb
filds
in
in
mov
pop
and
fnstsw
or
adc
cs
and
inc
lods
mov
fmuls
add
xor
pop
and
pop
dec
and
pop
cmc
mov
cs
dec
mov
leave
dec
cs
loopne
jl
in
mov
xchg
mov
cmp
cmp
add
dec
inc
mov
push
lret
pop
ficoml
or
pop
or
fisubl
add
dec
cs
test
dec
dec
pop
das
leave
inc
cmp
dec
imul
leave
leave
movsb
lods
scas
xor
enter
add
mov
pop
dec
nopl
jb
dec
pop
dec
pop
dec
sub
inc
mov
dec
push
mov
mov
lcall
mov
addr16
mov
rorl
fisttpl
leave
enter
or
or
jl
in
sti
push
cmovg
ud2
out
adc
pop
or
sub
pop
push
add
add
add
add
push
add
orl
mov
xchg
or
inc
mov
or
shll
enter
adc
adc
adc
jl
call
or
in
xchg
and
sbb
sbb
mov
jb
sbb
bound
and
pop
andl
and
jb
cltd
and
xchg
and
lds
shlb
fldt
jb
in
out
icebp
sub
or
jns
stc
push
add
or
adc
pop
fcmovb
dec
mov
out
push
pop
dec
daa
and
add
das
push
dec
jb
push
ja
jg
jo
or
out
mov
xchg
push
push
mov
add
daa
daa
inc
roll
add
pop
mov
outsb
and
push
push
add
push
leave
leave
enter
add
aaa
leave
leave
leave
leave
push
imul
repz
repnz
ud2
adc
dec
inc
mov
adc
add
xor
outsl
lea
mov
mov
inc
sahf
pushf
rcr
pop
jecxz
add
mov
xchg
add
daa
pop
das
aaa
leave
enter
push
jae
jnp
repnz
sub
mov
iret
add
cs
xor
testl
xchg
xchg
pop
push
cmovle
addl
add
add
xchg
mov
jnp
dec
fimull
push
iret
mov
dec
aad
fldl
out
in
pop
jb
sbb
enter
mov
add
xchg
mov
orb
daa
cmpsb
loope
daa
test
jb
inc
mov
stos
cmp
cmp
add
roll
xlat
inc
inc
mov
add
add
xchg
daa
daa
push
sbb
and
in
fs
or
or
fs
push
pop
adc
adc
jns
jle
adc
inc
sahf
mov
sbb
cwtl
and
sbb
loope
inc
pop
sahf
mov
mull
pop
add
lahf
lea
fistps
and
jns
pusha
adc
fmull
pop
sahf
fsts
cmpsb
add
in
xchg
mov
into
cmp
or
or
out
or
mov
decb
pop
push
adc
enter
add
adc
enter
es
cs
ss
pushf
lcall
inc
cmpsl
push
sarb
add
sbb
xchg
xchg
arpl
xchg
mov
in
or
add
jns
daa
daa
mov
jno
pop
and
or
mov
in
dec
or
rcr
add
fucomi
mov
psubw
cmp
sub
sub
xor
pop
cmp
call
pop
movq
jb
jg
mov
pusha
jb
mov
pushf
mov
mov
xchg
mov
or
std
pop
add
mov
adc
in
xor
xchg
das
xchg
xchg
add
mov
pushf
pushf
pushf
pop
imul
popf
pop
and
cmpsb
scas
xchg
pop
cmp
test
je
jb
jmp
mov
mov
sbb
sahf
int3
sahf
and
pop
sub
add
inc
daa
and
push
dec
push
dec
leave
inc
cmp
mov
dec
mov
movsb
add
cmpsl
int
in
in
fucom
in
daa
xchg
xchg
out
cmc
cmpsl
push
cld
pop
sbb
repnz
sub
xor
mov
push
pop
test
arpl
jae
in
and
xchg
xchg
sahf
mov
scas
mov
push
mov
sub
insl
in
mov
push
pop
add
or
xor
fs
add
add
jns
pop
cmp
mov
or
lahf
push
call
pop
pop
add
outsl
ja
dec
inc
sahf
int3
pop
jg
add
xchg
daa
and
shrb
outsb
daa
daa
pop
ljmp
inc
pop
or
inc
sahf
mov
sbb
add
test
dec
dec
dec
ficoms
dec
cs
rclb
dec
dec
stos
mov
mov
in
mov
fiadds
inc
and
mov
pushf
sub
mov
xchg
xor
push
mov
add
fisttps
cs
xchg
out
mov
inc
lods
dec
cs
dec
insb
sarb
pusha
enter
les
test
mov
aas
mov
push
scas
dec
push
daa
jns
repnz
pop
popa
add
add
jns
jg
pop
and
inc
pop
out
iret
push
lea
out
cmp
jecxz
les
bound
bound
addl
mov
push
fnstcw
xor
jl
xchg
enter
pop
xchg
push
popf
pop
mov
jb
or
or
xchg
and
or
or
test
arpl
adc
or
push
adc
inc
mov
adc
aaa
adc
xchg
push
dec
pop
pop
sbb
inc
mov
outsb
sbb
test
sbb
lcall
in
in
sbb
sbb
in
in
sbb
push
jb
in
adc
repnz
xor
rcrl
fsub
xor
std
xor
or
adc
inc
mov
xor
aas
jb
enter
cmp
pusha
cmp
sbb
imul
cmpl
xchg
and
fs
leave
mov
inc
into
cmp
in
in
out
dec
cli
dec
pushf
pushf
mov
dec
adc
es
sahf
pushf
pushf
xor
push
push
dec
daa
daa
and
push
pop
push
daa
jle
fists
gs
iret
add
mov
jbe
das
push
out
maskmovq
mull
incl
out
popw
or
cmp
pop
data16
cmp
mov
xor
add
add
pushf
pop
pop
add
insl
mov
sbb
cmp
mov
xchg
and
mov
mov
xchg
xchg
xchg
push
enter
xor
xchg
loopne
or
test
adc
repnz
xchg
adc
sbb
and
sbb
push
xor
add
cmp
jbe
jle
pushf
pushf
pushf
pushf
xchg
pop
sbb
xchg
push
sub
in
sbb
ror
leave
in
fs
add
loop
in
cmp
fprem
punpckhbw
pop
push
or
or
das
cmp
pushf
pushf
pushf
push
pop
data16
jnp
and
or
cmp
test
sbb
mov
mov
sbb
sbb
sbb
xchg
xchg
xchg
sbb
ljmp
imul
and
fs
xchg
sub
push
inc
daa
dec
mov
ret
das
arpl
imul
pushf
add
shll
jnp
add
cwtl
jns
xchg
adc
lahf
push
push
cmp
jnp
push
adc
sbb
and
inc
mov
pop
outsb
in
enter
or
ret
aas
push
notb
fs
shld
cmp
mov
rcll
xchg
and
fcoml
out
repnz
leave
xchg
std
imul
sbb
sbb
sub
xor
xor
in
sbb
dec
and
cmp
jnp
es
imul
subl
mov
xchg
out
and
loop
mov
popa
sub
mov
push
aaa
jb
adc
imul
imul
dec
ficompl
loopne
add
imulb
in
xchg
add
and
mov
or
or
in
dec
jnp
pop
jbe
add
mulb
add
cmpsl
mov
sahf
mov
mov
fimuls
inc
mov
or
xchg
and
or
adc
jb
adc
outsb
adc
mov
lcall
jb
insl
pop
insl
insl
outsb
das
jbe
inc
sahf
mov
add
mov
xchg
xor
mov
ror
cmp
push
dec
push
loop
add
push
xor
xor
outsb
dec
sbb
cmp
push
push
push
add
sbb
cmp
and
or
inc
fimuls
pop
test
mov
adc
outsl
daa
and
aam
inc
or
leave
enter
sbb
sbb
test
sbb
jnp
and
popf
sub
mov
push
outsl
pop
outsl
push
sbb
in
add
cmp
cmp
pop
pop
imul
je
mov
inc
popf
shld
lods
fs
fldcw
ret
adc
in
fucomi
dec
loope
in
sbb
sbb
jo
sbb
sbb
pop
and
inc
and
pop
and
into
or
das
ja
orb
fisubrs
pop
jmp
mov
jno
sub
mov
xchg
mov
pop
sbb
and
rdtsc
xchg
and
scas
xor
aaa
mov
fsts
mov
dec
jno
daa
mov
cmp
inc
cmp
pop
xchg
inc
mov
lahf
or
pop
cmp
popa
pusha
in
insb
stc
push
and
adc
insl
or
les
jnp
mov
add
int3
ljmp
pop
jb
or
daa
sbb
jb
sub
mov
in
inc
xor
inc
jb
iret
cltd
cmp
pop
add
xor
mov
lods
punpcklbw
jo
aas
jb
imul
jno
mov
jmp
sbb
cmp
outsl
mov
xchg
icebp
mov
inc
in
jbe
mov
mov
and
mov
xchg
or
push
xor
dec
cmpsl
jb
mov
push
or
push
xchg
cmp
cmp
test
add
loopne
and
rclb
out
mov
movb
jns
sbb
das
fiadds
mov
out
mov
dec
pop
and
fnsave
add
push
inc
dec
add
and
jmp
shl
in
in
mov
pushf
in
movsb
sbb
cmc
add
mov
fisttpl
in
imul
xchg
daa
mov
scas
push
inc
cs
movsl
or
mov
dec
leave
mov
cmp
ror
dec
push
enter
mov
shlb
cmpsb
or
cwtl
test
clc
daa
sbb
pop
push
mov
rcll
cmpsb
pop
add
leave
dec
scas
in
xor
push
pop
enter
add
test
cmpsl
sbb
fidivs
dec
add
jg
mov
daa
cmpsl
pusha
aaa
mov
cmpsl
jo
xchg
push
ret
mov
cmpsl
test
dec
jb
loope
das
jbe
test
push
shrl
aas
sbb
push
and
xchg
inc
test
daa
push
andnps
aam
int3
mov
in
or
or
pop
inc
cmp
add
jno
leave
sub
inc
leave
aad
inc
lahf
mov
shll
cwtl
ja
stos
xchg
push
mov
shrl
les
add
pop
nop
pop
fldl
les
stos
xor
push
dec
cmpsl
stos
inc
stos
or
push
add
add
push
das
jg
xchg
xchg
fwait
push
js
add
and
push
and
inc
addl
fcoms
or
imull
js
xchg
pushf
mov
stos
and
and
scas
shll
mov
jb
cmp
sub
stos
lock
sbb
loopne
lods
add
shrl
movaps
cmp
xchg
fucomi
jns
addps
pop
and
popa
sbb
jns
daa
sbb
jns
das
addr16
sub
ja
add
lods
or
ljmp
scas
lods
fisttpl
inc
ljmp
inc
mov
jg
or
cmp
cltd
dec
dec
inc
mov
fdivrs
cltd
cmp
pop
pop
imul
je
push
fiadds
bound
scas
adc
pop
jg
mov
ljmp
scas
scas
jp
xchg
mov
jb
pop
in
leave
and
sbb
xor
dec
jb
mov
outsl
sub
jbe
aaa
out
mov
stos
mov
add
rcll
lret
ret
mov
xchg
lock
cmpsl
jl
and
in
push
adc
sbb
and
push
pop
xor
or
inc
movsb
repnz
mov
xchg
pop
add
outsb
jns
rorb
mov
mov
testl
shlb
adc
pushf
fsubr
iret
neg
push
mov
jge
push
or
scas
xchg
xchg
out
or
nop
ds
and
inc
add
push
add
insl
add
dec
add
enter
xchg
add
mov
in
xlat
mov
pop
stos
aam
and
and
push
mov
jmp
aas
dec
inc
inc
sub
into
rolb
inc
dec
dec
rolb
cld
stos
push
ja
testl
push
push
pop
and
cmp
xor
test
mov
daa
insb
andl
adc
in
add
insl
push
out
add
faddl
add
jg
lods
aas
in
icebp
sti
sysret
jns
cmpb
or
add
push
push
add
sub
add
add
leave
mov
loopne
add
cs
inc
push
pusha
das
sub
inc
aas
push
sub
xor
aaa
push
or
add
aaa
xlat
fcomp
cs
push
das
out
xchg
push
sahf
out
sahf
or
or
or
or
in
jbe
scas
or
daa
adc
adc
jbe
dec
das
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
sub
sbb
data16
std
and
mov
mov
cmp
adc
and
lods
adc
inc
pop
nop
adc
ljmp
movsb
andb
mov
push
jne
adc
push
loop
add
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
repnz
push
daa
and
sbb
adc
jns
iret
repz
add
sahf
out
fcom
sarb
mov
pop
test
cmp
rep
mov
repnz
mov
sahf
out
sahf
pusha
pop
dec
inc
cmp
sahf
out
sub
add
clc
or
mov
lock
call
loopne
ror
shlb
nop
jl
pop
out
sahf
out
cmp
sub
iret
out
sahf
sbb
or
cwtl
cld
hlt
cmp
repz
in
shlb
cwtl
pushf
push
nop
subb
out
dec
xor
and
add
fwait
adc
adc
add
out
pop
jb
pop
push
xchg
in
or
imul
scas
mov
mov
push
call
ja
lods
jl
add
aas
sbb
mov
sub
add
insb
mov
fnstcw
pop
aas
jge
adc
in
out
sub
sub
or
lock
push
jae
xorb
cli
mov
push
push
mov
inc
push
loopne
das
sub
jmp
push
mov
pop
pop
cs
pushw
pop
pop
iret
fildl
pop
add
jge
xor
pop
pop
imull
add
add
mov
sbb
add
aaa
int
mov
sete
mov
sbb
sbb
xchg
das
inc
pushf
pop
mov
jbe
in
in
xchg
push
aas
nop
or
adc
jb
jbe
mov
push
adc
dec
and
mov
dec
or
or
jl
and
into
pop
push
sbb
insb
sbb
enter
pop
push
and
inc
mov
dec
and
and
sbb
mov
clc
repz
inc
jne
jg
orb
inc
das
lods
stos
pop
pop
daa
xor
cmpsb
xchg
outsl
push
mov
jb
lahf
inc
jo
add
imul
andl
out
cmp
pop
js
mov
out
cmp
repz
xor
nop
cmpsb
jge
add
ss
rorl
ja
mov
arpl
repz
dec
das
push
dec
insb
pop
jl
xor
das
pop
mov
xchg
xchg
add
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
aad
icebp
clc
scas
adc
inc
jmp
aam
mov
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
sbb
pusha
les
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
std
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jg
inc
add
mov
mov
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
call
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
add
lods
dec
push
adc
out
roll
in
mov
test
mov
cmp
cmp
mov
add
xor
ja
popa
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
clc
jmp
mov
hlt
movl
imul
in
leave
gs
decl
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
call
in
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fbld
fdivs
jne
filds
or
lock
fldenv
mov
push
adcb
push
popa
sarb
and
pushl
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
inc
adc
pushl
lahf
xor
mov
js
stc
fistps
or
mov
cmp
fs
add
hlt
push
imul
ljmp
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
pushl
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
lods
jmp
sbb
je
mov
aam
movsl
fisttps
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
incl
or
xchg
shlb
add
inc
push
imul
xorb
ljmp
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
fcomip
pushl
pusha
call
xchg
shll
push
repnz
icebp
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
xor
call
inc
or
das
es
lds
or
mov
push
pop
cmpsl
call
ret
shlb
sbb
ret
es
aaa
std
lcall
insl
add
ss
jmp
addr16
jb
push
mov
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
std
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
incl
dec
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
sarb
lds
mov
jmp
mov
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
icebp
jmp
filds
sub
movsb
ds
mov
mov
daa
add
pop
rorl
les
push
iret
aad
iret
repz
push
xlat
fcomp
cmp
repz
fstp
loop
iret
and
call
repz
cmp
hlt
cmc
div
clc
stc
sub
repz
sti
cld
aas
pop
sbb
test
dec
aas
jg
inc
add
or
imul
in
dec
outsl
push
dec
fiaddl
inc
xchg
pop
sub
jg
pop
dec
popa
outsb
imul
jb
push
inc
inc
addl
pop
mov
push
mov
rcrl
inc
aaa
push
jo
ljmp
pop
dec
dec
inc
push
dec
inc
aaa
xor
jbe
sbb
fsubrs
idivb
mov
and
push
inc
pop
and
nop
adc
js
lahf
pop
ljmp
addr16
aaa
inc
or
adc
dec
bound
jbe
jg
loope
and
popa
addr16
xor
or
inc
decl
imul
bound
out
ret
push
push
incl
je
jns
arpl
gs
pusha
xchg
lea
mov
mov
movsb
insb
mov
fcmovnb
shr
mov
subb
push
push
xchg
sub
adc
pop
dec
out
mov
incl
jo
je
push
inc
mov
sbb
dec
cmp
inc
rcr
mov
xor
pop
inc
cmp
pop
bound
xor
pop
das
jo
pop
popa
arpl
cmp
arpl
or
xor
pop
aam
gs
xor
jae
push
inc
inc
shll
jbe
pop
sbb
dec
inc
or
add
cmp
int3
pop
cmp
mov
push
sbb
andl
imul
mov
cs
adc
and
scas
ds
dec
inc
xchg
add
jle
gs
inc
jp
mov
cmp
adc
jae
sub
and
sub
insb
popa
sub
sbb
insl
ret
push
popa
xchg
aaa
aaa
xchg
aaa
aas
inc
add
aas
cwtl
pusha
lds
add
cltd
insb
pop
mov
popf
int
sbb
fistps
inc
aas
cmc
inc
mov
sbb
pop
push
fistpl
pop
cmp
jo
inc
inc
add
ds
cmp
add
pop
int
cmpl
int
push
dec
cmp
inc
xchg
push
insb
mov
sbb
mov
adc
ds
outsb
jne
sarl
fisubrl
mov
mov
pop
aad
xor
xor
or
aad
arpl
add
addr16
test
xchg
into
pop
jo
dec
fisubl
lods
xor
mov
adc
mov
dec
clc
and
add
pusha
add
pop
addr16
subb
insl
or
xor
mov
fdivrs
inc
sbb
xlat
inc
add
push
mov
adc
push
sub
sahf
fdivs
popa
jo
loopne
dec
adc
lahf
push
outsl
outsl
movsb
fadds
andb
rclb
pusha
push
xchg
mov
stos
lds
xchg
and
in
nop
sbb
pop
cmp
inc
insb
mov
arpl
cmp
mov
add
push
mov
xchg
xchg
insb
jns
inc
xchg
stos
popf
das
inc
jb
jb
mov
cs
push
arpl
insb
psadbw
xchg
sbb
inc
push
bound
cmpsb
push
fmuls
jae
sbb
jg
lea
fidivl
imul
arpl
das
xor
pop
imul
jg
sub
loopne
sbb
out
add
pop
mov
outsb
push
gs
jne
insb
and
shlb
outsb
rclb
jne
add
jb
cvtdq2ps
dec
adc
daa
add
pop
dec
dec
bound
sub
adc
sub
or
and
inc
adc
xor
xlat
insb
push
pop
push
lock
or
lcall
shlb
test
mov
pop
xchg
imul
call
xchg
in
xchg
mov
adc
std
es
pop
cmp
xchg
addr16
stos
inc
int3
lds
popf
aad
ljmp
lcall
ja
lahf
sub
pop
and
lret
dec
movsb
cmpsb
fisubrl
or
incl
mov
lret
test
les
xchg
sbb
push
ja
outsb
push
adc
insl
xor
arpl
sub
mov
xchg
cmp
iret
cmp
les
icebp
inc
aaa
mov
xor
orl
mov
loope
sbb
xor
mov
xchg
and
std
mov
nop
push
or
jne
push
and
dec
rorb
call
jb
mov
pop
inc
pop
push
stos
dec
push
pushf
bnd
pop
filds
cmp
incl
jmp
ret
js
lock
mov
lea
xchg
push
jbe
int3
scas
xchg
jno
jg
jmp
mov
cmp
insl
or
or
ret
pop
shr
cmpl
sahf
ret
rorb
sub
xor
fidivrl
int
dec
cli
lcall
fimull
adc
xchg
enter
in
repz
lcall
push
jbe
out
test
ret
fs
jle
int3
dec
clc
and
ljmp
push
mov
int3
pop
stos
or
xor
ljmp
clc
jb
mov
aas
fdivrs
scas
mov
nop
and
std
incl
rcl
xor
pop
pop
and
int
add
add
arpl
mov
lcall
pop
lcall
push
rcrb
xchg
cmp
mov
cmp
lcall
dec
and
sub
fs
mov
and
movsb
dec
xor
mov
testb
push
xchg
test
pop
dec
push
out
popa
stos
jg
out
dec
push
adc
fistpl
pop
lret
in
rcr
jle
insl
es
das
cltd
sub
test
int
add
je
mov
jl
lcall
or
add
sahf
xchg
jno
fists
mov
sbbb
movsb
shll
xor
je
xchg
call
popf
pop
adc
xchg
mov
push
jbe
das
into
cmp
jb
loop
div
incl
inc
lea
add
cmp
lahf
jmp
bswap
sub
pop
add
pop
adc
call
mov
cli
mov
lea
dec
int3
and
ljmp
bound
mov
and
xchg
mov
je
dec
popw
dec
out
mov
call
pushl
push
out
sub
sub
inc
shlb
in
mov
incl
mov
cmp
fcmovnu
add
outsb
sti
pop
into
stos
cwtl
insb
mov
ja
jecxz
inc
or
cmp
or
lods
adc
push
iret
lods
pop
loope
sbb
test
mov
mov
test
jne
xor
xchg
lea
pop
in
adc
or
lret
xchg
sub
incb
cmp
fcompl
cmp
and
ret
xchg
and
xor
xchg
in
out
cmpsb
xor
or
cs
adc
and
loopne
cmp
lahf
cltd
out
test
mov
dec
movsb
loop
lds
or
lret
xchg
jmp
pop
mov
lods
jge
xchg
ret
pop
movsb
push
mov
orl
jecxz
mov
std
jno
inc
sti
and
pop
xor
inc
nop
fwait
add
push
adc
xchg
dec
sub
loop
xor
sub
push
insb
mov
lret
sbb
shl
dec
sub
mov
mov
lcall
outsb
xchg
push
pop
lds
fnstsw
mov
jbe
or
sub
xor
pushl
adc
cwtl
test
jecxz
cmp
aas
mov
pop
into
mov
push
jl
xor
pop
cmpsb
pusha
fadds
mov
pushf
cmp
das
inc
dec
lea
std
cmpsl
scas
rcrb
jg
call
inc
setg
das
arpl
add
sbb
push
leave
dec
jns
lea
ret
cwtl
pop
movd
call
jo
ficoml
push
xchg
lahf
in
lds
inc
sbb
rcr
dec
inc
jge
sub
mov
push
insb
cmp
cmp
inc
aam
ret
loopne
xchg
les
adc
fdivr
pushl
xchg
sbb
outsb
add
adc
imul
stos
ret
xor
and
movsl
ret
aam
cmp
ljmp
push
xchg
jne
dec
pop
cltd
adc
fisubs
sarl
popf
sar
fsubs
lahf
stos
push
les
push
push
enter
loope
pop
cmp
fisubrl
sub
bound
outsb
lret
add
mov
adc
inc
call
rolb
pop
shrb
jne
daa
cmpsl
mov
rorl
add
mov
incl
out
insb
je
and
filds
dec
loop
ret
hlt
pop
mov
icebp
mov
subb
adc
fdivr
in
lods
insb
repnz
hlt
mov
and
ret
xchg
aam
pop
imull
aad
cmp
push
jo
fnstsw
mov
aad
notl
cwtl
push
cld
inc
push
or
sbb
ss
pop
mov
push
jp
and
imull
jno
popa
sub
int
dec
push
fcom
sbb
test
sar
std
jle
adc
sub
xchg
push
aad
mov
xchg
inc
push
mov
dec
jno
incl
lds
pop
fs
mov
dec
sbb
push
lds
jno
ds
sub
inc
sub
sub
lcall
mov
dec
loopne
dec
psrld
cmp
gs
les
addr16
subb
xchg
cld
rep
int3
cs
aaa
movsl
add
repnz
fwait
daa
cs
jg
push
jecxz
adc
cmc
dec
dec
adc
ja
dec
jl
roll
loope
clc
mov
pop
sbb
and
mov
adc
ds
fistpll
loopne
jne
adc
mov
insb
sbb
pushl
pushf
xor
pop
inc
fisubl
ss
and
adc
mov
into
testl
mov
inc
lret
testl
stos
test
mov
jg
mov
push
mov
iret
mov
enter
repnz
mov
test
mov
insb
adc
xchg
pop
imulb
fisubrs
mov
test
test
dec
mov
and
ljmp
xchg
mov
mov
int
push
jb
jmp
xor
inc
push
mov
lret
jnp
xchg
sbb
and
xchg
pop
sub
jns
cmp
inc
push
or
mov
les
add
xor
std
aas
push
dec
jp
pop
mov
mov
dec
add
jnp
and
dec
ljmp
push
rorl
aad
and
loopne
rorb
les
pop
ja
jl
jmp
call
sub
pop
mov
xchg
das
mov
stos
cld
out
sbb
stos
fsub
pop
or
fdivrl
sahf
mov
arpl
mov
andl
cwtl
inc
lahf
out
sbb
dec
std
insl
fs
jo
sti
pop
sub
pop
nop
push
pop
sti
mov
cltd
and
inc
ds
repnz
ljmp
hlt
lock
sti
mov
rcrl
pop
pushf
repnz
dec
bound
xchg
nop
inc
ljmp
cld
lcall
vsqrtss
lret
addr16
insl
lcall
adc
call
lcall
lcall
in
xor
pusha
mov
cmp
adc
jmp
add
dec
or
xor
jne
xor
jg
jecxz
xchg
xor
sbb
test
cwtl
or
lcall
cld
je
inc
mov
xor
pop
cmp
loopne
inc
cld
dec
ljmp
mov
faddp
lods
stc
test
mov
push
rolb
scas
dec
inc
shrl
test
andb
je
lret
xor
iret
xorl
cld
adc
lcall
rorb
push
into
jl
aad
arpl
xchg
insb
and
sub
ja
das
gs
pop
lahf
popf
in
xchg
mov
mov
jge
orb
call
push
sbb
add
jp
xchg
call
test
popa
dec
jp
inc
test
les
lahf
aaa
mov
pushf
dec
mov
push
pop
lock
xor
aas
jns
in
mov
xor
push
mov
push
out
push
test
xor
imul
mov
or
sub
xchg
mov
aam
daa
mov
push
fcomip
push
je
or
mov
mov
push
js
mov
push
sub
andl
add
push
jle
outsb
xor
mov
addb
scas
and
adc
cmc
out
xchg
ljmp
mov
addl
test
sbbl
mov
ds
jle
cld
decl
mov
dec
mov
mov
pop
push
cli
bound
fs
pushl
adc
jnp
lock
dec
mov
adcb
mov
adc
add
incl
and
imul
hlt
imul
sbb
mov
sub
mov
jae
jne
push
or
dec
insl
cwtl
inc
mov
data16
jg
pop
jge
sub
push
and
mov
add
lcall
lock
mov
popf
mov
lock
inc
js
push
popl
aas
adc
data16
incl
bound
jle
dec
lods
fwait
mov
loope
mov
lods
dec
aas
xchg
or
fidivrl
test
decl
xor
push
ljmp
out
fildl
bound
mov
inc
outsl
push
mov
jbe
in
push
or
loopne
out
mov
xlat
outsl
movsl
jge
jge
mov
hlt
in
lcall
in
fdivrl
leave
sbb
push
and
push
or
jg
push
aam
scas
adc
jg
ret
pusha
out
mov
lds
mov
rcr
pushl
scas
push
sbb
sub
loop
pop
mov
dec
pop
popa
sbb
sbb
mov
pop
in
stos
add
out
mov
adc
lods
cmp
mov
ljmp
sub
adc
cmpsb
mov
pop
jge
iret
fiadds
mov
mov
push
mov
in
mov
flds
adc
outsl
rcl
mov
mov
push
pop
and
aam
ljmp
xchg
int3
pop
inc
or
add
xor
decl
test
jle
into
push
mov
ss
sbb
loop
push
shll
xchg
jl
pop
jle
dec
dec
lahf
jl
popf
ret
jmp
loopne
jno
das
rorb
pushf
gs
stos
mov
and
cld
lahf
mov
fimuls
adc
mov
xchg
rol
test
out
test
xor
inc
mov
mov
inc
nop
clc
cmp
scas
inc
adc
cwtl
fwait
mov
ficomps
xchg
andb
int3
mov
out
push
stc
inc
or
jl
mov
jno
std
decl
insl
cli
xlat
or
std
daa
xor
dec
cmp
mov
je
es
sub
xor
mov
leave
sbb
test
cmp
outsl
jbe
push
fwait
pop
mov
out
ja
or
cmc
add
inc
pop
inc
xor
stc
jmp
ljmp
xchg
jno
movsl
jo
mov
test
ss
sub
xlat
mov
jmp
mov
dec
dec
movsl
inc
push
rcll
mov
sub
mov
sbb
jmp
pop
sub
jmp
outsb
dec
addr16
mov
cmp
add
icebp
jg
decl
mov
add
dec
mov
xor
push
push
cmp
enter
add
pop
mov
ja
pop
add
test
pop
inc
mov
into
pop
lcall
cmp
daa
rol
cmp
idivl
lods
xchg
xchg
push
xor
in
ljmp
aas
mov
xchg
dec
jmp
jbe
repnz
push
push
push
sub
inc
in
insb
insl
jbe
and
mov
add
stos
xchg
xor
movsl
add
mov
js
and
mov
psrlq
and
cmc
lcall
outsl
mov
xchg
mov
adc
mov
sbb
xchg
xor
xchg
sbb
incl
mov
pop
jb
mull
enter
addl
inc
xor
mov
push
lods
aam
lods
fnstcw
push
dec
enter
ljmp
push
sbb
mov
mov
subb
out
lahf
cmp
call
lea
push
rorl
test
rorl
mov
lcall
push
jne
out
lahf
pusha
xchg
test
add
imul
push
sub
mov
and
inc
es
mov
arpl
pop
scas
sub
iret
xchg
lcall
add
loop
scas
push
push
jo
loopne
sbb
addr16
pop
aas
xor
imull
pushl
and
jno
ss
out
into
cmpsl
leave
dec
call
ficoms
cmc
mov
sbb
add
jg
out
fsts
test
fs
pop
dec
test
jg
incl
push
mov
out
add
cmp
dec
addl
mov
test
xor
cmp
cmc
in
xchg
fimuls
repnz
xor
clc
pop
je
dec
pop
das
std
jae
imul
clc
jne
call
xchg
jne
popf
ss
rclb
addl
mov
and
sbb
in
loop
cs
add
shrl
bound
mov
mov
and
ljmp
pop
outsl
mov
ficoml
sbb
add
shll
xchg
push
adc
repz
xchg
jmp
andb
fidivl
andb
out
scas
cmp
mov
add
jl
call
adc
jmp
and
imul
lods
fs
nop
movsb
sub
sub
stos
ljmp
xchg
pop
sub
lock
call
or
fmuls
xor
or
shrl
call
xlat
mov
mov
les
test
inc
cltd
gs
shrb
sbb
push
mov
into
lcall
int
cli
mov
mov
in
int
int
movsb
pop
mov
ss
mov
inc
sub
decl
jle
jg
repnz
fidivl
outsb
cmp
outsl
push
push
cld
jp
lock
sbb
jmp
in
out
aam
scas
cmp
inc
loope
clc
xor
cmp
sub
adc
rorl
inc
adcl
lds
lcall
movsb
scas
pop
fldenv
pop
mov
cmpsl
into
xor
fdivrl
bound
rcll
lcall
adc
and
add
lock
jge
cli
and
rcrl
incl
pop
or
iret
lds
fs
int3
shll
aad
and
fs
cs
inc
es
decl
cmp
cmp
test
xchg
or
push
adc
jne
xchg
rcrl
jb
std
push
icebp
sub
cld
and
fcmovu
into
jno
or
mov
out
fistl
adc
sarl
and
clc
ljmp
lahf
jo
aaa
fidivl
aam
add
pop
xlat
adc
inc
movsb
xor
incl
mov
pop
inc
aaa
xchg
dec
cmp
pop
push
aam
hlt
cs
pop
aam
mov
pop
xor
mov
mov
xor
pop
loope
insb
incl
call
mov
dec
psubusb
push
in
pop
cmp
inc
ja
ljmp
dec
xor
cmpsb
mov
cltd
push
and
add
imulb
mov
mov
jecxz
adc
into
and
xchg
bound
outsl
adc
pop
in
aam
push
ljmp
cli
sub
ret
ljmp
jb
mov
cmp
mov
clc
lcall
pushf
inc
or
sub
mov
jg
xrelease
adc
xor
sti
call
jge
mov
outsl
jbe
pop
loop
das
push
mov
dec
fildll
jo
in
lcall
inc
jo
movsb
mov
dec
loop
pop
jbe
cmp
sub
test
fisttpll
loop
inc
adc
pop
insb
mov
fdivp
loopne
jg
in
or
sarl
add
lcall
mov
testb
test
popa
in
cmc
xchg
je
pop
repz
fcomip
push
dec
iret
add
ljmp
sti
add
inc
pop
dec
mov
fsincos
fs
push
mov
xor
mov
addb
push
pusha
lds
dec
mov
pop
je
rclb
push
pop
add
out
cmpsb
jns
cmp
aad
call
jmp
int3
ss
or
pop
pop
out
int
xchg
pushf
mov
cld
cwtl
sbb
adc
pop
xchg
mov
lcall
inc
aas
icebp
jmp
shlb
and
popa
enter
fidivrs
rclb
jmp
push
les
shlb
rorl
jmp
cmc
or
movl
push
std
incl
adc
sub
sbb
add
and
and
pop
xchg
jns
iret
incl
fxch
lock
iret
jge
cmp
cwtl
sarl
add
pop
jp
ljmp
test
aad
adc
flds
mov
lea
sub
adc
das
mov
lcall
sbb
adc
adc
add
jmp
hlt
pop
dec
push
jnp
mov
std
and
or
in
incl
sbbl
fcmovnbe
sub
popa
sbb
push
stos
mov
adc
push
nop
jp
inc
mov
jp
xor
aad
push
lds
es
mov
testl
fsubs
cwtl
xchg
sahf
shll
add
in
xchg
pop
int
cmp
incl
into
scas
xchg
in
xchg
fadd
fwait
dec
adc
fdivrl
movsl
mov
lcall
or
jae
fstpl
mov
jne
mov
add
iret
sub
cmc
lcall
xor
mov
mov
adc
jp
nop
add
pushl
stos
in
es
jno
loope
pop
cmp
adc
daa
stos
stos
rcl
jg
pushl
mov
insl
push
jmp
shlb
or
xchg
lods
mov
pushf
jae
js
mov
incl
jl
call
mov
and
push
pushf
les
jg
cwtl
dec
jl
mov
pop
out
test
mov
outsl
inc
lret
das
nop
jno
scas
mov
in
jno
jle
repnz
sub
in
add
test
jne
xchg
inc
sbb
push
incl
cmp
iret
jne
mov
mov
cmp
dec
test
jmp
fwait
rcrb
rorl
mov
fs
hlt
sbb
cltd
mov
cmc
dec
in
mov
mov
aam
shrb
mov
pushl
fwait
sbb
inc
loopne
fstp
mov
decl
pop
xorb
cmp
insb
cmp
pop
push
test
mov
les
jnp
pop
adc
xchg
mov
jmp
jmp
xor
insl
and
pop
ret
aam
inc
ret
sbb
mov
cld
decl
iret
das
sahf
test
mov
insl
adc
mov
lods
test
pop
mov
lcall
sbb
adc
gs
arpl
dec
pop
jns
insl
and
jmp
ss
out
jnp
pop
aas
movl
out
push
push
ljmp
incl
imul
mov
cmc
pop
jmp
scas
cmpb
outsb
mov
xchg
cli
jmp
sub
add
fs
pushl
movsl
jg
daa
icebp
pop
mov
and
xchg
aad
ja
cltd
xor
mov
es
sbb
dec
inc
les
add
xchg
in
fstpt
jmp
subb
and
and
mov
jle
scas
inc
push
ss
insl
fsubrl
or
in
inc
inc
loopne
mov
and
sahf
sub
outsb
inc
scas
and
mov
test
jl
mov
cmp
add
leave
aas
add
mov
and
les
xor
xor
lcall
dec
cmp
pop
mov
fisttpl
inc
cmp
je
or
fnstsw
pushl
cli
inc
clc
cmpsb
aaa
rorb
fidivrl
mov
js
ljmp
in
cs
out
sub
movsb
mov
inc
mov
incl
movsl
sbbb
sub
popf
mov
push
dec
out
movsl
adc
pop
in
mov
sub
ljmp
hlt
and
ffree
lods
dec
out
clc
inc
add
dec
inc
shlb
lcall
scas
sar
shl
mov
and
or
adc
mov
push
jbe
ficoms
lret
mov
out
repz
pop
adc
in
loope
xchg
or
cmp
add
pop
adcb
mov
idivl
pushf
pop
hlt
jg
iret
add
or
sub
dec
das
and
ss
lcall
push
mov
enter
imul
pop
das
in
cmp
and
lods
leave
adc
sbb
ljmp
insl
pop
mov
adc
lds
xlat
inc
je
mov
insb
aas
and
fldenv
sbb
xlat
outsl
je
fistps
or
or
fiadds
sbb
in
jecxz
jg
dec
cmp
clc
pop
jne
stc
mov
mov
push
inc
and
sahf
adc
dec
iret
call
enter
inc
mov
mov
movsb
and
loope
inc
test
fisubrl
out
jmp
jns
adc
mov
aad
fs
jnp
mov
mov
nop
scas
cli
decl
arpl
inc
cmp
push
dec
xchg
jae
loop
jo
mov
ljmp
xor
mov
bound
mov
dec
pop
jle
xor
iret
ss
sar
fidivs
inc
fmull
mov
or
bnd
lock
mov
adc
or
mov
rcrl
cmp
sub
das
aam
aad
pop
push
add
incl
xchg
mov
inc
outsl
xchg
dec
mov
push
lret
add
push
push
repnz
int
inc
lea
pop
nop
adc
ret
mov
cmp
push
fwait
loop
xor
nop
ror
jg
push
inc
push
in
das
stos
cmp
mov
dec
les
cmpsl
or
mov
pop
mov
ljmp
and
sahf
jp
enter
lea
cld
es
clc
decl
ljmp
iret
into
arpl
and
fistpll
add
cmp
mov
xchg
fdivs
jmp
pop
ficoms
xor
mov
xchg
test
idivb
mov
movsl
adc
jl
add
nop
mov
dec
lret
push
mov
jmp
cmp
jmp
dec
xor
sub
jecxz
push
inc
ja
add
insl
cmp
repz
adc
fldenv
adc
decl
cli
cmpl
sarl
cltd
add
pop
faddl
jmp
out
data16
and
cmp
mov
stos
push
mov
test
jp
pop
cltd
mov
in
add
sbbb
add
lcall
xor
pushf
pop
xor
adc
mov
stc
add
jecxz
inc
jg
cmp
xor
daa
loopne
mov
leave
and
cmp
call
jl
pop
insl
jae
jo
mov
adc
mov
xor
or
ljmp
cld
dec
je
and
mov
sub
mov
and
lcall
pop
je
fbld
xchg
mov
jns
sarl
data16
push
and
aas
test
fcompp
lea
loope
popf
lock
hlt
jbe
cmp
aam
cltd
xchg
lret
jo
and
jg
add
mov
loope
or
mov
fcmovu
push
add
xorb
call
cmp
fdivr
jns
mov
shrl
ss
inc
lcall
repz
mov
es
addl
xor
outsb
add
out
adc
incb
xchg
mov
dec
subb
inc
inc
push
fnsave
ljmp
insb
sbb
push
aam
aaa
push
jnp
xorb
mov
stos
mov
aam
push
adc
mov
sbb
lock
sarb
mov
jne
jne
add
frstor
jge
cmp
jns
inc
cmp
dec
ljmp
sbb
cmp
jl
xlat
or
push
push
outsb
jp
push
das
xchg
inc
push
andl
lock
mov
cld
incl
add
fwait
jp
xor
sub
pop
sbb
dec
int
rcrl
jl
add
mov
add
or
and
pop
sub
dec
call
push
repz
cmpsb
data16
xor
dec
push
pop
xor
sbb
dec
mov
jnp
xor
adc
cmp
adc
add
into
ljmp
and
leave
fsts
pop
in
xor
movsb
add
test
mov
fdiv
xchg
xchg
mov
outsl
jg
loope
pushf
xchg
mov
jnp
jmp
sbb
test
in
test
xor
pop
lock
mov
mov
add
icebp
pop
or
test
add
jmp
push
adcb
outsl
pop
movsl
pusha
push
test
cmp
and
pop
cmp
aaa
decl
xorl
cld
out
popl
and
call
dec
test
insb
icebp
pop
sbb
les
jne
mov
or
ljmp
dec
cli
ljmp
xor
sbb
cwtl
sbb
clc
dec
int
cmp
ret
loop
mull
ljmp
adc
test
mov
in
clc
inc
fwait
call
insb
adc
mov
jo
inc
or
es
or
mov
fstl
incl
mov
shrb
movsl
mov
jge
out
or
arpl
push
mov
fwait
mov
int3
fmuls
pcmpgtd
loop
pop
jmp
add
push
mov
jb
rcl
aam
pop
cld
jge
jle
jp
sbb
and
repnz
lds
in
pop
xchg
inc
add
sti
mov
jp
outsb
cs
loop
data16
decl
sbb
loope
xchg
jecxz
inc
or
and
fs
fistps
insb
call
insb
in
mov
cmp
jecxz
cli
push
addr16
fstl
mov
mov
jp
in
jmp
movsl
mov
test
daa
mov
xchg
cmpsl
stc
sub
jns
add
incl
xor
xor
xor
or
cmp
incl
push
inc
or
jae
aad
add
push
dec
in
fcomps
cmp
pop
dec
mov
loopne
adc
dec
jbe
xchg
repz
mov
aaa
cld
jecxz
mov
inc
outsl
pusha
inc
mov
popa
xor
ja
ljmp
loop
pop
xor
mov
mov
mov
pop
jge
mov
stos
inc
xor
decl
repnz
jo
icebp
incl
sbb
xor
prefetch
test
jle
adcl
incb
and
jbe
sbb
sbb
ljmp
dec
lret
xchg
pavgb
adc
mov
mov
dec
sahf
pop
mov
pop
movsb
xchg
jns
lods
shrb
sub
jl
sbb
pop
sub
std
lcall
stos
sub
lock
ja
lcall
movsb
cmpsb
mov
or
pop
jge
xor
pop
sub
pushl
daa
jo
les
inc
inc
fsubs
push
pop
mov
imul
lcall
add
pop
sub
decl
mov
push
les
cmpsb
pop
lcall
push
jns
jns
enter
hlt
xchg
inc
dec
sbb
imul
push
incl
xorb
out
out
in
add
lret
and
sahf
frstor
cmp
sub
pushl
es
xchg
aam
out
cmp
les
scas
aas
mov
test
ljmp
call
scas
xchg
inc
ret
loopne
jbe
ljmp
push
sbb
and
scas
fbstp
sarb
in
mov
icebp
call
orl
mov
xor
jle
xchg
push
test
inc
lods
lcall
jg
or
push
cmpb
imull
gs
iret
pusha
sub
ret
mov
call
cmp
inc
int3
movsl
push
mov
outsl
jns
rolb
shll
mov
inc
into
gs
andl
push
outsb
jb
cmpsb
sub
lcall
cli
movsb
das
sub
lcall
dec
out
arpl
lods
xchg
sub
hlt
loope
mov
xor
out
cmp
jp
sbb
xchg
or
inc
cmp
and
xchg
in
fsubrs
adc
push
js
mov
dec
dec
incl
stc
arpl
hlt
rorb
cmpsl
xchg
dec
push
aas
scas
lcall
jbe
out
push
outsb
scas
or
fdivrl
xchg
test
push
push
pop
sub
push
movsl
pop
sbb
decl
incl
das
call
movsl
loop
bound
hlt
div
shrb
add
ljmp
cld
cs
xchg
xchg
pusha
sbb
fadd
into
jg
xor
adc
dec
push
sbb
adc
mov
ret
cltd
pop
aad
jb
sbb
insb
test
out
je
das
das
lret
aam
xchg
jg
mov
imul
pop
dec
adc
dec
ss
arpl
aaa
xchg
cmp
mov
out
mov
pop
push
xlat
pushf
outsl
jae
sbb
fstl
or
loope
jmp
sub
xchg
inc
lea
add
cltd
xorb
xchg
inc
push
push
sbb
mov
incl
int3
bound
scas
sti
sbb
dec
es
je
ret
fwait
inc
lcall
pushl
sub
mov
iret
mov
movsb
adc
xchg
lock
cmc
adc
call
nop
cmp
int
outsb
xorb
push
enter
mov
pop
ss
xor
and
call
or
je
mov
sbb
cmp
je
pushf
popa
adc
pop
cmc
push
loopne
inc
inc
push
fwait
mov
mov
fwait
adc
fiaddl
mov
xor
push
or
dec
jmp
add
inc
hlt
adcl
push
mov
adc
jl
out
adc
and
icebp
ret
stos
jb
arpl
decl
add
sbb
out
xchg
sti
xor
rorl
test
mov
pushl
pushf
lds
jecxz
adc
test
mov
mov
call
call
loop
rol
xor
dec
jae
fists
jmp
repz
jmp
jmp
mov
lret
or
add
orl
sub
mov
lcall
mov
jno
cmp
shll
aam
mov
repnz
jae
fstps
les
jg
pop
sbb
hlt
xchg
arpl
pop
and
iret
repz
sub
call
push
dec
add
sub
jne
outsb
test
cli
sub
jae
inc
mov
ljmp
cli
out
or
xor
out
enter
cld
fmul
lock
je
shlb
lcall
outsb
sti
test
jnp
mov
or
or
cltd
inc
lret
shl
mov
lods
mov
push
es
aad
push
or
xor
in
das
decl
mov
jg
roll
pop
sbb
jle
cli
mov
pop
mov
out
lods
out
jbe
add
test
ret
mov
sarb
sbb
arpl
or
fildl
cmp
add
aaa
mov
decl
andl
jecxz
lds
pop
dec
sub
mov
out
jmp
out
call
mov
outsb
mov
sti
adc
pop
push
push
xor
incb
add
decl
mov
fisubrl
sub
ds
and
repz
jnp
add
cmp
in
mov
lcall
fsubrs
xor
in
cwtl
xor
hlt
jns
lea
push
pop
in
adc
jns
andl
lods
add
push
sub
imul
enter
mov
dec
stos
outsl
jbe
or
mov
ds
loope
pop
sbb
ds
cmp
call
inc
test
lret
add
and
aaa
xchg
mov
push
or
aas
dec
incl
out
pop
sbb
imul
daa
lcall
roll
mov
push
fists
lcall
push
je
pop
aas
and
dec
mov
sahf
pop
dec
adc
ljmp
mull
push
test
cld
add
gs
dec
pop
push
ret
jle
fwait
fwait
xchg
testb
mov
jo
lock
jo
jae
add
decl
mov
dec
fdivrs
cmp
ds
rcl
xor
lock
rolb
decl
add
popl
inc
addr16
mov
into
add
mov
inc
cmp
sbbl
jmp
data16
mov
sarb
repz
call
mov
jle
ljmp
adc
sbb
lahf
sbb
mov
es
jmp
mov
adc
in
mov
aad
das
fstps
dec
pop
out
and
pushl
and
sar
xorb
mov
aam
mov
inc
or
xchg
fdivrl
or
fcomip
xchg
in
cmp
dec
test
xor
mov
mov
inc
outsb
int3
test
mov
decl
push
mov
ret
jae
adc
dec
pop
dec
jmp
scas
sbb
mov
jmp
mov
mov
jg
in
inc
mov
cltd
dec
cmpsb
mov
arpl
push
fcmovne
add
imul
pushl
or
fs
cmc
push
insl
adc
push
enter
movsl
andb
mov
test
mov
push
call
sub
jnp
mov
sbb
aas
mov
dec
lahf
push
adc
pushl
sti
or
xor
mov
fnstcw
arpl
sarb
popf
fcos
ljmp
push
cmp
mov
or
cmp
and
sbb
or
mov
out
test
ret
dec
stc
pusha
push
addr16
inc
pop
mov
sub
pop
adc
mov
dec
add
pushl
xor
jae
mov
insb
mov
mov
or
andl
adc
mov
cmp
cwtl
adc
dec
dec
mov
sti
jb
test
jmp
and
cmc
mov
rcrb
and
mov
insl
sbb
dec
je
aam
inc
pop
hlt
or
stos
imul
jge
sbb
inc
imul
stos
xor
sub
addr16
pop
mov
inc
xor
cmp
clc
sub
call
dec
fs
sbbl
lds
mul
ds
ficomps
pushl
fists
ljmp
aam
and
cltd
inc
push
fimull
add
dec
push
mov
inc
ds
jnp
push
mov
cmpsl
or
fs
cmpsl
jns
repz
pop
lcall
or
adc
fmul
sbb
xchg
stos
outsb
inc
dec
aas
pop
mov
lret
push
xchg
mov
call
std
cmp
scas
andb
call
push
hlt
add
int3
cmp
idivl
jae
push
sub
sbb
add
push
mov
data16
in
decl
ret
push
ror
cmp
shr
jmp
add
data16
cli
cmp
dec
jecxz
mov
insl
lfs
sub
ret
cwtl
cmp
repz
icebp
push
pop
sti
mov
mov
or
xor
decl
daa
xchg
fistl
call
movsl
scas
push
outsl
fimull
cwtl
arpl
adcl
pop
test
std
inc
movsb
out
call
push
xlat
mov
jg
cmp
sbb
push
and
adc
xor
xchg
and
push
aaa
cmp
inc
push
aad
jno
adcb
cmp
cld
mov
stc
push
sub
dec
lret
mov
xlat
inc
leave
lea
insb
cmpsl
and
jne
cmp
stc
mov
jns
pushl
inc
sbb
add
pop
test
lea
dec
cmpsb
jb
sbb
leave
cmp
js
decl
mov
fbld
jle
scas
in
incl
or
lods
jo
inc
push
adc
dec
outsb
ljmp
shrl
add
push
cltd
insl
cmc
pop
cmpsb
stos
bound
fidivl
in
faddl
push
es
test
fs
addb
inc
or
ljmp
ljmp
cmp
in
pop
jmp
cmp
bound
add
sub
cmpsb
mov
push
xor
pop
xchg
xlat
mov
cmp
ljmp
push
inc
cli
cltd
rcrb
hlt
nop
adc
ret
lds
adc
std
xchg
mov
jg
movsb
call
inc
loop
xchg
mov
fiaddl
ljmp
sahf
xchg
add
mov
lea
mov
dec
dec
nop
pop
aam
sbb
decl
mov
cmpsb
test
xor
cmp
xor
repz
jno
scas
fistl
popa
inc
emms
std
pushl
push
in
inc
sub
je
cmc
gs
xor
jae
jne
jne
das
jp
pop
ljmp
cli
bound
aad
pop
sti
and
xchg
cmp
movsl
dec
rcpps
out
shlb
adc
fists
in
imul
pop
movswl
outsl
decl
mov
fmull
or
push
nop
sub
or
lcall
movsb
or
test
dec
dec
pushf
fwait
adc
lea
mov
lahf
mov
jmp
scas
icebp
adc
mov
or
fstl
mov
sbb
mov
inc
loop
decl
add
dec
in
inc
push
shrb
shl
aam
call
std
jnp
jg
cmp
fwait
pop
shr
nop
pop
sbb
fistps
cmpsl
hlt
ljmp
cmpsl
mov
inc
or
push
sbb
or
or
cmp
cmpsb
cmpsb
dec
push
cmc
or
inc
pushf
cld
push
in
lds
sub
stc
fbstp
aam
sbb
mov
mov
jmp
adc
insl
pop
js
mov
lret
mov
lret
out
jge
xlat
int
dec
push
xchg
gs
pop
ljmp
shr
rclb
fcmovnb
fstpt
js
clc
data16
fmul
adc
mov
call
jbe
mov
pop
stc
jmp
loopne
aad
into
out
call
push
inc
cmp
push
jp
insl
fs
dec
sbb
mov
jl
jge
xchg
insb
push
xchg
aas
dec
sti
mov
je
decl
into
popf
xchg
inc
movsl
outsb
pop
sub
test
sub
jnp
mov
decl
pop
pop
insb
and
ljmp
mov
xchg
add
jg
push
or
mov
mov
inc
arpl
lcall
cmp
add
pushl
pop
pusha
jg
sbb
fstpl
es
repnz
jae
add
pop
or
push
int3
mov
into
fldenv
mov
lods
roll
shl
pop
lret
mov
fldl
push
xor
andl
pushl
cld
pop
ja
xchg
inc
fwait
adc
clc
enter
inc
jg
adc
cmpl
outsb
cs
jg
mov
ds
xchg
stos
sub
popf
std
mov
and
or
lcall
mov
mov
sbb
jo
lret
sbb
xor
call
mov
mov
mov
inc
push
andl
loop
cmp
call
orb
fbstp
movsb
jo
jne
adc
dec
or
dec
dec
icebp
daa
ret
ljmp
jle
mov
pop
inc
movsb
jns
dec
js
stos
mov
cmpsb
sbb
xchg
movsl
decl
adc
pop
repz
nop
xchg
dec
les
cmc
es
cltd
push
jecxz
pop
or
push
mov
mov
xor
gs
adc
das
out
ret
decl
hlt
fistpl
pop
push
pop
fnstsw
movsb
cmc
xchg
or
mov
call
jl
xor
ss
jo
in
jmp
out
fcmovne
mov
inc
movsl
data16
mov
xor
data16
mov
icebp
fs
insb
sti
mov
pushf
fdivs
and
push
inc
cmp
sbb
arpl
in
xor
pop
add
pop
inc
cmp
cmp
jmp
fisubl
mov
xchg
out
roll
call
adc
mov
ss
lcall
lcall
loopne
add
negl
xor
movsb
fs
inc
inc
push
and
push
cmp
fdiv
clc
jo
cmpl
mov
hlt
std
mov
or
inc
inc
loopne
mov
pop
sahf
sti
imul
inc
ret
mov
movsb
pop
rcll
call
pop
fsubs
mov
or
dec
inc
enter
or
push
outsb
or
jb
movsb
jmp
pop
fcomps
stc
lahf
mov
fsts
lret
sub
loope
popf
sbb
mov
inc
mov
insl
inc
adc
sub
or
xor
cmp
pop
jb
push
pop
subl
ljmp
push
insl
add
enter
call
dec
pusha
pop
mov
sti
cmp
or
test
mov
sar
push
ljmp
sahf
loope
sub
mov
or
rorb
xlat
dec
jae
add
les
cmp
pop
stos
jo
pop
stc
mov
dec
aaa
out
ljmp
sbb
mov
jne
pop
test
mov
mov
loop
clc
repz
and
jmp
mov
add
pop
in
out
xchg
dec
or
xchg
mov
rcll
push
fs
and
lcall
push
mov
jecxz
out
imul
shlb
and
shrb
pushl
mov
leave
adc
xchg
loopne
jno
mov
lea
lods
lds
sbb
call
push
scas
or
push
push
into
and
jno
jg
movsl
lock
shlb
push
cmp
popa
icebp
xchg
mov
loope
add
mov
pop
adc
mov
hlt
jg
stos
hlt
enter
mov
and
jbe
leave
ret
mov
incl
decl
inc
mov
dec
pop
pop
xchg
or
mov
lds
add
fisttpl
ljmp
mov
jmp
mov
repz
adc
scas
mov
add
xor
hlt
lcall
test
stos
cmc
fstp
cmpsb
mov
in
dec
mov
ja
jmp
sti
mov
imul
dec
sbb
sub
adc
jo
push
dec
jns
inc
sub
addr16
sbb
lock
mov
and
popf
lcall
rcll
and
push
filds
movsb
lds
inc
sbb
cltd
fwait
cltd
mov
xor
ror
inc
adc
mov
test
sub
mov
ljmp
xchg
push
push
arpl
das
xchg
push
das
fidivrl
pushf
fiaddl
and
iret
pop
inc
lods
mov
xor
sahf
push
mov
mov
lret
cmp
push
rcll
sub
pop
inc
addr16
int3
adc
mov
clc
repnz
sub
out
cmpsl
xchg
fs
jae
mov
pop
mov
fcomps
jo
mov
ljmp
vmread
dec
sbb
je
sbb
dec
cltd
cli
das
and
xchg
add
decl
mov
je
das
xor
fcoms
rolb
movsb
jg
xor
adc
repz
iret
jae
fdivrp
inc
pop
enter
outsb
sub
out
data16
nop
rorb
enter
add
repnz
xchg
or
inc
jae
inc
test
jmp
cmpsb
movsl
mov
jne
push
sti
outsl
mov
lret
sahf
cmp
sti
stc
xor
add
inc
out
cmpsl
repz
dec
out
push
adc
jg
inc
daa
lcall
icebp
inc
daa
mov
cmpb
les
ss
pop
sub
ja
inc
pushf
and
pusha
addl
sbb
fbld
es
mov
int
imul
xor
movsb
loopne
mov
imul
mov
pop
xchg
push
cvtps2pd
cmpsb
nop
in
inc
ret
aad
mov
push
jnp
call
bound
or
lahf
jle
mov
pop
loop
popa
push
loopne
movsb
xor
jo
adc
decl
jmp
cli
out
inc
jns
mov
sbb
pop
push
or
mov
fsubs
sub
imul
call
or
cmc
mov
rcrl
call
cmp
sub
into
lods
lcall
ljmp
mov
cs
sub
dec
mov
sbb
or
inc
add
lret
jle
jmp
shrd
sahf
mov
ljmp
loope
add
in
aam
add
pop
dec
jbe
jb
mov
push
stc
inc
push
fmull
mulb
aaa
stc
xor
cli
aad
shll
sbb
add
inc
pop
add
pushl
call
gs
xor
pop
ss
out
fsubl
dec
push
mov
out
daa
push
imull
pop
sbb
loopne
daa
push
incl
mov
pop
divl
sbbb
pop
lock
fistpll
nop
and
decl
test
add
mov
xchg
dec
imul
sbb
neg
mov
cwtl
lock
push
push
scas
add
mull
push
rcr
mov
lds
in
push
mov
jo
cs
mov
imul
and
ds
fildl
leave
jg
pop
xor
jle
jns
stc
pop
mov
xchg
pop
scas
or
sub
pushf
jne
movsb
out
sbb
fldcw
mov
sahf
mull
and
ja
cmp
cmp
pop
mov
mov
lea
mov
popa
insb
adc
lcall
mov
and
xchg
popa
cmp
iret
push
inc
je
scas
inc
push
iret
cld
jl
cmp
sti
mov
in
xor
push
adc
sbb
in
cmp
sahf
cmp
inc
pop
sbb
es
jg
clc
dec
or
dec
dec
cmpsb
sbb
adc
pop
divl
movsb
xlat
pusha
cmp
dec
push
scas
mov
sub
mov
jo
mov
nop
adc
add
sub
adc
xchg
fldt
cli
repnz
call
inc
add
pop
inc
cmp
fmull
std
insl
jl
je
adc
inc
mov
mov
outsl
dec
dec
faddp
adc
test
lret
inc
icebp
mov
pop
in
cmp
int3
cmp
xchg
scas
incl
pop
jge
and
and
pop
jb
mov
into
dec
rcrb
in
lods
adc
nop
imul
mov
lods
incl
nopl
and
and
repnz
int3
jmp
lcall
mov
mov
sbb
push
jge
out
jnp
add
xchg
push
cld
sub
fcomip
repnz
sti
arpl
insl
orl
idiv
movsl
cmp
ja
decl
dec
cld
fnstsw
rcll
pop
js
das
add
ljmp
dec
jmp
call
in
scas
rorb
xlat
popf
fdivl
dec
imul
xchg
call
pushl
subl
push
adc
stos
mov
lods
hlt
icebp
sub
push
adc
rorl
incl
clc
dec
icebp
into
aam
cmpsl
lds
ja
pop
jnp
jns
push
push
fwait
adc
icebp
pop
inc
xchg
daa
lcall
adc
adc
adc
inc
loope
in
mov
pop
xchg
dec
mov
lcall
xchg
ja
jmp
ss
or
push
cmpsl
lods
clc
inc
mov
call
decl
mov
lret
jbe
sarl
loopne
movsl
cld
sub
ljmp
jmp
ret
xchg
int
addb
adc
sub
pop
pop
mov
push
decb
decl
xchg
movsl
cltd
cmp
ret
xchg
ja
lret
pop
mov
xchg
jle
fsub
int3
jp
inc
lcall
rcrb
mov
mov
sbb
pusha
ljmp
movsl
mov
mov
lock
pusha
lcall
andl
mov
jmp
fstl
mov
or
xor
lock
mov
cmp
lret
mov
dec
sub
cmp
sbb
or
pop
jecxz
sarl
pop
js
in
jecxz
iret
fwait
icebp
fcmovbe
cli
sti
lea
call
mov
mov
popa
and
cmpsl
jae
dec
in
fbstp
mov
into
inc
inc
mov
call
ret
iret
out
enter
pop
mov
test
sub
popa
push
adc
mov
cmp
stos
cmp
sahf
push
test
fbld
ds
push
lcall
mov
dec
push
xchg
mov
out
pop
fistpl
dec
loopne
filds
jmp
incl
pop
xchg
pusha
adc
push
outsb
subb
into
jnp
add
cmpsb
add
push
xor
lret
ret
clc
dec
mov
fwait
push
jae
mov
incl
jl
jne
icebp
ss
popa
dec
arpl
cltd
sbb
mov
inc
mov
ljmp
ss
xchg
sub
cmp
pop
or
jg
push
xor
es
pusha
xor
loopne
cmp
sahf
insb
lods
jnp
jmp
insb
out
and
clc
fwait
inc
ret
clc
mov
xor
nop
movsl
or
sbb
mov
add
xlat
pop
loopne
incl
ficoml
out
js
call
xchg
mov
sub
pushl
mov
in
out
lods
xorb
sub
ret
mov
jmp
inc
arpl
call
addr16
sub
and
gs
jne
lds
pop
push
jmp
mov
mov
call
lret
mov
mov
ljmp
jne
loopne
push
cli
mov
leave
outsb
cmp
push
push
xlat
je
addr16
mov
xchg
loope
jge
adc
js
or
dec
jae
mov
ljmp
sti
xlat
sub
in
jmp
jp
push
pop
movsb
leave
push
jle
ret
lcall
rclb
andl
inc
fwait
ret
dec
sbb
sub
dec
inc
ljmp
lds
and
in
add
mov
and
jg
aam
addr16
inc
mov
mov
and
test
js
mov
cmp
pushl
orb
out
imul
jns
add
or
fdiv
mov
icebp
mov
sbb
bound
xor
xchg
fstpt
js
lahf
mov
dec
imul
test
mov
jmp
cmc
cmc
imul
pushl
xchg
jae
scas
loopne
sbb
loop
sbb
test
mov
lea
loopne
ljmp
ret
hlt
int
lcall
dec
lods
daa
mov
inc
adc
mov
lret
add
in
push
sahf
stos
inc
jbe
mov
pop
pusha
push
enter
ficoms
xor
mov
aaa
les
jp
push
jg
mov
adc
insb
dec
xchg
outsl
inc
push
cld
add
in
ljmp
adc
fwait
and
aad
mov
dec
cli
imul
lods
mov
or
js
xor
xor
ljmp
in
lods
jns
add
scas
pop
shl
and
xchg
das
jle
push
sbb
decl
les
clc
xlat
inc
dec
push
hlt
es
lea
lret
cmp
mov
push
push
mov
addr16
in
test
push
fldenv
decl
adc
insl
jmp
add
dec
idivl
clc
aaa
inc
test
lcall
mov
adcb
jg
jmp
fiadds
sbb
xor
jg
cmp
lret
inc
popf
jae
out
add
or
xor
push
push
jge
jmp
cwtl
mov
je
push
movsl
and
fimull
mov
cmpsb
lcall
and
rcrb
filds
sti
mov
ret
xchg
sub
mov
lcall
out
insb
ficompl
jnp
pop
int
mov
rcrl
fs
sbb
jge
cmp
pop
cmp
cmp
mov
pop
jl
sbb
ljmp
push
mov
ror
cmpsl
imul
stos
push
ljmp
push
jb
popa
add
iret
pop
sbb
jbe,pn
xor
adc
pop
xchg
andl
call
test
imul
pop
push
add
xchg
jne
sub
pushl
movsb
mov
cmp
push
sbb
jnp
pusha
mov
adc
xchg
push
mov
xchg
jmp
addr16
lret
cmc
mov
xlat
inc
dec
xchg
in
push
bound
imul
push
pop
inc
iret
xchg
lea
jle
insb
push
add
push
adc
pop
push
adc
stos
push
divps
push
and
dec
add
imul
bound
incl
out
xor
loop
dec
addr16
aam
fabs
mov
jb
out
clc
insb
adcl
cmp
mov
lock
add
sub
repnz
mov
call
in
cmp
or
popa
cmp
rcrl
mov
push
xchg
pushl
mov
push
adc
add
test
xlat
sbb
movsb
dec
clc
or
push
jmp
decl
xor
das
imul
mov
cmp
popf
push
insb
sbb
movsb
enter
fcomip
jg
mov
and
mov
xor
mov
out
xor
sub
cmp
testb
cmp
mov
jne
push
icebp
sub
mov
xorb
jp
and
pop
ljmp
mov
mov
insb
dec
ja
jecxz
aam
in
fldt
out
repz
movsl
mov
mov
jnp
fsubl
outsb
ror
or
out
jbe
push
push
pop
pusha
cmp
mov
cmpb
mov
jo
cmp
loopne
mov
test
jmp
fwait
decl
cwtl
sti
push
push
pop
xor
or
clc
scas
sub
xor
pop
add
loope
mov
jmp
iret
inc
out
pop
pop
mov
cwtl
iret
stos
pop
push
jne
unpcklps
cli
int3
xchg
incl
es
pop
jae
push
jp
pcmpgtw
pop
xchg
inc
stos
add
or
or
pop
lods
add
aas
cmp
xor
pop
adc
pop
icebp
lahf
sahf
jmp
outsb
je
bound
sti
repz
rcrb
ja
xchg
cli
addr16
xor
jae
lock
incl
ds
sbb
mov
dec
lret
dec
jno
enter
dec
xor
add
lcall
scas
lret
inc
pop
movsb
jnp
sbb
leave
ficomps
dec
adc
int
sbb
xchg
push
test
fcoms
cld
arpl
ds
sub
test
pushl
fdivrl
dec
addr16
mov
sbb
xchg
mov
ss
je
inc
and
fcomip
pushl
or
xchg
push
xchg
cmp
mov
loope
inc
ljmp
cmp
out
rclb
stc
cmp
xchg
mov
mov
je
incl
loope
adc
sub
sub
add
adc
and
cmp
idivl
and
sbbl
icebp
call
sbb
in
je
push
pop
sbb
call
mov
and
sub
cli
roll
mov
or
int
jo
mulb
enter
sti
and
jecxz
dec
jmp
pushl
bound
fstpl
pop
pop
adc
aad
add
cmp
lcall
mov
jle
rclb
add
in
mulb
cmpsb
call
add
std
std
js
fnstsw
adc
into
daa
stos
xorl
sub
push
jnp
out
and
popa
pop
ds
andl
jecxz
or
gs
mov
movsl
mov
in
clc
decl
dec
xor
mov
stc
cmp
sbb
in
outsl
popf
mov
mov
cmp
xchg
arpl
movsl
push
iret
lods
jnp
lcall
das
das
mov
test
notb
sbbb
mov
inc
jae
lods
pop
cmp
stos
push
aam
pusha
mov
add
xchg
sarb
ljmp
ljmp
pusha
enter
jno
fstpt
jp
xchg
repnz
xchg
ret
push
rclb
mov
mov
popf
mov
bound
mov
icebp
jmp
gs
repnz
lcall
ljmp
and
stc
into
fs
call
daa
mov
sbb
shlb
loop
idivl
popf
xchg
ss
mov
adc
inc
xlat
jmp
or
xchg
sbb
fistpll
daa
test
lret
jmp
test
pop
cmp
int
push
add
lahf
xor
adc
ljmp
inc
mul
sub
fimull
mov
pop
popf
lcall
fidivrl
incl
jmp
fimull
pop
pop
je
cld
outsl
push
imul
aam
aaa
inc
dec
cld
cmp
lahf
popa
mov
pop
lods
mov
aam
out
pop
dec
pop
aad
dec
add
mov
out
xor
cmpsl
pop
or
jbe
ja
lock
enter
call
xchg
xor
lock
push
psrld
jb
lcall
cmp
les
add
push
mov
int3
sub
mov
pushl
lds
js
fcmovnu
adc
dec
int
sub
jnp
lret
pop
es
sbb
call
jnp
pop
pop
dec
dec
add
call
cmp
jmp
sti
icebp
inc
loopne
cmc
xchg
sub
add
pop
mov
loop
push
sbbb
leave
decl
mov
adc
dec
lock
scas
fs
dec
sti
mov
pop
xor
pushl
fdivrs
cltd
jo
and
dec
data16
psubq
out
xchg
mov
mov
inc
push
mov
faddl
xchg
jg
add
sbb
jp
and
mov
xor
dec
push
sub
cld
add
dec
pop
aas
lods
fwait
inc
imul
lds
jg
push
scas
xchg
sbb
js
mov
pop
fidivl
inc
push
push
lahf
push
fsubl
mov
shrl
fndisi(8087
mov
call
jl
scas
lods
rclb
sbb
adc
jmp
add
jmp
test
out
leave
xchg
pop
adc
adc
hlt
mov
popa
push
fldl
pop
call
cmp
incl
ja
and
lcall
dec
sub
inc
enter
test
pop
dec
ljmp
gs
clc
out
push
xchg
aas
xor
daa
fstpl
jne
xchg
cmpsb
jmp
push
fcomip
scas
std
rcrb
outsb
arpl
rcll
cs
and
outsb
jg
jmp
sub
lret
pushw
movsl
ds
cmpsl
lods
andb
ja
push
das
mov
movsl
gs
incl
mov
pop
insl
loopne
jmp
adc
lret
js
in
push
inc
jmp
in
sub
stos
jg
fmuls
inc
jb
jmp
adc
cld
xchg
bound
mov
fincstp
andb
cmc
lea
lock
sub
adc
push
sbb
jl
nop
aaa
bound
xchg
popa
sbb
out
pop
push
sub
and
add
inc
mov
pop
std
hlt
aad
shl
hlt
mov
dec
rclb
jbe
dec
out
xchg
add
pop
xor
xchg
dec
mov
sbb
sbb
into
ret
push
loope
xor
cmp
les
decl
testl
loopne
popf
adc
fistps
loope
ljmp
jmp
inc
loope
mov
addr16
or
mov
ljmp
xchg
jno
loopne
mov
mov
cmpsb
and
mov
or
xor
leave
sub
ja
stc
jle
repz
aas
fucomi
jp
pop
pop
fwait
rorb
pop
decl
push
dec
repnz
sub
or
mov
ljmp
push
cmp
movsl
mov
inc
ds
cmp
mov
test
call
mov
dec
outsb
pop
leave
into
mov
mov
cmc
fisubl
mov
cmc
jno
int3
dec
test
fisubs
outsl
ret
cs
xor
in
mov
jl
sbb
inc
test
mov
mov
ss
mov
cli
cmp
mov
pop
jmp
sub
pop
fstps
pop
loopne
sti
or
andb
pushf
movsb
repz
dec
int3
out
mov
pushl
loop
popf
jp
inc
adc
jno
stos
push
sub
imul
inc
stos
call
mov
sbb
sbb
cli
jle
nop
ja
sbb
push
dec
xchg
cmp
scas
jo
hlt
jg
bound
cmpsb
iret
sbb
xor
and
dec
ss
adc
rcll
data16
call
mov
mov
cmp
cmpsb
sub
popa
bound
addl
adc
out
adc
incb
xchg
icebp
or
inc
push
and
ljmp
adc
fsubp
icebp
cmpsl
in
jns
mov
mov
lcall
lret
das
xorb
inc
pop
mov
fmulp
je
call
mov
push
shr
je
loope
movb
movsb
data16
out
movsl
idiv
cmp
sub
repz
out
jo
mov
lock
xlat
jb
cmc
out
ret
xchg
xor
pop
fs
pop
lock
jmp
lds
stos
aas
mov
movsb
lds
iret
xor
into
adc
xor
enter
xchg
lds
mov
ret
or
jg
rcr
movsb
sbb
cmpl
scas
inc
xchg
sbb
call
int
xor
mov
dec
stc
dec
and
fstpt
jge
insl
les
push
pushf
and
mov
sub
rcrb
popa
push
pop
insl
jns
lods
mov
stos
iret
push
fwait
add
xchg
mov
push
cmp
sub
ss
mov
scas
out
cmp
enter
pushl
jno
jmp
xchg
lods
movsl
mov
ret
push
mov
nop
std
jp
inc
lcall
sahf
or
dec
shrl
and
std
mov
jno
xchg
dec
jmp
push
test
pop
loopne
jecxz
ljmp
cmpsb
ja
mov
mov
mov
pop
cmc
pushl
jne
jo
adc
aas
test
adc
enter
jns
mov
lock
jb
scas
cmp
idivb
clc
mov
scas
lods
test
xor
xor
mov
jo
pop
call
lods
inc
mov
lret
leave
jmp
mov
push
or
andb
cmp
push
mov
incl
jnp
push
inc
xchg
imull
dec
inc
popf
jmp
daa
cmp
ret
test
cmp
adc
fsubp
fs
xor
scas
mov
lock
ljmp
add
clc
shrb
addr16
mov
imul
filds
daa
cmpsl
in
in
cltd
adc
pop
push
int3
mov
pop
stos
lcall
js
incl
push
insl
test
bound
xchg
int3
adc
test
mulb
xchg
add
ljmp
dec
xchg
insl
mov
push
xchg
leave
arpl
cmp
mov
imul
mov
out
adc
push
std
jb
call
jg
idivb
sub
lcall
mov
mov
scas
pop
lret
sbb
fcmovnbe
ret
dec
into
or
xor
inc
incb
jnp
shl
pop
adc
pop
cwtl
xor
push
pop
pop
sub
jp
popa
jl
and
push
mov
mov
scas
dec
daa
push
fsubr
pop
shl
sbbl
outsl
cmp
into
daa
cli
push
movsb
clc
sti
xchg
call
jno
jae
pop
gs
jno
lret
push
out
sbb
xor
ss
cmpsl
pop
jns
cmp
insl
add
mov
les
fsubrs
adcb
fmull
sahf
dec
mov
push
jno
pushf
inc
and
lret
cmp
sbb
fcomip
sub
add
xor
out
pop
iret
movsl
in
negl
scas
popa
into
and
mov
js
push
fdivp
insb
jbe
mov
jns
popf
lahf
mov
mov
xchg
jp
lcall
xchg
adc
adc
in
mov
test
add
mov
or
in
xchg
xor
dec
jbe
into
sbb
jno
push
xor
cmpsb
cwtl
and
inc
add
jmp
push
cli
in
cli
stos
mov
or
mov
lcall
pop
mov
pop
adc
mov
jns
push
lock
aas
stc
push
dec
xchg
push
jp
outsl
cli
call
outsl
scas
inc
test
ds
add
jbe
inc
push
repz
lds
cmp
xchg
pushl
adc
js
in
in
xlat
cmp
xchg
push
arpl
orb
stos
in
add
incl
popf
es
add
adcb
cmpsl
pop
mov
mov
stos
push
mov
jb
outsl
sub
pop
idivb
rorl
cltd
je
pop
jnp
lods
ljmp
ljmp
pop
jl
jns
in
bound
es
jo
bsf
jns
out
mov
mov
js
cmpl
pop
js
add
shll
cmp
pop
les
insb
daa
pop
jo
sar
incl
shlb
or
imul
sbb
dec
lcall
lret
or
cwtl
fdivs
ljmp
add
ja
lahf
xor
loopne
lahf
add
xor
or
ret
jbe
daa
or
test
add
ljmp
pop
aas
pop
lods
sub
popf
adc
sub
pushf
popa
xchg
daa
lds
mov
pushl
rclb
wrmsr
mov
cs
sbb
mov
xchg
stc
call
mov
sub
ret
jl
and
call
ror
pushf
mov
lahf
push
add
stc
in
jmp
fmull
and
cmp
jno
mov
cld
or
inc
xor
and
rorb
xchg
ret
add
rcrl
cmp
xor
push
xor
scas
cli
inc
dec
outsb
xchg
icebp
mov
push
fwait
scas
jl
fs
jmp
add
pop
scas
lcall
xor
lea
lods
int
mov
push
sub
into
jne
jmp
rcrl
push
pop
jge
rorb
cwtl
dec
sbb
jg
fistpll
out
jno
mov
loopne
fsubr
push
pop
pop
outsb
out
test
mov
mov
jo
sbb
dec
lock
imul
in
es
cli
jge
repz
test
call
xchg
push
sahf
pop
add
ljmp
push
pop
push
inc
cs
mov
outsl
xor
pushf
fistpl
ret
cmpsl
insb
icebp
jg
pusha
inc
pop
sub
call
xchg
pop
fistl
std
lcall
sti
rcrb
ljmp
fwait
in
dec
adc
sti
push
dec
incl
mov
push
sbb
sbb
mov
xchg
or
call
and
lods
xchg
pop
mov
cwtl
jne
add
pusha
xchg
outsl
sbb
call
pop
arpl
push
cmpsl
cltd
cmp
cmc
mov
mov
packssdw
call
mov
addb
leave
push
je
add
ja
dec
dec
mov
incl
fistpl
mov
jbe
ss
movsl
cmp
xlat
repnz
push
pop
dec
sbb
xchg
popa
jae
lea
clc
das
ss
sub
lret
inc
pop
scas
stos
lods
push
sarl
call
cmp
cmc
push
dec
and
repz
xor
movsl
nop
pushf
mov
out
or
or
and
std
loope
fwait
inc
push
mov
mov
lock
js
aam
or
jmp
ljmp
xchg
repz
daa
mov
add
add
mov
fdivr
jg
and
in
xchg
mov
fs
mov
jle
push
decl
push
test
popa
push
es
cmovo
fwait
lds
adc
dec
in
mov
addr16
and
add
lcall
call
in
sub
cmp
mov
cmc
xchg
dec
repz
lcall
mov
pop
ret
dec
lahf
sbb
mov
jbe
or
mov
jge
cltd
inc
jae
pop
decl
mov
dec
sbb
pushf
xchg
xor
dec
jo
popa
xchg
push
cmp
mov
inc
xchg
scas
ja
and
in
xchg
mov
gs
mov
int3
inc
rcll
decl
leave
sub
inc
aas
xorb
mov
push
test
xchg
lcall
add
xchg
push
cmp
jae
cmp
shrb
incl
jp
mov
push
mov
hlt
stc
mov
pop
repnz
xchg
fcmovb
mov
loope
cmp
mov
and
xchg
jg
and
xchg
inc
jl
dec
or
mov
adc
adc
notb
decl
inc
je
sarl
add
gs
repnz
call
bound
jb
xchg
testb
pop
es
addb
repz
rcll
repz
sbb
call
mov
mov
orl
and
dec
xor
stos
sub
filds
cmp
jb
sub
je
jae
vmulps
call
mov
jp
dec
jl
and
rorl
icebp
xor
cmpsb
add
mov
mov
xlat
push
cli
fcomip
jle
fisttpl
hlt
ss
bound
popa
out
jl
ljmp
inc
ds
and
mov
xchg
imul
pop
add
mov
jno
notb
cmp
add
jl
cmpsl
or
test
add
lods
mov
dec
mov
ljmp
jle
ret
dec
mov
ucomiss
lea
pop
inc
adc
pushl
scas
lret
inc
out
aad
jmp
mov
mov
stc
mov
pushl
pop
xchg
push
sub
outsl
mov
push
add
cmc
sahf
push
push
xor
mov
decl
and
pop
enter
cmc
xor
mov
pop
movsb
loopne
jl
add
and
mov
ds
pop
out
and
xchg
nop
add
mov
push
xchg
lea
dec
xchg
sbb
mov
jns
popf
jmp
add
mov
rclb
mov
pop
out
push
lods
rorl
dec
sbb
stos
mov
pop
aam
jmp
jg
mov
cltd
push
notl
cld
cmpsl
ljmp
cmpl
cwtl
bound
loop
decl
icebp
cwtl
xchg
mov
xchg
decb
rcrb
fdivs
int3
mov
mov
lcall
lds
jbe
sbb
testl
dec
inc
loopne
ret
cli
call
sub
loopne
popa
lea
movb
test
mov
mov
adc
inc
scas
cmp
or
push
pop
and
push
inc
lret
pop
lcall
jmp
mov
xor
add
sahf
mov
and
cld
call
inc
jle
aad
scas
jl
mov
movsl
cwtl
dec
fs
mov
in
inc
outsb
lret
cmpsb
cmpsl
es
pop
adc
inc
push
add
mov
gs
fisubs
cmp
call
push
popf
lret
imul
dec
sub
out
movsb
jmp
push
xchg
dec
add
cmp
jmp
scas
sahf
pop
incl
mov
and
popf
and
test
addl
ds
sub
decl
outsb
fstpt
rcr
pop
adc
xor
xchg
sub
ljmp
cmp
push
xor
pop
and
fdivrl
inc
outsb
mov
pop
pop
inc
int
ljmp
in
add
arpl
cmpsb
fs
mov
sub
sti
or
pop
imul
inc
std
popf
sahf
inc
mov
call
and
lock
mov
ret
not
jmp
test
arpl
arpl
leave
nop
inc
push
push
dec
cmp
jmp
add
dec
adc
aad
pusha
dec
or
rolb
test
jle
cmp
adc
dec
negb
adc
lds
call
addr16
pop
fs
movsl
xor
call
adc
in
das
call
stos
mov
ljmp
sbb
stos
jecxz
mov
push
fst
xchg
mov
les
or
sahf
lcall
incl
ret
and
sub
movsb
cmc
xchg
jae
or
rol
rorb
or
sub
pop
cmp
scas
adc
pop
fincstp
jne
sub
jnp
aas
xchg
out
mov
sbb
hlt
sub
sub
inc
add
xchg
jnp
insl
rorb
mov
inc
or
xor
repnz
fnstenv
xlat
leave
cwtl
andl
in
push
dec
and
dec
jno
sbbb
stos
xchg
jmp
xor
xchg
loopne
jle
jo
sub
pop
xchg
cmpsb
stos
mov
inc
test
sub
mov
ljmp
or
lret
inc
cmp
pop
fisubl
ja
xor
or
add
cli
incl
inc
or
xchg
sbb
decl
xchg
cmp
lock
lcall
jne
xchg
ffree
fnstenv
mov
xlat
mov
fisubs
sbbl
jg
mull
fs
mov
fidivrl
mov
repz
shl
mov
sub
jg
sub
adc
movsl
mov
sbb
dec
jecxz
mov
jno
pop
jecxz
inc
push
push
add
jg
push
shlb
inc
sti
test
jnp
and
sbb
inc
inc
rcll
call
lock
fdivrs
ds
out
cmc
sti
lods
pop
stc
pop
adc
or
adc
decl
out
lahf
fs
into
push
xor
fldl
jg
gs
in
push
fsubs
mov
lea
xlat
mov
cmp
xchg
xchg
and
leave
daa
fwait
jb
shl
lods
sahf
scas
push
mov
jmp
pop
sbb
iret
out
mov
aas
lcall
shr
les
scas
inc
out
add
enter
push
jne
pusha
lea
imul
cmp
jb
push
mov
jnp
adc
sub
mov
decl
cmc
push
loopne
xor
mov
or
xchg
jbe
inc
outsb
outsb
mov
jmp
bnd
mov
fldl2t
adc
fs
shrb
ljmp
fs
stos
cmpsl
and
mov
out
jo
call
rorl
cltd
sub
lcall
stc
je
mov
add
out
leave
lods
dec
push
sbb
mov
cmpsb
iret
xchg
daa
sets
ljmp
or
xorb
inc
inc
outsl
test
inc
cs
repnz
lods
in
cmpb
data16
adc
add
insl
jl
cld
lcall
mov
inc
fmull
fsts
or
xchg
insb
dec
rcrl
cmp
mov
add
out
jne
cmp
adc
add
mov
enter
ljmp
adc
out
mov
out
mov
inc
mov
xchg
mov
es
in
push
cmpb
pop
ljmp
dec
push
dec
gs
inc
cli
and
lahf
push
mov
cltd
add
ljmp
add
adc
aad
cwtl
jbe
mov
push
xchg
push
cmp
fdivl
dec
add
mov
int3
push
or
popl
and
cwtl
ljmp
bswap
stos
jmp
push
js
int
mov
into
ror
jge
fisttps
sub
std
lcall
popf
mov
mov
daa
aad
cmpsl
xchg
aam
cli
push
mov
pushl
loop
cltd
flds
jbe
jg
xchg
out
insb
outsl
nop
or
fisubs
daa
pop
rolb
pushl
cmc
jecxz
xlat
mov
leave
xchg
jge
mov
jb
mov
cmp
ja
adc
lcall
aam
adc
xlat
popf
jne
rolb
inc
cmp
mov
call
std
fsubr
mov
popl
sub
push
jge
cld
or
or
xor
add
fidivl
call
incl
pop
sbb
insl
sbb
popf
es
loope
push
push
inc
push
mov
in
repz
inc
imul
jmp
sbb
outsl
mov
fwait
hlt
pop
inc
ljmp
lret
cmpsb
push
pop
rclb
mov
test
lahf
insl
jmp
sub
fs
lock
insb
push
mov
test
cmp
hlt
mov
jns
decl
enter
push
push
jmp
add
dec
inc
dec
inc
xor
add
pusha
add
fucomi
neg
inc
mov
add
add
or
call
or
or
fcomi
dec
push
ret
push
adc
push
adc
adc
push
std
fwait
dec
les
adc
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
orb
cmp
stos
sub
add
add
adc
add
loopne
dec
les
add
addr16
js
mov
jb
xor
xor
imul
add
jg
and
inc
push
adc
pop
and
xor
inc
mov
adc
mov
jb
js
inc
adc
std
addl
movq
adc
or
and
or
and
test
rcll
cwtl
or
cmpsl
fwait
test
add
scas
pushf
into
add
adc
pop
testl
adc
push
adc
aaa
push
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
add
and
pusha
add
scas
fiaddl
or
mov
dec
add
mov
lret
rcr
push
ret
sub
das
xchg
jae
sub
std
cmpsb
jg
xor
aas
imul
cmp
inc
or
pop
les
shll
inc
dec
call
loopne
mov
cmp
out
cmp
xor
incl
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
pop
adc
xchg
pusha
add
std
or
jbe
add
lds
cld
cli
and
pop
popa
std
pushl
jg
fnstsw
ficompl
cmpsl
xor
movsb
mov
bound
je
incl
pop
lahf
mov
movsl
jecxz
pop
mov
loop
push
stc
or
xchg
jg
or
insb
sub
addr16
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
std
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
pushl
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
incl
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
ljmp
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
call
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
add
push
lcall
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
das
fdivr
xchg
jmp
sbb
add
pop
std
lcall
jb
mov
mov
mov
sub
pop
mov
jl
rorl
xlat
sub
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
cli
lcall
in
sbb
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
ljmp
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
incl
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
pop
jo
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
jbe
adc
loopne
sar
adc
lahf
push
sti
rorb
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubrl
pop
fcom
ss
and
pop
inc
call
xchg
pushf
mov
repnz
and
mov
push
jle
icebp
adc
inc
aas
push
rcrl
negb
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
aaa
ljmp
repz
inc
sti
arpl
daa
std
or
sbb
mov
ud0
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
idiv
lds
fidivrl
jg
stos
pop
out
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
jg
mov
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
mov
push
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
ret
call
loopne
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
sar
jg
adc
lahf
mov
or
out
lcall
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
cld
dec
imul
or
inc
pop
xor
rorb
mov
subb
iret
mov
lock
inc
cmpsl
enter
lcall
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
lcall
test
aas
cld
out
fcomi
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sahf
push
loop
dec
inc
push
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
and
fisttps
mov
or
dec
ss
div
leave
inc
lods
movsb
or
repnz
mov
or
call
fistps
cmpsl
lret
pop
in
cmp
jmp
mov
int
cmpsb
insl
pop
lock
jmp
hlt
dec
mov
incl
inc
aas
mov
jg
mov
outsb
call
loopne
addr16
sbb
cld
daa
jp
std
adc
cltd
stos
pop
test
or
mov
ret
nop
cmp
das
incb
lock
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
aas
mov
push
fbstp
out
xchg
add
out
icebp
mov
cld
and
lock
mov
cmpsl
popf
sti
mov
fisttps
aaa
ja
push
test
jmp
call
xor
scas
mov
push
adc
mov
and
sbb
mov
push
sbb
mov
cmp
int
add
push
pop
aaa
push
cltd
nop
test
add
sbb
xchg
fimull
in
jmp
int
jmp
arpl
adc
mov
sub
jbe
mov
clc
loope
loope
mov
lahf
jp
or
scas
jo
add
xlat
jmp
mov
xchg
fbstp
xchg
fldenv
iret
fdivrl
xchg
mov
mov
push
cmp
repz
shlb
jo
push
cld
imull
out
jg
jno
ret
cwtl
scas
xchg
xchg
arpl
aas
mov
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
pushl
mov
jne
in
sbb
xchg
imul
jmp
outsl
test
ljmp
into
daa
jmp
faddl
mov
add
jae
jg
push
pop
pop
add
pop
bound
std
stc
push
dec
out
fstpt
mov
enter
or
ljmp
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
or
and
xchg
xchg
mov
fildll
fsubrl
dec
add
inc
inc
inc
or
add
push
sti
pop
inc
dec
push
jbe
int3
les
bsf
xchg
xor
popf
int3
pop
iret
and
add
ss
fs
add
cs
loope
aas
and
cmp
test
ret
insb
add
data16
cmpsl
mov
push
xor
jno
lret
mov
add
pop
popa
ja
or
adc
adc
jmp
orb
or
add
add
mov
mov
inc
inc
sbb
dec
push
add
mov
sbb
mov
sbb
ds
mov
push
cmp
sbb
fisttpl
push
mov
insl
imul
popa
xchg
and
jbe
outsl
inc
sbb
mov
xchg
mov
in
in
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
ret
dec
and
gs
push
mov
mov
out
sbb
mov
xchg
and
mov
jb
je
into
xor
fisubrl
outsl
sub
mov
jne
sbb
stos
pop
inc
fists
sub
pop
rcr
outsb
outsb
or
jae
lods
ja
push
imul
in
pop
xchg
shl
push
es
inc
pop
adc
shl
outsb
fs
jo
inc
movsb
jnp
or
gs
es
adc
pop
pop
insb
outsl
bound
fcomip
out
pop
push
outsb
or
imul
imul
inc
insb
sbb
mov
out
xchg
push
rcll
adc
bound
mov
out
arpl
daa
loop
jne
inc
outsb
cli
addr16
loopne
rcr
xor
js
insl
xchg
push
rorl
add
jo
sub
enter
mov
inc
jne
data16
cmp
cmp
mov
mov
lods
jb
out
je
sbb
pop
scas
ja
add
enter
push
dec
sub
push
mov
adc
pusha
test
in
mov
push
push
and
lock
iret
sbb
sub
pusha
add
filds
mov
cwtl
mov
and
pop
sub
lock
neg
jb
fcoms
xor
in
lret
rolb
rsqrtps
sbb
mov
adc
pop
and
sbb
shlb
sub
out
outsb
out
mov
jns
mov
movsl
push
pshufw
cltd
or
outsl
push
out
push
pop
xchg
loop
push
popa
inc
rolw
cmp
add
outsl
insw
cmp
jb
mov
arpl
sbb
aas
push
ss
mov
xchg
das
jae
push
pop
mov
push
loopne
dec
inc
dec
pushf
test
aad
inc
mov
inc
push
mov
jle
jne
dec
jb
xchg
inc
cmc
mov
xor
pop
sub
shll
test
pop
cmp
mov
pop
xchg
ds
sub
insl
or
sub
or
jl
je
out
es
or
rorl
xor
test
test
xor
push
lds
mov
andb
outsl
imul
sbb
jbe
adc
es
sub
push
sbb
mov
orl
mov
cmp
bound
in
and
popf
lahf
pushf
mov
sub
popl
push
sbb
insb
adc
jns
sub
push
mov
push
fsubl
push
adc
cltd
sbb
jge
sti
jae
xchg
bound
or
rorl
push
mov
mov
insl
or
cmp
inc
pop
fstpt
loop
bound
xor
ss
inc
inc
movsl
fwait
push
and
mov
mov
notb
or
inc
sbb
jecxz
jne
jecxz
fcomps
push
sub
add
push
mov
lods
sti
outsl
add
adc
add
sbb
lret
and
rcl
sbb
xlat
sbb
sub
push
lds
inc
xor
out
and
sbb
pop
jnp
inc
sub
cwtl
insb
in
mov
outsl
pop
sbbl
cmpsl
xor
lret
addb
add
mov
and
adc
inc
or
jecxz
pop
fldl
add
push
push
lds
roll
inc
ljmp
arpl
push
inc
xor
mov
mov
push
outsb
push
jne
inc
mov
cmp
pop
ret
mov
insl
inc
sar
lods
arpl
add
inc
pop
cmp
scas
setns
adc
and
jns
push
inc
xchg
or
jns
adc
cmpsb
jg
dec
mov
js
inc
jne
xchg
inc
pop
adc
inc
arpl
loopne
arpl
sbb
or
fs
pop
mov
inc
push
jg
cmpsb
sub
dec
ja
jp
and
inc
sbb
jbe
or
ss
dec
cmp
and
cmpl
jns
and
sbb
add
sub
jne
sub
mov
cmp
mov
pop
loopne
jmp
cmc
sub
dec
rcr
and
mov
arpl
sbb
fs
push
mov
mov
jne
outsl
dec
inc
jb
and
gs
mov
jmp
test
inc
inc
mov
mov
push
arpl
push
pop
ret
inc
imul
push
jecxz
popa
loop
fs
outsl
sbb
pop
fmuls
loopne
insl
rorb
insb
jle
syscall
push
shlb
push
fs
rcrl
and
dec
jae
popf
dec
sbb
xor
mov
sbb
lods
push
push
sarl
imul
or
push
and
or
popf
in
pop
push
mov
or
mov
inc
dec
push
push
pop
cmp
lods
xor
mov
adc
fs
xchg
mov
cs
mov
sub
pop
xor
icebp
and
popa
add
fisubs
mov
int
push
dec
lods
je
nop
or
dec
jne
dec
inc
jae
es
jns
push
stos
lock
xchg
fidivrl
imul
pop
add
or
mov
pop
shll
adc
cmpsb
imul
imul
fs
out
dec
rcll
add
lods
mov
lea
push
sbb
inc
push
outsb
outsl
sbb
dec
xchg
push
or
loope
pop
dec
fisttpl
push
outsl
pusha
cmp
and
and
add
mov
sub
adc
inc
jb
jne
bound
mov
jno
inc
jo
cs
js
sub
insb
inc
sahf
sub
or
notb
push
dec
add
movsb
jne
jns
adc
pop
jnp
rcrl
add
cmp
dec
sbbl
pop
mov
loope
add
in
sub
sbb
es
outsl
outsb
xor
adc
mov
or
mov
lret
fdivrl
test
xor
jle
mov
adc
jo
adc
stos
insb
aas
pop
stos
out
xchg
xor
or
mov
sti
pusha
adc
inc
inc
bound
lahf
push
shlb
adc
lcall
imul
cmp
jnp
or
mov
out
pop
and
jb
psubusw
imul
push
pop
loopne
xlat
inc
insb
and
loope
shll
cld
popa
imul
push
lds
or
inc
fs
clc
inc
sbb
jmp
add
insb
fistpl
dec
sub
lds
push
imul
cltd
pop
fcomps
call
loopne
push
lea
and
std
imul
hlt
test
dec
and
imul
cmp
xchg
xor
rcll
test
add
lds
aas
adc
jo
pusha
sub
mov
leave
ret
icebp
dec
pop
arpl
sub
bound
jo
outsb
ret
mov
addl
and
pop
addl
or
fcoms
vcmpeq_usss
inc
in
fimull
add
pop
scas
jne
pop
jmp
mov
cmpsb
roll
inc
add
data16
lahf
add
add
xchg
cli
cwtl
and
add
mov
stos
pop
cmp
lret
push
inc
call
jp
aaa
lcall
lea
xor
lcall
add
lret
sahf
mov
jmp
inc
or
ja
addl
outsl
int
xor
adc
ja
les
lock
jae
jae
and
and
xchg
sub
pop
cmpb
mov
adcb
add
push
sbb
adc
sub
or
lock
test
adc
lcall
add
incl
and
or
pusha
xor
or
jo
test
wbinvd
or
add
dec
les
pop
mov
movlps
jmp
add
push
push
or
cmp
lock
shrl
add
mov
push
adc
pop
inc
lock
add
dec
or
add
add
or
sbbb
std
pushl
jge
xchg
adc
or
or
sbb
adc
pop
or
and
push
in
lcall
adc
adc
push
and
sbb
pusha
push
sub
or
and
inc
or
decb
or
pop
inc
or
push
daa
adc
jg
repnz
or
or
adc
jmp
sbb
repz
pushl
add
xor
daa
jo
inc
or
dec
or
lods
lock
add
push
lock
cmp
add
arpl
scas
pop
lock
mov
pop
mov
pop
pop
sbb
xor
movl
std
call
popa
adc
cmp
cs
sbb
es
es
daa
sbb
pop
cwtl
dec
jg
mov
sub
add
es
add
mov
mov
dec
push
imul
rorl
inc
pop
or
or
sub
push
jmp
ret
push
adc
or
pop
dec
sub
call
sub
or
sbb
sub
sbb
inc
call
sbb
push
push
aaa
or
bound
rdpmc
push
sub
cmp
inc
sbb
push
fsubl
outsb
cmp
cmpl
inc
sbb
sub
pop
nop
cmp
sub
adc
jnp
or
lcall
add
and
pop
push
xchg
movsl
adc
pop
sub
lock
or
pop
notb
ret
or
adc
xor
xor
subl
add
push
push
push
sbb
lock
adc
xchg
mov
push
subb
lock
add
xor
idiv
pop
mov
cmovae
cmp
subl
sub
pushl
sub
sbb
nopl
or
and
fisubl
sbb
xor
inc
inc
cmp
incl
dec
test
adc
cmp
mov
xor
pop
popa
pop
sbb
cmp
pusha
lret
movl
push
pop
adc
mov
push
push
loopne
or
push
or
jnp
mov
sbb
and
int
push
push
pop
xor
or
jg
sbb
and
push
sub
or
adc
sbb
scas
xor
sbb
fcoml
push
sbb
xchg
pop
sub
cmp
mov
adc
loop
or
push
push
sub
cs
aas
insb
sub
repnz
sub
cmp
pop
and
push
aaa
dec
addb
add
bound
lock
xor
jg
jg
daa
sbb
subb
adc
sbbb
adc
sub
or
std
add
rorb
push
xor
dec
or
jnp
push
and
pop
sub
insb
pop
push
scas
addr16
inc
xor
jg
pop
lock
add
cmp
das
les
addr16
ss
xor
pop
cmp
mov
or
adc
and
lea
sub
sbb
inc
incl
push
lock
mov
inc
push
daa
sub
push
add
cmp
repnz
push
dec
lock
pop
and
lock
add
push
or
or
sbb
adc
sbb
loopne
adc
xor
sub
or
loopne
or
mov
movsb
jbe
push
and
sbb
adc
inc
mov
push
sbb
or
or
mov
or
push
or
lock
sbb
pop
sbb
cmp
jp
loop
adc
adc
pop
cmp
int3
xchg
pop
pop
adc
or
lahf
sbb
sbb
loopne
adc
and
mov
lock
pop
lock
add
ljmp
jo
push
and
test
xchg
add
aaa
jp
push
sub
inc
push
jo
pop
xor
inc
xor
mov
push
sub
push
pop
add
dec
push
or
sbb
fdiv
pop
repnz
xor
rolb
das
inc
add
pop
je
adc
mov
adc
mov
ret
outsb
push
add
sbb
xor
adc
or
jp
lock
es
lock
and
or
inc
pop
cld
decl
mov
lock
add
or
or
lock
add
sbb
shlb
adc
adc
stos
xchg
adc
xlat
or
push
adc
cmp
push
pop
mov
xchg
out
mov
or
pop
sbb
les
lods
push
pop
ficoms
push
adc
or
or
incl
mov
jo
dec
outsl
pop
jne
adc
sbb
sbb
push
daa
sub
adc
dec
dec
push
ret
js,pn
cmp
int
popf
xor
or
adc
and
mov
stc
adc
sbb
jp
or
dec
adc
and
or
in
sbb
add
xchg
dec
movsb
mov
pushf
push
sbb
adc
or
ds
test
shl
xchg
lock
outsl
push
int3
jmp
inc
add
xlat
leave
incl
inc
sub
lock
lock
pmaxub
sbb
xchg
es
negb
push
dec
lcall
call
sbb
push
dec
jmp
outsb
or
push
xor
jmp
add
lock
lcall
sub
nop/reserved
sbbb
push
push
sub
or
sbb
inc
sub
pop
mov
push
es
inc
adc
or
lock
adc
rcrb
push
sbb
notl
jne
ret
cmp
lock
je
std
sbb
and
fldl
or
pop
and
sbb
mov
and
je
enter
mov
pop
mov
inc
mov
and
push
dec
push
lds
pop
add
inc
ficoml
xor
inc
inc
sar
sub
dec
sar
mov
inc
pop
adc
push
and
adc
and
sbb
cmp
lds
push
jge
int3
mov
adc
sub
lret
in
or
sbb
sbb
adc
loopne
subb
push
mov
xchg
out
mov
adc
es
sub
imul
lcall
adc
pop
lock
add
rclb
inc
pop
popf
xor
jle
and
or
pslld
loopne
and
adc
pop
xor
fsubrs
xor
mov
outsb
xor
out
fdivs
clc
pop
sub
sbb
lock
roll
or
dec
sbb
cmp
add
xchg
xlat
sbb
sub
sub
addb
or
mov
jg
lea
adc
or
xor
sub
cmp
mov
fwait
std
pop
loope
lock
push
inc
lock
add
adc
sbb
push
sub
add
cs
push
or
inc
subl
fstpt
and
pop
js
shrb
movsb
xchg
xor
add
mov
mov
adc
sub
or
push
call
xchg
movsl
add
push
xor
rcr
mov
add
pop
cmp
pop
outsl
cmp
in
sbb
adc
sbb
or
adc
inc
pop
and
insb
xchg
or
pusha
or
push
or
inc
jae
and
adc
sbb
scas
fisubrl
pop
cmp
call
ds
pop
adc
pop
adc
pop
ds
and
cmp
add
insl
test
cmp
dec
js
sbb
andb
dec
add
adc
mov
movsb
dec
push
xor
ss
and
or
cmp
jnp
mov
or
adc
push
sub
adc
or
enter
pop
add
push
add
icebp
call
add
xchg
pop
cld
xor
cmp
xor
mov
addl
sbbb
data16
and
scas
adc
sub
es
adc
add
pushl
dec
fidivrs
cmp
ds
aas
inc
cmp
or
adc
or
test
xchg
cmp
inc
mov
cmp
sbbl
test
cld
scas
clc
cmp
test
movsl
add
aas
and
fwait
and
pop
outsl
cli
out
adc
adc
push
pop
pop
xor
inc
xchg
fsubl
dec
dec
subb
jmp
or
or
and
mov
sbb
sbb
add
sti
idiv
push
sbb
orb
js
mov
dec
push
or
xor
arpl
test
cmp
adc
mov
imul
fwait
push
lret
mov
sbb
and
and
push
pop
sbb
pop
pop
rcr
sbb
addr16
and
sar
call
adc
pop
nop
add
sbb
jbe
inc
js
mov
push
inc
outsl
daa
push
mov
fwait
xchg
push
das
jns
cltd
cltd
fwait
fwait
mov
jno
push
clc
lahf
mov
lock
pusha
sbb
sbb
sbb
jb
sbb
xor
frstor
test
mov
adc
lcall
pop
xlat
push
adc
sub
jbe
and
notb
dec
or
or
cmp
scas
sub
dec
pop
or
adc
and
inc
adc
mov
add
dec
sub
ljmp
or
or
and
sbb
pop
sub
or
cmp
adc
mov
inc
call
xor
push
cmp
and
or
es
leave
sbb
out
add
and
das
adc
or
or
sub
outsb
fcompl
and
sub
cmp
sbb
fdivrs
adc
and
xor
push
cmp
push
jnp
and
or
mov
imul
fisubs
sub
or
mov
adc
jae
adc
mov
add
jnp
ficompl
insb
push
sub
sub
lods
bound
ja
pop
hlt
or
adc
push
and
sbb
cmp
ds
shl
or
test
cli
adc
lods
add
adc
sub
std
or
add
adc
or
inc
rolb
jns
push
or
decl
cs
cmp
xorl
test
sbb
push
sbb
jbe
ss
xchg
or
inc
jne
fdivp
decl
push
adc
and
fs
je
movsl
or
pop
ror
adc
and
xor
pushl
bndldx
nop
adc
daa
or
push
testb
add
imul
sub
fdivr
das
mov
and
adc
jbe
adc
das
push
push
and
shl
adc
loopne
adc
xor
pop
fsubrp
dec
adc
in
or
add
adc
push
pop
push
shlb
and
cmp
or
dec
push
or
xor
call
adc
adc
sbb
pop
dec
and
sbb
or
push
add
push
xor
jg
add
mov
mov
or
push
shlb
mov
cwtl
mov
lcall
cmp
pop
or
or
inc
push
das
lock
or
in
xor
pusha
clc
pushl
push
js
lock
add
adcl
or
or
arpl
or
addr16
clc
das
outsb
sbb
push
jns
adcb
or
fdivs
into
or
ljmp
gs
js
inc
mov
xor
push
push
adc
shlb
popf
adc
lock
and
test
push
mov
adc
out
adc
adc
pusha
lock
rorl
test
icebp
sbb
mov
push
insb
ret
and
push
add
rclb
enter
push
and
mov
inc
pop
or
adc
xchg
mov
std
orb
xor
dec
inc
insb
sub
adc
mov
and
add
or
add
mov
mov
jo
mov
movsl
sbb
ds
outsb
ja
in
pop
inc
inc
add
pop
cmp
int3
inc
or
mov
mov
dec
cmp
pop
fimull
sti
add
xchg
or
scas
lcall
xchg
stos
adc
fs
popa
das
inc
push
adc
fadd
sbb
popa
mov
adc
push
pushf
lock
push
adc
adc
je
adc
ss
popa
dec
loopne
and
add
out
int
sbb
push
cmp
sbb
push
das
push
or
out
xor
sbb
push
push
daa
cmp
cmp
pushf
cmp
and
inc
and
or
and
sbb
adc
xor
sub
or
aaa
test
sub
adc
or
or
or
aas
cwtl
ljmp
pop
pop
aaa
dec
lock
inc
gs
insb
pop
hlt
fistps
add
sub
add
inc
push
xor
push
inc
push
ja
rolb
or
inc
pop
cld
adc
adc
or
lret
add
add
add
loop
add
dec
push
inc
add
sub
inc
push
or
adc
inc
sub
pop
push
mov
adc
das
adc
push
cmp
add
push
adc
cmp
push
jae
ja
call
xor
jo
pop
cmc
stos
decb
sub
cmp
push
add
pop
xor
sbb
incl
enter
sbb
push
and
push
push
pop
cmp
imul
das
fstl
xchg
ret
sahf
mov
mov
das
adc
outsl
out
mov
or
push
or
jmp
sbb
adc
cmp
inc
aas
sbb
outsl
jmp
push
pop
cmp
inc
sbb
xor
rclb
sbb
idiv
ljmp
pop
dec
dec
pop
pop
add
sub
es
daa
sbb
stos
arpl
sbb
sbb
imulb
aaa
cld
fcomip
lock
sbb
or
add
pop
ljmp
pop
adc
arpl
inc
push
data16
push
inc
push
outsb
aaa
aad
cmp
subb
sbb
lock
ret
and
call
pop
mov
push
sub
daa
outsb
sub
and
adc
add
and
dec
inc
push
sub
jp
pushl
fcoms
lock
add
or
sbb
pop
lock
add
lock
ss
push
adc
incb
jne
adc
xor
and
lock
push
imul
adc
adcb
jmp
add
out
inc
sbbb
mov
fsubrs
je
popa
and
adc
imul
orb
xor
inc
daa
mov
sub
pop
in
cmp
sub
adc
and
adc
add
imul
cs
addb
adc
mov
sbb
sbb
sub
adc
fs
dec
fs
jg
decb
or
inc
and
dec
xor
aaa
movsb
es
aaa
sbb
out
add
dec
insb
pop
adc
adc
pop
and
and
stos
adc
push
fwait
sbb
mov
sub
add
push
sub
adc
add
outsl
out
and
sub
and
cmp
sub
mov
subb
xor
sbb
fwait
mov
sbb
push
push
ss
and
mov
pop
push
es
jle
sbb
push
js
lcall
enter
sbb
jle
cltd
cmp
or
push
out
std
push
movsl
jp
or
push
mov
and
loopne
fwait
jbe
mov
imulb
das
sbb
push
push
lahf
push
sub
mov
mov
lods
or
rcrb
jl
cs
push
fcoms
adc
mov
decl
sub
or
sbb
inc
adc
cmp
or
xor
lock
push
push
or
cmp
gs
adc
ss
and
push
sub
sbb
mov
daa
decb
adc
adc
add
cs
getsec
push
adc
andb
das
cli
outsl
into
or
pop
and
xor
xor
and
ljmp
inc
xor
cmp
inc
add
and
iret
nopl
sub
pop
inc
pop
imul
cs
push
lock
mov
push
pop
add
cmp
push
pop
and
push
sbb
pop
lar
std
fistpl
sbb
cs
sbb
adc
dec
jb
call
add
pop
aam
dec
push
mov
inc
push
add
inc
pop
jno
xchg
push
mov
pop
out
inc
jo
and
ja
sbb
mov
inc
xchg
adc
dec
push
push
push
push
push
dec
xchg
fs
push
test
test
push
cmp
push
imul
and
int
lock
pop
and
js
add
hlt
sub
pop
movsb
xor
add
add
xchg
or
rolb
xor
add
push
sbb
sbb
sti
lcall
and
xor
xor
in
sub
sbb
cmp
add
sub
adc
add
sub
adc
pop
sub
aas
inc
aas
inc
aas
fldl
int
sbb
ja
test
mov
cmp
pop
dec
ss
xchg
insb
sub
sbb
cltd
pop
popa
jl
inc
xor
sbb
frstor
add
bound
sub
popa
mov
daa
push
adc
call
sbb
cmp
pop
sbb
add
in
or
adc
xchg
add
jg
push
or
xor
adc
or
push
push
dec
adc
adc
pop
push
ss
jg
mov
arpl
shll
mov
cmp
sub
and
and
pop
hlt
mov
push
add
gs
fs
imul
imul
int3
cmp
lock
or
enter
adc
sub
push
aas
adc
inc
sbb
inc
push
dec
cmp
sbb
and
std
sub
pushf
adc
push
sbb
insb
mov
or
or
dec
push
or
adc
cs
sbb
gs
ja
cmpsb
jmp
xor
pushf
mov
sbb
or
mov
enter
and
ss
or
adc
lock
incl
jo
in
dec
and
add
or
lock
mov
add
cmp
xor
mov
add
inc
sub
push
sbb
and
xor
imul
push
sub
cmp
inc
xor
xor
mov
sub
push
lcall
mov
into
jnp
sti
in
mov
and
cmp
sbb
sub
mov
and
std
add
dec
dec
dec
dec
and
sub
xchg
sub
in
std
cmpsb
sub
rcrl
pusha
sbb
pop
jmp
cmp
pop
out
pop
push
jl
cmp
pop
jecxz
and
out
fisubrl
cmpl
cmp
pop
jge
mov
mov
in
sar
adcb
inc
dec
cmp
clc
xor
inc
jl
inc
add
popa
sbb
outsb
inc
inc
fwait
jbe
std
jl
sub
addb
clc
jg
lock
mov
add
lock
add
cmp
cmp
lock
add
and
lret
push
cmp
xor
divb
nop
arpl
dec
subb
or
jl
cmp
insb
add
sbb
push
lock
insb
call
inc
fisttps
clc
add
push
xor
sub
add
data16
and
xor
nop
sub
xor
pop
and
cmp
loopne
ds
jle
xor
jae
inc
ds
pop
sub
fstpl
pop
adc
adc
push
fnstenv
or
adc
push
adc
or
les
add
or
mov
ss
add
or
mov
push
push
ljmp
push
add
mov
mov
dec
push
add
dec
and
in
lock
ja
push
add
xor
nop
pop
sbb
inc
cmp
dec
mov
sub
or
dec
mov
cmp
or
inc
add
or
or
adc
sbb
dec
add
xor
ds
adc
lods
adc
xchg
xor
jnp
cltd
fs
add
pop
sbb
or
adc
in
mov
xor
mov
sbb
dec
add
jnp
lea
or
inc
mov
dec
shrb
in
add
scas
or
adc
mov
mov
or
adc
andl
imul
stos
jg
xchg
or
insl
dec
push
sbb
aad
push
aaa
xor
movsb
cltd
jns
jno
and
popa
cmpb
push
xor
xchg
arpl
push
jle
xor
add
sbb
or
or
fnstsw
outsb
pop
or
sub
adc
in
cmp
or
outsl
pop
adc
sub
adc
or
adc
jb
mov
pop
or
insl
in
insl
fistl
sub
xor
shll
pop
or
add
sahf
loopne
and
or
push
adc
inc
inc
inc
and
adc
jge
mov
xor
mov
mov
fiadds
cmp
sbb
or
sbb
bound
adc
and
add
mov
notl
mov
xor
pop
sbb
xchg
leave
sbb
aas
xchg
mov
nop
and
sbb
cltd
mov
pop
cmpsb
adc
xchg
push
jnp
add
add
xchg
sbb
adc
addb
push
xorb
outsl
sbb
insl
dec
aaa
cmp
mov
shrb
sbb
js
or
sub
and
addr16
movsl
sub
sbb
sub
push
movl
inc
scas
adcl
stos
sbb
rol
push
lods
lods
stos
fwait
or
or
inc
adc
sub
dec
mov
mov
dec
xor
ja
mov
xchg
add
push
adc
push
xlat
or
pop
outsl
pop
shll
jmp
jnp
add
ljmp
mov
mov
jmp
lahf
ret
xlat
mov
mov
popa
xor
imul
push
sbb
and
sbb
xor
adc
jo
insl
inc
cmp
movsl
mov
mov
push
add
pop
add
dec
sub
fisttpll
sbb
adc
adc
in
aas
loope
push
lock
sbb
sbb
aam
lock
add
add
cmp
add
sub
sbb
and
add
or
and
and
lock
add
int3
add
push
mov
mov
mov
testb
and
adc
cmp
inc
sbb
out
sti
mov
or
sub
push
sbb
sub
sub
pop
push
in
inc
cmp
jne
pusha
dec
sub
enter
sub
inc
dec
test
loope
xchg
adc
lods
fldl
loopne
or
or
subb
jae
adc
bound
daa
into
adc
les
mov
xor
mov
push
or
stc
cmp
testl
outsl
lcall
add
pop
add
fwait
loopne
adc
adc
mov
dec
mov
test
imul
loopne
xchg
inc
and
sbb
pusha
jb,pn
jp
sub
div
mov
xchg
dec
and
int
sub
lock
sub
enter
pushf
aas
shrb
jae
arpl
out
inc
jae
dec
mov
inc
gs
out
aam
dec
dec
data16
addb
or
into
fmul
jle
push
or
jle
add
inc
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
repnz
add
add
