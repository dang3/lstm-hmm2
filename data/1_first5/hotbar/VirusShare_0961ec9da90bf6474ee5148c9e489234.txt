divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
sti
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
inc
pop
inc
push
adc
and
jl
fcomi
insl
roll
les
pushl
cltd
push
mov
fstpt
add
js
icebp
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
add
push
adc
mov
out
cmp
sbb
sub
dec
rcrb
mov
or
outsl
mov
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
push
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
mul
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
and
pop
addb
das
push
in
popa
and
add
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
push
ss
mov
in
adc
sbb
or
xadd
movsl
push
xorl
adc
jg
mov
adc
pushf
flds
shrl
add
pop
mov
clc
pop
outsl
jmp
xchg
jg
rorb
test
sub
aas
cld
push
mov
sar
xor
cmp
ja
adc
lock
mov
leave
push
movsb
es
adc
xor
mov
adc
out
push
ljmp
clc
lds
iret
jle
mov
cmpl
mov
mov
push
ret
add
jge
sbb
mov
testb
add
pop
cltd
sub
shr
enter
shrl
iret
mov
mov
sbb
push
dec
push
les
add
push
jne
pop
mov
inc
bound
jmp
mov
push
pop
mov
pop
jbe
mov
add
decb
mov
mov
or
add
push
push
lea
orl
fld
push
js
fldt
xor
into
mov
aam
push
push
sub
out
and
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
xchg
leave
mov
lods
loope
clc
mov
xchg
or
test
jle
cmp
mov
in
push
call
sahf
mov
das
pushf
shlb
inc
icebp
in
pop
xchg
fwait
push
push
xchg
sbb
or
jns
cs
test
mov
lea
cmp
and
js
sub
xchg
push
add
and
adcb
jbe
sub
adc
test
sbb
or
cmp
xchg
cmp
push
sar
push
push
mov
jbe
adc
cmp
jle
mov
out
pop
icebp
aas
pop
lret
add
cmp
cmp
jae
inc
stos
xchg
push
cmp
sbb
or
cltd
mov
add
jb
pop
add
xchg
outsl
jg
loop
leave
ret
lea
ljmp
je
cmp
aaa
cmp
ret
push
push
pop
outsl
scas
fadd
pop
fidivs
jmp
xchg
jmp
inc
jo
and
imul
pop
dec
jo
stos
jo
and
and
inc
sub
loope
jno
aad
aaa
stos
sar
out
orb
pop
pop
or
cmp
cmp
add
xor
jno
cmp
jne
push
push
mov
add
push
push
add
adc
pusha
or
push
mov
mov
or
pop
lret
rcrb
or
mov
jne
cmp
sahf
outsl
jae
and
sub
jo
loope
popa
adc
and
mov
subb
add
sbb
fnsave
fistpl
cwtl
mov
sub
pop
push
dec
jo
fwait
mov
mov
mov
push
or
lret
xchg
bnd
jl
or
pushf
sub
lret
rol
dec
out
pop
pop
in
pop
out
or
sbb
das
fimuls
add
or
sbb
dec
push
movl
rclb
or
adcb
mov
sbb
out
mov
mov
pop
push
pop
in
fmuls
and
add
add
sbb
cld
lcall
roll
addl
dec
inc
push
dec
lcall
cmp
popf
lea
push
add
push
sub
dec
stos
xor
daa
xchg
cmp
scas
pop
movsl
sub
nop
mov
nop
sbb
push
scas
dec
mov
popl
adc
xor
call
mov
push
cmp
push
inc
cmp
je
call
sub
outsb
adc
imul
imul
les
pop
mov
in
sbb
sti
xchg
arpl
mov
jmp
push
or
cmpsb
ljmp
cmp
push
in
mov
ret
lret
xchg
aam
out
dec
or
movsl
out
fcmovbe
mov
mov
cmp
push
cmp
adc
jge
xor
stc
push
jnp
xor
sub
jg
inc
fstp
cwtl
mov
sbbl
cmovne
sahf
add
shll
pop
mov
push
mov
adc
or
fwait
orb
mov
jle
mov
mov
push
adc
lock
mov
jecxz
lock
mov
ret
mov
insl
add
push
xchg
ret
ret
jno
ja
mov
ret
out
jg
div
decb
adc
xor
mov
adc
adcl
sub
call
xor
cmc
mov
inc
outsb
lods
loopne
xor
push
jecxz
addb
mov
aas
pop
jg
test
sub
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lea
push
pushf
mov
sahf
adc
sbb
push
aaa
and
xor
rcll
int3
outsb
rorb
push
push
mov
call
sub
add
or
fdivrs
fiadds
mov
add
das
sti
icebp
and
data16
sti
andl
sahf
lret
sbb
adc
or
inc
shlb
jbe
mov
lret
pop
fs
mov
pusha
mov
push
test
fsubl
lcall
test
add
testl
lea
sub
cmp
add
sbb
fcmovu
push
xor
js
and
adc
popa
add
mov
add
je
fcoml
or
aas
dec
lock
je
and
sbb
inc
pop
mov
xlat
andb
or
scas
ret
cmpb
lea
or
mov
xchg
fcomps
add
bound
pop
je
pop
sti
sbb
es
adcl
rorl
sub
xchg
mov
jg
in
test
jecxz
or
mov
add
push
sbb
adc
and
sbb
xor
jecxz
push
lret
jl
pop
push
sahf
adc
and
xorb
test
decb
outsl
negl
pop
mov
sub
out
mov
mov
dec
js
mov
push
pop
es
mov
movsl
cmp
movsb
push
jns
jns
or
jo
pop
jb
or
mov
movsb
jnp
inc
mov
or
into
scas
mov
movsb
roll
les
inc
or
mov
mull
or
dec
ja
inc
aas
ret
fcoms
or
push
dec
jmp
in
bound
cltd
or
adc
inc
sahf
and
sub
xor
cmp
push
ret
ja
aaa
add
ss
push
push
or
mov
xor
add
fsubrs
lea
leave
and
jo
push
push
fwait
sbb
xchg
xor
hlt
jne
jns
dec
mov
add
dec
orb
jmp
mov
fmuls
or
in
or
test
movsb
mov
out
mov
xor
mov
pop
jg
rolb
cmp
jne
xor
xor
sbb
xchg
push
das
pop
out
ss
jo
pop
mov
pop
add
in
push
outsl
lea
loopne
ja
pop
pop
jp
add
push
mov
mov
jne
ret
mov
ret
imul
jmp
repnz
je
or
inc
pop
sbb
and
orb
loopne
or
xchg
xor
lahf
imul
lret
cmp
inc
pop
sbb
movsl
in
push
in
pop
pop
push
test
ret
lret
sbb
mov
or
aam
jge
decl
inc
xchg
outsl
in
adc
out
add
syscall
xor
lock
push
test
test
xchg
push
loopne
aam
mov
fwait
xchg
scas
outsb
cltd
roll
movsb
mov
cmpl
mov
xor
and
sbb
add
fstl
cmp
into
push
and
add
add
fldt
pop
jbe
pusha
mov
je
in
repz
lds
pop
data16
push
adc
test
popa
mov
add
inc
out
bound
mov
movsb
jmp
jle
lods
mov
les
push
sbb
pop
neg
sbb
shlb
pop
les
ret
je
arpl
lods
rcrl
or
and
rcr
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
call
test
push
xor
paddw
in
test
lods
or
lods
add
push
mov
or
sbb
imul
adc
dec
test
cmp
or
push
xor
adc
dec
insb
sub
subb
mov
push
aaa
sbb
mov
jmp
scas
js
aaa
adc
adc
adc
or
movsl
dec
jae
jo
or
nop
shlb
inc
xor
rcl
xchg
out
out
mov
xor
fwait
xchg
ret
movsb
pushf
push
sbb
and
pushf
pushf
fcoms
sbb
mov
mov
int3
sbb
inc
xor
int3
xchg
pop
enter
arpl
sbb
enter
pop
adc
rcrb
rcrb
and
hlt
mov
sbb
iret
sub
inc
mov
xchg
mov
jmp
sbb
inc
scas
movsb
sbb
mov
dec
pop
push
dec
and
mov
jmp
lock
sub
lods
into
or
add
and
shlb
mov
dec
iret
pop
cmpl
xorb
or
add
scas
jne
mov
insb
adc
cld
rorl
dec
repnz
adc
sti
ret
sbb
int
ja
cs
mov
ljmp
and
push
orl
lahf
jo
cmp
loopne
xorb
fdivl
mov
ror
inc
add
stos
sub
mov
nop
and
push
cli
sbb
cwtl
and
adc
inc
adc
dec
pusha
inc
movsb
and
push
xchg
push
shl
ficoml
push
push
dec
cmp
imul
in
add
mov
icebp
ss
pop
dec
mov
es
xchg
sbb
pop
mov
adcl
movsl
xchg
mov
mov
dec
jns
fsubs
rclb
daa
lock
out
pop
add
je
lcall
add
je
or
xor
cltd
inc
jl
scas
adcb
cld
push
orl
jne
mov
fcmovne
push
push
jecxz
in
push
jmp
enter
sub
adc
or
cmp
shll
mov
and
cmpsl
mov
je
adc
or
adc
mov
das
clc
dec
or
mov
sbb
mov
into
push
sbb
pushf
jl
cmp
push
mov
jb
or
dec
jb
or
dec
pop
dec
push
in
lret
adcl
insl
mov
aaa
adc
and
rcrb
scas
scas
and
jb
lret
jl
xorb
sub
mov
push
stc
or
fsub
push
adc
cmc
xor
inc
adc
shlb
hlt
cmp
push
cmc
fisttps
adc
push
adc
imul
push
pop
sub
push
fwait
mov
lock
mov
fistpl
jne
or
inc
pushf
jl
jo
jmp
sbb
jb
pop
push
xor
push
and
pop
dec
sbb
loopne
inc
sub
pop
mov
cwtl
push
sahf
les
testb
pushf
pop
nop
aaa
or
js
pop
stc
or
daa
fs
fmuls
testl
neg
pop
adc
clc
add
add
rclb
add
js
sub
daa
or
in
add
pop
cmp
in
and
pop
and
xchg
jecxz
adc
jg
add
ret
or
loope
sahf
out
add
fs
lret
mov
cmp
addb
and
fldt
add
cmp
je
dec
jo
aaa
push
push
pop
in
pop
test
add
adc
cwtl
pusha
mov
call
cmp
inc
sbb
add
adc
int3
es
push
pop
mov
pusha
push
pusha
in
jne
dec
push
push
lods
push
sahf
sub
mov
mov
and
jle
and
inc
jb
and
push
and
pusha
loope
je
scas
or
popa
pop
rolb
pop
stc
popa
jo
xlat
adc
push
xor
xchg
cmpsb
std
daa
aaa
add
insl
cmp
mulb
xchg
je
incb
mov
rorb
lock
sub
cltd
test
dec
loopne
adc
and
mov
scas
sub
pop
add
xor
sub
xchg
and
subl
push
popa
das
mov
sub
jno
jmp
jbe
inc
lret
ret
sbb
enter
or
jbe
mov
add
mov
add
add
cmp
pusha
inc
xor
das
aad
cmpsb
daa
sbb
pusha
insb
or
mov
lods
mov
shr
ret
sub
fsubs
jne
cmpl
mov
or
adc
out
mov
adc
ffree
cmp
lret
xchg
sbb
jo
cmp
cmpsl
xchg
inc
and
out
shlb
add
rclb
in
mov
mov
cmp
mul
or
push
sbb
imul
cmp
movsl
loopne
or
and
jle
fcomps
nop
cmp
push
mov
mov
sbb
dec
sub
or
mov
cmp
dec
testl
popf
jp
pop
xchg
cmp
hlt
ds
pop
mov
pushl
jnp
and
xchg
dec
xlat
push
mov
inc
mov
addb
pop
shl
xor
xor
sub
jno
loopne
fldcw
lcall
mulb
add
daa
inc
shlb
stc
pop
mov
sbb
push
adc
test
popf
sbb
ret
push
jo
adc
lahf
daa
pop
cmp
cmp
insb
and
pop
and
and
sbbl
and
mov
rclb
jae
je
in
xchg
hlt
js
pop
mov
test
xchg
inc
or
pushf
inc
cmpsl
std
ds
and
fisttpl
js
mov
or
mov
adc
adc
movsl
push
push
mov
push
test
sbb
pushf
mov
aad
mov
cmpsb
and
xor
add
notl
and
ret
push
je
mov
lahf
mov
mov
pop
jge
out
popf
aaa
cmpl
push
lahf
add
push
push
pusha
mov
dec
adc
lret
and
mov
fistpl
mov
sub
fdivl
sub
adc
pushf
xchg
or
push
mov
lods
sub
clc
loopne
cmp
push
mov
or
inc
lret
pusha
add
loopne
jle
push
jge
mov
add
daa
xchg
lock
popa
es
mov
loopne
sub
add
dec
adc
loope
add
xchg
sti
sub
pop
add
jge
orb
nop
sbbb
lock
rcrb
loopne
push
pushf
add
loopne
mov
mov
push
dec
dec
jne
test
nop
call
cmpsl
icebp
or
dec
adc
ret
sbb
arpl
pusha
adc
mov
loopne
mov
repnz
cs
mov
or
jecxz
xchg
sbb
add
outsb
loopne
fldl
jle
or
je
sub
jns,pn
mov
ret
adc
sub
sub
sti
int3
mov
sub
sarl
dec
sbb
sub
xchg
dec
or
add
mov
or
mov
fwait
push
test
jne
or
xchg
cmp
sti
adc
pop
test
loopne
std
mov
mov
rolb
sub
repz
sub
pop
je
add
push
and
loop
out
inc
out
add
sbb
mov
inc
aad
or
sbb
mov
mov
shrl
lock
inc
ss
cmp
lcall
les
in
scas
pop
xlat
mov
sarb
fwait
mov
mov
mov
or
les
or
push
sbb
mov
or
in
push
fdivrs
push
fsubr
or
shrb
in
or
mov
movzwl
jnp
jg
and
adc
dec
dec
icebp
jg
cmc
je
sub
jmp
jge
imul
push
jmp
adc
ret
push
cwtl
sbbb
inc
or
adc
or
or
and
push
push
cmp
movsl
mov
das
xor
aad
pop
das
mov
ja
arpl
je
lock
clc
mov
mov
xor
inc
mov
cmp
cmp
jle
push
cmp
mov
addb
push
into
fnstcw
ret
jle
mov
sbb
mov
push
sbb
xchg
push
push
fdivs
xchg
mov
dec
popf
mov
lock
cmp
pop
mov
je
pop
or
cmpsl
xlat
push
loopne
sarb
dec
sbb
add
cli
pop
pop
adc
mov
push
movsb
jae
jo
cmp
push
stos
sbb
mov
fcompl
inc
fwait
pop
lea
fildll
call
loopne
shrb
fcoml
jne
add
rclb
and
sbb
into
in
loopne
mulb
pusha
cmp
stos
loopne
jmp
mov
xor
xor
push
int3
rclb
or
imul
mov
in
add
pusha
je
mov
jl
sub
dec
mov
push
add
xor
dec
pushf
ss
jp
xchg
add
or
inc
cmp
jns
xor
add
roll
cmp
inc
nop
xchg
mov
or
adc
jb
test
and
pop
mov
or
faddl
rolb
test
in
loopne
and
cli
or
add
dec
add
ret
dec
fadds
call
dec
mov
rcrb
jo
inc
ja
sbb
adc
fimull
push
imul
stos
sbbb
dec
jns
push
pop
xchg
cmp
add
ret
cmp
cli
in
mov
dec
rcll
in
nop
or
or
stos
adc
lods
dec
xor
mov
inc
mov
scas
sbb
pusha
sbb
mov
inc
mov
adc
sub
loop
pop
cmp
les
sub
jb
pop
xor
push
sbb
push
call
and
insl
xor
or
addl
ret
fs
stc
add
decb
call
push
inc
mov
out
popf
or
push
addr16
mov
add
aaa
xor
or
push
aas
mov
sbb
add
and
add
or
imul
and
dec
cmove
pop
fmuls
dec
movlps
leave
loopne
adc
sbb
adcb
dec
clc
repz
andb
adc
out
add
xor
mov
sahf
sbb
adc
inc
mov
pushw
ret
sbb
adc
out
insb
sahf
aam
fcoms
fsubl
lahf
lret
loopne
in
mov
mov
xor
inc
mov
pushl
jae
rorl
push
js
cmp
ret
shr
movzbl
push
adc
cmpsl
jno
push
ret
push
push
inc
in
movsb
pop
add
mov
insl
mov
xchg
xchg
push
insl
mov
sbb
push
rcrl
arpl
xchg
mov
mov
stc
ror
addr16
fldt
inc
push
gs
or
xor
sbb
xor
pop
out
aaa
sbb
cmp
je
push
add
xchg
rcrb
int
or
mov
add
lock
add
mov
decl
flds
mov
cmp
jg
mov
pop
sbb
adc
pop
ror
dec
arpl
lea
arpl
pop
xchg
mov
enter
mov
enter
jns
add
mov
xchg
mov
cmp
adcl
fwait
mov
add
subl
sbb
jecxz
jne
or
loop
inc
ret
push
pop
jmp
mov
push
mov
add
sbb
mov
and
cmp
je
push
fwait
mov
into
jmp
shlb
cld
jne
xor
cmp
xor
lock
clc
cmp
pusha
or
xor
inc
cmp
jae
pop
mov
or
xor
ja
mov
and
xor
je
push
mov
outsl
pop
sub
add
fiaddl
mov
mov
pop
add
ret
hlt
sub
scas
pop
hlt
add
jo
in
jb
jg
push
adc
inc
js
mov
rorl
stos
clc
shll
test
nop
add
mov
sub
mov
push
pop
xor
adc
cli
lea
ljmp
push
push
out
sbb
lods
pop
daa
sub
test
xor
sahf
lret
jo
leave
pop
in
mov
jle
push
mov
shrl
cmpsl
mov
dec
lahf
cmp
push
addr16
js
jb
sub
or
ret
lds
xchg
xor
jg
fimull
leave
js
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
or
inc
adcl
jl,pt
jbe
add
inc
sarl
mov
popaw
mov
push
push
pop
adc
cmpsl
leave
fdivr
mov
and
insl
xlat
pop
pop
scas
push
inc
rorl
jl
cld
fistps
hlt
jl
repz
push
or
jb
dec
mov
das
push
xor
mov
inc
ret
or
mov
cmp
sbb
jae
mov
push
dec
pop
or
xchg
mov
xor
popf
or
fiaddl
xor
jne
mov
mov
adc
push
add
loopne
mov
push
je
cmpsl
std
or
mov
ret
je
mov
fsubrs
mov
mov
push
mov
ds
mov
dec
sbb
or
sbb
mov
stc
or
dec
enter
mov
or
test
hlt
add
add
pop
dec
or
mov
imull
mov
jae
dec
fs
sbb
sub
adc
mov
insb
add
inc
outsb
mov
push
add
add
cmp
xchg
gs
enter
lret
push
inc
fcmove
jae
jb
insb
scas
jnp
xor
cmpsl
mov
xchg
sub
jge
or
mov
mov
cmp
jne
out
test
icebp
cmp
je
jbe
movb
fldl
or
in
push
push
and
mov
daa
lock
cmp
je
pop
sbb
add
andb
mov
mov
shlb
inc
call
push
ljmp
fidivrs
or
adc
push
scas
setne
xor
mov
insb
pop
movsb
scas
or
pop
xchg
ljmp
jne
adc
aam
add
clc
jg
jo
bsr
mov
or
es
add
adc
pop
test
pop
mov
adc
mov
rorl
test
js
push
js
dec
lock
jo
add
add
arpl
loope
push
push
pop
outsl
mov
xlat
pop
adc
dec
push
push
cmp
dec
pushf
mov
shr
add
sarb
jne
push
mov
jne
ficoms
push
inc
sbb
push
mov
cmpsb
nop
subl
add
test
jns
fnstsw
mov
nop
jb
lock
shlb
hlt
sub
pushl
or
jge
cmp
je
pop
inc
or
jb
cs
mov
repnz
or
add
insb
cld
cmp
lea
jbe
push
inc
mov
test
test
push
add
cld
sbb
test
sub
sbb
add
sbb
push
dec
hlt
xor
movl
popf
dec
add
dec
addr16
sub
mov
loope
loop
xor
js
in
adc
inc
loopne
add
inc
sub
adc
add
xlat
jecxz
cmp
rolb
adc
mov
cmpsb
xchg
mov
icebp
or
pop
mov
mov
mov
shr
jecxz
js
push
das
push
js
or
add
lcall
daa
icebp
sub
dec
lret
inc
push
sbb
lods
jb
scas
xor
mov
add
clc
sub
add
inc
scas
xor
dec
pop
shl
sub
fldt
jne
pop
sub
or
bound
sbb
mov
aam
and
xlat
sub
mov
dec
or
leave
jne
mov
call
cmp
add
ret
adcl
test
les
add
call
cmp
pushf
cmp
or
pop
add
xlat
nop
add
inc
jl
rclb
inc
push
jo
sbb
mov
sarb
clc
mov
push
popa
adc
mov
ljmp
xchg
shrl
popa
add
sub
xchg
dec
jmp
inc
cs
add
or
ljmp
in
add
outsl
and
icebp
mov
pusha
les
jno,pt
movsl
xchg
pop
jecxz
and
pop
mov
ficompl
pushf
jmp
push
push
mov
cmc
stos
add
adc
push
nop
and
mov
cmp
and
aad
inc
sub
movsl
mov
push
or
in
jmp
imul
inc
push
xor
jl
pop
clc
loope
lret
cmp
or
mov
inc
and
push
shrb
adc
loopne
jne
in
inc
inc
mov
adc
leave
and
clc
cmp
mov
repnz
adc
cmp
in
adc
sbb
push
inc
outsl
das
mov
push
push
mov
lock
mov
add
or
and
jge
sahf
xor
out
sub
sbb
js
std
pop
pop
ret
mov
pop
mov
cltd
xchg
int3
pop
or
nopl
or
adc
sti
cs
sub
dec
push
mov
leave
gs
mov
inc
sbb
or
and
push
sbb
and
and
in
sbb
and
xchg
cwtl
mov
sbb
push
sahf
pop
inc
pop
or
ljmp
push
cmpsb
add
das
rorb
out
enter
movsl
jge
pop
xlat
ss
adc
sbb
and
stc
adc
cmp
popf
cmpl
loope
sbb
cmp
push
mov
fisttpl
shrl
pop
negl
xor
or
mov
add
cmp
add
push
mov
jmp
push
add
sti
sti
lock
bound
clc
dec
sbb
jb
jbe
das
pop
mov
dec
and
pop
jmp
sahf
cld
fucomp
mov
pop
sub
jne
sub
dec
je
or
aaa
into
adc
in
jge
adc
or
decl
rcl
div
aas
sbb
jmp
mov
mov
dec
idivl
leave
jmp
sub
push
imul
add
xor
cld
mov
add
push
mov
xor
jnp
fsubl
and
or
adc
xchg
ficoms
adc
pop
push
mov
mov
pop
inc
dec
pusha
mov
mov
xchg
or
rolb
clc
xchg
jo
add
daa
pop
pushl
test
lcall
outsb
mov
and
in
popl
sbb
shr
frstor
dec
sbb
jae
mov
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
stos
jmp
and
jmp
xchg
mov
pop
scas
lret
out
sbb
jbe
cmp
cmp
out
ljmp
cmp
add
push
pushf
mov
iret
lea
pop
and
pushw
or
stos
and
sub
stc
insb
fstl
dec
imul
jno
inc
adc
sub
stc
mov
lahf
rorb
fmuls
inc
fmuls
xchg
push
out
mov
sbb
xchg
pop
jge
pop
jg
loop
imull
inc
push
mov
jg
jg
bnd
lea
push
push
push
push
add
push
cli
mov
movb
xchg
out
cmp
subb
cmpsb
add
dec
mov
inc
test
inc
stc
and
cltd
lahf
ret
leave
into
sarl
lea
sbb
inc
dec
jl
movl
sbb
scas
mov
rcll
sbb
jp
stos
rorb
cli
sbb
sbb
or
inc
or
mov
xchg
xor
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
add
add
mov
xchg
sub
add
push
ret
mov
xor
mov
adc
xchg
push
aaa
xchg
dec
adc
out
xor
lcall
xor
dec
je
jno
jle
ss
and
pop
cmpsb
adc
rorl
sub
adc
jnp
adc
xor
mov
jns
jne
push
sbb
and
adc
or
mov
mov
mov
add
movsl
dec
push
adc
lret
dec
inc
fistpl
dec
mov
call
test
mov
repnz
in
imul
mov
loopne
mov
loop
cmp
mov
mov
mov
xor
ficoml
xor
rcl
mov
fnstcw
test
add
push
cmp
out
sbb
pushf
jl
in
jge
sbb
cmp
lea
jl
add
je
cwtl
add
jecxz
cmp
pop
cmp
loope
andb
push
add
mov
clc
aam
push
aam
das
in
and
cmp
loop
jne
int3
push
roll
mov
imul
loopne
clc
daa
sub
add
jle
aam
sub
fsubrl
xchg
inc
add
cmpsl
rorb
xchg
mov
dec
test
shlb
sub
xor
dec
mov
das
add
mov
jne
push
xchg
pop
out
sub
xor
pop
faddl
jo
xor
push
rcr
pop
dec
je
lea
push
loopne
add
mov
fwait
lret
jo
sub
loope
aas
mov
cmp
pushl
call
push
or
jge
es
sub
or
jns
lcall
push
fisttpl
mov
push
mov
lock
mov
dec
div
push
dec
je
dec
push
push
sub
jg
xchg
call
fwait
cmp
lods
sub
sub
in
dec
jmp
mov
pop
sub
aaa
daa
insl
es
cmp
push
mov
add
lcall
inc
adc
dec
cmp
in
and
adc
xor
lods
xor
sbb
mov
dec
loopne
and
push
dec
pop
lcall
or
sbbb
xchg
test
jecxz
fistps
cmp
ficomps
fwait
add
dec
dec
scas
lods
enter
addl
popa
into
in
and
add
dec
cmp
sub
jbe
loop
adcb
push
iret
jl
push
sub
mov
cmp
mov
fimull
clc
neg
sbb
and
push
push
out
cmp
sub
adcb
mov
mov
lods
mov
in
hlt
dec
test
jge
pushl
inc
scas
add
jnp
pop
add
adc
punpckhdq
arpl
jmp
pushl
and
and
in
push
roll
xchg
pop
xchg
jo
pop
pop
xchg
or
mov
mov
in
pop
ljmp
js
push
rclb
decl
jle
cmpl
jne
pushl
xchg
je
ja
dec
sbb
push
adc
mov
fadds
adc
nop
jmp
sbb
add
xor
add
dec
addl
or
inc
scas
aas
movsl
sbb
pop
cmp
je
cmp
leave
fldcw
sti
sbb
or
jno
add
pop
js
push
mov
test
ja
xor
leave
popa
in
mov
test
inc
inc
shrl
xor
aas
incl
jne
movb
jmp
cmp
jecxz
les
popf
movsl
fldz
xor
xchg
cmp
enter
or
xchg
test
mov
dec
aas
mov
add
mov
test
ficompl
pop
ja
mov
sub
test
loop
sbb
cmpb
and
sti
dec
jo
test
or
popf
sub
and
sbb
or
push
fidivrl
sbb
es
add
leave
push
pop
inc
aad
adc
shlb
pop
cmp
ja
loope
iret
push
adc
enter
cltd
add
shrl
xor
cltd
stos
xchg
test
mov
in
cmc
xor
or
xor
int3
ja
movsb
shlb
adc
xor
xor
daa
sbb
mov
push
push
lea
and
add
add
insb
sub
dec
dec
jae
push
int3
inc
dec
lret
outsb
and
push
push
lret
jl
cmp
cmp
xchg
andb
jbe
xor
imul
inc
shrb
mov
mov
xor
clc
sbb
test
mov
jno
enter
cwtl
imul
inc
inc
fldl
fmull
adc
push
pop
int3
push
out
call
push
xchg
push
push
push
add
mov
aaa
movsl
mov
mov
cmp
push
stos
adc
jp
cli
ja
mov
mov
mulb
es
andl
out
sub
sbb
cmp
int
pop
into
popa
in
or
xor
ja
lea
sub
out
jge
xchg
add
mov
cmp
adc
fmuls
dec
rorl
dec
add
test
aam
or
cmc
jmp
fs
xchg
jle
add
rorl
pop
test
adc
sub
cmpb
mov
jo
fdivs
cmp
cmp
pop
sub
pop
push
pop
mov
push
inc
mov
aaa
cs
sub
push
push
mov
mov
adc
sbb
and
repz
cmc
mov
jmp
fisubrs
rolb
add
mov
cmp
or
push
das
pusha
mov
pop
inc
or
push
cmp
sub
lcall
jne
adc
pop
push
popa
push
stos
xchg
xchg
stc
sbb
sub
roll
xchg
fbld
je
jnp
nop
or
sbb
daa
out
xor
add
movsb
insl
mov
shlb
pop
jecxz
orb
fisubl
je
shld
iret
loope
and
xor
cltd
mov
pop
inc
and
lea
mov
or
into
mov
orl
pushf
dec
sub
ret
add
jo
inc
enter
add
mov
ljmp
fcoms
mov
add
adc
stc
push
in
cli
test
xchg
push
xchg
jp
test
jg
adc
pushf
mov
stos
lock
xchg
rcrb
shrb
xor
mov
scas
mov
pop
dec
loope
sbb
testb
or
shlb
and
push
fucomip
or
out
cld
fildll
pusha
fstpl
push
pop
jge
mov
sub
push
sub
xor
mov
dec
jg
lea
cltd
idivl
add
xchg
or
movsl
daa
rcr
mov
js
out
pop
imull
fs
or
xchg
arpl
mov
leave
jle
cmp
std
pop
stos
int
mov
cld
negl
pushf
movb
jnp,pt
dec
sbb
dec
lea
mov
jl
xchg
sub
jg
pop
ljmp
dec
nop
or
out
insb
std
outsb
mov
test
xchg
fildl
mov
out
stos
fisttps
test
jns
faddl
or
mov
out
ds
lock
mov
sub
mov
fcomip
xchg
int3
mov
mov
inc
les
out
push
pop
jp
xchg
pop
jl
jmp
into
add
das
or
lock
je
into
clc
fidivl
jmp
push
add
movsl
rclb
out
push
pop
mov
pop
jne
pop
pop
movb
add
xor
xor
jmp
mov
pop
in
ljmp
mov
inc
cmp
and
orl
xlat
and
xor
mov
cmpsl
je
addr16
push
out
sub
bound
int
or
push
xor
test
jmp
sbb
test
dec
mov
shll
into
pop
leave
ret
and
setl
xor
int
sub
jnp
call
push
data16
imul
in
add
mov
mov
repnz
xor
fs
sbb
sbb
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
aam
cmp
inc
jne
sti
mov
outsl
lods
add
adc
mov
cmp
fs
leave
pop
xor
orb
add
int
pop
sub
push
mov
lea
push
mov
push
movsb
pop
mov
in
inc
and
lea
subl
decb
mov
dec
or
dec
or
add
or
xlat
pop
insl
or
adc
cli
sbb
push
inc
xor
mov
sub
xor
adc
imul
add
sbbb
imul
sbb
les
pushl
or
cmp
sbb
mov
or
push
dec
jbe
shlb
pusha
pextrw
sub
mov
push
pop
shr
pop
ret
inc
xchg
pop
popf
dec
sbb
movnti
xor
test
mov
pop
or
inc
cli
and
push
lds
dec
push
ds
sbb
mov
pop
mov
and
pushf
lcall
andl
dec
cmp
sub
clc
add
fisttps
mov
push
push
add
mov
shrb
mov
clc
setb
test
inc
add
add
mov
sub
cmp
xorb
mov
xor
dec
adc
data16
push
lea
push
lods
mov
pop
aaa
cmpb
jle
je
push
fnstcw
pop
lcall
insl
add
fldl
add
cs
dec
mov
mov
jecxz
pop
push
mov
hlt
scas
sbb
mov
sub
aaa
push
pop
iret
in
incl
fldt
not
push
inc
or
das
push
loopne
nop
push
mov
mov
mov
leave
and
dec
les
xchg
pop
lods
test
sbb
add
mov
pop
out
adc
clc
mov
sub
pusha
sbb
imul
jmp
push
pop
xorl
out
xor
in
in
mov
repnz
cld
sub
pop
xchg
data16
sti
arpl
add
arpl
adc
clc
popa
jl
xor
cwtl
dec
and
add
or
js
cmp
jle
icebp
inc
push
xor
and
adc
das
inc
xor
and
add
xchg
addr16
sar
add
jmp
pcmpgtw
ja
pop
js
aad
fldt
and
adc
jmp
jno
sbb
and
test
pop
gs
or
push
mov
adc
inc
pop
les
cmp
add
ds
fs
sbb
pop
cwtl
loop
jp
jns,pn
jns
push
in
enter
push
pop
fmuls
adcb
loopne
push
jns
push
and
mov
push
rclb
or
nop
fcompl
aaa
pushl
dec
int3
add
in
pop
add
jecxz
les
adc
jae
shrb
das
add
les
push
test
test
add
cmp
outsb
hlt
fsubr
mov
mov
hlt
sub
rcl
arpl
adc
pop
xlat
mov
pop
pop
je
jne
daa
lahf
or
test
ds
or
mov
add
push
pop
xchg
push
ret
insl
test
or
and
sub
fldl
jne
movsb
pop
pop
push
cmp
outsb
xchg
lods
jnp
mov
arpl
adc
rcrb
mov
mov
push
sbb
adc
mov
js
in
adc
push
xchg
push
andl
dec
rclb
and
in
cmp
adc
jne
mov
popl
je
xchg
push
inc
sbb
push
xchg
pop
pushl
push
lret
sub
xor
jmp
ja
pop
andl
dec
cmp
mov
add
sbb
sbb
rorb
test
shlb
xlat
insl
xchg
xchg
mov
test
je
stc
loop
jne
jg
dec
mov
jmp
dec
mov
sub
and
fstl
aam
mov
lcall
dec
add
xchg
inc
pusha
inc
xor
cs
adc
cmpsl
xchg
sub
cltd
dec
insl
push
mov
sub
leave
js
cmp
jge
daa
in
jmp
mov
mov
mov
cmp
sbbb
cmp
mov
shlb
call
inc
cmpsl
lahf
push
in
or
mov
jns
js
fsubr
sbb
inc
inc
lcall
ljmp
cmp
int
inc
cs
sbb
aam
xor
sbb
push
xor
test
mov
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
xchg
and
inc
sbb
fisubrl
sbb
in
or
jnp
loopne
mov
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
leave
repnz
dec
add
sbb
jno
pop
lea
das
arpl
pop
push
or
addl
stos
es
pop
pop
popa
cmp
dec
lock
jo
add
mov
ret
jecxz
xor
popf
inc
shlb
push
or
sbb
loopne
lea
mov
jo
std
cmp
mov
push
jge
mov
sub
push
iret
frstor
fidivl
aad
mov
add
out
cmp
push
xchg
push
movsl
test
in
fwait
jle
push
pushf
lret
xor
add
jmp
mov
xchg
or
push
mov
push
jne
stc
outsb
nop
data16
adc
push
pop
pop
test
cmpsb
add
pop
dec
clc
mov
pusha
fmull
adc
sbb
stos
and
insl
addr16
or
or
in
repz
int3
arpl
in
call
inc
sbb
lock
and
adc
or
pop
mov
pop
daa
pop
arpl
mov
rorb
and
loopne
cmp
sbb
dec
add
pop
mov
add
xchg
jle
jge
loope
inc
cwtl
adc
sub
call
or
adc
je
inc
add
mov
xorl
ficoms
or
ss
les
stos
xor
enter
mov
sbb
sbb
or
clc
sub
hlt
push
or
cmpsl
cmp
jmp
lock
pop
dec
call
cmp
inc
ja
clc
ljmp
xor
lods
xor
cli
in
call
lock
dec
mov
sub
lock
shlb
dec
lahf
aaa
jns
clc
pushf
jge
mov
cli
in
jmp
aas
hlt
mov
mulb
mov
sub
add
into
push
push
add
push
call
or
mov
dec
xchg
cmp
and
jp
adc
sub
inc
or
iret
push
rcrb
test
inc
jmp
jbe
cmpb
add
int
sub
jg
mov
cwtl
add
mov
jb
ret
xchg
cmp
jmp
mov
addl
rorb
or
mov
shlb
mov
or
adc
pop
push
mov
call
repz
xor
xor
jle
addl
movzwl
dec
push
cs
outsb
mov
jmp
mov
jl
cmp
xchg
push
lea
push
push
adc
inc
lods
cld
push
push
shll
or
popw
hlt
jbe
pop
push
mov
push
nop
jp
sbb
outsb
adc
add
cmp
push
and
or
inc
xor
rorl
inc
xorb
mov
push
fisttps
in
subl
scas
das
add
shl
aaa
cwtl
cmp
fwait
mov
mov
ss
pushf
es
adc
int3
ret
pop
mov
mov
jae
add
push
divl
push
mov
add
xchg
inc
ficompl
sub
sub
add
mov
adc
scas
mov
outsb
xchg
push
leave
ret
xchg
push
push
test
hlt
sub
paddb
add
lea
andl
xchg
mov
xchg
pop
inc
fcompl
push
test
cmpl
addr16
movl
loope
xchg
mov
dec
sub
adc
inc
shlb
add
iret
xor
test
push
xchg
arpl
dec
push
mov
dec
add
mov
or
inc
out
cmp
adc
pop
push
outsb
call
popf
pusha
test
and
or
push
addr16
call
or
xchg
or
test
lds
inc
add
sahf
jo
jg
int3
jmp
mov
orb
aaa
or
xchg
js
ds
cmpsl
push
sbb
pop
test
js
sti
xor
inc
ljmp
and
or
adc
or
sub
scas
cmpsb
push
inc
iret
daa
push
mov
aaa
sbb
mov
xchg
mov
xor
pusha
or
sub
loope
mov
xorb
mov
sahf
fnsave
push
enter
jno
nop
or
dec
mov
push
adc
out
or
lret
mov
push
jnp
mov
mov
mov
add
addl
add
inc
xor
add
or
inc
jp
stos
andb
and
lock
mov
adc
movsb
push
xchg
sbb
daa
adc
xchg
jb
mov
add
ja
dec
lea
mov
iret
xchg
sbb
and
pop
lods
movsl
aam
adc
push
jp
pop
ds
lea
sbb
jo
pop
int
sub
push
push
ljmp
inc
mov
out
andl
out
out
ror
orl
fstps
pop
les
rclb
aas
and
inc
add
adc
inc
or
lcall
add
sbb
sub
xchg
inc
ret
push
lret
pushf
inc
repz
lea
test
push
adc
add
iret
sub
lea
dec
sbb
scas
mov
mov
add
loopne
add
xchg
xchg
adc
iret
nop
lea
xor
pop
sbb
adc
add
mov
nop
or
sbb
setne
in
and
test
pop
iret
aam
mov
pop
push
sub
cwtl
aad
lock
sub
mov
repnz
mov
lea
or
push
imul
adc
sbb
or
mov
test
je
xor
negl
out
or
adc
push
dec
mov
or
mov
jmp
xor
cli
add
mov
push
lahf
lock
out
mov
pop
push
push
mov
cmp
mov
je
faddl
xor
popf
push
es
shll
arpl
cmpsl
lock
jnp
movsb
jo
rorl
xchg
mov
mov
insb
dec
lea
cmp
mov
mov
pushf
in
dec
adc
loop
jne
subl
push
push
pop
jne
add
sti
cmp
in
aam
mov
gs
sbb
and
push
cmc
pop
cmp
in
test
pop
ror
inc
add
stos
mov
push
pop
jmp
mov
clc
fdivl
xlat
dec
add
popa
or
lret
dec
addr16
test
sbb
sub
adc
or
dec
and
sbb
and
inc
cmp
adc
cld
xchg
or
jmp
push
sti
nop
xor
cmp
adc
movsb
call
jl
and
imul
sbb
pop
incl
xchg
xor
shlb
addb
loope
xchg
adc
aad
pop
push
pop
xor
xchg
mov
daa
loope
xlat
push
repnz
push
cmp
aam
add
lret
jge
inc
js
aad
mov
push
jle
xor
add
push
nop
mov
loope
data16
jp
rorb
mov
cmp
push
and
mov
pop
pop
mov
call
push
push
mov
mov
fadd
xor
loope
fldl
or
mov
aad
call
inc
push
rcrl
cmc
sbbl
mov
dec
adc
inc
or
lret
push
insl
mov
fsts
mov
decb
repnz
mov
scas
sahf
subl
lock
mov
push
pop
data16
rcrb
xchg
fs
lock
sub
loope
mov
cmp
or
daa
mov
inc
cmp
jnp
aas
pushf
mov
cmp
in
add
push
adcb
add
loopne
paddd
jbe
mov
fdivr
ret
jne
and
pusha
pop
pop
les
mov
scas
shrb
lret
pushfw
clc
mov
add
lea
lea
mov
mov
lea
push
scas
enter
in
ret
push
es
in
incb
fisttpll
lahf
and
lahf
sar
aaa
mov
cmp
xor
cmc
mov
cmp
mov
inc
mov
pop
addr16
push
out
sub
cli
insl
pushf
lods
and
in
popa
add
push
roll
ret
jns
and
mov
push
loop
test
sbb
js
in
andl
xchg
dec
lea
xchg
pop
mov
jecxz
add
sub
mov
sbb
inc
out
dec
das
ss
xchg
and
loope
push
pop
xchg
mov
add
or
jge
add
lret
push
add
repnz
andb
mov
and
mov
add
pop
icebp
aas
cmp
out
add
dec
mov
enter
push
outsl
jp
cltd
mov
lea
and
adc
push
cmp
adc
sarb
xchg
jle
setno
push
mov
mov
push
fists
popa
in
outsb
and
mov
push
fs
shr
imul
jno
and
sbb
imul
lret
nop
andl
push
adc
pop
cmp
or
mov
xor
popa
sbb
inc
or
adc
in
leave
ret
mov
add
adcb
inc
pop
fiaddl
or
mov
and
jne
push
fisttpll
mov
add
pop
test
mov
sahf
push
imul
insb
lcall
or
aam
add
jecxz
mov
push
add
jp
mov
dec
in
add
fadds
addr16
adc
mov
cmc
xchg
and
jbe
popf
movl
maxps
jl
pushf
loope
pop
and
je
pop
or
lds
sub
and
mov
and
fdiv
add
jge
div
mov
mov
cmp
popl
faddl
and
sbbb
sbb
add
sbb
or
push
stos
fs
imul
adc
jmp
test
sbb
xor
inc
aad
popa
xchg
lods
xlat
sbb
imul
xor
sbb
sbb
stc
shlb
pop
xlat
sahf
imul
rcrb
pop
or
sub
movsb
sar
pop
mov
push
pop
cmp
je
push
mov
mov
or
sbb
or
or
cmp
fcomps
push
dec
outsl
rcr
push
xor
and
test
and
lea
das
mov
add
add
rcr
call
and
and
adc
sub
and
lds
push
cmp
add
and
sahf
pop
sub
nop
iret
add
adc
sub
or
and
lods
mov
sbb
mov
jp
jbe
dec
testl
imul
cs
aam
lods
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
stc
mov
push
xchg
subb
into
int3
arpl
rorb
push
sbb
cmp
push
xchg
lds
jge
sub
mov
fdivr
cmp
or
shlb
mov
lds
lcall
loopne
pop
popf
call
fucomp
xchg
or
in
dec
call
rolb
jmp
push
jo
loopne
push
sbb
imul
dec
ret
insb
pop
fldl
mov
out
ljmp
in
add
mov
shlb
pop
gs
rcrb
gs
add
les
ret
dec
fstl
jp
enter
iret
adc
jl
xor
mov
push
addl
dec
xor
lea
pop
and
fsubrs
dec
repz
rorb
push
mov
fists
out
loop
ss
or
mov
pop
nop
sti
mov
loopne
pop
xchg
out
xchg
mov
sub
or
and
adc
dec
or
jb
xchg
scas
out
iret
js
call
mov
dec
pop
or
xchg
push
test
xchg
test
add
test
xor
addb
mov
pop
cmp
push
jnp
or
xor
scas
mov
jae
fisttpl
rclb
mov
mov
mov
inc
scas
int3
pusha
repz
mov
pop
inc
lret
mov
js
ficoms
push
jae
xchg
fistpll
xchg
dec
adc
and
push
cs
outsb
push
data16
add
mov
dec
add
mov
aaa
xorl
les
and
and
je
jae
rcrb
cmp
mov
xor
add
bound
add
sub
add
cmp
inc
ja
jl
push
mov
mov
xor
pop
pop
or
pop
cwtl
aad
push
sub
push
sbb
jo
mov
bnd
scas
sbb
pavgb
mov
rolb
add
lods
int3
mov
insb
rorl
movsb
dec
hlt
sub
xchg
int
lret
xchg
sbb
rcr
adc
mov
add
inc
inc
loope
mov
adc
xchg
clc
mov
outsl
cltd
dec
xchg
dec
stos
ret
sub
sbbb
fwait
outsl
cmp
enter
clc
setle
fnstenv
add
adc
mov
rcll
pusha
cmovle
or
mov
pop
clc
out
or
cmpsb
pusha
push
mov
cmp
push
mov
push
ret
xor
push
or
outsl
push
inc
jo
adc
push
mov
repnz
xor
mov
sbbb
cmc
push
scas
push
int3
push
inc
inc
movaps
cmp
mov
das
adc
cltd
xchg
lock
clc
icebp
test
push
lods
scas
add
or
mov
lods
mov
test
cmp
jmp
aad
xchg
sbbl
in
mov
shrb
mov
push
jo
jae
lods
dec
ret
pop
enter
loopne
add
sbb
add
ret
aaa
lods
stos
adc
mov
leave
test
mov
subl
pop
arpl
pusha
adc
scas
fsubs
pushf
je
cmpb
rcl
jmp
jmp
ret
push
mov
cmpsl
push
stos
fimull
adc
je
jl
clc
call
arpl
stc
sub
lea
push
lea
push
inc
xchg
cmp
push
jmp
mov
cmpsb
cmpsb
nop
pushf
xlat
loope
fisubl
xchg
jmp
xchg
lret
cmp
push
sub
cmp
jle
pop
sub
sub
scas
lcall
jne
out
cmpsb
add
push
add
jg
lcall
shll
mov
ja
int3
out
ret
or
cmp
je
sub
pop
ja
shlb
push
stc
cmp
fcmovnu
js
add
ret
fstps
sti
add
loope
sti
push
xchg
sub
dec
fwait
push
adc
in
pop
pop
ds
add
in
sub
lea
out
push
dec
or
inc
sub
sbb
or
adc
js
or
or
fisubl
cmp
mov
ja
push
or
hlt
adcl
lahf
push
and
call
hlt
jmp
lock
test
mov
mov
or
add
xor
clc
daa
test
divl
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
cltd
xchg
push
sub
cmpsl
incb
out
rolb
cmp
je
sbb
jbe
push
mov
mov
fbstp
mov
shrl
mov
push
mov
add
inc
or
pop
pushl
aaa
mov
mov
rcrb
je
sub
cld
mov
add
push
push
sub
es
add
xchg
dec
add
jbe
jne
push
sub
dec
and
insb
sbb
js
push
cmpsb
dec
or
inc
sub
mov
inc
cmpl
jb
mov
dec
stos
rorl
mov
test
push
xchg
lock
jge
cwtl
pop
stos
jne
adc
cli
or
movsl
clc
dec
jnp
xchg
inc
and
push
mov
mov
push
dec
ret
dec
popa
cmp
cmp
push
leave
push
cmp
dec
clc
adc
leave
es
mul
seto
mov
enter
mov
push
jmp
cmpsl
mov
mov
push
xor
test
jbe
sub
dec
mov
ficomps
adc
mov
aad
clc
mov
push
adc
mov
cli
push
dec
shll
adc
ds
push
sbb
cmp
cwtl
xchg
and
adc
andl
add
movsb
roll
jae
fs
inc
inc
add
dec
xor
mov
xchg
push
dec
cmp
inc
clc
xor
mov
int3
cmp
scas
cmp
pop
aam
shr
push
sahf
and
cli
movsb
mov
nop
clc
or
in
mov
sbb
pop
lock
or
sbb
cmp
je
addb
add
or
lock
push
aam
cmp
jne
inc
xchg
sub
jecxz
add
aad
cmpsb
add
inc
xchg
sub
adc
outsl
push
cmp
mov
pop
lcall
aas
jge
jae
faddp
jmp
jl
ret
pop
push
test
push
ss
xchg
jmp
mov
inc
jno
cmp
les
sbb
inc
cmp
jae
add
cwtl
scas
cmp
sub
pop
jbe
shrw
push
out
sub
cmp
jne
and
scas
adc
inc
jl
cmpb
lar
push
ss
push
inc
xlat
mov
mov
arpl
adc
xlat
push
jae
test
mov
or
jbe
lcall
cli
jno
pop
or
pop
shlb
mov
mov
test
pop
or
mov
jne
lcall
sbb
stos
int3
xlat
dec
enter
mov
loope
mov
call
push
sbb
loop
andb
or
cli
mov
inc
scas
dec
cltd
adc
inc
dec
jns
fmul
sbb
fsincos
imul
adc
mov
sbb
cmp
jae
data16
and
cli
loopne
mov
ret
mov
mov
mov
push
or
or
xchg
jo
push
mov
and
push
or
push
iret
jo
loopne
xor
jno
sahf
mov
push
and
ret
and
faddp
xor
or
out
inc
push
jge
push
sub
into
mov
cmp
mov
push
lock
push
clc
pop
in
pop
dec
or
sbb
push
pop
lahf
sar
ffree
pusha
sub
dec
or
ret
xor
orb
and
sbb
inc
leave
sbb
mov
stc
bound
push
in
sbb
pop
lret
push
inc
ss
hlt
jbe
jecxz
mov
mov
neg
push
xor
imul
mov
xor
or
out
jne
push
jge
mov
shrb
add
pop
repnz
cltd
aam
fstpl
mov
insb
addl
rcrb
inc
mov
pop
xchg
jmp
call
pop
fisubl
sub
adc
flds
xchg
jno
mov
out
pop
cmp
mov
or
sub
shrb
push
orb
xchg
adc
jnp
mov
dec
sub
mov
jecxz
mov
jne
push
pop
ret
mov
and
test
aas
lds
popf
sub
popf
inc
add
scas
mov
lock
xor
cmp
xchg
je
cmp
mov
add
mov
add
mov
pop
inc
adc
fistpl
in
sub
imul
push
sub
xchg
push
dec
pusha
mov
push
sbb
data16
inc
push
je
inc
mov
cmpsl
aam
dec
js
jl
adcl
fidivs
lds
inc
repnz
mov
mov
add
add
inc
jp
and
push
pop
mov
push
add
mov
pop
or
fistpll
pop
push
or
push
adc
jb
and
adc
push
pop
popf
push
dec
lahf
pop
dec
outsb
pop
cmp
sub
sbb
ret
jnp
das
data16
ret
stos
gs
push
loop
cmp
mov
repz
mov
filds
push
pop
mov
aad
js
test
sub
push
jg
dec
and
adc
stc
movsl
int
sub
inc
movsl
insl
mov
jmp
cmpsl
xor
mov
cmc
xchg
mov
cmp
pop
cmp
inc
in
adc
cmp
clc
mov
rcl
pop
popf
dec
icebp
add
fdivl
add
jbe
push
adc
add
cmp
push
nop
xor
push
pop
and
mov
jbe
xchg
xchg
add
daa
mov
fs
shlb
adc
cld
lea
insl
int
push
mov
sub
movsb
lret
shr
mov
adc
pusha
js
sub
push
and
xor
int
adc
mov
adc
add
cmp
adc
rcrb
dec
inc
adc
rcll
push
cmp
jne
lds
add
add
repz
popf
jg
or
adc
pop
add
lea
cmp
fmul
mov
or
mov
cmc
xor
int
lock
and
adc
repnz
or
push
movsb
pop
add
lea
pop
insb
xor
sub
sub
cmp
rclb
pusha
cmp
sub
fidivs
pushf
leave
lea
cmp
subb
xlat
mov
enter
lret
pop
stos
sub
push
dec
fcompl
js
sub
fadds
push
cmp
add
movsl
aaa
cmp
jp
sbb
push
sub
pushl
mov
or
xor
call
sub
fwait
std
mov
mov
adc
sbb
aaa
push
sahf
js
push
gs
orl
cmp
call
movsl
cltd
jnp
dec
pop
dec
xchg
push
or
popf
add
in
cmp
cmpsb
adc
push
cltd
sbb
pushf
ss
mov
lret
and
xor
and
rolb
dec
and
push
insl
jg
inc
or
movsl
xor
fnsave
sub
pop
add
popa
and
and
inc
cmp
sbb
add
sbb
lret
les
push
push
pop
xchg
imul
and
push
sbb
sbb
in
pop
fistl
xor
orb
sbb
leave
rcr
int
sbb
movsl
push
stc
add
shlb
icebp
or
sti
faddp
inc
xchg
fs
mov
and
inc
inc
fwait
js
orl
cmp
cmpsb
xchg
sbb
pop
aad
mov
sub
and
adc
jns
cmp
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
imull
lods
stc
mov
cld
jmp
or
jg
mov
test
loope
and
das
pushl
call
and
inc
rep
adc
dec
adc
add
push
sub
adc
adc
pop
inc
jae
test
lret
or
cmpsl
loopne
in
adc
push
mov
or
cmp
or
mov
mov
das
mov
or
add
sbb
mov
pusha
sbb
push
in
je
sub
imul
rcrb
mov
js
mov
dec
pop
dec
mov
sub
clc
js
adc
mov
mov
pop
lret
test
hlt
lea
divl
js
lds
mov
aad
scas
sbbb
xchg
jne
adc
pop
push
sti
dec
cmp
hlt
add
push
imul
push
pusha
out
push
loope
mov
ss
pop
jb
or
jecxz
or
lods
xor
loopne
outsb
add
mov
mov
mov
lea
cmp
jmp
and
ljmp
ret
lea
jmp
mov
pop
sarl
pusha
jo
inc
insb
pop
mov
hlt
loopne
mov
test
ds
pop
add
jmp
add
push
and
adc
mov
mov
inc
push
addl
or
mov
addl
loope
adcl
mov
cmp
in
push
les
mov
pop
cmpsb
mov
movsb
shl
sbb
or
mov
notl
rorl
lock
sbb
jg
push
stos
lods
jne
cmp
cld
lock
insl
popf
dec
pop
mov
xchg
insb
xchg
jecxz
int3
rcrb
xor
adc
in
adc
inc
sbb
sub
loop
sub
push
lea
jge
lea
inc
push
idivb
mov
cmp
inc
mov
aam
fsubrl
or
mov
mov
or
aad
jp
inc
stos
in
mov
xchg
xchg
jne
jo
adc
cltd
inc
jle
mov
cs
ss
xor
or
pop
mov
aad
push
inc
aam
js
cmpsb
lock
sbb
outsb
or
sbbb
hlt
adc
mov
rol
xlat
xlat
mov
loopne
in
in
int
mov
roll
sti
add
mov
movsl
jmp
pop
testl
pop
fnstenv
add
push
mov
call
xor
or
xor
adc
lea
add
stc
or
cmp
inc
push
pushf
fwait
push
pop
push
popa
dec
dec
mov
js
test
je
cmc
insl
and
mov
mov
xlat
push
adc
and
mov
add
rclb
nop
mov
jmp
push
pop
xchg
enter
or
movsb
leave
adc
jno
icebp
and
cmp
es
push
fmuls
jl
xor
dec
ret
push
jmp
js
sbb
inc
scas
in
cmpb
inc
pop
mov
mov
fdiv
mov
out
jnp
orl
push
push
mov
xchg
enter
inc
je
loope
mov
mov
jbe
push
fwait
inc
push
inc
pop
cmp
insl
test
decl
add
push
mov
mov
sub
notl
das
or
pop
xor
inc
out
xor
mov
repnz
test
mov
orl
jne
cmp
les
cs
cmp
mov
andl
mov
fcompl
jle
push
push
loopne
lods
mov
push
pop
test
inc
mov
and
aas
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
or
push
jno
fmuls
enter
aam
out
shlb
mov
hlt
pop
mov
pop
stos
hlt
enter
std
cmc
sub
xchg
movsb
pop
or
jp
loope
dec
out
add
test
jmp
sbb
inc
fsubl
aas
xor
inc
or
loopne
outsl
fiaddl
mov
insb
push
push
push
shrl
mov
and
repnz
sbb
testb
sbb
or
pop
jmp
adc
ret
je
push
das
or
leave
push
mov
jno
cmp
pop
movsb
jmp
mov
push
nop
lock
pop
sub
imul
adc
fdivl
add
adc
incl
xchg
mov
push
lods
in
or
sbb
xor
or
mov
adc
in
out
cmpsl
adc
fs
and
pop
adc
mov
or
arpl
nop
and
dec
pop
xlat
adc
pop
mov
mov
ja
enter
jbe
and
rorl
scas
mov
cmpsl
and
sub
push
loop
ficompl
inc
dec
cmp
mov
outsb
xchg
lods
pop
js
cmp
add
push
bound
mov
shrb
pop
inc
cmp
fistps
fcoml
sbb
fcompl
dec
rolb
cltd
sbbl
xchg
xchg
push
addb
xor
inc
mov
lret
dec
pusha
das
mov
lea
sahf
mov
lods
mov
add
mov
lock
inc
jecxz
in
dec
add
inc
add
add
push
ret
pop
repnz
adc
inc
push
popa
nop
pop
and
shll
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
imul
sub
int3
cmp
scas
fimuls
mov
xchg
add
mov
inc
inc
lods
das
int3
push
and
mov
mov
js
movsl
mov
or
sub
mov
add
xlat
xchg
xchg
scas
push
inc
xor
addl
xor
enter
or
out
adc
lods
subb
adc
mov
les
aad
mov
std
and
mov
jae
jae
fnsave
mov
jb
xchg
dec
cmp
testb
lods
call
and
test
and
mov
sbb
popa
or
fbstp
add
insl
mov
fs
xor
sbb
std
out
ret
mov
fdivr
roll
xchg
cmc
je
loopne
call
lds
imul
ret
xor
pop
pop
ficomps
jl
jmp
ficompl
rolb
jl
cs
dec
xlat
scas
sub
popf
jb
adc
ja
sbb
or
sti
lea
xor
add
lock
test
inc
cld
sbb
dec
popf
adc
add
push
sbb
mov
in
cmp
add
daa
mov
std
popa
add
rclb
or
subl
and
mov
cwtl
add
pusha
adc
or
sbb
andl
scas
jmp
aad
jbe
shlb
mov
inc
adc
jno
xchg
cmp
push
sar
dec
jecxz
ret
xor
dec
push
je
dec
jne
xchg
xor
mov
adc
push
push
ret
and
jmp
lods
pop
mov
adc
xlat
add
push
dec
lods
aam
int
movsl
xchg
ficoml
xor
cmp
je
mov
mov
sub
or
push
das
mov
xchg
jge
js
mov
jmp
jnp
and
or
inc
and
dec
jae
sub
pop
jno
pop
mov
mov
lea
cli
jb
adc
or
jecxz
inc
jae
cmova
lea
jo
jmp
lea
loopne
inc
pop
add
rcrl
daa
dec
arpl
mov
fucom
pop
ret
je
push
mov
jl
or
add
adc
out
add
leave
push
adc
cltd
ret
push
dec
loop
inc
repnz
xor
jnp
enter
dec
push
push
lds
and
inc
inc
cmp
or
mov
lock
sub
push
cmp
testb
rcrl
inc
int
jbe
sub
jp,pt
and
out
je
sahf
rorb
dec
loope
or
arpl
dec
and
push
pusha
and
test
inc
sub
outsb
lock
or
popa
gs
or
call
stc
jmp
dec
pop
inc
nop
aaa
adc
lea
push
dec
cmp
or
ret
cltd
pop
mov
push
cmp
mov
movsb
push
cmp
aaa
push
inc
or
jmp
icebp
lods
mov
jmp
cmp
je
aaa
jns
or
push
jo
dec
andl
pop
push
add
insb
mov
loope
mov
ret
jmp
adcb
mov
int3
jmp
add
lcall
enter
xor
popa
add
in
dec
add
incb
andl
orb
push
mov
ljmpw
popa
sub
shl
orl
fidivl
sbb
push
nop
push
cmp
icebp
adc
push
movsb
push
or
pop
test
les
rcll
cmp
and
adc
and
imul
sbb
sub
jbe
sbb
mov
xorb
adc
fwait
mov
sub
xor
adc
andl
popf
test
inc
stos
mov
dec
addb
dec
pop
imul
dec
add
add
sub
push
mov
pop
test
add
jle
push
fs
push
popa
pop
in
loop
or
mov
and
jg
mov
mov
ja
jge
sbb
mov
shrb
adc
fdivrs
mov
movl
mov
add
sub
movsb
inc
ret
rcll
and
mov
cmpsl
dec
jl
popf
pop
mov
js
daa
sub
xchg
les
push
jo
enter
insb
mov
mov
fsubrl
lea
rorb
popf
mov
fiadds
fnstcw
push
and
mov
movsl
gs
js
push
lret
sub
fs
xor
xor
mov
dec
pop
insl
jae
inc
mov
add
cmp
adc
xchg
mov
sbb
push
dec
xlat
mov
mov
inc
cmp
cmpb
je
imul
ljmp
leave
inc
sub
movsl
dec
sbb
and
jbe
sbb
mov
adc
in
nop
sbb
lods
push
inc
and
cmp
adc
movsb
jns
enter
mov
mov
imul
mov
les
les
mov
mov
mov
lret
and
pop
fimull
jae
lret
sahf
aas
rorb
insb
jns
push
daa
pusha
or
inc
ljmp
adcb
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
stos
sti
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
push
subl
shll
imul
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jns
mov
push
push
cmp
lods
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
cwtl
sbb
sbb
pop
inc
sub
push
test
cmp
lea
pop
jb
xor
sub
lea
in
aaa
sti
pop
cli
sbb
fwait
sbb
cld
pop
inc
std
xchg
adc
sub
xor
lods
lock
hlt
mov
mov
xlat
and
movsb
cmp
or
fwait
push
mov
and
daa
and
adcl
mov
test
repz
pop
std
adc
in
push
cmp
jo
mov
cmp
cmp
cmp
shl
popf
or
mov
dec
cwtl
stos
ds
push
jg
sub
mov
cmpsl
add
xchg
cld
cmc
test
dec
mov
scas
fbstp
enter
aas
dec
stos
mov
cli
insb
cmp
inc
pusha
and
sub
xchg
add
add
or
xor
mov
jl
std
lret
push
out
cmp
jge
dec
stos
push
xchg
movsb
mov
jo
pop
xchg
cmp
xchg
cmp
test
xchg
cmpsl
push
and
and
sbb
shlb
add
pop
and
jl
or
outsl
jb
test
inc
sub
lds
sbb
add
adc
push
mov
dec
outsb
inc
je
sbb
enter
fidivrs
fwait
out
pop
aad
or
xor
and
in
xchg
adc
scas
pop
and
cmpsb
xchg
cmp
in
cmp
or
jne
adc
mov
js
orl
add
mov
dec
add
cmp
mov
fwait
aad
dec
roll
adc
sbb
add
push
adc
aaa
sbb
xor
dec
pop
pop
jb
in
mov
pop
xchg
xchg
pop
std
aas
mov
jle
movl
or
xchg
inc
push
jnp
and
push
popf
push
cmp
jo
adc
pushf
andl
and
add
inc
outsb
pop
popa
inc
fldl
je
sub
inc
and
subb
xor
xlat
and
push
imul
mov
js
movsb
xchg
mov
pop
sub
xor
loop
jne
sub
sub
mov
push
push
mov
xchg
cld
mov
lods
sbb
cltd
fbld
cmp
and
sub
jge
jmp
subl
icebp
push
push
je
jmp
nop
jb
rcll
out
das
dec
sbb
lcall
sbb
nop
leave
adc
dec
je
mov
pop
lret
cmp
or
xor
and
pop
add
lret
add
popf
pop
popf
mov
sbb
fs
cs
sub
pushf
dec
leave
xor
ss
and
leave
mov
add
je
jae
xor
push
adc
jmp
push
sbb
jno
xchg
sub
stos
adc
out
je
cwtl
xlat
pusha
les
dec
xchg
sub
shll
cmp
and
movsb
outsl
jne
mov
cmp
fs
mov
mov
roll
jne
or
jmp
adc
outsl
je
add
mov
push
mov
sub
mov
sarl
aam
add
imul
adc
add
shll
ret
xor
popf
pop
sub
lea
dec
shrl
add
sbb
cmp
push
adc
sti
pushf
fimuls
daa
adc
scas
pop
or
repnz
push
and
pop
xor
xchg
rcl
imul
fwait
clc
sbb
xorl
cmc
std
lret
jbe
cmp
popf
dec
not
loopne
and
lea
sti
xor
scas
add
adc
bswap
pusha
mov
adc
loope
or
add
daa
call
mov
fimuls
mov
into
fdivl
push
mov
mov
add
out
cmpl
leave
fsubs
test
stc
push
lea
lea
mov
mov
shlb
push
call
xor
inc
call
ret
cltd
push
xchg
or
dec
push
hlt
xchg
btr
inc
push
jnp
sub
loopne
pop
xlat
mulb
fs
mov
mov
push
dec
aad
sub
mov
stos
pop
and
jl
inc
je
and
out
pavgw
jle
lea
addb
dec
aad
mov
xchg
inc
push
push
sub
test
push
imul
and
imull
xor
push
add
pop
push
add
out
mov
sub
pop
pop
or
cmp
lret
in
fadds
lods
fwait
jb
dec
popf
sub
xchg
cwtl
cmp
xchg
add
imul
xor
cmp
das
aaa
stos
pusha
adcb
adc
jp
outsl
pop
adc
mov
push
pop
jge
lds
and
mov
xchg
pushf
push
cmpsb
jg
sbb
jp
ss
adc
adc
mov
mov
xorps
dec
lret
loope
shrb
and
jno
sub
or
xor
cmova
ret
mov
cmp
cmp
sbb
push
cmp
and
sbb
ret
sbb
pop
ret
xchg
and
sbb
xor
jle
rcrb
enter
and
inc
out
mov
jnp
mov
cmp
test
pop
fisttps
cmp
mov
sbb
leave
nop
cld
pop
xor
xor
and
test
fs
pop
cs
sbb
xor
sarb
mov
iret
adc
push
xor
inc
and
xor
fistl
ret
ds
cmp
cmp
sbb
sarb
or
sub
inc
das
xchg
sub
daa
sub
pop
pop
and
sub
and
nop
subl
sub
and
xchg
push
enter
js
pushf
inc
push
sub
adc
sbb
cwtl
jbe
mov
lods
and
stos
mov
ja
in
push
push
sbb
dec
in
sub
loopne
push
fisubl
sbb
lods
jae
fwait
dec
mov
mov
in
jecxz
jg
outsl
add
and
xchg
aam
or
outsl
jle
dec
movsb
cltd
fcoms
push
and
xor
popa
mov
cpuid
ja
lcall
mov
or
dec
sbb
repz
or
lea
repz
add
sub
push
adc
or
movsb
and
sbb
sbb
adc
and
mov
out
shlb
or
sub
inc
testl
mov
movsl
push
push
inc
jle
mov
mov
lcall
or
sub
insb
adc
cli
orb
movsl
fs
pop
in
jge
add
addr16
jmp
aaa
and
adc
call
pushf
dec
in
sbb
lock
icebp
dec
inc
sub
push
test
popa
adc
nop
mov
loopne
pop
mov
xchg
aaa
dec
xchg
sbb
outsl
sbb
and
cmp
add
push
into
dec
sub
push
sbb
mov
inc
rclb
out
inc
loopne
push
fcoml
xor
fimull
cmp
xchg
cs
push
out
mov
lock
shrl
xor
add
dec
sub
stos
sbb
test
inc
pop
pop
fsubrl
pop
push
xor
pop
push
sub
jo
push
dec
xor
inc
lret
test
adc
add
dec
push
push
ret
xor
or
push
push
push
icebp
or
and
ds
sbb
orl
and
mov
and
sub
dec
jmp
popf
cmp
je
inc
xlat
adc
and
cltd
hlt
mov
imul
xorl
add
push
stc
pop
add
push
pop
sbb
or
je
mov
testb
add
or
inc
mov
sahf
out
nop
mov
cmc
int3
nop
pop
pop
sbb
xor
call
fdivl
dec
lods
jp
je
cmp
pop
scas
mov
es
int3
pop
xlat
cmp
fisubrl
xchg
test
insl
mov
adc
and
lret
sub
push
xchg
rclb
jl
sbb
fidivs
sbb
mov
fcom
cmp
outsb
or
call
loop
mov
mov
aaa
movsb
jnp
xor
ffreep
cmp
inc
push
nop
adc
testl
ja
cmpb
cmpsl
pop
es
fdivs
push
ljmp
inc
inc
orl
xchg
testl
push
repnz
push
jo
das
lahf
cs
sbb
cmp
adc
call
or
das
or
test
cmpl
jne
push
loopne
shlb
jmp
filds
mov
mov
mov
jne
dec
add
fs
aaa
add
push
stos
enter
inc
push
dec
test
mov
push
andl
movl
mov
das
sub
shll
clc
sbb
jne
lds
hlt
sbb
lods
jge
mov
lods
sub
push
cs
adc
enter
xor
out
adc
mov
pop
add
and
int3
adc
and
mov
loope
leave
inc
push
das
inc
aam
jae
sbb
adc
fmull
nop
cmp
push
es
jae
jle
pop
cs
sbb
adc
testb
xchg
push
xor
mov
hlt
pop
or
mov
mov
push
icebp
sub
push
repnz
int
and
xor
das
pop
mov
mov
je
adc
je
cmpsb
and
lret
cmpsb
imul
in
mov
dec
fucom
call
jns
push
inc
dec
push
inc
jmp
roll
mov
arpl
xchg
bound
push
pop
mov
add
pop
es
bound
pop
mov
mov
pop
fdivl
add
pop
bnd
push
jmp
sub
sbb
push
pop
cmp
leave
push
xchg
mov
jg
bound
mov
inc
in
stos
loop
xor
movsb
sbb
dec
xchg
xor
pusha
adc
lcall
xchg
hlt
std
mov
cmp
sbb
mov
mov
mov
sbb
insb
mov
aam
cmp
jp
xchg
sbbl
test
std
pop
mov
push
xor
adcl
out
add
pop
mov
mov
add
xchg
imul
popa
jo
push
sti
mov
pop
push
inc
sti
test
push
mov
jnp
mov
shr
inc
and
pop
loop
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
shrb
xor
add
pop
cmp
mov
cmp
loopne
ja
lret
ficomps
cmp
sub
jmp
ror
aas
xchg
sbb
dec
add
call
and
adc
sub
add
lret
xadd
or
cmp
icebp
dec
sub
sub
icebp
repnz
and
inc
xchg
xchg
cmovo
dec
sub
rcrl
push
cmp
out
rcrb
das
call
xor
movsl
aam
xor
imul
sbb
sbb
mov
dec
lret
lar
enter
add
rorb
add
frstor
movl
movsl
inc
popa
inc
mov
sub
mov
jp
push
add
fstpl
outsb
jae
or
add
leave
leave
in
cmp
or
push
pusha
and
pop
or
ficomps
or
inc
ret
insb
inc
lods
and
sti
in
push
add
push
sub
mov
or
xor
xor
push
pop
rolb
adc
and
inc
or
andl
xor
cmp
and
mov
xor
or
dec
in
and
adc
or
and
test
orl
jmp
add
dec
sbb
inc
dec
subl
xor
sbb
dec
rorb
mov
lock
inc
adcb
jb
xor
inc
mov
xor
mov
dec
stc
dec
mov
xchg
lea
sti
in
xor
inc
test
mov
stos
inc
inc
mov
enter
xor
adc
sbb
adc
inc
lea
orl
push
or
xor
and
popf
adc
pop
inc
mov
pop
adc
dec
cmp
push
jl
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
xor
add
adc
int3
xor
lds
fs
call
mov
fdiv
mov
dec
loop
mov
dec
scas
das
fs
les
sub
sub
mov
dec
push
in
cmp
jl
jnp
notb
jae
pop
push
push
xor
mov
mov
out
push
daa
adc
sbb
jo
jb
inc
or
out
je
sahf
incl
das
inc
push
sahf
rolb
pop
cwtl
add
push
fdivl
adc
sbb
repnz
jo
rorl
mov
add
sets
loope
inc
sub
and
sbb
or
rcrb
inc
or
bound
xchg
xchg
sub
push
sub
xchg
movsl
or
dec
xor
int
inc
add
dec
pop
push
sub
cwtl
xor
je
adc
or
or
pop
call
rorb
fwait
add
enter
xchg
mov
fnsave
xor
fdivs
inc
push
or
mov
add
xor
fadds
or
and
fistpll
addl
pop
sub
out
test
adc
and
inc
adc
out
adc
lret
notb
andb
addr16
inc
cmp
push
pop
or
and
icebp
rcr
daa
call
roll
inc
cmpb
cli
cmp
adc
sbb
dec
mov
stc
sbb
adc
mov
cs
or
push
mov
rclb
sarl
lods
add
or
mov
mov
inc
enter
or
pop
dec
add
sub
add
rolb
loop
jbe
in
pusha
loope
or
push
lock
mov
popa
xorb
cmp
sbb
lcall
movsb
push
bound
adc
mov
cmp
push
add
or
inc
inc
push
mov
add
cmp
jns
add
inc
icebp
push
add
sbb
lods
or
push
add
inc
mov
push
ret
enter
das
jecxz
add
jo
fwait
cli
sub
orl
jmp
ss
sbb
mov
js
and
xchg
outsl
movsl
mov
jle
sahf
or
adc
movl
jg
subl
mov
movsb
arpl
hlt
adc
adc
loopne
push
cmp
xorl
mov
inc
insb
push
sbb
aas
sbb
loopne
mov
mov
sub
xchg
sub
sub
xor
insb
cmp
push
loope
movl
imul
aas
add
lea
test
je
push
sti
call
mov
cmp
push
push
sbb
push
shlb
mov
out
cmp
dec
push
and
adcl
xchg
in
sub
sub
icebp
cmp
jbe
dec
repz
add
dec
add
xorl
inc
add
sbb
cwtl
lods
ret
lock
adc
cmp
cwtl
mov
pop
push
stc
mov
rcrb
adc
sbb
pop
or
lock
xchg
xchg
aam
fistps
rcrb
mov
add
cmp
dec
sbb
adc
in
add
js
add
jae
test
bnd
addl
jg
xor
mov
mov
enter
add
stc
xchg
dec
add
sarl
or
mov
insl
jnp
lea
sub
add
bound
push
pusha
fbstp
test
iret
lahf
lock
das
rorb
adc
and
adc
or
in
shr
repnz
repz
mov
imul
subl
mov
xchg
or
int3
push
push
push
pop
sub
pop
roll
lea
mov
jge
sbbl
sub
cs
outsl
or
lods
mov
in
jle
cmp
or
pushl
push
sarl
inc
jno
mov
gs
cs
xchg
push
dec
xchg
pop
shll
in
push
xor
cmp
jmp
mov
cmp
cmpsl
adc
jmp
mov
cli
or
test
lds
inc
movsl
jne
and
and
mov
adc
fildl
in
mov
mov
push
xor
sahf
shrb
add
mov
cmpsb
add
pop
decl
enter
mov
jne
xchg
arpl
js
add
movsbw
ds
cmp
jne
and
dec
in
jbe
je
adc
fwait
dec
gs
arpl
cpuid
mov
mov
cmp
mov
mov
push
inc
negl
rolb
mov
dec
cmp
adc
jnp
push
fmull
insb
in
je
lret
call
stos
pop
jns
sbb
cmpsb
loope
jecxz
sar
push
arpl
imul
sub
mov
inc
std
imul
jle
in
mov
call
ja
lea
dec
dec
dec
lods
repnz
jns
push
xor
mov
scas
push
sbb
push
shlb
dec
cmp
lods
sbb
or
cs
push
xor
cs
outsl
shll
in
xchg
scas
pop
push
sub
in
shrb
xchg
jno
pushf
cmpsb
dec
dec
sbb
push
push
std
lock
dec
shll
sbb
pop
pushl
and
pusha
push
dec
add
and
loope
shlb
ds
sub
imul
cmp
jmp
pop
je
add
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
int
mov
iret
dec
iret
dec
pop
sbb
dec
ds
push
call
dec
je
push
jg
sbb
xchg
add
mov
sbb
sbb
add
cmp
xor
push
js
cmc
mov
xchg
mov
or
sbb
xchg
das
push
lahf
sbb
adc
mov
cmc
ret
mov
push
shll
pop
dec
and
xor
pop
adc
sbb
dec
in
movsb
mov
adc
sub
xor
push
neg
sub
hlt
leave
and
jo
or
test
sbb
add
lret
clc
cmp
ret
sbb
mov
jo
insl
loop
stos
push
fprem
gs
test
jae
fidivl
push
cmp
xor
inc
push
mov
xorb
cmp
imul
pop
mov
sbb
scas
push
jle
mov
add
movl
push
sub
or
cs
lock
mov
in
inc
adc
lret
movsl
mov
adc
mov
push
adcb
fsubs
cs
push
add
shll
xor
or
test
adc
adcl
jae
and
jno
xor
pop
adc
or
add
inc
xor
jne
or
mov
movl
movsb
ja
mov
xor
jne
inc
push
je
pop
jge
or
sahf
sub
int3
rorb
cmp
ret
cltd
add
push
xlat
fwait
shrb
das
and
ja
push
push
inc
jmp
lods
add
sub
and
jge
mov
push
outsl
add
sub
cld
add
je
in
jne
movsl
add
add
shll
xor
pusha
rolb
js
or
adc
push
and
mov
sbb
sub
push
aam
clc
sub
sti
mov
jecxz
push
add
push
push
push
push
popa
es
and
call
mov
jne
cmpsb
adc
cltd
out
loope
and
inc
nop
icebp
adc
cmp
mov
nop
call
sub
outsl
adc
rorb
cmp
jne
and
sub
cmp
mov
outsl
or
adc
cs
sub
xchg
xor
add
das
adc
dec
push
and
scas
stos
es
pusha
ret
dec
dec
xor
add
dec
xchg
nop
outsb
jno
cs
mov
adc
xchg
sahf
jmp
shlb
sahf
scas
clc
popa
mov
fildl
push
sub
cs
test
or
cmp
xor
andb
jbe
add
mov
inc
cwtl
lcall
lods
popf
movsb
cmpsl
adc
push
lcall
adc
pop
add
lods
movsl
xor
lods
fnstsw
mov
das
mov
mov
call
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
mov
mov
add
enter
icebp
xchg
cmpb
inc
nop
pop
dec
std
outsb
sbb
jnp
imulb
add
scas
adc
dec
sbb
adc
iret
rol
addr16
ss
cmp
mov
dec
pop
pushl
shll
es
rorb
mov
das
inc
mov
dec
mov
adc
sbb
leave
push
nop
add
cltd
xchg
imul
push
xor
mov
enter
xchg
sbbl
mov
adc
sbb
out
jae
mov
adc
and
cmp
xchg
pusha
cmpsb
jnp
push
sarl
push
popa
mov
mov
push
pop
jo
les
movsl
data16
std
sbb
jecxz
in
shll
dec
clc
jle
les
cmp
or
es
mov
inc
jne
adc
in
xlat
jb
jo
or
jnp
add
cmpb
push
push
xor
rorl
and
cwtl
lea
out
add
out
lea
dec
fisttpl
add
adc
fnstenv
outsl
nop
mov
push
out
sbb
cmpsl
sarb
in
movb
adc
jo
xor
jbe
pop
stos
add
in
xchg
insb
fmull
cs
cwtl
sbb
ja
or
aaa
jnp
clc
adc
xchg
movsl
cli
and
push
rorb
rcrb
mov
ds
cld
jnp
mov
ret
cmp
jp
aas
stc
pop
pop
jmp
and
dec
movsb
je
mov
lcall
andl
nop
cmp
cmp
push
ss
cmp
movsb
add
fdivrs
pop
dec
pop
or
pop
mov
add
les
outsb
test
adc
or
pop
int3
je
mov
clc
xchg
notb
pop
push
loopne
mov
nop
lcall
and
add
shll
in
mov
inc
adc
or
cmp
xchg
adc
xor
push
daa
dec
inc
add
outsl
test
cmp
je
mov
jle
jno
pop
ljmp
jle
dec
leave
or
fsubl
repz
loop
dec
test
and
frstor
dec
mov
bound
nop
sub
jg
lods
nop
pusha
sub
or
lods
pop
andl
adc
inc
das
xchg
or
cmp
jg
adc
test
dec
add
in
cmp
mov
rorl
or
push
xchg
into
arpl
shrb
inc
nop
sti
jno
push
shll
cmp
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
cmp
fsubrp
inc
jb
xchg
fs
scas
dec
shlb
mov
xor
add
sbb
pop
xchg
mov
adc
out
mov
mov
adc
push
adc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
in
scas
addb
ss
push
pop
mov
add
push
push
pushf
push
je
pavgb
inc
pop
mov
mov
mov
inc
inc
cmp
add
sbb
fwait
sub
lcall
in
pop
cmp
shlb
pusha
jne
dec
clc
orl
addb
jl
sub
jmp
mov
pop
sbb
mov
pop
cmpl
push
adc
in
hlt
pushf
rorl
push
or
sahf
add
inc
push
add
sbb
mov
sbb
add
adc
sub
adc
loop
mov
sbb
cmp
jo
es
push
lcall
adc
dec
lods
adc
mov
inc
testl
push
cli
cmp
add
hlt
jo
adc
push
sub
gs
in
and
push
sbb
mov
cmc
bound
fs
cmp
jne
jb
fs
push
xchg
add
cltd
push
in
jmp
pop
push
pop
xchg
dec
xor
push
inc
jo
jnp
lret
add
xor
push
dec
cmp
sbb
or
inc
movl
and
popa
psllw
and
movsb
pop
xchg
pop
or
stos
fsubrl
jmp
xchg
push
icebp
lock
addr16
fiaddl
push
inc
sbb
and
loopne
gs
sub
sbb
mov
lods
movsl
push
mov
fiaddl
adc
xor
ret
loopne
nop
inc
fs
lds
mov
adc
cmp
or
push
test
addl
orl
bound
xor
lea
adc
lahf
mov
mov
inc
inc
lcall
ss
and
push
push
pop
cmpsb
enter
lret
lcall
push
in
add
push
aam
or
jmp
test
loopne
sub
mov
push
test
xor
shll
xor
xchg
lods
imul
inc
stc
gs
and
push
sbb
cmp
sub
or
jo
popf
add
push
add
dec
cmp
push
add
sar
pop
mov
mov
movsb
push
addl
sub
jne
ror
out
jns
and
push
arpl
sub
rorl
jp
icebp
stos
mov
in
dec
popa
and
fdivrl
sbb
movsb
ljmp
mov
jl
pusha
imul
jne
mov
int3
inc
hlt
and
add
lea
add
cmp
loop
test
jne
test
loope
jnp
and
push
and
adc
test
je
push
and
jmp
call
ss
add
mov
pop
fists
jnp
push
call
fnstsw
add
add
idiv
cmp
or
shlb
test
mov
jmp
or
fst
sbb
fmuls
push
sbb
xchg
ficoml
add
or
sbb
shl
ret
dec
mov
mov
stc
stc
pop
lods
or
adc
or
incl
fcom
mov
pop
lret
int3
sub
push
addl
mov
lahf
cmp
nop
dec
in
adc
or
mov
stc
cmp
jecxz
repz
mov
in
sub
in
and
decl
xor
sbb
push
xorl
js
jp
push
shlb
sub
push
lock
in
push
inc
ja
enter
jp
lea
jmp
push
push
das
adc
ret
addl
or
and
pop
dec
loope
popa
nop
inc
cwtl
cmpsb
dec
mov
sti
pop
dec
test
xchg
cld
inc
scas
lods
xchg
jp
inc
push
dec
dec
inc
sub
and
inc
pop
shll
rcll
daa
sahf
push
xchg
jp
bound
xor
inc
add
pushf
xchg
mov
cmc
add
mov
push
or
enter
mov
sub
push
mov
aaa
lds
xchg
mov
mov
bound
es
ja
sbb
aaa
adc
mulb
dec
clc
jle
mov
push
dec
sub
push
or
push
shrb
cmpsb
or
popa
sbb
ss
cmp
inc
inc
jmp
fwait
mov
jmp
sub
out
jnp
add
mov
jns
in
dec
inc
inc
dec
cmpsl
jno
push
inc
jne
mov
aas
and
adc
call
sbb
sub
repz
or
dec
ja
xorl
mov
lock
inc
sub
adc
and
scas
clc
fdivs
ffree
movsl
inc
xor
sbb
ret
push
xor
inc
ret
dec
push
call
pop
setbe
movsb
xor
inc
ss
ret
xor
dec
js
cmp
insl
loopne
je
adc
rclb
jge
mull
and
xchg
inc
int3
loope
rolb
xor
push
add
jnp
js
pusha
add
nop
xchg
mov
sbb
mov
mov
push
gs
aaa
mov
lea
cmpl
movsl
dec
add
dec
inc
mov
add
in
repz
lods
aam
sub
xchg
loopne
call
add
dec
lds
inc
enter
fnsave
cmp
jmp
add
push
add
sbb
fnstsw
pop
pop
adc
mov
sbb
xor
mov
movsb
sbb
add
pusha
enter
mov
inc
or
movsb
inc
xchg
rolb
pushf
jle
pop
lock
mov
jge
psrad
mov
mov
popa
and
fldenv
lea
push
xchg
cld
jbe
lock
cmp
gs
mov
jne
pushf
lock
and
out
out
ret
mov
push
pop
sub
and
add
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
jno
mov
or
push
pusha
les
lcall
mov
lods
test
push
and
cmp
adc
iret
sub
sbb
and
xchg
loopne
adc
cmp
jmp
push
jg
mov
cmp
inc
cmp
out
pop
push
sbb
or
push
pop
inc
imul
out
mov
cmp
inc
jo
lea
and
or
imul
and
es
sub
cmp
ja
mov
push
fs
out
sbb
imul
and
hlt
dec
push
sub
sub
pop
lods
adc
icebp
mov
hlt
fcoms
outsb
or
and
add
lock
lcall
or
inc
or
sti
test
pop
incl
mov
or
mov
push
mov
orl
or
or
inc
mov
ret
xchg
loope
xchg
or
sub
xchg
pop
xorb
imul
add
fs
fsubrp
mov
in
dec
sub
xor
repnz
and
pop
test
push
outsl
add
scas
mov
fildl
push
clc
or
cs
sbb
cmp
jne
aaa
int3
test
test
pop
sbb
jo
dec
mov
fcomp
icebp
jl
push
add
add
mov
imul
xor
cmp
adc
push
adc
cmpsl
loope
sub
add
mov
lea
test
pop
scas
mov
lock
xchg
dec
jne
rcr
dec
or
cmp
add
imull
and
negl
imul
roll
mov
jo
mov
call
sub
ds
xor
or
sub
inc
ja
sbb
and
test
fsubs
xchg
or
mov
xchg
movsb
sbbl
inc
cmp
add
dec
sbbb
xor
sbb
inc
inc
xchg
or
loope
popf
xor
pop
inc
add
nop
mov
fdivl
push
adc
pushl
fiaddl
push
cmpsl
add
pop
psubsw
ja
inc
mov
push
push
push
jecxz
mov
xor
arpl
in
ja
pusha
add
jmp
inc
rolb
adc
lret
pop
jmp
enter
in
and
or
adc
jecxz
push
push
inc
add
negb
sahf
cmc
pop
add
outsl
fidivrs
nop
push
imul
pop
loopne
cltd
arpl
mov
mov
shll
xor
sbbb
adc
mov
or
add
pop
pop
pushf
mov
inc
cmove
sub
scas
in
cmpsl
outsl
cmpsl
rorl
inc
sbb
mov
jle
test
int
sub
adc
mov
push
push
xor
imull
adcl
add
ret
aaa
cmp
sbb
sbbl
ja
jmp
bound
add
adc
int3
andb
or
fiadds
insl
xchg
notl
add
cmpsl
sub
sub
jo
fbstp
sbbb
or
ret
sti
sbb
sbb
sub
andl
sbb
lret
pop
insl
shl
mov
adc
xor
fistps
lock
nop
ret
xorl
in
outsl
add
shrl
dec
popl
fs
xor
mov
cmp
das
inc
sub
push
daa
pusha
xor
rcrb
push
aad
push
add
repz
mov
jp
sub
adc
mov
sub
or
in
repz
or
or
inc
outsl
lret
cmp
mov
pop
fs
xchg
xchg
test
sbbl
test
loop
fnstsw
add
sub
mov
push
xor
filds
testl
addl
jb
popa
test
addps
xor
or
xor
lea
adc
sub
loope
dec
dec
xchg
sub
dec
jo
dec
mov
cmp
add
and
mov
xchg
in
clc
sub
add
add
mov
lea
inc
sbb
je
dec
movsb
xchg
cmp
nop
push
loop
cld
mov
or
pop
push
out
nop
or
sbb
imul
fs
add
add
push
roll
out
cs
std
ss
popf
mov
xor
rol
add
mov
mov
cmp
adc
adc
push
in
cmpsb
dec
xchg
or
bnd
sbb
cwtl
in
cmp
add
push
test
sub
sub
pop
mov
arpl
cmpsl
lods
pop
testl
pop
lahf
mov
dec
int
roll
or
mov
mov
push
sbb
aad
xor
jo
mov
xchg
aam
testl
lcall
xchg
and
cmp
leave
or
test
add
push
or
jno
mov
cmp
push
stos
or
faddl
jecxz
inc
add
mov
mov
call
add
jmp
xor
lea
adc
xor
xor
push
daa
xor
ret
les
dec
and
adc
shll
mov
add
xchg
andb
pop
pop
sbb
mov
sub
cmp
dec
in
pop
inc
sbb
leave
dec
and
pushl
shlb
out
add
jns
cmp
sub
daa
mov
in
jns
ds
cmpsl
adc
xlat
filds
or
ja
mov
add
or
mov
cmp
xchg
or
loope
mov
pop
add
and
fimull
add
dec
mov
xor
jg
or
in
fwait
xorb
cmp
test
pusha
sub
movsl
call
xor
or
xchg
push
jns
dec
push
cmp
enter
adc
xor
repnz
in
push
gs
add
repz
adc
in
dec
jo
sub
dec
data16
jle
out
jmp
adc
icebp
rolb
clc
and
mov
in
fsts
or
adc
lods
test
push
adc
add
les
xor
inc
clc
mov
and
cmpsl
push
pop
adc
shl
in
pop
mov
mov
sbb
inc
or
stos
and
pop
cltd
jno
push
cs
pop
add
fidivrs
dec
xchg
pop
sbb
or
or
jo
adc
jbe
add
xor
inc
ficomps
aaa
js
or
mov
mov
pop
or
mov
test
sub
lds
sbb
push
outsl
cltd
loop
lcall
call
or
sbb
ljmp
in
mov
jae
cmp
test
cmp
add
popa
mov
adc
and
adc
add
sub
dec
sbb
jl
es
adc
sub
scas
jns
das
icebp
or
xor
ret
js
mov
sbb
and
dec
sbb
cmc
mov
sarb
sub
cmp
clc
fwait
sbb
jecxz
mov
jno
mov
mov
cmp
mov
and
in
sbb
aaa
mov
outsl
aam
cmpsb
aaa
or
xchg
push
adc
dec
sub
pop
lea
xchg
jmp
mov
sbb
loopne
mov
jns
dec
inc
loopne
push
pop
jge
mov
mov
xchg
jmp
or
dec
cmp
inc
push
mov
inc
xadd
or
aam
stos
inc
loope
cmp
lock
push
fs
lock
mov
cmp
js,pn
push
or
adcb
and
repz
xchg
sbb
mov
push
stos
adc
add
add
sub
ja
mulb
push
mov
nop
pop
add
pop
cld
cs
das
rcll
mov
jge
jb
es
outsl
jns
jno
std
add
push
mov
sbb
push
jp
push
dec
add
arpl
fisttps
arpl
ja
lds
mov
mov
mov
je
or
jmp
movsl
push
cli
push
pop
push
and
mov
stos
jne
jmp
movsb
imul
daa
dec
cmc
add
loope
sbb
xchg
pushf
add
adc
adc
test
dec
push
push
adc
das
and
pop
repnz
dec
or
adc
add
ret
xchg
add
pushf
or
test
dec
test
fiadds
sub
test
loop
mov
or
adc
mov
mov
or
sub
push
sbb
and
leave
jmp
xor
mov
and
shr
callw
jbe
mov
push
mov
je
sbb
adc
cwtl
push
jg
adc
add
push
adc
cmpsb
jbe
out
or
jns
add
jno
lea
repnz
push
dec
inc
cmp
adc
adc
xchg
push
icebp
lds
pop
or
sbb
aaa
sbb
pusha
sbb
and
nop
popl
pop
pusha
jecxz
adc
cmp
pop
jns
or
push
cmp
lahf
mov
addl
jo
or
outsb
fisttpll
mov
xor
sub
outsb
push
add
mov
rclb
jno
inc
fstl
pop
popa
push
jge
xchg
call
mov
cmp
or
push
jns
inc
and
dec
mov
lret
inc
push
sub
push
xchg
pop
add
pop
int
add
imul
xchg
add
or
mov
sarb
pop
sub
rcll
or
dec
jo
or
add
push
jle
jne
lret
fcomps
rcl
mov
sbb
jg
jbe
js
push
daa
mov
dec
xor
xchg
and
test
mov
rolb
push
adc
jne
mov
sub
scas
adc
sub
cwtl
and
je
push
mov
pop
inc
jle
mov
jnp
std
call
jg
xchg
hlt
lods
aaa
sbb
or
mov
lods
mov
ljmp
je
pusha
sub
rcll
or
jecxz
mov
lahf
push
pop
push
push
daa
inc
jmp
jno
cmp
or
add
gs
fldenv
loope
dec
fstps
inc
sbbb
rcll
mov
mov
add
dec
rcrl
sarl
lret
mov
nop
shrb
movsb
andb
movsl
jb
daa
push
mov
pop
insl
jb
shll
loope
shl
sbb
cld
cmp
adc
gs
sbb
adc
add
jno
in
mov
shlb
mov
dec
or
sub
push
jecxz
xor
out
sub
pop
and
dec
clc
cmp
enter
cmp
es
xor
xorb
jmp
push
std
mov
dec
insl
mov
je
dec
adc
sbb
add
push
pop
fsubr
add
cs
hlt
pop
js
push
test
mov
sti
jne
push
mov
lods
sarl
mov
sbb
pop
ret
je
mov
mov
push
jnp
cmpsb
bound
ret
adc
push
mov
pop
or
subl
mov
repnz
adc
fwait
mov
xchg
sub
fisubs
jge
cmpsl
mov
repz
and
jne
push
cmp
jmp
inc
popa
adc
aad
or
push
insb
ss
push
mov
add
xorb
call
dec
push
xor
xchg
mov
in
inc
and
imul
mov
pop
xor
insl
lds
mov
pop
arpl
lock
sbb
cmp
mov
lahf
and
out
dec
call
mov
inc
adc
repnz
mov
pop
in
pop
ret
adc
stos
inc
push
xor
or
clc
sti
sub
pop
imul
jnp
add
pop
and
cmp
pusha
push
pop
and
cld
aam
repnz
and
push
mov
into
cmp
test
orl
call
sbb
push
aas
stos
inc
adc
fldz
and
add
jge
pop
imul
cmp
and
sub
mov
scas
or
inc
pop
sbb
push
fdivl
sbb
xchg
push
add
call
mov
movb
lret
cmpsb
adc
sti
xor
xchg
mov
mov
add
adc
sub
inc
mov
outsb
rol
mov
in
loop
addr16
or
lea
fisttpll
mov
xchg
adc
sub
add
loopne
lea
fsubs
lret
movsl
mov
xor
add
call
mov
mov
ds
jns
ret
fsub
in
aad
add
jg
faddl
cmpl
sbb
push
and
mov
mov
adc
adc
cmp
icebp
repz
outsl
push
cmp
jle
cmp
jp
push
cmp
cmp
add
out
cmp
add
add
inc
jmp
test
incl
movw
add
ljmp
jne
dec
fwait
ljmp
fs
pop
idiv
call
je
flds
mov
clc
sub
adc
cmpsb
or
aad
push
adc
xchg
add
mov
mov
mov
jne
jne
cmpb
popf
add
outsl
fnstenv
push
mov
push
push
sub
or
hlt
aaa
shlb
xor
dec
mov
popa
sub
imul
jmp
sub
je
jae
pop
arpl
or
xchg
dec
mov
or
adc
and
adc
xchg
pushf
push
add
orb
xor
sti
push
and
adc
lock
mov
pop
test
mov
enter
xchg
or
aas
adc
enter
iret
cmp
xchg
add
add
pop
daa
bound
andl
outsb
pop
pop
pop
push
les
sbb
xchg
add
inc
cmpsb
nop
or
rorb
or
sbb
movsb
or
adc
adc
cmp
add
inc
jge
push
ror
dec
push
enter
mov
adc
fdivl
pop
pop
jl
outsl
jl
mov
mov
mov
cmp
and
movsl
adc
fistpl
add
push
data16
sub
sub
or
xor
in
mov
mov
cmp
and
or
mov
lea
add
dec
pop
or
add
pop
lcall
pop
nop
popa
adc
push
leave
mov
fldcw
adc
mov
or
loop
test
js
repnz
sub
jl
sbb
ret
enter
aaa
sbb
pop
and
sbb
sbb
dec
in
popa
mov
cmpsl
sbb
ret
mov
daa
jbe
fwait
ds
inc
subb
push
xor
lahf
outsb
and
scas
loopne
pop
cmp
push
xorb
fstl
adcl
ljmp
movsb
adc
adc
adc
push
push
xor
cmp
mov
and
xchg
icebp
mov
or
inc
data16
add
pusha
add
popf
xor
sbb
xchg
pop
jmp
sub
pop
add
jb
adc
adc
fs
aas
pop
add
xor
nop
cmp
inc
add
adc
lea
sbb
adcb
test
sub
frstor
pop
adc
push
sbb
xor
int3
jge
lret
pop
push
imul
adc
adc
mov
loope
and
xor
out
mov
in
rol
jo
mov
sbb
push
nop
frstor
inc
mov
cwtl
mov
or
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
mov
shrb
cmp
xchg
insb
mov
dec
rcll
mov
nop
add
or
in
adc
mov
sub
outsl
jne
sbbb
xchg
add
lods
push
bswap
lods
add
pop
fadds
or
lock
nop
adc
add
xchg
sbb
fiadds
or
adc
push
lea
sbb
mov
push
and
pavgb
ja
outsl
fdivrs
or
outsl
mov
orb
sbb
dec
sub
cli
cmp
in
rolb
xor
gs
or
jo,pn
sub
sbb
jbe
push
nop
inc
inc
and
add
fs
insl
mov
push
stos
imul
fcom
lock
lret
push
mov
pop
dec
add
add
insb
xchg
sbb
push
popa
mov
loop
stos
cmp
jne
aad
je
stc
lea
xchg
push
popa
xchg
mov
dec
jno
sbb
cmovae
mov
hlt
pop
cltd
orb
dec
cs
add
add
test
add
xchg
out
dec
sbb
jne
add
sbb
scas
xor
xchg
dec
mov
adc
add
xlat
nop
mov
push
jmp
sub
dec
pop
mov
jnp
cmp
stos
jg
adc
xchg
cmp
cmp
popa
and
push
addb
push
test
pop
push
rclb
adc
adc
add
push
rclb
push
push
lea
mov
icebp
filds
mov
lea
ret
ds
cmc
lahf
lea
mov
jecxz
add
fdivs
cltd
roll
adc
loopne
pop
and
dec
mov
ds
cmp
push
jle
push
sbbb
inc
push
and
popa
notl
mov
jbe
aaa
or
pop
jnp
in
orb
mov
sub
jle
sub
ds
sub
add
shrb
xchg
dec
add
fcompl
fnstsw
test
je
loope
mov
jp
movl
xor
push
sbb
fisttps
inc
jmp
sbb
and
and
fstpl
pop
xchg
adc
pop
or
fistpll
mov
xor
and
loope
fsubrp
lret
sub
pop
adc
xchg
inc
xchg
or
sbb
adcl
inc
aaa
aad
sbb
or
insl
mov
scas
push
xor
xor
scas
sub
or
orb
sub
add
je
mov
pusha
dec
lahf
jns
stc
jge
sub
sub
std
add
into
mov
and
das
pop
xor
inc
insl
pusha
popf
and
mov
sub
jnp
ja
pop
leave
inc
jo
mov
aaa
jo
sub
adc
and
lret
pop
call
xor
sbb
addb
andl
dec
dec
mov
mov
push
dec
dec
and
mov
jnp
add
mov
bound
mov
cltd
sub
out
xor
clc
push
add
lods
ss
xchg
cmp
jb
nop
decb
shld
add
mov
add
sbb
lea
push
push
pop
mov
jns
mov
push
push
je
mov
add
pop
fistpll
push
leave
adc
mov
push
adc
push
push
xor
inc
or
or
or
cli
push
loope
mov
push
push
push
testb
pop
pop
scas
leave
dec
ljmp
pop
or
loope
push
mov
out
cwtl
dec
cld
pusha
add
mov
fimull
shlb
faddl
adc
add
push
and
xor
popf
divb
push
adc
push
andb
xor
xor
test
push
sarb
dec
inc
cmpw
jne
cmc
out
imul
cmp
mull
inc
push
jge
mov
dec
sbb
lea
cmp
or
pop
add
sub
out
xorw
or
xchg
sub
fdivr
inc
jo
push
push
sets
dec
inc
add
push
dec
ret
mov
pop
roll
nop
pusha
addr16
sub
fsubl
mov
dec
cmp
iret
adcb
sbb
das
roll
sbb
add
xor
icebp
rclb
pop
mov
mov
adc
test
inc
stos
dec
rorb
test
adcl
adc
leave
and
jne
adc
push
jmp
adc
pop
sub
mov
loope
mov
sbb
pop
mov
fsts
test
mov
mov
rorb
xchg
or
movsb
std
push
in
add
movsb
jns
lock
xor
and
cmp
sub
ss
xchg
bswap
push
adc
add
add
sub
daa
and
rolb
pushf
mov
test
mov
loope
or
mov
mov
sub
pop
clc
push
stos
pop
pop
xlat
andl
add
loopne
cmp
cmc
xchg
lods
loopne
sub
xchg
jo
sti
pop
je
outsb
jno
mov
xor
stc
jmp
ret
dec
xor
push
mov
ljmp
pop
and
shrb
sub
cmp
cltd
mov
out
shrl
pop
pop
clc
add
or
jecxz
cmc
dec
jl
subl
shlb
int3
test
add
pusha
es
mov
pop
shlb
pop
sbb
movsb
fildll
or
or
inc
fidivrs
movsb
outsl
adcl
fwait
les
and
outsb
pop
lods
mov
jge
jae
dec
sub
add
or
sbb
test
mov
lret
jne
in
cmpsb
movsl
mov
das
addb
xchg
std
push
or
adc
push
sbb
inc
push
mov
inc
adc
add
mov
xchg
adc
push
xchg
jb
adc
dec
pop
mov
lods
psrad
mov
xor
in
jbe
mov
ret
in
pop
mov
test
popa
test
push
ja
jo
lahf
ljmp
push
push
xor
mov
mov
jge
add
lods
jmp
flds
and
xor
inc
jg
je
andl
sbbb
sub
outsl
lcall
and
push
dec
jne
xor
or
jmp
adc
pop
push
or
xchg
jmp
or
inc
aaa
rclb
dec
mov
out
or
lods
inc
out
sub
xchg
mov
les
jmp
out
out
out
add
scas
jge
jmp
or
cwtl
jmp
lea
push
mov
in
lret
jmp
add
adc
hlt
push
mov
in
jb
and
dec
or
push
enter
je
mov
loopne
or
push
cmp
push
or
pop
push
rcrb
and
dec
sbb
enter
les
enter
hlt
dec
adc
nop
inc
push
cmp
inc
push
cmp
sbb
cld
dec
sbb
xchg
enter
mov
mov
fcoms
sbbb
aad
push
adc
add
push
xor
sahf
out
sahf
ds
push
pop
data16
sahf
out
jp
mov
out
mov
ljmp
push
or
sbb
xor
repz
inc
dec
pop
insb
jbe
mov
test
mov
repz
in
out
adc
outsb
lret
lret
push
xchg
push
sbb
or
mov
mov
jle
andb
shlb
mov
daa
or
push
aaa
addr16
dec
inc
fcom
adc
cmpb
add
mov
int
shll
add
xor
add
outsl
ss
or
dec
dec
lahf
fwait
jmp
fisttpll
jo
lea
cmpsl
pop
push
rcrl
push
in
inc
mov
and
test
push
lods
call
add
out
fcompl
lock
das
jmp
nop
mov
xor
ret
das
mov
xlat
arpl
orl
adc
jae
sbb
dec
leave
inc
jb
arpl
test
dec
cs
dec
test
or
mov
rcll
xchg
popa
xchg
movups
dec
mov
cmp
rorb
cmp
jge
cmp
sub
cmp
hlt
movsl
shll
push
pusha
lock
out
dec
sub
add
shlb
and
push
xchg
sti
mov
jno
inc
cmpsl
cmpb
adc
andl
rcrb
or
mov
mov
notb
gs
ret
or
cmp
dec
and
enter
add
xchg
push
outsb
lret
or
sub
or
enter
adcb
shrb
cltd
bound
xchg
sub
and
xchg
push
decl
inc
mov
fsubs
ja
iret
jmp
dec
jno
inc
and
jo
inc
push
sbb
fdivrl
movb
insl
lret
jg
adc
sub
push
loopne
and
arpl
rolb
aad
stos
xchg
push
insb
das
pop
xchg
jmp
add
or
scas
addl
sub
push
or
lea
mov
mov
ja
jne
les
cmp
jnp
sub
ss
xchg
je
mov
ss
mov
push
mov
jae
int3
cmc
sub
sbb
mov
sbb
inc
sub
mov
sbb
fs
mov
lock
push
mov
fimuls
xor
inc
stos
sbb
fcoms
mov
dec
fisubrl
push
and
je
das
mov
xchg
fsubrs
dec
sub
dec
xor
dec
xor
mov
xlat
mov
dec
xor
in
test
push
jle
mov
and
mov
and
mov
fcmovu
sbb
xchg
out
shrb
insb
cs
out
jo
jl
out
out
cwtl
sub
xchg
movsb
sub
int3
subb
les
ss
mov
popf
mov
push
jl
adc
jmp
adc
aas
cs
and
xor
dec
js
mov
xlat
movsb
cmpsl
jge
sbb
sbb
adc
mov
or
xchg
pop
add
mov
mov
mov
js
and
add
nop
xor
clc
nop
push
test
jae
shlb
pop
inc
mov
adc
sbb
sbb
add
int3
cltd
fs
stos
pop
sbb
sbb
xchg
push
mov
rolb
inc
or
jns
xor
andl
add
nop
and
sbb
xchg
cmpsb
add
mov
es
repnz
mov
js
or
js
fcoms
stos
inc
xlat
xchg
add
addl
shll
inc
mov
adc
lret
pop
push
adc
rcl
ret
or
pop
cwtl
xchg
mov
xor
add
popf
mov
cld
test
cmp
sbb
xchg
imul
jle
es
xchg
adc
sub
int3
mov
adc
pop
mov
ds
pop
movsb
pop
xlat
push
aaa
aas
pop
test
mov
add
inc
xor
push
pop
and
dec
enter
in
add
dec
enter
das
ret
xchg
mov
nop
mov
cwtl
inc
push
adc
daa
cmp
mov
push
inc
adc
mov
push
and
inc
push
xor
pushf
mov
xorl
jo
or
iret
cmp
adc
push
cmp
inc
jno
xchg
mov
imul
loope
or
inc
shlb
pop
and
loopne
shll
dec
dec
xchg
nop
js
rcrl
sbb
push
mov
push
sub
jmp
push
sub
aam
xor
pusha
aaa
ret
inc
xor
xchg
pop
sub
loopne
pop
dec
aaa
mov
pop
add
rorb
dec
lcall
inc
test
and
shrd
ret
call
cmp
push
mov
into
popa
lds
in
fildl
int
add
or
inc
jbe
sub
out
add
jo
dec
add
inc
adc
es
adcl
pop
lock
leave
out
add
push
jns
outsl
inc
add
xor
and
pop
data16
sbb
leave
test
xchg
fldl2e
inc
mov
imul
test
inc
and
and
jo
xchg
fs
sbb
sbb
sbb
xchg
daa
shlb
mov
xor
pop
cwtl
shlb
rcrl
xlat
scas
push
sbb
sbb
rcrl
iret
and
or
and
jl
mov
xchg
push
adc
mov
add
push
sbb
popa
mov
xor
ja
sub
adc
jl
notl
xor
enter
adc
shlb
cmp
add
imul
sbb
fcoms
je
fiaddl
push
sbb
xor
sbb
imul
rorb
sbb
loope
push
mov
movsl
cltd
pop
mov
xor
mov
lods
mov
rol
xlat
and
push
movsb
push
test
leave
adc
scas
inc
sbb
xor
in
loopne
popa
testl
jae
je
xchg
subb
xor
sub
sbb
sti
rolb
orb
adc
outsl
inc
or
sbb
dec
inc
xchg
inc
push
in
cwtl
nop
sbb
inc
or
mov
xor
pushf
xchg
and
jo
xor
int
push
rorb
pop
xchg
dec
jle
fsub
test
dec
in
call
adc
popf
add
xor
push
imul
movl
or
jno
mov
cld
add
sub
shrl
enter
outsb
mov
xchg
add
jns
mov
adcb
aas
ret
and
add
addr16
or
mov
mov
cmp
repz
xchg
call
ja
or
xor
push
jbe
sbb
or
loopne
lcall
push
add
or
movsl
adc
stos
mov
mov
popf
pushl
mov
das
aam
mov
mulb
or
cmc
nopl
add
jge
and
jo
mov
or
and
adc
rol
pop
adc
int
or
xchg
loope
in
popa
pop
fimuls
das
adc
jbe
movsl
pusha
sbb
sub
jge,pn
lods
pushl
outsb
ljmp
cld
fists
jne
xchg
sar
lcall
mov
pop
sub
adc
js
mov
pusha
or
lahf
in
scas
sbb
imul
imul
dec
scas
push
push
inc
push
rolb
adc
int3
cmp
add
push
xchg
and
call
sub
repnz
sbb
pop
pop
pusha
xchg
pushf
xor
es
or
inc
mov
push
sub
dec
pop
sub
fildl
enter
sub
sub
pop
je
mov
flds
pushf
push
jbe
push
and
lahf
insl
mov
cmp
ret
mov
clc
dec
aam
imull
leave
dec
lahf
cmp
sbb
roll
push
push
sbb
and
fs
sbb
jno
and
out
int3
pop
jb
roll
pop
jb
sbb
jb
pop
jb
sbb
pop
add
pop
pop
jae
jb
sbb
and
xor
adc
sub
out
jne
push
loopne,pn
jne
popa
or
and
ret
iret
or
xchg
sub
push
clc
pop
mov
call
cs
sub
add
pop
jno
jmp
sub
jnp
inc
or
add
or
loop
sbb
jo
out
cmp
clc
cmp
inc
sub
aas
daa
lea
pop
cmpsl
aam
cmp
xchg
push
cmp
notl
in
or
test
test
jp
popf
xchg
enter
or
inc
sub
cmpsb
fs
push
movsb
jo
movsb
and
sbb
mov
cmp
jbe
clc
cmp
or
pop
push
pop
push
jmp
ds
enter
and
cs
rclb
ss
aad
sbb
jns
adc
jl
fsubrs
mov
popa
adc
xchg
popa
mov
inc
inc
jl
xor
cmp
push
or
pusha
jg
out
inc
insb
sbb
mov
cmpb
je
push
push
mov
sbb
sub
int3
add
jb,pt
mov
andl
ret
je
push
addl
dec
sbb
pop
and
inc
pushf
lea
nop
iret
js
popf
aam
sub
mov
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
inc
mov
inc
outsl
sbb
hlt
subl
or
iret
jne
add
or
inc
movsb
mov
enter
jae
inc
add
nop
cmp
push
out
pop
adc
and
je
mov
dec
shll
mov
adc
xchg
nop
incb
push
xor
xor
mov
xor
xor
fcoms
adc
js
add
out
jo
adc
subl
jno
dec
jo
xchg
scas
out
jae
mov
daa
cmp
lods
dec
or
out
lods
aam
ds
gs
sub
jb
adc
xor
push
xor
or
fcmovbe
mov
jp
bound
xlat
fmuls
rcll
adc
pushl
push
outsl
xchg
pop
or
arpl
adc
sub
insb
and
xor
or
cmp
sub
dec
ds
aad
lods
jmp
or
cld
inc
lret
add
aaa
jns
ds
jl
or
je
test
fistpll
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
pop
mov
and
mov
nop
inc
mov
outsb
aam
jne
pop
sub
nop
jmp
scas
inc
adc
pop
pop
repnz
bound
mov
add
test
and
cmp
insb
jno
jl
cmc
int
mov
stc
movsb
pop
sub
jge
ret
xchg
iret
adc
mov
mov
fs
test
add
and
sti
pop
lahf
jo
xchg
pop
mov
call
movsl
lea
adc
mov
or
cmpb
je
dec
and
add
inc
into
aam
push
push
jae
jo
add
pop
or
jmp
das
mov
mov
mov
mov
clc
cmc
shll
push
and
ret
push
xor
adc
pop
in
mov
sub
loopne
and
dec
enter
ja
push
je
cmp
jb
je
and
imul
mov
xchg
test
nop
repnz
cli
adc
jle
xor
mov
idivl
pop
jg
xor
mov
xor
and
jmp
cmp
or
dec
or
xor
pop
inc
or
inc
sub
fsubrl
xchg
mov
push
inc
pusha
stos
nop
cwtl
jb
or
xchg
je
xor
adc
pop
jae
jne
jae
xchg
jb
nop
leave
mov
xchg
scas
add
sub
sbb
adc
and
or
sbb
shll
call
sub
jle
add
mov
cwtl
popa
sbb
sbb
inc
inc
adc
inc
mov
ss
ja
mov
les
mov
ss
leave
inc
inc
loopne
out
push
shll
and
pop
rorb
test
or
stos
jg
sbb
push
addr16
sub
dec
nop
or
xchg
sahf
inc
sub
xchg
sbb
data16
xor
push
sbb
sub
push
sbb
mov
loope
sbb
xchg
lcall
mov
scas
scas
inc
xchg
je
lret
add
xor
pop
xchg
outsl
mov
imul
mov
jne
repz
jl
sbb
ret
adc
pop
inc
or
add
clc
and
fcomps
stc
aam
les
nop
jne
or
add
lcall
cs
xchg
enter
cmovl
xchg
dec
dec
ret
xor
mov
dec
and
cmp
mov
xchg
roll
loop
mov
push
out
fistps
add
push
dec
adc
push
mov
pop
aaa
jle
call
push
pop
push
adcb
jmp
sbb
xchg
mov
addb
lods
push
add
inc
das
arpl
sub
movsb
test
xchg
nop
divb
adc
adcb
xchg
dec
hlt
push
inc
sbb
cmpsl
inc
mov
and
mov
or
movsl
jnp
test
mov
jle
xchg
pop
inc
inc
outsl
sbb
lods
aam
jle
call
or
pop
dec
ret
jp
ret
nop
push
dec
call
xor
xchg
pusha
sbb
mov
xchg
add
sub
adc
fildl
sub
scas
cmp
sbb
pop
test
sbb
sbb
push
jle
push
cmp
inc
jo
xor
xor
or
movsl
or
addr16
push
jmp
data16
adcb
movsl
out
test
xchg
mov
pop
mov
mov
pop
stos
mov
jne
mov
dec
hlt
lock
push
dec
pop
cmp
ret
mov
sub
xor
arpl
shll
push
jmp
pop
je
push
les
xlat
cmp
iret
ljmp
je
insl
dec
sbb
and
adc
shl
les
sbbb
hlt
popa
mov
outsb
cmc
and
xchg
pop
add
add
scas
test
shr
jecxz
rolb
jl
ret
sbb
movsb
aam
dec
scas
dec
mov
test
in
mov
out
sbb
jl
clc
adc
std
in
add
dec
push
xor
jne
je
inc
inc
rcrb
pop
cmp
jl
xchg
sarb
jge
mov
jno
mov
inc
testb
push
inc
data16
mov
cmpsl
push
mov
fcoms
cmpsl
je
push
pop
popf
add
test
cltd
fidivrl
pop
sub
es
sub
push
enter
xchg
or
adc
fcomps
sub
lea
mov
mov
mov
sarb
in
pop
mov
nop
xchg
add
and
mov
sbb
test
xlat
or
adc
dec
into
loopne
jbe
call
rdtsc
xchg
and
sbb
imul
mov
or
mov
add
lods
test
lods
aaa
aad
or
scas
jb
clc
inc
das
je
jge
jne
arpl
movsl
pop
dec
adc
ret
das
mov
push
sahf
fsubr
imul
in
cmp
mov
cmp
call
push
or
fcoml
pop
fidivrs
jl
mov
sbb
add
bound
fcmovne
xchg
cmpsb
ror
and
xchg
sbb
push
mov
push
sub
sub
add
xorl
push
cmp
adc
and
sbb
mov
mov
shll
out
mov
bound
xchg
jmp
add
pop
add
adc
or
cli
mov
enter
jle
push
cmp
dec
or
and
cmp
jle
test
push
xchg
sbb
push
mov
inc
or
jg
roll
mov
mov
xchg
xchg
in
daa
jl
push
es
jns
cld
pop
add
rdtsc
mov
addl
sbb
add
jmp
int3
stc
pop
sti
pop
ret
mov
or
lods
push
outsb
jo,pt
test
jge
push
push
lea
enter
push
fldl
xor
insl
inc
sbb
inc
data16
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
call
sahf
push
cmpsb
dec
aam
mov
int
js
and
fwait
lds
ret
pop
mov
push
lea
mov
mov
fwait
inc
dec
iret
icebp
out
sahf
movsb
push
inc
pop
sub
push
jl
mov
lea
repnz
sbb
pop
hlt
lea
cmp
sbb
sete
imul
ret
mov
nop
dec
xchg
mov
sub
push
cmp
sti
dec
cmc
mov
and
push
into
or
cmc
int3
roll
mov
sbb
lods
dec
jmp
fnstenv
notb
cmp
stos
dec
fcompl
adc
add
neg
loopne
rcrb
lea
jo
adc
sub
popf
add
dec
jl
jecxz
popa
jl
cli
test
xor
testl
loope
fwait
jp
xchg
add
inc
loopne
fisttpll
movsl
mov
addr16
cmpsl
push
xchg
insl
mov
add
call
jmp
jmp
orl
faddp
jb
pusha
pusha
inc
xchg
xchg
pushw
pop
pop
enter
mov
fs
enter
sahf
sahf
sub
xor
or
sbb
mull
ret
cltd
mov
mov
mov
js
mov
fmull
imul
iret
sub
loope
or
mov
aad
idiv
or
add
addl
or
fmuls
into
or
or
or
into
inc
or
dec
and
pop
nop
mov
adcl
mov
xchg
imul
mov
in
inc
or
add
fldl
pop
push
or
add
and
xor
dec
sbb
inc
mov
mov
xchg
inc
fdivl
push
in
icebp
cmp
lret
pop
lods
int
fwait
push
pushl
nop
xor
mov
and
xchg
xor
pop
and
mov
mov
insl
xchg
subl
aad
imul
add
sbb
or
inc
fidivs
movsl
mov
je
js
daa
inc
xchg
dec
cmpsl
repz
in
and
scas
fcoms
pusha
sbb
js
aas
movsl
push
pop
test
dec
xorl
in
mov
lahf
and
dec
das
popa
imul
sbb
xor
fidivs
jbe
or
pop
les
cmp
mov
sub
sbb
hlt
pop
adc
adc
and
xor
inc
arpl
enter
and
adc
in
push
pop
lds
test
push
int3
jmp
fsubrs
pop
xor
push
xchg
dec
sbb
leave
add
outsl
push
adc
fwait
dec
enter
test
sbb
push
imul
and
inc
arpl
fbld
xor
test
inc
daa
mov
bound
inc
mov
fnsave
xchg
mov
cmpsl
sub
xor
sbb
dec
cmp
or
push
pushf
pop
push
push
cli
push
lea
add
adc
repz
inc
loopnew
pop
inc
sub
dec
cmpsb
push
mov
inc
push
outsl
push
je
insb
and
cwtl
nop
data16
add
sbb
stos
dec
push
js
push
or
xchg
xchg
xor
inc
stc
xor
subl
ljmp
imul
sbb
popa
scas
pop
adc
mov
xor
and
js
xchg
lock
jg
je
push
mov
imul
mov
aam
inc
sbb
fdiv
add
jns
rcrb
xchg
lahf
test
adc
xchg
es
sub
xchg
jne
xor
cmpsw
mov
cmpsb
test
mov
add
mov
mov
mov
aad
or
jo
sahf
push
push
daa
ficoml
daa
add
adc
jae
jmp
fsubrl
ret
xor
push
aas
call
test
pop
addr16
rclb
jne
outsl
in
adcl
adc
pop
mov
mov
and
mov
enter
mov
push
shl
int
cmpsl
push
lea
jecxz
insl
lods
shlb
in
mov
add
fmull
xor
inc
pop
inc
std
xor
in
mov
mov
mov
adc
data16
mov
or
sti
mov
inc
loopne
sub
push
call
mov
fcomip
pop
mov
emms
sbb
loopne
out
addl
sub
mov
sub
addl
add
pop
fadd
lahf
or
imul
aaa
push
sub
mov
sub
loop
xor
je
data16
adc
add
cmp
jne
pop
test
inc
fdivr
dec
fs
xlat
lret
push
jne
dec
aaa
or
sub
test
ljmp
dec
addb
imul
inc
or
scas
mov
cmp
insb
roll
and
xchg
xor
aas
push
sbb
mov
dec
add
or
and
xchg
in
or
sub
jne
pop
or
push
adc
dec
fidivs
adc
ds
roll
xor
clc
cld
pop
push
push
and
mov
adc
and
mov
mov
add
in
push
imul
and
inc
adcl
xor
cli
pop
lea
push
add
nop
add
fsubl
jmp
xchg
out
sbb
and
lds
test
das
mov
das
cltd
pop
jmp
out
je
xchg
incb
cmpsb
lds
adc
fcmovb
mov
xor
pop
or
fdivrl
pusha
cli
or
push
movsb
adc
add
and
pop
addb
rcll
in
push
xorl
lods
repz
push
fisttps
add
add
xor
ret
aas
jne
add
dec
outsb
sub
push
stc
add
stos
inc
pop
cmpsb
pushf
sbbb
addb
add
or
xchg
mov
test
or
sub
icebp
imul
pop
movsl
mov
lcall
and
fldt
cmp
dec
inc
adc
push
add
sub
xchg
push
add
sub
add
inc
fisttps
pushf
push
aas
stos
adc
push
push
xchg
in
or
aas
mul
pop
add
cmc
add
and
mov
xchg
aam
pushf
adc
xchg
iret
adc
jno
outsb
js
push
popa
jo
and
mov
fisubl
push
je
movsl
ja
or
or
xor
cmp
je
or
jo
shrb
sbb
sete
movsb
mov
clc
ss
push
push
cmpb
ret
cmp
fistpll
hlt
jae
movsbl
sbb
xchg
jbe
ja
inc
mov
mov
push
lcall
clc
sub
pop
int
insb
ds
jmp
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
ret
pop
sar
mov
test
cli
mov
loop
add
sar
add
jne
xchg
cltd
add
clc
xor
xor
ss
cmp
jecxz
ljmp
jne
enter
adc
mov
mov
dec
jne
fs
or
test
sahf
or
lods
lods
xor
test
pop
push
mov
ficompl
push
dec
bound
lcall
inc
jbe
jo
shld
loopne
andl
rol
lods
jmp
add
sbbl
push
inc
cmpl
aaa
push
cmp
jl
aam
jle
insb
push
mov
aas
mov
je
shl
ja
jo
cmp
js
inc
mov
add
dec
jne
xchg
pop
mov
pusha
arpl
rolb
push
inc
pop
aam
repnz
add
aaa
lahf
push
ret
or
add
adc
pop
shlb
hlt
pusha
insl
pop
adc
jp
pop
pop
enter
adc
or
test
xor
in
pop
sub
adc
mov
pusha
aad
in
push
xor
pop
insb
jbe
mov
cltd
mov
popf
insb
lcall
mov
popa
inc
cmp
sub
sbb
sub
sbb
dec
or
add
xor
bound
filds
pop
cmp
push
loopne
push
pop
push
jmp
jecxz
cwtl
stos
stos
and
pop
mov
mov
push
push
pop
cmp
xor
out
mov
pop
outsb
pop
pop
rcrb
leave
mov
pop
add
jmp
cmp
movsb
jmp
in
inc
ljmp
in
repz
add
scas
or
push
and
sarb
adc
in
sbbl
adcl
in
pop
jle
js
adc
js
and
push
add
pop
ss
cmp
dec
jns
push
push
xchg
mov
loopne
mov
add
add
push
repnz
sbb
daa
aas
adc
mov
aaa
mov
push
mov
scas
imul
pop
je
call
pushl
dec
fdivl
test
cs
push
cmp
pop
cmp
loopne
mov
loop
rcr
mov
jmp
inc
aas
inc
push
mov
mulb
and
mov
ret
push
cmp
sbb
dec
loop
ljmp
fnsave
nop
rorb
pop
mov
das
push
movsl
adc
popa
aam
xor
jo
jbe
icebp
dec
push
xchg
cmp
xor
mov
shl
and
xchg
add
dec
out
add
int3
add
mov
push
cmpsb
jmp
jp
mov
or
aam
inc
or
push
push
shr
cmp
mov
insl
pop
jb
xchg
adc
aam
xchg
pop
mov
jno
fwait
dec
lea
aam
dec
push
sbb
mov
pop
jo
adc
or
push
daa
and
clc
jmp
mov
cs
push
xlat
push
cli
lcall
mov
adc
cwtl
out
adc
add
adc
pushf
mov
cmp
int3
add
les
bound
jmp
push
fidivrs
sti
cwtl
sti
push
pop
cmp
fs
mov
sbb
mov
dec
or
xchg
lods
fcomps
inc
das
cmpsl
call
out
das
mov
movsl
adc
pusha
stos
and
and
cmp
add
ss
dec
push
rclb
rolb
and
in
or
mov
xchg
lret
xchg
jge
aam
and
xchg
jle
mov
adc
fcomps
lret
or
les
or
clc
jl
cwtl
lea
mov
jge
sub
add
into
clc
fldl
lcall
cmp
fadds
lret
shl
call
mov
decl
mov
mov
out
test
clc
sarb
jl
dec
out
test
sbb
adc
add
mov
js
or
rolb
andb
push
pop
add
sub
mov
aam
dec
pop
cmp
sub
movsb
fiadds
cmp
mov
mov
movsl
sub
dec
push
roll
sahf
sbb
pop
sub
add
mov
sbb
xor
mov
int
mov
lcall
call
jae
xor
iret
add
lret
cmp
jnp
xor
push
xor
movsb
es
and
add
add
add
or
add
fcoml
inc
mov
xor
cmc
mov
and
lods
dec
lock
fidivl
or
scas
push
std
pushl
jle
int
mov
mov
clc
lock
mov
sub
test
push
rorl
jno
pop
iret
and
cmp
or
pushf
jl
rcrb
hlt
mov
mov
dec
mov
mov
std
mov
clc
add
mov
add
movzbl
mov
inc
mov
push
call
or
aam
scas
dec
clc
sub
mov
fnstcw
push
sarb
sub
push
icebp
out
ja
mov
dec
xchg
add
pop
jnp
lods
add
push
mov
nop
adc
push
nop
add
or
cld
inc
inc
call
xor
mov
jl
mov
ja
adc
aad
and
fwait
jb
jne,pn
push
into
in
mov
add
push
sub
call
jle
fwait
mov
add
jo
or
push
adc
add
add
cmp
fstpt
test
in
jg
es
and
push
fs
test
xor
mov
fistl
pop
mov
cmp
inc
pushf
mov
cmp
testl
call
and
lahf
lret
mov
hlt
dec
adc
pop
aad
les
popa
xchg
inc
imul
rclb
dec
rorl
xor
lods
das
mov
dec
mov
xor
and
adc
add
rclb
and
mov
and
xchg
fdivs
sbb
push
dec
adc
pop
je
pop
clc
jp
in
mov
push
mov
cmp
and
sbb
iret
xchg
push
roll
cld
ja
mov
jb
cwtl
mov
shrb
stc
sub
ss
lea
dec
mov
jbe
cmp
jbe
mov
sbb
rclb
cmp
enter
pop
aaa
ljmp
aas
fwait
xchg
adc
jp
xchg
inc
call
insl
push
mov
sub
fadd
test
and
lock
ljmp
xchg
push
xchg
sti
push
sub
mov
divl
push
fsubs
iret
fsts
push
push
push
cmp
loopne
hlt
daa
cmp
and
jns
jnp
arpl
mov
mov
sbb
test
pop
ret
and
movsl
xor
enter
pop
addb
shll
mov
outsl
nop
cmp
pop
sbb
push
aam
call
mov
sbb
sti
lea
pushf
movsb
mov
loop
push
imul
cwtl
or
sub
pushf
test
insb
dec
and
movsl
push
ret
in
add
lods
add
or
pop
in
mov
xor
jne
into
mov
pop
xchg
inc
jnp
xchg
jg
cmp
sbb
arpl
or
sbb
mov
add
aas
jb
mov
add
movsl
sub
add
adc
adc
add
pop
adc
int
adc
pop
lcall
aam
loop
mov
mov
or
add
and
push
adcl
and
scas
inc
sub
pop
jge
inc
mov
in
mov
jno
sub
test
ljmp
add
enter
fstps
sub
jo
inc
or
jle
stos
cs
xor
ret
cmp
ss
or
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcll
fisttpl
push
loopne
mov
pop
inc
jp
sti
dec
stos
shrl
ret
mov
enter
sub
test
or
add
insb
ss
scas
add
push
aam
push
or
inc
aaa
and
add
mov
stc
mov
shrb
adc
cwtl
je
jg
bnd
lea
mov
je
cmp
rcpps
mov
fiadds
roll
and
mov
pop
and
and
maxps
ds
mov
fiadds
and
mov
cmp
adc
dec
xchg
xchg
fwait
movl
aas
pop
orl
jge,pn
cmp
pop
cli
mov
rcr
dec
outsl
pop
fdivl
mov
jmp
loope
lahf
leave
push
fiadds
jmp
sub
cmpsl
lock
fdivrl
pop
pusha
pop
add
pop
je
push
fwait
xor
out
test
mov
in
addb
cmp
daa
popf
jmp
pop
or
push
mov
mov
pop
add
xchg
dec
aaa
jae
addr16
xchg
lahf
rolb
mov
sbb
cmp
jmp
out
xchg
cmp
dec
lods
inc
add
incl
jge
sub
mov
jg
jl
xor
aad
push
flds
and
callw
aas
jmp
push
mov
push
adc
or
hlt
imul
shlb
mov
pop
push
push
pop
push
ja
push
add
inc
mov
jne
jne
int3
add
psrlq
popa
imul
sahf
dec
cld
stos
rclb
or
clc
scas
mov
jne
cmp
jbe
mov
hlt
sub
cmp
pop
push
sbb
lahf
test
cmp
adc
test
int3
adc
pop
add
nop
cmp
sarb
scas
jmp
pop
mov
clc
jne
mov
cs
adc
andl
pop
mov
leave
test
sbb
popf
add
out
imul
lock
or
fcmovnu
push
jmp
or
scas
or
fcomps
adc
mov
call
cmp
sbb
lea
and
in
add
and
jmp
sbb
jecxz
jg
pop
lods
push
sub
adc
or
out
add
add
mov
inc
add
shll
pop
and
and
out
subb
enter
xchg
mov
xor
xor
add
popa
fdivl
inc
or
mov
or
and
repz
pop
add
orl
fs
lret
xorl
xor
dec
adc
addr16
fadds
push
lock
lods
sub
add
xor
sub
add
pop
add
pop
lahf
and
xchg
add
mov
xor
lahf
int3
and
jns
pop
cwtl
push
jae
shlb
pop
int
pop
mov
sub
test
xlat
ds
adc
mov
pop
sub
mov
dec
push
sti
pop
jp
ret
cld
test
das
push
daa
xchg
cmp
sahf
test
cmpsb
jo
rorb
xlat
and
sti
sbb
aas
cmc
das
sub
subl
das
or
push
rorb
jb
push
add
test
cs
or
lock
dec
sub
pop
or
loopne
inc
mov
inc
xor
subl
shll
or
dec
xor
xchg
mov
xchg
jae
mov
add
or
and
adc
and
dec
or
add
das
fwait
pop
and
dec
shl
mov
cmp
push
add
or
xchg
jne
add
rolb
add
int3
sbbb
dec
adc
aam
dec
movl
hlt
fcmovbe
bound
inc
in
inc
push
xchg
dec
cmpsl
testb
mov
mov
daa
loop
ljmp
or
cmp
and
cmpsl
movsb
test
or
adc
xchg
sub
jne
jmp
je
pop
ret
cmc
test
sub
shlb
sbb
sbb
sbb
daa
int3
cmp
clc
movsb
cmc
mov
cwtl
sub
pop
test
fcompl
cmp
xchg
push
and
adc
and
clc
adc
les
leave
cwtl
pop
inc
insl
xor
xchg
jmp
fcomps
add
mov
fadd
jp
shlb
insw
jp
stos
fstl
ja
mov
jo
in
xchg
xor
sbb
add
adc
or
mov
pop
sbbb
movsl
cs
inc
sbb
lock
ret
or
mov
or
or
int3
add
xchg
add
add
inc
push
sbb
adc
pop
aam
clc
sub
sub
jecxz
rcr
and
and
xchg
fdivr
notb
mov
jmp
inc
add
dec
gs
add
leave
cmp
xchg
sbb
enter
mov
sarb
dec
dec
hlt
pop
and
push
lea
iret
cltd
mov
push
out
or
cmp
push
adc
hlt
or
movb
pusha
or
pop
xor
xchg
sbb
dec
push
inc
dec
add
fld
inc
ficoml
jle
push
push
int
cmp
jb
cmp
cmp
jmp
inc
aaa
inc
xchg
cmpsl
popa
push
ret
rcl
mov
roll
and
pop
push
sbb
inc
aam
je
mov
push
mov
push
inc
adc
pop
in
hlt
movl
adc
inc
mov
xorl
mov
mov
imulb
mov
cli
das
je
or
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
adc
fistps
dec
lea
in
jmp
dec
mov
dec
std
ja
repz
push
cmpsb
mov
sub
inc
adc
je
idivl
lcall
mov
cmp
jbe
add
pop
add
mov
dec
iret
inc
cmp
je
sub
inc
jmp
inc
and
subl
test
pop
mov
dec
push
cs
aam
clc
mov
clc
or
out
aam
mov
roll
inc
pop
push
adc
into
xor
shl
push
cltd
add
mov
jl
sub
cld
inc
cmpb
jne
cmpl
jne
hlt
subb
aam
lds
mov
clc
clc
je
test
cmpsl
sub
mov
ja
js
sub
js
sub
mov
dec
cmc
es
add
nop
sbb
mov
push
mov
rorl
testb
loopne
jne
push
pop
pop
in
and
jg
xchg
mov
movzwl
data16
add
outsb
mov
add
jae
mov
add
shrb
ret
mov
aas
shl
add
jmp
pushf
aas
insb
sti
and
xor
pop
or
outsl
cmpsb
cmp
js
fs
jne
xor
aaa
push
cmp
adc
incl
or
push
mov
jmp
outsb
jecxz
popa
dec
shlb
lret
or
sub
dec
push
or
mov
push
lea
mov
add
and
lret
xchg
add
int3
inc
jg
or
jge
int
int
bound
and
es
sub
sub
outsb
push
idivb
jmp
or
adc
pop
jle
pusha
outsl
cmpsb
mov
xchg
cmpsb
jbe
lea
ds
loopne
pop
jbe
push
hlt
pop
arpl
repz
jne
add
je,pn
test
jne
pop
mov
add
std
sub
jb
dec
popa
adc
clc
add
fisttps
sub
jae
movb
inc
cltd
sub
lret
adc
shlb
inc
inc
pop
and
mov
sarb
xchg
add
xchg
data16
mov
shlb
inc
and
push
movsb
adc
adc
mov
add
daa
xchg
dec
mov
mov
cmp
fstps
inc
cmpsl
fdivrp
push
xor
inc
pop
push
mov
sbb
adcb
mov
mov
xchg
xchg
out
adc
movsl
pop
mov
je
mov
and
popa
pop
leave
jecxz
imul
add
pop
ret
add
mov
loopne
jne
testl
or
jg
or
push
push
push
imul
mov
ret
inc
adc
xchg
mov
jg,pn
jl
fistpll
in
or
and
jbe
push
add
push
push
cmp
int
push
jecxz
loopnew,pn
or
jp
test
insb
add
adc
push
mov
loop
cmp
lret
mov
inc
push
popf
inc
xchg
out
pop
cmp
inc
and
mov
bsf
stos
repz
xor
sarl
mov
or
push
andl
push
mov
xorl
nop
out
jp
inc
mov
cmp
jno
sbb
sbb
push
push
cwtl
and
xor
addr16
shrb
push
pop
push
movl
push
adc
dec
or
xor
fsub
shlb
lahf
jbe
addb
mov
push
incb
and
std
xchg
push
mov
mov
andb
pop
and
mov
loop
xchg
push
adc
cmp
sub
int
pusha
xchg
add
add
mov
xorl
je
pushl
jle
daa
or
lea
add
mov
jae
pop
push
sbb
orb
mov
cmpsb
pop
inc
add
cmp
pop
jne
lods
mov
lea
inc
sti
adc
jb
pop
sub
enter
inc
lret
negl
xor
and
in
dec
jae
jbe
mov
push
gs
add
inc
ficoml
cmp
cld
pop
xchg
push
sbb
nop
push
jl
faddl
out
sbb
xorl
jecxz
push
or
adc
fcoms
movsl
mov
stos
pop
adc
xchg
mov
sbb
xchg
sbb
clc
pop
je
test
dec
push
inc
push
shlb
xor
push
fs
add
dec
adc
or
xor
and
dec
push
test
scas
or
push
pushl
cmp
adcl
or
mov
fistl
mov
push
js
jl
add
pusha
add
add
push
sbb
inc
add
adc
mov
inc
pop
pusha
or
add
sahf
mov
aas
cmp
je
push
aaa
les
add
sbb
roll
leave
add
pop
pop
add
push
lcall
inc
add
test
adc
inc
pop
push
ret
or
andl
sti
pusha
jb
add
decl
jb
adc
roll
xchg
xor
jbe
push
adcl
call
mov
pop
test
sbb
cmp
jge
sahf
das
push
and
gs
add
adc
push
ljmp
sbb
xor
push
gs
sti
sub
cld
outsb
jb
jbe
push
push
popf
test
cmp
add
dec
and
mov
pop
mov
jne
lea
or
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
ficompl
or
jecxz
jl
fmull
and
cmp
push
inc
mov
or
dec
or
stos
mov
rorl
orl
sub
dec
fs
ficomps
arpl
add
xchg
aam
add
lcall
xchg
in
or
sbb
mov
pop
cwtl
cmpl
dec
push
and
xor
in
lods
or
push
push
lret
pusha
push
fbld
or
mov
pop
mov
imul
insl
jnp
or
movl
inc
test
cmpl
nop
fidivl
test
cmc
push
add
mov
fs
inc
fidivl
xor
cmpsb
or
xchg
pop
and
xchg
xchg
jecxz
clc
loopne
push
bound
and
push
cmp
pop
jge
dec
inc
adc
loopne
mov
or
inc
popf
jne
push
imul
lock
and
inc
jp
mov
xchg
pop
mov
push
subl
mov
mov
loope
adc
sub
mov
addl
jnp
mov
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
call
lods
fwait
mov
movsl
insl
cwtl
jl
fsubs
dec
and
push
aas
je
push
sbb
cmp
push
pop
jne
aam
inc
cmp
shlb
or
mov
inc
pop
jne
pop
call
jl
incl
or
shrb
cs
xorl
and
push
xchg
cmp
sub
mov
mov
sbb
or
sub
or
xchg
jmp
out
fldl
mov
sbb
cmp
and
in
pop
in
subl
mov
or
je
imul
fistl
in
div
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
daa
test
sbb
dec
daa
mov
aas
inc
es
xchg
mov
orl
jmp
adc
cmpl
pop
and
pop
lock
xchg
orl
sbb
xchg
lret
in
pop
fs
push
scas
or
inc
out
cmpb
or
or
or
mov
fwait
ret
push
add
loop
jmp
lahf
les
testb
cmp
add
ret
push
mov
std
inc
push
dec
adc
cs
movsl
aas
add
inc
add
inc
mov
pop
xchg
inc
bound
sub
push
lock
sahf
xchg
pop
push
push
push
push
pop
cs
lret
in
pop
pop
pusha
pusha
pop
or
sub
and
popf
sbb
pop
xlat
push
cmp
push
sub
cmp
test
add
addb
dec
add
sub
xor
mov
push
sbb
jbe
add
in
out
rolb
mov
jg
cwtl
mov
jmp
mov
add
rcll
lret
mov
lcall
adc
popa
xor
sbb
in
leave
clc
or
inc
adc
jmp
adc
sub
sbb
pop
les
je
insb
or
mov
mov
daa
mov
sub
leave
lds
sbb
scas
jp
cld
xorb
pop
fimuls
mov
scas
jae
or
inc
push
jnp
jge
inc
cli
jp
push
pop
jmp
shr
mov
mov
adc
mov
mov
mov
push
sbb
or
push
or
loope
add
pop
push
pop
je
lock
test
call
mov
or
imul
xor
sti
es
sti
jnp
adc
addr16
fsubrs
in
sbbl
js
push
xor
sub
mov
mov
rep
decl
mov
mov
sbb
push
sahf
xchg
in
loope
fucomp
push
cmp
je
mov
adc
in
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
or
dec
out
pop
inc
xchg
add
adc
mov
xor
mov
adc
sbb
mov
mov
cmp
je
push
aas
push
jnp
jb
jl
mov
and
add
sbb
pop
push
cmpb
push
adc
sbb
jle
and
adc
mov
add
push
into
sbb
jbe
push
adc
shlb
jne
dec
or
lcall
and
add
adc
clc
in
add
lock
cmp
jne
or
sub
push
lret
pop
jbe
jo
inc
bound
in
in
int
imul
sbb
ficoms
shlb
orb
daa
fisttpll
subb
jae
lcall
sbb
mov
incl
cmp
rcl
and
push
loopne
inc
test
sti
hlt
add
push
lock
mov
lods
cmp
clc
adc
cltd
jne
mov
adc
cmpsb
leave
pop
cmpb
mov
movl
add
sub
loop
inc
or
push
inc
add
or
adc
jne
xlat
test
jge
clc
dec
imul
inc
cmp
mov
lea
adc
inc
hlt
mov
lock
hlt
aaa
leave
add
lock
mov
mov
dec
loope
rclb
inc
inc
mov
xor
cmp
ljmp
mov
push
pop
mov
adc
add
pop
sbb
loop
and
mov
jecxz
mov
fisttpll
pushf
outsl
mov
and
add
xorb
jnp
push
push
popa
shlb
add
jmp
ja
push
out
xchg
orl
int
and
xlat
mov
xchg
addr16
mov
adc
sbb
push
test
mov
das
je
push
and
add
push
test
dec
add
shr
enter
xchg
push
cmpb
js
gs
jns
jmp
add
sub
lock
das
jle
inc
and
add
movsl
movsw
mov
inc
loopne
and
rcrl
or
sbb
icebp
sub
stos
sub
popf
cmp
fsubr
xor
xchg
in
adc
pop
sbb
rcl
adc
inc
inc
fsubrp
pushf
pop
push
test
pusha
es
outsb
add
inc
je
adc
bound
adc
nop
inc
sbb
cmc
dec
in
push
jnp
jmp
sub
les
aad
cmp
push
orl
or
add
add
inc
push
in
sbb
cs
adc
xchg
ljmp
les
push
jmp
mov
popa
add
int3
and
dec
mov
orb
inc
pop
push
add
dec
fmull
mov
je
mov
sbb
dec
dec
dec
jne
jo
add
jns
sbb
jb
dec
cmp
sbb
jg
jbe
push
filds
or
in
shr
mov
xorl
lock
movsl
xor
dec
adc
movsl
sbb
lret
cmp
mov
in
lret
es
fsubrs
sbb
pop
je
and
loopne
icebp
push
xor
mov
sub
sub
sub
and
adc
rclb
mov
dec
mov
or
nop
roll
adc
xor
dec
in
lret
cmc
mov
roll
jb
mov
test
fs
cld
mov
or
mov
das
test
incb
jl
jmp
pop
add
in
push
cmpsb
mov
stos
cmp
push
inc
sbb
add
lret
dec
pop
test
adc
in
sbb
cmpsl
push
cmp
dec
loop
movsb
push
imul
add
lret
clc
xchg
int3
in
mov
pop
push
rcr
lahf
in
or
xor
lea
lahf
adc
mov
jp
sbb
cmp
push
and
push
push
sub
push
rep
inc
xchg
cmp
clc
int3
mov
fcomps
cmp
decl
and
clc
inc
push
inc
pop
addb
mov
jns
xchg
mov
inc
ds
lret
rcr
test
push
push
xor
fdivrs
or
leave
adc
sbb
or
dec
mov
dec
or
or
xchg
test
or
sbb
ret
pop
dec
je
sbb
nop
push
ret
outsl
mov
push
xchg
sbb
sub
js
xor
in
in
pop
daa
sbb
lret
pusha
xchg
pop
xor
adc
rcr
clc
and
inc
inc
adc
ss
es
push
testb
not
cld
es
add
ss
in
rep
sbb
xlat
mov
sbb
sbb
cltd
mov
pop
leave
sub
out
and
stc
cmp
pop
push
push
js
test
icebp
mov
fdivs
or
psadbw
mov
adc
jmp
push
push
fadd
daa
lock
cmp
repnz
loopne
dec
xchg
roll
fdivs
ret
pop
jge
cwtl
lods
dec
rolb
inc
dec
lock
push
push
push
add
sbb
in
out
mov
mov
jmp
sub
mov
and
pushl
push
iret
xchg
pop
ja
sbb
inc
lods
cmpsl
jo
movb
clc
mov
or
jo
pop
into
lcall
xor
inc
inc
jne
and
pop
shlb
sub
push
xchg
xor
inc
sbb
adc
xlat
inc
inc
addr16
es
clts
fidivrl
pop
iret
mov
mov
adcl
dec
xor
sbb
sub
push
scas
dec
loopne
xchg
bound
xor
cmp
push
adc
mov
xchg
test
jb
jecxz
test
jle
enter
add
jne
cmp
sbb
call
xor
rorb
outsb
enter
or
jecxz
or
bound
dec
xchg
addr16
or
loopne
xchg
inc
out
mov
or
add
dec
inc
push
cmpsl
mov
sub
or
add
push
loopne
stos
cmpsb
or
loop
lea
jo
add
pop
stos
pop
push
dec
loopne
xor
mov
jle
push
lds
lock
lock
xlat
data16
inc
lock
hlt
push
leave
loopne
xchg
xor
pushf
cmp
adcb
pusha
cmp
or
or
adc
pop
dec
inc
iret
pop
cltd
push
mov
mov
fiadds
adc
pop
test
faddp
adcl
incl
adc
pop
cmp
push
and
xlat
mov
push
xor
mov
push
or
sub
pop
inc
sbb
sbb
mov
mov
mov
push
pop
loopne
and
inc
movl
cmp
outsb
push
mov
add
or
iret
push
adc
enter
mov
xor
cmp
and
or
das
jge
rorl
nop
or
xchg
add
test
inc
sbb
sbb
iret
fdivrs
jne
cmp
push
imul
pop
cmp
inc
xor
add
jo
test
dec
jns
pushf
lea
push
push
jecxz
ret
lea
lds
repnz
syscall
xor
shrb
dec
adc
fsubrs
pusha
repnz
push
mov
or
dec
push
rol
and
rorl
loope
sub
adc
jns
fsubs
fwait
aam
add
push
das
ror
int3
test
outsb
icebp
cmp
adc
dec
imul
ds
pop
outsl
ss
movb
enter
test
adc
nop
xlat
jo
mov
out
push
adc
repnz
sub
mov
rcrl
ret
and
jge
jge
cmp
js
add
and
or
leave
mov
clc
or
mov
add
test
lcall
inc
push
and
lea
andl
adc
popl
or
cmp
xchg
add
sbb
push
and
inc
sbb
icebp
mov
push
fnsave
adc
mov
or
leave
or
or
mov
adc
jbe
xchg
add
and
xor
mov
sahf
or
mov
add
adc
lahf
cmpsl
or
sub
push
aaa
hlt
sub
dec
incl
dec
cli
xchg
les
adc
outsl
fsts
test
xchg
stc
mov
mov
fsubrs
sbb
int3
jnp
inc
cmp
popa
push
push
pop
adc
lods
cmpsb
xor
dec
cmp
xchg
push
sbb
and
imul
and
stc
sub
mov
aam
mov
and
push
inc
adc
inc
daa
mov
divb
jae
rorl
jp
out
fstl
sbb
and
addl
xchg
dec
je
sbb
fmuls
pop
out
fnstcw
mov
rol
push
js
pushl
nop
sbbl
ret
sub
jge
adc
stos
fs
ret
dec
sbb
mov
stos
jge
das
or
hlt
push
lea
push
inc
loopne
mov
test
cs
rorl
es
jp
jo
add
or
cs
sbb
or
mov
fcoml
or
in
mov
hlt
pop
data16
jnp
add
adc
mov
dec
inc
int3
mov
and
dec
sbb
jle
jmp
ss
pushf
js
gs
xor
ljmp
inc
lods
add
dec
lods
or
repz
cmp
in
mov
xor
dec
inc
loope
dec
stos
js
sbb
cmp
xchg
xchg
popa
mov
pop
inc
xchg
lcall
aas
add
fadd
shlb
push
sub
sbbb
pop
push
in
jl
aas
sbb
xor
aam
or
pop
jmp
adc
mov
stc
and
sbb
xlat
cmp
push
loope
scas
jge
pop
cmpl
push
ret
and
jo
outsb
clc
clc
dec
lret
xchg
adc
mov
or
and
jo
mov
jbe
xor
dec
jmp
movsb
data16
mov
sbbl
pop
and
clc
icebp
dec
cmp
inc
loopne
mov
call
or
inc
mov
fmul
idivl
pop
sahf
pop
jbe,pn
faddl
xchg
mov
fs
jb
insb
sbb
ds
jp
xchg
mov
shll
push
adc
loop
push
dec
loopne,pn
mov
enter
jbe
or
mov
cmp
jne
cmp
or
lcall
nop
adc
outsb
mov
test
js
xchg
or
push
das
xor
mov
inc
loopne
cs
xor
fucom
ret
arpl
pop
push
shrb
pop
shlb
lldt
mov
push
leave
fcmove
mov
dec
xchg
xchg
call
mov
dec
mov
add
fistpll
jb
jmp
mov
mov
push
xchg
jno
mov
addr16
mov
stc
mov
insl
mov
lret
jp
pop
test
aad
xor
ret
jo
jb
cwtl
ret
imul
sub
push
fldenv
xchg
in
fwait
push
shlb
jecxz
xor
or
fisttps
and
daa
mov
mov
mov
inc
add
push
push
pushf
fs
push
mov
lock
add
fst
enter
push
and
aam
mov
push
fwait
cli
mov
inc
and
jne
arpl
popf
nop
mov
les
sti
mov
push
negb
push
xor
and
pop
insb
jmp
cltd
xchg
inc
mov
mov
mov
aad
mov
hlt
or
push
mov
leave
sub
cmp
rcrb
jbe
sub
sbb
rcl
scas
mov
mov
sub
or
add
fstl
ljmp
flds
inc
push
rol
aad
jle
enter
or
test
pop
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
add
enter
mov
int3
jp
ds
jne
jge
sbb
mov
sub
add
fldl
push
out
xor
push
or
inc
loop
mov
mov
cmp
pop
cmpsl
and
fistl
sbb
push
xor
or
mov
mov
out
mov
push
pop
or
inc
les
add
leave
cmp
je
push
sub
call
adc
xchg
pop
adc
push
pop
mov
fxch
adc
push
loope
imul
and
mov
push
enter
loope
leave
and
inc
pop
inc
shrb
xor
aad
or
add
sub
fld
arpl
lods
aam
add
fildll
or
lret
lods
cld
jmp
push
and
add
add
add
neg
sbb
inc
push
xchg
icebp
aad
iret
jp
cmp
mov
ljmp
fiadds
sub
mov
add
lret
aas
mov
adc
jp
mov
dec
fldl
loope
push
sub
lret
ss
hlt
shr
frstor
adc
xor
xlat
arpl
cmp
lods
testb
inc
jo
lds
sbb
dec
adc
add
xor
in
adc
cs
adc
cltd
in
dec
adc
adc
xchg
or
adc
adc
add
sbbb
xchg
sub
add
xchg
add
enter
adc
repz
push
mov
cmpw
mov
rolb
je
cmp
dec
lock
mov
out
insl
add
xchg
js
or
xor
data16
add
psubsw
push
dec
test
fs
push
in
outsl
xor
xchg
jo
sarb
mov
mov
xchg
das
addl
popf
mov
in
cmp
jl
inc
and
ja
cmc
iret
das
jmp
cmp
loopne
imul
xchg
jnp
jne
adc
out
enter
xorl
movsl
pusha
es
lret
or
lea
in
mov
add
lock
mov
repz
pop
addr16
shlb
jbe
call
push
cmp
pop
lret
mov
and
mov
push
add
sub
js
fimull
push
fidivl
jne
into
or
push
movsl
popf
ja
cmpsl
or
movb
jmp
jo
mov
jns
sbb
pop
and
add
dec
pushf
out
add
mov
mov
addr16
popf
push
popa
add
lea
sub
cmp
add
cs
mov
sbb
xchg
cld
add
lret
inc
pusha
outsl
test
test
stos
cmp
insb
aam
mov
push
mov
test
enter
mov
pushf
stos
pop
ret
outsb
ret
testb
mov
pop
dec
or
test
mov
fiadds
mov
mov
mov
ret
xor
inc
icebp
push
in
inc
jne
insb
jne
call
dec
lock
sub
mov
sub
repz
cmpsb
sbb
jl
stc
dec
cmp
push
sbbl
or
jg
pcmpeqb
xor
jle
jge
cmp
into
or
pop
add
adc
add
popa
pop
xchg
in
fdivr
xor
jmp
sbbb
xchg
mov
lods
dec
push
je
or
dec
push
mov
jl
and
enter
push
repnz
out
mov
sahf
cs
push
shl
and
dec
sub
sub
jo,pt
push
into
in
jmp
pop
lock
and
mov
test
add
ret
jnp
xchg
clc
inc
sti
push
xchg
pop
add
or
jecxz
xor
cltd
jge
faddl
or
add
mov
loope
rcrb
mov
mov
sbb
mov
sub
and
and
and
pusha
addl
sbb
cli
cmp
xlat
xlat
add
push
rorb
lahf
mov
push
or
push
nop
dec
jno
nop
data16
mov
jb
lret
xor
lea
aam
adc
adc
inc
mov
push
sbb
cmc
cwtl
arpl
ror
jae
mov
stc
int3
or
test
pop
cmp
movsb
pop
lea
scas
add
daa
pop
lock
add
outsb
jno
mov
inc
test
pop
inc
push
xchg
cmpsl
push
cmc
jb
add
clc
inc
dec
adc
roll
mov
inc
push
push
mov
cmpl
push
mov
fadd
mov
rclb
push
sub
cld
xchg
cmp
xor
add
lret
mov
rorl
ret
stos
into
or
mov
add
push
and
mov
inc
call
push
mov
ss
psubw
mov
xchg
sbb
lret
cmp
add
scas
dec
sarl
scas
push
ljmp
ljmp
adc
push
sbbb
dec
das
jmp
fnsave
and
fmull
pop
or
rcr
test
ret
sbb
ss
mov
test
cmp
add
push
leave
mov
bsr
jo
mov
bound
xor
or
mov
dec
xor
lea
sbb
mov
dec
ljmp
shl
push
cmp
mov
rclb
xor
sbb
push
stos
add
adc
daa
outsb
andl
lea
add
fisubl
sti
jns
pop
cmp
rol
adc
fstpl
add
dec
cmp
mov
lea
fisttps
pop
mov
pop
dec
clc
xor
jl
lea
push
sbb
xchg
jns
xorl
into
sub
test
je
mov
mov
ja
inc
test
sub
or
in
sub
xchg
push
iret
pop
pushl
xchg
mov
cmpsb
pop
ds
cmpb
jne
std
push
sub
mov
push
mov
ss
sub
sbb
and
out
es
or
mov
push
jp
call
decl
jecxz
add
clc
pop
add
adc
les
add
xor
roll
pop
jnp
xor
jle
cld
and
adc
dec
adc
pop
or
pop
fistpl
add
test
fs
jmp
dec
inc
jmp
pusha
test
loop,pn
jb
dec
sub
adc
movb
sub
xlat
ret
sub
or
jle
je
dec
rorl
sbb
jmp
cltd
icebp
ret
orl
movsl
jle
dec
inc
rcrb
in
aas
mov
decl
and
jae
lea
jmp
cmpl
jne
je
inc
cmp
jbe
repnz
push
pop
xor
cld
jae
es
test
fmull
fsubrs
mov
and
push
dec
sbb
cld
mov
sbb
lahf
std
xchg
push
dec
sbb
or
dec
jge
fs
cmpsl
cmp
pushf
stc
push
test
mov
pop
and
hlt
les
je
xorb
cwtl
jns,pn
je
rclb
pop
pusha
cmpsb
jo
inc
add
inc
out
xchg
xlat
xchg
sub
pop
mov
push
addr16
aaa
push
jnp
addb
mov
pop
xor
sbb
or
jns
or
xchg
les
cmp
cs
push
loopne
fisubrs
pop
pop
add
rclb
mov
sbb
mov
inc
in
mov
pop
test
xchg
push
je
bound
add
push
cmp
mov
and
jne
and
shrl
inc
jbe
popa
mov
mov
movsl
sbb
pop
adc
sub
mov
add
pop
movsl
push
je
cwtl
xchg
dec
cmp
sahf
inc
insl
test
sbb
mov
jmp
lea
or
jbe
stc
xchg
shlb
test
or
rclb
pushl
xchg
fsubs
nop
setne
fisubrl
push
or
in
mov
out
dec
jp
aam
sub
add
add
cmp
je
cmp
lods
psadbw
pop
mov
sbb
mov
xchg
pop
subb
lea
cmp
inc
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
divl
cwtl
mov
adc
push
or
cltd
mov
add
jb
xchg
push
pushf
fistl
jae
push
xchg
or
fiadds
fidivrs
and
jae
sub
adc
daa
mov
inc
test
xchg
inc
cwtl
sub
mov
add
xor
push
testb
and
dec
push
jbe
inc
in
push
outsl
in
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
inc
rorb
cmp
arpl
dec
test
dec
int
imul
push
push
test
or
add
aaa
sub
clc
sbb
cld
cmp
stos
test
rolb
in
jg
movsb
nop
dec
push
xchg
sbb
xchg
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
jbe
cli
sbb
cmp
out
pop
cmp
pop
add
cmp
jae
push
push
push
add
sbb
or
hlt
jne
push
loopne
add
adc
addl
jne
mov
cmp
outsb
stc
mov
xchg
fmuls
dec
inc
jmp
pop
jnp
scas
out
or
ret
sbb
inc
push
cmp
test
jp
dec
add
lahf
or
popa
clc
lea
pop
cmp
mov
mov
pop
pop
pusha
lret
or
in
fs
xchg
test
das
fs
mov
mov
outsl
dec
push
hlt
neg
sbb
and
bnd
movzwl
push
sub
push
adc
loop
dec
xchg
push
mov
add
pop
orb
js
ds
cmp
and
je
clc
adc
xchg
mov
fistpl
add
je
or
into
cmp
out
je
fcmovnu
adc
pushl
sub
jge
add
cmp
mov
sbb
in
adc
cmpsl
mov
decb
and
jle
sti
sbb
or
push
cmp
out
xchg
popa
inc
cmc
cmp
mov
mov
add
jbe
jno
cld
movsb
jae
cmp
or
iret
jp
sbb
test
pop
rorb
pop
popf
cwtl
sbb
test
lods
cs
or
mov
add
lea
adc
test
mov
adc
mov
idivl
jg
cmp
dec
outsl
add
dec
mov
push
push
xor
cltd
and
push
shlb
fsubr
aaa
je
repz
lcall
inc
mov
ret
jnp
sti
test
jp
pop
inc
mov
push
rclb
adc
mov
ffreep
sbb
xor
scas
cltd
daa
pop
add
aam
mov
out
pusha
push
aad
ds
cs
and
dec
outsb
inc
outsb
outsl
out
sbb
pop
xor
or
cmpl
add
insb
insb
test
adc
mov
pop
fisttps
cs
pushf
out
push
or
pop
inc
xor
popa
and
adc
push
mov
addr16
ss
out
cld
mov
sub
or
adcl
shll
xchg
xchg
or
xchg
dec
incl
mov
jb
xor
addr16
pop
mov
and
sbb
sub
and
pop
pusha
inc
xor
or
popf
and
add
insl
mov
jb
push
jb
fadds
jae
loope
dec
add
mov
pop
popa
insl
sub
add
and
imul
je
add
das
push
jp
dec
dec
lock
sub
mov
cmp
aas
push
add
scas
std
cs
movsb
pop
or
incl
or
push
les
jne
sub
lea
add
sub
mov
std
mov
push
andb
int
and
inc
pop
pop
outsl
mov
adc
out
ljmp
add
popf
call
imul
mov
jbe
pop
fwait
jo
xchg
in
mov
ds
into
andl
sbb
iret
call
xor
add
arpl
pop
pop
dec
mov
dec
hlt
imul
lea
adc
arpl
add
pushf
sub
mov
pusha
test
lock
pop
xchg
out
lahf
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
test
arpl
fdivl
or
pop
adc
scas
xor
and
lcall
ret
add
pop
xlat
sbb
add
loopne
outsb
arpl
pop
push
je
lcall
shl
inc
push
and
inc
jae
pop
mov
xchg
mov
inc
lea
addb
and
push
jo
xchg
inc
sub
adc
push
mov
pop
push
xchg
push
and
rcr
mov
popa
test
xchg
loop
lds
mov
jmp
inc
jg
ljmp
in
idivb
mov
out
sbb
cmpsl
inc
push
aam
sub
fcomps
add
and
sbb
fdivl
push
jle
push
cli
jnp
xchg
xchg
mov
or
xchg
mov
movlps
push
or
sub
adc
dec
jge
mov
xor
pop
stos
or
fdivrs
cmp
inc
jle
push
push
dec
sar
add
pushl
dec
inc
sub
pop
lea
je
add
xor
inc
add
rcl
ret
jns
mov
mov
xchg
push
mulb
arpl
cmp
jb
mov
jb
mov
mov
sub
or
ret
cmpb
test
insl
addr16
dec
mov
fistpl
cmp
add
mov
cmp
imulb
cmp
scas
jl
mov
add
pop
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
test
out
jmp
mov
pushl
popa
pop
push
jb
and
mov
or
pop
mov
lea
add
rcl
sbb
push
jae
sub
or
dec
mov
test
xor
cmpsl
fists
scas
add
daa
call
leave
jmp
push
inc
cmpsb
sub
stos
add
and
dec
ja
push
xchg
add
fmuls
push
adc
add
loopne
mov
dec
mov
add
sahf
pop
cmpsb
pop
or
rclb
out
mov
out
mov
imul
mov
xchg
pushl
adc
pushf
inc
adc
mov
sub
inc
mov
push
hlt
sub
pop
das
dec
and
sub
inc
push
pop
xchg
lret
fs
insb
or
or
and
or
add
jns
sbb
sub
popf
mov
ja
mov
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
cmc
ret
or
or
mov
popf
clc
lret
loopne
pop
mov
xlat
mov
pop
mov
pop
std
add
mov
adc
fdivrp
dec
or
out
je
outsl
add
mov
repz
aaa
xor
in
dec
xor
inc
and
pushfw
rclb
jb
sbb
xor
adc
sbb
sub
iret
stos
popa
and
sub
sub
mov
je
dec
add
cmp
cs
jmp
and
cwtl
clc
std
incl
mov
pusha
dec
add
mov
add
push
ss
clc
push
or
inc
add
mov
pop
push
xabort
mov
xchg
daa
bnd
mov
mov
adc
add
mov
jb
push
jae
lea
push
sub
rcrl
cmp
sbb
sub
popa
stos
sub
inc
ja
shlb
add
ret
test
ret
lea
cmc
loopne
jge
imul
cld
cs
cmpb
xor
fnstenv
inc
jmp
push
pop
dec
ja
cmp
cmp
sub
arpl
mov
and
lea
ds
mov
jo
outsl
fs
test
rorb
and
stos
scas
xchg
fdivs
sub
sub
out
push
cmp
xor
lea
aad
out
insb
adc
pop
testb
divb
pop
pop
testb
push
fldt
in
sti
sbb
xor
or
mov
mov
sbb
dec
mov
pop
or
int3
jb
mov
adcb
jb
add
jns
jg
cmc
fldl
cmp
xchg
pop
lret
mov
push
adc
push
inc
mov
fcompp
jae
mov
push
aad
xor
loopne
dec
sbb
cmp
insb
adc
cltd
push
sahf
xchg
imul
out
gs
cld
or
je
xor
jge
cmp
mov
cmp
inc
cwtl
cmpsl
add
mov
lret
ljmp
andl
inc
add
fimull
adc
push
mov
cmp
sbbl
push
inc
or
add
notb
inc
inc
es
out
fists
push
xor
and
sahf
sub
hlt
xor
clc
popa
mov
iret
jne
imul
adc
push
outsb
sub
cmp
push
psubw
cwtl
lret
lds
imul
and
scas
add
mov
add
sbb
adc
add
pop
in
movb
jns
adc
stos
rolb
push
jbe
pusha
jo
inc
adc
cwtl
and
mov
stos
jno
pop
jmp
pop
fcoml
mov
jo
xor
mov
add
aaa
jmp
adc
mov
push
mov
jno
mov
sub
push
sbb
std
xchg
xor
test
cmpl
jne
or
inc
lcall
pop
xor
pop
sub
dec
dec
xor
ret
fisttpll
inc
arpl
mov
leave
cltd
addb
push
loope
into
pop
add
inc
add
xor
leave
dec
sbb
movsb
add
add
sbb
or
bound
nop
lret
pusha
and
addr16
or
jno
xor
pushl
mov
pop
ds
cmp
js
push
fsubs
add
or
sbb
inc
pop
ret
pushf
imul
push
mov
adc
cmp
loop
ret
pop
jg
cmp
je
xor
jne
pushl
adc
cmpsl
insb
stos
fwait
cltd
pusha
jo
cmpl
jbe
fstps
cmp
pop
es
and
inc
sbb
mov
sub
in
lea
cmp
xor
cmovb
dec
cmp
add
fisubrl
and
aas
fcmovu
cmp
sub
xchg
or
rorb
cli
scas
insb
push
in
push
mov
mov
sbb
out
add
int3
adc
rcll
inc
aaa
inc
in
adc
sar
dec
imul
orl
or
stos
movl
mov
add
or
mov
dec
sub
cmpsb
sbb
sarb
mov
repnz
mov
daa
or
outsl
xchg
adc
mov
and
aam
in
and
jbe
ret
mov
inc
sub
test
push
pop
xchg
cs
out
sub
lahf
mov
mov
cwtl
sub
imul
cmp
adc
xchg
and
test
sub
ret
or
mov
and
and
jnp
pop
adc
sub
jo
loopne
addl
adc
add
adc
ss
leave
xor
mov
pop
mov
cmp
add
add
das
pop
xor
and
pop
mov
adc
add
inc
inc
addb
xor
cmp
pushf
gs
inc
or
sti
mov
add
pusha
fcoms
adc
std
push
repnz
loop
and
cmp
cmpl
push
dec
mov
adc
push
andb
adc
or
cmp
aas
xchg
out
or
dec
or
out
stos
loopne
push
add
shlb
or
cmp
mov
cli
sarb
and
pop
xor
xor
ret
je
js
xlat
or
xor
ds
mov
push
mov
pop
lea
push
mov
xor
lods
jb
or
pop
cs
jge
jmp
mov
xor
push
stc
stos
movsb
loop
aaa
popf
and
pop
rcrl
popf
leave
xor
push
ljmp
aam
cmc
int3
jbe
cmp
sub
and
sbbl
test
je
xorb
push
xchg
out
hlt
mov
jo
lcall
push
mov
sbb
push
jmp
xchg
jp
or
sbb
cmpl
push
or
loop
adc
jmp
adc
inc
cmpb
lcall
fs
stos
fdivrl
fdivrl
sub
push
dec
fiadds
mov
adc
mov
pusha
in
push
loope
shll
leave
lds
mov
enter
or
jecxz
lea
imul
mov
ret
xchg
jb
andl
xchg
and
adc
je
fists
insl
xchg
and
enter
push
loope
rcrb
lods
out
pusha
pop
adc
lahf
call
lret
xor
mull
pop
jle
mov
enter
in
adc
jo
clc
pusha
sbb
pop
fs
xor
in
pop
jnp
sbb
jmp
add
sub
dec
xlat
xchg
and
scas
cmp
aas
sub
inc
xchg
mov
lea
push
leave
inc
stos
clc
inc
std
popa
enter
ja
push
xchg
mov
popa
lcall
mov
mov
arpl
xchg
dec
and
add
dec
adc
dec
gs
popa
jl
pop
shl
cld
sbb
repz
push
ds
cld
push
xchg
lods
ret
fsts
add
js
fstps
mov
add
sti
dec
push
push
fs
clc
xor
and
ja
lahf
int
jne
and
fsubl
aad
lds
mov
loopne
mov
push
and
mov
popa
push
lret
pusha
and
popa
mov
sub
fwait
xchg
push
inc
cmp
and
loop
sub
daa
jge
adc
jno
push
mov
sarl
insl
dec
cmp
je
imul
mov
and
shll
jecxz
pop
jl
subl
add
cmp
into
sbb
sti
addl
lea
stos
push
jb
std
cmp
sbb
sub
int
push
mov
jbe
or
bound
inc
mov
ret
inc
out
sub
mov
or
movl
xchg
dec
add
inc
or
mov
dec
mov
gs
das
icebp
dec
and
std
push
repnz
popa
loopne
sbb
gs
cs
cmpsl
pop
adc
push
push
dec
push
cmp
mov
sahf
push
xchg
inc
pop
rclb
repnz
sub
mov
adc
and
mov
pop
inc
sub
fisttpll
mov
cwtl
into
jmp
into
out
push
loope
push
add
rcrl
xor
add
add
imulb
push
cmp
mov
je
adc
sbb
das
outsl
push
xor
subps
add
inc
std
xchg
clc
mov
adc
jl
mov
inc
mov
imul
push
jne
sahf
adc
mov
xor
test
jecxz
ss
add
fidivs
pop
js
out
pop
adc
or
push
shrb
std
inc
arpl
ret
imul
mov
add
jmp
push
mov
dec
loopne
pop
into
add
jmp
lret
movsl
cmpsb
rorl
jnp
dec
in
xor
add
pop
mov
movb
and
mov
xchg
mov
andb
lods
nop
jo
rcll
mov
add
xchg
or
sbb
pop
and
add
aam
insl
xor
bound
cmpsl
popa
lock
jmp
cmp
xlat
ret
sbb
adc
add
push
sub
movsb
arpl
call
add
in
sbb
imul
pusha
push
xor
rcl
push
sbb
bswap
and
inc
push
add
xor
jo
and
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
test
push
inc
in
mov
jnp
mov
jne
aaa
sbb
push
das
ret
adc
rorb
xlat
mov
aaa
mov
aad
dec
xchg
sub
mov
fiaddl
lds
call
gs
sbb
scas
shrd
push
push
repz
enter
andl
mov
jbe
ffreep
test
add
mov
rcll
or
add
in
cmp
ds
inc
pop
mov
or
sbb
fstl
push
jne
push
push
leave
js
jne
jnp
mov
jne
or
mov
or
jne
or
jne
testl
dec
cwtl
dec
loop
mov
ljmp
lock
lods
add
fists
decb
lahf
cmp
icebp
adc
cmp
push
shlb
lret
fsubrs
sbb
imul
subl
cld
dec
jnp
test
push
popa
inc
add
jecxz
loope
daa
dec
add
pop
ficompl
xchg
rorb
push
int3
fcompl
push
xchg
clc
ja
lahf
or
movsb
inc
mov
jge
mov
and
xor
cmp
sub
addr16
sti
mov
xlat
popf
adc
push
jge
mov
mov
mov
lea
sub
jp
or
mov
out
fs
sbb
push
fdivl
pop
mov
dec
scas
lcall
inc
pop
jnp
loopne
fbstp
or
js
jg
sbb
ss
adc
popa
mov
mov
icebp
push
rcll
cmp
push
add
icebp
dec
lahf
adc
cmp
sbb
sahf
mov
shll
or
jnp
les
mov
or
dec
aam
push
rolb
dec
mov
orb
mov
enter
mov
pop
sbb
leave
mov
jne
dec
sub
test
pop
sub
sbb
jne
pop
imul
mov
dec
push
je
xor
outsl
sbb
mov
pop
imul
mov
cmp
scas
ss
ljmp
xor
fiadds
aam
adc
and
add
cwtl
pop
or
cmp
je
cmpb
in
in
push
or
cmp
adc
fadds
outsl
aam
mov
imul
sbb
and
movaps
xchg
cmp
jmp
xchg
or
jnp
icebp
sbb
push
cmp
cmp
mov
cmp
jl
mov
cmp
out
lret
les
mov
cmp
arpl
pop
sbb
mov
push
sbb
push
hlt
push
icebp
pop
mov
clc
cmp
fdivs
inc
xchg
pop
and
sbb
add
dec
outsl
push
push
adc
test
vpsubb
aam
stc
mov
imul
adc
or
lea
clc
lahf
sub
insb
mov
inc
loopne
pop
push
ja
mov
mov
pop
iret
mov
pop
ds
cwtl
insb
sub
pushf
or
lret
ja
jae
dec
add
insl
lret
xchg
add
or
rolb
and
inc
orl
pop
cmpsl
les
movsl
add
rcll
insl
cmpsb
mov
push
clc
addl
jbe
aam
nop
imul
xor
dec
xor
adc
imul
lock
cmp
dec
shll
insb
jo
pusha
shll
js
mov
out
cmp
or
call
int
pop
andl
clc
sti
or
mov
fsts
jge
inc
mov
mov
xor
addr16
scas
sub
pushf
push
adc
ficompl
adc
and
fucom
or
movb
sbb
nop
sar
mov
sub
xchg
das
push
fsubs
add
and
sbb
and
xor
add
and
push
xor
push
cmp
sub
lds
notb
and
adc
xlat
daa
or
inc
push
loop
jo
movsb
push
negb
cmp
add
sub
out
inc
pop
sbb
mov
adc
push
mov
sub
mov
jl
mov
mov
lods
mov
addps
cmp
outsl
dec
pop
icebp
and
sub
jnp
adc
mov
ret
or
pusha
sub
lea
or
xchg
pushf
push
xor
jle
sbb
jne
sbb
jb
mov
lcall
inc
sti
sbb
sbb
es
mov
mov
fbstp
or
push
xor
shlb
adc
test
ret
out
mov
xchg
lret
push
dec
and
rorb
push
mov
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
mov
das
xorl
pop
addl
loopne
les
jne
orl
xchg
imul
adc
or
pop
cli
xchg
adc
std
enter
and
xchg
mov
jne
mov
cmc
dec
mov
movsl
bnd
pop
rclb
lds
add
lods
cmp
sub
sub
and
mov
or
pop
mov
mov
xchg
out
cmp
adc
or
mov
sub
mov
pop
dec
jne
cmp
mov
data16
cmp
insl
mov
jne
xor
in
inc
xchg
ja
fwait
push
mov
dec
lahf
jo
cld
fwait
scas
adc
add
dec
mov
add
lds
push
pop
mov
or
into
js
or
or
invd
and
add
in
mov
xchg
outsl
andl
dec
pushf
mov
push
push
inc
ljmp
jne
js
sub
popf
lock
ljmp
cli
out
fidivrs
jl
adc
inc
lret
mov
fwait
lods
pop
mov
sbb
mov
dec
sbb
pop
dec
pop
jp
adc
or
inc
dec
leave
gs
wbinvd
pop
pop
jae
es
xor
xor
jge
pop
xorl
insl
adc
sub
xor
in
out
rorl
pop
sub
jo
fwait
test
sub
cmc
inc
xchg
enter
in
push
nop
repnz
push
js
movsl
mov
outsb
rorb
dec
jb
sbb
lea
cli
push
mov
mov
mov
and
mov
and
sbb
mov
int3
lock
adc
faddl
inc
lock
shll
inc
test
or
or
jo
in
nop
gs
je
nop
pop
sub
fs
push
sbb
fs
insb
insb
push
push
daa
add
xor
adc
cmp
jl
icebp
test
testl
je
cmp
je
popf
add
push
lds
arpl
and
mov
out
push
lret
adc
outsl
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
sti
shll
or
jmp
jecxz
push
push
testb
xchg
into
push
sbb
or
and
cmp
popa
movsl
psubsb
sarb
mov
add
push
fcmovnbe
movb
dec
roll
xor
cmp
xor
jne
pop
or
pop
flds
pop
les
push
push
push
xchg
mov
test
sahf
and
xor
test
cmpsb
xor
pop
mov
pop
pop
mov
sbb
movsl
adc
in
and
dec
adc
mov
sbbl
push
fimull
adc
in
insb
fucom
loopne
jno
test
popa
inc
pop
push
dec
icebp
popf
jecxz
and
push
cs
mov
or
icebp
and
push
push
imulb
push
xor
ret
add
stos
push
insl
or
pushf
and
fidivrs
jbe
sub
sub
cmpb
lock
divb
jl
jle
cmp
xchg
push
and
inc
sbb
push
lea
inc
add
sub
mov
pop
xor
cmpb
rclb
sbb
jmp
dec
dec
pop
lock
jo
dec
mov
push
js
sub
idivl
popa
add
sub
pop
ret
out
push
cs
or
or
mov
fstps
inc
pop
arpl
xchg
cwtl
or
test
js
dec
sbb
fdivl
enter
filds
outsb
test
or
inc
mov
inc
adc
pop
add
sub
pop
dec
cmpb
dec
cltd
rorl
xchg
adc
cli
fcoms
or
sub
sub
ret
jge
mov
mov
stos
push
sar
adc
add
cwtl
test
pop
sbb
jbe
and
or
mov
iret
xchg
sbb
jmp
push
mov
insb
inc
push
push
mov
or
pop
out
loope
movsb
in
out
nop
sub
popa
and
sbb
xchg
repz
xchg
mov
ret
inc
and
adc
xor
int
mov
out
ret
mov
xor
push
lea
mov
pop
and
inc
jno
sub
or
dec
inc
loop
push
mov
lds
xor
push
push
push
or
ja
fisttpll
adc
mov
inc
inc
lock
xor
loopne
mov
xor
sbb
gs
push
fmuls
mov
fistpl
pop
imul
je
mov
add
shll
push
xor
mov
sti
fwait
loop
mov
rcrb
push
sti
or
add
into
lcall
xor
xor
dec
loopne
sbb
xor
mov
movsl
add
jbe
sub
jl
mov
sbb
mov
sbb
and
clc
ret
subb
push
adc
mov
lds
pop
lret
movsl
cmp
imul
push
lods
scas
aaa
push
inc
adc
or
adc
ss
xor
pop
sahf
lret
cld
sbb
push
mov
push
out
and
sbb
cmp
repnz
xor
hlt
sub
movsl
out
out
cmpsb
or
test
ficompl
cs
outsl
and
daa
out
push
dec
repz
das
and
lea
or
fimuls
and
mov
fisubrl
jl
repnz
inc
loope
pop
add
movsl
push
sub
in
es
sbb
sub
inc
sbb
push
addb
and
or
push
pop
xchg
and
loope
mov
and
and
leave
mov
adc
mov
fisubrl
add
mov
pop
mov
into
mov
fstpt
jg
adc
int
rcll
ljmp
xchg
arpl
fdivs
or
cmp
imull
ljmp
add
sar
push
fs
mov
push
cs
jl
pop
or
pusha
mov
jb
and
loopne
lock
lock
inc
xchg
pop
pop
mov
xor
cmp
push
add
imul
and
sub
pop
dec
xor
call
add
push
mov
sbb
fadds
test
add
rclb
mov
pop
sub
cmpsl
in
out
aam
fxch
xor
mov
push
or
cmp
fcmovu
or
push
jbe
pop
call
xchg
push
mov
inc
imull
pushf
adc
add
add
and
sbb
and
sbb
rorb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
push
inc
xor
dec
leave
push
jb
cmp
nop
add
or
adc
ret
ret
xor
add
fwait
xchg
add
ret
sarb
ret
movsb
mov
dec
adc
mov
xor
insl
lret
test
mov
push
inc
xor
lret
clc
lds
lret
std
decl
ljmp
dec
ss
clc
or
pop
and
faddp
vpaddsb
add
sub
and
push
add
or
popa
lea
sar
pusha
sbb
and
roll
add
js
pushl
scas
mov
pop
mov
pop
add
ret
sbb
pop
mov
mov
mov
cmp
inc
push
rcrl
inc
data16
wbinvd
dec
into
arpl
bound
adc
mov
inc
negb
cmpsb
sub
xor
mov
sub
jle
inc
andl
adc
ret
jo
mov
fs
in
adc
add
ror
les
jecxz,pn
jecxz
leave
and
dec
xor
pop
and
push
push
insb
movl
inc
xor
add
push
fcoml
inc
cmpsl
shll
sub
and
jo
or
cmpsl
mov
adc
pop
jecxz
divl
leave
cmp
cmpsb
push
lcall
arpl
mov
push
pop
xor
inc
and
jl
pop
add
out
sub
sub
ja
shll
pop
jmp
pop
fiadds
adc
mov
push
pop
bound
xor
mov
push
sbb
inc
dec
add
jl
imul
push
sahf
and
pop
pop
pop
xchg
pop
pop
sub
pop
add
pop
lock
push
push
xchg
add
push
sub
pop
aam
dec
mov
mov
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
aaa
mov
cmp
mov
jl
loope
xor
jg
or
push
fistl
loopne
popa
inc
push
rolb
jl
push
push
ds
xchg
mov
int
jle
inc
mov
leave
pop
adc
push
cmpsb
divb
mov
sahf
pusha
int
cmpsl
sub
mov
pusha
repnz
mov
aas
add
xor
xchg
cli
add
inc
push
mov
cmp
popa
add
fldcw
movsl
sarl
aaa
lods
in
in
add
add
aam
xchg
mov
das
inc
cmp
xchg
fwait
nop
arpl
or
imul
rolb
test
es
push
jecxz
mov
or
or
push
leave
add
dec
cwtl
mov
fisubl
mov
mov
into
mov
cmp
jns
xchg
insl
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
dec
arpl
out
pop
cmpsb
outsb
fistl
pushf
jmp
pop
add
insl
cmpb
fisttpl
pop
push
push
push
inc
popf
les
or
imul
pop
cmp
ja
mov
ja
or
lea
andb
xchg
int3
movsl
add
stos
push
ret
push
lret
dec
cmp
and
popa
or
add
iret
pop
scas
jecxz
cmpsb
imul
aad
push
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
mov
xchg
fimull
aas
or
sub
outsl
inc
sbb
js
adc
shrb
xor
outsl
arpl
cmpsb
xor
jns
mov
andw
cwtl
push
push
stos
loope
popl
nop
es
adc
lcall
fucomp
push
add
xor
push
jns
adc
test
cmpsl
sub
pop
sub
dec
pcmpeqd
push
push
sbb
push
loopne
or
push
push
inc
mov
aaa
pop
pop
push
xor
push
or
and
hlt
mov
add
fnstcw
rorb
sbb
dec
and
orl
mov
xor
cmpb
data16
mull
dec
sbb
bound
xor
add
sub
sbb
add
and
adc
sbb
adc
xchg
leave
dec
cmp
adc
push
xor
out
xchg
mov
cmpb
and
jp
pop
mov
xor
add
aaa
sub
pushf
faddl
dec
test
push
sub
sti
lods
mov
or
and
sahf
data16
shlb
aas
jmp
and
aad
cmp
lds
add
push
mov
int3
and
pop
cmc
push
cld
aas
movb
test
scas
jge
movl
pop
sub
insb
shr
inc
xchg
stc
jge
xor
adc
xor
loope
push
sbb
push
hlt
aam
add
or
push
cmp
std
mov
decb
outsb
fisubrl
jno
xor
dec
mov
add
mov
bound
lock
and
and
fsubs
cmp
or
hlt
sbb
pop
pop
xlat
adc
arpl
pop
push
sub
inc
lock
or
pop
cmp
xor
jecxz
inc
xor
jecxz
or
dec
add
xor
xor
jae
adc
push
xor
adc
or
or
xorl
js
push
sbb
arpl
cmpb
cs
push
add
iret
xchg
sub
sbb
test
jmp
mov
fldl
and
insl
add
push
push
sub
pushf
test
push
popl
cmpb
add
pushl
faddl
jg
inc
xor
mov
inc
movsb
xor
je
in
add
arpl
sub
adc
jno
push
loopne
movsl
addb
aad
inc
das
pusha
js
cli
add
add
je
push
push
or
add
pop
mov
fsubrs
lea
push
sbb
xor
sub
movb
leave
add
sbb
cmp
add
push
ret
jbe
daa
pop
push
insb
sub
mov
or
or
sbb
cmc
sub
ret
sbb
flds
xchg
test
aas
test
inc
dec
hlt
sahf
xchg
andb
jg
mov
das
push
je
or
fwait
or
xchg
lret
test
fisubrs
inc
ja
cwtl
ret
imul
mov
nop/reserved
push
mov
and
es
cmpb
xor
mov
aaa
movsb
or
fwait
inc
cmpsb
sahf
idivb
or
fstpl
fbld
rorb
add
daa
mov
and
cmp
adc
push
cli
jl
adc
bound
jns
adc
sbb
fwait
lock
int
fs
push
arpl
push
mov
icebp
xchg
add
pushl
dec
add
adc
xor
jbe
stos
popf
and
mov
mov
inc
cmc
pop
sub
orb
push
push
mov
repnz
xor
testl
loope
dec
pop
dec
es
and
rorb
call
mov
test
cmpsl
dec
or
sub
bound
push
leave
pop
xchg
adc
inc
push
jae
sub
jmp
or
dec
add
fstps
je
lea
hlt
lret
add
rcll
jbe
push
pushf
mov
mov
jl
je
insl
or
xor
test
add
jge
lret
mov
jle
xor
or
aaa
push
neg
ret
jge
sbb
testb
rcr
adc
mov
cmpsb
add
inc
inc
nop
jne
imul
add
fidivl
cwtl
pop
clc
mov
jo
jo
push
je
adc
pop
daa
fs
jbe
cmpl
sbbl
sub
pop
and
je
jnp
or
out
inc
xor
in
movsl
dec
and
js
lea
js
mov
cmp
cmp
mov
push
imul
sub
cmp
insl
dec
jmp
andl
pop
loopne
mov
inc
add
cmpb
cs
subl
xchg
std
and
sub
adc
cmp
sbb
shl
arpl
adc
cmp
xchg
push
mov
cwtl
add
lret
mov
xchg
mov
and
aad
sub
jns
adc
pop
aad
sbb
pop
mov
mov
addl
push
sbb
lock
jnp
jnp
out
cwtl
pop
das
in
daa
add
adc
in
roll
mov
insb
push
std
mov
in
mov
xor
lods
mov
or
lea
loop
cmp
dec
fisubl
dec
pop
adcb
pop
in
sub
mov
sar
or
dec
test
xor
shl
sub
adc
adc
xchg
adc
lds
shll
pop
les
lods
leave
loop
xchg
or
jno
adc
mov
jne
ret
aas
and
sti
dec
ja
sub
sub
sub
sub
add
das
adc
je
stos
jns
dec
ja
push
jge
push
or
add
add
sbb
sahf
add
ret
pop
jnp
ds
xor
cmp
adc
lcall
push
cmp
mov
push
inc
adc
add
int3
mov
ja
mov
inc
ret
dec
lock
xchg
lock
lock
call
mov
rorl
jecxz
lods
stos
inc
adc
inc
xor
stos
cmp
sub
inc
ret
or
adc
and
dec
pop
add
frstor
and
mov
mov
ljmp
std
and
movsl
test
jl
and
or
cld
leave
outsb
mov
dec
je
sub
and
sub
mov
testb
in
addl
fistpl
in
fwait
mov
into
adc
shll
or
push
adc
or
cs
sub
xchg
pop
mov
pop
aas
in
imul
adc
push
insl
inc
or
dec
or
or
sbb
sbb
dec
punpcklbw
cmp
jge
and
jo
nop
sbb
or
or
jne
push
icebp
mov
mov
cmp
cs
push
or
xchg
fldt
push
pop
fsubl
or
add
je
push
test
xchg
sar
and
push
inc
dec
adc
or
push
insl
pusha
sub
pop
call
push
pop
mov
loopnew
push
les
push
sub
lock
push
fsubs
pop
daa
push
repnz
pop
shr
ret
sub
sarb
out
pop
dec
xor
add
mov
dec
imul
push
dec
cltd
movl
pop
and
inc
add
adc
in
add
add
add
adc
sub
ds
das
mov
enter
in
in
dec
xor
or
fdivrl
in
add
xchg
jge
mov
les
lods
dec
out
dec
sbb
mov
sahf
push
add
fcoml
nop
cmpsl
ret
sub
in
push
xor
fmuls
mov
xchg
push
test
mov
fsubrs
or
ljmp
push
pusha
adc
dec
or
ret
mov
cmpsl
sub
iret
mov
add
mov
xchg
aas
jl
sbb
dec
aam
push
orb
push
es
xchg
or
mov
xchg
rcrl
sub
add
outsb
lcall
mov
and
orb
jmp
cltd
decb
xchg
ss
inc
mov
mov
sbb
or
adc
xchg
mov
scas
push
cmp
rorl
test
movsl
push
adc
xor
mov
mov
dec
xor
or
cs
adc
mov
mov
test
dec
sub
or
out
inc
nop
jne
mov
jmp
push
xor
or
out
aaa
inc
ret
jge
mov
jae
ds
fcompl
sub
in
pop
hlt
or
lahf
dec
jl
sbb
stos
sub
mov
sbb
and
push
jb
imull
jb
test
outsl
loopne
leave
sub
je
mov
xor
mov
and
jb
cmp
adc
or
or
pop
dec
inc
rorl
or
mov
notl
ja
scas
sub
mov
pop
loope
mov
xchg
dec
push
and
sub
mov
push
dec
push
sbb
adc
add
sbb
xchg
push
xchg
cmpsl
xor
repnz
or
inc
jb
fld
ja
mov
mov
and
mov
popf
and
jg
dec
sub
and
mov
cwtl
ret
arpl
int3
test
andl
cmp
in
jle
push
inc
mov
js
jno
ficomps
pop
push
inc
leave
fcomps
je
rcl
add
pop
mov
add
lahf
adc
pushf
imull
push
push
xchg
push
sub
lds
mov
push
inc
pop
jae
data16
xor
aaa
prefetcht2
xchg
in
mov
inc
xor
xor
orl
pop
push
push
mov
test
mov
add
dec
xor
pop
loop
fisubl
sbb
mov
js
mov
jne
mov
sarb
push
call
sbb
je
and
sbb
jp
jle
push
jb
or
pop
adc
mov
adc
or
inc
and
add
or
xor
sub
frstor
xchg
adc
out
adc
test
lock
enter
and
sub
or
cwtl
stos
cmp
bound
adc
jne
add
adc
mov
lock
jge
mov
aam
cmp
outsb
sbb
pop
hlt
and
sub
xchg
fiaddl
cmp
or
jne
xor
mov
mov
add
sbb
les
fimuls
test
sub
add
push
xor
ss
pusha
sub
lahf
add
pop
dec
enter
jne
and
and
xor
adc
mov
xchg
or
add
aam
fbld
jne
push
mov
movsb
in
out
pop
test
push
adc
andl
js
je
fcmovnu
pushf
les
dec
out
inc
mull
arpl
sti
or
inc
loope
sarb
sbb
xchg
and
ret
sarl
push
sbb
out
push
loopne
jmp
std
and
adc
mov
jmp
cmpsb
inc
or
cmp
add
sbb
xchg
mov
adc
pop
clc
and
cmp
jb
xor
mov
clc
inc
cmp
cmc
add
insb
mov
dec
add
cld
rorl
cmpsl
inc
adc
push
mov
pop
adc
fsubs
xor
ja
jno
pop
mov
into
jle
jecxz
aam
sub
jb
mov
add
dec
repz
jbe
fistl
pop
mov
sbb
lcall
mov
aam
adc
and
inc
loopne
xchg
and
xchg
cmp
in
add
adc
sub
adc
fmull
xor
clc
sbb
push
fs
mov
outsl
xor
cmp
pop
dec
out
adc
or
push
or
adc
inc
and
mov
cld
sbb
in
or
cmovno
cltd
sub
lods
fbld
fsubrs
arpl
cld
xchg
pop
mov
pop
mov
int
in
jne
leave
outsb
addr16
cmp
mov
repz
lock
arpl
loope
lock
dec
cmpsl
arpl
jmp
arpl
rcr
fadds
in
and
cmp
sbb
jge
in
sbb
cmp
icebp
xchg
pop
add
outsb
dec
out
test
test
and
or
les
jle
imul
daa
subb
mov
sahf
cmpsb
push
lret
cmp
cli
loopne
je
rclb
push
mov
popf
push
sbb
dec
dec
jo
and
sbb
cmp
or
sti
xor
sub
cli
ret
mov
dec
loop
mov
dec
dec
push
push
dec
mov
pop
je
test
cmp
in
cmp
stos
stos
mov
mov
retw
sti
mov
fsubs
shrl
xchg
inc
cld
push
mov
sbb
arpl
push
sbbb
addr16
dec
sbb
adc
call
add
lods
out
adc
rcrb
inc
sub
push
mov
sti
xor
mov
jbe
cmpb
dec
je
sub
push
add
test
pop
mov
dec
add
dec
jp
cld
push
mov
and
fwait
push
outsb
lods
adc
push
cld
cmp
or
popf
std
aas
nop
add
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
and
and
push
mov
sbb
inc
cs
adc
pop
xor
stos
pop
int
dec
or
sahf
out
mov
je
adc
cmp
es
push
push
nop
xchg
cmpsl
sbb
addr16
dec
sbb
cld
and
arpl
mov
jmp
jne
sub
and
es
push
sahf
pop
sub
push
sub
sbb
testb
dec
add
pop
push
xor
scas
adc
loopne
push
cmp
xor
cmp
cmp
pop
imul
cmp
jns
jo
inc
scas
shll
mov
jne
inc
out
jns
dec
shl
jne
dec
mov
dec
add
daa
lods
cmp
cmp
inc
push
je
orb
outsl
test
ds
dec
dec
jmp
insl
test
add
in
adc
push
push
inc
and
xor
cmp
addr16
mov
pop
add
cmp
repz
dec
pop
jmp
es
sahf
out
sahf
cs
les
popa
dec
sub
jne
push
inc
inc
mov
test
add
add
mov
and
pop
adc
dec
or
into
mov
mov
repz
push
ret
aad
or
pop
push
sub
imul
and
add
inc
sub
or
fsubl
push
xor
xlat
nop
rclb
movsl
push
movsl
jb
sbb
andl
gs
push
loope
or
iret
push
test
out
int3
popl
jmp
sub
inc
and
sbb
dec
fcoml
in
or
and
adc
je
cltd
fsubl
iret
js
inc
in
pop
push
ret
data16
sbbb
inc
in
mov
xchg
call
mov
loope
cmpsl
mov
mov
add
aam
sbb
or
xchg
xchg
xor
imul
jp
loop
pop
dec
loopne
loopne
push
xchg
inc
pusha
add
cmpl
inc
xchg
rcrl
jb
xor
mov
jne
cmc
add
mov
icebp
and
popf
std
lcall
lds
sbb
popf
add
sub
push
cmp
pop
adc
add
add
int3
pop
inc
cmp
jp
out
pop
ds
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
je
and
shll
bound
push
imul
sbb
inc
ret
mov
add
add
inc
cmpsb
imul
push
or
sub
jecxz
add
mov
push
shl
in
inc
pop
or
repz
or
xchg
loopne
popf
mov
or
je
repnz
mov
inc
leave
xchg
cld
jno
push
push
mov
jge
cmp
js
add
cmpsb
jbe
push
lahf
pusha
int
and
xor
jge
cltd
inc
pushf
mov
scas
push
or
notl
stc
add
pop
ret
pop
cwtl
pop
cmp
jne
sbb
int
outsb
push
add
je
or
xchg
pop
cmp
pop
ljmp
xchg
adc
addl
push
lahf
cld
xlat
push
dec
adc
stos
stc
or
push
lods
jle
inc
xor
stos
sbbb
orl
jge
add
shlb
pop
push
mov
xchg
xchg
add
call
mov
or
jmp
jo
or
add
fsubr
in
or
sub
loop
xchg
ret
mov
dec
push
mov
jo
ja
xchg
adc
sbb
sbb
jl
dec
sbb
out
inc
push
jmp
push
fisubrl
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
sub
cmpsl
and
mov
sub
cmp
das
jo
jmp
jg
aam
data16
inc
xchg
imul
loop
push
in
xchg
fmull
sbb
lds
and
pop
je
dec
push
push
cmpsl
cmc
int
ja
ss
fisubs
mov
xor
icebp
mov
and
in
cwtl
dec
cmpsb
adc
pop
push
push
sub
sbb
subl
jns
jnp
or
stos
add
push
xor
andb
das
icebp
cmp
mov
push
jb
or
in
mov
cld
lcall
out
shll
push
leave
push
xor
pusha
sbb
add
cmpb
imul
imul
addr16
bound
and
mov
pusha
mov
inc
add
add
adc
sarl
sub
leave
cld
xor
push
xor
push
sbb
nop
and
out
xchg
push
push
cmpsl
test
test
push
rclb
out
push
dec
stc
add
pusha
xchg
fstps
sub
adc
jnp
lea
add
mov
cmp
push
loope
mov
cmp
push
pop
pop
jmp
or
xchg
push
adc
outsb
push
or
pop
iret
test
xchg
or
loopne
ret
icebp
push
lea
xchg
xor
cmpsl
add
xor
push
sub
xchg
and
cmp
fistpl
test
fs
enter
sub
int3
or
repz
adcl
test
mov
mov
std
xchg
add
lret
ja
push
pop
push
add
inc
enter
push
mov
add
int
xchg
ja
jge
jl
cs
add
or
insb
fdivs
andl
and
fs
mov
ja
mov
daa
scas
les
jnp
shrb
jne
stos
into
and
ja
or
loope
je
scas
jbe
sbb
pop
aaa
loopne
xor
scas
xchg
jno
push
lahf
mov
sbb
and
jp
into
repnz
xlat
add
pusha
xchg
jl
jle
jbe
jg
dec
mov
sub
je
ret
dec
sub
imul
push
filds
rol
push
push
mov
add
fwait
int3
ss
pop
jb
push
loope
mov
add
dec
inc
or
popf
orb
fistpl
out
jo
sub
shll
push
lea
mov
pop
sarb
push
sbb
push
sbb
fwait
adc
add
mov
mov
xor
imul
xor
or
cmp
adc
mov
sbb
cmp
dec
or
lret
ss
rclb
xor
in
sti
jp
aad
xchg
arpl
stos
adc
add
fnsave
dec
stos
rcrb
lods
mov
jo
add
cld
leave
jae
mov
cmpsl
adc
or
sub
or
lods
punpckldq
xlat
cmc
sub
push
clc
scas
adc
and
inc
adc
xchg
mov
jo
movsl
jne
fcomi
pop
adc
push
mov
mov
pushf
mov
add
and
cmpsl
inc
std
je
add
jo
push
faddl
test
add
sub
or
adc
sub
adc
and
push
adc
sbb
add
sahf
pusha
push
decl
ss
fsubrs
sub
ret
dec
inc
xchg
or
sbb
cmp
jae
sbb
add
test
or
add
cmpb
jb
sub
add
dec
dec
sub
push
xor
push
mov
push
call
hlt
xor
in
sbb
sbb
push
out
je
mov
push
je
adc
push
pushf
cmp
lea
push
push
pop
mov
adc
or
push
mov
push
mov
and
and
dec
enter
dec
xchg
pop
ret
ret
dec
cmovg
jmp
lea
pop
sub
test
adc
mov
push
lcall
cmpsl
lods
shl
hlt
jl
push
clc
rcl
subl
std
ljmp
cld
mov
outsl
push
fsubr
data16
sub
pop
rorl
xchg
inc
pop
add
fdivl
scas
pop
inc
and
jbe
sub
lea
aam
adc
push
std
mov
fisttpl
push
cmp
pop
and
movsl
mov
dec
push
pop
leave
outsl
sarl
sub
and
inc
gs
jmp
stc
or
popf
add
inc
sbb
cmp
fimull
or
pop
sub
sbb
jnp
add
jns
cmp
rolb
sbb
adc
push
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
push
cltd
pop
mov
ret
push
aas
clc
push
cld
fists
fldl
shr
not
sbb
dec
dec
shlb
push
mov
gs
imul
out
fmuls
jbe
push
es
xor
push
es
inc
lock
lret
xor
add
add
xor
repnz
cld
je
or
inc
sub
rcrl
ss
cmp
cmpsl
jns
xor
inc
pusha
fnstcw
cmpsl
dec
test
arpl
add
adcb
cmp
inc
loopne
out
movl
movl
pop
or
xchg
inc
xchg
jae
mov
fcos
inc
mov
jns
dec
push
adcb
insb
jno
jne
out
or
icebp
xor
push
dec
sbb
lret
and
pushf
push
pop
sbb
mov
in
movsl
push
cmp
dec
sub
push
add
movl
jb
and
popf
mov
cwtl
fstpt
inc
push
pop
xor
inc
dec
jne
jmp
inc
outsb
adc
fildl
icebp
push
addb
sbb
dec
call
add
roll
sbb
es
mov
call
outsl
arpl
and
bound
js
push
rcrb
inc
rcrl
out
es
and
jl
cmp
lahf
mov
lcall
or
inc
call
movb
and
mov
idivb
dec
sub
inc
cmp
adcb
sbb
pop
sub
mov
ljmp
je
pop
cmp
fbld
popf
sub
mov
out
cmp
orl
and
mov
faddl
cmpsl
lods
mov
or
sbb
jmp
adc
pushl
sub
and
ret
enter
sbb
xorl
add
mov
adc
pop
cwtl
jg
mov
imul
fistps
cmpsb
xlat
push
and
push
mov
pop
dec
pop
and
adc
clc
inc
mov
inc
fisubrs
sbbb
mov
and
or
xchg
rcrb
cmp
add
mov
mov
ret
adc
adc
data16
cmp
icebp
mov
xor
and
and
or
sub
lock
xor
push
add
dec
or
shlb
push
iret
call
fcmovnu
das
xor
sbb
int3
jae
pop
jg
sbb
mov
push
push
push
popl
test
dec
and
call
and
je
push
add
mov
test
mov
push
data16
pop
push
data16
lock
inc
mov
mov
bound
add
addb
clc
and
dec
add
jl
cmp
dec
repz
push
push
popa
sub
aam
mov
dec
sti
in
adc
mov
bound
inc
adc
gs
add
ja
add
cmp
inc
or
rolb
adcb
cmp
xor
cmp
loopne
lret
loopne
mov
mov
push
pusha
push
bound
adc
push
loope
inc
adc
add
sub
push
inc
inc
andb
test
push
inc
xor
in
out
xchg
or
jle
movups
ret
xchg
lock
ss
lea
add
js
jp
clc
and
js
add
adc
cmpb
call
test
add
das
in
xor
pusha
cmp
mov
sbb
cli
jle
cmpsb
nop
mov
pop
and
or
or
push
inc
dec
dec
loope
xchg
movsb
dec
add
test
cmp
mov
adc
sbb
sti
xorb
add
xor
test
add
xor
jl
sbb
push
hlt
sub
sar
push
faddp
lds
jb
ret
cmp
mov
dec
mov
adc
mov
ret
sub
jecxz
cwtl
or
and
push
and
xchg
push
jb
sbb
lods
xlat
xchg
add
mov
pop
outsl
mov
inc
or
ret
push
lret
shrb
add
mov
sub
mov
cmp
push
out
inc
andl
insl
cmp
and
cli
je,pn
pusha
inc
pop
ret
adc
ret
shr
mov
shlb
lods
ss
nopl
jl
inc
mov
std
pusha
js
jge
notb
je
mov
std
mov
push
jo
insl
push
jl
jno
sbb
push
cmp
ret
mov
jle
push
loopne
add
jbe
pop
add
mov
ja
insl
jne
pushf
sbb
and
jmp
xor
inc
inc
popf
inc
pop
adcl
add
sub
popl
orb
mov
sbb
dec
add
jne
sub
cltd
dec
add
outsb
sar
and
pop
xor
pop
cmp
fnstcw
jae
jb
jae
ror
jns
and
push
mov
sub
nop
mov
jg
adc
pop
push
nop
je
in
in
adc
add
mov
addb
adcl
jmp
cwtl
dec
jl
inc
inc
push
inc
movsb
push
call
loop
inc
mov
pop
add
cmp
adc
jo
xor
dec
mov
xor
xor
xorb
ljmp
add
enter
mov
inc
push
and
in
testl
xor
mov
insb
and
and
in
nop
scas
rclb
sbb
daa
or
cmp
add
andb
pusha
xchg
dec
or
and
fnsetpm(287
nop
fldenv
adc
imul
adc
adc
push
or
or
add
enter
sbb
cmp
insl
and
imul
jb
insb
cmp
xor
ret
andl
or
or
xor
icebp
dec
lds
adc
xchg
cmpsl
jne
shlb
cmp
sub
je
and
call
dec
pop
mov
js
add
in
and
add
adc
imul
inc
inc
and
or
mov
adc
inc
loope
xor
push
dec
inc
and
sbb
inc
ja
aas
and
xor
cld
dec
pop
xor
aam
fs
jg
or
xchg
or
es
xchg
or
xchg
sub
xchg
or
daa
cwtl
sub
xchg
or
sub
push
in
sub
ja
dec
dec
idiv
aas
das
jmp
cmp
xor
test
fstpt
xor
push
push
test
imul
cmp
cmp
cmp
mov
arpl
mov
leave
add
cmp
dec
fcoms
pop
pusha
adc
mov
pop
add
push
pop
pop
mov
sbb
adc
rolb
sbb
inc
call
test
push
fisubrs
mov
nopl
test
loopne
adc
xchg
jne
and
repz
mov
adcl
jge
fists
in
ja
xchg
or
dec
loopne
sub
sti
fisubs
pop
loop
mov
pop
mov
push
jae
out
fimuls
out
in
imulb
shl
fimuls
enter
cmpsl
mov
rclb
out
jns
aam
push
mov
jo
sbb
clc
push
in
jo
rorl
leave
push
and
jo
pop
scas
jns
xchg
incb
mov
or
mov
cmp
fcoms
pusha
fidivrl
pushf
adc
push
or
inc
mov
adc
inc
or
xchg
push
pop
push
sbb
jb
jg
or
fwait
push
mov
pop
push
bound
dec
and
stc
pop
out
add
sub
test
pop
lock
push
sub
or
dec
add
inc
and
js
mov
push
cmp
jne
adc
mov
cmp
xchg
in
fs
ret
add
rclb
push
push
ret
or
mov
js
and
lock
jno
or
movsb
push
pusha
push
test
push
mov
push
cmp
jbe
out
mov
sub
push
xchg
mov
out
or
jo
add
push
add
xchg
adc
addl
js
pop
jbe
or
jne
adc
jmp
popf
in
out
cmp
sbb
mov
jmp
fstp
fstl
pop
lods
jmp
dec
xchg
jmp
cltd
std
popf
in
lds
cmp
jmp
pop
or
and
or
add
adc
sbb
dec
lea
jne
nop
lock
jnp
xchg
dec
mov
xor
ret
jge
add
and
insl
fsubl
xchg
test
jne
loope
jmp
add
sti
hlt
push
push
pop
and
je
push
and
or
orl
movsl
push
inc
jmp
or
cmpsl
push
jp
mov
adc
add
add
mov
push
lock
cld
sub
rclb
pop
dec
nop
push
sbb
xor
add
test
rorb
fmul
or
push
lcall
mov
js
pusha
rclb
or
adc
ss
stos
popf
cmp
shl
adc
push
dec
cli
popf
call
or
les
cli
lcall
xor
call
mov
sub
jmp
test
jae
sbb
jmp
test
pop
cli
aam
and
lret
jo
jo
mov
jnp
dec
lcall
adc
xorb
xchg
dec
xchg
jae
mov
rorl
fdivr
aam
add
or
popa
mov
mov
xchg
sub
stc
ljmp
jge
pop
sub
dec
dec
loop
stos
ds
inc
cwtl
or
cmp
es
xor
push
test
sub
jl
mov
adc
lods
cltd
nop
sbb
rcrb
jbe
jmp
lahf
ja
adcb
sub
push
mov
inc
mov
adc
pop
mov
cwtl
iret
popf
jnp
leave
cmp
mov
scas
or
adc
imul
pusha
rcrb
inc
and
inc
and
push
push
lods
dec
add
adc
xor
sbb
xchg
pop
faddl
dec
aaa
rorb
in
mov
in
xchg
sbbb
and
shrb
popf
fwait
aam
add
push
cwtl
jge
lods
push
movsl
loop
call
imul
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
xorl
sbb
inc
inc
fnstsw
and
es
rclb
adc
push
sbb
sub
jle
cs
and
mov
mov
mov
leave
cmpsl
popa
and
adc
push
lock
fildll
cmpsl
and
push
sbb
iret
ret
cmp
fstp
pusha
leave
jns
dec
testl
hlt
mov
pop
pushl
mov
xchg
imul
nop
add
ljmp
or
ss
push
pop
movsb
rol
int
loopne
imul
and
mov
mov
push
lret
add
into
xchg
cmp
xchg
aam
push
xchg
out
lds
add
imul
jl
push
push
xchg
push
pop
adc
ds
and
andl
sub
inc
push
xchg
cmp
mov
fmul
sub
push
sub
es
or
mov
inc
fmull
jo
mov
or
enter
rorb
lea
adc
xor
add
aam
shrb
negl
stos
or
pusha
push
sbb
pop
andl
stc
or
mov
es
push
add
ficoms
pushf
lea
sbb
jno
xor
mov
xchg
aas
sti
movsl
loopne
mov
pushf
and
aaa
mov
js
adc
or
jbe
xchg
sub
mov
cmp
jbe
adc
mov
or
mov
mov
fstps
sub
push
int3
addb
ret
sbb
enter
add
outsl
mov
hlt
and
xchg
jp
adc
adc
xchg
pusha
xor
cmp
sub
arpl
dec
cmp
and
das
or
sahf
mov
shlb
or
inc
or
cld
jne
lret
xor
jecxz
rorl
or
lahf
push
xor
add
or
push
lods
pop
adcl
mov
sbb
loope
stos
shll
or
call
sbb
xorb
repz
mov
push
sahf
push
adc
adc
pusha
mov
xchg
enter
lods
push
cmpsl
enter
ret
sbb
push
adc
jnp
shlb
test
or
ret
fcmovnu
jo
orb
push
or
xor
mov
and
aam
cmp
and
dec
add
or
popa
sbb
jp
adc
dec
ficoml
int
rclb
push
push
mov
js
inc
inc
push
cltd
inc
add
xchg
insb
and
lret
daa
push
xchg
xor
mov
add
add
add
and
sbb
repnz
fs
jle
cmp
mov
dec
jnp
inc
es
mov
push
dec
test
add
inc
cwtl
cwtl
pusha
test
cli
mov
stos
iret
add
push
pop
inc
and
popa
lret
ret
mov
sbb
negb
rcl
mov
jns
adcl
xor
xchg
adc
add
xchg
cmp
sbb
dec
iret
push
adc
mov
mov
pop
push
fs
jp
imul
cltd
add
adc
fisttpll
fcomps
and
adc
dec
mov
push
xchg
lret
pop
or
call
mov
pop
pop
push
rol
sbb
inc
add
imul
push
nop
sbb
push
ljmp
or
ss
adc
inc
aaa
scas
xchg
ja
ds
cmp
and
pushf
lods
inc
hlt
inc
or
test
push
dec
lret
jl
or
add
stos
enter
or
sbb
scas
add
rolb
jo
int3
adcb
pop
inc
or
jbe
inc
imul
push
xlat
push
mov
outsl
push
add
ds
in
pop
dec
clc
je
adc
je
sub
push
movsb
jo
push
cmp
jmp
push
and
jnp
test
jl
and
imul
dec
mov
mov
insb
push
sbb
jno
loopne
inc
and
icebp
movsl
mov
pop
add
das
fdivrl
push
mov
and
imul
jge
mov
sbbb
xchg
and
sub
movsb
lods
nop
hlt
enter
pop
lret
addr16
mov
jo
or
inc
in
xchg
fiaddl
movsb
xor
mov
or
movsb
cwtl
fisttpll
loope
add
mov
mov
call
jge
mov
push
js
cmp
add
xchg
mov
subb
mov
bound
fs
xor
jmp
and
mov
push
pop
fbstp
jl
mov
cwtl
sbb
das
cmc
mov
dec
add
sbbl
mov
loope
sbb
ret
cmp
and
mov
or
and
push
ja
pusha
std
sbb
call
mov
pushf
xorb
lcall
dec
adc
add
add
inc
lahf
sub
arpl
pusha
aaa
arpl
inc
dec
std
push
cmp
in
cmp
call
sub
or
mov
shrl
imul
mov
add
dec
les
fcmovnb
cmp
es
add
push
pop
cmpsb
mov
fsubrl
push
jns
inc
ret
outsl
xlat
push
push
repz
adc
pop
pushf
pop
inc
je
rcrl
push
xchg
ret
push
or
jmp
dec
cmpsl
test
jae
je
sbbb
bound
lock
movsl
insb
xlat
push
icebp
filds
lods
pusha
sbb
xlat
and
add
cmpsl
cmp
mov
sbb
out
roll
push
add
xchg
sbb
jo
incb
dec
icebp
or
arpl
pushf
rol
pop
loope
cmpsl
jmp
daa
aas
in
adc
or
shll
mov
lds
fnsave
pop
mov
cmp
inc
push
ja
mov
stc
dec
rcrl
and
lea
or
inc
mov
dec
mov
cwtl
pop
inc
inc
inc
je
mov
mov
cmp
lock
stos
dec
cmp
test
mov
pop
sub
xor
gs
mov
mov
add
or
add
mov
repz
shlb
rcrl
xchg
push
add
xchg
fsubr
and
imul
pop
and
and
jnp
pop
add
es
push
jo
mov
fwait
mov
or
mov
sar
pop
adc
lret
inc
push
subb
or
test
outsl
orl
adc
mov
sbb
rorl
das
push
loopne
call
sbb
rcrl
mov
push
xorl
hlt
jae
or
test
push
mov
sbb
push
js
enter
adc
loop
mov
test
decb
pop
xchg
sub
pop
jl
add
repnz
outsb
lock
cmp
pushf
and
xor
jp
mov
sbb
mov
cmpsl
adc
cs
popf
pop
fwait
mov
or
in
mov
inc
xor
cmp
fs
hlt
into
cmp
hlt
mov
lods
pop
cmp
sub
pop
push
xor
mov
pop
cmp
popa
std
dec
loop
sub
sbb
ljmp
test
xchg
ds
jmp
add
mov
add
sbb
ret
jg
aad
mov
outsb
adc
mov
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
or
outsb
stos
add
mov
lock
bound
pop
jge
les
sbb
notb
jb
lcall
je
push
cmpsb
dec
cmp
xor
scas
roll
jp
sbb
xor
out
pop
adc
inc
inc
jmp
inc
jo
add
addr16
and
andb
jne
js
test
adc
lock
add
or
and
and
popfw
ret
sub
push
ds
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
mov
mov
mov
int3
xchg
lock
ret
add
ret
mov
mov
or
gs
lret
bound
inc
ljmp
dec
push
dec
rcll
xchg
mov
out
dec
call
cmp
dec
jbe
push
out
dec
sbb
pop
adc
push
mov
es
mov
enter
jmp
push
stc
cmp
xor
in
mov
mov
lods
sub
in
adcb
mov
xchg
mov
jns
pop
sbb
sbb
mov
mov
sub
mov
enter
sub
jmp
cmp
inc
in
pop
mov
mov
sbb
jecxz
adcb
and
jl
adc
or
pop
loopne
push
les
iret
push
fs
andl
push
repnz
sbb
cmp
mov
jnp
jno
test
jne
jmp
data16
loop
pop
int
testl
fiaddl
ret
adcl
xor
push
xchg
xchg
loopne
ljmp
push
pop
mov
jno
push
push
inc
pop
test
nop
cltd
xchg
das
lock
iret
cmp
mov
sub
pop
jo
jg
pop
movl
xor
lcall
and
shlb
cwtl
pushl
icebp
test
in
rcl
adc
jnp
fldcw
jno
shlb
daa
inc
add
fsubs
jae
jo
adcb
jl
pushf
ficoml
aaa
mov
jle
cli
insb
mov
test
jo
insb
call
jnp
xor
inc
repz
jo
daa
frstor
inc
fwait
mov
outsb
in
push
cmpl
jo
sti
cmp
add
dec
add
lods
cmpsl
fldt
push
push
loopne
outsb
adc
pop
cmp
xchg
push
or
lret
xchg
pop
hlt
push
iret
cmp
inc
test
inc
arpl
mov
test
or
jbe
je
bound
or
inc
addr16
pop
jle
dec
push
xor
xor
enter
test
gs
xchg
std
dec
pop
cmp
bound
and
sub
int
mov
or
and
mov
inc
push
stos
push
add
ret
gs
aaa
mov
sbb
mov
lret
pusha
xor
cltd
lret
inc
or
cmp
sbb
jp
push
es
xchg
add
inc
sbb
test
add
mov
push
call
mov
jbe
xor
inc
add
cmp
adc
xchg
add
cmp
sbb
push
test
test
dec
mov
lods
cmp
in
sahf
or
inc
cmp
nop
lock
mov
fistl
add
divb
mov
and
shr
xchg
lock
inc
adc
mov
mov
aad
or
test
sub
fmuls
cmp
add
pop
pushl
add
jmp
add
insb
cmp
dec
out
adc
and
aaa
arpl
mov
loopne
inc
inc
movsb
adc
mov
sbb
enter
icebp
outsl
xchg
or
movsl
push
push
das
push
dec
or
sbb
jl
mov
sub
fildl
jbe
test
push
sti
cmp
mov
add
test
and
and
jp
outsb
gs
push
add
pop
mov
mov
addr16
add
dec
mov
scas
test
jmp
rcl
xchg
addb
cmc
add
xchg
fs
mov
jb
cmp
sub
or
cmp
sub
inc
sarl
sbbl
addl
enter
cmp
jg
xor
mov
stos
add
int3
arpl
inc
outsl
xor
jp
iret
data16
je
fs
adc
mov
sub
xor
adc
sbb
ret
into
add
add
rcll
sub
ja
or
pcmpeqw
lcall
or
lea
inc
je
mov
push
jge
push
push
inc
cmp
sub
scas
cmpb
or
cmp
xor
je
cwtl
adc
dec
jge
pop
add
jbe
sbb
in
mov
int3
movl
mov
xor
loopne,pt
sub
ffree
popf
adc
call
mov
repz
dec
aaa
add
mov
lcall
pop
scas
das
stc
dec
loopne
clc
xchg
lret
push
add
push
data16
fnsave
call
or
std
mov
insl
add
addb
xor
sub
sbbl
or
sti
aam
xor
inc
stos
push
cmc
sub
sub
mov
outsb
inc
jne
sbb
das
push
ljmp
loop
push
mov
or
dec
push
push
xorl
jo
minps
test
or
dec
xchg
mov
xor
lock
xor
adc
jmp
add
jo
les
pop
imul
mov
lret
lock
dec
movsl
adc
mov
or
repz
repnz
repz
pop
fcoms
sbb
les
xor
sbb
inc
xor
push
xchg
test
mov
lret
mov
and
insb
pop
add
dec
repnz
rol
and
fmul
shr
movsb
mov
push
ficomps
add
mov
je
sti
movsl
mov
mov
xchg
das
aam
pop
cwtl
and
jl
jbe
adc
pop
and
js
cld
scas
xor
adc
repz
add
mov
loopne
movsb
adc
fdivl
addb
and
sbb
test
push
push
xor
repnz
hlt
lods
or
es
push
pop
jle
mov
shl
stos
mov
pop
data16
loope
add
mov
sbb
mov
or
cmp
pop
adc
fcmovb
cmpsl
and
inc
loopne
jbe
push
push
rcr
or
lock
test
mov
mov
push
jno
push
call
inc
jle
cmpl
lret
loop
dec
jae
jp
or
sub
or
repz
inc
cmpsl
inc
xchg
jle
add
add
xchg
aad
pop
mov
into
idivb
outsl
adc
cmp
fisttps
or
inc
add
jge
cmp
outsl
fmul
pop
mov
push
add
enter
decl
int
push
push
ret
ljmp
push
inc
jle
lcall
mov
push
add
cmp
dec
nop
mov
add
or
pop
dec
divb
or
mov
xor
cwtl
sub
pushf
add
and
enter
stc
mov
push
sub
xchg
stos
add
nop
lods
jns
cmpsl
cmp
test
mov
mov
mov
in
sahf
les
rorl
sub
inc
faddl
mul
or
or
cmp
or
notb
cmp
pop
or
dec
inc
push
jp
mov
sarl
mov
add
mov
sbb
jbe
loopne
icebp
movsb
orb
aam
sbb
mov
test
or
add
aaa
sti
loop
out
push
inc
sahf
cwtl
addl
movsb
fldl
mov
xchg
jl
andb
xchg
outsb
loopne
or
cs
js
mov
mov
pop
movsl
lret
add
inc
add
add
push
sbb
push
adc
cmc
pushf
jmp
and
inc
fwait
xor
dec
jne
inc
sub
lcall
les
mov
dec
hlt
pop
lea
insb
je
sbb
jg
jmp
and
push
mov
repz
gs
in
mov
shll
or
xlat
subl
jmp
xor
pushf
ja
xor
ja
sub
xchg
xor
loopne
lret
orb
jmp
xor
push
or
test
inc
add
dec
fstps
jecxz
xchg
pop
xchg
mov
scas
adc
popa
js
jbe
adc
orb
lods
inc
push
xchg
or
outsb
je
aaa
movsb
jbe
mov
pop
clc
das
js
lods
into
lcall
adc
dec
out
adc
or
js
cs
pop
jg
cld
or
cmp
inc
shlb
rcll
and
mov
or
add
xor
rol
add
in
loope
dec
inc
icebp
add
out
clc
loopne
jmp
loopne
pop
inc
enter
push
push
bound
lock
mov
dec
inc
imul
adc
cmp
cs
push
les
add
out
inc
mov
movsl
outsl
xor
ljmp
data16
les
sbb
adc
cmp
push
sbb
jno
mov
dec
push
rep
adc
pop
lahf
xchg
imul
xchg
dec
loop
movsl
and
outsb
lahf
xorl
les
or
sbb
pushf
subb
mov
and
mov
shrl
push
imul
jecxz
push
xchg
daa
mov
andb
inc
ret
inc
xchg
mov
push
xchg
mov
mov
fisttpll
add
mov
push
push
or
inc
bound
xor
sahf
adc
scas
or
lret
add
je
cltd
pop
add
sbb
mov
stos
fmuls
idivl
add
leave
xor
sub
cmpl
fsubl
mov
push
pop
dec
xor
dec
cli
mov
mov
orl
inc
jnp
adc
dec
pop
jle
inc
ljmp
popa
insb
testl
sarb
call
das
add
cmp
pop
xchg
push
aad
jae
adc
out
stc
inc
sbb
test
fmuls
add
adc
and
nop
sbb
pop
dec
in
inc
cmp
mov
sbb
jp
jmp
popa
mov
dec
lods
sub
xlat
gs
jl
xor
lock
rol
xor
fnstsw
call
movsl
push
push
movsl
fistpll
inc
hlt
fstl
mov
lock
fnstsw
mov
in
fldl
pop
fsubr
pop
faddp
andl
sbb
jbe
orb
dec
adc
mov
cs
sub
sti
sbb
sarb
inc
js
pop
lret
cmp
pusha
pop
lcall
inc
sbb
jge
mov
cwtl
fdivrs
sub
adc
arpl
xor
out
sbb
loope
fstpt
dec
adc
in
sub
pop
push
or
or
xor
mov
add
into
push
cmpsl
cs
adc
mov
loope
cmp
cli
cmove
cli
xor
imul
push
mov
or
inc
cmp
dec
mov
int3
dec
ret
sbb
enter
outsb
push
or
xlat
mov
mov
out
scas
sbb
in
sub
mov
add
dec
or
mov
ljmp
dec
mov
cmp
jge
ret
push
fs
roll
dec
popa
popa
push
adc
int3
adc
jne
push
pop
shlb
cwtl
stos
jmp
test
and
dec
add
adc
or
in
fcoms
popf
adc
adc
inc
cwtl
adc
test
pop
add
aad
icebp
jne
push
push
adc
daa
adc
sub
leave
das
ds
mov
rorl
fldt
into
inc
add
xchg
add
dec
jns
mov
mov
adc
and
mov
sbb
shlb
mov
mov
lods
ss
jmp
das
aaa
mov
subl
stc
xchg
mov
inc
dec
cmp
pop
and
xor
inc
add
jl
cmp
ret
ja
inc
lods
xchg
hlt
or
mov
in
adc
decl
inc
adc
scas
dec
lea
hlt
nop
dec
xor
popf
test
xor
adc
int
gs
push
jle
das
inc
jl
dec
stos
js
inc
mov
xchg
popf
dec
ss
mov
jecxz
lock
and
pop
jle
or
rolb
mov
iret
outsl
add
addr16
in
arpl
jns
sbb
push
inc
cltd
mov
push
les
dec
add
pop
xor
cmpb
out
mov
ljmp
and
sbb
pop
outsl
xor
fcoms
jle
outsl
mov
push
pushf
push
push
lds
adc
dec
lods
nop
inc
dec
sbb
js
ja
imul
insb
add
nop
les
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
js
bound
lds
arpl
xorl
insb
ret
jmp
mov
roll
sub
call
sbb
pusha
arpl
inc
jp
adc
push
and
mov
sbb
mov
ret
cmp
push
push
xchg
sbb
or
lods
mov
lea
cmp
lods
mov
or
repz
shll
lock
or
lods
mov
div
loop
bound
repz
gs
add
push
hlt
dec
mov
data16
push
sub
movsl
test
mov
stos
dec
and
sbb
add
leave
add
mov
push
out
enter
dec
int
in
inc
adc
push
mov
movsb
rcl
arpl
add
mov
pop
xor
xor
sbb
inc
xchg
cmp
push
movsl
out
loopne
xor
sub
sbbl
xor
mov
xor
daa
add
dec
jb
je
and
jmp
in
inc
inc
subb
cmpsl
xchg
push
sarb
lods
bound
xor
jmp
jg
pop
mov
add
sbb
add
add
mov
push
enter
shlb
sub
inc
dec
add
sbb
rcll
outsl
and
scas
mov
pop
cmp
dec
insl
adc
leave
add
repz
bound
dec
lods
es
sbb
rolb
ljmp
dec
adc
mov
ds
xor
ds
ljmp
mov
adc
push
movsb
sbb
dec
dec
mov
nop
or
jns
clc
arpl
sub
addr16
cmp
sub
pop
or
and
and
fimull
js
xchg
test
lahf
ljmp
bound
test
pop
push
mov
jp
scas
test
xchg
call
idivl
hlt
insl
movb
and
mov
and
or
orl
pop
mov
mov
push
fucomip
inc
adc
int3
xorl
subb
ret
aas
sub
aam
push
imul
bound
enter
inc
cltd
pop
xlat
mov
xor
inc
xor
xor
mov
xor
cmp
test
test
mov
inc
and
jl
push
in
push
mov
add
dec
ds
popa
adc
inc
lret
xchg
cmp
add
xchg
ret
ret
call
fiadds
or
dec
mov
sub
add
dec
aam
push
inc
push
inc
ds
dec
bound
xchg
xor
add
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsl
dec
pop
pop
xor
aas
mov
gs
cmp
cmp
push
mov
cs
lock
inc
push
loopne
xchg
aas
nop
push
mov
clc
jne
and
lock
nop
or
clc
lret
ficoml
jmp
sbb
cmp
loop
inc
mov
roll
lret
xchg
setl
and
or
mov
jnp
add
inc
lret
movsl
das
pop
jmp
ss
es
leave
lock
shr
mov
xadd
fcoml
js
xchg
push
adc
push
mov
ffreep
ljmp
movsl
sbb
mov
push
lcall
inc
cmp
mov
fnstsw
dec
cmp
push
push
push
inc
clc
popa
sar
test
push
les
or
mov
cmp
ja
push
sbb
jbe
cmc
or
loopne
aaa
add
add
push
test
pop
icebp
jne
lcall
sbbl
add
nop
dec
enter
jmp
pop
repnz
or
adc
adc
pusha
and
add
pop
add
std
in
inc
dec
rcll
mov
stos
lock
cmp
pusha
jmp
xchg
or
sbb
xor
insb
jb
or
pop
clc
jl
test
xchg
cmpsb
and
sbb
imul
clc
subb
aam
leave
xor
jb
push
inc
dec
sahf
add
add
add
push
lret
xor
add
sahf
testl
sti
sbb
or
dec
pop
fcomps
xchg
dec
dec
aam
aaa
shlb
mov
jl,pt
inc
and
xor
movsl
or
mov
push
pop
jne
pop
xorb
lods
stc
inc
xor
inc
scas
ljmp
jp
ljmp
sub
stc
cmc
bound
fadds
add
jnp,pn
push
adc
xlat
jb
enter
or
jp
push
push
data16
idivl
push
rcrb
add
fldcw
inc
jp
add
push
cmc
xchg
dec
mov
dec
stc
sbb
cmpl
inc
roll
jns
or
push
sahf
in
add
mov
stc
pop
or
fmulp
shlb
je
in
push
test
jbe
shrb
les
inc
xchg
cmpsb
stc
in
in
loopne
mov
pop
add
add
inc
pop
js
pop
insl
mov
mov
push
add
jge
sti
add
add
jmp
inc
and
xchg
and
xchg
pop
pop
dec
cmpsl
out
scas
loopne
cs
call
sbb
rcr
rcrl
int3
sub
dec
daa
mov
fcoml
lret
andl
cmp
iret
fmuls
aas
pop
jmp
and
and
pop
mov
or
es
ljmp
mov
ret
pop
lahf
nop
lret
mov
pop
loopne
dec
je
andl
fcmovnb
call
xor
push
sbb
and
push
xchg
jmp
and
push
outsl
adc
xor
in
into
cmp
sahf
and
mov
daa
inc
pop
cltd
int
mov
pop
add
nop
roll
pusha
out
stos
xor
lret
inc
mov
rorb
xchg
test
xor
xor
sbb
sahf
push
mov
inc
dec
fistpll
movsl
and
rcl
fldt
jmp
adc
ljmpw
inc
inc
cmp
sbb
jo
and
mov
dec
aam
es
jno
push
mov
sub
xor
inc
nop
ja
pusha
sbb
xchg
jge
loop
jo
mov
data16
out
add
and
ss
or
pop
cli
cmc
lea
sti
das
push
scas
dec
pop
cmp
repz
sub
push
xor
filds
add
xchg
mov
add
out
jl
push
inc
inc
dec
push
cwtl
shrb
pop
pop
sbb
imul
xor
and
jb
sbb
jbe
and
sbb
inc
andl
push
xchg
fs
pop
lea
popf
add
roll
gs
xchg
push
popf
adc
inc
adc
pop
xchg
sub
pop
or
xor
inc
add
sub
push
jge
dec
lock
xchg
cmc
and
fwait
add
sbb
and
aas
xorb
lahf
mov
adc
jb
lock
rcrl
xchg
or
sarl
xor
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
fbld
add
dec
jb
sub
pop
and
add
sbb
into
adc
add
std
push
mov
push
test
inc
pop
mov
pop
pop
data16
xchg
xlat
push
rol
pop
cmp
inc
loope
jne
imul
jns
xchg
add
pop
arpl
mov
cmp
pop
and
fdivr
sar
add
or
push
inc
pop
adc
sbb
ss
or
and
test
mov
hlt
dec
mov
xorb
push
inc
mov
fnstenv
pop
pop
xor
mov
jbe
aam
ret
inc
mov
dec
lahf
add
adc
jo
fcomps
test
sbb
inc
sbb
js
iret
ds
add
jo
sbb
ret
adc
pop
sahf
cltd
insb
jbe
addb
lea
mov
pusha
inc
jmp
notb
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
fimuls
jne
pop
push
lcall
aaa
lock
dec
push
cmpb
sbb
punpckhdq
jl
shl
push
inc
sti
insb
push
pop
enterw
and
sahf
aam
jmp
out
mov
push
pop
je
push
mov
cmp
adc
add
and
pop
inc
cmp
or
popa
mov
mov
and
lahf
push
sarl
cltd
inc
and
addr16
or
jns
pop
sbb
repnz
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
mov
shll
stos
loopne
ret
sbb
push
jge
lret
mov
ljmp
pop
xor
loope
sub
pusha
add
sub
gs
sahf
mov
and
das
jecxz
cmp
ljmp
add
push
inc
lock
movb
sar
rcrl
pop
nop
js
rcrb
xor
inc
lods
pop
push
ss
jae
aam
mov
test
jmp
cld
adc
inc
clc
cmp
je
push
iret
loopne
inc
fs
stos
or
push
loope
dec
push
clc
mov
and
ret
test
lea
push
mov
adc
pop
xor
add
inc
dec
add
in
inc
loopne
push
das
orl
or
aas
mov
add
mov
adc
sarb
inc
sub
dec
sti
mov
or
iret
aas
push
enter
and
and
mov
aad
dec
pop
ss
sub
cmc
push
mov
jg
lret
mov
jg
fisttpl
mov
push
or
xor
insl
popa
lods
les
leave
insb
dec
sbb
cmp
lods
add
sbbl
inc
adc
ss
inc
jb
add
mov
xor
in
and
pop
adc
or
push
xor
push
cmp
das
popa
ret
mov
data16
push
mov
or
add
mov
lods
lea
adc
stos
movsl
imul
scas
or
test
aas
decb
call
fsts
push
pop
and
mov
cmpsl
aaa
and
mov
and
cwtl
sbb
mov
push
pop
inc
insb
sbbb
je
loope
add
repnz
mov
xchg
rolb
push
sub
aad
fistl
cmp
aad
pop
jne
push
jmp
cmp
ss
adcl
inc
xor
sbb
mov
lock
test
jbe
add
adc
sub
push
inc
in
imul
lock
rcrb
clc
push
dec
pusha
je
movsl
xchg
pop
lret
loopne
stos
mov
adc
mov
nop
push
push
das
cmpsb
rcr
les
fwait
movsl
mov
sbb
ljmp
rolb
cmpsl
and
pop
jge
lods
rolb
jp
mov
ljmp
mov
fimuls
decl
jns
int
aaa
fiaddl
or
or
pop
mov
mov
adc
dec
mov
shlb
jne
rorb
inc
cmp
test
pop
and
nop
pop
lea
xor
sub
dec
dec
push
or
inc
add
pop
adc
inc
sub
fdivl
sbb
sarb
fs
imul
jbe
mov
mov
dec
loopne
cmpsl
or
add
sbb
popa
xchg
test
insl
subb
dec
pop
das
popf
sti
sub
loop
ss
fsubp
dec
add
mov
adc
and
test
add
push
add
loope
and
mov
push
imul
mov
call
fstpt
fwait
xchg
mov
pop
mov
inc
mov
dec
push
push
dec
fisttpll
mov
mov
xor
inc
adc
jne
hlt
and
xor
adcb
mov
or
sub
add
jle
iret
jge
mov
and
xchg
mov
fwait
jb
arpl
dec
cmp
shrb
fisttps
inc
shrb
add
pop
add
pop
inc
shl
inc
pushf
sub
in
es
pop
xchg
jmp
sbb
je
jbe
ret
pop
call
ret
jno
gs
cmp
mov
pop
rcr
stc
data16
call
dec
or
xor
add
or
lods
imul
mov
mov
xchg
rcr
jmp
mov
cmp
mov
inc
jle
call
inc
les
and
adc
out
sub
dec
mov
pop
sub
sbb
dec
adc
or
and
add
and
adc
pop
mov
pop
ret
movsl
jg
cmpl
popf
shrb
add
mov
dec
pop
add
inc
mov
jl
movl
push
inc
or
in
popa
ret
cmpl
lahf
mov
mov
sbb
sub
or
fwait
jmp
sub
scas
ds
adc
sahf
cltd
clc
jnp
inc
pusha
sti
fcompl
pop
cmpsb
clc
lahf
mov
decb
adc
dec
hlt
jl
push
push
push
hlt
mov
and
add
loope
cmp
les
inc
scas
push
push
outsl
inc
pop
dec
loopne
inc
daa
ret
in
xor
hlt
stos
cli
lea
stos
or
mov
insl
xchg
inc
add
imul
mov
or
jmp
in
in
hlt
sbb
push
push
sub
popf
icebp
adc
gs
stc
imul
repnz
and
dec
add
stc
xchg
aam
xor
cmp
mov
jne
push
adc
push
test
jmp
insb
jb
sub
push
or
pusha
push
insb
je
sbb
push
sub
xchg
add
stos
sbb
mov
dec
add
or
fld
inc
and
push
xchg
orl
xor
dec
jp
add
mull
icebp
insl
jmp
push
test
dec
iret
jnp
push
and
icebp
inc
lret
les
sub
testl
test
inc
imull
out
insl
pushf
add
add
cmpsl
mov
jecxz
test
pushf
xchg
inc
mov
in
add
movsb
xchg
jo
adc
test
sbb
ret
and
lea
jmp
call
add
mov
or
xchg
xchg
mov
in
pop
leave
inc
add
dec
movsb
sti
inc
xchg
nop
inc
scas
in
sub
mov
dec
pop
push
mov
lods
in
jne
sbb
pop
jl
and
mov
test
jl
fldt
sub
lahf
rolb
push
push
add
sub
shr
aas
pusha
push
push
xor
or
adc
adc
adc
aaa
jo
or
and
pop
jb
or
rolb
out
or
add
sbb
dec
or
je
mov
and
push
dec
push
cli
and
stos
gs
enter
cmp
test
imul
inc
ret
ljmp
push
testl
insb
vmread
cs
pop
out
xchg
aas
sbb
or
leave
test
std
adc
adc
mov
pop
xchg
mov
inc
or
xchg
add
popa
or
loopne
into
test
adc
sub
jae
push
inc
nop
stos
loope
lret
adc
mov
adc
lock
js
jmp
push
int3
jmp
and
lock
adc
addb
add
loop
rolb
mov
or
pusha
mov
sbb
rclb
cwtl
mov
sbb
ret
jae
adc
inc
addr16
and
jmp
xchg
add
sbb
cmc
cmp
mov
sub
inc
sbb
mov
dec
mov
imul
lahf
push
xor
xor
mov
sbb
push
add
dec
subb
stos
cmp
jb
in
dec
lock
jo
movsb
sub
add
jmp
cwtl
imul
xchg
or
push
jmp
in
push
lea
fsubl
add
adc
add
mov
sbb
stos
xchg
or
push
sbb
lods
inc
dec
sbb
sub
jne
out
fsubl
xchg
push
inc
scas
fmul
cmp
fsubs
jg
inc
ljmp
add
and
fdivr
add
mov
sbb
outsb
sub
inc
aas
fdivrs
xchg
pop
mov
xor
jge
stos
mov
push
add
rclb
mov
sbb
fldt
add
dec
ret
out
xchg
out
gs
cmp
dec
fmull
stos
sub
and
jns
mov
dec
lods
mov
pushf
dec
jmp
fsubs
xchg
adc
mov
adc
jb
or
or
insl
lahf
push
cmp
shl
cmp
rcrb
mov
sbb
pop
sbb
inc
push
xor
fsubrl
into
nop
push
sub
arpl
sarl
pop
jo
outsl
and
scas
mov
test
pop
push
in
ja
and
je
movsb
push
push
xor
xor
mov
rorb
pop
push
rorl
pop
or
jo
adc
clc
arpl
test
sub
pushf
jecxz
nop
mov
call
call
fst
lock
pop
ret
pushl
lea
cmp
lea
cld
jne
mov
and
mov
pop
shll
xorb
test
add
lock
pusha
mov
sbb
push
pop
push
insb
movsl
loopne
cwtl
movsb
cmp
stos
ds
push
adc
loopne
in
sahf
addb
xorl
add
and
push
fwait
popf
ret
xchg
mov
sti
shr
push
pop
mov
push
cli
and
add
mov
mov
bound
es
jmp
sarl
push
push
mov
push
enter
aas
js
mov
and
mov
loope
mov
push
sahf
ss
movl
inc
int3
in
movzwl
push
cwtl
cmp
fmull
fucomi
mov
sbb
ret
insl
add
cmp
icebp
nop
push
sahf
jecxz
mov
mov
sbb
jno
mov
scas
dec
push
daa
and
cmp
jl
test
iret
iret
mov
fiaddl
xchg
push
mov
imull
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
sub
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
es
adc
mov
xchg
sub
cmp
and
dec
repz
adc
jbe
push
push
inc
xchg
or
xlat
push
cmp
or
sar
out
push
shr
mov
mov
in
scas
xchg
adc
jmp
cmpb
and
adc
push
jg
push
add
inc
fnsave
inc
testb
fxch
rorb
testl
cmp
push
xchg
pop
dec
sub
sub
clc
adc
jbe
push
paddb
es
sbb
xor
and
or
subl
jl
enter
cld
pop
xchg
jbe
je
movb
rol
les
xorl
loop
add
jle
fdivs
sbbl
out
fcmovnb
cmpl
out
sub
andl
or
mull
pop
in
lcall
sub
dec
push
mov
test
insl
mov
dec
jp
ljmp
adc
push
cmpsb
shlb
inc
hlt
or
or
adc
lods
or
xchg
sbb
add
lahf
mov
test
fwait
repnz
movsl
movsl
in
mov
repnz
repnz
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
cmp
push
and
test
xor
dec
cmpsb
inc
mov
popa
or
mov
in
loope
inc
jmp
icebp
sahf
out
sahf
pop
arpl
jnp
jns
out
mov
jns
out
mov
mov
sahf
lret
rcl
fcmovu
jns
out
in
out
repz
sahf
out
out
std
out
push
pop
or
push
sti
jmp
jns
and
add
add
and
sti
aas
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
testb
push
std
rcrb
cmp
adc
std
icebp
shll
inc
or
or
sub
dec
ljmp
add
cmp
mov
loope
pushf
les
stc
or
rclb
aam
andl
or
mov
xor
or
and
pusha
lea
push
ficoml
fsubl
xor
mov
mov
cmp
inc
dec
sbb
cmc
fnstsw
jo
cmp
shrl
push
inc
push
inc
sbb
mov
jns
popa
lods
add
sub
repz
mov
mov
xchg
jbe
cmp
setnp
adc
in
ja
sar
faddl
rolb
sbb
add
loope
push
cltd
push
pop
andl
sbb
les
pause
fsts
pop
pop
sub
cmp
jae
lds
rclb
lock
sbb
ljmp
and
ret
jp
jge
dec
fidivl
lods
xchg
mov
fidivrl
sti
jae
popa
lret
cmp
add
clc
cmp
adc
daa
sbbl
sub
scas
data16
mov
sbb
sbb
shr
add
test
or
insl
push
shll
xor
fcomip
and
imul
xor
dec
and
sbb
push
or
inc
mov
dec
sub
lea
rcrb
xor
dec
pop
or
movb
imul
js
ret
movl
jl
divb
dec
cmp
jbe
mov
lock
adc
sbb
divb
lods
xchg
dec
insl
stos
or
push
mov
dec
inc
out
scas
bound
pusha
pop
cltd
leave
pop
cmpsb
pop
mov
or
or
fldl
inc
mov
jp
fimull
adc
cmp
filds
add
adc
shrb
mov
in
adc
lcall
out
andb
fwait
add
or
xchg
pusha
popf
adcb
shlb
js
sysret
mov
push
and
test
pop
pop
movb
andl
inc
addb
js
inc
pop
popa
add
subl
add
shrb
je
loop
add
add
mov
mov
xchg
mov
and
adc
aad
adc
je
push
sbb
add
mov
xor
push
out
pop
imul
sbb
add
sbb
pop
lock
lods
add
lret
out
adc
clc
ljmp
jnp
lea
mov
push
fiaddl
add
and
cwtl
aaa
nop
inc
and
rorl
sahf
sub
pop
stos
nop
fs
xor
movl
adc
adc
and
andb
xchg
or
xor
inc
add
out
pop
andl
pop
adc
sbb
jle
ficompl
adc
or
jl
xchg
lea
movsb
sub
push
dec
jmp
add
jle
in
inc
cmp
add
cli
es
lea
cmp
mov
jg
and
or
js
cs
jle
and
js
sbb
sahf
sub
aad
or
xor
filds
jmp
cmp
mov
icebp
jl
neg
mov
cmp
push
insl
mov
test
jae
daa
int
xchg
ds
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
jae
movzbl
push
mov
add
or
adc
ret
cmpsb
js
add
dec
jmp
mov
inc
pusha
lock
mov
pop
push
inc
in
add
pop
ss
pop
xor
orb
movl
lcall
sub
pop
pop
sbb
adc
sbb
jne
inc
cmp
icebp
push
mov
adc
add
shlb
or
jno
adc
jmp
sub
add
or
adc
dec
add
stos
push
cmp
and
add
pop
rol
pop
sub
jne
jbe
push
leave
adc
clc
outsb
pop
mov
adc
push
push
sbb
jl
dec
adc
adc
pop
or
push
dec
sti
adc
fdivrl
adc
add
call
sbb
dec
dec
mov
and
cmp
ja
movsb
rcll
mov
pop
pusha
mov
adc
add
or
and
out
xchg
sbb
xor
outsl
push
add
mov
popa
out
xchg
rolb
rclb
lea
xchg
sbb
inc
jl
xchg
mov
add
jbe
mov
add
add
cltd
inc
in
cmc
xchg
in
stc
inc
std
mov
in
mov
sbb
inc
xchg
add
repz
jge
cmc
inc
xchg
and
sbb
ja
adc
adc
xlat
cmp
ljmp
mov
sbb
adc
fists
test
jle
mov
cmp
addr16
popf
xlat
xchg
add
and
xchg
mov
and
shrd
daa
jmp
xor
inc
or
neg
push
cltd
cmp
sbb
xchg
mov
adc
inc
popa
call
push
fdivl
push
fs
enter
js
je
jno
fst
and
push
or
scas
inc
push
mov
mov
cmp
jmp
sub
cmp
test
cmpb
inc
push
push
sbb
jg
fcmovnbe
jb
or
mov
adc
pop
add
or
test
sub
cmp
daa
dec
outsb
sbb
xchg
or
jo
je
sbb
jp
call
sub
cli
push
jne
push
repz
sbb
mov
adc
push
cmp
adc
mov
ficoms
mov
je
dec
lds
or
andl
js
cli
push
xchg
outsb
pusha
jmp
ret
test
adc
stos
scas
cmovnp
add
and
jnp
pop
mov
push
xor
add
loopne
and
ss
add
daa
push
xorb
in
leave
stos
xchg
or
mov
jne
adc
adc
movsl
xor
dec
enter
mov
mov
lods
sub
js
insl
cs
dec
mov
and
or
push
inc
pusha
sbb
cmp
das
lods
or
mov
sub
lcall
or
or
inc
es
inc
inc
rorl
pop
ret
jmp
daa
stc
mov
or
push
or
cmp
adc
xchg
or
xor
aam
addb
jo
in
mov
xchg
adc
and
mov
mov
clc
shll
inc
or
and
push
cmp
movsl
test
cmp
push
adc
shlb
lds
dec
rclb
mov
lea
xchg
cli
cmp
jl
mov
xchg
jecxz
push
xchg
inc
les
loope
sbb
push
mov
nop
xor
andb
rdmsr
and
clc
mov
pop
in
je
dec
adc
inc
jmp
test
hlt
ss
push
or
mov
clc
and
dec
sub
sub
jnp
inc
lods
ljmp
nop
dec
and
je
cmp
sbb
adc
xchg
xor
push
or
dec
adc
imul
jl
out
shlb
mov
ja
push
loope
adc
pop
daa
icebp
jno
jnp
sub
sub
daa
cmpsl
adc
clc
lcall
dec
sub
nop
andb
nop
int3
je
xchg
in
lock
xchg
inc
dec
pop
pop
jb
inc
int3
jmp
mov
or
jg
and
xchg
inc
popa
fsubl
imul
shll
mov
sbb
aad
hlt
fs
xchg
or
imul
or
cvtpi2ps
je
push
xor
bound
insb
jbe
inc
inc
outsb
dec
popl
imul
fs
call
sbb
xor
imul
in
mov
mov
xor
adc
push
push
xor
insl
mov
mov
add
push
or
pop
push
lods
cmp
sub
sub
aas
fs
and
jg
mov
flds
xor
fsubrs
stc
xchg
xchg
and
and
or
and
lret
xor
dec
inc
outsl
shrb
add
in
dec
adc
enter
nop
or
loop
and
mov
inc
and
xchg
or
push
hlt
rcll
jmp
mov
push
and
and
ret
sbb
andl
add
loopne
xchg
push
jns
cmp
cmp
fistpl
cmp
cltd
fidivrl
fnstenv
mov
xchg
pop
aam
les
cld
jne
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
xchg
mov
add
fiadds
sbb
pop
or
insb
mov
sub
jne
push
inc
dec
push
lahf
push
sub
pop
insb
ret
adc
in
push
loop
rcr
cmpl
jne
popf
out
and
sti
pop
pop
and
jno
cld
out
ret
dec
sbb
int
cmp
or
ja
call
mov
arpl
add
pop
sbb
inc
sbb
xor
or
add
nop
push
mov
push
nop
push
inc
xor
mov
fldl
pop
and
outsb
insl
negl
inc
sub
ds
dec
pop
sbb
jne
add
sarb
or
bound
popa
outsl
and
inc
fstpl
fisubrl
push
cmp
loope
add
push
aam
push
sub
leave
inc
mov
or
xchg
push
sub
mov
pop
add
xor
cs
sub
cmp
or
ficoms
xchg
dec
pop
movl
repnz
xchg
add
or
add
sub
xor
outsl
push
movzbl
rorl
xorb
je
or
repnz
or
aad
cmp
pusha
cmp
leave
mov
xchg
push
mov
cmpsb
ss
add
les
mov
hlt
fisttps
mov
lea
daa
ljmp
aas
lock
cmp
add
sub
push
cmp
jge
adc
sbb
inc
into
jnp
hlt
push
mov
add
fldt
dec
lds
jo
push
shll
icebp
test
mov
imul
hlt
clc
cld
xor
jae
movl
mov
push
add
add
dec
push
add
add
and
out
xor
dec
je
idiv
mov
dec
jne
mov
and
dec
or
mov
shr
sbb
loope
orl
dec
ljmp
xor
mov
hlt
and
xchg
dec
or
jo
in
cli
or
outsl
cmpsb
adc
scas
push
dec
push
jnp
je
push
add
out
loop
inc
push
aad
pop
mov
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
mov
fdivrl
xor
add
fidivrl
or
clc
xor
inc
addb
jmp
sbb
bound
lret
idiv
inc
inc
imul
mov
popa
loope
jge
mov
cmp
pop
lahf
pshufw
je
mov
add
or
cmp
mov
loopne
mov
stc
push
or
int
and
adc
push
push
lock
cmp
je
mov
pop
jbe
xor
fstpl
inc
test
jmp
daa
pop
out
js
js
pop
cmp
sarb
in
clc
jge
fists
xorl
gs
push
or
lods
dec
orl
pop
in
pop
xchg
into
testl
jle
adc
cmp
je
cmp
push
cmp
jne
inc
jne
test
mov
repnz
push
push
mov
dec
pop
daa
mov
pusha
pop
adc
inc
adc
mov
loopne
insb
sub
cmp
and
test
in
pusha
mov
pop
sub
and
aas
shlb
cmp
jne
mov
adc
imul
push
inc
mov
push
xor
fadds
add
xor
popa
imul
xor
cmp
test
leave
sub
jmp
and
push
jmp
push
pop
outsb
outsb
inc
jl
inc
jg
aaa
jp
add
xchg
mov
std
shl
dec
mov
sub
mov
mov
and
jg
std
push
pop
les
outsl
adc
test
or
dec
xchg
and
dec
jp
jl
jecxz
mov
pop
adc
sbb
and
xor
js
xchg
mov
pushl
ja
inc
xchg
incl
xor
pusha
mov
jg
pop
xlat
je
aas
imul
mov
or
sbb
add
addr16
mov
cmpb
sub
rorb
mov
and
mov
xor
push
jge
push
pop
das
movsb
add
xor
xor
fsubs
inc
cmpb
mov
dec
pop
push
mov
pusha
xor
call
adc
add
jmp
xor
dec
add
adc
xchg
dec
fs
push
dec
cmpsb
mov
cmp
inc
mov
pop
cmovbe
std
ret
adc
cmp
cmp
mov
push
inc
xor
lods
loopne
dec
push
movsl
mov
or
add
je
and
roll
mov
clc
test
or
mov
push
clc
mov
fisubrs
mov
add
jne
mov
mov
addl
xchg
cltd
bound
inc
mov
add
mov
push
pop
adc
test
je
xor
leave
mov
dec
gs
rcll
dec
or
test
mov
xor
xchg
lock
dec
jg
jno
push
jne
cmp
mov
add
mov
cmpsb
dec
sbb
rcl
inc
mov
jmp
aam
dec
lock
xor
testb
das
adc
fs
dec
dec
fucomip
push
lock
sub
jge
jne
and
and
dec
imul
pop
push
add
roll
lret
add
add
movsl
mov
lret
jo
inc
inc
fsubs
pop
cwtl
mov
xchg
push
adc
xchg
adcb
addr16
add
ficoml
dec
lea
int3
rclb
das
in
inc
cmp
jne
dec
cmc
fildl
mov
sbb
outsl
dec
data16
icebp
jmp
push
rolb
push
aaa
push
or
or
xor
aam
dec
repnz
sbb
inc
bound
xchg
shl
adc
imul
or
xchg
pop
adc
xor
mov
sub
or
mov
xlat
xchg
inc
inc
push
fisttps
movb
xchg
js
xor
pop
dec
mov
inc
and
dec
inc
incl
cmp
pop
loopne
aam
cmp
popf
or
jle
fisubrs
adc
inc
fistpl
shlb
and
mov
lods
push
pop
or
xor
pop
stc
cmp
enter
inc
nop
faddl
test
out
cmp
js
cmp
xor
xor
mov
roll
mov
pop
or
je
and
sbb
mov
xchg
imul
and
enter
or
movb
jbe
xchg
and
loopne
and
jns
mov
add
cmpb
jne
leave
or
pop
fincstp
negl
dec
loop
int3
dec
inc
into
adc
sbb
sub
int3
shrb
xor
xchg
jne
clc
add
and
repnz
or
add
lods
xor
dec
movsb
or
shll
dec
data16
adc
mov
movsb
push
cmp
aam
xchg
dec
jmp
push
jb
rol
push
clc
jmp
add
or
in
adc
inc
add
adc
nop
jno
sub
cmp
js
add
xor
push
jg
repnz
test
add
fildl
rcrl
adc
add
mov
xor
stos
test
mov
in
mov
add
mov
dec
and
dec
sbb
jne
movsl
xchg
and
les
jp
cs
sub
jae
adc
push
adc
or
popf
inc
insb
je,pt
faddl
sbb
ret
pop
outsl
pop
add
scas
jmp
addb
addl
push
sbb
lcall
push
pop
popf
je
frstor
push
cmp
pop
mov
mov
push
xor
push
add
and
clc
add
arpl
inc
stos
push
addb
adc
adcb
ss
fistpl
loopne
jnp
jo
push
testl
push
push
cmp
xchg
in
rclb
or
push
push
mov
loopne
xchg
and
cmp
sub
inc
testl
xchg
loop
call
push
sub
pop
sbb
addr16
or
loop
in
jmp
mov
mov
loope
lods
add
mov
mov
inc
fucomp
cltd
sbb
jge
insl
test
leave
stos
push
mov
cmpsl
lret
loope
adc
push
movsl
fsubrs
test
jae
cmp
xor
negb
adc
xor
imul
pop
sub
aad
sbb
mov
sti
fnstenv
lea
sbb
test
push
push
outsb
aaa
lock
add
push
sbb
pushf
hlt
sub
or
pop
mov
lret
ficoms
daa
jmp
adc
mov
push
or
mov
or
add
and
sti
dec
and
inc
je
dec
adc
push
out
inc
addr16
enter
in
shrb
jmp
cmpsb
and
cmpb
mov
test
xchg
fsubrl
adcl
jg
pop
mov
mov
sub
dec
sbb
in
pusha
rorb
es
js
mov
rolb
cs
push
cmp
or
jnp
mov
push
filds
or
inc
or
adc
je
and
xchg
jo
mov
inc
shlb
jmp
add
sub
or
pop
dec
adc
add
shlb
iret
cmp
leave
push
test
push
adc
aaa
adc
add
stc
cmp
push
stc
in
fsts
jnp
xchg
mov
add
and
adc
ret
sbb
xor
jle
sbb
cmp
clc
adc
dec
sbb
data16
jo
out
sbb
mov
into
je
mov
lret
ja
jmp
jno
call
sub
jmp
sbb
sbb
cmpsl
cs
jo
adc
rorb
push
fs
insl
cli
movsl
push
sbb
lcall
ss
pop
fdivl
or
push
dec
pop
js
rorb
mov
je
inc
xchg
mov
add
outsl
cmp
pop
push
loopne
mov
jle
dec
inc
sbb
arpl
cmc
in
fnsave
dec
sbb
cmc
jno
or
cmp
xor
fists
dec
movsl
ljmp
bound
fwait
xor
jno
push
dec
mov
jecxz
sbb
and
add
and
shrl
xor
push
or
cwtl
mov
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
sub
daa
scas
lea
rolb
jns
in
sub
fcom
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
add
push
push
and
push
inc
add
dec
mov
pushf
subl
xchg
sbb
rclb
stos
pop
aaa
cltd
or
add
imul
aaa
movsb
jb
loopne
xchg
movsb
push
out
mov
test
rorb
cmp
adcb
gs
popf
cwtl
rolb
nop
lock
mov
cmp
sbb
adc
and
dec
loop
jbe
lcall
loopne
or
bound
jmp
clc
xchg
dec
ret
mov
pop
in
push
adc
sub
daa
pop
cmpsb
dec
jb
inc
ja
add
test
and
enter
add
addb
pop
js
pop
pop
push
lock
or
ss
leave
jno
shlb
inc
xor
or
cmpl
sarl
test
mov
jo
loopne
in
aam
loope
rcll
out
pop
dec
add
mov
inc
fmuls
pop
pusha
shlb
cltd
or
loopne
sbb
call
jns
fadds
les
rcrl
pop
js
and
fwait
icebp
jg
push
pop
jo
arpl
dec
or
xor
testl
mov
lret
sti
add
in
inc
push
out
fsubl
mov
inc
push
xor
push
pop
lahf
mov
and
jle
movsb
icebp
push
jnp
xor
jg
jo
xchg
add
sub
fwait
mov
shrb
cmp
shlb
jmp
mov
dec
roll
outsl
mov
jmp
xchg
push
sub
imul
adc
cmp
pusha
in
xchg
xchg
cmpsb
or
data16
out
and
adc
imul
or
pop
push
ret
sbb
mov
mov
daa
pushf
pusha
xchg
inc
enter
cmp
pop
sbb
mov
push
and
or
fmuls
adc
test
fistl
push
rol
xor
dec
gs
das
clc
inc
xor
jmp
rorb
adc
or
add
aad
adc
pusha
add
sbb
push
sub
cwtl
dec
push
cmp
je
ret
ljmp
add
out
sub
decl
adc
mov
movl
pop
jo
add
ffreep
or
or
mov
popf
sub
jp
cmp
int
inc
dec
enter
mov
ja
sbb
and
push
dec
sbb
jo
sbb
sub
dec
sbb
pop
cld
or
or
push
dec
sub
subl
sub
xor
push
ja
sub
push
and
hlt
push
es
sub
out
jbe
push
inc
mov
sbb
loope
xchg
jo
mov
ds
mov
ja
add
pop
popa
push
je
pusha
sbb
and
mov
ss
xchg
dec
aam
test
aam
jne
fcoml
sbb
cmp
in
sub
mov
sbb
push
jae
cmp
jmp
push
ljmp
add
pop
insb
pusha
int3
pop
inc
push
loop
inc
mov
xchg
xchg
ss
xlat
rcll
mov
dec
sbb
sbb
mov
add
mov
test
inc
in
jmp
dec
sbb
push
sub
aad
dec
aam
sbb
adc
or
mov
sub
xchg
push
add
adc
adc
fincstp
mov
inc
insb
or
sbb
in
pop
and
test
xor
cmp
adc
pusha
pushf
test
add
sub
aas
lds
sub
loopne
call
push
jno
arpl
mov
es
pop
mov
mov
loopne
cmp
mov
or
mov
repz
push
adc
cs
sbb
rclb
outsl
dec
incl
pop
lea
stos
mov
xor
sub
out
xchg
jp
in
jae
cmp
pop
mov
jmp
dec
stos
aaa
xchg
fs
push
flds
jb
outsl
and
nop
aaa
xchg
sbb
mov
shl
jg
dec
lds
ret
rep
adc
data16
sbb
xchg
and
sbb
in
or
adc
daa
mov
jmp
pop
and
push
pop
add
cmp
fwait
scas
sub
mov
stos
pop
jg
sub
mov
push
imul
adc
test
or
cmp
mov
outsl
xor
jb
fs
jg
sarb
push
or
adc
dec
jnp
imul
ret
mov
mov
push
jp
mov
add
sbb
lods
adc
orb
jmp
add
inc
sarl
inc
mov
movsl
sub
mov
adc
push
subl
incb
rorb
sbb
ljmp
pop
cmpsb
xchg
mov
jmp
pop
lock
neg
push
add
push
loopne
cmpl
pop
add
xchg
add
mov
jg
gs
negl
adc
xchg
into
add
or
mov
imul
call
rorb
cli
aad
xchg
ret
sbb
mov
adc
and
jo
cmc
out
and
mov
xchg
int
push
cmp
sbb
adc
test
in
jbe
add
dec
andb
cmpsl
rolb
add
pop
loopne
and
and
jg
mov
aas
xor
or
sbb
add
push
xchg
push
xchg
lcall
or
dec
add
stc
pop
add
cmp
inc
and
test
cmp
ret
and
mov
scas
xchg
insb
call
rcll
data16
inc
cmp
sbb
adcl
call
fs
mov
cmc
jb
ljmp
aam
clc
imull
stos
loope
or
mov
or
sbb
clc
dec
call
push
jae
push
cmp
loope
call
pshufw
or
sub
ja
sub
push
xor
ss
jne
sub
push
sub
orl
ss
ret
les
dec
ljmp
mov
enter
adc
je,pt
sar
adcb
xor
loope
mov
stc
jnp
or
outsl
inc
jp
push
mov
sbb
int
xor
bound
jecxz
push
jg
ret
pop
mov
rclb
aam
cltd
loope
out
inc
lret
adc
popa
cld
inc
sub
mov
out
shr
sub
movsb
mov
cmpsb
adc
sub
inc
pop
rorb
lret
xor
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
sub
or
mov
es
add
inc
push
rcrl
adc
cmp
jbe
push
adcb
add
sar
loop
push
lods
push
rclb
push
and
jecxz
pop
ret
add
adc
or
or
cmp
cltd
nop
dec
lock
pop
inc
daa
mov
pop
pop
or
push
imul
pop
mov
vshufpd
cmc
sub
mov
jmp
push
add
adc
js
xchg
xchg
xor
dec
jo
mov
js
daa
jmp
dec
xor
rorb
imul
sub
mov
jo
ljmp
add
and
loope
fcompl
cmp
add
dec
stos
push
pop
pop
mov
mov
add
inc
test
mov
data16
sub
loope
push
inc
or
sub
add
or
insb
shll
or
dec
shll
mov
push
push
call
push
mov
mov
lahf
enter
pop
sarl
lret
jne
mov
jl
lret
sub
cmp
in
fcomi
jmp
pusha
jle
push
xor
pop
div
add
jb
lea
sbb
ljmp
xchg
jmp
lods
push
sbb
xorl
mov
pushf
push
adc
cmp
lret
sbb
adc
sub
xor
in
jmp
xorb
js
xchg
xor
sub
sbb
or
jle
fsubl
andl
gs
into
mov
in
sub
mov
rclb
call
add
push
je
pop
bound
jmp
lahf
rcl
je
icebp
cmp
push
shrl
jbe
je
adc
sub
sub
jne
bound
jne
adcl
orb
adc
mov
das
pushf
fidivrl
clc
int3
add
sub
mov
jnp
imul
add
xchg
loopne
dec
xor
ljmp
mov
neg
and
je
sub
mov
mov
sarl
mov
or
rorl
lret
or
add
stos
mov
dec
ljmp
ret
or
imul
iret
and
inc
add
shrb
xchg
call
insb
mov
test
pushf
mov
push
or
dec
add
icebp
lods
sbb
and
xor
push
sub
adc
xor
xor
jle
or
add
cmp
or
pop
push
pop
and
mov
and
psubusw
xor
and
inc
dec
xorb
jg
fs
jno
add
movd
movapd
mov
fldt
enter
shlb
jle
xor
and
lcall
xchg
decl
int
lods
pop
bnd
repz
or
jg
jmp
push
pminsw
adc
jnp
mov
call
aam
ret
or
notb
sbb
mov
add
mov
jbe
and
pop
mov
int
sub
fcmovb
sbb
dec
pop
ja
adc
mov
pushf
push
mov
leave
iret
into
loopne,pt
and
orb
jg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
push
dec
lods
mov
lcall
xchg
rol
std
add
cwtl
cmp
and
movsl
or
rorl
and
ficoml
dec
pusha
mov
ficoml
sub
sahf
add
outsl
or
jg
jb
push
data16
pop
inc
mov
push
sub
add
dec
pop
shrb
out
clc
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
addb
add
mov
inc
inc
into
xchg
and
loope
adc
or
lret
fmuls
cmpl
daa
cwtl
ljmp
cmpsl
arpl
test
in
scas
sbb
add
into
clc
jmp
mov
sbb
mov
cltd
loope
lea
data16
or
dec
xor
or
incl
xor
inc
mov
sbb
decl
mov
wbinvd
loop
and
cwtl
sbb
mov
adc
aaa
enter
xchg
lahf
nop
dec
bound
lock
roll
sub
jecxz
imul
jns
and
inc
pop
subb
sub
mov
inc
push
jne
pusha
cmpsb
addr16
pop
dec
pop
bound
dec
push
sbb
aaa
iret
adc
or
movb
xchg
lcall
sbb
sbb
cwtl
mov
xchg
sbb
push
mov
adc
cmp
enter
enter
rolb
push
shlb
cmpl
mov
mov
movsb
jnp
je
jp
xchg
xor
rep
xchg
xor
daa
add
dec
loop
repnz
cmp
or
and
call
jecxz
add
jne
out
incl
and
out
push
mov
icebp
fidivrs
pop
mov
or
fwait
out
hlt
push
test
add
inc
mov
sbb
push
cltd
hlt
jp
adc
or
xchg
repnz
or
int3
sbb
xchg
mov
jmp
cmp
aaa
mov
cld
inc
push
cmp
arpl
orl
push
push
out
in
dec
jg
push
imul
add
lock
fadd
lods
inc
sub
xchg
cmp
adc
in
inc
jb
or
push
cmpsb
mov
adc
pop
mov
mov
jp
add
data16
aas
movsw
jbe
mov
add
jbe
aaa
inc
je
pop
movsl
sti
mov
adc
add
je
jae
jo
rcrb
add
xchg
ret
mov
test
inc
mov
pop
mov
cmc
add
or
pop
shr
arpl
outsb
test
pop
loop
icebp
mov
out
rolb
rorl
xchg
subl
shlb
test
lret
jle
addl
insl
jno
repnz
pusha
movsb
pop
inc
inc
push
lods
or
dec
mov
adc
jne
insl
lock
lock
aad
jo
hlt
fwait
mov
cmp
jg
or
testb
je
mov
pop
clc
inc
mov
cmp
xor
es
loope
daa
pop
lock
lret
jne
dec
jmp
shl
mov
xor
and
lds
mov
push
loope
push
lds
ja
imul
cltd
or
adc
pop
je
push
fistpll
sbb
sub
jecxz
fdivrl
stos
jno
test
cmp
pushf
xchg
mov
mov
repz
mov
cmp
pop
and
or
fmull
pop
jne
mov
adc
out
test
ret
stc
or
rep
jmp
ss
mov
mov
mov
jb
push
add
test
int
add
lea
nop
or
mov
fs
sub
push
in
sub
inc
add
add
lahf
cltd
dec
mov
push
jmp
add
lret
push
nop
inc
xor
xchg
repz
dec
mov
push
aam
int3
push
cmp
les
mov
mov
cmp
in
call
iret
repz
hlt
hlt
clc
clc
pop
adc
mov
andl
lock
sbb
jmp
repz
clc
mov
nop
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
pop
and
pop
ss
out
ds
ds
xchg
mov
stc
sub
pop
pop
nop
push
mov
mov
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
cmpsb
rcr
push
mov
inc
repz
repz
dec
push
pop
pusha
push
jo
ss
sbb
repz
sbb
adc
or
iret
repz
or
add
out
xchg
movsb
dec
inc
sbb
add
sub
mov
outsb
shlb
enter
enter
add
paddsw
test
sub
imul
loopne
cwtl
or
ljmp
imul
pop
lds
pop
and
adc
repz
fists
adc
dec
sar
dec
scas
mov
dec
cwtl
dec
pusha
sbb
je
inc
xor
mov
lea
push
mov
dec
sbb
testl
es
clc
and
jo
push
lea
fistpl
and
mov
xchg
cmp
test
jmp
mov
popa
inc
les
int
adc
push
pop
mov
movsb
test
jo
imul
dec
add
mov
or
je
mov
fadds
pop
sub
ret
jb
jmp
inc
xchg
and
and
mov
insl
or
jne
sub
sbb
enter
adc
lock
or
jle
ret
lcall
hlt
fisttpl
dec
push
jbe
sub
das
mov
xchg
cmp
pushf
mov
cmp
mov
lea
cmp
cld
lret
sub
jnp
or
cmp
jne
push
adc
or
ja
imul
jne
pop
es
cmp
ficomps
add
andl
mov
in
jne
ds
repnz
pop
cmpsb
clc
mov
xor
cld
add
mov
mov
aam
xchg
popa
psraw
mov
loope
faddl
rolb
mov
scas
rolb
mov
or
loopne
faddl
ror
and
xor
pop
adc
loop
cs
shrb
inc
outsl
pop
and
les
scas
jns
push
addb
dec
jns
jge
pop
adc
xorb
mov
dec
lds
and
xor
mov
andl
cmp
ret
add
push
shll
sub
add
mov
push
sub
sbb
jne
popf
inc
fdivrl
orl
jmp
adc
or
push
push
and
cmp
xchg
fistl
cmp
cltd
mov
pop
add
aas
push
adc
inc
cwtl
add
xor
movsl
jbe
cmpsb
xlat
adc
ljmp
jne
into
mov
or
jl
and
pop
roll
aaa
push
or
sub
ljmp
mov
adc
jmp
push
sub
loopne
dec
inc
movsl
sub
ss
xchg
fs
or
popf
icebp
ds
je
or
je
std
xor
adc
gs
add
cs
mov
pop
sbb
add
or
test
push
fcoms
sub
fldt
sub
ja
pop
jbe
lea
adc
sbb
sub
jp
sahf
roll
and
leave
push
sbb
pusha
adc
dec
iret
int
push
clc
jbe
add
and
adc
out
fs
adc
jns
pop
or
or
cmp
pop
lods
xchg
jmp
push
add
sbb
sbbb
add
xorl
mov
int
lret
push
jle
mov
cmc
je
andl
cmpsb
inc
inc
push
mov
mov
negl
push
aam
test
out
inc
and
inc
rcrb
roll
and
push
add
push
xor
cld
cmc
sub
mov
inc
pop
cltd
and
dec
loopne
cmp
cmpl
add
loopne
push
or
roll
dec
push
outsl
xchg
or
or
cli
xchg
or
dec
pop
mov
inc
dec
push
rolb
push
test
or
repz
loopne
ret
add
sbb
lods
cmp
das
pop
aaa
or
add
shlb
dec
ret
out
dec
repnz
dec
scas
jmp
inc
cmp
xchg
push
adc
push
push
lret
rcrl
add
sub
sbb
int3
dec
push
xchg
call
mov
inc
repnz
and
mov
inc
cld
verr
dec
jne
jmp
mov
adc
pop
repnz
dec
and
sbb
dec
jne
mov
mov
adc
sahf
xchg
cwtl
push
xor
outsb
mov
inc
imul
aam
mov
sub
add
xchg
pusha
mov
push
rorb
adc
cld
outsb
into
add
std
push
lret
push
in
cmp
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
dec
inc
insb
out
aam
orl
push
or
and
mov
dec
jno
lahf
xlat
or
adc
jmp
std
cmp
adc
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
es
push
push
out
cmpsl
sub
xchg
stos
push
test
fdiv
mov
push
and
sbb
cmpsl
mov
mov
daa
mov
xchg
cmp
sub
outsb
adc
and
stos
repz
xor
add
pop
inc
add
mov
lock
sub
enter
xor
add
sub
adc
nop
or
pushf
dec
jg
pop
xor
xor
or
and
pcmpgtb
fs
pop
dec
jge
int
es
fs
insl
push
sbbb
jo
sbb
cmp
test
sbbl
jo
add
loope
pop
or
add
dec
lods
je
xor
rclb
shll
add
xlat
xchg
add
jne
fmuls
cli
das
add
add
add
and
dec
dec
mov
pop
subl
pop
call
push
push
or
adc
imul
mov
divb
out
scas
and
pop
dec
pusha
jle
adc
aas
add
add
lea
mov
and
xlat
mov
xchg
je
xlat
mov
or
addl
xorb
clc
pop
nop
sbb
push
pop
pop
or
push
sbb
leave
adc
xchg
cmp
call
mov
adc
and
push
xchg
push
and
add
jne
inc
xor
mov
push
inc
sbb
sbb
rol
sub
push
push
hlt
mov
xor
add
es
fisubs
arpl
push
fimull
pop
pop
mov
or
adc
sbb
lea
dec
add
add
push
xor
aam
fmuls
cs
sti
jge
not
and
sub
add
and
adc
push
sti
scas
xchg
jl
push
fimuls
and
mov
pop
mov
adc
sub
int3
cwtl
mov
ja
jne
lcall
push
lcall
xchg
jmp
add
cmp
ja
mov
xchg
clc
mov
mov
lea
neg
mov
sbb
clc
neg
inc
cli
or
add
jmp
or
mov
inc
inc
push
int
cmp
sbb
scas
clc
fwait
jmp
mov
add
mov
inc
cmp
jb
sbb
fsubrs
shll
stos
addb
dec
idivl
dec
pop
ret
xchg
cs
and
add
or
fdivs
lods
add
add
jge
add
push
sub
or
or
shl
push
adc
push
imul
stc
add
imul
iret
xor
jo
and
stos
jne
and
cmpb
adc
mov
adc
test
inc
cld
clc
push
push
outsb
ss
inc
test
and
add
repz
push
aam
xchg
pop
addr16
inc
mov
xor
inc
sbb
loop
cmp
bound
adc
add
out
xor
bound
test
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
xlat
mov
cld
rclb
pop
dec
or
mov
flds
xchg
sub
loop
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
lret
sbbb
or
mov
adc
fimull
into
cmp
movsl
lret
adc
lock
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
dec
mov
and
je
lret
or
or
xor
xor
sbb
test
and
push
addl
test
aam
add
or
jp
push
jbe
push
add
xor
sbb
and
movsb
inc
xchg
or
fcmovnbe
push
push
push
add
loopne
std
mov
sbb
push
sub
jecxz
xchg
sbb
push
sbb
add
or
or
xchg
sub
mov
inc
loopne
mov
mov
les
push
insb
dec
lcall
push
sub
inc
mov
push
lcall
xor
jne
mov
pop
ret
or
mov
inc
sbb
jne
fs
add
adc
sbbb
roll
add
xchg
add
aas
inc
inc
sbb
push
push
or
adc
xlat
lds
push
adc
arpl
push
inc
adc
inc
imul
orl
cmp
popf
loopne
pusha
cmpsb
sbb
dec
or
or
push
mov
sbb
adc
shrl
pop
xor
daa
inc
pushf
adc
sub
add
cwtl
sbb
inc
inc
mov
loopne
jno
sub
or
int
nop
je
inc
or
icebp
lea
push
adc
or
ja
aaa
xchg
adc
add
push
pop
cmp
push
clc
sahf
movsb
cmp
bound
inc
cmp
or
mov
fnstcw
les
test
adc
mov
jne
or
push
xor
jno
add
or
mov
jmp
rorl
gs
jnp
or
mov
or
mov
stos
add
es
in
mov
sbb
testb
add
call
cwtl
cmc
add
data16
outsl
adc
mov
pop
fimull
shrb
mov
sbb
inc
insb
or
xchg
jo
jp
int3
clc
dec
test
pop
inc
hlt
adc
lea
push
push
inc
jecxz
or
xor
sub
mov
jmp
in
ret
add
adc
sub
mov
mov
inc
leave
test
sar
add
xchg
jmp
test
stos
lock
mov
rcrb
cwtl
add
fistpll
rcll
or
or
aad
and
push
into
and
jmp
xor
adc
loop
or
scas
jne
sbb
out
mov
hlt
push
fisubrl
jne
ja
rdpmc
mov
cmc
inc
pusha
aas
xor
test
subb
adc
stos
rcrl
dec
lea
jp
cld
push
push
jge
xor
pusha
out
gs
fsubr
or
rol
sub
in
inc
int
inc
pusha
mov
add
dec
cmp
mov
sbb
pop
aam
push
insb
push
mov
xchg
add
add
cmp
movsl
test
out
insl
mov
mov
jbe
dec
cltd
pop
idiv
lea
adc
decl
mov
add
cli
mov
ja
pop
sub
popa
lcall
xor
rol
addl
js
adc
inc
sub
ficoml
subb
dec
mov
mov
pop
push
movsl
adc
mov
xchg
push
bound
mov
fwait
jae
or
add
jecxz
jmp
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
cmp
test
testb
ja
push
loopne
mov
lock
rolb
and
dec
push
stos
inc
fcoms
fists
pop
mov
insb
and
ret
in
mov
adc
and
lods
add
addl
rcl
add
or
jg
pusha
cmpsb
in
xor
pushf
push
push
or
adc
mov
faddl
xor
adc
clc
fs
lods
popf
jmp
daa
adc
mov
adc
or
imul
sti
xchg
push
push
or
push
movsl
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
pop
insb
push
or
addr16
fisubrs
sbb
add
jmp
call
hlt
push
and
push
jmp
add
sub
pop
push
push
les
lea
test
push
cmpsl
pop
sbb
push
add
sub
arpl
inc
xchg
roll
add
insb
movsbl
push
jne
mov
addr16
add
dec
jo
xchg
or
xchg
inc
mov
xchg
dec
jne
pop
cltd
push
repnz
dec
repz
xchg
test
je
dec
mov
and
cmovp
lret
enter
pop
jns
pop
in
imul
lods
mov
sub
subb
add
push
iret
or
js
in
movsl
lds
leave
add
ja
pop
push
mov
out
pop
rorb
add
dec
pop
movsl
pop
aas
push
or
in
push
jmp
sub
dec
mov
pop
sbb
pop
cmc
loopne
dec
mov
fsubrs
dec
scas
add
cmp
aad
imul
and
andb
xlat
mov
jmp
cmp
jae
push
sbb
sub
adc
sbb
add
and
add
loope
sub
mov
loop
push
push
pop
lcall
add
add
sub
dec
sbb
add
insb
iret
sub
mov
call
fsubrl
push
jl
sub
sub
je
or
dec
sbb
pop
xor
sbb
shl
jns
movb
clc
mov
sub
mov
adc
xchg
imul
pusha
ss
cli
or
lea
stc
mov
and
dec
pop
push
sbb
and
movsl
jo
addr16
or
push
pop
int
xor
decl
das
pop
pushl
mov
lock
sub
sub
push
shll
push
pop
pop
outsb
outsb
jmp
scas
push
pop
sub
dec
add
imul
or
push
push
dec
test
sub
jmp
inc
sbb
imul
cmp
lret
push
rcr
or
dec
sbb
push
inc
lods
push
sub
daa
movsl
stos
sbb
xlat
out
mov
sub
cmp
lahf
push
and
sarl
sarl
inc
push
mov
mov
sti
pop
push
push
inc
cmp
pop
pop
fsts
stc
xchg
clc
mov
mov
stc
mov
push
lock
cmc
mov
fs
xchg
cmpsb
bound
insl
inc
sub
je
sub
pop
adc
cmp
adc
shlb
out
add
lock
push
mov
inc
mov
jmp
jnp
pop
cli
dec
or
mov
inc
mov
pop
inc
loopne
mov
jno
adc
pusha
push
clc
sbb
xlat
mov
xlat
je
xor
add
jbe
jbe
add
and
insl
push
mov
int3
scas
cmp
sets
push
insl
gs
arpl
int
push
pop
xchg
and
jg
fldl
add
aam
inc
movapd
pop
popa
imul
mov
lret
inc
jo
imul
add
push
test
pushf
aad
sbb
rorb
fcom
pop
lea
jge
orb
call
call
les
jb
inc
cs
subl
mov
enter
rol
pop
es
push
insb
fbld
jmp
inc
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
pushf
add
sbb
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
push
xchg
mov
and
push
ret
cmp
sbbb
mov
in
call
and
addb
push
cmp
mov
ja
push
push
adcb
sahf
lcall
add
cmp
stc
and
dec
insb
sub
jmp
jmp
adcb
sub
and
inc
add
push
jo
js
inc
mov
pop
mov
mov
scas
sub
in
pop
enter
or
mov
lods
mov
ret
inc
dec
call
cmpsl
dec
inc
pop
mov
pop
and
lock
test
lea
jmp
pop
mov
dec
pop
cmp
sub
leave
cmp
sbb
repnz
jle
mov
std
or
fcmovbe
clc
ja
adcb
jnp
adc
loopne
rcll
inc
xor
into
je
fstpt
pop
jne
mov
or
mov
loopne
adc
enter
add
stos
fcoms
dec
push
popa
xchg
iret
xchg
or
aad
dec
lret
jb
and
sub
mov
push
mov
ds
sub
mov
and
dec
leave
push
call
out
inc
leave
arpl
in
je
gs
out
in
lret
adcb
push
rcrb
loop
mov
decl
mov
or
push
push
sahf
out
sahf
dec
inc
cmp
sub
ud2
loopne
lcall
decl
push
mov
jmp
mov
sbb
data16
push
and
inc
insb
pushl
call
mov
mov
mov
cmp
repz
fsub
call
lock
add
iret
repz
ret
inc
sahf
sbb
and
dec
mov
jo
lcall
mov
sub
push
lds
test
adc
pop
mov
mov
adc
cmp
dec
push
dec
push
add
sti
sti
xor
or
je
mov
inc
ret
js
xlat
sbb
inc
or
jne
inc
mov
test
jle
xorl
cli
add
bound
add
fildll
sub
pusha
jmp
push
mov
jne
push
pusha
adc
push
stc
lret
enter
push
loopne
lea
inc
and
cmp
fsubrs
jne
out
jle
add
arpl
movsl
popf
pop
movsl
xchg
mov
nop
inc
or
jne
outsb
cmp
pop
popf
push
stos
rcll
mov
or
jmp
test
cmp
fldenv
push
sbb
jecxz
jns
cmpb
dec
inc
mov
sbb
pop
add
or
icebp
loopne
mov
pop
xchg
push
push
add
add
inc
xchg
js
jns
icebp
inc
push
dec
push
pop
ret
add
aam
push
rcll
pushf
test
test
andl
inc
loopne
inc
push
std
call
cmp
rcrl
dec
inc
inc
or
and
movsl
cmp
sbb
xor
out
ja
lds
xor
enter
mov
and
mov
insb
mov
andb
add
pop
std
movb
je
sbb
adc
cld
addb
mov
adc
push
push
dec
or
sub
je
jo
push
mov
push
clc
mov
or
dec
stc
add
fmuls
or
inc
cwtl
or
adc
loope
dec
and
and
sub
inc
test
orb
out
mov
std
std
imul
xor
jne
mov
push
stc
imul
mov
movsl
jge
test
add
inc
push
mov
sete
arpl
sarb
mov
ljmp
adc
add
test
fs
ret
adc
mov
mov
in
pop
lock
inc
xor
int3
xor
out
push
inc
jbe
push
mov
cmp
loope
add
sub
sti
sbb
movsl
xchg
data16
cmpb
mov
mov
pop
push
xor
inc
gs
and
fcoml
gs
aam
sarb
das
das
mov
popf
enter
rol
cmp
lods
mov
mov
divl
fbld
aam
aaa
dec
cld
xor
inc
cmp
aaa
xor
adc
and
in
sbb
clc
jno
sub
orl
fmull
add
scas
jmp
mov
xchg
push
inc
in
jo
mov
cs
mov
call
push
sub
jno
add
add
mov
rcr
call
dec
xchg
in
adc
add
adc
sbb
test
add
or
test
fimuls
and
adc
enter
rclb
lret
rcrb
daa
jge
xlat
lcall
cltd
adc
jbe
push
std
movsb
sub
fisubrs
push
jecxz
test
inc
pusha
lcall
xor
sbb
add
pop
divl
jmp
ja
add
sahf
mov
jp
sub
dec
push
stos
and
sbb
shrb
call
cmp
jp
jns
mov
pusha
pop
sahf
stc
rcrl
mov
arpl
jo
push
push
pop
fcmovne
mov
adc
and
inc
fmuls
jmp
adc
push
mov
cmp
adc
or
push
push
xchg
mov
inc
js
in
bound
subl
rol
xor
sub
mov
mov
iret
mov
push
push
cmp
push
sub
iret
das
nop
mov
and
je
pop
push
pop
push
fistps
mov
xchg
lret
gs
or
mov
hlt
fdivrs
rcrb
popf
jne
sub
cmpsl
mov
xchg
mov
shrb
xor
aas
sub
movsl
xchg
call
loopne
cmp
jg
dec
pop
mov
stos
pop
add
cmpl
cs
mov
lea
push
pop
ja
orl
dec
loopne
jg
add
sbb
sar
pop
fsubl
sbb
es
adc
addb
add
mov
fsubr
shll
les
lret
lods
push
mov
dec
or
je
or
inc
mov
scas
mov
into
inc
pushf
pop
or
add
sub
andl
addr16
adc
jg
pop
xor
sub
mov
mov
mov
scas
mov
imul
in
lea
ja
mov
mov
movsl
mov
mov
arpl
sbb
hlt
hlt
stc
int3
add
int
je
or
inc
insb
add
test
in
mov
loope
insb
jo
lods
js
pusha
sub
fcmovne
in
ficoml
pop
and
js
add
or
jge
je
inc
fiaddl
xor
fdivr
inc
fs
cmp
sbb
imul
out
and
pop
std
xor
movsl
adc
mov
add
mov
test
or
cmp
bndldx
andl
mov
sbb
sbb
sub
adc
or
mov
ds
mov
mov
inc
movsb
insb
cmp
sub
lock
cmp
mov
push
arpl
idivl
insb
arpl
sub
pusha
dec
mov
jae
aaa
jne
das
mov
lock
mov
push
sbbl
and
in
push
test
sub
adc
xchg
push
daa
clc
dec
mov
mov
ror
sbb
mov
jge
adc
push
stos
mov
adc
add
push
insl
cmp
cmp
lahf
jl
xor
xorb
decb
jmp
pushf
sub
shl
scas
adcl
dec
mov
xor
ss
cmp
mov
adc
ret
add
xor
mov
aad
fwait
inc
and
les
outsb
dec
out
cmc
lods
maskmovq
jg
aas
jmp
mov
inc
lods
cmpsb
sete
xlat
mov
mov
dec
imul
dec
push
jl
lock
stos
mov
je
inc
lods
je
repnz
jp
sbb
out
dec
mov
jo
or
gs
xor
or
jmp
inc
pusha
je
or
sub
cmpsb
ss
popa
xor
subb
mov
pusha
aaa
gs
push
imul
xchg
add
sub
adc
je
mov
or
jo
popf
mov
test
stos
jb
lods
cmp
scas
aaa
inc
mov
dec
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
push
js
or
fadds
push
adc
adc
rclb
push
insb
push
mov
aam
testb
and
xorl
icebp
outsb
and
sbb
xchg
sub
inc
sbb
mov
push
pop
enter
enter
and
imulb
popf
push
push
push
test
data16
call
cwtl
or
cmpb
jne
xor
and
rcl
stos
push
xor
js
sub
and
jae
pusha
cld
mov
adc
jo
inc
cmp
add
sahf
add
adc
mov
hlt
or
xor
jecxz
mov
jbe
mov
stos
lea
adc
sub
ret
sahf
or
cwtl
or
add
rorl
add
jl
sub
sbb
adc
add
fidivrl
and
pop
sbb
sub
sbb
clc
xor
mov
test
inc
dec
mov
or
and
mov
jbe
sbb
dec
test
pop
add
sbbl
bound
iret
dec
add
movsl
clc
repnz
cmp
dec
jmp
sub
sub
movb
mov
aam
adc
pop
xor
lods
fcomp
dec
shlb
sbb
movb
inc
jmp
movsb
xor
or
jmp
dec
loopne
sysret
pusha
xor
repnz
roll
ret
jge
push
lcall
int3
adc
push
outsl
add
sub
pop
aam
sub
inc
sub
sub
cmpsb
jo
data16
decl
and
pop
sti
in
jle
cmp
cmpb
xor
add
rolb
and
mov
sub
loope
pop
dec
outsb
movsl
test
and
adc
xor
shlb
pop
inc
aam
adc
movzbl
sub
aam
data16
adc
mov
adc
lret
xor
sub
pop
jecxz
add
lcall
popf
sub
fsubr
push
pop
int
fchs
pushf
cwtl
andb
inc
and
outsb
rorb
xor
sub
xor
mov
movsl
daa
pop
mov
mov
push
push
cli
movsb
addl
outsl
loope
into
sbb
jge
mov
xor
add
daa
ret
jb
push
jns
iret
mov
jo
insb
leave
jno
and
inc
out
imul
xorb
repz
cli
movsb
nop
mov
dec
lods
sbb
xchg
and
pop
adc
xor
sbb
pop
cli
popf
loopne
push
jnp
adc
int3
dec
std
fimuls
mov
adc
call
pop
lcall
or
xchg
hlt
xlat
repnz
xchg
lcall
dec
xor
add
mov
cmp
push
ret
subb
scas
sbb
xor
je
pop
sarb
fisubl
gs
mov
xchg
jnp
push
pop
cli
loopne
enter
ss
add
and
ljmp
imul
jmp
jl
int3
adc
xchg
inc
add
sub
and
addr16
loope
cmp
xchg
push
pop
outsb
inc
hlt
shlb
add
jp
mov
mov
fwait
rcrb
lods
lock
call
sub
jnp
into
add
inc
and
jge
or
add
fadds
dec
jle
add
mov
pushl
popa
cs
out
and
lahf
and
mov
jp
add
push
mov
stos
mov
stos
loop
xorl
or
adc
add
out
loopne
or
je
loopne
cmc
jo
aaa
icebp
jge
subl
jmp
inc
cmp
and
outsl
lea
mov
push
mov
mov
jl
inc
sub
sbb
mov
sbb
rorb
stos
insl
sub
icebp
jge
int3
dec
adc
clc
mov
and
pop
dec
loop
es
jb
scas
add
fsubl
and
es
or
jmp
orl
test
add
add
pop
or
clc
sbb
pop
and
mov
dec
rclb
xor
ret
cmpb
jnp
icebp
or
insb
xchg
cmc
loope
mov
push
popf
fwait
mov
mov
xor
or
rclb
ret
aaa
mov
movsl
or
xor
sub
xchg
cmp
pop
das
xchg
inc
sub
sub
lea
pop
lock
sub
inc
sar
outsl
cmp
sub
fistl
mov
aam
sub
pop
xor
loopne
movsl
into
in
xchg
test
aam
push
sub
das
or
pop
push
add
cli
push
dec
mov
lock
pop
testl
inc
mov
jbe
ss
sbb
loopne
call
clc
shl
cmp
or
or
rorb
lods
or
push
add
mov
jo
les
mov
nop
sbb
ret
sub
pop
mov
inc
sbb
xchg
push
xchg
rcll
cmc
outsb
imul
xchg
mov
sahf
pop
push
ret
outsb
mov
dec
and
jl
cltd
mov
xor
push
int3
push
or
push
std
push
mov
xchg
fld
cmpsl
popf
cmc
mov
sub
add
xor
push
xchg
ljmp
pop
lock
xchg
lock
icebp
push
mov
test
add
xor
jo
outsl
loope
test
into
movsb
in
loop
inc
testb
xor
dec
sbb
pop
mov
or
in
outsl
sbb
dec
data16
sbb
push
push
enter
pop
or
add
sbbb
or
es
cld
dec
xchg
arpl
jo
pop
push
inc
lea
pop
out
in
push
call
dec
and
ljmp
into
leave
and
add
push
cmp
mov
and
leave
add
add
xor
push
mov
js
or
mov
call
mov
sti
push
fstp
xchg
or
cs
inc
xchg
and
and
dec
addl
xchg
ror
sub
add
repnz
or
pop
pushf
shll
lds
lods
lret
test
xchg
movsl
inc
ret
mov
adc
xchg
movsl
in
imul
out
xor
or
add
pop
xchg
or
push
xchg
ljmp
orl
loopne,pn
lods
clc
dec
sub
mov
mov
mov
mov
mov
push
mov
into
iret
movzwl
mov
or
les
pushf
enter
cmp
add
popf
lcall
sahf
jbe
cli
pop
ja
fstpl
mov
mov
jo
xchg
les
add
sbb
fnstenv
mov
push
arpl
ja
push
mov
in
sar
mov
out
jae
mov
push
or
mov
mov
dec
or
jge
xor
mov
or
arpl
add
jae
call
jne
push
pusha
xlat
jb
cmpsb
mov
jecxz
cmp
nop
imul
mov
pop
sub
mov
inc
sub
sub
insb
jne
jbe
xlat
xor
or
pop
pop
in
pop
mov
mov
cmpsb
sbb
jb
andb
das
inc
cmp
xor
mov
fwait
cmp
leave
inc
cmp
add
inc
pusha
rcrb
int
sub
xor
cmp
add
lea
or
lahf
xchg
xchg
add
xchg
lret
pop
mov
and
call
dec
adc
mov
jnp
jl
xchg
cmp
mov
fsubr
dec
in
sbb
mov
int
leave
adc
mov
fs
dec
fwait
call
fmuls
jmp
jb
inc
sub
std
add
in
pop
xor
sbb
cli
cmp
stos
sbb
nopl
mov
clc
mov
mov
jmp
xchg
es
pop
call
push
dec
nop
mov
xchg
fs
xchg
mov
mov
imul
imul
scas
in
xchg
pop
mov
mov
lods
add
or
mov
mov
or
push
in
in
cwtl
lods
xchg
inc
cs
pop
dec
in
add
fmuls
mov
nop
repz
push
sbb
enter
jb
fcompl
cltd
cmp
pop
call
aam
enter
in
mov
mov
andl
in
mov
aam
and
mov
stos
loope
push
jbe
xchg
xchg
loopne
jb
daa
pop
lods
imul
jmp
add
xor
add
fbld
aad
js
repz
fisubrl
fiaddl
movsl
xor
ss
icebp
std
test
cmp
lret
adc
pop
xchg
les
and
dec
daa
js
xchg
imul
sub
xchg
into
lret
int3
push
dec
inc
ret
mov
ret
xchg
adc
sub
in
jbe
fwait
rcll
outsb
repnz
jmp
mov
mov
inc
pop
pop
push
mov
jp
mov
das
add
and
adc
dec
fdivrs
or
ret
cltd
inc
push
dec
insl
ficoms
inc
icebp
nop
ss
cmc
sahf
pop
pop
shr
lds
daa
xor
mov
ss
iret
dec
fildll
loopne
cmp
jne
or
cmp
and
inc
enter
inc
add
sub
xor
dec
mov
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xor
and
or
or
pop
jne
or
rcll
or
ja
movsl
movsb
dec
sbb
sub
enterw
dec
lret
sahf
out
inc
adc
roll
add
inc
adc
sub
mov
mov
inc
iret
pop
inc
outsb
add
sbb
popa
sahf
or
stc
sbb
adcb
xchg
add
mov
mov
sub
add
add
hlt
mov
subl
push
dec
add
pop
dec
popf
out
and
mov
add
int
fimuls
ja
sub
xor
or
inc
add
cmpsb
xchg
push
xor
jnp
jge
jbe
loopne
ficoms
push
push
jnp
cmp
arpl
cmp
loop
jb
cmpb
cld
pop
jae
add
dec
and
in
inc
xlat
int
mov
mov
push
sbb
lods
jmp
and
cmpsl
je
add
push
fsub
std
insb
jbe
mov
ljmp
lahf
mov
leave
sub
mov
cmp
decw
sbb
mov
orl
jp
sbb
and
cld
and
cmp
shl
das
dec
clc
lea
and
mov
lods
jb
pushf
jg
jl
ja
pop
pop
xchg
push
xchg
das
mov
xchg
lods
jmp
stos
inc
xchg
add
xchg
xchg
mov
lcall
js
jno
jnp
sahf
cwtl
mov
mov
push
jo
addr16
dec
rcll
shll
xor
xor
cmp
sbb
fsubrl
in
jne
movl
inc
inc
sarl
std
jne
mov
cmp
cmp
les
inc
lods
fistl
dec
cmpsl
and
xor
adcb
fwait
testb
push
pop
arpl
fwait
xchg
icebp
mov
mov
movb
pop
shrb
xor
inc
shl
into
std
call
push
fs
lock
nop
add
mov
scas
dec
in
addr16
and
stos
xchg
adc
push
aas
rolb
pop
cmc
inc
jo
cmp
or
push
call
push
pop
xchg
inc
loope
out
xchg
imul
je
inc
inc
push
leave
inc
fwait
lea
imul
lea
xchg
add
sub
jle
adc
jmp
loopne
cmpb
or
mov
inc
jge
add
ljmp
add
cld
jge
rolb
loopne
xorb
nop/reserved
sub
xchg
aam
push
push
and
lock
pop
andb
inc
push
shll
jne
mov
mov
xchg
dec
jle
pop
and
add
jle
in
icebp
and
xor
push
mov
add
jne
xor
loopne
sbb
mov
jmp
mov
push
jnp
cmpsl
cmp
iret
adcb
inc
sbb
push
es
loopne
add
jno
mov
adc
xor
cmp
adc
andb
in
or
inc
fcmovnbe
mov
mov
roll
pop
jmp
or
jmp
xchg
pop
push
dec
pushf
push
nop
dec
jecxz
push
aam
xor
xlat
testb
insb
ljmp
add
add
ljmp
sti
push
sub
or
xor
lock
add
out
outsl
and
or
sub
inc
jmp
xor
jg
or
mov
add
jns
inc
pusha
sbb
aaa
test
push
inc
jo
out
imul
stos
rcrb
sbb
push
aad
mov
popf
jmp
es
cmp
mov
push
jp
add
cli
insl
pop
pop
mov
js
std
and
push
mov
and
outsl
lret
jns
push
fiaddl
xchg
jmp
sbb
mov
lea
cld
test
mov
clc
xor
fistpll
cmpl
loope
ret
xchg
pop
ret
adc
shrb
movsl
sub
sbb
subb
push
call
je
adc
adc
mov
js
push
cmp
je
push
testb
push
cmp
lods
or
pop
sbb
mov
imul
cmpsl
nop
mov
negb
lahf
sahf
xchg
out
lods
das
adc
sbb
sub
clc
and
mov
sub
sbb
sbb
push
mov
test
je
cmp
ljmp
jle
jg
mov
or
imul
cld
lds
add
add
shrb
loope
jns
cld
add
push
pop
cmp
mov
inc
xor
sub
add
fnstsw
popa
in
addr16
inc
push
lock
jl
sub
out
add
cmp
in
jle
loope
or
sbb
jo
or
lods
xchg
aaa
mov
insb
pop
movsl
mov
jmp
xor
mov
pop
or
dec
pop
clc
ret
or
clc
mov
dec
sbb
cwtl
mov
hlt
inc
test
dec
jp
fiadds
xchg
stc
push
lods
push
push
push
inc
es
test
pop
or
push
scas
xchg
lds
out
icebp
outsl
aam
or
hlt
addb
mov
pop
test
add
inc
sub
dec
pop
pop
inc
inc
jo
movsl
adcb
inc
or
add
jg
mov
imul
jo
push
inc
scas
subl
shrb
push
xor
bound
pop
mov
and
loopne
push
imul
cmc
add
sbb
adc
loopne
and
xchg
int3
add
and
xchg
cmp
aas
cmp
test
fwait
je
adc
mov
cmp
or
xor
shr
pop
xor
pop
mov
xor
push
mov
and
sub
push
in
push
xor
inc
inc
push
in
inc
dec
mov
data16
pop
cmp
daa
ds
push
adc
cmp
dec
popf
aad
lods
and
std
jbe
cmp
clc
shll
push
sbbl
add
in
xchg
fdivs
hlt
mov
stos
xor
push
push
fnstenv
mov
or
fwait
aaa
sub
in
movl
fmuls
mov
nop
xor
movsb
cmp
mov
cmp
mov
inc
push
daa
sbb
adc
mov
jnp
mov
adc
jo
faddp
stos
cmp
mov
ja
ljmp
add
nop
or
negl
xor
push
inc
test
fistpl
cmp
xchg
arpl
mov
pushf
mov
fwait
cwtl
shlb
push
inc
sub
dec
adc
xchg
mov
adc
cmp
pusha
lods
jle
add
push
fisttps
mov
push
js
push
test
sahf
pop
js
sub
mov
lods
std
jle
push
inc
add
or
cmp
inc
outsb
pop
or
sub
jg
inc
lsl
sbb
or
ss
sbb
aas
and
sub
pxor
push
push
add
inc
sub
cmp
inc
jmp
push
loop
shr
je
fistpll
jg
dec
movsl
sarb
inc
adc
and
inc
js
sub
mov
dec
jne
and
imul
mov
jnp
add
xor
mov
je
xor
add
adc
sbb
add
jne
push
je
fidivs
or
inc
inc
cli
pop
pop
ret
lock
rcrl
push
mov
bound
add
out
outsb
dec
cli
shr
add
cmp
cmc
xchg
bound
push
adc
jae
pop
pop
repz
notb
cmp
in
adc
xchg
outsb
sub
es
push
int
fldt
adc
loopne
test
mov
idivl
push
or
shll
enter
or
inc
sub
jp
ret
pop
add
les
cli
push
cli
fnstcw
pop
add
add
mov
mov
dec
mov
mov
lcall
pop
mov
push
inc
sub
test
lcall
imul
rcll
xorl
dec
popa
lret
ret
xchg
push
clc
out
fdivrl
add
sbb
insb
xor
call
lock
shl
and
mov
and
add
cmp
or
xchg
out
mov
popa
les
mov
fistps
jmp
add
into
das
add
pop
popa
push
mov
push
sbb
push
dec
add
and
sbb
in
mov
jp
add
cmc
clc
jmp
adc
jmp
xlat
mov
push
xchg
imul
push
pushaw
iret
in
call
cmp
or
or
lcall
or
icebp
imul
mov
jmp
adc
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
fucom
jns
mov
dec
push
push
pop
push
sahf
jge
mov
sbb
shl
push
sahf
cmpsl
jge
adc
movsb
mov
incb
push
xor
add
pop
aaa
fnsave
mov
or
cmp
mov
xor
sti
je
push
inc
test
or
mov
sbb
and
inc
adc
loope
inc
add
lea
mov
in
je
push
cltd
jmp
inc
faddl
inc
sbb
ret
es
sar
push
jmp
test
dec
push
jmp
rcr
jg
xchg
and
ret
and
push
push
test
adc
fstl
jmp
mov
rol
aam
or
mov
aaa
andb
cmpsb
jle
mov
test
cld
divl
adc
std
xchg
hlt
das
mov
ret
jl
push
inc
sbb
cwtl
sbb
cmp
or
pushl
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
test
or
add
and
push
ret
or
push
test
ret
sarb
xchg
add
or
and
inc
adc
lds
push
cmp
push
push
enter
xchg
shll
rolb
stc
jp
mov
imul
jno
idivb
movsb
fs
rorl
sti
dec
or
mov
xchg
out
das
jecxz
insb
inc
cmp
dec
and
ds
cmp
sbb
xchg
es
mov
mov
and
fbld
fcoml
loopne
pop
lock
mov
mov
dec
dec
jnp
cmpsl
push
xchg
jne
pop
or
popa
mov
orl
xor
cmpsl
fcomps
pop
cld
jbe
mov
mov
mov
loope
push
xorb
xor
call
xchg
pop
test
mov
and
or
push
int3
je
loopne
rclb
lahf
loope
mov
insb
jne
inc
sub
pop
aad
pop
and
ss
cmpb
add
ja
cmp
inc
xor
or
and
bound
icebp
ret
lcall
loope
fstps
pop
leave
inc
inc
stc
push
mov
andl
scas
push
ret
add
das
mov
mov
lea
or
or
scas
sub
sub
popa
cmp
sbb
ficompl
mov
arpl
push
or
pop
or
mov
orb
cmc
inc
add
or
inc
lea
or
adc
cmpsl
xor
dec
push
popa
lods
vcmpsd
imull
popa
cwtl
add
in
mov
stos
mov
push
add
cwtl
xchg
stc
mov
jo
in
push
xor
add
loope
xchg
pop
cmpsl
or
int
scas
ljmp
or
add
pop
lock
je
movzwl
int
xchg
inc
inc
add
push
ja
pop
mov
pop
dec
scas
jge
enter
mov
and
push
jno
xor
mov
or
imulb
testl
pop
push
addl
and
adc
pop
sub
sub
iret
hlt
add
mov
cmp
pop
std
rol
or
ficomps
insl
pop
lock
lret
icebp
out
fisubl
lret
adc
out
or
add
and
pop
inc
pop
mov
ja
add
ja
in
jne
sub
sbb
pop
arpl
or
cmpl
mov
pop
push
xor
call
call
pop
mov
out
mov
pop
or
mov
lods
repnz
mov
rcrl
and
mov
mov
mov
inc
enter
scas
inc
imul
je
inc
pushf
inc
sbb
inc
cmpl
stos
or
shll
jmp
dec
xchg
and
inc
add
jl
bound
nop
mov
pop
mov
inc
daa
add
clc
imul
inc
jo
inc
add
pop
mov
leave
dec
xor
pushf
pop
lcall
ret
bnd
sbb
lret
inc
dec
dec
shrl
inc
mov
or
inc
nop
sbb
adc
pop
add
dec
inc
daa
rorb
inc
inc
imul
addr16
sub
test
inc
rolb
aaa
sbb
vmovntpd
mov
cwtd
or
call
dec
data16
push
push
shlb
push
nop
and
jmp
push
mov
mov
inc
push
cmc
roll
rol
imul
sti
sub
or
jmp
test
sbb
jmp
and
int3
mov
jg
mov
cmp
sbb
lahf
jmp
mov
add
and
cld
sbb
add
fstpl
fisttps
jno
push
insb
mov
adc
lods
dec
sub
add
pop
jmp
fwait
add
bound
mov
mov
dec
lahf
fstpt
sbb
push
push
push
push
mov
jle
push
imul
xchg
xor
mov
xchg
pop
sub
lock
or
cmpsb
jmp
int
daa
add
mov
inc
mov
inc
pop
cmpsl
mov
inc
lret
add
and
mov
outsb
test
bound
pop
mov
mov
mov
test
xor
xor
in
mov
cld
in
cmpsb
mov
adc
cmp
out
sahf
insl
test
cmp
out
cld
push
or
aaa
ss
stos
jmp
lea
in
dec
add
or
icebp
mov
pop
mov
jne
or
add
clc
sub
dec
sub
shlb
adc
nop
jne
movsl
divl
les
into
mov
mov
movsl
mov
stos
and
nop
xchg
mov
pop
aaa
push
mov
shrb
insb
xor
mov
nop
dec
inc
sub
or
dec
imul
mov
pop
aam
sbb
cmp
mov
mov
mov
cwtl
es
push
xor
mov
loope
jbe
jno
xor
aaa
push
aad
fstpl
pop
add
xor
add
sub
arpl
pusha
jns
adc
aad
movsl
cmp
mov
xchg
xlat
scas
mov
xlat
mov
mov
icebp
xor
mov
aam
in
adc
and
mov
xlat
inc
and
and
in
in
aad
xor
and
lds
xor
call
inc
cmp
test
inc
movsb
repnz
push
fldl2e
ja
xor
repz
mul
mov
inc
mov
nop
mov
movsl
pop
je
lret
fstpt
push
int3
es
xchg
push
and
movsb
mov
push
cmp
add
jecxz
aaa
leave
xchg
xchg
dec
in
fsubrs
outsb
or
frstor
inc
leave
push
aaa
aad
movsb
fwait
mov
and
cs
cld
mov
mov
mov
push
dec
mov
inc
cs
mov
mov
outsb
or
push
xchg
mov
in
xchg
mov
inc
je
mov
pushf
push
mov
sub
cmp
dec
ret
or
outsb
jl
jne
iret
dec
mov
push
iret
dec
mov
cltd
movsb
test
subl
add
nop
lods
lods
psllw
in
rol
adc
or
xchg
sub
hlt
adc
out
movsl
mov
sahf
rep
push
mov
test
daa
add
jnp
ss
sub
scas
or
div
mov
sahf
and
nop
popf
add
inc
inc
daa
pop
addb
clc
jo
popa
sbbl
and
push
movsl
mov
pop
xchg
or
outsl
inc
cld
pop
lea
or
pop
pop
roll
inc
mov
mov
xchg
sbbl
mov
or
jae
xor
dec
sbb
loop
stc
mov
test
jmp
lods
mov
inc
iret
cmpsl
xchg
fstpl
add
push
jg
mov
test
and
or
or
neg
rep
movsb
inc
loopne
ja
fcomps
inc
mov
xchg
testb
shlb
cltd
or
test
xor
aaa
movsb
in
lock
jecxz
lock
or
loop
inc
push
hlt
mov
dec
push
jne
loope
add
cmp
and
bound
inc
inc
sub
sarl
inc
pop
or
cmp
and
inc
hlt
repz
mov
jg
ljmp
add
push
push
dec
adc
push
and
and
out
jns
dec
push
pop
outsl
inc
or
jns
test
jbe
jle
dec
outsl
add
call
int3
in
lods
adc
and
dec
jne
pop
dec
in
mulb
xor
ffreep
dec
mov
lea
inc
out
mov
lea
lock
mov
cmp
add
cli
enter
push
inc
or
jg
pop
fildl
push
negl
ret
mov
lret
jnp
fmuls
pop
shr
dec
mov
mov
push
add
push
add
or
jb
jae
mov
pop
inc
ret
ja
or
xchg
lea
and
push
push
dec
or
sub
fsubs
sarl
sbb
xchg
push
addl
xchg
sarl
xchg
xor
stos
add
jmp
mov
sbb
xor
adc
jae
les
inc
sbb
pop
pop
inc
pushl
cld
mov
js
add
inc
adc
and
cmp
ja
push
cmp
pop
sbb
xor
and
shll
loope
xchg
pop
movsb
roll
push
cmp
lret
mov
cmp
add
xor
inc
cmp
iret
mov
xchg
adc
call
inc
fstpl
push
jno
and
jg
jo
loopne
pop
pusha
mov
dec
cld
xchg
and
mov
lock
mov
andl
or
stc
nop
in
fdivrs
fs
iret
pop
mov
cmp
scas
or
outsb
cmp
xchg
mov
dec
cmp
push
xchg
cmp
jb
push
cmp
mov
pop
or
fs
addb
movsb
xor
pop
loopne
subl
loop
dec
ret
mov
jo
jmp
or
mov
mov
dec
call
mov
test
mov
inc
or
out
and
jo
data16
jne
sbb
in
test
cltd
repnz
outsl
popa
aad
shl
push
mov
popa
outsl
loop
pop
dec
mov
outsl
xor
gs
jmp
outsl
mov
or
mov
dec
call
inc
outsb
cmp
dec
and
jne
mov
lea
pop
add
incl
es
add
pop
insb
in
dec
insb
mov
out
dec
scas
sub
in
int3
pop
xchg
inc
xchg
arpl
in
xorl
xchg
adc
rorb
push
mov
xor
mov
and
fcoms
sahf
add
movsb
pushf
loope
add
gs
cld
enter
fistl
jne
dec
push
call
push
sarb
adc
out
dec
add
sub
fidivrl
movsl
dec
dec
cmp
adc
jmp
pop
jg
add
jbe
pop
je
cmp
pop
sbb
xor
pop
xlat
mov
and
and
cmp
orb
push
mov
inc
jb
push
pop
jle
out
push
dec
in
mov
aam
and
add
sbb
or
test
or
push
mov
jecxz
data16
es
test
inc
add
mov
pop
and
mov
shlb
fstpt
mov
mov
enter
test
add
dec
lea
int3
arpl
push
push
adcb
ret
sbbl
jae,pn
jb
pop
add
and
jae
lea
add
add
jle
mov
xor
push
lock
orl
pop
and
push
test
loope
xor
std
movsl
sub
scas
negl
ljmp
push
push
je
std
pop
pop
fs
pop
clc
push
sub
lea
sub
adc
or
test
push
mov
pop
dec
mov
dec
in
push
push
pop
push
int
daa
add
fadd
mov
nop
xor
pop
pop
mov
push
dec
int3
ret
lock
fwait
negl
movw
mov
adc
movb
xor
cmpsl
das
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
mov
mov
out
push
aaa
call
imul
ret
dec
pop
scas
je
push
push
fidivrs
xorl
cmp
or
inc
aas
shlb
or
add
arpl
in
ja
push
add
andb
push
xor
cmp
or
rorb
add
nopl
into
sub
shll
adc
and
lds
adc
sub
add
pop
call
or
or
or
or
lock
push
add
xor
xor
and
push
xor
iret
incl
clc
sbb
dec
sbb
mov
decl
jne
xor
push
orb
jmp
push
incb
push
negb
or
pop
push
xchg
cmc
cmpsl
loop
and
hlt
add
inc
sub
push
aaa
lret
xorb
mov
mov
jne
mov
or
add
or
es
js
sub
mov
movl
pushf
loop
loope
js
rclb
out
push
mov
pop
idivb
add
cmp
fildl
add
dec
inc
inc
or
mov
cmp
pop
adc
fildll
dec
out
mov
les
or
xor
add
gs
dec
dec
loop
aam
xor
pop
sbb
lock
dec
xor
dec
mov
dec
into
xor
and
imull
adc
out
repz
adc
inc
or
mov
add
shll
and
jb
mov
jae
mov
add
mov
jecxz
mov
repnz
push
sbb
mov
pop
pop
push
sub
fistpl
xor
push
lock
jecxz
or
dec
bnd
sub
lea
daa
pop
mov
add
inc
push
xchg
fistl
in
movsb
cmp
shll
fidivl
das
inc
mov
xchg
das
push
push
jb
sbb
dec
xchg
es
add
push
add
jnp
incb
in
push
sbb
daa
fists
jg
xor
xor
add
jns
xlat
xor
or
ss
xor
xor
fcomip
or
mov
push
adc
adc
stc
daa
cmp
inc
jl
inc
jl
repz
test
cwtl
adc
jae
adc
push
xchg
lret
cmp
pop
addr16
fnclex
dec
sbb
xchg
dec
add
sub
lock
add
jmp
add
or
cmp
movb
or
leave
inc
sub
icebp
cli
rclb
push
mov
dec
ret
jne
lea
fistpll
sub
loope
lock
pop
lock
and
or
adc
lods
test
sbb
addb
es
es
and
push
pop
pop
test
inc
pavgw
add
dec
and
pop
push
adc
sub
pop
push
and
add
stos
sub
popf
sbb
cmp
jle
mov
dec
cmp
test
dec
inc
sub
shlb
hlt
jge
inc
push
sbb
ja
xor
sbb
and
pop
add
insl
hlt
xor
add
sbb
nop
add
insb
data16
push
sbb
std
inc
scas
adc
fcomi
aas
pop
mov
jmp
xlat
inc
xor
test
in
out
outsb
jno
dec
fcmovnbe
loopne
or
or
cmp
or
add
cmp
push
push
and
and
mov
shll
mov
jno
mov
mov
and
lock
cmp
dec
movsb
je
movl
dec
fsubr
sbb
mov
daa
imul
xor
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
mov
jo
or
addb
inc
pushf
adc
pop
lea
sub
or
adc
xlat
push
mov
int3
out
sbb
rorb
add
enter
cmp
add
jb
mov
pop
xchg
sbb
add
ret
sub
call
push
dec
or
rolb
push
or
out
xor
or
lock
mull
out
mov
add
jmp
push
pop
push
push
inc
cmp
mov
shr
rcr
or
mov
repz
dec
mov
xchg
xchg
fs
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
jle
fwait
scas
adc
or
fisubrl
lret
iret
inc
inc
pop
ljmp
xchg
sbb
cs
sarl
jbe
mov
inc
adc
pop
sbb
ljmp
add
mov
addb
divl
cwtl
jbe
icebp
insl
or
xchg
or
inc
fisttpl
shll
sub
mov
cmpsl
arpl
push
cmc
jmp
fsubrl
sahf
call
sahf
stos
jo
xchg
dec
icebp
add
out
sub
add
and
xor
in
imul
mov
xor
cmp
xchg
push
mov
push
loopne
jecxz
xchg
sarb
into
jmp
js
add
insl
xorl
push
and
pop
hlt
jo
dec
pop
sbb
adc
push
dec
and
lea
inc
inc
shlb
jmp
or
adc
and
add
and
aas
fnsave
cmc
push
pop
loope
and
lret
jo
add
lret
fiaddl
jmp
inc
adc
iret
loope
jne
nop
inc
ret
add
cmp
inc
cmp
mov
xor
sahf
cs
xor
bound
ds
nop
jns
subb
mov
pop
dec
adcl
and
push
and
lea
mov
enter
pop
or
fmul
add
dec
inc
or
nop
ret
push
aam
enter
jnp
cmp
test
and
pop
outsb
cmp
in
rcr
aaa
sub
jb
pop
inc
lods
fdivs
lcall
int3
rorb
loopne
or
ret
jnp
mov
arpl
xorb
push
pop
je
mov
push
sahf
imul
add
push
mov
xor
imul
loop
add
sub
faddl
ljmp
lds
movsb
xchg
and
pusha
popa
inc
testl
ss
mov
jg
es
jo
cmpsb
out
adc
cmp
cmpsl
sti
fadds
ret
je
mov
outsl
mov
outsl
fsubr
push
fildl
notb
xlat
out
adc
int3
and
mov
in
cmp
pop
jo
or
mov
jmp
adc
ficompl
outsl
push
pusha
jae
sub
and
dec
mov
sbb
test
inc
mov
mov
adc
dec
fmul
fcom
and
push
adc
mov
pop
xlat
mov
or
iret
push
mov
mov
adc
mov
sub
or
fwait
addr16
cmp
jecxz
imul
push
ret
mov
jl
addr16
call
inc
jmp
rol
lds
mov
cmp
imul
mov
fnsave
aas
sbb
icebp
sub
cmp
jbe
movsb
mov
or
push
dec
rorb
or
mov
out
inc
lock
xchg
rolb
xor
pop
push
ds
jae
mov
xchg
push
adc
dec
cmpl
incl
pop
popf
push
fmull
sbb
inc
push
adc
sbb
outsl
dec
gs
cmp
jge
mov
xor
jae
shlb
push
mov
pop
test
xor
orb
add
inc
scas
loope
add
sub
push
sbb
mov
fwait
push
insl
gs
jb
adc
add
dec
psubd
push
sbb
pushf
xor
mov
inc
jge
les
jl
jns
and
cmpsb
sbb
jle
fcmovnu
addb
mov
pop
mov
out
lcall
sub
adc
orl
test
orb
or
call
adc
push
gs
pop
enter
pop
testb
inc
cmp
push
gs
sub
pop
cmp
or
sbb
enter
xchg
les
mov
lock
ja
ja
mov
outsb
movsl
stc
loopne
addr16
pop
mov
adc
loop
inc
and
push
loope
add
mov
ficoml
add
add
out
sarb
adc
and
and
or
xor
mov
push
fisubrl
jo
cmp
add
mov
shr
lea
lea
or
add
aas
pushf
sti
ret
out
or
and
jmp
popl
andb
inc
ret
inc
add
pop
das
ljmp
js
adc
enter
sbb
aam
add
adc
clc
fadds
fbld
dec
clc
mov
mov
sub
test
mov
jno
add
jno
push
sbb
pop
mov
loop
mov
push
adc
movsb
pop
push
outsb
rorl
pushf
shrl
das
imul
test
push
ds
push
jo
add
cwtl
or
sub
mov
push
push
loop
mov
in
fistpll
test
mov
popa
pextrw
es
sub
sbb
mov
fst
fistl
mov
sub
sub
test
pop
push
add
push
pop
mov
pop
shlb
aad
aas
scas
ds
es
jge
addb
add
cmp
ja
or
mov
scas
call
jno
sbb
data16
ret
add
fistpl
mov
add
sub
mov
sbb
or
cmp
rorb
mul
mov
push
fwait
push
xlat
mov
add
clc
movd
fisttpl
loopne
mov
jmp
pop
add
pop
lret
lcall
cmpsb
adc
adc
jl
lcall
clc
das
cmp
push
or
jnp
pop
clc
xor
add
mov
push
sbb
pop
cmp
call
cmc
mov
lods
adcb
jae
cmp
jge
cmp
ljmp
hlt
push
dec
push
insb
cs
lea
xchg
orb
jbe
xor
cmp
stos
or
push
cmp
mov
unpcklps
push
sub
cmc
dec
ljmp
jg
inc
inc
fsubr
das
mov
inc
jmp
fdivr
popf
pushl
loop
mov
pand
cwtl
ret
cmp
jo
add
pusha
loopne
sbb
cmp
mov
dec
or
xlat
inc
mov
push
push
nop
imul
fcomps
movsb
adc
cmpsb
mov
dec
and
or
add
jl
push
sbb
bound
mov
cmp
orb
add
das
push
jmp
mov
cs
push
iret
or
ja
xchg
lea
and
xchg
push
or
add
inc
pop
sub
adc
push
cmp
hlt
add
inc
or
je
ljmp
jl
into
andb
movsb
incb
iret
jbe
movsb
andl
jmp
mov
and
in
jbe
popf
add
scas
mov
and
pusha
cld
mov
das
cwtl
cmp
jle
sub
cmp
loope
sbb
xor
inc
jmp
dec
push
and
xchg
shrb
testl
out
fimuls
adc
sbb
adc
sbb
mov
xorl
jmp
adc
insl
pop
jge
mov
mov
add
jge
movsb
es
dec
jae
imul
sbb
enter
jmp
and
scas
shlb
xchg
shr
sbb
ficoms
bound
jmp
and
cmp
dec
inc
dec
cwtl
add
pop
aaa
inc
pop
pop
push
and
shl
or
stc
sub
cmp
mov
rol
jbe
sub
mov
dec
lret
stos
loopne
je
mov
cwtl
mov
test
nop
mov
inc
cmpsl
mov
dec
cmp
ja
inc
jbe
testl
add
mov
jecxz
fldl
pop
add
dec
dec
or
iret
sarl
cmp
popf
les
repnz
and
lea
addl
push
jg
cmc
jecxz
icebp
rcll
jmp
cmp
mov
icebp
sub
dec
add
dec
jbe
data16
loope
sti
ljmp
cmp
mov
cwtl
jge
add
mov
pop
push
sbb
out
fwait
clc
mov
mov
or
adc
jmp
lahf
add
add
add
out
ds
inc
xor
jne
and
fisubl
fsts
pushf
int
cmpsb
push
add
pop
fsubrp
lods
jmp
jge
add
mov
sbbl
sbb
mov
jb
or
and
jge
movsl
add
push
pop
mov
dec
inc
mov
mov
sub
mov
lea
and
and
or
jne
inc
pop
nop
inc
push
shll
mov
xchg
pop
inc
iret
push
or
mov
or
lods
push
pop
xchg
pop
and
pop
inc
testl
mov
jne
push
les
int
adc
dec
into
sbb
jle
faddl
jne
inc
or
cmp
roll
or
int3
cmc
xchg
pop
dec
xchg
nop
adc
push
and
pop
clc
cwtl
xchg
sub
push
xchg
test
push
pushf
push
push
lea
lcall
add
xchg
mov
push
aam
add
scas
ret
xor
cmp
jb
or
mov
or
shll
incl
cmpl
or
ss
data16
or
cmp
sub
sbb
inc
jge
test
jg
add
jno
cmpsb
aaa
loop
sub
mov
sub
aam
mov
pop
mov
add
or
shr
aas
or
push
jae
mov
bound
into
or
adc
inc
mov
mov
sbb
lcall
incl
fadd
loopne
shr
or
mov
sahf
adc
xor
jne
outsb
mov
adc
cs
mov
adc
loop
cmp
inc
xchg
dec
push
sub
sub
mov
xor
add
enter
aas
ljmp
jmp
or
andl
fldenv
and
mov
xchg
pop
mov
mov
mov
loope
jl
rcrb
jmp
xchg
mov
shr
or
daa
mov
jp
lret
into
jmp
lods
jle
movb
sarb
and
jae
jno
les
les
dec
and
inc
rcrl
xorb
lret
lds
jmp
sub
test
sbb
add
xor
and
inc
lods
mov
or
call
sub
mov
icebp
out
rcrl
fdivl
int
cmp
fstl
inc
mov
aam
test
jns
sub
jecxz
sarb
or
mov
or
sub
or
add
testb
push
push
xchg
shrb
sbb
sub
mov
enter
int3
xchg
mov
int
sbb
add
adc
inc
lret
test
xor
in
pop
in
ds
fadds
dec
push
aad
lea
ret
push
popa
jne
jmp
pusha
cs
fnstenv
aam
sbb
mov
sbbb
inc
sbb
pushf
mov
jb
dec
in
and
add
test
or
add
mov
mov
pop
imulb
es
sbb
sub
mov
add
in
mov
jbe
and
fwait
jecxz
sbb
mov
cmp
testl
rcr
push
jne
jg
sub
shlb
add
push
test
xchg
lea
orl
sbb
test
clc
pusha
aam
call
jmp
push
loop
jmp
sar
push
js
xor
lret
cmp
push
adc
out
iret
cli
pusha
stos
cmp
iret
sbb
dec
sub
adc
and
push
cli
and
mov
and
in
rclb
cs
or
add
push
push
cwtl
xchg
cmpsl
push
sbb
cmp
popf
in
pop
bound
loopne
sbb
jmp
gs
in
stc
pop
test
dec
jmp
in
lret
cld
add
mov
jne
pop
in
add
testl
mov
enter
cmp
ds
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
leave
sbb
mov
sahf
add
and
lods
pop
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
jae
cmp
sbb
or
mov
push
inc
pushl
mov
jns
cmpsb
dec
jnp
mov
or
out
mov
cmp
out
inc
dec
outsb
and
mov
push
sub
xchg
add
inc
mov
mov
mov
pop
ret
add
sbb
push
add
fdivr
pop
sbb
adc
push
hlt
mov
andl
lock
cwtl
push
dec
ss
mov
adc
out
lret
add
mov
push
pusha
inc
mov
fsubs
inc
mov
push
mov
cmp
js
cmp
inc
inc
call
jmp
adc
sbb
cs
inc
outsb
mov
pop
cmp
cmpb
lea
pusha
xor
pop
lods
jnp
int
aas
mov
pusha
enter
and
push
inc
pop
mov
je
cmp
xchg
mov
jns
mov
pusha
cvtdq2ps
rcr
cmp
adc
mov
and
add
test
push
or
add
mov
mov
adc
jbe
push
cmp
test
jne
icebp
mov
pusha
xor
sarb
dec
sbb
or
mov
repz
push
jmp
icebp
and
cmc
push
es
rorb
or
push
pusha
dec
iret
test
lcall
and
pop
sbb
popf
popa
xchg
jb
call
mov
inc
mov
sbb
sbb
cmp
mov
jo
xchg
mov
rorb
mov
std
xchg
lret
out
jl
xor
fs
xor
lock
mov
cmp
jne
mov
and
movb
mov
push
and
adc
aad
gs
adc
rolb
and
loopne
fisttpll
jne
jl
mov
sub
cwtl
pusha
mov
sub
insb
pushl
jle
or
push
lea
or
pop
jbe
fs
test
in
pop
jns
adc
fiadds
push
in
or
sbbl
mov
mov
fcmovbe
pop
data16
test
imul
mov
sub
push
mov
daa
add
xor
push
lea
shrl
or
add
shlb
test
push
push
sub
xchg
jmp
push
mov
es
cmp
mov
lret
stos
loop
xchg
sbb
sub
add
adc
inc
mov
pop
mov
push
gs
adc
mov
xchg
aas
push
jae
ret
and
sbb
cmp
ret
sub
lahf
fstpl
insb
adc
sub
aad
cmp
xor
pop
popa
xchg
fidivrs
sub
rdtsc
cmpb
dec
xor
sbb
and
sbb
push
addr16
cmpsb
or
jmp
inc
loop
rcll
and
in
test
push
push
cwtl
mov
shl
inc
movsb
sub
pop
test
paddsw
add
cld
inc
mov
or
pop
pop
add
sbb
insb
fmull
popl
das
adc
mov
or
xchg
pop
push
out
and
aaa
int
int
scas
mov
pop
mov
sub
adc
data16
test
add
inc
lods
out
push
xor
jne
push
mov
mov
and
mov
pushf
push
xchg
pop
fcompl
inc
cli
mov
mov
sbb
jg
add
out
add
bound
test
loop
sbb
push
inc
add
xor
pop
mov
fisttpll
xor
or
hlt
mov
mov
cld
outsb
inc
jle
inc
mov
jmp
test
fdivrs
sbb
enter
jl
fcos
adc
and
or
clc
add
or
call
push
xor
push
lcall
add
mov
ds
ljmp
jb
inc
mov
mov
add
and
adc
enter
dec
sbb
mov
js
clc
pop
adc
push
cmp
les
icebp
xchg
xor
cmp
pop
add
inc
test
lret
xor
dec
or
lods
icebp
add
add
sub
jl
dec
js
enter
push
movsb
push
das
sub
pop
adc
scas
xchg
jg
jb
cmp
lcall
fcoms
lods
inc
mov
out
adc
sub
add
roll
push
cld
sub
mov
addr16
and
lcall
insl
pop
shl
mov
cmc
adc
icebp
les
add
pop
mov
and
sbb
loop
movsl
orl
jo
cmpsl
testl
jle
jnp
fsubs
lea
cmpl
or
push
decb
cmp
cmp
or
js
or
cwtl
push
jne
push
aas
out
int
xor
jo
mov
mov
jo
mov
fnstcw
mov
popa
pop
fdivs
lret
adc
insl
push
es
test
jne
or
jno
push
jnp
or
mov
jne
pop
push
pcmpeqw
xor
adc
out
sbb
cld
ror
or
addb
repnz
adc
fistpl
lea
ficoms
add
pop
xor
pushl
outsb
and
jmp
movsb
push
sub
enter
addb
add
int3
push
cmp
lea
add
icebp
imul
add
jnp
dec
jb
imul
dec
or
or
inc
or
dec
lret
xchg
sub
lock
imul
add
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
jge
sahf
call
xor
sarl
inc
mov
aam
nop
sbb
stos
jp
lock
nop
dec
adc
loopne
mov
je
jae
mov
movsl
mov
jl
jmp
test
xchg
inc
test
inc
sub
adc
imul
sbb
pop
lds
in
xchg
cmp
lock
cwtl
je
adc
sbb
pop
add
mov
cmp
jne,pn
push
mov
rol
inc
mov
neg
outsb
dec
fcoml
les
sbb
or
movsb
mov
sub
mov
push
push
icebp
mov
fwait
xchg
add
loope
jmp
cwtl
les
jns
and
aaa
test
and
sub
adc
push
adc
fs
ret
orl
sbb
inc
jp
inc
cmp
roll
dec
out
sub
adc
xor
dec
sbb
inc
pop
stos
mov
add
push
adc
bound
stos
loop
mov
push
pop
sbb
add
push
hlt
push
or
loop
mov
jb
ljmp
cmp
inc
stos
sub
push
and
lahf
pop
adc
push
cltd
mov
add
cs
or
adc
inc
popa
clc
cmp
into
add
mov
adc
add
xor
in
andl
daa
push
xor
add
out
and
insb
mov
add
and
push
loopne
loop
jg
addl
add
repz
pop
dec
nop
je
call
push
ret
jo
les
lret
xchg
lods
mov
dec
cmp
movsl
loopew
jge
pushf
aaa
sub
inc
pop
insb
jmp
xchg
fcompl
push
xor
pop
lret
in
lret
insb
xchg
push
cwtl
fsubr
sub
xor
push
daa
sub
or
js
cmp
mov
mov
jp
inc
pop
ljmp
es
cmp
lock
imulb
xorb
mov
orl
inc
xor
test
icebp
movsb
mov
test
ja
cwtl
pmaxub
push
mov
cmp
nop
daa
sti
adc
cmpsb
mov
xor
dec
lods
loopne
jge
jne
mov
sbbl
dec
jne
stos
pusha
stc
gs
sub
jnp
je
movl
or
jle
add
dec
test
aaa
mov
je
or
mov
arpl
enter
jns
mov
cltd
and
les
inc
hlt
jg
cmp
mov
lods
push
int3
outsl
addr16
fs
xchg
movsb
loop
push
ret
in
sub
rcll
sbb
orb
leave
je
das
test
in
test
lds
pop
sbb
inc
dec
and
push
jnp
or
xor
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
dec
sarb
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
xchg
dec
es
rol
dec
xor
fs
sarb
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
and
or
es
ficoml
adc
fs
dec
and
fs
dec
es
xor
dec
es
cmp
gs
inc
es
inc
dec
dec
mov
dec
xor
pop
adc
xor
pop
pusha
sbb
mov
jg
push
cmpsb
dec
shlb
popl
cs
and
dec
cs
pop
sub
cld
push
mov
shrl
xchg
xchg
mov
jb
adc
nop
adc
pop
cs
and
and
and
cmp
cmp
mov
cs
inc
les
adc
push
sar
dec
enter
pop
dec
pop
or
xchg
adc
push
test
js
ret
lcall
icebp
or
or
movsb
xor
mov
loopne
mov
sahf
or
and
test
xor
pop
add
daa
lods
test
fadds
fiadds
push
inc
add
dec
pop
idivb
test
and
add
popf
inc
cs
or
arpl
out
xchg
and
fdiv
shll
dec
xor
adc
in
mov
or
shr
xchg
fcompl
in
shr
and
jo
and
and
aam
js
in
test
adc
enter
adc
add
test
hlt
mov
xor
ss
or
push
mov
rol
sbb
clc
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
or
jmp
jp
adcb
loopne
movhps
cli
xor
sub
aaa
enter
jge
je
pop
loope
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
jmp
mov
lret
pop
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
push
aaa
mov
xor
pusha
jnp
testb
in
mov
or
add
mov
out
test
fisttps
xchg
sub
mov
mov
das
sub
add
jne
orl
and
or
jle
outsb
fs
testl
inc
or
adc
imul
push
and
or
push
or
popf
xor
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
mov
add
jbe
in
pop
sub
jmp
adc
push
push
imul
test
or
cmp
mov
jge
push
inc
call
sbb
push
aaa
sbb
out
sbb
es
xchg
dec
jmp
sub
fstpl
sub
jmp
sub
outsb
das
pop
jb
or
jmp
push
shrb
into
xor
leave
xor
scas
mov
mov
cmpsl
adc
rorl
mov
and
and
adc
les
roll
push
mov
sbb
cmp
sarb
repz
jmp
addb
mov
xchg
scas
add
enter
imul
xchg
push
jmp
dec
mov
cwtl
clc
mov
in
test
mov
dec
cmp
sbb
nop
loopne
ss
jle
push
or
jmp
pop
cs
icebp
daa
in
orb
push
pop
add
or
xchg
mov
daa
cs
or
mov
sbb
aam
adc
jg
aaa
int3
dec
movsl
sbb
and
cmp
lret
mov
jmp
adc
repnz
lods
dec
ret
add
inc
pushf
mov
add
mov
ret
pop
jno
pushf
clc
cmp
je
mov
aaa
push
outsb
sbb
pop
imul
add
or
pop
or
sbb
sbb
hlt
mov
cltd
and
cmp
inc
sub
ds
pop
aaa
push
cmp
or
pop
mov
xchg
mov
pop
xor
jmp
jbe
jp
jno
leave
dec
inc
divb
and
lock
lcall
xchg
add
testl
jo
sub
adc
adc
xor
mov
mov
fmull
lock
imul
add
aas
fmul
adc
pushl
dec
or
lods
add
and
inc
loopne
ja
push
das
adc
xchg
popf
inc
in
popf
cltd
xlat
mov
mov
fs
xor
add
mov
cmp
inc
and
add
push
push
andl
jo
mov
loopne
jecxz
into
jmp
cld
in
add
cs
sub
or
add
jp
add
shufps
mov
push
dec
lret
lock
or
mov
arpl
sbb
incl
add
push
mov
dec
fsubs
into
pop
mov
jo
mov
sbb
mov
test
mov
sub
enter
aam
dec
out
fld
fucomp
pop
fnstcw
pop
out
mov
dec
and
xor
test
pushf
push
xor
and
mov
test
pushf
ficompl
push
or
dec
shl
lret
rorb
push
or
push
out
jmp
loop
mov
push
pop
je
mov
or
push
and
ficoml
es
sub
or
mov
push
push
push
movsb
loope
imul
cld
mov
enter
jnp
fnstsw
movswl
lret
sbb
loop
clc
or
cmpsb
inc
fstps
sub
sub
not
dec
xor
cmpl
mov
inc
jl
cwtl
or
sub
sbbb
fwait
test
fsubs
loopne
ficompl
fwait
sbb
adc
jo
pop
mov
fdivp
jle
pop
cwtl
jb
movsb
fldpi
xor
adc
rcl
mov
push
je
sbb
mov
ss
fistl
adc
mov
cmp
or
xor
or
xchg
out
jmp
and
and
loopne
insl
mov
push
jg
xchg
sub
and
mov
test
mov
dec
lds
in
jbe
jo
dec
inc
movsb
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
sub
mov
sahf
adc
push
ja
inc
mov
test
sub
adc
mov
pushf
xlat
int3
pop
inc
add
in
inc
or
sub
lock
add
jo
jmp
lods
xchg
je
or
aam
mov
push
push
dec
push
pop
push
sti
xchg
out
xchg
rcr
ret
push
and
cmp
stos
popa
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
or
jge
add
pop
std
cmp
into
xchg
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
mov
xor
sti
add
icebp
inc
push
and
daa
mul
pop
test
loopne
fdivs
jl
insb
jecxz
jp
push
in
lock
stos
cli
and
jbe
stos
pop
pop
add
push
inc
xor
sub
or
jle
inc
cmp
mov
add
inc
pop
add
stos
andb
aas
es
ret
dec
or
inc
lea
icebp
xchg
inc
push
pop
sub
inc
shrl
mov
xorb
push
jg
jnp
pop
sub
call
loop
rolb
cmpl
add
outsb
out
pop
pop
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
mov
cmp
sbb
and
clc
sbb
popf
dec
call
jne
shrl
bound
pop
das
push
jae
and
inc
rolb
mov
sahf
jns
or
adc
lock
mov
mov
sqrtps
scas
pop
jge
lea
sub
and
jge
je
inc
in
xchg
xor
rcl
mov
pop
or
cmpb
or
mov
xchg
push
inc
aam
push
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
and
push
fdiv
jp
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
inc
dec
or
inc
pop
leave
adc
incb
sub
mov
sbb
mov
inc
ret
or
jns
jb
pop
push
pop
dec
lea
mov
movsb
bound
faddl
jge
or
sbb
test
popa
lods
sub
push
mov
into
loopne
xchg
push
rcrl
dec
aaa
icebp
cmp
cmp
push
cli
push
add
cmp
pop
push
push
jb
arpl
push
incb
enter
pop
mov
cmp
and
jo
ss
hlt
push
arpl
sub
cmp
inc
mov
fstpl
movsb
jcxz
mov
adc
cmp
arpl
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
push
add
pop
jle
or
fildl
pop
lock
mov
push
push
adc
push
lret
clc
pop
push
lock
and
jo
mov
adc
push
mov
push
dec
push
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
lcall
rolb
dec
inc
cwtl
pop
mov
lahf
dec
aaa
adc
call
xchg
add
jb
push
push
outsl
mov
js
inc
mov
mov
lea
inc
outsb
repz
add
test
add
pop
mov
sub
mov
cmp
insb
inc
imul
sahf
cs
or
ss
cmp
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
add
incb
dec
mov
inc
inc
mov
xchg
imul
call
and
fistpll
enter
arpl
sub
or
sub
sbb
inc
sbb
mov
rorb
mov
rorl
xchg
es
les
aam
add
popf
pop
fcmovu
jge
add
adc
jno
adc
dec
in
test
jle
testb
sub
xor
fadds
loopne
jne
xlat
mov
or
jbe
or
add
lds
cmp
cmp
xor
push
pop
sbb
out
sbb
rorb
xor
adc
sub
js
add
mov
popf
and
aas
sub
or
pop
add
xchg
rorb
jle
or
cld
mov
inc
or
pop
push
cli
sbb
add
add
imul
add
fbld
jmp
sub
add
cmp
ljmp
hlt
and
push
push
je
das
mov
fadd
enter
inc
add
adc
push
inc
push
mov
add
aas
and
add
enter
into
xchg
mov
xor
mov
inc
andl
push
jo
push
mov
add
cs
test
push
mov
xor
sbb
pusha
sbb
iret
test
daa
iret
ret
jmp
and
push
xchg
xchg
sub
adc
mov
xchg
push
addb
xor
and
push
sbb
aam
push
test
and
push
jmp
xorb
push
jne
push
clc
xchg
pop
xchg
and
push
fadd
dec
xor
xor
xchg
les
dec
push
mov
fcoml
in
js
and
movb
fdivrs
imul
adc
push
or
add
dec
ficoms
cld
push
and
movsb
jae
push
rcll
enter
push
insl
test
incb
adc
js
mov
dec
push
outsl
or
xchg
adc
or
sub
jbe
sub
test
sbbb
add
mov
fucom
or
add
in
push
js
popf
popa
xlat
ljmp
leave
and
add
insb
movb
fists
ficomps
enter
mov
cwtl
js
popf
neg
sbb
mov
stos
cmpsb
and
das
mov
icebp
adc
jg
ret
add
shll
es
xor
xor
sub
cli
in
call
mov
mov
jb
dec
adc
mov
packssdw
or
mov
shlb
sub
or
push
push
hlt
nop
adc
mov
sub
adc
mov
call
clc
sub
sbb
pushf
pop
xchg
rol
fsubrs
xor
xor
dec
test
pop
fs
pop
ljmp
lods
enter
inc
pop
pushf
dec
inc
es
cmp
mov
scas
sbb
clc
cwtl
xor
pop
data16
jmp
in
inc
and
xor
out
or
into
in
cld
sub
push
or
rorl
inc
call
insb
dec
sbb
xor
adc
add
adc
xor
jo
imul
js
mov
push
and
sub
ja
in
sbb
js
jg
xchg
fidivrl
xor
jmp
mov
sub
fimull
jl
loope
adc
cmp
fs
xchg
sub
add
mov
jg
and
lock
sarl
push
lea
xlat
jg
mov
jb
lods
dec
dec
inc
dec
pop
or
test
cmpb
rcrb
add
and
jnp
push
lods
ja
fldcw
dec
adc
loope
mov
icebp
rcrl
xlat
fsts
add
shufps
cmp
or
jp
fimull
xor
xor
sbb
jle
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fiaddl
mov
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
and
and
sbb
sbb
jmp
sbbl
fs
push
divb
push
cmp
push
push
xchg
inc
out
sub
sub
add
test
xor
enter
push
pop
lods
insb
lods
push
dec
push
mov
dec
out
sbb
jl
aaa
loop
sub
inc
or
and
push
add
popf
jmp
push
pop
je
lea
inc
nop
fstps
sbb
mov
or
pop
data16
inc
fwait
repnz
popa
je
bound
fwait
push
inc
je
dec
sbb
xchg
cld
xorb
jge
pop
adc
adc
popf
sbb
je
adc
movsb
adc
push
inc
or
push
inc
das
mov
popa
imul
sti
aaa
or
mov
inc
shl
insb
mov
mov
ret
arpl
test
mov
mov
inc
test
imul
mov
xchg
lret
ds
push
adc
test
cmpb
jne
int3
fidivs
sub
nop
fisubs
sarl
test
hlt
adc
clc
insb
ja
adc
push
popf
pop
push
aaa
cmpsb
loopnew
cmp
add
or
sbb
je
mov
hlt
ja
in
inc
push
popa
push
adc
or
incl
ljmp
fdivrl
sub
mov
cmc
add
xchg
add
push
loope
mov
push
xor
roll
push
mov
adc
xor
push
lret
sbb
sub
and
push
data16
addb
jg
cs
std
ret
push
push
pop
mov
inc
ljmp
sub
fidivrs
dec
insl
outsb
dec
hlt
or
cmp
and
or
mov
mov
mov
pop
inc
mov
rol
xchg
adc
jmp
insl
imul
iret
fwait
xchg
xor
mov
adc
clc
cmpl
pop
inc
mov
or
push
sbb
dec
push
mov
xchg
cmpb
jmp
orb
or
mov
pop
dec
jecxz
add
shrb
dec
add
cmp
enter
loope,pn
test
jb
adc
test
popaw
andb
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
mov
ret
lcall
test
and
outsb
arpl
sbb
add
add
rcrl
and
sahf
andb
or
int3
or
imul
das
xor
or
inc
cmp
pop
add
mov
mov
das
adc
cmp
dec
mov
pop
cmp
je
mov
mov
fstpt
insb
subl
push
ss
or
dec
sbb
mov
pop
xor
lcall
push
adc
fiaddl
imul
nop
lcall
cs
cmpl
arpl
or
cmpl
add
xchg
or
pop
dec
add
xor
inc
add
cmp
inc
jecxz
add
call
test
dec
add
sbb
lret
and
jmp
cmpb
out
pop
add
or
mov
mov
iret
mov
imul
pushf
push
push
adc
test
and
add
notb
jl
mov
lock
cmp
mov
movsl
and
cmp
leave
movsl
inc
jbe
add
jl
in
dec
lods
adc
sbb
cmp
or
dec
pop
adc
lcall
sti
and
push
sbb
dec
fidivrs
into
sahf
adc
adc
sub
xor
inc
sub
into
lret
clc
xorb
dec
movsb
dec
and
nop
dec
pop
movsb
fxch
shlb
outsb
lcall
xchg
mov
gs
and
add
mov
cmp
cli
adc
push
ficomps
adc
loope
pusha
sub
adc
clc
mov
add
loop
pop
add
mov
add
cli
jne
cmpsl
push
movsb
dec
push
sbb
cmpsb
or
mov
push
or
pop
lea
hlt
je
data16
sub
popf
daa
dec
mov
push
ja
mov
insb
subl
sub
sahf
xor
popa
xchg
adcb
inc
sbb
je
repnz
mov
fwait
push
test
loope
icebp
cmpsb
mov
pop
dec
pusha
je
jns
lea
repnz
sub
mov
popa
cwtl
ret
xchg
test
nop
addl
lret
pop
lret
xchg
insb
xchg
test
dec
jo
cmp
and
mov
inc
cltd
sub
or
add
push
add
inc
sbb
cmp
stos
test
or
ret
nop
cmp
stos
jo
test
emms
and
sbb
inc
sub
fildl
pop
cli
add
movsl
add
loope
jp
pop
sub
mov
fldl
ljmp
inc
daa
outsl
das
pushf
outsl
inc
xchg
icebp
add
fimuls
adc
in
int
inc
lcall
dec
mov
or
dec
popa
sub
mov
adc
xchg
lods
push
pusha
insl
popf
mov
scas
stos
and
add
aam
sbb
add
pop
je
add
xchg
and
pop
int3
or
icebp
add
inc
sbb
movsb
cmc
jbe
dec
cmp
mov
hlt
add
jno
loopne
mov
negb
add
jecxz
pop
call
and
jmp
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
adc
repnz
popf
mov
pop
jecxz
lock
mov
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
lea
sbb
out
movsb
adc
cmpsb
sbb
bound
pop
mov
frstor
jmp
sbb
xor
cmpb
call
idiv
xor
add
rolb
fstl
push
popa
nopl
inc
cmp
inc
push
mov
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
mov
cmp
aam
cmp
sub
jmp
rcrb
xchg
xor
adc
lret
imul
inc
dec
add
jbe
out
dec
fdivr
into
adc
rorb
push
cltd
or
adc
and
xor
clc
out
roll
leave
add
or
je
mov
iret
push
add
mov
or
and
je
sub
fs
sub
sbb
pop
bound
sbb
jne
enter
inc
dec
test
add
pushf
xchg
add
loopne
inc
aaa
add
adc
out
clc
add
add
xor
push
or
inc
xchg
add
or
xor
inc
inc
push
neg
neg
sbb
and
repz
sub
inc
sbb
add
sbb
mov
addl
adc
jae
push
inc
sbb
push
push
inc
and
fnstenv
nop
dec
sbb
adc
or
sbb
mov
jbe
adc
dec
jns
mov
push
push
pop
pop
pop
aam
loop
fisttpl
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
jg
add
adc
push
idiv
and
jl
cmpsl
enter
cld
lock
je
cmc
bound
cmp
inc
add
aaa
icebp
fiadds
lret
inc
into
movsl
push
pop
pop
add
stos
shlb
lahf
push
test
in
adc
movsl
jo
xor
test
push
or
aad
loope
inc
xor
jbe
aas
xchg
pop
cli
addb
aam
push
aas
in
or
push
cmp
push
push
jge
mov
dec
inc
mov
outsb
out
nop
add
or
paddusb
mov
lret
mov
pop
ret
cmp
add
xchg
leave
gs
inc
jmp
das
ljmp
add
imulb
push
xchg
or
adc
sahf
cld
inc
ss
adc
push
nop
aaa
dec
sub
cmpsb
sti
add
add
addl
fstl
mov
mov
xlat
into
enter
pop
imul
cmp
add
xor
gs
clc
or
enter
xor
test
adc
xor
xlat
ret
push
orb
mov
mov
mov
sar
or
es
mov
je
std
mov
jl
out
push
cmp
ja
add
cmp
pop
dec
cli
out
ret
cmp
jne
shll
leave
hlt
adc
mov
or
and
pop
pop
je
and
cmp
xor
orb
sbb
shrb
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
jne
call
and
cmp
dec
add
ret
es
xadd
mov
or
ret
movl
add
inc
aas
add
test
ficomps
mov
mov
push
adc
jne
xchg
cmpl
mov
aaa
add
adc
insb
jl
inc
jb
xchg
out
fstpl
jmp
andb
sbb
pop
cs
push
movsb
jnp
je
mov
sbb
push
fwait
mov
mov
push
imul
aas
mov
shr
shr
xchg
out
adc
rorb
or
lcall
movswl
mov
lods
ja
neg
push
es
ljmp
mov
cmp
mov
call
inc
cwtl
inc
xorl
sbb
mov
add
jmp
addr16
or
cwtl
mov
push
or
jb
jl
mov
or
dec
jle
repnz
in
inc
xor
adc
mov
mov
mov
and
and
lea
lods
jb
scas
inc
xor
cs
push
rcll
into
sahf
cmpb
repnz
addr16
mov
stos
loopne
xor
and
leave
out
inc
testl
push
jnp
lods
fs
inc
push
xor
cli
mov
cmp
mov
and
lea
rolb
adc
sahf
inc
mov
sub
push
les
dec
or
xor
or
dec
or
xorb
movsb
xor
inc
adc
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
mov
rol
add
jae
cmp
add
cmp
bound
shll
mov
add
shr
or
and
addr16
or
sbb
push
shrb
jg
or
pushl
mov
mov
mov
jbe
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
dec
dec
lret
pushf
jp
jnp
movsb
cmpsl
cmc
cmp
and
dec
in
repnz
add
xchg
cli
cli
inc
cli
div
rol
or
ret
pushf
jbe
test
push
movsb
cmpsl
and
fcom
fiaddl
test
sbb
mulb
cli
adc
push
sbbl
sub
dec
push
mov
pop
dec
fcoml
xor
and
and
pop
scas
push
mov
insb
lret
out
je
enter
mov
lock
inc
mov
stos
fidivs
or
pushw
sbb
loop
dec
inc
sar
out
jge
shl
jo
out
enter
pop
mov
mov
lret
dec
in
aam
imul
mulb
ss
shlb
adc
xchg
fdivrs
aam
int3
or
jbe
dec
sub
pop
cmpsl
or
mov
sbb
adc
cmpsb
xor
adc
test
fmull
or
mov
xchg
lret
sbb
fcmovu
mov
mov
insl
test
dec
movl
jg
add
add
add
xchg
add
idiv
adc
xchg
adc
jg
mov
dec
and
dec
gs
lock
out
or
add
enter
pop
jge
dec
inc
lock
or
cmp
jne
sub
add
mov
out
loopne
sbb
mov
pushf
pusha
mov
pusha
add
popa
mov
push
sbb
sub
aas
and
lock
sbb
movb
jmp
xor
add
pop
outsb
call
xchg
sub
dec
cltd
and
or
mov
shl
rorb
shrl
cli
pop
xchg
pop
adc
mov
xchg
fcoms
xor
fiadds
fsubrp
jle
inc
imul
jmp
xlat
pop
je
loopne
call
mov
or
pop
add
and
mov
push
in
pusha
insl
adc
fisubs
out
pop
sti
cmpsb
fwait
aad
add
mov
pop
orl
inc
les
enter
cli
into
or
movsb
or
pop
jb
mov
lahf
ljmp
aad
add
enter
sahf
mov
test
add
sub
test
mov
es
add
sarl
sbb
or
mov
inc
ljmp
jmp
add
push
std
jmp
add
inc
cmpb
or
add
dec
cmp
add
dec
add
add
fadds
add
inc
jp
push
call
jnp
dec
jp
jne
dec
mov
jb
int
addb
push
cmp
dec
push
loope
in
jbe
pusha
sub
cs
lret
or
rcll
jp
ret
adc
inc
or
mov
add
add
test
or
adc
stc
lret
xchg
push
mov
push
lods
push
xchg
adc
adc
or
repz
add
pop
push
movsl
es
jne
or
rorb
ret
sbb
adc
xor
test
mov
and
mov
xor
or
xchg
adc
inc
bound
sbb
sbb
inc
pop
mov
mov
pop
and
cmp
xor
into
pusha
sbb
sbb
inc
and
sub
and
pop
pop
adc
cmp
prefetch
lds
sahf
inc
ret
or
xor
addb
ror
and
mov
or
or
adc
and
push
pop
push
ja
push
or
or
mov
mov
or
xlat
or
push
pop
sub
jae
push
jo
xchg
adc
jne
and
sbb
fucomip
mov
shrl
clc
dec
jge
out
and
arpl
shrb
cmp
sbb
inc
add
cmc
add
nop
clc
mov
add
push
and
je
jnp
push
iret
enter
push
scas
adc
and
or
mov
xchg
orb
adc
xchg
rcl
or
add
add
stmxcsr
ds
pop
test
int
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
test
mov
and
outsb
lds
pop
sub
push
pop
xor
aaa
nop
pop
sahf
pop
mov
aam
pop
stos
adc
shlb
or
sbb
stos
cmp
pop
add
adcl
lods
sub
loopne
pop
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
mov
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
mov
loop
sti
adc
mov
add
popa
sub
in
mov
add
add
clc
sbb
push
mov
lret
push
pop
jbe
mov
scas
jbe
jnp
push
sarl
xchg
in
hlt
lret
xor
jge
and
jns
je
fldenv
mov
cmp
js,pn
add
pop
fdiv
jle
push
sahf
add
sbb
mov
jno
sbb
stos
je
dec
sub
mov
outsb
cmp
je
mov
stos
test
repnz
mov
iret
adcb
cmp
jb
cmp
jbe
dec
sub
enter
jmp
push
mov
cs
loopne
mov
fisubrl
cmc
fldl
or
mov
cwtl
push
or
and
mov
test
stc
gs
jle
mov
adc
add
popa
test
pop
mov
push
es
aam
mov
pop
inc
adc
inc
punpckhdq
loopne
cmp
addb
pushl
aam
lds
push
and
push
push
mov
push
aaa
sbb
pop
and
test
ret
xor
mov
enter
xchg
notb
sbb
cmp
lret
xor
push
roll
cltd
dec
pop
or
jne
subb
rcll
test
ljmp
sub
cmp
cs
aam
jne
sbb
sub
fsubrs
mov
or
ret
cmp
adc
mov
add
scas
pop
push
outsb
daa
fsts
adc
sar
xchg
pop
fisubs
mov
pop
test
mov
mov
lds
pop
notl
dec
loope
cmpsl
dec
sub
adcb
dec
mov
in
sub
lahf
inc
ret
mov
loope
aaa
dec
adc
and
push
pop
mov
inc
orl
call
add
push
ret
pop
or
hlt
cmp
pushf
sbb
pushf
inc
sub
stos
dec
or
into
pop
mov
mov
cmpl
mov
mov
push
cmp
imul
in
mov
clc
cli
jno
outsl
pop
xchg
add
jg
iret
rcrb
mov
gs
nop
push
mov
loopne
mov
jnp
iret
cs
adc
pop
call
cmpsb
lock
lea
mov
movsl
enter
fldt
test
incb
add
adc
jae
loop
das
adc
mov
lea
jmp
dec
fs
movsb
fcomip
sub
adc
ss
inc
mov
jae
ja
and
xchg
aam
add
mov
adc
dec
sbb
jne
leave
inc
insl
push
test
push
iret
sub
dec
jae
xor
push
mov
cld
inc
mov
sub
add
daa
arpl
inc
ss
or
push
je
insb
sbb
hlt
decl
xor
je
jg
orl
aam
inc
pop
scas
adc
xchg
jnp
pop
test
jecxz
cmp
jbe
test
lock
adc
imul
mov
lret
pusha
pop
rorb
mov
jns
push
sbb
mov
in
repnz
mov
inc
jbe
lods
lea
pop
nopl
cmp
fcomps
fs
sub
daa
data16
adc
out
loopne
jge
pop
call
les
pop
xor
test
sbb
and
sahf
or
xor
dec
push
rcll
push
lods
and
loopne
cmp
loopne
dec
pushf
jmp
or
popa
mov
jmp
clc
outsb
leave
push
pusha
xor
enter
mov
pusha
or
adc
xor
mov
sub
pop
jmp
js
inc
adc
ret
clc
sub
mov
add
mov
dec
inc
cmpb
sar
xor
sbb
dec
pop
push
and
mov
mov
cwtl
pop
sub
je
push
ret
pop
rol
rorl
cmp
stos
es
rorb
adc
ret
cmpsl
loopne
sub
or
out
xor
in
add
cmp
xchg
lods
add
xorb
imul
test
push
inc
dec
scas
push
pushf
ret
sbb
fimuls
sahf
dec
xchg
push
add
pop
test
ror
int3
jmp
fadds
add
add
sbb
push
and
rcrl
sbb
insl
loop
push
loopne
jmp
pop
xchg
or
cmpsl
test
popa
fs
or
mov
in
les
adc
and
add
outsb
mov
insb
add
les
cmp
mov
jo
cld
adc
pushf
dec
cwtl
mov
xor
push
aaa
call
dec
lret
or
push
mov
jp
insl
dec
or
into
inc
mov
xor
jns
js
rclb
addl
shl
adc
dec
add
add
dec
es
lock
fwait
mov
repnz
lods
dec
add
sbb
pop
xor
mov
or
pop
outsb
insl
clc
pop
popf
dec
insl
and
popf
and
jne
shrb
call
push
dec
sar
fwait
add
push
aam
pop
pushf
enter
or
cmpsb
mov
add
mov
sub
adc
sbb
fisttps
xor
mov
xchg
std
data16
xor
inc
and
jg
sbb
push
xchg
jmp
pop
sbb
adc
in
adc
pop
adc
cli
adc
inc
xchg
cmpsb
test
adc
xchg
shlb
xchg
cs
push
jmp
arpl
imul
dec
pop
sub
fidivrl
fiaddl
ja
mov
jmp
jb
add
push
mov
jb
das
inc
imul
add
xchg
jge
cmp
sub
add
sub
jge
clc
push
jg
adc
mov
sbb
cmp
ja
fidivl
jge
aaa
pop
inc
pusha
lds
xlat
cwtl
xchg
pop
das
push
xchg
add
mov
daa
push
inc
jmp
sub
or
mov
repz
dec
test
sub
xchg
std
jg
adc
lock
or
ds
push
add
fldl
add
icebp
cmp
push
pop
pop
test
add
shlb
or
call
inc
int3
into
lock
fadds
sbb
dec
and
dec
mov
mov
lea
add
xor
sub
movsl
push
cmpsb
repnz
jmp
push
and
nop
and
jmp
push
insl
jne
jb
lea
or
lock
jp
test
js
or
sbb
sub
push
add
pop
fs
popf
or
test
sbb
in
sub
or
xlat
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
lcall
xchg
fistpll
sbb
mov
sahf
adc
adc
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
xchg
shrl
jp
fldl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
mov
jmp
testl
rcrl
cmpsb
jo
mov
inc
xchg
cmp
popf
imul
push
and
and
inc
sbb
inc
lea
xor
cmp
mov
mov
inc
call
mov
pusha
jno
push
sbb
test
pop
shrb
mov
push
je
ret
pusha
mov
ret
bound
mov
mov
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
js
loop
es
sbb
xor
push
jmp
call
loopne
add
or
cmp
xor
push
push
add
adc
jle
or
pop
jg
insb
pop
inc
push
add
fs
pop
jl
mov
mov
sti
outsb
mov
xchg
rcrb
lods
push
or
adc
sbb
xchg
icebp
iret
loopne
inc
addl
adcb
sub
cwtl
fldcw
cld
or
inc
add
jo
stos
test
pusha
push
les
add
mov
mov
shl
aaa
loope
fsubs
insl
cmp
and
and
nop
adc
jnp
push
lods
inc
xchg
push
es
loope
mov
and
cwtl
ret
cmpl
dec
cmpsb
pop
adc
jne
jle
inc
or
sbb
push
sbb
dec
and
adc
cmp
shlb
mov
lock
das
adc
mov
add
test
push
cmpsb
jmp
and
pop
pop
push
jo
outsb
fcomps
add
mov
aam
rcr
rep
push
jle
cld
mov
push
pop
cmp
ret
movsb
push
scas
out
rcrb
fistl
lock
inc
or
sbb
repnz
mov
inc
xlat
in
mov
cmp
adc
push
or
dec
push
mov
and
mov
faddl
or
cmp
ds
dec
inc
pop
ja
pop
or
js
stc
repnz
and
add
das
insb
push
cmp
es
xchg
cmp
jbe
js
jle
pop
inc
jb
dec
mov
pop
je
and
cmp
pop
mov
pop
sarb
xor
dec
rorb
fisubl
ljmp
jmp
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcrl
jmp
outsl
sub
mov
testb
xchg
imul
sbb
push
add
add
or
shrb
cmp
in
test
inc
pop
adc
adc
cmp
jg
cmp
je
dec
jne
push
xor
jno
mov
jo
push
or
sbb
sub
inc
xor
cli
add
je
adcl
push
sahf
or
push
les
mov
aaa
add
std
lds
enter
inc
test
inc
cs
arpl
and
mov
or
dec
addl
je
mov
xchg
jns
mov
or
in
xchg
loopew
inc
sbb
xor
lock
sub
and
mov
in
xchg
inc
mov
lods
jle
testl
loop
mov
loop
fstpl
cmp
lret
cmpsl
clc
push
lea
je
add
aaa
jl
xor
mov
add
fimuls
xchg
push
hlt
jle
cmpb
sub
or
imul
add
xchg
mov
push
xor
add
fcmovb
mov
sub
jb
arpl
xor
sbb
push
push
dec
sbb
pop
mov
stos
sub
and
jl
enter
adc
mov
ret
add
and
cltd
sbb
xor
pop
imul
das
or
adc
sbb
adc
shl
sbb
scas
leave
test
xchg
pushf
push
cmp
mov
and
mov
mov
xor
and
or
rcll
or
dec
sbb
lret
mov
sbb
fs
cs
lock
jle
sahf
mov
sti
jecxz
add
cmc
xor
inc
mov
cmp
jne
sbb
adc
call
push
pop
imul
cmp
sbb
jg
add
imul
mov
xchg
mov
leave
test
imul
sub
dec
add
push
jmp
mov
inc
lock
or
hlt
movsb
or
lock
out
nop
lea
dec
adc
fcomps
jbe
and
and
daa
fdivl
lea
sbb
nop
ret
add
dec
push
movsb
popa
fstpt
adc
orl
jg
jmp
adc
rorl
shrb
lret
and
es
add
adc
cmp
jo
mov
jb
or
cmpsl
push
mov
mul
inc
scas
gs
pushf
cmpsl
or
shlb
jg
pop
mov
jae
scas
sub
push
js
jno
and
imul
sub
inc
bound
rcl
and
mov
unpcklps
or
cmpsb
inc
shr
adc
and
es
lret
jo
test
push
adcl
mov
cmp
or
xor
sub
aas
out
pop
mov
mov
xlat
je
sbbl
es
mov
and
cmp
jb
testb
rcrb
add
cmp
cs
or
sub
jge
push
jmp
inc
push
mov
cwtl
and
jb
mov
push
cmp
sbb
mov
sub
pop
adc
daa
clc
push
push
or
or
push
cwtl
sub
mov
xchg
xchg
cmp
xor
push
movsl
mov
jne
daa
push
adc
pop
or
sub
and
dec
outsb
sbb
test
sahf
test
shlb
pop
es
jmp
jle
sbb
jle
push
inc
pop
pop
cltd
mov
iret
pop
jnp
or
sub
xchg
push
mov
mov
mov
mov
inc
sbb
or
int
or
add
adcl
jle
test
je
push
inc
mov
adc
and
sub
push
mov
add
sub
xor
jb
xor
jne
add
adc
add
add
cmc
mov
pop
sti
adc
xchg
lock
int
out
movsl
cltd
add
aaa
cmp
push
push
inc
stos
mov
outsb
adc
push
inc
shlb
fcmovu
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fcomip
fildll
mov
sub
clc
jbe
pop
cmp
jmp
cwtl
mov
xor
aaa
and
add
pusha
loop
ret
sub
adc
enter
ficompl
adc
ret
fstps
adc
pop
push
or
mov
and
pusha
mov
mov
xchg
mov
xchg
nop
or
sub
aam
dec
in
sarl
jge
inc
jmp
xor
ret
jg
in
jb
movsb
fdivr
sub
push
cmpsb
jmp
dec
ss
outsb
daa
daa
cmp
fnstcw
lock
add
inc
dec
movsb
imul
repnz
insb
sti
scas
sub
jo
shl
test
sub
enter
fbstp
or
add
pusha
dec
xor
call
mov
in
jb
in
inc
lock
or
pushf
fmul
pusha
enter
cld
shlb
add
mov
fistpl
lds
inc
lods
xchg
sbb
ret
pop
jns
adc
add
cmpsb
sbb
dec
dec
dec
mov
xchg
roll
iret
mov
rcr
fwait
dec
dec
sbb
arpl
add
inc
lahf
call
fmuls
jbe
sbb
loopne
jno
add
fstl
test
fcomi
xor
andb
add
or
nop
shr
dec
or
sbb
push
cltd
ficoms
sub
out
jb
dec
mov
in
xchg
cmpsb
popa
rolb
in
inc
leave
les
stc
adc
mov
or
rcrb
adc
push
and
or
and
aad
cmc
lret
mov
pop
push
push
pop
dec
lcall
jle
cmp
faddl
sbb
loopne
in
rolb
ja
cmp
pop
dec
fisttpll
cmpb
je
xchg
push
xchg
pop
fcoms
sub
int3
loopne
in
and
mov
rorb
jb
cmpsb
call
or
aaa
rolb
les
jb
test
mov
imul
gs
shlb
pop
test
xchg
pop
adc
rcrl
insb
pop
fsubs
mov
cmp
outsb
xchg
push
jno
xchg
dec
repnz
dec
xor
insb
jo
js
xor
and
add
sbb
call
adc
xlat
loopne
cwtl
sub
and
mov
stos
inc
xchg
xor
inc
pop
pop
dec
or
push
mov
cmovnp
xchg
lods
dec
int
lret
inc
lea
mov
ret
mov
jno
and
mov
mov
xlat
in
sti
gs
and
scas
nop
xchg
inc
enter
aam
push
lock
mov
adc
cmp
inc
sbb
les
ret
sbb
sub
inc
sbb
ds
cli
int3
shrl
xlat
dec
sbb
push
pop
sub
out
jl
add
cmp
cwtl
fimuls
or
sbb
shl
xchg
in
aaa
xor
xor
adc
in
jnp
jo
pop
and
insb
jnp
ds
push
xchg
and
adc
cmpl
push
stc
subl
cmpl
xlat
inc
pusha
dec
or
aas
mov
cmp
ret
fidivl
push
lock
hlt
or
rcl
adc
enter
aam
call
inc
out
add
movsb
fstps
push
and
or
or
cmp
bnd
out
jnp
iret
sbb
subb
mov
sbb
dec
int3
mov
mov
jno
fdiv
jne
pop
push
loopne
fwait
test
sbb
jmp
fadds
enter
aam
out
or
xchg
jmp
movsb
lods
addb
xor
daa
ljmp
cwtl
loopne
pushf
les
push
ret
loopne
dec
add
and
in
jbe
or
or
adc
xchg
iret
loopne
les
in
adc
push
dec
inc
jl
adc
icebp
add
dec
dec
shlb
call
lahf
in
gs
adc
in
cwtl
mov
dec
das
adc
or
insb
or
in
lock
test
and
mov
dec
hlt
mov
xor
mov
ret
mov
popf
or
cmpsb
sbb
sbb
or
dec
popa
test
scas
add
orl
or
pushf
out
and
jp
out
pop
adc
add
outsb
or
inc
mov
std
cmp
push
out
mov
mov
out
in
adc
rcr
out
adc
lea
repz
inc
sbb
iret
add
mov
aad
leave
rolb
fwait
enter
rorb
loopne
ljmp
sub
dec
push
fcomip
inc
test
jg
movsl
sbb
inc
cli
mov
je
inc
daa
nop
push
subb
mov
or
sbb
lock
lea
add
in
pusha
shl
sbb
inc
xor
dec
fidivs
xlat
jns
pop
fcompl
xlat
in
xlat
cs
test
inc
repnz
imul
or
in
stc
icebp
mov
sub
test
xchg
cmp
mov
or
loopne
or
stc
loopne
repnz
sbb
adc
and
cltd
nop
aam
fsubrs
cs
shl
pop
push
sub
mov
push
adc
hlt
cwtl
bound
xor
add
dec
repz
fs
lods
inc
daa
mov
and
lods
stos
mov
movnti
loopne
fdivl
xor
inc
sub
test
mov
push
movsl
cmp
aas
xor
or
cmp
cmp
and
or
or
or
enter
lock
cmp
cmc
pop
enter
jb
xor
cmc
test
adc
mov
movsb
xchg
test
add
mov
cmc
mov
xor
or
sub
or
pop
or
cmp
das
mulb
movsb
or
inc
adc
imulb
mov
xor
fmuls
rcll
add
add
shlb
aaa
adc
mov
dec
push
out
testl
jecxz
pop
sub
sbb
ret
in
push
mov
negl
add
test
aas
faddl
dec
xor
insl
idiv
and
in
mov
fsubs
mov
dec
pushl
bound
mov
clc
mov
and
mov
shlb
adc
add
enter
push
cld
stc
test
mov
stc
push
jbe
fcmovbe
arpl
xchg
push
xor
mov
mov
add
pop
cmpsb
push
aam
test
add
push
pop
cmc
aam
enter
and
ret
adc
or
in
or
adc
fmuls
das
ret
xor
add
cli
fs
test
call
and
in
cli
sar
rorb
fsubs
adc
push
sbb
insl
sub
lds
adcb
adcl
loope
push
sti
test
pop
pop
jmp
ja
xlat
xchg
test
jno
sti
lock
gs
add
in
loopne
xor
add
stc
or
mov
push
pusha
sbb
mov
jns
and
xor
in
sub
xor
or
adc
test
or
or
and
xor
ljmp
adc
in
and
test
insb
bound
call
loopne
and
lock
daa
shll
icebp
fdivs
jge
cs
lock
jmp
fisubrl
call
push
cmpsl
ss
loopne
cwtl
mov
lock
icebp
fcoms
mov
fnsave
ret
add
cltd
push
insl
inc
jge
xchg
xchg
or
and
fisttps
sbb
addr16
pop
aam
jl
orb
adc
push
inc
add
add
mov
in
dec
lock
or
gs
mov
js
adc
xor
or
or
pop
push
or
fstps
adc
mov
mov
push
movl
jae
xor
push
popf
ss
adc
xor
xlat
ret
adc
cs
btr
fldenv
mov
lods
adc
adc
pusha
add
repz
inc
test
and
sub
inc
push
fistl
xchg
dec
in
or
les
pop
int3
pinsrw
in
dec
fwait
add
mov
cmpsb
ficompl
iret
enter
mov
mov
mov
push
add
mov
mov
sub
adc
test
pop
testl
mov
outsb
xor
movsb
fsubrl
sub
pop
add
push
arpl
lahf
inc
jmp
aad
xlat
add
adc
mov
popf
ficompl
rcr
aas
aam
cs
fsub
pop
push
push
cmp
mov
js
add
aad
add
add
sub
sbb
lahf
int3
in
dec
in
das
unpcklps
aam
or
or
fdivrs
mov
daa
push
popf
xchg
dec
movsb
add
or
xor
mov
push
cmp
jmp
xchg
dec
mov
in
cltd
icebp
fs
leave
aam
lcall
imul
nop
and
test
fcompl
hlt
jmp
insb
imul
adc
insb
mov
jo
jnp
les
test
sbb
pop
lret
enter
mov
mov
mov
aaa
inc
adc
sbb
jp
mov
and
sbb
int
push
and
push
or
movsb
fdivr
enter
shlb
clc
mov
shll
push
mov
out
lea
pushf
sbb
mov
or
call
jns
or
or
sub
imul
xchg
int3
into
inc
scas
test
stos
filds
fadd
inc
xchg
rcll
sbb
adcl
xchg
dec
ret
or
and
leave
inc
fimull
sub
repnz
add
adc
fcmovnbe
dec
mov
or
add
xchg
mov
sbb
or
movsb
shl
jecxz
ds
movsb
stos
adc
inc
cmp
jnp
mov
cmp
push
sub
subb
mov
pop
xchg
mov
sbb
pusha
jnp
fdivr
notb
dec
and
mov
inc
push
loope
jecxz
rcl
adc
pop
xchg
lods
sbb
test
pop
and
in
loopne
dec
fisttpl
repz
mov
movsl
jo
xchg
rolb
xchg
jno
xor
jmp
push
pop
push
add
push
in
test
cmp
jne
mov
adc
push
rclb
rcl
mov
mov
mov
lods
inc
out
or
adc
aaa
and
rolb
dec
jae
cmp
sti
or
aad
dec
scas
pusha
sub
sub
and
pop
mov
lret
mov
addl
test
push
xchg
dec
and
fcompl
adcl
inc
dec
and
lcall
outsl
xchg
test
adc
xor
push
or
call
rcrl
addr16
orb
cmp
lock
orb
test
xchg
xor
sahf
ljmp
and
xlat
lods
mov
cmpsb
jge
rclb
and
push
in
push
add
lock
loope
push
push
adc
xor
movsl
dec
push
sbb
add
dec
push
in
loopne
add
sub
jo
adcl
jne
dec
rorb
xchg
dec
lods
adc
in
rolb
in
ja
sbb
nop
outsb
adc
enter
add
xor
in
adcb
shlb
lods
test
adc
fiaddl
aad
shlb
testl
les
sub
shlb
sub
into
mov
in
sbb
aam
mov
daa
mov
dec
rorb
das
nop
and
and
cwtl
test
test
enter
arpl
les
sbb
cmp
divl
in
sbb
sbb
pop
fs
add
mov
pop
pop
mov
push
sarl
xor
mov
push
mov
inc
jl
pop
mov
enter
cs
push
insl
mov
mov
aad
sbb
push
test
aad
inc
pop
sbb
add
sbb
sub
inc
pop
fbstp
sbb
jne
xadd
add
mov
gs
inc
push
jne
mov
scas
or
insb
adc
aas
cmp
adc
sbb
ja
es
adcb
xchg
xchg
xchg
mov
roll
jns
add
and
sbb
adc
xor
push
sbb
dec
mov
das
mov
mov
lods
lods
test
dec
insl
dec
call
xor
rol
jbe
jle
jge
lahf
pop
insl
sbbl
sarb
and
in
js
popf
ret
or
das
gs
mov
nop
aas
in
scas
and
dec
mov
and
orb
add
call
mov
push
pop
xor
sbb
xor
inc
mov
inc
lea
cmpb
std
imul
add
inc
imul
sub
mov
sub
nop
mov
jl
in
fcmovu
lcall
xchg
push
and
std
pop
loopne
fsubs
and
and
loopne
call
push
mov
or
pop
loopne
imul
and
mov
jmp
dec
fidivl
loop
adc
test
push
and
mov
push
jb
mov
sarb
cmc
iret
sub
fsubl
push
and
mov
add
or
mov
call
pop
rcr
and
scas
push
sub
aaa
or
and
or
movsl
mov
jne
fadds
fdivr
sub
loopne
add
lock
addl
sbb
xorb
popa
mov
mov
xor
andb
outsl
and
or
cmp
mov
pop
and
mov
pop
mov
mov
mov
push
imul
ljmp
adc
insb
xor
cwtl
dec
movsb
mov
call
cmp
aam
enter
rclb
inc
jecxz
lods
xchg
jbe
cli
dec
dec
lea
adc
fs
push
insl
jo
lea
xchg
imul
adc
fs
fs
cmp
sbb
cltd
fs
dec
inc
cmp
orb
sub
xor
je
add
fdivr
test
add
sbb
aas
mov
or
scas
sbb
jp
mov
int
inc
enter
cmp
jnp
pop
movsb
adc
in
test
es
sub
or
adc
cld
jo
cltd
or
sub
push
enter
or
shlb
stos
aam
adc
scas
outsb
sub
cwtl
lcall
nop
pop
test
adc
xchg
mov
mov
or
jne
test
mov
aad
adc
sub
inc
pushf
add
pop
addb
fwait
xchg
pop
lods
add
mov
xor
sub
xchg
fnsave
xchg
xchg
dec
enter
pop
push
mov
jne
pushf
dec
test
popf
xchg
in
mov
lcall
out
cmp
pop
dec
sub
out
mov
xor
cmp
cmp
mov
sub
es
inc
or
enter
jl
dec
mov
ss
int3
ja
pop
int3
mov
rclb
cmp
adc
push
inc
scas
or
ret
add
pop
xor
leave
mov
adc
jb
fs
or
ja
les
scas
bound
xchg
pop
rolb
imul
insb
inc
fldl
pop
dec
jo
jmp
push
cmp
fs
fwait
xchg
sbb
lcall
adc
nop
insb
aad
xor
mov
sbb
scas
adcb
test
movsb
cmp
inc
xor
mov
test
jecxz
fdivr
mov
add
inc
xor
push
popa
addb
jns
mov
dec
xor
test
push
test
xor
test
movsb
mov
and
inc
test
and
orl
outsl
int3
jmp
mov
ret
push
xor
add
inc
xor
and
dec
jae
aam
sti
xor
push
test
adc
in
push
pop
add
cwtl
fldcw
and
xor
mov
in
pop
adc
gs
in
or
stos
add
inc
xor
and
rcrb
imul
enter
jo
mov
adc
test
sub
mov
xchg
leave
ret
mov
inc
test
xchg
adc
xor
push
data16
pop
dec
ret
dec
hlt
adc
mov
push
xor
movsl
rcrb
pusha
dec
jns
xchg
shrb
lods
imul
add
ss
test
push
dec
popf
xor
add
and
test
rolb
mov
dec
orb
cmpsl
bound
and
sbb
push
adcb
icebp
push
lods
adc
pusha
push
shll
shrb
icebp
mov
rclb
inc
popa
adc
xor
je
push
mov
mov
xchg
sbb
loopne
or
bound
test
or
stos
cmp
aam
pop
pop
inc
add
or
mov
in
cs
dec
xchg
mov
mov
fiaddl
bound
aam
push
lea
dec
mov
pop
add
jg
nop
add
scas
cwtl
mov
cmp
cmp
dec
sbb
jns
mov
outsb
mov
dec
dec
dec
dec
movd
and
fdivr
xchg
adc
mov
lret
adc
mov
jb
and
and
ss
and
xor
inc
orl
cmpsb
pop
repz
mov
sti
sub
cltd
por
ss
mov
xor
push
xchg
fs
push
movsb
sbb
js
sbb
nop
mov
nop
arpl
test
cmp
fwait
stos
ret
int3
adc
push
pushf
rorb
and
sbb
mov
outsb
aaa
mov
shrd
movsb
inc
ror
insl
xchg
xchg
pushf
pop
xchg
bswap
leave
leave
leave
leave
enter
xchg
xchg
fcmovne
test
lds
xchg
orb
jo
leave
add
aam
push
data16
push
sub
jnp
and
cld
xlat
pushf
pushf
pop
lds
mov
jo
stc
mov
lret
sbb
xchg
inc
adc
adc
inc
scas
mov
je
xchg
pop
sbb
xchg
mov
and
fnsave
xchg
jl
aam
mov
inc
jb
mov
mov
mov
pop
test
xchg
sub
scas
pop
cmpsl
or
jge
inc
es
lock
inc
dec
popa
adc
cmpl
or
enter
mov
rolb
rcl
xchg
lods
arpl
sbb
and
mov
or
cltd
pop
xlat
inc
add
ljmp
xchg
cmp
push
mov
test
movsb
mov
jmp
sbb
mov
xor
in
out
insb
rolb
xchg
push
pushf
mov
lds
or
jo
pushf
mov
lahf
in
repz
inc
cmp
dec
mov
les
out
mov
jge
add
add
mov
mov
sarb
and
inc
add
add
dec
mov
cmp
push
movsb
movsl
dec
cmp
dec
adc
cltd
fs
sbb
and
mov
pusha
imull
pop
xor
jecxz
aam
and
cmpl
dec
ss
xchg
jl
leave
pop
sub
push
and
jbe
or
xor
sub
sbb
xlat
adc
adcb
imul
ret
insl
and
dec
pop
mov
movsb
jecxz
bound
leave
xchg
push
loop
add
inc
mov
xor
stc
dec
aad
sub
inc
cs
invd
inc
sbb
outsl
fdivs
mov
stos
aam
shl
xor
adc
or
mov
stc
les
nop
loopne
cmpsb
std
shlb
dec
loopne
pop
sbb
movsb
add
es
dec
cltd
sub
imull
mov
sbb
fcomps
mov
test
add
xchg
sbb
xor
test
pushf
mov
mov
adc
adc
xchg
or
and
mov
sbb
and
stc
les
mov
mov
cmp
or
movsb
test
add
nop
inc
jl
dec
xor
mov
adc
xchg
xchg
xchg
ja
xchg
xchg
rol
mov
mov
aas
xchg
xor
or
mov
mov
inc
es
pushf
and
xlat
sub
movsb
ficompl
jo
add
ljmp
jmp
xchg
pop
adc
and
pop
lods
fs
push
add
xor
fisubl
dec
mov
adcb
inc
arpl
repz
sub
jno
adc
int
bnd
das
insb
mov
xlat
add
das
sbb
nop
add
leave
and
jmp
dec
pop
mov
enter
pop
mov
pop
or
jo
or
std
jo
sbb
push
neg
xor
mov
add
mov
pushf
xor
sbb
or
dec
mov
jbe
pop
or
push
mov
or
jb
mov
or
sub
repnz
dec
sub
push
test
ficompl
pop
jp
inc
adc
mov
sub
cmp
ret
sub
sbb
adc
xor
and
lods
jbe
dec
sbb
sub
in
adcb
push
popf
mov
mov
test
add
pushf
cld
icebp
out
xor
or
lds
nop
inc
iret
clc
icebp
dec
and
popa
mov
pop
xchg
fadds
lahf
test
mov
dec
pop
xor
enter
dec
adc
push
mov
push
sbb
pusha
sub
push
sub
add
repnz
mov
iret
out
fwait
call
sub
jae
xor
sub
loope
sub
jp,pn
pop
jno
lods
sub
cmp
mov
aaa
mov
add
and
adc
imul
sbb
jmp
aad
sbb
mov
faddl
mov
xchg
xchg
and
and
push
mov
test
lock
sbb
fidivl
xchg
adc
lcall
pop
dec
adc
and
xor
mov
sub
sub
cmp
insl
push
jne
movsb
aad
andb
xor
sub
or
mov
cmpl
cwtl
or
fistps
lods
and
mov
push
xchg
inc
sbbl
adc
add
jns
frstor
mov
mov
mov
outsb
jnp
or
and
pop
rep
imull
dec
add
sbb
and
push
leave
adc
sub
imul
and
aam
movsb
scas
aam
adc
adc
or
inc
sub
sbb
mov
add
xor
loopne
pop
and
pop
push
shll
add
push
sbb
pop
or
fcomp
imul
jg
or
push
jo
xor
sub
push
pop
mov
and
nop
outsl
ret
xor
std
xorl
and
pop
ret
inc
dec
ret
and
stos
enter
test
push
in
dec
mov
rclb
call
cli
mov
popf
mov
sub
mov
sbb
incb
bound
jmp
push
and
enter
dec
jnp
rclb
dec
ficoml
push
leave
rep
test
cwtl
enter
fldt
test
je
and
adc
ret
cmpsb
lret
sbb
test
xor
sti
mov
sub
xor
or
sbb
lret
shll
inc
gs
pusha
cmp
xor
cmp
mov
cmp
sbb
mov
and
inc
lods
bound
adc
mov
pop
adc
add
push
add
jo
pop
sub
add
incb
jbe
cmp
cmp
fcmove
xorb
xchg
bound
sbb
sbb
cltd
jbe
jno
xchg
adc
mov
pusha
outsb
push
pop
mov
adc
nop
inc
test
sbb
add
push
ret
pop
pusha
and
and
xlat
adc
popf
mov
movsb
fcomps
sub
ret
xor
mov
adc
test
mov
add
mov
mov
adc
or
pop
js
push
and
and
es
punpckhdq
mov
gs
pop
mov
add
ret
pop
inc
or
or
pop
dec
testl
sub
bound
test
aaa
insl
sub
mov
mov
lret
rcrb
adc
inc
add
jb
ja
xor
push
dec
cmp
sahf
shll
and
inc
in
lret
in
insl
cwtl
rcrb
dec
call
mov
mov
repnz
add
mov
dec
std
and
movsb
sti
movl
sbb
jmp
adc
inc
sbb
fstpt
sub
lahf
pop
nop
out
movsb
sub
xor
mov
fadds
shrb
out
movsb
inc
xchg
push
and
cmp
jne
test
dec
lea
movsb
movb
mov
sub
je
fcomp
aam
or
and
inc
and
dec
pop
pusha
cmp
je
xor
arpl
loope
cmp
adc
and
pop
xchg
je
push
or
clc
sub
icebp
push
mov
and
daa
jge
xchg
test
push
xchg
mov
push
push
mov
imul
test
fwait
out
repz
and
jo
jns
out
mov
out
out
add
sbb
push
jae
divb
loope
roll
sub
push
xchg
sahf
mov
out
and
aas
add
testb
mov
and
push
jg
rolb
clc
jnp
mov
add
adc
mov
outsl
jg
rcll
xchg
adc
or
cmp
rclb
cmpl
insl
dec
test
add
nop
add
into
pop
adc
test
and
push
test
mov
sub
add
daa
mov
sub
fdiv
aas
rdpmc
add
ja
pop
in
incl
sub
outsl
fwait
shlb
flds
mov
and
insb
outsl
arpl
imul
aam
gs
jb
sub
popa
arpl
mov
popa
jb
outsb
je
gs
das
add
sarb
push
insl
adc
mov
lcall
push
rolb
jb
js
je
jb
gs
cmp
or
outsl
add
add
add
add
jne
les
inc
and
jb
dec
fmuls
mov
add
add
aaa
jl
sbb
or
imull
push
cwtl
inc
xor
inc
push
add
mov
push
ss
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
adc
repz
push
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
fs
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
aaa
lods
mov
into
cmp
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
push
push
stos
push
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
add
xor
pop
xor
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
inc
add
imul
outsb
and
push
or
and
pop
pop
cmp
test
jns
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
mov
scas
mov
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
push
xchg
pusha
inc
jbe
push
push
lahf
fs
insl
or
inc
ss
lods
jp
pusha
xchg
push
popl
loopne
cs
jp
cmp
push
andb
xchg
daa
mov
dec
adc
orl
popa
push
outsb
mov
insb
pop
pop
push
push
jae
or
es
pop
cmp
call
pop
hlt
clc
addr16
xor
ja
das
outsb
gs
mov
sbb
add
mov
inc
mov
adc
push
push
push
dec
testl
pop
scas
cltd
pusha
dec
push
lods
cmp
push
fisttps
inc
ret
lea
ds
adc
jle
jb
mov
imul
mov
cwtl
push
inc
adc
mov
xor
clc
gs
sbb
mov
or
subl
ljmp
insb
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
fstpt
dec
jnp
cmp
cmp
ds
je
repz
and
sub
inc
jl
ret
es
addr16
jle
dec
mov
add
add
cmp
sub
pop
or
sbb
adcl
das
push
jb
aaa
cmp
pop
and
and
push
mov
mov
xchg
pop
pop
and
aad
outsb
stos
addr16
push
jbe
rcr
sbbl
adc
xor
gs
lock
pop
imul
xchg
test
sahf
inc
jae
mov
pop
sub
popa
sub
and
jl
out
sub
repz
iret
cmp
xor
sbb
addr16
add
clc
lock
nop
out
lcall
push
mov
mov
lods
test
cwtl
repz
mov
test
addb
js
je
cmp
jo
out
out
pop
fs
pusha
aas
pop
push
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
rep
sahf
out
or
cld
call
iret
enter
dec
sub
sti
call
sahf
out
pusha
push
dec
inc
xor
cmp
out
or
cld
in
sarb
mov
out
lock
mov
stc
xchg
stc
mov
xor
or
jnp
stc
and
fdivrp
inc
clc
jle
mov
ja
xor
xchg
sbb
sub
insb
and
add
addl
push
jg
add
stos
arpl
add
add
and
push
add
in
loopne
add
add
add
roll
inc
and
sbb
shll
push
pop
fisttps
jle
jg
or
or
test
mov
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
ljmp
mov
mov
mov
mov
ret
enter
int3
int
dec
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
push
test
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
mov
and
sub
stos
jmp
dec
lea
adc
stos
add
pop
outsb
gs
popa
data16
add
cmpsb
pop
jns
movsl
mov
add
fiaddl
data16
les
push
arpl
insb
fs
sbb
dec
jne
je
xor
outsl
lods
mov
push
femms
loopne
lahf
pushf
pcmpgtw
xor
push
inc
adc
xlat
add
push
xor
push
dec
inc
dec
jg
inc
fimuls
dec
dec
inc
add
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
popa
push
or
clc
andb
int
mov
leave
hlt
mov
mov
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
and
in
pop
pop
repnz
jmp
mov
and
es
sbb
add
inc
fwait
test
xor
jo
scas
pop
mov
movl
sbb
push
fildl
or
ljmp
push
into
mov
xchg
and
lahf
cmovg
add
dec
xchg
je
fbld
pop
and
ret
fwait
imul
sbb
sti
es
jae
rorb
add
mov
adcb
scas
push
or
mov
arpl
bound
jg
rcll
cmp
test
sti
or
ja
popa
daa
add
daa
je
sub
cs
ret
lahf
je
lahf
fucomi
and
xchg
lret
xchg
ret
adc
arpl
notb
cs
jb
add
mov
sbb
adc
mov
pop
xchg
xor
jae
in
jae,pt
insl
jle
or
push
fisubs
cmpsl
mov
and
lock
pop
inc
jmp
arpl
xor
rclb
jno
fbstp
out
sub
fisubs
push
push
ret
jg
mov
sbb
xchg
push
sbb
add
sub
jl
stos
jg
out
or
xor
sbb
jo
aaa
jns
outsb
xlat
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
xchg
push
add
dec
mov
cmp
pop
pop
ret
out
mov
adc
jp
mov
jo
inc
popa
shrl
jo
hlt
mov
es
es
adc
sti
sti
cmp
shlb
daa
or
push
mov
mov
rorl
sub
loopne
icebp
arpl
dec
dec
cmp
js
fsubs
ja
dec
jp
or
jo
aas
ja
imul
bound
in
jno
mov
dec
imul
ret
out
inc
scas
fcmovnbe
pusha
addr16
out
xlat
adc
fbld
je
and
insl
int
pop
aas
arpl
daa
ret
add
sbb
pop
gs
jo
mov
out
push
faddl
andl
je
push
and
pop
jbe
push
mov
add
cmp
inc
fldt
and
pop
cmpb
add
arpl
mov
stos
push
xchg
lret
sub
push
les
daa
loopew
test
and
scas
mov
fbstp
add
ret
pop
mov
mov
mov
mov
je
xchg
push
loope
jb
push
add
or
arpl
inc
mov
or
push
jp
popa
jae
or
cld
bound
bound
adc
fisubrs
ja
out
out
mov
push
adc
aaa
adc
xchg
pop
stos
test
push
pop
push
push
mov
push
mov
ja
bound
or
mov
and
jnp
icebp
or
jne
add
lock
dec
pop
aas
dec
call
push
jmp
inc
scas
mov
pop
mov
xchg
js
mov
dec
pop
jecxz
push
cmp
inc
outsb
mov
jb
push
push
cmp
sub
or
push
sbb
add
ds
push
stos
inc
mull
inc
jnp
push
jae
push
pop
mov
addr16
shl
push
lret
and
xor
bound
testl
inc
xor
add
aas
jmp
and
daa
outsl
add
adc
inc
addr16
ds
aas
ja
inc
cs
adc
xlat
pop
shll
adc
dec
orl
inc
push
inc
jnp
jnp
mov
arpl
dec
dec
in
loope
insb
xchg
inc
inc
sbb
pusha
stos
ja
sbb
imul
inc
ss
mov
aaa
mov
dec
sbb
jno
and
loope
push
pop
je
pop
pop
lds
aas
pop
jbe
scas
adc
bound
mov
mov
mov
roll
xchg
jnp
lock
inc
arpl
pop
pop
push
mov
orb
or
orb
ja
cs
mov
mov
inc
jl
jl
mov
lret
mov
pop
sbb
mov
loop
arpl
lret
push
addr16
bound
mov
ja
rol
mov
jl
cmp
mov
bnd
jae
jno
ret
gs
jl
push
jecxz
ja
pop
push
pop
jl
iret
js
jo
jnp
sbb
cmp
push
jmp
es
inc
mov
lds
ja
pop
popf
out
pop
outsb
mov
out
orl
out
cwtl
shlb
jno
jo
mov
imul
jl
dec
outsl
lret
jl
jo
mov
pushf
bound
jns
rcrb
clc
jae
adc
es
sarl
lods
push
clc
mov
cmp
clc
xor
push
mov
inc
adc
adc
fadds
push
jle
xchg
push
imul
flds
pop
and
pop
push
js
xchg
add
push
push
outsl
push
pop
pop
or
xchg
mov
fisttps
aaa
sbb
pop
inc
sbb
test
inc
or
mov
jae
insb
imul
or
xchg
bound
scas
dec
push
jne
mov
jg
fiadds
negl
jo
outsb
xor
out
scas
push
pop
adc
jecxz
aad
ljmp
sbb
insb
test
fcoms
add
add
popl
je
aaa
es
test
das
fidivl
jno
addr16
js
mov
imul
push
add
or
pop
push
cmp
mov
int
or
fidivl
mov
sub
sub
pop
inc
fbstp
cwtl
insl
shlb
xor
insb
out
insl
inc
inc
sub
xchg
fiaddl
push
inc
popf
add
mov
or
bound
into
addr16
adc
cmp
es
ss
fdivp
mov
ds
int3
inc
in
imul
jg
mov
or
lds
fmull
push
arpl
addr16
inc
cltd
inc
dec
or
mov
add
mov
insb
add
jae
add
or
adc
fimuls
pop
movsl
cmpsb
arpl
inc
adc
das
inc
iret
mov
popa
mov
push
addb
shlb
xchg
lahf
outsb
dec
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
arpl
test
repz
mov
cli
mov
jns
and
stos
lahf
repz
jbe
icebp
push
add
es
addr16
repnz
in
cwtl
test
cmpsb
push
repnz
ds
xchg
ds
fldl
pop
data16
ja
or
jb
jno
sbb
cmp
out
add
mov
je
jb
mov
mov
jae
ss
sbb
ds
sti
movzbl
cmp
and
and
arpl
xor
xor
mov
pop
adc
mov
push
addb
int
mov
jne
je
ss
cmp
xorl
adc
adc
sub
ja
adc
shll
cmp
loopne
movsl
xchg
aas
rcrb
mov
popf
push
mov
imull
inc
arpl
push
cmpsl
xchg
and
scas
ja
sti
xchg
mov
dec
push
adcl
js
adc
xchg
or
dec
lea
lea
inc
mov
sahf
lea
push
and
adc
aaa
movsl
icebp
fsubs
cmpsl
add
xor
hlt
add
xchg
push
adc
push
lock
cmpsb
pop
repnz
pop
mov
hlt
fisubrl
jbe
ds
pop
lods
push
add
or
int3
push
movsb
ja
test
or
mov
xchg
or
shrb
jg
mov
pop
pop
mov
mov
add
je
adc
inc
fs
bound
cmpsb
jnp
xchg
movsl
and
inc
fiadds
jecxz
les
xlat
lods
sar
dec
inc
aaa
dec
add
pop
je
popw
or
movl
dec
jnp
push
sub
aam
mov
mov
or
pop
mov
inc
adc
lea
xchg
ds
push
inc
pop
dec
sub
iret
dec
stos
sub
pop
jmp
sbbl
pop
repz
clc
iret
inc
mov
adcl
rorl
rcrb
es
inc
adc
outsl
lds
mov
mov
sub
xchg
add
outsl
loopne
mov
and
mov
push
add
aad
in
cmp
dec
mov
add
add
or
aaa
and
cwtl
sub
jbe
imul
shrl
stos
jae
inc
jp
movsl
mov
adc
movb
dec
fbld
xchg
aaa
pop
bound
jmp
arpl
inc
xchg
jge
outsl
dec
xchg
je
icebp
jb
fs
js
les
js
jbe
jae
inc
andb
xchg
or
cmc
xchg
fwait
stos
jbe
cmpsb
loope
out
push
jns
push
mov
or
ja
pushf
fcompl
mov
lsl
or
mov
fidivl
xlat
push
push
jecxz
sub
jae,pt
test
xor
dec
out
xchg
inc
lcall
sbb
aas
dec
dec
pop
mov
inc
mov
mov
js
add
push
call
push
xor
fisubrl
imul
data16
cmpsl
pop
inc
mov
fnsave
stos
shrl
add
movhps
ja
or
mov
arpl
lods
pop
pop
add
jns
mov
push
cmc
out
out
je
imul
arpl
xchg
je
stos
lahf
push
mov
push
dec
xchg
shlb
jmp
je
cmpsl
mov
adcl
jb
pop
icebp
cs
test
mov
or
test
ret
lds
cmpsl
push
cs
cmpsl
adc
push
and
mov
inc
cmp
negl
out
fdivs
imul
stos
jae
sbb
imul
inc
or
xor
adc
push
add
bound
xor
addr16
pusha
ja
inc
push
imul
aas
add
pop
xor
mov
aaa
fnstsw
push
pop
mov
pop
ret
and
ss
popa
int
outsl
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
mov
sub
arpl
push
loope
insl
scas
mov
mov
pop
cmpsl
xchg
xlat
pop
mov
ds
dec
in
pop
iret
inc
outsb
loope
sub
fs
fiadds
push
xchg
addr16
or
push
mov
jbe
pop
jo
arpl
pop
push
or
mov
inc
push
pop
sbb
jnp
mov
jnp
jb
xlat
pop
push
fisubs
jo
push
inc
push
cmp
pop
jg
add
adcb
out
addr16
jo
jp
xor
je
insb
scas
loopne
aas
xor
in
cli
push
push
push
sub
es
jb
push
cmp
push
pop
add
cmp
xor
push
ret
sub
or
pop
xlat
sbb
ret
imul
stc
cmp
data16
or
iret
mov
cmpsb
adc
test
adc
and
mov
add
fwait
cs
inc
mov
stos
xchg
daa
inc
or
mov
lock
arpl
imul
push
fs
das
fwait
lcall
cmpl
mov
mov
mov
arpl
sub
push
push
loop
push
cmc
das
outsl
adc
dec
aaa
add
and
push
sbb
ss
add
sbb
mov
cwtl
mov
out
mov
cmpsb
xchg
fsubs
push
into
aam
or
push
outsl
daa
pusha
lcall
fidivrs
pop
inc
mov
xor
loopne
dec
das
outsb
push
xorb
insl
lret
push
mov
pop
orl
popa
xchg
decl
or
add
or
pop
sbb
sbb
sub
push
cs
mov
dec
rclb
push
add
pushl
adc
cmp
inc
arpl
cmp
ja
bound
in
adc
jmp
les
jae
arpl
out
pop
xchg
and
pop
add
dec
ja
out
xor
dec
cmp
loope
mov
orl
sub
fsubrs
mov
mov
rsm
fdivrs
andl
mov
inc
lcall
sub
dec
push
pop
minps
aas
push
adcl
rcrl
jle
dec
mov
jmp
pop
pop
jecxz
insl
repz
push
mov
mov
aaa
add
push
mull
push
sahf
cmp
gs
pop
das
outsl
cmpsl
adc
pop
les
jae
adc
test
jnp
mov
fimull
cmpsb
jo
pop
scas
pusha
add
dec
xchg
push
jmp
adc
test
or
lods
aaa
ja
inc
ficoml
mov
pop
cmp
mov
pop
loopne
in
mov
lea
in
sti
in
add
push
dec
pop
cld
pop
shlb
add
add
insb
fstl
in
push
push
dec
movsb
pop
mov
cmp
jae
and
sbb
ret
mull
dec
add
and
js
mov
push
in
dec
pop
bound
les
pushl
mov
sbbl
push
loop
mov
xorl
mov
mov
das
ljmp
mov
inc
out
sti
push
orb
fbstp
sub
adcl
dec
sbb
jo
and
pop
add
das
add
inc
lods
sbb
ret
jmp
int3
push
insb
arpl
mov
add
mov
adc
mov
lods
sbb
jmp
adc
pop
or
mov
pop
test
add
dec
jo
imul
out
mov
aaa
das
sbb
cmpsl
iret
sub
cs
add
scas
aas
scas
push
adc
xor
and
adc
aam
or
iret
or
mov
sbb
pop
fistpl
popa
lods
jecxz
rcr
or
xlat
and
xchg
xchg
mov
pop
mov
push
mov
xor
inc
push
jae
inc
imul
pop
jecxz
cmp
cmpsl
dec
mov
scas
add
andl
mov
jnp
sbbb
pusha
mov
push
aad
fnstcw
mull
fs
jecxz
clc
scas
mov
jo
push
daa
aaa
lahf
add
sahf
nop
push
jg
insl
inc
cwtl
or
pop
sbb
and
push
mov
cmp
scas
mov
add
jmp
in
push
push
insl
arpl
bound
roll
fcoml
test
in
mov
popf
push
xor
xor
and
scas
in
in
mov
push
leave
test
jb
pop
pop
or
mov
adc
pushf
dec
lods
shrb
push
sbb
enter
scas
js
push
leave
push
jb
aam
xor
and
push
jnp
test
dec
scas
xchg
stos
xchg
inc
push
jb
pushf
cmpsl
hlt
mov
pop
cmpsb
clc
inc
cmpsb
movsb
jne
pop
and
xor
movsl
movsl
dec
dec
mov
movsl
add
movsb
mov
aad
mov
push
leave
mov
and
pushf
dec
mov
stos
fbld
pop
and
mov
jb
dec
mov
in
mov
mov
mov
mov
jb
ljmp
xchg
push
leave
push
popf
popf
test
imul
data16
les
and
inc
shlb
aas
inc
outsl
adc
aam
xor
pop
pop
pop
cmp
xchg
rorl
ret
je
inc
inc
pop
add
shlb
loope
fistl
xor
dec
inc
inc
xchg
push
push
sbb
test
inc
xlat
inc
pop
and
lods
lods
add
push
aas
pop
loop
dec
push
sbb
mov
dec
mov
arpl
imul
or
aas
imul
push
das
dec
sbb
push
or
fidivrl
inc
pop
cmp
aaa
addb
mov
imul
xor
test
push
inc
xlat
and
push
dec
push
out
sbb
rolb
neg
sbb
push
das
rclb
and
adcb
add
dec
data16
pop
push
sbb
aas
xchg
fildll
sbb
adc
push
mov
scas
sbb
lahf
pop
or
sub
inc
sub
aaa
inc
cli
add
push
push
scas
inc
and
push
mov
xchg
inc
jmp
nop
jo
dec
sbb
aaa
push
ljmp
or
jbe
out
aaa
fistpll
iret
aaa
adc
scas
pop
mov
add
das
inc
or
outsl
push
adc
jecxz
ret
lahf
mov
mov
sub
mov
gs
pusha
addl
pushl
mov
jg
aaa
or
push
or
push
inc
aaa
scas
and
dec
pop
test
xchg
ror
inc
daa
push
sbb
js
pushf
rorl
cmp
test
outsl
rclb
outsl
jbe
inc
add
fcoml
dec
call
jae
and
lret
xlat
pop
sahf
pop
or
xor
loopne
fcoms
and
xchg
rolb
inc
inc
daa
sbb
sub
pop
or
pop
sub
xchg
pusha
mov
rol
ficoms
bound
mov
push
dec
inc
es
push
mov
inc
dec
bound
sti
std
loope
cmp
jne
addr16
add
daa
bound
or
push
je
push
js
mov
cs
sub
adc
icebp
cwtl
cltd
cmp
subb
arpl
pusha
loopne
pop
jae
jns
mov
les
in
ss
in
or
bound
jae
imul
sbb
xor
idivb
mov
sub
shrb
dec
stos
push
adc
fiaddl
iret
and
hlt
pop
pushf
shlb
xchg
outsl
jae
repz
push
adc
iret
repz
sbb
push
cmp
repz
andl
jp
push
cltd
or
xchg
stos
push
repz
push
sub
push
aam
pop
insl
push
adc
fiaddl
stos
das
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
shlb
stc
das
xor
scas
incl
inc
mov
pushw
aas
inc
iret
out
mov
sub
insb
sahf
out
push
pop
mov
push
add
jnp
repz
outsb
movsb
pop
push
insl
mov
mov
cmp
push
add
cmpsl
cli
cli
into
testb
dec
jg
dec
ror
or
sti
lock
sbb
bound
lock
jae
js
add
push
inc
pop
mov
xchg
add
add
ljmp
dec
pop
pop
mov
inc
push
pop
push
jo
push
adc
dec
mov
lahf
imul
scas
das
popf
stc
add
cmp
xor
xor
pop
and
andl
adc
imul
pop
and
or
cmpsb
lea
cmp
adc
mov
cmp
out
and
fildll
jns
and
stos
mov
add
cmpb
pop
pop
push
or
or
add
inc
and
dec
les
lea
aaa
mov
and
rcrl
adc
sbb
pop
adc
ss
mov
lock
push
orl
ja
mov
es
sub
mov
mov
push
sahf
push
cs
cmp
xchg
sahf
out
xor
jnp
and
out
es
add
mov
add
insl
xchg
jnp
andl
cmp
jns
xor
jae
fs
mov
sub
into
xor
pop
js
aam
jecxz
pop
xlat
dec
shlb
pop
sub
mov
or
add
js
xor
inc
cmp
or
es
btr
jbe
dec
or
inc
push
loop
shrb
jbe
push
dec
mov
bound
sahf
ja
adc
xor
out
jne
xor
cs
lret
cs
cmp
push
ret
sarl
cmpsb
xchg
ja
retw
fsubrp
sbb
pop
mov
mov
xor
push
inc
jmp
arpl
jnp
loop
sub
arpl
fs
inc
mov
iret
cmp
adc
dec
daa
xor
out
imul
push
mov
cs
loopne
fstl
and
imul
pop
pop
into
fnstsw
mov
push
es
ss
outsb
pop
push
pandn
notl
daa
dec
jb
das
inc
pop
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outsl
jecxz
cmp
push
push
neg
jnp
sub
push
insl
mov
fisubrs
mov
xor
push
jp,pt
jp
iret
jnp
add
ds
fiaddl
clc
fidivs
jg
dec
das
xor
lock
xchg
jp
pop
outsl
pop
pop
out
loopne
dec
xor
xor
or
outsl
outsl
and
enter
inc
jb
jb
dec
xchg
xor
lods
cmovg
push
sbb
loop
push
sbb
lcall
inc
test
inc
mov
mov
push
sbb
mov
inc
cmp
pusha
mov
xchg
jo
ret
pop
inc
inc
js
jle
sub
lock
xor
add
fcmovnbe
ljmp
daa
mov
sub
xchg
and
xor
push
or
bound
pop
dec
inc
inc
mov
xchg
mov
xchg
jg
les
sbb
dec
mov
call
lcall
sbbl
ret
test
inc
inc
add
adc
out
arpl
shlb
jae
stos
mov
adc
andb
pusha
scas
repz
mov
mov
sbb
lahf
push
mov
add
nop
pop
dec
daa
push
sub
mov
dec
mov
mov
cmp
dec
and
pop
ficompl
sbb
dec
outsb
mov
pop
cli
shrb
push
xchg
mov
and
push
addr16
rolb
out
sbb
or
stos
mov
pop
hlt
sub
insb
outsl
popa
fs
outsl
insb
adcb
pop
pop
aas
add
sub
add
jbe
add
and
add
inc
sub
int
imul
scas
mov
movsb
lock
pop
ljmp
sub
shlb
push
pop
sub
gs
sbb
push
xor
shlb
cwtl
mov
pop
jg
ja
push
outsl
in
jae
push
mov
xor
or
idivb
jecxz
bound
mov
enter
push
mov
xchg
add
pop
jo
push
cmpsb
std
mov
cmp
jo
arpl
scas
hlt
ss
pop
pop
ja
xor
xor
push
inc
cmp
pandn
adc
pop
lea
je
adc
jae
jae
dec
rorb
xor
in
push
pop
mov
fdivrs
fldt
lret
add
mov
push
sub
pop
jnp
mov
pop
outsl
ret
lock
jmp
js
lahf
lcall
push
arpl
inc
sub
dec
pop
dec
jl
xchg
add
out
jecxz
addl
fisubl
imul
cs
ljmp
cmp
mov
or
xchg
sbb
stos
arpl
and
sti
dec
pop
popa
fldt
sbb
lock
iret
cmp
data16
lahf
inc
mov
add
bound
movsb
xor
jno
outsb
mov
dec
pushl
inc
andb
daa
jns
mov
out
test
or
and
mov
outsb
dec
arpl
jae
lea
sbb
jbe
push
imul
xor
das
add
push
popf
repz
add
and
push
les
sbb
mov
sub
stos
pop
movsb
push
xlat
adc
add
inc
sarl
mov
push
femms
dec
add
scas
lea
data16
xchg
fiaddl
shlb
inc
mull
push
push
xor
pop
lahf
sub
imul
daa
mov
fadds
dec
cmp
mov
testb
or
outsb
push
mov
int
jne
inc
push
scas
mov
dec
mov
aam
adc
fadd
popa
add
add
mov
ds
adc
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
pop
repnz
pop
sbb
xor
mov
mov
fsubs
sbb
mov
push
dec
xchg
jecxz
dec
push
pop
pop
cmp
pop
add
pop
adc
adc
pop
push
and
xchg
xor
mov
loopne
dec
push
dec
sub
imul
pop
mov
mov
add
or
jle
addl
push
mov
sub
xchg
push
mov
test
push
insb
dec
mov
and
dec
cmp
mov
sub
or
in
jl,pn
cld
xor
xor
jb
xchg
fdivrl
int3
inc
mov
dec
lods
pushf
dec
mov
or
outsl
repnz
xor
test
inc
imul
dec
lods
inc
pop
dec
xchg
scas
pop
add
lods
pushf
inc
dec
xchg
sbb
sahf
hlt
inc
or
fwait
xor
pop
jecxz
dec
adc
ja
lods
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
mov
cmp
inc
repz
daa
mov
xor
pop
push
aas
imul
push
ret
pop
imul
aaa
mov
jl
inc
dec
xchg
inc
jmp
daa
bound
je
push
cwtl
adc
bound
imul
dec
pop
add
sbb
sub
push
add
add
xor
aaa
fisubrl
rclb
cmp
jge
inc
es
popa
xor
xlat
xchg
mov
rorb
scas
pop
push
rorb
notl
imul
loopne
dec
push
push
scas
xlat
jp
xorb
inc
imul
sub
push
iret
daa
xor
adc
xchg
outsb
pop
addr16
sbb
push
inc
dec
xchg
cmc
and
mov
popa
inc
pop
js
xlat
aas
inc
inc
push
jne
inc
call
xorl
adc
mov
iret
add
and
out
push
inc
fwait
pop
inc
pop
jb
aaa
aam
stos
pop
mov
xor
adc
test
mov
cmpsb
mov
sbb
bound
stos
xor
fbstp
insb
imul
outsl
dec
and
push
push
mov
aaa
dec
inc
arpl
jl
cs
fisttpl
add
insb
iret
jbe
jl
hlt
adc
cmp
fsubp
test
pop
subb
fstpt
iret
dec
popf
pop
inc
loop
mov
int3
out
mov
push
jmp
or
sahf
xchg
pop
subl
pop
mov
test
data16
notl
add
push
lahf
es
inc
insb
mov
ret
test
jae
insl
movsb
xchg
mov
adc
push
push
fwait
mov
and
push
and
lar
and
imul
jp
aam
sar
cmp
imul
cmpsb
leave
and
add
push
dec
pop
negb
insl
jnp
push
jl
push
mov
sub
and
out
cmp
mov
xor
or
sub
out
cmp
cs
jge
fwait
lds
pop
or
iret
mov
ss
adc
push
les
repnz
imull
hlt
testl
fidivs
sarl
add
stc
mov
push
movb
pop
xchg
inc
aaa
mov
fcompp
mov
jmp
sbb
repz
inc
lods
psllq
mov
testb
mov
jg
aaa
inc
or
negl
pop
or
cs
out
mov
add
mov
jecxz
mov
movsb
es
neg
jne
inc
push
xor
dec
nop
cmpsl
add
fdivp
popa
arpl
inc
jp
das
inc
jl
jns
fwait
out
xchg
cmp
icebp
xor
je
insb
sahf
out
leave
loop
add
jnp
iret
inc
ja
push
mov
out
sbb
jle
inc
out
mov
add
sahf
int
outsl
or
repz
test
sahf
out
sahf
ds
andl
insb
cmp
dec
mov
out
sahf
addr16
ss
jb
iret
mov
sahf
test
sub
cmp
lock
jecxz
iret
and
jg
dec
sbb
scas
sub
push
sub
adc
stc
add
adc
jecxz
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
or
or
sar
int3
push
and
pop
sbb
enter
adc
in
call
or
adc
daa
or
pop
adc
add
or
pop
mov
adc
sbb
sub
repnz
leave
cld
orl
xor
aam
or
ja
outsb
outsb
inc
mov
xor
push
js
data16
imul
insl
gs
cmp
dec
pop
push
dec
xchg
push
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
lcall
rorb
xchg
js
shrb
pop
push
dec
lea
push
dec
ljmp
and
push
popa
je
and
adc
inc
fldt
inc
push
push
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
mov
xor
sbb
dec
movsl
andb
inc
or
mov
and
lahf
pop
sub
lods
lcall
pop
addr16
loop
mov
aaa
sbb
cmp
mov
outsl
xlat
ja
mov
jo
inc
mov
stos
lods
aas
dec
sbb
xchg
and
pop
inc
adc
mov
mov
jecxz
xor
testl
popa
or
aaa
fs
cmp
inc
out
jb
xchg
pop
aaa
rcr
out
sub
out
and
sub
xor
daa
add
mov
sysexit
ja
les
mov
fisttpl
bound
dec
lahf
cmp
filds
inc
or
inc
jo
xor
lahf
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
das
adc
push
and
xor
lahf
inc
js
sub
pop
jb
addr16
add
add
in
stos
add
and
push
cmp
lods
adc
jo
xlat
dec
sbb
aas
sbb
lahf
or
add
dec
add
inc
mov
gs
aaa
sbb
or
repz
xor
das
cmpsl
mov
xchg
add
xchg
push
ja
mov
mov
ja
aam
addr16
mov
mov
sub
pop
aas
jae
mov
andb
push
or
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
sahf
add
add
sub
push
btrl
adcl
mov
imul
mov
add
mov
mov
ja
das
mull
mov
inc
das
mov
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
push
fildl
pop
das
mov
bound
pop
jp
loopne
inc
dec
push
incl
pop
push
aad
pop
jecxz
test
push
lret
pop
sub
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
or
add
sub
dec
mov
sbb
push
repz
test
roll
xchg
push
jmp
add
mov
aas
push
add
push
arpl
sti
adc
ret
fcmovbe
adc
sbb
adcl
das
mov
pop
add
xlat
pop
and
mov
pop
outsl
scas
or
inc
jmp
aas
add
mov
subb
jnp
imul
cmpsb
inc
inc
push
fidivl
push
inc
xchg
sbb
cmp
mov
repnz
popl
pop
lods
xorl
mov
pop
pop
inc
mov
jno
mov
not
inc
aaa
mov
dec
bound
dec
mov
les
xchg
inc
mov
lahf
inc
dec
sbb
inc
xor
dec
stos
arpl
lock
cmpsl
push
pushl
jg
shlb
mov
testl
pop
pop
inc
lret
inc
pop
test
aaa
jns
je
and
or
out
xchg
nop
outsl
mov
adc
and
lret
or
or
insl
jo
je
aaa
shr
or
ds
jo
jae
es
mov
outsl
xor
push
jg
xor
xor
add
fdivrs
cmpsb
jns
je
jne
or
add
push
aas
lcall
ret
aas
das
das
mov
mov
dec
jae
mov
sbb
mov
cmp
cmp
fstpt
push
inc
push
mov
cmp
imul
push
or
or
iret
pop
inc
popa
cwtl
lods
mov
ret
add
xchg
movsb
mov
cmpsl
pop
stos
pusha
and
outsb
loope
sbb
bound
cmp
inc
mov
jae
sub
pop
adc
test
adc
push
mov
push
jmp
jo
push
pop
dec
push
das
inc
jb
dec
cmpsl
pop
stos
outsl
test
insl
cli
push
add
add
adc
emms
or
fidivrl
jb
sbb
adc
test
movsl
ret
mov
xlat
mov
out
or
fstpt
js
aaa
inc
insb
rorb
enter
sbbl
push
xlat
lret
pop
dec
loope
cmpsb
jb
out
pop
sub
ds
popf
jp
icebp
add
push
pop
outsl
sbb
push
dec
inc
dec
push
xchg
add
add
inc
sbb
mov
pop
mov
out
jg
ret
jbe
add
add
pop
add
sbb
into
inc
add
les
and
pop
ja
and
pop
outsl
lods
fnstsw
das
ds
das
sbb
sbb
add
imul
daa
push
and
jg
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
fs
es
js
insb
cwtl
lahf
add
cs
sbb
push
and
lods
insl
and
les
lds
sub
ja
insb
xchg
push
sbb
gs
shll
xor
popw
jo
sbbl
dec
aaa
cmp
lret
jbe
push
push
in
push
xchg
xor
adc
add
orl
jmp
mov
outsb
in
data16
xchg
aam
sbb
xor
mov
ss
sbb
push
cmpsl
sbb
fimull
data16
lahf
outsb
divb
in
lret
into
push
mov
shl
subb
cmp
xor
sbbb
mov
insb
scas
cmpsb
pop
push
dec
xchg
add
insb
scas
push
enter
aaa
add
pop
sti
xchg
in
mov
outsl
mov
mov
or
jecxz
mov
ss
adc
pop
int3
pop
xchg
push
cmpsl
lea
dec
or
popf
popf
mov
popl
inc
push
or
mov
sahf
daa
adc
jb
mov
mov
out
push
imul
outsl
mov
je
and
loopne
and
bound
sub
sub
cmp
jns
ret
outsb
in
adc
je
mov
inc
push
adc
std
xor
fsubs
sub
sub
mov
mov
jo
xor
clc
loop
dec
inc
dec
and
push
add
jne
push
js
mov
popa
mov
outsl
fs
gs
jo
jns
iret
js
mov
inc
mov
xor
insl
jne
mov
push
dec
pop
fiadds
sbb
xor
or
addr16
cmp
lds
sub
jbe
cmpl
jae
inc
insb
pop
push
and
pcmpeqd
out
loope
imul
sbb
aaa
xor
mov
outsl
jo
xor
negb
mov
mov
xchg
mov
or
inc
xadd
sbb
inc
cmovo
add
inc
mov
in
mov
in
cmp
nop
jo
maxps
mov
inc
lahf
sub
sti
inc
xor
mov
pop
jecxz
xorb
das
jbe
add
push
sbbb
sbb
cmp
aas
add
xor
cmpw
push
xchg
push
jns
insb
fcoms
in
pop
mov
jo
xchg
cmp
sahf
dec
fcmovnu
les
repnz
add
xchg
les
xchg
mov
outsl
inc
daa
outsl
inc
lods
mov
xchg
xchg
mov
insl
xchg
outsl
call
and
outsb
iret
repz
aam
fsubrl
out
sub
test
pop
fisubrl
xchg
cmp
add
dec
mov
mov
add
nop
push
rcrb
jbe
xor
nop
sbb
mov
cmp
mov
outsl
lock
xchg
pop
or
inc
xchg
pop
in
mov
pop
fdivrl
push
cmp
cmpsl
pop
xchg
and
fstpt
cwtl
push
movsb
cwtl
rolb
orb
sahf
or
in
out
inc
cs
dec
aam
data16
mov
bound
xchg
js
adc
movsb
insb
and
movsb
or
test
mov
sbb
out
pop
mov
inc
fdiv
dec
cltd
adc
sbb
inc
daa
cmp
mov
outsl
xchg
xor
insl
adc
mov
cmp
roll
push
xchg
enter
movsb
xchg
mov
add
jae
adc
pop
adc
into
lcall
add
repnz
fdivs
lahf
lcall
add
lcall
jl
outsl
sub
das
scas
jbe
aam
push
nop
inc
dec
dec
lock
in
in
cld
fwait
add
js
orb
mov
fwait
daa
mov
mov
pushf
loopne
fwait
insb
data16
and
out
or
or
ja
push
aas
fwait
or
pushf
sbb
fdivrs
and
ret
xor
pusha
push
add
mov
jl
mov
or
adc
aam
xorb
daa
repnz
nop
or
mov
inc
adc
or
cs
push
jo
cmp
test
divl
mov
pop
popf
int3
push
fdivl
orb
out
test
sahf
sbb
sub
pop
jnp
in
ja
lcall
insb
jl
enter
lahf
pop
xor
cmp
repnz
mov
enter
testb
lahf
mov
or
dec
rolb
lahf
pop
insb
out
xchg
pusha
xlat
ja
mov
pushf
lods
mov
inc
pushf
loopne
insb
mov
and
mov
or
test
add
les
mov
add
dec
sahf
rclb
cmp
mov
cmpsl
cmp
mov
mov
call
clc
xchg
mov
jnp
jb
call
or
adc
movsl
and
mov
ja
in
mov
cs
mov
fwait
or
hlt
mov
enter
call
and
cmpsl
mov
repnz
in
movsl
jg
dec
mov
scas
cmp
and
test
loopne
nop
addr16
mov
cs
loopne
jle
ljmp
push
push
lahf
mov
das
ja
enter
out
xchg
movsb
enter
add
or
hlt
clc
fstps
movsb
and
fimuls
movsb
xor
inc
lahf
dec
lahf
jns
imul
in
sahf
or
or
les
aam
call
dec
mov
cmpsl
les
nop
sbb
outsb
imul
cmpsl
loopne
sahf
or
jl
or
push
cmpsl
insb
shll
iret
sahf
adc
shl
and
int3
push
push
cmpsl
sarb
jae
cmpsb
adc
and
cmp
pop
push
push
cmpsl
jg
sub
out
js
push
pop
in
push
mov
jns
dec
inc
movsb
mov
enter
add
mov
test
push
xor
push
cmpsl
pop
jnp
jg
lahf
jg
cmpsl
pop
stos
js
jo
aas
push
jns
in
cmpsl
pusha
pop
mov
sub
push
mov
mov
ds
or
nop
mov
ja
rorb
cs
push
nop
rcrb
js
subb
ja
es
sbb
cmpsl
test
inc
mov
and
test
pop
dec
dec
add
out
dec
jbe
inc
lahf
pop
jo
rolb
push
inc
or
js
inc
adc
mov
inc
sahf
or
ja
mov
outsb
stos
pop
adc
push
mov
lock
jbe
loopne
mov
int3
sahf
imul
xchg
push
loop
or
mov
jno
xlat
jg
aam
in
mov
cs
xlat
cmp
loop
ljmp
pop
add
push
inc
jg
or
inc
sahf
xchg
and
ja
repnz
nop
inc
cwtl
fcompl
popf
xor
push
pushf
xchg
push
mov
fmul
jbe
mov
test
jnp
mov
ja
mov
daa
addb
movsb
enter
iret
mov
adc
pop
xor
sahf
in
inc
jo
xor
ja
ss
pusha
lods
and
xor
and
push
inc
mov
dec
out
rorb
inc
sahf
mov
pusha
fbstp
mov
enter
enter
push
inc
enter
pop
ja
inc
scas
sub
mov
and
fimuls
ljmp
inc
adc
add
insb
inc
inc
shlb
rcrb
test
scas
adc
or
bound
jns
lahf
mov
adcb
jns
in
mov
cs
or
shrl
and
and
in
dec
leave
jae
out
movsb
ja
lahf
pusha
jo
mov
push
nop
out
sahf
inc
mov
add
push
aam
lock
mov
aas
subb
fsubs
jbe
popl
jmp
pop
mov
popl
pop
enter
ss
or
inc
add
mov
mov
out
mov
push
and
dec
dec
outsl
add
jb
add
addr16
or
fsubrs
xchg
add
jo
cmp
repnz
test
adc
xchg
mov
lock
mov
cmp
cmp
daa
mov
push
jbe
outsb
iret
pushf
push
call
add
cs
addr16
fcom
rcl
mov
daa
fisttpl
mov
mov
enter
cmp
push
mov
mov
pushl
pusha
cwtl
inc
pop
mov
pop
pop
inc
loopne
fisubrl
push
cs
dec
xchg
pop
data16
ja
cmpb
xchg
ss
inc
adcb
pop
xchg
dec
enter
xabort
or
adc
or
or
addr16
andl
add
out
ja
daa
scas
clc
mov
dec
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
scas
push
pop
aaa
add
jns
out
mov
lock
les
into
mov
les
sbb
pop
mov
insb
sahf
nop
je
cwtl
jl
inc
sahf
cmp
cmp
pop
sahf
mov
mov
aam
mov
fs
sub
mov
fwait
sbb
ja
jns
fsubs
mov
xchg
dec
push
lock
jl
xchg
inc
xchg
or
pop
iret
jo
inc
add
seto
mov
repnz
inc
xchg
cwtl
add
inc
test
hlt
jbe
ja
js
out
fistpll
add
pop
or
jle
ja
dec
fisubl
jb
fcmovb
jg
push
xchg
rcr
or
dec
and
aaa
outsl
lock
in
push
inc
lods
pusha
pop
jb
push
inc
inc
mov
adc
nop
push
pushf
dec
outsl
add
add
or
inc
jl
inc
aaa
adc
and
or
pop
or
jl
dec
mov
outsl
cmp
adc
idivl
adc
mov
mov
mov
add
enter
jl
and
xor
fistpll
lods
aas
out
inc
test
aaa
mov
mov
scas
add
repnz
adc
push
lret
out
inc
xor
cmp
xor
sub
inc
mov
sbb
push
ljmp
sub
sub
int3
cmpsb
pop
add
in
xorb
cmp
xlat
aad
into
mov
mov
les
out
adc
mov
jle
ja
mov
mov
jo
jle
cmp
add
out
ja
cmp
push
inc
mov
lock
mov
mov
cltd
inc
xlat
aaa
fists
push
jbe
pop
scas
add
or
outsb
test
outsl
cmp
sub
hlt
cwtl
inc
enter
insb
and
mov
fbld
jl
mov
push
adc
dec
inc
testb
outsb
jbe
pop
push
push
pop
addr16
leave
mov
add
clc
es
sbb
mov
pop
jg
ror
fcomps
mov
jg
cmp
and
scas
clc
add
hlt
aaa
enter
mov
sbb
pop
pop
mov
aaa
lds
dec
ja
jmp
out
pop
cmp
test
ja
cmp
inc
dec
shlb
xorps
out
in
push
int
xchg
mov
pop
daa
out
jl
aaa
or
and
hlt
adc
cmp
dec
push
mov
xorb
ret
xchg
fmuls
bndstx
in
mov
cmp
je
js
ror
add
or
fcoml
clc
popf
sbb
nop
or
dec
mov
ljmp
xlat
or
xlat
mov
push
orb
scas
in
add
push
mov
popf
sub
pop
ret
ret
or
mov
dec
inc
outsl
and
dec
add
cltd
inc
nop
insb
add
scas
ret
pusha
push
call
pop
aaa
mov
lods
in
sub
jbe
or
ja
aaa
stos
sbb
outsl
nop
adc
mov
mov
les
mov
xor
in
add
jle
lods
inc
dec
and
sarb
mov
adc
daa
and
data16
dec
jnp
in
lds
aaa
pusha
and
adc
and
lds
fimuls
pushf
xchg
outsl
fistps
aad
orb
aaa
sbb
stos
pop
int3
pop
call
ds
clc
aaa
push
sub
or
dec
and
aaa
add
inc
jbe
dec
add
push
push
xchg
xchg
add
data16
outsl
leave
mov
addr16
and
ret
lahf
iret
push
mov
test
out
es
sbb
xchg
pop
leave
xchg
add
cmp
aas
push
sub
movsb
sahf
addr16
push
push
push
push
enter
mov
jns
sbb
enter
fiadds
in
xchg
or
je
push
or
or
test
jo
add
fistps
pushf
mov
pop
leave
sub
pop
outsl
add
or
sub
enter
push
dec
daa
xchg
add
add
add
inc
fs
in
aaa
enter
dec
out
enter
pop
scas
add
push
adc
outsb
sub
sub
adc
loopne
push
add
add
sahf
inc
sbb
andb
adc
mov
or
mov
mov
setb
add
in
popf
nop
and
xor
cmp
pop
inc
fiaddl
stos
mov
fistps
filds
jecxz
sub
dec
lret
insl
or
mov
divl
inc
je
lahf
call
fxch
add
inc
and
test
out
lret
inc
push
push
aaa
test
iret
sub
addb
mov
cmpb
lock
shlb
int3
popa
iret
cmp
int3
xor
cmp
inc
dec
fistl
or
outsl
xchg
hlt
movsb
or
jl
sahf
pusha
mov
insb
xor
mov
jp
xor
pop
push
sub
sarl
lock
jb
sahf
out
cmp
cld
and
xorb
jns
shl
push
outsl
inc
stc
cmp
repz
cmpsl
lret
jo
jns
cmpsl
xor
jno
repz
cmp
mov
jns
jb
arpl
out
repz
mov
je
push
sbb
sarl
dec
ja
and
jp
repz
xchg
mov
dec
repz
xchg
mov
fs
repz
movsl
lret
stc
push
jns
sahf
out
popa
cmpsb
lret
jmp
jp
cmp
shll
inc
outsb
mov
out
sahf
out
jnp
pop
jg
out
cmp
cmp
movb
mov
inc
ds
repz
nop
mov
sahf
out
pop
xchg
mov
and
push
out
cmp
out
push
sbbb
push
jg
lcall
out
test
mov
lahf
repz
adc
out
lahf
out
and
mov
cwtl
out
mov
lcall
mov
out
shl
sbb
jnp
mov
lea
mov
ds
fcoms
xchg
or
inc
repz
out
stc
and
push
out
lcall
lahf
out
ds
xchg
out
pop
xchg
xchg
fnstcw
sahf
push
flds
xchg
sbb
mov
out
repz
into
xchg
adc
inc
mov
adc
sahf
jg
sti
sub
mov
cmp
and
iret
sarl
jge
jmp
popf
out
out
lret
sahf
push
push
out
xor
fldt
lahf
add
mov
sbb
jg
repz
mov
mov
dec
repz
pusha
stos
out
movsl
sub
sahf
cmpsl
stc
cmp
add
cmp
repz
dec
cmpsl
ja
in
jl
cmpsl
stc
and
test
xchg
jge
loope
stos
jl
cmpsl
flds
jle
fmull
sar
jbe
cltd
in
sub
cmpl
cmp
out
pop
mov
pop
popf
stc
cmp
out
mov
mov
fimuls
mov
jl
cmpsl
xor
faddl
mov
cmpsl
stc
cmp
jg
aad
mov
out
xor
xchg
mov
out
mov
mov
lds
out
lcall
iret
sarl
fildl
mov
repz
mov
jo
fisubs
mov
rcl
sahf
ja
jns
aaa
shrl
fwait
iret
out
ret
cmpsl
fisubrl
out
les
out
leave
lret
in
shr
inc
int3
outsb
or
dec
iret
ja
ds
jnp
push
adc
mov
fldcw
dec
fcmovne
fcompl
fidivs
lcall
xchg
mov
out
xor
jp
icebp
mov
int3
nopl
sub
inc
rcr
xchg
cmpl
stc
in
inc
sub
getsec
into
add
adc
faddl
ja
pop
or
shrl
iret
pop
mov
lret
push
fistps
daa
fimull
jns
imul
jge
mov
and
fdivrs
adcb
fimull
call
adc
xchg
xchg
lahf
jg
gs
and
xchg
lcall
in
pushf
adc
and
pop
xchg
inc
xor
loop
mov
fs
aas
lahf
fcmovnbe
cpuid
popf
mov
in
jno
mov
or
xchg
pushf
repnz
testb
push
aas
add
jmp
or
or
adc
add
xchg
jle
fisttpll
pop
jmp
enter
and
in
fldenv
sub
inc
pop
daa
cld
mov
inc
insb
push
add
jl
mov
leave
in
pop
adc
add
aaa
xchg
add
movsb
mov
outsb
cmpsl
or
push
lods
adc
cmp
lahf
dec
mov
xchg
lahf
dec
in
cmpsl
xchg
outsl
xlat
cmp
dec
and
fisttps
sub
in
add
cmpsl
movhps
and
push
testb
mov
xchg
pop
push
daa
push
sub
dec
inc
scas
fmuls
sbb
les
push
aaa
lock
add
xchg
push
in
pop
pop
push
addr16
inc
or
mov
addr16
test
jmp
out
inc
pushf
inc
or
testl
pushf
sub
fcomp
fmul
daa
call
scas
add
push
push
testb
ja
fldenv
fucomip
in
movsl
ja
fbstp
dec
mov
xchg
jb
pop
jb
nop
jo
pop
jb
int3
hlt
dec
dec
mov
fiaddl
push
pop
pop
enter
sub
and
inc
add
add
add
pop
mov
js,pn
push
fwait
pop
or
xchg
enter
in
jge
add
enter
dec
dec
fistl
jmp
leave
mov
inc
pop
push
insb
xchg
sbb
push
xchg
pop
xor
lods
nop
cwtl
pop
inc
xlat
dec
leave
add
jge
fcmovnu
scas
int3
and
sub
in
xchg
pop
jl
pushf
in
xchg
test
pop
lcall
test
or
scas
xchg
inc
or
scas
sbb
dec
pop
jo
sbbb
les
mov
stos
dec
leave
push
and
adc
fdivr
daa
popf
sub
and
popa
jne
outsb
cmpsl
or
daa
jl
sub
sbb
in
ss
inc
jb
mov
fistpl
push
out
icebp
add
add
add
cmpsl
push
cmp
roll
or
cmpsl
xchg
mov
mov
add
lods
jg
push
push
pusha
and
sbb
xchg
pop
in
fistps
push
lods
mov
rcr
inc
data16
lcall
xchg
cmp
jb
lods
bound
daa
sub
xor
fcomip
mov
movsb
mov
gs
add
bound
cmp
mov
bound
imul
movsl
xchg
add
in
daa
daa
daa
in
cmc
std
add
arpl
add
xchg
fmul
xchg
mov
arpl
cmpsl
arpl
arpl
in
in
dec
push
pop
loope
fldt
cltd
jnp
andl
pop
xchg
setnp
shll
pop
leave
leave
leave
dec
into
loope
cmp
enter
add
pop
and
sbb
or
or
or
enter
or
daa
push
in
mov
xchg
mov
movsb
shrd
loop
xchg
das
dec
faddp
fs
lock
add
mov
xchg
add
xchg
add
and
gs
jecxz
test
jmp
pop
jb
jbe
jecxz
daa
push
leave
and
pop
inc
mov
add
lods
push
mov
xchg
sbb
sbb
out
in
xchg
add
or
inc
lds
push
out
clc
out
inc
mov
in
data16
out
inc
push
push
add
sub
aaa
in
ffreep
or
call
das
in
in
daa
fmuls
daa
cmp
data16
adc
adc
incl
in
test
insl
daa
in
daa
incl
pop
pop
out
xchg
cmpsl
and
in
adc
push
add
add
loop
xchg
add
push
add
mov
pop
or
js
popf
lds
filds
pop
xchg
adc
xchg
test
and
popl
mov
xchg
imul
dec
inc
sub
mov
pop
mov
or
adc
jb
aaa
out
out
add
push
inc
mov
add
jno
mov
scas
jp
fsubrl
mov
jo
dec
jo
push
leave
and
shlb
inc
jnp
out
push
out
pop
call
lcall
and
test
nop
outsl
daa
or
mov
inc
add
dec
add
pop
movsb
or
lock
xchg
jmp
in
xchg
sahf
xchg
js
bnd
adc
dec
bnd
mov
pop
ja
fsubrs
adcb
push
xchg
ja
fisttpll
push
ljmp
jns
dec
aaa
add
xor
scas
je
test
inc
int3
jbe
loop
mov
setl
cmp
data16
pop
push
lret
mov
xchg
xchg
add
shr
rolb
adc
notb
xor
inc
imul
push
sub
bound
cmpsl
add
in
inc
mov
cmpsb
sbb
jmp
daa
mov
sahf
in
in
cmp
pop
push
xchg
sub
lcall
jb
enter
aad
loopne
jmp
inc
mov
add
add
in
daa
and
mov
nop
xchg
adc
insb
pop
insb
push
xchg
or
push
jo
scas
cmp
daa
loopne
test
sbb
lods
pop
out
outsl
cmpsb
imul
loope
add
stc
aaa
out
out
in
xchg
pop
insl
sub
mov
inc
add
dec
dec
movsb
add
andb
andb
mov
fucomip
or
mov
mov
and
xchg
xchg
lret
mov
xchg
dec
cs
stos
inc
jb
mulb
mov
dec
mov
sti
xchg
pushf
dec
js,pn
inc
movsb
leave
mov
adc
rclb
leave
and
xchg
ja
rorl
outsl
repz
push
mov
dec
mov
setp
jmp
stos
filds
inc
mov
push
and
push
shlb
and
dec
test
jno
aaa
jg
dec
cmp
xchg
repnz
add
stos
pop
mov
fidivl
std
push
cmc
iret
add
push
orb
add
outsb
vmwrite
sub
sbb
cmp
adc
addb
and
lods
mov
jb
push
ja
movq
mov
add
xchg
add
or
adc
iret
hlt
mov
mov
jne
sbb
add
pop
push
xchg
mov
add
lods
pushf
pusha
cwtl
jge
je
bsf
dec
jb
enter
add
insl
add
sbb
js
addl
in
and
or
xchg
cmc
jl
mov
push
sbb
sahf
sbb
mov
cmp
pop
cmc
shl
test
sahf
faddl
push
fistps
add
outsb
fistpll
testb
shrb
push
cmpsb
add
mov
paddw
and
mov
in
fcmovb
push
push
minps
addr16
xchg
add
das
iret
leave
dec
ja
push
lea
in
pop
les
jne
notl
sbb
clc
jbe
outsb
daa
cmp
xor
orps
and
test
jb
pushf
clc
sbb
dec
mov
xlat
fisttpll
out
leave
mov
je
or
push
pusha
call
cmp
mov
scas
divl
add
pop
mov
paddusb
cmp
js
js
add
pop
xchg
pandn
addr16
addb
push
fists
add
jo
mov
mov
mov
ja
aaa
mov
pop
movb
add
daa
xchg
xchg
push
clts
cli
xor
or
xchg
and
push
sub
add
lea
cmp
add
iret
jns
jg
and
ficomps
test
nop
fwait
add
mov
xchg
daa
mov
mov
cmp
add
jns
cs
repz
jp
push
jp
lea
jns
adc
xor
xchg
and
adc
addr16
push
push
lods
lods
addr16
mov
daa
insl
push
or
into
rcr
lret
outsb
pavgw
push
add
push
es
cld
jnp
push
daa
scas
addr16
inc
ds
das
add
aas
add
inc
add
dec
push
pop
pop
xlat
or
sub
adcb
dec
add
xchg
lret
addr16
mov
negb
push
sub
in
adc
inc
mov
push
cmp
inc
add
jne
test
jl
xchg
cmpsb
inc
jb
sub
insl
std
bound
loop
lock
das
jno
mov
jb
xchg
decb
cmp
pop
xor
pop
or
shl
mov
nop
dec
and
repnz
insl
decb
mov
enter
setb
sbb
push
and
sub
decl
xchg
jge,pn
xchg
dec
dec
add
insb
jbe
jle
movsb
mov
pop
pop
dec
mov
pop
push
mov
and
in
sbb
push
add
push
add
es
ss
xchg
sbb
jle
xchg
mov
add
pop
jo
aas
mov
dec
dec
inc
fucomi
testb
jg
push
lea
in
rclb
add
sbb
cmp
pop
pop
jg
jg
xchg
mov
sub
out
add
fucomi
jg
mov
scas
cmp
jb
jg
jg
jg
jmp
adc
xorb
movsb
jnp
sbb
add
or
incl
add
out
movsb
mov
addb
mov
ss
iret
mov
mov
leave
sbb
pop
jb
ss
clc
addl
adc
subl
in
ret
dec
add
inc
sbbl
iret
jg
xchg
sub
sbb
pop
add
popf
pop
jo
mov
rolb
xchg
and
fiaddl
add
lret
xchg
repnz
or
mov
xor
sbb
or
dec
inc
xor
adc
in
enter
adc
adc
bound
push
fistps
mov
and
outsl
xchg
add
cmp
aaa
sbb
jecxz
push
cltd
cmp
push
add
sbb
sbb
cmp
push
inc
dec
xchg
mov
xchg
mov
lods
mov
test
wbinvd
cmp
add
or
daa
jbe
andl
jbe
jle
adcl
xchg
cltd
mov
dec
or
test
nop
mov
mov
sbb
cmovg
add
fs
iret
push
cmp
pop
aas
data16
sub
mov
repnz
into
push
shlb
lods
cmp
rolb
dec
adc
int3
cmp
pop
sub
mov
hlt
stc
jns
add
into
add
inc
sysret
addb
pusha
daa
nop
lcall
jmp
ljmp
cmp
add
xor
pop
push
inc
add
pop
pushf
ret
lahf
or
cmc
mov
or
daa
pusha
jb
push
or
and
in
jbe
pop
cmpsb
cmpxchg
idivl
xlat
push
call
les
decl
mov
test
out
iret
cli
sahf
pusha
mov
filds
call
repnz
or
sbb
pusha
push
cmp
incl
popa
add
sahf
int3
out
outsl
jge
jnp
enter
pop
mov
imul
pop
or
jns
inc
sbb
xchg
enter
xor
inc
add
mov
jb
add
mov
enter
lcall
stc
cmp
rol
push
or
lcall
daa
mov
mov
push
das
add
aam
add
pushf
pushf
push
jb
dec
enter
or
fisttpll
sbb
push
inc
dec
data16
push
pushl
mov
and
out
jbe
pop
or
or
and
int
lds
mov
movsl
or
lcall
xor
data16
dec
jnp
mov
cmpsb
popa
in
add
mov
ss
decl
dec
cs
addr16
or
mov
stc
push
fildl
jecxz
add
jb
loopne
ja
dec
jp
cmp
ds
push
mov
pop
add
xlat
cwtl
mov
dec
insl
cmp
in
ja
ja
mov
mov
and
shrb
ret
pop
add
push
repnz
pop
push
dec
daa
insb
cmovae
pop
pmaxub
jl
mov
or
pop
cmpsl
or
shlb
fsubr
mov
sub
andps
fisttpll
sahf
insb
add
jl
test
maxps
push
ficoml
add
insb
xlat
pop
scas
push
rolb
faddl
repnz
mull
movsb
push
test
xor
dec
ja
mov
cld
and
daa
pop
gs
jne
xchg
mov
adc
cwtl
mov
test
mov
mov
insl
nop
xchg
fninit
aaa
mov
lea
lea
fisubl
ja
ss
dec
push
pop
add
lahf
gs
xchg
xor
pop
leave
dec
pop
adc
in
add
cmp
mov
sub
and
mov
push
add
sbb
iret
adc
cmpsl
fcmovne
leave
inc
ret
xchg
and
push
push
inc
dec
testb
decb
jmp
adc
in
movsb
and
imul
in
leave
enter
cmpsl
cld
daa
daa
mov
sahf
mov
pushf
ljmp
out
mov
testl
fimuls
into
pop
sbb
and
and
daa
and
das
or
or
xchg
daa
mov
cvtps2pd
push
stc
leave
enter
xchg
lea
movsl
cmp
sti
outsb
mov
add
cmp
sbb
fabs
pop
jmp
icebp
add
pop
or
out
inc
repnz
xchg
dec
sbb
xor
cmp
add
aam
xchg
leave
lods
mov
xadd
add
rcr
pop
pop
loop
in
adc
cmp
or
lahf
adc
out
xchg
sbb
xchg
and
pop
leave
dec
add
pop
outsl
xchg
je
sub
and
fdivrs
fisttpll
ficoml
sbb
mov
mov
xchg
push
adc
sahf
sub
pop
ss
dec
dec
divl
pusha
movsb
or
xchg
jg
in
mov
paddsw
outsl
push
ret
rorb
es
rcr
loop
pop
das
ljmp
xchg
or
pop
pop
push
jge
dec
adc
push
dec
add
push
aas
rorb
subb
leave
inc
jnp
jnp
mov
xchg
fwait
cmpsl
mov
push
lret
cwtl
mov
leave
dec
ja
das
xchg
add
je
and
mov
push
ds
inc
add
enter
add
add
ja
mov
fisubl
mov
dec
dec
mov
iret
xchg
xchg
mov
cmp
in
cmc
cmpsl
loopne
or
ja
inc
inc
xchg
jg
xchg
mov
inc
mov
cvtdq2ps
add
jb
mov
xchg
fisubrl
sbb
add
pushf
fmull
leave
rorl
fabs
push
and
fistpll
sbb
xchg
mov
adc
add
repnz
xor
sysenter
cmp
sbb
or
loope
or
sbb
xchg
lcall
xchg
pop
dec
jo
aad
fisttpll
dec
in
mov
xchg
out
in
lds
adc
ja
int3
fisubrs
xchg
clc
cmp
inc
add
sbb
sbb
enter
jbe
jbe
jle
adc
sbb
push
xchg
iret
inc
sub
fcmovnbe
xchg
pop
sahf
or
cmp
fcomps
pop
cltd
adc
cmp
mov
mulb
sub
inc
push
xchg
xchg
xchg
xchg
pop
arpl
mov
cmpsl
push
pop
mov
stos
add
push
cmp
lret
aad
mov
and
cmp
lcall
pop
add
add
sub
dec
add
int
popf
in
outsb
push
adc
cwtl
fsubrl
daa
mov
xadd
leave
movsb
mov
mov
jl
jns
mov
fwait
fwait
push
jnp
addl
dec
fidivrl
dec
andnps
pusha
add
xchg
daa
and
add
enter
orl
lods
mov
sarb
repnz
in
adc
pushf
add
xchg
and
prefetch
adc
ror
xor
cmp
pop
mov
outsb
pcmpeqd
and
dec
pushf
mov
test
mov
int3
aam
addr16
inc
imul
aas
jns
cmp
pop
add
pop
pop
pop
push
and
sbb
pop
daa
or
or
and
aas
cmova
mov
cmpsl
xchg
push
orl
pop
popf
cmp
cltd
jge
roll
paddusb
repnz
add
xchg
add
mov
inc
clts
and
cmp
dec
sahf
pop
mov
loopne
push
and
out
dec
bswap
push
push
pop
and
enter
or
or
call
shll
out
fldcw
push
les
inc
sahf
mov
add
faddl
mov
mov
push
pop
addr16
pushf
cmp
add
push
add
daa
inc
mov
arpl
add
or
jae
pop
cmp
dec
sahf
mov
test
and
xchg
pminsw
repnz
leave
xchg
cli
mov
cmp
dec
pop
sub
push
leave
sub
and
pop
pusha
punpckhbw
push
jb
mov
xor
jbe
push
fwait
mov
dec
cmp
jns
push
mov
sub
sbb
push
outsb
out
xlat
push
icebp
add
in
or
and
mov
cld
daa
xor
aaa
lock
mov
lock
xchg
test
insb
daa
xchg
outsl
daa
sub
mov
mov
and
dec
outsw
mov
paddusw
enter
repz
add
enter
pop
pop
or
sub
xor
jb
or
or
inc
mov
adc
enter
adc
inc
mov
push
les
iret
sbb
in
enter
sbb
sbb
in
in
pop
push
adc
in
adc
adc
in
in
push
or
fisubrs
xor
and
jmp
jns
adc
cmp
add
and
in
daa
int3
daa
pushf
daa
xchg
es
negb
mov
add
mov
adcl
add
mov
cmp
in
push
mov
sbb
leave
add
mov
mov
leave
mov
xchg
and
mov
xchg
fisttpl
addr16
cmp
and
dec
outsl
push
pshufw
add
in
add
in
loopne
pop
aaa
mov
jg
mov
leave
push
movsl
cmp
dec
jb
and
and
ja
iret
movsb
pop
and
jnp
mov
int
cs
xchg
add
xlat
into
pop
cmpsb
add
out
cmpsb
and
mov
cmp
xchg
xchg
out
inc
xchg
add
fisttpll
outsb
jbe
jle
in
mov
mov
in
ret
add
lahf
xor
pop
cmpsb
cld
cmpsl
or
sar
xor
push
cmpsl
fisttps
inc
add
cwtl
popf
mov
fbld
imul
or
jnp
mov
pop
xchg
or
dec
inc
mov
addl
cltd
add
cmp
in
test
mov
mov
push
and
or
inc
sub
cmp
cvtps2pi
rolb
sub
test
mov
push
jae
jnp
addl
xchg
daa
and
outsb
in
enter
or
xchg
or
xchg
jno
out
iret
push
jb
les
inc
cs
dec
push
fsubl
push
push
test
iret
cmp
stc
xchg
test
sbb
mov
add
adc
les
aas
test
jbe
daa
push
hlt
ja
mov
xchg
popf
movsl
lods
lgs
in
popf
stos
mov
call
loopne
add
stos
inc
lds
sbb
imul
push
push
jns
xchg
sub
cmp
movsb
out
movsb
mov
outsl
sbb
loopne
addl
cmpsl
lock
lahf
cmpsl
pop
add
out
test
adc
fimull
or
mov
loopne
pusha
jg
xlat
stos
cmp
imul
inc
mov
xor
in
in
movsb
or
addl
leave
mov
push
repnz
xor
stos
fistps
add
jnp
jb
mov
or
ret
add
push
rcll
mov
inc
cmp
popf
xor
lods
and
inc
dec
add
push
cltd
ja
add
fcmovne
mov
out
push
xchg
insl
push
aam
mov
daa
and
in
idiv
leave
enter
or
or
dec
ret
leave
leave
and
xor
xor
iret
lods
push
lods
lods
rorb
pusha
xchg
xor
outsb
daa
daa
insl
jbe
xchg
lcall
xor
in
mov
lods
outsl
shrb
xchg
sbb
add
out
inc
jg
or
inc
xchg
or
in
daa
xor
imul
roll
pop
scas
xchg
pop
fwait
add
shrb
pop
xor
pop
inc
lods
jo
scas
das
mov
mov
mov
leave
in
scas
into
push
psubusw
inc
dec
bound
aaa
imul
xchg
mov
movsb
dec
xor
and
or
or
xor
mov
daa
dec
scas
fwait
sbb
push
lds
adc
push
ja
dec
or
rol
xchg
inc
jmp
movsb
cmp
pusha
add
push
ss
sbbl
outsb
daa
pushf
pop
mov
add
in
fmuls
adc
mov
frstor
mov
fcoms
pop
aaa
or
daa
dec
cs
cmpsl
push
movsb
cmp
das
mov
aaa
inc
pop
sahf
fsubrl
mov
lahf
xlat
add
out
add
add
leave
leave
leave
pop
add
in
leave
add
or
cmp
pop
or
movsb
repnz
aaa
pushf
mov
push
add
push
or
pop
jb
jb
jbe
sahf
cmpsb
add
add
mov
push
mov
or
or
and
lret
cmp
das
cmp
and
mov
insb
xcrypt-ctr
cmpsl
push
xor
add
dec
inc
inc
mov
xchg
push
pushf
pop
popf
mov
lods
popa
leave
in
in
movsb
dec
mov
andps
pop
and
lds
fs
adc
enter
adc
in
mov
inc
sahf
pushf
aam
sbb
in
xchg
mov
and
hlt
pop
paddb
xchg
fsts
or
pop
adc
fs
sbb
and
sub
sub
sbb
jb
sub
inc
sub
xchg
and
sub
dec
mov
leave
insb
je
jl
xor
add
or
ja
sbb
push
xlat
mov
or
cmp
daa
pop
call
cmp
add
daa
cwtl
data16
cmp
mov
mov
xor
xchg
lret
cmp
jnp
jnp
or
xchg
add
inc
jo
jb
push
dec
push
pop
gs
movsl
push
xchg
cmp
dec
mov
outsl
pushf
sbb
jnp
add
xchg
add
inc
mov
outsb
mov
xchg
or
lret
dec
ficoml
loop
out
push
mov
jb
enter
adc
adc
adc
inc
mov
push
insb
jb
enter
sbb
mov
inc
mov
xchg
sbb
in
xchg
and
and
and
and
and
and
lods
prefetch
sbb
xchg
sub
sub
outsl
mov
in
inc
aas
dec
pop
push
jg
lahf
imul
jno
jns
andl
mov
xchg
pop
pushf
push
movsb
sbb
lods
sbb
sbb
les
int3
sbb
push
fcoml
in
out
adc
adc
xchg
or
and
inc
pop
addr16
mov
imul
enter
add
add
cmp
pop
sahf
or
inc
mov
push
mov
or
or
out
lock
mov
repnz
sbb
and
xchg
and
adc
sbb
jb
dec
sbb
sbb
xchg
and
jnp
test
in
pushf
pop
test
fcmovnb
dec
int
fmuls
stc
jnp
iret
repz
sbb
mov
xchg
and
sbb
cmp
enter
adc
mov
mov
push
pop
or
in
xchg
or
or
cmp
add
and
test
add
ds
divb
xchg
push
ds
ror
or
xor
push
sbb
xor
pop
pop
xor
and
mov
or
or
xchg
push
pop
pcmpgtw
insl
adc
bnd
jne
jne
in
xchg
pop
lahf
cmpsl
mov
push
push
jno
mov
clc
xchg
xchg
mov
stc
push
push
mov
sbb
dec
inc
mov
add
inc
add
fmull
cvtdq2ps
imul
cmp
jae
orl
setle
test
dec
popw
mov
pushf
pushf
pushf
pushf
out
mull
dec
mov
sbb
and
mov
inc
pop
pop
push
outsb
daa
and
jbe
jle
daa
and
add
xchg
mov
mov
mov
enter
push
pop
shlb
dec
loopne
pop
call
addr16
inc
mov
lods
mov
inc
mov
fidivrs
add
dec
add
pop
fs
xchg
add
jg
sbb
repnz
xchg
or
cmp
pop
in
push
mov
xchg
xchg
and
adc
cli
movsbl
fcmovne
add
pop
xor
enter
cmp
inc
push
sbb
fs
pop
push
cmp
jns
mov
inc
sahf
mov
daa
inc
outsb
daa
and
in
maskmovq
idivl
daa
or
cs
cmp
push
mov
filds
sbb
push
jg
mov
xchg
add
and
pop
jb
pop
pusha
shrl
or
or
jnp
fucom
or
out
idivl
cmp
jb
rolb
pop
mov
adc
das
pop
aaa
push
in
cwtl
mov
dec
push
dec
adc
cmp
sbb
pop
sbb
addr16
outsl
dec
and
xchg
out
dec
rclb
xchg
mov
into
cmp
xchg
fimuls
out
out
inc
movsb
and
stc
roll
inc
dec
adc
daa
shll
cmp
cmp
jbe
jb
arpl
jnp
setno
imul
xchg
scas
scas
or
sarb
lahf
call
adc
inc
mov
push
pop
and
and
push
sbb
sbb
sub
xchg
sbb
sbb
jbe
repnz
and
jb
fsubrl
fstpt
mov
push
xchg
and
pop
sub
jb
cmp
enter
sub
and
sbb
xor
xchg
xchg
mov
iret
aad
loopne
ss
jb
lret
clc
aaa
ret
add
sahf
cmp
sbb
cmp
inc
mov
aas
in
clc
mov
inc
fimuls
push
inc
out
and
outsb
daa
and
inc
ds
das
push
into
or
adc
les
cmp
add
movsb
cmp
dec
lahf
dec
adc
add
dec
dec
mov
lea
les
les
or
rcrb
add
inc
mov
add
stc
leave
enter
add
movups
sbb
in
fldt
pop
xor
inc
push
dec
cmovbe
push
inc
mov
dec
scas
push
cwtl
adc
dec
scas
mov
mov
fisttpll
ficompl
out
sbb
mov
or
pop
and
and
dec
xchg
andl
dec
pop
adc
mov
cltd
lcall
mov
sahf
aam
pandn
add
add
cmc
movl
leave
in
push
or
and
dec
aaa
sbb
jb
inc
or
arpl
pushf
mov
jbe
and
mov
in
leave
enter
sbb
rcrl
das
mulb
sbb
hlt
push
ud0
jb
enter
and
and
and
sub
and
sbb
jb
dec
sub
push
sub
insl
test
cmp
mov
movsb
lds
sbb
out
push
xlat
add
mov
add
add
or
pop
adc
outsb
daa
and
push
es
ss
incb
leave
ds
inc
or
mov
daa
mov
xor
jle
leave
leave
leave
add
jb
enter
loop
in
or
or
lret
push
sbb
and
pushf
pop
and
das
adc
adc
fnstcw
push
pop
add
sbb
pop
jae
sub
jle
jnp
push
daa
daa
and
pop
mov
enter
and
and
and
dec
or
lret
pop
iret
lret
aad
xor
lret
inc
push
inc
dec
adc
inc
push
cmc
ret
sbb
and
sub
dec
loop
add
jle
fs
pop
scas
lret
push
xchg
add
xor
or
or
or
or
int3
or
mov
mov
inc
adc
fsts
adc
outsl
mov
outsl
xchg
xchg
sbb
lahf
sbb
mov
sarb
mov
int3
repz
push
sti
add
jo
repnz
push
sbb
and
sbb
mov
sub
xor
cmp
dec
inc
dec
or
aas
push
inc
mov
dec
out
push
fs
insb
cltd
mov
orb
adc
xchg
popf
mov
adc
mov
rcrb
fsubr
leave
enter
sbb
repz
nop/reserved
repnz
pop
into
add
or
adc
xchg
mov
loopne
cmp
pop
pop
sbb
push
push
inc
mov
fistpl
push
dec
jne
addb
xchg
xchg
and
pop
in
leave
enter
ret
int
sbb
jb
push
fmuls
jecxz
out
adc
and
adc
sbb
outsb
outsl
das
and
sbb
xor
cmp
dec
sbb
in
leave
enter
imul
in
jg
dec
mov
xchg
and
sbb
and
movsb
jb
fisttpll
xlat
into
sub
adc
mov
loopne
xor
push
scas
add
xchg
daa
mov
shlb
fstpt
inc
push
sub
cmp
rclb
outsl
mov
mov
in
in
stos
mov
shl
in
int3
add
add
and
in
or
roll
or
in
add
push
sbb
das
sqrtps
pop
adc
dec
inc
mov
jb
adc
xchg
push
loopne
jmp
divb
ss
add
pop
pop
sbb
and
sub
jl
sahf
int3
sahf
sahf
and
test
xchg
and
es
loopne
xchg
fcmovnu
leave
jmp
aas
jmp
das
sub
test
imulb
das
pop
pop
xor
jbe
and
aas
and
das
sub
xor
inc
ss
dec
pop
bswap
xchg
pop
repz
rcll
leave
in
leave
test
lret
xchg
dec
arpl
into
inc
push
jbe
pop
dec
shrl
in
pop
xchg
les
xchg
inc
outsw
das
repnz
paddw
or
in
enter
or
ss
fucomi
fs
dec
das
pop
pcmpgtb
pop
leave
in
leave
enter
test
seto
das
test
mov
pop
mov
xchg
leave
aam
loope
stc
mov
enter
push
nopl
fcmovne
enter
and
pop
enter
cmp
sub
jb
stos
sub
sub
pushf
mov
cs
inc
das
push
inc
sahf
int3
sahf
pop
xor
addr16
jge
popf
int3
ficomps
jecxz
out
bswap
leave
in
jbe
outsl
add
bndldx
dec
fcmovb
mov
push
xchg
mov
mov
pop
mov
or
psubq
insl
into
pop
shld
xor
out
push
sub
pop
clc
add
jo
xlat
xlat
dec
dec
fiaddl
adc
cmpsl
in
mov
mov
adc
mov
lret
cmp
or
das
popf
xchg
subb
pop
adc
pop
pop
pop
mov
add
cwtl
xor
and
add
inc
add
adc
xor
in
outsl
push
xorb
pop
add
lret
iret
cs
inc
push
and
ljmp
adc
inc
scas
into
sub
xchg
pop
inc
outsb
dec
ret
imul
in
inc
xlat
add
cs
add
mov
add
sub
pop
push
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
push
inc
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
out
xchg
addl
dec
dec
mov
or
into
aas
xlat
sbb
data16
test
mov
add
adc
add
fsubrs
add
adc
mov
rorl
mov
jne
addb
adc
mov
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
mov
adc
div
jl
js
jo
sahf
out
sahf
push
inc
jns
out
xor
and
out
sahf
out
adc
add
sahf
out
scas
repz
push
clc
hlt
lock
int3
pop
repz
mov
mov
mov
iret
repz
je
push
or
iret
mov
fistpll
out
sub
sbb
repnz
jns
out
push
in
fadd
mov
out
sahf
out
nop
mov
mov
pop
push
dec
repnz
repz
xor
add
cmp
cmp
clc
push
in
fmul
mov
movsb
nop
faddl
mov
icebp
jl
push
dec
add
mov
adc
pop
xchg
or
adc
and
mov
pop
cmpsl
jmp
into
rolb
add
cmp
mov
add
adc
dec
daa
aas
sbb
and
xchg
add
push
dec
inc
test
jbe
scas
lret
and
xorb
icebp
call
push
jnp
push
push
mov
add
push
fbstp
cmpsl
rolb
dec
add
ret
add
mov
add
add
mov
addb
es
mov
add
sti
cmp
andb
pop
ror
outsl
iret
inc
les
pop
lds
cs
leave
mov
jl
enter
mov
insl
add
in
pusha
mov
add
add
aas
movsb
enter
es
jb
enter
movups
add
add
nop
inc
mov
and
iret
push
clc
or
adc
addr16
xor
mov
in
enter
or
or
adc
in
and
mov
adc
inc
mov
add
pop
clc
and
and
enter
and
and
inc
pusha
fsubrs
clc
loope
ss
out
pop
imul
adc
xor
push
xor
xchg
cld
xorb
xor
cmp
xorl
fcomi
cmp
adcl
push
pop
js
out
push
cmp
mov
xor
enter
idivb
dec
insl
add
mov
sbbb
bnd
das
adc
repz
dec
insb
dec
nop
sub
add
inc
dec
repnz
inc
pushf
or
in
ds
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cltd
cli
fldl
xchg
and
add
addr16
add
aas
jno
or
mov
pop
fs
fisttps
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
pushl
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
cmp
cmp
std
xlat
cmp
mov
sbb
ljmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
enter
orl
pop
ficomps
frstor
add
sub
adcb
loopne
pop
jnp
outsb
xlat
add
inc
je
add
inc
inc
push
dec
addr16
push
out
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
fldt
or
mov
call
push
inc
dec
inc
jo
inc
popa
shrl
push
outsb
jbe
imul
lods
lods
pop
gs
outsl
mov
aas
dec
insb
imul
dec
push
dec
insb
xor
push
cmp
add
clc
rcl
adcl
daa
pusha
push
or
and
mov
pushf
push
inc
inc
inc
test
out
dec
inc
gs
inc
adc
outsb
gs
daa
inc
insb
les
ds
arpl
mov
inc
or
and
bound
inc
sbb
push
dec
pop
mov
sbb
add
popf
ret
xchg
push
cld
cmpsb
insb
and
mov
rorb
push
fs
pusha
sub
inc
daa
aas
dec
or
sbb
imul
adc
jae
imul
data16
and
inc
inc
inc
jg
inc
jns
dec
mov
loopne
lahf
push
push
push
push
push
cmp
popl
lods
mov
data16
jns
ljmp
cltd
xor
mov
dec
in
inc
add
inc
je
jb
dec
push
dec
dec
sbb
jae
jbe
dec
cmpsb
lods
cmpsb
pop
test
pop
dec
mov
movsl
cwtl
or
dec
adc
add
pop
dec
inc
jnp
cli
popa
jne
arpl
outsl
push
push
bound
dec
dec
pop
xlat
push
adc
xchg
add
sub
les
sbb
mov
inc
xchg
push
mov
push
js
cli
dec
addb
mov
mov
rcrl
inc
pop
dec
notl
push
loope
push
notl
cmp
ds
xor
jbe
test
mov
mov
das
push
or
adc
push
clc
stos
inc
mov
jne
push
fcoms
adcl
repnz
mov
cmp
inc
arpl
push
insl
les
cmpsl
inc
push
pushf
nop
pusha
out
sub
repz
jg
mov
mov
pop
popl
adc
or
and
add
add
outsb
data16
xchg
inc
add
fisttpl
ja
mov
pusha
pop
ja
fisttpl
xchg
ja
or
les
stos
push
pop
pop
sbb
aam
pop
push
stc
jl
add
lahf
icebp
shll
push
ja
std
push
xchg
lcall
mov
scas
xlat
xchg
aam
dec
dec
lahf
insb
mov
push
inc
dec
lahf
add
test
popl
stos
and
dec
movsb
cmp
mov
adc
stos
leave
addl
mov
push
lahf
or
or
adc
cmp
subl
xchg
dec
and
adc
cli
push
dec
dec
jbe
mov
aaa
or
xchg
jae
in
cmp
push
inc
push
inc
mov
sbb
insl
imul
jne
inc
stos
adcb
rolb
adc
imul
outsl
addr16
or
or
insl
mov
iret
pop
les
inc
stos
andb
cmp
xlat
out
pop
fadds
add
jns
iret
repz
sub
xchg
lock
jns
out
test
js
xor
insb
sahf
inc
or
hlt
cwtl
mov
push
push
add
push
sbb
pusha
js,pt
adc
insb
daa
lahf
aas
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
fdivrl
jmp
rclb
mov
sub
mov
call
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
add
cmp
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
jmp
pop
cmp
fldenv
cmp
fisubs
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
mov
mov
jl
das
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pop
rcl
xor
mov
js
stc
subb
lcall
cwtl
push
loope
or
insl
or
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
lcall
loop
fistpl
arpl
test
fs
ds
decl
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pop
cmp
decl
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
call
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
decl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
lcall
iret
mov
mov
sbb
mov
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
incb
pop
mov
xchg
jg
rolb
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
sub
add
fildl
push
lcall
xor
push
cmp
jns
rcrl
sub
mov
dec
inc
js
inc
insl
bound
add
or
loopne
add
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
mov
push
dec
inc
sbb
fistl
aam
inc
or
mov
inc
cmp
ret
dec
mov
add
fs
pop
or
ss
jbe
in
gs
cmp
or
inc
aas
push
inc
movsb
push
xchg
stos
popa
fs
inc
jle
inc
rcl
bound
sub
mov
getsec
pop
orl
insb
popa
jns
push
add
ljmp
push
push
mov
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
inc
ljmp
sahf
bound
push
inc
adc
stos
aaa
inc
and
sbb
inc
pop
jnp
adc
pop
es
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
sti
mov
push
jge
xor
fidivs
adc
arpl
add
aaa
mov
test
push
push
add
pop
inc
cmp
xlat
scas
inc
adc
add
imul
push
shrb
orb
and
mov
lahf
push
mov
dec
jo
fisubl
pop
mov
xlat
mov
push
and
pop
xchg
loopne
cmpsl
sbb
inc
jb
iret
or
mov
dec
popa
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
mov
inc
bound
adc
in
push
andl
test
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
popl
pop
push
outsl
inc
xchg
stos
shrb
fcom
aad
inc
and
pusha
adc
sahf
mov
stos
cmp
insb
daa
sub
mov
adc
inc
xchg
jne
xor
jg
rcl
movsl
divl
arpl
sbb
xchg
add
adc
js
fmuls
pop
sub
sbb
jg
imull
add
cmp
cmp
jo
imul
pop
and
movsb
push
xchg
mov
outsl
xchg
fisubl
add
pusha
and
and
rcll
push
or
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
add
test
inc
inc
add
adc
adc
push
add
dec
xorb
sbb
outsb
insl
loopne
add
push
add
dec
pop
nop
movaps
dec
sbb
push
clc
or
pop
mov
int
mov
pusha
adc
and
imul
add
sub
je
add
in
or
dec
push
and
cs
scas
loopne
jmp
sub
pop
lea
in
ud0
repz
mov
out
ud0
jmp
repnz
in
sub
pusha
ljmp
lret
cli
or
sti
movsl
push
cld
push
imul
xor
cld
dec
add
pop
dec
xchg
rcl
mov
daa
mov
mov
add
sbb
insb
daa
aam
pop
mov
cmp
adc
adc
add
xor
verr
aas
mov
add
sbb
add
addr16
push
test
mov
jo
stos
and
push
mov
subb
or
loop
and
push
pusha
push
add
pop
pusha
add
add
test
les
lods
add
mov
jb
dec
enter
and
dec
lret
xchg
add
mov
mov
add
sahf
jae
arpl
dec
ds
jo
out
add
mov
gs
push
dec
addb
repz
inc
popa
jl
les
cmp
mov
adc
sbb
shll
mov
or
rorb
push
test
rolb
or
dec
jne
inc
sub
jp
xor
inc
icebp
lods
add
mov
rcll
mov
jbe
inc
xchg
js
cmp
ds
fildl
adc
pop
mov
call
pop
pop
mov
popf
cmp
ja
jne
jmp
mov
and
int3
pop
or
call
popa
jecxz
inc
jbe
rclb
je
dec
cmp
ja
rorl
and
jle
gs
mov
int
sub
or
les
inc
mov
shrb
enter
dec
add
push
push
pop
popa
mov
add
xor
scas
dec
add
lods
add
push
jge
ja
mov
sbb
push
movzbl
or
sar
lea
call
jmp
dec
jnp
inc
lds
xchg
cmp
jbe
mov
fldcw
or
push
sub
pop
cmpsl
sarb
cmp
nop
and
dec
add
roll
lock
xor
orb
mov
imul
inc
call
movsl
mov
push
call
add
dec
sbb
aam
pop
jge
rolb
pop
mov
movsl
pushf
and
aad
or
outsl
cmp
xor
push
inc
imul
add
adc
fs
lret
push
pop
mov
mov
arpl
daa
dec
sub
sbb
mov
cmp
in
add
imul
outsb
shll
addb
or
rorb
inc
add
insl
mov
movsl
adc
sub
test
cld
add
xchg
mov
jbe
xor
fs
enter
ficoms
push
push
pop
push
cmpsl
mov
in
push
leave
push
or
dec
loop
pop
mov
cmp
pop
add
out
mov
xchg
dec
or
push
xor
or
icebp
pusha
leave
and
ret
xchg
cmp
push
sahf
xchg
in
add
dec
pop
push
ret
jmp
rorb
inc
mov
aad
stos
pop
cltd
test
sahf
lea
orb
push
mov
xor
inc
xor
push
adc
call
lods
and
aam
pop
inc
test
jb
jbe
movb
dec
adc
add
push
mov
xchg
jl
in
aam
lea
mov
and
sbb
arpl
and
add
push
mov
arpl
or
rcl
imul
add
jnp
dec
je
shrl
loopne
and
add
adc
push
or
push
test
rclb
add
jmp
insl
dec
mov
sbb
pop
inc
jmp
cmp
xor
inc
repnz
mulb
rcrl
shll
mov
add
jne
jge
in
inc
outsb
or
test
ss
aas
adc
xchg
mov
faddl
adc
and
stos
pusha
mov
push
inc
ljmp
imul
pop
je
call
xchg
xchg
ss
push
insb
fdiv
sub
fnsave
subb
push
lahf
push
mov
sbb
sub
mov
loope
sbb
fcoml
xor
sub
xor
add
add
jl
leave
push
or
sbb
lcall
cmp
stc
jp
mov
push
lea
fst
std
adcl
cmp
jp
push
and
aad
or
inc
or
add
je
jmp
and
pop
xchg
sbb
test
ja
lock
mov
rolb
mov
and
roll
mov
jnp
int
fsubs
xor
addr16
xor
jge
add
pop
call
dec
push
cmc
add
in
dec
mov
call
add
add
ljmp
and
cmp
sti
scas
add
sub
ret
test
cli
lret
adc
cmp
push
lcall
mov
push
sbb
popf
mov
push
lret
mov
jo
mov
movsl
repnz
call
test
in
push
jne
xchg
mov
or
cmc
xchg
aam
xor
sub
push
adc
dec
jecxz
mov
out
hlt
jmp
dec
fwait
mov
push
test
add
jns
lock
lods
scas
insb
jmp
dec
add
push
mov
call
hlt
lods
mov
sbb
lods
or
ja
pop
or
push
lahf
mov
xchg
xchg
clc
fdiv
xacquire
sbb
dec
jb
out
loop
push
inc
into
pop
in
dec
push
inc
push
je
test
loopne
add
add
sbb
shll
sbb
sbb
mov
and
mov
push
or
in
shl
or
std
xor
xor
sbb
inc
psrlq
adc
clc
sbb
xchg
ret
fbstp
or
sbb
add
ret
sub
imul
push
xor
fiaddl
push
jecxz
inc
movzbl
loop
lcall
cmp
bound
push
out
fildl
mov
xchg
sbb
inc
inc
fstps
rorb
mov
cmp
lds
and
push
rclb
pop
lahf
mov
movsl
aam
popa
jecxz
mov
cs
ljmp
xchg
or
push
inc
sar
roll
fmuls
in
or
xchg
cld
push
jns
jge
cwtl
test
mov
fsubl
movsb
jo
nop
fadds
push
arpl
je
ss
lret
ret
fwait
or
xor
mov
cltd
lcall
movsl
xor
jne
ds
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
cmp
shlb
popa
mov
movsb
pushf
and
cltd
stos
mov
leave
adc
push
dec
fdiv
les
inc
push
sbb
push
out
jo
xor
pop
pusha
push
adcl
call
or
push
mov
das
sbb
je
cmp
mov
mov
into
ja
mov
jb
adc
xchg
push
xor
mov
mov
push
mov
imul
jb
call
int
xchg
xor
test
xchg
xlat
shlb
fsubr
inc
cmp
cmp
ret
sub
in
cmpsb
mov
push
push
lea
adc
and
pop
cmp
inc
inc
cltd
dec
scas
sub
fsubs
test
cmc
push
addb
nop
mov
cltd
ss
fistpl
mov
cmp
xchg
add
push
cmpsb
imul
add
cmp
cmp
fwait
hlt
fdivrp
insl
sub
xor
add
loop
ret
ficompl
cmp
es
fwait
loopne
decb
mov
das
psubsw
push
insb
int3
push
repnz
xor
inc
mov
sbb
data16
imull
mov
int3
or
mov
push
fisubrl
adc
and
and
or
push
adc
xchg
dec
sbb
pop
mov
pop
addr16
mov
movsb
jns
dec
pop
rol
aaa
mov
mov
rep
xchg
mov
adc
movsb
pushf
int3
and
and
push
mov
xchg
cltd
aad
sahf
mov
jle
rcll
pop
mov
and
adc
jg
inc
inc
es
add
sti
nop
mov
ficoms
pop
cmpsl
mov
or
rep
push
inc
or
fnstcw
and
aad
shlb
subl
and
rolb
push
fcomps
cmpsb
push
dec
sbb
push
das
xor
push
jb
sub
ljmp
ret
ret
pop
push
pop
pop
stos
dec
pusha
fdivs
addb
inc
fisubl
lahf
or
and
sbb
or
jecxz
adc
sub
ss
call
adc
or
push
mov
dec
out
push
xor
mov
sub
jb
adc
xchg
pushf
data16
imul
fldenv
push
int3
into
rcl
fiaddl
addr16
imul
add
ret
lret
push
das
inc
or
loopne
pop
xor
jbe
push
fwait
pop
sbb
in
or
mov
sbb
loop
std
sub
adc
sub
jnp
mov
adc
push
jnp
and
and
scas
dec
adc
pop
subl
adc
push
jo
push
jae
and
cmp
rcrl
xchg
jle
jmp
outsl
movl
xor
cmp
push
push
gs
lret
imul
xchg
out
push
push
add
and
add
jmp
loope
xchg
xchg
inc
inc
ficomps
std
sbb
and
in
xor
mov
loope
leave
xchg
nop
dec
in
add
sti
mov
xorl
add
inc
or
pop
jno
loope
push
sub
test
push
push
cmp
pop
adc
leave
add
jmp
sub
mov
cltd
adc
mov
rorl
in
mov
mov
pop
mov
cmp
sub
repnz
xchg
cltd
je
inc
mov
mov
mov
cmp
mov
xor
in
je
in
in
in
inc
xchg
push
sub
jno
jle
add
mov
fcomps
fisttpll
mov
inc
mov
add
imul
es
das
fidivrl
sub
aas
push
popa
lods
dec
data16
jecxz
mov
adc
and
insl
dec
inc
jmp
sbb
jne
lods
nop
mov
cmp
pushf
arpl
jbe
orl
xor
ficoml
xor
mov
dec
mov
xor
push
aaa
jae
xor
jmp
add
push
mov
out
fcomp
inc
test
call
enter
add
sbb
ljmpw
mov
movswl
andb
fcmovnu
mov
aad
pop
fldl
lods
lods
dec
xlat
push
push
mov
call
loop
lea
mov
push
jg
jecxz
mov
push
call
aad
xor
in
in
dec
adc
or
and
mov
int3
dec
rorl
add
and
add
roll
jl
icebp
mov
loop
test
sbb
mov
arpl
cmp
pusha
scas
mov
xchg
add
lcall
test
jne
add
xlat
nop
scas
sbb
scas
jns
sub
shrb
popa
mov
push
mov
lcall
push
add
jp
mov
ds
pusha
xchg
cld
mov
je
xchg
orl
inc
xorl
into
or
fbstp
inc
and
pop
in
shrb
dec
pop
std
or
adc
or
or
je
mov
into
test
ret
cmp
adc
or
loopne
outsb
and
dec
jb
cld
xchg
jb
inc
inc
mov
mov
fimull
sbb
xor
stos
or
mov
pop
paddq
pop
loopne
mov
shrl
popa
adc
xor
stos
jge
rcrb
sub
ret
pop
lcall
rcrb
rcl
mov
int
nop
add
jmp
cmp
or
mov
inc
cmpsb
pop
lock
dec
inc
imul
add
les
jns
push
push
test
lods
jbe
enter
jae
xor
fidivrl
imul
cmpb
inc
adc
sub
mov
cmp
jne
push
popa
sti
daa
cmp
adc
push
mov
mov
and
inc
insb
pop
lock
add
add
repnz
testb
jg
lea
xor
xor
or
out
outsb
roll
je
bound
jnp
js
test
mov
xor
std
outsl
push
push
add
inc
sar
cli
xchg
adc
inc
rcrl
inc
call
inc
sbb
xor
mov
iret
inc
push
push
add
nop
ja
inc
adc
mulb
leave
adc
adc
pop
push
pop
lock
sub
sub
out
rcr
dec
adc
std
adc
push
ds
mov
push
hlt
popa
adc
shlb
mov
idivl
cmp
sbb
push
pop
repz
mov
adc
sahf
lret
mov
sub
rcll
imul
push
sarb
jnp
inc
fcoms
mov
sub
or
lock
pop
add
inc
shr
int
mov
add
add
orb
jmp
les
clc
ss
xor
mov
andb
or
in
pusha
sub
lahf
sahf
or
sbb
fsubrl
adc
inc
push
pusha
sub
daa
js
out
testl
xchg
adc
cmp
jae
cmp
push
ret
dec
mov
popf
mov
pop
mov
mov
push
cwtl
inc
jecxz
push
int
lods
sarl
call
gs
ds
sbb
in
jbe
ret
bound
jne
xor
push
pop
jbe
cmp
xchg
sbb
sbb
lcall
dec
mov
push
or
enter
sub
ret
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
imul
sub
js
mov
sahf
push
mov
mov
shlb
into
sarb
sbb
cld
and
adc
inc
xchg
mov
mov
fwait
mov
insb
ljmp
push
andl
or
out
rorb
rorb
test
dec
andb
adc
sbb
add
jp
jl
pop
xor
mov
sbb
cmp
jl
pop
lods
sub
sbb
jmp
or
lret
fsubs
andb
push
or
or
stos
mov
bound
cmp
xor
cmp
sub
push
aaa
mov
push
mov
xchg
and
mov
push
add
pop
xchg
cmpsl
es
push
pop
loope
xchg
aaa
pusha
xchg
mov
push
sbb
insl
add
out
adc
add
push
outsb
mov
inc
mov
test
shl
cmp
dec
cmp
adc
imul
mov
mov
sarb
push
mov
lea
andl
gs
stos
lods
div
ss
fucomip
cmp
je
cmp
jbe
ds
cmp
and
subb
dec
jg
nop
clc
push
and
std
nop
loope
ficompl
das
adc
or
sbb
jo
out
push
in
xchg
add
add
hlt
pushf
mov
adc
mov
test
loopne
xor
pushf
loop
mov
ret
int
cmp
shr
je
or
push
xorb
add
xchg
mov
test
ret
scas
jb
clc
mov
or
inc
mov
mov
inc
push
mov
pusha
cld
jbe
clc
or
jbe
fwait
jmp
push
mov
rorl
fsubr
jo
push
sbb
cmpb
lock
pop
mov
into
pushl
mov
push
lds
lods
sbb
mov
adc
pop
xor
loopne
lods
stos
loopne
loop
jbe
sti
push
je
adc
push
imul
dec
cmpb
into
stos
pop
dec
cltd
in
loop
xchg
movsb
push
stc
jg
ja
or
sub
pop
push
sbb
mov
and
pop
cmpb
push
inc
jne
xchg
xchg
aam
xor
lahf
mov
push
xchg
mov
push
cmpsb
aam
in
jl
push
sub
cwtl
popa
fsubrl
lea
jle
call
aaa
xchg
and
or
xor
push
cmp
mov
or
arpl
pop
scas
dec
jno
in
lcall
push
push
pushf
xor
fldenv
add
or
push
call
cmp
fiaddl
push
jns
jns
or
addr16
aad
fs
push
jnp
and
gs
fiadds
mov
fadds
je
cli
mov
jne
ja
add
cmpb
cmc
fisubrs
lock
dec
push
hlt
mov
mov
push
adc
sahf
insl
fnstenv
adc
jne
clc
and
cmp
push
sbb
push
lods
push
adc
je
fistpl
call
jmp
sub
adc
shlb
leave
xchg
sub
mov
mov
or
dec
and
jbe
loope
aam
push
pop
mov
add
iret
call
push
fdivrl
lods
out
push
push
imul
pop
addr16
mov
sbb
out
jno
sbb
jne
into
cmp
ss
addr16
ss
cmp
scas
mov
dec
jne
push
pop
dec
and
or
js
xchg
push
int3
jecxz
decb
or
jns
outsl
add
push
cmp
jmp
nop
xor
push
sahf
jae
mov
push
subb
rorb
icebp
call
je
and
inc
call
or
and
push
or
dec
setb
push
cld
inc
xor
cmp
jmp
add
movsb
sbb
xchg
fsubrl
fidivrs
xchg
jl
jmp
push
xchg
dec
mov
push
negb
mov
push
dec
xor
add
clc
call
pop
mov
jne
push
mov
cmp
movsl
mov
pusha
movl
filds
add
xor
inc
sbb
or
or
fidivrs
sbb
push
call
lret
and
movsb
jmp
js
sbb
pop
pop
sub
test
or
insb
adc
mov
sbbl
xor
call
int3
cmpl
icebp
mov
xor
push
mov
push
and
shrl
je
push
stc
sub
push
push
dec
adc
mov
xor
sbb
sbb
sbb
jo
or
mov
pop
cwtl
or
popf
pushf
ret
icebp
or
cmp
test
inc
js
test
stos
push
addb
inc
loopne
fs
inc
lret
orl
add
push
add
lock
push
lock
add
add
or
or
insb
stos
in
jbe
test
aas
mov
icebp
mov
inc
xorb
and
nop
decl
or
mov
cmp
fadds
dec
jne
movzbl
push
add
xor
mov
mov
sub
test
shlb
or
mov
incl
nop
sbb
sub
es
or
mov
and
adc
cli
sub
pusha
push
add
mov
and
ja
fisttps
cmp
mov
adc
inc
xor
sbb
jae
inc
pop
rorb
dec
sub
add
dec
arpl
mov
and
add
sbb
in
cmp
call
sub
push
sub
add
push
dec
repnz
inc
push
movsl
add
xor
push
push
call
lret
sub
aam
enter
or
call
movaps
inc
je
xor
cmp
xchg
xchg
ss
jge
movsl
and
pop
aas
dec
jge
xor
dec
jge
enter
xchg
xchg
xor
mov
xor
mov
xor
xchg
adc
pop
inc
adc
push
adc
sub
xchg
push
push
xor
xor
mov
xor
sbb
inc
and
pop
xor
insl
jecxz
xor
xchg
xor
sbb
pushf
jecxz
sbb
mov
fistpl
test
insl
arpl
fwait
or
pop
orl
ss
sub
adc
or
and
xchg
xor
adc
mov
sbb
cmc
xchg
dec
inc
cmp
pop
lds
pusha
push
nop
dec
and
movsb
pop
popf
push
imul
dec
lods
inc
sbb
cmp
jp
jle
mov
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
cmp
aam
mov
xor
ss
mov
decl
inc
cmp
mov
pop
psubsb
add
call
mov
scas
pop
jmp
pop
int
jp
xchg
pushl
cmp
sbb
outsb
ret
jmp
ljmp
sbb
xchg
rorb
imul
inc
popf
cmp
xor
loopne
xor
jecxz
pop
push
into
cmp
xor
fnstenv
adc
sbb
lds
rolb
and
popl
cmp
sbb
pop
inc
add
push
in
push
push
xchg
sbb
lcall
add
mov
leave
test
or
sbb
or
dec
mov
push
lock
sbb
add
mov
mov
inc
fiadds
mov
dec
incb
cmp
es
cmpsb
add
fisttpll
and
ljmp
mov
jle
push
shll
adc
jmp
sub
es
daa
sbb
xchg
outsl
call
add
or
iret
dec
push
cmp
mov
in
ficomps
cmp
mov
nop
push
orb
fwait
xchg
int3
push
xchg
subl
das
sbb
js
mov
flds
rorb
jbe
push
imull
push
imul
movsl
sbb
jp
and
xchg
mov
ret
mov
jecxz
xchg
xchg
pop
xchg
push
test
aaa
bound
cmp
movsl
adc
inc
add
pop
or
ror
mov
in
dec
push
test
cmp
push
nop
nop
sbb
rcl
inc
inc
jo
loope
or
je
rcrl
inc
pop
addr16
aaa
and
and
pop
addl
or
addr16
or
sub
pop
or
ss
or
cmp
and
pop
addr16
popf
out
pop
loop
lods
lret
call
and
push
inc
pop
shl
or
out
rclb
out
jnp
jnp
inc
cs
pusha
nop
push
in
nop
je
xchg
jnp
mov
pop
and
mov
dec
jns
ss
xchg
xor
sub
jns
out
sbb
or
push
inc
inc
inc
out
mov
jmp
mov
dec
inc
inc
pop
mov
out
dec
adc
rclb
lock
cmp
in
cs
pop
nop
add
and
dec
jb
add
out
faddl
add
out
mov
out
out
mov
mov
out
shl
mov
inc
cld
or
addb
mov
int3
add
sub
adc
incl
lahf
xchg
mov
leave
sbb
movsbl
sbb
loop
or
insb
and
xor
cli
dec
pushf
push
outsb
or
negl
xor
xor
xor
xor
sub
xor
inc
mov
ret
test
inc
xor
push
pop
add
or
add
add
add
or
mov
idivl
jo,pt
cmp
je
xchg
add
jb
outsl
in
add
push
jb
push
push
push
gs
out
cmpl
jns
or
xchg
or
iret
in
mov
add
or
xor
fisttpll
or
lcall
or
scas
in
or
or
or
push
or
mov
shrd
or
adc
pop
adc
mov
adc
sub
scas
in
add
adc
nop
xchg
stos
add
adc
xchg
adc
cmp
mov
in
sahf
xchg
fs
push
inc
pop
cs
addr16
pop
and
jne
out
rcrb
sbb
cmp
mov
xor
iret
sbb
mov
jb
sbb
or
je
push
sbb
iret
xchg
cmp
jo
xor
sbb
xchg
cmp
inc
negb
pop
ret
sar
add
add
add
sub
adc
movl
jg
rcrl
pop
jmp
dec
das
sbb
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
jns
in
in
in
out
jns
in
mov
pop
sub
sub
call
enter
adc
push
repnz
and
cmp
ljmp
jmp
jmp
push
imul
in
in
dec
fsubp
aad
aad
in
cmp
mov
out
out
xchg
in
cmp
out
or
je
fisubl
int
lock
dec
mov
icebp
cmp
das
jnp
xchg
stos
mov
repz
std
hlt
hlt
cs
test
or
std
cmc
cmp
push
jnp
cmp
ret
enter
sbb
xorl
clc
repnz
aas
stc
stc
xchg
cmp
push
and
cli
pop
and
enter
fdivrp
orl
dec
leave
jnp
push
nop
shlb
mov
xor
sbb
fsts
xor
mov
std
test
push
lahf
rorl
inc
stos
mov
jmp
adc
push
xor
jecxz
xor
fsubp
cmp
push
addl
cmp
adc
inc
or
lea
out
xchg
scas
call
cltd
sti
dec
adc
push
sbb
daa
xchg
pop
push
and
cltd
or
or
or
cli
out
out
out
xchg
jns
xor
cmp
cli
or
aas
repz
sbbb
xchg
push
pop
repnz
cli
stc
movsl
test
stc
div
sbb
xchg
xchg
clc
jns
mov
push
stc
push
dec
xor
stos
or
or
cmp
jmp
mov
cmp
out
orb
pop
aad
inc
xabort
jmp
lcall
jns
xor
inc
clc
and
and
sbb
out
aad
aad
fdiv
out
pusha
leave
and
negl
orb
lea
xchg
push
jmp
xchg
cmp
pop
notl
imull
daa
or
pop
dec
push
popa
xchg
into
idivb
mov
nop
idivb
insl
repnz
movsb
repnz
inc
repz
push
loope
testb
lret
and
jns
lcall
mov
loope
cmp
leave
clc
cmp
xor
mov
mov
repnz
loope
cmc
cli
hlt
mov
xlat
inc
cld
pop
gs
lock
push
adc
mov
or
push
push
clc
sti
mov
loope
loope
imul
jp
cmpxchg
inc
repnz
hlt
cmp
dec
push
cmp
mov
hlt
in
xlat
jb
or
repz
and
aam
mov
cmpsb
jb
pusha
or
add
xchg
jmp
inc
xlat
orl
xor
or
xor
repnz
xlat
add
hlt
cmp
or
pop
int
shl
icebp
das
xchg
pop
nop
sbb
mov
ds
xor
pop
repnz
rclb
mov
icebp
mov
pusha
leave
sub
sub
in
or
leave
or
dec
icebp
xor
subl
jne
or
adc
test
jp
jmp
cmp
notb
mov
sub
ffreep
push
inc
div
push
xchg
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
push
mov
mov
jb
add
jne
stc
mov
dec
icebp
dec
add
movsb
xchg
cmpl
and
dec
dec
imul
and
dec
ret
and
dec
push
nop
push
jns
int
imul
out
insb
ds
dec
adcl
ss
sub
push
jecxz
repz
mov
cmpsl
jae
insb
sbb
push
push
sahf
negl
dec
xchg
gs
dec
outsb
inc
cmp
jns
faddp
jl
push
cs
movl
xchg
xor
mov
sbb
bound
lods
cld
lea
inc
cmp
and
dec
push
ret
inc
lret
test
and
jp
int
or
adc
adc
xchg
lods
jle
dec
xchg
jmp
xchg
into
mov
jae
adc
add
pop
jmp
insb
xor
ja
or
push
push
mov
lock
dec
daa
push
sarb
xchg
lea
push
mov
jecxz
ss
call
inc
mov
push
pop
or
sbb
ret
fildl
jmp
or
xchg
inc
add
push
in
pusha
adcb
fsubrl
call
jmp
je
icebp
lret
or
pushf
insl
adc
jmp
adc
push
dec
shlb
insb
icebp
xchg
and
xor
mov
cmp
adc
popf
inc
aam
je
icebp
rcll
js
pop
xor
stos
adc
jno
adc
test
adc
hlt
psubsw
cltd
ss
and
add
sub
jecxz
or
jecxz
add
jns
cltd
test
shr
inc
add
inc
jmp
in
inc
inc
add
ret
xchg
pop
xchg
dec
xor
pop
pop
and
scas
and
jo
mov
jo
xorb
mov
inc
mov
xor
ret
mov
push
mov
fstl
xchg
mov
aaa
and
mov
adc
pop
inc
or
mov
add
nop
in
or
mov
sbb
int3
ret
mov
inc
xor
adc
xor
in
jns
add
test
aas
add
sbb
add
dec
test
add
or
dec
sub
ret
add
fs
out
sbb
push
push
out
mov
add
clc
popa
jg
sarb
add
push
adc
ret
xlat
loop
xchg
nop
ret
sub
sti
and
cltd
jne
les
stc
push
add
adcb
mov
xchg
fs
mov
xchg
mov
nop
ret
and
mov
xor
adc
shr
in
adc
in
xchg
dec
int
pop
add
mov
xor
ds
test
aaa
lcall
rclb
outsl
and
fstl
or
or
ss
ret
add
pop
jb
push
into
add
adcb
ret
aam
add
push
lds
ret
sbb
xchg
repz
pop
and
nop
add
fwait
sub
imul
inc
pushf
pushf
pushf
adc
cmp
sub
js
pushf
pushf
sbb
xor
xor
xor
mov
ret
repz
push
dec
add
and
pop
inc
or
push
ret
add
or
and
inc
and
ret
inc
inc
or
ds
inc
inc
sbb
dec
ret
ja
je
cmc
add
aam
push
sbb
test
insb
pop
fs
adc
shrb
adc
shlb
in
push
adc
ret
adc
ret
adc
movsb
daa
mov
ret
inc
adc
sub
xor
mov
cmp
cmp
add
ret
cmp
sub
ret
std
adc
xchg
sbb
ret
andb
mov
add
or
dec
add
adc
outsb
ret
jmp
and
test
cmp
jecxz
and
jl
loope
pop
imul
mov
add
inc
scas
push
test
shlb
push
pop
aam
or
adc
sti
out
dec
jb
in
lock
dec
inc
or
jb
test
add
inc
sbb
xor
fildll
or
data16
data16
and
rcll
or
shll
jnp
iret
dec
sub
insl
add
xchg
in
call
popa
aas
xlat
xor
fnstenv
je
inc
dec
dec
sub
adc
inc
dec
ja
cmp
loopne
rolb
loopne
mov
adc
movsb
sbb
cmp
adc
arpl
cmp
int3
mov
into
dec
fwait
jp
mov
vorps
dec
mov
test
arpl
pop
nop
push
adc
jb
xchg
xchg
jno
dec
mov
push
jmp
and
xchg
push
sub
xchg
and
lea
addr16
or
sub
rcll
inc
xchg
xchg
je
mov
push
aad
sub
int3
xchg
or
sbb
add
call
or
je
sub
push
sub
cmpsl
and
dec
or
aad
or
mov
cmpsl
inc
add
pop
add
cmp
or
cltd
loopne
mov
push
call
nop
pop
sub
mov
jns
sub
push
xor
jno
dec
je
pop
mov
jl
pop
dec
outsb
jmp
insb
in
insb
enter
inc
stos
sbb
je
cmc
rcl
inc
sub
aam
sbb
push
inc
inc
ja
jae
xchg
mov
sub
sbb
subl
push
sub
pop
imul
inc
sub
adc
mov
sub
rol
push
or
fs
cmpsl
xor
jbe
mov
rcrl
sub
inc
out
enter
mov
push
cmp
mov
sbb
sbb
sub
ss
call
adc
sbb
iret
cmpsl
inc
add
inc
inc
mov
adc
shrb
mov
mov
rorb
sub
bound
aaa
shrl
mov
rcl
cmpsb
aad
dec
add
dec
sbb
fdivrs
mov
push
add
addl
sub
or
das
or
dec
sub
je
cmp
push
sbb
sub
xor
out
imul
mov
cmp
daa
sub
dec
nop
inc
pop
movsl
test
insb
xchg
push
sbb
imul
enter
call
mov
rolb
sbb
sub
enter
pusha
and
mov
sub
jo
or
mov
inc
or
push
add
xor
push
sbb
cmp
aam
add
cs
into
mov
dec
cmp
sub
inc
sbb
mov
das
sbb
push
sub
sub
sbb
jmp
pop
or
inc
rclb
arpl
mov
dec
cmp
aam
push
or
hlt
nop
mov
xor
dec
sub
inc
inc
aaa
imul
add
je
sub
rclb
out
ret
call
push
sbb
jge
jae
sub
out
push
loopne
test
add
push
call
xchg
or
int
jl
cmp
ss
lcall
pop
add
and
sub
xor
or
je
or
insb
insl
or
mov
inc
jo
mov
shrb
imul
sub
addr16
xor
sub
leave
xor
add
sti
lret
call
sbb
mov
push
addl
dec
or
cmp
xchg
and
mov
xor
nop
inc
push
sub
ret
imul
jp
cmp
adc
dec
rolb
rcl
jne
les
call
add
and
pop
sbb
clc
js
push
sbb
sub
inc
inc
inc
ljmp
sub
sub
mov
xor
sub
sbb
xor
mov
mov
dec
jmp
pop
cmp
and
inc
pop
lcall
call
adc
dec
push
popa
jo
xchg
sbb
lods
cli
cmp
hlt
lea
xchg
lds
push
cmp
mov
out
loop
into
jmp
xor
imul
imul
arpl
daa
icebp
mov
xor
lods
mov
das
mov
stos
cmp
mov
or
and
push
mov
daa
cmpsb
mov
ret
fstpl
js
sub
dec
bt
mov
inc
push
cmp
sub
clc
jmp
jbe
lods
push
xor
aam
mov
xor
push
add
sbb
add
dec
test
pop
xor
cmp
xchg
or
add
addb
xor
xchg
dec
inc
pop
and
sbbb
pop
or
mov
add
sbbb
xchg
in
jnp
add
or
lret
jae
mov
sbb
push
dec
push
cmpsl
or
push
adc
push
mov
mov
xor
inc
pushf
or
mov
lcall
pop
repnz
jl
repnz
push
sub
movsb
dec
orb
jnp
dec
je
add
js
sarb
jae
inc
aaa
dec
shlb
cmp
xchg
dec
cmp
es
dec
insb
cmp
arpl
adc
loop
push
jae
mov
rcll
cwtl
sti
or
dec
xchg
inc
dec
dec
inc
rolb
push
leave
ret
jne
adc
inc
push
inc
push
sbb
out
or
stos
xchg
and
dec
punpckhbw
inc
cmp
addl
shrb
mov
inc
adc
movsb
arpl
movsl
popa
add
arpl
arpl
arpl
sarb
xchg
add
out
xchg
dec
sub
add
pop
rcl
arpl
xchg
push
lock
pop
hlt
out
or
push
test
pop
enter
shll
jl
mov
add
notb
and
out
cmp
jl
sbb
out
ror
stos
ljmp
adc
popa
mov
je
sbb
call
pop
adc
call
call
fimuls
call
mov
dec
out
jge
inc
cmp
or
inc
popa
pop
push
cwtl
movsb
mov
popa
pop
push
shll
xor
sarl
pop
push
inc
xchg
ret
dec
outsb
ljmp
inc
pop
rcrb
movsb
add
xor
nop
mov
fisttpl
scas
ret
sub
or
pop
push
sbbb
movsb
in
mov
test
xor
push
xchg
pop
xor
jle
adc
xor
loopne
add
xchg
ret
loopne
xlat
adc
fs
push
mov
imul
pop
clc
cs
call
cmp
or
scas
xchg
into
mov
xor
lahf
pop
dec
call
sub
inc
pavgb
leave
mov
inc
adc
data16
imul
clts
mov
inc
pusha
mov
or
mov
adc
fstl
or
nop
adc
inc
call
enter
adc
lea
adc
nop
fs
jmp
inc
mov
or
in
adcl
cmpsb
adc
aaa
and
xor
push
or
jo
and
adc
jne
adc
daa
or
outsb
jae
lea
dec
sub
cwtl
push
rcr
outsb
adc
add
dec
inc
push
jne
loop
call
inc
mov
cmp
je
mov
cld
dec
inc
dec
dec
and
int
add
notb
mov
pop
jo
dec
test
ret
lds
mov
cmp
adcl
and
mov
pusha
addl
cmp
xchg
pop
push
imul
xor
jmp
sub
repz
lahf
sbb
in
clc
pop
and
test
push
arpl
loopne
cmp
mov
out
or
xor
push
mov
pop
push
ljmp
mov
dec
add
pop
adc
outsb
xchg
cs
mov
nop
inc
and
imul
jmp
incl
sarb
add
jb
xor
push
inc
call
xchg
xchg
ss
ss
dec
mov
inc
rcr
and
xor
bound
scas
or
jne
add
movsb
ds
movb
mov
cltd
xchg
insb
cmp
add
cmp
inc
jmp
popa
test
repz
jmp
xor
push
inc
rclb
inc
inc
adc
imulb
add
inc
pop
je
or
or
pop
es
add
add
cmp
test
pop
add
mov
mov
adc
add
divps
lods
mov
xorb
adc
add
je
fwait
loopne
lock
and
cmp
leave
or
add
mov
inc
add
xor
inc
jmp
outsl
je
pop
add
adc
push
mov
jge
popf
pop
pop
pop
xor
sbb
movsl
nopl
add
in
pop
jo
sbb
mov
aas
add
mov
xor
mov
xor
xor
xchg
push
ficoml
lock
rcrl
call
cmp
push
hlt
xchg
inc
shl
mov
xchg
addps
cmp
sti
lods
mov
pop
fisubrs
jge
push
push
xorl
mov
sub
jne
dec
ljmp
cltd
test
cmp
xor
sub
mov
adc
push
mov
sub
push
sar
inc
push
adc
xlat
push
shlb
xor
xor
pop
ss
mov
sub
pusha
loopne
push
hlt
dec
sub
fadd
mov
fcomip
inc
adc
pop
fimull
pop
mov
mov
fldl
or
dec
sbb
dec
or
sbb
jge
inc
sbb
add
inc
and
scas
or
filds
cmc
add
in
icebp
popa
add
dec
inc
mov
in
jo
ds
in
adc
popa
xchg
push
ja
mov
pop
and
push
out
mov
xor
jnp
inc
add
lock
adc
adc
add
popl
popa
mov
inc
int
in
aas
xchg
sbb
add
aas
sub
mov
xor
xor
pop
sub
dec
sub
aas
adc
cmovns
jecxz
mov
mov
xor
fldcw
stos
loopne
mov
push
leave
xchg
xchg
xlat
cmc
fists
outsb
bound
add
icebp
xlat
sbb
mov
mov
ret
dec
ss
dec
xchg
adc
rolb
pop
jb
ja
cltd
insb
push
inc
imul
xchg
push
push
dec
ss
sub
nop
xchg
dec
ss
xchg
insb
xchg
stc
fsubs
jbe
pop
add
pop
mov
popf
jmp
dec
inc
xor
leave
adc
xchg
sbb
dec
adc
shlb
shr
inc
cmpsl
cmp
push
call
lds
pop
mov
mov
gs
sbb
or
shr
jl
mov
dec
pop
and
inc
call
sbb
xor
mov
cli
and
and
xchg
repnz
ror
xchg
inc
sub
xchg
jb
xchg
leave
xchg
shll
cltd
mov
les
hlt
nop
mov
je
xchg
fs
das
and
push
lret
cwtl
insb
xchg
ret
sub
sbb
xchg
xor
shlb
or
ljmp
fbstp
fbstp
je
sbb
enter
push
dec
xchg
mov
shll
out
xchg
sbb
pop
out
xor
and
sbb
inc
xchg
nop
rol
dec
and
fsts
sbb
sbb
mov
xchg
lods
pusha
xchg
dec
cwtl
insb
enter
or
xor
mov
fwait
mov
xchg
adc
push
or
jb
shlb
cmc
imul
fsubr
sahf
inc
test
aam
push
call
push
pushf
imul
and
jbe
out
jne
cmp
insb
push
call
xchg
fwait
lcall
popf
std
in
push
dec
call
adc
cltd
outsb
push
sbb
out
cmp
movb
xor
cltd
xchg
ret
mov
mov
push
je
push
mov
adc
fst
sub
cwtl
daa
add
and
out
dec
push
add
sbb
and
adc
shl
loopne
ds
je
jo
adc
pop
pop
cmp
orb
add
sub
call
cmp
mov
int3
and
test
cmp
jo
testl
roll
mov
mov
adc
pop
pop
rcrb
push
xchg
mov
popa
mov
and
mov
sub
mov
adc
push
fnstsw
pushf
es
mov
adc
mov
or
out
lods
dec
inc
or
mov
daa
jl
ss
cmpsl
sub
cmp
insb
sub
inc
push
cmp
mov
icebp
xchg
push
mov
jbe
addr16
ret
pop
push
gs
fcoms
inc
pop
loopne
xchg
movsb
rorl
packuswb
ja
jle
push
loopne
add
sub
and
push
inc
or
fmuls
aam
pop
call
sbb
sbb
push
push
test
xchg
and
fld
sub
inc
sub
mov
adc
out
mov
jb
jbe
cmpsl
cmpsl
or
dec
fldenv
dec
int3
movsb
pop
loope
fchs
stos
cmp
cmpsl
or
pop
add
mov
cs
sbb
popf
and
aad
push
sub
lret
xchg
and
dec
push
sub
loop
test
flds
mov
loope
fld
adc
push
dec
jno
cmp
movsb
int
mov
fnstenv
adc
movsb
and
cmp
enter
fstps
xor
and
inc
fldcw
adc
aaa
call
adc
dec
arpl
ss
mov
push
test
jecxz
adc
or
fxch
cmpsl
cltd
arpl
mov
sbb
fnstcw
in
xor
ds
cmpsb
cmp
pushf
pop
or
adc
enter
fcomi
mov
cmp
push
inc
cmpsl
or
jp
adc
fldcw
inc
inc
and
adc
or
fldenv
fnstenv
fsts
fstps
and
jbe
push
test
rolb
shlb
push
lcall
cmp
fcmovnu
shrl
andl
push
mov
mov
pushf
fstps
inc
add
or
mov
lods
xor
popf
and
adc
fsts
dec
or
mov
adc
aaa
loop
mov
mov
adc
jmp
sbb
mov
jg
cmp
push
cmpsl
fnstenv
andb
xchg
sbb
add
push
xchg
nop
insl
push
popf
sbb
imul
sbb
out
mov
sub
int3
lds
test
aam
and
test
in
ret
adc
outsb
mov
fxch
lds
cltd
and
ficomps
inc
sub
xor
dec
adc
in
push
aam
adc
mov
test
inc
test
or
sbb
out
cmp
call
and
cmp
adc
mov
add
mov
sub
jo
or
inc
testb
mov
lods
in
ret
aaa
call
daa
or
scas
test
or
sub
sbb
inc
ja
mov
mov
daa
or
mov
cmp
cmp
pop
cmp
cmp
fsubrs
imul
sbb
pop
daa
mov
dec
mov
dec
cmpsl
mov
xchg
or
sub
aad
inc
mov
shlb
stos
adc
popa
call
jge
xchg
mov
fiaddl
pop
push
loop
xor
xchg
call
mov
push
mov
icebp
push
loope
mov
jo
mov
xchg
push
inc
call
jns
test
in
push
mov
pop
cs
or
pop
jb
lahf
sbb
add
je
repz
add
mov
adc
jno
shl
pop
cmp
shlb
mov
mov
or
jns
xchg
imul
inc
mov
push
jle
outsb
adc
decl
shlb
fld
and
pop
jno
pop
shrb
or
cmp
les
or
neg
loope
add
inc
andl
imul
pop
or
insb
dec
pop
pusha
movsb
mov
push
add
jp
sarl
insl
fldenv
inc
jnp
sbb
xor
jle
orb
jnp
inc
add
xchg
pop
sarb
adc
mov
movsl
inc
sbb
sbb
push
jnp
xor
inc
bnd
dec
inc
mov
adc
bound
inc
data16
mov
xchg
jnp
rclb
inc
xor
push
push
jnp
push
inc
mov
add
nop
add
sbb
mov
xchg
mov
dec
test
add
div
mov
imul
pop
in
enter
mov
xchg
mov
mov
or
shlb
and
inc
inc
in
mov
adc
xchg
rolb
inc
cs
mov
enter
push
mov
mov
inc
mov
push
fcoml
push
pop
or
and
pop
lahf
push
or
ret
push
and
dec
xchg
bound
test
les
add
add
push
icebp
mov
pop
bound
call
xchg
in
outsl
nop
mov
or
mov
and
jnp
mov
test
adc
std
and
int3
and
add
je
fnstenv
sbb
mov
xor
iret
sbb
xchg
stos
sub
and
pusha
pop
mov
pop
or
pop
mov
cmp
xor
fistpl
aam
or
jg
lret
xchg
inc
or
aas
xor
unpcklps
das
cmc
fstl
ss
repnz
adc
and
adc
call
xchg
das
push
jle
call
lock
call
lret
call
mov
int
inc
call
mov
stc
sub
lods
andps
movsl
pop
call
mov
call
push
call
jo
insl
je
and
js
pop
jl
push
push
imul
test
xchg
dec
in
xor
push
sbb
dec
add
out
movsl
jb
pop
movsb
in
fsts
mov
xchg
dec
in
mov
mov
shlb
xchg
mov
adc
jae
mov
in
cs
dec
in
push
in
inc
aam
push
mov
hlt
push
cs
dec
es
sbb
adc
repnz
cli
leave
dec
ja
dec
or
leave
gs
loope
test
adc
sbb
xchg
lret
sbb
and
and
sub
mov
jle
lret
test
sbb
pop
inc
push
inc
gs
jmp
cmp
xor
cs
dec
ja
adc
in
mov
pusha
push
test
divl
xchg
pop
push
notb
scas
cs
pop
insb
and
or
adc
lcall
dec
pop
pushf
and
mov
je
data16
push
adc
enter
inc
sbb
int
test
and
or
mov
int
dec
jae
mov
xor
daa
inc
test
xor
mov
dec
dec
jae
push
cli
mov
dec
mov
or
mov
ret
dec
xorb
ret
dec
nop
dec
pop
push
xor
shlb
movsl
inc
xor
inc
lock
and
mov
xor
adc
leave
or
ss
pop
pop
mov
inc
and
imul
mov
test
test
shlb
ja
inc
arpl
mov
mov
add
push
add
pop
orb
or
lods
mov
arpl
mov
bound
lods
push
mov
orb
push
mov
ds
cltd
mov
mov
mov
pop
sbb
testb
mov
add
lods
les
sbb
orb
movsb
jg
mulps
xchg
jp
ret
push
xchg
pop
iret
mov
push
je
fnsave
dec
sbb
xorl
xor
xor
xor
xchg
mov
or
and
mov
cmp
or
xor
inc
push
xor
push
mov
stc
mov
mov
mov
push
nop
push
scas
je
push
or
push
lcall
xor
xor
xor
fs
mov
xor
notl
add
sub
test
add
fbld
fs
or
repnz
xor
sbb
push
ret
dec
push
nop
sub
rorl
stos
adc
push
arpl
lods
mov
outsb
aam
cmp
shll
sub
mov
call
inc
cmp
cmp
rcr
xorl
rorl
pop
pop
shll
mov
cli
adc
adc
pop
lds
aad
jecxz
push
in
sub
rclb
mov
push
loop
roll
mov
sub
add
es
sub
dec
imul
add
sbb
lods
pushf
leave
or
and
dec
pop
dec
sub
cmpsl
inc
push
sub
out
mov
push
call
xchg
xchg
sub
push
sub
xchg
mov
push
and
xor
adc
dec
sub
lods
cmp
xchg
mov
jle
cmp
outsb
sbb
cmp
sbb
shrl
mov
push
mov
cs
add
or
call
xchg
xchg
add
sub
ret
jns
sub
movsl
xor
movsb
and
cmp
sub
mov
mov
xchg
in
outsb
and
leave
pop
sub
test
sbb
fwait
shlb
dec
popa
and
movsl
lcall
adc
rorl
inc
fwait
and
ljmp
call
je
fwait
xchg
adc
adc
jmp
lea
je
adc
bound
xor
sub
or
les
inc
fwait
dec
js
jmp
sub
xchg
add
lods
add
pop
daa
cmpsl
clc
shll
andb
ja
cmpsl
or
orl
mov
ja
pushf
adc
cmpsl
sub
jl
dec
sahf
adc
sbb
add
rcrb
cmp
push
and
mov
inc
jecxz
add
inc
xor
leave
push
dec
stos
mov
shll
pop
pusha
mov
push
dec
sub
sbb
xchg
mov
pop
dec
xchg
mov
mov
or
mov
xchg
and
dec
repz
dec
xchg
ret
mov
es
pop
arpl
ja
xchg
arpl
adc
dec
arpl
mov
xor
and
adc
in
ss
add
jnp
dec
addl
int3
shlb
stos
shll
dec
aaa
sarb
shlb
dec
pushf
mov
pop
xchg
xchg
push
addl
xchg
sub
xchg
inc
aaa
inc
ret
sub
inc
pusha
xchg
jl
test
pop
mov
xchg
pop
inc
cmp
addl
xchg
mov
jnp
mov
rolb
add
jmp
xchg
push
je
push
dec
pop
rcrb
pusha
inc
cs
add
aam
mov
add
xor
xchg
imul
push
and
inc
cmp
sbb
ds
mov
daa
add
popa
daa
add
inc
dec
shr
pop
rolb
mov
lods
test
mov
dec
ret
test
pop
mov
das
fsubrl
inc
mov
cmp
sbb
mov
mov
loop
das
mov
or
add
call
icebp
sbb
lds
fisttpll
add
adcl
inc
shrb
mov
into
mov
loopne
pusha
nop
pop
and
jp
cwtl
sbb
add
fwait
jmp
adc
mov
hlt
push
add
sbb
add
xor
das
xor
or
pop
mov
add
adc
xchg
nop
into
push
pop
ret
add
cmp
orl
push
fstl
pop
scas
push
xlat
dec
inc
aaa
addb
push
jnp
xor
pop
sahf
cmp
pop
mov
out
add
pop
dec
push
addl
fcompl
rorb
aaa
xchg
adc
nop
xchg
cmp
mov
jno
jnp
and
mov
shll
add
add
rorb
pop
mov
mov
or
add
cmpsl
cli
push
dec
cmp
cmp
dec
and
mov
sub
push
out
fst
xchg
cmp
adc
scas
mov
js
out
loopne
insl
jns
sahf
jg
push
pop
call
and
dec
push
xchg
or
and
push
test
fldl
xor
push
push
add
pop
mov
sbb
push
dec
xchg
dec
jmp
adcl
int3
jne
mov
test
pop
mov
mov
sahf
flds
cwtl
mov
mov
or
sbb
xor
dec
xchg
adc
push
pop
xchg
inc
push
sub
lahf
sbb
adc
xchg
add
lahf
dec
xchg
pop
pop
fdivl
cmp
push
out
mov
mov
mov
sahf
sbb
test
or
adc
sbb
outsb
mov
push
push
or
sub
push
mov
and
jmp
subl
jp
mov
popa
push
popf
mov
movsb
test
leave
or
push
call
mov
fdivrs
rorb
cmp
scas
pop
dec
dec
testl
stos
orb
cmp
xor
pop
insb
movsl
hlt
or
les
movsb
mov
inc
pop
mov
pushf
push
sbb
cltd
add
push
cld
test
pop
sub
call
add
or
or
and
inc
mov
or
mov
jmp
repz
adc
fistpl
ret
repnz
xlat
fwait
scas
pop
inc
les
sbb
sub
dec
mov
out
jb
and
jl
call
int
es
call
fimull
adc
and
adc
sbb
jno
mov
shl
enter
jge
mov
sbb
es
lcall
adc
xlat
ret
lods
add
push
addr16
in
cs
jb
out
out
inc
mov
js
and
adc
movsb
repz
popw
mov
dec
out
cmp
inc
sbb
repz
xorb
out
sub
dec
push
int
in
xchg
cltd
mov
test
dec
mov
movsb
roll
push
nop
inc
push
push
pushf
or
cmp
inc
mov
add
and
dec
int
xchg
mov
lock
jmp
nop
and
mov
push
mov
jmp
add
pusha
xchg
popa
add
xchg
push
xchg
cmp
mov
out
sbb
sahf
out
sahf
ret
mov
jns
out
push
ds
or
cmp
repz
sbb
aam
push
mov
xlat
jbe
pushf
pop
push
lods
push
mov
mov
push
push
sub
push
repz
jnp
movsb
push
push
xchg
jl
mov
inc
cmpb
push
push
pop
dec
cmp
sbb
jns
iret
push
repnz
fmulp
mov
test
mov
ret
into
sbb
repz
repnz
loop
out
sahf
out
sbb
dec
repz
sahf
mov
sbb
cmp
repz
scas
lret
jns
cmpsl
stc
or
and
pop
out
sahf
out
jb
nop
sahf
sahf
out
sahf
lods
mov
fsubrp
jecxz
fidivrs
ss
inc
push
shl
sbb
outsb
jle
sahf
idivl
rol
loop
clc
adc
out
int3
mov
aaa
je
fs
push
notl
sahf
cmp
adc
daa
pop
mov
push
xchg
jbe
add
popa
outsl
mov
push
cwtl
cmpsl
insl
mov
iret
dec
sbb
lods
test
add
add
jbe
push
scas
test
test
pop
scas
test
mov
cmp
or
pop
aaa
jo
cmpsb
sub
cltd
lcall
movsl
lea
outsl
push
divl
gs
dec
push
imul
pop
jb
pop
fiadds
push
push
mov
ja
roll
mov
mov
fcoml
es
ss
pop
js
xor
xor
dec
xor
pop
ss
mov
jae
outsl
ss
mov
mov
testb
sbb
push
mov
mov
push
cmp
mov
outsb
aas
das
lret
fwait
test
imul
mov
ret
xchg
pop
mov
inc
adc
inc
mov
dec
lahf
loopne
or
push
mov
jbe
and
imul
and
and
rolb
inc
sti
sub
fsubrl
stos
outsl
rcll
data16
add
testl
cmp
mov
jg
jo
ret
aas
ret
je
inc
bound
pop
hlt
incl
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
sub
es
or
jno
xchg
jb
inc
adc
fistl
sbb
pop
dec
out
dec
jnp
and
pop
dec
imul
mov
jae
inc
jne
outsb
je
adc
outsl
push
repz
inc
js
in
outsl
xlat
push
jnp
inc
xor
sub
xor
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
in
mov
xor
inc
xor
xor
ss
xor
fdivrp
fldcw
cmp
xor
clc
inc
inc
xor
mov
adc
ret
and
lret
mull
add
xor
orb
sbb
xchg
fidivrs
cmp
shll
push
xor
or
push
and
lock
adc
xor
inc
pop
dec
push
inc
add
outsb
jl
dec
sub
push
jle
inc
mov
inc
push
dec
and
mov
push
idivl
and
sub
pushf
xor
add
push
sbb
dec
dec
outsl
mov
dec
or
fs
pop
push
mov
push
or
hlt
imul
ficoml
pop
push
sub
jae
inc
push
out
adc
push
sub
out
cmp
sbb
addr16
inc
mov
lods
sahf
add
insb
mov
lods
and
adc
jg
loope
aam
jb
adc
add
jg
gs
pop
lds
and
outsl
xor
loop
aam
imul
movsb
inc
je
push
push
int3
ficompl
inc
cmp
mov
add
cmp
xchg
sub
sub
xchg
fcmovne
pop
push
outsb
add
mov
jmp
imul
arpl
insb
fwait
js
lock
xchg
and
outsb
ret
bound
or
or
bound
inc
xor
cmp
add
mov
inc
push
insb
rcrl
movb
add
or
mov
data16
arpl
stos
jnp
push
push
and
dec
popa
jae
and
push
shrl
imul
xsha256
cmpsb
push
imul
pusha
int
js
daa
scas
scas
je
dec
outsl
das
dec
fs
imul
push
pusha
or
xor
add
orb
push
sub
movsl
xor
aaa
dec
movsb
jmp
hlt
dec
jae
outsl
push
pop
arpl
inc
roll
repz
dec
push
push
push
add
ja
inc
push
bound
shlb
outsb
mov
add
popa
imul
aam
es
sbb
sbb
fdivl
outsb
pop
add
and
aas
push
or
mov
pop
dec
rorb
data16
push
and
dec
inc
rolb
rcrb
push
add
push
and
ja
sbb
adc
jbe
sbb
push
mov
dec
sbb
cmpsl
xchg
push
push
push
subb
xor
dec
add
sbb
xor
push
fadds
adc
out
cmp
orb
or
add
sahf
jnp
adc
das
jns
stos
and
adc
push
sbb
repz
out
enter
sbb
std
sbb
push
das
push
pop
repz
and
cli
pop
repz
js
jns
stc
jp
jecxz
iret
repz
cld
fdivr
mov
out
xor
fwait
cmpsl
push
mov
out
stos
mov
xor
sub
mov
dec
mov
es
mov
mov
es
int3
sub
adc
jns
cmpsl
stc
push
cld
or
in
int3
jns
out
mov
out
shlb
push
xchg
call
cmp
mov
mov
repz
push
jns
out
pop
push
push
dec
dec
cmp
jns
inc
inc
cmp
xor
repz
repz
and
sbb
repz
sbb
or
add
cmpsl
stc
cmp
cld
or
hlt
call
enter
jns
out
jo
xor
iret
repz
lock
int3
mov
insb
inc
ds
repz
sbb
cld
push
jns
out
fcom
les
js
sub
aam
iret
repz
mov
cld
out
outsl
xchg
call
cwtl
jno
inc
pushf
jl
inc
es
xor
pop
add
push
scas
pop
sbb
mov
mov
inc
push
cmp
inc
sbb
dec
push
xor
sub
push
sub
inc
inc
add
adc
and
mov
xor
divb
les
sub
or
pop
adc
out
and
sahf
gs
pop
adcl
cmpsb
mov
cli
mov
les
pop
push
icebp
adc
pop
sbb
mov
push
rcll
imul
push
jmp
or
pop
xchg
mov
mov
mov
push
pop
jae
push
and
bound
jg
sub
js
shrb
mov
pushf
andb
call
shrb
inc
mov
dec
ret
jns
addr16
xchg
mov
mov
inc
push
xor
xchg
cld
inc
inc
mov
mov
out
mov
inc
cmp
pop
jne
or
js
pop
stc
sbb
popa
sub
add
lods
call
jne
imul
xchg
mov
dec
push
arpl
and
adc
pop
outsl
mov
jo
push
gs
bound
jp
jo,pn
bound
cmp
xor
fcmovnu
mov
push
push
insb
das
inc
outsb
jne
orb
ficoml
mov
pusha
imul
mov
jg
loopne
or
addr16
je
adc
or
adc
inc
scas
inc
mov
insb
inc
pop
insb
pusha
pop
sarb
jg
xor
das
fcoms
aam
adc
pop
mov
ss
sete
das
bound
int3
data16
xor
adc
ljmp
xchg
inc
in
or
dec
xlat
jns
das
jbe
jecxz
rcr
cmpb
fisttpl
cltd
ss
lcall
je
sahf
sbb
push
test
adc
or
push
popf
jl
adc
aas
shll
loop
lahf
jg
cmpsb
jg
imul
loop
xor
or
shlb
or
adc
mov
xchg
adc
mov
je
outsl
pinsrw
mov
inc
fcmovnbe
mov
aas
mov
shl
adc
fisttpl
insb
adc
fs
pop
loopne
dec
mov
jns
sbb
jecxz
jnp
daa
lock
enter
fadd
dec
dec
mov
stos
dec
xor
mov
mov
lods
mov
sahf
cmpb
mov
push
dec
lods
or
imul
xor
add
jle
push
jb
push
lcall
or
push
and
mov
mov
add
push
push
add
push
outsl
ja
xor
cli
dec
dec
sub
xchg
xor
push
add
mov
out
daa
movsb
and
sbb
add
pusha
bound
dec
inc
repnz
imul
neg
ljmp
mov
xorb
push
or
dec
push
jb
sbb
mulb
insb
jae
loopne
ja
arpl
add
outsb
push
add
pop
adc
dec
add
xchg
mov
aas
push
mov
jae
mov
pop
push
push
jae
push
xor
jo
mov
and
mov
mov
mov
or
movsl
imul
adc
cmp
push
cmp
rep
cmp
add
and
add
sub
dec
mov
inc
push
mov
xchg
mov
push
mov
and
push
jo
jb
mov
mov
sti
test
movsb
sbb
roll
push
push
lods
cmpsl
xor
pop
ret
pop
inc
push
sbb
imulb
ret
pop
xor
push
ficoml
inc
popa
jge
and
lods
mov
inc
and
inc
inc
out
push
inc
push
dec
jnp
imul
sub
xchg
xor
testl
push
mov
dec
inc
add
and
popa
out
mov
gs
or
jmp
mov
sub
stos
outsb
jno
cmp
es
pop
push
popa
push
and
and
cmpsb
dec
sub
nop
pop
ds
and
inc
lahf
xor
sub
xor
dec
js
test
int3
inc
inc
cs
or
divl
and
or
call
into
inc
adc
outsb
xor
inc
imul
cmpsl
and
add
call
aas
das
pop
outsl
adc
mov
shrb
inc
add
stc
add
push
lcall
orb
pop
aam
in
mov
xor
dec
dec
mov
lods
nopl
and
lcall
gs
lds
shrl
shll
insl
inc
bound
push
outsl
jl
mov
cld
push
roll
push
or
movsl
gs
mov
cmp
sti
add
push
lock
rcrb
ffreep
add
lret
cmp
jo
push
mov
sub
sti
jo
jp
mov
mov
inc
aam
enter
xchg
cs
inc
js
aaa
dec
inc
dec
pop
or
sub
mov
sbb
and
mov
jmp
sbb
shll
inc
jp
scas
cmp
sub
jo
loope
inc
jecxz
sbb
jno
loopne
pop
rolb
sbb
push
cs
sub
add
push
clc
dec
pusha
push
jo
fiaddl
cmp
add
scas
into
test
je
pop
roll
in
xchg
or
add
cmpsl
ljmp
dec
imul
add
fsub
arpl
fcmove
pop
add
mov
gs
xchg
into
out
mov
inc
cmpsl
add
push
mov
mov
pop
adc
push
push
and
jns
sbb
add
cld
inc
jae
test
cmc
and
sbb
je
ja
cmp
outsl
xor
pushf
add
add
dec
xchg
test
dec
mov
mov
lods
pop
sarb
cs
or
into
insb
sbb
add
int
jle
sub
cmpsb
push
xor
iret
loope
dec
sbb
and
fistps
rclb
ficomps
mov
push
popa
mov
std
fwait
xchg
and
mov
pop
inc
cwtl
aam
push
jecxz
mov
xor
adc
sbb
and
mov
add
dec
pop
pop
pop
pop
push
insb
push
ret
dec
mov
xchg
push
punpcklbw
adc
mov
dec
mov
addb
nop
push
loop
std
jns
sub
imull
test
inc
stos
rolb
mov
pusha
pop
pop
add
dec
add
inc
cmp
imul
sti
fmull
rclb
jns
popa
dec
jbe
addr16
pusha
out
sbb
add
pop
hlt
mov
into
jo
or
add
pusha
adc
pop
push
leave
mov
and
mov
push
lcall
repz
inc
mov
or
imul
out
lock
enter
repz
out
mov
test
pop
mov
pushf
cwtl
xchg
nop
mov
jo
pusha
push
pop
jns
out
push
inc
cmp
and
jl
out
sbb
cld
in
lock
call
sahf
out
fcom
enter
out
sahf
test
mov
jns
out
cmp
sub
sbb
jl
out
or
cld
in
hlt
iret
repz
in
in
int3
mov
mov
mov
js
out
iret
repz
inc
sub
and
xchg
cmpb
or
jmp
xchg
or
and
xchg
sbb
pop
add
push
mov
dec
mov
push
mov
cmp
pcmpeqw
shl
testl
lock
push
dec
sahf
adc
nop
data16
rcr
addr16
add
cmp
push
aaa
movlps
lret
jbe
mov
add
insl
and
cmpl
add
dec
add
and
pop
mov
inc
adc
inc
mov
divl
and
or
scas
stos
mov
or
dec
sub
xor
jae
sbb
inc
inc
subl
or
movsb
addb
fbld
push
mov
push
pop
jo
add
cmp
xor
add
sub
adc
and
add
mov
xchg
fidivrl
lret
sub
clc
lods
mov
xor
and
lahf
xor
xor
adc
and
or
je
lret
cs
pop
mov
xor
jecxz
pop
shlb
and
subl
imul
sbb
cmp
scas
jo
and
and
inc
loopne
es
or
addb
jne
or
jae
popaw
insb
into
insb
fiaddl
das
sti
shrb
divb
fmuls
ds
inc
add
add
inc
pop
pop
adc
push
adc
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
incl
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
lcall
xor
xor
xor
xor
xor
dec
xor
xchg
shll
ljmp
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
dec
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
ljmp
shl
or
xor
xor
clc
decl
push
xor
xor
js
popf
xor
xor
xor
xor
pushl
dec
xor
xor
mov
xor
xor
xor
xor
jo
jg
jge
xorl
xor
jge
mov
xor
xor
fidivl
jg
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
fs
loopne
aaa
loopne
add
or
pop
jg
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
jg
incl
cmp
cmp
push
adc
cmp
cmp
cli
cmp
cmp
pop
cmp
imul
cmp
cmp
incl
incb
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
add
incl
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
decl
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
jg
jmp
hlt
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
pushl
aam
fidivl
sti
xor
xor
xor
xor
xor
xor
push
aaa
ljmp
mov
aaa
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
mov
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
lcall
dec
push
or
cmp
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
ret
clc
mov
xor
pop
xor
lcall
clc
xor
xor
lahf
inc
xorb
xor
xor
out
in
xor
aaa
ljmp
sahf
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
icebp
jg
in
cmp
cmp
std
cmp
cmp
mov
sbb
cmp
cmp
ds
jle,pt
shl
fidivrl
jmp
xor
xor
lcall
cmp
ss
ss
xchg
cmp
cmp
mov
fcomip
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
xchg
cmpsb
sarl
out
out
jo
and
jg
xor
xor
xor
xor
fisubrl
clc
leave
xor
xor
loop
xor
xor
xor
mov
mov
xor
scas
std
xor
cmpsb
data16
ss
incl
incl
aaa
or
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
or
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
incl
cmp
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
jg
lods
jecxz
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
aas
cld
aas
cld
cmp
push
stos
cmp
cmp
or
cmp
push
es
cmp
cmp
cmp
cmp
bnd
lcall
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
cmp
cmp
inc
cmp
pop
cmp
jmp
xchg
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
ds
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cmc
int
or
push
xor
insl
stos
mov
jmp
sahf
xchg
les
fidivl
in
cli
mov
adc
and
sub
cmp
jb
mov
jmp
inc
xor
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
xor
xor
xor
scas
jno
xchg
xor
xor
xor
lcall
cmpsb
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
cli
mov
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
mov
mov
xchg
pop
fimull
nop
cmp
cmp
cmp
ljmp
xor
push
scas
nop
sub
cmp
lcall
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
aas
cld
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
sarb
ja,pt
lahf
xor
xchg
aas
lock
xchg
cs
mov
insl
xor
mov
push
xor
xor
xor
xor
jl
out
rcrb
fiadds
aaa
ret
aaa
jmp
hlt
filds
sbb
cmp
pop
cmp
jge
mov
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
mov
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
outsl
js
ljmp
xor
call
cmp
dec
ss
outsb
notb
ss
in
and
sbb
xchg
cmp
cmp
mov
jl
andl
lock
test
imul
cmp
test
mov
ret
sar
or
cmp
dec
cmp
cmp
jae
aam
adc
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
das
cli
or
cmp
orb
pop
and
push
aad
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
test
loope
rol
loopne
push
jl
xor
xor
pop
xor
xor
cmp
or
pushl
xor
xor
xor
xor
xor
mov
xor
push
aas
cld
lcall
divl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
incl
cli
aaa
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
pop
adc
jbe
cmpl
cmp
cmp
ss
cld
call
cmp
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
shl
lds
push
sub
jne
adc
xor
lcall
xor
jg
xchg
xor
xor
xor
adc
dec
fdivr
xor
xor
ljmp
push
scas
loopne
adc
adc
sbb
sbb
sub
sub
nop
sub
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
cld
jg
loope
into
cmp
inc
xor
xor
mov
jl
mov
ret
negb
mov
mov
mov
xor
xor
pop
push
hlt
test
lods
xor
int3
xor
cmp
sub
ljmp
loopne
cmp
push
sarb
inc
cmp
cmp
cmp
pop
mov
cmp
and
call
cmp
cmp
or
mov
jo
stos
push
rcr
cmp
mov
cmp
push
pop
loopne
cmp
mov
cmp
inc
lock
dec
push
push
add
or
adc
sbb
mov
cmp
sub
sub
xor
aas
clc
cmp
inc
cmp
cmp
pop
cmp
jg
jmp
cmp
cmp
cmp
dec
mov
xchg
cwtl
mov
adc
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
je
mov
shrb
aas
fdivrs
loopne
clc
jbe
aas
std
adcb
pop
bound
out
sub
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
enter
cmp
jo
adc
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
shrl
or
ss
sahf
int3
shlb
aam
fdivr
decl
fdivl
loopne
in
call
ss
ss
add
add
or
or
adc
std
das
shlb
ret
aaa
and
and
sub
sub
xor
cmp
incl
aaa
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
das
ret
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
inc
mov
aaa
movsb
aaa
test
mov
mov
mov
aaa
shlb
aaa
enter
shlb
aam
fdivs
fcompl
in
and
adc
out
aaa
hlt
xor
aaa
or
xchg
mov
adc
adc
sbb
cmp
into
ret
fdivrl
call
adc
sbb
cmp
cmp
jg
push
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
add
mov
cmp
movsb
cmp
mov
mov
mov
cmp
mov
cmpsl
mov
mov
adc
sub
test
add
jne
call
das
jg
in
sahf
repnz
shufps
lock
es
mov
insl
es
mov
es
jle
sub
mov
cmp
dec
add
lret
and
rcrl
lods
fnstenv
jne
add
cmp
fiadds
fsubs
push
add
or
fimuls
jae
sbb
inc
rolb
addl
sbb
mov
adcb
imull
dec
push
push
fisubrs
sbb
pusha
in
or
and
rcrb
add
xchg
adc
push
imul
test
add
mov
aas
xchg
adc
aas
shrl
lret
mov
lods
inc
test
loope
sub
sub
clc
inc
lea
orb
jne
xchg
je
sbb
fisubl
bound
or
xchg
xorb
aam
dec
enter
dec
outsb
push
push
bound
sbb
pop
or
and
xor
sbb
jne
push
mov
les
fsubr
fistpl
in
sarb
xor
dec
jae
fimull
adc
fcoml
push
cmp
je
xor
jb
xor
dec
ror
dec
xor
outsl
or
insb
or
push
flds
mov
mov
test
ficomps
pop
sub
dec
sbb
jne
lods
aad
dec
xchg
jbe
fistps
jns
inc
sarl
xlat
and
and
push
mov
cmp
mov
movsb
imul
push
je
cmp
outsb
xor
sbb
jnp
inc
jp
add
xchg
fcomps
sbbl
das
insb
jle
jle
outsb
and
or
jb
lea
call
rorl
fisttpll
add
cmp
out
jmp
xchg
fildl
dec
leave
subb
test
adc
sarl
clc
int
ret
pop
outsb
push
push
pop
push
mov
or
jle
or
adc
lea
push
push
xlat
test
ss
jb
cmpb
mov
enter
adc
push
adcb
push
or
inc
push
push
call
ror
outsb
movsl
xor
stos
pop
add
imul
add
enter
pop
add
movsb
lods
and
fisubrl
lahf
fidivs
inc
cmp
andb
call
push
mov
and
lea
cmp
js
add
and
jbe
jbe
inc
or
mov
mov
pop
add
icebp
dec
or
mov
dec
mov
mov
mov
or
inc
jnp
jmp
lret
sarb
cmp
mov
fwait
nop
mov
adcb
clc
int3
mov
mov
jmp
lock
push
push
loop
pusha
lock
adc
or
adc
cmp
ret
add
add
fmuls
sbb
or
test
dec
push
push
fwait
push
dec
ljmp
sbb
dec
cld
sub
or
jge
jo
data16
outsl
cmp
xchg
or
xchg
ret
add
add
dec
adc
xchg
pop
mov
mov
gs
aad
or
cli
fbstp
lea
out
fldt
or
add
jge
xchg
add
xor
or
pop
sbb
inc
hlt
das
add
loope
psubsb
or
or
leave
sub
jbe
mov
or
insb
sub
add
repz
xchg
gs
jnp
push
loope
dec
sbb
and
js
loopne
fsubr
pusha
xor
ja
and
loope
inc
or
test
sarl
lret
call
push
adc
xor
xor
add
push
xchg
popf
imulb
rorb
push
mov
push
sbb
inc
and
shl
and
push
movlps
imul
or
cwtl
inc
pop
xor
inc
loop
and
and
or
pop
call
sbb
pop
pop
hlt
orl
rolb
ret
sbb
push
push
ret
mov
add
lea
push
lea
adc
adc
cmp
sbb
or
mov
js
xchg
xor
or
mov
pop
mov
mov
test
and
ss
bound
inc
or
pusha
shl
cmp
or
aad
out
idiv
dec
and
mov
xchg
and
pop
xor
or
mov
ret
xchg
push
scas
push
pop
gs
or
addr16
or
out
mov
xchg
mov
jo
xlat
call
add
or
mov
roll
rolb
and
mov
adc
push
ja
xor
std
mov
adc
dec
and
add
movsl
adc
outsb
mov
or
test
testl
add
imul
add
mov
arpl
add
push
add
sub
inc
and
mov
and
push
adc
push
mov
imul
rolb
cmp
sub
mov
push
cmp
sarb
sarb
imul
dec
cmp
inc
int
int3
mov
int
add
test
adcb
int
pop
push
xor
adc
int
es
les
pop
int
cmp
cmp
and
add
inc
push
xchg
movsb
xor
xor
mov
andl
add
inc
mov
pop
aaa
adc
dec
pop
cmpsb
sub
add
pop
repnz
xchg
adc
pop
inc
add
aaa
inc
pop
cvtps2pd
add
aad
aam
push
arpl
in
shrl
dec
push
mov
sub
dec
stos
gs
lock
jmp
dec
stos
cli
sub
fadds
in
adc
xor
sbb
jne
stos
movsl
les
or
mov
test
push
xchg
mov
adc
fstl
test
outsb
add
pop
test
pop
out
cmpsb
push
subl
ret
inc
add
sub
mov
jo
pop
ret
mov
push
xchg
sbb
push
inc
sbb
lods
adc
adc
adc
sub
cmp
out
scas
xor
scas
sub
push
pop
rol
adc
adc
movsb
sbb
inc
sbb
sbb
dec
pop
sub
xchg
nop
scas
jge
cmc
scas
test
sbb
and
pop
inc
scas
je
xchg
nop
jne
scas
call
mov
gs
mov
sbb
or
enter
scas
mov
rorl
bound
dec
mov
sbb
call
mov
lods
fldl
mov
or
lret
xchg
add
addl
mov
or
rorl
push
dec
jo
push
xchg
nop
cmc
bts
adc
or
dec
adc
es
inc
cld
jo
cmpsb
stos
dec
push
call
and
xor
add
fdivr
mov
dec
and
in
andl
xor
ds
push
add
fcoml
inc
aaa
and
xlat
inc
bound
or
shrl
push
push
or
mov
addb
sbb
inc
sbb
adc
fwait
sub
test
pop
pop
inc
xor
sbb
xor
imul
adc
sbb
adc
inc
and
and
mov
inc
addr16
and
das
mov
or
sbb
cmp
das
and
adc
push
mov
dec
inc
out
mov
addb
mov
ja
mov
xor
jnp
add
cmpsb
add
dec
mov
mov
push
adc
and
ds
xor
push
pusha
pop
inc
xchg
sub
mov
sahf
mov
pop
push
rcrb
int3
test
adcb
mov
mov
mov
mov
mov
insb
lret
dec
fs
mov
inc
jae
xor
cmpsl
cs
ja
and
pop
xchg
and
iret
data16
nop
nop
push
adc
rolb
pop
test
xchg
or
fmull
repz
fldl
pop
push
dec
add
cmp
push
pop
push
rcrb
jmp
cwtl
push
movsb
mov
adc
or
pop
repz
outsb
and
pop
nop
xor
push
push
jl
inc
pop
test
pop
jb
mov
push
jno
pop
mov
jns
out
push
fadds
loopne
lock
loopne
jne
add
push
pop
repz
inc
sub
xor
inc
addb
cmp
in
out
sub
imul
ds
stc
push
or
jns
push
lods
nop
and
dec
sbb
hlt
and
push
addr16
popf
pusha
push
mov
in
cmpsl
or
or
push
add
adc
retw
test
mov
pop
or
enter
pusha
hlt
push
hlt
pop
popa
loope
test
pop
push
addb
pop
cmpsl
ret
xchg
pop
addl
sbb
xor
add
sub
sub
and
add
int
sub
sub
sub
shlb
lcall
sub
in
add
sub
cmp
and
sub
sub
pop
dec
sub
sub
inc
and
sub
cmpsb
imul
or
or
xor
sub
cmp
and
mov
test
mov
and
lods
and
popa
dec
push
aaa
adc
cmp
sbb
jns
mov
push
lods
subl
inc
shl
insb
into
fistl
stc
push
scas
or
dec
movsb
mov
push
lret
ret
xchg
pop
adc
sbb
addr16
adc
xor
fstpl
inc
nop
inc
psubsb
push
inc
and
adc
inc
shrb
or
cli
push
les
inc
repz
sarb
rolb
mov
out
addb
inc
bound
jo
mov
enter
jo
enter
ds
mov
iret
push
xchg
in
inc
aaa
mov
nop
adc
mov
push
inc
mov
inc
adc
repnz
inc
bound
pop
push
sub
sub
es
and
sahf
push
sub
jnp
test
sub
jo
push
inc
xor
mov
cmp
cmp
adc
cmp
les
adc
push
and
sub
call
inc
inc
add
mov
adcb
fldl
imul
hlt
ffreep
orl
or
mov
adc
jns
xchg
jae
jns
push
adc
mov
xchg
mov
push
or
lock
pop
add
jno
jb
js
xor
pop
jge
js
roll
mov
subb
jne
lcall
mov
xor
dec
fdivl
jns
sbb
adc
cvtdq2ps
subb
daa
adc
sbb
loop
jns
sbb
and
cs
daa
jns
inc
bound
sbb
dec
or
andb
adc
mov
xchg
jns
ljmp
icebp
sbb
dec
dec
jns
push
or
int3
or
aam
jmp
rcrb
ret
popa
push
fbstp
stos
test
clc
mov
fidivl
xchg
jmp
outsb
pop
xchg
cmpsl
push
ja
push
jne
mov
push
movl
nop
add
sub
sbb
jbe
pop
adc
dec
gs
push
in
adc
push
mov
push
inc
adc
popa
mov
sbb
iret
inc
sub
lret
pop
mov
test
adc
push
loopne
aam
out
ljmp
loopne
mov
add
filds
xchg
mov
push
ja
xchg
fcoms
popa
mov
sub
push
in
fimuls
dec
mov
sbb
mov
lret
mov
daa
loopne
and
or
pop
dec
enter
fstl
add
inc
call
mov
mov
mov
inc
cs
lea
adc
xchg
fs
sbb
cmp
cmp
and
movl
mov
mov
and
xor
mov
or
cmpsl
cmp
push
nop
jmp
lds
add
mov
nop
jnp
dec
dec
xor
jb
jnp
popf
testb
ret
or
inc
cmp
fwait
mov
mov
mov
mov
and
jmp
sbb
fldl
fcoms
jb
aaa
fistl
pop
adc
aaa
mov
xor
sub
sahf
icebp
pusha
push
push
dec
or
mov
cmp
mov
mov
mov
xchg
inc
mov
or
xor
lods
xorb
dec
mov
je
dec
int
mov
fisubl
or
sbb
pop
loope
mov
pop
mov
xor
add
adc
cwtl
and
ret
mov
pop
xchg
xchg
cmp
aam
mov
shlb
xor
mov
shlb
mov
pop
in
lea
mov
lcall
inc
inc
inc
inc
arpl
inc
inc
inc
cmp
inc
inc
sub
pop
cmp
dec
and
lcall
fldl
cmp
arpl
mov
lock
mov
sti
adc
cmp
enter
popf
mov
pop
jno
data16
xchg
rolb
cmp
dec
pop
call
or
and
xor
jo
and
add
cwtl
bt
gs
push
jo
mov
test
adc
cmpsl
dec
or
and
cmp
mov
adc
hlt
test
cmp
mov
mov
rcl
addr16
mov
lock
jl
movl
dec
mov
pop
xor
std
call
nop
pop
push
aad
inc
xor
stos
inc
lahf
enter
and
movsb
push
je
cld
xchg
aad
std
sub
xor
leave
lahf
sbb
adc
andb
cmc
mov
ficoms
and
add
push
mov
push
repnz
dec
mov
mov
jecxz
mov
xor
repz
xchg
inc
add
das
mov
gs
sub
jmp
mov
leave
add
sahf
and
call
popa
add
jne
cmpsl
loope
mov
dec
pop
loope
inc
les
push
mov
dec
lock
mov
dec
enter
lret
sub
inc
push
cmp
mov
fdivl
sarb
xor
nop
dec
jnp
nop
inc
dec
fistpl
xor
les
pusha
jp
pop
test
hlt
push
dec
loope
inc
inc
fdivrl
and
jbe
jnp
das
shl
imul
add
push
sub
enter
out
jo
cmp
mov
jns
add
push
or
cmc
addb
mov
sub
adc
sub
xor
or
fwait
roll
jp
jge
pop
lea
loopne
mov
adc
inc
jecxz
sar
adc
mov
xor
shll
stc
push
stc
shll
mov
daa
jns
stc
push
fdivs
mov
sbb
mov
stc
pop
lahf
add
inc
and
push
stc
arpl
int
sub
call
enter
xchg
call
sbb
adc
fnsave
movsb
xchg
fisttpll
cmp
xlat
test
xlat
or
enter
daa
inc
dec
pop
xor
sub
xor
add
in
jmp
xchg
xchg
gs
fmul
sbb
dec
aas
fld
and
jne
ret
pop
jmp
pop
xchg
jmp
jno
sub
xor
dec
mov
fisubrs
add
fcmovnu
ja
jae
call
inc
call
mov
inc
lock
add
mov
adc
mov
int3
cld
sbb
inc
add
aas
iret
aam
in
sub
push
inc
fs
call
pushf
push
sarl
add
sub
jecxz
mov
lods
xchg
icebp
imul
repnz
sbb
ret
call
sbb
mov
test
out
loop
and
fdiv
je
aam
xchg
lret
jge
or
add
push
mov
xchg
js
jl
sbb
rcl
add
lods
rcrl
rcll
push
lret
fsub
xor
and
shrl
inc
scas
lock
mov
xchg
rcr
into
push
push
aad
cmpb
push
mov
jl
mov
ret
or
jno
daa
test
shrl
popa
mov
ljmp
pop
rcrl
sbb
shrl
adc
mov
xor
stos
cwtl
mov
sbb
cmp
add
les
or
pop
push
inc
inc
pop
pusha
or
dec
call
mov
and
cmp
sub
pusha
push
push
adc
pop
andb
pushf
sbb
adc
xchg
pop
dec
mov
adc
push
fcomps
push
xor
xorl
adc
repz
pop
cmp
adc
xor
and
jae
mov
xchg
or
ret
leave
add
mov
pop
or
adc
adc
adc
roll
addb
adc
adc
add
in
jp
fldenv
xchg
sub
in
roll
push
jb
xchg
fstps
pop
test
sbb
rorb
cmp
adc
movsl
rclb
xlat
adc
punpcklbw
xchg
or
add
pop
and
and
add
jo
rcl
adc
mov
ss
rcl
arpl
cmpsl
pop
enter
mov
dec
adc
das
mov
pop
adc
rclb
xchg
out
insl
stc
outsb
mov
cmp
pusha
pop
jecxz
add
int3
insb
cmp
inc
adc
add
dec
adc
xchg
xchg
outsb
or
push
imul
rorb
pop
fmuls
cmp
int3
mov
ljmp
cli
pop
mov
sub
das
loopne
adc
fcoml
bound
or
adc
adc
jnp
in
xchg
test
add
sbb
or
jb
push
cmpsl
test
dec
sbbl
adc
sub
push
xor
push
add
inc
sahf
iret
inc
aaa
and
dec
in
adc
fisubrl
test
dec
cmp
jp
dec
sarb
sub
mov
das
lcall
lods
inc
dec
pop
insb
push
mov
dec
dec
out
scas
outsb
pop
inc
mov
call
cmp
rcr
les
lds
fdivl
mov
adc
xlat
push
pop
sub
pop
dec
in
test
roll
pop
adc
mov
les
sub
pop
xchg
xor
aam
dec
fdiv
cmpl
aaa
test
jne
aaa
pop
jb
nop
push
repz
lods
fsubl
pop
call
cmp
frstor
nop
cmp
cltd
mov
or
mov
in
pop
outsb
ret
pop
xchg
in
add
push
pop
mov
jne
hlt
push
pop
push
xchg
pop
rorb
mov
pop
outsl
push
adc
jmp
pop
push
aaa
sub
mov
pusha
mov
mov
mov
or
rcrb
dec
fstpl
sub
push
ja
pop
enter
scas
scas
fisttpll
sarb
xchg
and
cmp
test
jne
jb
pop
hlt
pop
mov
imul
scas
push
adc
push
and
sub
or
jmp
cmc
loopne
and
movsb
dec
and
mov
pop
jle
sbbb
or
iret
rclb
cmpsl
inc
mov
xchg
add
add
pop
adc
and
insb
insb
fwait
cs
adc
pop
lea
leave
in
addl
leave
xchg
leave
jecxz
int3
add
adc
xchg
mov
lret
pop
or
lret
lret
lret
jb
push
bound
lret
mov
cmp
xor
sbb
adc
sti
mov
lock
fdivrs
sarb
mov
jns
mov
cwtl
mov
nop
mov
js
sbb
and
push
pop
mov
nop
orl
mov
enter
sbb
sbb
and
mov
push
jb
mov
and
cmp
sarb
nop
sbbl
mov
enter
mov
in
pop
cmp
pop
mov
sbbl
ds
inc
push
sub
sbb
and
add
stc
mov
nop
and
fdivrs
inc
ret
mov
in
mov
inc
push
jb
mov
and
cmp
push
pop
mov
sbb
inc
mov
adc
push
jb
mov
add
inc
or
mov
outsb
and
or
rorl
xor
and
sarl
stc
or
imul
and
in
sbb
sbb
push
lcall
and
cmp
dec
das
and
sbb
cmp
or
lcall
xor
sbb
imul
mov
ret
mov
pop
repnz
xorl
es
lock
or
and
into
aad
xchg
nop
or
test
xor
in
xor
loopne
int3
or
sbb
xor
dec
inc
sbbl
inc
jb
stc
mov
cmc
or
lret
or
ret
adc
mov
mov
fs
mov
xchg
or
pop
icebp
mov
sbb
pop
scas
adc
sub
mov
out
pusha
xchg
test
inc
add
mov
test
mov
push
adc
push
adc
adc
adc
xor
out
stos
nop
and
out
and
sbb
xchg
pop
push
inc
out
sub
pop
push
enter
sub
out
jmp
nop
movsl
mov
out
or
mov
inc
xchg
push
shl
xchg
aaa
sahf
out
adc
mov
out
xor
mov
js
mov
out
mov
mov
mov
out
enter
jl
mov
mov
test
and
jb
es
nop
out
fists
mov
cmp
leave
sbb
pop
mov
sbb
nop
movsl
out
cmpsb
sub
stos
inc
xchg
out
jle
in
inc
xchg
out
outsb
pop
dec
ja
mov
pop
and
inc
and
xor
fs
int3
lea
sub
inc
test
sub
adc
out
add
jmp
fstpl
sub
or
inc
cs
and
or
and
test
enter
mov
xlat
mov
push
adc
je
out
andb
shrl
out
pop
push
or
ficompl
and
out
mov
or
nop
scas
movsl
cmp
pop
out
sub
out
mov
dec
cmpsl
cmp
imul
je
shll
mov
adc
push
xchg
fwait
and
mov
movsl
sbb
mov
jae
push
loop
nop
out
sub
dec
push
and
cmp
je
in
shrb
hlt
adcl
lock
jle
and
int3
fdivrs
or
ja
pop
cld
sub
lahf
sbbb
dec
cld
sub
cmpsl
dec
dec
sbb
mov
mov
fs
push
out
and
mov
lock
mov
push
lahf
cmp
dec
out
sub
sbb
rcrb
out
inc
sbb
ss
adc
je
fldcw
loope
sbb
dec
add
and
loopne
adc
xor
adc
nop
push
sub
out
xlat
pop
sbb
call
cmp
out
dec
sbb
stos
out
pop
lods
enter
out
and
pop
out
dec
aaa
mov
inc
out
mov
out
stos
nop
movsl
insl
cmp
out
jmp
xlat
and
lret
xor
cmp
fs
add
mov
out
xchg
add
sub
cmp
out
insl
mov
je
nop
test
out
pop
movsl
xchg
nopl
cmp
xchg
sub
pop
mov
out
arpl
or
sub
scas
or
inc
out
sub
sbb
in
cs
jbe
push
std
ds
or
sub
out
inc
xchg
sahf
cmpsb
cmpsb
jg
andl
mov
dec
add
mov
cmp
sbb
xor
and
push
push
sub
push
and
ss
dec
and
je
inc
and
cmc
or
out
shrb
pop
inc
and
out
dec
add
pusha
jns
lea
mov
push
pop
adc
push
enter
aad
nop
and
dec
xchg
push
push
inc
and
das
xchg
repnz
out
loopne
push
enter
rcrb
inc
scas
inc
xchg
out
jb
std
sub
mov
ja
test
adcb
aad
scas
inc
xchg
out
jne
and
sarb
push
stos
nop
movsl
movl
stc
je
mov
add
push
out
xlat
and
xchg
add
callw
andb
sub
shr
nop
and
mov
out
push
stos
inc
add
out
lahf
mov
out
pop
addb
ret
mov
lcall
adc
mov
xchg
repnz
xchg
outsb
test
mov
jno
adc
arpl
pop
push
and
pop
jmp
out
addr16
mov
les
les
or
out
inc
and
sbb
lods
xchg
adc
inc
out
shl
cmp
jp
pop
inc
test
xchg
into
inc
xchg
xor
xchg
out
push
enter
out
enter
inc
out
ret
lea
push
and
mov
dec
push
dec
repnz
jb
xor
sarb
test
mov
add
test
fistps
or
cltd
jmp
inc
dec
and
push
and
xchg
pop
iret
rolb
inc
mov
cmpb
add
jmp
loopne
add
mov
push
call
mov
pop
lcall
data16
cmp
aaa
cwtl
adc
lods
push
pop
popf
in
mov
xor
pop
add
movsl
clc
andb
aad
lock
push
cltd
push
dec
sub
loop
jp
and
add
fildll
int3
mov
and
dec
repnz
out
stc
mov
out
xchg
jmp
imul
adc
mov
cmp
repz
dec
pusha
jo
jns
iret
repz
add
adc
out
sahf
out
bound
mov
cmpsb
mov
iret
sarl
push
xor
repz
repz
cwtl
cmpsb
mov
stc
cmp
ret
or
push
sahf
out
sahf
sub
dec
pop
data16
sahf
out
mov
cmp
out
push
stos
and
iret
repz
push
pusha
insb
jbe
xchg
inc
cmp
movsb
mov
xor
nop
dec
repnz
lea
adc
adc
push
int
xor
and
dec
mov
sbb
imul
adc
sub
push
outsb
ds
imul
push
clc
mov
insl
sbb
mov
insl
cmovge
pushf
aaa
add
subb
clc
mov
push
mov
sahf
dec
or
add
test
adc
fcoml
adc
push
adc
xchg
sbb
call
jl
repz
sbb
mov
stc
sahf
push
pop
sahf
mov
and
and
cmpsl
stc
pop
cmpb
sbb
cmp
out
cld
cmp
xor
aam
or
adc
add
jo
pop
addr16
inc
xor
insb
pop
popa
add
xchg
iret
repz
or
xor
sbb
add
out
ds
xchg
hlt
call
out
aam
enter
jns
out
mov
out
sahf
mov
mov
out
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
sbb
sarl
or
nop
in
les
repz
test
out
pop
testl
mov
sahf
pop
dec
dec
inc
xor
dec
repz
clc
mov
int3
lods
stc
cmp
repz
in
lock
cmpsl
enter
xor
jg
push
add
in
mov
mov
stos
add
add
push
inc
enter
enter
gs
mov
xor
push
push
add
popf
popa
add
xor
push
cmpsl
or
sub
mov
out
mov
ja
ffreep
fs
ss
dec
inc
or
inc
mov
in
cmp
jnp
or
sbb
daa
xchg
sahf
xor
push
and
aas
pop
pop
mov
xchg
or
les
push
daa
insl
out
jge
fs
jo
mov
inc
add
outsl
mov
iret
test
jge
imul
lahf
add
mov
iret
mov
xor
addr16
xchg
hlt
xor
es
sbb
xor
test
sbb
push
inc
mov
jl
push
adc
mov
daa
rclb
fcoms
cmp
mov
jge
and
cmp
pop
push
or
leave
inc
out
mov
sbb
dec
lahf
xchg
sub
dec
jg
dec
mov
fimull
push
mov
pop
jo
js
adc
ja
mov
push
clc
push
dec
sar
test
adc
jg
pop
or
bound
in
adc
xchg
cmp
mov
les
and
xchg
fildll
shr
jne
mov
lock
aaa
add
aam
inc
in
inc
inc
test
mov
sti
fmuls
jl
add
iret
jb
jbe,pn
cmp
jno
sub
pop
lahf
cmpsl
cmp
addr16
add
mov
cltd
aaa
mov
jle
arpl
les
inc
adcb
stos
dec
push
sbb
jecxz
pop
pop
inc
xchg
and
dec
aas
outsl
xchg
out
mov
jne
push
push
arpl
std
xchg
jno
add
outsl
and
sbb
dec
loop
rcrl
int3
insb
sbb
jno
sarb
xor
add
adc
inc
ljmp
filds
sbb
addb
sbb
mov
gs
sbb
adc
stos
or
dec
mov
xchg
xchg
xchg
push
pop
sub
mov
andl
cmpsb
mov
push
call
xlat
sbb
push
sbb
sbb
push
shll
push
sbb
cmpsl
push
test
test
sbb
sbb
inc
shrl
mov
jecxz
add
sbb
sbb
es
add
sub
sub
push
sbb
mov
mov
inc
pop
add
mov
xchg
sbb
andl
les
icebp
mov
push
xor
mov
in
add
dec
sbb
inc
movsb
push
sbb
popa
lahf
sbb
rolb
xchg
movsb
sahf
out
adcl
jns
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
enter
iret
repz
test
mov
sub
dec
je
insb
push
xchg
idivl
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
gs
out
pop
dec
xchg
add
dec
sbb
imul
lock
test
arpl
xchg
push
nop
inc
aad
das
verr
mov
or
sub
mov
pop
mov
in
mov
jg
in
pop
enter
test
lds
lcall
lret
push
mov
or
mov
mov
fxch
and
pop
adc
incl
rolb
add
push
and
push
sbb
pop
xor
xor
inc
xor
mov
xor
xor
sahf
xor
rcr
add
jg
xor
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
mov
push
cmp
andb
xchg
rorl
cmp
mov
cmp
jecxz
cmp
sahf
fdivrs
bound
cmp
xchg
fwait
popa
loop
cmp
mov
incl
ds
ds
data16
clc
incl
aas
fs
imul
aas
jecxz
call
mov
loopne
stc
and
sub
xor
jecxz
inc
and
lds
out
nop
rorl
loope
out
xor
mov
int
repnz
xor
xor
and
daa
xor
cmp
inc
sbb
pushl
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
xor
xor
adc
sbb
sbb
cld
inc
xor
sub
xor
mov
or
xorb
xor
xor
ss
xor
xor
xor
xor
xor
jg
mov
mov
mov
mov
xor
xor
xor
pusha
cld
pushl
xor
and
sub
insb
ss
xorl
fbld
jecxz
out
push
jp
aaa
cmp
insb
mov
popa
cld
cmp
leave
xchg
jg
jbe
cmp
sbb
sbb
and
and
incl
xor
jp
test
mov
mov
repnz
cmp
pusha
cld
test
pop
dec
cmp
test
stos
push
arpl
jg
lock
mov
ss
dec
cmp
cmp
cmp
add
idivb
cmp
cmp
sbb
mov
add
pop
cmp
mov
add
int3
cmp
ds
mov
outsb
ds
cmp
dec
xchg
cmpsb
lds
repnz
cmp
and
inc
xor
xchg
jno
push
xor
xor
jle
xor
jecxz
push
xor
dec
xor
aam
fiaddl
xor
xor
cmpsl
jl
mov
repz
outsl
test
lret
jecxz
pusha
cmp
add
mov
fs
add
outsb
pop
jecxz
aas
xchg
sub
cmp
inc
js
jle
xchg
push
sar
xchg
cmp
cmp
jecxz
mov
in
adc
call
inc
dec
ss
cmp
mov
push
dec
idivb
xchg
inc
and
cmp
dec
push
and
jne
jnp
subb
push
std
jg
cmp
cmp
adc
cmp
es
in
jmp
pusha
fsubl
ljmp
stos
xchg
xor
inc
jp
mov
insb
cmp
cmp
cmp
cmp
cmp
sub
incl
xchg
and
cmp
push
ds
ds
clc
sbb
ljmp
aas
and
dec
aas
push
aas
or
outsb
xor
fnsave
out
fidivl
test
clc
xor
inc
clc
cmpsb
sbb
daa
loop
jg
mov
pop
lret
xor
xor
xor
sar
fwait
jle
data16
xor
mov
test
jecxz
sbb
cli
xor
adc
fildll
loope
xor
aaa
jnp
pop
ret
mov
or
cmp
inc
adcb
icebp
ret
cmp
xchg
cmp
lret
sub
cmp
mov
mov
pop
cmp
xchg
cmp
inc
sub
jle
pop
cmp
ja
or
cmp
cmp
cmp
cmp
cmp
icebp
dec
push
or
cmp
cmp
and
out
nop
pop
cltd
cmp
cmp
cmp
mov
sbb
aas
sub
pushf
jmp
ret
sub
pop
outsl
or
js
lock
xor
out
xchg
jno
adc
xor
push
cmpsb
xor
xor
imul
sub
jns
mov
out
push
adc
sbb
das
ss
mov
mov
aaa
xchg
jno
mov
pop
cmp
cld
lea
out
push
mov
lret
cmp
cmp
cmp
lea
mov
fisubl
cmp
jo
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
gs
aas
mov
scas
pusha
add
jg
lahf
sbb
sub
cmp
xor
test
xchg
push
xor
bound
fbstp
icebp
push
push
push
roll
push
mov
xchg
mov
hlt
hlt
xor
ss
aaa
fimull
cmp
cmp
cmp
cmp
scas
or
jo
mov
xor
ret
popf
xor
adc
outsb
and
inc
ret
xchg
into
sub
cmp
jb
sub
outsb
mov
lcall
cmp
xor
outsl
xchg
adc
and
out
or
xchg
xor
ja
icebp
add
cwtl
xor
mov
mov
sbb
xchg
mov
or
movsb
jle
call
in
popa
je
pop
hlt
push
add
and
test
stc
int3
out
sub
push
add
mov
xor
push
mov
nop
push
and
mov
mov
fcmovb
xor
int3
xor
push
and
loopne
lret
sub
lock
mov
test
xor
xor
adc
pop
jne
sbb
cmp
inc
xor
incb
sbb
push
xor
xor
icebp
aad
xor
insb
push
je
push
je
mov
xor
cwtl
xor
xor
mov
rol
dec
call
aaa
ja
call
xor
nop
mov
outsl
sbb
sahf
inc
xchg
sbb
inc
jecxz
push
cmp
xor
push
mov
mov
int3
xor
cmp
dec
add
xorl
pop
cmp
pop
daa
cwtl
out
fsubrs
xor
mov
xor
xor
xchg
xor
xor
mov
loop
pop
inc
jecxz
xor
xchg
pop
xor
filds
xor
fisubs
xor
ret
add
stos
sbb
jo
ret
push
pop
fmull
push
std
jno
in
in
xor
dec
xor
data16
jo
mov
sbb
jb
push
gs
xor
cld
cmp
inc
pop
jl
jo
dec
xchg
push
lcall
insb
js
call
xor
jp
xor
xor
xor
xor
xor
xor
xchg
cmpsl
or
sub
pushf
xlat
test
lods
and
addl
fiaddl
leave
clc
mov
xchg
mov
and
loopne
sbb
jo
nop
ljmp
mov
fdivr
add
inc
dec
inc
dec
mov
fcoml
push
jo
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
lret
lock
or
xchg
add
push
fisubrl
add
or
mov
shlb
jmp
jge
lcall
movb
adc
pop
and
xor
inc
mov
adc
xor
sti
and
bound
js
xor
inc
inc
jne
mov
arpl
adc
sbbl
or
or
adcb
sbb
movsb
xor
push
lahf
add
arpl
scas
pushf
sbb
test
into
add
loopne
add
pop
scas
cmp
fdivr
pop
pop
adc
push
adc
pop
popa
jno
and
adc
add
lods
or
xor
adc
jo
lock
and
or
adc
xorb
scas
fiaddl
or
js
push
sbb
dec
jo
or
fcomip
jg
add
lds
cld
cli
and
mov
inc
jnp
test
cld
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
or
push
stc
or
xchg
jg
or
in
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
cld
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
ja
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
lcall
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
pushl
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
addr16
cli
push
out
or
cld
push
fists
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
add
clc
xchg
jmp
sbb
add
inc
sbb
mov
out
pop
jb
mov
or
push
mov
mov
inc
fwait
sbbb
mov
dec
jp
push
gs
sti
sub
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
ljmp
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
lret
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
ljmp
inc
in
mov
outsl
incl
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
in
sbbb
lahf
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
call
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
adc
adc
push
jo
pusha
imul
add
mov
cmp
sbb
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
loop
add
jae
shrb
shlb
out
aas
stc
incl
mov
xchg
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
insl
rol
adc
and
lahf
fmull
enter
testb
mov
mov
pop
mov
sub
in
pop
decl
mov
dec
incb
fisubrl
aas
mov
or
mov
sbb
inc
or
pop
jg
add
push
mov
jg
mov
aad
test
mov
mov
mov
push
jbe
push
sbb
stos
icebp
pop
incb
addl
jno
adc
push
inc
jecxz
sbb
sarl
idivl
clc
xorl
mov
imul
sbb
std
stos
dec
push
in
aas
mov
fsubrl
push
push
and
add
push
clc
xchg
pushf
mov
movswl
push
or
and
mov
adc
inc
aas
push
rorl
jmp
rolb
pop
inc
jb
fistpl
adc
call
call
sti
jno
pop
nop
mov
inc
sti
arpl
daa
std
or
xchg
lcall
incb
popf
push
loop
sbb
or
imul
xor
dec
mov
pushl
fsubr
fistps
lds
fidivrl
jg
stos
icebp
jg
pop
add
dec
mov
sub
jge
xor
lahf
les
aas
mov
repz
sbb
cld
addl
sbb
rol
stc
mov
lahf
outsl
int3
push
sbb
pop
mov
aas
pop
test
bound
pop
outsl
xchg
decl
lock
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
rol
mov
jp
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
decl
loopne
shrb
rcl
jg
adc
xor
pop
rcr
cmp
decl
sub
jmp
lea
jp
jnp
jecxz
adc
incl
ds
pop
adc
imul
or
inc
pop
xor
rorb
ljmp
jmp
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
into
ret
incl
insb
or
and
xchg
fdivp
mov
insb
test
aas
repz
jle
sar
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sub
lcall
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
adc
jne
pop
cld
or
dec
ss
jnp
leave
inc
lods
movsb
or
repnz
mov
add
call
outsl
scas
cli
in
cmpsl
lret
pop
in
cmp
jmp
mov
clc
adc
jmp
hlt
dec
mov
inc
sbb
xlat
inc
aas
mov
jg
mov
mov
or
addr16
sbb
cld
daa
jp
std
adc
cltd
aad
ret
leave
mov
ret
nop
cmp
das
incb
lock
jg
pop
pop
div
cld
idivl
fs
aas
adc
loope
jae
jmp
shrl
je
jge
pop
sub
jb
out
xchg
add
out
icebp
mov
xchg
insb
clc
fndisi(8087
fisttps
sti
mov
fbld
es
inc
dec
das
jge
mov
cmpsb
cmp
call
pusha
xlat
pop
lock
decb
adc
mov
and
or
mov
nop
loope
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
rcl
sub
dec
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
mov
mov
push
cmp
repz
shlb
jo
push
cld
imull
out
jg
jno
ret
cwtl
scas
xchg
xchg
arpl
xchg
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jg
adc
sbb
mov
daa
add
adc
add
mov
outsl
xchg
push
imul
pop
stc
push
dec
out
fstpt
mov
repz
les
dec
std
add
fsts
dec
or
jecxz
adcb
inc
inc
cs
push
push
sbb
mov
push
popf
test
and
pushl
inc
lret
movsl
mov
stos
sub
xor
cmp
call
adc
fists
jge
js
and
sub
sti
rcl
aam
pop
inc
cmp
shrl
scas
dec
fildll
gs
mov
repz
ror
add
std
out
or
xchg
add
outsl
mov
push
mov
mov
pusha
jp
jb
clc
mov
test
call
mov
div
xchg
and
faddl
stos
loope
jbe
and
xchg
inc
jl
call
out
in
cmp
cli
jae
push
pop
jns
jl
add
int3
aad
add
ret
push
dec
xor
insb
jge
cli
dec
ja
lret
es
push
icebp
xchg
xchg
scas
sbb
out
out
pop
decl
lahf
scas
and
xchg
sub
inc
popf
int
nop
or
dec
jecxz
pushl
xchg
sbb
pop
je
icebp
fistps
pop
or
jnp
jno
stos
mov
std
ss
mov
sub
pop
mov
push
movsb
les
mov
jecxz
xor
lcall
push
lret
mov
shrb
cs
cmp
insl
sbb
lcall
out
ss
jmp
mov
mov
push
repnz
std
mov
iret
out
lcall
cmp
outsl
aaa
jns
or
scas
pop
push
popf
push
dec
repz
push
nop
cmp
idivl
mov
mov
es
bswap
aad
xchg
sahf
fwait
popf
shll
mov
fstl
jmp
cwtl
mov
pop
lock
outsb
sahf
enter
jb
cmp
push
xchg
xor
mov
mov
pushf
mov
daa
xchg
das
add
cmp
cld
pushf
arpl
pop
fsubl
in
push
rcrl
and
ror
lahf
jnp
les
and
scas
ljmp
inc
mov
lret
mov
add
lds
lock
add
push
std
dec
je
ja
ljmp
inc
add
or
push
pop
insl
jne
xchg
js
pop
mov
sar
decl
pop
sub
mov
adc
mov
push
xchg
stc
nop
ja
fmulp
repz
sti
ds
lcall
dec
nop
mov
mov
mov
sbb
jle
jp
pop
xchg
push
in
sbb
pushl
mov
hlt
and
dec
imul
sub
iret
mov
jp
pop
mov
xor
push
in
mov
sbb
cmpb
std
push
dec
call
rorb
add
ja
xor
sub
nop
mov
aad
mov
gs
enter
pop
push
into
aad
mov
xchg
mov
xchg
push
test
pop
ljmp
jle
std
fwait
mov
xchg
shrb
sbb
ret
decl
loope
sbb
shrb
daa
loop
sti
pop
clc
or
cli
stc
xor
and
ds
lcall
mov
or
push
push
pusha
xchg
lods
jge
into
out
cmp
out
js
jmp
and
aaa
aad
clc
sar
divl
arpl
jmp
sbb
incl
push
jbe
pop
repnz
push
lods
in
inc
lret
cmpsl
test
and
push
and
lods
dec
ja
loopne
iret
in
sahf
decl
jmp
and
int
movsl
mov
pop
add
jnp
mov
decl
cmpb
iret
push
push
push
pop
call
repnz
or
pop
push
test
or
scas
push
and
jg
incl
fnstcw
cmpsb
inc
bound
addr16
test
adc
stc
aad
incl
sahf
in
loop
imulb
das
pop
mov
cmp
adc
mov
push
jmp
decl
mov
dec
cmpl
testb
cwtl
cltd
jne
inc
loop
stos
arpl
mov
pop
jns
fs
and
sub
xor
push
add
ja
mov
mov
outsl
clc
or
rorb
and
pusha
cmpl
stc
push
xlat
jl
mov
incb
dec
call
call
data16
sub
rcrl
lahf
adc
cmp
lret
fbld
sbb
jp
test
dec
push
incl
ja
movsb
xchg
aam
cmp
outsl
fmuls
xchg
mov
setae
outsl
lret
dec
and
or
xor
cmp
sub
fbstp
push
shr
stc
xchg
cmp
in
push
sub
jbe
sbb
stc
iret
sar
popf
shr
and
daa
xchg
fsts
push
lock
xor
mov
xor
sahf
and
push
leave
repnz
push
push
lret
lcall
sub
ljmp
inc
sbb
ja
mov
or
jl
and
cmpsb
mov
out
xchg
int
fucomp
jg
push
lret
pusha
cmp
pop
jns
jb
lahf
or
ss
fdiv
pushl
int3
mov
mov
push
ja
push
sub
icebp
stos
out
cli
ja
sub
and
cld
or
test
xchg
decl
adc
scas
mov
cld
inc
xchg
push
mov
dec
test
insb
adc
stos
dec
enter
leave
add
stc
inc
call
adc
ss
cmpsb
cwtl
and
sbb
pop
jecxz
push
stos
add
push
push
mov
in
call
xchg
adc
out
sbb
mov
pop
movb
jns
mov
cmp
or
mov
std
lret
xor
jmp
pop
cwtl
jmp
sahf
paddusw
mov
cmpsl
call
pop
into
xchg
das
mov
mov
fdivs
notb
adc
ret
add
jne
or
popa
shlb
aaa
xchg
cld
push
popf
push
jns
push
push
mov
insb
mov
int3
cli
popa
xchg
test
and
jnp
ds
jne
xchg
sub
scas
loop
bound
ret
ja
push
xchg
lods
addr16
hlt
sbb
iret
hlt
fsubs
jp
push
nop
lret
inc
sbb
push
mov
xchg
cmp
adc
sbb
jg
dec
mov
arpl
mov
mov
add
jecxz
jg
and
movsl
int
mov
or
andl
ret
inc
dec
hlt
call
cld
andl
aas
fadds
gs
iretw
mov
jno
lds
inc
mov
fucomip
mov
out
aaa
dec
cmpsb
insl
lods
loopne,pt
jle
test
pop
push
leave
nop
call
mov
xor
inc
push
hlt
mov
in
push
ds
jnp
into
out
dec
ljmp
fsubl
push
or
rcrl
pop
daa
cmp
mov
out
pop
mov
enter
xlat
cs
mov
out
jp
sub
jne
push
push
adc
xor
xchg
incl
xchg
int
aam
outsb
jne
pop
and
mov
into
lds
jl
cmp
call
scas
je
test
pop
fcmovnbe
call
mov
scas
mov
mov
xor
lcall
loope,pn
mov
popf
sub
cmpsl
jmp
sbb
mov
pop
in
sub
push
or
icebp
xchg
push
test
xor
insb
mov
popf
mov
data16
mov
mov
aam
in
adc
in
mov
clc
sub
outsl
scas
or
mov
movsb
jle
jo
test
imul
mov
addb
jge
js
lock
add
cmc
roll
fstl
sahf
test
lds
in
or
pop
or
scas
jmp
subl
icebp
sub
mov
cmpsl
push
decl
lods
mov
pop
sbb
jg
fsubrs
insl
mov
std
outsl
outsl
sbb
jl
sbb
call
fwait
jno
jb
test
mov
test
adc
jecxz
mov
fcoms
mov
or
in
sar
or
pop
aam
lods
or
repz
cs
mov
xor
xor
xor
sbb
fwait
js
pop
out
iret
loop
jp
push
mov
jg
lock
and
xchg
xchg
add
xchg
icebp
cmpsb
mov
fcoml
mov
jmp
lea
cmp
int
pop
stos
imul
push
sub
xchg
test
jnp
decl
cmp
je
stos
dec
mov
xchg
and
mov
insl
add
iret
xchg
add
outsl
stc
mov
sub
mov
inc
out
dec
fwait
pop
es
fnstcw
leave
add
mov
incl
adc
mov
loop
mov
ret
addr16
in
sbb
das
ds
or
stos
mov
mov
mov
rcll
mov
pop
aam
fcompl
outsb
adc
mov
push
dec
lds
jg
ss
je
adc
dec
add
and
xchg
mov
jmp
aam
mov
pop
stos
shlb
hlt
js,pn
mov
push
lret
jae
xor
incl
mov
mov
add
xor
leave
int
mov
lods
inc
je
push
add
or
or
lcall
rcrl
mov
adc
inc
sahf
mov
cmpl
scas
ret
mov
jge
shll
out
sbb
rolb
push
pop
call
lret
push
mov
mov
out
inc
repnz
jle
decl
out
sbb
pop
mov
add
ljmp
cld
xchg
mov
sub
cli
ljmp
scas
jbe
das
jmp
adc
out
pop
out
xor
call
pop
in
cli
push
xchg
xlat
push
ljmp
mul
cmp
lcall
dec
xchg
sahf
jg
mov
xor
sbb
add
cmc
fnstcw
sub
rorb
pop
fdivr
or
es
xchg
sbb
push
popf
jmp
loop
push
subl
pop
dec
ret
jp
loopne
dec
nop
pop
loop,pn
mov
mov
arpl
mov
or
push
inc
jge
inc
xor
jae
popa
pop
inc
sarb
or
mov
dec
lock
jne
outsb
xor
ljmp
int
test
cwtl
sub
xchg
ficomps
cmpsl
movsb
ja
cmc
les
mov
lcall
xchg
in
or
inc
pop
aas
or
inc
xor
out
pushl
incl
iret
inc
rsqrtps
insl
jge
je
xchg
iret
out
jg
inc
out
in
cmpsl
shlb
loopne
mov
sub
scas
dec
aam
jmp
popa
and
sub
ljmp
jp
mov
cmp
insl
repz
data16
or
and
jmp
icebp
out
arpl
xchg
mov
cmp
push
popf
nop
lea
repz
daa
out
lcall
pushl
jmp
mov
dec
pushf
adc
push
mov
into
jecxz
push
xchg
push
adc
incl
cmp
mov
mov
mov
pop
sbb
popf
gs
movsb
div
cld
jecxz
fs
pushl
xor
or
pop
mov
xlat
dec
movsb
cmpsb
sub
xchg
rolb
ljmp
mov
inc
xchg
outsl
jmp
outsl
push
and
pop
sbb
push
cld
out
or
bound
insl
gs
push
mov
into
aam
std
mov
cli
incl
into
mov
out
mov
adc
mov
das
jge
add
ljmp
dec
mov
cwtl
or
adc
push
repz
ljmp
mov
and
sbb
push
cmp
jmp
mov
sbb
mov
xchg
xchg
mov
fadds
sti
inc
or
les
inc
test
das
or
sbb
outsl
cli
pop
aas
pushl
sbb
movb
jle
shll
in
je
cld
lret
add
inc
push
lcall
add
and
sbbb
aas
inc
cmp
or
xchg
bound
ljmp
or
mov
fistpll
sbb
inc
mov
test
pop
fnstsw
jmp
loop
aad
adc
mov
lds
or
dec
leave
or
pop
xlat
pop
xlat
mov
mov
xor
jo
int
pop
mov
mov
sbb
pop
jne
mov
icebp
lret
push
mov
fnsave
push
xlat
or
cmp
jb
jbe
ud0
call
das
test
mov
xor
in
idivl
ja
lea
push
lcall
test
rolb
add
into
cltd
inc
mov
clc
inc
outsb
cmp
decl
mov
shlb
mov
add
inc
xchg
stos
sbb
xlat
repz
popl
ret
add
insb
aas
cld
dec
push
jle
test
stos
add
fdiv
cli
mov
push
lahf
ja
scas
incl
pushf
iret
sub
mov
pop
test
divb
int3
pop
in
jg
fildll
cmp
nop
mov
hlt
jmp
cwtl
hlt
sbb
sub
pusha
xor
lds
inc
dec
inc
lret
pop
shll
xchg
subb
xor
sbb
or
push
inc
fisttps
insb
ficompl
pushf
popa
sbb
add
mov
popa
add
jle
ljmp
pusha
popaw
cld
sbbb
jmp
pop
repz
inc
jg
test
ja
mov
daa
mov
fwait
or
jnp
lret
lock
fildl
and
cltd
pop
incb
jg
mov
aam
dec
insl
mov
sub
movsl
pushl
lock
mov
aad
rorl
out
adc
lret
sbb
push
xchg
pop
mov
scas
jb
incl
mov
test
adc
sbbb
xchg
mov
call
add
loopne
xchg
xchg
pop
in
sbb
pop
cmpsb
fcmovbe
push
add
sub
clc
mulb
add
addr16
push
push
or
push
inc
cmpsb
jae
xchg
jnp
jb
fs
push
dec
jp
xlat
dec
cmpsb
lods
hlt
mov
pop
cld
inc
add
pop
jae
neg
outsl
ror
shl
fld
ret
xlat
xchg
sub
cld
incl
mov
adc
pushf
pusha
xchg
je
dec
push
js
jmp
mov
dec
clc
xor
cmp
and
lods
ljmp
jg
mov
fiaddl
xchg
jbe
dec
sub
arpl
out
push
rcrl
les
outsl
clc
ljmp
loop
sub
and
push
inc
jae
movsl
notl
xor
lcall
test
dec
mov
rorb
and
jle
pop
mov
push
bound
add
cltd
cmp
fisubrs
js,pn
call
pop
incl
cwtl
cmc
jne
mov
and
and
movsl
das
dec
test
shll
mov
iret
je
cmp
xchg
cmp
jp,pt
and
inc
jns
push
loop
ljmp
inc
inc
and
pusha
push
sbb
dec
inc
adc
test
inc
add
and
arpl
sbb
adc
lcall
or
push
cmp
data16
mov
inc
pop
jns
dec
jns
add
push
cmp
leave
jb
in
outsb
popf
mov
ljmp
in
push
xlat
mov
fisubrs
and
je
shld
imul
jne
test
jns
pop
inc
inc
in
inc
mov
sub
adc
adc
orl
addl
pop
xchg
jmp
inc
aas
mov
in
fwait
cld
adc
inc
xor
lds
xchg
mov
or
popa
out
inc
xlat
popa
aam
sub
std
stos
push
andb
adc
dec
push
in
jl
call
or
sub
es
testb
in
ficoml
ja
cmp
jns
popa
sbb
jmp
xchg
push
jae
pushl
sbb
lcall
decl
ja
js
mov
lahf
inc
xchg
mov
inc
inc
lock
push
aam
xchg
jg
dec
in
xchg
inc
decl
iret
push
xchg
mov
rcrl
sub
jae
jl
je
sub
sahf
add
pop
aaa
sub
loope
cmp
xor
in
xor
jmp
fwait
into
enter
out
mov
inc
inc
rorb
fcmovnu
and
ret
lahf
xor
sti
sti
or
add
mov
add
jmp
call
fs
push
mov
jp
push
jg
add
pop
jg
loope
sub
push
ret
pop
add
sbbb
fidivrs
lcall
xlat
or
mov
sar
sbb
enter
nop
cld
xor
sub
dec
call
shlb
and
cmp
cltd
pop
dec
insl
xor
pop
insl
sbb
lcall
incl
pop
xchg
les
push
notb
adc
fs
mov
pop
stc
cmp
cltd
lock
daa
and
loope
dec
popl
lea
pop
test
dec
shrb
push
hlt
pushf
bound
out
mov
shlb
lahf
arpl
jbe
ss
daa
jb
arpl
sub
lcall
ss
cmpb
push
pop
adc
clc
mov
push
jns
lcall
jmp
adc
mov
mov
jle
in
add
push
rcr
test
cmp
mov
cmp
cs
pop
pop
jbe
imul
incl
fmuls
push
mov
data16
clc
inc
sarb
mov
fisubs
push
clc
leave
sar
out
cli
jmp
mov
sarl
ss
lods
inc
test
inc
mov
cmp
cs
lods
push
dec
jnp
test
inc
lahf
lock
push
rclb
call
cld
mov
xor
sub
lods
mov
dec
xchg
ds
out
xorb
decl
lods
inc
mov
sbb
mov
sub
mov
out
mov
fdivrs
fcmovnb
rcr
subb
shlb
push
insl
imul
cli
ds
mov
push
dec
and
adc
mov
cmp
cmpsl
pushf
mov
pop
imul
lcall
jb
jnp
out
fcomi
add
test
cmpb
xchg
in
or
or
std
jle
scas
mov
and
push
push
call
lods
les
xor
mov
push
bound
inc
scas
dec
lock
cs
ja
jp
scas
andb
sbb
pop
xchg
incl
and
mov
cli
pop
pop
push
sbb
push
and
jg
lret
cmp
in
pushl
orl
push
scas
bound
push
mov
lcall
bound
lret
lret
stos
cli
loop
ss
add
mov
aas
mov
jg
std
insl
adc
or
pop
xor
xchg
rolb
pop
dec
sbb
jg
xchg
fstpt
in
mov
inc
inc
les
xchg
out
jge
sub
std
decl
out
mul
call
xlat
push
adc
mov
call
cmp
mov
idiv
test
in
jmp
pop
mov
adc
sub
add
sar
lcall
cs
jle
outsl
or
dec
test
call
lods
dec
mov
sbb
add
cld
leave
dec
cs
add
popa
mov
push
sub
xchg
imul
add
loope
lcall
sub
mov
xorb
jmp
push
and
mov
insb
mov
sub
fistl
scas
mov
lret
pushl
pop
js
mov
pusha
ret
fsubl
sbb
mov
orb
pop
add
pop
cs
sti
mov
pusha
xchg
insb
sub
push
outsb
dec
sets
outsb
std
aas
outsl
pop
and
or
dec
pop
inc
jecxz
ret
aad
mov
scas
or
iret
cmpsl
pushl
aas
cmp
pop
pop
mov
out
aaa
dec
mov
sub
add
pop
negl
dec
and
jmp
movsl
sbb
out
negl
adc
cmpb
jb
pop
rcrl
sar
mov
jg
push
mov
hlt
out
shrl
outsb
adc
insb
fwait
push
pop
push
pop
xchg
dec
adc
lcall
or
out
or
dec
aas
sbb
repnz
xor
in
pop
lods
aad
lock
dec
scas
test
sbb
fcomip
jg
lods
or
xor
ja
arpl
fisttpl
and
push
out
push
cmpsb
cwtl
cmp
lcall
fld
inc
aam
and
repz
iret
rolb
jg
add
aas
cli
lock
lcall
push
loopne
pop
fldcw
pop
push
andl
mov
xchg
divb
outsb
jg
out
dec
sub
cmp
inc
lcall
cmc
cmpsl
stos
inc
ljmp
cmp
dec
xor
add
fidivrl
out
jb
push
test
mov
push
add
jmp
rorb
sub
jmp
jp
movsl
or
sbb
out
lods
add
lcall
mov
scas
cld
xchg
jnp
jmp
dec
and
xor
jg
cmp
push
sub
xor
mov
insl
jae
imul
inc
arpl
dec
sbb
call
ficoms
pop
adc
and
stc
test
cwtl
rcl
xchg
out
xchg
inc
in
lods
xchg
scas
movsb
pushl
roll
push
or
pushf
in
or
xchg
cmp
xchg
jl
sbb
or
mov
jge
jns
int3
aad
inc
into
push
mov
roll
add
mov
ret
fwait
iret
xor
dec
push
hlt
stos
mov
loop
std
pop
dec
loope
and
cwtl
inc
lds
push
cs
mov
xor
jmp
dec
jno
sbb
maxps
push
fldt
jns
out
jle
addr16
imul
sub
and
idiv
push
loope
call
pushl
lds
xchg
sbb
bound
xchg
mov
mov
cmp
incl
cld
xchg
mov
mov
xor
mov
push
cmp
jg
jae
fwait
loop
aas
incl
jmp
daa
popf
or
andb
jne
xor
adc
aaa
mov
call
adc
jno
xchg
push
xchg
mov
scas
pop
pop
mov
mov
insb
pop
shrb
pop
xchg
xor
jl
call
stc
sbb
sbb
call
test
and
xor
sbb
in
out
bound
roll
lds
mov
shll
xor
sub
and
jne
out
jmp
or
mov
adc
cmc
inc
sarl
mov
sub
test
into
lcall
jg
movsl
cltd
ja
cmp
cmp
out
stos
movsl
idivb
in
aas
test
mov
jne
call
in
push
imul
push
pop
sbb
jecxz
adc
outsl
mov
mov
in
sbb
fs
lcall
cs
rcrl
or
xchg
clc
jbe
bound
dec
arpl
addl
fsubl
mov
cmpsb
iret
jb
mov
mov
scas
or
jp
push
call
sbb
ja
ljmp
fildl
sbb
fs
sbb
int3
inc
pop
lahf
jbe
int3
les
fs
mov
mov
and
adc
scas
pop
and
dec
in
imul
add
decl
add
sub
mov
test
sub
dec
fisubs
cli
fistps
pop
test
mov
xlat
xchg
inc
gs
stc
pop
movl
jo
scas
mov
stos
push
pop
sbb
cld
mov
pop
push
dec
stos
outsl
cli
call
fdivs
mov
subb
es
jg
pop
mov
cld
mov
call
or
aam
nop
dec
cltd
and
imul
orb
lcall
sub
comiss
es
xor
pushl
das
sbb
loop
mov
or
push
xor
sbb
outsl
add
cmp
decl
imul
add
sbb
mov
inc
pushf
pop
lcall
repz
xchg
ficomps
out
les
mov
rol
inc
push
incl
and
lcall
shrl
sahf
mov
jle
jns
addr16
inc
decl
in
xor
jb
push
pop
idiv
rcl
push
xchg
cwtl
outsl
pushl
cmp
jmp
pushf
add
inc
fidivrl
add
pop
cmp
mov
decl
dec
mov
sub
cmpsb
dec
inc
push
jge
inc
outsb
mov
clc
clc
push
out
cli
ljmp
loope
lret
cmpsb
insl
lds
dec
mov
arpl
aaa
movsb
jl
ds
jmp
mov
loope
lret
fstpt
xchg
add
ror
inc
jns
mov
incl
cld
enter
mov
pushf
hlt
orb
test
and
lcall
popf
add
or
jle
in
sbb
hlt
leave
fidivl
iret
cmp
mov
pop
sbb
inc
mov
dec
shl
nop
xchg
mov
jmp
cmp
scas
adc
push
jno
fstps
sbb
cmovge
movsb
mov
cmp
jmp
dec
je
call
lret
test
fsubrl
notb
testl
ljmp
jg
shll
icebp
sub
loopne
ficoml
jno
dec
dec
loop
xor
jmp
into
xchg
push
loop
push
jnp
int3
pop
mov
fildl
xor
cmpsb
push
addl
mov
sub
cmpsb
push
or
inc
mov
jns
xchg
inc
lahf
incb
xchg
or
mov
das
fsubs
adc
nop
inc
sub
xor
or
xor
ficompl
dec
lret
xor
mov
inc
pop
mov
add
dec
mov
pushf
push
mov
dec
shrl
push
mov
sub
clc
add
xchg
dec
mov
lcall
pushl
test
mov
dec
sub
and
push
or
push
out
mov
jg
mov
cwtl
push
cwtl
mov
ret
js
xchg
lret
in
popa
mov
outsl
decl
push
shrl
inc
lret
int3
clc
or
jp
inc
subb
lcall
xchg
mov
aaa
xor
jp
aas
sbb
or
jp
jno
repnz
add
jmp
pushf
lcall
xchg
cli
imul
push
mov
testb
cmp
stc
movsl
pop
jle
mov
icebp
inc
pop
aad
sbb
and
incl
das
in
and
inc
enter
inc
dec
jno
mov
roll
adc
call
popa
cwtl
icebp
xlat
mov
add
fbld
jne
cld
fistpl
and
rorb
cmp
call
mov
adc
rol
push
xchg
dec
jno
sbbl
ljmp
cld
loopne
data16
jp
jb
bound
movb
je
je
mov
mov
push
scas
dec
hlt
bound
mov
push
inc
or
xchg
mov
lods
mull
fsubr
pop
int3
es
push
push
mov
push
cld
mov
and
ret
fs
cmp
icebp
pop
fsts
ljmp
pop
pop
mov
mov
lods
inc
jne
and
lcall
adc
sbb
inc
mov
test
ror
inc
mov
inc
stos
sbb
cmpsb
jno
pop
mov
loope
adc
jecxz
cmc
add
xor
jne
mov
mov
les
lock
lcall
std
and
sub
or
sbb
loopne
xor
or
push
pop
adc
nop
fisttps
cmp
imul
mov
cmpsb
gs
into
nop
add
mov
push
addr16
decl
rol
mov
fldcw
and
jbe
mov
xchg
clc
insb
decl
push
jp
mov
and
mov
enter
insl
mov
mov
stos
and
inc
mov
xchg
cmp
ficompl
repz
xor
aad
dec
aad
iret
mov
pop
test
cmp
jb
int
cli
jg
out
mov
ljmp
cmpsl
xor
mov
std
push
loop
retw
popf
sarl
lcall
jns
mov
xor
and
lahf
imul
cmpsb
sub
fdivr
push
jnp
xlat
cmp
xlat
or
mov
add
sub
lds
fldt
movsb
adc
cli
mov
in
outsb
or
jbe
add
and
out
test
popa
adc
mov
out
mov
sbb
cs
pusha
decl
mov
rdpmc
or
sub
adc
outsl
leave
stc
iret
popl
pop
lret
insl
mov
adc
xor
pusha
pop
inc
and
lods
jmp
mov
xchg
dec
sbb
adc
test
pusha
or
data16
call
sbb
mov
or
xor
jecxz
xchg
cmc
xchg
popf
ljmp
mov
das
xlat
dec
adc
adc
imul
decl
push
pop
ljmp
lods
sahf
push
xchg
dec
xchg
cmp
shl
hlt
mov
enter
sbb
jle
mov
ja
xchg
push
inc
dec
dec
push
mov
fdivr
ljmp
shlb
xchg
jno
sub
addr16
cmpsb
test
incl
stos
mov
dec
jne
mov
push
mov
mov
popa
fwait
cmpsl
orl
stos
fidivrs
and
rorb
fcmove
icebp
pusha
mov
mov
sbb
stos
daa
push
outsb
in
mov
push
nop
or
aas
iret
inc
cwtl
decl
cld
test
xor
inc
popf
fwait
repnz
pop
enter
inc
loope
mov
sbb
out
adc
pop
sar
dec
icebp
dec
push
fstl
or
jl
adc
ds
adc
mov
xchg
sahf
add
dec
xchg
pop
lret
jmp
jne
testb
mov
lret
fists
jle
repz
xor
mov
std
mov
scas
popa
loope
lcall
jge
mov
cli
orl
cmp
cld
pop
xchg
ret
cmpsl
imul
rclb
cs
jmp
cld
stos
bnd
push
mov
sub
push
mov
fistl
flds
cmpsb
pusha
xchg
push
in
or
and
push
dec
call
mov
ljmp
mov
add
add
jle
inc
idiv
test
cmpsl
pop
pop
pop
mov
jg
ljmp
sub
aam
push
lods
scas
sbb
add
mov
adc
lods
lods
xchg
mov
repz
mov
jecxz
push
das
push
popf
sub
fcomip
adc
xor
adc
xchg
inc
icebp
jnp
xor
push
sbb
jmp
fcompl
push
or
dec
xor
pushf
xlat
xchg
movsb
iret
cmc
push
xchg
or
jno
mov
out
clc
daa
xor
clc
cs
xchg
stos
test
mov
jp
jb
call
lret
les
sbb
cwtl
sbb
ficomps
push
sti
cmc
ds
mov
lcall
mov
insb
xor
sbb
or
sbb
pop
in
xor
jg
pop
enter
in
imull
sahf
and
aad
sbb
sti
mov
std
decl
outsl
rol
arpl
adc
enter
mov
cmp
cmp
jg
pop
lcall
loop
mov
mov
lea
mov
icebp
or
mov
decl
shll
and
imul
sub
mov
dec
adc
cwtl
mov
dec
mov
add
xor
mov
pushf
in
int
dec
mov
arpl
ja
cmp
imul
fiaddl
enter
adc
jmp
sbb
lret
sub
movsb
mov
xchg
nop
cmp
mov
jecxz
addl
cli
int
xor
decb
mov
mov
loop
pop
mov
sub
add
ror
pop
mov
js
dec
or
push
pop
nop
pop
push
xchg
imul
lock
sub
int3
mov
decl
mov
jp
cmpl
ret
adc
pusha
andb
decl
sub
push
dec
aas
notl
cwtl
bswap
xor
mov
sub
incl
or
add
jp
gs
rclb
sub
out
xor
mov
pop
shlb
imul
and
in
push
mov
in
sbb
lock
sub
cmc
xor
cmp
xchg
bound
fmulp
push
mov
jnp
sarb
jle
xor
inc
fdivs
fsts
lret
pushf
lods
pop
rorb
fisttps
sub
das
cmp
fadd
enter
orl
ljmp
stc
push
jp
pushf
test
pop
jl
adc
lahf
cmp
fldenv
sub
mov
mov
mov
mov
sub
test
inc
and
adc
mov
aam
push
mov
xchg
enter
decl
push
hlt
add
ds
pusha
sub
pusha
cmpl
fcomip
lcall
sub
xor
or
jno
lret
inc
repnz
aas
lea
call
outsb
sahf
mov
mov
or
jo
out
adc
lcall
xchg
cmp
lret
dec
fwait
pop
mov
enter
jns
xor
shrl
ljmp
std
iret
and
lea
je
mov
sbb
xchg
shrb
or
ljmp
mov
sub
outsb
insl
pop
xor
lea
int
add
or
decl
sbb
stos
mov
pop
xchg
mov
jge
enter
daa
xchg
xchg
xor
call
gs
sub
add
icebp
sbb
int
insb
xor
lock
pushl
in
lcall
pop
sbb
or
into
xchg
lahf
arpl
cmp
js
inc
out
pop
lods
mov
das
movsb
push
mov
loope
inc
andb
cld
push
imul
lock
test
xor
inc
pop
dec
or
outsb
adc
pop
movsl
mov
std
mov
inc
stos
lods
jb
fmuls
dec
jp
mov
imul
xor
sbb
into
cmp
cmp
fbstp
adc
sub
or
cmp
cmp
hlt
decl
dec
outsb
scas
mov
test
les
cld
decl
fisubrl
and
fst
pushf
push
mov
rol
xchg
pop
sti
sti
in
loop
sub
dec
adc
sarb
call
xor
imul
sub
lea
mov
imull
aaa
push
cltd
subb
pop
mov
ljmp
sbb
stos
jbe
dec
dec
lahf
int
push
ds
pop
jg
inc
pop
xchg
stos
add
jmp
pop
aad
adc
cmp
loope
call
ja
jb
ret
or
scas
or
ds
mov
pushf
lock
call
decl
lods
scas
sub
stos
stos
sub
adc
dec
pop
adc
jl
push
xorb
call
push
mov
dec
push
jmp
enter
adc
stos
jo
outsl
push
loope
lcall
sbb
rol
insl
or
push
or
out
or
mov
jmp
jge
cmpsb
js
mov
mov
and
xor
mov
jmp
std
sub
jp
push
dec
pop
push
mov
xchg
stos
adc
dec
in
xor
mov
in
push
fadds
js
sahf
mov
cmp
arpl
rclb
fwait
pushl
std
jmp
ja
mov
mov
xor
xchg
xor
push
jmp
mov
arpl
ljmp
mov
je
xor
inc
pusha
mov
repz
js
popf
jmp
adc
inc
mov
enter
jo
pop
fwait
aam
push
punpckhwd
fisubrs
adc
daa
dec
mov
hlt
flds
push
add
inc
cmpsb
iret
out
sbb
shl
or
push
jo
in
cmpsl
pop
ljmp
int
push
ficomps
and
hlt
fistpll
inc
adc
fdivrl
mov
ret
push
add
jmp
stos
cmp
sahf
mov
test
add
pop
add
jle
adc
mov
lock
lcall
fildl
das
xor
dec
add
or
sti
sub
fsubrl
xchg
cld
lcall
pop
fldenv
fidivrl
mov
out
es
imul
into
inc
std
xchg
jne
xor
es
mov
mov
mov
jne
fnstcw
mov
mov
fistpll
xor
fldcw
movsb
movsl
pop
punpckldq
hlt
ret
inc
and
repz
inc
xorb
pop
xchg
or
pushl
nop
fwait
pop
cmpsl
sub
and
subl
test
insl
std
or
sbb
mov
mov
outsl
cli
lcall
test
xchg
xor
adc
push
outsb
clc
sbb
incl
int3
fs
in
out
sub
into
lea
stos
xchg
shrl
inc
outsl
inc
mov
ficoms
mov
jl
dec
pop
jg
xchg
mov
ds
movsb
stc
ret
decl
or
push
int3
pop
push
test
lods
addr16
imull
jle
std
xchg
icebp
das
clc
adc
jb
popa
pop
dec
jmp
xor
xor
mov
push
and
aad
bound
sub
push
pop
out
std
stos
mov
in
mov
fcomip
incl
pop
ret
xchg
sub
dec
lock
iret
fistpll
xchg
pop
and
jmp
outsl
push
cld
push
mov
inc
enter
xor
and
push
das
push
push
dec
fistps
cmp
test
int3
inc
pop
xchg
push
jo
jno
lea
lcall
jmp
and
jmp
fldl
data16
leave
out
mov
jmp
jne
add
imul
push
in
icebp
sahf
ret
imul
das
cli
adc
roll
fdivl
andl
and
adc
ljmp
mov
mov
xchg
push
test
lcall
adc
lods
loop
loop
in
pop
repz
mov
lcall
cltd
dec
cmp
cmp
cs
pop
dec
mov
stos
push
jne
xchg
pop
jne
fldt
xchg
inc
dec
fisttpl
add
push
fwait
cmp
pop
mov
sbb
arpl
out
inc
pushl
or
cwtl
mov
dec
xchg
loope
lock
cmp
jmp
cwtl
das
mov
mov
xchg
jge
daa
out
jo
jmp
xor
fs
lds
sbb
jmp
fwait
in
idiv
push
cmpsl
xchg
adc
and
incl
pushw
sub
repz
pushf
and
decl
inc
push
mov
inc
sub
mov
cmp
movl
push
sahf
xor
je
xor
mov
bound
add
js
imul
pushf
jg
lcall
je
stos
mov
sub
pusha
mov
loop
loop
ljmp
xor
sbb
dec
push
arpl
cmpb
sbb
lcall
lds
call
fbstp
stos
lea
mull
lods
clc
xchg
rcrl
shlb
enter
inc
dec
cmpb
xchg
cmp
decl
fwait
nop
les
mov
mov
cli
xor
sub
add
into
ret
jp
sti
and
stc
sbb
push
lret
lcall
gs
xchg
shll
push
and
jmp
daa
rclb
pop
jle
jmp
xchg
cmpb
aad
decl
shll
push
mov
sub
dec
inc
xor
add
push
jb
or
sub
movsl
add
sbb
xchg
cmp
sti
cmpl
insl
mov
repz
pusha
cmp
jmp
mov
in
push
or
cmp
mov
sti
das
repz
sti
lret
out
pushf
out
orl
jne
test
cmp
sahf
jns
xlat
or
cmp
xchg
lcall
out
and
call
lock
push
xor
in
sbb
imul
dec
nop
mov
dec
test
incl
iret
fisubrs
push
iret
adc
popa
call
xchg
nop
adcl
and
xor
inc
repz
mov
jmp
adc
lock
cld
imul
xor
addr16
jbe
mov
sbb
pop
ljmp
xor
es
xor
dec
fdivr
pop
pop
leave
add
pop
jecxz
shlb
repnz
clc
lahf
movsb
divl
mov
ss
dec
cmp
subl
jmp
xlat
ljmp
insb
fnstenv
or
cwtl
xor
mov
xlat
enter
jmp
cmp
or
inc
xchg
dec
adc
sahf
pop
out
ljmp
or
xor
jmp
adc
or
jmp
jae
xchg
inc
lods
cwtl
fs
movsl
adc
sbb
das
jl
cmp
lret
aas
addr16
mov
adc
cmp
push
mov
adc
push
inc
aaa
xor
aaa
test
outsb
mov
lock
push
in
cmp
mov
jnp
dec
pop
pop
cmp
mov
mov
sbb
call
repz
into
movsb
add
aaa
sub
dec
xchg
mov
jg
out
lods
repz
xlat
xchg
xchg
lcall
mov
jl
pop
cld
ljmp
or
lds
vminpd
hlt
pushl
push
stc
out
in
in
pop
mov
xchg
outsl
pop
sub
add
mov
pushl
idiv
scas
test
into
jo
sub
cltd
pusha
lcall
sahf
lcall
jl
aad
sbb
out
push
pop
in
push
aaa
mov
sahf
dec
shrl
insl
icebp
mov
push
pop
mov
or
mov
imul
xor
push
or
nop
mov
lcall
dec
jmp
ljmp
inc
and
mov
pop
lds
jae
inc
add
push
mov
jb
bnd
push
push
xchg
icebp
xor
add
bound
ljmp
jmp
fldenv
sbb
lods
sarl
jecxz
cwtl
mov
cmp
call
pop
scas
aam
cmc
into
loope
out
pusha
mov
fstpt
out
or
lahf
ss
inc
je
mov
andb
mov
mov
cld
in
imul
xchg
adc
mov
or
ljmp
inc
and
movsb
dec
sti
pusha
ds
cmp
outsl
pusha
lcall
ljmp
jge
fsubrl
test
push
mov
ror
add
leave
outsl
clc
inc
das
xor
pop
mov
negl
inc
in
dec
inc
das
filds
out
int3
mov
or
dec
adc
outsl
cmpsl
xchg
pop
push
stc
lock
push
mov
lcall
jmp
jne
icebp
stc
ret
jle
dec
xchg
dec
or
cwtl
xor
adc
dec
sbbl
popw
mov
inc
in
push
lds
bound
mov
nop
cmc
call
pop
outsb
lea
jne
imul
movsl
iret
rcl
hlt
fisttpll
cmp
inc
inc
push
jo
sbb
push
adc
adc
pushl
inc
mov
cld
out
cwtl
mov
sub
fimuls
or
fcomip
decl
movsb
xor
dec
inc
addr16
ja
cld
mov
sbb
mov
pusha
clc
cmpsl
movsb
xchg
adc
aas
je
xchg
sub
clc
or
jmp
sbb
jg
scas
push
test
subb
shlb
data16
mov
sbbl
dec
shll
sub
jno
xor
aad
out
add
cli
pop
add
xor
scas
loopne
repz
ret
outsb
cmc
dec
mov
addr16
lods
sbb
push
out
jge
mov
das
push
inc
and
fsub
dec
add
icebp
jmp
jbe
int3
sbb
pop
dec
mov
dec
lea
mov
mov
pop
loop
cmp
adc
sti
push
xchg
ss
repnz
ds
cld
jnp
cmp
loop
add
dec
sub
add
and
nop
pop
adc
out
jns
outsw
fstl
int3
lret
adc
pop
pushf
push
bound
push
popf
or
pushl
xchg
add
push
dec
aaa
xchg
jge
loope
push
shlb
jp
or
lods
out
pusha
jbe
dec
sahf
dec
jecxz
lahf
xchg
int3
push
mov
in
in
sti
loopne
in
mov
jg
pop
pop
pop
lods
call
dec
fs
xchg
stos
lret
in
frstor
icebp
sbb
data16
sbb
sti
or
mov
push
jmp
or
fldcw
stc
adc
xchg
xor
xchg
addr16
movsl
jmp
add
mov
fnsave
hlt
sbb
add
and
sub
adc
in
xchg
jmp
xlat
push
lods
mov
dec
jno
xorl
lcall
mulb
push
add
add
mov
and
sar
incl
mov
mov
xchg
jl
aad
mov
jbe
push
adc
inc
fs
pop
idivb
ss
test
jbe
daa
jmp
sahf
inc
and
xor
sub
inc
lods
and
cld
xor
out
testb
jl
xor
dec
inc
ljmp
outsb
cld
mov
hlt
adc
mov
call
mov
jmp
cmp
stos
push
xlat
dec
aas
xor
jo
push
push
mov
jp
push
mov
ljmp
call
insl
pushf
adcb
and
rcll
sti
dec
pop
inc
cmp
jmp
mov
mov
in
dec
pop
adc
fidivrl
enter
add
mov
push
fadds
les
adc
outsb
std
ret
int
xlat
fbld
rcrl
int
pushf
dec
movsb
lcall
insb
xchg
push
jno
ja
es
rcrl
rcrl
dec
mov
iret
decl
pushl
fwait
lock
inc
lcall
push
stos
dec
jne
ljmp
jg
cmc
adc
jnp
repnz
in
jl
mov
ljmp
jo
push
xor
push
sbb
xor
enter
dec
and
popa
mov
sarl
cld
inc
cmpsl
nop
dec
into
xor
icebp
adc
jecxz
pushl
negl
push
rorl
inc
mov
adc
out
rclb
scas
mov
xchg
inc
pop
xchg
int3
int
out
imul
pusha
mov
and
daa
hlt
call
cld
fmull
stc
sahf
out
dec
mov
xor
jl
mov
xchg
sub
incl
pushf
repnz
dec
or
cli
dec
lahf
cwtl
ret
loop
ljmp
insl
stc
jmp
inc
jle
mov
cmpsb
fldenv
popf
or
loopne
ds
pop
sub
aaa
sbb
or
jno
add
mov
sub
lock
aad
mov
rcr
mov
insb
test
in
data16
xor
sub
repnz
test
andb
push
inc
jg
lahf
jnp
cmp
push
rolb
mov
aam
stc
mov
push
fstp
andb
cld
jae
adc
mov
jo
mov
sbb
add
jmp
in
xor
dec
clc
iret
sbb
mov
jo
xchg
nop
in
cwtl
aad
jmp
cmp
inc
push
daa
add
test
ret
mov
lea
incl
jnp
jae
pop
out
pop
cmpsb
in
mov
sarl
sub
dec
xor
in
jnp
jp
sbb
mov
adc
sbbb
sahf
call
ror
push
fsubs
push
add
sbb
mov
lock
sub
call
pop
rcrb
sarl
xchg
test
cmp
cmpsb
jnp
mov
int3
pusha
xlat
fmul
out
add
jmp
rclb
jo
int
cmpsl
pop
movsb
adc
cmp
lcall
pop
cmp
inc
dec
int
repnz
shll
xor
mov
jg
jg
xor
jle
imul
pop
sub
push
iret
shlb
mov
ja
dec
mov
add
out
jb
dec
call
decl
stc
push
lea
and
inc
mov
jecxz
adc
mov
lds
mov
ret
xlat
and
divb
pop
or
mov
push
rolb
and
push
dec
jmp
push
jo
sbb
cmp
jno
rclb
or
iret
and
ffreep
xchg
and
xchg
cmp
ss
out
fcomps
xchg
and
adc
loope
pop
std
push
lret
sub
sti
cwtl
pop
loop
and
pop
add
lcall
dec
cs
sbb
lds
nop
mov
int3
ret
xor
adc
ljmp
out
push
leave
mov
movsb
sar
jmp
out
dec
stos
mov
inc
and
outsb
xchg
pop
ret
std
bound
jbe
dec
pop
pop
jnp
jmp
mov
cmp
fs
sarl
xchg
fdivrp
push
ror
jl
fwait
mov
call
ljmp
mov
and
outsl
and
xlat
mov
mov
movsb
xchg
xlat
sbb
icebp
aad
outsb
inc
int
jmp
push
mov
lret
loopne
scas
push
sahf
and
xor
sub
fnsave
gs
ret
dec
mov
cmc
aad
cmc
int
in
bound
pop
icebp
lcall
add
shll
popa
sub
dec
test
mov
scas
cli
loopne
cmp
ficompl
in
divl
mov
jmp
mov
cld
jmp
xor
inc
arpl
rorb
stc
aaa
cld
divl
cli
mov
dec
in
test
loopne
mov
sbb
and
in
dec
lcall
cwtl
scas
mov
daa
scas
cmp
push
notb
mov
push
sahf
cmpsb
mov
jmp
fcom
test
cmpsb
pop
jge
std
je
pop
into
aad
stc
aas
add
jno
push
pmuludq
idiv
lea
pop
cwtl
pop
ja
push
ja
ds
jbe
and
xchg
imull
std
fbstp
popf
ret
sbb
mov
xor
mov
sub
call
ljmp
xchg
test
pop
and
or
enter
incl
movsb
inc
inc
test
or
out
adc
pop
lea
ljmp
adc
adc
mov
cwtl
or
scas
fwait
and
jecxz
outsb
mov
cmp
cmp
sbb
pop
dec
aad
shll
mov
lods
push
pop
jne
pop
mov
mov
ljmp
scas
into
out
imul
jo
sub
lock
or
je
aam
ljmp
pop
cld
add
bound
orb
pusha
pusha
cmp
loopne
mov
mov
jmp
fdivp
int
adc
lcall
cmp
aas
pop
inc
in
or
fistl
jmp
jp
adcb
mov
and
mov
fimuls
mov
lea
iret
sbb
jmp
int
push
ljmp
repz
cmp
ss
xchg
jo
divl
and
leave
mov
inc
fs
mov
es
push
cmp
repz
dec
test
jmp
mov
push
jbe
dec
mov
out
xor
ret
shrb
mov
js
adc
incl
enter
in
dec
sub
clc
or
push
sub
mov
scas
jae
lds
out
mov
mov
das
mov
adc
in
in
enter
jg
insb
mov
lds
leave
gs
pop
inc
call
cld
es
or
xor
outsb
addr16
popa
add
add
fdivr
jmp
push
inc
orb
cmp
push
xor
clc
jae
cmp
outsb
pop
icebp
cli
jo
in
loope
je
arpl
xchg
adc
xor
mov
jne
push
icebp
pop
outsb
sarl
sbb
je
push
mov
mov
dec
cwtl
lcall
sbb
addl
adc
pop
add
lcall
ds
popa
lret
lea
jb
out
arpl
ficomps
pop
sub
jle
int3
daa
push
and
call
xchg
adc
lods
xchg
push
mov
fsubr
mov
cmp
mov
popf
pop
dec
cmp
daa
sub
cmp
ret
cmpl
in
or
jmp
repz
xchg
mov
dec
xchg
jmp
adc
mov
jns
imul
xor
push
mov
jmp
jge
sbb
mov
xchg
lcall
mov
xor
hlt
call
fxch
mov
push
lock
fcom
xchg
int
sbb
mov
adc
rcr
imul
mov
mov
insl
iret
fcmovbe
push
rolb
pop
pop
arpl
or
nop
mov
xor
lret
ljmp
inc
sub
shll
lret
test
mov
push
addb
cmp
adc
dec
outsb
cmp
cs
imul
enter
rcrl
call
es
js
scas
call
and
jmp
das
sub
leave
add
int
pop
mov
pop
cli
xrelease
pushl
push
loope
sbb
arpl
jne
xor
fwait
adc
je
adc
iret
sti
cld
fcomip
lcall
pushf
in
xor
pop
shll
adc
mov
push
inc
xchg
cmp
nop
js
fbstp
adc
je
push
addr16
pop
mov
mov
mov
popa
ljmp
ljmp
cmp
sarb
lcall
loopne
pop
outsb
jbe
clc
add
sbb
jns
scas
and
je
jae
cmp
lcall
dec
jecxz
and
cld
xchg
mov
and
out
dec
testl
out
pop
notl
decl
shr
jp
mov
fnstcw
mov
jns
int
stos
lods
dec
jle
mov
add
mov
mov
add
orl
mov
clc
xor
pop
jp
mov
adc
lret
das
mov
xchg
pop
mov
inc
mov
test
popf
push
decl
jl
rcrb
clc
cs
pop
inc
dec
sahf
sub
push
les
mov
dec
clc
sub
inc
xor
mov
leave
insb
jle
in
out
jne
decl
xchg
les
test
add
push
jae
scas
fmulp
pop
adc
ss
xlat
int
dec
adc
inc
fisttpl
xchg
push
sbb
cli
push
jg
push
sbb
xor
mov
insl
test
arpl
push
add
push
leave
lcall
popl
xor
cli
fnstcw
test
lods
je
adc
mov
outsl
repz
incl
and
sbb
or
inc
adc
mov
outsb
mov
jnp
lea
inc
icebp
rcll
lock
call
push
pop
aad
into
sub
andl
in
movsb
bound
aaa
call
sti
jmp
xchg
mov
lds
fistpl
dec
or
bnd
int3
cmp
imul
xor
lcall
xorl
mov
mov
lret
test
arpl
inc
mov
imul
xchg
sti
jb
decl
test
bound
cmpsb
jo
and
orl
mov
inc
lret
cmp
fwait
jmp
psubw
mov
stc
inc
jb
mov
fs
iret
cs
movsb
arpl
xchg
and
std
lock
es
mov
jne
popf
stos
pop
das
mov
jbe
xor
and
inc
xor
sub
decl
dec
sti
setne
and
ret
cmp
pop
test
push
fldcw
repz
icebp
sub
pop
inc
dec
ret
mov
xchg
int3
cmp
xchg
push
jns
add
sbb
test
ljmp
inc
fcoms
dec
ror
cmc
aas
imul
cli
lret
rclb
rorl
call
aam
jecxz
aad
hlt
jnp
xor
les
fisubs
ja
icebp
dec
sbb
cmpsb
xchg
dec
call
jmp
neg
mov
cld
xor
cwtl
xor
testl
or
add
mov
lcall
loop
or
jp
jge
ljmp
or
pop
adc
jl
sarb
negl
shlb
pushf
jmp
cmp
xchg
lcall
test
mov
jb
or
jge
nop
adc
push
rorb
pop
nop
push
incl
jecxz
or
insb
pop
repnz
lret
xor
arpl
addr16
mov
mov
decl
add
mov
mov
jl
movsb
or
sub
push
sub
sbb
jmp
push
rcr
push
call
mov
rolb
mov
push
mov
dec
jge
nop
fwait
jb
scas
shrl
pushf
ja
cli
in
push
lret
lods
data16
jne
je
push
in
adc
push
jg
inc
fcoml
aam
int3
lret
fdiv
lock
nop
ret
pop
sbb
sub
dec
iret
cmc
dec
sbb
jb
cmc
dec
fstp
mov
xchg
cmp
fsubrs
lcall
mov
jl
or
pop
stos
lods
mul
adc
std
push
pop
jnp
add
cmpsb
fnstenv
rolb
lods
ss
sbb
daa
mov
lret
inc
call
sub
outsb
and
es
and
pop
in
cli
cmp
rcrb
sarb
int
and
ljmp
dec
sub
xor
cmp
cli
mov
jno
bnd
mov
shl
aaa
cld
jmp
test
cmp
jne
push
dec
scas
xor
cmp
in
popa
call
mov
sub
shld
add
or
push
pop
cmp
dec
in
push
insb
repnz
lcall
js
jl
cld
add
das
push
mov
sub
scas
jg
inc
mov
xorl
pop
lcall
movsl
rcr
pusha
das
test
push
insl
cmp
cwtl
push
movsl
jecxz
mov
stc
add
fsubs
js
jno
lds
mov
hlt
mov
mov
mov
hlt
dec
stos
jl
jmp
xor
lods
dec
call
adc
sahf
add
lods
jne
add
xchg
scas
in
fcomip
mov
jle
push
mov
cmp
popf
call
dec
cld
lock
call
add
mov
xchg
xor
data16
insb
mov
aaa
or
in
xor
cltd
negb
cs
mov
sahf
pop
cmp
scas
mov
fs
lahf
ljmp
mov
xor
movsb
idivb
push
lahf
xchg
sbb
test
inc
imul
or
lcall
inc
and
add
into
push
or
imul
sub
fidivl
mov
es
bound
lcall
dec
add
popf
cwtl
aaa
mov
movsl
aaa
add
call
clc
sbbl
jmp
decl
cmp
scas
and
cmc
cmc
push
inc
lret
push
data16
pushl
js
jo
push
adc
xor
test
fcomip
mov
xchg
mov
arpl
lea
inc
mov
sub
call
icebp
dec
mov
rcll
add
mov
test
cmp
js
call
cmp
xchg
push
scas
or
push
out
bound
nop
xor
outsl
ljmp
in
and
incl
out
sub
adc
pop
mov
jnp
imul
jmp
push
mov
mov
push
mov
push
and
xor
jg
mov
xlat
popa
jne
test
jecxz
stc
test
xchg
cs
loop
mov
push
ds
pushl
pop
mov
fdivrl
mov
shll
in
pusha
cmpsb
lods
jge
pop
add
pushl
jl
jnp
cmpsl
add
pusha
je
inc
pop
adcl
adc
push
mov
xor
fwait
add
cmc
jl
mov
mov
xor
cmp
incl
or
inc
daa
and
adc
push
stos
jb
mov
mov
ljmp
int
jbe
push
jle
sbb
mov
enter
xor
ja
nop
repnz
decl
decl
mov
pop
mov
mov
cld
mov
cmp
in
xor
cld
decl
mov
hlt
das
and
fldcw
push
loope
pop
fst
mov
outsl
clc
pushl
fnstenv
or
pop
sub
insl
out
outsl
jb
in
push
or
xor
std
hlt
jne
and
adc
leave
mov
xchg
push
push
pop
push
xchg
push
stos
out
inc
lcall
cmp
mov
mov
stos
mov
cwtl
mov
jmp
mov
sbb
adc
mov
mov
pushf
push
in
or
pushl
movsb
adcl
adc
in
divb
sbb
divb
in
call
jg
fildll
pop
fistpll
addr16
imul
jle
shlb
std
int3
mov
push
push
mov
nop
sub
ljmp
fs
test
jmp
dec
loop
rcl
aad
daa
rcrl
loop
adc
xchg
shrb
pushl
xor
mov
cs
pop
dec
jle
scas
inc
popa
fwait
pshufw
pop
and
cs
js
out
push
or
mov
incl
xor
pop
aam
imul
out
ror
cmpsb
icebp
rorb
ljmp
sbb
sarb
jp
mov
jb
push
cmpsl
mov
jbe
fs
mov
mov
mov
xor
jg
push
mov
push
dec
ja
stos
mov
push
push
sti
jne
jmp
aas
and
adc
cmc
out
sahf
int
popa
div
pop
push
mov
std
inc
sub
mov
xor
xchg
scas
roll
ljmp
call
jnp
lock
jecxz
push
xor
test
cmp
push
sbb
dec
adc
fmull
mov
cli
xchg
or
xor
leave
stos
clc
push
jbe
add
push
or
lcall
push
cltd
jl
lods
xchg
lods
mov
data16
stc
sahf
sub
sbb
pop
lods
incl
mov
out
and
inc
and
mov
mov
sub
inc
jae
push
lahf
les
jg
mov
outsl
push
pop
sbb
cwtl
push
pop
mov
xchg
push
sbb
cmp
jmp
add
insl
jnp
pop
loope
sahf
xchg
sub
lcall
outsl
int
adc
mov
push
imul
movsb
stos
pop
int
cmp
call
cmp
push
sub
inc
bound
sbb
clc
sti
aaa
cmpsb
inc
ja
addl
mov
cmc
push
ds
mov
sbb
shlb
dec
enter
xchg
push
push
iret
adc
mov
jg
push
jno
sub
inc
mov
xor
mov
pop
mov
lcall
ja
cld
xorb
push
nop
lret
cmpl
clc
xor
cmpsb
leave
push
sbb
push
rolb
pop
addr16
cmp
or
dec
shlb
jg
in
push
inc
test
pop
and
or
leave
adc
hlt
les
dec
mov
adc
ror
lret
out
cli
scas
fwait
xchg
xchg
ja
cmc
push
adc
sub
out
stos
nop
xchg
pushw
call
loopne
cmc
fsubs
sahf
sbb
sbb
sbb
rcrl
jo
lcall
out
loope
lret
inc
je
dec
stc
sub
dec
fisubl
adc
ljmp
jle
pop
and
fwait
lret
cld
sarb
mov
and
in
dec
mov
mov
loop
js
cmovg
jl
xor
fldenv
cmp
call
popf
repz
jle
popa
pop
orb
jnp
and
pop
jl
mov
push
fildll
jmp
std
mov
cmp
in
cmp
cld
mov
inc
clc
out
cli
aam
pop
jecxz
cmp
mov
sahf
rorl
ljmp
sbb
mov
in
dec
xor
dec
or
xor
add
lret
aas
ljmp
mov
adc
imul
push
shll
mov
jbe
inc
push
pushl
add
dec
lock
pusha
jbe
ljmp
hlt
int3
shll
fwait
cmp
jg
sub
mov
mov
push
repz
pop
incl
sbb
pushf
mov
aad
mov
dec
xchg
xchg
cld
pop
push
jnp
sub
arpl
cwtl
out
dec
mov
cld
andl
or
and
sub
subl
fidivs
call
loopne
out
lcall
jge
lods
xchg
scas
xor
je
jmp
mov
and
fwait
scas
lods
or
sbb
adc
in
movsb
cmp
cltd
loope
leave
decb
idiv
push
xor
jge
popa
les
ss
call
jle
jbe
ret
insl
mov
je
aas
fidivs
in
scas
and
mov
add
fiadds
sahf
pushf
adc
lods
cmp
jno
mov
or
mov
imul
lcall
aas
in
xchg
xor
movsl
dec
pop
cmpsl
xor
mov
testb
ljmp
mov
bound
push
push
inc
loope
out
outsl
add
flds
jnp
lcall
sub
lock
or
mov
insb
mov
sbb
mov
stos
jge
negb
lods
sbb
and
decb
imul
nop
xor
loop
push
adc
xor
cltd
jne
and
movsl
stos
enter
jno
mov
dec
scas
mov
and
lcall
lret
movsb
push
aam
fs
lock
mov
mov
push
dec
das
clc
data16
jmp
clc
adc
xchg
xor
mov
decl
mov
lock
setne
lcall
inc
divb
jmp
clc
inc
in
mov
popf
dec
push
insb
ljmp
jns
push
enter
push
xor
lret
das
adc
pushl
lret
xor
and
sbb
add
sbb
cmc
pop
dec
jo
jbe
jb
shrb
cli
jmp
mov
bnd
push
cmp
jg
data16
mov
mov
ss
mov
dec
or
int
outsb
pop
lahf
sub
clc
cmp
aam
pop
outsb
add
inc
mov
and
aas
pop
push
ja
xchg
xlat
fldl
cmc
pop
hlt
cmpsl
inc
dec
dec
lock
dec
lret
fidivs
incl
and
imul
pop
mov
sbb
fbld
or
in
out
inc
push
cmc
add
sub
cmpsl
cmpsb
xchg
adc
incl
scas
push
inc
into
mov
in
bound
fsub
mov
dec
icebp
push
mov
xor
jmp
aaa
xor
aas
movsb
adc
dec
int
out
xchg
add
mov
dec
imull
lds
cmc
mov
ljmp
daa
out
shl
ljmp
sahf
push
sbb
or
cld
out
xor
negb
jmp
and
cltd
pop
push
repnz
into
inc
outsl
ss
push
push
cli
in
jb
roll
jo
ljmp
imul
and
push
jecxz
xchg
dec
pop
rcll
inc
cmp
jmp
cltd
out
add
xchg
rorb
sbbb
adc
xor
jecxz
lods
jg
rclb
popa
gs
std
mov
xor
xchg
int
fistl
dec
mov
jmp
and
pop
in
pop
dec
sub
sbb
push
xor
xorl
adc
mov
incl
test
scas
jl
mov
cmp
sbbb
lds
mov
sti
out
fwait
out
sub
cmp
sarl
ret
or
inc
xor
lahf
dec
int
push
xchg
xor
decl
or
in
cmpsl
sbb
nop
hlt
jo
in
scas
push
ljmp
leave
repnz
mov
pmaddwd
mov
sub
ljmp
jae
out
push
mov
push
mov
inc
mov
in
mov
xchg
lock
adc
pop
hlt
call
int3
daa
inc
lods
and
xor
call
jg
jl
or
cmp
hlt
mov
dec
mov
xor
sub
cwtd
rcrb
jmp
fdivl
dec
lock
lcall
shrb
cmp
stc
daa
inc
dec
mov
aam
mov
mov
js
sub
lret
jns,pt
movsb
fs
cs
inc
in
mov
cmc
ror
jbe
stc
cli
movsb
xchg
lods
mov
in
call
test
imul
mov
jb
jp
dec
add
push
inc
pop
call
mov
cmp
int
dec
mov
inc
gs
scas
xor
int3
aad
pop
rorl
call
mov
shrb
dec
js
pusha
and
jg
cmp
jle
loop
or
mov
mov
xlat
lods
pop
hlt
or
jg
pop
bound
sub
cmpsb
jl
jns
xchg
in
scas
push
pop
decl
and
sbb
pop
mov
fdivs
inc
fwait
loopne
push
xchg
cmp
cmpsl
std
mov
jae
xchg
jns
add
jnp
sub
mov
ret
xchg
fmuls
pushf
lret
or
test
and
pushl
xchg
bound
repnz
lds
lret
adc
into
sub
loop
pop
pop
add
dec
call
xchg
or
and
dec
xchg
in
orb
push
cmp
xor
ja
movsl
test
push
icebp
jae
pop
rcrb
pop
sbbl
cmpsb
cmpsl
test
adcl
outsl
test
dec
cli
mov
test
inc
icebp
jg
popa
cld
scas
or
xchg
xor
fucomp
mov
repz
push
or
adc
mov
sub
sbb
in
loop
pop
out
jmp
jg
rcrb
lods
mov
pop
iret
les
add
js
cmc
test
or
jg
or
cmpsl
pop
cmp
divl
push
jo
aaa
or
jge
pushf
jp
pop
outsl
push
cld
rcrl
decl
and
dec
or
ds
mov
sub
daa
mov
incl
add
jb
or
and
shrl
jmp
mov
jp
loop
call
pop
jl
lret
add
xor
mov
xor
mov
xchg
addr16
xchg
pop
icebp
jecxz
ljmp
gs
fs
inc
jae
cs
in
out
clc
es
xchg
jns
fimuls
push
push
xchg
or
out
sbb
sahf
push
sbb
decl
sub
jmp
outsl
aad
fwait
test
mov
out
jns
jecxz
add
mov
call
jge
dec
adc
insl
cltd
adc
xor
or
call
iret
adc
incl
push
xchg
in
test
shl
or
fwait
xchg
mov
call
mov
sti
repnz
je
mov
mov
push
or
in
jecxz
or
decl
inc
lret
push
int3
fdiv
loope
cli
xchg
push
aas
scas
stc
mov
imul
andl
xchg
into
jno
decl
jg
ljmp
test
cwtl
enter
sbb
jns
mov
leave
mov
jmp
ret
or
movsb
pop
add
cmpl
and
std
jmp
js
add
in
pushf
adc
fists
mov
jecxz
mov
mov
gs
adc
rol
icebp
out
xchg
cli
inc
call
jb
or
and
cltd
sahf
in
mov
scas
inc
arpl
lret
test
decb
xor
in
or
sub
jae
ljmp
or
int
jg
cmp
xchg
mov
or
popa
js
popa
jle
xchg
aad
cmpb
lods
mov
outsl
pop
jnp
push
jns
loope
mov
cmp
shl
mov
jge
iret
loopne
pushl
xchg
mov
ficompl
adc
sub
jl
leave
decl
es
in
mov
or
cmpsb
scas
lcall
jecxz
mov
bnd
jmp
aaa
push
push
fs
mov
fcmovbe
cmp
orl
addr16
fs
mov
push
sbb
lcall
std
fdivrs
push
xchg
cmp
ds
sbb
sbb
jbe
inc
add
decl
xchg
cmp
clc
push
orl
mov
xchg
sbb
scas
cld
pushl
rclb
lods
add
mov
push
mov
dec
sbb
shr
mov
sarb
add
or
decl
nop
or
pop
pop
mov
std
loopne
dec
fldl
push
jg
sbb
sub
pop
jecxz
roll
pop
cmp
adc
cvtps2pd
hlt
mov
scas
cli
outsl
clc
call
add
lock
push
std
shlb
shlb
imul
ljmp
into
fmul
and
xchg
mov
nop
out
xchg
sarb
sub
in
cmc
sub
cmpsb
mov
inc
dec
hlt
cmc
inc
adc
jnp
sbbl
pop
into
sbb
aam
mov
into
mov
mov
test
das
inc
je
int
push
stos
xchg
call
aaa
iret
jge
jl
adc
lcall
inc
negb
adc
cltd
das
fwait
mov
mov
push
mov
lahf
lahf
cs
ljmp
mov
xor
loope
jb
push
out
cmp
ret
sbb
or
out
clc
call
dec
jecxz
adc
and
pop
les
push
or
das
jb
repnz
decl
clc
es
mov
in
fistpll
dec
jno
fucomp
imul
cmc
stos
lods
loope
mov
stc
sub
sti
mov
ja
in
movsl
cmpsl
fwait
lahf
insl
and
cwtl
inc
mov
jmp
mov
jbe
cmpsl
into
inc
jno
cmp
lahf
mov
out
cmpsb
cwtl
xor
lock
cli
and
inc
repz
cmova
mov
push
dec
aam
xchg
lret
and
cmpsl
push
test
test
inc
ljmp
push
pushf
ret
xchg
fidivs
scas
out
negl
mov
jg
pop
pusha
jno
push
sti
sbb
jmp
mov
cltd
leave
lret
inc
pushf
pop
sbb
cmp
sub
pop
iret
adcb
mov
push
cmp
xor
icebp
test
int
pop
in
orb
ret
je
sti
xor
lcall
decl
mov
test
sub
push
sbb
or
fisubl
call
adc
cmpb
pusha
xchg
frstor
in
sbb
mov
jno
iret
imul
fisttpl
jne
insb
and
xor
push
cmc
push
decl
dec
sbb
negb
mov
mov
pop
or
out
lock
jae
shll
or
sub
sbb
dec
sub
pop
dec
pop
xchg
rcll
outsb
mov
and
pushl
ss
gs
lods
or
sbb
in
into
scas
fbld
mov
sbb
mov
scas
inc
scas
mov
mov
pop
into
or
jmp
adc
mov
inc
ljmp
sbb
mov
lds
jp
lret
test
lock
aad
push
sbb
decl
or
fbstp
repz
inc
jp
mov
xor
or
test
incl
mov
xor
mov
lods
dec
inc
test
ret
push
jmp
sar
lods
jp
jp
jmp
push
popf
dec
add
daa
out
mov
ret
or
cltd
push
inc
fcomps
and
divb
fstp
daa
shl
pop
shrl
in
lods
push
push
pop
jo
dec
xor
mov
lret
jmp
mov
inc
sub
cwtl
push
push
sub
dec
lods
sbb
es
add
mov
lret
stos
push
popf
cmpsl
aas
mov
stos
cwtl
fists
add
adc
cli
pop
adc
mov
mov
inc
test
inc
in
jmp
sub
imul
shlb
mov
cmpsl
mov
outsb
lods
mov
out
cmp
cld
scas
mov
xchg
ret
lret
repz
mov
and
pushl
orb
xor
enter
pushf
pusha
mov
jo
ljmp
add
cmp
mov
sarl
add
fs
add
mov
call
or
ret
mov
dec
fstps
or
movsb
fstpt
adc
pushl
adc
push
stos
push
inc
loop
cld
out
xchg
sar
repz
nop
xchg
adc
shrl
lcall
out
jne
push
mov
lods
dec
int
and
push
sbb
add
cmp
pop
lds
js
lcall
mov
inc
xor
xchg
iret
push
push
jnp
into
lahf
rol
mov
js
jmp
cmp
jmp
pushl
jne
mov
jmp
test
and
fbstp
call
or
or
call
sbb
jno
outsl
mov
sbb
fbld
decl
clc
mov
fdivl
cmp
or
dec
mov
stos
lcall
out
test
push
outsb
addr16
xor
pop
mov
jmp
sbb
or
cmpsb
test
mov
roll
nop
rorb
pop
aaa
std
mov
pop
push
cmc
lret
sbb
sbb
pushf
testb
fdivr
decl
push
addr16
fdivrs
repz
das
call
or
push
push
cld
jmp
mov
or
pop
mov
pusha
pop
icebp
les
adc
xchg
imull
or
call
hlt
les
jb
shll
nop
push
jbe
lock
cmc
filds
cmp
xlat
ljmp
jns
jno
fists
xchg
pusha
lcall
outsl
lods
inc
cmp
out
inc
inc
sarl
mov
dec
dec
and
or
es
movsl
jl
xor
fdivrs
std
ljmp
dec
idiv
rcr
sbb
adc
stc
into
push
ret
call
aaa
xorl
ljmp
sbb
xor
lea
aam
cwtl
jne
test
leave
and
or
in
cltd
add
fisttpll
cmp
mov
cmp
outsb
daa
mov
jo
ja
push
icebp
jg
inc
sub
add
in
sub
out
lcall
inc
mov
lcall
pusha
ret
cs
cmpsb
or
rol
into
inc
xchg
inc
xchg
js
xor
int
out
cmp
mov
ret
inc
scas
push
dec
aam
sti
lret
xor
xor
rorl
cmp
jg
call
dec
dec
push
jne
dec
pop
xlat
jb
adc
test
mov
or
lcall
fbld
mov
mov
and
addr16
into
inc
dec
fdivrs
jns
inc
mov
pusha
xlat
stos
out
and
jecxz
and
ret
xchg
scas
push
jno
mov
push
jge
xor
ljmp
aam
jl
cmp
cld
add
or
movsl
jmp
add
jge
mov
loope
pop
pop
fisttps
jmp
xchg
inc
jg
mov
ljmp
cli
cmp
pop
adc
dec
addr16
fwait
adc
inc
mov
cs
push
in
push
repnz
mov
lret
decl
pusha
and
xchg
push
lcall
pop
jecxz
fnstsw
into
je
orb
daa
in
icebp
aam
incl
decl
arpl
push
pop
popf
push
lds
jmp
mov
jg
lcall
dec
dec
loopne
cmovne
jno
call
shrb
stos
mov
mov
subb
fldcw
or
rorb
in
ljmp
popa
mov
cmp
lods
int
mov
ja
popf
cmp
xchg
add
loopne
outsl
pop
repnz
je
mov
mov
loop
xchg
movl
inc
cmc
jno
cmp
xchg
loop
orl
mov
mov
outsb
std
cmpsb
incl
mov
or
jns
ret
jae
push
lret
and
incl
dec
shll
leave
inc
jne
sbb
lods
cmp
and
or
ja
add
sti
dec
popa
roll
repnz
lods
cmp
popa
mov
data16
pop
mov
loopne
mov
mov
inc
ds
or
add
dec
pushf
fdiv
mov
or
xorb
decl
sub
cli
xchg
and
sbb
adc
mov
mov
jle
xlat
les
call
fmull
push
xchg
out
pop
lea
in
ja
and
dec
and
cs
repz
jns
or
incl
and
popa
adc
push
or
lods
fldt
repnz
in
jl
adc
fcmovu
daa
ljmp
push
out
out
scas
pcmpeqb
in
cli
and
adc
inc
dec
stos
das
out
aaa
std
call
loope
shr
xchg
xor
in
pop
mov
xchg
sti
xorl
call
notl
incb
stos
fnstsw
pop
fidivl
je
test
dec
xor
sub
decl
xchg
cmc
add
cmpsl
shlb
lret
sbb
cld
sbb
test
pushl
js
movsl
mov
xor
jmp
mov
mov
mov
enter
jmp
and
push
jb
shrl
jo
sarb
adc
call
adc
inc
dec
fidivl
sbb
mov
incl
mov
repnz
push
mov
das
mov
cmp
hlt
pop
rolb
lock
jl
pop
icebp
xchg
mov
xor
lods
xor
repnz
and
sbb
ret
outsl
clc
pushl
out
xchg
push
enter
push
ss
mov
je
push
mov
ljmp
test
insl
cmp
inc
out
adc
call
in
dec
xchg
fst
int
call
mov
jns
or
and
add
sahf
stos
mov
mov
jp
add
pop
adc
stos
lahf
in
add
out
insb
sbbl
inc
cmpsb
push
int3
rolb
xchg
inc
mov
ljmp
adc
pushf
adc
insb
or
cmp
xor
mov
popf
add
sbbl
ljmp
jns
js
scas
roll
pushf
add
cltd
inc
cmp
lods
and
dec
aaa
mov
mov
fsub
jmp
and
or
aam
icebp
dec
fdivs
dec
mov
mov
lcall
pop
psllq
insl
jge
xor
push
arpl
and
aas
jmp
pusha
ss
sub
out
xchg
push
lods
mov
shrb
mov
int
fwait
clc
xchg
mov
mov
add
jbe
frstor
add
aas
push
decl
sbb
mov
in
fwait
gs
push
mov
adc
inc
rorl
out
insb
incl
test
iret
jne,pn
jb
or
mov
lock
stos
sbb
test
jg
insl
lock
mull
sub
add
or
test
add
out
jg
pop
ljmp
fs
mov
pop
mov
daa
adc
jmp
xchg
cltd
add
outsl
sub
jmp
icebp
jb
push
loope
jnp
push
pmulhuw
push
call
and
xchg
jle
inc
pop
daa
pop
out
xchg
ffree
fcoms
ja
fnstsw
pop
sahf
mov
mov
sub
pop
inc
adc
adc
repz
dec
cmpsl
mov
aad
jle
mov
aas
and
repz
pop
les
cmc
ljmp
jle
jae
push
mov
xchg
and
pop
lods
jo
jno
mov
mov
ljmp
adc
imul
sbb
lret
test
ljmp
push
mov
clc
inc
or
arpl
les
int3
pop
in
fs
push
rcrl
sar
ljmp
or
test
lods
addr16
sbb
sbb
movsb
dec
add
outsl
stc
je
mov
add
jno
repz
ja
incl
cmpsl
or
push
pop
dec
jb
sbb
ja
jge
mov
pop
jl
hlt
jbe
cld
and
sub
pop
hlt
dec
and
adc
mov
rcrb
sahf
mov
cmp
call
je
mov
xor
popa
cs
iret
arpl
push
inc
fld
lret
pop
inc
mov
push
mov
dec
jge
or
pop
cmc
cld
adcl
into
fs
std
cmp
mov
lcall
je
enter
pop
mov
cmp
cmpsl
xchg
dec
pop
dec
vpsllq
add
jg
sub
pop
out
push
lret
mov
adc
push
push
rcl
aad
xlat
call
pop
jmp
push
arpl
enter
jmp
and
pop
fldcw
movsb
scas
addl
decl
jno
les
aad
jecxz
outsl
jnp
pop
aas
jmp
ja
out
push
mov
ss
out
clc
decl
adc
cltd
dec
test
pushf
lock
adc
sti
fwait
inc
sbb
decl
loope
add
ljmp
dec
push
dec
dec
sub
stos
les
add
lcall
sub
mov
push
add
push
adc
xor
mov
iret
rol
mov
ljmp
daa
inc
and
mov
mov
adc
call
xchg
aas
mov
xchg
adc
fnstsw
shlb
roll
test
xchg
lret
xor
push
cmp
dec
pop
mov
out
inc
test
inc
mov
into
add
jno
mov
js
push
decl
mov
mov
mov
xchg
arpl
mov
sub
adc
lcall
adc
sub
mov
dec
sub
fld1
das
out
inc
sbb
mov
not
xor
std
ljmp
test
push
pop
ss
xchg
and
repnz
lods
and
xor
outsl
iret
imul
add
sub
repz
mov
push
inc
xor
inc
xchg
mov
sub
inc
add
or
cmp
aad
les
push
sub
push
std
decl
cmc
lods
jecxz
pop
dec
inc
std
mov
mov
in
in
lcall
add
and
int
push
lds
or
mov
mov
and
into
xchg
popa
push
cmc
outsl
incl
out
das
dec
push
cs
shrb
ds
ja
imull
and
hlt
dec
sar
shr
sbbl
xchg
add
sbb
gs
ljmp
adc
inc
fisttpll
fdivrs
lds
cmp
or
jge
frstor
insb
inc
out
push
cmpb
call
mov
into
or
jmp
insb
sbb
mov
sub
xor
clc
xor
sahf
ljmp
nop
xchg
mov
jnp
cltd
daa
sahf
pop
push
cs
pop
mov
pop
lret
cli
lcall
jmp
imul
outsb
dec
out
xchg
pop
adc
pop
arpl
mov
scas
sar
ljmp
rcr
sub
xchg
sub
nop
push
lret
inc
aaa
mov
out
pop
mov
cmpsb
les
icebp
das
and
xchg
shll
mov
xchg
in
hlt
mov
adc
mov
call
sub
mov
out
xchg
push
lcall
or
pslld
es
hlt
incl
sbb
inc
repz
out
xor
add
mov
mov
pop
cli
xor
adc
iret
fadds
add
ljmp
int3
imulb
jns
pushl
sbb
fnstsw
shll
cltd
sub
cmp
lcall
or
push
rorb
and
fcompl
sbb
and
int
bound
ljmp
pop
cmp
shl
pop
bound
nopl
ss
inc
cmpsl
cmpsb
mov
pop
into
adc
xchg
into
push
rclb
cld
dec
cmp
mov
lcall
push
and
je
push
add
mov
lcall
pop
push
lods
jg
clc
push
in
cmp
enter
xchg
and
stc
fidivrl
push
arpl
sbb
jne
decl
lret
ja
cmp
push
jp
in
loop
sub
movsl
mov
and
or
jmp
icebp
inc
mov
sub
repnz
push
push
sysexit
cmp
sti
sub
fsubrs
jg
lcall
roll
mov
ds
and
fsubl
xorb
xchg
adc
push
std
jecxz
mov
shlb
and
jle
xlat
test
sbb
inc
dec
sarb
out
and
cltd
sub
mov
in
dec
or
loope
in
test
stos
xorb
xchg
pushf
mov
lret
or
insl
mov
dec
jge
jge
and
scas
sub
mov
mov
in
inc
mov
jnp
xlat
adc
hlt
rorb
inc
jae
xchg
js
adcb
lods
jl
push
pop
mov
hlt
jp
jo
mov
incl
mov
push
or
pop
and
nop
nop
inc
js
xor
dec
cltd
and
out
loopne
in
scas
push
or
or
sub
pop
pop
jbe
adc
inc
sbb
cld
cltd
add
xchg
xor
dec
pop
and
ljmp
inc
daa
outsb
push
inc
mov
fisttpl
add
jbe
aas
insb
fldenv
mov
pushf
jo
or
mov
inc
pop
mov
push
aam
orb
lcall
add
push
jbe
sarb
and
ror
ret
add
imul
es
jmp
cs
jns
test
sarb
add
mov
and
mov
dec
decl
popa
pop
inc
and
mov
in
sub
add
jmp
scas
inc
rcll
xchg
outsl
push
rclb
stos
and
in
test
xchg
stos
stc
shlb
call
aad
call
daa
adc
xor
test
sar
jmp
loopne
gs
ja
xlat
cwtl
out
mov
mov
jge
mov
incl
push
inc
sbb
in
sahf
cwtl
pop
xchg
xor
sub
push
jo
mov
rcrl
sub
ret
mov
push
fcomip
xchg
dec
xor
sub
call
push
orl
decl
pop
rcr
stos
lds
push
imul
lock
incl
outsl
call
xlat
jecxz
fucomi
rcrl
fwait
pminub
aaa
leave
inc
push
xchg
add
std
popl
rcrl
mov
pop
imul
and
das
cmp
push
enter
push
das
cli
jmp
js
and
call
xchg
jg
in
xchg
mov
iret
mov
push
cmpsb
push
insb
and
movsb
cmp
ljmp
data16
mov
xor
out
loopne
das
scas
jae
cmp
pop
test
and
mov
mov
xor
pop
adc
mov
stos
cmp
daa
push
mov
sub
stc
push
mov
mov
lods
adc
adc
es
in
fiaddl
mov
je
movntq
cmpsl
add
insb
loope
lret
add
fdivs
mov
rcrl
test
mov
jae
fsts
loop
incl
xor
or
nop
sbb
add
repnz
out
mov
add
jmp
popa
pop
or
sbb
rcr
add
movsl
shll
sub
aam
cli
xchg
leave
mov
pushl
or
aam
imul
xor
icebp
iret
pop
jle
mov
mov
jmp
decl
movb
mov
js
mov
inc
in
lods
fisubrs
xchg
insl
aaa
push
add
sub
jmp
mov
dec
mov
out
add
testl
mov
push
sbb
lcall
xchg
mov
shll
jo
or
or
gs
cmp
jmp
cli
sub
data16
xor
pop
xchg
dec
test
ret
mov
stos
int3
js
mov
adc
xchg
iret
pop
jne
loope
cmp
cmp
sti
fcomp
ret
arpl
ljmp
int
dec
and
das
addr16
ficoml
out
stos
dec
in
arpl
lods
mov
lret
xchg
pop
outsl
sub
sti
pop
cmpb
cmp
pushl
lret
mov
mov
iret
jl
cmpb
mov
dec
dec
std
decl
jp
push
push
cmp
or
cmp
jg
test
aad
mov
lret
out
cmpl
lret
stos
sbb
mov
mov
xor
loope
pop
mov
inc
ljmp
cmp
incb
jne
mov
sbb
inc
or
mov
popa
inc
inc
sbb
sarb
push
pop
jge
scas
loop
add
jo
ljmp
push
xchg
arpl
mulb
add
mov
or
mov
repz
lcall
xor
or
mov
je
inc
adc
and
mov
mov
loope
ljmp
clc
dec
mov
push
pop
stc
aam
dec
mov
cmp
mov
dec
sbb
call
dec
xchg
xor
cltd
clc
pslld
jge
out
add
call
sbbb
orb
and
sti
push
pop
fldenv
fs
dec
jg
fsubr
inc
mov
mov
aad
mov
sbb
cli
push
jne
cmp
imul
push
push
shlb
inc
jmp
out
adc
bound
arpl
je
adc
inc
lods
adc
lods
jo
fdivl
xor
addr16
idivb
aam
push
data16
cmpsb
leave
fisttps
cwtl
stos
testl
add
mov
out
loope
out
mov
inc
lcall
adc
pop
push
icebp
pop
cmc
inc
testb
jb
std
cmp
xor
lcall
or
dec
inc
cwtl
pop
add
in
sbb
dec
test
or
mul
dec
add
call
or
lock
pop
arpl
or
xor
movsl
into
adcb
lods
cld
shlb
mov
sarl
adc
jb
jp
hlt
dec
cmc
xlat
lock
scas
jge
sub
add
incl
pop
xchg
dec
repnz
out
aad
repnz
cmpsl
cmpl
into
jne
jo
out
das
adc
out
cld
loop
xchg
xlat
call
cltd
repz
movsl
mov
loope
add
jg
sub
es
pop
xor
dec
pop
outsb
pop
gs
fstl
pop
cltd
push
sbb
xor
js
jae
jg
stc
iret
cltd
rcrb
dec
in
mov
mov
or
mov
call
cmp
ds
xlat
jmp
test
mov
mov
jecxz
bound
decl
xor
std
mov
ror
lock
sbb
inc
dec
pushf
cli
cmpsl
lret
xchg
push
lcall
std
insb
mov
add
xchg
add
loopne
inc
xchg
pushl
sbb
push
aam
jbe
bound
inc
pop
push
test
xchg
sub
sbb
mov
jle
test
cmp
rcrl
xchg
add
xlat
test
aam
aaa
std
decl
sbb
cmpsb
loop
sbb
xor
dec
inc
inc
scas
push
xor
mov
roll
mov
push
adc
jmp
shlb
mov
out
clc
push
adc
es
inc
sbb
mov
movsb
popf
or
mov
add
das
test
pop
mov
cld
lret
sub
jns
cmp
pop
jg
lock
and
adc
xor
sbb
das
sub
jecxz
rcrb
fcomip
ss
cmp
mov
push
fsubs
std
je
push
inc
jl
sbb
xchg
insl
loopne
mov
ss
sahf
data16
in
inc
xor
sub
push
test
call
mov
or
jo
push
xchg
cwtl
adc
cmp
inc
hlt
inc
insb
xchg
outsb
fnsave
and
mov
clc
adc
dec
cli
ds
in
dec
aad
jmp
sbb
daa
xchg
in
cmpsl
loopne
fwait
or
mov
testb
mov
adc
dec
ss
inc
jecxz
fs
and
add
daa
push
aam
aad
jmp
ret
sub
push
inc
call
filds
cld
mov
push
js
sub
jmp
jno
call
cmp
lock
imul
jl
dec
xor
and
call
add
popa
and
jae
jge
xchg
push
pop
ja
or
push
and
aas
pusha
xor
sti
inc
ret
imul
push
or
xor
lock
sbb
pushl
int3
add
mov
in
dec
add
push
sar
or
jno
push
aam
fmull
mov
fdivs
lahf
push
dec
cli
ljmp
xor
mov
jg
shrl
or
into
jb
pop
push
stc
pop
icebp
ljmp
loopne
xchg
lea
mov
fistl
cmp
jl
mov
jg
decl
adc
jmp
xor
fstpt
mov
lock
ljmp
adc
incl
cwtl
out
int3
add
pop
les
jg
imul
adc
out
lcall
mov
ljmp
and
cmove
fmull
mov
iret
incl
ds
sbb
mov
gs
push
stos
dec
jae
std
out
dec
xor
sub
sub
insb
add
jp
es
or
or
mov
fistpll
hlt
jmp
xor
sbb
pop
jg
pushl
int3
inc
sbb
push
stos
cltd
ficompl
jnp
ficomps
push
sbb
sarb
aaa
ss
call
fsubl
dec
mov
enter
xchg
xchg
xor
push
mov
add
mov
pushl
cs
shll
stos
dec
shrb
ds
cmc
sub
pusha
pop
adc
sub
sub
in
adc
pop
out
xchg
adc
sar
ret
xor
xchg
sbb
sub
or
sbb
inc
jnp
popa
cmpsl
adc
dec
push
es
sbb
or
nop
loope
pop
mov
mov
adc
inc
sub
cmp
inc
cs
sub
and
ljmp
lods
jle
mov
sub
mov
adc
dec
arpl
movsb
sub
pop
mov
jns
movsl
out
xchg
xor
push
pusha
add
out
insl
mov
in
test
ficoms
fnstcw
inc
popf
xor
cs
sub
add
lcall
scas
scas
push
dec
pop
add
sub
cld
adc
movsb
fcom
cmp
mov
push
lock
add
mov
aaa
jo
add
out
inc
fdivr
mov
jmp
mov
scas
adc
std
sub
js
jmp
std
or
inc
out
dec
cmp
into
int
sub
aaa
into
or
add
adc
icebp
sbb
decl
cmp
lods
push
pop
cmp
add
fisubl
inc
pushl
sbb
adc
enter
lret
cld
adc
icebp
inc
cmpl
and
sti
pop
loop
sbb
incl
mov
loop
push
sbb
fcoml
in
mov
fldl2e
jmp
outsb
shlb
sub
inc
lea
cwtl
add
mov
xchg
sub
mov
jns
shl
dec
mov
aaa
sbb
dec
push
push
cmp
add
mov
pop
cmc
jl
push
xor
lret
lods
outsb
out
ljmp
icebp
jns
or
jmp
jne
push
frstor
sbb
aad
cld
hlt
scas
int3
mov
mov
repnz
sbb
je
dec
pop
sbb
clc
and
mov
mov
pop
cmc
push
ljmp
fcmovnb
mov
jb
jmp
mov
xchg
adcb
mov
out
lock
mov
dec
pop
or
or
fcomip
pushl
add
xchg
es
dec
test
das
jg
scas
and
call
mov
fdivr
aam
lcall
cltd
jg
push
pop
fld1
in
in
push
subb
jae
push
cwtl
mov
cmp
jmp
cltd
dec
inc
jmp
ljmp
insb
out
jle
imul
jae
inc
in
mov
stc
rcl
in
mov
pushl
inc
loop
repz
popf
cmp
add
cmp
mov
int3
pop
lret
ret
ret
jno
sub
ljmp
push
pop
fisttpl
xor
and
lods
mov
mov
sbb
call
mov
jmp
jbe
inc
pop
pushf
sub
mov
mov
pusha
clc
orb
test
fs
decl
js
cmp
push
leave
sti
shl
inc
pop
fwait
test
jnp
dec
sbb
mov
jns
mov
lahf
lods
jne
bound
xchg
inc
cmp
add
add
je
ret
outsl
mov
xor
gs
subb
or
dec
repz
and
xchg
call
sbb
adc
repnz
sub
cmp
stos
cmp
jno
call
jne
pushl
scas
mov
cld
jle
cmp
mov
ja
jmp
mov
test
in
flds
aam
in
or
jbe
lcall
lahf
mov
sub
lds
push
enter
decb
test
stc
jae
shlb
jmp
divl
pop
rol
aas
adc
shll
pushf
cmp
add
insb
mov
sbb
loope
icebp
dec
xchg
scas
fwait
cmpsl
outsb
xor
and
loop
jl
push
jbe
cmp
or
ljmp
fisttps
imul
js
bswap
jecxz
sbb
xor
xor
decl
cltd
xor
xlat
int3
fsubr
mov
adc
pop
cmp
push
xor
mov
mov
insb
jl
call
and
inc
imul
sahf
pop
dec
insb
xchg
out
lods
xor
ljmp
sbb
jg
sub
lds
addr16
mov
ffreep
mov
mov
cld
bnd
push
idiv
pop
sub
sti
pop
jnp
pop
or
call
pop
lahf
out
insb
fisttps
pushl
mov
add
rcrb
in
or
imul
push
pop
stc
lea
movsb
clc
mov
insb
lcall
leave
inc
inc
pop
jnp
sbb
add
leave
mov
xor
test
jmp
ja
sbb
stos
test
pusha
fyl2x
mov
jmp
push
sti
mov
fnstsw
pop
push
fs
out
jns
incl
cmpsl
adc
push
jp
jnp
rcrl
sahf
xchg
sbb
clc
jl
jmp
lds
inc
movb
fiadds
ljmp
mov
mov
mov
and
sar
jb
push
ret
incl
mov
rcr
push
aam
stc
mov
push
mov
lahf
movsb
out
lret
inc
bswap
lret
icebp
jmp
loop
les
fisubl
sbb
out
sbb
mov
incl
test
lret
jnp
ret
mov
fisttpl
fistpll
leave
mov
lcall
push
xchg
cmp
inc
jg
sti
sbb
cmp
inc
cmpsb
mov
enter
lahf
pushl
jbe
jle
jns
sbb
fs
pop
push
lock
call
mov
scas
inc
testl
or
fmull
and
movq
jmp
leave
xchg
movsl
push
push
sbb
lock
cmc
inc
mov
xlat
loopne
ljmp
add
nop
stos
xchg
int
int
xchg
xchg
leave
scas
xchg
xor
lcall
and
iret
xor
or
or
xchg
outsb
mov
dec
pop
and
lcall
or
dec
pop
ds
jge
sub
popa
orl
loop
dec
cmp
call
add
daa
mov
sbb
lcall
push
jb
jbe
lret
lret
outsl
sarb
scas
push
lods
dec
outsb
push
imul
ret
adc
call
mov
adc
adc
out
inc
add
adc
pushf
jp
fidivl
rol
sub
jno
dec
xchg
sbb
pusha
or
lcall
cli
fwait
popl
push
orl
ret
aad
daa
and
in
add
mov
lock
jno
stc
sub
mov
xor
jmp
and
xorl
stos
shlb
cmp
cmp
adc
and
dec
pop
jb
in
sbb
or
mov
addr16
and
xor
pop
mov
movsb
and
mov
mov
mov
lods
dec
mov
sbbb
addl
inc
xchg
push
xlat
arpl
out
hlt
mov
xor
lahf
ja
bound
xchg
adc
into
adc
js
jge
mov
push
decl
addr16
pusha
aad
fcmovu
bound
adc
xchg
adc
test
pop
sub
jle
cltd
pandn
aad
aas
inc
ret
sbb
push
xlat
push
push
fisttps
mov
lods
mov
cmovnp
mov
mov
mov
and
negl
and
bts
jg
jb
call
mov
jle
xchg
stos
cli
lcall
mov
pop
cwtl
arpl
mov
mov
decl
adc
mov
pop
inc
ficomps
sarb
outsb
pop
jp
ljmp
fimuls
mov
pop
mov
jl
pushf
ja
mov
inc
dec
cmp
cmp
pop
mov
gs
cmc
jg
repz
jmp
sbb
hlt
xchg
mov
insl
pop
ljmp
xor
sbb
testl
int3
dec
sbb
mov
cmp
cltd
dec
mov
subl
cli
mov
popa
sbb
xchg
ss
ficompl
pop
gs
int3
mov
cs
mov
push
mov
and
cmpsl
pushf
dec
mov
or
insl
xchg
jae
xchg
adc
sbb
and
mov
push
outsb
out
and
shll
cmpsl
lods
add
inc
push
testb
out
mov
aaa
clc
push
mov
incl
mov
popf
mov
outsl
stos
or
xchg
jle
negb
divl
pusha
filds
jg
mov
push
sub
lcall
loopne
insb
test
ret
and
push
or
outsb
cld
decl
lock
rcll
js
fs
test
cs
mov
jmp
dec
mov
adc
popf
cmp
cmp
cmp
jg
loope
dec
dec
cmp
hlt
cld
mov
xor
and
scas
xchg
lcall
addr16
cltd
lcall
test
ja
imul
call
js
fmull
enter
ljmp
lods
in
mov
leave
or
ljmp
ficomps
je
orl
mov
call
adc
sub
movsl
mov
sub
jle
ljmp
adc
jo
xor
push
in
scas
mov
xchg
fstpl
jmp
mov
int3
call
es
sbb
out
cli
adc
dec
pop
push
xlat
mov
mov
mov
pusha
inc
call
lcall
lods
icebp
adc
loop
lret
xlat
cltd
dec
inc
adc
xchg
dec
dec
cwtl
aad
lcall
inc
int3
stos
fldt
sti
idiv
iret
or
daa
loopne
daa
jno
in
outsl
xchg
adc
cmp
outsl
cmc
and
addr16
ljmp
adc
out
repnz
mov
les
sarl
sub
gs
ljmp
dec
adc
add
mov
dec
jge
aad
and
test
sub
cld
scas
int3
scas
mov
fistl
add
stc
addb
cmp
leave
ljmp
dec
mov
dec
je
ja
mov
mov
and
inc
mov
movsb
ljmp
aas
fistpl
in
jmp
aad
xchg
sbb
xchg
or
into
nop
sbb
hlt
pop
mov
jae
movsl
push
outsb
xor
inc
inc
out
and
outsl
cli
mov
inc
or
add
xchg
shr
cmp
xchg
data16
or
jl
and
test
inc
icebp
ret
push
add
lods
imul
popf
xchg
and
xchg
mov
cli
rcr
cmp
cltd
xchg
idivb
in
dec
sub
add
in
pop
hlt
incl
jo
xor
sbb
mov
add
inc
in
mov
les
mov
js
addl
adc
movsl
sub
mov
lods
ss
dec
incl
andb
xchg
mov
lahf
mov
add
test
popf
mov
adc
pushl
or
fiadds
or
mov
or
ja
push
jl
mov
mov
and
fcomip
jns
jo
in
push
movsb
repz
xor
loopne
in
stos
mov
sub
imul
xor
cmpsl
jbe
jp
push
mov
xor
adc
mov
jmp
fimull
dec
add
cmp
sub
enter
pop
push
repnz
sbb
incl
push
jno
push
push
and
mov
sbb
xor
aaa
push
sub
pop
xchg
inc
loopne
jnp
cmp
loope
dec
mov
sbb
hlt
sahf
pop
aaa
add
orl
cmc
ficoml
popf
inc
sar
mov
add
int
nop
arpl
outsl
loop
jp
cwtl
test
push
test
sub
jmp
xor
inc
fucom
pop
test
jnp
mov
fisttpll
insb
xchg
pusha
popa
test
insb
jmp
push
dec
pusha
call
out
call
inc
jmp
and
pop
imul
ljmp
cmp
lock
inc
lcall
xchg
pop
cmp
inc
cmp
and
into
out
push
dec
xchg
or
jg
inc
xlat
push
int3
dec
xchg
call
vunpckhps
sbb
push
ret
add
ljmp
jecxz
cmc
dec
dec
cmpsb
aam
sahf
mov
cmp
mov
dec
push
cmp
shrb
jmp
mov
push
mov
sub
arpl
incl
mov
fistl
loopne
in
pop
sbb
or
call
cmpsb
iret
outsb
incl
pop
inc
and
and
mov
stos
cmpsl
lcall
push
in
into
mov
in
movsb
mov
fcomip
call
dec
addr16
test
mov
es
pop
jo
jb
sarl
mov
pop
stos
xor
sti
lds
imul
xlat
mov
bt
ljmp
insb
repz
inc
jg
xchg
push
push
sbb
imul
push
add
or
int
cmp
arpl
push
adc
dec
ficoms
pop
arpl
jge
stos
loopne
mov
add
pusha
sbbb
jp
pop
jmp
push
and
imul
lret
out
popf
faddl
cmp
fwait
add
adc
sbb
decl
xor
popf
ret
and
orb
mov
push
in
lcall
mov
decl
add
xchg
les
gs
mov
movsl
sbb
inc
mov
out
incl
orl
das
inc
repz
outsb
push
lret
imul
lods
mov
cmp
ljmp
sbb
add
shlb
mov
mov
scas
or
dec
adc
mov
and
jl
in
pop
scas
insl
ds
mov
test
fmull
pop
mov
pushl
mov
dec
lds
mov
cmpps
pop
jno
mov
shll
mov
mov
pop
js
mov
mov
push
push
rolb
xor
sub
mov
and
xor
lahf
es
iret
xchg
sbb
mov
into
or
fs
lahf
call
jmp
mov
inc
das
or
jg
push
out
ja
jne
jle
jnp
lea
fistl
mov
jnp
into
pusha
mov
mov
adcb
sbb
dec
popf
cli
decl
movsl
or
movsb
sbb
data16
fucomp
testb
hlt
dec
fldt
lock
cli
add
or
jp
adc
mov
in
fbstp
decl
pop
mov
cmpb
mov
and
lock
xor
in
xchg
pop
sbb
pushl
mov
jecxz
or
dec
jno
outsl
aas
bound
add
sub
lcall
aaa
mov
std
jo
sbb
aaa
fwait
xor
mov
cmpb
dec
adc
push
adc
lahf
scas
ljmp
lcall
or
sub
dec
adc
sub
mov
into
or
aas
and
pop
xor
sti
lods
push
mov
cmp
cmp
add
or
jecxz
fcomip
ficomps
and
mov
jne
into
cmp
out
mov
lock
adc
cmp
ficoms
dec
daa
add
mov
mov
cmp
stos
icebp
and
cld
mov
jmp
mov
insb
xor
iret
mov
stos
inc
outsb
ja
push
and
std
inc
rcrl
hlt
leave
movsb
rorl
xchg
sahf
push
jg
add
mov
js
enter
decl
out
sbb
pop
mov
adc
lods
jo
cmp
pop
lret
cld
jbe
outsl
push
pusha
fstp
pop
and
scas
cli
lcall
ds
movb
adc
mov
push
icebp
xchg
leave
enter
push
push
lods
lcall
loope
loop
xor
out
shl
pop
fs
das
scas
aaa
fldenv
sub
mov
mov
test
jg
call
fldl
pop
jmp
xchg
add
ss
aam
and
dec
or
jmp
pop
js
loope
dec
addb
add
and
ljmp
rorl
pop
pop
dec
jnp
rcpps
cltd
stos
pop
sbb
dec
sbbl
jnp
hlt
pop
or
clc
scas
into
pop
imul
test
sub
dec
and
in
mov
cmp
mov
pop
inc
sub
lret
enter
std
mov
sbb
shr
out
cmpsb
pop
outsb
pop
mov
pop
lahf
daa
mov
xlat
call
mov
jne
cs
sub
pusha
adc
pushl
out
stos
lahf
out
sbb
sub
aaa
dec
fs
pop
scas
rcl
les
mov
push
jl
movsb
and
cmp
fdivr
mov
iret
mov
insl
add
outsb
adc
test
sbb
xor
push
sub
cmp
notl
cmc
add
pop
mov
lret
addr16
xchg
ljmp
mov
lret
adc
cmp
popa
sbb
jmp
mov
in
add
fnsave
jmp
inc
jb
adc
leave
rcrb
pushl
sbb
addr16
pop
and
je
pushf
xor
cmpsl
add
ret
lret
jmp
inc
add
mov
push
sub
push
add
xchg
arpl
jns
cmc
mov
iret
push
stc
lret
out
mov
fstl
into
dec
out
sub
test
dec
out
dec
xchg
inc
adc
les
xor
pop
cmpsl
lahf
sbb
mov
leave
jmp
clc
cmp
jmp
in
mov
mov
jecxz
mov
mov
push
pop
xchg
xchg
and
xchg
ror
outsl
nop
scas
mov
pop
jns
mov
xchg
mov
sarb
adc
mov
pop
push
adc
ret
xor
inc
or
cld
ljmp
push
inc
push
fisubrl
mulb
sbb
lea
lds
dec
popa
cmc
mov
push
jg
pushl
jnp
sub
xchg
lcall
dec
in
repnz
push
incl
fcoms
pop
sarb
jl
push
test
mov
incl
push
daa
ds
and
mov
decl
outsb
or
add
add
or
int3
mov
ficoms
fs
push
loopne
icebp
pop
std
decl
pop
sti
jb
arpl
adc
ffreep
inc
cli
xchg
jno
xor
sub
dec
mov
jns
cmc
sbb
ja
inc
ja
xchg
dec
int
sub
ja
out
jp
lahf
sbb
and
pop
jmp
fistpl
movsl
lds
out
int3
in
loope
mov
outsb
lods
or
dec
div
ljmp
dec
fiadds
jg
shll
dec
sub
push
xlat
push
mov
push
push
jg
arpl
shlb
dec
fsts
fisubs
sub
mulb
add
call
inc
xchg
popf
out
pop
fmuls
pop
popa
incl
decl
and
push
stos
int3
pop
in
negl
call
push
testl
repnz
sbb
repnz
ja
push
enter
xor
std
lcall
clc
ss
and
insb
mov
xor
or
cli
mov
lahf
mov
jg
add
sbb
pop
sahf
arpl
xchg
lds
iret
mov
ss
addl
pushl
add
pop
daa
fsubs
sti
mov
jg
pusha
sar
dec
xchg
sub
or
insl
inc
stos
mov
push
int3
sub
inc
inc
int
stos
test
sbb
ljmp
aad
xchg
or
push
and
push
lods
pusha
push
cwtl
addr16
push
cmp
loop
lock
out
cltd
pop
xor
xor
aaa
cld
jg
mov
test
bound
dec
xchg
or
mov
mov
cmpl
inc
mov
out
movsl
jo
inc
jg
scas
cli
inc
inc
xlat
pop
movsl
jecxz
ss
pop
fwait
out
xchg
pop
jmp
repnz
pushl
out
aas
push
aaa
push
xor
clc
stos
pushf
add
ss
lret
add
call
xor
imul
lds
loop
movsl
stos
mov
cli
bound
mov
push
pop
das
cmp
jmp
fsub
fdiv
adc
lock
xorl
lds
lock
jns
data16
mov
mov
test
push
dec
xchg
sbbb
xor
jge
out
pop
mov
mov
loop
fadds
lahf
jp
push
jmp
lea
lret
lods
mov
or
jle
push
cwtl
pop
mov
cmpsb
push
pop
mov
add
inc
jns
out
xor
daa
push
pop
dec
ljmp
and
popa
and
xor
rcrl
bound
dec
enter
pushl
push
jb,pt
mov
add
xchg
ficoml
mov
add
add
out
pusha
mov
push
clc
je
xchg
and
adc
sbb
cld
call
lds
jb
mov
stc
adc
mov
arpl
lds
incl
aad
js
arpl
lret
ds
inc
cmp
mov
mov
incl
call
jg
aaa
pop
xor
mov
out
xchg
test
jp
das
out
dec
in
enter
lods
mov
dec
mov
iret
stos
mov
shll
mov
pop
and
and
ljmp
push
inc
mov
xchg
int
cld
cmpsl
adc
jno
loopne
mov
mov
inc
cwtl
insb
adc
cmpsb
shr
mov
push
sbb
and
cltd
pop
addr16
addr16
aaa
push
in
push
stos
decl
cmp
adc
and
mov
imul
int3
mov
call
mov
mov
inc
shll
daa
mov
test
push
jmp
das
jmp
inc
roll
push
jmp
lods
rcrl
lret
test
mov
loopne
sub
mov
mov
jb
ljmp
fisubrl
fidivs
adc
out
int
sti
repnz
mov
and
insb
xchg
je
jg
jmp
fmull
into
push
imul
cmp
inc
mov
mov
pop
jne
push
mov
xor
enter
jecxz
movsl
sti
jge
push
shlb
push
mov
push
je
mov
or
arpl
push
fsubrs
cmp
cli
cmc
jmp
xchg
mov
push
jb
ds
cmpsb
decl
pop
sub
addr16
or
jl
loope
push
inc
xor
dec
decl
test
xor
push
xchg
add
adc
and
pop
push
lods
loop
mov
aam
je
sti
sub
ljmp
pop
sub
add
rcrb
mov
in
xchg
jb
push
jp
loopne
fstps
pushl
push
shlb
mov
adcb
mov
fdivl
or
std
ficoms
test
jle
xchg
ficompl
call
lods
add
std
inc
sub
scas
call
lods
pop
xchg
push
repnz
lcall
xchg
lahf
repz
push
sub
jne
popa
cmc
and
ret
lret
push
ror
test
xor
cmp
pop
jle
divl
inc
fsubl
jl
out
adc
mov
rorl
mov
adc
and
call
sub
push
inc
loop
cmp
xor
xchg
stos
lds
loopne
push
das
clc
fisttps
neg
mov
pop
lret
stos
jmp
push
pop
fs
push
jecxz
ljmp
bound
ljmp
rcrb
stc
cmp
fsubrl
jae
mov
jecxz
dec
call
mov
push
mov
decl
js
out
clc
mov
mov
push
pop
push
and
movsl
mov
mov
push
add
mov
lock
mov
jecxz
test
mov
sbb
call
dec
add
daa
aas
rclb
out
into
call
cmp
mov
rcll
loopne
and
std
mov
fldenv
jae
sub
adc
subl
je
mov
lret
mov
jle
das
sar
cmpsb
or
xlat
call
loop
sub
cwtl
dec
mov
xor
test
inc
daa
rcrb
adc
cmp
mov
adc
jmp
inc
int
out
pop
std
push
cmp
push
nop
iret
sbb
pop
adc
mov
out
ljmp
icebp
je
adc
cli
sbb
loop
xchg
push
pop
mov
cmpsb
mov
ljmp
loope
les
or
jno
cmp
aaa
add
mov
call
ja
inc
jp
mov
loop
enter
cmp
pop
pop
arpl
mov
sub
jmp
pop
mov
adc
shlb
push
cld
mov
cmp
stc
idivb
lret
xlat
cmp
xor
push
out
movsb
andl
decl
xchg
fistps
pushf
and
sbb
jge
out
or
sub
fidivs
and
pop
cmp
lods
outsb
fwait
insb
cmp
and
test
jl
ret
lcall
imul
cmp
call
mov
dec
into
inc
lock
mov
ljmp
dec
mov
xchg
mov
xor
sub
push
dec
xchg
outsl
push
pop
ljmp
or
pusha
and
test
xor
cmp
and
ljmp
decl
xchg
std
negl
push
xchg
jg
inc
inc
scas
xchg
inc
and
mov
lcall
sub
xchg
push
test
movsb
and
xchg
jge
test
mov
into
in
movsl
jmp
cmp
cmp
lea
decl
nop
mov
and
jecxz
adc
push
mov
sbb
fdivl
cwtl
cmp
sub
and
add
aas
aas
push
cmpsl
add
lahf
cmp
mov
aas
cmp
fcmove
call
loopne
in
xchg
push
rorb
pop
or
adcl
sub
shlb
ljmp
ds
addr16
mov
jg
mov
push
xor
jns
cmpl
mov
mov
out
out
add
outsb
mov
xor
or
xchg
jno
dec
incl
shrb
or
data16
test
mov
bound
das
or
pushf
mov
repnz
lcall
mov
sti
inc
hlt
mov
shr
fadd
mov
cmp
dec
cmp
out
in
sar
ss
scas
jg
jecxz
or
movsl
inc
inc
or
aas
lock
movsl
movsl
mov
int3
push
sbb
push
orl
adc
xchg
shll
jne
pop
in
addr16
push
adc
or
incl
hlt
and
push
dec
hlt
mov
xor
cmc
push
es
ffreep
shrb
jl
sub
jmp
and
fcmovnb
fists
push
nop
aad
out
and
sub
push
add
clc
in
jmp
adc
fwait
inc
and
mov
push
add
loope
jnp
popa
outsl
repnz
ljmp
lods
push
imul
jmp
nop
push
inc
and
popa
mov
push
subl
lret
popa
mov
cmp
incl
pushf
pop
pop
jecxz
lret
fidivl
jbe
dec
std
stc
or
int
mov
scas
fsts
sbb
into
inc
test
imul
sbb
jbe
adc
incl
add
xchg
sbb
adcb
test
out
mov
mov
sub
call
lds
sbb
lea
and
sub
dec
xor
cmp
and
sarb
cmp
push
sub
push
mov
push
lret
pop
jmp
and
xchg
jmp
js
lods
jno
aaa
xchg
rcrb
or
cmp
inc
sub
pop
setp
popa
pop
cmpl
mov
and
xlat
mov
pushl
movl
insb
adc
adc
push
mov
adcb
sub
jg
xchg
push
fimull
push
xlat
mov
gs
fmuls
and
repnz
or
adc
adc
cli
dec
test
inc
dec
add
xchg
lret
cmp
enter
cmp
mov
cmp
incl
rcrb
pop
ret
icebp
mov
dec
jno
jnp
pop
jmp
sub
int
pop
inc
sti
mov
pop
push
dec
xor
pop
cmpsb
lods
or
cmp
std
push
testl
pushf
hlt
xchg
loope
mov
push
ret
and
in
inc
pop
or
sahf
sub
fwait
mov
push
fdivr
mov
ds
xchg
sub
scas
aaa
push
mov
or
cltd
stc
and
jb
daa
push
xchg
and
dec
or
icebp
ja
or
cwtl
jg
mov
push
ret
scas
notl
xchg
add
push
jmp
pop
cmp
add
sub
fldt
cmp
in
das
js
cmp
push
inc
jbe
sbb
jae
iret
jns
repnz
pushl
cmp
loop
aas
pusha
test
les
or
nop
pop
xor
mov
fcoml
sbbl
add
stc
aaa
sub
xor
fucomp
in
int
ret
push
sbb
fists
xchg
mov
push
lcall
popf
xor
sub
inc
rcr
cmc
lea
arpl
leave
iret
pop
js
cmc
sbb
call
cli
xchg
sub
and
or
imul
pushl
sbb
es
fs
in
insl
cmpsb
cld
aad
clc
lcall
mov
incl
push
js
adc
sub
sahf
cmpl
jg
and
decl
loop
fucomi
sub
xchg
idivb
inc
mov
inc
sbb
jle
jno
push
sahf
xor
mov
jle
dec
sub
xchg
pop
jle
jg
test
ljmp
shlb
pop
pop
lcall
sbb
loopne
jne
sbb
cmp
xlat
add
sub
dec
addl
jge
sub
mov
decl
fstps
pop
mov
xchg
repz
cmp
jecxz
aas
or
icebp
lds
inc
mov
xor
xor
push
add
mov
push
pop
and
dec
xchg
lcall
int3
add
and
ljmp
pop
outsl
mov
mov
pop
adc
hlt
out
sbb
aas
pop
std
pushl
sbb
jecxz
mov
stos
add
jecxz
mov
push
mov
pop
std
mov
mov
ljmp
ret
xor
mov
jg
rclb
inc
sti
xor
jbe
mov
sub
fisubrs
pop
out
scas
jg
xor
aad
push
repnz
lock
mov
ljmp
xor
jmp
mov
in
xlat
mov
sbb
ss
adc
cmp
fcoms
xor
adc
xor
decl
and
movl
jmp
add
in
and
pushl
push
popl
das
sarl
xchg
mov
and
adc
and
push
fwait
lret
jno
aam
xor
dec
loopne
push
idivb
mov
jmp
inc
pop
std
hlt
push
dec
cmp
adc
dec
sub
mov
mov
adc
call
ds
jno
das
loop
fisttpll
pop
pop
movsl
jbe
sub
and
addl
push
cld
cmp
jecxz
xlat
and
pushf
orb
test
pop
or
jmp
sbb
popa
test
addr16
xchg
out
sub
jmp
ljmp
sbb
sbb
test
mov
xchg
mov
dec
push
enter
fwait
je
inc
ljmp
scas
out
test
mov
scas
xchg
clc
ret
out
xchg
dec
sbb
jne
test
jns
xchg
leave
sbb
inc
cmp
outsl
jmp
xor
scas
daa
adc
popf
cltd
adc
cmp
movb
stos
aaa
shrl
pop
nop
aas
add
add
std
ljmp
sub
mov
dec
push
inc
push
jle
mov
jle
jmp
pop
gs
mov
sub
clc
jge
push
test
call
push
adc
cmp
jmp
sub
ret
xchg
insl
mov
fsts
mov
jmp
sbb
xchg
aas
rorb
call
mov
lods
cmp
out
sbb
xlat
lock
mov
ret
int3
push
or
inc
fstl
dec
or
outsl
iret
aad
mov
loope
lds
and
decl
push
sub
outsb
aad
ljmp
je
and
popa
mov
dec
jg
adcl
add
or
cmp
stc
icebp
pop
cmpb
clc
mov
fildl
decl
add
addr16
pusha
xchg
mov
shl
pop
adc
fdiv
lock
out
mov
xor
or
and
dec
stos
andb
hlt
in
into
mov
negb
and
fs
lret
iret
cltd
test
and
and
ljmp
sub
hlt
jg
jne
pop
adcb
add
rcrb
add
stc
jp
scas
fcmovbe
adc
orb
pop
rcll
roll
pop
mov
pushl
dec
cmp
test
je
cmpsb
pop
and
fldt
aam
or
xchg
and
repz
and
ljmp
cmp
inc
mov
mov
or
andb
sub
outsl
sahf
lock
stos
cmp
sub
stc
lock
push
ret
mov
rolb
add
mov
xchg
adc
push
mov
incl
mov
leave
sub
bound
fsubrl
inc
adc
out
push
inc
fmul
icebp
incl
cld
or
adc
xor
dec
data16
jnp
es
stos
mov
les
jmp
mov
dec
dec
ficomps
adc
mov
clc
ljmp
cld
call
push
fidivl
fcmove
sti
mov
rclb
add
inc
push
jp
xchg
mov
mov
sub
rol
lahf
and
movsl
pop
es
jge
leave
decb
push
xor
mov
push
fstpl
pushf
aas
mov
dec
fbld
ret
outsb
mov
jmp
push
mov
int
pop
sbb
add
loope
mov
ljmp
inc
xchg
gs
test
mov
hlt
repnz
cli
das
jae
mov
xchg
mov
lcall
ljmp
xchg
in
jns
or
jecxz
add
sbb
dec
jmp
outsl
mov
cmp
jmp
enter
repnz
test
ja
lret
test
fdivrl
dec
sub
gs
cld
push
xchg
lcall
mov
adc
inc
outsl
out
xchg
loopne
adc
push
push
and
mov
mov
lcall
push
cmp
iret
mov
cmpsb
ss
out
adc
icebp
repnz
inc
movsl
xor
push
cld
jge
data16
subb
jae
push
or
test
gs
arpl
fcmovb
aas
decl
and
inc
push
jno
lock
inc
inc
sub
test
push
incl
jne
in
cmpsl
adcl
mov
mov
jns
fsubp
imul
dec
lcall
xchg
shl
jecxz,pt
pop
lcall
cmc
or
nop
cwtl
fcmovnbe
les
ret
adc
arpl
popa
cmp
addr16
or
imul
test
cmp
dec
jnp
stc
push
push
inc
dec
inc
jne
ljmp
clc
lcall
shl
lahf
xor
jmp
push
adc
cmp
lret
scas
les
xor
out
loopne,pt
or
jle
imul
aaa
fdivl
jp,pn
push
lahf
or
insb
imul
push
sbb
dec
jbe
jb
mov
push
mov
lods
cli
sti
into
popl
aam
inc
fisttpl
sub
pushl
mov
xor
lds
push
ret
enter
cs
inc
addr16
xchg
insl
mov
mov
test
jae
mov
pop
ret
inc
xchg
rep
sub
mov
dec
inc
or
dec
gs
or
mov
dec
sti
jae
cs
outsb
push
mov
sub
out
and
add
xchg
and
mov
movsl
mov
pushl
push
imul
sti
je
rcll
ljmp
dec
pop
xchg
push
dec
adc
scas
into
ret
in
orl
lcall
std
mov
and
cmp
imul
repz
fsubr
mov
andl
loopne
or
std
call
test
xchg
push
mov
out
and
sub
scas
addb
stc
rorb
stos
loop
mov
mov
or
pushf
xchg
dec
rclb
sbb
test
sbb
pushf
push
scas
mov
stc
call
push
mov
popa
mov
sbb
iret
jbe
ljmp
or
push
fcmovnbe
jmp
jae
in
addr16
sub
clc
add
push
dec
push
xor
sub
popf
dec
clc
int
add
inc
je
push
adc
imulb
fwait
push
std
call
dec
gs
in
lods
incb
sar
adc
mov
adc
adc
hlt
loope
xor
xor
je
pushl
shlb
in
push
dec
sbb
xor
mov
imul
aaa
fstpl
or
xchg
adc
and
dec
pop
sar
out
inc
dec
or
rolb
mov
cmp
ret
pushf
jb
and
ljmp
ljmp
inc
movsb
dec
add
pusha
jns
push
xor
mov
add
cwtl
or
or
push
lcall
dec
sbb
mov
mov
into
dec
jle
mov
mov
fldcw
cmp
ss
lcall
pop
enter
mov
xchg
movsl
aad
dec
imul
xlat
stos
shl
arpl
lock
jo
popa
or
aaa
cwtl
sub
sbb
pop
das
dec
mov
jns
push
test
and
decl
mov
test
xchg
and
vprotq
addr16
movsl
add
in
scas
add
push
dec
scas
in
jmp
cld
jne
dec
loopne
sub
enter
mov
push
sti
ja
imul
mov
mov
and
scas
popa
lds
in
mov
jl
push
jne
ljmp
call
push
cwtl
dec
imul
arpl
imul
jge
push
xor
cmp
mov
and
or
pushf
cmp
xor
filds
xchg
mov
inc
insb
fcompl
lcall
ret
inc
addr16
sbb
cmp
aaa
mov
pusha
loopne
cmpsb
mov
jmp
lret
push
cs
mov
insb
dec
dec
fldenv
popaw
push
xor
or
push
inc
inc
cmp
decl
add
jne
insl
mov
or
add
in
and
test
cmp
ljmp
faddl
mov
inc
orl
lea
ljmp
mov
mov
xchg
sub
jb
mov
jmp
int
ljmp
push
pop
out
aaa
jo
pop
add
jmp
sbb
fsubr
cmp
add
daa
aad
nop
aad
xchg
adc
xchg
pushl
out
fisubrl
cmpsb
mov
mov
sub
out
push
scas
outsl
faddl
pop
das
mov
dec
push
test
sbb
mov
out
divl
push
or
jns
outsb
sahf
sub
mov
call
push
add
jmp
test
pop
ficomps
xchg
or
cmp
sar
jmp
negb
mov
dec
shr
adc
sub
sbb
xor
jg
jp
hlt
fldt
sub
cmpsb
nop
inc
add
hlt
xor
stos
stos
dec
mov
popf
add
mov
xchg
scas
pop
nop
movsb
lods
push
mov
outsl
adc
cmpsb
and
inc
mov
into
mov
cmpsl
call
cmc
pushl
cmp
stc
dec
pop
outsb
cmp
cmc
popa
test
jne
adc
lcall
jmp
inc
adc
fmulp
movl
cmp
into
jg
xchg
ss
push
adcl
adc
cmpb
sbb
sahf
pop
push
jmp
mov
aam
dec
xor
push
in
adc
pop
cmpsl
sub
push
arpl
push
stos
sbb
cmp
ret
xorb
jge
cmp
outsl
cli
pop
pop
and
sub
mov
inc
and
sbb
frstor
enter
lcall
call
cmp
lods
cld
fisttpl
test
mov
mov
iret
sbb
jne
lods
and
and
scas
dec
insb
and
lcall
out
gs
pop
daa
cmc
les
cmp
xor
adc
stos
sub
xchg
pushl
xor
jae
ja
loop
sbb
mov
dec
mov
or
cwtl
jge
inc
push
sub
ljmp
jl
shr
lods
mov
push
ja
fsts
decl
testb
add
bound
aad
orb
or
ja
lock
fadd
andb
jl
cmpsl
jnp
xor
push
xchg
adcb
sub
mov
pop
mov
push
and
incl
fs
arpl
add
std
mov
fisttps
jecxz
aad
decl
xchg
notl
jno
aad
cmc
mov
cmp
sbb
loop
pop
add
xor
in
out
clc
pushl
pop
xlat
pop
dec
sub
fildll
sub
aas
das
sbb
inc
std
ja
fwait
adc
pushf
testb
inc
leave
scas
gs
sahf
loopne
jno
decl
fcoms
adc
xchg
popf
xchg
push
ljmp
out
pop
sbb
test
int3
sbb
icebp
jne
mov
jecxz
cld
decl
in
das
std
mov
mov
or
add
sarl
js
inc
jg
insl
push
push
jge
ja
and
pop
pop
pop
adc
jle
idivl
lods
aad
cmp
mov
xchg
push
push
jg
jmp
or
push
push
sar
decl
sbb
or
xor
mov
in
std
rorb
js
ljmp
rclb
push
pop
add
sub
imul
cmp
adc
clc
popf
pop
decb
inc
das
or
xor
jae
or
pusha
fistpll
push
mov
cmp
xlat
decl
mov
or
add
sahf
data16
repnz
dec
jnp
cmc
cld
ja
lcall
arpl
adc
xor
xchg
push
jmp
hlt
push
aaa
push
or
dec
add
cltd
push
jns
out
jmp
mov
lock
xchg
lds
aad
xlat
test
fsts
dec
ds
adc
add
push
bound
call
sub
xchg
out
mov
cld
dec
sti
xchg
xor
es
mov
mov
fnstcw
mov
mov
clc
incl
and
or
pop
adc
mov
mov
push
lret
bound
or
adc
jg
push
fldenv
push
cmp
mov
xchg
mov
push
xchg
test
xor
insb
das
pop
jnp
cmp
pushf
mov
ljmp
add
mov
fldenv
sarl
inc
insl
adc
push
jl
jmp
cmc
jbe
js
sahf
jg
les
cmpb
lcall
incl
mov
out
push
sahf
lahf
lcall
daa
sahf
sbb
decl
dec
cmp
sub
add
xchg
inc
pop
bound
dec
mov
shrl
imulb
pushl
mov
roll
sahf
ret
add
stos
imul
notb
jmp
xor
ret
test
cmp
and
pusha
mulps
aas
aaa
std
call
in
push
push
add
lcall
fwait
sbbl
js
lcall
les
rol
shll
mov
inc
or
pop
shll
lcall
pop
rolb
and
test
adc
clc
imul
sub
xor
dec
jg
imul
dec
pop
and
pop
out
jb
push
adc
push
sbb
int3
data16
incl
xchg
lret
jge
xchg
cmp
pop
aad
enter
jae
les
xchg
sahf
cmp
lcall
nop
lret
add
lock
push
clc
xchg
push
insl
or
mov
and
sbb
add
sub
dec
movsb
dec
fs
scas
dec
inc
dec
aam
cmpsb
cmp
ljmp
stc
xchg
and
test
pusha
mov
cmpsl
lods
popf
repz
mov
ds
mov
fcmovnu
je
sbb
imul
enter
cmc
ljmp
pop
pop
pop
jae
pop
cmp
decl
daa
pmovmskb
adc
dec
mov
loope
jmp
inc
mov
lcall
lods
lcall
lahf
movsl
push
and
and
outsb
and
jae
push
xchg
sub
repz
scas
push
jmp
cmp
jo
fnstenv
dec
push
aaa
lahf
ret
addb
lea
idiv
decl
cltd
stos
or
cmp
dec
mov
xchg
out
cmpsl
fs
cmpsb
pop
and
adc
call
jb
fisubrs
pop
mov
shll
cmc
push
cmp
mov
dec
ljmp
dec
sub
mov
push
scas
xchg
mov
into
mov
hlt
pop
dec
pop
or
jmp
xchg
fbld
jmp
pop
cmp
ljmp
ja
mov
rclb
push
cs
outsl
clc
or
into
dec
loopne
data16
cmp
add
jmp
in
arpl
inc
pop
dec
sub
jns
dec
push
aad
xchg
push
mov
hlt
pushf
mov
sahf
mov
mov
pushf
push
fcoms
xchg
or
mov
jb
call
and
mov
neg
add
loopne
cmp
push
inc
aas
pop
cmc
and
mov
jmp
jl
adc
loopne
call
cmp
dec
imul
das
fs
mov
jae
push
mov
gs
jle
clc
subl
inc
xchg
fcomip
call
scas
cmpsb
pop
jo
fsubrl
mov
cmp
and
inc
add
call
and
jbe
imul
add
incl
cmp
lods
fidivrl
mov
dec
mov
lods
jb
enter
and
aaa
pop
cli
jmp
movsb
subl
dec
push
fwait
lahf
scas
cltd
xor
decl
dec
sti
shll
clc
fld
addr16
stos
out
jns
pop
enter
push
push
ret
dec
pop
push
push
shrb
add
dec
add
dec
mov
jmp
jle
ffree
js
cmc
hlt
test
incl
xor
inc
fisubl
popa
push
push
into
repnz
fbld
mov
insb
add
inc
stos
scas
les
in
testb
add
jmp
sub
mov
dec
mov
lahf
jl
dec
enter
push
call
in
mov
sbb
mov
stos
cmp
mov
sub
inc
mov
inc
lcall
in
mov
sub
xor
mov
popa
mov
call
sub
dec
pop
sahf
ss
ja
in
movb
mov
nop
and
std
jle
std
decl
pop
testl
xor
lods
imul
popf
sub
and
inc
push
into
or
xchg
jo
mov
fdivl
xor
and
scas
cmp
sbb
jle
mov
mov
lods
imul
popl
out
fwait
icebp
sub
mov
push
test
ljmp
xchg
cltd
jo
jo
jbe
int
stos
dec
shl
repz
jmp
push
pushf
push
push
inc
call
adc
sahf
xchg
insb
je
xor
ret
ret
add
mov
cltd
je
ret
jnp
sar
incl
push
aaa
loopne
lret
fidivs
adc
inc
adc
xlat
adc
adc
push
shl
repnz
push
clc
scas
stc
rclb
cmp
add
mov
leave
mov
call
lock
cmp
push
sbb
icebp
and
sbb
in
pop
jo
inc
bound
scas
dec
pop
mov
call
push
mov
xchg
fwait
incb
sbb
mov
add
arpl
testb
pop
fwait
xorb
bound
and
jp
push
in
dec
push
adc
mov
mov
dec
xchg
mov
jns
inc
cmpsl
shll
push
mov
das
cli
decl
lret
sub
xchg
idivb
insb
aaa
or
imul
sti
jmp
mov
lock
ds
push
pop
mov
xchg
ficompl
fdivrs
dec
jg
scas
nop
cmpsb
dec
ret
clc
incl
inc
add
and
fdivrs
mov
lds
fistpll
hlt
pop
int3
mov
cmp
adc
mov
das
outsl
mov
mov
mov
xchg
cld
out
mov
jle
addr16
js
mov
cli
push
lods
cmpsb
push
jl
fisttpl
test
in
dec
sbb
in
sub
fiaddl
into
fdivrs
adc
or
sti
fdivp
sub
cmp
push
in
adc
in
or
inc
jge
add
and
inc
std
std
rclb
mov
push
daa
add
push
incl
ljmp
or
pop
dec
rorb
int3
push
xchg
fadds
or
push
dec
jmp
mov
fisttps
movaps
in
inc
dec
scas
sbb
in
fsts
test
sbb
cs
fnstsw
add
cmpsl
pop
leave
addb
add
push
add
incl
jae
mov
nop
sbb
inc
dec
pushf
fs
imul
mov
jg
and
sub
mov
mov
fimuls
pop
les
cld
rcr
dec
rolb
dec
jne
lea
dec
inc
fistl
mov
lods
add
out
scas
fstpt
pop
test
js
xchg
dec
mov
ud0
push
cld
push
push
and
rcll
daa
mov
hlt
and
pop
fwait
and
lock
sar
ljmp
movsb
push
pop
xor
jmp
jb
sbbb
push
sarb
ss
fcomip
call
adc
and
nop
in
pop
rcr
ljmp
lcall
call
adc
fadd
jne
dec
sbb
pop
addl
fcmovne
and
mov
es
dec
or
add
jg
jg
xchg
xchg
jl
sub
insb
aam
sub
sub
cmp
insb
repz
divl
or
lret
sub
out
dec
fimuls
leave
sbb
sub
jg
jmp
fcompl
mov
int3
jnp
and
sbb
outsl
mov
repz
sbb
call
std
pushl
stc
sti
rorl
mov
push
mov
fwait
sub
fs
lcall
cmc
lret
or
push
test
fbstp
cli
pusha
xor
xor
insl
pop
cmp
fcomip
jmp
movsl
addr16
push
push
fstps
add
imul
xor
ljmp
xor
ss
lret
xchg
subb
lahf
mov
dec
pop
rcrb
and
decl
sub
test
dec
enter
and
cmp
xchg
pop
push
sar
mov
outsl
or
movsl
test
nop
sahf
clc
pusha
stos
das
cli
call
out
mov
add
sub
pop
repz
inc
xchg
jg
adc
jmp
lcall
lcall
push
push
mov
sub
cld
and
push
ds
mov
decl
or
in
push
adc
lcall
xor
sti
movsl
dec
gs
testb
jg
jmp
and
mov
les
mov
in
std
out
clc
jnp
inc
jmp
adc
sub
inc
push
pop
pop
mov
mov
mov
xor
sbbl
mov
mov
stc
fisubl
in
jbe
xchg
inc
inc
inc
les
mov
hlt
stos
in
sub
into
inc
das
cmp
jbe
mov
or
les
pop
pop
cmp
xor
mov
fs
sub
ljmp
test
push
mov
fcmovnbe
adc
ret
pop
push
pop
mov
lcall
jae
cmc
mov
imul
dec
pop
data16
or
cmp
mov
pop
aaa
jnp
xor
mov
es
lret
out
sarl
inc
cli
xchg
lods
add
out
insl
cmp
mov
inc
ljmp
lret
adc
ret
pop
xor
fdivrl
loop
sbb
lcall
mov
loope
cmpsb
push
xchg
inc
sahf
enter
xor
xchg
and
pushf
inc
sub
sub
inc
jp
out
sbb
xor
cli
jg
fldt
das
enter
sub
mov
cs
cmp
adc
std
inc
enter
outsb
mov
jp
xor
sbb
mov
mov
enter
mov
into
inc
mov
fdivrl
hlt
mov
jmp
mov
sahf
cmp
push
cmp
xorl
cmp
sbb
lret
pushl
sti
shll
lcall
cmp
into
mov
inc
lret
test
loop
inc
xor
and
lods
fsubl
add
sub
fidivs
jmp
mov
mov
rol
pop
sbb
jne
cmc
pop
bound
dec
or
or
insb
jbe
inc
int
mov
xor
lock
cmpsl
loope
dec
jmp
cmp
push
pop
and
or
jmp
xor
test
cmpsl
sbb
insl
pop
dec
or
pop
loope
mov
int
jg
call
mov
imul
cmpsl
stos
rorl
dec
clc
mov
clc
pushl
repnz
or
or
cli
mov
mov
xor
or
ljmp
hlt
pop
mov
dec
sbb
out
sub
push
jge
xor
nop
xchg
inc
sub
imul
sub
mov
nop
stos
scas
and
cli
pop
stc
test
sti
mov
inc
int
jle
sub
cwtl
in
mov
movsb
xlat
sbb
in
icebp
incl
xor
test
ror
push
mov
mov
mov
lcall
in
mov
test
cmp
ss
xchg
cmp
mov
mov
ljmp
mov
pop
cltd
loopne
rol
int3
cmc
push
and
movsl
add
clc
jmp
fimuls
inc
nop
push
xchg
jg
mov
lods
fldt
sbb
jg
adc
sbb
pop
jmp
aam
repz
rcl
icebp
mov
pushl
adc
push
cwtl
stos
frstor
ss
cli
mov
adc
and
mov
mov
and
and
les
xor
aad
pop
hlt
outsl
pop
and
inc
jmp
add
test
pop
bound
std
clc
out
bound
lcall
outsb
cmp
out
loope
xor
or
shlb
mov
popa
fadd
ljmp
popa
inc
pop
rcrl
cmc
pop
mov
sti
mov
push
xor
mov
mov
jb
data16
sbb
push
sub
imul
cmpsb
mov
push
stc
xchg
pushl
push
sbbb
jae
ror
dec
lret
sub
test
imul
out
mov
xchg
lret
arpl
jns
imul
push
xchg
ja
incl
xchg
repz
std
jb
and
popf
sbbl
xchg
testl
call
add
je
adc
fbld
mull
mov
jbe
repnz
jg
jmp
xlat
lods
sbb
out
dec
in
fs
sbb
pop
mov
mov
ljmp
imul
xchg
xchg
jmp
popf
lds
mov
pop
jne
fdivrs
jnp
mov
in
in
int3
pop
push
fs
je
es
or
xchg
adc
and
pop
in
fisubs
sub
push
aas
mov
adc
lds
arpl
jecxz
shr
or
in
imul
ret
hlt
pop
xchg
or
int3
fwait
add
xor
jmp
rcll
sbb
decl
arpl
pop
mov
popa
push
loope
das
pop
push
push
iret
adc
adc
jg
jmp
inc
push
in
jp
add
bound
xchg
or
dec
inc
lcall
int3
ja
popf
icebp
inc
pushf
repz
fsubl
enter
mov
out
mov
dec
push
in
push
rolb
xchg
jne
push
mov
rol
or
loopne
sub
int3
sub
and
lock
incl
pop
insl
lods
fs
mov
rcrb
bnd
jp
idivl
call
add
int3
into
xchg
dec
call
xor
in
pop
cmpsb
cs
pop
mov
xor
sar
jmp
es
cwtl
std
push
or
ret
sti
cmc
loop
loop
and
xchg
push
dec
mov
jg
xchg
mov
outsl
pop
test
fsubrl
in
lods
lahf
add
mov
mov
in
testl
stc
lret
jb
jb
mov
stos
arpl
xor
xchg
cmp
rclb
test
adc
push
clc
decl
loope
jg
mov
daa
xchg
jnp
mov
xor
cld
jmp
sub
mov
clc
sarb
out
enter
incl
dec
clc
mov
int
fidivrs
pushf
cmp
ret
jp
hlt
into
dec
xchg
iret
div
sbb
mov
jmp
jecxz
cld
arpl
push
pop
pop
loop
jecxz
xor
sub
adc
repz
pop
inc
xor
mov
push
cmp
dec
jge
xor
xor
xchg
pop
clc
xor
test
sbbb
js
sahf
dec
mov
sub
icebp
aad
dec
sbb
outsl
adc
pop
add
pushl
call
clc
ja
out
mov
xchg
adc
fnsave
xchg
inc
bnd
cmpsl
cld
shrl
cmpsl
jp
sub
jae
lret
inc
imul
addl
out
mov
adc
xorb
xchg
pushl
stc
fs
sbb
push
cmc
xor
xlat
in
in
and
scas
add
mov
cwtl
ljmp
lcall
insl
cmp
repnz
in
jmp
cli
imul
scas
add
pusha
lea
pop
call
jge
mov
jmp
in
mov
xor
mov
mov
cmpsb
add
fidivs
js
dec
inc
sbb
xor
call
dec
movsl
lret
pop
sub
test
xchg
cmp
push
int3
jae
lods
in
xchg
cs
ljmp
je
jns
add
mov
fcomp
sbb
dec
out
cmp
je
jl
mov
ljmp
xchg
mov
sbb
lods
imul
add
sbbb
mov
lcall
mov
inc
add
or
xor
pop
lea
test
les
jns
je
cwtl
push
ljmp
jb
inc
xor
jp
mov
rcrb
push
mov
nop
sbb
call
ja
and
call
ret
dec
cli
push
push
addps
xchg
scas
xor
out
push
mov
mov
pop
cld
lock
hlt
outsb
jecxz
aaa
xchg
mov
sbb
decb
or
das
cmp
xor
jecxz
inc
test
xchg
push
out
lcall
jnp
dec
adc
cmp
insl
push
popf
push
std
inc
pop
cli
cmpl
lcall
fbstp
in
std
push
out
xchg
mov
mov
cmp
mov
es
cmc
popf
sti
xlat
pusha
and
inc
movsb
inc
subb
mov
orb
leave
push
stos
push
inc
imulb
jmp
cmp
adc
pop
mov
int3
xor
jns
rorl
insb
test
ljmp
scas
stc
jmp
psadbw
mov
dec
cmp
inc
popf
cwtl
in
call
mov
pop
out
xchg
push
mov
lcall
loopne
rorb
push
jecxz
jge
fdivr
por
dec
xor
lahf
sbb
les
inc
ja
pop
dec
cmp
jecxz
lret
cmp
jbe
ljmp
mov
push
pop
loopne
inc
aam
jmp
lods
and
pop
jbe
jno
jecxz
test
mov
or
adc
out
push
out
mov
sub
loop
sbb
adc
lret
movsl
adcb
aam
icebp
dec
jne
mov
sbb
cmp
adc
xor
decl
inc
adc
add
push
xchg
xchg
mov
jmp
sbb
push
add
ljmp
repz
sub
cmp
jnp
mov
mov
jo
mov
cmp
sbb
or
adc
or
dec
test
mov
aam
loopne
dec
std
sbb
cmc
in
cmp
dec
adc
xchg
xchg
or
mov
call
inc
jae
push
mov
inc
and
leave
xor
rcll
inc
es
in
pop
call
fs
mov
pop
das
xchg
movsb
pop
xchg
sbb
adc
ljmp
and
addr16
mov
test
fwait
popf
imul
std
mov
cs
rclb
sbb
ljmp
popa
sub
iret
adc
pop
negb
dec
sbb
inc
aad
out
jg
cmp
cltd
push
sub
mov
nop
mov
dec
mov
std
ljmp
push
adc
and
push
push
jp
mov
gs
int
cli
ljmp
ret
addr16
and
imul
lea
xchg
pop
movhps
jmp
insb
addr16
sub
movsl
in
mov
ljmp
out
or
call
sbb
pusha
xlat
mov
jmp
mov
xor
call
ss
lods
icebp
add
cmp
out
mull
inc
jp
inc
paddd
incl
sti
add
in
andb
mull
icebp
or
jb
xor
daa
ret
scas
jmp
jg
jle
cmp
call
inc
sti
mov
enter
mov
xor
rol
push
shl
out
inc
out
xchg
adc
or
mov
hlt
dec
ret
loop
jmp
cmpsl
stos
xchg
repnz
int
sarb
fbld
dec
into
push
cs
incl
test
icebp
loope
imul
mov
popa
imul
ljmp
hlt
aaa
mov
addl
cmc
sub
out
fbld
fiadds
sbb
lea
mov
push
test
pop
je
insb
xor
shl
jb
fnstsw
fadd
pop
loope
dec
cmc
icebp
cmp
enter
rcrl
insl
fs
incl
inc
mov
movsl
popf
push
cmpsb
icebp
mov
cld
outsl
lret
cld
jne
mov
int3
and
pop
cld
inc
out
addr16
push
adc
fwait
sub
inc
push
adc
aam
dec
hlt
mov
stos
lds
push
inc
jmp
popa
cmp
dec
imul
jmp
dec
adc
repz
dec
andb
jg
fcomip
decl
pop
sub
inc
mov
pop
or
lcall
subb
pop
imul
pop
ljmp
outsl
call
xchg
mov
cvtdq2ps
hlt
inc
or
ljmp
iret
andl
inc
lret
je
icebp
mov
xchg
dec
sbb
mov
mov
jmp
jne
dec
pop
data16
cltd
into
aaa
and
lock
mov
inc
add
stc
lahf
jo
and
and
std
in
jecxz
stos
jne
mov
fwait
jo
clc
call
je
xchg
xor
fsubl
and
sbb
bound
xchg
dec
add
adc
push
in
scas
jb
movsl
shrb
push
xorl
jecxz
lcall
and
push
mov
test
push
sbb
sub
mov
sbb
xchg
mov
inc
and
and
jns
cltd
mov
fisubl
je
lea
push
fsubs
rcl
test
lds
push
xor
add
cmp
ljmp
sub
cli
sub
xchg
add
ret
mov
sbb
xchg
add
incl
xchg
outsl
xor
int
jmp
inc
addb
insl
test
adc
push
jp
cld
cmp
dec
pop
jae
or
sub
mov
cs
shrb
push
sbb
jmp
jmp
mov
lds
cwtl
xor
clc
call
cmp
mov
ror
cmc
jno
in
inc
mov
fistl
lret
inc
es
call
push
aam
mov
aad
dec
adcb
sub
cmpsl
incl
ja
pop
jno
roll
push
jo
mov
jbe
dec
cli
leave
cmp
lds
aaa
jmp
pop
rorb
push
add
ja
ja
sar
mov
sbb
repnz
push
jns
and
fistps
in
jns
inc
cmp
dec
cli
fists
adc
sbb
inc
cmp
frstor
in
push
cli
imul
mov
ret
sti
into
outsl
cmpsl
adc
dec
jg
pushl
lahf
test
in
dec
and
mov
push
scas
mov
incb
pop
cmp
cmp
jmp
or
xchg
fwait
inc
dec
sub
push
jecxz
sub
jmp
mov
xchg
sub
outsl
enter
inc
add
ret
jg
std
jge
xchg
push
das
std
xor
ljmp
xchg
and
or
pop
movsb
es
mov
out
sub
dec
iret
dec
jmp
das
or
pushf
test
sub
popf
cmp
inc
icebp
sub
testl
pop
lcall
adc
dec
add
icebp
jmp
jbe
jmp
incl
cld
inc
mov
loopne
cmp
adc
push
int3
negl
xor
jnp
or
mov
imul
xchg
or
pop
sub
call
pushl
and
nop
lods
inc
clc
adc
cmp
or
push
mov
and
mov
inc
sub
pushl
adc
sub
int3
int3
popa
call
and
sti
ljmp
ljmp
sbb
mov
cmp
mov
cmp
call
dec
dec
sbb
xor
push
mov
pop
and
mov
enter
lret
xchg
pop
jne
jg
popa
cld
xor
loope
lds
sarl
xchg
jno
sahf
je
ret
lods
push
cmpsb
in
cmp
xchg
push
mov
and
xor
pop
mov
push
push
jo
loope
jbe
stos
stos
mov
mov
jmp
xchg
call
popa
ljmp
cmpsb
mov
and
les
xchg
aam
decl
ret
adc
pop
rorb
xor
icebp
xchg
or
out
repz
mov
incl
cli
testb
and
or
out
repnz
add
mov
and
or
push
or
sub
xchg
cmp
aam
loope
int3
mov
shll
jnp
and
adc
aad
mov
call
cld
cmp
and
xor
dec
jg
or
jne
push
cld
fcomip
sahf
mov
icebp
gs
jnp
pop
repz
je
xchg
test
call
enter
and
add
scas
rorb
fs
std
addb
repz
incl
loop
mov
aad
xor
jns
inc
shl
incl
and
imul
or
push
pusha
std
psrlw
xchg
ficompl
sbb
imul
movsb
incl
mov
cmp
int
add
mov
cmp
dec
clc
lret
decl
lock
mov
adc
mov
cmp
lret
mov
jmp
adc
aas
in
mov
cmp
in
or
sbb
loop
add
decl
test
and
int3
andb
scas
aam
sbb
sahf
or
mov
mov
push
testb
xchg
xchg
mov
lret
fwait
rcll
push
mov
dec
mov
ja
fmuls
xor
nop
in
rclb
ss
push
repz
in
rol
inc
shlb
pushf
enter
outsl
outsb
add
xor
aad
negb
inc
in
jle
jmp
and
xchg
lcall
sbbb
sti
scas
add
mov
mov
call
sub
xlat
adc
icebp
pushf
mov
add
rclb
stos
jle
push
in
enter
adc
mov
call
aas
xchg
xchg
adc
push
in
in
mov
hlt
mov
sar
lcall
jae
inc
or
pop
mov
jle
stc
dec
adcb
sub
jp
jl
add
cmpsl
cmc
jp
jg
mov
adc
jl
xchg
pop
mov
xor
inc
jb
pop
es
incl
pop
rcrl
push
jl
in
dec
aaa
jnp
orl
fcomip
call
xor
adc
push
pop
push
push
add
or
or
ja
mov
mov
xor
sbb
incl
ds
pop
enter
jge
mov
inc
sub
xor
cmp
lcall
jns
xbegin
sub
incl
add
and
jge
jae
push
lcall
stc
dec
popf
dec
lahf
fiadds
jnp
lods
and
or
into
movsb
psubsw
mov
dec
movsl
pop
lea
sbb
iret
sbb
setge
test
cmp
ljmp
xorl
hlt
arpl
pusha
mov
imul
sbb
fcmovnbe
cmp
movsl
mov
stos
mov
adc
jne
shlb
lret
out
fidivrl
jmp
sar
push
call
pop
test
pop
push
xchg
out
mov
dec
mov
movsb
xchg
mov
decl
xchg
xchg
sub
and
fistl
shrl
pop
mov
ljmp
xor
hlt
inc
cltd
sbb
and
and
push
fists
dec
outsl
jnp
scas
cmp
jbe
lcall
push
test
lock
mov
stc
xchg
popf
mov
jmp
jge
insl
lock
outsl
inc
add
enter
sub
mov
cmc
ljmp
rorb
sar
push
stos
dec
jp
mov
xchg
inc
in
dec
cmpsb
fwait
or
std
dec
outsb
mov
inc
scas
and
mov
push
mov
shlb
call
jno
es
mov
stc
xchg
inc
mov
xchg
loop
shr
jge
xchg
ret
call
cmp
mov
enter
mov
stos
scas
inc
iret
jecxz
shll
hlt
dec
jmp
inc
mov
pop
xlat
ret
sub
adc
cmp
testl
sbb
repz
jle
add
fwait
scas
cli
inc
scas
or
mov
sub
imul
pop
mov
lahf
sub
into
mov
incl
mov
xchg
test
push
add
in
pop
xchg
pop
mov
xor
mov
dec
jl
pushl
sbbb
push
and
cmc
fdivrs
jnp
jg
data16
lock
loop
mov
cwtl
xchg
mov
xor
insl
cld
mov
inc
mov
xor
mull
fbstp
insl
xchg
push
popf
adc
hlt
fs
cmp
leave
fs
ss
mov
sub
or
xchg
imul
pop
int3
fidivrs
and
ds
sub
or
insb
mov
adc
add
call
outsl
sub
dec
sub
pop
dec
addr16
cs
dec
jg
out
insb
xchg
cltd
in
push
roll
jl
inc
sbb
sbb
inc
out
pushf
jle
test
xchg
sub
mov
incb
add
test
stc
popa
ljmp
dec
mov
pop
aas
data16
int
out
in
pop
xchg
cmc
or
inc
decl
lock
mov
mov
fisubrl
push
push
stc
out
adc
ljmp
outsb
lret
sbb
div
add
fcoml
int3
sub
popa
jg
jmp
rcl
sbb
ret
xchg
push
mov
pop
cmc
xchg
test
xchg
call
scas
imul
pushl
push
ljmp
fnstenv
fwait
xchg
fistpl
outsl
sbb
sub
scas
jmp
xchg
jbe
ret
scas
mov
jbe
stos
adc
inc
and
push
sbb
jmp
pop
mov
loopne
push
jg
mov
sub
ret
adc
jnp
mov
jnp
and
sbb
inc
cmp
lret
test
repnz
adc
inc
jne
xchg
mov
incl
sbb
and
push
aam
insb
cmp
andl
xchg
out
sub
mov
div
div
mov
pop
in
ja
mov
fldcw
mov
js
or
mov
cs
loop
lret
or
xchg
outsl
mov
jmp
cmp
in
fcmovb
icebp
movsl
jb
xchg
sti
decb
in
xchg
pop
std
lcall
fmul
ret
es
cli
and
pop
cmp
mov
push
decl
imul
adc
and
push
popa
les
jbe
sahf
pusha
lcall
xor
jg
jno
fisttps
loop
push
jmp
out
jecxz
enter
sbb
testb
mov
dec
push
repnz
fbstp
or
test
in
cmpsb
into
mov
shl
paddsw
jmp
scas
sub
cmpb
pop
inc
and
mov
xor
mov
xor
mov
cli
jg
mov
mov
std
adc
fcoml
in
lds
repnz
or
jnp
xchg
sbb
add
push
jne
dec
jp
fcmovnb
mov
out
or
nop
sub
bound
and
xor
mov
dec
sbb
cmp
aaa
lret
mov
mov
jle
xchg
push
mov
sub
call
pop
or
push
lret
les
push
decl
push
pusha
xorb
fmuls
jle
daa
adc
ds
sub
sbb
aaa
jb
lods
add
or
incl
int3
adc
imul
cltd
push
cmpsl
out
mov
add
jns
lret
push
adc
pusha
fldl
stc
ret
icebp
rcrl
outsl
sti
pop
lcall
ret
push
sub
mov
xchg
mov
mov
push
dec
js
test
sub
push
lcall
ljmp
mov
adc
test
adcl
push
push
into
mov
inc
incl
in
mov
lcall
xchg
cmp
lods
filds
mov
rcrb
decl
sub
adc
mov
mov
mov
or
insb
mov
or
incb
sbb
leave
imul
jb
sbb
loope
cmc
cld
mov
insl
scas
cmc
mov
cvtpi2ps
add
xorl
sbb
dec
in
stos
pop
ret
fwait
dec
push
sub
aad
daa
fcomip
fisttps
inc
sbb
jg
call
push
xchg
xchg
push
xchg
pop
fisubrs
pop
and
sbb
incl
cmp
push
popf
jecxz
or
rorb
mov
call
mov
dec
jbe
cmpsl
xchg
lret
sub
stos
loope
or
ljmp
movsl
mov
imul
addl
outsb
adc
scas
sbb
mov
lcall
adc
xchg
mov
cmpsl
jge
mov
rcr
cmp
lcall
call
and
mov
dec
and
sbb
js
int3
nop
in
and
mov
ljmp
lcallw
aaa
adc
pop
andb
xchg
ljmp
sbb
cmpsl
lcall
jl
sahf
push
inc
dec
mov
xlat
lret
adc
pop
leave
xchg
lcall
xchg
dec
xchg
andl
xchg
push
or
fwait
loope
jmp
cmpsb
fsubs
add
inc
inc
aad
adc
ljmp
mov
jmp
inc
shlb
loop
jg
mov
aas
cmp
js
lock
shlb
push
add
call
ljmp
mov
inc
dec
movsl
jbe
cli
loopne
adc
in
cmpsb
lcall
inc
fwait
push
push
cmovle
cmpsl
jae
pop
cmp
adc
std
xchg
fldln2
icebp
cld
std
repnz
decl
lods
jp
sti
das
mov
jno
repz
nop
out
les
stos
int
inc
test
xchg
or
jmp
fildll
ret
lods
jo
clc
inc
mov
cmpsb
movsb
cli
lods
sahf
jecxz
rcrl
sar
decl
lock
scas
inc
fdivrl
cmp
inc
lods
nop
ljmp
mov
sub
sbb
adc
sub
sub
lods
pop
imul
jg
lcall
lret
add
jecxz
out
jo
push
xor
test
jmp
jnp
jae
test
dec
sub
scas
push
icebp
mov
add
mov
jae
arpl
int3
outsb
jnp
lcall
filds
push
data16
ret
ret
xchg
fs
xor
inc
scas
mov
sub
or
addr16
js
xchg
cmc
es
cmpsl
push
xchg
cmp
fcomip
mov
pop
push
cld
pop
sbb
jmp
push
inc
cli
push
dec
roll
incl
push
jge
sbb
mov
mov
lds
pop
sahf
movsl
rorb
jmp
movsb
add
ljmp
aas
mov
sbb
decl
adc
and
mov
xor
out
mov
cld
call
lcall
popf
js
ljmp
rolb
xor
dec
pop
fisubrs
jle
xchg
mov
xor
idivl
pop
nop
mov
cld
out
add
cmp
sarb
in
jmp
incl
and
test
and
mov
dec
mov
inc
rclb
sahf
inc
push
inc
popf
jbe
fsubs
call
xchg
rclb
jge,pt
js
dec
or
call
je
bound
into
xor
ljmp
adc
fsubl
dec
lcall
movsb
adc
mov
and
jp
jbe
je
fnsave
out
pusha
leave
cmp
jl
rorl
push
test
out
ss
ds
int
dec
and
push
jp
xor
jecxz
scas
and
xor
jnp
sarb
nop
int
and
inc
push
movsl
ss
call
loopne
mov
cmp
fstl
out
adc
jnp
mov
jmp
aam
push
outsl
xchg
pop
out
adc
gs
fwait
popf
lea
sub
mov
add
dec
mov
push
std
or
loope
mov
sarb
ljmpw
pop
or
shrl
mov
popl
stc
mov
and
mov
pop
arpl
cs
decl
jnp
pop
inc
mov
xor
js
nop
pop
shrl
les
popa
push
ds
or
jb
pop
mov
jecxz
pop
mov
and
sbb
add
andb
mov
enter
pop
jnp
insb
dec
stc
dec
sub
jae
xlat
ljmp
into
add
gs
ljmp
mov
push
les
fstps
mov
dec
xchg
sbb
dec
cmpsb
add
cwtl
divb
xchg
aas
cmc
out
push
cmc
aas
sbb
decl
insl
jbe
adc
std
pop
cmc
mov
sub
jl
loopne
bound
inc
stos
push
popa
mov
jnp
pushl
and
aas
pop
cld
dec
lcall
or
xorl
mov
stos
xchg
cld
or
test
xchg
push
adc
mov
fnstsw
push
rolb
or
or
sub
push
ss
inc
or
je
jae
outsl
js
lcall
mov
or
daa
push
testb
jge
outsb
mov
dec
jne
call
mov
fstps
lock
clc
ret
negl
cwtl
sbbb
pop
insl
and
jmp
lcall
iret
inc
dec
push
bound
and
lret
mov
jmp
mov
push
push
and
cmpsl
xchg
inc
daa
in
ret
sub
mov
jne
repz
pushl
fisubs
loopne
xchg
inc
mov
and
mov
mov
pushl
imul
mov
dec
sub
popa
cmp
popa
pop
lret
jle
dec
xchg
pop
ljmp
lahf
jp
push
das
unpckhps
scas
jne
xchg
mov
sbb
fcom
fs
incl
add
pushf
clc
jo
mov
mov
push
push
push
lods
add
push
mov
jae
dec
out
or
sti
sub
call
stos
ds
or
dec
or
scas
mov
cmp
xchg
pushf
sbb
sbb
adc
pushl
push
sbb
push
adc
mov
lods
adc
popa
mov
xlat
cmpsb
pop
imul
mov
pusha
pusha
jo
pop
shll
dec
lock
dec
mov
push
mov
loope
lcall
int
aaa
in
sub
std
add
jo
mov
pushl
or
int
jmp
sbb
pop
stos
mov
dec
lcall
jbe
jmp
fnstenv
inc
rclb
popf
inc
cmpsl
aas
pop
push
jecxz
or
repz
adc
sbb
jle
jb
out
lock
pop
pop
mov
and
imul
mov
insb
loop
decl
sbb
iret
sbbb
or
lods
sbb
xchg
xlat
lcall
fbstp
mov
inc
stc
inc
push
pop
sub
mov
mov
fildl
inc
cli
jnp
jae
pushf
push
push
addr16
enter
or
icebp
ljmp
xor
out
push
jns
cmp
jecxz
lcall
in
arpl
int
push
mov
xchg
pusha
jns
lea
mov
and
cmpsb
jmp
cmp
add
add
into
sub
push
out
cmp
decl
ja
xor
push
movsl
in
lods
and
and
decl
insl
hlt
adc
mov
mov
pop
push
inc
std
fmull
sbb
xor
xchg
lcall
xchg
add
lods
inc
cmp
sub
xchg
or
mov
repz
xchg
ljmp
add
cmc
pusha
int3
push
or
or
lret
data16
sti
inc
into
mov
bnd
jmp
pop
call
leave
or
sbbl
imull
jg
sti
pop
sub
mov
lcall
lea
adc
fists
pop
loopne
xchg
cmp
fidivrl
stos
sbb
or
fs
xchg
cmp
shr
mov
xor
mov
xor
mov
arpl
cli
cmp
dec
pop
ljmp
mov
pushl
or
sarb
inc
pop
jb
repnz
scas
adc
lcall
iret
jecxz
mov
dec
std
mov
or
loopne
jecxz
xchg
outsl
push
adc
inc
scas
jnp
sub
jmp
xor
rol
and
fmull
mov
or
mov
test
out
call
push
or
adc
loope
xlat
pop
add
jns
imul
lcall
in
jp
leave
xor
inc
jbe
mov
mov
jae
push
test
out
pusha
insl
sbb
inc
jl
pop
rcrl
stc
shlb
lods
arpl
cmp
pop
in
cli
cmp
call
sahf
ljmp
testb
out
jmp
mov
pushf
pop
xlat
push
test
add
xchg
pop
lock
call
add
fdivs
push
mov
outsb
mov
fisubs
testb
mov
push
cmp
in
inc
das
push
pop
ds
rcrb
mov
out
in
lods
dec
xchg
fsub
fldl
adc
xchg
add
inc
ljmp
mov
mov
lret
mov
int
lcall
js
mov
mov
rcrb
lds
je
sbb
xchg
mov
mov
and
or
adc
add
jmp
enter
lods
pushl
lret
pop
xor
fldenv
xchg
mov
and
inc
jge
mov
jge
lcall
xchg
ficompl
push
cltd
pop
inc
mov
sahf
sbb
call
dec
mov
std
xchg
mov
sbb
testl
push
test
imul
mov
jg
ljmp
jp
xorl
je
add
jo
mov
lahf
sub
call
add
mov
dec
pop
lahf
test
dec
push
adc
cmc
andl
mov
jmp
popa
jmp
push
les
adc
adc
idivl
es
push
loope
iret
xchg
xchg
and
shll
jmp
xchg
hlt
fnsetpm(287
fs
lahf
adc
pop
movsl
decl
xchg
incl
dec
cwtl
nop
in
add
pop
cmpsl
lds
je
push
in
mov
int
out
fwait
out
clc
jne
adc
lcall
sub
mov
cmpsb
sbbb
mov
adc
jno
lret
sbb
xor
push
mov
cli
mov
mov
jmp
data16
cmpsb
pop
pop
das
jmp
fimuls
lock
jae
cltd
orl
out
mov
pushl
call
ljmp
pop
mov
ficomps
or
je
wbinvd
aam
fisubrs
jmp
sysexit
or
push
scas
aad
cwtl
and
or
icebp
push
fsubs
in
jmp
adc
cmp
and
jg
push
andb
imul
fucomp
fisubl
or
fldl
in
mov
inc
test
imul
xchg
cmp
test
nop
or
and
mov
mov
iret
jl
inc
stc
je
sbb
pop
stos
std
push
cmp
dec
sbb
dec
push
jbe
decl
out
testl
mov
decl
sarb
and
loop
push
je
or
and
cmpsl
mov
and
in
dec
incl
icebp
xchg
or
pusha
loope
sub
int3
fcmovnb
fisttpll
cli
mov
jo
xchg
jg
cmc
stos
rcr
cmpl
adc
je
incl
jg
xchg
pop
punpckhwd
in
add
cmpsb
in
vpsubd
jns
inc
outsl
jge
mov
lcall
bound
aad
cltd
inc
push
aad
mov
cs
lods
jl
dec
dec
and
sub
decl
lcall
in
lods
dec
lods
pop
out
add
fcoml
mov
in
insb
cmpsl
jecxz
xlat
inc
call
and
inc
nop
push
movsb
dec
faddl
sub
out
sbb
dec
add
push
or
mov
xchg
add
cmp
in
daa
fs
jmp
icebp
mov
test
push
enter
mull
adc
frstpm(287
push
cmp
mov
mov
rcl
mov
lock
cmp
cs
cmp
jg
sbb
es
mov
mov
and
inc
lret
inc
xchg
xchg
fsub
xor
fists
xchg
popf
jl
add
dec
lahf
and
pop
push
test
sbb
in
mov
adc
sahf
xchg
cmpsb
adc
jbe
outsb
mov
mov
call
mov
test
cli
das
cwtl
push
adc
popf
dec
inc
test
adc
mov
pushl
xorl
pop
jo
jns
mov
mov
pop
mov
mov
add
push
sbb
scas
mov
lock
mov
sti
dec
int3
jg
xchg
mov
push
cmpsl
mov
pop
shlb
fwait
adc
pop
mov
in
sti
lret
cmc
dec
movsl
rep
leave
out
call
fnstenv
pop
pop
jbe
add
frstor
dec
mov
mov
mov
cld
lcall
or
push
xor
add
decl
lahf
jle
rcrl
test
hlt
lret
jne
mov
pop
test
fnstenv
call
dec
push
cmpl
inc
jle
stos
push
scas
jl
std
rcl
hlt
movsb
mov
mov
dec
filds
add
or
adc
and
mov
xchg
mov
lock
add
cmp
jns
rcr
push
iret
daa
mov
aas
repnz
mov
lcall
sbb
dec
data16
mov
pop
push
xor
mov
imul
loopne
call
std
dec
outsb
xor
inc
dec
xor
inc
cmpsb
insl
xor
add
mov
jns
lcall
into
fld
jbe
data16
lcall
pop
and
into
inc
adc
leave
sub
jg
pushl
mov
fstpt
mov
adc
ret
adc
sti
ficoms
or
jmp
push
sub
push
data16
stc
ss
sti
sahf
jecxz
lcall
subl
cmp
mov
shr
inc
test
outsl
or
and
mov
mov
inc
push
sub
cmp
mov
jno
sub
jmp
fdivrs
ljmp
movsl
jmp
inc
push
aad
adc
lds
cltd
xchg
cmp
push
stos
aaa
gs
pusha
mov
stc
mov
adc
push
jle
cli
pop
push
sar
scas
insb
xor
mov
lcall
mov
or
mov
mov
push
push
out
aas
xchg
lcall
pushl
inc
bound
cwtl
aam
data16
xlat
add
imulb
mov
cmp
stc
jecxz
dec
out
push
popa
xor
xor
inc
xchg
or
ret
adc
out
mov
add
mov
xor
adc
adc
cld
jle
mov
out
jnp
pushl
or
stos
add
or
cmpsl
lcall
push
cmpsb
jmp
scas
jg
les
cmp
rclb
push
xchg
dec
dec
jg
or
xchg
push
inc
mov
mov
call
loope
rol
cmpsb
imul
xchg
xor
pop
inc
mov
sbb
push
jnp
inc
mov
mov
mov
pop
xlat
jno
xchg
stc
pop
pushf
and
add
sub
jmp
jbe
sarb
div
mov
dec
rcr
jmp
xchg
xor
push
add
xchg
mov
scas
shll
call
ror
bound
lock
push
mov
mov
push
es
dec
test
outsl
or
decl
mov
mov
xlat
pop
cwtl
lods
dec
fdivr
popa
aaa
xchg
adc
ss
decl
leave
stos
xchg
les
sbb
push
sbb
lds
mov
stos
ljmp
jle
jge
ljmp
gs
fwait
and
movsl
jne
adcb
cwtl
sbb
or
push
enter
sub
lods
mov
push
jmp
cmpsl
pop
adc
mov
insb
popf
aad
jg
push
adc
mov
jnp
test
test
mov
nop
xchg
dec
jp
sti
mov
hlt
cwtl
sbb
cmp
out
xchg
mov
mov
test
movsb
fcmovbe
aam
jmp
paddusb
pop
lret
cmp
jo
add
stos
push
loopne
mov
fwait
aaa
mov
mov
ljmp
bound
inc
dec
and
inc
push
pop
in
pushf
or
and
gs
or
jg
pop
mov
jae
cwtl
outsl
aas
clc
je
aam
mov
stos
imul
je
and
imul
xchg
mov
xor
aas
das
es
jbe
test
push
scas
pop
call
jmp
inc
pop
inc
ror
daa
dec
in
rcrb
mov
mov
mov
mov
inc
pop
std
jmp
lea
push
mov
inc
stos
adc
pusha
cs
mov
cld
xor
mov
stos
jbe
fldenv
bound
fwait
adc
sbb
inc
and
fnstenv
mov
std
cmpsl
or
xchg
cmpsb
les
xchg
sub
and
lea
aad
decl
jno
inc
cli
dec
xor
data16
or
mov
fisubl
negl
cld
ljmp
enter
cmc
nop
inc
ja
dec
roll
push
pop
insb
in
idivl
sub
jg
jmp
jp
rorl
testb
mov
xor
sbbl
jge
call
fcomps
adc
lcall
push
mov
ret
loopne
test
cli
push
mov
add
incl
insb
scas
or
lahf
daa
lea
sahf
daa
cmp
ds
ja
movsb
in
and
mul
mov
mov
jne
pushf
mov
and
decl
cmc
add
ds
push
in
add
insb
mov
dec
hlt
lcall
jmp
or
stc
mov
nop
sbb
cmp
and
ljmp
testl
dec
mov
decl
stc
daa
cld
test
inc
ds
int3
mov
clc
mov
inc
push
xor
aaa
pop
lea
pop
call
fstsw
sbb
adc
xchg
mov
int3
popf
loopne
xchg
sbb
pop
lock
sbb
rolb
pop
rcll
mov
push
imull
pop
mov
jl
xor
add
push
inc
jle
dec
stos
inc
ret
hlt
cmpsb
mov
test
cmpsl
rorb
ljmp
sub
xor
push
stc
or
and
int
ret
cld
mov
call
fstps
mov
call
insl
add
cltd
xchg
lcall
jle
sbb
ljmp
lahf
sbb
sub
imul
js
push
or
sbb
movsb
jo
sub
call
cld
lret
mov
cmp
adc
fistpll
fdivrl
pop
lock
mov
add
lret
push
in
ljmp
jbe
sbb
call
xor
lret
filds
lahf
add
das
cmpsl
andb
mov
loopne
dec
pop
add
sti
adc
lock
insl
adcl
mov
or
and
cmp
mov
xor
rorb
mov
je
fwait
ret
xor
xchg
es
mov
ljmp
js
mov
lea
out
mov
je,pt
pop
jne
pusha
in
push
cmp
call
lock
test
mov
pop
cli
movsl
pop
outsb
jp
insb
mov
fstpl
addr16
mov
cltd
xor
fdivl
cli
mov
dec
inc
loopne
push
pop
adc
decb
outsb
in
call
xchg
insb
jo
lock
incl
xchg
out
imul
mov
insb
xchg
push
daa
inc
aaa
fsts
imul
add
inc
loope
and
sub
lret
pop
mov
out
jmp
push
adc
test
test
popf
das
outsb
pop
les
fsubr
mov
jecxz
fisttps
sub
sub
das
ja
enter
scas
push
dec
push
rolb
adc
enter
mov
repnz
inc
outsl
dec
int3
cmp
ljmp
push
ljmp
lea
or
xor
sti
lds
mov
mov
mov
test
jecxz
data16
aad
mov
fists
mov
jecxz
incb
int3
lods
lcall
adc
mov
pop
out
in
sbb
out
iret
push
jo
mov
dec
loop
xchg
hlt
das
fsubl
inc
idiv
cld
mov
mov
mov
dec
fs
mov
push
inc
icebp
in
cmpsl
or
push
imul
call
cld
push
inc
out
test
sub
mov
inc
or
data16
decl
sbb
push
push
popf
fwait
pop
push
xchg
mov
idivb
repz
mov
xor
test
incl
fs
es
push
sbb
sbb
xchg
mov
jmp
fisttpl
mov
jge
mov
dec
push
cltd
sub
dec
sbb
rcl
repz
fcompl
or
inc
cltd
push
push
cmp
add
sbb
mov
decl
adc
movntps
push
push
inc
imul
mov
jmp
cmpb
std
sbb
mov
data16
push
cmp
pop
mov
mov
stos
mov
das
repnz
or
adc
jmp
push
into
fcom
add
ljmp
mov
inc
loope
mov
cmpsl
pop
idivb
push
jmp
push
test
inc
pop
mulb
cmp
xor
push
push
add
repz
das
test
imul
ljmp
add
clc
cmp
inc
jo
movsb
clc
pop
pop
mov
int
stc
test
jmp
or
or
jno
cld
hlt
ljmp
jne
lahf
mov
dec
sub
adc
call
call
js
xor
pusha
mov
mov
js
sbbl
das
mov
sbb
outsl
push
jp
popf
hlt
fstpt
mov
icebp
lret
daa
and
push
sub
cs
ljmp
mov
hlt
jmp
push
xchg
test
es
cmp
aas
pop
and
stc
sbb
mov
call
pushf
mov
or
and
into
mov
cli
mov
les
sbb
fcomps
ret
in
faddp
dec
adc
cmpsl
xchg
xchg
jbe
inc
jne
mulb
ljmp
mov
pusha
sub
stos
shlb
sbb
aas
jle
pushl
push
pop
mov
and
xor
push
add
fnstenv
sbb
pop
inc
dec
mov
repz
idivl
movsl
iret
mov
jg
dec
cmc
mov
inc
in
mov
xor
mov
ja
popa
xchg
outsl
mov
shl
jg
cmp
lea
pop
mov
mov
push
xchg
in
ljmp
adc
test
sarl
push
daa
lods
mov
mov
sub
clc
incl
inc
jl
repz
iret
mov
cmpsb
decb
jbe
nop
push
inc
cltd
out
jmp
pop
fcompl
popa
rolb
mov
iret
mov
and
jnp
test
clc
jb
jecxz
repnz
stos
inc
xor
inc
push
mov
outsl
xchg
fs
or
cmp
xor
mov
xchg
pusha
or
push
insl
test
ljmp
jecxz
bnd
inc
pop
popw
xor
adc
std
adc
sbb
pop
imul
jmp
bound
icebp
test
adc
xor
je
and
mov
xchg
hlt
push
lcall
mov
xchg
fiadds
stc
je
or
jle
dec
adc
mov
arpl
inc
adc
dec
mov
add
rcll
sub
aaa
cltd
js
mov
jb
push
dec
mov
lcall
sub
aad
mov
sbb
enter
pop
lcall
nop
ldmxcsr
mov
adc
sbb
ss
cmp
xchg
pushl
pop
addr16
sbb
cs
test
lahf
jo
decl
xchg
add
sbb
test
or
push
dec
mov
cmp
dec
fs
decl
xchg
ja,pt
roll
push
mov
and
movsl
and
ljmp
ljmp
inc
or
push
divb
adc
repnz
mov
pop
adc
es
pop
push
mov
in
sahf
adc
xlat
jmp
or
push
fidivrs
test
xchg
icebp
jecxz
xchg
or
push
add
into
arpl
jg
out
or
xor
xor
cmpsb
ret
pop
adc
xor
xor
incl
iret
jbe
or
out
push
fcmovnbe
and
xchg
pop
mov
mov
jmp
std
xor
fmulp
int3
dec
jg
test
jge
dec
jb
pop
cmp
call
nop
dec
out
add
jmp
jg
in
out
push
push
push
iret
aaa
adc
cmc
or
mov
jae
subl
mov
das
pop
nop
test
and
push
or
out
push
jp
orl
loopne
mov
shr
pop
and
ret
jecxz
mov
sbb
sub
stc
add
mov
xchg
dec
js
call
sahf
cmp
int
lea
ret
cmp
scas
mov
jmp
dec
sbb
filds
pop
dec
or
test
mov
fs
cmp
ficomps
aaa
es
gs
lods
sti
dec
test
iret
inc
xor
mov
mov
pop
xor
push
sbb
je
sbb
cs
js
inc
ret
popa
sub
in
add
mov
cmpb
ljmp
lcall
xlat
mov
pop
xchg
in
or
fisttpll
inc
adc
add
cmp
dec
inc
lods
loopne
lds
and
lret
cmp
or
pop
std
jne
test
lahf
ljmp
decl
mov
inc
stos
dec
xor
shlb
push
dec
cmp
lahf
adc
es
jg
jmp
sub
jno
push
ret
pop
insl
mov
jge
add
paddusw
or
dec
pop
jo
pop
ret
cltd
adc
insb
lret
push
loop
cmpsb
lods
lock
pushl
xchg
jl
out
jp
mov
lret
push
inc
mov
add
ss
ds
lcall
xor
jo
inc
mov
pop
jns
mov
cmp
imul
nop
or
mov
aaa
pop
or
out
push
inc
in
jle
jl
insb
mov
cmp
or
fidivs
out
and
std
sbb
jge
decl
sub
mov
inc
test
sub
cld
or
mov
mov
or
xor
dec
xchg
mov
and
and
mov
bnd
pusha
add
decl
xor
shll
xchg
lods
sub
das
push
jmp
xor
adc
or
repz
xchg
sub
jge
pop
jl
ja
incl
adc
sti
insb
fs
mov
pushf
cwtl
icebp
icebp
mov
hlt
push
shll
sbb
popf
shr
sub
or
jmp
xor
dec
pusha
mov
push
sbb
jnp
js
cmpsl
repz
or
jmp
adc
add
repnz
mov
movsb
mov
lcall
pop
sub
adc
cmpsl
or
stos
aaa
mov
cmc
xchg
xchg
cwtl
cwtl
ljmp
pop
clc
cmp
adc
push
adc
sub
nop
aad
js
ss
jmp
sub
pop
xchg
jle
lock
aaa
in
je
adc
pop
lahf
pop
cmc
decl
xchg
inc
mov
insb
stc
sbb
jle
loop
mov
sar
xor
xchg
pusha
mov
pop
cmpsb
mov
mov
or
add
pusha
mov
cld
mov
and
push
add
mulb
out
and
fcomip
add
add
out
sbbb
sar
jmp
imul
sub
shlb
xor
xchg
mov
sbb
cmc
cmpsb
dec
flds
sub
das
je
jge
lds
mov
push
rol
inc
cwtl
inc
fs
stc
jmp
mov
or
xor
lds
dec
je
out
push
ds
outsb
inc
int3
sbb
stos
ljmp
out
mov
mov
cltd
dec
out
sar
inc
ror
mov
cmpl
mov
mov
cmp
lcall
cld
and
fstpl
sbb
pop
mov
outsl
clc
jg
jle
outsl
loope
mov
lahf
pop
dec
pop
clc
push
data16
push
js
pop
ljmp
std
pop
ret
add
jge
testl
std
jecxz
outsl
enter
xor
rcrl
incl
ret
xchg
fldenv
adc
jmp
and
push
pushf
cmp
jg
dec
sbb
or
repnz
lock
push
mov
bound
gs
lods
int3
pop
xor
cmc
jg
pushl
push
cltd
shlb
or
adc
fsubs
mov
mov
stc
xchg
leave
insl
add
test
mov
cwtl
sub
in
sub
fldt
cli
lcall
mov
adc
fsubr
sbb
sub
and
push
cmpsl
ror
lcall
cltd
loopne
inc
sub
xor
mov
xchg
es
mov
add
push
std
decl
cltd
mov
sbb
popa
mov
or
sub
fstpt
pushl
scas
popl
push
sub
mov
mov
decl
mov
and
aaa
lcall
subb
cwtl
dec
iret
call
in
pop
comiss
ljmp
je
xchg
inc
and
xchg
lods
pop
aad
or
mov
push
sbb
or
jmp
adc
adc
pop
or
xor
inc
js
insl
adc
xchg
hlt
sub
test
lea
jae
outsb
xlat
jmp
imul
lock
inc
adc
cltd
cmp
out
push
fldl
mov
mov
fbstp
jecxz
jmp
jmp
stos
sar
mov
push
xchg
sbb
fs
push
outsl
add
pop
loop
jg
pushl
out
test
jmp
pop
mov
out
xchg
cmp
call
shrb
icebp
xorb
fwait
addb
shlb
lock
jmp
lea
scas
ror
movsl
repz
jge
jge
mov
clc
push
aad
lods
ljmp
out
mull
push
inc
fs
daa
xchg
icebp
loope
push
adc
push
in
jae
pop
incl
sbbl
add
sar
call
and
mov
mov
ja
orl
mov
lods
sub
test
lret
fidivl
and
mov
mov
sub
mov
jl
cltd
dec
xor
mov
lods
ja
popa
adc
dec
and
and
pushf
into
inc
les
adc
nop
xchg
jl
cli
push
sub
cli
cmp
sbb
add
jmp
cmp
out
cwtl
imul
loop
adc
mov
mov
push
and
jbe
xor
xchg
mov
shll
test
lcall
ds
ds
dec
in
imul
jmp
lahf
sbbl
loop
add
mov
lahf
sbb
push
xchg
loope
sub
ja
stos
pushl
mov
je
enter
inc
faddl
insb
inc
cmp
mov
fcomps
pop
das
insl
aaa
gs
jecxz
mov
outsl
pushf
jge
decl
sbb
adc
notb
pop
push
iret
leave
lret
das
push
test
add
icebp
cmp
mov
sbb
jp
mov
mov
jne
jg
inc
daa
out
decl
in
push
sbb
nop
shll
fidivrl
pushf
cmc
arpl
mov
ficoml
mov
insl
fadd
mov
and
xor
inc
pushf
jne
cmp
frstor
sbb
mov
mov
scas
cmp
and
call
imul
shll
mov
xchg
out
mov
fwait
imul
lahf
xchg
orb
push
fadds
xchg
push
push
xor
cwtl
push
add
dec
jp
dec
addr16
jg
sub
xchg
cmpsl
jge
pop
push
sub
pop
fstpl
lcall
shll
push
jp
lret
fs
lahf
lret
repz
mov
pop
jle
push
mov
cmpsb
pop
sub
mov
mov
mov
fstpl
mov
ret
insb
xchg
jno
in
cli
decl
fstps
cmp
movsl
fs
aaa
stos
jo
out
jg
add
sbb
dec
adc
sub
mov
or
aam
push
add
cmp
pop
pcmpgtb
jne
dec
jb
out
push
ds
mov
mov
sahf
fisubl
iret
movsb
mov
dec
dec
xlat
stos
incl
mov
xchg
je
sub
or
out
and
std
shrb
out
inc
sar
pushl
sub
sub
lret
dec
gs
subl
and
xor
mov
xchg
lret
pop
pop
es
adc
sub
mov
inc
ret
mov
jg
decl
adc
add
sub
out
ficomps
dec
adc
lahf
nop
call
xchg
and
ljmp
test
sbb
xor
ds
rorl
push
mov
xchg
in
dec
inc
ljmp
js
test
imul
sub
pop
pop
rolb
daa
popf
inc
pop
jmp
pop
je
inc
and
sbb
pop
add
pop
dec
adc
push
xor
je
adc
icebp
mov
in
xor
lahf
incl
cmpsb
push
rol
je
and
dec
scas
mov
jl
cmp
ss
call
sbb
rcll
or
orb
dec
xchg
lret
xchg
inc
xchg
pop
loopne
mov
ficoms
lahf
int
lods
add
hlt
or
push
out
and
pop
cmp
scas
loop
mov
cltd
rcl
jmp
lcall
pop
push
rcll
out
iret
jge
insb
icebp
clc
jne
ja
xor
movsl
or
mov
or
test
add
mov
out
mov
js
cmp
xchg
sbb
int3
in
incl
adc
mov
ljmp
dec
inc
mov
es
push
js
ljmp
push
xor
aad
insb
movsb
or
adc
dec
addr16
pop
mov
leave
adc
call
imul
aaa
cld
dec
clc
mov
adc
jno
push
jne
push
xchg
lcall
add
daa
push
xchg
ss
jmp
xchg
imul
lret
pop
add
and
jbe,pt
and
ja
dec
pop
push
pushf
cmp
add
das
aad
mov
jb
push
sbb
or
mov
push
mov
add
sbb
es
pop
pushf
cmp
xchg
cmp
xchg
loope
adc
dec
leave
push
lahf
adc
mov
shlb
jmp
cmp
cmp
addl
les
sahf
sbb
arpl
ljmp
and
out
popf
arpl
incl
sbb
add
fwait
out
xlat
push
jo
pushf
mov
call
ja
repz
fistps
loop
dec
ret
leave
ret
adc
mov
stc
sbb
fsubrl
inc
iret
or
and
cmp
js
xchg
int
insb
cld
or
int
push
xchg
mov
jg
incl
clc
adc
in
ds
lret
push
outsb
shrb
aas
repz
sbb
sti
jmp
xor
mov
mov
in
mov
inc
inc
xchg
scas
jge
cli
push
cwtl
xor
test
imul
lock
mov
daa
mov
sub
xor
jnp
shlb
fiadds
testb
jbe
enter
inc
in
or
dec
cltd
imul
clc
xor
outsb
dec
push
fisttps
and
pop
jg
pop
cmp
push
xchg
or
jmp
pop
in
je
int
and
xor
cmp
push
sbb
lods
mov
cmc
jbe
out
adc
decl
push
cltd
pop
aam
mov
mov
cs
adc
sbb
pop
test
nop
inc
loope
gs
aas
ret
ja
sub
xchg
fmuls
mov
fldcw
pop
rclb
addb
addr16
sub
or
and
clc
pushl
out
pop
je
fldl
fwait
push
cmp
mov
fsubrs
adc
out
das
and
pop
jp
xor
incl
inc
xchg
repnz
imul
sbb
xchg
inc
mov
sub
inc
cmp
call
gs
sub
pop
and
out
incl
mov
add
dec
leave
inc
xchg
insb
stc
popa
in
sbb
xlat
and
mov
bound
std
decl
inc
xchg
test
stc
lcall
mov
sbb
xchg
into
ljmp
mov
out
lcall
insb
sub
sub
in
dec
ss
dec
aad
dec
lock
adc
mov
sub
aaa
push
xchg
into
xor
jg
cltd
mov
fiadds
testb
mov
jae
mov
sub
jle
insb
mov
adc
sub
cmpsl
popf
or
lea
lcall
outsb
push
into
adc
or
mov
xor
adc
jb
pop
and
decl
mov
mov
outsl
test
adc
inc
inc
or
or
in
sbb
lcall
test
dec
out
pop
or
aad
pop
bt
je
xchg
mov
aaa
ljmp
adc
cli
or
xchg
test
mov
arpl
test
pop
mov
mov
inc
jecxz
mov
pushl
and
push
mov
clc
pop
scas
sbb
pop
or
adc
xlat
add
sub
pop
popf
or
adc
sar
pop
dec
sub
cmpsl
add
xchg
dec
jecxz
jbe
decl
dec
sbb
mov
std
jne
filds
add
push
xchg
add
nop
lret
cmpsl
adc
sub
xor
and
fisubs
sbb
push
adc
adc
jl
je
into
cmp
or
cmovae
pushl
fbld
push
ret
push
mov
jo
rorl
mov
test
pushl
cs
mov
leave
cmp
xchg
and
test
sbb
shl
pushl
jae
pop
lcall
cmp
mov
and
or
decl
adc
outsb
pop
cwtl
push
jb
cmp
insb
sbb
xchg
jecxz
xchg
mov
mov
fucomp
filds
xor
xchg
out
pop
push
xchg
adc
xchg
out
sahf
aam
setb
add
mov
or
mov
out
cmp
or
or
lcall
fcomp
sahf
lds
aas
pop
les
mov
mov
mov
cmp
fidivrl
push
add
sub
pushl
std
lretw
lds
fidivrs
pop
stos
and
mov
jo
dec
or
xchg
les
in
nop
add
iret
and
jecxz
xchg
test
test
incl
stos
push
jge
aam
add
aad
jg
push
mov
movsl
adc
inc
out
test
call
mov
inc
aas
dec
jge
fwait
imul
cmp
cmpsb
xorl
mov
add
lret
inc
jae
test
adc
cwtl
fs
jge
ljmp
add
lret
mov
ret
aas
test
incl
xchg
pop
push
push
inc
imul
pop
mov
fstps
cmp
popf
inc
dec
jmp
movsl
xor
push
in
cmp
rolb
insl
fs
imul
or
push
in
xchg
test
adc
lds
loop
shr
mov
jg
push
sarb
lcall
lea
sub
and
call
push
lahf
clc
add
cmc
mov
test
xor
in
negl
sbb
cmp
or
enter
imul
pop
and
cmp
loope
mov
jmp
jmp
or
pop
xchg
pop
and
jge
mov
iret
sbb
movsb
cs
mov
loopne
ds
imul
icebp
pop
bound
cmp
adc
push
fs
testb
and
inc
rcl
je,pt
out
aam
insl
sbb
bnd
out
hlt
push
enter
jl
fcompl
in
xor
std
inc
xorl
dec
loopne
lea
in
popl
or
sbb
pop
int
scas
cmp
push
or
cwtl
xor
call
inc
or
ficomps
aam
dec
or
ss
dec
out
mov
ret
call
arpl
fisubl
push
aaa
jno
adc
adc
ficomps
lods
add
xchg
push
adc
cmp
xor
sbb
jecxz
push
cwtl
push
mov
das
add
sub
and
cmp
push
push
ja
push
gs
xor
fimuls
push
pop
lret
push
sbb
pop
js
outsl
mov
jmp
push
dec
xchg
lret
sub
nop
jle
pop
rcl
std
test
add
pushl
dec
test
and
lea
inc
xchg
sbb
flds
dec
in
push
push
ljmp
stos
cmp
pop
loop
sub
inc
rcrb
dec
enter
inc
jo
cli
decl
in
xchg
call
leave
rorl
scas
jnp
mov
test
xchg
pop
pop
xchg
imul
leave
aam
jmp
push
mov
jl
xchg
or
adc
xchg
cli
adc
fidivs
push
dec
mov
cmp
dec
aaa
jecxz
out
dec
enter
es
jg
push
popa
adc
cld
daa
jp
pushf
shrl
mov
icebp
pop
sub
ss
adc
mov
repnz
jg
cmp
idivb
lret
xor
jo
xchg
int3
repnz
outsb
xchg
jnp
aam
pop
mov
call
push
pop
mov
bound
je
shll
pusha
aas
loop
dec
cld
mov
sub
jne
movsl
sbb
push
mov
icebp
adc
ja
int3
inc
add
xor
push
xchg
test
outsb
stos
cli
dec
inc
or
ljmp
in
repnz
mov
cmp
xchg
and
fcmove
loop
cld
call
mov
jge
cmp
out
xchg
mov
xchg
out
xchg
cli
in
inc
into
in
cs
dec
inc
jg
or
sbb
add
or
lret
pushl
jl
inc
js
ret
fs
xor
aas
sbb
sar
ljmp
lea
cmp
imul
les
movsb
adc
jbe
loope
jle
sbb
enter
lods
inc
or
inc
push
rcr
sbb
outsb
inc
adc
imul
pop
pop
out
subl
call
cmp
mov
int3
mov
imul
sbb
jmp
movsb
cwtl
dec
negl
xchg
repnz
dec
inc
sti
add
mov
add
mov
inc
ja
mov
shrl
fwait
xchg
hlt
sbb
mov
loopne
jb,pt
into
jo
movsb
stos
cmp
pop
andl
dec
js
mov
fwait
imul
inc
jl
cmpsb
inc
pop
ljmp
call
pop
jmp
test
dec
dec
mov
push
add
pop
out
xchg
and
and
loope
incl
popf
xchg
aas
sub
push
js
push
xor
mov
imul
xor
popa
cmp
lcall
icebp
imul
dec
cltd
bnd
out
cmpsl
sarl
sbbl
mov
push
dec
push
nop
cmp
stos
or
sbb
popa
add
icebp
dec
pop
scas
loope
jecxz
mov
mov
daa
sahf
dec
outsb
out
pop
xlat
push
jp
hlt
pop
cmpsb
ss
push
sbb
dec
and
cmp
fistps
lcall
and
pop
mov
add
dec
push
and
cmp
mov
jmp
out
sti
sarl
lret
lret
mov
pop
mov
movb
fdecstp
cmc
std
incl
outsb
mov
js
or
adc
cmp
cld
add
mov
test
cmc
jmp
andl
jmp
lcall
push
and
pop
cmp
out
loop
mov
mov
call
out
add
pop
lock
repnz
inc
ret
test
xor
sub
jbe
push
jo
pop
xchg
fcomip
lds
imul
mov
or
pop
jle
mov
ljmp
test
out
sub
dec
arpl
lret
add
jb
jg
jmp
nop
pop
push
add
clc
call
add
test
sti
js
std
ljmp
xchg
pop
dec
jmp
ja
out
jo
mov
xchg
adc
cmc
pop
or
push
xchg
jmp
js
aam
pop
into
add
pushf
les
jo
cld
mov
mov
cwtl
add
sbb
imul
jmp
pop
hlt
jmp
ja
mov
push
cmp
lret
cmp
push
dec
adc
jmp
mov
stos
les
cmp
sbb
out
lcall
mov
or
jmp
jl
aas
push
rol
xchg
mov
imul
push
stos
jp
push
adc
into
popa
ret
les
jmp
insb
xor
sbb
dec
fnstsw
roll
push
test
es
into
cmp
decl
into
mov
data16
mov
push
add
aad
push
and
push
dec
cltd
cli
fdivrl
adc
xor
jle
mov
mov
cmp
cld
xlat
jp
out
in
popa
js
dec
xchg
jmp
cmp
jbe
icebp
js
popf
std
lods
out
jg
sarb
dec
or
add
loope
mov
xor
ljmp
pushf
pusha
in
nop
inc
jns
mov
out
mov
xor
jl
cmc
fcmovu
add
lahf
push
jge
call
js
int
jle
inc
jo
mov
out
mov
and
mov
call
pop
dec
mov
jmp
push
cwtl
sbb
xchg
mov
jb
push
out
lods
test
ja
adc
incl
xlat
xchg
cmc
adc
gs
push
ret
cmp
rcll
out
push
adc
add
pop
push
cmp
scas
test
xor
mov
mov
fdivr
int
xchg
ljmp
ljmp
int3
xlat
sub
cs
xchg
in
adc
fld
cmc
pop
jg
les
adcb
push
ljmp
sub
adc
dec
inc
sub
sub
xor
lcall
mov
and
or
sub
mov
pop
inc
bound
push
jbe
cmp
push
push
rep
leave
xor
cmpsb
in
mov
lahf
dec
push
fs
lcall
in
hlt
test
repz
pop
xor
cmp
lcall
rorb
jge
pop
cmp
or
idivb
xchg
hlt
push
inc
or
dec
mov
xorl
int
jl
ljmp
or
sbb
dec
or
cli
jnp
sub
add
shll
xor
popa
jg
pushl
rcrb
mov
xor
dec
mov
out
hlt
jle
xor
outsb
decl
inc
cmp
sub
push
xor
cmp
jmp
lea
jl
mov
pop
stc
jg
sbb
jno
adc
xadd
icebp
lcall
in
jns
add
xchg
dec
addr16
fldcw
aad
xor
sarl
mov
shl
mov
mov
in
push
pop
outsl
test
mov
incl
push
repnz
out
scas
xchg
or
jg
push
sub
add
pop
mov
imul
ja
in
inc
call
add
stos
es
mov
incl
mov
outsb
data16
cmp
fistps
lret
xor
push
in
cmp
lock
jno
in
das
cli
mov
js
js
xchg
push
hlt
jae
sub
ret
mov
mov
pop
adc
adc
push
push
repnz
pop
popf
sbb
mov
decl
jp
mov
pop
mov
mov
rcl
aaa
xor
int
mov
out
out
clc
incl
mov
xor
jae
test
adc
mov
inc
add
pop
sub
test
jecxz
lret
jmp
andb
test
aaa
pop
lret
pop
sahf
push
mov
adc
xor
push
xchg
dec
lods
sub
add
stos
jae
data16
pushf
movsb
push
mov
adc
fmulp
jmp
aam
or
cmp
incl
add
rcrb
xchg
mov
iret
mov
xor
decl
adc
jmp
repz
add
dec
and
gs
insb
fwait
addr16
fstl
das
add
test
xchg
xchg
stc
loop
and
adcl
cmp
mov
movsb
mov
and
mov
inc
push
xchg
cmpsb
fwait
xchg
add
shll
jmp
xor
push
sub
call
dec
ss
sbb
enter
popf
push
pushf
or
jmp
es
sbb
outsb
stos
and
push
popf
neg
push
cmp
add
out
decl
inc
dec
adc
jns
push
sub
xchg
jbe
inc
gs
std
jge
mov
and
lcall
xor
ds
xor
mov
hlt
cmp
mov
loopne
jmp
test
mov
dec
xor
fwait
iret
lcall
decb
std
mov
iret
inc
lods
imul
mov
push
jb
jecxz
hlt
pop
mov
sbb
or
sar
shl
xor
out
pusha
mov
inc
fsubs
ret
dec
aas
pop
xchg
loopne
into
leave
sbb
jnp
push
inc
insb
sbb
dec
ljmp
jns
loopne
and
cli
xchg
sbb
rcrb
add
cltd
leave
and
add
cli
lcall
out
fisubs
sbb
jnp
jl
rcrb
fnsave
pushl
or
push
jne
leave
push
rcl
push
test
frstor
add
rorb
pop
and
ljmp
outsb
sub
neg
cmp
xorb
ds
rcrb
adc
repz
ret
jl
push
push
fadds
insb
dec
and
call
cld
or
push
sbb
mov
cmpb
xorl
jmp
pushl
sbb
testl
cwtl
sbb
lods
inc
mov
cmpsl
sti
mov
cmp
decl
dec
aad
mov
into
push
rclb
jmp
loop
cmp
jmp
scas
push
fists
xchg
pop
mov
out
cltd
rorl
xor
xor
dec
lret
shrl
outsb
out
sbb
lock
pop
bound
cmp
cmc
movsb
mov
je
xchg
sub
push
add
sbb
pushl
rcll
ffree
aaa
out
mov
addr16
sub
loop
or
jg
addl
xchg
jne
in
cmp
dec
call
lcall
repnz
ror
jae
push
dec
sub
pop
xchg
and
loope
test
fidivs
pop
arpl
mov
push
icebp
adc
cmpsb
jmp
pop
je
cltd
cs
and
ljmp
cmpb
add
push
add
add
and
out
xchg
jp
fdiv
sarl
fcomps
fildll
movl
rcr
lcall
inc
sar
mov
push
je
cmp
es
or
jbe
lcall
ja
add
pop
stos
jmp
rclb
inc
cmovb
jecxz
sub
fistps
lods
xor
jmp
icebp
mov
ss
rcrb
movsl
lret
push
call
bsr
adc
sti
cltd
cmp
add
jae,pn
pop
stos
movsl
mov
and
pop
ljmp
mov
pop
popf
mov
cmpsb
push
pusha
jle
and
das
sub
call
dec
xor
lret
push
femms
sub
mov
xor
rcrl
decl
cmp
imul
xor
push
cmp
mov
pop
dec
cwtl
push
shlb
std
mov
lcall
push
imul
add
idiv
test
mov
xchg
pop
push
cmc
out
scas
in
fwait
mov
mov
push
movl
call
jno
sbb
aad
roll
pmaddwd
movsb
test
jg
into
neg
mov
out
cli
jg
inc
jmp
loopne
insb
or
or
push
imul
pop
adc
lcall
call
int3
movsb
popf
scas
stc
push
xchg
and
sahf
jae
xchg
jae
push
add
call
mov
jmp
mov
inc
pop
std
outsb
ljmp
push
push
icebp
pop
add
mov
hlt
add
xchg
hlt
aad
mov
call
push
ret
and
cmp
push
xchg
nop
les
mov
cmp
mov
and
pop
insl
sub
cmpsl
sub
insb
cmp
add
ljmp
jne
bswap
insb
inc
aas
lahf
or
push
les
mov
je
ljmp
add
idivl
sbb
add
xor
jnp
add
pop
std
dec
es
ret
pop
aaa
pop
incb
dec
mov
scas
mov
pop
cmp
push
xor
push
ja
lock
sub
nop
shlb
imul
add
jmp
mov
daa
inc
push
or
cmp
andl
push
jle
or
stos
mov
leave
sbb
push
dec
pushf
cmp
mov
xchg
ret
mov
ret
adcb
popa
repnz
push
mov
popa
push
pop
sarl
cmp
cmp
mov
clc
fdivs
adc
cltd
push
pop
imul
sbb
aad
movsl
push
jecxz
pusha
js
cwtl
stc
sbb
cmpl
rcll
fwait
in
lret
fldt
sbb
inc
add
or
stc
subl
and
push
pop
dec
cmp
in
hlt
dec
fnstcw
jbe
out
mov
sbb
cmp
push
inc
stos
push
popa
cmp
imul
insl
mov
pushl
and
mov
adc
sub
into
xor
nop
fisubs
mov
pushf
outsl
cmp
jae
jmp
sub
push
and
push
add
pop
push
mov
or
daa
fisubrs
jg
pushl
enter
ss
hlt
cld
push
lods
aas
or
test
lods
call
in
dec
ljmp
rclb
lds
mov
imul
push
mov
dec
out
sarl
mov
push
sbb
loop
aad
lock
or
ficomps
and
jmp
sahf
in
call
adc
sahf
loopne
sbb
cmp
and
push
andb
xor
xchg
movsb
inc
loop
push
jb
out
sahf
pop
fildll
mov
mov
loopne
int3
cmp
cmp
ficoms
sub
cmp
data16
out
arpl
sub
daa
es
cltd
in
je
test
xchg
scas
cli
jno
imul
sub
push
mov
sub
lcall
pop
xchg
data16
sub
ss
into
jp
and
les
lcall
lea
das
and
addr16
sub
outsl
push
mov
mov
xor
popf
push
mov
cs
jecxz
add
repnz
xchg
fwait
jle
hlt
xorb
mov
jl
jmp
cmc
xor
adc
jnp
mov
scas
cmpsb
mov
pusha
divl
pop
adc
cltd
jns
cmp
call
jno
mov
sahf
mov
in
pop
jbe
in
xorl
mov
mov
mov
jbe
aam
xor
repnz
inc
and
sbb
in
pushl
ss
adc
icebp
dec
movsb
mov
stos
push
test
inc
shlb
jmp
or
js
pop
xchg
and
sbb
jg
in
mov
dec
cmp
and
xor
dec
das
enter
out
movsb
push
jge
xchg
incl
fs
in
cmp
push
sbb
push
sbb
addr16
mov
inc
jl
cmp
pop
pop
in
xor
movsl
inc
cmpsb
imul
lods
cwtl
out
shrb
cmpsl
mov
scas
mov
push
lret
cmp
cwtl
arpl
ljmp
jmp
mov
hlt
jae
push
cmp
adc
lcall
push
cmp
and
jmp
pop
sbb
mov
adc
or
sub
in
dec
inc
lcall
decb
out
js
adc
jmp
mov
push
xor
cmp
jmp
imul
ret
mov
mov
test
sub
jmp
dec
orb
test
pop
das
push
mov
sbb
mov
sub
incl
stc
push
lcall
sub
stos
push
dec
jmp
or
pop
mov
andb
dec
test
adc
sub
fisttpl
mov
mov
add
mov
mov
lcall
adc
lods
and
int
ja
jecxz
addr16
int
fcomps
test
ljmp
mov
fwait
push
pop
shlb
bound
pusha
sbb
sti
mov
decl
fmuls
xor
or
sub
dec
movsl
mov
xchg
cmp
out
push
in
dec
outsl
jne
shlb
out
jns
push
fidivs
jb
dec
ds
lods
sbb
nop
mov
mov
js
or
test
pop
dec
lcall
pop
neg
sahf
push
test
std
repnz
add
jo
pop
dec
xchg
cld
sar
pushl
lret
call
xor
mov
cmpb
and
imul
pop
incl
jbe
sbb
push
inc
sbb
into
fmuls
push
sub
add
mov
stos
push
cmp
lods
ja
outsl
adc
sbb
adc
int3
and
stos
addr16
lcall
pop
pop
or
icebp
movsb
xor
jbe
inc
sti
pop
mov
fisttpll
pushl
lret
mov
inc
stc
push
jne
testb
nop
daa
fcompl
push
xchg
notb
cmp
test
xchg
add
clc
jmp
mov
notb
sbb
lcall
jb
pop
call
sub
imull
call
jno
pushl
jmp
xlat
iret
mov
mov
shrb
push
sbb
pushl
std
xchg
rcrl
ficomps
shl
aam
cmp
jp
cmp
decl
rcll
lods
add
int
fistpl
or
jecxz
jg
sub
ss
mov
outsl
adc
jae
xchg
pop
popf
f2xm1
imul
out
cmpsl
aam
fisubl
pushl
int3
aam
loope
inc
and
movsl
dec
shlb
jae
ja
fs
test
imul
cld
inc
rcrb
es
fstl
cli
pop
call
xchg
mov
push
mov
pop
loopne
ret
les
sbb
mov
cmp
inc
fcmovu
dec
push
out
std
adc
stos
or
mov
outsb
jmp
mov
jp
push
ret
lcall
mov
fimuls
scas
scas
adc
imul
jmp
xchg
xchg
imul
jno
lods
dec
or
add
push
leave
cmpb
orb
incl
inc
leave
xchg
cmp
shl
cltd
or
fmulp
subb
fwait
add
decl
and
in
mov
fldl
aaa
fisttpll
ficoml
fxtract
test
aaa
mov
in
or
push
sbb
dec
int
dec
sub
lret
pop
add
xchg
cltd
loopne
inc
std
ljmp
into
leave
mov
fidivl
and
jmp
dec
dec
sbb
mov
aam
xchg
decl
jnp
movsb
in
cmp
xchg
xlat
sub
dec
sbb
sti
scas
incl
mov
imul
inc
push
sbb
sbb
out
sbb
hlt
mov
mov
test
sbb
incl
stc
mov
in
adc
fdivs
xchg
pop
xchg
xchg
sbb
test
pop
das
repz
pop
bound
xchg
inc
fs
out
call
cltd
inc
fs
jle
fs
add
pop
in
or
stos
imul
pushl
addr16
loop
notl
imul
aas
outsl
mov
jno
pop
clc
push
bound
sub
adc
ds
and
out
outsl
and
into
mov
lds
mov
fstps
jnp
lods
mov
jmp
pushl
aas
fcos
loopne
js
lcall
sub
es
dec
decl
cld
mov
inc
and
in
lods
iret
and
lret
icebp
push
imul
push
xor
dec
inc
jl
pop
repz
test
decl
leave
inc
dec
mov
sbb
sub
loop
fcomip
push
inc
shrb
xor
add
testb
hlt
into
cwtl
pop
push
shlb
mov
pop
adc
adc
mov
decl
imul
pop
pop
dec
cmp
pop
jmp
pop
adc
sti
sub
cmp
ret
adc
out
jg
mov
out
sbb
sbb
cmp
out
std
jg
and
sbb
mov
sbb
daa
xchg
push
mov
adc
ret
jmp
je
jg
jmp
push
mov
or
mov
mov
in
fistpl
xchg
pop
lcall
pop
jo
ret
fsubr
ret
mov
repz
clc
jne
mov
loop
and
mov
xchg
sbb
out
cli
ljmp
sub
jbe
pop
nop
xor
mov
add
dec
jge
out
cmp
call
push
icebp
fnstcw
iret
or
or
add
insl
adc
sarb
insb
rorb
call
ficompl
xor
cli
mov
cmp
mov
jne
fisttpl
mov
inc
pusha
adc
test
enter
fs
jle
dec
gs
xchg
ljmp
mov
in
sbb
or
inc
call
and
sbb
imul
and
cmp
call
sub
lret
pop
scas
mov
sub
sbb
add
in
sbb
mov
fimuls
xchg
sub
out
cmp
bsr
scas
aam
imul
jg
jl
push
imul
fnsave
cmp
es
or
sti
mov
loop
pop
sub
jg
dec
iret
inc
loop
and
jnp,pn
cwtl
jno,pt
ror
pop
loope
dec
mov
jnp
cmp
mov
mov
aas
xor
mov
icebp
jmp
fistpll
mov
mov
incl
jae
loop
insb
outsl
cmp
xor
mov
vpand
decl
push
dec
arpl
dec
sub
and
or
push
push
pop
jmp
inc
push
pushf
or
in
movsb
add
dec
pop
mov
adc
pop
je
pop
mov
pushl
and
pop
xor
xorl
iret
lahf
sub
mov
mov
sub
incl
cmp
outsl
hlt
pusha
call
daa
mov
mov
sub
jae
sub
mov
aas
mov
shr
xor
adc
and
cmp
loop
decl
ja
sub
adc
push
xchg
ret
xchg
outsl
dec
leave
jae
repnz
mov
pop
cwtl
cld
mov
xchg
roll
add
dec
subl
je
mov
inc
std
pop
insb
shrb
mov
fsubrl
sub
test
pushl
imul
mov
jecxz
jno
popf
sbb
xchg
repz
cmp
ljmp
imul
sub
mov
and
ret
ret
mov
jmp
mov
sbb
mov
sti
push
push
xlat
orb
pop
xor
aad
cmp
repz
xchg
push
sbb
add
imul
dec
jmp
pop
call
rol
movsl
lcall
or
out
call
dec
mov
inc
mov
sub
cli
icebp
adc
pop
clc
sbb
mov
clc
jo
pushf
mov
or
add
inc
xor
mov
sbb
jbe
push
xlat
popf
pop
addr16
leave
push
cmpb
mov
js
lods
jns
mov
lcall
call
and
add
test
dec
xor
push
jg
decl
daa
dec
xchg
mov
lahf
or
cmpb
xor
xchg
pushl
lret
ljmp
and
ss
mov
aam
out
sub
sbb
pop
sub
sbb
das
divb
dec
clc
int
push
lock
xchg
adc
inc
dec
push
mov
adc
or
mov
mov
jmp
dec
jne
dec
pop
add
adc
xor
incl
int
std
clc
push
push
cmp
call
push
lahf
jmp
jge
in
jnp
sub
jle
mov
fmull
mov
stos
push
inc
ficoml
rorw
inc
or
xchg
and
lcall
rcrl
pushl
jp
sbb
gs
fldenv
cs
shlb
icebp
lcall
inc
ffreep
add
sbb
add
insb
push
in
mov
pop
incl
cld
icebp
test
imul
lret
xchg
jecxz
pop
cmp
fdivrp
sub
dec
jbe
aaa
std
jmp
ret
sub
jp
and
stos
icebp
xchg
push
adc
outsl
movsb
hlt
pop
inc
loop
div
dec
xor
pop
enter
call
jmp
pop
testl
cwtd
stos
push
pushf
cmp
jp
jl
sbb
mov
gs
cmp
cwtl
cli
sub
mov
pop
jmp
call
sahf
jle
in
dec
pop
push
fisubrs
loope
cld
cmp
je
or
ret
and
popf
or
push
pop
scas
inc
jp
cmp
cmpsl
jle
ljmp
dec
sbb
mov
outsb
inc
data16
cmpsb
daa
mov
lret
nop
inc
ficoml
jo
xchg
call
mov
das
push
jae
dec
add
push
test
sub
pop
mov
jmp
pop
dec
pushf
in
outsl
jg
pop
adc
xor
add
mov
xchg
sub
jae
cmc
lea
jno
jbe
jp
loop
dec
and
mov
xchg
xlat
sub
push
imul
mov
stos
jl
into
ljmp
call
jmp
sbb
dec
add
push
sbb
dec
lea
icebp
push
xchg
movsl
inc
jg
test
dec
and
jno
jbe
imul
stos
ja
call
rcrb
pop
dec
xchg
mov
mov
push
pop
xchg
jo
bound
lock
inc
test
mov
cmp
or
sbb
dec
leave
pop
in
out
pop
pop
sbb
test
lods
cld
push
jg
pushl
sti
inc
mov
mov
dec
lret
xchg
test
pop
sar
ljmp
pushf
mov
pop
test
out
sub
mov
push
cld
cwtl
inc
sar
jg
push
inc
dec
shl
inc
mov
ficompl
stc
sarl
in
pop
adc
ja
push
popa
cmp
jb
in
ljmp
dec
stos
clc
sbb
or
mul
inc
and
xlat
inc
ss
mov
fiaddl
aad
call
es
fxch
sub
pushf
and
rcrl
enter
adc
cmp
push
imul
jp
xor
stos
popa
pop
jae
fistpll
mov
pop
cmp
ret
rorb
xchg
lret
pushl
xchg
or
cmp
lds
lret
pusha
mov
cli
loope
call
inc
sub
adc
rclb
testl
jecxz
arpl
addr16
jno
xchg
lea
or
in
cmpsl
jge
repz
jle
inc
not
xchg
pop
cmp
or
xchg
loopne
ret
mov
incl
lret
mov
and
mov
sub
pop
add
jo
jg
pop
xchg
jg
xchg
lret
sub
cmp
or
sti
mov
sbb
push
repnz
lcall
rep
and
add
ss
mov
lret
shll
fs
sti
dec
lcall
sub
shl
or
out
scas
xor
adc
mov
sbb
sub
lds
dec
pop
test
xchg
insb
mov
mov
adc
mov
subb
stos
lahf
mov
fcomi
popf
test
jnp
in
cmp
loop
popf
out
push
or
xchg
je
jg
cmp
mov
jl
dec
ret
cli
cs
mov
jge
ret
outsl
emms
fmull
ljmp
dec
and
iret
or
popa
ficoms
and
cmp
mov
and
cmpsb
xor
arpl
int
push
rcll
or
dec
pop
call
cld
push
dec
mov
daa
and
js
mov
dec
dec
inc
shr
jp
pushl
std
dec
dec
and
nop
adc
lods
push
negl
and
and
push
push
cmp
enter
dec
lahf
or
lret
mov
xor
mov
test
cmp
jecxz
mov
lahf
idiv
ljmp
xor
aad
mov
push
add
popf
push
lods
outsl
lock
push
lods
stos
in
sar
pushl
mov
insb
mov
arpl
xor
jmp
xorl
push
jp
jge
scas
jmp
dec
stos
les
jle
stc
mov
das
cli
jle
adc
clc
sub
cmp
jnp
stos
push
mov
adc
mov
das
xchg
enter
mov
or
nop
jle
test
dec
lcall
push
jecxz
jmp
and
mov
mov
push
loopne
jecxz
jns
enter
mov
ret
mov
fldl
push
mov
xchg
mov
dec
pushf
gs
and
dec
mov
lods
mov
sub
pushl
cld
mov
mov
inc
mov
shr
xorb
aad
jo
add
inc
add
dec
cmp
or
push
mov
incl
sbb
das
clc
fisttpl
push
push
cmp
sbb
movsb
mov
movsl
pop
inc
addl
dec
lods
pushl
lahf
lret
test
pop
adc
lret
mov
pop
mov
aaa
cs
loopne
cmp
push
fidivrl
push
out
int3
cmp
pop
ficomps
gs
xchg
or
push
std
xchg
pop
sarl
outsb
fisttpl
cmp
push
push
push
mov
call
mov
jne
mov
es
pop
fsubrl
mov
sahf
cmp
rolb
fdivr
call
cld
les
outsb
pushf
ffreep
add
pop
mov
dec
or
and
cmp
fmulp
cmc
xor
ja
mov
hlt
cmpsb
mov
xchg
mov
xchg
cmpsl
addr16
adc
pop
call
dec
xchg
rorl
ret
jno
stos
pop
aaa
lea
xchg
ficoms
dec
ljmp
leave
adc
push
xchg
test
add
pop
lds
fdivr
mov
push
xor
xor
push
mov
into
shlb
mov
test
lods
add
fbld
add
int3
hlt
push
xor
adcl
or
mov
adc
inc
or
sub
dec
fnstcw
xchg
adc
jmp
pop
jmp
mov
mov
jno
movsb
pop
and
cld
lds
in
mov
or
jmp
inc
rolb
jge
dec
dec
push
add
js
ret
lret
mov
cmp
xchg
cmc
stos
inc
fwait
lahf
into
enter
mov
xchg
mov
mov
jmp
inc
in
in
and
stc
sbb
jmp
mov
mov
decl
inc
mov
mov
addr16
adc
mov
mov
inc
add
ljmp
int3
out
dec
shll
cwtl
push
xchg
gs
outsl
jecxz
mov
dec
dec
les
fistpl
call
ja
or
daa
jno
mov
arpl
je
lret
add
fldenv
iret
xor
push
xor
adc
lret
cs
cltd
adc
xchg
pop
fstl
leave
mov
mov
jnp
xor
mov
popf
xlat
xchg
mov
pop
call
jp
xchg
xor
sub
dec
int3
ja
gs
fsubs
stos
hlt
cwtl
push
xchg
jmp
incl
push
fwait
jae
jae
cltd
ljmp
push
push
je
mov
cmp
mov
cs
push
cmp
imul
push
xlat
xlat
push
pop
and
xor
je
add
mov
or
das
mov
out
cli
pushl
sbb
test
loopne
xchg
sub
mov
decl
aas
ret
es
or
xchg
aaa
cmp
ss
pop
inc
pop
add
call
adc
daa
pop
add
jnp
inc
mov
lcall
lods
add
push
int3
in
sub
xlat
mov
mov
ret
adc
sbb
xlat
ljmp
jb
add
or
inc
pop
xchg
mov
adc
and
xchg
rorb
pushf
stos
incl
movsb
rcrb
jae
loopne
lret
cmp
lea
js
mov
ljmp
or
ja
xor
cltd
and
lea
or
jl
jp
dec
mov
fs
loope
lret
dec
scas
xor
cmp
test
cmpl
inc
xor
test
js
add
ljmp
or
mov
add
stos
add
stos
fs
popf
sbb
push
pop
aam
sub
pushl
ds
ret
addl
pushl
popa
push
and
dec
ljmp
inc
and
out
lcall
jae
mov
push
in
fildl
gs
inc
xor
mov
or
rorb
int3
add
es
out
sbb
int3
cwtl
cmp
decl
sahf
test
cmp
dec
lods
mov
xlat
enter
lock
incl
jg
aaa
je
add
mov
int
cmpb
adc
loopne
pop
lods
cmp
cmp
mov
or
insl
outsl
xchg
gs
cmp
enter
cltd
data16
lcall
aas
gs
stc
testl
dec
jo
jl
cmpsb
or
cmp
cmp
mov
cmpsb
test
test
loope
imul
sbb
mov
mov
ret
xchg
lcall
jmp
in
fsubrs
fcomip
pushl
mov
scas
inc
rcrl
imul
xchg
mov
lcall
dec
and
and
stos
jp
call
fiadds
mov
mov
dec
jmp
jle
fadd
add
pop
loope
roll
jo
sbb
fnsave
in
jbe
popa
decb
jno
inc
std
jmp
lahf
sbb
mov
jle
and
movl
call
ds
addps
or
jb
out
mov
jg
inc
inc
sti
nop
and
pushl
adc
cmp
add
and
sbb
jo
or
mov
pop
cmp
fdivrl
out
scas
ret
insb
cld
dec
mov
cwtl
adcb
sub
jmp
pushf
ss
and
inc
mov
add
mov
lds
lret
call
or
hlt
xchg
int
subl
addl
pop
sub
movsl
in
jne
pushl
cmp
sub
inc
or
mov
fsts
xchg
mov
clc
xchg
xor
dec
or
pusha
or
pushl
jle
roll
out
inc
cmpsb
gs
outsl
inc
repnz
cli
xor
out
clc
decl
xor
adc
ficompl
xor
xchg
dec
pop
jp
dec
fcomps
push
jl
es
mov
mov
mov
push
and
incl
and
fldenv
xor
add
push
loop
leave
sbb
sti
or
outsl
movsb
cli
fadd
mov
pop
insb
stos
fsts
dec
jmp
into
outsb
pop
jg
adc
ljmp
mov
scas
xchg
xor
jns
push
push
sub
into
push
rcrb
pop
fcomip
ljmp
ja
sahf
pusha
ljmp
mov
cltd
dec
repz
outsb
mov
scas
cli
jmp
mov
mov
jnp
xorb
lea
push
or
or
lcall
adc
andl
add
mov
mov
adc
push
mov
std
test
add
mov
cmpsl
add
mov
dec
out
incl
inc
scas
mov
lcall
and
cwtl
imul
in
movsl
push
enter
jmp
jl
sti
ja
imulb
lcall
mov
xchg
lret
push
insl
in
stos
and
mov
push
and
ja
cmc
loope
loopne
data16
jo
cmp
sbb
mov
mov
pop
rorb
movsb
test
or
lcall
push
sbb
adc
xor
stos
sbb
mov
rolb
cmp
int
dec
push
push
pop
loop
push
cmp
dec
pushf
les
push
scas
pushf
cld
and
mov
mov
lret
pushl
dec
daa
cwtl
aaa
push
pop
dec
jbe
xor
mov
cmpsb
sti
or
cli
add
stos
lods
les
ljmp
fstpt
in
shlb
pop
add
mov
mov
in
adc
sbb
pusha
pop
shl
lret
popa
cli
sbb
dec
mov
loopne
jmp
shrb
fisttpl
cmp
mov
pop
cwtl
rolb
subb
call
cld
add
pushf
inc
je
stos
sub
dec
dec
dec
jne
je
in
addr16
pushf
stos
sbb
jl
inc
jnp
outsl
cs
rcrl
mov
call
insb
adc
mov
sti
push
cmp
lods
xchg
out
lcall
lahf
imul
mov
cld
xchg
mov
ret
jmp
add
fs
mov
cmpsl
xchg
repz
or
jmp
jnp
mov
cmp
sarl
test
and
std
incl
scas
adc
mov
hlt
ljmp
mov
push
and
add
pop
jmp
mov
cwtl
pushf
jae
or
cmpsl
rorb
lods
aas
cmc
add
adc
rorb
jne
jmp
lret
push
jmp
xchg
insb
pop
jo
add
je
mov
push
mov
jnp
jecxz
das
or
push
ljmp
sub
sub
inc
aad
pop
insb
fildl
or
xchg
aaa
inc
push
push
xchg
decl
data16
out
outsb
cmp
int
popf
xchg
push
sbb
mov
mov
lods
mov
pop
std
out
jmp
popf
mov
daa
adc
jge
sahf
cmp
pop
and
cmp
daa
cs
loope
decl
mov
es
je
push
xor
mov
jbe
sahf
ret
sbb
jg
mov
cmp
dec
and
out
test
lock
stos
shlb
cmpsb
decl
lods
test
xlat
lcall
push
push
lea
lret
push
or
enter
addb
std
pushl
call
aaa
ret
xorb
test
je
jnp
test
cmp
jo
xchg
dec
xor
jecxz
cmp
mov
mov
popf
push
aam
decl
aam
xchg
shrl
cmpsb
adc
sahf
jg
mov
repnz
movsb
out
clc
lcall
popa
add
lock
mov
xor
mov
jl
fs
clc
jmp
in
icebp
adc
loop
cmp
adc
sbb
int3
roll
pushf
incl
xor
notb
aam
je
xchg
pop
mov
lods
movsb
fistpll
daa
aam
mov
mov
jg
aam
repnz
popf
adc
xor
cmpsb
jmp
push
jo
test
xor
pop
or
lcall
push
ja
xchg
inc
inc
mov
cli
stc
into
imul
out
mov
mov
mov
lcall
inc
mov
loop
cmp
pop
cwtl
ret
sbb
and
inc
movsl
movsb
pushl
cld
jg
dec
stos
lret
orl
cmp
pop
cmp
push
xchg
sar
cmp
cmp
aas
cltd
adcb
clc
sub
lds
sarb
cs
fsubr
mov
insb
test
fisttps
cmp
xor
clc
pop
jg
pop
les
add
pop
pushf
pop
shl
push
push
test
call
mov
mov
ss
lods
pop
xchg
repz
mov
sub
jge
repnz
xchg
lcall
inc
pop
cmpsl
and
mov
roll
in
fildll
fdivrs
lea
pushf
in
das
notl
xor
outsw
clc
ljmp
cmp
push
or
dec
cwtl
push
mov
iret
cmp
sbb
test
scas
jecxz
or
mov
std
repz
jge
aam
inc
dec
daa
xchg
and
jmp
mov
scas
dec
shlb
mov
mov
sbb
dec
mov
cli
fcmovnbe
out
daa
inc
mov
fs
inc
add
inc
push
add
mov
jmp
cmc
xor
jmp
popf
sahf
or
jb
int3
int
lret
or
pushl
mov
push
xchg
sub
lea
aam
xor
icebp
call
mov
leave
mov
xchg
cwtl
mov
call
fidivl
and
popa
inc
and
xchg
sbb
hlt
sbb
clc
mov
add
inc
and
loopne
mov
cmc
mov
neg
scas
pop
cmp
fcoms
add
ror
xor
add
leave
mov
fiaddl
movsb
mov
dec
movsb
fs
mov
xor
and
je
push
lods
or
push
sbb
cmp
das
sbb
jg
je
xor
stos
cmp
push
sbb
loopne
dec
popf
sub
movb
cli
cs
add
push
push
jle
xchg
outsb
pusha
mov
insb
hlt
nop
es
lcall
in
aam
cmp
test
faddl
adc
out
shl
into
andl
scas
push
iret
fcomip
out
inc
movsb
fwait
rclb
lcall
pop
pop
fisttpl
lock
popa
jmp
dec
addr16
sub
mov
sub
out
push
inc
sbb
ja
out
lock
inc
jle
cs
addr16
iret
xchg
inc
push
cmp
mov
sar
push
jle
out
xor
push
xchg
xor
adc
aam
leave
repz
or
mov
mov
lcall
lods
roll
es
test
mov
adc
cmc
dec
das
jns
cltd
dec
mov
decl
lahf
mov
add
jbe
jg
lods
int
shrl
inc
xlat
into
dec
cmp
jmp
mov
jae
fwait
repnz
or
cs
lcall
fsubr
jl
mov
cli
nop
das
jae
orl
pushf
cmp
mov
decl
in
sbb
pop
jmp
roll
dec
mov
mov
inc
pop
pushf
aas
mov
inc
mov
jmp
es
movsl
xchg
mov
leave
pmulhw
mov
cmc
nop
lock
insl
fsubrs
decl
mov
enter
adcl
mov
or
insl
dec
jb
pop
pop
push
push
mov
fldcw
push
mov
inc
repz
fcomip
jle
cld
inc
mov
fdivr
mov
movsl
adc
aam
test
dec
dec
cmp
ljmp
enter
mov
pop
aas
dec
mov
adc
idiv
incl
sub
push
cmp
mov
mov
out
mov
push
popf
std
sub
sub
enter
dec
xchg
in
insl
clc
adc
mov
lcall
shl
mov
xorb
lahf
sti
pop
aam
test
ret
lret
ret
inc
jns
nop
stos
incl
sti
into
pop
and
cmp
pop
mov
add
pop
test
lds
jmp
inc
pop
sub
int3
mov
inc
mov
jmp
into
and
lcall
xchg
outsl
mov
mov
arpl
push
push
test
adc
ja
sbb
cmp
sub
outsb
fwait
mov
mov
or
lret
jae
filds
adc
push
xchg
mov
pushl
rcrl
imul
push
imul
dec
incl
ret
mov
and
mov
movsl
pusha
idiv
mov
push
jg
cmp
movsl
popa
mov
push
cs
loop
negl
je
in
jb
incl
sbb
xor
data16
pop
imul
dec
lret
push
movsl
imul
cli
out
gs
lret
inc
clc
outsb
add
or
daa
in
orl
sti
data16
jmp
push
inc
clc
out
push
xchg
cmc
fld
stos
retw
in
mov
cwtl
les
lcall
mov
iret
jbe
adc
mov
fs
add
int3
idiv
jmp
mov
fsubl
repz
popa
lea
arpl
mov
mov
and
lea
push
sbb
fdiv
in
xor
ljmp
push
jmp
call
push
mov
jno
insb
inc
mov
je
xchg
xor
mov
jg
fidivs
clc
pushl
push
and
push
sbb
dec
adc
and
sbb
movsl
push
xor
ljmp
out
bound
sub
or
mov
icebp
jo
mov
cltd
hlt
dec
das
mov
pushl
xorl
subl
lods
push
loope
push
cmp
test
mov
add
into
or
pop
add
in
pusha
lahf
repnz
xor
dec
adc
and
dec
bnd
mov
or
cmp
int3
scas
jb
mov
in
test
in
in
mov
pop
cmc
lcall
negb
xchg
movsl
loope
cmp
fcomi
and
out
push
clc
shll
into
stos
incl
or
push
imul
xor
pop
jle
iret
dec
loope
dec
fdivrs
dec
cs
arpl
mov
push
repz
scas
rorb
into
sbb
add
dec
xlat
lods
test
sub
fnstsw
jmp
sub
pop
and
imul
cltd
fwait
pusha
jge
pusha
movsb
xchg
inc
push
arpl
in
cmp
add
pop
mov
pop
insb
pop
ljmp
in
fdivrl
movsl
mov
sbb
test
ljmp
lret
push
insl
jb
dec
insl
mov
test
jecxz
sbb
outsl
lcall
out
sar
push
fwait
jb
push
xchg
sar
ja
movsl
mov
or
daa
pushf
mov
cli
and
ljmp
loopne
push
int3
in
cmpsl
lahf
inc
xorl
cmc
pop
ljmp
pop
jl
decl
arpl
in
mov
mov
push
fcomps
fwait
pop
mov
ror
dec
mov
jmp
pop
lods
dec
sti
add
popa
fwait
push
pop
rclb
xor
jns
pop
cmp
mov
jbe
call
ret
push
or
dec
cmp
mov
dec
push
js
push
sbb
cmp
push
fisubs
rorb
fisubrs
mov
mov
test
inc
mov
call
ljmp
jb
jecxz
aad
adc
decl
cmp
adc
sarb
lret
mov
mov
push
jg
or
mov
subb
dec
add
aaa
or
mov
pop
aas
call
iret
scas
into
pushf
or
loopne
cmp
fnsave
lcall
pushl
cmp
xchg
and
ds
xchg
xchg
cmp
daa
lds
cmc
fcomip
jmp
loopne
jnp
inc
mov
xchg
dec
jno
push
mov
scas
fs
imul
cs
sbb
xor
jg
call
icebp
lret
sbb
mov
dec
pop
sbb
mov
js
jmp
popf
les
jbe
jmp
sahf
jbe
pop
sub
add
pop
push
mov
or
cmp
add
add
jne
add
jmp
mov
mov
add
decl
jo
mov
adc
and
mov
inc
ret
mov
jmp
popa
pop
lcall
jmp
cmp
jecxz
or
testb
push
outsl
jb
fucomip
nop
add
mov
sub
incl
push
mov
je
xchg
mov
jle
jno
fcompl
bound
jae
and
decl
inc
mov
push
fs
mov
mov
inc
sbb
lds
pop
enter
clc
je
out
sbb
ret
add
movsb
fs
xchg
jg
jmp
scas
ss
mov
ret
out
adc
iret
outsl
mov
sbb
lock
pushl
loope
and
pop
xor
push
sbb
push
mov
push
xlat
clc
xor
mov
movsb
sar
jmp
adc
imul
xor
xchg
out
js
scas
add
mov
fadds
xor
mov
jne
pushf
lahf
std
insl
in
push
mov
call
loopne
test
test
pop
mov
mov
push
mov
mov
lcall
push
jp
sub
mov
push
pop
xor
insl
pop
lret
lock
jle
mov
std
gs
mov
cwtl
and
lock
and
mov
dec
lock
call
ret
pop
cmp
and
shll
adc
lods
std
jo
dec
add
lcall
mov
jl
add
mov
mov
sub
ds
std
mov
ret
add
dec
dec
inc
outsb
movsl
stos
lcall
fistpl
or
outsb
bound
insb
or
jns
hlt
bound
data16
cmp
jmp
fldl
xchg
or
sub
mov
push
data16
ror
mov
jns
stos
hlt
mov
mov
hlt
pop
int3
pop
fldcw
lcall
lds
or
cs
cmp
xor
sti
adcl
test
shl
stos
mov
sbb
les
cwtl
jb
inc
daa
or
mov
loop
and
sbb
pushf
fbstp
adc
lods
push
arpl
sbb
xchg
aas
add
adc
mov
sar
decl
jge
sub
jmp
adc
cmp
cli
jmp
jecxz
sub
xor
dec
xor
ljmp
fcmovne
cmp
inc
loop
test
call
push
or
jnp
mov
in
mov
mov
leave
lahf
xchg
cld
stos
push
pop
adc
fs
xchg
adc
push
out
push
dec
jg
cmp
and
and
ret
mov
xor
jmp
mov
push
adc
sub
or
fstpt
enter
clc
mov
outsb
adc
jne
mov
cmc
ljmp
and
push
jne
loope
or
sbb
fcoms
dec
xlat
push
lahf
add
pushl
les
aad
fimuls
aad
arpl
dec
cmp
and
ljmp
mov
xchg
add
inc
lea
jno
dec
xor
push
in
adc
pop
cmc
jmp
pop
std
push
adc
jnp
stc
cld
sub
mov
call
inc
push
mov
push
dec
inc
dec
icebp
arpl
mov
mov
xor
outsl
ja
ljmp
pop
dec
xchg
mov
ljmp
cltd
out
sti
loopne
adc
sbbl
fldt
sub
sbb
sti
push
insb
pop
clc
cli
jb
pushl
mov
addb
das
or
ja
pushf
xor
mov
incl
mov
cmp
imul
jno
push
stos
jno
fmull
mov
aaa
std
decl
lods
inc
hlt
addr16
dec
arpl
cmp
push
mov
pop
ds
inc
pop
out
sub
xor
adc
or
sbb
sbb
mov
jl
push
adc
sub
js
shl
mov
dec
imul
stos
dec
mov
cwtl
fsub
xchg
call
xchg
fwait
xor
cmp
lcall
cmovbe
and
pop
in
lret
popa
insl
mov
and
scas
imul
arpl
int
lret
xchg
sub
ret
mov
jns
mov
mov
ljmp
lahf
dec
shlb
aaa
cltd
and
shll
pop
sub
ret
test
dec
imul
ljmp
add
and
call
shll
push
cmp
pushl
xlat
push
inc
xchg
inc
fwait
in
rcl
lds
dec
jmp
mov
dec
shlb
cmp
insb
outsl
test
sbb
imul
push
mov
daa
test
mov
pusha
cwtl
mov
inc
or
pushl
push
cld
pop
pushf
inc
fsubr
imul
lahf
jno
jle
icebp
push
popa
aad
insb
or
imul
mov
cld
out
popf
lcall
mov
pop
fs
rorb
push
in
addb
adc
jg
repz
jne
inc
fs
dec
push
mov
and
or
into
mov
dec
repnz
push
adc
lcall
neg
or
mov
incl
add
in
add
xor
xchg
call
add
das
cli
decl
pop
loope
and
cld
sbb
addr16
push
or
fsts
xchg
jge
incl
int
imul
sbb
push
adc
popf
insl
lods
in
stc
cmp
jns
rorl
pushl
sarl
mov
std
inc
xlat
mov
mov
jg
ds
dec
xchg
sub
fbld
in
and
dec
xor
frndint
sbb
cmp
out
dec
push
jg
mov
das
cld
cwtl
movsb
fwait
or
pop
xor
shll
dec
jbe
addr16
enter
imul
and
and
negl
jmp
pop
inc
mov
shl
pop
xchg
daa
cmp
imul
inc
pop
xchg
xchg
shl
pop
ud0
ljmp
dec
sbb
js
mov
xchg
jl
repnz
jns
or
shlb
andb
inc
leave
push
mov
push
adc
stos
xor
lret
xor
sub
out
mov
shr
mov
lds
xor
pop
ds
lcall
pop
lods
pushf
in
add
lock
and
adc
jne
imul
pop
cmp
adc
dec
jmp
xor
push
inc
dec
dec
xchg
insl
aaa
pop
ret
aas
ljmp
ret
sub
shrl
xchg
mov
cmp
sbb
inc
jne
sbb
lock
ljmp
int3
pop
mov
push
cltd
sbb
pop
rcll
icebp
jnp
lcall
stos
mov
fs
cwtl
and
jnp
bound
add
icebp
cmp
bound
mov
add
mov
lock
loop
lcall
inc
pop
popa
inc
and
jle
popf
movsl
or
inc
and
or
test
jmp
nop
push
lret
in
cmp
cmpsl
stc
mov
xor
mov
stos
push
add
ljmp
mov
mov
shrl
and
mov
sub
add
mov
and
ret
inc
call
inc
repnz
outsl
aad
xorb
xlat
cld
addr16
cld
fildl
mov
mov
mov
adc
int3
xchg
cld
cli
lds
out
xchg
insb
dec
mov
nop
push
test
shll
aaa
mov
dec
jge
and
movl
xchg
jp
jge
and
jg
push
dec
mov
mov
outsb
ficomps
xchg
js
loopne
das
jg
outsb
adc
lods
cli
pop
lcall
cwtl
and
inc
mov
adc
sub
dec
cmp
sub
or
daa
xchg
xchg
nop
leave
std
insl
jge
inc
mov
loopne
or
adc
lcall
aad
add
fsubrp
fs
inc
mov
sbb
pop
ss
mov
mov
shl
mov
out
js
cmp
pushl
cmp
imulb
sbb
cli
ja
mov
das
sub
xor
imul
movsb
sub
aaa
mov
pop
mov
add
fwait
or
repnz
xchg
fnstsw
stos
aam
add
mov
add
dec
popf
bswap
mov
adc
shrl
mov
sub
fcmovu
inc
push
push
jg
mov
adc
cmp
orl
add
or
mov
cwtl
cmp
jle
ficoml
mov
push
loopne
sbb
mov
dec
xor
lock
pop
fs
pop
cmpl
clc
test
lcall
or
xor
xchg
ss
mov
push
dec
es
xchg
jbe
push
mov
movsb
call
sbb
dec
adc
xchg
test
jmp
push
and
stos
jl
sahf
bnd
sub
ljmp
data16
mov
jge
shrl
mov
pop
aad
mov
pop
pushl
bound
sub
xchg
adc
push
pop
mov
xor
jb
out
xlat
xor
mov
or
shl
rol
xor
dec
and
ret
lea
pop
and
jmp
cmc
pop
cmp
mov
fldt
add
imul
dec
enter
jg
jmp
repnz
ja
repz
imul
xor
jmp
in
jmp
xor
loope
fstps
inc
test
mov
sub
into
lods
dec
adc
shlb
pushl
jnp
gs
mov
inc
test
pop
xor
out
call
pop
imul
dec
pop
or
dec
faddp
add
jle
addb
in
and
pop
sbb
jg
fiaddl
xchg
int3
mov
xorb
fnsave
lcall
mov
adc
pop
lret
pop
loop
mov
fwait
mov
push
js
decb
dec
insb
push
pop
lods
sub
push
out
jle
inc
mov
lods
mov
inc
loopne
popa
mulb
inc
mov
int3
add
out
clc
inc
sbb
sbb
imul
das
push
call
jle
push
sbb
popa
shl
mov
cmc
mov
mov
incl
mov
dec
add
insb
push
pop
test
icebp
arpl
fsubrl
sub
push
les
packsswb
pop
jecxz
mov
dec
lods
lods
inc
test
hlt
in
pop
cli
ljmp
arpl
xchg
or
call
ljmp
jae
cmp
mov
dec
xor
mov
lcall
lcall
daa
cwtl
sti
movsb
mov
fsubs
inc
sbb
outsb
repnz
push
xchg
inc
mov
cli
push
cld
mov
pop
pop
jecxz
jns
mov
mov
adc
push
push
sub
dec
mov
or
lret
pop
or
inc
sbb
mov
sarl
in
xchg
pop
aaa
js
movsb
cmc
mov
cmp
xchg
mov
out
jg
testb
test
int3
scas
mov
mov
mov
scas
fildl
mov
and
and
cmpsl
xor
fimuls
push
pop
mov
daa
pop
scas
jle
int
push
dec
sbb
out
and
pop
call
mov
cmp
jp
add
ficomps
daa
in
sbb
adc
outsb
add
xchg
push
scas
negl
sub
in
call
stos
jns
pop
pop
loopne
ljmp
sub
pop
je
cwtl
movsb
inc
mov
popf
cld
mov
cli
jp
jecxz
jb
jo
mov
jp
orl
cmp
lea
iret
fnstenv
inc
xchg
add
ds
fsubl
and
jecxz
lret
jg
movsb
mov
or
sub
decl
add
lahf
dec
out
int
cmp
jmp
or
cltd
inc
out
pusha
xchg
jns
pop
dec
dec
pop
popf
into
push
lock
ficomps
ljmp
sbb
dec
leave
sahf
test
xchg
dec
stc
mov
push
mov
jnp
sbb
dec
adc
aaa
lods
jno
adc
ss
push
scas
xor
adc
mov
leave
movsb
dec
mov
stos
out
loopne
jb
cmpsl
pop
push
push
dec
and
pop
lret
and
ljmp
fcomip
orb
adc
rorb
sti
push
aam
xchg
jb
mov
inc
xor
aam
clc
mov
mov
jmp
shll
fs
aas
mov
adc
and
cmp
pushf
xchg
jnp
decl
pushf
mov
jp
ja
and
lods
inc
sbb
xchg
pop
and
xchg
and
mov
fwait
xchg
jmp
sbb
mov
out
or
mov
mov
xchg
out
incb
and
loop
pop
out
cli
pop
std
jae
stc
in
and
mov
xor
idiv
mov
mov
daa
xor
xlat
cli
ss
lahf
divl
test
or
incl
mov
in
ja
out
rol
stc
call
in
shlb
and
jb
decl
lcall
or
sub
lods
clc
hlt
sti
repz
or
jmp
in
xchg
sub
fcoms
sarl
mov
lds
cltd
mov
ljmp
jmp
xchg
mov
sub
popf
divl
and
ljmp
ret
ja
add
ds
adc
xor
fs
lea
ja
jnp
add
jmp
pop
les
clc
pop
inc
andl
adcb
pop
icebp
ljmp
mov
out
xchg
mov
inc
xchg
int3
add
mov
icebp
cli
xor
std
call
insb
or
and
sahf
cmp
fistpll
xor
lahf
stos
xchg
cmp
test
scas
sbb
cmp
stc
sub
sub
sar
ljmp
rorb
mov
and
dec
jae
ds
xor
mov
xchg
push
cmp
daa
mov
lods
shll
aaa
mov
das
call
out
test
mov
inc
xchg
inc
jmp
std
outsl
cmpsb
movsl
mov
int
cmp
call
jmp
adc
subb
cld
imul
jns
add
jne
pushl
outsl
or
or
popa
inc
out
xchg
xchg
jae
mov
pop
mov
sub
decl
stos
test
movsl
into
cmp
dec
test
xchg
or
xor
jp
fwait
ss
call
add
fldl
mov
std
in
xchg
jmp
repz
push
push
lods
jg
mov
xchg
inc
and
jp
mov
pop
jg
jle
pop
xlat
mov
fnstsw
in
mov
inc
dec
sbb
sub
push
fimull
push
xor
sti
outsb
jg
scas
hlt
rclb
decl
push
mov
stos
loop
lcall
movsl
stos
repnz
mov
sbb
test
scas
mov
jle
enter
adc
cmp
into
pop
and
cmc
stos
jle
cli
pop
lock
addl
stc
or
mov
shl
xlat
xchg
fisttpll
xor
push
jo
jb
xor
jbe
push
enter
data16
push
jns
mov
mov
fucomip
loop
pop
dec
xlat
dec
sub
cs
mov
inc
pop
push
mov
mov
dec
call
push
mov
rorb
adc
movsl
sbb
addr16
dec
int3
ljmp
pop
sti
xor
sub
leavew
pop
inc
dec
sub
pop
push
mov
ss
decl
xchg
lea
dec
subb
xchg
jecxz
xor
nop
data16
jmp
xor
fisubrl
cmp
adc
add
sarb
pushl
cli
decl
nop
sahf
fldenv
loopne
jecxz
push
mov
leave
shll
xchg
push
inc
lcall
pop
mov
repnz
xor
jo
xor
sbb
or
cmpsl
or
mov
cli
pop
jmp
decl
aam
jae
scas
push
mov
dec
lcall
sub
lock
ljmp
call
leave
scas
inc
call
and
lods
push
test
in
jnp
lret
add
push
cmpsb
ret
mov
mov
lret
sub
or
lods
fsubrp
cmp
or
pop
mov
jg
sub
jne
xchg
das
dec
adc
ljmp
adc
jne
ds
pop
push
sub
fisubrl
adc
pusha
pop
cmp
push
inc
mov
jmp
push
pop
jl
int3
mov
mov
out
mov
lcall
or
jmp
pop
add
mov
fnstsw
and
cmp
xchg
rcr
mov
sahf
xor
lcall
and
pusha
pop
ds
je
xchg
lcall
mov
jno
mov
adc
stos
sub
stc
dec
test
adc
push
jp
inc
movsb
xchg
mov
mov
inc
ljmp
adc
or
cmp
in
lret
and
mov
ds
push
ljmp
movsl
out
lea
mov
or
aam
aam
inc
sbb
add
dec
loopne
data16
pop
sbb
jmp
mov
scas
imul
xor
gs
notl
enter
add
mov
stc
incl
nop
scas
pop
mov
add
nop
mov
rorb
movsl
dec
dec
ret
cmp
iret
fildll
dec
adc
ljmp
dec
cmp
xor
out
clc
cli
dec
xchg
mov
mov
mov
pop
movsl
insb
sarl
int3
and
ja
decl
out
push
bound
call
ss
xchg
pop
aam
lcall
lods
lea
or
dec
jb
mov
jmp
movsb
int3
inc
sti
adc
loop
incl
mov
dec
in
mov
shrb
xchg
stos
xor
incl
add
xor
push
std
xor
sarb
lret
sub
add
push
decl
push
xor
pop
fs
sub
test
inc
sarl
movsb
cltd
call
sub
fistpl
dec
cmp
dec
push
test
jne
mov
jle,pn
std
mov
daa
add
add
pop
jl
adc
pop
ja
jp
mov
pushf
cwtl
ret
rcll
sub
hlt
call
dec
hlt
xor
inc
test
cs
push
lcall
dec
in
sub
mov
imul
pop
out
dec
jmp
push
dec
inc
adc
mov
mov
icebp
jno
push
xor
mov
sbb
lds
je
mov
pop
int
stc
imulb
push
adc
sub
pushl
into
add
mov
scas
cmp
mov
jg
inc
mov
in
popl
or
add
jmp
cmp
insl
fnstcw
les
sub
scas
iret
popa
sbb
mov
jge
sti
add
dec
repz
mov
cmp
jecxz
cwtl
push
cmpsl
leave
pop
mov
mov
sub
dec
sti
cmp
jp
fdivrl
inc
stos
in
pop
mov
pushf
pop
std
decl
sub
xchg
xor
sbb
mov
cmpsl
mov
pop
push
push
rcll
jg
fsubs
movsb
sbb
repnz
mov
jns
inc
xor
sbb
jle
decl
xchg
fsubl
inc
mov
adc
out
aad
push
aas
arpl
pop
test
jmp
dec
hlt
into
rolb
popa
cmp
movsb
dec
sub
jae
fs
push
mov
sbb
push
pop
mov
test
js
cmpsb
cmp
push
sbb
fidivrs
inc
mov
pop
push
leave
dec
mov
push
adc
fistps
in
xor
jecxz
push
add
in
pop
push
sub
incl
repz
std
pushf
imul
mov
aas
sbb
incb
mov
lcall
mov
xchg
xorb
dec
jns
cmc
adc
mov
ds
lcall
cmp
in
dec
in
fcmovnb
jmp
mov
xor
inc
ljmp
pop
inc
aad
sub
xor
sbb
add
loop
outsl
or
sahf
push
ja,pt
mov
lods
dec
lcall
xor
int
lds
cmp
or
or
out
nop
and
dec
clc
cld
incl
xchg
sub
push
shr
dec
mov
sub
enter
mov
pusha
dec
loopne
jbe
xchg
incl
not
in
xchg
push
mov
push
xor
and
mov
mov
sbb
pushl
cs
inc
inc
cs
adc
movsb
sbb
xor
adc
call
mov
incb
leave
test
aas
rorl
decl
sbb
test
cmc
imul
jnp
sahf
mov
add
incl
subb
sbb
loope
leave
imul
mov
jb
adc
or
sub
sbb
sub
push
sbb
neg
jg
mov
xchg
jbe
push
push
jno
and
outsb
loopne
ljmp
or
xchg
fdivrl
cmc
add
enter
xor
popa
mov
cmp
call
dec
out
mov
mov
jb
pop
push
xor
mov
mov
xchg
cmp
adcb
iret
push
lods
int
test
sub
mov
or
std
decl
inc
popa
add
xor
xchg
data16
and
test
in
idiv
jg
add
orb
insl
sub
clc
cld
fcomip
jmp
mov
clc
mov
sbb
push
ljmp
dec
jmp
cmp
jmp
sub
mov
rcrl
popa
push
inc
cld
sbb
icebp
call
mov
push
stos
add
adc
gs
icebp
fnsave
movsl
dec
call
lea
xchg
mov
ljmp
jo
shlb
inc
in
dec
pop
sub
sub
loop
in
pop
fsubrp
lcall
adc
clc
mov
inc
dec
jnp
in
popf
mov
sbb
cmp
test
add
ret
lods
in
ljmp
sub
hlt
jne
mov
pop
mov
and
incl
pop
cmpb
xor
jp
pop
adc
orl
inc
xchg
std
nop
popf
test
fists
rcll
dec
pop
push
push
imul
pop
jo
push
outsl
jg
daa
mov
stos
ss
pop
xchg
inc
cli
cmp
push
add
adc
js
loope
js
lret
mov
sbb
insl
or
loop
and
pop
lock
adc
in
popa
fwait
gs
mov
lret
test
rcll
imulb
incl
in
or
and
fcoms
test
push
imul
incl
sub
pusha
or
into
leave
sbb
movsl
mov
fwait
cwtl
stos
bound
bnd
xor
jmp
aad
xor
pop
jge
jno
out
incl
push
fdivrl
and
ja
cmp
xor
pusha
outsl
clc
ljmp
sti
mov
rcr
hlt
lods
ds
mul
mov
inc
data16
jmp
daa
xlat
push
in
adc
jne
lock
movb
out
sub
sub
inc
stos
test
push
pop
dec
imul
mull
sub
mov
mov
enter
add
mov
aam
scas
sbb
or
add
decl
bound
scas
mov
or
push
enter
mov
mov
incl
shll
fs
imul
cs
sbb
pop
add
lahf
mov
orl
divb
xchg
add
cmp
clc
fbld
inc
push
cmp
sti
hlt
insl
add
incl
loope
jmp
mov
mov
xchg
mulb
lcall
sub
sahf
or
aaa
lahf
mov
or
inc
iret
sbb
mov
icebp
xor
dec
cli
jg
lcall
or
mov
pop
out
dec
test
cmc
sub
sahf
loope
inc
pushl
or
pop
dec
cmpsb
jb
out
dec
cmp
loop
data16
pushl
sarl
roll
sbb
cmp
sar
inc
movsl
scas
cld
aas
pop
mov
cmp
imul
dec
out
iret
mov
dec
push
pop
and
daa
test
inc
incl
decl
mov
mov
jno
repz
and
sub
decl
bnd
sbb
in
test
enter
mov
mov
fildl
push
jae
hlt
sbb
pop
xchg
repnz
pop
jle
push
gs
fsubs
mov
pop
xchg
mov
dec
cltd
jecxz
push
sti
jnp
mov
push
cmp
xorb
push
jg
out
lods
jns
pusha
inc
int
mov
inc
mov
add
call
cmp
xlat
repnz
mov
outsb
lcall
pop
lods
and
cltd
push
inc
imul
dec
push
outsl
ret
rol
jb
movsl
mov
xchg
jns
pop
addr16
ss
decl
mov
ret
movsl
mov
jle
xchg
mov
lret
xchg
mov
and
sbb
iret
inc
ja
xchg
inc
or
dec
lds
mov
and
jg
shlb
push
mov
cmp
cmp
mov
adc
ret
pusha
jb
clc
or
inc
pop
or
scas
jl
pusha
jae
dec
xchg
add
dec
xchg
fildll
sub
jbe
xor
call
inc
clc
jecxz
push
icebp
xchg
sbb
mov
add
imul
cld
adc
incl
stos
dec
cmp
test
xchg
in
pusha
js
inc
jmp
sub
mov
mov
cmp
outsl
mov
sub
inc
into
dec
cmpsb
jmp
imul
lcall
les
inc
lret
push
test
insb
call
ja
push
push
push
arpl
lds
pop
jns
cltd
mov
mov
imul
push
mov
aad
outsb
or
sub
and
jecxz
add
xchg
mov
scas
pushf
mov
dec
pushl
enter
loopne
cmp
sti
adc
notl
mov
js
push
sti
mov
loop
push
xor
jae
mov
cmc
sbb
cwtl
cli
aaa
cli
mov
push
decl
or
or
mov
mov
out
jle
inc
mov
xchg
pusha
nop
movsl
xor
lds
rorb
sub
lret
xchg
dec
repz
fcomip
fidivrs
xchg
mov
fdivl
repnz
lock
lcall
ret
inc
push
or
xchg
xor
xlat
inc
xlat
jmp
sbb
fldcw
out
mov
dec
rorb
in
into
pop
daa
dec
mov
pop
cmp
push
push
push
sbb
lock
adc
decl
pop
lods
mov
daa
repz
jmp
mov
sysret
cmp
inc
add
and
add
ja
pop
imul
addb
imul
cmp
incl
pushf
mov
and
cmp
mov
js
or
mov
jg
add
pop
dec
leave
rcll
pop
test
roll
pop
dec
orb
adc
inc
test
mov
mov
add
adc
jle
movq
add
nopl
into
shll
jns
mov
inc
pop
and
mov
jnp
xchg
movsl
stc
fwait
insl
xchg
in
push
push
mov
add
imul
push
movsb
push
movsb
inc
scas
push
mov
add
test
and
imul
push
push
inc
pop
pop
add
mov
pop
sbb
mov
sbb
add
mov
pusha
scas
ja
in
sbb
mov
adc
repz
jmp
mov
insb
or
lret
imul
imul
mov
sti
dec
imul
push
add
fsts
fnstcw
fdivs
mov
pusha
add
stos
pop
stos
mov
loopne
jb
ss
add
jo
mov
push
shll
add
outsl
sub
jo
fidivrl
iret
outsb
or
push
insl
ja
ret
je
fidivrs
out
jge
push
pop
fisttps
add
fwait
inc
ds
in
movsb
push
add
out
mov
clc
fdivr
mov
fcompl
push
mov
push
push
fnstcw
push
jne
push
aam
push
ret
cld
mov
mov
mov
push
xor
add
outsb
jbe
push
jmp
out
mov
add
inc
xchg
jns,pn
iret
mov
jno
lret
jge
mov
stos
aas
add
ja
push
push
xlat
jne
jo
pop
add
ja
push
aad
push
mov
insb
jae
ja
js
push
jns
push
jp
add
or
push
fidivrl
sarl
ja
lds
les
je
mov
mov
jmp
ljmp
xchg
in
xchg
mov
push
pop
cs
xchg
xor
xchg
push
pcmpeqw
lcall
fisttpl
mov
cwtl
aaa
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
pop
mov
inc
lahf
mov
mov
sti
push
jecxz
push
imulb
movl
out
out
pop
lock
hlt
clc
stc
cli
sti
clc
lahf
out
cld
std
incb
jecxz
arpl
fldcw
inc
jae
add
imul
xchg
push
add
pop
add
pop
push
add
add
pop
adc
add
repnz
mov
jnp
add
or
add
add
iret
jbe
or
or
test
test
subl
xchg
push
test
pop
pop
adc
xorb
add
pop
xchg
sbb
stos
femms
lods
lods
pop
mov
sbb
scas
add
scas
insl
lods
add
mov
pop
adc
and
sub
pop
sbb
outsl
push
cmpl
mov
aaa
inc
and
and
inc
mov
push
mov
push
sbbb
and
pusha
push
and
push
mov
pop
and
mov
and
add
pop
or
ss
sub
mov
pop
das
ret
sub
sub
inc
dec
xor
mov
mov
es
shrl
sarb
pop
cmp
cmp
add
mov
scas
inc
mov
xor
xor
pop
or
int3
into
or
add
pop
pop
xor
gs
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
ljmp
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
fistl
pushl
xor
jbe
cmp
jl
jge
jno
lcall
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
mov
incl
nop
xchg
xchg
sub
dec
ja
jns
dec
push
out
insl
xchg
lret
js
imul
loope
jp
pop
adc
mov
xorb
add
pop
scas
aas
adc
dec
jg
push
jle
xchg
pop
push
dec
add
push
mov
scas
jge
sub
js
xor
xor
ja
push
ja
jb
inc
cld
fildl
es
xor
mov
add
divl
dec
sbb
and
mov
jg
xor
xchg
jo
push
inc
mov
cmp
mov
inc
push
mov
loopne
mov
sub
xchg
jae
xchg
jp
inc
push
popf
inc
in
addr16
outsl
mov
aaa
add
xchg
jno
lret
push
bound
mov
into
mov
mov
inc
push
sahf
push
adc
mov
insb
add
xchg
mov
add
xchg
xchg
pop
push
data16
rcr
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
pop
sub
mov
push
rorb
add
sti
add
pop
and
cltd
insl
outsb
mov
std
int
mov
add
ja
sahf
jbe
fistpl
data16
or
imul
stos
push
add
and
sti
inc
cli
jp
add
js
mov
data16
shrl
jns
jns
insb
pop
outsb
push
outsl
rclb
push
ds
insl
fisttpl
outsb
cwtl
aam
sbb
jg
fiadds
call
xchg
out
data16
sub
add
adc
outsl
es
bound
out
arpl
push
insl
dec
cli
pop
loopne
iret
sahf
mov
jb
rcr
push
out
in
push
jle
or
insb
push
jne
or
push
aad
fidivrl
divb
fildl
adc
push
xorl
sbb
sbbl
mov
faddl
in
mov
push
sub
into
data16
nop
and
out
xchg
in
xchg
xor
in
xchg
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
cmp
pushf
cmp
aam
lock
jle
push
cmpsb
scas
jo
test
sahf
out
mov
pop
lcall
mov
fmul
mov
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
push
adc
cmp
aas
cmp
adc
add
repnz
add
lods
addb
inc
inc
mov
inc
cmp
out
and
dec
mov
dec
aas
adc
ds
xor
dec
jge
arpl
test
mov
pop
cmp
ds
add
mov
lcall
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
movsb
movsl
mov
lcall
sub
sub
add
add
mov
fildl
ss
and
inc
mov
push
push
push
push
push
imul
cmp
push
push
push
imul
ljmp
pop
imul
nop
cltd
mov
mov
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
jns
jle
adc
test
jb
jae
jo
outsb
pushf
sti
cmp
add
out
jmp
push
rolb
pop
shlb
mov
incl
out
incl
jl
push
add
cmc
repz
push
xor
mov
andb
add
filds
mov
xchg
pop
cmp
test
add
mov
add
mov
push
add
fisttpl
lahf
add
cmc
repnz
imulb
sahf
xchg
addr16
add
pushf
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
xchg
pop
jo
dec
lret
jg
into
xchg
add
mov
mov
test
push
cli
scas
xchg
js
in
out
pop
fistl
js
sub
sub
xchg
push
sub
fcmovne
insb
push
nop
sub
xchg
xor
xchg
xor
insl
lcall
leave
jbe
idivl
mov
sahf
in
fidivrl
shlb
iret
push
lret
mov
xlat
push
std
into
and
out
fldcw
xchg
add
test
jg
jle
jge
and
cmp
push
xchg
and
call
dec
add
pop
add
push
dec
or
adc
div
mov
cmp
adc
dec
or
add
push
stc
pusha
jg
adc
add
or
pop
pop
cmovg
std
pop
repz
sbb
inc
adc
cmpsl
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
aaa
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
cs
xor
sub
sub
push
push
test
lods
mov
add
inc
mov
data16
mov
mov
mov
inc
xor
in
add
outsb
mov
push
mov
mov
xor
out
add
and
pop
outsl
mov
cmpsl
mov
rorl
into
incl
loopne
and
jmp
test
push
es
sbb
outsb
sysret
shrl
pop
mov
add
ds
jmp
xchg
pushf
cmp
in
lock
add
xorps
jg
rorl
adc
pop
aaa
outsl
adc
pop
push
pop
mov
add
xor
sbbl
mov
out
cli
mov
cli
call
pop
les
add
pop
jg
and
add
addr16
xor
mov
adc
jg
sti
jg
add
mov
das
sti
mov
xchg
sbb
cli
jle
mov
inc
loopne
dec
sti
jg
adcl
xchg
adc
push
adc
push
mov
push
adc
jg
cld
jg
mov
nop
cld
mov
mov
roll
std
jg
and
into
jg
jns
and
jg
push
adc
or
xor
and
jle
push
add
inc
xor
and
sub
incl
addr16
inc
lods
decl
rcll
incb
sbb
pusha
data16
popa
xchg
sbb
jg
dec
add
incl
add
lea
jg
inc
insb
or
push
jbe
fsts
pop
add
jmp
int3
push
test
lret
sub
xchg
shrb
je
push
jmp
lods
scas
inc
cmpb
imul
addr16
inc
pop
jle
mov
inc
pop
dec
rcrb
test
pop
add
push
call
inc
pusha
sbb
pop
xor
jg
mov
lea
outsb
xor
xor
jg
xor
push
push
adc
jmp
pop
mov
jg
jle
ljmp
notb
stos
pop
push
stos
pop
stos
pop
pop
mov
in
popf
pop
add
daa
aas
aaa
pop
xor
pop
pop
add
pop
xor
push
jle
add
pop
inc
push
lcall
jle
sbb
jne
jle
push
in
je
pusha
dec
xchg
push
bound
add
mov
push
mov
les
arpl
pop
insl
xchg
popa
das
push
mov
aam
out
mov
xchg
push
dec
inc
push
and
notrack
dec
jno
and
test
aam
sub
push
inc
lea
into
push
fnstenv
fidivrs
jne
push
push
jne
pop
push
jbe
test
push
jnp
push
jp
dec
or
push
js
dec
jbe
fisttpll
add
mov
inc
call
pop
es
or
jbe
outsb
decl
cmp
jle
and
daa
aam
incl
ss
test
pushl
dec
xchg
dec
ja
xchg
inc
subb
mov
insl
adc
xchg
push
inc
call
dec
mov
adc
outsl
push
sahf
inc
out
mov
mov
mov
aas
popf
inc
push
or
mov
pushf
cmp
data16
push
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
repz
sarb
in
mov
xor
aaa
outsb
lcall
stos
test
sbb
cmpsl
addl
ja
xor
inc
sahf
xchg
rclb
or
pop
cs
add
aam
rclb
ja
iret
or
mov
xchg
mov
test
ja
cmpl
inc
divb
mov
add
adc
and
dec
in
in
cmpb
push
insl
mov
andb
dec
cmc
jns
mov
add
negl
orl
lea
out
lds
xchg
xor
call
xchg
inc
and
cmp
lock
cmp
push
jmp
cmp
icebp
or
std
punpckhwd
push
in
add
mov
cmpb
decl
add
pop
testb
dec
push
mov
mov
pop
push
inc
push
call
push
mov
xor
cmp
jle
sti
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
incl
push
shlb
in
push
inc
iret
hlt
lcall
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
inc
loope
adc
test
dec
push
push
incb
dec
add
adcb
pusha
adc
aaa
incl
mov
movsb
xor
mov
lcall
xchg
or
sub
cmp
add
sti
push
std
pushl
adc
push
add
pop
and
or
cld
pop
and
mov
and
in
call
jg
fldl
cli
idiv
loop
sub
sarl
decl
decl
dec
and
pop
lret
mov
leave
fcmovbe
pop
pop
inc
cmovs
outsl
push
pop
aaa
mov
push
push
push
shll
icebp
push
mov
roll
dec
jnp
mov
sahf
ret
incl
pushl
fisttpl
ljmp
lahf
inc
in
fcmove
jnp
push
inc
inc
pop
inc
pop
out
ss
mov
movsb
out
fldcw
push
stos
push
popf
inc
cmpsb
dec
dec
inc
imul
mov
fsts
add
and
ss
mov
out
push
shrb
rcl
outsb
shrb
es
push
jb
stc
xor
iret
insl
cmp
xchg
adc
daa
outsl
pop
and
dec
cmpsb
imul
int
push
push
call
inc
ljmp
push
ljmp
movsl
and
dec
in
pop
int
repnz
decl
mov
cmpsb
popfw
cmp
aas
decl
fwait
decb
cwtl
xor
and
push
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
and
imul
xchg
dec
out
push
sub
lcall
xchg
aam
ljmp
and
add
das
xor
mov
push
add
sarb
aad
or
faddl
cmp
push
push
jnp
jp
or
jl
push
imul
jl
push
jge
mov
jg
es
jbe
adc
fidivrl
push
dec
data16
pushw
dec
repnz
repnz
jae
pop
fidivrl
push
mov
repnz
loope
out
add
in
add
int3
outsb
nop
and
leave
negl
pop
add
inc
push
push
pop
add
sbb
adc
push
adc
or
push
addb
jnp
lahf
dec
es
addl
cmp
adc
sysret
jg
and
xchg
out
push
sub
iret
sbb
sbb
jo
mov
cli
pushl
clc
push
idiv
push
sub
jg
mov
icebp
dec
pop
ja
mov
lock
inc
sub
jg
mov
icebp
leave
fucomip
or
je
daa
jg
mov
or
add
loope
xchg
mov
cld
jp
es
xchg
test
cmpb
pushl
add
out
xchg
decl
mov
jg
dec
in
sarb
dec
stos
pop
ja
dec
and
mov
icebp
idiv
inc
lcall
fsub
lahf
inc
mov
push
int3
lcall
push
dec
mov
jle
mov
ficoml
mov
call
decl
pop
push
pop
ljmp
or
scas
jmp
lcall
out
mov
lcall
push
jns
decl
mov
jmp
xchg
jmp
mov
push
xchg
pop
sti
popf
jmp
adcb
xchg
out
xchg
add
lcall
jmp
mov
lret
jg
out
mov
or
inc
push
test
cmp
pop
add
ja
lahf
aam
stc
inc
or
nopl
pushf
xlat
inc
and
pop
push
adc
shlb
or
inc
xor
push
pop
lcall
call
nop
sub
das
or
mov
jnp
push
or
lahf
mov
and
adc
or
sub
pop
ljmp
into
pop
push
sbb
push
xor
dec
sti
sbb
push
or
and
fwait
sbb
push
sbb
outsb
stos
arpl
dec
or
xchg
mov
inc
add
orb
push
add
inc
mov
cmpsl
adc
pop
sbbl
mov
add
add
inc
xor
insl
jo
arpl
add
popa
xchg
push
icebp
xchg
test
mov
mov
sub
mov
xor
xchg
xchg
scas
fisubs
cmpl
dec
ljmp
xchg
movsb
xchg
daa
insb
lods
or
adc
fisttpll
aam
jno
ret
add
ljmp
jb
popa
jecxz
and
mov
pop
push
push
jno
scas
add
push
popa
adc
sbb
mov
add
push
addl
add
mov
adc
sbb
push
mov
fs
add
les
add
inc
fmull
jae
push
xchg
xor
popa
shlb
fwait
mov
xor
jb
lods
xor
add
inc
mov
add
lea
inc
jno
rol
add
or
filds
lods
movsl
sbb
pop
adc
adc
add
add
ss
sbb
mov
add
pop
jo
inc
inc
jnp
subl
fcompl
fcomps
add
fdivs
adc
outsl
shrb
jo
xor
dec
ss
ret
xor
and
imul
sub
and
insb
adc
lcall
fildl
out
sbb
aas
incl
sub
ja
sbbl
inc
mov
shl
mov
dec
pop
insb
jne
addr16
mov
popf
xor
fwait
add
sbb
fcomps
or
add
or
and
sbb
adc
scas
arpl
and
jbe
add
ss
pop
push
sti
popf
xchg
icebp
or
cwtl
push
mov
xchg
aad
cmp
insb
jl
inc
je
sbb
pop
add
push
sbb
add
xchg
push
xor
negb
sub
in
push
dec
in
dec
mov
sbb
dec
adcl
sub
xor
xchg
dec
sub
and
adc
mov
dec
outsl
pavgw
add
xchg
ret
pop
pop
adcl
dec
es
add
push
cmp
xor
insb
movsb
sub
scas
roll
ret
add
lcall
cmp
arpl
imul
sbb
jg
pop
shrl
jge
cmp
adc
js
cmc
mov
or
and
jecxz
xchg
mov
xor
add
rorb
push
add
pop
fldl
imul
sahf
sub
je
popf
xchg
or
jo
jae
xor
jno
sub
add
addl
pop
int
mov
lods
ret
in
out
fisttpl
imul
lret
sbb
mov
inc
loope
add
inc
jg
mov
adc
pushf
mov
std
movl
mov
je
xor
add
push
cmp
fxch
mov
rolb
or
inc
arpl
sub
jne
inc
out
arpl
shll
sub
and
mov
pop
sub
and
and
push
aad
or
mov
xor
sub
pusha
push
outsl
idiv
inc
mov
inc
fnstenv
mov
imul
adc
insb
cltd
pop
testl
insl
cmpsl
insb
sbb
sti
dec
mov
pushf
movb
inc
and
fs
adcl
cmp
push
ds
inc
popf
dec
fsubs
inc
insb
cs
rcpps
push
dec
push
jb
inc
inc
inc
shll
jno
add
pop
les
imul
jecxz
insb
push
sbb
ja
insb
dec
insb
sahf
daa
loope
cmpsb
inc
push
inc
jo
push
outsl
roll
cmp
jo
jb
adc
pop
mov
mov
lock
add
stos
dec
and
es
fnstcw
jae
jae
push
ss
sub
pop
test
popf
js
hlt
cwtl
imul
xchg
rcl
push
sbb
fstps
les
cwtl
push
test
jb
mov
inc
outsl
sub
xor
mov
testl
insb
mov
sbb
ficompl
pop
pop
and
jg
or
je
insl
dec
outsb
dec
andb
jae
sub
mov
pop
sub
insl
ds
push
js
loop
pop
add
add
sbb
mov
movsb
dec
adc
add
or
or
push
imul
in
lcall
add
xor
stc
push
es
cmp
insb
sub
in
fisttps
shlb
add
and
mov
jmp
lahf
imul
and
shlb
ds
inc
lret
insb
inc
sbb
addl
and
ret
imul
adc
sub
insb
je
out
lock
jg
nop
inc
sub
movsl
mov
pop
ror
mov
inc
lods
pusha
add
sbb
add
xchg
sub
les
inc
popl
push
dec
nop
sbb
add
rorb
sbb
cmp
or
adc
mov
enter
movb
js
mov
mov
fldl
pushl
jne
sbb
and
mov
mov
add
ret
xor
and
inc
test
ret
push
gs
lods
cs
jle
xchg
or
inc
inc
dec
cmp
out
xchg
dec
pop
lret
inc
or
fadds
pop
sub
mov
nop
cmp
loopne
mov
xlat
adc
xor
test
dec
inc
sbb
pusha
insl
les
xor
dec
xchg
sbb
out
arpl
outsl
bound
inc
cmp
insb
mov
cmpsl
into
push
call
jbe
pusha
lds
test
icebp
sub
pop
push
push
mov
push
insb
sbb
jbe
in
mov
shl
call
push
sub
sub
pop
outsl
dec
shrl
sbb
dec
cld
addr16
fs
and
test
pop
dec
mov
int3
xor
push
pop
shll
mov
jb
shrl
add
sbb
mov
nop
fs
xor
mov
cmp
jns
cltd
icebp
mov
dec
test
pop
inc
cmp
and
cltd
push
out
mov
push
daa
xor
dec
adc
pop
push
fcom
mov
aas
scas
inc
sub
adc
pushf
lds
xor
test
movb
jnp
pop
sub
push
jb
sahf
cmpsl
mov
push
inc
sbb
jge
sbb
add
sub
jnp
push
inc
and
cmp
pop
or
arpl
jnp
xchg
cmp
pop
pop
mov
je
xlat
adc
xchg
dec
mov
imul
movl
sbb
pop
sub
sbb
cmp
ss
ret
lcall
jmp
jge
push
or
inc
and
cmp
or
sbb
lcall
inc
or
add
and
and
lret
mov
decb
push
and
adc
add
push
add
push
or
or
add
gs
in
call
pop
mov
sbb
sub
div
jbe
mov
or
push
or
adc
idivb
push
adc
push
inc
pop
adc
sbb
push
sub
sti
push
mov
push
inc
sbb
sbb
cs
or
xor
and
lea
jbe
jle
bndldx
add
xor
sbb
push
add
sbb
xchg
add
adc
cmp
push
sbb
pop
shll
xor
jl
sub
and
cs
or
outsl
push
push
or
or
add
adc
in
jmp
ss
sbb
subps
inc
pop
sbb
push
sub
or
and
mov
and
sbb
add
sub
sbb
lods
add
pop
sbb
adc
adc
sbb
adc
fadds
loop
and
and
xor
sbbb
push
and
pushl
pop
sbb
push
or
xor
or
or
or
add
outsl
or
xor
push
cmp
and
sub
xchg
adc
sub
aas
and
jnp
or
adc
wbinvd
adc
or
push
adc
jbe
xchg
cmovne
xor
add
or
daa
add
lcall
adc
xor
daa
or
cmp
daa
aas
pushl
and
sub
or
cmp
es
xor
dec
sbb
stos
loop
ds
push
bswap
add
or
das
adc
ljmp
adc
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
jmp
mov
or
adc
daa
adc
decl
sbb
or
or
es
mov
xchg
daa
cmp
xor
and
jg
sub
or
and
inc
and
or
add
mov
and
or
decl
scas
pop
dec
adc
or
pop
adc
pop
and
or
or
je
rcrb
outsb
sbb
lock
jo
scas
sub
ja
sub
sub
jg
lock
jno
lock
push
cmp
ss
aam
inc
lret
das
loop
xorb
lock
lock
or
dec
sub
sbb
rcr
mov
push
push
adc
push
inc
adc
ret
push
jg
pop
cmp
sub
push
or
bound
jo
or
or
incl
rdpmc
pop
and
or
push
sbb
xchg
jb
xor
dec
sbb
cmp
adc
es
xor
jp
cmp
adc
clc
outsl
jg
cmp
dec
add
cmp
incl
adc
lock
sbb
add
mov
incl
push
or
add
xor
cmp
sub
decb
and
mov
adc
fistps
repnz
mov
or
xor
mov
outsl
loop
jno
dec
adc
push
add
sub
fisttpl
mov
xor
out
cmp
push
sub
lock
add
push
clc
jmp
pop
adc
adc
inc
dec
outsl
and
xor
out
push
jae
testb
add
and
inc
sbb
add
and
dec
sub
cmp
inc
mov
add
incl
push
push
or
cmp
or
mov
add
cmpsl
or
dec
inc
outsb
fadd
shrl
push
mov
inc
xor
bound
adc
outsl
jg
mov
add
insl
fmull
and
xor
fistpll
call
adc
cmp
adc
adc
push
and
sub
lock
fcoms
psubsb
sub
subl
and
jno
xor
adc
and
sar
sbb
push
xor
or
or
mov
mov
pop
aas
dec
pop
pop
imul
pusha
loopne
push
sbb
and
lock
add
lods
cli
shr
inc
pop
pop
adc
inc
ds
decl
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
adc
call
loopne
and
sbb
adc
xor
xor
daa
dec
clc
ljmp
test
xor
femms
push
sbb
sbb
adc
aaa
and
or
aaa
or
sbb
lock
adc
lock
fdivr
jmp
cmp
dec
jnp
jne
and
adc
sbb
sub
sub
inc
and
mov
add
cs
pop
adc
adc
lock
add
jb
in
outsl
clc
ret
jns
dec
cmp
push
sub
sbb
outsl
in
jmp
imul
mov
pop
pop
and
inc
lock
add
out
lcall
sub
add
inc
jg
adc
inc
push
mov
cmpsb
in
scas
cli
scas
aam
jb
rolb
pop
jno
and
and
cld
cmp
jl
lds
sub
sub
pop
insl
shll
and
xlat
sub
xchg
sbb
aas
mov
xor
push
inc
xor
and
negl
mov
and
add
push
or
fiadds
cmp
lods
xor
push
xor
push
pop
fsubl
outsb
dec
xor
fnsave
adc
and
stos
fisubrl
out
inc
and
and
std
aas
pop
xchg
sbb
and
pop
ud2
fildll
sarl
sub
aaa
push
cmp
adc
sub
pop
icebp
or
adc
push
xor
mov
adc
imul
fcomip
xor
or
es
adc
ja
add
dec
pop
mov
cmp
sbb
add
sbb
dec
pop
inc
and
movsl
or
repz
sti
jmp
incl
ds
sbb
dec
add
loopne
jae
push
mov
push
mov
adc
fsubl
sub
das
test
push
sbb
adc
out
jp
sub
and
add
sbb
adc
daa
pop
adc
aad
cli
mov
lret
adc
adc
aaa
dec
or
inc
push
and
mov
mov
dec
push
sub
push
adc
cmpsb
das
jbe
xchg
daa
sbbb
dec
add
jo
jg
push
adc
jg
popf
and
ficompl
imul
or
dec
pop
cmp
test
or
dec
mov
in
sbb
xor
push
dec
ss
add
outsl
jg
adc
pop
sbb
add
lock
add
sbb
mov
sbb
nopl
sbb
icebp
pushl
add
sbb
sub
or
cmp
jbe
add
lock
or
or
dec
sub
sub
xor
push
or
pop
scas
clc
incl
and
cmp
inc
inc
push
sbb
add
pusha
je
xor
lock
js
mov
or
or
xor
insb
decl
sbb
rorl
scas
xor
xor
sbb
pop
stos
stos
mov
add
push
push
pop
push
sbb
sti
outsl
mov
pop
aaa
and
es
aas
enter
inc
cs
pushl
sbb
sub
adc
lock
lock
add
lock
add
add
pop
hlt
cmp
lock
sub
lock
popa
mov
sbbb
sbb
add
xor
cmp
adc
pop
or
and
mov
push
adc
or
push
sbb
cmp
unpcklps
cmp
push
lods
ljmp
xor
adc
xor
sbb
sub
ret
sbb
adc
mov
mov
push
sub
or
sbb
mov
fidivs
jae
aas
adc
push
push
sub
adc
pop
sbb
jg
or
stos
cmp
pop
mov
mov
dec
test
mov
imul
outsb
jle
decl
lea
fsubrs
xchg
pop
sbb
leave
add
add
adc
pop
sbb
add
fmulp
add
jne
push
pop
push
jb
pop
sub
aaa
outsl
pop
cld
outsl
cmp
push
dec
push
cs
fs
lahf
dec
in
movswl
dec
inc
add
pop
xor
add
add
fsts
add
and
add
outsb
cmpl
decl
movntps
push
pop
adc
adc
push
and
sbb
inc
pop
or
jne
sub
push
sub
fdivrp
int3
pop
sub
sbb
inc
push
push
inc
or
push
cmp
mov
mov
and
sub
cmpsb
pop
paddb
or
push
cs
sub
or
sbb
or
call
sbb
adc
adc
daa
or
insl
or
add
and
pop
push
xchg
movsl
adc
pop
pop
fwait
jle
sub
bound
sbb
or
out
cli
xchg
js
or
xor
adc
push
or
adc
jg
xchg
or
adc
add
pushl
adc
push
subb
lock
add
and
wbinvd
push
and
add
out
push
dec
xor
dec
adc
sub
mov
lcall
sbb
nopl
or
and
shlb
sbb
jb
ja
pop
hlt
inc
inc
cmp
test
adc
cmp
mov
xor
popa
test
sbb
aaa
sub
arpl
sarl
adc
and
sbb
inc
cmp
pusha
das
push
mov
push
pop
adc
mov
push
or
push
rolb
and
adc
or
mov
ss
push
xor
in
pop
addb
loop
add
cmovno
movsl
or
sbb
sbb
sti
mov
or
xor
inc
mov
loopne
sbb
sub
push
das
mov
adc
ds
aas
push
cmpsb
push
inc
or
mov
adc
cmp
loopne
inc
add
call
dec
sbb
cmp
fidivrs
pop
pop
mov
jb
sbb
add
or
sbb
sti
decl
adc
xor
sub
es
sbb
jg
pop
xor
or
push
sub
or
adc
sbb
pop
sub
data16
pop
xchg
pop
push
pop
add
sbb
sub
adc
sbb
icebp
subl
adc
push
push
sub
dec
dec
std
mov
repnz
sub
xchg
sbb
and
mov
ljmp
add
xor
push
push
inc
inc
sub
das
sbb
pop
inc
inc
dec
jle
les
add
and
xor
bswap
rcrl
test
cmp
adc
femms
aaa
dec
adc
or
push
mov
adc
ds
cmp
and
sbb
add
or
dec
pop
sub
xor
adc
mov
pushl
cmp
push
sbb
ret
inc
or
std
mov
ds
adc
pop
adc
test
adc
sub
or
in
add
push
adc
sub
sbb
pop
and
add
inc
dec
adc
sbb
push
adc
sbb
dec
pop
or
and
jbe
out
js
and
cli
or
aaa
add
push
inc
or
das
or
add
or
and
sbb
and
cmp
cmp
xorps
mov
adc
or
inc
or
bound
dec
imul
pusha
adc
dec
ds
sub
pop
or
add
dec
insb
in
mov
imul
cmpsl
or
pusha
pushl
sub
lods
daa
push
arpl
sbb
sbb
pop
lock
jl
cld
add
dec
cmp
adc
or
bndldx
adc
adc
add
jo
andl
xchg
sbb
ds
fucomi
lcall
xor
push
dec
fmuls
pop
ds
rorb
xchg
or
loopne
and
aad
ljmp
add
or
adc
mov
cmc
mov
cmp
aam
inc
or
or
push
adc
adc
lock
add
xchg
aaa
popa
push
das
or
pop
add
adc
inc
adc
mov
inc
mov
sub
pop
popa
lahf
pop
sub
mov
and
and
and
pop
inc
adc
sub
call
adc
ss
lcall
push
or
inc
inc
cmp
jo
cmp
orb
loop
adc
notl
cld
jmp
ja
sbb
sub
sbb
adc
dec
pop
mov
and
inc
push
aaa
cli
ljmp
test
adc
cmp
daa
inc
add
pop
adc
sbb
ljmp
pop
and
out
imul
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
in
out
inc
add
adc
add
push
cmp
sub
outsl
jg
sub
push
sbb
add
lcall
sbb
dec
nop
mov
and
or
outsl
dec
dec
sub
push
sub
sbb
jo
cmp
add
outsb
xor
pop
mov
pop
mov
dec
and
sysexit
cmp
je
dec
mov
add
sbb
push
nop
sbb
ss
sbb
push
mov
inc
invd
shrl
pop
or
sbb
push
push
pop
adc
pop
or
xor
lock
and
outsb
les
aad
push
pcmpgtw
or
lahf
add
jo
pslld
pop
mov
cli
mov
or
push
jo
sbb
mov
sub
adc
xor
xchg
cmp
cmpb
out
add
sbb
shl
xchg
aam
es
pop
loope
push
data16
fidivs
nop
pop
pop
sub
sub
outsb
add
fldl
or
cmp
add
or
push
lock
jecxz
add
or
push
stos
outsb
push
and
or
add
fmull
xchg
sbb
adc
std
dec
push
lock
lock
add
bound
pop
aad
lea
pop
insl
xchg
xor
or
push
bound
mov
or
xor
mov
lock
pop
add
add
lock
js
xchg
dec
or
outsb
test
or
notb
add
scas
aaa
sub
es
adc
or
mov
or
dec
xor
adc
daa
pop
push
dec
or
pop
add
push
and
int3
sbb
loop
shlb
inc
push
push
imul
add
and
clc
pushl
jo
adc
or
or
sbb
adc
xor
outsl
pop
pop
xor
data16
aam
pop
push
or
add
decl
dec
push
ret
js,pn
push
cwtl
sbbl
or
adc
std
divps
ret
push
sub
sbb
jp
or
or
jge
test
sahf
sub
or
adc
int
jb
out
xchg
push
and
xorl
and
sbb
jle
sbb
adc
sbb
cmp
bound
push
push
mov
pop
aam
mov
cmpsb
jbe
or
jbe
arpl
jecxz
or
lcall
loopne
push
lock
lock
and
lcall
inc
fnsave
jg
decl
adc
je
adc
and
sbb
aas
cmp
mov
add
push
out
mov
es
cmpsb
inc
push
into
sub
push
scas
mov
and
add
sahf
rorl
add
adc
adc
cltd
shl
les
lock
xor
sub
fwait
ss
sbb
sbb
adc
or
and
xor
xor
in
or
sahf
add
adc
adc
fidivs
femms
das
dec
or
bound
lock
or
dec
dec
xor
add
add
sbb
lcall
xchg
pop
mov
hlt
sbb
pop
mov
shlb
push
popfw
ss
lcall
xlat
and
adc
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
lcall
faddl
and
lock
cmp
add
popa
xchg
pop
sub
mov
push
or
shlb
jle
cmp
sbb
lock
adc
adc
lock
sbb
add
clc
jo
pop
mov
lock
dec
or
push
xchg
mov
add
inc
cs
mov
cwtl
push
mov
sbb
inc
lock
push
call
mov
pop
and
les
ss
sbb
xor
sbb
push
sub
cs
mov
and
or
cmp
or
add
das
fsubrp
clc
add
mov
jl
sub
sbb
mov
add
movsl
add
adc
decl
xor
or
cmp
pop
mov
sbb
push
adc
sbb
push
adc
and
xor
push
mov
and
adc
mov
add
dec
cmp
jg
das
add
lock
pop
add
ss
jb
std
out
mov
dec
arpl
and
ljmp
add
cmp
sub
inc
push
sbb
and
xor
xor
std
out
push
sub
dec
dec
push
mov
xchg
push
sbb
and
sub
out
jo
sub
adc
and
xor
mov
das
xor
xor
cmp
and
dec
mov
in
std
and
cmp
inc
dec
sub
or
xchg
or
inc
xor
ds
out
xor
dec
inc
push
and
cmp
cmp
lcall
adc
dec
aam
pop
and
je
jp
cmp
and
cmp
sub
std
jg
incl
xor
shl
xor
inc
sub
push
ds
ljmp
mov
dec
xor
dec
xchg
jle
dec
push
push
push
lret
xchg
cmp
movsl
xor
pop
rcrl
cmp
arpl
mov
cmp
xor
fsubr
incl
dec
jne
fs
cmp
sub
dec
pop
mov
push
push
pop
dec
lods
ds
add
lcall
and
pop
inc
cmp
and
inc
cmp
dec
cmp
push
test
jo
xor
cmp
fstpt
jl
lock
pop
dec
inc
add
mov
mov
sbb
add
push
push
sbb
xchg
lock
aaa
lock
mov
add
sub
add
aam
lock
inc
les
push
add
outsb
mov
push
loop
add
xor
cwtl
dec
rclb
xchg
lret
or
mov
push
add
or
in
sub
push
int
outsb
or
inc
lock
adc
mov
add
push
push
add
xchg
sbb
or
add
insb
push
imul
sbb
scas
insl
mov
in
lock
add
add
sub
push
or
mov
movl
cld
or
jbe
adc
or
pusha
add
add
mov
ficoml
jnp
xor
or
or
sub
sbb
lcall
push
orb
mov
lock
xor
fsubr
adc
xor
mov
dec
or
and
push
in
adc
or
adc
or
insl
out
jnp
adc
sbb
adc
fdivp
adc
or
das
push
or
sbb
test
dec
lret
adc
push
movups
mov
xor
sbb
icebp
add
fs
and
outsl
jne
das
subl
iret
inc
add
push
jno
jns
pop
rclb
adc
cmp
or
adc
sbbl
and
dec
cmp
lds
fadds
push
mov
pop
adc
pop
cmc
mov
sub
leave
xchg
iret
add
add
std
testl
sub
shrl
rolb
and
jo
adc
lods
cmp
fstl
mov
sbb
add
or
ds
and
insb
pusha
adc
data16
dec
fstp
fnsave
adc
mov
or
outsb
mov
or
add
add
jnp
mov
xor
and
sub
adc
sub
xchg
lods
insl
scas
xor
inc
mov
das
in
sub
and
or
mov
roll
outsl
lret
push
fisttpl
and
addb
sub
mov
and
insl
jnp
xor
or
stc
arpl
daa
rorl
bound
leave
ret
mov
add
xor
fildl
std
fcmovne
mov
or
sysret
imul
adc
or
outsl
insl
dec
adc
pop
dec
popa
mov
pusha
imul
xor
aaa
mov
insl
sbb
sarl
cltd
mov
testl
mov
and
pop
test
adc
divl
mov
scas
arpl
add
in
fadds
inc
pusha
dec
sti
inc
imul
test
sbb
mov
adc
and
mov
xchg
lods
jbe
or
imul
mov
xlat
fstpt
mov
das
shll
fisubs
pop
lds
jecxz
arpl
adc
sarl
add
cmp
ja
xchg
pop
add
xchg
or
inc
push
push
out
jmp
inc
subl
or
adc
aaa
daa
pop
cmc
scas
push
cmp
sbb
sbb
xor
add
bound
add
and
mov
mov
add
lea
lret
inc
inc
and
cmp
push
and
inc
mov
add
push
inc
sub
xor
or
adc
xlat
sub
adc
sub
inc
adc
loopne
int
push
push
or
pop
ss
call
or
es
adc
sbb
faddl
or
and
inc
xor
pusha
fimull
insb
out
jo
add
js
lcall
add
mov
push
movsl
jle
sub
ficompl
sub
sub
xor
fnsave
sbb
and
sub
sub
cmp
xor
jbe
fidivrl
sbb
or
or
mov
xor
pop
mov
jns
add
xor
sbb
xor
pop
and
mov
imul
dec
es
jge
sbb
pop
inc
and
add
push
sbb
ror
cmp
inc
sub
pop
push
subb
cmp
adc
test
fidivrl
add
test
xor
add
lret
push
add
es
mov
mov
inc
out
jle
xlat
dec
jne
popa
add
enter
mov
pop
add
mov
add
mov
jecxz
movsb
add
pop
insl
insb
mov
push
xchg
adc
jl
inc
sbb
xchg
add
adc
notl
call
or
push
fisubl
push
mov
pop
xor
pop
mov
mov
jo
push
insl
sub
or
mov
xor
add
jle
inc
or
and
adc
add
push
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
