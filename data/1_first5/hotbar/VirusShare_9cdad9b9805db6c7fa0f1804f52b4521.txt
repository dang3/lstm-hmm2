divl
in
mov
mov
subb
lea
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
xchg
and
add
and
jbe
cmp
jae
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
insb
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
call
fbld
push
push
push
mov
push
into
sub
sti
jmp
push
negb
pop
push
push
sahf
jp
push
inc
fistl
mov
test
ds
jmp
pushl
shrb
pushl
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
inc
ljmp
pushf
push
outsb
pop
pop
andl
cmpl
sbb
push
cmp
aam
std
out
jae
dec
call
add
mov
jb
inc
push
inc
in
or
push
push
in
fstpl
movb
inc
aas
sbb
incl
sbb
add
call
jle
add
in
jle
popa
mov
mov
mov
lock
add
mov
hlt
sbb
pop
dec
push
jl
xchg
addb
xor
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
push
sbb
pop
sti
push
mov
cwtl
in
push
lock
cmpsl
enter
faddl
test
insl
xor
fsubrs
cmp
push
mov
mov
push
cmpsb
add
neg
sbb
pop
sarl
or
std
orl
sub
mov
out
push
stos
sbb
shll
inc
push
into
add
push
scas
xchg
pop
push
or
loop
shrl
dec
in
push
les
nop
cmpsb
jae
sub
in
push
jle
dec
push
call
pop
sahf
or
ret
out
sub
inc
in
sbb
adc
adc
lock
and
push
push
mov
in
inc
push
adcb
mov
les
push
shl
fsubl
leave
cmp
jge
mov
jmp
mov
iret
jnp
pop
and
push
inc
inc
dec
push
mov
and
and
idivb
cmp
adc
push
int3
push
pop
mov
aaa
lret
jp
jb
mov
xchg
add
fstpl
push
and
inc
cmp
jae
out
pop
pop
and
cmp
fs
push
mov
add
mov
sbb
add
ljmp
pushl
sub
xchg
andl
dec
fnstsw
push
adc
add
sbb
ja
addl
xor
lea
inc
pop
jmp
push
sub
or
mov
mov
push
rcrl
dec
lock
add
call
cli
and
xor
dec
es
bound
popf
sbb
pop
xchg
gs
fsubl
repz
push
inc
mov
add
xor
dec
lock
sbb
jo
pop
rol
hlt
push
rolb
push
or
rolb
dec
mov
popa
in
dec
and
loope
push
fs
addl
sbb
inc
out
nop
xlat
and
and
or
and
repz
mov
mov
jnp
fwait
je
bound
add
lods
punpckhdq
cmp
mov
push
daa
mov
int3
push
jle
scas
aas
xchg
mov
or
mov
out
fisttps
fs
aad
sbb
scas
sbb
push
cmp
mov
adc
inc
outsb
pop
test
jne
data16
pop
dec
cs
sbb
mov
pop
fldcw
into
sub
and
adc
xor
sub
mov
sub
movsl
xor
pop
sub
inc
movsl
fldl
push
repz
jmp
nop
pop
pushf
pop
idiv
and
sbb
or
or
andb
adc
adc
subb
sbb
sbb
dec
mov
add
push
pop
or
xlat
push
push
popa
ja
int
sbb
sarl
cltd
mov
inc
add
push
jmp
fdiv
xchg
sbb
xor
jmp
mov
jae
push
mov
pop
sub
push
popa
pushf
xchg
nop
mov
and
jns
fisubrl
mov
push
push
test
inc
hlt
cmpsl
test
push
loopne
pop
mov
mov
out
lea
or
xor
push
pop
push
push
adc
loope
je,pt
ret
fiaddl
jl
fildll
or
notl
mov
ret
adc
add
push
cmp
ss
sub
pop
rcrl
push
ds
mov
movsl
cltd
out
fimull
test
jl
or
int
ret
test
mov
jns
ss
outsb
rclb
mov
jno
stos
inc
or
sysexit
add
dec
mov
hlt
je
sbb
mov
lea
mov
mov
mov
aaa
je
nop
push
loop
jg
adc
cli
mov
popf
mov
js
jno
ficoml
imul
push
adc
sbb
movzbl
pushf
js
lahf
lock
das
push
cmp
or
lret
adc
lahf
or
mov
mov
xor
push
xchg
and
adc
and
lret
out
addr16
pop
addl
mov
das
push
stc
or
xchg
and
mov
xchg
iret
mov
out
dec
popa
push
hlt
bound
xor
add
inc
decl
mov
enter
hlt
test
pushf
ficompl
ss
aad
movsb
and
xor
mov
lock
jg
cmp
jne
pop
mov
sub
sbb
and
push
icebp
cmp
je
sbb
dec
pushl
pop
in
into
push
xchg
bound
dec
adc
or
cli
dec
sti
pop
mov
mov
and
sub
lds
push
pop
stos
ja
mov
cmp
add
divl
push
sti
mov
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
pop
push
pop
repnz
clc
pop
push
in
sahf
mov
push
pop
push
pop
jmp
sub
sub
cmp
mov
pop
ret
mov
icebp
into
or
mov
adc
or
sbb
pop
iret
scas
bound
and
iret
mov
mov
sbb
ret
adc
stos
push
fiadds
jns
incb
add
add
push
dec
push
andl
push
outsl
mov
add
jl
push
mov
xchg
lret
cmp
pusha
adc
daa
or
ret
pop
pop
ret
push
callw
xchg
add
ss
or
mov
push
dec
pop
mov
and
stc
test
jne
pop
ja
mov
subb
out
dec
inc
aam
fistpl
add
pop
or
jne
js
sub
pop
cmp
mov
jge
sbb
jecxz
out
cwtl
cmp
je
movb
jle
mov
mov
adc
loopne
mov
lea
push
mov
imul
mov
lock
mov
addr16
dec
mov
adc
leave
ret
lods
insl
cmp
cmp
cmp
push
add
or
ret
jle
jge
cmp
std
or
adc
adc
add
inc
inc
pop
adcb
mov
or
stc
jne
mov
insl
pusha
jo
jmp
xchg
in
or
cmp
loopne
push
repnz
inc
repz
push
js
pop
cld
ja
lea
decb
pushl
inc
add
jmp
sub
pusha
mov
pop
popaw
fcoml
pop
pop
pop
bound
popa
push
loop
jle
pop
inc
shlb
push
in
or
leave
je
add
stc
rorb
mov
loope
insl
push
push
mov
cwtl
ss
cli
push
push
bound
push
xor
sub
xchg
cmp
push
jno
push
push
push
mov
xchg
pop
inc
pop
pop
movsl
mov
hlt
lods
aam
loopne
je
test
ret
fcompl
int
mov
das
icebp
pop
cmp
lahf
push
ds
add
add
inc
xorl
addl
sti
jecxz
sub
sub
push
leave
adc
cmp
cld
pop
jl
in
aaa
js
out
adc
into
je
cmpl
pop
bnd
mov
cmp
jne
push
push
imul
dec
mov
jl
pop
jmp
in
test
dec
jnp
loopne
dec
dec
dec
xor
push
inc
sub
jp
scas
and
sub
or
jge
jmp
and
adc
xor
jg
inc
fimuls
movb
jb
out
sbb
add
into
cld
pushf
ja
adc
cmp
in
push
inc
or
shlb
adc
ret
jno
je,pt
or
rcl
movb
pushf
jb
das
mov
cmp
adc
mov
das
mov
or
jne
test
or
cmp
mov
push
call
outsl
adc
das
dec
into
push
jae
adc
icebp
push
lds
ss
cltd
pop
sbb
push
cli
mov
push
ja
mov
ds
push
mov
mov
inc
shlb
adc
lcall
ja
stos
mov
ret
inc
testb
or
dec
jns
mov
inc
loop
add
scas
push
int3
inc
clc
sub
mov
xchg
mov
xor
cmp
pop
cld
js
add
push
daa
and
jge
mov
mov
jle
ret
shlb
rol
mov
inc
cmp
mov
adc
xchg
push
jbe
loopne
fstl
add
xor
add
mov
or
adc
test
inc
adc
pop
xchg
mov
push
jmp
ljmp
pusha
fimuls
jge
dec
jle
imul
pop
push
or
cltd
add
inc
fdiv
cmp
ss
mov
stc
or
popa
in
lds
jge
sarb
leave
rcl
sarb
xlat
xlat
pop
xchg
jo
and
les
xor
or
cmp
or
data16
sub
mov
add
add
push
call
push
fistpl
jmp
popa
dec
pushf
dec
stc
clc
mov
sar
inc
fcoms
fisttps
add
or
mov
pop
pop
jmp
sbb
stos
mov
mov
iret
fs
movl
jnp
insl
inc
dec
adc
sbb
adc
fsin
jp
ret
pop
div
mov
sbbl
push
mov
push
js
mov
jmp
and
divb
out
push
xor
inc
lahf
enter
add
cmpsb
jns
sbb
pop
and
sbb
push
push
sahf
nop
cmp
add
stos
mov
push
xchg
xlat
and
sbb
loopne
jb
sbb
or
shl
sub
sbb
cmpb
pop
sub
mov
leave
inc
adc
pop
mov
inc
sbb
cmpsl
pushf
pop
and
das
sbb
mov
sbb
add
pusha
pop
mov
or
into
adc
pop
test
mov
iret
js
push
sbb
dec
or
fsubrl
xor
adc
pop
incl
lods
dec
or
lcall
xor
cmp
ja
or
iret
divl
or
je
cmp
popf
addl
lds
pop
sbb
inc
outsl
stos
icebp
mov
mov
push
cltd
pop
negl
add
inc
mov
addb
push
jge
push
rcrl
adcb
push
pop
mov
push
sbb
mov
xor
sub
add
mov
push
jbe
test
xor
stc
cmp
and
je
and
shr
ja
sub
dec
je
push
adc
in
jge
and
jnp
adc
jmp
sbb
sbb
icebp
sbb
sahf
test
movsb
fnstsw
dec
and
mov
jmp
mov
jecxz
jne
xor
mov
jmp
add
stc
or
insb
xor
and
ljmp
jge
add
mov
scas
adc
or
pop
cmc
sub
mov
xchg
adc
push
mov
pmaxsw
jecxz
loopne
add
or
std
mov
sub
mov
aam
xor
push
push
sub
stos
in
pushl
js
inc
into
push
in
in
mov
adc
divb
mov
adc
jmp
es
push
cmp
je
cmp
and
jmp
inc
sbb
leave
adc
adc
mov
add
fstpl
imul
shlb
scas
push
and
push
jmp
jno
pushf
and
jmp
data16
sbb
mov
mov
hlt
sub
and
iret
repz
xor
push
mov
iret
repz
in
mov
push
push
fs
imul
sbb
add
add
sarl
cs
push
push
pusha
push
outsl
dec
adc
and
pop
mov
hlt
clc
movb
add
or
mov
scas
add
loop
aaa
dec
push
roll
and
sbb
lea
push
lea
push
sbbl
mov
push
lea
js
lret
dec
cmp
mov
cmp
inc
les
pop
or
ds
add
mov
sbb
sub
push
movl
push
lret
inc
addr16
push
sbb
lea
fldcw
push
jbe
mov
adc
in
xorl
shlb
jb
lock
add
jg
ja
ja
mov
std
movl
lret
js
jbe
test
mov
push
xchg
pop
pop
push
and
push
dec
pop
ds
dec
jmp
adc
cmpl
aas
xor
adc
nop
sub
mov
orl
iret
arpl
jae
and
in
adc
pop
nop
out
cmpsl
mov
js
adc
sbb
dec
je
adc
stos
jmp
jnp
ljmp
cmp
dec
dec
rclb
mov
pop
push
not
and
push
dec
mov
add
fidivrs
mov
sbb
jecxz
shl
mov
ficoml
in
cmp
push
push
push
mov
roll
lea
push
js
test
je
mov
imul
jp
pop
dec
adcb
add
insb
rolb
pop
pop
daa
lea
scas
lock
je
mov
jo
mov
xchg
aam
lea
and
mov
mov
mov
sbb
push
sub
add
cli
lock
cmp
dec
pusha
adc
fwait
jecxz
sub
sub
aam
call
xor
mov
lock
mov
adc
dec
adc
mov
push
inc
dec
or
imul
mov
std
pop
cmp
je
dec
call
cltd
sub
sar
add
cmp
bound
in
dec
in
int
insl
mov
pop
xor
cmp
inc
cmp
mov
inc
pop
pop
leave
jnp
sbb
leave
stos
xor
jns
and
ret
add
sub
push
mov
cmp
into
adcb
or
sub
push
add
sbb
cmp
jg
and
ja
test
or
out
fistps
jmp
adc
bound
jl
mov
dec
inc
imul
pushl
add
inc
sbb
or
jns
or
push
mov
push
adc
push
decb
dec
maskmovq
sbb
and
test
mov
aas
mov
cmp
adc
mov
rclb
mov
xor
lock
loopne
repnz
mov
lock
rorb
sbb
jge
je
push
jae
push
lods
mov
inc
lock
pushl
and
mov
jp
stos
loopne
incl
and
pop
test
sbb
mov
mov
xchg
mov
cmpl
sbb
jge
xchg
jne
adc
dec
je
addr16
pop
mov
adc
mov
out
aam
push
add
jg
jmp
mov
fsubrs
push
sbbl
fimull
js
in
mov
loopne
mov
jle
pop
sub
bound
aas
xchg
stc
test
pop
push
push
sbb
int3
sub
in
cmp
jo
test
add
iret
lret
lock
xor
or
fldz
enter
lock
ljmp
mov
mov
cmp
ret
dec
aas
mov
xor
mov
cmp
enter
dec
add
sarl
jmp
or
mov
pop
sub
rorb
fsubs
cmp
daa
mov
pop
adc
xchg
pusha
mov
test
jnp
jns
and
and
pop
lea
cli
je
fiaddl
push
push
pusha
mov
jbe
adc
cmp
cmp
mov
fldcw
push
shlb
shrb
fdivr
int3
push
sub
cmp
or
nop
or
movl
enter
adc
fidivrs
insb
je
sbb
andl
sbb
push
shrl
xor
add
cmp
or
dec
pusha
adcl
xchg
pop
sbb
cmp
and
sub
repnz
ret
xor
addb
roll
enter
js
mov
push
cmpb
lock
sbb
test
icebp
test
mov
out
dec
mov
inc
imul
inc
dec
fldl
fmull
add
pushf
and
mov
cs
xor
es
push
cmp
ret
rcrl
push
jo
ror
xchg
adc
or
testb
pop
or
mov
sbb
popa
rorb
inc
adcl
pop
andb
shll
pushf
lods
lock
cmp
fidivs
push
pop
inc
sub
lods
arpl
jae
or
outsl
dec
pop
dec
push
add
push
addl
mov
push
test
cmp
stos
repnz
ret
fcoms
pop
rorl
push
add
orb
loope
mov
and
ret
cmp
in
mov
das
adc
or
and
xor
inc
mov
push
imul
addb
adc
pop
xchg
call
sbb
je
cmpb
ljmp
aaa
cwtl
pop
rcrl
jne
or
xchg
xchg
push
loopne
cmpb
cs
sub
push
push
pop
fs
cmp
cmp
pop
cmp
push
insb
repz
dec
jmp
js
orb
push
dec
imul
shlb
test
mov
adc
insb
push
dec
push
in
imul
jl
xor
call
push
inc
fisttpll
and
sbb
cmp
inc
ret
xchg
xchg
lock
cmp
dec
aam
sbb
lock
imul
or
sbb
fcompl
sbb
cltd
xchg
inc
adc
jo,pt
fwait
sbb
cmp
repnz
cltd
mov
add
sarl
test
or
enter
adc
jl
dec
inc
or
sbb
cmp
adc
mov
inc
jge
mov
fcomip
sti
push
pop
push
ja
rclb
iret
idiv
cld
data16
call
aas
jp
mov
add
mov
cmp
push
jbe
push
fstp
adc
jmp
fstpl
loop
mov
jmp
mov
adcb
in
into
mov
sti
sbbl
movsl
adc
add
rorl
out
lock
pop
loopne
and
pusha
push
ljmp
hlt
cli
or
jge
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
xchg
test
daa
pusha
jl
fbstp
into
mov
sub
jl
movl
adc
test
or
mov
negb
pop
lahf
xor
xchg
sbb
and
arpl
loop
movl
xchg
imul
cmp
or
jmp
jge
jmp
cld
pop
imull
into
mov
xchg
mov
fildl
pusha
or
sarb
faddl
fdivl
rorb
loopne
stc
mov
mov
test
xor
mov
pop
add
pop
add
ficomps
mov
cmp
add
push
jecxz
xor
cmpb
jle
and
clc
fidivl
jmp
outsb
mov
push
xchg
jp
mov
sahf
lods
jmp
cmp
inc
jne
pop
add
jl
dec
call
aas
mov
mov
adc
fmull
sbb
pushf
and
push
clc
int3
push
popf
pop
rorl
fldlg2
rcr
cld
push
test
pop
or
and
sbb
mov
jmp
push
lahf
je
je
test
imul
dec
xchg
jne
xor
cmp
push
jmp
sbb
jle
sbb
push
push
push
pop
push
movd
sti
adc
loopne
dec
pop
addr16
aam
mov
cmp
sbb
and
test
call
std
cwtl
sbbb
cltd
cld
gs
mov
inc
mov
aas
xchg
dec
push
inc
in
pop
jne
mov
xchg
cmp
rcll
add
insl
cs
fsubrl
mov
leave
nop
pop
mov
inc
pop
push
notl
dec
and
xor
jle
call
icebp
lea
push
mov
push
mov
cvtpi2ps
cli
pop
mov
push
dec
adc
jns
pop
sub
inc
sub
dec
push
dec
add
push
fidivrs
cmp
or
jge
dec
lea
aas
flds
cmp
and
lahf
xor
push
ja
ja
mov
push
pop
push
nop
arpl
add
sbb
cmp
push
sbb
add
add
mov
add
insb
adc
fs
les
call
xchg
jl
cld
mov
cmpl
movnti
aaa
mov
dec
push
repz
inc
adc
push
xor
xchg
dec
jb
mov
and
add
fbld
arpl
or
inc
or
mov
pusha
sub
jno
scas
shrb
ds
xchg
push
pop
cmp
mov
inc
and
in
sub
ret
das
sar
setb
test
jne
mov
enter
sbb
mov
mov
pop
xor
and
adc
pop
add
pop
jge
pusha
rcll
mov
jmp
lcall
jmp
rcll
inc
mov
nop
lock
hlt
clc
movsb
dec
rorl
xor
xchg
inc
add
lret
and
xor
sbb
dec
xor
and
cmp
enter
xor
sahf
into
jge
xchg
hlt
lcall
sub
cmp
push
lea
push
enter
fsubs
or
add
adc
sbb
hlt
cs
add
push
test
rcll
jg
sub
pop
mov
clc
or
or
aaa
mov
or
je
and
je
cmp
out
pop
lahf
push
mov
or
fcoms
pop
ffreep
inc
hlt
addb
out
leave
rolb
shlb
arpl
shll
sub
add
jle
push
aaa
loop
ffree
add
std
ret
push
cs
mov
xor
pop
add
sub
adc
gs
popa
arpl
and
lods
out
xchg
sub
lret
xor
push
sti
pop
push
pop
xchg
pop
inc
push
in
jp
push
ds
decb
test
int3
pop
cmpsl
mov
mov
imul
aas
inc
jne
push
push
add
jmp
mov
outsb
jbe
aad
mov
mov
jmp
or
jno
xor
enter
push
mov
xchg
icebp
lods
xchg
ja
inc
xchg
jae
jl
shl
loopne
arpl
es
lahf
fsubp
sbbb
xchg
clc
jae
push
fwait
inc
or
enter
mov
xorl
sbb
inc
or
xchg
into
inc
push
add
jb
sbb
jl
sub
leave
adc
lods
cmc
sub
xor
sbb
clc
mov
ds
int
xor
mov
pop
pushf
mov
insl
lcall
mov
mov
jecxz
cmp
xor
mov
mov
call
mov
ds
push
pop
mov
sbb
dec
inc
lea
test
or
js
sbb
test
add
shll
or
push
xor
xchg
and
mov
rep
adc
fneni(8087
mov
xchg
add
and
cmpb
repz
adc
xchg
and
mov
test
es
mov
mov
adc
movsb
xor
push
pop
or
ffree
jnp
or
inc
add
mov
push
or
xchg
xchg
add
mov
fdivr
add
lea
push
test
pop
sbb
mov
mov
icebp
pop
scas
add
shrl
add
movsl
enter
mov
cmpsb
cs
popf
inc
test
stos
jecxz
adc
call
fsub
mov
mov
mov
fiaddl
mov
sub
push
sub
cmp
mov
inc
insb
lea
dec
nop
shrl
call
inc
push
outsb
sbbb
sub
and
sub
jp
mov
leave
cld
shl
mov
push
push
mov
inc
test
add
or
push
and
shl
daa
add
add
xchg
xchg
mov
aaa
psubd
fdivl
mov
loopne
adc
inc
adc
mov
ds
adc
jge
jl
bound
shlb
fsubrp
adc
or
adc
push
in
mov
or
dec
and
mov
and
outsl
test
sbb
arpl
sti
xlat
faddp
xor
sub
adc
fsubl
fwait
sub
mov
xchg
rcrb
rclb
push
addr16
or
lods
scas
push
xor
add
enter
sar
adc
xor
call
test
mov
mov
cmp
cmp
adc
adc
rolb
add
push
push
scas
inc
inc
enter
xchg
pop
jecxz
repnz
or
fmuls
adc
fcoms
pop
bnd
insl
hlt
mov
and
xchg
fsubrp
jo
inc
push
scas
or
or
sub
inc
sub
dec
adc
mov
push
lods
cltd
sub
lret
add
push
in
mov
mov
in
cltd
pop
push
mov
jo
call
fcmovne
pop
outsb
cmpsl
mov
mov
sbb
mov
dec
mov
fucom
int3
nop
mov
hlt
cld
push
xor
bound
add
jo
call
pop
jno
sti
push
inc
inc
cld
mov
aas
fcomps
dec
sbb
pop
sbb
add
push
movsb
arpl
jmp
loope
add
xchg
adcl
push
and
loopne
nop
fistpl
jmp
stc
sbb
mov
in
cmp
sub
cmp
and
popf
lcall
rcl
loopne
pusha
imulb
or
in
cmpb
sub
idivl
ret
ljmp
out
mov
mov
jnp
cmp
and
push
popa
xlat
push
test
loopne
push
iret
push
int
push
test
or
shlb
adcb
int
push
shlb
test
xchg
sub
adc
andb
push
repnz
inc
adc
je,pn
test
popf
dec
pop
mov
test
pop
pop
in
incb
mov
cwtl
push
stos
and
addl
cmp
pop
shlb
lods
fst
addb
lds
jg
dec
push
lods
sub
xor
cmpsb
and
repnz
add
shr
pop
mov
sbb
das
test
shlb
lods
and
outsl
jo
and
lods
xchg
pop
jae
push
mov
adc
adc
xlat
test
mov
rcrl
add
pop
popa
push
repz
jle
push
enter
adc
repz
daa
sldt
inc
fisubs
in
sbb
push
pop
sbb
cld
push
movaps
mov
push
sbb
mov
xor
xor
sbb
repnz
adc
aas
xchg
sahf
mov
mov
sbb
outsl
sub
dec
test
fildl
push
add
inc
mov
add
js
scas
jno
sbb
mov
push
push
sbb
lods
rorb
pop
push
or
mov
sub
xor
inc
cld
aas
adc
popf
pop
or
sub
ds
addl
pushl
add
add
push
xchg
adc
or
adc
push
insl
leave
xor
or
les
dec
dec
arpl
sub
push
sbb
add
xor
clc
mov
mov
push
outsl
add
push
inc
js
jo
cwtl
hlt
fdivrp
xor
scas
inc
push
xor
adc
xchg
push
repz
push
packuswb
data16
clc
cmp
data16
cmpsb
dec
cld
or
cmp
mov
push
fstp
pop
clc
sarl
cmp
or
mov
inc
decl
jmp
idivb
jo
jle
push
push
jmp
cmp
je
ja
mov
push
mov
mov
mov
xchg
in
push
mov
sub
lock
inc
mov
mov
lea
nop
or
add
cld
or
sub
push
jae
and
push
shll
orl
ret
test
imul
ret
outsl
outsl
testb
test
je
and
gs
movsl
inc
sbb
inc
dec
inc
bound
enter
jae
test
notb
inc
sahf
sbbl
dec
or
jo
xchg
or
inc
pop
and
add
jmp
ror
xor
xor
cli
inc
xor
adc
add
repz
std
jl
stc
xor
cmp
pusha
lret
lock
xlat
pop
and
add
arpl
push
jns
add
sti
mov
push
cmpsb
xchg
cld
xchg
sbb
sub
jbe
das
mov
cli
ja
push
sub
popa
and
or
scas
sbb
notl
dec
dec
inc
call
in
imul
lret
adc
xor
daa
daa
inc
or
jb
and
in
pop
loopne
inc
push
dec
mov
cmpsl
loop
inc
adc
mov
enter
push
cmp
sbb
add
shl
push
outsb
mov
jnp
or
pop
sbb
int
cld
roll
pop
jecxz
popf
int3
add
or
andl
xorb
scas
je
test
adc
sbb
sbb
and
adc
jnp
iret
adc
or
fisttpl
popf
or
incb
jbe
call
add
sbb
inc
add
add
push
sbb
pushf
pushf
sbb
and
cmp
adc
sbb
pop
push
xor
aad
cmp
test
jnp
addr16
mov
pop
loope
cmp
cmp
and
cmp
adc
cli
arpl
fsubl
lock
in
cmp
or
and
push
je
sub
bound
and
pop
adc
mov
insb
or
insb
stc
fmul
aad
loope
ret
pop
fldl
aas
jne
adc
movsb
adc
and
cs
sbb
sarb
dec
push
data16
shl
cmp
insl
jnp
and
movsb
div
pop
fcomps
push
mov
pop
push
andl
icebp
mov
jo
sbb
sbb
push
icebp
sbb
xor
jge
outsb
aam
pop
je
movsb
hlt
mov
fs
lea
lret
or
ss
aas
mov
sub
mov
repnz
inc
pusha
sub
sbb
leave
ret
insl
pop
push
cld
xchg
bound
outsb
sub
jge
jbe
jne
push
ficompl
outsl
aas
and
sbb
push
hlt
mov
sbb
cmp
shrb
and
dec
test
clc
mov
add
push
mov
xor
repnz
ffreep
int3
cmp
test
jge
push
xchg
xor
filds
aas
jl
movl
push
repnz
sub
xchg
or
push
push
push
movsb
enter
push
push
pusha
adc
mov
test
ret
xor
inc
add
enter
fimuls
mov
push
lcall
leave
or
test
aaa
cmpsl
sbb
test
js
js
cmpsb
imul
leave
and
dec
mov
leave
dec
ljmp
insl
out
xchg
sbb
test
inc
dec
mov
jl
sbb
fcmovnbe
adc
cmp
xor
movsl
xor
daa
push
mov
push
mov
cmp
inc
push
mull
pop
call
add
into
inc
ret
sbb
mov
idiv
jp
push
fs
add
pop
mov
into
mov
test
pop
out
add
ficoml
sbb
lcall
push
xchg
sbb
movsl
add
add
lods
and
dec
rcrb
pop
jno
xor
jo
cltd
aad
mov
add
fs
ss
sbb
stc
test
std
dec
push
pop
mov
adc
xchg
clc
dec
jmp
push
fcmove
or
mov
and
leave
and
sub
and
pop
push
add
mov
test
lock
or
xchg
lea
mull
push
imul
xchg
pop
popf
add
push
sub
jns
xchg
sub
pusha
pop
or
mov
push
cwtl
popf
push
and
sub
or
in
xchg
mov
pushf
add
mov
and
sub
xor
call
pusha
mov
fninit
and
jno
mov
inc
mov
sub
mov
add
or
popl
loopne
out
out
pusha
movsb
jne
push
adc
test
rcll
mov
scas
dec
ljmp
repz
clc
xchg
icebp
loop
pop
hlt
setne
loopne
jo
sti
cmp
jne
sti
aas
push
push
push
jmp
jmp
mov
cmp
jne
push
push
push
inc
xor
jnp
push
rol
dec
clc
arpl
pop
inc
rol
aaa
and
mov
jnp
pop
push
cmp
pop
cmp
sub
inc
sbb
clc
mov
push
test
repnz
cmc
xchg
or
cmp
adc
push
push
popa
adcb
adc
sub
add
inc
pop
or
sub
mov
punpckhdq
aaa
jmp
push
aas
adc
cmpsl
sub
sub
or
daa
add
xchg
push
pop
testl
xchg
iret
jge
pop
adc
sub
mov
jl
sti
in
out
movzbw
shl
cwtl
adc
or
dec
je
add
sub
pop
push
push
add
jmp
mov
idivb
das
fldcw
jp
mov
jecxz
fcomps
cmp
and
pop
pop
push
jbe
mov
inc
cmp
fwait
and
in
xor
mov
xor
adc
and
pushf
push
adc
outsl
insl
xor
fs
jp
add
std
add
and
xchg
adc
push
in
mov
pop
mov
or
sbb
dec
add
lods
xchg
repnz
push
sub
push
leave
push
test
sub
push
mov
jnp
sbb
lods
add
sbb
add
and
sub
add
mov
push
cmp
dec
or
jnp
mov
je
xor
mov
cmp
gs
test
in
push
out
mov
imul
push
mov
repnz
pop
push
dec
sbb
stos
and
sbb
insb
xchg
dec
pusha
icebp
add
movsl
push
cwtl
add
pop
push
inc
lcall
xchg
inc
and
xchg
push
jnp
lock
xchg
jne
push
xor
and
cmp
mov
push
push
xchg
jbe
ret
adc
popf
in
in
mov
repnz
jge
ja
scas
xchg
xor
push
inc
imul
mov
mov
lret
cmpsl
adcb
out
aam
clc
push
sub
cld
push
ror
faddl
mov
mov
sbb
add
and
or
push
or
cmp
or
cmp
adc
lea
mov
mov
dec
repz
and
or
push
movzwl
pop
movswl
icebp
sub
cmp
setge
cs
cmc
test
jle
cmp
add
jge
addb
jl
adc
or
mov
pop
xchg
lret
mov
mov
lea
hlt
mov
push
add
mov
ret
push
cli
lods
or
hlt
clc
push
push
jnp
ficomps
add
jo
push
mov
sub
fisttpl
ret
add
das
repz
pushf
fwait
add
int3
or
cmpsl
push
scas
out
add
iret
aad
pop
adc
test
push
pop
nop
push
mov
inc
jo
push
xor
add
je
or
leave
sahf
loope
pop
jbe
adc
adc
add
cmpsb
pop
insl
adc
hlt
or
iret
stos
imull
cwtl
ror
sbb
xor
test
ds
xchg
mov
test
mov
scas
sub
xor
cs
mov
ret
xor
inc
shlb
lahf
enter
addr16
testl
sbb
mov
push
mov
shll
ja
shlb
shlb
inc
pop
ss
push
or
cmp
clc
repz
push
js
loop
mov
lods
repz
xor
repnz
xchg
add
add
jno
adc
cli
test
cmp
jbe
jo
sarl
mov
mov
inc
add
push
inc
dec
add
add
mov
cmp
mov
adc
jmp
lcall
xchg
shrb
jp
int3
jmp
xor
jl
and
jmp
jne
lahf
sbb
ss
mov
lret
into
lock
ja
dec
inc
addr16
adc
shll
sbb
ljmp
lea
add
cmp
jae
push
icebp
or
sbb
add
cwtl
shl
and
jmp
outsb
es
pop
xchg
cwtl
push
add
push
mov
push
add
push
mov
dec
aam
cmp
dec
hlt
jge
mov
dec
mov
add
mov
mov
jl
outsb
adc
ja
inc
or
jmp
shlb
imul
gs
je
mov
pusha
cmp
sbb
hlt
jg
loope
shl
scas
push
push
fistps
jmp
mov
mov
cwtl
or
mov
hlt
mov
jle
inc
sbb
mov
into
repz
or
mov
sub
push
push
sbb
stos
or
nop
jbe
mov
and
pop
or
push
icebp
and
nop
mov
inc
enter
cmp
jecxz
dec
mov
in
mov
dec
push
xorb
mov
out
mov
ret
mov
scas
js
add
iret
pop
mov
jp
cmp
gs
jb
sbb
mov
sbb
je
popa
jmp
cmpsb
cmp
lcall
add
test
cli
cmp
aad
and
xchg
mov
loopne
pop
xor
add
sub
cmp
dec
mov
cs
mov
jne
sahf
push
stos
lret
cmp
rorb
ret
dec
aam
aaa
xor
cmpl
jb
xchg
inc
pop
push
ds
nop
mov
divb
mov
add
push
pop
sub
fisttps
and
push
cwtl
jge
cwtl
incl
sbb
push
mov
or
push
cmp
addl
or
andl
shlb
aad
or
lock
in
cmpb
jb
xor
inc
pop
push
addr16
sub
mov
pop
sub
inc
mov
call
jno
push
dec
or
jp
mov
arpl
ja
es
sbb
mov
pusha
xor
mov
xchg
ds
or
pop
xchg
and
aam
or
mov
outsb
ljmp
push
jmp
sbb
inc
stos
sbbl
clc
add
clc
xor
mov
add
shlb
add
ds
mov
cmp
xchg
sbb
mov
mov
pop
cwtl
ss
pop
mov
loope
adc
push
sub
mov
mov
pop
pop
sub
lods
mov
in
push
pop
mov
add
dec
or
test
mov
stos
aad
or
aam
int3
push
cmp
lods
push
mov
outsb
push
cmp
mov
sub
imul
push
dec
mov
loopne
das
lea
je
push
repnz
adc
add
jecxz
dec
adc
xchg
subb
lret
adc
inc
test
adc
movsb
push
and
daa
ret
or
add
in
bound
fisubs
or
fsubs
xor
xchg
imul
fadds
js
jne
jle
mov
mov
push
faddl
sbb
add
push
jne
jmp
jbe
test
fadd
in
add
add
stc
in
push
imul
shrb
push
repnz
adc
rolb
mov
dec
sbb
icebp
xorl
adc
push
or
push
push
aas
jecxz
push
aam
or
xor
aas
jecxz
loopne
out
mov
scas
or
adc
xor
jmp
push
lcall
inc
and
push
sti
adc
arpl
adc
push
dec
mov
pop
pop
push
sbb
push
mov
mov
add
sbb
arpl
or
or
sahf
add
push
pop
addl
push
cmp
imul
cwtl
sbb
or
daa
adc
push
sub
rol
lock
outsb
aaa
cmpb
push
icebp
pop
xchg
adcb
enter
cli
ret
cwtl
adc
jbe
pop
call
mov
call
dec
add
js
cltd
sarl
push
aaa
add
dec
or
mov
pop
jle
pop
movsl
in
jne
jo
xchg
cmp
mov
call
les
fdivs
fists
or
loope
add
xorl
push
inc
jl
fs
pop
adc
sahf
sub
adc
sbb
inc
xchg
test
sbb
add
cmp
loope
inc
or
mov
sbb
jmp
aas
push
jl
fistpl
aam
dec
sbb
in
add
nop
push
outsb
lock
add
xor
push
adc
mov
xorl
xlat
mov
mov
push
in
daa
mov
repz
jnp
pop
jmp
je
push
add
ljmp
push
dec
enter
push
push
add
push
jp
add
pop
xor
xchg
addr16
leave
sub
push
imull
add
inc
add
das
or
addr16
inc
test
mov
test
dec
rol
jmp
sbb
jnp
pop
sub
sbb
jle
cmp
ds
call
loopne
shlb
roll
test
mov
jp
jmp
in
ret
mov
add
test
lods
jns
dec
pop
movl
mov
sub
or
push
shr
xor
les
pop
xor
add
jo
leave
dec
shrl
adc
aaa
shlb
and
mov
mov
or
or
pop
push
push
add
pop
pop
sbb
jl
xor
sub
mov
mov
push
test
in
dec
jnp
iret
or
aam
mov
leave
icebp
clc
fcomps
pop
aas
insb
pshufw
xor
jae
sbb
push
mov
cmp
mov
stos
incl
push
dec
sbb
pushl
gs
sub
dec
cmp
add
jge
popf
loopne
rorl
add
out
add
mov
imul
push
outsl
insl
jbe
imul
dec
or
popa
das
xor
add
and
ret
scas
add
clc
and
setl
aad
xchg
xchg
adc
into
or
dec
pop
lods
mov
enter
leave
pop
mov
lea
lds
shll
loop
or
cmpb
mov
mov
int3
jno
call
xor
push
push
push
xor
inc
add
ret
sub
popl
in
lds
lcall
int
and
pop
and
ret
sbb
mov
out
cmp
sbb
jmp
xor
rorl
movsb
push
test
adc
push
push
adc
mov
jne
sub
jne
xor
push
imul
adc
cld
cld
sub
mov
lock
adc
fidivs
add
popa
sarb
test
xlat
push
add
push
xchg
lock
lcall
fiaddl
jbe
incl
cmp
sub
mov
imul
jo
fimuls
inc
jg
dec
and
lock
call
adc
fdivrs
loop
pop
hlt
rorl
adc
je
inc
paddw
imull
icebp
add
iret
push
push
add
sbb
mov
loop
jne
or
pop
fisttpll
fstpt
mov
mov
add
add
rorl
add
stos
xor
push
cltd
test
addl
cmp
cmpb
mov
cld
pop
pop
pop
add
fs
add
mov
add
inc
or
in
push
test
add
lock
test
mov
arpl
shlb
push
insb
into
sub
cmpsb
push
dec
movsb
das
andl
or
repz
push
xchg
add
add
aaa
adc
mov
push
call
ret
sub
in
outsl
push
pop
out
push
mov
cmp
je
xchg
orb
pop
dec
loop
pusha
movzwl
jmp
mov
mov
in
dec
lcall
out
sahf
in
clc
insb
fnstcw
xchg
lods
mov
cmpb
sub
sarb
xor
in
push
add
cmpb
push
jg
insl
xchg
mov
aad
jl
push
push
test
mov
dec
imul
pop
add
mov
test
push
add
shll
or
mov
mov
cmp
je
push
lea
push
sti
or
sbb
add
cmp
mov
clc
push
sbb
xchg
push
pop
fstpl
lock
xor
xor
sub
mov
push
imul
or
xlat
push
aas
push
xchg
add
shlb
and
shll
jle
dec
mov
fldt
cld
push
clc
add
hlt
push
in
inc
stos
mov
lret
in
lods
xchg
mov
neg
push
add
sbb
push
adcl
jbe
mov
ret
and
lock
push
push
mov
pushl
in
push
push
cmp
je
insb
rclb
push
xor
or
xchg
movsl
rcll
sahf
inc
notb
sub
adc
jl
je
push
push
aas
mov
pop
mov
jge
sub
js
ret
insb
jmp
push
push
icebp
or
add
mov
std
cmpsb
jp
xor
imul
aad
lods
ficoml
je
jo
mov
cmp
stos
imul
xor
addr16
inc
cmp
cmc
inc
pop
inc
test
add
sub
pop
adc
cmp
add
test
int
nop
lret
jl
cmp
scas
test
pop
out
pop
or
and
cmp
lods
mov
or
adc
sar
adc
add
jb
pop
mov
add
movsl
dec
mov
stos
mov
xor
sbb
hlt
std
mov
pop
push
and
xor
fbstp
loope
mov
push
lea
in
cmp
je
xchg
cmp
je
cmp
jne
cwtl
add
cmpsb
mov
jbe
ja
cmc
je
adc
dec
fists
call
mov
out
add
sub
jmp
outsl
pop
outsb
pop
mov
cmp
xor
adc
mov
pop
mov
dec
jo
add
test
mov
xchg
jmp
mov
lea
cmp
jne
or
lock
mov
xor
and
jge
add
jl
push
mov
mov
or
push
xchg
adc
sbb
movsb
xchg
mov
fs
mov
adc
nopl
add
adc
push
fldln2
xor
push
pop
pusha
nop
sub
cmp
jno
sbb
dec
sub
das
out
mov
enter
or
mov
mov
add
mov
push
sbb
test
and
shlb
pop
in
lret
and
xchg
mov
jae
faddp
push
popf
xor
mov
mov
pop
faddl
jle
aad
xor
adc
mov
jnp
movsl
hlt
stos
or
stos
mov
mov
cmp
pop
or
popa
mov
xchg
inc
mov
push
sub
lods
repz
das
or
jp
cmp
add
adc
mov
popa
mov
mov
les
push
jnp
xchg
sub
mov
pushf
lea
shl
mov
notl
fsubs
mov
dec
add
lcall
push
int
je
cmp
add
fimuls
mov
enter
shlb
mov
inc
dec
mov
mov
rcl
fldenv
loopne
inc
mov
cld
gs
mov
cli
aam
push
fs
push
shll
mov
cmp
xor
and
addb
scas
add
out
dec
ds
or
adc
movsb
or
sbb
fsts
and
fcoms
cmp
pop
sub
push
fmul
scas
mov
mov
add
or
fisttpll
stos
int
sbb
jo
movsl
xchg
mov
cmpsb
or
enter
push
pop
and
xor
push
jno
xor
sbb
or
pop
cmp
inc
cmp
or
je
mov
mov
add
mov
or
sub
sbb
xor
andl
lea
inc
push
ss
xor
dec
mov
loopne
fs
or
push
adc
enter
xchg
sbb
mov
bound
or
cmpsl
lcall
sbb
xor
cmp
test
pop
jp
fwait
call
enter
outsb
push
jns
daa
aad
mov
imul
bswap
pop
sub
leave
push
sbb
add
ds
ss
inc
inc
mov
inc
push
mov
jns
outsb
nop
push
sub
or
xchg
push
sub
les
int
cmp
mov
pop
push
clc
pop
inc
shll
push
adc
add
push
cmp
xor
cmp
lea
enter
inc
sbbl
leave
inc
fdivp
mov
jne
push
jmp
and
shlb
pop
ret
shlb
and
addr16
mov
push
adc
adc
jo
pop
add
sbb
pop
sbb
popa
test
ss
push
add
nop
push
cmp
add
mov
add
xlat
cmpsl
loopne
lea
dec
cmp
jne
mov
xor
adc
sbb
inc
ss
stos
fmull
push
mov
sbb
sub
rolb
mov
push
les
dec
push
jg
xor
cltd
fiadds
push
gs
xchg
push
push
rol
mov
sbbb
xchg
add
xchg
or
xor
jecxz
jne
daa
popf
addr16
mov
add
cmp
fmuls
sbb
xchg
enter
dec
in
sbb
mov
pop
sahf
pop
ljmp
cltd
add
mov
enter
add
push
sub
enter
sub
push
mov
pop
fdivl
out
and
xlat
movsb
fsubl
sahf
mov
push
out
fcomp
pop
jae
mov
add
fiadds
scas
lods
insb
les
dec
bnd
int3
xchg
xor
stos
add
adc
push
cltd
adc
movb
cmpsl
xchg
dec
sub
sbb
cli
push
add
mov
dec
rcrb
jge
and
mov
aam
push
popl
test
cs
add
sub
fistl
ljmp
xchg
jmp
sbb
add
push
out
sbb
mov
push
mov
jnp
and
aam
push
aam
xor
iret
and
test
xor
push
xchg
roll
mov
call
sub
xchg
and
mov
lea
xchg
add
cmpl
push
or
pop
and
mov
and
mov
sbb
pop
adc
mov
fsubl
push
mov
int
movsb
cmc
xor
push
and
mov
fnstcw
adcl
pop
sub
sub
rol
repz
mov
repnz
mov
jge
sbb
es
add
jmp
inc
je
jbe
inc
rcl
out
sub
leave
cs
sbb
pop
das
push
into
cmpsl
cmpsl
addr16
pop
dec
push
add
mov
inc
and
addr16
dec
sub
add
add
test
loopne
lret
add
in
sub
scas
mov
sbb
imul
push
xor
jnp
mov
mov
sbb
add
push
or
inc
push
fdivl
jbe
verr
xor
pop
lods
xchg
inc
add
lods
and
pop
xor
mov
xchg
xchg
mov
es
mov
int
lds
mov
outsb
and
cmp
jne
mov
in
jns
jmp
nop
rep
repz
cmp
pop
lods
jmp
or
stos
pusha
popf
sbb
es
mov
pop
push
mov
xor
and
cmpl
enter
dec
add
xchg
and
or
clc
aas
sbb
inc
dec
inc
mov
pop
incl
push
xchg
sub
push
push
add
mov
pusha
and
jg
ja
fisttpl
hlt
jne
and
or
int3
inc
mov
xor
jl
sbb
call
imul
mov
cmp
pop
mov
lea
outsb
les
cmp
iret
arpl
push
cmp
cmc
test
mov
cmp
xor
repz
lcall
cmp
push
pop
jb
jg
jge
cmp
mov
push
arpl
fsubs
mov
mov
fstps
orl
or
jge
jp
inc
repz
lock
in
in
inc
lds
cmp
add
inc
in
or
mov
mov
adc
subb
and
enter
add
jb
dec
inc
sar
fs
push
push
mov
rorb
loope
daa
cs
in
xor
adc
mov
and
cmp
inc
loope
push
icebp
adc
cmp
ror
leave
add
adc
fldenv
ret
sbb
cmc
jne
das
addr16
psubd
or
sub
mov
aam
pop
int3
enter
add
and
cmp
xchg
adc
mov
fmuls
addl
fiaddl
push
jno
in
nop
pop
stos
cmp
pusha
addb
jne
stos
xchg
sub
push
pusha
cmp
jb
push
or
or
mov
mov
dec
pop
loopne
je
adc
enter
fldcw
popa
xchg
stos
dec
cmpsl
inc
sbb
rdtsc
stos
imul
test
adc
sbb
outsb
add
test
pushf
rcll
pop
repnz
and
outsl
or
inc
test
xor
cmp
mov
xchg
lock
lock
or
sbb
mov
inc
add
and
rcrl
icebp
add
lock
sub
test
les
pusha
in
jns
cwtl
or
in
call
push
or
inc
xchg
dec
sub
xchg
mov
xchg
fwait
xchg
bound
jo
inc
test
aad
add
inc
push
das
jl
sbb
cmp
aaa
cwtl
fiadds
jp
lret
pop
lods
xchg
loop
cmpxchg
sub
xor
outsl
inc
dec
or
aad
cmc
push
jmp
and
cmp
je
mov
mov
push
jle
cwtl
add
sahf
imul
xor
adc
mov
lods
cltd
dec
mov
jmp
stos
sahf
mov
sbb
pusha
negl
imul
push
pop
js
and
jo
fwait
dec
adc
insb
out
add
push
test
mov
ret
mov
sahf
xor
lock
and
inc
fsubrl
and
push
and
adc
adc
adc
jne
lds
pusha
sbb
pushf
push
add
jno
xchg
jno
lret
call
jge
add
arpl
es
sub
bound
pop
fs
jno
or
bound
inc
sub
inc
push
mov
xchg
lahf
lds
cmpsl
rcrb
dec
loope
mov
xor
ja
jg
call
push
out
push
test
adc
mov
mov
pop
pop
jmp
dec
fwait
adc
daa
fcoml
push
dec
pop
pop
insl
inc
xchg
outsl
xchg
xchg
cmp
dec
push
cli
push
daa
mov
inc
jmp
mov
mov
push
push
add
out
mov
mov
mov
xor
xor
mov
jno
and
inc
lods
enter
fisubs
dec
mov
xchg
xor
pop
ret
push
jmp
push
lock
and
cmp
je
or
sub
iret
movsb
pushl
pop
sbb
fimuls
push
add
adc
sbb
push
loope
adc
aaa
jno
mov
lea
in
jge
or
cmp
inc
call
or
and
fsubrs
in
or
dec
gs
sub
cmp
xor
popf
and
push
sub
aad
add
or
add
js
jle
sub
sub
or
add
adc
jge
jb
sub
mov
aad
jge
cmp
jne
xchg
shr
push
mov
dec
mov
andl
mov
inc
ja
test
or
dec
jmp
out
adc
jle
push
mov
lock
lea
push
ret
loopne
dec
add
dec
fs
jne
cmp
je
nop
scas
js
lock
arpl
push
push
push
xor
push
sub
mov
mov
clc
push
or
inc
int3
shlb
sahf
in
and
call
test
jb
add
loop
outsb
pop
sbb
mov
sysret
or
cmp
xchg
paddb
inc
in
rcrb
ror
movsl
pop
pushf
sub
mov
add
adcb
lods
and
cmp
jne
jne
sub
cmp
mov
in
sub
popa
movsb
pop
ds
in
les
fistpl
jae
in
jne
push
lea
rolb
or
cltd
test
dec
pop
cmp
sub
les
call
mov
cmp
or
or
punpckhbw
inc
loopne
sbb
or
fcompl
xchg
loopne
pop
and
add
outsl
rorb
jge
xor
mov
mov
or
xor
add
mov
call
mov
cmp
jne
push
adc
out
or
adc
daa
add
mov
xor
or
or
addl
pusha
les
cmp
xlat
test
dec
pop
and
cmp
jae
cmp
sbb
push
stos
or
mov
hlt
sbbb
cld
jbe
pop
lods
inc
scas
das
and
mov
jp
bound
test
sbb
push
popf
push
inc
pop
add
mov
movl
mov
inc
cmp
std
and
xchg
xor
pusha
dec
shlb
or
addr16
adc
aaa
xchg
dec
bswap
mov
pop
fwait
mov
pop
push
daa
nop
push
sub
lock
cmp
pop
push
cmpl
or
int3
in
inc
test
sbb
cmp
ss
je
nop
cmpsb
imul
adc
inc
push
lock
push
sbb
xor
cmpb
push
aas
add
cmp
xor
xor
ret
sbb
or
imul
sbb
je
add
pusha
cld
push
ja
scas
sub
cmpsb
les
sub
jmp
iret
inc
mov
insb
add
rorb
aam
add
stc
xor
jne
sbb
incl
jmp
mov
adc
or
je
jle
ret
icebp
bound
push
mov
pop
pop
sub
and
insb
je
inc
xchg
or
rorl
pop
dec
mov
add
inc
add
lret
add
jg
and
mov
jmp
xor
dec
push
push
xchg
cmp
mov
rorb
arpl
inc
out
mov
nop
add
dec
sub
in
add
push
push
shrb
nop
cmp
test
add
lret
ret
cwtl
xchg
les
mov
cmp
xchg
call
sbb
pop
lcall
lds
not
popa
sar
add
or
push
add
or
movl
add
rorl
call
push
and
or
dec
sub
lret
repnz
negl
push
push
sbb
out
jno
and
aaa
and
lock
mov
jp
add
push
jbe
adc
xchg
mov
push
mov
es
inc
push
add
pop
cltd
das
imul
std
int3
mov
lret
sub
add
pop
cmpsl
ja
xor
call
cmpsl
xor
xchg
and
push
xor
cs
jmp
iret
into
or
push
xor
repz
or
cmp
or
rorl
call
cwtl
pop
rorl
je
cmpl
or
adc
or
add
jmp
fimuls
sub
push
and
leave
adc
sbb
dec
xchg
push
dec
pop
fwait
push
xor
fdivrl
sbb
test
int3
pushf
sbb
data16
lock
std
add
adc
add
fsubl
push
sbb
fadds
mov
rcll
in
xchg
popf
inc
lock
rolb
lahf
inc
fisubrs
inc
sbb
xchg
adc
xchg
paddd
es
idiv
and
mov
sub
inc
sub
dec
test
add
imul
push
push
jp
sub
cmpl
std
mov
push
test
add
push
clc
test
mov
xchg
sbb
inc
cmp
popf
iret
hlt
ja
pop
mov
inc
lods
mov
push
push
imul
pop
shlb
push
stc
pusha
fsubs
arpl
insb
dec
push
push
mov
lods
push
jns
inc
sub
loopne
push
xchg
pusha
les
loopne
or
inc
call
or
xchg
push
lar
adc
push
jmp
cmpsb
fmull
mov
inc
sub
mov
ja
subb
inc
enter
pop
and
das
lea
ds
subb
test
add
roll
pop
fs
mov
faddl
repz
and
mov
icebp
fidivrl
or
lar
pop
lods
cmp
or
mov
fwait
subb
push
jecxz
push
jae
xchg
lea
add
push
sbb
dec
push
test
xchg
dec
addl
lods
into
pop
setne
ret
test
pop
movsl
or
fldcw
pop
ret
push
ss
push
add
fcoms
test
push
add
in
or
sbb
mov
cmp
aaa
lea
inc
test
shrb
push
inc
sub
jmp
cmp
mov
pop
adc
xor
push
orb
test
out
lret
test
ret
xchg
popa
push
xchg
es
shlb
xor
adc
sbb
inc
mov
je
inc
sbb
sarl
cmp
stos
and
cwtl
fcmovbe
rcrb
jb
lods
lcall
int3
add
test
unpckhps
jmp
mov
jecxz
or
mov
sbb
cltd
in
pop
outsl
inc
sub
test
pop
jo
xor
add
sbb
mov
jbe
lret
pop
rclb
imull
xchg
or
mov
mov
enter
push
push
les
cmpsb
in
mov
cmp
call
xchg
push
or
icebp
daa
lret
lock
and
inc
ret
add
sti
sbb
pop
loopne
ret
cmpl
pushf
test
mov
fdivrs
inc
jne
pop
lcall
mov
xor
jo
addr16
mov
pop
scas
add
bnd
lock
test
aam
lds
add
push
mov
sub
popa
cmp
cltd
and
or
iret
cmp
adc
loopne
stos
into
leave
add
popf
fs
dec
push
out
add
mov
xchg
xchg
pop
push
ret
add
add
add
aaa
in
push
js
mov
aas
loop
stos
cmpb
je
nop
mov
sbb
fcomps
push
and
fsts
jne
add
out
pusha
push
das
sub
ret
adcb
dec
sbb
fiadds
mov
comiss
adc
insl
cmp
rorl
jne
jb
xor
jnp
nop
mov
in
mov
jne
inc
ljmp
mov
ja
mov
pop
jns
rorb
cmp
jmp
push
cmp
jb
mov
imul
add
scas
jae
dec
pusha
cmp
into
orb
cld
mov
or
cmp
sti
push
add
enter
movsb
cmpsl
cmp
fimuls
rorb
int
push
clc
sbbb
loope
mov
pop
lea
dec
adc
jmp
or
inc
pop
sbb
and
icebp
cmp
je
bound
outsb
add
sbb
mov
add
inc
jle
jmp
add
jmp
cs
mov
add
pop
pop
mov
mov
jb
and
xor
adc
faddl
xchg
xchg
jns
add
mov
aam
xor
imul
xor
dec
push
inc
popf
loopne
dec
mov
dec
add
mov
mov
sahf
sahf
add
sbb
push
add
lea
sti
mov
outsl
push
sub
ret
pusha
jbe
push
push
jmp
mov
inc
add
xchg
add
nop
dec
ret
iret
ja
adc
cmp
xor
add
mov
dec
add
shrl
les
xchg
les
cld
inc
or
adc
or
add
pop
in
sub
jb
call
mov
jno
sub
jp
dec
and
sub
dec
fsubs
xor
sub
or
sbb
out
jne
mov
fildll
lds
adc
sub
fistl
loopw
rclb
or
cmp
and
imul
mov
je
daa
lock
push
or
push
sbb
pop
cmovbe
push
ja
int3
inc
cmp
roll
add
les
jb
outsb
xor
fisttpll
out
cmp
mov
icebp
out
popa
sbb
or
push
mov
adcl
mov
inc
adc
push
xor
ja
mov
les
rcrb
lcall
adc
mov
add
shr
push
xchg
mov
dec
or
mov
or
ret
add
movsl
icebp
test
sti
mov
mov
add
loope
mov
sbb
adc
xor
enter
enter
sbb
sarl
loopnew
adc
addl
arpl
mov
cmpsb
mov
or
dec
sub
adc
cmp
add
in
jb
add
xchg
lret
xor
xor
push
dec
sub
cmp
cmp
push
cmp
or
dec
push
fs
xchg
lret
inc
insb
push
fnstcw
and
adc
xchg
pop
add
or
sub
pop
int3
mov
mov
pop
add
dec
mov
dec
mov
mov
aam
pop
push
jl
jg
inc
pop
stos
movb
sbb
sahf
loopne
popa
rolb
sub
jo
push
xchg
les
add
mov
sahf
add
sbb
xchg
or
inc
sbb
fisttps
rolb
sbb
ret
xchg
les
dec
pop
push
movsb
or
movsb
mov
adc
aas
pop
setns
push
jg
fs
inc
cmp
nop
inc
inc
cmp
in
inc
push
xor
sub
inc
push
cmp
sbb
cmp
adc
or
xchg
or
adc
sbb
and
cwtl
fmuls
lea
xchg
mov
cmpsl
or
test
sub
movb
test
movsl
cmp
or
or
pop
sbb
inc
mov
call
and
pop
cmp
imul
or
push
orl
loopne
push
push
sbb
add
push
mov
mov
mov
mov
add
xor
push
orb
dec
add
and
sarl
cmp
loopne
mov
outsl
inc
add
and
ja
mov
push
loopne
xchg
or
inc
xchg
or
cmpsb
fidivs
push
xor
sbb
inc
cs
push
sbb
std
inc
std
adc
pushl
repnz
pushl
mov
mov
push
rcr
push
adc
jo
lock
inc
pop
sub
or
xor
mov
push
or
add
dec
and
inc
push
lcall
push
lea
xor
sar
push
push
push
jl
and
fisttpll
das
fcoml
popf
mov
inc
stos
dec
mov
daa
inc
dec
xchg
sarw
xchg
add
add
xchg
xchg
sub
or
inc
sbb
sub
push
inc
rsm
push
xchg
or
out
push
xchg
xchg
cs
and
sbb
shrb
sub
xchg
mov
test
pop
adc
and
push
mov
cwtl
push
inc
mov
cmpsl
xchg
pop
cmp
jmp
add
sbbb
dec
inc
fdivl
pop
cmc
dec
out
push
push
push
loop
or
pop
mov
inc
loopne
xlat
or
arpl
pop
or
cmp
insb
cmp
punpckhbw
jl
lcall
or
add
aas
rcrb
mov
xchg
pop
clc
xor
rolb
mov
jb
xchg
ds
addb
ds
sub
xor
dec
fisttpll
or
cltd
lds
mov
pop
sbb
psubw
dec
pop
mov
xor
jecxz
sub
bound
sub
je
sub
sub
adc
cmpsb
push
das
push
mov
mov
sub
dec
mov
dec
xor
lret
xchg
xor
popa
sub
ret
sub
sbb
leave
xchg
mov
jg
adc
ret
das
cmp
xchg
cmpsl
roll
ret
inc
std
and
xchg
scas
jne
pop
stos
add
pop
add
cmp
ret
push
orl
scas
sub
and
enter
shl
add
jne
into
addr16
add
or
adc
add
jmp
add
xchg
sarl
repnz
or
cmp
lds
adc
cmpb
test
cld
push
push
mov
xchg
mov
jmp
sub
dec
sbb
jae,pt
fisttpl
test
insb
add
pop
lret
inc
in
xchg
out
jb
cmp
inc
add
mov
add
inc
sub
xchg
mov
dec
pop
mull
push
nop
xor
inc
ljmp
in
and
xor
or
sbb
and
add
adc
push
xor
leave
mov
ljmp
or
aad
mov
xchg
xor
addr16
mov
push
fstpt
and
lea
into
test
clc
push
loop
mov
shl
das
add
add
ret
push
mov
dec
dec
popa
mov
or
mov
into
repz
add
xchg
test
ficoms
adcb
gs
add
mov
xor
out
orb
push
cmp
clc
fildl
shlb
add
dec
imul
sub
jmp
bound
pop
mov
lock
jne
gs
pusha
cwtl
ja
stc
cltd
push
jmp
out
and
adc
jp
aaa
pop
xor
dec
push
push
mov
and
pop
cmp
push
sub
push
sub
popa
sbbl
int
rolb
dec
rclb
icebp
push
mov
jo
stos
xor
mov
pop
shlb
add
add
mov
sbb
and
shrl
mov
jb
test
popa
imul
jnp
out
cmp
xchg
push
fnsave
push
adc
xlat
ret
imul
xchg
xchg
jno
dec
xchg
add
xchg
sbb
dec
pop
add
cmp
int3
or
stos
test
not
pop
leave
push
push
add
mov
das
mov
mov
and
imul
cmp
popa
add
shl
dec
test
adc
sti
mov
mov
dec
call
ds
push
mov
punpckhbw
xchg
xchg
dec
push
rcr
inc
and
xchg
ficomps
push
data16
add
sbb
dec
xor
sbb
jg
dec
and
incl
mov
in
scas
das
mov
cmp
mov
mov
push
imul
add
push
mov
and
cmp
js
pop
mov
adc
jp
mov
nop
nop
pop
daa
fmull
movsb
inc
subb
cmc
mov
repnz
shll
stos
mov
sbb
xor
mov
mov
andl
out
jle
dec
xlat
mull
add
mov
ss
shl
repz
cmpl
push
pusha
sub
scas
or
cmp
sahf
or
and
inc
sub
adc
dec
addr16
nop
popf
cmp
ficoms
scas
mov
cli
mov
jno
das
popl
mov
jl
js
std
inc
sbb
inc
mov
xchg
lock
imul
loope
sbb
leave
dec
cmpb
add
lock
movsl
jo
fidivl
outsb
aad
inc
inc
imul
and
ret
pop
ror
les
cmp
push
inc
addl
sbb
data16
xchg
and
sub
add
mov
sub
mov
xchg
ja
orl
inc
ret
mov
out
scas
add
or
or
ds
jne
add
xchg
or
out
sbb
scas
xchg
andb
pop
enter
add
lea
add
inc
pop
or
cld
pop
fldenv
add
insb
and
call
push
push
push
loop
loop
pop
or
push
xchg
sbb
cmp
adc
lock
in
les
and
fs
push
mov
subl
xchg
fs
shl
or
add
or
and
in
dec
xor
sbb
enter
xchg
cmp
push
pop
jl
rorl
cmpb
mov
or
movzbl
out
pop
cltd
ret
jmp
dec
repz
mov
push
icebp
mov
nop
push
fs
test
inc
or
testl
mov
add
mov
push
movsl
or
and
sub
mov
add
lret
popa
into
jnp
push
xor
aaa
daa
aad
adc
fwait
inc
mov
add
mov
mov
jecxz
test
cmp
loopne
test
clc
cmp
mov
les
or
test
lock
insl
or
mov
cltd
mov
dec
repz
mov
aaa
fisubl
pop
mov
imul
mov
pop
test
mov
mov
subl
subl
nop
mov
rcl
adc
jmp
hlt
ja
ret
popf
sub
pop
or
clc
mov
mov
push
loope,pn
daa
es
fstps
xchg
outsb
jo
rolb
popa
inc
cmp
mov
xlat
push
movb
push
into
fstps
mov
push
mov
cld
add
je
lahf
xchg
or
push
or
xchg
adc
repnz
jae
add
mov
jmp
mov
popf
in
in
adc
sub
adc
xchg
addr16
es
pop
adc
test
shrb
imul
adc
jg
pop
pop
arpl
mov
add
mov
aas
mov
push
inc
xlat
test
and
std
repz
adc
push
inc
inc
movsb
aas
jmp
mov
jg
push
mov
dec
push
je
dec
jne
push
push
arpl
or
pop
clc
adc
push
and
adc
push
inc
lahf
mov
imul
sbb
sub
inc
mull
add
addb
inc
fldl
mov
or
pop
mov
je
lea
daa
daa
int
sbb
xor
or
icebp
inc
dec
dec
adcl
jle
or
mov
rcl
push
ret
aaa
mov
add
jbe
aas
jg
lods
inc
add
inc
push
push
push
stos
inc
mov
fs
sub
push
add
or
add
xchg
cmpsb
sbb
cmpb
notrack
and
addr16
push
ficompl
sub
xor
dec
or
inc
sub
inc
or
add
jecxz
sbb
movlps
loopne
inc
pop
or
cs
xchg
mov
add
in
adc
movzbl
push
push
or
and
ret
cmp
inc
repnz
or
loopne
pusha
xchg
out
xchg
jl
cs
pop
es
cmp
je
sub
ret
dec
xchg
and
and
or
xchg
xchg
into
pop
into
adc
sbb
cmp
cmpl
rolb
movsl
inc
addl
mov
dec
jmp
or
adcl
inc
pop
and
js
adc
repnz
cmp
push
xchg
mov
pop
test
mov
adc
and
cmp
inc
in
sub
lcall
cmp
push
dec
sub
pop
add
push
push
movsl
fs
push
xor
jnp
push
xor
sub
js
dec
xchg
test
in
nop
xchg
cwtl
sub
or
xchg
or
and
and
and
adc
xchg
sub
sub
inc
movb
je
sub
mov
mov
scas
test
add
push
fwait
ret
fnsave
test
jmp
pop
scas
lea
mov
jmp
cmp
jae
sub
xchg
add
xchg
cmc
push
ds
imul
ja
inc
in
andl
dec
jns
xor
mov
pop
lret
sub
jecxz
nop
ret
xchg
add
test
xor
js
bound
stos
push
cmpsl
dec
int
push
jo
jle
inc
dec
in
sbb
mov
es
and
adc
ss
adc
sbb
and
in
loopne
push
jmp
push
test
and
flds
mov
out
ret
outsb
pusha
inc
jmp
icebp
mov
mov
mov
add
add
add
aas
xchg
push
dec
js
pop
mov
dec
add
clc
xchg
add
jl
adc
mov
test
mov
repz
mov
mov
dec
jnp
je
test
aaa
add
aaa
pop
pop
add
inc
xor
or
inc
fs
sub
leave
insb
mov
mov
dec
andb
sbb
and
or
and
push
inc
scas
sbb
add
push
sbb
dec
or
sahf
or
ja
cmp
jmp
mov
lea
or
popa
and
inc
xor
push
sub
xor
add
outsl
fimull
rolb
mov
jae
clc
shll
jl
sti
sub
shr
add
mov
sub
push
outsl
aas
int3
jo
imul
inc
inc
enter
inc
out
jle
add
and
divl
xchg
dec
sbb
and
or
push
jmp
pop
add
std
test
jne
mov
sahf
xor
or
jl
ret
pop
dec
sub
mov
pop
pop
adc
rolb
sbb
ret
call
loopne
jmp
movsl
push
pop
or
orl
mov
insb
je
push
xchg
add
jo
pushf
inc
testb
xor
insb
sbb
xor
xchg
mov
sbb
push
inc
and
xchg
incl
popa
jmp
cmp
jae
mov
xor
sahf
push
pop
mov
dec
and
arpl
push
jmp
xchg
xchg
add
and
sahf
jmp
hlt
add
ret
rcrl
push
pusha
stos
pusha
xor
jnp
lcall
cmp
jae
mov
lahf
sub
sbb
xchg
icebp
je
sbb
add
dec
adc
jne
sbb
pop
dec
add
sub
iret
push
sbb
inc
mov
adc
enter
lock
les
ljmp
add
shlb
mov
pop
loope
or
xor
adc
imul
xor
imul
dec
mov
adc
jb
xchg
inc
xor
adc
push
add
sub
orl
aad
mov
xchg
sub
daa
push
push
pop
sbb
testb
je
push
test
in
dec
cmp
cwtl
ja
dec
inc
lret
adc
pop
cmp
dec
enter
xorb
lods
ds
add
outsb
out
xor
les
cmp
sbb
dec
loopne
ret
aaa
mov
bound
push
sub
and
mov
mov
mov
lea
pusha
inc
mov
iret
jnp
sahf
or
lret
sbb
push
test
inc
rorl
sub
jns
pusha
sbb
jo
in
pop
push
push
mov
sbb
lock
addb
fs
leave
inc
pusha
pop
and
test
mov
pop
or
or
dec
inc
movsl
loop
pop
js
add
and
inc
sub
mov
lods
aad
sub
cmp
ljmp
inc
loope
rolb
pop
push
inc
push
add
jnp
mov
jns
cld
sbb
jnp
packssdw
cmp
add
ss
rorl
cmpl
mov
sbb
ljmp
sub
lea
test
adc
jge
adc
test
sub
sbb
cmp
xchg
pop
outsb
adc
inc
mov
dec
add
lods
mov
rolb
or
sbb
sbb
test
cmp
stos
inc
push
lock
mov
sub
sbb
rol
xor
daa
movsl
push
push
pop
jae
bound
add
xor
jg
cmp
inc
jo
cmpb
test
add
nop
mov
dec
sub
repnz
fdivrp
mov
enter
imul
cltd
arpl
or
add
rclb
add
leave
sbb
adcb
das
aaa
sbb
je
add
filds
push
or
cmpsb
xor
mov
daa
mov
and
ljmp
mov
sbb
ja
add
sbb
inc
pop
arpl
cmovne
ucomiss
pop
mov
sbb
pop
les
pop
int3
cmp
inc
movsb
xchg
lods
dec
call
in
cltd
in
xor
in
leave
adc
and
xor
mov
mov
adc
xchg
arpl
or
mov
cmp
push
xchg
push
adc
xchg
arpl
or
mov
pop
leave
sub
push
js
repnz
sbb
sub
xchg
mov
es
sbb
js
add
sbb
mov
push
xor
pop
sbb
dec
adc
sbb
sbb
jo
mov
or
fidivl
fsts
and
dec
push
test
push
mov
cmp
inc
popa
adc
mov
movsl
fst
pop
lods
xchg
xchg
out
add
sbb
les
sub
rcl
test
jbe
fsubl
xchg
mov
mov
lea
dec
dec
pop
dec
stos
adc
jne
mov
or
pop
enter
add
or
adc
ja
sub
outsb
adc
pusha
mov
test
push
push
pop
inc
push
mov
sub
call
push
mov
loopne
mov
jl
popf
negb
jge
dec
xchg
push
or
push
lahf
and
ret
loope
push
mov
andb
shlb
aam
ja
add
fwait
xchg
mov
sahf
shll
dec
pop
test
nop
add
add
inc
xor
out
pop
ret
push
imul
dec
pop
pop
test
pop
pop
push
add
xchg
test
xor
push
call
mov
sbb
inc
xor
les
pslld
mul
jne
out
sti
sub
inc
xchg
pop
js
lret
stos
push
inc
testb
fmull
loope
or
jle
or
and
jne
lock
fiadds
dec
push
push
xchg
aaa
test
and
aas
lock
add
push
adc
pop
lds
dec
or
cmp
or
and
jns
test
dec
adc
lea
push
or
sbb
pop
mov
aaa
outsb
roll
dec
addl
cmp
and
and
cmp
push
and
inc
pusha
mov
pop
enter
mov
shll
rclb
sub
mov
jns
in
loopne
call
push
rcrb
adc
pusha
sbb
inc
movsl
fs
inc
xchg
cwtl
pushf
sbb
pushf
rclb
enter
sbb
pop
jl
mov
mov
lahf
out
into
test
fcompl
stos
inc
enter
sub
mov
sbb
cmp
xor
mov
jb
movsl
or
sbb
sbb
adc
xor
pop
stc
or
adc
mov
fistpll
pop
jl
js
mov
pop
aas
or
sbb
push
repz
loopne
push
mov
or
pop
cmp
mov
or
pop
jb
sbb
test
fadds
in
and
cmpb
xor
push
xor
and
cmp
dec
xchg
pop
and
sti
adc
shlb
mov
push
sbb
add
xchg
rcrb
pop
loope
mov
mov
pop
cltd
sub
scas
lods
push
or
and
cwtl
lods
or
enter
pop
and
sbb
mov
aaa
sbb
daa
xchg
xchg
inc
cs
cmp
and
or
mov
or
add
and
add
fstpl
popa
and
adc
sbb
fidivl
es
aad
test
xor
cmp
ret
dec
enter
cmp
in
orl
xor
leave
mov
cmp
les
mov
mov
adc
cld
xchg
and
add
aad
sbb
daa
sbb
add
cmp
fists
dec
cmp
scas
and
mov
mov
mov
testb
sub
pop
mov
xchg
mov
mov
and
add
sbb
icebp
or
shll
mov
jbe
aas
sub
mov
jge
shlb
jecxz
push
mov
sub
inc
stc
lock
clc
cmp
orl
loope
add
sbbl
dec
orl
das
mov
aam
inc
xor
xor
mov
sub
movsl
push
je
push
inc
scas
dec
jbe
push
adc
push
sbb
push
sub
mov
fistl
lock
cmpsl
inc
fucomp
xor
dec
inc
sbb
nop
xor
shl
js
std
pop
xor
aam
pushf
dec
js
and
and
imul
cmpsl
lods
test
mov
jns
push
push
lret
iret
pop
or
les
add
out
imul
fnstsw
inc
scas
inc
ss
int3
into
cmp
mov
xchg
add
mov
aaa
enter
sbb
push
jns
imul
add
dec
dec
mov
mov
mov
push
lret
adc
cmp
in
imul
cmp
fimull
push
push
xchg
leave
xor
and
fs
or
xor
push
push
aad
js
pop
fs
jnp
sub
or
jnp
decl
xchg
orb
imul
aas
xchg
inc
sub
enter
mov
or
sub
push
mov
les
mov
les
mov
xchg
mov
xchg
or
add
lods
adc
pop
pop
jecxz
sub
and
and
dec
pusha
mov
or
and
sbb
cmp
cmp
adc
sahf
cmp
mov
and
jb
sbb
fisttpll
dec
xchg
pop
in
das
fcomip
cwtl
nop
push
fistpl
repnz
mov
inc
add
inc
scas
adc
add
jmp
in
or
movsl
inc
push
int3
ret
pop
sub
pop
jl
jmp
add
push
or
jbe
sub
add
les
daa
and
pop
jp
adc
icebp
repnz
popa
mov
mov
sar
inc
cmp
push
imul
shrb
movsl
jno
imul
arpl
dec
jg
mov
loop
cmp
mov
shlb
and
jns
adc
add
aas
aaa
add
cmp
push
cmp
mov
add
push
pushl
aaa
pushl
inc
cmp
sub
dec
cmp
push
or
inc
jp
sub
repz
inc
mov
dec
mov
adc
gs
lret
and
pop
pusha
and
in
sbb
xchg
add
lret
inc
or
mov
or
jge
mov
sbb
add
push
sbb
or
pop
fdivr
push
push
test
cltd
dec
fcmove
ret
lret
inc
and
outsl
insl
sbb
ljmp
xchg
or
or
xchg
iret
or
loope
adc
push
jbe
sub
jno
ss
mov
mov
push
pop
or
mov
popf
iret
les
das
sbb
pop
int
inc
jge
pop
push
mov
ret
xor
int
add
rcrb
push
popf
jecxz
and
mov
add
add
cltd
arpl
push
comiss
dec
cmp
inc
push
or
and
add
sub
js
pusha
adc
xchg
pop
daa
ret
jecxz
int3
cmp
fldcw
pusha
rcrl
xchg
cmp
loop
mov
gs
incl
test
inc
sub
add
sub
sub
sbb
add
pextrw
sbbl
sub
inc
jb
mov
mov
add
sbb
cmc
dec
cmp
xlat
push
addb
sub
test
sbb
sub
mov
push
jns
sbb
xor
ljmp
sbbl
in
push
cmp
xchg
xchg
stos
xchg
fists
aam
and
mov
lock
sub
shlb
xlat
leave
leave
fsubl
call
ret
xchg
xchg
or
mov
and
pop
sub
int3
jno
push
jmp
imul
es
xor
shll
and
cmp
ljmp
ljmp
jmp
fwait
cmpsb
stos
mov
iret
int3
sbbl
enter
aam
enter
cld
xor
xchg
pop
jno
or
mov
dec
and
lods
adc
mov
mov
fs
push
enter
shlb
sub
push
pop
or
xor
mov
dec
sbb
lock
adc
scas
adc
inc
push
mov
dec
mov
mov
push
sbb
jo
jg
sbb
addl
lock
orl
setne
ror
cmpb
stos
add
sub
mov
fisubrl
movsl
mov
lea
ret
pop
mov
mov
xor
das
jecxz
pop
pop
test
stos
outsl
mov
or
popl
xchg
pushf
add
push
mov
add
push
add
popf
xor
in
int
xor
xor
cmp
lods
adc
mov
dec
popa
jne
inc
sub
mov
mov
add
lret
xlat
push
repnz
test
sbb
xor
std
or
and
nop
mov
xchg
or
je
dec
enter
add
and
sbb
jae
scas
mov
sahf
in
mov
or
mov
mov
pop
or
fidivs
and
test
jb
adc
cmp
pop
enter
stos
dec
das
lods
adcl
addr16
enter
sub
cmp
sub
pop
rolb
jp
mov
stos
mov
imul
add
jle
adc
jecxz
xchg
dec
aaa
insl
push
daa
sub
cmp
xchg
sbb
les
cli
xchg
cs
aas
mov
mov
ljmp
push
ja
outsb
rcrl
inc
enter
inc
lea
jae
inc
pop
or
pop
adc
dec
adc
out
mov
mov
xchg
mov
push
xchg
in
fistpll
in
mov
sbb
pop
or
outsl
or
inc
sbb
xor
add
mov
loope
mov
fiaddl
clc
aaa
sbb
enter
sbb
and
adcl
test
push
or
push
pop
pop
pop
imul
sbb
mov
push
call
cmpb
xchg
add
das
mov
idivb
xorl
pop
and
pop
add
jnp
inc
aaa
scas
pop
dec
test
cmpsb
dec
push
pop
nop
sub
ret
xchg
ret
adc
mov
lods
push
adc
call
or
xor
jae
jno
jnp
add
push
mov
test
jne
mov
sub
sbbl
das
inc
loope
ret
sbb
mov
push
lcall
or
add
leave
xchg
sahf
and
or
or
inc
cmp
sub
and
popa
sbb
rolb
or
cli
mov
dec
test
popf
jl
sbb
push
pop
movl
cmc
sub
push
sbb
shrb
xchg
jecxz
and
mov
je
and
and
or
inc
ja
cmpsb
addr16
adc
sub
cmp
jne
out
push
adc
inc
or
push
test
adc
sbb
dec
repnz
and
mov
fimull
loopne
xchg
dec
les
sahf
push
or
xchg
dec
cs
or
add
sbb
xor
std
jle
sbb
mov
and
push
addr16
pop
outsb
or
xor
je
roll
pop
add
pop
sbb
mov
popl
sbb
cmp
sub
mov
sti
hlt
imul
mov
xchg
mov
jne
and
movsb
pusha
push
mov
lea
faddl
mov
pop
sbb
sub
lods
xor
les
xchg
and
sbb
adc
leave
inc
inc
mov
divl
das
and
mov
mov
mull
ja
adc
add
ss
sbb
jne
jle
and
push
cmp
add
inc
xchg
jg
jge
add
mov
adc
mov
movsl
xor
or
adc
mov
dec
add
or
outsl
and
stos
sub
add
adc
and
push
repnz
mov
call
leave
ret
cld
push
adc
or
and
pop
mov
fsubl
icebp
pop
ret
and
sub
add
sub
in
cwtl
inc
add
add
in
jmp
scas
aad
jo
loop
xchg
inc
ds
das
inc
add
sahf
test
xor
movl
rcrb
push
mov
rorl
dec
cwtl
idivb
mov
add
jecxz
adc
and
dec
adc
mov
xor
inc
inc
dec
imul
sbb
lcall
inc
inc
xchg
inc
je
add
and
dec
jnp
fstps
sub
dec
sbb
sbb
mov
or
mov
sbb
adc
and
sub
lock
lahf
imul
or
or
mov
adc
inc
or
sahf
ret
and
add
mov
rorb
test
fs
and
xchg
inc
jo
cmpl
in
push
mov
sbb
cmp
jbe
adc
dec
ret
adc
push
ljmp
xlat
mov
dec
insb
sub
push
idivl
rcrl
insb
jo
lea
mov
lea
add
push
mov
xor
dec
aas
add
xor
pop
pop
test
ds
fisttpl
add
xchg
mov
add
mov
lea
mov
push
clc
mov
ficoml
cld
sub
pop
fimuls
mov
test
push
lea
sub
or
cs
and
sub
lret
jbe
inc
scas
int
lods
push
jecxz
pusha
mov
jo
sbb
stos
mov
mov
rorb
add
and
push
push
test
cmp
mov
je
xor
sbb
shlb
int
cli
and
mov
mov
inc
add
lret
mov
mov
or
mov
das
inc
add
mov
push
lcall
or
push
add
dec
shlb
dec
int3
sub
inc
add
ret
push
jl
push
push
fsubl
mov
lods
xchg
hlt
inc
mov
adc
adcb
sbb
fcom
addl
clc
test
adc
jg
enter
add
mov
adc
je
jno
idiv
cmp
je
cmp
je
cmp
je
push
das
sub
or
sub
nop
cmp
sahf
push
mov
cltd
inc
lret
into
add
mov
xor
out
add
cmpb
push
lea
adc
inc
aam
push
decb
push
pop
cs
xor
xlat
cltd
lret
les
fwait
xor
sbb
or
sub
mov
xor
or
repz
pusha
lods
mov
sbb
jns
adc
add
mov
pop
jnp
push
mov
jg
nop
sti
add
lea
js
js
adc
sbb
idivl
or
jne
inc
xorl
cmp
bound
lret
movsb
fmull
adc
sub
shll
subb
outsb
or
mov
and
xor
and
test
inc
test
movsb
les
push
in
shrb
cmp
loope
push
push
test
sbb
mov
scas
pusha
xor
mov
inc
stc
aam
push
push
xlat
jne
mov
and
mov
pop
into
fdivrs
cmpsb
fdivrl
sahf
mov
sbb
test
pushf
lods
sarl
jmp
jecxz
inc
cmpsl
test
push
xchg
es
sub
dec
inc
mov
lea
or
sub
xor
pop
mov
mov
adc
test
rdmsr
push
xchg
sub
imul
and
adc
sahf
cmpl
and
inc
sub
ret
pop
dec
add
add
loopne
aaa
jecxz
push
mov
adc
sbb
cmp
ljmp
cmp
mov
sahf
orb
or
push
mov
imul
xchg
xor
test
add
sbb
lods
movsb
fwait
lods
mov
push
ja
add
mov
pop
ret
js
push
cmp
push
nop
test
jo
aaa
push
imul
and
dec
or
or
add
push
cmp
cmp
cmc
nop
pop
adc
pop
cmp
imul
ret
add
add
adc
shll
dec
mov
cmp
pusha
and
scas
pop
push
mov
jmp
sbb
mov
mov
adc
mov
pushl
sbb
sbb
dec
decl
sub
mov
cwtl
es
inc
pop
and
rorl
lds
sbb
inc
mov
rol
sbb
sbb
cmpsl
jge
lea
xor
or
cld
pop
push
icebp
cmp
je
push
ret
or
xor
adc
lea
jecxz
js
and
test
inc
adc
add
sub
push
mov
add
or
jo
aaa
mov
push
push
inc
jbe
call
shrb
inc
xor
ss
gs
nop
adc
push
push
mov
adcb
gs
cmp
mov
adc
mov
sti
push
divl
jbe
and
xlat
ss
or
add
sbb
jbe
hlt
dec
jne
or
mov
mov
out
or
jge
add
adc
pushf
in
xchg
add
adc
pop
cmp
adc
push
inc
jo
mov
or
cli
test
or
pushf
test
fildl
and
lock
in
adc
out
in
aas
fisttpl
movsl
add
test
or
xorb
cmp
fsubrl
xlat
bound
sub
push
ret
pusha
popa
imul
or
xabort
jge
sub
sub
add
xor
call
mov
sar
pop
clc
push
add
enter
push
iret
sbb
fcomi
sub
andl
mov
sbbl
pop
shl
jne
jne
cmp
jne
pop
pop
std
rcrl
mov
enter
cmp
in
test
jecxz
mov
lea
push
int3
cs
andnps
xchg
cld
add
shrl
lret
rolb
or
in
clc
jg
in
push
call
or
pushl
or
movsl
clc
adc
mov
adc
ficomps
pop
mov
add
orb
jbe
shl
inc
jle
pop
pushl
dec
mov
lock
or
in
mov
sbb
push
mov
lds
test
sbb
add
mov
dec
or
lahf
adc
add
xor
clc
fucomi
aad
adc
jno
and
lods
and
and
add
pop
pop
ret
mov
pop
mov
std
cmp
jb
cmp
pop
add
std
cli
jb
adc
add
jne
pop
jbe
jb
or
add
les
shll
adc
dec
push
ror
fistl
cmpsl
test
mov
push
pop
pop
arpl
sub
roll
push
mov
push
sub
pop
aas
jne
pop
push
mov
into
push
pop
push
scas
push
inc
add
pop
cmp
popf
in
add
push
mov
fisttpll
fisubl
adc
movsb
mov
loopne
es
ret
push
inc
sub
rcrb
pop
sti
cmpsl
scas
les
add
nop
jmp
cltd
nop
dec
dec
mov
lock
add
outsb
stos
add
fninit
adc
pop
add
outsl
mov
xchg
mov
push
js
mov
mov
insb
loopne
shl
adc
sbb
and
cli
inc
xor
add
notl
dec
push
incl
es
xor
fisubl
push
push
add
cmp
pop
xchg
push
push
pop
leave
insl
push
xchg
insl
push
adc
fisubrs
loopne
test
pushf
xchg
push
xor
call
jle
push
jbe
mov
add
mov
ss
mov
dec
dec
dec
and
aas
fadds
sub
ret
add
out
les
imul
test
inc
xor
gs
cmp
aad
push
das
sahf
and
sbb
or
imul
cld
mov
into
test
inc
mov
lea
mov
add
push
push
inc
sub
cmp
xchg
mov
push
jns
push
sbb
adc
outsl
adc
and
rolb
mov
inc
push
mov
enter
mov
icebp
loopne
cmp
push
mov
mov
or
lock
add
pop
cmp
dec
xor
cld
shlb
adc
sbb
ljmpw
sbb
adc
xchg
xchg
popa
pop
add
cmpsb
rcrb
out
outsb
dec
or
add
jmp
and
sub
fwait
or
lods
shlb
sbb
addr16
mov
cmp
dec
fmull
fidivl
push
lcall
xchg
adc
push
dec
xor
sarl
add
push
roll
les
pop
jo
dec
or
xchg
cld
xchg
cmc
je,pn
fldl
jle
sub
inc
push
or
cmp
loope
inc
pushf
mov
cmpsl
into
out
cmp
jns
jne
jl
sub
xchg
loop
pop
fmuls
cmp
mov
jns
mov
inc
cltd
lock
sub
mov
jbe
popa
push
cwtl
lods
push
into
jnp
test
lods
ret
and
fiaddl
loopne
in
or
add
loop
ret
or
int
mov
add
mov
or
pop
mov
pop
shl
inc
loopne
dec
adc
mov
push
mov
mov
push
les
push
mov
xchg
aaa
sbb
pop
xor
jg
xor
addl
repnz
and
xor
aaa
or
lock
aas
addl
cmp
fs
add
push
nop
sbb
rcrb
mov
add
xor
fldl
push
push
and
iret
cmp
add
into
inc
nop
push
mov
add
or
in
fs
das
ljmp
movsb
xor
imul
fs
out
push
push
push
and
insl
inc
shl
pop
je
push
push
outsb
stos
subb
push
nop
pop
xor
adc
jne
test
adc
cmp
sbb
outsl
pop
jmp
push
pop
jmp
bound
jbe
add
rcrl
cwtl
test
mov
pop
je
cmpsb
adc
stc
push
sbb
icebp
pop
pop
pop
push
adc
mov
mov
add
push
cltd
shlb
push
pop
sub
add
or
push
jecxz
push
jbe
lea
out
push
js
mov
add
add
sub
aad
movsb
cs
cmpsl
pop
pop
lcall
inc
mov
cmp
push
shlb
push
push
sbb
push
xchg
push
ficomps
or
call
repnz
cmp
adc
sbb
adc
in
xchg
lahf
inc
cmp
mov
adc
or
jge
rcr
dec
jmp
cmpl
lods
jmp
daa
ljmp
mov
inc
popa
and
xchg
ss
xchg
add
adc
sbb
call
call
mov
scas
js
adc
mov
inc
ret
dec
mov
shl
or
loope
and
xor
jge
or
loopne
aam
loop
add
jne
dec
sub
push
movb
jns
inc
sahf
push
out
hlt
movhps
cmp
imul
ja
fmull
les
lret
in
and
sub
push
adc
test
insb
pushf
xchg
repz
sub
adc
dec
sbb
jno
or
and
enter
add
fadd
cmp
call
cmp
xor
sub
sub
add
fwait
add
inc
jg
jmp
adc
adc
pop
mov
aaa
movsl
mov
inc
and
or
mov
in
enter
in
add
xor
inc
jb
in
test
xchg
and
jle
lea
cmpb
jne
movsl
mov
push
push
xchg
sti
daa
or
lock
ds
pop
push
clc
movb
push
adc
sub
cmp
pop
jl
int
inc
fstps
or
clc
and
add
test
dec
repnz
fdivl
mov
fimull
sub
cmp
adc
cmp
out
call
xor
sub
push
mov
orb
push
add
lea
jbe
aad
xor
pushl
cmp
jne
fdivs
add
scas
push
add
out
out
jne
stos
mov
clc
int3
add
adc
push
pop
push
out
imul
test
hlt
out
neg
test
or
mov
inc
or
shl
mov
nop
mov
scas
mov
or
rep
ret
addl
in
adc
sbb
outsb
and
rolb
or
sbb
loopne
je
cld
jle
jbe
push
out
push
adc
je
sti
mov
test
pop
repnz
inc
cmp
jb
pop
pop
adc
xor
lods
adc
jle
data16
push
xor
pusha
cli
pop
aam
jl
fisttpl
cmpsb
and
jp
hlt
sub
js
decl
push
mov
push
push
divl
fld
add
in
aas
negb
mov
xor
and
jmp
cmp
jne
xor
xorl
xor
mov
jg
lahf
xchg
xchg
push
pop
pop
in
add
addl
add
push
mov
push
push
sbb
rolb
mul
seto
rorl
sub
enter
mov
sub
jmp
adc
int3
xor
jnp
in
jl
mov
and
mov
cltd
cltd
addr16
mov
push
push
cmp
je
mov
scas
inc
mov
idivl
or
xchg
loope
std
mov
mov
mov
fcmovnbe
push
loopne
dec
inc
xchg
int3
dec
and
and
cmp
push
cmpl
jne
push
pop
mov
ja
pop
loope
lcall
sbb
mov
shl
lea
jmp
dec
fcmovu
lods
push
sub
push
into
inc
sub
dec
jns
test
ja
dec
neg
xor
push
pop
inc
add
pop
orb
xchg
add
jbe
push
adc
insb
fistl
or
xor
sub
inc
sbb
sub
or
and
mov
add
pusha
es
sub
cmp
imul
and
xor
push
inc
sbb
mov
push
adc
push
insb
andl
fcmovb
push
insb
outsl
sbb
adc
add
ficoms
and
mov
mov
ret
aad
call
fstl
jg
add
push
loop
orb
fsts
ret
or
dec
dec
mov
imulb
outsb
inc
mov
jl
cmp
hlt
jae
nop
sub
and
sbbb
pop
dec
mov
push
mov
cld
mov
fdivl
mov
mov
jmp
faddl
pushf
leave
push
nop
clc
mov
jmp
xchg
std
add
cmpsl
ds
mov
lea
iret
nop
ret
adc
ficoms
push
test
xor
push
and
or
lds
bound
adc
jnp
rcrb
add
mov
jnp
lcall
int3
adc
xchg
pushf
loop
les
push
adc
mov
or
xchg
ja
sub
jbe
jb
xor
pop
jo
into
insl
jmp
xchg
adc
add
js
add
jp
lea
or
dec
xchg
sub
cmp
xlat
adc
leave
push
adc
xor
into
sub
ficoml
cmp
ret
xchg
push
dec
sub
mov
popa
in
clc
jl
cmpl
cmp
sar
dec
sbb
ds
inc
add
es
xchg
mov
or
mov
add
jle
fidivs
aad
subl
cs
mov
mov
rcrb
jns
mov
pop
incb
nop
sbb
js
push
cmpl
ljmp
fadd
xor
test
cmp
push
sub
cwtl
add
cwtl
pushf
loope
xor
add
cmp
mov
sbb
lea
test
xor
jp
pop
or
pop
int3
test
inc
icebp
jmp
xor
test
dec
js
shrb
add
jl
sbb
push
inc
ss
popf
sub
adc
into
xor
test
cs
and
pop
in
in
and
push
jecxz
push
sub
leave
sbb
mov
dec
cmp
or
js
dec
jmp
pop
jb
dec
adc
push
push
mov
lcall
sub
pop
sahf
lcall
leave
mov
in
pusha
es
push
pop
adc
pop
cmp
je
jmp
icebp
cs
xlat
sub
popa
outsb
call
push
add
jle
mov
andl
add
loope
mov
outsb
sbb
or
insb
push
mov
inc
dec
mov
add
mov
xor
fcom
push
inc
dec
cs
adc
adc
sub
adc
clc
pop
jmp
in
ja
or
mov
push
mov
es
inc
jbe
sbb
cmp
jne
hlt
and
data16
sbb
pop
lret
dec
ret
shll
test
push
or
imul
cmp
inc
in
xchg
pop
ds
call
sbbb
cli
lock
cld
inc
mov
xor
add
adc
es
sbb
cmp
pop
lock
testl
cli
inc
in
push
push
insb
bound
pusha
divb
mulb
ljmp
add
stos
push
push
pushf
jge
loopne
push
mov
mov
cmp
mov
sbb
adc
jmp
lds
lock
subl
and
jmp
and
fadd
fildl
pop
int
dec
push
cwtl
call
xor
and
inc
inc
call
and
dec
arpl
jmp
in
push
hlt
jg
loopne
push
imul
mov
jo
arpl
inc
addb
sti
cmpl
movsb
push
cmpsb
test
lret
add
jo
ret
aas
loop
lock
sub
push
mov
cmp
mov
dec
add
inc
or
mov
cwtl
js
test
lods
push
push
fistpl
sahf
add
fistpll
jb
lods
mov
push
or
mov
aad
pop
into
adc
cwtl
test
out
push
adc
mov
inc
mov
rcll
sarl
adc
add
sarb
cmp
insb
test
xchg
imul
mov
ret
shl
jl
pusha
inc
dec
shr
mov
adc
cmp
push
mov
lods
dec
inc
fdivs
push
mov
push
push
xor
add
bound
subb
cld
push
xor
divl
jl
mov
aam
dec
add
ljmp
cmp
add
mov
call
push
sbb
jge
mov
loop
jmp
sbb
test
pop
inc
push
jl
jne
or
in
inc
movsl
pop
hlt
cmpsl
xchg
sbb
push
xor
cmp
mov
inc
mov
ret
mov
loopne
mov
je
fcompl
loop
cld
add
adc
mov
xchg
stos
aas
add
dec
pop
int3
fwait
clc
roll
sbb
adc
push
sub
mov
je
pop
inc
aas
push
lcall
mov
jbe
jmp
mov
sub
or
data16
and
mov
push
insb
push
cmp
in
insb
add
mov
add
pop
fs
jb
or
sub
mov
push
add
je
popf
jmp
jl
loopne
push
jnp
inc
push
xor
push
mov
xchg
mov
xchg
pop
pop
aam
lahf
ret
mov
test
sub
cmc
xor
dec
mov
lods
rcrb
cmp
mov
jbe
mov
push
jns
fs
inc
push
cmpsb
adc
adc
push
mov
andl
test
into
push
push
lea
aaa
dec
ficompl
call
push
xchg
pop
inc
adc
adc
jno
stc
outsb
dec
sbb
jbe
sbb
fidivl
push
inc
sub
push
idivl
add
loop
pop
cmp
data16
nop
loopne
lock
or
test
pop
xor
fcompl
mov
pop
in
mov
jbe
pushf
mov
mov
xchg
in
iret
cli
pop
cli
cmp
jb
adc
xor
push
add
xor
lcall
push
mov
or
mov
sbb
std
repz
inc
push
mov
cltd
ret
lea
adc
sbb
dec
lcall
xor
sbb
mov
xchg
into
pusha
cmp
and
push
cmp
ja
nop
or
int
dec
ja
cmp
push
shr
mov
add
jle
adc
adc
in
mov
and
jmp
mov
sbb
cmp
xchg
add
pop
roll
mov
stos
push
in
pushw
sbb
add
dec
push
js
ret
inc
imul
dec
jbe
mov
or
push
insb
sub
lcall
sbb
xchg
inc
mov
push
js
fstpl
ds
xchg
xchg
jmp
das
push
pop
xchg
jp
push
inc
pop
push
gs
pusha
push
mov
call
sbb
xorb
xor
insl
call
cltd
or
lds
push
sub
je
sub
fldl
cmp
insl
sbb
in
push
nop
jne
lcall
dec
cmpsb
shrb
push
hlt
mov
add
jne
cmp
sbb
add
mov
rorb
je
inc
or
jae
jl
lea
jne
add
sahf
out
dec
push
je
inc
lret
repz
cmp
or
in
insb
jne
or
cmp
push
push
mov
inc
sbb
cmp
mov
js
dec
push
mov
push
xor
or
pop
aad
movsb
pop
outsb
sub
cmp
and
lcall
fmuls
nop
pop
adc
or
out
push
or
jo
imul
cmp
mov
popf
xchg
sub
and
int
pushf
add
outsb
popf
push
dec
pop
mov
iret
dec
test
cltd
xchg
mov
mov
les
jb
push
push
xor
lea
sahf
xchg
xchg
xchg
js
xchg
je
scas
xorb
sbb
outsb
aaa
cmp
sbb
sar
jno
adc
sbbb
xor
xor
inc
jo
inc
and
push
test
add
pop
sub
cmp
sbb
adc
jnp
jle
cwtl
or
dec
loopne
adc
or
in
out
hlt
lea
insl
imul
aas
pop
fdivl
add
push
stc
mov
test
arpl
push
outsb
nop
idivl
or
lret
cs
xchg
es
mov
ss
ja
mov
dec
rcl
add
sbb
mov
sub
or
push
cmp
or
jle
data16
inc
and
xor
imul
sbb
push
pusha
dec
shll
je
imul
mov
repz
mov
push
dec
js
jb
or
mov
fnstenv
xchg
cmp
inc
mov
lea
pop
scas
sub
dec
jnp
cmp
rcrb
inc
cmp
out
imul
loopne
clc
ljmp
popa
and
or
push
addl
nop
sbbl
add
nop
add
nop
push
add
push
cmp
jbe
movsl
xchg
cmpsb
notb
ret
ja
adc
cltd
xor
adc
int3
mov
xor
rorb
dec
sbb
adc
inc
les
or
adc
and
cmp
jne
test
push
push
pop
push
xor
mov
ds
sub
dec
pcmpeqw
xor
or
adc
inc
popf
fadds
cs
xchg
cltd
jno
adc
pop
mov
dec
mov
adc
fistps
sub
lret
sbb
loopne
das
sub
jne
cs
cmp
xor
lret
or
xchg
add
leave
out
ja
add
jne
mov
jb
mov
or
shr
mov
mov
mov
push
cmp
addr16
inc
or
addr16
sub
loop
fisubl
rorb
jne
jae
sub
test
in
pop
or
push
aad
in
in
fucomi
pop
sub
shl
mov
push
rol
ljmp
sbb
ja
add
cmc
rorl
es
decl
sub
mov
mov
test
add
pop
jne
push
sub
adc
mov
lds
adc
or
ret
inc
ja
inc
in
andl
mov
add
loopne
adc
jb
je
dec
add
or
incb
repnz
addr16
xchg
out
out
add
iret
je
or
cmp
pop
int3
gs
clc
daa
inc
mov
inc
outsb
dec
testl
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
add
ljmp
cs
jne
ds
mov
xor
jnp
ja
fwait
cmp
sub
sbb
sub
sahf
add
push
cmc
pop
call
iret
js
pushf
mov
testb
adc
mov
in
mov
inc
jp
loopne
or
lret
clc
testl
or
jmp
cmp
dec
scas
or
jmp
iret
cwtl
dec
xchg
sbb
sub
pop
or
popa
orl
cmp
push
push
jecxz
and
inc
add
adc
xchg
add
inc
cli
inc
and
fcoml
pop
xor
sub
add
ficoms
sar
xchg
or
mov
xchg
push
lods
mov
or
andl
rorb
je
pusha
push
pusha
adc
lock
pop
js
loopne
shlb
scas
jo
sub
push
and
mov
adc
fmull
sbb
ret
add
adc
cmp
jnp
sbb
js
rcrb
and
sbb
pop
cmpsl
add
mov
add
pop
fs
inc
inc
push
pusha
pusha
insb
inc
fs
insb
push
aas
loope
add
pusha
aam
icebp
inc
xor
push
ja
es
icebp
or
mov
mov
divb
mov
add
mov
fsub
cmpl
cmp
je
xor
pop
lods
pop
dec
push
out
push
push
lock
lds
push
sub
inc
pop
xchg
jmp
lea
pop
fmull
inc
jno
dec
leave
add
movsb
andl
dec
cs
into
adc
lock
mov
and
cmpsl
pop
cmpsl
addb
fstpt
pop
aam
adc
cmp
push
dec
cmpl
mov
aam
push
addl
mov
mov
sti
xchg
inc
ja
mov
mov
cs
cltd
sbb
nop
jle
out
leave
inc
dec
pushf
cmp
iret
shlb
mov
sbb
sbbl
inc
sub
adc
and
fs
mov
test
test
je
test
ljmp
sbb
add
dec
sbb
mov
push
push
adc
lcall
sbbl
adc
mov
jns
insb
les
push
jge
jne
fs
or
pop
ljmp
adc
outsl
xor
pop
fcoml
cltd
shlb
mov
jg
mov
fwait
xchg
fidivl
xchg
mov
cwtl
aam
push
mov
mov
inc
movsb
out
add
sub
pop
sarb
je
sbb
xor
xchg
sti
jns
js
push
and
dec
push
lea
push
jl
mov
jo
aam
pop
push
push
lea
inc
imul
movsl
data16
add
adc
pushf
xor
fcoms
xchg
pop
xchg
cs
out
jp
rol
pusha
int
push
popa
cmp
sbb
ja
imul
popa
fs
out
add
ss
rcrb
pop
arpl
rcrl
imul
pop
add
push
adc
ja
hlt
cmp
inc
std
mov
mov
push
push
and
push
pop
cmp
je
push
xor
or
or
repnz
dec
inc
xlat
std
push
sbb
pop
loopne
or
pop
ja
adc
jl
loope
aas
mov
addr16
jge
sbb
jg
aad
mov
cmpb
sub
mov
mov
pop
rolb
mov
sbb
sti
inc
push
dec
gs
addl
xchg
ss
pop
and
shlb
cmp
inc
dec
push
jbe
cmp
ss
pop
push
pop
into
jecxz
or
inc
data16
adc
loopne
cmp
test
lretw
xor
inc
jo
test
clc
xchg
push
push
aad
mov
xchg
jl
lea
shl
or
lret
adc
sbb
lods
fldt
push
inc
sbb
or
adc
pop
jo
cmp
jp
hlt
out
pusha
cmp
lock
add
js
mov
sbb
call
add
fnstcw
and
loopne
fisttpll
adc
and
shll
in
mov
les
or
xor
stc
sbb
pop
clc
mov
add
jge
pop
add
adc
out
mov
push
push
cli
or
mov
int
sahf
cmp
push
xchg
lock
bound
lea
movsb
je
add
insl
mov
aam
mov
ret
mov
aam
addr16
adc
aaa
pop
push
cmp
arpl
push
or
adc
mov
mov
or
jne
cmp
jae
sbb
iret
add
push
int
push
je
or
das
mov
ljmp
or
adc
push
jbe
clc
pop
dec
lea
push
push
lods
addl
add
push
add
ret
mov
pop
fnstsw
fadds
pusha
adc
ret
xor
aad
rolb
or
jp
fsubrl
icebp
sbb
push
sbb
pushf
xor
andl
addr16
add
js
sbb
les
imul
std
and
cmp
cmp
or
cmovbe
jmp
rcrb
xchg
push
push
mov
add
incl
xor
pop
loopne
movsl
nop
movsb
or
xor
pop
pop
data16
push
pop
push
pop
sub
add
lahf
ficoms
xor
pop
push
pop
dec
mov
jne
push
adc
adc
decl
mov
add
xchg
xor
out
cmp
rdmsr
sarb
outsb
dec
stos
roll
adc
fsubrl
lea
call
icebp
add
push
or
push
mov
shlb
and
inc
test
repz
mov
test
inc
std
dec
pop
out
out
mov
ja
push
cwtl
rclb
jo
push
adc
push
add
jmp
xchg
je
test
fimuls
dec
inc
roll
inc
inc
add
add
and
add
stc
lods
int
push
and
fists
ret
or
mov
sub
sub
leave
out
aaa
xorl
neg
sbb
push
cmp
ret
dec
and
xor
bound
je
mov
sbb
mov
cmp
inc
mov
rsqrtps
sub
push
or
ss
subb
fidivs
cmp
loopne
test
and
sahf
loopne
add
pop
inc
xchg
dec
aaa
lods
andl
andl
or
push
sbb
xor
fidivrl
pusha
adc
gs
xchg
xchg
imul
rolb
sbb
mov
stos
and
out
pop
or
or
dec
push
inc
and
rcr
or
xor
pop
pop
pop
pop
jae
inc
testb
push
test
mov
jl
andl
adc
mov
adc
push
test
and
scas
mov
outsb
ret
xlat
inc
or
add
shll
or
cmp
adc
xor
pop
sahf
push
xchg
dec
fldt
popa
data16
mov
leave
adc
xor
push
xor
and
adc
aad
jno
sarb
movb
and
and
mov
fdivrl
pop
push
test
push
mov
pop
call
test
cmp
push
scas
xor
jl
or
cmp
adc
sub
adc
push
or
add
shr
pop
add
inc
dec
insb
dec
pop
aaa
cmp
dec
adc
pop
inc
push
and
sbb
add
je
push
mov
push
shrb
ret
stc
addl
pop
pop
es
mul
adc
inc
push
fmull
sbb
pop
mov
je
xchg
adc
popf
push
popa
je
pop
cmc
jbe
aas
or
outsb
in
cmp
cmp
cmp
jmp
xor
add
sbb
xchg
sarb
testb
bound
mov
or
mov
test
dec
jl
loope
xor
xchg
into
jne
or
inc
jge
lret
repnz
mov
mov
mov
data16
loopne
inc
std
ss
mov
mov
fsubs
push
fbld
int
mov
sbb
sub
shlb
push
nop
fildl
xchg
dec
orb
xchg
mov
leave
and
cmp
inc
mov
rcr
mov
shll
add
sub
call
mov
jp
xchg
aas
push
push
test
jmp
sub
loopne
xchg
je
xor
frstor
fistpll
arpl
pop
loop
sbb
lods
cmp
jne
mov
adc
or
jmp
sbb
push
cmp
inc
cmp
and
add
mov
test
mov
push
les
and
jmp
xorl
sbb
mov
pop
push
into
lods
ret
out
pushw
pushf
rcr
pop
inc
lock
xlat
adc
or
cmp
aad
test
call
mov
adc
and
mov
sub
push
or
test
add
adc
loope
push
jp
andb
pushl
mov
loopne
mov
popf
push
mov
rclb
sbb
aaa
rclb
lea
jb
rolb
mov
in
popa
inc
cltd
hlt
fisubrl
cmp
scas
insl
cmpsl
loop
test
jmp
test
mov
xchg
xor
xor
and
in
pop
add
or
aas
inc
sti
les
pop
cli
push
test
xor
add
inc
push
mov
lret
cmp
push
jns
add
xchg
outsl
mov
ljmp
push
je
push
dec
jnp
xchg
gs
adc
gs
push
add
mov
add
or
inc
shll
xor
or
mov
leave
or
inc
add
xchg
xor
sbb
push
push
jne
lea
add
or
mov
aam
adc
sub
xlat
lods
fidivrs
or
inc
adc
mov
in
pushf
add
inc
shrb
dec
inc
xchg
push
je
es
and
mov
clc
xor
cmp
inc
sub
int3
cmp
je
mov
xchg
jb
movsl
mov
pop
mov
adc
in
push
or
jae
push
add
xchg
lret
add
cvtdq2ps
mov
insb
push
push
cli
and
cmpb
data16
negl
imul
mov
outsb
stos
hlt
dec
insb
add
mov
jp
test
les
mov
test
jmp
xchg
xor
pop
fisubl
cmp
adc
add
cld
and
shl
mov
cmp
cmp
pop
xor
sbb
shl
inc
xchg
xor
and
adc
inc
lcall
push
cmp
pop
cld
pop
pusha
lods
and
xor
cmp
aas
ljmp
mov
jbe
fdivrs
aad
jbe
cmpl
cli
popa
xchg
xchg
push
cld
sub
movb
push
cmp
inc
aam
jge
movl
add
inc
insb
shr
inc
add
cmpl
xchg
lock
cmp
orb
inc
cmp
sbb
std
push
sbb
mov
lret
dec
cmp
dec
mov
dec
and
mov
imul
dec
or
pusha
sub
cmpsl
lret
adc
clc
inc
out
push
mov
push
in
rcll
pop
adc
push
movsl
inc
inc
hlt
mov
movsl
mov
jl
xchg
jne
sub
or
jmp
lahf
jne
pop
push
jge
je
test
jmp
mov
jo
dec
xchg
pop
xor
jp
repz
adc
mov
minps
imul
sbb
xor
sbb
insb
sti
not
adc
shl
fisubrl
xor
or
pop
lea
movsb
jle
adc
push
jmp
out
sbb
jbe
movsl
addl
insb
sbb
adc
inc
sbbl
jg
call
mov
sbb
testb
movb
cmp
jne
and
je
ss
mov
sub
push
fadds
sbb
jne
and
jge
adc
pop
xor
addb
dec
mov
pop
mov
lea
hlt
dec
and
mov
jns
shr
xor
lret
add
xchg
or
mov
sub
dec
and
jmp
clc
pop
andb
addb
ss
rcll
lret
inc
in
pop
xlat
push
or
fdivrl
adc
jo
dec
xor
mov
loope
jg
je
adc
mov
pop
sub
stos
push
push
or
pavgw
into
ja
push
xor
inc
ret
adc
inc
push
mov
mov
insb
pop
bound
push
inc
das
jo
jae
loop
add
xor
out
and
sub
in
lea
cmp
lret
test
fldl
push
push
adc
jge
push
pop
pusha
out
xchg
ret
or
pop
dec
rcll
add
add
or
test
sub
push
lea
jg
or
mov
adc
jnp
push
sbb
cmp
lcall
pop
jb
insb
jne
adc
loopne
pop
idivl
add
jo
adc
iret
rclb
and
call
inc
mov
xor
mov
jge
or
push
xchg
addr16
adc
mov
pop
orb
mov
mov
or
add
dec
mov
and
inc
xor
push
lret
add
cmp
push
pushf
roll
jae
jp
btr
jg
cmp
lock
mov
testl
lds
jp
testl
mov
stc
in
push
fadd
and
jae
rorl
dec
adc
mov
cmp
and
insb
dec
add
imul
or
or
or
mov
in
aaa
movsb
shl
push
push
xchg
xor
pop
es
sbb
sbbl
int3
jbe
jmp
pop
pop
push
push
dec
pop
jo
add
aas
add
adc
lcall
mov
adc
adc
outsb
mov
in
dec
sbbl
sbb
xorb
xchg
rolb
mov
adc
loop
repnz
adc
or
push
jae
cmpl
mov
push
rolb
adc
rorl
xor
mov
dec
pop
lods
push
dec
lahf
cltd
jp
mov
mov
in
jge
add
sbb
hlt
shlb
xchg
add
inc
rcl
mov
sti
sub
les
jo
xor
sahf
mov
lods
test
icebp
sub
bound
adc
cmp
or
or
stos
pop
cmp
fimull
pop
dec
inc
test
pop
test
fcoml
dec
push
jbe
push
push
fimuls
in
mov
push
cmp
and
adc
cld
push
addr16
lahf
dec
in
and
add
adc
mulb
cmp
and
xor
ret
testb
xor
pop
xchg
xor
movsb
sbb
jno
imul
push
and
cmovae
mov
push
inc
andl
mov
ljmp
ret
push
mov
cmp
ja
je
or
je
or
sub
sub
mov
scas
cmp
add
sti
inc
fimull
test
cmpl
mov
sbb
jl
mov
jne
lcall
adc
jl
arpl
outsb
cmp
adc
xor
cmpsb
rclb
or
test
inc
sbb
pop
loope
push
lcall
and
call
sbb
adc
mov
popf
inc
mov
mov
ret
and
adc
test
mov
adc
je
shlb
lahf
sub
push
test
or
adc
clc
xor
adc
inc
test
and
add
xlat
mov
fsubs
add
inc
or
or
adc
mov
lods
sbb
jp
andl
mov
data16
subl
dec
inc
nop
adc
in
stc
mov
outsb
mov
or
push
adc
dec
mov
and
nop
dec
push
adc
aas
jge
sub
in
ljmp
or
out
adc
xor
movl
addb
adc
and
mov
and
or
inc
mov
push
or
stos
xorb
ja
sub
xor
mov
add
mov
sbb
pop
mov
das
xchg
adc
fdivrl
notl
xor
xchg
cmp
lea
xchg
fcomp
into
das
pushl
mov
push
sub
mov
inc
push
inc
push
push
rclb
and
movsl
sbb
or
and
mov
push
shlb
loopne
fs
add
loopne
inc
popf
push
cmp
fcomp
ret
sub
pushl
notb
inc
sbb
xor
mov
mov
bound
inc
sub
clc
inc
test
fidivs
fdivrl
lock
int
mov
ds
dec
cmp
sbb
sbb
jmp
adcb
push
pop
add
and
lds
iret
lea
inc
jb
add
test
leave
jecxz
iret
mov
adc
test
and
out
cltd
xchg
ret
ret
rorb
lcall
jb
pop
fdivrs
repz
sbb
inc
lcall
inc
test
lcall
sub
jns
and
or
dec
inc
movsl
sbb
mov
pop
jge
loopne
arpl
xor
xor
ja
sbb
sbb
push
cmpsl
mov
xchg
mov
cmp
dec
xchg
push
sub
or
in
sahf
xchg
clc
aaa
addl
aas
mov
adc
push
xlat
dec
call
xor
fmuls
dec
shrl
jns
and
mov
push
inc
mov
sti
shll
cmp
jbe
push
push
inc
sub
loope
stos
cld
dec
adc
mov
or
adc
sbb
inc
mov
movl
push
adc
mulb
fisubl
mov
sbb
sbb
mov
dec
inc
sub
mov
das
pop
pushf
popa
push
mov
sbbb
rclb
fistl
mov
into
xchg
dec
lcall
adc
dec
pop
sarb
sbb
subl
and
and
pop
inc
cmpsb
inc
or
out
daa
push
dec
test
int3
les
adc
add
fcoml
es
adc
sub
xor
call
fdivrs
mov
les
in
ror
imul
movl
pop
inc
push
sbb
adc
rolb
cmp
jae
push
mov
push
lahf
dec
mov
sub
nop
push
cmpsb
and
scas
sub
daa
lea
mov
fcoms
sub
and
in
jb
subb
pusha
mov
push
and
rol
je
pop
ret
jo
add
adc
pop
push
in
push
jno
fmull
in
out
fmuls
adc
and
mov
add
or
sbb
ss
inc
xchg
xor
add
push
into
xchg
add
aam
fmul
jb
adc
jl
xor
inc
xchg
sub
push
ret
pop
add
or
push
or
call
xor
cld
inc
pop
test
push
pop
add
clc
cmp
dec
rol
lock
incl
xchg
fcoml
add
decl
dec
arpl
inc
inc
xor
adc
jl
ret
xor
lds
outsl
sbb
ljmp
adcb
test
add
mov
and
adc
testl
ficomps
testb
nop
push
and
out
add
or
mov
inc
pcmpgtd
imul
xor
aam
inc
xor
mov
nop
cli
hlt
push
cmpsl
mov
and
ljmp
pop
pushf
ret
pop
mov
shlb
test
pop
fprem
add
jae
in
xor
ds
mov
std
das
mov
bound
cmp
adc
shlb
sub
cld
or
adc
outsb
dec
into
and
adc
cmp
imul
pop
mov
mov
pop
jg
sti
je
cmp
push
jle
scas
add
daa
and
hlt
movsl
and
pop
cmpl
dec
insl
add
mov
xchg
mov
inc
xchg
lock
test
es
jne
adc
mov
adc
mov
jo
cmp
and
mov
das
jmp
mov
push
cld
lcall
dec
xchg
sub
cmp
push
mov
push
test
jno
popa
cmpb
jae
cmp
cs
jge
mov
cwtl
add
jl
sbb
ds
xchg
xor
cmpsl
fnstsw
and
push
inc
mov
out
in
mov
pop
iret
inc
pop
fneni(8087
push
movhps
std
dec
adc
and
inc
xchg
add
test
inc
mov
or
jp
sbb
je
f2xm1
test
add
xor
mov
inc
adc
xchg
cmp
hlt
hlt
adc
pop
pop
cli
or
xor
or
inc
jg
lds
addr16
int
ret
push
push
xchg
cmpsb
ret
icebp
push
mov
mov
addb
sbb
adc
or
sbb
cmp
mov
stos
jmp
mov
or
and
xor
mov
test
or
in
mov
mov
aaa
stos
daa
test
sbb
mov
and
js
hlt
sahf
push
pop
shlb
daa
popf
mov
or
call
movsb
mov
push
imul
adcb
jnp
sbb
xchg
cmp
inc
pop
sbb
cmpsb
popf
out
das
push
ss
cmp
je
mov
xchg
adc
adc
sub
jmp
pusha
in
dec
loop
es
mov
inc
xchg
fwait
add
jbe
and
pop
gs
add
push
xchg
lods
dec
inc
dec
dec
in
sub
je
adc
fcomp
or
push
cmp
fiadds
adc
or
pop
ja
push
jp
test
sbb
icebp
xor
pop
test
negb
mov
inc
leave
incl
gs
adc
xchg
outsl
xor
mov
aam
dec
adc
adc
arpl
mov
pop
and
adc
fiaddl
add
dec
push
add
push
sub
clc
push
and
fs
pop
icebp
cmp
aas
lea
push
add
or
mov
out
push
nop
add
and
mov
add
nop
dec
dec
pop
mov
cmp
addr16
jns
loop
dec
pop
push
pop
pop
xchg
add
icebp
xor
add
xor
lods
popa
jbe
out
sbb
fimull
sahf
je
adc
sbb
push
ror
enter
mov
sbb
cmp
xchg
pop
and
mov
add
jl
push
push
mov
sub
jns
ss
jo
push
push
inc
mov
mov
repnz
xchg
hlt
js
les
add
sub
sbb
xchg
dec
or
xchg
mov
push
mov
cmp
mov
leave
rep
in
rclb
jle
jb
sbb
xor
and
mov
mov
mov
adc
xchg
and
nop
or
cmp
sahf
push
inc
adc
push
sbb
xchg
and
inc
repnz
nop
dec
fwait
out
flds
inc
xchg
xor
cmpsl
sbb
cmp
sbb
mov
inc
mov
mov
push
and
ja
dec
jmp
push
decb
sbb
push
xor
clc
sbb
aaa
and
lea
imull
inc
pushf
in
mov
push
mov
nop
jb
jno
cmp
sti
inc
es
inc
xchg
inc
mov
decl
dec
sub
jne
push
mov
jp
cmpsl
add
push
pop
mov
inc
lea
cmp
push
sub
push
sbb
lods
or
and
dec
push
movsl
icebp
push
int
add
dec
and
mov
test
sbb
push
inc
add
or
aaa
movsb
mov
xchg
mov
xchg
adc
push
xor
add
mov
test
je
inc
adc
fbld
sub
fs
lock
mov
xchg
nop
rolb
loopne
clc
dec
outsb
adc
jl
pop
sbb
mov
and
and
pop
enter
decb
cmp
jb
push
xchg
ja
lods
jbe
push
cmp
and
lock
lds
mov
jl
cmp
jae
mov
adc
dec
mov
push
shl
data16
add
jg
out
pop
xor
dec
or
mov
insl
xchg
push
jg
ret
jae
adc
mov
lret
sbb
inc
jmp
push
or
andl
sub
and
jle
stos
movsb
mov
pop
mov
ds
movsb
or
sub
enter
xor
xchg
addl
xor
mov
sbb
jnp
xor
addr16
adc
rclb
cmp
mov
add
pop
push
sbb
nop
test
fildl
imul
xchg
and
rcl
aas
dec
sbb
or
dec
ret
inc
jbe
test
push
lods
mov
rcr
gs
and
fdivrl
push
and
push
adc
xchg
and
add
mov
sub
sbb
int3
loope
mov
adc
dec
jecxz
sbb
call
mov
cmp
out
rclb
push
ret
loopne
inc
mov
push
xor
sub
mov
sbb
pop
push
lret
and
das
daa
cmpsb
je
lods
ja
xchg
push
adc
test
imul
dec
mov
and
inc
push
add
mov
shl
adc
adc
cmp
jns
xchg
add
pop
or
call
test
push
cmp
scas
repz
adc
add
cwtl
test
xor
pop
xchg
jbe
shll
cmpsl
movsl
pop
push
leave
push
xor
push
lret
nop
pop
or
push
es
xchg
pushf
add
xor
xchg
subb
fstpt
testl
lock
jge
dec
add
fmuls
nop
inc
dec
pop
repnz
xchg
xchg
or
push
mov
and
add
or
mov
pusha
or
ficoms
iret
and
mov
add
leave
push
ljmp
cmp
jo
add
mov
cmp
push
or
lock
push
and
push
ja
repnz
lds
aaa
es
leave
inc
jle
jbe
mov
pop
andl
push
push
push
lea
in
push
xor
pop
dec
jp
test
sub
add
ret
and
pop
in
stc
ret
xchg
adc
cmp
xchg
add
rorb
leave
or
clc
gs
mov
je
xor
inc
pop
bnd
sub
aaa
shlb
cmp
push
sub
lods
leave
pop
faddl
push
ss
cli
aam
mov
call
test
pop
add
push
je
push
lret
and
pop
popa
mov
std
pop
loop
bound
cmp
mov
jle
add
inc
adc
jle
mov
push
jmp
inc
xor
or
sahf
jne
orb
sbb
cmp
loop
and
mov
jne
andl
enter
or
jle
or
iret
outsb
sbb
jg
sbb
jge
mov
test
clc
xchg
sub
aam
cmpsb
add
lea
cmp
jo
jno
mov
dec
lea
mov
je
cmc
rcrb
inc
or
push
adc
pop
add
fldenv
and
sbb
inc
jae
dec
xor
add
ds
adc
les
adc
sub
ds
fdivs
repz
jge
in
hlt
orb
adc
lret
jae
test
pop
and
pop
ret
gs
imul
lret
and
das
pusha
cmp
or
and
or
and
daa
or
sbb
pop
push
jne
lret
sahf
mov
mov
and
je
test
dec
imul
sbb
rclb
ljmp
fs
or
and
dec
inc
mov
dec
fmull
jmp
pop
add
cmp
and
adc
jb
call
pop
adc
or
mov
pop
sbb
adc
mov
push
push
xor
pop
aaa
sub
push
clc
mov
jl
push
sbb
adc
sbb
sbb
cmpl
movb
dec
adc
ret
pushl
lahf
mov
inc
addr16
and
and
cmp
or
push
add
jmp
cmpsb
lret
les
mov
adc
pop
out
jge
jbe
xor
push
in
and
or
mov
inc
or
mov
lea
push
pop
pop
pusha
mov
int
lods
insl
inc
lcall
stc
or
fldt
push
call
adc
mov
sbbl
add
je
xor
mov
outsb
adc
push
add
das
lock
cmp
dec
ljmp
cld
lock
shl
out
sub
cld
sub
jae
mov
jno
les
sbb
outsb
mov
sub
lea
mov
push
push
mov
cmp
jb
xlat
inc
add
test
outsl
xor
lods
in
jp
int
mov
cwtl
xor
jmp
notb
add
or
fadds
lret
es
lret
or
mov
cmp
jnp
push
cld
push
xor
rolb
cltd
xlat
movsb
inc
je
cmp
pop
sti
xchg
jmp
mov
adc
icebp
jbe
cltd
push
leave
dec
cmp
sbb
jb
jo
je
xor
inc
mov
jno
jecxz
ljmp
dec
pop
xchg
sti
jl
test
jg
cmp
adc
mov
js
mov
sub
movsb
adc
rorb
inc
insl
sbb
jge
fsubl
iret
les
loop
or
dec
add
jmp
arpl
xor
pop
push
aas
jbe
inc
pop
imul
shll
push
xor
mov
fildl
pop
ret
sub
test
and
fadd
jns
stc
sbb
or
xor
mov
jl
jns
fdivrl
clc
inc
adc
inc
sub
jmp
mov
test
movl
jbe
mov
add
add
jge
sbb
add
cmp
fmulp
push
sub
lods
pop
adc
mov
rcrb
add
shll
sar
or
movsb
and
pop
adc
fiadds
add
ljmp
mov
xchg
adc
fadds
mov
sti
push
sub
lret
fdivp
pop
or
sbb
cmpsl
es
stc
pop
mov
push
add
inc
and
inc
add
aaa
xchg
daa
push
cld
jae
pop
or
cmpsb
subb
add
inc
sbb
nop
aaa
add
mov
adc
xor
pushf
mov
add
sub
addr16
mov
jae
int3
cmpsb
scas
adc
popa
jmp
push
adc
rorl
ret
cmp
cmp
sub
rcrb
cmp
jl
mov
dec
cmp
jbe
adc
adc
push
dec
dec
mov
das
sub
mov
fbld
pop
cmp
adc
sbb
xorl
push
xchg
lret
imul
adc
rep
bound
in
out
or
adc
jmp
sub
jae
or
out
insl
push
shlb
add
test
cmp
arpl
mov
adc
cld
inc
inc
addl
pop
inc
daa
mov
les
and
lock
insl
loopne
mov
xor
adc
push
ret
mov
data16
inc
sub
insl
and
or
xchg
cmpsl
js,pt
clc
xor
xor
cmp
fld
mov
xor
aas
int3
push
shlb
inc
xchg
pop
ja
scas
or
ds
aaa
lea
push
add
xor
mov
and
mov
insb
xor
addb
fs
jns
inc
sub
sub
sbb
add
mov
inc
mov
ret
and
mov
xchg
inc
decl
fwait
and
mov
jmp
cwtl
adc
inc
sarl
sahf
pop
inc
aaa
mov
stos
cld
sub
pop
lahf
add
and
xor
mov
repnz
movsl
adc
ljmp
sbbb
inc
sarb
test
xchg
xor
push
push
lret
add
add
in
jnp
pop
adc
push
push
addr16
mov
and
dec
pop
lcall
cmp
mov
inc
inc
xlat
pop
or
call
rcll
mov
push
or
mov
je
adc
dec
or
and
add
imul
fcoml
ljmp
mov
push
jbe
jmp
rclb
mov
xorl
xlat
mov
adc
jne
push
jae
push
push
and
add
or
pop
push
pop
inc
sbb
push
dec
push
sbb
and
sarb
adc
xchg
push
dec
jne
scas
loopne
mov
lods
or
les
js
add
or
roll
sub
jo
loopne
inc
add
jno
sbb
pop
mov
xor
and
je
mov
adc
xor
mov
mov
cmpsb
pop
xor
push
or
dec
jge
xlat
jo
stos
jno
add
push
icebp
jl
ret
push
inc
decb
sub
pop
dec
adc
adc
or
mov
push
pusha
sbb
imul
xor
in
iret
jg
leave
mov
xchg
xor
lret
hlt
sbb
jle
mov
sbb
pop
cli
xor
clc
loop
dec
loopne
fmul
adc
push
xlat
add
jge
rclb
es
jnp
in
pop
subb
xchg
add
jno
push
mov
adc
js
push
push
mov
mov
sbb
pop
add
pushf
xlat
dec
xchg
ret
or
loope
rcrb
insl
push
adc
shll
cmp
orb
pop
cmp
or
decl
cmp
mov
sub
or
cmpsl
and
sbb
dec
or
dec
adc
jp
gs
imul
jecxz
loop
rol
add
clc
jbe
or
add
rcl
cmp
jmp
ret
sbb
push
inc
jb
in
inc
ret
gs
mov
add
jecxz
add
xchg
push
test
hlt
out
repz
mov
add
adc
decb
dec
mov
lea
inc
dec
mov
rorb
jp
fiadds
add
lock
testb
lea
mov
fdivp
sbb
outsl
push
icebp
sub
dec
pop
je
movsl
xor
subb
xchg
lods
cmpb
lock
fistpll
in
mov
popa
loope
and
lea
loope
mov
or
push
add
sbb
testb
adc
or
inc
mov
push
push
aas
shll
inc
or
adc
dec
iret
pop
and
push
xchg
pop
insl
add
adc
loop
rolb
or
and
leave
out
add
lods
jmp
pop
in
and
add
rorb
in
xor
sbb
xor
testb
sub
mov
enter
arpl
dec
push
imull
add
jne
js
adc
outsb
outsb
sar
loopne
pop
cmp
mov
mov
mov
aad
jae
jb
pushl
sbb
fdivrl
push
sahf
add
jmp
xor
jae
push
add
add
cltd
pusha
adc
rolb
and
sub
mov
jecxz
pushf
cmp
cmp
dec
loope
sbb
popf
divl
insb
pop
dec
jl
out
inc
std
add
stc
mov
push
fidivl
sub
into
lret
rclb
push
out
mov
and
mov
sbb
in
fdivl
mov
pop
and
push
jg
test
adc
sbb
inc
and
test
push
fs
outsb
cmp
adc
js
scas
push
jp
pusha
mov
popa
ret
and
enter
cmp
repnz
dec
jo
jmp
pop
and
add
dec
notl
jne
adc
daa
or
popf
dec
adc
jb
ja
arpl
cmp
sbb
mov
arpl
enter
arpl
dec
or
cmp
or
adc
fcoml
in
pop
fldt
inc
outsb
fildl
cmp
jbe
ret
and
push
adc
add
add
fwait
aas
add
filds
adcb
sbb
or
loope
or
fists
pop
xorl
nop
filds
cmp
hlt
inc
cmpsl
sub
sub
pop
and
add
add
cltd
cs
sbbl
add
mov
push
sbb
shlb
sbb
xchg
or
cmp
xchg
xchg
mov
inc
int3
mov
mov
and
ja
aas
push
in
inc
aas
and
shlb
sbb
xchg
and
nop
xchg
and
inc
push
es
inc
push
nop
inc
push
daa
nop
inc
push
nop
test
mov
nop
inc
push
sub
or
cwtl
loopne
cs
mov
nop
push
pop
push
push
and
and
dec
shrb
xor
or
xor
mov
mov
jg
jg
jp
adc
je
xchg
pop
leave
shl
into
ret
pop
ret
cmp
in
ss
in
or
pusha
push
movl
movsl
insl
cmpsl
mov
adc
mov
das
sbb
pop
adc
jecxz
sub
sub
xor
fimull
test
add
adc
inc
adc
xchg
test
cmp
add
mov
mov
fsts
or
mov
jmp
pop
adc
lea
add
lods
adc
inc
push
decl
xor
pop
cs
rcll
pop
pop
pop
inc
mov
push
and
jb
daa
lea
push
push
fisubs
popa
inc
imul
or
call
push
sbb
xchg
shlb
pop
dec
jae
push
dec
sub
ficoml
mov
mov
das
xor
arpl
add
mov
and
js
shlb
xchg
push
xchg
andl
or
fiaddl
or
or
jns
push
cmp
mov
lock
fcoms
aas
subl
imul
lock
adc
mov
add
mov
pushf
fwait
jg
lods
add
adcl
push
push
sbbb
es
or
lds
insb
ss
xor
daa
sbb
adc
xor
rcrb
mov
mov
mov
ja
mov
adc
pusha
push
xor
pusha
and
fwait
pop
cmp
pusha
lods
loopne
jne
and
pop
add
and
add
add
pop
push
add
mov
test
sbb
add
dec
out
pop
jno
sbb
sub
adc
ret
lret
shl
xor
and
mov
jg
pop
or
mov
add
in
sub
inc
push
add
fmuls
movsb
ljmp
cmp
js
cmc
notl
lock
cwtl
aam
sbb
add
mov
pop
mov
ljmp
push
mov
lds
cmp
jg
mov
push
lret
dec
jle
in
push
test
cmp
or
pop
ud2
imul
sub
xchg
aaa
and
push
mov
sbb
addl
call
push
ds
lods
add
pop
push
xchg
or
repz
push
test
mov
repnz
lea
mov
adc
outsb
fdivs
or
fcmovnbe
je
aaa
pop
or
dec
cmp
jmp
add
xorl
rorb
ds
push
das
or
sbb
push
or
inc
andb
iret
xchg
nop
outsb
cmp
fsubrl
or
call
or
aad
jmp
popa
lods
loopne
push
stos
inc
inc
rorl
sub
cmp
and
cmp
or
push
mov
cmpsb
je
jb
push
cmp
fs
dec
sbb
add
sbb
rcll
and
clc
xor
insb
sbb
dec
xchg
or
int
pop
lock
dec
rorb
cmp
pop
sub
and
fildl
xor
or
push
adc
lock
mov
mov
popa
sub
and
jecxz
ficoml
ds
and
lock
mov
or
and
in
add
and
add
jp
push
mov
jbe
cmp
jl
cmp
jle
cmp
push
jp
or
pop
je
cmp
je
stos
dec
push
sbb
rolb
cmp
cmp
jge
mov
pop
and
cmp
jl
les
ljmp
je
cmp
je
jne
pop
inc
add
dec
or
jnp
iret
and
andb
enter
lea
sbbl
sbb
sub
add
mov
add
mov
fstpl
dec
cmpb
adc
mov
xor
add
cmp
jl
sbb
add
pop
mov
roll
add
push
fsubs
add
xor
dec
std
dec
lds
adc
call
adc
push
and
mov
add
adc
dec
mov
insl
dec
iret
and
or
and
or
and
sbb
or
or
mov
push
sub
mov
mov
sbbb
sbb
dec
jmp
push
in
clc
and
sbb
jmp
sub
test
mov
loopne
gs
adc
es
aaa
push
gs
adc
ficoms
mov
add
pop
xor
add
sbb
or
int
or
mov
lea
addb
or
sbb
lcall
test
adc
add
inc
lret
leave
out
in
es
jo
fdivrs
jge
jmp
fcom
push
or
pushf
and
push
hlt
adc
dec
jb
inc
pusha
lret
rorl
das
sbb
nop
insb
insl
pop
or
sti
bound
pop
adc
add
out
push
pop
pop
pusha
fs
iret
lods
mov
add
sbb
push
jno
scas
or
mov
mov
lea
sub
jecxz
pop
sbb
pop
ret
pop
xchg
cmp
sbb
in
add
dec
push
add
mov
incl
inc
dec
je
adc
mov
and
jo
mov
push
adc
push
iret
sbbb
stos
or
test
popa
out
mov
jl
jnp
ss
add
xor
cmp
ret
cs
and
and
or
push
or
ficompl
fs
pop
rclb
ret
sbbb
jmp
pushf
jle
and
mov
ss
inc
push
and
cmp
test
xlat
loope
ret
mov
lods
add
flds
cltd
loop
mov
push
xor
sarb
push
shrb
dec
and
das
add
xchg
sbb
jle
xchg
repnz
por
inc
and
lret
test
add
packsswb
xor
xor
fwait
adc
loope
sbb
xchg
inc
jmp
inc
jl
clc
clc
fdivs
jmp
gs
xchg
adc
xor
test
and
push
xchg
push
push
es
jo
cmp
and
in
dec
insb
or
inc
or
sarb
daa
lods
or
inc
sub
adc
je
ficompl
je
dec
and
and
dec
rorb
pop
addr16
fldt
mov
lahf
inc
pusha
stos
es
dec
adc
add
aad
add
mov
inc
cmpsl
insl
jecxz
fdivrl
cs
data16
rcrb
add
mov
add
je
or
je
insl
sub
mov
push
sub
pop
push
pop
push
out
jne
mov
mov
add
inc
adc
or
and
pusha
jbe
mov
fs
out
pop
jnp
push
jle
dec
add
and
imul
jl
fs
insb
mov
jne
lods
fcoml
push
repnz
jmp
and
sbb
jne
xchg
sub
xchg
cmc
and
sbb
into
or
repz
jo
insb
addr16
xchg
lret
xor
sbb
fdivrs
arpl
mov
ljmp
mov
js
adc
mov
xor
xchg
daa
rorl
xorl
xchg
pop
push
mov
sub
push
sbb
cmpsl
pop
sahf
xor
sbb
dec
gs
in
fcomps
jecxz
and
fdivrs
ficomps
inc
inc
popa
cmc
xchg
sbb
sub
pushf
fildll
ja
lock
and
into
push
mov
bound
repz
mov
sarb
rcl
sbb
popa
jmp
sub
push
and
mov
sbb
jne
push
add
xchg
mov
dec
mov
sbb
sarb
mov
mov
push
hlt
jg
mov
sub
xchg
push
push
add
ret
fistpl
xor
sbb
push
loope
push
dec
sub
inc
clc
loope,pn
jmp
xor
lret
sub
jns
jns
mov
stc
sub
lea
add
pop
ret
pop
ret
iret
adc
outsl
pop
pusha
test
ret
cmpl
dec
mov
push
push
add
stos
or
or
aas
popl
addr16
shll
rorb
sbb
adc
push
dec
jns
mov
mov
sbb
push
dec
int
jmp
add
sahf
add
or
add
push
xor
je
xchg
push
pop
xchg
lods
outsb
dec
sahf
xor
or
jne
jne
icebp
add
aam
ja
nop
mov
adc
push
sub
orb
enter
jge
addr16
es
out
push
or
jmp
push
adc
pop
pop
dec
pushf
arpl
je
or
and
pop
push
enter
addb
jo
mov
lcall
sub
or
stos
pusha
xchg
fiadds
lea
test
in
pop
or
dec
popa
jo
mov
cs
adc
adc
imul
and
pusha
jbe
inc
sub
sbb
jae
jae
in
adc
sbb
inc
in
cmp
inc
sbb
inc
jp
test
sub
je
ret
adc
and
sub
test
dec
inc
es
shlb
xchg
pop
mov
sub
sub
movl
testl
pusha
jns
add
aam
nop
gs
test
mov
jl
scas
dec
adc
cmp
push
frstor
addr16
fstpl
dec
in
fildl
push
cmp
lahf
out
stc
adc
jne
push
divb
or
jne
jns
sahf
sbb
cli
jne
or
cmpsl
outsl
fldz
xchg
rolb
fstpl
andl
pop
hlt
add
repnz
mov
mov
mov
mov
push
sub
fwait
inc
and
push
mov
mov
fildl
aam
arpl
test
lea
fstl
outsl
push
add
jecxz
fsubs
rolb
dec
sbb
pop
and
mov
push
inc
cmp
in
sbb
adc
push
and
sti
jg
mov
adc
mov
push
out
jno
sub
mov
loop
sbb
or
int3
popa
stos
mov
fldl
ljmp
in
andb
loopne
je
out
mov
movsl
pmaxub
leave
mov
movsb
push
push
enter
inc
sbb
sub
rcl
ffree
push
or
sbb
fst
inc
data16
negb
popf
lock
add
icebp
int3
sbb
lods
fdivrs
rol
and
scas
adc
sub
movsl
ficoms
rolb
dec
test
push
xchg
mov
sbb
cmp
mov
mov
pop
push
push
call
lcall
enter
push
int
outsb
fisubrl
pop
clc
and
divps
pop
lret
fistl
popa
or
test
fisubrs
adc
xor
in
sbb
push
ja
and
out
jns
push
inc
outsl
or
repnz
pop
sbb
adc
sub
mov
and
stos
and
lods
pop
dec
mov
inc
add
dec
jo
push
repnz
xor
pop
sbb
dec
dec
ja
add
lods
adc
inc
and
pop
out
call
inc
dec
add
lods
leave
inc
adc
cltd
mov
jo
outsl
push
xchg
cmpb
ret
cwtl
mov
jno
add
sbb
adc
add
and
add
or
in
enter
fmuls
mov
jo
nop
xchg
push
fmull
int3
or
inc
rorb
ret
inc
imul
xor
fmuls
test
fs
cld
enter
sbb
ds
add
nopl
adc
cs
push
insb
adcb
add
in
inc
xchg
fwait
sub
inc
test
dec
int3
xor
pop
shlb
and
pop
les
lods
and
cmp
stc
pop
cmpsb
push
fidivl
fs
pop
cmpsl
in
sbb
push
movsl
in
mov
daa
ret
cli
or
inc
js
pop
adc
sbb
ret
rcl
add
mov
add
and
ret
icebp
mov
ss
push
add
cmp
or
nop
push
push
pop
lret
shl
pop
shrb
push
or
add
ljmp
andb
insl
insl
adc
dec
add
lret
add
add
xor
je
adc
mov
loopne
nop
inc
adc
cmp
jl
cli
push
outsl
pop
cmpsl
pop
jne
shlb
or
sub
hlt
sub
or
pop
add
add
add
punpcklbw
insl
call
shlb
push
cli
push
cmpxchg
stos
push
adc
pushf
push
int3
mov
inc
in
adc
dec
lret
xchg
imul
stos
inc
in
sub
imul
dec
adc
adc
mov
inc
je
xorl
test
xchg
pop
movsb
in
lds
jl
add
jl
or
jae
add
or
xor
cs
and
popa
popf
daa
push
dec
push
test
mov
call
inc
xor
xorb
popa
fnsave
mov
pop
jnp
test
rolb
mov
in
mov
mov
xor
adcl
ljmp
arpl
xchg
lock
push
mov
rorl
test
xor
cmp
xchg
cmp
fdivrl
dec
popa
and
cmpb
dec
call
test
xchg
mov
or
xor
inc
inc
inc
dec
fiadds
stc
clc
stos
add
and
adc
cmp
dec
xchg
sarl
in
mov
sub
add
adc
test
dec
adc
inc
mov
inc
sub
xorb
inc
add
sub
in
pop
stc
andl
lea
push
insl
adc
sarb
test
enter
mov
test
andb
pop
sbb
clc
mov
sbb
lcall
bound
out
mov
mov
insb
inc
pop
sbb
xchg
push
popa
loop
push
sub
push
xor
xchg
jmp
outsb
into
or
outsl
pop
lea
das
add
mov
dec
jge
cmpsb
adc
add
push
mov
ljmp
bound
add
xchg
pushf
xor
or
insl
push
fcoms
stos
dec
adc
loopne
push
mov
enter
aas
in
sbb
or
lret
xchg
hlt
or
pop
mov
mov
dec
xchg
xor
cs
inc
dec
xchg
mov
adc
pop
mov
data16
or
or
jl
add
xchg
add
mov
or
xchg
xor
sbb
ja
add
movsl
test
popf
push
xor
inc
or
sub
sub
inc
jg
adc
mov
inc
movsl
ret
dec
and
movsl
jne
or
outsl
test
inc
pop
adc
adc
pop
stc
sahf
pushl
jg
or
and
push
mov
add
cwtl
pop
out
movsl
stc
xchg
fsubrs
adc
aam
rorl
xor
sub
push
mov
imul
jns
push
cmp
cmp
add
add
cmp
adc
jo
pop
test
jg
inc
sbb
or
nop
push
cmp
xor
pop
lock
shll
xchg
sbb
fimull
enter
ret
inc
es
inc
sbb
push
mov
adc
outsl
push
pop
lret
push
aaa
fidivl
test
scas
ss
add
add
and
mov
push
movsb
xor
jp
xchg
inc
fdivrs
pop
sub
int
and
popf
inc
or
fwait
adc
les
das
and
add
or
addl
movsl
push
cmpl
mov
daa
or
jge
and
rcll
sub
sahf
jmp
lods
js
mov
push
sbb
pop
sbb
test
push
movl
cmpsl
add
push
push
out
adc
push
adc
or
sbb
stos
sbb
add
mov
jno
or
call
push
push
push
push
xor
and
xchg
mov
push
test
popf
push
mov
or
xchg
jnp
adc
cmpsl
popf
add
dec
add
ret
dec
dec
mov
push
add
iret
sbbb
jbe
shll
xchg
rclb
cld
andb
inc
in
aam
clc
and
fisubl
fmuls
mov
testl
fwait
push
test
xchg
sub
ljmp
cmpl
addr16
xchg
into
sbb
inc
sbb
nop
es
pop
push
add
jmp
call
sub
add
movsl
imul
mov
loopne
mov
cmpsl
mov
jne
shld
shr
xor
in
imul
cmp
sub
and
add
adc
and
test
xchg
cmpb
dec
or
out
pop
jg
cmp
xchg
adc
ljmp
test
pop
pop
mov
xchg
xchg
add
rol
add
popa
add
jle
inc
pop
xchg
lods
pop
mov
jmp
mov
cwtl
adc
push
and
inc
adc
rolb
add
dec
sub
add
aas
inc
ds
addr16
jg
add
and
push
cwtl
xchg
push
push
push
insb
call
sbb
jmp
sbb
stos
jecxz
inc
lods
sbb
in
test
test
or
std
das
sbb
clc
or
pushl
mov
int3
or
fs
adc
push
pusha
aam
inc
dec
dec
nop
jb
mov
pop
adc
push
les
roll
jmp
add
adc
and
iret
sub
add
push
mov
lcall
lock
adc
stos
mov
je
cmp
and
inc
ljmp
or
sbb
mov
and
push
cmp
jl
dec
add
push
gs
inc
sbb
roll
sbb
or
xchg
adc
imul
inc
add
fidivl
xor
or
out
or
and
and
or
fidivrl
fisttpll
mov
notl
je
mov
xchg
inc
dec
loope
arpl
jb
daa
add
jne
push
mov
ror
sub
or
xchg
test
dec
xor
jmp
inc
xchg
lea
loop
mov
cmp
xchg
loope
lret
add
xchg
repnz
and
and
fnsave
mov
or
or
rcl
xchg
jmp
jb
sbb
movsl
jge
loopne
bound
jnp
idivb
inc
jge
and
xorl
outsb
std
subl
jnp
pusha
or
sub
repz
pop
add
mov
mov
movsb
mov
pusha
xchg
inc
loope
or
sub
lcall
leave
les
mov
sar
and
sub
adc
pop
xor
mov
dec
and
cld
xchg
mov
sbb
iret
loopne
lret
xchg
repnz
mov
inc
pushf
cmp
pop
pop
aas
orb
jmp
inc
rol
or
cmp
xor
sbb
push
xlat
pusha
dec
mov
rcrb
push
adc
andb
test
cmpsb
stc
or
addr16
push
push
pop
mov
dec
arpl
pushf
dec
or
jge
dec
inc
mov
or
out
add
adc
adc
mov
push
adc
inc
nop
pop
pop
sbb
sbb
mov
inc
jae
sub
mov
aam
jne
inc
add
test
vmaxpd
or
mov
add
roll
js
addb
cmp
inc
js
xor
pop
dec
enter
ja
push
sahf
inc
fdiv
adc
mov
out
adc
add
dec
or
xchg
shll
dec
xchg
out
mov
and
pop
jo
dec
add
data16
bound
jle
xor
rclb
leave
jbe
sbb
movsb
add
loop
inc
pop
add
xchg
or
jb
sbb
mov
movsl
add
or
xor
notb
in
jne
aas
pop
mov
div
inc
and
ljmp
xor
test
je
inc
jp
mov
inc
jmp
jp
adcl
ja
mov
ret
cmp
dec
nop
inc
jae
sahf
sbb
mov
clc
add
pushl
xor
mov
pop
shlb
or
and
mov
inc
stos
dec
rorb
test
call
jno
jbe
cmp
je
incl
sahf
cmc
inc
or
addl
push
cmp
jne
and
icebp
cmpl
aam
sub
mov
jne
jmp
add
pop
xchg
add
add
fadds
movsl
push
push
enter
fsubrs
mov
pop
rclb
jp
or
cmp
jae
sbb
pop
add
popa
jg
lock
add
fnstsw
test
je
sbb
jp
push
cltd
mov
aad
push
or
mov
arpl
xor
jmp
push
aas
je
mov
fistps
fsubrl
push
lock
rolb
imul
mov
out
cmp
add
push
mov
mov
fsub
pop
fsubrp
add
cmpsl
into
inc
pusha
add
cmp
sarl
outsb
add
add
sub
and
xor
push
shr
sub
mov
scas
add
decl
andl
dec
add
cli
sbb
cmpsb
es
add
test
rorl
xor
push
iret
sub
sub
pop
push
insb
in
jo
icebp
adc
pusha
sbb
sub
mov
sbb
push
sub
sbb
or
sbb
xorb
add
dec
mov
fildll
movsl
push
sbb
stc
int3
sub
sbb
push
sbb
sbb
popf
and
push
cmp
inc
loopne
scas
or
sbb
or
insb
pop
jle
lock
aad
and
shlb
dec
and
sbb
scas
or
sbb
idivl
fmuls
jo
shll
push
push
sbb
and
dec
jae
adc
and
push
push
push
xor
inc
xor
mov
lds
outsl
and
sbb
je
sbb
xchg
sbb
aaa
jb
xchg
inc
mov
push
adc
xor
or
insb
cs
and
push
jecxz
aas
jae
dec
push
in
pop
sbb
sbb
and
out
and
adc
sahf
push
and
jns
sub
push
push
and
jmp
and
js
sub
mov
xor
mov
ret
and
mov
xchg
adc
cltd
fsubs
adc
negb
xchg
das
xchg
enter
dec
adc
add
in
popa
and
push
jbe
push
or
or
inc
push
push
sbb
sbb
fs
or
jo
sbb
nop
push
xchg
sbb
std
pop
mov
je
lret
mov
push
jne
xchg
in
and
adc
fsubs
or
in
and
and
xor
and
cltd
xchg
notl
out
sub
mov
lock
iret
repz
add
push
adc
xor
push
cmp
repz
jne
xchg
test
lcall
adc
jns
out
inc
push
push
sahf
mov
out
out
lock
aam
and
out
sahf
inc
push
addr16
lcall
fmulp
adc
add
sbb
mov
cli
mov
aam
imul
sub
mov
sub
and
mov
push
inc
lea
mov
and
sub
or
push
inc
outsb
fildl
popf
iret
add
or
push
xorb
mov
nop
push
pop
insb
addr16
rorl
xor
jg
sti
sub
in
mov
push
sub
lcall
dec
xor
pop
test
in
pop
pop
adc
rcr
rcll
inc
sbb
push
arpl
inc
xchg
in
es
adc
add
or
int
addb
and
inc
insb
add
js
into
cmp
xor
movsl
lahf
adc
iret
shrb
push
and
sub
sarl
or
inc
rorb
mov
addl
bound
rorl
push
xlat
dec
lds
popa
in
pusha
add
rcrb
lods
or
roll
push
xchg
stos
adc
jmp
and
filds
mov
mov
mov
arpl
pop
loopne
cmpb
mov
mov
jl
enter
outsl
mov
adc
and
mov
mov
sub
jnp
sub
inc
jae
cwtl
add
loopne
js
cs
pop
loop
inc
push
cmp
call
in
add
mov
push
xchg
fildll
lea
push
lret
push
lea
arpl
icebp
in
in
push
stos
add
adc
outsl
loope
and
call
imul
int
add
test
orb
mov
jns
lock
xchg
rcll
aam
lea
push
adc
xlat
push
mov
sbb
cltd
add
pop
dec
mov
rcll
xchg
push
sub
mov
fs
lea
xor
or
push
jo
xchg
in
loope
xor
aad
mov
ja
inc
adc
dec
inc
adc
fs
pop
pop
or
por
lret
in
or
lock
inc
push
add
dec
mov
add
add
call
xchg
in
rcll
push
jmp
push
jb
roll
sub
mov
add
imul
adc
sbb
ss
jno
inc
int
stos
or
lds
shrl
mov
movl
lock
or
fstp
mov
mov
shr
adc
mov
and
add
test
sbb
mov
ret
adc
cmpsl
jo
inc
jle
aad
inc
in
add
add
and
inc
adcb
pushf
mov
push
enter
inc
add
cmp
nop
or
lret
dec
stos
lods
sub
lea
push
rorb
mov
lret
add
and
inc
test
xchg
xchg
rorl
mov
pop
pop
loop
movsb
mov
sub
scas
push
mov
sbb
or
add
repz
sub
adc
cmp
sub
add
enter
enter
movsl
mov
xchg
or
icebp
dec
dec
subb
mov
sbb
sbb
or
adc
push
stc
push
xor
dec
add
cmp
push
mov
and
ljmp
sbb
mov
mov
pop
pop
sub
mov
aaa
pop
xor
add
mov
inc
push
push
mov
xor
mov
adc
xor
mov
add
add
push
stos
stos
lcall
clc
add
stos
les
sbb
add
inc
pop
enter
int3
enter
pop
test
mov
and
sbb
cmp
inc
sbb
addb
fs
inc
mov
imul
add
lea
popf
add
and
inc
or
add
add
in
lods
nop
and
pop
xchg
inc
lds
stos
mov
xchg
push
int3
xor
movsb
sub
or
gs
or
add
in
icebp
inc
mov
lret
aad
push
push
mov
adc
test
sub
scas
and
pop
insl
adc
and
pop
out
mov
or
push
dec
mov
jno
sete
add
mov
xor
and
add
rolb
inc
xor
sbb
mov
adc
add
and
orb
test
mov
movsl
xor
popa
pushf
shlb
sub
push
mov
loopne
pusha
mov
hlt
movsl
or
and
mov
repz
push
mov
xor
add
dec
and
mov
icebp
mov
xor
cmp
imul
shll
cmc
mov
add
inc
adc
lea
insb
or
mov
lds
jge
bound
orb
je
fwait
add
cmpsl
xchg
cmp
cmp
or
jae
and
xor
shrl
cltd
lea
push
sub
test
pop
jmp
scas
xchg
pop
push
mov
adc
push
jle
out
shrl
push
aas
adc
lea
lods
push
out
sti
pop
repz
data16
add
xlat
mov
aad
mov
arpl
dec
pop
mov
xor
inc
ret
pop
aas
mov
in
fstps
roll
arpl
movsl
sbb
popf
adc
rcrl
ffree
sub
insl
mov
fldl
inc
xor
data16
fdivrl
fmull
mov
cltd
xchg
push
arpl
adc
sbb
push
arpl
mov
clc
shlb
jp
add
or
add
ss
xor
push
fnstsw
fldt
mov
sbb
xchg
sbb
mov
and
pop
xor
cs
leave
adc
js
adc
add
cmp
jge
aad
pop
insb
lret
pop
mov
call
or
add
outsb
fwait
std
adc
sbb
push
add
jmp
push
mov
sahf
enter
pop
loopne
or
ficoms
mov
insl
popf
in
mov
inc
pop
dec
jmp
loopne
pusha
xchg
and
loopne
addl
jmp
loopne
xchg
addl
xchg
imul
adc
movsl
add
add
inc
fstpl
dec
test
iret
pop
scas
or
fsubl
je
pusha
jne
jne
sbb
inc
pop
xchg
mov
push
in
sub
pop
xchg
push
call
or
daa
and
loope
lds
adc
xchg
imul
push
fdivl
dec
ljmp
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
jl
dec
jae
fisttpll
pop
jle
adc
jle
xor
push
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
cmp
sub
pop
cltd
idiv
or
repnz
ljmp
jno
cmp
rclb
xor
jle
icebp
popa
decb
jmp
add
scas
pop
addb
lret
xchg
mov
xor
lcall
xchg
xchg
jmp
jnp
lds
inc
decl
push
dec
inc
and
in
and
dec
in
sub
lock
and
xor
in
xor
add
or
mov
into
cmp
cmp
js
enter
bnd
out
push
pop
inc
push
push
mov
jecxz
cmp
mov
cli
adc
dec
ja
add
push
jns
and
scas
cs
push
rolb
pop
lret
or
popa
or
adcb
mov
or
rolb
arpl
push
or
cmp
sub
testb
leave
or
add
xchg
mov
mov
pop
push
mov
push
imul
sub
sub
ret
nop
adc
push
into
mov
push
popa
fnstsw
xchg
xchg
jl
test
test
add
push
and
js
adc
out
jle
js
adc
mov
leave
push
imul
outsl
scas
mov
gs
push
in
in
and
leave
push
sbb
int3
push
out
scas
mov
and
js
push
pop
push
push
aad
jge
jmp
shlb
mov
je
outsb
sbb
adc
hlt
fstpt
jbe
jl
jnp
out
imul
fcmovnb
pushf
push
sbb
and
aad
fld1
dec
jae
push
movsb
lret
fcoml
es
dec
mov
and
lods
fdivrl
cli
ss
pushf
lods
mov
stos
rolb
cmc
push
test
inc
cmpsb
or
nop
cmp
test
mov
push
add
mov
mov
mov
jl
rorb
jge
pop
loope
into
fmuls
or
mov
test
and
divb
icebp
mov
push
mov
pusha
test
sbb
sbb
rcll
mov
mov
dec
lods
in
test
fldz
enter
adc
pop
add
fsubl
fcompl
add
test
movsb
addr16
aas
mov
push
xor
and
loope
xor
add
and
inc
scas
inc
add
rolb
jmp
inc
jo
outsl
test
dec
add
mov
sub
adc
das
mov
out
cmp
subb
pushf
sbb
loopne
dec
pusha
gs
fistl
xchg
sub
add
lods
sub
les
mov
push
xlat
nop
test
stos
psubb
push
or
and
cmp
xchg
push
xlat
leave
xlat
xor
pmulhuw
jae
movsb
sbb
mov
mov
jae
loopne
add
add
mov
fsubrl
adc
push
adc
cltd
add
les
daa
popl
jae
mov
rcrb
addl
imul
xchg
pop
repnz
push
sub
inc
es
adcb
sbb
add
sbb
cmp
xor
orl
sbb
dec
pop
xchg
rorl
lods
rcrb
and
not
fwait
loope
daa
lods
pop
pop
dec
mov
sbb
and
sub
js
mov
push
inc
pusha
stos
pusha
cmp
xor
push
adc
sbb
test
fwait
push
or
push
cmp
inc
sarb
sahf
inc
and
sub
movsb
ds
or
pop
ss
push
sbb
xor
lods
xchg
jo
mov
pop
sub
cmc
shlb
orl
and
arpl
arpl
jb
aad
cmp
dec
sbb
mov
call
pop
jo
jmp
push
sbb
fsubrs
xchg
push
adc
xchg
xchg
jnp
imul
adc
dec
xor
pop
xor
inc
mov
mov
inc
add
jmp
sub
mov
bound
mov
mov
pop
test
and
adc
rclb
adc
movsl
sbbb
out
stc
adc
jo
sub
pop
adc
fs
add
pop
je
push
xchg
mov
rolb
push
decb
scas
in
dec
pusha
sub
sub
and
ja
fcoms
cld
mov
cmp
cltd
rclb
int
dec
or
mov
pop
sbbb
push
decl
add
movl
cmpsl
push
adc
iret
repz
daa
aam
bound
inc
sbb
int3
scas
add
pushf
push
mov
jo
push
add
adc
call
aam
call
popf
adc
pop
jmp
or
xor
jbe
loop
jg
add
int3
and
pop
rorb
mov
outsl
rclb
and
aaa
or
movsb
push
popa
adc
push
push
push
xor
call
adc
add
cmpb
cmp
push
jne
xchg
negb
mov
sub
loopne
lcall
int3
jl
cli
xor
xor
scas
es
add
sbb
mov
pushf
and
and
mov
add
xor
mov
jne
out
push
rclb
or
mov
testb
int3
rol
in
sbb
jecxz
sub
ds
mov
loopne
add
xchg
mov
aam
fmull
xchg
pop
lds
addr16
pop
shlb
cmp
ret
sub
fmul
and
mov
sub
add
mov
add
push
cmpsb
shll
int3
adc
dec
imul
or
jo
lods
adc
je
aad
add
fadds
daa
xchg
cmp
cmp
icebp
stos
jb
cltd
lods
or
cmc
js
cmp
leave
adc
ss
adc
lds
inc
add
sub
jae
sbb
in
imul
xor
push
mov
sub
push
in
or
rclb
stos
add
mov
je
insl
mov
cld
xchg
push
inc
pop
inc
or
dec
adc
aad
subl
shr
adc
notb
cmp
or
fucomip
push
xchg
and
rorb
or
inc
cmp
mov
push
in
add
in
adc
test
das
add
andb
movsb
pop
push
dec
or
lock
mov
ret
mov
ret
xor
adc
insb
and
push
sub
jne
ja
add
pop
daa
popf
bnd
jp
int
test
ja
lret
adc
or
jae
shrb
gs
lret
push
push
cmp
dec
cmp
in
cmp
xor
ljmp
scas
es
sbb
in
cmp
pop
push
xlat
popa
leave
sub
int
sbb
faddp
movsb
daa
sub
xor
insl
sbb
sbb
inc
or
shlb
add
andl
imul
inc
daa
lret
cmpsl
outsb
cmp
addb
cmpsb
sbb
mov
icebp
dec
arpl
mov
pusha
cmpsl
inc
sbb
push
inc
call
or
std
decl
mov
in
cmp
jne
orb
or
adc
jae
add
insl
inc
mov
or
add
or
sub
enter
sbb
mov
adc
inc
add
mov
add
add
xchg
mov
or
xor
fs
pusha
addb
ret
add
push
and
sbb
test
jo
xchg
movsb
push
cmpsl
jmp
mov
fiaddl
les
dec
jmp
jo
test
ss
loopne
sbb
sbb
cs
dec
scas
sbb
imul
aad
pop
out
fsts
movsb
push
sbb
add
in
dec
add
pop
sti
repnz
lods
and
jb
pusha
sahf
in
sbb
popa
push
jne
xor
adc
lock
shll
pop
push
sbb
lahf
mov
lea
daa
sbb
shll
movsb
dec
shr
push
icebp
or
rcll
lahf
push
pop
add
inc
shrl
push
mov
fnsave
sbb
test
adc
dec
rorb
mov
cli
div
out
push
dec
das
push
cmp
rclb
pop
loopne
ret
lock
adc
add
cltd
fwait
adc
adc
aam
insl
add
adc
popa
ret
push
cmpl
jo
add
aad
ret
std
pop
pop
stc
xchg
js
add
mov
xor
loop
lods
add
xor
xchg
in
push
mov
lods
adc
popf
dec
xor
push
push
push
int
mov
sub
or
aaa
push
and
fisubl
mov
cs
mov
test
sbb
mov
cmpsl
cmp
mov
mov
and
cmp
lods
inc
xchg
lea
or
rcll
xchg
shr
add
push
mov
cmp
mov
xchg
xor
ret
xor
sub
push
add
fcompl
stc
jmp
push
gs
adc
push
aaa
pop
mov
daa
push
or
xor
pop
or
adc
or
push
push
inc
call
daa
push
or
adc
jle
add
imul
push
scas
cld
xor
fdivrs
divl
pop
mov
dec
fs
push
jb
cld
pusha
ljmp
push
js
push
or
addl
or
adc
adc
cli
pop
mov
ds
jne
mov
push
xchg
sbb
add
push
cltd
jb
or
xchg
push
dec
loope
movsb
add
xchg
sbbb
cmp
xchg
pusha
adc
das
sarb
cmpl
jne
cmp
jb
in
add
and
lods
mov
cmpsb
xchg
dec
mov
lret
dec
shr
adc
xor
cmpsb
testb
jae
mov
jo
call
cmc
aaa
call
mov
add
jmp
jmp
xor
mov
sub
or
test
jne
filds
sbb
cli
ficomps
aaa
js
inc
inc
dec
add
or
rorl
push
or
imul
xchg
nop
in
sub
enter
xchg
inc
lret
cltd
mov
push
add
adcl
inc
dec
or
pop
mov
add
xchg
clc
jo,pn
push
rolb
inc
jne
hlt
sub
xchg
xchg
sarb
pop
push
pop
iret
pop
push
sbb
and
mov
mov
pop
test
shl
push
inc
mov
jno
sbb
mov
sub
sar
xchg
imul
or
in
push
sarl
xchg
dec
in
add
pusha
jne
shlb
add
add
adc
add
pop
test
les
or
inc
mov
cvtpi2ps
cmp
push
cmp
or
insb
or
cmp
dec
adc
add
adc
add
jmp
and
cmp
jno
or
xor
sbb
movsb
xchg
inc
xor
adc
push
adc
adc
std
mov
fnstsw
pop
or
add
incb
pop
mov
inc
repz
adc
and
and
sub
inc
xor
xor
adc
sbb
pop
and
sbb
pop
loop
sub
lods
outsb
pushf
or
test
clc
jge
jmp
int3
or
dec
push
adc
test
in
or
xchg
jo
mov
pop
fnstsw
jae
nop
or
and
cmp
add
enter
add
push
sbb
fcoms
adc
dec
sub
nop
add
movsl
sbb
mov
aaa
movl
pop
inc
sbb
dec
imul
popa
xorb
mov
add
or
les
mov
or
lods
lods
not
rcr
mov
or
cltd
add
push
pusha
or
arpl
inc
adc
sbb
arpl
push
xor
rorb
sub
fcom
clc
inc
add
and
add
fbld
add
js
mov
enter
push
jno
mov
lock
sbb
movsbl
push
dec
xor
inc
add
mov
mov
xor
mov
dec
dec
xlat
push
xor
xchg
inc
adc
or
ret
sbb
and
sahf
xchg
inc
or
scas
mov
je
fidivrl
jge
addb
arpl
xchg
mov
dec
mov
sbb
pushf
adc
push
imul
pop
inc
repz
mov
and
cmp
movsb
mov
dec
xchg
cmp
mov
sub
push
pushf
jmp
sub
mov
add
femms
and
shll
dec
cmpsl
push
mov
adc
rcrl
and
daa
mov
inc
mov
shrl
les
imul
sbb
dec
subb
mov
gs
repnz
add
imul
lret
adc
add
pop
cmc
std
roll
cmp
cmc
mov
sub
jge
inc
jecxz
xor
push
add
sub
sbb
aaa
mov
push
inc
dec
cmpsb
mov
sbb
loopne
adc
sub
and
lods
sbb
push
mov
xchg
bound
sub
push
repnz
xor
xchg
mov
addl
dec
pushf
sbb
and
sbb
sub
int3
repnz
cmp
jnp
adcb
add
imul
sub
add
sti
jl
or
push
rorl
push
lock
jmp
sub
and
mov
or
es
addr16
addl
xor
fs
and
cmpsb
repz
cli
stos
orl
add
inc
fimuls
xchg
pop
jns
imul
push
lret
popf
mov
push
xchg
and
and
sbb
repnz
insb
and
imul
inc
mov
lahf
xor
sbb
push
sbb
jb
jne
dec
and
mov
push
lods
mov
xor
out
shll
lods
dec
inc
add
xchg
add
push
dec
sbb
mov
sbb
or
or
inc
enter
jl
js
fstps
aad
sbb
daa
int
mov
jne
push
jae
dec
adc
loope
sub
js
pop
xor
test
lods
or
push
pop
add
or
pop
add
push
adcb
push
inc
sub
sub
jne
daa
add
adc
popf
sub
cmp
and
push
pop
jge
jnp
fmuls
add
addr16
and
arpl
rcr
inc
mov
sub
lcall
sub
jle
xchg
dec
popl
or
mov
sbb
sbb
aad
cmp
js
push
add
sub
adc
test
jns
jnp
add
mov
pusha
mov
test
movsl
xor
add
cltd
int3
jmp
mov
add
mov
or
test
and
and
aas
lock
inc
sbb
jo
mov
or
fcmovnu
dec
int3
dec
add
dec
orb
inc
stos
dec
fcomps
add
lods
push
pop
jne
orb
rcr
cmp
inc
fs
frstor
inc
cmp
xchg
and
mov
push
pop
ret
lea
sub
fimuls
jne
mov
mov
cmp
mov
fidivrs
push
shll
in
rol
das
mov
lds
adc
mov
cld
jnp
enter
xchg
add
fnstcw
movsb
hlt
addr16
mov
add
xchg
xlat
or
rorb
inc
cmpsb
hlt
pop
push
mov
sub
jae
js
into
mov
or
js
xchg
repnz
add
pop
add
dec
xor
sbb
mov
xor
mov
iret
and
test
inc
cmp
inc
jb
pop
pop
push
jmp
mov
cmp
andb
push
dec
sbb
push
or
lcall
rclb
xchg
push
mov
scas
pop
push
add
and
dec
xor
je
mov
mov
cmpsb
xor
cmp
clc
xorl
adc
jo
or
and
sbb
ja
in
shufps
jmp
mov
sbb
dec
inc
xor
out
push
pop
mov
xchg
pop
mov
push
pushf
sub
idiv
jno
ret
xchg
xchg
dec
dec
pop
maskmovq
testl
cmp
sub
dec
ds
sub
inc
lock
cmp
pusha
dec
scas
jmp
push
shll
mov
into
cltd
xchg
cltd
ret
stos
sub
js
xchg
inc
rclb
pop
cmpl
pop
mov
inc
xchg
dec
out
jne
jno
xchg
pop
pop
xchg
or
in
inc
cmp
inc
mov
jmp
and
add
add
fdivs
loopne
fcmovu
add
arpl
inc
lods
adc
jbe
inc
cmp
std
jmp
ja
mov
cmp
in
sub
js
jne
push
ljmp
je
mov
dec
out
loopne
loope
or
in
adc
sete
or
aad
mov
push
ljmp
mov
stc
add
xchg
fisubrs
shrl
aam
lea
add
insb
jne
test
fs
rcrb
jns
dec
test
xchg
push
and
push
add
pop
xchg
xor
jb
imul
sub
mov
push
fdivl
or
jge
sbb
and
xchg
push
pop
pushf
push
or
js
cmp
lea
sub
push
push
adc
das
adc
icebp
es
xor
mov
xchg
push
dec
add
cmpsl
je
pop
dec
push
lds
ret
rcrb
mov
cmpsb
xor
mov
or
xor
push
mov
and
pop
call
cmp
ja
push
pop
les
das
xlat
imul
xchg
xor
and
inc
mov
and
and
push
push
out
push
push
aam
mov
faddl
adc
xor
inc
test
mulb
mov
out
test
fcmovbe
xor
jge
iret
shrl
scas
pop
stos
sub
enter
xor
and
adc
add
lret
cwtl
xchg
or
xchg
xchg
sbb
inc
fdivl
inc
lea
cmp
dec
mov
lods
ret
sbb
js
jbe
je
imul
movl
cld
xor
sbb
test
lahf
cmpb
fildl
sub
jmp
pop
lods
inc
or
inc
cmp
fistl
push
or
mov
hlt
push
arpl
loope
inc
call
push
inc
clc
cmp
xchg
scas
pop
pop
lea
test
pop
mov
je
mov
jae
inc
js
push
test
ds
or
sbb
iret
mov
dec
dec
jb
add
sbb
pop
pop
xor
mov
test
sub
or
aas
in
sub
in
cltd
sbb
xor
add
pop
orb
aaa
xor
xor
push
pop
push
add
cltd
das
xchg
mov
ja
dec
movsb
inc
rcrl
and
adc
mov
jge
mov
and
mov
lcall
sti
loopne
or
fidivs
and
rcrl
inc
adc
dec
add
push
pop
hlt
call
test
leave
and
push
add
pop
outsl
xchg
test
loope
push
pushf
xor
in
inc
xor
lret
lahf
jg
int
lock
mov
add
aad
adc
cmp
in
adc
sbb
mov
jecxz
arpl
adc
push
pushf
adc
mov
dec
mov
push
imul
inc
call
sub
or
test
add
ret
adc
cmp
push
idivl
sub
inc
pushl
fisttpl
adc
add
and
daa
into
dec
push
cmp
dec
movsl
sbb
mov
outsl
mov
lods
push
mov
inc
or
sub
loope
fldt
push
push
out
push
push
inc
pop
and
adc
adc
hlt
setge
lock
mov
inc
lcall
or
mov
and
dec
and
andl
mov
pusha
mov
fmuls
clc
push
push
sbb
cs
push
push
test
dec
xor
push
cmp
mov
sub
add
aad
es
inc
jg
or
lds
fsubl
popa
sub
mov
lcall
jmp
mov
aad
dec
stos
movsl
pop
dec
loope
inc
and
sub
xor
xor
test
out
movsl
push
test
ljmp
mov
out
push
cmpsl
popf
cmp
jg
inc
mov
inc
inc
push
jo
imul
mov
sub
pop
xchg
lcall
push
push
push
inc
jno
pop
mov
sbb
cmp
repnz
pop
lock
movsl
add
sub
inc
sbb
clc
adc
xchg
add
dec
push
icebp
sbb
push
in
mov
addr16
testl
xchg
sbb
mov
shrb
mov
sbb
mov
dec
movsb
cs
jbe
lcall
or
ja
or
mov
rclb
add
pushl
or
aaa
mov
out
add
enter
iret
jbe
mov
mov
lret
fdivrs
mov
ja
cld
mov
insl
mov
push
jno
mov
pop
add
fcmovnu
xchg
dec
xor
add
add
sbb
pop
icebp
cmp
ds
pusha
jecxz
jne
push
fnstenv
or
repnz
imul
popa
mov
lock
push
xor
push
xorb
jmp
repz
sub
jb
push
sub
popa
test
xor
lods
rorb
push
cmp
fnstsw
loopne
add
loope
add
mov
dec
mov
and
push
and
es
pop
jb
mov
enter
sbb
xchg
fidivrl
push
add
cmc
stos
sar
push
sbbb
lea
fmull
push
cmpsb
mov
add
ficoml
cmpl
push
iret
push
int3
add
daa
daa
rolb
xor
push
rcrl
xchg
push
push
sub
sbb
and
mov
cli
xchg
fdivs
mov
adc
adc
push
sahf
adc
hlt
jl
jnp
push
sbbl
add
and
mov
jmp
rorb
jne
xor
add
adc
filds
mov
xchg
mov
push
adc
sub
pusha
adc
or
roll
mov
inc
adc
xor
loopne
push
scas
aam
imul
mov
or
xor
lock
push
lret
adc
mov
rcr
mov
icebp
adc
mov
inc
add
and
mov
adc
and
test
cmp
add
add
push
sub
xchg
sbb
testl
loopne
loope
into
icebp
loope
mov
mov
xor
and
ret
fildl
xchg
xchg
push
or
jo
mov
dec
dec
xchg
imul
gs
inc
add
mov
in
shlb
mov
orb
xor
aaa
pushf
add
xchg
test
aam
jo
pop
test
pop
lcall
movsl
popa
std
ss
and
fmul
xor
popa
mov
mov
xor
or
and
stos
ret
xchg
jo
mov
movb
cmp
cmp
push
adc
and
or
xor
lea
fsts
dec
test
mov
xor
call
jge
fwait
iret
mov
inc
lea
adcl
loopne
jp
cld
insl
lods
jne
gs
adc
jb
imul
mov
dec
xorl
cld
addr16
mov
jl
sub
mov
or
and
pop
mov
mov
add
xlat
cmp
or
popa
call
dec
ljmp
dec
in
mov
fisttps
jmp
dec
add
incb
or
add
imul
dec
loopne
jmp
xorb
fidivs
xor
sarb
cld
push
adc
add
xor
pop
sub
ficoms
push
orb
xor
repnz
xorl
mov
push
push
testl
push
add
sub
pop
test
or
xor
or
rcrb
rorl
xor
inc
add
inc
jne
mov
jle
rorl
sub
test
or
and
mov
icebp
push
int3
cltd
adc
movsb
cmp
lods
lods
aad
xchg
sahf
popf
and
inc
sub
adc
not
or
add
adc
and
js
dec
sahf
mov
xchg
dec
lods
addl
or
insb
push
bound
bound
inc
fmull
push
jne
mov
pop
add
jo
sub
lods
push
or
outsl
icebp
cmp
mov
outsb
in
or
rorb
mov
sarl
repnz
outsl
cmpl
xor
jbe
es
data16
dec
rclb
and
insb
testl
ss
pushf
out
es
in
sti
inc
aam
jge
jne
ljmp
not
sub
subl
adc
mov
mov
and
sbb
dec
push
mov
loopne
mov
sbb
mov
cmp
and
sbb
mov
and
xchg
dec
cs
push
push
or
dec
cmpsl
pusha
in
aad
xchg
mov
xlat
or
dec
mov
push
out
ss
push
cmp
dec
push
js
stos
inc
push
push
push
push
push
push
call
cmp
inc
push
aaa
push
and
push
popa
adc
push
push
mov
dec
push
mov
lods
dec
rclb
loop
xchg
inc
int
test
sbb
or
cmp
jae
or
sbb
jmp
add
add
icebp
mov
or
cltd
push
push
jp
loope
or
jo
jecxz
add
push
lods
popf
cmpsl
or
dec
das
push
push
jle
xchg
clc
mov
mov
int3
mov
call
pop
push
aaa
and
or
cwtl
mov
leave
dec
xchg
sub
aas
dec
inc
adc
cmpsl
int
sbb
test
adc
push
hlt
shlb
ss
imul
addb
sub
mov
sti
in
ror
add
call
and
inc
sub
mov
in
mov
das
mov
fisubrl
cmp
js
push
mov
dec
loopne
nop
dec
outsl
jecxz
xor
popa
push
and
loope
push
fisttpll
xor
rcll
faddp
dec
add
lcall
push
pand
cld
mov
inc
mov
inc
out
cmp
out
cmp
imul
pop
jp
adc
mov
mov
dec
shlb
mov
push
dec
xor
cmp
mov
loope
cwtl
mov
dec
dec
loopne
std
push
mov
shrb
rcll
sub
and
push
cmpsb
enter
push
stc
mov
fcoml
daa
in
add
jmp
sbb
ja
xor
pop
enter
sub
shrb
test
push
mov
popf
hlt
or
cmp
sub
xor
inc
sbb
push
fwait
stc
inc
cmp
stc
das
mov
std
in
add
div
sbb
add
aas
and
add
push
push
push
pop
mov
mov
rep
movsw
push
cld
loop
cmp
movsb
int
or
hlt
ljmp
or
mov
mov
shr
mov
mov
out
decl
jle
movb
cmpb
movsb
and
inc
xor
out
cs
in
push
mov
mov
inc
cld
inc
cmp
andb
int3
rcll
push
push
mov
jbe
jb
and
push
cld
je
ret
adc
and
sub
dec
sbb
pop
inc
lods
lret
push
loope
push
cmp
mov
or
mov
or
xor
push
xchg
sbb
adc
inc
add
xchg
jle
into
enter
enter
popf
or
insl
or
push
push
cmp
jl
sbb
sbb
outsl
imul
popf
inc
ljmp
pusha
sub
lods
inc
mov
pop
or
and
cmp
push
or
or
test
scas
testb
sbb
mov
ja
mov
test
and
jl
rol
mov
mov
cmp
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
sbb
outsb
and
add
adc
out
dec
dec
xchg
pop
lds
mov
rcr
popf
xor
pop
fwait
stc
dec
push
sahf
out
pop
das
push
aaa
aas
inc
dec
push
jns
out
pop
outsl
ja
out
sahf
out
xchg
jns
lcall
sahf
out
mov
out
sahf
out
fneni(8087
in
out
sahf
ljmp
jmp
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
popf
adc
sbb
push
pop
and
and
aas
sbb
or
sub
sbb
ss
mov
mov
push
jg
and
cmp
add
idivl
mov
add
movsb
stos
cwtl
jmp
psrad
pop
mov
add
jbe
in
jae
aaa
dec
ret
push
push
jns
imul
xchg
or
or
leave
or
lret
pop
mov
sub
xor
mov
mov
jle
inc
cmp
jbe
cmp
shrl
xlat
mov
push
pop
adc
cltd
push
nop
std
jg
pop
sbb
push
jmp
inc
push
or
jmp
cmp
inc
jne
mov
das
xor
mov
inc
clc
adc
stos
push
sbb
insb
xor
add
lods
jmp
xchg
adc
dec
fdivs
pop
dec
xor
mov
push
cs
sub
jns
clc
add
push
inc
pop
enter
pop
xchg
adc
adc
insb
movsl
add
or
je,pn
push
out
inc
add
les
cmp
push
push
cmp
xchg
mov
jmp
or
cmp
sbb
add
add
add
or
shr
lret
adc
lds
leave
mov
aas
jb
outsl
lea
pop
and
inc
cmpsb
adc
or
repnz
lods
xchg
mov
icebp
loopne
fdivp
and
lods
das
cltd
cmp
pop
add
ret
jge
test
sbb
sbb
sbb
loopne
push
movsb
push
lds
insb
fstpl
call
xor
xorb
test
add
mov
xlat
andl
jne
cli
add
test
test
rcll
add
nop
hlt
pop
loopne
or
imul
lock
xchg
icebp
addr16
fmuls
repz
std
ss
jmp
mov
jne
and
xchg
sub
or
or
and
add
movl
in
xchg
mov
pop
mov
faddl
pop
loopne
add
xchg
sub
in
adc
jo
idivl
ds
sahf
lret
dec
int
cld
push
ret
ss
clc
lock
je
xchg
into
jbe
or
cmp
push
xor
xor
adc
into
adc
cmp
cmp
and
mov
pop
sub
add
xor
notl
add
inc
pop
inc
loop
and
nopl
in
nop
push
and
pop
popa
daa
mov
in
sub
jns
shl
and
xchg
ret
rcll
pop
push
sbb
or
push
movb
or
xor
dec
ds
mov
mov
xchg
pushf
push
xchg
add
xchg
and
adc
arpl
pop
subb
pop
push
mov
lock
mov
xor
push
jmp
cmc
sub
rol
dec
jnp
hlt
or
in
nop
add
das
pop
add
nop
sub
sub
arpl
cmp
sbb
in
jp
mov
push
cwtl
rolb
or
mov
push
leave
mov
pusha
or
pop
add
nop
popf
cwtl
shlb
xchg
sub
in
adc
push
jmp
scas
xchg
and
in
stos
push
adc
jecxz
sarl
inc
adc
push
in
cmpsl
sahf
inc
enter
test
add
mov
add
leave
scas
rorb
je
scas
pop
push
scas
pop
mov
push
push
adc
pop
lds
rcrl
or
addl
fs
popf
pop
lret
xor
mov
ljmp
inc
or
add
lods
add
adc
add
pop
sub
and
cmp
xor
clc
rclb
sbb
cmpsb
mov
daa
push
jmp
pop
pop
lret
push
pop
add
xor
or
xchg
popf
ret
dec
adc
and
sbb
pop
pop
int
ret
fmulp
pushf
sub
sub
mov
aam
jmp
faddl
jmp
repz
lods
ror
inc
and
add
xchg
xchg
jmp
sbb
test
fcoml
sbb
mov
test
sbb
adc
add
fisubl
adc
push
ljmp
add
je
outsb
sub
or
bound
xorl
cmp
test
inc
nop
jmp
lcall
and
mov
inc
push
cmp
test
jg
push
or
cmp
pop
cmp
adcb
ret
shl
dec
je
sub
jne
adcb
xor
aad
and
cmp
popl
jl
inc
test
sarl
in
cmp
xchg
adc
pop
ret
leave
mov
nop
push
mov
in
inc
jecxz
xchg
push
movzbl
push
push
xchg
or
insb
dec
dec
ds
jnp
andb
or
ds
inc
mov
mov
sbbl
mov
in
xor
pop
enter
inc
jbe
sub
rcl
enter
fcomps
fsub
dec
daa
icebp
jbe
jb
cld
pop
call
xchg
xor
inc
jbe
je
hlt
clc
jg
mulb
fisttps
cld
pop
push
add
pop
add
xchg
lret
or
or
adc
xor
sbb
xor
xchg
sub
add
lock
push
bound
subl
inc
pushl
add
jne
lret
lea
pop
sbb
pushf
lea
xchg
in
or
jbe
or
push
mov
leave
mov
jl
sub
lea
cmp
mov
add
jno
adcl
push
push
in
in
or
sbbl
push
je
into
xchg
in
xchg
sbb
mov
jmp
xlat
call
and
xchg
and
jnp
imul
jl
jmp
out
push
sbb
sbb
test
mov
cld
sahf
mov
xchg
popf
pop
sti
cmp
je
or
jge
and
xchg
rclb
loope
in
xchg
jmp
rcrl
mov
add
push
shl
roll
int3
dec
xchg
mov
pop
xor
sub
daa
and
out
mov
mov
les
sbb
push
fwait
fwait
mov
sub
or
inc
lds
test
cmpsb
jb
pop
add
inc
push
dec
js
add
jmp
inc
push
hlt
cmp
jl
stos
or
jle
ret
sbb
xchg
shr
imul
fdiv
sbb
jg
jle
or
call
sbb
incb
fsubr
jns
add
push
sub
ds
adc
test
or
cmpb
jne
mov
js
add
pop
rclb
pop
and
inc
cmpsb
push
pushfw
push
cli
jbe
movb
test
push
bound
mov
cmp
cmp
test
ds
adc
adc
in
or
lret
add
pop
mov
lock
add
and
push
rorb
mov
jl
shlb
xor
cmp
sub
lea
mov
pop
bound
push
xchg
dec
sbb
add
and
movsb
jno
add
orb
cmpsb
ss
jne
and
or
sahf
loope
in
jge
mov
adc
les
outsb
pusha
movsl
in
repnz
in
mov
in
dec
mov
or
mov
clc
cmp
je
xor
jne
push
mov
mov
adc
fistl
insb
cs
leave
rorb
inc
push
sbbb
dec
movsl
or
lods
inc
mov
dec
inc
cmpsl
loopne
ret
jne
cmp
sbb
adc
aaa
mov
adc
cwtl
imul
jno
adc
shlb
nopl
adc
repz
fwait
jmp
xchg
or
dec
ret
push
loop
push
fiadds
andb
xlat
jmp
pop
cmpxchg
inc
xor
test
adc
ret
rorb
mov
int
inc
or
pop
or
adc
lcall
clc
popa
mov
or
push
repnz
mov
mov
or
ja
repz
and
scas
cltd
or
mov
cmp
jge
nop
and
or
aas
push
sbb
mov
push
and
lea
rcrl
stos
pop
add
imul
mov
pusha
xchg
lea
loopne
rorl
sbbl
or
or
adc
in
xchg
in
xor
sub
pop
add
js
inc
dec
addb
pop
and
pop
aam
sbb
sbb
fucomip
fldt
mov
sub
decl
mov
and
sbb
cmpsb
adc
dec
sbb
and
dec
inc
jg
mov
nop
push
popf
sub
cmp
xchg
add
outsb
pop
cmp
negl
add
cmp
and
xor
mov
inc
cwtl
mov
and
dec
push
xchg
jae
mov
mov
popa
or
mov
xor
loope
sbb
popa
cmpsl
imul
cli
aad
ja
and
mov
aam
jl
pop
ret
jbe
lds
inc
jle
xchg
adc
fs
mov
sub
rcll
and
fisttpll
ss
movsb
ret
pop
pop
imul
cmp
adc
xchg
imul
or
outsl
sbb
addb
ret
or
in
inc
out
adc
pop
or
push
imul
pop
lahf
shlb
stos
adc
lret
pop
push
pop
or
jle
push
pop
sarl
push
in
leave
inc
pop
sahf
test
xchg
insl
dec
adc
lds
add
fldenv
push
and
sub
cwtl
xchg
dec
pop
or
loop
cld
jae
sbb
xor
sbb
popf
inc
xor
das
jo
jmp
adc
popl
and
xor
call
jl
xor
pushf
or
mov
pusha
xchg
push
xor
mov
sbb
push
push
loop
pop
clc
lods
adc
xchg
shrl
mov
jns
imul
xor
lahf
jb
lret
test
xor
xor
dec
lock
pop
fwait
inc
push
xchg
ja
pushf
push
cs
dec
and
clc
aas
push
or
mov
jmp
dec
cmpsl
nop
inc
lcall
orl
out
adc
adc
mov
xchg
sbb
lea
sbb
push
and
in
jg
fadds
mov
pop
hlt
xlat
hlt
xchg
jl
cmp
add
pop
xchg
fadd
push
push
add
mov
push
loop
add
dec
loope
es
sbb
and
fcoms
insl
jb
mov
push
icebp
stc
pop
adc
es
or
invd
cmp
movl
sbb
push
pop
mov
push
add
in
mov
cmp
inc
mov
or
sahf
and
xor
add
dec
les
cmp
scas
jle
ret
inc
inc
insb
mov
loopne
mov
lret
js
jno,pn
pop
insb
dec
add
jge
inc
mov
mov
scas
and
fadds
pop
adc
pop
ja
or
jmp
add
jmp
and
push
mov
xor
fstl
test
out
fisubl
loop
fimuls
enter
jle
sub
loopne
dec
jmp
dec
test
sysret
mov
lods
imul
clc
add
int3
movsl
std
jmp
mov
push
sbbl
daa
clc
and
dec
pop
mov
xor
or
ror
jp
bound
or
sbb
data16
cmp
mov
aam
xchg
sbb
push
push
aam
mov
or
adc
ds
and
loopne
lcall
push
mov
je
pop
adc
sbb
lret
sbb
push
jo
push
and
aas
xchg
testl
dec
fdivrl
pop
enter
xchg
and
inc
sbbb
popf
mov
jge
dec
movsb
in
cmp
imulb
add
sub
add
add
xchg
rolb
outsb
fwait
mov
add
jb
or
aaa
cli
imul
add
push
cld
movsb
jmp
xor
fld1
sbb
pop
inc
inc
sbb
add
push
or
in
mov
jb
adc
or
lock
cmp
add
shl
add
add
loopne
lods
adc
mulb
aam
mov
dec
stos
cmp
fimuls
sbb
test
or
add
cwtl
cs
das
xchg
lret
push
iret
add
nop
movb
jne
movsb
jno
push
jecxz
shlb
or
aaa
xchg
mov
lock
dec
loopne
adc
fstpt
add
jo
test
sbb
dec
add
xchg
ss
jp
or
push
mov
sbb
add
add
fsts
pop
mov
jmp
pop
add
pop
shlb
or
inc
pop
xchg
popf
xor
lock
pop
inc
andb
rclb
pop
xor
push
fmuls
rcrl
imul
fidivrs
xchg
pop
or
and
mov
mov
adc
rcr
or
or
push
fsubs
scas
cmp
je
xor
scas
mov
inc
push
jmp
cmp
push
push
jp
aas
sub
loope
push
cmp
add
push
lods
add
cmp
movsl
pop
sbb
sub
fdivs
adc
faddl
ret
sub
or
pop
ds
out
popl
inc
mov
scas
xorb
adc
inc
call
push
shld
mov
outsb
insb
call
jb
outsl
jg
and
scas
orl
pop
jbe
push
divl
xchg
push
adc
xchg
lods
push
and
outsl
inc
add
pop
cs
imull
sub
adc
push
jne
int
lock
push
push
dec
mov
and
pop
ret
mov
mov
js
xor
dec
pop
rorb
dec
add
or
jle
pushf
movsl
mov
and
mov
loop
xchg
inc
push
pop
sti
mov
outsl
or
mov
jle
lea
push
xor
cmpl
jno
push
mov
or
jo
mov
or
cli
dec
daa
in
add
pop
push
push
sub
fmull
je
push
xchg
mov
xchg
mov
push
scas
pcmpgtd
or
jbe
and
aam
inc
lods
push
lods
pop
push
fsubrl
inc
in
ljmp
jno
fisttpl
fsts
out
rorb
call
popa
mov
sti
test
xchg
inc
js
dec
js
push
stos
xor
adc
xor
stc
arpl
adc
test
add
xchg
or
push
scas
mov
push
add
pop
or
xchg
adc
test
or
imul
dec
addl
cmpsb
xor
enter
into
jb
xor
mov
lea
push
sbb
mov
push
ss
sub
test
test
xchg
out
sub
and
sbb
add
aaa
pop
pop
add
cmc
fstp
mov
lcall
mov
push
pop
xchg
or
sbb
add
int
xor
and
push
mov
dec
fadds
ret
lahf
pop
xlat
aaa
loopne
xor
or
mov
std
pop
sub
or
dec
movl
pop
jle
pop
push
inc
sub
call
xchg
adc
pop
cmp
sbb
xchg
xchg
inc
adc
dec
or
in
test
jecxz
in
outsb
inc
mov
scas
xchg
adc
jbe
push
jb
mov
fisubrs
mov
notl
cvtps2pd
sarb
in
xor
push
pushf
std
cltd
mov
jge
push
test
push
inc
sub
addb
imul
lcall
outsl
sarl
rep
add
fmuls
mov
add
push
dec
cmp
xchg
into
ret
push
push
inc
pop
push
adc
push
or
dec
aas
jmp
push
cmc
pusha
rolb
rcl
dec
test
ljmp
pop
or
inc
outsb
sar
orl
rolb
dec
sbb
test
lods
lds
lods
push
sarb
and
xor
sbb
ret
loope
push
push
mov
mov
fsts
xchg
sti
inc
sub
add
push
and
push
test
push
stos
popa
xchg
pushf
mov
sbb
push
test
sbb
or
imul
inc
mov
lret
sbb
xor
js
ja
ficoms
xor
inc
xchg
mov
mov
js
or
setg
rcll
push
fwait
mov
mov
lea
icebp
les
dec
test
jne
inc
sbb
shrl
or
mov
lahf
dec
in
cmp
lds
push
push
mov
pushl
mov
inc
nop
ud2
and
icebp
popa
ret
pop
xchg
jae
nop
and
cld
movsb
and
addb
push
incl
in
insb
or
adcb
sar
inc
stos
sub
fimuls
loope
jle
mov
jle
add
imul
or
and
or
or
push
daa
imul
shl
add
dec
fsubrs
es
les
fsubrs
push
or
in
or
int3
cmp
jp
enter
push
call
mov
call
or
jae
hlt
and
push
js
das
jne
adc
std
out
inc
shrl
mov
lret
mov
mov
mov
adc
outsl
in
mov
or
es
push
adc
add
nop
enter
add
sub
rcrb
inc
or
ret
inc
imul
test
add
and
mov
add
adc
adc
adc
mov
sbb
scas
insl
or
push
jle
add
add
inc
and
or
adc
mov
xchg
push
subl
mov
dec
pop
cs
xor
add
loope
aaa
cmpsl
aam
adc
sub
sub
mov
shlb
enter
pop
or
pusha
push
jo
aad
xchg
adc
inc
out
repz
and
sub
xor
sbb
popf
inc
cmp
dec
inc
and
lods
lods
test
xchg
adc
push
push
cmp
orb
repnz
and
xchg
loopne
pop
pusha
jle
dec
sbb
xor
mov
add
and
stos
mov
sahf
push
seto
dec
xor
inc
lods
imul
and
xor
or
jmp
push
xor
or
sahf
push
xlat
insl
arpl
lret
sub
out
shrl
ret
jl
and
rcrb
fsubl
jmp
nop
pop
mov
in
aad
adc
push
add
pop
out
xchg
and
push
adc
push
inc
sbb
test
adc
mov
adc
add
xchg
fisttps
imul
mov
enter
push
push
and
xchg
cmpsl
jle
ret
mov
mov
lcall
sub
mov
mov
insl
bound
pop
inc
imul
idivl
dec
xor
outsl
add
push
push
andb
gs
fists
loop
cld
lods
mov
or
enter
test
cmp
add
aam
pusha
cmp
adc
fdivrl
cmp
jae
nop
imul
nop
mov
jbe
and
inc
mov
jo
sbb
push
popa
loopne
sbb
addl
inc
jmp
mul
stc
push
inc
xchg
adc
scas
pop
movsl
xchg
sbb
mov
add
rcr
pop
aam
adc
mov
push
outsb
xor
or
pop
sub
cmpsl
fcoms
and
call
dec
popf
inc
in
and
add
xchg
sub
xchg
shrb
jl
bound
test
mov
adc
sbb
cmpsl
loope
dec
jmp
dec
xor
sahf
hlt
femms
lods
mov
and
cmp
cmp
fbstp
xor
or
push
xchg
mov
sbb
add
xchg
and
add
ret
lods
pop
test
sub
sub
push
mov
or
cmpsl
ja
push
jns
cmp
push
mov
xor
clc
mov
or
test
dec
sbb
nop
inc
push
adc
cmp
xor
push
adcl
and
in
fisubs
cmp
push
jecxz
in
js
add
dec
dec
inc
pop
out
clc
add
push
andb
dec
xlat
hlt
or
xor
iret
cmpsb
jbe
jge
mov
gs
hlt
dec
movsl
addr16
aaa
and
mov
dec
filds
or
je
or
je
in
mull
and
jne
mov
popl
mov
sub
cmpsb
ss
mov
add
jecxz
or
xor
push
subl
mov
jbe
add
fidivrl
movsb
loope
xchg
fisubrs
add
out
and
jo
jbe
push
fwait
mov
mov
imul
jo
nop
cmpsl
faddl
mov
dec
imul
push
and
cwtl
pop
shrb
mov
xor
adc
and
shll
rolb
pop
adc
xor
lock
pop
pop
sub
out
mov
cs
repnz
sbb
shrb
outsl
add
pop
pop
dec
in
in
js
addl
lret
mov
jno
add
inc
xchg
xorl
cmp
fnsave
cmp
decl
lea
call
pop
and
ficomps
jp
mov
sub
push
pop
adc
push
sbb
cmp
push
or
enter
in
lret
test
adc
divb
loopne
stc
xor
shrb
call
loope
mov
mov
push
int3
jnp
out
xor
and
daa
inc
mov
dec
in
jne
stos
adc
mov
addr16
pop
and
or
out
sbb
mov
ret
ja
pop
movsb
clc
or
pop
cwtl
mov
pop
mov
cld
xchg
cmp
in
push
pop
jne
pop
out
popa
sub
mov
mov
loop
sub
dec
or
std
pop
inc
mov
in
xor
push
lea
pop
shrl
adc
aaa
sub
lods
mov
fnstsw
test
dec
fwait
inc
fmuls
xchg
pop
cld
clc
mov
mov
mov
xchg
pushl
sbb
es
out
dec
xchg
cmp
test
pusha
mov
ds
push
out
jecxz
es
inc
add
outsb
daa
pusha
lahf
push
jae
js
nop
add
test
push
sbb
fmuls
loopne
xchg
add
or
inc
add
das
movb
inc
jge
repz
or
push
aaa
sub
add
jp
shl
mov
cltd
rclb
cs
sbb
aad
fcoms
inc
xor
pusha
xor
lods
push
push
cmc
xchg
fidivrs
xchg
dec
adc
xor
inc
and
add
arpl
mov
sarb
sub
shl
lock
adc
mov
scas
or
loope
dec
push
add
je
add
pushf
or
or
and
mov
sbb
loopne
push
sub
sub
ljmp
je
jbe
push
jns
add
in
pop
ret
lcall
pop
jb
mov
sbb
aaa
and
lcall
rclb
jg
sbb
mov
adc
inc
sub
fs
lds
add
sbb
loope
mov
xor
sub
cli
int3
rcrb
js
push
and
or
mov
xor
sub
call
dec
sbb
add
mov
in
pop
ret
out
adc
mov
or
lcall
fcompl
sarb
mov
in
jo
and
orb
pop
sub
xor
xor
mov
xchg
sbb
fdivl
cli
mov
mov
dec
cmp
sahf
fs
jmp
adc
mov
addl
mov
pop
push
dec
dec
dec
movsb
pop
jb
push
push
add
and
or
sbbl
dec
push
in
lods
les
mov
adc
or
mov
inc
push
pop
adc
sub
mov
out
cmp
call
jne
push
movsbl
sbb
xor
mov
mov
mov
push
push
and
add
out
mov
or
sbb
leave
scas
jp
pop
int
xor
test
and
dec
mov
lea
je
push
insl
inc
mov
inc
hlt
je
movsb
xor
mov
mov
and
jo
ret
bound
fcmovb
add
fimull
cmp
sub
outsb
adc
int3
aaa
neg
push
pop
mov
sarb
jg
mov
test
stc
push
fwait
mov
push
add
ljmp
add
cli
pop
cmpsl
mov
push
enter
or
mov
mov
push
idivl
xor
sbb
jb
and
xor
adc
aam
sahf
cmpsl
push
lcall
push
mov
xor
sti
imul
dec
sub
mov
push
inc
inc
jmp
inc
fs
sub
mov
cmp
popf
push
icebp
add
push
inc
xchg
sbb
mov
cmpsl
orl
test
fisttps
or
repnz
cld
push
sub
fimull
jmp
arpl
pusha
aas
js
mov
fdivs
scas
jp
insb
push
icebp
sti
je
je
ret
mov
and
cmpl
ret
xchg
mov
and
pop
push
aam
push
and
dec
pushf
dec
pusha
dec
and
mov
xor
xor
pop
test
mov
ljmp
mov
inc
push
scas
mov
or
int
cmp
fcoms
xchg
push
clc
inc
ljmp
adc
call
mov
je
mov
out
lods
jmp
xor
shlb
adcb
or
or
pop
dec
stos
add
jmp
lods
and
rol
adc
sbb
enter
xchg
cltd
lods
jnp
in
lods
xor
sbb
xor
inc
clc
aam
insb
and
push
gs
xchg
xchg
insb
lds
pop
je
xor
push
and
xchg
je
inc
lods
insb
mov
jae
inc
fsubrs
or
sub
fisubrs
jl
inc
ret
sub
rcrb
pop
cmpsb
adc
dec
add
xor
mov
cltd
push
mov
dec
testl
pop
pop
push
sbb
out
push
push
push
or
adc
pop
mov
fiadds
push
mov
cmp
sbb
inc
push
inc
inc
and
int
cmp
push
xor
dec
push
das
stos
mov
ret
mov
mov
mov
shrb
or
sub
out
testb
jne
ss
mov
pop
jae
xchg
and
je
cltd
test
in
xchg
lea
xchg
sahf
lahf
mov
test
xor
dec
rorb
mov
push
rorl
lret
mov
xor
icebp
push
cli
in
imul
lock
orl
sub
loope
sub
push
jmp
or
add
add
xchg
cli
jne
mov
add
pusha
sub
test
lea
mov
add
add
mov
mov
out
pop
xchg
mov
cmp
jl
add
push
or
mov
cmpl
inc
inc
rorb
sbb
loopne
xor
shr
xor
adc
inc
lahf
daa
jo
dec
jp
not
pushf
xor
push
jo
mov
cmp
idivl
call
add
aaa
jmp
add
mov
lock
aam
and
inc
add
inc
dec
leave
mov
inc
movsb
sub
push
and
stc
cltd
sbb
push
repz
jge
add
dec
cmp
sbbb
ret
mov
add
int3
fwait
sbb
imull
jge
push
push
cmp
lods
inc
roll
popf
add
jbe
adc
push
or
mov
in
xlat
mov
lcall
adc
push
or
jb
push
leave
push
jne
xor
add
add
out
xor
sahf
je
sbbl
fimuls
adc
ljmp
xchg
push
lahf
add
ret
adc
xchg
loope
int3
nop
jo
out
cmp
ds
push
or
sar
mov
sub
xchg
sub
call
adc
xchg
adc
or
cmpsb
mov
or
sti
aam
pop
mov
cmp
pop
mov
push
mov
jl
call
mov
dec
cmp
sub
cmpsl
cmp
add
xor
or
cltd
jnp
outsb
imul
cwtl
dec
shlb
adc
or
add
sbb
smsw
je
add
mov
and
push
pop
sub
pop
add
pop
or
sahf
mov
outsl
xchg
lock
push
add
or
and
push
adc
jmp
sbb
ret
add
nop
ja
adc
sbb
push
testl
mov
dec
pop
push
sub
push
popa
or
sbb
push
add
push
call
or
inc
or
or
into
add
add
ljmp
sbb
cmp
pop
enter
sub
repz
mov
test
jmp
push
and
aas
mov
mov
push
scas
roll
push
xchg
or
sbb
pusha
ficoml
shll
ljmp
test
rclb
xor
mov
sub
mov
mov
xchg
xor
push
adc
or
push
es
or
mov
and
cs
cmp
gs
cmp
roll
xor
or
test
clc
and
cmc
inc
xchg
test
mov
push
sbb
clc
fisttps
mov
scas
cmp
imul
iret
stos
sbb
sbb
inc
inc
push
cld
adc
push
push
fisttpl
mov
and
sbb
push
popa
inc
sbb
push
mov
xchg
and
inc
and
rorl
mov
add
xor
mov
and
shlb
push
push
out
adc
mov
cmp
dec
fisubl
daa
pop
xchg
js
sub
and
sarb
xchg
test
inc
mov
test
int3
mov
cmp
in
lods
push
xchg
push
cwtl
sub
into
jne
pushf
dec
dec
mov
or
add
lret
stos
pushf
int
movsb
test
push
adc
test
ja
cmp
lock
daa
lods
add
adc
xchg
lret
call
sbb
inc
fmull
imul
daa
and
mov
mov
filds
push
xchg
les
xchg
rclb
inc
pop
andb
int3
xor
xor
insl
imul
jge
jne
mov
and
pop
cmp
push
fisttpll
lcall
push
enter
shlb
cmp
cmpb
sbb
add
adc
adc
stos
sbb
hlt
insb
xchg
or
xchg
arpl
aad
push
into
nop
ret
push
out
mov
push
xor
dec
orb
add
jae
sub
mov
sub
in
sub
and
loopne
lods
add
push
test
inc
fwait
add
or
mov
insl
sub
arpl
add
imul
mov
loop
enter
cmpsl
sub
cwtl
inc
pop
data16
andl
sbb
and
repz
pop
mov
cmp
inc
mov
jmp
push
in
fmuls
xchg
jle
inc
negl
sub
adc
jle
mov
dec
add
jmp
notl
mov
sbb
mov
mov
movsb
mov
movsb
daa
and
or
and
lock
pushf
pushl
push
xchg
sbb
add
test
mov
inc
lods
push
dec
push
movsb
sbb
fs
and
pop
adc
ret
ror
cmp
cmp
cmp
xchg
jmp
jnp
sbb
add
mov
stos
and
adc
xor
dec
das
roll
cmp
je
jp
push
shrl
add
loop
xchg
cmp
je
jbe
inc
mov
scas
push
mov
ja
dec
je
xor
jne
push
dec
gs
sub
push
add
jmp
nop
xor
sbbl
lea
nop
pop
mov
mov
xor
movsb
in
push
dec
movsl
jno
pop
lods
aam
add
adcb
mov
jmp
pusha
rorl
test
movsb
aas
lcall
mov
push
fstpl
sub
in
sub
mov
lahf
movsl
ret
push
aaa
filds
cwtl
adc
ret
or
xchg
mov
shrb
inc
rol
adc
std
mov
jmp
rorl
loope
je
xchg
loopne
inc
push
dec
dec
inc
loop
rolb
push
inc
and
add
popf
push
push
add
or
mov
cmp
int
sbb
mov
add
cmp
inc
fisttpll
xor
movsl
sbb
fisubl
push
fcomp
jmp
rol
fnstsw
push
adc
inc
clc
pop
movsb
push
inc
cli
fsubr
pop
faddp
loopne
sbb
or
repnz
imul
es
sub
mov
pop
and
popa
sbb
cmp
out
arpl
cmp
dec
mov
push
jo
dec
imul
push
cmp
loope
cmp
jne
jl
sub
lods
add
push
test
sub
inc
add
inc
jne
pop
push
out
mov
push
les
test
mov
push
sbb
jle
rcrb
push
and
xchg
or
sub
mov
or
mov
lea
sti
sub
mov
and
int
or
jp
andl
mov
insl
sub
dec
repz
jae
std
in
add
jmp
insb
std
pop
adc
jmp
movsb
imul
test
imul
test
clc
cmpsl
decl
or
and
inc
adc
lds
lea
adc
mov
push
out
adc
and
push
rcrb
sbb
mull
lret
testb
sub
outsb
and
and
out
push
xor
jne
lock
jge
cmp
into
push
addl
inc
push
cmpsl
jo
push
dec
and
sbb
out
adc
rclb
popa
movsl
push
jnp
gs
insl
rolb
inc
xchg
daa
mov
jle
ja
pop
xchg
mov
orb
lcall
cld
mov
enter
sbb
stos
sbb
rorl
dec
je
mov
and
aas
mov
in
pop
lret
push
das
adc
adc
sbb
dec
out
nop
ss
and
stos
jnp
int
pop
sub
cwtl
push
xchg
sub
push
push
push
jmp
test
or
add
test
jle
inc
inc
pop
test
aaa
push
fndisi(8087
cmpsb
jl
pop
or
jmp
xor
ficoms
jb
ret
and
jne
pop
push
rorb
pushf
push
push
int
jl
add
iretw
push
add
repnz
pushf
dec
shlb
fisttpll
add
cwtl
xchg
jo
lea
push
setge
and
out
movb
pusha
adc
add
jmp
mov
adc
sub
inc
loopne
push
inc
jg
loope
ds
and
addr16
andb
xor
ja
int
cmp
int3
movb
sub
lret
pop
ja
mov
stc
pop
dec
test
inc
add
cmp
jnp
pop
or
cmp
mov
test
cmp
jno
pop
cmp
mov
jne
cltd
fs
popa
sub
loopne
or
fwait
out
pop
push
aad
mov
lcall
data16
sbb
jge
pop
cmp
cmp
push
push
outsb
dec
rorb
pusha
data16
aas
scas
add
mov
rolb
sbb
push
sbb
push
mov
int3
add
mov
rorb
enter
inc
xor
movsb
mov
push
addr16
jl
inc
and
ficoms
xorl
lcall
or
movsb
orb
mov
icebp
adc
push
shrl
jp
mov
xchg
push
scas
outsb
add
sbb
jo
ret
adc
xchg
jmp
adc
push
jmp
inc
and
daa
or
nop
daa
pop
push
push
jb
adc
popa
popa
add
xchg
enter
lcall
jae
in
lock
test
gs
ds
sub
adc
or
mov
push
push
stc
pusha
or
xchg
cltd
nop
mov
hlt
lahf
pop
or
mov
inc
test
out
dec
jno
jle
je
push
pop
pusha
push
or
push
add
push
xor
mov
nop
pop
cmc
orl
popa
inc
rcpps
adc
adc
xor
mov
int3
call
xchg
cmp
push
dec
sbb
bound
jg
je
fldenv
shr
xchg
das
fs
pop
adc
mov
inc
add
jl
push
dec
lock
call
dec
pusha
stos
adc
lcall
and
jne
rcll
out
mov
adc
pop
shlb
test
push
pusha
mov
mov
or
cli
or
lret
jns
xchg
xchg
cmp
dec
adc
movsl
sbb
push
aaa
push
push
shlb
imul
sbb
pop
inc
aas
sbb
pop
cmp
stos
pop
aas
or
fimuls
lock
mov
repnz
pop
push
imul
frndint
mov
dec
hlt
mov
cmc
ret
test
test
bound
push
out
je
cltd
clc
sbb
mov
pop
adc
mov
rol
test
inc
adc
mov
mov
popa
or
fdivrs
cmc
pop
loopne
fdiv
cmp
add
pop
or
or
outsb
cmp
or
andl
jo
xor
mov
xor
or
and
pop
lea
rclb
ljmp
orl
mov
ror
ljmp
xor
shr
xor
es
mov
rol
xor
shr
xor
add
add
add
loopne
fnstsw
mov
ret
jae
jnp
pushl
and
not
and
xor
add
add
aam
adc
popa
sub
xchg
sbb
xlat
in
push
push
rclb
repnz
mov
fisubrs
dec
iret
add
xor
and
and
xchg
push
aam
or
cmp
mov
rorb
repnz
test
mov
mov
and
not
ret
rcl
add
push
jo
testl
hlt
add
xor
fsubr
sar
or
push
aam
call
subl
sub
ljmp
rol
rol
out
add
push
lret
xor
fcomp
rcrl
loopne
mov
in
xorb
sbb
in
lahf
push
cmp
sub
bound
pusha
inc
push
push
push
bound
pop
int3
add
mov
pop
aaa
mov
js
jo
xor
cltd
call
xor
loopne
loopne
in
push
cmp
in
loopne
adc
pop
dec
shll
rcl
mov
pop
xor
jae
sub
or
int3
je
add
outsl
pop
xor
jne
and
and
out
adc
or
xor
hlt
xor
cmp
imul
push
test
addl
or
mov
inc
jo
ret
push
jo
fisubs
add
mov
call
inc
pop
iret
jl
adc
push
loop
mov
jle
inc
mov
filds
cltd
xchg
inc
fadds
pop
jbe
sub
push
call
ret
add
add
and
add
or
cmp
imul
rcrb
mov
mov
xchg
shr
inc
clc
jo
cli
stos
adcb
aam
aaa
cmp
int
dec
dec
sub
enter
in
pushf
pusha
fs
inc
shr
rolb
inc
add
cli
xor
xor
xor
shlb
rorb
or
loopne
in
imul
in
lahf
jo
add
adc
add
and
data16
xchg
and
imul
inc
and
lods
int
leave
and
xorl
and
xor
pop
adc
movsb
test
rol
push
or
pop
mov
out
fs
pop
xchg
or
mov
xchg
pop
pusha
xchg
in
pop
scas
movsl
mov
or
arpl
rolb
dec
pushf
loop
adc
fs
andl
inc
mov
lcall
iret
enter
stc
mov
adc
pop
dec
mov
bndldx
mulb
dec
loopne
shll
adc
sbb
jo
adc
in
add
and
clc
sub
and
mov
mov
out
pop
add
xor
clc
shrl
mov
in
pop
add
pop
cmp
jb
ret
aaa
add
das
mov
jnp
pop
cld
sub
jmp
sbb
testb
movsb
inc
push
adc
enter
add
jmp
or
loop
incl
rol
and
mov
dec
insl
add
adc
mov
cmpsb
ffree
inc
jae
mov
sub
xor
inc
loopne
lea
add
add
sub
sub
xchg
out
mov
add
sbb
mov
dec
jne
pop
sub
add
clc
daa
lock
test
jnp
jl
sub
mov
cmp
jbe
or
and
xor
std
mulb
add
jae
push
pop
dec
dec
mov
fadds
rep
or
fnstsw
ljmp
inc
fs
imull
outsl
pop
loopne
ror
mov
notl
ljmp
jb
sub
adc
ret
cmp
jb
cmp
ja
push
sub
sahf
out
imul
int3
enter
aas
push
push
addb
mov
call
add
fsts
cmp
mov
push
cmpsb
test
lds
dec
cld
out
dec
and
sub
dec
repnz
jg
sbb
aam
in
xor
incl
mov
cmp
je
or
mov
adc
cmp
je
cmp
jne
add
or
neg
pop
mov
push
incl
jmp
dec
mov
dec
xor
push
mov
dec
shlb
mov
je
testl
add
sbb
cli
mov
and
lea
pop
fildl
fisubl
inc
push
inc
and
or
mov
mov
pusha
inc
mov
xlat
or
sub
add
lahf
pop
cmp
pop
mov
pop
sbb
mov
lea
sbb
xor
inc
loop
hlt
and
or
push
inc
xorl
fidivrl
cmp
jne
notb
cmp
pop
mov
mov
je
test
add
cld
mov
or
or
ja
pop
jb
or
inc
les
lods
cmpsb
pop
stc
or
add
push
loopne
inc
test
stos
push
inc
imul
outsl
sbb
cmpsb
inc
je
loop
jne
shlb
mov
cmpsb
add
mov
inc
test
sbb
xor
or
jb
cmp
rol
shl
add
jmp
cwtl
scas
js
xchg
les
inc
orl
lock
mov
adc
test
jne
orb
js
and
lock
rorl
insb
mov
mov
or
stos
mov
inc
add
pop
jae
mov
jmp
dec
shlb
sbb
sub
lods
mov
pop
or
fwait
in
push
add
mov
adc
fldt
int3
xchg
rolb
and
cmp
fwait
fwait
fwait
cmp
je
and
es
sub
lcall
jmp
cmp
jl
pop
jle
pusha
adc
test
cmp
jp
jb
jbe
mov
or
popa
test
fwait
and
or
je,pn
test
add
je
outsb
and
add
negb
mov
sub
stos
pop
sar
adc
in
ja
subb
push
push
push
loop
sub
and
xor
addb
jno
mov
inc
jp
push
repz
je
mov
cmp
xchg
mov
push
mov
or
jae
add
mov
es
mov
lahf
mov
jmp
push
pop
add
push
mov
xchg
adc
roll
call
or
xor
xchg
sub
fstl
imul
push
mov
lahf
rol
sbb
fimull
cmp
test
dec
scas
jb
xor
add
sub
xchg
adc
pop
pop
push
xor
inc
mov
ds
dec
inc
insl
xor
inc
and
lds
pushl
sub
push
faddl
pop
add
pop
jb
sbbl
push
lcall
cmp
mov
mov
xor
mov
or
xchg
mov
inc
call
xor
sbb
inc
mov
stos
dec
daa
mov
add
lret
addr16
fadds
push
push
jmp
and
jae
mov
out
push
push
ret
insl
pop
int
cmp
je
loope
mov
in
or
icebp
test
pop
rcrb
add
mov
xchg
adc
or
or
sti
pop
daa
dec
add
and
push
and
stc
pop
add
xor
dec
dec
fs
in
movb
or
xchg
lods
aas
movsb
push
xchg
mov
inc
jbe
lret
mov
lidtl
es
xor
push
sub
sbb
test
pop
jg
scas
push
or
mov
cmp
lock
cld
xchg
mov
daa
rcrl
add
inc
xchg
cmpsb
pop
add
xchg
pop
and
or
mov
dec
std
lcall
cmp
cmp
es
jne
movsl
popf
sub
fsts
xchg
pusha
jb
cs
push
andl
js
test
add
rol
adc
mov
dec
lea
sbb
jmp
cmpsb
mov
xchg
insl
mov
mov
sub
inc
push
inc
sub
adc
pop
jo
sbb
call
add
push
xor
xchg
jne
lahf
jne
and
addl
sbb
push
xchg
xchg
mov
and
in
out
popa
push
jle
das
or
jne
push
push
leave
mov
cmp
or
mov
xchg
cmp
dec
push
test
rol
and
test
push
cmp
dec
icebp
call
adc
pop
dec
add
aas
push
cmpsb
imul
daa
add
push
sbb
push
clc
mov
rclb
add
push
loopne
jne
imul
pop
xchg
add
stos
out
and
add
movb
adc
push
push
fdivl
mov
hlt
cmpb
cmp
jnp
das
sub
test
and
sbb
add
bound
cmpl
dec
adc
sub
test
sub
subl
mov
shlb
fcomps
inc
mov
xor
cmp
je
out
cli
lock
jecxz
lds
lds
xor
dec
xchg
dec
loope
test
mov
sbb
inc
mov
inc
out
pop
mov
adc
dec
adc
push
add
jmp
fsubr
bnd
popf
jo
push
push
sub
movsb
push
and
xacquire
in
outsb
jmp
movsb
or
xor
jbe
jp
add
mov
sbb
sarb
inc
pushl
inc
mov
xchg
ss
inc
scas
and
add
mul
pop
jne
les
aam
adc
jmp
cmp
mov
mov
inc
or
xchg
sbb
call
add
sbb
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
mov
cmp
and
mov
jmp
add
pop
inc
bound
push
and
nop
mov
add
ret
push
mov
dec
lahf
mov
ret
jo
shrl
ret
or
cmpsl
push
sbb
cmp
jle
jp
sbb
mov
mov
sub
adc
shl
cmp
sbbl
insl
adc
add
int
fadds
sbb
dec
mov
jne
mov
cmp
test
add
mov
orl
fimuls
iret
in
mov
mov
in
mov
mov
insb
movsl
mov
add
lock
lret
push
push
push
sbb
in
mov
mov
insl
das
mov
pusha
cmpb
movsb
sub
out
xchg
cmpsb
mov
cmp
jbe
fiaddl
mov
cmp
mov
xor
push
dec
lret
mov
push
sub
sub
xor
lret
in
xor
cmp
outsb
shrl
pushf
fwait
inc
pop
sub
js
add
inc
icebp
jmp
call
test
sub
enter
xor
and
sub
jl
push
sbb
cmp
ficompl
or
mov
shll
pop
mov
or
jge
xchg
movsb
push
push
cmp
aas
popa
sbb
popf
xor
mov
inc
sbb
cwtl
dec
test
inc
mov
cwtl
mov
cld
sbb
or
or
or
jnp
or
add
ret
mov
and
iret
sbb
js
movsb
test
mov
fadds
xor
add
fsts
ret
out
cmp
or
out
jne
push
aam
xor
gs
inc
ds
mov
adc
cmpb
and
add
lods
xchg
mov
fistpl
push
scas
xchg
adc
xor
dec
sub
psrlw
nop
jbe
mov
sub
mov
hlt
mov
xor
mov
xchg
mov
pop
inc
shll
pop
inc
xor
mov
out
bound
fcomps
inc
insl
cmp
push
mov
xor
dec
call
jmp
lea
pop
add
jne
inc
data16
clc
sbbb
jl
mov
mov
mov
sbb
jns
frstor
push
orb
push
sarb
push
push
testl
cmp
jo
xor
jbe
daa
adc
add
sbb
idiv
adcl
cli
frstor
in
xor
shlb
jae
cmp
or
bound
push
rcrl
or
push
pop
jl
pop
movsb
or
and
mov
cmp
mov
push
dec
mov
mov
sbb
or
inc
rol
js
sarl
inc
adc
fimull
add
sbb
nop
lock
sub
out
fsubrl
leave
pop
xorl
xchg
psraw
or
test
lock
cltd
inc
jmp
pop
popa
adc
rorl
dec
in
or
scas
dec
loopne
mov
notb
aaa
sub
jne
loopne
push
and
sub
push
sbb
jl
pop
sbb
ljmp
jg
out
pop
dec
je
and
pusha
push
pop
mov
mov
daa
inc
adcb
add
sahf
imul
xor
push
adc
mov
push
lcall
add
sub
and
jno
or
scas
mov
xchg
add
dec
sbb
test
scas
adcb
daa
xchg
cmpsb
xchg
push
sbb
lea
nop
sbb
add
test
jno
sbb
mov
and
addb
and
sbb
lds
in
or
or
ss
bound
push
aas
ss
les
loopne
xchg
loopne
shrb
subb
loope
push
or
loope
rorb
stos
push
in
dec
ret
stos
or
sub
aas
or
pusha
add
mov
inc
or
int3
push
jle
andl
les
dec
mov
jb
mov
add
dec
add
or
add
xchg
add
call
imul
xchg
loope
add
sbb
jbe
dec
inc
pop
dec
push
push
add
cwtl
out
fcmovnb
rorb
pusha
ljmp
and
cmpsb
imul
push
cmpsb
mov
inc
cmpsl
lods
mov
or
dec
add
or
enter
sub
or
mov
jns
pop
inc
negl
fbld
sbb
mov
adc
or
jbe
xchg
lock
pop
pushf
push
mov
and
clc
mov
push
xor
pcmpgtw
ret
outsb
add
cmp
dec
and
mov
push
add
sub
std
add
and
xchg
incb
mov
and
dec
and
jae
inc
es
inc
bound
int3
pop
push
adc
jo
jo
pop
adc
inc
inc
ss
sbb
and
loopne
add
jmp
xor
enter
or
mov
das
cmp
jl
sub
leave
sub
sbb
pop
mov
push
push
push
insb
sahf
jmp
gs
xor
and
mov
negl
xor
push
mov
lods
xchg
cmp
add
das
repz
and
pop
inc
or
cld
mov
sub
and
lods
insl
sub
inc
insl
sub
sub
adc
lock
adc
mov
add
addb
test
lods
and
add
call
mov
push
and
adc
inc
lock
add
pusha
pop
testb
les
int
jle
testb
and
jne
orl
sbb
mov
aad
ror
dec
fdivrl
xchg
xor
nop
rorl
cmp
cmpb
xorl
sub
scas
and
pushl
and
and
imul
mov
pop
add
sub
adc
nop
push
testb
mov
std
cmp
push
cmp
and
xlat
xor
dec
leave
and
push
inc
push
xor
push
push
test
and
mov
mov
ret
pop
les
dec
jbe
loop
dec
mov
push
cs
sbb
mov
dec
leave
je
cmp
xor
arpl
es
and
mov
loopne
roll
push
ret
rorb
shlb
in
jg
cmp
and
and
add
and
push
ss
jbe
sbbl
xlat
pop
xor
stc
push
sbb
xor
scas
pop
cs
or
xchg
filds
test
jo
frstor
mov
and
aas
or
xchg
adc
and
in
add
sbb
cmp
dec
jmp
faddp
and
jne
or
push
nop
dec
out
data16
push
pcmpgtd
sub
sbb
jnp
inc
std
mov
sbb
jae
push
in
push
jbe
icebp
inc
add
mov
push
loopne
das
dec
fldl2t
popf
sub
mov
sahf
mov
pop
mov
xor
lea
rcrb
jae
push
ret
xor
mov
iret
jmp
les
aam
add
xor
adc
enter
cmp
or
dec
mov
dec
and
or
push
dec
dec
cld
in
insb
cmp
add
rorl
add
mov
mov
sbb
lods
and
sbb
popf
clc
inc
cwtl
or
xchg
orl
shlb
mov
int3
sahf
mov
sbb
rcll
hlt
or
add
lods
or
push
in
or
push
cs
fwait
rorb
and
push
dec
jl
jne
xor
dec
push
lcall
and
adc
and
add
cs
rcll
add
mov
add
add
add
sarl
mov
cmp
jbe
sub
add
add
movsb
fnstenv
lcall
add
fstl
ljmp
or
sbb
repnz
adc
loopne
pop
sbb
pop
mov
ret
cs
and
adc
lret
cld
outsl
xchg
dec
add
cmp
push
ja
mov
cmp
jne
pushf
push
inc
add
shll
jg
cmpsb
xor
pop
clc
repnz
cmc
xchg
mov
cmpsb
hlt
sub
clc
nop
push
fimull
scas
mov
push
aad
insl
add
adc
addl
sub
ret
es
roll
sbb
aaa
std
int3
sbb
icebp
or
mov
shlb
cltd
add
sahf
xor
jecxz
stos
adc
sub
push
adc
xchg
jmp
mov
or
add
jne,pt
sub
flds
mov
ja
loope
mov
adc
sbb
adc
pop
sub
lock
je
push
xchg
mov
cmp
adc
mov
inc
mov
add
in
mov
fdivl
xchg
pop
mov
adc
or
cmp
cmc
je
cmp
fdivp
dec
repz
inc
hlt
and
fsubs
dec
and
push
mov
out
lea
cmpxchg
cmp
and
xchg
mov
fdivrl
inc
xlat
pop
inc
aaa
inc
or
dec
and
loopne
in
test
stc
ja
mov
jne
push
cmp
jb
push
sbb
mov
icebp
jns
mov
int3
aam
push
inc
ficompl
push
sub
push
in
ja
mov
or
jmp
mov
mov
leave
mov
jp
adc
push
mov
xor
mov
in
lods
push
ret
lea
das
xchg
sub
ljmp
sub
cmovne
sti
add
adc
sbb
arpl
and
and
cld
xor
fdivrl
mov
dec
stc
dec
ljmp
push
pop
mov
add
push
push
push
aam
aam
rolb
inc
push
mov
sahf
push
shrb
mov
dec
cmp
sbb
sub
sbb
lods
mov
add
fiaddl
es
add
cmpsl
arpl
ret
mov
loope
adc
push
add
stos
pusha
sti
fidivrs
sbb
pop
cmp
jne
rcl
inc
dec
shll
sub
in
fldcw
icebp
sbb
cld
jle
leave
je
mov
cmp
jb
int3
test
dec
lret
xor
adc
test
popa
test
jle
xchg
test
fldt
test
dec
loope
jo
jmp
orb
cmp
test
inc
dec
xchg
sbb
push
mov
xor
or
xor
mov
jae
sbb
sub
jmp
sub
inc
das
addb
fadds
mov
push
inc
loop
mov
ds
and
rclb
mov
jo
test
addb
outsb
addl
mov
fcoms
and
andb
cmp
or
jge
ds
jmp
loop
ror
xchg
or
mov
das
pop
mov
jg
cmp
cmp
es
into
or
mov
icebp
jle
add
push
sub
in
or
pop
xchg
roll
pop
push
sub
pusha
into
call
ds
and
add
push
test
jne
shl
sbb
add
sbbb
pop
add
mov
lret
and
or
xchg
inc
xor
adc
jge
and
pop
or
and
cmp
and
es
mov
clc
adc
inc
rcll
ret
into
jbe
dec
iret
or
adc
rolb
cmp
pop
inc
mov
or
adc
add
xorl
cmp
jmp
es
sahf
jle
scas
jmp
aas
les
mov
sub
add
xor
adc
icebp
xchg
push
jecxz
clc
xor
push
clc
mov
mov
in
imull
push
xchg
mov
push
jle
add
cld
das
leave
rol
sub
cmpsb
sub
lock
push
push
push
lock
bound
pop
cmp
pop
pop
sub
or
ss
ficomps
add
aam
pop
pop
inc
add
repz
add
in
mov
xor
adc
jge
rcr
fcoml
pop
cmp
dec
cmp
jp
inc
movsb
add
and
sbb
or
mov
mov
xor
inc
push
sbb
sbb
or
fidivrs
shrl
mov
call
dec
outsb
ret
or
cltd
pusha
gs
inc
icebp
xchg
add
or
xlat
gs
int
sarl
movsb
idivl
test
int3
fnstsw
push
dec
mov
inc
xor
adc
adc
notl
test
es
fiaddl
and
and
inc
fistl
fiadds
ljmp
dec
xchg
aad
push
add
adc
int
cli
push
subl
cmpsb
jmp
pop
add
addl
loopne
repnz
cld
mov
or
cld
enter
mov
inc
mov
and
in
adc
imul
xor
shrb
inc
and
add
mov
cld
gs
pop
add
je
dec
inc
inc
pop
mov
orl
aam
inc
inc
loop
vcmpsd
add
popa
loopne
xor
inc
dec
ror
lea
add
cmc
xchg
test
pop
jo
js
pop
jo
xchg
xchg
adc
stos
les
dec
ret
adc
ds
add
ja
rcrb
or
jmp
inc
mov
push
adc
adc
mov
xchg
adc
aam
jnp
xchg
int
mov
int3
rorb
add
inc
add
not
scas
xor
cmp
add
xor
dec
push
inc
and
cmp
push
xor
mov
jmp
nop
js,pn
ljmp
cmp
jne
mov
cmp
call
xor
xlat
xor
repz
icebp
sub
jg
xor
adc
aas
pop
cmp
and
add
inc
clc
mov
and
sbb
lock
xchg
and
mov
adc
adc
clc
mov
or
out
jecxz
nop
daa
adc
push
lods
sbb
mov
jno
dec
add
sbb
add
jo
mov
adcl
and
sub
vmread
andb
outsb
jbe
dec
mov
sbb
mov
pop
cmp
je
mov
fmull
adc
or
lcall
neg
pop
or
outsl
or
or
fcmovnb
outsl
inc
cmp
lods
jl
jmp
inc
int3
fcoms
shll
lock
hlt
sub
idiv
mov
gs
dec
into
ss
je
or
out
stos
mov
js
cmp
lea
orl
movsl
jl
sub
dec
cli
dec
out
mov
and
cmp
add
dec
lea
inc
mov
dec
adc
jmp
cmpl
inc
test
or
in
inc
inc
loope
cltd
lock
data16
or
add
mov
mov
mov
jmp
mov
outsb
repz
sbb
adc
cmpl
adc
jl
and
jge
pop
call
and
aad
sti
out
clc
or
sub
addr16
sbb
loope
adc
pusha
dec
inc
pop
push
es
bound
call
add
loope
and
sbb
jge
in
sub
push
dec
push
aas
imul
fs
sub
mov
push
lahf
out
loopne
push
jae
mov
xor
pop
xchg
lock
in
pop
push
pushf
pop
stos
cmp
and
or
adc
in
or
push
cwtl
fcomps
in
mov
les
pop
inc
add
xor
mov
popf
adc
mov
repnz
mov
sbb
shr
add
test
scas
and
inc
jne
jge
clc
out
imul
adc
and
cmpsb
sbb
rolb
shr
cmpl
push
xchg
xchg
sub
xchg
shlb
pop
pop
add
popa
or
sbb
adc
or
jle
jo
pop
jae
data16
push
je
jle
xchg
sub
add
aam
scas
mov
sbb
in
and
cli
jae
lret
dec
add
in
push
xchg
or
clc
dec
shlb
lret
inc
dec
enter
call
or
jns
pop
or
sub
push
les
fnstcw
les
inc
orb
dec
ret
fidivl
lods
inc
popf
mov
xchg
add
mov
add
xchg
mov
xor
lock
add
je
cmpb
adc
push
shll
pop
add
xchg
push
adc
sahf
sbb
xor
inc
dec
or
sti
repnz
aad
adc
adc
dec
fldenv
inc
push
add
adc
sbb
mov
lea
jns
pop
or
add
loope
xchg
pop
sub
out
test
or
cmp
das
mov
inc
adc
lahf
fwait
inc
mov
sarl
or
jnp
cmp
fsubs
or
xor
jecxz
insb
fisubrl
add
mov
fwait
movsl
loopne
lods
dec
inc
jns
dec
outsl
testb
jne
mov
push
test
cmp
cwtl
loop
add
jne
lock
mov
dec
or
out
aas
pop
push
xchg
sbb
xchg
or
leave
and
jns
lods
add
or
push
subl
or
add
add
sbb
lock
sub
pop
xchg
sub
dec
fistl
cld
loopne
ss
loopne
jne
mov
cmp
mov
mov
repz
add
or
xchg
add
lock
add
xchg
sub
clc
pushl
nop
cltd
icebp
mov
lea
mov
cmp
xchg
inc
sub
jle
out
data16
or
iret
iret
in
xor
inc
movl
cmp
push
mov
rolb
adc
and
loopne,pt
hlt
sub
sub
or
pop
test
popf
lds
add
fs
sbbb
in
dec
adc
and
inc
adc
xchg
test
rclb
push
push
loopne
inc
es
jecxz
mov
mov
push
pop
pop
adc
sub
je
mov
xor
pop
shl
inc
cmpl
jne
cmp
cmp
lahf
mov
jne
lds
xorb
rcll
cmp
inc
jp
pop
jns
and
jne
lea
movb
lret
pop
aas
popf
mov
shrb
roll
mov
mov
sub
das
push
jmp
xor
rcl
pop
movsb
push
push
pop
pop
sub
mov
cmovae
imul
fnstsw
jo
pop
stos
push
out
hlt
adc
fisubs
es
jmp
push
sbb
inc
or
jecxz
mov
jmp
and
or
jae
pop
cmp
mov
pop
add
inc
adc
iret
or
leave
jns
clc
adc
shlb
or
cmp
movl
rcll
daa
cmp
insb
pop
sub
mov
mov
cmp
or
outsb
xor
nop
jl
call
cmpb
mov
sub
jl
jg
decl
imul
push
jecxz
jmp
enter
mov
dec
jl
ljmp
notb
inc
decl
xchg
adc
add
sub
and
je
test
dec
daa
jae
call
lods
mov
push
push
frstor
out
test
je
xor
fadds
pop
add
mov
mov
xchg
inc
cmp
add
push
and
dec
push
xor
jb
addr16
inc
dec
sub
les
sub
pushf
les
fucomp
les
dec
es
shlb
fucom
jle
jnp
mov
or
jge
adc
jb
push
loop
sub
cld
add
add
adc
mov
add
add
mov
popa
sbb
xor
mov
addr16
es
jecxz
loop
push
mov
mov
sub
cmp
aaa
push
pop
iret
jb
mov
and
xor
rolb
addr16
jle
mov
and
add
dec
add
cmp
adc
orb
jg
mov
daa
and
jo
mov
test
test
push
jecxz
jmp
leave
cmp
push
sbb
testl
jmp
xchg
add
mov
xchg
push
ljmp
pop
add
adc
cs
cmpsb
loopne
mov
dec
push
lock
mov
pop
mov
test
add
sub
test
mov
mov
fiaddl
rcl
jmp
xor
sbb
xor
sub
sahf
and
lods
jp
sahf
mov
adc
out
in
jl
cmp
test
jmp
call
sub
pop
cmp
pop
roll
insl
popa
fldcw
or
mov
bound
mov
add
inc
in
clc
add
clc
jno
rcrl
lods
push
or
sbb
add
icebp
out
add
push
or
repz
sbb
dec
dec
and
repz
sbbl
sti
push
or
inc
and
adc
imul
mov
lock
in
or
jmp
push
sbb
or
ret
mov
mov
push
dec
fcompl
push
or
scas
call
push
xchg
and
xor
adc
test
lock
lods
fnsave
cli
xchg
pusha
mov
push
and
scas
rolb
xorl
sub
insb
arpl
fstpl
jle
push
int3
in
push
test
adc
mov
jmp
mov
aam
xlat
int3
jne
popf
xor
push
mov
data16
roll
faddp
cmpsl
je
aad
movb
mov
jmp
sbb
and
sbb
push
dec
add
scas
xchg
mov
das
mov
movl
jmp
loop
lds
add
movsl
or
mov
inc
mov
imul
add
in
lods
add
xor
adc
jbe
and
ja
mul
sbbb
push
lea
push
mov
fdivl
mov
shlb
test
push
xor
push
inc
cmpsb
and
xchg
lcall
and
rcll
xchg
mov
mov
mov
test
mov
sbb
cld
cltd
lea
inc
dec
int3
cmp
jae
inc
xchg
imulb
jo
loopne
adc
imul
inc
sub
xor
sti
fnstcw
cmc
xchg
shl
movsl
mov
and
add
inc
scas
aad
and
cmp
add
icebp
push
mov
std
mov
mov
xor
xor
pop
mov
or
addl
sti
in
fucompp
pop
gs
sbb
nop
jae
xor
ret
push
push
add
xchg
rcll
idiv
jle
sub
ret
add
mov
popa
or
shll
rcl
fcmovu
sub
cld
jb,pn
out
cwtl
es
adc
cld
pop
insl
enter
outsl
push
sub
or
add
pop
stos
pop
inc
nop
add
add
xor
sbb
add
test
sbb
lds
inc
test
xchg
dec
cltd
je
mov
add
insb
cmpb
loopne
push
push
dec
inc
cmpl
sbb
repz
adc
xorl
jne
rorl
test
or
out
sbb
cmpsb
pop
xchg
lea
jo
add
cld
cwtl
and
pushf
sbb
jp
push
std
ds
pop
push
jmp
jmp
add
dec
or
rolb
or
test
jo
cmpsb
jle
jno,pn
jmp
push
repnz
mov
dec
hlt
xor
loope
adc
aaa
xor
push
and
stos
push
push
mov
mov
push
sbb
mov
idivb
loop
mov
ljmp
push
sub
xchg
xor
cmp
loop
push
and
inc
pop
jecxz
sti
adc
xor
push
add
nop
aaa
pop
rolb
or
mov
cmp
or
in
xor
bound
test
push
rcrb
sarl
nop
cmp
push
cmp
jae
inc
fdivrl
or
jmp
push
mov
sti
sub
dec
xchg
nop
sbb
ret
pusha
notl
movb
push
pusha
inc
pop
mov
dec
fdiv
push
mov
mov
ja
push
add
xrelease
dec
ror
jmp
enter
and
bound
push
test
push
push
jne
nop
sub
rolb
in
lret
adc
or
adc
push
mov
mov
add
lds
push
and
push
add
clc
out
pop
pop
stos
pop
pop
out
cmp
inc
pop
add
sub
pop
and
or
orl
dec
cmp
add
jno
insl
jae
mov
add
or
and
add
cmp
fidivs
inc
mov
add
mov
mov
bound
jae
bound
add
cmpb
fisubrl
or
xor
sub
incl
rcrb
out
add
jb
inc
dec
push
adc
ds
push
inc
loopne
xchg
mov
mov
add
sub
xlat
cmp
ds
je
jb
jbe
out
and
mov
adc
mov
jmp
mov
adc
shlb
lea
lods
leave
mov
cmpb
out
ret
adc
test
push
xor
or
xchg
test
push
inc
and
adc
sti
vcvttss2si
inc
pop
repz
cld
sbbl
cmpsl
or
out
pop
pop
push
fsubl
int
adc
imul
mov
and
cmpb
jno
call
dec
iret
pushl
ja
inc
jbe
push
jnp
std
rcl
dec
mov
dec
jge,pn
xchg
sbb
or
js
mov
adc
and
cs
loop
mov
cmp
incb
jmp
sub
addb
lcall
mov
dec
andb
mov
ffree
nop
inc
and
dec
pop
pushf
mov
cmp
lock
cmp
add
xchg
fistps
jl
jno
lea
or
cmp
cs
push
cmpsl
test
mov
sbb
adc
iret
cli
push
test
xchg
sbbb
inc
push
dec
mov
pop
and
lea
std
popa
orb
push
sub
call
fiaddl
dec
sub
movsl
add
inc
imulb
or
pop
in
fimull
mov
xorb
push
cmp
pop
and
cwtl
and
dec
sub
insl
mov
jle
push
adc
jl
inc
sub
adc
mov
lock
mov
gs
fisubs
cwtl
sbb
pop
lcall
sbbl
ret
ret
cmp
inc
cmpl
scas
mov
mov
imul
sahf
push
mov
dec
xor
adc
stc
pop
and
and
pushf
inc
nop
mov
sbb
inc
lea
lea
mov
push
pusha
cwtl
xchg
cmp
add
fsubp
and
sbb
jno
and
xchg
push
repnz
mov
sub
or
sub
es
jg
fldl
cmp
jb
or
sar
cmpsl
ficompl
sbb
outsl
nop
cmc
pop
add
or
and
ja
leave
fstps
mov
dec
or
cmp
sbb
or
push
adc
into
fstpl
gs
in
mov
sub
jo
fstpl
fsubrs
cltd
jg
fwait
mov
lea
stos
mov
cmpsb
sub
mov
push
jmp
ret
or
lock
les
add
jne
pusha
pop
jo
sbb
adc
push
cmp
add
mov
loopne
xchg
pop
cli
and
or
and
push
add
jecxz
jle
roll
jmp
jne
shll
push
lret
repnz
lea
stos
push
rcrb
jl
push
sarb
pop
leave
pop
dec
lods
dec
mov
push
or
lods
inc
inc
lock
and
enter
jno
lret
and
push
cmc
sub
lret
ret
nop
fsubr
adc
test
fildl
xchg
scas
jg
or
shrl
xchg
xorb
loop
jbe
orb
adc
xor
or
jns
stos
rorb
mov
xor
or
imul
jge
jmp
lret
movsl
or
rcrb
adc
xor
mov
rorb
add
pop
loopne
or
ret
iret
xchg
int
cmp
mov
xchg
mov
mov
pop
mov
dec
mov
cwtl
inc
cmp
cmpsl
jl
lea
fsubrl
scas
fnop
mov
js
sub
adc
sbb
pop
cwtl
mov
aam
xor
mov
jne
iret
xchg
or
and
incb
rcr
or
xchg
mov
jnp
enter
adc
xor
mov
add
dec
add
add
cmp
lods
subl
xchg
push
cmp
rclb
xchg
cmc
nopl
pop
push
mov
lea
and
cmp
jl
pop
push
sbb
and
adc
ja
or
shlb
push
sbb
xor
xor
bound
adc
and
push
mov
repnz
mov
or
add
xor
cltd
add
sbb
inc
pop
jnp
sbb
rclb
and
roll
sbb
mov
aaa
xor
mov
ret
push
das
xchg
or
mov
adc
push
jl
jmp
test
das
and
cmp
mov
pop
popf
and
pop
nop
pop
sub
rcr
jp
cmp
inc
jae
push
incb
cmp
sarb
leave
adc
movntps
das
rorb
cli
adc
xor
push
adc
inc
xor
mov
lock
nop
or
dec
mov
ret
dec
add
push
push
in
mov
shl
and
add
mov
enter
mov
add
xadd
add
lret
mov
cmp
sbb
pop
add
movsl
movsb
mov
add
jne
lds
jp
jge
xorb
iret
push
push
add
clc
stos
lea
add
ret
mov
popa
clc
bound
pop
and
xor
cmpsl
leave
adc
or
xchg
ret
push
jo
popa
xchg
dec
jns
ljmp
inc
les
xchg
add
adc
or
adc
sar
fiaddl
aaa
lock
or
cmp
cmpsb
call
rolb
mov
inc
mov
or
sarl
mov
jl
jg
lods
inc
sbb
add
ret
stos
push
nop
push
xor
decb
loope
sub
ja
inc
lock
shll
enter
push
je
fisubl
xchg
mov
icebp
sub
and
xor
sbb
ret
inc
int3
int
mov
cmp
pusha
ret
xchg
out
call
pop
or
add
ja
movaps
sbb
clc
sbb
xchg
push
movsb
sbb
push
jae
inc
insb
sub
pop
mov
fwait
pop
and
adc
sbb
cmp
adcl
xchg
jo
mov
sbb
popa
test
dec
mov
jg
add
add
push
add
loopne
inc
out
or
or
xchg
xchg
mov
push
mov
dec
xor
adc
xor
int
mov
sub
push
mov
negl
jo
push
lds
adc
push
insb
enter
pop
push
out
aaa
fcmovnu
push
jbe
cmc
jmp
push
js
jo
mov
jbe
mov
jmp
das
sbb
xor
mov
inc
dec
mov
or
icebp
push
jmp
cwtl
or
adc
inc
fs
dec
mov
cmp
mov
mov
and
in
pop
push
ret
es
push
sbb
nop
imul
adc
jne
xchg
inc
push
movsb
sahf
jmp
sbb
rcrb
lretw
mov
jge
pushf
lcall
testb
push
xor
orl
fimuls
enter
push
mov
mov
idivb
sbb
lret
jo
adc
ret
das
or
orb
sbb
pop
jmp
rorb
imul
push
or
sarl
daa
in
xor
add
add
je
adc
outsb
mov
cmpsb
adc
ss
in
stos
movsb
add
and
push
xor
sub
adc
loopne
and
mov
mov
pop
stos
jo
pop
or
xchg
inc
sahf
or
or
std
mov
fcomp
sub
sub
scas
test
mov
dec
cmp
aaa
push
mov
inc
or
or
hlt
nop
inc
xor
je
nop
cmp
cli
aam
cmpsb
sbbb
push
push
rcrb
mov
xor
xchg
fsubl
pop
inc
mov
pop
hlt
push
cmp
xor
jl
push
mov
sbb
sbb
dec
mov
mov
dec
push
add
xor
xor
xchg
fwait
mov
adc
pop
scas
rcll
into
add
or
push
push
out
lods
loope
push
cld
push
mov
dec
xchg
lods
or
push
das
scas
jle
shrl
mov
pop
test
sub
fsubp
mov
inc
add
mov
push
out
cmp
pop
adc
shr
nop
repnz
push
dec
in
inc
mov
push
push
lock
fwait
fs
loopne
push
xchg
pop
dec
adc
jno
mov
int
mov
mov
mov
add
test
adc
in
xchg
jmp
sub
or
clc
aaa
inc
adc
sbb
rcl
inc
cmpsl
mov
insl
nop
and
and
fwait
jbe
sub
sbb
push
xchg
lahf
fcmovb
outsl
xchg
xor
out
cmp
jle
icebp
sbb
mov
add
sub
out
inc
cmp
in
mov
sbbb
sub
inc
mov
jne
push
add
in
cmp
insl
xor
push
sbb
and
adc
inc
jl
pop
and
or
pop
add
mov
mov
push
arpl
iret
test
je
sub
push
or
fstps
mov
stc
push
or
jo
inc
inc
sub
out
sti
inc
add
loop
or
test
testb
jne
addl
popa
mov
rclb
jmp
bound
test
notb
adc
mov
sbb
jge
or
xorl
cmpl
loope
lret
jne
xor
mov
movl
xchg
mov
adc
pop
xchg
adc
sub
hlt
add
cmp
je
push
in
sub
mov
testb
je
cmp
mov
push
add
push
add
push
cmp
fcmovb
jmp
sub
in
mov
jne
push
adc
add
cltd
mov
mov
jne
pop
sub
xor
in
adc
dec
popa
sbb
lret
cmc
or
inc
adc
lock
loop
dec
inc
dec
sbb
fdivrl
push
pop
mov
push
add
add
push
sub
shlb
sbb
mov
dec
icebp
jmp
add
xchg
dec
mov
outsb
jg
push
mov
jne
jg
add
add
xor
mov
sbb
notb
ds
mov
cmp
insl
push
add
xchg
jo
push
add
movsb
and
push
pop
jnp
inc
sbb
or
test
clc
sub
mov
data16
sbb
or
inc
mov
push
mov
cmpb
or
jmp
or
cld
mov
mov
add
push
mov
mov
jp
and
pop
cmpb
pop
adc
xlat
jg
shll
mov
sbb
add
cmpsb
int3
lock
mov
lea
testb
or
es
jb
sbb
or
inc
inc
outsb
lock
fiaddl
pop
cmpb
leave
jmp
clc
pop
adc
lea
push
sbb
jne
sub
ret
adc
bswap
lret
into
jnp
pop
cmp
pop
add
inc
mov
jmp
jl
test
add
sbb
jmp
hlt
arpl
pop
xor
nop
push
mov
cmp
push
pop
daa
mov
std
cwtl
nop
inc
push
add
push
or
pop
adc
iret
push
fisubrl
lea
mov
or
xor
lea
xor
jne
cmp
push
push
sub
add
adc
ss
pop
xor
push
cmp
push
and
arpl
imul
xlat
xor
jae
sub
xor
adc
pusha
popa
test
call
inc
and
push
add
mov
cmpsb
sbb
mov
jl
and
xchg
adc
mov
jle
xor
cmp
ja
ljmp
inc
sub
xchg
movsl
push
or
cmp
adc
cli
pushl
loope
mov
mov
xlat
push
loopne
fildl
push
mov
rcrl
add
shl
xlat
out
mov
jl
cs
adc
je
in
cmp
pop
or
add
mov
cmc
loopne
outsb
dec
rorl
dec
dec
insb
cltd
jne
std
das
popa
test
add
ds
dec
and
or
movsb
and
insl
clc
jg
add
add
adc
ret
xor
add
std
add
mov
push
lcall
js
int
cmp
roll
jb
mov
adc
cld
dec
adc
ss
insb
and
mov
and
popa
push
lea
loope
popa
push
scas
cmp
push
lods
mov
xorl
cld
sub
xchg
or
push
mov
mov
loope
push
test
sarb
add
inc
ret
add
or
or
adc
nop
test
dec
adc
jo
xorl
jmp
mov
adc
es
adc
cmp
insl
loopne
ljmp
or
cwtl
adc
pop
adc
push
inc
mov
loopne
mov
add
xchg
loopne
mov
lret
test
das
mov
xchg
and
ret
adc
fucomi
adc
and
popa
sarl
int3
and
adc
cmp
pop
inc
scas
pop
inc
sahf
push
dec
ljmp
jmp
shlb
push
ss
xchg
loop
xchg
sub
je
xor
call
in
or
cmp
adc
xchg
and
cwtl
fcmovbe
sbb
inc
pop
mov
test
mov
jle
mov
pop
dec
push
and
adc
xor
xchg
and
or
add
imul
push
push
and
in
mov
pop
clc
jecxz
test
test
leave
mov
pop
nop
test
or
mov
adc
adc
cmp
insb
loope
adc
jecxz
sub
rolb
mov
sti
fisubrs
fisttps
xchg
inc
xor
add
ja
or
fcmovnu
or
push
ds
jae
pop
adc
or
adc
dec
adc
pop
movsl
xor
scas
dec
jo
mov
sub
dec
es
xor
sti
adc
cwtl
repz
fdivr
push
into
mov
push
and
adc
xchg
lea
inc
sub
inc
movsb
in
lea
pop
test
jecxz
pop
ret
icebp
or
sar
sbb
dec
jne
push
adc
or
push
call
ja
movsb
xor
es
jnp
sub
adc
lds
push
mov
inc
push
out
lds
icebp
jb
push
add
movsl
sbb
inc
mov
scas
pop
push
push
inc
sbb
mov
xor
adc
icebp
pop
xor
test
add
scas
jbe
add
add
mov
dec
sti
and
fwait
push
loope
jp
mov
pop
or
dec
movsb
jbe
fnstcw
ret
or
mov
mov
fadds
and
cmp
in
pop
clc
inc
mov
lahf
lods
daa
shll
sub
rorb
add
or
push
mov
inc
xchg
inc
je
mov
les
push
jge
xchg
shrb
lcall
adc
cmp
push
fmuls
push
mov
add
and
sub
mov
jne
repnz
and
in
push
bound
add
sub
xchg
push
adc
adc
fs
add
dec
and
inc
outsl
sbb
jg
jne
je
jmp
or
push
dec
and
dec
mov
movsbl
add
test
sbb
loope
add
cmp
dec
xchg
jmp
fcoms
jno
or
or
cmp
nop
jecxz
pop
icebp
jnp
add
inc
cmp
mov
adc
sub
or
and
pushf
es
push
mov
mov
inc
pop
pop
and
add
sbb
mov
pop
loope
mov
pop
and
push
inc
add
clc
lock
adc
cmpsl
xchg
or
adc
add
mov
inc
test
or
sbb
jno
and
rorb
nop
xor
inc
mov
aas
enter
cld
ss
jb
stos
push
dec
mov
aam
adc
pushf
push
xchg
jl
adc
and
push
push
jecxz
ret
or
adc
aam
cltd
cltd
mov
fmull
cltd
adc
adc
push
loop
or
cmp
test
xchg
cmp
adc
mov
sahf
mov
imul
mov
push
dec
cmp
sarb
xor
cmpsl
mov
orl
mov
jmp
adc
out
adcl
rorl
jbe
sub
and
pop
dec
and
jno
mov
jp
adc
je
movl
cmp
mov
adc
inc
mov
lock
push
fsubrl
jle
rcrb
js
and
ret
and
call
push
mov
mov
mov
cmp
mov
add
loopne
add
cmpsl
lods
mov
scas
out
push
mov
jbe
test
fisttps
jne
fnstcw
mov
and
clc
jg
fs
or
fstl
jle
movapd
aaa
out
push
enter
shlb
jle
xor
stos
dec
mov
lret
je
mov
fildll
test
inc
jge
repz
or
jg
testb
rcl
js
ret
adc
jbe
cs
jnp
mov
push
cld
cli
jnp
pop
aam
ret
or
add
adc
add
out
pop
add
jnp
roll
add
mov
addsd
int
add
sbb
jnp
push
dec
sbb
subl
adc
and
dec
sbb
sbb
imul
movsb
stos
daa
pop
cmp
add
cmpsb
add
out
test
cmp
xchg
js
pop
incl
dec
adc
pop
call
sub
scas
mov
cltd
ret
jge
mov
jge
dec
and
pop
popa
push
movsb
mov
fnsave
out
imul
push
hlt
xchg
lock
ret
xchg
ret
sarl
sub
or
cli
add
xor
fnstenv
dec
loop
and
add
sbb
jmp
add
or
dec
cltd
mov
rep
mov
dec
ljmp
insl
sbb
sbb
add
int
adc
and
cmp
mov
add
xor
jb
movsb
inc
cmp
popa
mov
pusha
and
cmovs
scas
push
sbb
rcrb
mov
inc
adc
aas
xor
stc
or
rep
jmp
sub
cmp
mov
insb
dec
fxch
insl
add
xor
xor
mov
es
or
and
mov
or
pop
decb
inc
mov
mov
mov
fimull
push
movl
cmpsb
inc
add
mov
mov
or
push
add
mov
lock
jns
decl
inc
in
call
sahf
in
lock
hlt
clc
test
out
clc
cld
adc
lret
add
fldcw
jmp
repz
dec
pop
and
mov
or
pop
sti
and
and
daa
mov
xor
jl
cld
or
add
sub
lds
sub
popa
mov
les
pop
nop
aam
push
and
data16
fiaddl
jl
mov
or
sahf
inc
cs
push
add
dec
dec
addr16
add
jnp
pushf
add
push
mov
jnp
jl
test
iret
movsb
mov
aaa
sbb
sbb
cmp
repz
adc
iret
repz
or
or
add
ficomps
or
push
call
cld
sub
push
add
pop
mov
daa
pop
daa
push
adc
add
sbb
out
ret
mov
pushf
stc
enter
mov
mov
in
or
sub
notl
bound
loopne
mov
sbb
cmp
inc
adc
add
or
xchg
push
cmp
lds
push
push
inc
inc
adc
mov
jmp
jp
jo
jl
je
mov
mov
or
pop
jne
mov
pop
xlat
mov
imul
add
push
jne
adc
sbb
mov
aas
out
cmp
inc
loope
sbb
xchg
cmp
and
and
sub
sbb
add
hlt
sbb
sub
in
or
popf
notb
mov
push
push
hlt
data16
loopne,pn
lock
mov
fucomi
add
ds
in
iret
jne
dec
adc
push
ljmp
mov
shrb
out
sbb
xchg
inc
push
xchg
cwtl
cli
push
adc
jmp
adc
adc
jne
inc
cmp
push
cmp
lcall
mov
loop
inc
cltd
loop
adc
jbe
fadds
pop
and
pusha
jmp
sbb
lea
rcl
out
inc
inc
push
and
cmp
das
imul
and
jnp
sbb
fimuls
adc
cmp
xchg
dec
aam
sub
pop
or
mov
or
add
inc
pop
push
outsl
sbb
mov
mov
sbb
and
into
or
iret
inc
hlt
cmp
cltd
inc
movsl
or
and
push
jmp
cmpl
add
ret
inc
adc
or
inc
ror
mov
sbb
mov
cld
mov
pop
cmp
mov
mov
std
xor
push
rol
inc
inc
cmp
popl
aam
lret
jne
sbb
sbb
lock
daa
xchg
push
pop
inc
inc
xor
mov
testl
or
movl
pop
jmp
dec
xor
xchg
xor
andl
inc
inc
or
dec
or
je
add
outsb
inc
add
orl
xchg
stc
test
push
rorb
push
dec
push
lret
or
inc
xor
leave
pop
test
and
push
int
xor
or
pop
imul
inc
cld
aas
jb
jge
stos
mov
shr
or
fsubl
je
dec
or
jl
roll
or
mov
pmaxub
js
jl
mov
and
iret
add
loopne
jne
idivb
stos
loop
rclb
xchg
cs
cmpsb
insl
inc
jle
insb
in
or
mov
and
andb
inc
inc
dec
add
or
mov
sub
stos
lods
fisttpl
inc
enter
bound
add
arpl
inc
pop
fcmovnu
fdiv
add
mov
jg
bound
loopne
rcrb
icebp
cli
icebp
adc
jae
or
imul
rclb
stos
add
dec
roll
popf
add
psrad
adc
fidivs
sub
mov
add
push
xchg
mov
or
mov
push
or
jge
js
in
add
sti
and
dec
ja
ficomps
ljmp
pushl
rolb
push
mov
sbb
cmp
add
dec
sub
call
sub
faddp
adc
add
inc
push
add
pop
lods
pusha
jb
stc
into
sbbb
adc
repnz
addb
jb
push
xor
nop
loop
add
pushf
cltd
dec
shld
mov
and
rcrb
fsubl
dec
mov
jbe
push
xchg
push
pop
inc
push
mov
lea
and
lods
sbb
fists
fnstsw
sbb
scas
mov
or
mov
inc
pop
test
push
testb
cmpsb
cmp
and
gs
pusha
movsl
je
mov
clc
push
pop
or
movsb
mov
inc
pop
cmp
les
dec
je
dec
adc
fsubrl
out
lods
push
loopne
out
add
adcb
mov
in
sbb
ss
jp
adc
test
sub
les
je
cmpsb
fadd
ret
mov
xor
jmp
push
pop
pop
push
imul
and
push
sbb
or
sub
loopne
in
idivb
fwait
ds
jns
cmp
mov
sub
dec
mov
pop
sbb
add
cs
or
sbb
and
lods
in
or
stc
fisttpl
push
pop
out
and
fistpl
sbb
sub
sbb
inc
add
lods
test
mov
add
stos
cli
pop
lods
mov
testb
inc
mov
adc
xchg
adc
jae
loopne
mov
fimull
dec
jmp
mov
pop
je
inc
testl
daa
je
push
jp
push
jmp
inc
and
add
fldenv
lret
inc
or
dec
daa
idivb
filds
or
ret
mov
cmp
add
cs
cmp
and
shr
inc
xor
inc
sbb
mov
add
xor
inc
scas
push
mov
rcl
rcl
jo
add
xchg
bound
cmp
mov
in
cmp
add
mov
mov
cmp
jmp
mov
adc
adc
cld
mov
pop
push
rolb
cwtl
pop
in
ds
pop
decb
imull
loop
and
pop
jne
mov
cmp
push
daa
mov
mov
mov
mov
jbe
add
mov
adc
mov
loop
cli
adc
xchg
int3
mov
repnz
cmc
sub
jo
and
fcmovu
add
lret
pop
xlat
jae
jge
and
push
mov
mov
mov
or
and
or
fadds
mov
pop
push
inc
xchg
xor
xchg
xor
mov
pop
push
mov
mov
add
sub
sub
addl
adc
jo
lret
xchg
push
jle
cltd
loope
ret
andb
outsb
or
gs
push
lds
jmp
rclb
int
rorb
lods
test
or
sbb
and
movsb
adc
and
mov
int3
or
out
sti
adc
and
sub
mov
cmp
je
lds
add
sub
je
inc
scas
loopne
data16
ret
lea
repz
imul
jo
push
pop
add
and
enter
daa
add
adc
dec
add
push
mov
cmp
jle
add
pop
enter
add
cmpb
push
xchg
in
jb
pop
push
pop
jb
add
dec
or
or
push
nop
addr16
or
sub
add
or
pop
sub
loop
or
nop
ja
or
lcall
cs
sbb
iret
push
push
ja
out
test
rsqrtps
in
mov
pusha
adc
adc
inc
or
jae
cmpb
out
adc
add
and
enter
adc
adc
inc
adc
add
push
push
push
pop
pop
dec
jae
inc
xor
sbb
jb
mov
sbb
seto
call
pusha
in
sbb
sbb
sbb
je
pop
sbb
movsl
inc
repnz
jge
sbb
sbb
cmp
inc
inc
push
pop
pop
fst
decl
jne
add
add
sub
cmp
or
add
ja
dec
movl
xchg
addr16
mov
jns
xor
push
in
jno
repnz
sub
sarb
push
adc
aad
cmp
and
xor
leave
repz
out
cmpsb
inc
andl
insl
and
call
adc
fidivrs
cwtl
jmp
add
sbb
ljmp
sbb
out
in
jns
push
imul
inc
push
nop
ja
inc
in
sahf
out
pusha
in
jns
jge
xor
and
sbb
pop
lock
xor
icebp
iret
enter
pslld
repnz
push
and
std
repz
dec
in
leave
std
hlt
hlt
rorl
hlt
fwait
mov
div
inc
jg
xchg
idivl
sub
clc
clc
aaa
jb
push
clc
cltd
adc
inc
jns
seto
lock
cli
cli
in
in
iret
sti
sbb
xchg
fwait
lret
cld
cld
cld
je
stos
test
pusha
mov
xor
sbb
adc
jns
push
ret
cmpsb
push
mov
mov
add
lahf
and
in
mov
or
cmp
ja
inc
xor
mov
push
inc
push
nop
in
icebp
xchg
stc
daa
nop
or
xchg
sti
out
out
and
insb
out
outsb
call
inc
dec
sti
sub
xor
and
mov
cltd
in
jns
cmp
add
push
adc
orb
inc
repnz
add
cli
cmp
push
cli
sbb
dec
push
repz
pop
and
sar
push
stc
loop
xor
sbb
stc
div
negl
mov
xor
add
and
adc
out
clc
xor
inc
or
lret
sti
sbb
pusha
cmp
mov
pop
enter
rcll
inc
pusha
sbb
cmp
and
mov
cld
sub
mov
xchg
pop
insb
loop
icebp
mul
pop
and
imull
xchg
mul
sbb
pop
insb
nop
out
cltd
out
xchg
inc
pop
pop
inc
mull
test
sti
testb
lcall
mov
testb
pop
xchg
negb
cs
out
jno
loop
push
inc
negb
notb
sub
xchg
add
sbb
repnz
cmc
pop
pop
repnz
cmc
jae
movsl
test
cmc
div
jne
cwtl
xlat
idivb
and
pop
add
clc
clc
sbb
popa
cmp
mov
pop
push
jno
xchg
hlt
pop
sub
xchg
cmp
hlt
push
hlt
pop
lock
sbb
data16
frstor
idivl
jo
pop
xor
push
sti
lahf
pusha
imul
ds
test
adc
loope
loope
repz
mov
repz
or
pop
mov
test
xchg
repz
repz
jno
xchg
andl
or
sbb
jmp
jno
mov
xchg
repnz
pop
je
jo
sbb
dec
in
in
popf
dec
push
jno
and
add
add
pop
je
loope
sbb
mov
and
nop
outsb
divb
icebp
and
icebp
test
lcall
cmc
cmc
xchg
inc
fcompl
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
cwtl
cli
test
ret
mov
incb
sub
out
mov
dec
in
jl
ds
add
add
enter
stos
add
adc
add
push
jnp
adc
loopne
sub
push
sbb
add
jmp
and
cmp
dec
ret
jmp
pop
dec
add
mov
lea
add
push
fnstcw
mov
dec
adc
lock
cld
inc
stc
cmp
cmpsl
sbb
mov
int
mov
roll
inc
decb
ss
out
inc
dec
outsl
sarl
fldcw
loopne
inc
and
jns
repz
sarl
xchg
rcr
add
orl
hlt
push
rol
inc
clc
dec
sbb
arpl
scas
sub
mov
xor
push
mov
aam
loopne
or
xor
and
and
pop
pop
xchg
fsubrs
call
push
or
adc
xor
or
mov
push
inc
fildll
fistps
in
insl
mov
sub
and
add
stos
adcb
sub
cmp
push
ss
sarl
flds
sub
daa
sbb
mov
or
or
arpl
mov
pop
hlt
dec
sub
into
or
adc
repnz
in
jmp
movl
pushf
out
loopne
in
adc
pop
pop
fldt
lods
fdivrp
add
cmp
xchg
inc
enter
fwait
insl
lods
out
xchg
jo
jne
mov
jb
or
ja
push
mov
and
sub
rolb
lahf
and
into
adc
push
enter
adc
adc
inc
and
gs
lahf
sahf
mov
in
and
add
xor
push
dec
shll
xor
cmpsb
or
loop
or
inc
sub
je
pop
shll
add
sbb
cmp
enter
add
xlat
rcr
xor
nop
push
mov
rep
lods
adc
add
mov
add
mov
push
movsl
inc
add
adc
sbbl
jg
lods
push
mov
into
dec
loope
ljmp
pop
and
insl
sub
xchg
sub
ds
scas
ljmp
mov
cmp
jne
orl
add
adc
jne
sub
ds
divb
in
rolb
out
sub
xor
mov
jmp
mov
sub
mov
adc
or
adc
ret
stc
dec
add
add
lds
aad
ljmp
popa
loope
test
movsbl
sub
jmp
vmovdqa
fidivs
lret
sub
cmp
adc
mov
leave
cmp
jae
push
insb
jb
movsb
sbb
sbb
dec
and
mov
pushf
dec
inc
and
cltd
sbb
add
sub
cld
mov
sbbl
cmc
mov
or
test
cmp
adc
lock
ja
cmpsl
jne
jbe
ret
jnp
mulb
adc
mov
pop
bound
mov
mov
mov
test
sub
inc
xor
mov
sbb
xchg
scas
xchg
jle
cmp
shr
push
test
aas
xor
or
cmp
or
adc
add
adc
popa
lcall
sbb
test
mov
jo
rcrl
mov
dec
push
es
andb
add
push
adc
mov
adc
ljmp
add
and
pop
mov
roll
sbb
adc
rolb
push
cmp
jb
lea
test
inc
mov
outsb
mov
les
shlb
push
cld
jne
mov
imul
std
jne
les
out
jne
call
aam
subl
jb
aas
out
mov
adc
jmp
push
jo
lahf
std
std
jmp
cld
xchg
sub
inc
sub
mov
adc
pusha
addb
into
jb
add
sahf
sub
and
cmpl
and
cmp
jecxz
adc
pop
bound
and
dec
pop
jne
adc
jnp
or
insl
stc
inc
test
add
or
push
or
dec
and
push
and
test
adc
push
loopne
adc
push
xor
fcoml
inc
xchg
rcrb
sarb
lea
cmc
dec
sbb
inc
pop
sbb
rorb
dec
add
adc
mov
bound
dec
jne
jo
sub
sub
andl
cwtl
xchg
data16
push
stc
xchg
mov
push
jmp
mov
jl
std
adc
jne
mov
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
nop
mov
bound
mov
decl
lcall
inc
sbbl
mov
mov
popa
mov
xchg
add
mov
jmp
cmpsb
stos
subb
and
add
add
jmp
cmp
cmpsb
cmp
inc
add
enter
inc
push
and
and
dec
stc
mov
mov
jns
push
stos
add
testb
fs
add
mov
push
rolb
mov
inc
mov
mov
mov
push
pop
lock
inc
mov
test
push
and
jg
mov
movsb
inc
and
sub
add
je
movsl
cmp
iret
aam
mov
inc
shlb
xor
das
test
or
fdiv
sti
pushl
adc
mov
mov
incl
inc
decl
cs
in
loop
inc
xorl
jno
mov
add
or
ret
push
pusha
or
cmpsb
push
add
shlb
aaa
dec
mov
push
jg
mov
xor
shl
jmp
cmp
jae
and
xchg
mov
int3
mov
jae
pop
jbe
mov
dec
xor
add
mov
pop
sub
mov
pop
mov
lahf
hlt
sbb
jecxz
aam
clc
pop
dec
call
jg
push
mov
rorl
add
xchg
cmpsb
mov
test
je
or
cmovns
testb
and
push
jne
clc
nop
or
jno
pop
insb
adc
adc
add
movsw
pop
decb
push
sbb
mov
inc
dec
leave
sbb
and
jae
das
sbb
xor
add
and
filds
sub
loopne
push
div
stc
mov
xor
or
dec
fwait
push
rcrb
pop
test
xor
jmp
jo
adc
fidivrl
test
stos
movsl
jecxz
or
arpl
cmp
or
sbb
ja
cmp
aaa
mov
jge
push
fld
das
push
push
cltd
pop
idiv
jo
ret
pushw
push
xchg
inc
out
cmp
inc
icebp
es
push
or
or
es
cmp
aad
shlb
mov
enter
sbb
scas
adc
fs
xor
mov
sbb
call
or
xchg
mov
sub
sbb
shll
repnz
sbb
and
jo
je
stos
push
or
add
repz
sbb
pop
jg
adc
add
sti
and
in
test
pop
les
inc
mov
dec
sub
dec
pop
addl
popf
push
mov
push
fdivp
push
add
push
jmp
jge
pop
push
enter
jg
insl
cmp
sbbb
fs
test
sub
jno
mov
mov
ja
int3
dec
jo
mov
je
cmpsb
addb
roll
testl
cmp
adc
pop
sub
adc
sub
cmp
or
js
xchg
and
push
dec
or
cmp
push
aaa
orl
ds
int
xchg
or
stc
pop
push
adc
dec
insl
stos
pop
lcall
push
push
pushf
xor
mov
adc
movsl
and
and
lock
push
je
and
dec
mov
push
movsb
xchg
mov
mov
movsl
inc
push
and
jge
add
or
push
aam
mov
add
adc
data16
iret
repz
ja
inc
adc
or
out
call
add
push
xor
mov
mov
adc
add
dec
pop
imul
rorb
adc
popa
jg
push
pop
imul
xor
fsubrs
add
hlt
dec
adc
sarl
fildll
mov
adc
mov
jnp
cltd
lods
mov
decl
inc
jo
or
jg
jbe
lea
sub
je
gs
rcrl
dec
pushf
mov
pop
sub
add
imul
inc
inc
cmp
je
xchg
mov
cli
andb
daa
adc
add
fcompl
xchg
fidivrl
dec
je
popa
push
cmp
push
ficoms
inc
aam
rcrl
inc
dec
pusha
or
insl
cwtl
push
mov
incl
pushl
push
mov
push
inc
sbb
in
or
dec
inc
sub
xlat
sbb
adc
cmp
push
adc
ja
lds
or
xchg
lods
das
ret
das
dec
push
fs
insb
lcall
push
bound
push
push
hlt
mov
ror
jg
add
test
adc
sar
test
cmp
or
adc
mov
and
js
mov
mov
andl
shlb
pop
xor
mov
int
roll
add
push
adc
sbb
frstor
mov
subb
mov
cmp
mov
mov
inc
adc
adc
or
fiaddl
fdivs
iret
add
rcrl
pushf
scas
sub
shl
bound
jne
jmp
dec
or
inc
ds
sub
push
jmp
das
dec
pop
enter
push
dec
sbb
dec
into
jo
loopne
lea
sbb
test
adc
and
inc
mov
jecxz
fsubs
clc
ret
rorb
xchg
push
in
inc
sbb
push
fldt
mulb
bound
or
or
adc
push
das
adc
lea
or
push
jns
and
sbb
push
pop
stos
push
push
cmpb
inc
popa
sub
mov
add
mov
sub
xor
sbb
and
or
inc
push
jmp
cmp
rcrb
ja
or
inc
inc
jo
out
ss
pop
mov
outsl
inc
insb
ja
or
imul
test
sub
cltd
pop
stos
cltd
and
insl
push
mov
xor
dec
clc
jne
pop
xchg
or
call
filds
aas
xchg
icebp
rolb
fdivp
lret
dec
xor
movsl
mov
add
scas
mov
add
adc
inc
and
fnstenv
adc
add
in
movsl
xchg
rolb
frstor
aad
jns
xchg
pop
xor
pop
fldz
sub
xor
adc
add
es
fldcw
enter
flds
cmp
loopne
push
pop
divb
or
inc
cltd
mov
incb
jne
jns
pop
add
add
dec
add
sbb
push
mov
mov
shrb
leave
insl
cltd
loope
cmp
jmp
pop
arpl
xchg
push
mov
into
fs
push
ss
inc
iret
or
test
test
add
inc
add
and
imul
fstp
or
adc
test
cmpl
les
into
ret
sarl
in
cld
loopne
cmp
xchg
or
into
popa
xchg
add
jbe
jbe
movl
adc
cmp
addl
mov
rcrb
clc
sub
inc
sbb
xor
xor
dec
imul
xor
pop
sbb
in
push
dec
shll
sbb
and
and
nop
xor
js
jo
jge
mov
xchg
icebp
push
cmp
push
fcomps
out
es
int3
or
ror
xlat
in
xchg
push
adcb
int
dec
sbb
enter
xor
pop
sub
push
mov
jmp
mov
shll
inc
test
jo
add
je
xor
add
inc
and
add
or
xor
dec
and
or
adc
in
jo
sub
push
push
push
push
ret
xchg
mov
push
outsl
sbb
cld
arpl
imul
sub
test
mov
or
loope
andnps
or
pop
loopne
popa
in
pop
mov
adc
adc
add
ret
cmp
cmp
call
nop
push
cmpb
inc
mov
and
sbb
ja
lods
nop
jp
jbe
subl
js
mov
frstpm(287
out
jo
mov
mov
sub
add
cld
jle
add
test
repnz
inc
xchg
loope
pop
dec
das
dec
jle
jne
pop
in
faddl
lcall
xchg
cmp
mov
shll
push
pop
xor
ror
rcrl
and
jge
xor
cmp
and
lock
movsb
popa
cs
inc
data16
xor
call
inc
fists
aam
mov
or
mov
pushl
add
mov
mov
xchg
adcb
lret
loop
mov
inc
xor
gs
jae
or
imul
push
pop
sbbb
ret
test
xor
push
pop
push
int
and
inc
pop
lods
add
mov
jecxz
neg
pop
adc
lcall
fs
inc
nop
inc
incb
es
dec
jo
push
sub
clc
pop
and
fmuls
or
push
cmc
sbb
jmp
push
adc
pop
je
outsb
jbe
outsb
cmp
push
rorl
cld
jb
push
jg
lahf
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
loope
add
push
ret
adc
sbb
push
jne
add
dec
mov
add
sbb
hlt
pop
and
mov
ret
loope
jne
sbb
dec
pushf
rolb
add
mov
data16
xchg
push
movsl
sub
iret
cmp
xchg
pop
fdivs
cmp
jg
add
mov
jb
xchg
cwtl
in
sti
pop
mov
out
pusha
sbb
xchg
stos
push
push
push
call
mov
sub
pop
dec
shll
mov
sbb
repz
addr16
jle
rorb
imul
cmp
push
addb
movsl
popa
cmp
xchg
imul
jnp
lock
lock
push
pusha
pop
ljmp
ret
sub
jns
add
mov
and
fsts
movsb
dec
lods
inc
and
mov
pop
lods
push
sub
sbb
lds
imul
inc
sbb
add
and
divb
dec
dec
mov
xor
or
adc
icebp
lea
push
adc
rorl
or
mov
adc
enter
add
fidivl
sarb
es
and
add
xor
push
xor
pop
pop
jmp
pop
sbb
sbb
sub
sbbl
pop
enter
das
pop
mov
or
or
cmp
adc
jae
outsb
pusha
mov
sub
sbb
mov
jecxz
sbb
xor
in
arpl
mov
sbb
pop
sub
in
pop
popa
daa
js
aam
xor
mov
cwtl
or
mov
add
popf
adc
adc
inc
decb
ror
sub
std
add
adc
and
push
clc
add
shld
nop
out
adc
test
add
add
or
daa
and
shl
test
lahf
sbb
inc
lds
dec
loopne
pop
and
shrb
add
and
insb
push
lea
loopne
sbbl
xor
xchg
dec
mov
or
push
lock
inc
xchg
test
push
add
loopne
or
push
and
mov
sbb
inc
stos
addl
je
je
add
les
add
iret
xor
push
dec
or
pop
mov
mov
mov
subb
push
call
inc
mov
sti
mov
adc
sbbb
add
dec
xchg
daa
lods
add
xchg
pop
jl
dec
imul
mov
mov
inc
jge
das
sub
pop
fdivs
popf
and
cltd
and
and
push
jno
fwait
mov
push
movsl
pop
xchg
cmp
dec
mov
push
std
inc
inc
pusha
jb
push
xchg
cmc
mov
adc
cmp
adc
jb
cmp
or
and
mov
push
scas
shrl
les
and
sub
inc
cmp
pop
push
jge
call
test
pop
sub
test
sbb
xchg
xchg
xchg
fstl
adc
or
add
mov
sbb
lret
lret
and
popl
scas
or
lods
sbb
add
and
sub
push
js
sub
test
movl
cmp
adc
sarb
daa
test
leave
xchg
in
pop
clc
ds
adc
pusha
adc
cmp
cmp
dec
les
loopne
enter
sub
pusha
sbb
inc
push
push
in
adc
andl
or
je
dec
and
adc
ja
or
test
xor
xchg
add
bound
roll
pop
pmullw
add
shl
and
stos
add
add
mov
aad
mov
inc
dec
jne
mov
xchg
cmp
or
cmc
xor
and
into
sbb
and
movsb
int3
bnd
mov
sub
ljmp
ja
sti
cs
mov
and
cmp
lea
out
inc
into
sub
lds
shll
or
pop
test
out
xor
aam
cmp
cld
ficoml
dec
push
ja
push
push
ror
xchg
lcall
cmp
js
push
dec
inc
inc
cld
push
xlat
push
adc
mov
jb
push
decl
orb
mov
je
cmp
aas
movsl
and
or
aam
or
aad
jmp
mov
mov
mov
xchg
or
rorb
pushl
roll
cmp
push
or
and
and
jmp
adc
pop
mov
inc
pop
ret
adc
lods
pop
pop
or
enter
lea
mov
fisubrl
mov
test
rcrb
leave
push
cs
inc
cmc
inc
sbb
mov
push
jmp
xor
test
cmp
adc
mov
movl
std
gs
shrb
xchg
inc
call
or
cld
cmp
push
jmp
xor
cmp
inc
cmp
std
jne
hlt
xor
xor
stos
jne
cmpsl
or
cmp
fisttpl
push
add
push
add
push
sub
cmp
xchg
mov
push
fcoms
jnp
adc
inc
addr16
pusha
and
mov
mov
sbb
xor
test
adc
out
into
std
fidivl
xor
jo
push
jmp
sub
inc
lcall
mov
mov
push
dec
cmpsb
push
add
inc
pop
inc
rol
mov
cmp
jbe
and
add
hlt
pusha
jecxz
test
sbb
imul
leave
inc
and
lret
xchg
imul
out
lea
push
aaa
jmp
inc
into
sub
xchg
push
loopne
adcb
testl
add
ljmp
inc
fidivl
outsb
jg
adc
loopne
xorb
movl
fistpll
mov
inc
adc
data16
std
decl
xor
inc
dec
jne
mov
inc
icebp
ds
jp
push
jl,pn
sbb
jle
or
xchg
dec
dec
cld
push
aaa
jo
mov
inc
dec
jne
int3
clc
cmp
mov
add
add
hlt
gs
and
jnp
test
xor
and
cmp
arpl
sbbb
cmpsb
call
sbb
mov
push
sub
aam
or
and
inc
pop
ljmp
pop
fwait
xchg
loope
mov
pop
jno
leave
cmp
mov
fisubl
mov
inc
and
roll
inc
push
jne
push
call
mov
mov
cli
jo
insb
ljmp
or
stc
jb
sub
mov
mov
push
adc
cld
prefetch
xchg
test
and
lret
cmp
sub
jmp
xor
dec
sbb
mov
push
inc
fdivp
inc
xor
add
pop
lods
insb
pop
ret
ss
mul
jmp
rcl
insl
adc
jne
es
outsb
or
lods
enter
sti
imul
arpl
jecxz
scas
lret
ss
cmpl
and
pop
movl
popa
popa
mov
les
outsl
cmp
es
and
and
pop
sbb
pop
adc
lcall
inc
mov
int3
cltd
mov
push
adc
rolb
sub
inc
xchg
int3
mov
sub
and
idiv
insl
sub
mov
call
push
push
cwtl
mov
jne
stos
or
mov
out
jle
or
out
sahf
jg
cmpl
add
fldt
cmp
pop
cmp
rolb
sub
xor
dec
or
xor
or
sbb
pushf
in
or
xchg
pop
or
push
sbb
mov
lea
push
or
ss
pop
ret
test
adc
movsl
sub
fildl
stos
daa
cmp
loopne
sbb
sub
or
outsb
dec
xor
js
and
je
push
mov
mov
add
imul
cmp
adc
imul
stc
or
jo
test
jle
sbb
jo
adc
cwtl
loope
xchg
or
sarb
pop
sub
jmp
inc
or
sbb
or
inc
pop
mov
xchg
mov
lock
sub
rcl
cmpsb
fimull
mov
clc
sbb
mov
aam
or
inc
mov
push
rcr
xor
mov
xor
adc
cmc
cld
roll
leave
push
push
fs
enter
out
daa
mov
xor
lods
sbb
js
lret
js
push
sbb
shr
push
inc
fisubl
sub
movsb
mov
push
dec
or
aas
inc
js
pop
mov
mov
inc
nop
mov
mov
add
dec
push
and
sbb
and
cwtl
nop
into
xchg
and
sbb
pop
push
sti
lret
insb
push
mov
cld
push
jo
xchg
in
fwait
sub
push
jmp
movsb
xchg
mov
mov
mov
cmpsb
insb
test
jae
bound
add
cmp
loopne
jo
outsl
mov
adc
mov
pop
insl
pop
inc
ret
dec
push
push
sub
or
push
push
movsb
jl
add
dec
xchg
pop
jns
stos
add
dec
add
out
add
xor
not
test
jae
cmp
iret
mov
adc
or
push
gs
repz
and
clc
pop
rclb
mov
pop
jb
cmp
js
pop
jb
dec
pop
cmp
xchg
and
jle
adc
push
ud0
sbbb
scas
iret
jnp
aad
insb
and
ret
ljmp
test
cwtl
sub
cmpsl
mov
and
adc
push
addl
mov
sbb
out
jb
add
test
js
sbb
jle
insb
js
jne
divl
cmpl
cmp
cmp
or
jl
and
daa
mov
jmp
jno,pt
jge
mov
ja
mov
out
or
mov
cmp
clc
imul
pop
test
js
jl
jp
add
loop
xchg
push
je
sub
scas
mov
or
nop
and
add
ja
pop
das
nop
adc
fisubs
ja
test
inc
sub
add
dec
das
andl
out
lea
xlat
sbb
mov
das
mov
or
sbb
or
lea
xchg
fcomps
xchg
xchg
fistps
clc
or
test
lahf
xchg
xchg
les
popl
mov
jbe
ss
enter
dec
cld
sbb
rcl
in
sub
aam
or
cmp
mov
js
push
adc
fcomps
cmp
and
test
lock
punpcklbw
pop
jmp
in
js
lcall
xorl
lods
aas
adc
add
ss
mov
lods
add
or
stos
add
addr16
jmp
mov
out
add
jae
incl
loop
jb
pop
adc
test
addr16
test
add
and
xor
roll
test
test
test
xchg
dec
roll
and
xchg
xchg
or
add
xor
xchg
lret
clc
fcmovu
add
adc
push
push
xchg
loope
test
push
push
jl
cmpb
add
jmp
in
in
xchg
js
add
add
mov
popa
xchg
pusha
sub
adc
mov
push
sbb
leave
mov
mov
or
inc
mov
mov
xlat
mov
mov
movsb
add
sarb
pop
add
sub
aam
mov
out
push
jle
les
or
xchg
jno
or
loopne
or
and
ret
and
fcomip
mov
aas
lds
mov
roll
dec
stos
or
ret
call
outsl
loop
mov
daa
and
push
xor
push
enter
push
mov
or
inc
or
cmp
or
je
lret
dec
dec
cmp
cmpsl
jecxz
push
or
sub
or
xchg
xor
cwtl
mov
imul
dec
pop
add
pop
add
je
adc
in
andl
jne
or
adc
pop
addb
push
mov
and
sbb
aam
ja
jbe
push
movsb
test
movsb
xor
lock
mov
push
mov
cmc
lods
pop
or
testb
outsb
cmp
jno
and
push
outsl
push
mul
mov
lock
data16
pusha
or
push
sub
push
mov
cmpl
enter
adc
je
movl
xor
dec
xorl
mov
hlt
jecxz
pop
push
ret
ret
pop
rcll
and
or
push
or
inc
lods
and
sub
or
pop
mov
adc
unpcklps
or
jge
cmp
mov
dec
loopne
adc
pop
pusha
add
pusha
ret
test
add
adc
loopne
mov
dec
mov
jg
lret
lea
inc
cmp
cmc
shll
sbb
ficompl
loopne
push
push
pop
out
inc
test
jl
jecxz
call
push
inc
mov
dec
sahf
cmp
mov
dec
adc
imull
call
in
add
push
ret
shrb
jbe
mov
inc
cmp
add
sbb
mov
orb
and
cld
inc
pusha
or
jecxz
push
or
shrb
or
or
mov
movsb
test
inc
lahf
xchg
loopne
adc
test
cltd
adc
jbe
push
inc
xlat
pop
xor
shrb
add
inc
in
or
inc
sbb
and
jno
add
cmp
pop
divl
in
loop
ret
mov
lods
push
mov
fimuls
xchg
sbb
push
push
jne
mov
xchg
dec
ljmp
jns
add
sbb
push
decl
or
cli
add
add
add
aas
jp
mov
and
push
or
xlat
cmp
dec
stc
jo
ret
and
xchg
xchg
sbb
xor
ret
mov
test
adc
or
fsubrs
xchg
pop
mov
push
jg
inc
cli
adc
or
push
jmp
aaa
movsl
xchg
adc
leave
add
std
inc
inc
cmpl
pop
test
cmpl
cmc
push
ret
aas
xor
nop
or
dec
lret
inc
or
sahf
ret
pop
and
sti
pop
push
jbe
and
or
lret
in
mov
push
jbe
popf
fdivrs
xor
or
inc
negl
mov
mov
pop
adc
sbb
mov
mov
test
in
or
jle
cmp
add
cmp
mov
dec
pop
lods
adc
imul
lea
rcrb
jl
sbb
add
test
mov
cvtps2pd
test
push
cmpsl
loopne
cmp
pop
sar
pop
mov
inc
push
out
cmp
cmpb
cli
pop
cs
dec
lods
or
aam
clc
mov
sarl
sub
mov
or
je
or
sub
je
sbb
popf
pop
cs
pushf
pop
or
push
add
inc
sbb
cli
or
add
xchg
sub
or
mov
adc
pop
fistpll
sarb
mov
mov
mov
push
lret
or
ja
imul
cmpsl
cmp
hlt
out
sbb
hlt
hlt
stc
nop
sbb
int
je
or
inc
insb
je
lock
inc
xorb
subb
loope
insb
xor
sub
xor
pop
and
push
xchg
ss
or
xor
mov
xchg
aaa
nop
orb
add
xchg
int
cmp
or
imul
mov
cmp
dec
loope
xlat
je
xor
push
push
js
stc
push
outsb
lret
in
or
and
cmp
push
sbb
jle
int3
jnp
cmp
adc
or
add
mov
or
inc
mov
fdivr
cmp
les
mov
nop
and
push
ds
push
jae
mov
test
sarl
xchg
aad
cmp
xorb
pop
das
mov
adcl
ret
loope
mov
and
movups
mov
xchg
out
and
mov
fstps
sub
es
sub
sbb
ret
push
daa
outsb
add
cmp
stos
mov
push
insl
cmp
loop
js
shr
int3
negl
scas
ljmp
dec
lret
add
add
cmp
test
sti
cmpl
mov
out
imul
jns
push
popf
mov
leave
loope
mov
loop
setp
hlt
mov
inc
roll
lret
mov
xor
push
cltd
mov
add
lea
ds
push
sbb
sbb
fwait
mov
cli
add
add
xchg
pushf
into
add
addr16
mov
push
outsb
je
test
sbb
insl
xchg
jae
je
aas
add
xor
mov
xor
add
data16
movsb
add
or
jb
pop
je
les
stos
dec
loope
jecxz
jno
rclb
aam
add
ret
xchg
out
xchg
not
jne
mov
jne
mov
jmp
cmp
cmpsl
cmp
jle
insl
cmpl
cmp
pop
inc
sub
add
int
lret
stos
mov
or
mov
xor
adc
dec
xchg
cmc
mov
rcll
hlt
dec
sub
sbb
pop
js
inc
mov
or
and
xchg
mov
imul
adc
cwtl
inc
call
aas
nop
imul
ds
popa
stos
out
inc
adcl
dec
enter
push
outsb
mov
data16
out
addr16
decb
mov
mov
inc
daa
add
adc
movsl
loope
mov
data16
push
loope
ds
sub
lret
ja
scas
cmp
test
popa
jbe
fbstp
inc
push
fwait
push
cmpsb
jmp
ret
jbe
or
cltd
jmp
aaa
int3
je
cltd
ret
mov
dec
sub
shll
dec
jae
adc
pop
push
mov
jno
shl
jecxz
nop
pop
fimull
jbe
mov
or
sbb
dec
test
decb
push
and
lea
jb
das
sbb
push
push
inc
les
push
lret
push
lds
lock
mov
loopne
stc
cmp
xchg
clc
sahf
add
push
fsubrl
decb
pop
xchg
sub
inc
cmp
ljmp
arpl
into
or
sbb
and
xor
cmovo
fisubs
mov
loope
or
insb
pop
mov
int3
jle
pushf
repz
push
int
lret
test
sub
addr16
test
sub
rorl
push
test
sahf
and
leave
fcoml
cltd
sub
xchg
mov
fcoml
or
pop
shl
imull
cwtl
fnstenv
fdivrl
lea
jns
data16
or
add
push
jbe
dec
xorl
jne
jno
clc
jnp
nop
aaa
cmp
add
or
adc
jno
rcll
sbb
mov
stos
add
iret
lods
add
cmpsb
dec
lea
add
sti
push
and
imul
gs
add
push
xchg
inc
xorb
sarb
loopw
adc
insl
mov
shll
movsb
cmp
and
jle,pt
xlat
sbb
and
sub
test
std
dec
and
add
mov
push
popl
clc
cmp
jae
int3
adc
sbb
pop
push
dec
popf
dec
cmp
pop
lcall
addl
pop
add
sbb
nop
idivb
push
cwtl
add
lea
mov
shll
pop
rcrl
test
jo
out
jl
test
pop
xor
lcall
push
mov
mov
mov
ret
sub
push
add
testb
js
inc
jl
push
pop
ror
pop
das
and
push
jne
push
aas
out
dec
or
inc
xor
aas
sub
lds
pop
icebp
sbb
jge
and
les
pop
xor
add
ss
js
arpl
outsb
push
xchg
push
adc
jmp
push
adc
cmp
xor
push
adc
mov
sbb
clc
fimuls
cmp
js
int
cli
and
movsb
lea
jl
mov
sbb
sti
adc
ss
add
outsl
adc
mov
or
adc
enter
and
dec
clc
sub
pusha
and
mov
push
rclb
mov
pusha
xchg
add
jns
cld
shr
pop
xchg
clc
jnp
mov
inc
and
dec
adc
push
test
outsb
orb
mov
mov
je
dec
mov
clc
adc
add
je
cli
add
fisttps
incl
push
pop
mov
inc
mov
sub
jae
mov
shr
lea
not
and
dec
cld
pop
mov
ljmp
lock
xor
clc
insl
lods
pop
add
push
or
add
or
mov
dec
pusha
jmp
clc
and
divb
shlb
and
sti
add
xor
pop
cmp
call
fimuls
and
shll
jno
shll
xchg
dec
jno
mov
es
out
not
and
mov
and
xor
sbb
loopne
repnz
mov
dec
add
mov
loop
pushfw
imul
sub
popf
loopne
mov
rorl
jnp
or
dec
or
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
je
loope
xchg
or
pop
jbe
pop
lock
jmp
dec
adc
push
mov
or
sti
inc
xor
mov
jb
pop
xchg
xlat
imul
and
add
add
jle
add
dec
xchg
insb
inc
shl
add
scas
jp
fistps
push
push
call
aas
gs
push
or
mov
flds
sub
ror
decb
adc
inc
dec
xor
pop
dec
out
pusha
add
and
pushl
push
push
inc
iret
push
push
mov
clc
mov
int
sbb
mov
test
sbb
lods
call
sub
cmp
sub
insl
or
mov
mov
cmp
sbb
mov
mov
lock
data16
cmp
test
sbb
cmp
lea
js
add
div
mov
addr16
push
jae
nop
xor
mov
or
and
jne
test
lahf
arpl
int
jmp
orl
mov
add
and
adc
mov
imul
popa
dec
adc
sbb
add
rolb
mov
imul
xchg
xor
inc
clc
pop
notb
mov
or
hlt
or
sub
imul
ret
popa
nop
das
lea
subl
inc
aad
mov
jmp
dec
clc
incl
testl
or
adc
jmp
mov
lock
call
ret
mov
fcmovnb
push
adc
pushf
mov
dec
insb
sub
push
jo
sub
fs
pop
movsb
inc
mov
inc
mov
lock
mov
dec
inc
jne
or
lds
not
and
sub
sbb
les
movups
stc
nop
out
fcompl
sub
pop
shr
dec
sub
push
add
enter
clc
mov
and
les
mov
push
cmp
ret
int3
inc
call
fsts
or
imul
loopne
push
int3
push
pop
inc
pop
push
xor
adc
pop
inc
stc
sbb
push
mov
add
ds
add
cmp
nop
xor
negl
or
push
jns
divb
add
das
mov
pop
ljmp
add
mov
cs
fucomp
orb
aaa
mov
jbe
jg
or
je
jle
mov
pop
pop
lcall
pop
decl
dec
movsl
imul
loopne
data16
and
js
push
ffree
test
mov
adc
inc
insb
xor
out
jl
hlt
mov
inc
and
clc
jl
or
inc
or
adc
lds
inc
dec
insb
pop
xor
push
sar
dec
ret
sbb
and
pop
xor
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
roll
ja
dec
ficoms
add
sbb
subb
mov
mov
xchg
jbe
lock
or
mov
xchg
xchg
cmp
lods
decb
into
mov
out
cmp
xchg
xor
jns
dec
fcmovbe
or
sbb
cmpsl
add
xchg
xor
add
push
js
and
inc
cmp
push
push
jo
insb
loop
jge
xchg
shr
adc
cld
adc
in
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
and
adc
cwtl
jnp
and
mov
jle
jne
sbb
xchg
out
or
jae
xor
aaa
sti
add
lock
xor
lods
xor
insl
shl
sub
lcall
cmp
je
mov
ficompl
mov
in
cli
and
mov
push
sbb
sub
jno
mov
adc
push
mov
out
repz
mov
mov
into
jne
mov
push
pop
les
inc
test
inc
push
pushf
mov
sub
in
sub
icebp
sbb
shll
dec
stos
inc
cmpsl
cmpsb
add
xchg
sbb
cmp
add
iret
push
xchg
cmp
jmp
and
mov
decb
jne
cmp
and
jmp
jp
es
mov
cmp
jge
jne
dec
push
and
outsb
clc
into
xor
dec
inc
pop
and
cmp
inc
mov
or
inc
and
rcrl
or
cmp
sbb
ret
scas
call
cmp
or
mov
or
or
mov
in
mov
or
ljmp
or
jne
call
shll
and
lods
test
lea
ds
daa
pop
or
sbb
sbb
add
and
and
add
hlt
loopne
repnz
sbb
std
loopne
or
out
add
out
or
xorl
adc
or
adc
xor
ficoml
lock
aas
test
mov
xchg
xor
lock
test
or
call
imul
mov
adc
xorb
and
add
das
adc
mov
xchg
inc
xlat
lcall
pop
mov
inc
cmp
cmp
loopne
sbb
push
mov
or
xor
je
add
sub
mov
or
mov
cmc
cmp
or
ja
mov
push
lock
push
ds
sbb
push
fcmove
fs
cmp
xchg
stos
jp
sbb
mov
xor
lahf
pushl
adcl
push
or
scas
loope
divl
pop
jne
hlt
and
pop
add
loopne
mov
std
pop
gs
es
and
jns
cmp
or
popf
iret
mov
dec
or
inc
push
or
pop
psubd
mov
cmpsl
dec
pop
adc
jl
leave
push
in
rclb
and
fists
lahf
insb
int3
push
sbb
xchg
inc
je
mov
mov
rcrl
push
int
mov
lock
cs
js
sub
adc
push
pop
iret
test
ret
into
andb
loopne
nop
jg
pop
and
inc
clc
dec
adc
repnz
mov
call
xor
test
inc
sbbl
jmp
mov
mov
leave
inc
add
xor
or
jmp
movzwl
jo
int3
test
in
into
pop
jns
je
cmp
mov
stos
dec
inc
rorl
cmpb
call
sar
xor
mov
dec
dec
lcall
popf
inc
pop
ja
jnp
push
push
movsb
mov
sub
sarb
or
add
inc
and
adc
or
jne
xchg
pusha
cltd
mov
pop
add
pop
fdivs
mov
or
rcrl
mov
lea
movsb
sub
add
or
sbb
and
stc
mov
iret
xor
mov
aas
insb
jne
jp
xor
adc
repz
shr
mov
mov
inc
fimuls
adc
xor
cmp
mov
gs
inc
push
cmc
jmp
sbb
dec
int3
les
test
movsb
xor
ret
jne
jns
movsb
in
add
or
nop
mov
sbb
adc
nop
lock
push
xchg
test
int3
inc
pop
dec
cmpsl
call
enter
and
xchg
leave
enter
and
in
repnz
mov
xchg
xchg
dec
neg
lret
xchg
and
dec
xor
or
outsl
lahf
call
push
pusha
lahf
or
nop
xorl
aas
addl
mov
mov
push
and
mov
push
test
dec
rorb
mov
jb
jb
shr
adc
add
push
cmp
lods
pop
inc
repnz
or
push
lods
sub
and
shrb
xchg
lahf
push
and
and
call
adc
lods
nop
sub
add
mov
sub
xchg
dec
scas
shlb
xchg
in
add
xor
leave
in
test
lret
and
test
and
fwait
mov
int3
test
cltd
scas
f2xm1
mov
punpckldq
addl
mov
or
xchg
out
mov
cli
push
lods
inc
add
jle
and
sahf
xor
lea
sub
jl
mov
daa
cmp
push
xchg
add
sub
lea
cltd
sub
mov
js
lret
mov
add
js
cltd
adcb
dec
dec
jne
mov
add
je
rcll
outsb
repnz
inc
rclb
sar
or
fldenv
inc
sbb
test
pop
cmp
inc
out
rorl
push
mov
pop
and
cmp
push
cs
and
enter
jnp
adc
sbb
orl
jmp
mov
push
mov
adc
testb
loope
push
lods
or
or
dec
fsubs
push
adc
mov
mov
dec
adc
jne
add
hlt
mov
mov
aaa
inc
cld
push
add
add
cs
aaa
add
rolb
enter
ret
sarb
pop
sub
dec
jne
int3
cmc
mov
or
not
and
and
scas
loop
and
push
cli
cmp
clc
add
xor
pop
test
lcall
cli
sti
cld
std
adc
mov
data16
xor
jl
insl
push
cmp
fcoml
cmpsb
sbb
jg
inc
xor
add
js
inc
fisttpl
sub
sbb
dec
xor
ss
add
add
ret
je
dec
je
push
or
fmul
pop
ret
lret
pop
inc
mov
aas
inc
pop
loopne
fldl
or
fldl
or
and
mov
sti
loopne
inc
push
outsl
fcmovnbe
ja
leave
pop
jmp
jo
fwait
in
mov
push
dec
and
pop
in
sbb
test
xlat
das
or
jg
sbb
dec
dec
je
add
and
lret
jbe
je
or
sti
flds
pop
and
lcall
lock
inc
insb
xchg
sub
mov
jne
mov
sub
rcrl
out
stos
repz
xchg
int
sbb
jmp
lret
xchg
lock
fmull
int3
pop
frstor
rolb
mov
pop
mov
push
popa
loopne
xor
shl
push
jo
pop
cltd
divl
jne
das
and
adc
repz
lock
jns
add
push
int3
aad
sahf
out
sahf
out
repz
push
decl
adc
or
leave
std
pusha
add
mov
add
enter
in
xor
je
or
add
push
data16
and
xchg
xor
and
xchg
adc
adc
xchg
pop
mov
imul
jg
out
pop
push
inc
clc
add
fdivrl
jb
push
xchg
jmp
inc
faddl
xor
jg
sbb
popa
push
jmp
push
adc
cli
clc
sti
adc
fmull
push
inc
jp
andl
test
jne
push
push
subl
xor
testb
push
xor
xor
mov
adc
add
mov
or
xchg
clc
push
mov
adc
repz
mov
dec
mov
js
or
pop
push
adc
fnstenv
mov
mov
sub
lret
in
call
pop
pop
cmp
dec
mov
lock
ror
lret
scas
pop
mov
stos
mov
clc
shlb
test
pop
rol
add
les
or
pop
add
jne
push
mov
loopne
sar
test
ret
and
or
repnz
int3
add
decl
dec
or
xchg
out
test
inc
pop
inc
inc
adc
push
mov
mov
push
std
push
or
lea
or
les
mov
rcll
xor
cmp
mov
in
stc
or
shl
cwtl
mov
mov
movsbl
int3
pop
cmpsl
mov
or
add
pop
cs
add
xlat
xor
lock
sub
iret
mov
cmp
hlt
fcompl
inc
es
or
mov
es
xor
xchg
lret
nop
call
sti
fiaddl
mov
push
or
je
cli
cmp
sti
mov
pop
lahf
sti
dec
cmp
inc
sub
pop
mov
es
aad
dec
lret
mov
pop
and
pop
or
outsb
xor
pop
inc
jne
lret
and
inc
xor
cld
inc
add
imul
imul
lcall
pop
test
mov
mov
aam
shll
mov
shrl
dec
mov
cmpsl
xor
jne
push
in
sbb
mov
push
loope
stc
lods
pop
call
pushf
gs
add
cmp
add
mov
bound
push
inc
cmp
aas
imul
std
dec
mov
gs
testl
cwtl
add
int3
cmp
jne
xor
pushf
cmpsb
jo
mov
jo
mov
testl
dec
or
or
cwtl
lret
fcmovbe
jns
mov
mov
sahf
add
js
sbb
sub
inc
hlt
or
mov
add
jle
inc
pop
enter
imul
push
sub
dec
aaa
dec
nop
jno
or
pop
pop
mov
cmp
into
je
aaa
bound
or
push
ret
in
lcall
pop
jb
std
mov
sti
jecxz
nop
cmp
mov
mov
sbb
lds
enter
xlat
aaa
jns
xor
lock
fdivr
adc
adc
ret
roll
and
roll
push
jp
test
add
jno
xchg
cmpb
cmp
sti
and
call
stc
call
fadd
ret
cmp
pop
out
in
std
push
mov
lds
fcomp
jge
mulb
arpl
sub
mov
inc
mov
cmp
nop
std
lds
das
bound
sub
mov
xchg
std
out
imul
mov
push
fisubrl
fmuls
and
cmp
orl
sbb
mov
xchg
je
cmp
fsubl
mov
std
out
push
xor
fldcw
enter
inc
add
movb
vpmullw
test
ds
iret
dec
xor
roll
jb
xchg
xor
mov
jne
adc
repnz
cmp
cmp
jno
dec
and
sbb
call
std
mov
pop
xor
jp
lea
test
dec
loopne
jp
leave
mov
mov
daa
push
mov
popa
ficoms
fdivrp
or
mov
data16
push
inc
stos
dec
div
sub
test
call
popa
cmp
pop
dec
mov
add
xchg
lret
sar
lock
xor
jmp
or
jmp
mov
jge
jmp
adc
and
mov
lods
ror
popf
loopne
sub
andl
xchg
push
ds
mov
in
in
ss
aam
pop
jns
xchg
jl
mov
cmp
fbstp
pop
push
int
bound
mov
inc
add
movsb
adc
aas
insl
sub
js
inc
push
inc
sub
mov
cmp
xchg
sbb
cmovge
or
sub
jne
fdivr
das
add
loop
push
dec
pop
jno
push
popa
and
xor
sbb
rolb
std
std
adc
add
sti
lock
xchg
test
xchg
aaa
fsubrl
push
mov
xchg
aas
adc
andb
nop
dec
mov
jns
dec
mov
mov
sarb
lock
sub
mov
mov
or
jne
call
and
aas
xor
test
dec
aad
pop
pop
leave
add
and
mov
movsb
test
daa
pop
and
ret
dec
sarb
dec
jb
inc
and
loopne
xchg
jno
push
push
or
out
cmp
xlat
adc
sub
cmp
ja
and
or
or
adc
icebp
or
loopne
jo
lock
inc
ret
pop
pop
repz
shl
loope
xchg
ds
jo
inc
scas
lock
xchg
pop
xchg
cmc
dec
dec
push
lock
mov
popa
push
repz
add
mov
arpl
xor
sbb
out
test
and
test
ret
es
out
call
jnp
dec
mov
enter
cmc
ret
inc
adc
ret
adc
xchg
imul
cmc
and
mov
ret
jmp
and
les
out
xor
mov
add
stc
mov
push
mov
xchg
lret
repz
xchg
or
stos
inc
sti
pushf
inc
xchg
sbb
pop
mov
and
pop
lods
test
shrl
sbb
xchg
pushf
add
test
fs
sub
enter
sbb
or
pop
pop
pop
dec
movsl
jb
std
rcrl
sub
enter
insl
and
push
xor
cmc
in
inc
leave
sbb
fwait
mov
clc
mov
shrb
test
pop
inc
aad
adcl
js
jb
pop
repz
or
xchg
pushf
scas
mov
or
addr16
mov
outsl
xor
xchg
or
mov
mov
inc
scas
ds
mov
test
movsb
adc
leave
mov
cmp
inc
icebp
fs
add
sbb
cltd
movsb
bound
and
repz
or
adc
test
push
and
repnz
test
and
mov
leave
pushf
pushf
nop
nop
add
and
xchg
pushf
push
or
insl
add
dec
call
je
jmp
dec
int
aaa
mov
push
jp
inc
add
push
jns
and
xor
jae
ss
push
mov
xor
jmp
cmp
fcompl
xchg
dec
imull
jg
jg
adc
and
inc
add
lea
push
sub
outsb
fmull
lret
xchg
cli
or
gs
je
and
add
in
adcb
adc
imul
ret
jp
popa
mov
and
inc
dec
inc
add
mov
dec
rep
ss
neg
pop
addr16
cmpsb
jnp
lock
push
leave
add
adc
enter
lcall
enter
or
mov
mov
mov
fwait
int
outsl
push
push
dec
adc
push
and
jl
xor
dec
push
pop
ret
out
std
outsl
inc
or
jbe
jle
sbb
xchg
lret
ja
mov
jo
inc
and
sbb
outsb
jecxz
hlt
lock
ret
dec
cmp
lret
nop
sbb
outsb
mov
rorb
into
and
call
mov
sub
mov
add
lret
sub
ja
movsl
movsl
pop
sbb
add
sub
mov
lcall
adc
in
lock
pop
or
jge
jne
ret
shlb
pop
rcll
in
in
daa
ss
push
jp
or
and
lock
push
ret
out
sub
and
sbb
ja
and
test
in
cld
vcvtps2pd
sub
jbe
nop
push
fwait
ret
inc
arpl
or
jne
lea
xor
mov
aam
pop
icebp
and
dec
divl
xchg
add
repnz
pop
and
ja
dec
dec
or
pop
sbb
cmp
inc
aaa
and
jl
mov
mov
sbb
mov
jne
push
pop
int3
add
cmp
mov
adc
jb
jge
adc
pusha
sbb
adc
aas
jl
enter
int
mov
and
adc
dec
and
push
mov
mov
outsl
mov
test
pushl
xor
loop
ret
xor
fstps
mov
sbb
adc
icebp
enter
jle
and
jne
lea
popa
add
std
mov
add
les
mov
push
mov
cmp
jmp
shll
fucomip
stos
bound
or
or
mov
cmp
popf
lret
pop
inc
cs
add
or
jmp
das
mov
jl
mov
inc
and
mov
pop
adc
in
insl
adc
xor
push
xchg
add
pop
fld1
mov
lahf
mov
loope
add
lahf
or
add
dec
and
fbld
cmp
inc
or
push
add
je
hlt
daa
mov
inc
push
inc
sbb
jae
mov
or
jmp
ss
jecxz
add
sub
sub
rclb
mov
add
cmp
xchg
movswl
nop
nop
add
rclb
add
ja
call
out
jmp
popa
clc
sbb
psubb
jmp
bound
movb
out
dec
dec
daa
push
xor
adc
push
and
test
push
int
push
and
inc
cmpsl
test
mov
push
pop
cltd
stc
sbb
imul
pop
das
add
push
mov
and
xor
jp
mov
iret
add
mov
movl
dec
in
movsb
sbb
adc
mov
add
push
push
mov
xor
insl
je
or
or
pop
das
sahf
push
ret
push
in
and
addl
mov
enter
push
push
mov
lcall
xchg
cs
lods
setle
out
add
or
mov
imul
cltd
inc
testb
aam
dec
loope
shrl
call
push
repnz
sub
pop
and
add
adc
mov
or
mov
hlt
loopne
jae
pop
sub
addr16
outsl
jb
out
and
or
and
mov
add
mov
sti
aas
insb
data16
cmp
jb
inc
sbb
pop
cmp
or
sub
add
dec
faddl
out
xor
aaa
sbb
cmp
dec
sbb
mov
pop
mov
insb
imul
dec
xor
lods
inc
push
mov
jno
push
mov
xor
sbb
sbb
dec
or
ja
scas
test
mov
pop
sti
jb
inc
clc
fwait
addl
or
testb
push
xor
mov
cmpsb
arpl
clc
rolb
rorb
add
dec
int
out
loopne
cs
or
and
call
xor
push
dec
sbb
pop
mov
test
add
loopne
lock
jecxz
pop
dec
nop
jbe
jge
sarb
loope
adc
pushl
xchg
adc
lret
test
mov
imul
or
push
add
inc
lea
ljmp
and
inc
inc
out
sbb
hlt
cmp
data16
jl
clc
and
mov
pusha
lret
push
fisubl
xchg
pop
add
mov
sub
or
xlat
in
pop
icebp
jge
imul
jle
andl
cmp
jo
add
and
sbb
jle
cmp
stc
sub
sbbl
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
add
and
xor
jmp
leave
push
sbb
and
push
test
pop
movl
push
xor
dec
inc
ja
adc
push
sbb
jl
icebp
imul
pusha
ret
sbb
clc
in
hlt
add
pop
inc
fstl
add
cmp
xchg
fdivr
xor
push
ja
push
lahf
shlb
jg
jle
stos
and
je
inc
mov
repz
or
fldenv
jne
roll
mov
pusha
add
insb
inc
mov
in
pop
test
add
scas
mov
pop
xchg
lahf
xchg
push
sbb
je
mov
loopne
je
jns
scas
mov
out
dec
xor
mov
mov
jne
mov
dec
sbb
xchg
call
push
add
push
in
inc
mov
inc
lock
scas
pop
mov
cmpb
mov
dec
sti
decb
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
lcall
mov
pushf
enter
fcmovne
movsl
inc
mov
jnp
iret
mov
sbb
push
push
adc
sbb
inc
mov
add
inc
and
xor
push
adc
cmp
cmp
inc
scas
push
ficomps
lcall
add
dec
in
mov
in
das
iret
cs
add
insw
xor
push
xchg
pop
test
mov
xor
loop
pop
mov
imul
or
inc
sbb
adc
dec
icebp
jae
mov
adc
iret
mov
push
sub
or
and
rol
in
jecxz
push
adc
int
scas
xor
lret
stc
xor
sarb
xor
jo
and
ljmp
mov
add
adcl
loope
insb
cld
inc
pop
jecxz
adc
cmpsb
out
cmp
je
dec
sbb
and
fdivrl
cmp
xchg
pop
addr16
outsb
cmpsb
jmp
cld
test
xchg
hlt
xor
jne
cmpl
mov
inc
and
cmp
xchg
cmp
and
push
adc
cmp
sbb
gs
loop
icebp
and
sub
dec
sbb
and
lea
cmp
cs
push
and
scas
addr16
push
and
aam
adc
adc
addr16
ds
jmp
push
pop
inc
cmp
sbb
fprem1
cli
inc
insl
sub
lret
mov
push
dec
pop
sub
mov
cmp
jbe
xor
push
inc
repz
fisttps
add
movsb
in
pushl
or
cmp
lret
adcl
dec
fldpi
inc
popa
je
into
sahf
dec
pop
stos
pop
je
pop
push
xor
mov
adc
add
je
cmc
push
stos
mov
adc
sub
lock
push
flds
jle
mov
dec
adc
loopne
fmull
lods
dec
push
out
mov
pop
xchg
sub
push
add
adc
std
xor
and
jmp
incl
xor
loope
jb
push
nop
sbb
mov
ret
js
xchg
popa
xchg
inc
pusha
or
les
mov
pop
add
dec
test
pop
and
mov
lahf
xchg
add
insb
mov
sub
fmuls
mov
cmp
ss
jmp
sbb
test
xor
add
sbb
adc
mov
add
inc
pop
je
pop
es
pop
int
or
dec
cwtl
sbbl
mov
ds
imul
stc
mov
fiaddl
pop
cld
pop
dec
icebp
xchg
xchg
loopne
or
pop
dec
call
cmp
push
mov
mov
jns
fcmovu
add
xor
inc
pop
aam
pop
add
popa
adc
jg
add
lea
add
inc
sbb
cmp
mov
dec
cli
inc
mov
rcrl
xor
xor
and
nop
dec
pop
lds
cld
cmpsb
and
sarl
lock
out
stos
nop
nop
push
pop
xchg
aas
jae
nop
sub
mov
mov
lock
mov
ss
mov
and
jge
frstor
xchg
dec
mov
xchg
hlt
xor
lock
add
or
mov
pop
lret
cmp
orb
jne
mov
inc
inc
adc
pop
add
and
xchg
and
mov
add
xlat
outsb
mov
data16
insl
xlat
cmp
dec
inc
inc
or
jne
repnz
add
push
sar
mov
xor
xor
push
dec
arpl
mov
imul
js
and
clc
dec
lea
mov
cld
dec
adc
xchg
jecxz
xor
jmp
mov
add
sbb
fimull
or
sti
or
ljmp
lock
loopne
imul
popf
sub
pop
lock
xor
movsl
rol
mov
jmp
subl
pop
push
dec
mov
or
out
loopne
or
jle
pop
enter
into
jmp
add
out
bound
decl
and
push
and
imul
mov
outsl
add
jge
mov
cwtl
add
mov
sub
popa
std
mov
les
nop
mov
stos
inc
sub
pop
pop
adc
add
jb
outsb
lock
fcmovbe
sbb
and
mov
in
andb
ret
adc
push
cmp
daa
adc
insl
xchg
pop
sar
sarb
jg
popf
sbb
or
adc
and
add
add
add
push
mov
cmp
jne
stos
lcall
adc
cmp
mov
add
out
add
and
pop
sub
inc
add
and
addr16
loope
pop
push
incl
hlt
inc
adcl
inc
jmp
xchg
repz
or
or
addb
push
data16
xchg
andl
testb
mov
xchg
clc
and
inc
pop
inc
in
push
aaa
stos
mov
jmp
mov
jne
add
sbb
or
popf
or
mov
movl
add
add
mov
jmp
mov
cmp
adc
inc
lods
push
adc
test
add
sbb
cmp
sbb
out
mov
loopne
or
sub
stos
fbld
push
subb
adc
mov
lock
mov
test
dec
lock
pop
add
and
jg
jmp
test
adc
loopne
or
xor
sub
fcomi
not
push
sar
clc
rcll
add
sub
movd
mov
mov
and
jb
clc
lds
data16
ret
sub
sub
push
mov
mov
push
mov
in
mov
insl
loope
mov
test
push
popa
push
inc
rclb
in
cmpb
adc
jae
dec
or
test
imul
or
scas
cli
cmp
add
ret
in
movsl
or
lock
push
add
mov
push
jae
push
xor
add
dec
jmp
sub
fadd
mov
sub
dec
push
call
inc
adc
repnz
sahf
push
cmpsl
repnz
fiadds
cmp
js
cmp
out
jl
sbb
adc
test
push
sbb
or
dec
ss
xor
pop
js
add
loop
ljmp
mov
sbb
repnz
ret
test
cld
out
add
inc
movsb
push
mov
push
pop
xor
cmp
and
iret
outsl
lea
or
inc
and
mov
jno
lock
fsubl
sti
or
lock
test
lock
cmp
inc
xor
inc
shl
stos
sub
cwtl
fcmove
outsb
lcall
fsub
push
inc
je
mov
insl
jge
stos
adc
in
fdivrl
push
in
push
ret
xor
or
and
mov
fcoml
lcall
dec
inc
iret
decl
mov
sub
out
je
test
arpl
les
adc
xlat
and
mov
push
mov
and
mov
jg
lahf
push
mov
and
cmp
mov
cmp
das
inc
jo
lds
aas
add
add
mov
jmp
test
roll
dec
add
movsb
ret
fldenv
or
or
mov
rol
mov
sbb
popf
dec
fs
sub
cmp
ret
ret
out
shr
sbb
sub
inc
sub
jmp
and
mov
ds
push
jne
adc
and
cmp
jne
shrb
adc
outsl
jo
cmp
adc
mov
jmp
into
imul
insb
in
xchg
fsubr
push
fsubl
fisttpll
mov
sbb
mov
jae
int
add
inc
in
aam
int
dec
push
stos
xor
iret
test
movsb
lock
pop
jp
lds
xor
rclb
xor
sub
movsb
adc
jg
jl
cmp
jg
inc
jmp
inc
hlt
or
jbe
jne
imul
sahf
or
cmc
aas
sbb
add
xor
sbb
xor
cwtl
rcr
fsubs
popa
mov
pop
adc
cmp
add
inc
push
mov
sarb
fimull
sti
lds
idivb
xor
outsl
cli
jne
push
ja
cld
and
push
xlat
pop
add
loop
pusha
roll
pop
or
adc
hlt
je,pn
add
sbb
inc
mov
cmp
insb
sub
dec
push
sbb
dec
cs
xchg
or
aad
sbb
les
mov
movl
test
call
js
adc
and
cmp
xlat
movsl
add
lcall
inc
and
push
add
pop
or
cmp
or
test
test
fldt
dec
adc
push
or
dec
dec
inc
loopne
dec
mov
repz
andl
mov
and
jle
sbb
jmp
call
jg
mov
push
insb
jae
in
test
pushf
or
or
cltd
cmp
xor
add
sub
and
sar
mov
fs
cmp
mov
leave
push
pushl
pop
xchg
out
pop
xchg
pop
dec
add
jecxz
dec
imul
xchg
jns
pop
clc
adc
jmp
sahf
xchg
push
in
mov
cmp
loopne
stc
sub
cmpsl
test
or
jne
inc
sbb
add
movsb
mov
push
cmpsl
fcoml
dec
jmp
imul
sub
cltd
and
sbb
pop
or
jg
mov
push
stos
xchg
shrb
mov
inc
or
push
js
or
in
xchg
les
iret
add
inc
inc
jl
push
test
xor
inc
add
or
add
add
daa
faddp
xchg
dec
or
jg
pop
fidivs
mov
add
xchg
sbb
pushf
sbb
cs
fstpt
mov
roll
and
push
push
adc
mov
pop
xor
loope
sub
lret
cltd
daa
add
add
std
push
pop
jl
mov
leave
inc
mov
leave
xchg
mov
fstl
cmp
ret
call
nop
les
sbb
cli
js
fnstcw
adc
or
add
inc
inc
sbb
and
insl
jp
pop
xchg
cmp
fsubrs
fwait
repnz
aaa
mov
mov
fdivs
and
push
clc
addl
sub
mov
mov
gs
popf
arpl
pop
cmp
dec
clc
insb
cmpsb
pop
adc
inc
mov
cmc
inc
or
sbb
rorb
fwait
or
inc
js
cmp
dec
cmc
xchg
inc
dec
shlb
jbe
loop
xchg
divb
insb
inc
sub
add
add
and
andb
data16
pop
lods
pop
mov
mov
rcl
cmpl
roll
jle
mov
xor
mov
les
push
push
ja
add
ret
fpatan
popa
or
mov
pushf
mov
or
in
dec
mov
fimull
gs
or
dec
add
inc
cwtl
or
test
xor
andb
mov
inc
insb
xor
push
add
and
mov
cwtl
sti
xor
repnz
and
sbb
add
repz
mov
out
into
in
stos
sub
test
je
jbe
cltd
aam
push
cmp
cli
fstpl
cmpl
mov
inc
sbb
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
cmovs
mov
testb
dec
inc
add
push
dec
pop
xlat
ss
std
bound
enter
sbb
popa
repnz
ret
or
cwtl
pop
adc
pop
aam
xchg
adc
add
xor
out
and
mov
add
inc
lock
ja
fcoms
mov
and
jmp
xor
inc
xor
xor
int3
mov
adc
sub
sbb
add
and
ret
dec
push
icebp
enter
adc
cli
inc
cs
push
pop
arpl
mov
std
rorb
pop
inc
sub
xchg
jns
push
xor
xor
test
jb
pop
clc
mov
push
sbbb
xchg
out
aas
sbb
in
pop
je
pop
cmc
and
insl
push
cmp
rorb
push
push
and
xchg
add
into
nop
dec
jb
push
in
fistl
xor
push
cmp
jl
cmp
mov
jg
inc
dec
adc
dec
or
xchg
pop
dec
hlt
aas
sbb
les
fucomp
pop
lock
jne
clc
push
mov
aaa
ret
cmp
popa
stos
into
push
dec
rorb
mov
jb
and
movsb
sub
lods
dec
cmp
daa
push
bnd
add
in
dec
nop
sbb
dec
sub
stos
mov
adc
mov
pusha
cmp
scas
mov
xchg
pop
mov
mov
mov
fcmove
mov
or
dec
incl
sbb
adc
and
mov
add
or
cwtl
dec
mov
mov
jns
jne
jmp
mov
in
rcll
mov
add
mov
adc
dec
lret
in
out
add
pop
jle
lea
lock
movsb
adc
das
adc
xor
inc
je
mov
inc
and
add
loop
add
dec
loope
push
or
aam
mov
loope
test
jle
add
cltd
dec
adc
jno
and
std
xchg
mov
adcl
sbb
sahf
mov
cmp
in
add
hlt
outsb
fnstsw
adc
in
adc
xor
mov
pusha
jbe
add
push
test
decl
daa
jg
adc
orl
call
lret
pop
hlt
sarb
dec
mul
aad
jb
push
ret
lock
sbb
test
int
fadds
mov
cmc
xchg
lock
ss
jecxz
xor
std
jb
cmp
pusha
test
push
pop
test
addb
and
imull
repnz
inc
sbb
mov
out
adc
lock
add
mov
and
mov
lret
mov
push
mov
jmp
adc
mov
pop
mov
mov
dec
dec
and
pop
lock
cmp
sbb
mov
nop
mov
adc
cmp
jb
testb
imul
pop
cmp
addl
sub
movb
and
mov
xor
lods
adc
sub
add
or
xor
push
es
push
fsts
and
call
and
js
mov
adc
dec
mov
ret
push
push
mov
inc
or
mov
add
insl
cld
xorb
pop
shlb
fstpl
pop
jmp
push
dec
jecxz
sub
pop
pop
add
imul
lahf
push
or
pop
ret
sbb
outsl
sub
push
or
add
rcrb
outsb
mov
fs
testl
sub
jmp
rcr
or
div
pop
dec
adc
fildll
inc
inc
mul
pop
jb
cmp
or
cmp
out
gs
or
xor
and
adc
test
fcmovu
ficompl
and
fxch
mov
xchg
rcr
adc
adc
test
mov
fiaddl
ret
xor
add
leave
jne
mov
loop
test
fimull
lock
lods
mov
stos
inc
xchg
lods
das
and
pop
xchg
fcompl
insb
lcall
sbb
dec
dec
add
push
sbb
loope
cmpl
xor
shrl
or
out
dec
and
jecxz
cmp
pusha
push
jae
mov
sub
test
ret
or
inc
pop
clc
sbb
cmp
lea
xchg
adc
jbe
and
pusha
push
push
dec
and
mov
add
mov
or
and
dec
xor
add
jl
mov
push
mov
cld
sbb
adc
sahf
lds
add
push
adc
xchg
inc
jl
mov
adc
test
xchg
jne
push
push
sub
jg
lock
movsb
mov
or
sbb
pop
sub
sbb
fildll
je
xchg
cli
adc
jbe
mov
jbe
pop
mov
or
cltd
inc
and
popf
mov
inc
and
jmp
xor
adc
popl
in
and
push
lcall
je
adc
enter
sbb
mov
jle
into
push
or
push
inc
mov
negl
sub
add
sub
or
mov
fisttpl
add
mov
rcrl
cs
ljmp
add
cmp
xor
out
mov
scas
jle
push
pop
mov
insb
dec
jnp
aam
sbb
or
test
inc
les
sub
inc
mov
cmpl
push
or
jbe
cmp
adc
ss
in
and
sub
loope
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
enter
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
popa
xchg
movsb
sub
je
cmp
out
cmp
or
imul
and
xor
jle
or
imul
and
nop
inc
lcall
sub
cld
dec
enter
add
lcall
inc
insb
pop
xor
repnz
inc
push
jo
imul
lods
sub
jns
cmpsb
xchg
xchg
inc
ret
cmp
test
push
inc
add
dec
jne
aad
sahf
inc
out
cmpsb
or
in
push
nop
lret
sbb
aad
push
icebp
addr16
orb
adcl
jne
pop
adcb
add
mov
or
pop
cmp
and
xor
add
fmul
xlat
aam
inc
xchg
lret
mov
pop
movsb
mov
pop
push
mov
inc
xor
les
add
jo
testb
xor
inc
pop
cltd
add
pusha
fwait
lcall
aaa
pop
lods
mov
push
xor
pop
cmp
xor
or
nop
xchg
das
cmp
test
dec
fmul
sahf
les
adc
ret
ret
negl
popa
fadds
add
fmuls
lret
dec
pop
fistpll
sbb
push
popf
imul
fistl
sbb
inc
sarb
pusha
jae
es
push
jl
sbb
inc
aam
add
or
push
in
je
push
pushf
mov
jge
inc
push
dec
and
and
adc
loopne
test
xchg
mov
scas
dec
or
sbb
ret
lret
addr16
or
dec
repz
les
and
cmp
pop
mov
int3
nop
cmp
xchg
scas
clc
mov
push
or
cmpb
pop
or
mov
or
dec
movsl
and
stos
adc
adc
adc
clc
mov
iret
jl
adc
sbb
test
cmpsb
popa
in
sub
dec
adcl
jecxz
subb
adc
adc
test
hlt
or
cmp
mov
lcall
ds
addr16
sarl
ljmp
sbb
cmp
pushf
test
sbbl
dec
loop
cld
cli
jns
jl
cmp
in
sub
jb
push
mov
push
push
addb
and
mov
xor
incl
mov
movsbl
and
subl
cmp
sub
ljmp
jno
notb
xor
jmp
lods
test
aas
mov
sbb
test
lcall
ja
gs
dec
mov
in
add
in
fbld
cmp
test
scas
shrl
cs
fucom
xor
push
std
push
xor
out
lds
sarb
out
mov
add
sar
inc
out
cmpsl
mov
or
mov
sbb
negl
insb
sbb
jne
aad
adc
pop
ret
adc
adc
stos
enter
jae
mov
sbb
jmp
mov
bound
jl
inc
pushl
dec
ja
out
mov
jns
call
sub
loope
popf
xchg
cvtdq2ps
jae
test
sahf
xchg
sbb
and
inc
inc
mov
mov
or
or
dec
aam
cmp
sub
pop
clc
fistpll
mov
mov
mov
stos
jmp
add
lods
ss
cmpsb
or
cmp
add
pop
or
enter
push
mov
rcrb
dec
inc
push
xchg
pop
loopne
jo
lret
inc
call
jmp
mov
push
dec
inc
lea
pushf
rolb
subl
xor
cmpb
lods
jnp
fs
pusha
cmp
pop
pusha
mov
imul
cmpsl
test
sahf
mov
test
push
jp
push
xor
sarl
cmp
test
mov
sub
add
int
push
test
jnp
or
push
add
jne
inc
mov
icebp
cmp
or
add
and
mov
scas
cmp
sub
paddq
rcrb
ficoms
mov
out
inc
int
push
decl
adc
hlt
daa
inc
std
hlt
lahf
push
shlb
xchg
iret
test
add
repnz
dec
add
pop
cmp
lods
or
xor
cmp
jmp
sub
fidivrs
jmp
adc
push
sysenter
sbb
movsl
call
xchg
sbbb
rolb
or
out
mov
mov
in
jbe
popl
xchg
mov
andl
dec
jge
add
lock
pop
divl
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
mov
sub
and
out
loopne
sbb
inc
add
sbb
daa
jmp
pop
xchg
sbb
sbb
in
jl
add
addr16
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
popf
loopne
out
add
push
xchg
mov
pushf
sub
addb
test
inc
inc
xchg
js
sbb
cmp
jmp
scas
sub
out
cmp
mov
add
adc
and
mov
mov
mov
ret
sub
jns
test
testl
push
jo
lret
jmp
pop
rorl
repz
nop
lods
mov
insb
ja
lret
xorb
bnd
cltd
sub
rorl
bound
ljmp
sahf
cmp
adc
xor
rorb
mov
inc
sbb
pop
psubsb
jg
rclb
adc
movsl
mov
pop
test
jecxz
lret
cmp
test
mov
leave
jne
call
push
xor
xlat
push
loopne
mov
test
mov
sbb
pop
icebp
push
mov
push
jnp
inc
pop
test
call
xor
xor
mov
xor
adc
fcoml
adc
into
repz
or
pushf
push
sbb
mov
xor
icebp
inc
adc
adc
inc
add
inc
and
std
mov
std
xor
adc
mov
xchg
push
xor
mov
fwait
push
add
dec
push
and
mov
aaa
xor
sbb
or
push
scas
dec
arpl
out
inc
sub
and
lahf
imul
stc
mov
push
pop
inc
xor
ret
test
out
pushf
cli
sbb
arpl
add
fldl
mov
add
nop
std
into
mov
rcl
jmp
cmp
mov
xlat
movsb
adcl
sub
xchg
pushf
and
sbb
sub
cmp
orl
sub
add
pop
xchg
adc
shl
jge
mov
pop
mov
push
shlb
gs
jne
sub
loope
andl
js
rclb
jl
dec
cmp
stos
jge
adc
jbe
addr16
pop
push
mov
jne
or
add
je
mov
inc
or
cmpb
push
jne
add
mov
nop
jge
and
adcb
push
movb
jecxz
lods
pop
faddl
pop
mov
incl
mov
and
cmp
int
insl
sti
sbb
add
clc
je
or
xor
pop
mov
ljmp
lahf
inc
loopne
in
jle
pop
add
sub
les
mov
in
mov
xchg
data16
push
and
lahf
bound
mov
pop
jl
addr16
xor
shrb
pop
sbb
cmp
cwtl
and
add
hlt
mov
icebp
adcl
sbbb
push
adc
adc
jle
cmp
sbb
cmp
mov
data16
lock
mov
lret
push
dec
int
adcl
jmp
icebp
xor
cmp
cld
mov
test
dec
cmp
add
mov
push
add
pop
sarl
push
xchg
pop
or
pop
pop
cmc
mov
gs
cmp
inc
sbbb
fs
sbb
pop
push
repz
mov
cmp
mov
fistpl
mov
push
cmp
mov
orb
inc
lret
fcomps
aam
mov
cmp
jo
sub
and
push
cmp
nop
repnz
push
sub
xorb
popa
cwtd
jmp
or
cmp
test
cmp
and
mov
xchg
sub
mov
in
mov
or
jo
mov
sbb
data16
lds
js
inc
sbb
mov
jmp
sbb
add
js
lahf
xor
push
clc
sbb
mulb
inc
xor
aam
dec
jbe
jbe
mov
mov
and
notb
mov
testb
xchg
ficomps
mov
adc
inc
lock
or
jl
aas
inc
bound
or
or
adc
mov
jmp
or
inc
adcb
xor
inc
outsl
inc
xchg
rcl
xor
dec
lods
andb
int3
dec
inc
mov
and
movsb
xchg
mov
sbb
or
adc
cmp
inc
xor
and
inc
les
or
ror
rorb
popf
xchg
pop
and
or
and
frstor
sbb
bound
movsb
into
xor
inc
push
pop
hlt
sti
scas
cmp
push
popf
pushf
pop
sub
je
push
popf
ds
add
outsb
cpuid
cmp
sar
sahf
and
data16
pop
negl
outsb
and
je
sahf
cmp
push
dec
adc
stc
and
jo
cmp
arpl
add
push
or
sub
fisttpll
test
push
or
and
nop
addl
insb
push
mov
xchg
test
and
add
or
or
jns
or
nop
fcmovnu
sbb
loope
not
xor
loope
sbb
divb
leave
and
shr
xchg
fildl
add
gs
push
test
push
add
add
push
in
push
or
add
cwtl
xor
push
mov
je
je
add
sbb
or
push
les
subl
inc
jmp
mov
outsl
push
clc
incb
adc
lock
ja
frstor
cld
mov
and
aaa
in
data16
out
jmp
xchg
rorl
test
xor
or
inc
std
shll
sub
lods
sbb
es
or
flds
and
test
mov
pusha
loope
pop
xchg
adcb
sub
mov
inc
jecxz
dec
sub
adc
fnstsw
pusha
aam
je
pusha
insl
arpl
sbb
call
outsl
adc
inc
or
fs
adc
lret
sub
add
add
loop
out
test
fisttps
std
and
mov
shl
mov
and
dec
jne
orl
push
sbb
mov
in
push
jmp
testl
fcmovbe
cwtl
es
jb
divb
sub
and
inc
add
adc
add
inc
flds
fsts
mov
inc
or
or
pop
push
push
jmp
add
push
mov
pop
sbb
es
inc
ss
inc
popa
push
cmp
xorl
inc
lcall
push
aas
xchg
jbe
push
xor
lret
jp
xor
movl
mov
aaa
sbb
out
push
pop
fsubrs
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
nop
psubusw
inc
test
int3
adc
roll
repz
lcall
sub
adc
into
or
mov
lcall
add
cmp
cmp
clc
jbe
or
or
jbe
push
mov
inc
out
adc
lods
scas
mov
pop
div
test
cmp
mov
add
mov
fs
sarb
test
mov
jle
cmpsb
not
insl
in
adc
pop
orl
loopne
cmpl
int3
mov
push
push
and
sahf
jmp
pop
movsb
push
add
pop
fsubr
aam
sbb
adc
xchg
and
mov
decb
push
and
fadds
mov
ficomps
out
mov
mov
push
add
int
add
js
and
or
inc
js
add
add
xor
push
out
faddl
add
loope
shl
push
pop
movzbl
inc
stos
ljmp
mov
je
add
movsb
sbb
test
js
or
add
shrl
mov
and
xchg
out
pop
sub
push
adcb
adc
mov
out
popa
xor
push
mov
testl
pop
jo
dec
inc
and
add
subps
inc
or
or
adc
xchg
adc
jl
or
dec
adc
fneni(8087
add
sub
fmul
cmp
mov
push
push
frstor
sbb
add
add
pop
nop
punpckhdq
inc
sbb
or
mov
and
sub
xor
dec
inc
inc
addr16
add
lret
popa
nop
mov
xor
inc
lock
mov
adc
and
mov
jg
jae
movsb
fst
stos
std
mov
inc
test
inc
mov
addr16
lahf
sarl
dec
inc
pmaxsw
rolb
rcrl
push
mov
or
shl
jne
mov
cmpsl
and
sti
gs
loope
jl
mov
dec
jecxz
mov
sbb
xchg
push
pushf
and
ret
aas
into
push
pop
fadds
into
sbb
mov
addl
or
lret
adc
fucomip
leave
test
cmovge
push
cmp
adc
adc
inc
stos
sbb
gs
or
xor
subl
incb
push
mov
push
pusha
iret
scas
xchg
nop
je
mov
cmp
push
add
xchg
scas
sbb
sub
shr
loop
pop
or
xchg
ljmp
mov
fstp
mov
adc
inc
add
dec
cltd
fstps
data16
xor
mov
push
push
mov
add
adc
fldt
fwait
out
and
cld
sahf
adc
sbb
lods
rolb
les
or
lods
ret
jle
call
mov
ja
xor
push
cmpl
hlt
insb
sbb
add
ldmxcsr
pop
push
inc
in
xchg
and
inc
or
and
test
adc
and
repz
lcall
push
mov
aas
rolb
and
adc
lea
adc
xchg
data16
stos
xor
je
or
pop
sub
shll
bound
pop
test
sahf
xor
sub
push
mov
data16
pop
movsb
nop
das
jbe
mov
lods
clc
add
push
or
int
mov
adc
push
push
dec
adc
test
cmp
jo
dec
mov
gs
mov
cmpb
xor
psubsb
xchg
andl
test
test
sbb
and
ficoms
adcl
enter
dec
out
mul
andb
mov
rolb
add
jp
xor
inc
sub
pop
jge
enter
cmpw
and
repz
les
xchg
xor
dec
dec
cmp
mov
push
loopne
inc
adc
push
mov
ficomps
xor
push
or
shrb
jecxz
in
sub
mov
daa
adc
mov
adc
daa
scas
cwtl
pop
test
pop
pop
loope
jne
push
add
sbb
gs
stos
stos
repnz
pop
pop
mov
popa
movsl
hlt
inc
es
jmp
xchg
jo
dec
xchg
mov
cltd
and
add
cmp
mov
add
shl
loopne
lea
pop
into
sub
inc
shl
lret
sub
add
mov
loop
rolb
adcl
pop
cmp
dec
cltd
insb
pop
and
psubd
jle
and
into
loopne
push
fidivs
mov
lea
xor
repnz
dec
es
or
jb
cmp
push
sbb
sbb
in
movsl
cmc
adc
jb
incb
jae
mov
or
mov
adc
jns
nop
movsb
sbb
loopne
and
jge
pop
push
sbb
push
jo
loopne
or
pop
lahf
add
in
jo
insl
shrb
or
dec
stos
adc
or
inc
sbb
lret
sahf
xor
push
aam
xor
xchg
push
or
mov
movsl
call
add
andl
je
out
shll
lahf
and
push
cld
not
push
pop
popf
je
insl
movsb
or
and
push
fwait
fwait
cmp
out
push
or
and
lock
xor
and
addb
add
xchg
or
jl
mov
xchg
lcall
xor
adc
mov
popa
pop
jl
push
mov
hlt
test
adc
push
orl
lcall
lea
mov
cli
scas
jbe
sub
jge
cmp
pop
sbb
add
lea
decl
jp
adc
dec
jns
inc
lock
push
dec
and
popa
or
mov
test
inc
mov
addl
mov
jl
inc
xor
pushf
mov
clc
dec
dec
hlt
lea
add
fcompl
gs
xchg
lret
stos
mov
pop
aam
mov
iret
and
cmp
mov
or
sbb
add
ret
jge
ret
add
pop
scas
sarl
sbb
pushf
aas
add
or
mov
or
adc
add
xchg
inc
arpl
in
fwait
add
and
sub
pop
push
sbb
xchg
inc
push
enter
int3
add
xchg
and
cld
add
in
sbbl
and
mov
push
and
aas
and
cmp
dec
mov
clc
or
jl
push
in
roll
add
rclb
jl
push
adc
ljmp
push
push
adc
stos
adc
inc
shll
test
mov
dec
mov
sbb
loopne
mov
nop
daa
fwait
mov
lods
mov
ljmp
cmpsb
out
or
loop
jne
inc
jmp
mov
xchg
xor
push
das
xchg
mov
test
in
aaa
mov
enter
cmp
ja
push
dec
jmp
fs
mov
add
mov
add
es
add
call
imul
in
subb
prefetcht0
ret
fcomps
scas
loopne
imul
mov
jmp
cmpsl
mov
sub
inc
and
push
sub
and
iret
rclb
mov
mov
cmp
push
incb
jg
orl
lss
int3
push
jbe
xor
iret
loopne
popf
call
cmp
and
rolb
dec
aaa
fnstcw
jae
mov
ret
push
inc
sub
push
insb
inc
mov
mov
loop
pop
mov
fbstp
mov
add
out
mov
adc
jae
imul
sbb
or
inc
jno
and
clc
sbb
scas
fisubrl
call
decb
out
arpl
pop
push
sub
aas
call
in
orl
sahf
jne
cmp
xchg
push
and
lahf
inc
test
stc
sub
cmp
mov
jbe
sub
mov
mov
pushl
mov
shll
test
or
sub
xchg
out
cmp
pusha
ud0
xor
jl
incb
dec
mov
rolb
shll
rcr
repnz
add
cmpl
mov
popa
jmp
cld
push
sbb
and
sub
jle
push
jmp
or
jecxz
add
fsubr
push
out
pushf
jmp
push
cwtl
imul
sbb
icebp
xor
mov
or
rorb
pop
push
jmp
in
mov
cmp
sub
sub
push
cwtl
jge
imull
test
fadds
dec
adc
les
int
sub
cmp
cmp
jge
mov
sbb
outsb
jg
sarb
ret
or
enter
sub
xor
jne
sbb
lods
cmp
in
dec
cld
add
sarl
imul
sub
and
jo
rorl
cmp
jb
mov
dec
mov
xor
mov
or
roll
push
es
decb
mov
mov
ret
and
jne
and
rorb
iret
xchg
testb
xchg
lahf
ja
mov
ja
pop
lods
push
fnsave
mov
pop
mov
pop
daa
movb
testl
xor
jne
jne
mov
jne
test
into
jne
inc
or
cmp
cmp
jne
hlt
or
divb
jne
mov
inc
or
test
rcrl
or
int
add
push
lea
int3
lea
xor
push
ret
sub
sahf
add
icebp
dec
lock
adc
push
data16
sti
dec
push
add
sahf
sub
sub
cltd
xor
stc
jg
add
dec
sbb
das
xchg
clc
test
js
dec
or
dec
sbb
aam
gs
insb
xor
or
shr
ljmp
mov
pop
mov
jg
and
pop
or
adc
inc
mov
les
jno
mov
je
pop
or
test
mov
fcom
insl
dec
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
and
jo
dec
aam
shrl
das
int3
sarb
mov
push
ja
aam
loope
or
shrl
sub
je
insl
xchg
push
add
fisubl
cmp
pop
es
addl
push
call
lods
jmp
fidivl
dec
pop
jle
jb
cmp
adc
fmull
jo
dec
ja
orb
sbb
or
sub
sbb
mov
lds
push
push
into
jmp
scas
add
shlb
sbb
and
pop
pop
rclb
movsb
int3
movl
mov
rcl
jne
push
lret
das
jo
ficomps
xchg
add
negb
xchg
daa
sbb
movups
testb
mov
inc
mov
pop
push
dec
mov
add
rclb
ss
test
xor
lds
iret
pop
xor
repz
jbe
loopne
int
test
or
adc
mov
add
or
inc
cs
aam
jne
cmp
stos
pop
pop
mov
xchg
jle
inc
mov
mov
inc
add
es
rorl
jl
cmp
stos
adc
in
sbb
mov
pop
sbb
xchg
adc
adc
lret
cs
or
ss
ficoml
push
cmp
je
or
out
mov
dec
cmpb
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
push
inc
shll
fcom
das
fcompl
gs
add
add
mov
out
pop
pop
adcb
ficoml
mov
xor
sub
and
xor
repz
aaa
cmp
push
add
arpl
pop
jno
sub
shlb
and
or
pop
adcb
sti
mov
gs
xchg
mov
add
mov
cmp
shrb
fdivs
or
add
jmp
sub
das
mov
and
dec
setg
aam
lahf
test
mov
mov
add
jg
xor
aas
sub
movb
lea
mov
jle
add
pop
iret
add
ficoml
cli
mov
es
sbb
call
loop
lock
lcall
insl
mov
add
push
test
fstpt
mov
push
lea
mov
mov
mov
int
xchg
cmp
add
and
bound
jl
or
mull
xchg
xlat
movsb
cld
xor
push
or
add
xchg
aam
sub
add
and
add
xchg
shr
rolb
inc
add
lods
dec
ja
and
mov
pop
pop
push
sub
xor
pop
mov
int
inc
inc
inc
add
cmp
outsl
outsl
inc
pop
adc
loope
xchg
dec
cmp
enter
aam
mov
rcll
adc
or
ss
fidivl
les
inc
addr16
sbb
adc
ret
add
xchg
xor
sub
fsubrl
sub
mov
and
jl
popa
sbb
or
lcall
xor
call
mov
dec
je
jmp
xchg
xchg
fldl2t
call
in
das
xchg
jge
cmp
jle
mov
fcoml
push
das
add
pop
cld
xchg
addl
or
push
and
test
popa
sbb
xor
add
jae
mov
or
sar
add
pop
notl
jo
add
enter
inc
movb
jno
loopne
ret
das
xchg
xchg
out
push
xor
push
mov
outsb
loopne
js
xchg
or
push
dec
inc
xor
leave
and
add
add
movb
ja
gs
sar
or
je
mov
dec
fwait
ljmp
add
sub
loopne
lock
ret
daa
xor
or
and
shll
cmp
sahf
jnp
add
incb
push
xor
icebp
nop
mov
aam
push
sub
adc
jg
xor
bound
sub
xchg
nop
push
sub
adc
dec
adc
cmp
ss
push
movswl
les
push
data16
shlb
scas
mov
ret
mov
mov
dec
shrd
push
jle
dec
xchg
ss
ss
add
test
push
cmpsl
clc
mov
sbb
pop
or
cmp
nop
stc
inc
dec
cs
dec
jmp
xchg
clc
mov
mov
push
or
mov
call
and
push
push
mov
push
push
xor
mov
jmp
add
jo
jge
cmp
inc
out
add
mov
shrl
call
add
sarl
jg
jb
push
sub
or
pop
cmp
fidivrl
rorl
dec
lahf
daa
and
inc
shll
fimull
faddl
incb
add
jbe
test
mov
jle
add
add
fimull
bound
inc
dec
sahf
sub
dec
pop
or
or
pop
rcrb
lcall
loopne
mov
mov
mov
das
es
mov
inc
add
xor
inc
loope
je
int
sbb
jne
loop
test
jb
loopne
mov
and
inc
inc
mov
add
inc
or
push
cmpsl
mov
push
lock
imul
enter
jge
mov
fldenv
movsl
jne
jl
loop
shr
popa
push
mov
pop
push
movsb
add
xor
sbbb
mov
and
adc
xor
das
mov
xor
sub
sub
je
push
cs
dec
inc
shl
jne
cmp
icebp
or
xor
inc
loopne
lcall
test
sbb
inc
rorb
or
mov
and
pop
adc
push
insl
push
jmp
insl
add
cld
aaa
hlt
or
cld
jl
lods
sub
or
mov
inc
pusha
rol
push
shr
loop
mov
mov
sbb
jns
ds
jle
gs
cmp
pop
data16
loope
sub
inc
popa
je
fsubrs
ss
je
dec
xor
pop
leave
cvttps2pi
jmp
dec
and
or
test
or
and
or
mov
arpl
nop
adcb
movb
lcall
call
dec
add
push
pop
adc
sbb
fstps
or
rcl
movl
push
jl
repnz
rol
pusha
andl
dec
and
ficomps
arpl
popa
pop
arpl
pop
loop
inc
cmp
inc
dec
outsb
and
fwait
rolb
add
sub
addl
test
cmpb
add
mov
jne
jp
inc
xor
movsl
call
rcrl
sub
and
jmp
inc
stos
and
insl
push
pop
dec
das
cmp
sub
sahf
mov
sbb
xchg
pop
xchg
mov
sub
xchg
ss
cld
lahf
dec
push
cltd
or
push
push
and
jo
jne
cmpl
in
push
push
cmp
jle
add
mov
aaa
sub
pop
xor
pusha
sub
push
cmp
aaa
dec
fwait
je
sub
shlb
pusha
shrb
mov
dec
das
int
pop
inc
mov
adc
addl
rcr
sub
bound
andl
or
push
data16
mov
js
adcb
sub
and
xor
scas
cmp
ret
push
jl
pop
sbb
mov
and
cs
pop
add
popa
cmp
xor
and
mov
fdivs
mov
add
jge
pusha
push
push
cmpsl
mov
dec
push
insl
pushf
in
es
cmp
iret
or
insb
je
outsl
int
lock
mov
js
mov
pop
loope
jl
cmp
icebp
jae
mov
icebp
mov
mov
cmp
adc
je
call
and
sub
add
dec
push
push
jmp
or
jmp
iret
push
inc
xor
ffree
roll
ljmp
adc
or
shll
dec
add
sbb
in
int
jae
sbb
sbb
shll
cmp
add
mov
cwtl
xchg
xorb
mov
cmovo
add
mov
adc
or
sbbb
jne
enter
in
das
jae
jb
aaa
int
add
pop
mov
jl
test
enter
inc
orl
aad
add
stos
fsubs
xchg
push
cmp
dec
push
add
lods
lea
xor
mov
sub
jo
push
flds
out
inc
sahf
adc
add
fcmovbe
iret
mov
cwtl
sub
sbbb
adc
lods
adc
out
or
add
aaa
dec
int3
push
push
push
hlt
xor
add
je
dec
popa
mov
add
ljmp
int3
fsubs
xlat
push
mov
cmp
adc
sbb
imul
lret
scas
cld
adc
add
adc
ss
jl
dec
fiadds
arpl
cli
cmp
push
push
cld
or
cmp
sbb
inc
jmp
arpl
push
adc
xchg
fs
or
es
add
xor
stc
xchg
std
adc
inc
inc
test
sbb
mov
mov
aam
push
lahf
sub
into
test
outsb
insb
aad
sub
mov
inc
mov
jo
leave
clc
push
mov
jne
lea
adc
das
jnp
push
cmp
pop
imul
sub
addb
in
adc
repz
lods
fs
xor
adc
xchg
imul
xor
sub
mov
lods
jge
cltd
popa
imulb
sbb
fbld
xchg
mov
dec
pop
inc
xor
movsb
cmp
sub
xor
push
add
jecxz
aam
ret
pop
dec
push
mov
xor
cwtl
ljmp
jmp
loop
loopne
mov
lret
push
lds
loop
or
adc
adc
xor
sub
sbb
sub
xlat
sbb
fabs
cmp
call
fsubl
jo
xor
or
xchg
mov
pop
or
sbb
push
xchg
filds
mov
lret
loop
pusha
cmp
and
loope
push
mov
or
jecxz
scas
cmpb
jmp
pushf
cwtl
fisubrs
inc
icebp
mov
and
repz
jecxz
inc
push
cs
jno
outsl
loop
xchg
cmp
adc
and
push
cmp
sbb
dec
js
testb
adc
xchg
dec
test
xchg
xchg
clc
popl
dec
cmp
lea
or
sbb
pop
add
shr
add
or
mull
push
fcmovb
jmp
incb
pop
or
mov
add
add
or
bound
scas
sahf
sbbb
mov
mov
cmp
push
rcr
dec
mov
rorb
add
call
push
adc
fnstcw
inc
xchg
mov
lret
clc
cmp
lea
mov
shr
adc
cli
mov
adc
fimuls
adc
xor
mov
repnz
andl
daa
in
xchg
mov
out
test
and
inc
jbe
mov
or
in
jmp
cmp
shr
adc
ret
pop
and
adc
iret
shl
andl
adc
gs
test
add
ds
cli
jo
rorb
imulb
or
test
data16
jo
test
adc
in
sub
insl
and
inc
call
xchg
mov
cmp
mov
movsb
ficoml
jecxz
xor
add
jle
push
cmp
xchg
negb
add
lret
cmp
inc
test
push
fldl
jb
cld
sub
jne
add
call
scas
push
ljmp
adc
dec
sbb
pop
and
xchg
cld
lds
jp
jns
push
and
sub
inc
jle
jnp
cmp
jle
push
adcl
ja
les
pop
adc
jle
lea
or
leave
inc
xor
je
cmp
lock
jl
jo
movsl
incb
jmp
mov
mov
xor
inc
adc
test
fstps
aad
add
scas
stos
push
adc
inc
push
push
mov
ljmp
and
pop
xchg
iret
ds
inc
adc
pop
popf
dec
and
dec
mov
pop
or
lods
subl
mov
shrb
mov
dec
cmp
dec
add
inc
addr16
jnp
adc
enter
out
or
test
adc
lret
aad
dec
fcmovu
add
shrl
repnz
add
je
shlb
sub
or
xor
loopne
test
mov
or
xchg
adc
lock
adc
push
adc
fists
pop
movsw
xor
insl
outsb
shr
xchg
mov
mov
inc
add
jo
ret
les
push
push
aaa
and
add
dec
or
push
pop
int3
add
mov
mov
push
xor
in
imul
inc
fstl
cld
or
neg
neg
sbb
sub
out
sbb
inc
sbb
mov
data16
sbb
or
sbb
fcomp
ficompl
rcr
and
icebp
sbb
and
sbb
insb
or
pop
sbb
cmp
dec
jne
pop
pop
pop
insl
mov
adc
adc
jmp
rcl
and
cbtw
inc
pop
dec
and
shr
mov
mov
mov
jmp
js
pop
shll
cld
je
push
lock
ds
mov
or
add
mov
sbb
cmp
mov
mov
jle
jno
push
add
push
xchg
jmp
and
nop
nop
ss
xchg
test
shlb
mov
je
push
sbb
into
jbe
jns
sub
bound
adc
ret
test
sbb
xchg
into
mov
ss
push
dec
or
ja
inc
pop
and
fwait
nop
xor
adc
mov
or
inc
inc
push
test
insl
xor
mov
nop
dec
in
sbb
lods
gs
sbb
roll
ret
pusha
cmp
cs
fisubs
mov
test
dec
pushl
dec
cmp
test
out
ss
pop
inc
xchg
xchg
lock
push
jge
testb
adc
and
mov
jne
cmp
push
cmp
testb
jg
mov
xor
or
je
dec
clc
mov
mov
mov
cs
mov
je
dec
je
add
mov
push
cmp
ja
gs
adc
cmp
jne
xchg
jge
shll
leave
adc
mov
arpl
add
cmp
pop
jbe
add
inc
pop
add
push
push
cmp
inc
mov
cmp
add
xchg
sbb
push
xor
and
ss
add
mov
jmp
imul
je
push
jecxz
xlat
fildll
push
pop
clc
leave
xor
loop
sub
test
xor
or
inc
mov
mov
add
lods
movsl
dec
cwtl
jne
push
sub
adc
sbb
adc
cltd
or
lea
adc
cli
fldl
jmp
mov
pop
repnz
cmp
inc
pop
mov
imul
int
sarb
push
imul
adc
ret
enter
xchg
ss
mov
sub
and
movsb
rcrb
dec
pushf
vmwrite
push
imul
inc
arpl
push
movb
xor
push
lea
xor
adc
push
push
ficompl
mov
mov
push
sarl
out
rcl
aam
fdivrs
xlat
fcomp
fstpt
pop
mov
loop
lmsw
movb
jmp
or
lods
adc
imul
les
dec
sub
sub
enter
add
mov
mov
cwtl
add
push
jp
push
clc
mov
push
add
out
sub
sub
mov
push
jb
je
test
in
inc
call
mov
es
push
stc
mov
sub
xor
loopne
add
bound
add
add
push
imul
xor
imul
or
mov
lea
rorb
fdivr
lea
sar
inc
mov
mov
popa
xor
test
pop
addr16
out
loop
stc
outsb
inc
xor
pushf
cmp
jo
add
sub
mov
cmpsl
or
and
sar
fisubs
addr16
dec
or
sarl
loope
aas
and
les
sbb
dec
cmpsb
and
push
or
fadds
into
adc
add
icebp
or
mov
mov
lea
pop
sbb
movsb
subl
xchg
sarb
ja
sub
xchg
add
test
or
inc
iret
add
divl
in
insb
cmpsb
jnp
ljmp
sbb
sarl
add
test
fiaddl
dec
test
rolb
out
push
push
js
mov
push
lea
sbbl
mov
pop
or
cwtl
dec
push
int3
pop
stos
add
mov
sub
cmp
push
inc
outsl
lcall
xchg
cwtl
mov
jge
mov
inc
xor
inc
test
aas
and
rol
add
ret
add
scas
jne
sbb
and
fcmovbe
popf
mov
add
or
loopne
sub
ds
cmp
or
gs
pop
or
or
call
clc
je
sub
inc
lods
cmpl
mov
mov
or
dec
push
xchg
lret
dec
adc
lock
mov
repnz
dec
div
cli
cli
inc
add
repnz
push
xchg
adc
ljmp
call
sub
mov
sbb
adc
lcall
and
xchg
xchg
or
or
add
fld
jecxz
mov
jecxz
clc
mov
jp
idivb
jns
rolb
lock
sbb
loopne
mov
aad
ret
add
dec
jp
repnz
pushw
sbb
or
clc
out
jge
fs
cs
mulb
test
inc
enter
mov
rorl
sbb
pop
jge
sub
push
into
or
mov
inc
shlb
fdivrs
aam
dec
xchg
fldl
and
jge
adc
lods
mov
xor
dec
push
dec
mov
dec
xor
call
adc
push
cld
lea
test
fnstcw
pop
xor
imul
inc
iret
daa
loop
and
clc
scas
xor
cmp
les
inc
sbb
imulb
mov
inc
sbb
test
in
sub
stc
or
cwtl
mov
fs
lock
movsb
adc
cmp
jne
lret
xchg
jne
sub
nop
in
cmpb
push
mov
mov
mov
push
mov
sub
insb
sbb
cld
mov
scas
movb
inc
clc
xor
push
mov
push
add
push
nop
cmp
mov
fdivr
adc
push
pop
jle
out
adc
lret
mov
sub
ds
shr
popf
test
test
fisttpl
test
adc
cmpsb
mov
std
lds
sbb
neg
and
call
insl
call
rol
mov
aaa
loopnew
fadds
lea
push
and
jecxz
sti
movsb
je
jecxz
adc
gs
addr16
out
data16
into
sbb
and
xchg
mov
push
jg
lock
or
mov
add
sub
dec
push
lret
dec
into
or
and
sub
cmp
mov
clc
js
add
enter
adc
mov
cmp
push
dec
movsl
aam
shlb
add
pop
sub
verw
jg
cld
sbb
testb
lock
inc
or
pusha
test
pop
in
ljmp
mov
dec
nop
dec
mov
dec
cmp
jge
andb
cli
jmp
cmpb
or
add
dec
cmp
jbe
mov
add
dec
add
add
fadds
dec
or
or
pusha
add
js
hlt
xor
dec
mov
jb
int
jg
sbb
adc
lret
or
mov
mov
mov
add
adc
imul
add
add
fisubrs
in
dec
add
test
mov
mov
aad
push
mov
lahf
add
dec
mov
or
out
or
jmp
iret
out
sbb
or
add
or
jns
add
adc
mov
ret
xor
push
mov
mov
lods
ret
fs
adc
cmovae
or
jae
loopne
in
pusha
test
lret
dec
in
mov
xor
into
pusha
cmp
ror
inc
and
int3
push
xor
push
pop
and
pop
pop
mov
testb
pop
shll
or
add
mov
cmp
xor
inc
push
pop
jae
or
or
imul
or
xchg
mov
add
cmpsl
inc
inc
mov
mov
mov
and
pop
or
mov
xlat
dec
pop
scas
inc
push
xchg
jp
add
sbb
popf
jmp
jne
and
and
or
dec
ljmp
push
add
or
in
and
inc
push
push
xchg
inc
fldcw
inc
mov
out
sbb
sbb
inc
fsubl
adc
stos
jg
sub
into
daa
jmp
pop
nop
test
out
add
push
into
in
stmxcsr
test
push
dec
bound
cltd
ss
or
imul
add
loopne
pushf
sbb
xchg
jnp
call
mov
xor
inc
jg
into
into
dec
cmc
test
into
mov
sarb
push
pop
imul
cwtl
pop
mov
nop
int3
or
shlb
or
or
pop
adc
shlb
cmc
mov
or
add
leave
xchg
ja
outsb
lahf
pop
test
sbb
sahf
add
add
add
adc
or
test
and
ret
je
and
xor
inc
cmp
or
fsubrs
jmp
jmp
daa
lret
push
xor
pusha
push
mov
xchg
incb
scas
sub
gs
adc
add
sbbb
push
pop
pop
fwait
es
pop
fdivrl
xorb
cmp
add
sub
cmp
inc
test
addb
cwtl
cmp
cmpsl
pop
sub
cltd
inc
cli
add
ficoms
xchg
xchg
mov
push
sbb
adc
adc
and
daa
or
and
add
adc
addr16
sub
mov
pushf
jl
or
mov
leave
xor
xchg
icebp
mov
fs
and
cmp
fmuls
aam
or
xor
cli
out
push
adc
add
xor
out
insl
add
inc
jmp
and
cmp
sub
loopne
mov
out
je
movsb
aaa
pop
xor
sub
mov
cmp
jle
outsb
cmp
jbe
inc
inc
fsubrp
jmp
cmp
movsb
fcompl
jle
mov
lds
inc
fsubrs
add
mov
jo
jbe
aam
loope
into
add
push
jno
or
dec
jecxz
sbb
aam
fisttps
push
aas
xchg
mov
test
test
sti
add
dec
push
test
and
popa
call
push
lods
test
add
sub
pop
xchg
in
jmp
sbbl
mov
adcb
dec
jle
mov
pop
mov
inc
repnz
push
xor
mov
sbb
and
add
popf
xchg
fcoms
icebp
shlb
stos
pop
mov
ss
or
cmp
pop
xor
jp
test
fisttpl
mov
mov
jge
dec
mov
fs
xor
inc
sbb
push
inc
stos
xor
incl
dec
mov
push
adcl
loope
rclb
or
or
lods
pusha
push
pop
push
imul
rolb
or
xor
mov
and
xor
adc
out
add
push
push
test
xchg
nop
cmpsb
nop
dec
dec
add
push
std
adc
adc
rclb
add
outsb
adc
sub
mov
jae
addb
lds
jmp
push
push
xlat
movsl
sub
inc
push
rol
pop
sbb
insl
push
adc
mov
inc
addb
popa
sar
sub
adc
jmp
xor
mov
iret
inc
pop
or
push
subb
notl
add
add
lods
mov
movsb
out
cvtdq2ps
pushf
sub
sub
testb
add
adc
mov
fmul
ret
pusha
outsb
rol
or
push
js
or
into
and
in
xor
add
subl
cmp
invd
aam
ljmp
loop
jns
cmp
lods
loope
dec
rcll
jp
or
test
jge
test
inc
mov
mov
jg
xor
enter
lock
sub
add
lea
cmp
jl
jl
lea
push
fmull
sbb
enter
pop
fadd
adc
mov
mov
pop
loop
sbb
mov
insl
cltd
pop
nop
scas
jae
fcoms
jno
sub
jg
loopne
in
loope
jmp
dec
loop
jl
jp
movsb
fisttps
cwtl
mov
push
sub
js
adc
and
pop
orb
adc
sbb
inc
js
push
cmp
inc
sar
fcompl
rcrl
lea
in
sub
add
cmp
sbb
sub
or
rorl
xchg
or
xor
push
jl
fstps
out
inc
hlt
mov
les
xor
sub
add
pop
shlb
adc
push
mov
mov
test
mov
add
testb
push
push
or
mov
add
or
push
xchg
js
filds
cmp
add
adc
add
and
mov
out
add
faddl
xlat
push
and
pop
call
or
pop
and
xchg
imul
popl
add
lahf
sbb
lods
sar
or
mov
pop
inc
movsl
fnsave
cmp
mov
jecxz
push
xchg
mov
and
ror
shll
and
lock
sub
test
cvttps2pi
mov
and
lods
pop
push
pop
je
daa
sub
scas
mov
fld
adc
sti
aas
sub
sarb
fstps
mov
xor
xorl
jmp
cmp
fcomp
adc
in
ficoml
test
cmpsb
pop
add
mov
int
fadds
in
arpl
jae
mov
or
scas
movsb
jno
orb
in
xchg
lock
fistpll
push
push
cmp
or
and
mov
ret
fsubl
daa
sub
call
in
inc
gs
leave
test
mov
lea
aam
cwtl
pushf
fsubrs
outsl
or
and
jecxz
xor
imul
cmpsb
imul
xor
mov
cmp
or
nop
orl
lock
sub
mov
push
xor
mov
push
cmpl
imul
cmp
das
cmp
imul
test
arpl
bound
adc
arpl
fmuls
add
lock
xchg
lods
insb
or
lea
adc
insb
sub
cmp
js
in
mov
and
dec
daa
loop
ds
lret
push
enter
ret
enter
pop
and
sarl
sarb
outsb
sti
push
mov
bound
cmp
pop
pop
cmp
mov
xchg
and
mov
and
jb
inc
push
mov
or
testb
dec
sub
outsl
mov
adcl
push
loop
call
aam
je
lds
jne
jno
fnsave
outsl
pop
or
mov
in
in
movups
movsl
rol
cmp
fadds
and
pop
add
cld
cmp
jbe
pop
sub
cltd
mov
inc
in
lock
jmp
xchg
cld
push
pop
hlt
add
xor
pop
dec
es
jo
adc
nop
pushf
jno
sub
xchg
jl
fisttpl
inc
or
add
jne
fimull
sbbb
popa
in
jb
dec
insl
loope
sbb
mov
or
xchg
dec
lock
loopne
or
or
testl
jno
mov
inc
jb
sub
fadd
shll
cltd
aam
enter
mov
call
xchg
shlb
sub
ss
out
inc
shrb
push
pop
or
loopne
je
adc
xchg
adc
dec
stos
imul
es
fs
xor
cmp
fs
dec
inc
inc
dec
fwait
xchg
dec
es
adc
pop
ja
nop
je
sbb
lea
push
loopne
mov
cmc
sbb
add
nop
add
rolb
xchg
faddl
xchg
dec
jne
adc
lea
xlat
les
and
test
pop
add
push
add
out
into
adc
cmp
adc
mov
push
gs
aad
nop
dec
push
xor
loopne
rclb
add
cmp
mov
movl
bound
sbb
fisubrl
shr
dec
and
bound
sbb
dec
fwait
or
and
out
cmc
or
insb
cmp
or
sub
pop
pusha
xor
ret
mov
in
js
pop
fnstsw
sti
pop
pop
and
jns
shrl
add
lahf
fcoml
loopne
and
xchg
push
fstl
pushf
jp
push
mov
fneni(8087
psubsb
and
mov
je
jge
aam
pop
jb
sbb
jnp
in
imul
call
mov
sub
or
fcoms
jl
push
inc
fcoms
inc
insl
adc
inc
jo
add
daa
jns
insl
mov
in
adc
packsswb
jge
in
sub
imul
inc
push
cmpb
jmp
xor
adc
xchg
add
jmp
inc
cmc
jne
or
les
rol
loop
cmpb
mov
clc
push
sub
xor
jle
sbb
and
in
pop
jb
daa
pushf
jle
fcomp
dec
adc
aam
enter
jg
lock
call
sbb
leave
lods
mov
mov
mov
ror
leave
int3
rcl
dec
or
movsl
mov
pushf
dec
int
cwtl
andb
sbb
pop
cwtl
jl
inc
mov
cltd
dec
xor
inc
xor
roll
or
push
push
dec
fs
loopne
xchg
js
call
or
scas
movsb
mov
mov
pop
das
andb
adc
dec
shrl
lahf
nop
jbe
inc
loop
push
fwait
adcb
jmp
adc
inc
adc
or
testb
les
outsl
rolb
mov
test
jmp
dec
or
sbb
lock
test
push
jb
cmp
ret
push
aas
in
mov
aad
pusha
test
in
std
adc
mov
add
rolb
cld
shr
add
inc
les
sbb
repnz
dec
push
pop
mov
cltd
fs
add
je
sbb
es
jl
addb
nop
push
lods
imul
dec
cmc
mov
test
fdivl
sub
mov
fdivrl
or
inc
sbb
in
nop
in
xchg
pop
xchg
xchg
mov
add
arpl
and
xlat
pop
ret
dec
mov
pop
push
add
and
xchg
cmpsb
xor
lahf
rolb
xchg
add
or
jo
mov
gs
faddl
sub
xor
cmp
pop
insb
cmpsl
mov
push
fadds
fs
int
loopne
xchg
pop
cwtl
mov
dec
jp
test
push
nop
and
les
insl
or
or
adc
jb
and
or
jb
and
push
cwtl
sbb
in
push
roll
dec
adc
call
inc
mov
nop
mov
push
or
shrl
inc
jecxz
lock
and
insl
imul
push
addb
mov
xchg
push
arpl
mov
sbb
fsub
and
loopne
rclb
mov
pop
push
push
inc
fsubrl
mov
das
rclb
rol
insb
mov
es
adc
xchg
inc
xor
mov
incb
xchg
sbb
inc
out
fsts
xchg
dec
or
std
rorl
test
das
jno
lock
mov
lds
dec
lea
cmc
in
inc
adc
xchg
or
jo
aaa
and
and
iret
icebp
in
shrb
mov
jno
mov
cmpl
or
sti
adc
dec
inc
xchg
inc
pop
sbb
enter
imul
movsl
mov
push
movsb
or
add
xchg
sbb
cltd
popa
movsb
mov
push
xor
nop
mov
das
xchg
loopne
inc
mov
or
mov
in
xorl
cwtl
cmp
and
mov
inc
sbb
xchg
mov
mov
inc
jae
nop
sub
xchg
add
xchg
scas
mov
jae
aas
pop
inc
add
test
addb
dec
mov
pusha
xchg
inc
dec
lods
sbb
loope
mov
mov
mov
or
jmp
xchg
jns
inc
mov
repnz
imul
insb
sarb
je
mov
sbb
in
call
jo
fldln2
aam
and
inc
sbb
test
adc
jge
push
js
inc
cmpsb
push
xor
mov
out
inc
test
insl
mov
aas
pextrw
xchg
xchg
inc
mov
imul
inc
dec
and
fdivl
rclb
sub
in
inc
loopne
add
pop
filds
xchg
iret
insl
mov
push
in
pause
xchg
dec
pop
jp
test
in
push
inc
or
add
and
xchg
sbb
faddl
call
cmovne
aas
addl
pop
insl
add
and
iret
mov
cmp
enter
nop
mov
pusha
mov
mov
dec
das
cmp
push
cwtl
sbb
ljmp
and
adc
aas
xlat
fs
adc
adc
mov
mov
adc
rorl
insb
daa
mov
push
test
push
fwait
in
mov
inc
lcall
pop
mov
mov
popa
xchg
lcall
adc
adc
cmp
mov
xchg
fwait
incl
push
inc
adcl
and
xor
add
pop
sbb
add
inc
daa
stos
push
add
inc
fidivl
fistps
mov
shll
jne
movsb
lea
sbb
jp
in
loope
or
in
pop
faddl
rcrb
dec
daa
loopne
mov
mov
adc
lea
mov
or
call
ss
fdivrl
push
inc
movsl
int
in
xor
add
push
or
in
inc
mov
and
pusha
jo
outsl
cmc
out
and
mov
mov
fdivrs
ret
test
mov
cmp
daa
orb
aam
rcrb
es
inc
lock
test
and
push
lods
popa
sbb
in
addl
stos
orl
test
negl
inc
imul
mov
sub
mov
ss
jl
leave
inc
sub
mov
mov
mov
push
or
adc
xchg
add
mov
scas
and
je
push
test
sub
movl
mov
enter
fistps
pop
lods
cltd
sub
outsl
int3
enter
fwait
shrb
outsl
int
cmp
in
enter
mov
dec
inc
leave
dec
inc
lods
int
leave
fdivs
jne
icebp
xchg
adc
jno
jmp
pushf
adc
hlt
movsl
pusha
roll
aam
jp
pop
cmp
push
cltd
in
je
sbb
fs
movsb
mov
insb
cmp
ljmp
loope
ret
stc
mov
xor
int3
mov
xchg
ret
cmc
adc
push
mov
outsl
mov
jns
add
cmpsl
or
out
aam
or
fsubrl
test
lea
mov
psrld
mov
mov
test
and
and
loopne
pop
ss
mov
gs
cmp
xlat
call
mov
sbb
adc
dec
pop
jno
sbb
ret
inc
stos
aad
jo
imul
cmp
sbb
ficoml
push
adc
stos
cltd
and
das
inc
mov
mov
lret
mov
int3
aam
or
out
roll
xor
pop
je
imul
in
inc
lods
aaa
shlb
mov
adcb
xor
push
or
les
shrb
scas
mov
lods
fdivl
and
cmp
pushf
mov
mov
les
mov
and
in
pop
add
movsb
and
in
push
and
or
add
dec
jae
xor
add
nop
dec
lcall
in
sub
out
adc
sbb
and
and
inc
xchg
adc
xchg
cmp
outsl
xor
lods
jns
dec
pop
cmp
add
dec
sbbb
std
push
push
in
add
sti
cmp
sbb
test
nop
outsl
mov
idivl
pop
xchg
sbbl
sbb
mov
sbb
sbb
and
scas
ss
mov
or
in
and
fnstenv
nop
ret
test
repz
out
and
insl
adc
dec
adc
nop
sub
addb
cltd
jbe
in
cmp
cmpsl
or
mov
or
mov
push
and
cmp
mov
in
jbe
orb
mov
in
in
nop
xchg
cwtl
outsb
loop
in
mov
adc
loope
sub
dec
pushf
xorb
ss
cmp
andb
mov
pop
add
aam
mov
dec
enter
jge
cs
arpl
xchg
pushf
faddl
je
cmp
es
shrb
adc
movsb
mov
pop
enter
pop
mov
loopne
mov
or
adc
dec
mov
in
and
imul
dec
mov
insl
mov
ret
mov
adc
or
sbb
sub
cmp
imul
movsl
adc
adc
and
mov
pushl
mov
xor
cmp
sbb
sub
cmp
xchg
ret
gs
test
push
in
mov
add
jne
add
in
outsl
cltd
and
fdivs
add
add
fs
push
cltd
or
adc
nop
or
out
and
jb
pop
adc
mov
scas
in
jge
mov
inc
movq
mov
pop
in
aam
add
nop
or
add
xchg
or
nop
or
orb
ret
aam
movsb
xor
ffree
adc
shlb
cmp
xchg
inc
xor
sbb
pop
mov
pusha
xchg
jg
ret
inc
pop
jb
add
jo
movsl
fdivs
sbb
jb
or
add
in
dec
movsb
mov
jo
or
inc
rcl
test
or
mov
cmp
aad
cmp
loope
cmp
sub
and
xchg
lcall
orb
iret
push
mov
cmpsl
cmovs
xchg
sub
and
in
call
cmp
mov
pop
nop
dec
cmpsb
xchg
jmp
and
add
cmp
lds
test
xor
or
fisubl
jns
fnsave
sti
or
mov
adc
bound
xchg
adc
push
adc
pop
stos
scas
test
jmp
or
mov
and
mov
lods
call
aam
adc
dec
inc
mov
mov
or
sbb
sbb
mov
mov
inc
and
xchg
dec
or
fdivr
mov
jbe
inc
add
sahf
leave
or
cltd
call
dec
mov
sub
fcmovu
push
cmp
icebp
inc
ficoml
cld
and
dec
fwait
in
adc
xor
fadd
in
add
leave
and
cld
icebp
roll
mov
adc
shll
fisubrl
scas
cmp
xor
pop
jge
adc
xor
adc
push
and
inc
pop
lock
xchg
adc
xor
je
fs
addb
mov
add
mov
mov
mov
enter
fdiv
call
xbegin
orb
xchg
stos
push
jo
jecxz
cld
mov
push
inc
stc
fs
shrl
icebp
push
mov
je
mov
push
mov
pop
inc
jo
pushf
pop
adc
jl
and
pop
xor
sbb
jae
lods
adc
aas
jne
pop
insl
fisubl
cmp
pop
fmuls
mov
inc
or
xor
arpl
lea
sub
mov
lock
test
arpl
and
pop
or
add
add
jmp
pop
mov
adc
pop
in
adcb
cmpl
lods
and
imul
test
jbe
mov
add
sub
pop
mov
adc
fcomps
scas
test
and
sbb
or
stos
inc
adc
daa
sbb
daa
sbb
daa
xchg
dec
xchg
stc
punpcklwd
mov
mov
add
sbb
fdivs
dec
xorl
mov
lds
outsb
lcall
es
mov
in
mov
outsb
in
dec
test
push
and
ror
sbb
rclb
xchg
cwtl
pop
sbb
dec
mov
insb
lret
push
lea
xor
and
testl
sbb
lret
call
jmp
pop
loope
or
dec
cmp
xchg
shlb
imul
sarl
xorl
nop
inc
adcl
jb
je
sti
pop
fs
sbb
xor
inc
dec
sti
push
inc
sbb
xchg
dec
cmp
adc
js
testl
fwait
movsb
pop
pop
adc
cmp
cmp
sub
push
sbb
push
inc
xor
adc
pushf
mov
jns
sti
cmp
mov
push
test
in
fdivs
sub
rcrb
enter
mov
mov
out
or
mov
sub
mov
das
dec
mov
inc
xchg
jo
cmp
imul
psraw
pushf
and
enter
push
rclb
shr
adc
sub
jb
in
jmp
leave
testl
add
in
mov
daa
push
add
repnz
mov
sarb
addb
add
mov
mov
fisttpll
cmp
cmp
sti
inc
push
xchg
and
add
movl
add
movb
test
cmp
mov
sub
mov
insl
and
lret
xchg
add
inc
push
xchg
or
cmp
mov
or
inc
jmpw
adc
daa
dec
xchg
xor
and
pop
int
leave
out
lods
mov
and
sbb
mov
mov
sti
sarl
jo
cmpb
enter
loopne
jno
jmp
xlat
fiaddl
inc
xlat
mov
adc
inc
pop
sarl
push
test
bound
cmp
mov
idivl
or
data16
je
sbb
jns
xchg
dec
adc
icebp
sbb
push
adc
call
test
jo
or
cmp
dec
mov
fstpt
or
jnp
mov
add
and
cmp
jge
rolb
cmpsb
xor
xor
cmp
repz
or
decl
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
fnsave
cmp
lcall
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
ja
xor
ss
cmp
sub
leave
adc
mov
rcll
xchg
adc
push
sbbb
or
cmp
rclb
cmpl
into
mov
push
lret
add
xchg
mov
mov
outsb
je
jb
sti
insb
outsl
arpl
fs
out
sbb
push
dec
imul
and
lcall
jb
gs
xor
cs
insb
push
bound
and
pop
popa
mov
imul
adc
pop
jbe
lock
rdpmc
add
insl
mov
sub
cs
mov
inc
js
je
jb
gs
cmp
or
outsl
add
mov
out
jb
add
add
add
je
push
pop
pop
xor
popa
mov
popa
jb
mov
jbe
dec
push
outsb
dec
xor
xor
out
decb
insl
insl
cmp
dec
xlat
mov
cmp
add
das
das
adc
cmpsl
cmp
inc
inc
gs
std
fcomps
daa
dec
outsl
jbe
dec
arpl
ds
rcll
je
inc
jne
jne
dec
mov
insb
xchg
mov
insb
mov
xchg
jg
popa
jb
push
inc
cmp
out
or
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
cmp
and
daa
push
scas
lahf
mulb
sbb
dec
js
push
pushf
jae
mov
jbe
inc
imul
ds
popa
das
jo
or
adc
sub
lock
in
inc
ud0
fidivl
fldl
dec
nop
push
pop
les
pusha
push
push
fcmovne
jg
lahf
and
sub
sub
cs
movsl
cmp
cmp
ds
mov
sub
dec
jg
stos
xchg
pusha
cmp
jge
jg
cmp
jo
mov
inc
test
cs
and
push
pop
or
adc
fadd
xor
inc
insb
jae
mov
push
fs
mov
inc
adc
cmpsl
dec
inc
mov
pop
fwait
in
int
jo
insl
and
jb
jbe
lods
fucomp
in
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
scas
ficompl
inc
outsb
push
jo
imul
insl
mov
cltd
pop
mov
je,pn
jo
fdiv
lret
and
mov
and
sbb
pop
fs
scas
xor
mov
or
xorb
insl
xlat
sahf
xor
mov
mov
fistpl
insl
and
insl
push
gs
fiadds
aas
xor
cmpsb
loopne
and
jne
dec
mov
add
insl
les
out
fwait
dec
and
mov
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
mov
je
or
flds
and
push
ds
xor
fidivrl
ss
push
mov
pop
xchg
sub
movsb
addb
das
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
insb
imul
lods
cmp
int3
or
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
xor
out
inc
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
sub
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
aad
popa
dec
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
sub
xchg
adc
adc
xchg
add
xchg
add
and
push
pop
pop
or
aaa
ds
pop
jns
push
push
pop
hlt
and
or
pusha
add
ja
js
or
sub
add
jnp
pushl
mov
addl
int
lods
cmp
and
adcb
pop
daa
fnstenv
jle
push
push
and
sub
in
popf
jb
int3
push
jo
add
adc
add
push
dec
stos
int3
js
jo
lcall
or
sbb
cmp
lea
mov
nop
xchg
xchg
lods
loopne
xchg
xchg
mov
es
pop
xchg
push
inc
mov
adc
push
inc
or
test
xchg
pop
pop
add
adc
adc
adc
loope
dec
pop
dec
cmp
test
adcb
pop
push
mov
lret
or
pop
mov
enter
fldenv
add
xchg
dec
add
enter
test
pop
and
add
and
xor
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
jg
push
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
hlt
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
adcl
push
decl
mov
sarl
add
xchg
sbb
push
pop
outsl
ja
jg
xor
jb
bound
cmp
dec
dec
stos
inc
data16
imul
arpl
mov
mov
add
popa
addr16
outsl
js
aam
mov
push
mov
inc
jne
es
insb
gs
mov
dec
scas
push
mov
mov
daa
add
insb
in
dec
imul
jns
inc
mov
imul
ds
and
inc
jb
jns
daa
add
and
movsb
mov
mov
jmp
sbb
xchg
mov
cmp
outsb
pushw
movsl
adcb
arpl
mov
push
pusha
in
or
push
push
lahf
rol
lea
jns
and
sbb
or
xor
lret
popl
cmp
test
clc
pusha
gs
inc
inc
stos
and
push
dec
dec
lahf
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
jno
mov
cmp
xor
xchg
call
push
adcl
gs
mov
xchg
movb
or
mov
push
dec
testl
dec
ret
cmp
add
mov
mov
fildll
dec
jge
daa
aam
arpl
imul
call
add
xchg
outsl
jae
inc
and
fs
xchg
jg
or
jne
popa
jl
mov
adc
sub
push
pop
aaa
pusha
push
or
jnp
lods
pop
das
je
outsl
xchg
or
aaa
daa
xchg
mov
popw
xor
cmp
cmp
add
ds
push
das
push
sub
es
jle
sub
sub
addr16
jae
fisttpl
sub
sub
push
cmp
jp
or
jmp
cmp
and
add
lods
lret
dec
pop
pop
cwtl
jb
sbb
mov
xor
push
jb
imul
ret
xor
push
lret
lods
in
add
xor
sbb
and
out
xor
es
jo
sub
inc
aam
push
lahf
sub
fdiv
inc
add
push
enter
jge
out
cwtl
nop
test
cmc
iret
repz
push
mov
js
xchg
jno
lock
iret
jnp
pusha
push
pop
pop
push
push
iret
sarl
iret
inc
inc
add
pop
cmp
xchg
mov
enter
jnp
cmpsl
stc
push
xor
mov
jns
sub
push
and
or
ds
push
sahf
cmpsl
xor
cs
dec
repz
or
cld
out
clc
hlt
cmp
repz
in
rol
repz
rep
mov
imul
out
enter
jns
mov
and
adc
repz
clc
in
aam
shl
iret
repz
je
and
iret
repz
cld
in
out
mov
insb
inc
aam
loope
adc
jmp
pop
aam
pop
pushf
mov
lcallw
jo
push
dec
jns
push
xor
data16
sub
mov
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
movsl
ret
push
insb
cmp
inc
inc
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
enter
jo
and
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
adc
inc
call
rclb
mov
movsb
std
outsl
adc
adc
outsb
mov
ds
in
stc
pop
jnp
adc
clc
lret
sbb
jb
pop
enter
jge
arpl
cmp
adc
dec
scas
jp
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
roll
pop
mov
ds
dec
in
lods
push
out
adc
iret
adc
or
pop
insb
jg
pop
and
es
mov
flds
sbb
add
xchg
sub
loopne
leave
or
mov
out
leave
ljmp
jg
outsb
mov
push
dec
push
push
push
inc
inc
or
outsb
jbe
and
add
test
nop
das
inc
loope
and
cmp
int
js
test
repz
push
mov
dec
push
dec
push
cs
aas
sub
mov
or
adc
xor
and
inc
cs
adc
decl
add
and
sbb
push
push
xor
and
sbb
add
add
dec
in
fistpl
pop
push
and
and
dec
add
sbb
fwait
jge
jle
or
ss
cmp
pop
dec
xchg
add
adc
std
mov
cmp
dec
pop
pop
xor
sub
mov
push
push
pop
inc
aas
cmp
adc
sub
sbb
es
std
mov
ret
sbb
and
das
ljmp
mov
mov
minps
or
sbb
add
push
pop
out
sti
jnp
and
cmp
push
adc
cs
sub
fucomi
pop
aaa
xor
aaa
or
push
adc
push
xor
or
andb
push
jge
pusha
add
out
mov
or
push
push
pop
or
inc
pop
aad
pop
and
adc
xor
daa
sbb
es
es
test
je
insl
xchg
lea
sub
sub
pop
sti
sub
pop
inc
add
push
xor
ret
push
add
sbb
fsubrl
fisubrl
sbb
mov
adc
addl
and
mov
mov
int3
sbb
sbb
cmp
or
xor
and
push
ret
add
sub
push
inc
imul
push
and
jb
push
jne
and
gs
push
sbb
pop
and
pop
clts
push
pop
dec
inc
add
pop
mov
push
das
and
pop
in
sub
pusha
daa
clc
dec
push
dec
push
dec
or
xor
inc
ja
dec
xor
add
jg
sub
movsl
dec
pop
jnp
inc
pop
adc
dec
nop
mov
cwtl
in
push
cmp
int3
daa
adc
insl
repz
repz
push
test
cmp
xchg
fwait
mov
mov
cmp
outsb
jg
push
jl
jns
cld
or
mov
cmp
shl
fbld
push
sbb
divl
or
pop
testl
xor
cwtl
inc
mov
pop
xor
stc
fwait
adc
popa
push
and
outsb
and
push
enter
insb
jmp
popa
loop
add
imul
push
xor
fs
jnp
fisttps
sub
push
or
sarl
scas
or
ds
push
sahf
out
sahf
jne
pushf
mov
cmc
cmp
sarl
cmp
jl
repz
fsubl
inc
hlt
shrl
nop
ret
lret
add
out
sub
adc
pushf
mov
pinsrw
cmp
pusha
push
adc
inc
push
mov
cs
add
dec
add
ret
inc
cmp
cmp
cmp
ret
aad
lods
pop
inc
js
inc
jbe
mov
sti
popf
stos
or
pop
or
sbb
inc
aas
and
nop
div
mov
jmp
dec
fisttpll
out
mov
push
push
cmpsb
pop
xor
out
pop
fcoms
jb
sub
sbb
add
add
jb
and
jno
or
adc
and
ds
inc
and
das
push
adc
sbb
jb
lods
sub
or
or
push
add
pop
or
jp
cmp
or
xor
dec
add
in
out
pop
lods
mov
cmp
inc
out
cmp
fstl
jae
ss
push
push
ret
xchg
xor
out
cmp
loopne
pop
pop
dec
pop
jecxz
add
jge
dec
scas
jge
or
int3
cmp
outsb
sub
scas
scas
cmp
mov
and
cmp
daa
add
push
xchg
xor
fistpl
sub
adc
pop
cmp
mov
mov
add
push
push
insl
and
cmp
inc
pop
das
in
and
in
push
cmp
cs
mov
adc
push
dec
cld
mov
iret
cmp
inc
pop
cmp
jo
jne
push
xor
out
sbb
and
and
cmp
xlat
addl
aaa
and
and
xor
pop
or
cmp
cmp
data16
mov
xchg
testl
test
xchg
push
add
cmp
cmp
shr
pop
or
dec
xor
ss
pop
testl
mov
jae
insl
and
add
mov
in
and
fidivs
inc
adc
push
xchg
ret
scas
and
aaa
daa
push
loopne
jmp
and
cmp
xor
jmp
loope
into
and
sub
mov
xchg
sbb
dec
sbb
lods
lods
or
and
add
fldt
je
push
add
pop
divl
dec
add
xchg
loop
xchg
js
adc
dec
cmp
xor
cmp
adc
out
and
add
aas
pop
imul
sbb
pop
and
dec
into
stos
dec
mov
push
inc
es
jp
pop
jl
mov
jo
scas
xor
std
xchg
cmp
sbb
add
xor
mov
dec
movlps
ret
or
cwtl
inc
aaa
inc
cmp
sbb
bound
inc
daa
pop
and
and
mov
into
stos
sub
push
pop
mov
sub
dec
add
cs
or
loopne
add
sahf
imul
mov
add
adc
jmp
inc
addl
or
inc
pop
mov
imul
push
cmp
xor
adcl
sbb
aas
adc
or
fidivrs
sub
sub
es
dec
dec
dec
add
lock
adc
loopne
cmp
dec
adc
push
push
ss
subb
jl
cltd
inc
ljmp
je
cmp
add
push
cmp
add
add
push
or
pop
or
push
push
or
rcrl
movsl
sbb
loopne
inc
push
sbb
push
sub
or
dec
push
sub
cli
or
or
sub
sbb
fsubr
shll
push
fs
sub
or
dec
pop
maskmovq
idivl
or
pop
push
fcoml
popf
pop
inc
rcrl
cmp
add
inc
cwtl
jecxz
dec
push
xor
mov
cmc
ficoml
out
pop
xchg
push
fstps
inc
dec
imul
add
in
and
bound
ds
movl
lcall
add
add
nop
add
and
inc
push
pop
sbb
mov
sets
aaa
and
fst
and
pop
and
and
dec
sub
add
push
dec
iret
jae
lea
add
jmp
mov
decl
push
orb
sahf
adcl
aaa
ret
add
aad
add
mov
pop
or
dec
adc
dec
inc
jb
xchg
mov
sysret
fsubrs
sbb
push
xor
das
xor
fcoms
or
and
into
mov
mov
adc
or
xlat
push
and
das
sbb
push
pusha
pushl
push
jle
cmovge
add
xor
fidivs
out
shrb
mov
pop
cltd
sbb
ret
mov
les
or
or
mulb
push
insb
leave
push
and
test
inc
jbe
jns
cwtl
adc
inc
pop
inc
jo
xor
cmpsb
dec
lock
jno
or
scas
cmp
adc
stos
or
push
or
icebp
loop
xchg
sbb
ficomps
and
xor
dec
sub
cli
sbb
mov
jp
aas
das
push
cmp
pop
add
call
repnz
sar
js
cmp
lock
hlt
sub
cmp
addr16
outsb
lret
push
aam
push
sbb
pop
pop
aas
imul
arpl
xor
adc
xor
xor
inc
andb
es
cs
xorl
add
inc
mov
adc
push
scas
or
sub
jg
sbb
enter
push
outsl
dec
mov
adc
ljmp
and
xor
nop
popf
iret
jnp
inc
mov
negb
outsl
jl
lahf
mov
mov
dec
mov
daa
adc
lods
mov
add
enter
push
xor
les
lock
scas
pop
xor
in
push
es
cltd
pop
push
subl
dec
pop
popa
push
lcall
pop
sub
add
out
or
fiaddl
xchg
imul
or
sbb
cmp
or
enter
pop
push
mov
cmp
sbb
pop
adc
jp
jno
aad
push
and
xor
and
stos
cmp
or
dec
xchg
into
mov
inc
dec
sti
and
dec
xchg
xor
in
xor
mov
sub
sbb
cmpsl
dec
mov
adc
jp
push
cmp
das
test
push
xchg
inc
daa
das
jo
pop
mov
bound
sbb
dec
rcll
push
sbb
inc
xor
sbb
mov
mov
push
in
adc
imul
iret
sbb
pop
add
pop
cmp
icebp
test
dec
cmpsl
cmp
sub
mov
negl
sbb
push
push
jns
xor
pop
push
fstpl
pop
sub
dec
dec
std
loop
push
addb
out
inc
sub
jns
inc
cs
cmpsb
pop
xor
enter
cmp
ret
dec
mov
add
or
movsl
inc
loopne
jmp
push
xchg
shl
mov
sbb
dec
dec
xchg
decl
cmp
aaa
cmp
sub
cs
cmp
xor
sub
xor
cmp
add
sub
clc
inc
dec
xor
sub
loope
push
popa
add
cmp
mov
fsubr
mov
mov
jg
cmp
xor
rcll
adc
sub
xor
xor
data16
repz
push
cmp
sbb
jg
pop
dec
pop
jae
addb
hlt
movsb
pop
es
or
mov
sbb
sbb
sahf
icebp
or
adc
and
xor
pop
sub
add
push
fcmovbe
and
movsl
xor
sub
mov
sbb
int
sbb
pop
inc
cmp
adc
adc
jg,pt
pop
aaa
add
jbe
or
mov
adc
insb
pop
or
sbb
jnp
ss
add
jbe
cmpb
inc
sub
inc
xor
cmp
and
and
mov
sub
cmp
sub
add
push
adc
daa
sbbb
dec
cmp
pop
mov
cmp
and
mov
adc
xor
outsl
frstor
mov
pusha
pushf
jge
cmp
adc
xor
sub
sbb
inc
push
imul
adc
inc
scas
inc
xchg
inc
dec
arpl
mov
mov
sbb
dec
mov
sub
pop
adc
sbb
and
lock
sub
mov
xor
test
xor
adc
pop
pop
xor
shrb
pop
aaa
fsubs
notl
and
jnp
cmpsl
sub
and
jno
sbb
cmpsl
mov
pushf
cmp
push
movsl
cmpsl
xchg
stos
mov
and
dec
mov
ljmp
mov
xor
xchg
scas
daa
adc
mov
nop
push
adc
jo
xor
lods
imul
cld
xchg
mov
jb
mov
test
adc
jl
lock
mov
je
mov
fistps
or
or
cmpsl
ud2
pop
cmpsb
pop
xchg
imul
or
and
imul
aas
ja
or
push
movsl
dec
mov
fcoms
daa
cmp
fwait
dec
adc
sub
cs
jnp
xchg
add
decb
or
les
fsubrs
int
lods
adc
ds
aam
pop
hlt
pop
dec
and
rcrb
in
fisubrs
scas
sbb
and
xchg
popa
mov
adc
mov
xchg
aam
cmpsl
pop
push
push
flds
jo
insl
stos
aaa
jbe
or
clc
push
add
cmp
pop
mov
pop
shrb
cwtl
inc
dec
inc
das
orb
ja
add
jb
sbb
inc
lcall
in
subb
push
add
clts
xor
stos
cmp
xor
adc
frstor
rcll
sbb
sbb
pop
sbb
repz
imul
sti
adc
mov
std
sbbb
mov
jo
out
pop
jge
rclb
add
push
dec
dec
clc
jg
pop
in
add
aaa
shlb
mov
mov
filds
sbb
ljmp
mov
ja
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jg
xor
mov
dec
fsubs
sbb
jg
pop
test
xor
dec
xchg
pop
shl
dec
push
pop
in
bound
adc
adc
std
test
xor
aaa
aaa
test
push
dec
cmp
add
mov
sub
inc
insb
mov
imul
or
daa
leave
in
dec
sbbb
outsl
sbb
mov
adc
call
sub
enter
in
cmp
test
dec
sahf
xchg
out
cmp
cmp
push
loopne
dec
inc
mov
inc
repz
push
mov
xor
add
mov
dec
pop
fadd
dec
pop
or
fcomps
mov
lcall
cmp
cmp
xor
sub
adc
inc
sbb
sub
xor
inc
xor
lds
add
jne
je
inc
sub
adc
push
cmpsb
or
lock
push
jb
xchg
ret
jo
punpckldq
je
bound
adc
mov
dec
inc
pop
xor
faddl
sbb
and
inc
pusha
shrb
ret
mov
seta
jmp
ficoml
or
sbb
adc
xlat
das
or
or
adc
xor
out
out
enter
sbb
fcmovb
xorb
lods
dec
mov
or
or
pop
push
or
or
cmp
in
or
add
dec
es
dec
pusha
mov
xor
scas
sbb
adc
push
inc
and
inc
add
fcomps
jns
xchg
dec
sbb
rclb
and
movsl
xchg
jg
pop
push
xor
push
mov
shrb
pop
jg
pop
std
or
loopne
das
dec
pop
cmp
sbbb
ficoml
cmpsl
arpl
dec
imul
xchg
cmp
push
mov
stc
lcall
mov
je
xchg
xchg
divb
xor
inc
lods
lcall
int
pop
mov
idivb
lods
xchg
xchg
push
push
mov
mov
cmp
jnp
push
pop
pop
jnp
outsl
idivb
ljmp
pop
int
fnstcw
mov
pop
push
push
jnp,pt
rolb
pop
lcall
movsb
push
jg
mov
adc
add
in
cmp
cmp
sti
test
sysret
mov
faddp
push
jecxz
mov
pop
mov
xchg
fnstcw
cmpsl
push
divl
dec
out
push
cmpsl
fldcw
push
xchg
aaa
mov
mov
mov
jmp
jl
jnp
std
test
pushf
out
movb
scas
aas
jl
out
in
adc
jecxz
inc
mov
pop
mov
inc
jge
int
in
popa
xchg
push
push
es
mov
cmc
scas
push
inc
push
ds
jne
aaa
mov
push
stos
push
mov
mov
outsb
add
push
pop
sub
mov
in
pop
push
pop
cmp
nop
mov
mov
mov
jns
das
sub
pusha
sbb
jmp
loopne
push
lods
aaa
push
push
fistpll
divl
ja
push
inc
adc
out
mov
cmp
loope
dec
fstpt
xor
push
xor
imul
aaa
push
daa
push
es
adc
repz
cltd
push
pop
pushf
push
jg
out
in
cld
inc
inc
xlat
xchg
sub
out
repz
sti
adc
push
inc
push
mov
test
dec
out
int
imul
or
mov
movl
cli
iret
repz
dec
insl
dec
subl
ds
cmp
jge
ds
jns
hlt
sbb
dec
jnp
jl
out
mov
dec
repz
shrl
inc
popa
jnp
inc
cmp
iret
mov
pop
cmp
out
clc
lcall
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
or
xlat
add
mov
popa
push
or
scas
int
mov
leave
loop
and
std
mov
push
pop
mov
je
pop
in
push
inc
mov
and
lahf
negb
pop
sbb
enter
adc
jg
cmp
iret
pusha
or
cmp
add
or
sti
shrb
inc
es
outsb
push
push
jae
popa
mov
fildll
aas
inc
push
mov
daa
inc
sbb
or
aaa
push
xor
inc
imul
aas
jae
sbb
xlat
push
ljmp
jae
dec
cmp
imul
or
cmpsb
dec
add
xchg
ret
imul
insb
mov
push
dec
pop
je
push
scas
jne
jns
push
fisttps
jp
enter
das
push
lret
push
mul
sbb
outsb
iret
push
popa
push
pop
ja
retw
out
inc
ss
jg
push
les
sub
pop
pop
leave
and
cmp
or
and
push
ds
clc
or
add
call
cmp
mov
insb
je
push
addr16
jo
jae
es
outsl
and
mov
cmp
adc
and
cmpsb
ljmp
or
cmp
mov
add
xor
cmp
cmp
push
xor
xor
cmp
push
add
es
xchg
push
and
out
addr16
sub
or
mov
and
add
out
xor
add
push
adc
scas
and
getsec
sub
xchg
sahf
add
mov
jae
and
adc
dec
sub
cmpsl
rcrb
inc
jb
std
push
dec
cmp
xor
or
add
dec
mov
dec
push
negb
mov
sahf
or
and
push
rcrb
cmp
gs
push
add
jae
jo
mov
push
pop
inc
mov
test
sbb
and
js
xchg
adc
xchg
data16
and
push
pop
ret
shll
and
pop
js
mov
inc
and
loopne
je
and
mov
push
or
mov
jbe
dec
mov
push
jecxz
in
xchg
adc
testl
or
dec
xor
pop
ljmp
arpl
or
aad
or
lea
push
pop
push
push
notb
and
push
pop
sbb
mov
jnp
loope
daa
mov
mov
adc
aaa
test
inc
or
sbb
mov
pop
ret
hlt
cmp
mov
shlb
or
push
add
aaa
inc
and
mov
push
fisttpl
lea
mov
lods
daa
shll
mov
or
mov
outsb
mov
iret
daa
lods
daa
sub
sub
testb
divl
iret
inc
mov
in
push
test
pop
ret
daa
sbb
imul
popa
daa
pop
loop
pop
insb
xchg
dec
ret
dec
daa
mov
cmp
mov
add
dec
mov
or
or
inc
or
js
adc
mov
imul
pop
cltd
push
lock
lock
lahf
pop
xchg
dec
shrl
outsb
popl
inc
andb
pop
int
divl
addr16
jg
testl
push
xor
sbb
sub
fisubrl
pop
mov
xor
fcoms
insb
lcall
cwtl
push
pop
les
pusha
sub
dec
mov
jb
pusha
cli
adc
xor
adc
js
jl
and
jl
addb
loop
cmp
imul
mov
cmpb
mov
sbb
jo
add
mov
add
rclb
push
sbb
loopne
clc
movswl
popa
sbb
and
add
and
adc
hlt
sbb
dec
cmp
jno
xor
inc
ret
jae
out
push
das
das
cmp
or
lods
movsb
repnz
or
sub
loope
loopne
cmpxchg
sarl
mov
or
pop
sub
cmp
push
mov
gs
push
push
pop
sub
cmp
aaa
xor
dec
inc
dec
adc
jne
insb
xor
push
out
mov
mov
sub
xor
cmpsb
sarb
sub
dec
add
adc
mov
mov
pop
and
fwait
adc
pop
cmp
jo
outsl
dec
sbb
xchg
popaw
stos
cli
popl
pushf
test
popa
fwait
decl
aaa
add
cwtl
mov
lret
dec
pop
into
imul
add
adc
ret
lock
sub
test
mov
add
rcll
int3
aas
add
or
dec
jle
gs
sub
rcr
mov
cmp
inc
dec
call
mov
inc
sbb
stos
popa
mov
push
pop
mov
or
inc
cmp
int3
outsb
int3
lods
pushf
push
inc
pop
adcl
cmp
adc
add
cwtl
cmp
or
mov
inc
inc
imul
inc
dec
jp
sub
dec
jb
add
or
inc
pop
int
inc
sbb
cli
pop
mov
rclb
sbb
xor
adc
lods
lcall
in
sbb
inc
add
clc
sbb
or
cmp
into
outsb
imul
cmp
dec
inc
hlt
adc
or
loopne
inc
sub
lods
xchg
xor
mov
fnstenv
and
and
or
pushf
sbb
add
jae
push
inc
push
sub
imull
add
aam
adc
fldl
adc
dec
xlat
dec
int3
test
xchg
jno
test
orb
sub
dec
xor
cmp
xchg
les
inc
fistps
cmp
inc
add
pop
aas
das
mov
das
sub
mov
mov
arpl
sbb
and
or
cmp
dec
push
adc
fists
repz
push
pop
sbb
and
addr16
add
dec
mov
jns
or
xchg
push
out
add
push
pop
push
add
fldcw
or
adc
adc
sbb
int
mov
and
sub
xor
inc
mov
mov
gs
mov
mov
popa
fldcw
xchg
sbb
sub
add
or
adc
data16
jl
add
add
int
push
dec
str
data16
or
and
das
incl
pop
clc
xchg
push
arpl
mov
pop
pop
cs
and
fidivs
push
cmp
cmp
test
je
sub
xor
ljmp
xchg
jns
jns
je
jo
rorb
jbe
fs
inc
scas
dec
mov
xor
add
mov
cmp
push
sti
jl
push
sub
pop
adc
lock
push
inc
push
add
push
or
pop
outsl
popf
or
push
pop
pop
add
pop
push
pop
xor
adc
and
cmp
adc
pop
pop
adc
add
adc
xor
pop
adc
pop
cmp
push
inc
lcall
cmp
ss
dec
dec
adc
cmp
xor
sub
push
adc
cmp
inc
or
xadd
cmp
and
inc
or
prefetchw
or
inc
sbb
pop
cmp
xor
jg
aas
inc
pop
xor
mov
pop
dec
add
and
cmp
or
mov
dec
sub
aas
push
getsec
push
pop
cmp
sub
and
cmp
xor
xchg
pushl
ljmp
cmp
xor
cmp
add
inc
sbb
mov
aaa
orb
push
add
pop
xor
int3
xchg
cmp
test
subl
add
push
mov
dec
mov
adc
inc
cmpsl
xlat
incl
push
das
add
pop
or
jbe
add
pop
dec
xchg
cmc
mov
mov
and
dec
scas
sets
mov
xchg
dec
xadd
cmp
es
inc
inc
psraw
and
mov
push
hlt
stos
pop
pop
mov
mov
cwtl
dec
loop
mov
inc
and
push
insl
mov
dec
mov
loop
mov
push
lret
or
inc
pop
nop
push
dec
pop
inc
pop
call
xchg
push
jp
mov
or
inc
mov
call
inc
push
dec
inc
dec
push
dec
pop
add
or
mull
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
jmp
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
call
pop
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
cld
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
pushl
push
push
jae
gs
leave
ret
sub
xchg
mov
data16
decl
mov
call
cltd
test
push
push
shll
ja
incl
cld
dec
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
js
js
test
add
mov
mov
movsb
mull
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
push
std
int
pop
sub
jp
gs
inc
push
pop
inc
push
pop
dec
inc
dec
inc
insb
dec
pop
je
dec
sub
scas
cli
cmp
cmp
ja
jbe
jne
cmp
xor
cmp
xor
jg
add
and
fs
xor
bound
dec
add
jl
das
jg
ljmp
or
xor
and
jnp
js
and
imul
hlt
decl
movb
minps
or
or
add
or
xorb
mov
inc
add
aas
fld
sbb
dec
jbe
mov
cmp
jmp
push
addr16
pop
or
pop
ret
ljmp
push
pop
das
pop
and
mov
push
or
and
lock
aaa
push
xor
inc
add
mov
push
xor
push
inc
add
inc
push
xor
inc
xor
and
flds
fidivs
inc
push
inc
outsb
inc
cmc
mov
scas
ss
cmovb
pop
ss
cmpsl
ss
es
push
and
or
or
test
dec
add
add
or
and
sahf
push
mov
test
push
sbb
dec
out
cmp
mov
add
scas
bound
iret
jle
cmp
cmp
and
jno
sub
xchg
or
pop
dec
test
pop
jae
arpl
roll
and
int3
les
dec
mov
mov
pop
pushf
mov
mov
es
dec
divb
dec
rorl
sbbb
mov
adc
push
ret
and
or
shr
inc
pop
addb
sbb
xor
frstor
cmp
push
call
hlt
stos
test
lret
xor
adc
sbb
jp
ja
adc
adc
arpl
aam
add
js
loop
sub
loopne
add
mov
or
and
mov
popa
inc
adc
test
push
inc
dec
pop
pushf
hlt
popa
andb
in
out
jge
pop
mov
add
add
test
inc
shl
sbb
xchg
outsb
pop
inc
nop
mov
add
xor
mov
mov
pop
and
pusha
movsl
icebp
push
dec
fwait
cmp
mov
or
pop
push
in
push
mov
jmp
jo
negb
and
sbb
pop
xlat
shl
sbb
rcll
sbb
pop
inc
sbb
fcoml
enter
xchg
and
lds
or
jnp
cmp
sbb
mov
push
xchg
mov
enter
push
imul
pop
js
into
mov
jbe
jae
popa
insl
gs
cmp
dec
xor
push
rolb
mulb
push
inc
aad
sub
outsl
idiv
mov
je
loop
cmp
adc
xor
testb
les
dec
push
popa
je
push
jle
mov
aas
cmp
jge
aaa
adcl
add
testb
add
sbb
add
or
mov
sbb
adc
mov
je
cmp
mov
add
push
mov
lods
lret
xor
adc
shrb
jb
jg
pop
shlb
adc
xlat
and
outsb
popa
add
push
out
add
iret
add
shll
fmull
inc
sbb
in
aad
and
sub
stos
and
mov
push
push
xchg
mov
scas
adc
xchg
jmp
dec
sbb
mov
xor
pop
fstpt
js
push
test
das
das
or
push
mov
add
fadds
mov
pop
mov
pop
push
ja
jb
pop
jmp
xchg
pop
inc
jae
inc
push
adc
jne
pop
inc
mov
xor
xlat
nop
roll
call
add
push
sub
leave
test
jg
aas
das
test
mov
es
pop
adc
mov
push
outsl
push
je
xchg
pop
dec
pop
enter
add
adc
push
or
imul
or
adc
stos
push
outsl
imul
pop
pop
mov
push
xlat
movsl
pop
add
lgs
mov
sub
jp
mov
iret
dec
mov
mov
scas
lods
push
cmp
add
inc
pop
aam
or
pop
mov
fs
push
loop
aas
lea
xor
dec
cmp
jecxz
inc
push
adc
sbb
or
push
cmp
rclb
dec
hlt
inc
xor
xchg
dec
movsl
push
mov
cli
mov
and
pop
add
cmp
pop
ja
int
nop
sub
scas
pop
insl
add
inc
add
xchg
ja
es
pop
stos
nop
mov
pop
mov
imul
insb
adc
pop
and
adc
adc
imul
add
pop
push
mov
inc
fistpl
data16
pop
dec
pop
movsl
mov
cmp
repz
pop
repz
mov
xlat
cs
push
xchg
adcb
clc
mov
aam
dec
pushf
xor
iret
xor
maxps
dec
push
shll
and
mov
ret
shlb
mov
and
mov
fldt
jp
inc
sbb
fs
add
cmp
cmpsl
int3
and
adc
or
add
dec
aaa
imul
jne
or
push
sbb
pandn
sub
push
add
xor
fstpl
dec
jae
push
popa
inc
outsl
cmp
and
fwait
adc
inc
call
punpckhwd
dec
outsb
push
je
mov
add
insb
mov
mov
inc
pop
push
dec
inc
dec
inc
push
pop
js
xlat
add
inc
mov
inc
jb
fwait
pop
daa
dec
leave
cmp
rcrl
jb
xor
loopne
inc
aas
dec
mov
xor
adc
rclb
inc
add
in
pop
xor
or
xorb
pop
dec
add
shl
mov
jno,pn
add
test
inc
mov
mov
orl
push
jb
mov
adc
mov
rolb
insl
pop
adc
loop
insl
pop
xorl
pmaxub
lock
and
cmp
popf
outsb
mov
adc
push
push
mov
mov
out
cmp
add
scas
sbb
mov
mov
adc
cmp
lds
insb
push
dec
outsb
clc
sbb
xchg
outsb
fildl
push
aaa
rorb
push
mov
push
loop
jbe
pop
rorb
jnp
xor
push
sub
mov
gs
add
xchg
push
xor
pusha
dec
pop
rclb
cmpsb
lock
fcoms
out
and
xor
add
clc
add
xor
jno
pop
mov
mov
or
adc
in
adc
loope
pop
shrb
js
sub
adc
sti
sub
cmpsl
loopne
cwtl
sbb
pop
pop
sbb
and
inc
push
inc
outsb
pop
adc
mov
adc
xchg
outsl
imul
mov
dec
loopne
xor
sahf
push
icebp
adc
ficoml
xlat
sbb
or
imul
and
rorl
push
push
push
das
xor
xor
je
cmp
mov
mov
sbb
inc
das
mov
notb
scas
add
sub
push
outsb
cld
adc
bound
push
inc
dec
das
push
stos
in
fildl
xchg
push
push
push
inc
dec
dec
dec
inc
jg
sub
add
popa
outsb
jae
push
pop
jp
fs
js
mov
pusha
cmp
add
aaa
push
and
push
jp
jp
pop
pop
fiaddl
adc
mov
leave
cbtw
pop
mov
test
std
test
add
xchg
dec
inc
xadd
cmc
inc
aas
mov
cmp
add
inc
mov
or
nop
jo
adc
lds
add
mov
mov
xchg
dec
sbb
test
mov
xor
imul
add
push
into
incl
cmp
daa
add
push
lock
or
dec
sahf
xchg
inc
movsb
add
cmp
mov
aaa
cmp
rcr
dec
add
daa
mulb
fs
push
xchg
outsl
add
or
jg
test
add
int3
aas
jg
mov
outsl
orb
push
xor
inc
push
jb
push
cmp
and
sub
jb
add
fcomi
ss
fcomps
clc
dec
push
js
push
test
fwait
iret
repz
jo
enter
repz
ja
push
inc
pushf
dec
andb
iret
adc
dec
sbb
dec
loopne
in
iret
les
sahf
dec
iret
repz
jnp
ds
push
test
cmp
cmp
ds
movb
nop
mov
push
jl
cmpsl
cwtl
jl
inc
dec
push
pusha
aaa
repnz
lcall
push
adc
test
scas
dec
out
add
out
dec
inc
stos
out
fiaddl
push
adc
add
xchg
xor
pushf
aam
add
out
sahf
clc
add
or
fdivs
shlb
mov
push
cmp
outsl
pop
leave
mov
add
push
cmp
and
ja
push
inc
push
and
jg
xchg
jns
xchg
sub
mov
dec
es
call
jl
mov
adc
sbb
dec
outsl
add
sub
mov
inc
add
iret
test
jo
mov
fbstp
fsubrl
cmp
xchg
cmp
cmp
inc
add
dec
dec
push
mov
push
dec
decb
mov
popa
scas
add
dec
outsl
out
cld
cmp
xor
ficoms
fucomip
movsb
cmpsl
aaa
sahf
repnz
rol
add
pop
in
fmuls
pop
scas
add
insb
push
ljmp
add
sbb
sbb
xchg
rorb
rcr
sub
adc
in
mov
loopne
aaa
mov
dec
out
add
mov
xor
loopne
mov
push
pop
pushf
xor
xchg
inc
mov
add
stos
or
out
ja
dec
xchg
add
in
or
dec
or
fidivl
and
sub
cmp
dec
dec
filds
add
and
enter
outsl
and
fs
es
mov
and
xchg
subb
jbe
push
fsubrs
orb
push
leave
mov
outsl
out
mov
cmp
cmpsl
dec
dec
daa
add
and
test
cmpsl
adc
scas
sbb
push
aaa
push
xchg
push
mov
in
or
call
push
fsubl
in
leave
mov
add
inc
lods
cmp
dec
sub
sti
fcoml
pop
daa
push
dec
push
push
pop
push
lret
fimuls
fcoms
jg
push
mov
and
xchg
ret
nop
push
pop
sbb
add
nop
adc
jbe
hlt
push
nop
ja
popf
add
divl
or
xor
push
outsl
mov
outsl
jg
fiaddl
push
xchg
pop
nop
xchg
daa
xchg
je
push
aam
aam
imul
push
scas
sahf
out
cmp
cwtl
push
push
jl
xchg
pusha
or
pop
mov
or
mov
dec
mov
pop
dec
inc
sbbb
xlat
or
or
dec
nop
push
mov
adc
or
lcall
cmp
push
xchg
test
jo
mov
lahf
mov
in
inc
jno
pop
sbb
pop
sub
mov
testl
and
add
hlt
add
fcmovnbe
out
push
loopne
pop
push
dec
xchg
shrl
aaa
and
pop
cmpsb
xchg
or
aaa
pop
push
xchg
or
bound
add
jb
jecxz
adc
add
xchg
xchg
lods
pop
jb
in
hlt
jg
xchg
cmp
push
add
mov
add
es
pusha
jg
or
xor
xchg
lods
in
sahf
movsb
lods
add
sub
rorb
call
sbb
fdivs
das
outsl
add
ss
push
adc
jno
fsubrs
pop
js
ss
in
ret
push
mov
add
pusha
push
dec
idivb
add
add
iret
or
xlat
andb
add
rol
inc
out
pushf
push
scas
in
data16
or
xchg
lods
pop
cmp
sti
sahf
and
push
aam
push
inc
sub
sahf
cmpsl
stc
mov
xchg
test
mov
imul
pop
cmpsl
out
and
adc
or
adc
inc
fs
je
sbbb
mov
outsl
add
enter
or
jns,pn
in
in
test
cs
in
leave
adc
loopne
add
pop
lahf
jo
fs
push
pop
pop
scas
add
lods
outsl
or
dec
xchg
add
xchg
add
pop
lahf
test
andb
or
dec
enter
push
sbb
daa
in
scas
in
add
es
sub
pop
lfs
jns
lock
hlt
outsb
rorb
jae
fsubrl
in
addr16
mov
xchg
add
mov
daa
orl
pop
and
cmp
mov
fnstcw
push
pop
pop
cwtl
sarb
cld
adc
or
das
mov
xor
mov
adc
les
adc
aaa
dec
outsb
in
scas
cld
data16
cmp
pusha
pop
add
out
ds
push
pop
pusha
pop
push
dec
push
addr16
pop
ret
aas
pop
out
push
mov
cmp
sbb
push
shrb
ds
sbb
xor
push
mov
out
jo
sahf
out
inc
jge
rcr
cmp
repz
pop
sbbb
fdivrp
adc
inc
iret
sarl
jg
jae
inc
outsl
sahf
out
cmp
fldcw
je
mov
jns
jge
jne
push
jbe
into
iret
repz
add
inc
pusha
xchg
mov
out
repz
cld
and
push
test
into
hlt
jns,pt
mov
sarl
jmp
scas
sahf
cmpsl
stc
cmp
daa
jnp
jle
cmp
repz
pop
jl
bound
lcall
inc
ja
xor
out
lock
outsl
cmp
ds
scas
fiaddl
lahf
out
mov
push
pop
mov
sahf
xchg
mov
mov
lock
lcall
mov
out
sahf
out
jl
xchg
cmp
out
mov
xor
in
repz
mov
mov
fxch
repz
cld
daa
mov
rclb
int
jns
mov
ret
or
lcall
mov
jns
dec
fcoms
js
int
jns
out
xchg
mov
xor
cmpsl
stc
xor
pop
imul
int
xchg
cmp
repz
xchg
pop
jge
or
xchg
cmp
mov
sahf
out
cwtl
gs
hlt
lcall
add
dec
cmp
out
xchg
rcll
dec
mov
ficomps
imul
std
inc
lahf
jg
out
out
or
mov
cmp
mov
and
jl
mov
push
cmp
out
mov
mov
or
cmpsl
xor
iret
shll
stos
mov
or
ds
rorl
lods
cmpsl
scas
std
pop
scas
lcall
mov
mov
dec
mov
jl
mov
mov
mov
test
cmpsl
stc
cmp
inc
mov
mov
repz
movsl
lock
jns
cmp
outsl
mov
stc
sbb
push
out
mov
sarl
andb
ret
stos
jae
repnz
lcall
cmp
push
lret
xchg
ret
jns
negl
fsubs
outsl
xor
sub
outsb
daa
fucomp
packuswb
into
push
add
and
add
or
out
dec
mov
ja
and
leave
repz
popf
pop
insl
jne
clc
fcmovbe
pop
mov
pop
paddq
pop
enter
push
inc
aas
in
rorb
in
fstpl
int3
push
ss
jmp
cmp
sbb
cmp
jb
and
push
popa
sbb
ja
push
inc
arpl
dec
ficoms
shlb
and
fadds
enter
jecxz
or
cmpsl
mov
jo
or
or
cmpsl
dec
out
and
cmp
js
jl
cs
inc
mov
fdivs
bound
stos
dec
push
lcall
push
lock
bound
mov
inc
cmp
mov
fstsw
iret
shlb
in
loopne
loope
gs
and
mov
mov
das
fs
out
lea
pop
repz
shr
and
or
inc
insl
mov
stos
jmp
xlat
mov
aaa
pop
sbb
inc
sub
call
cmp
icebp
je
push
mov
push
cmc
mov
rorl
cs
stos
daa
outsl
mov
lahf
in
data16
test
push
std
bndldx
inc
mov
and
ss
sub
and
inc
push
aas
sub
sbb
dec
inc
jg
cmpsl
mov
dec
pop
mov
inc
cmp
push
aas
ret
in
insl
pop
add
sbb
pop
push
mov
or
inc
nop
inc
out
daa
pop
push
add
outsl
jecxz
dec
dec
mov
in
cmp
sub
leave
sub
sbb
imul
aas
out
mov
mov
sbb
cs
inc
repnz
pop
scas
divb
imul
jno
push
dec
push
xchg
cmp
push
xchg
jno
add
xor
dec
jnp
jno
and
push
jp
popa
xchg
pop
push
mov
dec
add
mov
push
in
in
je
pushf
scas
lds
nop
xchg
dec
cmpsb
in
hlt
inc
repnz
shll
aad
mov
push
and
mov
inc
in
xchg
and
mov
jl
ja
iret
das
jb
cmp
das
cmp
andl
sub
and
insb
cmp
movsb
dec
mov
in
mov
jo
push
jb
stos
scas
mov
loopne
pushf
cmp
add
lock
and
lcall
cmp
repz
add
add
faddl
out
repnz
addr16
or
jb
or
insl
and
in
pop
sub
insl
add
daa
mov
push
leave
into
inc
add
hlt
outsb
in
ret
adc
inc
pop
jae
push
mov
add
dec
outsb
mov
icebp
jbe
cmp
mov
mov
dec
pop
ret
jae
xchg
loop
leave
inc
hlt
cld
add
inc
mov
pop
je
push
cmp
and
inc
je
je
cmp
sbb
gs
pushf
dec
and
inc
outsl
nop
cwtl
pop
mov
pushf
mov
xchg
push
jo
lret
outsl
xchg
mov
jecxz
jmp
repz
sti
mov
pop
leave
jae
fcompl
jne
add
popf
cmp
dec
xchg
xor
aas
data16
xchg
cmp
outsb
xchg
add
shll
mov
cmpsl
in
and
jo
jo
dec
add
jmp
xchg
jno
sbb
pusha
lahf
xlat
cmpsb
inc
js
enter
xchg
add
mov
xor
pop
rclb
mov
pop
push
push
in
jnp
ja
cmp
push
daa
lea
add
xchg
out
sbb
mov
and
fs
jb
mov
jg
lods
jb
mov
es
push
fdivs
inc
repnz
pop
ja
addl
jae
push
daa
sub
cmp
add
inc
ja
ja
xchg
and
call
ja
daa
daa
mov
mov
and
outsb
xchg
jae
xchg
xchg
pushf
xchg
push
add
hlt
jae
or
enter
inc
dec
xchg
push
adc
xchg
xchg
xchg
xchg
js
js
js
js
xchg
xchg
xchg
xchg
js
js
js
js
jns
out
push
or
test
out
sahf
out
or
or
sahf
push
mov
mov
out
adc
adc
adc
jns
out
adc
adc
cmp
push
adc
and
add
divb
jns
sbb
repnz
insb
jne
jae
into
jns
andl
pop
mov
inc
pop
mov
inc
push
add
mov
mov
daa
cmp
inc
pop
int3
add
jbe
dec
dec
and
jns
jbe
enter
jp
jp
push
daa
nop
iret
push
aas
add
mov
dec
cmp
mov
repz
mov
int3
inc
dec
jp
mov
and
ja
push
fildl
lahf
cmpsl
addr16
mov
rclb
jmp
add
push
jnp
iret
dec
jnp
inc
insl
and
aas
ja
xchg
inc
fists
bound
dec
scas
pop
xor
test
pushf
movsb
mov
mov
fdivrl
fistpll
inc
mov
jnp
jnp
das
jnp
mov
jl
incl
xchg
pushf
dec
adc
jl
aaa
insb
rcll
push
data16
pop
jl
in
pop
jg
incl
inc
sbb
outsb
mov
inc
jns
adc
addr16
fmul
dec
push
adc
jp
push
sbbl
cmp
iret
popf
xchg
mov
mov
fcoms
enter
loopne
call
dec
sahf
xchg
ljmp
cmp
rorb
jg
mov
pushf
xchg
fstl
inc
jnp
pusha
jb
pop
and
jge
cwtl
jnp
in
inc
pop
push
rorl
loopne
jg
push
daa
cmp
jge
jl
pop
nop
dec
repnz
and
jb
jl
mov
pop
push
aam
dec
ja
xchg
push
setg
or
jge
lret
insl
xchg
and
jle
addr16
push
mov
outsb
iret
std
addr16
pop
and
mov
inc
mov
movsb
jge
push
and
les
jg
xchg
pop
leave
cld
jge
jg
jg
jl
xchg
xchg
jg
jg
xchg
add
xor
inc
jb
in
notb
cmpsl
loopne
addb
inc
repnz
int
cld
jle
jle
push
adc
jg
lahf
jp
addb
cmp
push
addr16
jg
movsl
xchg
xchg
xchg
xchg
subb
lds
int
aad
fldl
xchg
sub
cmc
cmp
add
orl
xchg
xchg
subl
jb
or
jb
or
or
jb
jb
push
add
jb
add
add
leave
roll
arpl
jbe
fldl
mov
leave
mov
or
shll
and
js
addb
pop
push
pop
das
pop
test
ja
adcb
fwait
in
sbbb
xchg
insl
jne
daa
addb
out
xchg
push
push
popf
repnz
shll
daa
pop
leave
jae
rcr
loopne
js
add
outsl
scas
fsubs
adc
in
or
xorl
orl
and
push
cmovle
pop
dec
or
jbe
iret
and
jle
pop
repnz
cmovle
push
mov
jne
lahf
faddp
ds
fidivs
aas
jge
add
pop
or
dec
fimuls
scas
push
pusha
es
adc
daa
cmp
pushf
fcoml
daa
mov
cmp
not
outsl
xchg
hlt
or
enter
pop
and
shrb
incl
pop
and
cld
mov
sbb
add
jns
add
iret
leave
in
shll
in
fistpll
daa
test
or
add
sub
ss
inc
or
repz
or
or
jnp
jns
cmp
mov
xchg
orps
sbb
ja
test
leave
jae
addr16
or
xchg
pushf
cmpsb
xchg
add
cmp
push
xchg
pop
pop
outsb
pcmpeqd
popf
cmp
int
pop
mov
xchg
sahf
and
daa
mov
or
daa
daa
pop
sbb
pop
rcr
out
out
jns
add
add
das
pop
xchg
xchg
xchg
aas
aas
inc
xchg
mov
xchg
xchg
xchg
incl
lret
andl
leave
add
in
ja
mov
adc
repz
and
add
pushf
dec
mov
mov
xchg
mov
mov
dec
xchg
cmp
xchg
xchg
lahf
add
or
addr16
pushf
out
fmuls
add
outsl
pop
cmpsl
xchg
add
pop
in
mov
inc
mov
cmp
inc
or
and
mov
mov
jb
enter
mov
jo
xchg
jl
cmp
ud2
cmp
mov
in
in
int
jecxz
stos
aaa
repnz
add
adc
or
jns
xor
sbb
and
sbb
mov
pop
mov
in
xchg
mov
mov
cmp
incb
sahf
fnsetpm(287
and
jae
dec
hlt
mov
xchg
pop
pop
mov
push
inc
mov
adc
adc
adc
ja
pop
in
jns
add
pop
in
xchg
mov
test
test
es
mov
outsl
iret
add
cli
mov
daa
xchg
mov
mov
leave
mov
insl
xor
mov
pop
stos
mov
inc
lret
cmpsb
fcmovbe
pop
sbb
iret
mov
cltd
jmp
push
xlat
cmp
push
je
mov
cmp
es
sbb
add
add
insb
xor
pop
lea
push
xchg
out
das
jb
or
or
or
xchg
iret
outsl
adc
jge
mov
add
int3
ja
in
xchg
stc
add
leave
inc
cmp
mov
pop
sub
push
pop
mov
js
nop
cwtl
jae
sbb
mov
and
rcr
xchg
jo
loop
mov
or
jg
xor
and
sahf
cmpsl
fwait
syscall
xor
fxch
fisttps
xor
push
dec
sahf
out
orb
fisttpl
pop
invd
test
sahf
adcl
or
dec
sahf
out
or
das
jp
nop
dec
ja
leave
nop
das
push
getsec
inc
mov
nop
pusha
nop
push
pop
lar
nop
iret
in
mov
push
add
sahf
out
and
out
add
jns
fimuls
into
cmpsl
in
repnz
jle
xchg
add
or
sub
xor
xchg
iret
insl
mov
jno
xchg
fucomi
ss
xchg
out
xchg
iret
lcall
iret
xor
inc
out
jmp
inc
test
in
ret
test
sbb
xchg
add
xchg
in
add
and
xchg
mov
leave
sub
in
popf
push
daa
pop
cmpsl
arpl
pop
and
mov
incl
sbb
mov
lret
jg
addr16
cmpsl
pushl
xchg
xchg
pop
pop
ss
mov
xchg
loopne
xchg
and
dec
xchg
push
xchg
sbb
jcxz
repnz
mov
xchg
xchg
add
jbe
jl
test
in
aas
enter
inc
fsub
push
mov
xchg
fs
fs
pop
inc
jmp
in
scas
mov
daa
sub
xchg
jmp
repz
sbb
sti
xlat
add
insl
adc
sbb
sub
fcmovne
repz
or
inc
pop
sahf
out
sahf
dec
or
or
cmp
arpl
imul
jae
jns
jnp
aas
adc
xchg
in
pushf
dec
sahf
xchg
mov
repz
insl
mov
add
xlat
lcall
adc
pop
xchg
inc
pop
or
pushf
out
cmp
daa
cmp
xchg
xchg
pop
cmpsl
fwait
cmp
pop
add
push
das
push
and
in
xchg
jo
jmp
mov
push
jne
in
mov
fwait
pop
xor
in
push
jns
daa
xchg
psubsb
je
imul
clc
push
out
mov
jg
inc
addr16
xor
or
pop
dec
and
xchg
xor
cs
push
outsb
jae
repz
add
pop
jl
pop
pop
pop
inc
iret
leave
repz
push
dec
and
call
cmp
pop
mov
pinsrw
test
lahf
aam
loopne
jmp
in
cltd
pop
jo
pop
hlt
pop
cld
pop
add
scas
lds
enter
push
pop
sbb
sbb
pushf
sub
les
adc
xchg
inc
inc
inc
cmpsb
daa
xchg
xchg
xchg
xchg
cmp
mov
xchg
out
leave
inc
mov
mov
out
loop
rcll
push
or
jb
cwtl
sbb
and
lcall
daa
xor
cmp
dec
cs
inc
cwtl
inc
dec
pop
cwtl
push
subb
push
dec
ds
jbe
inc
les
add
leave
mov
ffreep
adc
leave
cwtl
cwtl
out
pop
and
push
or
int3
mov
sub
addb
loop
jg
cltd
inc
inc
inc
inc
cltd
cltd
cltd
cltd
inc
inc
inc
inc
cltd
cltd
cltd
cltd
inc
inc
inc
inc
cltd
cltd
cltd
cltd
cltd
inc
inc
inc
cltd
cltd
cltd
jg
cwtl
in
cltd
rcrb
jae
clc
push
add
adc
mov
aaa
dec
lcall
enter
lcall
mov
jnp
pop
sbbl
test
pop
and
mov
rcrb
pushf
cmpsb
lcall
dec
fsub
call
fistpl
push
pop
clc
lcall
or
pop
and
outsl
punpckhbw
in
add
data16
repz
outsb
fwait
jbe
jle
pop
jo
leave
xchg
inc
lock
cmp
sahf
xor
add
adc
xor
sahf
fdivrl
aas
sar
jbe
cmp
mov
mov
in
hlt
cld
cld
cld
notb
scas
or
or
mov
in
mov
pushf
aaa
pushf
aas
pop
mov
xchg
push
aaa
cmp
orl
outsb
daa
fwait
cmpsl
push
lods
pushf
pushf
je
mov
xchg
mov
adc
xchg
mov
or
daa
popf
xchg
repnz
mov
xchg
ltr
push
and
jl
popf
mov
out
xchg
popf
cmpsb
pop
or
cs
addr16
mov
pop
add
or
sahf
mov
call
push
xchg
mov
aaa
dec
cmpsl
aas
cmp
cmpsl
push
pop
xchg
daa
pop
leave
jae
pushf
orb
lcall
iret
repz
cmp
out
movsb
add
test
call
in
cmc
ja
adc
out
mov
mov
and
cmp
push
jo
addr16
fsubr
pushf
pop
and
mov
mov
add
sbb
in
inc
fwait
fs
ljmp
mov
ss
push
cwtl
mov
pop
jg
pop
push
ja
into
insl
in
mov
outsb
repnz
push
push
push
xchg
lsl
push
mov
mov
jb
enter
pop
repz
fdivrl
pop
loopne
repnz
or
or
cpuid
jnp
xchg
pop
or
or
int
decl
push
movsb
xchg
dec
mov
hlt
mov
sbb
ret
jg
mov
xchg
movsl
popa
mov
sbb
jb
mov
mov
leave
rorl
add
push
mov
imull
xchg
sub
add
dec
or
mov
sbb
pop
cmp
jns
dec
push
add
sahf
ja
test
push
test
sub
or
xchg
xchg
fucomi
rorb
iret
rcr
fisttpll
mov
pop
loopne
add
es
xlat
adc
clts
in
addr16
mov
mov
sbb
xor
xchg
out
jns
inc
adc
js
jns
push
push
pop
pusha
punpckhbw
out
sbb
push
pop
cmp
push
adc
push
jmp
and
mov
sub
adc
loop
stc
add
adc
iret
pop
stos
jae
out
or
and
inc
aam
mov
mov
add
mull
test
xchg
or
or
lahf
inc
push
mov
pushf
in
rorl
aas
dec
movsb
or
and
cmp
movsb
jg
jns
daa
xchg
je
mov
add
out
divb
clts
movsl
pop
add
cmp
mov
movsl
pop
sidtl
xchg
lock
aaa
aas
inc
movsl
dec
andl
xchg
jns
and
stos
incb
lea
outsb
cmp
xchg
add
push
in
loopne
movsl
incl
cmpsb
xchg
sub
jae
push
iret
add
stos
jae
iret
jae
mov
xchg
add
xchg
pop
call
mov
mov
pop
mov
mov
stos
in
jbe
dec
fdivrp
out
out
pushl
mov
negb
incl
cmpsl
dec
push
cmpsl
iret
dec
dec
mov
add
or
and
dec
push
cmpsl
loopne
inc
inc
fildl
dec
cmpsl
sqrtps
pop
popa
iret
imul
sahf
xchg
out
pop
addl
cltd
cmpsl
daa
or
push
mov
pop
fcoml
leave
hlt
ljmp
cmp
test
test
out
cmp
inc
push
push
dec
push
push
or
push
mov
add
xchg
lods
subl
leave
xchg
fwait
mov
xchg
xchg
mov
fmulp
leave
enter
test
leave
leave
pop
arpl
leave
leave
leave
mov
xor
out
lahf
add
out
stos
iret
jae
mov
xor
pop
sahf
ja
cmp
pusha
push
repz
stos
jmp
enter
leave
sbbl
lock
mov
pop
jmp
stos
hlt
stos
ljmp
xchg
stos
cmp
inc
push
add
pop
repnz
jns
insb
add
testb
mov
lods
mov
shl
fmull
fucomip
mov
in
data16
adc
push
lods
add
mov
mov
enter
jbe
xchg
pop
bswap
lret
lret
outsl
outsb
lahf
lods
cmpsl
lods
scas
lods
lret
lret
lret
lret
mov
mov
lods
lret
lret
lret
lret
xlat
lods
fildll
lret
lret
lret
imull
lods
repz
pop
lods
daa
push
adc
iret
push
aaa
pop
aas
sbb
inc
lods
sbb
test
lods
sahf
out
outsb
pop
jge
test
dec
push
out
scas
lods
mov
and
sbb
lods
lods
into
lods
jb
enter
lods
out
out
lods
sbb
jb
idiv
push
scas
push
scas
xchg
and
sbb
out
fmulp
xor
sbb
sbb
sbb
addr16
outsl
pop
ja
jns
out
jg
xchg
ds
dec
and
scas
aaa
xchg
jl
daa
test
lds
adc
or
pop
je
out
pop
fldl
in
lds
cld
in
scas
cmc
scas
or
push
sbb
fucom
jns
add
dec
invlpg
es
add
push
scas
xchg
outsb
lds
jns
mov
setne
fsubrl
rcrl
mov
dec
je
scas
mov
push
dec
pushf
unpckhps
sbb
cmp
dec
dec
andb
mov
outsl
mov
jae
mov
fwait
or
ud2
mov
mov
pop
rcr
adc
out
call
mov
cmp
out
push
adc
push
and
sub
daa
iret
jae
sbb
sbb
iret
repz
sbb
sbb
outsb
jns
test
and
repz
mov
mov
call
mov
add
mov
dec
dec
dec
dec
dec
push
dec
dec
mov
aam
in
dec
dec
cli
add
cmp
insl
adc
sbb
and
xchg
xchg
fcmovne
sub
pop
push
outsb
cmp
xchg
mov
jb
jb
ret
lock
cmp
jns
mov
push
push
and
repnz
pop
and
push
cmp
iret
mov
in
jbe
movsbl
sub
fnstcw
sahf
mov
das
clc
mov
inc
cmp
lgs
mov
sahf
ja
cs
das
dec
sahf
out
push
aaa
pop
aas
inc
dec
sahf
out
or
push
pop
jns
leave
repz
or
femms
outsl
enter
emms
adc
mov
push
adc
cmp
rorl
add
xchg
sbb
mov
das
sbb
out
adc
fstps
sbb
out
add
mov
daa
ja
popf
loop
ljmp
sbb
mov
mov
inc
repnz
jmp
mov
in
mov
push
daa
inc
xchg
dec
push
stc
fmull
add
cmpsl
push
and
leave
in
and
sahf
xchg
fistpl
jb
cmp
fcomi
and
push
mov
cmp
ss
movhps
add
es
out
cmp
ds
dec
and
or
mov
popf
pushf
jno
xchg
daa
mov
mov
push
shrl
mov
icebp
jbe
jb
out
pop
divl
dec
filds
mov
data16
mov
mov
psllq
ja
push
add
cmpsb
add
and
leave
bound
insb
test
xchg
popf
xchg
xchg
mov
rol
add
fmuls
loopne
das
bound
lahf
mov
das
adc
mov
outsl
inc
mov
outsb
pop
push
add
repnz
inc
scas
outsb
fbstp
jle
push
leave
jae
cwtl
mov
daa
mov
mov
fistpll
loope
jmp
jo
icebp
or
mov
adc
ss
pop
sub
divl
jg
xchg
mov
pop
packuswb
xchg
xchg
mov
rorb
sbbb
cmpsl
popf
dec
and
push
or
aad
dec
mov
mov
or
add
mov
pop
insl
xchg
ja
cmp
in
outsb
pop
dec
add
repnz
add
rcrb
addr16
add
out
pushf
dec
and
roll
add
add
xchg
cmp
mov
filds
lods
dec
push
and
outsb
push
aas
mov
mov
mov
and
aam
mov
and
mov
out
fistpl
movups
repz
aam
decb
mov
pop
pop
pop
mov
inc
mov
dec
mov
and
out
insb
and
sub
sahf
out
lea
in
in
daa
scas
push
sub
cmp
iret
sub
fisubrl
in
lock
clts
mov
xor
xor
mov
xor
cmp
cmp
push
pop
imul
je
cmp
mov
jbe
jb
mov
cmp
inc
fdivrs
dec
and
mov
pop
xchg
pop
push
jg
mov
mov
ss
xchg
xchg
xchg
mov
insl
mov
xchg
mov
cltd
mov
xchg
mov
lds
xchg
mov
sbb
inc
mov
js
jle
mov
repz
sub
push
xor
cmp
pop
and
push
sahf
out
sahf
and
push
jne
fmull
orb
leave
repz
leave
repz
int
fsubrs
jns
out
jecxz
out
xor
fcmovne
enter
rorl
pop
jns
xchg
xchg
and
jns
out
inc
cmp
pop
daa
daa
dec
aaa
addr16
pushf
mov
daa
mov
stc
inc
cmp
rcrl
push
add
hlt
sub
ret
cld
scas
ret
xchg
cmp
or
pop
les
cltd
xchg
push
mov
jns
xchg
ret
add
pusha
fisttpll
add
dec
and
enter
inc
add
cltd
in
lds
jg
daa
daa
inc
popf
movsl
lods
mov
popf
cmp
pop
add
daa
daa
dec
push
int
fucom
xchg
js
cmc
ret
adc
pop
jns
in
and
sub
xor
add
cmp
out
inc
add
imul
aaa
mov
fcoml
mov
daa
add
outsb
daa
daa
daa
xchg
fwait
mov
and
jg
in
cmp
fsub
pop
out
repnz
fwait
jecxz
std
invd
call
push
or
daa
iret
repz
sub
xor
dec
dec
dec
outsb
pop
dec
push
pusha
imul
movntq
leave
mov
iret
repz
sbb
sbb
es
repz
fstps
in
in
jmp
cli
in
and
and
sbb
leave
in
es
cmp
inc
fcmovne
repz
push
pop
das
push
in
sub
test
fisubs
push
lds
ja
pminub
add
stc
fmul
or
and
enter
or
sahf
out
fimuls
add
add
out
gs
insl
syscall
das
mov
or
fsubrl
das
das
test
xchg
pop
xchg
fwait
cmp
repz
mov
mov
cmp
mov
sbb
jns
out
loopne
call
and
sbb
cmpsl
fwait
mov
adc
and
cmp
sbb
xor
push
sub
dec
js
out
sub
pop
adc
xor
pop
lcall
inc
add
cs
mov
lret
enter
adc
sbbb
jns
mov
mov
aad
test
jmp
outsl
test
add
jmp
pop
push
and
xor
aas
enter
inc
enter
enter
mov
add
cmp
repz
orb
and
outsb
sysret
pop
xchg
enter
repnz
push
adc
adc
adc
cltd
dec
ds
repnz
dec
jo
cmp
leave
decl
leave
adc
mov
fiadds
das
and
pop
sub
xor
cmp
leave
fisttps
loopne
leave
xchg
out
sbb
leave
imul
jbe
jbe
je
add
mov
xchg
push
pop
out
fwait
cmp
or
xchg
xchg
lods
mov
mov
out
ftst
pop
out
adc
lret
push
push
jns
ja
sbb
or
pop
js
sahf
out
sbb
sbb
xor
lret
aaa
jb
stc
push
int3
xchg
lret
xchg
jae
jne
movsb
shrd
mov
out
fmulp
mov
int3
pop
cmp
xchg
aam
or
in
push
and
iret
or
cld
lret
or
dec
outsb
daa
adc
sbb
sub
sahf
out
adc
cmp
and
fsub
inc
push
pop
dec
lret
push
fucomi
in
sbb
insb
bswap
jae
mov
jl
test
mov
and
push
and
and
repz
sub
fmulp
repz
int3
sub
fsubrl
sub
xchg
out
in
in
hlt
push
das
daa
out
sbb
sbb
or
push
adc
jns
fisubrs
add
and
sub
cltd
loop
in
cmp
inc
int3
out
cmp
lret
fs
int
stos
cmp
mov
add
add
mov
jno
mov
cmp
fistpll
shlb
inc
push
xchg
pop
push
add
sarl
inc
aas
sub
dec
push
pop
inc
imulb
sub
jbe
aaa
scas
ljmp
mov
cs
sbb
es
adc
cmp
repz
add
clc
fsub
jns
cmpsl
lock
out
sahf
mov
test
cmp
jnp
pop
mov
repz
nop
mov
jns
pusha
push
pop
push
inc
cmp
sahf
out
xor
sbb
cmp
lock
add
inc
cli
add
call
mov
xlat
cmp
aas
push
push
add
cmp
repz
add
daa
iret
repz
or
or
mov
or
jmp
daa
adc
adc
and
jb
xor
outsb
mov
in
push
das
push
xorps
repz
das
insl
push
and
jb
or
push
pop
andb
sbbb
test
xchg
sub
cmp
mov
mov
into
aas
xlat
pop
sbb
dec
aam
sub
add
add
adc
or
addl
ljmp
and
mov
push
jne
adc
xchg
ja
pushl
add
jns
and
fldenv
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
mov
xor
inc
mov
rcr
fsubp
stc
jb
jle
out
mov
das
xchg
inc
jb
pop
scas
mov
fdivr
inc
in
or
ds
js
lods
pop
pop
jle
pmovmskb
mov
sub
inc
mov
pop
das
aas
les
add
rcl
dec
add
adc
xchg
fisttps
or
repz
rcr
adc
cmc
cmp
adc
in
in
ffree
fisttpll
call
in
fdivrl
inc
fcomp
mov
jae
repz
jns
jp
push
cld
pushf
xor
jns
call
daa
shrb
into
push
add
test
ds
hlt
and
or
jg
aam
pop
dec
or
clc
lcall
push
xorb
inc
jae
icebp
addr16
push
push
pop
jnp
test
inc
jg
inc
push
sbb
mov
xchg
aas
pop
aad
movb
mov
add
scas
cs
sbb
inc
dec
stos
in
test
jg
out
addr16
inc
sub
outsb
stos
roll
add
add
inc
arpl
adc
lret
adc
sbb
sbb
sbb
add
repnz
rorb
and
idivl
push
jns
or
scas
clc
loopne
loopne
ds
cmp
adc
mov
sahf
out
or
or
adc
out
sbb
les
test
push
iret
repz
mov
pop
cmp
repz
and
repz
and
mov
fadds
orb
cmpsb
popa
outsl
adc
xor
or
jle
lea
incl
add
mov
iret
repz
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
mov
pop
ja
xor
xor
mov
jae
adc
push
dec
insb
arpl
jo
add
mov
leave
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
ljmp
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cmpb
ljmp
leave
fwait
xchg
and
and
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
call
xchg
aas
xor
mov
mov
jmp
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
incl
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
incl
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
fstpt
pop
ficomps
frstor
pop
adc
inc
je
inc
dec
dec
xchg
push
dec
jnp
fbstp
xchg
xor
ja
popa
push
out
mov
lcall
hlt
push
xor
xchg
fs
xor
jg
xchg
push
jmp
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
xchg
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
jecxz
fdivs
jne
mov
inc
iret
or
shrl
push
ficoms
push
xlat
enter
mov
mov
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
inc
cld
decl
mov
push
movsl
in
lahf
xor
mov
js
stc
jg
dec
test
xchg
sbb
push
sub
insb
fs
add
ljmp
xchg
icebp
hlt
push
imul
fdivs
test
ljmp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
jg
jmp
sub
rorl
popa
mov
into
pop
cmp
mov
jne
mov
dec
adc
ret
movsb
sti
hlt
shrl
imul
pushl
mov
sarb
add
in
add
pop
dec
or
cmp
add
jmp
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fcos
ljmp
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
call
pop
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
incl
inc
push
imul
xorb
sbb
push
imul
aam
loopne
sar
decl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
sar
mov
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
sbb
outsl
and
ja
int3
add
mov
das
call
loopne
es
lds
or
add
mov
cmpsl
call
ret
call
loopne
shlb
scas
ficomps
ret
es
pushf
mov
call
or
addr16
jb
push
add
adc
mov
jnp
lcall
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
incl
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
jmp
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
or
shrl
or
inc
icebp
jg
add
aaa
pusha
mov
fidivrs
mov
jmp
xchg
sbb
mov
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
push
mov
mov
mov
sbb
add
sub
ret
pop
mov
ja
or
mov
mov
cmp
push
xlat
fmul
repz
fcmovnu
fstp
jae
repz
jecxz
in
repz
call
in
cmp
repz
hlt
cmc
div
icebp
cmp
repz
stc
cli
sti
cld
xor
popa
mov
inc
sub
setg
inc
lahf
adcl
mov
mov
xor
push
dec
bound
inc
xor
jbe
inc
sbb
call
bound
xor
popa
je
push
sub
inc
in
fistpll
and
cmp
js
jno
fistpll
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
fistl
xor
xor
bound
ficoml
xchg
popa
push
inc
jbe
pop
insb
imul
inc
jo
xchg
shrb
push
dec
inc
inc
mov
inc
or
push
ss
inc
dec
and
lea
imul
imul
push
jbe
mov
test
add
jle
gs
adc
push
pop
inc
push
add
lds
add
xor
mov
pop
xchg
insb
popa
jns
jmp
jecxz
push
dec
insb
pop
popa
xchg
push
nop
pusha
add
aaa
je
inc
cmp
inc
push
notb
sbbb
mov
sub
inc
hlt
cmp
insb
daa
int
sub
scas
popa
pop
inc
aas
mov
xlat
inc
outsl
ss
enter
sbb
inc
pop
das
imul
mov
in
fiadds
add
ds
mov
scas
add
hlt
mov
int
push
dec
sbb
jb
xor
sbbl
jno
ja
outsb
jne
stos
insl
dec
dec
mov
lods
jb
jge
insl
mov
fnsave
add
add
or
arpl
mov
push
clc
xchg
je
mov
into
pop
jo
mov
jge
inc
cmp
push
add
cmp
adcb
outsl
and
mov
mov
mov
mov
pop
insl
xlat
mov
inc
sbbb
out
jb
addr16
adc
mov
lahf
adc
push
outsl
outsl
test
lds
push
jno
inc
xor
mov
in
push
sbb
pop
in
nop
lods
mov
xchg
push
arpl
inc
mov
fcomps
mov
jo,pn
push
inc
adc
outsl
insb
jns
test
inc
jb
push
out
test
je
inc
outsl
arpl
adc
mov
fimull
iret
inc
push
bound
ja
aad
insl
push
jbe
xor
xlat
rolb
inc
mov
xor
pop
cmp
cmpsb
arpl
xor
jecxz
inc
add
inc
add
push
or
jg
and
xchg
mov
popa
and
lret
push
dec
mov
dec
jl
push
pop
pop
adc
loope
mov
sbb
inc
mov
rclb
inc
sub
pop
bound
cmp
push
pop
je
jnp
cltd
xor
insb
insl
in
add
push
aaa
inc
jne
push
dec
adc
push
xorb
mov
adcb
push
daa
sub
nop
inc
inc
inc
pop
lea
adc
out
sub
mov
push
out
push
add
lods
movsb
hlt
fdivr
loopne
inc
dec
push
inc
mov
pusha
add
fldt
sahf
mov
add
or
pop
pop
push
loopne
sti
decl
or
or
or
or
or
adc
adc
push
adc
xlat
decb
mov
or
pop
sbb
adc
adc
adc
mov
shrl
add
or
adc
pop
adc
mov
add
xor
shlb
add
and
add
sahf
add
les
add
add
js
mov
jb
pop
fdivl
xor
jge
call
inc
cld
jmp
xor
adc
pop
and
xor
sti
jg
mov
adc
xor
cmpb
adc
cmpsl
adc
cltd
mov
adc
dec
cmpsl
pop
pusha
add
add
fdivs
and
or
adc
pop
stc
add
xor
pusha
fbld
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jl
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
lcall
and
and
mov
mov
adcb
mov
fiaddl
or
and
dec
ljmp
cli
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
inc
aas
imul
fdivrl
add
mov
mov
loopne
mov
fnstcw
adc
rcll
dec
mov
sub
cmpb
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jge
xchg
jl
add
xor
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
or
cmpsb
lcall
mov
movsl
jecxz
pop
mov
sbb
clc
cmpl
jg
or
insb
sub
addr16
out
jmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cli
cmp
fisubrl
in
mov
orb
int3
lcall
fs
ljmp
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
fistpll
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
call
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
in
outsl
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
mov
mov
stc
xor
hlt
and
xchg
jmp
sbb
mov
mov
mov
out
pop
pushl
jb
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
aam
pushl
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
lcall
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
lcall
dec
popf
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
es
in
add
inc
adc
loope
fisttpll
out
je
hlt
icebp
aas
std
cli
push
push
push
idivl
cmp
sub
jg
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
decl
sbb
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cli
je
scas
cmpsb
orb
mov
mov
pop
push
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
fistpll
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
das
rcr
out
sarb
sbbl
jno
or
sarb
jg
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
jmp
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
ljmp
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
cmc
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
adc
add
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
jno
das
cli
adc
and
lahf
fmull
push
cltd
jge
push
lret
mov
pop
mov
sub
clc
mov
dec
incb
fisubrl
aas
mov
or
mov
inc
or
pop
jg
add
std
mov
jg
mov
aad
test
mov
mov
jbe
or
iret
push
jbe
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
outsl
loop
jnp
inc
sar
xor
sbb
xor
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
movsb
incl
xchg
aad
loop
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
adc
stos
pop
jg
lcall
fistpl
sub
sarb
adc
xor
pop
rcr
dec
mov
jmp
jmp
lea
jp
jnp
jecxz
adc
inc
lds
call
pop
adc
imul
or
inc
pop
xor
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
outsl
lock
clc
int
mov
in
jmp
stc
out
mov
clc
push
std
mov
mov
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
mov
loopne
test
out
rolb
pop
or
or
inc
in
cmpsb
rorl
aas
lods
leave
inc
lods
movsb
or
cmp
add
mov
jl
mov
add
call
cmpsl
lret
pop
fwait
mov
cmp
jmp
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
mov
les
xor
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
add
js
ljmp
pop
dec
loop
mov
repz
es
jns
and
mov
mov
pusha
pusha
sub
sbb
and
call
xchg
ss
sub
sub
addb
call
xor
mov
lock
adc
cmpsb
mov
jl
fs
xchg
adc
cmp
int3
clc
mov
xchg
mov
test
mov
push
add
test
mov
cmp
enter
cmp
test
cmp
pop
popl
mov
cs
loopne
push
mov
pushf
mov
xor
push
sbb
cmpsl
pop
test
cs
pusha
out
shll
xlat
loope
pushl
sub
mov
aad
adc
aas
adc
sub
arpl
jle
lcall
incl
mov
outsl
je
mov
mov
shlb
mov
adc
jle
sbb
repnz
cmp
xor
popf
pop
xor
push
rorb
imul
shrb
sahf
push
xor
rcrl
imul
scas
in
sub
insl
mov
iret
outsl
clc
sbb
cmpl
mov
mov
push
idiv
jmp
push
pop
inc
pop
mov
aad
stos
adc
cmc
movsl
xchg
nop
jl
cltd
cmp
pushl
nop
imulb
push
sbb
and
mov
clc
dec
call
jg
xchg
dec
cmp
push
pushl
sbb
push
insb
push
dec
das
dec
movsb
sarb
cmpb
jmp
call
int3
mov
add
stos
jns
nop
rcl
sub
pop
jg
hlt
add
mov
mul
push
cmc
aam
je
pop
xchg
popa
sub
xchg
add
or
sbb
mov
lcall
bound
ljmp
pop
xchg
jmp
dec
sub
jnp
lcall
mov
mov
jmp
je
xor
jg
incl
call
mov
jnp
add
or
ljmp
in
mov
loop
xor
add
xchg
call
or
icebp
ja
pop
cmpsl
ret
pop
ret
pop
je
push
ljmp
add
jp
movsl
lods
mov
rcrl
dec
add
dec
rolb
call
js
mov
nop
pop
mov
xchg
cwtl
ret
dec
and
in
pop
pop
xor
cmp
fs
xchg
fldt
mov
mov
pop
or
cltd
push
lret
sub
jmp
mov
jnp
fldenv
mov
inc
leave
cmc
das
in
clc
lock
push
aam
ljmp
mov
jnp
out
sub
nop
js
xchg
pop
outsl
stos
loop
xchg
imul
xor
fdivrs
dec
inc
loope
adc
push
mov
ja
push
bndstx
add
cltd
mov
lcall
mul
and
mov
sbb
mov
sub
int
push
popa
sub
lcall
add
lahf
inc
nop
lods
imul
mov
adc
push
xchg
add
dec
push
add
call
cld
adc
outsb
mov
mov
sub
pop
xor
sbb
adc
incl
bound
sub
add
pop
xor
add
add
inc
cli
fwait
in
and
cmp
adc
call
out
in
add
mov
adc
rcrl
push
cmp
lods
fmuls
outsl
xor
lcall
dec
xchg
lret
adc
cwtl
enter
sub
cli
inc
or
xor
jmp
incl
pop
shlb
in
pushf
arpl
cmp
sarb
mov
ret
sahf
std
pop
outsl
sbb
and
mov
sbb
int
hlt
pushl
mov
shlb
xchg
mov
in
popa
gs
or
das
or
test
push
push
fidivl
aas
js
cmc
jmp
stos
xor
lret
adc
adc
out
cld
inc
adc
sbb
mov
call
std
pop
xchg
add
fwait
js
insb
jmp
push
jnp
push
cmc
bound
cmp
xor
out
pop
pop
ret
lods
ret
jmp
and
mov
mov
fcos
lcall
call
sbb
xchg
jae
push
mov
pop
pop
fsub
out
insl
mov
btrl
jmp
sbb
decl
pop
jg
or
xchg
and
jae
daa
inc
pushl
call
out
popf
jecxz
mov
inc
jnp
lret
add
adc
shrl
inc
fdivrs
fs
mov
cli
imul
ljmp
into
dec
cmp
xchg
jne
xchg
jecxz
outsb
in
lock
lods
repnz
and
and
inc
pop
clc
repz
jg
cs
pop
test
mov
adc
loopne
push
outsb
scas
int3
or
aam
enter
and
movsb
inc
sub
inc
pop
jno
cwtl
rolb
dec
sub
mov
push
mov
sbb
adc
das
push
xor
mov
icebp
por
in
add
cltd
xchg
cwtl
addl
outsl
add
decl
fidivs
arpl
ret
lods
cltd
xchg
test
add
movsl
jg
incl
out
mov
mov
mov
inc
aam
stc
jmp
outsb
aas
test
cmp
decl
lahf
enter
pushf
inc
leave
mov
xorb
mov
shll
scas
ds
sub
or
popf
push
pop
jmp
sub
push
push
andb
xchg
loope
pop
leave
aas
scas
pusha
ljmp
cli
mov
mov
cli
incl
orl
push
inc
xor
rclb
sahf
mov
testb
test
mov
adc
inc
mov
pop
lret
fisubrs
mov
jmp
insb
add
sub
lods
pop
shrl
mov
cmp
cmc
ljmp
mov
adc
repz
inc
xchg
mov
adc
daa
sub
jmp
pop
subl
mov
inc
mov
in
push
out
in
jo
fsubs
xchg
xor
rclb
hlt
pop
repnz
outsl
sahf
or
enter
and
dec
pushf
or
jns
mov
decl
xor
lods
and
int
shll
out
push
testb
adc
decl
gs
jno
jge
jns
pushf
sti
and
mov
push
mov
mov
push
pop
imul
cmp
sbb
xchg
aas
xchg
mov
xor
mov
hlt
jmp
shl
je
frstor
pop
lret
movsb
push
xor
hlt
call
mov
int3
nop
rol
inc
jecxz
in
jecxz
sarb
clc
outsl
mov
dec
adc
add
push
cmpsl
lcall
xchg
add
imul
sbb
lcall
cltd
push
jmp
dec
pop
dec
push
ljmp
push
and
getsec
lea
mov
adc
add
std
inc
mov
lcall
inc
js
add
filds
dec
or
cs
and
dec
cmc
xor
push
mov
insb
pop
inc
or
push
inc
or
add
pop
daa
test
lret
lret
orb
inc
dec
insb
pop
popa
popf
lret
out
lea
add
mov
es
jo
imul
mov
jp
ds
dec
mov
roll
and
add
sub
loopne
push
nop
ror
call
icebp
push
outsl
outsl
insb
push
xor
popa
jo
push
shlb
xor
pop
dec
sbb
or
jns
and
add
fmull
aaa
adc
mov
js
push
test
imul
inc
add
mov
push
jo
jae
inc
cmpl
pusha
shll
das
and
pop
cvtps2pi
push
xor
dec
jne
js
aad
pop
test
roll
popa
push
adc
add
ret
inc
cmp
pop
push
imul
rcll
add
sbb
es
ret
fucomi
testl
mov
inc
add
je
lds
inc
push
int3
pop
arpl
dec
outsb
fcomp
xchg
mov
and
xor
sbb
add
outsb
dec
xor
inc
insb
mov
aaa
in
sbb
lock
ret
xchg
jae
inc
arpl
inc
cmp
clc
in
lods
push
jbe
push
and
jo
pop
insb
pop
xor
ds
fldl
inc
insb
jne
filds
addw
sar
push
mov
sbb
push
add
push
fildl
sbb
mov
mov
js
or
inc
and
or
stos
loopne
add
ss
addr16
addr16
push
jle
nop
insl
pop
xor
mov
pop
xor
lret
sbb
or
pop
loope
sub
pop
mov
mov
das
inc
or
dec
pop
subl
pop
mov
jl
xchg
dec
inc
dec
imul
stc
xor
xor
addr16
int
pop
data16
jnp
add
movsb
pop
cmpsl
gs
insb
cmp
and
lods
call
push
loopne
ss
inc
dec
js
mov
xchg
sbb
pop
xor
fiaddl
push
call
cmpsb
lret
fdivp
pop
insl
in
mov
inc
xchg
popa
and
pop
je
xlat
std
ljmp
jae
pushf
inc
fcoms
insl
iret
jecxz
pop
dec
inc
dec
fsts
inc
test
xchg
xor
push
dec
jb
cmc
mov
push
cmp
daa
xchg
lods
xor
je
ja
mov
call
pop
push
jno
inc
add
dec
mov
sub
and
or
and
inc
popa
sbb
jo
jp
xchg
jg
push
sbbl
xor
rorl
pop
rcl
or
mov
outsb
adc
outsl
jns
daa
fsubrs
mov
dec
push
add
jmp
fldenv
and
jne
lods
insl
lahf
pop
stos
mov
outsl
jns
inc
je
pop
xlat
fildl
inc
inc
mov
sti
arpl
sbb
inc
add
movsl
mov
fcmovu
and
insl
adc
push
xchg
or
mul
stc
mov
add
add
ljmp
imul
loope
xor
cmp
cmp
sbb
mov
pop
sarl
add
mov
jae
adc
inc
test
out
pushf
adc
push
mov
xchg
jbe
gs
loop
xchg
add
hlt
push
jne
inc
popa
mov
xlat
xor
dec
insl
pop
mov
arpl
cmc
push
jo
jae
add
cmp
icebp
and
sbb
mov
mov
test
pop
adcl
sub
cmp
arpl
lea
pop
test
add
pop
xor
stc
repz
and
pop
std
cmp
jmp
dec
test
aam
sbb
add
faddl
rclb
mov
insl
ficoml
cmc
sub
rorb
daa
data16
dec
gs
jne
push
frstor
cmc
les
addb
inc
arpl
adc
mov
dec
or
in
jg
add
pop
out
mov
aaa
push
pop
jnp
and
add
nop
mov
jge
sbb
shl
popa
sbb
push
push
outsb
pop
dec
shl
mov
add
cmp
dec
jo
dec
ret
loopne
add
in
ret
je
lock
push
outsl
ss
jb
sub
inc
mov
ja
push
mov
inc
push
jo
daa
mov
jne
inc
and
jecxz
stos
insl
sbb
imul
or
mov
fistpl
mov
pop
insb
ja
add
xor
insb
jle
punpcklbw
imul
inc
fsubl
leave
push
stos
mov
cmp
jmp
jno
lds
rcrl
or
mov
sub
js
inc
adc
pop
push
and
and
je
lods
sbb
mov
mov
and
push
loopne
pop
and
iret
shll
push
sub
and
push
mov
xchg
cmp
xor
shlb
adc
in
adc
push
jo
inc
push
push
adc
adc
push
pop
jo
mov
insl
dec
outsb
dec
loope
test
push
xchg
and
shll
jnp
ret
add
add
mov
rcrl
sub
cmpsb
xor
or
mov
mov
push
adc
mov
imul
adc
in
inc
cmp
lock
clc
mov
inc
jb
and
mov
sbb
leave
and
inc
push
inc
fcoms
movsb
bound
add
add
rolb
in
add
decl
jb
inc
jae
inc
leave
dec
insl
insb
insl
inc
shll
push
imul
lds
inc
jo
sbb
pop
fcomps
dec
rclb
rclb
jo
loope
push
mov
loopne
dec
xor
cwtl
mov
add
push
or
push
mov
lret
and
xor
inc
cmpsl
and
pop
outsb
push
fnstsw
movlps
mov
inc
or
outsl
pop
push
push
or
add
jmp
pop
iret
xor
xchg
add
loop
mov
and
mov
pushf
ret
mov
mov
adc
pusha
pusha
jp
insb
cmp
pop
inc
cs
add
mov
mov
gs
fwait
mov
lcall
mov
je
test
ret
or
adc
mov
adc
jg
xchg
jo
cwtl
dec
push
adc
sbb
in
mov
outsb
push
push
mov
cltd
lret
add
xor
mov
negl
mov
mov
inc
stos
cmp
xchg
mov
and
dec
insl
jecxz
test
or
jnp
push
or
sbb
inc
lds
xor
xchg
push
add
push
push
xchg
inc
and
jmp
inc
rcl
fildl
dec
sbb
rcll
int3
loop
xchg
ss
shrl
mov
test
loop
push
pusha
jno
stos
js
mov
test
out
fiadds
nop
cmp
xchg
add
push
sub
int
cmp
pop
aad
xor
push
cmp
or
cmpsl
imul
cltd
nop
inc
push
fs
mov
fs
cmp
xor
fisubs
or
sub
pop
aad
fsubs
or
add
inc
les
cmp
sub
mov
cmpsb
add
mov
adc
jns
stos
enter
cmpl
and
push
push
inc
or
push
subb
ljmp
adc
and
push
xchg
test
pop
les
mov
sbb
loopne
iret
xor
loopne
jne
xor
loop
data16
rcrl
into
jo
add
jae
mov
rcrl
sbb
jbe
and
mov
daa
mov
and
dec
mov
jo
mov
dec
jnp
push
jmp
or
or
add
scas
aaa
loopne
les
jg
add
pop
lods
pop
pop
in
add
add
imull
aaa
or
push
pop
iret
fcoml
pop
testb
xor
insb
xorl
pop
addl
mov
aaa
xchg
mov
jb,pn
popa
mov
sbb
negl
les
jnp
jge
inc
cs
push
or
lock
add
jb
push
xlat
xor
pop
and
or
lahf
dec
ret
jb
nop
aad
rcll
and
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
