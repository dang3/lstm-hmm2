divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
data16
mov
add
int3
aam
sbbl
lea
punpckhwd
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
ss
sub
xor
mov
shl
xlat
cs
loop
in
xor
roll
lea
xacquire
mov
mov
loop
push
mov
das
into
push
cwtl
in
xchg
sbb
xor
fldenv
push
decl
add
inc
mov
push
push
idivb
mov
push
push
push
lods
cmove
loopne
outsl
add
fdiv
fistpl
fisttpl
ret
add
jae
or
test
je
pop
add
pop
mov
push
add
loopne
push
loopne
sbb
rolb
add
push
pop
sub
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
xlat
int3
clc
inc
shlb
push
pop
mov
aaa
jb
mov
lds
mov
xchg
add
sub
push
mov
push
inc
cmp
jae
xchg
add
outsb
fistpll
push
pop
stc
push
mov
add
and
sbb
add
mov
hlt
sub
push
insl
test
lock
adc
pop
cwtl
mov
pop
push
jle
cmp
push
das
fdivl
or
je
cmp
jns
pop
testl
call
adc
cld
jb
adc
popf
pushl
rcrl
jno
push
push
mov
push
or
xor
sub
xchg
and
push
iret
sub
jo
push
rolb
fcmovnu
push
stc
stc
fisubrl
cwtl
mov
shll
and
push
or
sbb
loope
or
subl
and
or
push
sbbb
or
add
and
std
repz
xor
je
mov
fwait
je
bound
sub
xor
lock
mov
push
mov
mov
int3
push
xchg
mov
or
inc
jmp
push
cmp
adc
popa
test
rdpkru
jne
scas
sbb
push
xchg
loop
dec
push
jle
std
or
ss
nop
pop
xchg
sub
sbb
dec
mov
shrb
test
movsl
xor
cmp
sub
sbb
xchg
cmp
movsl
jns
or
pmulhw
cmpsb
mov
push
jmp
inc
and
adc
add
and
push
sbb
push
pop
sub
jbe
ds
inc
sbb
pop
or
and
inc
push
sub
test
pop
xor
int
aaa
in
outsb
pop
sbb
sarl
sbb
mov
inc
add
jg
jmp
fdiv
xchg
sbb
xor
jmp
mov
jae
push
mov
pop
cs
pop
roll
mov
cld
inc
mov
lds
push
hlt
cmpsl
test
add
jle
jo
loopne
fnstsw
mov
and
add
push
push
adc
fimull
je,pt
ret
fiaddl
jl
sarl
and
pusha
push
mov
les
in
int3
pop
push
xchg
out
sti
or
xor
mov
sub
ror
insb
cmpsb
pop
jecxz
xchg
mov
shrb
cwtl
sti
mov
jl
jle
movsl
cltd
sbb
inc
mov
push
mov
lahf
adc
mov
ret
pop
xor
rclb
pop
mov
andl
cmpsl
orb
aas
testl
push
dec
mov
hlt
cmpl
je
or
stos
inc
push
mov
aaa
je
fidivrl
push
nop
sub
cmp
cli
mov
push
or
js
jno
adc
mov
adc
insb
mov
aas
xchg
add
dec
mov
inc
pop
pushf
js
or
xchg
hlt
cmp
push
adc
or
mov
xor
jae
or
mov
jge
mov
xchg
and
aam
mov
and
addr16
shl
xchg
das
push
pop
cmc
push
stc
or
pop
mov
mov
lfs
ljmp
scas
iret
mov
sbb
bound
inc
out
in
xor
or
ret
push
mov
fcomps
movsl
ret
push
cmp
pushf
ficoml
mov
insl
icebp
mov
push
cmpsb
or
push
cld
cmp
ja
xchg
cmp
jne
pop
mov
shl
mov
sub
test
or
cmp
je
sub
dec
pushl
pop
in
and
mov
adc
xchg
inc
sub
adc
mov
in
pop
mov
mov
lds
xor
push
push
mov
cmp
mov
sub
sub
rolb
mov
or
push
add
xlat
mov
test
jne
fs
inc
xchg
jl
incb
jmp
pop
pop
push
push
sub
pop
push
pop
jmp
lret
adc
jl
fldt
pop
ret
add
into
test
pop
pop
xor
xor
enter
and
pop
cmp
pop
bound
and
mov
mov
mov
sub
jmp
push
lock
fdivrs
add
add
push
dec
push
andl
adc
mov
xor
aas
inc
or
push
mov
cmp
pusha
adc
mov
pop
mov
pop
pop
ret
push
data16
jne
xchg
add
cmp
jmp
cmp
push
dec
mov
scas
notb
push
jp
test
jne
pop
ja
jl
push
cmpsb
subb
out
dec
inc
aam
fistpl
add
pop
or
jne
js
sub
pop
cmp
mov
jge
sbb
jecxz
out
cwtl
cmp
je
movb
jle
mov
mov
adc
loopne
mov
lea
push
mov
imul
mov
lock
mov
addr16
push
dec
mov
adc
leave
ret
lods
insl
cmp
cmp
cmp
push
add
or
ret
jle
jge
cmp
std
or
adc
adc
add
inc
inc
pop
adcb
mov
or
stc
jne
mov
insl
pusha
jo
jmp
xchg
in
add
cmp
loopne
push
repnz
inc
repz
push
icebp
mov
cld
ja
lea
decb
pushl
cmp
jmp
pop
add
xchg
pop
popaw
faddl
pop
pop
pop
arpl
adc
adc
jae
pop
xor
out
orb
adc
fcoml
mov
pop
cwtl
rcl
mov
mov
push
movsb
inc
inc
inc
sbb
jle
dec
sbb
divb
push
push
dec
mov
pop
or
sub
push
pop
ror
outsb
ss
push
push
popl
adc
ret
fcmovnb
pop
inc
pop
pop
xchg
mov
loopne
adc
shlb
ret
or
orl
outsb
mov
icebp
inc
sub
sahf
int
leave
add
add
addl
push
or
std
icebp
sub
push
mov
cmp
or
das
rorb
adc
into
je
cmpl
pop
and
adc
push
jne
push
push
imul
jnp
ret
jl
pop
jmp
fmuls
xor
cmp
jl
arpl
xor
push
inc
sub
inc
or
jmp
mov
jge
xlat
add
fidivrl
inc
clc
jg
xor
sbb
sub
or
push
jne
shr
mov
and
add
lods
adc
jg
stc
or
inc
inc
or
shlb
adc
ret
sti
rolb
xchg
outsl
or
push
xchg
movb
mov
xchg
outsb
xchg
and
subb
sbb
and
enter
or
jne
test
or
repz
dec
push
push
call
outsl
sub
mov
into
cs
jp
xor
pop
pop
sbb
gs
pushf
mov
push
fdivrp
mov
ret
push
sbb
mov
mov
mov
cld
xor
out
lods
pop
mov
push
clc
mov
ret
inc
or
push
ds
mov
inc
loop
add
pop
xor
sbb
xor
cmp
outsb
icebp
pushl
repnz
jle
push
cmp
jmp
mov
fwait
lock
mov
jle
ret
inc
mov
add
and
push
out
cmp
ja
cmp
push
sub
test
cmp
pop
lods
sbb
mov
inc
mov
cmp
imul
add
or
aad
add
push
inc
adc
mov
push
ljmp
pusha
fimuls
jge
scas
push
pmuludq
pop
shlb
orl
int
iret
ret
cmpsl
xchg
stc
ficoml
jmp
mov
jge
sarb
jo
out
cmp
xlat
sahf
and
and
xchg
xor
inc
mov
dec
mov
cmp
daa
or
in
js
mov
rol
push
call
filds
decl
pop
cmp
imul
clc
and
fcoms
lea
push
mov
xchg
out
mov
pop
pop
jmp
mov
sbb
fs
movl
cmp
ja
adc
sbb
js
insb
fs
sbb
pop
stc
mulb
pop
scas
into
add
cmp
jbe
lods
int3
jno
andb
jp
pop
movsl
push
xor
inc
mov
enter
add
mov
or
or
xor
inc
aam
xor
mov
dec
jbe
out
nop
cmp
jmp
push
mov
adc
inc
and
cli
add
or
sbb
das
or
cli
sbb
add
in
loop
pop
ret
push
push
shlb
cs
inc
adc
mov
mov
sbb
and
and
aas
sbb
das
sbb
sbb
pop
loope
cmc
add
push
stc
lods
ret
rclb
cmp
adc
pop
loope
or
cmp
ss
ficomps
icebp
jo
push
adc
lcall
add
adc
pop
mov
bound
or
cmp
ja
out
je
movups
and
mov
adc
cmp
popf
cmpl
push
cmp
jecxz
add
shrl
pop
testl
mov
inc
cmp
push
pop
je
jb
jmp
push
or
lock
pop
mov
dec
sbb
adc
and
outsl
out
outsb
sub
add
push
push
jbe
call
lret
xlat
add
cmp
xchg
cmp
jg
mov
jmp
sub
dec
je
push
adc
sub
test
or
jmp
ss
jl
mov
jmp
or
cltd
ret
int
into
sahf
in
jmp
nop
jecxz
pop
jne
jp
sbb
lock
rolb
incl
xor
add
or
call
testl
pop
mov
lea
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
fimuls
mov
xchg
and
push
aaa
xchg
jl
movsb
push
xor
push
push
sub
push
lret
idiv
jo
js
inc
push
in
in
jae
and
adc
in
imul
jmp
mov
adc
jmp
cmp
or
jae
mov
shr
fs
sbb
pop
movsl
adc
adc
adc
out
adc
sahf
or
cmp
jmp
sbb
sbb
and
push
xchg
test
jmp
and
jmp
data16
sbb
mov
mov
repnz
and
cmp
repz
inc
pop
push
repz
loop
mov
scas
mov
fs
push
push
cld
sbb
cld
cmpsb
pop
mov
cs
push
push
pusha
cmpsb
mov
getsec
outsl
dec
adc
iret
in
mov
in
or
clc
push
pushaw
iret
xchg
add
dec
in
repnz
adc
sub
mov
das
dec
decl
inc
push
and
and
push
pop
push
lea
push
cmpl
xchg
xlat
dec
cmp
mov
cmp
inc
pop
cmovno
scas
pop
or
adc
dec
xchg
popf
fsubs
jg
jge
mov
pop
sbb
sbb
push
cli
std
jnp
pop
ja
push
sbb
lea
pcmpeqd
xchg
jo
and
jae
in
jnp
push
call
add
add
clc
push
push
ja
mov
jg
movl
lret
stos
popf
mov
test
mov
roll
sbb
pop
sbb
lods
push
inc
jmp
adc
cmpl
int3
inc
test
push
add
gs
sahf
mov
sub
arpl
sbb
mov
in
adc
imul
xor
sbb
adc
pop
ljmp
lock
dec
dec
rclb
not
and
push
mov
pop
push
mov
orb
xor
mov
xchg
out
adc
jecxz
shl
jmp
pop
push
push
cmp
nop
out
loope
jnp
push
push
push
mov
loope
pushf
jmp
aas
stc
push
push
push
js
test
xchg
push
mov
dec
imul
lods
and
pop
inc
adcb
add
insb
sar
push
pop
daa
lea
scas
lock
je
mov
jo
mov
xchg
in
lea
and
mov
mov
mov
sbb
push
sub
add
push
push
cli
hlt
cmp
cmp
dec
pusha
adc
fwait
jecxz
sub
sub
in
call
xor
mov
lock
mov
adc
dec
adc
mov
push
inc
dec
or
imul
mov
std
pop
cmp
je
dec
call
cltd
sub
sar
add
cmp
bound
in
dec
in
int
insl
mov
pop
xor
cmp
inc
cmp
mov
inc
pop
pop
leave
jae
sbb
leave
sub
xor
jno
and
ret
add
sub
push
mov
cmp
outsl
icebp
pop
add
and
clc
dec
and
push
sub
mov
cmp
adc
std
dec
mov
dec
test
sbb
and
and
cs
adc
mov
je
fistpl
fs
inc
xchg
mov
lcall
inc
cmp
dec
xor
in
or
push
insb
mov
adc
or
adc
mov
dec
maskmovq
sbb
and
test
aas
jl
adc
adc
ja
push
orl
push
mov
ss
ljmp
rcrb
cmp
loope
adc
dec
mov
je
push
mov
test
testb
aaa
and
shll
popa
hlt
add
pop
and
sbb
cmp
daa
ds
mov
xchg
mov
cmpl
je
cmpl
xchg
jne
adc
dec
je
mulb
lea
pop
push
add
loopne
jp
into
jg
jmp
mov
outsl
insl
pop
push
cmp
push
pop
ror
rorb
or
mov
jbe
pop
lock
lds
sahf
push
mov
js
push
push
gs
xor
mov
xchg
mov
push
hlt
movb
add
lock
pop
cltd
mul
fldz
bound
es
sbb
mov
loope
fcoml
aas
mov
and
add
pop
pushf
cmp
cs
incl
insl
cmp
test
test
inc
jge
gs
loopne
mov
and
popf
push
xlat
pop
addr16
adc
xor
pusha
mov
iret
jo
dec
inc
test
and
pop
cmp
and
pop
lea
inc
dec
push
lahf
cs
cmp
pop
xchg
in
mov
sub
adc
cmp
out
test
ret
lahf
fldcw
push
shlb
mov
jmp
push
sub
or
pop
shll
or
movl
shl
lret
jb
jl
add
adcl
lret
xor
nop
inc
enter
push
cs
push
push
loope
mov
push
adc
cmp
or
dec
loope
sbb
add
and
ficomps
sub
shll
inc
sahf
xchg
ja
addb
xor
mov
inc
cwtl
cmpl
pop
push
xor
test
lock
mov
adc
inc
sub
repnz
sub
int
xchg
inc
imul
ret
inc
pusha
fmull
push
aaa
add
nop
aam
add
and
idivl
add
ret
sub
outsb
add
sbb
pop
add
xchg
mov
or
pop
or
dec
pusha
mov
cwtl
ror
push
mov
popa
rorb
push
xor
push
or
and
push
pushf
and
push
je
push
adc
fstps
lods
nop
or
push
add
ficoml
add
addl
cltd
stos
lods
lods
sub
mov
loope
fistl
xlat
stos
fcoms
cmpsb
dec
dec
or
loopne
in
es
out
rorl
js
ret
cmp
or
sbb
in
push
mov
enter
enter
in
xor
nop
outsl
cwtl
bound
test
pushf
and
push
adc
pop
mov
sbb
je
cmpb
inc
pop
lahf
inc
mov
je
cwtl
pop
rorl
scas
push
inc
or
xchg
xchg
pop
in
jmp
stc
push
cs
sub
push
push
and
cmp
mov
fnstcw
repz
sbb
jmp
nop
push
mov
or
pop
inc
shlb
push
jmp
mov
ret
loopne
push
inc
push
int
add
push
xor
frstor
cmp
test
imul
inc
cmp
shlb
xor
pop
loope
addr16
dec
fsub
pop
aaa
mov
nop
arpl
inc
adc
inc
aas
jns
mov
mov
or
mov
pushf
cmc
repnz
cmp
out
icebp
mov
cltd
mov
add
sar
push
rcrw
daa
jl
dec
pop
fiadds
inc
cld
cmpsb
lock
cli
mov
fists
mov
mov
fidivrl
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
aaa
xor
mov
add
jne
fstp
and
push
jbe
adc
jmp
mov
pop
insb
cmpsl
int
sub
pop
jmp
mov
sti
in
and
sbbl
mov
adc
or
out
and
push
add
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
push
cli
or
cltd
idivl
mov
xchg
test
ljmp
rcr
mov
jl
icebp
pop
imull
fs
or
xchg
arpl
mov
idiv
sub
test
or
jbe
lahf
xor
stc
repnz
sub
sbb
mov
add
inc
jle
add
std
out
xor
xchg
imul
cmp
aas
mov
sub
jge
jmp
mov
mov
hlt
fildl
pusha
or
add
lock
fdivl
xor
mov
fdivrp
mov
dec
sub
mov
mov
cmpsb
fists
inc
fisubrs
xorl
out
add
inc
mov
mov
cmpb
or
clc
fidivl
push
mov
jmp
outsb
mov
mov
sahf
lods
jmp
loopne
jnp
jne
pop
add
jl
dec
jmp
dec
mov
aad
inc
mov
adc
test
sbb
or
je
sbb
push
adc
jo
sbb
mov
adc
je
mov
pop
push
mull
sbb
lret
je
jbe
imul
pop
and
jne
push
jmp
ljmp
lods
add
push
push
push
pop
sti
cmp
cmp
adc
pop
push
mov
sub
mov
add
out
clc
test
call
ficomps
in
sbbb
add
pop
mov
pop
xor
xchg
dec
push
jne
loopne
xchg
cmpxchg
xchg
mov
adc
mov
pushf
loopne
movb
scas
jmp
leave
push
rorb
clc
leave
xchg
pop
and
jmp
push
cmp
filds
xor
push
lea
add
mov
push
mov
inc
aas
test
pop
mov
push
jns
cmp
push
mov
sub
pop
sbb
add
push
cmp
or
cmp
loop
loope
mov
in
pop
adc
add
xor
push
jg
jg
mov
push
popa
push
nop
and
std
adc
sbb
cmp
push
sbb
add
or
mov
add
insb
adc
fs
int3
and
push
push
pop
cmovnp
jae
in
pop
pop
jecxz
push
pushf
sbb
movnti
sbb
mov
mov
repz
inc
adc
push
sbb
leave
fsubs
cmp
inc
and
add
or
and
andl
adc
and
push
loopne
xor
inc
ret
pop
pop
dec
ret
mov
mov
pop
cmp
lock
push
leave
clc
lods
sub
clc
setb
test
int3
lock
jne
mov
sarb
dec
sub
sar
xchg
jl
call
andl
lea
push
pop
fidivl
add
adc
mov
je
sub
mov
mov
lods
lods
clc
aas
fsts
mov
mov
nop
lock
hlt
mov
lods
adc
test
push
jecxz
lods
xchg
add
shrb
inc
sbb
sti
xor
and
cmp
into
dec
or
push
jge
and
hlt
scas
lea
sub
or
cmp
push
push
push
shlb
add
lret
mov
ret
dec
dec
daa
sub
inc
in
mov
lods
adc
scas
xchg
cs
add
add
adc
fdivr
aad
ror
xor
clc
or
and
push
je
jnp
and
je
lahf
push
mov
shr
hlt
pop
or
pop
inc
pusha
pop
fistpll
sbbl
pop
or
shlb
xor
and
push
je,pn
add
addr16
add
scas
push
mov
mov
lock
movsl
and
xor
ja
outsl
arpl
test
and
lods
pop
add
out
add
ret
inc
lods
pop
or
cmpsb
int3
sub
pop
push
and
cs
lods
decb
xchg
ret
test
je
jge
xchg
loope
sahf
mov
clc
push
popf
inc
jne
push
push
mov
mov
jmp
in
fdivl
xlat
bound
lds
or
lahf
mov
xchg
sbb
push
gs
and
mov
fiadds
mov
arpl
sbb
mov
dec
and
jae
push
or
add
js
mov
add
xor
in
inc
or
repnz
add
xor
mov
add
cmp
xor
call
push
inc
pop
int
imul
lcall
mov
push
mov
decl
sarl
or
mov
sbb
enter
mov
in
in
dec
lea
jg
or
push
push
movsl
mov
adc
fcomps
lea
or
push
xor
mov
xor
mov
push
scas
xor
cmp
js
and
inc
xor
aas
orb
outsb
repz
mov
dec
enter
test
leave
das
add
cmp
push
stos
adc
push
cltd
in
push
pop
or
inc
and
add
inc
mov
push
or
and
pop
cmp
jle,pt
add
test
pop
inc
dec
mov
mov
mov
mov
icebp
out
and
pop
dec
popf
add
xor
popf
outsb
cwtl
movsl
mov
cmpsb
cs
push
sbb
popa
inc
adc
inc
add
add
nop
push
loopne
cld
add
bound
stc
push
outsb
rcl
sub
push
sub
push
or
mov
dec
lea
roll
ret
aam
call
inc
dec
outsb
sbbb
pop
andb
add
jbe
popa
or
xchg
jge
loop
clc
repz
sbb
test
add
push
adc
shl
or
or
add
xchg
psubd
fdivl
and
aas
jl
out
es
adc
rolb
push
jl
bound
movsb
loopne
jmp
sbb
mov
in
mov
call
sbb
push
int3
mov
test
sbb
arpl
mov
sub
cmc
mov
fidivrl
push
push
scas
adc
fdivrl
js
adc
je
fs
adc
adc
or
inc
xchg
push
repnz
add
add
cmpsb
shlb
mov
js
push
sub
inc
mov
cmpsb
adc
pop
lcall
adc
shrl
push
jbe
or
insb
in
sbb
loope
push
neg
sbb
dec
lea
bnd
xor
inc
and
popf
fidivs
in
sbb
lods
sbb
sub
xchg
insb
push
xor
lods
and
mov
rolb
pop
and
jge
or
pop
push
mov
pop
add
push
xchg
cmpsl
mov
mov
pop
shrb
sbb
mov
lahf
jo
dec
insb
mov
add
mov
jmp
dec
into
in
adc
jp
cmp
jne
pop
in
lock
pop
in
or
hlt
xor
cmp
aas
fsubr
dec
shll
ror
jo
jmp
loope
std
and
push
shlb
mov
mov
sbb
jo
ror
push
lcall
loope
pushl
inc
adc
cmp
repnz
test
cmp
jne
pushf
xor
lods
rclb
sub
inc
inc
sbb
add
leave
rcrb
push
lcall
push
loope
mov
mov
adc
out
mov
mov
add
aad
fldl
scas
shrb
sbb
imul
push
mov
testl
lea
push
rcrb
push
adc
rclb
push
fstpl
pop
mov
or
or
adc
push
adc
repnz
ja
push
stos
sub
add
testb
rorb
lods
pusha
push
mov
jbe
adc
test
lret
sub
notl
cmp
add
xor
mov
inc
sbb
test
sub
dec
rcrb
xor
ja
mov
cmp
dec
jo
cmp
and
and
adc
das
inc
and
imul
mov
fldl
xor
add
or
add
lcall
push
and
pushf
daa
sldt
pop
mov
fcompl
dec
sbb
xchg
sbb
sub
pusha
xchg
nop
cld
roll
and
icebp
push
xlat
xor
sbb
sub
dec
ds
dec
push
or
inc
xlat
jns
pop
adc
test
out
pop
leave
xchg
mov
lahf
fildl
ds
ret
sbb
or
jno
stc
adc
daa
or
pop
orl
jno
dec
or
jbe
push
or
andb
mov
jmp
xor
mov
jl
pop
or
push
addl
inc
je
mov
jmp
xor
mov
mov
xor
popf
fstpl
adc
pop
push
sub
push
insl
arpl
inc
and
cltd
xchg
xchg
les
pop
call
in
insb
push
mov
xor
clc
mov
mov
push
outsl
adc
xor
js
jo
cwtl
hlt
fdivrp
inc
pop
fldl
xor
adc
xchg
push
lcall
imul
jl
outsb
or
popa
mov
xor
int3
mov
push
fstp
test
jne
xor
mov
push
inc
and
idivb
jo
jle
lahf
hlt
cmovbe
sub
inc
inc
sahf
cmp
je
ja
stos
sarb
rorb
add
mov
jo
push
mov
sub
pop
rolb
adc
enter
mov
inc
dec
jae
jnp
jae
pop
push
jae
inc
and
push
ret
jne
orl
and
push
sub
xor
outsl
push
outsl
outsl
test
jnp
inc
push
je
and
gs
pop
mov
les
mov
mov
test
test
pop
cmp
or
and
and
int
pop
dec
pop
rorl
xor
adc
xor
testb
out
inc
jmp
std
loope
inc
ss
insb
imul
sahf
lret
lock
repnz
mov
enter
popf
test
mov
inc
or
sub
out
jl
or
movsl
in
mov
ja
pop
push
jmp
or
scas
dec
inc
es
call
dec
or
sbb
or
adc
out
dec
cwtl
leave
leave
sub
inc
sbb
int
or
push
in
inc
fists
mov
lret
dec
lret
addl
xchg
inc
adc
js
ficoml
xchg
dec
sbb
add
jo
cld
push
outsb
xor
ljmp
xchg
idivb
adc
jns
ss
add
adc
pusha
inc
cltd
addl
and
cmpl
scas
add
or
repz
adc
push
popf
or
jne
fildl
in
ds
decb
push
sahf
inc
push
add
add
push
sbb
sbb
add
sbb
push
pop
adc
test
hlt
pushf
pushf
cmp
mov
lds
aad
jnp
dec
in
sti
outsl
push
mov
cmp
psllq
add
cmp
and
inc
push
fsubl
cwtl
sbb
mov
cmp
das
pop
sub
leave
dec
push
call
orb
cmp
and
pop
adc
out
outsl
test
leave
aam
or
nop
jecxz
cmpsl
adc
dec
adc
rorb
hlt
mov
ret
jo
push
data16
dec
xchg
test
testl
push
xchg
div
pop
mov
xor
ljmp
sti
push
mov
loopne
xor
xor
sbb
fnsave
rorl
adc
pop
icebp
inc
das
test
out
jge
sub
test
jo
movsb
repnz
jg
sub
jge
pop
add
daa
mov
pusha
daa
and
sbb
jns
jb
xchg
sub
sub
pop
push
sbb
sub
popa
inc
mov
pop
push
cld
xchg
bound
push
jbe
jne
subb
push
or
inc
xchg
lret
sbb
sbb
ret
bound
shlb
out
push
andb
dec
shlb
sbb
pusha
cmpl
jne
push
xlat
test
out
mov
leave
int3
cmp
test
jge
outsl
add
xor
cs
jl
fstl
icebp
movl
int3
pop
fisttps
xchg
insl
adc
orb
adc
or
pusha
mov
push
jge
test
je
cwtl
or
notb
mov
repz
iret
stos
lcall
dec
jbe
mov
mov
or
int
inc
and
js
cmp
dec
cmpl
xchg
inc
push
cmp
adc
movsl
pop
rolb
imul
loope
pop
ret
ret
mov
into
mov
inc
dec
icebp
sti
clc
dec
mov
xor
rcll
cmp
sub
stos
fidivrs
das
pop
cmp
jl
mulb
xchg
lock
inc
push
jl
push
mov
inc
mov
sbb
in
xor
mov
scas
push
fs
add
cmp
into
mov
pop
hlt
test
pop
out
add
cmp
test
mov
xor
fwait
test
lock
xchg
inc
pop
push
or
add
push
lods
xchg
and
dec
jecxz
mov
xchg
aad
or
lods
es
add
push
or
and
stc
jp
push
pop
pop
in
sbb
push
and
jae
sahf
xor
push
movb
in
nop
ljmp
jl
add
push
inc
inc
add
xor
and
pop
cltd
lahf
js
xchg
cli
push
movsl
mov
lock
insb
stos
shl
xchg
lea
mov
fisttpll
js
lcall
push
sub
cs
mov
sub
push
and
stos
xchg
pushf
mov
jno
and
and
lahf
mov
add
mov
orb
and
sub
in
and
xor
dec
mov
sbb
sbb
leave
sbb
and
pop
adc
xchg
lods
lea
repz
ret
push
rorb
mov
neg
out
cmp
les
imul
fdivrl
dec
dec
add
push
daa
pop
gs
inc
push
repz
ret
stc
loop
pop
hlt
setne
ljmp
repz
sti
aas
push
push
push
incl
mov
sbb
hlt
jne
push
push
push
push
push
imul
loopne
dec
xor
rolb
call
pop
outsb
add
push
outsl
pop
rcr
and
mov
push
push
addb
and
scas
xor
xchg
and
inc
nop
push
and
pop
mov
lods
in
dec
sbb
pop
add
dec
mov
add
sete
jnp
dec
and
push
push
mov
add
push
sbb
dec
mov
push
adc
enter
cld
push
push
sbb
xor
sahf
mov
push
add
inc
push
sub
aad
loope
push
sbb
adc
add
sub
mov
jno
add
pop
fwait
ret
popa
test
inc
and
xor
dec
or
pop
pop
dec
cmp
dec
divl
jge
lcall
mov
push
mov
or
xor
push
test
xor
dec
arpl
mov
xchg
fwait
popa
add
and
mov
scas
inc
outsl
push
cltd
das
push
add
pop
adc
push
push
mov
inc
pop
mov
xchg
xchg
loope
je
adc
inc
fnstenv
push
xor
or
inc
pop
mov
push
bound
jmp
fildll
push
mov
mov
out
test
lret
pop
mov
add
daa
mov
jp
test
inc
out
or
adc
mov
icebp
or
pop
into
xchg
push
xchg
jge
lock
mov
mov
lods
fdivrl
mov
xor
add
clc
add
mov
ret
push
out
test
cmp
adc
pop
dec
dec
std
loopne
ffree
stos
dec
test
imul
sbb
adc
cmp
jge
adc
shl
or
icebp
push
cmp
leave
ret
xorb
rol
nop
sub
mov
incl
outsl
cld
and
sbb
mov
movsl
mov
notl
es
cwtl
add
sbb
mov
push
mov
shll
ja
shlb
addb
push
fs
push
push
call
repz
xor
mov
test
xorb
call
inc
add
pop
fdivs
ljmp
jbe
sbb
fidivrl
pop
mov
add
lea
aas
push
inc
sub
insl
in
rorb
out
test
insb
mov
cmpsl
clc
dec
in
add
shrb
sahf
sub
sti
pop
cmp
sbb
shlb
push
sbb
movl
aam
jmp
xchg
dec
pop
orb
lds
push
mov
dec
je
ljmp
in
scas
push
xchg
mov
lret
out
mov
sbb
adc
sarl
xor
je
cmp
je
lcall
clc
cmp
add
jb
cs
hlt
push
es
sub
add
push
push
pop
push
add
cmp
jno
jmp
cmp
dec
hlt
jge
mov
ret
shl
out
movsl
mov
add
mov
outsb
test
lahf
or
add
and
push
ljmp
imul
test
fsub
lcall
jecxz
and
push
cmp
jg
loope
rcl
movsb
ss
outsb
aaa
add
push
jmp
insl
mov
pop
mov
hlt
mov
adc
and
sub
mov
adc
adc
aad
cs
hlt
sub
rcll
xor
movsl
add
mov
dec
cwtl
xor
add
or
pop
or
arpl
lock
push
nop
mov
inc
adc
xlat
mov
ja
outsb
pop
cmpb
cmp
or
jnp
out
scas
xchg
mov
sbb
ret
mov
mov
roll
jle
xor
mov
mov
xchg
jne
lret
ret
jl
and
ret
sbb
adc
mov
fnstcw
sub
ss
jge
or
cli
cmp
xor
and
add
pop
xor
mov
cmp
sub
cmp
dec
xchg
mov
pcmpgtd
sahf
push
sti
adc
roll
push
test
push
fstpt
xorl
lahf
pop
enter
push
ds
imul
sbb
movb
push
pop
data16
test
inc
lret
pop
fiadds
pop
add
and
call
cmp
cli
or
bswap
andl
andl
or
fsubrs
lock
movsb
jb
lea
cmp
pop
pop
aad
clc
mov
mov
daa
aam
or
inc
mov
mov
xchg
out
ja
roll
lods
stos
push
sbb
push
mov
cli
jbe
cmpl
or
pop
inc
inc
enter
add
int3
inc
aaa
push
pop
cmpsl
in
fidivrs
jne
jmp
mov
mov
sbb
cli
shr
push
outsl
das
mov
add
add
mov
add
outsb
roll
xchg
ds
popf
insb
imul
dec
sub
imul
xchg
mov
adc
les
mov
pop
pop
sub
xchg
mov
xor
mov
xchg
jo
lods
add
movsl
pushf
les
push
push
stos
sub
lret
int3
push
add
push
cmp
outsb
push
xchg
mov
or
sub
sub
movsb
adc
rolb
fildl
cmpsb
rolb
adc
xchg
aad
test
xchg
xchg
jbe
push
xchg
xor
pop
sub
icebp
mov
scas
mov
fs
in
addr16
cmp
cmpsb
inc
cli
ret
mov
jg
fcomps
inc
lea
mov
xor
add
lea
fs
out
jp
or
les
in
dec
push
bound
jmp
cmp
rcrl
fadd
in
add
push
shr
pushf
pop
mov
in
js
test
mov
arpl
inc
pop
gs
fmuls
ja
popa
test
les
mov
xor
add
xrelease
mov
leave
push
or
movsb
adc
enter
icebp
jo
nop
adc
scas
mov
or
lcall
add
lret
push
sti
adc
repz
fwait
cmp
push
sbb
dec
jge
pop
mov
push
mov
pop
das
or
je
mov
jl
add
out
pop
daa
dec
call
lods
dec
lods
cmpsb
jl
inc
xchg
cmp
insl
or
subb
sbb
xor
add
push
or
ret
adc
sbb
fildl
daa
mov
xchg
push
pop
je
inc
pop
adc
pop
sub
je
mov
mov
jl
mov
dec
pop
call
sbb
call
shlb
les
sub
inc
popl
bound
jne
repnz
jae
vpcmpeqw
or
lret
mov
or
sbb
inc
push
mov
bnd
stc
push
add
adc
adc
dec
inc
out
mov
inc
jl
mov
ss
shrl
int3
rolb
sbb
in
add
inc
fisubrs
jne
or
sub
pusha
mov
loope
fs
testb
inc
xchg
jmp
mov
popf
pusha
fstpt
inc
or
sbb
pop
adc
call
push
or
dec
or
sub
jne
fnstenv
and
adc
ja
mov
push
push
int
fcompl
and
jmp
push
push
fiaddl
test
pop
ja
sub
cs
push
divl
ss
push
add
int3
pop
xor
or
mov
in
fs
push
push
dec
jns
xor
rcrb
add
test
add
mov
lcall
add
jle
xchg
jmp
call
xchg
add
and
add
lock
fwait
or
and
cmp
add
push
shlb
fadds
pop
jmp
xor
inc
nop
jnp
jo
pop
outsl
notl
pop
pusha
pushf
cmp
popa
in
or
push
dec
jo
push
jo
xchg
pop
and
and
mul
mov
mov
out
stos
add
lock
add
pop
pop
jno
xor
sub
daa
aaa
mov
pop
mov
movsl
lods
pop
fadd
iret
addr16
stos
push
icebp
clc
dec
mov
insb
mov
jo
jae
mov
mov
call
push
or
and
or
mov
mov
imul
and
loopne
jno
jmp
rol
pop
in
mov
aaa
mov
xchg
add
sbb
imul
shlb
add
ret
imul
push
push
add
and
push
pop
in
jo
movsb
shl
sar
xor
mov
pop
dec
mov
xchg
adc
mov
jecxz
adc
pop
add
inc
enter
leave
adcb
pop
rcrb
scas
and
orl
jbe
lods
adc
lret
push
mov
int3
xchg
shl
fisubl
lcall
aam
stos
or
pop
fsubrs
outsl
sub
push
xor
and
add
push
add
push
test
lea
mov
ret
adc
loopne
sub
lods
test
mov
cmp
push
push
mov
jmp
mov
sub
jne
xor
push
imul
inc
adc
cld
cld
push
je
or
jge
push
lock
pop
inc
ficomps
push
inc
mov
add
or
xor
test
xlat
nop
in
add
push
xchg
or
subb
push
lea
push
lock
rcrb
lret
cld
sub
mov
imul
jo
pop
pop
sub
and
dec
in
push
xor
lock
call
or
cmp
loop
pop
hlt
addl
mov
add
mov
icebp
add
iret
push
push
add
sbb
jecxz
cmp
or
test
dec
jp
mov
add
add
lods
rcll
or
push
mov
icebp
test
pop
add
jo
enter
dec
sbb
pop
mov
imul
lea
mov
mov
jp
sbb
or
sub
inc
movsl
inc
xchg
push
sbb
ja
gs
mov
leave
or
mov
insb
into
insb
stc
sbb
cmpsb
push
es
and
movsb
test
adc
aad
or
dec
out
xchg
add
add
mov
push
call
ret
xor
jg
cltd
inc
pop
push
mov
cmp
je
push
add
sub
push
push
jecxz
adc
punpcklbw
mov
repz
pop
lahf
cmc
clc
cmp
mov
in
imul
into
pop
and
xlat
clc
je
sub
insb
fnstcw
adc
xchg
int
jl
loope
sub
aam
lods
test
lock
test
push
std
dec
push
adc
jl
push
push
out
sub
jecxz
dec
mov
push
test
push
mov
adc
cs
movsl
nop
push
icebp
xor
mov
leave
mov
mov
cmp
je
push
lea
push
fucom
test
push
mov
fwait
adc
clc
push
sbb
and
inc
pcmpeqd
pop
or
mov
sub
sarb
xor
adc
call
push
aas
push
adc
sub
rolb
imul
sub
inc
mov
clc
add
hlt
push
in
inc
mov
jbe
in
mov
cwtl
jp
je
ficoml
ret
fistpll
mov
pop
insl
adc
mov
rcl
and
lock
xchg
sub
mov
or
shlb
in
test
movsl
push
push
xor
push
push
cmp
je
add
aam
push
xchg
cmp
add
fiadds
push
in
mov
mov
push
aas
movsb
mov
bound
int3
sub
mov
mov
testl
cs
push
icebp
insl
sub
shll
push
sarb
imull
jnp
jl
push
test
loopne
in
fld
loope
imul
cli
out
outsb
pop
enter
rorb
mov
shll
scas
in
ds
adc
dec
sbb
pushl
and
ljmp
adc
cltd
lcall
xchg
dec
ficoms
push
cli
je
ret
pop
or
and
mov
adc
data16
pop
lock
andl
ret
add
jb
pop
dec
popf
andb
cmp
pop
sbb
xor
imul
cmc
push
and
cmp
js
fbstp
lea
in
cmp
je
cmp
je
cmp
jne
xorb
add
cmpsb
mov
fcmovbe
add
call
jno
andb
outsl
loopne
clc
dec
outsb
pop
mov
cmp
xor
adc
sub
pop
clc
es
add
jo
roll
out
mov
enter
add
jno
cmp
jne
xchg
mov
add
and
sbb
notb
mov
or
aad
pop
cltd
sub
lods
push
push
cld
mov
lea
add
sub
add
shll
stos
pop
cmp
ds
ret
ds
sub
sbbb
shlb
adc
icebp
cmpb
imul
pop
out
call
sahf
out
inc
aaa
popa
push
ret
popf
push
push
add
mov
push
add
push
sbb
mov
add
pop
push
inc
cld
xchg
cmpl
jno
add
and
jmp
je
cmpl
in
xor
mov
or
add
idiv
divb
push
cmp
gs
je
cmp
jne
mov
sbb
add
jmp
xchg
push
dec
inc
lock
mov
pop
dec
push
cld
fcomi
xor
push
movsb
jne
jmp
testb
lcall
mov
aam
add
cli
cmp
jbe
lods
lea
sub
cmp
fs
dec
inc
jmp
inc
and
rclb
pop
mov
pusha
cmpsb
mov
mov
and
test
addr16
aaa
fwait
inc
shlb
lahf
push
nop
cmp
cmp
je
sbb
clc
out
mov
lea
adc
clc
mov
jl
lret
test
pop
in
inc
xor
mov
bound
jge
pop
sahf
jne
cmp
jle
sti
cmp
notb
cmp
push
push
jno
xchg
clc
je
sub
movb
cmp
or
ja
sarb
pavgb
enter
lds
push
cld
add
push
cmp
push
stos
adc
or
femms
ds
jo
cmpsb
inc
sub
popa
loop
jne
cmp
push
jno
push
test
mov
lcall
bound
mov
data16
jb
push
lret
aaa
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
sub
jne
and
dec
hlt
add
je
fs
jne
xor
rcrl
lock
test
sub
push
mov
or
add
pop
jae
aaa
sbb
jmp
dec
shlb
cld
jbe
test
mov
or
push
sar
mov
out
popa
call
rcll
out
push
push
adc
aaa
and
cmp
jg
or
jge
int
int
pop
aaa
or
jle
es
sub
sub
jp
jle
jmp
cmp
jl
pop
jle
pusha
mov
and
dec
jbe
jp
jb
lock
pop
popa
test
fwait
and
mov
je,pn
test
jne
je
outsb
roll
and
xchg
je
je
es
sub
and
add
add
inc
sbbl
push
sbb
movsl
push
or
inc
add
shlb
inc
push
push
mov
inc
and
sahf
call
adc
mov
outsl
loopne
jmp
mov
mov
jp
inc
es
push
ljmp
or
pop
push
movl
sub
mov
cli
jecxz
xor
push
cmpsb
insb
xor
xchg
push
adc
mov
add
testb
roll
pop
jno
mov
je
out
cs
es
add
mov
cmpsl
ret
jne
xchg
push
mov
sub
push
sub
imul
mov
movb
popf
mov
lea
mov
push
faddl
pop
add
pop
jb
sbbl
incl
pop
cmp
mov
daa
jb
or
xor
imul
and
xor
cwtl
jne
pop
lock
stc
jne
stos
dec
daa
mov
add
ds
push
push
mov
inc
movb
jae
outsb
je
xor
cmp
jo
pop
or
xchg
adc
xchg
add
mov
fsts
add
mov
jl
add
or
pop
mov
xor
add
stc
and
and
inc
ss
push
ss
data16
jmp
in
movb
hlt
mov
aam
xor
pop
mov
push
mov
clc
add
inc
inc
shr
pop
popf
dec
sbb
scas
jl
add
cmp
sbb
mov
push
data16
mov
cmp
push
or
mov
cmp
lock
pop
xlat
cld
xchg
popa
hlt
sub
inc
xchg
xchg
pop
adc
add
xor
xchg
shr
call
aad
push
sbbl
or
loop
lds
mov
js
sti
pusha
jb
cs
push
xor
inc
or
icebp
jo
cwtl
and
add
inc
enter
mov
xchg
dec
inc
push
outsb
outsb
cltd
jmp
jno
rcr
inc
outsl
cwtl
insl
mov
add
mov
into
push
lds
sahf
lods
mov
test
cwtl
adc
sub
and
push
xor
xchg
jne
lahf
jne
addl
xchg
xchg
jae
push
pop
pop
mov
imul
jne
iret
push
leave
cwtl
sbb
inc
mov
rorl
or
fs
cmp
or
test
inc
inc
enter
cmpsl
and
mov
test
mov
push
lock
setne
jge
cltd
ret
inc
xchg
mov
fs
ja
call
loope
mov
xor
inc
shl
inc
push
in
xor
ret
jne
stos
jmp
lock
rclb
pop
out
sbb
mov
jne
adc
push
push
fdivl
jne
sbb
roll
lods
cmp
jnp
das
movl
icebp
sbb
das
bound
into
xorl
jbe
mov
inc
not
sbb
cmpl
sbb
adc
stos
mov
jb
fcomps
xchg
jle
jo
lret
cmp
je
sarl
lds
lds
add
inc
xchg
ret
cs
loope
jge
pop
and
aaa
sbb
das
mov
inc
lods
jp
hlt
push
cwtl
mov
shl
mov
pop
ret
dec
imul
fsubr
dec
mov
mov
jle
test
jo
push
push
sub
add
inc
push
call
insl
mov
jne
jl
sub
mov
jo
jge
jo
fisttps
incb
jae
jmp
pop
jl,pt
incl
aas
je
lea
cmpb
cmp
jne
les
push
fisttpll
aam
adc
jmp
cmp
dec
lds
mov
mov
inc
incl
fnstcw
data16
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
sub
mov
jl
add
icebp
inc
adc
and
jae
add
js
fidivrl
push
and
push
or
ljmp
sahf
pop
lahf
jbe
mov
or
das
ret
or
pop
jl
sbb
cmp
sbb
aad
pop
fcmovnb
pop
push
inc
shrl
cmp
lcall
sub
adc
add
sbb
or
pop
cmp
add
leave
mov
test
mov
shlb
arpl
test
or
xor
fwait
test
mov
add
add
or
or
mov
lret
push
push
rolb
inc
push
sbb
lock
insl
or
push
das
rolb
sarl
cs
adc
cmp
dec
mov
mov
js
in
jbe
cmp
jae
lret
inc
and
mov
fadds
cs
sub
xor
xchg
lret
in
xor
cmp
cmp
sbbb
fists
stc
add
ret
adc
rolb
mov
mov
or
xor
in
add
test
cmpl
sub
add
ds
xchg
push
punpcklbw
add
cmc
push
or
js
roll
sbb
enter
mov
pop
sbb
or
pop
cmpsb
sub
imul
or
call
aas
cmp
popf
and
push
cmp
pusha
mov
mov
jne
jle
test
test
xor
ret
sbb
or
and
jl
orl
and
loopne
inc
or
add
pop
inc
dec
movl
mov
sub
es
mov
shl
mov
pusha
mov
inc
fucom
xor
repnz
hlt
test
cmp
repnz
pop
test
or
or
add
lcall
imul
lahf
add
and
ss
push
xor
into
xchg
or
out
jne
cld
aam
mov
cmpsb
dec
xor
test
pop
imul
fadds
add
pop
jmp
jmp
lcall
hlt
cmp
xorl
inc
dec
rclb
jnp
adc
outsb
sub
test
fucomi
ud0
add
mov
jmp
aad
lea
mov
faddl
or
mov
shll
sbb
jo
jnp
bound
lea
fiaddl
insl
cmp
mov
rolb
xchg
daa
push
push
andl
mov
pop
imul
inc
fsub
in
in
mov
shl
cli
mov
addr16
push
xchg
out
xchg
repz
orb
cmp
xor
jg
push
xchg
push
jmp
add
xor
push
mov
sbb
push
adc
outsl
popa
aam
mov
clc
push
or
pop
out
add
daa
shlb
in
loopne
xor
lcall
iret
ja
mov
push
jno
or
fcoml
mov
dec
or
lahf
cmpb
popa
ss
cmp
xchg
jo
jge
add
add
sub
pop
imul
rcr
loopne
inc
sahf
add
loopne
push
mov
dec
repnz
jne
imul
sbb
xchg
out
cmp
sub
cltd
inc
mov
ret
push
jns
popa
adc
pop
or
scas
outsl
lock
dec
cld
mov
adc
mov
sub
xchg
cwtl
lods
pop
fld1
sub
pop
pop
sbb
adc
or
ror
imul
and
outsl
inc
jmp
push
pop
mov
add
mov
adc
mov
jmp
sub
add
add
mov
imul
adc
dec
sbb
push
xor
pop
dec
roll
cmp
loopne
test
mov
pop
popf
and
daa
lcall
loope
inc
mov
cmp
sti
or
pop
ret
xchg
add
inc
push
std
add
fidivs
dec
arpl
dec
dec
andl
push
mov
adc
jb
adc
pop
mov
jo
add
mov
xchg
sbb
adcb
repz
cmpsb
cmpb
or
or
iret
push
ret
pushf
xor
push
add
call
add
lock
movsl
add
arpl
add
pop
shrb
inc
rclb
movl
add
loope
inc
or
jge
addr16
and
push
lock
dec
adc
fnstcw
jecxz
add
adc
loopne
push
or
icebp
into
mov
aaa
jae
popf
add
mov
ja
in
ret
or
aaa
mov
dec
inc
out
or
push
pop
in
push
mov
cs
les
imul
loopne
mov
add
mov
dec
nop
insl
mov
mov
adc
and
jnp
push
and
wbinvd
add
dec
sbb
inc
loope
scas
int3
bound
subb
push
orl
lret
xchg
xchg
xchg
xor
rclb
imul
and
lret
lock
pushf
mov
inc
cwtl
insb
sbb
push
mov
std
pop
add
cmp
add
mov
xor
ss
aam
int3
jecxz
dec
jge
test
pusha
adc
dec
in
rclb
icebp
mov
dec
ja
mov
insl
adc
add
fildl
cwtl
leave
mov
out
hlt
fcompl
inc
push
insl
inc
cmp
cmp
pop
inc
push
or
shlb
repz
jecxz
lcall
fildl
xor
leave
inc
xchg
push
or
pop
mov
sbb
jp
sub
call
and
xor
fcomip
push
xor
pushf
pop
es
cli
or
mov
cmp
inc
dec
inc
arpl
push
jmp
clc
insb
call
shll
push
rorb
shl
int3
or
movl
push
inc
imul
pop
pop
push
out
and
inc
cltd
inc
adc
es
mov
fiaddl
or
push
fs
or
pop
or
or
or
push
or
fisttps
pop
mov
or
or
jb
out
push
mov
test
and
and
or
or
sub
sub
mov
imul
push
mov
mov
mov
clc
jne
xor
jae
sbb
in
push
sub
lea
enter
cmpsb
inc
enter
repnz
data16
push
and
fstpl
push
fwait
int
pop
adc
xor
das
push
jmp
push
pop
pushl
adc
push
jo
imul
pop
xchg
addl
rsm
xchg
add
or
jns
shlb
pop
xchg
mov
in
adc
pop
outsl
adc
aaa
inc
jg
add
jl
mov
repz
sbb
adc
dec
imull
jmp
test
and
pop
fisubl
adc
ds
add
nop
push
pop
push
addb
movsl
sub
das
add
and
jg
in
icebp
cmp
jne
fistl
nop
es
dec
adc
inc
sub
xlat
mov
dec
or
mov
repz
add
cmp
pop
cmp
sub
add
push
pop
mov
aam
sbb
addr16
dec
sahf
dec
and
or
push
sbb
lcall
or
adc
mov
enter
adc
adc
or
xchg
sub
sbb
out
je
and
sbb
fldenv
jmp
sbb
inc
and
adc
sub
push
or
push
test
test
lods
insl
out
jge
xor
pop
mov
enter
pop
add
pop
hlt
repz
test
sbb
add
dec
cmpl
inc
add
rcrb
push
fwait
sbb
dec
sbb
and
mov
sbbb
loop
leave
ret
push
shll
testb
pop
add
sarb
mov
add
mov
mov
lahf
rclb
xor
sbb
cwtl
nop
and
sbb
loope
leave
dec
pusha
mov
xor
xchg
enter
jl
movsl
cs
andl
not
dec
or
mov
inc
sbb
incb
fs
mov
mov
and
adc
inc
jo
iret
xor
inc
mov
andb
in
or
rorb
sbb
or
rolb
xor
jo
cs
jne
pop
xchg
cmp
and
xor
cli
xor
popf
add
xor
xchg
sub
test
dec
mov
jbe
pusha
sub
lods
pop
xor
add
and
push
scas
xor
stos
adc
fcoml
cs
add
stc
enter
or
add
adc
xor
leave
and
jmp
sub
int
jb
int3
jmp
sub
mov
jle
pop
in
dec
or
stc
sub
pop
xor
stos
and
pop
adc
inc
nop
or
ds
mov
movsl
inc
xor
loopne
pop
mov
aas
add
cmp
jnp
xor
inc
enter
sub
pop
push
add
test
adc
in
mov
jp
fucomi
pop
xchg
push
add
aam
jns
js
xor
movsb
and
sbb
or
sub
in
test
dec
dec
cmp
inc
cs
ret
mov
cmp
sbb
xor
add
push
cwtl
xchg
add
push
ret
sub
cmpsl
mov
xor
mov
loope
pop
push
xor
ja
add
add
sub
clc
push
mov
jmp
loopne
enter
orb
lods
repnz
pop
mov
in
adc
dec
enter
xchg
dec
xor
pusha
xor
push
adc
cmp
enter
test
adc
dec
and
jp
push
ret
or
dec
aaa
repz
mov
sbb
lret
mov
push
lods
lret
mov
das
jle
xor
push
push
push
nop
add
daa
mov
jno
fsubrs
out
testl
pop
hlt
jne
push
mov
scas
sbb
roll
jle
scas
jl
ret
fmuls
rclb
dec
and
int3
lock
sbb
sbb
fnstsw
sahf
movsl
cmp
or
lahf
lock
pop
repnz
sub
in
xor
add
test
xchg
das
add
adc
lds
icebp
mov
push
cwtl
or
fmuls
enter
dec
or
je
psrad
mov
pushf
xchg
jbe
outsl
and
adc
fwait
xor
add
mov
cmpsl
xchg
in
mov
or
sbb
scas
aam
adc
pop
adc
push
push
xor
in
jbe
pop
and
inc
add
nop
dec
ror
test
call
loopne
aaa
and
xor
push
call
adc
push
mov
repz
cmp
in
and
xor
fmull
in
pop
fstps
repnz
jp
dec
lret
mov
push
fadds
or
es
into
lea
je
insb
test
and
add
sarb
inc
enter
jecxz
push
outsb
push
inc
or
push
sub
ljmp
or
stos
int3
shrl
pushf
inc
mov
sub
xor
outsl
movnti
inc
or
jmp
sub
push
push
or
out
or
cli
aad
inc
pop
sbb
cmp
jno
jecxz
add
fadds
je
push
add
ja
sub
add
jnp
xor
lea
or
sbb
lcall
xlat
or
and
mov
mov
mov
daa
push
int3
lds
and
loopne
pusha
and
push
aam
mov
int
mov
mov
sbb
in
inc
jo
jne
xor
inc
add
loope
sub
push
fadds
sub
pop
jbe
ret
mov
test
add
sub
xchg
lock
mov
pop
adc
pop
call
fistps
inc
pop
dec
out
pop
xchg
jo
or
jae
or
mov
hlt
je
out
push
movsb
jb
inc
call
inc
stos
cmp
inc
daa
mov
mov
add
cmpsl
mov
in
call
andl
push
sub
imul
mov
pop
sub
mov
mov
imul
mov
cmc
ds
xor
sarb
or
pusha
or
push
jle
inc
loopne
mov
movsw
cmp
sahf
or
notb
adc
jl
add
push
add
add
xor
pop
mov
leave
shlb
int
push
jmp
ficompl
dec
jbe
or
cld
movl
stos
inc
add
mov
push
add
and
push
call
or
or
push
inc
lret
and
inc
mov
jmp
pop
sbbb
mov
and
icebp
sub
or
or
adc
scas
or
cwtl
idivb
xchg
stos
testb
aam
dec
push
sub
and
out
cmp
add
shrl
ss
dec
sbb
push
scas
push
mov
insl
rclb
cmp
out
sbbb
jl
dec
test
xor
or
cld
ret
add
mov
xchg
adc
inc
mov
add
in
sub
adc
or
jmp
jb
scas
xor
mov
and
jne
ret
in
mov
test
rclb
dec
add
sub
sti
cld
aaa
outsb
mull
rorl
movsbl
inc
xor
inc
sbb
fcompl
xor
xor
xchg
fidivrs
or
pop
int
xor
push
jmp
push
and
cmpsl
jmp
xorl
jg
icebp
cmc
psadbw
push
add
adc
push
inc
push
push
cmpsl
pop
lret
mov
cmc
mov
movsl
xchg
or
and
imul
cmp
jns
outsb
sti
xor
mov
ret
pop
or
mov
mov
inc
mov
mov
sbb
and
pop
or
push
mov
mov
jg
xchg
add
movb
movl
xchg
push
push
mov
ja
sbb
dec
mov
add
push
jge
lahf
int
fdivs
cmp
ljmp
jge
cmp
jne
push
ret
fiaddl
push
push
lods
cmpsl
test
sub
mov
or
aas
fiadds
repz
adc
jl
sbb
inc
inc
lock
aaa
xor
ss
cmp
je
nop
lock
movb
pop
dec
test
push
push
and
pusha
mov
mov
add
cmp
xchg
repz
xor
inc
jge
adc
dec
out
sbb
mov
mov
repz
add
outsb
or
mov
or
test
sub
add
fs
sbb
jl
adc
in
dec
in
imul
sub
lahf
mov
pop
push
movb
mov
add
xchg
movl
fwait
mov
xchg
add
enter
mov
cmp
jbe
xchg
mov
lret
mov
out
xor
push
mov
push
xor
mov
nop
jne
xor
push
sbb
adc
add
inc
inc
cmp
or
aas
sbb
mov
enter
sub
rclb
sbb
rcrb
mov
mov
addr16
cli
enter
lahf
mov
mov
mov
push
ficomps
mov
jge
mov
pushf
call
jo
jo
mov
js
in
jle
mov
dec
mov
loopne
cmp
cld
fadds
cmpsb
js
sarb
ss
bound
sub
add
adc
push
xlat
fbld
push
cmpsb
sbb
xor
cmc
push
pop
stc
fdivrs
cmp
je
or
jne
arpl
mov
loop
js
pop
jl
push
pop
movl
push
and
mul
dec
sub
and
jmp
out
leave
jb
ret
push
sub
and
lods
rorb
push
cmp
sbb
stos
or
or
jl
loopne
adc
test
mov
loopne
cmp
outsl
inc
pop
test
or
adc
in
je
lods
addb
adc
ljmp
lcall
jb
pushl
fxch
push
sbb
xor
call
sbb
dec
ret
flds
cmp
add
push
jae
pop
or
inc
orl
ds
imul
adc
push
adc
push
inc
push
add
movl
fnstenv
sub
or
jbe
cmp
adc
mov
inc
imul
lahf
imul
or
mov
xchg
jb
add
mov
add
ds
lock
pushf
lea
mov
les
and
push
pop
dec
cmc
xchg
les
inc
lea
fsubs
loop
test
mov
lea
or
mov
mov
cmp
ja
xor
loop
pop
scas
nop
roll
xor
add
pusha
insb
cltd
inc
and
xchg
outsb
test
flds
pop
fdivrl
mov
sub
adc
lock
or
jmp
inc
test
cs
aam
pusha
insb
pop
jno
cmp
push
sub
cmp
inc
out
mov
scas
push
sbbl
push
sbb
ds
movsl
and
adc
dec
mov
test
addr16
out
jp
aam
dec
arpl
xchg
jae
dec
jo
push
adc
inc
cmp
add
sbb
pop
cmp
jne
dec
aam
sub
movsb
js
xor
fnstenv
mov
jbe
cmp
xorl
js
jb
pop
fistpl
leave
fs
lods
mov
movsb
push
pop
js
hlt
inc
cmp
lock
mov
sahf
ffreep
sub
or
mov
cmpsl
and
lea
sbb
dec
add
lods
xor
or
cmp
shl
cmp
outsl
pop
mov
loope
push
sub
mov
das
sub
lods
jp
xchg
faddl
add
or
mov
pusha
andl
and
rclb
mov
xchg
and
jmp
or
stc
mov
orl
lahf
testb
sub
mov
nop
jae
jecxz
subl
outsl
add
or
std
pop
pop
sub
mov
jp,pt
xor
or
and
clc
jnp
cs
add
ja
cld
push
loopne
testb
pushf
lods
and
pop
ret
mov
push
cmpb
add
sbb
inc
test
xchg
add
sub
jb
movnti
out
test
cs
pop
push
xor
dec
inc
call
into
push
into
in
daa
je
ds
jmp
pop
lock
mov
fsts
test
jl
aaa
ja
or
sbb
hlt
mov
ljmp
pushf
fildl
pop
inc
mov
jmp
push
xorl
pop
out
push
and
and
movzwl
stos
inc
cmp
adc
mov
mov
stos
and
cmp
cmpsl
mov
sbb
push
xchg
push
sahf
es
push
push
mov
notb
adc
push
mov
push
iret
fimuls
aas
les
or
out
mov
sub
inc
popf
dec
adc
and
cmpsb
add
inc
aad
push
lcall
mov
push
xchg
mov
lahf
roll
jle
add
rclb
pop
aaa
jne
loopne
add
pop
and
push
push
jg
stos
rorl
and
mov
cmp
pop
pop
or
jp
jmp
jne
xchg
add
push
jns
pop
cmp
adc
aaa
pusha
cld
test
or
incl
lds
nop
pop
adc
je,pt
ret
or
push
xor
loop
out
test
xor
mov
outsl
hlt
pop
pop
dec
inc
cmp
jb
stos
sti
loop
or
add
clc
sbb
fsubrs
scas
scas
add
inc
call
xchg
xor
mov
decl
decl
jo
or
push
in
imul
jne
ljmp
mov
jnp
pop
push
inc
test
inc
in
cltd
and
or
sub
jo
aaa
adc
int3
cmp
jae
xor
sbb
push
icebp
sbb
scas
add
push
pop
and
adc
mov
cmpsb
cmp
add
mov
sbb
test
mov
push
mov
push
push
bound
outsb
xor
repz
pop
test
mov
adc
or
mov
subb
mov
jmp
lock
mov
xchg
mov
sbb
ds
sub
mov
jbe
shl
in
inc
mov
and
push
loope
ss
mov
sub
dec
sub
push
enter
es
imul
jbe
cmp
mov
int3
aad
sbb
fmull
mov
or
pop
mov
notl
add
lods
sti
xchg
clc
mov
cmp
xor
imul
sbb
jmp
aaa
cli
jne
inc
lret
pop
pushf
sub
leave
scas
dec
sbb
popa
cmp
adc
add
push
int3
outsb
or
or
pop
add
mov
ss
aad
xlat
mov
adc
hlt
mov
mov
repnz
mov
inc
mov
xchg
add
shr
xor
sub
pop
popf
push
sub
cmp
aad
mov
push
xchg
test
ret
push
and
outsl
xchg
cs
sbb
and
and
jl
xchg
mov
loop
rorl
fisttpll
mov
into
xchg
mov
in
add
lea
ja
adc
movb
mov
inc
rcr
js
push
xchg
arpl
je
pop
add
add
pushl
inc
cld
and
jmp
push
inc
hlt
add
add
mov
push
test
fst
mov
int3
repz
clc
iret
fdiv
div
jle
scas
pop
dec
inc
cmp
mov
adc
cmp
scas
add
add
push
je
cmp
cmp
jne
mov
cmp
jp
pop
xlat
fs
or
mov
testb
add
add
dec
std
jle
jnp
jmp
add
inc
pop
sub
shl
jp
nop
xchg
pop
mov
xchg
aaa
add
xchg
adc
cltd
icebp
dec
std
cmp
je
mov
and
mov
mov
sbb
dec
cmp
or
and
pop
or
mov
or
js
mov
jl
jmp
ret
cmp
and
nop
hlt
mov
lcall
push
mov
fildl
fadds
or
fdiv
add
ret
jo
lods
fdivs
leave
out
insl
add
inc
cmp
cmp
ja
mov
mov
and
or
jl
sub
adc
mov
xor
outsl
int
clc
add
in
hlt
inc
cmpsl
sub
cmp
or
adc
je
dec
inc
scas
pop
std
xchg
xor
or
js
mov
lea
lcall
jns
xor
push
push
ljmp
pop
js
mov
adc
and
cmp
jae
lea
jmp
cmpl
mov
add
xchg
repz
sbb
lock
mov
cld
add
and
sub
rorb
sub
jmp
xchg
in
test
outsb
sub
movups
sub
mov
mov
adc
inc
rorl
fs
xchg
scas
jl
add
pop
inc
hlt
dec
mov
xchg
mov
xchg
call
call
out
addl
push
mov
sub
add
subb
loop
or
addb
ret
jo
popf
add
xor
or
int3
pusha
sub
mov
sbb
jae
loop
add
cmp
xor
in
cmp
or
or
cs
fcomps
mov
push
les
sqrtps
enter
mov
xchg
nop
test
xchg
add
fcompl
xor
cmp
cmp
in
test
and
push
cs
es
and
dec
adc
inc
hlt
or
sub
pop
dec
xor
pop
addr16
ljmp
mov
push
mov
sbb
adc
loopne
jo
sub
enter
je
loope
add
add
push
sbb
xor
jb
loope
lods
pop
loopne
jae
push
pop
push
lret
mov
add
frstpm(287
pop
push
cmp
xchg
call
nop
rorb
mov
push
or
or
popa
pop
adc
loopne
push
xlat
inc
sub
pop
cmp
push
in
clc
orl
lods
cld
xor
dec
sub
add
data16
test
inc
rclb
add
sbbb
cmp
xor
into
push
mov
and
inc
pop
add
adcb
sbb
bound
jno
dec
xchg
add
adc
xorl
xchg
les
or
and
int3
mov
shll
aam
xchg
popa
inc
ret
jns
pop
rorb
xchg
xchg
adc
test
push
and
lcall
test
pusha
filds
lret
or
mov
insb
pop
mov
dec
jge
fnsave
je
mov
cltd
jp
pop
es
cmp
jbe
ss
roll
dec
inc
jns
dec
fucomip
cltd
testb
cmp
cmp
dec
cmpsl
inc
lea
out
cmp
pusha
jo
xor
stos
es
adc
adc
dec
xor
or
xchg
sbb
xchg
mov
hlt
hlt
iret
popa
in
jns
or
popa
pop
loop
push
adc
lods
fcomps
mov
push
fcmovu
or
cmp
jae
in
add
inc
in
inc
sbb
fldcw
sbb
hlt
jne
push
js
loopne
fnstenv
mov
or
push
mov
add
imul
das
push
lods
or
ja
cmp
lea
mov
jne
mov
aam
sub
adc
orl
data16
or
pop
fsubrs
movl
cmp
push
mov
sbb
addl
sub
mov
lds
jb
or
lea
or
dec
adc
loope
and
inc
inc
adc
add
fnstenv
test
test
inc
fnstenv
addl
xor
lea
jb
or
mov
pop
fdivs
leave
fs
push
loop
mov
rorl
pushf
mov
jne
cmp
add
push
cmp
adc
loopne
scas
jge
jbe
push
sub
dec
hlt
f2xm1
inc
dec
lock
inc
xchg
mov
data16
mov
jmp
fnstsw
imul
insl
fstpt
roll
sub
das
push
jmp
pusha
ret
ret
mov
rolb
repnz
push
cmp
sub
insb
xor
xchg
cmp
mov
mov
or
push
inc
push
scas
sbb
add
and
in
lods
push
cmpsl
cmp
sub
js
mov
bound
cmpsb
and
mov
xchg
cmp
adc
push
lods
ja
push
movzbl
aaa
mov
or
push
hlt
dec
cmp
xchg
jge
stos
jne
movl
das
loope
cs
jge
xchg
ljmp
push
pop
or
adc
push
cwtl
add
mul
seto
or
cmc
mov
push
mov
or
adc
or
mov
ds
jmp
inc
enter
jecxz
or
or
loop
xor
mov
or
es
fwait
movsb
xchg
js
jns
lea
mov
mov
pop
cmp
stos
incl
lret
add
lret
jge
ret
push
mov
scas
push
stos
mov
in
xchg
push
pop
cmpsl
orb
inc
test
adcb
cmc
dec
lds
mov
mov
sbbb
inc
bound
inc
and
test
sarl
dec
lret
xchg
or
fwait
loop
mov
cmp
adc
addb
jl
inc
mov
xor
push
add
mov
adc
jmp
ljmp
cmpsl
and
ret
sub
xchg
nop
pop
mov
dec
loopne
dec
sub
in
jo
xchg
gs
add
repz
adc
inc
dec
sbb
xchg
enter
mov
into
imul
xchg
rcrl
popf
in
fisubs
pop
jne
inc
cmp
jae
movsl
cmp
cmp
dec
test
pop
inc
cmp
or
xchg
push
pusha
push
jo
jo
popa
test
aam
and
sti
sub
sbb
cmp
push
mov
jb
les
ret
and
xchg
aas
push
sbb
sbb
add
cmpsl
addb
je
cld
or
adcb
push
movsb
dec
sarb
push
push
mov
lods
jo
dec
cmp
ds
dec
aad
push
hlt
aaa
fs
push
test
mov
lret
ja
sahf
mov
or
cmp
shll
cmp
pop
mov
ds
add
adc
inc
and
nop
add
add
push
adc
out
add
adc
sub
jne
es
sbb
imull
add
scas
sub
les
ret
jmp
xchg
xchg
sahf
push
ss
cld
jmp
popa
inc
xchg
or
add
jo
dec
lcall
mov
push
std
xlat
pop
cli
mov
add
fcmovnb
test
ret
mov
pop
clc
jp
xor
xor
pop
inc
push
jns
sub
ss
iret
cmp
adc
jne
in
cmp
jns
add
jmp
clc
sahf
push
mov
mov
repz
and
je
mov
add
sarl
jl
std
sub
dec
stos
bound
mov
or
filds
clc
add
clc
jno
push
lods
loopne
repnz
mov
add
icebp
or
and
jne
sbb
pop
push
cmpsl
sahf
or
sbbl
sti
and
and
pop
add
or
in
cmp
cwtl
clc
dec
inc
xorl
lea
jle
mov
movl
sti
and
ficoml
aam
test
sub
dec
fsubl
adc
pushl
cmpsl
faddp
push
xchg
and
cltd
xor
add
rclb
pop
adc
ret
subl
push
and
xchg
jle
sahf
rorl
rcll
shrb
sarl
rcrb
imul
int3
in
rolb
pop
pushl
jmp
mov
aam
xor
dec
popf
xor
push
mov
mov
addr16
lea
adc
cmc
fadds
jge
mov
mov
lcall
xchg
mov
rcrl
jae
inc
fcompl
int
dec
add
dec
push
test
mov
jle
js
and
jmp
out
mov
cmp
add
add
movsl
or
dec
push
inc
mov
xor
sub
mov
add
ds
fcomps
outsb
mov
test
pop
lea
lods
mov
enter
das
push
lds
add
icebp
imul
shrl
pop
sti
loope
adc
and
imul
xchg
sbb
xchg
pusha
inc
mov
clc
loope
out
test
mov
cmp
movb
cmp
jae
sub
mov
icebp
adc
pop
lock
cs
adc
ljmp
dec
push
push
cmc
xchg
shlb
cmc
push
inc
jp
inc
nop
or
add
fstpt
add
xchg
cwtl
loop
dec
dec
mov
inc
dec
loope
fiadds
pop
xor
ss
pop
mov
or
sti
mull
pop
or
jo
xor
xor
dec
jg
push
add
xchg
jle
sub
xor
int
cltd
std
xchg
push
push
cmp
add
in
mov
add
push
test
ja
or
ret
sarl
push
mov
sub
lea
add
add
cmp
add
xor
and
sbb
add
popa
rcrb
lea
lret
lds
add
popf
xchg
aaa
pop
mov
inc
mov
insl
rcrb
fidivl
jle
dec
inc
cmpl
adc
pop
mov
jp
dec
jae
xor
je
lea
es
ss
or
or
and
add
xchg
pop
xor
add
cld
leave
adc
or
push
bound
cmp
js
add
fisubrs
fimull
push
pop
pushl
jmp
inc
add
pop
lods
add
push
leave
and
mov
push
cld
mov
fcoml
mov
fidivl
jbe
jge
ud2
testb
sbb
xchg
clc
push
push
mov
mov
jbe
cld
push
test
cmp
jne
cmpb
ret
push
pusha
mov
lea
push
sub
sbb
xchg
hlt
add
cmpsb
add
mull
xor
push
daa
fs
mov
or
or
je,pt
aaa
adc
daa
lods
mov
adc
sbb
je
popf
jbe
jecxz
leave
push
shrb
cmp
push
cmp
jae
inc
jmp
push
or
sub
add
jge
int3
mov
add
test
add
inc
shlb
push
jmp
mov
ja
push
add
add
xchg
lods
loope
into
or
int
test
and
mov
push
cmp
push
push
dec
inc
pop
add
mov
mov
push
pop
js
jle
in
mov
lret
cmp
es
xchg
cmp
or
jmp
adc
or
add
lds
push
mov
mov
std
addb
lds
sbb
adc
aaa
adc
leave
pop
push
pop
fwait
adc
or
or
mov
inc
mov
arpl
jae
fwait
and
nop
pop
fcmovnbe
or
daa
in
in
or
dec
and
jbe
and
adc
ss
add
je
clc
mov
aaa
cmp
adc
ja
cmpb
mov
push
mov
push
or
or
xor
sbb
jbe
inc
imul
int
sbb
mov
loopne
ds
fadds
cli
or
jl
data16
shrl
js
cmp
sub
push
inc
or
fcmovnu
js
add
es
pop
add
dec
mov
into
and
xorl
mov
jmp
mov
adc
shlb
lea
cli
ja
push
test
flds
ret
push
daa
orb
push
inc
pop
dec
lds
ss
mulb
or
sbb
xchg
and
mov
fadds
arpl
push
addr16
cmpsb
imul
lods
sbb
stos
adc
push
xlat
popl
pop
in
cmc
jnp
push
push
mov
jne
inc
xchg
and
xchg
push
ss
fs
sarl
repz
add
ret
or
aad
js
xchg
adc
push
fs
movsl
sahf
mov
mov
sub
cmp
ja
ja
dec
cmp
dec
pop
cmp
pop
std
cmp
xor
shl
dec
cmp
lea
jl
mov
mov
aaa
adc
xor
jns
mov
xchg
lods
push
repz
jne
jmp
and
fcmovb
rcll
dec
mov
ljmp
out
adc
and
adc
shlb
fmuls
adc
xor
and
sub
inc
sbb
pop
and
leave
or
pop
mov
shll
fstl
dec
push
sub
adc
lock
lahf
push
xchg
sbb
into
add
or
adc
sbb
dec
subl
aas
sbb
sahf
sbb
adcl
push
mov
enter
push
mov
add
mov
les
sahf
mov
pop
pop
int
adc
dec
pop
xorl
push
rcrb
add
jne
in
ljmp
mov
pop
pop
inc
aam
incl
push
xor
lock
add
lock
inc
lock
test
out
pop
cmpsb
sti
ja
in
dec
out
lahf
test
push
or
xchg
lock
mov
enter
lea
xchg
mov
lar
sbb
fcompl
js
movsb
leave
add
retw
hlt
adc
aas
xor
push
mov
ja
push
push
cmpb
jne
inc
addl
out
rorb
outsb
mov
mov
cmp
jne
add
sbb
pushf
pop
inc
or
add
push
adc
adc
xchg
or
nop
pop
leave
push
pop
push
js
jle
sbb
in
arpl
jp
push
jo
or
jns
and
es
in
adc
popa
and
pop
ds
pop
add
mov
daa
jle
iret
xor
aam
lret
subl
mov
xchg
imul
adc
dec
pop
into
pop
sbb
insb
mov
popa
test
stc
popa
push
mov
mov
xorb
lock
mov
or
arpl
add
into
call
cwtl
xor
and
ss
mov
sbb
mov
mov
jae
lock
push
sbb
add
xlat
fs
jbe
pop
dec
xor
lods
pop
cltd
inc
test
push
pop
cmp
aas
push
or
enter
dec
shlb
mov
and
mov
add
jl
xchg
adc
mov
aad
jge
xor
push
mov
mov
call
adc
inc
xor
mov
adc
stos
pop
cld
push
ja
push
push
add
jmp
iret
xlat
cmpsl
add
cld
sbb
sub
arpl
push
push
cmp
xor
orl
push
ret
jo
je
jle
ror
cmp
pop
pop
pop
fcomps
xchg
xlat
push
std
xor
mov
dec
push
bound
fstl
add
or
push
imul
icebp
pop
add
dec
mov
jmp
push
js
dec
in
adc
sub
pushl
xchg
aaa
pop
jmp
or
dec
testl
adc
lea
adc
ret
jmp
pop
ret
push
mov
xor
and
pop
sbb
pop
mov
hlt
imul
push
adc
inc
pop
add
pushf
jg
lds
mov
ret
mov
or
orl
mov
or
or
sbbb
fdivs
adcb
arpl
push
je
and
mov
pop
call
add
andl
inc
sub
jge
pop
sbb
mov
mov
lret
mov
mov
aam
mov
sub
pop
out
cmpsb
mov
or
shlb
sub
nop
jle
out
cmp
int3
mov
loop
test
bnd
orb
jns
lock
push
arpl
mov
das
mov
xchg
pop
xchg
and
out
push
or
push
xor
into
or
addl
shll
test
cmp
sbb
mov
push
xchg
cld
nop
fstl
sbb
mov
test
or
clc
shlb
inc
daa
mov
and
pusha
adc
adc
insb
leave
xor
sbb
push
sub
inc
add
and
and
addb
xchg
mov
mov
push
das
inc
out
roll
sbb
mov
std
cs
decb
mov
or
sub
call
inc
sbb
add
jne
fsubrl
lret
pop
pop
imul
cld
ficompl
push
or
or
mov
mov
mov
jmp
mov
mov
rcrl
icebp
imul
mov
pop
leave
rolb
jae
add
sub
or
fcmovb
or
lahf
out
dec
ret
jge
push
std
mov
adc
inc
jge
add
push
push
add
mov
sbb
dec
cwtl
into
and
mov
lods
mov
push
mov
adc
in
test
pop
pop
fdivs
mov
ss
insb
sub
jns
xchg
in
push
jns
pop
xor
imul
add
jno
mov
call
psrld
xor
out
je
call
rcl
push
inc
enter
and
lea
sarb
sbb
in
jle
mov
cmp
bound
mov
jo
mov
cmpsl
movsl
adc
adc
jbe
sbb
imul
sbb
and
mov
xor
pop
dec
dec
rolb
jae
mov
lea
jg
push
sbb
push
push
mov
lods
inc
push
add
ret
or
aaa
daa
cld
icebp
fldcw
pop
ret
push
cmp
movsl
enter
or
inc
dec
pop
cwtl
dec
sub
and
aas
xor
in
push
stos
orl
mov
xchg
and
call
pusha
jo
push
adc
out
mov
mov
or
pop
dec
aaa
ret
andb
xchg
adc
loope
je
inc
test
out
mov
sbb
loop
mov
sbb
pop
call
pop
popa
jle
cmp
jl
js
sbb
jl
aaa
flds
xor
lret
inc
or
add
cmp
adc
ret
pop
or
loope
out
dec
ficompl
pop
outsl
sub
lock
xchg
xchg
les
fistpl
push
in
inc
testb
xchg
add
andl
das
in
pop
test
rorb
inc
sbb
lds
push
xchg
pop
mov
pop
cmpl
hlt
dec
cli
add
sbb
lcall
cmp
call
imul
call
xchg
out
xchg
and
imul
inc
add
fisubs
pop
cmp
add
into
testb
pop
sbb
add
jp
cmp
inc
jne
or
jnp
ljmp
mov
cli
cs
or
xchg
jbe
scas
add
xchg
mov
aam
adc
enter
inc
mov
fwait
das
fdivrl
inc
jmp
add
sbb
cld
lret
mov
daa
ret
out
inc
into
leave
add
daa
fs
and
dec
jecxz
mov
mov
mov
dec
scas
cmp
jbe
aam
xchg
in
inc
add
cld
mov
loopne
je
imul
mov
call
push
and
and
jne
mov
push
push
push
mov
add
jmp
test
mov
das
aad
insl
fstpt
adc
rorl
push
nop
mov
and
jne
inc
cmp
push
pop
xor
mov
pusha
push
jae
sub
mov
mov
enter
fidivl
pop
inc
loopne
mov
movsb
add
dec
loopne
xor
and
xchg
add
add
mov
fwait
or
push
cmp
dec
js
push
xchg
pop
push
cmc
je
in
test
add
rolb
pushf
hlt
jg
ret
pop
inc
add
cmpsl
pop
mov
mov
inc
lock
pop
inc
adc
loopne
je
add
pop
inc
push
outsb
add
sbb
clc
fnstsw
dec
add
call
jl
push
mov
cs
mov
pop
addr16
movsl
pop
nop
mov
loope
xchg
andw
cwtl
push
aam
mov
and
test
decl
cwtl
mov
imul
call
addl
sub
loop
inc
ja
clc
sbbb
roll
loope
add
sti
lcall
or
sbb
push
sbb
add
or
adc
sti
mov
sub
repz
jae
dec
jp
rolb
mov
cwtl
stos
add
add
dec
rcl
ljmp
pusha
jo
push
aaa
or
or
test
test
or
movsl
loopne
rcr
push
or
mov
rol
xchg
test
fcompl
adc
movsb
loopne
jae,pt
js
or
mov
push
push
jbe
mov
mov
rorl
xchg
icebp
aad
bswap
arpl
stos
add
hlt
pop
push
and
push
mov
xchg
or
mov
jmp
das
add
or
sbb
mov
mov
mov
xor
sbb
or
icebp
jo
or
mov
arpl
prefetcht1
movsl
xchg
push
push
jnp
mov
cld
add
popa
mov
je
fnsave
mov
xchg
fchs
adcl
and
out
arpl
enter
sub
jmp
add
vpmacsdd
test
aam
push
lret
fsub
int3
push
jo
sarl
sbb
push
popf
js
lcall
icebp
outsl
adc
es
adc
push
pop
bound
pop
xor
pop
mov
sbb
in
fimuls
loopne
inc
ds
sbb
in
jecxz
mov
sti
es
xor
jb
push
pop
mov
push
ret
into
mov
fcompl
mov
cmp
and
ficoms
das
sbb
cmc
in
cmpsb
mov
movsl
dec
dec
push
cld
dec
adc
push
inc
xchg
mov
enter
fistpl
or
in
pop
push
xlat
push
popf
adcb
adc
into
push
mov
mov
adc
daa
xchg
xchg
lret
sbb
pushf
push
dec
sub
push
cmp
lret
movsb
or
or
daa
xchg
xchg
or
inc
or
dec
push
movhps
inc
insb
push
pop
stc
daa
fnsave
mov
pop
adc
pop
mov
pop
stc
sbb
int3
insl
pop
int3
pusha
nop
dec
cs
mov
fdivrp
inc
mov
or
sahf
fsubrs
dec
dec
outsl
sub
inc
pop
mov
mov
pusha
add
pop
mov
dec
adc
xor
rorl
add
cmp
push
or
xor
mov
popf
pop
mov
sbb
dec
dec
push
fs
adc
pop
push
enter
pusha
add
adc
andb
sti
jnp
jo
mov
jg
xchg
enter
cmp
jb
and
xor
jb
and
and
insb
sbbl
or
adc
mov
clc
add
rorl
popl
sbb
xor
sub
xchg
fldl
fstpt
mov
dec
push
cmpb
push
sub
call
cmp
mov
jo
or
sub
pop
cld
es
lea
movsb
or
loopne
xchg
jbe
jne
lods
push
in
mov
sub
pop
shlb
sub
test
inc
shl
add
jmp
in
xor
dec
and
aad
adc
xor
cmpb
hlt
or
inc
cmp
cmp
sbb
mov
dec
add
cs
xor
sbb
dec
fiaddl
add
inc
adc
pushl
push
mov
pushl
push
loope
and
out
jo
and
push
add
inc
test
xor
mov
sbb
cmp
add
dec
and
inc
or
jmp
lea
test
imul
insl
test
movsb
add
jo
les
sub
add
daa
inc
or
mov
mov
or
enter
pop
add
push
leave
test
or
inc
test
jns
push
clc
lcall
fisttps
sub
cwtl
push
xchg
xchg
add
movsb
sub
sub
mov
nop
push
movsb
shrl
xorb
adc
mov
mov
and
push
jp
adcl
fwait
and
pop
cmp
insb
sbb
push
or
sub
mov
orl
dec
out
inc
and
daa
or
sbb
xchg
push
add
lods
ret
push
fcmovb
ss
inc
ret
and
loop
shll
add
test
add
pop
add
mov
cli
dec
sub
xchg
push
pop
and
push
lock
adc
cwtl
les
fldcw
sbb
dec
sbb
cld
jmp
test
icebp
add
sub
inc
mov
jo
sbb
mov
or
jbe
jecxz
inc
sbb
jg
cld
push
and
and
cwtl
pop
push
adc
dec
js
xor
cmp
and
das
movsb
xchg
sub
inc
adc
cld
jb
lret
fnsave
lret
xor
test
test
stos
push
ss
push
insb
leave
xchg
mov
inc
adc
stc
add
sar
cmp
sbbb
sbb
lcall
mov
or
in
dec
loopnew
loope
pop
add
adc
lds
test
dec
push
or
xchg
lahf
sub
dec
pop
adcb
mov
nop
adc
addr16
filds
mov
jne
cmp
shl
call
add
jmp
mov
xchg
stos
jno
adc
mov
jmp
pop
in
adcl
mov
push
jmp
lock
inc
lret
sbb
mov
sub
jle
clc
pushf
xor
sti
dec
pop
adc
jo
inc
imul
mov
out
jnp
add
jl
inc
pop
pop
and
lret
inc
nop
inc
and
and
in
stc
dec
and
xor
or
out
rolb
fisttpll
fs
scas
jnp
addl
lea
stos
adc
cli
inc
or
and
popf
repnz
imul
addl
and
dec
sbb
or
dec
movnti
sub
test
lock
jmp
pop
rol
lahf
add
cmp
add
aas
xor
sti
xchg
or
clc
nop
dec
hlt
sub
lock
repz
add
xchg
das
cmp
cmpsb
out
adc
gs
xor
push
xchg
xchg
sbb
dec
cmp
jmp
shll
adc
lods
dec
outsl
pop
push
mov
das
add
ret
push
push
and
out
inc
mov
mov
popa
cli
loopne
push
ja
jge
lods
out
and
fidivs
fs
addl
push
push
mov
cwtl
lods
subb
stc
push
pop
mov
pop
daa
shlb
or
ret
pop
sbb
or
push
stos
xor
add
push
lods
pop
les
jno
fcoml
pop
mov
cmp
out
adc
pop
aas
cltd
pop
xchg
pop
loop
pusha
cmc
or
ss
testl
add
notl
jmp
sub
pop
mov
push
xor
jne
push
inc
movb
movsb
popa
inc
cltd
into
aam
pop
xchg
adc
jle
push
nopl
sbbl
shrb
pusha
adcl
call
pop
sub
ds
fstl
adc
das
mov
adc
or
lret
pop
pop
push
add
xchg
adc
inc
dec
push
mov
mov
popa
popa
pusha
loopne
movsl
or
or
pop
divl
sbb
push
inc
dec
inc
and
mov
xchg
add
fadds
push
jo
sbb
test
fcomps
lea
dec
or
out
jbe
inc
jo
out
xor
int
dec
push
push
push
addr16
jmp
mov
enter
cmp
js
cmp
and
cmp
fs
jl
loopne
cmc
mov
clc
and
or
sbb
in
leave
jg
movsb
adc
lret
add
or
scas
ja
int3
jle
add
mov
ss
xchg
nop
sub
scas
add
addl
xor
xor
cmp
push
jl
adcl
sub
cwtl
adc
fidivrs
pop
push
sub
mov
bound
icebp
das
or
mov
popl
test
jl
sbb
lahf
scas
stos
aaa
imul
xor
sbb
adc
mov
movsl
add
inc
sbb
add
testb
prefetchnta
fbld
lret
pop
cld
mov
or
inc
sub
or
or
xor
sbb
in
hlt
daa
adc
push
xchg
mov
orl
push
inc
push
out
and
sub
add
adc
lock
pop
hlt
std
orl
fcoms
mov
out
fs
and
das
or
and
fisttps
pushf
or
adc
jecxz
xor
dec
insl
adc
adc
or
sbb
add
mov
xchg
mov
xchg
or
pop
lock
dec
loopne
add
xchg
mov
push
aas
lods
les
add
jbe
xorb
je
mov
cltd
arpl
mov
jne
or
sub
notl
cwtl
push
push
mov
push
xchg
addl
xchg
xchg
inc
push
movsb
or
or
inc
add
or
andb
adc
mov
pop
enter
and
inc
push
or
or
in
call
jge
mov
sbb
add
mov
call
mov
push
cmp
push
fs
adc
movsb
ret
sub
lods
cld
mov
or
subl
xlat
faddp
inc
mov
push
ss
and
hlt
in
mov
call
movsl
lds
xchg
mov
add
mov
push
cmp
idivb
lcall
test
cmp
mov
lret
inc
inc
repz
dec
push
fldenv
les
rclb
mov
and
es
push
pop
into
in
mov
push
cltd
mov
mov
mov
mov
dec
imul
adc
mov
push
xor
mov
inc
mov
aad
add
xor
dec
xchg
mov
jno
popf
mov
rcl
adc
jmp
pop
ret
pushf
popf
sub
ds
push
cli
pop
or
push
movsb
loopne
push
dec
jnp
pop
and
shlb
fisttpl
push
jo
pop
and
cmp
mov
mov
xlat
xor
loopne
add
loopne
cltd
fdiv
add
es
push
mov
cld
add
movsl
or
sahf
adc
jge
jns
test
mov
sub
jmp
cwtl
ret
in
adc
add
mov
mov
adc
sub
addr16
pop
push
sbb
mov
add
sbb
push
aas
add
in
adc
mov
lods
mov
repz
adc
sub
inc
mov
pop
adc
mov
ret
inc
icebp
lock
add
xor
dec
push
je
dec
jne
shrl
outsb
xor
adc
dec
xchg
mov
and
inc
lahf
jb
sbb
add
adc
jmp
fcomi
inc
divl
and
pop
add
mov
shl
jmp
cmp
pop
pop
sub
int
outsl
add
xor
xor
inc
daa
daa
sbb
dec
dec
pusha
or
mov
cmp
aad
lret
pop
or
xchg
aaa
mov
add
loope
pop
cmp
mov
frstor
push
sub
pop
sbb
lock
sub
add
scas
rorb
sub
add
sub
mov
mov
push
add
fisttpll
ja
push
cltd
inc
sub
push
sub
inc
xchg
inc
or
inc
mov
ret
add
int3
or
lcall
ret
sbb
inc
xchg
or
rcrw
push
mov
nop
xor
adc
cmp
test
les
in
cli
sub
xor
and
jb
or
jb
pop
jecxz
add
into
stc
add
xor
or
ja
mov
movd
test
inc
sub
sti
pusha
xor
icebp
je
mov
inc
adc
cwtl
pop
testl
inc
pop
and
js
fdivrl
or
pop
or
cld
int
loop
loop
fwait
jne
clc
shrb
push
push
push
xchg
adc
dec
sub
cmpsb
imul
mov
imul
push
cmp
fs
mov
test
pop
push
xor
sub
js
leave
and
pop
adc
sbb
xchg
fs
and
jbe
and
sub
call
inc
movb
mov
mov
adc
cltd
push
cmpsl
imul
and
addb
add
lea
mov
jmp
cmp
inc
mov
out
lea
mov
je
out
imul
sarl
scas
and
mov
dec
jns
or
mov
into
sub
jbe
sti
sbb
pop
adc
or
or
fs
cltd
jle
xchg
xor
inc
dec
mov
sbb
rcrb
push
pop
pop
and
insb
sbbl
or
adc
jae
xor
sbb
nop
ret
pop
push
xor
xchg
push
xor
inc
test
mov
dec
xchg
les
sbb
mov
push
xchg
mov
mov
or
movsb
jne
shrb
push
gs
mov
mov
push
ds
mov
push
movb
inc
mov
add
add
jge
pushf
xor
xor
dec
jge
cmpsl
xor
in
bound
enter
cmp
dec
jge
xchg
es
dec
gs
or
leave
sbb
mov
mov
and
push
dec
or
scas
xchg
pop
lods
testl
mov
xchg
cmovae
inc
mov
loopne
xor
and
dec
fwait
xor
add
sbb
add
fdivr
faddl
xchg
or
jne
push
add
imul
push
inc
lahf
insb
in
bound
push
scas
daa
cmp
mov
lock
outsb
mov
stc
testb
ficoms
rolb
xchg
fisubs
cwtl
mov
adc
cmpl
pop
movl
fcoml
xchg
mov
je
cs
jge
pop
or
pushf
jle
xor
dec
sbb
adc
add
push
ss
jmp
push
push
addr16
add
shrb
jae
out
adc
pop
cwtl
cwtl
rclb
sbb
nop
mov
mov
xchg
ljmp
jp
mov
into
xor
mov
jecxz
dec
out
push
jp
push
adc
and
call
jl
add
call
repnz
rcrb
or
out
mul
das
sub
add
cmpl
pop
test
push
pushl
add
push
or
lods
test
mov
push
and
add
mov
int3
sub
ds
and
ja,pn
insl
mov
sbb
cld
lcall
out
incl
cmp
adc
pop
inc
add
and
inc
push
and
imulb
mov
push
sbb
mov
bound
movsb
lds
aam
pop
out
sti
call
in
adc
sbb
cmp
in
in
sub
push
cwtl
and
xchg
es
or
push
cmp
mov
add
pushf
cmp
xor
movsb
mov
sub
loopne
and
in
inc
je
fmuls
addb
mov
sbb
loopne
hlt
add
add
movsl
push
lds
sahf
rcrb
push
adc
or
fadd
ret
arpl
jne
add
out
jb
imul
xlat
or
mov
adc
aaa
sbb
or
popa
adc
sbb
mov
sbb
adc
jno
pushf
fisttpl
rcr
fisttps
in
ret
clc
push
push
gs
cs
jecxz
inc
jb
sbb
mov
cmp
push
xor
xor
xchg
jecxz
lods
push
stc
push
mov
orb
lea
cmp
xor
sub
inc
push
or
jns
add
sub
mov
in
jg
jnp
leave
add
jg
sbb
or
cltd
mov
stc
jnp
insb
fildl
sarl
sahf
dec
push
adcl
inc
add
add
sub
sub
sub
lea
pop
stc
mov
test
dec
or
mov
aaa
fs
sbb
sbb
fisttps
mov
push
inc
cmpb
mov
pop
mov
pop
test
ja
mov
sbb
adc
pusha
pop
cli
ss
cvtps2pd
mov
jo
iret
inc
jecxz
push
push
push
test
add
or
daa
inc
jae
push
movsl
xor
add
jg
sbb
mov
paddusb
sahf
add
adc
sub
and
sub
fiadds
add
or
mov
lcall
in
ja
or
adc
rolb
in
add
add
leave
insl
pop
add
aad
fisubs
push
sub
fbld
mov
pop
lock
mov
cmpsl
xor
push
scas
ret
or
cmpsb
mov
pop
or
inc
sbb
xchg
inc
pop
out
inc
ret
arpl
mov
inc
std
and
and
inc
movsl
xchg
push
call
or
in
inc
cmp
xor
push
cmp
sub
outsb
leave
adc
push
inc
dec
and
dec
sbb
popw
cmp
lret
or
add
inc
sub
cs
lret
or
cs
xchg
daa
pop
push
es
dec
sbb
icebp
inc
push
or
dec
es
icebp
sahf
or
lret
xchg
xchg
mov
fcoms
push
sbb
pop
sbb
pop
adc
jns
in
mov
pop
inc
xor
push
and
pop
adc
mov
adc
lea
in
push
push
cmc
adc
inc
dec
cmp
and
xchg
out
or
pop
mov
and
push
sbb
mov
xlat
and
and
pusha
int
pop
insl
mov
lea
xchg
and
xor
jne
mov
mov
sub
sbb
cmc
add
xor
sbb
fisubrl
cmp
sub
ja
push
stos
mov
int3
jle
and
cmp
inc
add
push
loope
or
or
push
fimull
push
movsl
mov
add
add
add
jae
lock
mov
jmp
add
inc
inc
and
adc
xor
sbb
add
fwait
xchg
mov
int
mov
pop
repnz
add
in
test
or
enter
and
adc
mov
rolb
test
aam
mov
fsubp
in
cmp
mov
cmp
mov
add
test
mov
ja
pop
adc
xor
idivb
jne
movsl
mov
pop
js
lret
stos
push
roll
push
xlat
and
lea
add
push
xlat
push
cli
pusha
and
rorb
push
fisttpl
pop
ds
inc
jne
mov
sub
nop
xlat
outsb
sub
dec
or
fsubrs
rcrl
xor
nop
xchg
inc
add
or
mov
jne
mov
jne
pop
mov
add
mov
sbb
test
and
imul
push
sub
repz
cmpsl
enter
push
sarl
rclb
pop
in
fwait
sub
pushf
adc
int3
and
mov
cltd
insl
loopne
ss
jae
adc
pusha
inc
adc
push
lock
inc
or
pushf
je
nop
mov
test
push
xor
jae
cwtl
insl
enter
imul
xorl
xchg
mov
sarl
fcompl
lock
and
jge
aas
sbb
mov
push
or
sbb
sbb
jbe
xor
and
pop
inc
aad
lods
and
pop
cwtl
or
enter
mov
or
cwtl
mov
jl
fs
test
pop
push
sub
das
add
pop
ret
fs
sub
sbb
roll
xchg
dec
je
in
sub
sbb
test
xlat
es
pop
push
jbe
jge
push
in
add
in
pop
cmp
stos
mov
nop
inc
mov
adc
sub
das
dec
popa
xor
je
das
xchg
or
imul
lods
bound
or
rcrl
pop
shrb
jmp
sbbl
outsb
and
xchg
sub
shll
xor
inc
cmp
inc
push
xor
and
add
jbe
fucomip
sbb
cmp
add
xor
pop
mov
sbb
push
gs
cmp
mov
es
xor
popa
shll
sbb
andl
inc
xor
cmp
xor
es
stos
adc
adc
pop
lea
rclb
and
xchg
jl
and
sub
rorl
sbb
fcoml
push
add
cmp
sbbl
lret
cmp
push
mov
les
shll
adc
add
loope
mov
sub
inc
out
push
xchg
pushf
jne
sub
xor
data16
sub
dec
mov
xor
inc
sub
rolb
mov
sbb
pop
jno
xor
and
push
or
push
fs
sahf
adc
cmp
adc
hlt
dec
sbb
stc
cs
dec
das
and
sbb
ret
sub
sub
lea
xchg
push
ds
in
aaa
out
inc
sub
jbe
sub
push
sbb
pop
cmp
bound
cmpsb
jno
out
xor
adc
xor
sbb
leave
cmp
xor
and
xchg
xchg
loopne
inc
mov
cmpsb
cmpl
cmp
roll
popa
mov
add
sub
and
and
clc
inc
arpl
jmp
orl
pop
jns
loopne
popf
sbb
pusha
imul
lahf
push
aaa
jge
mov
fmuls
rorb
enter
in
or
dec
fidivl
lds
pop
mov
comiss
fwait
cmp
nop
test
dec
cmp
in
ret
roll
les
add
and
fs
xchg
xor
xor
shrb
dec
leave
sub
or
pushl
fs
adc
jg
inc
and
pminsw
shlb
addl
es
sub
mov
xor
and
jl
cmp
ficompl
and
cmc
pushf
xchg
je
sub
rolb
mov
mov
les
mov
test
rcll
pop
add
mov
movsl
adc
xchg
fldl
pop
stc
sub
shll
mov
push
stc
sub
inc
or
or
jge
adc
adc
push
cmp
popf
outsb
sub
jmp
popa
popa
sbb
in
add
mov
icebp
or
jecxz
inc
inc
mov
mov
sub
xor
in
and
jae
mov
test
inc
sub
and
push
inc
xchg
repnz
dec
xchg
sbb
pop
inc
sub
popa
dec
or
dec
mov
in
jno
push
add
and
xchg
mov
mov
or
test
out
jnp
cmp
mov
data16
xchg
add
xor
push
adc
inc
mov
xor
gs
mov
mov
xlat
pushl
xchg
rcrl
cmc
push
test
xlat
mov
mov
aam
dec
call
roll
or
out
outsl
mov
adc
sbb
xadd
jae
aaa
add
cmp
push
push
inc
cs
pop
push
add
push
pushl
aaa
pushl
push
or
sub
adc
test
lret
cs
sub
aam
dec
sub
fsubrl
jno
in
add
jp
xchg
inc
addl
cmp
cli
adc
inc
mov
dec
pop
xor
lods
adc
inc
dec
stc
leave
add
out
and
shrb
or
pop
adc
adcb
movsb
xchg
addb
cmp
cmpsb
cmp
sub
sbb
xchg
fisubl
imul
push
pop
lock
icebp
add
add
pop
inc
loope
ud0
imul
pushl
adc
mov
mov
fsubs
xchg
jnp
sbb
sti
xor
adc
ficoml
jb
add
add
dec
neg
leave
ret
xor
int
jp
adc
or
sbb
rorb
pop
mov
adc
sbb
aam
inc
adc
mov
dec
xor
adc
push
imul
xchg
push
and
mov
xor
or
adcl
xor
sub
fdivr
loopne
sbb
push
popa
push
xor
and
sbbb
jb
mov
sub
sbb
lret
out
add
add
sub
mov
lret
addl
js
push
mov
sub
in
rcrb
push
leave
jmp
dec
xorb
rolb
fcom
pop
rorb
sbb
arpl
scas
and
sub
lea
sbb
add
cmp
cmp
push
jge
xchg
cwtl
lods
adc
mov
jbe
test
jecxz
in
cwtl
jbe
adc
pop
xorl
pop
and
lock
add
mov
fidivrs
inc
inc
lret
dec
in
pop
pop
test
sub
inc
mov
or
bound
jb
xor
xor
scas
popa
sub
inc
and
cwtl
cwtl
xchg
cmpsl
pop
inc
cmpsb
repz
testl
repnz
xor
inc
sub
shlb
pop
xor
leave
dec
sub
aaa
mov
cmp
std
cmp
adc
sub
rcrl
sub
mov
cmp
in
es
test
cmp
in
and
sbb
add
pop
clc
and
fmull
push
enter
les
inc
dec
cmpsl
adc
in
sbb
shr
push
in
hlt
xor
cmp
pop
inc
addr16
and
cmc
xchg
rclb
and
push
push
cld
push
lea
sbb
mov
mov
adc
gs
js
mov
fcomps
dec
xor
cltd
or
xor
jo
mov
sbb
mov
dec
dec
ljmp
pop
pop
xchg
adc
lods
lods
movsl
pop
push
bound
sbb
push
clc
xor
sbb
mov
dec
pop
push
and
cmp
and
test
cmpsb
pop
inc
pop
xor
sahf
jne
sub
scas
and
in
xlat
jmp
lret
aas
lods
mov
dec
movsl
and
inc
sbb
sbb
add
loop
pop
lret
int3
mov
lods
xor
mov
mov
push
popfw
mov
mov
stc
and
andl
and
cmp
icebp
jns
xor
and
adc
stos
pop
mov
enter
pushw
mov
sbb
pop
and
dec
dec
pop
mov
xor
pop
in
or
xchg
lock
inc
mov
rcrl
dec
pop
mov
sub
cmp
mov
jecxz
or
movsb
mull
mov
andb
jne
rcrl
lcall
and
or
test
lds
adc
push
shrl
or
mov
mov
jg
and
popf
push
movsl
push
loope
push
dec
pop
mov
or
aad
mov
pop
clc
jae
xchg
je
jns
jle
movl
xor
push
push
jg
adc
add
push
and
mov
fwait
fs
sub
pcmpeqd
outsb
rorl
or
or
pop
add
sub
mov
dec
outsl
mov
nop
inc
dec
jmp
sub
jb
sbb
in
push
js
std
icebp
push
pop
mov
stc
aad
int
arpl
jg
in
test
bnd
data16
cmp
int3
lahf
mov
mov
je
push
xchg
repz
test
jb
xchg
cld
sbb
jbe
xor
push
adc
data16
ja
lcall
sub
aam
pop
sarb
inc
stc
jle
dec
lea
add
xchg
inc
adc
mov
mov
push
call
cmpb
das
mov
jle
pop
test
jl
cmp
and
inc
lahf
or
pop
add
out
loope
outsb
mov
dec
push
lods
pop
inc
out
mov
iret
jle
and
fwait
adc
dec
push
lahf
call
mov
pop
pop
mov
pop
jae
ret
cmpl
insb
ret
xor
mov
ret
or
add
and
arpl
mov
pop
inc
xor
ret
push
push
enter
inc
jg
jmp
adc
xchg
xchg
roll
and
or
jl
jo
pop
mov
push
mov
rcrl
dec
pusha
out
sub
mov
xor
popf
and
out
add
jo
or
mov
sub
or
xor
sub
fiadds
rolb
pusha
add
add
lcall
pop
pop
inc
je
and
mov
xor
sub
xchg
sbb
mov
or
push
ljmp
mov
adc
xchg
and
xchg
sbbb
pop
add
loop
lods
adc
inc
inc
mov
push
pop
jae
and
shlb
cmp
mov
cmp
lahf
test
jne
jns
lock
sbb
addl
lret
add
inc
call
mov
pop
or
jno
loopne
or
daa
nop
push
or
sarb
rol
or
das
enter
jge
inc
mov
stos
pusha
xor
test
or
add
push
je
xchg
ss
roll
jmp
fdivl
fs
inc
shr
test
pop
scas
ss
cmpsl
inc
add
fmull
addr16
and
add
and
jle
cli
cmp
xchg
mov
add
cmc
push
rclb
inc
dec
mov
dec
inc
cmc
xorb
mov
insl
add
push
sbb
mov
add
pop
push
pop
sub
insb
jo
pop
add
sbb
fstps
mov
fbstp
and
and
sub
lock
or
or
push
ljmp
imul
bound
fstpl
add
test
fs
xor
cmc
lret
popf
xor
movsl
jmp
mov
insb
inc
cmp
movsb
mov
shlb
jo
sbbl
add
mov
mov
pop
mov
sbb
sbb
inc
xor
jb
movl
xchg
insb
adc
push
mov
xlat
mov
dec
insb
sub
push
sbb
punpckhwd
lea
data16
mov
add
mov
addr16
xchg
lcall
xchg
dec
sahf
fs
adc
push
and
xorb
in
js
shrl
and
andl
ret
mov
adc
cli
enter
in
sub
add
inc
push
mov
jp
cmp
adc
xor
ljmp
testb
inc
push
mov
dec
mov
pop
cmp
les
je
cmovnp
sti
adc
pop
insl
fsubl
xchg
std
mov
add
repnz
push
add
mov
mov
sub
mov
incl
movsl
jo
inc
mov
and
adc
xlat
or
and
inc
dec
test
sarb
fnstenv
enter
xor
inc
lods
push
xchg
push
push
cmp
mov
add
adc
loope
popa
movsb
aam
ss
and
push
sub
sub
dec
add
or
jg
cmp
mov
inc
ret
jl
sub
sbb
add
adc
decl
pop
fdivrl
je
cmp
je
cmp
je
cmp
je
push
inc
pushf
or
xchg
fnstcw
into
imul
fisubs
dec
inc
call
pop
cmp
pop
psllq
xchg
je
sbb
adcb
out
mov
push
push
xor
or
jno
mov
xchg
push
adc
in
mov
xchg
xchg
pop
fsubl
jo
stc
adc
pop
mov
lock
pop
inc
push
push
add
pop
in
loopne
push
xor
enter
hlt
adc
or
and
sub
xchg
les
sub
mov
xchg
mov
or
inc
vmovhps
fistl
sub
add
test
sub
mov
mov
jp
sbb
add
xor
test
and
xchg
xor
shl
insl
loopne
add
mov
addb
sbb
in
sub
stos
and
xlat
mov
and
xchg
incb
jbe
cmp
sar
in
andl
sbb
cld
and
dec
sahf
pop
dec
cld
rcrb
sbb
mov
aaa
imul
and
push
and
pop
testb
nop
clc
decb
in
ret
and
and
cmpb
shlb
or
insl
add
pop
and
jb
pop
and
pop
arpl
rolb
daa
test
push
cmp
jg
sbb
pusha
lcall
dec
cs
mov
pop
xchg
addr16
enter
rol
or
iret
int3
cwtl
push
push
dec
xor
inc
and
sbb
fsubrl
dec
dec
and
sub
hlt
jo
and
sub
hlt
jo
adc
push
addl
scas
inc
ds
and
orb
shlb
sbbb
xchg
pushf
movsb
push
bound
mov
insb
lods
sub
gs
pop
push
fwait
jne
adc
jmp
addr16
insb
loopne
add
js
cmpsl
dec
fisubl
mov
cmovno
pop
aas
mov
inc
rorb
aaa
or
xchg
mov
or
pop
loopne
popf
xlat
mov
dec
mov
xchg
cmp
xchg
mov
adc
cmpsb
push
stc
mov
sbb
hlt
mov
and
pop
xor
and
adc
mov
jle
je
and
and
jno
inc
or
loop
fisubrl
dec
mov
inc
adc
cmpsb
adc
dec
add
add
cmpsl
cmc
xor
bound
or
jo
jo
dec
std
ss
inc
xor
push
xchg
push
push
mov
mov
mov
adc
and
jmp
add
shrb
adc
into
sub
jne
or
cmp
mov
cmp
rolb
mov
push
sbb
add
or
xchg
mov
pop
add
cmp
xlat
pop
iret
mov
xchg
pop
adc
jne
mov
pop
add
xchg
or
push
sub
adc
mov
rcr
add
pusha
loopne
xchg
jle
dec
in
adc
lcall
loopne
add
movsl
out
mov
mov
or
mov
js
in
dec
adc
xchg
mov
mov
lret
adc
sub
sbb
pop
aam
fadd
sbb
sar
xor
push
add
sbb
dec
test
fisubrl
push
jmp
sbb
pop
outsb
and
dec
push
sbb
jb
test
xchg
push
mov
push
cmp
mov
jae
jne
inc
mov
or
add
jb
add
sub
mov
rcll
call
mov
or
dec
xchg
lock
fwait
sub
pop
mov
mov
or
pop
xchg
push
in
mov
jle
cmp
jle
jmp
lods
test
aam
movsl
mov
mov
daa
test
pushf
mov
sbb
xor
pop
test
aas
adc
mov
pop
sbb
jmp
or
mov
push
xchg
sbb
test
lds
ret
movb
movsl
mov
subl
mov
test
and
adc
xor
jecxz
and
aad
adc
jno
cwtl
ret
and
push
fcomps
lahf
mov
inc
jbe
pop
cmp
xlat
jge
dec
fs
adc
xchg
jge
jne
pop
mov
imul
inc
jnp
je
pushf
jecxz
or
xlat
dec
push
lret
js
movsl
out
inc
test
movsb
jecxz
subb
sub
icebp
mov
and
mov
nop
mov
or
ret
rcrl
jg
sub
ficompl
push
pop
inc
cltd
stos
cmpsb
push
cmp
sbb
dec
adc
mov
push
push
daa
mov
cmp
sub
sub
fimull
cmpsl
lods
and
push
lea
adc
mov
movl
mov
sbbl
push
mov
sahf
insl
nop
jmp
test
mov
push
xor
nop
stos
add
dec
fs
dec
rclb
cmp
js
sub
dec
cli
mov
cmp
movsb
js
gs
mov
dec
in
and
sbb
push
adc
push
lods
dec
dec
les
push
hlt
mov
fidivrl
cmp
xor
push
jmp
push
push
dec
mov
add
cmp
inc
lret
push
pop
leave
jg
mov
outsb
sbb
inc
add
rorl
cmp
cmp
sbbb
in
mov
dec
mov
sbb
aas
dec
cmpsb
inc
push
or
dec
mov
adcb
dec
dec
fadds
sub
ret
add
lcall
mov
or
mov
mov
inc
xor
gs
xchg
test
inc
test
pop
pop
push
andb
sbb
mov
test
add
ret
mov
dec
mov
cmpsb
mov
add
sub
daa
cwtl
lods
imul
pop
mov
sarb
in
into
inc
sbb
es
lret
jl
aam
adcb
sub
push
fldt
rcr
jmp
out
push
mov
and
xchg
pop
or
sub
lock
popf
push
test
lcall
or
mov
xor
iret
aas
or
jb
or
inc
sub
add
rcll
cmp
fisubl
dec
jnp
pop
imul
add
pop
push
mov
es
popa
lds
inc
sub
mov
jne
cmp
pushf
and
adc
into
add
xchg
xor
mov
ret
les
xor
mov
and
outsb
xchg
jp
xor
outsb
shl
jle
sub
inc
push
or
addr16
cld
push
push
loope
inc
pushf
out
cmp
inc
sbbb
xor
adc
xchg
sub
jle
pop
pop
mov
jns
push
es
or
jno
mov
rclb
and
mov
repz
loop
jl
add
jbe
mov
ret
int
sub
jns
add
mov
pusha
mov
std
je
shrl
xor
and
stos
mov
sub
push
js
int
push
mov
stos
mov
push
sub
sbb
or
outsb
mov
fs
rorl
push
push
lret
cmp
movl
or
add
and
lods
adc
lock
inc
lcall
push
adc
add
xor
dec
sbb
inc
or
sbb
pop
add
mov
adc
nop
push
vpxor
push
test
nop
adc
loop
repz
or
ret
push
and
imul
push
mov
aaa
dec
cmp
xor
inc
aaa
je
insb
daa
rclb
icebp
inc
add
jge
pop
inc
rolb
sbb
sbb
rcll
adc
xor
add
push
sbb
jmp
pop
jmp
insb
pop
xadd
cmp
es
imul
mov
push
jmp
stc
push
sbb
lea
cmpsl
push
inc
push
imul
add
rcll
js
mov
pop
mov
push
sbb
sub
sbb
adc
pop
stos
adc
xchg
enter
shlb
ret
cmp
jne
add
and
pop
push
xchg
cmpsb
mov
sbb
lret
sub
sub
xor
push
push
pop
inc
or
push
outsb
or
jbe
xchg
sbb
and
dec
cmp
push
sbb
lahf
push
mov
push
in
test
sub
sub
cltd
enter
cwtl
iret
inc
pop
mov
aad
pop
rorl
sub
inc
mov
aam
jb
aad
lcall
es
add
lret
adc
sub
push
call
call
and
imul
cld
sub
jne
sar
mov
dec
dec
or
mov
add
push
nop
inc
fsubrp
and
push
dec
stos
shrl
inc
and
mov
add
fwait
dec
imul
add
test
shl
mov
pusha
leave
mov
rcrl
pop
xor
aam
add
and
jno
insb
fnstsw
pushf
pop
int
add
dec
mov
loope
and
add
push
pop
or
and
xor
gs
xor
fsubrp
pop
pop
cmp
adc
cmp
inc
outsl
test
lods
lcall
xor
pop
loopne
inc
lods
lea
push
lahf
mov
mov
lcall
adc
cmp
arpl
sub
and
jae
aaa
jmp
push
inc
sti
ja
pop
add
jmp
push
add
cmp
sub
or
int3
test
or
and
inc
mov
fs
pop
xchg
pop
push
lea
jle
add
test
and
cmpsl
add
xchg
cmp
shll
pop
ds
inc
push
and
dec
fnsave
xor
and
push
push
and
subl
aam
fistl
cmp
xor
push
mov
inc
pop
and
fsubl
or
lods
daa
push
jmp
daa
bound
aaa
push
xor
add
jge
ljmp
in
lds
pop
pop
pusha
xchg
pop
fdivrs
imul
je
roll
nop
lret
push
inc
fmull
cmp
xchg
hlt
sub
inc
in
inc
lock
sbb
cmc
shll
mov
cmp
pop
jo
push
iret
cmpb
aaa
inc
testl
test
inc
imul
rcrb
jl
flds
dec
jmp
rorl
repnz
xchg
lds
movsb
push
add
pop
and
mov
add
cmpb
insl
or
xchg
mov
lods
pop
push
cs
pop
inc
clc
movb
push
nop
mov
aas
arpl
sub
cmp
pop
jl
pop
je
push
nop
lcall
fbld
adc
xor
or
ret
outsl
cmpsb
jns
icebp
mov
push
outsb
ds
call
test
cmp
mov
ret
mov
adc
pop
lea
insb
pop
aaa
mov
dec
jae
sub
add
or
int
and
or
add
adcl
cmc
pop
mov
fsubl
test
rol
movsb
hlt
std
sbb
sti
imul
or
fisubs
lcall
or
jmp
dec
adc
pop
pop
mov
daa
into
jg
rolb
push
fcmovbe
xchg
icebp
push
sbb
or
xor
xor
and
jno
xchg
sar
push
addb
je
nop
xor
and
jmp
cmp
jne
pusha
or
push
lock
lret
out
stos
inc
les
stc
sahf
lret
jp
daa
or
or
imul
adc
or
popf
push
mov
inc
dec
or
aam
inc
cmc
insl
aaa
movsb
mov
iret
shl
push
push
adc
ss
in
and
ret
jb
rcl
cmp
cs
aam
rcr
lods
mov
data16
adc
mov
inc
cmp
jb
push
add
pop
pop
push
inc
rorb
lret
je
imul
adc
adc
nop
popa
cmpsb
mov
mov
pop
stc
adc
int3
dec
cmp
sbb
aad
jg
sbb
adc
sarb
in
cmpsb
imul
or
leave
out
test
test
leave
pop
sub
dec
cmp
test
adc
xchg
mov
add
inc
leave
adc
sub
inc
xchg
add
push
idivb
lret
bound
enter
mov
or
push
xor
adc
andl
in
call
sub
adcb
pop
push
adc
cs
xchg
jg
scas
fcom
sub
roll
fstp
pop
mov
inc
mov
es
test
andb
ret
or
dec
popa
inc
sbb
clc
dec
mov
mov
jl
cmp
mov
sbb
inc
sub
dec
lea
cmp
inc
jecxz
icebp
fmull
or
insb
mov
outsb
inc
sti
cli
paddsb
push
add
sub
mov
outsb
leave
jno
jg
cwtl
xchg
orl
lea
iret
repnz
sub
add
lret
aas
and
jmp
inc
or
pushf
dec
push
fidivrs
adc
add
push
nop
pusha
and
xor
ror
lcall
jb
pop
push
xor
enter
mov
nop
mov
or
xchg
jbe
push
sahf
xor
mov
insl
xchg
and
sub
xor
push
push
mov
mov
in
jl
addr16
xchg
sub
xor
aas
into
inc
loopne
jge
push
dec
cmp
push
paddusb
xchg
ror
pop
hlt
loop
sub
adc
xchg
sbb
xchg
scas
imul
sbb
pop
or
stos
mov
je
push
sub
iret
mov
push
je
xchg
fimuls
mov
adc
dec
call
add
in
movsb
cmp
push
pop
js
xorw
test
je
test
sarb
push
mov
lret
or
enter
out
dec
shrb
pop
push
mov
es
xchg
push
idiv
xlat
cmpb
xlat
xor
hlt
push
cmpl
push
lock
xor
cmp
ss
lcall
add
clc
mov
ja
mov
into
mov
or
stos
or
fdivrs
test
fidivl
popa
mov
lods
mov
daa
loopne
ret
aam
int3
dec
inc
xchg
sarb
neg
rcll
adc
daa
sbb
in
shlb
xor
sbb
sbb
testb
sbb
or
pop
mov
or
fcmovnb
xor
lock
jo
xchg
mov
jb
mov
add
pop
mov
sub
hlt
jo
mov
aam
sub
xchg
lahf
mov
xor
push
in
pop
xchg
aad
leave
pusha
mov
in
pusha
sbb
cmp
je
jmp
js
mov
outsb
pop
mov
pop
jle
mov
sbb
pop
jo
inc
xchg
es
inc
dec
add
and
inc
flds
add
adc
outsb
add
dec
mov
push
or
push
xor
int3
outsl
je
push
shrb
mov
cmp
je
or
or
xor
inc
inc
pop
push
scas
push
andl
js
add
push
pop
cmp
add
adc
loopne
sbb
add
fcmovnu
leave
test
imul
cmp
inc
in
and
call
xchg
push
out
lock
xchg
xor
or
mov
das
xor
adc
ficoms
out
push
in
dec
jmp
call
push
push
movsb
add
aaa
pop
ljmp
add
jo
adc
mov
mov
mov
push
jo
data16
inc
or
rorb
xchg
inc
mov
dec
mov
daa
jl
subl
je
dec
xchg
add
or
and
xor
add
lock
push
cwtl
je
mov
fbstp
cmp
es
add
sbb
add
das
pop
pop
popf
adc
hlt
mov
pop
adc
fsubl
mov
and
loop
inc
pop
mov
mov
cmpl
fmull
xchg
mov
and
adc
and
or
mov
dec
add
inc
or
mov
or
adc
cwtl
add
xlat
dec
xchg
push
aam
xor
std
mov
sbb
ss
pop
push
test
adc
add
mov
ss
push
repz
loopne
push
les
push
adc
and
sti
or
pop
ret
rcll
sub
int3
fstl
cmpsl
jge
rorl
push
rorl
or
pusha
inc
dec
shr
pop
sbbb
pop
cmp
jne
je
push
push
fdivs
fs
pusha
jg
mov
je
aam
jne
out
pop
and
fsub
xor
mov
hlt
jl
mov
adc
call
add
mov
or
add
pop
mov
cltd
mov
xchg
out
push
idivb
rolb
scas
add
mov
jo
or
inc
push
mov
mov
sti
jnp
es
dec
add
push
ret
test
je
fadds
andl
or
sub
loopne
cmp
mov
clc
fcompl
loop
cld
and
mov
xchg
xchg
or
push
roll
imul
test
in
xlat
inc
std
sbb
adc
jb
mov
je
pop
add
dec
pop
inc
push
add
and
or
mov
jae
loop
inc
and
sub
sbb
dec
or
mov
push
cmp
xchg
ret
scas
faddl
and
mov
inc
adc
pop
rcll
pop
sub
add
mov
xor
loopne
push
xor
push
or
lcall
mov
xor
fs
lock
ret
inc
xor
mov
dec
inc
or
push
cmp
cmp
je
outsb
mov
and
or
cmpsb
adc
pop
je
hlt
push
out
inc
adc
pop
mov
push
push
push
push
lea
testb
mov
add
adc
sub
arpl
adc
mov
test
push
push
sub
aaa
push
movsb
repnz
test
mov
xchg
add
nop
loopne
lock
push
shlb
jne
fimuls
in
outsb
lret
mov
shll
or
loopne
pushf
mov
mov
shrl
cmp
jb
push
adc
or
or
jo
imul
mov
jnp
dec
insb
mov
test
sbb
mov
sbb
clc
inc
push
mov
js
adc
jge
lret
cmp
jg
mov
adc
mov
adc
or
sbb
cltd
mov
cmp
cli
jg
push
cmp
ja
nop
xchg
mov
jmp
fisubrs
pop
push
shr
ds
adc
movsb
xchg
imulb
add
push
ret
js
jmp
mov
sbb
push
icebp
aad
push
imul
add
subb
test
stos
push
in
pusha
call
push
push
add
inc
lods
sub
popf
dec
sub
sub
add
insb
lock
sub
popl
adc
aaa
mov
jl
cmc
call
pop
test
aam
and
xorb
rcl
mov
xchg
add
pusha
push
mov
test
pop
data16
imul
outsb
dec
out
movsb
fstps
and
xchg
addr16
push
xor
jmp
add
xor
mov
jmp
movsl
jbe
fstpl
mov
cli
push
push
jg
mov
mov
mov
jne
add
push
mov
pop
imul
scas
mov
push
mov
je
scas
inc
clc
or
insl
jne
mov
jns
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
push
inc
decb
jmp
sub
inc
xlat
rcrb
adc
add
faddl
cmp
xor
mov
test
mov
rcrl
push
xor
movsb
push
or
or
push
push
out
push
or
add
cmp
inc
mov
push
or
faddl
mov
pusha
movb
xchg
popf
xchg
jmp
push
rcl
jmp
mov
jnp
mov
ljmp
jp
xor
xchg
aaa
mov
dec
cld
sub
dec
into
push
rcrb
and
jl
mov
adc
or
xor
and
push
test
mov
jae
call
movsl
clc
sbb
pop
add
push
pop
stc
pop
and
jne
aad
ja
mov
out
mov
shr
pop
loopne
pop
outsb
cmpsl
enter
mov
push
xchg
aaa
rcrb
sub
dec
addr16
dec
lret
mov
mov
inc
pop
cmp
rolb
jbe
mov
pop
mov
outsl
mov
test
inc
mov
pop
orb
mov
dec
rcrl
cmp
pusha
shll
jo
ficompl
ret
jl
mov
cld
cld
pop
call
cmpsb
cwtl
add
fiadds
sti
or
push
jbe
popf
imulb
inc
int3
test
inc
lods
imul
pop
scas
sub
rcr
add
rcrb
mov
lods
addr16
mov
fiaddl
adc
and
add
sbb
or
lea
test
fmul
orb
jl
js
or
orb
push
fs
int
or
push
cmp
jbe
daa
add
js
push
cltd
xor
dec
pop
es
xchg
mov
mov
adcb
cld
mov
adc
and
cmp
jne
push
icebp
inc
test
xor
push
mov
popa
shll
dec
pcmpeqw
cbtw
add
or
adc
sub
adc
dec
jl
jecxz
xor
loopne
add
sub
xor
outsb
dec
adc
mov
jae
jmp
cmp
sbb
pop
xor
jb
jne
cs
push
add
ror
test
dec
loopne
rcrl
xor
mov
cli
push
ja
loopne
aas
movb
jne
mov
jb
mov
add
jmp
dec
mov
push
inc
dec
inc
cmp
and
xchg
add
sbb
jnp
sub
rcl
jne
scas
pusha
add
fistpll
enter
inc
loope
jp
push
scas
clc
xchg
jmp
pop
fmull
shr
and
test
and
push
pop
add
pop
fsubl
das
jae
test
xchg
lock
lea
add
sbb
jne
adc
sbb
lret
notb
push
clc
out
test
push
andl
fistpll
fnstcw
adc
cmp
mov
out
add
in
jmp
das
or
inc
fidivrs
sbb
mov
lahf
dec
dec
mov
iret
cmp
or
push
ljmp
push
clc
insl
outsl
mov
inc
xchg
out
push
mov
add
ret
roll
mov
xchg
jbe
mov
sub
mov
pop
dec
jne
stc
lock
cs
clc
push
stc
je
mov
adc
jne
xor
jb
inc
xchg
ja
fwait
gs
in
inc
inc
lahf
sub
xor
or
add
push
and
sbb
and
iret
outsb
adcb
testb
mov
ffree
adc
shrb
xchg
and
pop
popf
inc
mov
test
xchg
mov
clc
mov
mov
movsl
cmp
or
icebp
push
ljmp
icebp
lods
cmp
jmp
mov
pusha
add
sbb
dec
jnp
push
cmp
inc
pusha
es
or
cmc
adc
inc
or
pop
and
or
hlt
pop
lret
add
sub
daa
or
pop
or
into
cmp
xor
push
insb
inc
test
jmp
into
jecxz
mov
test
inc
jo
pop
pop
or
jp
push
mov
or
add
cmpsb
push
mov
push
cwtl
lock
sub
sbb
jne
shrb
mov
sahf
int
jo
rcll
and
sub
rorb
lea
dec
or
loope
dec
mov
inc
or
mov
sbb
and
sbb
lods
flds
nop
gs
or
xorl
and
pusha
insb
insb
pop
and
xor
loope
andl
push
xchg
cmp
push
or
mov
testl
je
cmp
je
mulb
sbb
and
cmp
mov
and
iret
je
xor
call
push
push
lds
imul
inc
pop
xchg
loope
add
jmp
lea
andb
dec
leave
add
andl
loopne
jns
jne
lock
adc
sbb
lock
cmpsl
addb
mov
adc
pushf
xchg
frstor
sub
mov
ss
mov
mov
push
push
add
into
add
push
mov
ret
inc
ja
jg
mov
aas
inc
sti
mov
pop
cs
popa
xlat
mov
jle
push
inc
cmp
iret
and
shlb
mov
cwtl
jl
testb
push
push
inc
sub
add
mov
xchg
leave
pop
mov
add
or
bound
lock
sbb
dec
dec
jbe
add
push
ror
adc
inc
sahf
test
sbbl
adc
adc
test
ds
jge
call
popa
cmp
or
xor
fiaddl
inc
mov
cs
mov
cmc
popa
push
addr16
push
aas
popf
not
jne
std
push
xor
adc
fsubs
cltd
jne
xchg
fidivl
xchg
mov
cwtl
aam
push
mov
mov
inc
movsb
out
add
sub
pop
loopne
je
sbb
xor
xchg
sti
jns
js
push
and
dec
push
lea
push
pop
cwtl
push
adc
push
mov
lea
iret
push
push
push
lret
push
or
add
pusha
cltd
sbb
lods
jnp
aad
add
adc
pushf
fdivrs
mov
and
push
cwtl
lock
ss
cmp
sub
in
mov
lea
mov
fs
mov
mov
jo
or
and
pop
inc
das
jmp
call
sbb
movsb
test
adc
ja
sar
push
fcomp
into
inc
std
mov
mov
stos
push
pop
cmp
js
cmp
adc
add
push
xchg
xlat
and
dec
sbb
cmp
pop
negl
je
aaa
xchg
ja
cli
rcl
les
adc
out
std
sbb
sbb
jg
adc
test
push
cmpb
loope
and
sbb
jo
adc
hlt
add
add
pop
inc
cmp
hlt
push
mov
adc
push
rcll
and
inc
or
push
or
rorl
cmp
ret
loope
fistl
into
jecxz
and
ret
in
push
xchg
int3
mov
fnstsw
or
daa
mov
xchg
lret
loope
aad
verr
sbb
pop
inc
sahf
aam
inc
adc
or
mov
fcmovnb
jecxz
test
pop
sbb
cmp
or
jp
xor
jmp
mov
rorl
mov
push
icebp
add
pmulhuw
mov
mov
sub
mov
jo
lret
test
test
add
mov
or
mov
xchg
sarl
stc
mov
xchg
add
cld
mov
aam
sbb
adc
out
mov
push
push
cli
or
mov
int
sahf
cmp
push
xchg
popa
cwtl
bound
pop
push
scas
adc
add
movsb
imul
mov
cmp
inc
and
ljmp
shl
imul
and
aas
mov
adc
mov
inc
jne
dec
or
test
inc
popf
in
imul
int
push
push
push
je
or
movsb
inc
or
mov
inc
cmp
adc
push
pop
lea
push
push
inc
shlb
cmpsl
push
pop
icebp
shlb
jle
dec
rcll
push
push
fsubs
mov
mov
rorb
scas
js
xor
or
inc
pop
test
jp
inc
or
in
adc
outsb
inc
into
sbb
and
dec
push
sbb
sbb
add
mov
movsb
loop
imul
add
and
ljmp
jge
orb
mov
xor
adcl
insb
jp
ljmp
js
sbb
add
mov
xor
fidivrl
negb
cmp
pop
xchg
in
push
pop
sub
popa
sub
inc
push
out
dec
cmp
int
rcll
xor
sbb
shr
in
dec
xchg
add
cmp
fnstsw
push
add
xor
mov
dec
stos
fldl
xor
mov
push
sbbl
xor
call
sbb
jae
inc
pop
stos
xlat
shrb
pop
push
js
cmp
inc
sbb
rcrb
xchg
icebp
xor
mov
ss
shrb
push
adc
outsb
iret
cmp
and
dec
xchg
faddp
sbb
push
inc
andl
and
add
stc
lods
int
push
and
fists
ret
or
mov
sub
sub
leave
out
aaa
mov
in
neg
sbb
push
cmp
ret
dec
and
xor
bound
je
sbb
and
sbb
mov
cmp
inc
mov
xor
mov
xor
ret
orl
daa
rcr
cmp
xchg
adc
adc
cld
sub
pop
inc
xchg
dec
jge
andl
rorb
or
and
jl
nop
orb
push
push
fnstcw
push
gs
mov
push
pop
add
loop
lea
loope
push
jmp
or
cmp
ss
push
inc
dec
add
addr16
rcr
sub
lods
pop
sub
cmp
sbb
pop
pop
pop
pop
test
push
idivb
and
or
out
fistl
fistpll
gs
push
push
pop
adc
jl
imul
pop
and
jne
pop
cltd
add
or
sbb
mov
mov
fistpll
hlt
dec
xor
sub
push
dec
outsb
mov
rcll
xor
pop
rorl
xor
xchg
test
adc
aad
push
adc
jg
jnp
inc
cmpsb
push
test
js
mov
mov
fdivrl
adc
test
push
rol
repnz
das
bnd
dec
cmp
push
sbb
push
mov
add
and
shr
pop
push
js
add
push
sbbb
dec
dec
mov
mov
push
inc
adc
inc
push
add
fs
jp
jmp
out
jmp
pop
cwtl
hlt
push
fbstp
mul
push
nop
or
pushf
push
bound
leave
enter
rol
bound
push
pop
xlat
fcmovne
decl
mov
cmp
cmp
cmp
mov
xor
add
sbb
push
cmp
testb
or
mov
add
loop
jg
mov
jo
sti
lahf
mov
dec
jl
loope
xor
xchg
cmp
or
inc
jno
popa
mov
out
mov
mov
cmpl
std
ss
mov
arpl
adc
dec
xor
cmp
lret
mov
repnz
mov
stos
pusha
xor
sbb
out
dec
movswl
add
and
cmp
add
xor
popf
and
aaa
add
push
mov
add
data16
sbb
sbb
mov
test
inc
pop
xor
je
xor
fucomi
push
cmc
rol
filds
sbb
lods
cmp
push
das
icebp
push
jne
jo
pop
imul
outsb
and
sahf
pop
fildll
push
inc
fmull
push
mov
test
and
add
mov
test
mov
outsl
les
and
jmp
lea
mov
push
sbb
pushw
pushf
data16
mov
adc
aad
pusha
int
movsb
test
andb
fcoms
adc
xchg
inc
push
pop
mov
pop
pop
push
call
push
and
push
ret
hlt
pop
andb
pushl
insl
sub
xchg
ret
jmp
repnz
popf
sbb
sbb
outsb
movsb
nop
push
push
lea
mov
dec
mov
cltd
negl
mov
inc
push
insb
dec
sbb
clc
loop
je
push
in
mov
mov
jbe
ret
push
add
subb
ret
testl
or
pop
mov
mov
add
xor
add
and
aas
jecxz
popf
add
gs
cwtl
stos
pop
cmp
add
nop
and
push
push
addl
nop
add
imul
adcb
push
dec
fiaddl
cmp
gs
push
jns
movsb
adc
shlb
incb
daa
add
or
inc
mov
sub
pusha
mov
xchg
out
add
mov
pop
arpl
inc
add
xchg
xor
cld
dec
fidivrs
and
push
inc
cmp
add
push
popa
lods
or
lahf
xor
xchg
out
insl
xchg
into
pop
hlt
inc
into
sub
hlt
aas
rolb
mov
push
mov
xchg
js
nop
push
mov
add
sbb
test
fdivrl
xor
cmp
fimull
test
fwait
sub
sbb
aaa
bound
loopne
jle
rcll
pop
jae
scas
bound
je
pop
add
or
dec
movsl
daa
jle
lahf
repz
jbe
mov
in
cmp
dec
sub
mov
or
add
pop
add
sbbb
cmp
xor
cmp
lods
pop
add
or
imul
add
cmp
cmp
inc
pop
out
cmp
mov
loope
test
mov
js
and
mov
scas
lea
jb
ret
rcrb
push
mov
mov
dec
add
mov
sbb
mov
push
bound
pop
and
aas
sub
add
lods
jbe
add
cmpsl
frstor
and
fstpt
cld
xlat
movb
mov
in
jge
movl
clts
inc
insb
shr
inc
add
add
sti
das
push
clc
dec
adc
loope
and
adc
add
xchg
pop
mov
pusha
insb
std
sarl
insl
lret
sbb
mov
hlt
or
mov
fdiv
out
push
aam
sbb
jb
jge
xchg
push
test
inc
mov
xor
push
hlt
sbb
inc
jl
fisttpl
je
push
lock
push
pop
cmp
push
cmpsl
adc
inc
hlt
mov
mov
xchg
jne
test
rol
jns
mov
push
mov
cmp
fucom
mov
je
mov
lcall
push
nop
sub
adc
mov
add
inc
xor
xchg
mov
sbb
and
imul
inc
andb
mov
inc
inc
xor
mov
or
stc
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
xchg
out
sbb
loope
addr16
out
cmpb
ud0
lahf
cmp
xor
inc
inc
add
js
repz
movb
dec
popa
push
dec
push
lahf
xchg
sub
je
adc
cmp
sub
ss
inc
or
mov
orb
xor
mov
sub
push
pop
push
cmpsb
fiadds
lcall
mov
mov
das
push
sub
inc
jecxz
mov
sub
test
adc
xor
add
or
mov
cmpsl
xchg
fldl
rorl
mov
jmp
cmp
jl
adc
and
dec
in
hlt
xchg
shl
aas
daa
or
cmp
ja
push
add
scas
loope
out
sarl
mov
xlat
pop
push
pushf
iret
stos
or
jb
push
hlt
ret
sbb
lcall
adc
aad
les
decb
xor
xchg
mov
les
mov
sbb
push
out
sub
popf
adc
fnstcw
adc
in
lea
dec
add
push
push
jg
repnz
fists
push
push
push
or
call
and
xchg
pusha
or
adc
jmp
xchg
dec
push
or
or
ret
pop
outsb
inc
pusha
pop
cmp
popa
push
test
inc
jo
mov
push
add
mov
jecxz
mov
out
pop
and
lret
dec
inc
adc
movsb
je
roll
pop
testl
shlb
iret
rclb
call
xchg
inc
mov
dec
or
dec
cmc
xor
or
or
push
xchg
and
adc
inc
lret
sbb
or
sti
sub
and
popa
and
pop
dec
sub
pop
mov
movb
adc
push
sbb
pushf
mov
mov
int
fbld
into
in
je
add
pusha
mov
add
cmp
inc
or
xor
enter
or
hlt
jge
add
xor
mov
adcb
mov
shlb
insl
jne
bound
loope
jmp
jo
mov
cld
ret
inc
push
jae
push
push
mov
pop
es
jl
movl
pop
pop
push
push
or
es
pushf
aas
add
int
mov
xor
mov
insl
lea
test
jne
je
cmc
or
ret
sbb
inc
push
and
outsl
testl
or
in
js
popl
inc
sub
mov
push
rolb
es
sbb
dec
jo
xor
mov
imul
outsb
mov
add
sub
mov
movsl
mov
shrb
sbb
bound
jnp
lahf
inc
or
add
sub
xor
inc
rorb
mov
or
push
push
addb
jo
filds
sub
in
mov
ds
popf
out
cwtl
push
xor
xchg
mov
mov
push
push
xchg
insl
rolb
or
es
dec
sbbl
dec
push
push
daa
adc
push
xorl
loop
add
pop
shl
add
pusha
dec
inc
les
pop
or
mov
pop
mov
add
xorb
pushf
jecxz
stos
jp
lahf
sbb
andl
dec
call
fadds
in
divb
je
or
je
or
sub
xchg
mov
das
adc
inc
rolb
decl
or
ds
xchg
jo
mov
test
sbb
mov
push
push
lcall
cs
sti
test
je
push
adc
adc
movsl
xor
inc
popa
xchg
cmc
mov
xchg
inc
sbb
jne
and
orb
jge
adc
call
jg
in
mov
je
adcb
filds
shrb
or
or
add
je
jo
std
add
ret
push
xchg
rorl
adc
add
adc
sbbl
and
test
cltd
and
add
mov
lret
add
mov
lea
or
loope
inc
mov
cmpb
fcom
dec
je
sub
ja
sub
add
scas
test
adc
add
nop
adc
in
sub
jnp
test
loope
or
push
adc
inc
xchg
sub
add
add
sbb
mov
dec
push
push
jnp
and
add
icebp
add
xchg
stc
dec
sbb
add
int3
sub
push
test
jnp
icebp
and
loope
pop
cmc
jo
or
push
dec
push
sbb
jnp
dec
push
sarl
inc
cmp
mov
iret
push
sbb
adc
fdivrl
notl
add
mov
and
testb
mov
sub
or
jg
mov
inc
push
inc
push
push
push
xor
ja
in
in
push
mov
push
call
int3
mov
push
aaa
loopne
test
lods
xchg
inc
cmp
fcomp
repnz
inc
clc
xor
push
push
addr16
nop
rcll
or
mov
cltd
cmpsl
mov
sbb
jmp
inc
shlb
add
fidivs
or
cmp
jecxz
mov
xchg
jge
dec
pop
movsb
imul
and
pushf
jmp
nop
and
or
add
or
out
pop
or
pop
ret
and
fcomps
inc
enter
mov
pop
xchg
dec
xchg
ret
ret
pop
movsb
imul
push
cltd
pushf
sub
cmp
ret
sbb
cs
call
mov
push
cmc
mov
push
test
jns
ret
add
and
sbb
movsl
pop
inc
mov
pop
stos
insb
loopne
push
lcall
bound
test
add
dec
inc
push
nop
aam
aam
leave
add
lret
sub
loopne
test
es
in
clc
mov
mov
loopne
mov
push
xlat
out
and
cwtl
pcmpgtb
mov
and
imul
sti
sar
inc
sub
mov
inc
ret
mov
les
or
add
cmpsb
cmc
push
adc
movsl
jb
dec
push
fistpl
sbb
xchg
insb
sub
pop
data16
lods
and
sti
fisubl
mov
sbb
sbb
arpl
sbb
pop
add
pushf
popa
push
std
sarb
adc
pushf
adc
xchg
mov
ret
jbe
pop
shlb
sbb
jmp
jle
dec
ficoml
pop
or
int
push
or
cld
inc
push
jmp
hlt
enter
ret
inc
rcr
clc
add
adc
mov
dec
cmpsb
xor
cmp
les
xor
push
lea
les
inc
push
test
imul
movl
sbb
int3
mov
rolb
add
cmpsl
rorb
fmull
fstps
push
sub
and
xor
orb
xchg
sub
xor
cwtl
mov
sarl
jo
leave
push
imul
sub
xchg
je
and
push
repz
sub
xchg
adcb
xchg
ffreep
test
sub
sub
or
fidivs
add
adc
mov
fwait
pop
dec
and
and
cmp
adc
imul
pop
push
mov
shll
mov
add
lea
push
mov
loope
push
movsb
dec
cmp
loopne
pusha
fidivrs
repnz
push
xor
xor
popa
loopne
push
xor
cld
push
lahf
mov
or
insl
arpl
call
rol
lock
incl
sub
cmpl
xchg
sub
inc
inc
xor
mov
test
ret
lea
and
sbb
into
pop
pushf
and
mov
loopne
cli
fnstsw
pop
ret
mov
pop
notb
in
iret
pusha
dec
or
sbb
or
pop
cmp
inc
inc
push
and
cli
push
add
ret
orb
push
add
cmpb
sub
add
push
pop
jl
cmp
add
iret
fdiv
push
push
inc
outsl
add
loopne
jb
push
push
mov
test
pop
mov
in
outsb
test
lods
minps
aam
sub
iret
xchg
xchg
in
cwtl
movsb
into
inc
sbbb
push
jp
lock
stos
mov
test
xor
sub
or
and
dec
add
jg
daa
push
movsl
add
call
repnz
or
pop
jg
push
inc
pop
sar
je
inc
or
push
mov
rcrb
cmpl
sub
or
sbb
and
lock
dec
xor
or
scas
mov
lods
movsb
dec
sbb
inc
adc
sbb
inc
ljmp
les
inc
fstpt
imul
dec
dec
xchg
sbb
call
js
adc
lock
fcoml
push
push
jl
es
mov
pop
repz
lock
mov
mov
push
sbb
mov
or
repz
push
inc
mov
out
in
mov
sub
inc
loope
jge
pop
mov
cwtl
and
loopne
sbb
or
adc
pop
mov
add
mov
lods
pop
sub
dec
fnstcw
jnp
cmpsb
flds
mov
and
loopne
add
jge
sub
adc
mov
hlt
jle
push
rcrb
mov
les
daa
je
push
cwtl
dec
test
mov
movsl
test
xor
pop
jmp
pop
sbb
vxorps
mov
inc
mov
inc
add
push
orb
loop
test
test
cli
fcomip
or
adc
or
sbb
jl
add
stos
sbb
shll
adc
jns
stc
icebp
cmp
fidivs
sbb
rcll
jnp
aaa
stos
jecxz
xchg
cltd
or
jge
scas
ret
mov
or
je
mov
hlt
je
lret
les
shlb
mov
call
add
pushw
xor
adc
jnp
sub
push
and
mov
dec
stc
fs
fisttps
jp
je
cmp
push
sub
push
mov
jbe
lods
push
push
jmp
in
dec
xchg
add
push
dec
mov
lahf
xchg
fwait
add
sar
and
push
mov
or
inc
ja
mov
dec
dec
dec
hlt
add
pop
je
or
push
cmp
xchg
sti
or
sub
push
fs
cmp
sub
push
mov
lret
adcb
test
inc
sti
pop
sbb
dec
sbb
popa
lds
ss
leave
decl
rorl
nop
adc
cmp
rolb
sub
cmp
mov
add
ret
sbb
pop
and
jg
js
jl
push
add
dec
push
add
hlt
add
sbb
jmp
push
adc
mov
push
jl
add
or
xchg
out
mov
in
out
popa
mov
xor
in
or
mov
push
dec
mov
cmp
addr16
dec
fldenv
adc
mov
clc
or
xchg
add
mov
sahf
mov
fsubr
dec
or
je
adc
imul
and
inc
xchg
ss
cmp
inc
xchg
jecxz
sarb
and
sbb
sahf
xchg
inc
push
push
cmp
and
daa
and
inc
repnz
cwtl
cs
sub
lret
and
push
sbb
sbb
pop
es
sbb
xchg
add
dec
cld
bound
inc
mov
fnstcw
out
xchg
and
push
push
sub
push
and
push
xor
xor
mov
enter
pushf
fdivl
dec
xchg
xor
push
push
mov
xchg
inc
scas
cmp
sbb
cmp
lahf
xchg
cmpsl
fwait
or
pop
sarl
xor
or
in
mov
pop
mov
bound
push
cs
add
inc
mov
xchg
hlt
cmp
pop
ret
jl
add
adc
daa
cli
sbb
push
in
jmp
mov
mov
sub
ret
xchg
push
dec
push
mov
inc
sub
lods
gs
scas
aam
push
lcall
rcrl
fsubs
mov
outsb
mov
pop
mov
ret
or
loopne
decl
call
or
sub
sbb
adc
dec
adc
aam
or
enter
mov
int3
adcb
and
lcall
mov
ljmp
add
pop
arpl
and
js
jg
sub
movsl
mov
fwait
sub
push
shlb
xchg
mov
inc
dec
cmp
filds
sarb
pushf
sbb
daa
xchg
adcl
popf
add
shlb
push
add
dec
in
rolb
jge
jl
repnz
cmp
mov
push
bound
jb
add
push
inc
or
inc
or
add
and
push
mov
adc
js
lods
les
add
pop
and
or
call
enter
mov
push
shl
pop
cmp
jne
mov
add
jg
test
xchg
pop
sub
adc
add
shrb
ss
push
vpunpckhwd
xor
pusha
cld
lret
stos
int3
nop
daa
or
cmpsb
push
int3
jo
lret
adc
inc
fstps
subl
dec
sub
clc
popf
js
mov
add
call
insl
add
xchg
popl
mov
add
push
lock
mov
dec
or
pop
jmp
lea
fs
popa
lea
les
jne
sbb
hlt
xchg
in
add
xor
mov
push
fisubrl
jge
push
pop
add
mov
mov
sub
add
push
test
cmp
ja
adc
push
mov
js
dec
mov
xor
push
push
dec
cmp
test
in
pop
fsubl
or
add
pmuludq
decl
add
popf
add
sarl
rorl
hlt
mov
sbb
push
xor
xor
dec
js
sub
push
dec
fs
imul
call
imul
or
mov
lock
mov
push
or
insl
jno
pop
mov
in
and
adc
push
test
mov
jle
je
cmp
jbe
shll
push
leave
push
xor
adc
enter
scas
push
xor
lods
dec
cmpb
cmp
fldt
xchg
lods
sub
cmp
inc
ret
inc
jge
dec
mov
pop
orb
xchg
add
xchg
mov
sbb
sbb
dec
enter
dec
push
popa
test
adc
mov
push
pusha
dec
add
dec
stc
add
test
test
push
sub
jo
jae
sub
add
mov
cmp
push
inc
lock
shlb
push
jg
cli
bound
xor
inc
xchg
hlt
into
test
cmp
mov
frstor
shlb
push
lea
sub
subl
test
sbb
out
sbb
scas
and
push
xchg
sbb
sub
xchg
fimull
or
repnz
mov
pop
xchg
rorb
sbb
mov
xor
inc
jecxz
mov
fdivrl
sub
mov
aaa
cmp
push
pop
xchg
addl
add
call
mov
pop
cwtl
rolb
pop
aam
mov
addb
push
arpl
mov
mov
push
cmp
or
push
xchg
mov
jle
and
dec
repz
adc
pusha
test
push
jmp
sbb
testb
jo
sub
or
jp
jge
add
and
jne
andl
mov
push
sbbb
addb
aaa
popa
and
and
sub
testb
rolb
or
or
inc
dec
sbb
sub
push
jnp
ret
push
jb
jo
dec
lea
popf
rclb
rclb
push
or
and
add
cmp
pusha
mov
int
cwtl
pop
xor
add
adc
sbb
adc
sub
add
or
push
neg
fcomp
mov
into
dec
les
sbb
ret
jb
fs
pop
sub
ret
out
sbb
push
push
or
lods
sbb
pop
and
rcrb
mov
cmpsb
push
sub
in
rolb
andl
dec
push
leave
mov
popa
pop
push
loope
add
jnp
push
push
mov
pop
or
fcoml
in
movsb
daa
lret
add
jns
popf
aam
and
cmp
push
imul
inc
add
imul
jle
dec
faddl
jo
dec
xor
and
inc
xor
inc
mov
pop
out
cwtl
and
sub
shrl
and
mov
xchg
mov
fstps
lret
xchg
jbe
pop
mov
shlb
xchg
dec
lock
sbb
sub
cld
inc
jo
dec
pop
cmpl
mov
ret
orb
adc
dec
push
addr16
xor
les
in
or
outsl
adc
and
test
xor
or
loope
rcr
mov
add
dec
pop
loope
es
xchg
add
out
enter
inc
inc
cs
cld
sub
in
sub
sub
imul
lret
pusha
cwtl
subb
cmp
push
sbb
sub
mov
mov
lock
cmp
and
je
sub
pop
add
and
shrb
mov
add
cli
adc
push
imull
add
outsb
push
clc
std
add
pop
sub
ljmp
mull
call
ss
movb
mov
jmp
dec
mov
ret
inc
and
mov
push
jbe
sub
lea
in
data16
ret
push
xor
cmp
jb
and
test
mov
pop
sbb
cmp
sbb
dec
push
or
add
idivb
lock
or
das
pop
pusha
and
adc
cmp
clc
pop
mov
notb
je
xor
mov
insb
inc
je
push
movsl
das
mov
jp
inc
out
test
inc
mov
pop
in
popf
xchg
mov
js
leave
sub
inc
inc
test
add
sub
inc
inc
dec
jno
arpl
test
bound
xor
imul
pop
cmp
adc
jg
mov
mov
sub
mov
in
add
stos
or
insl
jge
mov
add
adc
jle
dec
add
jmp
ficoml
xchg
xor
mov
dec
sbb
pop
push
mov
out
add
push
shll
pushf
or
lret
dec
enter
mov
push
sti
orl
sahf
sub
cli
test
or
xor
pop
pop
pop
push
xor
cmp
sarb
sub
or
dec
pop
ljmp
add
and
add
clc
pusha
lock
inc
add
push
movsl
add
loope
mov
sub
and
push
loope
mov
shrb
add
shll
sar
or
movsb
and
sub
inc
push
add
ljmp
mov
sub
out
sub
rclb
push
imul
push
lret
cmp
fdivp
pop
or
sbb
jns
adc
stc
xchg
scas
add
mov
scas
inc
imul
mov
add
push
and
fidivrs
lods
test
add
pop
mov
movb
pusha
enter
mov
or
add
sbb
iret
lahf
int3
mov
imul
daa
jge
inc
call
loopne
cmp
lea
je
ret
insl
pop
mov
je
nop
ja
or
add
cmp
xchg
adc
sbb
fnstcw
pop
adc
cmp
push
rcrb
xor
adc
dec
dec
mov
cmp
add
popf
jne
jl
inc
jbe
cmp
lock
cmp
push
or
lea
int
push
sti
rep
bound
mov
cmpsl
or
adc
jmp
sub
jae
sub
mov
add
push
dec
add
arpl
add
jnp
and
jne
xor
and
inc
push
push
cld
into
dec
mov
and
push
mov
push
stos
and
dec
adc
push
pop
js
jge
data16
inc
sub
js
mov
push
adc
or
lret
iret
adc
sbb
cmp
fsts
testb
jbe
pop
inc
xchg
pop
mov
push
rorl
mov
adc
sub
rolb
fbstp
andl
es
mov
insb
or
arpl
mov
pop
or
mov
and
add
imul
inc
in
and
inc
sub
enter
cli
xor
hlt
mov
cmpsb
push
pop
dec
fsubs
mov
jmp
aad
test
jl
inc
and
pop
call
and
cld
sub
or
pop
cvtps2pi
jo
insl
xor
mov
mov
inc
rolb
test
ja
into
add
mov
loop
mov
rolb
lock
mov
push
push
push
cmp
rcll
dec
aam
or
push
lcall
call
aam
adc
mov
orb
mov
pop
sbb
mov
fdivrl
jl
data16
movsb
adc
jno
pushl
sub
push
xchg
rcl
js
push
sbb
pop
push
xlat
mov
adc
arpl
jns
push
and
add
xchg
js
cmp
inc
cltd
adc
js
dec
push
lock
xor
cmp
inc
push
fcoms
loopne
mov
lods
xorl
add
clc
xor
rolb
inc
sbb
or
lods
inc
mov
popa
fs
push
ljmp
xor
inc
or
sbb
hlt
mov
aam
sub
xor
or
loope
and
pop
cltd
out
adc
jp
mov
aad
mov
dec
push
icebp
jl
ret
and
sbb
and
adcl
cmp
or
jl
push
sub
bound
xor
call
in
mov
cltd
adc
add
fnsave
mov
jle
add
sbb
fwait
shlb
clc
adc
scas
les
add
and
mov
call
and
bound
cwtl
std
add
fdiv
jp
testb
dec
aad
inc
je
mov
jo,pt
add
jle
smsw
movsl
pushf
frstor
loope
pusha
scas
daa
insl
insl
push
adc
imul
or
cmp
xchg
cmpl
cmp
sbb
and
rclb
push
cld
rcll
add
outsb
cmp
je
enter
sbb
pushf
adc
push
les
rol
add
clc
jbe
or
add
jmp
adc
lret
or
inc
mov
xor
add
jecxz
addl
push
aam
jp
repz
mov
cmp
aam
xor
movsb
fiaddl
pop
or
push
fiadds
add
lock
xorb
lea
mov
fdivp
mov
mov
out
add
adcb
out
jb
push
mov
sbb
inc
cmp
js
jl,pt
pop
in
mov
pusha
lea
jmp
data16
dec
aas
push
jae
push
pop
or
std
push
xchg
sub
sbb
inc
fwait
and
xchg
sbb
cmp
inc
mov
aam
xor
lahf
stos
sub
mov
int
push
sbb
mov
add
dec
xchg
loop
addl
rolb
shlb
inc
cs
adc
push
push
enter
arpl
orl
jne
sub
xor
pop
cmp
mov
pop
repnz
popf
sub
aas
cmp
jb
pushl
mov
loopne
test
pop
or
movsl
push
sbb
clc
jae
adc
inc
sub
in
jmp
adc
rolb
inc
inc
das
or
cli
mov
dec
inc
sbb
xchg
into
adc
and
sub
mul
sbb
leave
fistl
bound
jns
rorl
lods
add
adc
inc
dec
pop
xchg
lcall
adc
vphadduwd
mov
push
xchg
cmp
adc
xchg
add
jb
jmp
ret
xor
nop
adc
cmp
push
leave
test
sarb
jle
insb
and
ljmp
xchg
scas
imul
adc
insb
dec
sub
frstor
xchg
arpl
xchg
and
daa
enter
in
mov
arpl
arpl
inc
mov
push
dec
or
adc
addr16
and
mov
and
xchg
sbb
cmp
mov
outsb
xlat
and
add
lock
add
movl
enter
orb
in
inc
add
or
lods
xor
adc
or
and
or
xor
and
cwtl
add
jo
dec
xchg
jbe
leave
lcall
add
lret
and
adc
pop
mov
sbb
mov
mov
add
or
and
sbb
jnp
mov
test
dec
inc
aas
and
cmp
insb
and
and
mov
push
fsubl
in
and
cmp
adc
sbb
xchg
inc
sub
sub
cs
or
jmp
push
enter
push
xchg
sub
enter
and
sub
dec
sti
fnstenv
xor
or
xor
mov
mov
mov
xchg
hlt
xchg
xchg
lea
xor
xchg
shl
shr
fwait
jecxz
xor
or
jmp
push
jb
xor
pop
sahf
or
cmpsb
or
push
adc
movsl
sbb
adc
sbb
adc
insl
cld
xorl
mov
cmp
cmc
pop
or
adc
inc
adc
mov
xor
add
sbb
pop
adc
and
add
push
lea
add
call
mov
les
adc
fsubrl
or
pop
ds
dec
pop
inc
mov
lea
popa
jb
push
push
addb
sub
add
outsb
cs
sbb
mov
jp
push
sarb
out
add
or
xchg
iret
or
jge
addb
mov
mov
mov
xor
push
fildl
sbb
adc
orb
clc
add
push
jns
or
or
push
mov
mov
shll
stos
fadds
daa
int
out
and
lcall
lock
rcl
push
enter
loopne
adc
push
pop
and
test
lods
pop
xor
ret
add
push
xchg
outsl
or
sbbb
push
ret
mov
inc
icebp
mov
mulb
xor
cmp
sahf
in
mov
ret
fdivp
lods
pop
xor
insb
gs
mov
xor
fidivrs
stos
cmpsl
lock
mov
pop
js
ja
jne
xor
je
push
scas
andb
add
sti
sbb
inc
sbb
jnp
or
je
sbb
push
rcrb
inc
mov
outsl
mov
xor
lods
xchg
push
and
lahf
fidivrl
imul
loopne
pop
push
and
or
or
mov
cmp
mov
cmc
dec
cmp
fisubrl
mov
ds
mov
sbb
mov
pop
adc
pop
lock
push
push
rorb
and
das
das
mov
sub
jg
dec
neg
imul
jb
and
mov
les
dec
fmuls
xchg
imul
jmp
mov
movsb
add
call
dec
ds
pop
movsb
xor
mov
or
push
adc
pop
fld
dec
mov
inc
cmp
and
add
lods
add
fcmovne
pop
cmpl
cs
jmp
add
andl
lock
mov
or
clc
inc
push
lret
push
das
or
adc
or
iret
mov
fsubrl
xor
mov
pop
imul
or
mov
inc
mov
xchg
xor
ljmp
xchg
adc
loop
or
pusha
dec
les
mov
insb
and
mov
or
push
mov
fildl
push
pop
nop
lret
and
sbb
and
adc
fs
xor
js
push
insb
das
push
sub
clc
xor
sbb
adc
or
mov
pop
lock
out
adc
push
ja
rcrb
repz
std
xor
sbb
nop
iret
pushf
lea
popa
and
add
jmp
jge
adc
or
fidivl
lock
cmp
pop
mov
loopne
sub
or
call
outsl
mov
cmp
jl
cmp
jle
mov
loopne
cmp
push
jp
or
pop
and
je
add
mov
inc
bound
call
jge
mov
jns
fcompl
sbb
xor
je
cmp
je
test
pop
movsl
pusha
int
sbb
lcall
iret
and
sbb
push
push
mov
xor
sub
add
fisttpll
and
mov
das
pop
aaa
jb
ret
mov
outsl
mov
cmp
jl
verw
mov
adc
rolb
jl
call
add
imul
push
add
bound
inc
mov
rcrb
add
inc
mov
js
test
lock
push
mov
dec
and
rorb
mov
mov
outsl
cli
test
or
sbb
xor
iret
dec
mov
dec
inc
sbb
mov
lea
es
or
adc
push
cmpb
xor
sub
mov
into
loopne
mov
fimuls
dec
clc
pop
pop
mov
cmp
in
inc
sbb
sti
push
pop
or
dec
pop
jb
ret
dec
add
push
cmpb
or
inc
popf
shll
pop
mov
pop
pop
ffreep
pusha
xor
add
movq
or
mov
push
je
pushf
lea
push
test
lea
cmp
pop
push
pop
adc
add
lcall
push
mov
pop
pop
adc
cmp
push
or
pushf
adc
cmp
inc
inc
dec
inc
das
test
dec
das
notb
add
pop
adc
xchg
push
or
push
pop
pop
or
pop
pusha
fs
push
lahf
push
js
and
cmp
jecxz
jle
mov
out
pop
dec
jge
lret
xor
cmp
mov
sub
jl
cmp
jbe
sbb
aam
add
inc
inc
pop
movsl
or
adc
js
and
jo
or
inc
gs
movl
pop
mov
inc
dec
sahf
push
int3
and
pop
test
repz
add
or
pop
jno
push
inc
pop
ljmp
lret
and
nop
or
or
xor
testl
jne
nop
pop
rclb
icebp
dec
sti
xchg
ret
sbbb
inc
int3
dec
aaa
popf
outsb
jle
and
fs
inc
or
inc
push
outsl
loope
subl
sbb
inc
xchg
xlat
les
insl
lods
dec
push
imul
test
sub
pop
dec
add
sbb
and
add
lock
popf
jbe
jmp
outsl
cmovb
movsb
ret
jmp
inc
and
add
and
or
sbb
pop
fwait
adc
push
out
mov
jmp
in
lock
fucomi
mov
xor
into
test
xor
pusha
inc
adc
push
xchg
cmpsl
scas
adc
and
or
icebp
and
imulb
and
stos
fwait
inc
sub
adc
sbb
xorb
inc
xchg
movsb
push
cwtl
or
adc
pop
pop
imul
loopne
add
adc
sub
add
xchg
test
sahf
fdivl
inc
xchg
push
pop
pop
fsubl
cs
test
or
mov
clc
out
xlat
leave
or
mov
clc
and
adc
daa
je
cmp
inc
pop
adc
and
pop
push
and
inc
ljmp
loope
ret
lahf
pop
mov
adc
adc
scas
pop
bnd
xor
jle
dec
add
fs
push
jle
dec
mov
lock
jne
and
lea
lea
push
sbb
in
insb
mov
add
jne
push
repnz
or
and
mov
add
repz
sub
mov
sub
xor
push
insb
push
mov
push
addr16
fcmovnb
fmuls
imul
outsl
pop
mov
jecxz
and
push
outsb
dec
inc
leave
inc
mov
dec
fdivrl
or
aam
cmp
mov
adc
inc
push
add
jnp
orl
and
xor
xorb
xchg
jge
mov
pushf
test
dec
add
and
cs
or
jge
cmp
js
cwtl
and
sbb
fs
add
jle
into
push
mov
push
mov
add
and
mov
js
rcl
sbb
xchg
jne
addl
pop
pop
pop
movsl
pop
add
xchg
sbb
rcll
or
inc
mov
pop
push
mov
jl
cmpsl
mov
hlt
jg
mov
sub
aas
and
jb
cmp
lock
pusha
pop
or
sbb
sub
push
cmc
sub
push
js
push
dec
loop
push
mov
xor
inc
pop
aas
or
sub
in
insl
leave
repz
or
sub
lea
mov
add
adc
into
orb
test
loopne
lock
push
or
outsl
pop
jno
and
lcall
or
add
adc
add
sub
dec
jns
mov
mov
add
movsb
pushf
nop
push
rorb
in
or
aad
add
or
add
or
push
add
inc
push
inc
gs
push
icebp
bound
push
mov
xchg
dec
sahf
call
lret
pop
mov
mov
fnstsw
imul
sub
xor
or
test
gs
and
pop
or
jmp
mov
mov
unpcklps
sub
call
rolb
push
sbbb
mov
and
xor
push
and
mov
push
mov
dec
call
addb
adc
subb
inc
sub
int
or
mov
mov
push
adc
and
out
jmp
in
push
and
add
add
jnp
cmp
pushl
cmp
and
xchg
pop
dec
cmp
out
sbb
push
inc
sbb
xchg
test
mov
adc
mov
lock
pushf
gs
sub
push
es
incl
dec
xchg
inc
inc
dec
in
aas
mov
out
pop
movl
and
sub
or
pop
out
inc
inc
xor
dec
movsl
push
cmp
stos
push
dec
loope
movsl
push
pop
je
outsl
or
mov
dec
in
loopne
sbb
cmp
jns
adc
adc
jne
push
divb
sahf
lahf
out
or
jne
or
jne
or
add
js
push
cmpb
stos
fldz
lret
andl
add
cmp
dec
movsb
mov
sub
ret
inc
mov
or
sarl
mov
fadd
jg
ret
aam
arpl
test
fsubrl
test
lea
fstl
jecxz
fmuls
add
mov
jb
sbb
mov
or
xchg
xor
mov
loop
adc
cmp
cmpsl
mov
cmc
sbb
dec
jg
mov
and
cli
and
cwtl
and
jno
loop
sbb
cmc
sbb
inc
jo
fsubl
and
mov
jne
push
mov
sbb
syscall
inc
mov
loopne
push
jmp
pmaxub
movsb
ret
lcall
adc
sbb
pop
inc
sbb
bound
mov
pop
dec
add
mov
je
push
push
adc
test
mov
lret
lods
test
mov
jo
aas
push
jbe
ds
test
mov
incl
xlat
lods
adc
add
in
dec
mov
and
pop
test
push
xor
je
adc
inc
pop
pop
das
add
cmp
or
fprem1
xor
sub
in
pop
popa
add
and
rclb
or
das
xor
pop
adc
xor
sub
xor
dec
push
push
or
out
sub
test
adc
addl
out
lds
push
mov
mov
push
push
adc
jne
popa
add
mov
add
pop
pop
int3
test
inc
and
dec
cmp
fmuls
fadds
inc
lods
sub
out
mov
das
jno
jo
lahf
push
and
jno
add
sbb
cmp
fnstsw
jl
add
xor
xor
les
push
imul
movsl
rcl
jge
inc
jo
xchg
or
in
or
rclb
inc
xchg
or
dec
enter
imul
push
lret
or
cltd
nop
aaa
xor
mov
mov
paddusw
imul
cwtl
sub
mov
add
inc
stos
lret
push
test
inc
aad
xor
adc
imul
sbb
and
push
mov
and
add
pusha
push
xor
mov
adc
pop
fwait
es
shll
in
xor
ret
adc
xchg
xchg
jl
adc
test
mov
loope
adcl
out
or
addl
add
and
arpl
test
cli
or
mov
push
push
and
int
jnp
and
lcall
or
dec
sbb
jae
fisttps
cmp
in
mov
add
push
jg
adc
int
fs
sarb
cld
add
add
xor
je
xchg
push
lret
movsb
loop
or
jge
mov
lods
xlat
js
lret
jl
enter
orl
test
mov
repnz
into
punpcklwd
pop
mov
sbb
and
add
jae
sub
push
jmp
mov
push
cli
and
push
mov
pop
pusha
dec
push
push
lret
mov
add
rclb
dec
cltd
or
shrl
inc
in
inc
lods
imul
dec
adc
adc
shrb
push
dec
inc
mov
das
ret
cmp
fadds
pop
pop
mul
cmp
fmull
gs
bound
test
inc
xor
fstp
push
jmp
ljmp
sbb
call
shlb
fdivl
xorl
movsb
fwait
lods
aam
pop
add
test
fstps
getsec
out
add
fucompp
jne
xor
sub
push
icebp
cmp
push
xchg
rcr
scas
sbb
adc
mull
loope
mov
push
jmp
repz
and
dec
daa
jbe
inc
add
scas
aad
mov
mov
dec
or
mov
loopne
xchg
sbb
pop
shlb
and
mov
in
or
xor
movsb
or
and
clc
in
and
stos
aad
mov
cmp
jg
in
pop
jbe
mov
cltd
nop
add
pop
in
aas
add
inc
or
les
jne
addr16
shll
sbb
and
mov
push
stos
pop
movsl
pop
lea
push
insl
jns
pop
mov
sub
mov
lcall
mov
xchg
cmp
push
mov
rorb
clc
lgs
mov
mov
or
or
sbb
and
add
xor
shlb
mov
sub
daa
int3
xor
outsb
or
imul
mov
les
dec
lock
cmc
or
xorb
loope
pusha
enter
push
jae
outsb
sub
clc
push
cmp
pop
mov
popf
mov
sbb
push
mov
pushf
mov
enter
push
shll
cmpsb
pusha
lds
arpl
enter
jmp
and
adc
or
shlb
or
inc
hlt
dec
mov
push
sti
and
mov
adc
or
shrb
push
sub
fucomip
cmp
lret
imul
sbb
mov
mov
dec
fbld
xchg
movsl
xchg
or
rcll
push
outsb
shrb
xchg
xchg
inc
insb
push
cltd
xchg
xchg
xchg
or
sbb
dec
test
adc
add
sub
movsl
mov
xchg
inc
lret
lahf
popf
mov
xchg
push
jne
xchg
mov
push
push
nop
adc
xchg
and
cmc
inc
aam
sub
lods
int
adc
and
add
lds
popf
xchg
adc
mov
jnp
punpckhbw
mov
popf
rclb
mov
pusha
or
mov
push
popf
xor
aam
xchg
loopne
xchg
or
pop
pop
subl
jg
sbb
arpl
in
jno
push
mov
sub
sbb
mov
hlt
cli
enter
daa
sbb
push
ljmp
xor
adc
inc
add
adc
jecxz
fcompl
sbb
or
and
ret
iret
push
add
xchg
stc
mov
mov
sbb
lret
lods
xor
stos
sub
cmp
enter
adc
dec
sbb
call
sub
push
sbb
push
mov
cmp
fdivl
lcall
add
push
pop
dec
test
inc
pop
lods
roll
xchg
add
xor
out
clc
test
sti
pushl
pop
stc
popa
jne
out
push
mov
add
sbb
and
popa
sbb
cmpsl
mov
addr16
xor
shlb
add
sub
sti
inc
push
xor
cld
mov
sbb
dec
add
sub
sub
xor
or
or
cmpsl
dec
add
ret
dec
dec
je
test
shrl
xlat
mov
xchg
xor
adc
and
aaa
mov
cmp
rclb
les
or
pop
xchg
cmpsb
lret
rcr
xchg
test
add
push
sub
fwait
test
push
jecxz
movsl
inc
xchg
imul
call
jbe
sbb
add
adc
push
movb
cltd
rcrl
push
adcb
icebp
call
or
add
inc
rorb
call
mov
mov
sub
add
cmp
lds
xchg
push
fidivl
pop
idivb
sub
arpl
gs
and
xchg
mov
sbb
sub
movsb
add
jg
es
cld
adc
lret
pop
and
dec
jne
ret
mov
testb
xchg
out
inc
ret
xor
das
pusha
mov
sbb
inc
pusha
les
scas
pop
mov
add
and
fstpl
xchg
jl
sbb
icebp
sahf
daa
or
inc
pop
push
jbe
cmp
aas
inc
adc
pop
gs
inc
cwtl
sbb
and
mov
loop
aas
enter
xor
jmp
sbb
push
mov
in
xchg
lock
andl
jle
or
pushl
push
pop
sub
lods
fmuls
cmp
add
loope
addr16
push
sub
outsl
adc
and
sbb
push
shrl
add
test
mov
das
dec
sub
mov
add
test
jge
test
mov
adc
loopne
jl
mov
add
les
mov
sub
dec
nop
xorl
out
xchg
inc
sahf
pushf
pop
pop
xor
popf
sbbb
and
or
lret
enter
add
mov
insl
or
add
xchg
mov
mov
push
adc
sub
in
cmp
and
iret
lcall
pop
shlb
sub
movsb
jp
sub
sbbb
jnp
inc
and
int3
js
sbb
add
in
sub
sub
and
jb
pop
cmc
sbb
stos
inc
pop
push
lock
xchg
fadd
mov
lret
cmp
gs
das
inc
incl
add
push
ja
bound
movsw
and
lcall
and
push
jmp
add
nop
call
sub
or
and
lcall
adc
inc
push
add
sub
and
push
sbb
js
sub
xor
mov
pusha
cmp
and
and
shlb
adc
mov
pop
rdtsc
enter
pop
and
push
add
movsb
inc
cmp
out
pop
fs
in
xor
inc
xchg
lcall
xor
insb
imul
nop
sbb
outsl
imul
rorl
xor
or
fisubrl
add
out
add
xor
sbb
mov
out
pop
and
insb
pop
sbb
adc
lahf
sub
into
mov
sbbl
or
sub
add
les
mulb
ja
inc
mov
xchg
pop
in
xchg
adc
out
lods
movsb
outsl
cld
jnp
pop
rclb
rolb
push
ffreep
out
add
add
add
lock
jns
adc
mov
add
sub
mov
push
lock
mov
subl
jmp
or
addb
in
ret
rorb
inc
das
hlt
add
adc
pop
pop
sti
cmc
or
cs
jmp
lods
int3
cmp
push
sbb
lcall
shl
enter
scas
movsb
push
pop
test
stc
mov
mov
daa
or
and
mov
cs
aaa
inc
dec
fcmovnu
push
adcb
daa
lock
cs
out
pop
mov
push
dec
aaa
or
dec
inc
cld
bound
cmp
mov
sub
in
push
pop
lds
orb
mov
mov
mov
cmp
cltd
shlb
xor
pop
xchg
daa
in
inc
ja
push
mov
std
mov
cmp
ret
sti
xchg
inc
rcrb
or
jb
icebp
mov
xchg
mov
push
ljmp
xchg
or
outsb
imul
shll
xchg
add
or
jno
pop
push
xor
add
jne
jl
decl
or
div
inc
cmp
jae
mov
pop
or
mov
inc
mov
mov
push
xor
jbe
sbb
adc
icebp
stc
clc
mov
and
mov
cmp
adc
push
jmp
rcrl
shrb
stos
sub
mov
push
inc
sahf
dec
mov
lods
aam
lea
pop
jnp
jecxz
daa
add
push
call
shlb
mov
ret
pop
out
pop
lahf
lods
icebp
or
and
movsb
fimuls
push
cmp
je
cmp
int
pop
rorb
mov
ret
movsl
and
sbb
into
mov
add
mov
shl
inc
les
ljmp
into
cli
xchg
pcmpeqw
jmp
xchg
cmp
jne
add
xchg
jae
sbbb
inc
adc
dec
cld
mov
out
dec
adc
sbb
jae
push
xchg
call
cmpsb
mov
mulb
sahf
fstpl
fldl
pop
sar
fnstsw
test
je
and
add
fcoms
sub
adc
xor
arpl
inc
icebp
bound
xlat
aas
sub
sbb
mov
pop
clc
and
insl
clc
push
xor
push
sbb
fldz
out
cmp
call
sbb
and
pop
fsub
pop
fsubrp
pop
mov
pop
into
scas
or
and
shl
gs
fpatan
mov
icebp
and
xor
xchg
sub
rclb
scas
add
jae
int3
cmp
je
push
sbb
add
es
add
aam
nop
xor
rep
mov
sbb
ss
adc
lret
xor
add
dec
mov
xor
sbb
or
sub
shrl
movb
dec
stos
or
insl
ss
jns
push
imul
dec
stc
ds
add
xor
adc
cmp
sbb
mov
scas
dec
iret
loope
mov
fs
in
push
push
and
add
leave
out
in
and
sbb
xor
xor
xchg
out
adc
cmp
push
inc
fs
pop
push
dec
and
or
nop
and
in
cmp
push
shlb
push
fs
adc
out
pop
push
fs
push
push
jl
and
lret
sub
cwtl
add
outsb
or
in
fstps
add
and
pop
or
cmp
xor
sti
xor
pop
push
jecxz
sbb
mov
lret
or
and
in
lahf
cmpsl
pusha
gs
adc
xchg
adc
lret
and
or
xchg
sub
xor
es
mov
imul
sbb
xchg
sub
lods
dec
xchg
out
lahf
movsb
inc
mov
mov
mov
xor
and
mov
xor
lock
pushf
fs
andb
or
cld
dec
aaa
leave
out
punpckhbw
imul
and
adc
cmp
lret
mov
leave
lret
imul
mov
jnp
jne
and
dec
repnz
or
test
cmp
and
or
in
mov
add
push
cld
dec
shlb
add
sbb
add
repz
roll
adc
iret
repz
push
mov
stc
cmp
or
sub
jns
out
dec
pop
outsb
jg
out
sahf
out
mov
aam
iret
repz
testb
sbb
cmp
iret
repz
insl
jle
mov
mov
in
mov
cld
push
xchg
pop
add
xchg
or
loop
jmp
jecxz
or
add
mov
inc
movb
adc
scas
mov
imul
xor
mov
pop
cmpsl
or
lods
sub
xor
andl
push
mov
enter
ret
push
mov
jecxz
inc
and
sbb
ret
add
popa
jecxz
xor
movl
xor
push
cmc
inc
cmovae
add
cmp
and
pop
stc
mov
cs
sbb
push
add
cmpsb
add
pusha
mov
pop
push
lock
pop
sbb
adc
leave
push
fs
push
daa
js
movsb
ret
dec
out
sub
inc
or
iret
notb
adc
inc
leave
lret
jg
push
xor
mov
adcl
mov
aas
das
pop
imul
movsl
mov
cmpsl
in
nop
mov
js
adc
stc
jl
or
push
jno
sbb
pop
call
outsl
insl
bound
lods
push
fs
sub
jecxz
cmp
bound
cltd
addr16
add
inc
xor
inc
mov
inc
push
mov
aam
cmp
dec
push
jmp
nop
cmpsl
xchg
sub
or
mov
sbb
xor
cli
add
dec
ljmp
push
and
sbb
adc
enter
and
add
and
adc
sub
enter
jle
jnp
push
adc
sbb
xor
mov
arpl
push
push
fs
cmp
imul
arpl
push
dec
inc
dec
aas
xor
and
cs
addl
cltd
and
and
aas
pop
loope
xchg
push
push
mov
sub
int
enter
add
mov
pop
inc
out
lock
iret
fcomps
scas
rcll
sbb
aad
aaa
test
mov
adc
int
enter
add
mov
xor
or
or
nop
and
mov
push
xor
repz
repnz
sbb
cmp
in
popa
pop
or
or
mov
addl
shl
xor
dec
mov
out
popa
push
dec
aaa
or
movsl
sbb
dec
kmovw
aaa
sbb
jl
leave
lret
or
in
shlb
jge
sub
lods
jl
pop
mov
push
divb
adcb
jmp
into
nop
dec
mov
nop
mov
mov
mov
movsb
dec
popf
mov
movsb
xchg
or
jns
add
mov
les
adc
sbb
and
adc
dec
mov
adc
lret
ds
add
push
mov
mov
and
ret
les
xor
sbb
mov
in
add
xchg
call
pop
adc
adc
mov
rorl
xchg
stos
bound
jo
inc
repnz
mov
mov
sbb
adc
and
push
sub
push
adc
adc
add
xor
mov
and
mov
jne
dec
or
test
adc
add
fimull
jne
insb
or
xor
sbb
popa
push
jnp
lods
mov
orl
or
rorl
cmpsl
add
pushf
sub
add
insl
add
stos
je
insb
sbb
push
jbe
ret
pop
dec
pop
pop
pop
add
mov
sbb
lcall
stc
pop
je
adc
xor
cmpb
add
iret
add
xor
cmp
lods
sbb
pop
sub
repz
pop
pop
add
inc
movsl
daa
std
xlat
push
inc
test
call
or
pop
subl
or
add
sbb
add
ret
add
scas
movsl
push
add
or
inc
mov
xor
add
cmp
inc
or
mov
jb
adc
add
pushf
cmp
daa
push
pop
sbbb
and
into
addb
lods
and
mov
add
pop
add
test
idivb
aad
mov
mov
subl
stos
ret
movsb
sub
dec
es
add
inc
inc
in
adc
or
push
lret
push
bound
adc
lods
sub
push
and
push
inc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
xor
pop
jne
mov
sub
xchg
adc
lods
and
fcoms
pop
add
add
nop
mov
xchg
xchg
add
mov
or
mov
add
subb
sbb
add
and
popa
pop
imul
cmpsb
jmp
test
mov
push
jnp
in
push
pop
sbb
sahf
or
jb
mov
mov
jge
push
mov
mov
push
lods
pop
add
ret
mov
fisubrl
adc
sub
shll
std
mov
inc
ds
add
xor
inc
ja
ss
cmpb
je
mov
jne
in
xor
adc
jnp
or
sbb
or
cltd
and
pop
adc
ja
mov
mov
xor
xor
fisubrl
sbb
xlat
jo
mov
mov
test
cmp
idiv
dec
imul
data16
mov
or
cmpsl
sbb
pop
test
xchg
push
negb
mov
dec
add
test
nop
test
ret
add
mov
clc
test
or
stos
jl
cmp
xlat
or
popf
sub
fsub
lret
sub
shll
jne
fldl
xor
xchg
jo
aam
or
adc
subb
mov
xchg
mov
or
and
ret
push
jp
add
adc
adc
or
dec
sbb
xor
addr16
push
mov
lret
push
jmp
fucomip
sbb
setl
mov
sub
aas
and
rcr
mov
mov
lea
sti
test
push
and
inc
ficoml
arpl
sub
adc
shrl
or
xor
nop
add
push
lretw
xchg
add
std
in
nop
sbb
repz
push
js
jno
and
outsb
addl
pop
sub
mov
adc
lea
mov
jb
or
sbb
mov
sub
or
mov
mov
fisttpl
sub
pop
push
sbb
jae
shrb
lahf
add
push
dec
mov
cmp
sbb
popa
pop
iret
mov
sub
fmull
je
sbbb
push
movl
sbb
pop
sub
ljmp
out
adc
test
and
sbb
mov
jbe
jecxz
scas
sub
adc
call
sub
mov
decl
or
ret
or
adc
jl
xor
jmp
cmp
imul
adc
jle
xor
std
pop
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
sar
nop
in
fs
cltd
idiv
push
mov
pushf
lret
mov
in
ljmp
jno
cld
fldenv
cltd
cmp
std
aaa
or
stos
and
sbb
mov
add
inc
test
mov
sub
test
xchg
pusha
xchg
mov
pusha
xchg
push
mov
add
dec
call
inc
and
lret
in
in
in
and
jnp
incb
add
or
dec
mov
mov
dec
not
adc
fsubl
mov
lods
xchg
cmp
pop
sub
fimull
lock
and
dec
js
mov
bnd
inc
mov
push
les
mov
movsb
add
push
push
cmpb
push
jmp
push
sbb
inc
mov
xchg
in
mov
sbb
or
mov
imul
sbb
mov
xor
es
add
add
jl
fmull
cmp
sub
scas
movsb
push
and
mov
push
push
repz
and
xchg
movsl
rcrb
lock
pushf
adc
scas
inc
mov
cmp
jmp
in
test
js
dec
cmpb
pop
lea
sbb
repnz
mov
or
sbb
popa
jmp
in
adc
add
popa
jno
mov
mov
push
pop
mov
jge
or
jbe
pop
jns
gs
push
pop
push
in
aad
sbb
cltd
les
stc
sbb
or
or
nop
sbb
add
movsl
sbb
out
out
xor
and
xchg
xchg
in
fsubr
nop
push
fmuls
cmp
pop
fmuls
imul
in
mov
fiadds
mov
and
movsb
mov
and
gs
sarb
push
int
and
leave
enter
loop
rolb
fsubr
xor
nop
mov
xor
push
and
in
mov
lret
lret
test
jns
shrl
mov
xchg
daa
dec
in
mov
sub
arpl
loopne
jge
cltd
in
pop
xor
inc
push
fs
add
nop
dec
dec
nop
pop
rolb
inc
mov
cltd
xchg
sbbb
js
pop
xor
cmp
cmpsb
pop
je
movsl
lods
adc
dec
pushf
xchg
mov
shll
test
jl
or
push
adc
lock
cmc
cmpsl
sbb
xor
call
aam
sub
and
push
sbb
xchg
outsb
in
sub
lret
adc
ret
push
push
mov
xor
idivb
aaa
clc
push
cmp
ja
pop
add
sbb
aad
xor
push
mov
cltd
xchg
jge
push
movsb
cs
pushf
cld
call
mov
and
mov
sbb
xor
fcompl
adc
inc
movsb
fmull
add
adc
adc
inc
or
rolb
test
jge
push
lea
mov
cmp
ds
or
aam
shlb
popa
adc
lods
adc
js
add
mov
push
push
repz
and
pop
push
in
xor
int3
jne
rcrb
popa
add
push
negl
call
repnz
xor
in
push
add
xchg
lret
pop
or
sub
aam
cmp
add
pop
jmp
or
xchg
gs
mov
mov
pop
or
loope
push
jle
xor
mov
mov
mov
pop
sti
mov
aad
pop
out
xor
scas
sarb
in
addr16
add
subb
and
enter
push
shll
lods
nop
pop
into
imul
rorb
js
jo
xor
mov
xchg
add
pop
pushf
lret
mov
dec
in
inc
sub
fsts
ficoml
fisubrs
adc
sahf
inc
loope
neg
sub
aam
push
clc
ds
popf
add
and
xor
inc
xor
jo
xlat
inc
pop
loope
and
or
mov
fsubl
add
mov
add
pop
mov
mov
dec
test
jl
mov
add
movsl
mov
hlt
push
push
cmc
mov
jb
push
jmp
push
push
rolb
pop
or
sub
xchg
jg
or
outsl
push
out
imul
insb
sub
xchg
outsl
dec
push
inc
xor
pop
pop
xchg
and
push
adc
icebp
mov
add
jb
pop
sbb
and
and
push
imul
filds
imul
or
adc
mov
cmp
daa
add
pop
mov
mov
adc
inc
shlb
add
push
xchg
inc
loop
and
push
xchg
fsubrs
cmp
ja
pusha
adc
pop
mov
inc
es
adc
int
inc
xchg
mov
movsbl
and
pop
sbbb
std
decl
add
mov
hlt
xchg
mov
sbb
inc
adc
pop
movsl
push
aaa
aam
add
cs
xor
es
add
cs
jbe
fldenv
movsb
add
add
xchg
cmp
inc
xchg
inc
loopne
push
stc
gs
mov
fwait
pusha
lcall
es
or
push
sbb
or
push
jmp
jo
push
mov
jno
push
adc
sbb
lock
add
out
add
femms
jne
jle
xor
je
push
loopne
imul
sbb
jl
jne
lcall
cli
pop
push
scas
es
add
sbb
mov
add
cmp
jne
mov
mov
add
add
int3
push
movsl
xchg
cli
or
mov
testb
int3
aaa
and
arpl
sub
sti
scas
sub
xchg
dec
aam
pop
in
fmull
sub
cltd
jae
dec
xor
inc
dec
prefetcht0
lods
pop
shrb
pusha
fsubrs
xchg
or
jno
xor
sub
arpl
or
inc
mov
add
add
dec
shrb
shrl
jmp
nop
cmp
push
add
dec
in
shrb
xor
inc
xor
test
inc
xchg
mov
ss
sub
sub
adc
lcall
mov
shl
pop
repnz
mov
repnz
jno
mov
rorb
push
movsb
push
add
js
push
cli
addr16
andl
stc
pop
movsb
pop
adc
push
ss
test
sbb
movsb
in
adc
cmpsl
push
movsb
fucomip
dec
adc
and
rolb
sub
mov
inc
cmp
std
add
sti
in
add
pusha
or
jl
jmp
das
std
push
dec
or
mov
and
or
add
ret
xchg
popa
test
jo
jo
and
jns
popa
je
xchg
push
jmp
and
mov
sub
jne
test
xchg
fdivs
cmp
jmp
daa
std
cmp
pop
push
test
iret
mov
shlb
jae
shrb
push
scas
pop
insb
cmp
pop
cmp
in
xchg
fsts
fisttpll
loope
cmp
mov
cmp
es
sub
cmp
adc
xchg
repnz
adc
mov
mov
and
and
inc
adc
sbb
jne
adc
nop
adc
pop
push
lds
dec
loopne
lods
dec
add
add
add
xchg
add
es
mov
mov
cld
xchg
dec
js
js
and
sbb
fmul
xchg
or
imul
adc
mov
fadds
filds
clc
clc
jl
cmp
jne
add
add
pop
cmpsb
mov
inc
insl
inc
cmp
push
iret
pop
mov
cmpsl
jo
cmp
sub
xchg
repnz
mov
mov
repnz
sbb
and
inc
mov
insb
pop
adc
in
popa
inc
ds
sbb
and
lea
cmc
outsb
inc
add
shr
adc
jo
xchg
test
sbb
in
mov
add
loop
les
loope
cmp
add
in
ss
sbb
in
inc
inc
cmp
add
mov
jecxz
push
adc
add
addb
inc
movsb
loopne
mov
cmp
test
xor
xchg
pusha
repnz
fcoml
mov
mov
popa
roll
dec
fwait
nop
jmp
sub
xor
leave
and
fiaddl
and
js
es
insb
mov
inc
rcll
ret
adc
shrl
adc
sbb
mov
or
adc
xor
mov
fdivp
icebp
out
push
mov
add
adc
js
xor
adc
pushf
dec
and
test
dec
enter
iret
mov
adcl
cltd
or
mov
and
mov
xchg
add
and
mov
ds
das
mov
add
cmp
pop
push
dec
lods
mov
and
das
add
or
cmp
mov
xor
and
push
adc
sub
dec
lea
cmp
mov
cwtl
mov
ficoml
fs
sub
or
loop
add
lea
and
mov
sbb
mov
jne
cmp
mov
mov
mov
adc
fs
or
test
fdivrl
divb
push
push
enter
sbb
jmp
jo
jae
cmp
xor
pop
dec
in
add
xor
mov
in
push
push
or
daa
push
rcrl
mov
sub
mov
xor
sub
divl
add
inc
inc
dec
push
push
mov
ljmp
data16
js
or
mov
in
pop
arpl
cmp
add
mov
mov
sbb
jne
mov
push
xchg
sbb
add
push
cltd
jb
or
mov
pop
cli
fs
movsb
out
std
xor
mov
cmp
xchg
and
sub
mov
adc
push
arpl
dec
ret
loope
in
dec
cmp
in
and
inc
adcl
divl
pusha
testb
jae
mov
sbb
sar
hlt
pop
mov
add
jmp
xor
pop
call
popf
stos
std
dec
pop
mov
leave
out
sti
enter
jne
aas
gs
cmp
fdivl
cwtl
loope
rorl
shl
hlt
and
int
or
icebp
add
adc
pusha
sub
add
cmp
ret
fimull
loopne
aad
mov
pop
mov
push
pushf
leave
or
add
add
inc
adc
icebp
sub
adc
aad
sbb
pop
mov
add
mov
add
push
jge
outsl
dec
mov
outsb
es
popa
jge
push
push
jmp
xor
add
int3
sbb
push
pop
push
cmp
cmpsl
dec
pop
mov
ret
shlb
shrl
lret
xor
sub
rcl
adc
inc
pusha
push
dec
add
movsb
nop
add
add
loopne
push
mov
dec
sub
addl
insb
or
cmp
push
add
les
push
cmp
sbb
and
dec
rclb
pop
jl
or
push
xor
fisttpll
nop
xchg
mov
mov
scas
xor
or
jo
mov
aas
add
sbb
test
ja
into
and
ds
and
cmp
inc
adc
je
dec
add
icebp
xorb
inc
test
sbb
mov
je
pop
or
fs
push
gs
test
dec
add
pop
bound
adc
and
or
fadd
subb
sbb
nop
dec
pop
dec
sar
rolb
nop
and
cmp
mov
adc
fimull
push
dec
and
dec
cmpsb
push
lods
push
add
cmp
dec
sbb
fstps
xor
push
ja
jns
cltd
sbb
int
daa
add
orl
cmp
pusha
pop
add
mov
ret
jne
call
jne
mov
movsb
mov
and
movsl
push
fbstp
mov
push
jle
int
sub
mov
into
cmp
xor
movsl
sub
femms
test
and
add
pop
outsb
lret
push
cmpb
cmpb
int
push
push
push
mov
movsbl
or
mov
dec
xchg
cmp
add
jns
inc
mov
sbb
repnz
jmp
inc
push
dec
inc
stos
shll
add
sub
or
add
cmpsb
fwait
sbb
xor
or
add
push
cmp
mov
push
lods
leave
add
mov
addb
addl
or
inc
or
jmp
or
push
test
pop
xchg
and
mov
sub
leave
nop
fsubrl
inc
insl
add
dec
adc
rolb
out
in
nop
or
mov
fisubs
jo
movsl
cmp
shlb
dec
lods
xor
push
orb
adc
ret
adc
or
shrl
adc
gs
jmp
loopne
push
xor
sbb
mov
xchg
repz
sub
lods
add
mov
pop
arpl
lods
clc
punpckhbw
add
xchg
and
adc
out
call
sbb
dec
push
daa
popf
ss
sub
add
push
add
inc
mov
or
inc
dec
sub
xchg
add
cmp
add
rcll
imul
adc
mov
sub
and
push
pop
xchg
in
cmc
or
xor
rorb
push
xchg
fdivs
loop
jmp
leave
shll
pop
adc
popf
ret
je
push
jo
mov
dec
das
imul
mov
in
xchg
ficoms
or
scas
fdivrl
mov
pop
or
aaa
pop
inc
js
and
sub
inc
test
xchg
adc
push
arpl
popf
cmp
lock
in
add
and
sub
fs
and
sbb
and
or
cmp
or
xchg
lock
pop
xor
cmp
add
xor
pop
adc
scas
add
enter
adc
sub
and
dec
or
popf
pop
shll
and
stos
sbb
jns
jnp
fmull
mov
and
bound
test
or
cwtl
add
fcom
es
and
jmp
mov
mov
mov
jns
xchg
add
sub
cmc
enter
mov
sbb
stos
add
sub
int
dec
fmuls
add
jne
mov
dec
mov
sub
divl
push
shrb
pop
and
dec
cmpsb
pop
lret
in
sub
add
mov
adc
mov
lret
mov
mov
jl
jns
daa
mov
push
add
lcall
fwait
push
lods
add
sub
lock
xor
add
mov
adc
in
push
bound
dec
andb
mov
dec
push
cmp
adc
add
pop
sub
inc
xchg
dec
dec
js
mov
jo
adcl
psllw
je
roll
mov
pop
sub
stc
nop
addl
cmp
or
add
xor
mov
inc
movsb
adc
add
fbld
xchg
subb
and
fldcw
inc
sub
clc
and
in
pusha
or
sbb
add
into
push
dec
add
sbb
dec
lods
les
and
mov
push
loope
push
mov
cltd
cmp
push
xchg
xchg
or
dec
roll
add
mov
xor
add
cmp
xchg
xor
jmp
mov
push
inc
add
mov
lods
cld
or
ljmp
lahf
inc
cmp
das
aaa
sbb
mov
popf
ss
add
mov
js
sbb
push
bound
adc
pusha
xor
dec
sarl
inc
jne
xor
xor
sbb
push
dec
xor
sbb
jbe
push
mov
mov
push
add
movb
outsl
jne
gs
cmp
pop
fsts
scas
fstps
divl
push
movsb
rol
push
or
loope
or
shl
mov
inc
push
mov
scas
xor
push
je
sub
or
ds
dec
cmp
stc
pusha
xrelease
clc
mov
pmaxub
inc
inc
ja
or
sbb
mov
mov
push
jbe
add
sbb
and
int3
into
add
mov
movsl
leave
xchg
push
or
lock
dec
pop
psubw
std
adc
nop
shl
inc
cmp
out
orl
jmp
clc
sbb
and
add
in
stos
lea
cmp
cwtl
js
push
mov
cmpl
cld
test
jle
movsb
enter
xchg
into
clc
cmp
stos
inc
cmp
jb
ljmp
push
outsb
clc
cmpsl
xchg
cmp
pop
repz
les
push
adc
ret
dec
mov
inc
push
ljmp
test
mov
push
ret
or
xchg
sti
adc
mulps
inc
lds
adc
fisubrl
push
pop
iret
pop
mov
inc
fs
jle
mov
lea
add
inc
sub
test
mov
rcrb
int3
jle
pop
das
dec
test
xchg
js
mov
bnd
pusha
add
cmp
or
ja
adc
or
sub
mov
lds
push
jnp
fmuls
out
sbb
and
rolb
pop
pushf
adc
or
mov
and
decb
dec
fdivs
inc
push
dec
inc
sub
adc
or
fsts
cmp
cld
pop
inc
inc
jo
xchg
test
les
adc
aad
rcl
pop
dec
sti
ficoms
xor
pop
mov
xchg
je
mov
cmp
subl
push
and
sub
xchg
inc
lahf
test
cmp
ss
fwait
push
cmpsl
jo
mov
mov
and
insb
insl
inc
lahf
add
pop
vucomisd
push
loope
loopne
inc
test
push
xchg
mov
std
jae
cmp
ret
or
shr
ds
test
adc
lea
pop
sbb
xchg
mov
or
in
adc
add
pop
fnstcw
push
mov
out
sub
lret
test
mov
cmp
js
and
add
fidivrs
push
pop
js
xor
add
bound
or
test
or
rclb
std
inc
movl
faddl
aas
scas
cmpl
pushl
imul
jmp
popa
fwait
sbb
test
cmpsl
jp
js
jno
popf
inc
hlt
and
adcl
add
push
loop
clc
sbb
lea
mov
arpl
add
stc
fisubrl
sbb
and
lea
mov
add
inc
push
adc
sub
insb
arpl
das
lret
sbbl
pop
xchg
pop
stos
popa
fsubrl
or
fsubs
or
xchg
ss
faddl
mov
addr16
dec
xchg
cmp
cltd
pusha
mov
or
pop
inc
bound
push
dec
push
fsubr
or
inc
pop
jp
ret
icebp
mov
ret
popf
ss
sub
cmp
jb
loopne
imul
pop
mov
mov
sub
push
mov
lcall
sbb
imul
fidivs
add
pop
sbb
dec
lods
dec
cmpl
hlt
call
popa
aas
lret
adc
enter
inc
stos
cwtl
sub
and
add
pop
jle
outsb
inc
cmp
xor
jg
xchg
xchg
cmp
mov
adc
jb
or
jge
adc
push
sbb
sub
sub
test
dec
adc
mov
and
dec
lahf
dec
push
pushf
and
jb
dec
mov
aam
cmp
js
push
xchg
mov
push
adc
or
xor
mov
outsb
movsb
sti
xchg
xchg
sub
mov
xor
out
in
cmp
pop
mov
and
pop
dec
adcb
out
xorb
xchg
jecxz
push
jge
xor
add
or
mov
pop
push
enter
push
push
inc
dec
push
xchg
pop
or
xchg
mov
jo
popf
shrb
mov
sbb
sbb
push
and
sbb
sbb
jno
xchg
push
add
and
pushl
xor
xchg
call
add
out
fldenv
dec
adc
xor
or
fwait
popa
popa
adc
in
aam
add
xchg
adc
test
fmull
test
sub
sub
dec
or
xor
loopne
call
sbb
xor
cmp
hlt
das
movzbl
xchg
lret
or
in
in
jmp
push
test
mov
out
pop
mov
in
scas
fsubrl
adc
mov
mov
and
lods
push
enter
adc
xchg
inc
add
sub
push
sub
ds
push
pop
push
out
test
out
or
cltd
push
jmp
add
mov
inc
shll
stc
add
dec
or
dec
mov
push
filds
add
int3
sbb
ret
pop
jb
jmp
push
pop
sarb
fcompl
xchg
adcl
movb
lea
cmpsb
or
movl
xor
mov
add
or
sub
cmp
dec
dec
ficomps
in
int3
add
bound
pop
dec
add
push
sub
es
dec
insl
inc
sbb
and
pop
jne
add
rorb
sub
push
and
jmp
jne
push
sbb
out
jle
or
mov
testb
daa
nop
jne
xor
andl
mov
add
add
sbb
in
and
pop
jge
push
jne
mov
adc
pop
int3
orl
adc
adc
push
push
xor
rcll
sbb
cmp
arpl
adc
rolb
subb
test
out
jbe
out
mov
int3
out
enter
xor
je
sarl
adc
jb
adc
mov
jb
cmpsb
dec
aam
out
loopne
pop
sbb
repnz
cmp
push
mov
hlt
xchg
jbe
sub
lahf
dec
into
jae
add
aas
pop
cmpsb
xor
sub
jo
xor
out
les
dec
mov
mov
push
int3
push
and
dec
xorl
jmp
inc
hlt
push
or
push
aam
call
xor
and
mov
or
rolb
fs
in
adcl
xor
in
std
ss
and
fdivrl
insb
adc
int3
xor
movsl
push
push
fbld
movsl
and
mov
adc
adc
test
inc
out
inc
push
push
ret
mov
cli
mov
add
mov
daa
mov
push
jmp
test
repz
and
sub
adc
rolb
pusha
mov
test
outsb
subl
xchg
je
add
jns
aaa
inc
adc
xlat
out
ja
and
mov
jnp
xchg
or
sub
mov
or
repz
movsb
cli
mull
lock
clc
pop
mov
test
mov
pop
or
test
loop
cltd
mov
jmp
dec
add
sti
test
add
stc
dec
mov
fmull
mov
sub
jmp
xorb
daa
sub
pavgb
jne
into
xchg
push
push
sbb
data16
aas
addb
lods
pusha
jne
rcrb
test
loopne
jne
imul
push
lea
adc
pushf
push
sbb
sbb
sub
add
add
scas
neg
pop
sbb
inc
ljmp
adc
inc
inc
or
push
and
cltd
popa
sub
cmp
repz
sbb
popa
jmp
add
shlb
out
popa
adc
call
and
and
jnp
sub
sarb
sub
in
pop
jmp
sub
mov
out
xorb
mov
sub
sub
mov
dec
or
rcrl
sbb
push
sahf
test
sbb
pushf
sbb
push
pop
mov
sbb
fimull
lea
sub
xor
orl
push
sub
dec
pop
push
sbb
jo
adc
and
adc
mov
es
jmp
ljmp
inc
add
subl
mov
jne
push
and
jmp
add
scas
cld
and
mov
push
inc
dec
cmp
pop
idivb
mov
aaa
sbbl
sar
repz
xor
stos
pop
out
pop
arpl
xorb
ret
sbb
ja
enter
push
pop
and
push
push
lods
cld
popf
ja
mov
dec
push
mov
mov
std
int
push
push
push
push
push
call
cmp
inc
add
sub
mov
mov
gs
scas
mov
loope
adc
rcrb
inc
fsubrp
loop
or
jg
std
cmp
jae
je
lea
inc
insl
adc
adcb
out
gs
lret
push
pop
cmp
es
add
outsl
push
addb
mov
stc
popaw
pusha
xor
js
in
cmc
dec
call
inc
or
mov
xchg
mov
add
rcl
ret
ljmp
sbb
inc
or
push
sbb
movsl
push
fs
jmp
mov
jne
jmp
decb
sub
sbb
cwtl
pop
mov
insl
push
push
push
nop
addb
repnz
inc
mov
fwait
push
outsb
xchg
int3
mov
incb
pop
shr
push
push
and
fidivrl
mov
in
mov
push
jae
push
push
push
vmread
xchg
subl
xchg
mov
nop
mov
dec
push
or
insl
sarb
push
aad
fmul
pop
ror
jnp
dec
lcall
xor
cli
mov
mov
inc
mov
inc
loopne
stc
lock
fnstcw
mov
mov
adc
mov
ljmp
test
jns
cmp
mov
adc
push
in
inc
repz
lret
sub
or
push
mov
mov
ljmp
sbb
cmp
cmpsl
popf
mov
dec
jg
lahf
in
add
add
inc
inc
jg
test
mov
lds
inc
cmp
rcr
jo
mov
movb
or
pop
aas
xchg
cmp
ss
mov
mov
mov
mov
xor
jmp
std
adc
add
cmp
xchg
push
cld
mov
or
sbb
add
jae
push
lcall
mov
mov
movsl
movsw
push
cld
movsb
mov
or
test
mov
mov
shr
mov
inc
mov
adc
cli
repnz
ffreep
subb
jmp
lea
or
jg
push
add
mov
adc
add
pop
lret
add
movsbl
xor
jp
xor
test
push
push
fists
adc
and
push
cld
inc
cwtl
jnp
je
push
push
jo
dec
test
pop
sub
pop
push
mulb
mov
pop
xor
rcrl
push
xchg
jne
outsl
imul
inc
add
mov
or
subl
or
fs
add
mov
sub
cmp
jl
adc
sbb
mov
shlb
lahf
xor
mov
sbb
mov
push
mov
loope
cld
cmc
sbb
stos
adc
push
add
adc
jl
inc
test
lock
js
mov
sahf
dec
ja
pop
xchg
inc
pop
nop
mov
or
fildl
sbbl
leave
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
ljmp
adc
fimull
push
adc
mov
push
sbb
mov
fiaddl
rcll
jl
out
repz
add
iret
adc
and
repz
cmp
inc
dec
repz
repz
push
push
pop
popa
iret
repz
imul
jg
iret
repz
mov
scas
repz
or
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
jb
or
or
lds
jle
pushf
jge
inc
movb
das
and
xor
cmp
jle
js
out
inc
mov
cmp
test
test
inc
inc
int3
lea
push
pop
ret
mov
jae
pop
push
push
mov
sbb
pop
movsb
xchg
repnz
or
call
sbb
sub
cld
cs
mov
xchg
pusha
inc
dec
push
inc
cmp
jbe
bound
dec
aaa
rolb
xchg
das
call
scas
aad
adc
orb
ja
movsb
push
jmp
inc
push
push
dec
xchg
shlb
pop
pop
popf
jne
xchg
adc
mov
jb
fnstsw
shrb
inc
mov
adc
fwait
push
add
adc
dec
rclb
je
into
sub
and
hlt
inc
dec
sbb
sub
dec
push
add
jbe
clc
add
push
jbe
pop
out
sbb
sub
in
rcll
lret
test
push
adc
je
rolb
or
push
or
cmp
lods
fs
or
sbb
test
mov
lret
mov
fnsave
sbb
add
add
add
or
jmp
mov
mov
add
in
pop
xchg
test
punpckhdq
das
push
or
aaa
or
adc
mov
xchg
lahf
jo
mov
xchg
mov
jmp
scas
lock
pop
pop
add
mov
call
jbe
push
xor
shll
adc
movsb
aam
fnstsw
xor
dec
jp
push
ss
ss
sarl
adc
xlat
andl
stos
dec
dec
add
test
sahf
jae
or
push
inc
pop
add
and
loopne
or
popf
mov
mov
sub
mov
xor
repnz
jmp
mov
jne
mov
sbb
or
aad
inc
push
dec
movhps
jbe
ljmp
sub
sbb
aad
adc
mov
loopne
sub
add
pop
and
sbb
testl
xor
xchg
je
dec
sahf
and
mov
push
fistl
dec
je
fstpt
xor
clc
sbb
push
xor
xor
cmp
sub
adc
rclb
or
or
add
sub
cwtl
or
or
or
cmp
movsl
and
mov
cmp
xchg
mov
insl
jns
adc
loopne
xor
movsl
add
stos
pop
lds
and
dec
push
pusha
or
dec
ret
jmp
dec
ds
mov
mov
mov
cmpsb
push
xchg
add
mov
and
xor
or
inc
call
mov
and
push
lock
mov
mov
push
or
adc
lcall
jge
ret
sub
in
pop
test
enter
add
xor
xor
pop
and
or
sbb
in
push
lock
rcrb
push
cmpsl
mov
jge
or
push
inc
daa
add
sarb
mov
add
jl
mov
add
mov
xchg
test
push
jmp
add
push
xlat
dec
nop
imul
int3
test
jb
aam
mov
or
inc
enter
fdivs
pop
inc
scas
add
add
adcb
xchg
bound
sub
pop
push
sub
push
push
lods
inc
xorb
rcrl
sub
mov
cmp
lret
xor
mov
mov
daa
sbb
pushl
or
addr16
hlt
popf
mov
or
subl
cmp
dec
mov
jno
add
and
inc
loopne
jmp
xor
pop
or
xchg
mov
loopne
mov
shr
addl
outsb
leave
adc
sbb
sub
xchg
xchg
repnz
pop
faddl
adc
or
repz
cmc
pop
inc
push
sub
push
ret
or
enter
fdivl
sbb
adc
xchg
inc
cmp
sbb
loopne
cmp
nop
and
insl
add
inc
arpl
mov
fcomps
fistl
add
mov
sbb
pop
imul
cld
sub
cmp
out
add
es
in
pusha
cmp
test
scas
push
xlat
jne
inc
clc
or
mov
mov
and
push
or
cmp
mov
movsl
xorl
movsb
lret
sbb
mov
jne
rolb
push
sbb
pop
or
jne
push
mov
mov
mov
sub
adc
push
movsb
jmp
in
imul
or
cmp
push
push
cmc
pop
dec
sub
in
loope
adc
shl
inc
add
fs
or
je
movsb
js
and
in
jl
addb
movsb
cmp
pop
mov
test
pop
pushf
xchg
inc
push
mov
pusha
nop
icebp
nop
add
je
repnz
inc
mov
mov
and
inc
jbe
adc
mov
ffree
pop
enter
cltd
movsb
rcl
aam
faddl
add
dec
loopne
decl
pop
inc
les
into
xor
or
or
adc
rolb
or
xchg
add
lea
add
loopne
push
mov
loope
ret
mov
push
mov
sub
in
sub
or
dec
push
xor
mov
cmp
jl
sub
int3
inc
dec
into
lea
cld
push
cmp
je
dec
adc
mov
push
or
adcl
and
fs
push
and
outsb
std
jmp
cli
loopne
lods
sub
inc
and
pop
jne
adc
test
fsubp
push
pop
jl
jmp
out
push
jge
loope
iret
xchg
sbb
adc
sahf
mov
lods
mov
mov
sti
and
and
cmp
and
inc
mov
add
sbb
sbb
ror
lock
mov
lock
and
daa
insb
pop
jo
insb
je
js
sub
mov
sbb
push
push
mov
imul
sub
or
sub
lods
sub
jns
jmp
adc
addb
mov
cmp
jge
inc
push
hlt
cmp
jl
push
mov
jle
ret
loopne
loopne
add
lock
jnp
inc
scas
jne
cmp
movsb
adc
ret
orl
mov
incb
mov
ret
push
pop
add
push
sub
ds
jne
inc
add
push
pop
movsb
lock
add
xor
dec
xor
jle
je
cmp
ret
das
sbb
mov
jo
shll
or
pusha
lahf
or
dec
push
pop
mov
orb
cmp
iret
inc
push
sbb
call
ret
cwtl
add
dec
rorl
xchg
nop
rcrb
cld
and
scas
jne
dec
sub
or
and
insb
cltd
mov
gs
or
insl
arpl
je
inc
ret
and
pop
or
js
pop
or
mov
pop
icebp
mov
loopne
dec
loope
jmp
and
outsl
sbb
push
pop
rcll
pusha
xchg
inc
bound
xchg
out
cmp
jns
dec
movsl
adc
add
ret
fucomi
jge
cltd
mov
mov
sbb
repnz
mov
add
sub
push
iret
pop
out
in
pop
sbb
icebp
or
cmpsl
cmp
je
xor
jne
push
jge
mov
popa
push
clc
jmp
nop
loopne
insb
adc
push
inc
insb
and
adc
mov
dec
movsl
sbb
mov
popf
lods
inc
les
push
and
mov
lods
push
test
sarb
cld
lods
or
nop
imul
pushf
mov
inc
lret
int3
xchg
mov
inc
sbb
scas
or
mov
jmp
and
push
and
inc
shrb
xlat
aaa
lods
pop
fsubr
fldl
leave
test
gs
shll
aad
pusha
xchg
cmp
sbbb
mov
or
xchg
pop
or
adc
leave
shrl
sbbl
jb
mov
or
mov
push
xor
push
movsb
jno
jo
push
xchg
mov
arpl
jmp
flds
outsl
add
cltd
pop
xchg
loope
inc
or
mov
iret
icebp
sub
loopne
lea
push
and
pushl
push
or
dec
pusha
xchg
imul
das
loope
xor
push
inc
sbb
cmp
mov
rorb
mov
clc
cltd
xchg
mov
jge
sbb
mov
decl
mov
es
lds
adc
pop
into
or
inc
xchg
fwait
addr16
popl
add
sub
cmp
test
cmpsb
mov
pop
arpl
xchg
xchg
and
add
mov
popa
ret
inc
xor
into
push
popa
pop
and
fwait
jmp
jo
sbb
add
dec
xchg
pop
jne
cli
jmp
popf
inc
aam
jl
or
je
imul
cmp
add
lahf
and
sub
stc
sbb
aam
cs
xor
add
cli
popf
or
sub
ss
mov
lods
sub
dec
js
add
iret
jmp
mov
add
xor
pop
push
xchg
rol
jg
push
sbb
add
xor
inc
shrb
lea
out
scas
mov
or
call
rol
sub
shrb
stos
push
ja
mov
mov
negl
sbb
push
jle
lock
in
sub
push
mov
add
rcrl
ret
inc
jmp
inc
mov
in
ret
sbb
or
outsb
mov
addb
fstps
inc
into
mov
add
addb
cld
xor
daa
imul
and
cmp
sub
or
push
inc
sub
jge
push
cmp
test
add
adc
mov
pop
or
sub
das
lea
lods
xor
push
push
in
jle
xor
and
cmp
mov
lcall
and
scas
aad
jl
loope
lock
sbb
mov
dec
cs
cmp
fstps
push
xchg
pop
aas
push
pop
fbld
xor
push
cmp
in
dec
inc
mov
les
add
lcall
add
adc
fnstcw
cmp
fcomp
fnstsw
push
arpl
sub
fsubr
pop
faddp
cmp
push
ds
push
pop
and
pop
cmp
dec
enter
push
lcall
xor
inc
imul
ret
pop
repnz
xchg
hlt
xlat
hlt
pop
hlt
repnz
pop
jl
cmp
orl
jne
hlt
or
ss
in
push
loop
mov
jne
mov
xchg
dec
and
dec
add
leave
inc
test
mov
push
icebp
das
pop
fwait
jo
mov
test
mov
shr
pop
movl
pop
mov
call
add
jnp
rcr
cmp
cmp
or
sahf
and
xchg
dec
mov
lea
push
test
jne
cmp
pop
xor
mov
mov
rcrb
adc
mov
cs
mov
sbb
fadds
pop
adc
sbb
sbb
push
in
out
jmp
adc
adc
popa
test
xor
sub
scas
and
or
mov
dec
sti
xor
fimuls
enter
jge
rcll
int3
loopne
shr
dec
mov
sbb
mov
js
shr
clc
pop
call
adc
jmp
jle
push
pop
shll
cmp
adc
bound
sahf
pcmpeqd
sarb
inc
pop
add
cmc
xor
mov
les
xor
ss
jp
push
sbb
test
add
mov
pop
pop
fmul
dec
insl
sub
dec
cli
push
aam
cmp
insl
push
bound
add
out
and
jne
xchg
mov
fistpl
or
push
dec
sbb
push
push
xchg
push
cmc
and
or
push
inc
cmp
cmpl
or
test
push
mov
and
icebp
jecxz
mov
dec
fsts
sti
sbbb
mov
pusha
sub
add
mov
sbbb
mov
jo
add
aaa
add
xor
mulb
test
jmp
xchg
sbb
insb
pop
inc
mov
je
add
push
jbe
testb
pop
jb
js
sahf
push
adc
or
loop
xchg
icebp
lock
dec
repnz
add
mov
adc
dec
loope
fcomps
sbb
sbb
pop
inc
test
aaa
cmp
inc
inc
and
add
sbb
das
or
mov
subb
div
movsb
jno
or
pop
mov
sub
mov
sub
mov
dec
mov
repnz
jae
js
and
push
insb
xor
xchg
or
push
add
mov
movsb
dec
cmp
outsb
sbb
pusha
or
push
and
loopne
add
mov
pop
pusha
mov
pop
cvtps2pd
adc
lret
jge
cmp
cmp
cwtl
out
push
rorl
xor
sarl
mov
xchg
rcrl
sub
dec
adc
sub
sub
fiadds
lods
daa
mov
cmp
shlb
mov
xlat
add
in
aam
in
popl
or
out
pop
sbb
pop
xor
push
clc
cs
jmp
mull
or
aas
cmpb
cwtl
in
push
sbb
add
or
mov
mov
sarb
insl
sub
aam
add
fsubs
xchg
mov
lods
xorb
movsl
movsl
sub
addl
push
mov
sub
leave
sub
and
xchg
cmp
mov
cmp
jb
test
and
scas
inc
lea
outsb
popa
imul
push
pop
jbe
push
xor
test
xchg
push
push
mov
pop
add
mov
add
inc
sbb
mov
mov
sbb
pop
outsl
push
cmpsl
aam
aaa
jnp
push
push
dec
test
mov
pop
ret
test
sbb
ret
dec
inc
test
or
inc
jp
jecxz
add
faddl
dec
xchg
cmc
mov
inc
jo
shrl
cmpsl
mov
ss
loop
and
add
adc
inc
cld
push
xor
inc
loop
add
pop
add
ret
pusha
push
call
in
or
sbb
lret
stos
mov
clc
xchg
and
popa
adc
pop
push
stos
in
dec
ret
and
outsb
and
add
push
arpl
shlb
test
jl
sahf
pop
inc
pop
mov
arpl
movsb
pop
in
call
mov
rcll
or
push
call
add
pop
daa
enter
int
lock
ret
gs
sbbb
ljmp
xchg
stos
mov
mov
test
ss
stos
add
lock
adc
xchg
cmp
jb
push
xchg
add
adc
xor
add
inc
faddl
jp
pop
sbb
js
add
test
nop
push
mov
sub
mov
mov
push
mov
insb
subb
mov
or
fs
gs
xchg
xchg
add
int3
lea
test
bound
ret
xchg
inc
dec
add
add
xlat
and
pop
dec
out
mov
jge
inc
sub
add
daa
adc
jecxz
push
or
inc
nop
xchg
mov
faddl
adc
xor
ret
mov
pop
nop
or
cmp
or
daa
cmp
nop
or
add
lahf
mov
push
add
leave
push
cmp
sub
and
scas
adc
in
inc
cwtl
fldcw
in
arpl
test
imul
aam
jbe
mov
push
sbb
mov
adc
cmpl
inc
mov
mov
push
push
push
mov
dec
enter
xchg
push
lock
cmpsb
mov
jge
dec
pop
adc
movsb
shll
inc
sbb
and
addl
or
jo
xchg
out
lods
cwtl
xchg
mov
mov
pop
rep
add
add
jecxz
ficompl
push
add
inc
ret
push
push
push
mov
push
adc
push
or
je
push
sub
inc
sub
cmpsl
xchg
out
cmpb
or
ret
mov
sub
xor
inc
sbb
xchg
adcl
shlb
cmp
lock
xor
pop
push
and
cmp
fneni(8087
push
imul
xchg
outsl
and
add
add
adc
sbb
insb
lcall
inc
sarl
dec
bound
xor
sbb
xchg
pushf
mov
mov
inc
fisttpl
pusha
mov
xchg
adc
jns
ja
or
push
pop
xchg
pop
lret
rorl
xchg
clc
push
dec
ret
push
push
xchg
mov
mov
js
adc
rorb
outsb
and
lret
pop
jmp
mov
outsb
push
dec
sbb
mov
or
js
xor
jecxz
inc
cmpsl
inc
es
add
cmp
repnz
sbb
repnz
add
mov
push
xchg
pop
dec
jg
add
inc
push
stc
inc
jae
nop
pusha
les
or
jp
xchg
lods
jl
mov
mov
lret
sub
push
xor
in
or
mov
and
xchg
mov
sbb
jge
or
repnz
sahf
xchg
add
mov
sbb
add
mov
mov
xor
mov
int3
dec
add
jge
push
imul
testl
fsubrs
fdivrl
inc
push
or
ret
call
ds
or
clc
sbb
je
xchg
sub
push
mov
push
incl
inc
jne
xchg
jo
xchg
push
push
js
or
cmp
int3
and
cltd
movsl
loopne
inc
sub
repz
sub
test
outsl
pop
mov
test
push
dec
or
stc
mov
es
push
adc
add
lret
add
rorb
popf
add
push
imul
pop
or
sub
jo
mov
jnp
shufps
and
cld
xor
jecxz
pusha
xchg
push
ret
xchg
cmp
sbb
inc
pop
mov
sbb
sbb
outsb
pusha
cmpsl
push
lret
jecxz
or
cmpsb
pop
xor
cmc
inc
frstor
stc
mov
cmpsl
scas
jmp
gs
sbb
adc
add
add
dec
push
xor
and
nop
pusha
pop
jo
mov
rcll
inc
inc
out
pop
imul
push
sub
add
xorb
or
ret
mov
in
mov
push
mov
inc
dec
loop
or
pushaw
xor
pop
js
popa
sarb
add
fistpll
sahf
rcrb
pop
xor
test
add
xor
jo
xor
je
jno
mov
imul
sub
fidivrs
int3
mov
jl
sub
aad
sub
addr16
push
pop
iret
push
dec
pop
jle
push
pop
lahf
dec
loop
dec
push
add
in
or
or
loopne
out
aad
push
adc
mov
push
jb
mov
add
call
jle
pop
dec
mov
fmuls
xchg
nop
imul
and
fcoml
mov
push
push
push
cmpl
cmp
arpl
insl
push
inc
push
inc
imul
sbb
dec
inc
adc
mov
mov
movsl
cmpsl
andb
sub
setb
je
or
imul
aam
out
xchg
cmp
test
test
lcall
add
inc
daa
hlt
dec
stos
jne
loopne
adc
fs
push
push
enter
dec
or
add
sbb
inc
add
lods
inc
add
nop
add
call
pop
xchg
push
or
les
clc
pop
nop
jp
ret
pusha
mov
cli
mov
adc
jmp
xor
or
sub
insl
andl
mov
adc
dec
pop
and
sub
cmp
repz
test
xlat
test
data16
test
addb
dec
jg
cmpsb
adc
sbb
hlt
cmp
adc
dec
fmuls
das
and
je
ja
das
sub
movzbl
add
pop
loopne
and
lock
fs
incb
stos
mov
push
jl
subb
push
lods
pop
test
sub
sub
or
and
test
xor
cmpl
add
rcll
xor
popf
loope
les
fimuls
inc
mov
dec
mov
dec
aad
insb
add
dec
push
sbb
adc
cmp
test
rol
cmp
inc
ds
in
dec
and
pusha
dec
sbb
leave
enter
add
add
imul
sub
mov
sub
pushf
dec
sub
cmpsb
jmp
hlt
or
inc
icebp
or
cmpsb
cmpsb
xlat
inc
mov
hlt
hlt
adc
divl
incb
mov
mov
test
mov
or
or
std
rcl
add
nop
sub
jne
mov
lea
push
lock
test
mov
lea
fs
orl
test
cmpsl
xor
push
xor
pushf
pusha
adc
inc
mov
addb
cmp
lods
pop
movsb
or
pop
mov
adc
pop
add
out
lea
leave
punpckhbw
lods
or
cltd
loop
pmulhw
mov
adc
gs
or
loopne
shlb
scas
pop
inc
cmpsb
aaa
sbb
mov
sbb
adc
nop
dec
push
add
insb
orb
je
fs
or
movl
mov
mov
push
out
sti
pop
mov
lea
stos
mov
ret
mov
rolb
push
mov
mov
mov
or
cmp
rol
mov
adc
xchg
add
sbb
mov
aaa
mov
sti
ficoms
mov
in
cld
pop
addb
jp
mov
add
test
hlt
xchg
notl
pop
sbb
cmp
lret
and
loop
in
mov
ss
push
sub
loope
addr16
cmp
in
sub
add
jmp
pusha
adc
xor
inc
fnstenv
or
in
adc
or
push
push
cmp
and
in
or
jne
rcrl
mull
fidivl
enter
sbb
test
cs
rolb
mov
or
push
mov
std
or
jne
cld
clc
or
jno
lock
add
mov
cltd
dec
xor
ds
sarb
inc
movzbl
and
das
jl
or
lret
inc
mov
inc
and
fsubrs
lea
and
jl
jnp
adc
aaa
call
mov
lea
daa
ret
into
mov
lea
add
jbe
popa
pop
out
fimuls
cs
out
jns
jno
pop
inc
pop
cmp
rorb
in
cs
add
pop
cli
fs
sbb
push
cs
push
jmp
dec
xor
push
mov
or
dec
mov
pop
mov
adc
mov
push
sbb
inc
push
sbb
adc
mov
inc
js
push
nop
dec
and
adc
test
shl
mov
jbe
test
mov
and
cmp
pop
push
add
sub
insl
dec
cwtl
sbb
xchg
lret
or
push
sbb
ret
push
iret
xchg
icebp
push
and
push
sbb
sub
sbb
push
xor
or
xor
sub
adc
and
xchg
jns
testb
sahf
out
sbb
fisttpll
push
in
test
push
jmp
loopne
hlt
subb
lret
adc
cmc
daa
enter
pop
cwtl
and
adc
push
pop
mov
icebp
pusha
adc
rolb
and
push
fcomp
xor
and
das
jns
repnz
inc
jbe
dec
xchg
sbb
push
in
inc
pop
pop
ffreep
and
or
add
pop
fistpl
jne
cli
shl
test
sbb
dec
jb
in
es
xor
subb
cld
xor
dec
nop
and
add
loopne
xor
xchg
mov
fdivrs
into
add
lret
je
sub
test
call
mov
mov
mov
or
xor
psraw
and
nop
push
ret
push
pop
pop
xchg
addr16
ljmp
and
and
mov
out
and
insb
or
cmp
and
dec
mov
xor
ret
push
add
aaa
test
push
daa
sbb
movsb
pop
jae
adc
mov
in
lods
mov
pop
fiadds
and
sub
pop
xor
or
ja
sbb
mov
cmp
movsb
xor
rcrl
mov
or
xchg
in
mov
pop
jg
imul
cmp
pop
mov
ds
int
or
sub
js
adc
clc
mov
xorl
cwtl
push
cmpl
pop
shrb
negb
lea
ret
sub
xorb
inc
add
jp
inc
dec
sbb
aas
rcrl
insb
sub
jne
cmp
mov
jl
and
imul
hlt
sub
and
js
data16
fdivr
popf
inc
addr16
iret
ljmp
or
fwait
mov
test
cmp
or
push
add
insl
sub
lea
jmp
mov
jne
out
pop
outsl
fisubs
pushf
jge
test
push
idivl
jb
sbb
jne
or
rclb
lcall
pushf
xor
mov
imul
bound
shll
inc
inc
inc
dec
sub
jmp
inc
fs
sub
rcrb
cmp
cvtps2pd
add
inc
xchg
add
mov
xor
dec
or
mov
test
loopne
popf
fimull
fildll
pop
mov
mov
arpl
sbb
ljmp
jge
push
je
sarb
test
add
cmp
adc
or
add
ficoml
in
and
mov
dec
loope
aaa
aam
pop
in
mov
inc
cli
ss
in
and
dec
cmp
xor
sarl
push
insl
fcoms
jmp
xchg
movsb
pop
add
xchg
sbb
and
mov
xor
or
and
push
mov
fsubrl
push
push
in
xor
add
or
mov
cs
shrb
adc
sub
and
stc
rol
pop
les
enter
fwait
mov
and
adc
test
rcl
or
aam
insb
and
push
out
add
xchg
jo
je
or
mov
sub
push
inc
fisubl
cld
je
jge
sbbb
je
pusha
fisubrl
outsl
jle
lods
ret
sub
inc
scas
test
mov
nop
nop
popf
xor
sub
xor
mov
mov
cltd
push
mov
enter
jle
lock
push
sbb
add
dec
aad
add
and
mov
mov
inc
sub
mov
addl
jge
add
jl
push
or
mov
jecxz
lret
mov
add
pop
cltd
cmpsl
xor
clc
lahf
je
push
subb
mov
inc
mov
ljmp
inc
xor
test
in
cmp
gs
pop
cmp
or
or
inc
ds
xor
shrb
loop
sub
insb
icebp
push
mov
imul
mov
xlat
xor
dec
mov
mov
and
incb
addr16
ss
sub
push
jbe
mov
dec
mov
jl
shrb
push
sub
push
addr16
jne
jbe
inc
jecxz
int3
sub
insb
sbb
sbb
push
ret
mov
fcoml
test
mov
add
enter
mov
test
rorl
testl
jl
mov
dec
and
cmp
iret
sbb
mov
xlat
loopne
inc
ljmp
out
or
cmp
test
mov
bound
jb
pushf
mov
js
push
not
loop
test
sub
pop
push
fisttps
movl
call
clc
cmp
jbe
add
add
mov
dec
ret
mov
pop
and
addps
inc
push
adc
cmc
xor
and
out
aaa
add
push
lret
xchg
xor
cs
or
notl
adc
pop
pop
sbb
into
sahf
andb
inc
or
push
sbbb
or
push
ficoml
jno
cmp
cmp
sub
test
cmp
enter
mov
out
add
sbb
pop
test
lea
sbb
imul
dec
adc
insb
push
cwtl
and
mov
rolb
enter
jl
xor
adc
adcl
inc
xor
loop
imul
push
lahf
add
mov
ret
xor
push
push
sub
add
addb
call
idiv
add
or
lret
jmp
pop
cmpsl
push
sbb
call
xor
mov
or
add
adc
pushf
test
inc
push
mov
adc
pop
sahf
ret
arpl
popa
or
mov
or
pop
mov
mov
sbb
dec
sub
les
sub
and
pop
add
dec
pusha
shll
or
or
insb
roll
shlb
mov
and
and
test
pusha
cmp
add
inc
add
dec
faddl
mov
cmp
xor
pop
pop
add
shlb
push
inc
mov
or
push
add
push
or
nop
xchg
jg
and
lea
push
jmp
and
xchg
loopne
cmp
sub
or
mov
stc
xchg
dec
sbb
xchg
push
adc
ret
fdivrl
and
inc
mov
sub
inc
xor
inc
mov
or
pop
jo
mov
mov
sbb
into
in
rol
inc
xchg
push
add
test
and
rclb
ds
mov
or
bound
lea
push
cmp
jo
xchg
or
xor
cmp
out
mov
mov
out
push
xor
inc
adc
pop
inc
repz
jb
jl
mov
movsb
or
or
dec
cmp
ret
pop
ret
test
das
les
in
mov
in
push
sbbb
dec
sbb
fdiv
cmp
mov
push
pushf
iret
les
sti
std
xor
clc
and
adc
mov
fprem
inc
xchg
fisttps
scas
sbb
cmp
lcall
sub
push
stos
pop
and
adc
js
sbb
xchg
sub
or
stc
lcall
sbb
adc
cmp
dec
js
mov
out
dec
add
pop
and
inc
cmp
les
fisubrl
or
rolb
lea
xchg
cmp
pop
cmp
mov
sbb
andb
sub
js
xchg
sub
mov
insl
outsb
pop
gs
push
daa
js
lods
or
xchg
dec
xchg
push
cwtl
sub
adc
dec
cmp
sub
xchg
add
rclb
movsb
dec
or
and
lods
mov
inc
and
mov
dec
lcall
daa
push
sub
daa
lea
jne
fcomps
fs
in
adc
and
les
popf
dec
push
enter
xor
xchg
jge
add
dec
or
call
lock
fldcw
xchg
pop
ret
add
mov
jns
repnz
daa
dec
xor
cld
push
xor
or
dec
xchg
adc
xor
icebp
jge
jnp
and
push
xchg
mov
add
push
dec
les
jns
aam
xchg
jl
idivb
mov
and
mov
and
push
add
dec
mov
and
inc
cs
popf
mov
test
fs
add
jne
aam
push
ja
mov
sahf
into
imull
scas
sti
jno
push
int
rol
cmp
pop
pop
inc
imul
fiaddl
sbb
lods
push
fwait
dec
sub
pop
les
sbb
jbe
adc
test
or
pop
fistpll
mov
cmp
dec
mov
pop
mov
xchg
pushf
jno
xlat
hlt
and
int
jmp
push
dec
push
cmpsl
mov
or
cwtl
or
popa
add
mov
sarb
add
fmul
arpl
sbb
mov
popf
xor
adc
xchg
push
and
add
sub
ret
pushl
push
cmp
cs
outsb
mov
mov
push
sbb
push
xlat
fiaddl
jmp
mov
rolb
mov
adc
stos
fstps
nop
add
stos
cmc
test
pushf
loopne
test
sub
sub
dec
add
sbb
les
sub
les
push
adc
cmpsb
aas
cwtl
movsl
popf
cmp
je
jp
inc
add
inc
movsl
inc
dec
xchg
cmp
je
jbe
arpl
sub
inc
mov
imul
jge
mov
imul
aas
sub
test
imul
jb
adc
jl
nop
shlb
pop
dec
inc
adcb
jns
fsts
cmpsl
jno
icebp
fnsave
lds
xor
popa
xchg
xchg
adc
pop
push
jecxz
add
fsubl
fisubl
fstpl
jle
push
jmp
shr
test
ret
add
and
mov
movsl
call
dec
rorb
ret
sub
sub
andb
push
fs
movsb
cmpsb
hlt
dec
je
dec
cwtl
push
rcrb
fisubrl
sub
adc
loopne
movsl
push
mov
in
vpcmpgtw
or
push
insl
add
or
add
mov
sbb
jnp
sbb
fstpl
sbb
push
rclb
add
or
jge
jnp
and
nop
hlt
rcr
addl
mov
fwait
push
and
movsb
fistpll
jne
push
mov
js
xchg
push
xlat
rorb
add
push
daa
fbld
or
int3
sub
inc
sbb
add
push
mov
dec
push
sub
push
mov
pop
xchg
push
sbb
xchg
mov
push
iret
sub
cmp
dec
xchg
movsl
jne
push
ret
addb
inc
xor
adc
subw
shrb
adc
xor
inc
mov
lea
jecxz
xlat
or
adc
sbb
sub
xchg
nop
xchg
out
and
in
movsb
jns
or
out
std
inc
rcrb
add
dec
das
bound
xchg
scas
add
fsubl
push
push
int3
xor
rcr
mov
dec
jl
adc
sbb
xor
ret
mov
jl
mov
je
adc
xlat
je
pop
mov
aad
adc
jle
cs
stos
clc
adc
push
or
loopne
add
add
pushf
xchg
pusha
push
jo
inc
call
scas
inc
mov
inc
enter
dec
mov
icebp
add
push
dec
pop
mov
pushf
outsb
inc
test
test
ret
xchg
xchg
cmp
and
repnz
fidivl
and
push
loopne
cmp
dec
lret
inc
add
dec
or
push
loope
push
or
imul
dec
adc
divb
cmovb
cs
mov
mov
mov
jns
cld
adc
or
mov
fistl
push
arpl
fadd
dec
add
dec
data16
xor
repz
repnz
pop
daa
test
mov
push
add
hlt
sub
int
add
add
sbbl
cmp
outsl
push
sbb
dec
sub
lahf
mov
push
jge
div
inc
add
sub
pinsrw
cmc
jge
les
xor
repz
dec
add
add
mov
lea
popf
jbe
test
int3
shlb
push
adc
mov
jmp
or
adc
sub
sub
xor
pop
mov
lock
add
stos
in
sbb
pop
pop
add
xor
or
jecxz
xchg
fmulp
mov
loope
push
or
fcomps
pop
xchg
pop
cmpsb
arpl
push
outsl
push
push
outsb
dec
sub
aas
jbe
push
sbb
out
sarb
imul
cmpsb
inc
push
add
fists
xor
sbbb
mov
test
pop
inc
inc
popf
and
adc
js
inc
mov
sbbl
push
test
mov
xchg
mov
and
xchg
and
adcl
or
mov
inc
imul
jbe
pop
cmp
adc
mov
mul
push
jmp
inc
in
daa
xchg
ret
js
push
imul
mov
xor
add
add
add
int
jnp
adc
push
add
icebp
cmp
subl
jp
push
xor
in
add
cltd
adc
or
push
push
push
stc
cltd
or
pusha
or
or
inc
mov
mov
xchg
push
lcall
lret
push
sbbl
les
add
push
cmp
xor
push
sub
mov
xchg
out
sbb
add
adc
arpl
add
dec
xor
dec
pop
mov
cld
inc
faddp
sub
inc
push
cmpsb
daa
add
or
popa
call
jmp
push
pop
enter
sub
add
stos
xchg
std
adc
xchg
int
loop
hlt
faddl
adc
pop
inc
inc
sub
movsl
shrb
jle
adc
sbb
inc
iret
mov
sub
jae
shll
outsb
inc
sbb
gs
sub
push
pusha
xchg
inc
add
cmp
pop
ret
or
add
arpl
push
lahf
push
jb
loopne
stos
jno
in
push
fstpt
inc
int
in
pop
mov
cmp
push
popa
xor
lds
stos
icebp
cs
mov
push
rolb
dec
mov
ret
imul
int
or
mov
mov
test
faddl
pop
movsb
lcall
xchg
and
rcl
nop
xchg
xchg
je
jg
nop
jle
fdiv
cmp
and
test
add
cmp
fdivs
push
mov
pop
stos
popa
adc
jo
daa
jo
inc
sub
jo
pop
lea
push
push
in
xor
dec
dec
pusha
mov
ljmp
inc
push
mov
ror
xor
shr
xor
sub
jnp
xor
and
or
icebp
add
add
add
mov
sarb
iret
addr16
out
iret
or
jae
ljmp
not
and
xor
add
add
aam
leave
and
add
add
mov
ror
cli
fisubrs
iret
xlat
test
or
add
xor
and
and
xchg
push
or
xor
push
cmpsb
in
push
fs
test
push
sub
fmull
mov
push
or
xlat
ret
jo
lods
sbb
rolb
testl
hlt
add
cmpsb
inc
and
call
push
cmp
aam
call
push
xor
sub
int
out
ljmp
rol
out
add
cli
push
xor
pop
inc
lcall
xorb
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
cs
cmpsb
mov
xor
loopne
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
cwtl
sub
mov
into
outsl
pop
xor
in
push
xor
and
and
in
jl
addr16
iret
or
xor
xor
pop
sub
add
loopne
or
inc
adc
mov
inc
jo
je
or
jo
ficoms
cmpsb
inc
mov
jl
dec
shll
adc
push
lock
pop
iret
loop
mov
add
add
jle
fadds
pop
jbe
call
sub
ret
lret
push
clc
jp
push
cmpsb
bnd
add
gs
fdivrs
imul
and
psllq
inc
mov
mov
xor
cli
nop
or
jmp
aam
dec
shll
aaa
cmp
adc
xor
sub
mov
xor
in
pop
inc
shr
rolb
rcll
inc
aaa
cli
xor
xchg
add
fcom
aaa
or
inc
or
cmpsb
sub
dec
loopne
in
pusha
in
pusha
lahf
jo
add
movsb
loope
inc
push
sbb
adc
xor
and
nop
data16
or
xchg
push
cwtl
add
cmp
and
and
adc
or
xor
jo
pop
adc
test
add
or
push
or
and
je
lcall
pusha
xchg
pop
xchg
pusha
pop
scas
mov
xchg
movsl
mov
inc
in
rorb
sbbl
cmp
shr
adcl
add
enter
dec
icebp
stc
stc
adcl
adc
out
les
xchg
inc
dec
jb
add
fmuls
adc
push
cltd
cmpsb
imul
jns
jns
adc
in
add
and
sbb
pop
sub
sarb
orb
aas
pop
add
sub
mov
and
fld
add
inc
fiaddl
push
lea
add
push
cmp
pop
cld
sub
ljmpw
pop
xor
pusha
adc
addb
call
add
pop
push
and
sarb
sbb
rol
or
mov
adc
fst
push
add
add
insl
fidivl
mov
sub
and
mov
push
jmp
lea
push
sub
pop
mov
mov
ret
dec
or
mov
adc
ficomps
loope
aas
mov
cld
lock
jl
sub
mov
cwtl
sbb
adc
or
adcl
push
fisubs
jle
jae
push
pop
fadds
rep
or
cmc
cmp
sbb
mov
sti
mov
outsb
push
pop
loopne
ror
mov
neg
ficoml
ljmp
mov
inc
ljmp
je
xchg
xchg
adc
enter
test
and
push
movsl
aam
sbb
xchg
data16
mov
daa
inc
add
dec
lea
cld
hlt
lea
ss
add
repz
in
mov
aas
or
insb
mov
inc
mov
lret
or
add
xchg
jno
mov
fsubs
subl
xlat
inc
dec
xlat
xchg
loope
adc
mov
stos
sbb
mov
adc
push
lods
or
sbb
xchg
push
jge
or
lea
mov
and
ret
andl
push
adc
ret
cmc
or
addr16
add
dec
add
mov
popa
sbb
jo
dec
in
cmp
or
and
ss
test
sbb
les
daa
test
mov
pusha
ljmp
add
andl
cmpsl
xchg
adc
dec
inc
adc
stos
dec
pop
adc
dec
adc
adc
sti
or
and
sub
or
xor
dec
filds
pop
mov
shlb
and
xchg
inc
adc
pusha
push
push
push
jg
mov
add
push
adc
lock
imul
sub
bound
mov
pcmpeqd
add
mov
fwait
sub
add
fwait
add
push
lcall
loopne
add
add
xor
es
sbb
test
push
js
sbb
stos
push
movb
xor
sbb
add
imul
or
cld
xor
mov
pop
hlt
popa
mov
inc
ret
js
sub
test
cmp
sub
jns
xchg
jmp
sbb
jmp
xor
push
test
aad
lds
jns
cmp
fs
je
scas
xor
test
popa
push
cmp
in
imul
lea
popf
insb
dec
loopne
mov
imul
test
pop
js
pop
jnp
adc
jl
adcl
or
add
je
and
test
add
add
push
add
jno
popf
ret
jge
call
ret
loopne
enter
test
rolb
testb
pop
sub
dec
mov
and
insb
loopne
or
fdivrl
inc
mov
lock
push
or
inc
cmp
popa
mov
addl
and
ret
inc
adc
and
ret
sbb
imul
pop
aaa
mov
pop
add
sub
mov
jnp
fwait
dec
mov
jle
mov
cmp
lret
sbb
sbb
dec
rorb
xor
sbb
fsts
pushf
dec
shlb
dec
cmp
ds
add
mov
ret
rol
adc
jbe
ret
mov
push
mov
dec
scas
add
cmp
xor
add
mov
push
mov
pop
sbb
push
mov
push
sub
in
xchg
arpl
lods
and
adcb
pop
repnz
add
or
dec
out
jge
xchg
and
jne
popa
xorl
pop
hlt
out
outsl
test
out
mov
xchg
movsb
cs
push
push
adc
and
insb
pusha
jmp
shlb
mov
push
push
stc
ss
and
push
mov
andb
aas
or
outsl
push
push
add
sbb
cmp
mov
pop
jne
and
or
popa
adc
or
out
fistl
push
add
inc
or
imul
mov
ficoms
jmp
xchg
icebp
inc
add
or
mov
push
mov
add
sbb
mov
sar
mov
jbe
push
push
stc
mov
inc
add
hlt
pop
push
jae
push
stos
leave
push
mov
sarl
jb
jmp
xlat
xchg
mov
push
cmp
adc
in
rsm
sbb
imul
movsl
stos
test
mov
insb
mov
mov
fidivl
pop
mov
xchg
pop
cmp
mov
popa
int
adc
or
xchg
out
sub
sti
pop
lods
cmpl
testb
lock
int3
movzbl
pop
mov
ljmp
inc
mov
sti
call
push
sarl
scas
fs
push
stos
fs
icebp
ret
pop
inc
or
xchg
lock
sub
mov
or
xor
add
jmp
pop
and
adc
and
mov
dec
dec
xor
jae
xor
pop
inc
mov
cmp
jb
ss
pusha
sub
hlt
stos
imul
add
mov
adc
push
lcall
add
fstl
ljmp
testb
jp
cmpsb
sub
adc
loopne
dec
push
mov
cmp
inc
push
cmc
mov
xlat
xchg
arpl
inc
jno
add
test
xchg
jbe
push
push
scas
xchg
incl
pop
pushl
push
rorb
insb
or
cwtl
and
jmp
add
and
movsl
add
sub
sub
xchg
mov
push
xchg
inc
test
and
fisttps
or
lea
insl
add
rorb
adc
repz
or
push
add
sbb
and
jbe
lock
add
xchg
mov
shlb
enter
in
dec
shrb
xchg
inc
pop
mov
cld
je
cmp
mov
ljmp
push
mov
push
dec
pop
jb
inc
jbe
lea
fisubrs
insb
jp
add
dec
cmp
mov
or
addr16
addl
inc
aaa
inc
push
pop
aas
pop
push
pop
bound
stc
ja
incl
dec
ja
ss
cmp
jb
mov
movlhps
adcb
mov
xchg
jp
inc
or
mov
in
pop
and
imul
or
stc
cmpsl
xor
mov
push
insb
das
dec
xchg
adc
fadd
adc
addl
sti
sub
ret
dec
lahf
mov
xchg
dec
xor
enter
sbb
xchg
jo
and
lock
cmpsl
cmp
int3
jmp
mov
mov
pop
jp
test
leave
mov
das
loope
add
jo
mov
jb
loop
or
sbb
mov
das
pusha
loopne
sub
pusha
mov
out
mov
clc
mov
inc
cmp
inc
cmp
cmpsl
jl
lea
call
adc
icebp
adc
cld
in
mov
mov
mov
adc
mov
pop
and
xor
mov
jne
or
insl
dec
cmp
scas
fsubrs
int3
incb
roll
lcall
xchg
or
adc
xor
pop
pop
repz
pop
dec
add
add
imul
mov
mov
cmp
adc
dec
jmp
push
or
pop
push
rorl
fdivr
lcall
sub
pop
sub
mov
or
lret
shlb
push
xor
mov
mov
daa
test
jmp
mov
xor
sbb
jecxz
push
ss
sti
aas
add
or
xor
xor
xor
add
fwait
xor
fwait
loop
push
push
jl
cltd
or
pop
pop
orl
adc
jns
ret
out
xor
and
lea
jecxz
jb
les
fiaddl
and
cmp
sbb
jnp
cmp
cmp
push
lea
stos
sub
sub
movntps
js
comiss
in
inc
pop
jmp
pop
mov
xor
outsb
pop
or
add
or
inc
mov
filds
insl
loopne
in
and
loope
and
add
mov
fildll
out
mov
shr
shl
add
icebp
jmp
xadd
add
lret
mov
push
adc
fisttps
mov
push
aam
test
test
jl
push
jge
aam
iret
push
fidivrs
popa
add
ja
add
sbb
pop
add
sub
cmp
shlb
pop
dec
adc
or
inc
loopne
pop
fs
ret
xor
rolb
mov
test
orl
add
lock
or
lock
mov
or
call
or
das
pop
inc
cmp
xor
mov
adc
sbb
out
and
sbb
pop
mov
test
jl
test
sbb
pop
lahf
es
pop
add
xor
ret
icebp
mov
mov
ljmp
xor
pusha
clc
cmp
stos
xchg
mov
sub
xor
mov
sub
and
jp
enter
aam
inc
and
and
repz
jp
adc
xor
cmpl
or
add
movsb
xchg
push
adc
inc
jmp
sbb
sbb
pusha
in
mov
flds
add
mov
and
xchg
leave
add
insl
in
mov
adcl
ficoms
sbb
sbb
jo
popa
xchg
roll
icebp
adc
jo
pop
cmp
cltd
push
jmp
arpl
out
or
call
js
xchg
out
and
cmpsb
add
xchg
nop
test
push
add
fimuls
add
jle
mov
subl
mov
push
out
jl
push
sti
inc
mov
repz
jmp
push
js
movsb
in
fucomip
jbe
mov
jmp
das
push
sub
cmp
cmp
sbb
add
cld
icebp
cmpsl
pop
outsl
add
add
adc
out
and
pop
add
pop
shrb
dec
jb
add
cmp
xchg
stos
mov
pop
push
ret
gs
xchg
lret
ljmp
jecxz
fisubs
inc
adc
cltd
in
outsb
cmp
xchg
inc
and
into
fisubrl
or
sbb
add
push
jmp
jae
dec
pop
int3
xchg
loope
loop
or
add
push
xor
inc
jnp
add
add
dec
faddp
mov
xor
sahf
pop
push
test
cs
sti
roll
sbb
mov
popa
and
adc
sbb
pop
pop
ret
popa
movl
jo
sbb
pop
jmp
rorb
xor
jo
jae
insl
sbb
push
or
loopne
sub
mov
cmp
sbb
adc
mov
and
sub
pop
ret
pop
and
add
or
sbb
and
push
or
or
inc
push
jns
or
pop
and
mov
sub
sub
jno
mov
push
xor
or
push
enter
cmp
mov
iret
mov
out
loope
or
push
cmpsb
mov
mov
and
mov
adcl
cli
aam
push
jecxz
and
push
push
gs
adc
inc
inc
roll
add
xchg
push
sub
xchg
mov
mov
and
sbb
mov
add
mov
mov
mov
sbb
mov
mov
js
xchg
or
mov
movsl
and
sbb
and
add
clc
je
xor
ret
dec
mov
sub
mov
dec
in
xchg
push
rolb
das
sbb
aas
mov
mov
pop
icebp
xchg
inc
sub
daa
mov
push
add
pop
push
pushl
fsubr
add
pop
mov
fdivrp
loopne
pop
push
fwait
push
push
push
adc
fs
pop
or
pushf
mov
ret
cwtl
push
mov
dec
jns
lret
mov
add
mov
fcompl
aad
dec
adc
incb
sbb
test
adc
in
dec
mov
or
out
arpl
cmpl
jne
sbb
mov
push
push
mov
orl
inc
add
fidivl
bndstx
mul
inc
addl
repnz
cmp
jle
jl
add
or
mov
sub
cmp
pusha
and
jl
pop
fiaddl
test
sbb
jne
push
add
cmp
int3
sub
pop
xor
push
mov
inc
pop
jo
jo
push
inc
xchg
stos
xor
jbe
or
and
or
pop
imul
jp
ret
insb
arpl
cltd
sarb
dec
insb
mov
or
cld
test
insb
inc
or
or
adc
sahf
dec
jo
jbe
sbb
add
cmp
sub
cltd
cmpsb
inc
aas
or
push
stos
jmp
inc
jo
jne
addl
nop
or
in
pusha
cmp
cmp
lret
jno
sub
mov
adc
movsl
iret
lods
dec
add
add
fdivr
mov
hlt
cmp
add
xor
mov
movb
xor
sub
jo
sub
push
inc
punpckhwd
sarl
sbb
sbb
mov
cld
idivb
aaa
sbb
adc
push
add
push
cmp
mov
jmp
sub
in
mov
jne
push
adc
add
cmpb
or
pop
sub
xor
arpl
dec
popa
or
add
cltd
lret
xchg
jno
fstp
aad
cvtps2pi
adc
xor
inc
push
sbb
xor
cmp
inc
jg
sub
loopne
shlb
dec
and
push
jmp
pushf
sub
jge
and
fdiv
dec
ret
adcl
cvtps2pd
push
add
xorl
dec
adc
popa
and
dec
hlt
lods
fsubrs
call
fisubrs
and
movsb
int
addb
push
pop
test
add
sub
test
sub
aas
movsl
inc
hlt
push
push
mov
xchg
or
leave
or
inc
mov
push
cmp
and
dec
jno
xchg
ficomps
cld
push
push
add
push
push
sbb
aad
into
mov
pop
orb
lods
mov
ds
adc
mov
sbb
mov
dec
std
add
mov
xlat
sbb
push
rorl
sbb
pop
sbb
sbb
or
sbb
or
inc
fiaddl
pop
cmpb
leave
sub
lea
push
sbb
mov
sbb
sahf
orb
bswap
inc
add
cmp
jne
data16
and
lds
or
shrb
dec
pusha
outsl
clc
xor
lret
jmp
push
dec
and
test
or
sub
and
icebp
hlt
call
sub
int3
dec
aaa
into
cmp
std
cwtl
nop
inc
adc
dec
ss
xor
mov
fstpt
out
xlat
xchg
inc
xchg
cvtdq2ps
pop
aas
xor
repnz
push
cmpl
push
je
jne
push
xchg
pop
pop
mov
adc
scas
popf
icebp
xchg
insl
xchg
jp
dec
loopne
add
adc
iret
jne
pop
aaa
les
cmpl
dec
in
lcall
mov
test
or
add
xor
rcrl
mov
jl
dec
cmp
sbb
sbb
and
loope
sub
jo
sub
loopne
adc
push
imulb
fistps
add
mov
mov
sbb
aaa
cltd
loopne
ret
mov
and
inc
pop
xor
out
push
pop
jbe
and
xchg
mov
popa
adc
je
inc
and
adc
les
rclb
adc
add
add
cmpsl
int
add
and
adc
loopne
inc
out
mov
jmp
dec
shll
jno
pop
ret
int3
add
sbb
push
test
add
sbb
add
clc
jg
movsb
and
add
add
sbb
ret
fdivs
addl
std
jb
test
mov
pop
lcall
push
je
jmp
mov
movsb
sbb
shll
dec
xor
or
fists
outsl
gs
rcrl
fwait
outsl
push
mov
inc
inc
push
mov
fwait
or
or
mov
add
lds
adc
xor
xchg
bound
movsl
and
adc
adc
fwait
mov
push
enter
cmpl
loopne
add
or
adc
in
cmp
mov
push
loopne
cmp
dec
lock
loopne
ljmp
dec
mov
sub
outsb
fsubrs
xchg
les
test
lret
push
or
aad
cmp
mov
push
xchg
jae
mov
fldt
es
dec
and
scas
int3
sub
pusha
movups
in
bound
pop
pop
jg
inc
scas
pop
int
or
ljmp
jmp
ret
sbb
push
mov
lods
xchg
movsl
sub
push
adc
call
js
cs
aaa
test
cmp
jmp
aaa
and
adc
xchg
mov
push
popa
push
pop
cmp
inc
pusha
test
push
loope
or
dec
dec
pop
jno
and
orb
pop
movl
xchg
pop
ja
in
lods
xchg
add
xor
icebp
add
dec
add
jmp
and
pop
push
add
push
data16
icebp
push
cmp
mov
jne
mov
adc
inc
cmp
xor
mov
icebp
adc
push
je
add
js
mov
ljmp
mov
dec
sub
out
add
ja
adc
dec
mov
ds
jae
push
add
pusha
loopne
mov
cmp
psubusw
dec
jl
push
sub
sbb
xorl
jmp
jbe
mov
push
mov
ja
inc
xor
sbb
sbb
test
ss
push
inc
scas
cmc
dec
adc
ficoms
add
pop
push
cltd
xor
loope
pop
pop
ret
decl
or
mov
vunpckhps
cs
push
sub
daa
test
mov
in
and
sbb
jnp
andb
mov
inc
push
out
jb
cmpsl
inc
rclb
dec
jmp
xchg
or
push
in
push
push
subl
and
pop
inc
aaa
je
ljmp
sbb
pop
shlb
and
mov
push
out
mov
insb
in
mov
jl
movsb
jbe
add
xor
push
cmp
mov
dec
pop
ret
inc
inc
inc
jo
mov
jb
cmp
push
push
cmp
shll
lock
cmpsl
popa
xlat
cmp
add
mov
jne
adc
mov
push
sub
sbb
outsl
ds
pop
xor
sub
cmp
push
sarb
mov
push
push
mov
add
and
inc
mov
fisubrs
mov
out
in
push
sbb
jmp
push
dec
int
adc
jo
push
dec
adc
sub
lods
xor
and
sbb
in
jne
je
jmp
or
push
jmp
sub
or
sbb
or
add
xor
mov
inc
sbb
out
movhps
add
cmp
and
jmp
cmp
inc
mov
xor
icebp
fisubrs
icebp
and
aad
inc
cmp
test
loope
add
sbb
sub
aaa
and
pushf
es
outsb
cmp
push
mov
dec
inc
pop
pop
push
add
and
adcb
sbb
pop
or
and
jo
add
push
inc
pop
ret
clc
and
cmpsl
or
lock
imul
add
in
or
sbb
loop
inc
pop
cmp
movsl
push
push
lcall
add
xor
push
stos
mov
push
xchg
es
jb
push
pop
in
mov
mov
jl
dec
push
push
testl
pop
test
stos
cmpsl
and
add
jo
adc
add
adc
xor
push
es
pusha
pushf
cmp
push
sbbb
test
cmp
and
scas
sub
mov
lret
shlb
pop
pop
loop
shll
dec
je
stos
jmp
bound
pop
adc
pusha
jne
das
pop
arpl
xor
dec
sbb
mov
stos
adc
shll
int3
mov
lds
shlb
add
pop
bound
mov
mov
rorl
or
rolb
jle
rcrb
jl
inc
js
cmp
repz
add
shrb
icebp
mov
addr16
dec
sbb
stc
and
jle
mov
and
or
and
and
scas
cs
nop
cli
or
cmp
pushl
fnstcw
mov
and
clc
jg
fs
test
pusha
jmp
movq
movaps
push
pop
outsb
fcmovne
clc
jae
xor
jle
xor
cli
shlb
lret
je
mov
xor
mov
or
and
lret
or
jg
mov
xchg
ret
adc
jnp
mov
addl
adc
ret
cld
cli
jnp
or
add
adc
add
mov
fadd
roll
add
mov
mov
pusha
repnz
mov
int
add
sbb
sub
jns
sbb
xor
sbbl
and
jmp
inc
imul
mov
and
icebp
lret
or
push
mov
sub
test
mov
mov
xchg
adc
push
or
popa
pop
call
stc
and
mov
push
and
mov
jge
in
jb
jge
pop
push
and
sahf
fldl
and
inc
je
pop
or
arpl
outsl
jb
jl
sub
add
fmul
loope
pop
sub
xor
fldcw
shlb
or
rorl
jmp
icebp
sarl
rorl
lock
fsincos
je
rep
mov
dec
ljmp
jg
fld
pop
mov
inc
push
int
add
dec
push
mov
add
rcrl
adc
jb
repnz
stc
push
pop
push
pop
and
xor
push
mov
dec
pop
pop
scas
push
mov
call
adc
or
jne
pushl
rep
jmp
sub
cmp
jb
scas
add
xor
clc
das
ds
hlt
push
js
mov
pop
and
dec
pop
in
fcmovu
adc
mov
or
scas
adc
and
mov
mov
push
push
cwtl
das
dec
add
movl
xchg
inc
add
add
ficomps
nop
mov
or
push
rorb
push
cmp
mov
mov
in
inc
sahf
out
sahf
in
call
sahf
out
lock
hlt
clc
clc
pop
test
out
adc
stc
sbb
mov
fldcw
jmp
inc
js
cmpsl
sbb
push
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
xorb
mov
fwait
scas
adc
xor
pop
sbb
test
pop
nop
xchg
push
mov
push
loopne
add
out
add
sub
add
dec
inc
push
out
push
add
nop
dec
dec
addr16
add
stos
jecxz
add
push
mov
xor
cmp
inc
dec
push
jns
jl
pop
fs
aaa
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
nop
or
push
test
xor
push
add
lds
add
mov
daa
ja
mov
add
xchg
nop
push
sbb
mov
orb
mov
pop
in
or
fistpll
lods
add
mov
bound
add
int
cld
mov
test
je
add
add
push
mov
addr16
movsl
lds
stos
push
cmp
mov
inc
inc
and
add
mov
jmp
jp
je
mov
mov
push
cmp
jne
mov
pop
pop
imul
add
push
mov
jne
pusha
or
shl
cwtl
sbb
fidivl
les
adc
fisubs
mov
push
mov
pusha
insb
rolb
pop
push
mov
or
popf
rcrb
push
hlt
mov
add
and
add
hlt
mov
lock
push
subl
sub
test
test
jge
xchg
push
pop
add
push
xchg
or
shll
pop
mov
push
pushl
adc
int
inc
cmp
jne
inc
cmp
inc
xor
aam
fdivr
insb
mov
fwait
ret
or
inc
jbe
cmpsb
sbb
push
adc
adc
and
mov
and
lret
push
inc
daa
or
push
les
enter
cmp
in
and
mov
and
repz
xchg
in
xor
adc
push
add
push
push
push
pop
add
lret
aam
adc
add
rcrl
xor
orl
mov
sub
pop
outsl
add
dec
daa
nop
and
xor
inc
hlt
cmp
repz
xchg
add
cmp
mov
add
enter
cmpsb
mov
sbb
ret
idivb
shl
shlb
dec
leave
sbb
or
icebp
shll
pop
cmp
mov
mov
cmp
sbb
push
movsb
push
rol
inc
adc
int
inc
cmp
aam
lret
jne
sbb
ds
sbb
adcb
shll
test
nop
add
outsl
jmp
lods
or
mov
js
movl
sub
call
jmp
inc
xchg
and
add
loopne
and
out
testb
push
add
orl
or
mov
push
xor
sarl
mov
hlt
rorb
inc
jae
leave
and
inc
hlt
aad
repnz
in
sub
xchg
or
sub
fdivrs
pop
add
mov
add
orb
fidivrl
add
jne
insb
ja
je
shrb
mov
mov
pop
inc
and
rcl
pop
cmc
cmp
ja
pop
into
pop
ret
les
sub
ljmp
jecxz
mov
call
add
add
leave
mov
or
mov
inc
shlb
inc
jl
mov
push
cld
jb
pop
fildl
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
sub
repnz
ret
adc
sbb
jne
test
or
add
xor
enter
push
cmp
ficomps
xor
sub
push
add
mov
xor
jge
cmp
jb
lea
sub
mov
push
outsb
mov
movsb
addb
jne
mov
push
mov
std
jne
es
jne
push
mov
cmpsl
call
in
subl
mov
aas
adc
push
dec
cld
cmp
out
jmp
adc
jmp
std
std
jmp
mov
repz
cld
ret
pmaxub
adc
adc
fucomi
jno
push
jb
push
push
movb
xchg
stc
hlt
or
xchg
inc
pop
jb
jae
adc
sub
popf
shl
test
roll
icebp
testb
xor
test
pop
adc
jo
imul
xor
test
inc
mov
leave
push
pop
into
aad
mov
or
and
or
sub
test
cmp
or
push
add
or
mov
adc
adc
mov
insl
pusha
inc
lea
cwtl
push
jne
mov
jge,pn
xor
daa
stos
add
sbbb
add
scas
into
and
mov
cmp
jg
add
mov
mov
dec
sbb
lock
jg
test
push
push
push
popa
sbb
enter
mov
push
repz
add
dec
jmp
mov
xchg
fcoml
jle
push
push
and
jbe
pop
div
jb
or
lea
push
clc
shll
xchg
or
lods
fwait
rcl
pop
sub
pop
adc
push
loope
mov
mov
xor
add
sub
cmp
cmp
and
sahf
gs
jmp
adc
sub
mov
mov
sub
repz
fsubrl
and
mov
idiv
test
pusha
xor
sbb
roll
add
cmp
pop
sub
xor
adc
fst
adc
or
jl
or
mov
push
mov
adc
jle
cmpl
pop
pop
out
xor
xchg
rclb
into
shrl
xor
mov
jmp
cmp
jne
orl
jmp
adc
jne
sub
xor
movsl
nop
decb
add
fsincos
roll
into
fistl
and
cmp
mov
xor
dec
or
mov
cmp
and
pop
in
adc
insb
adc
pop
jne
dec
add
ret
jne
inc
lds
fwait
orb
adc
lret
or
test
inc
ret
pusha
mov
jmp
xchg
adc
sti
fidivs
lret
sub
cmp
ja,pn
xor
cmp
aad
leave
cmp
jae
push
scas
fnstenv
sbb
hlt
pop
or
inc
enter
add
sbb
lods
push
pop
cld
fadds
mov
inc
cmc
mov
nop
test
jne
test
jne
push
or
xor
or
push
jnp
jne
jbe
inc
mulb
inc
xlat
xchg
add
sub
mov
mov
faddl
sub
das
in
shlb
adc
mov
inc
xor
inc
fidivl
mov
push
mov
jmp
mov
movl
sub
popa
push
sub
popf
dec
mov
seto
mov
loopne
adc
jp
jge
stos
mov
shr
rorb
call
or
adc
jmp
jno
jbe
xlat
adc
add
push
push
andl
jne
negb
dec
cltd
jle
xchg
mov
adc
or
mov
push
adc
adc
sbb
shlb
mov
mov
inc
inc
pushfw
mulb
lea
mov
clc
dec
and
sub
and
roll
loop
je
cmp
faddl
clc
testb
inc
mov
stos
roll
rorb
add
add
xor
xor
out
sbb
dec
push
bound
xlat
call
push
jmp
xor
ljmp
fnsave
repz
pop
stos
lock
pushf
js
and
movsb
ret
push
inc
lea
int3
decb
scas
push
cmp
ret
bound
mov
and
pusha
inc
nop
mov
cmp
movsl
xor
add
pusha
xor
fwait
jecxz
rcll
adc
loop
push
cltd
mov
sti
fcoml
sbb
jae
sub
push
or
push
add
push
icebp
and
incl
pop
and
int
hlt
je
inc
cmp
jb
jae
ret
dec
in
push
adc
cld
dec
addr16
in
mov
in
add
dec
lods
cmp
test
cmpsb
sahf
mov
push
mov
dec
add
and
sbb
dec
xor
clc
push
mov
or
xchg
push
add
xor
out
cmp
push
mov
sbb
and
rcll
sahf
dec
and
jmp
pop
pop
pop
jecxz
fcomps
faddl
push
push
mov
pop
dec
inc
mov
inc
rorl
sbb
mov
xchg
dec
jae
adc
in
dec
xor
add
test
jns
sbbl
mov
shl
add
mov
fldl2e
mov
mov
daa
out
outsl
pop
jmp
aam
jge
or
dec
and
shr
adc
mov
movb
sub
sbb
cld
std
lret
fldl
inc
mov
xor
ds
mov
test
stos
and
lret
je
cmpsl
push
xor
inc
stc
xlat
rorl
xor
pop
adc
mov
loopne
xor
rcll
jbe
mov
or
sub
xchg
pusha
ja
ficomps
int3
sbb
testl
fs
xchg
test
insl
push
data16
jle
push
stc
sahf
insl
popf
aad
push
popf
aaa
outsb
pop
decl
pop
adcb
fdivrl
dec
test
ds
scas
subl
fisttpll
lock
add
ret
in
sbb
in
xor
int
in
mov
mov
loopne
xlat
loop
int3
pop
or
and
sbbl
notl
loopne
push
mov
dec
sbb
mov
movsb
fstpl
pop
je
push
mov
inc
xchg
in
sub
cwtl
lods
adc
add
cmp
sub
sbb
aad
push
dec
adc
mov
mov
test
pop
dec
sarb
js
xor
mov
loopne
out
add
inc
and
adcb
mov
in
sbb
ss
imul
xlat
test
popa
mov
mov
cmp
je
push
out
inc
fsubl
ret
xorl
jmp
push
pop
pop
push
je
in
sub
les
mov
movsl
cmp
inc
in
cltd
testb
add
ret
aas
xchg
mov
sub
mov
nop
add
pop
sbb
add
sub
fisttps
jl
pusha
pop
pop
pop
mov
fdivrp
fsubr
push
icebp
inc
xorb
dec
enter
out
and
jo
push
add
pop
mov
ret
mov
cmp
jne
or
clc
movsb
shlb
je
push
add
sub
inc
pop
sub
inc
int
add
add
xor
or
lock
sbb
shll
rolb
xchg
mov
scas
cmp
mov
pop
push
dec
ja
movsb
mov
mov
pop
je
mov
mov
and
push
add
enter
push
jne
add
das
dec
pop
push
dec
pop
jle
sbb
cwtl
add
cmp
lods
add
or
lea
and
mov
jmp
cmp
je
push
jbe
or
inc
out
call
add
cs
sub
imul
mov
or
cmp
ret
jp
and
push
leave
pop
in
xor
cli
lret
and
pop
inc
pop
jns
sub
daa
and
pop
mov
mov
mov
loopne
or
cmp
fadds
add
pop
push
inc
test
jb
enter
inc
ss
push
inc
das
or
add
cmp
jne
cmp
jo
je
adc
sbb
or
jle
mov
xchg
cmp
ret
mov
lret
lock
into
mov
push
and
sub
jmp
out
adc
in
or
adc
in
dec
or
sub
fs
dec
mov
dec
push
push
pop
jle
inc
mov
cmp
je
movzbl
add
sub
je
lock
lahf
ret
lea
sbb
push
add
adc
imul
push
fcomps
inc
dec
add
sahf
addr16
daa
add
adc
ret
ret
dec
add
inc
enter
jno
je
lcall
flds
add
inc
add
sbb
inc
xchg
pop
push
pop
xchg
cmpsb
repnz
or
or
jb
cmp
dec
or
pop
enter
or
xor
pop
or
mov
add
or
jns
pop
enter
or
in
cwtl
push
push
inc
push
inc
push
ja
push
pmaxub
cmp
adc
pusha
adc
xor
fwait
sub
adc
push
inc
push
or
adc
in
cmp
add
adc
pop
lcall
lcall
adc
xor
push
push
push
sbb
iret
enter
xor
movsl
mov
sbb
enter
sbb
call
add
sbb
in
jb
sbb
sbb
dec
sbb
je
pop
sbb
nop
out
or
add
jns
pusha
push
push
mov
push
pop
pop
jne
add
or
inc
cld
add
sub
cmp
sbb
fidivrl
cmpsb
add
add
cmp
xchg
and
add
out
mov
repz
pop
sti
fwait
jp
in
push
in
jno
repnz
sub
shl
cmp
sub
lea
aad
cmp
jns
nop
in
out
and
add
xor
jbe
add
sub
je
call
jnp
dec
dec
cwtl
jmp
cmpb
ljmp
sbb
out
psubusb
dec
in
in
in
cltd
mov
cs
inc
in
sahf
mov
iret
out
out
jge
out
test
out
pop
lock
add
lock
cmp
icebp
icebp
pslld
out
std
repz
std
hlt
hlt
xchg
add
int3
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
mov
enter
cmp
rclb
cmp
clc
clc
outsl
in
or
inc
stc
repnz
push
and
cld
cli
cli
enter
iret
sti
sbb
and
xchg
inc
stos
cld
cld
cld
je
cld
mov
cmp
repnz
ss
xor
sbb
fistpl
enter
pushf
adc
cmp
or
cwtl
sbb
pop
lahf
test
in
or
xor
jp
pop
cmpsb
push
xchg
es
pop
push
adc
mov
xchg
add
inc
in
icebp
loope
jb
inc
mov
mov
xchg
sti
out
out
enter
cltd
outsb
call
adc
sub
int
mov
pop
jmp
psubusb
jmp
in
pop
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
push
xchg
cmp
sbb
add
cli
push
adc
push
cli
sbb
rclb
repz
pop
enter
stc
push
stc
mov
fnsave
sub
imull
fwait
xor
add
stc
out
clc
dec
in
ret
cmp
inc
push
fsubs
sti
cltd
mov
repnz
cld
orl
xlat
ja
sbb
inc
scas
xchg
push
push
sbb
sub
mov
in
sbb
mul
pop
leave
mov
adc
imull
popa
jg
mul
enter
sbb
out
bound
pop
inc
divl
pusha
leave
and
sbb
xchg
cmpsb
ljmp
shl
pop
mov
adc
xchg
pop
xchg
negb
insb
out
out
jno
mov
pop
and
add
pop
and
negb
repnz
xchg
xchg
mov
jae
imul
cmc
div
popf
add
jne
jns
and
pop
add
clc
clc
push
scas
lret
add
hlt
stc
popa
cmp
mov
xchg
inc
pop
jno
hlt
pop
dec
pop
and
jne
push
hlt
push
cmp
add
das
pushw
data16
pop
ja
and
hlt
idivl
jo
pop
int3
jbe
sti
lahf
sbb
aam
adc
ds
sub
imul
and
scas
repz
xchg
pop
mov
test
imul
pop
lret
and
andl
and
repnz
jmp
fdiv
mov
xchg
repnz
sbb
dec
in
in
daa
xchg
inc
fdiv
and
add
rcll
sbb
mov
leave
add
leave
mov
push
icebp
cmpsb
jb
popa
cmp
adc
xchg
cmc
cmc
add
jne
leave
mov
lock
sub
ret
popf
lock
rclb
cmc
call
lock
lock
sbb
imul
fldl
ss
out
mov
push
sub
out
and
rol
in
and
in
jmp
inc
ds
add
add
jb
cmp
stos
add
les
fwait
push
jnp
inc
and
xchg
adc
cmp
or
push
xchg
daa
add
jmp
and
les
ret
push
dec
or
cmpl
push
inc
add
fldt
push
cmp
popa
mov
out
lcall
or
lahf
cmp
pop
stos
pop
jl
int
pxor
pop
sbb
push
imul
pop
push
icebp
push
rol
sahf
out
iret
outsb
push
inc
dec
outsb
add
pop
jno
push
xchg
adcb
add
ficomps
or
jg
clc
loope
mov
pop
aam
lock
cld
cld
jge
push
add
xor
fildll
mov
push
dec
sbb
mov
mov
rcl
pop
cmp
cmp
mov
fimuls
add
fdivs
and
cwtl
fmuls
and
add
push
push
sub
add
xchg
repnz
pushl
push
add
sub
mov
pop
daa
lea
movsl
xchg
sbb
mul
jae
add
pop
and
adc
push
sub
into
out
rcr
dec
pop
xor
in
inc
int
inc
sub
push
push
adc
inc
jmp
stc
aam
dec
movsb
mov
xor
dec
xchg
fdivrp
add
jne
insl
loope
aam
je
adc
cmp
int
add
nop
mov
mov
pop
adcl
inc
inc
inc
inc
pop
fmull
lock
enter
gs
cmpsl
imul
push
inc
and
gs
jle
xchg
add
in
sbb
adc
push
push
push
cmp
mov
orb
add
repnz
je
pop
push
sub
movsl
roll
sub
inc
inc
stos
mov
into
enter
add
xchg
test
push
cmp
xchg
xor
jne
and
jle
sub
cmp
pop
or
hlt
inc
ja
nop
jno
lods
sub
and
fistps
sbb
fimull
ljmp
jne
add
sub
roll
adc
int
clc
or
int
prefetcht1
inc
push
stc
aad
jecxz
jo
lret
clc
mov
adc
jne
pop
add
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
pop
xor
sbb
cmp
cmp
lcall
push
xchg
cwtl
ja
orb
or
adc
ret
clc
mov
or
sti
std
mov
inc
add
test
clc
pop
repnz
lods
add
dec
sub
shr
inc
loope
push
stos
add
testb
movb
shll
lret
cwtl
mov
das
push
sub
or
add
dec
jne
leave
adc
mov
inc
loop
jns
jo
fists
mov
or
dec
mov
xchg
xor
das
adc
dec
pusha
pop
repnz
jg
mov
mov
adc
mov
mov
incl
inc
decl
jne,pn
adc
mov
loop
repnz
mov
cmp
cmpl
mov
mov
sbb
cltd
pop
idiv
rclb
pusha
or
pop
xchg
add
pusha
ja
nop
aaa
dec
mov
mov
xor
ja
mov
jo
jmp
cmp
jae
dec
lods
pop
push
adcb
out
mov
jbe
mov
dec
test
mov
jmp
adc
addl
dec
inc
push
pushf
adc
jg
mov
dec
sbb
add
call
or
sbb
sbb
dec
dec
je
push
push
jne
lcall
lods
movb
sti
mov
dec
mov
xor
pop
decb
out
loopw
push
test
mov
inc
pop
rcrb
fstps
cmp
das
or
mov
pushf
cmp
aaa
test
loope
mov
filds
sbb
idiv
mov
xor
rol
pop
add
popa
xor
or
and
xor
adc
fiaddl
ja
sub
mov
stos
cmp
add
mov
push
push
or
into
js
loopne
fsubr
pop
cmp
mov
sub
sub
insl
or
jle
xchg
icebp
aas
jge
push
push
cltd
pop
idiv
inc
mov
add
mov
inc
xor
mull
push
xchg
inc
out
cmp
pop
xchg
dec
push
jmp
or
mov
fsubs
je
xor
fs
bound
outsl
sub
adc
fs
jbe
insl
mov
add
call
movsl
bound
pop
insb
sub
lea
jecxz
repnz
sbb
dec
jae
mov
add
sbb
or
add
adc
jg
jmp
incl
pop
push
sti
inc
pop
mov
sub
loopne
inc
and
xor
loopne
in
mov
hlt
cmp
xchg
mov
push
mov
fisubrs
xor
mov
jge
pop
je
sbb
add
movl
pop
das
mov
ud2
lcall
adc
outsl
fnsave
test
mov
jo
sbb
je
dec
inc
hlt
or
in
es
inc
inc
adc
lretw
test
jae
and
adc
insb
lahf
pop
inc
xchg
or
shrb
push
or
cmp
cltd
push
or
mov
out
aaa
subl
inc
dec
xlat
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
add
jp
ret
in
and
inc
and
sub
push
je
mov
flds
cmpb
ret
movb
inc
dec
sbb
cli
and
cmp
and
mov
push
hlt
mov
add
sahf
ja
jbe
push
loopne
adc
adc
or
cmp
or
add
jmp
push
jae
sbb
bound
pop
pushl
push
int3
dec
ljmp
pop
imul
ficoms
dec
jg
push
pop
jo
sbb
sbb
sbb
mov
sub
mov
and
dec
test
loop
pop
ds
pop
or
adc
mov
mov
add
decl
inc
jg
cmp
je
gs
leave
xor
xchg
dec
xor
cmpb
sbb
inc
inc
cmp
je
xchg
mov
cmp
dec
sbb
adc
add
fidivrl
dec
mov
dec
popa
aas
fiadds
mov
sbb
ss
ss
add
incl
lcall
sbb
mov
push
inc
sbb
push
bound
sbb
dec
push
aam
cmp
mov
pop
sbb
lods
sbb
jnp
mov
popa
and
mov
sbb
or
xchg
add
jo
dec
push
cmp
mov
or
push
pop
js
add
cld
mov
mov
addr16
test
ror
lret
test
incb
jg
sarl
pop
cmp
je
mov
sbb
and
and
mov
outsl
adcl
mov
rolb
clc
sub
mov
add
push
pop
inc
pusha
in
es
shll
pop
add
or
cli
frstor
fistpl
dec
movsb
jb
add
in
fldenv
inc
sbb
mov
adc
adc
xchg
ror
adc
and
add
shll
jo
cmp
inc
bound
jne
jmp
dec
or
sub
push
jmp
das
cmp
push
dec
sbb
fmul
xchg
cmpsl
test
aas
pop
add
fiaddl
pop
mov
and
dec
loope
cmpsb
push
stos
mov
lret
push
clc
ret
dec
mov
repnz
adc
inc
gs
sbb
sbb
nop
test
mov
or
ret
inc
xchg
cmp
je
push
mov
pop
push
add
push
add
lods
adcb
sbb
mov
or
dec
dec
or
les
jmp
cwtl
and
inc
push
fmuls
in
jmp
cmp
ja
lret
cmp
das
or
inc
inc
add
pop
mov
push
push
or
orl
inc
fildl
cltd
pop
add
jne
sbb
lock
leave
jge
clc
and
sbb
mov
inc
jmp
aas
dec
pushf
mov
pusha
movsb
shlb
popa
dec
and
test
inc
dec
test
enter
jmp
sbb
add
add
sahf
lea
jmp
dec
fldz
mov
add
inc
push
push
dec
push
jo
adc
test
pop
fcomp
shrb
push
mov
push
pop
lret
test
lcall
filds
cltd
test
sbb
loopne
fdivl
push
iret
fs
outsb
mov
mov
stos
jo
sbb
arpl
jmp
pop
arpl
xchg
lret
out
push
jno
fs
outsb
ss
je
shlb
jp
or
add
jp
mov
std
rol
inc
add
push
mov
cmp
ja
nop
icebp
fstpl
inc
cmp
xor
addr16
adc
cmp
popa
into
ds
jo
adc
xor
push
add
lods
and
jbe
lods
adc
mov
push
repnz
cwtl
adc
or
jbe,pn
inc
jl
daa
sbb
sub
push
loop
lods
xor
jle
sbb
xor
imul
or
call
cmpsb
in
and
cs
rcr
jp
mov
imul
arpl
fcomps
cmpsb
mov
adc
inc
sub
xchg
push
adcb
enter
inc
push
aam
pushf
enter
jl
pop
sub
push
cltd
fucomi
jmp
mov
test
adc
dec
lcall
std
data16
les
and
insb
sbb
add
jl
adc
adc
add
and
or
ret
inc
repz
jmp
xchg
pop
gs
jo
pushf
stc
dec
cld
arpl
imul
cmp
mov
ja
dec
adc
loope
sub
inc
inc
mov
adc
adc
fsubl
cmc
push
jge
cmp
hlt
inc
or
hlt
ret
xor
test
jge
subl
xor
ja
outsl
stos
push
add
mov
iret
js
mov
aam
dec
fcomp
xchg
pop
sub
mov
js
pusha
mov
dec
popa
mov
cli
repnz
inc
into
rcrb
cmpsl
mov
loopne
jg
adc
add
cmp
icebp
sbb
shl
mov
jmp
ror
das
pusha
loope
rcll
call
fcomp
shl
hlt
ss
inc
pop
fadds
in
push
jne
xchg
or
mov
clc
enter
sbb
adc
or
sub
push
push
inc
ret
incl
sub
cld
ret
mov
mov
sub
dec
test
xchg
test
pop
push
test
dec
gs
mov
xchg
add
fldl
arpl
icebp
xchg
inc
push
ret
testl
shlb
add
jecxz
lahf
push
xchg
insb
push
lea
loopne
out
and
fdivs
into
push
and
xchg
add
call
sbb
lock
stos
xchg
add
jae
mov
cmpsl
call
adc
sbb
jnp
std
lea
je
add
iret
xor
push
dec
cmpsb
push
movsl
or
pop
jo
jno
push
mov
mov
mov
mov
or
sti
sbbb
add
lock
dec
xchg
xchg
pop
stos
inc
and
or
clc
mov
cmp
inc
pop
push
add
or
push
mov
hlt
idivl
mov
or
mov
jne
push
repz
and
pusha
ficoml
movd
call
ret
test
orb
mov
test
and
pop
test
or
lock
jno
add
cmp
pop
cmpsl
inc
push
adc
loop
fsubrl
pop
sub
outsb
mov
or
sub
and
mov
push
or
add
pushf
aas
das
sub
dec
push
lods
lods
test
pop
cmp
add
inc
scas
mov
ficompl
test
push
movl
cmp
xor
imul
xor
ret
imul
loopne
inc
push
arpl
mov
sub
pushf
loop
adc
inc
loopne
sub
mov
xor
xchg
or
cs
shrl
pop
repz
xor
or
add
sub
xor
adc
or
xchg
popa
push
xchg
inc
xchg
sbb
and
andl
shll
or
loope
or
sbb
imulb
addl
into
mov
incl
mov
inc
dec
jne
lea
or
pop
out
cmc
shlb
sub
jb
call
mov
sbb
sti
shll
outsb
mov
xchg
or
std
push
hlt
mov
and
adc
movsb
lea
and
outsb
cmpsb
ja
sub
and
or
popf
insl
test
arpl
sbb
fdivrs
out
fisubrs
cld
ficoml
push
push
pop
sbb
test
add
mov
sub
push
cmp
sbb
pop
inc
inc
cld
and
sahf
pop
dec
and
pushl
and
dec
push
sbb
in
sbb
lods
jmp
and
je
and
mov
adc
leave
rol
or
mov
mov
lahf
test
pop
mov
mov
add
lea
sub
ja
lret
sub
call
add
jmp
cmp
push
and
and
pop
add
mov
inc
sub
or
pop
ret
adc
invlpg
add
ss
lock
mov
pusha
sbb
bound
or
ja
add
xchg
hlt
pushf
mov
pop
hlt
outsb
imul
mov
xchg
and
mov
int
lock
jno
loope
mov
dec
fnsave
flds
xchg
pop
insb
jmp
hlt
ret
outsl
das
adc
dec
pusha
mov
or
lahf
cmp
pop
stos
lods
mov
dec
shll
push
sub
aam
cmp
xchg
cmp
std
jne
das
sarl
add
jmp
sub
stos
aaa
je
or
cmp
iret
add
xchg
xor
xchg
add
push
cmp
add
popa
dec
mov
and
popf
cmp
aad
mov
mov
mov
call
adc
out
shr
inc
add
in
push
jmp
fs
sub
loope
add
fsubl
push
out
dec
xchg
adc
dec
push
inc
rolb
jnp
movsb
push
inc
jae
cmp
jbe
jmp
mov
test
push
imul
dec
cmp
leave
inc
xor
push
cmp
xor
loop
push
mov
aaa
jmp
xor
in
dec
loopne
sub
cld
jmp
mov
mov
cmp
mov
lea
inc
inc
adc
shrl
inc
lea
jg
loopne
loopne
xorb
xor
inc
inc
mov
outsb
push
std
fistpll
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
jno
add
inc
insl
push
outsl
out
add
xor
and
jl
inc
push
mov
aaa
rorl
inc
dec
jne
jbe
adc
out
test
fdivp
lret
add
jnp
xchg
jmp
cmp
and
rcrb
and
fsubl
je
loopne
adc
mov
adc
mov
mov
adc
int3
mov
adc
push
add
add
adc
sbb
sbb
insb
add
dec
shlb
adc
push
lret
mov
push
inc
fsubrs
fisttpl
insl
rorl
cmp
jo
insb
ljmp
xor
fnsave
pop
xor
mov
in
mov
ret
mov
out
enter
ja
loopne
or
pop
sub
jmp
xor
jg
or
mov
add
fwait
xlat
add
ret
ss
push
out
jo
add
arpl
xchg
push
sbb
es
jb
jmp
xchg
pop
and
mov
sti
imul
push
add
test
xlat
jecxz
lret
mov
lea
cltd
pop
movl
or
adc
loop
negb
outsl
cmp
es
pop
sahf
xchg
push
sub
pop
sbb
sbb
pop
das
mov
jge
mov
push
dec
int3
cltd
sbb
mov
sbb
sub
lret
xchg
int3
mov
and
sbb
sbb
or
pop
cmp
push
int3
push
cwtl
mov
jne
cld
mov
or
out
jle
or
push
cmpl
sahf
or
fs
pop
push
fisttpl
rolb
sub
loopne
dec
or
sbb
dec
xor
sub
js
xchg
add
sbb
mov
and
lea
inc
jp
in
or
cmpsb
or
ret
inc
push
pop
ret
jo
out
add
push
out
adc
xorl
sub
sbb
clc
pop
push
xorb
xor
je
push
sbb
js
mov
lcall
lahf
cmp
add
push
dec
jae
pop
jbe
pop
push
in
inc
lock
adc
mov
sbb
or
pusha
ret
loope
add
adc
ds
jmp
jp
jbe
jmp
push
ficomps
xor
push
and
push
pop
mov
testl
shl
push
sbb
push
cmp
shrb
lods
push
xlat
sbb
daa
mov
mov
ja
adc
dec
mov
push
outsl
lret
add
mov
jns
and
ficomps
xchg
call
push
sbb
cwtl
sub
push
sbb
inc
fisubl
mov
push
mov
or
aas
push
bound
sahf
fldl
out
inc
adc
mov
sub
test
cmp
inc
sub
inc
sbb
jno
cmp
call
cmp
nop
dec
xchg
lret
adc
cld
push
jo
jge
or
or
inc
pusha
sbb
test
cmp
js
xchg
js
imul
sbb
in
jae
bound
imul
jo
add
adc
lea
lods
xchg
in
inc
sub
rol
movnti
mov
mov
cmp
push
mov
rclb
ja
ljmp
or
loopne
add
repnz
and
not
movsb
pop
mov
js
iret
adc
and
shlb
mov
add
nop
clc
and
sub
and
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
lcall
push
ud0
test
dec
jp
cli
mov
insb
and
mov
mov
adc
test
and
mov
jo
fdivs
jge
jg
mov
push
addl
add
xchg
movsl
addl
fisubs
cwtl
bt
jnp
mov
pushf
cltd
pushf
cmp
push
cmc
pop
dec
rcll
or
into
movsb
shll
test
mull
addr16
dec
ja
fbld
imul
mov
imul
mov
jbe
mov
pop
pushf
cwtl
mov
and
fxch
rcrl
ds
mov
push
xchg
pop
inc
ret
jne
sub
add
test
aam
call
mov
dec
shll
add
movsl
dec
adc
lea
sbb
ret
sbb
mov
inc
inc
xor
sbb
or
lret
loopne
fcoml
out
iret
lret
mov
clc
or
lret
lret
popf
enter
shrb
jecxz
test
sbb
add
sarl
pop
dec
dec
cld
adc
sub
sub
jecxz
aam
xchg
mov
mov
fcomps
lea
mov
xchg
test
mov
adc
das
pop
or
push
jno
movsb
lock
sti
js
jmp
jge
jl
add
daa
mov
repz
dec
add
or
mov
bts
jmp
mov
xor
iret
push
es
mov
mov
sbbl
dec
mov
enter
add
add
test
test
lahf
sub
push
jb
xor
jns
imull
sub
push
adc
add
mov
call
sub
push
or
mov
pop
insb
sbb
push
jno
rclb
cmp
jns
xor
enter
nop
sahf
out
xchg
pushf
movsb
inc
shl
lods
mov
nop
jnp
sub
lahf
inc
loopne
call
iret
clc
or
lahf
or
mov
sbb
push
pusha
xor
and
xchg
cmpsb
popa
dec
cmp
xchg
adc
cmpl
adcl
and
lds
jle
adc
or
or
andb
testb
jle
dec
cmp
jge
inc
mov
sbb
test
lods
movsb
stos
test
in
orl
add
push
jo
adc
aam
inc
sbb
mov
and
pop
inc
cmp
add
add
and
lods
and
and
jno
mov
inc
cs
dec
jge
dec
and
hlt
scas
fnstcw
lods
fdiv
mov
js
int3
nop
xor
daa
dec
loopne
mov
dec
sbb
test
aam
jbe
or
inc
or
je
dec
push
push
pop
dec
dec
adc
rolb
cmpsl
mov
dec
push
add
enter
pushf
xor
jl
or
xchg
xor
sub
movl
dec
add
push
cmpsb
lock
insb
in
andl
jne
or
push
push
pop
addb
push
mov
inc
cwtl
loope
xor
push
aam
negl
adc
test
mov
cmp
or
mov
push
int3
inc
sub
dec
nop
jmp
add
daa
add
jno
mov
outsl
push
out
cmp
or
mov
mov
popa
jo
repnz
xchg
jle
test
ja
enter
subl
je
movl
enter
arpl
sbb
sbb
hlt
jecxz
and
adc
test
in
add
push
xchg
movsb
jp
jl
ljmp
xchg
adc
jno,pt
jno
pusha
xor
mov
cmp
mov
imul
les
dec
clc
andl
mov
por
lea
inc
inc
mov
jg
nop
sbb
lea
inc
cmp
stos
lahf
mov
pop
push
push
add
push
das
ss
push
jecxz
jmp
add
push
push
inc
inc
or
inc
cmp
xor
ret
insb
mov
movsb
lea
add
pop
or
add
shrb
sbb
add
popa
adc
inc
inc
jmp
out
mov
ss
or
test
or
addb
dec
loopne
or
addl
mov
add
fcoms
push
and
adc
pusha
adc
loopne
test
inc
cltd
adc
jbe
push
inc
xlat
fwait
and
enter
fidivl
mov
ret
or
pop
inc
sbb
mov
sbb
mov
nop
pop
divl
in
icebp
or
mov
push
ds
dec
inc
push
push
mov
outsl
xchg
enter
push
jne
mov
cmp
ljmp
jns
andb
push
jg
test
sub
pop
cs
add
add
mov
loopne
add
add
xor
je
shr
xchg
xchg
add
ret
and
xor
sbb
push
lock
adc
or
adc
and
add
or
inc
sbb
decl
les
test
pop
mov
pop
rorl
nop
xchg
dec
xchg
lcall
push
pop
mov
push
jg
sbb
xchg
je
jecxz
or
sti
xor
sti
rorb
popf
in
mov
clc
aam
inc
out
fadd
cmp
mov
cmp
mov
mov
cmp
xchg
cmp
repnz
pop
ret
movzwl
test
in
or
call
loop
push
or
pop
imul
sbb
imul
pop
ja
ss
jl
cmp
mov
out
bound
test
pop
sbb
pop
sar
pop
mov
cs
pop
sbb
mov
orb
cli
mov
fdivr
push
pushf
lret
clc
fsubs
loop
sub
inc
jae
decb
add
ljmp
fnstcw
pop
or
lret
and
add
sbb
test
xchg
push
or
mov
adc
sub
testb
arpl
loope
ror
lea
ja
mov
mov
movsl
mov
mov
mov
sahf
dec
hlt
out
sbb
hlt
hlt
stc
or
out
cwtl
je
or
inc
insb
je
lock
rcrl
subb
loope
insb
cmp
sub
sbb
sbb
pop
and
push
xchg
ss
or
xor
mov
enter
dec
xor
sbb
jg
jmp
lcall
incl
outsl
cmc
movsb
sbb
jne
js
stos
xor
pop
xlat
je
mov
jge
push
push
push
cmp
loope
jbe
pop
sub
or
sbb
jle
inc
je
pop
notb
loopne
ds
push
ret
add
loope
movsl
mov
fdivr
push
cmp
and
stos
dec
nop
and
jae
sahf
testl
popf
jbe
xchg
mov
mov
mul
lock
testb
pop
and
in
or
loopne
mov
fstps
sub
es
sub
jnp
rclb
mov
cmp
stos
mov
push
insl
cmp
push
loopne
js
xor
negl
inc
repnz
sbb
push
dec
movsb
imul
add
fdivs
jmp
test
sti
mov
push
mov
movb
icebp
adc
aas
push
pop
add
rcll
daa
jmp
hlt
mov
inc
divb
inc
mov
dec
mov
pop
and
cltd
mov
jecxz
cmpsb
mov
push
mov
addr16
jns
push
sbb
pop
dec
test
fwait
mov
cli
add
add
pushf
into
add
addr16
mov
push
outsb
je
test
ret
mov
sbb
jae
movl
mov
fildll
aaa
pushf
xor
lret
or
adc
add
xchg
sbb
or
xorb
jecxz
rclb
mov
push
add
xchg
not
sbb
nop
sbb
mov
jne
mov
cmpsl
cmp
out
jmp
cmp
jle
insl
cmpl
incl
add
add
int
mov
mov
mov
call
cld
adc
dec
inc
cwtl
sti
fcomp
fcmovnbe
div
mov
sub
jl
push
bound
ja
push
test
lea
xlat
cmpsb
and
lcall
adc
call
xlat
dec
sub
nop
cmpb
jne
ret
push
int
and
push
rol
outsb
mov
nop
inc
jae
addr16
or
mov
out
fdivrs
test
adc
push
pop
data16
or
hlt
sub
in
push
lret
jp
inc
cmp
test
mov
jne
je
adc
dec
sbb
jmp
out
push
cltd
jmp
aaa
int3
je
cltd
adc
mov
fmull
je
inc
add
push
jae
cmp
pop
call
jecxz
ljmp
mov
cmp
xchg
mov
or
sbb
dec
sbb
call
mov
or
jne
and
lea
lds
push
inc
aam
bound
out
xor
xchg
cmp
push
xor
jne
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
add
loope
ror
addb
shlb
xor
ss
js
fisubs
mov
loope
or
or
inc
inc
mov
outsl
add
sar
roll
je
gs
icebp
cmovne
push
jmp
inc
daa
mov
jmp
test
cmpsb
and
mov
mov
mov
sub
sub
pop
shlb
push
jp
xchg
dec
fdivrl
lea
cwtl
adc
stos
cltd
or
add
push
jbe
dec
andl
push
fdivs
out
add
jno
aaa
cmp
aaa
pusha
xor
fistps
rcll
jnp
movsl
push
sbb
mov
xchg
lods
add
cmpsb
add
int3
lock
jno
ss
push
pushf
adc
icebp
jl
mov
add
push
mov
xlat
adc
adc
mov
dec
cld
daa
pop
mov
add
jbe
mov
sub
movsb
cmp
lock
mov
andb
push
mov
test
movsb
mov
push
cmp
cwtl
push
sub
out
lcall
aaa
lea
mov
ss
adcb
lock
nop
js
add
push
hlt
mov
sbb
test
mov
insb
or
xor
xchg
lea
les
xchg
mov
pop
push
add
sbb
pop
mov
rolb
sbb
push
lcall
mov
push
adcb
push
mov
xchg
test
push
jb
push
mov
or
jl
push
pop
cltd
mov
push
jne
push
mov
adc
aas
out
jle
jo
dec
xor
pop
rcrl
xor
adc
dec
loope
in
les
push
dec
inc
sub
subl
popa
cmp
or
jmp
clc
jmp
push
pop
jne
orl
push
push
push
add
mov
insb
dec
arpl
lock
push
adc
lods
and
inc
cmpsb
mov
lock
xchg
push
xlat
add
xchg
or
test
das
add
setae
and
jg
push
or
or
adc
enter
add
bound
sub
or
jb
rclb
add
push
sbb
andb
mov
cli
push
add
into
cld
shr
mov
imul
mov
inc
and
dec
add
cld
jbe
sbb
push
xor
fdivl
adc
push
cld
or
mov
add
ret
adc
mov
cli
add
cmp
jbe
push
pop
mov
cmp
jne
subb
jae
mov
rcrl
imul
add
shll
pop
mov
lock
cmpsl
lock
lea
xor
mov
adcb
jbe
add
cld
add
pop
and
or
ret
cmc
xlat
dec
push
jecxz
mov
dec
adc
shlb
and
sti
add
xchg
pop
cmp
jecxz
pop
sub
jl
and
js
lcall
out
sub
cmp
or
and
aaa
pop
or
jne
sub
jmp
lea
das
cmp
mov
push
jle
shll
xchg
push
pop
dec
add
mov
movaps
add
nop
in
sbb
aam
ficoms
rorl
mov
or
adc
loope
ret
pusha
mov
mov
inc
mov
mov
insb
mov
ds
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
or
cltd
push
jne
xor
xor
jp
adc
inc
enter
and
test
cwtl
and
adc
fdivrs
lsl
scas
jp
push
inc
sti
divb
or
sbb
push
cmp
sub
dec
inc
adc
jne
test
xor
and
pushl
push
push
mov
es
add
sbb
int
cs
movl
enter
mov
adc
jge
jl
mov
cmp
or
push
out
cmpsl
adc
mov
in
inc
shlb
inc
lea
ret
imul
jne
data16
outsl
push
mov
cmp
mov
adc
lahf
stc
xor
stc
negb
les
inc
ret
fldt
cmp
int
adc
outsb
and
add
dec
stos
xor
or
adc
nop
popa
pop
jmp
orl
incl
lds
jae
lret
ret
mov
jno
mov
add
rolb
push
mov
imul
inc
clc
pop
and
pushf
push
lods
add
out
pop
lock
hlt
or
add
cmp
add
sub
lea
hlt
xor
push
push
iret
shr
sbb
rolb
pop
adc
lahf
inc
ljmp
out
mov
sbb
call
dec
loope
ljmp
add
adc
dec
rorl
inc
fs
aas
test
mov
mov
jecxz
adcb
test
push
dec
inc
jne
or
and
cld
ljmp
int3
les
pop
cmpl
xchg
push
mov
pop
shr
jb
xor
test
jo
cmp
add
mov
and
pushf
jle
and
dec
sbb
inc
xchg
fstps
cmp
cmpsb
stc
add
cmpsb
stos
lret
push
mov
int3
push
pop
and
mov
inc
stc
dec
add
xor
add
and
shl
jae
test
nop
dec
or
roll
push
jns
sub
add
repnz
adc
pushl
adc
xor
incl
pop
loopne
sbb
jbe
jae
adc
adc
jle
xor
push
dec
mov
pop
pop
cmpsb
test
adc
ljmp
adc
js
xlat
fildl
and
and
js
or
sbb
iret
adc
aad
or
inc
insb
xor
or
mov
insb
mov
sub
jl
and
or
inc
sub
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
test
cmp
movsb
pop
xchg
lock
cld
xor
cmp
fwait
cmp
je
filds
cmp
push
mov
je
add
fbstp
lea
dec
ficoms
add
xor
pop
rclb
dec
lea
mov
jnp
push
xchg
sahf
jbe
loopne
adc
mov
cs
decb
into
mov
out
cmp
or
push
xor
jns
dec
mov
or
add
adc
scas
or
insb
mov
ret
lods
push
test
lock
cmp
push
push
push
sbb
adc
jge
pop
shr
adc
aas
or
add
or
scas
pusha
push
mov
ficoms
je
fldcw
push
nop
cmp
and
decb
xlat
and
adc
dec
andb
call
sbb
mov
jne
jmp
repnz
mov
jae
xor
aaa
dec
add
mov
lock
cwtl
cmp
push
out
nop
mov
and
mov
cwtl
ficompl
inc
push
push
rol
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
shlb
xorl
mov
push
inc
dec
push
dec
xchg
stos
pop
jmp
repz
cs
into
jne
mov
push
xchg
sbbb
inc
test
inc
push
pushf
scas
jbe
loop
or
out
icebp
sbb
push
cmp
ljmp
dec
add
xchg
sbb
push
aad
ror
push
sahf
cmp
aad
push
out
and
mov
pop
xor
xor
repnz
jmp
gs
cwtl
popf
jp
mov
adc
bound
dec
push
and
push
clc
into
xor
or
dec
rorl
jmp
sahf
xchg
mov
or
das
pop
xor
sub
jge
stos
or
dec
pop
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
seto
or
sub
fimull
dec
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
jne
cmp
jp
push
ds
xor
add
gs
imulb
lea
cmp
mov
sti
add
pop
jb
or
xorl
cmc
xor
lock
xor
adc
lods
and
pusha
add
xchg
or
das
test
movb
push
lock
sarb
push
push
add
pop
dec
loope
clc
imul
andl
dec
imulb
movb
xor
push
add
prefetch
sub
jnp
ror
js
inc
inc
cmp
cmp
sub
add
push
bound
adc
sbb
sahf
insb
fcmovnb
xchg
je
push
je
adc
adc
fimuls
inc
push
pushl
mov
or
dec
push
jle
or
jmp
push
jnp
ljmp
or
fdivs
xor
lahf
pushl
orl
leave
xor
adc
in
jne
push
and
sbb
mov
std
pop
inc
cmp
sub
sub
push
lods
mov
pop
inc
jl
xlat
lods
jmp
mov
inc
push
push
add
jmp
lods
add
psubd
pushf
cmpsl
pop
jl
jge
xor
lods
fcoms
loopne
es
mov
mov
xor
mov
push
push
imul
xor
add
jmp
mov
insb
jl
inc
inc
addb
daa
les
inc
aas
xor
inc
cmp
lods
jns
xor
or
mov
mov
dec
rolb
mov
sahf
shlb
add
hlt
mov
mov
xor
add
mov
scas
jg
dec
adc
or
js
jge
jmp
jl
mov
in
int3
test
jns
xor
je
add
cmp
je
into
push
mov
ljmp
sbbb
loopnew
out
test
mov
sub
loopne
test
push
xchg
push
push
in
xchg
mov
jnp
scas
cmp
dec
shrb
jle
sub
adc
adc
fsubrs
or
mov
ret
pop
add
mov
xchg
arpl
sub
sub
or
rorb
ss
cmp
jb
es
scas
cmp
and
mov
hlt
enter
icebp
mov
push
jb
fistpll
insb
jne
jp
or
adc
lods
xor
and
jg
and
add
cwtl
andl
cmpl
cmp
fs
xchg
or
cmc
jmp
mov
les
nop
addb
std
pushf
cmpsb
mov
ret
daa
int
ret
in
shll
lea
cmp
cmpsl
inc
cmpsb
xchg
add
xchg
adc
jge
sub
pusha
sbb
sub
xor
lahf
call
test
xor
sbb
adc
cmp
neg
lret
sbb
call
addb
shlb
push
adc
adc
and
add
mov
mov
and
insb
stos
data16
push
lods
or
test
pop
es
add
popf
or
mov
into
rep
push
hlt
xchg
xchg
push
lods
and
lods
add
test
nop
call
cmp
lods
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
mov
insb
js
mov
sysret
push
xor
insb
push
mov
fs
sarl
mov
xor
mov
xchg
xor
or
cmp
ss
adc
xchg
xorl
sub
mov
iret
lret
mov
adc
push
pop
clc
outsl
and
xchg
ret
xchg
xorb
shrb
rcl
push
rcll
xor
mov
add
adc
or
fsts
or
and
andb
mov
adc
push
fbstp
sub
lods
inc
pop
das
adc
loopne
mov
or
sarb
xor
jnp
dec
bound
adcb
cwtl
push
pop
xchg
mov
fstpt
mov
xor
test
xchg
add
jge
push
or
and
jl
lcall
or
les
jne
jecxz
es
mov
stc
add
aaa
inc
cld
push
cs
mov
aaa
nop
add
cmp
jmpw
inc
adc
adc
and
rorl
ljmp
shll
enter
pop
ds
jae
ret
cmp
sub
shlb
xchg
dec
xor
and
cli
sti
jmp
std
mov
les
xorb
popa
ja
xor
pop
mov
mov
je
mov
pop
mov
add
push
in
aas
push
pop
sub
sbb
dec
mov
add
add
jno
je
or
pop
dec
or
lds
enter
sbb
fldl
ljmp
pushf
data16
call
sbb
jns
rorb
loopne
push
push
or
lret
sti
insl
leave
pop
jmp
jo
push
mov
xor
mov
pop
sub
das
sub
xchg
dec
sti
je
dec
je
add
and
sbb
push
cltd
adc
lcall
add
push
test
fcomps
add
mov
mov
test
sbb
pusha
or
andb
lea
inc
add
jno
mov
lret
xchg
adc
lock
pop
repnz
mov
js
in
xchg
pop
xchg
xlat
inc
adc
faddl
push
fdiv
fdivr
nop
xchg
fstl
push
shl
push
clc
and
or
sbb
inc
lock
dec
lret
roll
fsub
push
out
repz
out
addb
insb
arpl
sbb
and
push
cmpsl
nop
jne
add
adc
stos
enter
loop
sub
dec
inc
sbb
insb
or
push
xchg
dec
mov
xor
xor
fbld
add
repz
ds
bound
sub
mov
pop
push
inc
testb
clc
clc
add
mov
xchg
sbb
fcompl
add
int3
pop
adc
and
or
aas
push
subb
sbb
cli
clc
push
fmull
negl
jp
cmp
test
jne
push
pusha
inc
aaa
mov
adcl
imul
jns
or
sub
add
mov
push
pop
pop
aam
cmpsb
or
lcall
sbb
loope
push
add
or
mov
popf
ret
xor
out
mov
test
add
mov
lret
in
mov
call
test
lret
int3
call
mov
cmp
xchg
sbb
std
sarl
adcl
mov
sbb
clc
mov
pop
rol
add
jno
or
pop
add
jne
gs
test
loopne
sar
or
push
lea
testb
add
xchg
lock
lods
aas
decl
loopne
sti
cld
pop
mov
rolb
mov
xchg
test
inc
pop
push
shl
popf
call
ret
push
sbb
dec
adc
jmp
bnd
lods
inc
cli
loope
push
rorl
mov
or
int3
shl
sbb
jo
enter
gs
popa
lds
push
mov
or
add
mov
push
xor
jno
sarb
test
cmp
hlt
es
or
and
and
push
mov
xor
mov
xchg
mov
fcmovnbe
push
jb
mov
push
or
xor
bound
arpl
mov
dec
cmp
inc
sub
mov
inc
fstps
pop
and
fcomps
gs
jne
add
jl
cmpb
xor
cld
inc
add
movsl
in
push
aad
cmp
push
int
lds
imul
leave
ret
jo
pop
lods
cmp
lods
movsb
lock
mov
push
arpl
and
mov
shl
pop
pop
lea
in
xchg
in
mov
lret
stc
lods
jno
pop
call
pop
loope
add
js,pt
mov
push
fs
adc
sti
push
inc
cmp
mov
gs
in
int
in
mov
mov
testl
fisubrl
mov
xor
xor
jno
fldcw
adc
idivl
inc
orl
mov
mov
cwtl
lret
or
fiaddl
mull
jns
daa
mov
jbe
push
mov
sub
sub
hlt
std
add
lret
mov
fiaddl
pop
enter
mov
enter
sub
jno
sbb
sbb
jp
pop
pop
adc
mov
jle
into
je
test
pop
insb
mov
and
adc
outsl
in
mov
push
sti
jecxz
xor
adc
mov
out
xor
std
aaa
addr16
lret
xlat
das
lock
mov
fsubp
fdivr
adc
jbe
ret
jecxz
pusha
jmp
jle
test
shrb
push
add
jno
inc
jb
sbb
sbb
gs
iret
arpl
pop
fsubr
std
call
std
aas
mov
fadd
mov
jo
mov
dec
push
mov
fsubs
sbb
jge
mulb
fdivl
push
xor
mov
ffree
pop
divb
std
lds
sub
and
testl
xchg
test
mov
mov
fildl
fmuls
push
cmp
cmp
xor
jle
push
push
mov
mov
cld
mov
test
push
imul
mov
leave
cli
add
movb
aad
cwtl
pop
pop
shrb
jb
iret
dec
xor
rol
sbb
add
xor
mov
sub
mov
mov
dec
inc
cmp
cmp
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
inc
imul
test
mov
std
inc
sbb
mov
jmp
mov
popa
mov
jmp
decl
mov
mov
test
mulb
jne
test
sub
je
xchg
mov
add
mov
mov
std
pop
sahf
loop
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
adc
mov
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
enter
lret
insl
jns
lock
sub
js
inc
aad
xor
je
les
test
in
je
mov
movsb
adc
fidivrs
inc
push
inc
lret
jne
cmp
shrl
xor
hlt
or
sub
fnstcw
fdivr
loop
sbb
das
push
dec
pop
movsb
xor
jno
push
je
jb
popa
and
std
std
add
xchg
adc
popl
aaa
fsubrl
mov
adcb
and
aas
adc
nop
pop
leave
inc
add
push
jmp
cmp
inc
mov
inc
pop
xor
mov
lods
lock
pop
mov
shll
inc
and
push
jne
push
jno
loope
sbb
aas
xor
pop
pop
and
and
and
leave
movsb
test
and
and
mov
nop
pop
sarb
and
push
jb
loopne
aad
push
xchg
jno
push
xlat
popa
jmp
adc
sub
cmp
ja
ficoml
add
and
push
jo
push
or
or
lock
cmpsl
sbb
outsb
jo
outsl
cmp
ret
mov
xlat
lock
enter
dec
dec
push
dec
pop
lea
add
fsubrs
js
push
repz
test
int3
stc
adc
repz
movsl
call
mov
les
dec
push
push
cmc
int3
stc
bound
or
das
int3
stc
xlat
test
lret
mov
pop
and
xchg
out
jb
stc
int3
stc
aam
xchg
xchg
xchg
int3
les
out
xor
fstl
dec
push
ss
stc
mov
sub
dec
in
ja
sbbl
xchg
or
inc
dec
push
and
enter
jns
insb
scas
lods
test
lret
cmp
lcall
je
mov
xor
add
outsb
pop
pop
movsb
push
cmp
lret
outsb
cmc
loope
addr16
mov
insl
and
test
out
mov
in
test
inc
cmpsl
add
mov
mov
lret
inc
es
dec
imul
leave
icebp
xchg
stos
stc
pushf
pop
repz
stos
divl
enter
fisubrs
pop
clc
mov
dec
adc
stc
lcall
ds
mov
pushf
mov
imul
dec
dec
jns
sub
add
or
add
leave
pushf
movsb
bound
nop
sbb
aas
dec
jmp
test
sbb
adc
test
inc
cs
test
test
scas
nop
test
xchg
stos
pushf
pushf
nop
fs
inc
scas
nop
nop
pushf
daa
add
and
lods
or
out
lock
rorb
mov
je
jmp
dec
aaa
add
pop
aad
add
push
mov
out
in
aam
xorl
dec
jbe
cmpsl
mov
xchg
enter
test
lock
xor
pop
jnp
stc
nop
sbb
jg
adc
and
inc
push
pusha
or
pusha
jo
stos
dec
ds
adc
add
cli
jne
pop
sub
or
cli
xchg
je
and
mov
lret
or
test
lret
mov
pusha
movsb
fwait
sub
movsb
and
inc
add
jb
cwtl
cmp
adc
xchg
dec
rep
lcall
neg
pop
mov
sub
sahf
push
lock
push
lods
cmp
sub
mov
sbb
mov
pusha
or
adc
sub
or
sub
dec
adc
push
and
icebp
mov
push
pop
outsl
inc
or
push
jns
jl
pusha
jle
sbb
xor
dec
movsl
ja
mov
pushf
out
out
mov
hlt
sbb
shrl
or
and
cmp
lods
lret
pushf
enter
pop
mov
ret
nop
dec
mov
insb
outsb
pusha
into
and
call
lock
sub
sbb
clc
ja
cs
cli
xchg
in
add
sub
ret
loope
lcall
movsb
jge
cltd
pop
imul
ss
rclb
pop
jnp
cld
and
or
mov
fldl
push
push
ret
imul
sbb
movsb
mov
jae
push
mov
loopne
pop
add
movsl
leave
xchg
jo
xor
sub
ljmp
push
inc
enter
sbb
dec
arpl
push
mov
cmp
dec
or
aam
ret
inc
cld
dec
ljmp
arpl
push
sbb
in
dec
stc
roll
pop
cld
cmp
jmp
jge
leave
mov
push
scas
ret
cmp
mov
and
push
push
mov
and
sarb
push
xor
nop
sub
stos
adc
addr16
sarb
or
fildll
jge
xchg
xchg
or
mov
cld
push
mov
test
incb
outsl
mov
test
je
idivl
sar
xor
loop
ret
aaa
mov
push
push
mov
sbb
push
iret
add
xchg
cli
and
jne
xlat
and
xlat
lea
popa
add
sub
add
les
mov
push
mov
add
jmp
bound
adc
and
fsub
mov
out
or
insl
mov
pop
inc
cs
add
sbb
sub
das
jge
sub
test
test
orl
push
jo
mov
mov
mov
inc
push
in
inc
dec
pop
pop
inc
mov
xor
mov
sub
add
push
inc
in
xor
xor
mov
or
stos
filds
cmp
jnp
xchg
push
add
je
hlt
daa
clc
inc
push
xor
scas
or
sbb
jae
testl
es
ss
repz
add
jno
les
jmp
jne
jp
adc
nop
add
mov
lds
rorb
cmp
adc
or
sub
add
xchg
mull
psllq
sub
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
fwait
xchg
mov
xchg
adc
inc
inc
and
neg
fcmovu
fmul
and
scas
nop
jle
iret
mov
inc
in
sub
add
movntps
dec
jle
pop
inc
and
pop
jmp
pop
clc
mov
inc
inc
repz
movb
inc
clc
movb
dec
adc
and
arpl
push
lahf
lret
lods
leave
add
mov
adc
cmp
and
sub
cmp
rcrl
or
clc
out
sub
nop
xor
pop
pusha
loopne
adc
ret
mov
and
dec
leave
mov
jne
mov
pop
or
mov
and
or
lods
movl
stos
fwait
cmpsb
xchg
test
cmova
dec
sub
sbb
and
sbb
shll
test
add
lea
or
push
jns
lret
pop
outsb
clc
aas
pop
xor
push
lret
push
popf
test
test
ret
cmc
jne
mov
mov
add
lea
xchg
dec
inc
sahf
adc
adc
cwtl
sbb
sbb
dec
mov
popf
and
sbb
sbb
ret
xor
inc
or
inc
cmp
test
jb
pusha
jl
mov
orl
push
pop
loop
pop
les
cmp
jo
xor
adc
pop
add
test
jo
mov
adcb
out
add
lret
jo
xor
push
xchg
xor
mov
mov
add
sub
enter
add
pop
sbb
adc
or
fwait
daa
stos
add
push
sbb
add
jb
out
jo
push
push
jo
test
jge
in
daa
ret
sar
insl
sub
jnp
sub
inc
lock
js
adc
add
pop
adcl
xor
aad
inc
cmp
push
pop
pop
push
ja
cltd
mov
mov
fisubrl
je
mov
jo
repz
gs
push
pop
and
stc
add
movl
pop
ret
adc
or
shll
pop
mov
mov
rolb
loopne
mov
fdivrp
iret
inc
pop
lahf
push
jle
sub
or
mov
shl
push
adc
add
loopne
xor
ret
icebp
ljmp
jle
in
xor
jo
and
ljmp
add
jo
mov
les
and
int3
pop
inc
clc
cs
lret
push
out
cmp
je
imul
shlb
faddl
aam
xchg
pop
addr16
adc
cld
pop
and
inc
cmp
ret
and
xchg
add
pop
inc
mov
mov
ficoms
dec
push
mov
stos
and
setl
hlt
add
lods
hlt
icebp
push
dec
in
repnz
pop
pop
or
dec
add
mov
or
jbe
cmp
cmp
jb
in
xchg
nop
loope
fistps
pop
cltd
inc
sub
and
aaa
scas
inc
cmp
roll
popa
loop
and
dec
sbb
mov
out
mov
pop
jne
or
fcoms
push
bound
inc
inc
fistl
or
push
movsb
cs
sbb
hlt
adc
or
jp
adc
jb
inc
sub
or
pop
ficompl
pushf
lahf
push
push
sub
jmp
or
clc
lcall
inc
and
or
adc
pop
xchg
add
push
cs
daa
push
xor
push
mov
out
inc
and
pop
xor
sbb
movsl
mov
stos
pop
dec
and
loopne
cmp
or
nop
add
dec
add
adc
ja
inc
pop
cld
mov
mov
push
and
add
mov
push
or
ds
fwait
cmp
mov
test
or
mov
xor
orl
inc
sbb
pop
or
scas
rcr
in
sti
mov
adc
cmp
sub
and
testl
xchg
in
jp
inc
add
test
jmp
lock
xor
or
and
leave
and
push
sbb
cmp
xor
sbb
in
lock
loop
sub
cmp
mov
pop
cmp
enter
cmp
xchg
lret
push
test
cmp
sbb
push
cmp
xchg
pop
jmp
xchg
fs
xorb
pop
leave
push
sbb
cmp
lret
sbb
cwtl
mov
adc
frstor
xor
mov
push
cmp
dec
sbb
inc
icebp
imul
and
inc
pop
fstl
mov
pop
mov
cmp
mov
mov
jo
nop
mov
dec
mov
or
lock
shll
fs
fldenv
jne
mov
cmc
mov
pusha
jecxz
pop
add
cmp
mov
frstor
cmp
add
and
dec
je
cmp
pop
jmp
mov
mov
xchg
or
push
xchg
addr16
pop
mov
xchg
call
cmp
add
push
in
inc
mov
and
sub
scas
push
mov
test
add
decb
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
pop
mov
sbb
adc
je
je
inc
sub
pop
xchg
push
sub
sbb
push
push
dec
jmp
ret
mov
insb
rolb
repnz
cmp
aaa
xor
jo
dec
aam
insb
xchg
shll
lret
jno
pop
add
enter
push
mov
jmp
inc
xchg
adc
data16
inc
insb
jae
sbbb
sbb
dec
pop
movsb
pop
les
xchg
iret
std
orl
jecxz
push
sub
and
cmp
xchg
and
cmp
jbe
sub
push
pop
dec
bnd
inc
punpcklbw
pop
and
ret
insl
jmp
aaa
dec
jae
cli
cmp
dec
dec
mul
mov
mov
or
jmp
and
xor
imul
test
pop
rcrb
loope
rcll
add
cmc
xchg
imul
add
mov
and
aam
rcll
sbb
in
cmp
jbe
andb
hlt
testl
scas
cmc
iret
fimuls
push
sub
adcl
mov
mov
ret
mov
sbb
mov
dec
mov
xor
repz
fidivrs
adc
daa
or
adc
xor
sbb
ret
dec
add
cmp
in
inc
lods
mov
out
mov
nop
sti
imul
pop
sbb
push
add
adc
fdivs
adc
xor
cmp
pop
dec
or
ret
mov
mov
insb
inc
mov
adc
sub
fs
movb
mov
loop
xchg
add
inc
popf
and
or
or
or
xchg
add
inc
fs
xor
sbb
sub
jle
jo
push
ss
jmp
xor
push
inc
loop
addl
incl
mov
add
inc
pop
je
in
dec
push
pop
es
jb
je
and
and
orl
push
mov
mov
outsb
adc
xor
add
add
push
xor
sbb
add
inc
daa
lcall
or
push
cmp
leave
or
rolb
jp
shr
mov
inc
add
xor
inc
jne
int
pop
loope
pop
add
adc
adc
sub
inc
and
scas
sub
rol
cmp
dec
cmp
push
mov
aaa
dec
jnp
jmp
rcll
inc
mov
mov
adc
or
jge
jecxz
add
loope
lods
js
dec
sbb
dec
mov
mov
dec
shl
or
ss
lods
sbb
mov
lahf
pop
pop
movsl
ss
orl
les
clc
or
add
addl
mov
xchg
pop
mov
icebp
lea
and
jne
pushf
inc
inc
or
or
daa
jo
and
sub
push
jne
xchg
fldt
cmp
dec
inc
inc
or
jne
rclb
repnz
clc
adcb
hlt
xor
cmp
pop
xchg
jo
fbstp
pop
clc
xor
sbb
cld
push
sbb
cld
xor
imul
cwtl
ret
jmp
sbb
xchg
jbe
inc
addb
pop
dec
ficompl
or
or
out
int
pop
cmpsb
inc
pop
pop
or
push
mov
and
mov
ret
lea
scas
jg
xchg
pushf
xchg
push
pop
push
dec
jle
lock
add
mov
fwait
sub
mov
jmp
out
dec
or
or
or
or
imul
or
cmp
test
fstl
shll
js
mov
push
jge
mov
pop
mov
call
pop
loop
dec
xchg
jle
out
mov
xor
pop
and
jb
test
loopne
cmpsb
rcrb
and
push
and
dec
andb
loopne
clc
push
and
adc
fsubrs
sub
cmp
shlb
ficoms
addb
jle
imul
dec
jo
push
mov
dec
push
sbbb
bound
push
push
call
push
mov
add
and
shl
add
inc
loopne
out
inc
add
push
sbb
jno
idiv
lret
inc
or
inc
adcl
cmp
xlat
ret
xor
push
adcb
ss
xchg
andl
testb
or
rorb
cwtl
adc
jge
sub
aas
push
aaa
xor
rcrl
push
mov
jne
test
loopne
cmp
or
je
and
in
mov
dec
movl
and
mov
jmp
mov
je
scas
pop
notb
imul
sbb
push
fisttps
add
out
mov
push
xor
shlb
ljmp
addr16
mov
adc
xchg
daa
in
xor
push
xchg
movsb
loope
lock
dec
lret
xor
and
filds
pusha
mov
test
adc
loopne
or
into
jbe
lock
not
push
shrl
sub
sbb
pop
mov
les
jb
add
pop
xchg
dec
add
ret
sub
sbbl
and
dec
cmp
xchg
ds
mov
shrl
push
pusha
or
jle
push
scas
sbb
mov
popa
push
mov
dec
sarb
sub
xchg
andb
adc
mov
mov
mov
add
jmp
pushl
dec
leave
movsl
add
adcb
imul
and
jl
sub
xlat
mov
wbinvd
add
enter
inc
inc
adc
jl
jns
lret
nop
cmp
pop
test
lret
mov
sbb
dec
orb
call
adc
js
xchg
clc
fistpl
add
loop
fdivl
push
dec
jle
sti
imul
or
sbb
or
mov
fcmovnb
push
cs
mov
lods
jmp
xchg
rcrb
rolb
enter
push
sub
jb
add
push
or
add
pushf
sahf
lahf
push
pop
in
jmp
test
dec
mov
fsubrs
mov
pop
mov
or
mov
lahf
out
decl
cwtl
push
add
andl
jl
js
loopne
dec
ds
and
cmp
xor
add
and
icebp
lret
pop
mov
into
mov
cmp
cmp
dec
mov
aas
add
jmp
jmp
mov
lods
mov
rorb
sub
adc
leave
subl
mov
jnp
dec
mov
sbb
aam
sarb
ret
xor
cmp
xor
mov
sub
aam
fsubr
push
and
push
xor
push
mov
int3
mov
sub
jecxz
xlat
call
ds
scas
int
sub
adc
outsl
jo
push
stc
mov
fdivs
adc
sbb
or
inc
test
dec
push
imul
popl
mov
aam
sbb
addl
test
mov
aaa
adc
sub
mov
jl
push
mov
mov
push
push
das
push
jg
imul
jmp
jl
cmp
jg
inc
jmp
pop
call
pop
jbe
sbb
adc
jne
imul
sbb
push
or
jge
aas
sbb
and
fldt
cmpb
push
popa
push
jb
dec
ficomps
mov
js
jle
inc
push
mov
xchg
mov
adc
cwtl
cli
subb
rorl
idivb
xor
push
rcr
fidivs
cld
and
add
cmpsl
ja
popa
mov
mov
test
mov
cmp
pop
xor
fldcw
rol
push
or
and
sbb
pusha
lods
push
repnz
fstps
mov
and
or
inc
mov
outsl
inc
add
inc
add
out
add
je
testb
je
divb
sbb
in
sub
lods
fisttpl
scas
jo
dec
dec
inc
loopne
jmp
push
daa
stc
sub
mov
pop
and
and
jle
sbb
adc
dec
pop
or
jg
or
xchg
jg
add
or
in
xor
mov
pop
sarb
mov
mov
xor
dec
and
mov
sub
test
add
mov
fs
push
subb
adc
std
sbb
add
pop
cmp
and
out
adc
pushf
mov
and
lahf
call
out
std
jmp
mov
dec
je
sub
mov
adc
sub
push
mov
and
lahf
cmpsb
or
jne
inc
sbb
loop
jbe
cmp
or
cmp
insb
pop
les
dec
mov
ss
add
cmpsl
arpl
mov
and
xor
or
push
xchg
push
fs
mov
nop
lret
ret
inc
jecxz
or
add
add
push
jl
push
jl
dec
add
mov
or
add
add
outsb
or
xchg
js
sti
jg
aas
add
cwtl
loopne
lea
daa
sbb
pushf
sbb
mov
test
add
cmp
add
bound
push
push
adc
int3
adc
rolb
dec
sahf
test
jg
jae
xor
push
pop
jl
pusha
mov
mov
mov
sub
sbb
int
xchg
leave
xchg
gs
sub
fdivrl
push
adc
fneni(8087
aaa
inc
mov
and
add
cmp
dec
jl
gs
add
mov
push
js
sahf
addr16
lea
sbb
inc
addr16
loope
fdivs
aaa
inc
and
clc
push
mov
add
test
push
add
outsl
mov
sbb
fs
xchg
arpl
pop
cmp
cltd
and
or
inc
or
sbb
cmp
push
cmpsb
mov
jle
pushf
jg
cmpsl
mov
scas
fs
shlb
sbb
aaa
xchg
pop
xor
jbe
lods
adc
mov
repnz
xor
cmpsl
and
pop
lock
sbb
aam
inc
scas
rcl
cmpl
flds
jle
mov
adc
cmp
lret
mov
jne
mov
packssdw
pop
lock
icebp
sub
pop
rcr
xorb
insb
xchg
dec
jle
test
push
or
dec
or
movsl
xor
and
mov
mov
cld
or
cld
dec
and
sbb
mov
scas
ja
push
adc
loop
hlt
cmc
repnz
loope
sbb
fcoms
repz
ret
push
dec
jbe
lcall
mov
or
in
or
aam
push
js
hlt
mov
cmpl
aaa
outsl
sbbb
jl
push
jmp
cmp
xor
push
sbb
je
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
clc
adc
testb
pop
inc
add
je
mov
mov
es
add
mov
ret
repnz
xchg
or
mov
mov
add
in
loope
leave
repz
addb
jne
mov
clc
ja
fcoms
pop
add
jmp
xor
add
push
cmp
add
pushf
sbb
add
adc
sahf
and
push
jge
js
icebp
enter
ret
inc
andb
es
xor
cmp
popa
push
les
fimull
filds
pusha
aas
nop
flds
je
pop
cmc
and
rolb
cmp
sub
xor
add
adc
insb
mov
imulb
mov
mov
jb
pop
pop
adc
cmp
loope
xor
push
cmp
jl
mov
inc
adc
lock
dec
adc
add
jns
mov
lea
testb
jne
clc
push
mov
jl
xor
adc
in
push
ljmp
xor
mov
movsb
sub
or
xchg
add
xorb
in
dec
nop
sbb
stos
dec
xor
enter
icebp
cmp
scas
adc
mov
mov
mov
push
cltd
jmp
dec
pop
or
loope
xchg
insl
dec
incl
sbb
adc
mov
mov
xchg
fs
shll
and
xchg
xlat
mov
hlt
jne
jmp
fildl
ss
in
rcll
push
out
add
adc
movsb
out
mov
lock
dec
xchg
pop
jle
xchg
push
test
add
out
xor
inc
jp
pop
dec
movsl
mov
loope
movsl
les
adc
adc
aas
push
and
pop
mov
push
jle
or
and
push
cmp
leave
push
jp
pop
cmc
js
jecxz
dec
inc
push
lock
adcl
sbb
stos
push
mov
pop
hlt
outsb
subb
lods
jle
aam
adc
and
pop
adc
mov
and
adc
loopne
sbb
dec
in
xor
daa
adc
orl
mov
hlt
into
add
icebp
int
aad
add
xchg
cmp
or
rolb
outsl
nop
cmc
or
ret
ss
push
push
pop
loopne
add
pop
push
adc
std
std
jb
push
adc
mov
mov
lock
or
dec
xor
and
notl
xor
sub
rcll
lcall
lock
icebp
push
jnp
es
lret
ljmp
mov
ljmp
xor
lret
aad
out
or
mov
mov
mov
cld
incl
je
cmp
adc
cmp
jb
testb
adc
inc
or
add
sub
dec
rcll
mov
dec
jmp
inc
movb
cmp
cmpsb
xor
cmp
jb
cmp
cwtl
push
push
jo
sub
push
or
push
sub
in
push
inc
push
jnp
popf
adc
das
jecxz
and
imulb
js
outsl
jecxz
loope
icebp
push
push
out
jge
scas
mov
mov
cld
jle
fcmovu
scas
imul
pop
es
jmp
inc
movlps
jne
push
inc
cmp
adc
rcrl
push
jnp
mov
push
lret
rcrl
mov
push
and
and
enter
pop
sub
sbb
cmp
push
outsb
je
xchg
cli
adc
inc
sti
das
jb
jbe
lea
lea
or
adc
test
in
add
int3
cmp
outsb
ja
mov
sbb
aam
sti
jmp
popl
inc
sahf
shll
subb
je
cmp
pop
pop
pcmpeqd
icebp
mov
sbb
adc
add
pop
inc
inc
add
rorl
xor
fimuls
or
sbb
push
pop
xor
mov
jg
clc
or
rcrl
adc
vaddss
repz
jbe
cmp
xor
out
loop
pop
and
push
push
jmp
push
pop
aam
outsl
js
rorl
in
or
dec
test
addl
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
mov
dec
cmp
pushf
fmull
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
testb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
sbb
sub
sub
adc
or
ss
lock
hlt
and
lods
pop
sub
jle
or
clc
mov
nop
adc
cld
adc
or
sbb
or
pop
xor
and
or
aas
and
fwait
and
or
lods
or
sub
and
add
dec
inc
ret
cmp
add
add
dec
jne
xchg
mov
or
lret
sbb
sbb
lea
jmp
add
xchg
dec
sbb
iret
jb
sbb
cmp
xor
dec
sbb
xchg
test
es
inc
sbb
jbe
push
xlat
imul
cmp
pop
lods
sub
push
add
gs
or
and
pop
fiaddl
jne
in
daa
sarb
push
mov
fistps
fcmovu
pop
pop
and
push
add
add
ss
or
das
cmp
les
fdivl
or
testb
aad
adc
std
imulb
test
cmp
fmuls
or
call
in
inc
inc
sbbl
push
push
push
inc
loopne
dec
pop
lcall
es
negb
test
dec
pop
xchg
or
je
push
pushf
insl
nop
movsl
mov
push
dec
and
nop
jecxz
push
xlat
test
dec
push
inc
je
or
mov
inc
add
push
popa
push
add
jmp
loope
lahf
repz
arpl
adc
enter
add
xchg
xchg
inc
add
cmpsb
add
mov
dec
arpl
push
cltd
push
inc
leave
outsl
pop
fwait
or
cmp
add
mov
movsl
ss
adc
mov
inc
mov
xor
inc
xor
aad
push
test
mov
pusha
loopne
dec
xor
xor
adc
xlat
and
adc
xor
push
inc
iret
int
add
stos
dec
cmp
addb
fcoms
add
push
ja
call
les
adc
test
or
popl
loopne
dec
and
cmp
mov
adc
and
push
ret
jb
push
mov
push
add
jmp
enter
dec
pop
lea
xor
mov
psubb
loope
mov
push
and
sbbl
add
mov
lock
notb
sti
pop
das
adc
mov
and
jmp
fwait
mov
pop
rcrl
insb
shrb
xchg
ja
pop
mov
dec
sub
inc
xchg
and
mov
lldt
pop
shlb
cmp
xor
add
mov
std
or
fucom
xor
push
push
test
sbb
out
out
mov
add
sar
mov
or
pop
clc
or
dec
pop
clc
add
idivl
bound
iret
ret
inc
xchg
push
adc
push
imul
push
adc
mov
stc
popf
add
mov
inc
dec
jecxz
test
nop
xchg
inc
insb
add
dec
ljmp
add
xor
lea
sbb
cmp
dec
sub
sbb
cmp
popf
pop
addl
xchg
sbb
mov
les
mov
pop
cmp
in
lods
mov
cld
out
sbb
mov
mov
mov
cld
andb
test
jmp
push
sbb
sbb
loope
pusha
adc
sub
add
scas
insl
xchg
cmp
fsubs
cmpsl
mov
xchg
adc
mov
or
dec
dec
scas
inc
call
jmp
mov
or
dec
inc
lea
adc
nop
xchg
push
es
sbb
inc
loop
lods
lahf
mov
insb
jnp
dec
pop
or
int
pusha
fcoms
inc
xor
lea
sahf
mov
aam
or
jp
push
lock
xor
sarl
cmp
test
sbb
mov
imul
cmpsb
int
push
test
push
or
push
add
jne
imul
scas
mov
pop
jmp
jne
movzwl
inc
loopne
xchg
cmp
rorl
add
inc
int
popf
ficomps
push
jmp
inc
cmc
scas
loop
or
iret
mov
pop
jl
add
sub
jae
pop
add
pop
cmp
lods
add
lcall
into
push
jb
rclb
jl
inc
mov
sysenter
sbb
dec
add
xchg
sbbb
cwtl
outsl
sbb
icebp
cmp
jmp
xchg
lods
fucomp
mov
andl
fidivrs
cmp
loop
pop
decl
or
inc
ret
popf
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
xchg
jne
sbb
sbb
and
daa
jmp
or
pushl
jo
adc
cmpb
inc
cmp
mov
inc
cmp
jae
inc
inc
lods
push
orl
shll
movsl
std
pop
mov
inc
inc
sbb
or
sahf
add
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
mov
cmp
add
test
mov
jg
cmpsb
pop
lock
dec
cmp
or
sub
out
int3
out
mov
std
jno
add
fadds
inc
lock
mov
sub
add
mov
test
add
aaa
jo
lret
jmp
or
and
lods
pop
rcrl
or
lea
jo
ja
mov
pushl
lods
adc
repnz
mov
dec
cmp
ljmp
pop
cmp
adc
pop
pop
gs
xor
jnp
sbb
fbld
pop
addr16
inc
cmpb
mov
or
or
jae
mov
xor
test
cld
and
jo
cs
mov
and
or
leave
loope
ret
mov
loopne
xor
mov
roll
and
cs
xchg
inc
sbb
cmp
clc
xor
test
scas
inc
push
push
orl
sbb
jmp
sbb
xor
dec
int
dec
adc
mov
unpckhps
pop
pop
or
add
mov
cwtl
cmp
or
adc
inc
fstpt
inc
xor
cmp
push
push
pop
cmp
jno
pop
add
mov
iret
lea
fdivrl
sbb
push
and
mov
aaa
xor
xchg
cmp
lock
sub
and
dec
mov
ljmp
mov
mov
bound
out
pushf
cli
sbb
adc
mov
inc
mov
lea
inc
js
or
add
aam
jecxz
cmp
adcb
pushl
add
ret
and
inc
nop
in
sbb
sub
and
ja
or
mov
adc
movb
pop
notl
cmp
dec
pop
inc
inc
pop
negb
and
arpl
mov
cmp
lods
jbe
add
xchg
cmp
mov
adc
jge
les
mov
addr16
pop
dec
push
mov
xchg
subb
test
faddp
xor
pop
rclb
ss
bound
cltd
lret
mov
mov
mov
pop
adcb
push
pop
sarl
lods
pop
lods
pop
pop
pop
and
pop
mov
cmp
mov
mov
add
clc
je
xor
add
dec
dec
into
lcall
lock
xor
push
test
mov
mov
sbb
and
jbe
dec
sbb
jmp
push
and
lea
cmp
shlb
das
sbb
test
add
js
pop
sbb
int
push
push
add
ja
ss
popa
add
in
sbb
mov
inc
jecxz
clc
add
and
or
adc
push
mov
cltd
bnd
push
outsb
test
lret
jae
call
lret
lock
and
xor
dec
push
movsb
push
jecxz
int3
mov
sbb
jle
mov
pop
mov
cmpsb
xchg
ret
push
pavgb
pop
mov
jb
cmp
out
sbbb
xor
sbb
adc
jnp
fisubrs
adc
push
cmp
stc
rol
push
loope
cmova
dec
push
cmp
mov
inc
rcl
lcall
ljmp
test
sub
sbb
popf
mov
sti
mov
enter
cmp
sbb
int3
jne
and
das
mov
cs
sub
lcall
push
sbb
sub
das
or
sbb
xchg
cld
xor
adc
pop
clc
mov
xor
sbb
xor
inc
dec
outsb
cmpb
dec
in
int
ljmp
mov
subl
mov
insb
cld
dec
xor
cmp
dec
cmp
jbe
pop
fdivrs
repnz
das
dec
jp
cmp
leave
inc
rclb
dec
into
jl
mov
jle
lock
clc
jle
add
jmp
or
or
push
add
add
aam
js
stc
inc
xchg
pop
adc
xor
ja
and
jne
or
push
lcall
pop
adc
jmp
xor
imul
pop
filds
popa
cmpsl
add
inc
pusha
icebp
jne
and
bound
or
mov
xchg
and
leave
gs
ja
dec
movsb
add
mov
xor
orb
xor
mov
push
xor
inc
or
rolb
mov
pushf
pop
mov
idivb
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
jne
mov
cli
cmp
data16
pop
divl
mov
je
outsb
xor
and
dec
repnz
add
rorb
adc
push
in
add
cmp
or
or
shll
or
repnz
dec
mov
popa
lahf
notl
mov
xchg
test
and
or
je
xchg
add
or
or
nop
addr16
sbb
not
xor
loope
xor
and
add
and
shr
add
and
pop
shr
and
inc
fsubl
lret
and
inc
cmp
cmp
test
adc
cmp
adc
test
xor
xchg
cmp
out
mov
mov
inc
lret
sbb
push
inc
push
sahf
or
sub
inc
jmp
pop
clc
incb
dec
mov
fucomi
adc
lock
and
mov
sbb
popf
mov
jl
and
jecxz
dec
jae
cltd
jge
add
or
je
jns
movsb
jg
cwtl
cli
or
or
ret
push
jge
je
sbb
loope
sarl
lods
add
pusha
mov
pusha
loope
pop
sub
movsl
pusha
xchg
mov
adc
ficoml
pusha
cmp
frstor
imul
pop
sbb
fadd
add
lret
std
inc
testb
push
es
adc
mov
add
add
test
ret
clc
fisttps
push
jg
mov
adc
or
sub
push
es
mov
or
push
mov
cmp
and
sbbb
xorb
sbb
jmp
push
and
inc
add
adc
pop
xchg
movb
push
fld
add
or
pop
push
adc
mov
mov
adc
inc
sub
std
adc
jbe
in
dec
or
sbb
adcb
adc
mov
sti
lret
sub
mov
inc
xchg
sahf
inc
aam
xchg
push
xchg
cmc
mov
fsubs
mov
std
testb
add
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
mov
dec
repz
inc
test
int3
adc
rcll
div
add
es
sub
mov
jp
clc
lea
fstpl
loop
add
xor
imul
or
or
jbe
push
mov
inc
xchg
inc
movsb
lea
pushf
lods
shrl
testb
or
repnz
xor
test
movsb
test
insl
in
inc
sbb
call
pop
orl
fchs
pop
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
roll
aam
push
inc
add
mov
decb
push
and
jbe
lods
dec
push
pop
sub
movl
push
push
add
mov
jg
add
movsl
add
jb
pop
test
push
decl
push
jmp
or
loop
push
push
out
inc
push
insl
outsb
pop
addr16
enter
add
mov
icebp
es
xchg
mov
add
sub
je
je
jl
daa
pusha
inc
push
or
adc
fisubrl
mov
hlt
adc
addl
add
sub
mov
push
xchg
pop
xor
stos
sub
rcrl
pop
or
adc
add
mov
out
call
dec
inc
and
mov
add
rorb
xor
int3
add
mov
pusha
xchg
or
pusha
and
insb
dec
sbb
mov
scas
adc
mov
pop
mov
fcoml
pop
mov
lock
add
imul
orb
in
sbbb
add
inc
sbb
sbb
or
mov
icebp
and
and
adc
sar
adc
push
dec
and
popa
sbb
mov
test
jnp
xorb
adc
add
sbbl
test
mov
int3
pop
cld
and
wbinvd
clc
jge
dec
fsubl
adc
add
push
adc
cmpps
sahf
xor
push
sbb
lock
or
rcll
cltd
jge
and
xor
mov
popf
xchg
jno
pushf
mov
sbb
dec
add
out
mov
pop
addr16
pop
fadds
into
or
test
mov
das
pop
das
ss
cwtl
sbb
imull
jnp
imul
pop
push
dec
in
or
mov
mov
test
aam
gs
or
stos
inc
add
or
cli
add
fwait
push
out
mov
push
cmpl
or
testb
push
add
cltd
sbb
fsubrs
sub
ljmp
sbb
sub
dec
aad
inc
and
xchg
mov
push
test
inc
flds
and
push
push
inc
repnz
push
or
insl
or
push
mov
add
enter
fwait
ja
or
adc
sbb
les
inc
adc
and
push
loope
outsl
jle
call
mov
cmp
xor
push
dec
pop
and
inc
je
jp,pt
dec
sbb
adc
ldmxcsr
sub
cmp
mov
and
xchg
or
movsb
ret
repz
lcall
push
mov
aas
inc
adcb
mov
push
push
insl
jmp
inc
mov
lea
and
fidivrs
loope
inc
shlb
insb
adc
or
or
sbb
out
insl
push
push
mov
pop
movsb
nop
test
push
mov
lods
addl
enter
inc
dec
enter
int
mov
dec
adc
xor
fsubrl
aam
add
jo
dec
es
adcb
xchg
lcall
mov
sti
xor
repz
shlb
sti
jbe
sbb
sbbl
mov
add
jnp
adc
or
or
mov
mov
or
sbb
adc
pop
xor
stos
mov
xor
lcall
lahf
lcall
adc
subl
pop
adc
ret
mov
or
cmpsl
int
and
push
mov
or
jo
dec
outsl
add
dec
push
or
test
and
push
out
sub
push
or
sbb
sti
add
push
mov
inc
mov
mov
pop
test
jne
or
jl
xor
hlt
mov
stos
fwait
sbb
stos
test
sub
popa
insb
sub
dec
cmp
inc
out
clc
orb
cmc
aaa
pusha
mov
cltd
and
add
cmp
pop
imul
add
lea
pop
mov
clc
subb
inc
shl
mov
pop
incb
aam
loop
rolb
fldl
adcl
repz
pop
shr
outsb
push
cltd
insb
pop
and
mov
out
mov
dec
or
inc
insb
sub
jae
outsl
fwait
dec
jbe
dec
mov
add
test
cmpsl
sub
xor
cmp
sbb
cli
out
pusha
sub
adc
loop
or
jb
incb
jae
mov
add
dec
mov
adc
jns
sub
pusha
add
or
or
imul
add
hlt
mov
xor
sti
cmp
dec
xchg
lods
ret
or
pusha
jp
js
jg
fs
push
aam
xor
cmp
xor
push
sbb
lods
mov
lods
jg
mov
out
and
push
cld
not
rcll
aas
in
popf
je
loopne
mov
and
pop
ds
push
or
adc
jbe
jne
shl
and
or
adc
mov
jl
outsb
sub
inc
shl
mov
jl
xchg
adc
xchg
aam
and
push
dec
movsb
jge
popa
sbb
push
pop
in
mov
add
cltd
pop
hlt
test
or
and
adc
data16
sub
mov
cmp
shll
cmp
setle
xor
dec
mov
pop
push
or
sub
lcall
mov
lcall
inc
lock
sbb
orl
xchg
loope
cld
xchg
leave
inc
mov
cmpb
lock
mov
inc
add
or
jmp
or
ffree
xchg
cmpl
gs
xor
mov
test
rcrb
and
mov
add
nop
data16
ret
jge
xor
add
sub
popa
nop
jle
shl
out
roll
push
sbb
and
or
in
flds
add
in
inc
and
sbb
and
add
xchg
lds
vandnpd
push
and
pusha
enter
adc
adc
enter
sub
cmp
das
jns
adc
adc
les
adc
mov
adc
sbb
incl
lcall
cwtl
mov
xor
push
adc
into
mov
and
pop
dec
shll
pushf
mov
inc
movswl
mov
shlb
mov
mov
or
cmp
in
jne
inc
jmp
add
xor
or
xchg
add
or
aam
test
jmp
ja
mov
dec
jmp
fs
imul
rolb
mov
jle
sub
addl
inc
popf
into
jmp
ljmp
jmp
xor
or
cltd
cmpsl
dec
mov
lods
jbe
mov
adc
fsubrs
or
mov
mov
aas
push
inc
jle
cmp
push
xor
lock
into
push
jmp
dec
push
mov
lds
fcoms
jbe
adc
into
sub
jl
add
push
jmp
xchg
adc
mov
mov
jae
dec
mov
ret
dec
mov
mov
sbb
push
pop
jge
sti
sahf
xorl
mov
push
xchg
mov
movsb
jne
dec
dec
or
lahf
jae
imul
sbb
or
jl
and
or
mov
filds
mov
out
push
sub
mov
or
lods
jnp
clc
orl
pop
push
clc
add
mulb
stc
sub
cmp
push
stos
push
test
mov
and
call
in
inc
sti
mov
test
nop
mov
push
ss
aaa
inc
inc
jbe
testl
add
mov
jmp
fidivrs
xchg
xchg
hlt
pop
push
in
push
jmp
fildl
fst
cld
push
sbb
and
sub
or
cmp
lahf
mov
jmp
mov
jmp
push
pop
int3
push
adc
icebp
xor
mov
sbb
into
dec
mov
push
sub
ret
jne
xor
inc
dec
pushf
xor
pop
add
or
jge
add
imul
inc
sbb
dec
les
int
test
cmp
sub
jge
mov
pusha
loop
popl
cmp
mov
jge
jle
add
dec
in
into
sub
xor
jne
sbb
lods
pop
lods
adc
inc
out
dec
cld
add
sarl
imul
cli
push
inc
mov
sbbl
rorl
test
add
mov
dec
mov
add
pop
mov
xor
lahf
idivl
sbb
push
xor
and
and
and
pop
mov
nop
shrb
jge
pushf
andl
adc
sbb
std
mov
or
or
mov
pop
mov
pop
es
scas
movb
testl
mov
adc
les
test
int
pop
inc
into
jne
inc
or
cmp
lods
mov
jne
hlt
int3
add
jne
add
jmp
mov
mov
jp
test
rcrl
pop
or
adc
sahf
inc
pop
stos
lock
bound
shll
mov
jp
orl
add
lock
sub
in
push
add
sahf
sub
sub
xor
stc
jg
add
mov
xchg
and
dec
and
add
outsb
mov
shll
hlt
push
add
mov
lock
add
shl
js
push
out
mov
push
cld
fnstsw
or
adc
inc
mov
les
aaa
add
notb
data16
pop
mov
ss
idiv
dec
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
inc
or
jne
insb
mov
ret
push
push
pop
movsb
cmpsb
mov
and
mov
mov
jge
cmp
add
fcmovb
sahf
mov
sti
pop
cmpb
or
in
fiadds
push
call
or
scas
fidivl
jl
fidivrl
jb
adc
inc
jno
push
fmull
pop
nop
dec
ja
cmp
add
cmp
mov
mov
xor
into
jmp
scas
xlat
jge
mov
xchg
rolb
add
xor
popa
and
mov
cmp
int3
mov
xorb
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
ret
or
adc
push
imul
add
sbb
pop
push
dec
repz
inc
add
cli
push
push
cmp
enter
add
mov
out
into
jge
inc
sbb
mov
pusha
stos
push
aad
mov
jmp
inc
pop
or
sub
sub
enter
jne
cmp
add
xchg
jle
inc
scas
inc
mov
mov
int
ss
mov
adc
mov
pop
cmp
adc
aam
in
ret
push
or
mov
in
mov
adc
lret
cs
or
ficoml
loopne
ss
cmp
je
or
out
aas
sar
rorb
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
inc
shll
pop
add
fcomp
add
mov
addr16
jo
mov
mov
outsb
fisttps
les
or
sub
adc
or
add
out
cmc
std
and
push
push
dec
imul
inc
jnp
add
push
adc
jns
movsb
jno
xor
and
jae
pop
add
arpl
test
mov
addr16
das
popa
pop
xchg
mov
dec
std
cmp
and
fsub
nop
mov
or
add
inc
and
and
je
mov
sub
hlt
or
lahf
push
cmpl
mov
clc
add
mov
mov
loop
aas
movsb
arpl
ljmp
movb
lea
sarb
jo
lcall
clc
lds
mov
es
mov
sbb
loop
lock
call
icebp
pop
inc
pop
lret
jmp
sub
add
sub
jno
xchg
pop
xor
rcrb
dec
add
inc
inc
dec
inc
out
adc
xlat
or
jns
les
sub
cmp
ficomps
pushf
push
pop
xchg
cld
xor
push
or
add
push
pop
sub
add
add
mov
add
pop
dec
jle
movsl
xor
les
pop
test
xor
addr16
push
imul
sub
add
sbbb
jo
push
ret
jbe
pop
lcall
adc
jge
push
add
push
mov
rcll
adc
add
lods
mov
jge
shlb
cmp
add
xchg
push
xor
add
inc
xchg
and
enter
add
add
xor
push
mov
mov
jle
and
xchg
sbbb
jo
fwait
or
icebp
fs
notl
js
jmp
pop
cs
jmp
cmpb
adc
dec
cltd
xor
rorb
dec
xchg
add
adc
inc
ljmp
addl
lret
addl
mov
stos
lret
inc
jecxz
mov
fldcw
loopne
xor
ss
lock
jmp
add
testb
les
loopne
test
push
lds
jg
out
pusha
testb
xor
or
mov
mov
add
clc
push
addr16
sbb
mov
dec
inc
cmp
leave
and
add
mov
xchg
jo
gs
je
imul
dec
fdiv
bound
mov
neg
sbb
jecxz
ja
mov
mov
jg
ret
daa
xor
or
jne
pop
cmp
rcll
add
sahf
add
mov
or
dec
pusha
repz
movb
ss
xor
fdivl
xlat
or
mov
mov
xchg
popa
mov
push
sub
inc
push
or
push
movswl
inc
jecxz
mov
and
mov
enter
cmp
add
mov
insl
cld
add
dec
shrd
cmpsb
adc
push
push
jle
cmp
imull
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
and
cmp
or
insb
incb
add
or
push
push
xor
jo
and
sub
lcall
ret
mov
push
sbb
shrl
pop
add
sarl
jg
jb
push
sub
mov
or
fidivrl
rorl
fs
and
inc
shll
push
push
rclb
jns
add
stos
adc
mov
jbe
not
jmp
cmpb
or
push
jg
sahf
xchg
hlt
lods
jb
push
dec
repnz
mov
pop
or
or
out
inc
lcall
add
daa
jne
add
mov
test
push
cmpsb
stc
mov
add
jecxz
fisubl
sub
push
scas
movb
mov
jbe
jbe
cmp
sbb
jne
loop
pop
movups
call
mov
mov
and
sub
jbe
xor
cwtl
or
andb
add
xchg
inc
sub
sarb
mov
push
or
sarb
rorb
cs
push
sbb
pop
movsb
add
adc
popf
jo
ficompl
add
shlb
pop
jo
add
nop
test
jl
cmp
je
xchg
dec
inc
push
je
push
shl
jne
icebp
or
cmp
cmp
test
jbe
adc
pop
imul
cmp
add
adc
loopne
test
adc
push
insl
mov
cwtl
out
push
jmp
insl
cmp
jecxz
cld
cld
jl
jle
mov
or
mov
rol
push
cmovae
in
loop
add
pusha
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
sub
cmp
ss
inc
popa
je
inc
je
dec
cmp
pop
leave
psubusb
xor
ss
pop
mov
cmp
test
jp
or
dec
lret
mov
and
test
add
lcall
inc
call
dec
filds
push
pop
clc
fstps
or
mov
or
push
xchg
inc
push
push
mov
inc
movsb
iret
rol
dec
shrb
pusha
mov
xchg
dec
ret
inc
sbbb
loop
inc
arpl
adc
xor
inc
movb
dec
aas
mov
subl
addl
jmp
xor
push
cmpb
add
mov
jne
jp
dec
and
pop
gs
bound
mov
jmp
add
hlt
adc
xchg
cmp
mov
pop
cmp
and
jo
sbbb
gs
cmp
lahf
xor
dec
cld
lahf
dec
push
sub
or
mov
push
and
jo
insl
pop
sbb
push
popf
ret
sub
sub
pusha
add
sub
ss
mov
andb
lock
outsb
xchg
ss
or
cmp
sub
shlb
push
jl
pop
lcall
add
xor
cmp
mov
pop
iret
push
shlw
pusha
adc
cmpl
pop
lret
pop
popa
sbb
cmp
pop
inc
pop
jo
dec
push
mov
les
adc
aaa
lret
cli
and
or
jp
sahf
inc
test
rolb
mov
popa
shll
dec
or
out
pop
rolb
mov
pop
or
push
fdivs
jge
pusha
cmp
adc
mov
fnstcw
cmp
add
popa
pushf
cmp
fdivl
xor
lock
xchg
repz
pop
cmp
mov
mov
sbb
mov
xor
in
nop
add
mov
adc
xor
shrb
lret
data16
mov
hlt
jmp
or
jmp
divb
sahf
jle
xchg
or
ljmp
adc
add
shl
sbb
push
sbb
int
jae
shrl
dec
fst
jne
test
sbb
les
sbb
mov
adcl
add
adc
mov
mov
mov
jne
in
xchg
jecxz
inc
das
inc
lds
ss
mov
cmpsl
inc
data16
mov
or
dec
or
or
into
push
mov
adc
insl
aad
add
test
fnstenv
cld
cwtl
adc
fs
jg
push
lods
xor
mov
dec
mov
add
or
push
add
adc
insl
push
jecxz
push
hlt
fsts
xor
int
cmp
sub
push
adcb
mov
rcl
clc
jae
dec
repz
loope
movl
lock
xlat
call
loopne
cmp
inc
push
nop
inc
adc
sbb
je
arpl
paddusw
das
add
call
sub
push
cmp
outsl
arpl
adc
add
daa
sbb
inc
jmp
xchg
inc
push
push
addl
add
push
lret
in
ret
outsb
loop
mov
cmp
fldcw
popa
inc
test
insl
mov
sub
mov
outsl
fadds
push
and
scas
subps
dec
aam
test
cld
jo
xchg
mov
out
mov
or
das
adc
cmc
jnp
testl
shl
jl
test
dec
push
repz
inc
mov
mov
cld
sbb
movsb
push
sbb
test
adc
pop
mov
or
or
sub
adc
fs
mov
cmp
xchg
cmp
jmp
rcpps
sbb
adc
pop
fcomps
add
data16
ljmp
out
mov
loopne
mov
ret
arpl
push
sub
add
test
or
js
adc
movsl
andl
sbb
test
xor
pop
call
rorb
inc
xor
adc
inc
inc
xor
jb
sub
stos
in
xchg
icebp
insb
mov
mov
xorl
mov
sbb
sbb
push
lock
add
es
jmp
jp
adc
pushf
popa
mov
and
and
lea
negb
insl
inc
sbb
pop
cmp
jb
jno
adc
jo
inc
aam
sbb
cmp
sbb
push
add
or
dec
popf
or
shrb
lret
std
inc
dec
cmp
lea
or
es
add
sahf
and
leave
or
push
testl
fcmovb
jmp
shr
or
mov
add
pop
sti
testb
or
bound
scas
push
sar
in
stos
mov
cmp
sbb
push
add
or
test
xlat
out
jne
fwait
push
adc
fnstcw
inc
push
or
imulb
ds
in
cmp
inc
dec
add
lea
mov
shr
cmp
mov
adc
or
mov
cs
or
push
jp
adc
adcb
cltd
repnz
into
xchg
dec
sbb
sub
dec
enter
addb
push
pushf
push
out
mov
cmp
xchg
ret
insl
or
cmp
ficoms
or
and
adc
iret
shl
orl
adc
mov
xchg
push
add
incl
cmp
loope
or
test
test
adc
test
je
dec
call
mov
cmp
nop
cmp
cmpsl
cmp
popa
js
pop
fsubl
data16
mov
xor
and
leave
mov
dec
cmp
or
xor
cmpsl
push
cld
xlat
out
add
add
call
or
ss
adc
adc
mov
xchg
mov
cmpsb
sahf
inc
add
adc
dec
jbe
fldl
mov
jle
subl
ja
cmp
add
pop
fcomp
popa
imul
inc
xor
mov
inc
jbe
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
push
push
test
or
push
push
xchg
adc
or
addb
push
adc
inc
push
push
mov
je
enter
and
cs
iret
ds
inc
adc
fldcw
and
and
push
dec
cmp
inc
aam
rclb
sub
and
push
rorb
inc
adc
loopne
andb
call
jbe
dec
add
mov
adc
enter
out
add
loope
into
adc
push
sub
flds
and
shll
jns
fisttps
test
je
mov
dec
jo
or
test
jmp
and
dec
jnp
pop
mov
push
outsl
das
pop
mov
movsl
xor
rol
ljmp
mov
add
aam
bound
push
jp
or
jmp
and
and
pop
test
push
xor
in
cld
pop
std
and
jge
inc
inc
div
fdiv
fiaddl
adc
adc
sbb
xchg
xor
adc
stos
mov
sbb
push
push
imul
rcr
xchg
movsl
icebp
sbb
adc
xchg
adc
sbb
test
test
test
push
jbe
fwait
dec
jne
pop
pop
pop
fisttpl
fldcw
adc
xor
or
jae
mov
rcl
ljmp
shr
test
xor
jecxz
cmpsl
outsb
push
idiv
and
mov
je
testb
mov
ret
dec
xor
outsl
mov
adc
inc
fidivl
adc
sub
jle
pop
es
xchg
push
jge
dec
and
jnp
je
push
or
into
jbe
jns
aas
push
loopne
adc
dec
adc
xchg
sub
bound
mov
add
push
or
lret
adc
in
inc
dec
data16
dec
sbb
dec
cltd
orb
xchg
mov
mov
ret
and
pop
or
push
orps
mov
mov
push
loopne
xchg
cs
int3
push
cld
fsubl
out
and
dec
pushl
dec
in
add
mov
ss
jg
xor
lret
shlb
adc
and
push
in
leave
jne
sub
jp
testb
fisttps
enter
sub
leave
je
jmp
xlat
adc
mov
mov
mov
out
es
mov
je
jmp
and
and
push
cmp
ja
cmc
iret
sti
add
out
adc
cmp
jne
inc
mov
xor
adc
mov
call
rcrl
add
mov
sahf
fcmovbe
push
add
ja
and
pop
shrl
lahf
mov
inc
jmp
sbb
add
into
scas
sbb
les
xchg
ret
jmp
neg
je
test
mov
iret
push
push
addr16
icebp
sbb
mov
aam
adc
call
pop
popf
or
and
outsl
mov
push
cmp
jne
sub
add
std
add
pusha
adc
jle
aaa
push
out
in
jmp
mov
cmpl
movsl
add
dec
scas
popa
fstl
xlat
mov
jno
cmp
push
lcall
xor
sbb
sub
pop
mov
inc
xchg
inc
mov
xchg
sub
sub
xor
or
or
mov
jns
push
imul
push
push
adc
les
xlat
mov
sbb
inc
pop
xor
or
jle
mov
add
dec
mov
push
iret
repz
rcl
rcl
aad
fwait
iret
repz
fcomp
fstpt
add
mov
data16
movb
jmp
or
xchg
cmpb
ret
mov
int3
outsl
add
lds
and
add
in
mov
mov
add
push
inc
push
add
fistpl
aas
fstpt
push
add
push
divb
in
test
xchg
fs
call
icebp
push
ja
cmp
mov
sub
xor
push
push
add
bound
add
add
push
imul
xor
imul
or
mov
sbb
lea
sar
xor
roll
fsubs
or
neg
lfs
pop
dec
loop
out
loop
sarl
mov
pushf
ja
add
sub
adc
sub
test
adc
mov
ret
mov
sar
fisubs
addr16
xchg
roll
sub
mov
inc
add
dec
inc
and
decl
sub
fcmovnbe
mov
or
test
lock
fucomp
shll
add
fcmovu
popa
mov
and
lea
pop
sbb
subl
and
xchg
cs
add
push
push
test
arpl
pmulhuw
ljmp
xchg
cs
add
sbb
mov
jne
mov
push
jp
shl
test
rolb
mov
mov
push
lea
and
fisubl
dec
xchg
mov
push
push
or
cwtl
dec
push
xchg
mov
movsb
sub
or
ret
movsb
sub
inc
repz
addl
mov
sub
mov
mov
test
mov
mov
sarl
outsl
jne
and
sub
call
add
cld
or
and
mov
or
push
push
xchg
add
ds
lret
ljmp
mov
clc
popf
int3
or
mov
shrl
in
out
sbb
shl
jmp
movsb
mov
pop
dec
add
lock
cs
lock
sbb
inc
andb
push
cli
div
and
adc
imul
or
push
sub
push
jnp
or
sub
mov
mov
push
or
mov
inc
and
and
dec
leave
inc
icebp
js
scas
fnstenv
xchg
mov
push
dec
imul
rolb
lock
xchg
mov
xor
or
inc
shll
clc
out
adc
xchg
mulb
jb
inc
jb
sbb
sub
add
hlt
adc
sbb
inc
pop
adc
sub
pop
insl
inc
shlb
fdivrs
aam
fs
ss
inc
test
dec
ss
test
sbb
sub
fmuls
xchg
rolb
xor
call
or
push
cmp
cld
inc
sub
lea
fcmovu
mov
push
lcall
lods
rolb
mov
mov
cltd
add
mov
clc
sbb
roll
sbb
negb
and
enter
test
stc
xchg
lret
jge
or
add
jge
es
sbb
sbb
and
movsb
adc
cmp
jne
repnz
and
pop
xchg
movsb
in
inc
fimuls
push
movsb
or
mov
adc
scas
push
outsl
add
sub
insb
sbb
mov
movb
ds
mov
inc
mov
push
add
push
nop
cmp
dec
sbb
adc
cli
es
out
adc
ret
add
or
stos
ret
shr
pop
add
hlt
cmp
mov
jb
push
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
rcrl
loopne
and
fadds
dec
or
lea
push
and
into
movb
mov
push
adc
sub
push
sti
push
int
aas
and
xchg
mov
xchg
or
or
mov
add
sub
add
into
out
enter
js
cs
push
sbb
jbe
xabort
fimull
js
add
enter
sbb
mov
jae
add
xchg
lret
negl
clc
mov
mov
add
push
adc
add
into
or
mov
inc
xchg
push
es
roll
cmc
cmpsl
call
dec
nop
dec
mov
dec
cmp
jge
sub
cmpb
les
add
dec
cmp
jecxz
in
inc
dec
add
add
fadds
xchg
jb
pop
add
bnd
mov
jp
jne
dec
mov
lock
mov
jb
int
pushf
adc
push
inc
ret
and
add
push
scas
cwtl
push
xor
sahf
inc
jbe
ret
adc
addr16
or
add
add
cmpsb
rclb
adc
and
ret
lcall
add
xchg
out
vorps
mov
or
adc
imul
mov
shll
nop
push
or
add
or
xchg
mov
pop
scas
add
dec
or
inc
jo
jo
add
scas
pop
mov
ret
dec
movsl
gs
xchg
adc
or
push
xchg
ret
rol
pop
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
sbb
jne
mov
and
pop
pop
add
cmovbe
sbbl
or
or
sub
push
xor
inc
push
xor
jbe
pop
jae
or
or
mov
and
mov
and
inc
add
loopne
inc
or
mov
aaa
call
mov
or
dec
dec
cmp
push
add
jne
add
and
and
sbb
mov
mov
inc
jge
or
add
ret
or
jp
add
adc
fldcw
mov
cld
dec
mov
inc
xorb
or
testl
add
xchg
dec
into
xchg
sub
test
jge
and
sub
mov
mov
push
sub
cltd
and
dec
jnp
into
or
add
or
push
into
mov
add
sub
mov
mov
pop
out
cmp
inc
jg
into
jp
dec
dec
into
into
mov
lea
sarb
push
js
aaa
js
nop
pop
cwtl
pop
mov
cmpb
shlb
or
pop
add
adc
test
dec
dec
in
pop
lcall
add
leave
lahf
pop
test
and
enter
add
mov
test
and
sarb
ret
je
and
pop
mov
add
sub
jmp
lea
lret
ret
pop
or
out
and
jo
push
scas
xor
push
xor
jb
dec
xchg
sbbb
shrb
and
sbb
mov
sub
pop
test
xchg
or
mov
cmp
shrl
es
and
xor
ficomps
subl
lock
add
xlat
and
daa
or
and
cmpl
loop
bound
xchg
imul
jl
or
fdivl
mov
dec
div
adc
data16
dec
push
mov
inc
push
nop
dec
sbb
in
test
scas
xor
mov
cs
int
sbbb
add
inc
jmp
adc
enter
dec
sub
jb
insl
fstl
or
out
je
mov
cmp
rorb
mov
jbe
inc
inc
int3
call
push
outsb
pop
sbb
jo
dec
and
in
lds
mov
mov
jo
jbe
idivb
jmp
or
jnp
les
push
or
call
add
rolb
jns
xchg
inc
inc
and
sbb
add
je
vmovaps
test
xorb
addr16
imul
pusha
test
push
sub
mov
sbb
ficompl
inc
pushl
and
inc
rolb
pushl
jle
jns
rclb
push
mov
push
je
and
sbb
fcoms
call
pop
mov
lret
push
jns
dec
jge
sbb
sub
add
and
je
mov
mov
push
hlt
push
adc
dec
and
pusha
xchg
dec
inc
sbb
jmp
lcall
and
jmp
jge
lea
jae
lret
test
pop
push
imul
inc
dec
mov
lcall
sbb
fcoml
jae
add
inc
dec
leave
shll
arpl
dec
add
sbb
bound
aas
aas
aas
or
xor
sbb
sbb
sbb
out
jae
daa
jmp
push
push
xlat
adc
test
jb
or
jbe
icebp
xor
lods
fsts
sub
hlt
add
insl
sub
jmp
xor
pop
dec
xor
mov
inc
hlt
or
inc
push
jne
push
inc
add
add
lods
dec
lods
and
mov
mov
push
lock
or
push
subb
ss
mov
push
sub
outsb
out
xchg
mov
sub
xorb
in
sbb
dec
xchg
jecxz,pn
mov
xor
pop
ret
adc
adcl
rcr
mov
mov
and
sbb
dec
sbb
dec
shll
push
clc
add
clc
xchg
dec
lret
jle
addl
sahf
xor
or
jmp
add
cmpsl
push
lock
jl
ss
rolb
mov
pop
jl
fwait
sub
test
lea
scas
pusha
popa
inc
jno
int3
jns
add
in
adc
gs
mov
jbe
lock
dec
mov
lret
mov
and
js
cmp
jmp
dec
loop
add
dec
scas
xchg
fisttps
xchg
sub
or
js
cli
mov
rorl
mov
pop
lahf
xchg
mov
mov
push
sbb
loop
sbb
inc
sar
inc
and
sbb
push
das
shlb
cmc
rcl
and
sub
sub
add
es
mov
lret
outsb
jb
loope
dec
adc
repnz
add
pop
xchg
inc
hlt
xor
sbb
in
sub
mov
push
adc
push
lock
xchg
incb
rcr
pop
testb
push
inc
lock
inc
inc
ds
push
mov
mov
and
or
cmp
dec
and
add
xor
sbb
push
or
pop
sub
xlat
addb
js
int
fdivs
dec
inc
push
shlb
daa
data16
mov
enter
fisubrs
daa
and
test
aam
es
jg
data16
sub
in
or
mov
inc
and
cmc
or
arpl
adc
js
mov
mov
or
and
mov
in
loope
and
call
stos
outsl
cmpsb
ss
clc
out
cvttps2pi
mov
aaa
xchg
or
fbstp
sub
fnstenv
fists
or
loop
fsubrp
test
jns
fstps
icebp
lahf
bound
insb
sub
rolb
or
pop
and
jmp
cmp
fdivrs
adc
test
cmpsb
push
dec
adc
pop
sbb
stos
and
push
push
jge
pop
xchg
cs
mov
mov
out
push
add
stos
or
xor
dec
sbb
or
dec
in
iret
loope
pop
cmp
push
cltd
imul
sub
mov
inc
fdivr
add
fmull
nop
inc
pushf
mov
fs
in
xchg
or
loopne
jns
jecxz
mov
data16
jb
cltd
fsubrs
aad
inc
adc
or
mov
ret
nop
and
xor
and
dec
add
xor
bound
sbb
or
inc
fwait
pushf
cmp
lock
loope
xchg
jp
call
call
add
pop
adcb
pop
or
or
ret
mov
enter
fcom
and
and
add
leave
adc
mov
nop
cmpl
mov
adc
lret
int
jne
cmp
ss
cs
lret
insl
inc
adc
imul
loopne
push
addr16
std
xchg
mov
loopne
jle
pusha
xor
sti
push
add
pop
xchg
sub
shlb
mov
mov
or
and
pop
add
adc
fwait
pop
call
mov
and
dec
dec
or
and
xchg
movsl
pop
pop
mov
sub
or
pop
jecxz
call
aam
lods
jl
dec
lret
les
test
rcl
in
xchg
in
and
push
jge
orb
ficompl
in
movups
mov
push
rorl
pop
movsl
fadds
sahf
cmpsb
jo
push
dec
lret
and
imul
mov
add
imul
leave
lock
in
stos
cmpsb
push
push
pop
hlt
add
cmp
mov
cmp
mov
push
enter
add
lods
push
xor
and
test
dec
pop
cmp
sbb
mov
and
and
cmpsb
mov
ret
dec
or
and
jo
aaa
cld
call
negl
shrb
push
es
mov
loopne
xchg
fsubrl
int3
or
test
aam
mov
cmp
in
or
cmp
cmp
inc
rolb
lahf
sub
and
add
dec
xor
sub
sub
xor
xchg
dec
cmp
xchg
dec
es
inc
dec
fs
iret
fs
insb
in
add
sbb
add
lahf
addl
les
sbb
int3
xor
faddl
xchg
stos
shrb
push
or
stos
test
pop
xchg
lods
inc
dec
fwait
rolb
push
ficoml
js
and
mov
cwtl
nop
adc
pop
xchg
pop
xchg
jbe
lock
pop
and
lds
inc
mov
loopne
inc
sbb
enter
imul
or
jmp
pop
rcrb
fs
mov
repnz
adc
mov
aam
add
mov
aad
or
mov
adc
inc
fcmovnbe
pop
add
dec
xor
or
cmpsb
or
test
xchg
mov
arpl
add
in
mov
jns
jmp
in
mov
or
and
dec
pop
fsubs
mov
push
adc
adc
sbb
pushf
in
add
push
adc
add
mov
pop
and
mov
orl
popf
mov
cmp
inc
xchg
and
adc
jnp
cmc
dec
push
xchg
cli
mov
adc
jnp
pop
push
adcb
or
sbb
insb
int3
out
sub
popf
xor
lcall
js
enter
cmpb
ret
daa
into
dec
clc
out
mov
xor
in
jno
add
mov
es
and
fcmovu
adc
jnp
inc
lea
push
jb
test
rcrl
shrd
mov
pushf
pushf
enter
imul
mov
adcb
inc
or
movsb
inc
movsb
adc
cmp
popa
repnz
fstps
adc
movsl
sbb
leave
add
out
sbbl
cmc
scas
add
cwtl
xor
insl
mov
int3
fnstsw
and
dec
call
pop
insb
test
fmull
or
test
mov
in
xchg
mov
jnp
jl
add
lea
mov
sahf
jno
push
adc
inc
adc
push
jb
test
outsl
fadds
or
add
ds
add
in
sbb
jbe
xor
call
dec
xchg
shrl
dec
pop
sub
mov
pop
sbb
test
shlb
lcall
test
adc
in
xlat
mov
loop
dec
xchg
popf
pop
enter
add
sbb
adc
xor
adc
mov
fs
add
jg
js
jl
or
test
inc
jo
test
lea
sub
sub
in
dec
adc
dec
in
cwtl
xchg
adc
add
adc
add
sbb
inc
mov
xchg
andb
sbb
sbb
inc
cmpsb
leave
xchg
cwtl
xor
cmp
mov
aaa
mov
add
dec
jno
dec
hlt
add
js
in
adc
push
inc
jecxz
call
push
xchg
inc
lea
xor
insb
jl
stos
add
daa
mov
in
push
cmp
sbb
sub
sbb
and
xchg
cmp
fs
pop
imul
cmp
push
add
out
push
mov
or
in
inc
or
or
nop
inc
push
or
or
adc
daa
xor
inc
in
aaa
call
push
adc
cltd
pop
insl
push
imul
aad
dec
jp
inc
inc
or
mov
mov
in
inc
orl
inc
sbb
inc
out
imul
and
push
sub
mov
in
lcall
sbb
mov
jl
push
enter
fwait
cmp
mov
add
adcl
sbb
add
popa
call
movsb
adc
xor
adcb
pushf
std
mov
in
add
jecxz
mov
push
movsl
dec
jo
mov
std
mov
adc
dec
or
add
popf
or
pusha
mov
inc
andl
jne
adc
dec
popf
shrl
test
lock
or
sahf
xor
inc
cmp
xchg
addr16
mov
xchg
sahf
pop
adc
ret
mov
lods
push
dec
shll
cmpl
add
mov
int3
enter
in
sarb
mov
cwtl
mov
pushf
iret
nop
dec
pop
mov
pop
shlb
call
dec
push
rorb
subb
add
pushf
mov
inc
xor
sub
rorb
and
std
and
pop
push
mov
or
test
imul
nop
pop
push
sub
dec
mov
jnp
fmull
lods
lods
adc
push
xor
sub
test
imul
sbb
add
sbb
popf
pusha
les
scas
in
in
lock
cltd
scas
mov
inc
mov
or
mov
inc
mov
cmp
orl
add
or
push
movsb
xlat
and
or
and
aas
xchg
adc
fstpl
dec
mov
mov
call
mov
sub
popa
xor
scas
je
aaa
and
push
shrl
push
aaa
rorb
aas
pop
push
popa
mov
add
rorb
push
mov
dec
int3
xor
mov
jmp
test
mov
adc
sti
je
jmp
sbb
adcb
adc
inc
cmp
inc
in
or
or
and
mov
cmpb
sbb
imul
xchg
sub
enter
pop
adc
cmpsb
fdivr
negb
sbb
adc
adc
pop
xchg
aam
fsubrl
xchg
pop
repnz
sbb
adc
mov
rolb
lods
sub
mov
fsubl
mov
rorb
adc
xor
push
xor
dec
xor
or
push
sarb
sub
daa
dec
lds
xor
rcr
push
addb
push
push
pop
push
popa
adc
push
dec
mov
stos
mov
adc
insb
mov
add
xor
mov
fildll
ret
stos
adc
adc
xor
xchg
bound
je
fwait
sbb
and
ljmp
scas
leave
cmp
test
add
movsb
lods
mov
xor
cmp
movsb
shrl
jecxz
jbe
add
adc
into
push
aaa
mov
add
movsb
and
in
lock
sbb
pop
dec
loopnew
pop
leave
aam
test
les
dec
push
test
push
sub
jmp
rol
test
fwait
loopne
mov
imul
loopne
mov
dec
fsubl
rcrb
imul
cmp
mov
add
cld
scas
aam
add
test
inc
mov
mov
cmp
jp
sub
std
es
js
inc
or
inc
outsl
leave
xor
insb
xchg
dec
es
ss
cwtl
mov
test
xchg
movsb
test
loope
cld
bnd
xchg
adc
call
in
fistpll
push
or
in
cwtl
mov
adc
or
adc
mov
mov
jge
mov
sub
push
push
popf
pusha
mov
and
nop
and
mov
push
dec
lea
add
int
or
push
dec
xor
aad
andl
mov
mov
mov
mov
jbe
ljmp
in
and
mov
cmp
jle
push
int
mov
rcrl
push
xchg
jo
mov
inc
mov
pop
inc
outsl
mov
adc
mov
adc
and
test
rcrb
adc
push
pop
push
mov
inc
loop
mov
push
jl
adc
shlb
pop
push
xor
adc
fs
fisubl
or
inc
scas
in
mov
mov
or
int3
pop
jb
inc
xchg
sarb
mov
or
and
cmp
pop
lds
pandn
mov
jo
dec
and
xchg
push
and
clc
mov
aad
xorps
xchg
or
and
push
or
or
fsubrl
xchg
ret
cmp
xor
xchg
iret
shlb
les
jo
mov
sarl
or
cmc
sbb
xchg
and
bound
ss
push
in
cmpsb
lea
mov
mov
loope
mov
or
push
push
and
mov
mov
in
sub
ror
mov
xchg
mov
fldenv
aam
int3
sbb
test
jo
or
ljmp
mov
fcompl
fwait
and
mov
xchg
aam
enter
inc
mov
and
push
adc
inc
hlt
pop
jb
sub
push
ficoml
or
add
int
pop
movsb
xor
add
lock
jae
and
dec
sbb
adc
add
and
inc
lcall
mov
inc
mov
insl
cmp
test
add
adc
gs
cs
add
sub
jb
sti
cmp
mov
mov
test
cmp
fsubrl
jge
mov
and
cmp
cmp
adcb
inc
adc
fnstsw
pop
mov
cmc
fdivrs
sbb
out
push
pop
insb
add
mov
add
jbe
addb
sub
dec
scas
aam
ret
test
add
push
xor
add
pop
rcll
adc
mov
push
icebp
or
lea
inc
add
imul
inc
cwtl
mov
or
cmpsb
orl
jo
js
lds
xlat
push
addb
and
dec
outsb
inc
pop
nop
and
leave
cwtl
pusha
mov
dec
test
mov
mov
adc
int3
and
jmp
enter
inc
es
inc
shrb
aas
adc
lret
nop
movsl
and
or
test
lods
xchg
adc
mov
push
test
xchg
and
ljmp
loope
and
xor
lods
in
fdivrs
and
inc
pextrw
sub
imul
ficoml
cmp
inc
adc
xchg
not
push
sbb
mov
fwait
ss
roll
xor
sbb
and
ret
pusha
or
sub
and
push
aad
insl
std
fadds
std
and
jb
add
or
xchg
adc
ret
xor
fists
inc
inc
push
stc
jae
mov
ret
in
jge
and
adc
test
mov
add
and
add
sbb
or
rclb
sbb
jmp
pusha
xchg
push
push
out
shlb
cmp
xchg
inc
pop
or
dec
push
mov
dec
leave
adc
pop
enter
cmp
xchg
scas
dec
mov
invd
xlat
add
xor
inc
sti
movl
sar
in
cmpsl
add
enter
xor
mov
dec
das
or
bound
adc
int3
mov
xor
repnz
cmc
inc
leave
movsb
mov
push
inc
sub
add
mov
sub
push
test
inc
add
pushf
call
cmp
lret
inc
test
movsl
gs
roll
in
or
addb
add
xor
lds
shll
dec
dec
and
addr16
jg
int
inc
fiaddl
add
addb
mov
add
insl
sub
stos
imul
enter
xor
jmp
shrb
addb
iret
test
adc
pop
adc
cmpsl
addb
add
rorb
push
in
rclb
aad
and
or
js
inc
test
movsb
inc
imul
in
xchg
sbb
xchg
in
adc
or
dec
xor
and
adc
inc
mov
and
mov
lods
ss
fistl
pop
imul
addr16
scas
add
leave
mov
add
fsub
adc
call
xchg
dec
xor
mov
andb
insb
icebp
xor
dec
jb
shlb
mov
aad
cmp
xor
sbb
jne
pop
cmp
mov
stos
lea
adc
lret
xor
pop
insl
les
add
mov
stos
in
xor
mov
pushf
adc
xchg
dec
js
fs
dec
xor
mov
fistl
arpl
cmp
mov
enter
sub
loopne
mov
and
jne
and
cmpsb
in
cld
stc
jle
rcrb
xchg
pop
jo
je
rcr
movsb
lea
push
mov
addl
mov
fs
cmp
lds
push
fsubrs
sub
ds
mov
inc
pop
pop
adc
push
pop
lock
movsb
adc
dec
mov
or
push
aam
inc
aaa
jno
movsb
xchg
fisubl
or
enter
xlat
cmp
push
mov
xlat
and
xor
mov
lock
and
daa
sbb
xchg
push
pop
rcrb
je
test
adcb
xchg
cmp
int3
jmp
sbb
and
sub
in
adc
insb
shrl
insl
orb
enter
icebp
rcr
mov
push
adc
xchg
stos
push
test
sub
fsts
pop
adc
mov
adc
pop
fidivrl
pop
xor
pop
sbb
inc
mov
pop
mov
test
lods
psubsw
cmpsl
mov
in
mov
sbb
and
sbb
lock
xor
inc
mov
outsl
push
cmp
lock
push
and
dec
jmp
mov
mov
fsubrl
mov
inc
inc
adc
pop
sub
orl
mov
mov
test
in
xlat
push
mov
loopne
add
add
aaa
xor
nop
loope
aam
cs
int3
sub
fcoms
fnsave
popf
jne
xor
inc
fidivrs
mov
and
or
push
stc
inc
jmp
add
or
add
das
es
popa
rorl
test
fimuls
in
pop
fmull
fwait
in
pop
mov
adc
jl
jo
add
push
mov
pop
xor
mov
roll
add
pusha
dec
add
add
add
mov
cltd
mov
pop
enter
insl
push
xor
mov
in
fiaddl
cltd
js
xchg
inc
dec
and
push
adc
push
dec
inc
faddl
fsub
loope
andl
cmc
mov
std
and
xor
in
mov
das
in
xchg
inc
arpl
outsb
lret
fsubs
xchg
push
push
push
sub
add
push
cmp
loope
adc
xor
int3
jp
xchg
aam
cmpsl
movsl
std
fnstsw
icebp
push
imul
fildll
and
add
and
movb
stc
in
fisubl
push
repnz
or
shll
leave
inc
cs
cli
push
inc
nop
sub
dec
inc
jg
and
mov
insb
or
jmp
leave
adcl
or
push
push
xchg
and
jl
into
pop
sarb
and
gs
sti
stc
mov
aam
jmp
add
sub
push
xor
fs
mov
cmp
and
cmp
out
adc
mov
mov
sarl
testb
or
and
fcomp
cli
adc
cs
cmp
push
push
cmp
mov
mov
mov
push
xchg
les
ds
jg
xlat
push
pusha
pop
push
clc
add
cmp
cld
decl
dec
mov
fistpl
or
jnp
mov
add
fldlg2
rcrb
add
shlb
leave
or
std
std
jmp
adc
out
leave
ljmp
cmpb
or
iret
repz
enter
sbb
push
out
cmp
add
add
fbld
and
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
out
add
or
push
mov
pop
popa
jmp
fs
imul
jo
jb
je
jbe
js
jp
xor
xor
clc
aaa
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
jmp
cmp
rclb
cmpl
sarl
out
test
push
cmp
lock
addr16
outsb
je
jb
outsl
in
in
pop
sti
arpl
fs
out
sbb
push
dec
imul
pusha
pop
jne
push
gs
xor
cs
fstpt
lcall
adc
popa
and
popa
je
outsl
outsb
push
mov
xchg
sub
lock
rdpmc
add
pop
in
adc
add
pop
sub
cmp
call
inc
outsl
jb
js
je
jb
mov
fisubl
jae
insl
add
arpl
outsl
add
add
add
roll
je
push
je
mov
jne
jb
mov
outsb
xchg
outsb
dec
xor
xor
cmp
repz
insl
insl
cmp
dec
and
jns
ja
jnp
add
das
das
adc
push
dec
push
inc
fstpl
push
jl
gs
insl
bound
daa
dec
outsl
jbe
push
fmull
outsl
adc
jo
sub
in
fucom
jne
jne
dec
jne
xchg
mov
jnp
inc
jo
imul
bound
sahf
and
pusha
inc
insb
adc
pushf
jae
cmpsl
xchg
popl
jae
xchg
addr16
push
jne
fs
lahf
mov
outsw
cmpsb
mov
sbb
dec
out
sti
sub
push
jne
xchg
out
into
cmp
inc
ds
popa
das
jo
bound
or
fbld
dec
jno
mov
cmp
faddl
lea
pop
mov
jno
fimull
inc
fucomp
ljmp
push
iret
and
sub
sub
cs
pushf
mov
cmp
pop
pop
cmpsl
test
sub
pusha
cmp
cmpsl
es
jge
jg
cmp
inc
test
jecxz
mov
cs
and
push
pop
or
fdivrl
xor
cmp
jae
cs
fs
jo
in
mov
inc
inc
mov
ficomps
out
jo
insl
and
into
jle
add
jbe
dec
push
push
sbb
dec
dec
inc
mov
mov
fimuls
inc
and
add
push
fwait
loope
xor
sbb
push
jo
imul
and
jae
insl
pop
mov
je,pn
pop
push
shrl
and
push
sub
and
fs
pusha
subl
mov
push
insb
fidivl
and
and
jo
mov
daa
mov
jne
pop
xor
and
fistpll
xchg
adc
or
sub
mov
scas
loopne
or
lcall
data16
out
mov
ja
mov
and
or
fidivrs
popa
add
or
fs
xor
and
xchg
mov
jnp
mov
je
and
push
daa
rolb
int3
fidivrl
popf
jb
loopne
outsl
mov
jo
fcmovu
push
daa
sub
dec
addb
das
arpl
pusha
add
and
arpl
shll
fiadds
mov
xchg
insb
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
js
insb
popa
pop
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
add
xchg
inc
hlt
pop
dec
add
add
adc
inc
ja
outsl
outsl
test
ss
sub
jb
jo
cli
jbe
add
mov
xchg
push
mov
inc
pop
push
gs
or
lds
sub
out
inc
jle
outsl
sub
or
arpl
sub
outsb
bound
cmp
enter
insl
in
ljmp
imul
movsl
sbb
imul
lds
mov
cmp
rclb
leave
js
push
pusha
nop
inc
insl
imul
cmp
cmpl
in
xor
subl
mov
cmp
or
addr16
jae
xor
subb
out
cmp
rorb
test
dec
jb
push
sub
add
sub
pop
dec
jmp
or
jo
and
fstp
lods
mov
inc
imul
adc
pop
mov
and
dec
cmp
ljmp
mov
pop
loopne
fimull
iret
sub
push
shl
xchg
ljmp
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
aad
popa
mov
aas
into
dec
add
xor
jg
mov
imul
mov
add
xchg
in
cmp
imul
xchg
adc
add
add
adc
add
add
add
add
pushl
push
pop
and
push
pop
pop
or
aaa
jbe
cmp
ds
push
pop
hlt
and
or
pusha
add
cmp
out
imul
add
pop
sub
add
mov
mov
addl
outsl
sahf
mov
test
add
orb
fwait
daa
push
cmpb
push
and
sub
insb
imul
jb
int3
push
jo
add
sub
push
cmp
rclb
stos
int3
js
fbld
push
pop
dec
rorb
sbb
add
lea
xchg
dec
cmp
mov
inc
mov
sar
mov
inc
pop
push
or
xor
xchg
push
inc
ds
pop
pop
dec
cmp
test
and
loope
adc
cmp
loope
adc
data16
adc
adcb
les
pop
jo
lods
mov
inc
adc
push
and
sub
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
xor
push
test
push
add
dec
mov
movsb
fsubs
adc
sbb
or
rclb
outsl
ja
lea
std
iret
inc
cs
jae
jb
bound
dec
in
clc
dec
inc
stos
inc
ss
popa
mov
mov
pop
and
mov
lods
mov
into
lea
dec
mov
outsl
js
push
push
inc
push
fsubs
dec
and
insb
gs
into
fsubr
mov
dec
mov
daa
add
push
ljmp
out
pop
add
inc
mov
imul
mov
dec
inc
jb
jns
daa
pop
mov
mov
push
jns
mov
xchg
mov
frstor
cmp
add
adc
outsb
pushw
mov
test
rorb
imul
push
jno
mov
jns
inc
sbb
insl
flds
dec
clc
popl
aas
xchg
es
cmp
push
mov
mov
push
inc
mov
dec
lahf
lock
mov
cwtl
xchg
jbe
push
push
jae
cmp
push
adc
scas
cmp
call
out
jae
addr16
subl
gs
and
xchg
xchg
inc
push
push
push
push
dec
negl
add
jne
repnz
mov
xchg
inc
mov
fildll
sbb
jg
lock
imul
call
inc
test
jg
xchg
ret
jae
inc
in
lods
push
imul
and
push
mov
mov
sub
mov
addr16
das
je
jp
scas
mov
daa
xchg
dec
jnp
pop
mov
popw
pop
cmp
mov
cmp
push
das
push
sub
sub
inc
jl
push
jle
sub
imul
addr16
sub
xchg
shll
pop
push
cmp
test
and
cmp
cmp
rorl
dec
pop
pop
push
scas
push
cmp
push
jb
outsb
fst
cltd
imul
push
lret
js
xchg
push
lods
sbb
test
push
enter
jo
sub
sbb
sub
cld
repz
sub
push
call
repz
mov
add
imul
aam
cwtl
nop
sarl
mov
pushf
inc
push
test
cmp
js
jo
pusha
lock
out
jnp
or
push
dec
outsb
data16
push
cmp
mov
push
clc
out
mov
push
inc
inc
int3
inc
cmp
xor
xor
cmp
repz
and
sbb
idivl
sbb
add
cmp
repz
push
in
shrb
dec
sub
or
iret
repz
call
pusha
inc
stc
cmp
repz
sub
hlt
std
out
sahf
cmpsl
in
loopne
mov
dec
repz
insb
inc
sbb
cld
aam
cmp
repz
pusha
xor
dec
inc
push
cmpsl
pop
aam
lcallw
shlb
jns
push
xor
sub
ljmp
cwtl
cmpsl
pop
push
sub
aas
sbb
jae
jb
xor
dec
test
lods
movswl
das
in
sub
add
sarb
insb
cmp
inc
mov
inc
dec
jae
insb
inc
gs
insb
inc
push
sbb
dec
inc
dec
xor
jg
ret
scas
inc
dec
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
ljmp
and
adc
sub
adc
and
std
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
push
pop
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
mov
adc
pop
ds
dec
xchg
scas
lods
in
aas
test
cwtl
iret
adc
xor
pop
std
sub
and
es
mov
flds
sbb
push
mov
push
inc
or
outsb
jbe
and
add
test
xor
inc
cmp
mov
movsb
jbe
dec
mov
loop
push
push
aas
iret
repz
push
dec
push
sub
ljmp
fdivrs
inc
push
and
cmp
xor
push
or
sbb
pushl
and
push
pop
inc
pop
dec
sub
pop
sbb
xor
push
sub
push
aaa
add
inc
dec
imul
fidivrl
push
xor
dec
push
inc
dec
xor
pop
jb
jbe
in
sti
testb
and
push
and
xchg
add
aaa
inc
xor
in
sbb
or
sbb
cmp
push
dec
sub
insl
out
pop
xor
aas
xor
aaa
dec
sbb
dec
add
and
lods
adc
fucomi
fisttps
ret
pop
adc
sub
and
adc
push
cs
adc
mov
and
inc
sbb
inc
or
sub
or
push
inc
out
in
out
sti
xor
inc
push
sbb
inc
inc
adc
inc
adc
aas
sub
push
fstpt
inc
pop
and
sub
inc
push
sbb
sbb
jge
andb
jg
add
mov
mov
dec
sbb
xor
mov
pop
cld
dec
mov
dec
pop
adc
cmp
adc
xor
inc
test
je
lea
ds
inc
and
das
push
ja
sub
dec
pop
dec
aaa
xor
pop
push
sbb
iret
mov
sbb
push
pop
das
fisubrl
adc
or
mov
aaa
pop
push
or
andl
add
int3
lods
mov
mov
xor
or
movsl
xor
push
dec
push
dec
and
js
sub
popf
stos
add
cmp
push
push
gs
and
push
or
frstor
push
pop
push
clc
jae
clc
jg
mov
sbb
sbb
jnp
in
mov
or
pop
sbb
inc
in
sub
cmp
inc
add
add
add
jo
aas
cld
sub
pop
sbb
add
fildl
push
add
add
jnp
inc
pop
adc
adc
jmp
dec
nop
dec
cwtl
in
push
cmp
imul
out
scas
lock
jne
jg
sub
lea
push
lahf
daa
mov
repz
loope
jg
push
dec
repz
fsubr
cli
or
loop
sarl
lock
sbb
scas
loop
sub
testl
jmp
das
mov
xor
sbb
push
popa
push
push
push
add
popa
outsb
loop
push
popa
sub
cmpb
test
out
fsubp
ja
push
xor
cvttps2pi
insl
fildl
sarl
movaps
inc
dec
ja
sahf
mov
fdiv
cmp
aas
push
repz
out
push
jno
lods
cs
jns
out
inc
notb
xor
enterw
sub
pop
mov
push
cmp
dec
inc
les
lcall
scas
and
and
sub
add
cmp
sub
ss
push
xchg
adc
js
inc
jbe
pop
sbb
inc
pop
or
out
fcmovu
pop
sub
push
push
sbb
dec
jmp
out
jne
scas
sbb
pop
push
and
cmpsb
xor
add
push
jmp
jb
arpl
or
xor
jb
pop
push
pop
push
push
insb
mov
mov
push
pop
inc
and
push
xchg
inc
lock
push
fildll
sub
inc
push
rdtsc
or
pop
or
jp
dec
pop
insl
inc
mov
sbb
out
mov
xor
cmp
popa
in
push
or
xor
leave
ja
fidivl
mov
push
dec
cld
push
aaa
fnstcw
xor
out
pop
and
jecxz
jmp
roll
mov
scas
jge
andl
fs
cmp
outsb
scas
xor
pop
add
jo
sub
test
xor
or
sbb
dec
sub
and
sub
inc
aam
fwait
sub
out
or
jnp
add
push
cmp
mov
daa
push
insb
push
adc
jae
sub
jbe
inc
sbb
xor
mov
cltd
jne
push
xchg
popf
jbe
pop
add
and
dec
mov
pop
dec
xlat
jle
aaa
xchg
lret
in
subl
sub
rcrb
imul
data16
pop
xchg
and
cs
mov
popa
mov
pop
sbb
in
in
xor
sbb
adc
dec
xor
divl
shl
insl
and
or
pusha
pop
es
push
mov
cmp
in
xor
push
push
pop
outsl
ret
scas
and
aaa
push
into
shr
xchg
aaa
daa
push
add
push
xor
sub
loope
adc
push
sbb
lods
into
xchg
dec
pop
or
sbb
dec
and
mov
pop
pop
fldt
add
divl
adc
loop
fs
xchg
mov
cmp
movsb
xor
aas
add
and
jle
movsb
jo
mov
dec
add
xor
fwait
add
pop
ss
inc
push
jnp
mov
and
push
gs
stos
sub
push
dec
sahf
dec
xchg
jbe
jge
addb
mov
dec
rcll
cltd
xlat
mov
xor
adc
ds
sarb
test
pop
movsb
popf
sarl
daa
or
or
pushf
xchg
push
push
add
sub
add
push
pop
or
inc
xor
fists
test
imul
dec
repz
sbb
add
mov
xor
lock
imul
adc
pushf
aas
pop
cmp
add
pop
jg
xor
push
sbb
push
ret
or
push
dec
inc
adc
push
xchg
adc
loopne
out
sahf
rorl
fdivp
push
cmp
sbb
add
mov
insb
adc
push
or
jl
push
pop
js
sub
mov
sub
mov
ja,pt
and
add
jae
sub
imul
jp
stc
push
pop
outsl
jo
pop
data16
push
ja
pop
jecxz
xchg
mov
adc
push
cmp
repz
cmp
sub
dec
lcall
and
jns
outsb
mov
pop
cmp
and
ja
cwtl
movl
or
adc
je
ja
or
sub
dec
dec
cmp
adc
xor
mov
mov
rclb
mov
dec
dec
and
mov
inc
pop
add
sbb
sub
add
xor
adc
fs
adc
mov
and
cmc
add
mov
mov
cmp
das
push
sarl
push
rcrb
push
out
mov
data16
push
dec
pop
xchg
pop
jbe
add
mov
mov
loope
or
add
add
ret
push
fidivrs
xor
aaa
dec
or
push
popf
add
mov
aaa
aaa
ret
outsb
aaa
inc
popf
xor
and
popa
lock
push
out
adc
push
or
es
inc
add
add
aaa
xor
dec
pop
out
imul
scas
and
out
inc
sbb
mov
repnz
jae
test
popf
imul
sub
and
cmp
and
and
mov
or
fmull
popa
pop
pop
outsb
and
fidivrl
sub
add
push
in
mov
and
out
sbb
outsl
and
dec
push
das
cmp
xor
je
inc
loop
adc
push
roll
and
arpl
int3
dec
cmpsl
dec
push
jb
add
cmp
imul
push
mov
mov
mov
xor
jbe
pop
inc
add
xor
ret
leave
xor
cmp
pop
pop
cmp
inc
xor
sbb
or
inc
add
dec
inc
inc
dec
sub
mov
cwtl
xor
mov
xor
add
sub
mov
loopne
cmp
popl
aam
jle
mov
add
adc
push
dec
xor
int3
pop
jle
das
adc
inc
push
into
push
adc
xor
popl
or
into
add
insb
lock
xor
adc
or
test
fisubl
test
inc
test
mov
ror
dec
ljmp
push
xor
sbb
push
dec
pusha
pop
or
rcrl
push
xor
ljmp
jmp
jo
mov
aaa
andl
pop
and
mov
cmpsb
or
cs
outsl
xor
jbe
and
stos
scas
push
jmp
cmp
mov
jp
push
pop
xor
ljmp
ficoms
and
dec
xlat
xor
pop
and
dec
daa
test
jnp
cmp
mov
sbb
pop
pop
push
movsl
xor
loopne
push
aaa
ss
das
dec
xor
das
mov
xor
xor
add
push
push
daa
xor
xchg
inc
mov
push
pop
out
sub
xor
inc
out
add
dec
mov
sub
in
inc
fbld
push
nop
pop
dec
jecxz
cmp
jnp
cwtl
ss
push
mov
dec
repz
mov
mov
jecxz
jge
sahf
jge
in
shr
xor
iret
aas
daa
push
cmp
mov
push
dec
push
jo
cmpl
add
mov
jl
loopne
xor
push
and
loope
faddl
or
add
jo
and
lcall
or
adcb
pop
dec
outsb
jnp
mov
subb
sbb
loopne
push
pop
cmp
sub
sahf
and
pop
and
cs
jp
cmp
pop
pop
and
sub
popa
dec
vpshab
or
add
icebp
addl
inc
adc
lods
sbb
cltd
imul
es
sbb
and
mov
mov
inc
jmp
pop
clc
ficomps
cmpsl
mov
ja
ljmp
in
movsl
leave
xor
inc
add
mov
jns
and
in
lea
dec
sub
mov
push
xor
sub
stos
xchg
lea
push
cltd
sbbl
dec
and
pop
pop
arpl
cmp
sub
ja
outsl
je
sub
pop
lods
int
sbbl
inc
xor
jns
dec
cld
dec
mov
inc
lods
and
jne
and
or
and
scas
inc
inc
xchg
pop
cmp
enter
int3
sub
and
add
cmp
inc
sub
ds
mov
push
push
loopne
jmp
outsl
xchg
inc
fs
outsl
fs
lcall
sub
sar
testb
pop
add
inc
dec
pop
and
sub
adc
sbb
adc
pop
rcr
ss
inc
xor
sbb
inc
sbb
dec
int3
ss
loope,pn
add
cs
sbb
push
cs
sub
loope
call
add
pop
pop
das
mov
loop
les
aas
dec
ss
xchg
jmp
sti
adc
fadds
adc
push
add
dec
int
cmp
data16
push
xor
inc
push
jge
jg
dec
inc
adc
jae
das
add
jbe
test
mov
xchg
mov
sbb
aaa
sbb
dec
lea
cmp
sarl
das
adc
rol
adc
adc
je
sub
xor
inc
push
pop
add
ss
adc
movsb
adc
adc
testb
aas
or
mov
and
nop
dec
push
loop
dec
sub
pop
inc
sbb
push
or
nop
insl
xor
adc
clc
adc
or
push
dec
mov
or
pop
dec
mov
xchg
out
dec
or
sub
cmp
jne
push
or
cmp
sub
dec
add
cmp
pop
inc
cmp
and
xor
and
dec
and
and
cld
add
pusha
dec
or
inc
cltd
adc
sbb
ja
adc
push
inc
fsub
mov
stc
js
push
xchg
fnsave
lret
insl
push
xor
in
pop
jmp
nopl
push
mov
outsl
fistl
xor
push
jnp
pop
jnp
sub
pop
xor
mov
movsl
xor
adc
insl
sbb
push
lds
out
push
int3
and
inc
add
and
imul
and
fisubl
and
dec
sub
scas
adc
inc
cmpsl
mov
mov
push
dec
xor
js
int
iret
adc
inc
and
mov
mov
repz
mov
dec
dec
inc
adc
xor
dec
aas
sub
into
test
push
or
aas
adc
mov
pop
or
scas
xor
push
xor
jnp
mov
jecxz
aas
add
rorb
cmp
dec
daa
js
pop
daa
adc
lahf
mov
fisttps
sbb
cs
push
or
out
xlat
dec
es
sbb
sbb
sub
daa
sbb
daa
dec
sbb
mov
add
arpl
add
lret
add
mov
dec
call
dec
push
pop
adc
dec
jb
adc
xlat
push
pop
mov
inc
adc
inc
or
and
jl
push
push
cmpsl
or
aad
add
jbe
sbb
sub
ja
jg
sub
sub
sub
repz
cli
add
je
ja
fs
imul
cmp
test
add
rorb
das
add
adc
jb
pop
push
dec
inc
and
inc
xchg
dec
popf
inc
inc
add
push
ret
cmp
push
mov
push
lds
add
fwait
int
pop
cwtl
pop
mov
icebp
cmp
imul
push
cmpsb
mov
nop
pop
adc
popa
xchg
jmp
fsubs
push
and
add
in
dec
les
dec
push
dec
dec
jne
getsec
notl
pop
shlb
mov
mov
daa
sbb
ja
aaa
ljmp
mov
ja
mov
lods
clc
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
and
fdivr
dec
fsubs
sbb
in
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
add
pop
adc
adc
enter
xor
sub
and
movsl
mov
push
fadds
inc
pop
push
insb
inc
jb
mov
insl
mov
fcomip
push
dec
imul
pushf
cmp
jl,pn
insb
sub
jb
sub
cmp
cmp
iret
and
movsb
jns
pushf
or
cld
and
xchg
xchg
out
dec
fmul
pop
or
mov
jmp
inc
js
cmp
xchg
push
dec
mov
dec
pop
aam
dec
cmpsl
mov
adc
pop
dec
mov
dec
stc
jnp
cmp
xor
pop
icebp
sub
sub
xor
inc
xor
inc
pop
xor
fsubl
popa
add
jne
std
pop
mov
cmp
insb
push
outsb
add
rcl
test
das
js
add
es
xchg
add
mov
and
stc
dec
jp
xchg
shlb
push
jb
sti
out
sub
jo
aaa
bound
je
bound
mov
sub
das
rolb
xor
rclb
or
fsubl
and
xchg
rorb
popa
jnp
or
inc
mov
das
pop
mov
das
and
mov
sbb
out
push
aaa
and
mov
pusha
mov
pop
outsl
sbb
repnz
or
addr16
lret
daa
je
add
push
inc
xchg
xor
fildll
sub
or
inc
xor
pusha
adc
jg
int3
add
push
adcl
fadd
dec
add
push
mov
pop
out
pop
dec
das
and
inc
push
xor
push
jns
bound
lret
mov
sub
daa
dec
mov
inc
dec
rcrl
xlat
sbb
das
mov
xor
mov
add
push
je
mov
add
fnstenv
fwait
insl
mov
es
mov
divl
out
xchg
mov
sti
xor
fsts
hlt
fistpl
mov
mov
jns
or
push
push
inc
mov
outsl
mov
test
fstpt
pop
mov
and
test
lret
push
push
int3
stos
xchg
push
test
cmpsb
mov
cs
xchg
push
movsb
stos
jns
loopne
movsb
icebp
in
aaa
jp
in
jns
cmp
mov
popa
scas
push
add
iret
cmpsl
div
adc
testb
scas
push
dec
sti
sahf
out
sar
stos
push
xor
cmpsb
insb
call
push
mov
push
push
cmpsb
insb
ds
mov
outsl
push
jg
test
xchg
iret
sarl
push
xchg
dec
xor
mov
or
ds
xlat
stos
fldenv
add
daa
fstp
repz
mov
cwtl
aaa
mov
jl
out
mov
inc
mov
jge
dec
cltd
outsl
pop
insb
push
clc
push
pop
lcall
push
popl
mov
cmp
out
fwait
cmp
jge
jnp
cwtl
mulb
push
mov
test
xchg
pushf
push
fistpll
mov
fdivp
cmp
out
xlat
fbstp
xchg
jo
addb
lahf
pop
fucomp
mov
pop
ss
addb
push
pop
ds
repz
es
in
xchg
rcrl
aam
das
xor
and
iret
sarl
jbe
imul
cmp
push
jno
scas
sarl
loope
lea
push
mov
pop
aas
and
xlat
int
imul
and
repz
push
xchg
movb
fcomip
cmp
mov
ss
xchg
jns
iret
cmp
ja
xchg
into
div
cmp
repz
out
cmp
mov
roll
add
or
decl
jg
dec
sbb
scas
sub
test
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
std
mov
je
push
mov
adc
push
and
pop
sbb
enter
pop
enter
inc
repnz
iret
pusha
or
and
or
inc
int3
dec
or
pop
inc
in
lcall
push
push
jae
or
aas
inc
out
pop
jno
sub
fbld
mov
or
inc
imul
cmp
sbb
dec
fisubl
xorl
push
adc
mov
jae
dec
cmp
dec
mov
out
imul
insl
pop
fcmovb
inc
or
push
in
in
xchg
push
insb
pop
push
scas
xor
je
jns
push
loop
out
push
fisttps
jp
das
push
popa
sbb
sbb
xchg
outsb
fstpl
fsubrs
jbe
iret
push
pop
shlw
dec
or
push
dec
mov
ja
mov
dec
js
and
out
mov
ja
jbe
add
adc
cmp
cmp
fiadds
ds
xchg
jo
adc
jo
jle
outsb
xlat
es
insb
je
push
addr16
jo
jae
add
es
outsl
and
cmp
popf
insl
mov
adc
and
cmpsb
call
lods
mov
mov
xor
xor
xor
xor
xor
cmp
and
xor
push
xor
xor
cmp
jbe
int
push
add
and
or
ss
inc
add
sub
sbb
out
jno
cmovl
or
mov
xorl
add
pushf
push
add
mov
and
mov
mov
dec
xor
and
dec
push
push
cli
push
das
push
xchg
inc
or
and
aaa
pop
lock
mov
fstl
push
inc
fidivs
push
cs
jp
outsb
dec
xchg
push
mulb
push
mov
inc
imul
daa
daa
xchg
ds
daa
aaa
inc
or
adc
sub
mov
pop
ds
adc
js
lods
inc
inc
pop
mov
or
dec
imul
or
mov
fs
test
cmp
sarb
lock
aaa
push
jnp
test
inc
jno
sub
sub
and
popa
rcrb
jbe
out
arpl
xor
cmp
cmp
arpl
push
cs
sahf
xchg
out
mov
repz
push
pushf
jbe
add
das
sbb
xorb
mov
sub
dec
adc
push
arpl
cmp
aaa
inc
inc
pop
pop
daa
pop
in
pop
add
xor
fldt
adc
sub
movsb
push
xor
movsl
mov
cwtl
dec
pop
aaa
sbb
sub
test
pop
xor
push
sub
daa
sbb
jo
arpl
mov
jns
xor
lea
xchg
inc
sbb
ljmp
or
and
inc
mov
daa
lods
daa
pop
adcb
imull
and
test
fisubrl
iret
add
xchg
les
jg
aam
push
loope
ret
daa
sub
das
test
push
lds
pop
lds
fadds
test
sbb
js
inc
mov
repnz
je
cwtl
js
and
ret
ja
push
test
and
or
push
lock
das
mov
imul
pop
scas
pop
cltd
mov
lahf
pop
xchg
fwait
adcb
popl
or
add
ficompl
pop
addr16
arpl
pop
out
adc
les
loope
insb
xor
fstl
bound
pop
insb
pop
and
mov
pusha
imul
add
outsl
dec
test
test
mov
sbb
xchg
jb
inc
popa
or
js
jl
and
add
data16
pop
xchg
imul
mov
icebp
or
sbb
pop
dec
adc
into
int
pop
push
dec
js
adc
push
ja
jbe
insb
outsb
cmpsl
call
pop
xchg
adc
dec
add
xchg
test
dec
mov
shl
das
loope,pn
sbb
dec
scas
and
lds
je
es
loope
and
push
xlat
or
je
pop
or
or
add
mov
mov
mov
push
inc
ja
sbb
cwtl
pop
adc
dec
mov
hlt
sbb
pusha
and
sti
inc
push
adc
adc
jno
lcall
clc
inc
and
adc
cs
das
in
inc
fsubrs
adc
xchg
sbb
mov
jo
mov
dec
mov
dec
xchg
das
sbb
or
popa
roll
pop
push
add
lock
dec
mov
inc
popl
outsl
add
cmp
sbb
testl
addr16
sahf
mov
dec
cmp
mov
icebp
mov
ret
pushf
aaa
push
dec
xchg
or
mov
aas
sbb
and
cmp
call
in
out
pop
fmuls
or
shlb
push
mov
rcrl
fisubl
mov
jae
sub
pop
aam
popa
repnz
daa
pop
test
push
aaa
daa
and
sahf
pop
aad
ljmp
das
daa
push
xor
mov
pushf
push
ds
imul
in
int3
daa
dec
and
sub
cwtl
push
jl
push
or
pushf
test
push
aad
adc
enter
adc
jb
data16
addl
ret
daa
xor
ficoml
push
or
mov
push
xor
ret
adc
daa
xchg
mov
dec
shlb
orb
or
add
loope
pop
sti
loopne
cmp
pop
adc
sub
pop
push
popa
sub
xor
push
xor
pusha
mov
mov
xor
and
inc
mov
ljmp
andb
push
mov
adc
jbe
mov
sbb
dec
aam
adc
pop
push
dec
dec
cmp
adc
push
les
push
pop
inc
aas
rcrl
sbb
arpl
inc
sub
push
adc
stos
test
or
pop
incl
sub
add
mov
add
sbb
xchg
popa
fs
add
and
in
add
adc
mov
repz
popa
adc
pop
sbb
iret
repz
out
ds
mov
cltd
fldcw
or
xchg
add
pop
push
add
or
adc
ss
adc
sbb
and
sub
xor
inc
mov
mov
int
sti
out
mov
mov
popa
xchg
sbb
ss
test
sub
add
or
mov
add
and
add
insb
pop
adc
push
push
dec
insb
ss
int
add
add
inc
and
scas
fyl2xp1
das
incl
pop
stc
aas
and
add
jae
es
pop
cs
and
in
test
fimuls
pop
sbb
xor
sub
push
xor
pop
or
ret
jb
jo
movsb
nop
ds
shlb
cld
inc
mov
imul
inc
xor
add
push
repnz
pop
rcll
push
add
xor
pop
decl
inc
sbb
sub
push
xor
add
pusha
adc
add
add
adc
test
call
push
and
dec
inc
push
pop
xor
xor
or
sub
cs
cmp
bound
inc
and
inc
cmp
push
lret
das
sbb
or
inc
add
xor
pop
pop
cmp
lods
adcl
outsl
and
inc
dec
cmp
cmp
das
mov
cmpsb
push
pop
cmp
xor
adc
mov
std
decl
pop
inc
aas
xor
push
dec
xor
ds
and
jg
pop
pop
pop
push
inc
push
cmp
xor
pop
add
xor
xor
pop
xor
or
sbb
or
sub
or
les
js
add
cmp
rorb
addl
cli
pusha
lahf
add
pop
push
lds
cmpsl
jge
das
cwtl
pop
mov
inc
inc
sbb
and
add
inc
mov
lret
cwtl
pusha
push
add
add
out
orb
mov
add
lock
xchg
cs
and
or
xor
mov
pop
lea
and
dec
pop
jmp
outsb
push
dec
in
orb
outsl
inc
pusha
inc
and
mov
loopne
inc
jecxz
xchg
orb
adc
mov
lret
add
push
xchg
pop
enter
xor
addb
jb
add
aas
jge
push
push
dec
pop
fmull
cmp
push
push
inc
push
dec
push
dec
add
xor
inc
mov
fst
xorb
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
incl
or
je
mov
andb
fwait
rol
fwait
in
inc
mov
lcall
or
outsl
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jmp
add
repz
movb
aad
arpl
push
ficoms
test
mov
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
mov
push
arpl
test
add
mov
mov
jmp
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
lcall
sbb
loopne
jne
sub
and
das
dec
outsl
and
pop
jp
jmp
inc
dec
jbe
inc
dec
jns
push
cmp
jl
aaa
jb
daa
and
outsb
push
push
push
clc
mov
dec
insb
inc
sub
js
inc
dec
cld
ljmp
jo
pop
sub
bound
inc
cmp
sub
cmp
jae
dec
jg
aas
inc
sbb
or
sbb
or
arpl
pop
pop
xchg
dec
call
or
sub
xor
in
mov
pop
xor
lods
out
testb
push
sbb
sbb
and
out
dec
xor
pop
sbb
push
and
jbe
push
aaa
push
xor
inc
add
in
lcall
inc
add
inc
push
xor
inc
xor
and
aaa
inc
add
jns
inc
cs
inc
ss
xlat
xchg
mov
pop
ss
cmpsl
and
and
enter
add
xor
xlat
xchg
mov
or
sbb
cmp
xor
or
inc
sub
test
mov
add
inc
pop
push
inc
push
push
and
add
xchg
fstpt
dec
fadd
arpl
mov
out
aaa
xchg
roll
cmpsb
and
int3
les
pop
into
mov
loop
sarl
pop
dec
add
sub
andb
dec
pop
or
adc
push
xor
pop
stos
mov
sub
and
sbb
push
sbb
mov
adc
mov
pop
xor
jp
sub
xor
inc
mov
mov
push
dec
ret
or
daa
adc
sbb
mov
adc
jp
cmp
in
sbb
stos
fdivs
movb
loop
xorl
sub
pusha
gs
sub
inc
and
adc
inc
cld
sbb
pop
cmp
jmp
xor
cmp
pop
mov
push
jmp
jge
subb
mov
dec
pop
and
sbb
push
add
jns
xchg
mov
jbe
add
add
dec
mov
rorb
scas
dec
mov
push
add
orps
mov
dec
js
jnp
rcrb
in
sub
sbb
dec
scas
inc
sbb
icebp
sbb
sub
call
sahf
pop
int3
sub
push
mov
xchg
push
adc
popf
or
pop
fisttpll
dec
pop
pop
adc
daa
outsb
xor
outsb
je
xor
js
xor
mov
jae
popa
insl
gs
cmp
ret
es
and
push
sti
out
sbb
or
aad
test
push
lahf
idiv
xor
inc
mov
pop
xor
cmp
lret
jno
aad
testb
outsl
insb
add
push
popa
je
push
popf
cmpl
insl
addr16
xor
idivl
aaa
push
inc
or
push
add
dec
or
pop
push
add
or
jmp
or
sub
imul
sbb
xchg
aad
lret
xchg
pop
adc
data16
pop
add
pop
fcomps
mov
push
jae
fs
andb
xor
jbe
xor
jp
popa
shlb
inc
lret
adc
pusha
ds
subl
cmp
addr16
sub
lds
pop
popa
mov
and
sub
out
js
push
mov
das
mov
pop
sbb
rorb
fs
aad
cwtl
into
dec
popa
dec
sub
rclb
push
popa
jb
pop
repz
aas
mov
pop
inc
jne
mov
test
xor
xchg
push
shrb
movsl
inc
test
test
daa
inc
jno
pop
pop
pop
push
or
test
call
and
sbb
inc
dec
aas
pop
adc
sbb
push
pop
fsub
adc
ja
pop
insb
mov
add
daa
aam
popa
inc
cli
hlt
scas
fs
dec
std
fs
jo
pop
or
push
stos
push
outsl
lods
push
lods
xchg
push
push
push
iret
sar
arpl
cmovp
movsb
mov
xor
sub
xorl
add
notb
or
scas
push
or
arpl
or
pop
adc
push
loop
aas
pusha
nop
mov
ds
shrb
push
mov
sub
pop
xor
push
rcrb
and
and
dec
data16
sbb
dec
cmpsl
push
lods
add
pop
inc
add
daa
aam
pop
ja
out
pushw
dec
xchg
scas
pop
xchg
push
add
xchg
xor
pop
dec
dec
add
hlt
inc
push
push
push
mov
jne
cld
insb
add
insl
xor
jle
mov
mov
pop
pop
pop
pop
aas
ja
fdivr
xor
adc
lahf
xchg
or
mov
pop
sbb
stos
sahf
and
enter
dec
pop
dec
pop
movsl
lods
in
insl
mov
dec
pop
repz
cs
mov
xor
add
ds
add
xor
aad
xor
movsl
mov
in
and
push
jge
lock
pop
ret
cmc
add
sub
inc
dec
mov
cmp
xor
pop
inc
and
inc
cltd
mov
xchg
add
cmp
dec
call
sub
add
add
loopne
mov
jmp
dec
push
stos
lods
xor
add
jb
mov
dec
and
sub
mov
outsl
mov
push
dec
outsl
and
cmp
add
mov
inc
push
punpckhwd
rcrl
xchg
dec
outsb
push
je
scas
lahf
movsb
adc
cmp
add
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
leave
mov
jmp
push
pop
mov
gs
cmovae
fiadds
fwait
pop
daa
jmp
pop
or
dec
jb
pusha
and
dec
cmp
pop
ret
inc
jo
in
adc
adc
dec
cmp
shr
lret
clc
xchg
or
sub
rcrl
pop
test
loopne
cs
lds
shlb
fidivl
adc
push
mov
add
adc
or
or
addb
ret
test
sbb
and
or
sbb
ss
sets
aad
dec
movsl
inc
mov
sub
fiaddl
loop
add
pop
dec
mov
dec
push
pop
sub
dec
and
adc
push
loope
out
mov
aaa
aam
push
mov
add
call
lea
lret
sbb
gs
cmp
enter
push
lods
pop
mov
push
ret
dec
movsb
adc
stos
pop
or
push
add
push
cmp
adc
pop
mov
pop
xlat
sahf
fadds
xchg
mov
lea
mov
pop
frstor
cmp
xlat
jmp
ret
push
or
inc
sti
dec
mov
pop
imul
repz
mov
dec
push
imul
sarb
fdivl
dec
add
mov
orb
xchg
dec
inc
xadd
insb
ss
cmc
sbb
inc
iret
mov
dec
loopne
inc
insl
pop
jnp
adc
cmpb
aas
mov
jo
smsw
inc
dec
add
jae
setle
das
test
fistpl
jbe
push
inc
pop
cmp
aas
jbe
addr16
add
test
mov
dec
movsb
or
daa
jmp
imull
push
inc
das
inc
add
outsl
ror
cmpsl
jnp
imul
jo
add
or
pop
daa
mov
dec
sahf
mov
inc
daa
or
sbb
pop
sub
sti
mov
aas
jg
repz
fsubs
outsl
nop
sbb
scas
in
daa
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
scas
in
add
push
daa
sti
sub
mov
loopne
push
cmpsl
stc
cmp
les
iret
sarl
jl
pop
mov
stc
cmp
push
pop
xor
cld
pop
iret
jmp
ja
push
mov
pop
sahf
pop
pop
out
out
ds
pop
push
mov
sarl
add
pop
enter
icebp
jns
shlb
sbb
and
es
inc
adc
xchg
sub
cltd
jecxz
and
dec
inc
lahf
and
lods
add
and
jnp
imul
pop
jns
movsb
sbb
dec
xor
jbe
in
or
add
iret
sbb
inc
push
push
jb
inc
mov
push
push
in
pop
jg
jg
mov
leave
mov
dec
xchg
xchg
dec
mov
dec
outsl
or
sbb
xchg
inc
clc
sbb
rorb
pop
das
dec
push
push
sub
xchg
sbbb
add
adc
inc
repnz
enter
les
mov
test
pop
enter
outsl
cmp
sub
shll
push
add
dec
sub
fstpl
pop
pop
scas
sbb
push
xor
popl
push
out
in
dec
xchg
pushf
xor
cmp
sub
enter
push
push
sbb
pop
adc
sbb
ret
push
sbb
add
dec
xchg
xor
out
xchg
xor
and
rcrb
int3
pop
leave
sub
and
cmp
lock
lock
repz
dec
mov
sbb
mov
fwait
mov
pop
jl
shll
push
or
mov
pusha
pop
rcrb
jg
jge
scas
lock
xor
add
sub
sub
ja
push
sbbb
pop
leave
mov
add
and
nop
fistl
xchg
push
cwtl
sbb
and
sub
fiadds
dec
push
adc
inc
mov
popa
scas
add
cmp
out
sbb
cmpsl
andb
ret
cmpsl
and
push
aaa
out
push
push
cld
data16
dec
mov
outsl
cld
idiv
or
push
jb
cmp
add
ss
pop
cmpsb
lahf
mov
iret
lcall
test
push
adc
xchg
cmpsb
outsl
hlt
push
fcoms
push
add
lods
xchg
push
mov
or
pop
sbb
mov
cmp
sbb
sub
ja
popa
negl
sbb
fadds
pop
xor
push
jg
inc
push
xchg
daa
lahf
sub
jle
popa
bound
or
data16
ja
push
push
push
mov
js
repz
xchg
jo
unpckhps
imulb
bound
pushf
pusha
jp
and
test
or
in
xchg
bound
enter
popa
sarb
scas
add
xlat
or
mov
jo
xchg
cmp
fs
jo
arpl
in
inc
jno
arpl
arpl
testl
and
add
stc
or
and
out
sbb
push
mov
leave
mov
aaa
mov
and
pusha
aaa
pop
ja
fadd
mov
add
xchg
outsl
js
inc
mov
add
and
test
fs
and
out
mov
lods
adc
jg
outsb
leave
xchg
cmp
pop
mov
insb
ja
add
jg
addr16
add
cs
int3
fsub
sbb
pop
and
jmp
jge
and
push
push
sbb
outsl
sub
jb
shlb
lds
or
pop
cmpsb
mov
adc
push
les
and
adc
add
insb
pop
add
cld
xchg
dec
xchg
cmpsl
add
and
xlat
add
iret
mov
push
out
aam
or
push
jb
push
add
iret
ret
add
pop
pop
adc
dec
sti
mov
push
or
imul
rcrl
xchg
jb
rorb
mov
push
mov
push
push
jb
pushf
and
or
cmp
das
pushf
push
movsb
xchg
or
outsl
add
test
pop
or
lcall
negl
add
and
lock
cwtl
pop
add
sbbl
fadds
aam
in
out
dec
scas
orb
mov
cmp
addr16
lea
add
or
sbb
inc
pop
aam
sub
in
scas
or
add
es
sub
cmpl
outsb
clc
pop
and
adc
xlat
and
test
pop
pop
leave
add
mov
pusha
dec
repz
daa
xor
jo
xor
xlat
cmpsl
sbbb
insb
push
xchg
imul
insb
cmp
cmpsl
inc
or
mov
das
or
ja
inc
ret
lds
cld
outsl
lods
pop
or
pop
jb
dec
and
pop
push
cmp
xlat
data16
push
filds
pop
das
repnz
in
mov
mov
pop
es
imul
pop
in
daa
insb
mov
das
push
jne
pop
jbe
loopne
fmull
int
fsts
fisubrl
push
mov
xor
insl
xchg
mov
icebp
jns
cmpsl
stc
sub
dec
jne
stos
repz
out
sti
push
jl
push
out
ds
outsl
mov
jge
pop
iret
sarl
leave
sbb
mov
sahf
out
lcall
out
fidivrs
adc
popa
jl
jns
jge
enter
incb
lcall
subl
js
out
lcall
iret
repz
loopne
test
outsb
sahf
into
sahf
cmpsl
stc
cmp
and
cmp
repz
sbb
jns
out
in
mov
mov
imul
dec
jbe
mov
ja
out
fmuls
mov
push
jb
lcall
ficoms
jne
dec
repz
jle
out
out
mov
push
jp
repz
shlb
xchg
push
or
lcall
sub
dec
jo
jmp
xchg
lcall
and
repz
sbb
sahf
out
aam
cwtl
dec
je
jl
data16
sbb
mov
or
out
pop
popf
xchg
mov
frstor
push
insb
pushf
push
sahf
cmpsl
stc
xor
inc
mov
jns
jge
mov
sti
idivl
int
mov
das
movsl
scas
cmp
out
push
sar
cmpsb
jns
xor
cmpsl
stc
or
outsl
jns
out
mov
test
cmp
out
cmp
sarl
jbe
mov
jl
iret
xchg
push
lods
out
scas
sub
imul
scas
inc
mov
or
sbb
jge
mov
pop
mov
push
into
out
mov
repz
push
mov
push
jo
pop
mov
movzwl
imulb
mov
insb
ds
repz
fs
mov
cli
cmp
fsubrp
push
fisttpl
ret
out
out
ds
insl
mov
les
leave
or
aas
mov
call
test
int
lret
lahf
repnz
dec
mov
ss
sarb
iret
mov
inc
rcl
mov
sbb
test
addr16
jns
fwait
push
lock
add
pusha
jno
jmp
add
jae
xchg
repnz
dec
rcrb
iret
insb
ja
sub
nop
rcrl
fbstp
jb
je
movsl
add
pop
paddq
pop
jb
sahf
sub
inc
aas
cmpsb
rclb
and
leave
xorl
call
and
xchg
adc
es
fnstsw
mov
andps
mov
adc
and
or
scas
ss
aaa
inc
loop
pop
dec
enter
mov
mov
jbe
ss
pop
cmp
push
jo
loopne
push
fs
mov
lds
scas
jb
dec
outsb
xchg
mov
inc
pop
mov
fmuls
mov
xchg
inc
in
push
fists
movsl
jl
fdiv
dec
mov
push
mov
popf
mov
adc
xchg
sarb
loopne
adc
out
pop
jmp
jmp
shlb
and
ss
cltd
fcoms
aas
mov
not
test
cltd
or
mov
cld
daa
xchg
lea
gs
sti
decl
mov
and
jne
xlat
and
sarl
add
aaa
out
mov
flds
push
jbe
fs
daa
sub
je
je
mov
ret
add
cmp
dec
xchg
scas
sbb
push
cmovae
ds
add
ja
xchg
pushf
in
ja
or
or
jnp
pop
jnp
aas
shl
push
xor
sbb
push
and
lcall
cmp
rorl
call
cmp
inc
ficoms
iret
fimull
push
popa
aas
and
and
loop
push
ret
pop
js
cltd
fcomp
mov
pushf
sbb
clc
pop
inc
je
ja
enter
in
pop
mov
jbe
dec
jb
and
or
cld
js
jns
push
ret
add
pop
push
fstpt
xchg
pop
fiaddl
out
into
addr16
test
and
je
xchg
iret
mov
jl
fwait
push
scas
out
lret
and
in
jns
jnp
cmpb
adc
xlat
push
mov
ss
jl
xchg
jp
push
dec
cs
out
pop
push
push
sub
mov
mov
jp
push
mov
jbe
sub
inc
enter
sbb
push
scas
sub
sub
adc
mov
jnp
cmpl
inc
pop
jo
xlat
outsl
mov
add
mov
dec
mov
nop
jnp
jnp
daa
fs
mov
out
repnz
dec
adc
clc
and
daa
bound
inc
enter
pop
jl
leave
and
inc
shlb
pop
mov
jge
jb
and
jge
jge
xchg
sub
hlt
mov
pusha
cmp
or
andb
out
sbb
jl
push
add
add
sahf
out
faddl
push
sahf
out
std
or
orl
mov
in
jne
cmp
sub
pusha
in
jb
jle
jge
fildl
pop
add
dec
sahf
add
jns
and
mov
mov
in
and
in
hlt
inc
into
lock
jge
add
movd
jl
jg
jle
jle
and
inc
jle
jle
pop
daa
pop
leave
and
daa
daa
daa
nop
cwtl
mov
and
mov
lods
shll
jmp
repz
mov
mov
mov
jae
cmp
jg
push
dec
enter
add
pop
jg
data16
xchg
mov
out
lods
sahf
in
mov
sub
inc
rcr
and
xor
and
daa
inc
fsubs
push
adc
addl
xchg
mov
add
daa
xchg
inc
faddl
inc
pushf
mov
or
lods
cmp
daa
pop
ja
xchg
xor
xchg
push
jb
cli
roll
jb
adcb
xchg
dec
enter
nop
sub
jecxz
xchg
cmp
daa
adc
and
sbb
push
daa
dec
xchg
or
adc
andl
addl
gs
xchg
dec
nop
mov
popf
cmp
dec
jb
test
push
daa
xor
mov
push
rcrb
fildl
pop
pop
out
cmp
sbbb
pop
sbb
cmp
jns
out
or
push
or
or
or
out
jge
mov
xchg
out
sahf
out
sahf
adc
sahf
mov
les
out
loopne
out
sbb
push
enter
out
sbb
inc
and
pushf
mov
xchg
inc
mov
sub
in
dec
cs
xchg
add
adcl
aaa
xlat
push
xchg
and
xchg
xchg
test
test
add
sub
inc
nop
xchg
dec
mov
leave
orl
and
xchg
test
xchg
jb
test
mov
test
faddl
call
test
mov
cwtl
ss
inc
sti
add
and
mov
add
loope
out
mov
sahf
push
out
aaa
daa
sub
add
jno
es
test
xchg
test
add
lock
icebp
mov
jmp
inc
gs
inc
aas
add
leave
add
inc
xchg
jb
and
mov
push
pop
inc
jb
inc
jmp
in
xchg
mov
xchg
xchg
fimull
mov
mov
push
mov
mov
dec
js
push
push
lock
cmp
out
and
cmovge
xchg
leave
jae
in
js
aas
fwait
dec
dec
jb
xchg
mov
jbe
addr16
into
iret
daa
push
mov
cmp
in
and
nop
mov
mov
pop
mov
pop
pop
mov
in
pop
pop
jne
adcb
mov
mov
xchg
dec
outsb
xchg
ljmp
add
jl
pushl
inc
in
xor
lea
cltd
in
mov
pop
loop
mov
mov
mov
das
das
das
mov
mov
mov
das
das
das
icebp
mov
das
das
das
stc
mov
mov
mov
mov
and
pmulhuw
in
push
or
in
or
or
in
in
push
add
in
add
add
and
inc
addr16
iret
in
jbe
xchg
ja
add
xchg
mov
and
xchg
cmp
sti
add
mulb
mov
sarb
mov
push
fbld
pop
and
cmp
popf
mov
mov
push
push
cmp
mov
aad
or
leave
out
fisttpll
sub
xchg
mov
mov
mov
xor
outsb
sbb
rcpps
pop
cmp
pop
arpl
push
and
in
or
mov
mov
jae
cmovle
lock
add
push
jbe
pusha
scas
push
mov
imul
push
ja
push
pop
or
cwtl
dec
ja
adc
daa
test
enter
mov
mov
dec
jb
into
mov
mov
xchg
lea
fwait
stc
xchg
adc
cmp
mov
xor
jae
pop
dec
lea
inc
xchg
leave
jae
dec
insl
push
add
lea
cwtl
mov
scas
add
repnz
sub
sysret
mov
xchg
das
jb
enter
xor
sub
push
add
add
imul
jns
out
mov
xchg
or
or
jns
push
ss
pshufw
lock
or
sbb
jb
and
dec
pop
cmp
in
jbe
subps
fs
insb
fcmovne
repz
je
jl
ltr
mov
or
xchg
pop
aam
cmp
lds
sbb
push
add
xchg
pop
cmpsl
mov
in
in
mov
inc
xchg
add
jg
dec
pop
and
cli
pop
leave
and
jl
lods
sub
repnz
jb
mov
incl
xor
cmp
ret
xchg
in
xchg
jg
mov
ds
je
add
jb
mov
popf
nop
dec
mov
test
mov
ret
outsb
adc
mov
sti
stos
mov
dec
add
xchg
das
and
and
and
xchg
push
outsb
mov
jbe
push
jno
jns
add
in
jns
test
inc
dec
xchg
mov
aam
leave
leave
inc
in
cli
addr16
add
cwtl
sub
in
xchg
push
addr16
das
das
aas
loopne
xchg
das
je
jg
mov
xchg
xchg
mov
xchg
inc
fsubrl
das
rcll
outsb
inc
leave
mov
xchg
jns
stc
add
adc
jns
jns
xor
aas
xchg
dec
xchg
push
xchg
cmp
imul
pushf
sub
mov
dec
dec
dec
scas
mov
dec
dec
icebp
out
or
nop
cltd
sbb
dec
add
xchg
push
dec
cs
out
cmp
or
xchg
mov
xchg
setnp
and
ja
nop
leave
inc
rcr
mov
pop
insl
xchg
xchg
out
mov
xchg
pop
addr16
mov
in
cmpb
cs
das
add
inc
lfs
fstpl
popa
in
add
setbe
mov
pop
arpl
xor
es
add
add
inc
mov
xchg
jnp
subl
repz
out
or
test
iret
or
stos
xchg
xchg
cmp
inc
mov
pushf
push
add
sahf
fdivl
stc
pop
icebp
adc
mov
xor
dec
cmp
pop
xchg
mov
enter
push
xchg
mov
jb
jb
mov
in
ja
testl
dec
mov
cwtl
incl
sahf
inc
dec
repnz
cwtl
push
xchg
in
loope
cwtl
ljmp
repnz
push
add
mov
inc
pop
pop
pop
pop
enter
fcomps
mov
add
outsl
or
lret
lret
lret
lret
and
cmp
inc
cltd
dec
cltd
push
cltd
pop
cltd
jb
mov
arpl
pop
or
jb
or
pop
push
jb
jb
add
cmp
jae
jae
jnp
iret
repz
sbbl
xchg
push
mov
pop
mov
cmp
mov
and
out
sahf
ret
and
bswap
mov
xor
sub
pushf
in
lcall
pushf
je
cmp
mov
lcall
fldenv
jae
rcl
jns
ja
xchg
add
leave
in
mov
push
sub
pop
pushf
dec
and
jmp
daa
daa
icebp
stc
add
push
fwait
dec
mov
xor
outsl
fwait
inc
mov
fwait
pop
fwait
push
add
lock
mov
and
leave
leave
in
jbe
out
aad
push
adc
fst
js
inc
lret
or
xchg
or
mov
fwait
or
mov
pushf
es
int
addr16
mov
inc
push
pop
inc
add
in
jae
add
pop
pushf
adc
in
repnz
push
jle
xchg
xchg
add
cltd
pushf
out
mov
cwtl
nop
mov
mov
outsb
pop
and
into
out
fidivrs
add
add
xchg
popf
adc
ja
and
lock
and
inc
push
popf
iret
repz
dec
out
pop
popf
insb
mov
jp
inc
repnz
cmp
pop
pusha
pop
leave
jae
mov
add
loop
ljmp
cli
add
out
sahf
sbb
and
sub
repz
xor
cmp
or
cmp
push
push
adc
jp
cmp
bound
scas
adc
cmp
sahf
cmp
insl
xlat
cmpsb
sahf
out
mov
mov
add
jns,pt
fiadds
xchg
pop
lock
inc
fwait
loopne
out
mov
out
cmpsb
scas
imulb
filds
lahf
pop
push
push
add
push
cmp
pop
aaa
push
scas
push
lahf
cmp
incl
push
inc
jb
inc
fs
jb
xchg
in
mov
cmp
xchg
incl
mov
cmp
pavgw
dec
cltd
cmp
fwait
pop
stc
lahf
pop
add
scas
push
out
subl
push
or
sbb
js
xchg
push
adc
pop
out
lock
lahf
inc
mov
push
pushf
je
push
lar
cs
mov
mov
outsl
mov
and
nop
mov
repz
dec
mov
mov
ja
leave
lret
rcrl
fistpl
add
dec
sysret
jmp
pop
cltd
dec
lock
pop
add
jmp
mov
mov
xchg
mov
out
adc
inc
test
ja
jg
jns
out
add
cmp
xchg
add
popf
xchg
mov
lret
pushf
dec
ds
incl
pop
test
rcll
push
lea
mov
sub
mov
inc
dec
call
test
fisttps
lahf
dec
inc
dec
mov
subb
add
stos
xchg
cmp
push
xchg
push
repnz
pushf
stos
daa
daa
daa
adc
cmp
add
push
or
cmp
xchg
mov
sub
cmp
mov
mov
push
mov
aas
jns
out
push
add
add
sahf
out
pop
imul
mov
or
xchg
mov
mov
mov
movd
mov
cmp
rorb
stos
jmp
lods
incl
and
das
movsb
lods
cmp
ret
daa
push
movsb
das
pop
movsb
bound
movsb
jb
jp
addb
inc
jno
pop
mov
xchg
out
call
xchg
iret
or
leave
leave
add
rcr
leave
leave
leave
out
negl
inc
mov
pop
jmp
jp
and
nopl
add
movsl
in
xchg
adc
push
movsl
pop
movsl
bound
push
iret
inc
mov
add
int3
daa
adc
mov
mov
fildl
push
pop
pop
adc
in
mov
mov
inc
stc
pop
xor
pop
or
jp
sub
mov
pop
inc
movsl
jmp
push
aas
push
nop
pushf
in
pop
rep
fsubrs
push
cmpsb
cmpsb
es
idivl
add
add
enter
sub
pop
fmull
dec
popa
imul
repnz
mov
add
leave
jae
int3
call
fcomi
psubb
cmpsl
das
and
dec
cmpsl
cs
in
repz
add
xchg
xchg
mov
daa
mov
cltd
pop
jns
jns
push
movsb
cmpsl
mov
cmpsl
pop
adc
jbe
inc
repnz
test
test
daa
adc
add
mov
push
push
in
pushf
cmp
movq
daa
addr16
push
mov
outsb
fnstsw
mov
cmpsl
mov
stos
xchg
add
leave
int
fucom
bswap
repz
in
pop
cmc
add
cmp
xchg
test
or
or
mov
test
cmp
pop
leave
jae
arpl
add
xchg
outsb
daa
mov
cmpsl
iret
in
imul
pop
lret
pop
aam
lahf
adcb
sub
sub
xchg
stos
pop
rdpmc
stos
dec
dec
outsb
pop
insl
fs
push
outsl
xchg
mov
mov
xchg
xchg
cmp
xchg
pushf
movsb
ja
in
mov
pop
push
pop
out
repnz
xchg
cmp
stos
lsl
and
stos
push
das
ss
mov
mov
pop
lidtl
add
repz
pop
dec
or
les
int
mov
outsb
stos
pop
sets
leave
add
mov
repnz
daa
push
mov
pop
jo
lods
mov
out
dec
push
mov
xor
popf
pushf
pushf
pushf
out
div
sub
popl
lods
sysret
xchg
pushf
ljmp
lods
clc
and
mov
jne
fidivl
cld
mov
xchg
mov
xchg
mov
mov
cmp
pop
scas
iret
ficoml
jns
lock
push
sti
or
rcr
enter
ss
lods
dec
leave
repz
push
add
push
iret
repz
push
push
jbe
jle
shlb
mov
lods
lahf
lods
outsb
lods
jae
mov
lods
sahf
pop
cmpsb
repnz
iret
adc
daa
iret
jae
push
into
pmaxub
pop
sbb
inc
mov
insl
or
mov
inc
push
daa
negl
mov
scas
push
fs
ja
xor
jbe
dec
daa
push
scas
fildll
outsl
fdivrs
loopne
sahf
xchg
scas
jg
scas
fidivs
rsm
pop
or
mov
sbb
inc
mov
fdivrs
pop
dec
add
dec
lcall
or
or
or
and
push
dec
dec
push
sbb
fucom
in
movsb
or
cmc
push
mov
sub
scas
daa
add
sbb
mov
sahf
fldt
fs
insb
pcmpeqb
lea
xchg
out
xchg
add
jb
pushf
or
leave
repz
or
loope
xchg
or
fsub
pop
jnp
call
insl
shrl
inc
cmovne
es
xchg
inc
mov
or
pop
push
mov
fwait
mov
mov
in
daa
loope
jbe
leave
jmp
push
or
and
add
out
push
mov
sbb
jle
mov
push
scas
pop
iret
mov
jmp
add
cmp
cmp
push
je
cmpb
stos
xchg
lahf
add
scas
add
xchg
iret
push
or
in
dec
sahf
or
out
out
lahf
sub
mov
invd
mov
and
leave
mov
mov
xchg
jns
xchg
mov
add
mov
out
jge
setle
cmpsb
jns
leave
repz
push
scas
mov
or
push
ffreep
mov
mov
jmp
mov
or
adc
cmp
cmp
xor
inc
pop
cmp
cmp
jbe
test
mov
cmp
loop
mov
out
popf
pushf
cmp
das
bound
push
jb
sets
cmp
jae
sbb
sahf
ja
dec
sbb
and
xchg
iret
and
add
pushf
mov
iret
cmp
inc
mov
mov
jns
xchg
mov
xchg
hlt
in
in
mov
and
pop
les
pushf
dec
ds
or
rorb
xchg
and
adc
addr16
enter
mov
mov
pop
dec
dec
cs
pushf
jbe
xchg
dec
dec
dec
dec
lahf
cmpsl
scas
mov
cmp
repz
push
mov
repz
iret
or
or
or
jmp
iret
divl
dec
pushl
xor
rclb
sahf
pop
movsb
mov
pop
cmp
xchg
out
inc
add
repnz
push
jno
jl
xchg
mov
mov
mov
mov
repnz
mov
mov
repnz
fnsave
cmpsl
lock
mov
mov
repnz
mov
xor
cmp
push
inc
pop
dec
and
repz
and
push
cmp
repz
jge
iret
repz
test
nop
daa
cwtl
sub
repz
or
cmpsl
fwait
cvttps2pi
and
dec
into
mov
jo
fwait
hlt
pop
paddb
repnz
push
adc
cmp
xchg
lahf
das
sbb
and
push
ret
iret
insb
push
loop
inc
mov
jae
into
push
and
daa
fisttpll
add
push
or
ret
decl
pop
push
mov
mov
push
add
vfmsub231ps
movzwl
iret
mov
inc
mov
es
jbe
leave
leave
mov
mov
push
add
adc
jp
out
stc
mov
cmp
mov
bndldx
and
outsb
repnz
or
iret
leave
in
in
pop
pop
addr16
leave
repz
cmp
mov
xchg
repz
cmp
mov
pushf
cmp
leave
ror
xlat
xlat
pushf
cmp
repz
sbb
clc
jns
in
sbb
pop
push
sbb
xchg
out
and
das
cmp
and
lds
sbb
jb
jne
jge
test
jb
mov
sbb
mov
cmp
cmp
jb
iret
cmp
jp
orb
outsb
daa
lcall
dec
dec
cld
sbb
daa
iret
add
xor
cmp
dec
dec
dec
pusha
jle
mov
lods
lret
mul
jns
fisubl
clc
push
mov
sahf
sub
add
cs
lods
out
sub
mov
dec
das
add
mov
dec
notl
mov
iret
jae
mov
les
int3
iret
jae
cmp
aam
or
sahf
ja
cmp
in
hlt
push
or
sbb
rorl
push
mov
or
jns
out
adc
add
and
es
cmp
adc
lar
sahf
out
pop
inc
sbb
jns
dec
ljmp
inc
int
movsb
test
dec
repz
nop
xchg
enter
add
sarb
rcrb
xchg
aas
lahf
pop
mov
insb
nop
jle
rorb
leave
pop
in
inc
lret
rclb
mov
pslld
in
adc
int
jecxz
sub
pop
add
xchg
lret
push
jo
xchg
je
js
jb
mov
in
pop
mov
dec
sahf
push
rorl
rorb
push
ret
xchg
adc
ja
ret
cmp
xchg
pusha
popf
fmull
fs
pcmpeqb
or
cmpsl
out
fmull
scas
mov
mov
mov
xlat
iret
push
xlat
fists
call
in
or
adc
sbb
and
adc
je
sub
call
dec
outsb
daa
daa
daa
push
pop
xchg
mov
leave
cwtl
mov
iret
leave
inc
repnz
lret
roll
mov
jecxz
pop
repz
xchg
out
sti
add
lahf
or
dec
jne
daa
cmp
scas
les
loopne
pushf
fbstp
les
in
outsb
xchg
les
push
add
in
data16
jbe
or
push
enter
mull
test
rcll
and
in
and
dec
dec
hlt
cld
add
mov
pop
leave
jo
lds
getsec
in
jns
ja
mov
in
bound
push
add
in
popf
andb
xchg
movsl
lods
xchg
dec
iret
repnz
adc
fadds
loopne
cmpsl
cmp
iret
das
add
jg
in
outsb
and
pop
sbb
and
dec
sahf
out
add
pop
adc
incl
addr16
inc
repnz
and
mov
xchg
dec
sahf
add
les
leave
or
pslld
in
fisttps
push
add
sahf
out
push
push
ds
in
in
xor
aas
dec
push
frstpm(287
in
pusha
imul
movl
xchg
mov
pop
pop
pop
mov
fld
pop
pop
pop
pop
in
out
cli
movl
enter
enter
pop
cmp
nopl
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
pop
push
adc
iret
sub
push
pop
cmp
jae
push
repz
xrelease
xchg
xor
xor
xor
iret
repz
lret
cmp
cmp
cmp
repz
in
cmp
mull
sarb
fisttps
jns
xchg
sbb
inc
cs
jns
inc
cmp
dec
bswap
repz
pop
inc
gs
jo
fcmovne
repz
dec
xchg
xchg
pushf
cmpsl
mov
dec
daa
dec
aaa
jns
sqrtps
fisubrs
daa
daa
jmp
lret
fldl
ja
fistpll
lret
lret
and
shrl
imul
jg
mov
xchg
lret
and
lret
mov
xchg
lahf
jno
ror
lret
lret
cmp
lret
lret
add
iret
repz
mov
lret
sbb
adc
repz
pop
cmp
inc
repz
repz
pop
sbb
repz
data16
sbb
repz
pop
xchg
and
test
and
xchg
out
leave
aam
fucomip
mov
cmc
cvtpi2ps
cmp
enter
push
and
and
jns
out
sub
aaa
xor
jns
inc
xor
pop
arpl
outsb
daa
iret
xor
jns
test
cmp
leave
repz
iret
leave
repz
fcmovne
repz
rorl
fdivrl
out
adcb
inc
or
sbb
icebp
inc
adc
inc
into
push
int
mov
jne
mov
lahf
es
int
out
mov
pop
jg
xchg
push
xchg
jl
sahf
pop
xchg
or
sahf
ja
xor
rcrb
add
add
dec
ljmp
dec
ds
ljmp
push
in
or
inc
jg
outsl
in
xchg
into
xor
cmp
inc
push
add
add
clts
cmp
cmp
pusha
push
cmp
into
aas
or
mov
nopl
stos
dec
pop
mov
ret
lret
fiadds
lock
lahf
fcom
pop
mov
iret
aas
push
iret
push
iret
inc
pop
pop
pop
push
iret
es
cs
jb
pop
leave
cmp
push
iret
jg
iret
xchg
fucomi
ss
pop
jb
jge
repz
mov
xchg
pop
sahf
or
or
daa
daa
aad
jmp
in
lcall
cmp
cmp
sub
repnz
sbb
in
sahf
out
sbb
pushf
cmp
fisttpll
sbb
jp
jns
leave
repz
out
jbe
cmp
rorb
daa
and
repz
push
mov
das
sub
mov
dec
add
ja
cmp
pop
gs
add
dec
jne
fcmove
dec
dec
dec
cmpsb
test
mov
dec
aad
loopne
push
push
pop
outsl
loop
imulb
rcrb
push
popa
cmp
syscall
or
pop
pop
pop
pop
shlb
shrb
add
pop
setle
dec
sarb
ja
pop
shlb
outsl
push
cmp
in
in
test
nop
sbb
sbb
repnz
movq
in
push
and
fstpl
and
iret
repz
repz
and
repz
sub
sub
nop
lds
mov
ficoms
das
sub
sub
mov
pushf
fldt
pushf
loop
push
jle
cmp
mov
xchg
add
jns
out
stos
lgs
rorb
inc
push
or
xchg
push
leave
xor
roll
aam
aaa
jb
push
aam
aam
push
add
sahf
out
jns
cmp
push
dec
sahf
out
or
data16
outsb
rorb
pop
pop
jno
aam
pop
pop
pop
xchg
xchg
aam
push
adc
adc
scas
xchg
mov
and
cmp
mov
call
das
push
aad
push
mov
icebp
sub
aad
repnz
push
aad
aad
ja
jns
imul
dec
sahf
pop
orl
leave
leave
mov
fcmovne
repz
scas
mov
mov
jns
iret
adc
iret
rep
mov
movntq
sbb
add
scas
dec
ss
icebp
pop
lahf
sbb
sbb
and
icebp
pop
jg
sahf
out
push
push
mov
xchg
or
out
mov
pop
movsb
adc
pop
xlat
psrad
clc
add
iret
repz
adc
adc
cmp
cmp
lahf
mov
fs
xlat
das
dec
jno
leave
rep
push
push
xchg
cmp
and
cmp
mov
and
iret
repz
daa
aam
sub
aam
repnz
sahf
aaa
or
sub
iret
cmp
sub
xor
push
xor
fsubrl
aaa
cmovb
outsb
jns
fcmovne
repz
test
test
xor
imul
mov
lds
fs
shlb
xchg
add
mov
push
mov
mov
cmp
and
dec
out
add
push
and
push
pop
sbbb
cmp
aas
push
dec
stos
xor
pop
inc
mov
inc
popa
sub
cmp
aaa
cmp
push
add
sahf
out
outsb
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
dec
sub
js
pop
data16
inc
or
and
add
jns
jecxz
jmp
sahf
out
sahf
sub
sbb
or
sarl
lock
iret
repz
int3
enter
cmp
pop
mov
lods
dec
sahf
out
movsb
cwtl
nop
mov
push
js
fs
push
iret
repz
inc
inc
cmp
sbb
in
adc
or
push
and
nop
andl
add
sub
add
fs
test
adc
adc
mov
pop
sub
push
jbe
pop
cld
inc
aam
add
add
movsb
add
in
leave
andb
fisttps
mov
cld
push
std
pop
scas
inc
jle
test
shll
int3
push
cmp
repnz
cmp
mov
in
call
out
adc
mov
ficompl
mov
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
es
test
inc
inc
adc
add
pop
add
or
adc
push
clc
ficomps
sub
cli
inc
aaa
push
or
incl
xchg
mov
insb
xor
push
push
mov
pop
add
push
add
pop
add
loopne
mov
or
jl
out
adc
adc
jo
inc
sbb
imul
in
sbb
je
dec
push
sub
mov
js
mov
xchg
out
jl
cwtl
jmp
clc
ljmp
jns
jp
push
cmp
jnp
or
lahf
xchg
xorb
inc
rorb
lods
popf
or
inc
sbb
sahf
and
inc
pop
xchg
push
push
fistpll
or
add
push
sbb
cwtl
jle
xorb
dec
inc
out
icebp
addr16
push
push
mov
sub
jle
adc
mov
jnp
push
push
xchg
aas
pop
stos
movb
push
aad
and
fucomip
lods
mov
imulb
add
ja
dec
ds
inc
sub
bound
mov
out
daa
ja
cmp
add
sbb
rolb
iret
sub
mov
out
jns
pop
aas
lock
and
push
and
insb
cmp
mov
icebp
cld
lock
ds
adc
fsubl
das
push
or
or
cmp
pop
rcrb
in
iret
jnp
sbb
adc
rcrb
repz
repz
mov
test
iret
repz
movsb
and
into
repz
mov
mov
fadds
daa
in
inc
stos
test
xorb
inc
cmp
xorl
jg
cmp
jmp
cmp
pop
js
mov
imul
add
dec
push
add
insl
add
xchg
mov
jae
ljmp
insb
jnp
pop
push
cmpsl
add
dec
inc
pop
jl
dec
push
enter
inc
pushf
or
jl
xchg
mov
adc
xchg
cwtl
push
and
sbb
pop
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
cmp
jg
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
addr16
pop
ret
daa
int3
add
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
pushl
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
pushl
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
dec
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
cmp
incb
jge
pop
ficomps
frstor
loopne
incl
pop
inc
jns
push
pusha
adc
inc
push
dec
test
jnp
cmpsl
pushl
insl
add
ja
popa
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
outsl
call
add
std
test
movsl
cli
test
xor
leave
mov
insb
jg
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
and
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
call
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
movsb
test
xchg
sbb
push
sub
insb
fs
add
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
scas
ljmp
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
pushl
movsb
sti
hlt
shrl
imul
mov
sarb
add
cli
jmp
sbb
or
cmp
add
daa
adc
or
and
jo
test
or
mov
popa
into
push
stc
ficomps
lcall
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
pushl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
incl
insl
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
call
mov
add
inc
push
imul
xorb
sbb
push
imul
aam
jmp
sub
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
jg
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
decl
sub
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
ja
int3
add
mov
cld
incl
and
es
lds
or
add
mov
cmpsl
incl
cld
xlat
ret
shlb
scas
ficomps
ret
es
pushf
mov
push
or
or
addr16
jb
mov
mov
loop
sub
or
mov
xchg
or
out
fdivrl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
icebp
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
hlt
lcall
gs
clc
sar
imul
push
js
or
jmp
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
jg
xor
aaa
pusha
mov
fidivrs
mov
jmp
cwtl
sbb
mov
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
push
mov
mov
mov
sbb
add
sub
ret
pop
xorb
xor
jo
lods
or
dec
pusha
push
sbb
cs
add
repz
fcomp
fcmovu
and
loop
in
repz
in
jmp
iret
repz
repz
cmc
div
cmp
repz
stc
cli
sti
js
jmp
cmp
lods
inc
aas
rorb
inc
lahf
dec
and
or
je
push
out
leave
les
push
popf
adc
mov
cmpsl
mov
inc
insl
bound
mov
dec
popa
inc
mov
sti
je
push
fistpll
push
and
fsubs
cmp
inc
jno
jg
sub
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
outsl
insl
sti
pop
xor
xor
or
xor
bound
push
push
je
push
inc
jbe
jl
sti
insl
pop
insb
imul
es
imul
dec
inc
cmc
negb
push
inc
jne
adc
pop
fidivrl
ss
xchg
test
push
je
movl
adc
insb
daa
sbb
mov
js
insb
xor
inc
dec
dec
add
push
push
addl
add
xchg
insb
popa
jns
lea
push
push
dec
insb
stc
inc
orb
je
lock
inc
insb
aaa
aas
inc
push
inc
add
push
aas
add
adc
jae
repz
daa
int
inc
mov
aas
sbb
add
and
inc
inc
es
xor
xchg
mov
jg
inc
inc
inc
add
ds
adc
sarb
push
jae
mov
xor
rcll
cmp
inc
mov
add
insl
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
clc
or
out
xchg
into
pop
jo
inc
mov
rcrl
jg
adc
in
aam
cltd
dec
cld
push
push
shlb
add
or
or
mov
xor
leave
xor
fwait
mov
mov
rcrl
xlat
mov
add
mov
and
jb
push
nop
dec
add
popa
dec
mov
cmpsl
lahf
push
sbb
test
dec
outsl
aam
shll
jno
stos
mov
push
dec
xor
nop
test
mov
out
add
mov
arpl
sbb
mov
mov
addr16
push
loopne
dec
xchg
insb
jns
or
and
das
inc
jb
push
cmpsl
mov
je
inc
outsl
roll
adc
mov
aas
inc
mov
inc
push
bound
ja
mov
popf
push
inc
jbe
xor
dec
pop
push
jg
push
dec
xor
mov
fistpl
int3
lcall
add
lock
inc
repz
or
push
add
ss
cmpsb
inc
or
mov
mov
inc
dec
sahf
cli
or
inc
adc
daa
push
rorl
aas
sbb
sbb
push
mov
push
inc
dec
pop
cmp
push
jns
arpl
je
cltd
xor
pop
pusha
in
add
aaa
dec
adc
repnz
pop
inc
xorb
adc
push
mov
jno
push
daa
sub
and
inc
inc
ss
or
mov
mov
pop
jp
inc
adc
dec
and
ljmp
xchg
ds
jb
jae
das
pushf
aam
jno
cmpsb
popf
mov
cmp
mov
rcll
cmp
dec
aam
and
cmp
cmp
imul
xorb
enter
cmp
jns
rcr
sbb
shlb
addr16
jle
xchg
mov
lea
lock
outsl
cmpsl
and
hlt
sub
call
mov
stos
loop
adc
loop
fwait
push
xchg
lods
sub
bound
pop
pushf
jmp
mov
pushf
lea
fadds
pushf
dec
inc
fistl
cmpsl
sub
cmp
jl
pushl
jnp
jmp
jl
mov
push
pushf
push
jge
sub
or
pop
out
push
outsl
pop
lcall
mov
xlat
outsb
jne
int
scas
lea
ds
pop
test
rolb
daa
bound
in
sub
pop
dec
dec
inc
imul
jno
xchg
push
test
jmp
mov
scas
mov
movsb
fcomp
sub
mov
jle
mov
lcall
xchg
ljmp
loope
and
jge
sub
push
jl
xor
dec
leave
les
push
fstps
jmp
add
in
insb
lcall
das
mov
mov
jmp
out
std
into
xchg
cmp
aaa
inc
cltd
addr16
into
push
xor
dec
sub
mov
cld
cmpsl
repz
inc
xor
arpl
incb
lea
inc
subb
jmp
pop
fistpl
inc
imul
jb
sarl
pop
dec
insb
sub
aaa
cmpsl
test
das
icebp
decl
jno
push
out
cmp
inc
mov
enter
mov
scas
out
ja
jp
sub
scas
clc
call
add
adc
ret
popf
push
jbe
out
arpl
jg
xchg
adc
jmp
out
xchg
hlt
lods
adcb
mov
stc
jne
pushl
push
movsl
es
or
data16
cld
out
adc
movsb
cmc
adc
dec
movsl
icebp
inc
inc
call
fsts
bound
sahf
sbb
sub
jb
sub
mov
inc
xchg
out
popf
sbb
push
sbb
lods
sbb
movsb
les
bound
fnstsw
rcrb
mov
pop
sub
inc
out
jb
and
push
adc
div
push
jmp
sub
cmp
pop
dec
xor
iret
add
lea
push
test
fstpl
sahf
decl
daa
cmpsb
inc
mov
xchg
stos
sub
add
gs
or
sub
push
shrl
pop
in
jp
mov
push
and
lret
pushf
dec
jecxz
loopne
lret
pop
repnz
xor
and
cmp
fsts
pop
ds
ds
push
jmp
sti
repnz
ffree
imul
push
push
fwait
decl
push
out
adc
lret
sbb
stos
and
xlat
mov
ror
inc
scas
pop
call
cmc
popf
adcb
adc
push
movsl
arpl
push
or
aaa
mov
jno
jg
and
sub
pusha
aam
pushl
test
push
cmp
fidivl
or
arpl
aam
sahf
test
cmp
jmp
cmpsb
daa
mov
je
xor
aad
shl
cmp
stos
mov
cld
rolb
sub
cld
decl
cmp
std
es
sahf
jb
pop
test
fistpll
mov
cwtl
xchg
mov
ds
add
jg
dec
data16
icebp
mov
cltd
mov
jmp
fdivp
andl
dec
loop
int
cwtl
fs
ljmp
cli
int3
dec
or
loopne
scas
mov
push
adc
add
fstpl
xor
ljmp
out
leave
lods
stos
fcmovu
pop
out
jb
push
imul
xchg
fwait
mul
lcall
cmp
cmpsb
add
popa
jae
cmpsl
jnp
dec
pop
adc
mov
sub
lret
pop
mov
out
mov
lcall
sbb
jns
pop
dec
add
inc
loop
adc
xor
stos
loope
sbb
aad
pop
jl
mov
lret
in
repnz
xchg
lock
lcall
out
imul
sub
or
pop
inc
adc
push
loopne
rorb
lcall
lods
push
mov
popf
inc
inc
sbb
push
xor
and
std
sub
movsl
pop
ljmp
cmp
dec
push
inc
add
out
mov
movsl
push
jmp
mov
mov
incl
or
push
mov
aam
out
adc
adc
aad
fstl
hlt
sbb
push
push
loop
jecxz
ret
jmp
xchg
loop
jl
fnsave
sbb
stos
xor
dec
inc
sub
jp
push
mov
mov
and
les
sub
pop
sub
jnp
inc
push
notb
jae
incl
jge
inc
inc
or
stc
mov
xchg
push
dec
cmpsl
gs
pop
jae
sbb
popa
fsubrl
mov
mov
jg
loop
subb
shll
les
cs
push
push
cmpsl
pop
mov
scas
lahf
call
pop
daa
enter
mov
and
mov
lret
fdivr
push
dec
bound
mov
imul
lcall
bswap
pop
cmp
movsl
or
and
sbb
movsb
cs
lret
push
test
sarb
jg
dec
add
and
jnp
ffreep
or
jno
orb
xchg
ret
int
jb
push
aam
or
and
pushl
push
mov
xchg
aaa
adc
dec
bound
int3
add
lods
ds
outsb
imul
insl
dec
ljmp
push
inc
testb
jg
test
jg
movb
cmp
in
fcoml
sub
sub
test
movsb
fucom
movsl
enter
decl
cmp
push
jae
jnp
loop
fiaddl
fs
insb
lret
jne
pushl
les
inc
adc
aad
mov
das
cmc
xlat
popa
fisubl
je
jg
adc
mov
xlat
mov
pop
filds
cmp
mov
mov
pop
push
pop
das
mov
pop
ja
pusha
insl
arpl
jmp
mov
xlat
inc
jl
je
je
push
jg
add
xchg
mov
mov
xor
decl
popa
push
sub
pop
xor
inc
jmp
mov
les
cld
fcomip
lcall
pop
pushf
dec
mov
call
sbb
in
pushl
push
add
jmp
jg
insl
push
ja
call
inc
xchg
pop
fadd
inc
std
decl
mov
in
aas
xor
xor
sar
in
pop
jg
pop
inc
cmpsl
dec
test
xchg
mov
out
lret
or
je
mov
dec
ss
xor
mov
or
mov
lcall
sti
mov
and
push
fxch
sti
cmc
fsubrl
stos
gs
adc
mov
add
testl
insl
xchg
mov
pop
out
sbb
into
call
std
jmp
lods
inc
and
pop
in
pop
cwtl
xorb
fidivs
jle
clc
cwtl
inc
std
jmp
mov
scas
jnp
das
cli
sub
stos
xchg
mov
ja
inc
scas
fcoms
xchg
dec
jo
vmwrite
fwait
jl
imul
rcl
jle
inc
ja
push
push
mov
ss
ds
loopne
jle
fcomip
cmp
insl
or
pop
and
mov
add
inc
in
fdivr
and
pop
add
mov
call
pop
push
ficompl
cmpsl
mov
and
dec
pushf
stos
rcll
and
lcall
int
sub
xchg
aam
movsb
push
mov
rorl
xchg
fildll
add
mov
inc
arpl
aaa
cmp
imul
je
sub
shrb
bound
pop
out
inc
jo
decl
and
movsb
hlt
in
lock
xor
mov
ffree
mov
andnps
sub
decl
fistpll
push
inc
insb
pop
add
ret
movsb
push
fadds
daa
ret
out
adc
jecxz
decb
inc
jp
jb
and
cmpsl
pusha
mov
sbb
test
pop
sbb
pushf
fcomip
mov
inc
jmp
xor
jbe
mov
out
loop
jecxz
ja
cmp
cld
xor
call
adc
cmp
outsl
adc
sub
test
adc
mov
fmull
push
stc
pop
int3
fimull
fstps
pushf
pop
mov
xchg
jbe
mov
pushl
cmp
adc
fsts
or
movsb
stos
inc
adc
and
inc
cmc
int
jg
adc
inc
sbb
mov
mov
pusha
and
xor
mov
pop
or
decl
pop
sbb
ficomps
sub
pop
fisubrl
jecxz
jnp
test
movsl
lahf
mov
hlt
decl
mov
mov
dec
add
ja
test
out
clc
into
jecxz
int3
les
add
filds
jne
dec
cmpsl
sbb
cmp
xor
lret
mov
pop
xor
loope
dec
push
cmp
mov
inc
adc
sub
jno
or
jmp
jmp
dec
sub
rcrb
xor
cmc
mov
mov
ds
cmpsl
into
adc
call
xchg
xor
xor
xor
push
jmp
stos
dec
call
sub
lret
ds
sar
pushl
rorb
in
lods
mov
and
hlt
sbb
xchg
pushl
inc
inc
or
dec
cmp
mov
pop
out
outsl
push
and
sbb
call
cli
adc
lret
fistpll
inc
or
mov
add
daa
mov
jg
gs
jge
xchg
or
sub
je
repnz
test
decl
stos
jl
and
aam
add
fsubs
jns
sbb
int3
pop
fcomip
jg
test
fiadds
loope
into
mov
stos
pop
mov
jmp
jno
fisttps
pop
mov
sahf
test
test
inc
outsl
sbb
mov
fcomip
inc
adc
mov
popa
cmp
push
xchg
mov
rcl
push
jl,pt
push
dec
dec
aad
sub
loopne
add
sub
lock
xlat
adc
pop
or
inc
jmp
in
cli
out
mov
data16
movsb
inc
add
dec
push
in
aas
andb
ljmp
add
scas
push
xchg
and
ljmp
mov
fdivp
xor
jecxz
xchg
jo
fmull
pushl
lret
iret
sub
adc
mov
mov
mov
mov
cmp
adcb
test
jg
std
jl
out
mov
aad
and
repnz
inc
jle
cmpsb
mov
in
sbb
dec
scas
mov
cwtl
mov
mov
stos
xchg
mov
movsl
sahf
pushf
xchg
dec
xchg
cld
dec
mov
stc
repnz
jg
setno
mov
mov
mov
lds
ljmp
inc
cmp
xor
xor
mov
jge
not
sbb
lcall
jmp
lret
mov
mov
pusha
adc
stos
shll
jo
xor
dec
test
mov
fidivs
rclb
fistl
fisttpll
mov
jmp
cli
xchg
xchg
ja
jae
xchg
rorb
pushl
shll
xchg
adc
pop
sub
mov
inc
ror
cwtl
and
push
dec
inc
mov
adc
fcom
int3
cmc
cld
xchg
pop
lds
test
sub
cmp
and
es
mov
sub
sar
pushl
rolb
xchg
and
push
push
repnz
and
call
mov
fildll
notb
ja
hlt
push
pushl
cld
lret
sahf
jnp
shrb
std
jo
xchg
xchg
rorb
mov
add
incl
es
lods
enter
dec
aas
dec
test
mov
jecxz
jle
jmp
fwait
or
in
call
sub
sub
shll
shlb
sbb
pop
stos
das
sar
cmp
mov
fistpll
xchg
lcall
dec
cld
ljmp
bound
popa
xchg
jmp
adc
xchg
fidivl
mov
mov
adc
andl
stos
sub
adc
outsl
add
in
and
sbb
test
sub
mov
incl
test
sbb
sub
test
hlt
mov
cmp
test
cld
out
add
out
cli
ljmp
cld
xor
mov
dec
mov
clc
mov
int3
subb
jmp
jo
insb
inc
sbb
jbe
ret
push
loope
mov
imul
ljmp
jmp
das
push
dec
movsb
sahf
pop
mov
pop
mov
push
subl
decl
cmp
out
mov
in
std
mov
je
adc
pop
jmp
jno
dec
mov
mov
call
les
adc
or
pushl
lods
lds
pop
ds
cli
dec
test
int
jbe
push
dec
push
jg
mov
inc
jmp
cmpsb
arpl
mov
push
mov
push
adc
or
incl
in
in
fisubl
cwtl
cmp
sarl
cli
sub
shlb
add
clc
ss
inc
fiadds
jns
xor
rcrl
mov
pop
xor
xlat
sbb
jmp
dec
ja
jno
and
adc
fs
mov
jae
sbbb
das
push
ret
call
test
dec
and
inc
xchg
ja
jnp
aas
lods
push
addr16
inc
or
insb
ret
dec
outsb
jmp
clc
stc
aas
xor
xchg
inc
insb
je
incw
push
and
jmp
scas
xchg
add
dec
push
lods
push
mov
xor
jnp
push
mov
push
sbb
jb
pushf
jge
enter
or
pop
pushl
popf
jae
fwait
pushf
dec
cmp
xor
push
enter
stos
sbb
mov
test
repnz
mov
sahf
les
add
fcom
xchg
cmpsb
faddl
push
out
aad
int3
aad
ds
fiadds
call
jl
js
data16
nop
in
fsubl
lret
xchg
js
push
and
lock
push
cmc
sbb
jl
fmull
inc
lea
adc
es
leave
and
popa
sub
adc
dec
mov
lcall
and
mov
je
mov
ds
or
nop
mov
sbb
call
xchg
and
push
push
nop
push
test
or
push
sar
jmp
outsl
adc
add
fadds
ds
cmp
jbe
bound
ds
stc
mov
cmpsb
jmp
jmp
idivb
fwait
cli
push
fcoms
jecxz
iret
loop
inc
pop
std
dec
or
mov
call
mov
xchg
fdivrl
lea
dec
xor
sbb
shrb
es
cmp
incl
out
sub
cmc
aam
mov
xchg
mov
fisubrs
add
inc
sbb
fs
and
fcomps
adc
xor
mov
fildll
ret
movsl
push
ficompl
incl
mov
add
adc
cld
das
cmp
fisttpl
lcall
test
mov
lea
sbb
mov
and
jecxz
fsubs
hlt
dec
testl
sub
push
mov
adc
dec
push
mul
fists
jns
mov
xchg
adc
or
dec
cwtl
out
inc
in
jg
mov
fwait
lods
sbb
fcomip
or
cmpsl
pushf
dec
or
loop
jle
cwtl
imul
loop
fdivrp
inc
test
and
jp
hlt
sbb
push
dec
inc
inc
adc
mov
cmp
loopne
fcomip
imul
xor
push
sub
aad
pop
in
xor
gs
mov
and
cmpsb
mov
out
add
inc
pop
stos
push
cld
dec
hlt
cld
sbb
lods
and
ljmp
aam
cmp
sahf
jno
out
aas
adcb
pusha
repnz
cmp
ss
call
enter
imul
add
arpl
lods
dec
in
jg
jbe
fsubp
imul
inc
inc
add
inc
jns
sbb
test
dec
inc
incl
pop
lods
dec
cmp
decl
test
fcomps
orl
sbb
mov
lods
pop
leave
cmc
fimuls
sbb
dec
mov
add
inc
cli
inc
jg
inc
jo
stos
fcomp
lods
lret
xlat
jg
and
jg
aam
adc
fdivrp
pushl
fsubrs
imul
test
cmpsl
ss
pop
rorb
or
test
xor
decl
cli
lds
push
jp
or
rol
ss
ljmp
xchg
xchg
test
movsl
arpl
aaa
test
cmpl
cmc
mov
sarb
shll
jns
cwtl
mov
or
cmp
mov
dec
test
lcall
decl
mov
or
jg
dec
push
mov
aaa
incl
sbb
fdivl
test
sub
mov
sub
divb
push
lods
sub
testb
sub
inc
jg
and
test
test
push
xor
es
mov
mov
pop
mov
pop
or
mov
addb
push
jne
hlt
xor
jmp
sbb
pop
lods
popf
outsb
ret
and
sahf
cld
push
ss
in
out
jo
xchg
sbbb
incl
pusha
add
sbb
dec
dec
or
jo
loopne
in
repz
adc
ret
lcall
je
pop
mov
into
and
mov
xchg
lds
xor
xor
jmp
out
and
out
ja
popf
mov
jnp
outsl
mov
fwait
pop
pushf
mov
popa
call
inc
jmp
cmp
jp
mov
lods
cwtl
movsl
in
or
sub
leave
int3
inc
sbb
sub
dec
pop
adc
std
outsb
and
lret
jae
movsl
mov
ss
xchg
lock
push
mov
pop
jmp
or
pop
outsb
insl
ljmp
push
mov
or
jmp
inc
push
cli
in
sub
int
xlat
sbb
lods
ja
and
mov
xchg
cmc
mov
jmp
xchg
iret
mov
mov
adc
or
push
xchg
ss
loop
mov
xor
ljmp
sar
jmp
enter
adc
mov
leave
sbb
pop
inc
jno
decl
mov
cmpsb
pop
pop
xchg
sub
lods
jge
and
add
dec
int
arpl
cwtl
push
iret
dec
out
mov
popa
dec
jns
incb
pop
or
mov
test
enter
leave
xor
hlt
cmpsl
fwait
loop
add
arpl
xchg
jnp
inc
jp
jecxz
mov
data16
pop
xor
mov
pop
and
add
add
push
push
das
inc
incl
dec
mov
xor
test
inc
cmp
pop
ds
sarb
ljmp
push
adc
mov
mov
test
mov
mov
dec
addb
mov
jp
in
add
adc
push
xchg
addl
adc
repnz
in
sbb
popa
sub
add
popa
faddp
scas
je
out
dec
ljmp
test
cmp
mov
rorl
xchg
lock
loopne
sti
and
in
jmp
and
push
mov
cwtl
pop
push
es
push
shlb
out
outsl
add
sarl
dec
call
andb
daa
sbb
js
jno
loopne
or
int
loopne
push
mov
call
loopne
shll
daa
jae
inc
lods
js
addr16
inc
cs
push
es
jmp
outsl
cmp
sbb
out
or
inc
jns
lea
jge
fsubs
push
adc
call
inc
add
int
mov
sti
ss
out
push
mov
sub
ds
inc
sar
dec
cwtl
dec
in
stc
ficoms
mov
call
addb
sti
or
jg
in
shr
pop
aas
mov
xor
cmp
sahf
adc
outsb
pushl
pop
ds
in
xchg
mov
push
add
out
aas
cmp
int
dec
pushl
xlat
mov
jnp
clc
jle
cs
lret
xor
dec
inc
pop
iret
pop
sbb
ljmp
sar
mov
mov
pop
inc
outsb
mov
sarb
pop
sbb
jns
mov
in
in
add
popl
jle
fiadds
mov
jmp
iret
test
cmp
cmc
inc
outsl
xchg
cmp
enter
movsl
jle
mov
loope
mov
clc
mov
and
imul
aaa
in
stos
add
loope
pop
stos
mov
repnz
loope
decl
push
les
icebp
mov
loope
insl
dec
xchg
cmp
pop
mov
sbb
test
pop
push
inc
call
lock
pushl
push
pop
cmp
notb
rorl
xchg
ret
and
out
and
in
outsb
movsb
ljmp
mov
movsb
rolb
ds
in
std
jmp
repz
into
in
sarl
jmp
lcall
cli
ljmp
lret
lock
loop
sbb
jne
push
int3
popa
or
fxch
jo
jnp
js
stos
inc
sub
and
idivb
add
or
sbb
mov
dec
aam
decl
adc
xor
jne
insl
jnp
and
mov
cltd
xor
jg
pushl
and
xchg
mov
xchg
cli
pop
cmc
or
sbb
out
shlb
pushl
inc
ret
loop
cmp
mov
xchg
lods
int3
push
mov
sub
dec
das
out
cwtl
jne
mov
sahf
scas
sar
clc
pushl
sub
out
sub
push
fs
stos
icebp
daa
xchg
loop
adcb
pushl
repz
push
mov
divl
push
js
lods
imul
sub
jmp
sar
xchg
mov
nop
hlt
mov
push
inc
xor
xchg
xor
jg
sbb
pop
fwait
inc
push
loop
add
sub
fs
xchg
lods
iret
pushl
pop
xor
out
mov
push
or
ljmp
or
int3
mov
push
cwtl
cmp
mov
pop
inc
mov
add
mov
shlb
fsts
adc
insl
clc
ljmp
lock
and
mov
lea
sub
cwtl
lock
pop
fucomip
jl
aad
sarb
sbb
pushl
mov
int
out
outsl
cmp
cmp
cmpsl
aam
push
add
call
outsb
push
iret
add
sti
cmp
sbbb
int3
inc
xchg
add
cltd
lcall
dec
cli
je
movsl
jmp
adc
incb
es
pop
or
pushl
leave
add
dec
stos
rorb
inc
gs
fldenv
jmp
xchg
pushf
xor
inc
sarl
add
or
adc
pop
push
add
in
cmp
adc
sub
rolb
cmp
sbb
insl
ljmp
dec
popf
cmc
pop
and
leave
or
js
js
mov
cld
fidivrs
xchg
mov
sub
push
pop
mov
lock
cmpsl
lret
lcall
roll
mov
movsl
ret
stos
out
nop
scas
sbb
cmpsb
xchg
fs
stos
and
out
cs
adc
lahf
jg
cmpsb
jge
fists
jns
incl
pop
sti
lods
mov
mov
pop
cmp
add
in
cli
push
daa
pop
fcmovne
mov
aad
incl
or
xchg
fsubl
or
mov
jle
push
je
xchg
push
xor
lret
add
lea
decb
jmp
add
push
pop
inc
mov
fnsetpm(287
mov
fdivr
pushl
add
xor
push
aas
push
pop
adc
imul
movsl
jnp
aaa
cld
stos
in
and
jns
pop
push
les
mov
ljmp
mov
adc
daa
xchg
sub
scas
mov
inc
cs
xorl
std
lret
pop
sbb
stos
pushl
out
repz
into
nop
sub
fstl
decl
cmp
arpl
clc
lcall
scas
adc
icebp
test
cmc
scas
cmpl
dec
jmp
roll
decl
jne
lock
ret
ss
pop
adc
push
inc
popa
add
stc
xchg
add
pushl
push
pop
icebp
cmpsb
mov
sbb
jmp
movsl
mov
mov
xor
movsb
out
add
jecxz
call
add
lds
lods
inc
out
inc
mov
and
les
icebp
shrb
fcmovnb
sub
mov
push
rcll
das
mov
jmp
and
mov
inc
jl
cmp
iret
push
movsb
dec
inc
jae
adc
and
out
loop
decl
fistps
aam
dec
dec
cmp
jmp
enter
adc
push
imull
cld
test
jnp
fnstcw
xor
fildll
icebp
repnz
shr
sub
test
pop
loopne
add
pushf
or
out
pop
addl
lods
call
pop
mov
pop
xchg
mov
sub
decl
pop
cmp
mov
cwtl
cltd
dec
aaa
imul
mov
insb
in
mov
sar
lcall
xlat
addr16
cmp
hlt
and
add
mov
outsl
mov
insl
outsl
jge
mov
loope
mov
popa
and
shll
push
jmp
xor
div
fcmove
fnstcw
mov
dec
and
xor
mov
movsl
xchg
outsl
adc
sub
pushf
lret
icebp
loopne
jg
push
add
movsb
loope
xchg
xor
movsb
inc
push
cmpsb
dec
mov
js
sub
pushl
push
fldcw
jmp
es
lret
in
mov
clc
pop
mov
decl
fistps
mov
cmp
inc
xchg
fldenv
out
sbb
sti
popa
add
call
daa
lahf
jo
push
lret
fwait
cli
in
mov
pop
xchg
mov
xor
icebp
sbb
pushf
jb
aad
fs
jmp
imul
out
add
push
into
adc
jbe
pop
in
inc
icebp
insb
xchg
mov
jmp
xor
mov
pop
notl
jg
cmp
mov
dec
stc
push
les
ficompl
dec
cmp
mov
iret
push
ljmp
lods
test
add
rol
scas
shrb
adc
lret
push
cmpb
decl
lock
lods
mov
mov
ljmp
mov
test
jg
insl
aaa
add
pop
stc
dec
in
sub
cld
sbb
adc
cmpsl
fbld
push
scas
push
push
incl
mov
mov
aam
jo
cmp
mov
ljmp
out
mov
popa
xchg
xlat
and
fbld
inc
repz
sub
cmp
mov
xor
jne
lret
dec
mov
insb
sub
inc
pop
jnp
lods
cmp
mov
scas
pushf
popa
cmp
xlat
inc
daa
aad
retw
push
sub
loopne
les
and
or
xchg
ljmp
lret
push
mov
jg
decl
sbb
xlat
mull
inc
fcoms
mov
mov
jno
jbe
xor
in
arpl
fstl
fcmovnbe
add
jg
fiaddl
fisubs
mov
je
add
push
fistps
cmp
addr16
cmpsl
and
movsb
mov
pushl
mov
cmc
ljmp
push
jmp
sbb
decl
xlat
into
in
clc
jae
push
jae
cmp
rclb
arpl
daa
ss
or
lcall
jge
xor
in
out
pop
mov
or
aas
ss
out
js
in
out
int
mov
repz
jmp
adc
mov
xor
mov
dec
sbb
out
clc
call
ljmp
aaa
shrl
pop
test
test
and
pop
dec
mov
jmp
pusha
insl
inc
fldcw
cs
mov
jnp
loop
inc
pop
std
popf
or
jmp
jno
cmp
mov
repnz
enter
mov
lcall
push
inc
add
call
addr16
xor
lock
sbb
ret
call
mov
incl
mov
xchg
mov
scas
dec
lods
call
lods
push
xchg
bound
jb
dec
es
cmp
xchg
std
mov
mulb
pand
cld
fimull
cs
jle
mov
mov
mov
pop
push
sub
push
pushf
cwtl
std
es
push
ret
push
insb
jb
ljmp
add
les
add
ret
fstl
push
insl
push
dec
jl
lahf
clc
inc
add
xor
loop
sbb
js
push
incl
or
or
or
xchg
ss
pop
repz
ljmp
decl
mov
or
scas
mov
cs
or
leave
cmp
lcall
and
data16
in
add
out
mov
out
cli
lahf
push
pop
push
int3
jmp
cs
fxam
jno
or
jle
jae
pop
cs
pop
gs
in
loop
faddp
loop
in
leave
xchg
sbb
mov
fcoml
mov
mov
mov
data16
or
jne
fwait
je
es
cmp
jmp
stos
ficoms
adc
aam
jae
sbb
dec
divb
add
dec
pop
or
mov
fisttpll
mov
jmp
addl
test
mov
xchg
lahf
movsl
adc
xor
in
imul
call
mov
das
mov
cmp
loopne
mov
int
and
ljmp
inc
push
add
fmull
rorl
jae
gs
xor
std
aas
pop
pushl
std
jge
in
in
fisubl
ljmp
in
xor
decl
ss
cmc
test
mov
push
rcrb
xor
shrb
push
mov
mov
sub
mov
fwait
xor
push
mov
ret
pushf
addl
lcall
daa
ljmp
data16
inc
sarb
xlat
add
mov
les
mov
fiaddl
shl
cwtl
ficompl
inc
shl
divl
dec
mov
fmul
ljmp
mov
lods
lcall
fcoms
shlb
ljmp
out
or
jecxz
rcrl
pop
fisubl
dec
xchg
mov
xchg
xor
sbb
push
adc
adcb
sub
and
sbb
xchg
sub
jg
in
mov
das
cli
ds
mov
repz
shlb
out
mov
cltd
fbld
fdivr
jmp
sbb
mov
std
adc
dec
inc
test
xchg
jbe
xor
das
push
std
push
mov
dec
dec
test
stos
pop
dec
jl
mov
push
jnp
sub
clc
and
sub
and
leave
sti
add
int
sub
cwtl
jp
maskmovq
shll
push
dec
movsl
mov
jbe
or
and
jne
imul
cmp
pushl
lods
jmp
mov
xor
pop
jns
out
faddl
stc
loopne
loop
xor
jae
cmc
aas
cmpsb
cli
inc
sbb
fdivs
or
subl
sub
add
xlat
iret
cli
sub
jnp
rcr
lcall
mov
test
xor
ficomps
add
loope
out
sbb
test
ljmp
mov
clc
xchg
dec
scas
sub
xor
lcall
stc
ror
ss
mov
add
insl
fxch
push
addb
xor
xor
mov
push
bound
or
cmpsl
rorb
mov
jmp
mov
xchg
sbb
pushf
adc
push
ss
mov
add
ret
add
xor
in
fidivl
add
dec
pop
and
jo
push
mov
jnp
pop
pop
inc
inc
shlb
hlt
push
movsl
hlt
jbe
push
das
or
adc
lahf
jg
repz
fisubrs
add
insl
xchg
add
lods
jmp
or
mov
loopne
push
xchg
dec
lcall
imul
lret
imul
fbld
cmp
add
out
or
adc
cmc
jg
aam
sbb
or
dec
inc
idivb
mov
pop
jp
xchg
or
leave
sbb
adc
jg
push
mov
cwtl
xor
mov
pop
orb
jno
scas
jo
imul
loope
insl
lsl
lds
and
pop
std
das
jg
xlat
out
notb
ss
dec
nop
mov
xchg
cli
sub
decl
cmp
xlat
and
jmp
imul
outsl
repz
jmp
adc
jg
decl
sub
test
push
or
jmp
sub
dec
mov
and
lret
stos
mov
lcall
lods
bound
iret
jb
jle,pn
and
mov
push
pop
inc
data16
or
or
jnp
cld
outsl
ds
pop
out
mov
mov
or
mul
mov
ss
incl
jl
cmp
cmp
out
mov
mov
call
int
cmpsl
movsl
jg
and
xor
push
cs
mov
jno
filds
mov
jmp
xlat
jge
inc
cmc
adc
cmp
shrl
ljmp
push
call
cmp
sbb
popa
mov
and
sbb
xchg
dec
imul
fildll
jg
jmp
lock
xor
pop
push
pop
pop
popa
gs
sub
lcall
aam
adc
mov
mov
sub
loopne
xchg
mov
shlb
cmp
lds
add
repnz
dec
push
add
aas
fsubs
je
mov
call
push
pop
fstp
xchg
stc
in
mov
out
cmp
push
shlb
into
insb
icebp
aas
out
pushl
cld
xchg
fimuls
outsl
dec
push
addr16
loopne
adc
jl
je
push
fsubr
push
popf
and
dec
dec
adc
cmpsl
test
mov
cld
push
sar
mov
ja
cwtl
xchg
daa
nop
loop
es
sbb
enter
sar
push
fiaddl
fldt
lcall
stos
or
sbb
sub
mov
mov
sub
inc
rcll
adc
pushf
cwtl
jg
lods
push
dec
push
ret
sti
jns
scas
daa
and
fcomip
sub
adc
push
adc
inc
sub
aam
xchg
pushf
imulb
add
jbe
jmp
and
aas
add
inc
or
out
cltd
icebp
pop
mov
cmp
setns
aas
idiv
incl
insl
or
mov
scas
add
ss
jg
popa
jae
lahf
and
mov
push
jns
stos
imul
cltd
sub
push
andl
add
imul
jp
sub
outsl
movsl
fisttps
rclb
test
jns
jp
ljmp
outsb
inc
mov
fwait
mov
push
lds
ja
hlt
jg
fdivr
fcomip
call
inc
dec
ffreep
stc
adc
push
pushf
mov
fcomps
mov
pop
out
add
mov
call
push
pop
sti
bts
out
jmp
enter
sar
in
jo
fisttpl
pop
adc
cld
insb
xchg
mov
rclb
nop
mov
scas
mov
xchg
test
mov
call
dec
dec
cmp
mov
add
push
mov
bound
xor
mov
add
and
jl
and
xor
cmp
mov
xchg
outsb
xchg
inc
lcall
mov
cmpsb
lea
out
repz
push
add
adc
add
incl
mov
loop
push
xchg
sub
incl
lea
adc
mov
push
pop
mov
or
cmc
pop
dec
scas
pop
cmp
dec
pop
lods
mov
lcall
nop
cmp
int3
sub
push
mov
scas
not
jo
je
into
pop
inc
bound
dec
fsubl
mov
sub
cli
testb
push
add
push
inc
jle
xor
dec
sahf
adc
insl
cmp
loopne
dec
sbb
and
inc
jo
cltd
mov
and
lahf
adc
mov
jg
cmp
xor
add
xchg
and
or
xchg
cmp
jmp
sarl
cmpsb
mov
jle
out
adc
push
lcall
movsl
aaa
pop
push
outsl
pop
push
sarb
incl
push
push
test
in
mov
pop
loop
mov
das
jl
repz
adc
std
call
icebp
call
ret
out
push
lcall
repz
daa
cmpsb
mov
push
xor
ljmp
pushf
les
cmpsb
mov
jmp
js
jecxz
fnstcw
lret
xor
adc
ja
sbb
lahf
inc
rcl
pop
add
pusha
inc
cmp
stos
mov
cmc
clc
push
aad
jmp
pusha
out
fsubrl
inc
int
sbb
jmp
sbb
jp
enter
lock
ret
sub
aas
inc
lahf
dec
mov
lea
xor
clc
ljmp
mov
add
lods
jbe
sub
aas
xchg
jp
out
imul
xchg
cmp
or
out
inc
fsubrs
fcomip
les
mov
pop
push
insl
aas
incl
dec
xchg
pop
inc
xchg
mov
sahf
inc
arpl
mov
adcb
incl
fcoml
and
jne
sbb
add
mov
add
lock
call
and
xor
adc
mov
into
das
fstps
jns
jbe
inc
movsl
dec
aaa
shlb
or
mov
mov
lods
lcall
loope
fstps
mov
shll
shll
out
or
ljmp
mov
shll
scas
jp
cmc
xlat
push
or
mov
stc
jecxz
mov
jmp
fisttps
shl
jb
pop
jg
int3
sti
ljmp
popa
mov
mov
cmp
incl
popf
push
je
scas
mov
jge
adc
mov
data16
mov
cld
call
inc
out
in
rcrb
mov
test
cmp
inc
fwait
das
xor
in
mov
add
aaa
outsb
call
shl
jge
xchg
pop
push
cmp
ljmp
add
add
loopne
cltd
je
sbb
ret
das
insb
push
jl
test
enter
incl
mov
pop
in
xor
mov
add
fcoms
add
mov
push
or
ret
xchg
cmp
cwtl
mov
ds
xor
fildl
lock
cmp
rclb
sti
mov
addl
push
fs
push
cmp
sub
pushl
mov
out
push
jo
mov
out
mov
or
cmp
hlt
and
movsb
mov
mov
iret
push
mov
pop
or
sub
not
test
jmp
mov
mov
push
stos
and
cmp
int
and
inc
or
lcall
js
jno
arpl
nop
mov
rcrb
jo
popf
enter
or
push
in
decl
xor
jb
mov
push
add
lods
dec
pop
adc
sti
jne
or
push
call
vaddss
stos
lods
arpl
add
hlt
mov
sub
push
and
ja
les
ss
dec
push
jne
cmp
clc
insb
xor
mov
xchg
mov
aaa
xor
jae
push
xchg
decl
fisubrs
inc
test
lods
imul
popf
jne
mov
repz
pop
push
dec
js
inc
or
jne
shll
pop
push
es
and
ljmp
je
cli
stc
xchg
ljmp
mov
out
xchg
testl
in
sar
fbstp
cs
les
xchg
in
mov
int3
push
sbb
repnz
push
orb
clc
movsb
imulb
sbb
insl
adc
cmp
jnp,pn
mov
and
stos
xchg
fildll
ljmp
xor
jmp
cmp
lds
je
jmp
das
sahf
add
push
mov
ljmp
clc
decl
and
bound
cli
pop
sbb
and
dec
mov
sbb
lcall
ds
popf
sub
jae
addb
jp
insl
pusha
pushl
adc
mov
mov
adc
js
push
loope
cmpsb
data16
ljmp
jno
addr16
xor
jo
add
push
mov
addr16
in
aaa
cmpsl
lcall
call
cmc
lret
jae
adc
mov
test
mov
dec
cld
in
pushf
popl
imul
fmuls
push
pushl
hlt
sub
mov
push
dec
rorb
jmp
mov
fdivr
mov
ficomps
add
into
sub
sbb
addr16
lcall
das
mov
push
lea
mov
idivl
pusha
push
xchg
loopne
cltd
inc
xchg
ret
xchg
pop
dec
fidivl
mov
cmpsb
push
shlb
adc
call
leave
clc
sbb
xor
sub
push
popa
mov
inc
xchg
shr
sbb
sti
fxch
mov
cltd
inc
jmp
cmp
cmp
and
add
cwtl
jp
mov
movsb
push
add
lcall
inc
pop
je
popf
dec
xchg
mov
pop
push
pop
mov
mov
push
out
jne
popa
pop
mov
mov
adc
pop
aad
xchg
adc
and
cwtl
addr16
or
or
sbb
stos
je
mov
cmp
out
sbb
ss
leave
in
sub
mov
idiv
xchg
sub
push
fs
decl
or
rorb
rcrb
cltd
ret
sbb
mov
mov
jge
fsubr
popa
les
mov
mov
test
push
imul
cmp
jg
jge
aam
and
mov
sar
ljmp
lcall
pop
stos
jo
cwtl
out
pushf
xchg
cmpsl
arpl
xchg
jg
add
sbb
mov
xchg
jnp
incl
cmc
ss
dec
mov
jo
push
div
out
mov
inc
loope
idivb
xchg
or
ljmp
cmc
jp
sbb
pop
ss
push
sub
ficomps
sar
out
jb
inc
push
jbe
xchg
jo
jno
loopne
push
or
jno
push
pop
stos
loop
jg
bound
mov
andb
stos
pop
test
or
mov
nop
icebp
jbe
subl
mov
push
lods
aad
inc
cmp
sub
aam
lret
push
or
arpl
xor
ret
and
shrl
movsl
mov
daa
sti
jnp
std
cs
lret
or
or
out
lahf
mov
shll
movsl
sahf
cltd
pop
test
insb
push
std
loope
xor
in
lock
xor
adc
jb
inc
jns
aas
adc
aas
mov
jbe
test
push
movsl
push
sub
lock
dec
and
sub
jmp
push
movsb
cmp
jmp
je
sub
inc
push
xchg
sub
dec
push
imul
mov
add
jle
ljmp
jecxz
sahf
aas
outsb
dec
or
mov
fildl
lock
cmp
stc
idivb
push
add
push
jecxz
add
xchg
ret
ss
cmpsl
outsl
aad
cmp
cmp
into
lods
dec
shl
inc
cltd
cmpb
ljmp
fistpl
jp
sbb
sub
dec
and
or
popf
or
push
pop
movsl
ja
inc
inc
lds
fadds
or
sub
insl
leave
xchg
mov
pop
inc
cwtl
fucomp
push
incl
push
jge
sbb
jns
cmpsb
decl
daa
stc
imul
decl
push
clc
rcll
ja
icebp
dec
hlt
loopne
lcall
call
test
pop
mov
loop
and
jnp
pushl
aad
ss
dec
aas
mov
mov
xchg
pop
icebp
add
sbbl
pusha
push
adc
sbb
lcall
push
aaa
jmp
cltd
jo
mov
mov
jg
loopne
cmp
mov
repnz
jg
aaa
pop
mov
ds
jb
mov
jle
in
adc
shlb
or
or
lea
mov
test
jp
mov
inc
fucomip
jp
dec
mov
bound
or
in
out
inc
cmpb
mov
rcl
inc
mov
je
aaa
pop
push
lahf
push
not
out
ljmp
stos
fidivl
jb
sti
cwtl
cwtl
adc
and
adc
fwait
sbb
xor
clc
add
mov
mov
push
mov
stos
jecxz
dec
mov
imul
push
xchg
add
adc
mov
bound
ftst
jmp
cli
xor
mov
aad
inc
fisubs
addr16
dec
test
lods
jae
hlt
int3
testl
cmp
ja
or
aad
test
hlt
add
je
divl
outsl
sbb
jo
test
loope
xchg
xchg
dec
xchg
or
sbb
fidivl
or
push
mov
and
inc
clc
push
into
call
push
lock
jecxz
push
mov
stc
xor
and
subb
orb
fstpl
jmp
loope
or
pop
rclb
dec
jns
fwait
sbb
sub
push
movsl
aam
outsb
fidivrl
dec
ss
insl
pop
cmp
data16
negl
xorl
xor
in
push
and
jbe
inc
sbb
xchg
and
cmp
xor
mov
dec
mov
jnp
ljmp
add
sub
pop
shrb
or
aad
push
and
stc
jmp
mov
mov
test
cmpsl
cmp
ret
and
mov
adc
cld
outsb
inc
push
mov
xor
xor
out
and
mov
incl
hlt
jo
sbb
in
inc
inc
xor
adc
cwtl
xor
in
push
out
popf
inc
incl
xchg
nop
testb
adc
sub
leave
pushf
and
jle
cmp
or
lds
add
incl
fs
dec
aam
fcompl
clc
ret
sbb
repz
pop
xlat
das
xchg
dec
mov
inc
sarb
add
mov
decl
shr
push
add
das
push
out
mov
roll
adc
cwtl
push
push
pushf
mov
loopne
pop
decb
adc
push
dec
inc
sbb
xchg
jmp
ljmp
jg
adc
call
ja
cmp
lods
pop
popa
add
js
pop
jle
mov
shll
ret
xor
push
jae
lret
pop
sar
fidivl
sbb
loope
testb
cmp
sbb
dec
push
xor
ficoms
dec
push
idivl
clc
cmpsl
push
pop
js
call
jle
out
cmp
lret
cmp
xchg
mov
insl
lcall
jb
mov
test
and
inc
mov
pushf
adc
inc
aas
lret
cli
cmp
pushl
and
mov
lahf
inc
push
pop
and
sbb
xor
mov
jg
hlt
cmc
xor
icebp
mov
mov
push
lcall
adc
call
fwait
test
mov
insb
or
cmp
imul
push
imul
sbb
mov
adc
mov
outsb
jl
ljmp
xlat
sbb
mov
mov
lods
pop
dec
and
mov
imull
outsb
lcall
dec
call
cmp
mov
jae
dec
sub
add
test
call
ss
ds
clc
cmp
out
push
mov
and
mov
call
std
incl
mov
mov
fmul
mov
inc
xchg
add
sbb
mov
inc
pop
adc
lret
lret
outsl
jae
xor
rcl
sub
and
decl
mov
jle
mov
data16
push
xchg
push
loopne
pop
push
ljmp
jl
sahf
call
dec
stc
dec
mov
cmp
sub
fs
xchg
xor
rcll
call
push
xchg
pushf
das
loop
or
mov
mov
mov
fcomip
fisttps
adc
dec
jmp
ret
scas
add
std
pop
gs
mov
and
cmp
imulb
and
cmp
loopne
into
sti
std
pop
xchg
mov
outsl
gs
clc
outsl
decb
xchg
out
clc
dec
mov
xchg
int3
jne
mov
pop
sbb
stos
data16
pop
and
mov
pushl
test
sbb
ja
jp
jmp
leave
inc
push
add
mov
aaa
inc
or
dec
cmpsb
mov
sahf
popf
cmp
push
imul
push
pop
lcall
lds
mov
adcb
jae
in
outsb
xchg
insb
xlat
cmp
cmp
cltd
aaa
mov
cwtl
arpl
cltd
xor
ljmp
inc
fisubs
loop
rclb
push
cld
shll
jno
call
filds
aas
repz
lret
repnz
xor
inc
push
stos
test
jae
cld
call
xchg
sub
fdivl
xor
jg
push
stos
cwtl
hlt
push
sti
frstor
jne
dec
mov
popf
adc
movsb
stos
mov
call
inc
dec
dec
insb
dec
or
fnstcw
gs
or
iret
loop
cwtl
in
push
add
jmp
dec
or
push
xorb
mov
fwait
mov
movsb
rorb
adc
dec
ljmp
xchg
ret
xchg
fidivs
jne
sar
decl
dec
fisubs
mulb
repnz
push
iret
rcrb
cmp
pop
inc
clc
cld
sub
push
cmpsb
add
mov
pushf
cmpsl
lds
insb
jp
pop
xchg
sbb
out
xor
shl
jecxz
jo
dec
pop
mov
xlat
xor
imul
inc
faddl
popf
sbb
lar
int3
addb
xorb
clc
addr16
or
rcrb
in
stc
rclb
loope
pop
cld
inc
repz
dec
popa
push
pop
jecxz
push
mov
dec
jmp
jmp
in
and
inc
fwait
or
xchg
pushf
shlb
xchg
mov
xchg
mov
popf
dec
sahf
lret
jmp
sub
lods
loop
test
pop
push
insb
and
mov
dec
cmpb
jmp
adc
mov
shlb
mov
push
and
nop
xchg
pop
sbb
push
cmp
sub
lock
dec
stos
and
out
lret
push
insb
add
gs
rcl
sub
decl
push
daa
imul
cmp
neg
pop
sub
lret
fbstp
bound
mov
dec
mov
sbb
repnz
and
lock
mov
incl
sub
add
push
out
xchg
data16
hlt
pop
icebp
aaa
xchg
pop
adc
incl
xchg
cmp
xlat
lahf
cmp
addr16
xchg
mov
jae
push
fs
arpl
cwtl
incl
sub
scas
seto
movsl
mov
push
or
and
jecxz
sub
popf
xor
sub
jg
cmp
jae
push
repnz
in
in
adc
push
inc
xchg
sbb
dec
gs
mov
mov
lea
jmp
cmp
sbb
sbb
movsl
pusha
ljmp
pop
lcall
jg
addb
ja
mov
mov
xchg
repnz
cli
rcrl
mov
push
sub
inc
lcall
xchg
xlat
pop
jmp
lcall
ljmp
mov
arpl
sbb
xchg
xor
daa
cld
popa
test
clc
lcall
add
dec
js
and
pushf
scas
push
xor
add
clc
lds
stc
lock
push
xchg
into
insb
jl
in
or
adc
push
sbb
decl
jns
scas
cmp
fs
mov
loopne
push
lods
adc
jae
mov
cmpsl
movsl
les
jmp
rorl
lods
cltd
jl
js
nop
fnsave
fsubs
mov
add
jl
inc
aas
dec
adc
jmp
fwait
int3
xor
mov
sbb
push
mov
shll
ljmp
mov
xchg
lods
sbb
push
xor
ljmp
lcall
and
mov
ljmp
cld
out
xchg
ljmp
sub
sti
inc
jmp
andb
clc
lret
pop
push
iret
mov
ss
cmp
dec
pop
movsb
xchg
out
push
bound
adc
icebp
push
jae
icebp
xchg
lcall
jmp
iret
repz
shlb
xor
in
aad
xor
lock
jmp
decl
and
adc
mov
mov
push
dec
notl
aas
testl
ljmp
pop
pop
pop
in
adc
jbe
add
in
sub
sbb
inc
stos
jbe
icebp
cmpsb
jle
out
sar
ljmp
lods
or
mov
mov
gs
fiadds
mov
jnp
inc
loope
jnp
cmp
jg
repnz
cs
lods
movsl
xchg
jns
sub
pushf
xor
jecxz
std
pop
decl
repz
pop
jbe
mov
pop
jo
arpl
pop
repnz
jmp
lock
lahf
pushf
pop
out
xchg
mov
mov
dec
and
add
push
inc
or
hlt
cmpsl
inc
sub
mov
inc
imul
add
ret
cmp
lcall
push
shlb
mov
adc
mov
aas
mov
push
repnz
jg
jne
call
mov
sub
jg
xchg
aam
push
xor
jmp
outsl
push
sbb
xor
fucom
and
jge
mov
pop
fwait
mov
adc
pop
sbb
or
mov
jmp
inc
pop
stos
js
je
jmp
xchg
pmullw
in
jecxz
fs
sbb
std
outsl
push
mov
jmp
lods
lock
popf
cmpsl
mov
scas
data16
gs
test
into
in
add
dec
or
sbb
push
lcall
pop
in
mov
jg
xchg
dec
cmpsb
pop
fstl
jae
mov
push
add
fdivr
inc
mov
and
decl
sbb
dec
sbb
jne
cmp
or
xor
push
fdivl
mov
sub
lods
xor
shrl
push
push
sbb
idivl
sbb
stc
ss
decl
daa
jge
mul
ljmp
sgdtl
scas
add
mov
data16
fstpt
mov
js
stos
cli
decl
js
pushf
nop
sti
mov
hlt
sub
shl
jg
xor
mov
out
pop
jle
push
ret
dec
test
fdiv
stc
cld
stos
js
sub
addr16
test
lods
push
mov
pop
popf
cwtl
decl
popf
xchg
ret
imul
jne
mov
out
xchg
daa
nop
enter
int3
leave
pop
and
js
xchg
in
rorl
iret
mov
push
push
lret
inc
xchg
leave
incl
jp
mov
into
dec
iret
jp
inc
popf
mov
mov
adc
sbb
add
les
xlat
ja
imul
ljmp
scas
cmp
push
push
push
mov
pop
push
jge
aas
sub
push
insb
add
mov
pop
cmp
dec
mov
add
andb
sbb
jae
mov
movsl
push
jp
outsl
and
pusha
xchg
popf
les
hlt
mov
incl
push
icebp
add
jmp
xchg
xchg
pop
fcompl
cmp
lds
cmpsb
jno
or
mov
mov
lods
jno
dec
loope
mov
pushf
ss
in
push
int
lcall
test
mov
fwait
in
xor
push
pop
cmp
repz
idivl
mov
jmp
in
inc
cld
rorb
in
push
jb
loopne
push
mov
pop
icebp
inc
idivl
mov
nop
lret
sub
pusha
mov
ss
ret
push
mov
lock
pushl
adc
scas
dec
dec
lea
lods
popa
pop
popa
jne
adcl
pop
dec
cmp
pop
jle
xchg
adc
aad
dec
or
ret
pop
icebp
lcall
pop
pushl
inc
xchg
inc
pop
pop
xchg
or
lret
shr
jno
push
or
jbe
push
arpl
mov
lret
sub
fcmovb
xor
ljmp
shrb
paddb
fildll
enter
fbstp
pop
mov
pop
cltd
push
pop
iret
lahf
fldenv
lods
shll
mov
jge
mov
jle
mov
cmp
pop
jg
sbb
les
in
rorl
xchg
and
jg
sbb
xor
nop
scas
pop
ljmp
aaa
and
test
imul
push
xchg
add
scas
cli
decl
stos
jg
fwait
testb
mov
dec
push
pop
fidivl
push
xchg
mov
push
mov
jp
or
sub
mov
aad
outsl
or
addr16
cmp
js
decl
ja
js
xor
loope
fs
enter
orl
outsl
fsubrp
or
adc
not
cmp
sbb
enter
out
mov
adcb
jae
hlt
jl
in
sbb
decl
sub
ret
and
stos
or
loope
lock
pop
or
test
int3
mov
push
into
daa
xor
jmp
push
fsubl
mov
stos
inc
mov
sub
int3
lcall
mov
in
add
ljmp
insl
cmp
xor
push
stc
adc
popa
cmp
out
or
mov
lock
push
sti
out
pop
leave
mov
push
clc
decl
aad
loope
repz
pushf
movsl
ljmp
decl
sub
jne
sbb
call
cmp
push
popa
pop
dec
popf
mov
jp
sbb
add
jb
push
sarb
repz
mov
jge
and
das
movsb
aam
sbb
decl
scas
daa
and
jo
pop
in
pop
push
ss
or
lret
lds
call
imul
je
xlat
pop
lcall
and
popa
mov
test
fdivrs
out
cli
decl
and
lcall
hlt
xorl
mov
lcall
in
pop
jo
mov
pop
mov
movsb
aaa
xor
ja
pop
test
cmc
fmull
decl
add
push
cmp
dec
negl
sub
mulb
sub
push
fs
fnstcw
lock
xchg
arpl
dec
pop
adc
cwtl
int3
enter
js
cmp
mov
mov
push
xchg
jg
scas
das
pop
push
xchg
out
pop
jno
int
dec
scas
fs
bound
dec
outsb
mov
sbb
daa
jp
push
outsl
push
cmc
lea
incl
xchg
ljmp
or
xlat
cwtl
fnstcw
pop
aam
or
xor
aaa
jle
mov
push
lahf
mov
lds
jb
dec
dec
inc
sbb
pop
imul
lcall
outsb
jle
fcmovb
scas
dec
in
mov
and
jbe
int3
jae
pop
aaa
add
mov
ljmp
sbb
jle
enter
mov
fisttps
sarl
hlt
push
sub
jg
push
jb
decl
into
into
mov
adc
xor
call
shrb
lds
adcb
incl
shlb
mov
inc
pop
out
ja
imul
aas
rcrl
cld
jg
lods
aas
icebp
aam
jg
push
mov
into
or
dec
pushf
ja
jg
jl
in
ds
jg
imul
aad
push
into
addb
out
icebp
mov
adc
cmpb
js
mov
add
fsub
xor
jg
push
loop
jle
mov
and
jae
pop
ret
lock
or
ljmp
xchg
sub
scas
in
sub
xchg
inc
or
imul
cld
incl
pop
in
and
out
in
repnz
push
lods
pop
fdivr
jae
sbb
pushl
jb
decl
jle
push
and
jbe
hlt
cltd
sbb
incl
fwait
xor
cmc
mov
lahf
out
xchg
sub
jne
call
dec
nop
mov
xlat
mov
dec
testl
jp
cmp
ret
adc
sub
mov
or
xorb
pop
dec
scas
pushf
loopne
sub
push
insl
out
iret
dec
adcl
xchg
test
inc
jae
dec
repz
ret
pushf
add
and
mov
adc
mov
sbb
jle
scas
push
dec
cmp
sub
or
or
arpl
outsb
xor
in
mov
adc
pop
fiadds
dec
add
inc
in
scas
movsb
adc
cmp
jg
stos
es
movsl
push
adc
cwtl
mov
jp
iret
aam
push
repz
pop
mov
adc
decl
and
cmp
cmp
fimull
ds
xor
in
xor
out
jne
std
lcall
loopne
jne
dec
cltd
test
ja
out
and
lea
pop
or
call
out
xchg
in
or
das
xor
push
fsubl
mov
fimull
pop
pushl
std
ja
loopne
mov
repnz
jge
push
adc
test
rclb
mov
shl
decl
mov
adc
mov
push
xchg
xor
neg
dec
xor
push
pop
lods
sbb
inc
lcall
incl
out
orl
jae
in
lcall
sarl
in
cld
mov
lds
sbb
and
je
cmpsb
ljmp
sti
stos
sub
mov
sbb
mov
pop
or
outsb
hlt
mov
cs
shl
mov
pushl
fscale
aad
ss
jge
push
sbb
sub
std
push
imul
xor
mov
lods
clc
decl
movaps
repnz
sub
mov
mov
xor
subb
push
pop
mov
mov
int3
xchg
xchg
test
loopne
dec
and
push
lods
adc
dec
iret
les
jmp
dec
jb
aas
push
xor
lret
cmpsl
mov
mov
iret
jbe
sub
incl
loopne
dec
xchg
jo
pushf
in
into
dec
xor
scas
ret
jg
and
loop
pop
and
clc
jl
jmp
outsl
nop
or
and
inc
add
sub
mov
incl
sbb
push
movaps
js
std
or
fldt
call
jg
call
cmp
pop
dec
call
mov
xchg
pop
push
jae
mov
xchg
add
shll
outsl
pop
aam
xchg
call
sbb
loopne
dec
cmpsl
in
out
add
pop
push
cmp
mov
push
repnz
cli
insl
pop
mov
jae
and
xchg
cli
dec
call
rorl
cli
adc
xor
pop
fs
inc
mov
pushl
enter
scas
addr16
loopne
mov
decb
je
push
cli
int
mov
mov
xor
jg
sar
lcall
jae
les
xor
pop
call
dec
add
lcall
mov
push
mov
jl
jb
stos
movsl
inc
add
or
jle
leave
xchg
dec
mov
cmp
mov
add
xor
insb
xor
pushf
test
jns
cltd
adc
ret
or
ljmp
lods
sub
lds
mov
cmp
lock
xchg
inc
push
xchg
mov
cs
or
iretw
iret
gs
xlat
loopne
xchg
mov
rclb
push
rorl
fwait
push
ljmp
xchg
fs
and
xchg
scas
sub
xchg
dec
out
loope
fstl
sbb
cmp
xorb
mov
popa
dec
imul
dec
out
mov
fbld
mov
scas
jmp
fidivrs
imul
or
or
or
lods
test
incl
cld
jmp
inc
mov
mov
add
ja
fsubrp
scas
and
sahf
jmp
cli
orl
sub
jne
pusha
shll
sbb
pop
push
xor
xchg
out
addb
jmp
add
jecxz
ljmp
scas
lock
jge
enter
dec
xchg
fs
clc
jmp
cmp
cmpl
leavew
das
data16
lods
fcomps
add
adc
or
and
dec
xchg
mov
mov
sub
fadds
jbe
into
stc
jmp
loopne
sbb
mov
dec
push
sarl
push
loopne
pushl
fisttps
stc
jns
test
in
xor
mov
adc
popa
lcall
icebp
fmuls
movsb
sbb
jg
popf
into
jp
hlt
out
mov
jo
es
dec
mov
push
push
mov
ret
add
jle
cmc
pop
loopne
pusha
mov
add
das
sar
outsl
cld
push
xchg
jbe
mov
add
test
fisubl
dec
push
pop
lock
add
lods
repnz
mov
jns
shl
jmp
adc
dec
pop
aaa
sahf
hlt
push
dec
bnd
sbb
fsubrs
inc
rcrl
fistl
shrb
cmp
lcall
lock
cmpl
jmp
jns
rcl
or
jmp
sbb
ljmp
dec
cmp
clc
insb
xchg
fcoml
jns
mov
ficomps
adc
out
inc
fistps
repz
roll
lods
les
jle
or
cwtl
negb
outsb
xor
and
adc
sub
js
push
cld
pushl
xor
insb
test
loopne
sti
pop
push
cmpb
insl
iret
push
call
cmp
cmpsl
mov
out
jle
pushf
int
cwtl
push
insb
movsb
xchg
sahf
das
nop
pop
leave
imul
in
sbb
rcll
or
sbb
pop
xchg
sbb
sub
repz
ljmp
jl
lahf
mov
sub
decb
jmp
scas
sar
mov
mov
pop
stc
sub
repnz
push
loope
iret
cwtl
jecxz
mov
mov
dec
dec
rcrl
mov
and
push
js
mov
icebp
lret
call
ds
fstl
arpl
rcrb
enter
add
sub
int
add
cmp
jbe
out
push
in
jmp
shlb
int
or
mov
int
mov
fcom
divl
fldl
std
mov
cld
fdivl
mov
out
mov
jnp
call
jmp
outsb
int3
movsl
fwait
mov
mov
andb
decl
ljmp
in
shrb
lahf
mov
jmp
aas
xchg
test
ljmp
rorl
or
add
xor
mov
loopne
fisttpl
add
pusha
enter
ljmp
xor
divb
push
out
xchg
hlt
adcl
into
lock
das
notl
dec
lret
movsl
jae
adc
dec
xor
and
adc
dec
out
inc
stos
jo
add
mov
repz
adc
dec
sub
es
addb
mov
lods
mov
mov
adc
inc
or
fists
arpl
stos
xor
jmp
inc
outsb
mov
xor
jle
xor
sub
bsr
fisttps
mov
cmpsl
adc
mov
inc
mov
lcall
test
add
out
loopne
outsb
ficoml
pop
cmp
pushl
mov
filds
movsl
lret
xor
push
iret
dec
cmc
cmp
stos
ss
cli
or
jbe
push
inc
shll
pop
fnstenv
pop
addb
jmp
lock
mov
mov
mov
mov
sarb
inc
jl
mov
push
incl
das
mov
lods
aaa
cmpsl
mov
das
mov
push
int3
ds
jnp
test
xchg
pop
loopne
dec
out
ret
dec
inc
or
pop
add
test
fs
rcrl
ss
mov
jmp
mov
cmpsb
and
jecxz
rcr
mov
mov
arpl
mov
aas
xor
jmp
scas
mov
dec
clc
and
mov
pusha
push
push
mov
mov
rcrb
cmpsb
cli
jl
incl
cmp
jno
int3
jno
pop
xor
inc
xchg
mov
shll
pop
jmp
int
fisttps
loop
ja
xchg
dec
add
add
inc
adc
addr16
pushl
jp,pt
pop
jnp
sbb
xchg
mov
mov
in
mov
jmp
pushl
push
dec
push
jmp
js
daa
imul
hlt
sbb
pushl
jg
push
pop
mov
xor
or
add
mov
xchg
andl
jge
sti
and
lock
es
in
loope
adc
jo
fdivl
jmp
push
scas
push
or
dec
pop
popf
adc
shrb
mov
jecxz
add
push
es
ss
leave
dec
mov
and
inc
push
iret
adc
mov
scas
mov
xor
adc
pop
or
lods
inc
push
xchg
push
xchg
call
push
mov
hlt
lods
ret
ret
movsb
mov
or
adc
adc
ds
xor
cmp
mov
test
xor
dec
or
adc
jo
call
pushf
mov
sahf
lods
movsl
aaa
aas
stos
sbb
rcll
and
cmp
lcall
xchg
ror
sbb
fcoml
lods
mov
adc
sahf
xchg
lahf
mov
dec
push
fisubrl
mov
js
fdivrs
icebp
mov
dec
pop
mov
adc
clc
lcall
insb
repz
push
ret
pop
jns
je
sbb
mov
pop
cmpsl
dec
jmp
xorb
xor
pop
pop
push
lcall
ljmp
mov
hlt
js,pn
ret
pop
das
pop
outsb
adc
and
scas
cli
mov
das
push
xchg
call
stc
iret
lock
notl
pop
mov
push
inc
jmp
hlt
xor
xor
mov
in
orb
movsb
scas
orb
add
cmpsl
faddl
push
xor
das
mov
in
cmc
scas
clc
fadd
outsl
push
movsl
and
mov
in
test
scas
ss
cs
jp
mov
imul
test
pop
les
in
sbb
in
ljmp
leave
adc
data16
sbb
mov
mov
lds
hlt
jo
mov
mov
gs
aas
lret
sbb
das
pop
rcll
jle
mov
cmp
mov
fildll
mov
xchg
pushf
and
pop
sbb
out
add
ljmp
out
sub
repz
or
scas
shlb
out
inc
fs
rorl
lods
les
out
ljmp
mov
jmp
and
test
fs
push
add
adc
push
imul
iret
xlat
daa
decl
sub
add
repnz
shl
mov
sub
mov
decl
dec
add
int3
outsb
mov
push
push
mov
movsl
sbb
popl
mov
jmp
stc
leave
cmp
iret
add
out
inc
fwait
xor
and
iret
lds
rcl
rorb
push
cmp
push
jl
xchg
mov
ljmp
sub
sub
xor
pushl
mov
ljmp
cmc
das
xor
mov
sahf
or
jne
in
mov
xchg
jb
sub
ret
ljmp
clc
lcall
pop
mov
test
inc
mov
cmp
fcmovnu
andl
xor
sar
mov
fidivl
inc
sbb
ret
ret
and
pushl
push
mov
out
mov
daa
push
fs
imul
cmc
pop
incl
xlat
pop
ret
inc
jne
loopne
ss
add
loop
je
jge
lock
pop
movsb
adc
dec
xlat
sbb
sub
cwtl
mov
sar
decl
into
es
mov
ror
je
in
ljmp
or
or
sbb
stos
shrb
xor
stos
lods
test
jno
xor
lcall
hlt
nop
xchg
and
inc
jg
iret
into
out
fwait
pop
movsl
enter
stos
mov
pop
jmp
cmp
sub
daa
xchg
sub
popa
mov
add
xor
cltd
fcompl
push
jns
hlt
xchg
ret
loopne
lcall
xchg
pop
mov
mov
inc
repnz
push
cwtl
shlb
clc
les
lcall
cmp
sbb
adc
andl
mov
mov
incl
rolb
sub
je
cmp
stos
int
jg
push
xchg
jmp
adc
mov
jbe
dec
pop
mov
push
or
sub
fistpll
int3
out
add
mov
sub
les
xchg
test
mov
das
or
mov
sbb
mov
mov
push
sarb
adc
jae
push
adcl
sar
add
mov
enter
mov
xor
or
xor
add
inc
stos
cmc
cmpsl
xchg
jb
or
mov
decl
insl
pop
in
aam
sbb
aam
sub
mov
mov
rep
mov
mov
mov
jmp
sbb
adc
icebp
sub
cwtl
test
ljmp
push
lcall
call
fwait
mov
lock
out
sub
adcl
bound
jle
cmpsl
pop
mov
add
call
adc
popa
imul
fistl
or
ljmp
lcall
clc
xchg
pop
xchg
mov
mov
xchg
dec
sbb
adc
sbb
decl
sbb
sar
sbb
fldenv
mov
add
jae
in
dec
std
movsl
inc
lcall
xchg
or
mov
mov
add
inc
ret
lock
cld
xchg
bound
popa
insb
inc
pop
lock
inc
cli
daa
ror
cmp
push
jp
mov
adc
mov
pop
xor
pop
stos
lcall
push
push
in
adc
mov
push
sbbb
mov
dec
or
cmc
push
xor
addl
mov
popf
add
lds
sbb
in
cld
decl
je
xchg
mov
adc
or
cmp
or
ja
or
and
jg
fmul
sarb
popf
sub
mov
pop
insb
das
and
push
fisubs
dec
test
and
aas
popa
add
lds
in
in
and
pop
hlt
incl
xor
fs
xlat
loop
inc
mov
xchg
xor
push
sub
cld
sub
incl
icebp
les
xchg
sub
pop
jmp
cmpsb
pop
out
mov
cmpsb
clc
fistpll
cli
push
inc
sbb
ja
outsl
decl
out
in
mov
jb
lods
mov
jo
xchg
call
pop
ja
fwait
loop
mov
xchg
jae
rclb
push
scas
repnz
decl
add
fstpt
and
inc
mov
pop
scas
cmp
jge
cld
icebp
je
inc
sub
jmp
nop
or
sbb
add
and
sbb
and
fildl
add
jno
sub
lds
cmpsl
or
mov
push
mov
shr
mov
xor
decl
mov
int3
rol
stos
ret
jno
push
jmp
stc
mov
movsb
rcrl
adc
cli
ljmp
mov
outsl
outsl
fistpll
sarl
mov
aas
subb
inc
pop
in
sbb
and
mov
adc
repnz
cwtl
sub
aad
out
int
lea
push
lcall
jl,pn
shlb
mov
clc
jns
xor
xchg
or
jmp
mov
sbb
arpl
mov
jp
xchg
xchg
pop
aad
xor
and
js
ljmp
xor
push
jne
ret
daa
test
and
enter
dec
imul
sub
add
idivb
jmp
dec
xor
cmc
mov
fnstsw
sub
pop
pop
pop
repnz
negl
inc
xchg
ret
mov
inc
cmp
jg
jg
push
out
sub
jg
clc
sub
mov
mov
xchg
pusha
movsl
mov
jo
jmp
enter
xlat
sub
or
xor
push
xchg
shlb
clc
ficompl
dec
ljmp
ss
xorb
mov
adc
or
cmp
in
sbb
incl
lret
lods
notb
sbb
sbb
mov
out
out
dec
xor
in
xor
pushl
je
add
cltd
jl
in
and
jle
aaa
mov
out
cmp
stc
adc
jmp
rorb
hlt
sub
das
loope
ja
jno
gs
cmpl
jmp
hlt
out
aam
mov
scas
data16
dec
add
sub
stos
xchg
inc
sbb
pop
stos
xchg
lds
or
pop
lds
sbb
dec
repnz
jo
cmp
jb
mov
ss
loope
pop
int
aad
and
ret
add
hlt
incl
add
adc
fsubrs
push
lret
sarb
push
in
push
sub
mov
push
cmp
lock
jbe
mov
scas
pusha
into
jp
add
ret
sbb
into
and
fucomp
mov
es
mov
dec
push
lret
pop
mov
orl
dec
pop
pop
push
jno
cmpsl
and
push
xchg
jmp
pop
sbb
adc
jg
mov
mov
adc
je
test
and
mov
test
pushl
cld
roll
ficompl
adc
pushf
sbb
push
cmpsb
lcall
lcall
xor
sub
push
repz
imul
push
out
pop
mov
dec
jo
rorb
lcall
in
aad
mov
cltd
push
cmpsb
lea
jle
xchg
push
inc
scas
into
or
cld
in
in
cmp
js
adc
faddp
repz
daa
xor
sbb
pushf
pop
repz
sbb
pushl
jle
ret
pushf
imulb
aas
sbb
out
sar
call
ljmp
ja
adc
fdivrs
cld
jo
pop
nop
sbbl
push
jnp
mov
call
es
insl
cmpsb
jns
ffreep
pop
adc
stos
cmp
jp
mov
call
mov
pop
add
mov
mov
cltd
lock
jne
mov
jmp
mov
sti
push
dec
mov
xchg
popw
je
popa
sbbb
test
push
mov
adc
dec
lret
pop
ss
pop
fisttpll
in
jne
ja
cmpb
ljmp
adc
xchg
test
daa
mov
fs
mov
push
sbb
shr
cmpsb
sub
jmp
xchg
dec
int
sub
movsb
xlat
pusha
outsl
mov
xor
mov
imul
jg
scas
jecxz
ljmp
lds
mov
pop
adc
test
ds
cmp
push
hlt
mov
adc
je
cmc
fstpl
cmp
cwtl
ljmp
call
test
cli
xchg
movsb
jae
dec
ds
mov
or
fcomip
pusha
mov
mov
stc
out
mov
dec
fisttps
aam
push
jmp
addr16
subb
scas
ss
push
mov
lcall
hlt
testb
ficomps
mov
and
add
sub
scas
ljmp
adc
inc
pop
cld
xchg
xchg
into
clc
ficomps
cmp
push
std
inc
sbb
aas
dec
ljmp
xchg
out
mov
cld
jmp
es
push
int3
icebp
lret
mov
aaa
shrb
mov
xor
enter
cmp
pushf
subb
test
add
lods
enter
inc
cmp
mov
daa
mov
jmp
int3
into
rolb
mov
test
cmp
ss
ja
es
pop
jecxz
dec
insb
ljmp
repnz
jae
loope
sbb
sbb
iret
ret
adc
stos
xlat
mov
pop
cwtl
sarb
mov
inc
xor
add
out
and
pop
xor
and
mov
in
jmp
pop
sub
inc
or
adc
sbb
pop
out
and
jmp
loopne
insb
adc
push
rcr
sbb
sbb
cmpsb
mov
cmp
stos
int
mov
pushl
insb
je
in
fldcw
mov
in
aad
fcoms
scas
popa
sbb
aas
inc
inc
cmpsl
push
lods
pop
ljmp
jle
scas
aad
mov
sbb
add
popa
cmpsb
loop
pop
xchg
pop
popa
mov
scas
clc
xor
sub
mov
dec
xor
sbb
pop
dec
lret
fildll
push
sbb
sti
ds
push
or
jge
cwtl
cmp
inc
movsb
pop
cmp
das
mov
addr16
mov
adc
decl
cmp
ficomps
fildl
sub
sbb
shlb
nop
xchg
mov
add
pop
and
stos
dec
xor
lods
add
cmp
std
dec
add
shrl
sub
cltd
ucomiss
out
dec
ljmp
push
and
adc
dec
and
pop
pushf
stc
jb
lcall
aaa
in
fs
dec
clc
dec
cmp
sahf
push
testl
push
fidivrl
sbb
orb
push
es
call
push
dec
xcrypt-ofb
cmpsl
insb
outsl
cmp
push
in
hlt
jne
sub
sahf
inc
daa
rorb
jl
incl
jo
je
xchg
dec
aaa
or
jmp
in
pop
push
and
jns
cmp
xlat
stos
dec
or
cmpsl
fisubs
std
dec
ret
out
outsb
adc
imul
scas
test
aam
xorb
test
push
jae
loop
or
test
decl
lret
mov
inc
sbb
push
xor
mov
aam
jnp
decl
push
mov
add
mov
stos
inc
lods
xchg
repz
insb
cwtl
xchg
mov
call
sub
sarb
lret
xchg
dec
jbe
jle
jmp
jl
outsb
je
iret
ds
inc
ds
dec
aaa
cld
lcall
sbb
inc
jmp
int3
lods
arpl
adc
iret
push
jmp
lock
call
ficompl
pusha
jne
and
std
mov
cmp
shlb
ret
sub
inc
mov
pushf
mov
adc
push
add
subb
push
push
loope
push
jbe
lea
aam
in
pop
cld
jmp
mov
sub
adc
adc
js
jg
mov
outsl
xor
sets
enter
and
test
lock
pop
cmp
inc
sbb
cld
push
scas
cmpsb
cmp
add
push
ror
xchg
pop
cmp
mov
fdivr
ljmp
addr16
inc
scas
jo
push
jbe,pt
and
adc
repnz
idiv
pushl
outsb
pop
call
jge
es
cld
add
mov
pusha
xchg
repnz
push
sub
sbb
inc
mov
push
sahf
test
in
add
xor
ds
call
inc
lret
xor
push
sub
dec
adc
mov
cmpsl
dec
andl
sub
lcall
push
cs
push
loop
lock
cltd
les
push
and
in
icebp
mov
cli
fcoms
mov
pop
push
in
or
adc
out
jns
shrl
and
pushl
test
jge
fisubrs
nop
loop
xlat
outsl
mov
adc
adc
jge
or
lcall
xchg
nop
add
popf
daa
add
add
pop
or
push
aam
jmp
shlb
and
in
test
mov
jl
xor
lahf
imul
jge
xchg
xchg
cmp
push
scas
or
fiaddl
mov
sahf
adc
dec
push
call
loopne
es
orb
bound
push
cmp
enter
mov
push
sti
mov
cld
outsl
fstpl
dec
dec
test
ds
xchg
dec
mov
inc
insb
out
clc
push
and
fidivrs
cmp
std
test
mov
decl
lods
cmpsb
addb
rcrb
mov
or
jl
fmuls
repz
mov
jmp
scas
negb
in
inc
repz
mov
cmpsl
xchg
addr16
jbe
addr16
imul
in
mov
incl
lcall
out
inc
lea
lds
in
call
gs
push
aaa
xor
test
add
pushl
cmp
imul
fs
leave
cmp
mov
mov
les
decl
fnstsw
or
pop
and
and
shlb
je
pop
je
out
incl
mov
mov
push
or
loop
mov
js
mov
scas
ss
insl
cmc
sbb
je
sbb
cmc
ljmp
push
fidivl
stos
inc
cld
pop
filds
arpl
push
fdivr
loopne
adc
jge
ret
add
pusha
add
fcmovnu
jae
leave
add
add
add
or
int
add
or
insl
jg
or
push
adc
push
adc
mov
adc
adc
rolb
movhps
push
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
fsubr
aaa
xchg
add
add
and
add
sahf
add
leave
js
lcall
add
jne
inc
mov
push
cmpsb
pusha
bound
imul
ds
incl
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
mov
in
bound
js
and
jno
and
popa
cmpsl
xchg
xchg
and
inc
or
and
inc
dec
add
and
xor
sbb
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
jle
int
and
adc
xchg
mov
lock
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
aaa
push
andb
nop
cli
sub
std
inc
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
sahf
ja
fdivrl
add
mov
mov
loopne
mov
fsts
inc
push
adc
mov
jg
mov
cmp
add
out
cmp
xor
and
fistpl
inc
mov
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
sub
stos
pusha
xchg
pusha
add
std
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
rol
dec
lcall
std
movsl
jecxz
pop
mov
adc
or
xchg
jg
or
insb
sub
addr16
out
jmp
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
decl
fisubrl
in
mov
orb
int3
lcall
fs
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
sti
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
mov
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
fcmovnu
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
es
mov
mov
out
pop
cld
ljmp
dec
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
jns
mov
in
repnz
jno
jecxz
decl
jg
scas
cld
or
push
inc
sbb
paddb
mov
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
std
decl
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
sti
idivb
in
add
inc
adc
loope
fisttpll
out
mov
out
aas
std
cli
push
push
push
idivl
cmp
sub
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pushl
cmpsb
orb
mov
insl
fistpll
das
jmp
xchg
pop
clc
pop
hlt
sub
mov
add
lea
jg
gs
std
xorb
cmc
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
lcall
in
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
ljmp
loop
jge
push
shrl
mov
push
mov
adc
and
in
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
jbe
das
clc
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
decl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
and
push
push
jo
pusha
imul
add
mov
cmp
in
jmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
stos
or
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
loopne
idiv
adc
and
lahf
fmull
jmp
xor
enter
jecxz
scas
sub
in
pop
mov
sub
testb
incb
fisubrl
aas
mov
or
jle
in
push
inc
or
pop
jg
add
sti
mov
jg
mov
aad
test
mov
mov
in
in
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
mov
lods
loopne
sar
sub
cmp
mov
imul
dec
out
out
push
push
in
aas
mov
fsubrl
inc
fildl
sbbb
ret
push
clc
xchg
pushf
mov
repnz
shlb
mov
call
jnp
or
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jno
pop
nop
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
aas
cld
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
add
dec
mov
sub
fstpl
xor
lahf
les
sbb
sbb
cld
addl
jmp
shr
stc
mov
lahf
outsl
int3
push
sbb
rcrl
pop
test
bound
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
or
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
cwtl
dec
incl
or
out
lcall
icebp
push
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
out
push
cmp
cld
adc
inc
lds
push
pop
adc
dec
imul
or
inc
pop
xor
rorb
and
add
cmpsl
push
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
fldt
lcall
fistps
outsl
lock
in
jmp
cs
out
stc
out
mov
clc
push
std
mov
lock
dec
or
mov
pop
fists
dec
push
mov
fsubrp
dec
sahf
enter
mov
clc
incl
faddl
xchg
lcall
jne
jge
pop
cld
or
dec
ss
lods
movsb
xchg
mov
add
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
sbb
push
int3
pop
iret
and
adc
push
add
shufps
jg
add
sbb
ret
and
dec
lea
loope
xchg
push
push
sarb
inc
or
mov
push
xor
jno
lret
mull
push
inc
xchg
jae
je
repnz
imul
mov
jne
jo
imul
xor
ss
add
adc
push
inc
push
test
or
push
cmpsl
mov
inc
add
dec
movsbl
and
imul
test
add
andl
dec
fs
and
sub
pop
sbb
insl
push
dec
jo
daa
sbb
mov
dec
gs
push
lock
outsl
outsl
insb
push
and
push
outsb
popa
jo
push
jo
mov
fdivrl
cld
push
or
popa
or
push
js
or
mov
adc
aaa
push
popa
adc
ss
cmp
inc
jns
push
incb
and
push
jecxz
or
push
es
ljmp
dec
add
add
shll
jbe
sbb
xchg
cmpsl
and
dec
xchg
cmp
or
add
cmpsb
sbb
inc
jl
ftst
ror
and
dec
outsb
imul
add
pop
add
in
data16
inc
inc
sub
faddl
lea
push
testb
inc
imul
push
hlt
inc
or
dec
test
out
mov
inc
add
push
fisubs
pusha
pop
pop
inc
mov
fcoms
insb
jne
adc
data16
dec
push
xor
insl
or
add
push
ficoms
insl
inc
sbb
jo
inc
push
fildl
cmp
aam
fs
inc
ret
sub
xchg
or
sarl
cmp
popa
subl
sti
nop
sub
jb
sbb
push
subl
jns
mov
rcrb
adc
push
or
pop
xchg
push
push
push
hlt
fs
and
std
lock
orb
push
push
sbbl
jae
adc
inc
insb
and
popa
pop
inc
mov
push
sbb
inc
or
dec
lds
sub
addr16
push
pop
imulb
rorl
dec
sbb
push
adc
sbb
mov
adc
and
mov
xor
arpl
mov
lock
dec
test
sub
out
fucom
xor
inc
adc
test
sub
pop
aad
lods
jge
outsl
popw
push
shlb
lret
mov
mov
inc
xchg
popa
and
pop
fwait
push
xlat
das
ljmp
jae
pushf
inc
or
mov
sbb
pop
dec
inc
dec
or
inc
add
mov
xchg
test
rorb
test
lahf
or
fs
dec
mov
xchg
lods
xor
sbb
ja
mov
adc
jg
pop
push
adc
ja
rcrl
andb
and
sub
jo
jp
test
xchg
push
push
jg
mov
xor
cwtl
and
jbe
cmp
aam
insl
jno
orb
adc
mov
pop
test
mov
dec
rolb
push
xor
jmp
bound
or
pop
pop
lods
lods
jmp
aad
jns
adc
inc
inc
push
and
mov
dec
mov
push
inc
sbb
sub
sub
fiadds
sbb
insl
adc
or
push
es
mov
sbb
mov
ljmp
loopne
xchg
adc
stos
loope
and
iret
mov
dec
sub
mov
jnp
or
add
faddp
pop
aaa
cmp
test
inc
add
aam
and
pop
js
stc
pushf
push
jne
inc
fadds
stos
or
cmc
push
orl
jae
xor
btc
or
or
lds
insb
test
mov
addr16
rorb
jg
mov
push
adc
adc
lea
imul
scas
jno
pop
mov
outsb
push
outsl
add
xor
fadds
sub
adc
pop
jbe
fidivl
ret
sarl
and
jns
jne
fnsave
add
xor
arpl
or
js
cmp
js
mov
dec
pop
adc
and
jg
pop
out
pop
xor
push
pop
cmp
cmp
mov
and
pop
jge
adc
mov
push
popa
sbb
ja
outsb
adc
pop
inc
jmp
jno
cmp
or
lret
pop
fiadds
xchg
pop
dec
xlat
sbb
push
je
push
loopne
mov
xor
jb
jl
cmp
aam
adc
dec
inc
in
lods
jo
bound
inc
inc
and
arpl
fistpl
pop
inc
imul
sbb
push
sahf
mov
mov
mov
outsb
xor
push
inc
insb
jle
cmovnp
inc
call
inc
xchg
mov
movsb
jae
jbe
int
xor
aad
mov
mov
push
pop
adc
pop
js
inc
sahf
push
je
adc
and
sbb
and
mov
mov
inc
push
rol
push
movsb
push
gs
mov
dec
push
push
pop
xor
cmp
lods
and
adc
jnp
dec
shl
outsb
inc
push
push
adc
and
in
lods
sbb
xor
scas
dec
jnp
or
dec
outsb
dec
adc
jnp
jg
jl
ss
sar
pop
add
add
mov
pop
shll
mov
dec
shll
or
pcmpeqd
push
xchg
mov
cltd
push
addb
pop
adc
ret
shl
mov
ficoms
jg
das
inc
jb
and
addb
dec
and
jl
outsl
bound
dec
movsb
bound
or
add
inc
jb
push
std
or
jb
inc
jae
inc
aam
leave
inc
shll
ss
jo
imul
insb
push
popl
lcall
or
in
js
rclb
xchg
add
icebp
push
les
and
or
fs
mov
jo
adc
shrb
scas
mov
fisubl
cmpsl
fisubl
pop
push
icebp
inc
mov
push
adc
dec
push
aad
jb
ret
or
outsl
or
adc
loope
or
fisttps
lods
mov
cmovno
fxch
test
mov
sub
jmp
addr16
xor
xchg
lods
faddl
push
inc
xor
or
xor
insb
jl
addb
pop
inc
mov
lock
adc
rorl
into
dec
int3
mov
push
or
ret
or
sub
adc
in
and
adc
shll
sub
cwtl
dec
push
jo
or
adc
pusha
subb
push
push
pusha
or
fcompl
push
xchg
push
insb
xor
xor
mov
inc
or
stos
sub
xchg
movsl
lods
pop
and
cmp
test
jnp
xchg
mov
and
sbb
or
inc
lds
test
inc
and
adc
rcl
and
or
enter
push
push
loop
xchg
xchg
movsl
outsb
shrl
int3
out
mov
loop
inc
jbe
pusha
jno
js
sub
icebp
add
das
sbb
sbb
loopne
cmp
adc
add
sahf
test
int3
add
pop
aad
xor
iret
jns
shlb
sub
push
cmp
cltd
nop
inc
fisttpl
fs
cmp
and
push
test
push
sub
push
or
sub
add
aam
daa
out
cmc
inc
fsub
or
add
pslld
stos
enter
cmpsb
addr16
or
push
mov
lock
out
adc
add
sub
pop
xchg
dec
xchg
pop
dec
push
mov
imul
push
mov
int3
add
push
pop
pop
pushf
data16
dec
jo
add
jmp
jg
adc
negl
and
adc
jp
int3
sub
inc
outsb
and
dec
add
lods
and
mov
or
or
jg
lcall
cmp
hlt
or
inc
sbb
xchg
lret
jnp
out
mov
inc
inc
cltd
push
cmp
aaa
mov
jae
loope
and
pop
adcb
movsb
mov
dec
fists
push
insb
pop
add
sti
lret
addl
and
mov
jb
popa
adc
mov
rclb
inc
cs
adc
fwait
mov
add
insl
rcrb
pusha
dec
xchg
mov
push
lahf
add
es
jg
add
add
xchg
and
add
test
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
